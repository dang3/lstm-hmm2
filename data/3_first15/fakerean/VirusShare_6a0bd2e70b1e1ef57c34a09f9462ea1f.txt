sbb
add
mov
sbb
push
lret
subl
stos
dec
push
sub
xchg
rcrl
outsb
std
les
sub
cmp
cmc
pop
dec
sbb
ret
sub
add
test
leave
notl
fists
or
pop
pop
enter
jne
sbb
int3
add
add
aam
repz
into
out
xor
clc
loop
out
dec
mov
mov
loop
fildll
add
fdivs
mov
scas
jecxz
jl
inc
xchg
dec
push
in
mov
add
out
cld
or
adc
enter
xchg
mov
outsl
pop
xor
into
ljmp
mov
adc
lock
rcll
mov
cmovo
mov
mov
pushf
outsl
js
or
pop
add
adc
add
mov
pop
sub
out
and
lea
mov
shrl
les
aas
fsubl
jns
shlb
shrl
repnz
cwtl
mov
icebp
pushf
ffreep
sbb
subb
jno
push
fst
lahf
xor
pop
sbb
xchg
into
jmp
xchg
js
ljmp
push
mov
jl
push
mov
stos
rcrl
xor
std
fs
xor
or
and
test
sub
fmuls
dec
push
lock
scas
aas
js
leave
sub
movsl
mov
jg
cli
das
and
mov
ja
in
mov
lods
mov
jge
sub
cltd
aam
shrl
daa
sahf
hlt
pop
jmp
int3
cmp
or
inc
insb
push
test
push
shlb
jno
shrb
jg
imul
jecxz
inc
mov
cmpsb
addb
punpckhdq
lds
or
push
sub
loope
xor
arpl
or
hlt
ljmp
fsubrl
in
xchg
sbb
repnz
pushf
mov
mov
dec
aad
ret
sub
xchg
dec
inc
jg
sbb
pop
mov
enter
fistps
sti
std
je
xor
dec
mov
subb
cmpsb
adc
cs
imul
xor
subl
adc
mov
repz
test
push
jp
cmp
dec
pop
sbb
testl
mov
cmp
pop
push
sbb
xchg
aam
jns
ss
ss
xlat
out
inc
sahf
and
loope
dec
cmp
orb
call
sub
mov
xchg
mov
or
add
int3
loop
popa
mov
cmc
iret
mov
adc
xor
sahf
fs
xchg
enter
or
icebp
lock
cltd
insl
sarw
cmpsl
or
bound
mov
cmpsl
pusha
aam
xchg
jmp
loopne
xor
fimull
out
int
pop
fcmovnu
cli
jle
insb
cwtl
lods
dec
or
test
xchg
push
lcall
adc
aam
jge
rcrb
aaa
pusha
cmp
ljmp
cli
xchg
jg
ret
stos
sub
sbb
pop
cmp
bound
xchg
idiv
and
imul
loop
out
jl
jno
out
fimuls
push
clc
jae
xor
filds
sbb
mov
arpl
cs
cs
stc
and
jg
lret
jb
outsl
cmc
out
lds
repz
xchg
cmp
xchg
mov
push
out
mov
je
cmp
and
dec
inc
gs
xor
fmul
cmp
mov
and
popa
rol
test
rorl
adc
adc
es
fnstenv
push
jmp
pusha
push
push
mov
lcall
inc
or
xor
movsl
es
xchg
in
push
sti
aaa
mov
nop
repz
jb,pt
add
push
xor
lods
loop
les
xchg
aam
sahf
sbb
push
and
int3
sbb
out
test
mov
add
mov
shrl
imul
popf
or
in
xlat
enter
int
adc
push
int3
add
jns
cwtl
push
push
xchg
scas
cmp
stc
xor
repnz
aad
pusha
xchg
xor
shl
popf
pop
xchg
fildl
out
pop
adc
push
push
out
cmpb
cmp
movsb
repz
or
nop
stc
sahf
jmp
mov
or
jg
scas
and
popf
push
shrl
pop
xchg
cwtl
mov
sub
in
xchg
test
xchg
sub
sbb
xor
lret
fsin
movsb
subb
cmpsl
xlat
out
aaa
mov
repnz
rolb
fisttps
nop
jecxz
cmpl
cs
mov
push
mov
push
in
shlb
sbb
jmp
loop
sbb
inc
test
xchg
stc
push
and
les
add
mov
shrl
mov
lock
dec
in
nop
roll
jge
in
cmp
cmp
ljmp
ds
or
aas
pusha
in
dec
popa
aas
cmp
cmc
jg
scas
push
int
pusha
scas
mov
inc
push
inc
mov
lahf
jl
insb
lods
and
cmp
cmc
das
mov
inc
sbb
add
pop
outsl
test
push
fdivl
xchg
sub
daa
roll
les
jb
test
imul
cmp
jmp
aaa
mov
push
nop
insb
fbld
aad
shrb
mov
and
data16
lods
sub
call
scas
pushf
pusha
and
ss
fwait
leave
pusha
addr16
sub
sbb
push
dec
out
sarl
inc
sub
mov
into
and
call
add
inc
and
push
adc
lds
gs
sahf
das
xor
repz
iret
pop
cmp
bound
icebp
xor
test
and
cmpsl
sub
lret
lds
pushl
jne
or
xchg
jg
or
sub
mov
mov
add
or
mov
test
push
xchg
sbb
jecxz
mov
adc
mov
lea
insb
inc
mov
or
cmpb
rcrl
rep
inc
gs
fadd
pop
insl
push
adc
sub
xor
mov
mulb
ljmp
aad
mov
mov
mov
pop
clc
push
shll
insb
das
and
xor
pushf
sbb
sub
cmpl
mov
das
in
lods
lods
aad
or
cmpsb
stos
insb
dec
mulb
cltd
pop
mov
xor
adc
sahf
lea
mov
pushf
aam
add
xchg
icebp
out
fcoml
xor
aad
outsb
fdivrl
icebp
out
adc
add
lcall
xor
cs
jg
ss
sub
fistpl
stc
jne
adc
add
clc
xorb
lods
or
cmpsl
sbb
pop
std
aam
loopne
daa
test
out
out
jno
push
jb
push
enter
and
loop
in
iret
popa
mov
mov
xor
pop
jmp
cmc
rcl
mov
push
push
pop
dec
leave
adc
adcb
pop
inc
mov
add
sub
iret
test
mov
nop
mov
inc
enter
jne
data16
pop
in
add
nop
scas
pop
lods
sub
popa
cld
jae
xchg
jb
sbb
out
stos
aam
push
mov
ret
sub
mov
aas
fdivr
nop
adc
add
or
clc
sub
mov
pop
add
mov
mov
mov
mov
adc
mov
movsb
mov
sub
je
and
add
ja
ljmp
hlt
xor
aaa
sbb
fwait
mov
mov
cmpsl
call
jl
aaa
xor
sbb
lret
lods
xchg
xchg
mov
push
add
mov
mov
sub
mov
lock
push
or
inc
or
sbb
pop
dec
sbb
lds
dec
adc
inc
jbe
lahf
cmp
aas
in
sbb
jb
imul
push
cmpsl
mov
icebp
lock
adcl
sbb
imul
cmp
xor
pop
out
jp
jae
mov
push
mov
lea
cmp
jp
mov
stos
pop
pop
dec
xchg
mov
jp
icebp
inc
mov
cmp
in
mov
or
xchg
repz
push
pop
lock
sti
aam
jne
pop
aam
push
lahf
stos
pop
push
sub
mov
insb
and
fndisi(8087
xchg
mov
lods
or
push
cmc
loope
ret
leave
dec
pushf
jl
lods
repnz
dec
cwtl
repnz
jbe
int3
pop
shl
mov
and
icebp
sub
stos
jne
lret
fwait
push
add
xchg
inc
mov
and
pop
add
mov
icebp
and
sbb
sbb
push
adc
add
movsl
lret
pop
ret
std
pop
out
ja
je
outsb
xchg
dec
mov
pop
je
cmc
es
rcl
pop
cld
lret
lahf
xchg
das
mov
aas
dec
and
adc
add
jne
test
pop
mov
xchg
push
clc
lret
mov
loopne
push
xor
jns
ds
das
jmp
xchg
push
add
movsb
pop
inc
pusha
rcrb
pop
sub
add
ja
sbb
icebp
cmpb
jnp
sbbl
jecxz
adc
rcr
test
dec
repz
and
movups
mov
jbe
inc
jp
jge
scas
adc
into
mov
mov
sub
jmp
aas
lahf
mov
imul
and
gs
dec
jp
in
jno
movsb
cmp
icebp
mov
dec
push
mov
ret
mov
cld
and
movsb
subb
pop
mov
in
push
rcrb
mov
in
or
inc
subl
push
mov
mov
or
into
xchg
stos
pop
not
add
mov
jb
mov
leave
mov
incl
cmp
pop
imul
fldenv
cmp
xor
sti
pushl
push
jmp
clc
ja
movsb
push
pop
pusha
push
sti
adc
lret
stos
mov
pop
cmpsb
icebp
xor
out
loopne
test
dec
js
dec
cmp
out
test
sub
jnp
js
sub
xchg
iret
or
jne
imul
pop
xor
icebp
std
cmp
in
pop
nop
lock
divb
pop
hlt
jecxz
popa
sarl
adc
test
repnz
jg
push
cmpl
jl
mov
inc
jns
jp
mov
cmpl
sub
jmp
imul
sbb
aad
fs
dec
lret
insb
jns
popf
mov
adc
jns
dec
ss
pop
int
and
hlt
push
rcr
lds
mov
rcll
ret
mov
aas
in
dec
xchg
scas
lods
adc
inc
adc
stos
not
sbb
dec
jo
imul
pop
insb
mov
jnp
repz
push
mov
out
lods
sub
aad
test
jae
mov
pusha
xchg
push
mov
jae
stos
in
es
int3
adc
sbb
mov
xchg
shlb
outsb
adc
rep
pop
imul
xlat
test
lret
cmp
adc
stos
lret
xchg
andb
arpl
addr16
sub
fistps
test
clc
mov
mov
mov
cmpsb
mov
sbb
push
pushf
int
or
sbb
mov
mov
inc
adc
movsb
insl
outsl
aaa
dec
shll
xchg
or
or
push
sbb
sub
add
les
std
xorb
pop
arpl
jb
enter
jl
test
lret
pop
roll
int3
test
loopne
xchg
jae
popf
adc
ljmp
inc
mov
aaa
push
push
push
mov
loop
lahf
cmpsl
out
xchg
jbe
add
inc
sub
lea
sub
arpl
mov
sub
test
sub
dec
xlat
xor
lds
push
sub
inc
daa
jno
stos
and
mov
sub
lock
cltd
xlat
clc
push
add
fstl
xchg
out
sbbl
mov
add
fldenv
inc
mov
je
pop
xchg
pop
xor
fbstp
push
push
bts
sub
jl
xchg
sub
nop
mov
lods
push
dec
lahf
cmp
dec
pop
mov
inc
rcll
jno
cmc
out
loope
mov
xor
addr16
arpl
dec
pop
iret
jbe
mov
mov
jmp
jl
push
sbb
fcmovb
mov
inc
cs
xor
pop
icebp
call
jns
sbb
in
jl
dec
mov
dec
mov
into
pop
jno
daa
push
aas
pop
inc
inc
test
mov
push
iret
push
cmp
jl
cmp
push
hlt
sbb
sbb
cli
ds
and
jns
stos
loop
or
mov
scas
clc
test
sub
push
fldt
movsb
and
mov
ret
mov
addr16
push
push
lea
vpandn
iret
jo
pop
js
sbbl
xlat
hlt
inc
pop
aaa
aas
dec
jb
loop
push
cwtl
mov
push
jge
add
jb
cmp
xlat
xchg
int3
lret
and
fcompl
dec
inc
jl
fwait
jg
pop
call
fwait
push
aam
jle
xor
movsb
pop
cmp
outsl
sahf
nop
stc
ret
or
lcall
pop
call
sbb
shr
fbld
mov
push
movsl
addr16
addr16
xor
jp
push
cmpsb
shr
xor
outsl
loop
pushw
cli
test
mov
add
jnp
or
std
cmpsl
sahf
subb
dec
mov
xor
ret
adc
shll
jb
jne
mov
mov
adc
daa
movsb
in
xor
divl
mov
cmp
sarl
frstor
pop
cmp
lods
sbb
sub
mov
stos
inc
xor
out
aaa
jbe
xor
pop
sub
fsts
sub
xchg
testb
lahf
xchg
movsl
adc
in
popf
ljmp
movsb
and
cmpsl
fisubrs
ljmp
sbb
add
push
pop
mov
mov
insl
lcall
jecxz
or
push
xor
cmp
imul
pop
jp
sbb
add
push
dec
pop
fcoml
pop
fs
push
push
dec
ret
in
repz
fsubrl
movsl
gs
mov
fsubrs
fadd
mov
dec
and
sbb
xlat
inc
sub
push
pop
adc
ljmp
or
outsb
cld
insl
scas
into
addr16
into
out
addb
popa
xchg
and
lea
adc
xchg
inc
sahf
ljmp
int
imul
mov
out
scas
ja
push
mov
mov
xchg
and
push
fwait
mov
jecxz
dec
lret
xor
std
push
int
pop
imul
les
xchg
sbb
rcrb
mov
inc
iret
pop
pop
fdivrs
cltd
out
mov
test
stos
data16
adc
mov
add
lret
sbb
pop
cli
pop
popf
mov
lret
inc
cmpsb
mov
xor
ss
int
dec
stc
dec
int3
fwait
mov
cwtl
lds
mov
insb
test
push
fldcw
and
das
or
xlat
push
pushf
push
fadd
and
jecxz
sub
mov
sti
imul
xchg
cmp
push
repnz
push
mov
fsubl
fldenv
loope
xor
dec
add
mov
lock
push
and
in
push
pop
adc
mov
push
jnp
fldt
fistps
pop
fucom
popf
insl
mov
lret
pop
fnstsw
pop
push
notb
sub
aas
ret
mov
lock
test
mov
and
pop
mov
es
adc
sbb
adc
push
add
jmp
sbb
mov
lds
outsb
call
mov
test
lea
fnstenv
mov
ljmp
xchg
pusha
and
stos
imul
sbbl
push
shrl
aas
pop
sub
pop
fnstenv
cmp
mov
push
lret
outsb
jle
aad
aas
lods
xchg
addr16
leave
fidivrs
movsb
and
pop
add
mov
or
dec
ror
cwtl
sub
pop
push
mov
roll
mov
insb
inc
les
test
xchg
cmpl
or
in
fwait
or
and
jae
out
pop
movsb
in
pop
pop
sbb
aas
dec
jb
ficoms
xor
mov
xor
pushf
inc
jb
xchg
cmc
push
jg
test
pop
inc
pop
sbb
int
xchg
dec
xor
mov
jne
out
ds
jg
jo
shr
rcl
push
jne
icebp
mov
jle
adc
pop
das
test
xchg
and
adc
cs
bound
xlat
dec
dec
jae
aas
scas
sbb
clc
in
lcall
pop
push
jbe
aad
inc
jecxz
mov
fisttpll
je
pop
inc
lcall
mov
outsl
pop
push
add
sbbb
stc
mov
fcompl
pushf
push
scas
pushf
mov
xor
fldlg2
pop
stos
inc
inc
pop
push
int
arpl
cmp
incl
jmp
adc
call
pop
movsb
mov
popf
pop
stc
xlat
fsubp
push
dec
inc
cmp
pop
push
loopne
das
in
jle
movsb
xlat
jmp
rcrb
popf
xchg
lret
out
std
sub
sub
add
cmp
mov
mulb
xchg
ret
test
mov
loopne
jae
sti
jbe
sbb
jb
cmp
mov
in
cs
cmpsl
add
pop
jo
mov
movsb
jg
xchg
pop
adc
aas
adc
popa
dec
sub
sbb
insl
adc
pop
mov
hlt
mov
pop
pop
dec
inc
repnz
loope
pushf
scas
mov
js
incl
sbb
pop
xorl
data16
faddp
mov
dec
ja
inc
mov
cmpsb
popf
mov
jg
rcrb
leave
xchg
sbb
in
jmp
mov
icebp
or
or
lods
push
mov
pop
add
jge
mov
jmp
incb
inc
mov
daa
jne
stos
xlat
inc
mov
mov
push
adc
or
inc
mov
inc
or
nop
push
mov
xchg
dec
and
mov
enter
lds
mov
outsb
adc
aad
inc
adc
sub
xchg
lea
shrb
sahf
or
data16
dec
ret
dec
arpl
cwtl
sub
mov
in
cmp
dec
push
cmpsb
xchg
sbb
pop
mulb
mov
xor
push
notb
xor
push
cmp
cmp
jno
or
and
es
add
enter
add
adc
fwait
ljmp
pop
loop
sub
xchg
addr16
and
in
adc
inc
dec
and
jl
es
out
ljmp
fs
or
cmc
das
hlt
cmpsb
cs
out
jg
sbb
push
mov
pop
mov
fwait
mov
call
or
dec
fsubs
jns
sub
pop
dec
cmp
in
adc
mov
shll
bswap
popa
jle
lcall
hlt
pop
cmp
add
dec
fsubs
xchg
das
xchg
ja
arpl
in
mov
jecxz
mov
nop
push
xchg
fcoml
leave
mov
jp
fldcw
pushf
fs
add
outsl
aas
shl
or
lds
mov
cmpsl
fstps
inc
fwait
push
adc
mov
in
or
icebp
mov
mov
sub
outsl
sub
mov
mov
dec
adc
inc
sub
or
bound
mov
nop
pop
test
xor
jg
jb
pushf
mov
pop
repz
in
and
cwtl
mov
popf
stos
cmp
inc
mov
cmp
repnz
test
nop
outsl
imul
xor
xlat
cmp
in
lcall
jmp
movsb
es
mov
loopne
jge
ret
inc
cmp
dec
scas
inc
cld
inc
sbb
or
xchg
pop
lret
and
sbb
imul
mov
lds
cmp
test
xor
pop
mov
adc
jns
sbb
sbb
and
mov
call
jge
lods
gs
in
ds
inc
cmp
std
scas
adc
in
aaa
scas
jecxz
jge
jnp
icebp
leave
cmc
push
mov
mov
ds
xlat
scas
pop
imul
decl
cs
dec
orb
inc
add
xor
pop
outsl
mov
inc
loopne
sbbl
mov
mov
jb
xor
mov
jns
sbb
xchg
or
aam
jecxz
pop
pop
not
mov
add
aas
jmp
pop
mov
cmp
scas
imul
int
jnp
je
mov
ja
scas
adc
cmpsb
aad
sbb
fldcw
std
fs
adc
xorps
jmp
mov
and
inc
mov
mov
insb
add
ja
divb
mov
sbb
es
inc
imul
repnz
pop
add
sub
popa
sbbl
aad
cmc
mov
jg
pop
aam
mov
mov
movsl
ds
xchg
rcr
push
sbb
test
mov
or
fidivrs
call
add
fidivs
std
jle
mov
sbb
rcr
out
imull
dec
push
pusha
lcall
lea
jge
pop
jo
adc
pop
xor
addl
pop
fsts
into
cmpb
or
int
in
cmp
sbb
repnz
inc
jnp
adc
push
push
movl
jg
and
adc
mov
mov
icebp
test
dec
cs
call
fistpll
lods
xor
cmp
jnp
int3
dec
mov
mov
add
jno
pop
dec
xchg
scas
adc
sbb
inc
fwait
xchg
xor
adc
pop
cmp
fsub
mov
dec
lea
mov
dec
out
sub
mov
sahf
hlt
dec
lret
and
addr16
xor
push
imul
fbstp
push
sbb
adc
add
shll
cmp
leave
push
lea
pop
into
in
ds
aas
xchg
dec
push
loopne
lods
dec
cmpsl
in
xchg
cmp
mov
push
pop
sub
jns
sahf
outsb
icebp
or
imul
lahf
aad
shld
int
sbb
mov
fbstp
push
ret
movsl
mov
mov
aas
sbb
inc
cltd
std
push
or
fimuls
cmpsl
sub
out
imul
stos
mov
jle
scas
cmpl
lds
mov
fistpl
xchg
aad
push
push
mov
test
scas
movsl
int3
xchg
and
das
repnz
mov
sub
jl
std
in
sub
xchg
stos
nop
lahf
mov
and
pop
sbb
mov
pop
fsts
test
inc
int
dec
addr16
fiadds
in
xchg
mov
pop
fistps
mov
or
dec
jne
xchg
jb
ss
lret
mov
mov
cmpsl
into
push
rolb
in
rclb
sbb
pop
jo
jbe
add
dec
stos
pusha
or
ja
inc
cld
imul
je
mov
cmpsl
jp
jg
cmp
lds
test
jne
pop
mov
jmp
sbb
jns
xor
cwtl
shl
pop
sbb
and
out
push
testb
lods
shrl
mov
addr16
gs
outsb
xor
movsl
ds
lds
xor
mov
andl
mov
xlat
mov
push
push
jecxz
dec
push
imul
fiadds
pop
pop
add
mov
lcall
iret
mov
call
push
sbb
dec
xor
pop
imul
sbb
mov
cltd
icebp
sti
fisubs
sbbb
js
mov
lret
add
dec
mov
pop
hlt
jae
sub
mov
jae
jnp
out
jae
cmp
test
mov
lcall
mov
xchg
mov
and
dec
cld
in
in
movsb
lahf
dec
bound
int3
daa
mov
jecxz
int
dec
out
pop
hlt
push
xlat
push
add
dec
push
out
jmp
loope
jp
and
inc
aaa
cmp
jmp
jne
stc
loopne
fnsave
xor
and
sub
and
jle
scas
xor
aas
out
sub
adc
mov
inc
fistl
push
push
xor
lods
std
dec
stc
lods
pusha
repz
xor
in
pop
pop
push
pop
pusha
sbb
fimull
stos
cli
adcl
les
in
incl
aad
xchg
daa
add
add
popf
out
push
stos
cmp
mov
stc
sub
rcrb
mov
rorl
addr16
pop
shlb
push
inc
mov
aaa
test
int
or
pop
fisttpll
mov
mov
in
push
mov
sti
cmp
cmp
dec
mov
jecxz
bound
jns
pop
push
dec
mov
sub
outsb
rolb
cwtl
insl
push
stc
xor
movsl
stc
mov
hlt
adcb
shl
inc
cmp
lea
push
jno
int3
pop
jmp
jbe
sub
or
arpl
dec
dec
gs
rcrl
subl
outsl
mov
popf
std
pop
out
std
xrelease
in
mov
jo
mov
dec
test
adc
dec
xchg
frstor
inc
add
jnp
cwtl
arpl
int
insb
sub
iret
lret
dec
jno
add
idivb
fwait
push
and
call
hlt
fisubrl
in
xor
call
stc
js
dec
cmpl
sahf
or
push
jle
add
cltd
hlt
pop
xchg
pop
dec
bound
mov
xchg
pop
test
cmp
lds
out
xchg
jp
test
cmpsl
lcall
sbb
int
daa
sub
arpl
mov
add
push
push
sarl
out
xchg
mov
rcll
jecxz
shrb
lret
sub
sub
jge
pop
dec
test
test
cmp
lods
fisttps
incb
sub
jb
add
inc
xchg
xchg
adc
sub
or
add
mov
cltd
jb
test
and
adc
or
jmp
jb
aas
out
mov
imul
sub
out
aas
sbb
mov
loopne
pop
adc
push
mov
push
aaa
sbb
insb
mov
getsec
cmp
xor
loop
mov
fsubl
jo,pn
jnp
call
aas
push
test
ljmp
cmp
sbb
jge
jo
ja
fisttpll
das
fbstp
inc
sbb
in
inc
filds
lret
shlb
xorl
mov
loop
jmp
scas
sub
mov
aaa
add
pushf
xchg
adc
cmpsl
pop
xchg
or
dec
dec
mov
sbb
repnz
mov
ss
mov
aas
dec
mov
sbb
sbb
pop
mov
sub
shlb
xchg
cltd
push
xchg
das
sub
mov
hlt
cmp
push
inc
inc
sbbb
loop
sub
loope
test
stos
out
mov
arpl
inc
mov
shr
sub
repz
pop
mov
mov
push
aas
jnp
rorb
or
or
xchg
popf
dec
push
nop
cwtl
jl
movsl
cmpsb
repz
cltd
add
in
dec
and
lret
mov
dec
jb
xchg
pushf
das
fstps
pop
int
mov
xor
out
clc
inc
mov
fldl
mov
addr16
lret
pop
add
scas
dec
cs
ret
jle
fcoms
mov
mov
dec
cld
pop
icebp
subl
push
push
jmp
push
jge
scas
iret
jecxz
xchg
lods
cmp
das
subb
dec
inc
imul
xchg
in
aam
in
dec
sub
mov
mov
or
adc
push
mov
jae
aam
es
xor
mov
popf
repz
das
ss
or
dec
xchg
das
int
fnstcw
es
sub
stos
pop
push
fildll
xchg
sub
int
test
je
mov
sub
cmp
mov
xchg
inc
adc
add
mov
out
dec
mov
in
add
repnz
and
xchg
cli
add
sbb
mov
adc
inc
jmp
stc
jo
iret
jb
insb
xlat
inc
dec
dec
xor
imul
insl
out
enter
xor
add
add
jnp
stos
add
adc
movsl
js
sbb
mov
jb
jmp
rorl
mov
inc
out
cli
jae
pop
pop
insb
xchg
cltd
or
adc
and
test
outsl
cmp
stos
pop
jmp
adc
and
inc
stos
das
jmp
das
imul
xor
inc
inc
lret
xor
mov
jns
add
outsl
jae
add
push
mov
in
sub
into
mov
ss
shll
push
aas
cmp
inc
adc
jnp
clc
lret
mov
mov
xchg
std
add
or
mov
out
popa
pop
xlat
sub
cld
inc
jbe
add
fwait
ja
std
int
and
mov
js
mov
mov
and
cmp
pop
push
and
jno
add
jecxz
lahf
sbb
mov
pop
hlt
pop
out
inc
movsl
push
ss
jge
dec
les
scas
and
cmpsb
ljmp
test
jae
mov
pop
and
stc
fmull
pop
es
jle
jmp
gs
fadd
sub
xchg
lea
test
ds
jnp
cmovns
ja
fcomps
mov
stc
js
mov
jge
lods
test
fldenv
mul
push
les
shll
lea
imul
js
xor
add
mov
test
insb
scas
push
xchg
leave
jo
arpl
pop
jne
push
jo
and
ljmp
jnp
enter
into
sub
jge
jbe
mov
call
dec
mov
scas
mov
sbb
pop
popa
xchg
jno
pop
arpl
or
xchg
fidivrl
sbb
test
push
mov
sub
adc
int3
jae
out
dec
mov
inc
xchg
cmp
mov
and
in
xchg
and
loop
push
add
jge
lods
lds
adc
push
xchg
idivl
dec
daa
shl
clc
cli
clc
inc
pushf
cmpsb
cmpsl
cmp
adc
rorl
ja
xchg
movsb
sar
push
xchg
push
js
cmc
adc
pop
dec
xchg
fnstsw
adc
add
xor
shr
subb
push
mov
daa
gs
mov
sub
push
pusha
pop
mov
xchg
pop
xchg
push
inc
pop
mov
or
pusha
andb
mov
and
rep
hlt
cmp
dec
loope
xlat
loopne
lea
incb
stc
repnz
adc
mov
push
inc
lret
and
push
repz
outsl
mov
pushf
orb
or
scas
or
orl
mov
or
add
js
xlat
or
cmc
out
daa
int3
gs
cmp
and
sbbl
int3
adc
hlt
jne
add
or
jbe
mov
ret
xorl
xchg
cmp
jns
outsl
clc
mov
push
in
insb
mov
mov
scas
cmp
or
push
cld
outsl
jae
sbb
and
outsb
sarb
enter
ljmp
pop
push
cld
repnz
jg
push
cmp
mull
loopne
push
fcoms
scas
icebp
fstps
jno
mov
inc
into
sarl
fisubrs
push
fwait
xor
pop
sti
mov
hlt
or
sub
add
jp
pop
movsb
cmp
inc
std
loop
imul
stos
cmc
sub
int
test
xchg
imul
clc
jnp
cmc
jmp
leave
dec
bound
cmp
pop
subl
mov
add
jb
jo
and
xchg
mov
mov
sahf
push
adc
imulb
iret
mov
les
std
enter
cmc
stos
lcall
adc
xchg
dec
mov
insb
jns
loope
and
addl
cmpsl
and
call
mov
pop
xor
sub
cld
inc
pop
insb
jg
mov
pop
les
int
in
adc
leave
sub
enter
sbb
xor
lahf
pop
push
cmp
pop
fs
cmp
adc
ja
push
mov
and
subb
addr16
xchg
sbb
xchg
rcrl
dec
mov
mov
ds
scas
das
or
outsl
sub
cld
add
sbb
in
sub
mov
nop
xchg
in
mov
mov
repnz
xchg
push
push
sbb
nop
insb
rorb
iret
js
xor
add
in
or
push
das
inc
sti
xlat
push
sub
mov
movsl
pushf
mov
xor
lahf
add
sub
in
mov
add
sub
sahf
and
jge
sar
push
lods
mov
mov
and
inc
ljmp
sbbl
stc
mov
dec
xor
adc
jne
push
cmp
dec
enter
pop
or
jb
je
nop
decb
pushf
test
and
lahf
add
push
and
inc
ljmp
cmpb
sbb
loop
mov
fwait
test
and
push
test
pusha
jne
or
or
jo
pop
cwtl
scas
sbb
adc
jmp
mov
cmpsb
inc
inc
in
ljmp
or
nop
loopne
and
std
inc
movsl
sub
arpl
mov
cmp
imul
sar
sbb
xor
mov
sub
xchg
jns
scas
mov
repz
insb
imul
adc
or
jno
hlt
test
clc
sbb
scas
out
aam
lcall
xchg
test
or
lret
push
add
pop
push
imul
add
adc
test
or
aam
adcb
mov
loope
jecxz
dec
mov
lahf
sti
test
enter
jb
lock
hlt
push
or
xor
or
inc
mov
push
xorl
adc
movsl
add
inc
add
and
or
xchg
out
mov
test
cmp
dec
sub
fs
cs
jl
sub
mov
fnsave
leave
jnp
and
scas
shlb
or
xor
push
mov
incb
sub
imul
or
fucomp
test
sarl
xlat
mov
pop
mov
popf
add
sub
rorb
imul
sbb
sbb
fs
mov
add
cmpb
jo
push
sub
imul
js
xchg
jle
stc
bound
mov
ja
out
pop
mov
sarb
jl
add
sub
popf
mov
adc
daa
pop
sub
push
in
jo
mov
mov
scas
sbb
negb
pop
add
stc
jns
out
mov
mov
pop
hlt
cmp
gs
aaa
inc
es
shlb
fnstsw
or
cmpsl
xor
outsl
daa
xlat
push
mov
cmp
out
mov
jno
test
inc
ss
sub
mov
sub
lods
or
imulb
out
je
mov
pop
ss
nop
lret
mov
xlat
lahf
dec
xchg
dec
jno
sub
mov
pop
pop
or
shl
and
leave
sahf
scas
mov
ffree
lahf
sti
add
sbb
stc
iret
fisubrs
push
push
lea
notb
sub
outsb
fisttps
push
or
inc
pop
test
mov
mov
cmp
pushf
mov
test
lret
mov
pop
add
leave
xor
push
movsb
push
pusha
pop
fistpl
dec
lret
scas
and
or
loopne
cli
mov
loop
gs
xor
ficompl
insb
lret
or
incb
and
pushf
insb
xor
lods
pop
imul
popa
pop
mov
cmp
jge
mov
mov
testb
sti
push
xlat
repnz
pop
and
out
xchg
push
sbb
xchg
popa
mov
insb
and
mov
outsl
push
popa
imul
adc
mov
jl
insl
lret
mov
repz
sub
sub
jmp
inc
or
and
iret
es
push
cmpsl
movsl
mov
mov
pop
mov
add
fdivp
or
lods
decb
sbb
enter
push
lcall
and
insb
hlt
scas
mov
int
push
stos
or
or
pop
cwtl
add
jl
popa
addr16
sahf
push
inc
and
cmpsl
push
out
xor
mov
xlat
cmp
insl
adc
mov
ja
push
and
or
mov
mov
cli
mov
pop
mov
pop
inc
in
ljmp
dec
push
jne
xor
decb
cmp
sbb
jmp
stos
add
out
dec
sub
mov
js
mov
cmp
pop
and
ja
mov
inc
add
gs
push
out
test
pop
pop
and
push
iret
push
mov
test
dec
stos
data16
scas
clc
pop
inc
shrl
sbb
pusha
push
testb
push
and
add
mov
pop
and
fidivrs
dec
lret
pop
sub
jg
imul
sbb
sub
xor
in
push
xchg
fdivr
push
xor
mov
repnz
add
test
das
aaa
xor
sahf
stc
outsb
pop
xor
dec
adc
adc
iret
movsl
adc
in
sti
mov
jno
test
imul
dec
push
mov
dec
adc
inc
jnp
xchg
movsb
inc
jno
sarl
shll
adc
jecxz
arpl
stc
shll
xchg
mov
out
push
xor
jo
mov
lods
or
or
shl
mov
clc
call
xchg
jmp
cmp
mov
mov
xor
add
test
js
fnsave
sbb
dec
mov
mov
dec
xchg
outsl
inc
or
or
out
outsb
sbb
mov
addr16
mov
mov
sbb
pushl
cmp
or
pop
jg
dec
lcall
pop
and
inc
addr16
jg
jnp
nop
sbb
pop
jg
mov
xlat
push
sub
dec
push
sub
xor
and
in
imul
push
lret
movb
repnz
shr
in
leave
mov
loop
imul
mov
mov
rorb
inc
ret
ret
mov
lret
mov
aad
nop
hlt
cld
cmc
jg
loope
outsb
aam
call
das
sub
out
into
mov
repz
mov
mov
mov
lea
mov
cmp
push
lods
out
dec
mov
mov
in
cld
std
lret
testb
fistl
fs
imul
dec
add
fsubp
lock
scas
jno
or
push
and
lsl
xchg
scas
mov
and
or
jno
mov
mov
bound
in
dec
jmp
test
pop
imul
fcom
shrl
pop
mov
int3
shll
xadd
iret
fldt
pop
dec
das
mov
sub
cmp
mov
ret
or
stos
adc
movsb
inc
and
fstpt
jbe
sub
push
pop
pop
test
xor
pushf
jo
scas
push
icebp
pop
mov
xchg
rol
sbbl
jp
mov
incl
mov
cmpsb
inc
cmp
xchg
mov
fdiv
mov
cmc
xchg
xlat
push
dec
mov
sub
lcall
mov
mov
inc
jmp
mov
test
and
sbb
gs
cmc
push
je
test
and
jns
or
dec
sbb
ds
lcall
mov
add
jmp
sbb
add
fcmove
xchg
sub
mov
adc
stc
mov
mov
cmpl
jl
xor
outsl
lcall
pop
push
filds
stos
cmpsl
test
push
popf
xor
and
fmuls
sbb
push
popf
mov
imul
and
inc
fnstcw
pop
or
addl
insl
dec
push
add
inc
into
ljmp
xchg
rcll
jg
and
dec
lret
cmp
fmuls
pop
push
sbb
dec
pop
fsubp
mov
and
lods
push
add
push
mov
nop
jge
cmp
sti
xchg
sbb
jnp
mov
cmc
mov
inc
or
add
mov
mov
pop
fsubrl
ja
test
cmp
xchg
jl
lds
xor
pop
sub
out
call
or
mov
fists
std
mov
lds
mov
adc
pop
push
mov
sti
or
loop
or
jmp
es
pop
add
jg
pop
shlb
add
ljmp
jp
push
enter
or
adc
data16
push
adc
add
mov
mov
push
ret
stos
pop
scas
sub
push
popaw
jle
mov
es
inc
sarl
aad
in
movsb
mov
ficoms
cmp
xchg
bswap
jle
lahf
cmp
push
in
push
data16
shll
mov
std
push
imul
xor
push
lock
and
add
shlb
lock
cmp
mov
adc
push
fistps
jo
push
adc
inc
pop
clc
jb
je
in
mov
mov
imul
lret
cmpsb
cltd
and
xor
or
push
push
jmp
rcrl
addl
mov
push
pop
dec
scas
scas
inc
push
stos
mov
lock
push
jno
mov
mov
cltd
mul
mov
fistpll
cld
idivl
xor
mov
sub
hlt
dec
leave
stc
add
pop
adc
sti
lcall
pop
cmpsl
xchg
fldenv
ja
add
jmp
and
adc
stos
xor
test
add
out
and
jmp
inc
mov
sub
shlb
sti
mov
or
xchg
scas
xchg
arpl
xchg
push
jge
adcl
inc
fs
enter
imul
jb
push
sbb
sbb
adc
dec
adcb
xchg
sub
add
cwtl
or
and
and
jb
mov
clc
mov
mov
aas
pop
mov
mov
bound
movsb
sarl
sahf
ret
mov
dec
add
ret
icebp
stc
fsts
int
test
scas
dec
scas
add
fcmovne
movsb
setle
and
add
dec
push
or
or
adc
mov
popf
enter
adc
outsb
sub
adc
lcall
test
add
sub
stos
mov
xchg
in
sti
das
lret
add
sbb
cmpsl
mov
fwait
push
sub
adc
push
and
insb
aad
in
jns
ss
dec
add
dec
out
rcr
fcmovnb
push
or
sub
ret
xchg
or
fidivs
in
add
adc
adc
daa
push
fwait
leave
cli
sub
xor
sbb
add
mov
xor
in
fistpll
add
pop
mov
fs
stos
xchg
fistpl
fwait
mov
ret
dec
pop
repnz
rclb
cld
dec
pop
lods
hlt
xor
neg
add
pop
gs
inc
inc
lds
inc
call
sbb
in
test
aam
or
sti
in
push
push
lods
loope
xchg
or
add
ds
mov
dec
mov
mov
lods
sti
sti
mov
push
lret
inc
adc
mov
xlat
mov
dec
aaa
push
fisttpll
pop
popa
mulb
cld
mov
insl
subb
jne
rdmsr
xor
mov
stos
test
pop
xchg
jns
pop
cmc
lods
push
jne
xchg
les
mov
pop
push
and
fs
data16
xchg
rcll
and
bound
dec
jb
xchg
enter
aaa
cmpsl
je
scas
cmp
into
cmp
shlb
fs
sub
cmp
pop
push
push
sbb
sahf
fisubs
sti
int3
dec
mov
adc
or
mov
popf
push
pop
fimull
xchg
imul
lcall
xchg
xor
mov
je
loopne
jle
imul
int3
lret
repz
mov
jmp
call
je,pn
adc
dec
out
sbb
lods
jp
pop
push
adc
pushf
inc
inc
ja
pop
outsl
jmp
std
push
fwait
xor
add
movb
loope
jne
xchg
cs
and
inc
mov
inc
aaa
lds
mov
pop
cmpl
cmc
mulb
sub
popa
je
pop
mov
test
mov
jg
xchg
push
pop
inc
cmp
icebp
je
add
push
cmpl
push
sub
fsubs
bound
lea
lahf
xchg
shr
mov
dec
sub
std
xor
push
inc
pop
add
hlt
addl
es
rorb
lcall
mov
lret
adc
scas
dec
xor
push
icebp
dec
xor
pop
sbb
cwtl
fisubrs
dec
sub
popa
subb
adcl
xchg
js
daa
cwtl
xchg
fcompl
mov
inc
ret
xchg
mov
add
sbb
hlt
cmpsb
inc
pop
aas
js
mov
movsl
adc
std
mov
or
bound
aam
mov
out
mov
xchg
mov
imul
addr16
push
jmp
add
jae
pop
icebp
xchg
fidivs
insb
outsl
cmp
add
idivl
jle
lods
or
sbb
nop
xor
in
xchg
xchg
cltd
lret
addr16
sti
stc
inc
jl
xor
sahf
dec
jno
push
mov
jecxz
inc
ret
bound
aad
push
cmp
mov
mov
lods
or
pusha
mov
fsubs
nop
push
jns
pop
out
push
mov
dec
cs
mov
cmc
dec
test
int3
add
int
adc
imul
sbb
imul
push
mov
insl
jne
and
ret
arpl
inc
movsl
xchg
bound
sbb
sbb
stos
stos
xchg
xor
sbb
outsl
add
sub
push
pop
jecxz
adc
aas
das
or
fstpl
scas
jb
sub
pop
mov
or
add
adc
sahf
lds
push
test
pop
nop
popa
xor
lcall
xor
aas
and
in
cmp
fcomps
lds
adc
xlat
push
fnsave
jo
dec
insb
mov
out
cltd
lods
adc
mov
cld
xor
int
insl
sub
test
jb
negl
pop
dec
std
shll
xlat
stc
jo
push
cmp
and
in
add
scas
rcrl
idiv
stos
rorb
hlt
arpl
mov
outsb
scas
popf
jns
mov
fmull
repz
dec
nop
jb
call
push
push
or
add
sub
test
arpl
sarb
leave
mov
cmp
mov
jge
pop
ljmp
mov
insb
lods
mov
cltd
push
adc
fwait
mov
addb
sarb
daa
jmp
mov
testl
pop
xor
pusha
popf
stos
in
mov
push
jmp
ljmp
imul
lcall
xchg
inc
sub
xor
lahf
imul
mul
and
sbb
dec
lods
inc
pop
inc
dec
hlt
mov
mov
ficompl
iret
stos
push
xor
push
cli
pop
mov
mov
int3
sub
fxch
push
lret
sbb
lret
loope
cmp
inc
cs
lds
mov
jnp
xor
cmpb
jg
sgdtl
popa
pop
mov
fs
mov
inc
push
fimuls
mov
mov
or
mov
push
push
hlt
subl
ljmp
or
push
fbstp
test
adc
or
mov
aad
lret
call
sub
xchg
sbb
into
pushf
insb
hlt
adc
mov
shll
cmp
aaa
inc
mov
adc
xchg
in
lahf
mov
jb
pop
xchg
aaa
or
icebp
nop
fbld
mov
cli
sub
mov
jecxz
xchg
aas
cmc
data16
xorb
lds
xchg
jle
insb
cmpsl
mov
mov
fwait
xor
push
cmp
xchg
psrlq
in
sbb
push
mov
inc
mov
imul
mov
scas
lods
ret
add
jbe
repz
mov
arpl
in
out
sbb
push
or
sbb
mov
dec
pop
fisubrl
addr16
fwait
popa
lods
icebp
inc
popa
sahf
and
jne
mov
out
sbb
sti
outsb
mov
in
stc
pop
xor
shll
pop
push
xor
dec
and
pop
add
or
in
adc
cli
adc
pop
lret
cmpb
sbb
mov
lret
fdivp
mov
call
push
sbb
aas
dec
cmpsb
call
repnz
and
ficompl
shrl
adcb
jae
pop
loope
cmp
cld
cmp
out
mov
or
ljmp
mov
xchg
jmp
js
sahf
repz
xchg
adc
mov
xchg
sbb
dec
and
push
repnz
out
xchg
xor
xchg
movsl
pop
push
or
repnz
lods
out
mov
sbb
popa
mov
jo
scas
fnstenv
jle
and
mov
cmp
inc
add
inc
nop
mov
lret
adc
pop
mulb
mov
mov
push
aad
outsb
xchg
xor
mov
inc
clc
arpl
sbb
jno
into
outsl
or
inc
xchg
adc
sbb
cmp
outsl
movaps
sub
pop
dec
or
ret
cmp
sbb
mov
sub
aad
mov
xor
pusha
or
scas
imul
sub
rolb
inc
scas
mov
popf
dec
pop
sti
pop
pop
dec
and
dec
mov
out
repnz
insb
xchg
xchg
mov
jmp
aaa
loop
sbbl
stos
scas
pop
add
orb
fcompl
hlt
mov
inc
pusha
sbb
arpl
push
jnp
lcall
add
or
out
xor
orl
das
dec
cmc
pop
rcll
outsl
pop
jge,pt
mov
leave
js
xchg
ficoms
sbb
rorb
cli
std
rolb
push
push
adc
dec
cmp
adc
das
pop
push
xchg
pop
retw
mov
pop
aaa
jnp
addr16
cmp
nop
and
mov
cmp
ja
push
mov
mov
packuswb
pop
jg
pop
in
fsubrl
xchg
xchg
xor
ret
out
adc
fwait
popa
loope
push
js
adc
dec
mov
mov
sbb
cmc
sub
pushf
ljmp
roll
jecxz
mov
popf
jmp
repnz
push
mov
or
xchg
jnp
cltd
cwtl
jnp
in
mov
inc
loopne
scas
jp
mov
icebp
push
dec
aaa
mov
or
inc
add
pop
mov
mov
sbb
into
ds
call
in
jecxz
mov
cld
dec
pop
push
idivb
in
mov
push
and
nop
test
lods
loopne
jmp
decb
stos
mov
inc
cmp
pop
mov
aas
jns
push
sub
push
subb
imul
insl
arpl
scas
movsl
adc
jecxz
dec
dec
cmp
enter
shrl
in
cmp
jp
data16
pop
jb
sahf
daa
mov
lret
insl
adc
in
movsb
hlt
push
mov
push
ret
hlt
sti
sbb
loop
out
leave
mov
fidivl
xchg
ja
inc
sub
scas
mov
push
out
lods
enter
push
and
test
ret
add
dec
lgdtl
pop
ficoms
push
and
mov
fwait
dec
aad
cmp
fdivrp
mov
mov
or
into
mov
inc
sub
add
push
cld
adc
arpl
in
push
push
rorl
push
mov
repnz
test
add
xchg
or
into
pop
xor
and
aas
in
popa
hlt
and
shll
adc
and
xor
nop
into
jmp
dec
shll
addr16
cltd
insl
xchg
jnp
pushf
hlt
ljmp
jmp
pop
shlb
fldenv
mov
pusha
sub
push
loope
fwait
data16
or
cmpsl
or
jl
cwtl
adc
fdivr
js
mov
cld
shll
jb
dec
shlb
jae
repnz
in
and
lcall
call
in
imul
stos
or
dec
and
xchg
fistpll
fcom
loopne
mov
add
lods
mov
stc
and
fisubrl
push
lods
sti
and
add
aad
shlb
int3
into
in
imul
in
jns
addr16
inc
mov
xchg
add
mov
fwait
push
sub
aas
cltd
mov
mov
arpl
je
mov
sub
or
out
dec
pop
jge
aas
mov
mov
rcrl
fs
adc
popa
sub
outsl
int
mov
shrl
mov
pop
test
inc
rcrb
add
movsb
mov
dec
stc
inc
stos
push
movsb
adc
call
mov
inc
loop
shll
int
je
xchg
pop
pop
mov
add
adc
mov
add
sarl
pop
outsb
jbe
lcall
adc
adc
push
loopne
sub
jp
inc
fwait
sub
pop
cmp
sbb
roll
add
add
cmp
cmpsb
xor
xor
repz
cmpsb
xchg
out
cmc
sahf
mov
or
insb
adc
or
pop
ficoms
out
movsb
xchg
fsubrl
shlb
cmpsl
adc
mov
shrb
push
dec
add
mov
and
jnp
lret
xchg
and
js
push
xor
lods
int3
xor
xor
lds
cwtl
pop
sub
adc
je
daa
adc
pop
psubsb
fs
inc
jl
mov
imul
call
rcrl
adc
ja
jnp
mov
or
clc
xor
loopne
cmp
mov
mov
out
test
and
nop
push
xchg
aaa
fwait
pop
sarb
ret
pop
pop
jle
and
les
dec
dec
clc
shl
lods
in
addr16
shrl
xchg
lahf
movsb
sub
add
mov
fadds
bound
cmpsl
or
cmpb
sbb
pusha
lds
daa
out
push
or
xchg
imul
mov
push
pushf
and
push
sbb
loope
rorl
pop
out
xchg
nop
ja
cmpsb
shl
jl
mov
inc
xor
aam
lds
pop
pusha
jo
jmp
pop
lret
cmp
lea
jne
in
jno
cltd
pop
jecxz
push
in
sbb
push
jecxz
mov
push
aad
add
mov
jno
pop
mov
jge
mov
insb
ret
pop
imul
push
out
enter
sub
nop
dec
fdivl
sub
jecxz
popa
out
repnz
stos
inc
pop
push
out
sarb
cs
loope
out
dec
pop
ss
pop
pop
pop
je
cmp
xchg
loope
repz
pop
mov
xor
mov
adc
jl
mov
jo
leave
push
bound
lea
in
loopne
add
pop
cmp
push
jecxz
addr16
fstp
dec
outsb
mov
sbb
or
sbb
popf
jno
fdivs
or
insl
mov
mov
push
push
aas
lea
cmp
cmpsb
jns
pop
punpckhdq
clc
dec
mov
lods
dec
fstl
daa
mov
mov
out
pop
loop
int3
adc
cmp
movsb
cli
jl
and
pop
xchg
jne
repz
and
scas
jno
fs
sar
xor
ljmp
or
jmp
mov
filds
insb
inc
mov
jge
movsb
pusha
push
ds
test
xor
outsb
push
jp
testl
jno
inc
ret
sbb
insb
test
clc
ret
icebp
push
and
pop
gs
lcall
xlat
or
cmpsl
aam
ret
mov
push
xchg
imul
cmp
mov
sbb
orb
xchg
cltd
shll
pop
xchg
das
mov
lock
jge
mov
cli
jno
dec
subl
adc
inc
mov
jmp
pop
iret
pop
jo
inc
sahf
pop
gs
insb
sub
inc
subb
roll
imul
mov
ja
xor
in
leave
inc
sub
mov
adc
and
dec
mov
mov
push
loope
das
mov
pop
fidivrl
mov
aad
and
pushf
xchg
cmc
aas
xor
xchg
inc
pop
fistpl
test
inc
xchg
cmc
dec
in
pop
jmp
fsubl
push
adcb
cs
mov
js
lods
mov
sub
inc
inc
mov
dec
pop
pop
adc
jge
dec
push
adc
mov
mov
iret
ljmp
test
jp
insb
cmp
in
ficoml
mov
xlat
fwait
out
adc
adc
mov
andl
cmc
addr16
inc
fisttpl
pop
adc
ret
jbe
repz
xor
or
imul
aam
les
repnz
cmpsb
out
sbb
in
mov
dec
lret
int3
sahf
call
pop
pop
mov
xor
scas
int
cmpsl
cli
pop
mov
adc
ds
imul
sub
mov
mov
movb
dec
pop
jg
dec
cmpl
ret
mov
loop
jo
and
sub
mov
jecxz
roll
push
movb
jns
and
mov
jno
dec
sub
stos
scas
mov
clc
pushf
xchg
rcrb
movsl
lret
lods
pusha
inc
jg
push
or
jmp
daa
mov
out
in
mov
lea
out
outsb
mov
jns
ds
lock
icebp
cltd
adc
push
fadds
mov
daa
inc
pop
into
mov
div
cmp
inc
inc
mov
cwtl
pop
or
ds
imul
inc
dec
fwait
negb
arpl
mov
arpl
mov
push
sti
mov
or
addl
mov
inc
xchg
add
xchg
inc
jno
scas
mov
mov
inc
sbb
add
sti
mov
jae
in
add
in
sub
subl
sbb
pop
sub
mov
addr16
cmpsl
out
stc
fstpt
rol
test
pop
fistps
push
cltd
bound
cltd
xor
sbb
jge
cmpsl
cmpsb
and
leave
std
cmp
rcll
dec
adc
je
cli
enter
adc
jmp
addb
outsl
mov
add
xchg
in
add
call
jne
iret
inc
hlt
std
sbb
xchg
pop
cmpsl
imul
xor
cmp
stc
lcall
hlt
sbb
mov
scas
adc
cmpsb
mov
lock
jno
xchg
ret
int3
xor
pushf
pop
cmpsl
mov
shrl
sbb
adc
dec
stos
xchg
stc
mov
jmp
call
mull
push
loopne
cmpb
fs
push
mov
sti
or
lahf
jbe
mov
dec
inc
gs
jmp
mov
dec
xchg
mov
and
mov
sbb
cli
fnstcw
test
mov
xchg
inc
dec
aas
push
adc
xchg
lret
shll
ja
ja
out
xor
addb
mov
loope
sbbb
stos
movsb
imul
add
inc
xchg
xchg
insl
push
rcl
cwtl
mov
push
xchg
data16
gs
jg
mov
lds
addr16
adc
xlat
popf
insl
adc
xchg
movsb
sti
iret
xchg
lret
cmp
add
imull
in
cmp
sti
out
push
cwtl
mov
and
jle
popa
dec
fidivs
sbb
mov
cmpb
mov
sub
jnp
ljmp
xchg
push
aaa
addb
imul
int
fdivrl
inc
xchg
loop
iret
cs
push
rep
push
inc
sbb
out
mov
nop
xchg
push
dec
adc
mov
and
lret
ret
lods
rolb
mov
ja
test
aad
jb
repz
pop
das
daa
sbb
leave
jo
push
lret
sbb
or
les
or
cmpsb
add
add
mov
adc
inc
lea
fldenv
xchg
out
lods
xor
enter
fldcw
mov
enter
pop
adc
iret
xlat
in
lahf
xchg
jle
mov
mov
sti
push
lds
sbb
mov
test
popa
in
or
loopne
jbe
icebp
in
hlt
out
hlt
sub
or
push
pop
mov
sahf
inc
cmp
es
push
sbb
leave
mov
or
push
dec
mov
jl
mov
fsub
movsb
cmp
adc
adc
iret
insb
sub
in
dec
cmpsl
xorl
out
iret
cmp
jmp
mov
imul
insl
cmpsl
inc
aaa
xchg
aaa
jno
and
imul
test
mov
sbb
xor
push
mov
pop
int
mov
rolb
pushf
dec
das
dec
iret
mov
fwait
aad
sub
pop
mov
lea
nop
loopne
lock
adc
data16
pop
cwtl
mov
fwait
push
dec
or
aas
aad
push
les
nop
lcall
hlt
jb
out
imul
cmpsl
subb
xchg
mov
cli
sbbl
rcll
cltd
jmp
mov
ja
enter
or
mov
cmc
mov
test
sub
test
shlb
push
push
cmpsl
dec
fists
lea
sti
js
lahf
and
and
mov
sub
sbb
cmp
pop
cmpsb
xorl
pop
sub
dec
inc
jp
xchg
std
orb
pushl
inc
dec
lcall
xchg
adc
mov
mov
out
jle
fdivs
push
push
stos
outsb
stos
push
or
dec
jne
mov
cmp
pop
xchg
push
outsl
cmp
cmp
jle
test
sbb
pop
lods
daa
and
mov
cmp
in
std
or
jp
mov
aaa
shlb
push
arpl
ficompl
mov
iret
push
push
loopne
dec
lret
or
cmp
imul
and
add
icebp
hlt
hlt
adc
call
pop
imul
aad
nop
and
jne
inc
sbb
arpl
aam
xchg
je
inc
cwtl
dec
inc
in
ss
rcrl
loope
fsubs
xchg
push
into
push
jmp
call
add
out
cli
shlb
mov
insw
adc
out
pop
and
dec
stos
mov
mov
jns
out
mov
inc
or
sbb
fsubrp
dec
daa
out
add
out
mov
dec
or
rcll
jp
fcmovu
sub
movsl
out
sbb
add
adc
sub
arpl
out
lods
ds
and
popf
lods
xor
xchg
je
add
mov
cmp
dec
stc
jb
xchg
out
push
insl
jl
inc
jecxz
and
sub
pop
mov
inc
int
mov
mov
enter
push
test
outsl
or
mov
jecxz
jb
mov
sub
test
pop
cmpb
xchg
das
aaa
dec
sahf
in
popa
pusha
adc
adc
and
xor
rol
cmp
xchg
mov
push
mov
cmp
out
addl
sub
push
mov
pop
ds
mov
inc
mov
jns
js
je
inc
cli
ljmp
jl
clc
xorb
lods
adc
mov
mov
xchg
fimuls
push
xorb
mov
sbb
dec
imul
js
add
or
cmc
inc
das
inc
stc
dec
pop
mov
push
cmp
add
ja
inc
shrl
dec
inc
cmp
pop
in
xlat
sub
adc
or
ret
js
test
xchg
dec
adc
adc
int
aad
pop
push
test
nop
into
cwtl
or
pop
push
cmp
repnz
rol
adc
in
sbb
mov
dec
icebp
sbb
jb
xor
nop
out
and
ret
and
add
dec
adc
pushf
sbb
xor
sbb
in
jg
push
gs
cld
daa
jae
jne
push
sbb
mov
mov
das
push
mov
int
sbb
push
movb
ret
pop
call
xchg
mov
xchg
push
cmpsl
push
js
in
pushl
pop
push
sbb
popf
int3
stc
clc
ds
call
insb
xor
out
fwait
je
xchg
stos
fucomp
sbb
testl
sub
outsb
mov
pop
enter
mov
and
mov
jne
xor
jno
mov
jns
push
adc
xchg
mov
aaa
mov
inc
out
repz
sahf
les
mov
nop
sbb
cli
cs
pop
fst
ljmp
jo
insl
sbb
mov
fwait
cmp
js
dec
sarl
mov
test
in
hlt
enter
xlat
fidivs
lods
pop
hlt
lds
sbb
cli
mov
clc
idivl
aas
in
fnsave
aam
jmp
jne
cmc
xchg
mov
sub
aad
cmpsb
repz
jo
int3
jle
ret
pop
or
insl
mov
dec
fwait
test
add
push
das
rcll
arpl
mul
pop
push
jns
push
mov
xor
in
sub
nop
add
add
xchg
out
in
sub
fimuls
aas
inc
mov
mov
cmp
jecxz
pop
mov
sbb
stc
sbb
iret
add
mov
jbe
rclb
repnz
adc
push
lods
aaa
xchg
orb
jb
mov
push
jmp
stos
inc
in
dec
inc
add
test
aad
aad
or
push
shll
mov
or
jb
cs
mov
hlt
xor
psubusb
ret
into
adc
insl
xchg
aaa
cmp
inc
jb
xorl
cwtl
shlb
add
xorb
adc
fwait
pop
lcall
add
rcrl
addr16
dec
pushf
ss
sbb
cli
pop
test
sub
fmuls
outsb
dec
faddl
cwtl
xchg
cs
xor
popf
test
imul
mov
iret
arpl
or
jg
mov
sub
push
xchg
push
rorb
adc
scas
jmp
push
cmc
mov
jnp
adc
mov
or
mov
or
out
mov
mov
ja
xor
push
inc
in
cli
fiaddl
mov
rorb
sub
lea
cmp
xor
fcmovu
jecxz
imul
pop
mov
pusha
mov
je
inc
test
push
int3
xorb
test
scas
pusha
xchg
ret
clc
lds
cs
push
mov
lcall
mov
insl
fidivrs
pusha
mov
dec
push
sbb
cmc
je
jns
pusha
movsl
mov
enter
jg
mov
sbb
adc
sbb
das
mov
lea
mov
test
adc
jae
nop
add
inc
int3
sahf
mov
iret
xchg
push
mov
mov
inc
mov
pop
xor
dec
adc
ret
ss
stos
cs
mov
mov
incl
add
pop
aam
movsl
int
loope
loope
push
mov
pop
lods
les
and
and
jnp
sbb
int3
jmp
flds
push
jno
jl
movsb
xchg
cwtl
aam
xchg
jae
ret
lods
rolb
jno
ret
mov
in
cmp
jno
mov
shll
iret
lea
dec
and
or
mov
jl
xchg
fucomip
or
nop
rcrb
out
daa
clc
clc
popa
xchg
mov
fwait
ret
jecxz
or
dec
jbe
sbb
lret
add
leave
cmpsl
xchg
subl
push
mov
in
pop
add
or
inc
sbb
xor
sbb
inc
shl
push
dec
add
push
rolb
push
pop
cmp
jl
sbb
sti
clc
adc
sub
xchg
in
aam
pop
pop
mov
iret
daa
shl
test
xor
pop
imulb
inc
mov
mov
xlat
out
sub
ret
mov
inc
push
mov
cmp
mov
pop
jle
mov
mov
ja
cltd
aaa
fists
mov
push
xor
in
pop
lahf
xchg
sti
pop
jbe
jne
fprem
xor
and
and
xchg
lret
test
pop
ja
push
sbb
cmp
dec
mov
scas
push
dec
lahf
mov
imul
push
roll
add
sbb
sub
mov
xor
stos
mov
sub
inc
push
fisubl
jbe
xor
mov
pop
mov
cmp
adc
repnz
dec
out
jp
subl
jecxz
aad
push
shlb
outsl
or
addr16
and
xchg
adc
cld
or
stos
lea
insb
xor
dec
jl
cmpsb
stos
aaa
xchg
jg
pop
inc
push
or
cmp
pop
mov
add
or
sti
cli
jne
adc
lock
out
cld
lret
outsl
inc
or
xchg
mov
scas
lock
stc
sub
movb
jb
add
cltd
or
inc
jne
movsb
sub
insb
int
mov
in
rorb
push
adc
dec
jmp
je
adc
cli
inc
in
fldcw
cltd
xlat
push
das
imulb
adc
mov
std
orl
outsb
sub
test
loope
shrb
mov
mov
push
popa
xchg
mov
dec
sub
mov
xchg
xchg
mov
add
xchg
mov
inc
outsb
pop
fldcw
mov
lock
jae
adc
push
clc
push
xor
and
fsubrs
mov
sub
jle
outsb
loope
cmp
pop
fadds
jb
mov
or
cmpsb
addr16
inc
scas
mov
push
and
test
and
jle
ficomps
push
lret
ljmp
sub
pop
xor
ljmp
sbb
add
and
pop
lods
stos
mov
push
xor
into
xchg
xor
cwtl
stc
stos
and
adc
pop
pop
and
nop
inc
dec
out
jmp
xchg
and
addr16
lret
sbb
cmpsb
xchg
repz
pop
daa
xchg
fdivrl
sub
jge
dec
popa
cmc
sbb
push
or
aam
push
and
cld
iret
add
and
mov
mov
cltd
cmp
jno
enter
jbe
imul
add
xor
setle
in
repnz
stos
lock
or
cmp
mov
in
out
cli
iret
mov
cmp
ss
jl
push
push
icebp
mov
xor
inc
mov
lock
roll
jno
and
loop
lcall
hlt
nop
push
aaa
cmp
ja
lret
je
lcall
iret
into
xchg
dec
mov
pop
xchg
or
rep
xor
rcll
mov
orl
add
imul
int
std
leave
sbb
adc
pop
pop
mov
xchg
test
push
push
and
pop
test
mov
mov
loop
jno
xor
or
mov
jmp
je
sbbl
mov
jnp
roll
jno
jl
sub
xchg
movlps
mov
jle
push
data16
popf
xchg
repz
imul
ljmp
movsl
or
scas
inc
inc
ljmp
not
inc
mov
int3
jle
fidivl
sti
out
aaa
push
mov
mov
xchg
movsb
pop
xchg
push
pop
inc
mov
jb
fdivl
lret
xchg
and
xchg
mov
sub
fwait
fwait
and
movsl
inc
lds
sub
pop
push
cs
jp
lea
add
mov
js
lods
or
test
subb
push
fwait
sbb
cmp
imul
dec
push
lcall
ss
jecxz
and
scas
movsb
xorb
ds
add
scas
imul
out
sub
pushl
jbe
mov
fcoms
adc
xor
cmp
and
xchg
mov
mov
mov
das
mov
ret
imul
pop
xor
test
cs
sbb
fisttps
xchg
mov
jecxz
xchg
mov
subl
jb
cmp
and
or
sti
xchg
fistpll
aam
bound
insl
aaa
sub
dec
js
or
enter
xor
int
enter
jns
inc
jnp
enter
inc
or
pop
xchg
fwait
push
lcall
sub
movsl
sub
or
mov
mov
push
cld
mov
repnz
daa
sub
xor
jl
sahf
push
add
outsl
jg
imul
fwait
or
and
lret
orb
push
fildll
jmp
movsb
movl
and
into
sarb
adc
bound
and
test
fistl
ret
inc
dec
pushf
xchg
das
cmpsb
ror
int3
into
mov
lahf
clc
cmp
mov
test
jp
negb
mov
mov
xchg
incl
jo
push
mov
cmpb
mov
pusha
sahf
mov
fisttpl
sbb
xlat
and
ja
int3
jecxz
ds
mov
push
sete
lods
xor
or
in
shlb
or
mov
fs
dec
lcall
mov
cwtl
push
push
sub
dec
jo
sub
test
fnsave
stc
scas
xor
repnz
jno
aam
or
cmpsl
sbb
test
loope
dec
lret
in
adc
insb
inc
adc
sbb
adc
xor
popf
outsb
mov
stos
jecxz
pusha
xor
xor
push
push
pop
vpcmpgtb
icebp
xor
mov
xor
dec
sub
lret
adc
sub
or
ffreep
int3
std
pushf
inc
sub
jns
incl
dec
sub
adc
mov
movq
stc
pop
push
dec
mov
outsb
inc
mov
jge
mov
jbe
push
jb
bound
lret
pop
or
addl
add
subl
aaa
jo
cmp
push
imulb
jae
push
add
lods
outsb
dec
enter
adc
lock
mov
inc
pushf
mov
fnstenv
push
repnz
xlat
inc
pop
daa
inc
lret
mov
adc
mov
idivb
xchg
and
mov
sub
mov
icebp
mov
or
fmul
int
lock
clc
in
lods
aad
andl
cld
cmp
clc
xlat
ds
sub
and
and
xchg
pop
dec
mov
shrb
xlat
repnz
and
movsb
in
dec
leave
mov
add
xor
and
sbb
dec
mov
out
scas
andl
xlat
push
xor
or
xor
int
mov
shl
scas
inc
pop
fcmovnb
add
gs
sbb
ja
push
push
push
loopne
pop
sbb
xchg
cwtl
jle
inc
cld
movsb
or
fwait
cmpsb
push
mov
int3
inc
jmp
movsb
shrb
loop
std
jmp
dec
push
lods
aaa
outsb
add
dec
push
idivl
mov
ret
pop
pop
imul
jb
dec
jmp
mov
inc
shr
insl
divb
fwait
xchg
and
iret
jg
ds
rcll
jb
clc
fwait
xlat
fidivs
push
sbb
jo
mov
movsl
les
test
ficomps
push
enter
adc
mov
mov
or
into
xor
add
imul
inc
inc
sbb
in
stc
ret
jno
push
ret
add
arpl
lcall
or
add
and
sub
adc
mov
push
xlat
aas
std
popf
mov
jle
push
cmp
ja
sub
push
cmp
mov
push
leave
test
fistl
push
dec
fmull
bound
push
pop
pop
daa
mov
push
sarb
repz
jne
mov
out
xchg
stc
mov
push
sbb
or
xchg
sub
jmp
shrb
lea
fstl
fildll
and
call
popa
mov
cmc
pop
or
xor
pop
in
or
add
pop
push
std
das
outsl
ss
popa
dec
outsl
les
jb
mull
out
sahf
mov
movsl
or
push
out
enter
sarl
fs
cmp
aaa
popf
inc
out
shl
inc
jnp
jno
push
cmp
lcall
arpl
inc
andb
mov
ret
andb
mov
pop
fbld
push
dec
mov
cmpl
movsb
aas
jne
or
ficoms
jno
imul
mov
cmpsb
dec
sub
xchg
sbb
iret
call
stc
mov
cmc
mov
jno
jp
cwtl
sbb
inc
or
jmp
sub
frstpm(287
repnz
xchg
imul
push
xchg
inc
or
push
inc
inc
filds
ret
aas
cs
into
inc
jae
push
test
leave
mov
mov
in
dec
xchg
xchg
scas
jo
lock
cmpl
add
call
push
cmpb
mov
cld
repz
xor
bound
scas
jecxz
xchg
jl
jmp
sbb
or
aaa
pop
xlat
mov
cmp
daa
aaa
mov
dec
iret
sbb
leave
clc
icebp
mov
imul
outsl
gs
rolb
imul
pushf
mov
push
mulb
push
mov
add
jnp
mov
scas
sti
addl
cs
out
mov
xchg
mov
dec
mov
sbb
aaa
shr
fdivl
xchg
in
add
outsb
cmp
sub
xchg
pop
sub
dec
fmull
inc
test
pop
cmpsl
pop
cltd
xchg
jnp
sub
movsl
imul
mov
push
add
cmpsb
mov
dec
mov
pop
out
inc
inc
fucom
jmp
jmp
in
lcall
imul
repz
jge
and
mov
js
xor
call
adc
out
outsb
aam
ret
cmp
sub
sbb
jge
and
mov
mov
mov
mov
std
xlat
sub
popf
shrl
pop
push
dec
adc
std
aad
xchg
les
testl
loopne
push
or
inc
adc
sbb
push
sbb
xchg
inc
pop
fistpll
aad
mov
cmp
lods
inc
les
andl
dec
inc
lods
jg
pop
pusha
and
add
hlt
cmpsb
xor
sub
jb
jbe
repz
or
stc
les
call
fimull
push
mov
xchg
jo
xchg
sbb
inc
pop
enter
cmpsl
stos
shll
jge
dec
flds
fs
add
inc
leave
enter
dec
jb
lock
push
cs
xchg
add
int
scas
repnz
pop
jno
or
cmpsl
maxps
fs
mov
int
xor
xor
popf
mov
or
sub
xor
shlb
sbb
jne
pusha
mov
int
fcmovu
insl
fwait
adc
fwait
sar
lcall
dec
mov
pushf
dec
jge
xor
sbb
xchg
popl
jp
mov
dec
xchg
xabort
cld
add
pop
roll
mov
scas
add
sub
jne
icebp
iret
push
aam
cmp
mov
imul
or
xchg
inc
add
sbb
mov
scas
cmp
jle
ss
lods
adc
fisttpll
cs
mov
lods
dec
nop
inc
enter
test
gs
test
inc
or
push
jno
stos
dec
inc
std
lods
push
out
inc
int
xchg
aas
mov
adc
sub
xor
test
jne
jecxz
clc
sbb
aas
sti
inc
adc
call
jp
pop
xor
scas
adc
clc
scas
in
xor
jle
in
inc
cmc
dec
xchg
pop
loope
iret
or
rcll
pop
cmp
xor
out
gs
add
dec
hlt
or
add
ret
cmp
xor
adc
fwait
xchg
xchg
in
enter
dec
push
cmpsl
mov
mov
fsubl
inc
add
sub
cwtl
cmpsl
push
cwtl
or
sbb
loope
dec
push
repz
xor
sbb
fisubrs
dec
out
hlt
test
fcompl
push
fstl
inc
fs
je
mov
xchg
adc
mov
stc
sub
mov
pop
jmp
dec
pop
mov
inc
repz
push
js
fdivp
test
mov
xor
mov
sbb
pop
test
or
cmpsl
jno
in
inc
pop
mov
fidivrs
inc
inc
mov
xor
jb
stos
mov
imul
pushl
pop
mov
into
popa
insb
mov
test
cmpsl
pop
xchg
adc
lods
cmp
fstpt
aaa
mov
je
xor
sti
mov
xchg
mov
lcall
add
fmull
cbtw
fisttps
iret
dec
adc
push
mov
ljmp
jecxz
lods
and
aas
bnd
mov
sub
dec
icebp
sarb
mov
mov
arpl
cmp
sub
mov
pusha
jnp
mov
daa
mov
outsb
dec
cli
cmp
gs
xor
gs
fistpl
in
inc
mov
sbb
js
stos
push
test
jo
jo
emms
lock
dec
insb
sbb
ss
push
loopw
lret
jg
xor
xorb
lret
pusha
inc
mov
xor
insl
and
stos
pop
cmc
cmpsb
das
outsl
pop
fiaddl
sub
inc
loop
adc
in
inc
inc
das
iret
stos
daa
sub
fnsave
mov
and
ss
mov
ds
mov
mov
cmpsl
subb
pusha
pop
pop
push
inc
and
leave
loope
jge
and
mov
insb
in
push
add
call
jae
dec
mov
das
mov
sahf
mov
mov
test
aas
sbb
adc
bound
frstor
ret
hlt
xor
sub
fdivr
add
adc
gs
mov
mov
xor
cwtl
pop
mov
fs
mov
xor
fwait
xor
jbe
push
fsubrs
push
mov
inc
cmp
sarb
adc
addr16
sbb
ss
pop
out
mov
out
jle
aad
aam
pop
ds
je
daa
rclb
or
xchg
jnp
mov
and
cli
cmp
dec
insl
movsl
orb
xchg
cli
jp
pop
dec
dec
push
ret
stc
or
sub
js
xchg
mov
and
lret
sub
loopne
push
mov
shl
jecxz
nop
jnp
or
mov
mov
addb
or
cld
inc
inc
js
rcl
ret
inc
sub
xor
xchg
mov
icebp
push
fsub
adc
lret
pop
out
bndstx
les
andl
loopne
movsl
push
mov
cmp
jns
pushf
je
lcall
push
xchg
std
rolb
ds
lcall
cmp
cmp
and
stos
inc
jne
out
sbb
cli
jnp
adc
cmp
jno
pop
outsl
push
imul
mov
push
and
iret
inc
shlb
jnp
mov
dec
sbb
insl
call
jne
test
mov
pop
jmp
imulb
cmpsb
sub
adc
and
nop
fsubp
shr
jns
sti
xor
or
ss
jo
push
add
cmp
mov
lahf
movsl
xchg
das
dec
inc
inc
outsb
inc
mov
mov
insb
je
xchg
pop
pop
pop
scas
xor
mov
xchg
jmp
push
mov
mov
pop
sub
and
test
xchg
outsb
clc
jge
dec
fnsave
push
pop
dec
pop
testl
arpl
inc
push
push
add
adc
fst
dec
scas
negb
movsl
jne
in
imul
int
aas
or
xchg
inc
cld
jbe
shlb
push
mov
add
dec
ret
orb
jl
sbb
jae
sbb
push
xlat
xchg
in
aad
in
mov
dec
jg
orl
xor
mov
test
jno
jne
nop
fs
mov
ret
cs
jp
jge
or
aam
sbb
mov
call
pusha
testl
stc
mov
pop
xchg
lock
xchg
ret
mov
shlb
test
adc
xor
xchg
jl
outsb
es
inc
pushf
std
jbe
ja
push
imul
jbe
mov
push
out
mov
ljmp
dec
xor
cmp
ret
cwtl
and
or
mov
cmp
cld
lcall
roll
loope
movsb
sub
push
cmp
adc
in
or
cs
mov
xorl
jmp
push
push
dec
clc
rorl
nop
sahf
jg
icebp
test
inc
lds
jne
cmp
inc
pop
test
subl
fidivl
dec
mov
mov
data16
loope
sbb
mov
sti
jne
jmp
sbb
and
imul
xor
mov
jnp
loope
ja
lds
mov
test
sbb
xchg
pop
push
in
mov
cli
dec
pushf
mov
sbb
and
or
jns
inc
mov
mov
and
pop
dec
push
adcl
test
inc
lock
xor
sbb
inc
daa
cmpsl
clc
es
ret
lret
push
rcll
jno
outsb
clc
sub
add
enter
lcall
and
mov
int3
div
loopne
clc
mov
fstpt
and
test
mov
sub
scas
ret
xor
outsl
pop
loope
outsl
ljmp
rcrl
ja
mov
test
enter
push
push
xchg
sub
scas
fwait
mov
xor
adc
mov
aaa
pop
outsl
mov
fs
lret
lret
pop
js
add
lds
scas
pop
inc
or
push
mov
lret
mov
lock
inc
fmuls
sbb
sbb
inc
test
push
jmp
loop
jge
ja
fstpt
fucomp
mov
or
jb
in
jne
mov
jecxz
cmp
xchg
or
scas
push
fsubr
scas
addb
push
lea
adc
pop
sub
push
mov
inc
test
clc
mov
ret
popa
jg
out
cs
push
icebp
push
jmp
jnp
pop
call
and
push
cmp
js
pop
adc
jno
cld
push
stos
int
push
jno
mov
jb
jp
pop
mov
inc
xchg
mov
imul
mov
pop
arpl
sub
sbb
dec
les
adc
jmp
jge
aaa
mov
pop
cmpsb
in
push
fmuls
add
rcrb
push
stos
xchg
shlb
dec
sub
and
out
add
lock
cltd
test
shll
sbb
jnp
push
xlat
loope
mov
xor
cmp
insb
addb
lds
rolb
test
iret
stc
lahf
cwtl
xchg
push
inc
push
inc
out
xor
xor
leave
push
inc
lods
addl
repnz
or
popa
lods
aad
shlb
inc
lret
fisubrs
stc
and
stos
or
xorb
mov
ja
xlat
aaa
inc
xor
test
mov
add
mov
shrl
mov
pop
pop
scas
dec
lret
adc
inc
jbe
pusha
mov
pushf
dec
sub
xchg
xchg
add
fwait
nop
push
xor
pop
test
add
jmp
repnz
stos
fwait
push
xlat
cmp
jno
leave
std
push
add
or
jp
sbb
ljmp
addr16
movsb
fwait
vmovaps
and
xchg
out
xor
sbb
sub
cltd
test
xor
xor
inc
mov
fwait
popf
inc
mov
fldenv
stc
test
add
ret
xchg
bound
repnz
sbb
lret
pop
jb
mov
mov
inc
rorl
cld
std
xchg
notl
xchg
inc
insl
jl
xchg
aas
aad
cld
cld
jecxz
popf
popf
fsubrl
iret
dec
jne
add
push
add
cmpsb
or
sti
repz
sub
ror
insl
or
dec
add
cmp
fistpl
mov
outsl
nop
fsts
insb
gs
jl
add
icebp
into
xlat
mov
adc
insb
push
jle
idivb
mov
xchg
inc
sbb
jbe
jno
inc
mov
loope
lods
int3
out
je
dec
dec
cmp
cli
std
jecxz
loopne
push
xchg
icebp
push
sbb
push
mov
clc
out
addb
enter
add
in
mov
cmp
jmp
sbb
in
lahf
mov
sbb
mov
fsts
pop
xor
mov
test
in
or
test
ss
fwait
pop
loop
xchg
jae
dec
sbb
test
push
aad
addr16
js
jnp
or
insb
loopne
dec
test
and
pop
pop
mov
dec
fnclex
pop
pop
mov
xchg
cmp
test
sbb
dec
sbb
in
das
je
and
push
adcb
clc
cwtl
pop
pop
push
jge
ja
aam
jae
loope
pop
push
xor
out
xor
scas
mov
incb
pfmul
pop
aaa
pop
mov
orb
sar
in
mov
mov
arpl
sbb
cs
xchg
push
icebp
mov
pop
loopne
lods
dec
insb
data16
inc
lea
add
sub
push
push
sbb
mov
fidivrs
aad
and
repz
dec
out
push
mov
aas
cmpsb
and
sbbl
dec
jle
repnz
jp
fsts
jb
sbb
push
fstpt
hlt
cmp
out
adc
inc
xchg
mov
fisttps
inc
inc
pop
outsb
imul
inc
fnstcw
pop
sub
popa
movsb
sub
pop
jno
fstpt
cmpl
add
pop
push
cmpsl
sbb
mov
jl
in
mov
push
sbb
out
mov
cmp
cmp
push
or
icebp
sahf
xor
jns
pop
pop
sahf
pop
and
xbegin
push
scas
daa
fidivrl
adc
push
fidivl
push
pushf
popf
fsubrl
adc
push
je
ficompl
mov
push
push
imul
fsubs
cwtl
in
pop
add
adc
jnp
clc
adc
lret
push
lea
mov
jg
aaa
fcoms
jae
push
pop
sub
dec
aam
jne
js
lcall
pop
test
aam
push
ffree
sub
xor
lea
xlat
adc
sbb
cld
aaa
jb
cs
inc
sbb
pushf
xorl
inc
and
shrb
mov
and
pop
lds
push
and
pop
mov
mov
dec
pusha
adc
dec
pop
mov
scas
lret
mov
lret
mov
inc
cmp
sbb
inc
xchg
xchg
mov
repnz
divl
lds
mov
out
pop
xchg
dec
adc
shll
fstps
sub
movsl
stos
insl
jg
lds
std
mov
inc
xlat
lods
jbe
inc
nop
dec
repnz
xchg
sub
mov
mov
hlt
add
or
aaa
imul
fsubrs
cmc
push
dec
in
outsb
enter
and
scas
sbb
arpl
push
fxch
jne
mov
stos
lea
dec
notb
out
inc
lret
popa
push
mov
pop
push
call
imul
mov
lret
cmpsl
or
fs
popf
sub
cmpsl
xorl
jne
hlt
push
jg
mov
sbb
sti
enter
lea
dec
sbb
dec
pop
in
test
mov
dec
jno
enter
cli
xor
xor
aas
mov
imul
daa
mov
jp
xchg
gs
ret
inc
mov
shll
dec
pop
push
jns
inc
xchg
push
fldl
pop
pop
mov
cmpsl
repz
sub
repz
xchg
pop
mov
fs
xchg
xchg
arpl
inc
pop
or
andb
and
xor
jne
pop
outsb
lods
test
stos
cltd
stos
mov
fstl
int3
mov
fwait
sbb
les
mov
pushf
mov
jg
xor
outsl
mov
sahf
mov
call
mov
or
dec
iret
repz
sub
fsubp
inc
add
or
daa
sbb
dec
push
iret
push
pop
loope
stos
xchg
and
inc
dec
push
pusha
xor
in
or
and
push
mov
adc
mov
or
js
es
mov
les
xor
inc
or
fcmovu
mov
jg
daa
pop
lock
shl
mov
push
push
mov
dec
mov
and
scas
adc
je
xchg
inc
ret
push
mov
call
imul
lock
pop
sbb
dec
inc
push
test
gs
out
hlt
movsl
cmp
movsl
fs
dec
aam
test
ret
jae
or
sub
int3
pop
popa
dec
sti
inc
inc
int3
jmp
aas
xchg
aad
ret
insl
sub
jns
in
xor
pusha
add
pop
stos
pop
jns
jle,pt
push
ret
pop
adc
add
enter
xchg
mov
cmp
jne
sub
pusha
inc
xor
jbe
adc
mov
xchg
arpl
js
jo
xor
ss
jno
xchg
adc
dec
cwtl
push
add
testl
sbb
fsubrl
inc
in
pusha
fwait
add
das
and
xor
repz
cli
ret
rclb
jne
mov
pushf
sub
lock
insl
adc
sbb
aaa
and
dec
xorb
sbb
jne
push
xor
push
roll
ret
xchg
mov
stc
fwait
inc
ret
notl
adcb
cmp
rclb
mov
and
fstl
inc
xchg
das
xchg
int
jmp
mov
aas
shrb
dec
cs
push
add
or
test
fildll
roll
mov
sub
aad
xchg
add
cmp
xor
dec
aas
int3
std
insb
pop
xchg
shr
lds
gs
or
lods
jbe
in
push
xchg
shrb
fnstenv
xchg
push
out
mov
rcrl
pmaddwd
jmp
ret
jg
fisubl
lods
adc
cs
stc
dec
mov
and
xchg
stc
test
stos
add
jle
cwtl
cmpsb
pushf
flds
xor
jge
mov
xchg
lods
xchg
ret
mov
xchg
mov
dec
pop
xchg
xor
mov
push
mov
xchg
je
insb
fidivl
js
movsl
sub
adc
inc
xor
movsb
push
sub
popf
sub
jmp
jnp
nop
lret
push
gs
mov
hlt
fcmove
xlat
mov
movsl
pop
cmpsb
hlt
add
sbb
sahf
in
das
lcall
lds
test
in
jmp
leave
jmp
add
stos
push
les
cmc
lds
fiaddl
xchg
les
lcall
data16
out
pushf
jne
divps
divl
jp
dec
enter
cli
repnz
ret
stos
add
mov
add
insb
adc
push
enter
jne
or
loop
out
shrb
jmp
xchg
rolb
lds
rorb
out
cmpsb
cmp
xchg
xchg
dec
mov
sbb
adc
pop
ds
fcoml
sub
popf
xchg
in
ret
in
dec
jmp
jne
mov
scas
fiaddl
aam
sbb
mov
clc
push
out
pop
jecxz
push
stos
dec
xor
out
testb
jle
adcl
mov
mov
mulb
movsl
and
out
add
fildl
mov
fwait
xchg
sbb
fmuls
dec
jmp
mov
pop
dec
jb
addr16
sahf
xchg
movsb
jecxz
or
icebp
push
xor
push
sub
cmp
cmp
inc
xchg
test
jne
dec
sub
mov
lret
mov
jbe
fs
and
sarl
outsl
inc
xor
dec
ds
sbb
cltd
mov
mov
add
jp
iret
ret
popa
pop
jae
imul
pop
repz
cmpsl
mov
jge
xor
iret
jne
mov
jle
jl
push
std
notb
adc
into
mov
xchg
mov
cli
add
out
and
test
shrb
mov
push
pop
fistpl
daa
popf
add
xchg
pop
lret
aas
out
aam
cmpb
jae
inc
roll
xor
push
jbe
mov
imul
mov
xor
fidivl
add
pop
lds
sub
clc
lock
scas
push
cmp
scas
cmpsb
inc
dec
jp
cmp
inc
sub
and
test
dec
bound
mov
stc
fldenv
fsubr
pop
jns
or
mov
mov
bound
xchg
mov
repnz
hlt
aam
test
mov
push
mov
xchg
mov
jno
pop
cmpsb
dec
stc
xchg
pop
push
mov
test
ljmp
pop
sub
ja
inc
std
psubq
lea
lret
mov
adc
lods
add
ljmp
lods
shll
sub
ja
clc
jl
cmpsl
out
lods
mov
jg
test
ja
adc
add
pop
mov
incb
call
mov
and
push
cmp
mov
or
loopne
jne
sahf
orl
das
xor
ja
out
sbb
sub
std
inc
cmpsl
ja
adc
cmpsl
and
xchg
dec
sbb
sbb
mov
cmpl
and
nop
xlat
jb
ficoml
adc
scas
jb
adc
push
jg
push
cmp
jbe
or
orb
sub
cwtl
nop
or
pop
sub
lods
jo
into
xchg
push
pop
sbb
add
lea
clc
js
mov
pop
cmp
divl
xor
pop
iret
jecxz
dec
clc
pop
pop
scas
loopne
cwtl
mov
sub
pop
andb
add
or
loope
outsl
and
movups
gs
sub
inc
mov
dec
fidivs
stos
sarl
mov
repz
jnp
mov
addr16
insl
insl
xlat
icebp
sbb
loope
pusha
add
int3
cld
leave
adc
negb
out
fsubr
lods
xchg
cli
iret
pop
mov
xchg
jmp
rol
push
lret
mov
rolb
lea
js
and
jecxz
in
sub
scas
and
fsub
iret
pop
or
jbe
xor
sub
fnsave
rorl
cltd
ljmp
jmp
mov
pop
mov
mov
pop
sub
add
sub
in
cmpsl
and
xor
imul
ret
inc
sti
test
iret
and
push
lds
gs
lods
dec
mov
sbb
call
fs
mov
repz
mov
jl
cmp
cmc
pusha
sub
fldt
dec
fcomps
mov
in
cmpsb
outsb
repnz
loope
sub
mov
xchg
outsl
pop
xchg
jg
cmp
movsb
fldenv
sub
mov
adc
pop
sub
aaa
mov
sahf
mov
fcoms
or
hlt
stos
ja
sub
add
pop
and
ljmp
out
lcall
dec
jmp
mov
cmpsb
fs
xor
out
mov
push
inc
aas
push
jb
mov
ss
push
cmp
cli
lock
xor
xor
fcmovnu
or
dec
fs
push
xchg
popa
jo
pop
pop
xlat
sbb
inc
lods
mov
mov
push
test
and
insl
xor
or
mov
repz
cmp
ret
xor
sbb
loopne
mov
pop
pop
mov
pop
gs
incl
jne
stc
pop
out
jae
stc
pop
outsl
test
insb
lods
sub
sub
lock
xor
out
push
cld
jno
inc
insb
test
and
ds
jnp
push
cmpb
xchg
movsl
inc
sbb
or
pusha
add
mov
out
cmp
jle
out
add
mov
sbb
sbb
sub
push
xchg
fwait
dec
xchg
mov
data16
xchg
out
fwait
pop
shlb
loop
imul
icebp
loope
pop
add
inc
or
nop
fidivs
mov
loop
gs
outsb
cmp
jmp
jp
sbb
aad
js
push
inc
std
add
ret
push
dec
xlat
addr16
int
and
shlb
xchg
das
or
sbb
mov
stos
repz
hlt
mov
rorl
pop
mov
or
push
push
fistl
jae
imul
mov
mov
out
aad
cmpsl
repz
push
fs
fwait
or
inc
push
sbb
imul
stos
jns
addr16
inc
int
inc
mov
pusha
aas
clc
mov
popf
and
jne
sbb
sbb
leave
jne
dec
out
jg
xchg
int3
fwait
jge
clc
xor
sbb
sbb
pop
mov
inc
out
pop
push
jne
test
mov
rcrb
xchg
inc
dec
push
push
cmc
jmp
lcall
pop
hlt
sbb
lret
mov
dec
sbb
sbb
xorb
cltd
cmp
bound
popf
es
xchg
mov
lods
js
in
lds
xchg
push
cwtl
dec
aad
jmp
dec
bound
subl
bound
add
jg
sub
or
xor
int3
cmc
rol
push
jge
mov
mov
dec
adc
adc
sbb
sbb
push
lret
test
sub
pop
add
arpl
ljmp
adc
ja
cmp
insb
and
insb
cmc
jg
dec
cmpsl
lea
pop
sarb
arpl
and
fldl
mov
aam
das
adc
add
sbb
push
adc
incb
fs
rcr
int3
ret
mov
inc
jns
jns
lcall
into
xor
xlat
pop
dec
fwait
cs
mov
lret
add
sbb
xlat
sbb
inc
sti
out
xchg
andl
insl
add
mov
fwait
icebp
xor
or
fld
pop
push
addl
sbb
xchg
xchg
in
pop
and
in
mov
or
adc
cwtl
jmp
sbb
pop
daa
push
mov
sbb
xchg
adc
xchg
pop
cli
loop
xor
sub
pop
pop
sub
dec
call
and
xor
mov
push
pop
dec
out
mov
ficompl
mov
sub
jmp
cmp
in
push
pop
xchg
fwait
inc
movsb
jl
pop
or
adc
cmp
mov
frstor
pop
adc
insb
fstpl
in
in
out
lret
ret
inc
mov
add
xor
stc
gs
cmp
int3
lret
lods
jmp
aam
cmovbe
sub
movsl
mov
mov
mov
out
cmp
fcompl
push
xor
lock
jnp
cwtl
mov
push
cli
aam
push
lahf
push
bound
adc
out
ss
add
idivb
test
mov
add
fmulp
shrb
sbb
pusha
mov
jae
lock
ret
out
mov
nop
pop
mov
jo
pop
add
fwait
pop
clc
outsl
and
dec
lock
popf
fidivrl
sbb
aam
movsl
cmp
sbb
icebp
adc
mov
or
pop
inc
and
xor
pop
divl
cs
sbb
test
adc
or
cli
mov
mov
imul
jge
mov
cmp
pop
outsl
mov
sub
pop
sbb
cltd
pop
lods
sbb
shlb
xor
jge
out
incl
xchg
fidivrl
cmp
mov
ret
adc
xor
cs
inc
or
dec
sbb
out
incb
and
sbb
jmp
es
mov
cmpsl
xchg
mov
mov
add
leave
or
mov
loope
add
cmc
out
mov
notb
mov
mov
jns
das
leave
sar
cmpsl
xchg
les
test
and
ret
xlat
in
sar
or
pop
pop
or
ljmp
out
addb
movsb
xchg
pop
jecxz
mov
das
pop
mov
cmpsb
sbb
mov
pusha
insb
ds
sub
xchg
das
lahf
enter
jne
jmp
or
pop
mov
xorl
jno
push
out
mov
sub
mov
push
rorl
in
and
lcall
test
hlt
mov
mov
xchg
mov
ret
jnp
cmpsl
inc
test
out
or
lret
push
dec
addb
jp
jg
cmpsl
data16
test
and
cs
sarl
mov
mov
xor
iret
mov
fmulp
std
xor
dec
imul
or
hlt
adc
jne
add
pop
std
inc
orl
sbb
test
jmp
inc
xchg
cmc
push
jecxz
jae
aam
test
mov
jbe
push
pop
mov
push
adc
jmp
and
jo
cs
pcmpeqb
idiv
leave
lret
stc
daa
fildl
fcoms
imul
negb
pop
mov
inc
jno
das
cmc
ss
rcl
repz
loop
cmc
nop
xor
or
sbb
int
jno
sbb
leave
and
mov
lret
outsl
jle
mov
ss
cmpsl
aad
mov
aas
mov
roll
add
arpl
and
lret
jae
out
xchg
add
movsl
xor
push
shl
mov
cmp
dec
sarb
test
and
and
pop
repz
int
cmp
push
cmpsl
xor
iret
cmp
not
push
repz
push
rcr
pop
pop
dec
xor
fmull
hlt
testl
xchg
data16
addr16
jmp
cmpsb
mov
std
or
ret
mov
in
sbb
ljmp
adc
mov
add
movntq
lcall
fisubrl
out
lcall
cmpsl
fisttps
test
cmp
bound
in
cmpsb
pop
push
cmp
imul
insb
popa
mov
scas
fistpl
rol
andl
cli
lods
insl
jmp
add
push
mov
aad
sbb
pop
in
mov
push
dec
lea
into
cmp
xor
daa
push
fisubl
jae
add
pushf
sbb
push
daa
pop
mov
cmpsb
stos
pop
or
nop
cltd
movsb
pusha
add
xchg
imul
lcall
push
add
insl
jo
test
mov
jecxz
xchg
sbb
xchg
in
popa
mov
adc
and
push
mov
stos
push
iret
lahf
add
das
jb
xor
xchg
cmp
fnclex
outsl
lock
sbbl
sbbl
xchg
repz
divl
je
aad
dec
bound
xor
xchg
jge
push
pop
mov
mov
adc
jb
adc
xor
jecxz
add
add
mov
cltd
xor
int
cmc
cmp
fdivrp
out
fnstsw
fwait
int3
jmp
stc
mov
pop
pop
hlt
lock
mov
mov
movsb
lcall
mov
jbe
ds
daa
jno
loop
rorl
ds
repnz
and
rclb
rcl
jno
pop
jg
incl
int
mov
lret
pop
andb
cmpsl
in
test
adc
sar
adc
push
out
sub
cmp
adc
mov
jns
scas
or
popf
addl
inc
ret
jle
clc
inc
mov
aaa
xor
push
js
mov
sub
push
and
in
mov
xchg
in
rcr
iret
dec
fsubrl
stc
add
jp
jnp
add
mov
in
test
sti
add
jmp
scas
stos
jmp
aas
or
mov
xlat
pop
loopne
subb
cmp
mov
in
testb
ds
pop
scas
xchg
cmpsl
rcrl
add
into
test
ja
xor
stos
fwait
dec
cmp
ss
loopw
and
std
cld
in
sbb
dec
lret
push
lcall
rclb
fucomp
mov
xchg
add
mov
insb
clc
rorl
insb
mov
inc
lcall
sti
and
or
pusha
imul
movl
call
insl
dec
movsb
loop
sub
nop
stos
cmp
mov
sub
sub
inc
adc
jb
mov
cmp
arpl
icebp
and
add
xor
add
push
das
jmp
cmc
mov
lea
jb
or
testb
clc
cmp
mov
ret
ja
cwtl
mov
lods
stos
mov
pop
lods
pop
hlt
stos
leave
cwtl
adcl
sbb
mov
push
fstp
mov
mov
mov
in
xchg
cwtl
add
pop
jb
stc
aas
sbb
push
insb
push
xor
cmpb
nop
mov
insb
sub
and
sbb
imulb
fwait
mov
outsl
jp
and
adcl
daa
fucomp
pop
cmp
jae
ljmp
xchg
push
push
jge
pop
ljmp
pop
andb
cmp
sub
push
mov
jno
sub
inc
in
cmp
lods
and
or
pop
inc
inc
shrl
push
xorl
cmp
das
jmp
in
data16
push
sbb
into
xor
jo
lea
mov
xor
xlat
dec
popa
cs
stos
mov
arpl
adc
pusha
xchg
jp
mov
sbb
cltd
push
movsl
push
je
pop
out
push
shlb
push
cli
mov
fcompl
push
std
pop
pop
inc
sub
cmp
pop
cmp
dec
lahf
lret
cs
jl
pusha
cmp
in
out
iret
fiaddl
loopne
sbb
jle
adc
adc
out
movsl
cmp
lret
bound
imul
push
imul
jne,pt
cmp
ret
or
sbb
fisttpl
sub
pop
xor
ljmp
or
pop
dec
inc
out
cmp
sbb
popa
xor
enter
or
push
mov
jg
or
jo
cmp
test
push
shlb
bound
sbb
lret
stc
repnz
or
aam
or
push
or
jmp
sub
sub
mov
lds
std
loop
hlt
imul
adc
loope
push
repnz
fisubl
sbb
sub
push
add
movsl
pop
mov
cmc
gs
xor
outsl
adc
fdiv
imul
icebp
add
pop
icebp
aas
popf
inc
cmc
loope
mov
loope
add
sub
cmpsl
and
dec
pushl
fsts
dec
jge
popa
fists
repz
mov
test
aam
pop
in
jbe
test
in
cli
es
and
orl
cld
jns
lret
jae
iret
push
test
loope
iret
pop
dec
or
push
loopne
pop
ds
mov
rcl
scas
and
fs
mov
test
aam
out
xchg
lcall
dec
test
xor
and
inc
mov
outsl
add
mov
into
bound
push
mov
pop
xlat
pushf
cmpsl
sarl
mov
shll
pop
mov
lds
loopne
cltd
out
cmpsb
jbe
dec
push
sbb
cmp
and
sbb
out
fs
inc
jae
push
fwait
das
es
scas
pop
iret
movsl
in
or
sub
test
jp
xchg
dec
xlat
repnz
xor
and
lock
jmp
ds
mov
sub
sub
movsl
add
push
test
adc
dec
mov
fnstsw
fisttps
popf
in
sbb
stc
mov
lods
push
cmpsb
aaa
cli
fstpl
bound
push
xchg
mov
pop
cmpsl
adc
xor
cmp
add
ret
pop
ds
pop
xchg
jp
mov
arpl
adc
outsl
pop
mov
int3
mov
idivb
sahf
adc
push
or
out
imul
jo
inc
cli
inc
shrl
mov
imul
mov
xor
clc
call
jmp
cmp
dec
add
mov
test
xchg
cmp
mov
or
ss
push
xor
push
sarl
in
mov
add
cmp
dec
mov
pop
je
or
jbe
inc
jmp
cmpl
sub
lea
mov
cltd
xor
adc
jbe
clc
stos
addb
mov
mov
int3
pop
outsb
add
cwtl
aaa
adc
repz
ds
stos
popa
mov
sub
stos
adc
cmp
sub
pop
xor
mov
rcrl
adc
sbb
das
lret
sbb
add
or
ret
sahf
sbb
rcll
or
pop
and
out
xchg
mov
in
lret
in
mov
xor
cmpl
repz
int
lcall
movsb
enter
push
ss
jge
jo
loop
inc
cli
shrl
mov
jne
mov
jp
popf
outsl
xor
cmp
or
pushf
neg
imul
rcrb
sbbl
hlt
push
scas
sbb
push
xor
mov
enter
sbb
mov
or
call
push
es
lahf
shrl
push
mov
test
into
cmp
fbld
pop
fs
ljmp
hlt
cmpsb
out
mov
fwait
pusha
adc
movsb
popf
or
add
add
popf
inc
push
or
dec
xor
stc
mov
mov
mov
xchg
mov
cmp
cmp
or
mov
std
stc
mov
dec
fcomi
cmp
les
scas
jmp
out
jb
push
das
push
out
cli
jmp
cmp
test
dec
sub
sbb
movsb
push
clc
pusha
rcr
repnz
mov
sub
cmpsl
shlb
dec
xlat
push
push
cmp
stos
cmp
push
push
into
daa
cmp
mov
mov
daa
addl
xchg
lcall
sub
sub
hlt
add
arpl
cmpsl
push
cmp
adc
jae
aaa
aas
dec
ja
lods
pop
push
int
adc
mov
cld
mov
dec
push
adc
xor
sti
out
outsl
fists
or
arpl
ja
lret
xor
cmp
push
out
add
pop
mov
jbe
clc
iret
push
xor
jg
jmp
movsl
bound
test
and
mov
mov
sub
js
mov
pop
push
jns
cmp
inc
add
sub
data16
cwtl
or
mov
xor
xchg
jns
add
xor
jae
imul
jecxz
shlb
dec
ret
mov
dec
mov
xchg
mov
repz
or
out
outsb
shll
scas
int3
movsl
insb
inc
mov
sbb
mov
fsubrs
in
push
lcall
out
dec
adcb
inc
adc
pushw
mov
rolb
pop
or
ja
inc
add
jns
adc
lds
adc
lea
fcos
and
cmp
or
mov
xor
shll
ret
push
loopne
push
outsl
xchg
test
mov
mov
add
jae
inc
jno
mov
xor
adcb
fbstp
cmp
call
pop
mov
fmuls
mov
mov
or
cmp
mov
out
rcrb
adc
mov
add
fistl
aas
mov
cli
cmpsb
outsl
sub
mov
lods
nop
sub
inc
hlt
push
sti
pop
incl
sub
adc
imul
xchg
adc
jae
arpl
addr16
push
out
push
divl
int3
ret
add
jb
ret
adc
xor
imul
push
sub
xor
sbb
adc
mov
int
jecxz
mov
adc
push
insb
mov
and
shl
xchg
shlb
mov
jne
adc
ret
mov
cli
daa
mov
cmpl
loopne
jle
out
out
adc
data16
xchg
inc
cmpsl
aaa
in
sarb
lds
add
int3
pop
sbb
mov
outsb
push
add
cltd
mov
outsl
push
in
and
or
inc
in
pop
mov
mov
cmp
xor
xor
aad
testl
dec
cmp
and
dec
lods
sbb
pop
mov
loopne
and
hlt
push
jb
mov
sahf
leave
inc
sub
out
push
aad
popf
out
outsl
and
rcl
mov
outsl
and
pop
inc
mov
sbb
sub
rclb
adc
adc
fstl
test
out
mov
add
mov
jno
mov
repz
jle
and
mov
imul
mov
cltd
add
fnstsw
mov
cmp
stc
push
mov
mov
sub
mov
sbb
inc
popf
mov
dec
loopne
sub
push
xchg
testb
in
add
call
ret
das
push
mov
dec
pop
xchg
fistl
mov
lock
xor
sbb
test
into
adc
lock
scas
xor
rorb
jmp
stc
in
pop
rcl
shlb
loop
pop
jge
dec
pop
scas
popa
jno
jnp
stos
in
sbb
stos
lcall
sbb
sbb
fmuls
jae
mov
clc
sub
or
nop
push
cmp
mov
ret
cli
out
jle
jmp
leave
pop
popa
xor
js
ja
push
movsb
or
notl
cmp
or
dec
adc
in
pop
outsb
js
or
cld
movsb
out
cwtl
cli
aam
out
cmpsb
imul
adc
cmpsl
mov
adc
lods
out
lods
fildll
sub
mov
iret
or
clc
push
je
scas
or
popf
sbb
enter
lcall
add
dec
add
test
push
sub
mov
and
jg
dec
jae
sub
jmp
in
mov
popa
add
sbb
adc
mov
mov
sbb
push
iret
stos
mov
imul
sbb
in
sbb
lods
jnp
mov
cmp
xor
mov
mov
movsb
outsb
jge
xchg
inc
cltd
add
cmpsb
inc
or
push
sbb
add
repz
lds
push
cli
shrb
insb
xor
incl
or
jge
inc
fmuls
leave
mov
push
sub
rcl
jl
mov
jb
xor
lret
bound
mov
shl
xchg
inc
fstpl
cmp
ljmp
adc
mov
lcall
cwtl
in
jne
pop
aaa
mov
pop
cmpsb
fadds
out
jae
ljmp
in
fwait
xchg
or
out
cmc
pusha
push
jmp
nopl
scas
dec
push
fstpt
cmp
pop
lds
push
stos
add
lret
sub
mov
fcmovb
xchg
outsl
and
pop
aad
ds
adc
jb
cmp
mov
push
add
stc
out
movsl
pop
xchg
loope
loop
sbb
mov
cltd
jne
xchg
outsb
or
hlt
dec
stc
adc
mov
mul
lahf
cs
sbb
xchg
cmp
jno
stmxcsr
push
mov
sub
mov
adc
cwtl
jae
push
fsubrs
xlat
jne
push
fs
pop
sahf
mov
negl
scas
sub
cli
ja
insl
mov
push
arpl
out
cs
jecxz
pop
testb
repnz
aas
inc
fcomps
and
shll
imul
aas
setg
test
mov
out
jns
std
dec
stc
jmp
dec
mov
arpl
je
push
inc
push
mov
sub
inc
mov
icebp
or
mov
leave
and
pusha
or
sbb
xchg
sbb
mov
jmp
std
xor
mov
frstor
jp
cmpsb
ja
and
dec
push
outsb
push
xor
push
pushf
mov
aam
and
and
lahf
lods
or
cmp
mov
es
hlt
ret
ret
cltd
loope
fnstcw
jle
clc
jp
adc
push
mov
mov
and
sbb
or
cmpsb
sub
sbb
xchg
xchg
mov
add
aam
aam
jl
inc
adc
int3
mov
cwtl
rcrb
or
pop
fxam
and
dec
jg
pusha
inc
mov
cmp
mov
cs
adc
sub
and
dec
jae
cmp
stos
jecxz
loopne
ds
out
and
xor
xadd
sub
xchg
xchg
outsb
stos
pop
fidivl
scas
inc
inc
repz
lea
ljmp
adc
cwtl
pushf
clc
popa
iret
cmp
sub
ffreep
pop
sub
or
push
sbb
sub
inc
mov
icebp
insb
cld
into
xchg
sbb
dec
jmp
jb
subl
repz
push
push
out
dec
pop
data16
sbb
push
push
and
test
xor
sub
shlb
and
jnp
movsl
and
lret
les
fcomps
pusha
jb
jne
dec
lret
or
cwtl
call
popa
xorb
inc
orl
insl
int
jg
jle
movsl
outsb
in
push
jmp
std
inc
push
fadd
std
and
inc
jecxz
insb
hlt
adc
cli
add
aad
adc
inc
loopne
dec
and
jno
add
push
sbb
mov
lahf
adc
es
or
mov
adc
ljmp
cli
rol
movsb
arpl
add
mov
adc
sub
std
mov
in
mov
dec
sbb
rcl
cli
add
je
dec
pop
in
not
ret
jno
add
xor
in
push
xchg
push
divl
push
mov
mov
lock
test
pushf
movsb
mov
sbb
dec
test
outsb
repz
xor
mov
xor
sub
jnp
hlt
jnp
lods
and
push
orl
and
lea
aam
inc
mov
das
sarb
dec
mov
andb
jbe
test
push
lret
pop
jb
cld
pop
stos
test
cwtl
mov
imul
ja
andl
pop
cwtl
out
push
test
movsb
jmp
test
std
and
or
dec
adcl
pop
daa
adc
or
xlat
xor
iret
cmc
stos
lret
or
fisubrl
inc
mov
push
mov
push
inc
arpl
test
cwtl
jmp
lret
stos
andb
inc
dec
mov
call
or
das
iret
adc
test
shrl
pop
xchg
popf
ret
data16
decl
xchg
jne
cli
js
push
sbb
jecxz
push
adc
xchg
dec
jb
mov
xor
add
jns
cmp
cmpsl
das
push
scas
mov
int
sar
out
jbe
outsb
lods
mov
ds
cmp
jge
adc
arpl
pop
add
aam
mov
push
sarl
cmpl
xchg
mov
add
pop
fimuls
filds
lea
cs
sbb
icebp
mov
pop
jecxz
std
dec
xchg
cwtl
pushf
cmp
cmp
js
pop
sub
mov
into
aad
dec
pop
mov
popf
icebp
fyl2xp1
jle
mov
xchg
jp
inc
iret
loope
ds
movsb
popf
hlt
xchg
push
mov
gs
lret
lcall
xchg
push
mov
or
push
pop
lret
xor
ja
inc
inc
push
mov
pop
call
out
push
inc
popa
xor
mov
movsb
jle
xchg
mov
jl
cmp
scas
pop
add
push
jmp
ss
pop
int3
out
dec
dec
test
and
push
dec
cmc
ja
out
dec
mov
pop
ret
sbb
fsub
jb
mov
xchg
add
adc
or
lret
inc
leave
movsl
fsubrl
or
movsb
out
test
adc
cmp
mov
push
fnstsw
iret
jne
enter
test
popf
and
cmpsl
mov
inc
or
pop
cltd
sub
insl
test
inc
popl
dec
xchg
pop
adcb
stc
xor
inc
adc
cmpl
pop
xor
jno
dec
xor
negl
or
out
xchg
xor
mull
or
mov
fisubs
nop
aaa
sbb
fimull
xchg
leave
push
adc
dec
mov
loope
rcr
ret
aam
cwtd
xor
repnz
jecxz
jecxz
jo
cli
sub
int
dec
push
jno
xor
inc
pop
fldl
pop
push
inc
adcb
mov
inc
in
sub
mov
dec
jecxz
mov
pop
xchg
aad
jge
loope
mov
jae
shl
cmc
or
xchg
aaa
ds
jno
repnz
mov
out
ja
mov
jnp
addr16
xor
xchg
adc
xchg
cltd
inc
jns
out
je
inc
dec
pop
cmp
xchg
add
lcall
imul
lods
mov
aaa
push
xchg
in
arpl
push
jbe
into
je
xchg
xor
jmp
cwtl
mov
in
dec
js
inc
sbb
pushf
mov
sbb
lahf
fwait
pop
cmc
cmpsb
mov
stos
push
adc
inc
mov
cmp
in
push
sahf
adc
ret
or
daa
xor
inc
pop
sub
adc
sub
andl
dec
ds
pop
xor
xor
and
push
pop
add
jo
outsb
imul
xchg
fimull
lods
data16
jb
aaa
jecxz
das
xchg
imul
shlb
lret
sbb
lods
scas
fimuls
xlat
js
pop
or
cmp
lret
mulb
push
lcall
cli
pusha
ss
movsl
mov
dec
sub
sti
cmp
mov
cwtl
dec
js
mov
adc
pop
je
mov
iret
or
adc
fsubrs
or
ds
jmp
int3
inc
test
cmp
and
in
inc
call
in
arpl
push
push
mov
add
insb
test
adc
jnp
pop
aam
gs
mov
sbb
jno
cmpsb
adc
insb
mov
jecxz
sbb
add
xchg
addr16
mov
push
jle
xchg
jge
in
mov
dec
leave
ret
xor
lret
sub
fwait
stos
pushf
mov
xorb
or
mov
mov
flds
xchg
jmp
xor
mov
mov
lahf
pop
scas
xor
mov
mov
mov
mov
por
out
mov
lahf
les
add
repz
mov
bsf
cmp
pop
xor
mov
push
and
mov
push
call
and
gs
scas
fisubl
jl
mov
fcomip
mov
inc
pop
xor
ret
mov
inc
inc
rclb
in
and
lds
jle
decb
jle
jne
or
imul
std
xor
mov
dec
inc
rcrb
pop
sarb
inc
mov
test
in
orl
mov
ret
fdivrs
lods
lods
cmp
stos
inc
mov
dec
adc
xor
jns
fwait
dec
mov
mov
push
js
sbb
pop
cs
sbb
popf
fistps
icebp
jg
dec
jg
ljmp
fucomi
cs
ljmp
das
mov
iret
xchg
xchg
pop
sub
pop
inc
sbb
shr
jmp
ret
push
dec
push
lods
inc
das
xor
hlt
push
test
pusha
out
sub
js
jno
xchg
repz
dec
and
mov
stc
sub
cmpsb
mov
loop
adc
inc
mov
mov
sbb
sub
or
fistl
xor
dec
pop
cmp
ror
mov
in
pop
sub
mov
fucom
mov
inc
repnz
xor
adc
and
mov
ror
imul
pusha
dec
insl
mov
rol
sbb
xchg
mov
pop
jbe
inc
cmp
lods
xchg
popf
sbbl
dec
and
mov
xlat
lea
jb
int
lret
or
lcall
scas
loope
ficompl
push
test
sbb
shrb
lods
mov
and
loope
mov
out
add
mov
mov
imul
cmpb
scas
dec
and
pop
adc
sub
push
and
xchg
pop
fbstp
xchg
out
push
or
adcl
cmp
jp
or
jbe
mov
or
stos
dec
jmp
adc
pop
xchg
outsl
shll
pop
lods
jecxz
xchg
arpl
jecxz
xchg
rolb
addb
dec
in
inc
stos
jl
sub
nop
mov
fstpt
xchg
dec
adc
add
adcb
bound
das
repnz
push
pop
mov
or
sbbl
inc
and
aas
mov
cli
inc
sub
dec
gs
inc
shll
roll
or
cmpsb
lods
orl
stos
lret
xlat
push
mov
inc
inc
inc
dec
fnsave
aam
fs
roll
cmp
je
lcall
popa
push
inc
aaa
mov
xchg
mov
push
ja
orl
lret
sbb
ror
xor
push
int3
orl
mov
shll
sti
lds
mov
xor
push
imul
pushf
iret
push
push
out
mov
std
cmpb
mov
jle
decb
push
dec
dec
mov
add
push
adc
hlt
jle
lods
daa
test
scas
mov
jns
call
mov
pop
stc
repnz
gs
jbe
in
jbe
sub
aam
jge
xor
inc
icebp
push
inc
xchg
add
xlat
mov
shl
sub
jae
pop
push
cs
jb
in
pop
es
adc
cld
fsubrs
push
sbb
addl
cmc
add
adc
dec
sub
sub
fnstenv
cmp
add
sbb
pop
push
ds
rcrb
jp
out
jle
xchg
les
jecxz
insl
test
dec
push
mov
cwtl
sbb
push
ja
sbb
popa
call
mov
sbb
test
ficompl
sahf
sbb
xchg
jge
stc
je
mov
adc
xchg
push
or
test
je
add
ss
cmp
subl
jge
jns
roll
push
out
pop
and
call
pusha
xchg
fwait
out
out
cmp
add
push
push
enter
xor
pop
or
popa
mov
jmp
lea
fiaddl
push
lahf
pusha
loope
lahf
mov
andb
push
stos
lds
sahf
into
push
pushf
rcrl
push
insl
mov
jbe
sbb
clc
hlt
adc
clc
ja
jno
jge
in
aas
pop
jecxz
ljmp
mov
jmp
mov
in
repz
push
orb
insb
fisttps
cmc
icebp
dec
loop
insl
aam
sbb
std
push
lea
push
and
add
mov
repz
cmp
and
bound
jl
mov
jecxz
aad
push
aas
push
mov
jb
or
add
adc
jbe
out
out
mov
pusha
fwait
lock
lret
inc
in
lret
inc
clc
fistps
inc
jns
adc
stc
or
sbbl
das
cmpsb
dec
push
mov
add
stos
mov
jb
pop
jg
mov
jge
push
lahf
jne
cmp
aam
in
sbb
aas
mov
jge
and
inc
nop
addr16
frstor
aam
iret
push
mov
popf
lock
add
cmp
xor
outsb
stos
cli
jb
adc
add
pushf
adc
xorb
mov
aas
out
mov
inc
cmp
jno
in
dec
loop
mov
pop
in
sub
scas
mov
adc
das
and
std
out
pop
mov
lcall
sbb
add
dec
fdivs
stos
outsb
inc
xor
push
pop
add
into
and
stc
mov
cmpsb
js
mov
les
outsb
shrb
pop
rclb
jmp
sub
call
sbb
mov
mov
jg
cmp
inc
pop
stos
and
lahf
xchg
push
into
fs
cli
mov
into
cmp
push
dec
test
lea
mov
dec
lea
fdivr
inc
data16
hlt
ret
push
add
sbb
inc
pop
sbb
mov
jle
push
jns,pt
inc
fdivrs
fdivrl
mov
movsb
in
mov
pop
and
jb
dec
pop
fldl
pop
je
pop
rorb
mov
arpl
into
insl
test
sahf
lods
xlat
xchg
lret
sub
xchg
mov
fwait
stc
sub
das
mov
xor
call
shl
mov
or
cmpl
loop
lods
mov
mov
mov
inc
bnd
cmp
xor
xor
scas
fcmovnbe
mov
jns
xchg
and
mov
stos
xchg
repnz
pop
sbb
mov
outsl
stos
and
sub
xchg
lock
adc
sbb
cmp
repz
cmp
mov
mov
sbbl
cmp
sahf
mov
dec
rol
outsb
std
jmp
xor
add
je
pop
xchg
popf
icebp
les
mov
adc
sbb
repz
movsb
nop
fisubl
mov
xor
adc
and
xor
mov
mov
arpl
leave
xchg
dec
loope
mov
or
rclb
ja
xchg
int
mov
shlb
shr
jne
lea
mov
mov
add
loope
in
xlat
xchg
mov
adc
lods
xor
js
pop
les
sbb
lock
bound
jmp
and
inc
mov
xor
mov
jmp
jo
jne
scas
fiaddl
roll
or
add
push
fst
les
call
mov
test
divb
dec
adc
je
mov
xor
or
xlat
lret
sbb
test
cmp
fisubs
jb
mov
push
dec
push
inc
data16
std
and
xchg
jnp
adc
out
mov
outsl
and
addr16
jo
xchg
cmp
sbb
std
add
cmpl
mov
adc
adc
sbb
xchg
mov
in
jl
and
sub
push
push
std
mov
jb
xor
pop
xchg
jbe
mov
cli
sbb
jecxz
repnz
lret
mov
jae
push
push
jae
arpl
repnz
jns
sub
dec
std
inc
dec
iret
mov
enter
bndstx
addb
or
in
or
mov
cld
insb
mov
xchg
sub
mov
mov
pusha
sbb
sahf
dec
inc
mov
mov
sub
sbb
mov
xor
scas
push
or
push
sbb
and
and
cltd
ret
scas
sbb
outsb
sbbl
add
mov
in
adc
xchg
xchg
push
fdivrs
arpl
mov
loope
cmc
jne
adcb
push
sbb
repnz
mov
test
push
push
push
in
xlat
jb
rorb
movsb
mov
jno
insl
gs
arpl
movsb
cltd
push
and
mov
dec
cwtl
sub
and
and
dec
sub
fs
and
jp
sbb
lods
loopne
xchg
push
jns
sbb
int
mov
lock
sub
mov
mov
pushf
push
jge
pop
add
pusha
xchg
xchg
mov
pop
fs
popf
jg
xchg
into
jge
xor
sti
and
arpl
aad
imul
mov
pop
xor
ret
push
out
scas
mov
enter
stc
sub
and
scas
or
xor
sub
leave
mov
inc
xchg
xchg
call
bswap
cmp
pushf
lcall
fdivs
lret
leave
pop
lods
pop
es
dec
jmp
inc
push
out
pusha
dec
and
inc
add
movsl
enter
fisubrs
adc
mov
lcall
pop
repnz
push
insl
add
xchg
mov
or
mov
in
enter
fsubrl
inc
movb
xor
mov
hlt
out
mov
lea
sbb
aad
add
ja
out
xchg
xlat
mov
fcompl
jbe
stos
cmpb
pop
cmp
rcll
xchg
pop
femms
adcb
xor
cwtl
push
mov
jns
dec
and
xor
jl
adc
popf
mov
sbb
mov
movsb
int
push
push
dec
add
jge
jo
das
xchg
pop
filds
dec
cmp
ds
mull
ret
lea
arpl
mov
pusha
imul
inc
push
rcrl
dec
xchg
scas
lahf
dec
lahf
out
cld
xchg
and
inc
jg
pop
mov
push
sbb
ret
mov
in
js
sbb
or
sti
not
fildll
sbb
dec
mov
nop
loope
push
xor
cmp
stc
or
inc
mov
push
aaa
stos
jmp
aaa
js
cmp
bound
call
imul
stos
lret
jnp
rcrl
repz
dec
mov
sbb
adc
adc
imul
inc
pop
sub
mov
push
scas
bound
sub
mov
pusha
andb
or
xchg
or
or
xchg
jl
lret
mov
xchg
ja
dec
cmp
outsl
xor
cmpb
lods
mov
jle
les
xchg
js
lods
xchg
bound
ja
jle
sub
xchg
rcll
jno
movsl
inc
add
lcall
jg
or
in
mov
outsb
ja
sub
into
mov
pop
sub
fwait
ss
arpl
cmp
jl
stc
mov
adcl
int3
dec
jnp
test
add
add
xchg
inc
movsb
cld
int3
xor
xlat
adc
std
add
jge
stc
scas
and
ss
lea
dec
jle
fidivl
fdivrs
cli
dec
mov
imul
nop
mov
aaa
sbb
jnp
xchg
adc
aaa
xor
ficompl
stos
pmaddwd
jl
roll
ds
repz
bound
or
addr16
pop
ret
scas
shrl
nop
das
icebp
pop
out
push
mov
lret
daa
cs
xor
and
jnp
mov
sarb
jp
jecxz
jmp
cmp
cmc
sbb
xor
pop
mov
enter
pop
in
ret
insl
js
pop
cs
insb
icebp
inc
adc
pop
push
adc
in
mov
subl
pusha
cmc
stos
adc
mov
insb
sub
iret
movsl
inc
jg
adc
mov
lret
and
sahf
jg
and
cltd
fs
outsb
arpl
push
mov
outsb
xor
or
mov
mov
shlb
jbe
sub
sahf
sbb
icebp
and
mov
xchg
add
arpl
push
mov
add
dec
movsl
shl
cmp
push
clc
or
push
hlt
xor
push
inc
pop
sbb
sarb
imul
popl
scas
jmp
push
jno
stos
xchg
mov
inc
inc
xchg
into
dec
xor
aas
into
aaa
notb
xchg
mov
add
jnp
dec
das
lret
into
jbe
out
mov
xor
jmp
in
cmp
iret
pop
stc
add
fs
imul
popf
xlat
inc
mov
inc
int
jge
sbb
test
icebp
pop
pop
mov
push
pop
lret
stos
mov
and
inc
cmp
mov
aas
pop
mov
xchg
jae
outsb
jbe
xchg
lock
adc
iret
mov
and
inc
xchg
jl
stos
lods
sbb
stos
shld
adc
mov
and
pop
bound
mov
popa
js
sbb
sub
inc
cli
out
mov
push
aam
push
pop
adc
push
cmp
inc
pop
rorb
cltd
lods
add
aas
fisttpll
push
test
data16
lret
pop
call
cltd
imul
sbb
lds
inc
pop
int3
add
fbld
push
lahf
cwtl
icebp
inc
jo
jno
inc
repz
mov
cmp
or
xchg
pop
pop
xor
mov
cmpxchg
int3
inc
dec
push
dec
repz
push
imul
jno
mov
enter
mov
in
int
lret
push
xor
and
or
inc
mov
jmp
cmpsb
mov
xchg
and
das
out
mov
mov
and
inc
adc
cmp
dec
lock
jge
mov
mov
inc
pop
int3
add
mov
out
add
movsb
mov
bound
pop
aam
cmpsl
out
and
mov
loopne
sub
leave
mov
inc
mov
sbb
cltd
insb
pop
roll
xor
in
rcl
mov
les
inc
movsb
mov
adc
push
out
add
jb
add
mov
mov
pop
adc
fistps
push
jne
shr
rcll
sti
and
sbb
fsubs
pop
insl
mov
and
mov
lods
repnz
cmpsb
sbb
pop
das
or
dec
xchg
test
cmp
jae
div
stc
popa
cmp
roll
and
add
mov
cmp
dec
jg
sbb
hlt
mov
pop
mov
adc
dec
popf
and
out
and
or
mov
xor
out
add
push
push
call
inc
xor
jns
rcl
js
lods
xorb
je
mov
int
push
insb
inc
jecxz
lret
scas
repz
sbb
cltd
xor
scas
push
xor
jne
xor
inc
dec
push
rol
stos
xor
mov
rcll
xchg
jmp
lret
lea
bound
or
lock
imul
lods
jne
and
or
popf
movsb
scas
jo
enter
mov
or
push
mov
in
sub
jne
aas
jg
mov
cmp
ljmp
xchg
sbb
sbb
push
sbb
les
sub
stos
fmuls
pop
push
dec
jne
xchg
movsl
int
jmp
jbe
clc
xchg
and
lcall
jmp
pop
xchg
fiadds
cmp
sarb
or
rcll
repz
xor
int3
or
shl
orl
sbb
repz
popf
or
dec
or
fcomp
in
sub
jp
popf
add
xchg
lahf
xchg
cli
aam
lods
fsubrs
test
mov
jne
movsl
or
ja
int3
sub
lock
push
and
jle
dec
mov
or
roll
mov
andl
repnz
fmul
mov
cwtl
fnclex
pop
add
cs
bound
orl
lahf
test
sub
hlt
push
cltd
setne
inc
dec
and
pop
push
int3
add
movsb
xchg
ftst
pop
sbb
pop
fadds
jbe
adc
ss
xor
stos
and
clc
cmpsb
mov
fwait
xchg
push
add
cmc
adc
mov
popf
scas
inc
jge
in
or
pop
xchg
gs
mov
push
rcrl
hlt
pop
push
icebp
cmpsb
fisttpl
push
and
lea
inc
fwait
ret
mov
jmp
stc
push
ljmp
sahf
test
loop
addr16
mov
lds
loope
test
test
mov
clc
sub
or
das
sbb
into
mov
fwait
and
jae
insl
add
mov
mov
mov
inc
sub
inc
out
scas
jns
lock
lret
mov
fwait
daa
lret
add
dec
repz
jo
sub
lea
imul
rcr
mov
cli
pop
in
mov
lret
jo
iret
xchg
in
fwait
xchg
sub
or
jmp
adc
xor
test
add
pop
pop
orb
push
mov
pop
arpl
jae
cmp
and
repz
mov
pop
pop
mov
out
in
addr16
mov
in
push
sar
loop
pop
gs
sbb
cwtl
push
add
sbb
js
sub
lock
imul
shr
jns
cwtl
pop
test
inc
add
in
and
shl
fsubl
mov
push
mov
push
or
imul
test
pop
mov
movsl
leave
push
aas
and
cmp
popa
or
icebp
in
or
dec
dec
or
insb
mov
sub
dec
in
push
xchg
sub
fwait
cld
movb
shrb
ss
leave
cwtl
push
or
dec
imull
imul
and
xor
imull
xor
movsb
movsb
lock
loopne
push
mov
adc
dec
dec
andb
inc
push
fsubs
das
jmp
add
jg
adc
dec
cld
stos
sarl
jecxz
dec
xor
test
imul
daa
imul
add
xchg
mov
lods
mov
std
andb
pop
inc
cmpsl
repnz
lret
pop
and
sbb
cld
pop
xor
dec
dec
pop
add
stos
mov
sahf
rclb
outsb
sub
mov
hlt
aas
fwait
pop
inc
jmp
inc
ret
jbe
int
out
decb
aad
std
out
or
cld
das
ret
inc
push
loope
lret
fiaddl
fdivrs
jg
nop
mov
in
out
lds
mov
movsb
daa
lods
jmp
aaa
adc
outsl
int3
fistpll
jg
mov
mov
or
lock
je
sbb
inc
scas
mov
fcompl
clc
pop
sub
loope
mov
lods
cwtl
outsb
sub
dec
in
hlt
cli
pop
xor
cmp
int
in
stos
mov
cmp
xchg
pop
adc
or
aam
aaa
pop
icebp
cwtl
rcrb
lret
les
inc
repnz
dec
shrl
jo
lds
inc
cmpsb
inc
call
mov
add
iret
lahf
cmp
cmp
push
je
lret
enter
mov
lahf
andb
push
xchg
adc
int
lods
jb
xchg
shl
xor
mov
jg
mov
aam
sbb
aas
rcrb
sbb
mov
jno
xchg
sbb
test
mov
push
in
jno
mov
cs
shlb
inc
movl
cltd
addb
repz
jmp
pop
loop
cmc
shld
inc
cmpsb
das
repnz
mov
jl
sbb
adc
sbb
xor
mov
xchg
fstpt
ja
dec
add
ret
xchg
xlat
ljmp
out
clc
mov
jbe
je
int
mov
imul
aam
jg
cmpsb
push
cs
add
imul
add
mov
add
popa
incb
mov
insb
les
cmpsl
daa
jg
xchg
scas
mov
je
xor
inc
ss
mov
pop
cli
test
dec
mov
and
cmc
and
clc
jecxz
add
sti
iret
pushf
sub
adc
call
jl
fisubs
jmp
fldt
lock
xchg
jbe
push
sbb
fldl
add
mov
sbb
and
in
iret
push
enter
sub
into
mov
xchg
stos
aad
stos
push
loopne
xchg
in
mov
js
inc
inc
loopne
imul
mov
test
fdivrl
bound
cmp
or
mov
jne
outsb
jb
adc
cmp
and
aaa
add
jbe
jmp
xchg
xchg
mov
cmp
out
iret
xor
add
push
adc
cmp
jp
popa
jg
pop
rorb
mov
shlb
jg
mov
out
mov
pop
cmc
dec
jle
imul
sub
out
data16
lret
mov
mov
pop
outsl
shll
mov
cmpsl
call
lds
ficompl
mov
test
jmp
push
gs
push
xchg
inc
and
stos
jo
jp
mov
repz
aas
mov
pusha
negb
loop
pop
loope
or
addr16
int3
lret
pusha
sub
push
pusha
mov
xchg
ja
or
mov
inc
movsl
dec
mov
sbbl
sbb
push
mov
pop
mov
add
inc
jns
mov
aam
jmp
adc
stos
ret
popa
aad
push
sub
ret
push
lcall
pushf
xor
sub
dec
scas
notb
pandn
mov
add
xor
cmp
shll
js
jns
mov
stos
hlt
int3
jno
subl
lahf
inc
jno
sarb
pop
push
out
repz
push
jb
mov
inc
aas
jo
movsb
int3
outsl
inc
push
in
rol
xchg
sbb
adc
repnz
pop
out
sub
repnz
por
roll
sahf
jmp
adc
add
pop
out
push
add
push
sbb
mov
in
mov
cmp
cmp
test
cmp
clc
mov
test
cli
pop
jge
inc
fnsave
or
rolb
push
insb
push
cld
lret
enter
xchg
mov
outsl
sub
fstps
lret
test
cmp
js
push
aam
enter
mov
jo
ss
xor
jbe
xor
jl
or
popa
push
add
pop
aam
xchg
sarl
scas
scas
mov
arpl
sbb
les
aas
arpl
xorb
cli
test
mov
adc
mov
add
sub
movsl
cs
cmp
stc
xlat
mov
pop
dec
pushf
loopne
jmp
xchg
mov
pop
fwait
jne
mov
sbb
sub
cli
mov
enter
push
ss
or
js
roll
add
mov
fwait
gs
fcompl
sarb
shll
xor
in
jno
add
adc
adcl
mov
xchg
or
mov
mov
jno
das
push
dec
shll
add
call
cmp
adc
ds
mov
xchg
test
cmp
insb
xor
imul
repz
xchg
lds
ljmp
inc
aam
sbb
stos
or
jge
add
pusha
int3
rclb
push
and
xchg
fidivl
mov
mov
scas
sub
imul
push
es
xchg
bnd
aas
push
adc
mov
push
mov
filds
jg
ret
loope
xor
jmp
cwtl
and
cwtl
pop
call
cmp
xchg
mov
push
mov
sbb
ret
fistl
das
push
cs
rcr
xchg
push
jne
arpl
inc
test
cmp
cmp
or
shlb
loopne
nop
cmpsl
pop
cli
jmp
movsb
lock
outsb
bound
js
ds
mov
test
enter
inc
pop
clc
cwtl
daa
popf
push
cmp
pop
fidivrs
xor
or
pusha
aaa
push
leave
inc
enter
lret
mov
mov
push
xor
or
sub
xchg
mov
scas
int3
aaa
cmp
aam
nop
or
and
and
cmpsl
js
pop
push
mov
and
or
fcoml
and
sbb
gs
or
lods
repnz
or
or
pop
lret
ljmp
mov
jl
jge
aad
jbe
out
movsl
lahf
bound
into
cwtl
ljmp
out
push
or
push
dec
ljmp
push
lret
lahf
or
mov
push
fwait
mov
fcoms
or
and
mov
inc
rolb
pushf
je
iret
ss
out
fstpt
sbb
and
shrl
mov
popf
adc
adc
movsb
int
xorl
dec
in
stos
ds
cmc
test
mov
out
in
adc
aas
mov
and
mov
mov
ja
cvtps2pi
pop
xchg
pop
shrb
lods
cmpsl
jnp
mov
insb
inc
and
dec
pop
ret
adc
sub
sbb
pusha
icebp
adc
push
fisttpl
push
jae
xor
incl
inc
pop
stos
ds
inc
imul
subl
leave
dec
int3
aad
xchg
inc
jae
pop
mov
mov
mov
pop
mov
sahf
push
pop
stos
sub
and
jp
sbb
xlat
cmp
data16
xchg
mov
add
aad
fimuls
add
leave
imul
mov
pop
push
sub
outsl
ud1
push
popf
xchg
xlat
stos
stc
mov
jle
xchg
es
pop
out
dec
clc
test
scas
mov
pusha
into
jne
outsl
xchg
lock
and
xor
cmc
sbb
loopne
adc
jle
ja
and
test
fldcw
push
mov
fldt
xchg
roll
int
sub
push
test
mov
xchg
mov
adc
and
push
icebp
mov
orb
push
fs
imul
mov
add
or
and
int
mov
popa
lret
js
inc
sahf
bound
adc
mov
icebp
aam
and
and
in
jl
dec
imul
incl
mov
aam
dec
aaa
call
mov
ficoml
pop
mov
into
jae
pop
push
imul
insb
dec
inc
sbb
shll
push
fisttpll
aaa
mov
xlat
bndstx
shl
cmp
fstl
or
in
mov
and
pusha
js
out
push
iret
cmp
enter
add
movsb
inc
jecxz
mov
in
and
movsb
stc
arpl
pushf
xor
xchg
push
cmpsl
imul
or
push
pop
pop
pop
fcomps
xor
xchg
xor
test
cli
fnstcw
lds
adc
cwtl
add
push
test
out
mov
push
shl
out
ss
jl
push
lret
adc
in
jg
or
mov
pop
in
push
dec
push
popa
push
mov
shlb
mov
pop
and
or
in
push
mov
adc
and
rol
inc
test
sub
je
and
push
dec
lahf
mov
fldt
mov
sarb
scas
int3
lods
in
or
push
imul
adc
loop
push
int3
mov
jns
push
inc
jae
sbb
xor
or
xchg
mov
sbb
dec
loopne
je
data16
int
mov
aaa
or
ss
adc
pop
cs
inc
cmp
cmpsl
or
sub
outsl
or
jl
jge
and
js
adc
ret
jg
xchg
mov
sbb
mov
jno
sbb
jae
out
mov
imulb
mov
add
mov
outsl
push
repnz
pushw
mov
sbb
mov
xchg
imul
stc
mov
fwait
jae
jns
or
int3
arpl
imul
repnz
test
and
gs
mov
lfs
xchg
inc
add
arpl
mov
popa
dec
cwtl
pop
adcb
mov
push
mov
sbb
and
out
punpcklwd
fcmovnbe
and
inc
clc
lahf
mov
pop
mov
out
pop
fisubrl
sbb
xor
js
sub
or
in
cmp
adc
add
repnz
in
rclb
push
mov
lahf
sub
jl
nop
push
xor
sbb
ret
imul
mov
sub
pop
movsb
lea
testb
out
pop
inc
cmp
jge
jmp
das
divb
and
inc
cs
mov
xlat
push
mov
mov
push
dec
xchg
ja
repnz
movsl
sub
jnp
jbe
sub
cmp
rcr
mov
ret
stos
push
jno
call
fwait
mov
dec
fstpl
jmp
fidivs
jg
pusha
dec
mov
out
jge
or
addr16
jmp
loope
addr16
or
xor
xchg
lahf
addb
push
repz
into
or
push
mov
testl
push
jae
adc
xor
sub
mov
fdivr
mov
and
push
sbb
and
sub
andl
jmp
inc
cmpsb
out
inc
daa
inc
inc
lds
sarb
test
ss
mov
stos
push
fidivs
imul
jg
scas
inc
pop
mov
les
push
push
fistpl
xor
add
and
sub
push
int3
cmpsb
bswap
stos
test
pusha
mov
adc
seta
ret
cmp
ljmp
cmc
in
icebp
push
out
mov
push
and
fisubs
add
xchg
mov
clc
pop
ljmp
lret
add
and
cwtl
mov
fsts
xor
lds
lret
daa
xor
inc
iret
stos
jne
adc
cmp
or
movsb
je
mov
cmc
stc
test
mov
or
xchg
mov
fisubs
lods
cwtl
jo
lcall
pusha
out
xchg
das
lea
inc
mov
or
inc
pusha
mov
xchg
outsb
rcrl
insl
mov
push
adc
adc
add
popf
test
push
roll
sub
int
xchg
rcl
dec
xchg
jnp
xor
lea
nop
sbb
push
cmp
xchg
scas
in
or
rol
lods
cs
cmp
cwtl
sub
fwait
lock
in
test
test
adc
lret
lahf
xchg
repz
lret
dec
imul
xor
fxch
or
leave
or
movsb
adc
pusha
sbb
and
xchg
lret
dec
imull
cs
xor
test
mov
insb
mov
bnd
mov
mov
dec
repnz
push
mov
nop
dec
add
cmpsb
sbb
xor
sti
dec
ja
xchg
mov
lret
rclb
inc
lahf
arpl
xorb
loope
loopne
rcr
add
dec
jmp
xor
adc
add
mov
ret
mov
addb
and
xchg
and
aad
adc
jl
adc
aas
xlat
push
sbb
or
sbb
fisttpl
imul
xchg
orl
dec
out
cwtl
cmc
lcall
testl
cltd
int
inc
inc
push
movsl
mov
sub
xchg
mov
sbb
adc
lcall
xchg
jg
arpl
mov
jns
jmp
push
xchg
or
xchg
dec
cmpsl
mov
dec
pusha
addps
rcll
je
gs
mov
fdivs
cli
nop
xchg
and
lods
cmp
fimuls
out
into
sbb
in
xlat
xchg
pop
and
dec
std
mov
fcmovu
add
cmp
mov
xorb
cltd
lods
jbe
mov
inc
cwtl
dec
adc
sub
fcmovnu
test
dec
xor
test
rclb
fidivrs
mov
jle
enter
popa
shrl
fwait
mov
jle
pop
xor
call
inc
pop
movsl
sbb
pop
fs
pop
aaa
sub
sub
or
or
scas
hlt
cmp
jmp
lea
stc
xor
in
aam
push
arpl
cmpsb
jl
add
call
mov
mov
je
mov
cmpsl
jae
push
or
or
adc
pop
mov
dec
jge
dec
rcrl
push
cwtl
shlb
fiaddl
loope
cmp
fisubrl
push
mov
add
pop
fisubl
dec
jp
lahf
out
rol
call
sub
insl
cmpsb
in
or
pop
adc
test
arpl
dec
loopne
adcb
add
push
push
aaa
cmp
adc
stos
out
movsb
adc
insb
mov
test
jg
fldenv
out
inc
mov
xchg
aas
push
hlt
xchg
adc
sarb
mov
loopne
or
cld
loop
cmp
pop
insl
scas
mov
jg
mov
cmp
out
incl
sbb
jg
pop
mov
and
pop
and
adc
pop
ss
xor
adc
add
filds
flds
xchg
test
out
outsl
mov
repnz
ja
sarb
std
rclb
sbb
dec
rolb
jg
mov
mov
push
mov
add
mov
subl
shll
cld
jmp
lock
jno
stos
or
mov
cmp
push
and
shr
lcall
fsts
lods
movb
inc
adc
in
movsl
stc
pop
mov
inc
jecxz
mov
ljmp
divb
call
cli
dec
ret
iret
cmp
lea
rorb
sbb
out
lods
push
sub
loope
sbb
mov
fsts
cmp
aas
int3
mov
dec
and
je
cmp
mov
sbb
push
inc
mull
add
xor
add
repnz
pop
fcmovnu
mov
mov
sbb
into
in
mov
inc
pop
cli
call
sarl
sub
repz
mov
imul
adc
xor
inc
inc
mov
shrb
add
and
aaa
push
rclb
call
sub
xchg
cmp
mov
adc
jp
jnp
fs
scas
and
stos
adc
mov
mov
xor
mov
mov
or
mov
jg
push
lahf
fwait
cli
iret
sub
lock
in
xchg
xor
mov
cli
cld
pop
inc
mov
ljmp
xorb
cwtl
push
mulb
add
mov
std
xchg
xchg
mov
icebp
xchg
cmp
leave
ja
mov
loope
fwait
ret
jmp
jle
sbb
imul
cmp
pop
jle
pop
xchg
sahf
ljmp
or
xor
and
push
push
add
fs
dec
mov
and
dec
or
mov
popf
mov
xchg
push
or
dec
sbb
dec
pop
mov
push
and
inc
arpl
repz
ss
shrb
cmpsl
xchg
test
mov
adc
inc
push
push
lret
js
xor
pop
cmp
into
lock
enter
sub
push
and
mov
jb
out
mov
push
xchg
cli
and
repnz
sbb
push
rcl
push
out
mov
fistpl
push
sub
xlat
xor
fstps
xor
aas
shl
xchg
adc
cld
pop
es
inc
sub
je
ljmp
les
add
outsl
pushl
je
jl
out
in
xchg
fsub
repz
icebp
into
shrb
rorl
jmp
in
addr16
movsb
adc
and
dec
fildl
jbe
ljmp
mov
fsts
js
fnstenv
mov
gs
push
sub
lret
dec
xor
in
fnstsw
popf
mov
jns
into
cmpsl
jb
call
mov
jbe
inc
jmp
lock
enter
in
sub
loope
pop
das
mov
or
pop
jb
clc
add
sti
es
mov
out
lock
gs
es
loopne
pop
add
push
test
dec
push
sbb
lods
jecxz,pt
lods
xor
adc
inc
dec
mov
mov
mov
shrb
xchg
leave
fstpt
fistpl
xor
cwtl
push
and
mov
jmp
mov
in
or
or
icebp
or
iret
mov
sub
push
lahf
mov
test
mov
mov
jns
add
push
mov
jecxz
roll
clc
mov
pop
and
lahf
mov
sub
adc
cmp
sahf
dec
dec
loop
mov
leave
cmpsl
push
mov
lock
lcall
fildll
daa
inc
cwtl
xchg
fidivs
outsb
cmp
fists
sub
sub
gs
push
addr16
push
dec
or
sbb
push
xchg
pop
icebp
xchg
xor
sub
mov
shl
fadd
int3
cmp
adc
aam
int
incb
in
in
lods
and
mov
testb
sub
fwait
mov
in
lret
and
fdivrl
in
es
dec
rcl
loope
data16
filds
lret
push
insb
inc
add
mov
ret
dec
fld
sahf
loopne
outsl
arpl
inc
test
push
mov
and
sub
sub
mov
dec
mov
subl
mov
pop
jg
popf
dec
lret
xchg
outsb
filds
push
pop
scas
pop
addl
insb
mov
popf
icebp
xor
jo
les
pop
iret
sbb
pushf
dec
dec
in
push
jb
adc
add
jo
xchg
pusha
insl
and
sahf
lock
push
jo
fldt
mov
insl
dec
mov
mov
mov
cltd
sub
cmpsb
mov
sub
and
out
push
xor
int3
push
notl
or
push
popa
and
mov
ret
add
ficompl
cli
lods
adc
icebp
iret
cs
lock
jmp
jge
add
push
xchg
popf
inc
mov
in
cli
pop
movsb
cmp
loopne
fwait
lds
mov
pop
push
fwait
xchg
in
ss
mov
mov
call
jle
inc
lods
adc
mov
jmp
adc
mov
lcall
lock
inc
sub
lahf
sahf
or
lcall
popf
loope
mov
scas
in
jbe
push
mov
repz
pop
push
ja
or
xchg
cmp
jno
sar
mov
mov
add
xchg
out
mov
dec
mov
dec
mov
loop
imul
mov
and
inc
mov
push
ds
mov
movb
jl
add
or
into
mov
cli
out
shl
daa
mov
lock
add
push
pop
jmp
jo
pop
xchg
push
mov
adc
adc
pop
int3
sub
insb
jnp
sub
sarl
push
in
lea
popa
stc
push
ss
or
outsl
mov
add
lcall
pop
jle
inc
stc
push
xor
cmp
test
jmp
rorl
sub
add
mov
inc
aaa
outsb
push
sbb
stos
sbb
mov
in
jg
bound
and
stos
dec
out
bound
iret
push
loopne
mul
les
xchg
negb
mov
sahf
and
pusha
mov
sub
sub
js
dec
ds
outsb
inc
lahf
sub
negb
fwait
jg
xlat
fwait
and
or
pop
iret
negl
jne
inc
pusha
test
out
add
out
jmp
hlt
addl
mov
push
sub
jo
test
pop
hlt
in
add
cld
mov
daa
push
xchg
jmp
movsl
test
mov
lock
repz
pop
dec
xchg
cmp
adc
fs
sbb
iret
scas
in
fwait
js
nop
xchg
inc
jmp
jl
pop
lret
fsubp
out
jne
out
je
cmp
mov
cmp
fcoms
push
imul
aas
and
sub
cmp
push
fdivr
jae
mov
mov
roll
js
addl
pushf
jnp
addr16
das
sub
cmp
xchg
mov
ror
xlat
cmpsb
jbe
loop
xor
in
cmp
jmp
movsb
clc
mov
sti
test
xchg
int
dec
dec
pop
into
fsubrs
jb
movsb
sbbb
ss
negb
mov
das
lcall
mov
int3
arpl
cltd
xchg
or
push
stos
fimuls
sarb
jmp
stos
jle
sub
call
scas
lods
mov
fwait
mov
lcall
and
fadd
sub
mov
cmp
pop
jge
je
idivb
dec
fwait
push
mov
cwtl
jbe
pop
and
out
les
in
stos
mov
jp
mov
ficoml
aam
arpl
loope
fcmovnb
outsl
imul
pop
xchg
cmc
sbb
loopne
jb
jecxz
and
push
sub
sbb
mov
mov
jg
ret
and
or
jmp
out
icebp
mov
in
test
jmp
xchg
outsb
push
arpl
lods
adc
mul
adc
pop
dec
aaa
hlt
ret
pop
cmp
and
jge
push
sti
sbb
int
pop
addr16
cli
fisubs
lahf
scas
sbb
xor
adc
out
inc
out
add
cmpl
orl
ret
mov
call
cwtl
mov
shrb
lcall
sti
lret
out
nop
lods
add
les
xchg
adc
jp
push
test
jbe
pop
pop
push
dec
imul
mov
mov
mov
add
xchg
repz
dec
es
negl
sub
jns
lcall
dec
lret
enter
rorb
lods
mov
and
mov
rcll
pop
mov
outsl
es
inc
leave
mov
pop
imul
mov
adc
xchg
mov
mov
inc
mov
mov
dec
xor
inc
ljmp
in
cltd
loope
aaa
mov
sahf
lret
cwtl
add
rcl
ret
dec
push
jge
mov
jne
push
push
lods
ds
jmp
bound
das
xor
les
sub
mov
inc
adc
in
mov
movsw
lods
ficoms
pop
outsb
and
movsl
xor
sbb
rcrb
push
mov
mov
push
sbb
inc
fnstenv
fnstcw
fists
dec
jge
mov
inc
sbb
dec
cmp
arpl
inc
data16
ret
ror
mov
pop
jmp
sbb
mov
dec
psrad
adc
hlt
lret
sbb
ds
xor
dec
push
lret
mov
imul
jle
movsl
fistpl
xor
or
mov
lods
xorl
sub
xlat
sbb
mov
nop
ret
call
push
sbb
sub
mov
test
pop
sbb
push
mov
test
push
inc
inc
mov
sbb
cltd
cmc
sub
push
les
fistpll
ret
roll
cs
das
add
xchg
jmp
push
jns
add
je
jecxz
push
or
xor
cmp
dec
sbb
out
inc
sbb
fsubl
dec
in
rcrl
xchg
cmp
xchg
fstpl
insb
lds
ret
int
xor
ret
adc
and
int3
cmpsb
sbb
repnz
cmpb
xchg
jbe
or
jp
jp
jae
push
pop
push
xor
dec
fldl
enter
cmp
movsb
mov
or
loope
jp
jle
sub
mov
add
out
push
mov
xchg
sbb
mov
add
inc
adc
movsb
push
or
inc
shrl
roll
pop
or
addr16
push
mov
ljmp
loop
xchg
pushf
mov
pop
mov
in
sub
jo
fcompl
in
or
roll
mov
fiadds
mov
dec
cld
int
and
pop
mov
rcll
mov
std
xchg
imul
popf
sub
pminub
jmp
daa
dec
cld
flds
push
inc
sbb
or
push
sbb
pop
cmpsl
jnp
pop
push
call
push
and
pop
mov
sarb
push
sbb
fcmovnbe
das
test
jl
add
or
jle
outsl
pop
pop
ss
outsl
push
movsb
pushf
adc
rclb
mov
enter
ret
cmpsl
popf
mov
mov
mov
xchg
lock
and
lods
mov
mov
int
jp
lcall
cmp
jnp
cmp
icebp
shll
dec
push
pop
test
dec
and
ss
enter
cmp
lret
cs
mov
sbb
int3
imull
scas
dec
adcl
pop
xchg
pop
xchg
xor
insb
mov
loopne
lock
jno
mov
or
inc
and
test
sub
notl
inc
add
mov
out
adc
mov
scas
adcl
pushf
cld
jne
sbb
bnd
loope
gs
mov
xchg
loope
mov
or
xchg
pop
mov
jb
mov
mov
mov
xchg
lock
push
pop
popf
dec
xchg
aam
sub
cli
repz
lcall
or
enter
daa
in
xor
inc
sbb
rcrl
cmc
imul
push
ja
adc
add
std
dec
orl
jecxz
adc
cltd
in
lret
pop
xchg
push
out
sbb
fsubl
xchg
fwait
mov
sub
push
movsb
push
aaa
clc
fidivrl
inc
sbb
rolb
or
stc
dec
cmp
stos
cmc
orl
inc
xor
out
fdivr
insb
sti
stos
xor
ret
xchg
jl
jns
clc
cmp
pop
adc
push
sbb
arpl
adc
add
aam
adc
nop
mov
xor
mov
xchg
add
decl
out
out
lock
inc
mov
movsb
and
cmp
test
push
fisubs
push
ret
movaps
cmp
xchg
aam
push
cmpsb
bound
or
in
aam
lret
xor
sub
cs
sub
xor
mov
test
pop
or
hlt
out
jb
sub
lea
mov
and
stc
dec
push
fldt
icebp
mov
jl
pop
iret
mov
jmp
mov
outsb
pop
jmp
xchg
sbb
cmpb
push
pop
addr16
mov
dec
jno
out
je
out
into
adc
test
mov
rolb
pop
mov
fcmovnbe
sub
adcb
add
or
fcoms
pop
sbb
in
lods
push
add
stc
int
push
push
and
sahf
hlt
dec
orl
cltd
add
mov
outsb
imull
jnp
imulb
ds
mov
dec
sub
add
push
xchg
xchg
aam
in
call
stos
xchg
pop
or
out
xor
cmpsb
dec
jp
pop
in
sub
test
sub
scas
or
and
fimull
jmp
and
mov
insl
out
out
cli
adcl
push
movsl
cmp
leave
and
icebp
shll
sbb
aas
cmpsb
test
mov
mov
bound
push
mov
negl
in
mov
inc
add
mov
push
inc
setb
cmp
xchg
cmp
imul
sub
or
dec
loopne
sbb
test
xchg
push
lods
mov
push
lea
iret
ljmp
mov
xor
sub
rol
push
repz
loopne
xchg
jno
cmpsl
mov
and
in
lret
sub
xlat
add
sahf
stc
je
aad
jmp
dec
test
inc
lcall
adc
es
insb
ret
mov
in
mulb
xchg
stos
cld
enter
sahf
adc
adc
mov
dec
movsb
mov
fwait
loope
neg
sub
das
mov
push
mov
pop
pop
push
dec
sahf
sti
out
and
jae
sub
cli
fisttps
js
lods
dec
lea
cltd
cmp
mov
int
sbb
mov
dec
mov
cmp
lcall
dec
imulb
lret
ret
data16
das
xor
sbb
push
pop
incb
adc
loopne
inc
xlat
sub
pop
ret
aam
push
sbb
sbb
push
arpl
jl
mov
inc
xor
jnp
mov
popa
ja
mov
cmpb
in
push
mov
push
fcomps
pop
sub
outsl
rcll
int3
jg
mov
jecxz
or
xchg
mov
jo
call
dec
sbb
xchg
add
insb
add
js
fisubrs
or
imul
mov
xor
push
fdivrl
bnd
and
out
sub
pop
inc
lods
mov
push
lea
fldcw
es
cmpsb
out
mov
mov
jbe
cmovnp
enter
inc
dec
jmp
sub
mov
enter
bound
xchg
xchg
iret
test
out
push
xchg
cmpl
add
mov
jne
daa
inc
inc
xor
mov
push
and
push
iret
add
sub
lea
mov
test
movsl
xor
stos
fstpt
daa
lret
movsb
dec
xor
cmp
dec
push
sub
sbb
jb
loope
lahf
cmpsl
jle
nop
in
jnp
cwtl
cld
pop
das
push
dec
mov
push
addr16
das
xchg
and
push
cmp
scas
orl
dec
mov
mov
mov
and
lds
fidivl
test
dec
add
mov
pop
xor
and
int
das
cli
cli
mov
outsb
nop
xchg
jg
jns
pop
adc
mov
les
dec
test
fldcw
inc
mov
insb
cli
arpl
imul
insb
sbb
jecxz
repnz
pop
and
inc
shrb
cli
jp
sbb
insb
mov
xchg
shrl
shrb
mov
repnz
pop
mov
out
lcall
jne
add
rcrb
add
mov
sbb
popa
push
icebp
outsl
mov
and
and
shll
adc
push
out
and
xchg
jmp
orb
or
and
mov
shlb
lods
ljmp
sbb
loop
loope
inc
shrb
mov
xlat
adcl
cli
jg
dec
dec
les
inc
test
mov
push
fidivl
in
sub
addl
sub
push
ds
scas
sbb
shrb
mov
or
xchg
daa
cmp
iret
pusha
pop
sahf
or
xlat
add
sbb
push
push
add
mov
jmp
or
dec
adc
xor
jae
or
sti
out
rorb
mov
adc
mov
sbb
sar
je
int3
nop
das
movnti
pushf
sbb
push
add
pop
adc
and
pop
std
in
cmp
push
or
repnz
xor
pop
ret
out
mov
pop
mov
pusha
jle
push
pop
leave
in
push
gs
popa
xchg
ljmp
in
lret
fwait
xor
andl
xchg
shlb
test
cmc
daa
pop
test
out
mov
adc
rclb
jnp
out
stos
inc
lcall
ljmp
icebp
jl
mov
cmp
inc
jmp
roll
imul
ja
sbb
sub
pusha
ss
and
aas
inc
mov
out
inc
addl
add
repnz
jno
lds
inc
mov
inc
push
jmp
aad
stos
sub
in
push
add
inc
jnp
push
stos
ret
stos
cwtl
pop
loope
call
cs
cmp
inc
dec
jl
stc
mov
test
push
inc
pop
aad
stos
push
lahf
int
add
pop
mov
push
push
sti
jmp
mov
push
nop
loopne
mov
into
in
mov
aam
add
sub
mov
stos
sbb
ffreep
aaa
call
push
les
cli
add
push
or
and
aam
inc
lea
or
adc
jb
hlt
mov
pop
fcoms
jbe
sbb
ret
je
rcrb
push
bound
in
pop
and
mov
es
lds
pop
push
xchg
add
in
loopne
scas
mov
lock
and
aam
pop
fs
cltd
dec
ljmp
inc
adc
xor
mov
dec
jmp
into
sub
push
shrb
subl
ud1
pushf
fdivs
and
mov
dec
mov
jnp
lcall
mov
iret
inc
test
loopne
fwait
ds
jb
and
adc
jb
sahf
shl
vcvtsi2ss
mov
ss
jge
push
or
dec
mov
inc
sti
adc
sarl
js
out
xchg
mov
lods
sbb
cwtl
pusha
add
xchg
lea
sub
cwtl
pop
mov
or
sub
jmp
sub
xor
cmp
stc
stc
sub
push
pop
jg
out
and
es
shlb
pop
mov
aas
push
out
jne
hlt
pop
cmp
jno
sbb
sti
xor
std
cmpsl
cwtl
or
stos
jo
test
ljmp
or
int
jle
cmp
es
adc
movsl
mov
scas
xchg
lods
icebp
sub
insb
insb
int3
cld
mov
or
xorb
and
mov
add
arpl
lret
push
dec
mov
outsb
in
push
pop
movsb
ljmp
js
data16
mov
sarl
cmpsl
cmp
and
jne
arpl
fwait
add
add
jnp
push
dec
sub
ds
leave
loopne
inc
mov
lcall
xchg
pop
jno
insb
lods
push
dec
or
and
adc
and
testl
cli
inc
leave
fists
mov
rclb
mov
insl
add
inc
lret
cmp
inc
or
fcoml
cmp
int3
add
xchg
add
int
jno
dec
mov
imul
repz
push
test
popa
adcb
xor
popa
into
add
insb
ljmp
je
sub
lahf
ja
mov
test
call
inc
stos
cld
add
int
call
sub
jo
jecxz
mov
add
iret
dec
inc
scas
addr16
jge
xchg
xchg
int3
out
mov
xor
pop
pop
mov
xorl
sub
bound
jno
test
mov
cmpb
js
cwtl
rcrb
leave
dec
rcr
mov
test
aas
inc
add
mov
fstps
fisttps
stc
shrl
mov
and
sbbb
jp
inc
ljmp
push
mov
int3
jecxz
jl
mov
lret
sbb
or
pop
pusha
mov
jno
sub
test
pmullw
dec
dec
ror
fdivrs
loop
inc
sub
adc
daa
rorl
icebp
pop
push
xchg
fs
pop
add
ficomps
xchg
pusha
pusha
rclb
xchg
mov
imul
dec
lret
lds
mov
test
mov
stos
dec
inc
aam
adc
sub
adc
pop
jmp
add
pop
or
adc
pusha
gs
cmpsl
xor
or
adc
cmp
outsb
inc
out
das
push
in
xor
jecxz
cltd
jge
ror
cli
movsb
jge
in
lods
xor
jb
mov
add
sbbl
pusha
fs
aas
jle
xor
movb
in
push
in
inc
pushl
sbb
xchg
jbe
mov
add
xor
shl
js
fs
mov
mov
stos
repnz
call
lret
and
pop
mov
xor
sub
dec
ficompl
sbb
inc
inc
mov
jae
push
push
push
cmp
test
mov
sub
pop
cmpsb
repz
aas
shl
ret
xlat
mov
mov
mov
inc
cmp
sub
mov
jle
dec
ja
push
aas
pop
push
mov
mov
pop
sahf
pop
add
pop
jo
mov
stc
xor
sbb
inc
and
lods
insb
aas
shl
mov
test
cmp
pop
divl
shrl
dec
pop
pop
loop
xchg
xor
test
loopne
dec
movb
rcrl
sub
xchg
cwtl
test
in
pop
jmp
push
mov
shrl
mov
shl
sub
inc
mov
mov
or
jns
mov
xchg
mov
mov
inc
mov
pusha
js
mov
inc
mov
inc
pop
out
fcoml
rol
movsl
stos
test
add
push
xor
xor
xchg
mov
insb
or
inc
subl
mov
sbb
stos
lds
in
mov
mov
dec
scas
sbb
pop
fsts
push
adc
and
rol
inc
push
sub
push
pusha
loope
or
out
fnstenv
jo
add
hlt
dec
leave
or
xchg
cwtl
fdivrl
adc
mov
pop
push
jne
sbb
jecxz
xchg
test
push
inc
pop
add
es
add
push
cmp
imul
popf
int3
movsb
les
daa
xchg
and
mov
incl
adc
or
pusha
arpl
scas
fcomi
clc
mov
adc
btc
or
inc
xlat
push
outsb
cs
cmp
or
add
jg
xlat
cmc
hlt
divl
push
jns
shrb
jb
xchg
push
add
out
scas
jno
sahf
fnstsw
cmp
cltd
arpl
cmp
bnd
or
aam
and
jmp
sbb
mov
xchg
push
aas
add
sbb
mov
jne
int
push
repnz
data16
pushf
clc
cwtl
mov
xchg
inc
in
sub
mov
dec
je
sub
wbinvd
roll
mov
aad
push
je
inc
aam
imul
nop
jl
jae
sub
mov
xchg
mov
cmc
outsb
ss
inc
in
xor
mov
imul
xor
pusha
or
cmc
xchg
fwait
jecxz
leave
cmp
mov
gs
mov
cmp
repz
jg
loopne
movsb
pop
aad
in
pushw
and
xchg
fdivrs
mov
fwait
jnp
push
scas
in
bound
insl
pop
mov
dec
loopne
mov
xchg
ss
mov
fistps
mov
cli
int
or
shlb
push
sarl
mov
mov
lret
sarb
jp
mov
cmc
insb
pop
ret
mov
fidivl
orb
test
mov
cltd
dec
adc
into
andb
push
xor
sub
das
push
mov
inc
sub
ss
loop
jl
sub
mov
jbe
hlt
xchg
or
xchg
je
sbb
jg
es
mov
out
enter
icebp
repnz
data16
lods
cwtl
mov
xchg
pop
adc
pop
mov
stos
stos
lahf
mov
add
xchg
jle
testb
pop
lods
rorl
push
out
sub
ds
bnd
jne
sbb
ss
push
fnstcw
dec
sbb
fcoml
mov
adc
dec
lea
xor
xor
pop
push
leave
sub
rorl
fwait
pop
lods
adc
insl
jmp
orb
ret
xor
test
mov
in
neg
jmp
enter
sarl
scas
ss
js
test
cltd
out
push
jp
or
lret
add
cld
fadd
fcoml
fcom
fsub
mov
leave
stc
data16
mov
cmp
adc
inc
cmp
sub
cltd
hlt
gs
pop
gs
sub
adc
jbe
out
dec
jmp
and
stos
mov
out
mov
fcomp
pop
mov
fbstp
push
idivb
lret
sahf
sub
rclb
fistl
fimuls
movsl
xlat
fsqrt
lods
mov
or
test
ss
nop
in
stos
jbe
adc
jl
bound
xchg
mov
ffreep
xchg
xchg
mov
mov
or
adc
fucomp
push
or
jle
daa
aas
or
sub
ret
data16
mov
mov
push
mov
outsb
mov
std
nop
test
or
sbbb
dec
enter
gs
pop
mov
out
popa
jne
xor
leave
or
fidivl
arpl
lods
add
xchg
and
mov
sub
leave
cmpsl
ljmp
mov
aaa
pop
jae
jb
jge
sti
sbb
lahf
and
mov
mov
icebp
jne
call
fwait
int3
and
push
add
jl
xchg
mov
in
dec
and
xchg
sbb
pop
js
hlt
adc
test
and
jecxz
adc
stos
jb
das
and
sahf
clc
fwait
out
mov
movsl
push
inc
loope,pt
bound
ret
jmp
inc
mov
dec
iret
loopne
adc
repnz
dec
ljmp
push
push
mov
cmp
jo
test
push
push
inc
call
push
mov
push
pop
aaa
cmp
xchg
mov
js
clc
xchg
sbb
aas
dec
xor
jp
dec
call
sub
rcrb
shrb
fisttpl
loopne
sbb
mov
pop
dec
push
inc
outsl
mov
pop
and
sub
fdivl
mov
lods
insl
cld
pop
jge
lret
clc
xchg
cmp
fiaddl
in
fidivl
push
sub
adc
shlb
xchg
int3
and
pop
lret
out
fistpll
shlb
sub
xlat
repz
xlat
ret
and
leave
dec
mov
xor
xor
inc
adc
out
ljmp
mov
bound
clc
push
int3
push
add
xchg
jle
mov
and
or
mov
es
sub
scas
mov
cmp
cs
or
mov
scas
leave
imull
mov
mov
ss
aad
cmp
lods
movsl
rcl
popa
lds
push
pushf
and
push
jne
pop
arpl
push
jg
push
sti
pop
adc
inc
mov
fldt
dec
ss
xchg
pop
or
ret
dec
adc
mov
dec
pop
jle
add
lock
loop
xchg
repnz
daa
or
jbe
sbb
inc
pmaxsw
adc
mov
mov
popf
insl
es
sbb
fcoms
in
mov
push
je
lds
rcrb
das
stos
mov
out
xchg
mov
cs
push
lock
mov
xor
daa
into
mov
test
xor
mov
cmp
mov
pusha
addr16
pusha
add
xchg
enter
mov
jmp
aam
jnp
sub
popf
repz
out
jmp
enter
cwtl
push
and
inc
dec
loopne
cli
mov
xor
or
or
xchg
scas
cli
clc
in
scas
scas
mov
sbb
cs
lret
cld
add
lcall
sub
mov
push
jecxz
adc
inc
xor
mov
pop
jmp
push
jle
push
sbb
cmp
xor
jge
xchg
pop
addr16
popf
subb
comiss
cltd
movsb
dec
sub
mov
sub
xchg
xlat
ret
in
mov
add
ds
inc
ja
adc
push
add
pushw
pushf
fstps
fidivrs
sarl
movsl
in
xor
pop
or
ljmp
test
ds
lret
xchg
subl
jp
arpl
shlb
or
or
inc
and
push
ds
lea
out
xor
les
push
mov
int3
aad
js
outsl
inc
orb
and
xor
sub
adc
xor
in
decl
fdiv
in
fwait
inc
jle
in
int3
add
ds
test
mov
pop
cltd
ja
fwait
inc
icebp
add
and
sbb
push
fidivl
iret
adc
mov
pop
mov
movsl
jb
out
xor
xchg
inc
or
xchg
arpl
fstpl
aaa
fcoms
pop
lcall
shlb
sub
sbb
fs
xchg
sub
repnz
dec
jne
or
negb
mov
dec
pop
xchg
int
cmp
push
lock
mov
adc
scas
mov
mov
popf
gs
movl
rcrl
in
sub
sbb
xor
inc
cmp
xor
inc
xchg
loopew
and
adc
pop
sbbl
xor
lods
out
or
mov
lods
sti
loope
sub
ljmp
mov
icebp
push
xchg
mov
inc
sti
leave
mov
lret
lds
data16
test
stos
in
cwtl
xchg
xchg
test
fimull
adc
inc
orb
or
lret
mov
cmp
or
lret
fs
push
leave
loop
dec
dec
push
ja
jp
cmpl
inc
int
xorl
lea
jae
mov
popa
fwait
rolb
stc
and
addr16
es
sbb
xor
std
xor
inc
ss
out
pop
divl
sub
stos
cmpsb
stc
call
xchg
push
fiaddl
xchg
pop
lret
push
addr16
es
arpl
enter
fidivl
ret
subb
loope
push
mov
sbb
outsb
cmpsb
push
pop
cmp
movsl
jge
mov
in
sub
jne
fisubrl
xchg
sbb
lea
dec
adc
shrl
jae
scas
cmc
daa
in
xchg
cwtl
push
adcb
add
pop
lret
push
xchg
insb
test
sub
stos
fnstsw
adc
add
jecxz
cmp
mov
jmp
dec
and
fs
pushf
sbb
and
test
mov
in
scas
jae
test
dec
mov
xor
or
les
mov
sbb
lret
xchg
lods
adc
adc
stos
fxch
xor
dec
fisubrl
jmp
xchg
sub
adc
add
cwtl
loope
loope
pop
mov
inc
testb
add
loopne
jg
ds
push
or
ss
mov
lret
sub
lds
lret
jl
adc
rcll
insb
mov
cmp
lahf
adc
imul
push
cmp
dec
pop
mov
xchg
mov
mov
insb
scas
aad
in
mov
lock
roll
cmp
clc
push
mov
adc
xor
xor
xor
sbb
pop
or
sub
sub
mov
mov
inc
mov
cmpsl
or
xor
in
loopne
mov
inc
mov
sub
scas
sahf
out
add
cmc
dec
nop
roll
iret
aam
push
dec
int
outsb
cmp
adc
int
xchg
adcl
push
inc
les
call
mov
testb
xchg
jl
mov
fcomip
jb
mov
jnp
xlat
xchg
xor
mov
cld
cmp
adc
stos
jne
insl
pop
cmpsl
add
dec
out
imulb
loopne
push
test
outsb
std
cmp
inc
cld
test
jae
add
or
stos
adc
sbb
testl
dec
pop
aas
mov
pop
or
mov
sahf
js
mov
rol
add
addr16
repz
stos
push
lds
repnz
mov
stc
add
push
shlb
push
push
bound
pop
jp
xor
jnp
dec
fs
sti
pop
ss
sub
sub
jnp
xchg
adc
sahf
or
xchg
pop
iret
pop
inc
mov
or
lds
adcl
mov
lret
jae
enter
pop
xor
jmp
test
loope
xlat
insl
leave
mov
lods
mov
mov
or
mov
lahf
sbb
sub
xorl
ss
inc
iret
mov
jg
or
adc
fidivs
mov
inc
adc
jge
fisubrl
imul
mov
pop
adc
mov
adc
sahf
repz
and
andl
sub
mov
cltd
clc
call
rclb
pop
mov
xchg
mov
xchg
sub
sub
lds
scas
mov
das
fisttps
mov
xor
fwait
mov
pushf
addr16
scas
subb
movsl
push
sarl
lret
dec
sbb
sub
pop
xchg
add
xchg
xlat
push
int
cmp
cmp
lret
or
popf
lds
add
mov
fsubrl
loope
out
jmp
dec
jg
mov
fsubl
sub
mov
cmp
push
mov
sbb
test
xor
aas
aam
sahf
test
lret
in
dec
inc
outsb
mov
jne
hlt
pop
mov
pop
push
push
daa
pushf
mov
mov
loopne
test
negl
push
fisubs
jne
js
test
unpckhps
lods
loop
dec
out
pop
sub
loope
cmp
ss
pusha
xchg
pusha
int
mov
aaa
clc
scas
movsl
ficompl
fcompl
out
movsl
dec
cmp
shl
mov
sbb
stc
gs
lods
lcall
pop
push
jge
push
xchg
sub
out
out
pop
adc
fldenv
and
in
popf
dec
sub
mov
dec
in
mov
pop
add
pop
hlt
call
in
or
out
lds
mov
xchg
jo
call
fs
sub
and
sbb
jno
jle
mov
and
pop
mov
jg
daa
pop
push
xor
push
or
xchg
out
repnz
movb
ja
cmpl
pusha
addr16
mov
aam
add
adc
xor
mov
mov
icebp
sbb
ja
fxch
shll
cmovo
lock
mov
jnp
rol
cltd
pop
inc
fcomp
pop
adc
int
lcall
xlat
adc
cmc
cmpsb
xlat
and
js
sbbb
aad
xchg
mov
addr16
xlat
dec
add
inc
cmp
arpl
out
mov
adc
cmc
int
imul
jge
adc
cld
scas
loopne
cwtl
sbb
dec
cmc
push
jno
dec
nop
aam
sub
ljmp
and
ss
test
push
cli
inc
mov
cmp
push
push
and
dec
mov
mov
stos
cmp
jmp
sub
or
aas
sbb
sbbb
test
out
dec
pop
xor
inc
push
imul
repnz
testl
inc
bound
push
fistl
ds
in
repnz
dec
fistpl
jl
push
stos
sub
inc
cmp
movsb
popf
int
ss
es
iret
lea
or
imul
stc
and
std
shr
cmp
cmc
mov
outsb
testl
cwtl
stos
mov
mov
arpl
push
incb
jle
mov
mov
js
xor
clc
mov
lret
rclb
mov
pop
mov
lea
nop
mov
dec
fs
pop
sbb
test
testb
sbb
jl
add
out
mov
xchg
fisubrl
mov
pop
mov
push
pop
cmp
and
or
sti
dec
sbb
inc
xchg
jmp
fmuls
and
into
xchg
mov
sbb
mov
mov
or
mov
nop
mov
jmp
fwait
push
mov
add
adc
cmp
in
and
sbb
fcomp
push
sub
mov
or
jns
pop
or
xchg
push
stc
repnz
repnz
icebp
or
xchg
mov
loopne
mov
and
jae
xchg
in
iret
sub
pop
dec
xchg
popw
filds
xchg
cmpsl
inc
adcb
push
icebp
out
bnd
push
push
dec
pop
sbb
aam
cmpsl
xchg
add
fmull
jo
pop
pop
stos
stos
lahf
jge
mov
or
repz
stos
mov
mov
sub
cli
ret
jmp
or
add
mov
pop
jl
push
lret
fisubrs
cmp
mov
insl
in
in
insb
out
pop
pop
lds
dec
fistl
xorb
imul
rclb
adcb
ja
mov
pop
movsb
pop
inc
int3
data16
mov
divl
movsl
into
jo
lahf
sbb
fs
nop
icebp
les
push
pop
stos
cmp
sbb
sbb
rcll
pop
out
rep
push
dec
test
repz
out
loope
hlt
and
ret
add
jge
xlat
nop
and
lahf
xor
add
ljmp
lcall
jno
cltd
loope
inc
jb
pop
lret
fwait
iret
inc
daa
imul
pop
lret
sbb
stos
xor
test
push
outsl
fidivrl
xchg
fcmovbe
sub
dec
ret
mov
in
ret
sub
sub
xor
cmp
stos
call
test
cmpsl
fistpll
or
cs
outsl
aas
filds
in
or
push
jno
pop
dec
mov
lahf
xchg
popa
loop
add
jne
cmc
mov
rorb
jmp
jp
xchg
inc
mov
pop
lcall
push
lds
mov
push
bnd
fbld
xor
sub
test
ret
movsb
dec
xchg
loope
aad
in
cmc
jg
or
mov
cmpsb
popa
jne
stos
test
mov
mov
popa
out
sbb
or
outsl
addr16
or
rcll
sbbl
icebp
in
sbb
mov
xchg
push
je
mov
sbb
mov
sub
arpl
mov
and
jp
fiaddl
xor
mov
add
fists
lock
out
pop
cmp
pop
jle
inc
jg
adc
sbb
ljmp
mov
aam
or
push
in
es
xor
inc
or
dec
test
xor
or
popf
or
outsb
int
xchg
fmul
or
cmpsl
pop
cmp
rolb
out
xchg
loop
shll
xchg
cmc
push
jne
mov
xchg
pop
push
cmp
out
inc
shl
sub
jge
push
push
lsl
scas
jnp
cmpsl
sub
pusha
cwtl
out
mov
jo
jb
push
pop
repz
or
cs
or
pop
jecxz
das
cwtl
mov
sahf
and
xor
mov
jp
ret
cmp
jns
jl
adc
leave
mov
dec
lods
xlat
aaa
imul
lret
repz
pop
and
adc
aaa
xor
mov
sbb
gs
pop
ficomps
cmp
xlat
adc
mov
in
sub
cld
enter
push
lods
and
rcll
rcrl
and
sub
or
out
mov
jmp
js
mov
mov
repnz
cmp
inc
jo
ret
je
or
repz
push
jp
je
cld
mov
dec
jg
sti
fsubrs
mov
sub
jb
xor
mov
insl
scas
loope
js
or
add
mov
cmp
stos
xchg
xchg
sub
scas
or
stc
pushf
push
setbe
ret
xor
repnz
in
aad
aam
frstor
inc
pop
push
mov
push
push
daa
xor
cmp
shlb
adc
fnstcw
xchg
push
jg
leave
pusha
push
sub
rcrb
adc
pusha
or
aam
pop
sahf
dec
add
xor
hlt
bound
cmpsl
pop
mov
nop
jl
stos
xor
cwtl
decl
insb
mov
lods
hlt
insl
lods
add
jecxz
pop
ja
jmp
fcmovnbe
popl
or
add
stos
sub
cmp
loope
lret
xchg
int3
dec
mov
pop
aam
inc
xor
mov
mov
out
mov
pop
mov
cmp
adc
mov
test
scas
aad
cs
and
push
jmp
or
sahf
xchg
movsb
jbe
mov
addb
cmpl
jp
pop
xchg
push
aas
xor
loop
in
mov
scas
cmpsl
mov
loopne
pop
ror
stc
loopne
add
jb
int
dec
ret
stos
jo
mov
cli
and
cmc
pushf
dec
loop
lock
jns
inc
roll
mov
ror
in
in
inc
iret
addr16
fidivrs
jge
imul
sbb
sub
adc
sub
cmc
fsubl
push
orb
cwtl
push
out
and
add
add
ss
sbb
mov
push
mov
or
rcll
mov
mov
jo
bound
sub
or
cmp
jnp
repz
fdivr
add
clc
lret
loop
dec
inc
cli
scas
insb
and
imul
test
loope
sti
mov
pop
dec
aas
nop
cltd
dec
xchg
pop
and
xchg
call
ljmp
dec
mov
add
jl
mov
inc
xor
mov
mov
mov
outsb
xor
out
test
lea
sarb
inc
mov
ss
xorb
pop
ja
push
cmc
movsl
dec
notl
and
jb
jp
repz
dec
inc
in
lea
js
incb
push
jg
sbb
imul
shll
sbb
xchg
pop
pop
xlat
mov
int3
negl
sbb
mov
jl
popa
rclb
mov
cvtpi2ps
pop
adc
rcr
in
and
fsubr
xor
mov
out
loopne
aad
inc
push
fcmovnb
in
ror
iret
mov
mov
cmp
stc
mov
and
loop
jp
leave
mov
shr
mov
sarl
insl
jge
and
ficompl
lcall
aaa
cmp
scas
push
xorb
inc
inc
inc
daa
sbb
pop
les
lahf
popa
movsb
adc
mov
stc
shl
daa
in
rorl
add
pop
dec
movl
xor
cmpsl
fnstcw
aaa
dec
push
xchg
cmp
insb
sahf
push
xor
adc
fistps
test
mov
scas
dec
sbb
xchg
repz
jne
jg
hlt
jbe
fcoms
enter
or
shll
xchg
loope
lock
push
insb
cmp
sbb
mov
mov
icebp
xchg
out
adc
data16
sarl
fmuls
out
fwait
enter
int3
jne
and
or
icebp
daa
les
xchg
dec
add
or
pop
jge
jecxz
je,pn
jno
insb
or
push
sub
mov
inc
es
cmp
fwait
mulb
dec
mov
cmp
pop
insl
pop
jno
jl
into
test
jp
pop
out
fsubrs
test
int3
out
rorb
aaa
or
push
sbb
mov
mov
push
call
add
push
fs
pop
adc
pop
cmp
cmp
push
enter
adc
sti
mov
add
rcrl
jb
and
in
mov
mov
sbbl
pop
xor
inc
out
fwait
out
push
xor
and
mov
xlat
lret
popa
xor
push
loopne
ljmp
mov
sub
mov
data16
pop
scas
rorl
imull
jbe
inc
mov
adcb
jo
cmpsl
negb
sbb
stos
mov
dec
out
enter
aad
sbb
shr
rclb
mov
mov
xor
fwait
outsl
test
xchg
push
sbb
adc
bound
rorb
or
xlat
loope
xor
ja
into
aam
out
push
rorb
pop
mov
hlt
mov
mov
dec
sub
ljmp
frstor
push
imul
out
mov
sbb
les
xchg
sub
test
out
add
xor
ret
sbb
mov
inc
into
push
std
push
adc
loope
mov
out
xchg
hlt
fdivrl
aam
pavgb
ret
leave
mov
lods
jmp
vpshad
movsl
or
adc
push
cmp
or
mull
or
push
imul
icebp
jge
jge
or
lcall
mov
dec
or
loopne
mov
int
and
add
cmpsb
pop
cmp
or
mov
fnsave
xchg
inc
dec
sbb
inc
lock
clc
mov
arpl
push
or
ret
xor
mov
mov
aaa
lea
ret
cmp
push
xchg
daa
jns
mov
cwtl
xchg
dec
pop
mov
test
shlb
push
daa
mov
push
dec
adc
sbb
scas
aaa
or
sub
bnd
and
popf
mov
dec
loope
dec
popa
dec
or
xchg
arpl
test
bound
leave
loopne
pop
and
loop
xor
add
addr16
es
jb
lods
jecxz
and
rcll
in
push
mov
cli
cmp
add
sbb
jle
cld
jmp
push
add
arpl
mov
sbb
cmpsb
or
or
sahf
dec
cmp
pop
hlt
aad
outsl
inc
mov
aad
mov
xor
sahf
sahf
imul
dec
fwait
jae
mov
mov
insl
mov
mov
pop
mov
shrb
and
lods
jecxz
testl
dec
loop
push
out
pop
xchg
loope
mov
and
repz
jmp
mov
test
rolb
and
jmp
imul
cmpsl
fstl
fs
cmpsb
inc
pop
jns
xchg
movsb
mov
jmp
sbb
mov
and
mov
inc
lret
sti
andb
out
or
cmp
cmp
shll
sar
arpl
repnz
test
iret
ja
int3
fs
pop
int3
xchg
fcoml
adc
stos
jne
dec
push
xchg
loope
test
pop
and
fsubr
mov
or
sbb
aas
sarl
aas
sbb
push
fs
popa
pop
pop
in
mov
push
and
js
inc
sbbb
dec
mov
fldt
xlat
loop
jno
adc
fadd
adc
jg
cmpsb
jp
jo
xchg
mov
nop
pop
addr16
and
sub
jae
inc
outsl
bound
jbe
sbb
stos
pop
push
insl
shll
xlat
addb
testb
dec
xor
movsl
adc
xor
movsl
out
pop
int
out
aad
test
sbb
out
dec
and
repnz
sub
cmpsb
in
fisttps
outsl
out
dec
lahf
lcall
push
subb
bound
into
pop
inc
sbb
mov
out
ret
dec
push
cmp
push
sarb
aad
divb
sub
iret
mov
testl
jp
or
mov
mov
dec
test
mov
test
cltd
mov
push
pop
lods
sub
sub
imul
out
mov
pushf
pop
xchg
mov
or
ror
xor
test
mov
iret
adc
push
mov
cltd
out
jge
aad
cmp
mov
subl
push
mov
loop
pop
mov
mov
loop
movsb
xchg
ss
cmp
pop
mov
gs
dec
aaa
addl
js
dec
fdivl
ljmp
std
das
hlt
xchg
xor
subl
push
icebp
lcall
inc
push
fnstsw
loop
ret
ss
jge
inc
imul
je
add
in
dec
dec
movsb
and
sbb
enter
mov
mov
or
dec
mov
mov
jp
jbe
sub
arpl
dec
loope
fs
jae
sub
jg
adc
jb
add
push
scas
mov
stc
dec
jne
aam
out
hlt
aas
into
insl
xchg
sub
sbb
jmp
or
fs
mov
inc
lods
mov
mov
jle
push
sbb
stos
pop
fs
jne
pusha
push
test
mov
inc
xorb
add
je
outsb
es
pushf
dec
or
cmp
fstl
mov
xchg
imul
mov
gs
xchg
dec
mov
mov
xchg
shrb
notl
jge
aas
jp
je
mov
cwtl
cmp
leave
push
out
mov
pop
int3
push
pop
sbb
imul
mov
or
ficoml
fdivp
jne
and
fnstenv
mov
fcompl
out
sub
push
jae
jecxz
aam
and
xor
test
push
ds
adc
sub
inc
stos
pop
pop
leave
test
int3
mov
adc
dec
sub
pop
sub
fidivrs
and
out
clc
lea
fs
add
inc
inc
in
shrl
in
mov
shlb
and
shlb
loope
or
push
call
fsts
out
scas
add
mov
out
sub
outsb
call
js
mov
sub
ret
dec
loopne
add
loopew
mov
jg
cmc
jecxz
fisubl
mov
sbb
clc
mov
sbb
into
int
xchg
mov
mov
xchg
mov
mov
dec
push
sahf
mov
sub
pop
add
ficompl
repnz
aas
inc
sub
cmpsl
enter
xor
push
lahf
cmp
sbb
repz
fwait
cmp
outsl
nop
jb
out
ja
leave
fucomp
jno
or
cmp
push
stc
in
ljmp
pop
jmp
inc
lcall
shll
subl
and
add
xchg
jne
or
sbb
mov
mov
rorb
mov
pop
bound
mov
add
sbb
or
stos
sbb
push
xor
out
push
adc
out
mov
mov
lea
loope
aas
push
cmpsl
cltd
mov
fs
xlat
pusha
es
outsb
mov
and
or
pop
cmp
pop
dec
iret
mov
lcall
fistl
rorl
adc
or
mov
mov
lea
inc
lds
mov
dec
jecxz
cli
ja
loope
lret
adc
or
daa
ret
push
xchg
cmp
mov
sub
aam
loope
jae
push
sub
xchg
sbb
pushf
inc
imulb
in
xchg
aaa
fwait
mov
inc
subl
cli
cmp
es
sub
pop
inc
or
pop
scas
mov
cmpsb
ror
imul
scas
lret
inc
aas
movsb
dec
mov
xchg
inc
sbb
xchg
pusha
mov
stc
inc
push
into
ret
add
outsl
xchg
lret
scas
mov
sbb
insl
aaa
popf
push
pop
loopne
ss
imul
movsb
jne
lret
jae
insb
dec
add
cmp
imul
sbb
adc
in
sub
push
cmp
out
fsubr
test
cmpsl
movsb
push
cwtl
mov
out
inc
cmp
aaa
inc
pop
ret
and
sbb
out
push
sub
pop
jle
inc
cwtl
or
paddusb
cmp
aad
push
jb
xchg
mov
cltd
xchg
fwait
jl
xor
je
fwait
sbbb
andb
rclb
hlt
adc
mov
xchg
adc
push
mov
hlt
and
cmc
sbb
dec
push
dec
cld
pushf
sub
inc
add
into
mov
imul
sub
push
jge
mov
popf
inc
pop
pop
inc
rclb
pop
sbb
add
push
int
out
push
pop
mov
jmp
rorl
mov
fldt
pusha
mov
int
xlat
xchg
jl
xchg
xchg
inc
lret
lret
sub
outsl
mov
int3
mov
sub
and
mov
bound
mov
lock
and
jb
mov
jbe
mov
add
inc
xor
enter
insb
cld
cmp
sbb
rcrl
dec
sbb
jl,pt
cltd
popa
shlb
fwait
shll
push
and
or
xor
and
add
mov
mov
aaa
sbbl
push
xor
jbe
daa
sbb
or
sub
mov
dec
jecxz
jne
cs
inc
scas
out
cmp
or
insl
cmp
xlat
push
adcl
pushf
push
or
xor
idivl
dec
xor
std
scas
in
int3
inc
inc
jmp
mov
shll
into
addl
cmpsl
xor
lock
ret
ror
out
mov
sub
jae
xchg
jnp
pop
xor
push
mov
cs
fnstcw
or
push
aam
pop
xor
inc
cli
dec
mov
xor
dec
push
mov
and
jb
lret
out
pushf
sbb
adc
mov
aaa
cmc
nop
or
cmp
dec
sarb
mov
loopne
xor
test
and
adc
jns
popf
cmp
sbb
or
out
enter
test
sbb
movb
stos
mov
jl
int3
or
dec
dec
pop
mov
dec
paddusw
gs
mov
jns
out
mov
scas
in
sub
scas
out
ljmp
sbb
out
sahf
and
test
or
or
pop
push
std
cmp
icebp
lock
stc
xchg
fsubs
in
xor
mov
jl
btr
loope
insb
insl
jge
or
or
punpckhbw
xchg
aas
shrl
dec
stos
cmp
add
fsubs
sub
push
out
sub
lret
pop
mov
je
add
sahf
adc
add
ret
push
sar
jl
add
xchg
fldt
test
xchg
movsl
push
insb
push
fisubs
mov
call
ljmp
push
sub
je
push
repnz
imul
inc
dec
inc
repnz
pop
sbb
je
out
add
add
in
lret
pop
fimuls
aas
pop
push
adc
sub
cld
in
gs
js
mov
sub
xchg
xchg
fwait
pop
mov
push
mov
sbb
fisubl
movsb
rcrb
leave
and
stc
das
ja
aam
mov
inc
dec
jp
imul
dec
ret
push
mov
call
pop
pop
push
sbb
mov
scas
test
xchg
pop
imulb
xchg
jg
inc
test
mov
xor
push
pop
and
iret
and
xor
pop
cmp
jne
mov
cltd
dec
cli
add
jnp
cltd
in
data16
es
push
adc
inc
adc
lock
shrl
icebp
mul
push
pop
and
mov
mov
dec
add
test
hlt
jo
sbb
stos
cmp
jmp
pop
add
and
leave
mov
icebp
mov
aad
mov
jnp
push
inc
mov
stos
ret
cli
inc
sub
inc
sbb
cli
lea
in
cld
sti
pop
add
sbb
ds
negb
movb
push
leave
in
scas
inc
cmp
pop
sub
xor
mov
add
jnp
clc
sbb
add
mov
jl
push
clc
push
mov
fwait
test
pop
jmp
jbe
std
mov
popf
out
popf
jnp
movl
adc
fcoms
mov
ss
lea
movsl
xchg
pop
fnstenv
push
inc
jp
cltd
jae
and
inc
test
ret
adc
ret
jnp
js
push
test
inc
cmp
iret
stos
mov
cmpsl
movl
adc
mov
stc
pop
aam
jg
out
pop
rorb
add
mov
xor
mov
mov
jo
out
pop
fnstcw
out
lock
cmc
inc
lea
mov
xor
shlb
out
cld
mov
movsl
mov
clc
testl
xor
add
movsl
pop
jbe
or
popa
adc
mov
call
mov
jno
and
std
pop
mov
subl
jno
cmpl
dec
lcall
pop
mov
dec
cwtl
sub
adc
test
adc
and
push
push
insb
or
sbb
jg
not
out
inc
mov
xchg
negb
shrl
or
sbb
shrl
xor
dec
out
sbb
cmpsl
std
popl
or
gs
pop
fwait
icebp
sbb
cmpsl
cltd
mov
mov
pop
adc
inc
pop
pusha
in
xchg
mov
out
mov
add
inc
inc
das
arpl
pop
jae
lcall
pop
push
iret
pop
in
movsb
cld
out
mov
and
push
pop
inc
fisttpl
lods
lahf
rorl
fiadds
outsl
mov
insb
fiadds
lods
fdiv
inc
xchg
ds
pop
aad
jae
add
pop
xlat
hlt
pop
cmpsb
into
mov
mov
dec
sub
push
jecxz
divl
into
stc
out
jge
sub
int3
adc
out
push
les
daa
test
arpl
repnz
inc
jb
lea
mov
out
xor
clc
lds
test
pop
enter
xor
inc
icebp
lahf
repz
inc
sbb
pop
and
push
test
aaa
jmp
sub
lds
xor
or
adc
dec
dec
aad
fmul
cwtl
das
in
and
cs
xor
mov
xchg
mov
jp
ljmp
sbb
dec
int
sub
and
push
rorl
enter
sti
adc
mov
mov
enter
scas
lcall
lea
push
and
clc
mov
fcomps
rcr
fisttps
cmp
xor
cmp
pusha
xchg
xchg
hlt
enter
adc
data16
jb
inc
xchg
pop
mov
push
pop
icebp
jo
push
sub
sub
push
andb
imul
mov
insl
cmc
push
popf
sub
aas
stos
xchg
pop
sbb
jno
adc
adc
mov
icebp
ljmp
sub
insb
and
int3
xor
addl
jge
pop
hlt
loop
ss
cmp
mov
jns
loope
or
enter
mov
mov
push
cli
test
std
push
jns
sbb
test
sbb
xor
or
pop
lcall
out
mov
lock
or
adc
xchg
dec
scas
mov
in
sub
sbb
stos
cs
aad
push
stos
out
xchg
pop
xchg
pop
outsl
mov
dec
test
lcall
mov
je
es
lcall
repnz
movsb
jne
adc
scas
adc
rorb
or
jne
out
aaa
mov
addr16
jmp
jge
inc
fisttpll
sbb
push
pusha
xor
lods
push
ss
mov
inc
mov
inc
xor
cli
sbb
inc
and
sub
pop
and
mov
mov
and
loop
rcrb
jo
stos
in
add
into
mov
shlb
shlb
repz
jae
aaa
or
mov
cmpsb
and
dec
jne
adc
mov
adc
fstl
fistl
cld
xchg
repz
popf
stos
mov
ja
imul
cs
dec
and
lret
clc
rcll
dec
or
shrb
mov
and
mov
jae
or
sbb
rcrl
xor
lret
cwtl
les
or
in
out
lea
arpl
dec
icebp
xor
aad
mov
loopne
pop
cmp
lahf
fwait
xchg
lahf
or
lahf
cmpsl
jecxz
fs
mov
fidivs
sub
push
mov
mov
xor
iret
jae
dec
not
lods
outsl
sub
ret
add
cmp
mov
sbbb
aas
sub
imul
jmp
imul
push
fs
mov
or
out
dec
loop
add
cmp
xorl
in
les
adc
mov
sbb
ret
int
pop
xorb
sarl
shl
jge
pop
subl
jns
ss
dec
imul
jne
inc
pusha
mov
mov
decl
popa
in
ret
cmc
mov
faddl
rcrb
adc
sub
int
pop
jecxz
adc
sti
and
in
stos
or
cmp
cmc
sub
cmp
jo
lcall
rorb
jg
jl
xchg
sub
stos
cli
cmp
push
adc
imul
xor
push
xchg
mov
les
mov
mul
test
out
aam
inc
mov
push
cs
mov
mov
mov
mov
adc
popf
cs
sbb
or
adc
rorb
daa
clc
inc
xor
xor
imul
movsl
and
fstl
sbb
dec
divb
sbb
and
cltd
fcom
mov
push
sti
dec
cmp
repz
lahf
lahf
xchg
xor
pop
cmp
ds
aas
push
stos
pop
mov
pusha
or
adc
lods
imul
test
sbb
add
das
xor
jmp
nop
pop
pop
cmp
aam
mov
add
aaa
mov
dec
jno
movsb
sti
rclb
dec
sub
xor
insb
mov
sub
mov
pop
xchg
sub
roll
dec
into
mov
ret
adc
repnz
popa
in
dec
sbb
xchg
mov
loope
iret
mov
pop
orb
lret
and
sahf
cmp
xor
jb
imul
push
stos
dec
mov
or
pop
jb
int3
cmpsb
and
shll
ljmp
xchg
popl
shlb
mov
adc
popa
out
mov
mov
insb
es
aaa
mov
ret
dec
mov
stos
pusha
test
gs
cmp
or
les
mov
jns
loope
fidivs
cmpb
jnp
test
xsaves
in
cmp
out
add
add
je
stc
xchg
dec
iret
test
sbb
loop
lahf
data16
out
push
adc
mov
add
ss
sbb
xchg
stos
out
dec
test
mov
je
ja
rorb
js
out
fcompl
pop
fisttps
or
add
mov
jno
mov
mov
dec
cmpsb
fnstsw
pushf
in
mov
and
repz
outsl
in
iret
sti
mov
xor
push
fnstsw
in
add
push
out
sbb
sbb
xchg
and
xchg
test
mov
jg
sub
cmp
lcall
mov
adc
ds
dec
or
enter
ret
bound
and
int3
pop
outsl
and
pop
push
xchg
data16
insl
jnp
pushf
aam
cmp
ficoms
in
mov
push
or
nop
jl
fbstp
inc
inc
pop
mov
insl
mov
add
and
mov
mov
jg
xchg
and
inc
mov
dec
leave
mov
shrb
lahf
push
inc
sbb
ds
sbb
fucomi
jecxz
pop
in
cltd
cwtl
rcrl
or
xchg
jecxz
push
nop
ja
add
rcr
push
jle
lcall
mov
jl
push
push
mov
outsb
idivl
mov
mov
add
push
leave
xlat
and
dec
iret
cmp
add
dec
cmp
insl
jae
jmp
ljmp
cs
aas
clc
call
lcall
pop
clc
cmpsb
out
ja
stc
mov
xchg
dec
jecxz
stos
pop
std
pop
add
or
scas
or
loope
fisubl
cmp
or
movsl
xchg
lea
mov
enter
fcompl
andl
xchg
out
push
mov
and
movsb
ja
jge
stos
xlat
negl
je
cltd
cmp
sbb
cwtl
pop
out
pop
or
in
xchg
xchg
jae
aam
std
iret
imul
cmpsl
push
movsl
icebp
das
cmpsl
sbb
call
lods
imul
jg
nop
nop
mov
pop
mov
test
fcoml
pop
add
movsb
hlt
imul
push
jmp
test
loopne
xchg
push
fstl
adcl
or
adc
xchg
adc
pop
xchg
repnz
std
xor
stc
clc
iret
mov
mov
jmp
popf
je
ret
test
inc
cmc
mov
movsl
pop
mov
pop
vpavgw
test
and
jecxz
adc
int
out
xchg
sub
mov
rol
adcb
ret
pop
fsts
pop
xchg
jge
movsb
setae
mov
movsl
popa
insl
pop
cmp
xor
xor
in
shlb
add
testb
fstpl
add
jg
or
push
scas
rcrl
adc
cmp
mov
xchg
out
inc
insb
jb
repz
push
int
mov
mov
mov
movsb
or
insl
loopne
jb
subl
out
outsb
sub
add
shl
shl
cli
fisubrl
xchg
jmp
out
enter
test
shl
fstl
xor
adc
mov
insl
lea
fdivrl
subb
pop
inc
je
push
pop
add
fadd
jp
shlb
loop
cs
mov
add
pop
and
add
push
aas
cmp
add
xlat
sub
add
fs
cld
push
mov
and
mov
xchg
and
cmpsb
loopne
push
add
mov
adc
mul
gs
push
enter
fildl
popf
ja
bound
fwait
movsl
lock
lret
fs
or
sar
out
inc
lret
test
mov
imul
outsl
cmp
jb
sub
add
xchg
enter
lods
das
mov
outsl
call
sbb
mov
xchg
mov
pop
mov
push
mov
lock
iret
insl
in
xchg
out
fst
sahf
dec
lret
xor
xchg
inc
test
test
pop
cli
push
mov
or
iret
std
inc
push
adc
or
cmp
ljmp
add
mov
lahf
adc
aam
jb
int
sub
cmp
sub
push
shlb
and
pop
xchg
xor
dec
cmp
out
cmp
add
sbb
fisttpl
clc
rcr
pushf
jns
push
hlt
test
cltd
mov
pushf
bound
or
mov
jp
mov
dec
in
loop
push
shr
push
push
incb
lock
sbb
in
mov
fstl
jns
push
mov
clc
cmp
xor
out
jns
inc
sbbb
xchg
dec
cmc
popf
dec
test
std
fldt
leave
and
xor
push
rcr
fucomip
imul
jns
mov
xor
mov
mov
cmp
repnz
xor
sahf
hlt
xchg
push
push
pop
or
leave
or
stos
mov
and
bound
push
gs
into
or
std
adc
xor
popa
pop
sub
les
ds
mov
stc
sub
adc
les
popa
ljmp
rorl
push
dec
bnd
cmp
cs
sbb
cli
cmp
jecxz
add
xor
idivl
in
ds
sub
or
inc
add
stos
pop
icebp
frstor
shlb
jmp
stc
ja
xor
mov
ja
dec
mov
cli
mov
in
mov
fdivrl
loopne
das
lods
repz
and
mov
sbb
sbb
lahf
cmp
aam
aas
sbb
fimuls
xchg
aaa
dec
ja
scas
fsubrs
ret
bound
mov
push
xchg
xlat
push
lcall
es
mov
ds
ret
cs
mov
iret
sub
testb
mov
es
pop
call
jno
adc
mov
rcll
jb
jg
and
push
jp
sbb
mov
xchg
arpl
sbb
in
jno
movb
or
in
repnz
into
sbb
jne
xchg
push
pop
pop
flds
or
mov
xchg
push
jo
add
andb
stos
fistpll
icebp
push
dec
pusha
cwtl
push
shl
add
pop
ret
in
idivb
cltd
pushf
bound
in
dec
fwait
sbb
rcrl
out
lcall
repz
mov
jp
hlt
cltd
inc
scas
dec
icebp
xor
mov
adc
test
in
mov
inc
push
push
xchg
repz
out
adc
adc
dec
iret
ret
mov
inc
jnp
push
cs
push
sub
xor
cmpsb
pop
lds
cmpsl
mov
jmp
xchg
rcrb
lea
xchg
fildll
insl
aaa
add
or
jp
mov
push
shl
sbb
scas
in
in
lret
add
ja
sbb
imul
xor
push
mov
mov
gs
aas
jecxz
inc
cmp
leave
mov
jnp
test
sub
and
lods
ret
or
roll
cmpsl
mov
test
and
cmpsb
or
lds
cwtl
aam
int
push
aaa
cmpsl
jl
in
mov
clc
fldcw
inc
adc
pop
imul
cmpb
lods
dec
js
cmp
test
lods
and
mov
and
inc
lcall
mov
test
mov
mov
push
pop
pop
mov
push
sbb
and
cmp
in
inc
movsb
jg
mov
push
mov
or
movsb
add
inc
out
jle
push
jg
loop
mov
cli
sar
push
pop
add
out
or
imul
mov
push
lcall
pop
mov
shll
subb
nop
add
insb
out
mov
subb
jle
lcall
or
out
rorb
adc
mov
mov
lcall
pop
cld
push
mov
in
push
lods
mov
fistpl
rcrl
lret
aad
or
dec
popa
imul
clc
cld
push
lahf
jo
arpl
push
and
and
mov
dec
mov
add
repnz
jge
outsb
mov
fnstenv
movsl
out
lret
cs
gs
aam
cld
xchg
shl
inc
or
fcoms
inc
cmp
sub
xchg
outsl
push
xchg
xchg
ret
mov
test
dec
xor
das
add
sbb
shlb
clc
aam
push
into
je
lods
inc
mov
int3
in
sbb
mov
icebp
and
sbb
imul
cs
mov
lods
stos
cwtl
pop
push
pop
lock
mov
rolb
xor
mov
cmp
loop
shrb
out
call
ret
mov
movsb
push
loope
mov
inc
filds
mov
mov
les
inc
mov
push
pushw
bound
scas
loopne
in
xor
push
mov
mov
xchg
leave
pop
cmpsb
imul
divl
lods
jmp
repnz
aad
mov
ret
mov
sbb
adc
mov
cwtl
call
pop
enter
test
push
dec
cmpsl
in
cmp
inc
adc
or
and
cmc
lock
xor
nop
leave
repnz
lods
xor
das
ret
fimuls
mov
fcmovnbe
pop
fstp
fdivrs
rol
leave
mov
popfw
fwait
push
xchg
pop
ja
int
iret
fnstsw
jle
cmp
in
fdivrp
lods
lcall
mov
cmpl
fdivrl
lods
mov
mov
inc
mov
lock
pop
lret
dec
pop
mov
mov
std
mov
push
imul
push
jmp
xchg
jnp
cwtl
xor
out
or
movsb
and
cmp
add
inc
out
xor
xchg
test
and
mov
jge
in
jbe
ljmp
jmp
sbb
ss
and
jne
or
fistpll
or
mov
outsl
ja
xchg
cmp
aaa
adc
push
and
out
les
les
adc
fsubs
js
or
jns
sahf
testl
fsubs
lret
sub
in
inc
and
aaa
mov
fimull
mov
dec
adc
and
popa
fadd
arpl
inc
daa
and
stos
data16
data16
mov
jle
fiadds
jne
mov
insl
mov
sbb
mov
lret
in
insl
mov
dec
sub
cmpsb
push
aaa
jg
repnz
out
enter
dec
mov
in
pop
scas
mov
inc
add
mov
pop
push
aam
ror
int
add
popf
in
shlb
rolb
cmp
stos
pop
jp
mov
xchg
in
ss
test
or
dec
xchg
mov
add
pop
inc
lret
or
clc
cmpsl
scas
push
cwtl
fidivrl
lock
sbb
jmp
mov
scas
jecxz
cmp
adc
test
aaa
adc
xor
sti
mov
and
xchg
fwait
leave
outsb
dec
imul
aam
out
jo
push
xchg
mov
data16
mov
cmp
imul
iret
push
jne
or
ret
outsb
es
mov
lods
adc
adc
icebp
std
fisubs
dec
sbb
push
nop
mov
sbb
inc
outsb
aam
mov
inc
shlb
add
aaa
pop
jne
out
dec
sahf
imul
out
je
cmp
sbbb
xor
mov
cld
fists
xchg
inc
je
imul
and
pop
xchg
mov
loope
inc
and
cmp
arpl
rorb
out
push
xchg
cmpsb
jno
add
adc
in
or
cs
mov
lds
je
and
mov
ss
xlat
mov
inc
test
inc
pop
inc
loop
sbb
jo
hlt
mov
je
scas
nop
mov
fcoms
inc
sub
mov
ret
clc
add
xchg
loope
and
adc
dec
add
and
imul
lds
xchg
xor
pop
mov
jg
call
scas
gs
out
inc
sarl
push
pop
mov
aaa
and
mov
in
push
lahf
iret
mov
mov
cli
pushf
xor
orb
in
outsl
adc
xchg
cs
pusha
mov
insb
cs
and
xchg
xchg
xchg
ret
pop
cmp
shl
sbb
or
fbld
add
inc
addr16
adc
mov
sbb
push
shr
push
scas
sbbl
mov
dec
mov
xchg
jbe
repz
arpl
aad
cli
lcall
adc
in
enter
inc
and
test
jne
rolb
mov
mov
push
sub
push
movsb
push
inc
xchg
clc
and
jg,pt
mov
mov
add
loopne
lcall
or
xlat
mov
inc
sbb
dec
lock
mov
lock
call
lret
cmp
push
or
inc
dec
cmp
lea
rolb
pop
stos
push
int
pop
pop
pushf
or
call
adc
push
lds
sti
sub
xchg
loop
add
daa
and
jmp
jle
sub
cld
lods
call
hlt
cmp
sbb
fisubs
es
xchg
sti
xor
jmp
daa
mov
outsb
add
fs
fmull
mov
pop
lods
insl
mov
imul
jmp
dec
push
xor
pushf
rol
fdivs
imul
inc
or
and
push
das
pop
call
addr16
jne
inc
daa
xor
call
dec
out
ret
movsl
and
dec
jno
insl
aas
movsb
rclb
jnp
divb
xchg
cli
shlb
or
mov
enter
push
lds
mov
rcll
cmpsb
hlt
clc
sub
and
mov
inc
pop
loopne
add
rolw
mov
pop
in
fsubp
cltd
cwtl
and
sbb
or
sub
fwait
cmc
cmp
cmp
repz
sbb
and
pop
je
loopne
repz
xchg
mov
and
cmp
push
enter
xchg
aas
scas
or
adc
cmp
add
out
fwait
dec
shll
movb
cmp
jbe
outsl
imul
stc
lret
jmp
mov
sahf
mov
daa
jge
mov
lahf
sarl
dec
mov
fnstsw
int3
mov
lea
adc
mov
adc
mov
adc
cmp
out
jne
push
fsin
addr16
push
xor
mov
jl
add
adc
push
lds
dec
pop
xchg
dec
scas
ja
cmpl
into
out
mov
sub
shlb
adc
push
stos
inc
push
jne
push
push
or
push
cmp
rcrl
cli
nop
and
adc
jo
sbb
aam
push
loope
or
lods
mov
xor
icebp
insl
mov
imul
daa
mov
jl
cld
xor
addr16
pop
push
inc
mov
sbbl
in
jnp
mov
xchg
xor
cmp
pop
xor
or
andb
fists
xchg
popa
cmp
mov
scas
lcall
pusha
mulb
leave
in
add
lock
nop
mov
fnstcw
jge
int3
cmp
mov
add
or
jo
sahf
cmpsl
ja
and
daa
or
add
aas
xorl
push
pop
lock
sti
sbb
rol
mov
imul
mov
xchg
mov
imul
sti
inc
sub
push
mov
and
sub
pop
jb
xchg
cmp
jne
jge
lea
cmp
imul
arpl
ficoml
mov
lret
fidivrl
mov
and
test
inc
sub
sbb
xchg
and
idivl
mov
cmpsl
ss
fcomps
push
mov
adc
inc
sub
adc
rorl
mov
xchg
stc
aas
mov
les
sub
insb
frstor
lea
jns
mov
inc
push
movsb
mov
xor
cmp
movsb
sbb
int3
xlat
add
sbb
sahf
xchg
sbb
rcll
ficoms
ret
int
pop
sub
xor
lea
sbb
sbb
mov
sbb
dec
xchg
pop
sbb
cmp
addb
in
cmp
inc
dec
std
adc
ja
jmp
adc
adc
cmp
xchg
and
add
shrb
and
addl
xchg
test
int
jecxz
mov
sub
das
adc
adc
aas
insl
xchg
sbb
inc
dec
lock
ss
xchg
push
or
inc
mov
xchg
shr
add
pop
stos
sbb
mov
inc
pop
dec
in
and
lret
fimuls
repnz
test
xchg
daa
fmull
add
adc
mov
mov
xchg
or
cli
das
clc
or
roll
dec
in
out
dec
into
pop
cmp
or
xchg
pop
insl
adc
push
push
int3
sbb
cli
outsl
add
popf
in
push
ss
mov
lock
stos
cmpsb
jmp
les
aad
aam
cld
lods
jnp
mov
addr16
pop
pop
pop
jmp
push
jle
cld
push
xchg
les
cmc
mov
ljmp
xor
mov
mov
mov
out
mov
imulb
pop
pop
cmpsb
fcmovb
scas
outsb
push
jbe
test
jge
fidivl
push
xchg
mov
push
dec
cmp
std
std
inc
jb
mov
push
push
add
loopne
xchg
ret
inc
jbe
out
inc
popa
lea
xchg
adc
jp
cmp
into
unpcklps
mov
in
imul
jbe
stos
js
ret
es
xchg
jge
sub
pop
pop
std
fcmovnu
jnp
mov
in
cmp
push
iret
jno
pop
rolb
mov
movsb
divb
xchg
mov
cmp
push
pop
sub
stos
test
loopne
cmp
pop
repnz
into
dec
pop
imul
mov
inc
xor
dec
jmp
loopne
aam
fistpll
lods
arpl
push
dec
ja
pop
or
jbe
decb
mov
leave
or
sub
add
xchg
mov
mov
je
stc
shll
decl
xchg
rclb
fstpl
pop
jns
aaa
test
push
js
mov
rcrl
and
mov
pop
sbb
fsubr
and
adc
mov
jno
insb
cmp
cltd
cltd
dec
pop
fmuls
xchg
imul
shrb
sub
add
and
mov
js
mov
pusha
sbb
sbb
mov
out
cmpsb
push
mov
and
add
imul
cld
dec
addr16
cmpsl
or
add
sbb
in
xchg
fldcw
mov
pop
xchg
xchg
xor
subb
pop
dec
xlat
mov
sbb
test
add
mov
add
push
rolb
in
imul
fs
or
cli
test
mov
int3
ja
dec
ljmp
jbe
pop
cmp
xchg
std
lret
jmp
cmp
xchg
popa
xorl
dec
jle
lock
mov
outsb
mov
fidivrl
loopne
xor
inc
and
stos
sti
sbb
in
arpl
iret
xor
inc
ret
xchg
sti
or
mov
cs
cmp
mov
rorb
dec
or
loop
push
loop
dec
push
jno
pop
clc
mov
mov
in
sarl
adc
mov
stos
stos
xor
adc
or
adc
lcall
cmp
cmp
push
pop
or
sbb
add
mov
add
cmpsl
je
mov
and
fimull
daa
ljmp
xchg
int
and
in
adc
test
call
stos
and
mov
add
inc
mov
xchg
xchg
push
sbb
jmp
in
xchg
loope
in
cwtl
push
cs
loopne
testb
xchg
imul
pop
cli
mov
cwtl
cmp
pop
into
add
xchg
push
sbb
rorl
repnz
dec
aas
fucomi
sbb
clc
sub
out
add
enter
mov
and
push
adc
out
xor
sbb
ret
fwait
pop
xlat
sbb
sbb
sub
mov
loop
repz
int
repnz
jns
mov
xor
pop
and
xor
fcompl
les
bswap
loope
and
sub
outsb
lahf
std
inc
jnp
ljmp
in
pop
mov
outsl
mov
repnz
dec
xchg
adc
loop
daa
push
and
popf
adc
sti
rcrb
fwait
pop
xchg
hlt
jmp
mov
push
jg
out
repnz
mov
jae
push
cmp
jb
pop
fidivs
sub
xchg
push
mov
or
cmp
mov
xor
clc
xchg
inc
movsb
mov
fimull
mov
inc
dec
aad
fucomip
xlat
cltd
push
jns
mov
and
push
jl
adcb
or
sub
xchg
out
js
addr16
lcall
hlt
dec
loope
int3
cmp
jo
in
clc
inc
mov
inc
bsf
push
dec
xchg
xchg
into
dec
or
clc
push
call
and
popa
popf
add
icebp
and
lea
sub
loopne
mov
jo
mov
inc
and
shrb
xor
jp
mov
adcl
dec
dec
push
xor
leave
mov
pusha
push
shlb
and
xor
dec
sbb
inc
pop
xchg
jae
test
jmp
fmuls
sub
pop
test
stos
movsl
mov
faddl
mov
xchg
repnz
aaa
fisttpl
jmp
js
repz
lfs
std
lods
repz
stc
js
gs
cmpsl
adc
mov
sarl
in
or
lock
push
fimull
repnz
negb
sbb
pop
pop
mov
aam
mov
or
pop
add
xchg
pop
pop
imulb
xchg
sbb
xor
cli
inc
ljmp
in
mov
test
js
stc
sarb
test
into
sbb
jl
and
into
call
push
aaa
fsubrl
jge
daa
cmp
mov
stc
jl
lcall
stc
xor
out
mov
retw
cmp
sarl
int3
test
xor
incb
jmp
das
mov
inc
imul
repnz
xor
je
cli
dec
or
fwait
inc
fdivl
pop
pop
cwtl
jne
cmc
jmp
jl
rcl
out
xor
in
push
ret
jecxz
test
or
cmpsb
lret
add
push
lods
pop
je
aaa
popf
or
or
push
xor
jg
adc
pop
es
pop
std
jge
xchg
in
in
jl
pop
ret
imul
push
mov
sub
fsts
pop
ljmp
movsl
cmp
popl
mov
cmpsl
and
mov
lock
mov
repz
lret
scas
aas
inc
filds
fadds
sti
jp
addr16
sub
mov
fsubs
push
add
mov
scas
mov
fisttps
add
pop
fsubrl
ljmp
loope
inc
sub
insl
mov
loop
popa
sti
cmp
orl
xchg
push
inc
xchg
push
sbb
dec
repnz
mov
mov
and
fs
mov
in
inc
inc
adc
das
std
sub
dec
ja
sbb
adc
loop
loop
and
jp
mov
xor
stos
adc
in
jnp
aad
into
ss
insl
js
mov
jg
mov
mov
repz
or
xchg
or
sub
sbb
test
jmp
into
xchg
pop
icebp
pop
xorl
stc
lret
xchg
sti
jecxz
adcb
jb
jle
pop
add
jle
jge
jp
jno
jg
gs
pusha
cmp
push
mull
jmp
or
lds
pop
xchg
mov
pop
repz
xchg
jmp
scas
fdivr
adc
std
int3
mov
push
sub
ret
int
or
add
or
fwait
je
mov
leave
lds
hlt
into
xor
xorb
cli
mov
mov
in
fs
sub
inc
aam
xor
sbb
push
sub
scas
dec
aas
shl
sbb
lock
ret
jb
sub
in
idivb
mov
addl
push
sub
aam
jmp
in
jecxz
fists
sbb
mov
test
ja
dec
inc
das
shll
mov
pushf
pop
cmp
jge
inc
xlat
dec
clc
mov
loope
jb
pop
daa
aaa
es
xchg
or
or
push
inc
incl
push
inc
jg
cmp
call
mov
bound
popa
mov
clc
mulb
pop
into
fmull
loop
push
outsl
pop
mov
subl
or
inc
add
pop
sti
and
ds
mov
sbb
or
xchg
lods
or
lds
out
and
xor
push
lods
outsb
push
mov
mov
cmpsb
pushf
add
xchg
jmp
setle
fistl
movsl
jmp
sub
xchg
and
mov
jg
pop
mov
cmpsl
pop
lret
fninit
cwtl
es
xor
faddl
or
inc
test
mov
pop
outsb
mov
jns
xchg
repnz
dec
lcall
iret
jl
rcl
shrb
and
mov
sub
cmpsb
jge
sub
jl
push
cmp
push
pop
scas
push
add
inc
enter
inc
sbb
mov
dec
lock
jns
pop
stos
fcmovnbe
push
std
mov
out
sub
adc
mov
sub
jbe
mov
int
scas
cmc
aam
sub
xor
sarb
fimuls
adc
jno
pop
mov
jle
clc
js
test
jae
xor
rol
mov
add
test
cs
out
jecxz
imul
cmpsl
and
adc
popa
lock
adc
ds
push
or
jle
pop
fs
loope
pop
push
mov
ja
push
cld
add
push
adc
mov
mov
into
shl
push
cli
int
jmp
jp
xor
nop
mov
scas
sbb
cwtl
push
cmp
adc
out
add
push
leave
out
add
mov
repz
ljmp
cwtl
rclb
sbb
ds
mov
dec
jno
mov
aam
push
pop
mov
scas
gs
sbb
popf
rcrb
sub
aaa
packuswb
inc
pushf
int3
stc
int3
push
push
xor
jge
xchg
lcall
lret
movsb
dec
adc
cmpsl
daa
pop
and
pop
scas
shlb
adc
mov
fcoms
and
icebp
roll
fmuls
out
push
adc
push
jmp
cmc
or
test
mov
clc
frstor
cmp
push
mov
jmp
stos
push
mov
cmp
mov
mov
das
jnp
dec
xor
xchg
into
outsb
cmpsl
cmp
hlt
xlat
or
add
fisttpl
push
push
mov
clc
adc
mov
loopne
adc
xchg
shll
and
fistpl
mov
fstps
push
pop
or
mov
notb
mov
push
dec
push
mov
stc
ror
shll
mov
and
and
mov
sub
stos
int
in
lahf
ret
pop
inc
mov
mov
hlt
loop
xorl
stos
xchg
adc
decb
jmp
push
int
lret
xor
dec
push
lds
nop
flds
fwait
pop
mov
imul
data16
or
enter
sub
pusha
repnz
rcll
cmp
jns
or
dec
ret
mov
cli
rol
lcall
out
jl
adc
pop
hlt
xchg
in
pop
pop
aas
fistpll
pop
adc
dec
fdiv
push
adc
mov
movsl
mov
imul
or
xor
push
test
out
or
nop
mov
rorb
mov
cmpsb
adc
lahf
dec
pop
sbb
jp
mov
or
jns
in
leave
call
mov
cli
es
repnz
addr16
cmp
and
or
repnz
xchg
jno
ljmp
add
mov
xor
adc
insb
inc
inc
xor
test
xor
sbbb
push
dec
xchg
mov
jae
pop
sarl
xchg
pushf
cmpsl
xchg
scas
sub
aas
int3
push
movsl
or
mov
pop
mov
add
lods
out
iret
pop
mov
shlb
pop
mov
clc
data16
pop
inc
loope
jne
test
pop
dec
test
cmp
nop
lods
dec
inc
xchg
push
cmp
inc
out
aam
pop
movsb
sub
xor
sub
add
lcall
push
outsl
jg
popa
lods
imul
subb
sub
dec
and
nop
jns
or
lret
leave
push
push
pop
adc
and
rorb
inc
mov
scas
lahf
jmp
push
fwait
cs
icebp
inc
leave
scas
mov
outsl
sbb
pop
into
aaa
add
sub
stc
sub
pop
ss
add
mov
adc
mov
and
arpl
jl
lcall
push
and
push
popf
xor
mov
jecxz
imul
rcl
mov
mov
pop
mov
cwtl
sbb
jns
rcl
shlb
pop
into
fs
cmp
sbb
dec
cmc
sub
and
rcll
cmp
xor
dec
out
shrb
jmp
insb
xlat
je
xchg
jle
sub
and
popa
jo
mov
push
or
ss
dec
int3
mov
and
mov
sbb
cli
imul
mov
cmpsb
mov
repnz
out
pop
sbb
mov
xchg
dec
mov
ret
outsl
scas
push
popa
pop
dec
iret
dec
ss
call
jmp
insl
stc
dec
jp
jno
and
sbb
mov
add
or
or
movsl
or
pop
pop
fwait
mov
adc
not
pop
test
push
dec
xchg
mov
sti
jecxz
pop
mov
data16
push
and
sarb
jle
and
mov
gs
outsb
faddp
sbb
lods
ss
push
add
pop
popf
mov
lods
xor
xchg
jge
mov
sahf
scas
add
dec
dec
cwtl
test
fs
dec
cmp
cmc
jbe
push
aas
in
out
ljmp
sub
mov
jnp
mov
mov
jbe
insb
test
jbe
out
loope
imul
add
pop
and
push
dec
lcall
or
and
dec
push
and
and
scas
fsubs
pop
adc
sti
push
clc
jns
mov
stc
lahf
mov
ret
int3
jge
and
push
lods
jp
push
xchg
sbb
mov
mov
int3
jb
repnz
jb
cmp
mov
and
xchg
xorb
ss
call
mov
cltd
or
xchg
jl
push
cmp
repz
cmp
and
out
bnd
mov
sbb
xchg
pushf
mov
add
pop
adc
clc
mov
push
loope
jnp
push
mov
movsl
mov
ja
pop
and
add
nopl
dec
cmp
sarb
mov
cmp
out
jne
into
fcoms
sub
insl
push
mov
mov
lcall
testl
inc
in
and
dec
btr
xchg
jmp
fsts
pop
fdivrl
pushf
rcrl
adc
data16
mov
mov
iret
and
repz
xlat
xor
xchg
gs
xchg
fxch
jae
pushf
mov
daa
loopne
inc
test
sub
loop
sub
insl
les
dec
cmp
and
mov
add
dec
push
sbb
push
jb
sbb
cmpsl
push
mov
in
mov
pop
xchg
dec
inc
scas
jo
mov
xor
xchg
stos
dec
cld
and
lock
cltd
setbe
lods
mov
repnz
out
mov
push
cmp
sarb
or
movsl
stos
repz
ljmp
mov
push
rorb
xor
fs
push
fwait
mov
xchg
cmp
jmp
mov
shrl
subb
sbb
std
mov
fsubrl
add
aam
add
or
xor
mov
mov
pusha
in
dec
jae
inc
mov
inc
xchg
ror
movb
loope
idivl
sbb
dec
repnz
mov
add
std
and
aam
fildl
inc
in
xchg
xor
mov
ficompl
sahf
into
mov
xor
lcall
pop
or
adc
mov
cmp
call
fdivrl
jecxz
ret
xchg
mov
hlt
faddl
cmc
push
mov
call
mov
outsb
les
lock
jmp
xchg
push
mov
jge
hlt
fcoms
xor
out
repz
int
leave
xchg
inc
lret
int
das
pop
pop
testl
inc
mov
pop
lds
imul
fldl
leave
outsb
fnstcw
scas
out
dec
xor
lahf
movsl
dec
mov
icebp
jge
push
enter
xor
outsb
jno
and
outsb
jmp
xchg
movsl
rolb
sub
ss
mov
std
jecxz
das
or
jg
push
test
cmc
add
rorb
call
mov
sarb
push
rcrl
add
or
out
xchg
movsl
xchg
outsb
cwtl
xchg
and
rolw
inc
imul
inc
push
dec
rcrb
jo
or
push
test
mov
and
sub
out
mov
push
pop
dec
push
int3
lret
jae
aad
mov
lret
sbb
add
jbe
test
push
mov
cmpsb
shll
lock
je
ja
loop
jp
jmp
cwtl
sti
or
mov
ret
cmpl
mov
pop
rcrb
cmp
inc
pop
aam
or
jmp
push
xor
repnz
mov
mov
xor
rolb
filds
mov
push
scas
sbb
mov
xor
push
mov
bound
jo
testb
pushf
repz
or
insb
xchg
xchg
test
stos
sub
mov
jns
cmp
mov
jle
das
cmp
pop
cltd
insl
dec
inc
mov
call
xlat
jo
popa
or
fdivrs
pop
jb
es
jle
sbb
pusha
xor
mov
clc
lahf
mov
clc
scas
scas
xchg
jl
test
int
in
loop
test
repnz
mov
cmp
add
shll
sub
xor
adc
icebp
jle
pop
or
push
push
pop
ss
popf
adc
dec
stos
mov
je
and
mov
je
sbb
dec
xchg
xchg
scas
arpl
lret
inc
cld
insl
push
hlt
lds
sub
mov
and
roll
dec
jb
push
dec
adc
pop
mov
imul
xor
jbe
xor
into
lods
sbbb
xor
scas
cmp
mov
insl
adc
popa
adc
stc
jge
arpl
cmp
stos
test
and
jecxz
repnz
js
xchg
fnstenv
sahf
out
sbb
and
stos
mov
addr16
cmp
or
mov
adc
iret
cmpb
and
sub
jnp
and
loop
imul
lret
mov
cmp
xor
fldenv
adc
repnz
push
and
filds
fisttpl
and
xor
xchg
dec
push
push
jne
jmp
mov
or
or
cs
ja
mov
loop
xchg
fdiv
push
jp
movsb
test
aas
int3
push
mov
sub
mov
xchg
shr
ss
mov
je
nop
lcall
push
mov
xchg
notl
inc
or
xor
insb
xchg
or
sub
rcr
outsl
or
mov
mov
pop
dec
inc
inc
out
pop
sub
in
add
xor
dec
lret
std
mov
rorb
pop
ja
adc
mov
les
outsl
cmp
in
rolb
dec
into
mov
movsb
fidivrs
jmp
or
bound
inc
aad
out
bound
push
jl
hlt
in
loop
and
fldcw
sbb
sbb
test
cld
sti
out
bound
mov
in
mov
cmpsb
sub
or
enter
cmp
mov
xchg
loopne
orb
adc
dec
jp
sbb
data16
ja
lock
xor
mov
mov
xchg
pop
push
jb
popf
mov
cmp
or
fistl
je
in
add
push
mov
lds
in
rclb
lock
sbb
mov
pop
jmp
push
sub
mov
sarb
test
aad
cmc
mov
leave
pop
call
mov
fcomp
xchg
aam
pushf
cmpsb
mov
adc
cmpsb
ss
or
int
fldl
cmp
add
jge
aad
mov
adc
inc
add
mov
popf
add
sahf
aad
in
lods
lea
push
in
jl
and
lahf
inc
or
xchg
shrl
in
movsb
push
roll
xor
jne
cmpsb
lcall
sahf
sbb
adc
in
addr16
xchg
sub
loopne
dec
ret
lods
popa
xchg
sub
jnp
and
dec
das
jl
lahf
jge
jno
sbb
mov
xchg
leave
shr
repnz
mov
stos
test
ds
xchg
push
daa
push
rcrb
pop
adc
mov
fs
ja
pop
pop
inc
orl
mov
and
daa
out
jne
mov
mov
movsl
stc
out
fsubl
pmulhuw
scas
lret
cltd
add
pop
ljmp
xchg
in
lds
xor
or
outsl
jns
cmp
repz
jb
adc
cmpsl
imul
lret
push
jmp
test
rcll
pop
and
add
dec
mov
push
add
fsts
sub
lahf
adc
cmpsl
inc
dec
pop
xchg
jge
aas
icebp
push
das
mov
and
ss
or
shrb
sub
leave
push
push
pop
sub
std
dec
stos
out
sti
insb
lcall
lret
mov
das
popa
cmp
repnz
imul
addr16
push
mov
cmp
es
add
add
popa
mov
aaa
shlb
fdiv
rcrb
inc
push
test
xor
repz
jno
stos
pop
mov
mov
insl
decl
xchg
pop
fstpl
pop
jo
cmp
pop
dec
loopne
push
ss
mov
xlat
dec
jbe
in
push
dec
xchg
pop
or
mov
out
cli
imul
adc
ljmp
loopne
popa
sbb
cmc
cmp
sub
into
push
sbb
and
test
repnz
cmp
lock
sahf
mov
cmc
ret
xor
sub
icebp
inc
xor
mov
xchg
clc
cs
adc
mov
fsubl
andb
push
enter
loop
sbb
mov
mov
mov
loope
dec
mov
dec
cli
test
stos
xchg
inc
pusha
lret
jmp
lahf
je
cld
jnp
movsb
mov
mov
pop
out
xor
aad
sbb
mov
mov
pop
sub
dec
addr16
out
sub
test
xor
cmp
jb
jnp
adc
sub
adc
psrlq
mov
sbb
mov
sbb
and
dec
dec
xlat
mov
add
mov
ljmp
mov
mov
and
js
mov
test
pop
dec
adc
mov
sbb
mov
inc
inc
pusha
push
push
sbb
sbb
inc
mov
fucomip
push
sarb
sbb
and
jge
iret
insl
imull
in
mov
sub
mulb
xlat
pop
aad
lret
push
sti
cmpl
dec
xchg
sbb
adcb
lea
lret
popa
dec
addl
test
push
adc
jecxz
call
stc
movsl
shll
pop
std
push
vmovaps
cmpsw
test
mov
incb
loop
pop
loopne
mov
inc
pop
out
stc
and
popa
and
mov
mov
ret
or
lret
outsl
push
decb
aad
mov
cmp
or
push
in
jns
clc
xchg
stos
sbb
std
bound
xorb
aam
xchg
sti
xor
ljmp
aaa
outsb
repz
and
xchg
cmp
rorb
popa
repnz
sbbl
repz
loope
xchg
xchg
inc
cmp
xor
mov
adc
out
leave
andl
jnp
cmp
outsb
jae
sbb
adc
ljmp
bnd
sahf
pop
stos
insb
fsub
pushf
jecxz
gs
pop
add
nop
fdivl
add
xlat
dec
les
cmp
cmp
inc
scas
dec
je
pop
jnp
push
mov
adc
repz
ljmp
cmpb
inc
push
fs
negb
xor
xchg
out
mov
push
sbb
out
push
jle
cmp
fisubs
jg
mov
sbb
jo
icebp
rolb
xor
loope
dec
sub
lea
mov
mov
dec
pushf
notb
stc
shrb
popa
cmp
push
stc
xor
xchg
pop
jb
push
ret
jmp
ljmp
pop
insb
xor
xchg
add
data16
and
cmp
sub
sub
mov
push
mov
sbb
test
pop
dec
jae
ret
or
aam
mov
xchg
idivl
or
dec
rcrl
sbb
inc
test
push
in
mov
sbb
jne
jae
lea
and
lea
pop
push
pop
lcall
mov
or
mov
jl
sbb
and
fcompl
into
adc
sahf
jns
call
jo
scas
imul
fsts
ret
imull
xor
cmp
xchg
pop
mov
out
push
cmp
push
call
loopne
stc
xchg
mov
aad
out
mov
int
xlat
mov
fcomip
adc
andb
inc
add
outsb
pushf
dec
andl
addb
mov
inc
pop
add
or
mov
jp
dec
clc
cmp
aad
icebp
into
lret
imul
jb
sbb
insl
pop
mov
sti
mov
xlat
xor
pop
sub
fdivrl
leave
adc
leave
cli
mov
fiadds
mov
out
cmp
repz
andb
or
fdivr
insl
fs
add
std
sbb
cmp
mov
dec
icebp
cmp
into
js
and
lock
test
mov
or
mov
icebp
add
jmp
and
ds
es
repz
lret
xor
push
push
push
lcall
jns
ljmp
insl
jl
out
dec
cld
mov
mov
loope
mov
push
dec
jl
es
dec
aas
mov
jmp
jae
cmp
mov
popa
cmp
or
shrl
shl
cs
das
sbb
mov
testl
mov
in
das
das
vandnps
test
adc
xchg
inc
fiadds
test
sub
inc
mov
repnz
pushf
cs
jae
fsubrl
sbb
int3
adc
xor
lods
push
adc
arpl
pushf
jae
mov
jnp
inc
and
out
push
stos
in
mov
mov
jge
outsl
icebp
inc
xor
and
hlt
int
or
push
inc
sti
lret
sbb
cltd
test
fs
fwait
shll
xor
mov
dec
jno
je
add
cltd
mov
push
xchg
push
mov
xor
xor
rorb
sbb
xchg
cmp
lret
popa
jg
inc
xor
or
sub
add
cld
stos
push
and
mov
push
scas
stos
xchg
movsb
cmc
push
add
dec
mov
dec
popf
dec
inc
cwtl
dec
lods
in
je
mov
adc
pop
cli
dec
sub
add
movsl
adc
movsl
mov
mov
lret
xor
or
rcl
stc
cli
jp
and
mov
and
mov
adc
sub
lods
cwtl
sbbl
mov
add
adc
jnp
xor
sarb
bound
push
cli
pop
mov
adc
xchg
je
push
mov
in
pop
xor
lea
hlt
mov
in
or
and
adc
fcomps
sbbb
jle
sub
xchg
nop
cltd
lds
in
imul
lock
mov
cs
sar
mulb
or
or
pop
xor
cmp
mov
dec
adc
imul
or
and
mov
pop
mov
int3
xor
adc
push
lret
les
cltd
jae
xchg
or
and
mov
jb
push
pop
mov
xchg
mov
leave
mov
xor
mov
mov
and
cmp
mov
aaa
outsb
stos
xor
inc
pop
adc
push
add
mov
stc
shl
mov
adc
lock
out
movsl
jns
mov
mov
jl
cli
icebp
int
outsl
mov
sub
cwtl
push
and
cltd
popf
stos
inc
mov
inc
scas
fisubrs
shlb
xchg
jmp
mov
lret
mov
push
cmp
dec
xchg
lret
lahf
or
jns
dec
inc
je
add
pop
stc
ljmp
push
in
es
and
push
pop
and
push
sbb
pop
inc
into
cwtl
mov
rcpps
pop
fld
mov
jg
popf
inc
sub
cmc
sbb
sub
dec
sub
jle
loopne
xchg
or
cmc
out
add
fnstcw
decl
out
xchg
lret
mov
push
fdivrl
xchg
lret
cld
sbb
mov
inc
ljmp
ss
jno
cmpsl
out
push
mov
fildl
xchg
outsb
mov
add
mov
xor
out
dec
push
fwait
mov
xor
mov
cmc
pop
lret
pushf
add
sbb
popf
xor
in
scas
fs
push
pop
daa
xchg
sub
loope
ss
js
inc
loop
add
test
mov
cmpsl
mov
mov
dec
aas
mov
xchg
add
mov
call
nop
pop
dec
aas
lcall
dec
jns
and
inc
and
flds
jns
jmp
and
cwtl
push
pushf
aad
sbb
mov
xchg
jb
fiaddl
je
xor
inc
inc
lods
ss
xchg
mov
icebp
out
mov
jmp
mov
ds
sbb
xchg
out
dec
int3
jne,pn
outsb
stos
fldenv
cmp
push
push
push
cwtl
clc
sub
xorb
or
adc
push
test
mov
mov
adc
data16
outsb
xchg
xlat
or
xor
into
test
mov
mov
in
pop
test
inc
cltd
data16
stc
gs
pop
movnti
out
into
push
sbb
or
pop
call
sbb
mov
aas
mov
push
inc
sbb
fnstcw
js
cwtl
add
adc
shll
mov
dec
push
adc
out
sbb
das
jns
push
push
mov
ja
out
mov
test
lods
cmc
or
xchg
ss
fcmovnb
in
sahf
cmc
pop
fnstcw
cmpsb
inc
jno
sub
test
sub
std
or
push
cmp
sbb
pusha
in
test
ficomps
sub
outsl
cs
pop
sbb
aas
dec
mov
test
push
cld
mov
fidivrs
pop
or
dec
daa
xchg
push
ljmp
inc
js
adc
push
mov
sub
aad
mov
outsb
sbb
cmp
stos
mov
xchg
xchg
mov
repz
cmp
pushw
add
jmp
jb
lsl
insb
imul
xor
add
popa
cmpsb
lret
clc
mov
test
repnz
inc
xchg
loop
shll
pop
pop
inc
and
sbb
pop
jmp
lcall
xchg
add
cmp
push
out
and
stos
stos
mov
cmp
adc
cltd
aam
jae
mov
sahf
mov
mov
std
lock
add
add
fcmovb
insb
pusha
scas
adc
jmp
scas
ljmp
aaa
add
jp
sbb
aad
inc
xor
cmp
jmp
clc
gs
popa
adc
addr16
dec
movsl
icebp
pop
cltd
pop
or
xchg
mov
int3
ret
jns
ss
pop
mov
fstp
push
outsl
mov
fistpl
sti
mov
mov
push
cmp
xor
xchg
or
das
dec
jl
add
scas
xchg
cltd
add
mov
fildl
cltd
mov
mov
mov
pusha
mov
std
pop
xor
std
xchg
shl
movsl
dec
hlt
lock
jge
mov
fdiv
cltd
push
push
jmp
or
bound
push
jne
mov
xchg
cmc
lock
cmp
adcb
repnz
jo
fdivs
aam
jecxz
push
ds
dec
insl
bound
and
inc
xchg
jge
pop
push
mov
cmp
mov
cltd
cmp
lret
jo
out
mov
aaa
sbb
inc
fildll
stos
sarl
sbb
sub
push
cwtl
mov
cmpsl
dec
std
lret
sub
cmpsl
test
push
add
add
ret
xor
jnp
in
inc
sub
add
inc
xlat
xor
bound
sub
out
call
js
xor
add
popa
sbb
call
cmc
inc
dec
ret
or
mov
clc
in
int
call
pushl
mov
adc
cmc
adc
pusha
mov
and
pop
mov
push
mov
or
icebp
jmp
lds
stos
inc
lods
sub
cmc
call
hlt
out
mov
sub
icebp
mov
pushl
mov
in
cmp
loopne
jmp
add
scas
je
jns
add
mov
lahf
push
and
in
mov
lods
std
lds
sub
cmp
cmc
hlt
jnp
sarb
cmp
push
out
lret
test
xchg
inc
mov
stc
sti
outsb
loopne
fimull
pop
out
sub
test
fs
scas
or
arpl
je
roll
movsb
cli
push
mov
test
xor
push
std
xchg
out
movsl
ds
and
repnz
sbb
pop
rcll
xor
xchg
ficoms
pmulhw
cltd
imul
stc
and
imulb
add
aaa
sub
lock
imul
pop
aaa
inc
leave
gs
lret
xchg
cs
insl
jge
mov
daa
inc
aas
and
lock
cmpsl
shlb
xor
mov
lods
cmpsl
fidivs
out
pop
xor
inc
lcall
shll
add
fsubs
in
mov
ss
mov
ss
in
cmpsl
dec
orl
push
aas
into
cmpsl
mov
fsubp
adc
in
mov
test
sub
out
xor
jmp
push
xchg
push
mov
xor
push
xchg
xchg
push
dec
shl
lahf
pop
dec
jne
daa
rcr
push
aam
inc
fs
sar
xchg
and
adc
or
dec
and
dec
loopne
addr16
loope
sti
dec
xchg
shll
fs
rcrl
add
adc
inc
or
xorb
pop
mov
out
jmp
dec
xlat
or
add
rcrb
cwtl
shlb
dec
pop
mov
ret
dec
sarb
xchg
jecxz
cmp
adc
stos
xor
dec
sbbb
popf
stc
mov
scas
in
aam
loop
mov
popf
cmpsl
hlt
mov
pop
mov
cmpsb
jnp
ljmp
and
push
out
cmp
inc
mov
push
xlat
or
rolb
in
or
cmp
pop
jo
ror
fs
xchg
fucom
insb
cwtl
dec
sets
cmp
and
cwtl
leave
xor
movb
inc
imul
fstl
inc
fstpt
ds
mov
cmpsb
pop
pop
cld
sbb
dec
mov
repz
push
jg
cwtl
lods
daa
sbb
ret
js
xchg
adc
mov
lar
sbbb
aad
jge
push
pop
lods
or
popf
pushl
clc
shrb
test
and
stos
lea
mov
or
pop
mov
out
or
push
xchg
call
fsubl
xlat
imul
mov
andl
or
pop
add
mov
mov
insl
or
jne
or
cmpsl
repz
add
sub
outsl
jle
xor
je
sub
mov
icebp
gs
inc
mov
loope
sub
bnd
add
or
aam
scas
inc
cmpsb
adc
and
xorl
test
mov
not
ret
loopne
push
and
aad
ror
mov
xlat
inc
cli
and
push
push
lods
push
and
scas
lea
js
loope
test
pop
mov
cltd
xchg
call
cmpb
add
fldcw
mov
lds
pop
mov
xor
jno
stos
mov
cs
sbb
dec
fadd
mov
outsl
xchg
cld
xchg
in
push
out
aad
xor
or
mov
stc
pop
daa
ss
test
xor
adc
test
icebp
xchg
jnp
addr16
popf
sar
jae
test
into
or
fs
aaa
or
push
iret
movsb
mov
loope
cmp
fwait
jno
cmp
ja
cmp
pop
pop
imul
movsb
adc
jle
adc
rcl
xor
test
cwtl
and
and
ret
test
ror
xchg
inc
es
inc
jae
leave
rcrw
lcall
rcrb
aaa
sbb
roll
lods
add
mov
or
mull
sbb
push
sub
mov
lret
sbb
cmpsb
pop
arpl
mov
lret
popa
imul
ja
pusha
jbe
xlat
outsb
push
wrmsr
out
inc
dec
inc
pop
or
jno
push
data16
xlat
sahf
mov
pop
sub
movl
ss
mov
jmp
push
xchg
mov
lret
clc
and
lret
or
inc
dec
aad
enter
int
sbbb
das
mov
inc
pop
mov
gs
add
jecxz
dec
movsl
ljmp
push
jb
jp
push
sbb
mov
xchg
dec
je
sub
shll
ret
mov
mov
call
mov
dec
sub
bound
pop
ljmp
push
sbb
lret
sub
pop
ja
mov
lahf
cs
shlb
or
mov
or
add
subl
xchg
lret
hlt
ljmp
pop
loop
cmc
xor
push
repz
jnp
insl
fbstp
xchg
dec
mov
daa
sbb
inc
mov
or
or
sub
loopne
xchg
fcoml
jnp
or
out
pop
leave
or
mov
lahf
repnz
scas
gs
cmc
pop
xchg
cmp
lods
lods
push
jbe
lahf
hlt
ds
pushf
decb
imul
imulb
push
pop
xchg
push
mov
xlat
cld
cmp
outsb
and
xchg
sahf
loope
scas
jmp
jne
clc
and
daa
mov
es
ss
cltd
and
mov
in
insb
test
dec
pop
cli
push
push
and
or
adc
mov
push
icebp
in
inc
adc
jbe
pop
loope
jp
cld
cmp
xchg
data16
xor
lods
dec
outsb
movsb
test
test
aas
lcall
lcall
je
or
scas
xchg
repz
aaa
jle
mov
push
adc
sbb
mov
int3
or
sar
xchg
jmp
rcll
js
xor
mov
aad
fisttpll
ss
mov
sub
out
inc
sub
xchg
mov
jg
mov
cmpsl
addb
andl
aaa
cmp
ss
dec
mov
rorl
mov
mov
addr16
xchg
push
xchg
fidivrs
push
and
pop
push
jno
xlat
or
mov
push
sub
mov
fadd
imul
or
les
call
rcl
mov
mov
stos
and
or
dec
push
js
add
int3
imul
jle
jg
subb
xchg
lods
sahf
push
dec
or
ret
add
addl
imul
jp
xor
and
push
leave
cmpsb
mov
out
dec
pop
mov
push
mov
mov
jl
pop
ficompl
fcmovnu
jo
mov
int3
xorb
test
popfw
adc
cwtl
fisubl
shlb
xchg
test
pusha
pop
xchg
mov
arpl
jnp
aas
push
jmp
cmp
stos
push
jne
mov
orb
divb
xor
push
xor
adc
mov
inc
sub
mov
pop
scas
pop
xchg
mov
pop
or
in
loop
repnz
cmc
in
inc
dec
movsl
popa
aad
test
jmp
shrb
sbb
pushf
fimull
andl
pop
jmp
ficompl
es
sub
fs
adc
and
orb
loop
mov
pop
jecxz
dec
popf
pop
mov
out
xchg
and
cmp
mov
sub
inc
cltd
pop
adcl
xchg
or
jg
jo
stc
pop
inc
push
mov
fidivl
jnp
rcll
pop
sub
and
xchg
mov
jno
and
lcall
dec
pusha
movsb
loope
inc
stc
insb
je
ljmp
mov
mul
and
pushf
out
aad
add
mov
and
sahf
inc
cmpb
lret
mov
mov
or
nop
cmp
push
dec
add
cmp
test
sbb
jbe
adc
out
aad
cmp
ds
loope
pop
push
ret
outsb
sti
pop
leave
popf
jb
jo
stos
mov
fldcw
test
stos
andl
stc
xchg
inc
loopne
adc
lret
dec
clc
jae
dec
stc
pop
push
ret
in
gs
sbb
stc
and
fmuls
mov
je
pop
cmp
cmp
aam
cmp
fwait
mov
testb
pusha
mov
xchg
adc
fidivrl
and
lahf
jae
adc
inc
ret
xchg
sbb
mov
pushf
pusha
xchg
inc
jae
xor
mov
cmpsl
test
jmp
or
adc
mov
loop
or
mov
jecxz,pt
rcrl
orl
and
fs
add
andb
cli
mov
addb
sub
aas
jle
add
lock
jb
loopne
mov
int
cmp
jo
loope
mov
xlat
mov
insb
jb
es
push
jae
sub
mov
popf
cwtl
cmpsb
or
outsl
xor
pop
stos
iret
ds
ret
repz
xchg
cmp
rcr
or
mov
push
cli
add
xor
arpl
mov
addl
out
xchg
scas
ret
add
xchg
xlat
mov
mov
jp
aas
xor
fcom
xchg
insb
shr
push
cmc
icebp
xor
sub
xchg
std
pop
or
jecxz
xchg
xchg
mov
add
dec
ja
dec
sbb
fmuls
outsl
outsl
xor
inc
mov
dec
popf
sub
xor
in
ljmp
cmpsb
xchg
loope
adc
stos
jg
dec
mov
adc
es
push
adcl
jae
mov
enter
pop
pop
lock
sahf
mov
sub
mov
xchg
jb
cmpsb
cmp
cmova
leave
call
mov
push
cmp
inc
mov
jmp
push
jno
cwtl
mov
xor
loope
lret
test
sub
addr16
xchg
push
int3
inc
sub
xor
ret
gs
push
ds
popf
js
das
dec
std
jnp
xchg
pop
pop
out
fnop
and
cmpsl
xchg
mov
push
loope
jae
mov
sbb
clc
inc
xor
stc
lds
out
jle
in
mov
loop
add
xor
cld
xchg
add
cmp
jo
fnclex
sub
or
sbb
jne
jb
arpl
and
ljmp
popa
scas
inc
mov
cmp
arpl
add
mov
pop
sahf
sub
jae
pop
mov
sbbb
and
rolb
cmc
mov
push
popa
lahf
fstl
push
lock
leave
mov
mov
sub
mov
mov
and
sbb
adc
push
dec
int3
enterw
xor
push
int3
fildl
lock
lods
sbbb
add
or
fwait
cwtl
inc
sbb
and
mov
arpl
scas
xor
loope
popa
mov
movb
pop
push
or
into
or
dec
fs
cltd
inc
mov
xlat
jge
iret
inc
cmp
ljmp
out
jne
sub
outsb
add
inc
jbe
add
mov
push
dec
call
jnp
adc
cmc
pop
pop
adc
iret
rorb
push
out
sbb
mov
loopne
sbbl
xchg
cmp
adc
mov
cli
adcb
mov
mov
xchg
dec
ljmp
movsb
shll
rorb
jnp
jo
sbb
je
aam
dec
jmp
mov
cmp
jp
in
cmp
cs
xchg
cmpl
shlb
lcall
push
xchg
adc
push
xchg
inc
insb
and
loopne
popf
push
call
stc
fisubrl
leave
repz
xor
sbb
pop
mov
dec
adc
push
jge
xchg
cmp
iret
push
arpl
sbb
and
pop
lcall
out
pop
andl
mov
mov
xchg
adc
mov
mov
das
adc
jns
clc
jne
dec
cmp
pop
psubsw
fimull
add
scas
ror
into
call
popa
sub
jbe
mov
insl
cltd
subb
jmp
aas
pusha
and
in
sub
loopne
inc
lret
ret
sub
aas
movsl
bswap
xchg
les
add
push
mov
les
inc
iret
mov
mov
insb
adc
sbb
sub
dec
xor
scas
aas
mov
daa
dec
lods
addr16
mov
xchg
outsb
dec
rcll
push
xchg
js
sbb
fidivl
loopne
fbld
pop
fdivl
jg
shrb
fwait
lods
mov
notl
adc
sub
jl
pushf
popw
pop
fs
iret
add
mov
mov
jne
jle
int3
mov
cmp
and
jo
std
sbb
push
jnp
mov
fucomp
pop
shrb
and
push
cmp
nop
pop
std
mov
jne
in
fidivrs
add
dec
in
or
mov
push
sub
in
sub
arpl
clts
adc
jl
ret
jecxz
je
jp
adc
and
push
sub
jg
pop
sbbb
out
in
cmpsb
or
cmp
mov
pop
mov
pop
or
ljmp
and
mov
fsubrs
mov
and
or
adc
movb
mov
jo
cld
nop
add
sbb
shrl
inc
jb
lahf
sub
je
jl
mov
and
pusha
inc
cs
xchg
cli
sub
lock
mov
xchg
lods
adc
pop
clc
into
fs
cmc
mov
into
mov
mov
mov
inc
dec
sbb
fistpll
xchg
cmpsb
into
sub
andb
push
pop
cmpsb
mov
mov
loope
mov
lock
cltd
jle
push
fildl
testl
loope
mov
pushl
mov
cmp
subb
pop
pop
adc
mov
stos
mov
xchg
jno
inc
es
aam
bound
pusha
cld
iret
cmp
sbbl
inc
shl
shll
cmp
inc
data16
popf
repnz
popf
mov
cmpsl
negl
ja
enter
lock
mov
fs
pop
shlb
mov
add
mov
test
mov
push
lret
arpl
mov
or
mov
xchg
and
xchg
cmp
push
leave
bound
fwait
sbb
sub
out
jbe
cmpsl
sahf
xor
addl
enter
or
int
js
dec
add
mov
outsb
mov
cmp
lds
cmpsl
push
mov
sti
mov
inc
addr16
sidtl
aaa
js
dec
aaa
cmp
out
jnp
mov
add
sbb
sub
pop
hlt
dec
push
iret
jmp
or
mov
sbb
or
jge,pt
in
jnp
lods
inc
lret
cmp
insl
lods
aaa
fwait
enter
pop
dec
xchg
jno
or
mov
fwait
jnp
sbb
jle
je
fmuls
add
lea
mov
fdiv
data16
out
leave
and
xor
push
or
int
push
push
lds
addr16
and
sbb
jns
xor
test
pop
jg
add
dec
mov
or
dec
pop
xchg
loop
dec
cmp
sub
into
jbe
push
sbb
sub
dec
mov
sbb
adc
in
and
mov
sahf
js
xchg
test
cld
push
testb
les
leave
mov
in
dec
stos
out
std
mov
sbb
and
or
int3
adc
and
adc
jmp
xor
pushf
push
push
push
push
dec
aad
cmpsl
insl
lds
inc
sbb
sahf
repnz
push
fiaddl
sarb
pusha
mov
mov
add
inc
cmpsb
lods
lock
stc
or
addr16
movsb
mov
mov
inc
xor
lds
adc
sti
xor
add
cld
mov
repnz
mov
arpl
sbb
add
mov
stc
inc
dec
mov
pop
mov
int
pop
sbb
mov
lcall
sub
or
inc
popf
dec
loopne
xor
mov
or
push
pop
mov
jbe
lahf
xchg
sbb
in
sub
sub
adc
jp
je
dec
rclb
jle
icebp
out
enter
xchg
inc
fwait
ss
push
mov
mov
or
aaa
push
sbb
orl
jb
dec
fildl
jno
ret
mov
test
xchg
inc
or
out
xor
jns
push
or
enter
mov
popa
cld
mov
xor
jns
into
push
mov
sbb
lret
push
inc
xor
jg
pop
test
cmp
nop
cmp
ds
xor
daa
test
enter
fnsave
movsl
mov
ficoms
not
inc
inc
cmp
or
fdivl
pushf
and
dec
jnp
ret
xorb
bound
movsl
mov
mov
jl
out
jnp
adc
insb
mov
inc
dec
nop
xor
imul
jecxz
aam
nop
orl
and
test
dec
add
mov
ret
xchg
jmp
pop
pop
mulb
push
cmp
adc
cmpsl
or
ret
pop
jp
xorl
mov
add
dec
movsb
outsl
test
dec
fwait
cli
and
add
push
or
daa
clc
xchg
pusha
stos
jb
fcoml
jle
outsl
sub
and
jne
mov
jbe
loopne
push
lahf
push
xchg
sub
in
dec
in
jne
and
jo
fcomi
adc
adcb
inc
sub
pop
fcomps
cmp
push
pushf
pop
jmp
dec
popf
scas
mov
sbbl
pusha
bound
or
and
cltd
fnstsw
fdivr
inc
xchg
cmp
iret
push
js
mov
dec
jo
ja
scas
lret
lock
cmp
adc
cmpsl
or
movsl
testb
es
mov
dec
sbb
or
vdivsd
insl
lods
insb
and
sub
mov
cli
or
addr16
add
in
sub
lret
loop
call
mov
adc
mov
jb
and
sub
in
sti
std
aaa
push
pushl
insl
cmp
cmp
popa
push
jmp
and
xorl
in
xlat
test
ja
jmp
pusha
push
xor
inc
js
out
and
xchg
lock
mov
stos
faddl
push
mov
in
aas
fdivrp
jbe
and
mov
add
push
cmp
es
cld
sub
andl
sbb
inc
fwait
lds
pusha
or
pop
jle
push
xchg
mov
jns,pn
xor
xchg
pushf
inc
sub
loopne
bound
jp
lea
push
push
xchg
lock
cmp
insb
xor
cmp
in
pop
iret
stos
add
popl
dec
sbb
das
lret
leave
cmpsb
xchg
shll
jg
stos
fildl
cmpsb
mov
dec
mov
inc
cmpsl
ljmp
js
inc
xorl
cmp
adc
adc
inc
mov
test
push
inc
lea
outsb
repnz
out
leave
mov
addr16
jae
mov
xchg
and
dec
adc
sub
mov
and
mov
push
and
imul
dec
xchg
andb
scas
and
cmpl
inc
pop
sbb
iret
or
ja
int3
and
daa
dec
testl
or
fistpll
xchg
insl
fsts
adc
sbb
adc
and
popa
lahf
add
ss
call
test
jae
fstpl
outsb
fs
mov
mov
jo
pop
sbb
sub
adc
subb
push
stos
out
movsb
push
out
xor
xor
test
cmp
xchg
lods
pop
popa
loopne
addr16
insb
loopne
or
xor
scas
mov
inc
in
je
call
xor
pop
or
mov
ficoms
rorb
cld
dec
in
aas
gs
push
popf
movsl
into
lret
mov
andl
sbb
adc
repz
divl
ffree
gs
and
jl
inc
in
in
mov
loopne
sbb
rcr
dec
or
ljmp
xchg
xchg
js
call
cmovnp
ja
rclb
into
adc
testb
xor
incb
mov
jp
xchg
shrl
push
or
inc
loop
sbb
xchg
jmp
rcrb
rol
mov
push
pop
jp
popa
mov
and
cmp
push
xchg
sub
inc
je
test
and
sub
iret
xor
mov
mov
cwtl
or
adc
decb
mov
xor
push
xchg
cmpsb
bound
inc
jg
sub
push
out
add
lahf
sub
push
cld
rorl
xor
stc
aad
pop
stos
into
jmp
cltd
or
mov
push
jns
add
fadds
adc
mov
ja
outsb
inc
lods
jecxz
andb
movsb
cmc
adc
jecxz
lret
shl
scas
push
andl
add
adc
std
fisttps
and
adc
sbbb
int
xor
xor
cltd
adc
push
push
testl
sub
dec
xchg
xor
cmp
push
cmp
in
clc
int3
mov
adc
das
push
push
aad
je
push
cmp
sbb
inc
int3
js
mov
mov
lods
call
dec
popa
stos
outsb
ds
jl
out
test
pop
mov
lock
lcall
ljmp
mov
pop
in
fsubr
adc
in
lds
mov
mov
scas
call
repnz
test
dec
mov
mov
sbb
rol
into
xchg
fcomps
andl
std
push
jge
incb
or
fdivs
mov
mov
jne
stos
xchg
pop
mov
sbb
aam
out
cli
popa
cmc
mov
cmp
mov
js
aas
je
or
add
sahf
and
repnz
xchg
pop
mov
aaa
out
cltd
outsb
int
ljmp
push
or
sbb
lcall
ret
sub
dec
aas
call
movsb
rol
inc
lds
loop
xchg
mov
xor
pop
cmp
jg
sub
mov
mov
test
stos
sub
pop
insl
pop
adc
dec
data16
inc
hlt
js
pop
mov
pop
ficoms
jg
cmp
andl
and
jecxz
call
dec
fimuls
xchg
jl
pop
imul
mov
fucomi
test
sub
call
mov
aas
test
or
mov
clc
jmp
jnp
cli
cltd
movsl
pop
jle
loope
xchg
add
aam
fadds
sbb
inc
inc
xor
and
dec
add
in
cli
jecxz
les
sbb
fcmove
imul
iret
pop
mov
adcb
test
xchg
out
outsl
lds
mov
scas
dec
jae
jo
out
sahf
lea
mov
andb
pop
cmpxchg
jg
pop
add
cs
outsb
mov
or
scas
dec
sbb
mov
loop
shrb
int
pushf
jne
jae
inc
xchg
ds
sub
push
filds
mov
xchg
push
stos
lds
out
cmpsl
and
sub
in
mov
std
pop
xchg
lds
icebp
mov
xor
jmp
inc
inc
cmpsl
je
inc
cmp
lock
sbb
jnp
stos
sub
mov
and
shlb
ja
and
sub
jb
sbb
dec
mov
and
cld
and
loop
push
in
sub
push
outsb
jo
jnp
ds
loop
mov
fdivr
pop
out
dec
lea
jbe
insb
stc
sahf
jbe
lods
push
out
loope
adc
stc
pop
adc
xor
xchg
scas
mov
push
scas
fmuls
mov
jge
fmul
gs
mov
and
or
das
xchg
ret
mov
push
xor
lods
or
add
or
and
gs
and
sub
ja
fwait
sahf
mov
popa
inc
pop
push
fists
xlat
mov
cmp
adc
leave
iret
sub
into
aas
push
or
arpl
jle
je
cwtl
jo
cltd
addr16
dec
or
mov
inc
jns
gs
into
js
lcall
and
dec
pcmpeqw
cs
out
pop
mov
cmp
jbe
sub
push
lret
xorb
shrb
decb
mov
jle
sbb
imul
pop
xchg
cli
and
jnp
flds
mov
cmp
mov
sbb
aad
pop
adc
mov
out
xor
pop
sbb
jecxz,pt
mov
rolb
push
or
bound
mov
insl
out
xor
cmpsl
lcall
fucom
mov
aam
xor
inc
icebp
push
imul
pop
jns
sbb
popa
lret
ret
outsb
fcompl
xchg
pop
lods
push
mov
aad
cs
jp
in
test
idivb
push
setns
aad
lahf
xchg
pop
loope
es
cli
mov
imul
push
dec
into
push
bnd
or
imul
jnp
cmpsb
dec
inc
adc
cmpsb
xchg
test
mov
scas
add
aas
lods
mov
xor
add
test
fcomps
jmp
lock
pushf
jnp
or
xor
sbb
pop
inc
adc
xchg
dec
xor
pushf
mov
push
call
mov
push
stos
jecxz
push
mov
jnp
inc
push
rolb
out
mov
push
inc
lret
push
in
fwait
insl
xchg
xchg
test
inc
jl
xor
mov
ret
mov
dec
clc
dec
sbb
adc
jnp
inc
pop
or
test
cmp
or
cmc
loopne
jp
pop
imul
inc
shlb
add
pushf
push
pop
jp
subl
push
mov
loopne
sbb
aaa
daa
lock
pushf
adc
push
push
cmc
adc
jnp
dec
iret
pop
xchg
insb
mov
int3
je
jl
fistps
add
dec
adc
inc
inc
pop
ret
in
push
adc
test
loopne
dec
xor
adc
push
bound
inc
imul
cmp
pop
nop
cmp
xor
mov
or
mov
pushf
lea
test
cmp
adc
ret
mov
adc
test
sub
jae
jno
jecxz
cmp
jmp
loope
xor
pop
arpl
xchg
int3
arpl
add
mov
mov
lds
xchg
pop
xchg
sub
xchg
int3
in
or
or
outsl
les
dec
aad
dec
mov
xlat
push
scas
leave
jnp
out
rcl
clc
mov
or
push
negb
insb
stc
lds
rorb
rep
fbld
bound
div
jbe
mov
jl
shlb
sub
repz
ss
push
mov
mov
mov
loopne
mov
or
push
ret
sti
inc
sbb
xor
jae
or
loopne
out
sbb
das
xchg
cmp
cmp
pop
cmpl
pushf
popf
clc
leave
xchg
outsl
hlt
rcrb
inc
movsl
aam
mov
adc
pop
pop
mov
inc
mov
or
cli
xchg
pusha
popf
mov
decb
test
in
inc
cmpsb
sub
icebp
jl
or
pop
xchg
ret
ret
cld
mov
sti
push
xchg
aad
in
es
cmp
adc
add
das
test
or
ds
iret
xor
lea
fadd
sbb
xor
out
cmp
pop
fdivs
int3
dec
roll
dec
adc
or
outsb
repnz
jecxz
std
pop
add
adc
aam
int
movsl
ret
out
std
or
push
or
mov
sub
and
gs
cltd
jg
sub
and
aad
cmp
aam
movsb
or
push
adc
mov
out
dec
mov
or
mov
xchg
rclb
gs
dec
js
cwtl
lock
daa
mov
cwtl
cmp
pop
and
push
pop
cmc
xor
in
fstpl
inc
push
mov
sbb
fnstsw
stc
xchg
adc
mov
popa
dec
xor
push
inc
add
iret
inc
ljmp
mov
mov
jb
fwait
out
lcall
jecxz
ret
push
mov
xor
in
arpl
lret
lret
cmp
sti
pop
pop
mov
jmp
ret
add
data16
mov
xor
into
or
scas
dec
aam
and
push
inc
inc
sbb
adc
les
and
xchg
dec
scas
cmpsb
stc
iret
pushf
xchg
lock
cmp
jns
adc
stc
lds
and
pop
jecxz
subl
mov
mov
pop
pushf
shl
clc
push
rdtsc
movsl
jge
stos
jl
mov
insl
xchg
mov
je
imul
xor
xor
add
inc
lock
mov
push
lcall
in
push
mov
leavew
push
idiv
aaa
gs
movsl
jg
and
push
addl
and
stc
icebp
mov
andb
jne
pop
ret
in
push
insl
loope
dec
or
jbe
loopne
ret
pop
xor
mov
fwait
and
sahf
push
stos
sub
aaa
xor
out
mov
xchg
shlb
pusha
sub
jns
ret
xlat
add
dec
sarl
and
mov
cmp
stc
jae
adc
mov
and
filds
add
cmp
leave
das
mov
pop
push
lret
lret
mov
or
ds
jnp
sub
pop
push
and
inc
mov
jecxz
mov
mov
nop
xchg
inc
faddl
sub
les
sbbl
pop
mov
cmp
popf
inc
mov
jg
jp
mov
fistpll
fstl
mov
stc
mov
xchg
xchg
adc
xchg
out
mov
add
cmc
leave
test
ret
sub
jns
jne
mov
cmp
sub
in
inc
ja
mov
dec
jns
pop
test
btc
mov
test
cmp
xor
lret
lahf
dec
mov
sbb
bound
popa
dec
ret
into
or
mov
int
dec
mov
dec
or
jne
pushf
and
leave
lcall
pop
jno
mov
stos
stos
xchg
rcr
or
dec
dec
outsb
sub
xor
aad
lahf
jne
insl
fisttpl
loop
inc
push
adc
adc
scas
xchg
clc
mov
hlt
rcrl
loopne
popa
and
enter
jae
jmp
xor
adc
xor
jmp
sbb
xor
sbb
lcall
ficomps
andb
loopne
pop
add
out
cld
xor
jl
mov
bound
movsb
fstpt
clc
jno
inc
or
mov
pop
cmp
repnz
imul
pop
xor
mov
xor
scas
imul
fsts
popf
add
or
mov
add
es
loope
and
add
jg
add
sbb
hlt
mov
hlt
popf
cmpl
stos
xor
mulb
adc
or
sbb
ds
insb
mov
dec
pop
or
sub
clc
movsb
je
and
leave
inc
imul
sbb
mov
or
pop
jmp
pop
or
dec
cmp
in
inc
sarl
mov
imul
mov
cmpsb
scas
or
jecxz
cmc
jns
mov
jb
mov
cmpsl
xchg
xor
cs
mov
roll
std
andl
dec
mov
push
fidivrl
out
push
ret
mov
rclb
and
mov
mov
cmc
xor
fwait
push
shlb
nop
in
jle
test
test
leave
push
fwait
push
fcoml
gs
sbb
lods
cmp
iret
add
aaa
or
sbb
pop
lds
in
pop
push
mov
pop
mov
pushf
aam
out
xlat
xor
out
dec
cmp
aam
mov
loope
xchg
mov
repnz
ret
icebp
jg
xor
outsb
shrb
repz
jae
pop
push
xchg
jp
shl
cmp
xchg
lea
xor
jnp
xchg
adc
mov
insb
push
out
pop
add
shlb
push
push
push
sbb
or
adc
sbb
ja
xchg
test
jp
jns
les
pop
dec
movsl
cmp
mov
sbb
mov
xor
out
mov
add
mov
out
inc
push
push
jp
cmp
in
jbe
fmull
imul
lret
mov
sub
jb,pt
dec
cmp
dec
xchg
jbe
pop
adc
sbb
adc
rcrl
lret
sbb
pop
int
shlb
pop
xchg
and
add
adc
ret
jne
push
xchg
out
sbb
popl
test
lods
jbe
stos
cmp
out
or
and
push
mov
mov
jmp
insb
dec
es
lock
cltd
pop
sbb
or
fists
cmc
add
shlb
pop
ljmp
push
jne
sarl
push
das
and
loop
leave
mov
sbb
inc
sar
imul
pop
sarl
in
push
or
xchg
mov
mov
sub
sub
xchg
and
xchg
dec
outsl
dec
lret
and
stos
xor
push
bound
lea
sarl
addl
fnstenv
mov
and
lahf
add
out
xor
adc
les
xor
leave
arpl
repz
xchg
aas
mov
jno
lods
push
test
push
mov
jns
fnstcw
or
addl
int
mov
mull
push
es
mov
sbb
ljmp
mov
mov
inc
xchg
xor
mov
sti
or
and
popa
pop
cld
gs
cmp
out
jge
xadd
add
dec
popa
push
arpl
stos
or
push
stos
push
negb
repz
lahf
jns
sub
inc
hlt
je
adc
sbb
xor
ret
mov
fmull
adc
jo
fbstp
add
outsb
repnz
cmp
cmc
sbb
jns
sbb
adc
fwait
dec
xchg
icebp
xor
cmpsb
std
lea
inc
mov
enter
adc
dec
add
jb
push
mov
stc
outsb
cld
int3
inc
pop
stc
mov
xor
les
xchg
clc
stc
jnp
xchg
xor
les
daa
xor
push
jl
shrb
cs
addr16
xchg
imul
stc
jne
insb
push
jle
cmp
cs
pop
ret
scas
xlat
lds
rcll
and
push
add
add
cltd
es
les
test
xor
sub
sbb
pop
ja
js
push
jb
dec
jno
cmc
or
fistps
aaa
cs
aad
stc
xchg
pop
addr16
adc
shl
and
arpl
jp
pop
sub
cmc
je
andb
dec
or
clc
mov
pop
in
push
test
mov
jmp
test
ljmp
inc
mov
push
bswap
jl
jb
fimull
add
int
ljmp
xchg
jg
mov
enter
inc
cli
daa
jmp
mov
lock
call
jp
std
or
mov
ljmp
push
sub
dec
loopne
stos
pusha
lock
jb
popf
add
cs
xchg
jge
clc
rcl
pop
xor
sbb
xchg
fistps
add
or
jmp
dec
iret
push
mov
or
fs
into
cmp
pusha
push
push
int3
cmp
loopne
dec
popa
imul
jg
cmp
sub
repnz
jne
cld
add
or
xchg
popf
popf
fldt
arpl
jo
add
jle
xor
scas
cmpsb
jno
das
fs
or
push
xor
xlat
cmp
jmp
ret
shll
loop
or
stc
jb
lcall
xchg
fdivrs
outsl
xor
sbb
inc
mov
and
in
cmp
xor
es
jmp
imul
mov
insb
push
jp
jne
enter
in
pop
lcall
xor
aad
addr16
sub
add
xlat
push
cmp
in
clc
lcall
daa
dec
inc
inc
dec
imul
dec
pop
push
cmp
neg
and
xor
fstl
jge
inc
fldcw
adc
repnz
sub
sub
xor
jmp
add
aas
xchg
scas
cs
ljmp
scas
lea
inc
pop
je
and
inc
cmpsl
loop
sahf
pop
push
jno
xchg
andb
pop
and
orl
push
push
adc
aad
stos
mov
loop
cltd
push
inc
mov
dec
sub
lahf
cmp
ljmp
cwtl
cli
mov
sub
lock
pushf
out
in
mov
xchg
push
add
lret
lods
or
push
dec
mov
shlb
sbb
or
ret
mov
arpl
xchg
push
cmp
mov
test
cwtl
adc
cmpsb
aam
and
sbb
lods
sub
dec
stos
mov
sub
lret
icebp
lea
cmc
fwait
jne
sub
in
fistpll
daa
jo
xor
stos
loop
mov
jo
or
dec
xorb
daa
mov
adc
or
les
sbb
mov
inc
and
inc
iret
xchg
mov
out
xchg
xchg
push
push
mov
ljmp
pop
push
mov
decl
inc
out
mulb
cmpsl
dec
pop
xchg
ljmp
pusha
jle
idivb
shl
jbe
mov
mov
lret
mov
nop
xchg
push
adc
cmp
nop
jecxz
pop
dec
std
sarb
pop
out
mov
xor
dec
data16
gs
mull
aas
xchg
xchg
add
repnz
fdivrl
inc
lods
repz
xchg
ss
fistpl
aad
ss
or
addb
fsubrl
test
cltd
insb
add
cmp
dec
repnz
leave
xor
pop
fsubrl
push
mov
sub
sbb
xorb
pushf
jle
and
stc
popa
push
pusha
jmp
inc
lea
aad
je
xchg
inc
or
addr16
movsl
out
xor
leave
int3
cmp
jno
fwait
or
stos
jns
cmc
aaa
cmpsl
test
in
or
cmpl
mov
mov
and
shlb
dec
sbb
push
sti
jb
push
sbb
testl
jb
cmp
bswap
mov
std
sub
mov
mov
and
adc
jle
push
dec
fcmovnbe
and
scas
jge
cmp
popf
dec
inc
daa
pop
mov
xchg
stos
jno
shl
push
lods
jo
jle
adc
inc
dec
add
dec
xor
push
lret
mov
sbb
movsl
fbstp
pop
nop
jg
jge
in
imul
movsb
mov
pop
adc
dec
popf
lret
pop
mov
mov
std
dec
enter
das
cli
and
add
cmp
mov
mov
and
sub
jo
js
addl
push
push
lods
adc
lods
repz
pop
sub
jae
cmpsb
dec
pop
xchg
inc
and
xchg
shll
mov
xchg
xchg
xchg
or
and
cmpsb
ja
push
pop
mov
jbe
jns
ljmp
aad
aaa
mov
sub
fmull
aas
push
xchg
cmp
nop
test
mov
cmp
cvtpi2ps
aaa
and
or
fisttpl
leave
jb
sub
mov
rol
sahf
loop
iret
aas
leave
imul
pop
in
mov
sar
push
jo
lock
add
js
les
nop
xchg
inc
leave
ret
sub
nop
fdivl
adc
xor
fs
jmp
xor
iret
xchg
aad
mov
pushf
push
and
mov
mov
jnp
adc
pop
rcll
inc
xchg
loope
inc
lds
outsl
xor
xchg
test
jg
jp
cli
mov
pusha
lock
sbb
jp
push
push
aaa
pop
loop
mov
out
add
and
xchg
out
and
cwtl
outsb
or
faddp
lea
mov
pop
mov
jo
mov
gs
dec
lea
mov
xchg
in
out
jbe
negb
fimull
bound
xchg
fstpl
sub
loop
xchg
dec
leave
sbb
lret
inc
xlat
fcmovb
fs
jno
aaa
xor
and
jle
popf
jbe
push
ror
int
push
in
push
scas
mov
mov
push
cmp
mov
sub
mov
scas
mov
sbb
or
inc
push
mov
pop
and
dec
lcall
and
inc
sub
xchg
pusha
jge
in
lret
jnp
inc
icebp
scas
push
pop
aaa
les
mov
pop
fwait
iret
xlat
fidivrs
iret
test
fwait
push
jecxz
lret
ljmp
clc
enter
insb
pushf
push
imul
pxor
fdivs
sbb
iret
dec
fnstenv
in
mov
push
js
test
cmpsb
imul
push
push
mov
pop
pop
movsb
stos
xchg
testl
je
pop
fisttpl
pushf
leave
mov
es
fwait
iret
push
test
into
push
adc
mov
insb
cmp
test
les
dec
or
mov
movsl
xor
jne
adc
jo
xor
sbb
xchg
sahf
add
mov
push
jnp
and
adc
clc
arpl
adc
lret
mov
cli
fdivs
or
xorl
nop
shlb
lcall
dec
pop
test
cmp
jnp
icebp
addr16
fsubr
outsb
and
mov
jg
push
jnp
dec
sbb
cmp
bound
cmc
sbb
mov
pop
stos
fdivs
popf
push
aaa
in
push
imul
and
jmp
sbb
mov
cmp
lods
mov
fsts
mov
push
inc
insb
roll
cmp
aad
or
push
shrb
push
lds
jns
cli
idivl
imul
push
repz
sarb
rclb
int3
imul
ret
rcll
dec
out
push
mov
xor
call
jge
sbb
dec
add
ret
cmp
lret
test
xchg
push
jl
dec
jl
insb
and
xchg
push
js
loopne
adc
mov
push
jmp
enter
cmc
cmpsl
out
scas
mov
sbb
dec
inc
lea
loop
pop
dec
dec
loop
add
lods
enter
and
sub
std
ficomps
fisttps
daa
scas
mov
lret
mov
out
cmp
adc
imul
test
in
add
mov
jle
mov
xchg
push
jnp
orl
test
rcrl
out
xor
xchg
rcrl
inc
lret
cmovno
mov
test
test
rcrb
add
or
into
lret
add
test
out
pop
addl
push
push
push
and
xor
pop
sub
arpl
mov
fwait
mov
lcall
and
popa
adc
sub
sbb
push
test
cld
push
fidivl
xchg
sub
xchg
xor
mov
lcall
or
insl
xor
ljmp
fsubs
lds
mov
mov
xchg
cld
popl
mov
in
xchg
adc
in
lods
jbe
ds
adc
dec
mov
xorb
cmpsb
movl
pop
dec
xchg
aas
movsb
mov
mov
int3
pop
ds
or
in
jl
ret
push
xor
leave
sbb
sbb
fcomp
clc
mov
ds
pop
mov
andb
sti
xchg
int
movsl
push
shlb
add
sub
jp
dec
cmc
xchg
sahf
xor
lcall
and
cmc
mov
adc
xor
loopne
movsb
daa
cmp
or
lods
dec
lret
cwtl
xor
push
aaa
fmuls
pop
pop
or
icebp
and
xor
decb
je
push
push
ja
add
pop
mov
cli
adc
into
adcl
out
mov
int
pop
mov
adcb
inc
inc
pop
jae
pop
pop
push
jno
dec
add
out
fs
mov
test
gs
adc
loopne
rolb
enter
int3
sub
fxch
pop
cmp
les
insb
cmpsl
adc
int
icebp
mov
ret
adc
lret
cmp
xor
scas
xchg
push
or
and
ret
dec
xor
sub
cmpsl
xchg
testb
lea
test
data16
gs
shlb
mov
jo
sub
cmp
xchg
inc
mov
addb
push
stos
into
inc
inc
out
cwtl
icebp
jle
jns
in
mov
das
mov
dec
loope
jb
xchg
out
mov
pop
mov
shlb
or
or
ja
subb
mov
dec
hlt
jae
cmp
hlt
pop
scas
sbb
sbb
icebp
in
push
ret
hlt
xor
fs
shll
or
shll
sti
inc
rorb
cli
and
dec
jecxz
mov
aam
sub
out
mov
jg
fwait
mov
mov
aam
insb
push
in
outsl
test
cltd
nop
pop
mov
mov
pop
mov
adc
repz
in
fdivrs
push
pop
clc
sub
push
mov
test
roll
in
sub
fdivl
jp
pop
mov
mov
xor
mov
add
inc
lea
add
and
outsb
addr16
jge
ficoml
lock
sub
jecxz
pop
sbbl
idivl
repnz
jb
mov
out
mov
dec
lret
ret
int
cltd
jnp
pushf
test
sbb
push
dec
mov
mov
arpl
ret
test
inc
push
scas
jmp
and
cmc
int3
mov
xchg
test
fmul
sbb
pop
loope
sbb
cld
lret
repnz
add
cmp
dec
push
shr
shrl
call
pop
ret
and
daa
inc
jecxz
mov
shll
movzwl
popl
adc
call
cmpsl
aam
cltd
mov
loopne
fwait
lods
xor
stos
push
xorl
or
sbb
xor
aaa
lea
in
imul
loopne
push
add
mov
jg
repz
dec
push
call
dec
rcll
dec
andl
test
stos
out
arpl
sbb
push
jle
dec
and
or
fdivrl
repz
push
jno
xor
xchg
mov
addr16
mov
inc
in
testb
pusha
loop
push
sub
lods
stc
es
cs
fldcw
pop
push
inc
and
xor
les
dec
mov
push
inc
imul
test
dec
movsb
in
mov
imul
cmpsb
fisttps
movlps
mov
pop
jnp
add
or
xor
pop
mov
or
mov
test
andl
add
add
mov
cli
aad
ret
sub
mov
pop
mov
pop
and
dec
jno
bnd
lcall
pop
fisttps
pop
repz
mov
mov
das
aaa
daa
mov
mov
fnstenv
iret
and
add
push
and
sbb
les
cmpsl
fiadds
or
cmp
std
aaa
sbbl
push
jnp
into
sti
outsl
dec
aam
jno
jmp
paddd
fiaddl
daa
mov
and
xchg
sarl
std
push
cs
cmp
push
daa
xchg
xor
jbe
jge
or
push
xor
or
cmp
push
push
ret
aam
xchg
or
and
push
dec
fidivs
jp
push
mov
sub
testl
in
jno
xchg
subb
out
mov
push
pushf
sub
mov
das
mov
fisttps
fs
aam
add
cmp
cmp
lcall
push
xor
out
int3
push
fcomip
sub
mov
shlb
jg
pop
jge
sub
add
out
cli
fsubl
mov
imul
mov
std
cld
test
lahf
mov
pop
or
inc
pop
call
mov
scas
xchg
push
out
pop
mov
or
shr
push
in
ja
gs
cmp
add
dec
jmp
outsl
out
mov
fsubrs
or
pop
fwait
add
aam
add
jae
mov
inc
xchg
stos
push
xchg
inc
neg
xchg
out
call
pushw
stc
loope
push
loope
or
repz
inc
inc
add
setg
insb
shrl
fdivp
lock
cmpb
das
fwait
and
and
xchg
sub
dec
sti
lret
add
sbb
pop
mov
pop
or
ss
insl
inc
mov
hlt
popf
call
push
les
dec
adcl
int
pop
pop
and
xor
lret
jns
cmp
xor
sub
xchg
cmp
int3
cmp
mov
push
aad
dec
in
aad
push
sbb
shlb
aam
and
test
es
sbbl
fdivrs
cmpsb
test
in
cmp
inc
xor
shlb
je
add
mov
das
xor
insb
push
or
stos
push
scas
insl
cwtl
inc
jp
xchg
push
xor
subb
sbbl
push
pusha
or
fs
xlat
fdivs
xchg
pop
fdivrp
ljmp
or
lret
ss
cmp
outsl
dec
inc
repz
imul
xchg
int
mov
arpl
jns
pusha
cmpsb
jg
sbb
push
push
mov
and
int3
mov
scas
xchg
jl
jmp
lahf
mov
jns
push
mov
dec
loop
aam
jle
inc
mov
iret
cmpsl
mov
push
sbb
dec
repnz
and
pop
add
inc
pop
xor
aad
cmpsb
push
dec
fsubs
push
mov
int3
test
inc
dec
insb
jmp
outsl
fmul
ret
push
icebp
push
pop
outsl
shlb
inc
xor
cld
jnp
xchg
cs
push
mov
pushl
mov
outsl
dec
add
sub
data16
adc
lock
imul
and
mov
imul
xor
call
addl
xchg
cltd
dec
jmp
and
aas
mov
das
and
mov
shl
dec
lret
push
sbb
ret
dec
mov
insl
lret
inc
imul
xchg
jecxz
scas
pop
jns
adc
pop
ret
xchg
cmpsb
mov
dec
movd
cmp
inc
repnz
mov
aad
stc
lods
pop
pop
or
dec
or
pop
loop
push
jne
outsl
push
test
and
imul
inc
adc
dec
adc
add
adc
or
cmp
lahf
jnp
in
adc
push
aas
lea
cmpxchg
pop
xor
cmpsb
stos
and
cmp
cmp
cli
scas
cld
inc
lea
mov
stos
ret
jl
enter
cld
mov
lods
dec
cmpsl
lods
popf
sub
xchg
test
mov
adc
jmp
lret
xchg
mov
jl
sahf
pushf
inc
ljmp
cmp
add
pop
sti
mov
sub
inc
xor
and
lcall
addr16
jns
aad
adc
pop
in
out
adc
xor
aam
clc
xor
test
mov
cmp
psubsw
adc
add
xchg
dec
xchg
int
add
mov
mov
insb
mov
cmp
rcrb
cwtl
arpl
adc
xchg
pop
adc
das
push
insl
adc
dec
xor
sub
xchg
mov
ja
mov
xlat
popa
sub
insb
xchg
lahf
fildll
pusha
push
roll
adc
dec
int3
pop
out
push
adc
dec
int3
lret
cmp
inc
cmp
bound
in
fwait
out
push
cmpsl
ficompl
cmc
and
push
rolb
aad
ret
jge
jmp
lret
cmp
jl
arpl
sbb
xchg
cltd
clc
adc
xchg
cmp
pusha
mov
pusha
mov
test
sahf
mov
xchg
mov
insb
rorb
cmc
sub
add
sbb
ljmp
xchg
jle
cmpsl
jns
mov
xchg
cltd
rcll
daa
pusha
movsl
lret
vaddsubps
sub
gs
mov
cli
sub
cmp
mov
add
lods
cld
cmp
lahf
mov
mov
rorl
movsb
cli
jg
testl
dec
pop
mul
xlat
clc
mov
pop
mov
mov
in
or
push
das
xlat
pop
or
test
js
mov
sub
popf
or
call
dec
jno
mov
pop
test
or
out
mov
xor
in
jnp
jge
adc
pop
jecxz
push
push
pop
fwait
lods
or
inc
jmp
std
pop
dec
xor
cmp
sbb
sub
repz
insl
leave
adc
in
mov
mov
mov
scas
movsl
cmp
add
adc
push
das
lahf
jae
mov
aas
pop
test
and
mov
sbb
mov
cmp
jae
jl
push
pop
pop
outsl
jecxz
hlt
jecxz
imul
pminub
lret
xchg
sbb
cmp
dec
adc
mov
into
scas
or
xchg
add
rcrb
pop
xchg
cli
int
pop
jp
loopne
jne
cmp
jmp
adc
push
mov
lret
fstpl
enter
pushf
aas
and
test
lea
and
rcrl
lock
out
sbb
sahf
push
fisubl
lahf
test
in
pop
pusha
fcoml
xchg
add
int3
out
push
out
xchg
sbb
idivl
xor
rcll
popa
mov
sbb
inc
or
xchg
adc
movsb
inc
xchg
fildll
pop
adc
cmpsb
push
addr16
sbb
xlat
adc
ss
std
inc
adc
push
jo
push
sbb
mov
fisubrl
lahf
ret
popf
je
and
add
pop
iret
pmaxub
mov
cli
mov
mov
jae
add
mov
xchg
dec
stc
test
jbe
pop
out
lret
ret
lahf
test
leave
inc
js
clc
ret
adc
scas
jbe
mov
lea
aaa
in
add
loope
test
sub
push
lods
test
pop
mov
fstpt
adc
jo
mov
pmullw
add
mov
lods
lcall
push
ds
aas
fcoml
mov
testb
jnp
dec
jmp
insl
jmp
ret
jl
xor
jge
xor
mov
xchg
push
inc
and
cld
xor
sti
xor
sbb
out
movsl
ret
std
fbstp
cmp
movl
jbe
dec
in
out
pand
mov
jae
mov
dec
add
jnp
adc
outsl
dec
push
fisubrl
push
dec
psllw
fs
aad
popf
sub
mov
mov
mov
mov
sbb
movb
pop
cltd
inc
pop
inc
sar
scas
jmp
clc
cmpsl
in
ficomps
xor
pop
xchg
roll
sbb
inc
in
cli
out
xchg
dec
xchg
push
mov
mov
mov
ja,pt
shrl
push
repnz
out
or
insl
daa
mov
jnp
nop
adc
pop
dec
and
xor
cmp
in
lock
or
in
arpl
and
xchg
xchg
dec
lea
cmp
lahf
int3
lret
test
fadd
lcall
ds
xor
pop
lret
mov
xchg
mov
cs
shrb
repnz
fildll
int3
mov
mov
inc
pop
jle
roll
pop
xorb
inc
mov
popf
loope
leave
lahf
lock
pusha
xor
inc
or
lret
outsl
lock
dec
push
add
scas
inc
pop
inc
lcall
lods
lret
int3
loop
fimuls
cs
mov
in
push
mov
lock
jmp
outsb
ljmp
and
fsubrs
std
inc
jp
sbb
cli
daa
ljmp
sub
popf
pop
and
es
pop
aam
cmpb
mov
jp
sbb
cli
stos
lea
add
sub
xor
aas
or
mov
pop
into
pop
dec
mov
testl
mov
pop
ja
mov
dec
fistpll
cmpsl
setnp
mov
insl
mov
adc
and
mov
cmpsl
sub
js
lea
sub
loop
ja
xor
jmp
mov
sub
jp
pop
mov
sub
js
jnp
cwtl
xor
push
dec
push
pop
loopne
movsb
cmp
rorl
xchg
push
cmpsb
out
fs
call
mov
push
cli
jbe
xchg
dec
fwait
fwait
repz
in
sahf
mov
dec
stos
mov
nop
insl
xchg
insl
and
mov
filds
je
gs
cwtl
mov
repnz
orb
dec
into
ds
js
xchg
shrl
in
xchg
repz
xor
out
popa
clc
mov
or
sub
aad
adc
daa
iret
xchg
fs
pop
lahf
divl
adc
leave
call
arpl
idiv
insl
and
loopne
xchg
pop
andl
mov
xchg
cld
movsb
addb
in
dec
adc
sti
mov
imul
xchg
mov
aaa
rorb
hlt
mov
fwait
xlat
jno
cmc
cvtdq2ps
lods
es
cmpsl
sub
dec
xchg
lods
ljmp
dec
lods
sub
and
popf
shlb
lock
pop
and
fildll
and
cwtl
es
jns
das
aaa
rcrb
or
mov
xor
or
xor
mov
dec
pop
mov
mov
pop
push
push
mov
sub
lret
scas
cld
pop
mov
mov
inc
jp
stos
add
movsb
insb
lahf
mov
pop
lds
or
rclb
stos
xor
cwtl
ret
fisttpl
lock
pop
jg
lahf
test
das
pop
and
inc
inc
and
pop
les
mov
cmp
fdivs
push
add
sbb
add
addr16
and
lea
push
daa
push
push
sbb
jmp
out
lods
inc
push
push
sub
push
lods
arpl
dec
or
ret
push
xor
and
jp
mov
addr16
xchg
fisttpl
mov
mov
dec
pop
and
sbb
add
cmp
fnstsw
filds
jo
fsubl
dec
sub
jmp
out
movsl
push
pop
mov
dec
or
and
pop
jnp
inc
push
lret
sbb
jmp
ljmp
ja
pop
xor
xchg
mov
imul
cmpsl
adc
scas
pop
add
sub
xchg
pop
jg
sbb
js
push
in
popf
mov
xchg
inc
sbb
cmp
ljmp
sub
sbb
lods
cmp
push
test
mov
mov
outsb
xlat
pusha
repz
fnstcw
sub
xor
fs
push
andb
xor
loop
mov
leave
sub
jg
cmpsb
fwait
push
rolb
jae
or
icebp
cmpsb
test
jecxz
clc
fldt
fiadds
add
jle
scas
mov
or
gs
add
sarl
lret
mov
sbb
sarl
filds
iret
and
sub
dec
repnz
mov
test
add
test
mov
repnz
iret
inc
stos
sbb
syscall
dec
pop
shll
adc
adc
xor
sbb
cs
mov
push
mov
movsb
mov
ret
insb
std
xor
shrb
mov
cmpsb
mov
xorb
cmpsl
scas
cwtl
push
and
push
jcxz
push
jg
test
loopne
mov
imul
xor
jmp
rcrb
imul
mov
fs
sub
jp
dec
adcl
ret
jg
scas
sbb
inc
shrl
in
sbb
xor
push
adc
adc
movsb
push
push
xorb
xchg
pop
cmc
imul
mov
add
dec
mov
daa
push
mov
lcall
jecxz
mov
push
push
jnp
fnstenv
cwtl
out
push
test
enter
dec
pop
lods
or
shrl
pop
sahf
xor
jge
addr16
mov
addr16
pop
loope
jnp
sbb
adc
cmp
jb
shl
shll
test
cltd
lahf
sub
mov
jnp
rol
xchg
mov
lock
in
mov
enter
or
dec
or
ljmp
pop
sbb
fiadds
dec
pop
mov
loop
mov
xchg
push
adc
cltd
sub
pop
jno
jns
jl
push
cmp
aad
imul
jmp
mov
icebp
xor
ficoms
inc
xchg
mov
fst
pop
cmpsl
inc
cmp
inc
xor
lods
sub
stos
aaa
shrb
sbb
shrl
inc
lahf
clc
ja
jecxz
shrl
xchg
lea
jp
jecxz
cmpsb
mov
daa
jns
adc
push
mov
sar
mov
cmp
and
dec
lock
mov
stos
mov
lods
xchg
les
xor
add
push
or
mov
loop
cs
adc
add
out
cmc
jne
imul
and
and
stos
jge
dec
adc
adc
mov
xor
out
insl
in
cmc
inc
and
andl
jnp
pop
cmpsl
pop
fists
aam
add
scas
sbb
push
arpl
push
cltd
xchg
or
jne
mov
popf
cmp
dec
sti
pop
sub
decl
repz
jbe
into
popf
mov
and
vcvttsd2si
int3
leave
stos
xchg
sub
mov
inc
push
js
nop
lods
pushf
cwtl
jo
stc
jle
jecxz
test
or
test
out
pop
stos
jo
hlt
mov
iret
cld
ss
jae
or
loop
in
in
scas
aam
cmp
sbb
leave
xchg
outsl
xchg
mov
xchg
int3
push
xor
cmp
in
mov
xchg
and
pop
or
jle
lock
insb
inc
stos
push
push
cmp
jae
pop
push
mov
push
cmp
int
dec
inc
loopne
sti
xchg
add
push
inc
inc
pop
fnstenv
jns
cwtl
stos
out
mov
clc
cld
jmp
xchg
sub
rclb
lock
pop
in
fcmovu
fbstp
xor
aad
in
jmp
mov
push
jge
cs
cmp
and
dec
dec
mov
pusha
std
push
adc
hlt
scas
mov
int3
das
lods
outsl
or
adc
aam
or
add
push
adc
in
test
inc
mov
lea
and
xor
jne
cli
and
orb
mov
xlat
push
imul
gs
cwtl
cld
arpl
and
fimull
fcmove
cmp
ret
je
pop
jnp
pop
in
mov
and
add
sbb
xchg
divb
push
hlt
push
xchg
lahf
jbe
sub
rcl
pop
cli
test
mov
xchg
stc
sbb
stos
push
and
sbb
das
loopw
adc
pusha
sbb
add
cli
xchg
cmp
loope
adc
mov
icebp
inc
stc
movsb
rol
mov
mov
nop
jmp
ljmp
scas
mov
stos
push
adc
mov
push
js
fistpl
or
xor
inc
ja
jmp
fdivrl
sbb
bound
cld
mov
sbb
popf
outsb
pop
inc
and
sub
pop
divl
or
int
mov
lret
fisubrs
and
stc
mov
ret
dec
scas
ljmp
fs
fstl
mov
sub
add
incl
ret
adc
stc
aam
sbb
jae
add
mov
stos
into
mov
xchg
shlb
rcrl
mul
je
pusha
fs
mov
xchg
shl
mov
dec
inc
push
shll
inc
das
cmp
xchg
jae
int
sbb
sbb
cmpsl
ja
cmp
mov
lea
lret
adcb
jp
stos
popa
dec
cmp
push
idivl
dec
call
imul
icebp
popa
push
mov
jbe
fiaddl
inc
cmpsb
in
js
outsb
ret
mov
mov
ss
sbb
stc
loopne
push
pop
loope
in
jecxz
pop
cli
lods
push
or
mov
mov
hlt
sbb
negl
cmp
out
loope
ror
add
pop
add
mov
sub
pushl
ljmp
adc
mov
aaa
mov
or
pop
lods
mov
and
mov
xor
xchg
push
cmpl
mov
sahf
xchg
cwtl
pusha
les
jno
in
rolb
in
test
pop
and
in
lahf
mov
insl
pop
xchg
dec
imul
mov
jmp
inc
push
or
dec
adc
shl
mov
les
mov
repnz
xor
jg
mov
xlat
jbe
and
in
sbb
shlb
lock
mov
lods
mov
es
arpl
lock
pop
xchg
repz
fsubr
and
inc
mov
inc
push
add
add
mov
ds
adc
decb
xor
cld
jae
cmp
pop
dec
addr16
mov
push
push
outsl
out
cmp
in
jl
cmpsl
subl
or
sub
and
inc
jle
jne
cmp
or
mov
inc
loopne
mov
adc
sbb
pop
xor
push
frstor
lcall
jecxz
les
xchg
das
adc
bound
loopne
rcrl
jb
das
rcr
sahf
pusha
insl
call
cmp
rcrl
mov
mov
mov
push
cmpsb
jge,pt
lcall
dec
arpl
ret
sbb
xchg
or
sub
pop
dec
pop
out
jp
stos
jecxz
pop
mov
jle
mov
cmp
jns
mov
in
dec
xchg
and
add
jb
scas
fmull
xchg
rcl
jae
mov
sbb
push
ja
push
into
or
cmp
sbb
xchg
fistps
es
adc
xchg
mov
dec
subl
jb
xlat
je
pop
inc
loopne
outsl
enter
and
dec
fcmove
push
lods
lret
mov
sbb
and
mov
inc
daa
lds
fdivl
imul
fucomi
stc
popa
nop
inc
cmp
cmp
inc
xchg
jecxz
push
push
stos
xor
cmp
out
aas
dec
loope
shlb
imulb
adc
popa
mov
and
add
jp
mov
and
mov
jns,pn
mov
pop
adc
insb
jl
insb
test
pushfw
int3
sub
lock
pop
cld
out
mov
push
or
jmp
and
push
or
in
push
dec
inc
jg
and
arpl
pusha
clc
imul
in
sbbl
lret
jno
aam
push
sar
testl
mov
xchg
pop
aas
enter
add
xor
repnz
hlt
sub
lcall
xchg
sub
mov
lods
mov
stos
cli
dec
flds
add
insl
add
jecxz
or
pop
inc
jge
mov
push
iret
stos
stos
mov
cwtl
scas
loopne
sub
addl
test
pop
pop
ret
xor
in
addr16
push
popa
es
mov
push
loopne
ss
movsl
and
les
jns
push
xchg
aaa
fcoml
mov
cmpsb
test
les
sub
sti
inc
xor
mov
daa
test
ljmp
sub
mov
jb
les
jp
sub
test
mov
cld
call
rcrb
mov
and
jb
nop
lahf
sti
rcrl
jle
mov
adc
and
sub
test
cmp
testl
jns
xlat
out
sbb
test
and
mov
and
pop
xor
jmp
adc
data16
neg
icebp
mov
jns
and
loope
xchg
out
sbb
fmulp
lds
test
and
je
ljmp
mov
mov
cli
add
dec
mul
dec
aam
sub
aad
sub
sbb
pop
inc
dec
dec
stc
ds
jne
jne
push
jb
arpl
pop
push
fistl
jae
aam
movsl
pop
sbb
sbb
in
and
lahf
js
jns
xlat
xchg
daa
js
inc
inc
sbb
and
or
js
dec
cmp
add
mov
ljmp
push
xor
mov
loop
mov
dec
das
jmp
sub
mov
int
inc
push
gs
xchg
xor
lea
aad
addr16
mov
in
sub
add
fidivrs
and
mov
mov
rcr
sahf
mov
sbb
xchg
icebp
mov
aam
mov
mov
mov
mov
fwait
inc
add
popa
test
pop
imul
dec
jae
and
push
test
out
and
test
outsl
js
mov
or
fcomp
sub
push
testb
cli
das
adc
jp
das
rolb
cli
jle
and
mov
cmp
jns
xabort
or
mov
test
inc
inc
pop
pop
xchg
subl
add
call
ds
sbb
cld
adc
xor
xchg
rclb
inc
dec
iret
mov
and
jecxz
lret
gs
insb
popf
lds
sbb
mov
jg
movsl
mov
int3
jo
inc
or
push
fwait
push
negl
xchg
xchg
mov
mov
or
subb
imul
aam
push
add
pop
jp
mull
add
jb
pop
mov
pop
cltd
movsb
out
push
add
sub
aaa
daa
pop
outsl
inc
test
inc
and
cmp
xor
adc
xor
pop
xchg
push
or
outsl
inc
dec
test
dec
sub
jne
iret
pop
sub
or
shlb
jecxz
adc
icebp
sahf
pushf
mul
cmpsb
in
inc
mov
mov
out
xchg
sub
inc
cmc
xchg
loope
sbb
push
fmull
xlat
call
orb
aad
imul
mov
dec
ds
stos
lret
out
xchg
fiadds
fnsave
out
mov
shlb
ljmp
and
mov
mov
cmp
and
movsb
adc
xor
pop
push
push
insb
xchg
out
imul
adcl
les
mov
out
mov
push
add
add
jl
js
xchg
cld
cmpsb
aaa
and
xorl
mov
cmp
sub
mov
mov
scas
xor
pusha
pop
lcall
mov
test
test
cmp
and
lods
adc
jle
lret
or
jmp
dec
adc
push
adc
adc
ror
mov
pop
jb
inc
pop
int
mov
adcl
jae
fs
xor
outsb
inc
icebp
jmp
jmp
repnz
add
adc
and
lret
notl
sub
or
aam
fldcw
rcrl
and
in
jae
clc
pop
enter
or
int3
xchg
push
ss
mov
sub
push
enter
clc
jne
dec
mov
dec
adc
ljmp
popf
fidivrs
in
int
jl,pn
dec
add
pop
stc
xchg
push
sub
int
into
xor
jnp
xchg
aam
dec
xchg
std
adc
stos
cltd
pxor
and
add
pop
mov
xchg
xchg
jne
movb
iret
cmp
addr16
pop
or
pushl
mov
gs
mov
push
push
loopne
fwait
notrack
jo
fwait
sbb
ja
sub
sub
insl
cmp
or
pop
dec
stc
add
vaddsubps
and
lahf
push
push
add
fwait
mov
mov
hlt
mov
lret
inc
lret
rolb
out
jbe
add
ss
and
das
loope
test
mov
xchg
add
push
int
insb
dec
mov
adc
call
cmp
ja
shll
ret
test
out
ljmp
sbb
push
cld
in
adc
decb
out
repz
movsb
adc
rcrl
and
lea
xor
ss
mov
arpl
jg
jmp
push
cld
dec
stc
mov
adc
adc
push
incl
push
jns
out
lret
sbb
xchg
lock
scas
pop
in
outsb
std
pop
pop
call
dec
mov
jbe
adc
out
push
es
xor
imulb
out
inc
push
push
imul
xor
mov
mov
xchg
pushf
lea
incb
into
rolb
out
jae
and
loop
hlt
inc
and
in
dec
mov
bound
xchg
push
das
loope
aad
cmp
dec
xor
mov
mov
mov
cmovns
je
testb
ss
ljmp
jecxz
cmp
xchg
jbe
scas
sbb
xor
mov
jns
addl
xchg
pop
test
add
testb
jo
adc
mov
rclb
les
test
cmp
iret
adc
testb
icebp
aas
repz
and
imul
cmp
cmp
mov
or
mov
shlb
addl
pop
add
dec
jle
inc
push
add
cmpsb
mov
nop
fildll
inc
xchg
jmp
inc
mov
bound
add
int
or
lcall
or
repz
adc
cmp
jno
stos
push
xchg
pop
popa
imul
add
sbb
cli
and
pop
sti
add
mov
pop
aam
or
mov
mov
sbb
in
lret
gs
not
clc
inc
mov
dec
and
call
pop
les
xor
jp
xchg
xchg
lcall
sbb
and
or
dec
out
movsl
out
xchg
dec
aam
xor
mov
push
xchg
mov
xor
les
in
xchg
in
mov
add
inc
adc
sbb
xor
ret
loope
dec
add
aam
aas
sub
rcrl
insb
mov
mov
mov
fldcw
loopne
cltd
xor
nop
cmp
dec
fidivl
loope
mov
popf
daa
lods
xor
movb
jo
in
lcall
xchg
and
lock
les
fsubl
out
bnd
mov
aad
and
imul
inc
push
idiv
fstl
out
xlat
pop
int3
lea
add
sub
and
es
out
jecxz
sub
test
adc
dec
add
cmp
pusha
inc
test
into
adc
mov
icebp
xchg
clc
add
mov
into
mov
jl
or
push
inc
scas
pop
cwtl
mov
test
push
jg
mov
mov
test
imul
test
dec
scas
in
vpsrlq
mov
add
add
test
jnp
cli
cmp
orl
enter
out
lret
or
and
orl
adc
pusha
adc
adc
test
adc
push
mov
leave
add
xor
stos
mov
jmp
and
adc
add
xchg
sub
xchg
inc
loop
rorb
mov
cld
inc
fwait
hlt
rcrb
nop
mov
sbb
or
scas
push
mov
xchg
mov
pop
add
and
movsb
pop
sbb
add
aaa
adc
or
push
mov
lret
fldenv
sub
sub
mov
add
movsb
scas
cmp
mov
dec
loopne
rcll
cmp
sbb
out
fists
popf
test
xchg
in
arpl
mov
call
pop
nop
repz
mov
dec
cmp
fildl
inc
pop
sbb
loop
xchg
pop
inc
sahf
mov
xor
sbb
adc
mov
and
inc
or
arpl
dec
jecxz
sub
data16
mov
cltd
jecxz
repz
fidivl
fwait
jae
pop
pushf
loopne
lods
sbb
and
enter
mov
inc
sub
mov
or
pop
push
pop
dec
sbb
mov
add
cmpsl
mov
pop
movsb
nop
int3
loopne
adc
mov
nop
call
xor
std
and
push
enter
scas
xchg
adc
cmc
dec
int
mov
fsubs
int3
pop
xor
pop
fwait
cmc
jbe
dec
and
ss
jg
pusha
ret
sub
int
push
enter
movsl
fimull
outsb
inc
lods
xor
mov
mov
movsl
lock
dec
inc
fbstp
inc
sarb
cmpsb
sub
cmp
pushf
pop
ret
lret
lea
mov
jnp
andl
mov
jmp
mov
dec
jo
nop
push
push
mov
scas
adc
mov
cs
jno
xor
insl
mov
add
js
fwait
or
jecxz
adc
stc
mov
mov
push
cli
sbb
movsb
test
test
stos
mov
jae
pop
pushf
ret
dec
xchg
push
fisttps
ret
mov
add
sub
xchg
int3
dec
lret
jo
dec
jo
loopne
aaa
filds
cmpsl
add
sub
push
xor
push
and
stos
mov
push
sbb
mov
cmp
out
jae
mov
or
mov
fsubr
xor
adc
test
adc
les
push
movsl
inc
push
lret
jl
sub
pop
mov
ret
icebp
jp
dec
ret
mov
repz
adc
loope
out
scas
push
mov
and
adc
lret
and
lods
cld
xchg
ret
lock
insl
ret
mov
imul
adc
mov
lret
mov
mov
sbb
in
fildll
addr16
orb
mov
pop
dec
cld
shr
add
cmpb
jb
adc
test
push
push
inc
cltd
into
cltd
hlt
cmp
jl
sahf
sahf
cmp
inc
sub
inc
popa
scas
add
mov
adc
aaa
nop
sub
jge
cmp
mov
mov
xchg
les
ss
cmp
leave
cmpb
sub
movsl
in
xchg
mov
pop
pop
push
clc
imul
in
aas
sbb
add
jns
lods
and
outsl
dec
mov
jmp
mov
sbb
jo
jns
sbb
push
adc
pushf
pop
out
mov
leave
mov
aad
jecxz
xor
mov
push
and
pop
enter
idivl
xor
cltd
pop
and
ret
mov
shl
and
in
cmp
fcompl
faddl
pop
or
outsb
dec
lret
in
sbb
dec
out
or
mov
jecxz
hlt
arpl
xchg
pop
ds
enter
cmp
test
sbb
sub
mov
xsaves
adc
jns
movsl
dec
cmpsb
nop
jecxz
pop
shll
jb
mov
push
mov
jnp
jo
test
cmp
adc
loop
cmp
add
push
push
repz
scas
mov
sahf
xchg
push
mov
data16
test
or
cmp
ja
mov
jl
inc
loop
dec
sub
scas
insl
dec
scas
xchg
adc
andl
ljmp
out
mov
mov
out
mov
mov
pop
sbb
test
scas
cmpsl
icebp
mov
or
sub
data16
inc
cs
mov
repz
inc
xor
xor
lret
fidivrs
push
fcoml
in
mov
xchg
xor
out
mov
imul
aad
adc
adc
jno
test
jb
dec
gs
mov
pop
out
xchg
cmpsb
in
loope
fwait
les
ds
jno
jnp
popa
mov
scas
pop
imul
pushf
pop
push
cmc
mov
xchg
xchg
or
mov
xchg
push
adc
rorb
cmc
cmc
inc
ficompl
mov
imul
fldln2
lahf
sti
fistl
pop
sti
xor
cmc
daa
jbe
pop
jge
xor
cli
jmp
rorl
pop
mov
pusha
push
push
inc
xchg
stos
inc
loop
jp
sti
je
icebp
fists
fwait
xlat
jae
das
add
movsl
scas
cmp
loop
insb
xchg
adc
cmp
jne
pop
pop
js
nop
js
push
fnstenv
fwait
addb
movsb
sbb
fadd
shlb
xchg
push
sti
lcall
push
sub
dec
xchg
xlat
in
sar
mov
add
push
xchg
cs
jmp
cmc
fs
movsb
mov
jecxz
xor
inc
mov
ret
fcomip
mov
in
inc
pop
cltd
fadds
enter
lret
pop
sbbl
xchg
rolb
jmp
sub
push
iret
push
sbb
stos
xor
pop
outsb
push
lds
cltd
pop
cmc
xor
pop
sbb
enter
pop
jmp
mov
add
jbe
into
push
cmpsb
movsb
outsl
push
mov
push
mov
fisubrs
mov
setb
rclb
adcl
je
mov
ja
das
pop
aam
adc
out
mov
push
call
pop
fldl
out
xchg
jb
adc
sbb
push
int3
call
lods
scas
pusha
call
push
ror
shll
push
push
push
lahf
mov
es
cmc
and
clc
enter
dec
inc
inc
xor
cmp
dec
es
jae
into
mov
jno
pop
sub
fimuls
inc
imul
sbb
xor
cmc
stos
push
adc
pop
dec
xor
pop
xlat
push
xor
mov
or
dec
call
pop
jp
or
fdivl
sub
xlat
pop
test
mov
lds
add
fldt
cmp
mov
test
xlat
pop
scas
daa
aaa
stc
stos
push
in
into
adc
push
lods
ror
pop
xlat
bnd
sub
and
insb
out
and
dec
movsl
mov
test
pushf
cmp
mov
in
inc
repnz
out
jno
pop
test
or
pop
ja
mov
inc
fcmovne
addl
fsubl
push
scas
mov
jge
sub
ret
inc
or
aaa
sbb
lods
sbb
dec
pop
mov
xor
push
stos
out
aad
out
mov
out
pop
sub
pop
jl
sbb
movsb
fdivl
adc
aas
imul
lret
movsl
lea
fs
sahf
lcall
push
mov
mov
das
cmp
or
xchg
std
mov
jp
jns
shrb
or
into
jg
ds
jns
inc
lods
imul
inc
imul
repz
pushf
mov
cld
inc
cmpsl
jp
push
pop
adc
pop
das
imul
loop
mov
xchg
sbb
mov
xchg
aam
lods
mov
and
sbb
mov
pop
sbb
or
jge
lahf
std
movsl
lret
fwait
dec
mov
xor
jae
out
das
rorl
or
pop
dec
std
sbb
jmp
aas
cmpsb
push
pop
mov
sbb
scas
xor
cmp
xor
aas
push
xchg
sub
xchg
imul
and
and
imul
pop
adc
pop
imul
add
pop
inc
shlb
insb
out
lods
and
outsb
in
mov
mov
cmpsb
shl
negb
adcl
cmc
aaa
mov
je
add
cmp
or
cs
pop
xchg
xchg
cld
mov
inc
outsb
les
add
es
jecxz
sbb
in
xor
dec
dec
hlt
adc
mov
sub
pop
std
mov
xchg
cmpsl
arpl
or
aam
imul
cmpsl
lock
mov
lret
push
cmpsb
cmpsl
lret
mov
repz
loopne
sub
lock
and
int3
popa
cmp
stos
mov
fstps
sbb
leave
mov
out
xchg
pop
pop
popf
adc
out
inc
adc
shll
and
les
lods
cmp
jecxz
lret
imul
xor
cmp
in
gs
cmpsl
xorb
adc
cltd
adc
or
test
in
decb
cwtl
cmp
iret
mov
sub
pop
push
mov
and
aas
add
enter
out
push
xchg
pop
xor
mov
push
insl
cmp
test
sub
lds
mov
into
inc
pop
cli
jg
test
shl
inc
je
inc
lahf
rcrl
dec
sbb
and
or
test
push
pop
icebp
test
lcall
sub
std
push
clc
and
into
sbb
in
daa
leave
inc
leave
or
les
sbb
and
inc
fdivr
mov
mov
nop
loopne
icebp
adc
nop
imul
out
mov
inc
dec
bsr
cltd
and
lret
lret
cmpsb
and
pop
iret
lret
jle
mov
pop
or
and
mov
daa
negl
mov
nop
cli
sub
ljmp
insb
pop
and
ja
mov
mov
out
leave
cmp
cmp
xorb
dec
enter
rolb
cmpsb
int3
ret
mov
std
int3
jo
dec
pop
imul
loopne
iret
or
sub
mov
add
cld
adc
pushf
jns
sub
or
rcrb
jmp
inc
lret
loopne
in
nop
js
inc
test
fwait
mov
cmp
sti
adc
nop
jns
add
cmp
and
xchg
push
mov
sbb
cmpsb
push
in
cmp
adc
add
inc
insb
out
ret
mov
sbb
cwtl
mov
inc
sub
outsb
jmp
jp
inc
xchg
add
fucompp
mov
or
xor
scas
add
mov
shll
cltd
nop
adc
cmp
ljmp
outsl
lahf
cmp
mov
sub
ficompl
testl
sti
shr
pop
dec
out
inc
in
xchg
xor
lds
outsb
mov
pop
xor
cld
call
dec
inc
ss
pop
sub
nop
and
ret
adc
lret
das
arpl
inc
pop
add
into
inc
xchg
and
adc
repz
loop
inc
jb
dec
mov
jne
cmc
gs
aad
xor
mov
mov
lods
mov
mov
adc
xor
daa
and
sbb
int3
repnz
stos
or
jg
cmp
or
add
dec
push
lcall
mov
mov
xor
xchg
scas
data16
push
pop
jns
fwait
jmp
rcll
sbb
add
xor
test
and
shrl
sbb
stc
pop
stc
popf
fsubl
mov
icebp
mov
add
jns
mov
fdivrp
sbb
push
int3
jnp
push
fldenv
push
mov
xlat
dec
dec
in
inc
cmp
fmul
loope
adc
cmp
gs
je
push
xor
mov
and
shrb
push
jecxz
mov
arpl
in
enter
not
ret
cmp
iret
pop
xchg
daa
xor
jne
cmc
add
jae
mov
lea
xor
xor
movl
inc
jle
fstps
adc
sub
cmc
sahf
or
xor
hlt
ret
pop
jp
movl
nop
push
dec
push
sbb
rcr
dec
jg
mov
out
push
test
or
fwait
push
insl
sti
movsl
clc
in
repz
lea
aaa
cmp
pop
loope
cmp
clc
jne
push
clc
movsb
mov
sbb
mov
mov
push
cwtl
cs
pop
cld
inc
jbe
pop
lcall
pusha
xchg
int
fnstcw
sbb
scas
aas
mov
xchg
lds
xor
mov
aad
or
clc
jmp
ds
daa
imul
sub
mov
pop
sub
jecxz
cld
pushf
fstpl
pop
xor
jnp
pushf
outsl
negl
inc
test
aas
aas
adc
mov
lahf
jb
inc
iret
and
in
dec
bound
push
lods
std
jne
in
test
and
pop
dec
mov
pop
aas
dec
cs
jle
fsubs
repz
test
xchg
imul
adc
test
jno
filds
out
jb
sub
or
pop
push
gs
loop
mov
adc
dec
jbe
hlt
xchg
sbb
mov
lock
jae
scas
js
lds
cwtl
sarb
pop
xor
pop
jmp
pop
push
test
stos
sti
adc
jge
pop
add
stos
add
mov
outsl
pop
fmull
out
pop
pop
nop
loope
pop
sub
cld
add
inc
je
or
leave
fdivrp
in
inc
cwtl
mov
dec
xchg
add
push
inc
notb
push
lea
jp
cmp
in
jb
push
xchg
push
mov
fcomps
push
cmc
pop
popa
lea
cwtl
and
inc
push
mov
mov
out
cmpsb
push
push
loope
adcb
pop
or
mov
dec
outsl
sahf
lea
imul
push
jecxz
dec
dec
jge
out
adc
in
mov
dec
es
push
icebp
shl
or
dec
push
pop
jne
mov
daa
xchg
adc
call
cmp
bound
cmpsb
repz
cwtl
imul
and
scas
or
aad
popf
imul
lahf
test
add
cmp
xor
and
mov
aas
negb
outsb
dec
and
dec
and
push
adc
hlt
jne
mov
jno
cli
mov
arpl
xor
gs
imul
outsb
arpl
push
fs
int
adc
pop
pop
inc
xchg
xchg
leave
inc
nop
popa
mov
or
js
sbb
mov
cwtl
movsl
sbb
push
push
and
mov
jno
xchg
insb
xor
and
sbb
mov
sbb
rclb
jne
mov
push
hlt
push
inc
f2xm1
add
jmp
rcrb
scas
and
jnp
jo
shl
mov
jne
add
or
mov
lea
inc
jns
les
add
ds
outsl
jb
fistpll
in
cmp
dec
or
es
adc
push
repnz
int
ret
xor
mov
or
fiadds
or
mov
and
jle
xchg
es
xor
push
sub
iret
fcoms
jns
jmp
test
test
jae
and
mov
xchg
mov
lahf
cmpsb
idivb
dec
push
test
addr16
lea
and
out
adc
pop
les
rolb
daa
pop
lock
and
enter
ret
sub
test
into
pop
mov
sbb
mov
rorl
xchg
xorb
lea
cmp
pusha
out
mov
pusha
jecxz
gs
sub
lcall
enter
std
xor
mov
icebp
inc
xchg
xchg
cltd
fs
lds
shl
fldenv
fisttpl
lods
inc
pop
in
popa
inc
ffreep
leave
inc
bound
inc
mov
imul
in
pop
jecxz
and
adc
std
lret
comiss
orl
aad
xchg
jp,pn
jp
dec
jge
es
enter
aas
lods
cli
in
mov
imul
xor
loope
push
push
in
pop
xor
or
add
in
mov
je
sti
fistpll
out
aad
push
add
fwait
or
stos
inc
aaa
aas
xchg
xchg
xor
push
in
mov
int
mov
pop
mov
dec
mov
cmp
adc
into
ja
dec
inc
xor
push
out
mov
jp
hlt
mov
ss
pop
jecxz
lret
dec
out
sub
loopne
jo
jns
mov
jo
std
mov
and
fwait
jb
mov
stos
push
jl
mov
jne
scas
mov
cmpsl
out
and
pusha
sbb
push
or
or
es
jecxz
jmp
mov
and
xor
dec
and
pop
fimull
rolb
xchg
fwait
mov
adc
cltd
jecxz
cmpb
cmp
pop
jae
mov
cmpb
out
dec
cmp
push
popa
jnp
xchg
sti
fs
iret
pop
lea
lods
and
push
out
and
pop
in
ret
call
cmpsb
test
xor
jg
inc
xor
push
xchg
out
repz
aas
pop
cmc
leave
push
push
pushf
push
outsl
lods
ds
int3
push
mov
in
pop
xchg
aad
adc
imull
ja
xlat
xchg
idivl
mov
repz
xchg
fsubl
mov
sti
jg
gs
pusha
lret
mov
xorl
cmp
in
inc
or
insb
pop
and
int3
mov
sbb
push
dec
lock
fldcw
loop
pop
sti
push
aad
xor
jl
pop
jecxz
shll
xor
sbb
test
je
popa
fwait
mov
test
pop
cmc
jl
sti
jg
add
insl
pop
iret
lds
bound
xchg
loopne
shr
push
scas
movsl
cmp
mov
bound
push
dec
inc
out
inc
adc
push
mov
push
push
and
mov
scas
push
mov
pushf
cmp
xchg
sti
insl
lret
xchg
mov
shlb
in
push
or
add
xor
outsl
testl
mov
mov
out
jge
xchg
ss
das
nop
loop
mov
in
pusha
ljmp
mov
fnstsw
pop
fistps
std
ljmp
cmp
adc
lods
add
sbb
adc
sub
adc
xchg
ret
sub
sbb
push
pop
and
dec
or
mov
outsb
mov
push
dec
add
icebp
xchg
lea
push
xchg
clc
or
mov
lods
xlat
stc
fwait
lds
lea
cltd
pop
les
add
adc
scas
test
dec
int3
jmp
das
divb
mov
sbb
sub
mov
add
stos
adc
jp
cwtl
sbb
pop
mov
xor
push
in
push
arpl
or
lods
cmp
inc
imul
xorl
popf
lea
pop
inc
nop
pop
push
filds
out
insl
inc
pop
mov
adc
dec
and
out
dec
daa
cmp
pop
xor
and
test
mov
jle
lahf
out
add
pop
adc
call
dec
jl
cs
les
mov
pop
movsl
orl
inc
xor
xchg
js
leave
fisttps
in
mov
lods
arpl
jo
inc
rolb
xchg
pop
ret
and
gs
or
js
add
mov
adc
mov
scas
and
mov
test
dec
in
mov
push
jne
and
data16
decb
repnz
pop
lds
jnp
lods
mov
inc
cwtl
add
cmp
fcoml
add
call
adc
or
xchg
xor
mov
sti
sub
pushl
stos
jl
in
rcrb
pop
jmp
jl
pop
loope
sbb
pop
int
adc
ja
data16
pop
xchg
adc
push
and
xor
insb
dec
xorb
fisubs
daa
mov
push
xchg
xchg
mov
fiadds
outsl
jbe
je
pop
addr16
test
cmpsb
jg
sbb
pusha
popf
test
push
sub
cmpsl
fildl
mov
popf
mov
divb
andb
pop
imul
pop
in
push
cmp
and
leave
push
loope
push
xor
or
andl
leave
shl
sbb
insl
cmp
push
xchg
sbb
sub
cmp
repnz
xor
mov
rorl
or
fsubrl
das
mov
cmp
jl
dec
repz
and
mov
divb
xor
nop
insl
jb
lret
add
inc
scas
dec
and
and
imul
addb
sbb
sbb
dec
mov
test
sub
mov
cmc
xlat
out
cmc
xchg
test
imul
shrl
cmp
adc
movsl
cmp
dec
xorb
loop
shl
insb
shl
jecxz
jmp
mov
add
cmpsb
push
pushf
sbb
frstor
cld
add
ret
xchg
cld
mov
into
pop
cmpsl
add
xorb
sbb
pop
sub
int
push
js
notl
fcmovnu
push
ljmp
in
or
mov
cmpb
int
mov
mov
mov
movsl
imul
fdivp
xchg
dec
pop
inc
sub
in
hlt
nop
inc
in
fistl
cmp
sub
add
je
cwtl
jmp
popf
scas
mov
rcrb
cld
mov
hlt
mov
xor
pop
mov
cmp
adc
adc
outsl
jo
or
cli
test
push
leave
pop
ljmp
test
jge
xlat
cmp
cwtl
repnz
lods
cli
adc
xchg
enter
loopne
out
cmp
leave
lret
ja
arpl
jp
sti
xlat
sbb
cld
cwtl
int3
xor
fcmovnb
leave
xchg
mov
pop
adc
lret
add
inc
pop
and
lods
aaa
fnstcw
xchg
popf
pop
pop
jns
mov
outsl
mov
arpl
cltd
sti
inc
mov
pusha
dec
push
clc
imull
lcall
cmpsl
add
fwait
mov
fxch
or
movsl
mov
sbb
sub
jecxz
in
out
dec
int3
xchg
dec
pop
out
add
and
addr16
in
push
lods
pop
inc
jp
pop
ja
test
jno
pop
out
leave
mov
les
dec
or
add
xchg
inc
ja
pop
movsb
cmp
mov
mov
or
sbb
mov
jge
and
jns
jo
sbb
pop
inc
xchg
mov
enter
imul
ret
in
jle
xchg
xor
hlt
dec
inc
sbb
in
xchg
adc
dec
xor
add
xor
and
push
add
push
std
and
mov
add
pop
and
or
add
in
int3
jb
negl
ds
rcrb
jb
xchg
jae
and
test
cmpsl
lods
jne
shrl
inc
iret
and
jmp
fdivr
dec
cmp
sbb
xor
insl
or
iret
jp
es
and
dec
rcrl
out
les
mov
stc
int
push
sbb
mov
ljmp
mov
xchg
push
mov
push
or
scas
pop
cmpsb
add
mov
adc
into
das
jae
cmc
int
jno
mov
enter
jnp
in
cmp
pop
bound
cmp
fidivrl
popf
push
mov
and
mov
outsb
or
call
cs
jo
push
out
div
add
sub
out
and
mov
sub
loopne
push
cmp
sti
mov
fucomp
iret
in
scas
ja
pop
xor
push
pop
and
jne
in
mov
in
or
aaa
sbb
xchg
out
sbb
cli
sbb
xor
imul
jae
movsl
xor
cmp
nop
mov
dec
xor
js
adc
stos
pop
out
jecxz
call
jmp
xchg
dec
daa
shrb
daa
int3
cmp
mov
jmp
xchg
cmp
je
sub
xor
ljmp
push
mov
adc
movsl
mov
sub
dec
jae
sub
roll
jb
fbld
sbb
dec
out
xor
cld
adc
into
leave
decb
das
jo
cmp
ds
fcmovu
data16
push
out
sbb
inc
sub
mov
cmpl
arpl
imul
dec
sbb
mov
scas
pop
xor
or
pop
pop
pushl
and
push
cld
pop
push
cmpsb
pop
push
xchg
fst
lcall
sbb
pop
or
mov
mov
jo
in
sub
pop
leave
out
push
xchg
mov
lret
push
push
inc
nop
ja
mov
push
lcall
aaa
insl
rolb
dec
mov
mov
mov
adc
push
int
bound
jae
jl
push
jno
jge
rorl
pop
mov
movsb
sbb
mov
mov
cmpsl
fwait
adc
aam
cli
sbb
fwait
andb
pop
push
test
shr
xchg
cmp
scas
ds
adc
mov
adc
sub
aam
xchg
inc
insb
push
in
cmpsb
fwait
pop
push
out
repnz
mov
mov
push
std
loopw
into
mov
sahf
sahf
outsl
daa
iret
jg
mov
mov
aaa
test
jg
shlb
enter
jg
ror
mov
mov
mov
xor
scas
jno
push
or
mov
int3
fnstcw
dec
jecxz
xor
nop
sbb
fldz
cmovae
js
out
jne
flds
mov
mov
xlat
lods
cmp
ds
and
aaa
inc
inc
xchg
enter
or
cmp
cwtl
and
add
popf
insl
xchg
add
fmull
std
pop
xchg
cwtl
jae
in
mov
push
sbb
les
dec
mov
xsavec
jo
push
lahf
cmp
fidivrs
push
sub
popl
xchg
out
jmp
leave
popf
xlat
inc
push
or
cmp
lret
ja
push
cmc
mov
push
push
mov
pop
out
jge
sub
mov
or
aas
decb
popa
push
jecxz
mov
insb
outsl
sub
cwtl
inc
ret
movsl
ljmp
sbb
jg
jo
fidivs
cmc
cmp
xchg
aas
or
add
inc
cmpsl
addb
cmp
dec
pop
jno
xor
mov
lcall
out
inc
div
sub
dec
shrl
insb
mov
xlat
and
pop
mov
xor
movsb
push
in
xchg
loop
cmp
sbb
xor
or
xchg
leave
and
daa
ret
insb
pop
mov
xor
or
sub
jno
outsl
inc
mov
imulb
js
shrb
mov
sbb
outsb
jle
and
push
adc
cmp
es
jl
sbb
cmp
aas
test
nop
leave
ficoms
mov
mov
addr16
lret
mov
xchg
adc
jg
sbb
notb
adc
and
mov
sub
scas
mov
stc
jg
ret
les
or
add
nop
icebp
es
lods
mov
daa
orl
jecxz
lret
sub
mov
je
orb
out
pop
pusha
and
xchg
fnstsw
or
push
cmp
pop
fisubl
fs
xor
test
loopne
aas
stos
psllq
cmp
loope
mov
fisubrl
mov
pop
sub
test
jo
scas
pop
test
lock
es
push
mov
hlt
ret
dec
outsl
lods
and
mov
dec
push
pushf
loopne
fwait
dec
loopne
insl
mov
in
fidivl
dec
shrl
mov
data16
sbb
addb
xchg
jae
orb
and
repz
test
sub
mov
inc
sahf
cmp
pop
cmpsl
mov
mov
cmpsb
or
out
xchg
inc
rcrb
adc
rolb
cmpsl
rolb
cmp
test
rcll
lret
movsb
mov
ret
loop
xchg
cmp
jb
outsb
nop
add
mov
and
shll
xlat
dec
sub
xor
in
sub
mov
push
dec
lock
pop
loope
or
and
mov
mov
mov
adc
jns
mov
xor
testb
sbb
pop
or
addr16
xchg
iret
lock
inc
das
mov
push
push
cmpl
aas
jmp
rcrb
sub
enter
push
int
stos
adc
pop
outsb
pop
cmc
popa
xor
loop
xchg
push
dec
cli
dec
mov
sub
sbb
out
xchg
adc
aad
ret
sahf
in
in
cld
stc
jne
inc
loop
sbb
jne
sub
mov
pop
mov
in
in
lret
pop
or
ja
dec
add
xchg
pop
js
mov
daa
add
mov
xchg
pop
cs
aad
jbe
mov
adcl
ret
loope
inc
mov
sub
push
stc
hlt
or
inc
shll
mov
mov
cld
mov
test
daa
lea
cmovns
in
mov
faddp
adc
movsl
adcl
add
push
jge
into
dec
cmpsb
iret
jg
sub
push
sub
push
adc
lea
es
cltd
subb
loop
das
cmp
pop
push
mov
ss
sti
sbb
xor
roll
mov
push
xchg
mov
out
inc
mov
inc
fwait
jnp
jae
loopne
xor
out
mov
test
adc
xor
std
pop
fisttpl
aaa
push
ja
std
hlt
mov
xchg
fwait
hlt
int3
sub
fbstp
xchg
sahf
push
or
insb
xchg
jb
ficompl
out
add
incb
cmp
xorl
fcmovnb
xor
add
out
sbb
outsl
std
sbb
mov
sub
imul
sbb
in
dec
std
xchg
into
mov
dec
aaa
pop
add
fadd
rcrb
xchg
push
lods
dec
lds
xchg
or
jmp
dec
inc
mov
jno
xor
popf
jbe
addb
loopne
fistpl
xor
or
push
xchg
lods
enter
jge
call
out
add
shrl
pop
lcall
jp
das
repz
jle
cmpsl
cmp
es
into
dec
jl
loope
sub
mov
cmp
aad
test
out
push
cmc
dec
or
dec
push
lods
add
test
xor
fistps
pop
xor
push
mov
cmc
add
push
cs
dec
or
sub
dec
or
mov
push
adc
mov
jne
inc
imul
sti
enter
pop
movsb
jno
cmp
mov
mov
movsb
cmp
mov
inc
cli
imul
les
sbb
aaa
mov
push
pop
lods
test
or
into
mov
cmp
push
aaa
pop
movsb
insl
mov
mov
clc
jno
aam
pop
cltd
cmp
mov
push
push
add
push
ja
push
inc
dec
adc
insb
je
and
ror
xchg
push
rcll
cmp
popa
xchg
dec
xor
jnp
mov
xlat
leave
fiaddl
push
dec
inc
sub
ficompl
out
jno
or
push
dec
mov
sub
lcall
xor
push
fisubl
adcb
dec
lock
sbb
mov
cs
dec
push
sbb
lock
cmp
mov
cmp
lret
xchg
aad
stos
mov
clc
mov
incl
xor
test
cmp
mov
push
out
push
enter
sbb
sbb
inc
push
imul
add
cmpsb
jle
je
sub
adc
add
mov
mov
jno
shrl
std
and
mov
inc
pop
push
mov
ret
pop
loop
gs
cmc
movsb
mov
pop
jo
dec
out
in
lcall
mov
popa
sub
push
xor
xor
and
xchg
in
daa
mov
test
out
rcrb
mov
adc
cmp
pop
or
scas
ss
cmpsb
xor
mov
sbb
jle
xchg
xor
mov
mov
in
rorb
shll
popa
shlb
pop
fcomip
sbb
fimull
stc
pop
in
test
aad
es
cmp
cmpsb
pop
outsl
roll
stos
adc
lods
cs
push
outsb
insb
sbb
jecxz
out
cld
mov
xchg
jg
aad
ds
and
push
jno
sbb
or
leave
cmp
cmp
mov
iret
out
jo
dec
rclb
push
pop
leave
sbb
js
test
cmp
cmp
mov
adc
fnstsw
pop
cmpsb
cmp
pop
in
dec
loopne
cltd
daa
lods
mov
or
frstpm(287
xor
jno
cwtl
add
xor
push
ljmp
ja
sarb
dec
add
lcall
sbb
loope
sbb
les
test
int3
sbb
mov
xor
repnz
push
hlt
jecxz
data16
xchg
ret
bound
ret
mov
push
dec
mov
xor
pop
shll
jb
adc
jg
mov
test
std
sbb
mov
jmp
xchg
ljmp
stos
jb
cmp
mov
cmp
inc
out
adc
fisubrl
cmpsl
popf
addr16
into
xor
shrl
inc
filds
test
xchg
pop
xchg
ret
aam
or
sbb
cs
jle
cltd
cmpsl
cs
xchg
jns
xchg
adc
and
mov
adc
pop
inc
sbb
push
test
subl
test
stc
xlat
stc
dec
lock
or
push
jecxz
mov
scas
lock
inc
xchg
or
sarb
lods
mov
lret
data16
bound
mov
push
stc
xlat
pop
xchg
sahf
hlt
xor
imul
sbbl
es
fcomi
xor
mov
jle
hlt
push
fcoml
xchg
ljmp
and
lods
out
int3
and
popf
incb
sub
cmp
aaa
js
mov
cmpsb
pop
sub
mov
js
push
dec
icebp
jns
xchg
xchg
clc
aaa
pop
add
test
jp
sub
jns
dec
fwait
xlat
lods
mov
xlat
adc
push
add
inc
aam
ret
adc
sub
adc
imul
loope
and
inc
xor
in
pop
xchg
sub
xchg
sbb
xchg
mov
cmp
popf
inc
add
cwtl
mov
shl
mov
notl
pop
cmpsl
scas
jno
repz
aam
push
andl
cwtl
fidivrs
dec
mov
dec
fnstenv
jo
notl
jo
xchg
cmp
roll
jp
ret
fisubs
xchg
mov
mov
aad
cld
mov
inc
arpl
cli
pop
into
jo
push
push
push
push
decl
inc
mov
jne
loopne
cli
or
jecxz
cmpsb
add
jne
ja
mov
aam
sub
cmp
lea
mov
pop
testb
lret
inc
out
test
push
clc
jmp
push
jmp
iret
movsl
jae
popf
adc
cld
mov
xor
mov
inc
mov
gs
cwtl
cld
and
cmpsl
dec
rorl
leave
pop
push
pop
pop
mov
sbb
repz
mov
rol
xchg
lahf
jbe
push
fisubl
or
roll
push
xchg
das
ret
rolb
pop
adc
mov
stos
dec
adc
adc
scas
and
add
std
mov
sbb
and
adcl
or
cmp
sub
or
popa
pushf
popf
and
cwtl
cmp
add
outsl
inc
lahf
call
insl
sub
scas
dec
mov
cmp
lret
js
ds
jg
sub
packuswb
out
scas
getsec
in
or
psubusb
leave
pop
pop
in
fsts
xchg
mov
scas
lar
mov
lds
sub
ret
das
sbb
cmp
push
icebp
enter
push
lret
enter
out
jb
test
sbb
nop
push
testl
mov
dec
lods
mov
push
mov
xchg
fcomi
es
cmpsl
dec
je
mov
pop
bound
bound
xor
in
mov
mov
sub
adc
adc
stc
inc
pop
nop
mov
out
xor
dec
sbb
push
in
xor
ret
loope
les
pop
lret
std
and
or
ljmp
jp
jle
adc
mov
xchg
push
push
xchg
daa
xchg
ljmp
dec
fcompl
fwait
sub
sub
jmp
adc
into
ret
pop
bound
int3
jmp
fmuls
subl
add
enter
sub
xor
push
inc
mov
pop
mov
dec
xchg
arpl
cmp
decb
mov
lods
stc
aam
push
jle
imul
rcll
sti
jne
sub
outsl
mov
addr16
sbb
add
mov
aad
jb
sub
sub
push
aam
in
jp
adc
inc
clc
jne
cmpsb
inc
dec
pushf
or
shll
pop
enter
clc
mov
jp
and
inc
repnz
pushf
mov
pop
int3
jmp
fdivr
cmp
mov
jg
aam
cwtl
sub
in
adc
imul
cmpsl
data16
mov
outsb
cmp
jnp
mov
add
fldcw
das
popf
mov
out
xor
pop
cli
shlb
test
mov
xchg
inc
adc
sbb
mov
lods
int
fwait
or
out
mov
out
jbe
insl
mov
xor
push
inc
out
inc
daa
stos
les
add
cs
cmp
adc
mov
or
push
int
in
stos
push
or
pop
pop
jp
xlat
cs
xor
mov
mov
test
add
add
xorl
fsubrs
fwait
and
sbb
push
orl
std
cmp
aad
testl
rcll
and
xchg
cmp
std
lret
and
pushf
sti
sub
fldenv
dec
adc
popa
mov
and
nop
bound
mov
jbe
sub
add
in
out
push
sti
nop
dec
push
js
loope
subb
out
add
sbb
adcl
cmp
cmp
gs
in
lds
cmpsb
xchg
sbb
xor
inc
mov
jmp
sbb
cld
stos
or
roll
lcall
add
xchg
sub
mov
repnz
xor
lcall
in
mov
cmc
or
push
divb
movsb
cld
adcb
test
imul
mov
pop
push
mov
andb
fistpl
in
test
pushf
movsb
push
push
ret
cmp
adc
xor
imul
xor
sbb
adc
inc
in
push
push
sbbb
push
mov
filds
scas
jnp
or
mov
sub
cmp
pop
in
fdivs
dec
mov
xor
adc
xchg
mov
or
fdivrs
pop
pop
imul
pop
fnstcw
in
inc
mov
xchg
sahf
xor
xchg
or
leave
mov
mov
movsl
sub
insb
jl
sub
in
jbe
icebp
adcb
mov
into
sbb
cli
sbb
or
cmpsb
cltd
jo
repz
mov
in
push
aad
popa
dec
mov
and
mov
sbb
sbb
js
mov
adc
xor
cmp
xlat
sub
ficoms
push
mov
out
xor
add
and
push
inc
cmpsl
sbb
out
bswap
sbb
mov
adc
add
jle
mov
inc
inc
adc
cmp
or
cmp
pop
lods
cld
mov
nop
pop
xchg
or
push
fildl
scas
push
out
aad
sub
and
push
sbb
rolb
popf
repnz
add
addr16
jmp
or
mov
push
jae
in
aas
mov
ret
cmpsl
adc
adc
dec
sbb
lea
adc
mov
mov
jnp
mov
xlat
lock
lds
add
inc
xchg
cmp
jge
xor
pushf
xchg
sub
adc
mov
mov
sub
scas
jmp
inc
int3
rorl
ljmp
fdivrs
adc
sub
das
imul
cltd
jecxz
sub
bound
in
and
out
mov
push
inc
addr16
nop
shr
inc
daa
sbbl
mov
std
push
hlt
aam
lret
jge
and
scas
icebp
cld
stc
das
adc
adc
cmp
and
scas
push
xor
sub
cmpsb
mov
repnz
cmp
or
sub
push
aad
jmp
cmp
cmpsb
scas
or
or
and
bt
sbb
pop
test
shll
jle
test
dec
xlat
cltd
and
fsubp
ja
adc
xor
inc
leave
xchg
jmp
test
mov
xchg
xor
lcall
icebp
sbb
testl
mov
gs
lahf
or
loopne
push
xchg
sbbb
push
cmp
push
out
cmp
xor
scas
repz
jae
aam
pop
dec
mov
dec
mov
and
fsubrl
xor
or
mov
std
adc
push
pusha
pop
outsl
sub
cwtl
loopne
push
xchg
subl
adc
imul
dec
cmpsb
jns
in
dec
and
test
pop
inc
mov
pop
sbb
shr
mov
imul
leave
push
add
adc
jno
push
dec
xor
xor
sub
mov
in
mov
push
xchg
pop
xchg
xchg
inc
jns
cmp
mov
out
lcall
push
mov
jae
cli
pop
sbb
shll
or
ret
int
mov
mov
popf
js
sub
andb
cmpsl
imull
cwtl
imul
test
sub
mov
fldl
ficompl
or
dec
cmpsb
cmp
or
push
inc
dec
arpl
fsubl
scas
gs
cmp
inc
pop
mov
cwtl
out
paddw
sbb
fists
pop
cmc
sti
ret
push
mov
push
out
inc
addl
mov
imul
popa
pusha
jg
mov
jno
sar
orl
insb
and
in
and
std
adc
repz
adc
popa
or
xor
insl
xor
mov
adc
ds
leave
jge
xchg
jge
lock
les
dec
xchg
fcomi
xchg
pop
jp
test
das
data16
scas
jns
mov
push
pop
loop
hlt
notl
icebp
aam
jge
push
inc
cld
outsl
xchg
lret
xchg
cld
add
fists
je
xchg
sub
fistps
daa
xchg
mov
stc
sahf
fidivrs
sub
push
cmp
add
pop
adc
pop
adc
adc
pop
mov
cmpsl
xor
pushf
test
jae
pop
pop
pop
out
adc
mov
mov
ljmp
mov
sti
adc
mov
jl
outsb
inc
or
mov
mov
mov
add
call
jnp
scas
pop
loop
loop
es
and
sub
subb
lcall
loopne
rolb
dec
mov
faddl
jne
enter
and
cmp
cld
stc
xchg
lahf
jg
in
scas
adc
mov
push
test
stc
js
add
xchg
push
nop
mov
cmp
lahf
sbb
test
and
sub
cwtl
adc
mov
orl
idivl
loope
test
cmp
aaa
jle
aam
jns
outsb
fiadds
aas
sahf
divl
cmp
push
sub
pop
or
call
cmp
outsl
push
popf
mov
js
test
sub
jo
aas
mov
sub
dec
inc
les
notb
inc
bnd
add
cmp
lret
mov
sub
xor
stos
jne
aad
sbb
mov
xor
lds
js
inc
scas
data16
cmp
mov
shrl
imul
mov
sub
pop
mov
push
jmp
leave
lea
ret
cltd
das
loop
mov
in
xor
add
xchg
std
dec
inc
rol
aam
or
lcall
pop
jne
sub
out
test
enter
sti
data16
insl
adc
int3
lea
aas
shrb
loop
out
pop
movsb
sahf
in
xor
nop
mov
xor
push
movsl
in
push
inc
iret
adc
insl
pop
lahf
call
insl
gs
inc
shrl
fildll
stos
jnp
mov
clc
loop
mov
pop
adc
and
imul
fstl
xchg
outsb
je
xchg
push
push
enter
or
pop
or
aad
cmc
insl
jmp
dec
test
push
xor
pop
test
xchg
pop
lea
rorb
jb
shll
orb
in
adc
or
push
jb
inc
adcb
popa
jo
ljmp
loop
jnp
push
je
cmp
push
mov
mov
es
cmp
vcmpeq_osss
pop
jmp
fisubrl
sbb
pop
stc
arpl
int3
jae
int
dec
mov
popa
push
int
imul
movsl
cmp
test
mov
jg
add
dec
or
iret
inc
adc
jmp
dec
jbe
jle
lock
jno
mov
xchg
loop
out
dec
test
jge
sbb
bound
notl
sub
jle
prefetch
insb
xor
in
lahf
push
sbb
out
push
mov
ds
fwait
cmp
inc
maskmovq
idivl
add
data16
jge
cmpl
jb
lds
in
pop
pop
lds
pop
xchg
insl
fwait
movsb
pop
into
cmp
sbb
lret
mov
xchg
xor
push
popf
insb
es
pop
les
inc
xor
xchg
push
je
rorb
pop
cmc
mov
cmp
or
jmp
fxch
jns
sub
sbb
jl
lahf
stc
sub
hlt
inc
mov
aam
stos
mov
in
cmpsl
jge
test
mov
movsb
aaa
into
mov
fwait
movsl
lods
test
cwtl
push
aam
pusha
sub
ftst
or
jl
pop
jbe,pt
add
push
cmp
and
popa
les
lcall
lret
mov
sahf
jmp
ret
int
pop
out
or
popf
in
mov
xchg
inc
xlat
ss
mov
inc
adc
xchg
into
lret
js
lahf
fstpl
add
xlat
mov
dec
cltd
clc
fs
mov
pop
std
mov
xchg
sub
int3
ja
insb
enter
mov
xor
sub
push
sbb
std
shll
pop
pushf
cmpsb
adc
add
inc
pop
cmpsb
mov
les
mov
sub
mov
imul
jne
pop
dec
push
scas
sub
aam
dec
xor
mov
dec
mov
andl
dec
jmp
std
xor
inc
xchg
and
test
push
test
mov
pop
and
enter
xchg
in
out
iret
mov
xor
or
xchg
addb
scas
xor
fdivr
mov
insb
cmp
sbb
add
push
aad
cwtl
aaa
bound
mov
jmp
dec
sub
mov
mov
pop
fcomps
cltd
sbb
pop
inc
enter
mov
icebp
leave
pop
mov
loopne
jne
push
fists
sti
add
sub
loop
movsl
fidivl
shlb
dec
jo
rolb
aam
and
ds
mov
push
stc
fdivr
mov
xor
dec
mov
push
dec
dec
push
mov
cltd
xor
sar
xlat
aam
cltd
pop
cld
repz
mov
loopne
push
inc
mov
aas
mov
clc
ret
mov
adc
rorl
fiadds
xchg
scas
jne
sbb
mov
fdivrs
in
dec
outsb
ljmp
in
mov
mov
sub
ljmp
push
aad
repnz
xor
cmp
nop
out
inc
in
add
shl
gs
cld
test
cmp
in
jle
icebp
es
out
daa
out
xchg
adc
mov
push
pushf
and
stos
pop
das
loopne
add
push
movsl
loop
jne
xor
mov
rcrb
repnz
mov
into
jl
out
mov
jmp
mov
add
mov
or
ja
test
mov
das
lret
rcll
lcall
fldcw
ss
clc
fwait
add
inc
sti
adc
mov
sbb
push
jmp
repnz
mov
sbb
sub
popa
lds
or
or
sub
sbb
push
mov
mov
xchg
mov
add
sahf
adc
and
sub
pop
xchg
inc
in
clc
jge
xchg
cwtl
and
mov
popf
xor
je
mov
xchg
push
xor
add
pop
enter
sub
test
lea
cmp
pushf
outsb
or
test
xchg
enter
or
mov
ljmp
push
stc
mov
in
in
xchg
xchg
inc
cmc
lret
rcr
adc
sub
sbb
or
aam
shl
cmpsb
lcall
sarl
test
inc
xchg
mov
pop
and
inc
adc
cmpsb
popa
or
rolb
bound
data16
mov
push
inc
scas
xlat
push
adc
mov
imul
xchg
fcoms
mov
cmp
xor
dec
adc
outsl
fimuls
mov
adc
and
andl
es
lret
sbb
shrl
add
gs
hlt
stc
dec
mov
iret
mov
push
out
jno
testl
mov
pop
xchg
lret
lods
and
ret
movsl
outsl
int3
pop
xlat
aam
ret
and
dec
ja
arpl
xchg
pop
jne
dec
jge
fisttps
int
xor
pop
cli
fwait
hlt
fwait
pusha
xor
into
pushf
inc
mov
mov
xor
fbstp
xchg
xlat
ret
iret
lcall
test
imul
xchg
fdivl
es
add
dec
cmp
lods
nop
movsb
leave
xchg
sarl
insb
mov
call
adc
cmp
push
cmp
icebp
mov
popa
push
cmp
xchg
fwait
mov
cwtl
push
es
enter
pop
repnz
pop
and
add
js
adc
rcr
ret
imul
xor
adc
loopne
fadds
cmc
sub
in
push
aaa
pop
aad
add
sti
outsb
mov
xchg
sbb
scas
inc
nop
test
stos
xchg
sub
aad
pop
mov
jns
js
sbb
pop
xlat
cmpsb
mov
jns
sub
inc
xor
mov
subl
lea
sub
cltd
dec
loopne
lret
sub
lret
test
dec
lods
push
aaa
jp
adc
iret
mov
and
fcmove
call
mov
popf
repz
mov
dec
xchg
mov
mov
repnz
mov
or
inc
jnp
shll
fmull
aam
xor
cmpsb
nop
nop
pop
mov
nop
gs
jge
loop
test
subb
push
gs
outsb
cmovbe
mov
jmp
aad
mov
xchg
sub
or
or
pop
scas
xchg
mov
stos
mov
loopne
jno
jb
mov
xchg
sub
aas
rol
pop
xchg
adc
push
js
das
lahf
push
dec
inc
sbb
dec
out
lahf
pusha
mov
mov
negb
repnz
xor
xchg
mov
repz
lcall
lret
bound
mov
push
and
rorl
popf
mov
and
adc
cld
fwait
xor
pop
fistpll
das
jl
sbb
aas
push
std
imul
push
ret
fistl
or
int3
pushf
rol
shll
daa
sub
add
dec
frstor
or
jbe
or
xchg
adc
imul
sbb
mov
and
sbb
jmp
jle
xor
and
sbb
jg
arpl
cmc
sbb
mov
mov
jp
inc
stos
and
and
dec
and
lahf
sti
xor
aad
bound
pop
divb
jno
movsl
outsb
cmpsb
aas
dec
inc
and
loope
js
dec
mov
sbbl
mov
in
in
iret
adc
mov
or
jnp
xor
pop
int3
xor
rcrb
out
push
or
push
into
sub
lret
jno
mov
es
movsb
or
fwait
loopne
andl
lock
mov
fcoms
inc
cltd
bound
push
sub
jp
and
leave
adc
xor
imul
cmpsl
pusha
sub
inc
jmp
imul
and
pop
dec
jne
xlat
adc
dec
push
repz
mov
aam
pop
ror
sbbl
mov
xchg
pop
testl
lods
icebp
or
lcall
popf
mov
push
int3
mov
cli
push
pop
and
xchg
dec
outsb
lcall
jg
pop
inc
push
mov
les
jno
mov
das
mov
pop
lcall
pop
or
shlb
inc
push
iret
jle
jno
mov
loop
mov
pop
repz
sbb
hlt
push
mov
fwait
dec
inc
xor
jmp
mov
cmp
sbb
arpl
add
scas
adc
pop
adc
xor
xor
mov
ja
dec
rorb
jle
jnp
add
mov
movsb
adc
shrl
pop
jne
shlb
inc
insb
js
or
push
scas
test
xchg
mov
inc
mov
shl
xor
push
das
and
sbb
inc
dec
cmp
inc
loop
stos
nop
sbb
xchg
es
fistpl
movsb
sarb
sub
cli
les
or
push
scas
std
bnd
pop
cmp
and
in
cltd
jg
fidivrl
inc
aaa
mov
clc
mov
mov
mov
int3
xlat
jbe
les
xor
cs
jecxz
cltd
cwtl
fucomip
xlat
inc
and
add
fwait
in
inc
rorl
dec
sbb
arpl
pop
arpl
jnp
jge
add
in
cmp
int
push
jg
sti
jo
dec
push
mov
loop
mov
test
ss
scas
push
out
jg
pop
and
sub
shlb
test
pop
sbb
sarb
add
dec
inc
mov
loop
sub
test
cld
ror
aad
mov
fldcw
dec
xchg
jge
xchg
test
adc
push
rolb
pop
cld
outsl
dec
mov
mov
leave
xor
aam
xchg
ss
pop
pop
dec
dec
pusha
sbb
ret
aas
mov
xor
lods
sbb
mov
jno
mov
mov
popa
xor
jnp
or
push
cmc
fists
sub
xchg
xchg
daa
lret
jmp
loopne
xor
dec
sub
push
add
in
out
xor
mov
test
out
into
dec
lret
call
sbb
add
fwait
cmpsl
gs
push
xchg
inc
jge
into
inc
jo
mov
and
incb
mov
jno
dec
sbb
sub
xchg
mov
scas
sbbl
roll
push
cmpb
sub
int
test
inc
sbb
subl
leave
push
cmpsb
call
test
addr16
inc
ja
outsl
xchg
fbstp
jne
adc
subb
int3
adc
test
pop
cmp
pop
xor
xchg
cmp
jbe
les
jmp
loope
adc
in
leave
pop
fbstp
sbb
push
ficoms
mov
int
aas
ja
pop
xor
repz
mov
pop
and
fmull
testb
xchg
nop
adc
ljmp
hlt
je
test
sbb
mov
pop
mov
xor
orl
inc
lret
adc
adc
mov
outsb
and
js
ja
enter
scas
pop
inc
imul
jl
mov
sti
mov
pop
jecxz
rcrl
into
ljmp
lret
int
sbb
adc
xor
out
lods
movsl
fdivrl
outsl
sub
or
dec
sbb
ror
jne
enter
icebp
mov
jmp
sbb
insl
mov
pop
sbb
xchg
cmpsb
aas
lea
aaa
fs
aam
fidivl
sub
sub
xchg
pop
dec
or
sbb
incl
pusha
mov
orl
out
in
nop
add
cmp
mov
cmp
mov
mov
mov
sub
imull
andb
inc
fadd
repnz
mov
aad
test
xorl
mov
jae
out
jl
rorb
aas
xor
inc
push
mov
dec
flds
or
aam
test
test
xchg
adc
xchg
leave
movsl
push
int3
and
push
cmp
jbe
add
xchg
xchg
aaa
add
in
xor
cmp
icebp
out
imul
add
xorl
mov
push
daa
ss
push
inc
adc
lcall
mov
ds
mov
sbb
xlat
mov
pop
mov
loope
push
xlat
jne
out
cmp
add
imul
pop
psraw
xor
mov
push
pop
inc
std
inc
ret
push
sbb
lahf
aad
sub
mov
or
aad
fsub
daa
sbb
popa
cwtl
fsubrl
sbb
mov
cli
sbbb
inc
xlat
dec
push
fnstsw
push
out
aam
pushl
mov
pop
xchg
out
add
popa
push
xchg
cmc
movsb
insl
xor
xchg
sbb
mov
aaa
or
pop
cmpsl
sbb
iret
movsl
push
out
xor
mov
icebp
pop
fiaddl
shl
pop
aad
lea
mov
insl
out
fnsave
xchg
mov
xchg
je
mov
scas
mov
mull
mov
jl
sub
lahf
into
aam
xchg
cwtl
in
sarl
fidivrl
orl
daa
ret
es
les
push
mov
ret
sbb
and
jl
jne
jbe
leave
xor
outsl
out
push
sub
mov
jle
scas
add
lods
lahf
pop
adc
cmp
mov
inc
not
sub
test
ficompl
aam
decl
shl
in
cld
out
aad
xor
inc
lret
sbb
xorb
sbb
jmp
lret
pop
pop
or
dec
aas
cmpsl
adc
adc
pop
movsb
fst
popf
shr
mov
dec
jns
js
mov
mov
std
fwait
mov
xor
mov
call
mov
add
iret
outsb
add
adc
mov
out
pop
and
sub
ss
or
xlat
out
nop
pop
addr16
dec
cwtl
pop
mov
sub
lcall
push
sub
add
les
xchg
into
add
pop
into
mov
mov
cmpsl
ljmp
mov
inc
or
arpl
in
inc
loope
stos
repz
cs
fiaddl
and
add
rclb
push
cmpl
pop
xchg
aam
dec
fcmovne
scas
pop
outsl
push
push
adc
cmp
inc
iret
push
sub
inc
dec
sub
push
mov
cmpb
in
mov
mov
lods
nop
jb
cld
hlt
cwtl
out
fsubrp
xor
inc
scas
push
pop
fiaddl
stos
pop
mov
lods
inc
fildll
loopne
dec
mov
into
rolb
xchg
test
inc
mov
aam
push
push
fsubs
mov
mov
int
pop
push
add
mov
out
mov
orb
jo
js
pushf
lods
mov
push
loopne
adc
mov
test
adc
outsb
push
mov
and
mov
mov
jbe
int
std
loopne
mov
sub
adc
push
adc
loope
or
mov
jae
xlat
mov
sahf
imul
sbb
dec
xchg
xchg
int
xor
jb
cwtl
sub
movsl
or
and
mov
add
out
movsb
dec
mov
aad
inc
loopne
push
xor
fisttpll
xor
cli
cmp
jg
cmp
iret
ret
mov
mov
pop
in
sbb
push
mov
jg
or
daa
mov
mov
sub
pop
jnp
lahf
jmp
sub
mov
testb
decb
scas
ds
mov
out
shll
dec
xor
into
sub
sub
xchg
mov
jp
lods
or
jg
push
aaa
or
mov
icebp
test
push
shll
rcll
jp
leave
sbb
push
cwtl
or
aam
jbe
inc
sbb
sub
or
add
cmp
or
lret
out
adc
repz
call
sbb
mov
aaa
or
incl
dec
mov
daa
pop
popf
sub
test
push
sbb
adc
sub
xor
pop
mov
movsl
pop
inc
add
mov
outsl
int3
enter
into
icebp
sub
xor
mov
popw
xchg
cwtl
inc
negl
pop
or
pop
outsb
mov
test
mov
nop
cld
into
jne
out
fwait
popf
ja
lahf
cmpsl
rcrl
jnp
or
clc
mov
mov
popl
pop
repz
scas
dec
inc
je
pop
out
sub
jb
push
ja
test
enter
daa
push
lock
data16
xor
inc
test
loope
stos
cli
mov
sti
repnz
jg
xchg
gs
scas
sub
movsl
es
imul
cltd
aaa
dec
or
mov
inc
ljmp
dec
in
mov
push
jae
outsl
xor
call
sbb
xor
fcomp
dec
dec
push
and
cmc
xchg
imul
pop
and
mov
and
enter
cli
outsb
push
mov
faddl
scas
jno
xchg
imul
jmp
loop
push
push
call
movl
fistpll
adc
jns
aad
and
add
jae
xor
push
por
and
jbe
in
fs
addl
adc
lret
fcmovbe
fsubrp
ljmp
cmp
push
mov
cltd
lcall
lahf
xor
mov
mov
into
adc
xchg
cmp
btc
lock
popf
daa
push
shlb
outsl
icebp
xchg
sub
out
sbb
cwtl
stc
inc
lock
adc
in
inc
xchg
jns
in
insb
clc
jns
out
ljmp
call
inc
add
add
cmpsb
mov
pop
cld
cld
mov
mov
ljmp
movsb
adc
sub
cli
jmp
mov
stc
arpl
lahf
pop
bound
int
xchg
jl
leave
or
insb
push
mov
fstp
scas
add
hlt
mov
repnz
pushf
pop
or
add
addr16
scas
pop
fdivs
mov
iret
cltd
cmp
jle
mov
mov
or
sbb
gs
add
lods
ret
sub
mov
xor
pushf
mov
je
jmp
loopne
ds
xchg
test
aaa
and
dec
repz
push
jne
and
mov
pop
in
pop
lret
mov
out
rorb
ja
aam
mov
clc
sbb
int3
mov
cmc
mov
mov
sub
pop
stc
xor
ljmp
repz
lock
and
aad
repnz
pusha
xchg
test
hlt
in
fcmovbe
loope
in
mov
lahf
je
pop
cli
jg
xchg
mov
imul
ds
xchg
cltd
and
ja
sbb
je
es
fdivrl
or
dec
pop
pushf
dec
xchg
cmpsb
xchg
jns
out
xor
imul
or
mov
adcl
fdivrs
sbb
in
out
jb
test
add
cmp
shll
popf
lods
mov
daa
push
xor
pop
xor
in
pop
popf
jp
fldl
jae
icebp
int3
std
les
cmp
ss
mov
cwtl
sub
les
push
leave
nop
lret
add
loope
je
xor
xorb
out
clc
and
mov
pushf
and
imul
mov
out
inc
adc
xchg
bound
scas
mov
aad
repz
xchg
ss
js
mov
hlt
mov
testb
jmp
dec
lea
adc
cwtl
and
sbb
loope
bound
popa
mov
std
or
xor
jp
std
pushf
push
add
or
adc
xor
sarl
pop
sbb
push
or
and
repnz
aam
fstpt
fucomi
cld
repnz
jo
rorb
mull
icebp
popf
push
jo
lds
push
andb
lods
stos
mov
addr16
ret
xchg
adc
mov
in
mov
cld
adc
mov
push
cli
xchg
cltd
les
dec
sbb
loopne
sbb
sbb
ficomps
sbb
push
mov
popf
pop
hlt
or
dec
fbld
mov
jmp
fidivs
cmc
mov
call
mov
out
mov
cwtl
bound
inc
inc
sarl
adc
xorb
cmp
dec
enter
inc
dec
or
xor
repz
and
pop
cld
inc
jp
cmp
mov
pop
jmp
xor
sti
add
xchg
cmp
cmpsb
add
and
jecxz
scas
cmpsb
jge
call
fisubl
pushf
push
push
ss
sub
loopne
lret
mov
dec
jbe
jne
fistps
xchg
mov
xchg
into
mov
cmp
xchg
lods
hlt
sbb
mov
lea
icebp
inc
sub
call
test
sub
aad
and
pop
fiadds
fwait
xor
imul
sarl
lret
popa
push
and
dec
push
mov
test
jmp
adcb
mov
insb
mov
add
jae
dec
out
mov
push
test
aaa
push
pop
ds
fidivrs
stos
popl
xor
leave
push
and
mov
lock
fsubrl
jecxz
int
ja
jns
jmp
ret
fsubs
xchg
iret
or
xor
pop
es
cmp
cmpsb
mov
push
pop
lret
and
and
jno
lock
and
mov
dec
or
and
mov
jmp
xchg
call
dec
jge
xchg
fidivrl
push
mov
fwait
arpl
enter
pop
stos
dec
push
mov
xchg
push
popa
jnp
xchg
mov
aas
or
push
dec
xchg
and
push
sbb
adc
xchg
pop
lea
out
rcrb
insl
push
mov
mov
xor
std
push
push
cltd
ss
popa
cmpsb
ljmp
dec
data16
mov
mov
xlat
mov
insl
add
mov
daa
clc
outsb
jnp
jmp
cmp
dec
orps
pop
popf
stc
testb
pop
mov
stos
imul
and
push
cmp
repz
mov
imul
inc
push
ss
out
dec
orl
pop
mov
mov
mov
cli
inc
imul
sub
cmc
xor
xor
cmpsl
rcrb
stos
cmp
dec
movsb
sbb
in
fxch
lods
or
mov
test
cmp
pushf
out
sub
jecxz
std
ljmp
xchg
sahf
and
xchg
loop
rcr
jns
sbb
mov
push
inc
push
out
mov
out
leave
pop
cmp
mov
sarb
add
shlb
out
ja
or
lahf
in
push
lahf
mov
pop
movsl
jp
cld
fadd
xor
mov
xor
lods
shr
dec
jp
pusha
lods
cltd
and
push
adc
xchg
dec
loope
int3
sti
fdivp
jns
fildll
js
out
enter
clc
nop
aaa
scas
dec
popf
cmp
mov
mov
pop
shl
data16
xlat
adc
xchg
add
pop
fdivrs
sub
xlat
div
insl
aad
jecxz
rclb
or
sti
cmp
and
movsl
push
data16
sbb
dec
mov
mov
lds
push
sbb
dec
cmpsb
frstor
aam
popf
cmp
nop
or
jg
jns
push
push
cmp
int3
xor
test
insb
int
sbbb
in
mov
push
jecxz
jp
adc
inc
adc
ss
jge
outsb
adc
rcll
mov
cmpsb
xor
int3
dec
jl
mov
test
xlat
mov
xor
aas
mov
loop
cmp
repz
adc
ja
inc
cmc
rol
icebp
sarl
pop
mov
mov
dec
add
mov
out
add
mov
sbb
xor
add
arpl
adc
imul
repnz
xchg
in
xchg
in
out
das
or
data16
jne
push
xchg
sti
subl
push
mov
loop
out
xchg
ss
aam
inc
jae
mov
lret
loopne
xor
loop
xchg
call
data16
std
repz
cltd
lret
hlt
jecxz
or
movsb
mov
je
and
mov
pop
mov
xor
sbb
mov
cmpsl
push
imul
aas
inc
ret
dec
sahf
movaps
and
push
xchg
sti
push
orl
dec
cmp
lock
outsb
in
xor
add
icebp
sbb
popa
sub
or
pop
rcrl
and
sub
mov
mov
cmpl
adc
xchg
dec
pushf
ja
out
ds
push
mov
mov
cwtl
arpl
loopew
cmpb
push
aas
js
enter
mov
jl
jb
fisubrs
pop
fiaddl
adc
cmp
xchg
lds
popf
adc
mov
popf
mov
xor
out
ds
out
ja
inc
mov
in
and
icebp
sbb
fistpll
aam
dec
lret
xchg
jl
dec
inc
jnp
fisubl
dec
ja
xor
cmc
mov
aaa
arpl
adcb
mov
jns
shlb
inc
adc
inc
dec
and
jle
sub
sbb
lock
inc
push
mov
sbb
mov
sbb
adc
push
mov
cli
jg
inc
rorl
push
repnz
cmp
iret
repz
idivb
mov
jl
js
jnp
mov
or
jmp
sbb
push
xor
or
jns
loope
jae
or
adcb
mov
cmc
daa
stos
pusha
lods
or
push
gs
out
or
fsubrl
sti
xchg
dec
mov
ljmp
dec
mov
or
or
pushf
inc
fdiv
test
cmp
pop
rcrl
out
adc
int
mov
inc
mov
ja
cmc
pop
sub
mov
add
xchg
or
out
push
das
dec
jbe
js
jne
jno
push
cwtl
fs
sub
inc
dec
loope
jecxz
jl
sub
inc
pop
lret
pop
out
jo
push
fisubs
cs
lock
lods
rcrl
cmp
sbb
hlt
xor
rorl
cld
stc
pop
repnz
jne
jnp
mov
jle
push
test
adc
arpl
jo
xchg
sub
and
idiv
dec
mov
pop
xor
rcr
and
cltd
xor
jg
js
cmp
jnp
insl
and
ficompl
lods
add
pop
out
push
push
dec
add
cmp
sbb
pop
flds
pop
push
mov
add
outsb
ljmp
inc
repnz
fdiv
mov
out
or
jp
subl
mov
sahf
in
add
popa
dec
push
inc
or
ja,pn
insl
js
cmpsb
and
test
dec
inc
adc
jb
and
add
mov
aam
cmpsb
mov
xor
fidivrs
or
pop
sbb
imul
xchg
ss
test
cmp
jle
ss
ljmp
clc
jecxz
cmp
sbb
outsl
outsl
in
bound
aam
inc
mov
sahf
xor
cmp
pusha
repnz
leave
imul
mov
fisubrs
mov
inc
push
adcl
and
mov
xchg
push
pushf
mov
xor
shlb
pusha
mov
mov
hlt
loop
into
das
inc
sub
or
mov
outsb
int3
push
repnz
js
mov
add
out
out
mov
and
xchg
mov
dec
cmp
pop
jge
sub
cli
movsl
cmp
adc
bnd
jle
sti
xchg
fbld
pop
dec
mov
or
xchg
lods
loopne
in
pop
shr
aad
stos
cltd
pop
mov
adc
or
fsubrl
sbb
lds
loop
fists
xor
jmp
mov
inc
into
les
jmp
and
jl
pop
fcomps
xor
scas
xor
mov
push
fildll
loopne
inc
pop
ljmp
push
jle
mov
mov
dec
cmc
into
add
fisubl
inc
inc
rcl
mov
pop
pop
jmp
jmp
sub
insl
jle
movsl
pushf
mov
pop
jbe
xchg
mov
fldt
rolb
or
or
nop
mov
imul
dec
or
mov
fwait
es
jp
fbstp
fwait
out
bound
js
mov
cmp
loop
and
rcl
lret
in
in
loop
inc
insb
fisubrs
push
std
mov
stos
adc
aam
pop
inc
shrl
push
add
dec
xchg
lock
mov
pusha
or
push
and
test
xchg
mov
pusha
inc
push
aaa
adc
fs
mov
mov
shl
sbb
out
and
test
adc
jb
or
sti
inc
cmp
mov
popf
fnsave
je
sub
mov
mov
dec
test
or
inc
inc
popf
call
hlt
mov
mov
push
loopne
push
xchg
jp
pop
cli
sahf
ja
push
aad
add
inc
xchg
dec
inc
inc
cmpsb
add
pushf
ret
nop
mov
in
push
jmp
dec
jno
push
add
pop
sbbl
jae
cmp
out
jle
sbb
lock
cmp
mull
or
sub
in
cwtl
push
fs
movsb
or
hlt
data16
xor
popa
ja
pop
sub
and
fsts
test
cwtl
dec
cwtl
ja
xchg
xlat
pop
lret
daa
es
aas
adc
aad
loope
sti
jecxz
push
pop
aad
test
in
scas
inc
add
ss
mov
pushf
test
hlt
sub
movsl
or
push
mov
jae
enter
xchg
test
jno
or
arpl
dec
xchg
xor
mov
or
imul
xchg
iret
mov
sbb
inc
sti
loope
fsubr
je
ja
aam
xchg
jbe
stc
out
es
sub
sar
adc
sbb
call
push
mov
mov
mov
fdivr
sbb
icebp
leave
xchg
cld
data16
mov
call
adc
inc
insl
push
in
adcl
mov
int3
cmp
add
vmovaps
mov
sbb
lods
adc
push
inc
sub
xorl
xor
sub
out
inc
inc
add
test
mov
inc
mov
mov
xchg
repz
jl
outsl
ljmp
add
or
sahf
insl
jno
scas
cld
mov
cwtl
inc
mov
mov
jmp
or
add
aad
rorb
xlat
mov
daa
dec
fidivl
adc
imulb
imul
sub
mov
js
inc
xchg
fnstenv
outsb
jmp
int
adc
je
setbe
adc
mov
and
mov
jle
cld
fwait
movsl
loope
rorl
push
sub
fs
push
xchg
pop
mov
stos
jb
jno
stos
enter
mov
fisttpl
lods
pop
mov
mov
dec
sub
test
mov
and
int
nop
ret
inc
xchg
mov
inc
mov
xchg
ret
jnp
pop
push
cltd
mov
mov
push
andl
mov
notl
dec
orl
jno
mov
das
mov
fisttpl
add
push
add
xor
and
sahf
aas
mov
pop
push
cmp
mov
mov
stos
insl
ja
cmp
aaa
jae
sbb
out
sbb
das
push
dec
dec
mov
inc
clc
mov
mov
jns
mov
cmp
icebp
adc
mov
adc
xor
repz
xchg
inc
into
icebp
xchg
sbb
inc
mov
ja
pop
add
sbb
mov
mov
jmp
push
pop
push
xchg
lret
mov
and
pusha
fcmovnb
add
inc
pushf
adc
popf
sti
adc
mov
shlb
cltd
mov
xor
push
push
aad
sarl
jnp
cmpsb
ret
pop
test
dec
es
movl
fbld
in
faddl
cmpsb
fcomi
clc
inc
mov
xor
xor
mov
daa
xchg
cmp
insb
or
ljmp
pusha
sti
push
aad
push
lods
imul
mov
adc
cmp
loop
xor
std
pop
cmp
add
xor
or
xchg
xchg
outsl
push
in
jge
cmpsb
fsts
xor
aaa
jp
and
push
test
repnz
pop
mov
pop
insb
push
cltd
dec
xchg
mov
idivb
push
or
xchg
mov
dec
lds
dec
cwtl
test
mov
fsubs
dec
lahf
popa
mov
jg
lds
or
cltd
jg
out
mov
lock
mov
in
shll
divb
jl
std
cld
stos
or
xchg
cmp
jecxz
cmc
cmp
jno
jnp
cwtl
sub
push
out
or
fbstp
cmp
hlt
fdivs
ja
push
in
je
mov
dec
cmp
mov
lods
std
xor
cmp
inc
push
jnp
jge
ret
mov
je
dec
testl
inc
in
mov
mov
iret
inc
jle
movsl
mov
sbb
mov
test
pop
insb
sbb
test
and
iret
out
orl
and
xor
cmpsl
int
mov
test
and
fcmovne
mov
mov
into
icebp
outsb
jmp
test
mov
test
loopne
sub
int3
lds
cmc
out
js
and
jb
shll
das
dec
cld
test
or
push
rcrb
in
push
or
stos
stos
cmp
stos
inc
push
inc
mov
mov
sub
mov
cmp
inc
or
mov
aaa
movsl
push
fsubrl
insl
xor
aaa
int3
push
xor
inc
sbb
or
mov
and
ret
adc
mov
mov
push
jle,pn
sbb
mov
mov
push
in
cmc
movsb
loop
in
cmp
or
cmp
dec
pushf
fdivr
and
sub
xor
jne
dec
mov
rcl
mov
push
mov
mov
dec
adc
jl
insb
loopne
pop
xchg
sbb
addb
jbe
jmp
sbb
idivb
in
dec
rol
push
js
jns
adc
pop
sub
cmc
mov
leave
enter
push
outsb
sbb
push
test
adc
and
outsl
nop
pop
mov
int3
dec
add
push
aaa
mov
lds
dec
adc
pop
dec
pop
or
or
enter
pop
ret
mov
jb
cmp
outsb
mov
sub
add
add
jl
push
mov
dec
fdivl
mov
jecxz
mov
mov
xchg
leave
cmp
nop
fmuls
push
and
mov
ret
mov
std
pop
dec
gs
gs
out
daa
mov
insb
xchg
mov
jnp
xchg
sbb
roll
aad
inc
xorb
add
shll
out
inc
loop
xchg
mov
cs
mov
repnz
lret
jb
adc
pop
xor
rcll
fs
dec
mov
shrb
mov
pop
mov
hlt
cmp
add
sbb
add
aaa
or
mov
aaa
adc
ret
pop
movsl
mov
add
push
mov
push
or
dec
jno
lods
pusha
daa
scas
scas
test
pop
fcmovne
adc
cmp
nop
enter
rorl
imul
pushf
pop
sub
sub
fwait
inc
or
sub
imul
jmp
mov
and
out
dec
cmpsb
sbb
pop
ret
sbb
pop
out
fs
andb
push
mov
dec
daa
ffree
xchg
and
sbb
rolb
ret
mov
inc
lock
hlt
sbb
dec
pusha
repz
lret
mov
mov
sbb
push
cmp
and
pop
sbb
das
scas
loope
jp
xchg
rolb
sbb
loop
fsubr
mov
ret
cli
iret
cltd
ljmpw
int3
std
ljmp
mov
int3
cltd
or
adcb
adc
mov
out
cmp
or
pop
popa
pop
out
int
in
and
bound
xchg
lcall
pop
arpl
movsl
xor
shrl
fisttps
test
or
mov
ljmp
clc
or
and
lds
pushf
aad
fpatan
sub
xchg
add
pop
mov
cmpb
jbe
xchg
adc
adc
and
out
fimuls
fbld
jle
jns
fnstsw
sbb
xchg
xor
out
fdivrs
cmp
mov
iret
xorl
add
shlb
mov
addl
in
inc
test
or
sbb
mov
jg
test
outsl
add
loope
inc
mov
xor
icebp
out
out
mov
inc
movsb
icebp
aas
inc
mov
out
sub
ds
repz
or
std
dec
cmc
pop
je
int
xor
dec
movsb
push
adc
test
jge
cmp
movl
or
lahf
popf
and
repz
fs
lods
cltd
inc
xlat
push
loopne
mov
lods
lahf
jle
cmp
data16
lock
aad
xor
jl
cld
sub
cmp
lds
sub
or
sbb
inc
stc
adc
inc
rcr
insl
cmp
hlt
push
or
aad
adc
jne
cld
jae
xchg
and
pusha
add
add
sbbb
clc
cmp
mov
rcrb
mov
fdivl
sub
or
adc
push
rolb
mov
and
jbe
mov
lods
rorb
daa
decl
and
cmp
pop
xor
pop
test
cmp
shll
outsl
pop
nop
das
popf
jnp
xchg
xchg
aas
enter
sahf
es
jp
sbb
outsl
pop
stos
pop
push
scas
cld
mov
in
and
and
push
mov
xlat
sub
xchg
ret
jns
and
shl
daa
lods
mov
int
mov
test
and
push
xchg
mov
mov
add
dec
pop
and
xor
sbb
adc
xor
mov
jb
xchg
and
fst
icebp
enter
call
dec
adc
inc
iret
jne
add
inc
xor
insl
pusha
pop
cli
test
cmp
popa
xchg
ljmp
icebp
pop
scas
sub
inc
mov
pop
in
adc
popa
sahf
insl
ja
inc
scas
push
mov
sbb
mov
fwait
add
pushf
push
pop
test
insl
mov
test
jb
xchg
lock
fldt
mov
imul
push
push
or
das
aaa
push
sti
add
stc
and
loope
jp
jmp
jmp
jno
add
push
cmp
mov
fs
push
jnp
inc
popa
pop
mov
pop
mov
outsb
lods
add
stos
add
mov
sub
lods
inc
add
les
cmp
xor
hlt
jecxz
sub
enter
add
push
jne
inc
sbb
popf
push
insb
inc
ret
jp
cmc
mov
jmp
psllq
shl
sub
pushf
mov
push
sub
addr16
sub
jg
lret
fstpl
rcrb
data16
scas
aaa
sarl
jp
pop
ja
ljmp
add
imul
push
ljmp
jmp
idiv
roll
push
adc
jge
mov
jge
xchg
mov
mov
push
out
mov
adc
jb
jb
dec
icebp
daa
or
xchg
sub
jo
jl
repnz
mov
sahf
test
xchg
imulb
sub
in
inc
out
xor
cltd
xchg
dec
pusha
outsb
lock
dec
pop
flds
lods
stos
mov
xor
mov
adc
out
pop
sub
int
jmp
xchg
xchg
push
out
pop
and
pop
sbb
adc
sbb
add
lahf
dec
je
roll
or
pushl
xchg
lret
sub
icebp
loop
inc
cmp
jo
or
lahf
jbe
in
dec
and
not
sbb
fbstp
mov
jmp
mov
imul
enter
push
popf
xchg
pushf
and
or
repz
into
push
jns
inc
mov
sbb
fwait
pop
sub
mov
mov
jne
cmp
pop
jno
sub
lods
das
xor
pop
fsubr
xchg
mov
cwtl
xchg
lret
adc
pusha
outsl
rorl
dec
pop
popf
pop
jae
lahf
and
add
dec
push
cmp
mov
scas
rdtsc
and
xchg
enter
jbe
aaa
or
or
outsl
push
jmp
int3
or
cli
mov
sbb
mov
cs
into
cmp
xchg
cmp
sub
pop
or
mov
adc
inc
push
jp
fisttpl
aam
fidivrl
add
pushf
push
xor
add
jnp
push
pop
out
stos
sub
jecxz
dec
pop
inc
subb
cld
or
add
jno
mov
nop
adc
xchg
fcmovnu
jne
daa
inc
mov
mov
mov
loop
mov
das
sub
sbbb
fisttps
sahf
test
sbb
es
ds
xor
xchg
sarb
add
stos
xor
jo
push
stc
mov
les
mov
mov
fmull
pusha
sbb
add
loope
xor
inc
inc
cld
mov
ror
mov
fisttpl
sahf
mov
rcll
scas
adcb
mov
sbb
mov
add
mov
out
popf
xchg
cmp
popf
stc
scas
popa
ret
out
test
mov
fdivl
clc
fistl
cmp
add
testl
push
gs
sbb
outsl
sbb
mov
mov
rorl
xor
stos
ljmp
jbe
stc
ljmp
ljmp
fs
mov
fisttpl
push
out
xor
push
in
lret
cltd
subl
push
inc
repz
jge
push
mov
cmp
insb
adc
mov
andl
out
add
pop
or
roll
adc
jecxz
xchg
stc
sbb
xchg
icebp
sub
out
pop
or
push
cmp
insl
xor
mov
mov
xchg
cmc
jno
push
imulb
or
cmc
into
push
mov
test
lahf
pop
int
repnz
into
popa
std
mov
int
daa
loop
inc
rcrl
icebp
test
xlat
addr16
xchg
loopne
push
pusha
push
mov
pop
pop
add
mov
lahf
mov
mov
stc
rcrl
fsubrs
mov
icebp
out
inc
aam
pushf
scas
aad
int
or
add
xchg
push
rcrb
mov
mov
xor
lret
ja
mov
and
mov
inc
aad
xlat
pop
cmp
add
aam
les
add
jge
xchg
data16
mov
test
and
push
pop
cli
popf
pusha
mov
icebp
jb
mov
cmpsb
pop
jp
dec
add
xchg
lods
jge
inc
mov
jp
cmp
pop
movsb
and
xlat
xchg
jae
cld
rcr
ljmp
push
adc
popf
js
jbe
sub
outsb
sbb
dec
lods
add
or
mov
int
sbb
repnz
xchg
mov
or
imul
mov
mov
adc
bound
out
adc
daa
mov
dec
mov
add
xor
push
roll
sub
xchg
rclb
addr16
mov
fs
test
xor
scas
sbb
pop
xchg
fs
mov
andl
mov
testb
dec
fmull
ret
push
negl
pop
fcomps
shr
mov
jns
scas
movsl
push
shll
or
xchg
cwtl
cmp
xchg
mov
sti
out
sub
and
int
adcb
fwait
or
and
mov
out
pop
movsb
cmc
add
pop
out
fstpl
jbe
add
lea
addr16
cmc
loop
xchg
or
sub
pop
jb
lods
push
mov
jbe
shl
ss
ret
inc
jle
mov
lods
and
imul
test
out
adc
pop
icebp
ret
xlat
and
ds
or
repz
inc
sub
xor
repnz
push
test
jle
js
sbb
dec
xor
pop
ret
ror
cmp
and
xor
dec
mov
sarb
cmpsl
cmpsb
cmp
andnps
push
jl
aad
pop
lcall
int3
mov
push
xchg
xor
sub
out
jb
aaa
mov
arpl
pop
push
xchg
or
jg
gs
fwait
repnz
add
sbb
mov
jl
cmp
ja
jg
mov
sbb
jns
dec
mov
mov
xchg
or
in
pop
arpl
shll
pop
pushf
dec
mov
push
pop
cmp
jo
jnp
ffreep
xchg
push
lock
mov
stos
testb
mov
dec
push
adc
lret
mov
pop
mov
jmp
pop
sub
pusha
out
icebp
dec
adcl
cmp
daa
int
mov
idivb
loopne
jecxz
test
int
fcoms
std
lret
push
add
or
loope
mov
inc
ror
and
jae
jp
and
cmp
pop
rcl
ljmp
clc
sbb
mov
or
push
es
jge
fisttpll
jno
pop
mov
fimull
fdivs
sbb
adc
jmp
xor
ss
ss
das
jne
scas
push
push
xlat
fisubl
adc
adc
sbb
sbb
cmp
pop
into
xchg
cld
push
ret
loop
faddl
sub
cmp
inc
dec
push
out
in
jne
jp
sbb
mov
pop
data16
out
and
push
repnz
in
orl
sbb
jp
in
sbb
ret
pop
bound
mov
sub
daa
into
lcall
push
jbe
iret
cwtl
inc
xchg
or
ret
sbb
cwtl
adc
adcl
jl
mov
pushf
jl
jbe
inc
mov
enter
push
sbb
add
dec
cwtl
or
pop
lock
sahf
xchg
add
push
stos
or
jo
stos
pusha
xor
loopne
fucomip
inc
std
in
xorb
jecxz
mov
cmc
mov
cmp
push
cld
push
push
cltd
xchg
popa
lods
xor
addr16
mulb
fstps
les
shlb
arpl
sarb
adc
iret
sub
aaa
xor
dec
js
cltd
repnz
js
xor
xchg
xlat
scas
inc
inc
ljmp
insl
mov
mov
mov
adcl
lret
add
into
mov
pop
mov
add
dec
add
aam
adc
cmpb
inc
jb
lock
int3
mov
push
scas
stc
inc
pop
movsl
jl
pusha
or
lods
pop
push
mov
push
mov
test
jl
ds
out
insb
add
inc
fcomps
ret
inc
and
cmpsb
rorl
stc
aad
jmp
lea
adc
test
cwtl
lds
mov
jae
imul
adc
repz
push
cwtl
leave
call
ss
add
enter
xor
shl
jle
mov
sahf
push
sbb
into
cwtl
cmp
pop
xor
add
and
mov
movsb
jns
push
dec
jmp
stos
add
pop
aam
xor
xor
sbb
xchg
adc
inc
cmpsl
ret
insb
addr16
nop
adc
mov
test
shrl
lahf
movsb
cmpsb
insl
mov
mov
dec
push
in
cmp
adc
mov
mov
js
les
dec
sahf
jecxz
mov
inc
popa
add
fs
push
stc
outsl
xor
sarl
sbb
in
fisubs
les
pusha
sbb
xchg
lret
pop
ljmp
std
pop
nop
pop
imul
fs
add
mov
adc
pushf
xlat
in
js
push
icebp
jg
mov
jmp
int
mul
mov
loope
jnp
push
push
stos
bnd
call
xor
dec
and
enter
out
mov
inc
pop
xor
adc
pop
aam
int3
fcomp
cltd
pop
xchg
add
ljmp
clc
lret
add
cli
push
jg
es
xlat
dec
push
adc
sub
fdiv
test
jne
nop
xchg
addr16
mov
push
outsb
fwait
out
movsl
xlat
adc
push
push
test
rclb
cs
xchg
cmp
out
std
cltd
bound
fisttpll
push
jne
xchg
jg
dec
pop
jecxz
xchg
pushf
cmp
pcmpgtw
push
pushf
sbb
dec
push
ds
lea
into
stos
dec
ficomps
jge
xor
mov
jecxz
inc
pop
sbb
mov
mov
xchg
shrl
into
jl
adc
std
jge
dec
and
push
add
or
cmp
cmp
jo
push
incb
xchg
and
pop
pop
jno
sub
mov
fldl
lods
mov
ret
mov
adc
push
inc
xor
xor
in
cmp
movsl
xor
call
xchg
inc
test
jge
pop
inc
lret
xor
add
movsb
push
pop
dec
mov
mov
mov
mov
lock
xor
out
add
push
lds
mov
lea
andl
xchg
flds
insb
pushf
push
aas
rcll
jo
xchg
add
jb
ljmp
subb
adc
and
sbbl
push
xchg
xor
in
pop
add
clc
test
mov
dec
orl
xchg
scas
xchg
xor
cs
inc
insl
adc
push
sub
xor
dec
sub
or
mov
xor
outsl
test
mov
test
aad
and
ficompl
sub
push
dec
popf
fmuls
cmp
or
loop
dec
sbb
imul
xor
hlt
push
add
fcmovu
mov
xchg
inc
dec
pop
cltd
in
in
shl
jle
les
mov
leave
cwtl
test
and
es
mov
frstor
in
jg
repnz
mov
mov
cld
mov
add
xchg
mov
push
xchg
jmp
cmp
mov
fwait
ds
mov
push
mov
lret
insb
insb
jmp
iret
push
sub
shll
pop
jp
lcall
lret
jle
pusha
and
sub
mov
xchg
rclb
sub
cmp
movsl
jae
ljmp
push
add
fisttpll
daa
push
fisubs
data16
icebp
icebp
shl
sti
enter
jb
lret
adc
fidivrl
mov
mov
jecxz
cmp
add
aad
and
add
iret
mov
lods
callw
push
leave
cmp
fnstsw
or
jo
ret
icebp
ja
xchg
fisubrl
sub
stos
stos
out
addr16
stos
dec
and
xchg
fneni(8087
dec
aam
pop
jg
and
mov
call
cmp
inc
popf
lods
dec
push
and
mov
or
xchg
dec
jb
sbb
inc
rorb
mov
aam
clc
pop
pop
dec
inc
xchg
ds
mov
add
and
cmp
mov
mov
lret
pop
int3
testl
or
push
sub
inc
cmpl
scas
cli
mov
lret
negl
stos
mov
mov
xchg
in
add
pop
hlt
jnp
pop
insb
shl
pop
ds
icebp
das
push
mov
icebp
rolb
dec
test
jge
mov
shrb
jae
xchg
pop
inc
cmp
add
testl
pop
ret
push
shll
orl
aaa
xchg
cmpsl
shl
nop
popf
pushf
mov
push
mov
mov
out
call
xchg
inc
jns
xor
sub
sub
test
in
into
inc
lea
subl
mov
xor
pop
movsb
stos
jp
adc
rorb
dec
mov
xchg
dec
dec
and
and
xchg
mov
cmc
jg
shrb
into
es
int3
cmp
fcmovnu
popf
jp
imul
repnz
mov
cli
std
cmp
sarb
pop
and
adc
in
fldcw
cwtl
xchg
sahf
pop
push
add
adc
xor
mov
cmp
push
cmp
in
pop
addr16
in
scas
jecxz
shll
and
fcmovnb
leave
dec
mov
dec
addl
inc
xchg
mov
mov
cmp
dec
stc
js
push
int3
cld
mov
pop
cmc
cmove
icebp
xlat
jp
jnp
lods
or
jmp
push
lret
ds
sbb
int
pushf
fstps
lahf
and
orb
js
aam
addb
pop
push
inc
nop
xor
dec
xchg
scas
mov
xchg
mov
push
es
mov
into
pop
mov
enter
xchg
testb
emms
sub
out
push
pop
add
adc
dec
xchg
out
mov
loope
mov
xchg
xchg
scas
ror
pop
push
pop
int3
pop
int
je
and
in
fmul
jno
lds
sbb
sti
andl
mov
in
mov
and
icebp
sahf
aad
outsb
dec
cmp
and
xlat
and
loopne
xchg
pop
sub
test
ret
aam
fcom
enter
cmp
in
dec
or
rol
jg
test
les
test
mov
mov
lods
repnz
inc
scas
xor
mov
divl
push
mov
test
pop
push
stos
or
mov
insl
jge
ljmp
and
imul
sub
out
cmp
fstl
mov
lock
adc
hlt
gs
mov
mov
mov
xchg
push
pop
clc
push
cld
sub
adc
leave
push
adc
xchg
lods
sub
enter
sbbb
cmp
push
mov
push
xchg
jbe
mov
sub
ret
pop
out
push
push
adc
idivb
mov
andb
pusha
xlat
dec
icebp
cmpsb
pop
sub
arpl
loop
add
ret
lds
bound
imul
xor
scas
xchg
pop
xchg
xchg
jae
adc
gs
inc
jbe
sbb
push
shrb
or
inc
jae
cltd
cli
adc
mov
mov
xor
xchg
leave
or
and
sub
int
out
icebp
repnz
cmpsb
mov
push
push
das
sub
push
xchg
xlat
jbe
sbbb
insl
leave
pushf
cs
jmp
in
cwtl
arpl
nop
sub
cmp
shrl
les
gs
sbb
cld
shl
xor
xchg
inc
xor
imul
jg
je
sbb
outsl
ljmp
mov
xchg
cmpsb
jo
sub
cmp
fstps
jno
call
mov
inc
shll
in
je
mov
ss
arpl
jo
jg
cmp
push
mov
mov
je
fldl
adc
mov
jns
cmp
jno
jne
sbb
ja
lahf
sarb
ljmp
cs
mov
sub
pop
out
add
jne
jns
mov
mov
addr16
jge
test
sub
int3
push
lds
adc
adc
dec
mov
mov
add
and
shll
pop
mov
cli
je
push
lods
rorl
nop
shl
push
adc
popf
ficomps
shl
mov
pop
sbb
pusha
and
mov
or
aaa
mov
add
push
push
and
mov
lods
in
iret
push
inc
jbe
adc
jg
and
push
sub
icebp
cmc
das
xchg
decb
xchg
insb
leave
dec
mov
into
adc
and
mov
sbb
int3
aas
push
and
xlat
sub
cmpsl
arpl
xor
jbe
fisubs
push
loopne
mov
popa
and
cmp
xchg
mov
adcb
cli
mov
sbb
and
xchg
add
ss
ja
test
repz
jmp
repz
mov
cmp
pushf
inc
sub
sbb
cltd
cmp
mov
in
push
in
sbb
jnp
bound
pop
dec
mov
lahf
pushf
mov
xor
das
and
ja
and
jmp
int3
jnp
std
in
repnz
mov
iret
stos
les
adc
clc
inc
pushf
pop
pop
addr16
and
daa
and
push
jo
repnz
rcll
mov
inc
insb
fsubs
loope
pop
cmc
xor
sti
pop
pop
mov
aad
rcrl
fdivl
sbb
add
sbb
out
test
das
cmpb
aaa
jmp
lret
inc
jnp
pop
or
mov
mov
lods
push
jmp
mov
mov
cs
push
cltd
icebp
xor
xor
and
stc
xchg
jecxz
test
mov
pop
ret
xchg
dec
mov
cs
je
int3
pushf
mov
cmc
test
in
and
mov
and
subl
add
cld
and
lods
insb
xchg
aas
mov
cmp
jne
dec
jmp
jg
divb
psadbw
sbb
lea
adc
cmp
jae
into
into
lret
lahf
mov
push
addb
jae
and
xor
cmp
jl
mov
std
push
inc
mov
jp
mov
in
cwtl
fidivs
jp
mov
mov
or
adc
lcall
fdivl
cmp
mov
add
push
pushf
mov
push
inc
jno
int3
addr16
dec
jns
test
lret
scas
das
push
mov
jmp
je
pop
pop
inc
mov
leave
mov
cmpsl
adc
cwtl
adc
xchg
out
sbb
es
ficompl
and
ljmp
data16
ror
cltd
mov
notl
aam
jle
test
sbb
stc
in
insb
daa
adc
pusha
outsb
or
cmp
lock
loopne
lock
mov
mov
lahf
xor
sahf
mov
gs
cmp
pop
inc
and
pop
aad
push
xchg
mov
das
cs
mov
loop
dec
add
xorb
out
lcall
cmp
aaa
jmp
test
push
dec
jge
xor
scas
sti
cmp
cmp
pop
sahf
jns
imul
ljmp
mov
je
out
movsl
sbb
inc
mov
cld
hlt
fbstp
ds
or
aam
dec
mov
test
inc
mov
sub
cli
jecxz
test
cli
in
into
and
or
loop
dec
jo
pop
push
inc
test
inc
mov
jns
leave
xchg
mov
in
jae
dec
mov
jbe
mov
fimuls
rolb
lcall
in
into
mov
add
outsl
addr16
and
lds
cltd
out
les
scas
fs
out
lcall
mov
mov
dec
outsb
loopne
jp
xor
cli
stc
pop
adc
or
sbb
popa
push
xor
aas
gs
in
xchg
mov
pop
mov
mov
xchg
cmp
rclb
adc
ss
and
dec
add
repz
cmp
fsubr
nop
stos
rclb
dec
ret
lahf
cmpsb
adc
mov
xor
jle
movl
xchg
or
nop
cli
mov
cmpsb
jp
mov
test
adc
lea
xor
or
push
sti
sbb
sbb
sbb
icebp
or
cmp
and
xor
out
push
inc
add
and
mov
aad
add
adc
cltd
movsl
sub
test
add
xchg
inc
fcmovb
fcmovne
sub
cmc
jns
push
imul
xor
xchg
or
inc
pop
add
jno
dec
jp
push
cmp
jg
cwtl
imul
insl
pushf
adc
cmp
insb
popa
xor
negb
xchg
push
bound
js
sub
add
sbb
pop
ja
sub
jg
mov
leave
mov
bnd
in
and
repz
push
xchg
loope,pn
inc
mov
push
data16
bnd
cwtl
inc
sub
dec
popf
push
enter
test
addb
jbe
inc
and
xchg
add
xchg
mov
icebp
mov
adc
lock
ja
pop
aas
dec
mov
lds
lahf
lods
mov
jb
pop
push
mov
pop
adc
hlt
mov
adc
inc
lea
test
adc
mov
jae
cmp
jge
jg
fdivl
and
test
inc
clc
mov
addl
nop
push
loope
aam
mov
cli
test
pop
aas
xor
and
imul
test
sahf
cmpsb
pop
mov
fwait
jo
icebp
lock
mov
insl
pusha
add
ss
mov
in
repz
and
adc
ret
ja
push
rorb
or
into
or
add
idivl
add
push
mov
fiaddl
sub
clc
and
mov
fsubl
imul
xor
dec
add
push
mov
fstl
fimull
out
movsb
enter
addr16
xchg
mov
mov
cld
cld
aaa
push
mov
mov
pusha
inc
and
scas
xor
test
xor
cli
xchg
arpl
mov
cmc
add
rol
out
pop
jb
lcall
mov
lock
scas
cmp
fnsave
sub
mov
inc
imull
mov
pop
sbb
scas
mov
xchg
xchg
mov
mov
inc
lret
mov
cmpsl
and
std
fisttpl
sarl
adc
mov
xchg
and
mov
nop
jo
or
sbb
push
cmp
add
je
lahf
in
imul
enter
jl
arpl
fiadds
outsb
clc
lret
orb
jnp
jmp
lock
mov
xor
ds
add
mov
ss
or
mov
hlt
inc
adc
jecxz
mov
xor
sbb
mov
or
aad
data16
inc
out
les
sahf
test
mov
cli
mov
popf
jnp
bound
mov
pop
or
js
sbb
or
scas
out
push
or
ds
cmc
xor
aad
hlt
sbb
push
stos
aad
sbb
xor
rcll
inc
daa
push
rol
jbe
dec
mov
sub
addb
stos
add
or
xlat
adc
pop
fcoml
add
pop
cmp
aad
jnp
mov
in
mov
mov
roll
push
or
stos
add
xor
ja
jecxz
fstpt
filds
dec
push
push
ficoms
jge
push
xor
jl
lds
xor
sahf
jnp
cltd
fistps
xor
cmpsl
mov
sbb
mov
into
adc
mov
iret
jg
insb
pop
cmpsb
push
subb
insl
or
in
mov
xchg
sub
mov
test
rcpps
and
dec
sub
icebp
pop
xchg
pop
and
cld
out
test
and
or
sbb
flds
int
in
in
arpl
cmp
lcall
pop
test
pusha
cmp
push
testl
adc
mov
cmpl
mov
jg
rorb
lods
xor
inc
outsb
push
jmp
fisubs
outsl
sarb
adc
sbb
popw
punpckhbw
mov
or
rcrb
inc
mov
inc
fwait
pop
adc
lods
dec
xor
jbe
cmp
insb
sub
jl
outsb
mul
lret
out
cmpb
or
add
std
jne
jno
ss
aaa
cwtl
mov
fstpl
mov
add
dec
jae
cmp
out
or
sub
das
mov
pop
jmp
mov
fwait
add
xlat
mov
mov
in
cmpsl
add
pop
pop
fisttpl
dec
dec
std
std
push
mov
jecxz
push
xor
lods
in
jne
dec
sub
ljmp
xor
mov
inc
cmp
movsb
lods
stc
add
sub
jecxz
ja
test
lret
movsl
jecxz
pop
sbb
leave
push
cmp
int
pusha
inc
into
test
xchg
and
xor
cmpsl
xchg
xchg
push
jmp
scas
imul
mov
pop
xor
xor
daa
scas
adc
arpl
ss
arpl
fsubrl
es
adc
ljmp
xchg
mov
or
adc
adc
das
push
jecxz
lahf
sbb
ljmp
test
fwait
mov
sbb
loope
adcl
jb
dec
fwait
int3
aaa
idiv
xor
cmp
or
or
cwtl
and
rorb
cmp
mov
push
xchg
mov
inc
inc
pop
sbb
loope
aas
push
ja
mov
and
jl
or
rolb
imul
xchg
in
xor
lock
or
mov
scas
or
adc
pusha
sbb
inc
jnp
ret
cs
cmpsl
aam
mov
fcomps
dec
adcl
or
push
dec
mov
sti
xlat
hlt
mov
fs
int3
mov
xor
jne
fcoml
in
dec
movsl
mov
sbb
mov
dec
sbb
lea
add
and
xor
add
cmp
sar
ficoml
cmp
jmp
adc
and
shlb
aaa
movsb
popf
mov
cmp
adc
xor
and
mov
and
adc
dec
les
jbe
lret
shl
dec
gs
cmp
add
pop
ret
cwtl
mov
and
in
push
ja
cmpsb
sbb
cmp
and
fucomip
cmpsl
jno
fbld
outsl
psubusw
cld
jne
mov
dec
or
sbb
movsl
out
test
pop
or
out
mov
dec
mov
push
out
jl
mov
pusha
insl
das
pop
out
or
lret
movsb
or
sti
mov
fstpt
mov
ljmp
xchg
test
in
movsl
es
cmpb
cld
rcr
fidivl
sub
sar
cli
shll
insl
jecxz
test
int
sbb
pop
sbb
cld
push
ret
and
divl
aaa
mov
mov
movsl
out
mov
or
fistpll
mov
dec
adc
mov
js
mov
pushf
sti
push
xchg
cmp
inc
mov
xchg
in
xor
add
pop
mov
sbb
and
imul
hlt
fdivp
and
or
cli
sub
add
mov
vmovss
adc
loope
lahf
addb
jg
roll
mov
add
insl
lock
lcall
lret
inc
mov
push
mov
ds
fisubs
pop
rorl
pop
sahf
out
pop
fbld
sub
push
vmovups
pop
test
xlat
dec
xchg
push
cmp
ret
ficoml
inc
mov
jl
jae
xchg
mov
mov
shrb
cmp
popf
push
add
cmp
repz
lcall
add
ret
imul
lret
fnstenv
lods
mov
xchg
loop
pop
loopne
loop
mov
gs
cs
xlat
jl
sbb
js
divl
andb
sbb
push
int3
scas
mov
sub
lea
pusha
dec
lea
jne
shrb
fs
lret
mov
push
fsubl
dec
jmp
mov
mov
add
sbb
or
gs
dec
in
dec
or
jl
mov
sbb
lock
xor
outsl
push
fidivs
imul
inc
popf
push
push
arpl
lods
adc
jle
mov
pop
adc
push
push
insb
ljmp
cmp
add
insl
inc
lea
sub
sub
add
mov
sub
xchg
popl
nop
lds
imul
shl
aaa
jbe
stos
mulb
repnz
adc
ret
shll
je
arpl
shlb
fisttpll
dec
arpl
cli
daa
dec
mov
fistps
pause
lahf
cmpw
inc
loopne
jno
div
lahf
repnz
jno
mov
or
add
push
notb
das
and
mov
cltd
cmp
movsb
jae
xchg
cmp
xchg
shll
lahf
mov
inc
push
add
mov
or
xor
mov
xchg
fdivrl
add
jno
jo
or
loopne
sub
sbb
lods
aad
imul
push
xorl
sahf
orb
fistpl
mov
inc
or
jp
mov
xor
into
nop
pop
into
inc
jle
push
adc
cmp
jge
es
jbe
nop
mov
stc
push
mov
sbb
in
in
mov
aas
pop
add
push
and
insb
aad
dec
shrl
mov
pushf
insl
mov
stc
jo
out
or
repz
push
ds
push
and
sahf
cli
out
bswap
test
std
out
lock
fwait
push
loopne
mov
and
xchg
sub
ret
lods
movsl
adc
js
inc
cmpsl
adc
xchg
xor
sbb
dec
out
or
daa
dec
dec
aaa
insb
inc
sub
aad
cmp
push
out
push
int3
inc
inc
hlt
sub
fisttps
pop
cmp
cmpsl
push
jb
add
in
sbb
or
outsb
dec
addr16
xchg
loope
sub
hlt
mov
jg
sub
insb
decb
mov
out
popf
hlt
pop
and
call
jo
es
mov
jns
inc
insl
jl
jae
scas
or
or
notb
bound
call
dec
cmpsb
insl
enter
daa
cli
sub
mov
cwtl
add
lret
scas
and
cmp
fidivl
cmp
sarb
mov
stc
fwait
xor
lret
xchg
dec
add
jno
or
rcr
jmp
mov
mov
inc
mov
add
shl
fsubrs
aaa
lock
pop
ret
cmpsb
push
jge
and
lock
adcb
subb
push
aam
decb
xchg
scas
fmuls
lahf
mov
sbb
mov
cmp
jp
or
mov
mov
outsb
test
xchg
jbe
push
or
push
mov
push
test
loope
scas
shl
data16
mov
sahf
leave
xchg
sub
in
pop
leave
push
jne
fistpll
sbb
es
fdivl
loope
sub
cwtl
sub
pop
pusha
nop
jns
inc
ret
rorl
or
add
dec
xchg
inc
lods
dec
in
icebp
enter
xchg
rcll
rol
and
mov
pop
mov
sub
mov
daa
sbb
mov
adc
jle
mov
adc
in
cld
std
fisubl
adc
sti
xor
and
lds
pop
xchg
and
xchg
adc
pop
fadds
iret
int3
or
psubq
pop
mov
scas
mov
daa
lods
push
jns
cmp
add
inc
push
ja
hlt
test
adc
pop
xchg
sbb
sbb
dec
mov
addr16
in
repz
ss
outsl
push
aaa
in
test
mov
insl
out
jp
xor
fidivl
scas
push
adc
pop
std
arpl
pop
les
cmpsl
mov
in
mov
push
push
dec
add
or
js
mov
rorb
push
cmpsl
cmp
cwtl
outsb
sbb
dec
std
pop
scas
test
xchg
xlat
pop
jle
pop
dec
adc
lock
dec
les
inc
jp
pop
mov
add
jae
shrb
sti
mov
outsl
sti
adc
rclb
dec
imul
cmp
hlt
adc
bound
jg
cli
inc
lcall
xchg
push
mov
into
xchg
leave
cmpsb
int
jl
rcr
xchg
jne
pop
add
inc
sbb
shrl
arpl
push
pop
push
sbb
loopne
xlat
movsb
ljmp
sub
stos
fisubl
cltd
outsl
stos
and
mov
add
pop
icebp
pusha
mov
mov
jl
pop
cmp
orb
int
jno
jmp
out
iret
fsubr
sub
nop
aaa
dec
xchg
arpl
push
xor
imul
fcmovne
ret
hlt
add
cmpsb
movsl
inc
dec
add
cmp
stos
scas
push
ss
xlat
mov
mov
push
dec
pop
scas
mov
and
jp
or
out
imul
cmp
mov
fcmovbe
xchg
aam
shrl
enter
xor
mov
insl
scas
cmp
ljmp
inc
lahf
iret
daa
mov
fldenv
adc
inc
pop
inc
inc
popf
loop
outsl
jbe
daa
nop
sub
dec
fwait
mov
dec
xor
pusha
sbb
cmp
cmp
or
cltd
or
adc
mov
cwtl
jnp
out
push
sbb
xchg
pusha
xor
jmp
lret
movsl
cwtl
insb
shr
ret
pop
mov
push
fimuls
loope
inc
adc
testl
xor
loope
nop
scas
cmp
xor
xor
rorb
popf
cmp
and
stos
lods
adc
aad
or
pusha
fisttpl
imull
icebp
push
pop
faddl
inc
adc
ret
fstl
rclb
pop
and
stos
fstpl
cmpsl
les
xor
pop
int
lcall
sahf
jno
inc
pop
push
ja
loopne
cwtl
xchg
outsb
dec
jmp
loopne
add
jl
popf
nop
mov
fidivrl
imul
iret
push
outsl
add
mov
pushl
pop
jbe
mov
je
push
cld
imul
in
mov
add
or
jmp
xor
sub
pop
jmp
mov
div
movsb
adc
xor
aas
jmp
push
add
push
dec
mov
scas
sub
pop
and
ljmp
inc
cwtl
scas
movsb
jmp
mov
push
lcall
add
mov
ret
cmpsb
mov
dec
popa
out
sarb
mov
push
dec
es
jge
xchg
lods
popf
mov
stc
daa
jo
jns
mov
inc
outsb
pop
xor
cmc
jae
cs
push
aaa
mov
out
sub
stos
test
scas
sub
inc
out
cmp
sti
lret
mov
jbe
xchg
push
imul
std
push
mov
fsubs
sti
mov
push
bound
mov
mov
aaa
dec
in
inc
dec
mov
imul
add
or
add
out
xchg
orl
cmpsb
mov
mov
test
inc
jecxz
and
cmpsb
pop
fs
jns
jg
mov
dec
xor
aam
xchg
mov
cmp
mov
inc
adc
jne
add
lahf
int
or
dec
repz
push
rcrb
mov
or
sti
imul
rorb
cmp
dec
push
lock
jecxz
pushf
jb
insb
adc
lcall
std
and
in
mov
mov
mov
enter
xchg
push
lods
lds
lcall
jne
outsb
clc
pop
data16
js
mov
xlat
pop
sahf
dec
out
xor
sub
mov
mov
push
mov
insl
jl
popa
fldenv
xor
or
push
add
adc
call
adc
xchg
add
mov
mov
scas
jecxz
push
push
je
int3
or
sarb
dec
push
lahf
mov
pop
sub
repnz
cli
add
cmp
test
push
mov
add
rorb
rorb
out
pop
hlt
push
gs
dec
jmp
fistpll
loope
or
mov
dec
int
hlt
mov
andb
pop
orb
clc
pxor
push
insb
dec
xchg
sahf
stos
and
lahf
sbb
sbb
xchg
push
loop
fwait
cmp
clc
jb
outsl
and
xor
jg
xchg
mov
out
sbb
add
pop
hlt
mov
or
rolb
out
cmpb
inc
dec
lret
inc
push
leave
or
mov
mov
jo
sub
inc
cwtl
dec
daa
xlat
fimull
push
in
dec
xor
lods
sbb
mov
push
icebp
ret
adc
push
leave
inc
or
mov
test
push
les
cltd
xchg
test
movsb
int
inc
or
xor
sti
cmpsb
out
test
pop
loopne
pop
out
and
xchg
cltd
cmc
sbb
ret
aad
lea
fwait
pop
fwait
les
mov
ja
pop
fnstsw
adc
and
test
lret
or
and
sbb
test
jl
bound
test
andb
cmpsl
mov
out
call
mov
cld
sub
outsl
adc
push
adc
cmp
add
in
outsl
jnp
push
add
shrb
outsb
pop
js
pop
push
stc
enter
stc
out
push
insl
fs
inc
bound
in
dec
xchg
lret
fbstp
enter
cmpsb
stc
repnz
test
movsl
jae
es
mov
push
insb
scas
aas
insb
das
roll
or
js
jb
insb
xor
addr16
add
in
and
dec
fidivrs
in
ficoml
dec
out
mov
cwtl
adc
xchg
jle
loop
fisttpll
pop
repz
sti
insl
xor
neg
xor
pop
in
sbb
mov
jl
dec
addb
push
xor
push
hlt
add
mov
fisubrl
xor
sub
sub
inc
shll
mov
outsb
push
gs
mov
jge
repnz
pop
es
mov
in
shl
dec
sub
out
adc
mov
lahf
ljmp
mov
sar
hlt
jo
mov
es
sub
out
mov
outsl
or
mov
sub
das
fistpl
test
in
mov
or
jnp
imul
add
das
js
adc
fisubs
ja
sbbb
ds
cmc
push
lea
push
cld
xchg
jno
lock
nop
stos
lret
ds
mov
mov
dec
adc
sti
sbb
hlt
jle
or
std
add
push
push
movsl
sbb
leave
xor
flds
jbe
pusha
mov
push
fistps
or
enter
mov
loopne
adc
mov
scas
imul
sbb
loop
mov
cmp
pushf
mov
adc
sub
movsl
xchg
inc
xlat
inc
mov
in
jns
lahf
mov
es
cmp
mov
fisttpll
add
icebp
test
add
cs
sub
jp
pusha
sti
dec
cmpb
fldcw
pop
test
sbb
push
mov
sub
inc
and
xchg
sbb
leave
ja
cmc
lea
rcll
aaa
repz
test
cmp
push
cli
or
iret
push
fs
cmp
xchg
cmp
sbb
xchg
mov
dec
pop
pop
stos
and
dec
mov
push
stc
push
inc
or
mov
ljmp
pop
push
xchg
ljmp
jmp
push
sub
or
aad
xchg
notb
mov
lret
jb
dec
fs
jle
cmp
add
ret
mov
mov
sub
imul
adc
insl
pusha
adc
pop
cmp
xor
inc
xchg
or
jb
push
fwait
out
imul
mulb
mov
add
inc
pop
cld
clc
mov
daa
cmc
sbb
lods
out
and
int
aam
lock
aam
xor
push
inc
stc
pop
jnp
xchg
call
adc
mov
adc
call
jle
xor
mov
jmp
mov
push
dec
xchg
movsl
icebp
pop
xchg
mov
cmp
fadds
or
or
cmp
into
call
inc
shl
mov
out
adc
xchg
int3
push
clc
xor
lret
or
outsl
fistpl
mov
inc
xchg
loope
xlat
jns
jecxz
mov
mov
repz
xor
leave
mov
cs
stos
jne
push
add
rorl
push
xchg
xchg
stos
jle
clc
pop
test
lock
mov
shrl
mov
mov
stos
ds
inc
rclb
inc
in
pop
sub
lods
loope
xchg
sub
mov
sahf
sub
mov
rorl
fsubs
out
into
pop
ror
adc
pop
arpl
mov
mov
roll
inc
fwait
dec
or
push
lahf
jmp
lods
sbb
std
shll
shl
push
sbb
in
jbe
popf
fiadds
push
add
or
jl
push
sbb
push
fidivs
xor
sub
jle
mov
rol
mov
xchg
sti
adc
or
daa
jge
xor
mov
push
jp
mov
data16
push
int3
mov
arpl
enter
pop
jb
jmp
pop
jl
imul
pop
addr16
xchg
inc
loope
std
aad
out
or
jne
and
ret
inc
jle
pop
xor
mov
dec
lret
loop
scas
pop
mov
shll
jae
mov
mov
or
lock
jg
scas
or
or
movsl
jns
sub
mov
das
outsl
std
cmp
sbb
sahf
insl
mov
fidivrl
inc
or
data16
xchg
in
in
xchg
mov
inc
ret
lcall
movsl
jne
mov
push
je
out
out
orb
outsl
nop
pusha
jns
test
or
in
dec
ljmp
repz
rol
jo
push
ret
aaa
mov
aas
pop
scas
jge
push
sar
sbb
mov
sub
pusha
cmpps
pusha
xor
add
pop
sahf
mov
sbb
movsb
cmpsb
dec
pop
push
ja
aas
pusha
mov
dec
pusha
gs
mov
ror
cmpsl
sbb
jge
ljmp
pop
sub
dec
flds
int
mov
lods
lea
decl
jp
testl
and
mov
cli
inc
addr16
and
adc
cmp
cwtl
pop
jge
jle
cltd
pop
insl
or
ss
adc
movsb
rcr
xor
lea
jns
inc
push
fwait
xchg
shlb
fistps
shrl
int
xor
pop
push
inc
xchg
jno
xchg
mov
in
iret
test
dec
mov
cmc
xchg
sub
jo
xor
fdivl
pusha
inc
xor
iret
inc
jecxz
test
vunpcklps
in
int
xchg
and
xor
lods
repz
fcoms
movsb
dec
mov
pop
xorb
mov
pop
push
dec
mov
xor
or
stc
gs
dec
push
mov
adc
mov
or
pop
jno
rcl
adc
pop
inc
fldt
add
int3
and
add
fdivrl
rcl
fcomp
mov
cmp
add
jbe
xor
scas
jmp
rolb
adc
and
addb
lahf
aaa
mov
int
sub
pop
mov
sbb
add
xor
and
dec
ror
loop
xor
insb
in
jg
dec
xchg
stos
xor
aam
adc
fdivl
pop
test
sbb
mov
sub
push
in
pushf
fadds
mov
push
test
rolb
xchg
push
hlt
mov
les
inc
ret
and
cmp
cmpsb
cmpsb
test
aad
aas
pop
inc
adc
ret
mov
frstor
test
test
dec
lahf
cmp
in
imul
adc
sahf
mov
aaa
pop
loope
push
js
lret
push
ljmp
xor
mov
push
mov
jle
mov
mov
imul
loope
loopne
inc
dec
dec
call
push
movsl
out
roll
les
das
jbe
dec
or
inc
xchg
mov
cwtl
pop
fcmovb
mov
jle
stc
xchg
xchg
les
inc
inc
dec
jns
in
arpl
push
jae
dec
fdivl
sbb
lcall
lret
in
and
stc
or
inc
add
dec
or
push
lcall
push
fcom
xchg
rcl
ljmp
xor
jns
sub
sbb
cmc
in
mov
sahf
mov
lds
and
loop
emms
imul
pop
pop
cs
enter
lods
adc
jp
fwait
in
push
lret
test
movb
shrb
shll
jno
or
cmp
out
cld
mov
adc
push
push
xchg
cmp
jnp
push
addr16
mov
cmp
inc
mov
into
inc
xchg
insb
ret
out
mov
jae
push
imul
jne
mov
mov
bound
ss
sbb
and
or
lods
clc
in
jecxz
cmp
dec
or
nop
pop
nop
sbb
mov
les
xchg
out
pop
jle
xor
lods
adc
repz
push
mov
mov
mov
iret
jae
lahf
adc
repnz
pop
mov
jge
inc
xor
xchg
pop
cld
je
scas
adc
xlat
inc
dec
shlb
in
jmp
inc
push
cld
std
lock
xchg
movsb
leave
ss
imul
sbb
mov
sbb
inc
push
xchg
xor
stos
rclb
jl
pop
dec
cmpsl
sbbb
xchg
dec
ficoms
jge
push
je
mov
inc
push
in
or
xchg
cmpsb
ljmp
ret
adc
and
push
ret
dec
pop
push
xchg
push
ljmp
fildl
or
jecxz
xor
stc
push
mov
mov
jecxz
cmc
dec
nop
mov
xchg
pop
jecxz
mov
push
cmp
push
inc
adc
sub
idivl
adc
out
push
dec
inc
sub
pushf
mov
push
nop
jge
push
imul
arpl
fldt
pushf
cltd
sub
js
ljmp
out
pop
push
push
xor
push
andl
mov
icebp
lret
not
push
test
lods
mov
mov
cli
mov
inc
xor
daa
stos
lcall
xor
je
xchg
xchg
xor
add
popf
loopne
not
inc
inc
jmp
std
add
or
mov
in
cmp
mov
insb
lock
mov
mov
out
jmp
sbb
mov
inc
jg
and
testb
or
fcoms
movsl
scas
out
gs
sbb
pop
loope
cmp
popa
ret
hlt
cli
fisubrl
jns
incl
je
push
bound
hlt
outsb
fsin
stc
sbb
cmc
lea
inc
lret
pop
imul
xchg
pusha
stos
cmpsb
scas
lcall
adc
push
bound
and
cli
sub
imul
je
mov
adcb
add
aam
aam
pop
pop
cmp
in
cwtl
pop
out
xchg
loopne
push
andl
orb
inc
inc
ljmp
jmp
enter
inc
sahf
sti
stos
mov
and
pop
fucomi
mov
hlt
imul
movsb
lods
imul
leave
mov
aad
xor
xor
or
mov
pop
push
scas
cli
fucomip
arpl
pop
push
jecxz
insl
xchg
hlt
mov
stos
loop
out
xlat
lea
mov
and
inc
inc
jne
rol
push
movsl
jle
xchg
cld
imul
in
cmp
fcompl
das
xor
addr16
faddl
das
mov
inc
cmc
lcall
mov
shrb
aaa
mov
lea
xor
mov
sub
out
out
lcall
cmp
loop
xchg
push
jmp
cwtl
pop
sbb
cmp
cmpsl
push
xchg
outsl
int
adc
or
insl
push
dec
cmp
xchg
stc
ffree
pop
or
mov
xchg
loop
or
sub
cmpsl
push
add
cwtl
imul
lcall
add
cmp
mov
pusha
wrmsr
or
mov
and
int
sub
inc
mov
dec
mov
sbb
les
xor
and
in
adc
mov
xor
mov
aas
loopne
mov
pusha
ljmp
mov
inc
dec
test
loope
jbe
nop
test
sub
and
das
xchg
cmpsb
fisubrl
lds
xor
addr16
out
mov
pop
cli
mov
push
or
in
lea
iret
mov
pop
lea
call
xchg
stos
inc
shrl
pop
cmc
dec
cmp
inc
jno
mov
xchg
les
insb
ret
cmp
jo
das
push
jmp
pop
xor
jo
mov
sub
jge
add
lahf
mov
sbb
and
push
orb
clc
stc
pushf
xchg
mov
jge
mov
arpl
xchg
mov
out
test
rorb
inc
insb
cltd
or
repnz
jp
jp
insb
in
scas
sahf
popf
call
and
dec
aaa
mov
push
mov
addb
mov
bound
stos
and
dec
jno
daa
fdivs
gs
xchg
sbb
mov
mov
pop
mov
and
mov
mov
sbb
mov
roll
int
loope
lods
lods
ss
pushf
cli
sbb
xchg
lds
mov
cltd
bnd
movl
or
pop
test
mov
lds
daa
stc
sti
fs
jno
cpuid
adc
add
or
xchg
mov
fisttps
stc
sbb
ljmp
cwtl
pop
adc
cmp
sbb
push
dec
xchg
imul
cmp
sahf
inc
pop
rcl
cmpsb
cltd
jge
pop
sub
xchg
pushf
cmpsb
js
mov
mov
adc
in
push
dec
or
and
push
dec
push
loopne
cmp
ss
dec
sbb
clc
rorl
cli
and
pop
popa
int
in
in
sub
int
xor
inc
or
jge
pop
adc
in
mov
mov
cmp
pop
add
mov
inc
gs
out
imul
fdivrs
fnstsw
jnp
pop
insb
inc
cmp
adc
cmp
aaa
arpl
loop
loopne
andl
fidivs
pop
cltd
pop
out
push
jp
sbb
xlat
sub
pop
dec
scas
js
aad
and
jecxz
lcall
xchg
push
adc
ljmp
xchg
and
xchg
dec
cmp
xor
pop
imulb
xor
xor
push
ja
sbb
push
xlat
jbe
sbb
stc
lods
push
pop
out
into
out
or
adc
sbb
jp
dec
scas
fidivrl
insl
and
and
jle
test
in
adc
or
jle
jo
adc
cmc
jle
mov
test
shlb
inc
in
adc
jbe
sbb
or
fdivl
sbb
lock
mov
or
sub
mov
outsb
push
mov
xchg
push
je
inc
jl
jp
inc
push
lret
das
bound
outsl
popf
fs
push
mov
aad
and
pop
nop
push
les
jbe
xor
gs
jae
jae
pop
push
jl
sbb
mov
aam
or
imulb
addr16
pushf
and
jb
jmp
test
cmc
bound
sbb
mov
cld
lods
das
jecxz
fsubs
dec
rolb
add
pop
dec
mov
push
rorb
out
dec
out
push
lahf
or
stos
cmc
js
mov
leave
or
lret
push
mov
mov
je
or
add
hlt
sbbb
cmp
or
dec
adc
mov
out
jecxz
fwait
sahf
xlat
repz
pop
jns
nop
cmc
test
jmp
or
xlat
fprem1
out
push
pop
cmpsl
icebp
pop
mov
dec
int3
pusha
inc
insb
push
lcall
and
mov
sbb
dec
inc
jbe
cmpb
inc
or
cmp
fmull
mov
cmpsl
std
leavew
mov
aaa
jg
push
mov
leave
mov
pop
aad
mov
mov
mov
push
in
cmc
mov
ja
ss
mov
or
hlt
arpl
in
mov
aas
cmpsl
and
insb
ret
cmp
outsl
inc
data16
bswap
hlt
stos
mov
mov
js
jecxz
ja
xchg
pop
test
add
push
xor
rcrl
mov
and
repnz
data16
add
bound
out
push
mov
ffreep
cmpsl
fbld
popf
cmp
flds
mov
cmp
jl
lret
cmpsb
pop
int
jmp
mov
ss
mov
aam
jno
and
cwtl
stc
in
mov
cltd
daa
insb
aad
push
int
xor
dec
jbe
cmp
enter
insl
lahf
push
mov
ljmp
cmp
or
cmp
mov
cmp
popa
mov
loop
jmp
lock
scas
xchg
sub
ret
mov
mov
sbb
bound
jecxz
jg
cwtl
push
popa
pop
or
cmc
fmull
xlat
repnz
inc
cmpl
mov
cmp
cltd
cld
fisttps
leave
mov
xor
loopne
rclb
inc
js
cmpsb
jge
push
dec
sub
push
sti
sbb
jg
ret
sub
ficoml
mov
ficomps
cltd
pop
or
push
mov
pop
pop
push
stos
lret
cltd
nop
sub
xchg
mov
and
or
dec
mov
test
adc
sub
inc
jg
or
fsts
jg
mov
xchg
cmpsl
sbb
cmpsl
inc
xchg
leave
cs
mov
getsec
fidivrl
paddw
outsb
inc
and
out
movsl
xor
loope
sub
xor
test
and
jae
mov
jl
or
xchg
cwtl
in
fisubl
mov
xor
mov
or
je
addr16
pop
int3
or
test
mov
xlat
mov
popa
pop
add
add
mov
repz
and
outsb
and
in
sub
sub
cli
pusha
pop
les
add
mov
or
jg
xor
enter
cmpsb
cmp
mov
mov
mov
std
sub
imul
xchg
jl
sub
xchg
sti
sbb
jae
sbb
repnz
rcll
pop
out
into
aaa
jb
adc
scas
scas
push
cmpsl
sbb
fwait
das
or
int
movsl
adc
push
sbb
lahf
sbbb
leave
enter
inc
rcll
outsl
stos
sbb
jnp,pt
roll
pop
xchg
aas
pop
mov
push
ss
pop
stc
xchg
sub
andb
xchg
addb
loope
dec
mov
and
mov
mov
repz
movsb
push
pop
xlat
adc
push
out
sbb
das
stc
int
xchg
xor
lods
testl
dec
mov
loope
cmp
push
dec
dec
xor
jnp
mov
mov
int3
aas
clc
pop
lds
fisubs
xchg
mov
movsb
pop
mov
nopl
mov
inc
jmp
sub
xor
or
pushf
sub
push
jo
pop
xorb
sbb
mov
mov
out
out
adc
inc
sub
xor
andb
sbb
push
lahf
sti
roll
cmp
loope,pt
scas
mov
fcmove
xchg
insl
add
mov
add
in
pop
xchg
adc
cmpsb
lret
push
adc
xchg
imul
cmp
cmp
push
loopne
addr16
inc
addb
cmp
test
addl
push
rol
dec
dec
testb
sbb
adc
push
fidivrs
pop
jns
cwtl
aas
mov
dec
inc
and
lods
mov
and
add
jg
fistl
rclb
pop
fs
jb
or
call
mov
loope
lds
or
adc
cmc
cs
dec
xor
jbe
pop
dec
loope
pop
aas
cmp
sar
push
ljmp
fidivs
aas
mov
push
sbb
cmp
frstor
sub
into
jmp
adc
std
adc
leave
adc
or
xchg
mov
inc
jmp
outsl
xchg
or
xchg
in
test
sbb
repz
or
data16
rcll
outsb
outsl
add
nop
sahf
iret
aaa
dec
mov
test
out
lock
out
jne
aam
les
jno
rcrl
sti
push
push
mov
sbb
add
push
pushf
push
mov
sub
rclb
dec
xchg
inc
pop
daa
push
jo
mov
stc
mov
adc
dec
ds
fsub
ffree
je
push
mov
mov
addl
das
lods
jmp
jae
mov
mov
inc
mov
dec
mov
sbb
jo
adc
lret
or
adc
shr
pop
sbb
mov
ficoml
mov
fidivs
jle
xor
inc
pop
loop
lods
repnz
xor
out
in
jge
and
mov
decb
mov
sub
jecxz
sub
repnz
mov
inc
and
sbb
jg
jp
test
push
and
mov
xor
push
out
xchg
mov
test
les
inc
sbb
data16
push
call
test
dec
push
mov
push
xor
in
addl
out
std
inc
icebp
scas
and
repnz
xlat
sub
mov
pop
cmp
in
popf
jb
lahf
adc
ret
shlb
or
out
in
mov
push
sub
jg
mov
arpl
data16
lret
mov
add
andl
sbb
jmp
add
sub
cli
or
ljmp
es
inc
push
out
inc
or
fidivrs
ret
ss
fistpl
sbb
jno
mov
cmp
loope
jnp
loope
xchg
ljmp
fs
insl
popf
sub
fnstsw
pop
sarl
jae
test
and
push
je
push
mov
mov
ret
jb
nop
xchg
sub
jns
dec
bound
mov
sahf
jb
mov
inc
xor
lock
mov
jbe
sub
fidivrs
mov
mov
sbb
cmp
stos
in
ds
test
mov
cmp
cli
fstps
mov
or
sti
or
mov
push
dec
dec
loopne
jnp
xor
aaa
mov
fstl
outsb
and
push
fistps
push
and
cmp
pusha
sub
adc
jo
sbb
push
jno
out
pusha
inc
lods
insl
ss
sbbl
lods
and
mov
xchg
aad
pop
jg
mov
jo
popf
test
ljmp
sub
add
xor
test
cld
xchg
pop
dec
add
insl
mov
xchg
aaa
xor
cltd
inc
ljmp
repz
mov
add
sub
jno
mov
adc
icebp
out
je
jb
push
push
xor
mov
lret
lcall
popf
push
out
stos
negb
dec
pop
cmp
dec
pop
lcall
repz
nop
lods
or
cmp
xor
pop
xchg
xorb
or
jmp
pop
leave
sbb
sahf
fsubrl
or
dec
jno
dec
mov
mov
mov
mov
ljmp
dec
push
cs
xchg
lcall
pop
scas
js
loop
jle
lods
hlt
js
cmp
and
leave
jge
pushl
mov
sbb
jmp
pusha
xchg
mov
dec
push
jl
shrb
outsl
sbb
push
mov
mov
cltd
sarl
movb
mov
jge
jae
sub
or
mov
sub
jnp
lock
into
bound
pusha
dec
dec
sbb
mov
inc
fsubl
int
out
mov
pop
xchg
mov
or
inc
lods
sti
sahf
sti
push
push
fimull
outsl
sbb
je
push
and
mov
xchg
int
subb
adc
sbb
and
adcl
inc
jl
sub
pop
push
ficoms
scas
xchg
inc
sbb
sub
js
or
and
lds
lret
movsb
dec
jmp
lcall
push
js
int3
mov
pop
cmp
test
xchg
in
jp
adcl
pminsw
and
sbb
pop
push
mov
or
adc
jmp
std
sub
pop
ret
xchg
and
mov
add
add
bound
iret
out
sbb
jo
test
mov
pop
push
pop
je
sahf
pop
pop
lock
popa
add
insb
nop
sub
into
aam
imul
daa
ljmp
mov
dec
xorl
fucomp
push
jo
lock
call
jmp
fstpt
jmp
xchg
test
mov
and
inc
jnp
and
std
jno
adc
adc
sub
lea
xor
or
inc
push
sub
add
mov
mov
outsb
fwait
int
xor
insb
pop
pop
sbb
mov
rclb
dec
pusha
iret
sbb
xchg
aaa
inc
add
dec
add
icebp
iret
push
test
pushf
cmp
inc
cli
out
ja
iret
enter
xchg
mov
js
mov
orb
roll
mov
mov
jnp
inc
idiv
sub
jge
mov
mov
cmp
mov
mov
nop
arpl
jg
iret
hlt
cmp
dec
and
adc
sub
sahf
fdivrs
cwtl
cltd
mov
xor
sbb
das
sarl
loope
mov
push
mov
imul
divl
lcall
inc
dec
pop
and
pop
movsb
sub
inc
or
cmp
xchg
out
ds
xor
adc
out
or
inc
aad
and
cmp
sub
leave
push
cmp
pop
ss
icebp
jg
lods
sub
mov
push
push
inc
test
aad
push
rcrl
aaa
pop
cmc
inc
push
xchg
push
sub
aas
dec
leave
btc
and
cmpsb
hlt
imull
nop
insl
gs
push
bound
call
add
sbbl
idiv
add
das
xchg
xchg
lret
mov
mov
lahf
mov
push
iret
xor
push
and
ja
pop
ss
mov
and
fdivs
sbb
mov
sub
xor
mov
dec
orb
mov
mov
or
rorb
int
stos
push
xchg
je
pop
adc
adc
jl
xchg
aaa
xor
sti
jb
cld
lds
neg
cmpl
stos
rcll
dec
xor
popf
sbb
cmpsb
lock
sbb
inc
and
inc
mov
add
xchg
bound
int3
push
loope
daa
cmpb
fadd
dec
fmull
lret
stc
add
fwait
push
push
pusha
inc
push
mov
push
mov
mov
loop
sub
ja
pop
adc
xor
and
inc
andb
mov
loopne
stos
iret
aad
icebp
push
das
mov
imul
sbb
int
inc
into
push
or
sbb
xor
lock
mov
cmp
ljmp
nop
fbstp
test
xor
cmp
fildll
pop
out
mul
das
ret
or
popa
ja
add
into
scas
sbb
xchg
cmp
test
push
stos
adc
out
rorl
loop
cmpsl
mov
mov
loop
lret
pop
inc
aam
ret
xlat
xor
pop
xchg
inc
js
ret
testl
cltd
and
aaa
or
jo
ret
js
inc
mov
sbb
cld
sbb
movsb
jmp
pop
pop
fwait
sbb
iret
jbe
pop
test
mov
and
jae
leave
xchg
and
stc
xchg
fnstenv
scas
lea
repz
lahf
hlt
mov
pop
sti
xor
push
fnop
add
xchg
xor
js
xor
or
xchg
fisubs
pop
push
outsb
mov
inc
pop
loope
xchg
pusha
add
aas
pop
push
lret
jne
cmp
jo
adc
jnp
sbb
and
stc
jns
mov
repz
xchg
lcall
cmp
bound
push
cmp
lock
ret
xchg
rorb
mov
imul
andb
cmpsb
test
push
xchg
movsl
ret
xchg
ret
or
mov
mov
scas
pop
and
lcall
dec
jp
sub
xchg
dec
and
std
lods
dec
mov
dec
mov
daa
cmc
lods
cmp
mov
popf
push
mov
cmp
xchg
pop
cmp
iret
or
or
mov
pop
roll
xor
sub
in
or
pop
push
sahf
jl
pop
add
pop
popfw
into
cli
push
jl
xchg
mulb
int
cs
adc
lret
dec
test
dec
dec
jbe
test
push
fldt
inc
xchg
or
sub
jl
rcll
js
cld
pslld
mov
fwait
add
and
sub
subl
adc
jge
lretw
pop
int3
jae
adc
push
sub
adc
sbb
setno
push
jno
dec
xchg
fdiv
jno
ret
adc
push
xor
shll
in
and
leave
mov
push
lahf
mov
mov
lds
mov
xor
cli
insb
aaa
test
mov
push
outsl
sarl
xchg
cmp
mov
mov
dec
xchg
in
mov
dec
xchg
movsl
rcrl
cmc
jl
fistl
icebp
sub
xchg
jecxz
fisttpll
inc
out
mov
les
fldenv
inc
cld
fldl
pop
sub
jnp
jne
jae
add
jo
insl
xchg
faddl
mov
out
adc
movsl
roll
sarb
mov
loope
push
in
pop
test
adc
mov
inc
mov
mov
sar
jno
adc
test
roll
jo
test
in
push
stc
adcb
rcrl
nop
or
adc
mov
mov
sub
mov
out
leave
inc
cmp
mov
int
add
mov
xchg
mov
out
cmpsb
jns
pop
aas
nop
xchg
push
cmp
lock
int3
outsl
or
push
sub
sahf
fists
pop
cmp
popa
jnp
int
pushf
xor
jo
mov
dec
andl
sti
mov
ret
scas
mov
lds
outsb
stc
sbb
cmp
stc
push
jbe
and
outsb
add
and
in
imul
dec
dec
pop
or
adc
cs
cmp
cmp
out
or
push
add
in
sahf
loope
add
lahf
jle
lcall
pop
stc
in
rcrl
jp
fnstenv
gs
je
jns
fcompl
inc
scas
cmp
dec
out
stos
or
or
in
pop
xor
pop
xor
jp
data16
pushf
cmp
jg
into
in
adc
cld
pop
pop
cmp
arpl
pop
adc
lods
jle
add
lods
sub
mov
dec
sbb
popa
loopne
rcrb
ret
or
xchg
or
pop
pop
add
lcall
arpl
aam
std
loope
clc
push
xchg
aad
loope
in
movsl
and
ljmp
inc
mov
xchg
fcmovbe
scas
push
xchg
sbb
iret
mov
rolb
xor
scas
sbb
lock
sbb
pop
bound
into
pusha
addr16
jmp
and
rcll
rcr
into
pop
and
fcmovb
xor
data16
call
das
jbe
jne
jge
cmp
or
xor
hlt
sbb
addr16
jmp
xchg
pop
inc
fs
inc
sub
sbb
push
aaa
fwait
xchg
stos
arpl
imul
jns
cmp
or
inc
cmp
inc
orl
push
add
lret
decb
iret
xchg
inc
pusha
inc
push
lds
and
out
and
js
cmp
mov
js
ss
movl
fists
add
sbb
movsb
dec
lret
dec
out
jnp
out
rcll
inc
pop
push
add
lock
inc
xchg
popf
cltd
test
loop
cmc
test
popf
insl
lahf
sub
sbb
dec
repz
in
push
out
data16
das
out
pop
adc
test
call
aam
inc
pop
xchg
cmp
dec
in
fs
out
dec
cmpsl
daa
pop
cmpsb
insl
jno
scas
adc
sub
cmpsb
xchg
inc
sahf
adc
add
test
jae
sub
inc
or
jns
mov
mov
push
cmpsb
or
mov
ret
outsl
sub
dec
aas
sbb
sub
add
sub
popf
jge
stc
fdivs
or
add
push
fnsave
jmp
xorl
fs
pop
enter
aad
or
mov
fcompl
repz
xchg
pop
les
mov
lock
lret
push
les
add
mov
push
mov
inc
push
cmp
cltd
push
sbb
add
insl
mov
cmp
imul
cmp
nop
xor
mov
dec
or
adc
push
adc
sub
inc
mov
addr16
mov
rcll
lahf
lea
push
mov
xor
icebp
mov
cmp
sub
jmp
push
dec
ja
scas
or
sahf
stc
lods
loope
outsb
push
jmp
fwait
insb
adc
or
nop
mov
adc
add
dec
mov
mov
daa
ja
pop
aam
xor
add
ss
fcomi
adc
jmp
fwait
aas
dec
iret
ds
and
lcall
out
xorb
movsb
cmpb
dec
dec
adc
adc
fnstenv
and
push
fisttpll
into
test
addr16
push
jbe
ljmp
push
addr16
icebp
call
cmpsb
fisttpl
clc
dec
push
add
outsl
lcall
mov
daa
insb
pop
mov
out
popa
sbb
jo
popf
dec
dec
fst
rorb
rolb
fnstcw
adc
sbb
push
in
repz
mov
leave
in
andl
js
test
mov
adc
mov
mov
inc
mov
scas
and
out
pop
stos
xchg
into
jp
or
das
fdivrp
cmp
add
lret
icebp
jbe
lret
xorl
lcall
push
loopne
cmp
pop
mov
mov
arpl
adc
popa
lea
out
dec
cmp
dec
cmpsl
pop
imul
in
mov
inc
fldenv
test
loop
pop
ljmp
or
sub
adc
push
inc
sbb
decl
inc
push
xor
cmp
gs
mov
stos
enter
and
mov
loopne
mov
aad
test
notb
lcall
xor
inc
imul
sub
or
out
arpl
pop
gs
fiadds
xor
sbb
push
stc
pop
mov
test
stos
push
mov
xchg
lret
icebp
scas
dec
rorl
out
push
lock
mov
jge
sub
sub
push
mov
mov
jg
mov
push
adc
inc
ja
sbb
push
xchg
or
cld
push
sahf
push
xchg
test
and
lret
push
mov
or
fs
push
xor
in
jge
in
pop
cmpsb
subl
data16
or
push
sub
inc
sub
imul
aas
add
mov
jecxz
stos
int3
xor
mov
lcall
es
mov
aad
pop
scas
icebp
sub
fmuls
jbe
das
dec
dec
cmpl
les
xor
push
pushf
lods
sbb
sbb
fnclex
insb
loopne
pop
inc
cmp
push
jmp
jle
mov
es
pop
daa
testl
push
pop
cli
not
stos
test
mov
xor
sarb
adc
ror
jnp
fstpt
stos
pop
mov
aam
and
push
xchg
leave
insb
ljmp
fcoms
incb
lods
popf
icebp
jae
pop
jo
test
xchg
push
mov
test
hlt
into
out
push
stc
gs
cmp
push
cmp
lret
lock
inc
adc
cmp
mov
push
and
arpl
sub
cmpsl
push
cmp
adc
mov
sahf
in
mov
lods
repnz
jb
inc
clc
sti
add
icebp
push
jbe
and
arpl
test
ficoms
mov
and
mov
sbb
cmp
stos
imul
sarl
adc
int
sbb
xor
adc
sarb
nop
std
mov
xor
xchg
ja
sbb
mov
decb
jmp
dec
fsubrs
sbb
mov
fidivrl
pop
pop
insb
in
pop
mov
xor
push
mov
dec
mov
cmpsl
mov
int
mov
outsl
dec
add
aam
stc
adc
sub
out
or
outsl
leave
bound
cmp
jo
pop
int
fisubrs
sub
mov
out
iret
dec
lock
ret
push
push
push
push
shl
sub
push
xchg
sub
xchg
push
jecxz
sbb
ss
pop
jecxz
jns
or
movsl
out
xchg
hlt
add
jp
jns
ja
mov
out
cmpb
aas
aam
add
or
mov
inc
mov
push
les
addb
repnz
inc
bound
add
pop
stos
fs
enter
movsb
sarl
popf
mov
aad
dec
les
jmp
mov
sbb
nop
dec
js
shrb
loope
pop
inc
mov
fildl
dec
imul
pop
ja
sbb
jne
mov
into
mov
into
sbb
push
lods
in
fsubs
ja
aad
sub
cmp
dec
xchg
in
xor
mov
es
clc
addr16
ljmp
sub
repz
lfs
inc
sahf
push
insl
repnz
cmc
insl
mov
adc
xor
jmp
je
sbb
std
push
dec
bound
xlat
pop
int
inc
out
inc
ljmp
add
pop
movl
mov
cs
push
and
mov
cmp
lcall
sahf
or
clc
dec
pusha
mov
sub
xlat
xchg
mov
mov
mov
pop
mov
repz
repnz
adc
jl
fcmovbe
adc
xor
ljmp
and
outsl
std
aas
lcall
movsl
jno
out
out
aas
repnz
out
sahf
int3
imul
inc
rcrl
adc
jg
loope
popa
adc
orl
push
sub
insb
add
lods
aaa
mov
xchg
jo
jmp
pop
sub
and
dec
mov
cmc
mov
adc
xor
xor
cwtl
rol
out
outsb
call
inc
sbb
xchg
jl
ljmp
inc
arpl
addr16
push
insb
scas
xchg
cmp
add
mov
mov
ret
and
pop
mov
jno
pop
filds
adc
mov
cmp
ss
dec
and
ret
fucomp
mov
ds
sbb
cmpsb
fidivrs
mov
test
test
mov
test
imul
mov
ljmp
adc
lcall
cmp
mov
into
cs
pushf
ds
or
imul
mov
pop
mov
add
jecxz
push
mov
data16
sub
rcll
scas
jl
loope
xor
fsubrs
call
cmp
stos
fcomps
das
insb
stos
cmpsb
test
push
push
sbb
lret
xor
into
jge
lods
pop
out
dec
pop
mov
mull
js
push
rcrb
gs
inc
shrb
stos
push
inc
jmp
inc
jb
dec
dec
popa
imul
imul
pop
jne
inc
imul
push
cmp
je
sub
mov
dec
and
mov
cmp
or
enter
sti
in
ja
and
sub
mov
cmp
mov
or
xor
cs
repz
mov
outsb
lcall
das
subl
jle
cltd
cmpsl
cltd
loope
dec
in
lret
lret
mov
shl
cld
insb
enter
fsubs
adc
fisubl
inc
mov
in
sub
insb
mov
sbb
loopne
jg
scas
fnstsw
lahf
ds
gs
repnz
and
into
inc
sahf
cwtl
fmulp
mov
jne
pop
inc
jecxz
sbb
or
jbe
outsl
ds
or
jae
test
loop
ds
push
cltd
clc
pop
hlt
cmp
dec
enter
mov
popf
out
ret
repz
jle
jl
andb
fcomps
stc
add
xchg
xchg
push
push
add
sub
pop
movsb
repz
je
cmc
inc
out
fstpt
cmp
nop
imul
test
mov
cmpsl
pop
push
cltd
pop
jno
pushf
call
cmp
je
sbb
xor
pop
dec
sub
je
jle
mov
push
pop
xor
adc
movsb
decb
mov
test
dec
loope
pop
out
jbe
push
xchg
dec
push
push
dec
add
sub
mov
and
into
push
or
nop
push
xor
out
push
push
nop
sbb
aad
sti
std
xchg
pop
mov
dec
in
pop
adc
pop
stos
nop
cmpb
jl
dec
push
mov
mov
mov
jge
outsl
push
imul
mov
lock
lods
mov
movsl
out
cli
jns
mov
push
xchg
call
scas
or
loope
mov
pop
loopne
daa
xchg
sub
sbb
and
mov
jnp
fwait
out
cmp
cmpsb
or
test
xlat
out
dec
popf
imul
push
loope
outsb
sti
loopne
xchg
add
jnp
aas
inc
ljmp
in
subb
jmp
lret
push
jge
xchg
mov
jmp
dec
into
mov
dec
mulb
fsubr
cmp
push
cmp
and
xchg
sbb
aam
nop
lea
cmp
out
out
lock
mov
inc
xchg
mov
xor
sub
jle
sub
popa
inc
pop
mov
xor
aas
test
in
xor
adc
sub
pop
cmp
rorb
inc
xchg
in
jo
stc
stc
pop
sub
pop
and
int
pusha
xor
loopne
adc
add
and
fildll
test
mov
test
xchg
push
sbb
and
mov
es
add
not
cltd
pusha
jge
and
cmp
inc
jle
pushf
mov
push
push
push
jb
adc
mov
imull
test
cmpsl
dec
out
dec
jle
cs
xchg
cmpsb
sti
rep
test
sbb
mov
jg
adc
stos
jnp
clc
daa
mov
mov
sbb
loopne
xchg
leave
adc
or
mov
outsb
mov
sbb
push
add
add
shl
push
vunpckhps
int
insl
movsb
sbb
fwait
leave
mov
sub
inc
xchg
lahf
lds
in
out
sahf
mov
or
popf
jnp
xchg
ret
jb
adc
aaa
mov
push
add
ret
js
xchg
fdivl
roll
lcall
push
sbb
add
gs
test
cmp
or
shld
push
dec
push
aas
aas
xchg
inc
imul
dec
mov
pushf
pop
cmp
add
imul
add
push
xor
dec
push
mov
daa
adc
mov
call
jmp
mov
add
jl
test
sub
or
pop
xor
std
test
xor
push
xor
mov
mov
rcrl
xchg
sub
xchg
lret
xchg
sbb
lods
lock
or
icebp
test
outsl
inc
popa
repz
or
inc
add
imul
dec
rclb
out
insb
add
mov
outsb
ret
pop
push
ljmp
mov
jg
mov
pop
fisttps
jns
stos
stc
in
pop
push
pop
or
clc
gs
mov
cmc
mov
mov
push
sbb
push
call
and
les
add
scas
mov
push
mov
pop
rorl
in
xchg
cwtl
lret
dec
mov
jmp
es
sub
fdivrl
lea
sbb
lcall
cmp
pop
push
xchg
push
ret
xchg
imul
sti
stos
out
mov
pop
mov
out
xchg
and
test
les
and
ret
fisttpll
cwtl
push
stos
in
push
setbe
mov
mov
std
fistpll
sbb
jnp
adcl
mov
in
cmp
out
fdivp
ret
mov
xchg
fdivs
xchg
mov
syscall
fmul
pop
mov
jp
leave
jns
sub
cwtl
sub
mov
js
inc
popf
or
jno
daa
fsubl
daa
nop
ret
and
aaa
push
mov
jmp
scas
xchg
jno
pop
mov
jo
sub
inc
add
cmc
das
pop
cmp
and
add
cmp
incb
notb
xor
sub
imul
mov
call
jecxz
loope
dec
mov
test
mov
pop
lock
adc
jl
pop
xchg
xchg
das
xchg
inc
jp
mov
jl
cmpb
adc
mov
pop
nop
mov
mov
in
pop
out
icebp
js
test
in
out
shrl
add
push
mov
gs
dec
sub
inc
cmp
cmp
fimull
mov
inc
pop
pop
add
sahf
dec
cltd
cwtl
jne
sub
mov
aad
cmpsb
enter
lahf
mov
mulb
fldl
rcrl
jo
jae
or
xchg
lds
cli
jno
clc
decl
jne
sub
out
rorb
lock
aaa
movsl
test
mov
mov
aas
sti
int
mov
nop
xor
mov
mov
pushf
add
pop
cmp
pop
push
adc
sub
inc
mov
mov
mov
or
pop
or
fidivl
repz
shrb
inc
mov
xor
arpl
inc
and
subb
popa
aaa
mov
mov
add
dec
stos
cmp
push
push
adc
shl
call
std
mov
jmp
js
inc
xorl
push
ret
xor
mov
int3
mov
mov
xor
jae
add
pusha
cmc
pop
mov
ja
sti
fildll
ret
pop
testl
mov
adc
pop
mov
lea
lret
xor
pop
jp
inc
aam
xchg
ljmp
sbb
push
and
sub
push
push
xor
push
add
shlb
push
sub
icebp
jae
fwait
mov
pmaddwd
xor
jp
fimuls
jns
xchg
lret
or
scas
and
test
jb
xchg
mov
pushf
popf
dec
iret
jmp
out
cld
es
cmp
push
xor
adc
push
repnz
jnp
insl
imul
adc
in
push
add
xor
and
jp
adc
cli
into
fcompl
inc
xchg
lds
jl
xor
jl
lea
imul
add
lods
inc
sbb
mov
pop
dec
shlb
ret
test
outsl
loopne
or
stos
ljmp
push
push
aam
push
jno
cmc
push
in
mov
leave
ss
inc
inc
mov
inc
mov
es
push
cmp
aaa
push
rorb
jno
scas
mov
mov
and
insl
divb
add
mov
push
aas
sbb
mov
outsb
xor
push
movsl
mov
aas
bound
mov
orb
push
sub
lahf
roll
cs
pop
popa
pop
xchg
sbb
jne
jg
lods
cld
push
jae
or
aam
xchg
xchg
lods
loopne
dec
cmp
mov
xor
sbb
inc
ja
add
inc
inc
out
roll
or
out
push
imul
lret
mov
pop
in
in
aam
mov
fs
pop
jno
loope
xchg
leave
xchg
pop
lret
jb
jne
cli
shlb
push
cmc
fistps
outsb
or
outsb
cli
cmpsb
mov
test
lret
inc
xchg
pavgw
pop
bound
cmp
and
lahf
rcrl
push
mov
push
in
pop
rcl
nop
int3
insl
jl
divl
jl
test
repz
mov
daa
lahf
push
sub
adc
fstl
out
xlat
xlat
jle
lahf
xor
movsb
jae
xlat
popf
add
js
das
mov
mov
push
push
inc
aaa
mov
pushf
add
daa
ret
adc
in
in
pop
mov
movsb
lods
mov
xchg
fdivs
fadds
or
stos
jae
and
or
jecxz
dec
aam
lret
mov
fisubrs
shl
xchg
xor
mov
popa
mov
js
pop
cmp
mov
mov
adc
pop
into
sub
loope
mov
sub
in
or
push
xlat
push
xchg
jle
js
jns
adc
cmp
fcomp
sbb
scas
sbb
pop
add
or
mov
rep
cvtpi2ps
insl
inc
add
mov
jmp
mov
jmp
jl
cmpsl
push
cltd
fistl
rcl
ret
flds
jl
and
pusha
push
sub
adc
cmpsb
lods
imulb
clc
aad
testl
adc
mov
ret
mov
loopne
dec
mov
adc
cmp
fldcw
outsb
lret
and
loope
inc
out
into
aad
jl
mov
dec
xor
xchg
push
lods
xlat
mov
inc
mov
in
push
mov
sub
sahf
montmul
cmpsb
sub
out
mov
test
into
cli
mov
lods
adc
std
xchg
movsl
dec
ss
inc
clc
frstor
xchg
jne
mov
es
cmp
dec
sbb
cs
loope
call
add
push
lahf
inc
shll
jo
loop
imul
xor
ficompl
cmpsb
xchg
xchg
subl
loope
dec
cltd
push
push
push
sub
ss
int
call
mov
fxtract
inc
mov
and
outsl
dec
ss
jae
xchg
rolb
repz
popa
cli
test
hlt
nop
xor
adc
scas
push
sub
sbb
stos
loop
dec
mov
push
dec
test
lods
lea
clc
sbb
movsl
in
mov
insb
push
jmp
mov
and
add
popf
jae
sti
fdivr
out
fwait
call
dec
xlat
adc
data16
add
mov
das
xchg
insb
dec
push
leave
std
loope
in
push
mov
add
aaa
pop
gs
outsl
push
mov
lods
bound
jecxz
out
mov
adc
gs
cli
sbbl
xchg
push
out
dec
xor
cltd
decb
scas
pop
push
mov
cvtdq2ps
mov
sub
push
jns
es
adc
sbb
xchg
adc
notl
ret
xchg
test
jno
lods
cmc
arpl
inc
sti
add
or
jp
pop
in
or
mov
mov
xor
dec
jmp
stos
xor
push
mov
std
cmpsl
pushf
gs
test
xchg
push
aad
push
and
cli
adc
stc
cld
test
iret
rol
pop
pop
int3
movsb
xchg
xchg
pop
inc
pusha
lods
call
in
gs
mov
cmpsb
mov
or
push
call
push
test
arpl
shl
add
mov
sub
push
xor
test
aad
mov
xor
push
les
aam
xchg
lds
xchg
cmp
xchg
fisubrl
scas
loope
cmp
sbb
jle
insl
inc
enter
je
mov
push
dec
or
and
mov
mov
xor
jo
icebp
xor
or
xchg
cli
movsb
mov
iret
push
xlat
ds
adc
test
push
cs
inc
in
arpl
pop
addr16
xchg
test
adc
mov
inc
adc
cmp
cmp
inc
test
jl
cmp
inc
sar
push
or
fimuls
sahf
push
push
rorl
decl
mov
stc
cli
cmp
dec
xchg
lods
jp
push
push
sbb
test
fadd
add
movsb
pushl
jae
cmp
orl
sbb
jnp
lahf
bound
inc
testl
add
andb
mov
nop
push
test
insb
pop
dec
xchg
mov
pop
insl
dec
cmp
adc
dec
sbb
out
out
mov
cmp
mov
xor
fidivl
js
xchg
sub
push
and
movsl
jl
fsubrs
lods
and
loope
pop
xchg
mov
out
mov
mov
pop
sub
mov
cmp
scas
xchg
arpl
cmp
in
std
add
sbb
fdivrl
and
xlat
js
rorb
mov
adc
sbb
mov
inc
inc
mov
dec
fwait
push
cmpsb
hlt
push
ljmp
xchg
xchg
stc
out
dec
jno
gs
pop
dec
aaa
or
std
adc
sub
hlt
xchg
pop
xchg
lret
xor
int
les
popf
ss
pop
pop
push
imull
mov
outsb
cmp
add
addr16
sbb
pop
ret
jae
gs
leave
or
push
ret
loop
repnz
mov
inc
ja
stos
or
das
mov
fucomi
inc
pop
dec
mov
int
sub
aas
mov
insl
leave
pop
mov
mov
pop
bound
xor
jl
cld
int
pop
cmp
mulb
pop
xchg
cltd
fdivl
add
sub
push
pop
rolb
push
sbb
pop
repz
mov
frstor
xor
push
cmpsl
int
fldt
fsts
mov
iret
test
sarl
fs
testb
sub
jge
js
mov
hlt
cmpsb
repnz
pop
adcl
rcl
sbb
xchg
lods
jg
int3
jo
push
mov
aaa
pop
stos
jp
outsb
sbb
icebp
pop
push
pop
lahf
mov
rol
cmp
xchg
hlt
push
out
xor
es
fdiv
mov
rolb
mov
call
sub
loop
into
shll
adc
rclb
cwtl
int3
fdivl
push
mov
addr16
mulb
and
dec
mov
push
jb
push
insl
in
out
xchg
cmp
aad
es
fadds
mov
fs
frstor
fldt
add
jge
sub
repz
out
mov
mov
scas
mov
pop
inc
xor
scas
shll
sub
sbbl
or
dec
mov
clc
cmp
inc
xchg
ds
inc
daa
popf
inc
pushf
insl
dec
out
ljmp
lcall
push
dec
call
call
or
inc
jg
fadds
imul
ret
and
std
xchg
cmp
fisubs
inc
mov
xchg
jp
enter
and
rol
scas
shlb
xchg
xor
stc
fmull
xchg
pushf
jae
bound
shlb
lds
aas
cs
mov
mov
popf
adc
test
rcrl
xor
sbb
and
shll
cmpsl
inc
lret
loope
pushf
fs
mov
out
ret
stc
sbb
xor
mov
call
dec
loop
popf
ficoml
jbe
aam
aam
adc
inc
int
sbb
jl
lods
or
jp
jb
popa
mov
scas
pop
push
ljmp
nop
and
or
cmp
adc
scas
mov
pushf
and
aas
fstpl
mov
or
and
mov
cmp
cmc
add
sbb
cmp
stc
xor
aas
dec
pop
jno
lret
xchg
hlt
orl
mov
pop
lcall
adc
add
jns
push
pusha
sbb
ret
test
stos
cmc
pop
xor
mov
int
fsubrl
int
push
cmp
cmp
ret
cmp
mov
xchg
dec
movsl
faddl
mov
xchg
or
fildl
shl
clc
inc
rcl
cs
jmp
add
cmp
leave
mov
ja
sub
imul
xorb
or
insl
fisubl
insl
xchg
insl
push
push
adcb
add
sbb
xchg
xchg
shlb
pop
std
add
dec
daa
int3
insb
outsb
inc
sub
std
dec
xor
popa
mov
adc
lea
int
mov
in
rcll
insl
cmp
insb
sti
call
sbbl
sbb
mov
push
insw
xor
push
sub
aad
xchg
sub
jne
mov
xor
stos
outsb
rcll
scas
mov
imul
ss
cmp
leave
fiadds
inc
sub
jge
jno
pop
lcall
add
sub
lock
ja
add
mov
dec
xor
loop
push
outsb
out
pop
pop
and
cmp
cmp
loopne
insb
or
aaa
stos
les
mov
mov
je
in
lcall
cmp
jl
mov
out
add
mov
rolb
adc
xchg
mov
mov
and
mov
cmp
in
js
jno
mov
push
push
loope
test
adcl
push
xchg
loop
arpl
mov
xor
jne
out
sahf
push
enter
ja
inc
xor
jno
dec
popa
cmp
rcrb
into
mov
cmp
dec
add
jg
shll
fiaddl
movsb
mov
pop
push
fsts
sahf
sub
or
outsl
lret
xchg
cmpsb
ljmp
out
lds
cmp
in
pop
fcoml
or
mov
fimull
aas
push
cmp
dec
add
pop
mov
enter
lods
sti
data16
cmp
cltd
movd
int3
jp
in
push
cmp
inc
mov
sub
and
por
or
stc
mov
gs
jbe
icebp
ds
mov
aaa
xor
inc
jp
shrl
pop
movsb
xor
push
cmp
nop
xchg
adc
sti
mov
outsb
add
inc
xlat
or
out
mov
or
out
shrl
in
jnp
sbb
addr16
jecxz
es
mov
xor
xchg
pop
sbbl
adc
es
les
bnd
mov
cwtl
xchg
out
mov
call
mov
std
cmp
mov
xor
or
xchg
mov
cmp
push
lahf
jno
js
neg
push
mov
push
cmp
ret
cmp
or
mov
in
xchg
xor
or
jne
mov
popf
pop
add
pop
dec
ficompl
rorb
push
orl
loope
sub
pop
fiadds
jmp
xchg
test
pop
cs
push
imul
lret
mov
dec
add
sbb
inc
nop
pop
sub
push
pop
hlt
imul
xor
add
mov
mov
lds
lods
jb
dec
xor
arpl
mull
and
mov
decl
xorb
lods
outsl
shll
pop
dec
dec
arpl
leave
adc
jbe
pop
out
push
outsb
mov
loopne
sbb
push
cmpsl
push
adc
test
mov
xor
push
jl
pop
push
sarb
adc
push
imul
inc
ds
mov
pop
fs
adc
add
mov
iret
repnz
lods
jbe
aad
inc
jecxz
bound
mov
mov
repz
repnz
sbb
push
loopne
xchg
inc
sbb
pop
and
sub
and
sbb
xor
das
or
scas
jbe
js
sub
sbb
xor
fidivrl
mov
sti
daa
test
cltd
sahf
sub
add
mov
pop
pop
lea
fistpl
rolb
mov
aas
xchg
mov
dec
dec
pop
iret
cs
jl
aam
or
pop
in
test
jbe
push
test
mov
nop
jge
cmovns
pop
mov
xor
dec
bnd
mov
lea
cs
call
aad
pop
ret
add
xchg
mov
xor
out
test
sbbl
pop
jg
and
inc
dec
jae
jp
xlat
cmp
subb
inc
mov
xor
push
out
rcr
cmp
cli
fnsave
mov
rcrb
mov
mov
imul
jg
xor
and
imul
imul
cltd
arpl
sbb
je
jnp
cmp
mov
and
lods
jae
pop
out
lea
mov
pop
icebp
xor
cmp
bound
inc
cmp
aam
insl
jnp
enter
add
cltd
sbb
addr16
jecxz
rorl
es
rorl
add
xchg
sub
jnp
mov
jns
push
mov
iret
pop
dec
imul
loop
mov
ret
xchg
ljmp
inc
ret
sub
popf
sbb
sub
pop
fidivrs
insb
pop
dec
xchg
fisubl
pop
adc
mov
fnstenv
and
jge
ljmp
pop
les
pop
dec
fs
push
push
jb
aas
int3
dec
out
fs
out
xchg
inc
aam
or
adc
xchg
mov
adc
stc
test
mov
fwait
divl
push
std
bound
pop
adc
push
fs
into
mov
aam
int
dec
outsb
jb
push
cmp
stos
test
jmp
aad
cmpsb
adc
sub
fadds
pop
orb
mov
xor
int
clc
mov
cmc
stos
xchg
repnz
test
into
xor
shr
xor
ret
and
push
fidivl
xor
and
add
pop
pop
push
jbe
xor
mov
mov
push
cmc
cmc
adcb
cli
sbb
xor
sbb
add
in
push
add
jb
or
btr
jecxz
shll
xchg
or
lea
in
into
lret
loope
test
xor
insl
popf
cltd
mov
mov
aad
xor
inc
cmp
ja
jb
lock
dec
adc
and
xlat
ljmp
test
push
mov
mov
adc
aad
xchg
xchg
sub
sarb
push
mov
push
mov
mov
xor
mov
sub
sub
jbe
adc
jae
iret
push
clc
repz
testb
push
dec
adc
sbb
clc
rcrb
xchg
arpl
mov
xchg
mov
fsub
push
xchg
sub
repz
fldt
dec
xchg
mov
fimull
sbb
mov
jp
mov
ret
fsubrl
mov
lret
sub
fdivl
push
sarl
cmpsb
fs
sarb
pop
dec
pop
insl
pop
cmpsl
imul
sbb
mov
inc
dec
negl
xchg
jge
sarb
les
xchg
adc
test
xor
mov
scas
push
jnp
xchg
fs
sub
pcmpeqd
xchg
in
add
lahf
mov
mov
pop
dec
adc
cmc
test
mov
mov
mulb
jmp
cld
insb
in
mov
xchg
pop
aad
stc
xchg
cmp
jns
stc
stc
push
jb
hlt
and
xor
jne
add
ja
arpl
fwait
push
mov
popf
pushl
cltd
dec
mov
insl
adc
inc
lcall
fimuls
andb
push
jns
in
adc
adc
adc
cmpsb
scas
adc
push
push
pop
loop
fmuls
mov
fiadds
mov
cwtl
pop
pop
jbe
das
jmp
ret
fadds
or
and
test
xchg
movl
xor
add
es
daa
mov
lea
push
ret
mov
or
push
push
std
mov
shrl
push
jecxz
enter
cld
sub
ret
in
adc
cmp
mov
jecxz
fimull
sub
push
jns
or
mov
xor
jmp
repnz
sahf
xchg
cmp
and
dec
mov
cmp
push
imull
dec
cmp
outsl
pop
js
cmpsl
mov
sbb
sub
push
mov
addr16
add
xor
lds
dec
or
outsl
xor
push
mov
lret
mov
leave
icebp
pop
in
dec
mov
pop
cmp
push
jl
cmpsb
pop
out
pop
in
in
stos
mov
cmp
imul
push
and
mov
int3
test
ret
outsl
push
or
lds
sbb
arpl
cmp
rcr
dec
xchg
lret
into
dec
das
and
sub
jp
mov
dec
shll
push
pop
and
jbe
imul
jg
jo
imull
push
xor
cli
mov
lock
xor
mov
enter
add
pop
sahf
or
mov
cmp
cld
fimull
ret
and
outsl
insl
fwait
sbb
or
xchg
imul
int
test
out
rorb
shrb
ljmp
sub
sbb
sub
pop
xchg
or
test
adc
divb
outsb
lahf
mov
push
in
pop
mov
xchg
int
lcall
add
orb
nop
sbb
or
inc
sbb
pop
ret
bound
jle
imul
int
roll
push
xchg
inc
xchg
fistps
out
add
pop
mov
dec
jns
mov
test
repnz
pop
push
aad
inc
pushf
inc
xor
sbb
jg
fsubs
notl
aas
ja
push
xchg
sub
jae
pop
xchg
adc
jmp
jnp
test
aam
dec
xchg
pop
jnp
push
outsl
cmpsl
fwait
xchg
mov
adc
int
mov
mov
movsb
pop
nop
cmc
xor
push
push
push
lahf
outsl
in
ret
adc
pop
ret
js
add
jmp
cmp
sbb
jg
push
test
bound
push
ret
adc
pop
add
shrb
mov
cli
jnp
dec
cmp
pop
or
stc
pop
lcall
loopne
xchg
adc
push
xor
jb
and
pop
dec
push
jne
sti
es
aaa
jg
pop
and
adc
in
mov
sub
xor
pop
insl
add
movsb
cmp
inc
mov
lods
dec
mov
jmp
shrl
push
or
xor
nop
cli
jmp
push
cltd
inc
mov
loopne
loopne
je
pop
cmc
in
mov
pop
cmp
fld
pop
enter
and
push
inc
pusha
outsl
jae
mov
repnz
cmp
dec
divb
fs
adcb
push
dec
in
pop
loop
inc
pop
rcrb
jo
push
ss
iret
pop
fdivrs
jle
std
insb
and
sub
insl
pop
xchg
in
std
ljmp
pop
scas
xchg
push
test
adc
and
movsl
fildl
out
sarl
sti
scas
paddusb
testb
xchg
mov
inc
cmp
mov
fnsave
dec
enter
mov
mov
push
outsb
ss
imul
mov
mov
sahf
out
fnstcw
inc
mov
mov
div
andl
cmp
scas
stc
aad
shr
jge
cmp
push
leave
xchg
stos
inc
adc
imul
sub
repnz
insb
in
addb
mov
pop
cmp
adc
xchg
aas
nop
in
aam
add
push
or
or
inc
or
dec
adc
cmpsl
popa
jo
jns
enter
call
mov
dec
mov
fstpt
xchg
sbbl
mov
hlt
mov
mov
les
xor
cmpsb
int3
push
outsl
loop
fdivr
mov
jae
lods
sbb
jp
sub
loope
fwait
push
dec
insb
mov
repnz
xor
mov
test
mov
loopne
data16
dec
jge
jnp
pop
mov
sbb
loope
pop
push
jbe
xor
add
inc
sub
hlt
lcall
imul
andl
add
lods
in
mov
cmpb
mov
xchg
int3
push
loop
adc
or
mov
test
loop
es
and
fs
jnp
dec
cmp
fstpl
xchg
aas
mov
or
in
add
dec
stos
pop
sub
insl
mov
loope
das
lods
enter
lret
sbb
inc
fxch
and
inc
mov
mov
pop
cld
lods
mov
push
movsb
cmp
clc
addb
sbb
inc
mov
adc
test
dec
pop
das
mov
pop
xchg
in
fcompl
out
jns
or
adc
stos
gs
stos
imul
and
shll
dec
pop
push
mov
xor
scas
test
sbb
jmp
pop
jmp
ds
inc
push
push
add
imul
rolb
sub
mov
fistpll
lea
mov
dec
mov
fstl
sub
inc
lock
pop
sbb
jge
and
fwait
cmpsl
aad
sbb
or
inc
clc
inc
pop
mov
xor
add
insl
mov
bnd
inc
dec
ja
imul
imul
jmp
pop
divl
and
dec
and
fs
pop
mov
xchg
cmc
add
js
add
dec
out
xchg
insl
mov
je
and
sbb
jp
mov
dec
or
fdivp
xor
xchg
jb
dec
or
mov
and
rcrl
xchg
mov
cmp
fisubrs
int3
jp
xchg
jo
fnstenv
and
mov
push
cld
or
cwtl
mov
xchg
xor
or
mov
push
into
cltd
gs
aaa
nop
add
test
orb
push
mov
jmp
sub
insb
mov
je
sub
push
lock
psllq
add
hlt
add
fmull
sub
out
ret
popa
sarl
dec
int
or
push
xchg
fsubrl
xor
ss
stos
mov
sti
xchg
sarl
jae
int3
cmc
sub
les
loopne
stc
fstpt
adc
push
xlat
adc
mov
fldcw
jns
imul
xor
mov
test
pop
rolb
add
cmpsb
ljmp
cld
addr16
jmp
in
add
ss
fisubrs
cmp
jo
inc
cmp
dec
sbb
cmp
push
lods
jle
test
fnstenv
dec
or
xchg
jecxz
lods
adc
clc
movsl
daa
std
push
inc
hlt
lods
push
jo
je
jae
es
inc
xchg
add
dec
adc
sbb
jae
dec
push
add
add
dec
cltd
icebp
out
xchg
icebp
xchg
and
push
dec
xchg
mov
xor
adc
sbb
mov
mov
enter
out
or
and
push
mov
and
clc
je
aam
data16
sub
add
inc
inc
call
push
ja
xchg
mov
ret
shll
mov
mov
movsl
and
ret
jg
rorl
lret
and
xor
fs
mov
stos
lcall
pop
mov
mov
mov
inc
jg
jno
sub
adcb
lea
es
dec
es
push
fldt
inc
adc
rcll
sub
xor
mov
data16
adc
push
stc
aaa
xchg
cmpsb
mov
mov
and
out
mov
pop
jnp
daa
enter
test
repz
stc
in
inc
sbb
rcrb
jo
xchg
or
cmpsl
shll
pop
test
divl
mov
jmp
popa
ret
dec
fdivl
jle
pop
sahf
dec
xchg
mov
vmovntpd
or
mov
jmp
rclb
lods
jp
je
pop
adc
cmp
sbb
sub
subb
sub
scas
xchg
xor
lret
loop
xchg
sub
mov
inc
mov
hlt
mov
jp
sbb
jne
shlb
xchg
pop
dec
mov
and
loope
pushl
mov
pop
mov
fistpll
pop
mov
adc
mov
xlat
pop
das
jne
sbb
pop
or
mov
icebp
or
xchg
push
nop
cmp
and
add
adc
inc
adc
cmpsb
or
sub
jg
out
pop
out
jl
inc
jecxz
jns
pop
dec
xchg
call
dec
dec
xacquire
fmuls
leave
and
xchg
fisttpl
aam
out
and
jae
nop
cmp
stos
sbb
icebp
push
mov
dec
sub
std
mov
dec
add
lahf
and
das
mov
jae
stos
and
push
fstl
and
cli
orl
and
shll
fidivs
scas
inc
and
mov
and
pop
shrl
add
xor
mov
cmp
addr16
sub
xor
jmp
outsl
pop
jge
add
sub
les
ss
inc
sub
pop
dec
xor
rcrl
mov
in
push
lea
sbb
xor
xorb
add
and
push
sahf
jmp
int
gs
push
imul
stos
sahf
fdivrl
repz
or
imulb
inc
lods
lods
dec
xchg
adcb
pop
xchg
xchg
call
xor
clc
pop
xor
ss
ret
cmp
jno
stc
aad
push
or
sbb
sub
int3
icebp
pusha
hlt
sbb
fwait
cmp
jae
push
movsb
lods
pop
jle
loop
sub
sarl
nop
jmp
or
sbb
insl
lahf
xor
adc
shl
ret
cli
inc
lea
outsb
fcompl
sbbl
mov
sbb
data16
and
addr16
sub
add
insl
and
out
jmp
mov
xor
dec
outsb
mov
int3
mov
fdivs
movsb
mov
adc
cli
cmc
pop
adc
leave
loope
movsl
push
mov
frstor
shll
push
xor
mov
andb
sbb
scas
pop
xor
mov
jno
jbe
ja
ja
pop
fistl
nop
xlat
stos
or
cld
push
xchg
cmc
addb
mov
mov
mov
push
push
sub
mov
fwait
ror
xchg
push
rclb
lahf
inc
xor
fs
push
lds
jge
pushf
test
cmpsl
pminsw
aas
scas
ss
jo
dec
adc
clc
shll
xchg
lods
mov
adc
push
mov
sub
and
cmpsb
xchg
cmpsl
mov
addr16
lcall
xlat
fnstenv
cmp
mov
xor
cltd
push
pop
jp
inc
push
cmp
or
and
sub
adc
ss
and
fstl
or
xchg
ud0
or
dec
jb
push
and
fnstenv
dec
sbb
das
fnstenv
jnp
dec
inc
iret
mov
pop
orl
push
jg
je
cmpsb
sti
cmp
bound
movsb
repz
jns
test
lret
leave
cltd
sub
pop
sti
push
dec
lcall
sti
jle
rorl
sub
jl
adc
pop
or
sbb
sub
mov
decb
cmc
rcr
shlb
dec
shr
int
rcl
daa
imul
ficomps
iret
jbe
enter
inc
ret
jl
inc
xor
inc
popa
loop
gs
push
xor
push
mov
adc
iret
jb
pop
inc
xchg
mov
in
in
mov
dec
adc
sbb
arpl
bound
push
inc
pop
cltd
push
cmp
inc
movsl
test
lock
or
and
mov
mov
fnstsw
cmp
ret
xchg
sahf
push
or
add
mov
sub
xor
insb
aaa
xchg
pop
bound
data16
jo
add
xchg
cwtl
repnz
xchg
cmp
icebp
dec
lods
ja
pop
and
push
inc
add
into
cmp
sub
xor
dec
xor
fsubrl
fisubs
adc
sub
stc
mov
arpl
add
repnz
pop
jp
je
mov
aaa
inc
cmp
push
imul
leave
movsb
aad
or
xor
and
test
inc
les
dec
lock
jp
stos
mov
lahf
mov
imul
ret
out
mov
cmp
sub
ja
negb
or
aam
daa
inc
cmp
das
adc
or
insb
lahf
stos
out
negl
cmpsl
lret
jnp
sub
fcomps
sub
dec
mov
cmp
mov
enter
fmulp
pop
sbb
filds
popa
les
push
sbb
and
and
dec
scas
leave
mov
cld
xor
out
push
insl
lret
jmp
out
adc
or
cmpsb
ds
aam
outsl
and
in
xchg
sub
cmpsb
and
push
inc
mov
jp
inc
je
nop
jecxz
and
lds
test
int
sar
mov
int
gs
pop
xor
ret
nop
pop
out
jae
mov
inc
das
mov
jg
push
nop
add
rcl
mov
push
mov
xchg
or
fadd
push
pop
call
jb
mov
jl
sbb
lahf
cmpsb
ds
mov
push
pushf
icebp
outsl
test
mov
push
dec
xor
add
mov
dec
sub
mov
jne
pop
out
mov
movsb
push
fwait
test
dec
mov
inc
ja
mov
cmpsl
les
jns
outsb
mov
cmpsl
pop
or
dec
mov
cmpsl
fcompl
jg
movsl
mov
iret
cwtl
int3
sbbb
outsb
std
out
and
inc
cmp
or
mov
call
jo
aad
daa
sub
push
xchg
pop
xor
ljmp
mov
call
idivl
fstp
stos
xchg
xor
dec
adc
push
je
mov
fsubrl
add
push
pop
pop
push
push
and
or
int3
sub
xchg
jns
out
jnp
mov
lret
inc
ss
shlb
dec
or
mov
lahf
adc
push
in
pop
sti
lea
mov
adc
add
jb
inc
push
mov
mov
arpl
insb
mov
pop
cmpsb
add
mov
in
and
mov
add
pop
cmc
inc
mov
jns
popf
sub
jbe
mov
and
loope
cltd
loop
pop
add
jg
ja
aas
ret
scas
test
xchg
jno
lret
push
popa
xor
mov
push
aas
test
scas
cmpsb
push
dec
rcrl
mov
fcoml
xlat
dec
mov
hlt
jecxz
arpl
cli
push
int3
xchg
lea
mov
testl
xorl
xchg
mov
mov
out
push
push
xchg
outsb
xchg
lds
xchg
mov
mov
lods
sahf
dec
aad
test
and
gs
ja
pop
fnstsw
and
lcall
inc
lds
pop
out
and
xchg
es
cmp
xor
xchg
aas
dec
sti
lods
lret
lds
mov
inc
repz
push
pop
add
add
mov
mov
scas
aas
xchg
repnz
sahf
add
xor
jne
cmp
sbb
out
out
sub
into
jecxz
das
cld
sub
gs
adc
out
push
mov
mov
push
hlt
out
repz
jmp
nop
into
cld
cmp
and
or
pop
sub
arpl
jo
cmp
mov
out
and
push
stos
pop
setne
fnstcw
push
mov
loopne
jnp
mov
sbb
cmp
loope
and
ret
out
int
inc
jmp
sbb
out
rcrb
fsubrs
inc
imulb
cmp
dec
lds
adc
mov
outsb
sub
mov
jg
mov
inc
mov
pusha
jae
jo
mov
mov
pop
or
pop
inc
mov
xchg
icebp
fisttpll
test
jne
sti
mov
notl
gs
leave
hlt
add
cmp
adc
data16
push
push
mov
dec
push
push
jp
out
inc
sti
cmp
or
xchg
outsb
xchg
fstpl
mov
cwtl
mov
xchg
mov
into
icebp
jmp
in
or
fsts
add
scas
mov
push
loopne
adc
xor
sahf
fnsave
ja
imul
flds
pop
pusha
cmp
dec
inc
push
mov
test
aad
xor
mov
sahf
rol
lcall
stos
jl
sub
int3
cmp
mov
test
fisttpll
jns
jle
xchg
add
mov
mov
mov
adc
mov
push
scas
mov
test
xor
scas
ror
int3
or
pop
sbb
cwtl
sarb
xor
pushl
adc
loop
ja
mov
int3
xchg
fimull
data16
pushf
fs
mov
pop
cld
jns
sub
jecxz
fs
iret
popa
jo
dec
pusha
mov
addr16
out
mov
sub
sbb
inc
push
sarl
xchg
mov
repz
mov
loopne
xchg
pop
fisttpll
imul
callw
es
scas
dec
adc
mov
std
mov
xchg
popf
adc
iret
mov
lds
add
push
jle
xchg
daa
pop
pop
sarl
into
imul
jbe
mov
lcall
cmp
cltd
fnstcw
test
mov
outsb
adc
and
xchg
xor
call
mov
and
mov
adc
xor
in
shrb
ljmp
jnp
ljmp
sub
enter
adc
adc
scas
mov
cmp
mov
xor
es
mov
jno
test
xor
cmp
push
pop
xor
scas
out
pop
pop
imul
pushf
inc
sahf
aam
sahf
fwait
mov
inc
daa
mov
popa
notl
int
cmc
lret
push
mov
adcl
jp
test
imul
loopne
xor
xchg
mov
xchg
faddp
mov
imul
sbbb
push
jg
cmp
xchg
lret
scas
icebp
fs
out
jp
mov
jcxz
dec
pop
mov
in
jb
xor
cltd
pop
mov
sbb
jbe
sbb
pop
or
xchg
mov
incb
mov
fsubs
xlat
cld
pop
fistpl
imul
push
inc
test
sti
sbb
and
mov
push
andl
inc
pop
cltd
push
xchg
ss
pop
cmc
mov
push
shlb
push
sub
mov
add
out
and
cwtl
lods
sbb
lret
xchg
adc
rol
mov
test
mov
popf
dec
outsl
mov
jl
hlt
nop
push
xor
push
xchg
shlb
fnstenv
aas
jmp
jp
ljmp
xorb
lea
or
jl
test
mov
sbb
or
out
cli
pushf
and
imul
into
insb
sahf
xchg
rcl
mov
call
mov
stc
pop
cmc
adc
shr
inc
pop
xor
fwait
aam
rolb
icebp
xor
sub
popf
out
jne
cmp
popa
fsts
das
in
test
push
test
addr16
push
pop
jmp
or
iret
jns
es
xchg
mov
mov
xor
cwtl
in
cmc
jo
mov
gs
out
sbb
and
bound
xchg
add
cmc
add
push
xchg
and
mov
cmpb
cmp
lock
ret
jge
stos
test
ljmp
mov
into
aas
dec
inc
rclb
lret
arpl
pop
mov
xor
std
inc
fbld
call
add
cmc
sarl
add
add
and
dec
sbb
shl
jnp
mov
leave
adc
and
sub
fidivrl
popf
loop
push
sti
jecxz
xor
push
or
ficompl
out
je
ds
loopne
mov
pop
std
std
inc
adcb
ja
xchg
mov
lea
nop
ja
dec
mov
push
les
jecxz
mov
bound
mov
sbb
push
cmp
jno
push
xchg
sbb
test
pop
push
cmp
sub
mov
idivl
mov
in
adc
push
in
out
jl
and
push
sbb
cmc
loope
cltd
and
add
movsl
fldcw
sbb
lcall
add
cs
lds
mov
aas
push
enter
cmp
mov
or
in
js
aad
test
aam
mov
sub
adc
push
and
scas
scas
xor
faddl
sarl
pop
aas
or
fdivs
sub
mov
pop
cwtl
out
xor
add
decl
ds
dec
adc
fsts
dec
xor
sbb
out
mov
push
lcall
inc
aaa
pop
rclb
sub
jae
push
xchg
add
mov
lret
mov
mov
jmp
cmp
or
and
cmc
pop
fs
outsl
mov
mov
bound
mov
cwtl
xchg
mov
xchg
arpl
shll
xchg
sbb
pop
dec
popa
movsb
cmp
xor
movsl
and
add
popa
pop
inc
xor
jno
dec
cmp
and
pop
push
xchg
sbbl
push
std
jbe
jo
dec
adc
jle
dec
and
jl
es
int3
aam
xor
xor
sbb
push
add
xchg
adc
push
sbb
inc
xor
jnp
icebp
call
popf
rorb
andb
jmp
push
pop
fdivrs
jecxz
push
pop
ds
scas
cmp
mov
lret
push
add
pop
xor
and
rclb
bound
out
insl
daa
xor
insb
ss
inc
iret
jns
xor
shld
out
popl
insb
mov
inc
stos
jns
data16
hlt
test
xlat
fstl
in
dec
shll
loop
in
dec
clc
push
outsb
test
hlt
xor
inc
xchg
in
mov
mov
jnp
xchg
jmp
cmpsb
jne
push
divb
adc
push
scas
cmp
loop
lret
cmp
aas
sbb
cmp
addr16
sbb
jp
or
cvtdq2ps
das
cs
xchg
inc
add
adc
jbe
lahf
or
bnd
xchg
adc
or
scas
ss
xor
pusha
arpl
push
push
push
popf
push
adc
dec
jnp
loopne
xor
mov
add
add
nop
in
jge
lock
rcrb
lahf
nop
mov
xorb
popa
pop
imul
popa
xchg
fsubl
sub
add
popa
aas
shlb
roll
cwtl
insl
xor
call
xor
cmpsl
fdivr
scas
ja
pop
add
mov
sahf
jb
into
xchg
add
fs
dec
jle
lea
dec
cld
ss
cmp
mov
and
aaa
push
xor
push
bound
shl
gs
call
push
adc
mov
movsb
or
leave
shr
mov
cmp
adc
scas
push
jle
push
xor
flds
lock
mov
push
add
pop
cmpl
ror
sub
xchg
pop
test
mov
lahf
movsl
push
jns
jmp
jecxz
lea
dec
xchg
scas
sbb
fldenv
lcall
js
sbb
ss
mov
and
popf
shrb
fcoms
mov
icebp
jnp
adc
jmp
jnp
int3
loopne
jl
cmp
inc
stos
adc
imul
insl
hlt
jo
inc
js
sahf
jb
stos
int
ret
clc
enter
adc
addr16
pop
inc
rcrl
pop
inc
xchg
hlt
inc
pop
adc
pusha
pop
scas
push
adc
adc
lock
lret
rcr
jmp
mov
in
xchg
inc
push
sahf
imul
jo
data16
mov
das
cmp
mov
pop
stos
data16
in
mov
cmc
mov
loope
pop
cmp
inc
rorb
lret
cmp
popf
pop
pop
mov
movsl
icebp
aad
iret
mov
in
dec
cmp
sub
in
sarb
and
sub
cld
push
jae
dec
movsb
aaa
inc
std
call
out
pop
aas
xchg
and
test
sbb
stos
lock
inc
push
lret
xor
lock
adc
cmc
dec
mov
pop
push
cmpsb
aas
adc
mov
pop
push
adc
pop
aam
jbe
icebp
pop
movl
dec
jb
push
pop
mov
pop
out
mov
lods
cmp
loop
das
dec
scas
sarl
into
push
je
mov
sbb
fisttps
dec
push
mov
push
mov
push
fmuls
mov
push
sub
mov
push
sub
sti
out
jg
inc
call
jmp
roll
cmp
sub
popf
jle
fwait
sub
in
hlt
js
shlb
js
mov
sti
call
dec
test
cmpsl
andb
popf
sahf
bound
push
xchg
adc
push
cs
movsb
mov
stos
add
pop
insb
push
les
sbb
int3
cwtl
xchg
and
cmp
test
adc
daa
ds
jo
push
and
fsts
test
loop
rcrb
cmp
in
loopne
pop
add
inc
insb
add
sub
dec
sbb
add
mov
cmpsl
xchg
jo
xchg
jge
movl
ret
push
scas
mov
xchg
adc
test
shlb
push
mov
dec
mov
mov
jo
sub
pusha
into
sub
andb
add
sbb
ret
sbb
out
ss
inc
pop
dec
add
insb
cmc
jns
and
mov
idivl
add
pop
push
loope
aas
insl
push
xchg
or
mov
ret
ficomps
or
inc
roll
or
push
pop
cmpsb
test
jg
cmp
lcall
jle
push
imul
lods
xchg
push
add
pop
ret
ds
mov
push
enter
mov
and
adc
or
mov
repnz
mov
pop
xlat
pop
popa
lcall
clc
cwtl
adc
lods
fwait
pop
inc
or
je
ja
fstpt
aam
idivl
dec
movsl
add
inc
jae
xor
aaa
std
mov
loop
ljmp
dec
mov
mov
test
xchg
dec
jmp
pusha
push
leave
add
mov
sti
cmp
push
jbe
scas
xor
test
movups
ret
popf
xchg
cmp
out
inc
mov
push
jl
out
mov
jge
dec
push
dec
push
or
pusha
push
cmpl
call
pop
das
ret
push
rorb
das
or
popf
xor
mov
or
mov
loopne
cmpsl
or
adc
aad
ret
test
rcrl
frstor
xor
mov
sahf
xchg
incb
lods
sbb
pop
push
pop
push
dec
add
adc
mov
iret
mov
movsb
shrb
mov
dec
inc
ret
lods
cld
aas
lret
in
shlb
lret
lret
fwait
and
ja
loopne
stos
jg
pop
inc
clc
push
pusha
sbb
jns
mov
not
enter
push
inc
sbb
insb
enter
fs
or
mov
mov
lock
pcmpeqb
in
xchg
xchg
xor
insb
cmp
jp
ljmp
mov
mov
out
or
lret
leave
pop
cli
jecxz
inc
inc
fisttps
sub
lret
imul
ret
mulb
jnp
or
cmc
xchg
repnz
data16
mov
push
ja
inc
idivb
les
xlat
jg
in
dec
aaa
in
add
fsubl
mov
pop
mov
aam
and
hlt
pushf
xchg
mov
insb
repz
add
test
push
xor
sbb
loop
jecxz
sbb
sub
insb
sub
mov
mov
out
mov
xor
cli
inc
test
mov
dec
dec
mov
mov
or
cld
mov
jle
nop
dec
scas
pop
mov
daa
cmpsl
je
clc
push
push
mov
xchg
outsb
fnstcw
sub
fidivl
adc
ds
and
ror
xchg
adc
ret
fimull
call
jbe
xor
sti
push
or
mov
outsl
jmp
add
daa
xchg
push
xor
cmpsl
aaa
push
int3
push
dec
mov
movsl
test
add
pop
sub
addr16
sbb
fwait
out
jl
mov
daa
out
jb
loop
int3
pop
sbb
cmc
add
shll
ljmp
jb
add
andb
lcall
leave
push
xor
add
or
cmpsb
rorl
insb
enter
popa
test
xor
fmuls
out
push
fdivs
and
aaa
inc
loopne
sahf
pop
dec
adc
cmp
add
mov
push
jns
xchg
xlat
dec
mov
mov
inc
jbe
push
ret
dec
lods
cmpsb
les
mov
dec
enter
jb
in
xchg
and
dec
test
aas
outsb
data16
je
repz
add
dec
rclb
scas
sahf
je
mov
mov
out
fidivrs
mov
insl
shlb
sbb
lods
out
mov
shll
fdivs
movsl
xchg
sbb
mov
stc
fisttpl
mov
inc
and
pop
imul
mov
sub
sub
testl
js
mov
ds
jl
addr16
out
adc
int3
pushf
push
in
ja
adc
and
sbb
frstor
pop
clc
sbb
cmpsb
popl
jns
xor
mov
xchg
mov
mov
cmp
enter
push
pop
mov
in
jnp
xor
cs
lcall
lret
xor
sbb
push
stos
test
mov
ret
or
icebp
outsl
add
loop
adc
jl
andb
sti
lcall
cli
push
cld
in
out
mov
jnp
mov
pop
mov
inc
int
stos
adc
addl
aas
adc
mov
or
jge
leave
xlat
stos
cwtl
mov
stos
sbbl
mov
add
or
xor
mov
pop
jns
incl
jo
insl
pop
mov
add
aaa
stc
and
inc
repnz
fldt
ret
sub
mov
fisttpl
jns
cld
pushf
fmulp
dec
inc
mov
xchg
mov
es
xor
gs
sub
sub
pop
inc
jge
ds
pop
popa
shll
bound
test
mov
jp
punpckhbw
aas
lock
ja
orb
lret
or
cwtl
rclb
test
jns
and
add
loope
ffree
fists
dec
in
aam
mov
ret
div
shrb
cwtl
addr16
xor
dec
push
pop
pusha
loopne
notb
jl
gs
dec
push
lods
test
enterw
out
cmc
leave
or
sbbb
mov
ljmp
pusha
xor
lods
cmpsl
mov
xor
je
jo
psubsw
testl
and
lret
cmpsb
aaa
int3
aam
jmp
pop
leave
ljmp
fcomp
xor
mov
scas
aaa
popa
ljmp
repnz
aaa
xor
mov
sbb
loop
pop
clc
sub
xchg
in
push
inc
test
cmc
add
lahf
mov
mov
push
inc
pop
or
xor
orl
lcall
flds
lds
push
dec
xor
rorl
into
insl
jp
push
fsubs
and
in
pop
arpl
dec
inc
aas
pop
dec
test
mov
test
jns
xor
out
imul
or
sub
icebp
outsb
jnp
lds
ffree
inc
and
lds
clc
push
lret
mov
jle
clc
aas
and
mov
add
in
mov
or
imull
push
dec
jno
test
lods
js
pop
imul
dec
mov
lret
lret
lock
lret
lcall
adc
in
int3
insl
mov
rolb
add
repnz
or
test
push
nop
push
stos
inc
test
in
andb
aas
jecxz
sub
mov
adc
mov
sbb
lret
sub
lea
xlat
in
mov
int3
mov
mov
pop
leave
jns
cmp
outsl
ret
mov
lahf
or
imul
sub
les
dec
mov
cltd
shlb
mov
mov
push
imul
cmp
popa
pop
popa
rolb
dec
nop
pusha
mov
and
push
add
or
andb
scas
enter
sub
dec
inc
cwtl
lret
push
xor
sub
sbb
push
aaa
sub
pushf
pop
pop
in
cmp
aas
ds
dec
add
mov
stc
jo
xor
shl
cmpsb
sbb
sub
mov
dec
leave
pop
xor
cmc
lds
stos
jecxz
and
shrb
dec
lods
ret
nop
testl
add
scas
push
cmc
aas
xchg
je
stos
lret
decl
dec
fxtract
aas
outsb
aad
dec
fnstenv
jp
xor
rcrb
sbbl
sub
fisubrs
pop
out
cmp
jbe
adc
push
mov
adc
xchg
ljmp
insl
out
imul
xor
cmp
daa
add
xor
xor
mov
or
adc
dec
pop
and
sbb
cwtl
push
insl
scas
mov
mov
fcmovbe
out
insb
inc
jno
lea
xchg
sbb
mov
inc
mov
sbb
repz
scas
je
jnp
popf
add
xchg
movsb
or
shlb
inc
cmp
jb
push
mov
sbbl
xor
aad
push
lea
jmp
fldenv
fisttpl
shr
bound
inc
mov
push
mov
dec
enter
movb
pop
xchg
xchg
mov
mov
or
cmp
movsb
iret
jl
out
jp
xchg
sbb
or
mov
mov
and
cmpsb
loop
jnp
stos
iret
or
insl
jnp
push
xchg
in
lds
test
mov
loopne
pop
fdivrs
in
xchg
xor
jae
jmp
in
fs
sbb
fimuls
cmp
adc
iret
das
mov
stos
mov
movsb
mov
pop
or
imul
inc
divb
inc
push
gs
iret
fisttpll
sub
daa
sahf
cmp
bnd
jbe
idiv
push
mov
imul
pop
shll
push
jb,pt
lcall
and
gs
and
loop
test
imul
xchg
iret
fistpll
int
add
pop
sbb
test
adc
fmulp
inc
adc
push
ja
jo
mov
add
jg
test
mov
lcall
mov
popa
adc
incb
das
or
in
adc
cmp
lock
xchg
push
into
out
push
std
xor
add
cs
xor
jge
and
ficoms
and
jns
repz
rcl
sbbl
xchg
cmpl
lret
or
push
push
outsb
cmp
mov
xor
dec
sub
mov
enter
push
adc
rcll
mov
cmp
insb
cmc
xchg
mov
dec
pop
daa
push
scas
add
dec
lret
or
scas
rolb
and
xor
jo
mov
movsb
sub
xchg
ret
hlt
stos
shlb
ret
add
inc
cmp
mov
adc
jmp
ja
dec
out
stos
loopne
pop
or
cmp
push
test
sub
and
xchg
mov
inc
add
jecxz
js
cs
sub
or
fmull
cmp
pushf
adc
xchg
out
ljmp
ret
stos
movsl
into
dec
in
arpl
daa
dec
xchg
xor
scas
sti
adc
jecxz
in
xchg
sub
pop
imul
push
adc
mov
enter
jmp
fisttpl
aam
adc
cli
pop
icebp
in
push
dec
movsb
insl
and
rcr
fnsave
repz
sarb
mov
mov
mov
and
or
sub
sarb
xor
mov
scas
sbb
push
fldenv
and
jno
cmp
shrb
sbb
les
insb
or
je
mov
or
mov
clc
adc
push
dec
adc
loopne
cli
push
insl
fldcw
imul
add
mov
xchg
adcl
es
mov
data16
sbb
push
mov
in
ret
mov
jns
mov
add
xchg
or
ljmp
mov
popf
in
les
push
sub
cmp
sti
sbb
adc
sub
fwait
and
cs
test
addl
sarb
mov
les
and
ficoms
shrl
inc
ret
repz
xchg
rolb
scas
lds
iret
jne
or
xor
sbb
add
stc
loopne
dec
sbb
fistpl
or
xchg
dec
les
aas
ss
dec
dec
xor
or
mov
and
and
cmp
sti
xor
out
aad
adc
sbb
cmp
sarl
fs
jb
xchg
aaa
inc
push
xchg
popa
mov
push
add
inc
xchg
xchg
cmp
es
or
fimuls
lret
xchg
sahf
xor
call
push
push
cmp
push
arpl
mov
pop
inc
inc
test
adc
jno
mov
push
cltd
jb
clc
adc
xchg
jl
or
add
pop
je
push
push
sub
pusha
mov
in
cmp
mov
ds
rcr
jl
adc
ds
rcrb
shrb
cmp
repnz
xor
sub
ret
xchg
stos
or
inc
popa
fsubrs
jae
and
cmc
mov
bound
pop
push
rclb
inc
cmc
in
idivb
and
push
mov
repnz
jno
jbe
nop
scas
movsl
push
and
movsl
push
pop
dec
adc
sub
adc
mov
inc
popf
rcl
mov
js
in
or
xchg
clc
fildll
xchg
jecxz
outsl
lock
xchg
addr16
movsl
insb
or
adc
cmp
lcall
rcll
les
mov
fidivl
xchg
arpl
jmp
adc
repnz
pop
push
mov
fcompl
lds
imulb
int3
out
pop
test
fcomps
call
int3
iret
jne
adc
and
cmpl
mov
ret
mov
jae
mov
jmp
popf
push
addl
lds
cmp
mov
or
das
and
gs
sub
popf
outsl
icebp
int
sub
addr16
icebp
dec
js
push
ret
dec
and
out
test
xor
ljmp
jmp
ret
adc
mov
mov
xchg
xchg
push
xor
mov
call
fs
push
lds
repz
xorb
lods
jbe
insl
mov
mov
in
mov
idivb
lcall
jmp
test
xchg
pop
stos
sub
divl
out
mov
cmpsb
and
cmp
or
xor
pop
or
aad
rclb
sub
adc
imull
mov
sbb
and
inc
lahf
loopne
inc
test
jb
jbe
mov
jg
jb
loope
aaa
pop
inc
aaa
or
and
cmp
aam
idivl
ljmp
pop
ljmp
adc
xchg
aad
cmp
sub
in
xlat
cli
mov
nop
test
cld
sti
and
add
xlat
or
flds
mov
cmpsb
cmc
in
jne
and
in
dec
adc
imul
mov
sub
stos
mov
faddl
test
es
and
mov
in
test
dec
repz
fiaddl
movsb
mov
stos
add
mov
scas
pop
jne
or
into
rolb
loopne
insb
movsl
mov
js
xchg
mov
loopne
imul
mov
pop
dec
shrb
sbb
adc
ja
lret
fsubrl
xchg
movsb
xchg
jmp
sbb
repnz
out
cmp
mov
das
pusha
mov
xlat
jg
xabort
xchg
cmp
adc
lea
add
jae
orl
loope
cmp
cmp
sbb
popa
mov
sbb
test
popa
imul
in
push
aas
or
rorl
xchg
daa
adc
cs
sub
sbb
ja
xlat
xchg
repnz
add
in
mov
xor
and
push
pushf
xor
dec
lock
fisubrs
mov
test
adcb
cmc
ss
push
cli
sarl
out
mov
jbe
pop
push
stos
mov
int
out
shlb
stos
movsb
mov
cmp
out
add
mov
jns
dec
cmp
out
cmp
adc
inc
adc
loope
mov
call
out
pop
mov
int
loop
ret
push
sbb
cmp
dec
scas
nop
pop
push
xor
nop
pop
lods
ljmp
lcall
mov
sub
push
rcr
push
inc
inc
add
aam
mov
lret
mov
pop
dec
sahf
fwait
push
xor
xchg
ljmp
jae
sahf
and
insb
out
mov
jae
adc
inc
cmp
inc
jns
idiv
ja
je
sbb
inc
sbb
sar
lea
movsl
cs
cmc
or
inc
xchg
data16
popf
lock
int3
lods
mov
std
in
and
dec
and
mov
dec
fcmovu
xor
sbb
rcll
gs
stos
pop
push
inc
or
jge
lahf
fcompl
mov
fldcw
or
dec
ja
push
xchg
add
and
mov
sahf
popf
int3
mov
pop
fnsave
xor
and
in
sub
cmp
pop
imul
mov
popf
and
sbb
ret
xchg
daa
sbb
pop
mov
lock
cmpsl
bound
mov
popl
nop
movsl
outsb
push
lret
lods
fsubrs
rcl
js
jno
ljmp
aam
scas
roll
rcr
jl
lock
sub
imul
mov
outsl
je
negb
or
ss
idivb
adc
and
and
lea
sub
aaa
decl
sbb
adc
sbb
or
hlt
out
xor
jle
pusha
in
push
and
xor
shl
lods
sub
outsl
cmc
jne
shl
ljmp
lret
scas
jne
fldt
sub
arpl
fistpll
mov
call
dec
popa
or
adc
cli
mov
and
mov
lret
in
mov
rol
jne
mov
and
jecxz
call
push
dec
cmpsb
imulb
test
and
popf
push
add
push
lock
hlt
in
jg
mov
aas
aam
xor
xor
mul
mov
mov
test
pop
int3
jmp
int
rolb
xor
fs
pop
negb
dec
lds
dec
pop
es
pop
mov
inc
push
mov
inc
push
daa
mov
xlat
call
and
push
sbb
shl
and
and
aas
push
jmp
push
les
lock
sub
sub
sbb
cmovnp
xor
clc
dec
sbb
adc
mov
lret
ja
mov
sbb
pop
incb
ljmp
in
jecxz
mov
mov
loope
test
test
ss
cld
sbb
sbb
aad
cmc
cmpsl
or
jp
shlb
out
in
loopne
stos
sti
in
cmpsl
push
ljmp
scas
sub
adc
hlt
jp
jecxz
mov
cltd
or
fwait
jbe
mov
js
ja
pop
sbb
ret
das
ja
js
or
mov
stc
shrb
outsl
in
jno
in
imul
mov
arpl
pop
ret
aam
dec
stos
inc
inc
jp
fdivrl
lcall
lods
repz
das
and
stos
xor
add
and
add
xor
out
adc
jo
mov
and
mov
sbb
ljmp
sbb
gs
data16
mov
stos
lret
adc
cli
pusha
clc
decb
ja
js
adc
ljmp
fsts
icebp
test
mov
and
or
cmp
push
push
shrl
cmp
repnz
adc
push
ds
mov
pop
out
add
lock
sbb
loope
rolw
int3
inc
mov
ljmp
arpl
shll
mov
nop
xchg
add
sub
pop
mov
shlb
addl
xor
push
xchg
mov
mov
xchg
int
ss
or
call
lods
jne
call
andb
std
xchg
fcomp
adc
insl
mov
add
adc
add
aas
rorl
loopne
sbb
test
aas
sub
or
bound
lods
and
or
push
pusha
add
mov
in
dec
ss
test
sbb
push
jno
pop
xchg
sbb
rcr
fwait
inc
pushf
lret
adc
aam
outsb
jo
cmpsb
push
dec
jl
scas
adc
sub
sbb
and
aam
adc
lcall
pmullw
add
nop
sbb
rcl
add
cmp
testl
sub
jne
fidivrs
loop
insb
jns
insl
movsl
xor
cmp
in
bound
cmpsl
or
movsb
and
jmp
xchg
jae
or
pop
jg
fistl
test
pushf
lock
lahf
ja
jae
mov
movb
mov
cmpsb
add
in
dec
outsl
test
mov
aad
adc
mov
das
jle
jecxz
mov
sbb
push
and
and
cmp
sub
in
cs
adc
cmpsb
or
xor
dec
mov
scas
mov
out
push
jg
insl
scas
in
sarl
mov
cmp
xor
jle
dec
jmp
jae
jp
test
out
inc
sub
clc
mov
shll
mov
cli
fstps
scas
imul
jne
pop
add
call
xchg
and
xchg
pop
xor
fdivr
icebp
push
das
pop
test
subl
jle
popa
lods
test
fstpl
lahf
cs
cmc
xor
mov
repz
es
test
xor
pusha
pop
aam
adcb
or
or
sbb
les
daa
mov
js
movsl
cmp
add
sbb
push
inc
and
icebp
mov
nop
aaa
add
inc
mov
nop
jl
gs
lods
push
fists
add
push
imul
int
lea
pop
out
in
cmp
into
cmp
movsl
in
popa
mov
lock
ljmp
inc
cmp
mov
ret
xchg
arpl
sbb
shll
or
loope
xorb
std
cmp
out
dec
aaa
inc
adc
mov
lods
out
add
filds
retw
out
outsb
pop
insl
add
push
inc
lahf
sbb
pusha
loope
cltd
in
ficoms
arpl
dec
popa
jecxz
popf
out
inc
popf
les
inc
mov
ljmp
push
sub
test
dec
les
sbb
push
stos
mov
pop
mov
mov
rorl
and
dec
sub
sarb
int3
mov
cmpsl
pusha
mov
icebp
pop
mov
xchg
mov
mov
int
and
mov
das
ja
push
int
cmp
sbb
mov
ja
inc
mov
lcall
mov
js
add
push
fistpl
push
cmp
or
sbb
hlt
mov
in
xchg
sub
adc
or
in
xchg
dec
imul
and
adc
xchg
or
pop
inc
sub
cmp
pop
jmp
push
fyl2xp1
jns
int3
dec
or
jne
popa
cmp
jo
push
jp
mov
jne
je
and
pop
sbb
das
sub
adc
je
test
addr16
imul
sbb
jns
push
or
shrb
pop
push
fsubl
das
out
jp
cmc
or
xchg
pop
xorb
dec
and
adc
xchg
fld
daa
rcrl
enter
adc
out
mov
fwait
sti
cli
add
and
push
jae
dec
add
popa
xor
or
xchg
popf
mov
add
pop
add
pop
aad
jmp
and
push
sbb
xor
test
adc
sbb
stc
xchg
jecxz
push
mov
frstor
adc
lret
rcrb
adc
jns
pop
sbb
pop
scas
out
cmpsl
sbb
or
sbb
xchg
or
test
jmp
fdivr
subb
jb
ja
cmp
sub
xchg
jle
sti
ljmp
fcoms
dec
xchg
rolb
cmc
dec
mov
pop
mov
push
push
sub
dec
sti
dec
fmulp
subl
loopne
sub
hlt
rolb
dec
inc
adc
xchg
mov
cmpsb
rolb
add
xor
fstl
repnz
jge
test
mov
mov
sub
cld
xchg
cs
fs
jg
xchg
jo
popl
fs
mov
pop
fucom
lret
call
cmp
mov
jecxz
push
rolb
mov
lock
jmp
andb
gs
sub
jb
ljmp
test
out
test
push
or
test
ret
adc
sbb
aas
pop
dec
push
inc
or
sub
outsl
lcall
mov
mov
fisttpl
mov
test
cmpl
push
mov
sbb
jmp
jno
mov
in
mov
dec
add
sbb
popa
and
pop
js
and
mov
pop
mov
dec
test
mov
into
lcall
aas
cmp
pop
in
xchg
sub
xchg
ds
loopne
cmp
nop
mov
or
aaa
xor
into
aas
int3
pop
add
pop
sarl
fnstenv
movsl
mov
sti
jns
add
jmp
push
ret
loope
out
sbb
cmp
lret
icebp
sbb
ret
cmpsl
add
xchg
iret
push
cmp
jb
dec
pop
add
adc
in
xchg
stos
dec
push
lahf
xchg
les
repz
ljmp
lds
shll
jg
pop
and
icebp
mov
xor
sub
rorl
dec
ret
neg
pop
jne
jmp
mov
cmp
jb
test
lods
inc
leave
jbe
out
shlb
mov
inc
ror
mov
data16
and
adc
outsb
cmp
call
in
fadds
jns
imul
repz
jge
ret
outsl
dec
mov
and
inc
push
pcmpeqb
lock
jge
jmp
in
dec
fsubrs
mov
mov
mov
adc
jecxz
pop
cmpb
adc
push
mov
add
cmpsb
int3
test
pop
fists
mov
mov
cli
jecxz
add
out
mov
push
scas
daa
sub
addl
test
or
psubusb
stos
enter
inc
mov
bnd
popf
add
pushf
cmp
xchg
or
clc
pop
sub
ds
gs
or
aas
jp
inc
inc
jmp
shll
sbb
ss
aaa
add
push
outsl
lock
jbe
mov
fstl
sub
fcomp
fwait
push
add
or
or
mov
add
pop
or
adc
call
push
out
dec
sub
push
xchg
loope
cmpsl
lods
mov
test
dec
andb
jo
inc
xlat
popa
pop
dec
add
arpl
sub
pushf
xchg
movsb
repz
pop
sub
jnp
loopne
xchg
popa
cli
jge
aaa
in
sub
int
lods
cmpsl
sub
xor
shll
mov
dec
add
out
ljmp
mov
mov
push
insb
jmp
sarl
outsl
and
sahf
data16
ja
pop
dec
jno
in
xchg
cmp
std
sbb
or
loopne
sbb
icebp
mov
xchg
sub
je
lcall
sub
mov
popf
jecxz
cld
gs
mov
inc
mov
mov
jb
push
pop
cltd
xor
jecxz
sub
fdivl
mov
xor
popa
int
sahf
test
mov
fstpl
fdivl
insb
inc
jnp
inc
or
lcall
out
or
outsl
popa
inc
je
daa
outsb
mov
and
inc
insl
push
js
popf
and
xchg
pop
out
test
ficoml
mov
call
icebp
repz
adc
icebp
popa
and
icebp
inc
das
fcmove
lods
shll
add
push
test
les
mov
and
leave
roll
pop
mov
les
xchg
sahf
iret
jmp
test
pop
cs
fstpl
cmpsl
clc
pop
mov
stos
pushf
pop
pop
push
add
sbb
push
mov
jo
orb
dec
out
inc
stos
adcl
imul
ljmp
jl
stos
scas
ja
add
loop
jecxz
inc
cmpsb
dec
sub
lds
out
xchg
ret
push
push
mov
test
xchg
xchg
int
or
addr16
sbb
sbb
repnz
repnz
xchg
and
mov
or
dec
fnstcw
jae
cmpsb
insl
pop
in
ficoml
and
sti
test
push
mov
mov
push
sub
jbe
jno
inc
stos
lret
sahf
dec
sbb
orb
cs
fisubrl
ja
mov
dec
xor
mov
into
sub
pop
arpl
jge
fmull
loope
pop
scas
xchg
scas
sbb
push
mov
je
inc
cmpsb
xor
sub
mov
jne
aad
lahf
in
pop
sub
dec
lds
mov
mov
in
xchg
test
xchg
push
enter
xor
and
mov
or
push
hlt
mov
jecxz
sbb
xchg
push
sbb
leave
cmpb
icebp
scas
or
data16
in
not
cwtl
lret
push
sub
push
ljmp
sub
lcall
xor
sbb
es
adc
mov
lods
bound
aad
mov
mov
push
test
cwtl
rcll
scas
xchg
jmp
push
pusha
push
shlb
rol
in
pop
push
out
push
fwait
mov
lcall
mov
int
outsl
push
xchg
fstps
jecxz
lods
cmp
xchg
push
scas
js
shl
jmp
mov
mov
jo
and
call
test
sbbl
sbb
push
and
call
clc
dec
shrb
xchg
inc
iret
loop
pop
jl
add
fcomp
nop
andl
or
push
ret
lahf
cmp
outsl
lock
push
xchg
lods
xlat
inc
lret
push
scas
int
int
test
cmp
sbb
push
je
inc
call
imul
lods
dec
cmpsl
pop
mov
stos
push
lds
rorb
adc
orl
leave
shrl
pop
xor
or
sbbb
lret
lret
dec
push
mov
xchg
mov
push
jge
jno
lret
add
mov
and
xchg
cmp
and
push
fmul
jmp
scas
js
jbe
add
in
popf
xchg
pop
icebp
movsb
dec
jnp
jl
aad
pop
in
xor
std
mov
sbb
xchg
loope
add
lods
test
clc
testb
dec
test
push
jge
ficoml
andb
or
cmp
testb
fucom
and
repnz
cmpw
cmp
inc
shl
push
repz
pop
cld
iret
mov
movsl
pop
into
into
pop
andb
sub
pop
das
inc
call
mov
xor
das
fcmovb
pop
push
jne
clc
mov
jg
or
daa
xchg
stos
data16
push
jmp
stos
dec
push
inc
enter
mov
bound
jle
jbe
fisubs
cltd
adc
dec
ss
into
ret
and
sub
sbb
mov
mov
mov
arpl
mov
dec
push
pushf
jnp
movsl
sahf
cltd
dec
mov
add
xor
or
and
inc
ja
mov
dec
in
andb
mov
sub
aad
cmp
adc
xlat
jb
ljmp
xchg
lret
jns
and
fcoms
scas
repnz
and
in
pop
or
sub
leave
mov
mov
mov
mov
js
pmaddwd
nop
jae
xor
xchg
and
mov
xor
push
xchg
xchg
jmp
or
mov
mov
into
repz
sub
lcall
pop
divb
loope
push
xor
ss
push
sbb
jb
repnz
lds
pop
int
popa
sbb
lret
pop
pushf
adc
jp
jg
inc
mov
pusha
gs
pop
xchg
push
aas
js
test
or
out
fs
iret
mov
cmp
ret
movsb
and
lcall
je
divl
repnz
clc
push
xchg
mov
cmc
and
loop
test
sarl
xchg
xlat
xchg
jno
mov
ja
xchg
int
xchg
arpl
js
sbb
sub
aad
lret
push
pop
add
call
pop
mov
push
cmp
mov
je
jge
and
aas
and
inc
or
mov
add
ds
or
loope
scas
cmp
call
incb
add
leave
jge
andl
ret
mov
sbb
rol
fwait
jno
adc
push
jnp
sbb
cwtl
cwtl
lret
aad
das
mov
sbb
cwtl
jb
sti
outsl
sub
call
sbb
xchg
dec
decl
adc
adc
out
jbe
push
das
inc
pushf
lahf
add
adc
mov
xchg
inc
dec
xchg
andl
pop
add
arpl
stos
jae
pop
movl
lcall
ficoms
or
ds
je,pn
in
clc
push
dec
sbb
pop
test
pushf
mov
daa
lods
sbb
push
dec
mov
or
cmp
xor
cmp
dec
pop
sub
xchg
or
pop
adc
mov
lods
loope
push
push
xchg
pop
nop
add
sahf
fs
and
push
popl
jp
into
xchg
xchg
push
push
adc
add
das
and
loope
pop
cs
xchg
insb
es
xor
inc
sbb
es
push
or
pushf
stos
xchg
or
lods
cmc
repnz
ljmp
andb
fistps
aam
mov
pop
pop
sub
xchg
les
sahf
and
into
push
out
jmp
lea
adc
cmp
jno
xchg
shll
and
mov
fmuls
es
stc
scas
fnstcw
jo
or
aad
jle
das
and
mov
jb
mov
sbb
or
cmp
pop
imul
inc
lods
or
or
mov
aaa
sub
push
movsb
bound
adc
shl
xchg
mov
hlt
sbb
sub
rorl
jle
xchg
or
mov
test
clc
push
sub
add
dec
aad
leave
andb
add
sbb
xchg
inc
adc
movsl
add
pop
lahf
jp
xor
movsb
out
lds
mov
pushf
push
mov
outsb
and
dec
sti
out
popa
sub
push
push
shrl
sbb
pushf
pop
inc
inc
rcrb
fstl
cld
sbb
adc
cwtl
cmp
xor
adc
sub
das
add
mov
jbe
loop
xchg
push
xor
jge
stos
add
mov
push
jo
cmpsl
rolb
xor
out
push
pop
pusha
adc
out
xchg
ficompl
mov
in
xorl
adc
nop
inc
hlt
iret
ret
aad
push
and
push
jnp
bound
cmp
dec
adc
push
popa
repz
dec
dec
push
xchg
sbb
lret
lds
lds
decl
jle
mov
stos
movsl
xchg
xor
mov
mov
cltd
pop
or
divl
adc
negl
jno
jae
lret
sahf
sbb
inc
mov
subl
mov
fs
rclb
mov
insb
jecxz
fmul
in
loopne
loope
xlat
jp
nop
adc
addr16
mov
subb
ret
addr16
fisttps
xlat
rcr
je
push
jmp
inc
rcrb
xor
lcall
aad
popf
jecxz
rcrb
addr16
cmpsl
pop
dec
mov
inc
aas
or
std
mov
xlat
in
mov
popa
loope
mov
notb
adc
in
loop
loop
stos
into
aas
leave
popf
pop
in
aad
stos
adcb
idivl
outsb
inc
stc
in
arpl
in
incl
jle
jno
mov
mov
fs
lahf
das
in
and
push
dec
adcb
jmp
push
mov
cwtl
leave
scas
fs
mov
mov
mov
sub
pop
dec
js
cmp
mov
jae
cmc
cmp
rorl
jo
mov
push
inc
xchg
xchg
sbb
and
int
das
mov
out
or
out
and
popf
mov
loope
inc
dec
es
mov
push
pushf
test
inc
mov
and
adc
push
inc
imul
dec
pop
scas
je
xchg
into
loop
xchg
sti
push
push
cmp
add
call
rclb
and
xor
mov
cltd
xchg
imul
jl
jae
mov
in
and
inc
call
adc
xchg
addb
int3
cmp
xor
bound
out
and
das
inc
imul
leave
sub
xchg
mov
fwait
and
push
cmp
insb
insl
lock
sbb
js
and
jle
sub
incl
clc
icebp
push
pop
in
inc
decl
add
imul
outsl
xchg
push
mov
jne
pop
push
adc
fmull
hlt
dec
jge
add
xchg
xor
aaa
shll
aad
cltd
or
mov
lcall
popf
popf
das
out
xchg
xchg
stos
mov
arpl
notl
test
fs
shrl
push
cmpsl
lcall
jmp
and
repz
shlb
jmp
xchg
jl
adc
cmpsl
cltd
sbb
iret
dec
test
jecxz
and
je
lret
jmp
sahf
dec
mov
mov
out
test
mov
jp
mov
cmovns
pop
in
jne
mov
push
cmp
add
shrl
mov
ret
leave
lds
xchg
lcall
stc
dec
push
sub
fdivrl
test
xorl
add
sub
das
mov
push
out
push
movsl
jne
test
lods
jmpw
cld
cmp
ret
or
dec
cltd
adc
push
adc
divb
test
scas
into
jl
loopne
divl
inc
add
jp
ret
pop
jle
loopne
push
push
out
add
and
repnz
loopne
fnsave
add
cwtl
jns
push
outsb
xor
cmovo
push
push
loope
xor
loope
leave
jns
dec
in
js
das
or
dec
jae
jmp
mov
idivl
fwait
and
into
in
adc
inc
sub
xchg
ja
adc
mov
insl
pop
inc
lahf
lret
inc
in
lcall
cltd
enter
push
ffreep
pop
das
pusha
jno
xchg
xchg
sbb
stos
cmp
xchg
cmp
push
imull
dec
stos
sub
loopne
mov
mov
xchg
mov
aaa
xchg
mov
add
mov
imul
adc
adc
cmp
jns
inc
filds
mov
ss
cmp
push
lds
aam
adc
sbb
pop
insb
cltd
push
lahf
scas
sub
inc
and
inc
mov
push
incl
mov
in
jp
push
testb
and
xor
cmp
js
enter
jp
in
outsl
lock
inc
out
ds
adc
xor
hlt
dec
jne
pop
stc
fsub
bnd
cmpl
push
filds
xchg
xor
or
or
ror
sub
add
cli
pop
xchg
mov
ret
mov
cltd
lods
xchg
and
cmpsl
cmpsl
daa
aam
or
xor
lock
pop
xor
cmp
mov
shll
mov
mov
xchg
xchg
outsb
and
adc
popf
push
insb
pusha
sbb
add
andb
or
addr16
pop
lods
jo
out
mov
in
hlt
fcom
sbb
out
sub
out
sub
ret
sub
int3
daa
push
js
mov
or
xchg
stos
pop
aaa
test
mov
ja
repz
jae
mov
lcall
xor
adc
pop
adc
and
leave
cltd
cmp
xchg
inc
push
sbb
or
push
movsb
idivb
dec
adc
cmp
jns
jnp
inc
movsb
int
repnz
into
pop
fdiv
outsl
movsl
inc
imul
push
sbb
aas
es
mov
push
jbe
pop
push
notl
sbb
fisttpl
in
mov
mov
mov
insl
fstpl
test
jns
mov
inc
rorb
cli
pusha
cli
aad
and
sub
xor
mov
or
mov
leave
pop
shll
cli
mov
fwait
rolb
mov
imul
das
and
pop
and
es
mov
sub
and
dec
sbb
jbe
jno
dec
mov
push
ret
test
or
movsb
push
sbb
push
pop
imul
outsb
fnstsw
scas
rorw
mov
les
adcb
dec
mov
lcall
mov
sub
jo
push
ja
adc
ficomps
or
cwtl
or
cmpsb
lods
sub
test
cwtl
xorb
orl
push
mov
fucomip
in
sbbl
stos
cmp
mov
sahf
xchg
mov
movsb
mov
dec
mov
jle
sahf
shrl
arpl
lods
in
mov
mov
jne
in
sub
movsl
out
pop
add
in
and
xchg
shlb
or
call
movsl
mov
mov
push
mov
jbe
xor
imul
dec
pop
cmp
ret
sub
cmp
mov
pop
es
fldcw
shrl
in
gs
and
push
es
mov
andb
inc
lods
movb
in
stos
and
xor
dec
dec
pop
outsb
mov
mov
adc
xchg
fidivl
mov
enter
push
inc
pop
mov
dec
and
sbb
xor
inc
gs
shl
and
mov
js
in
es
push
fisubrl
pop
jge
movsl
leave
sub
out
or
dec
cli
aam
outsl
cmp
rorb
and
mov
adc
adc
jl
out
sub
es
and
test
pop
loop
mov
and
and
jnp
mov
cmp
cmp
enter
or
adc
add
or
cmpsb
xor
and
in
aad
or
jnp
imul
gs
dec
cmp
add
ret
cmp
lret
jecxz
int3
repnz
shrl
push
insl
sub
push
in
cmp
adc
mov
movsb
or
loop
out
movsl
mov
dec
ja
add
pop
jecxz
xchg
xor
add
mov
out
adc
pop
negl
push
jge
inc
stos
sub
popf
int
mov
sti
leave
mov
lds
push
mov
or
les
div
ljmp
cmp
cmp
add
and
jne
adc
add
jp
insl
pop
ss
pop
push
out
js
mov
sub
es
add
imul
pop
sbb
ret
xchg
cltd
aas
lock
ret
jb
dec
popa
test
insl
or
lea
outsl
std
addb
pop
jnp
mov
mov
xor
dec
cmp
stc
xor
pop
xor
popa
scas
fwait
add
push
fisubrl
sub
mov
push
std
stos
push
and
cltd
mov
ret
mov
and
mov
sub
pop
repz
mov
test
mov
and
in
sub
xchg
xor
mulb
sahf
mov
sub
leave
sbb
inc
rcll
leave
push
jb
xor
addr16
aaa
inc
mov
inc
lods
sbb
stos
pusha
adc
add
scas
lock
ja
push
arpl
fwait
rclb
xor
rcl
mov
aad
ret
pop
roll
bound
cmpl
and
loop
testl
mov
clc
add
rorl
jmp
stos
pop
shll
adc
in
aam
cwtl
dec
fstpt
inc
mov
dec
cmp
call
inc
lods
test
inc
xchg
push
cmc
or
dec
shrl
outsb
jmp
sarl
icebp
xor
repnz
mov
cld
sub
mov
add
xchg
jl
mov
xchg
sti
mov
arpl
mov
sbb
inc
cmp
loope
mov
and
add
cmc
add
push
in
sti
mov
xor
and
icebp
lret
inc
loop
fsts
cmp
or
cltd
add
pop
mov
cmp
adc
les
into
pop
fcoml
pop
ja
cmp
icebp
mov
je
mov
or
mov
and
sub
sub
movsb
aas
ljmp
push
ljmp
sub
repz
push
loopne
xchg
aas
jg
jmp
pop
xor
jbe
aas
repnz
cmp
inc
mov
stc
pushf
lahf
or
jmp
and
movsl
out
sub
sbb
cmp
cmp
shll
push
adc
mov
ja
xor
push
inc
push
xor
pop
sub
stos
sbb
inc
das
pop
cmpsl
in
and
jnp
mov
mov
sbb
xor
mov
mov
pop
je
xchg
jne
mov
xor
gs
cltd
pop
mov
xchg
test
sub
loopne
int
jns
mov
aad
jbe
mov
and
lods
mov
sub
int
je
mov
pop
dec
das
arpl
mov
pushf
xor
sbb
fistps
fcmovnb
inc
int
or
stos
popf
xchg
iret
sbb
das
xor
andl
scas
sbb
out
sbb
and
mov
inc
push
loopne
pop
pop
test
rcrl
dec
cs
mov
cmp
push
dec
ret
mov
pop
jmp
movsl
cltd
adc
jmp
sbb
push
xlat
in
and
int
jl
mov
pusha
mull
mov
jbe
xchg
les
mov
push
sbb
dec
xor
jecxz
jae
jo
mov
getsec
cmpsl
mov
or
dec
jne
bound
lds
add
out
clc
in
into
clc
lds
fidivrs
jb
shrb
test
and
cltd
test
sub
popf
repnz
dec
stos
lcall
or
sbb
mov
inc
test
pop
mov
subl
arpl
test
imul
das
je
adc
rcll
out
pop
adc
mov
mov
add
push
das
stos
enter
js,pt
ds
add
or
adc
pop
pop
xchg
sbb
std
lahf
insb
repnz
cs
fcompl
cmpsb
nop
jnp
outsl
out
rol
clc
or
outsl
or
in
addr16
dec
stos
mov
jne
popf
jecxz
cmp
aas
xor
sarb
dec
jno
jno
jmp
loopne
mov
push
add
cmp
hlt
iret
pushf
je
dec
cwtl
ss
shr
mov
repnz
aam
sbb
lahf
fnstenv
test
pop
int3
push
dec
push
fdivrs
add
shrb
rorl
mov
lahf
repz
pop
or
leave
sub
sbb
adc
xchg
sub
sub
in
hlt
sbb
mov
ja
and
icebp
into
jnp
arpl
add
lock
sahf
mov
cmp
into
jge
aaa
mov
dec
inc
jge
mov
mov
insl
mov
int3
adc
out
mov
xchg
into
outsb
xlat
inc
pop
mov
sub
icebp
jg
mov
push
inc
hlt
mul
adc
xchg
pop
mov
mov
adc
iret
cmpsb
pop
add
jo
cld
jnp
push
enter
das
sbb
mov
xor
pop
cld
call
std
mov
xchg
testb
or
fisubs
dec
sub
pop
jae
pop
insb
fwait
add
xchg
outsl
xlat
xchg
mov
adc
and
jle
int
dec
mov
lock
imul
es
iret
adc
push
mov
jno
dec
leave
hlt
xchg
mov
fsubrp
or
xlat
pop
sti
xlat
and
lods
js
nop
ja
sbb
repnz
std
add
mul
movl
je
or
xor
daa
sahf
sbb
and
pop
mov
data16
jnp
mov
test
mov
test
mov
adc
mov
lds
notb
pop
sbb
sub
cli
or
cmp
add
fwait
xor
pop
adcl
add
jae
dec
fstl
add
add
adc
jbe
jmp
push
aas
clc
std
test
adc
add
shll
mov
and
sbb
or
xchg
cltd
sub
xchg
das
sbb
mull
sbb
push
mov
fwait
sbb
int
or
stc
cwtl
in
xor
cltd
lret
pop
adc
rclb
lret
adc
ror
lahf
mov
and
movsl
loop
or
xchg
xor
inc
xchg
mov
jns
cmp
ret
insb
xor
jo
adc
or
daa
cmpsl
or
push
repz
mov
inc
das
add
inc
push
sub
jecxz
push
or
adc
or
jmp
outsl
jns
xchg
and
mov
mov
xchg
mov
sarl
cmp
sarl
repnz
sbb
pushf
inc
and
mov
insl
and
and
jl
cmp
movsb
fiaddl
sbb
fnstenv
cmp
outsb
push
dec
pop
xor
in
pop
stos
stos
and
xchg
sbb
and
sub
xchg
and
cltd
loop
mov
jno
xchg
subb
les
mov
mov
xor
pushf
out
stc
dec
out
fsubl
je
mov
lea
nop
stc
in
and
mov
fwait
dec
mov
sbb
test
mov
icebp
push
test
jne
push
pop
aaa
jb
dec
fdivr
and
repnz
in
aad
fwait
sbb
jo
push
or
out
push
sahf
pop
es
push
mov
pop
je
in
subps
ds
fisubs
cmp
jns
cmp
push
push
idivl
pop
shlb
gs
xor
cmp
ret
ljmp
adc
pop
enter
daa
sub
lcall
inc
ljmp
cli
fxch
xor
mov
cld
or
xchg
jp
jle
cmp
inc
mov
cmp
sub
push
xor
add
jge
test
sub
sub
adcl
xor
mov
push
test
icebp
repz
mov
pusha
in
aaa
xor
pop
pop
ret
outsb
das
and
or
mov
aaa
test
inc
stos
sub
into
and
xchg
cli
add
scas
xor
jle
enter
sbb
dec
pop
push
cmp
sbbb
lds
int3
rcrl
cwtl
out
dec
shlb
xchg
loop
stos
test
movsl
aas
mov
movsb
mov
add
xchg
insb
ds
je
jo
sbb
or
pop
ret
push
add
push
cmc
sbb
adc
out
int3
fldpi
cli
call
loope
sub
shrl
lods
negb
xchg
xchg
aam
and
push
fnsave
test
dec
add
push
cltd
add
clc
insb
repnz
std
imul
stos
sarb
repz
mov
movsl
mov
mov
xor
dec
std
mov
or
idiv
repnz
pushf
or
and
jmp
jo
popa
and
scas
inc
mov
pushf
add
inc
rcl
pop
aas
cs
lods
test
and
jp
scas
sub
push
mov
add
and
xchg
dec
lock
aad
out
push
pop
gs
inc
outsl
into
and
scas
das
dec
add
xor
clc
inc
jmp
sbb
icebp
mov
adc
push
hlt
mov
cmp
mov
dec
mov
arpl
and
adc
ret
pop
test
mov
and
mov
jae
pop
dec
in
adc
or
cmpsb
cmc
pop
lods
outsb
push
leave
jbe,pt
fmulp
mov
shlb
rcr
mov
dec
movb
popf
mov
hlt
jnp
jge
mov
fcmovu
add
scas
movsl
mov
xor
add
xchg
mov
in
lret
xchg
jmp
mov
dec
cs
or
test
aad
sub
in
pop
fs
and
rdtsc
jae
loop
sbb
adc
lock
enter
enter
out
leave
and
or
fxch
pop
xor
cs
cld
cmpsl
cwtl
mov
jno,pt
sbb
sbb
pop
lahf
jo
xchg
fildl
push
mov
mov
in
scas
mov
movsb
imul
adc
lock
mov
pusha
mov
mov
and
xor
fadd
dec
add
ja
sahf
mov
mov
and
push
ficoms
push
xchg
mov
loop
mov
jae
pusha
xor
pop
cmp
jle
test
or
xchg
jle
pusha
pop
adc
outsb
sub
xor
jmp
or
lods
sbb
gs
aas
je
loopne
jbe
xor
adc
mov
jb
cmc
sbbb
sbb
jg
int3
xlat
pop
fwait
je
cmp
popa
subl
and
fisubl
call
mov
addl
add
call
insl
sahf
std
jge
mov
add
mov
adc
out
shl
push
insl
pop
xlat
sub
xchg
xchg
pop
incb
push
xchg
add
clc
mov
push
gs
or
mov
sbb
les
pop
adc
int
fcmove
aaa
add
sub
push
push
add
mov
lods
mov
movl
adcb
popf
lahf
jmp
fwait
cmpsb
pop
cmp
out
push
inc
or
subb
mov
outsl
ja
rcll
leave
test
or
jb
sbb
lahf
mov
push
xlat
and
jns
movsb
test
testb
cli
pushw
bound
adc
subl
push
push
pop
sbb
scas
in
leave
sub
adc
push
cmp
gs
dec
shl
stos
rclb
fdivrl
pop
cmp
adcl
cmc
jle
arpl
pop
inc
test
repnz
mov
out
aam
pushf
shlb
fldl
sbb
or
idivb
std
dec
push
push
and
xchg
jle
repz
pop
test
test
call
arpl
scas
inc
mov
out
xchg
jno
cmp
jnp
lcall
and
cld
sub
rorl
add
cmp
insb
dec
push
push
jnp
je
push
arpl
pop
loope
lods
popf
mov
in
sub
pop
mov
inc
cmpsb
cld
aad
jmp
xchg
jb
inc
sbb
lret
or
xor
add
jle
push
sub
xor
shr
dec
pop
xchg
popf
xchg
dec
push
or
adc
mov
sbb
sahf
arpl
sbb
fcompl
inc
and
jno
sub
daa
xorb
cld
jnp
add
sub
cmpw
mov
gs
or
lret
cli
adc
or
or
ss
in
dec
imul
lds
jecxz
add
jge
mov
outsb
xchg
data16
jle
dec
inc
mov
aam
push
mov
inc
cmpsb
adc
ds
es
mov
xor
dec
mov
fucom
xchg
cli
fstpl
rcl
push
xchg
imul
enter
call
mov
dec
movsb
cmp
in
mov
jb
jl
add
lfs
mov
sbb
jp
sbb
dec
ret
push
fdivrs
ret
mov
rorl
mov
pop
lahf
push
rep
popa
sub
mov
jmp
fldt
mov
adc
cs
imul
sub
dec
adc
mov
xor
adc
aam
dec
ret
xchg
push
and
xchg
and
push
jb
push
mov
dec
mov
jp
mov
sbb
movsl
sbb
jg
add
pop
mov
mov
cltd
mov
mulb
jmp
xchg
leave
sti
shrb
cld
fists
sub
leave
inc
dec
les
lds
xchg
dec
outsl
and
sub
inc
jae
sub
loopne
cmp
cmp
idiv
lods
lds
ret
mov
sbb
jns
jecxz
ret
test
mov
aas
mov
inc
rcll
mov
xchg
imul
pop
hlt
push
rorl
mov
xchg
addr16
jg
sub
cmp
pop
in
push
push
mov
and
inc
adcl
xor
or
lock
mov
jno
push
xlat
lcall
dec
add
leave
push
fadds
xor
pop
jns
mov
stc
push
xor
out
imul
out
mov
adc
or
add
cmp
fisttpl
cmc
mov
jbe
and
dec
or
mov
sub
insb
mov
imul
out
cmp
inc
push
jne
fcoml
mov
arpl
ds
inc
mov
cwtl
outsb
adc
pop
push
pusha
outsl
and
mov
es
jge
lock
dec
bound
dec
js
pop
jmp
sbb
xor
mulb
addr16
sbb
lock
dec
std
jmp
jo
push
add
dec
roll
pushf
mov
adc
test
jns
movsb
lock
scas
dec
repnz
xchg
sub
adc
jbe
enter
jno
mov
fadd
fstpt
pop
inc
sahf
dec
fnstenv
out
add
std
mov
in
scas
sbb
addb
fidivs
xchg
xchg
xchg
outsb
mov
cmc
dec
xchg
flds
mov
jbe
cmc
in
aaa
inc
cmpsb
jb
clc
fidivs
dec
lds
ret
pop
pop
sbb
mov
addr16
fstpt
xor
inc
imul
add
cmp
inc
mov
mov
mov
movsl
scas
aas
movsb
dec
mov
pop
adc
add
ljmp
mov
pop
insl
addr16
dec
cmp
push
add
mov
add
lahf
jl
cmpsl
or
add
add
or
sahf
or
jg
dec
imull
jg
cmpsl
popf
xor
test
sbb
aam
popa
pop
jge
insl
or
mov
pusha
jle
imul
subl
lods
pop
mov
mov
xlat
jmp
cwtl
data16
shlb
pop
xor
in
or
aas
icebp
aad
int3
shl
mov
aas
xor
and
inc
mov
mull
inc
mov
jp
dec
pop
nop
aas
or
sbb
pop
push
push
mov
adc
test
lods
out
in
mov
dec
aad
lods
and
jp
out
push
mov
mov
rcrb
mov
das
std
mov
inc
fisttpll
dec
xor
outsl
out
pop
push
popa
cmpsb
mov
push
sub
in
xchg
adc
mov
mov
pop
mov
sarb
pop
push
add
je
das
mov
js
repnz
push
mov
cmp
push
test
add
push
jmp
inc
incb
lret
sbb
ret
sub
insl
adc
je
sub
mov
lock
add
push
js
test
jl
jnp
pop
daa
out
mov
sbb
stc
push
and
shrb
push
popa
pop
jg
cwtl
in
out
insl
sub
cmp
movsl
adc
sub
push
pop
fistl
mov
rcll
punpcklbw
mov
ret
lret
scas
jle
js
loop
dec
mov
xchg
pusha
mov
shll
cmp
lcall
sbb
mov
push
xchg
leave
int3
daa
jge
jle
lds
pop
ret
xchg
sarb
sbb
loope
add
shrl
fimuls
mov
sti
lock
jecxz
or
mov
fsubs
or
cmp
adc
je
imul
push
mov
and
test
testl
jl
sbb
pusha
jl
dec
mov
jns
nop
test
xor
dec
in
es
in
imul
push
outsl
lock
fs
mov
inc
cmp
sbb
push
pop
mov
data16
jb
std
jb
mov
test
xchg
xchg
mov
jle
shlb
leave
push
cmpl
popa
or
mov
push
adc
add
in
sub
shlb
roll
push
cmpb
sar
dec
dec
les
push
loope
mov
repnz
mov
xor
daa
lock
int
xchg
fidivrs
aad
jp
sub
or
pop
ds
rcll
sub
loope
or
scas
xor
add
xchg
ds
sub
in
adc
cmp
jmp
inc
push
orb
mov
lret
add
ss
add
pop
cmp
pop
leave
inc
fldt
add
fsubl
push
add
inc
mov
mov
xchg
comiss
inc
and
push
lock
inc
fmul
xchg
dec
test
adcl
fucom
adc
ss
cmp
cmc
dec
out
xor
xchg
test
mov
notl
bound
in
ljmp
jmp
push
bound
das
rep
jmp
rclb
cmpsl
cmp
aas
push
jg
mov
xchg
mov
sbb
sub
xor
pop
add
pop
into
mov
mov
leave
aas
mov
fimuls
inc
mov
arpl
and
xchg
fndisi(8087
and
aad
test
aad
pop
loopne
pop
push
mov
dec
mov
ss
and
xchg
fmull
in
popf
or
notl
fdivr
mov
call
fs
pop
out
pop
popa
lahf
sbb
xor
cmpsl
cmp
mov
xchg
mov
int3
pop
mov
xchg
jp
mov
mov
jg
add
or
or
repnz
aaa
mov
out
ja
sti
push
jne
and
and
mov
push
inc
arpl
aad
adc
fstpt
lds
push
ret
add
jae
shll
fstps
ret
fldl
xchg
jmp
pop
xchg
stos
and
xlat
dec
aas
mov
and
testl
add
loope
xor
js
adc
add
cs
and
sbb
and
ss
jo
das
push
sub
cmc
or
testb
shrb
mov
mov
dec
cmp
cli
in
fistl
rorl
testl
adc
ret
inc
mov
clc
fisttps
out
xchg
and
mov
xchg
push
sub
fyl2x
repz
pop
out
inc
add
mov
repz
cmp
mov
xorl
and
adc
pop
jmp
and
mov
add
iret
sbb
and
mov
out
mov
mov
or
fld
sbbb
add
and
push
and
dec
dec
shll
cmpsb
aad
push
fsubrl
adc
pop
inc
mov
xor
scas
sbb
push
insb
jbe
cltd
dec
inc
mov
mov
bound
cld
jmp
sbb
pop
mov
add
inc
add
ret
sub
adc
popf
fisubrs
cs
jae
dec
inc
inc
pusha
das
and
cmc
sahf
inc
or
out
jnp
xchg
xchg
iret
or
mov
mov
scas
jns
cmp
fdivr
je
cwtl
test
neg
push
sbb
mov
dec
mov
push
sbb
xchg
fcoml
daa
cli
xor
fs
add
or
cmc
sti
imul
mov
mov
dec
repnz
mov
xlat
mov
cmc
jb
push
fisubs
mov
in
scas
pop
in
add
iret
cwtl
pop
das
mov
sub
mov
lods
push
mov
sbb
int
iret
rorl
into
dec
pop
jmp
arpl
inc
nop
jae
sub
pop
nop
lds
mov
mov
out
js
pop
movsb
into
mov
add
push
pop
std
pusha
les
mov
mov
pop
jbe
mov
jmp
pusha
mov
jp
enter
pushf
sub
fsubs
scas
outsl
scas
xor
sbb
lret
mulb
or
jle
xlat
jecxz
rcrl
test
dec
sti
xchg
jns
inc
aam
andb
push
mov
mov
cmpsl
lods
inc
data16
push
scas
and
sbb
imul
add
mov
enter
mov
std
or
sub
add
cmp
and
xchg
and
adc
into
sbb
sti
xchg
dec
mov
mov
sub
sub
add
inc
dec
jno
sbb
pop
sub
adc
aam
leave
aas
lds
cmp
xor
fnsave
sbb
insl
scas
popf
or
pop
jmp
adc
mov
into
fistpl
xor
int3
jne
xchg
loop
mov
dec
rol
das
mov
mov
mov
cmc
jl
add
ds
xor
lret
shr
cld
les
shlb
aam
jge
or
imul
and
inc
shll
sahf
outsb
testl
fldenv
or
cmp
push
or
jns
cli
adc
lods
lcall
adcb
movsb
ret
xchg
rcll
mov
repz
mov
rcrb
adc
insl
xchg
movsb
xchg
sbb
stc
jl
andb
out
cld
mov
adc
les
push
out
sub
lods
mov
in
add
dec
adc
lds
cmpsb
movsl
cmpsl
insl
mov
or
inc
adc
xor
xchg
in
cmp
pop
inc
movsl
pop
out
mov
mov
cmp
xor
lds
pushf
cmpsb
sub
xor
jg
jge
xchg
push
neg
dec
dec
inc
fldcw
aas
add
lret
adc
scas
sbb
sub
cld
xor
and
mov
cmp
mov
sub
test
pusha
imul
loope
xor
dec
clc
pop
loop
mov
ret
sbbb
xchg
dec
push
lcall
jnp
lock
out
dec
push
jecxz
shll
outsb
subb
loopne
ret
lods
fmuls
sub
mov
loop
mov
repnz
jle
sbb
inc
ret
inc
int3
mov
dec
adc
mov
fsub
test
rorb
xor
xor
fcom
sub
sbb
out
add
or
mov
cs
sub
and
sbb
add
mov
jo
lahf
fstpt
test
ja
jae
es
ror
ret
lods
dec
test
loopne
mov
dec
cmp
ret
pop
cwtl
pop
xchg
mov
add
je
fs
outsl
push
xchg
jnp
gs
sbb
aad
or
inc
mov
loop
add
or
shl
pop
mov
sarb
add
mov
mov
outsl
cltd
and
sahf
jo
xchg
mov
in
pop
mov
fdiv
inc
ljmp
adc
inc
adc
inc
pop
push
xchg
shlb
cltd
stos
jmp
pusha
repnz
cmp
pop
pop
and
mov
push
notb
cmc
xor
cld
cwtl
iret
scas
pushf
outsl
mov
or
jbe
add
rorb
and
lcall
push
arpl
nop
imul
cmc
pop
cmp
lock
dec
inc
bound
xchg
je
cld
mov
xor
cltd
xor
xor
fstl
cs
or
fidivrl
rorb
loop
outsl
mov
sahf
add
out
pop
fldt
ss
mov
stos
or
mov
sbb
xchg
testl
test
mov
cmp
inc
fmul
or
mov
push
es
push
cmp
cld
push
inc
ja
and
stc
outsl
stc
popa
jp
in
mov
dec
cs
xchg
scas
adc
mov
cmp
jns
hlt
insb
mov
mov
or
or
mov
inc
xor
xor
movsl
mov
xor
popf
push
dec
push
cli
loop
lea
cwtl
lea
dec
push
pop
stos
jbe
ja
pop
dec
aad
cmp
push
inc
xchg
mov
push
xlat
or
mov
mov
sbb
stos
int3
imul
out
scas
or
dec
loope
scas
sub
mov
jns
xlat
adc
inc
push
dec
push
in
or
mov
dec
push
push
jo
ja
add
push
push
jmp
imul
mov
dec
jecxz
loopne
adc
sti
lret
cmpsl
in
xchg
mov
mov
sbb
pusha
xchg
movsl
and
ror
dec
mov
xlat
enter
mov
jle
jp
adc
int
add
sub
push
mov
js
movsl
adc
outsl
jae
fnsave
and
and
fistl
pop
lahf
push
mov
mov
mov
cld
dec
fisubrl
xchg
fcmovnbe
jle
inc
out
mov
pop
sbb
das
pop
sbb
pop
and
pop
mov
dec
js
ret
xchg
push
push
mov
loope
fmuls
mov
sub
shll
xor
cs
rolb
jne
sbb
pop
icebp
push
dec
and
cmp
pop
fs
mov
mov
jne
cmpsb
mov
insb
sbb
jb
push
add
xor
jle
sub
adc
iret
xlat
or
dec
xchg
das
adc
xchg
fiadds
in
int
or
jne
adc
mov
mov
adc
jecxz
mov
in
dec
pusha
or
sbb
mov
sub
inc
popf
out
jae,pn
sbb
dec
push
add
inc
or
popa
addb
inc
push
fwait
fadd
pop
push
aad
jb
add
mov
aas
inc
popa
pop
dec
aaa
aad
push
mov
cmp
or
add
rcrb
adc
prefetchw
jp
icebp
stc
xchg
movsb
in
imul
mov
cld
daa
inc
sub
xor
push
jno
clc
movzbl
mov
sbb
sbb
or
mov
jge
xchg
imul
add
dec
in
frstor
std
or
pop
lahf
pop
xor
xor
lret
add
jp
cwtl
sub
in
adc
popf
push
push
sub
adcb
mov
loop
jl
inc
dec
add
sbb
jmp
sub
adc
xchg
dec
and
ret
in
pop
out
insb
pop
mov
add
mov
stc
sub
clc
lcall
data16
rcll
or
imul
inc
jne
jmp
push
or
lods
mov
lods
jle
adc
repz
clc
testb
cmp
push
adc
or
imul
push
mov
ljmp
ljmp
sbb
je
ret
pop
push
and
test
jg
xchg
filds
dec
inc
xchg
rcr
xor
and
cli
ds
xor
jl,pt
cmp
pop
xor
lahf
sbb
pop
aas
jns
fcomps
test
stc
dec
in
data16
push
mov
scas
out
sub
jge
cmp
add
xor
mov
lds
insl
jne
dec
test
xchg
adc
xchg
xchg
roll
xchg
mov
cli
sbb
out
and
mov
int3
test
dec
fidivrs
xor
out
mov
hlt
xor
fnstcw
out
mov
in
xor
fsubrl
pusha
fcoml
mov
rclb
les
frstor
inc
lods
int
iret
test
inc
pop
or
and
movsl
scas
subb
ds
jo
xor
std
dec
gs
out
xchg
jp
jo
add
mov
sub
cmpsl
sub
stc
loopne
and
repz
cmp
ret
fldenv
sbb
out
call
scas
stos
int
cmp
sbb
xchg
sbb
icebp
sbb
lods
jmp
and
jecxz
push
ss
dec
push
add
or
dec
sub
sbb
pusha
stc
loop
arpl
adc
das
sub
sub
scas
xor
sahf
ss
test
lods
mov
dec
and
jp
dec
test
std
popa
aad
fsts
dec
out
notl
loopne
leave
hlt
adc
das
jns
sub
fists
ds
push
jl
cmp
out
in
sbb
dec
js
adc
lock
ds
in
ror
aam
sarb
sbb
jo
jns
inc
movsb
jae
inc
or
push
cmp
push
das
ret
movsl
aaa
sub
or
lea
movsb
mov
stc
scas
cld
adc
out
pop
mov
inc
dec
dec
jnp
jb
outsb
inc
mov
pop
shll
enter
addr16
imul
mov
test
add
push
add
cld
fwait
jae
test
fisttpl
push
jge
fistpl
sub
pop
rclb
repnz
cli
fmul
and
sub
pop
mov
push
xchg
mov
std
inc
jp
cmp
push
jae
ficoms
mov
xor
push
push
inc
cld
out
push
iret
mov
mov
test
fbstp
pusha
and
lock
iret
push
lret
mov
insb
dec
push
mov
mov
insb
xchg
frstor
rep
pop
and
adc
jb
or
and
dec
fbstp
add
cwtl
sub
push
negl
xchg
dec
adc
movsl
scas
sti
stos
cld
repz
daa
xor
push
pushf
arpl
sub
sti
scas
cmpsl
dec
frstor
lret
mov
xor
jp
leave
mov
adc
mov
and
outsb
in
inc
xchg
inc
loop
adc
leave
bound
push
sahf
cmpsb
insb
fst
jnp
shl
mov
or
ficoml
loope
sub
or
cwtl
jno
fstpt
jne
sub
dec
decl
jnp
in
repnz
out
pop
add
ljmp
out
dec
ss
shll
scas
mov
roll
lds
fincstp
cs
sbb
mov
rorb
shl
adc
pop
into
inc
sbb
aas
pop
rcll
cmp
xchg
pop
inc
inc
test
inc
mov
jge
aas
or
loopne
push
jp
cmp
mov
push
cmpsl
mov
mov
xchg
xor
pop
loope
repz
in
sbb
cs
dec
mov
outsb
in
loop
in
dec
xchg
inc
sub
insl
jg
pusha
test
in
jns
and
pop
test
push
xchg
fnstenv
je
mov
xchg
cwtl
push
scas
dec
lds
mov
jo
cwtl
xor
or
xor
xor
add
push
je
adc
movsl
push
aam
mov
or
test
xchg
stos
or
cmp
xlat
inc
movl
pop
jae
push
inc
arpl
out
mov
adc
lahf
push
jl
sbb
mov
imull
dec
frstor
testl
fucomip
and
test
fwait
jle
sub
jb
sub
dec
js
sbb
testl
add
push
lock
mov
xchg
popf
sub
testb
imul
inc
movsl
push
mov
inc
push
push
popf
dec
call
jmp
bswap
mov
cwtl
mov
push
adc
sbb
jns
pop
call
pop
test
add
pop
lret
loopne
push
pop
or
inc
cmp
adc
imul
lcall
fistpll
in
in
daa
scas
jl
roll
sub
sub
add
insb
movsl
aaa
loop
dec
xlat
ret
fisttpll
xchg
stos
ss
dec
notl
imul
outsl
jecxz
das
icebp
xor
sbb
xchg
inc
pop
mov
inc
cmp
iret
js,pn
cmp
out
mov
movsb
aam
push
xorl
fbld
adc
fwait
repz
push
pop
test
and
sbb
xchg
popf
or
hlt
bound
add
in
sbb
mov
or
clc
pusha
cmp
insb
fcmovnu
jbe
stos
add
pop
add
xchg
adc
and
xor
xor
add
test
xor
xchg
fcomps
fcoml
fwait
enter
lahf
das
ret
push
push
dec
xchg
int3
mov
push
jmp
xor
insb
inc
out
lret
cmp
mov
mov
subl
cmp
scas
movsl
add
mov
ret
out
testb
xor
mov
inc
adc
iret
or
mov
fwait
adc
xchg
and
dec
fnsave
sbb
adc
mov
push
xor
pop
lret
mov
and
fnsave
in
into
sbb
push
mov
sub
sub
xor
pop
sbbb
add
xchg
fs
sarl
sbb
repz
sub
inc
dec
push
xchg
nop
cmp
fcomps
add
pop
mov
xor
sahf
roll
sub
out
out
xor
ss
adc
lds
or
and
push
scas
dec
hlt
enter
and
adc
pop
xor
sbb
mov
jno
shll
mov
push
add
jns
bound
out
fldl
lahf
insl
dec
aad
arpl
or
pushf
pop
sbb
mov
mov
cmp
rcrl
test
mov
fldlg2
hlt
imul
rorb
dec
popl
sbb
test
sti
ret
insb
mov
movsl
adc
or
in
jmp
adc
pop
pop
lcall
xor
sbb
inc
and
stc
ret
pop
out
inc
imul
mov
xchg
movsb
outsl
repnz
sub
sbb
mov
push
adc
repz
dec
mov
xchg
jp
gs
or
out
or
testl
push
jg
or
ljmp
ror
inc
leave
dec
jecxz
test
lds
xor
insl
mulb
clc
mov
test
call
adc
and
std
pop
cmpsb
repnz
push
js
lret
jno
rclb
mov
lret
lods
push
pop
insb
cmp
push
adc
or
dec
dec
push
arpl
push
adc
sti
test
sub
shll
mov
fstps
fstpt
pop
popl
push
jb
insb
mov
shl
xor
movsl
pop
inc
add
sti
pusha
sbb
or
fisttps
loope
call
cwtl
aam
das
fwait
sbb
pop
shll
push
sbb
mov
outsb
outsl
sub
or
cmpsb
mov
insb
add
sbb
adc
sub
mov
stos
insb
in
rcll
stos
test
xor
and
and
inc
mov
shl
rcll
out
mov
out
movsl
add
fstpt
cmpsb
int3
sub
dec
push
aaa
popf
push
xor
sbb
push
push
fwait
jbe
dec
push
mov
xor
or
pop
mov
mov
inc
int
inc
add
scas
dec
in
mov
movsl
enter
sti
adc
sub
cmp
dec
icebp
jo
adc
aaa
test
and
andl
jl
adc
jbe
fsubr
je
aaa
add
mov
dec
fucom
mov
cli
popa
stc
adc
jno
pop
cmpb
xor
xchg
dec
sub
xchg
fistl
fsubrl
popf
inc
pop
leave
aas
push
sbb
nopl
push
add
jg
sub
cwtl
mov
aam
nop
insl
fimuls
add
in
adc
ret
fnstenv
in
mul
inc
pop
sbb
pusha
inc
pushf
fidivs
or
je
adc
cmp
cmpsl
dec
mov
daa
jl
jae
scas
inc
movsb
xor
pop
jmp
sub
push
cli
cmp
jmp
lret
je
adc
data16
fidivs
sbb
and
ljmp
jnp
jb
aaa
std
out
fimull
inc
sbb
inc
lea
mov
in
pop
dec
jae
cmp
mov
push
cmp
fcomps
jmp
pop
pop
jg
je
mov
pop
push
mov
cld
push
js
mov
idiv
or
jne
popa
mov
mov
imul
loopne
out
cmpl
call
adc
scas
lds
cltd
ret
or
cwtl
or
roll
mov
cs
ds
xchg
enter
mov
adc
mov
sti
ss
cmpsb
xchg
mov
mov
sti
jno
xor
inc
out
fsubr
mov
mov
out
xchg
lds
scas
mov
and
push
in
scas
and
pop
iret
mov
jp
data16
xchg
push
or
aad
jbe
orb
mov
gs
jbe
mov
inc
and
bswap
jge
imul
fistpl
fisttpll
pop
aaa
inc
add
mov
push
mov
aaa
out
fadd
addr16
mov
sub
mov
xor
sbb
xchg
mov
jb
test
or
stc
jp
mov
push
xchg
jp
out
sub
call
notl
lods
lods
sub
lock
aas
sub
nop
sbb
mov
shrl
xchg
repz
jmp
fcompl
or
mov
lret
inc
ret
sbb
xor
dec
sub
xor
adc
ds
negb
and
mov
mov
sub
scas
adc
jne
fbld
aam
mov
and
rorb
pop
je
ljmp
ljmp
int3
pop
cmp
xchg
or
pop
lock
cmp
into
loop
or
test
mov
int
rolb
push
push
or
and
cs
jmp
daa
xorb
xchg
and
sub
or
inc
lcall
addb
xchg
xchg
es
or
xchg
cmp
insl
mov
mov
and
adc
lret
repnz
repz
push
add
adc
lds
clc
add
fdivp
sbbl
je
push
jg
mov
jecxz
mov
scas
lret
test
pop
pop
mov
rolb
mov
xchg
or
jmp
jmp
ljmp
and
adc
jbe
movsb
add
and
mov
pop
leave
lahf
shr
addr16
xlat
inc
mov
sbb
jnp
jl
jecxz
fdivl
and
sbb
adc
rclb
fsubrs
mov
jp
jecxz
leave
xor
in
sti
pop
push
test
ficompl
push
outsl
mov
icebp
mov
sbb
in
les
out
dec
fwait
dec
pushf
arpl
push
xor
aam
dec
mov
ds
mov
jmp
pop
mov
ret
dec
cmp
cli
cmp
jl
xlat
lahf
rcrl
inc
movsl
test
pop
and
fsub
cmpsb
aam
xchg
xlat
das
mov
ja
shlb
xchg
fsubl
and
divb
add
or
mov
push
jp
pop
mov
dec
xchg
push
jl
aaa
add
sub
ret
cmp
or
xchg
push
xor
add
rorl
xchg
pushf
out
mov
mov
loope
xor
sahf
fbld
mov
test
andl
adc
mov
mov
out
sahf
loop
pop
ss
mov
jmp
xlat
mov
jb
pop
mov
jecxz
filds
rcrl
in
stos
cmpsb
loop
jle
std
sub
xor
lret
out
stc
stos
push
mov
xchg
idivb
popf
mov
fcmovb
cld
mov
inc
mov
cmpsb
aas
xchg
xchg
scas
nop
or
dec
fadds
popf
in
in
lods
cmp
xchg
xor
insl
fstl
sahf
rcll
push
inc
int3
cmpsb
das
mov
xlat
lahf
sbb
lea
out
xor
cmp
nop
mov
sbb
add
cmpsl
stos
jecxz
cld
mov
xor
rclb
popa
mov
mov
push
sub
movsb
repnz
mov
cmp
dec
xlat
xchg
push
pop
mov
aad
cmp
inc
mov
xchg
cld
xchg
xchg
pusha
icebp
xor
dec
or
fwait
sub
mov
add
inc
pop
and
pushl
jp
and
dec
dec
sub
mov
xchg
addr16
xchg
int3
mov
aaa
mov
nop
inc
sahf
mov
cltd
aas
ret
imul
fisttpll
shl
mov
or
cwtl
fimuls
dec
xchg
xchg
mov
sbb
dec
xor
roll
mov
out
sti
add
bnd
xor
lock
add
mov
test
xorl
mov
inc
push
jp
in
mov
js
mov
push
inc
inc
pushf
fsub
mov
in
push
pop
sbb
enter
and
movsb
int3
adc
movsb
notb
sub
fwait
mov
loopne
jmp
xor
loopne
xor
xlat
xorl
movsb
dec
inc
les
sub
les
ljmp
hlt
and
ret
push
jns
sti
dec
sahf
mov
cmp
push
cld
sbbl
in
and
add
test
cmp
pop
in
loopne
dec
arpl
je
adc
inc
mov
sub
imul
stos
jmp
rcl
jp
pop
loop
mov
mov
iret
inc
inc
jbe
sub
faddl
and
jmp
cmp
push
inc
jbe
shl
push
loop
inc
jb
sbb
mov
icebp
lahf
mov
xor
add
loope
les
xor
ret
lock
dec
addl
or
outsb
add
mov
sbb
xchg
mov
mov
andl
ds
lret
inc
movsl
or
sbb
fwait
and
aaa
push
fadds
sub
add
jae
fdivrl
pop
cmp
test
add
add
and
filds
xlat
push
sub
ljmp
xchg
roll
rcl
test
fsubl
popa
scas
jle
mov
mov
add
outsl
and
xor
fnstenv
mov
mov
jecxz
loopne
outsw
or
fs
stos
or
jge
cmp
addr16
dec
cld
ret
adc
lcall
or
outsl
nop
sub
pop
neg
out
rcll
aad
cmpsl
jl
pop
xchg
xchg
shlb
or
dec
mov
subl
pushf
stc
lock
adc
mov
adc
dec
sti
jge
pushf
jo
scas
ljmp
outsb
jo
popa
or
cmp
loope
cmp
inc
mov
aad
mov
testb
mov
cmp
ret
and
jge
into
adc
mov
jge
les
test
notl
pop
add
push
ds
add
lret
cld
sub
fwait
aam
pusha
aas
lret
inc
mov
pusha
popa
push
xchg
mov
xor
movsl
fmull
daa
or
repz
ret
pusha
cld
mov
and
push
dec
cmp
jne
mov
neg
mov
sbb
fldt
movsb
push
jb
mov
pop
scas
cmc
or
xor
cmpsb
adc
cs
insl
or
cli
stc
add
in
lods
pop
add
pop
xor
stos
mov
pop
ljmp
fldl
xchg
in
inc
test
cmpsb
cmp
pop
shlb
faddl
mov
xor
inc
lea
pop
ret
arpl
fwait
push
loopne
jns
xchg
or
fstl
stos
push
dec
test
inc
je
shll
lcall
jb
cltd
mov
pop
fsubs
fists
jo
cmp
fwait
add
xchg
jg
pop
mov
mov
sub
ss
je
adc
jmp
or
pop
push
ja
pop
repz
jb
fsubr
lods
aaa
jne
in
sahf
sbbl
imul
dec
sbb
and
imul
sbb
negl
test
fmul
sub
dec
rcl
sub
je
insl
jne
xor
data16
int
cmp
xlat
jle
push
add
aad
jns
jb
jae
add
sbb
jg
test
xor
dec
cmp
mov
jge
xor
lret
add
rcl
add
imul
leave
adc
ljmp
mov
push
dec
inc
rcr
and
lret
cmp
mov
dec
in
fbld
ret
add
dec
jnp
aam
push
pop
lods
rcrb
sbb
pop
push
mov
repz
sbb
jno
repnz
pop
cmc
out
movsl
mov
inc
sbb
vpsrlw
lahf
insb
push
mov
jge
add
or
mov
xor
bnd
cmp
xor
pop
sub
ds
xchg
dec
inc
add
movsb
xor
dec
inc
xor
or
add
repz
sbb
and
push
pop
or
mov
popa
add
aam
fnsave
mov
cwtl
insb
int
cld
hlt
xchg
rol
pop
fdivl
inc
mov
dec
imul
jae
push
scas
mov
mov
lret
mov
adc
xchg
cmp
and
in
arpl
sub
push
mov
jae
imul
or
inc
in
and
std
mov
jae
mov
out
jo
les
lcall
imul
xchg
loop
lods
cli
scas
jns
je
or
popf
xchg
jge
dec
in
xor
jnp
ss
repz
or
bnd
pop
xchg
outsb
rcrl
dec
fists
push
sbb
rcrb
jl
mov
mov
xchg
push
xchg
push
and
xchg
xlat
sub
scas
shrb
popa
dec
mov
mov
in
fcmovne
or
cmpsl
jg
ds
mov
pop
cmp
es
push
adc
ror
mov
test
mov
insb
hlt
dec
pop
repnz
add
dec
mov
scas
scas
rclb
cmpsl
ret
fldcw
or
jne
lock
mov
rol
jb
pop
dec
add
inc
jmp
fldenv
aam
daa
pop
pushf
aas
inc
push
shl
fs
push
cmc
scas
dec
ljmp
or
dec
mov
rcrb
iret
sti
fdivp
adc
shl
push
sti
and
and
dec
xorb
icebp
outsl
int3
sub
cmc
dec
or
shr
push
pop
xor
out
inc
cli
sbb
addr16
repnz
ja
arpl
xor
dec
out
sub
pop
lahf
sbb
jne
pop
repnz
cltd
xchg
mov
pop
pop
in
pusha
loop
xor
adc
xor
mov
push
mov
mov
or
push
sub
leave
mov
sub
fdivrl
xchg
shr
or
add
adc
mov
rcll
clc
add
out
sub
movl
call
add
and
and
pop
fidivs
cmp
push
popa
cmp
sub
adc
inc
dec
rclb
in
mov
pop
shlb
fwait
mov
in
jmp
test
cmp
decl
cmp
sub
in
mov
jne
stos
pop
mov
sub
sbb
jmp
aad
add
inc
cmpsb
call
and
scas
loop
mov
sti
into
pop
das
pop
mov
jne
ficomps
xor
gs
sarb
push
xor
in
stc
lcall
ss
lcall
jp
xchg
jg
xchg
mov
scas
sbb
jecxz
and
dec
insb
lret
scas
inc
hlt
or
mov
cmpsl
pop
in
es
and
mov
sti
mov
xor
jl
mov
push
cwtl
xor
addr16
and
push
js
jns
jne
sub
test
shrl
stos
mov
in
imul
mov
sbb
sahf
pop
xor
maxps
je
lods
std
decl
sbb
mov
xchg
or
out
into
jl
cs
mov
in
xor
lds
pop
xchg
sub
mov
mov
imul
cli
aas
cmc
jae
cmp
and
mov
sbb
xchg
dec
jl
ss
push
daa
add
xchg
imul
xor
and
adc
sbb
push
mov
mov
and
aaa
iret
insl
pop
jns
mov
fstpl
scas
cmpsb
addb
dec
popa
push
jmp
push
clc
ret
pop
cwtl
adc
iret
xor
inc
movb
or
push
insl
push
xor
jnp
inc
mov
sbb
xchg
adc
xor
xchg
sub
add
fidivrs
in
push
mov
xor
stos
sub
mov
cmp
enter
in
test
xor
mov
mov
and
mov
fmuls
jmp
mov
jns
scas
mov
mov
je
jbe
xchg
push
les
mov
lret
jo
pushf
mov
dec
int3
stc
out
ret
in
dec
pop
cmp
out
stos
cmpsl
or
dec
leave
sub
push
and
dec
or
xchg
adc
push
bound
lret
call
pop
sarb
daa
add
adc
fnstenv
cmc
cld
sbb
and
hlt
mov
sarb
cmpsb
and
jae
sub
mov
jne
jge
ret
daa
jecxz
sti
sub
scas
and
push
lds
push
pushf
adc
stc
cmp
les
call
and
pcmpgtd
incb
xchg
mov
shll
imul
mov
rol
and
sti
popf
pop
push
push
sub
adc
cmp
loop
dec
dec
lcall
into
outsb
fiaddl
scas
push
add
mov
sbb
call
loopne
xchg
lds
jbe
push
add
daa
xchg
or
loopne
lret
xor
aam
in
movb
clc
sbb
std
mov
sub
cmp
hlt
mov
loope
fwait
push
push
push
scas
pop
add
ss
xor
or
push
jge
pushf
mov
xor
outsl
aas
dec
popa
ds
lcall
and
fs
lret
mov
push
adc
cld
pop
mov
pushf
and
ljmp
lds
xchg
push
jo
pusha
lahf
inc
xor
in
mov
mov
out
or
dec
pushf
stos
sub
xchg
icebp
mov
dec
jl
pushf
lahf
rcl
lods
cmp
mov
dec
sar
fdivs
movsl
jae
lret
xor
mov
sub
or
test
ds
das
dec
mov
nop
adc
push
sub
loopne
adc
bound
pop
or
mov
mov
xchg
test
icebp
pop
jne
js
sarl
fcompl
into
aas
adc
nop
jg
mov
mov
add
xor
adcb
push
add
test
lret
xchg
test
cmpsl
sbb
jno
cmp
scas
push
mov
shlb
push
xor
fcmovne
fnstsw
pusha
jo
fsts
cmp
jo
jae
call
test
aad
adc
inc
scas
fnstenv
imul
bound
pop
sub
pop
addr16
pop
dec
gs
movb
test
testb
pop
arpl
pushl
ret
xchg
xchg
mov
cmp
inc
ret
pusha
pop
or
pop
imul
xchg
cmp
adc
rorb
xor
sbb
data16
dec
mov
push
les
sbb
std
pop
and
outsl
jmp
mov
cmp
movsl
fnstsw
mov
out
mov
xchg
aas
push
arpl
mov
test
enter
cmp
hlt
cltd
mov
inc
loope
imul
push
mov
add
addr16
shlb
xor
adc
push
push
cmp
cli
lods
push
jno
fs
imul
fsubrs
cmp
dec
adc
pop
push
shr
aas
sub
ret
es
stc
test
lret
mov
xchg
sbb
or
dec
mov
or
pop
inc
pop
sahf
imulb
sahf
or
popa
mov
shll
aaa
jmp
aam
pop
popa
sbb
daa
lahf
loopne
add
dec
mov
add
mov
push
mov
pop
push
ds
rcr
std
fldt
xor
dec
inc
add
repz
dec
ds
push
test
lods
pop
sbb
push
std
mov
fcoms
add
cwtl
push
in
or
cmpl
cs
sub
push
mov
jecxz
sarl
out
mov
fstl
in
jmp
adc
aas
cwtl
mov
jo
push
push
sahf
jecxz
push
lret
jnp
aaa
shll
mov
les
sahf
jle
imul
mov
cwtl
xor
add
cmp
lret
dec
xor
fucom
clc
testl
mov
add
shr
stos
out
jg
in
test
inc
fcoml
sub
add
sbb
xchg
mov
add
pop
cs
pusha
shl
rorb
dec
test
cld
daa
or
add
js
mov
imul
xchg
stos
lcall
movsb
divb
nop
pusha
rcrb
fisttps
mov
xor
repz
movsb
or
movsb
push
shrb
pop
add
mov
inc
inc
inc
jb
sbb
repz
lahf
out
adc
add
iret
jae
pop
xor
pop
std
xor
lret
aam
sub
fists
out
ljmp
scas
or
mov
push
scas
test
xchg
or
and
arpl
add
pushf
mov
adc
cmp
xchg
das
push
add
js
pop
lahf
cld
addr16
mov
sbb
fcoml
dec
fcompl
and
ds
pop
add
outsl
mov
imul
int
mov
and
adc
sbb
aam
jae
mov
movsb
divb
xlat
or
inc
jl
jp
cmpsl
jne
sbb
fsubrl
aad
cwtl
and
mov
jecxz
cmp
mov
arpl
push
lock
fisubs
test
mov
cmpsl
fldcw
popf
adc
adc
jnp
jle
push
mov
cld
fisubrl
sarl
jnp
xor
stos
mov
cmp
add
repnz
scas
ret
shll
jo
add
pusha
frstor
ud0
sahf
sbb
push
jge
outsl
jne
fists
pop
mov
outsb
repnz
dec
ret
pop
lock
es
ja
mov
je
add
pop
jb
push
jmp
mov
orb
outsl
mov
jno
pop
jmp
xchg
pop
sub
and
xor
add
jmp
cmp
dec
adc
adc
sahf
ret
popa
mov
inc
das
add
mov
or
mov
arpl
mov
shrl
scas
loope
pop
mov
lea
ffreep
lods
mov
call
sbb
dec
js
cmp
adc
sbb
or
int3
xor
jge
or
cmp
and
inc
in
stos
lods
arpl
push
das
jp
mov
mov
jcxz
cmp
xchg
cld
inc
data16
xor
xchg
ljmp
loope
fildl
imul
add
enter
sahf
cmp
pop
gs
std
adc
and
or
pop
jmp
adc
ljmp
ja
xchg
jg
cmp
jg
in
outsl
data16
and
sub
bound
mov
mov
jecxz
lds
int
dec
mov
push
or
dec
mov
xor
inc
stc
mov
enter
or
aad
push
xchg
cwtl
fbstp
or
mov
xchg
popf
xchg
pop
mov
enter
add
xchg
pusha
mov
xor
mov
adc
sub
xchg
and
or
loope
dec
push
cmp
mulb
daa
sbb
sub
adc
bound
ret
sahf
push
call
loop
mov
out
mov
push
mov
sbb
sti
push
mov
test
dec
popf
push
or
int3
adc
push
and
dec
les
adc
cmp
inc
in
cmp
loop
ret
dec
jl
ret
loope
xchg
movb
sbb
in
mov
stc
sti
bound
or
das
popa
paddusb
pop
cs
mov
mov
xorl
jnp
call
lret
fstpt
mov
mov
jbe
xchg
inc
ja
subb
shlb
sub
cld
sbb
xor
inc
out
ret
inc
and
data16
jecxz
xor
filds
dec
cmc
mov
jbe
sub
mov
test
movsb
add
push
pop
cwtl
and
jmp
outsl
add
mov
push
loopne
aaa
aad
push
inc
or
test
pop
fildll
sub
lock
xor
push
enter
scas
and
lods
icebp
mov
fs
xchg
les
mov
mov
call
jae
push
enter
iret
pop
mov
mov
std
lea
je
jne
imul
in
imul
xchg
fbstp
test
dec
cmc
adc
mov
fsubs
fwait
enter
inc
mov
and
jle
jo
es
std
xor
imul
popa
and
xor
shll
out
cltd
insb
adc
movsl
addb
icebp
sub
es
and
div
pop
cs
cs
popa
push
or
fldenv
sbb
mov
loopne
dec
or
jno
fnstenv
fnstenv
xchg
pop
js
inc
div
inc
inc
adc
and
icebp
ret
shr
in
sub
cmc
sbb
sub
test
imul
mov
insl
push
or
stc
or
sti
pop
nop
pop
fisttps
fildll
inc
dec
cld
sbb
aam
mov
in
ficoms
xchg
es
xor
pop
dec
adc
lea
inc
and
pop
dec
mov
mov
and
push
je
mov
arpl
sahf
bound
daa
inc
mov
flds
push
dec
std
out
out
int3
mov
in
pushf
pop
repnz
and
int
jecxz
rcl
out
leave
lcall
sarb
xor
sub
test
mov
jae
mov
jge
arpl
outsl
enter
repnz
push
or
nop
popa
or
add
or
push
jo
call
out
mov
add
test
cmpb
jp
adc
and
in
mov
mov
sub
call
pushf
fwait
mov
jbe
and
stc
movsb
mov
pop
pop
inc
test
xor
mov
pushf
clc
aad
jecxz
sub
and
cmp
push
mov
push
adc
sahf
sub
movsb
pop
inc
out
loope
mov
jge
dec
pop
ja
sub
sbb
adc
clc
pop
test
sbb
in
jns
flds
scas
pop
sti
mov
or
stos
add
pop
push
arpl
push
add
aaa
mov
cmp
ret
mov
adc
mov
js
stos
jecxz
cmp
inc
push
lea
mov
lea
fwait
lret
ret
jmp
inc
fs
adc
loop
flds
movsb
fs
lret
push
xchg
or
pop
mov
jmp
les
or
icebp
inc
pop
subl
jnp
adc
mov
pop
outsl
dec
ljmp
movsb
aam
jecxz
popf
adc
xchg
inc
pop
push
pop
push
sbb
int
ljmp
mov
outsl
mov
mov
mov
arpl
push
mov
jbe
test
popf
pusha
outsb
cmp
les
mov
test
mov
sbb
push
lret
jmp
inc
bound
scas
xor
movsl
icebp
cs
addl
insb
cmpl
xchg
xor
push
dec
mov
and
jae
cwtl
pop
mov
out
pop
les
jae
stos
cld
xchg
pop
push
mov
add
sti
in
jecxz
dec
fdivr
push
mov
push
psrlw
pop
add
jno
inc
add
leave
mov
mov
mov
scas
mov
mov
mov
xchg
stos
mov
push
cmp
adc
mov
adc
std
int
jne
jmp
repnz
stos
rorl
push
out
mov
jge
pop
cmovns
in
xor
push
cmpsl
mov
imul
jmp
add
and
test
xchg
pop
flds
sbb
movsl
mov
outsl
jmp
cmpsb
xor
out
mov
mov
xchg
xor
lea
pop
mov
clc
push
fdivrs
stos
aam
dec
xor
fucom
mov
xor
sbb
mov
sub
iret
fsubrs
dec
cwtl
xchg
jnp
pusha
push
out
cmp
stc
les
dec
pop
or
fnsave
jae
inc
lock
inc
adc
mov
pop
mov
pop
cltd
jle
xchg
sbb
ret
push
dec
fdivs
mov
push
push
addr16
bound
adc
mov
ja
out
push
mov
xchg
dec
clc
fidivs
insl
lret
ljmp
sbb
hlt
das
pop
movsl
dec
pop
xor
jp
jle
fnstcw
pop
adc
jmp
dec
lret
cmp
dec
cmp
mov
icebp
push
xchg
add
jns
or
cmp
push
mov
or
fs
out
mov
xchg
and
mov
mov
addr16
lret
mov
push
or
insl
flds
mov
mov
icebp
pop
stc
xor
arpl
fldcw
and
xor
dec
cmpsb
xchg
repz
int3
in
lea
pop
movsl
in
aaa
pop
int3
pop
dec
cmp
aad
mov
mov
rcl
cmp
dec
push
aas
xchg
outsl
mov
int
add
mov
jae
or
pop
sub
imul
in
jns
enter
mov
fs
mov
das
push
jle
dec
or
mov
mov
cmpsl
fsts
sbb
push
pop
and
push
lret
add
add
repz
out
lods
or
repz
push
xor
into
addb
cmp
fisubrl
adc
in
aad
cmpsl
push
pop
rcr
pop
mul
dec
xchg
xor
cmpsl
push
rorb
mov
push
sbbl
out
inc
jae
hlt
lods
subl
inc
mov
push
mov
aaa
xor
sub
pop
es
popf
daa
scas
and
fstl
lods
lock
or
push
sub
pop
dec
test
push
or
mov
mov
fwait
sub
mov
mov
add
pop
inc
ret
pop
fstp
int3
add
cwtl
pop
jbe
mov
add
nop
mov
daa
mov
sub
jmp
lds
add
mov
cmp
push
push
shrl
pop
mov
jo
clc
stc
pop
aad
fstl
mov
and
imul
sub
lret
jmp
pop
sbb
mov
pop
dec
xchg
xor
icebp
cmp
mov
es
adc
mov
in
cld
and
mov
ss
mov
fwait
pop
mov
mov
pop
mov
pop
and
and
cld
in
sbb
jo
sbb
inc
adcl
mov
fsts
adc
outsl
xchg
sbb
mov
and
repnz
cmp
mov
imul
aad
push
loope
in
in
data16
sub
negb
outsl
adc
sbbl
inc
lods
xor
test
hlt
inc
cmpsb
fisubrl
push
mov
ret
les
roll
add
inc
sbb
mov
loope
dec
mov
add
ja
pushf
bound
push
ja
or
mov
mov
xchg
outsl
push
movsb
cmpsb
push
out
xlat
cwtl
out
cltd
push
sbb
test
pop
lret
and
sbb
lret
push
aas
shrl
loopne
jl
xlat
and
xor
mov
lds
dec
xor
lock
int
loopne
adc
add
xlat
js
inc
out
loopne
jl
xchg
add
cmpsl
ret
push
or
adc
dec
push
cmp
or
aas
xor
data16
and
scas
pop
cmp
inc
dec
pop
adc
mov
bound
adc
popf
fadds
fldcw
iret
lods
arpl
jp
adc
mov
daa
xchg
vandps
sti
imul
cmp
dec
mov
inc
cwtl
dec
addb
mov
gs
negl
aam
sbb
gs
inc
mov
mov
repnz
out
ja
aaa
test
fiaddl
lds
push
or
pushf
insl
jmp
shlb
adc
lock
mov
jns
push
cli
sbb
pop
mov
loopne
test
fsubs
lods
and
test
insb
and
push
or
dec
repz
loope,pn
ja
mov
iret
inc
mov
fmull
push
nop
xchg
out
in
sbb
cmp
mov
jne
out
shl
sub
movsl
adcl
pop
ds
jmp
shl
dec
or
scas
sub
and
dec
repnz
push
dec
dec
pop
sub
pop
int
mov
mov
or
xchg
mov
cs
cmp
mov
negl
std
cmp
pop
inc
lock
add
mov
in
xor
ss
rorb
sub
adc
js
cmp
lock
xchg
xor
lds
stos
mov
mov
insl
loope
push
sbb
fsubrp
inc
fs
ss
push
pop
in
push
or
loop
ds
jno
mov
pusha
int3
push
jo
imul
addr16
sahf
xchg
out
mov
xor
inc
or
xor
jg
repnz
mov
or
mov
pop
pop
and
imul
xor
subl
sbb
mov
aaa
sarb
loope
stc
cmp
mov
ret
jno
mov
std
mov
fdivrs
jbe
xor
mov
cmp
in
aad
insl
out
jno
or
out
adc
and
xor
sub
xor
mov
repnz
push
jecxz
divb
sub
add
pop
jb
cmp
imul
push
jne
gs
fisttpll
xorb
addl
lret
jmp
shl
xor
cmp
dec
lock
adc
push
test
outsb
out
push
or
push
push
sbb
sahf
or
and
sub
push
test
or
shll
push
ljmp
in
add
sub
xor
add
jle
ss
sahf
xchg
aad
aam
dec
cmp
out
les
mov
pop
lcall
adc
fsubl
push
or
lret
daa
popa
xchg
cmp
js
shlb
inc
pop
dec
sub
test
xchg
mov
xchg
ljmp
adc
cmp
mov
mov
fs
dec
aas
mov
outsl
xchg
rorb
lcall
scas
pop
mov
mov
test
pushf
fimuls
rclb
inc
cmpsl
in
xor
ficompl
addr16
lea
pop
pop
mov
cmp
imul
lock
outsl
das
inc
out
leave
call
dec
pop
push
popa
lret
fucomi
les
mov
flds
pop
cmp
mov
pop
fs
mov
in
lret
inc
lds
out
jp
je
adc
pop
jns
lcall
xchg
lea
fadds
fimull
mov
adc
ret
mov
jne
mov
shrl
stos
data16
cltd
lods
xchg
mov
cmp
fcmovnb
aaa
push
popl
loop
and
dec
xchg
xchg
adc
jne
dec
in
jno
test
mov
add
loope
pop
mov
or
bound
popa
cmp
out
pop
xor
incl
mov
adc
mov
cld
cmp
mov
push
pop
mov
lock
out
cmp
mov
sbb
push
cmpsl
mov
insl
scas
push
and
aaa
pushf
push
jp
push
pop
mov
popa
cs
xor
mov
imul
xchg
sahf
adc
xchg
fisttps
add
arpl
inc
and
rcll
fstps
fidivrs
data16
not
xchg
movsl
repz
in
mov
arpl
push
test
cmc
and
fs
mov
mov
sbb
sbb
sub
cmpsb
mov
iret
pop
and
xchg
xlat
dec
fisubrl
or
shlb
stos
aas
repnz
xor
mov
lea
push
pop
push
mov
mov
mov
mov
stos
push
cmp
popf
ss
sub
mov
mov
ret
cmp
jae
popf
inc
push
call
mov
test
push
ds
push
clc
out
ja
dec
shlb
mov
es
in
aam
int3
insl
jo
mov
call
add
outsb
jns
pop
sbb
adc
jp
out
out
xchg
pop
popl
or
jbe
pop
frstor
loop
xchg
ss
push
pop
out
mov
dec
xchg
hlt
and
testb
cmpl
mov
xlat
adc
subl
fs
test
cs
push
xchg
repnz
js
adc
es
cmp
jns
mov
push
and
vcvtss2si
mul
call
popf
lds
scas
jnp
aam
push
mov
fs
dec
sub
jle
add
aam
pusha
jecxz
cmpsl
call
adc
adc
and
push
sub
popl
or
and
xchg
cmpsl
ljmp
test
xor
pop
sbb
or
sbb
scas
push
mov
insb
sbb
mov
fldt
movsl
inc
sar
mov
xor
cmp
cwtl
lret
lods
dec
sub
xchg
mov
fdivl
push
pop
dec
jmp
aam
stos
nop
mov
daa
orl
addr16
test
mov
cmc
and
add
outsb
fs
scas
rol
lret
add
fisubrl
leave
lods
mov
mov
jae
and
std
les
inc
lods
and
or
insl
push
imul
dec
into
jle
fisttps
xlat
addr16
lods
decb
pop
popa
push
jg
pusha
jg
dec
jne
sbb
pop
add
cmp
lds
mov
mov
jnp
sub
mov
mov
jmp
in
sbb
push
ror
push
enter
in
cltd
jl
rorb
in
push
stos
mov
inc
fisubrs
push
xchg
mov
repnz
sbb
dec
inc
fcoml
sbb
aaa
insb
sbb
jne
push
fwait
and
addr16
mov
xor
pusha
xchg
pop
xlat
imul
jno
mov
or
sbb
ss
add
rclb
jne
das
fdivrl
sbb
push
xchg
test
in
adc
jne
fldz
call
or
jg
mov
cs
in
cwtl
data16
sub
lret
xor
add
sbb
xorl
add
lea
or
or
mov
xchg
movsl
dec
stc
aad
cmp
imul
andl
jns
fistpll
mov
aaa
xor
in
sbb
inc
cmp
inc
mov
ret
imul
mov
stc
repnz
or
repz
rcrb
mov
pushf
push
out
lahf
and
out
push
leave
stos
dec
dec
dec
push
cmp
xor
fcmovu
mov
repz
mov
fidivl
stos
daa
pusha
mov
repnz
push
fistpl
test
shll
adc
shrl
pop
repnz
cmp
mov
fldcw
fdivrs
ror
adcb
negb
sub
inc
pop
pop
shl
mov
pop
or
in
fcompl
add
mov
mov
jno
leave
mov
inc
pop
arpl
dec
xor
loop
aas
xor
test
test
leave
aam
movsb
fs
or
push
pushf
nop
cmp
ss
push
mov
jg
leave
fistpl
notl
je
jbe
fidivs
mov
cmc
pusha
filds
test
ds
int3
push
in
in
push
push
cltd
sub
jnp
sarb
ss
xlat
cmp
fcmove
push
xor
pop
negb
push
add
les
movsb
hlt
bound
loop
lock
mov
aaa
sbb
aam
mov
bound
sub
push
jge
mov
sub
jo
orl
iret
and
mov
punpcklbw
lcall
out
sbb
pop
fwait
in
movsb
fdivrl
xorl
dec
enter
pop
fstp
sarb
fistpll
lret
scas
stos
sbb
orb
adc
negb
loopne
push
hlt
mov
js
add
das
mov
lea
xchg
mov
adc
sahf
push
fldl
jp
lahf
sbb
fwait
dec
and
daa
cmpsl
and
cltd
test
cmp
scas
ret
popl
negb
sbb
scas
addr16
sub
jmp
clc
aam
fs
scas
push
ja
ds
pusha
dec
mov
inc
rclb
ss
outsl
jnp
sarb
pop
cwtl
add
popf
test
push
sub
or
test
cmp
in
mull
leave
cmp
in
shrb
in
cmp
inc
adc
cmpl
sbb
in
mov
sbb
andl
cmp
insb
mov
arpl
pop
mov
clc
scas
xchg
adc
or
adc
adc
lods
lds
sarl
mov
subl
addr16
mov
xchg
pop
mov
jne
jae
test
jg
cmp
lods
loop
or
xlat
out
sub
mov
mov
in
int
fwait
push
incl
mov
dec
sbb
jbe
mov
lds
mov
ljmp
push
and
xchg
jle
cmc
mov
movsl
std
outsb
cmp
jns
daa
add
adc
push
fisubs
pop
inc
jg
mov
push
push
shll
mov
mov
bound
or
jmp
pop
fsubr
in
out
mov
aaa
sbb
push
aas
or
or
loop
rcr
psrad
add
pop
pop
pop
aas
out
push
cmp
arpl
int3
in
mov
push
and
adc
jno
push
lret
movsl
in
les
ret
jb
sar
or
in
stos
inc
sub
add
jmp
jmp
sub
cltd
mov
faddl
lods
nop
add
dec
mov
in
dec
stos
loope
cmp
leave
mov
lret
cmp
sbb
ljmp
xchg
push
adc
sbb
xor
test
dec
dec
mov
push
inc
cmp
pop
push
shrb
test
push
pop
push
cmp
popf
xor
mov
xchg
sub
add
adc
push
aad
fs
add
jge
and
insb
pop
dec
mov
cmp
xor
sub
pusha
pop
xchg
sbb
pmuludq
scas
or
dec
push
aas
cltd
mov
leave
aas
cmpl
lea
movl
mov
shrb
jb
jle
jnp
push
mov
pop
push
mov
notb
std
jae
or
mov
inc
push
jp
mov
fnstenv
jnp
call
push
dec
icebp
std
and
or
xlat
lcall
fcoms
xor
lock
int
mov
movsl
or
sub
lods
mov
out
pop
rcrl
jbe
sarb
scas
or
jle
loop,pn
mov
xchg
lds
mov
sahf
sub
aam
int3
lods
insb
stos
xchg
js
jge
sbb
hlt
adc
clc
add
gs
fnstcw
sahf
mov
lret
push
inc
and
iret
push
add
addr16
sbbb
sub
adc
or
mov
pop
adc
lods
sbbl
adcb
sbbb
mov
xor
out
cmp
fcoml
mov
xchg
cmp
xorl
pop
mov
out
pop
iret
mov
add
pop
shrb
jbe
fwait
sbb
sahf
outsl
sbb
rcrl
test
aaa
pop
mov
lret
inc
xor
xchg
pop
adc
dec
orl
dec
leave
push
int3
push
outsl
push
and
mov
mov
pop
popf
jnp
adc
xor
test
add
pop
sbbl
jge
movsl
into
mov
sub
mov
xor
add
pop
sub
loop
adc
fisttps
fcomi
jp
inc
shll
movsl
sub
jl
into
lcall
adc
push
jbe
scas
xchg
xlat
xlat
fs
mov
jnp
insl
movb
decb
scas
jb
lds
push
jge
mov
xchg
adc
fdivrs
imulb
dec
sbb
int3
xor
jns
xchg
add
out
or
cmp
adc
adc
push
call
inc
adc
ss
ficomps
jge
in
jb
iret
push
mov
push
test
adc
jne
addr16
dec
ss
repz
imul
js
sahf
xchg
dec
adcl
mov
mov
fistpll
and
mov
mov
xlat
xchg
out
xchg
fbstp
into
out
icebp
fidivs
lret
add
add
fistpl
or
sbb
out
imul
adc
sbb
pop
push
add
ret
xlat
cmp
fwait
sbb
xchg
inc
mov
or
mov
rol
test
mov
mulb
and
dec
outsl
inc
push
rcll
dec
sar
scas
add
push
aad
inc
addb
adc
into
fldt
mov
and
aam
sub
mov
aas
fwait
outsl
mov
cmpsl
add
in
sbb
sub
cli
int3
in
sti
int
cmp
mov
mov
aad
push
or
jne
adc
cmp
or
xchg
xor
mov
jb
dec
loopne
adc
push
ret
push
sbb
ds
mov
out
in
add
mov
jb
and
addr16
push
insb
out
stmxcsr
or
pop
call
jge
ror
inc
out
adc
jnp
data16
mov
loop
xchg
inc
jge
in
xor
mov
mov
cltd
or
inc
cmp
outsl
arpl
cs
dec
push
sub
sbb
pop
and
je
stc
ljmp
lods
sub
and
or
sahf
mov
xchg
and
das
dec
aas
outsb
fcmovbe
fucomp
xor
sti
jmp
lds
xlat
pushf
ja
mov
pop
int3
sarl
add
scas
jnp
out
data16
mov
rcrb
pop
xchg
notl
and
xor
out
test
xor
mov
lret
cmpl
mov
imul
sti
push
out
jecxz
rcrb
mov
subl
loopne
push
cmp
lock
lret
add
rcl
sbb
popf
push
in
mov
xor
pop
scas
sbb
cwtl
jne
mov
jns
aam
and
mov
adc
jb
push
add
arpl
fimuls
add
imul
in
insb
xlat
aas
xor
cld
lods
cmp
push
test
rclb
mov
cmc
xchg
pop
cltd
sahf
jmp
jg
xor
lcall
lcall
push
mov
and
add
pop
sarl
dec
int
pop
mov
pop
add
dec
outsb
mov
adc
rol
ljmp
sar
fpatan
push
xor
mov
pop
arpl
out
cmp
dec
push
std
add
push
nop
adc
lock
test
add
sub
test
mov
jne
mov
xchg
add
jae
sub
loopne
pop
aad
xchg
push
in
test
xor
mov
out
mov
in
lods
push
mov
mov
sbb
mull
movsb
jle
stos
mov
push
aaa
lret
mov
mov
sbb
in
cmpsb
data16
push
jne
mov
out
mov
pop
push
dec
in
iret
in
pushaw
insl
lcall
sbb
and
rcr
pop
in
cmc
insb
daa
xchg
or
insb
mov
in
ret
adc
adc
loop
stc
adc
in
mov
je
loop
xchg
fdivrs
inc
sub
and
addr16
add
enter
pop
stos
movsb
cmp
fucomp
jo
shrl
xor
sbb
xchg
add
mov
mov
leave
test
mov
std
sub
aaa
fsub
mov
mov
adc
in
je
sbb
out
jg
imul
mov
mov
xchg
aaa
in
inc
out
mov
push
inc
or
mov
or
imul
addr16
cmpsb
cmpsl
sbb
xor
push
test
adcl
adc
jle
inc
aas
inc
in
loope
fwait
or
xchg
daa
cltd
and
fsubs
sbb
fcmovne
shll
push
jb
inc
pop
loope
in
jno
iret
test
enter
insl
xor
and
cmp
push
mov
mov
push
dec
dec
xchg
mov
jnp,pn
cs
incl
sbb
fwait
cltd
movsb
sbb
psraw
or
ret
lock
sub
dec
stos
daa
add
pop
test
mov
and
dec
rol
inc
jp
stos
aam
test
mov
jnp
adc
out
test
insl
movb
aaa
or
lds
outsb
sbb
xchg
lret
into
xor
rclb
das
clc
lret
mov
lods
fdivrs
push
ja
dec
or
and
frstor
jns
lods
xor
mov
sbb
stos
sub
ja
out
mov
out
jecxz
and
test
add
addb
sub
dec
jecxz
stos
sti
arpl
lret
mov
mov
jp
std
mov
lods
dec
pop
xor
fwait
mov
mov
iret
xor
adc
jo
sete
test
mov
pop
notb
sbb
mov
fdivs
xlat
push
mov
loope
aas
or
lock
jp
push
push
outsb
stos
mov
es
mov
cmp
or
outsb
stos
and
adc
sub
dec
stos
sbb
push
and
mov
int
or
fsubr
cmpsl
dec
out
insl
leave
sbb
ja
popa
loop
cmp
rcll
and
popf
leave
test
push
out
pop
add
popf
aam
fld1
mov
cmp
or
idivl
cmpsb
pop
in
repz
adc
ret
ret
ja
fdivrs
ret
jo
mov
or
xchg
scas
iret
js
test
pop
outsb
into
scas
jnp
adc
adc
scas
or
test
add
adc
xor
frstor
data16
in
loopne
pop
pop
and
int
xchg
pushf
or
les
fstl
roll
dec
mov
popa
pop
jae
xchg
jns
ret
shr
addl
push
shll
jmp
test
ja
dec
pop
fldl
jae
aas
xchg
loope
hlt
mov
mov
arpl
test
mov
pusha
sub
in
mov
insb
incb
out
rolb
and
out
movsl
dec
pusha
mov
pop
mov
inc
cmp
mov
mov
addr16
icebp
sbb
xchg
push
lea
mov
fcomi
jle
lock
pop
cltd
ljmp
ret
cmp
aaa
fildll
loope
xchg
or
mov
adc
or
popf
lahf
sbb
rcrl
xor
jp
sub
adc
and
inc
push
xchg
out
mov
xchg
sub
pop
mov
popf
sub
inc
es
dec
xor
jecxz
mov
mov
movsb
xchg
push
cmp
push
out
inc
outsl
dec
mov
ret
int
jge,pt
xchg
gs
in
out
es
mov
sbb
rorb
lea
adc
jns
mov
repz
xchg
jno
dec
cmp
sub
aaa
inc
xor
imull
clc
into
push
and
ret
scas
jnp
lea
loope
sbb
jle
ds
cltd
and
sbb
mov
mov
cmc
jcxz
jl
xchg
leave
mov
and
lods
int
mov
inc
inc
inc
test
push
fistpll
pop
adc
iret
test
aaa
jge
rorl
out
loop
cmp
loop
ret
call
lods
jge
push
mov
cmp
movsb
outsl
test
xchg
cmpsb
adc
mov
mov
addr16
lods
dec
cmpsl
das
in
cmp
incl
cld
jecxz
insl
scas
dec
int3
inc
fwait
bound
mov
leave
fcoms
xor
fcoms
ja
fstl
and
ljmp
roll
push
aas
aaa
repz
inc
push
fyl2x
mull
add
ret
repz
std
sbb
inc
cli
stc
add
sub
pop
xchg
fidivrs
sbb
mov
mov
adc
jecxz
aas
outsb
adc
ret
jno
cmp
push
push
mov
fnstsw
out
mov
sub
or
cmp
push
push
fstpt
pushl
mov
gs
nop
push
mov
andb
out
loop
pop
cld
popa
cmpsb
dec
push
inc
out
adc
sub
pop
pop
fstps
fnsave
call
out
ja
sarb
mov
fadds
add
in
daa
mov
mov
inc
aad
mov
push
jo
jmp
sti
xchg
xlat
pop
pop
mov
lret
ds
movsl
fucomp
sub
jmp
mov
cmp
push
fcmovu
mov
data16
add
cmp
icebp
outsb
repz
and
sub
iret
pop
and
mov
divl
hlt
pop
bound
js
sub
mov
iret
loop
or
add
dec
cmp
lock
xchg
stc
rolb
sbb
fwait
out
push
iret
push
fcmovnb
popf
daa
int3
sbb
iret
push
sbbb
or
pop
lahf
or
movb
fwait
sub
xchg
out
fldenv
pusha
cli
pop
inc
loopne
stos
iret
fmull
xchg
cmp
jns
lret
mov
shlb
cltd
jne
xchg
xchg
push
add
lret
lea
cld
fdivp
inc
filds
cmpsl
lods
and
jmp
jl
pop
cmova
jo
xchg
repnz
data16
pop
dec
mov
xor
xor
adc
ret
push
mov
xor
outsb
dec
sbb
sub
adcl
ja
cmpsl
push
hlt
push
daa
cmpsb
push
mov
insl
or
daa
int3
arpl
ja
cltd
in
mov
push
xor
xchg
jl
and
mov
jmp
shr
adc
jmp
mov
repz
cmp
xchg
dec
pusha
or
dec
loope
xchg
cmp
daa
mov
test
loopne
imul
ret
jg
push
test
xor
adc
movsb
lock
fisttpll
cmp
cmpsl
mov
inc
xchg
jbe
pop
cmp
lcall
xchg
jnp
pop
repz
dec
mov
dec
push
or
lahf
or
mov
fwait
clc
sub
bnd
das
or
xlat
rol
repnz
dec
lods
mov
inc
and
mov
fidivrs
stos
and
shl
inc
rorl
mov
movsl
jbe
rclb
push
popf
jae
pop
inc
push
push
mov
push
jbe
je
push
lret
rcrb
aas
lret
and
or
sbb
mov
imul
sbb
cmpsb
imul
add
cmpsl
jge
ret
xchg
dec
ret
pop
pop
add
lea
insb
jg
jae
fdivrp
gs
nop
sub
xlat
sbbl
fwait
js
dec
cli
xorl
daa
sbb
dec
sub
loop
push
bound
jmp
cmp
orl
pop
pop
fsubl
in
mov
xor
push
js
outsl
lahf
and
sub
mov
push
imul
fcompl
pop
inc
or
lods
js
ret
dec
rcl
cmpsl
popf
jmp
xor
mov
fiaddl
or
sub
jmp
sub
sbb
cmpl
stos
hlt
jae
lods
jo
mov
lods
inc
add
xchg
inc
addb
leave
xor
xchg
push
fmul
mov
insb
cmp
inc
mov
cmpsl
pop
pop
in
enter
cld
nop
cmc
dec
pop
mov
cmpsb
add
in
add
pop
into
out
lea
xchg
cmp
decb
inc
mul
mov
pop
dec
lcall
inc
mov
sub
jmp
in
not
pushf
inc
xor
adc
cld
mov
dec
mov
push
inc
arpl
pushf
sbb
adc
hlt
mov
cwtl
and
jmp
pop
dec
xlat
adc
cmp
testb
aam
sub
sbb
sbb
inc
and
out
inc
push
in
push
call
in
pop
jle
gs
lds
psubq
sbb
insl
jne
xchg
call
and
inc
loop
fistps
sbb
push
xlat
dec
iret
repnz
lcall
inc
push
sbb
inc
dec
mov
stos
or
dec
xchg
mov
xor
jp
mov
inc
jl
and
and
jl
repnz
cltd
mov
test
sub
mov
jp
repnz
ss
ljmp
and
pusha
cmp
or
nop
pop
lea
xor
lcall
outsb
outsl
or
in
dec
sbb
loope
stos
or
xchg
add
and
ljmp
ds
rorb
push
push
cmc
xchg
dec
orb
jae
leave
push
xor
xor
icebp
lds
add
cmp
push
call
dec
mov
out
push
fisttpll
pushl
mov
insl
jl
add
or
add
jb
jbe
and
dec
jnp
popf
addr16
loop
cltd
ja
mov
xor
inc
cli
sub
dec
mov
jl
imul
cmpsl
and
pop
and
push
sti
es
mov
inc
xchg
pop
mov
mov
sbb
mov
or
jno
repnz
mov
push
adc
cs
stos
sub
popa
and
mov
inc
pop
dec
dec
cmc
fwait
ret
frstor
sbb
jo
enter
mov
outsb
in
mov
pop
loopne
pop
cld
iret
sbb
or
mov
dec
outsb
xchg
jno
push
rcrl
mov
mov
data16
addr16
gs
push
or
fbstp
std
xchg
jle
jmp
dec
loope
xchg
lcall
xor
pushf
testb
orl
xchg
xchg
dec
iret
repz
mov
out
or
pop
sbb
mov
fnstenv
add
and
clc
cmp
dec
stos
cmp
loop,pt
inc
mov
es
sbb
fisttpl
daa
pop
movsb
std
pop
pop
and
iret
mov
test
das
jne
and
aaa
movsb
pop
js
jecxz
sub
sub
cmpsl
in
xchg
and
push
jp
mov
in
imul
mov
test
jnp
adc
sbb
insl
push
pop
enter
cmp
pop
cltd
arpl
test
shll
hlt
cld
adc
repz
mov
and
mov
xchg
sbb
cmp
and
push
inc
movsb
pop
leave
xor
iret
jge
sub
rorl
data16
jmp
lock
pop
pop
pop
adc
add
mov
fisubrs
addl
cltd
shlb
jg
mov
or
daa
insb
jb
and
in
std
loop
inc
sbb
mov
or
mov
dec
adc
inc
xchg
pop
adc
mov
arpl
cmp
push
or
pop
pop
jb
pop
add
xchg
loopne
lock
xor
not
cmpsl
fcoml
xchg
xor
sub
cmp
cmp
push
ds
fwait
call
xchg
cmp
popa
push
push
lahf
adc
push
in
mov
neg
mov
call
fdivrl
cs
clc
sbb
data16
pop
aaa
push
mov
add
mov
fwait
xchg
add
cltd
mov
jp
fisubrl
int
dec
out
sub
scas
dec
jbe
mov
mov
sti
mov
mov
sub
rcr
js
rolb
pop
and
fildll
lea
jg
ds
push
insb
jmp
sub
push
fidivrl
in
mov
jecxz
orl
jo
jnp
scas
add
hlt
int3
loop
fldl
or
aas
ret
cltd
add
cmp
mov
mov
xchg
lds
in
scas
fsubl
pop
jmp
mov
mov
ret
repnz
pop
in
fdivr
push
push
and
push
mov
jl
xor
pop
xchg
test
fidivrl
ja
cmpsb
mov
jl
aaa
and
fistpl
push
pop
mov
lods
jo
loop
sbbl
js
pop
dec
or
push
loopne
inc
dec
test
popa
or
out
xchg
jae
mov
jae
lds
dec
xor
add
mov
sti
cmp
mov
divl
jo
clc
xor
add
cmc
push
repnz
xchg
jne
xchg
lods
pushf
stos
outsb
pop
dec
and
xchg
in
mov
popf
lcall
test
add
mov
mov
inc
pushf
icebp
adc
cmp
mov
fistpll
andb
mov
xchg
cmp
pusha
fistpl
not
push
jnp
mov
ljmp
fcomps
mov
add
and
in
jno
lods
fdivrl
adc
imul
inc
loopne
jge
psubb
sub
mov
mov
xchg
movsb
lods
bound
pop
and
jno
stc
xchg
cmc
adc
jmp
inc
pop
sub
add
aas
push
into
adc
cltd
jg
movsl
aam
ljmp
xor
xorb
fistl
adc
stc
sbbb
jae
jns
shlb
pop
pop
sub
and
out
mov
mov
out
cmp
jne
sub
jmp
dec
sub
fstpt
int
lret
mov
push
push
jno
jp
sub
xchg
out
cmp
aas
packsswb
out
ljmp
fidivrl
into
push
mov
push
mov
xchg
clc
stos
lret
and
add
jecxz
push
daa
ret
test
xchg
imul
loopne
outsb
repnz
shrl
pop
pop
out
pusha
imul
and
sub
pop
jecxz
std
dec
les
jno
xchg
cltd
jne
loope
jns
mov
dec
mov
mov
idivl
mov
cmp
push
xchg
pusha
and
aas
loopne
loope,pt
sbb
push
adc
std
jp
jb
xchg
jg
or
daa
push
pop
icebp
dec
cli
mov
pop
incb
sbb
push
mov
shlb
mov
lea
sbb
int
sahf
mov
xor
sub
fucompp
add
jle
add
std
into
or
stos
inc
subb
pop
fs
cmpsb
sub
adc
inc
ds
ffreep
testb
rolb
mov
cld
pop
mov
pop
das
xchg
jmp
aaa
jno
js
enter
add
adc
inc
push
out
mov
mov
mov
cwtl
fidivrl
popf
mov
shll
lahf
scas
and
rolb
jmp
in
jg
push
mov
jge
cmp
in
test
icebp
daa
pop
out
ss
xchg
rsqrtps
inc
nop
jg
pop
dec
pushf
xor
pop
hlt
push
sbb
inc
je
or
pop
imul
mov
test
pushf
adc
cmpb
ljmp
mov
inc
test
out
faddl
sbb
xchg
int
imul
adc
imul
popa
das
insl
popf
mov
out
lret
mov
call
cwtl
push
sti
adc
clc
test
cmpl
jo
es
or
popa
pusha
inc
pop
int3
pushf
mov
mov
iret
cmpsb
insb
or
std
or
xchg
movsl
jns
jg
popf
jnp
push
jmp
inc
mov
aas
mov
and
inc
sbb
cmp
jp
pop
push
or
sbb
xor
inc
and
jns
imul
popf
push
pop
mov
jp
fidivrs
or
push
ret
dec
popf
into
dec
push
leave
testb
mov
pop
mov
xchg
mov
ret
fstpl
dec
cmpsb
jmp
ret
ja
lea
and
inc
jno
orl
js
fcomp
cs
inc
inc
dec
roll
bound
add
loope
pop
push
mov
pop
je
or
dec
jae
xchg
push
adc
mov
sti
pop
dec
xchg
ljmp
out
sarb
cmpsb
mov
and
pushf
xchg
sub
cmp
mov
mov
lcall
pop
push
stc
cli
fwait
inc
ds
in
dec
cmp
xchg
add
enter
dec
pop
test
xchg
pop
lds
jmp
mov
and
adc
adc
inc
push
push
and
idivl
test
jbe
movsb
ss
xor
imul
std
xchg
notl
lret
push
clc
jns
mov
pop
shrl
xor
inc
mov
stos
and
jle
loop
pop
subb
repz
mov
inc
add
sbb
pop
andl
push
pop
test
xor
fbstp
mov
popf
sub
and
out
stc
pusha
test
dec
mov
stos
inc
dec
lds
imul
sbb
cmp
scas
sub
inc
pop
jmp
cmc
xor
ljmp
test
enter
jns
ja
push
sub
push
aad
movsb
or
cmp
iret
iret
stc
xchg
sub
jg
fcmovu
add
pop
hlt
lcall
dec
repz
mov
mov
xlat
push
jno
out
mov
dec
pop
push
cltd
loopne
dec
adc
jl
xchg
outsl
pop
adc
mov
js
dec
ljmpw
pop
out
fbstp
shlb
iret
das
dec
or
cmp
xor
jb
ja
addr16
dec
add
stos
pop
gs
stos
lahf
or
add
dec
rcr
mov
or
sti
in
mov
inc
movsb
xor
mov
pop
and
cpuid
sbb
test
insl
lds
xor
inc
or
lods
fwait
add
das
into
pop
idivb
imul
pop
movsb
inc
in
xchg
and
xchg
sub
lea
lcall
std
push
and
dec
sub
push
mov
ret
stos
push
fistl
or
pop
mov
add
out
jae
cmc
or
xor
push
outsl
pop
movsl
mov
cli
mov
aas
ss
push
jb
lret
mov
out
ret
pop
test
out
bound
incl
xchg
scas
leave
dec
pushf
movsl
push
pop
sbb
sbb
and
pop
xor
je
pop
rorl
popf
cmpsb
js
pop
into
shrb
std
mov
adc
mov
jmp
xchg
or
xor
int
imul
adc
sbb
mov
sbb
aas
aas
maskmovq
divl
cmpsl
dec
add
dec
stos
test
imul
jns
daa
push
inc
push
fwait
lea
mov
push
int3
push
ret
push
jge
mov
ret
dec
inc
jo
fiadds
xchg
es
inc
sub
pushf
xor
sub
inc
xor
xchg
pop
test
mov
je
rorl
jmp
leave
dec
pop
test
sub
loopne
shlb
push
inc
cmp
jne
jp
push
pop
inc
lcall
mov
dec
adc
sub
push
fldcw
out
fwait
jmp
xor
sub
push
arpl
in
jl
or
imul
aam
cmp
fisubs
cmpsb
inc
shl
jp
jmp
add
popa
jge
jmp
xchg
fstl
cmp
mov
popa
mov
inc
lods
int3
in
fdivl
jns
cmp
mov
movsl
dec
imul
xchg
mov
mov
lock
data16
add
mov
push
mov
rorb
add
gs
int3
mov
out
insb
and
cmpsb
repz
push
dec
pop
cmp
mov
sub
pusha
xchg
add
jne
adc
or
mov
or
inc
jmp
jp
ret
sbb
mov
lock
mov
out
push
push
or
lcall
aaa
dec
ret
ss
cli
lahf
inc
lods
dec
mov
insb
test
push
outsl
test
ljmp
push
es
scas
shl
stc
add
sub
setge
stos
fcomip
or
clc
std
aas
sbb
das
call
xchg
frstor
mov
dec
data16
mov
dec
lret
mov
lahf
sub
out
popa
jnp
xor
xor
outsb
pop
mov
in
enter
pop
adc
xchg
xchg
popa
mov
mov
movsb
lods
lds
mov
cmp
xchg
lods
call
inc
ja
sub
shr
jmp
arpl
fwait
xor
cmp
bnd
sub
cmp
leave
push
movsb
cmp
hlt
push
aam
cmpsl
mov
xchg
dec
insb
or
xchg
test
or
in
add
cmc
outsb
sbb
fwait
daa
into
push
dec
ret
mov
mov
sub
jno
jle
cmpsl
fs
sbb
xor
add
mov
lret
popa
aad
inc
xchg
insb
out
jmp
stos
in
push
mov
cmp
cmp
mov
xchg
aaa
mov
shl
in
out
adc
stc
push
bound
pusha
add
inc
fucompp
shll
xor
jge
pop
repz
je
lods
fnstcw
test
xor
test
xor
insb
mov
pop
out
icebp
repnz
pop
xor
ret
loopne
test
scas
pop
adcl
sbb
rcrl
jb
mov
mov
xchg
mov
rol
jno
lret
push
bound
sbb
popf
sub
pop
jp
xorl
pop
sahf
push
imul
mov
ss
fiadds
push
pop
pop
pop
dec
cwtl
push
jp
xchg
dec
and
bsf
jbe
pop
add
mov
jae
pop
mov
cmp
xor
adc
push
mov
fbld
data16
cmp
notb
insl
pop
sbbl
xchg
adc
mov
out
and
mov
or
pop
dec
stc
xchg
in
lcall
push
lock
cs
push
movsb
aad
mov
mov
jmp
and
add
imul
cld
lds
jb
lret
cmp
push
sub
cmpsl
add
jae
pop
cmp
in
sbb
sbb
push
insl
jmp
mul
inc
cmp
dec
add
inc
jl
or
leave
push
xchg
orb
repnz
mov
rcrl
sarl
pop
jnp
mov
pop
adc
test
mov
fld
sbb
ds
notl
mov
ja
add
add
pop
call
shlb
mov
cmpsl
ds
int
dec
mov
mov
in
adc
in
jae
sbb
test
xchg
or
jp
cmp
add
xlat
sub
mov
jae
inc
dec
cld
out
and
in
xlat
mov
sahf
lcall
pusha
jmp
add
call
mov
fbstp
jns
ret
ljmp
mov
dec
sti
push
add
cli
insl
data16
push
loop
lock
dec
inc
xorl
jge
dec
dec
mov
sub
out
stos
daa
rcll
jae
pushf
or
pop
push
std
sarb
daa
pusha
loopne
test
and
jo
pop
test
andl
mov
push
add
leave
out
jg
hlt
mov
push
mov
hlt
and
jle
mov
cmc
lods
cmp
cwtl
aam
test
mov
mov
mov
lret
andb
xchg
xlat
xchg
rorl
lods
movsb
cli
jecxz
icebp
stc
lods
pop
subb
or
mov
push
iret
jecxz
dec
mov
pop
out
push
sub
mov
xor
jo
sbb
sbb
mov
cltd
shl
jmp
aad
jns
les
rcrb
mov
arpl
fdivrs
pop
rorl
call
inc
jmp
or
cld
sti
push
jae
sub
sub
in
sbb
mov
xor
aaa
stos
js
and
jnp
xor
or
jg
adc
push
adc
xchg
add
insb
jl
int
push
push
mov
in
xchg
push
inc
scas
ret
xchg
or
out
mov
push
pop
add
sahf
pop
push
dec
out
stos
movsb
jle
inc
in
rcll
aas
pop
cmp
stc
pusha
push
rorl
xor
aaa
bound
js
sub
out
mov
mov
jne
and
dec
pushf
imul
loope
enter
jno
jne
addl
and
cmp
xor
xchg
je
aaa
xchg
out
or
rclb
mov
jg
enter
es
int
cli
xchg
inc
in
outsb
fs
insl
xchg
sbb
jo
dec
pop
and
loope
cmpb
mov
pop
inc
xchg
clc
adc
and
fistpl
pop
ret
cwtl
je
arpl
test
aas
out
and
movsb
xchg
sbb
xchg
jno
repz
dec
sub
dec
mulb
xor
rcll
cltd
aas
inc
andb
stc
xchg
nop
inc
jl
sub
jns
pop
icebp
sahf
add
mov
aam
jns
fwait
push
add
bound
jo
cs
adc
mov
arpl
push
insl
xchg
or
fistpll
add
js
icebp
stc
sbb
inc
ret
sbb
roll
test
pop
pop
add
je
gs
mov
scas
xor
xor
cmp
and
sbb
stc
lret
mov
push
inc
mov
call
mov
orl
out
aad
jle
stc
mov
jg
inc
out
jns
movsb
cmp
adc
cltd
jmp
fldcw
add
push
mov
test
cmp
arpl
jno
jb
pop
testb
lret
pusha
int3
and
addr16
lea
cmpsb
push
or
movsb
adc
outsb
cs
lahf
cs
and
add
loop
xor
add
ret
mul
fwait
popa
aas
and
addb
dec
inc
xlat
ret
sub
lret
lahf
pop
mov
push
add
cmpsb
jns
stos
xchg
es
fwait
fs
cmp
sub
mov
call
aaa
stos
test
push
stos
subb
mov
insl
cmp
je
xchg
jne
aas
add
outsb
or
push
mov
push
mov
pop
faddl
mov
fxch
shll
js
mov
sahf
in
sub
jnp
and
add
movsb
mov
fbld
and
jg
xorb
sbb
and
lods
arpl
inc
or
fwait
mov
mov
xchg
cmp
mov
sbb
sub
xchg
mov
daa
lock
dec
adc
xchg
jne
mov
dec
loop
or
scas
loopne
pop
cwtl
in
cli
cmp
into
aaa
pop
std
fildl
adc
jbe
pop
mov
xchg
xor
cmp
adc
jge
pop
mov
rcrb
mov
push
push
addr16
dec
adc
xor
shrl
movsl
pop
in
xor
add
testb
push
js
lock
pop
test
lods
adc
xchg
rclb
fs
aas
push
dec
iret
sbb
xchg
pop
es
scas
lock
sbb
add
push
pop
enter
sub
dec
outsl
add
jb
fmul
and
mov
push
les
inc
sub
sub
and
dec
mov
pop
dec
jo
ret
fisubrl
and
jo
imul
add
cwtl
bsf
cli
fwait
inc
or
mov
enter
dec
int
ss
lahf
xchg
xor
insb
xchg
repz
hlt
xchg
scas
and
clc
xor
inc
sbb
pop
aas
aad
adc
sub
lea
div
adc
dec
sbb
push
mov
out
cmpsl
lcall
clc
jg
inc
test
jo
cli
fwait
iret
add
int
lds
dec
xchg
minps
lcall
cmpsl
mov
inc
enter
scas
inc
xor
inc
repnz
add
xchg
mov
or
movsb
rolb
xchg
lock
push
jge
cs
xor
std
cltd
pop
cmp
aam
inc
orb
hlt
les
imul
loopne
xor
loop
stc
mov
adc
fists
jl
mov
ret
or
adc
hlt
insb
mov
js
add
and
aas
bound
movsb
xchg
jg
clc
mulb
cmpsl
mov
lret
dec
negb
jg
cmpsb
insb
mov
lcall
je
sbb
pop
sbb
bound
mov
imulb
dec
mov
int3
mov
lods
pop
inc
popf
sub
push
ljmp
add
out
dec
test
imul
xor
jl
aad
add
inc
loop
addr16
mov
and
enter
sar
mov
into
xor
shlb
push
sub
test
adcl
mov
cwtl
push
or
mov
mov
cmp
xchg
pop
sbb
out
decb
std
scas
clc
out
loope
lock
pop
cmpsl
outsl
jb
push
push
inc
xchg
mov
cld
adc
cmp
outsb
mov
aas
out
out
sub
dec
xor
push
or
push
mov
shlb
leave
rcll
mov
mov
fstpl
mov
testl
shlb
inc
sahf
shl
pop
repnz
xor
jecxz
cmp
jne
and
push
nop
sub
cs
movsb
push
lea
xchg
and
dec
cmp
sub
mov
xchg
repz
mov
pop
shrl
pop
test
cmp
cmp
int
jb
jae
mov
dec
in
jle
out
push
icebp
inc
loope
clc
jns
cmpsb
cmp
jns
out
jle
add
enter
sbb
ss
in
xchg
pop
xor
xlat
pop
mov
loopne
shll
sbb
mov
jmp
dec
fstl
out
in
xchg
and
xor
rcll
arpl
mov
pop
std
in
mov
xchg
push
inc
fwait
mov
shrl
jno
or
xor
dec
sub
inc
mov
in
lods
push
dec
ficomps
cld
sbb
xchg
lock
cmp
out
ret
push
xlat
out
pop
and
dec
jge
and
xor
xchg
mov
xchg
je
push
mov
xchg
inc
xchg
sbb
icebp
cmp
mov
mov
movsb
sahf
out
cmp
inc
jl
in
inc
push
cmp
mov
dec
rol
enter
lock
pop
stos
sbb
insl
xor
push
out
xchg
jmp
sahf
popa
add
sub
mov
fstps
mov
in
fs
pop
insb
mov
pop
jl
mov
mov
out
jecxz
lret
push
in
mov
mov
xchg
lods
leave
outsb
inc
addl
pop
and
or
jbe
daa
in
push
sbbl
inc
clc
adc
fldz
test
lock
outsl
loope
outsl
xchg
mov
jbe
clc
cli
push
nop
dec
push
jno
pop
cld
push
xor
sar
shll
cwtl
outsb
cld
js
adc
jo
je
dec
cld
jnp
jl
and
push
data16
sub
shr
fstpt
shrl
adc
sbb
pop
xchg
inc
rclb
jb
adc
mov
mov
cmp
mov
push
ficompl
mov
or
adc
test
jge
test
ret
lock
div
imul
pop
mov
fisubs
cmp
cmp
dec
out
out
lahf
cmc
in
icebp
or
push
clc
cmp
mov
push
outsl
add
scas
ljmp
clc
fwait
xchg
cmp
arpl
cli
adc
sbb
repnz
sub
dec
mov
xchg
adc
das
cli
jne
and
das
jecxz
cmp
loop
test
pop
add
inc
and
rcrl
std
sahf
or
out
subb
jecxz
icebp
add
and
jne
cli
push
popf
and
push
or
sub
mov
sbb
loopne
dec
mov
lock
mov
out
in
dec
out
shrd
mov
arpl
icebp
loope
mov
mov
test
adc
outsb
xor
sbb
cmpb
into
xchg
ss
lods
pop
pushf
dec
ret
and
xorb
sub
repz
jnp
scas
arpl
nop
insb
xchg
adc
mov
daa
sub
xchg
popf
lock
push
loop
dec
bound
or
jae
lds
mov
or
inc
fidivs
and
orps
fwait
jne
inc
sbb
outsl
xchg
lcall
movsl
lret
shrb
adc
sbb
and
sbb
das
sbb
std
je
cmp
ljmp
lds
xchg
into
mov
adc
pop
iret
fs
hlt
or
std
dec
push
in
sub
or
xor
stc
or
or
ret
out
into
fucom
cmpsl
adc
stos
mov
fst
mov
rorb
movsb
subl
add
daa
dec
mov
dec
dec
push
notb
stos
divl
enter
inc
mov
pop
xchg
fildll
std
xchg
dec
and
mov
push
or
push
mov
push
scas
mov
js
mov
mov
jle
sbb
xchg
or
sti
pop
ja
inc
gs
andl
jno
mov
cld
mov
dec
cmp
dec
push
jecxz
fcoms
xchg
push
push
add
jle
rorb
sbb
mov
mov
or
or
fs
ja
iret
dec
cmp
xchg
pusha
cmp
xor
or
inc
xor
xchg
dec
push
mov
insb
add
xlat
daa
or
push
pop
mov
ds
cmpb
test
mov
or
mov
es
fwait
out
jmp
jns
add
pop
imul
test
jp
out
cmp
popa
cmpsl
xor
mov
stc
test
inc
and
sarl
cs
mov
popa
mov
ljmp
mov
aam
pop
rcrb
fimuls
fiadds
mov
sbbl
fbstp
dec
push
fidivrs
fwait
and
inc
xlat
out
push
mov
iret
mov
mov
iret
mov
movd
add
icebp
xchg
cltd
jg
pop
adc
cltd
loopne
jbe
fcompl
jne
add
adc
dec
sub
adc
mov
aad
dec
inc
xor
add
sub
pop
addr16
leave
jb
cld
and
push
daa
jg
fs
inc
mov
js
cmp
mov
pop
mov
mov
arpl
popa
fucomi
and
les
aad
sub
sbb
or
popl
jne
gs
pop
push
inc
cmp
push
mov
stos
outsb
mov
dec
jmp
cmp
mov
sub
lock
testl
inc
repz
dec
test
stc
cmp
cmp
push
mov
dec
xlat
dec
sbb
loope
push
jmp
jne
cmp
shlb
pop
fsubr
int
mov
sti
bound
lea
out
mov
inc
mov
or
xchg
shlb
inc
sub
shrb
nop
js
imul
das
mov
dec
cmp
loop
ret
popa
xchg
loope
mov
dec
mov
cmpsl
mov
add
sbb
daa
test
outsb
push
mov
in
jl
imul
lods
addw
ret
in
aas
mov
sub
push
test
push
test
dec
jne
xor
or
je
aaa
cmp
mov
aam
jecxz
out
jnp
mov
or
movsl
xchg
iret
cmc
es
imul
xor
scas
push
es
les
scas
mov
jnp
sbb
daa
add
jne
pusha
pop
divl
loop
outsl
dec
dec
xor
sbb
push
fbld
out
jecxz
xchg
arpl
pop
sbb
lds
jp
mov
adc
xorl
fiadds
jnp
pop
mov
out
xchg
xor
flds
popa
inc
push
jnp
cmp
test
push
pusha
adc
jns
push
imul
dec
pop
insl
or
jp
lahf
nop
movsb
jecxz
scas
sbb
sbb
jecxz
mov
add
cmc
push
loope
mov
pop
imul
adc
setnp
fistpl
mov
lods
xor
aaa
jne
adc
xchg
lret
inc
adc
push
out
frstor
push
add
or
notb
xchg
loope
sub
scas
aaa
inc
iret
repnz
push
mov
inc
sub
ljmp
mov
test
xor
test
aad
stos
sub
pop
mov
sub
test
fmul
dec
ret
dec
lcall
and
ljmp
test
mov
push
add
sbb
pcmpeqb
cmp
cld
lret
mov
aaa
sub
arpl
mov
push
test
dec
adc
lods
out
add
out
repz
mov
enter
dec
mov
mov
std
addr16
iret
add
jecxz
cmp
data16
insb
xchg
mov
xchg
insb
std
dec
sub
inc
sti
dec
xorl
imul
lret
insl
icebp
jmp
mov
loop
mov
add
ljmp
pop
aad
xchg
icebp
pusha
dec
push
dec
mov
mov
dec
and
add
jg
dec
dec
lods
xchg
pop
xor
ja
hlt
and
and
popa
cs
mov
fidivl
jae
mov
xchg
addr16
scas
lods
push
xchg
jge
push
xor
sarb
data16
xchg
fcoml
and
add
mov
lods
jge
xor
adc
lods
cld
gs
out
push
scas
adc
std
hlt
lea
shrb
jno
cld
jno
cwtl
les
movb
sbb
jnp
fistps
and
xchg
aas
mov
sbb
mov
cmpsb
into
or
adc
inc
cs
ljmp
mov
arpl
test
out
pop
jb
and
xchg
jle
or
mov
cmp
add
mov
push
mov
out
and
inc
dec
pop
pop
lret
or
cmc
call
mov
fcomps
push
inc
mov
testl
stos
out
insl
add
push
arpl
inc
add
inc
fcoml
jl
add
or
push
xor
imul
xchg
jg
mov
roll
add
cmp
pop
pop
test
sub
mov
inc
das
pop
mov
mov
daa
xchg
lret
xchg
mov
cmc
mov
scas
xor
push
inc
mov
iret
fmull
push
fs
sbb
sti
sbb
pop
fsubrl
dec
dec
lock
sub
cltd
mov
dec
js
inc
adc
fcmovnbe
pop
cld
and
rcl
stos
jbe
jno
mov
sar
xchg
sub
dec
inc
std
inc
je
in
scas
sbb
mov
mov
shl
pop
aas
sub
xor
lods
mov
push
inc
cwtl
aad
fs
push
xchg
push
push
pusha
and
jb
inc
pop
arpl
adc
cmpsb
lahf
cmp
add
mov
sbb
ljmp
loopne
xor
ljmp
mov
and
push
mov
imul
popa
lret
cmp
xchg
push
push
lahf
jbe
xchg
jg
pavgw
ljmp
ret
pop
push
mov
jl
fstl
fwait
jnp
mov
shl
dec
jne
and
fistl
testl
cli
ds
std
push
xchg
lods
pop
xor
mov
loope
pop
or
and
insb
pop
in
sub
add
mov
andb
xchg
xchg
sub
pop
adc
cltd
push
lea
mov
stos
pop
adc
dec
clc
in
test
inc
pop
mov
cmp
mov
and
movsl
sti
or
cmpb
sbb
dec
pop
cmpsl
insb
or
insl
lcall
pop
sub
mov
dec
outsb
loop
dec
push
adc
addr16
mov
mov
data16
andl
sti
xlat
nop
iret
jae
bound
or
pop
push
sbb
sbb
pop
fnstsw
data16
cli
imul
pop
les
pusha
mov
or
xchg
adc
dec
ja
jp
fnstcw
add
mov
sbb
ret
test
mov
cmc
push
loopne
dec
es
add
mov
stos
ljmp
add
dec
cwtl
ljmp
pushf
and
sarl
fdivl
and
add
mov
cmp
pop
and
pop
dec
pop
xchg
cmp
xchg
xchg
xor
rcrb
into
mov
scas
push
out
sub
andl
xchg
inc
jmp
dec
xor
mov
decb
xchg
dec
dec
cmp
push
outsl
mov
jecxz
push
repz
sbb
pop
inc
mov
xor
call
cmp
or
loop
jbe
pop
loopne
lods
dec
jno
je
inc
dec
or
xchg
imul
bound
jmp
jne
sbb
jno
adc
lret
cmpl
adc
adc
cmpsl
xor
int
aad
aad
rcrb
and
shrb
pop
or
sbb
pop
cltd
daa
xorl
ljmp
jno
cmp
sarl
outsl
daa
pop
dec
jnp
or
test
stos
rorl
inc
mov
inc
lds
fucomp
mov
repz
out
in
cmp
repz
movsl
gs
aam
adc
dec
insl
rcrl
xor
push
into
jg
mov
or
cmp
xor
rcrl
jg
lcall
es
inc
xchg
mov
or
xchg
insb
xchg
push
mov
jne
push
cmc
dec
movsl
sub
pop
inc
or
mov
or
adcl
or
jp
or
das
cmpsb
xchg
data16
repnz
test
pop
insl
data16
imul
adc
mov
xor
test
movsl
pop
rolb
jbe
inc
jl
movsl
dec
add
es
mov
daa
inc
in
inc
pop
idivb
pop
sbb
jl
inc
dec
fldt
sub
cmp
xchg
push
rcll
add
addr16
dec
push
xchg
and
add
mov
sub
aam
scas
ss
dec
leave
leave
out
pop
aaa
xlat
inc
loopne
lahf
into
xchg
sti
mov
adcb
ss
or
jne
pop
loopne
mov
repnz
jae
lods
add
test
sbb
mov
mov
iret
jmp
dec
sbb
leave
jae
lahf
imul
or
loop
xchg
adc
lcall
lods
or
sar
ss
adc
shll
outsl
movsb
dec
sti
sub
mov
cld
inc
mov
ret
lahf
or
mov
dec
add
ljmp
repz
bound
mov
lret
rolb
dec
std
ljmp
inc
aaa
inc
std
imul
out
popf
push
imul
aas
sub
in
dec
ss
popf
push
jge
push
dec
lret
out
mov
pop
gs
xchg
subb
mov
sub
xchg
push
mov
ds
dec
pop
and
pop
xchg
xor
jns
mov
bound
mov
repz
adc
or
popf
in
or
mov
divb
xor
rorb
adc
filds
dec
in
and
jecxz
bound
fldl
iret
rclb
or
in
out
cmp
pop
out
cli
add
xor
cltd
pop
lcall
and
mov
mov
sub
xchg
and
fs
clc
add
adc
adc
out
fsubr
cmp
lods
dec
xchg
adc
mov
scas
out
out
jecxz
gs
jb
fadd
cmpsb
xchg
call
mov
int3
mov
inc
popa
mov
add
adc
div
mov
loope
divl
xor
ds
inc
push
sbb
jae
shrl
flds
mov
mov
xchg
loope
scas
loope
sbb
aad
je
sbb
fs
pop
sub
xor
pop
imul
lahf
xchg
cmp
roll
xchg
dec
inc
fincstp
jg
jne
inc
js
rclb
lret
and
aad
mov
xchg
fs
mov
lret
jmp
cmp
jmp
sub
mov
ja
and
out
inc
adc
lods
xchg
setbe
test
and
fstps
popf
jmp
shr
aad
iret
push
loopne
cmp
outsb
and
jmp
js
imul
dec
scas
in
adc
mov
push
fs
pop
pop
pop
xchg
shrb
sub
psubsw
cwtl
lcall
sbb
cmc
divb
adc
icebp
cmp
sub
outsl
leave
or
push
mov
dec
mov
stos
xchg
aam
sahf
sub
call
mov
jmp
cmp
psrlq
cmc
cmp
sbb
dec
imulb
and
adc
mov
mov
jp
jmp
repnz
mov
imul
lods
mov
cli
js
add
je
ljmp
jg
jo
aas
sahf
mov
sbb
mov
push
inc
out
lock
int3
adc
lods
push
mov
loop
data16
cmp
inc
in
xchg
rclb
push
mov
mov
adcl
mov
mov
daa
cltd
out
nop
cltd
inc
mov
mov
jb
mov
sbb
mov
cmpsb
inc
sbb
push
add
push
nop
adc
dec
push
pop
popa
or
scas
xchg
adc
invd
xor
or
dec
push
pop
loopne
insl
push
pop
adc
push
inc
nop
xchg
shrl
mov
sbb
rorb
xchg
adc
mov
lret
mov
ds
jmp
xchg
xchg
and
mov
pop
std
sub
popf
icebp
mov
adcb
idiv
dec
xchg
imul
push
push
jp
mov
lldt
sub
loopne
push
aad
and
jp
mov
and
jl
mov
std
or
cltd
jg
xlat
insb
call
iret
mov
mov
nop
ret
shrl
mov
or
enter
pop
pop
stc
insl
je
pop
cmpsl
pop
add
mov
xchg
hlt
mov
pop
mov
lahf
out
jle
adc
dec
push
or
enter
and
pop
mov
ret
arpl
sbb
dec
xchg
pop
add
push
sub
mov
test
stc
lahf
mov
ds
jecxz
jo
fidivrl
loope
es
adc
mov
pop
push
xorb
inc
mov
push
hlt
insb
sub
xchg
jmp
cmpsl
pop
lds
in
mov
inc
jnp
fisubl
test
mov
mov
jmp
pop
movsb
insb
jo
cwtl
sti
out
pop
jge
es
xchg
js
and
dec
icebp
xor
dec
adc
pusha
xchg
cltd
divl
jae
enter
cmp
dec
int
mov
jl
mov
xor
jmp
out
push
and
stos
or
mov
cltd
repnz
pop
mov
sbb
out
cmpsb
or
jbe
loopne
xchg
add
jmp
and
leave
push
fwait
lods
aam
mov
jb
xchg
inc
cmc
stc
shl
fwait
push
dec
enter
cmp
hlt
les
jmp
lahf
jae
and
fwait
sbb
push
mov
roll
jo
or
repnz
or
push
inc
es
pushf
dec
test
cli
cmp
jl
mov
jne
xor
inc
cmp
xlat
mov
mov
shl
data16
mov
add
out
roll
les
outsb
dec
adcl
cmp
mov
and
mov
out
shrb
stos
cwtl
stos
pop
hlt
in
jl
fistl
cmp
sbb
sub
movsl
mov
dec
and
xor
incb
sub
add
imul
stos
pop
mov
push
scas
xor
rorb
xor
jmp
inc
jns
sahf
out
insb
cmpsl
and
jno
sbb
dec
repnz
or
mov
adcl
pusha
pop
dec
mov
arpl
cmp
jecxz
inc
psrld
or
in
mov
lcall
push
push
sbb
add
loop
js
jmp
ret
or
out
rcrb
mov
and
sub
std
into
mov
flds
ljmp
and
xchg
ret
inc
add
loop
jp
dec
and
xchg
rolb
xchg
fsts
dec
cmp
fnsave
add
mov
push
arpl
out
js
xor
dec
mov
mov
adc
addr16
mov
inc
mov
jecxz
in
jne
fwait
lods
mov
xchg
je
shlb
jns
inc
repz
bound
pop
enter
add
pusha
insl
jge
xor
or
sbb
push
jl
call
dec
adc
insl
inc
mov
mov
push
adc
ja
aad
movsb
pusha
lock
jecxz
mov
movsb
outsl
out
push
ffreep
outsb
fucomp
ds
es
or
mov
sub
sbb
int
ficompl
out
cmp
loopne
js
dec
imul
xor
cmp
mov
add
adc
inc
cld
xchg
xlat
jb
cmp
dec
jge
sub
adc
pop
inc
xchg
xchg
sbb
xor
js
cs
aas
mov
xchg
mov
imul
push
inc
das
jl
cmp
sbb
adc
test
mov
push
lret
xchg
sub
bound
fildll
iret
fwait
cmpsb
fwait
pop
loope
test
mov
fwait
inc
pop
xchg
cld
cmp
adc
cltd
jnp
jb
add
cmp
rcrb
xchg
mov
inc
cmp
jmp
and
xor
pop
sub
mov
push
test
pop
ljmp
iret
mov
leave
out
or
rol
xor
and
or
aad
stos
subb
xchg
xor
sbb
rcll
ret
arpl
fldl
imul
addb
mov
loop
mov
add
je
inc
sub
ljmp
pop
jnp
and
cmp
fwait
mov
cmp
xor
mov
push
mov
shrl
cmpsl
stos
jg
or
cmp
shll
cwtl
popf
mov
leave
int3
scas
xor
jecxz
pop
adc
in
lods
in
push
jo
xchg
jne
mov
stc
cmpb
mov
mov
jb
push
ds
pop
sbb
sbbl
mov
test
out
and
xor
stos
and
cmc
and
testb
xchg
cmpsb
fs
push
fcmovne
icebp
xor
mov
aas
mov
push
out
ja
sahf
cmc
loop
mov
cvttps2pi
ret
dec
mov
sti
jecxz
push
orl
iret
mov
paddb
lock
mov
inc
xorl
sbb
shlb
cmpsl
xchg
rcrb
out
push
jbe
bound
in
ja
out
lret
mov
push
and
popf
jns
addr16
orps
mov
mov
push
pop
ja
test
test
mov
push
pop
push
dec
pop
fmuls
xor
lcall
loope
test
gs
lea
loop
jno
into
fs
mov
inc
dec
and
xor
xchg
xchg
outsl
es
lock
ret
arpl
test
jnp
adc
out
pop
mov
push
mov
test
shlb
sub
sub
dec
ss
enter
movsl
movsb
adc
aas
cmpl
enter
fcoml
iret
mov
pop
mov
cld
xchg
jbe
stos
sbb
adc
int
test
xchg
mov
add
add
cmp
xchg
nop
imul
jge
mov
push
idivl
mov
lret
and
stos
popf
mov
xor
cmp
sub
addl
lea
scas
cli
inc
test
sbb
fnstenv
xchg
mov
lret
sub
cmp
xchg
in
pop
mov
dec
repnz
pop
mov
jae
outsl
cmp
call
mov
ljmp
aam
mov
cmp
cli
sub
push
fdivr
mov
insb
fdiv
adc
icebp
sub
and
lock
cmpsl
add
and
ss
cmp
cld
push
sub
sarb
pop
xchg
or
testl
jmp
iret
insl
cmp
fsubrp
sub
arpl
dec
ss
sbb
lods
inc
push
jno
cmc
dec
popa
sti
loope
insl
subl
aad
into
cmp
rclb
mov
data16
aam
pop
sbb
cmc
adc
and
insl
fisttps
adc
mov
jecxz
dec
mov
mov
add
cmp
mov
pop
leave
adc
dec
xchg
mov
sti
aam
lret
pusha
mov
pusha
xchg
in
clc
push
cmp
fs
mov
out
push
imul
push
sub
adc
sub
mov
inc
cmc
lods
addb
xchg
out
shrl
insb
shll
or
sahf
imul
fwait
lods
loop
dec
ret
sahf
add
jno
and
cltd
xchg
pop
lock
mov
adc
xchg
jb
adc
mov
cmp
popf
mov
mov
cmp
sbb
loop
mov
mov
dec
imul
sub
arpl
dec
push
mov
out
int3
xchg
idivb
int3
aas
je
mov
hlt
lds
mov
inc
mov
adc
shrb
enter
stos
fwait
inc
pop
fstpt
arpl
adc
in
aas
js
jbe
xchg
pop
dec
call
xlat
pop
xchg
mov
popa
xchg
jecxz
jmp
pop
lods
into
ret
inc
xor
dec
mov
jge
cs
lds
mov
fdivs
dec
xor
jmp
adcb
mov
flds
dec
dec
sub
mov
cmp
cs
loop
lret
out
adc
lahf
jae
inc
cmpsl
jnp
out
gs
push
sbb
mov
repnz
ss
outsb
mov
sarb
mov
or
adc
scas
fistpll
sbb
dec
add
dec
mov
jp
mov
je
fxch
nop
js
mov
inc
jae
sbb
pop
add
jno
jne
push
hlt
adc
pop
and
cmp
adc
jo
sub
mov
mov
inc
enter
xor
jp
sub
addr16
dec
push
in
cli
sub
inc
cmp
imul
adc
sub
mov
and
jp
push
popf
addr16
push
orl
and
and
push
inc
mov
jns
ror
mov
mov
sbb
roll
jge
dec
test
pop
insl
and
mov
and
ja
mov
lret
xor
lret
mov
xchg
xchg
mov
sub
sahf
or
inc
jecxz
or
int3
or
arpl
mov
into
jns
ds
stc
cmp
inc
ja
jne
and
xor
jp
fdivrl
or
lcall
hlt
mov
dec
jl
loopne
dec
imul
fisubrl
mov
lret
or
stos
leave
sarl
and
cs
dec
repz
push
dec
or
dec
mov
divl
out
xchg
movsb
stos
outsl
imul
xchg
or
dec
cli
das
push
pop
cmp
adc
mov
inc
pop
out
sub
lds
inc
ficoms
jo
and
std
addr16
xchg
add
push
xchg
test
xlat
mov
cli
sbb
mov
dec
mov
repz
dec
fs
les
xchg
sub
add
mov
push
loope
push
mov
push
jmp
cmp
fadds
das
push
adc
jge
sub
aaa
sub
mov
or
testb
mov
xchg
sbb
xor
mov
and
xchg
aam
or
dec
into
add
aad
cmp
pushf
leave
dec
push
cmp
push
xor
mov
sti
xor
icebp
in
jae
pusha
rol
jecxz
frstor
leave
rorl
jmp
movsb
xchg
xor
aam
mov
fidivl
add
and
sbb
rorl
mov
xchg
lds
cmp
pop
xlat
das
add
mov
imull
pop
lds
sbb
jno
pop
mov
pop
xor
test
orl
das
mov
mov
lds
mov
nop
incb
or
dec
or
testl
in
push
mov
in
aad
nop
ret
or
sbb
pop
xchg
int3
inc
lea
push
pavgw
sbb
out
loop
out
push
xchg
xlat
or
test
jbe
mov
xor
lock
jge
pop
pop
xchg
ds
ficoms
pop
addr16
test
shrl
sbb
mov
inc
mov
fdivrs
or
push
push
pop
lret
dec
inc
or
jne
or
inc
shll
pop
inc
pop
cmpsb
std
mov
ljmp
jl
notb
decb
ljmp
lcall
loop
mov
dec
test
inc
dec
hlt
pushf
add
popa
and
add
xchg
fucomp
jecxz
add
add
push
cs
sbbl
mov
es
popa
sbb
inc
jp
or
xor
cmpsl
dec
shll
pop
out
ja
aad
fwait
mov
and
mov
add
je
inc
inc
jecxz
cmp
xchg
cli
inc
cs
inc
push
scas
out
xlat
mov
pushf
cmp
stc
scas
cmp
cmpsl
ret
xchg
or
in
cwtl
xor
mov
lret
push
ret
xchg
sbb
cmp
std
out
mov
loope
jb
inc
mov
sbb
xor
dec
cmpsb
adc
shll
shl
xor
jns
or
arpl
movsb
cmpsl
and
out
add
je
pushf
outsb
xlat
insb
and
inc
sbb
pushf
nop
mov
sbb
mov
pusha
dec
mov
xor
push
test
aam
gs
dec
cmp
push
jns
sub
adcl
dec
imul
lock
and
popa
dec
xchg
pop
gs
cmp
icebp
loope
dec
stos
gs
daa
cwtl
sub
out
cmp
in
jmp
bound
xor
sti
stos
pusha
jne
adc
dec
xchg
test
fildl
ret
pusha
inc
insl
imul
sbb
roll
xchg
cmp
and
lret
inc
mov
lcall
jae,pt
out
xor
lret
inc
sub
push
push
mov
mov
loopne
dec
fwait
inc
mov
adc
aas
pushf
jp
inc
in
aas
pushf
cli
mov
out
mov
jo
les
xor
insl
in
cmp
and
inc
sbb
cwtl
mov
xchg
imul
jne
sub
mov
jp
sbb
push
and
push
test
mov
aaa
jmp
pop
out
mov
sti
xor
test
add
fisubrl
roll
mov
fstps
repz
fmuls
out
popa
cmpsl
xorb
in
mov
addb
in
ret
arpl
sbbl
repz
insb
jns
cmp
mov
call
and
dec
xlat
pop
dec
sbb
in
jecxz
xchg
xor
mov
adc
xor
or
call
arpl
mov
or
scas
mov
mov
insb
ret
pop
dec
cpuid
rcll
aas
pop
in
fistl
sbb
adc
mov
inc
or
outsb
xchg
xchg
or
add
stos
fidivl
sbb
lods
lock
test
xrelease
lds
cmpsl
jl
xor
inc
pusha
lods
in
cs
into
inc
int
and
jae
ror
mov
sub
xchg
dec
lock
outsl
lret
popl
xor
sar
push
xchg
int
aaa
iret
in
rolb
cmp
hlt
imul
out
xor
sahf
fcomip
or
outsb
mov
iret
push
dec
mov
or
sbb
les
jne
mov
mov
sahf
push
fsubl
scas
push
push
es
outsb
pop
les
adc
mov
insl
mov
sti
xor
out
push
sti
cmpxchg
xchg
sub
xchg
in
push
or
jae
pop
repnz
mov
lock
movsl
mov
mov
cmp
das
fisttpll
stos
mov
mov
std
xlat
adc
repnz
mov
jle
sub
repz
nop
repnz
pusha
xor
stos
lds
sti
pop
add
loopne
jo
or
cmpb
and
jb
inc
adc
or
or
or
cmp
add
jg
int
add
inc
out
mov
ss
mov
adc
xchg
add
pop
inc
inc
insl
cmp
adc
stos
fcompl
dec
pop
jmp
in
cmp
jae
cld
add
add
inc
sbb
outsb
jmp
cs
fcoml
sub
pop
jns
jle
mov
stc
pop
mov
cmc
jb
mov
leave
mov
test
out
inc
outsl
fiadds
mov
adc
fistpl
xor
insb
inc
mov
sbb
jmp
mov
cmp
jge
dec
adc
jge
test
adc
frstor
pop
je
xor
xchg
adc
fwait
and
jle
push
pop
aam
push
lret
pop
jl
cmpsl
pusha
les
jp
push
add
or
or
pop
leave
sti
lret
push
fsubrs
pop
mov
inc
xchg
jp
adc
addr16
mov
cmp
xchg
or
adc
rcr
shlb
push
or
push
mov
adc
shll
mov
dec
jle
mov
mov
xchg
mov
lods
lret
mov
cmp
mov
int
xchg
ja
test
mov
dec
fdivrl
pop
cmp
popa
jle
jno
hlt
push
andb
je
das
shrl
jp
insb
cwtl
inc
mov
jbe
cmp
cli
testb
xchg
jl
xchg
int3
sub
jo
and
aas
push
cmp
jle
dec
enter
dec
mov
aas
dec
and
dec
mov
bound
jmp
stos
jle
repnz
sbb
pop
lods
mov
cmpsb
sub
sub
aad
mov
aam
iret
dec
xor
pusha
sti
dec
mov
in
jl
adc
shl
xor
std
jp
cli
test
lds
push
push
cmp
push
cmpsl
and
sbb
movsb
lods
cmp
nop
jnp
sbbb
call
add
or
lret
sub
xchg
push
and
std
gs
adc
lahf
cmc
sbb
aas
sbb
lret
mov
xchg
cmp
scas
and
stc
adc
fldl
imul
mov
push
cli
sub
and
xchg
leave
xor
enter
shlb
ret
mov
aaa
lahf
out
sub
dec
enter
daa
loop
call
mov
addr16
or
shll
and
std
addr16
jnp
inc
jmp
push
mov
pop
enter
inc
enter
inc
vcomisd
mov
xor
jae
jne
icebp
inc
xchg
jae
lret
or
mov
adc
movsl
push
xchg
out
jecxz
in
in
xchg
and
push
cltd
ds
iret
xchg
xor
cmp
fbld
sbb
div
jecxz
nop
jg
sti
push
mov
add
dec
xor
lds
ror
ds
dec
add
push
add
insl
jle
pop
push
data16
outsb
scas
xlat
xlat
sbb
movsb
add
and
add
rcll
test
das
xor
into
lock
loope
pop
xchg
fdivrs
fsubs
cmp
xchg
xor
ds
xor
mov
cmp
push
loopne
or
shl
push
xor
repnz
mov
push
xchg
jbe
and
and
cmp
adc
pop
cmpsb
aas
loope
adc
jmp
js
mov
pushl
lock
fbld
adc
xchg
fadd
dec
aad
je
inc
or
cmp
outsl
scas
inc
jmp
jp
hlt
inc
lea
inc
pop
xchg
ljmp
jno
jge
push
mov
das
or
sti
push
jno
shrb
aad
daa
hlt
mov
push
in
or
mov
push
or
cli
push
jo
mov
icebp
je
mov
jae
outsb
hlt
pop
insb
cli
adc
sub
lods
in
cmp
clc
adc
sbb
pop
inc
hlt
jns
adc
mov
sub
imul
aas
add
sbb
xlat
cmp
das
and
fsubrp
in
jbe
mov
out
dec
xor
pop
xchg
sub
mov
imul
push
sub
adc
ret
imul
pop
std
ja
frstor
adc
inc
mov
jle
mov
jo
add
popa
imul
cs
sbb
xchg
test
ja
cld
stos
and
cli
into
push
sub
push
aad
scas
in
icebp
out
adcl
inc
rcll
cld
jne
jae
sbb
rolb
ret
pop
das
xchg
aaa
xchg
out
sub
mov
imul
in
xor
loope
push
aas
stc
test
jbe
call
and
or
out
or
in
loop
cmc
or
aad
sbb
mull
movsl
sbb
es
cltd
aaa
jl
jbe
icebp
dec
insl
mov
iret
ja
fmulp
mov
push
dec
sub
fwait
add
mov
stos
sub
jle
inc
push
loope
incl
push
mov
je
mov
sbb
mov
insb
stos
orb
cmp
cmp
xor
push
pop
sub
push
loope
in
or
xorb
adcl
xchg
lea
sbb
mov
pusha
bnd
dec
xlat
les
pop
inc
call
pop
pop
ss
mov
pop
jbe
or
jle
addr16
sbb
push
pop
nop
jl
ret
cs
repz
mov
data16
xchg
imul
cmp
dec
jmp
mov
cltd
cmp
mov
mov
lea
aaa
xor
imul
mov
lock
clc
sbb
cld
xchg
sub
rolb
cmp
inc
ss
shll
jg
xchg
push
adc
insb
mov
and
adc
cmp
cmc
inc
mov
sahf
ja
jg
rolb
xor
popa
fdivrs
in
inc
aas
sub
dec
sbb
imul
rorb
cmp
psubw
push
cltd
pop
inc
mov
and
dec
in
cld
lret
test
push
imulb
jp
xchg
cmp
mov
enter
mov
xchg
push
divl
adc
enter
jmp
fcmove
enter
add
daa
adc
adc
add
adc
adc
movsb
mov
stos
pushf
cmp
adc
ret
movsb
shll
decl
cmp
sbb
movsb
shr
scas
inc
push
addr16
dec
adc
jle
insb
outsb
je
jp
push
mov
mov
pop
cld
pusha
in
pop
roll
jns
inc
fwait
xor
xor
mov
into
cwtl
lcall
xchg
xchg
mov
jae
enter
push
add
add
jmp
rcl
mov
sbb
jno
push
hlt
int
les
add
call
testb
adc
enter
adc
or
jp
sub
push
mov
jnp
ljmp
xlat
jo
adc
leave
xor
mov
xor
add
inc
sub
adc
adc
cmp
shrl
sbbb
add
jmp
jb
scas
jle
cld
add
sbb
fmuls
sub
push
xchg
sar
fnsave
repnz
into
jnp
mov
je
imul
jmp
push
in
jecxz
enter
xor
push
pop
fildl
nop
stos
lret
enter
adc
sub
orl
jl
xor
push
mov
mov
cmp
out
inc
test
nop
pushf
nop
dec
popa
imul
sub
js
fisttpl
sbb
sub
xchg
jbe
xor
xchg
adc
mov
sub
rcll
push
mov
clc
push
aaa
in
dec
loopne
jmp
jb
xchg
mov
popf
dec
stc
lock
xchg
push
call
out
mov
cmpb
ret
ret
mov
inc
dec
mov
pushf
xchg
daa
cmpl
sub
in
mov
cs
stc
sbb
frstor
mov
fistpll
inc
pop
pop
stos
inc
jnp
ret
les
mov
dec
sbb
je
jb
popa
sbb
jle
sbb
jecxz
xchg
dec
pop
es
cli
push
clc
mov
psubsw
stos
ss
aaa
xchg
dec
fprem1
cmpsl
lods
movsb
lods
fdivrs
and
nop
fldenv
into
sub
mov
rol
inc
push
push
js
pop
mov
rcr
call
fbld
adc
fdivrs
rorl
and
fimull
pop
fsts
inc
push
cmp
shrb
jo
rcrl
inc
adc
inc
aas
lods
add
in
add
cld
lods
push
push
add
adc
stos
jmp
add
push
test
pop
inc
arpl
dec
jae
icebp
jo
movsb
ja
adc
adc
cmp
pop
mov
cltd
push
outsl
jle
push
imul
dec
mov
sahf
pop
cld
repz
aaa
rcr
xchg
xchg
stc
fsubrl
test
popa
xchg
dec
adc
pop
or
jp
jne
push
jb
sbb
cwtl
jne
arpl
inc
clc
repz
cld
insl
sti
sub
cmpsl
push
ret
into
dec
stc
add
push
sub
shrb
lods
mov
mov
cltd
push
aad
sub
xchg
mov
and
leave
repz
dec
or
scas
or
mov
pushf
negl
scas
sub
fldl
push
sub
ss
mov
aas
mov
test
ret
and
fimuls
or
mov
int3
cmp
addr16
add
dec
loop
rorb
lret
cmp
mov
or
imul
mov
xor
inc
imul
adc
inc
lret
xchg
dec
inc
and
js
mov
or
and
jo
sbb
adc
sti
cmpsb
rclb
inc
call
add
jecxz
lahf
stc
lret
fidivrl
sti
fisubs
fmulp
adc
cmpb
sbb
insb
sarb
xchg
data16
push
add
lahf
test
out
fstl
dec
push
jle
scas
xor
xchg
push
dec
pushf
ret
jb
dec
cmp
jb
xlat
xchg
or
imul
aas
adc
cmpsb
xchg
jb
notl
mov
iret
sub
or
popf
or
sub
lret
xchg
mov
sahf
mov
fcmovu
pop
cmp
rcrb
out
repz
push
scas
in
ret
xor
adc
xchg
mov
int
and
inc
jge
pop
sub
add
or
pop
mov
notb
push
mov
js
nop
out
in
aad
push
jo
inc
and
gs
adc
test
ret
pop
test
test
xchg
xchg
imul
popa
mov
adc
sub
adc
or
std
out
mov
ds
imul
adc
ds
add
jge
in
aam
sub
cmp
push
add
pop
xchg
lds
mov
jno
pop
int
sbbb
adc
mov
mov
cmc
ljmp
cmp
out
mov
pop
mov
inc
push
stos
mov
aas
cltd
movsb
mov
or
sbb
filds
das
arpl
mov
test
push
sub
and
jbe
push
or
stos
in
add
faddl
mov
or
sub
movsb
popf
or
mov
dec
mov
and
push
mov
shr
mov
subb
mov
inc
push
adc
pop
rorb
mov
adc
fcomip
out
imul
xor
jge
mov
pop
out
inc
sub
pop
sbb
loopne
jo
insl
cmp
jne
cwtl
pop
push
cmpb
pusha
add
mov
pop
xor
jg
out
jo
incb
sub
in
mov
dec
mov
push
or
movsl
pop
aas
jne
cltd
ret
loopne
sub
movb
fstpt
cmp
mov
hlt
add
add
mov
dec
add
xchg
sub
pop
inc
loop
out
das
stos
in
add
sbb
jnp
push
mov
xchg
lds
mov
div
scas
fistl
and
lds
jg
mov
xor
and
or
xlat
das
add
dec
mov
ja
or
or
or
out
jae
xor
push
mov
sarb
xchg
sub
pop
mov
cltd
dec
fcoms
sbb
or
cmp
test
cmc
inc
xor
rclb
fimuls
rol
or
lods
push
in
popa
inc
nop
ss
outsl
push
cltd
fsubrl
cltd
sub
pop
jge
xor
jae
bnd
outsl
jp
cmpsb
dec
pop
or
nop
lea
rep
mov
out
popf
leave
out
sbb
cmp
repnz
repz
xchg
lods
push
sbb
adc
sarl
fsubrl
xchg
in
cmpsl
test
movsb
dec
push
adc
sahf
adc
frstor
xor
mov
cwtl
jbe
add
cmp
dec
xchg
lds
iret
mov
mov
xor
call
outsl
sti
fildll
sahf
and
mov
cltd
pop
loope
fimull
in
jb
aas
sti
mov
push
push
lcall
inc
inc
inc
pop
xorl
in
jmp
enter
mov
aaa
lods
insl
adc
out
mov
insl
cmp
out
or
xor
jnp
inc
or
fnstenv
pop
imul
mov
pop
cmpsl
aam
sbb
dec
flds
cmp
rolb
add
pop
ror
push
xor
xchg
push
mov
xchg
pop
incl
push
sti
cld
out
stos
inc
popl
mov
imul
jb
xor
add
xchg
fsubs
add
scas
jp
mov
aas
imul
or
jg
or
dec
push
sub
test
jg
rcr
sbb
mov
xchg
xchg
lds
das
mov
movsl
mov
jns
or
dec
addr16
loopne
lea
pushf
xor
add
xchg
mov
in
test
push
sub
ss
fcmovne
lods
dec
or
cmpsl
inc
jno
jne
xchg
mov
push
inc
mov
mov
xchg
inc
loop
mov
adcb
jle
push
jbe
lret
mov
in
ret
mov
lds
dec
lea
adc
mov
xchg
cld
xor
add
pop
and
sti
mov
loopne
out
ret
test
out
lret
pop
mov
std
and
sbb
cmp
mov
into
test
mov
mov
inc
call
aam
cli
jno
repnz
inc
lea
dec
fldt
test
out
add
lcall
outsb
adc
sbb
in
lock
jnp
pop
div
fldcw
in
ja
mov
mov
push
inc
push
xlat
dec
fcoml
test
inc
iret
adc
enter
xchg
in
es
mov
enter
in
mov
pop
lock
xchg
dec
loope
enter
leave
push
pop
sub
mov
xchg
sub
data16
mov
mov
xchg
jns
in
into
sub
cmpsl
insb
movsb
xorl
pop
push
stc
pop
jae
fcmovnbe
sub
inc
out
jmp
pop
push
xchg
add
ret
out
sub
lea
inc
lods
ret
cmp
or
dec
das
dec
mov
xor
xchg
xchg
call
icebp
or
orl
sub
loope
lcall
mov
movsb
loopne
frndint
and
inc
decb
cs
call
add
js
mov
mov
cmp
sbb
xchg
dec
gs
pop
xor
pop
inc
pop
fistpl
pushf
movl
xchg
adc
mov
jl
bound
imul
lcall
pop
sti
or
cmp
inc
ss
xchg
sbb
js
dec
xchg
jne
pop
inc
in
xchg
ret
xchg
psraw
adc
inc
push
push
cmp
rorl
iret
ret
test
adc
scas
call
imul
mov
fdivrl
mov
pop
xchg
cmp
pop
mov
aas
jecxz
cmpsl
testl
das
lds
dec
sarb
cmp
pop
mov
mov
push
inc
movsl
lahf
sub
jns
sbb
repnz
fcomps
out
mov
sti
pop
xchg
scas
add
jmp
cmp
call
ds
and
addb
movsb
loopne
imul
js
ja
lahf
xor
stc
cli
push
dec
repnz
outsb
sbb
and
ds
movsb
in
xchg
jb
insb
sub
add
data16
and
std
inc
ss
icebp
icebp
stos
and
loopne
into
in
push
lea
mov
stos
hlt
cmpsl
movsb
outsb
push
lea
mov
adc
je
cmp
mov
rorb
sub
out
fldcw
inc
cmpsl
popa
xlat
int3
insl
mov
cmpsb
sub
and
xchg
and
sub
mov
inc
sub
inc
jl
fs
repnz
cmpsb
jmp
mov
test
lds
sbb
popl
js
cmp
mov
and
cmp
lock
add
mov
xlat
neg
inc
and
sahf
push
cmpsl
sahf
xchg
jo,pn
dec
aaa
cwtl
pop
ss
inc
pusha
dec
or
call
in
jnp
testl
inc
inc
inc
push
sub
ljmp
sub
out
or
inc
mull
sub
mov
cmp
jo
in
mov
icebp
ljmp
dec
shrb
std
je
jecxz
loop
xor
push
icebp
in
inc
mov
loope
or
fiaddl
or
jbe
fildll
stos
pop
icebp
sbb
cmp
pop
pop
daa
cmpsl
aaa
test
negb
aas
mov
xor
mov
jno
pusha
fsubl
clc
addr16
xchg
pop
push
jae
lock
in
mov
adc
cwtl
mov
jnp
imul
add
or
lock
pop
ss
sbb
mov
mov
mov
into
push
cmp
aam
jbe
cltd
mov
sub
sti
xor
mov
adc
insb
data16
repz
test
in
sbb
jnp
mov
stos
xchg
or
jp
fsubrs
sar
adc
push
xor
xor
mull
adc
insb
aad
addl
mov
roll
mov
scas
cmp
lods
iret
fstpt
dec
fstpt
out
jnp
cmp
fisttps
push
ficomps
dec
out
jge
and
out
ljmp
sbb
mov
in
fsubrl
inc
mov
aad
scas
adc
jecxz
jp
insl
inc
push
inc
cmp
lock
jo
mov
cmpb
dec
subb
mov
cmpsl
or
add
pushf
imul
clc
jo
test
cmp
xchg
push
dec
dec
dec
xor
xchg
iret
sbb
adc
rorl
push
dec
jo
in
stos
jae
loopne
xchg
push
outsl
out
lcall
jne
dec
xchg
sbb
cs
cmp
mov
xor
pusha
fs
or
imul
cmp
loopne
inc
stos
or
bound
pop
xor
fnsave
dec
daa
lahf
mov
pop
iret
cmp
cmp
and
mov
pushf
jmp
mov
or
and
nop
inc
and
pop
lcall
lahf
ds
xor
enter
cmpsb
pop
jl
mov
jns
push
sbb
popf
mov
dec
jnp
and
add
xlat
lods
xchg
push
sub
inc
jb
and
push
clc
iret
cmp
loope
mov
push
out
dec
dec
std
pop
pop
mov
popf
iret
push
pop
inc
mov
jmp
pop
jg
adc
add
out
sahf
cmp
ljmp
inc
outsb
jae,pn
mov
scas
mov
rorb
dec
clc
xchg
aaa
dec
xor
movsl
fstp
or
jle
cmp
dec
cmpsl
cltd
int
bnd
sub
add
adc
jae
lahf
loope
je
and
mov
push
mov
mov
ds
inc
ja
lods
sub
push
movsb
dec
adc
mov
and
adcb
cmp
jg
dec
add
cmp
lret
xchg
adc
sub
and
loopne
stc
pusha
dec
negl
push
int3
cmp
stc
pop
mov
cmp
sbb
das
out
inc
test
out
pop
push
int3
cld
or
xchg
imul
jmp
mulb
mov
jnp
outsl
pushf
pop
push
std
hlt
lods
lret
jnp
popa
lea
mov
nop
cmp
pop
xor
test
dec
lcall
imul
inc
xlat
add
pop
push
sbb
mov
gs
cwtl
pushf
mov
xor
test
pop
inc
mov
jno
xor
and
jns
jnp
lods
inc
loopne
pop
aas
xchg
dec
jns
fdivr
lahf
je
adc
jecxz
sub
aas
pop
fwait
cmpsl
daa
jge
fnstenv
mov
adc
push
cmp
mull
rcr
mov
dec
xchg
sub
mov
cltd
or
sub
sub
push
xchg
enter
or
pop
xor
xor
std
ret
pop
add
mov
and
push
testb
jae
push
pushf
and
addl
xchg
fwait
mov
mov
das
inc
mov
lahf
jae
cmpsb
scas
sbb
ss
adc
jl
cmp
jmp
pop
sbb
mov
aad
dec
std
es
in
fwait
or
testl
xchg
adc
daa
fwait
push
aas
bound
mov
test
jmp
or
mov
les
jmp
sbb
pop
add
mov
ljmp
out
add
popf
inc
jecxz
adc
lcall
xchg
addr16
fstpt
insl
lahf
jb
jge
push
jns
hlt
xchg
insl
mov
cs
mov
push
mov
outsl
mov
lds
xchg
xor
add
xchg
jno
sbb
or
lret
add
push
outsb
dec
adc
ret
pop
sub
lds
cld
rolb
cmp
pop
dec
inc
dec
cltd
test
sub
test
mov
mov
loop
iret
push
push
mov
sub
dec
xchg
dec
repnz
daa
xchg
scas
inc
movsb
mov
sbb
fmul
cmpsl
xchg
icebp
jnp
cmc
es
cltd
mov
aad
fucomp
out
insl
ss
dec
fldcw
addr16
lret
pop
mov
xor
cmp
or
inc
shrl
int3
popf
push
shlb
mov
daa
out
cwtl
lret
or
lea
arpl
stos
cmpsl
push
test
gs
stos
les
or
repnz
adc
inc
jne
sahf
fiadds
dec
mov
fwait
imul
popf
adc
addb
repnz
scas
imul
sub
add
orb
mov
je
and
movsl
adc
cmpsb
lea
fistl
std
mov
mov
inc
cli
dec
scas
loop
mov
mov
and
stc
subl
das
cmp
test
js
mov
adc
aam
aam
pop
inc
and
ret
push
fwait
mov
scas
sub
mov
add
push
xchg
nop
test
fbstp
mov
scas
jp
push
jl
stc
or
sbb
repz
fldenv
into
stos
mov
pop
inc
and
xor
lcall
mov
push
pop
add
shll
ss
mov
ja
or
xlat
lahf
and
iret
cmp
push
cmpsl
scas
lret
sbb
in
adc
cmp
xchg
and
lahf
loopne
enter
cmp
push
add
scas
pop
jnp
add
int3
test
out
outsb
or
div
or
adc
or
push
pop
scas
xor
xor
mov
aas
inc
inc
or
mov
inc
movsl
mov
test
roll
outsb
in
lcall
add
stos
pop
mov
dec
cmpsb
dec
adc
test
sub
jecxz
iret
mov
test
mov
dec
ss
mov
jmp
mov
nop
push
lahf
xor
js
cld
sbb
lds
imul
bound
and
pusha
cmpsl
and
push
sbb
add
rcrb
and
xor
pop
or
jl
and
xchg
mov
and
insb
jns
mov
push
xchg
mov
das
js
fstl
leave
roll
cmp
dec
sub
sti
and
adc
sbb
xor
mov
sub
popf
in
sti
pop
and
aad
add
test
or
or
in
std
mov
jge
xchg
mov
sbb
and
inc
rcl
pop
cmpsl
loope
push
mov
orl
in
pop
lds
mov
pop
pushf
sub
psubq
in
bnd
mov
jecxz
outsl
cmc
daa
lret
mov
insb
dec
mov
repnz
cmpsb
loope
sbb
cwtl
dec
in
ficoms
shlb
int
and
insl
lret
inc
inc
xlat
int
inc
jnp
dec
iret
fistpll
add
xchg
int
inc
lods
dec
ljmp
out
and
js
push
aaa
mov
cwtl
stos
push
sub
or
aas
mov
movsl
mov
dec
cwtl
push
in
xor
mov
lret
loopne
xchg
pop
jp
icebp
outsl
movsl
icebp
ffree
cli
out
mov
call
mov
mov
cld
and
mov
aad
mov
stc
lock
or
scas
adc
dec
inc
mov
push
sahf
sar
mov
pop
mov
adc
xor
mov
sbb
sub
mov
sub
in
xchg
addr16
mov
jmp
pop
mov
mov
xlat
mov
stos
mov
loope
push
pop
lahf
jo
jo
out
pop
lret
dec
cwtl
lahf
push
sub
jmp
fidivl
test
out
sbb
fildl
out
das
test
and
repz
xor
inc
enter
fwait
gs
stc
insl
inc
loopne
mov
movsl
jge
ret
adc
jge
xor
gs
mov
cs
lods
add
xor
rcr
dec
stos
cmc
shlb
ljmp
je
shlb
jne
mov
sbb
int3
and
push
dec
xchg
inc
sbb
cmp
sub
xchg
mov
clc
or
jno
and
mov
xchg
andb
rorb
mov
push
mov
jns
xor
outsl
mov
data16
out
add
adc
ss
xchg
and
jmp
push
inc
fucomi
movsl
mov
adc
mov
imulb
cld
cli
out
xor
dec
lret
sbb
cmp
mov
sub
push
out
push
adc
pop
scas
pusha
sbb
mov
int
and
xor
ja
subl
test
pushf
cwtl
in
mov
dec
hlt
cmp
ja
cwtl
jnp
fcomi
jnp
int
xor
fcoml
add
or
pop
and
jmp
sbb
cltd
mov
add
sbb
sti
mov
arpl
push
dec
inc
and
pop
imul
es
jb
inc
pop
and
xor
xor
out
xchg
mov
out
in
ja
adc
aad
mov
sbb
dec
pop
int3
and
mov
repnz
stc
div
divps
mov
mov
dec
push
push
push
and
leave
mov
out
sbb
into
in
mov
rcl
loopne
push
xchg
push
imul
orb
repnz
dec
mov
insl
adc
gs
and
pushf
daa
jmp
mov
sub
mov
and
nop
popf
aad
roll
push
mov
int
paddb
jp
addr16
pusha
sbb
and
and
jo
xchg
int3
ret
fsubs
and
int
and
sub
fwait
add
dec
inc
inc
xchg
hlt
and
adc
jp
out
pop
or
sti
insl
or
xor
mov
popa
mulb
mov
inc
int
je
inc
and
mov
cmpsb
jnp,pn
adc
rcr
adcb
add
movsl
jecxz
fidivrl
lea
lcall
xchg
jle
xor
cmpsl
pushf
sub
iret
incb
outsb
mov
jb
jo
push
fldcw
add
push
or
out
xchg
push
fimuls
mov
pop
pop
mov
push
inc
cmp
popa
insl
cmp
mov
push
sti
adc
pop
fwait
sbb
cmp
lcall
pusha
inc
ficomps
pop
mov
insl
xor
pop
gs
cltd
jno
idiv
pusha
sub
push
mov
sub
pop
and
or
add
xchg
ret
ss
pushl
xchg
ret
mov
rolb
sub
leave
push
scas
jno
mov
lds
fmuls
iret
ja
je
mov
fstpl
add
daa
nopl
outsl
aaa
jle
xchg
in
xchg
push
and
inc
fimull
jns
sub
int3
sbb
sbb
std
jmp
inc
repz
push
std
pusha
cmc
or
inc
add
push
sub
push
dec
jecxz
push
pop
sar
push
xor
out
nop
outsb
sbbb
or
push
cs
jnp
push
negb
xor
dec
bound
or
orl
cmp
jno
sarb
mov
cmp
aaa
pushf
adc
push
jg
andb
shlb
add
pop
add
mov
or
ss
mov
dec
xchg
push
outsl
arpl
adc
inc
and
and
out
dec
fistpll
mov
fwait
mov
adc
icebp
aas
or
push
lods
jbe
sub
dec
dec
xor
in
dec
cmpsl
lds
inc
shrl
adc
aas
mov
push
insl
repnz
test
fildl
mov
xchg
js
mov
insb
mov
mov
bound
mov
sub
push
xlat
fldcw
push
xor
adc
std
aad
jg
push
fsubrs
jnp
cld
adc
arpl
mov
xor
sbb
sti
xor
adcb
iret
test
mov
jmp
jl
in
cwtl
aam
fs
outsb
sbb
stc
xchg
test
pop
mov
loop
movsl
inc
test
int3
je
out
sahf
lret
inc
adc
inc
in
in
mov
ds
stos
mov
mov
leavew
popa
jge
or
idivl
mov
stos
gs
push
jl
inc
and
fst
jae
sbb
sub
fisubrs
adc
sbb
add
fsubrl
sbb
mov
dec
inc
cmp
xchg
ret
das
fiaddl
scas
cltd
call
mov
add
sub
lret
cmp
lcall
fld
mov
xchg
mov
ds
pop
rcll
mov
pop
inc
vpsrlq
ds
std
adc
cld
jle
and
in
int3
inc
nop
icebp
aad
dec
dec
nop
jmp
xchg
adc
ret
cli
inc
mov
mov
and
add
pusha
shr
mov
lcall
cmp
sbb
aaa
shll
mov
in
pop
rcrb
imul
jl
ljmp
mov
lds
sbb
push
jbe
negl
or
mov
mov
inc
adc
push
call
in
in
ljmp
mov
addr16
fisttpll
add
jns
in
ficompl
imul
jb
inc
pushf
adc
mov
inc
fidivrs
mov
hlt
in
mull
dec
mov
xchg
movsb
pop
loope
cmp
push
or
cwtl
xor
repz
cmp
mov
fimuls
scas
shlb
dec
sub
in
pop
inc
xchg
push
popa
inc
jae
enter
in
mov
pop
int
sub
push
jl
ret
mov
ret
adc
mov
in
sbb
test
cltd
pop
dec
sub
cwtl
mov
xchg
loopne
push
dec
gs
adcl
dec
mov
jb
inc
dec
adc
and
mov
test
cmp
push
adc
jo
dec
shl
inc
fbld
sub
xor
and
cmp
mov
test
lds
icebp
in
inc
jg
cltd
pop
test
mov
les
pop
leave
lret
adc
cmp
pop
fadd
jnp
aas
mov
mov
sub
popa
in
lret
fisubs
test
xor
inc
mov
mov
lahf
sti
sti
xlat
shr
cmp
mov
mov
lret
mov
dec
insb
subb
jo
xchg
push
arpl
inc
fcoms
sbb
in
sub
cmp
stos
cmpsl
psrld
mov
cmpsb
ds
jmp
cmp
pop
insb
loop
push
inc
fcmovnbe
jg
cmp
fsubrs
inc
sahf
adc
das
insb
and
rsm
xchg
and
pop
imul
test
push
dec
adc
dec
dec
clc
lcall
mov
not
add
or
jnp
rcr
fwait
outsl
mov
push
pusha
pop
adc
out
into
movsl
mulb
mov
lods
lods
mov
loopne
movhps
cli
adc
mov
test
sbb
mov
jl
jae
addb
xchg
or
repz
adc
adc
outsl
add
addr16
jae
mov
adc
cmp
cltd
sti
mov
inc
je
sahf
or
xchg
and
pop
mov
jl
rclb
jmp
ja
mov
pop
daa
jle
add
jb
fwait
in
jle
cmpsb
out
dec
scas
aaa
xchg
scas
fldcw
enter
cs
push
pop
mov
mov
call
add
sub
test
xchg
lods
push
jne
adc
mov
jg
push
popf
stos
or
or
dec
adcl
les
lahf
pop
pop
outsb
pop
filds
hlt
push
xlat
out
or
sub
jl
xchg
call
ds
pop
cmpsb
in
rcll
xchg
push
push
idiv
lds
or
out
dec
cmp
nop
out
inc
add
sbb
in
mov
ss
add
inc
xchg
lods
mov
sub
imul
cmp
stos
xchg
mov
jg
mov
dec
pop
das
mov
pop
dec
mov
xchg
jl
pushf
or
add
repnz
lea
jl
cmp
pop
js
sar
gs
jns
fwait
xchg
fdiv
mov
out
and
into
mov
mov
sub
or
out
outsl
xor
in
insb
mov
mov
fwait
loope
iret
push
cmpsl
adc
pop
add
cmp
idiv
dec
in
cwtl
lods
mov
ficomps
xchg
push
pop
out
mov
inc
adc
pusha
and
pop
dec
add
lea
push
jle
ss
xchg
cmpb
dec
cmovle
dec
cmp
cmp
ljmp
dec
mov
pushf
mov
aad
dec
jb
push
sub
jl
pop
xorl
add
jmp
jo
inc
or
cmp
jge
mov
and
gs
js
jg
nop
cmpsl
data16
in
xor
add
inc
mov
xor
andl
int
sub
mov
test
sub
test
mov
lcall
xchg
aaa
pop
into
dec
adc
mov
or
jle
jae
addl
loop
int
push
testl
sti
adc
and
xor
sbb
or
negl
or
sarl
cmp
sub
cwtl
xchg
mov
xchg
icebp
add
push
iret
out
icebp
adc
test
lock
push
push
fdiv
push
cmp
popa
jnp
and
sub
jle
mov
xchg
jb
or
mov
dec
inc
adc
pop
or
imul
fldl
mov
popa
inc
mov
mov
sbb
xchg
ss
ret
mov
std
outsb
cltd
jl
mov
mov
movsb
xlat
lcall
sbb
push
pop
sbb
push
das
xor
jb
sub
outsb
xlat
mov
les
popf
or
loope
adc
pushf
or
fidivl
xchg
push
xchg
or
lret
sarb
xchg
and
hlt
mov
dec
sbb
pop
mov
pop
inc
rcr
aad
outsb
sub
dec
mov
daa
push
or
jl
cmp
in
or
jo
and
mov
push
cld
push
jbe
shl
push
adc
push
popf
push
pushf
dec
xchg
mov
das
scas
insl
mov
fadds
bound
jle
mov
inc
data16
xlat
inc
xorb
sub
add
jp
xor
sub
icebp
mov
dec
stos
and
pop
inc
std
cmpsb
pop
xchg
xor
and
fs
mov
and
jns
filds
inc
out
jge
xchg
or
hlt
sar
ja
lods
pop
fidivrs
jb
mov
out
js
out
mov
mov
int
gs
sub
das
lea
or
mov
mov
add
out
xor
lock
xlat
adc
lret
dec
push
add
mov
orl
cmp
push
mov
lods
stos
in
jbe
jp
sbb
mov
into
push
lret
push
aad
dec
cmp
jge
sti
lea
out
mov
pop
lret
adc
sbb
das
jae
arpl
cmp
pop
jo
bound
daa
push
out
jmp
push
xchg
sti
adc
scas
adc
enter
sub
nop
add
std
lods
push
sub
add
pop
outsl
cmpsb
cmp
jns
mov
loopne
inc
fwait
imul
idivl
insb
cs
jns
add
sub
mov
push
cld
jbe
jo
sbb
mov
dec
xor
cltd
xlat
adc
sbb
cli
lahf
iret
je
pop
movsb
jbe
sbb
cmp
stos
dec
sbb
jl
mov
pop
pop
xchg
jge
ljmp
jb
mov
int3
mov
pop
aad
sub
fdivl
rcll
or
pop
pop
adc
mov
add
in
lcall
jo
jl
loop
test
ret
cmpb
loop
orl
and
cmpsb
mov
dec
in
xchg
adc
add
xchg
and
shl
fbld
add
mov
roll
jle
adc
mov
lock
xchg
movsl
push
fdivs
scas
add
outsb
mov
clc
pop
in
inc
push
cmp
adc
cmp
adc
pop
ds
stc
bound
rcrl
jae
pushf
nop
mov
jbe
mov
add
scas
pop
shll
into
lods
jns
enter
inc
jo
pop
pop
into
xor
rcll
pop
mov
out
in
gs
inc
ret
pop
in
arpl
clc
adc
out
outsl
gs
jnp
add
jl
adc
testb
mov
inc
std
lcall
les
inc
out
lods
mov
add
cld
and
mov
or
lods
es
aas
push
add
adc
mov
outsb
mov
adc
adc
adc
mov
sbb
dec
dec
pop
cmp
mov
inc
push
and
inc
xchg
jno
add
shl
jecxz
mov
lea
dec
xor
mov
pusha
jns
push
mov
pop
push
mov
outsb
mov
lods
fwait
sub
add
mov
leave
push
xchg
popf
jno
or
cld
sbb
sahf
cmc
push
das
out
in
jle
dec
outsl
cmpsb
jae
and
je
push
cmpb
bound
pop
xchg
inc
ficomps
lret
jno
lcall
mov
fiadds
mov
pop
cmp
aaa
cmpl
inc
mov
aad
incl
xchg
dec
inc
jo
mov
rclb
mov
sbb
sub
cli
loope,pn
in
mov
test
xchg
sbb
xchg
sub
push
faddl
dec
shlb
push
add
lds
insl
lret
scas
xchg
jnp
idiv
roll
pushf
sahf
insb
aaa
mov
inc
cpuid
push
rorl
jno
and
pop
loop
jle
mov
clc
fs
xor
pop
in
xlat
in
xor
or
mov
fbstp
cld
hlt
rcll
mov
pop
push
add
inc
arpl
mov
lock
aam
repnz
loopne
testb
loopne
add
push
cld
push
add
iret
and
or
movsl
mov
jmp
fidivs
mov
test
add
int
adc
shll
bnd
mov
dec
or
and
imul
cmp
rcl
or
inc
insb
jp
pop
sub
inc
inc
sbb
xchg
jmp
lcall
xor
jbe
js
mov
es
test
jmp
out
out
out
mov
ljmp
js
xorl
inc
sub
enter
add
xlat
lods
hlt
cmp
adc
cmp
sbb
mov
lret
jno
inc
mov
leave
or
loopne
loopne
mov
adc
fistps
stos
jbe
sub
mov
mov
clc
lret
xchg
popf
dec
loopne
dec
sub
mov
je
nopl
jns
mov
cmp
lret
inc
lods
lcall
jge
into
and
jnp
cmp
adc
sub
pop
faddl
xlat
lea
mov
push
in
inc
lcall
mov
jne
mov
scas
cltd
mov
and
sbb
jno
stos
outsl
push
in
iret
mov
dec
repz
orl
mov
mov
cltd
sar
jg
in
test
ret
inc
sub
addl
mov
cltd
jns
test
int
push
jo
pop
and
jns
mov
and
popf
sbbb
stos
aad
imul
movsl
dec
aas
add
mov
lock
dec
pop
aad
dec
pop
xchg
pop
mov
and
imulb
stos
cmp
cmpsl
cmp
jge
dec
insb
in
imul
rorl
cmp
pop
adc
imul
adc
fidivrl
push
jne
out
sbb
or
pop
add
sub
mov
movsb
and
mov
das
sbb
int3
add
in
in
stos
shl
mov
sbb
add
andb
test
pushf
add
and
xchg
mov
cmp
cmp
cmp
insl
aaa
ss
push
gs
roll
xor
andl
mov
jnp
mov
imul
test
push
les
mov
sub
imul
push
cmpsl
ds
nop
enter
outsl
mov
es
jmp
mov
xor
outsb
sub
xchg
rorl
rorl
mov
mov
xor
lods
adc
popa
jnp
sub
xchg
push
dec
in
cs
lods
test
cmp
adc
stos
addr16
pop
xor
fbld
lcall
dec
es
mov
push
pusha
adc
xor
sbb
incb
popl
jp
push
mov
xor
imul
pop
mov
jecxz
jecxz
adc
and
shlb
and
int3
enter
shll
cwtl
sub
daa
push
mov
shrl
lea
aaa
aas
mov
pop
rorl
pop
mov
mov
push
stc
lcall
jb
adc
ja
xchg
jl
scas
notl
jne
out
mov
xor
push
jbe
xchg
nop
dec
fwait
jnp
jmp
rorb
imul
mov
mov
jge
mov
mov
xchg
movsl
js
and
mov
scas
sub
or
testl
jb
sarb
cmp
jl
jp
adcl
orb
daa
les
push
das
shll
nop
popf
or
movsl
jg
adc
inc
and
hlt
mov
dec
andl
or
jmp
jbe
adc
mov
shll
jo
lret
mov
mov
jb
pop
fsubrs
cmc
cmc
sahf
pop
mov
push
pop
jbe
jne
mov
jg
sbb
pop
imul
imul
add
das
push
in
loop
icebp
dec
je
in
adc
imul
mov
push
push
scas
loopne
mov
ljmp
and
push
sbb
and
or
bound
xchg
in
mov
or
add
adc
rorl
mov
cmp
mov
xlat
in
pop
ss
or
cmp
iret
push
pushf
cli
inc
add
pushf
xorb
pusha
sub
cmp
mov
dec
pop
fcoms
fdivrl
stc
or
call
sbb
xorb
and
dec
and
xchg
xor
dec
insl
cs
xor
lahf
inc
jmp
pop
adc
std
ja
mov
mul
fstps
mov
pop
stc
and
ja
imul
aam
dec
push
or
pop
das
loopne
das
jle
movsl
or
sbb
sbb
jbe
stc
push
push
and
fistl
sarl
push
sbb
mov
mov
fs
mov
das
dec
js
insb
adc
sub
sub
insb
ja
dec
hlt
aam
pop
fwait
xchg
fadd
nop
sub
das
ret
dec
push
pop
pusha
mov
pusha
pop
or
mov
ret
call
and
pop
sti
sub
das
std
pop
cmp
push
out
nop
xchg
or
push
xor
xchg
aaa
std
mov
lahf
fdivl
add
lods
fnstcw
pop
pop
or
xchg
sbb
mov
xor
shlb
xchg
outsl
out
push
jp
pop
lods
mov
mov
xor
dec
aad
stos
ds
adc
movsb
movsb
cmp
xchg
or
fs
dec
lret
movsl
out
inc
sub
jl
add
pop
fists
rcl
mov
je
or
fdivl
mov
inc
or
cmpsb
jno
lret
cwtl
add
out
and
imul
xlat
adc
roll
adc
cmp
inc
rcll
inc
ret
and
int3
mov
adc
scas
movsb
add
jae
ret
repnz
cli
aam
mov
jmp
aad
ficomps
cmp
std
repnz
bound
sub
jns
and
push
fsubp
push
xchg
push
repnz
mov
add
jno
nop
cmp
xchg
cmc
push
movsl
mov
std
push
rcrb
sbb
rorb
sbb
xchg
pusha
iret
adc
les
pop
popa
add
xlat
mov
iret
rclb
aam
out
jno
mulb
sbb
fwait
aam
call
fnstcw
outsb
fcomps
int
jmp
imul
mov
daa
push
imul
cmp
mov
and
xchg
dec
mov
or
fwait
adc
fldl
gs
jo
into
mov
outsl
push
jge
or
lods
adc
xchg
ret
and
add
sti
outsb
lods
sbb
pop
cld
mov
std
scas
shl
inc
inc
adc
sti
aam
je
std
test
inc
stos
cmp
mov
cmpsl
pop
andl
push
ret
popa
mov
outsl
dec
idivl
push
int
jae
loope
mov
ret
xchg
push
mov
loop
and
inc
xchg
out
jge
cmpsl
sub
insl
fsubs
daa
jmp
mov
adc
in
push
push
jae
inc
lahf
dec
push
pusha
shrb
push
cmpsl
je
popf
stos
pop
lret
das
cli
mov
lret
mov
jle
loopne
into
loop
push
dec
jae
jne
mov
pop
mov
mov
ror
test
sti
cmc
xor
sub
js
pop
push
repnz
popa
test
push
dec
lods
and
dec
add
popa
loop
push
inc
shll
xchg
or
lahf
jg
dec
cmp
scas
repz
or
dec
aad
pop
add
insb
jns
mov
inc
pop
iret
jmp
jmp
in
daa
xchg
or
in
das
icebp
hlt
or
aaa
jl
cltd
push
js
in
mov
jnp
dec
add
inc
jnp
dec
data16
add
cmp
mov
subb
pop
sub
int3
repz
or
cmp
ss
clc
adc
jmp
adc
push
dec
rcr
pusha
mov
ja
cmp
jge
outsl
adc
mov
add
dec
xchg
pop
xor
jmp
xlat
lret
xor
xor
fwait
sub
stos
xchg
cld
xchg
inc
dec
pusha
mov
popf
add
repnz
pop
into
jo
inc
pop
pop
mov
cmpsb
data16
cmp
adc
jg
mov
and
adc
mov
sub
lods
stos
sub
mov
loop
scas
push
stos
movsb
int
hlt
mov
iret
aad
enter
pop
mov
ds
rclb
mov
cltd
jnp
mov
in
ficoml
aam
sbb
shl
ja
jo
clc
mov
pop
cmp
in
loop
adc
push
ja
out
test
in
repz
movsb
cmpsb
lret
xchg
out
out
pop
pop
daa
xchg
js
fiaddl
and
outsl
mov
sbb
int
mov
xor
jle
dec
ljmp
push
cmp
dec
imul
sub
mov
lock
fstps
cwtl
cmp
test
xchg
data16
push
sub
push
mov
mov
rcl
lea
inc
sub
mov
xor
notb
cs
mov
push
adc
les
mov
ds
and
or
xchg
pop
and
jns
in
mov
cmp
adc
stc
or
xchg
xor
inc
out
or
push
cmpsb
push
mov
mov
adc
xor
add
scas
les
sbb
jmp
out
push
cmpsl
adc
jo
fdivp
adc
and
ss
or
loopne
inc
ds
rcrb
or
push
fst
loop
or
cmp
movsb
mov
lock
sub
scas
mov
push
push
adc
test
mov
and
das
push
push
ljmp
cmc
clc
adc
mov
xchg
jnp
dec
imul
mov
pop
jb
xchg
cli
out
push
ljmp
filds
out
mov
jl
arpl
push
jge
dec
sti
mov
adc
loope
adc
jb
js
loop
xchg
es
stos
push
pushf
jns
sbbl
lock
lods
leave
push
push
jle
sti
loope
adc
cmp
sbb
testb
out
test
sbb
xor
into
rcl
adc
scas
pushf
call
sub
and
cmpsb
das
xor
push
mov
test
sub
sti
xor
cld
movsb
clc
xchg
movsb
push
mov
fwait
js
stos
jge
addr16
std
dec
cmpsl
daa
jecxz
sahf
rolb
xchg
push
inc
mov
xchg
mov
jl
jmp
call
int
or
mov
in
sub
pushf
aaa
aam
cmp
jb
cmpsl
mov
roll
push
cltd
inc
cmp
lcall
inc
push
popf
add
lods
add
adc
or
movl
das
leave
mov
pop
mov
cmp
in
call
out
imul
outsl
loop
jecxz
dec
lret
negb
int
sub
inc
adcb
fdivrl
stos
data16
push
les
out
pop
jmp
adcb
jl
in
or
and
js
pop
dec
inc
xlat
rcrb
lock
ficompl
sbb
push
test
sub
and
out
xchg
clc
and
mov
jp
pop
jge
sub
lea
les
les
inc
and
bound
xchg
fcmovnu
arpl
mov
sbb
and
flds
test
xchg
rclb
cli
lods
outsb
dec
dec
movsb
imul
mov
cmp
ljmp
xchg
add
rcrb
push
mov
jae
fnsave
in
out
divl
sbb
popf
test
mov
lahf
mov
out
cli
sti
lds
pop
int3
adcl
std
repnz
rolb
repnz
test
int
jbe
pop
push
scas
std
mov
mov
or
hlt
pushl
xlat
push
sbb
mov
movsl
ss
dec
das
xchg
div
push
test
jne
dec
in
add
fadd
mov
inc
xchg
or
stos
xchg
mov
insb
test
imul
jg
add
mov
adc
xchg
inc
push
loop
mov
mov
xor
dec
cmp
jae
roll
jmp
hlt
pop
inc
outsb
or
adc
cmp
pop
test
push
and
fcomps
xchg
adc
mov
rorb
add
popf
mov
push
dec
in
inc
add
aaa
aad
cmpb
xor
loope
fucomi
or
mov
sbb
pop
jne
fcompl
dec
in
ja
fdivr
mov
roll
jge
inc
fildll
cmp
ficoms
mov
out
adc
rorb
jecxz
lret
ret
mov
ja
dec
stos
decb
cmp
sbb
pushf
sbb
xor
add
testb
mov
add
decb
stos
sbb
push
leave
sub
dec
xchg
cmp
xor
sbb
xor
stos
mov
test
inc
push
sub
mov
lods
cmp
and
add
pop
mov
push
jg
push
mov
pop
lret
jecxz
mov
dec
dec
mov
and
testb
sub
sbb
jmp
push
cltd
dec
pop
inc
cwtl
xor
iret
sbb
push
pop
mov
xchg
hlt
mov
call
inc
subb
and
int3
jl
push
stc
ljmp
addr16
test
adc
xchg
pop
jg
pop
es
ficoml
jmp
out
lea
shll
xor
or
scas
lret
jb
jmp
fwait
loop
dec
cmp
mov
out
xor
in
or
nop
xor
dec
dec
mov
mov
js
inc
out
shl
mov
xchg
adc
jp
inc
cmp
stc
inc
sbb
les
cmp
out
addl
in
mov
lock
call
loop
lock
mov
daa
dec
xor
push
call
jb
xchg
cmpsl
cmp
filds
loopne
in
test
dec
in
xor
adc
jnp
out
push
out
pcmpgtb
imul
leave
dec
cmp
or
in
cmp
push
lock
repnz
mov
lock
mov
bound
pop
int3
stos
movsb
xchg
jge
pop
stos
pop
lds
cmp
cltd
push
sub
clc
icebp
pop
insb
mov
xor
add
inc
sub
adc
cmpsl
or
push
push
pop
gs
or
xchg
push
xchg
bound
div
sbb
and
adcl
adc
repnz
mov
xchg
call
andl
inc
sub
subb
std
orl
arpl
outsl
xchg
adc
or
mov
pop
xchg
push
push
xor
xor
fisubs
or
inc
ds
xor
sub
int
and
add
popf
and
int
cmp
mov
push
aad
push
in
and
in
or
movsl
nop
mov
bnd
inc
enter
clc
sti
stc
in
les
data16
push
data16
mov
push
mov
or
or
daa
add
mov
aaa
neg
roll
addr16
movsl
inc
shlb
xor
xchg
cmc
ficoml
jg
test
js
dec
and
daa
mov
xor
ret
cs
adc
adc
fsub
sub
jg
shll
loop
out
push
cmp
out
xchg
mov
and
sub
push
cwtl
sbb
mov
push
inc
std
xor
or
std
fmuls
out
outsb
jmp
hlt
jecxz
lds
xchg
insl
fcmovnbe
adc
jl
inc
iret
clc
fdivrp
int3
or
xor
sbb
es
fucomip
and
add
loopne
cwtl
xchg
aas
jge
xor
mov
or
jecxz
xor
push
mov
mov
mov
fstl
mov
or
sub
mov
pusha
addr16
shll
ret
icebp
insb
pop
imul
test
outsl
xchg
mov
out
ret
jecxz
pop
or
repnz
mov
push
fwait
mov
jo
inc
aam
cld
int3
pop
inc
ja
sub
inc
les
test
jle
fs
push
jl
push
pop
adc
lahf
sbb
mov
mov
ss
xchg
stos
pop
loope
das
or
jbe
clc
es
sub
sti
sub
jmp
adc
ljmp
mov
fimuls
insl
jge
push
fcmovnbe
xor
jns
pop
rclb
jg
shr
ret
and
sbb
or
jbe
mov
loope
mov
cmp
pmulhuw
sahf
mov
es
mov
aaa
jnp
sarl
mov
cs
or
popf
fcoms
imul
mov
cmp
sti
in
mov
repz
call
adc
cwtl
dec
lret
push
xchg
je
sub
dec
pusha
jecxz
pop
les
fists
push
nop
sbb
imul
inc
push
frstor
mov
lods
js
shlb
inc
int3
xlat
lds
jmp
push
stc
xchg
cmp
rcrb
lret
pop
pusha
fisubrl
pop
inc
in
pop
push
repz
fisubrs
aad
cmp
outsl
icebp
jp
repz
dec
call
das
lock
inc
dec
jo
sub
lcall
mov
js
or
in
push
cmp
sahf
mov
lret
mov
adc
mov
bound
mov
jmp
shrb
mov
jne
pmuludq
mov
aad
mov
fcmove
mov
fs
nop
mov
sub
in
ficoms
mov
dec
out
inc
movsl
mov
add
shll
xor
jnp
or
mov
mov
dec
adc
sub
sbb
xor
mov
and
shrl
inc
das
jl
imul
fdivl
fsubrs
add
pop
push
sub
call
stos
dec
out
mov
sbb
push
jge
sub
sub
pop
into
lcall
push
xor
push
and
push
sbb
and
mov
jge
xlat
mov
dec
ficoms
rol
xchg
xchg
mov
in
ds
call
movsb
inc
js
or
test
fisubrs
mov
sbb
push
rolb
xchg
outsb
mov
fcoms
fisttpl
jmp
mov
test
xor
xlat
sub
mov
test
push
sub
xchg
lret
cwtl
pop
loop
mov
cmc
test
dec
out
ljmp
mov
add
aam
iret
mov
lea
out
mov
xchg
push
push
loop
popa
add
xor
outsl
sub
lock
and
sub
sarb
lods
cmp
mov
sub
js
mov
ror
xor
ss
jae
lea
loop
arpl
test
cs
adc
push
les
pusha
cmp
dec
inc
insb
xchg
test
fcoml
sarl
addr16
or
mov
pop
cmp
dec
test
add
lret
xchg
mov
adc
push
dec
xlat
out
mov
dec
push
mov
movsl
jo
adcb
xchg
ret
pop
inc
jnp
push
push
fdivr
ss
xchg
into
sbb
out
jle
fsts
imulb
mov
push
ret
stos
jp
test
lret
xor
iret
sarb
inc
mov
stos
xchg
push
mov
loop
xor
push
jb
mov
std
jecxz
imul
pop
stos
inc
or
sbb
and
xchg
mov
add
scas
or
lret
data16
enter
xor
test
push
mov
inc
xchg
fldt
mov
ret
pop
les
inc
cmpsb
xchg
cs
pushf
jnp
out
orl
lea
movl
adc
xor
or
out
lods
insl
inc
daa
adc
and
push
mov
jo
xchg
test
stos
push
pop
dec
adc
shl
sbbb
cld
cmp
fdivp
push
out
out
mov
xor
loope
adc
inc
sbb
pusha
repnz
int3
pop
imul
mov
bound
push
jns
jecxz
in
or
rep
pop
scas
data16
das
sarl
sbb
sub
fists
mov
push
roll
fimuls
cmc
gs
xlat
imul
fwait
lods
into
xchg
cmp
clc
mov
push
in
mov
mov
jge
add
or
loopne
xchg
aas
inc
xchg
pop
sarl
xor
cltd
cwtl
aad
xor
shlb
test
and
sub
push
xor
push
out
cmp
mov
int3
mov
mov
sbb
push
sbb
lahf
sbb
mov
mov
lahf
mov
ljmp
lods
sbbl
les
push
popf
pop
push
mov
or
mov
xor
loop
rcrb
std
inc
call
es
inc
imul
sahf
leave
jge
das
push
inc
fwait
shrb
and
xchg
mov
out
lahf
mov
clc
stc
push
pop
mov
add
adc
pop
pop
xlat
mov
shlw
cmp
sbb
cmp
cmp
adc
push
daa
push
stos
ljmp
mov
adc
adc
ret
mov
sbb
je
scas
xchg
and
dec
sub
iret
lods
popf
mov
out
pop
push
bound
mov
push
stc
mov
pop
je
das
and
lcall
pushf
aad
cmpsl
xorb
inc
sub
push
fidivl
fs
push
xchg
lods
nop
or
jg
dec
and
inc
fmul
jecxz
push
adc
cmp
or
mov
push
xchg
fmuls
out
dec
stc
dec
fnstsw
outsl
enter
sub
sarl
imul
cli
pop
mulb
xchg
lret
lds
and
push
fisttps
pop
push
or
and
mov
sub
insl
fldcw
jmp
pop
cld
mov
cmp
mov
ds
jns
repnz
xor
je
push
cs
pop
idivb
push
pop
ficompl
xchg
sti
repnz
jno
pop
push
and
cmp
test
lret
loope
jns
test
adc
roll
cmp
mov
push
add
mov
mov
mov
and
arpl
push
aas
sti
test
mov
add
jg
repz
pop
xor
outsb
xor
or
inc
gs
mov
arpl
shl
mov
cmpsl
adc
add
imul
mov
out
mov
popa
xchg
pop
ljmp
stos
lods
pop
jl
std
add
orl
clc
lock
jo
and
mov
ds
push
scas
nop
ljmp
cmp
sub
es
jo
sar
cmpsl
jne
lahf
dec
pop
mov
jbe
xor
ficomps
loopne
adc
push
test
icebp
inc
outsl
adc
lods
mov
repz
cld
push
cmpsb
ret
inc
add
mov
xor
imull
cmp
mov
je
pop
jge
dec
enter
hlt
xor
pop
pop
sbb
mov
iret
clc
inc
cmp
mov
iret
clc
dec
sub
dec
lock
jbe
push
aaa
in
movsl
sbb
test
data16
mov
dec
in
inc
repz
imul
pusha
jae
popf
enter
jbe
cwtl
enter
incl
push
pop
push
mov
negb
movsl
fs
pop
dec
repnz
inc
xchg
mov
loopne
rolb
mov
push
in
stc
fnstenv
xor
in
mov
add
push
in
ja
mov
xor
xchg
mov
pop
mov
movsb
mov
cld
mov
arpl
cltd
repz
pop
les
fs
ret
pop
stos
push
popf
loopne
pop
xor
cmp
jecxz
pop
xchg
or
int3
imul
rorb
bound
sahf
push
aad
xchg
testb
inc
mov
lahf
stc
icebp
lods
sahf
test
jbe
add
inc
ja
les
mov
lods
dec
cmp
je
jno
addr16
outsb
icebp
mov
test
rcll
arpl
or
cmp
cmp
lods
mov
ja
in
shrb
add
std
idivl
pop
xchg
imul
mov
cmpb
adc
loop
fs
push
mov
btl
xor
shlb
pop
daa
mov
xchg
dec
xchg
mov
lret
jb
jae
push
cmpsb
inc
shrl
push
inc
jno
cmc
sub
or
sbb
negl
das
xchg
and
adc
adc
nop
and
xchg
inc
ljmp
cmpsb
adc
imul
xchg
dec
dec
out
add
sub
cwtl
sub
or
outsl
cli
push
pop
xchg
ret
in
and
mov
fimuls
test
cwtl
push
into
cmpsl
lret
inc
pop
cmp
cmc
and
push
mov
sbb
in
lock
sub
aaa
test
cli
out
xchg
jae
into
push
lock
adc
sub
cmp
mov
inc
adc
in
xchg
repnz
movntps
repnz
rcrl
inc
mov
fwait
lret
xchg
jl
imul
sti
fwait
jo
cmp
sbb
jmp
mov
pop
ret
xor
mov
inc
in
inc
addr16
push
stc
popa
ljmp
xchg
jecxz
ret
push
pop
out
mov
xchg
sbb
add
xor
adcl
ds
test
push
or
filds
push
mov
mov
add
mov
ficoml
sub
addb
push
fwait
rolb
mov
imul
call
add
inc
push
dec
fisubl
test
dec
or
lods
pusha
cmc
xchg
add
imul
mov
mov
and
incb
sub
jp
pop
insl
daa
imul
xor
scas
fsubp
dec
icebp
cmc
call
leave
das
and
xor
cmp
aaa
or
std
or
sar
scas
xchg
jae
add
sbbb
mov
pop
cmp
xor
mov
shll
pop
add
mov
mov
sbb
push
and
aas
mov
mov
lret
icebp
ds
dec
dec
in
or
ret
or
ljmp
xor
sbb
push
insl
sub
adc
cltd
push
es
jbe
sbb
es
adc
nop
inc
mov
adc
stos
lret
xor
or
inc
xor
insl
scas
ljmp
stc
addr16
rcll
jnp
fsub
into
data16
cwtl
dec
clc
hlt
enter
imul
scas
cltd
adc
mov
inc
push
loopne
mov
or
lea
cmpl
or
test
mov
dec
sub
mov
xchg
add
mov
sub
jge
cmpl
or
xor
insb
cli
insl
adc
ret
mov
in
inc
lcall
mov
cld
xor
cmpsl
and
and
mov
jbe
out
inc
fcomi
lret
fstp
and
xchg
divl
push
loop
jl
ja
lcall
div
or
adc
jne
and
push
pop
sbb
and
popf
mov
data16
popl
sbb
lahf
leave
mov
and
testl
mov
lret
hlt
inc
hlt
mov
cltd
push
sub
popf
add
mov
jg
popa
out
inc
or
xorb
pop
adc
nop
push
pusha
add
jnp
xchg
push
sarb
cli
push
sbb
sub
imul
push
mov
sub
sbb
lds
imul
lods
jns
scas
cmpsl
cs
pop
cmp
in
mov
pop
mov
mov
pop
jmp
push
imul
int3
lret
es
mov
int3
stos
pop
xor
add
cmc
pop
push
dec
fs
lds
xor
push
mov
mov
jmp
pop
out
push
push
sbb
pop
jecxz
and
mov
cmpsb
ljmp
dec
jo
xchg
xchg
jle
adc
lock
ljmp
icebp
push
int3
fnstenv
loope
sub
movsl
out
pop
mov
push
add
mov
pop
adc
lds
dec
pop
add
add
lcall
sub
dec
nop
das
cmp
jne
int3
xchg
xchg
into
cmp
popa
lahf
pop
lods
int
push
inc
mov
inc
bound
or
and
dec
fisttps
jmp
dec
xchg
mov
adc
sbb
stos
daa
sub
mov
ss
jmp
push
loop
mov
int3
add
subl
sbb
dec
les
push
loope
loop
aam
push
or
jae
mov
push
shlb
stos
fisubs
in
cmp
mov
add
loopne
dec
aas
adc
adc
inc
dec
lods
mov
sbb
pushf
aaa
subl
xchg
lret
add
adc
push
mov
sub
push
call
mov
mov
mov
mov
fidivrs
jae
xchg
pop
push
ja
jle
add
sahf
jl
stos
or
pop
mov
mov
idivb
inc
push
xor
adc
push
shrb
fidivrl
sub
in
test
push
js
aas
cmp
cmc
rcr
fisubl
push
lret
sahf
faddl
and
jae
fisubrl
xchg
inc
mov
insb
lahf
sub
jnp
xor
gs
or
adc
leave
pusha
fs
push
dec
or
push
mov
sub
add
inc
xchg
and
sub
sub
shld
dec
shlb
xchg
dec
out
sub
mov
scas
jmp
xchg
outsb
mov
stos
ss
lahf
jnp
mov
and
push
and
fcoms
insl
add
push
jge
and
and
cmpsl
mov
movsl
test
mov
or
push
out
test
dec
dec
loopne
arpl
stos
idiv
cli
imulb
out
fs
xlat
fistps
dec
adc
and
sbb
jne
fiaddl
push
xchg
notb
xchg
nop
adc
mov
xor
gs
add
or
jecxz
jmp
mov
sbb
push
es
ffreep
insb
pusha
mov
and
fwait
or
ret
jl
cmp
mov
adcl
shlb
add
xor
lcall
and
test
movl
pop
shlb
movsb
pop
stc
call
outsb
push
repz
xor
shll
dec
add
stc
sbb
jnp
sub
mov
mov
or
jg
jo
and
loopne
and
xor
push
adc
xor
clc
jmp
lock
repnz
repz
int
sub
push
filds
mov
xor
add
mov
push
jb
jl
imul
cmpsb
mov
xchg
popf
popf
push
in
jo
jl
xor
mov
xor
mov
mov
cmp
inc
andb
pop
mov
sub
fisttpl
pop
cmpsb
jmp
in
xor
inc
das
fisubl
cmp
mov
jecxz
pop
frstor
mov
mov
jbe
mov
xchg
xchg
jmp
aam
leave
decb
icebp
or
xchg
jo
outsl
adc
pop
xchg
mov
jge
or
adc
adc
xlat
imull
xor
leave
adc
mov
loopne
mov
sub
mov
sub
sub
ror
push
loope
xor
push
out
subb
ret
bound
pop
pop
stc
dec
mov
imull
mov
jmp
or
es
inc
fidivrl
cmpsb
fldcw
pop
insb
xchg
cmp
enter
add
mov
add
cld
push
inc
rcrb
and
jle
sbb
aad
scas
fdivrs
sub
lcall
js
mov
decb
shrl
adc
xchg
jmp
outsb
mov
xchg
decl
aaa
push
xchg
pop
and
and
outsl
inc
mov
dec
in
adc
jg
daa
imul
cmpsb
loop
ret
jecxz
call
daa
nop
mov
jle
fdivl
shlb
and
js
mov
dec
mov
test
jae
mov
mov
sbb
jbe
jmp
inc
mov
test
arpl
shrb
xor
imul
sbb
push
imul
adc
clc
mov
cmpsb
hlt
inc
das
adc
test
in
scas
push
fucomi
lock
cmp
jle
orb
dec
xchg
pop
cmc
cmp
rcrb
mov
lock
mov
pushf
jns
imul
cmp
adc
mov
int
std
mov
lds
lcall
mull
mov
shl
dec
push
ja
dec
sub
popf
inc
sub
adc
push
jg
mov
push
jnp
xor
rorl
aam
cmp
add
and
cld
push
stos
hlt
inc
fs
jno
sub
sub
cmp
jle
push
xchg
clc
scas
xlat
xor
mov
mov
mov
dec
jnp
call
pop
sub
xchg
lods
mov
cs
xchg
test
loope
test
sti
out
dec
nop
cwtl
cld
in
xor
cmpsl
das
mov
lods
dec
imul
loop
cmc
loope
ret
cmpsl
lcall
bound
ljmp
adc
pop
imul
lahf
out
outsb
mov
push
jmp
or
mov
test
add
movsb
and
std
jbe
mov
call
loopne
xor
jp
jb
inc
daa
adcb
js
push
cmpsl
push
jno
sbb
js
push
cmpsl
or
fildl
ljmp
idivl
addl
xchg
imul
imul
mov
lods
cmc
cmp
add
dec
movsb
xchg
mov
das
jnp
cmpb
dec
mov
mov
cs
fildl
cmp
inc
cmp
sub
or
mull
enter
loop
mov
mov
xchg
push
xorl
inc
push
outsl
jbe
mov
data16
cli
out
test
dec
gs
push
cs
decb
popf
flds
out
test
xchg
and
cmp
lret
inc
subl
mov
push
shl
cmpsb
mov
js
mov
test
popf
xchg
adc
scas
adc
fs
add
mov
adc
xlat
pop
lret
push
push
add
int
jmp
adc
push
xchg
xchg
cli
jae
sahf
out
sbb
scas
jne
or
adc
or
stos
test
jg
in
mov
mov
sub
ljmp
popf
fistpl
cmp
rcrl
dec
and
sub
int3
sti
test
cmpsl
icebp
rcrl
and
mov
sub
gs
nop
test
pop
ficoml
sbb
sub
mov
outsl
repz
insl
jecxz
dec
jb
adc
adc
fisttpll
ljmp
xchg
add
popf
xchg
lcall
repnz
test
sbb
mov
mov
imul
call
cmp
push
push
faddl
add
ljmp
or
pusha
sub
fxch
sbb
push
jns
and
or
fs
movsb
pop
filds
daa
adc
ljmp
imul
dec
inc
adc
push
dec
push
cli
xor
adc
out
inc
stos
push
sub
pop
shl
test
data16
jge
daa
cwtl
push
sbb
pop
dec
movsl
xchg
cwtl
out
sbb
imul
cs
sub
insl
pop
xlat
fldcw
fwait
shrb
mov
lods
sub
jnp
lock
mov
xor
push
bnd
pushf
bndldx
aam
loopne
mov
jl
jno
and
push
push
into
data16
cli
daa
jo
cmpsl
push
imulb
cmp
pushf
lea
mov
jge
or
add
dec
jo
out
rolb
test
mov
mov
mov
js
jo
fstpt
add
enter
mov
das
sahf
mov
fmull
mov
fidivs
push
adc
xor
or
ja
cld
jns
lea
ja
push
mov
scas
dec
push
push
sti
in
adc
fsts
in
and
mov
aam
aam
mov
or
imul
imul
clc
outsl
sub
insl
adc
xchg
ja,pn
ja
out
ljmp
nop
cmp
es
jge
mov
negb
sbb
leave
sub
cmp
add
stos
test
inc
cltd
int3
mov
aam
inc
in
fsub
push
pop
sbb
test
aas
insl
adc
fcoml
and
add
popf
mov
hlt
sbb
add
outsl
xorl
pop
mul
popf
bound
out
mov
pop
call
call
imul
jle
push
cmp
adcb
jge
xor
and
fmull
add
mov
xor
mov
out
sti
shl
dec
sbb
mov
push
mov
mov
ror
mov
rcrl
push
and
test
or
jp
sbb
xor
mov
iret
jp
jbe
xor
adc
stos
push
ja
mov
dec
jae
in
pop
dec
mov
shr
push
ja
lock
push
fwait
cmp
cmp
and
outsb
loop
decb
dec
mov
divb
les
mov
outsb
jno
dec
out
arpl
lds
cld
ret
ss
push
push
int
pop
notb
fs
dec
dec
pop
xlat
xchg
sub
ja
pop
dec
arpl
pop
hlt
aad
sbb
adc
xchg
mov
in
je
cltd
vpaddw
out
jecxz
fimull
mov
or
mov
nop
repnz
mov
xor
jo
sub
addb
cmpsb
shlb
jp
or
test
inc
mov
icebp
add
bound
push
xor
aad
pop
add
in
call
ds
and
inc
fisttpll
dec
jecxz
dec
out
inc
push
shll
adcl
stc
and
push
and
push
sti
dec
sbb
mov
pop
into
icebp
lods
movsl
dec
fadds
leave
adc
lahf
dec
mov
popf
aaa
inc
pop
dec
dec
idivb
xor
xor
mov
add
adcb
idivl
cmp
add
add
repz
push
sahf
mov
pop
notb
in
mov
jle
cltd
and
lods
and
clc
in
sbb
jge
outsl
aad
mov
mov
repnz
insb
jg
xchg
popa
in
aam
hlt
push
sub
movsl
add
add
cmc
mov
sbb
mov
push
mov
adc
mov
xchg
mov
cld
jmp
push
lea
loop
call
rcrb
cld
cmc
aad
push
scas
fadd
cli
iret
cmc
mov
mov
dec
bound
xor
mov
cs
sbb
out
mov
fcoms
xchg
and
sbb
adc
xor
push
mov
mov
sub
xor
and
lock
ja
jg
scas
int
rorl
mov
sbb
idivl
mov
cli
xor
out
stos
xorb
out
push
outsl
outsb
int
lcall
xchg
imul
mov
push
sbb
lods
xchg
in
out
loopne
cmc
je
mov
sub
dec
add
ret
push
ss
push
out
cmp
pop
cmpsb
ss
mov
lods
dec
dec
mov
sti
popa
popa
jo
mov
or
mov
cmp
xor
jle
push
mov
dec
or
jle
mov
xchg
sub
inc
pop
fcoml
mov
xchg
out
ret
mov
daa
loopne
aas
xchg
xor
push
fsubr
fildl
sbb
push
fwait
pop
adc
mov
mov
mov
add
or
cmpsb
xchg
xor
leave
test
aam
dec
arpl
mov
dec
sub
std
lret
fsubr
arpl
rcl
add
sbb
std
xorb
shll
addr16
dec
inc
out
fists
test
sbb
frstor
cld
insb
mov
jns
loopne
adc
int
in
les
ljmp
sub
pop
jecxz
adc
test
orl
call
dec
cmp
mov
cmp
nop
or
lock
addl
inc
xor
fwait
rorl
ficomps
int3
loopne
jb
mov
daa
dec
in
call
ss
push
mov
jns
and
loope
mov
sub
jmp
xor
in
inc
adc
xchg
lock
xor
addr16
in
inc
and
pop
adc
mov
sbb
into
mov
ret
lock
lea
mov
mov
iret
pop
jle
mov
jnp
out
sub
and
push
jo
lds
arpl
and
fs
push
lahf
inc
mov
or
aam
inc
push
mov
dec
xchg
ds
sbb
enter
xchg
in
sbb
sar
jnp
mov
pop
jl
add
lds
xchg
out
xchg
or
add
or
test
adc
xor
scas
out
mov
sbb
mov
cwtl
pop
sub
adc
pop
dec
mov
adc
xchg
xlat
sub
fisubrs
or
test
pop
xor
sub
je,pn
mov
sbb
push
hlt
xchg
int
mov
fisubs
xchg
dec
or
jl
push
loopne
sub
sub
jnp
fmul
jmp
sbb
adc
fdivr
push
stos
mov
cmp
xor
cwtl
xchg
jg
jmp
clc
xor
popf
fcmove
outsl
add
outsb
ret
mov
and
add
mov
std
jl
sbb
stos
cmp
xor
or
sbb
cs
dec
sbb
out
cmp
xchg
imul
in
rcrb
rclb
cmp
subb
mov
rorb
sti
adc
jl
jp
out
dec
shlb
sarb
mov
xor
int3
ficomps
fistl
inc
mov
aaa
xor
iret
xor
lahf
addr16
adc
xchg
insl
jl
shll
jle
xor
mov
dec
fcoms
fwait
pop
sbb
cs
fisttps
nop
cs
add
xchg
aad
xchg
push
mov
push
push
pop
mov
dec
and
cmp
es
inc
jae
push
xchg
add
add
or
sbbl
jle
adc
inc
in
mov
jno
sub
mov
divb
neg
je
and
in
cmp
adc
and
cs
in
mov
push
testl
pop
push
mov
daa
dec
push
jno
xchg
and
repnz
and
jnp
divl
lock
sub
push
cli
pop
pop
sti
in
jb
mov
adc
xor
jb
call
inc
push
ja
scas
das
pop
cmpsl
push
mov
or
mov
add
out
xor
jmp
mov
jns
loope
in
jns
fcoml
scas
scas
adc
adc
adc
jns
mov
xchg
movsb
repnz
shl
daa
test
insb
mov
mov
clc
les
popf
mov
movsl
lahf
jmp
ret
in
mov
dec
movsl
shrl
lea
mov
xchg
and
cmpps
mov
fisttpl
add
jp
in
mov
shll
dec
jo
bound
movsb
pop
mov
stc
adc
push
jo
aaa
mov
hlt
add
sbbl
and
out
lods
pop
pop
pop
and
xchg
mov
std
and
dec
pushf
and
add
dec
cwtl
jns
outsb
rcrl
popf
insb
ljmp
ljmp
xor
sub
repnz
rcrb
push
and
addl
xor
or
rcll
mov
add
pop
xchg
mov
adc
mov
mov
test
jns
jno
xchg
mov
inc
nop
lcall
mov
dec
mov
mov
adc
or
add
jne
scas
loope
dec
xor
mov
inc
mov
out
mov
out
xchg
cmp
add
imul
mov
flds
testb
pop
stc
xchg
fcompl
mov
xchg
mov
fwait
popa
mov
icebp
in
fnstenv
add
push
jp
add
jns
add
or
sahf
out
xor
sbb
cmp
adc
pop
adc
imul
adc
cs
dec
clc
push
sub
or
aas
cmp
dec
or
xchg
pop
outsl
and
and
or
das
mov
sarb
pop
xchg
cli
test
mov
mov
or
jno
addr16
jae
mov
cli
push
or
les
push
push
fsub
lods
gs
out
mov
loope
mov
insl
repz
popa
adc
test
outsb
inc
in
jns
sub
lods
lods
jl
xchg
mov
test
loope
push
sarl
das
test
xor
cld
loop
sti
mov
stos
or
xchg
loopne
inc
cmp
rcll
mov
fsubrs
sub
lods
xchg
mov
push
mov
outsl
mov
out
mov
call
and
repz
lcall
mov
ds
and
insb
mov
pop
mov
jg
lock
out
pop
out
lret
idivl
ja
fidivrl
out
mov
imul
aam
rol
xor
adc
xor
sub
mov
hlt
inc
push
dec
jno
sahf
rorb
add
xor
xor
and
lret
or
sbb
insb
dec
je
fs
cmp
sub
insb
and
xchg
data16
or
hlt
mov
mov
sbb
pop
lcall
and
ss
pop
pop
fisubs
mov
repz
fcmovbe
rclb
cmpsb
dec
ret
push
xchg
test
xchg
dec
push
pop
cltd
jp
pushf
jecxz
test
mov
add
sub
mov
cmp
mov
fcoms
cmp
out
hlt
ror
adc
int3
adc
daa
shll
cmpsl
dec
sub
xchg
fwait
xor
fstl
jnp
popl
cmp
arpl
xor
jp
add
inc
outsb
scas
sti
loopne
repz
sbb
pop
test
test
sbb
jge
adc
ret
loope
push
cld
jno
jle
jge
jo
adc
push
push
pop
mov
inc
stos
push
add
imul
or
mov
movsb
jne
pop
xor
notb
mov
std
xor
xor
out
mov
lock
mov
test
push
shl
aas
xchg
ja
push
shll
jnp
xchg
cwtl
push
ret
std
cmp
pop
pushf
xrelease
dec
mul
das
dec
mov
loope
popa
daa
pop
out
lahf
outsb
mov
xchg
inc
sbb
cmpsl
or
adc
dec
scas
push
or
andl
ret
add
stos
jnp
or
xlat
sub
cli
shr
push
inc
pop
sbb
clc
not
add
and
dec
lcall
push
rorl
ret
push
out
fiaddl
das
mov
pop
pop
std
dec
push
pop
ljmp
push
mov
mov
cmp
pop
mov
and
popf
lret
daa
sub
xor
and
sub
lods
cld
dec
in
jno
xchg
orl
fucomip
cld
inc
jmp
movsl
xchg
add
sbb
sti
mov
jb
jecxz
hlt
int3
and
int
cmpsb
push
sub
out
ret
mov
std
arpl
pop
inc
adc
cmp
mov
sbb
add
push
mov
push
mov
lahf
push
mov
int
outsb
mov
neg
adc
pushf
dec
mov
fcompl
adc
mov
mov
imul
xchg
dec
hlt
sar
adc
sti
bound
mov
xor
mov
std
ret
jo
hlt
rorb
pusha
subb
dec
pop
xchg
ret
push
mov
xor
add
add
adc
loopne
pop
aas
scas
in
jns
movsb
stos
or
sub
ret
xchg
pop
and
mov
xchg
push
jg
loopne
mov
sub
nop
xchg
test
out
ss
outsb
pop
sub
sub
pop
mov
xchg
pop
xchg
push
std
imul
xchg
jne
and
ljmp
mov
clc
mov
mov
adc
cwtl
repz
jge
stos
sbb
mov
stos
ret
cltd
push
adc
pop
push
dec
sahf
rcrl
gs
xchg
dec
jg
cs
push
fdivrl
mov
js
std
sub
sti
sbb
mov
js
cmp
pushf
mov
lcall
popa
mov
rorb
nop
repz
pusha
mov
fyl2x
pop
cmpsl
jbe
push
lods
inc
push
aaa
add
test
fstps
and
lret
jle
jg
cmp
or
test
movsl
aaa
ljmp
arpl
mov
pop
jmp
pop
js
fsubrl
jae
in
pop
lods
mov
pop
cld
pop
dec
dec
lods
std
cmpsl
arpl
popf
pop
addl
fldt
xchg
sarb
clc
dec
call
or
mov
jecxz
aaa
imul
sub
push
adc
or
sub
cmp
push
pop
or
inc
sbb
push
push
sub
mov
xchg
sbb
test
push
push
xor
incl
or
mov
add
sbb
repz
pop
push
icebp
mov
fidivrs
in
scas
jg
dec
dec
adc
iret
push
add
popa
adc
inc
pop
mov
insl
lcall
pop
jp
cmc
shrb
adc
in
fwait
mov
pop
ds
pop
pushf
sti
sti
out
xchg
cmp
fisubl
testb
sbb
xor
popa
cld
dec
stos
jecxz
mov
jl
push
insb
adc
idivl
leave
and
lret
stos
insl
popl
lods
inc
and
add
pop
sub
add
add
or
arpl
jecxz
sti
pop
or
les
es
mov
mov
popa
jne
or
mov
sbb
fmuls
xchg
in
sub
mov
xchg
aad
shlb
dec
add
mov
jae
jmp
dec
dec
or
mov
jno
sub
add
sbb
mov
stos
jo
clc
jo
lock
dec
stos
aad
fstpt
add
jp
dec
inc
test
jb
mov
mov
loop
loop
je
mov
and
mov
xor
sahf
filds
lock
xlat
push
jge
xchg
js
xchg
bswap
pop
add
rcrl
push
pop
mov
loopne
test
push
lcall
fdiv
jmp
mov
testb
push
popf
or
lret
xchg
test
jmp
jge
push
arpl
sub
push
aam
push
and
jl
inc
shrb
je
movsb
mov
jne
stos
xor
jne
pop
testl
testb
aam
and
dec
jge
lods
in
lahf
lock
jg
out
rorl
filds
cmp
push
inc
fadd
dec
aas
inc
xchg
aad
push
jns
lret
xchg
movsl
lret
mov
clc
stc
lcall
fidivrs
scas
xor
mov
mov
loop
insb
add
test
mov
lock
pop
jge
frstor
sbb
mov
iret
mov
jp
dec
ds
xlat
or
out
scas
int3
push
lcall
adc
mov
add
pop
and
ss
nop
cltd
cmp
out
jb
sub
pop
cld
and
ljmp
rorb
pop
push
xorb
inc
mov
and
sbb
mov
mov
hlt
jns
scas
insl
mov
pop
fmul
mov
cwtl
mov
adc
pop
jb
add
int
ds
adc
inc
xlat
lock
test
shll
mov
arpl
push
jmp
xchg
cld
lods
cmp
mov
jmp
and
pop
xchg
dec
into
lret
popa
and
rclb
pop
lds
daa
aad
fiadds
leave
clc
ja
test
mov
or
inc
js
dec
cmp
std
mov
adc
and
dec
xchg
and
stos
shll
scas
xor
add
lds
dec
jno
jo
fucomip
dec
shll
inc
adc
lahf
push
pop
dec
in
push
popl
pop
mov
dec
jmp
negb
loop
js
loop
mov
inc
ss
xor
xchg
sbb
pop
pop
fistpl
imul
jge
push
add
dec
cltd
fwait
mov
sub
popl
push
rep
fwait
or
insl
jg
ds
cmp
add
sub
pop
xchg
das
inc
lods
mov
repnz
dec
inc
cmp
iret
pop
xor
jge
popl
mov
jmp
pop
mov
xchg
rcrl
dec
repnz
xor
jbe
or
jno
stc
push
lods
fdivr
cmp
pusha
mov
mov
dec
ss
imul
faddl
mov
scas
mov
push
ljmp
jno
pop
mov
sahf
pop
sar
lods
push
cltd
call
adc
cmp
ss
enter
pop
loopne
lock
mov
popa
jg
aad
mov
xchg
inc
inc
cltd
mov
cmp
iret
adc
pop
mov
add
jmp
mov
sbb
push
inc
imul
icebp
ljmp
cmpsl
arpl
test
lret
xor
idivb
inc
mov
pop
mov
cmp
xchg
push
xor
sbb
cmpb
xor
test
scas
or
testl
or
jmp
dec
out
xchg
insl
lcall
jge
xor
test
mov
and
push
xor
sbb
or
loope
cmp
add
das
push
or
jp
sbb
jg
iret
in
mov
je
sub
xor
jge
xchg
scas
pop
fnsave
mov
cmp
mov
push
ja
jne
test
cmc
mov
and
daa
inc
sarb
test
jne
out
addr16
inc
jge
push
mov
nop
and
ret
mov
inc
cmp
push
mov
inc
fcmovb
dec
loopne
andl
jbe
cmp
mov
ds
mov
pop
inc
neg
imul
sub
sub
xlat
js
enter
loop
xchg
xchg
call
pop
repnz
cmc
add
cmp
pop
dec
lret
jmp
es
cmp
xchg
pop
js
call
pop
and
repnz
aad
mov
imul
fs
jne
and
mov
sbb
std
fucomi
dec
mov
jmp
mov
sbb
adc
sbb
fst
xchg
cmpsl
lea
adc
ja
cmp
insb
shlb
push
jnp
inc
mov
push
cmpsl
adc
ret
enter
add
lds
aam
fisttps
xlat
lea
stos
pushl
mov
lods
pusha
adc
sbb
ficomps
inc
mov
jo
cli
inc
clc
sbb
push
jecxz
mov
outsl
je
or
inc
sub
and
xadd
cli
lcall
mov
mov
mul
insb
mov
insl
mov
mov
pop
lods
add
pop
sar
mov
mov
stos
hlt
dec
dec
or
je
cld
pop
test
pop
and
idivl
sub
inc
shrb
mov
cmp
sub
call
inc
sub
pop
test
mov
xchg
xchg
leave
es
dec
cmp
lock
adc
jns
testb
jge
into
or
jmp
inc
or
jecxz
repz
dec
sbb
fstpl
nop
jmp
out
xor
cltd
mov
mov
adc
dec
add
pop
cmpsl
sbb
and
push
shlb
xchg
bound
iret
sub
sub
popa
mov
enter
adc
xchg
mov
fdivrl
push
push
mov
sahf
sbb
pop
adcb
inc
cwtl
mov
lahf
test
loope
fwait
cmp
ficomps
dec
mov
xchg
leavew
pop
xchg
sahf
push
scas
pop
icebp
aam
and
test
dec
mov
sbb
int
xchg
clc
pusha
mov
pop
mov
test
dec
pop
or
scas
das
mov
pop
fcomps
mov
je
lahf
jge
push
imul
jbe
xor
xchg
adc
mov
cmp
js
xlat
sbb
and
or
sti
imul
xor
insl
push
dec
ret
cmp
aam
stc
lds
pop
mov
shl
pop
xor
cltd
or
fdivl
push
mov
cmp
cmp
sahf
test
sub
cmp
scas
cld
stos
js
loopne
scas
pop
sahf
lret
cmp
adc
jge
push
out
mov
rclb
cmpsb
adc
dec
mov
xor
jle
sub
aaa
pop
fistpll
mov
je
fwait
dec
fidivs
add
jle
sti
cmpsl
ret
jl
int
loope
pop
sub
cmp
mov
xor
adc
adc
cld
enter
andb
pop
inc
dec
inc
cld
add
cmc
add
jle
in
sahf
lods
push
and
mov
stos
fstpt
sbb
notl
dec
sbb
repz
mov
jg
and
jae
pop
push
mov
loopne
ja
ja
iret
xor
adc
addr16
sbb
mov
and
jb
std
jbe
mov
ror
loopne
mov
xor
cli
add
dec
xor
mov
xchg
ror
sbb
xchg
mov
inc
add
fmul
and
lret
dec
ficomps
mov
add
push
adc
test
xchg
and
cltd
aaa
and
addr16
mov
lcall
fimuls
ret
insb
lods
inc
mov
in
or
mov
xor
inc
mov
or
rcrb
pop
into
cmpsl
and
adc
out
dec
test
mov
sar
dec
push
xchg
pushf
mov
cmp
das
mov
jmp
shl
in
push
test
mov
mov
pop
lret
hlt
pop
xor
sub
pusha
sahf
pop
rcrl
rol
fimull
mov
mov
lods
cli
xor
in
stc
cwtl
sti
or
call
adc
pop
cwtl
mov
jns
outsb
cmp
pop
sbb
cmp
fsubr
les
mov
push
or
fcoms
push
push
inc
test
mov
pop
pop
mov
out
sti
loopne
dec
xor
xchg
xor
stc
imul
cmp
into
idivb
adc
mov
push
leave
ficomps
insb
push
leave
mov
hlt
lret
repnz
sbb
dec
fidivs
push
mov
lea
sbb
inc
call
sbb
mov
or
leave
hlt
shr
xchg
sub
jb
mov
adc
mov
pop
popa
out
mov
test
jbe
jne
xchg
clc
and
dec
fldt
add
ja
xchg
push
push
add
repnz
lea
mov
in
xor
iret
lods
lock
sbb
sbb
jge
xchg
rorl
xlat
cltd
push
rorl
push
mov
icebp
clc
pop
sbb
les
dec
or
jno
js
pop
mov
mov
sbb
rcrb
pop
cmp
xor
addb
aad
sub
pop
push
fwait
movsl
aaa
repnz
in
arpl
lret
loope
ret
outsl
fsubl
push
mov
int3
cmp
fucomp
push
xchg
cmp
mov
cmp
mov
sbb
hlt
sti
dec
lock
xchg
lret
lcall
out
in
mov
add
or
sub
jg
jecxz
fwait
js
sub
repnz
jns
dec
xor
aam
inc
and
jb
sub
inc
jl
cwtl
mov
ljmp
imulb
andb
in
adc
jnp
loop
push
dec
sub
call
lahf
or
das
sahf
mov
lods
mov
addl
in
testb
inc
lret
out
xor
pop
or
test
pop
dec
js
iret
in
mov
imul
je
inc
dec
mov
push
mov
xchg
mov
mov
add
ds
jmp
js
pop
jg
int
test
subl
out
xor
fs
stos
scas
fsubrl
fisttps
clc
xchg
int
aaa
cmp
icebp
inc
mov
shll
xor
js
xor
dec
mov
popf
ss
clc
les
adc
jl
sbb
sti
and
and
mov
push
push
loopne,pn
dec
rcrb
pop
dec
sub
mov
inc
jnp
test
inc
fiadds
ds
pop
das
mov
insb
add
pop
adc
ljmp
movsl
push
cmp
jnp
cmp
pop
loope
or
in
pusha
mov
faddl
mov
repnz
imull
pop
inc
cwtl
jmp
or
dec
xchg
push
cmp
inc
add
mov
pop
pop
mov
push
cmova
pop
mov
es
inc
ficompl
xchg
sub
pusha
repnz
int
int3
jmp
hlt
pop
sti
mov
xchg
fcomp
inc
adc
int3
lahf
pop
adc
dec
adc
arpl
and
xchg
and
fsubl
shr
in
stos
ja
ss
call
cld
push
punpcklbw
xchg
bswap
inc
in
sbb
iret
sbb
push
mov
jbe
sahf
insl
popf
fidivrs
pop
xor
sahf
addr16
fs
mov
mov
fwait
add
sbb
adc
movsb
mov
xorb
cwtl
sbb
mov
aad
jp
push
cmp
mov
jl
dec
je
stos
test
sbb
popf
lods
jne
pop
gs
adc
ror
hlt
add
jecxz
push
test
inc
or
scas
dec
pop
pop
and
adc
imul
nop
jno
xchg
mov
mov
into
sub
and
clc
fucom
adc
sub
ds
dec
xor
in
mov
loope
mov
aad
jb
idivb
mov
decl
movl
je
leave
sahf
adc
sub
rcll
imul
in
inc
jns
imul
lea
xchg
int3
xchg
pusha
test
inc
xchg
and
mov
fdiv
out
jle
jns,pt
add
outsb
mov
inc
xor
xor
jae
jp
repz
inc
xchg
repz
addr16
and
ljmp
mov
cmp
mov
mov
cltd
pop
pop
std
orb
xchg
pop
stos
out
push
icebp
ret
xchg
adc
je
fwait
pushf
xchg
lods
sbb
shrb
das
movsl
mov
mov
mov
arpl
test
test
mov
mov
hlt
push
mov
adc
push
lods
jp
test
movb
outsl
aas
loop
adc
mov
jbe
inc
mov
aas
cmpsl
adcl
push
and
xor
jb
mov
mov
jns
addr16
xchg
lcall
cvttps2pi
sub
outsl
mov
movsl
jl
push
mov
movsb
sub
frstor
adc
or
dec
jecxz
call
clc
hlt
movsb
or
jo
rorl
add
sbb
and
jl
ja
sub
sub
shll
loop
pop
call
mov
cmp
xchg
sbb
xchg
sbb
notb
inc
push
fisubrs
push
or
or
jle
adcb
out
insb
cmpsb
lods
mov
sbb
loope
cwtl
push
xor
cwtl
lcall
imul
dec
test
xchg
sbb
pop
xor
fwait
rclb
enter
or
adc
imul
popa
out
dec
jnp
mov
sbb
add
daa
fisubrl
inc
add
insb
icebp
loope
push
shrb
sub
push
jae
in
xchg
jecxz
lahf
bound
jne
jbe
or
mov
jns
and
iret
or
in
jle
je
sbb
pop
cmp
mov
std
mov
cmp
in
jns
mov
xor
or
stc
aad
lea
mov
sahf
adc
outsl
inc
xchg
std
pushf
rolb
jecxz
dec
adc
mov
das
ss
inc
aaa
dec
mov
push
sub
gs
mov
es
sbb
mov
mov
pop
inc
iret
aaa
push
cmp
cwtl
shll
add
push
call
ljmp
or
pusha
ret
bound
aad
sub
addl
dec
mov
inc
and
mov
xchg
mov
cmp
dec
fldln2
nop
mov
sub
lods
pop
inc
and
ficomps
add
mov
arpl
adc
stc
sbb
mov
jnp
jge
fisttpl
ret
aaa
pop
cmp
pop
adc
jae
sbb
or
xchg
mov
popa
inc
fsubl
adc
mov
fs
stc
mov
lcall
sbb
loope
jne
sbb
push
mov
cli
fmull
fstpt
xchg
aas
pushf
add
jno
pop
std
dec
mov
fcomp
push
and
insl
push
pop
and
loope
xchg
lock
pop
mov
in
or
lock
lret
incb
shlb
jb
icebp
push
out
addr16
inc
and
cld
mov
imul
testl
cltd
std
mov
insl
pushf
enter
ficompl
mov
lock
scas
jae
lock
push
in
xor
icebp
fwait
mov
jmp
in
aaa
jne
pop
ja
nop
push
push
cld
loope
sarl
xor
push
or
das
loop
dec
sbb
fcoml
scas
icebp
or
adc
pop
mov
jg
cmc
xchg
sub
xchg
dec
jbe
xchg
jns
mov
mov
adc
cli
dec
push
fiadds
pop
push
mov
push
mov
cmpsb
sarb
mov
cmp
adc
loop
mov
inc
scas
jp
or
dec
sub
pop
xor
xchg
fdivr
bound
in
add
push
pcmpeqd
dec
pop
lods
iret
aam
jecxz
pop
mov
outsb
dec
inc
add
mov
sbb
add
pop
push
jmp
sbb
cmp
stc
jne
cmc
ret
in
mov
aad
rcl
and
push
ret
jle
pop
or
enter
jmp
or
fdivl
mov
sahf
push
mov
cli
int
data16
dec
jle
in
jle
icebp
xor
out
ret
not
aaa
adc
sbb
jmp
and
jae
les
or
lahf
rorb
xchg
push
pusha
cmp
cltd
mov
pusha
in
mov
je
fwait
pop
jp
pop
loop
lret
mov
and
aas
cmpsb
cmp
in
inc
xor
mov
aaa
sub
rolb
and
mov
push
dec
push
adc
dec
rcl
call
cmp
dec
popa
add
out
fmull
cli
jmp
popf
test
scas
pusha
fcmovnu
lret
fwait
repnz
pop
xor
or
ljmp
sbb
push
insb
dec
ret
pop
mov
inc
cmc
mov
fsts
jne
add
movsb
test
sub
cmp
mov
xchg
push
insb
sub
mov
int
subb
loope
cmpsb
lret
pop
xor
sbb
fbld
jnp
fdivr
sub
push
cmpsl
std
ffreep
jno
jge
and
stos
in
in
lods
fptan
in
cmp
pop
filds
mov
inc
pop
jbe
push
cmp
xchg
aaa
decb
popaw
bound
lret
or
mov
stc
push
jbe
jge
ja
mov
xorl
jl
test
xchg
movsl
scas
sahf
cmpsb
ret
ss
movsb
pop
addr16
push
mov
out
sahf
cmc
jbe
jecxz
fcmovb
dec
push
cwtl
rcrb
pop
out
xchg
int
pop
aas
popf
sub
pop
out
pop
cmp
es
inc
insb
daa
inc
pop
dec
ss
adc
testb
loop
mov
cmp
fildll
cmp
cmpsl
mov
insl
xchg
push
cltd
in
add
xchg
mov
mov
xchg
imulb
xlat
dec
pop
adc
xchg
das
jns
xchg
jnp
inc
lods
pop
subb
push
jbe
or
push
pop
xor
lds
add
dec
pop
das
mov
mov
ror
jle
push
cmp
mov
xchg
fldz
lcall
aam
pop
hlt
movsb
dec
ret
pop
pop
popa
out
push
mov
stc
cmpsl
lods
dec
cmp
cmpsb
mov
aas
out
mov
xor
cli
push
bound
pop
push
in
mov
sysret
in
jg
jne
in
push
and
pusha
or
clc
sbb
inc
push
dec
in
out
fdivs
sarl
in
mov
cmp
and
xchg
fidivrs
and
inc
inc
jle
or
and
jl
in
std
nop
mov
cli
jns
add
lods
adc
shr
xor
scas
fisubrs
fcmovne
sub
mov
xor
mov
cltd
idivl
js
jb
inc
mov
mov
int
shrb
testl
xchg
ss
jg
push
mov
mov
jp
add
movups
lods
jo
push
lahf
inc
mov
xchg
lea
and
out
lds
jb
add
fisubs
sti
mull
psrlw
leave
xor
lods
xchg
adc
push
int3
outsl
jno
arpl
adc
dec
mov
jmp
pop
push
xor
scas
fcmovnbe
loope
aas
in
loope
test
pop
xor
jp
mov
sbb
cli
loop
jmp
js
push
xchg
cmp
add
test
dec
hlt
iret
or
movsb
mov
mov
fldt
js
and
or
aam
lea
sahf
cmp
or
lock
push
rorl
shlb
inc
sbb
push
loopne
jecxz
pop
pop
adc
pop
push
xchg
mov
in
incb
negl
inc
je
ds
daa
ficoms
loope
sbb
push
pop
nop
int
push
dec
ret
or
test
aad
sbb
push
jg
mov
fxch
mov
pop
iret
mov
push
scas
mov
rcll
xchg
lcall
hlt
repnz
mov
mov
mov
mov
lock
cmpsl
iret
repz
lcall
icebp
jmp
push
hlt
mov
andl
add
stos
mov
cmpsb
decb
mov
sbb
aam
jbe
pop
add
popf
into
adc
xchg
and
cmp
xchg
mov
and
jp
imul
cmp
sub
pop
mov
mov
jecxz
dec
pop
fdivs
sub
cmpsb
or
pop
popa
in
xchg
inc
sub
lcall
pop
add
pop
fidivl
mov
xchg
rclb
lods
lahf
push
cmp
jg
jne
cmp
aaa
sbb
mov
in
cmp
cmp
push
pop
lds
addr16
jb
dec
mov
mov
add
std
sbb
stos
jg
nop
pop
dec
pop
mov
mov
cmp
test
pop
jl
add
lock
xchg
sub
pop
xchg
sbb
stc
andb
loopne
shl
jle
xor
inc
pop
mov
fwait
xchg
dec
cmp
loopne
adc
imul
mov
inc
movsl
cmp
test
add
and
cmp
sub
cld
fldenv
sbb
xor
out
cmp
mov
inc
das
push
jle
mov
loopne
leave
sbb
out
popl
jne
fbld
pushf
adc
in
push
insl
sahf
push
xchg
mov
xlat
lret
ja
fcom
sbb
dec
sub
mov
pop
testb
out
and
jl
push
arpl
add
xchg
mov
add
push
nop
outsb
in
push
mov
xchg
popa
ljmp
out
fldcw
dec
inc
enter
dec
jno
ljmp
imul
mov
push
pop
xchg
and
outsb
sti
insb
push
into
inc
xchg
push
les
cmpsl
scas
adc
es
or
xor
inc
and
mov
sub
sbb
push
aad
fnclex
test
jecxz
cwtl
out
xlat
es
dec
add
cmpsl
imull
add
jo
and
sub
add
aad
cwtl
fsubrs
rcl
out
mov
scas
cmp
jg
or
insl
cwtl
loope
lahf
jno
arpl
test
push
stos
and
out
jl
cmpsb
fisttps
popa
push
arpl
icebp
xor
pushl
mov
jne
fisubrs
in
inc
push
push
pop
or
aas
push
lret
push
inc
jmp
test
lcall
in
scas
test
inc
cltd
cltd
cwtl
xor
xchg
mov
lahf
and
cli
sub
mov
arpl
insb
jmp
je
cli
test
insb
sbb
pop
xchg
nop
popf
xchg
jp
aas
or
cvttps2pi
addl
push
add
movl
push
popl
dec
adc
push
inc
push
in
fcoml
cmp
inc
add
push
push
jbe
push
sbb
shrl
fisubrs
sahf
sbb
cmpsl
add
roll
test
test
sub
sub
pop
pop
push
sbb
sub
scas
push
cmp
mov
sub
test
aad
mov
sub
rcrb
jo
loope
xchg
pop
cmp
aad
loopne
imul
add
mov
pop
sub
mov
pop
mov
imul
popa
jb
dec
sub
ficoms
inc
lret
push
movsb
mov
push
sarb
in
xor
xlat
cli
or
testb
xor
push
lcall
pop
mov
inc
or
jge
mov
mov
fadd
mov
ficoms
subb
subb
adc
sub
xor
popf
sub
call
mov
mov
mov
or
xor
iret
jg
dec
fwait
sbb
addr16
pop
pop
subb
mov
pop
cmp
shl
pusha
dec
push
sti
jl
fimuls
in
xchg
mov
jae
mov
inc
cmpxchg
pop
push
mov
adc
stos
femms
push
in
inc
xorl
mov
lods
inc
jb
inc
jg
pop
inc
xor
add
insl
cltd
js
add
push
jle
push
js
cwtl
mov
push
and
sub
push
adc
sub
mov
sbb
cmpsb
mov
movsl
push
scas
enter
call
les
cmp
stos
dec
loope
test
fisubrs
mov
movsl
xchg
or
xor
jmp
mov
push
cmp
jo
sbb
rcr
add
add
arpl
mov
push
lahf
sbb
aas
pop
jmp
lahf
sub
sahf
scas
or
mov
dec
sbb
jae
repz
loop
idivl
xchg
jb
cwtl
jecxz
cld
test
loop
mov
leave
push
and
in
ret
jge
aad
and
sbb
xchg
ja
cmp
loopne
or
aam
jecxz
mov
insl
divb
daa
pusha
adc
lcall
mov
sub
inc
pop
sub
aad
pop
adc
push
dec
sub
and
test
inc
leave
pop
xchg
movsb
mov
loope
cmpsl
sahf
cmp
sub
dec
mov
sbb
jg
push
pop
jns
pop
mov
pop
mov
push
mov
inc
xchg
test
das
push
or
sub
cld
adc
mov
lcall
sbb
pop
xor
cmp
out
loopne
mov
inc
fadd
pop
imul
xchg
lcall
mov
inc
pop
xchg
jne
xor
mov
outsl
push
sbb
or
mov
xor
add
inc
add
jns
mov
xchg
pop
inc
xchg
mov
mov
ss
into
inc
and
xor
mov
div
xchg
pop
addl
pop
add
pop
dec
ror
cmpsl
lods
pop
inc
xor
jge
stc
mov
cmp
pusha
xor
lods
jno
andb
add
and
mov
idivb
jbe
ja
popa
push
fstpl
xchg
arpl
in
ret
sbb
cmp
popf
sub
daa
popa
dec
test
xchg
add
sub
sbb
mov
aad
jge
sbb
push
cmp
cmp
mov
mov
add
mov
xchg
jne
shlb
add
dec
pop
xchg
push
xor
sub
pop
out
cli
std
lods
hlt
shll
lahf
xchg
sbb
adc
push
mov
push
xor
sar
outsb
jge
movsl
inc
add
mov
loop
inc
pushf
cs
mov
stos
xchg
inc
sub
test
sub
add
in
out
cmpl
xchg
pop
and
imul
mov
mov
test
pusha
cs
ficoms
sbb
out
gs
cmovl
xor
push
inc
loop
ret
or
mov
or
xor
pop
fists
ss
push
adc
and
lods
in
xchg
movsb
jae
pusha
push
adc
mov
imul
lcall
mov
iret
xchg
divb
fs
stos
mov
inc
cmpsl
getsec
loop
outsb
push
loop
loop
dec
sti
aad
out
imul
or
repz
rorb
aam
out
sub
push
das
inc
sti
out
dec
addr16
movsl
sub
in
mov
jg
cld
or
pop
addb
push
mov
shr
enter
aaa
repnz
inc
test
roll
add
cmc
pop
jge
jno
test
cs
out
xor
xor
in
sahf
xor
add
loopne
pushf
es
pop
fwait
push
ficoml
xor
jge
and
subl
inc
sub
mov
or
fdivr
inc
lock
in
fstpt
out
mov
cmpsb
jb
shlb
push
pop
clc
daa
ret
cmpsl
xchg
lahf
test
mov
sub
es
sub
mov
jns
inc
jne
push
pop
mov
sbb
cmp
lods
rolb
ds
xchg
dec
orb
into
pop
mov
out
xchg
push
mov
fimuls
inc
bound
ljmp
icebp
mov
ja
rcll
add
xor
std
xlat
add
lahf
ficoms
in
cmp
xchg
sbb
in
mov
divl
dec
xchg
mov
scas
orb
adc
cmp
mov
push
pop
dec
pop
push
mov
sub
jae
jle
aad
sbbb
mov
sub
and
imul
push
fsubrl
xchg
aas
add
cs
fnsave
mov
stos
pop
jo
or
jbe
mov
int
mov
cmp
cmpl
sub
sub
push
cmp
cmp
dec
leave
stos
and
fnstenv
cmp
cmpsl
hlt
les
add
xchg
aam
xor
sub
test
adc
orl
bound
push
jmp
jb
sub
cwtl
sub
jg
rorb
out
mov
cmpl
pop
call
dec
das
movsl
mov
add
xchg
push
ret
sbbl
jl
int
insl
test
or
dec
mov
call
dec
ret
xchg
and
ficoms
mov
mov
inc
mulb
mov
loop
gs
inc
adc
ja
dec
push
push
mov
adc
rcrl
mov
adc
xchg
fwait
and
or
ja
mov
aam
clc
sbb
scas
mov
cmpsl
sbb
pop
sub
imul
fsubrl
dec
andl
inc
mov
push
mov
xchg
leave
arpl
ljmp
ljmp
add
out
repnz
dec
outsl
xchg
sbb
xchg
inc
sub
arpl
pop
pop
add
adc
adc
lret
pop
std
aas
cli
cs
pop
mov
lcall
adc
pop
mov
add
add
insl
sbb
gs
and
and
pop
in
mov
nop
mov
icebp
xor
sub
push
mov
inc
stc
repz
popf
nop
out
hlt
inc
mov
movsl
rcll
or
mov
dec
xor
fbld
test
imul
pop
clc
daa
mov
jns
orl
push
push
iret
cli
roll
mov
cmp
inc
jbe
loope
jp
stos
out
inc
out
jg
loope
nop
stc
dec
gs
stc
push
cltd
push
loopne
jne
cs
xchg
js
push
pop
sbb
sub
lcall
pop
push
sbb
adc
adc
test
push
leave
mov
sti
js
and
add
ffreep
pop
mov
ret
dec
insl
mov
dec
mov
sbbb
inc
inc
addr16
mov
pop
xchg
pop
sbb
cmp
mov
aad
scas
push
out
jge
cmp
punpckhdq
clc
dec
movsb
xor
stos
pop
fs
mov
mov
pop
mov
in
add
std
xor
inc
pop
or
mov
jae
fs
mov
mov
mov
xchg
jo
filds
inc
dec
adc
mov
xchg
dec
jo
mov
mov
rcr
adc
and
push
xchg
sarb
xor
jae
or
mov
out
pop
lds
add
shrl
add
push
xor
sbb
or
jmp
int3
popa
and
jns
test
sub
pushf
ficompl
cli
mov
mov
stos
mov
push
cmpsb
push
js
mov
out
addr16
leave
cmp
inc
sbb
icebp
jmp
mov
pop
jmp
jno
xchg
dec
shrb
mov
pop
ret
inc
inc
mov
mov
lds
xor
jne
neg
fisubrl
inc
out
xchg
or
mov
iret
aaa
fimull
int3
adc
dec
jb
cmp
jge
ja
sub
aam
hlt
push
and
fsubrl
lea
repz
pop
dec
mov
mov
sbb
loopne
pushf
test
in
repz
adcl
or
adc
mov
test
and
xchg
fldcw
ds
mov
push
xchg
in
in
xor
inc
sub
mov
popa
mov
sub
mov
jmp
xor
push
ret
mov
push
xorb
mov
icebp
jp
dec
push
pop
sbb
cmp
subb
cld
incb
and
or
dec
cwtl
sub
or
or
aad
dec
aaa
outsb
jl
lcall
add
sub
loopne
push
iret
adc
rorb
shrl
sbb
cmp
mov
xchg
pop
pop
aas
jge
or
icebp
cmc
mov
jo
out
jns
les
xlat
dec
lods
dec
or
in
sbb
insb
cmpb
dec
xchg
cmp
cs
and
les
cmp
int3
in
das
push
or
push
mov
and
push
call
mov
outsb
and
xor
mov
int3
int
popf
mov
cld
sub
std
xor
aas
mov
jb
movsb
jg
scas
cltd
push
jno
push
xchg
mov
aam
or
mov
mov
fdivrs
cld
lahf
cmp
faddl
inc
call
icebp
xor
mov
in
xchg
fbstp
jne
xchg
dec
dec
sub
mov
daa
iret
sub
cmp
ss
mov
pop
dec
shll
ret
and
push
out
lods
movl
insl
pop
ret
cmp
out
mov
dec
jae
jns
push
inc
imul
mov
ljmp
sbb
sbb
or
bound
xchg
jnp
ficoml
in
inc
mov
jno
int3
mov
call
xor
bound
or
inc
mov
ret
jecxz
outsb
stos
je
stos
lcall
xor
dec
sub
fisubl
dec
xchg
inc
fs
xchg
mov
push
push
inc
movsb
ret
int
inc
pop
fdivrp
std
insl
into
leave
roll
shl
mov
lods
pop
stos
add
cmp
sbb
jmp
cld
mov
add
cmp
mov
test
or
sarl
dec
fwait
cmpsl
scas
inc
rcrb
mov
pop
mov
sub
shl
xchg
add
data16
push
mov
adc
xor
out
outsl
dec
insb
fucomi
xlat
pusha
add
and
repz
xor
iret
and
adc
outsb
sbbb
loope
sub
pop
mov
xchg
fstl
adc
lret
fisttpl
inc
enter
mov
add
cli
outsb
dec
xchg
mov
imul
mov
push
ss
cld
push
xchg
mov
in
pop
pop
sub
sub
mov
dec
dec
or
xlat
cmp
faddp
out
popf
scas
or
ficoms
xor
add
arpl
enter
stos
sbb
xor
aas
aam
mov
sub
mov
ret
int3
les
pop
mov
fstp
dec
mov
fdivrl
push
setp
push
jp
mov
fwait
xchg
push
xchg
adc
out
push
lcall
xor
cwtl
sbb
fsubrl
or
enter
inc
leave
imul
mov
mov
fcompl
sahf
popa
mul
cltd
sarb
adc
xchg
fcoml
mov
jne
or
lahf
and
adc
sbb
sub
negl
jae
pop
andl
cli
cli
inc
fwait
mov
mov
das
jge
xchg
sub
mov
cli
inc
fsubrs
pop
lods
call
repnz
icebp
push
lds
mov
loopne
xor
pop
add
jae
test
iret
sbb
dec
sub
jle
push
inc
sahf
push
xchg
inc
cmc
mov
or
shll
adc
or
fisubrs
arpl
or
stos
xchg
lahf
icebp
mov
fwait
bnd
mov
pop
cwtl
cs
xchg
jecxz
sbb
in
ja
pop
dec
xchg
in
jecxz
repnz
add
push
sbbb
out
lahf
dec
mov
jp
daa
sar
jg
xor
cmp
and
psubw
jge
inc
popf
dec
cmp
les
xor
imul
sub
xchg
fsubr
int
movsl
xor
push
scas
sti
mov
in
jno
popf
pop
repz
adc
mov
sub
pop
rorb
mov
cld
sub
loopne
mov
fcmovnbe
pop
xchg
lods
inc
lock
test
mov
cs
subl
pop
frstor
pop
cmp
dec
ss
loope
ds
inc
xchg
jg
sahf
nop
sahf
pop
bound
data16
mov
arpl
sub
mov
mov
scas
lds
jae
push
pop
lret
xchg
imul
out
mov
jg,pt
cmpl
sbb
les
jp
loop
outsb
pop
or
dec
clc
roll
mov
jecxz
xor
insl
lds
in
cmc
push
add
jnp
mov
xchg
jl
pop
and
sbb
icebp
frstor
dec
pop
dec
int3
push
popa
adc
cld
jge
call
or
cmp
sbb
xor
push
sub
movsb
mov
cmp
add
in
ds
xchg
in
pop
dec
call
aas
ljmp
xor
xor
mov
push
stos
mov
push
int
imul
cli
aas
sbb
jecxz
bound
inc
ja
daa
aas
fidivrl
mov
daa
aam
ss
out
bound
je
xchg
outsb
ret
repnz
and
inc
mov
mov
pusha
push
insl
xchg
test
cltd
inc
fs
jl
push
xor
fwait
outsl
out
push
lods
pop
popf
sbb
js
aam
fmul
xchg
mov
mov
stos
push
or
mov
or
pusha
lahf
sbbb
outsb
sub
jns
adc
push
push
mov
and
jmp
call
jns
mov
in
push
test
mov
nop
fstl
adc
xchg
ss
jmp
mov
mov
cmc
clc
xchg
aas
jbe
and
adc
mov
hlt
lea
or
popf
loope
lret
xor
hlt
das
iret
xor
shll
mov
dec
fcomip
aam
xchg
stos
sbb
insl
pusha
pop
sbb
adc
hlt
loop
loop
mov
jmp
pop
and
mov
inc
ljmp
andl
cmpsb
dec
fwait
mov
mov
mov
nop
das
in
repz
jne
sub
inc
ret
pushf
sbb
push
andl
pop
out
adc
pushf
aas
data16
sbb
das
out
xchg
out
mov
pop
inc
divl
push
rclb
inc
ja
leave
xchg
cmp
mov
ss
push
movb
imul
loopne
jb
fsincos
stos
push
fnstcw
lea
lods
mov
mov
rolb
sub
pop
jle
adcb
mov
push
insb
sub
sbb
cmp
ja
push
mov
push
in
test
popa
pushf
xchg
in
or
jmp
dec
es
rol
cmc
dec
insl
add
mov
jg
cld
push
mov
std
xor
add
mov
jae
sbbl
add
fcoms
push
fwait
jp
test
sbb
xchg
mov
into
cmp
in
ja
test
clc
call
lods
stos
es
out
in
jo
loopne
iret
push
std
das
pop
out
jb
pop
push
and
sub
lahf
sbbb
sub
call
pusha
jbe
int
push
cltd
popf
mov
test
mov
fwait
or
xchg
push
ja
pop
leave
or
mov
test
dec
add
jge
and
mov
mov
jb
mov
ss
push
add
std
cs
pop
lea
je
jecxz
pop
insl
movsb
pusha
or
cli
sti
mov
test
dec
or
sub
popf
rcrb
lea
test
ror
stos
iret
and
loop
and
pop
push
mov
and
push
fcmovu
adc
jne
out
adc
sbb
imul
pop
xchg
int3
mov
test
or
outsb
push
sub
pop
xlat
xor
mov
out
mov
mov
cmp
lahf
das
inc
insl
out
sub
dec
lahf
rcrl
pop
sbb
insl
sbb
mov
mov
cltd
movsb
sahf
inc
cmp
adc
out
loop
dec
lret
lods
mov
xchg
aaa
or
aaa
mov
shl
or
sbb
xchg
and
jnp
ss
ss
pop
fdivr
divb
fwait
push
push
mov
jo
pop
or
out
pop
push
pop
in
cmpsl
gs
xorb
mov
or
test
pop
in
jp
dec
aam
mov
push
xor
and
mov
mov
cmc
dec
xchg
cli
mov
mov
cmp
xchg
xor
ret
jecxz
mov
cmpsl
fidivl
stos
cltd
int3
xchg
addr16
sbb
into
push
cmp
inc
cmc
xor
adc
pop
je
push
incl
pop
in
jge
adc
inc
jecxz
push
mov
stos
ljmp
enter
add
mov
cmpsl
fnstcw
jbe
imul
aaa
in
jmp
push
add
push
push
adc
or
iret
fwait
mov
out
and
aad
addr16
pushf
xchg
sbb
repz
das
push
ret
and
cmp
cmp
bound
test
insl
xchg
add
jns
jmp
adc
gs
movsb
xor
ja
mov
pusha
sahf
sahf
ljmp
lock
adc
loopne
int
dec
xchg
ss
jno
cmpsl
aaa
xor
xor
inc
lahf
xchg
arpl
mov
push
in
xor
pop
dec
cmp
mov
inc
mov
insl
push
addb
es
mov
out
inc
outsl
stos
add
test
lods
inc
out
fldl
add
adc
push
mov
into
cmp
push
std
ja
imul
je
jle
lods
sub
mov
jb
fcoms
mov
cld
imul
cmp
nop
xlat
jp
dec
out
xchg
leave
adc
movsb
insl
cmp
add
int3
fcompl
pop
and
testl
jecxz
mov
pop
imul
inc
pop
in
push
jg
fucomip
pop
jne
or
and
pop
test
cmp
push
mov
pop
cmp
icebp
out
insb
jp
and
mov
sbb
cmp
xchg
add
jle
cld
xchg
mov
sub
es
les
adc
xlat
push
iret
scas
outsb
adc
sub
jl
dec
fs
cmp
in
push
sbb
inc
jecxz
leave
jmp
inc
sbb
xor
xchg
insl
dec
into
jbe
cmpsl
and
xor
xor
pop
fistl
add
sub
aas
aad
stc
xor
jno
lcall
cmp
mov
xor
dec
pusha
mov
js
aam
push
rcrb
sub
add
insl
in
fidivrs
cmp
push
cmp
orl
leavew
add
iret
inc
sbb
adc
je
mov
jp
push
pop
lock
xchg
jne
not
jnp
outsl
and
jmp
pop
pop
loope
cmp
jmp
aas
adc
test
in
cmp
jne
je
hlt
pop
push
pusha
adc
add
pop
push
cmp
fisubrs
xchg
movsb
jnp
mov
outsb
cltd
sub
sbb
cmpsl
cmc
cmp
mov
daa
aam
sub
pop
adc
jmp
icebp
dec
repz
popf
gs
lahf
sti
out
loope
mov
xchg
negb
pop
add
xchg
jb
mov
jecxz
adc
mov
in
test
or
dec
sub
shlb
xchg
test
out
and
dec
lcall
sub
filds
mov
fcomps
clc
mov
fxch
sahf
sub
idiv
lahf
inc
jns
in
inc
enter
inc
popf
int3
leave
pop
gs
dec
mov
insb
or
lret
loope
sub
sbb
pop
pop
adc
jo
lret
dec
dec
shlb
cmp
xchg
or
rcrb
aam
in
scas
push
cmpb
push
repnz
stos
adc
mov
pop
sub
faddl
add
iret
xchg
les
mov
fs
push
ss
add
xchg
rorl
mov
pop
sub
rorb
sub
ljmp
out
xor
call
lods
cltd
inc
daa
out
cmp
aad
dec
mov
push
subl
push
leave
inc
cld
mov
outsb
adcb
pop
lds
push
jne
xchg
jbe
xchg
aam
mov
jmp
push
push
fisubrl
push
lock
mov
inc
mov
pop
outsl
jno
and
xor
or
enter
jp
bound
insl
sahf
repz
xor
jbe
mov
jns
push
xchg
and
xchg
or
mov
ljmp
pop
enter
lret
outsl
hlt
out
dec
push
inc
and
sbb
and
mov
js
testb
sbb
sbb
pop
jecxz
mov
pop
cmp
sbb
shl
xchg
jbe
stos
hlt
adc
push
sub
jmp
jo
mov
call
icebp
xchg
mov
mov
iret
pop
jg
dec
fldt
mov
faddl
xchg
test
leave
out
lret
test
fdivrl
sahf
mov
loope
mov
insb
mov
rcr
jo
out
out
cmp
shll
xchg
clc
pushf
jp
arpl
mov
lea
or
mov
cmp
or
pop
sbb
inc
sbb
dec
push
push
mov
icebp
mov
inc
sbb
pop
mov
mov
add
inc
aam
stc
leave
mov
cmp
ja
sub
mov
add
xchg
and
sti
sbb
jno
fidivs
sarl
add
dec
xor
mov
shr
lods
mov
adc
pusha
scas
or
mov
cltd
or
int
push
jp
daa
mov
pop
push
out
cmpsl
mov
and
mov
add
es
mov
data16
push
fdivrp
ret
dec
lods
jle
mov
pop
push
sub
jbe
ljmp
xchg
add
jp
test
std
dec
push
stc
in
test
xor
les
test
dec
push
adc
test
insb
inc
lock
add
fildll
out
daa
insl
and
sub
add
ja
and
add
push
adc
mov
or
popa
jmp
and
cmpb
clc
fwait
dec
fnsave
test
xor
xor
or
ficoms
test
xchg
ja
xchg
adc
push
xor
and
repnz
lret
mov
add
xor
mov
mov
pop
repnz
mov
jg
enter
pop
and
push
and
movsb
mov
add
mov
out
stos
aam
mov
lahf
mov
inc
jo
icebp
mov
loop
pop
cwtl
aas
and
dec
pusha
mov
lsl
pushl
and
inc
adc
mov
and
xchg
adc
jp
mov
xchg
test
sub
xlat
stos
adc
fs
cmp
in
loope
push
lods
mov
xchg
shlb
mov
mov
sub
ja
xor
sub
add
push
pop
xchg
xchg
xchg
sub
xchg
out
pop
addr16
dec
push
sub
mov
rclb
aam
cmpsb
cli
push
lds
jno
scas
xor
push
dec
ficomps
aad
xor
cmp
loopne
flds
jo
mov
test
add
sub
sahf
ljmp
add
test
dec
mov
ficoml
js
fiaddl
mov
pop
mov
out
inc
xchg
jg
repz
mov
ss
sub
in
call
arpl
lret
orl
scas
das
arpl
shlb
push
dec
mov
stos
dec
fiaddl
stos
jns
mov
xchg
and
jge
aad
cld
cmpsb
out
outsl
jns
inc
mov
ret
cmp
dec
cmpsb
sub
mov
cli
xor
mov
xchg
aaa
add
cmovo
xlat
fidivs
mov
jmp
mov
aad
mov
movsl
negl
test
ljmp
jg
cli
inc
inc
jo
cmp
shll
subb
xor
xchg
push
aad
jp
es
add
push
pop
push
fcomi
xorl
push
dec
dec
mov
push
fs
lods
in
jns
subl
out
inc
out
iret
or
dec
popf
xor
mov
adc
sub
or
adc
inc
dec
ret
xchg
xchg
xor
loopne
and
ret
pop
and
ds
and
sarb
scas
pop
out
or
inc
out
xor
jle
cmp
imul
in
inc
inc
sbbb
sbb
sub
gs
pop
push
mov
xor
cmp
cld
dec
fs
jg
ss
je
sbb
fidivrs
shlb
enter
testb
test
lods
shlb
ljmp
jb
std
sbb
cld
nop
sub
mov
jge
inc
add
test
insb
dec
inc
pop
scas
aad
xchg
testb
dec
cltd
in
mov
hlt
or
js
push
xchg
mov
je
pop
jne
mov
inc
adc
ja
mov
inc
rdtsc
cmpsl
mov
int3
pop
push
cmp
orl
fdivrl
outsb
cld
aad
movsb
les
push
jmp
cli
jne
mov
adc
enter
jbe
jmp
xchg
fwait
pusha
jae
xchg
push
cmp
xor
add
fbstp
and
xchg
adc
ret
jmp
loopne
push
pusha
jge
in
inc
or
mov
andb
and
sbb
fs
jnp
jbe
je
mov
fstl
scas
neg
cmp
mov
pushf
imull
push
pop
pop
aad
imul
lahf
jo
dec
xchg
into
int3
mov
insl
inc
scas
aad
rclb
push
pushf
jge
insl
call
test
shll
jae
loopne
or
sub
inc
jnp
inc
xlat
jmp
push
repz
cmp
out
lahf
add
adc
fcomip
inc
inc
sbb
addl
push
sbb
pop
hlt
fcmovbe
mov
mov
daa
mov
jo
push
mov
js
rcr
push
test
les
je
push
clc
and
movsl
xor
fs
xlat
clc
clc
ss
sbbb
mov
sahf
hlt
jnp
cmpsb
jl
das
in
cmp
jecxz
jmp
dec
cltd
push
mov
xor
hlt
insl
mov
or
ret
out
outsl
testb
and
or
pop
sub
cld
add
xchg
aam
pop
adc
add
bnd
aam
adc
lret
mov
push
xchg
mov
push
loopne
or
aas
movsl
mov
maxps
stos
int3
sub
xor
mov
enter
mov
mov
out
stc
sub
ja
test
es
mov
fistpll
sahf
jo
cmpsb
xor
lahf
cmpsb
add
int
bound
out
xchg
mov
shlb
in
shll
mov
out
xchg
adc
aam
jecxz
frstor
daa
adc
test
adc
imul
or
fisubl
inc
loop
rcl
sub
mov
fsubr
loop
mov
in
aam
in
arpl
jp
sub
adc
js
cltd
daa
sbb
and
ss
xchg
in
shlb
rol
sbb
add
mov
jb
stc
stc
loope
repz
add
cmc
fdivs
fs
bound
scas
out
xor
cmp
push
ds
dec
and
inc
sbb
cmp
lock
pop
pop
sub
jge
inc
or
ret
cli
test
pop
push
jb
lea
fldl
push
mov
or
adc
mov
int3
pop
fistps
pushf
adc
dec
repz
in
pop
mov
and
dec
outsb
dec
inc
aad
mov
sbbb
out
jne
dec
jp
sub
xchg
mov
pop
ret
aam
lock
out
out
sub
dec
fcomp
and
leave
lret
out
aad
lahf
and
lock
clc
stos
lock
sbb
lret
mov
sub
xchg
roll
sbb
sbb
cmc
nop
inc
push
aas
fidivrs
fstpl
outsb
test
in
mov
mov
enter
call
or
inc
sbb
arpl
sub
add
andl
pusha
insl
jae
pop
lock
or
inc
notl
jl
push
or
jnp
dec
push
xor
sbb
pop
mov
mov
in
xlat
faddl
sbb
cmove
cs
mov
inc
mov
jl
pop
sub
mov
in
cmc
mov
dec
test
aas
inc
mov
push
and
add
ret
clc
mov
lret
aas
pushw
push
mov
pop
inc
stos
adc
fnstcw
mov
stc
es
and
xor
xor
or
test
cld
inc
pop
sub
and
mov
lea
jecxz
cmc
dec
xchg
jae
imul
loopne
cmpsl
pop
adc
mov
mov
jb
jg
sbb
xor
sub
lcall
std
stos
sub
movsl
cmp
push
mov
pop
pushf
cmp
and
aad
sbb
mov
nop
mov
sbb
bound
lods
mov
outsl
dec
mov
cmpl
xchg
xor
mov
push
and
std
gs
fld
aas
mov
xchg
cltd
ret
decl
ret
out
lock
add
or
fwait
mov
push
lahf
mov
bnd
and
xor
sub
push
or
fxch
dec
das
inc
cmp
add
sub
push
movsb
cmpsl
mov
mov
sub
sti
dec
leave
add
es
inc
mov
dec
dec
mov
lods
fwait
jo
es
mov
loope
push
or
jne
dec
shl
mov
imulb
call
add
mov
andl
neg
xorb
in
icebp
cmpsb
repnz
popf
ror
fcmovnbe
int
aam
fdivrs
pop
stos
cld
push
jp
add
pop
aas
outsb
fsts
dec
or
ret
sti
add
dec
repz
cltd
jmp
sbb
mov
pop
rol
lret
ds
pop
inc
leave
subl
lret
inc
cmp
mov
into
out
in
jmp
dec
inc
jge
negl
cmp
xchg
repz
push
lock
imul
or
mov
lods
pop
dec
mov
cmp
lret
and
or
inc
stc
dec
les
movl
scas
dec
add
inc
add
xchg
mov
rcrw
sbb
and
mov
insb
mov
pop
push
sbb
pop
add
xlat
iret
mov
sarl
std
jnp
stos
je
mov
inc
dec
nop
pop
imul
cmp
inc
stos
ljmp
ret
adc
cmp
inc
rcll
pop
subl
int
cs
pop
lret
jmp
push
adc
pop
pop
mov
cli
dec
mov
push
stos
aam
push
inc
idivb
xor
bound
cwtl
out
stos
out
dec
dec
inc
pop
push
mov
and
nop
sbb
out
mov
insb
inc
or
ficompl
xchg
jnp
ds
out
pop
fbld
push
test
jg
test
repz
int
xor
sub
xchg
fdivl
stos
and
dec
cltd
cmp
cld
inc
dec
cmc
push
push
enter
bound
add
add
sbb
sub
or
xchg
and
lods
movsl
notb
jg
and
xor
das
movsb
pop
nop
repnz
js
jecxz
arpl
cli
or
aaa
pop
add
jl
mov
dec
pop
sbb
sub
cmpl
pop
cmpsb
into
cmp
sbb
mov
repnz
jl
cltd
loopne
push
sbb
cltd
insl
fildll
gs
call
shll
inc
cmp
xchg
or
pop
inc
nop
adc
push
push
xchg
jg
lret
mov
inc
ret
mov
jno
xor
jno
clc
call
inc
inc
push
xchg
rcll
movsb
sub
cmc
mov
sbb
jp
jbe
adc
idivb
add
xchg
xchg
dec
jo
gs
lods
lret
add
stos
sbb
cltd
pushf
lea
pushf
pop
adc
movsb
and
add
cmp
clc
or
sbb
neg
sbb
ja
inc
addr16
inc
pushf
jbe
into
sub
mov
pop
testl
mov
popf
mov
push
scas
add
fistps
sbbl
jmp
jmp
pop
pop
fs
xchg
adc
mov
xchg
je
shlb
fiadds
icebp
pop
sbb
mov
jmp
adc
mov
xchg
xor
fcmove
or
out
sub
cmc
loop
xchg
dec
or
rcl
movsb
outsb
mov
lret
loopne
iret
fidivl
sbb
cmp
adc
add
stc
aas
aam
and
bound
pop
ja
xchg
lahf
loope
adc
mov
out
das
pop
jae
mov
mov
cmpsl
inc
out
in
ret
fwait
pop
add
cmc
add
test
sbb
cmp
add
lret
lcall
sub
jae
lods
add
out
dec
add
mov
mov
cmpsb
and
xorl
insl
out
sbb
jp
stc
and
loopne
jbe
push
imul
mov
movsl
ja
push
mov
mov
pop
filds
iret
or
mov
mov
les
je
xchg
outsb
adc
test
fists
sti
pop
bound
sub
mov
lods
mov
movsb
push
stc
mov
test
js
jmp
pop
sbb
xlat
fidivrl
cmpsb
loop
test
cs
or
sub
push
cld
daa
sub
jb
push
sub
scas
jbe
dec
sub
lods
cmp
push
mov
sbb
inc
cmp
dec
inc
mov
cmp
cwtl
and
gs
sub
movb
inc
add
mov
sub
mov
mov
sbb
imul
addl
add
in
push
dec
add
pop
sbb
inc
dec
or
jecxz
lret
or
pop
adcl
jno
sbbb
dec
or
insl
mov
cmp
bound
repnz
cmpsb
push
scas
test
jg
fistps
push
xchg
js
or
cmp
and
test
mov
mov
push
and
loopne
pushf
addl
sub
jnp
add
stc
gs
jbe
arpl
loope
pop
out
xlat
push
cs
lahf
sbb
cli
in
adc
push
pop
pop
push
jb
cmp
mov
loope
lock
and
ljmp
imul
gs
add
sbb
out
jne
mov
test
cmpsb
test
inc
nop
sbb
mov
sarb
fwait
mov
ss
push
mov
repnz
stc
dec
icebp
mov
adc
icebp
cmpsb
xchg
mov
outsb
push
jne
inc
jle
test
push
add
imul
lock
mov
loop
xchg
outsl
adc
ds
nop
shrl
xor
pop
int
lcall
push
add
hlt
pop
push
movsl
jnp
jae
mov
fstl
ja
mov
loop
add
leave
imul
sub
gs
mov
adc
cmp
fwait
dec
fisttps
push
pusha
test
mov
mov
adc
xor
mov
fiaddl
add
out
ficoms
btc
stc
xchg
stos
add
test
sub
sahf
mov
sub
repnz
mov
adc
or
cmp
insb
adc
pop
mov
mov
sbb
sbb
cli
mov
jl
pop
mov
andl
aaa
rcll
sub
jmp
popa
pop
rolb
push
jecxz
jno
mov
mov
adc
cmpsb
or
jne
pop
pop
call
out
bound
pop
cmovnp
lret
xlat
jne
hlt
mov
orl
adc
jecxz
mov
mov
sub
lea
fistps
sub
xor
lret
cmpsl
xchg
ret
lahf
sub
popa
enterw
xchg
cmp
xor
xchg
or
aad
jo
adc
jl
jmp
sbb
and
in
jg
lret
adc
loop
hlt
inc
subb
pushf
ret
mov
ja
out
jmp
adcl
jns
add
mov
jno
and
test
cmovnp
shl
mov
outsb
jg
mov
loop
adc
or
cmp
fistps
jge
push
ret
out
add
cmp
fimull
inc
or
stc
xchg
mov
lds
jbe
xor
je
mov
push
in
imul
inc
es
jmp
dec
pop
pmaxsw
call
movb
mov
or
pop
push
and
cli
push
inc
sbb
cmp
mov
cmp
cld
xchg
shlb
loope
loop
stc
arpl
scas
mov
sub
ret
mov
mov
testl
gs
push
shll
pop
jge
repnz
jge
mov
xor
sub
adc
jecxz
scas
mov
rclb
mov
jno
pop
pusha
mov
xchg
pop
in
arpl
sub
bound
push
ret
stc
out
xchg
inc
and
adc
mov
jg
movsb
es
jp
xchg
cs
xor
ljmp
inc
jge
inc
pop
push
loop
pushf
cmp
fwait
push
mov
ds
roll
sti
xor
mov
inc
cmpl
mov
sub
or
cmp
xor
andl
mov
jbe
fidivrl
mov
movsl
jg
jnp
push
icebp
push
jnp
mov
mov
inc
fwait
roll
mov
enter
mov
add
xor
hlt
scas
movsb
or
sub
mov
push
sbb
lahf
es
add
jg
movsb
inc
push
loopne
jle
stos
inc
xchg
and
dec
or
cwtl
sbb
sbb
adc
sub
mov
mov
pop
adc
mov
loope
dec
lods
mov
mov
mov
jle
lods
stc
sbb
mov
adc
ds
mov
movsb
push
dec
and
jnp
sahf
movsl
or
popa
in
fsubrs
fwait
cmp
jb
sbb
mov
push
pusha
jnp
mov
shlb
ds
in
xor
sbb
pop
dec
mov
and
mov
ja
in
mov
mov
jmp
int3
pop
mov
mov
or
rolb
movsb
sahf
movsl
jae
aad
push
dec
jmp
cs
enter
cmp
mov
add
lock
xor
popf
enter
adc
int3
fwait
clc
jne
ret
jp
or
cmp
movsb
mov
test
orl
dec
lea
xor
push
mov
js
push
inc
pushf
push
bound
leave
fdivrl
out
and
out
inc
stos
xchg
cltd
push
cs
shll
fwait
or
or
stos
lds
sbb
mov
inc
lds
xor
add
mov
stc
push
pushf
mov
cmp
dec
das
mov
popl
fisttpll
mov
sub
test
in
xchg
add
pop
int3
push
cmpsb
mov
punpckhdq
mov
hlt
cmp
push
into
icebp
jge
es
pushl
mov
cwtl
test
cmpsb
cmpsl
add
rorl
in
lahf
push
add
sbb
daa
in
mov
daa
jae
lahf
call
jge
scas
adc
shr
push
lds
std
xchg
sbb
call
les
dec
push
cmc
lock
stos
and
jmp
sub
pop
adc
and
push
adc
lret
jg
mov
repz
and
loope
call
int3
jnp
mov
xchg
push
int
bound
inc
in
push
lret
out
xchg
lcall
sbb
add
xlat
stos
adc
insb
rcll
jo
cmp
mov
adc
pop
out
dec
f2xm1
sub
or
mov
cmp
adc
das
leave
ja
sbb
jmp
jno
jp
and
or
jo
add
jno
sbb
hlt
mov
jne
sub
and
sbb
rep
lods
mov
mov
push
add
movsb
out
clc
arpl
sub
jns
clc
loop
test
adc
push
dec
aaa
std
js
adc
cmp
test
cmp
pop
push
push
jbe
js
ljmp
ffreep
ss
rcll
mov
mov
adc
xchg
sub
and
mov
sbb
cmp
dec
out
add
xor
les
popa
mov
aas
insb
or
pop
stos
dec
orl
in
dec
mov
imul
movsb
sub
cmp
jg
dec
push
pop
jp
and
mov
push
movsb
clc
jg
sbb
inc
pop
mov
fstpt
int
cmp
jl
stc
fs
rorb
sbb
fwait
and
loop
and
int
into
flds
imul
push
xchg
adc
repnz
in
or
jae
adc
int3
jnp
testl
lea
pusha
lcall
add
jecxz
cmpsl
in
push
push
jge
mov
xchg
add
wbinvd
nop
mov
leave
cmp
push
cs
push
xchg
fs
test
leave
aam
inc
or
pop
xchg
inc
cltd
inc
in
add
fcomp
stc
call
ret
pop
dec
fcmove
and
mov
mov
dec
xor
inc
stos
pop
stos
movsl
lahf
cld
cmp
insl
jp
inc
xchg
mov
aaa
fisubs
xlat
scas
cmp
sbb
lret
add
scas
shlb
hlt
dec
or
add
imul
mov
ret
clc
pop
cwtl
adc
inc
orl
cmp
ds
mov
in
push
sub
lret
scas
shll
nop
adc
sbb
andb
add
xchg
lods
fcoml
hlt
xchg
or
jl
jne
aam
xchg
test
and
enter
shll
movsl
hlt
pop
add
int
out
std
nop
outsb
movsl
test
mov
std
xchg
xor
loope
mov
jae
adcl
jne
or
inc
cmpl
mov
mov
or
leave
dec
mov
out
xor
xchg
add
icebp
sbb
sbb
xchg
xchg
jmp
push
inc
sub
divb
inc
xchg
dec
scas
aam
cmpsl
das
test
ja
test
outsb
and
das
rcl
je
daa
mov
xor
shrb
pusha
mov
mulb
push
daa
stos
and
dec
lret
or
das
xchg
scas
aaa
push
mov
xchg
mov
mov
sub
ret
fdivp
mov
pushf
push
outsb
pop
cmp
popa
cs
mov
xor
dec
dec
sbb
push
in
mov
repnz
adc
push
std
xchg
jns
rolb
jge
fnstcw
cmp
int
loope
mov
push
push
lret
xchg
add
xlat
dec
sbb
push
dec
sbb
repnz
inc
sahf
push
xor
mov
sub
js
sti
fwait
sub
decl
pop
arpl
mov
cltd
fdiv
adcl
call
lret
add
xor
pop
jnp
sub
lahf
movsb
sub
pop
sahf
rorb
or
xor
stos
nop
xorb
inc
fs
sbb
notb
push
lods
jg
scas
subl
adc
lds
mov
push
adc
xchg
roll
stc
fists
inc
sbbl
in
out
int3
dec
add
cmp
subl
aas
adcb
lock
ss
mov
or
push
rcll
gs
adcb
and
fidivs
push
xorl
xor
mov
jb
dec
mov
mov
popf
mov
and
push
fdivrl
mov
xor
mov
mov
cwtl
jge
sbb
cwtl
or
mov
pop
pop
xlat
mov
mov
pop
daa
lea
mov
imul
negb
inc
jge
loopne
test
jmp
cmp
push
ljmp
xchg
lods
and
mov
lcall
add
cmp
enter
inc
cwtl
test
leave
jg
jecxz
jp
sti
lds
push
je
pop
sub
fbld
inc
push
mov
adc
daa
jae
pushf
mov
sbb
data16
lahf
push
cs
sbb
mov
pusha
mov
into
xchg
movsl
mov
sbb
push
shrl
push
out
mov
mov
cmc
cmc
shld
jne
sahf
sbb
sub
pop
adc
inc
stc
fcmovb
jl
testb
jb
testl
ljmp
call
cmpsl
loopne
xlat
mov
ret
nop
sub
fstpt
sti
mov
inc
xchg
push
cmp
mov
or
and
push
out
ljmp
push
shlb
negl
mov
xchg
inc
aad
les
lahf
aam
in
iret
aad
rcrb
or
mov
mov
dec
or
mov
jae
mov
cwtl
movb
xor
cmp
out
lods
xchg
mov
loopne
test
cmp
aas
jmp
xorl
nop
subb
jo
dec
pop
aaa
hlt
in
add
xchg
and
test
inc
fisubrs
mov
add
popa
ret
cmp
add
aas
lahf
xchg
pop
push
shlb
xor
adc
and
sarl
loope,pt
outsb
data16
fdivr
pop
leave
lcall
out
jle
into
jbe
push
sub
xchg
push
xor
dec
andl
adcl
dec
inc
mov
divl
pop
sbb
and
es
imul
faddl
lret
imul
out
lea
jbe
pop
adc
adc
push
inc
and
mull
jmp
ficoms
cmp
lds
dec
arpl
add
jne
dec
add
sub
das
xchg
shl
mov
add
push
mov
lds
mov
dec
push
xchg
jmp
aad
mov
mov
fwait
rorl
xor
lock
add
scas
dec
punpcklwd
xor
bound
in
jae
mov
subl
xor
xchg
aad
jno
in
jae
inc
xor
cmp
dec
adc
cmpsl
into
lods
lds
adc
bound
lock
pop
outsb
cmpsb
nop
cmovnp
xchg
in
stc
aas
push
aad
lods
into
xlat
xor
les
outsb
add
adc
shlb
sub
scas
xchg
icebp
fnstsw
mov
push
test
stos
dec
or
ficompl
ja
stos
mov
addr16
mov
xor
stos
push
je
or
pop
insl
dec
mov
popa
xchg
inc
cmp
int
jnp
pop
and
jae
inc
adc
xchg
rorb
call
popa
fisubl
aas
jbe
xor
xchg
or
outsb
sbb
lods
cmp
mov
sbb
add
cmp
mov
mov
in
notl
or
stos
in
fsub
aam
xchg
or
xor
cmp
add
xchg
push
cmp
adc
aaa
push
std
les
fsubl
push
inc
roll
and
outsb
sbb
pop
push
mov
lcall
pop
insb
cli
fisttpll
test
mov
and
mov
pop
inc
je
mov
mov
lret
adc
roll
add
fnstcw
repnz
jmp
test
jns
jb
sbb
jmp
add
es
mov
addr16
loope
xchg
xchg
mov
pop
pushf
dec
add
sbb
iret
sahf
aaa
lods
into
or
push
mov
call
cmp
into
jge
roll
sti
sub
ljmp
jecxz
mov
xchg
mov
mov
pusha
lods
push
int3
dec
inc
cli
jo
les
or
pop
dec
push
mov
xchg
movsb
push
or
and
sub
les
mov
xchg
push
and
mov
jnp
push
arpl
push
xchg
sub
pushf
cld
negb
in
mov
out
mov
cmp
in
dec
shrb
jg
nop
mov
imul
rorl
jge
test
cmp
ret
cmpsb
pop
icebp
clc
pop
pop
add
cmpsl
xor
mov
lods
cld
arpl
dec
cli
xor
leave
aas
mov
mov
fs
sub
pop
push
mov
sub
or
cmp
or
xor
sbb
cld
stc
pop
adc
mov
push
mov
jp
xor
mov
xor
and
sbb
push
push
loop
xchg
jo
or
icebp
outsl
mov
gs
std
sub
dec
push
outsl
jmp
adc
aas
cwtl
in
push
mov
cld
mov
and
loop
xor
jle
mull
mov
pop
sar
fwait
in
inc
mov
cwtl
test
hlt
nopl
neg
sub
cmp
dec
mov
sbb
cmpsb
iret
pop
dec
sbb
cltd
daa
out
mov
mov
es
cs
xchg
push
mov
or
ja
jne
jno
call
iret
cmp
or
sub
sbb
inc
xchg
repz
out
dec
and
bound
popf
shl
out
lods
jle
enter
sub
in
loope
cmpsb
jl
dec
test
fldcw
jae
aas
pop
mov
xchg
jbe
jne
andb
xor
push
inc
scas
out
imul
inc
xor
repnz
sahf
repz
xchg
xor
xchg
out
mul
fisubs
adc
mov
ror
cmp
mov
lods
push
mov
pop
lods
ja
xor
sub
jnp
and
xchg
in
pop
test
enter
aam
es
out
jnp
std
fnstenv
dec
dec
push
bound
push
dec
je
repz
xchg
xor
outsl
clc
xor
add
xor
test
push
jbe
mov
fwait
cwtl
inc
cld
lahf
hlt
pop
icebp
inc
pop
and
mov
sahf
lret
sub
lahf
fstpt
out
js
jmp
test
push
jb
ja
cwtl
adc
push
adc
inc
mov
cmp
addr16
pop
add
inc
dec
jge
jbe
movsl
dec
je
jb
pop
outsb
push
and
sbb
push
adc
and
imul
jb
and
test
leave
test
cmp
decb
mov
cld
push
and
loop
push
xor
and
mov
push
xor
lcall
cmp
cld
sub
mov
test
inc
les
dec
sbb
adc
leave
insl
xor
adc
dec
xor
inc
sbb
leave
or
mov
arpl
fidivl
push
pop
daa
sti
pop
insl
mov
adc
adc
mov
mov
sbb
pop
inc
das
fildll
cmpsl
cmp
cmpsb
call
cs
das
hlt
push
pop
push
dec
jg
outsb
gs
das
jbe
js
out
ja
mov
test
push
imul
add
fists
xchg
daa
popw
lsl
push
lods
sarl
mov
cmc
mov
dec
mov
jmp
pop
test
cs
arpl
aaa
mov
xor
repz
aas
mov
les
outsl
nop
sub
imul
fsubrp
lret
out
inc
jbe
cmp
hlt
ja
fsubr
pop
xchg
dec
mov
adc
xor
dec
adc
out
push
push
sub
int3
inc
fisubl
out
hlt
and
mov
leave
or
jno
add
aam
lea
mov
ret
mov
inc
outsl
rol
outsb
jae
cmp
addr16
scas
sub
pop
dec
xchg
jne
mov
mov
and
xor
xchg
push
call
hlt
xlat
mov
cmp
int3
add
jns
dec
jl
xorl
cld
out
inc
mull
dec
sbb
xchg
js
aad
dec
push
sbb
push
jge
outsb
inc
hlt
je
jmp
mov
or
sbb
xchg
mov
rorl
jne
mov
mov
sbbl
in
lods
shl
mov
sub
jp
loop
dec
hlt
dec
lds
xor
lsl
xor
pushf
pop
fninit
leave
dec
sahf
jl
pop
sbb
xchg
jl
lods
push
jmp
stos
lock
test
clc
lret
test
pop
mov
orl
mov
mov
push
ds
mov
pop
or
inc
aam
push
dec
push
cs
daa
fwait
and
jg
lods
adc
cmc
mov
xchg
je
icebp
repz
jae
in
sahf
dec
dec
clc
mov
stc
cld
jl
sbb
arpl
mov
lods
push
jp
mov
add
sarb
mov
test
jbe
xor
mov
lds
xchg
dec
in
cmp
out
bnd
test
je
jl
and
ljmp
mov
out
aaa
sub
mov
pop
dec
mov
pop
adc
sub
adc
iret
mov
sbb
movl
ds
das
rcrb
jae
mov
out
cmpsb
ja
icebp
insb
or
add
sub
psubq
pop
xor
jge
sub
pop
mov
clc
pop
and
and
cmpsb
lods
outsb
cwtl
xchg
imul
sub
scas
data16
inc
cmp
data16
out
fsubl
jns
repnz
ret
outsb
and
mov
sbb
std
arpl
xor
mov
pusha
repnz
stos
fisttpll
add
xchg
ror
je
in
and
push
fisttpll
jp
outsl
inc
jnp,pn
lods
jg
imul
mov
and
mov
jl
or
push
cmp
mov
jp
subb
sbb
adc
xchg
scas
push
inc
dec
sbb
or
js
and
cmp
cmpb
pushf
lods
outsb
cwtl
repnz
pop
les
xchg
adc
bswap
jle
xchg
pushf
adc
xorl
sahf
sub
sub
xor
push
insl
jmp
adc
cltd
mov
jae
jnp
or
push
out
fs
push
fcoml
pop
push
mov
into
and
std
mov
push
mov
cmp
outsb
in
push
orb
enter
cmp
push
rcr
inc
inc
cmp
xor
and
dec
cmp
push
lods
gs
sub
jno
fisttpl
pop
jle
inc
inc
xorb
xorb
movsl
jb
cmp
and
ljmp
ret
or
pushf
scas
mov
sbb
rorl
cli
add
mov
lods
pop
sub
adcl
pop
and
push
test
mov
fxch
outsl
test
ljmp
out
ficoml
mov
stos
add
mov
stos
jno
add
and
xor
mov
and
out
icebp
fnstenv
fld
jecxz
push
outsb
push
into
adc
stos
inc
mov
dec
sbb
test
cmc
lds
add
mov
movb
outsb
lock
ljmp
adc
pop
subb
xchg
out
lret
cmp
cs
pop
add
xchg
lcall
mov
fistl
arpl
test
pushl
es
test
roll
rolb
or
lock
xor
mov
aad
nop
mov
mov
popa
push
call
and
cmp
fwait
mov
cmpsl
jns
mov
xor
sub
jno
push
rcrl
repnz
cmp
adc
dec
xchg
push
mov
adc
aaa
inc
iret
jbe
fcmovnu
mov
sub
mov
cmc
xchg
mov
push
scas
xchg
aaa
movsl
jmp
fstpl
xor
fistps
mov
add
pushf
sub
xchg
lock
adc
shrb
mov
or
ljmp
inc
gs
mov
icebp
daa
jns
dec
out
data16
aad
xor
or
add
nop
stos
in
inc
ds
dec
add
adc
sub
jo
push
cmp
mov
fsts
mov
test
cmpl
ret
fidivs
sub
adcb
push
stos
dec
pop
fstl
cmpsl
jp
cwtl
cltd
pop
pop
fwait
aaa
test
add
and
pop
mov
rcrb
mov
mov
mov
jle
mov
add
adc
std
rcrl
mov
outsl
or
call
cld
fs
xchg
dec
out
call
xchg
pop
jl
hlt
or
jb
xchg
fwait
pop
sub
loope
popf
adc
js
push
sbb
stc
xor
loopne
mov
fsubrl
lret
shlb
test
cmc
insl
push
mov
xor
cmpsl
inc
and
nop
adc
std
adc
test
mov
lret
pop
notb
adc
xchg
call
or
pop
loopne
lock
sbb
incl
sbb
mov
add
sbb
clc
add
and
xor
imul
mov
push
xor
jne
ss
jbe
xor
clc
or
adc
pop
jbe
rcll
bound
aas
leave
pop
dec
bound
jne
lcall
rorb
outsl
repnz
fxch
or
xchg
xchg
dec
push
mov
mov
sub
mov
jmp
or
mov
cvtps2pd
push
xchg
es
cmpl
pop
jecxz
shrb
mov
xlat
mov
and
push
jge
shrl
mov
push
pushf
ja
je
lods
imull
bound
xlat
jb
push
roll
xor
negl
sbb
inc
and
or
fwait
divl
movb
ds
cmc
cmp
mov
stc
pop
lds
cwtl
pop
mov
data16
ss
ret
ds
mov
pop
enter
and
nop
aam
inc
std
sub
leave
mov
dec
leave
test
cli
idivb
ds
or
jle
or
xchg
cwtl
fists
inc
mov
jbe
jbe
or
inc
xchg
mov
lahf
xor
mov
adc
insb
inc
aas
inc
leave
outsl
outsl
cmp
rcrb
in
out
data16
pop
fcoms
nop
repz
call
or
fidivrs
xchg
push
sbb
push
adc
sub
stc
mov
cli
cmp
push
pop
sbb
mov
sbb
mov
fildl
jns
mov
bound
xor
jmp
inc
popl
incl
test
xchg
out
inc
gs
out
xchg
and
jo
std
jae
orb
lret
xlat
push
push
mov
mov
push
lcall
or
or
sbb
and
sub
iret
notb
out
add
dec
daa
or
fidivrs
add
add
add
jge
pop
dec
mov
mov
in
into
shrl
push
out
mov
xor
std
sarb
and
frstor
pusha
inc
mov
inc
mov
mov
jnp
lea
pop
mov
cmpb
add
dec
cli
inc
ja
xlat
les
lcall
mov
cmpsb
cmc
mov
sub
cmc
movsb
xlat
lock
rcr
pop
dec
pop
sub
lahf
push
out
dec
mov
daa
pusha
out
mov
stos
sub
shrb
mov
std
pop
mov
sbb
lock
cmpsl
xchg
jo
test
jns
imul
mov
push
cld
rcrl
stos
out
xchg
in
imul
xchg
inc
sub
xchg
test
sub
lods
mov
shr
std
cmp
cmp
mov
mov
rolb
lcall
inc
xor
stc
incb
sub
xchg
sub
dec
dec
ret
enter
push
cmpb
jle
push
ret
inc
stos
dec
scas
sub
xor
outsb
out
jge
jp
and
mov
jl
mov
clc
and
cwtl
mov
repnz
outsl
stc
push
pop
rcrb
les
data16
shrb
repnz
add
mov
icebp
std
push
in
in
or
jne
push
pop
and
dec
fcomip
stos
les
outsl
push
mov
mov
pusha
push
and
insl
ret
cmpb
pop
stos
jle
jg
mov
jg
icebp
add
sub
add
bound
inc
rclb
es
sub
push
ja
push
enter
test
inc
loop
cmc
mov
push
fiaddl
mov
cmp
js
add
jno
scas
jb
add
pop
imul
xchg
lds
jle
aam
pushf
out
test
or
adc
xchg
int3
mov
popf
cwtl
fcompl
mov
dec
adc
fnstsw
mov
sbb
sbb
loope
out
out
insb
out
xchg
add
dec
sbb
cmp
add
enter
cmpl
cli
aaa
in
mov
mov
or
vunpcklps
hlt
or
sub
and
cwtl
bound
xchg
repnz
inc
cmp
jne
incb
mov
push
sti
mov
sbb
ja
je
push
cmp
insl
nop
outsl
xlat
push
mov
dec
adc
in
jge
pop
shrb
mov
jne
lds
and
mov
jmp
int3
pop
mov
cwtl
cmp
mov
cmp
mov
call
js
dec
mov
jbe
lret
rolb
push
inc
shr
mov
or
xchg
and
push
out
insb
jecxz
push
jp
popf
add
iret
pop
mov
icebp
ljmp
pop
dec
loop
mov
outsb
or
out
es
fs
pop
sbbl
imull
cmp
lea
mov
add
xchg
sbb
cmp
ljmp
cld
std
push
sbb
popa
pushf
jo
xchg
add
das
or
out
rorb
dec
cmp
fs
mov
cmpsl
push
mov
pop
jo
or
lret
je
sbb
fisubrs
mov
scas
pop
in
clc
push
addr16
mov
lret
cmc
lcall
mov
push
and
xor
movsl
jl
pop
hlt
xchg
notb
in
std
cwtl
and
xor
loopne
mov
repz
jg
in
xor
sahf
inc
jae
push
aam
sbb
push
pop
and
pop
jp
pop
add
outsb
xchg
test
jnp
and
mov
movsl
add
push
mov
in
popf
mov
bound
inc
test
sbb
jno
cld
in
jae
mov
pop
sbb
add
cld
repnz
add
push
insb
pop
inc
pop
xrelease
in
aaa
stos
scas
ficoml
enter
lret
aaa
jmp
fs
cwtl
mov
sahf
push
out
enter
xchg
dec
mov
lock
mov
sub
mov
pop
loope
push
mov
adc
sub
adc
call
mov
lahf
lahf
clc
sarb
cltd
xchg
in
push
imul
xor
dec
jp
mov
test
shrl
inc
push
and
ret
dec
xchg
sbb
xor
pop
sbb
sub
out
scas
cmpsl
fldl
in
lahf
mov
mov
icebp
stos
add
aad
and
jmp
scas
dec
mov
fstl
sarl
test
scas
aaa
ja
jmp
jo
dec
jmp
jl
shlb
mov
jp
jp
aad
or
jo
add
adc
jno
rorl
or
dec
add
ljmp
movsl
sub
jo
mov
xor
fmulp
cmpsb
fdiv
ljmp
scas
sub
jbe
dec
sbb
pop
mov
push
mov
scas
cmp
sbb
faddl
dec
shlb
orb
jmp
adc
adcl
jnp
repnz
sub
jne
adc
xchg
adc
addr16
or
pop
sbb
adc
out
push
or
sbb
test
movsb
clc
pop
mov
pusha
push
movsl
xchg
rorl
inc
mov
inc
call
mov
pop
je
cltd
mov
mov
call
fsubrp
mov
addl
jge
mov
leave
fdiv
and
xor
cmc
fwait
or
push
ss
dec
ja
mov
jae
push
lock
push
xorb
or
adc
dec
mov
push
jge
addb
jmp
movb
cwtl
loop
mov
in
in
js
sbb
fnsave
shl
aam
or
fiaddl
negl
xor
jg
pop
ds
pop
pop
cwtl
nop
int
inc
loopw
pop
xchg
jg
and
sub
mov
or
and
sub
adc
sub
xor
xchg
cs
jbe
xchg
xchg
xlat
sub
out
rcrb
cwtl
scas
ss
mov
add
outsb
int3
movsb
rclb
scas
push
dec
mov
mov
or
gs
int
sbb
stos
jbe
fdivl
ljmp
test
sub
lret
jp
sahf
stos
fnclex
lods
dec
push
xor
adc
fwait
in
aam
lods
dec
jnp
or
popa
test
push
sbb
xchg
sbb
xor
cmpsb
inc
and
inc
cmpsl
ficomps
shl
sbb
test
test
aam
add
sub
imul
inc
lds
pop
arpl
cmp
push
dec
mov
xchg
push
fimuls
fidivl
sub
add
jg
jb
loope
cmpsb
mov
std
mov
or
in
lret
mov
imul
xor
loopne
cmp
add
ds
les
pop
xlat
fsts
mov
pop
iret
dec
sub
sbb
std
adc
dec
push
sbb
inc
lret
mov
test
pop
cmp
aam
pushf
xchg
pop
mov
or
sbb
loop
push
in
sbb
mov
pusha
cmp
insb
fistps
pop
xor
loope
sbb
xor
mov
push
mov
mov
adc
mov
pop
das
dec
stc
mov
mov
mov
std
xchg
gs
lret
jbe
push
fsubl
dec
loopne
jge
cmp
stc
bound
xor
cmpsl
jae
dec
mov
mov
lcall
push
loop
int
xor
or
push
out
cs
add
outsl
out
in
inc
mov
dec
push
fsubrl
add
cmp
insb
xorl
inc
insb
lods
repz
cmp
dec
imul
adc
cmp
add
sub
lds
add
lahf
xor
call
imul
andl
repz
ss
mov
js
sbb
inc
pop
mov
pushf
and
jge
stc
repnz
cmp
cmp
fdivl
dec
mov
aam
loop
dec
mov
aaa
ficoms
or
push
cmc
jle
xchg
scas
lea
jns
frstor
xor
negb
xchg
xchg
and
lret
dec
fwait
cltd
stc
es
jg
ss
mov
fisttpl
push
repnz
imul
push
sbb
dec
pop
jne
cmp
push
sub
mov
xor
mov
xchg
push
jne,pt
lods
jmp
jg
into
addr16
and
add
mov
mov
inc
mov
jae
xchg
add
es
out
push
dec
jg
je
test
jg
fs
cmp
jno
test
daa
jge
xchg
stos
mov
jg
and
xor
out
and
adc
add
rol
jmp
int
les
ja
out
xor
xchg
adc
cmpsb
test
jge
pop
pop
fwait
or
sub
adc
pop
inc
dec
push
scas
fwait
hlt
jne
out
daa
mov
jns
loope
ret
aam
inc
adc
arpl
popl
nop
cwtl
jbe
sub
mov
push
andb
push
jae
in
pop
fdivr
xor
insl
sbb
scas
js
fidivl
lods
mov
lahf
cmpsl
push
cmp
fldl
fsubl
fmull
sub
ljmp
pop
scas
nop
lcall
pop
push
pop
mov
and
popf
inc
push
push
adc
xlat
loopne
or
pop
out
xor
jecxz
ss
aaa
xor
cmp
adc
ficompl
pop
xchg
fidivrl
mov
int3
cmp
test
test
mov
cwtl
aaa
in
adc
mov
jge
jne
jg
sub
ss
jl
js
fnstenv
pop
orb
mov
leave
jbe
cwtl
ret
fwait
and
cli
lahf
nop
jl
xchg
test
stos
adc
cli
test
jl
xchg
je
pop
dec
push
insb
cs
test
outsl
add
mov
shll
shr
pushf
push
imul
mov
pop
xchg
and
leave
out
mov
dec
sbb
cmc
push
inc
addr16
leave
ret
bts
scas
inc
mov
push
adc
test
mov
sub
sub
mov
ljmp
add
cmp
xor
xor
outsl
push
in
push
mov
inc
mov
inc
mov
mov
push
or
mov
inc
scas
ret
daa
or
insl
in
mov
xor
mov
sbb
fsubs
stos
aaa
cmc
jmp
rorl
inc
jns
std
movsl
out
jcxz
gs
fstl
dec
out
xchg
les
push
imul
lods
sub
dec
ss
in
mov
jb
push
jle
cmp
or
add
out
lret
and
mov
mov
xchg
pop
mov
and
mulb
shlb
dec
jb
cmpsb
push
jg
mov
push
xchg
or
iret
test
mov
and
jne
inc
sub
lods
sbb
jl
xchg
shrb
mov
insb
aam
xchg
dec
adc
sub
fisubl
ret
ss
ds
shlb
xchg
mov
push
std
mov
xchg
pop
popf
jb
or
ret
jle
outsb
jno,pn
pusha
js
bound
imul
inc
inc
cmpl
push
push
inc
test
inc
xchg
xor
pop
add
out
aaa
adc
loopne
jo
inc
add
jo
sbb
add
aas
fisubrs
or
mov
adc
or
movsl
mov
stos
data16
cmp
fdivs
insb
jb
sbb
mov
mov
sub
jnp
arpl
loop
ljmp
les
cmpsl
xor
repz
aas
fstps
or
push
sbb
jl
jb
cmp
jns
incl
cs
pop
in
add
xor
jbe
in
mov
dec
xor
mov
notl
xchg
mov
nop
jl
out
push
lret
mov
cmp
xor
xchg
sahf
lret
out
add
std
in
nop
jb
scas
je
pop
icebp
or
mov
xchg
sub
mov
pushl
lahf
adc
pop
jp
stos
push
movsl
outsb
sbb
movsl
loope
mov
jle
pop
xor
mov
jno
mov
shrl
mov
pop
stos
inc
popf
xor
jg
push
lods
jle
fisubrl
ret
jmp
popa
in
mov
pop
xchg
outsb
cmp
aad
or
ret
popa
mov
xchg
inc
cltd
jns
leave
fwait
push
cs
outsb
aad
fistpl
cli
std
test
loopne
loopne
mov
inc
pop
fcomps
fucomip
mov
shll
and
adc
push
mov
popf
or
push
jg
movl
add
pop
mov
loop
adc
pop
ljmp
mov
jle
xchg
push
jbe
lock
or
and
mov
fsubrs
jmp
rorb
stos
lret
sbb
sbb
inc
or
xor
iret
cmp
sbb
pushf
cmp
sti
jp
cmp
push
lods
fcoml
or
loope
sub
cmp
clc
jmp
rcrl
roll
adcb
jno
in
int3
add
lahf
mov
stos
xchg
test
sub
dec
out
mov
loope
ds
clc
add
mov
movsl
adc
push
je
mov
and
mov
sub
fildl
mov
es
mov
sbb
cmp
aam
sbb
jo
mov
ret
sub
fcmovnb
out
insl
mov
xchg
cmpsl
sbb
out
sbb
cmp
les
testb
mov
pop
jp
sub
and
cmp
dec
xor
sub
xor
popf
and
popf
push
mov
xor
icebp
icebp
out
lahf
inc
jmp
lret
mov
pop
sbb
xor
or
pop
jmp
int3
push
add
cmp
ja
xchg
rorb
jmp
js
cwtl
cli
mov
sti
dec
inc
pusha
pop
cld
gs
out
repz
mov
push
outsl
lods
cld
and
loopne
pop
out
rol
add
sbb
int
daa
jbe
cmp
pop
inc
jmp
mov
xchg
in
jne
jp
jbe
imul
in
mov
xor
loope
jo
iret
pop
lods
fadds
jmp
dec
pop
xchg
mov
insb
ja
divl
sub
sti
or
popa
js
hlt
pop
hlt
mov
mov
dec
pushf
jb
nop
or
xor
xchg
ljmp
xchg
inc
xchg
inc
stos
scas
mov
fidivl
test
sbb
sbb
jne
adc
jns
jno
xor
icebp
mov
mov
into
in
mov
clc
jg
loopne
outsl
jmp
push
stos
icebp
out
outsl
hlt
mov
enter
or
add
jle
and
and
and
cmpsl
dec
xchg
enter
xchg
push
daa
in
cmp
push
lods
sahf
xchg
jbe
cmp
inc
rcrb
or
in
jle
les
add
gs
test
xchg
or
fwait
aas
daa
lds
adc
popa
lds
xor
or
fistpl
sarl
popa
mov
out
gs
sub
and
sub
jg
out
and
pusha
test
or
mov
inc
pop
pop
insw
xor
mov
xchg
mov
test
xor
out
das
lods
cmp
adc
jo
mov
shl
fwait
jo
call
ret
jmp
xchg
or
cli
xchg
call
ss
pop
mov
and
sbb
loopne
stc
jmp
js
jnp
xor
fdivrl
or
and
sbbl
aas
mov
jecxz
dec
mov
sub
iret
test
outsb
adc
xchg
fsubrs
lods
sbb
popf
movsl
inc
movsb
out
movsb
sub
mov
add
cmp
mov
fisubs
jle
jmp
loope
xor
add
loopne
repz
mov
sub
mov
inc
enter
paddsw
adc
dec
xchg
mov
mov
outsb
mov
leave
add
cmpsl
ret
push
sbbl
test
and
inc
or
add
inc
rcrb
xor
push
stos
add
test
fsubl
mov
sbb
xor
adc
jbe
sub
mov
mov
mov
cmp
sbb
pushf
scas
fildl
sub
cltd
stos
in
pop
xlat
je
sbb
pop
mov
sub
jecxz
sbb
mov
xchg
rorl
cmp
jns
mov
xchg
cmp
mov
out
and
in
mov
jecxz
or
sub
mov
pushf
ljmp
mov
ds
lock
mov
cld
jmp
scas
loope
mov
cli
aaa
lret
mov
lahf
mov
pop
jmp
cmp
fistpll
popf
pushf
xchg
or
fldenv
mov
ljmp
das
adc
dec
fmul
adc
dec
xorl
push
imul
inc
addr16
not
scas
push
jb
fistl
out
ljmp
and
adcb
mov
xchg
pusha
inc
mov
xchg
sti
sbbl
mov
sti
pusha
mov
lret
lea
and
fldl
mov
mov
ljmp
mov
jnp
adc
je
lea
mov
ror
pop
push
ret
cmp
xchg
cli
loopne
inc
pop
jmp
push
fdivr
jo
fs
mov
ret
sub
outsb
pop
mov
gs
out
mov
cmpsb
rolb
xchg
movsb
xchg
pop
dec
adc
cli
enter
rcrb
pop
lods
pop
xor
cmc
jg
dec
jle
mov
pop
dec
or
and
xchg
push
mov
loopne
scas
outsl
mov
jg
cmpsb
lea
push
jne
xchg
fdiv
cmp
sbb
icebp
and
scas
pop
movsb
das
loop
mov
dec
cmc
cmpl
fwait
adc
xchg
and
sub
dec
mov
les
and
pop
push
or
idivl
pop
inc
movsl
stos
sub
sbb
push
sbb
xor
lods
int3
jp
and
lahf
and
sub
jge
jmp
test
loopne
sbb
scas
leave
ds
cmp
add
jae
sub
hlt
xchg
cmp
mov
popf
cmp
jp
outsb
nop
cmp
stos
mov
mov
roll
sbb
arpl
dec
ljmp
xchg
mov
fistpl
dec
test
jl
mov
lret
add
add
aam
in
fidivl
jns
lods
or
movsl
rorb
rorl
xor
mov
lahf
andnps
add
lds
sbb
fstpl
push
inc
xchg
push
dec
inc
int
and
fcmovnu
dec
loope
lods
test
mov
pop
fildll
in
pop
or
lds
lock
jae
mov
or
out
fsub
cmp
insl
mov
mov
and
inc
cmpsb
shlb
dec
jno
pop
aaa
xchg
scas
sub
insb
dec
sbb
fisttps
js
cmp
push
shll
int
lcall
outsb
das
test
xchg
dec
dec
scas
xchg
pop
push
leave
and
pop
pop
mov
scas
adc
or
into
imul
jae
sub
leave
stc
mov
pusha
and
sbb
cmp
aad
leave
push
mov
scas
dec
stos
pop
xor
addb
stos
cmc
out
sub
mov
stc
sbb
testb
and
jg
out
inc
dec
stc
xor
mov
and
mov
mov
lods
fstps
scas
cmp
aaa
dec
dec
sahf
or
jo
pop
sub
nop
mov
ja
aam
xchg
push
jg
mov
sar
fwait
xor
xchg
cmp
xchg
subb
or
in
aas
lods
sbb
idiv
mov
les
stc
pop
cmc
pop
mov
mov
add
dec
push
pop
push
inc
or
rcr
lods
xchg
mov
rolb
out
insl
movl
fsubs
aam
or
dec
xchg
sbb
or
out
repnz
cmp
fcomi
push
mov
pusha
popa
xor
sub
cmp
mov
xchg
decb
lcall
das
jg
sbb
or
rcll
jmp
sbb
mov
sar
jae
or
addr16
loop
sub
add
nop
cmp
aam
in
sbb
iret
test
push
enter
push
jg
in
enter
xor
fcoms
or
push
clc
fs
mov
shrl
mov
jb
mov
mov
fnstcw
ret
ret
insl
xor
push
fcomp
xchg
aas
cmp
sub
jno
lahf
in
cltd
push
imulb
ret
push
mov
cmp
jp
mov
sub
pop
test
or
cli
mov
xchg
jle
in
push
ds
arpl
scas
clc
inc
cmp
imulb
imul
or
std
mov
sub
out
and
mov
sbb
add
mov
dec
or
lret
imull
stos
cli
sbb
pop
inc
dec
inc
in
adc
mov
lret
fdivrs
add
addr16
sbb
lea
pushf
add
sti
repz
popa
mov
push
cmpsb
add
sarl
xchg
or
mov
daa
xor
pop
and
movsl
and
xchg
sub
fstpl
push
inc
inc
inc
loope
xorb
mov
jle
fnstsw
mov
repnz
lahf
xorb
xchg
cltd
mov
arpl
dec
fimull
lock
mov
mov
jae
xchg
es
scas
mov
xchg
sub
mov
xor
ja
xor
daa
test
inc
sub
icebp
dec
xchg
cmp
sbb
fildll
adc
data16
lret
mov
sbb
fs
ret
pop
data16
jne
dec
adc
cwtl
xchg
adc
in
ss
pop
pop
jecxz
movsl
nop
dec
xchg
mov
fidivrl
andl
jo
addr16
cmp
fs
jle
gs
sub
jbe,pt
sub
and
or
sarb
xor
sub
jne
dec
fisttpll
enter
in
rclb
sbb
out
inc
add
push
insb
test
mov
les
pop
in
in
cltd
in
out
or
mov
dec
pushf
in
sarl
out
push
pushf
ljmp
aad
pushl
incb
je
mov
push
cmp
pop
pop
jecxz
pop
mov
jns
sbb
cmp
pop
aad
pop
sbbb
adc
push
dec
ret
xchg
or
dec
out
dec
pop
ret
xor
push
arpl
adc
mov
jae,pt
shll
iret
pop
push
jge
adc
out
int
movsb
and
into
stos
mov
jecxz
repz
sbb
dec
push
jp
ja
add
sahf
jl
stc
hlt
push
insb
cs
in
push
mov
bound
addb
mov
mov
sbb
pop
mov
mov
xchg
pusha
dec
scas
mov
orb
ret
and
adc
out
iret
xchg
sub
cmpl
add
iret
stc
outsw
adc
ss
inc
dec
mov
cmc
sbb
imul
ds
mov
cmp
lods
lcall
cmpsb
arpl
loopne
ss
cs
push
imul
in
aaa
popf
jns
mov
testb
mov
cltd
loopne
jo
mov
mov
fsubrp
stc
fucomi
sbb
sti
xor
and
mov
repz
push
pusha
pusha
not
xor
jae
add
dec
sbbl
ret
nop
xor
ficompl
adc
loop
sbb
sahf
outsl
cld
and
mov
inc
adc
or
jmp
mov
bound
int3
push
scas
adc
test
xor
dec
mov
mov
sub
mov
jno
inc
add
insb
jno
imul
aad
imul
movsb
xor
mov
sbb
push
sti
mov
mov
into
call
inc
leave
xor
adc
push
loope
xlat
rcrl
into
adc
pop
mov
xchg
sub
dec
or
mov
push
jl
sarl
xchg
into
push
lahf
mov
nop
loop
sarb
jnp
cld
adc
fnstcw
fidivrl
fwait
add
in
jl
jnp
arpl
mov
fldt
add
insl
push
pop
fwait
jmp
int
repnz
loopne
addl
lret
lock
leave
mov
movsb
mov
testb
push
in
ret
xor
roll
xchg
stc
out
dec
push
out
lcall
inc
cwtl
xchg
notl
cltd
idivb
push
cmpsl
cmpsb
aas
addl
xchg
inc
fstpt
out
jmp
inc
sbb
int
pusha
outsl
sbb
xchg
push
dec
xchg
push
test
push
pusha
roll
mov
adc
push
xor
push
out
cmpsb
jnp
rcr
out
mov
push
arpl
push
and
add
dec
pop
mov
fdivrs
fldl2t
jb
inc
mov
in
lret
push
xor
lea
sbb
into
adc
cmpsb
dec
in
dec
movsl
and
mov
sahf
lret
adc
xchg
int3
test
and
jmp
xor
loopne
push
adc
movsb
mov
out
xlat
movsb
sub
imul
mov
clc
in
sbb
mov
mov
sbb
je
xor
ror
jmp
test
ror
hlt
sbb
xorl
pop
inc
js
sbb
pop
xchg
gs
roll
leave
mul
push
outsl
jne
sbb
ffreep
stos
or
mov
imul
cs
or
in
lods
addr16
push
lods
pop
fcomi
or
test
enter
fs
sbb
shl
rcll
stos
and
dec
mov
sub
push
popa
jb
les
lds
dec
int
pop
mov
sbb
out
jecxz
mov
mov
shlb
cli
call
mov
sti
int3
jo
xor
dec
lods
loop
lods
cld
jg
or
push
arpl
sbb
push
mov
daa
mov
xor
arpl
sbb
xor
jp
sar
jbe
mov
in
xchg
iret
popw
rcll
jb
sub
dec
push
pop
jp
icebp
cs
adc
sub
mov
jmp
out
je
stos
adcb
in
and
into
inc
mov
aam
rcr
scas
stc
mov
mov
push
pop
mulps
xchg
fs
pop
icebp
cmp
mov
mov
add
lods
test
sahf
mov
std
xor
pop
imul
lahf
inc
or
sbb
mov
push
jae
xchg
lds
inc
mov
rcl
gs
jns
ficoml
scas
in
fnstcw
outsl
rcrb
and
sub
mov
jp
pop
loop
imul
push
inc
out
and
jl
movsl
mov
enter
or
and
pop
sub
std
loop
cmp
aas
out
pop
sti
cwtl
aas
fildl
push
adc
pop
out
and
mov
sbb
test
mov
pusha
xchg
in
dec
mov
insl
test
out
mov
pop
jo
cmp
pop
mov
insb
pop
ficoms
les
sub
push
dec
ds
sahf
or
cli
in
stos
loope
scas
cmp
test
mov
das
mov
jne
adc
and
das
pop
inc
bound
fimuls
dec
add
mov
xor
cmp
fs
xor
cld
test
inc
dec
loope
jecxz
adc
test
cmp
imul
cmp
or
hlt
out
mov
insb
in
cli
cmpsl
dec
andb
int3
add
push
mov
movsl
pushf
std
mov
add
daa
adc
rcrl
mov
adc
dec
jno
xchg
pop
icebp
adc
inc
cltd
shl
push
sub
mov
fstpt
ret
into
imul
cmp
into
cwtl
in
int
mov
or
mov
jnp
imul
or
clc
test
pop
out
adc
sbb
jmp
out
and
jo
mov
inc
rcrb
mov
lods
adc
push
pop
add
and
stc
fs
xor
cld
or
jno
ret
ljmp
mov
lret
sti
popa
sub
loope
jmpw
or
inc
int
and
andb
fsubl
fisttpl
sbb
out
push
sbbl
jl
pop
std
pop
jl
add
inc
cmp
jecxz
ret
ss
stos
mov
es
addl
xor
cltd
incl
out
adc
or
and
stc
clc
push
cmp
adcl
xchg
movsl
test
jp
aam
fcmovb
js
popf
in
jl
mov
out
push
pusha
adc
or
in
push
cmp
jecxz
dec
push
pop
fistpl
enter
push
inc
cmp
stos
jmp
sub
xor
popf
sub
or
jecxz
shlb
sbb
adcb
xor
aam
add
ret
lods
scas
pop
insb
add
jge
cwtl
imul
push
cmp
cmp
gs
xchg
dec
or
gs
sbb
dec
mov
stos
jle
aam
push
add
xchg
push
mov
mov
add
xor
mov
dec
push
je
lret
data16
cs
jo
enter
cld
jno
cmpsb
fcomps
pop
xchg
xor
cmc
jno
jne
outsb
sbb
pop
xchg
pop
push
pop
sub
xchg
fs
outsb
pop
aas
jle
das
outsl
mov
sbb
xchg
scas
decl
mov
xor
add
inc
enter
mov
insb
mov
inc
aas
rcll
jl
addr16
pop
adc
pop
xlat
lods
ss
bound
ja
add
mov
sbb
add
leave
outsb
sahf
mov
pop
pop
inc
xchg
push
shrb
and
xorb
xchg
cltd
or
sub
mov
ret
clc
mov
mov
add
test
sub
sub
push
bound
adc
out
das
mov
sahf
aam
sbb
leave
fists
stc
js
push
into
xlat
xorb
mov
jbe
add
aas
mov
dec
icebp
or
movl
sbb
mov
mov
or
jmp
or
mov
sub
xor
dec
jno
pop
push
cmpsl
or
dec
scas
lods
jne
test
stc
nop
cmp
mov
pop
ret
xor
sub
xchg
leave
adc
clc
pop
and
and
lahf
cli
and
jl
scas
into
jae
jno
sub
mov
mov
subl
movsl
cmp
jne
stc
jo
mov
andl
movsb
mov
mov
xchg
jnp
xchg
shrl
sub
rcll
in
inc
dec
into
add
hlt
mov
out
outsl
adc
fs
pop
xchg
or
dec
dec
jae
scas
sbb
dec
lock
jns
leave
call
mov
xorb
xchg
jg
sahf
in
fs
mov
in
mov
fisttpll
stos
cmp
sbb
xor
outsb
xor
or
movsb
fistps
sub
xchg
dec
add
add
mov
movsb
ja
int3
jmp
lret
cmp
lcall
push
sub
int
and
lea
push
psllw
imul
bound
mov
lret
stos
sbb
mov
mull
outsl
mov
fbld
loope
jle
out
inc
gs
jae
insl
cwtl
push
sub
pop
mov
jns
inc
leave
add
and
nop
sarb
test
push
test
sbbl
int3
out
add
popf
add
inc
mov
sub
dec
stc
iret
push
dec
int
mov
dec
bsf
mov
add
addr16
add
aam
in
lock
mov
mov
xor
push
out
ss
inc
mov
bound
into
sub
repnz
mov
sbb
test
xchg
rep
xchg
adc
and
pushf
lret
hlt
aaa
mov
fsub
xor
in
xlat
rol
jmp
mov
pop
je
mov
adcb
pop
cmpb
push
icebp
std
movsl
mov
jne
ret
fisubrl
and
lahf
sbb
scas
insb
aaa
mov
test
xor
add
mov
dec
sbb
ficoml
movb
pop
pushf
fisubrs
push
or
dec
mov
push
mov
fidivrs
inc
mov
in
xchg
movsb
out
stos
aam
call
mov
lock
ss
es
out
sbb
add
lock
jecxz
mov
pop
inc
ja
lock
dec
jge
mov
mov
xor
std
mov
mov
cs
cmp
or
rol
mov
adc
jp
add
out
ja
in
xor
add
push
xchg
out
mov
or
xchg
fwait
push
mov
out
cmp
mov
or
adc
mov
xchg
xchg
movsb
dec
addr16
ljmp
std
xor
inc
adc
dec
mov
subb
dec
mov
inc
popf
lcall
stc
and
aas
adc
fcmove
cmp
push
mov
ret
pop
add
lds
outsl
or
add
fcmovu
fidivrl
jns
push
xor
popf
lods
inc
fcmovnu
or
xchg
xchg
inc
test
cmp
sbb
in
gs
movhps
sub
hlt
or
mov
movsb
insb
daa
addr16
lods
push
cmp
sbb
fidivl
jl
and
push
movsl
sbb
ss
lret
cltd
mov
pop
sti
xor
icebp
ret
jp
jmp
shl
mov
fdivrs
dec
xchg
cmp
test
mov
cmpsl
dec
push
lds
mov
out
int3
cmpsb
leave
push
js
jecxz
stc
pusha
mov
outsb
fs
sub
or
mov
push
add
or
dec
rcrl
aam
test
test
mov
fsubrp
cmp
or
leave
pushf
xchg
adc
gs
cltd
mov
sahf
xchg
sbb
or
xor
jns
and
sar
adc
xor
and
pop
mov
in
aam
fistl
inc
in
sub
subb
fisubrl
fdivrs
add
jge
add
inc
or
fnstcw
std
jl
lret
ds
ja
xchg
movsl
cmp
pop
and
test
fmul
xchg
mov
mov
mov
test
js
inc
sbb
fsubrs
loope
xchg
js
ret
mov
pop
les
shl
cli
addr16
outsb
int
test
push
add
lret
inc
addl
imul
pop
ja
pop
jp
cli
cmp
xor
adc
mov
outsl
add
mov
mov
pop
or
and
daa
adc
loop
lea
inc
mov
push
pop
xor
rcrb
add
out
in
js
mov
popa
sub
fistpl
mov
push
hlt
pop
xchg
cmp
inc
pop
xor
loope
icebp
mov
divl
mov
clc
inc
sbb
jb
mov
negl
addr16
pop
neg
or
test
in
add
out
mov
mov
xor
add
inc
orb
loope
and
lret
and
dec
sbb
xor
pop
shlb
imul
fimull
sub
pop
loop
or
mov
out
push
mov
movsl
call
mov
cmpsl
add
jmp
sub
or
inc
ja
or
dec
xlat
lret
xchg
xchg
mov
iret
lret
sbb
sbb
frndint
outsl
enter
cs
jns
jb
cmp
push
aas
sbb
push
rcrl
ljmp
jnp
sub
push
jmp
sbb
cs
sbb
dec
jp
add
jnp
hlt
mov
cmp
ljmp
icebp
leave
xchg
ffree
loop
and
mov
popa
adc
mov
pop
jle
xor
pop
inc
bound
cmp
enter
cmc
repz
leave
test
pop
test
ror
jl
imul
mov
jo
mov
mov
fdiv
or
push
xchg
dec
fadds
clc
fisubl
cmp
test
mov
push
dec
add
jl
rcl
inc
scas
mov
iret
ss
sbb
ret
jo
dec
ret
mov
push
mov
sbb
mov
pop
jne
jg
js
lahf
aaa
out
inc
push
adcl
inc
into
mov
dec
dec
add
or
pushf
jle
sbb
pop
addr16
and
pop
rcrb
mov
inc
jbe
add
and
push
mov
nop
stos
repz
cmpsb
dec
fdivrp
and
into
xor
jbe
fs
inc
xlat
aaa
cmp
mov
lods
xor
ret
rcr
nop
mov
out
mov
mov
outsl
popa
neg
adc
aad
push
pusha
xor
icebp
or
je
pushw
test
adc
push
dec
lea
ljmp
adc
inc
jp
adc
dec
push
mov
imul
dec
xchg
addl
enter
adc
sub
pop
aad
insl
rcl
dec
mov
pusha
cmp
xlat
std
or
lahf
stos
jle
stos
in
aas
into
jb
mov
ja
mov
lcall
or
dec
pop
out
fstpt
mov
jae
mov
inc
inc
lea
cmc
subl
push
lcall
sbb
sahf
jecxz
repz
pop
in
dec
rolb
pop
ljmp
or
imul
mov
xchg
gs
inc
test
imul
movsb
push
aaa
adc
ror
xchg
add
in
cmp
push
lcall
xchg
jb
sub
dec
aam
inc
cmp
mov
ja
push
scas
test
sub
xchg
mov
scas
jge
mov
ss
std
or
pop
mov
fdecstp
les
mov
inc
jb
lock
xchg
aad
fadds
jecxz
jnp
adcl
mov
mov
jmp
cmp
xlat
and
push
cmpsl
fcoms
inc
ficompl
mov
lods
dec
dec
cmp
test
movsl
mov
clc
jmp
jmp
insl
pop
out
jno
clc
je
inc
outsl
cltd
xchg
repz
aas
push
jmp
mov
sub
aam
outsl
addr16
pusha
mov
jp
mov
aam
bound
push
aaa
aaa
or
mov
sbb
adc
sub
adcl
lock
push
shr
fidivrs
imul
loop,pt
lret
fs
gs
inc
pop
popf
cld
push
fs
push
sub
mov
in
lods
test
divb
fs
rorl
mov
das
ds
in
daa
mov
cmp
lods
xor
mov
aas
mov
inc
inc
xchg
xchg
repnz
pop
mov
xor
cmp
push
xor
dec
stos
pop
mov
mov
or
mov
push
mov
push
jne
cmp
jecxz
push
pop
test
sbb
ffreep
int
aaa
sub
adc
xor
insb
nop
jae
ret
sbb
mov
cli
scas
faddl
lock
sbb
js
call
int
popa
repnz
pop
dec
jp
int
jmp
in
scas
in
add
dec
adc
mov
mov
cwtl
leave
imul
fldt
jbe
xchg
sbb
jb
adc
dec
mov
mov
sub
repz
mov
inc
dec
lds
cmpsb
push
pop
lret
cld
inc
test
cld
and
inc
mov
jp
sub
push
add
inc
inc
clc
fmuls
in
sti
cmc
push
add
xor
nop
adc
shll
add
data16
inc
jmp
decb
jp
out
cmp
jecxz
popf
ret
sub
fadds
outsb
inc
in
jmp
mov
add
int
push
sbb
fcomip
in
lea
xchg
sub
jns
ja
pop
push
mov
imul
inc
jmp
adc
fwait
out
test
dec
in
and
test
pop
mov
outsl
jno
pop
xor
mov
or
cwtl
mov
cmpsb
xchg
sahf
clc
cmp
in
test
mov
cmp
lods
xor
push
add
arpl
or
arpl
push
ss
insb
dec
out
add
xchg
test
mov
js
xchg
fxch
mov
mov
inc
xor
xchg
or
scas
dec
xor
cmp
fs
fs
out
dec
sub
test
mov
mov
fsubs
cmp
xchg
sub
loope
pop
sub
out
cli
mov
xor
xlat
in
sahf
inc
mov
push
cltd
mov
cmp
jno
lock
lods
shrb
add
inc
ret
cs
push
push
int3
std
cvtps2pd
mov
or
movsb
add
sbbl
arpl
cmp
mov
outsl
insl
ja
cmc
loope
xchg
inc
test
fists
rcrl
xlat
xor
lds
pusha
xlat
ja
add
jl
jp
jnp
pop
rorb
sbb
mov
in
push
pop
rcrb
daa
and
rep
mov
int3
fwait
sub
xchg
pop
icebp
into
inc
sub
insl
mov
out
mov
adc
movsb
mov
push
jecxz
jo
dec
xchg
lock
out
iret
nop
jg
pop
add
xlat
xchg
repnz
rolb
das
xchg
lods
fcomip
loope
or
cld
jo
and
cmp
xchg
xchg
mov
cmp
dec
ret
inc
push
pop
jae
into
das
lret
bnd
lock
mov
adc
je
cld
mov
and
pop
cmpl
aad
cmpsb
and
cwtl
add
push
push
dec
pcmpgtw
loope
mov
fbld
es
shl
es
repnz
in
push
sub
repz
mov
mov
cmp
dec
mov
adc
imulb
fstl
stos
imul
test
sbb
jge
fistps
mov
test
in
bound
xor
cld
xchg
mov
lahf
test
cmc
lea
das
jmp
test
xchg
repnz
or
insl
sbb
and
sbb
push
roll
cmp
add
stos
lods
mov
xor
imul
imul
fldl
mov
scas
fdivs
add
dec
xchg
sub
inc
sbb
xchg
scas
imul
iret
popa
addr16
mov
out
inc
lods
sbb
repz
mov
mov
xchg
ret
push
cmp
mov
and
rorb
popf
jge
leave
test
in
push
jns
mov
mov
inc
xor
insb
fcoml
orb
mov
rcrl
rorl
pop
inc
sahf
incl
ja
dec
push
push
sub
adc
mov
inc
cmp
fcoms
lahf
pop
jmp
out
in
inc
scas
popf
cmp
scas
pop
ds
test
jl
enter
das
js
push
inc
stc
mov
dec
data16
xor
js
imul
cmp
add
rorb
jb
add
jbe
mov
ret
mov
xchg
pop
sbbl
fimull
jnp
stos
xor
pop
rolb
stos
push
xchg
xor
lahf
scas
iret
xchg
psubb
add
cld
bound
sub
in
and
rolb
adc
jp
and
fcmove
sbb
sbb
inc
les
mov
pop
xor
jp
inc
xor
lret
pop
push
or
call
mov
mov
mov
xor
stos
movsb
and
notl
test
or
popf
imul
in
jmp
mov
inc
lods
nop
cld
je
push
or
outsb
cld
pop
ds
cli
lcall
aaa
aas
xor
lds
mov
push
lret
icebp
sub
imull
add
out
mov
or
enter
subl
adc
imul
int
gs
cmp
es
sub
movsl
inc
leave
pop
add
or
int3
int3
pop
and
jg
jae
pushf
push
rcrb
lea
out
int
inc
lods
out
adc
xchg
js
and
sbb
xor
push
lock
cmp
sbb
test
inc
aas
out
dec
pushfw
mov
sar
mov
push
add
mov
lods
push
add
sub
jmp
mov
popf
dec
movsb
fnsave
scas
dec
call
or
daa
pop
dec
popa
xor
push
and
rorb
jg
sub
rcrb
lods
pop
scas
ffree
pusha
cwtl
mov
cmpsl
mov
inc
lea
in
sbb
jns
xchg
cmp
fs
xlat
xchg
xor
and
loop
or
push
in
add
push
dec
pop
xor
popa
fs
dec
das
iret
jmp
into
jno
inc
test
push
pop
dec
clc
test
lret
lods
iret
pop
push
fldcw
les
push
mov
mov
cmp
fldenv
add
andl
or
popf
add
jl
out
repz
sub
fmull
mov
cltd
add
add
loope
xchg
icebp
mov
jns
dec
ds
cli
jmp
xor
pop
or
xor
mov
sub
fnstenv
fdivr
das
imulb
pop
movsb
fbstp
das
or
ret
adc
fbstp
sbb
jnp
stos
out
ljmp
adc
inc
ret
clc
outsb
popf
aas
pop
jno
inc
lods
adc
jo
imul
mov
scas
sar
nop
jne
add
pop
outsl
daa
and
pop
stos
jge
outsl
pop
cwtl
jp
mov
adc
je
or
clc
mov
sbbl
xor
cmp
cmpsl
xchg
push
push
jae
int
sub
xchg
mov
lcall
xor
daa
xchg
sub
fbld
push
mov
mov
mov
jmp
repnz
xor
or
cmp
aaa
xchg
in
cli
movsb
pop
pop
les
cmp
or
inc
pop
mov
int
imul
jb
orb
aas
out
lea
dec
inc
iret
push
sbb
inc
ret
pop
mov
nop
mov
jae
sub
daa
jecxz
pop
and
push
jmp
mov
cli
nop
sbb
xchg
shll
sub
mov
test
add
aaa
int3
das
mov
es
lds
inc
or
inc
dec
inc
cld
and
dec
into
fwait
outsl
test
pusha
lret
addl
imul
cwtl
fwait
or
cmc
jl
adc
push
lock
xlat
mov
push
sbb
or
lcall
jmp
loopne
add
or
dec
dec
jns
pop
push
repz
enter
jmp
inc
sahf
mov
mov
les
ja
dec
shrb
dec
mov
mov
jns
xchg
in
std
mov
rclb
divb
popa
je
fwait
stos
sbb
sahf
sub
in
mov
arpl
jle
mov
or
into
in
xchg
sub
int
mov
lar
cld
xchg
sub
fisttps
inc
iret
add
dec
rclb
xchg
jp
xchg
iret
cmc
ficoms
nop
mov
out
xor
loope
or
pop
dec
cmp
dec
push
lods
cmpsl
bound
and
dec
dec
rol
mov
hlt
leave
sbb
mov
sub
sub
mov
push
in
pop
push
pop
add
push
dec
xchg
dec
ja
into
scas
push
xlat
xor
sub
xor
nop
jae
or
cld
dec
pop
mov
in
jns
ja
movsl
mov
outsl
lcall
sub
cltd
and
jg
jae
mov
sarb
and
fwait
push
dec
cmp
adc
sbb
pop
sub
in
dec
cmpsl
orl
push
xchg
adc
in
mov
xchg
mov
fldl
fcomps
push
dec
push
mov
mov
mov
imul
pusha
iret
je
cltd
arpl
rolb
stos
in
push
rcrl
in
sub
dec
mov
in
mov
cwtl
adc
pop
add
cltd
imul
or
orb
gs
movsb
sbb
movsb
imul
add
imul
inc
leave
dec
pop
gs
mov
sbb
movsl
icebp
sti
mov
xor
sub
sub
pushf
sbb
add
pop
dec
inc
imul
fsub
scas
xchg
jle
mov
jae
push
inc
lods
pusha
mov
fs
cwtl
adc
xchg
int
xor
mulb
in
leave
xchg
rclb
ljmp
cmpsb
mov
test
movsl
aas
sub
push
aaa
sbb
mov
push
jo
jecxz
push
cltd
mov
xchg
jb
repz
out
add
cmp
mov
adc
stos
scas
push
mov
mov
cmp
insl
cmp
inc
sbb
sub
jge
inc
test
pop
sbb
mov
and
out
inc
cmpsl
xor
ljmp
jbe
or
add
inc
jle
and
xor
inc
push
out
xor
and
ret
dec
sub
data16
fnstcw
mov
lock
jmp
jo
lds
repnz
lea
cmp
mov
nop
adc
dec
outsb
popa
mov
mov
mov
pop
mov
sbb
lret
pop
shll
icebp
lds
cwtl
cs
outsl
mov
mov
xchg
out
fsubrs
pop
add
xor
or
aas
scas
sti
jp
jo
pop
into
push
xchg
mov
ja
stc
cmp
xchg
inc
pop
add
push
iret
dec
dec
jae
jb
adc
inc
mov
jl
mov
xrelease
sub
rolb
push
dec
in
sbb
lea
insb
sarl
mov
fcoml
dec
add
sahf
mov
add
stc
or
xor
inc
and
pop
and
sub
jecxz,pt
inc
test
out
lods
mov
pop
mov
aaa
mov
cmpl
mov
sahf
out
xchg
int3
divl
jge
cld
jbe
jbe
xchg
sbb
out
add
pop
lahf
dec
xlat
mov
cmp
repnz
push
pop
pushf
lock
mov
lock
adc
daa
lock
push
pop
cmp
mov
mov
adcb
mov
cmc
mov
out
adc
or
mov
push
inc
das
fldenv
insb
mov
fidivrs
sub
out
mov
sub
addr16
xchg
fcoms
testb
xor
out
xor
into
rcrb
pop
mov
lods
or
aaa
sahf
pop
sbb
mov
test
xor
dec
test
jecxz
push
aad
pushf
aas
add
hlt
addr16
enter
fadds
lock
cmpsb
push
popf
lret
dec
xor
shlb
xor
gs
adc
jbe
inc
fmulp
fstl
sbb
fildll
inc
cmp
sbb
sub
ljmp
bound
mov
cmp
dec
ret
mov
scas
std
in
pop
sub
adc
inc
mov
aam
sarb
or
adc
mov
jno
or
and
adc
xor
cltd
sub
xor
iret
aam
sbb
push
xchg
inc
adc
pop
dec
dec
mov
and
dec
aad
repnz
test
push
jo
fiaddl
into
xchg
adc
dec
les
mov
imul
pop
mov
addr16
stos
scas
mov
xchg
xchg
mov
xchg
test
jp
cmp
cmp
or
stos
or
fwait
pop
mov
out
addr16
inc
sbb
and
iret
lods
pop
testl
mov
xlat
ss
ret
stos
ljmp
mov
mov
pop
jno
mov
jp
cltd
and
jno
imul
cmp
cmp
or
jno
push
mov
enter
test
jae
icebp
inc
hlt
jle
cli
xchg
mov
movl
xor
jmp
lret
loop
nop
mov
inc
stos
arpl
xchg
sub
icebp
cltd
pop
mov
js
jmp
mov
cmp
movsl
rdmsr
test
rcl
lods
lock
mov
xchg
aas
hlt
in
xchg
and
jo
cltd
mov
mov
xor
popa
xchg
loopne
push
enter
xor
addr16
pop
sub
xor
sub
out
inc
mov
add
lcall
push
sub
std
mov
add
cltd
inc
sbb
ds
jns
cmpsl
lock
xor
mov
in
xor
lret
scas
inc
inc
or
fistpll
movntps
jns
aaa
lret
enter
or
fdivrl
jmp
or
imul
mov
loope
imul
xchg
aad
inc
push
cmp
jle
push
sbb
inc
ror
or
lods
mov
mov
sub
mov
je
shrb
jg
jg
jae
xor
in
cmpsl
mov
and
xor
stc
fwait
add
sub
out
push
inc
jae
and
fimull
xor
jl
bound
jl
cmp
jnp
pop
cmc
push
xchg
fimull
jo
lock
mov
sub
fcomps
push
cmp
lret
cmc
lahf
aaa
mov
stos
faddl
dec
ret
mov
leavew
lea
insl
aas
addb
les
orb
xchg
inc
inc
int
es
mov
jl
in
test
dec
stos
aad
in
jg
push
push
aam
inc
push
pop
lret
and
js
into
xchg
inc
jle
xchg
pop
leave
sub
push
out
sub
sub
mov
testl
cmp
xchg
cmp
mov
dec
jecxz
faddl
dec
sbb
clc
popa
imul
ret
sbb
mov
sbb
sub
mov
adc
xor
insb
lcall
sbb
mov
inc
cmpsl
push
cmpsb
push
push
test
shlb
xor
xorl
inc
out
aad
jbe
xor
mov
xchg
mov
push
fstl
inc
fcmovne
sti
add
xor
mov
arpl
ljmp
mov
sub
lods
or
mov
leave
enter
jmp
cltd
xchg
sbb
add
add
in
jno
stc
push
les
inc
shll
mov
es
repz
ljmp
cmp
adc
fisubs
int
jne
sbb
mov
fidivrl
push
pop
imul
xor
push
shlb
jmp
loope
iret
mov
fs
ljmp
adc
push
sbb
cmpsl
dec
or
inc
xchg
pop
aad
insb
notb
orb
mov
push
mov
testl
mov
jle
lea
ljmp
xlat
insb
les
or
cmpb
xor
add
mov
popf
dec
scas
add
mov
add
xor
jne
aam
xor
sbb
sbb
rolb
cmp
dec
cwtl
mov
notl
inc
fwait
lds
stc
cld
imul
push
insb
cmpsl
sbb
insb
movsb
jnp
push
adcl
inc
push
pushf
push
sbb
sbb
stos
jecxz
fsubrl
mov
or
add
aaa
sub
popa
xlat
stos
das
testl
cmp
mov
outsb
mov
lret
mov
int3
inc
pop
pop
cmc
pushf
jl
xchg
xchg
add
andb
mov
out
or
mov
mov
sbb
xorl
xchg
jg
testb
sbb
jno
or
cmp
mov
loope,pt
and
sub
mov
les
pop
stos
mov
add
outsb
and
ret
dec
add
add
sub
add
iret
pusha
or
xor
jo
pop
lock
out
sub
ds
mov
inc
or
xchg
and
repnz
xchg
fs
outsb
sbb
lcall
jne
push
xor
push
xchg
pop
cmc
inc
call
jmp
cmp
sub
out
fstps
add
adc
mov
cmpsb
cmp
repnz
data16
dec
lcall
dec
fwait
iret
mov
mov
adc
sbb
popa
push
mov
mov
out
pop
xor
in
cs
jge
imul
sar
sub
stc
mov
fmul
imul
fdivl
lods
dec
jno
lahf
rolb
out
inc
push
mov
jp
dec
cmpsb
lret
fisubl
sub
adc
sbb
mov
lret
cmp
scas
shrl
fisubrl
mov
sti
les
push
or
lock
out
sbb
sbb
ss
ljmp
ror
mov
out
and
dec
and
ret
or
addr16
push
mov
push
mov
jp
subl
push
or
test
xor
pop
jmp
jecxz
sbb
add
sbb
and
stos
enter
adc
arpl
adc
cvtps2pd
dec
mov
adc
pop
pop
pusha
or
xchg
ret
mov
or
and
pusha
mov
stc
add
repnz
push
mov
jno
dec
push
rcrl
sti
fwait
jbe
mov
xor
jmp
jo
or
add
out
push
mov
xchg
clc
push
es
dec
fs
cld
adc
loopne
adc
jmp
dec
scas
shlb
adc
fcoml
sbb
push
cltd
sub
fsubrp
aas
jmp
jge
insl
gs
fldenv
je
dec
fwait
testb
mov
sub
ljmp
sahf
lods
push
mov
test
lcall
xchg
sub
iret
nop
jns
outsb
cmp
es
fisubs
sarb
adc
insl
fmull
nop
push
xchg
out
lock
and
stos
push
std
imul
jns
repnz
and
loop
pop
cmp
and
jns
or
inc
push
fimuls
out
pop
fiaddl
jmp
std
or
xchg
jb
push
hlt
lds
xor
fldenv
sahf
mov
lea
pop
cmpsb
fsubl
jns
loop
jb
add
popa
inc
or
lods
push
cmp
popf
or
dec
push
lret
clc
mov
loope
loope
in
cmc
adc
repz
das
pop
mov
xchg
jmp
xchg
sahf
je,pn
scas
or
dec
adc
enter
pop
shrl
je
pop
lods
mov
add
or
scas
shlb
das
cmc
jno
and
xor
mov
xchg
roll
xor
xor
xchg
mov
xchg
xchg
stos
mov
and
jnp
popa
adc
push
mov
ss
sub
in
dec
loop
or
arpl
out
fists
das
sub
hlt
mov
inc
test
adc
mov
repnz
jo
insl
nop
faddl
clc
xlat
aaa
inc
add
mov
incl
add
fsubrs
inc
xchg
push
shlb
and
outsb
bound
sbb
push
int3
cld
ss
nop
mov
dec
fisttpl
es
inc
loopne
cmp
addr16
jge
mov
xor
outsl
push
movsl
ds
jae
rcrb
testl
xchg
lock
stos
rcll
mov
setno
lahf
in
daa
jns
andb
scas
inc
aas
mov
shll
xor
mov
addb
push
cmp
jbe
pop
ljmp
shrb
daa
push
mov
xor
in
in
stos
inc
jae
push
ja
push
sub
jns
xlat
and
repnz
jmp
jnp
xchg
jle
ds
xchg
xor
mov
mov
jmp
ficompl
mov
stos
xor
mov
xchg
push
cmp
cmp
stc
mov
sub
jg
pop
push
hlt
cmp
dec
jo
lods
cltd
push
popa
jg
push
jge
jbe
sub
sub
icebp
or
jp
loope
pushf
mov
cmp
push
jo
sahf
mov
mov
add
inc
lea
lods
dec
stos
xchg
subb
cmp
pusha
pop
mov
das
outsb
pushf
jae
ds
out
jle
add
xor
test
pop
mov
lret
cmp
das
inc
push
fptan
gs
jecxz
lcall
push
in
or
jl
ret
gs
mov
cmp
es
jecxz
mov
xchg
xor
inc
sbb
orb
and
xchg
push
push
cmp
push
mov
dec
popa
push
aaa
shl
sahf
cmp
stos
repz
sub
jle
cmp
and
xor
pop
xchg
push
and
mov
or
and
inc
inc
pusha
adc
mov
inc
ss
and
decl
mov
sub
movq
dec
cmc
jecxz
sbb
and
inc
and
mov
mov
out
mov
ret
pop
insb
fcmovne
dec
lea
lds
jecxz
and
stos
imul
hlt
sbb
jnp
inc
imul
cltd
mov
aam
pusha
test
mov
jbe
mov
sub
inc
push
mov
cmpsl
push
repnz
dec
mov
int3
pop
jl
hlt
inc
pop
cmp
test
aaa
sub
dec
xchg
jg
push
in
lahf
adc
gs
das
out
int
fwait
aaa
es
je
fsubr
and
orl
outsb
and
push
inc
mov
movsb
xchg
pop
lcall
cmp
and
ss
loop
cmp
test
add
test
or
adc
pushf
dec
xchg
jg
cmpsl
jb
sar
adc
inc
xlat
or
mov
ficompl
insl
es
test
cmp
or
add
xchg
dec
ds
add
xchg
add
scas
xor
xchg
sbb
or
je
push
lods
dec
sub
stc
or
push
clc
negb
aad
aaa
sbb
xchg
push
cs
sahf
pop
data16
popf
mov
cltd
mov
fwait
xor
scas
jl
divb
jae
or
lods
mov
sbb
xor
xchg
sbb
push
stc
add
lret
cmp
addr16
push
push
aam
andb
out
stos
sbb
inc
or
aas
dec
stos
pop
dec
sub
shll
sub
and
push
leave
lahf
push
jg
out
arpl
push
jne
pop
imul
jno
lds
jne
add
loop
sbb
inc
sub
ret
xor
cmpsl
aam
fucomip
add
adc
and
mov
dec
jecxz
inc
mov
aam
jmp
mov
add
mov
push
xor
or
data16
pop
jmp
mov
dec
in
push
and
pop
xlat
orl
testb
adc
stos
cld
add
mov
jne
pop
outsl
mov
data16
push
popf
fnstsw
lcall
scas
mov
push
inc
lds
mov
dec
mov
loopne
bound
imul
xchg
lret
push
or
in
neg
roll
adc
mov
jg
jmp
push
sbb
mov
hlt
xlat
cmp
subps
mov
neg
test
mov
xchg
stos
sub
add
stc
inc
mov
data16
fs
int
push
test
pop
cmp
outsl
push
push
inc
or
adc
jae
push
pop
in
sub
dec
inc
mov
loope
fsubs
inc
or
das
lock
bound
shl
mov
add
xchg
mov
xchg
and
mov
xor
out
jle
sub
int3
mov
subb
or
sbb
lahf
and
in
leave
jnp
push
out
sahf
and
add
fsubs
scas
sub
addr16
mov
cmp
mov
push
fsub
sbb
mov
jge
push
or
mov
mov
icebp
and
out
popa
cmp
jg
lahf
jno
mov
mov
or
es
inc
stos
int
pop
push
sbb
inc
fidivl
mov
call
dec
dec
bnd
adc
inc
inc
popf
fwait
xor
mov
enter
jo
mov
or
rorb
outsb
or
imulb
das
push
mov
faddl
cld
sub
mov
out
movsb
pop
mov
mov
lret
xor
in
push
adc
and
mov
aas
inc
sbb
out
lds
sbb
pop
inc
xchg
lret
jl
into
jmp
push
nop
loop
cli
roll
movsb
lds
out
adc
int
out
mov
xchg
jno
pop
push
out
ds
popa
adc
cmpsb
xchg
roll
lods
fiaddl
dec
pop
mov
add
mov
xor
push
mov
das
pop
imul
je
outsb
dec
shlb
aad
mov
loopne
ds
es
movsb
aaa
icebp
mov
mov
jmp
sbb
fucom
push
ds
push
mov
or
ret
jge
stc
xor
repnz
mov
cmpsb
fisubl
inc
xchg
cmc
mov
test
push
add
aam
inc
mov
jle
sbb
mov
mov
in
jl
jnp
imul
xchg
in
inc
mov
sbb
ficomps
lret
arpl
push
jne
mov
js
aad
ljmp
push
jecxz
ljmp
sbb
mov
add
xor
popl
xor
negb
dec
push
push
cmp
in
cwtl
fstpl
repnz
ficoms
dec
in
sub
cmpsl
cmpsb
aas
imul
inc
testb
xchg
mov
js
nop
daa
sub
lock
popf
pop
mov
adc
mov
pusha
in
or
ljmp
lds
in
pop
cltd
mov
ret
jne
xchg
ret
and
sbbb
iret
int
stos
stos
jbe
xchg
inc
xchg
jmp
sbb
or
pop
imul
mov
sub
xlat
push
mov
or
mov
jmp
pop
jl
cmp
ds
shrl
dec
jmp
insb
rorl
aam
jnp
cmpsb
fcmovnbe
addr16
xor
out
arpl
test
sbb
iret
ss
mov
cmp
out
push
inc
outsl
dec
add
inc
jmp
and
idivb
aas
ja
or
push
dec
insb
js
mov
mov
lock
mov
pop
ljmp
out
in
and
jg
stos
pushf
xor
ret
negb
mov
popa
popa
xor
loop
sbb
fnstsw
add
mov
ret
inc
and
int3
arpl
mov
mov
repz
mov
mov
and
cmp
mov
pop
std
push
data16
xor
fwait
jmp
pop
dec
xchg
fdivr
push
mov
enter
in
xor
push
lcall
in
test
cmpb
pop
xor
inc
aad
pop
sti
fsts
out
mov
add
pop
repz
cwtl
les
sub
scas
aas
popf
cwtl
hlt
fxch
push
mov
xor
xchg
sub
mov
ret
mov
sbb
test
cmp
movsl
cli
mov
xchg
jecxz
jae
mov
xchg
ja
inc
popa
icebp
jb
pop
cmp
xchg
leave
adc
aaa
dec
lcall
addb
sbb
xchg
call
pop
leave
inc
lea
mov
in
test
pop
daa
cmp
push
cmp
scas
mov
jle
sahf
jmp
jmp
push
sub
push
jnp
sbb
into
loope
dec
mov
das
sub
sbb
les
cmp
inc
repz
lods
in
xchg
push
ret
jl
stc
sbb
sub
jno
test
test
out
pop
xchg
xchg
mov
mov
xor
das
mov
cltd
jb
outsl
scas
faddl
push
lods
ficoms
sub
jne
ds
or
inc
xor
icebp
dec
mulb
adc
test
sarl
push
mov
nop
scas
adc
cmp
lock
hlt
js
mov
or
push
add
rolb
inc
jno
sub
stos
aaa
adc
cmp
add
mov
sub
scas
imul
loope
push
jb
and
shl
mov
push
dec
dec
sub
lds
pop
or
stc
lret
pop
inc
out
push
mov
push
mov
mov
xchg
jmp
cmp
jne
mov
sub
aas
fwait
mov
mov
mov
mov
movsb
sbb
sar
popf
aaa
pushf
sahf
xchg
mov
bnd
sbb
inc
jp
push
fcomi
mov
mov
movsl
jne
lods
dec
hlt
lahf
fildl
mov
inc
add
jns
cmp
ret
mov
imulb
push
int3
or
dec
sub
je
imull
sbb
or
out
adc
push
inc
cmp
and
sbb
das
mov
dec
mov
stos
std
into
sbb
movsl
mov
cmp
cli
push
int
or
sbb
mov
subb
mov
mov
adc
jl
out
mul
cmp
sbb
repz
xor
clc
sbb
sub
push
and
sbb
jnp
loopne
lock
nop
loopne
and
mov
pop
loope
adc
pop
addr16
push
mov
mov
cltd
nop
loop
xor
and
rol
mov
sub
add
fsubs
mov
in
cmp
lods
cmp
xchg
cmpsb
xchg
or
push
pop
shl
loop
stc
fldt
pop
mov
arpl
jbe
aam
jmp
dec
ret
and
lds
xlat
into
popl
xchg
aas
dec
clc
jns
popl
cmc
push
lret
mov
ret
int3
add
cmp
sbb
ds
xchg
jl
test
mov
rolb
in
les
fdivl
xchg
add
int
push
push
pop
cmpsl
loopne
mull
pop
lods
iret
add
add
jmp
cmp
test
mov
adc
lret
int3
bound
insl
in
cmpb
sub
mov
jmp
mov
xchg
mov
nop
pop
mov
push
jb
roll
jo
insb
cmp
mov
ret
mov
inc
lahf
sub
lahf
jne
imul
jle
inc
mov
cmc
sub
push
push
shrb
lcall
shll
ret
cmp
mov
das
xchg
rolb
dec
lret
push
pop
push
js
iret
inc
fdivl
or
cmp
mov
add
inc
jecxz
into
repz
push
cltd
pop
sbb
clc
les
es
inc
movsl
and
insl
push
and
push
jle
int3
mov
xchg
je
jmp
add
hlt
add
jg
movsb
mov
sbb
jg
imul
push
popf
add
enter
add
clc
ret
xchg
sahf
and
shrl
js
gs
jb
repnz
test
mov
mov
xlat
add
iret
lock
mov
jno
mov
popf
adc
popa
pop
mov
and
mov
sub
insl
jb
addl
fistps
jno
aad
xor
aad
or
jp
js
jp
pop
stc
not
out
mov
push
sub
adc
das
xchg
dec
ljmp
shlb
cmp
test
mov
inc
dec
fldenv
cli
mov
inc
stos
pop
lret
in
rclb
push
and
jmp
xchg
nop
jnp
into
jno
icebp
sub
nop
xchg
mov
repz
dec
mov
or
lods
xor
popf
jge
inc
in
inc
repnz
cwtl
adc
mov
pop
push
or
rcr
das
loop
dec
icebp
xchg
mov
clc
idivb
ljmp
subb
and
dec
repnz
test
sbb
or
sbb
jne
loop
fsubr
sub
in
mov
push
dec
aam
imul
and
mov
push
sbb
out
rorl
fidivrl
cmc
mov
ljmp
imul
lods
fs
dec
in
insb
lds
fs
sbb
divb
xorb
hlt
out
js
push
xchg
movsb
or
sbb
pop
mov
sbb
pop
push
or
cmp
dec
cwtl
xor
loope
scas
mov
gs
lds
mov
shrb
mov
xchg
stos
daa
cmp
aad
imul
mov
jo
sbb
inc
mov
inc
orl
jge
cmp
adc
adc
insl
mov
add
mov
popa
inc
mov
adc
ret
mov
pop
inc
adc
cmpl
fwait
and
jae
or
add
cmpl
cmp
xchg
sub
mov
mov
jmp
jmp
aad
xor
add
lahf
out
call
mov
or
adc
aad
adc
jge
jl
addr16
mov
mov
sub
movsb
stos
and
inc
add
movsl
inc
add
xor
das
mov
lea
test
je
test
rclb
ss
mov
pusha
sbb
adc
fwait
mov
xor
mov
popa
in
push
pop
lret
add
sbb
movsb
fsin
adc
ud1
flds
addr16
das
adc
orl
pop
and
arpl
sub
push
xchg
and
lea
lcall
push
out
mov
int
mov
sbb
js
pop
sub
fwait
cltd
and
push
bound
push
andb
mov
out
call
pusha
jg
cld
adc
shr
inc
sahf
xchg
popa
pop
mov
cmp
js
outsl
mov
mov
out
sbb
lea
dec
inc
fsubrl
pop
mov
lds
inc
cmc
movsl
add
clc
jecxz
hlt
mull
add
mov
pushf
sarb
sbb
mov
xchg
and
fiaddl
mov
lahf
mov
xchg
sub
repnz
cltd
in
repz
mov
pop
and
jno
scas
loop
dec
ret
ds
in
movsl
or
je
sbb
cmp
cmpsb
shrl
ss
pop
pop
mov
ss
add
faddl
mov
mov
lret
sub
movsb
aam
dec
not
fisubs
in
sub
push
cmc
xor
pop
push
push
int
mov
cmpsl
lea
xchg
pop
pop
call
daa
jo
and
imul
pop
push
inc
xchg
inc
stc
movb
adc
lret
fstpl
mov
outsl
out
inc
in
inc
and
sbb
mov
xchg
cld
pusha
xchg
mov
popl
sub
shll
int
xchg
xchg
xchg
mov
fimull
daa
push
mov
dec
jbe
loop
ret
sbb
mov
imul
jp
mov
mov
inc
add
jge
xchg
sbb
push
scas
loope
jb
fistpl
mov
xchg
ret
in
ret
sarl
sti
dec
std
and
jle
pop
pusha
outsl
jg
cmp
imul
outsl
xor
xor
mov
mov
les
sbb
add
adc
mov
jmp
inc
push
nop
rol
xchg
sbb
and
cmpsb
adc
ficoms
adc
jle
lret
ljmp
adc
js
sbb
mov
into
xchg
ds
rcrl
pop
push
inc
fs
mov
js
inc
arpl
push
and
out
ds
arpl
sub
imull
fnstenv
add
shlb
mov
ljmp
lds
mov
fimull
test
cmp
ja
pop
inc
jae
int3
sub
clc
cmpsb
jmp
sbb
movsl
movsb
push
nop
jno
lcall
ret
std
popa
or
aad
xor
imul
inc
sub
addr16
mov
sub
cmp
cmc
test
mov
pushf
sub
jp
neg
push
shll
push
add
shlb
stos
aad
mov
mov
jne
push
pop
test
push
lret
mov
xor
stos
dec
ret
mov
scas
sbb
addr16
cltd
into
and
or
movsl
and
pop
pop
mov
sub
pop
sbb
test
cmp
pusha
or
push
int3
lods
xor
insb
pop
inc
out
dec
sahf
js
and
mov
in
js
int3
icebp
cmp
adc
ss
sarl
sub
out
mov
test
shlb
test
addl
std
lret
add
les
das
dec
adc
sbb
inc
out
aas
imul
push
mov
inc
cwtl
mov
push
pop
and
push
insb
repnz
cld
xchg
sub
push
or
jno
dec
into
adc
cmp
inc
push
mov
add
in
out
adc
xchg
mov
inc
add
jmp
mov
xchg
data16
pop
sahf
data16
push
gs
jae
std
push
mov
mov
lcall
loope
xchg
rclb
adc
sbb
dec
out
xchg
and
mov
sbb
ja
adc
fadds
dec
cltd
add
std
sub
mov
dec
lea
mov
push
sub
sbb
data16
inc
push
bound
and
ret
out
pop
mov
stos
xchg
bound
xor
sti
andb
adc
mov
movsb
aaa
and
subb
and
lock
ljmp
jg
xchg
fs
add
outsl
push
movsb
insb
ret
out
xor
mov
lods
push
stos
mov
jle
lods
loopne
inc
and
cmp
push
in
cmp
outsb
movsl
cli
jle
jno
insb
test
jo
fisttps
cli
popf
xchg
mov
inc
shrl
jecxz
inc
xor
xchg
fst
adc
push
pop
cmp
xor
mov
repnz
adc
cli
es
test
sub
sub
test
mov
cwtl
insl
jl
sbb
add
cmp
sbb
cmc
scas
lahf
popa
fisttpl
popa
xor
movsb
mov
xchg
inc
sbb
test
sub
jae
popa
shrb
fnstenv
xchg
jno
or
push
add
sbb
mov
std
insl
pushf
jne
push
sbb
cmp
stos
les
add
xchg
es
cltd
loopne
test
outsl
push
inc
mov
sti
aad
sbb
cld
and
inc
dec
les
aad
int3
fiadds
or
jnp
sbb
or
xchg
mov
pop
push
loop
lods
cmp
xchg
push
xchg
mov
inc
fsubrs
leave
sti
loop
jb
inc
cmp
mov
xor
das
fimuls
lock
cmc
stos
dec
call
mov
lcall
cltd
adc
or
jecxz
mov
inc
push
dec
mov
mov
xlat
or
cmp
in
insl
mov
pop
xor
xchg
scas
mov
sub
iret
fcmove
xchg
jno,pn
mov
das
lret
out
scas
xbegin
sub
outsl
nop
xchg
popa
jne
sbb
pop
xor
das
pop
pop
mov
inc
jl
in
jl
xchg
xchg
inc
push
arpl
adc
fs
pop
cwtl
jb
mov
sbb
int3
sub
mov
loope
out
inc
dec
ds
inc
push
pop
fcmovne
xchg
sbb
mov
pop
fcomps
sahf
into
hlt
int3
lods
jl
add
enter
cld
adc
mov
icebp
inc
fcoms
cld
test
test
bound
cmp
insl
pushl
pop
push
push
add
mov
nop
bound
xor
adc
xor
shlb
and
je
lds
test
sbb
or
lock
xchg
lret
std
mov
cmp
push
inc
mov
shlb
test
insl
into
movsl
pop
push
mov
push
cwtl
fs
shll
iret
jnp
les
cs
adc
sub
pop
push
xor
jne
in
xchg
int3
frstor
adc
mov
mov
mov
jne
cwtl
mov
es
push
repz
fdiv
or
outsl
push
lcall
mov
jnp
loop
inc
xor
fcompl
inc
or
xchg
aad
jno
inc
mov
dec
lods
cld
cmp
mov
mov
or
or
lret
inc
pop
xor
mov
dec
xchg
and
mov
int3
test
pop
push
movsb
cmc
out
cmp
jno
mov
out
and
sbb
mov
and
lds
decl
and
inc
imul
test
mov
aaa
pop
out
insl
icebp
inc
xchg
dec
push
xor
lret
lret
leave
sub
out
dec
pop
adc
push
imul
repz
push
inc
idivb
dec
dec
inc
and
nop
jns
dec
mov
add
jl
jnp
scas
je
inc
add
jns
or
pop
xor
int3
mov
cld
xlat
mov
sub
insb
lods
aas
pop
cmp
mov
mov
shll
pop
jmp
push
cmp
and
lcall
sbb
mov
add
jns
inc
andb
pop
cwtl
sahf
enter
sub
mov
pop
jg
les
inc
imul
inc
push
xor
cwtl
cmpsb
mov
and
dec
nop
fisttpll
cmc
xchg
gs
cmpsb
inc
xchg
arpl
repz
ljmp
jmp
mov
sbb
and
jb
test
cmpsl
sbb
daa
jecxz
sub
push
mov
lock
and
mov
daa
fwait
enter
dec
inc
push
stos
cmp
dec
mov
call
subb
xor
push
nopl
sub
dec
jno
jmp
pop
mov
aam
push
bound
jb
leave
rcrb
pop
imul
fistpl
in
inc
dec
leave
inc
rol
and
mov
dec
test
call
mov
pop
push
lret
inc
shlb
jecxz
push
add
repz
rcrb
push
xor
lea
in
adc
mov
and
loopne
and
out
scas
std
fxch
das
cltd
jecxz
push
add
int
cmp
dec
in
cmpsl
inc
jecxz
pop
and
ret
pop
sub
in
inc
ret
mov
jo
stos
push
fistpll
xchg
xchg
xchg
loopne
std
jne
inc
adc
jecxz
movsb
mov
in
pop
lcall
inc
inc
dec
in
cmp
sbb
sub
stc
jmp
or
cmp
mov
and
xchg
cli
and
add
adc
push
sub
sarb
in
xor
pop
sbb
popf
test
fmul
sbb
add
dec
xor
mov
cmpl
push
mov
movsl
lods
rcrb
push
lock
mov
mov
and
or
xor
or
les
pop
pop
pop
inc
hlt
and
data16
mov
cmp
adc
or
stc
into
mov
daa
push
mov
imul
mov
jnp
xchg
icebp
cmp
and
inc
inc
adcl
sarb
adc
fs
xor
loopne
push
pop
loop
mov
xorl
mov
insb
rorb
push
lods
push
das
addb
pop
lea
aaa
pushf
jecxz
pop
mov
xchg
insb
xchg
sbb
ljmp
adcl
xchg
test
fadd
fcmove
dec
bound
int3
lock
adc
jle
inc
cmp
mov
xchg
add
dec
lea
jle
sarb
fldl2t
dec
pop
xchg
lret
xchg
add
daa
push
cmp
or
mov
adc
bound
push
xor
push
aaa
stc
cmp
xor
push
xchg
mov
lds
pop
movsl
sbb
push
stos
push
mov
aaa
dec
mov
pop
jbe,pn
cmp
out
loope
lcall
ja
push
dec
xchg
and
arpl
fwait
ud0
mov
cli
data16
cltd
fwait
jbe
mov
push
ljmp
cmp
dec
lret
sbb
adcl
clc
push
mov
mov
mov
mov
push
push
test
out
in
pop
mov
aam
jle
pop
mov
popf
dec
xor
or
popa
ret
js
push
sbb
jl
jecxz
lock
mov
add
jbe
push
xor
mov
or
faddl
adc
and
dec
dec
notl
adcb
int3
dec
es
sbb
je
push
jb
and
jb
jp
mov
pop
insl
and
jp
add
aas
pop
add
and
xor
cltd
dec
pop
dec
lret
jmp
adc
inc
cmpsb
sbb
loope
lret
lahf
jp
push
add
loope
movsl
dec
or
pop
int3
popa
ss
mov
mov
lds
adc
sub
rcrl
cmp
aaa
insb
aam
popa
je
aam
or
or
push
aas
lsl
das
lods
cs
ljmp
mov
lods
daa
addr16
or
hlt
je
lret
jb
add
mov
pop
ret
in
sbb
mov
pop
and
sbb
push
and
es
cmp
xchg
icebp
lea
dec
and
rorb
push
ror
pop
push
push
imul
or
push
pop
hlt
and
fists
add
or
daa
leave
sub
inc
pop
xor
sahf
insl
loopne
repnz
cmp
push
decb
addr16
movsb
scas
jge
cltd
repnz
inc
popf
or
repnz
bound
dec
movsl
add
sub
jmp
iret
push
jecxz
and
dec
and
aam
ret
push
adc
cmp
adc
cmp
or
je
cs
decl
call
enter
ss
pop
daa
icebp
and
xor
enter
xlat
and
in
out
fsub
or
out
cmp
ss
cmp
xorl
add
lods
xchg
call
pop
das
out
mov
mov
clc
sbb
pop
or
mov
and
jnp
lods
icebp
jae
scas
lds
cmp
xor
iret
test
push
add
pop
adc
mov
sub
sbb
mov
sub
sarl
lret
xor
ffreep
push
xlat
mov
sub
push
das
dec
sub
daa
call
ret
jno
jo
lret
movb
fs
pop
push
or
rclb
addr16
test
xchg
cwtl
mov
data16
std
inc
sbb
movsl
pushf
jecxz
pop
push
ret
inc
ljmp
ss
pop
mov
es
scas
adcl
push
nop
pop
addr16
inc
clc
dec
pop
cmp
popa
divb
jae
sbb
dec
mov
enter
je
inc
cmp
inc
ja
jmp
sbb
or
or
pop
test
movsl
lock
cmc
adc
adc
or
call
xlat
scas
scas
adc
loopne
push
dec
cmpsl
ja
pushf
jmp
xchg
pushf
cmpl
cs
dec
mov
dec
pop
in
lret
sti
xchg
pop
jge
dec
outsl
in
lods
sub
scas
xor
or
in
fcmovnb
mov
cmp
int
xchg
push
push
jecxz
movl
cmpps
loopne
pop
das
shr
iret
cwtl
xchg
lds
sarl
aaa
int3
or
das
das
pop
in
mov
dec
loopne
push
ficompl
insb
int3
xor
pop
push
jp
sahf
dec
cmp
das
mov
mov
adc
inc
dec
movlps
mov
popa
sbbl
pop
cltd
stos
imul
inc
sub
aas
je
bswap
loope
mov
inc
out
mov
js
mov
and
add
mov
xor
xlat
push
mov
out
mov
push
ret
lahf
fdivrs
push
lret
cli
sub
cmp
fs
pop
test
cmpsl
pop
xor
and
or
sub
mov
stc
insl
jmp
sub
arpl
inc
sub
lahf
cs
daa
stc
data16
dec
hlt
cmp
pop
stos
mov
fwait
jb
jge
nop
sbb
cmp
cli
xchg
xor
dec
iret
sub
out
daa
sub
xor
je
pop
ja
lea
cmpsl
inc
fdivrs
rcrl
inc
pop
popa
mull
mov
mov
fcompl
xchg
push
outsl
lods
dec
ja
rolb
dec
mov
aas
rcrb
dec
shr
jl
and
mov
cli
shl
sbb
and
mov
inc
or
xchg
xchg
dec
jnp
enter
pop
xchg
fdivl
cmp
pop
cs
sti
shl
inc
mov
jae
xchg
adc
insl
in
imul
in
pop
pop
in
pushf
xor
push
aaa
ss
outsl
and
mov
cmp
sbb
pop
cwtl
jmp
sbb
lods
sub
sub
jp
push
dec
cmp
outsb
push
clc
scas
inc
xchg
xor
nop
mov
sbb
das
jecxz
decb
stos
rol
int3
adc
mov
adc
fisubrl
xchg
dec
iret
orl
aam
and
in
sbb
and
mov
in
in
push
outsb
imul
add
dec
iret
pop
movsl
inc
lcall
dec
lds
in
or
mov
mov
movsb
push
adc
ror
pusha
sbb
xor
mov
pop
xchg
sti
pop
in
dec
xor
sbb
pop
jecxz
or
push
mov
fs
addl
push
sahf
xchg
js
repnz
fs
mov
out
pop
cltd
and
icebp
lods
or
dec
cmc
std
push
jbe
sub
jbe
in
je
stc
mov
orl
add
pushf
or
loop
repz
aad
fs
jecxz
sahf
xchg
or
add
cmpsb
jno
mov
jne
dec
jecxz
mov
lahf
imul
pop
add
mov
mov
ja
lods
xor
sahf
fisttpll
cmc
and
pop
loopne
pop
aam
push
repnz
lods
inc
jl
push
or
icebp
push
addr16
mov
mov
xor
or
pop
sub
sti
add
lds
sti
pop
jae
rcl
fxch
rorb
es
sub
push
cmpsl
inc
into
les
cmc
add
xor
pop
cmp
jge
shlb
xor
les
pop
push
repnz
repnz
cmp
es
pop
and
leave
jne
int
arpl
decb
push
dec
adc
cmp
int
ret
lods
int3
push
push
and
pop
out
and
fsub
cmpsl
addr16
out
mov
push
cmc
xchg
cmc
icebp
lret
lret
sti
or
ror
dec
stos
int
leave
xor
and
cli
lea
ficoml
push
and
outsl
imul
dec
cmc
pop
adc
lock
inc
inc
jae
sub
jbe
jmp
xchg
int
test
xlat
pop
cs
sub
and
test
imul
cmp
icebp
mov
jno
pop
or
sbb
pop
jb
mov
pop
mov
scas
jle
test
je
or
mov
cmp
dec
dec
cmp
mov
and
add
adc
movsb
int3
push
push
sbb
sub
mov
dec
cmp
pusha
xor
lret
xlat
push
dec
inc
test
add
aaa
jecxz
jnp
int3
mov
lock
jmp
es
mov
aaa
push
mov
xor
test
stos
xchg
mov
jge
mov
in
cmp
cmc
insl
lret
mov
das
adc
lods
mov
imul
add
add
xchg
sbb
cmpsb
sub
fwait
data16
sbb
inc
aad
mov
jg
inc
rol
test
ret
cli
mov
ds
in
shl
pop
sbb
popf
pop
mov
in
out
mov
xor
jp
xchg
and
stc
sbb
mov
adc
cltd
mov
aam
mov
xchg
popa
aad
hlt
sbb
sti
mov
cmp
mov
fmuls
fsubs
mull
iret
cmpsl
stos
push
pop
in
xorl
jmp
int3
ret
lods
fnop
dec
test
cmp
fdivs
test
shrb
imul
push
loope
xor
lahf
sub
mov
aaa
popf
in
jo
xor
sarb
hlt
les
pop
out
scas
popa
or
xchg
outsb
cmp
xor
mull
push
shlb
aaa
dec
loope
or
call
mov
pop
les
pushf
hlt
scas
xchg
orl
push
mov
jo
mov
fisubs
xor
call
fmull
or
push
inc
xchg
xchg
sahf
mov
pushf
jg
mov
imul
jge
nop
mov
mov
fisttpl
dec
repz
insl
push
mov
jnp
ret
pop
insb
xchg
sub
push
inc
outsl
pop
add
pop
pop
stos
or
daa
call
add
sbb
mov
and
loope
dec
add
lcall
cmp
adc
mov
adc
inc
mov
xlat
mov
adc
subb
aam
sub
sbb
movsb
out
mov
rcr
clc
fiaddl
mov
xorl
loopne
cmp
or
ljmp
fmull
icebp
in
aad
push
in
aad
xchg
or
push
mov
stos
inc
rcrb
push
fs
jo
xor
push
cmp
popf
xor
xlat
cld
sbb
adc
pop
cli
adc
lcall
xor
cmpsl
outsb
or
fldenv
sub
insb
mov
sbb
iret
pop
push
lds
ret
cwtl
shr
test
sbb
aaa
mov
loope
sub
add
mov
dec
inc
mov
mov
mov
jle
push
cmp
mov
xor
xchg
stos
lret
and
fs
popa
es
xchg
mov
push
mov
jecxz
cmp
mov
mov
outsb
fbld
jno
cmp
popf
ds
ss
rorb
fsubrs
idivl
inc
rclb
in
adc
push
in
xor
js
push
pop
es
bound
fsts
pop
cmp
shlb
push
fdivr
loope
dec
inc
pop
sub
data16
xchg
push
sub
sub
xor
sbb
dec
cmp
mov
adc
bound
mov
dec
jle
shll
insb
les
lods
and
lea
jno
cmp
adc
push
adc
push
inc
in
adc
xor
push
sbb
out
pop
dec
jno
and
rcll
xchg
ret
out
movsb
or
mov
rolb
pushf
mov
xchg
dec
mov
or
cs
shl
sub
add
xchg
inc
and
js
movsl
outsl
loopne
ret
inc
mov
and
add
negb
push
jp
in
adc
jns
arpl
js
sbb
xor
dec
ljmp
add
adc
jle
js
sahf
sbb
xchg
cmpsb
pcmpgtd
out
bnd
mov
jecxz
pushf
xor
std
aam
loop
cmpsl
jmp
adc
cmp
adc
and
sbb
lods
mov
sub
push
enter
jmp
mov
rorl
enter
scas
fldt
loopne
pop
movsb
sub
out
sbb
xchg
jmp
inc
pop
xor
movsl
mov
dec
cld
outsb
js
fucomi
sbb
sub
ret
pop
xchg
or
in
lock
ret
mov
adc
pop
xchg
repz
jg
push
xchg
leave
hlt
lods
sbb
outsl
je
jo
push
jne
mov
sbb
leave
pop
push
cmpl
pop
stos
loopne
lret
pop
mov
ficomps
xchg
and
sbb
out
std
or
mov
inc
lods
lret
jno
sub
stos
in
arpl
jno
and
fwait
rcl
ret
js
cli
loopne
cmp
jbe
mov
dec
jne
cmp
push
inc
in
adc
push
cmc
mov
sub
jnp
jmp
dec
test
int
idivl
je
inc
pushf
test
sarl
mov
lods
adc
push
lods
sbb
sbb
shrl
pop
pop
add
dec
xchg
imull
out
mov
dec
sub
pop
push
and
je
call
push
fnstsw
sbb
and
sbb
jl
lahf
pop
lods
inc
mov
in
std
push
cli
pushf
add
inc
sbbl
das
sub
pusha
push
adc
mov
cmp
popf
xor
not
call
sub
aas
mov
insl
mov
aas
adc
lret
cwtl
or
pop
xchg
and
dec
mov
int
cmp
imul
lods
js
xchg
jle
lcall
pop
inc
or
xchg
lods
loopne
xchg
in
iret
pop
sahf
and
xor
movsl
xor
jg
cmp
cmc
xchg
sbb
lds
int
push
fs
test
inc
jecxz
mov
outsl
add
and
jg
push
iret
outsl
dec
add
jns
pop
jg
ret
lret
js
xchg
push
andb
push
cli
mov
hlt
add
sub
pop
je
pusha
addl
xor
enter
mov
inc
push
test
shll
mov
cmp
fstpl
js
and
adc
push
sti
cld
das
aas
lds
out
mov
andl
mov
dec
loope
sarl
or
insb
hlt
xchg
loope
and
outsl
sub
push
sub
mov
xor
pop
les
push
mov
jle
xor
mov
mov
jno
jp
sub
jne
pop
mov
fsubs
mov
movsb
aaa
sbb
cs
mov
xchg
outsb
jge
xchg
repz
sbb
inc
xchg
in
dec
popa
pushf
ljmp
das
fldt
into
inc
pop
out
in
push
call
push
add
leave
icebp
mov
sbb
inc
stos
daa
cwtl
jne
sbb
mov
push
call
dec
add
imul
and
sbbl
outsl
notb
cmp
pop
jp
mov
jge
pusha
dec
mov
dec
aad
pop
mov
bound
pop
pusha
add
inc
rclb
in
outsb
jb
push
pop
repnz
pop
jg
pop
cmp
nopl
out
and
xchg
aam
les
stc
leave
lahf
decb
lock
cmpb
addr16
jb
scas
fcom
sbb
je,pn
push
add
movsb
inc
in
dec
movsl
mov
ret
xor
cmp
shr
call
fildll
ljmp
enter
inc
inc
jg
test
lods
gs
sbb
out
pop
sbb
out
push
test
popf
dec
or
bound
mov
cmp
jno
push
test
test
hlt
push
jge
sarb
mov
push
jp
sbb
lcall
mov
je
std
fsqrt
jnp
pop
pop
cwtl
pop
in
jne
aas
insl
repnz
inc
rol
pop
jne
cmp
or
cli
jg
lds
daa
adc
es
movsb
mov
or
dec
cmp
and
movsl
pop
mov
push
pop
lods
cwtl
int3
lods
insb
loop
jmp
mov
inc
xchg
xchg
pop
sub
pusha
mov
aam
sarl
mov
in
popw
adc
sub
sahf
adc
mov
push
js
daa
sub
xchg
ljmp
in
cmp
fldl
lret
mov
bswap
mov
outsb
movsl
pop
pop
inc
or
movsl
mov
popa
xchg
mov
movsl
push
xor
lcall
aam
jno
hlt
pop
out
int3
sbb
lret
popa
mov
and
pop
fisubrl
cmp
mov
jbe
sti
addr16
ds
jg
push
stos
xor
mov
push
sub
push
les
cmp
cmp
lcall
fadds
jg
sbbb
inc
pop
sbb
je
or
shl
or
stc
mov
leave
sahf
sub
and
adc
test
sarl
fadds
popf
sbb
jecxz
fwait
stc
xorb
sbb
lods
jne
ljmp
sbb
lret
add
push
or
das
arpl
add
or
test
mov
and
ljmp
jmp
fdivrl
sbb
dec
sbb
inc
sub
aaa
add
push
sub
mov
and
cmp
xchg
sarl
aas
leave
push
jmp
jo
sbb
ficoms
flds
mov
mov
xor
stos
pop
stc
mov
dec
cmp
bound
sub
movsb
adc
cs
les
add
jle
nop
cmp
pop
movsl
push
xor
or
mov
std
mov
test
xchg
fidivrs
adc
sti
fdivrp
cmpsb
xchg
jecxz
sbb
inc
jnp
push
dec
stc
lret
mov
repz
mov
cmpsl
and
stos
sahf
add
adc
outsb
test
push
xchg
push
inc
iret
daa
and
mov
xchg
pop
xchg
jle
sarl
cld
xchg
jg
xchg
ret
lcall
and
pop
test
jge
fidivl
dec
lret
or
cltd
inc
inc
xchg
jge
addl
inc
lahf
push
cmp
jg
jmp
stos
xchg
and
ret
inc
and
adc
lahf
xchg
subl
or
jl
cmp
mov
jp
mov
sbb
dec
fucomp
adc
mov
xor
sbb
mov
jne
and
mov
int3
icebp
lds
pushf
icebp
pop
push
sbb
in
xchg
or
or
incl
pop
dec
or
xchg
pop
or
add
ds
pop
in
mov
sbb
lahf
imul
jne
jo
das
pushf
ja
dec
push
movsb
xor
mov
jne
fdivrs
stc
ret
adc
jg
pop
cmp
ljmp
jg
sub
cmp
push
or
sahf
out
std
adc
stos
pop
xchg
mov
pop
inc
adc
es
arpl
fidivs
repnz
mov
jg
adc
lock
or
adc
cmc
pop
cmp
pop
dec
std
push
pop
or
xor
dec
xchg
sbb
jbe
dec
and
xchg
inc
mov
aaa
repnz
call
loope
pushf
sub
aas
push
stos
or
fs
out
push
hlt
test
pop
pop
mov
xchg
jmp
mov
xor
imul
xchg
dec
arpl
xor
lods
rcrb
mov
mov
mov
ret
adc
adc
shll
cli
jno
ja
lea
adc
lret
or
mov
inc
mov
and
sarb
sub
cmp
dec
int3
mov
sbb
loopne
fdivrs
and
shll
mov
jle
xchg
stc
cmp
xor
fistpl
lock
mov
adc
sti
aas
xchg
stc
add
adc
xchg
gs
push
in
push
insb
pop
add
loope
stc
outsl
push
xchg
inc
lret
jmp
sub
jns
jmp
std
sub
jae
cltd
incl
mov
pop
aas
sub
sbb
jo
insb
jle
movsl
dec
ret
pusha
ds
inc
sbb
addb
cli
les
jmp
sarl
adc
xchg
xchg
dec
daa
and
inc
rorb
cs
jge
mov
push
mov
arpl
inc
dec
sub
insl
pop
dec
mov
fcmovu
lods
push
insl
inc
adc
ret
xchg
jne
xchg
aas
jmp
cld
push
bound
into
insb
adc
loopne
mov
xor
push
rolb
pop
scas
stc
add
sub
or
sbb
xchg
mov
inc
or
inc
sbb
imul
ds
sbb
add
cmp
shlb
test
cmpsb
movsl
xor
sub
out
repnz
lock
shll
push
cmpb
test
loope
mov
xlat
inc
pusha
jp
loopne
mov
shl
jns
sbb
push
fwait
jbe
fsubp
xchg
mov
frstor
push
jp
inc
into
inc
or
stos
sahf
sub
or
jne
into
lret
cmp
movsl
out
fsub
insb
repnz
imull
jge
inc
xchg
fbld
sarl
ret
daa
pop
andb
scas
imul
or
push
jb
rcrb
sub
pop
in
lret
js
mov
and
sti
sbb
adc
inc
lcall
movsb
js
sub
sbb
ja
scas
ds
xchg
cmp
ljmp
sbb
cli
ss
jne
adc
pop
sub
mov
cmp
add
adc
fstp
push
das
mov
pop
es
pop
sub
data16
cmpsb
xor
mov
rclb
jo
movsb
xor
pop
arpl
fwait
xchg
outsl
movsl
mov
jns
int
lds
jmp
pusha
pop
std
ret
pop
jo
cld
mov
hlt
mov
pop
add
repnz
lcall
jl
loop
fsubrp
gs
mov
xor
sbb
clc
scas
adc
jle
lds
dec
ret
or
leave
aam
push
aam
enter
dec
lcall
sub
inc
mov
jge
inc
or
fmuls
dec
sahf
rcl
das
adc
push
jno
sub
jno
mov
mov
adc
and
shl
add
cli
cmp
mov
xor
and
ljmp
imul
loopne
sbb
sbb
lock
jecxz
lods
add
dec
aaa
dec
xor
mov
movsl
jecxz
jp
iret
mov
sbb
enter
nop
loopne
adc
adc
sbb
fdiv
adc
mov
aas
rcrl
jnp
ja
fwait
nop
decl
inc
insb
cmp
hlt
adc
stc
mov
jne
mov
jo
clc
imul
gs
arpl
cmp
hlt
dec
out
xlat
dec
xchg
dec
iret
out
xor
or
bound
sbb
adcl
cmp
pop
fwait
adc
lcall
add
cld
mov
lahf
lock
test
sbb
call
mov
ja
in
std
cs
mov
mov
aas
cmp
jmp
cwtl
pop
xor
cmp
ret
fcomps
add
lock
lds
test
add
repz
xchg
mov
jnp
testb
adc
std
aad
add
dec
repz
in
mov
imul
mov
lcall
ljmp
iret
inc
mov
and
push
insl
dec
aaa
jnp
outsb
mov
jo
lds
rcrb
mov
testl
push
adc
scas
out
ret
pop
rolb
hlt
dec
js
repz
sbb
lcall
lods
mov
jae
inc
mov
adc
cld
cld
leave
mov
pop
xor
stos
ss
push
popa
inc
sub
xor
aas
cmp
xchg
xchg
mov
cmp
mov
nop
dec
int
aaa
jae
dec
sbb
xchg
mov
shrl
inc
mov
pop
pop
cmp
mov
mov
xor
into
xchg
mov
mov
not
mov
jns
xchg
push
adc
test
sbb
push
rorl
push
xchg
jnp
xchg
fcmovb
adc
pop
jmp
cmpsb
or
jl
or
int
test
movsb
gs
and
pop
shl
leave
sti
out
add
push
xchg
cmc
cmpsb
ljmp
cmp
int3
outsl
ljmp
cmp
pop
cmpsl
dec
pop
aaa
fdivrp
clc
cmp
out
pop
enter
xchg
out
sbb
inc
mov
ja
mov
xor
in
das
pop
ljmp
lds
ljmp
cmp
xchg
xor
bound
inc
push
pop
dec
dec
subb
pop
jae
pop
mov
mov
loop
js
mov
mov
push
hlt
stc
mov
sub
inc
pop
lret
xchg
subb
sbb
adc
adc
push
insb
mov
sarb
xchg
inc
ret
shlb
jg
xchg
in
hlt
stos
leave
rorb
adc
imul
adc
stc
stos
fisubl
test
xor
pop
push
popa
and
add
adc
clc
mov
mull
dec
adc
cmp
xorl
orl
mov
sub
and
jbe
int
push
pop
dec
ret
xchg
out
fistl
xor
pop
or
sbb
cwtl
lahf
int
rclb
into
lret
out
xchg
test
mov
mov
mov
jmp
repnz
push
bound
std
scas
sti
movsl
loopne
cli
ja
inc
cmpsl
mov
fmul
dec
dec
dec
lret
stos
sub
movsl
jecxz
jnp
push
xlat
and
in
roll
cmp
mov
jle
bound
fdivr
lret
sbb
sbb
mov
cmpsl
sub
and
pop
loopne
sub
xchg
out
push
daa
mov
scas
lods
call
cltd
cmp
cmc
imul
scas
and
lret
out
add
dec
cmp
nop
movsl
sti
fiadds
popf
jge
insl
mov
add
mov
mov
jns
mov
int3
dec
imul
mov
xrelease
xor
fwait
or
aad
rorb
sub
push
sbb
mov
add
cmp
cmp
inc
jge
dec
push
js
xchg
jo
xchg
dec
ficoms
adc
sbb
sbbl
mov
inc
inc
mov
rcl
push
fcmovne
push
shll
pop
mov
setle
xchg
jbe,pt
cmp
ds
stos
test
xor
and
mov
mov
xchg
and
xor
add
pusha
sti
add
inc
cmpsb
fidivrl
cmp
addr16
cmpsl
popa
dec
iret
dec
xchg
sahf
xchg
sub
or
enter
mov
call
lea
mov
push
lock
mov
xchg
loopne
jge
jne
scas
pop
or
hlt
push
icebp
popf
add
add
cmp
mov
cld
xchg
xchg
scas
lcall
mov
sub
orb
int
pop
dec
adc
push
push
xchg
mov
addb
and
out
xor
fwait
in
cmp
xchg
xchg
outsb
xchg
setb
inc
imulb
mov
xor
jl
jecxz
mov
sub
cmp
sbb
push
and
dec
pusha
jle
and
mov
mov
sbb
jl
cmpsb
out
scas
push
scas
cltd
add
xor
sub
adc
mov
adc
std
test
xchg
sbb
sbb
fwait
and
jne
mov
testl
pop
aad
lahf
push
push
xchg
mov
pusha
das
stos
in
fcoml
sbbl
and
dec
xchg
out
sbb
arpl
test
es
push
pop
sahf
mov
imul
and
cmp
rcrb
or
rol
xor
pop
inc
faddl
shll
xor
mov
mov
xchg
mov
cmp
lea
ret
xchg
dec
popf
insb
xchg
dec
mov
arpl
shlb
cmc
ret
jle
add
setle
jns
jnp,pt
icebp
push
ret
push
loope
jl
push
fnop
and
fsubl
mov
fwait
inc
fwait
out
sbb
pop
or
aam
imul
xchg
xchg
shrl
mov
roll
cmp
nop
sub
jne
pop
xor
out
cmc
stos
sarl
mov
mov
or
in
popa
xchg
jmp
jecxz
call
cwtl
jnp
hlt
or
aam
test
cmp
adc
mov
les
xchg
lock
cmp
jne
push
mov
popf
adc
add
push
add
popa
addr16
or
mov
jecxz
out
xchg
xor
stos
in
int
adc
inc
stos
push
popl
push
clc
dec
jmp
leave
repnz
jno
xchg
mov
les
cwtl
loopne
or
push
addr16
scas
inc
out
shll
aad
push
pop
popf
dec
mov
clc
cmpsb
lahf
popf
loopne
in
inc
out
jnp
bnd
icebp
xchg
int
sub
cmp
rcr
dec
imul
push
mov
lds
add
test
sub
xchg
ss
push
cmp
push
pop
cmpsb
fimull
dec
cltd
mov
sbb
aam
dec
rolb
jno
push
insb
lret
rcll
xchg
pop
inc
inc
les
rclb
int3
mov
xchg
enter
jl
lds
lcall
adc
push
ja
scas
mov
xchg
faddl
sub
movsl
pop
jno
xchg
cmp
test
shrb
gs
cmpb
push
push
sbb
adc
mov
outsb
and
sbb
mov
xchg
rcrb
arpl
fnstsw
fucomp
pop
adc
and
ret
aaa
jg
das
cmpsl
aaa
cmp
aaa
icebp
add
negb
dec
mov
xor
mov
nop
dec
das
sub
xor
out
mov
jle
mov
adc
dec
and
jmp
jecxz
adc
or
inc
cmp
cmp
iret
sub
dec
stos
cs
cmp
pop
sar
inc
mov
clc
mov
push
mov
call
or
nop
dec
adc
mov
imull
std
outsb
inc
jne
or
pop
adc
push
xchg
daa
in
pop
adc
lods
inc
and
jb
mov
stos
xchg
loop
xor
sbb
lea
fcomps
adc
sbb
mov
int3
jns
aaa
fidivrs
iret
in
sbb
xchg
mov
shl
in
ljmp
push
or
icebp
adc
mulb
xchg
or
jnp
pop
sub
jb
lret
daa
ret
mov
mov
jle
and
push
outsb
lcall
push
dec
lret
fcomps
fistl
bound
pop
add
xchg
mov
jl
pop
mov
sarb
dec
std
mov
mov
arpl
xlat
lock
outsb
les
movsb
xor
adc
lods
test
mov
icebp
out
fwait
mov
movsl
dec
sub
stc
push
mov
jmp
xor
sti
push
sbb
call
repz
inc
dec
in
and
mov
cltd
in
mov
sbb
loopne
or
bound
ret
clc
ss
dec
movsb
add
movsl
fs
push
jnp
ds
push
es
xor
xchg
and
pop
push
lods
mov
xlat
xchg
pop
cmpsl
roll
add
xor
daa
mov
cld
int
cmpsl
lahf
js,pt
shlb
mov
fldl
or
push
push
insl
xchg
ljmp
stos
dec
ret
lret
dec
jbe
dec
fsubl
add
sub
mov
rcrl
or
mov
mov
cwtl
xchg
xchg
jmp
mov
xor
xchg
mov
call
or
mov
sbb
xchg
pop
mov
inc
and
lods
inc
mov
xchg
lock
xchg
popf
push
push
cli
add
jbe
push
aaa
cmp
shrl
sahf
add
ja
stos
scas
imul
rorb
xchg
in
push
adc
and
or
clc
lret
in
jb
arpl
sbb
outsb
cltd
pop
pop
push
rolb
mov
imul
dec
jo
cs
pop
lcall
xchg
ja
cmc
cmpsb
dec
pushf
adc
repnz
aam
xor
test
mov
adc
das
sbb
stos
ret
test
add
cmp
push
jne
adc
jp
xor
ret
das
add
sub
jnp
mov
xchg
lods
dec
inc
and
gs
sbb
add
rorl
mov
movsb
dec
jb
shl
aad
xchg
cmpsb
fs
add
mov
adc
in
jbe
rcl
bound
adc
cmc
fsubl
iret
inc
scas
sbb
xorl
sub
repz
dec
pop
sti
xchg
sub
push
aas
xlat
in
mov
xor
mov
loopne
jmp
test
in
out
sbb
add
int3
test
inc
adc
xchg
adc
movl
and
sub
and
mov
aam
aas
stc
leave
pop
ss
inc
xor
stc
sub
push
mov
jne
aad
jo
aad
test
pusha
stos
mov
fnstenv
inc
or
mov
jo
imul
cltd
cmp
ljmp
xlat
pop
flds
pop
out
dec
lock
dec
cld
rcrb
fimull
fnsave
into
jae
mov
mov
loope
test
pop
sub
movsl
loope
fcomip
fidivrs
add
mov
repz
shlb
jae
int
sub
enter
shll
fdecstp
or
sbb
mov
xlat
sub
fsubs
sub
jne
pop
lret
out
push
push
pop
or
jb
int
lock
mov
pop
push
sub
addr16
les
dec
shrl
hlt
test
lods
mov
dec
jae
sbb
fldenv
push
andb
pop
xchg
adc
test
xor
aad
out
and
lds
adc
inc
hlt
xor
adc
or
ret
loope
stos
xchg
pop
cmpsl
sub
push
in
jl
jecxz
pop
orb
popf
jns
push
push
push
test
sarb
jo
pop
mov
gs
jo
and
xchg
mov
push
mov
inc
xor
iret
xor
imul
gs
mov
imul
pop
mov
scas
fidivl
roll
inc
mov
xchg
xadd
inc
mov
imul
push
and
test
mov
fdivrs
cmc
aad
iret
jle
xchg
test
jb
cmp
dec
jg
adc
dec
and
cmp
fwait
call
lahf
cmpb
iret
cmp
xor
pushf
jb
movsl
dec
sub
jecxz
jle
mov
xor
xor
jge
inc
stos
imul
jnp
cld
lds
daa
insl
sub
pop
jecxz
fisttpl
cmpsl
mov
in
xchg
clc
jno
aam
lods
add
xor
cmp
sub
sbb
cmp
mov
fadds
xor
out
adc
or
fs
or
mov
mov
mov
aad
negb
test
lods
test
or
clc
push
adc
cmp
jns
out
xor
sbb
ds
dec
mov
mov
pop
xchg
repz
adc
into
loopne
jne
sarb
insl
cmp
adc
sbb
sbb
rcr
adc
jns
dec
or
call
popa
out
lds
std
push
inc
incl
outsl
lret
cmp
pop
mov
adc
lds
xchg
decb
loope
mov
sub
mov
add
iret
inc
not
mov
sti
imul
fwait
aad
shr
jecxz
or
add
imul
pop
pusha
jp
popa
push
pushf
lahf
xor
cmpsl
or
int
in
push
lock
dec
lcall
xor
or
adc
movsl
jmp
out
and
js
aas
push
sub
out
jo
ja
sbb
add
inc
xor
aas
lods
dec
data16
fdivr
and
mov
xchg
adc
or
mov
push
insb
and
ret
adc
rcrb
cmp
ds
cmp
mov
out
xor
enter
mov
sub
mov
jle
push
movsl
push
fwait
mov
data16
bound
cs
push
push
pop
fwait
or
pop
jbe
scas
in
mov
cli
sbb
pusha
xor
xor
adc
sub
xchg
push
out
popf
cmc
xor
subl
mov
pop
jnp
pop
aaa
xchg
aam
ds
pusha
push
cmp
push
mov
push
jb
sahf
cmp
fs
repnz
inc
insl
stc
fistps
divb
pop
add
mov
xchg
lods
dec
jb
xor
out
cmpsb
sub
test
bound
jle
add
and
in
hlt
lods
lock
fldenv
or
pop
cwtl
jb
sub
dec
xchg
scas
dec
mov
dec
loopne
pop
mov
sahf
cmpl
cld
js
mov
lods
dec
mov
fwait
mov
mov
rcl
int3
out
gs
aaa
dec
adc
jo
jno
dec
lods
dec
cmpsl
push
adc
iret
add
lods
push
mov
pop
stos
sarl
dec
or
jno
mov
mov
stos
pushf
mov
xchg
testb
push
out
cli
cmc
jle
adc
cli
sbb
inc
lock
mov
es
xor
push
scas
cltd
pop
ss
mov
in
or
mov
xor
pop
dec
or
fnstenv
and
lret
insb
jbe
js
mov
idivl
and
jg
cmp
xchg
std
mov
dec
cmpsl
arpl
decb
outsl
stos
or
incl
ss
pop
call
popa
sbb
leave
or
xchg
dec
dec
mov
popf
pushf
adc
out
or
out
not
inc
shrl
enter
inc
pop
test
xchg
jl
cwtl
fcom
jo
adc
cmp
sbb
subb
jle
sbb
gs
pushf
popa
push
test
test
ret
jno
mov
fcoml
dec
shrb
pop
inc
in
out
cltd
insl
adc
fadds
jb
jecxz
pop
aaa
sti
cmp
push
mov
inc
cmc
shlb
hlt
jae
stc
pop
mov
xchg
push
jno
pop
leave
lret
sub
idivl
and
sub
dec
mov
pop
stc
xchg
inc
leave
mov
push
sub
mov
cmp
and
jecxz
loope
jecxz
jo
push
ss
adc
xchg
test
lcall
mov
xorb
add
add
lods
mov
jns
es
or
push
ljmp
sub
inc
cltd
in
sbb
inc
and
mov
aam
shll
dec
push
and
jg
adc
stos
mov
jp
mov
into
int
cltd
mov
fisttps
push
popf
xchg
or
sub
sti
xchg
jle
xchg
ss
shrb
inc
ret
jo
jmp
stos
repnz
xchg
add
repz
pop
stos
cmp
fstpl
sbb
ret
cwtl
jmp
clc
jno
orb
sarb
sub
xchg
dec
or
loop
cwtl
or
dec
jecxz
rclb
jae
popl
mov
jg
dec
pop
stc
mov
xchg
inc
add
xchg
lods
xchg
inc
imul
jo
aaa
mov
cltd
sti
sub
inc
cwtl
mov
in
pusha
add
mov
jl
sub
scas
inc
cmpsb
bound
in
shll
inc
movsb
inc
mov
xchg
lahf
popa
cltd
cmp
inc
or
xor
test
aad
add
out
das
lahf
fiadds
pusha
push
mov
xor
mov
mov
lret
mov
cmp
int3
sbb
pop
cmp
das
mov
mov
js
push
jbe
jnp
xor
imul
xchg
outsl
ret
mov
aad
and
sbb
xorb
ret
jp
inc
sbb
xchg
xchg
bound
push
int
mov
pop
dec
push
outsb
mov
stos
in
lea
imul
push
push
xlat
mov
scas
inc
dec
stc
imull
cmp
or
sbb
leave
jecxz
jmp
es
xor
ja
cmp
mov
scas
movsb
enter
js
xchg
imul
daa
jo
mov
push
lods
adc
cwtl
mov
cmove
pop
mov
mov
jl
add
pop
fnsave
lds
orl
bound
xor
movsl
push
std
ds
jno
sahf
xlat
xor
push
or
xchg
jl
cmp
adc
fdivs
cs
xchg
movaps
addb
mov
mov
inc
push
jecxz
cmpb
scas
cmp
cmp
arpl
shl
outsl
repnz
lods
mov
mov
fildl
lahf
push
push
idivb
int
mov
add
lcall
and
test
popl
or
fidivs
arpl
mov
or
imul
adc
push
repnz
hlt
cs
dec
jb
data16
fwait
test
outsl
adcb
mov
fstpl
inc
push
jns
js
mov
lahf
jnp
imul
in
jge
xor
mov
or
sub
jne
pop
leave
mov
repz
or
mov
ret
lret
icebp
cli
stos
xor
mov
pushf
jmp
in
fwait
jmp
call
out
incb
jp
sbb
pushf
test
mov
ret
mov
lea
shll
gs
add
bound
data16
jg
inc
mov
mov
dec
in
mov
nop
xor
iret
into
repz
ds
ret
xchg
lods
xchg
dec
test
xor
call
or
jge
cmp
add
adc
jb
xor
cmpsb
sub
mov
sub
insl
jnp
pusha
jg
mov
insl
cmp
xchg
in
test
cmp
inc
xchg
add
add
stos
mov
mov
sub
push
into
sub
gs
test
sahf
mov
inc
pop
stos
shll
aad
sti
cmpsb
cmp
and
aam
in
push
inc
imul
andb
pop
test
lock
int
jge
lahf
push
mov
and
in
gs
xchg
mov
call
sbb
rclb
fcmovnbe
imulb
flds
jns
xchg
and
lds
inc
xor
fimuls
hlt
cmp
ljmp
cmp
mov
loopne
dec
fstpt
mov
dec
pushf
cltd
sub
test
or
stos
push
rorb
loope
ds
jne
aam
sbb
dec
pop
xchg
sti
in
and
jecxz
cmp
sub
inc
mov
in
lea
faddl
jne
jae
scas
ja
jecxz,pt
jp
push
xor
inc
daa
outsl
repz
in
mov
xchg
dec
and
jle
or
rcll
je
dec
mov
mov
insl
arpl
dec
add
icebp
inc
mov
xor
jo
and
jg
xchg
scas
push
adc
popl
pop
gs
or
mov
push
push
sahf
enter
sbbb
add
stos
add
sub
cmp
and
out
data16
add
iret
fdivs
loope
or
test
jns
mov
imul
js
mov
scas
jmp
pop
cmp
testb
sbb
xor
push
dec
sub
mov
cmp
or
add
pop
pop
adc
cli
movsl
jmp
push
dec
dec
sub
sub
jb
call
shrb
in
inc
mov
stos
lea
jne
test
mov
pop
popa
cmp
fs
push
ja
sbb
and
mov
sub
sbb
hlt
pop
int3
std
loop
and
inc
push
sub
cmc
aaa
cltd
and
sar
mov
aas
in
test
xchg
sub
aam
mov
gs
sub
add
call
je
outsb
or
sarb
adc
xchg
das
push
imul
inc
or
popf
test
iret
xchg
cmp
jp
xor
jle
in
lret
mov
ds
imul
adc
repz
inc
cmp
outsb
dec
cld
mov
and
mov
pop
add
jmp
je
cwtl
stc
idivb
movsl
ret
scas
faddl
and
xchg
push
insl
in
cmp
fcoms
mov
fcomps
scas
test
outsb
inc
rep
pop
nop
mov
outsl
xor
push
lea
sbb
inc
xchg
xchg
mov
mov
push
mov
sub
pop
mov
add
and
fcmovnu
jl
sbb
push
js
out
inc
outsl
std
enter
ss
push
pop
inc
mov
adc
lret
incl
mov
jb
repz
pop
pushf
push
mov
shrl
out
loopne
sbb
rolb
push
ja
test
enter
pusha
xchg
and
push
int3
test
push
mov
xchg
sbb
in
xchg
push
pop
cs
mov
jne
and
xchg
in
imul
pop
fs
or
xchg
inc
std
imul
sbb
push
fwait
pusha
fucom
les
outsl
adc
sbbb
decb
xchg
mov
pop
fmull
int3
cmp
or
fwait
rorb
lret
mov
pop
std
jl
jg
mov
mov
sbb
mov
into
jle
int3
adc
mov
stos
inc
test
mov
pop
adcl
call
ss
cmp
pop
dec
adc
aam
ljmp
or
lea
enter
sub
imul
mov
mov
ja
outsb
loopne
out
xchg
cmp
or
push
mov
icebp
jp
loope
movsb
jb
push
mov
jne
inc
mov
jno
jmp
sub
insl
sub
repz
push
inc
call
sub
ljmp
xorb
or
xor
es
leave
dec
andb
add
lds
pop
imul
in
dec
jns
dec
jmp
xor
js
int3
cs
icebp
jae
mov
iret
cmpsl
fisttpll
dec
adcb
enter
jmp
clc
mov
push
jns
lds
test
stos
imul
sbb
add
push
jns
xchg
pop
ds
adc
mov
pusha
and
aas
fcoml
and
and
pop
or
inc
stc
and
gs
out
ss
mov
data16
sub
mulb
pushf
addr16
sbb
fidivs
repz
data16
push
push
xor
or
sub
cmp
jle
stos
cltd
pop
dec
jecxz
mov
push
push
call
nop
sarl
shlb
in
rolb
fimuls
clc
push
ljmp
push
loope
repz
mov
dec
shrb
xchg
cli
faddl
aad
das
jns
shrl
pop
cmp
cmp
or
leave
cltd
addr16
arpl
push
add
lods
inc
mov
ret
sahf
rolb
sbb
or
pop
cmp
outsb
inc
shl
sbb
cmc
and
repnz
xor
xchg
dec
inc
inc
cli
adc
cmp
test
std
cwtl
je
daa
sahf
fisttps
dec
sub
sbb
int3
inc
js
in
cmpsl
mov
movsb
and
cmp
mov
popf
roll
push
ja
fcom
dec
mov
dec
push
loop
inc
vpsubd
inc
mov
and
xchg
iret
jbe
lcall
mov
in
std
mov
in
jae
rcll
sub
jno
lock
out
call
lret
cs
test
inc
mov
lea
dec
jae
movsl
sbb
mov
sti
loopne
adc
inc
lret
push
aam
dec
push
jnp
and
mov
add
aaa
xor
lret
pop
push
pop
jl
inc
imul
std
fs
sbb
sbb
sub
aad
pop
in
sbb
push
jmp
and
push
ljmp
xor
sti
xchg
movl
lock
ss
dec
push
scas
mov
pop
mov
add
ror
ja
addr16
fimull
imulb
adc
jae
imul
or
inc
push
nop
cmpsb
cmp
mov
cwtl
les
push
enter
adc
dec
sub
mov
in
aas
aaa
inc
push
orb
out
ja
stos
xor
jg
fiadds
pop
dec
addr16
inc
mov
inc
stos
rorb
cmpsb
loopne
mov
inc
push
pop
xor
bound
mov
lcall
dec
sarl
mov
lahf
ljmp
fstpl
outsb
jl
pusha
jmp
gs
into
adc
mov
fistpll
mov
jne
shrb
and
iret
ds
and
or
mov
or
mov
mov
ficompl
lret
in
cmp
stos
in
gs
int3
adc
jle
pop
lcall
lret
mov
call
mov
insl
cmp
fs
sarl
andl
xchg
in
ret
stos
push
lcall
push
repnz
leave
adc
dec
fucomip
pusha
jecxz
dec
xor
sbb
push
and
ficoms
cltd
data16
push
push
out
fsts
dec
dec
out
mov
loop
xchg
js
cwtl
das
lret
push
or
pop
rcrb
mov
add
pop
ljmp
pusha
cmp
dec
shll
add
cmp
inc
repnz
bound
movsb
sti
test
stos
scas
mov
test
mov
cmp
les
mov
cmp
adcl
or
add
cmpsl
mov
pop
fdivrs
xor
fidivl
jecxz
or
ljmp
cmc
jbe
aam
js
push
xchg
xchg
and
cs
xlat
lods
push
out
jge
cmp
pop
fimull
sahf
pop
dec
push
mov
es
xchg
cmpsl
data16
mov
mov
dec
imul
pusha
fs
repnz
jb
inc
pop
cwtl
ja
imul
pop
shl
push
out
addb
add
imulb
dec
inc
add
pop
fdivr
sti
movsl
int
andb
leave
test
sti
adc
cld
xor
orb
cmp
pop
jmp
lea
int
cmp
push
ljmp
out
pop
mov
jg
aaa
jecxz
rcrb
xor
pop
dec
cli
loopne
fisttpl
mov
xchg
or
scas
jne
pop
mov
sub
mov
mov
and
sbb
push
addl
pop
jno
jae
sub
cmpsb
enter
outsl
fdivl
add
imul
xchg
hlt
xor
inc
mov
pop
inc
cmp
fdivr
int
out
jne
sbb
sbb
push
aam
push
mov
jns
adc
xchg
shlb
std
roll
add
xchg
js
pop
pusha
addr16
movd
lods
push
fsubl
lret
gs
shl
test
mov
or
mov
sti
rol
pop
stos
sub
and
ret
add
jg
inc
test
stc
clc
sarb
popa
icebp
scas
push
inc
lods
aaa
iret
in
push
sub
jns
adc
push
fidivl
inc
cltd
ss
jmp
and
inc
xchg
rorl
test
mov
jnp
mov
xchg
jecxz
lods
out
xchg
popl
test
mov
in
call
push
mov
cs
pop
cmp
jne
xchg
int
mov
stos
add
push
pop
adcb
ret
lock
inc
inc
mov
in
push
mov
dec
mov
hlt
cmp
daa
faddl
lret
jnp
lock
push
jp
es
ds
adc
in
outsl
cmp
lret
imul
jl
sub
jecxz
dec
xchg
stos
clc
popa
out
jno
pusha
aam
pop
pop
in
dec
xchg
lods
movsl
arpl
sbb
pusha
pop
cmpsb
mov
pop
popf
xchg
sbb
out
push
mull
sbb
or
push
das
adc
mov
cmp
push
or
decb
adc
add
test
push
xchg
mov
add
mov
push
mov
fldl
jns
sbb
mov
leave
mov
xor
push
insb
lcall
std
push
adc
dec
add
ret
push
dec
subb
sti
lcall
sbbb
xchg
mov
stos
pusha
jno
add
repnz
and
xor
xor
xchg
insb
sbb
inc
push
cmc
fwait
and
jb
cs
mov
cmp
cmpsl
and
icebp
inc
lock
add
addl
pop
xchg
add
jne
or
cld
aam
and
lock
push
and
cmp
dec
or
mov
data16
xchg
test
enter
push
shl
fsubrs
adc
jb
mov
sub
or
jne
dec
rcrl
or
add
fdivp
out
mov
dec
loop
hlt
pop
inc
ljmp
in
jb
ret
inc
mov
or
jb
xchg
or
in
or
add
fsts
adc
divl
jmp
cmc
hlt
jmp
icebp
jne
mov
pop
pop
iret
mov
lahf
xchg
dec
mov
flds
ret
cmpb
cmpsl
mov
adc
dec
and
insl
inc
fsubr
movsl
scas
andb
push
sti
pop
test
stc
in
push
xchg
dec
xor
int3
fldt
inc
movq
aas
jne
pop
shl
loopne
mov
dec
shll
sub
out
scas
bound
loop
sub
iret
sbb
cmc
xchg
je
lahf
lret
pop
lret
cwtl
sub
adc
shll
in
bound
mov
stc
leave
mov
mov
jns
fwait
loope
pop
pop
jnp
mov
mov
fucomip
in
in
lods
daa
add
dec
sub
enter
es
dec
mov
sub
test
xchg
pop
mov
insl
xchg
loopne
mov
jl
mov
xchg
lods
adc
inc
cmpsl
ds
add
out
stos
scas
inc
mov
cmp
dec
cld
mov
pop
mov
mov
shll
jo
pop
movsl
popf
nop
and
fs
pop
fidivrs
outsl
lods
shll
out
mov
adc
inc
sbb
cwtl
int3
dec
daa
lea
jns
rcrb
rclb
fwait
mov
aaa
andb
push
int3
push
sbb
pop
cmp
cmp
pop
push
fucom
mov
dec
mov
fdivs
call
out
fcmovnbe
fisubl
mov
hlt
subb
ss
add
jmp
dec
jns
pop
mov
pop
mov
adc
stos
repz
sbb
or
mov
ja
mov
fstpl
fyl2xp1
fstl
cmp
incb
jecxz
aam
orl
cmpsl
xlat
cwtl
xor
enter
mov
mov
insl
sub
xor
fisttpl
cltd
pop
add
cmp
jl
pop
dec
inc
out
shlb
aas
sub
das
sbb
aad
clc
test
js
pop
in
mov
testl
jne
fsubr
cmc
pop
mov
push
mov
pop
stc
add
xchg
notb
adc
ss
xlat
jae
lds
test
mov
dec
clc
mov
mov
sub
sub
xchg
mov
add
pop
sub
cltd
iret
enter
mov
mov
stos
adc
jae
daa
mov
sbb
fimull
mov
jmp
clc
loopne
sbb
xorb
push
scas
jmp
or
ds
cmpl
test
jmp
push
jne
adc
mov
fidivrs
adc
push
je
jo
and
fsubrl
dec
in
lock
cs
lahf
dec
gs
in
jecxz
sahf
mov
jne,pt
xchg
mov
bound
data16
lahf
and
cmp
lods
insl
repnz
scas
fwait
inc
int
test
aam
adc
cmp
in
leave
adc
pop
pop
pop
mov
ret
shll
xor
cmp
mov
fincstp
xor
mov
mov
mov
iret
imul
lahf
inc
cmpsl
cld
ja
sub
push
outsb
mov
es
in
and
clc
cltd
leave
inc
stos
and
push
dec
xor
sub
addr16
xchg
int3
gs
cltd
imul
test
stc
fadds
mov
xor
icebp
imul
ljmp
out
push
repnz
test
push
mov
xchg
dec
sub
inc
rorb
repz
stos
sbbb
xchg
fcom
subl
es
cld
add
sub
insl
mov
pop
lods
xchg
pop
arpl
pop
in
dec
test
mov
jecxz
dec
pop
inc
out
sarb
mov
dec
lds
xchg
mov
push
inc
lock
out
sub
pop
fdivl
enter
test
inc
mov
sbb
jl
add
aaa
jge
cmp
int
add
jle
and
sbb
movsb
and
pusha
cmp
mov
sti
fistpll
addl
jl
icebp
ret
jo
adcb
leave
stos
pop
pop
out
negl
aas
inc
and
jb
les
aam
or
in
sbb
jg
clc
jbe
sub
js
sahf
adc
sub
scas
xchg
and
or
add
mov
and
xchg
mov
xchg
into
dec
in
int
mov
push
out
sbb
aad
out
sbb
hlt
add
je
mov
push
rcrb
mov
inc
xchg
mov
mov
add
arpl
xchg
add
popa
cld
loop
fwait
pushf
cmc
xor
ficompl
gs
jo
mov
aam
push
xor
add
sub
mov
repz
jnp
xor
lods
sub
push
leave
inc
push
fdivrl
xchg
imul
mov
pop
mov
scas
adc
dec
adc
movsb
ja
clc
pop
cs
xor
into
movsl
mov
sbb
rorb
push
repz
push
and
scas
sbb
cmc
mov
jl
popf
dec
into
enter
shrb
fsub
jmp
fisttpl
xor
fcompl
sbb
pop
stos
xchg
sarl
and
ja
in
ds
test
xchg
std
int
fsubs
mov
fistpl
or
mov
dec
and
pop
push
pop
insl
test
sbb
lahf
ffreep
lret
inc
mov
das
pop
dec
mov
cld
mov
pop
xchg
sub
and
insl
sub
add
mov
inc
movsb
mov
enter
jno
and
adcl
int
push
out
mov
adc
test
jno
or
lret
pop
dec
test
addb
movsl
test
or
es
sbb
adc
push
test
jge
std
mov
loopne
jecxz
shr
sbbb
pop
pop
popf
enter
mov
enter
and
dec
xchg
adc
mov
mov
gs
inc
nop
cltd
scas
mov
mov
sti
paddb
cmp
lea
fisttpll
pop
mov
cwtl
es
mov
mov
rep
in
dec
inc
aam
sbb
mov
lcall
cmpsl
mov
pusha
mov
mov
fwait
ss
jno
lods
out
icebp
ss
jo
sub
pop
inc
add
jne
sbb
jmp
ja
xchg
daa
mov
push
xor
or
pop
loopne
leave
lcall
jno
pop
shrl
or
sub
pop
hlt
pop
in
insl
xchg
cmpb
daa
loopne,pt
sbb
add
push
cs
sbb
fnstcw
stos
push
cltd
sub
shrl
imul
pop
mov
jb
and
mov
mov
lcall
ret
push
sbb
sahf
into
add
cmpsl
xchg
stos
and
adc
ss
leave
jnp
cmp
cmpsl
adc
sbb
das
cmp
and
cwtl
sti
and
push
mov
pop
pop
leave
ret
cltd
push
sub
movb
jae
in
dec
ret
mov
ds
or
add
mov
add
mov
or
pushf
xlat
dec
mov
insl
add
vcvttps2dq
pop
inc
adc
mov
push
or
movsb
sub
aas
push
push
pop
mov
pop
add
test
or
int3
les
call
rorb
cmp
into
dec
pop
xlat
or
push
jmp
mov
sbb
popa
hlt
negb
dec
pop
popa
or
adc
adc
sbbl
push
leave
and
dec
add
scas
daa
je
mov
loope
adc
pop
loopne
push
and
aad
pop
xchg
enter
testb
mov
push
mov
hlt
subb
mov
cmpsl
clc
or
test
sub
xor
pop
out
daa
rclb
out
inc
pslld
xchg
pop
mov
pop
fsubs
cmpb
jecxz
inc
adc
sub
movsl
addr16
pusha
in
hlt
repz
sar
adc
sbb
lcall
je
xor
cmp
jno
jb
outsb
sahf
mov
aad
and
daa
dec
push
push
sbbb
inc
mov
push
mov
pop
inc
and
and
mov
aas
scas
mov
xor
xor
test
lcall
jns
and
decl
cld
xor
es
mov
pop
dec
nop
adc
push
dec
lods
pop
xchg
lock
es
clc
clc
inc
xchg
movsl
fsubl
repz
mov
mulb
repnz
xchg
xchg
push
push
fptan
arpl
ja
push
addr16
outsb
mov
add
mov
in
xor
jmp
pushf
in
xor
gs
jbe
cmc
cmp
dec
sti
dec
inc
sub
dec
sub
push
add
inc
mov
fsubrl
sbb
mov
cmp
test
in
daa
out
movsb
es
mov
lods
outsl
popf
mov
notb
add
out
sbb
dec
jl
dec
dec
cli
fptan
sti
dec
xchg
adc
xchg
fwait
stc
add
push
jmp
jp
clc
or
jge
sub
jecxz
in
dec
push
fsub
inc
fstl
xor
ficoms
add
pslld
mov
cwtl
iret
cmp
sub
repz
mov
mov
xchg
testl
test
xor
dec
out
outsb
lea
inc
jnp
sub
xor
sar
arpl
pop
mov
lret
int
hlt
fidivrl
movsb
pop
push
aad
lret
jb
dec
push
xor
fimuls
divb
nop
xchg
loop
and
mov
addr16
pusha
or
pushf
mov
and
pop
add
mov
icebp
push
in
lock
jae
inc
push
ss
inc
xchg
adc
dec
jle
jg
ret
icebp
jp
add
mov
js
insl
addr16
dec
rorl
addr16
aam
mov
inc
mov
and
push
jmp
and
dec
lods
ja
out
lea
ja
add
mov
pop
push
mov
mov
sub
mov
xor
xor
pusha
pop
xchg
pushl
outsb
lock
jae
jge
mov
xchg
mov
mov
out
dec
sub
inc
in
dec
push
std
xchg
pop
sbb
iret
ret
sub
xchg
stos
cmp
incl
aaa
or
jle
fists
dec
lds
push
sti
inc
shl
jl
sbbb
jmp
and
lods
add
push
adc
mov
xor
jle
mov
ret
mov
cmp
jmp
test
jmp
and
jl
das
adc
xor
lret
sbb
or
mov
std
fidivs
pushf
inc
push
je
cmp
leave
mov
push
int
sub
pusha
arpl
push
rcl
add
repz
lcall
int
fnsetpm(287
push
clc
dec
lcall
or
cmp
add
hlt
push
adc
xor
fmulp
xlat
test
dec
sub
xchg
mov
sub
dec
adc
mov
divl
jbe
mov
jae
add
arpl
movb
rolb
adc
push
je
mov
or
sbb
leave
sahf
mov
lret
cmc
out
test
pop
orl
divl
stos
imul
xchg
outsl
dec
jl
push
xor
test
adc
pop
clc
stc
cmp
enter
cmp
xchg
and
xchg
mov
fmull
insl
push
mov
xlat
inc
mov
imull
lds
mov
mov
hlt
and
cmp
inc
mov
jb
xchg
je
jmp
aaa
test
xchg
stos
cmp
push
out
pop
gs
jno
fsubs
ljmp
outsb
in
inc
mov
sahf
sbb
sbb
arpl
sbb
add
pop
push
mov
pop
stc
fisttps
jbe,pn
std
ficomps
cmpsb
xchg
dec
adc
add
sub
jnp
adc
or
add
adc
xchg
cwtl
cmp
mov
lea
inc
icebp
filds
push
and
daa
shlb
jg
mov
inc
push
iret
mov
out
in
rorb
aam
mul
xchg
and
jp
jp
push
int3
sub
stos
cli
dec
mov
cmpsl
sbb
lret
cmp
adc
aam
jge
fcomip
stos
daa
mov
out
push
and
cmp
loope
add
jnp
cmpsb
inc
movsl
xchg
sarl
mov
and
mov
xor
fdivrl
cmp
inc
xchg
repnz
adc
pop
hlt
inc
pusha
mov
xchg
dec
sbbb
xchg
xor
xor
fwait
cmpsb
and
jbe
xor
testl
jp
or
sbb
inc
repnz
push
mov
hlt
ja,pn
jno
xchg
test
push
aaa
adc
add
fimull
xor
shl
fldl2e
push
mov
call
jge
call
adc
mov
xor
stos
ror
mov
push
jnp
mov
pushf
shr
push
xor
out
testl
cli
fdivrl
mov
out
xor
inc
mov
ss
stos
xchg
jl
insb
jns
sarl
lods
call
sbb
iret
xchg
push
cmpsl
pop
push
sub
cmp
loopne
push
lock
aam
mov
push
jno
sub
pop
dec
sub
xchg
fbld
inc
and
fdiv
paddb
xchg
inc
call
loope
add
insb
push
adc
cmp
jae
mov
jo
xchg
push
cmc
and
sub
push
pop
jge
js
adc
clc
jp
dec
push
mov
add
arpl
sub
std
push
inc
sub
push
in
or
rcrb
cltd
outsb
xor
dec
ret
cmp
aad
or
mov
add
fistpll
cmp
xorb
sub
int3
cmpsl
popa
and
fcmovb
fistpl
adcl
mov
imul
in
lret
in
clc
cmp
in
mov
sub
daa
push
cli
xchg
jno
in
mov
fidivrs
sbb
push
js
mov
stos
repz
dec
mov
mov
les
mov
hlt
test
sarb
fs
sbb
push
inc
hlt
or
pop
ret
in
xchg
xchg
dec
rol
adc
or
rolb
mov
inc
fadd
jbe
mov
cmp
outsl
inc
mov
ss
cmpb
xchg
pop
ret
push
xorl
fwait
test
xchg
xchg
iret
movsl
es
adc
add
xor
xchg
jge
jns
push
add
jnp
fmul
xor
lret
xor
inc
in
js
inc
fwait
loopne
sahf
dec
movsb
rcrb
jno
sbb
mov
testb
fdivrl
mul
jno
jns
in
and
imul
sarl
cwtl
loopne,pt
inc
frstor
test
aam
lahf
ret
aam
fnstsw
mov
jle
push
scas
js
mov
fmuls
sbb
add
je
jnp
ja
pop
cli
clc
and
and
jmp
xlat
aas
mov
ss
js
and
inc
push
lods
dec
gs
out
xchg
dec
imul
adc
cmc
sub
push
cltd
mov
sub
aad
cmp
lcall
jmp
and
iret
bound
clc
mov
sub
dec
add
insb
cld
jmp
std
mov
cmp
push
shll
sti
imul
fdivrl
in
addl
push
xchg
shrb
xchg
in
aaa
fnstcw
xchg
jbe
jnp
sub
push
into
rcll
jbe
iret
stc
sub
adcb
and
pop
mov
pop
mov
leave
in
pop
add
push
fldenv
gs
vpsubsw
loop
fcompl
outsb
cmpsl
std
psraw
mov
pop
ljmp
ljmp
sbb
xor
xchg
mov
cli
mov
rclb
push
mov
add
sub
aam
push
ret
rorb
cmp
or
imul
stos
into
inc
test
xchg
lds
fs
mov
ljmp
xchg
or
sahf
xchg
out
ret
xchg
pop
stos
push
sti
inc
unpcklps
mov
pop
pop
ret
mov
xchg
cmp
int
call
push
inc
stc
ljmp
test
fs
stos
push
or
xor
and
ficoml
in
xchg
or
pop
ja
or
cmp
pushf
push
sub
or
addr16
sarl
jg
lea
mov
in
call
mov
and
adc
adc
jl
aaa
faddp
andl
and
fidivl
gs
lods
stos
inc
repnz
imul
or
test
mov
mov
xchg
xchg
cmpsl
rcrb
or
sbbb
inc
scas
pop
cld
out
xor
push
test
ljmp
test
mov
jp
lret
cld
mov
int
orb
pop
jno
in
push
icebp
mov
mov
addb
pop
mov
dec
pop
shlb
push
insb
sbbl
jae
xchg
cld
mov
xchg
loopne
jecxz
je
movsb
rcrb
out
jp
sahf
inc
nop
subl
pop
dec
dec
ret
mov
sbb
inc
rol
xchg
xchg
into
inc
cmp
dec
js
in
cmp
insb
inc
sbb
test
js
sahf
test
movsl
inc
mov
add
push
xchg
jae
ljmp
icebp
cli
sub
sbb
out
cs
cs
fnsave
mov
jp
cltd
imul
lods
mov
movsl
faddl
out
cwtl
xchg
in
push
add
inc
fwait
push
cmove
xchg
sub
daa
xor
int
into
mov
push
push
aad
push
dec
outsb
push
dec
dec
in
and
je
out
out
or
inc
roll
in
sahf
repz
or
dec
mov
add
addr16
out
mov
pop
pop
jmp
xor
fldcw
es
dec
fdivrs
daa
push
push
add
outsl
sbb
jecxz
test
jge
push
adc
lods
ja
out
test
aam
hlt
cmp
lret
movsb
fiadds
clc
pop
ficompl
add
push
mov
lahf
push
fldcw
icebp
lcall
loopne
dec
add
push
sbb
std
xchg
arpl
or
mov
negb
push
add
push
cmpsl
dec
mov
imul
push
and
lods
push
sub
inc
push
rep
add
add
ret
stc
gs
sbb
xor
jno
cmp
stos
stc
sub
mov
cli
or
jecxz
dec
push
jmp
and
xor
adc
lahf
jle
mov
or
into
adc
lcall
in
or
mov
cmp
pop
inc
push
xor
push
test
push
imul
rcr
jno
sahf
enter
imul
test
xor
cmp
aam
add
dec
test
or
cmp
cmpps
and
cmp
fildll
popf
aad
add
sti
fldcw
cmp
pop
scas
lcall
mov
dec
sbb
out
lret
scas
mov
idivb
popf
push
add
xchg
rcrl
mov
sbb
inc
pop
or
and
mov
aad
fmulp
dec
pop
jae
xchg
dec
mov
mov
pop
fmul
pop
mov
sbb
mov
dec
push
sar
push
or
xor
jp
sbb
mov
jbe
lods
adc
js
loope
in
ss
push
cmpsb
mov
data16
mov
test
xchg
dec
inc
mov
in
call
xor
mov
ljmp
sbb
or
clc
adc
pop
aad
xchg
mov
sub
popf
test
in
mov
mov
cmp
loop
aaa
movsl
ret
push
mov
lods
jg
and
fwait
add
inc
mov
addr16
fs
fwait
inc
in
fnstsw
cwtl
mov
fs
inc
jb
jnp
sbb
fisubrs
sar
mov
inc
and
pop
rcr
imul
test
mov
or
shl
ficoml
cmp
addl
jge
jge
inc
ja
lret
push
inc
fwait
out
sahf
jnp
and
lcall
xor
xlat
and
sub
pop
mov
mov
push
inc
aaa
sub
or
push
sbb
add
mov
scas
push
push
pop
xchg
sub
out
push
adc
adc
pop
inc
jno
pop
clc
outsl
mov
jo
jecxz
pop
adc
cmpsl
push
insl
or
pop
push
ret
inc
repnz
push
mov
sub
pushf
push
icebp
mov
scas
lock
idiv
int
aad
add
gs
pop
sarb
leave
cmp
xchg
hlt
mov
mov
jg
mov
push
aas
dec
or
inc
pop
xchg
push
sahf
mov
pop
cli
pop
mov
push
gs
add
stos
cmpsb
sbb
push
adc
cmpsl
out
mov
sub
jecxz
jge
test
hlt
pop
cmp
adc
or
xchg
jg
mov
rol
stos
arpl
xlat
ret
gs
daa
push
adc
lock
add
movsl
mov
stos
cltd
shrb
add
lods
cmpl
bound
jecxz
xchg
imul
aam
addr16
xor
push
cmp
fldt
aaa
push
aam
ficoms
add
cmp
mov
pop
dec
jno
out
sbb
xor
inc
inc
imul
jmp
xchg
cltd
pop
das
xchg
pop
aam
xchg
sbb
fmuls
mov
add
in
cmp
dec
inc
adc
mov
mov
out
mov
sub
fdivrs
or
sbb
shl
jno
dec
gs
cli
and
mov
iret
adc
std
insl
sti
cmp
negl
cs
fidivrl
jp
or
test
xchg
testb
fwait
xchg
stos
inc
shrb
dec
loop
inc
mov
out
jle
test
leave
mov
repnz
popa
es
pop
push
xchg
push
or
inc
push
stc
scas
add
aaa
fnstcw
test
inc
cmp
int3
sbbl
pop
es
lret
lea
and
push
xor
dec
push
and
mov
and
enter
xchg
ds
aas
push
int3
and
pop
cwtl
xor
pop
fistpl
lcall
lea
xor
or
and
pop
dec
push
xlat
jns
dec
or
loope
out
leave
int3
je
fidivl
adc
loope
stc
insb
mov
sbbb
out
mov
ret
xchg
add
jmp
xchg
fwait
and
mov
stos
xor
push
mov
mov
es
cmp
sbb
adc
lods
cmc
lds
fstpt
jns
jns
mov
push
movsb
push
add
and
xchg
movsb
lods
cltd
pop
or
lea
mov
and
jb
sahf
cmp
mov
dec
mov
fdiv
jp
pop
fmuls
xchg
cmp
sti
in
pushf
xor
bnd
dec
sbb
dec
cmp
xor
hlt
cmp
xor
ficompl
push
cmp
push
clc
pop
sbb
or
push
add
test
add
jmp
cmc
test
mov
adc
test
adc
ljmp
cmp
or
push
jbe
movsl
out
outsb
cmp
dec
popf
dec
or
sbb
xchg
bswap
sahf
xor
addr16
cltd
add
jbe
inc
iret
iret
sbb
packuswb
imul
aam
jns
xor
lods
pusha
inc
mov
push
inc
scas
sub
xchg
insl
lds
cmp
xrelease
ficoms
push
ret
inc
adc
stos
cld
jae
pop
lea
mov
xor
xchg
inc
mov
daa
dec
and
add
fidivrs
ret
push
sbb
stos
and
cs
test
pushl
xchg
fisttpll
xchg
xchg
add
lea
clc
movsb
aad
clc
pop
and
pushl
in
push
in
data16
shrl
mov
jl
adc
enter
jo
push
add
pop
mov
lock
daa
jge
inc
fs
loopnew
xlat
pop
adc
or
add
jae
fidivl
leave
and
and
cmp
aam
fidivrl
stos
xchg
xor
xchg
pop
stc
cld
and
popa
fcompl
ror
les
lret
mov
leave
adc
lea
pop
mov
in
iret
dec
sbb
or
pop
cmp
xchg
xorl
clc
hlt
add
nop
fmull
int
xchg
jecxz
cmpsl
mov
mov
push
das
or
lret
lods
rorl
or
jp
and
jl
insl
mov
insl
dec
fdiv
jns
and
test
mov
fmull
mov
pop
xchg
lcall
adc
inc
pusha
gs
or
lcall
filds
fisttpll
inc
fsubs
out
xor
mov
imul
dec
jle
adc
dec
lock
sbb
mov
dec
sub
mov
dec
xor
into
inc
lret
bound
or
jp
mov
adc
les
out
mov
int3
sbb
out
enter
dec
push
aam
adc
cld
push
cmp
cwtl
cs
xor
jg
xchg
cmp
fst
and
adcb
fmul
xor
push
pop
aam
sub
call
shrb
dec
cld
mov
inc
mov
stos
cmpb
xchg
jl
adc
sti
insl
pop
mull
icebp
int
xchg
sbbb
in
jmp
mov
push
lea
push
sbb
sbb
cmc
pop
les
jno
sub
out
dec
xchg
lds
push
popa
push
push
in
inc
movsb
adc
data16
sbb
nop
pushf
pop
ja
arpl
iret
rol
fcoml
loopne
push
stos
in
push
push
gs
decl
jmp
call
push
imul
test
cltd
fdiv
aaa
decl
dec
push
pop
int3
and
sub
pop
lods
fcmovne
out
pop
fildl
popa
imul
cld
lds
aas
dec
dec
pop
or
sub
xchg
xchg
lcall
stos
add
negb
pop
adc
cmp
mov
ss
jne
jae
xlat
lods
popa
jne
in
notl
inc
cmp
sbb
cli
mov
add
jmp
cmp
enter
ljmp
stc
or
and
xor
movlps
sahf
fisubs
jmp
adc
into
fwait
adc
test
psubb
pusha
pop
mov
out
sbb
in
push
or
rorl
inc
call
aas
pop
out
xchg
stc
add
push
out
push
inc
mov
mov
sbb
cmp
insl
fistpll
cmp
shlb
orb
mov
mov
std
int3
sbb
lods
das
stos
enter
gs
out
cmp
mov
inc
icebp
push
pop
sar
lea
add
push
xchg
test
cmpsb
pusha
or
and
shlb
cmpsl
push
jbe
mov
cld
mov
inc
jo
out
sub
inc
dec
in
sub
shll
sbb
movsl
cmp
insb
xchg
jg
push
xchg
and
or
gs
jns
in
dec
sbb
ficomps
lcall
shr
xchg
popf
es
leave
and
mov
jne
subl
sti
arpl
jg
test
jmp
xor
jp
xchg
inc
sti
pop
mov
add
inc
fsubrp
cld
jnp
push
jp
mov
aam
or
in
roll
imul
inc
cmp
xchg
cmpsl
std
lods
sbb
mov
xchg
inc
sub
fidivrl
xor
ret
add
fwait
mov
push
test
mov
in
add
xchg
ror
lock
outsl
dec
add
jnp
into
jle
cltd
pop
mov
pop
inc
cmpsl
aas
movsl
fld
jbe
mov
cwtl
shl
into
psubb
add
cmp
aam
into
test
data16
lcall
jg
rolb
ja
fwait
int
and
scas
fistpll
jg,pt
mov
xchg
mov
dec
dec
mov
sub
mov
mov
bound
xchg
fnstenv
or
xor
sub
in
lock
inc
clc
sbb
cmpsl
sbb
push
pop
jns
mov
ds
add
mov
xchg
bound
aam
push
ds
aas
add
mov
inc
adc
gs
call
mov
mov
decb
cmp
pop
cli
into
xchg
sub
adcb
cwtl
ss
cmpsl
insl
dec
inc
sbb
or
mov
cmp
lods
pushf
dec
pop
cmp
pop
std
or
dec
mov
ret
enter
sbb
jecxz
inc
push
fisubrl
mov
test
lret
call
mov
adc
nop
dec
das
scas
push
nop
call
sti
add
cmpsl
jecxz
mov
or
mov
xor
out
daa
sahf
add
repnz
jns
xor
fbstp
sahf
arpl
mov
dec
movsl
pop
or
imul
push
out
jecxz
xor
jo
inc
adc
mov
push
xchg
insb
int3
mov
and
mov
clc
inc
aas
mov
hlt
std
dec
clc
das
dec
inc
vandps
mov
sub
mov
adc
and
mov
mull
xchg
stc
imul
in
cmc
lds
mov
rcrb
mov
mov
jmp
add
sbb
imul
test
jp
pop
loop
mov
lods
aaa
inc
xor
jbe
dec
subb
lods
out
imul
fsts
repz
popa
clc
je
cld
jmp
xchg
test
cli
jo
adc
in
mov
cs
mov
xor
mov
xchg
xchg
xchg
mov
add
pop
sti
push
xchg
mov
xchg
inc
or
pop
jns
cli
fiadds
scas
push
and
pop
fdivp
rorb
mov
ret
xor
scas
outsl
sbb
popf
xor
movsl
mov
je
xor
int3
pop
scas
push
mov
or
pop
js
lcall
out
jle
cmp
inc
out
inc
mov
inc
js
inc
sbb
aam
dec
aaa
push
mov
sub
enter
pusha
inc
and
xchg
leave
dec
add
and
subl
lea
ja
push
adc
mov
data16
imul
mov
xor
mull
mov
mov
rcll
ror
subb
fstp
movl
xchg
fdivs
call
inc
push
lret
cs
or
pop
gs
insw
mov
jmp
out
or
pop
inc
jbe
jl
push
in
loopne
sbb
sbb
sbb
pop
mov
xor
cmp
rcll
and
dec
add
sahf
push
fisubl
mov
push
addr16
jle
pop
sarl
enter
pop
inc
adc
inc
sbb
or
jns
das
lds
popf
outsl
enter
data16
mov
icebp
lahf
jne
sub
movsl
int3
jbe
cmp
mov
addr16
popf
sub
and
or
fidivrs
pop
and
scas
pushf
stos
push
sbb
aad
repnz
mov
sbb
lea
cwtl
pop
dec
pushw
and
icebp
sti
shlb
add
mov
adc
mov
jl
cs
jb
fs
outsb
dec
daa
sub
mov
cld
add
leave
or
addr16
bound
dec
cmp
sub
cs
push
push
xchg
pusha
mov
sahf
ret
std
ret
test
cmp
dec
icebp
es
movsb
popf
rcl
cmp
dec
mov
mov
ret
les
mov
cmp
mov
addr16
ja
xlat
shlb
or
cwtl
pop
xor
jecxz
movsl
ficoms
mov
sbb
cltd
adc
xor
jg
pop
lock
pop
pop
or
std
mov
or
lds
mov
je
ss
je
inc
or
pop
mov
jg
and
fdivrs
inc
dec
add
or
mov
mov
sub
or
xchg
dec
lods
dec
mov
cmp
fs
notb
movsl
add
out
push
push
adc
xchg
pop
outsl
ret
sbb
jnp
jnp
mov
inc
pop
push
pop
cmp
mov
lods
xchg
cmc
cwtl
test
push
cmc
pushf
push
sahf
inc
cwtl
pop
arpl
sarb
jae
and
in
mov
and
or
inc
jg
mov
imul
pop
lods
adc
mov
ret
mov
mov
data16
mov
pop
pop
mov
push
inc
fwait
cmp
cmp
sub
or
enter
enter
lret
ret
inc
cmp
aam
xchg
jg
aam
lret
adc
in
orb
dec
jne
cmp
xchg
movsb
loop
sbb
popa
fdivs
xor
jne
dec
icebp
xlat
push
dec
popa
mov
add
arpl
mov
push
negb
ja
pusha
mov
push
daa
sbb
mov
out
push
mov
les
ja
cmp
push
stc
push
pop
jae
fistps
cmp
addb
cwtl
mov
loop
lods
lock
hlt
push
or
inc
cmpsb
repz
stos
int
mov
dec
sbb
mov
ss
or
xor
out
adc
jnp
cs
mov
dec
and
rorl
cs
adcb
mov
pop
jns
jns
fsubl
and
bound
sub
or
shrl
and
xchg
addr16
arpl
jb
and
stos
jle
add
adc
sarb
cmp
add
loope
loopne
jle
xor
adc
mov
insb
popw
test
sbb
mov
imul
rorb
fwait
add
push
arpl
test
adc
and
sbb
loopne
sub
and
mov
mov
and
out
or
hlt
add
popa
add
mov
jg
fdivrl
mov
ds
sbb
sub
cmp
mov
push
cmc
es
sub
fisttps
pop
rcl
pop
rcr
shll
mov
xor
add
iret
daa
repz
ret
ret
xor
pusha
cmp
incl
or
cmp
inc
les
xor
lcall
vmread
into
imul
xor
nop
mov
add
sub
data16
testl
cmpsl
push
ja
push
jno
repnz
jns
dec
fstp
cmpsl
push
xor
mov
ja
mov
push
bound
or
mov
sub
cld
icebp
out
inc
mov
fnsave
sar
inc
iret
mov
sbb
pop
addb
jb
push
jge
push
dec
int3
cmc
icebp
sub
push
jns
xor
sti
jmp
cmp
add
jmp
dec
jl
orl
xchg
movsb
addr16
jp
pop
jns
out
jecxz
insl
push
add
iret
addl
inc
inc
in
lock
mov
nop
mov
xchg
cld
nop
in
addr16
sub
push
mov
ret
sub
pop
movsl
mov
pop
movsb
scas
sbbb
and
and
sub
mov
add
movsb
adc
sti
add
dec
in
mov
sti
mov
nop
push
mov
pop
jns
adc
sti
xchg
enter
jmp
xor
mov
inc
mov
inc
fnsave
push
pusha
sbb
inc
sub
and
out
sub
add
es
test
lahf
int
and
cmp
add
enter
aaa
mov
gs
mov
mov
mov
outsl
xchg
out
mov
out
xchg
mov
outsb
xor
push
and
jge
sub
xchg
pop
mov
mov
pusha
sbb
adc
int3
jmp
xorl
je
stc
jnp
into
insb
jbe
data16
decl
adc
and
pop
call
push
ret
pop
pop
mov
adc
sbb
mov
push
mov
pop
mov
or
and
jb
incl
das
fistps
mov
and
and
iret
pop
xchg
inc
xor
cmpsl
negl
pop
push
sbb
push
mov
and
shlb
arpl
cmp
add
sub
aad
stc
and
loopne
cmp
mov
insb
dec
push
pop
xor
inc
into
leave
fstpl
nop
arpl
mov
js
inc
cwtl
mov
imul
sub
test
xor
xchg
add
in
sub
ds
jae
xor
pop
push
hlt
gs
add
cmp
dec
hlt
out
cmp
sbb
sbb
cld
das
test
jmp
push
mov
das
cmp
lcall
out
xor
jns
test
dec
stc
dec
ja
in
xchg
loopne
ja
jle
jbe
inc
cmc
jbe
push
clc
mov
xchg
xlat
enter
cmp
loope
jnp
popa
xchg
loope
cmp
push
imul
test
or
jge
lea
cmc
mov
mov
int3
dec
xor
outsb
jo
call
or
xchg
fsts
lock
or
pop
sbb
stc
sub
daa
add
icebp
sbb
push
in
cmovb
cmpsb
lds
test
bound
adc
push
jnp
test
pop
and
imul
xlat
or
jnp
mov
in
add
cmpsb
and
xchg
ss
fiadds
icebp
or
mov
ljmp
mov
out
xchg
xchg
xchg
divb
data16
jle
imul
add
lcall
gs
sbb
push
xchg
icebp
pop
cmp
mov
aaa
or
or
fildll
insl
jmp
jnp
loopne
mov
pop
jle
loope
jb
inc
dec
mov
popf
sbb
pop
fnstenv
loopne
add
push
jl
in
imul
mov
ret
jmp
loop
jmp
lea
push
dec
pop
jl
cmpsb
pop
dec
or
push
loopne
mov
fdivs
cs
cmp
mov
xchg
jmp
cmc
jmp
mov
sub
aas
mov
cmpsb
in
aaa
adc
insb
popf
inc
push
sbb
jnp
mov
xchg
leave
rcrb
stos
clc
cmp
test
fnsave
add
xchg
stos
pop
xchg
fidivrs
push
rclb
adc
sarb
divb
xchg
adc
call
lds
sbb
pop
cmpsl
aaa
jne
add
sub
add
or
and
addr16
mov
add
xchg
leave
pusha
mov
shll
xchg
mov
sub
insl
mov
and
popf
sub
push
mov
cmp
hlt
jb
xchg
mov
and
xor
dec
int3
rcrl
and
sub
repz
sub
sbb
cmp
push
cli
fnstcw
cmpsb
daa
pop
xlat
inc
push
subl
ja
cs
sbb
dec
pop
or
or
jnp
xchg
pop
xor
in
sti
lret
cmp
hlt
sbb
adcb
les
add
jo
push
mov
jecxz
fbld
cmp
insl
add
jbe
ja
inc
in
stos
outsb
mov
iret
sarl
loop
ret
mov
data16
fisttps
addr16
adc
popa
dec
dec
in
mov
inc
addr16
jno
shrb
clc
outsb
jmp
lahf
jg
insb
mov
lahf
xchg
sbb
loopne
sahf
or
push
jl
fdivrs
ror
or
mov
jge
lods
xlat
push
pop
enter
or
dec
sub
test
lea
push
inc
pop
call
mov
lods
xor
arpl
sub
dec
flds
mov
sub
sub
out
cmp
or
std
mov
mov
mov
add
inc
imul
aad
sbb
pusha
inc
arpl
mov
adc
mov
mov
push
cmp
push
or
dec
lahf
jb
lea
mov
and
xchg
outsb
fcomip
inc
enter
insl
iret
mov
aam
mov
icebp
mov
adc
ficoms
shr
testl
xor
leave
out
sbb
push
insl
negb
dec
adc
pop
fildl
outsl
ret
loopne
popa
and
cmp
sub
sub
mov
jmp
popf
cmpsl
mov
inc
mov
cmpsl
pop
or
and
out
sarl
and
aam
push
mov
adc
sub
test
mov
mov
pop
out
out
and
sub
cld
inc
test
mov
adc
mov
jmp
std
aad
in
inc
pop
out
lret
jecxz
shll
mov
mov
sub
push
movsb
ss
call
and
push
jp
jge
sbbl
and
mov
test
xor
in
dec
mov
add
scas
adc
pop
xlat
jae
inc
jno
mov
inc
or
movl
imul
jmp
sarb
inc
cmp
cmpsl
adc
fsubrp
sub
lcall
and
and
mov
cltd
mov
dec
or
add
repz
mov
sbb
and
mov
xchg
mov
sub
movsl
inc
es
sub
in
xchg
scas
clc
rorl
sti
pop
aam
jns
les
scas
xchg
mov
stos
inc
mov
repnz
sub
push
jl
fisubrs
insl
jp
cmc
out
icebp
rcll
dec
gs
mov
and
add
pushf
or
decl
rclb
test
mov
insl
dec
mov
out
add
xor
dec
and
push
inc
fwait
pop
lock
inc
push
aaa
sahf
push
mov
pop
lret
jno
cmp
fstpt
mov
ljmp
xor
addl
cmp
stos
es
lods
loopne
and
cmpsl
pop
popf
insb
fdivl
inc
icebp
sbb
daa
sub
ret
xor
mov
divb
outsb
mov
sub
mov
imul
arpl
xor
stc
popf
mov
out
pop
shlb
add
test
and
adc
mov
cmpsl
imul
mov
fs
jne
mov
or
and
in
sub
pop
in
js
mov
mov
or
push
ror
mov
jne
mov
jno
mov
mov
cpuid
outsl
push
dec
add
andl
sub
addr16
les
add
sub
hlt
mov
fcmovu
xchg
lock
sub
pop
cwtl
push
cmpsb
adcl
test
enter
push
pusha
shll
cli
cmp
mov
iret
test
pop
cwtl
dec
scas
push
repnz
lret
xor
xor
adc
sub
movsb
pop
out
mov
jl
jae
mov
in
jne
or
lret
jbe
in
movsl
rol
pop
test
cltd
xchg
push
adc
ljmp
adc
and
enter
sahf
test
mov
stos
ds
or
and
dec
cmp
hlt
xor
dec
jae
imul
mov
jnp
adc
mov
jns
sahf
iret
add
out
xchg
sbb
push
in
inc
les
jg
test
shll
xor
test
je
ljmp
fs
and
xchg
or
push
jmp
sub
sub
xorb
inc
jbe
pop
enter
cmp
push
in
imul
call
push
cli
outsl
jmp
loope
lea
jns
insb
dec
mov
repz
jo
xor
xor
lahf
sahf
loope
fbld
daa
repz
inc
int
add
mov
mov
adc
inc
mov
xchg
jp
or
test
mov
add
test
aas
adc
add
mov
fidivrl
lods
sbb
or
movsb
add
fldl
mov
and
lret
rcr
pop
call
in
push
popf
add
pusha
mov
and
inc
fwait
or
pusha
xor
addb
lcall
out
push
aad
pop
push
mov
xchg
sbb
ror
sbb
insl
inc
aad
dec
sbb
fidivl
cmpsl
fsubl
lock
push
sub
lret
shll
mov
data16
cmp
and
nop
popf
adc
mov
loop
jge
leave
jecxz
test
iret
xor
gs
adc
mov
dec
enter
into
xor
mov
insb
hlt
jno
adc
push
jnp
mov
out
jno
sub
and
mov
enter
dec
cli
inc
and
mov
je
add
and
push
gs
sbb
jne
daa
adc
lock
push
aaa
sbb
pop
mov
push
and
rcll
adc
icebp
popf
mov
jo
cmp
cmpsb
addr16
arpl
sbb
dec
lret
aad
cmpl
cltd
jge
sub
ficoml
mov
xor
sub
mov
arpl
cmpsl
xor
adc
jl
pusha
shrb
mov
test
jnp
xchg
xor
dec
cmp
sti
inc
adc
lods
push
cmp
test
repnz
and
cmp
push
sub
shlb
lods
scas
sbb
int
addr16
and
adc
js
xor
adcl
mov
adc
stc
mov
xor
xor
ja
xchg
lret
mov
mov
sub
inc
lret
xchg
fwait
ljmp
dec
dec
lock
cmp
xchg
mov
push
sbb
jle
dec
jno
push
inc
mov
icebp
mov
mov
and
sub
cmpsb
xchg
xor
fisttpll
ret
scas
fwait
and
neg
mov
xchg
mov
sti
push
in
mov
jg
inc
pop
push
push
sbb
sub
cld
xor
xor
pop
leave
pop
test
jae
aaa
ror
lds
lods
jns,pn
insl
test
loope
pushl
testb
mov
in
jp
ret
bound
int3
imul
fmul
and
cwtl
mull
xchg
dec
xchg
mov
fmull
loopne
add
pop
lret
push
incb
push
add
dec
inc
adc
xchg
lock
adc
dec
or
jmp
mov
cmp
and
pop
imull
aaa
shll
in
repz
mov
imul
out
mov
cltd
out
in
in
and
mov
not
mov
movsb
xor
daa
fsubl
imul
fsubrs
jmp
sti
jbe
daa
stc
scas
lret
lret
in
ror
adc
fmull
minps
fcmovnbe
pop
mov
xchg
arpl
enter
add
lcall
xchg
out
loopne
xor
add
and
rcr
lret
sbb
jecxz
dec
testb
mov
jb
xchg
sbb
sub
mov
repnz
out
pop
mov
leave
mov
dec
mov
jecxz
mov
inc
notl
push
xchg
out
or
movsl
lahf
fisubs
pusha
xchg
fldl
sub
movsb
cmp
or
pop
mov
pop
das
mov
mov
stos
lea
dec
shlb
loopne
shll
cli
inc
in
scas
mov
adc
dec
pop
scas
mov
push
or
shll
push
sbb
mov
xchg
xor
in
jg
iret
pop
add
or
xor
push
pop
sbb
inc
fstps
fcomi
stos
push
push
ljmp
lods
das
xchg
mov
sub
stc
xchg
shlb
sahf
call
aas
stos
das
or
in
pop
mov
push
push
std
movb
sarb
repnz
pop
in
out
fnsave
inc
jns
sahf
clc
sub
xchg
sub
or
pop
jmp
test
leave
lods
imul
sub
and
or
fadds
andl
insl
xchg
sub
pop
mov
aam
jb
or
data16
fwait
push
and
rcl
add
sub
aaa
adc
xchg
dec
ret
test
and
mov
cmpsb
and
rorl
popa
xor
loop
xchg
lcall
in
rorb
inc
inc
xor
xchg
jo
jg
int3
out
inc
incl
stc
loope
out
lods
jno
lock
and
lcall
clc
pop
sub
decl
pop
rcr
mov
in
inc
in
inc
int
fldenv
mov
dec
pop
popa
adc
pop
loop
ss
push
scas
popa
imulb
pop
inc
fwait
mov
repnz
cmp
testb
push
das
fs
lret
sti
inc
cli
and
sbb
add
cs
lahf
sbb
xor
negl
xchg
jo
jmp
mov
cmpl
mov
idivb
mov
js
pop
add
shll
imul
leave
iret
xchg
or
icebp
fistps
cld
jbe
in
test
adc
jge
mov
jecxz
adc
and
pop
mov
sub
push
xor
popa
push
sub
aad
adc
push
mov
pcmpgtw
mov
lret
jo
shll
adc
cmp
mov
mov
mov
sarb
adc
cmc
ss
jns
loop
rcrb
mov
ret
es
push
pushl
push
testb
imul
icebp
or
lds
xlat
and
adc
lcall
fidivs
jecxz
leave
idivl
mov
mov
hlt
ror
sbb
adcb
rolb
inc
push
loope
jp
mov
or
or
and
test
sti
sbb
stos
std
shlb
rcr
push
sub
xchg
sarl
pusha
xchg
add
push
nop
roll
sbb
mov
test
pop
add
enter
mov
movsl
cmp
ret
push
ret
js
test
rorb
mov
jo
imul
insl
fbld
enter
pop
out
push
les
or
inc
sub
push
pusha
fs
cmp
adc
xor
aad
scas
fst
movsl
sbb
mov
or
fwait
dec
or
inc
mov
push
cmp
or
mov
repz
in
movsl
sti
aas
adc
aam
pop
ret
lds
push
jbe
and
gs
bound
xor
lret
jae
mov
cs
outsb
dec
jg
jge
xchg
fildll
stc
lds
cmp
je
add
aaa
out
daa
mov
aaa
gs
pop
push
sub
push
add
add
mov
ret
movsl
hlt
pusha
pop
shl
xor
fildl
aad
sub
sbb
mov
mov
jmp
dec
gs
cwtl
scas
mov
push
adc
jb
dec
dec
xorb
inc
loop
xchg
shr
add
inc
dec
cld
loope
mov
sbb
fwait
cmpsl
js
dec
pop
cld
jnp
pop
mov
out
ss
gs
inc
sbb
and
xor
negb
hlt
jp
mov
out
hlt
insb
cmpsb
repz
jne
insb
ds
lock
ja
dec
es
sbb
xchg
mov
lret
ljmp
mov
or
ja
adc
jnp
iret
stos
mov
pause
inc
jno
std
push
fldl
xchg
sti
jne
sub
sbb
and
jne
add
insb
cwtl
add
out
cltd
pushf
shlb
mov
gs
imul
cmp
adc
sub
data16
and
ror
cmpsb
push
mov
inc
mov
pusha
mov
movsl
mov
sbb
add
mov
lea
imul
xchg
sub
pop
in
fisttps
scas
stos
xor
shll
xchg
fs
mov
outsb
fisttps
pop
add
fidivs
push
andb
xlat
rcrb
and
ficompl
fs
mov
daa
fadd
push
push
subb
stos
imul
dec
pop
and
push
cli
insb
test
mov
mov
aam
xor
push
shll
or
jne
loop
jno
inc
mov
lea
or
fmull
lcall
push
cli
jmp
jne
jnp
hlt
mov
push
je
adc
rcrb
in
dec
push
cmpsb
and
lea
test
mov
in
lret
adc
ja
out
cmp
xor
or
pop
inc
adc
mov
add
add
iret
fistl
popa
sub
cli
bound
lcall
cmp
popf
mov
scas
ds
cmc
jns
push
mov
scas
mov
out
jo
das
stos
jne
mov
test
dec
int
pop
mov
cmpl
fnstsw
xchg
test
fiadds
adc
xor
sub
pop
mov
arpl
stc
pop
aaa
decl
push
cmp
clc
bound
shll
xor
mov
adc
decb
add
cmp
pop
jecxz
incl
xor
into
adc
daa
pop
mov
mov
popf
mov
inc
and
test
adc
mov
pop
cmpsb
cmp
push
enter
test
enter
lret
cmc
addl
scas
push
xchg
popf
xlat
push
adc
test
xchg
push
xor
movsb
adc
in
sub
xchg
jno
mov
mov
fdivp
pusha
psllq
test
add
cmp
cwtl
mov
and
stos
mov
fisttps
addr16
stos
push
inc
fsubr
sti
fildl
ja
stos
ss
inc
js
sub
ret
lock
cmp
push
inc
pop
mov
pop
movsl
jp
lcall
movb
mov
jge
aam
lret
in
bound
aad
std
push
lock
push
inc
fidivl
aam
mov
jns
mov
xchg
into
cwtl
dec
ret
test
shll
cs
je
std
call
nop
out
or
and
and
je
xor
xchg
mov
les
dec
adc
clc
aad
xchg
je
sbb
call
aas
inc
call
cmp
notb
jae
fldcw
hlt
cmp
cmc
test
push
jno
out
ss
out
test
pop
cmp
mov
das
sarl
lahf
icebp
and
ljmp
fildll
imul
fwait
pop
ds
sbbb
and
xor
dec
loope
arpl
add
mov
ss
xor
mov
add
fimuls
leave
and
cmpsb
xchg
adcl
mov
mov
inc
xor
fnstcw
rcl
mov
rcl
xrelease
inc
cmp
cmp
arpl
outsb
imul
insb
loop
mov
sbb
in
pop
dec
ss
jno
inc
repz
inc
nop
ret
or
repz
mov
or
mov
mov
add
cmp
bound
ja
xor
jp
ja
push
std
mov
sub
pop
cmp
xchg
sti
testl
mov
mov
sarb
mov
pop
cltd
sbb
adc
fstps
shlb
fstp
inc
push
cmp
fstpt
lds
dec
sbb
xchg
in
andl
adc
dec
fcomps
loopne
mov
imulb
out
filds
add
test
sub
cmpsb
inc
inc
adc
data16
dec
fs
inc
xor
jge
push
inc
cmp
in
jl
push
xchg
shl
je
push
push
add
adc
push
sub
sbb
sbb
dec
jo
jge
cld
jl
sub
daa
dec
aam
adc
insb
stc
loope
gs
adc
je
int3
mov
mov
push
popa
into
jmp
and
pop
pop
cli
xchg
inc
xor
out
fldt
dec
mov
xchg
imul
iret
ja
in
inc
and
adc
cmp
sbb
outsl
lds
jne
int
push
sub
repnz
mov
sub
es
push
lods
sub
aaa
test
xchg
push
test
push
jns
sti
xchg
enter
subb
rcll
int3
lods
jns
aaa
les
add
pop
xlat
movsl
sub
sub
jbe
xchg
loopne
mov
pop
stc
sbb
ret
out
dec
xor
fmuls
cmpsb
lods
stc
stc
mov
mov
sbb
cmp
ret
aam
mov
aaa
int3
das
insb
rorb
stos
shll
andb
test
sub
cmpsl
add
aaa
and
xor
test
jl
mov
repz
outsl
jne
ds
dec
fmuls
lock
test
pop
add
aaa
sar
lods
cwtl
dec
les
mov
jo
fisubrs
cld
push
mov
andl
sub
clc
mov
and
jo
inc
inc
or
arpl
mov
add
jne
mov
jns
jge
push
aaa
fmuls
outsb
pop
leave
mov
pop
ljmp
inc
push
jp
xchg
cmp
jo
xchg
xchg
rolb
je
xchg
in
sbb
xlat
add
clc
xchg
and
in
mov
xor
stos
sub
push
cli
ds
cli
es
jle
xor
push
cld
popa
mov
lds
gs
fwait
out
lahf
sub
mov
int3
sub
mov
inc
mov
jmp
loop
sub
sbb
into
cmp
sbb
test
xor
pop
gs
repz
push
shl
arpl
outsb
jmp
mov
ret
mov
ss
or
xor
adcl
mov
lds
dec
pop
stos
roll
xchg
sbb
pop
das
push
push
mov
aad
flds
ror
sub
inc
dec
pop
ja
out
mov
jp
fnstcw
jecxz
clc
push
mov
sahf
adc
popa
jmp
mov
sub
pop
inc
xor
push
dec
mov
mov
xlat
adc
insl
xor
repz
int3
jae
sahf
lock
into
sub
jnp
mov
in
add
mov
cld
adc
call
push
cs
mov
and
and
mov
fcom
jns
mov
pusha
xchg
push
mov
dec
xor
cmp
ja
mov
fwait
mov
push
ljmp
xchg
xchg
inc
sbb
jbe
xor
fcompl
nop
mov
pushf
cltd
mov
or
out
jmp
repz
push
mov
scas
insb
adc
fimull
je
mov
jne
push
cld
lods
mov
clc
ffree
cwtl
insb
fstps
test
mov
inc
movsl
add
cli
enter
xchg
inc
cs
jg
movsb
mov
rcr
jmp
and
jp
filds
out
outsl
mov
shlb
fs
lds
ds
jecxz
loope
fidivrs
scas
pusha
loopne
lods
xlat
ss
enter
or
mov
notl
jne
int
push
push
scas
dec
and
sub
sbb
push
dec
mov
xor
push
popf
rol
mov
jle
ja
inc
jae
js
lds
iret
pop
orl
pop
cltd
loopne
ljmp
stc
pop
jne
sbbl
fucomip
gs
std
outsb
push
or
add
inc
inc
cli
arpl
nop
sbbb
imulb
cli
sbb
xchg
xlat
scas
lcall
add
dec
and
scas
pmulhuw
jmp
jl
adc
lock
aaa
or
imul
dec
jmp
jl
mov
js
cli
sbb
ja
pop
lods
lock
mov
or
stos
mov
xchg
mov
lret
out
inc
jns
mov
jge
in
xchg
push
movsl
sub
lcall
sub
pop
loope
loopne
push
fs
mov
pop
inc
or
mov
iret
outsl
lods
mov
xor
mov
out
mov
lock
in
push
jno
iret
mov
or
xchg
stos
hlt
nop
andl
enter
mov
scas
push
dec
xor
shll
clc
push
jae
adc
fwait
in
scas
fdivs
cs
jmp
or
adc
lcall
inc
pop
ret
in
mov
mov
add
pusha
xlat
mov
je
daa
outsl
xchg
push
push
jg
fwait
jbe
xchg
addl
inc
mov
ds
pusha
cmp
mov
xchg
cmp
adc
lds
ljmp
mov
inc
cltd
fstpt
add
out
scas
jl
jo
cmpsb
je
pop
jmp
or
lahf
sub
mov
mov
pop
fneni(8087
or
add
and
fsubs
into
sbb
jno
cmp
push
dec
ret
push
dec
lahf
outsb
or
xor
andb
cmpsl
or
jge
mov
popa
or
sahf
ret
mov
cmp
xorl
lahf
jmp
cltd
mov
sub
inc
mull
mov
aad
jo
popa
push
or
not
shll
jbe
mov
and
jp
cmc
rclb
add
scas
mov
test
xchg
stc
lods
je
testb
adc
push
xchg
iretw
sbb
dec
not
fdivs
jae
inc
rol
sbb
xchg
out
sbb
or
in
clc
xchg
daa
add
out
sub
mov
push
shll
daa
inc
or
dec
out
mov
mov
cltd
inc
es
pop
outsb
pop
cmp
xor
inc
jmp
lea
xlat
lock
stos
mov
stos
inc
sub
sbb
stc
icebp
push
jnp
popa
mov
jne
jno
in
imul
mov
pop
cmp
push
jmp
mov
int
push
mov
shl
cld
and
xor
dec
pop
aam
repnz
ss
sub
lock
ljmp
clc
jge
sbb
stos
out
pop
int
xchg
adc
pop
or
in
pop
lcall
lret
lods
mov
int3
mov
je
cwtl
inc
push
fidivs
cmc
test
sbbl
scas
mov
xor
aad
xor
add
sub
push
add
movb
pop
pop
cmp
decl
cmp
pushf
push
jmp
dec
mov
sub
insl
mov
mov
not
push
jbe
xchg
outsl
and
mov
movsb
sbb
lds
ror
mov
repz
stc
shll
sbb
and
xor
fisubrl
inc
pusha
data16
sbb
add
xlat
or
loope
xchg
push
pop
pop
je
iret
lret
scas
xchg
mov
dec
jne
stc
sbb
jge
push
push
popf
fnsave
outsb
xorb
pop
mov
xor
mov
repnz
es
jb
xor
daa
and
ds
stos
or
lock
inc
sbbl
mov
adc
jmp
cmpl
cmc
and
aaa
icebp
btc
jmp
push
push
out
sbb
or
inc
and
in
mov
push
push
mov
fs
add
outsb
imul
or
repz
out
xchg
imul
mov
xchg
imul
pop
outsb
mov
and
add
push
stos
rorl
add
xchg
sbb
jb,pt
mov
int3
andl
xchg
cmpsb
sbb
xchg
adc
cmc
mov
stos
shll
push
push
dec
gs
inc
roll
jmp
ds
push
mov
in
leave
test
mov
push
popf
sub
mov
adc
unpckhps
imull
sub
push
je
aam
out
pushf
stc
loope
mov
int
dec
loop
add
push
sti
faddl
neg
iret
inc
mov
sbb
fstpl
hlt
xor
stos
loopne
jno
xchg
inc
shll
mov
fisubrl
arpl
jl
jmp
push
js
int3
addr16
call
and
dec
sahf
dec
and
jge
jmp
or
mov
test
outsb
jecxz
ds
xchg
fiaddl
jg
lret
pop
jecxz
add
incl
enter
lods
clc
andb
rorb
call
pop
nop
push
mov
shll
lock
xchg
pop
cs
jl
jnp
lret
in
outsb
sub
sub
cmp
es
dec
inc
jae
insb
sarb
test
cmp
cli
fwait
cmp
nop
fidivs
xchg
rorb
push
test
sar
push
cmp
jae
sbb
mov
inc
cli
jge
push
pop
and
jo
adc
mov
dec
jp
outsl
add
dec
loop
shrl
mov
dec
jbe
fcomps
mov
push
testb
jns
bound
mov
or
mov
rcl
and
rcrb
addl
cli
jae
fs
orl
ja
insb
and
call
stc
test
cs
mov
lock
mov
lret
pop
repz
cmc
cmp
insl
aam
outsl
imul
out
cwtl
adc
pmaddwd
mov
call
fs
jb
stos
mov
mov
and
lods
loop
or
pop
and
arpl
bound
xchg
push
int
dec
popf
mov
add
lcall
into
fwait
nop
jb
sbb
imul
jge
mov
or
pop
pop
fwait
push
filds
or
mov
imul
pop
enter
cwtl
out
mov
ret
das
push
ffreep
cmp
in
add
pop
jmp
in
lds
inc
rorb
xor
ja
cmpsl
mov
out
dec
in
adc
xchg
xor
aam
mov
or
cwtl
jb
pop
push
gs
mov
dec
scas
repnz
sarl
xlat
sub
iret
shrl
ja
aas
mov
push
add
in
mov
ljmp
xor
repz
and
inc
inc
popfw
cld
mull
iret
mov
pop
call
jne
dec
rolb
out
orb
cmp
xchg
sub
xor
jae
push
shll
mov
xchg
add
sbb
sahf
push
jl,pn
cli
xor
push
push
aas
cmp
in
lea
cmp
sub
dec
mov
sahf
jl
or
out
push
or
sub
jmp
add
push
jg
mov
aas
mov
pop
jno
filds
add
mov
test
xor
mov
mov
xchg
and
dec
test
inc
push
daa
arpl
mov
xchg
outsl
ja
push
xor
repz
push
ss
inc
aam
loopne
dec
std
mov
sbb
cmpsb
jae
pop
movl
push
call
imul
jnp
aaa
hlt
loopne
ss
fbstp
inc
adc
add
stos
dec
shlb
gs
aam
dec
fwait
data16
push
cmp
testb
push
jb
das
push
dec
adc
mov
add
xchg
and
pusha
xchg
loope
cld
adc
mov
ja
xchg
fstpl
out
popf
inc
icebp
dec
push
inc
mov
in
adc
jmp
and
inc
cmp
or
dec
mov
sub
cs
out
xlat
cltd
fiaddl
or
or
addb
inc
add
mov
daa
fxtract
add
hlt
mov
dec
enter
jb
jnp
stos
mov
add
mov
mov
inc
dec
jle
cs
jnp
arpl
or
push
fisttpll
mov
sbb
pop
repnz
fbstp
pop
cmpsb
stos
mov
dec
lds
and
sub
jbe
cmpsl
mov
mov
js
push
sbb
jmp
push
fwait
ret
jb
pop
adc
add
mov
jae
daa
sub
pop
pop
lea
out
dec
push
sbb
sbb
push
fxch
mov
jg
push
xor
dec
jmp
lret
mov
inc
mov
data16
cmp
test
add
pusha
jae
and
and
aas
adc
test
adc
xchg
and
ds
mov
stos
cltd
or
and
sub
roll
out
inc
xlat
sarb
inc
mov
insb
mov
xor
xor
fisttpl
cmp
dec
or
jae
insl
adcl
push
jmp
ja
enter
adc
pop
outsb
mov
dec
icebp
mov
out
inc
add
mov
mov
or
movsb
rcll
lds
test
loope
sub
cmpsl
cmp
rcll
mov
std
or
mov
push
pop
insb
jnp
pop
loop
lret
jno
pop
int
lds
stos
mov
and
xor
adcl
add
es
inc
lcall
mov
orb
ret
push
pop
dec
pop
jmp
movsl
popf
popf
inc
fldl
in
dec
pushf
jnp
sbb
ficomps
shll
xor
out
adc
mov
jl
lret
inc
pushf
or
mov
and
xorb
mov
jp
jno
leave
test
pop
and
enter
fdivl
leave
jae
in
push
xchg
push
ss
jmp
inc
test
mov
add
aad
push
popa
cmpsl
mov
test
divb
fucomip
xor
mov
dec
and
mov
jp
jecxz
mov
or
jne
xor
lret
inc
and
jl
mov
jnp
cmp
dec
test
sbb
enter
inc
adc
sbb
insl
and
out
jecxz
add
jnp
or
pop
inc
adc
xor
ret
insw
jg
data16
pop
add
arpl
adc
fstps
rorl
xlat
je
pop
push
addb
push
pop
idivl
jmp
loope
dec
loope,pt
in
sub
fdivrp
mov
je
mov
arpl
cmp
fucomp
dec
psrad
add
ja
scas
adc
or
jg
inc
adc
outsb
lods
xor
adc
repz
lock
add
jge
testb
ljmp
mov
mov
scas
mov
sub
push
mov
pushf
xchg
pop
pop
ret
nop
jnp
aam
fbld
lret
outsl
fs
inc
mov
cmp
test
ret
sbb
mov
add
push
sbb
xchg
mov
push
sbb
lock
les
add
scas
mov
mov
mov
mov
mov
fdivrl
dec
mov
cmp
rcr
lea
mov
sub
icebp
jo
xor
int
dec
dec
pop
pop
lret
xchg
inc
sbb
push
pop
arpl
adc
or
adc
enter
cli
add
cltd
dec
ret
push
div
les
fstpt
sub
dec
nop
mov
lret
xor
mov
xchg
dec
mov
dec
and
push
sbb
sbb
cmp
pop
or
test
push
inc
bound
sub
xor
test
test
pop
pop
cmpsb
loop
clc
imul
popl
inc
xor
test
xor
adc
mov
xchg
out
fwait
loopne
sarl
xor
adc
push
or
pop
sbb
adc
add
dec
loop
push
sub
gs
dec
cmpl
mov
push
insl
xor
mov
out
sbb
daa
jg
jne
ret
inc
nop
in
or
xchg
jg
jmp
lcall
mov
xor
test
fstpl
xchg
mov
xor
dec
pop
jg
mov
in
leave
or
arpl
jle
mov
sbb
mov
inc
std
mov
rol
fdivl
aam
xchg
sbb
sub
mov
or
push
loopne
mov
inc
testl
lods
mov
mov
pop
fcmovb
xchg
mov
lret
xor
xchg
jne
mov
cmp
xchg
sti
lahf
aaa
mov
mov
mov
xor
mov
xlat
cltd
sub
imul
sbb
add
lcall
daa
cs
js
in
loope
inc
dec
sahf
icebp
jbe
push
dec
and
push
lahf
jb
dec
xor
std
xchg
mov
pop
mov
mov
sbb
and
movsw
ss
mov
ds
popa
in
cltd
sub
dec
rcrl
add
xchg
ja
mov
dec
cmp
cs
xor
push
notb
dec
subb
ret
fildl
jp
xor
out
push
imul
and
aaa
cld
cmp
jne
mov
inc
and
lret
sub
xchg
gs
mov
inc
les
js
push
mov
cmp
fstpl
ret
push
xorl
mov
xchg
lcall
dec
pop
jne
cs
insl
and
iret
push
imul
loopne
xchg
enter
xchg
jae
push
insl
push
sub
mov
mov
mov
cmp
cmpsl
jb
jp
cmp
insl
mov
jmp
leave
pop
bnd
push
clc
xchg
adc
dec
ja
and
dec
jnp
aam
xor
dec
int3
fcoms
addr16
mov
roll
out
adc
xchg
test
push
adc
inc
xchg
mov
data16
mov
in
inc
hlt
imul
mov
in
fwait
dec
daa
ficompl
decl
ficomps
insl
mov
testl
cmp
hlt
cmp
inc
push
or
addr16
and
push
xlat
popa
xor
and
xor
lods
sahf
cmpsb
xor
cmp
cmp
jp
js
imulb
or
push
mov
nop
or
int
cmc
dec
scas
ja
add
ret
lret
sbb
leave
shrl
cltd
popa
mov
orb
push
add
sub
xchg
lcall
cltd
je,pt
jg
add
movsl
pop
mov
call
jae
fcom
and
fld
push
sub
leave
andb
pop
xor
pop
mov
in
orl
mov
cwtl
pop
movb
into
xchg
sub
lods
sbb
xchg
out
outsb
cmp
stos
mov
xchg
stos
insb
jb
push
add
test
push
je
xchg
lcall
xor
adc
ds
mov
iret
adc
repnz
sahf
aam
dec
ljmp
pusha
ficoms
aaa
pop
and
xchg
dec
or
repz
nop
mov
adc
push
lret
into
mov
insb
enter
mov
add
add
arpl
icebp
loop
jle
pushf
and
data16
repz
fildll
inc
cmp
mov
xchg
popa
jp
test
insb
outsl
mov
mov
imul
sbb
xor
les
loopne
fstp
dec
fdivrs
rcrl
decl
sub
mov
push
aad
jbe
popl
sti
stos
jb
fisttpl
mov
jl
jp
hlt
mov
jns
insb
out
mov
and
mov
mov
xor
pop
pop
push
push
testb
jge
add
sub
pushf
mov
mov
loop
repnz
cld
cmp
push
sar
cwtl
rcll
call
push
rcll
xchg
jle
stos
movsl
ds
cmp
jne
loope
sbb
aaa
mov
pop
mov
and
or
ds
addb
lret
xchg
sbb
mov
mov
jmp
sbbl
and
out
out
in
sbb
mov
fsubrs
mov
icebp
lds
xorb
mov
add
test
pop
push
push
ljmp
jmp
repnz
cmp
data16
nop
aam
push
push
imul
adc
jns
outsb
xor
test
inc
pushf
xor
cli
enter
inc
cmpsb
fidivrs
shl
daa
mov
sbb
fwait
xchg
sbb
out
stc
dec
jno
insl
sub
xor
or
repz
xor
cld
sbb
ja
sahf
aaa
xor
and
les
andb
repz
jle
ljmp
push
arpl
xchg
arpl
sbb
push
mov
pop
adc
cmpsb
je
fildll
in
arpl
icebp
dec
test
mov
pop
int3
daa
ds
sbb
movsl
dec
clc
inc
fs
imul
popf
jl
les
or
fldenv
dec
add
cmp
movsl
movsb
mov
dec
xorb
jecxz
repz
test
enter
cwtl
sub
lahf
mov
inc
test
imul
lods
cmp
rorl
inc
mov
rclb
cmc
test
bound
clc
je
shlb
cmpsb
and
pop
push
in
es
call
xchg
push
aam
imul
lahf
lret
sbb
push
push
sbb
test
rol
in
out
lea
push
sbb
or
xor
pop
push
inc
flds
icebp
or
call
mov
cmp
movb
dec
scas
mov
jno
daa
and
addb
and
in
sbb
mov
jbe
push
jnp
xor
icebp
ficoms
in
push
xor
pop
fwait
sbb
xor
icebp
shl
mov
push
xor
cwtl
xchg
adc
aaa
mov
das
cltd
inc
xor
pusha
inc
adc
dec
lcall
rclb
sbb
and
lods
xchg
xchg
xor
sub
mov
arpl
insb
test
sub
sbbl
mov
test
jg
mov
in
sbbl
mov
sbb
push
dec
xor
pop
aaa
leave
adc
pop
push
fwait
mov
imul
lret
cld
rcrb
imul
fcmovne
int3
inc
or
bound
pop
fsts
jge
adcb
push
loope
ds
fs
add
or
cmp
mov
cli
and
xchg
pop
loop
aam
out
adc
idivb
repz
les
insb
mov
xorb
les
mov
and
mov
cmp
push
mov
inc
ds
push
imul
popa
fs
xchg
adc
insl
inc
sub
lods
lods
add
jg
push
adc
icebp
adc
sti
shlb
push
ret
jmp
cs
outsb
mov
jp
imul
jmp
cmp
dec
mov
test
fs
insb
sti
sbb
push
adc
adc
jne
push
out
jo
push
push
sbb
movsb
and
insl
mov
imull
adc
adc
iret
daa
mov
flds
and
inc
xchg
and
test
cmp
ss
mov
pushf
enter
mov
inc
jmp
inc
cmp
or
and
pop
int
and
mov
pusha
pop
xor
cs
or
jbe
sahf
shrl
push
loop
xor
fs
dec
xchg
cmp
xor
test
clc
clc
push
test
mov
xchg
insl
cmc
jns
in
jae
dec
mov
mov
pop
int
sub
pop
mov
sub
dec
and
lcall
fisttpl
cmpsl
jle
rclb
daa
xor
push
xchg
jae
or
push
and
shl
sarb
popa
cmp
pop
pop
ret
shll
neg
and
outsl
adc
adc
js
pop
test
lcall
cmp
jno
aam
pop
rclb
aam
mov
in
dec
cli
jo
in
dec
jmp
bound
movsb
inc
and
jns
fcoml
popa
data16
add
repz
add
dec
cmc
or
out
xchg
loop
notl
out
cmp
daa
dec
popa
shll
into
xchg
pop
mov
stos
scas
inc
dec
adc
leave
das
mov
jmp
sub
pop
and
aad
sti
loope
ret
inc
push
add
leave
push
xchg
mov
aam
sti
jecxz
scas
lret
jle
mov
jge
xchg
dec
jl
sbbl
and
mov
xchg
cmpsl
adc
cltd
sahf
inc
xor
cld
adc
stc
dec
jnp
xchg
inc
or
jecxz
js
xor
sub
sbb
xor
sbb
fcoml
mov
dec
xchg
xor
sbb
push
xor
pop
mov
xchg
clc
pop
dec
adc
cwtl
cmp
dec
add
jle
jae
and
out
xchg
cmp
imul
cld
mov
add
adc
pusha
add
xchg
sub
bound
and
scas
push
and
mov
arpl
jae
inc
shlb
xor
or
sub
xchg
add
shrl
jo
lea
add
mov
mov
lea
in
sub
jns
jae
insb
jne
arpl
inc
stos
fimull
cmp
faddl
imul
ja
fadd
cld
jo
mov
rorb
push
scas
cmpsl
sbb
fimuls
stos
mov
jae
dec
in
xchg
andl
push
lahf
mov
rcrl
jg
mov
stos
pop
cmc
data16
push
cmp
dec
lods
jnp
lcall
and
ds
fwait
clc
es
addr16
cmp
inc
ljmp
pushf
mov
inc
xchg
xchg
jnp
lcall
or
push
mov
or
jle
or
add
push
pop
xlat
fwait
outsl
cmp
enter
add
jnp
sub
arpl
rorl
adcl
add
cmp
cmp
lea
add
and
mov
into
cmp
jmp
adc
cmp
out
adc
lock
pop
dec
fsubl
jno
pop
fistpl
int3
cld
push
mov
stos
shll
mov
mulb
or
stc
test
xchg
add
je
in
jle
das
outsl
and
decb
jp
pop
push
or
andb
mov
or
mov
xchg
cs
cmp
xchg
js
adc
daa
imul
pop
leave
mov
add
push
jp
adc
loopne
pop
dec
push
xor
jne
or
xor
out
mov
sub
lahf
push
dec
jne
mov
xchg
aad
sub
dec
loopne
cmp
jecxz
or
or
mov
and
cmp
hlt
loope
xchg
je
mov
daa
adc
xchg
pushf
jecxz
or
mov
adcb
mov
mov
cmp
adc
lret
fnstenv
scas
pop
imul
mov
cs
inc
ljmp
or
test
jns
mov
icebp
mov
xchg
shll
push
std
adc
leave
inc
jno
lahf
test
lods
xor
xchg
shrl
sub
push
xor
xchg
jnp
cwtl
int3
int3
negl
dec
mov
jle
and
ljmp
sbb
jg
mov
icebp
xchg
adc
push
loopne
mov
pop
cmc
inc
hlt
fmull
adc
es
and
push
dec
rcrb
inc
enterw
jnp
out
xchg
fs
adc
cwtl
out
adc
sub
cmp
sbb
addr16
mov
movsb
jbe
push
mov
sbb
cwtl
test
in
adc
push
pushf
sbb
sbb
push
and
pop
es
cs
push
adc
stos
ret
iret
mov
dec
jle
cltd
cmp
xchg
jno
xor
mov
rcrl
ret
adc
mov
xchg
mov
push
rol
stos
aam
movsb
int3
popf
mov
sbb
js
arpl
mov
cmp
mov
and
xor
loop
faddl
mov
mov
movsb
push
call
push
inc
stc
ret
lods
outsb
pop
lock
xchg
test
lret
mov
xchg
jnp
add
cmp
lods
pop
mov
jb
pop
pop
sbb
xchg
iret
and
cmp
add
sub
pushf
addr16
les
and
popf
cld
xor
aam
popf
mov
cmp
je
scas
jmp
insl
adc
gs
stc
out
mov
and
dec
jns
enter
lock
push
xor
and
test
push
dec
mov
aad
xchg
fwait
out
lock
add
aad
push
call
xchg
sbb
stc
mov
mov
arpl
cmpsl
lods
test
lret
ficoms
mov
mov
es
hlt
shlb
test
shll
loop
pop
imul
and
ficoms
call
xor
dec
fnsave
imul
fneni(8087
mov
cmc
setle
gs
sbb
dec
jge
inc
int3
sahf
xchg
dec
in
pop
cmp
in
and
or
inc
pusha
or
ljmp
sub
lds
mov
add
test
or
mov
mov
lds
add
mov
movlps
cli
out
jecxz
test
insl
fisttpll
sub
lock
or
add
xchg
cwtl
fsubrs
dec
mov
mov
or
xor
sub
stos
aaa
lret
icebp
nop
gs
xchg
sbb
or
cmpl
or
cmp
adc
gs
outsl
jg
popa
shlb
out
aaa
pop
mov
test
hlt
stc
leave
in
push
js
xchg
js
pop
jge
pop
and
inc
in
fstpl
cmc
aaa
call
fildl
push
cmp
sbb
sti
loope
cmp
aas
push
and
fwait
and
out
and
mov
mov
cmp
or
sub
jl
mov
and
lock
test
dec
out
push
mov
or
dec
repz
lods
jne
lods
jp
push
mov
int3
ret
adc
jns
jne,pt
xor
and
iret
and
cmpsl
add
cwtl
xor
xor
leave
filds
and
cwtl
adc
mov
and
sbb
mov
xchg
scas
mov
in
and
xor
ljmp
fcoml
xchg
ret
push
test
mov
dec
lds
xchg
dec
and
mov
xor
inc
aaa
or
adc
pop
xor
and
dec
add
fwait
fwait
cmc
jnp
dec
adc
sub
jns
incl
adc
addr16
adc
pop
jbe
cmp
in
bound
dec
out
bound
xchg
jecxz
lds
adc
or
int
mov
jle
test
cmp
add
adc
dec
pop
xchg
gs
out
add
sti
in
inc
shrl
outsb
push
xor
cltd
sti
lcall
sahf
push
mov
cld
jmp
scas
int
add
fadd
mov
push
jno
pushf
js
cmp
xor
push
mov
jne
stc
pusha
mov
js
test
or
cltd
mov
ja
cmp
mov
xor
testb
inc
clc
mov
ret
jle
mov
out
mov
mov
cmp
decb
mov
das
dec
dec
lret
push
sarb
push
mov
es
dec
clc
xchg
xchg
cmp
lcall
push
test
rcr
shrl
ret
inc
sbb
pop
rorl
cwtl
das
addr16
gs
cmpsl
repnz
cmp
cld
pop
fadds
mov
icebp
and
sbb
es
subl
fucomip
lds
cs
jl
xchg
dec
lods
movsb
and
sub
and
adc
dec
sub
mov
fwait
inc
clc
daa
aad
test
and
pop
leave
stos
add
dec
fs
sub
test
fists
cltd
das
add
mov
cmp
out
cmp
and
out
xlat
cmpsb
iret
iret
add
or
and
mov
ret
sub
dec
rcrl
sub
fsubl
stc
push
push
insl
rcrb
push
add
adc
cwtl
lods
xor
cltd
sbb
or
out
mov
data16
xor
test
movsb
aaa
stos
sti
push
jl
inc
mov
fdivr
insb
push
pop
shrl
mov
dec
push
leave
pop
mov
jnp
add
enter
dec
popa
pop
loope
cmp
jmp
fsub
jno
icebp
pop
fimull
movsb
popa
pop
cmp
or
mov
int3
jnp
repnz
pop
sti
dec
int3
nop
push
xlat
cs
into
call
xor
icebp
mov
jno
sbb
mov
out
adc
jmp
std
ss
loopne
movsb
mov
inc
adc
push
in
or
mov
leave
pop
movsl
xchg
lret
repnz
push
pop
dec
add
xchg
ret
scas
loop
jle
and
push
sahf
gs
cli
mov
and
inc
outsl
fisttpl
repnz
jecxz
test
push
out
shlb
ret
dec
mov
test
shrb
mov
or
or
cmp
lret
das
xor
mov
outsb
pusha
into
mov
inc
and
lret
jmp
xchg
push
mov
inc
cld
cld
inc
inc
pop
in
aaa
push
dec
ds
push
es
add
loope
pop
xchg
pop
inc
pmaddwd
mov
xchg
xor
add
lock
stos
pop
in
sub
cs
pop
mov
adc
fldenv
daa
movsb
pop
dec
fisttpl
ss
jp
dec
lret
mov
xor
dec
cmpl
pop
sbb
and
dec
leave
xchg
pop
clc
test
push
add
add
pop
mov
push
lcall
xor
cmp
dec
scas
mov
int3
lea
aam
shlb
sub
jmp
in
jecxz
pop
stc
jge
mov
out
and
jno
cld
cmp
imul
popf
fisttpl
stc
sarl
les
mov
cmc
mov
and
cwtl
add
popf
stc
and
das
jo
repnz
dec
aam
jle
xor
mov
jbe
test
std
addr16
in
push
dec
or
sub
push
xlat
xchg
movsl
xorb
mov
xor
out
pextrw
xchg
in
rcl
mov
std
test
ljmp
aas
mov
or
lahf
shll
fists
mov
lahf
adcb
hlt
cmpsb
mov
faddp
cmp
les
loop
adc
inc
mov
cmp
ret
add
inc
inc
dec
in
lods
xor
fwait
xchg
jl
or
dec
cmpsb
outsl
push
and
jg
imul
sarl
inc
addb
sub
into
and
mov
in
subb
xchg
aaa
mov
push
jle
push
and
jno
hlt
sar
outsb
add
pop
cltd
lret
lods
mov
orl
rol
dec
add
mov
dec
push
adc
repz
aas
sahf
leave
and
fisubrl
sbb
inc
push
jl
loope
arpl
test
xor
mulb
rcr
fs
or
add
mov
dec
test
cmpsl
xchg
jnp
popa
push
push
bound
inc
test
pop
mov
jns
xchg
js
pop
fs
pop
leave
xchg
cmpsb
nop
mov
sub
push
push
fsubrs
mov
mov
sub
cli
mov
test
push
jge
inc
add
fildll
repz
enter
insb
scas
mov
jb
in
js
sub
mov
pop
out
cld
and
cmp
lock
test
dec
shlb
out
sbb
repz
jle
add
pop
ret
js
push
sub
pushf
and
clc
ret
jg
pop
mov
sti
fwait
mov
addr16
cmc
lret
dec
mov
adc
and
adc
sbb
cmpb
loope
pop
inc
inc
dec
and
rclb
or
nop
fisubrl
push
insb
cmp
xchg
rolb
add
ljmp
aaa
sbb
fcomp
mov
jns
rolb
xchg
out
pop
in
imull
les
cmp
xor
dec
sub
mov
xchg
shl
je
add
xor
add
xchg
aad
inc
std
lahf
test
push
jnp
dec
mov
xchg
add
mov
dec
icebp
jb
add
data16
out
jecxz
mov
or
mov
out
mov
push
push
cmp
inc
and
fcoms
add
xchg
inc
or
xor
cmp
sarl
mov
or
fisttps
lock
das
loopne
xor
cmp
ljmp
ja
inc
sbb
xchg
xor
stos
push
das
or
cmp
lret
sub
pop
mov
xchg
mov
repz
and
dec
icebp
repnz
push
cmpsl
mov
pop
jb
or
jbe
sti
mov
cmp
out
mov
dec
ret
mov
inc
xchg
aas
add
lret
mov
loopne
lods
mov
std
cltd
jp
int
xor
add
or
int
inc
ds
ss
mov
dec
stos
sti
ret
mov
sub
or
adc
sbb
mov
pusha
jp
xor
xor
xchg
in
popw
adc
xor
xlat
push
dec
jbe
pushf
pop
jns
shl
and
jmp
pop
mov
push
mov
scas
jg
mov
xor
sbb
lahf
sbb
cmpsl
ret
dec
cmp
mov
pop
or
pop
inc
das
lret
cmp
dec
pop
sbb
xor
jp
data16
outsl
pop
jb
fwait
xor
into
cmpsb
push
xchg
jge
adc
sub
idivl
gs
or
pop
xchg
adc
and
xadd
notb
jnp
push
loopne
and
mov
cmp
test
mov
adcl
aaa
inc
sbb
int3
jnp
xor
mov
jle
sbbb
mov
sbb
lahf
dec
pop
mov
jg
sbb
clc
ljmp
inc
and
movb
psubsb
push
pop
outsb
push
mov
lock
or
pop
pushf
sarl
icebp
loopne
or
aaa
pop
pop
mov
sub
xlat
sahf
mov
scas
dec
jns
fs
push
lods
fidivl
add
or
sub
icebp
call
loopne
imul
jne
cmc
and
sub
xchg
push
add
mov
stos
aas
jne
mov
hlt
xor
sub
xadd
inc
out
lret
xchg
mov
sbb
dec
lahf
frstor
loope
test
jo
clc
xor
mov
arpl
loopne
mov
inc
cs
in
or
jnp
popf
mov
dec
jmp
sub
pop
enter
xor
adc
lcall
and
sahf
pushf
inc
xor
loopne
push
jle
fstps
pop
and
aad
add
jg
mul
jg
lea
shll
loop
lock
jns
ret
dec
popa
daa
movsb
roll
dec
and
xor
xor
test
sub
jmp
cmp
push
cltd
xchg
or
out
lahf
or
adc
mov
arpl
rol
or
pop
pop
les
sarb
idivl
pop
setp
adc
pop
sbb
push
test
pop
ds
cmp
stos
sub
mov
pop
notl
cmp
mov
cs
das
ficomps
cmc
aad
call
enter
dec
test
aas
xor
adc
scas
mov
loop
mov
mov
mov
push
cli
rol
lahf
jb
sbb
cmp
or
dec
fucom
cmp
adc
ljmp
les
jno
sar
mov
mov
push
mov
xchg
fcoml
repz
lret
popl
xchg
and
cmp
add
jmp
pop
dec
movsl
call
enter
sub
and
scas
xchg
or
xor
scas
rcrl
sbb
cmp
movsl
lods
in
jnp
xor
inc
cltd
inc
push
jg
andl
push
xchg
lret
notl
sbb
mov
divl
fsts
addl
fdivl
adc
push
xchg
leave
lret
fldl2t
jp
lock
js
fcoms
fcmovb
ret
repnz
mov
inc
loopne
add
mov
into
repz
fstpl
ret
jno
ret
jae
or
push
pop
and
ja
push
idivb
lcall
or
xchg
daa
inc
mov
fnstenv
sahf
fidivrs
lret
hlt
push
arpl
add
lret
jnp
cmpl
pop
imul
add
fdivrs
adc
out
inc
ret
lret
inc
cmp
sar
test
movsb
mull
ficoml
ja
sub
adcl
sbb
dec
cmpsl
repnz
fs
jno
jle
jo
add
dec
mov
mov
stos
jb
mull
mov
enter
shrb
fxch
dec
negl
cld
mov
mov
shl
inc
in
push
pop
sbb
mov
fadd
addl
mov
aad
leave
fcmovb
mov
cmp
loopne
sub
xor
xor
scas
sub
out
fdivrs
sbb
dec
inc
fdivl
clc
pop
movsl
mov
and
add
jno
pop
cmpsb
cmp
jge
movsb
test
xor
push
mov
xchg
mov
xchg
shlb
pop
push
lcall
lret
jmp
fsubrs
popf
jns
ja
cltd
inc
mov
outsb
push
push
aam
mov
je
push
inc
data16
dec
cmp
cmpsl
push
out
ror
pop
xor
inc
fnstsw
test
sarb
xor
std
cwtl
mov
adc
cmp
sub
push
pop
sbb
out
loopne
cmp
jmp
cmp
int
scas
mov
mov
jne
xchg
sbb
pop
xchg
cld
xchg
mov
xchg
std
faddp
push
rol
and
sbb
sub
in
push
popf
aam
loop
dec
fs
das
mov
jecxz
cld
sbb
enter
in
sub
out
pop
shll
cs
aaa
cwtl
pushf
dec
pop
in
std
sub
adc
push
or
lock
int3
aas
xchg
icebp
popf
in
test
add
dec
int
mov
stc
arpl
mov
or
add
cli
sbb
outsb
pop
inc
mov
repz
js
mov
std
iret
mov
and
std
push
mov
sbb
hlt
adc
into
imul
in
aam
mov
pop
mov
sub
cld
loop
xor
jno
das
mov
aam
pop
add
push
test
dec
or
fnstcw
jno
xchg
mov
or
outsb
in
mov
fwait
popa
negb
out
xor
sbb
push
gs
cltd
out
cs
mov
aad
repz
xor
sbb
and
es
push
repz
inc
push
fwait
dec
add
icebp
imul
push
and
bound
mov
ja
xchg
stos
pop
out
add
pop
mov
adc
fidivrl
jle
adc
aad
inc
movsb
jecxz
bound
sbb
dec
dec
cwtl
xchg
cmp
stc
xchg
les
adc
push
outsb
mov
mov
fsubl
inc
xchg
out
sub
push
psllq
push
dec
das
popa
ss
xor
mov
data16
sti
inc
jecxz
xchg
adc
mov
mov
adc
imul
xchg
scas
push
xlat
fdivr
stc
hlt
push
outsb
adc
adc
pop
dec
xchg
dec
jmp
push
xor
mov
cmp
xchg
pop
lock
jg
pop
sti
xor
jg
fisubrl
cmp
jge
subb
add
xchg
adc
hlt
lret
add
or
jno
mov
test
loope
bound
ffree
loop
mov
and
sub
xchg
test
ljmp
or
aad
cmp
lock
fnstsw
mov
dec
and
push
mov
sbbl
mov
lahf
jge
xchg
and
and
bound
inc
out
fisubrl
imul
push
adc
cmp
inc
adcb
push
sub
xlat
decl
push
jp
add
sar
fwait
add
mov
xor
cli
lock
xor
xor
xor
lock
push
inc
and
stos
mov
out
mov
mov
repnz
in
mov
rorl
and
sbb
inc
push
mov
push
scas
sub
xor
sub
push
inc
cmp
mov
rolb
sub
loop
mov
lods
test
mov
call
into
imul
mov
movsl
popa
mov
dec
in
pop
lcall
sbbb
jnp
sbb
jo
push
mov
push
jo
in
test
xchg
aaa
pop
mov
sub
aam
inc
push
lcall
icebp
repz
lods
mov
icebp
jo
cmpsl
xorl
imul
push
push
loop
mov
pop
add
jge
pop
cwtl
mov
mov
shl
xchg
or
mov
push
aad
mov
xchg
xchg
sbb
jl
mov
lds
or
fsubp
std
sahf
add
nop
xchg
mov
mov
mov
rcll
dec
pop
call
jle
add
jno
sahf
iret
mov
lret
mov
xor
xor
xchg
outsl
cld
jbe
mov
adc
mov
cs
xor
dec
and
adc
fnstsw
dec
divb
cmp
lret
jbe
loop
mov
xor
pop
out
mov
mov
push
jg
adc
mov
pop
inc
pop
push
mov
sbbl
jmp
ret
sbb
mov
aam
mov
cli
sub
or
jbe
mov
xchg
cmp
pop
sbb
push
xchg
shll
jb
roll
not
faddl
lea
mov
pop
pushf
cli
jmp
cs
les
and
push
xchg
sti
mov
les
dec
xchg
fwait
out
cmp
inc
inc
mov
dec
inc
jno
daa
stos
cld
jp
pop
dec
addr16
dec
sti
movsl
xchg
les
inc
rcll
pop
push
dec
inc
mov
adc
filds
push
push
fs
lret
sub
movl
outsl
xchg
js
add
in
fistps
repz
jle
and
inc
mov
xor
mov
lahf
lcall
fiadds
dec
add
sbb
mov
fdivrl
cmc
pop
dec
lea
push
or
lcall
ja
and
jno
mov
sub
loopne
mov
xchg
dec
jne
pop
push
out
bound
fwait
jo
sbb
sbb
les
add
pop
testb
mov
sbb
cmpsl
sub
nop
mov
mov
repz
imul
pop
shl
cmpl
mov
jl
shrl
cmpsb
lock
xor
and
inc
movsb
xor
imul
add
mov
ljmp
dec
mov
nop
jne
sub
pop
xor
xchg
xor
jne
mov
adc
idivb
sbb
stos
lret
push
mov
mov
xchg
mov
stc
mov
and
jmp
adc
mov
xor
jge
sub
js
jecxz
dec
sub
mov
out
ficoms
data16
mul
ror
lock
ja
push
icebp
adc
test
push
mov
pop
fcomip
sbb
sahf
das
enter
ret
lock
xchg
dec
push
inc
sahf
fistpl
daa
xchg
add
outsb
repnz
sbb
loope
sub
aas
cmp
repz
movb
das
push
mov
or
xor
out
push
cwtl
jbe
imul
test
mov
js
decl
cmpsb
mov
lods
jnp
xchg
xchg
mov
out
loop
mov
mov
mov
clc
imul
arpl
jmp
cmc
clc
test
stc
sub
mov
ja
jno
mov
mov
inc
fnsave
out
bnd
in
inc
orl
dec
sub
sti
mov
pop
rclb
out
pop
in
in
inc
imul
jne
adc
lret
pop
jne
pushf
push
je
and
cmp
or
sbb
inc
movsb
cltd
xor
lea
sbb
out
dec
xor
test
and
loop
fsubr
mov
out
call
jnp
imul
mov
dec
sub
or
sar
cld
push
add
out
mov
mov
lret
mov
inc
int3
add
inc
xchg
sbb
add
shlb
pop
in
dec
lahf
loopne
shrl
or
dec
adc
shll
cltd
sbbl
push
sub
or
in
std
pushf
out
or
aas
adcb
sub
jp
xor
pop
adc
jg
mov
xor
imul
fs
fiaddl
push
lds
push
ss
and
or
shrb
cmp
data16
mov
addr16
jmp
mov
and
arpl
inc
cltd
push
cmp
push
addr16
in
ds
orb
pop
rolb
push
lcall
repz
mov
fisttpl
and
test
pushf
lahf
push
add
push
inc
jl
add
mov
rorl
xchg
sub
shll
xchg
mov
jmp
xchg
mov
inc
cs
inc
imul
push
outsl
adc
dec
test
incl
int
jne
sub
in
mov
push
sarl
mov
fistpl
pop
imul
dec
push
enter
pop
scas
push
out
out
dec
imull
sub
and
xchg
cmp
mov
fldenv
sti
push
lret
sahf
xlat
test
test
sbb
js
incb
out
mull
adc
roll
sub
je
adc
sti
sub
test
ror
jg
cli
fmulp
inc
cld
jmp
or
jg
int3
ja
dec
xor
xchg
or
pop
imul
adc
sarl
cwtl
and
push
imul
push
jnp
icebp
sub
mov
xchg
movsb
jb
jecxz
testb
std
movntq
add
jno
cld
xor
and
cld
xor
shrb
fwait
push
add
mov
fs
inc
sub
add
lods
outsl
or
bound
std
mov
insl
push
in
test
push
mov
in
ja
xor
test
je
lahf
insb
in
sahf
push
adc
out
jns
faddl
mov
stos
push
es
mov
sub
loop
bound
ret
in
dec
aam
lock
dec
imul
add
jge
rcr
sti
das
sbb
mov
lock
jbe
aaa
pop
adc
sti
xlat
mov
mov
push
and
xchg
and
pop
add
mov
adc
into
mov
lea
or
push
mov
jl
and
cmpsb
jl
pusha
out
rolb
jno
sub
xor
mov
out
sub
bound
xor
gs
pop
fldcw
lahf
xlat
xor
pop
jbe
jno
out
loopne
sahf
pop
mov
adc
add
push
cmpsb
subb
cmp
sahf
fwait
cmc
pop
mov
imul
mov
and
add
jne
ret
push
pop
sbb
call
lahf
into
cmpl
das
pop
or
push
je
or
push
rorl
stc
test
jmp
jbe
dec
rorl
push
pop
idiv
sbb
xchg
and
mov
or
nop
lret
inc
inc
loop
xchg
jae
loope
xchg
add
dec
inc
loop
in
bound
mov
movb
bound
add
mov
in
stos
adc
mov
jge
fstl
ds
add
repnz
xor
mov
fisttps
icebp
and
sub
sub
add
xchg
mov
loop
ret
jbe
mov
lea
mov
movsl
scas
loope
dec
adc
into
push
sub
sub
pop
inc
cmpsb
lds
cmp
jp
in
jbe
popa
xchg
lods
sub
adc
mov
xchg
push
cmc
lods
test
pop
movsl
jmp
dec
js
out
dec
adc
call
sub
pop
aaa
pushf
xchg
push
mov
inc
push
stos
sbb
std
lret
and
sar
and
cmc
jb
scas
inc
lcall
icebp
inc
xchg
das
mov
in
test
sub
xchg
outsb
or
jns
fiaddl
adcb
test
test
xchg
cmp
das
sub
sahf
mov
test
aaa
test
jne
mov
mov
shlb
aaa
pop
or
xor
cmp
and
fcomip
dec
pop
mov
cmc
pop
or
sbb
enter
divb
xor
bound
xor
in
vunpckhps
add
adc
out
rcrb
mov
add
ljmp
pop
int
scas
iret
xor
adc
cs
lock
dec
fsub
loop
mov
push
push
sbb
sbb
movsb
int3
mov
gs
push
cmpsb
push
adc
pushf
das
out
or
mov
cli
dec
out
outsl
roll
pop
aam
ljmp
mov
lret
sbb
loop
and
test
insb
or
push
es
xchg
iret
sbb
and
test
shl
test
jle
xchg
popf
imul
fcompl
sub
lret
mov
xlat
pop
mov
add
xchg
or
jb
sbb
xchg
lea
add
mov
jle
fsubl
cmp
shlb
push
in
clc
lahf
fcoms
subb
repz
stos
loop
jno
push
fildl
inc
and
cmovge
cmp
mov
nop
out
mov
test
pop
insl
lea
adc
and
adc
jne
pusha
jmp
call
sbb
lods
sahf
sub
lahf
sbb
test
inc
sbb
or
mov
dec
push
sub
sub
mov
stos
sub
cmp
mov
add
xchg
lods
jl
jmp
xchg
mov
maxss
mov
out
jo
pop
pop
push
adc
dec
arpl
lods
cld
insb
mov
dec
xchg
insl
mov
adc
lds
push
je
fidivl
aad
jno
pusha
pop
dec
mov
jmp
push
dec
aad
jle
jp
inc
or
aaa
push
in
sub
cwtl
xchg
cmp
out
add
fidivrs
push
dec
sub
push
cmpsb
mov
push
cmp
push
jle
mov
push
gs
ret
mov
sub
push
sub
in
adc
sbbb
ret
cli
inc
mov
lahf
dec
jp
sub
sub
jmp
addl
dec
call
push
cli
adc
sub
subb
mov
mov
repz
mov
dec
adc
sub
movsb
popa
lret
les
sbb
dec
sbb
icebp
jnp
push
je
cltd
xchg
mov
xor
pop
js
xchg
rcrl
out
aad
fisttpl
scas
dec
mov
xor
mov
xchg
xor
jmp
insl
sub
dec
fcmovnu
pop
jnp
and
fisubrl
int3
push
enter
and
lahf
cmp
cwtl
xlat
mov
mov
add
pop
cmp
dec
in
adc
and
fs
xchg
fxch
sbb
jo
aas
mov
scas
ljmp
cmc
repnz
ret
dec
xchg
jbe
adc
mov
or
inc
pop
inc
push
outsl
int
rcl
fcoms
lods
lea
pop
gs
mov
iret
ds
mov
fnstenv
std
xchg
ret
sbb
cmpl
outsl
mov
call
xor
jo
loopne
add
and
jge
cmc
mov
outsl
mov
push
insb
mov
mov
movsl
loop
loopne
rcll
xchg
dec
out
sub
pushf
push
xor
push
rcll
sub
cli
out
mov
les
daa
sub
mov
inc
std
lcall
dec
mov
repz
cld
pop
cld
jge
sbb
push
inc
sbb
cld
push
in
mov
push
adc
mov
shl
icebp
xchg
enter
xor
adc
jnp
repz
or
pop
push
pop
int
nop
jmp
xchg
push
or
and
adc
xor
cmp
scas
jo
loopne
sbb
sub
rclb
stc
call
or
pushf
pushl
mov
add
pop
test
mov
stc
outsb
cld
xchg
movsl
sbb
push
push
pop
cmp
xchg
out
dec
adc
inc
fdivl
test
lds
and
pushl
popa
shr
cltd
add
cmp
sbb
jge
scas
lret
loope
sub
ret
sub
inc
xor
adc
xchg
stos
hlt
dec
inc
cmp
int3
les
mov
xlat
repz
jbe
shll
test
jbe
mov
stos
and
aas
cmpl
sarl
sub
out
mov
add
dec
inc
lcall
mov
cmpl
stos
les
push
or
mov
dec
xchg
and
imul
mov
and
mov
sbb
ficoms
cmp
mov
jno
inc
cmpsb
push
hlt
imul
fcompl
stos
test
xchg
int
xchg
push
xor
adc
aas
pop
inc
es
pop
das
and
mov
lods
cmp
gs
orb
cld
dec
out
out
jg
or
cmp
bound
inc
adc
clc
ds
inc
sbb
insl
inc
sub
lods
into
add
pop
into
xorb
test
xor
iret
bound
incb
add
sbb
add
sbb
inc
fadds
popa
sub
sub
lods
jnp
lahf
sub
testl
xor
dec
xchg
adc
jnp
xor
xchg
add
mov
out
inc
stos
call
fcmovnb
adc
mov
sbb
insb
mov
mov
js
lods
fcmovbe
cmpsl
jnp
je
call
sbb
inc
push
and
ret
pop
scas
lcall
cltd
xorl
mov
sbb
clc
adc
cmp
jle
ficompl
imul
cmp
in
jg
mov
push
ljmp
mulb
adc
inc
inc
shll
mov
dec
ja
js
adc
in
outsb
dec
pop
xor
inc
xchg
orl
ljmp
clc
out
adc
in
out
push
out
jmp
ljmp
clc
outsl
ficomps
cmp
xor
dec
mov
leave
sbb
outsb
lcall
insb
imul
fildll
mov
scas
pushw
jnp
in
mov
fisubrs
lds
cwtl
xchg
jle
push
and
mov
xchg
lds
bswap
jmp
inc
inc
out
lods
xchg
fcompl
xchg
mov
sahf
je
dec
into
pop
dec
shrb
inc
dec
jl
lahf
mov
ret
pusha
fwait
push
sbb
bts
fdivrl
ds
xchg
call
dec
pop
shl
mov
ret
test
push
insl
mov
iret
ret
sbb
xlat
mov
mov
mov
aam
iret
mov
inc
fidivrl
dec
out
push
sub
xchg
pop
add
sub
jnp
sub
stc
js
dec
cmp
mov
pop
jmp
mov
mov
mul
xchg
or
mov
loopne
loopne
aas
cmp
pushf
fdivrp
jbe
fldcw
cwtl
into
loopne
arpl
xchg
add
add
inc
out
daa
gs
cld
and
mov
xchg
sub
into
cs
lcall
pop
fistpl
sbb
ret
loope
mov
aas
aam
ja
in
adc
out
sub
pop
cmp
pop
adc
push
cwtl
mov
cli
pop
push
xchg
jmp
jmp
cmp
scas
fistl
xchg
mov
push
aam
pop
scas
call
xchg
mov
xor
std
js
adcb
repz
dec
xchg
aas
insl
and
aam
jnp
xchg
jae
stos
jp
mov
in
push
mov
or
fnsave
out
adc
mov
stos
pop
ja
leave
pushf
roll
popf
ret
jbe
lret
jno
pop
mov
inc
daa
mov
scas
add
pop
jbe
push
mov
icebp
xor
js
js
xor
std
fwait
cmc
dec
mov
and
imul
int3
je
mov
cmp
les
mov
fwait
out
cli
dec
xchg
push
inc
push
mov
orb
in
ljmp
fstl
ja
loopne
cltd
mov
cmp
xor
mov
jnp
mov
cmp
xchg
popa
pop
roll
jb
pop
mov
loope
in
gs
mov
mov
or
rcrb
adc
fdivrp
push
push
testb
push
cwtl
mov
leave
adc
out
pop
xchg
stos
sub
xorb
stc
and
jns
dec
fldl
push
dec
add
and
int3
fiadds
outsl
fsubl
aam
add
cmpsl
inc
in
jb
jg
inc
mov
add
lock
mov
fdivl
jge
or
or
lret
xor
jnp
xchg
test
inc
cltd
lcall
stc
cmp
outsl
cmpsb
lods
push
dec
fsubr
hlt
jge
fnsave
lock
cmpsl
push
adc
cmpsl
loop
mov
jmp
sbb
or
ret
test
or
out
sub
les
lea
push
jo
ss
xchg
mov
popa
ficompl
lahf
jbe
ret
gs
mov
les
jo
test
jp
ror
add
mov
sub
shl
pop
test
ret
je
pop
dec
jg
push
sub
pop
pop
jnp
lret
mov
jne
rolb
mulb
imul
or
mov
jnp
mov
pop
bound
xor
pop
xor
out
shlb
test
pop
mov
pushw
loopne
and
popa
push
out
sarb
mov
or
sub
sbb
pop
jne
cmp
scas
loopne
adc
into
sub
les
in
mov
sbbl
xor
xor
adc
jecxz
add
stc
aad
mov
je
in
and
add
push
pop
mov
pop
dec
imul
fadds
mov
jae
mov
jno
jnp
mov
cmp
or
stc
push
mov
lret
insb
hlt
jb
jg
test
lods
inc
loop
mov
aaa
sub
roll
xor
inc
inc
fcompl
imul
rcrl
ficompl
jo
and
mov
jbe
inc
iret
add
shl
xchg
push
push
adc
jbe
sbb
jp
mov
and
mov
dec
cwtl
push
es
cmp
leave
push
sub
das
cli
idivl
ss
adc
lock
out
mov
xchg
test
jecxz
addl
or
and
js
mov
sahf
test
insb
mov
icebp
ds
xchg
leave
loope
mov
jp
jbe
ret
cwtl
fdivp
int
push
and
mov
or
pop
fistl
test
cltd
xor
in
fwait
sub
and
outsl
push
push
and
mov
or
cs
xchg
dec
insl
stc
inc
shrl
and
test
movsl
rclb
dec
pop
dec
sbb
sub
xchg
std
movsl
dec
clc
xor
inc
nop
test
or
adc
cmp
inc
lret
adc
xchg
roll
insl
mov
imul
xor
xchg
pop
ret
and
jne
cwtl
add
sub
xor
std
jl
add
lret
xchg
lods
jb
sbb
dec
cmp
movsb
cld
daa
scas
lds
stos
mov
add
jns
sbb
push
xlat
push
pusha
add
and
xchg
les
dec
cmc
negl
jbe
fiadds
sub
lret
jl
xchg
imul
mov
xor
mov
lock
mov
xchg
jno
mov
mov
std
addr16
pop
mov
std
push
pop
mov
enter
push
mov
dec
fidivs
push
push
stos
in
dec
cld
jl
out
outsb
jbe
sahf
mov
fsubl
sbb
dec
push
cmp
pop
movsl
outsb
push
mov
rclb
aaa
bound
xchg
test
out
data16
mov
jmp
dec
stos
mov
test
lret
xchg
sbb
jns
loop
cmp
idivl
and
dec
cmc
jae
imul
repnz
mov
sbb
xchg
and
rcrl
cmpsl
insl
hlt
insb
mov
movsb
sbb
cmp
pop
out
lret
jp
insb
mov
lds
pop
xchg
push
dec
into
add
push
add
jne
and
shll
xchg
iret
not
pop
les
mov
fistpl
sarl
push
push
mov
mov
jo
lea
insl
xchg
lds
sbb
clc
push
xor
sub
lcall
in
mov
mov
mov
movsb
fiaddl
sarl
xchg
add
push
pop
fimuls
sub
mov
cmpb
inc
lret
mov
pop
rorl
xabort
mov
repz
loope
lahf
rcl
fistpll
jbe
mov
and
int
hlt
loop
rcrl
sub
inc
push
pushf
lods
push
lcall
mov
out
jb
xlat
mov
ljmp
mov
pop
fwait
cmc
jle
mov
jne
mov
jle
pop
ret
xor
mov
ljmp
popf
cmp
cmpsl
aaa
test
sbb
lods
testb
push
testl
lret
jne
jmp
or
je
push
jmp
imul
in
mov
sub
nop
add
push
xchg
movsb
outsl
sbb
mov
sbb
ss
pop
xor
and
out
dec
ja
jle
xchg
in
mov
ljmp
test
sbb
mov
xlat
mov
movsb
scas
sbb
movsb
mov
insl
and
fidivs
add
xor
lret
xchg
xchg
mov
jns
mov
mov
add
mov
mov
lret
outsb
push
mov
inc
or
mov
hlt
popf
xchg
rcll
scas
jle
pop
aad
lods
cmc
adc
or
dec
mov
out
cs
sub
ds
fs
cs
jecxz
iret
in
mulb
repz
xor
mov
and
jmp
ljmp
popa
sbb
fildll
test
out
int
pop
push
xchg
idiv
xlat
xor
fbstp
or
int3
cmp
sbb
mov
adc
pop
popf
dec
scas
and
sbb
pushf
adcl
cli
loopne
fs
out
sub
mov
mov
andb
daa
mulb
sub
adc
pop
roll
dec
hlt
mov
xlat
jae
sbb
std
adc
mov
sub
xchg
jae
and
push
int
dec
push
dec
sub
mull
add
inc
sbb
push
mov
jmp
sub
or
aaa
sbb
or
dec
xor
cwtl
inc
push
repz
sbb
mov
ljmp
jb
cmp
jo
push
mov
insb
iret
jecxz
es
jns
adc
clc
scas
mov
ficoml
iret
insb
xor
sbb
imul
out
push
lds
data16
sysret
fs
mov
xlat
sub
into
dec
dec
lahf
and
push
inc
push
jbe
and
lret
and
inc
cltd
mov
xchg
pop
ret
bound
pop
and
sahf
cmc
inc
jnp
add
mov
jbe
ds
aam
sbb
mov
clc
es
mov
aad
popa
cmp
mov
jne
mov
push
mov
test
sbb
xorb
das
data16
xor
js
xchg
mov
cmpsl
in
push
dec
scas
cld
ljmp
or
pop
sub
std
mov
add
or
sarl
push
movzbl
cltd
inc
mov
data16
scas
push
popf
ljmp
shr
test
icebp
dec
jnp
xchg
dec
xchg
std
xchg
jo
xlat
mov
repnz
mov
aam
jbe
sbb
sbb
movsl
and
pushf
lock
sbb
or
inc
rolb
or
iret
pop
push
push
js
push
sub
hlt
stc
sbb
xor
int
ja
mov
push
jae
mov
cmpsb
imul
push
push
push
subb
xchg
mov
pop
pop
xchg
ret
xchg
xchg
mov
subl
or
stc
cmpl
int3
adc
lahf
or
lods
fsubl
lcall
adc
jbe
dec
or
outsb
jmp
ficomps
fstpl
sub
mov
fsubrs
adc
sahf
xor
mov
pop
mull
mov
enter
push
inc
inc
rclb
movsb
sbb
dec
mov
js
dec
push
popa
push
leave
sbb
jne
and
test
mov
jle
sahf
jl
mov
sti
mov
rolb
pop
out
scas
pusha
mov
mov
adc
incl
out
dec
jno
mov
test
ss
js
or
das
xlat
mov
or
into
xor
ret
pop
in
jnp
imul
orb
cli
dec
in
jae
cmp
mulb
pop
xor
imul
pop
gs
push
or
adc
jnp
or
sbb
adc
cmp
pop
or
arpl
mov
push
mov
dec
mov
jbe
mov
fsubp
jecxz
sub
add
cwtl
into
dec
xchg
adc
jle
mov
jecxz
and
pushf
or
xchg
dec
sub
and
icebp
push
insb
addb
aad
mov
pop
add
pushw
xchg
fwait
push
fiadds
or
mov
pop
xor
sub
push
mov
pop
dec
pop
arpl
test
adc
push
sti
decb
pop
imul
cld
test
int
pop
xor
jle
pop
cmp
or
push
add
mov
push
push
and
popf
fcoml
dec
test
sti
in
mov
xchg
sub
sbb
inc
mov
movsl
fwait
push
pop
fisubl
xchg
popf
add
push
pusha
das
lcall
and
pop
or
adc
mov
inc
push
pop
cmp
movsl
xor
or
push
stos
or
icebp
jle
out
mov
mov
push
aam
xor
add
push
fdivp
add
mov
mov
or
mov
leave
add
adc
movsl
sbb
jg
push
push
add
mov
scas
jmp
sbb
jmp
sub
movsl
cmpsl
sbb
push
cld
or
out
ror
ljmp
adc
into
inc
inc
xor
pop
and
fsubrl
rcll
outsl
loop
ret
cli
push
jo
pop
xor
test
pusha
mov
jge
fidivrs
lock
xchg
sub
and
icebp
mov
popf
sbb
jecxz
iret
cmp
mov
clc
stos
mov
push
cli
and
xor
add
scas
pusha
adc
inc
mov
int3
movl
insl
ss
shlb
mov
arpl
push
add
std
lock
je
jae
dec
sbb
cmp
mov
inc
xchg
dec
lods
aas
idivl
mov
outsl
pop
mov
rcr
cmp
lcall
cmp
aad
mov
rorl
in
push
outsl
jg
cs
scas
mull
xlat
movsb
pop
jbe
cmpsb
aaa
xor
xchg
mov
fidivrl
pop
bound
dec
adcl
shlb
push
fs
shlb
dec
xorb
pop
orb
sbb
nop
insl
xchg
mov
mov
scas
std
or
sbb
adcb
sub
hlt
mov
jno
sub
fstps
and
sbb
fstpl
adc
cmp
jg
mov
sbb
sbb
mov
cli
aad
test
lea
push
xchg
mov
inc
dec
mov
sbbl
or
xchg
cmp
jp
loop
int
out
ss
movsl
fisubl
rcr
or
jp
iret
jne
add
xchg
xchg
xchg
sti
sub
push
out
adc
rcrl
mov
pop
xor
mov
mov
inc
add
dec
mov
rolb
xchg
ss
imul
jnp
mov
lcall
push
fldt
fs
cvttps2pi
call
mov
clc
and
enter
pop
enter
cmovs
add
mov
jne
sbb
ljmp
in
cltd
inc
mov
xchg
fcompl
xchg
mov
push
xlat
andb
in
push
std
inc
push
pop
stc
jbe
aad
mov
inc
push
int3
or
scas
push
arpl
lcall
cmpsl
lods
and
push
cmpsb
ljmp
pop
mov
xchg
loopne
sub
cmp
mov
cmc
jmp
or
sbb
mov
int
sarl
dec
jns
add
loope
xchg
cmp
mov
and
or
in
mov
ret
jo
xor
sub
cmova
pushf
es
inc
lahf
sbb
mov
orb
fmuls
inc
ds
push
shll
pop
mov
push
lock
js
scas
inc
cmp
xchg
cmpsl
je
xchg
ret
insl
push
mov
loopne
clc
dec
pop
xor
sub
and
and
sub
test
leave
mov
inc
push
mov
jno
cmp
lret
push
xchg
xchg
bswap
jmp
sahf
je
push
adc
jae
loop
sbb
adc
xchg
lea
add
push
mov
mov
xchg
push
dec
inc
sbb
push
push
loop
cmp
lret
or
mov
cmp
add
adc
and
ds
aad
arpl
icebp
stos
fldenv
push
add
jecxz
xlat
test
pushf
movsl
mov
mov
cwtl
xchg
aaa
dec
jecxz
pop
xchg
fs
stos
xor
pop
inc
adc
mov
in
jp
outsb
adc
xor
or
sti
or
push
jne
leave
in
scas
cmc
es
dec
cli
add
add
xor
sub
inc
mov
lea
dec
xor
lret
sub
xor
adc
imul
xorl
jle
scas
jmp
fstpt
dec
jge,pt
bts
repz
sub
movsb
ret
in
stc
js
lods
gs
dec
data16
test
mov
movsb
fsts
out
mov
add
pop
in
loop
rdmsr
sub
cmc
aas
popf
ljmp
mov
jmp
inc
xor
mull
mov
mov
loopne
mov
jns
sbb
pop
sahf
push
mov
lods
jg
mov
lods
int3
push
ljmp
inc
cmp
push
adc
mov
outsb
jl
fstps
test
outsl
fucom
or
imul
jl
mov
inc
ret
lcall
rorb
add
mov
push
mov
lret
sub
push
imul
dec
jb
cmp
xchg
sbb
fisubl
aaa
push
mov
push
shll
sti
cwtl
pusha
stc
jl
call
fnstcw
sbbb
test
jns
test
addr16
pop
rol
iret
cmp
sbb
adc
mov
test
cmpsb
daa
nop
sbb
sbb
adc
ss
movsl
mov
call
cltd
arpl
in
das
jp
dec
cmp
cwtl
mov
lock
sbbl
hlt
push
pop
in
out
out
flds
jo
lret
aas
xchg
or
or
or
dec
aad
inc
cmpsb
mov
mov
inc
xchg
inc
cltd
pop
icebp
pushw
push
mov
adc
adc
daa
scas
repz
dec
and
add
fcoms
xlat
pop
dec
subl
ret
ds
or
andb
outsl
ds
ja
and
sbb
pop
aam
dec
test
int
add
stc
fstl
sbb
aaa
and
mov
cmc
xchg
push
jecxz
mov
mov
sarw
iret
push
mov
jbe
push
pop
jl
mov
cld
xchg
roll
dec
cmc
fdivrs
cmpsb
nop
mov
mov
sub
pop
cmp
xchg
je
cmpsb
mov
cmp
or
dec
subl
lahf
push
mov
jb
sbb
cltd
jle
das
jp
adc
fwait
push
call
jecxz
jmp
add
jle
jb
dec
aad
push
test
or
sarb
mov
test
enter
fcoms
out
cltd
lods
jne
fldt
mov
jne
jb
jne
hlt
mov
cmp
fcompl
cwtl
ja
repz
lds
push
or
jae
or
inc
inc
adc
lds
xchg
iret
pop
or
arpl
add
jmp
dec
inc
pop
sbb
adc
jle
mov
adc
xorps
fisubrs
shl
test
mov
xor
push
fisttpll
xchg
test
test
mov
addr16
inc
push
test
cmp
mov
imulb
mov
sti
les
jle
mov
dec
or
dec
pop
orb
in
repnz
pusha
push
imul
jecxz
leave
sbb
stc
and
push
or
in
loop
mov
loopne
mov
pop
or
add
inc
jns
xor
mov
repz
and
cwtl
inc
dec
bound
mov
pop
in
add
mov
icebp
fwait
add
cmp
lock
dec
dec
mov
lret
jp
sub
subb
mov
pop
nop
roll
into
push
pusha
xchg
push
push
ljmp
rcll
pop
add
mov
add
aad
insl
xchg
aas
pop
mov
lret
xchg
mov
movsl
mov
jmp
sub
out
iret
iret
movsl
jbe
int3
cmpsb
sahf
xor
cmp
outsl
ret
insl
sbb
cmpsl
sub
sahf
test
lods
lea
inc
es
jp
aaa
fcmovne
mov
arpl
mov
nop
mov
dec
in
lret
sbb
dec
pop
cmp
dec
mov
test
xchg
nop
cli
jno
dec
mov
sar
in
in
mov
iret
jecxz
mov
and
data16
jns
cmovb
in
pop
pop
cwtl
inc
lea
cmovbe
addr16
pop
or
push
ud1
lds
testb
dec
pop
and
stc
and
pop
adc
mov
movsl
loop
fstpt
out
imul
sub
lahf
and
mov
sbb
testb
push
gs
sbb
and
lods
dec
mov
rcl
sub
addl
mov
sub
jl
aam
negb
fistpll
cmc
shll
das
test
push
push
ficomps
leave
cli
dec
fcoms
sub
mov
hlt
cmp
and
mull
fs
and
stc
sahf
bound
daa
addb
jns
nop
jne
imul
stos
cmp
jl
filds
dec
jb
mov
in
movsl
repnz
jne
mov
rorb
dec
push
sub
or
pop
and
ret
xor
and
inc
push
fstpt
jl
aam
cmc
xchg
mov
add
jp
fwait
ds
lcall
inc
ss
pop
mov
or
es
ds
mov
dec
xchg
push
jl
test
ror
jbe
mov
mov
push
push
push
pop
filds
shlb
imul
xor
scas
push
jmp
fists
push
daa
cmp
sub
and
fdivrs
aam
adcb
pop
mov
out
and
int3
adc
test
pop
out
dec
sti
pop
aad
aas
out
lea
ret
arpl
mov
jl
in
mov
out
lcall
xor
int
sbb
sar
lcall
and
or
push
mov
out
fstpt
cltd
jbe
test
add
movsb
call
fidivs
inc
pop
jno
push
push
daa
pop
xchg
in
dec
test
and
pusha
cmp
mulb
shl
xor
mov
insl
test
loope
nop
aam
fcompl
xchg
and
icebp
mov
mov
shl
mov
fs
fdivs
jmp
dec
inc
ret
arpl
jmp
mov
outsb
adc
fidivrs
or
out
pop
insl
push
xor
out
nop
mov
xor
xchg
sbbb
fwait
push
sbb
stos
leave
cmp
adc
jmp
pop
sti
push
inc
sbb
hlt
pop
aas
sub
sbb
lret
xchg
aad
cmpsb
out
mov
call
lock
adc
out
mov
mov
repnz
roll
sub
mov
dec
push
stos
lret
mov
xchg
jp
jge
icebp
fstpt
sub
xor
stos
mov
dec
outsl
pop
mov
dec
adc
pop
mov
or
es
lds
out
addb
mov
fistpll
mov
mov
lcall
xchg
xchg
or
cs
xchg
jns
add
das
mov
mov
loopne
ds
adc
das
mov
rcrb
adcb
fcom
adc
adc
aam
sbb
cmp
and
and
xor
inc
dec
inc
fstpl
xor
shlb
mov
jg
jmp
lods
and
ret
pop
aam
pop
sub
pop
mov
scas
pop
pop
mov
je
jge
test
test
push
pop
sbbb
mov
fldenv
mov
cmp
mov
data16
fs
mov
test
mov
into
sub
loop
adc
jp
inc
pop
add
adc
test
imul
cmp
out
mov
leave
xchg
mov
sbb
je
jns
outsl
adc
sub
mov
pop
xchg
pop
cmpsl
sti
push
mov
loope
aaa
icebp
jmp
out
fldt
inc
call
das
sub
stc
filds
cmpsl
xlat
out
cltd
adc
cwtl
dec
stc
scas
shll
ret
sahf
mov
pop
mov
int
xchg
push
jl
mov
mov
clc
notl
mov
adc
fsubrl
push
xchg
push
mov
movsl
jl
adc
gs
adc
xchg
push
lahf
aad
ja
and
and
jo
pop
iret
push
aas
ret
jmp
ret
cli
clc
cmp
dec
push
mov
inc
jmp
clc
xor
icebp
mov
sbb
pop
or
push
loop
std
addr16
jl
sbb
inc
test
adc
stos
jae
cmp
pop
mov
testb
cltd
mov
imul
dec
arpl
sub
pop
clc
lret
pushf
cmp
ja
mov
cmc
xor
sbb
lds
nop
sub
jo
sbb
popf
divb
aam
divl
xchg
leave
jbe
dec
iret
dec
push
push
sbb
mov
mov
adc
push
loop
mov
jno
leave
fsubrs
and
xor
fsubrs
aas
es
inc
jno
stc
jge
xor
sub
add
jbe
or
pop
pop
fnstsw
push
fnstsw
jle
add
adc
push
adc
mov
enter
int
loopne
xchg
dec
adc
orb
stc
js
mov
pop
dec
pop
outsl
xchg
jne
pop
jmp
ja
pushf
lret
push
imul
mov
xor
xchg
fadds
sti
fildll
dec
mov
mov
xchg
mov
mov
or
std
cmp
cmp
xor
mov
xchg
jge
xchg
xchg
jg
mov
add
aaa
pop
rorb
in
and
xchg
add
adc
add
pushf
gs
jl
mov
mov
sti
fdivrs
jbe
sarb
dec
xchg
sbb
pop
or
lds
in
xor
arpl
jmp
cmp
fcompl
ret
add
xlat
xchg
insl
jge
inc
pushf
mov
sub
jae
test
mov
test
lds
pushf
xchg
xchg
ja
inc
mov
ret
and
xor
fisubl
mov
xchg
das
in
lcall
sub
mov
dec
int3
inc
xlat
add
jecxz
sarb
pop
bound
adc
xchg
gs
mov
mov
sbb
jne
xchg
jp
cmpsl
ret
xchg
pop
dec
cmp
out
jnp
dec
lret
stos
data16
pop
in
sub
fwait
loop
into
pop
pop
pop
mov
in
pop
cmpsl
nop
pop
popf
ljmp
data16
add
add
mov
mov
out
scas
sbb
xor
loop
das
shlb
jbe
adc
or
inc
test
sbb
or
mov
in
mov
sbb
push
jl
int3
scas
sbb
xlat
loopne
sbb
mov
icebp
push
pop
mov
jp
push
pop
mov
out
or
sub
outsb
aad
jbe
sbb
push
mov
jns
test
push
xor
inc
xlat
jbe
shl
insb
and
fcomi
shll
in
adc
sahf
push
push
mov
xor
xchg
je
rclb
sub
add
sti
movsb
xorl
xor
movsl
mov
mov
stos
and
pop
call
cmp
mov
std
mov
bnd
cmp
lcall
xlat
inc
dec
clc
inc
inc
adc
call
and
xchg
or
pop
repnz
addb
ja
push
sub
hlt
xor
enter
scas
out
add
mov
sub
pusha
js
adc
ja
ret
dec
cmc
xchg
data16
xchg
push
jne
es
mov
cmp
sti
sub
adc
bound
adc
fnsave
mov
inc
push
mov
xor
test
mov
sbb
loopne
and
ss
ja
rcr
mov
shlb
mov
xchg
mov
fdivrl
add
movsl
adc
mov
mov
int3
ljmp
test
cli
dec
imul
pop
mov
inc
outsl
dec
mov
push
dec
and
dec
and
jg
ret
sub
mov
popa
xor
int3
cld
or
adc
stos
adc
cmp
mov
inc
cwtl
cs
out
loope
dec
clc
jns
cmpsb
pop
sub
xchg
mov
fidivl
js
mov
shrl
hlt
orl
and
mov
push
loopne
rorb
mov
add
imul
repnz
cmp
test
test
inc
psrad
dec
xchg
xor
mov
repnz
inc
or
mov
frstor
push
icebp
push
jmp
dec
in
jmp
ds
mov
and
mov
cmp
mov
fcomps
aad
clc
loope
jne
popa
ror
xchg
scas
out
sbb
pushf
cmp
adc
jbe
cmp
fwait
push
push
push
mov
add
fisubrs
loope
add
add
cli
bound
test
insl
aaa
push
addr16
push
outsb
sbb
lods
jge
sbb
jp
mov
inc
adc
loopne
or
gs
mov
popf
aad
xor
push
scas
cmp
je
and
jl
sbb
stos
lods
add
test
mov
in
cmp
loope
stc
add
cli
adc
aaa
inc
push
popl
ja
add
lcall
and
sti
inc
aas
pushf
sub
push
test
push
adc
daa
outsb
xor
lcall
les
sarl
jo
cmp
shll
call
sub
push
icebp
andb
shll
loop
cld
je
imul
cmp
mov
sub
add
jno
fwait
cwtl
rcrl
sbb
fsin
push
xchg
cmp
cmp
sahf
fs
pop
sbbb
xor
mov
dec
pop
mov
clc
mov
dec
dec
mov
inc
pop
dec
fdiv
mov
mov
dec
mov
shrl
sub
jge
push
mov
test
xor
cmp
call
mov
pop
and
lcall
fwait
xor
lahf
add
pop
inc
ss
add
mov
push
lahf
fldt
enter
jnp
push
xchg
mov
add
sahf
aad
jge
push
leave
aaa
insl
xchg
pop
adc
mov
xor
push
mov
or
add
gs
xchg
sarb
in
stc
stos
dec
xchg
fisubrs
loopne
test
popa
pop
ds
ds
rcr
adc
xchg
jge
sub
adc
rolb
cli
add
pop
ret
cmp
sti
push
cmp
sbb
or
xchg
inc
push
jg
jb
std
cmc
pop
xorl
pop
xlat
shll
mov
test
xchg
add
cmc
dec
enter
and
inc
adc
imul
cs
push
or
pop
sub
jg
or
push
mov
icebp
imul
roll
lods
jge
negl
not
shrl
lods
gs
dec
or
insl
jo
mov
inc
int3
addb
cmc
stos
pop
or
jae
pop
mov
imul
ficoml
sti
adc
cmp
and
add
add
or
rcrb
lock
lods
mov
sbb
jle
jb
push
xor
mov
jge
lret
in
mov
xor
imul
jnp
orb
or
sbb
jl
out
sbb
jns
sub
and
mov
pop
cli
out
jle
lret
add
shrl
imul
and
lds
mov
adc
pop
in
add
pop
mov
xchg
sbb
icebp
adc
xor
imul
mov
repz
add
inc
xor
cmp
mov
dec
mov
cmpsb
flds
lahf
pop
int3
mov
xlat
xchg
push
popf
in
push
adc
adc
addr16
jl
fisttps
les
xchg
icebp
pop
ret
jl
jno
sbbl
inc
fimull
dec
les
aad
addr16
or
adc
pop
jp
fmuls
push
jo
sbb
jle
ljmp
cmp
adc
inc
into
aad
and
fwait
mov
dec
push
mov
adc
pusha
dec
mov
cmc
add
popa
jle
popa
mov
pop
loop
hlt
add
cwtl
cmp
movl
jl
sbb
fidivs
testb
xchg
popa
dec
dec
pop
xor
cmp
flds
pop
insl
xchg
xor
mov
adc
ret
xchg
dec
jl
lds
cltd
lods
sub
adc
ljmp
out
push
call
rclb
cmp
pop
dec
push
div
outsb
lds
inc
loop
in
jno
int3
inc
mov
jb
in
ja
inc
stos
insl
pushw
push
test
dec
testl
inc
mov
lahf
fadds
stos
adc
mov
mov
lcall
filds
xor
movsl
push
shll
lret
inc
jne
cld
ret
ds
sub
fs
sbb
push
mov
ret
push
lds
les
addr16
out
iret
scas
loop
fucom
jmp
pop
in
push
xchg
cmc
call
cmp
sbb
push
stos
jns
fistl
jo
xlat
push
or
hlt
sub
jmp
mov
pop
pop
loop
dec
push
xchg
data16
sub
or
xor
mov
xchg
les
cmp
sub
or
lods
mov
sub
and
cwtl
ja
test
sahf
sti
sbb
sti
mov
sub
sub
xlat
bound
outsb
push
xchg
pop
lods
push
scas
push
out
adc
icebp
lock
mov
aad
test
ljmp
or
sahf
jns
and
push
imul
stos
ss
dec
and
xor
sbb
sbb
cwtl
dec
stc
test
lock
push
sub
sbb
shll
sbb
mov
adc
push
dec
daa
fchs
loopne
ds
jle
fwait
adc
xor
fcompl
ficomps
or
ljmp
pop
fmull
or
je
jnp
push
pop
cltd
mov
pop
sbb
dec
loope
iret
xchg
mov
scas
scas
in
cmpsl
mov
in
std
popf
stos
and
rclb
jmp
std
leave
jae
xchg
cmpsl
jg
stc
sbb
jmp
push
xchg
jecxz
dec
scas
in
test
mov
push
mov
inc
scas
fstl
cmp
mov
jle
mov
add
nop
add
outsl
dec
jecxz
out
js
pop
aad
sbb
jl
lds
xchg
les
cmpsl
inc
xor
orl
lret
push
xchg
andb
mov
ja
out
fstp
cmp
pop
icebp
xchg
or
and
push
sub
clc
add
or
lahf
and
cmp
xor
adc
repnz
cltd
cmp
dec
adc
data16
mov
jno
cli
jle
mov
xor
jl
sbb
and
inc
mov
mov
and
and
outsb
mov
ljmp
mov
pop
loope
repz
cltd
scas
cmp
mov
rorl
orb
adc
sbb
jg
mov
lea
fs
and
xlat
loopne
mov
icebp
mov
out
inc
cmc
ret
andl
into
jmp
cmp
out
jl
xchg
aaa
in
test
in
cli
mov
out
mov
dec
sbbb
mov
push
movsl
cmpsl
push
dec
xor
push
aam
fwait
mov
mov
orl
sbb
in
sub
sbb
and
or
lods
jle
pop
je
scas
jle
fldenv
movsl
scas
cmp
dec
movsl
into
fsubl
loopne
aad
ja
jge
movsl
sbb
xor
push
imul
adcb
push
mov
sub
jge
lock
sbb
into
sbb
mov
jo
pop
pop
mov
std
dec
lahf
sarl
xor
push
xor
iret
imul
into
cmpb
leave
and
mov
mov
int
into
fwait
mov
cmp
test
ljmp
xchg
stc
cmp
iret
dec
pop
test
jbe
cmp
push
ljmp
test
xchg
lahf
xor
sbb
scas
out
cld
into
negl
lods
jns
mov
sbb
mov
or
mov
in
daa
mov
lods
or
ds
cmpb
test
mov
pop
std
les
jmp
scas
fldcw
jl
ds
inc
dec
xlat
mov
test
jle
mov
stc
fiadds
fmull
inc
bound
mov
pop
mov
out
pop
sbb
xchg
adc
add
pop
fnstsw
or
add
std
xchg
into
and
gs
pop
loop
ss
sbb
out
jns
shlb
sahf
xor
aaa
mov
divb
mov
movsb
xor
fnsave
dec
pop
imul
xor
fidivrs
sti
aas
dec
mov
divl
xchg
add
pop
idivl
shll
push
jb
adc
xor
and
mov
ja
pop
jne
add
push
jg
or
enter
loop
jle
int3
push
rcrb
daa
int
ljmp
mov
dec
push
xchg
mov
enter
hlt
dec
inc
xchg
lcall
imul
fs
scas
hlt
cltd
pop
je
fs
adcb
and
lahf
es
pushf
sbb
inc
push
and
hlt
stos
lods
je
pusha
cltd
ret
cmp
inc
fld
push
fidivrl
aas
stos
jo
ss
lock
imul
mov
out
shrl
sub
sarl
arpl
cvtpi2ps
fiaddl
sub
adc
mov
sub
enter
xor
fnstenv
sar
out
jnp
lock
insb
arpl
fadds
leave
int
xchg
ja
cs
sbb
add
aas
cmc
popf
icebp
popf
mov
xchg
sbbl
mov
aam
movsb
leave
mov
and
dec
or
bswap
ss
stos
pop
and
dec
push
jge
push
jne
cmp
insb
sbb
dec
aad
int
xor
sar
inc
xor
test
in
inc
and
pusha
sub
leave
mov
mov
mov
fwait
pop
test
int
or
mov
shll
jnp
cmp
adc
gs
xchg
cwtl
mov
push
cmp
mov
lods
int3
cmpsl
push
adc
stos
xchg
push
mov
addr16
adc
pop
je
sub
mov
sub
les
popa
dec
in
mov
in
arpl
xchg
mov
sahf
jecxz
push
inc
stos
or
push
add
mov
ret
or
and
popa
in
cmp
cmpsb
arpl
mov
sbb
testl
sbb
pop
fiaddl
sub
ret
push
pusha
arpl
dec
mul
icebp
fisubs
push
mov
arpl
jecxz
and
stc
outsl
pop
mov
pusha
call
xchg
sahf
cmp
js
loopne
andb
mov
add
cmp
mov
int
testl
or
iret
inc
pop
shrb
sbb
xor
add
cmp
mov
call
push
mov
les
jbe
stos
jbe
mov
mov
cs
fcomp
roll
test
mov
aad
push
push
mov
mov
shll
aaa
lods
je
loopne
mov
fbstp
jle
dec
pop
das
out
or
cli
scas
scas
push
test
imul
dec
mov
movsb
out
or
xor
int3
xchg
rcll
push
push
lcall
or
add
dec
inc
mov
in
mov
test
adc
push
shll
arpl
mov
and
idivl
aas
call
addr16
cld
out
in
mov
popa
call
insl
pop
call
repz
daa
jl
cld
sbb
and
mov
inc
in
je
sbb
sbb
add
jae
mov
inc
movsb
leave
popa
jle
stc
shl
dec
mov
jg
push
inc
mov
pop
dec
lahf
pop
or
jnp
or
cwtl
fsub
aad
jge
adc
push
mov
fwait
loopne
cltd
sub
sti
mov
or
int
je
jnp
cmp
mov
and
inc
mov
adc
cmp
fs
sbb
ds
xchg
rorb
sbb
sti
adc
lods
inc
xlat
cmp
mov
jb
add
fwait
xchg
lahf
mov
push
ret
pop
iret
dec
push
lahf
test
test
popa
iret
jge
cli
pop
shlb
mov
inc
cmp
imul
sti
sub
in
dec
es
shl
xor
fstps
mov
inc
mov
repnz
inc
ds
pop
pop
cld
mov
push
movsl
loop
lcall
cld
jns
or
loop
sub
sbb
aaa
out
lcall
sbb
cmc
clc
push
fmull
dec
jns
movsb
repz
xchg
adc
mov
mov
sub
iret
pop
bound
lcall
fneni(8087
cmp
insb
sub
fs
out
cmp
loope
jl
cli
mov
lret
mov
sbb
cmp
mov
shl
insl
ja
mov
fcmovbe
jno
test
or
mov
sbb
stc
aaa
add
pop
scas
jmp
out
in
cmp
call
cmp
mov
popf
sbb
mov
lret
dec
inc
int
out
insl
repz
andb
xchg
inc
fwait
arpl
aas
mov
fcmovne
or
push
mov
mov
push
pop
jae
mov
leave
mov
xor
stc
mov
mov
stos
mov
xchg
in
clc
mull
bound
dec
jp
in
divl
stos
jl
adc
icebp
outsl
pop
cld
or
repnz
fwait
mov
mov
lahf
lret
int
outsb
mov
sub
sbb
xchg
push
mov
dec
xchg
inc
mov
enter
in
and
bound
cmpsb
lods
push
cmp
lea
adc
and
mov
and
out
cmpsl
push
imul
daa
bound
std
sub
das
inc
aad
xchg
add
mov
push
xchg
lods
xlat
push
unpcklps
fsubp
aam
mov
mov
orl
in
hlt
or
mov
xchg
mov
cmpsl
das
inc
add
xchg
xlat
fsubp
push
mov
jge
and
test
andnps
mov
out
outsb
outsb
mov
arpl
inc
sti
jo
stos
cmp
scas
mov
cmp
je
fidivrs
sub
push
out
dec
fwait
mov
mov
lods
loopne
in
cmpsb
call
fucompp
fnstsw
fiaddl
sub
add
push
xlat
mov
std
cmpl
pushl
out
scas
test
jmp
xor
shll
xor
leave
mov
jp
jp
pop
xchg
dec
sbb
push
inc
sub
in
aaa
test
jno
mov
in
xchg
into
pop
dec
loopne
jmp
mov
aaa
mov
popa
and
loop
shlb
inc
add
xor
movsb
push
out
shll
xor
iret
leave
push
push
data16
iret
sbb
sbb
cltd
lahf
inc
mov
stos
pop
cmp
jae
jns
jnp
sbb
aam
pcmpgtb
inc
adc
rclb
inc
imul
std
mov
xor
test
dec
or
sbb
inc
sahf
sbb
test
out
push
pop
xchg
push
fucomi
push
test
mov
test
out
mov
xor
addb
out
gs
sahf
push
stos
mov
sub
movsb
mov
test
mov
fwait
xchg
pop
addr16
repnz
inc
lock
jns
fbld
push
lods
in
sub
outsl
das
add
jmp
or
shlb
and
movb
ret
out
mov
mov
call
cmp
nop
popa
cwtl
hlt
filds
jecxz
xchg
push
data16
push
insb
cmp
test
les
movsl
xchg
in
inc
xor
push
lcall
xchg
nop
sub
mov
lods
fldcw
into
add
mov
in
outsl
lods
das
loope
mov
sub
stos
popa
sub
push
push
insb
cmc
pop
and
fiaddl
ds
and
push
aas
into
ss
push
mov
inc
repnz
mov
dec
or
pop
inc
in
inc
fisttpl
add
push
inc
dec
jg
and
add
and
hlt
and
jl
inc
dec
hlt
mov
std
sub
inc
or
jae
jns
add
lods
cmpsl
add
movsb
test
cmp
adc
push
mov
push
jno
mov
lock
scas
mov
call
fcoms
adcb
cld
mov
les
push
in
imul
mov
aaa
cwtl
ds
inc
mov
pop
popa
pop
popa
ret
or
popa
push
xchg
pop
sbb
pusha
push
pop
inc
cld
aad
sub
xlat
pop
jns
sub
sbb
enter
gs
and
jno
lahf
scas
xlat
movsb
ficomps
jbe
jl
daa
sarl
jns
inc
inc
enter
or
subl
lahf
orl
xchg
cmp
cltd
xchg
movsl
mov
push
test
mov
cmc
or
push
pop
sbb
pop
ljmp
xor
pop
mov
jno
xor
xor
popa
lods
dec
lock
add
pop
inc
out
gs
mov
fs
push
lock
ret
test
aad
fbstp
aad
dec
cli
jg
mov
dec
mov
pop
fistpl
call
lods
test
inc
je
mov
pop
cmpsb
sbb
xor
test
icebp
adc
das
inc
sbb
pop
arpl
dec
jp
rcll
mov
xchg
clc
mov
aaa
push
cmp
inc
inc
xor
xchg
push
dec
popf
js
inc
jle
int
ljmp
out
mov
pop
xor
popf
imul
lcall
sbb
and
push
fs
int3
divl
dec
xor
aas
push
les
icebp
jno
repz
cmpsl
push
gs
aas
insl
or
pop
idivl
inc
cld
jbe
jbe
push
jecxz
adc
lcall
cmpsb
cltd
or
mov
lret
dec
mov
cltd
xlat
inc
inc
das
dec
in
or
out
imul
push
mov
mov
shlb
dec
ret
push
dec
insl
push
jne
test
enter
xor
ds
jno
xor
out
pop
xchg
push
jb
mov
movsl
loopne
stos
dec
adc
push
cli
and
in
inc
lods
xchg
stos
lcall
push
pop
sub
jl
repz
fbstp
scas
push
inc
jae
mov
dec
cmpsl
xchg
xchg
lds
and
mov
cmp
cmp
cmp
rolb
xor
pop
cmpsl
repz
inc
sub
repnz
repnz
mov
push
and
mov
andb
jnp
lds
xor
xchg
or
shll
and
adc
push
dec
test
in
out
add
ljmp
jae
push
loope
or
call
pop
notb
adc
movsl
fsubr
stos
loope
sbb
lahf
data16
negb
mov
add
stos
cmp
jmp
lock
aaa
mov
cmp
push
daa
lea
mov
xchg
mov
mov
jbe
int
and
lret
add
cmp
test
int
mov
mov
push
dec
lret
int3
cs
push
gs
mov
insb
inc
push
fldt
cmp
xchg
pop
sub
pop
add
ljmp
adc
jge
sub
dec
push
daa
mov
xchg
xor
jg
inc
jb
neg
scas
mov
cmp
test
cltd
shrb
pusha
aam
sbb
dec
push
fwait
aam
sub
and
pop
std
ljmp
and
push
and
jns
js
out
outsl
xor
push
scas
test
out
sbb
xor
lock
or
fcmovbe
add
or
xchg
pushf
jne
lret
or
sti
test
mov
cmpsb
ret
mov
cwtl
outsb
andl
pop
xor
sub
rclb
mov
outsb
pushf
push
fildll
push
jecxz
cld
or
mov
xor
fmul
out
ficoml
or
lret
jecxz
lahf
mov
gs
je
cmp
in
adc
mov
add
add
popf
inc
loop
outsb
ds
popf
lcall
cli
lods
aam
ss
add
or
lret
out
add
test
lods
movsb
inc
loop
add
mov
mov
or
in
dec
cli
sub
xchg
mov
push
fadd
leave
ljmp
and
push
and
pusha
in
inc
rcrl
fnsave
adc
sbb
dec
icebp
mov
sbb
jnp
das
push
pop
sar
inc
cmp
in
pop
push
sub
leave
inc
xchg
outsb
mov
jno
in
sub
lret
hlt
xchg
xchg
arpl
xchg
inc
or
add
loop
jbe
mov
in
mov
call
orb
inc
xchg
test
inc
ds
int3
cmp
std
popa
sti
sahf
sahf
cmp
fildll
push
loope
and
lock
push
pop
pop
jecxz
xor
dec
jns
scas
iret
cmc
jnp
sbbl
stos
lock
inc
jecxz
sub
enter
add
push
out
pop
cmp
pop
cmp
xor
xlat
inc
xor
adc
pop
rcrl
lret
std
bound
xlat
aaa
daa
ja
cld
inc
out
push
inc
pop
popa
sbb
mov
jmp
ret
dec
xchg
imul
lret
fildll
sbb
inc
sarl
mov
das
mov
cmpsl
sti
js
xchg
mov
in
fldl
add
shrb
ss
sahf
out
ds
fst
jo
adc
mov
insl
pop
xchg
cmpsl
mov
dec
jle
shlb
test
cltd
pop
filds
sarb
ja
dec
imul
adc
push
in
dec
fnsave
insl
ja
adc
mov
clc
pop
mov
add
data16
xor
adc
and
ffreep
sub
stos
fistl
incb
movsb
dec
inc
aas
sbb
jns
jbe
sub
repnz
mov
fimull
lcall
out
cmc
jp
pop
decl
loopne
inc
push
push
inc
pop
push
aad
add
js
pusha
xor
dec
icebp
out
pushf
int
xorl
daa
sub
mov
cmc
loopne
lahf
jnp
cltd
dec
mov
lahf
outsb
into
leave
xchg
sbb
xchg
addr16
jae
stc
outsl
fnstcw
outsl
mov
adc
adc
bound
lret
shlb
mov
inc
cmp
adc
mov
leave
adc
jecxz
ss
lock
lret
inc
enter
sbb
xchg
jbe
rolb
outsl
rcll
jle
popa
xchg
flds
jmp
rcll
add
ret
add
fsub
lods
mov
dec
dec
divl
cld
pusha
or
daa
xor
rorb
xor
push
dec
or
jg
rcr
mov
mov
cmp
sarl
test
cli
mov
enter
sub
xchg
enter
arpl
mov
into
jo
aaa
xchg
mov
push
fisttpl
or
insb
dec
out
cmp
pop
rcr
add
sti
outsl
push
fcmovne
addl
insl
stos
xchg
and
lret
aam
mov
out
mov
inc
imul
das
sbb
decb
dec
divb
jnp
iret
cmovne
pop
fisttpll
jg
sti
lods
clc
hlt
insb
stos
sbb
in
fldcw
enter
stos
negb
mull
adc
push
in
call
jecxz
jb
divb
jle
and
inc
cmp
cmp
out
lahf
pop
in
jns
out
cmpsl
adc
mov
rol
sub
mov
je
int3
incl
and
js
or
out
jg,pt
repz
rcrl
cmpsb
pushf
xor
push
mov
xchg
jmp
pop
mov
es
hlt
sbb
jbe
test
aas
lret
xor
sbbl
xor
xor
push
pop
adc
push
mov
and
push
out
mul
inc
sahf
lds
xchg
lods
sub
mov
push
je
in
jl
jb
cmp
jnp
or
mov
push
aas
iret
popf
dec
repz
cltd
pusha
push
add
sbb
inc
stos
add
out
add
dec
mov
add
mov
imul
pop
mov
insl
mov
xor
andb
push
jge
and
pushf
pop
sbb
push
pop
and
cwtl
fimuls
push
sub
hlt
pop
jno
xchg
ljmp
dec
jnp
mov
push
dec
sbb
cmp
pop
jbe
mov
jne
mov
frstor
adc
stos
cmp
ret
call
rcll
out
pop
inc
es
add
sbb
dec
sarb
dec
push
jmp
in
inc
in
fcompl
xchg
iret
mov
pop
fsubrs
cmc
sahf
sbb
stos
xchg
inc
pushf
dec
pop
push
bound
xchg
add
add
add
out
mov
addr16
hlt
cwtl
fadds
rorl
fbstp
sub
adc
push
lret
mov
push
mov
std
xor
mov
divl
hlt
lods
cli
popl
mov
add
pusha
lods
daa
shlb
aas
jmp
sbb
or
jge
add
iret
pop
inc
inc
mov
mov
jae
and
pop
ss
pop
cmp
movsl
fisubl
cld
mov
pop
mov
ljmp
pop
fs
or
shlb
dec
div
lods
nop
push
std
xchg
out
stos
mov
icebp
pop
fcomp
cld
inc
pop
sbb
mov
adc
jne
popf
lcall
xchg
dec
dec
imul
repz
mov
xchg
and
xchg
ret
push
push
and
mov
xor
jle
in
aad
push
insb
mov
jbe
inc
cmp
fs
push
pop
add
test
mov
xchg
sbb
mov
sarl
push
fisubl
int3
inc
paddw
xchg
fnstcw
mov
movsb
adc
mov
jnp
pop
movsl
sub
and
add
mov
mov
enter
outsl
jb
fldenv
pop
xor
daa
lds
mov
mov
sbb
shrl
add
mov
mov
fdivr
and
xchg
mov
sbb
add
nop
nop
fwait
out
imul
inc
lahf
movsl
pop
jl
mov
clc
push
push
xchg
ja
or
dec
in
sbb
ss
lea
sbb
mov
jp
jae
or
adc
shll
xlat
sub
inc
insl
mov
rcll
xchg
lret
ret
fcmovnb
not
push
jl
test
pop
or
push
push
aam
pop
push
pop
mov
test
sbb
xor
stc
ja
sti
and
push
bound
enter
stos
fwait
xor
jmp
mov
inc
in
js
pusha
cmpsl
out
sbbl
jmp
popa
stc
cmp
and
push
jp
mov
sub
mov
cmp
xor
mov
mov
je
dec
lds
js
jecxz
jne
imul
and
xchg
cs
mov
sbb
addl
adc
test
fildll
out
or
and
xor
lahf
out
sub
mov
lahf
adc
add
xorl
rcll
jecxz
or
xchg
fistps
pop
cmp
mov
cmp
add
cmp
lret
jge
out
or
mov
cmp
dec
jmp
imulb
cli
int
aad
xchg
mov
add
ret
pop
adc
sahf
iret
cs
mov
cmpsl
into
jns
sbb
sbb
test
stos
cmc
imul
int
xor
xor
inc
push
mov
xabort
push
testl
lea
inc
xchg
mov
pop
ljmp
jb
pop
out
lret
sti
dec
div
inc
loopne
xchg
int
add
fbstp
and
outsl
pop
push
inc
nop
in
aam
xchg
mov
mov
aad
dec
push
cmp
jb
sub
mov
clc
data16
outsb
pop
lock
dec
jno
test
hlt
adc
daa
pop
dec
movb
mov
jle
pusha
push
xor
sub
adc
cmp
das
mov
cld
and
mov
mov
arpl
mov
xor
or
and
sar
push
subl
scas
xorb
es
xor
in
aad
subl
and
dec
rcrb
mov
add
fldenv
xchg
fisttps
mov
jl
sbb
nop
or
fildl
jp
fidivl
insb
cmpsl
rorl
nop
mov
mov
daa
sub
mov
jp
push
mov
insl
cmpsl
js
cmovb
mov
je
pop
lcall
test
mov
fxch
fs
ss
dec
cwtl
xor
jb
mov
pusha
test
rolb
xor
dec
add
fcmovnb
ret
mov
cld
mov
mov
cs
and
sarl
pushf
and
stc
or
dec
loopne
push
insb
push
xor
ljmp
and
inc
mov
push
and
out
ret
aaa
adc
pop
aam
mov
lods
pop
or
test
dec
lock
sub
or
dec
fcoml
push
inc
loopne
cmp
dec
aad
or
flds
or
sbb
xchg
push
clc
push
xchg
push
jb
adc
bound
dec
jmp
sub
cld
inc
test
mov
adc
iret
push
dec
dec
not
lret
arpl
out
sbb
jge
sbb
mov
fisttps
pop
sbbl
sbb
mov
and
add
ds
insb
in
fistl
mov
loopne
les
subb
lock
pop
mov
fistpl
add
xchg
add
pushl
and
xlat
add
sahf
lea
adc
xchg
xor
insl
mov
mov
shrl
push
cmp
jle
movsb
addb
insb
lcall
inc
std
xchg
jmp
in
dec
mov
cmp
mov
in
leave
xchg
movsb
mov
ss
or
jno
add
data16
dec
add
insb
pop
inc
sahf
mov
cmp
subl
push
mov
insl
xor
mov
popa
lods
call
outsl
shll
xor
adc
into
shll
mov
mov
jl
testb
jg
mov
or
fadd
lret
adc
lds
pop
cmpsb
in
or
pop
mov
scas
xchg
out
jns
loope
sub
pop
adc
cld
ret
lods
or
mov
push
jo
xor
cli
push
jecxz
cmc
mov
mov
jo
push
je
xor
sub
xchg
sub
or
xchg
and
and
iret
filds
ret
xor
mov
cld
cwtl
dec
mov
leave
loop
test
push
pop
aad
pmaddwd
nop
cltd
and
nop
pop
inc
je
xchg
scas
add
pop
fdivp
inc
fisttpl
mov
mov
jno
popa
dec
jo
mov
mov
pop
push
and
inc
dec
das
rol
mov
cmpl
mov
xchg
and
dec
pop
push
sbb
xchg
or
inc
lret
add
push
rcrb
pop
xchg
push
pop
mov
and
int
jg
insl
xchg
stc
xor
mov
mov
xor
stos
jae
sahf
fildl
dec
ret
xor
testl
push
pop
or
adcl
sbb
xchg
into
lock
pop
sbb
into
adc
nop
clc
fstpt
neg
add
mov
push
addr16
xchg
and
faddl
into
push
ljmp
sti
jmp
arpl
outsb
xchg
cli
cltd
jmp
pop
add
inc
inc
mov
aad
repz
sub
or
cmpsl
andl
and
out
xor
pop
shrl
xor
inc
push
jne
sahf
ss
xchg
lods
fsubl
jmp
cmpsb
test
mov
dec
pop
call
fstp
add
nop
notb
jecxz
xchg
in
mov
jns
xor
fwait
mov
inc
xchg
cld
imul
test
mov
inc
jge
mov
inc
adc
shl
mov
cmp
rolb
fbstp
aaa
nop
mov
push
xor
rcll
push
lahf
out
jl
enter
in
ret
inc
jbe
jecxz
data16
sub
dec
out
sub
bound
out
sub
psraw
dec
pusha
cmpsb
pushf
mov
cmp
pop
xor
outsb
jb
add
mov
adc
add
pop
movsb
and
mov
dec
ror
dec
push
sbb
jmp
scas
adc
sar
daa
out
pushl
xor
movsl
insb
cltd
push
pop
push
or
in
push
loope
dec
int3
lret
insl
insl
scas
sbb
aaa
xchg
adc
mov
into
mov
cmp
adc
rcrl
pop
inc
cli
movsl
rol
inc
dec
inc
orl
dec
ss
fistl
pushf
push
idivl
xchg
push
or
sbb
mov
mov
jnp
cmpsl
fsts
shl
mov
mov
mov
and
cmp
dec
negb
mov
arpl
jnp
dec
lock
mov
xchg
push
lret
add
sub
mov
jecxz
adc
sbb
and
out
jnp
test
and
adc
das
jo
dec
pop
orb
jbe
ret
pop
push
or
dec
xchg
mov
mov
loop
mov
mov
js
add
mov
sti
pop
cmp
lock
pop
scas
leave
js
cmpsb
mov
or
test
jmp
fbstp
testb
cmpsl
adc
add
ljmp
outsl
movsl
jnp
dec
lret
cmp
mov
mov
sbb
cwtl
daa
sbb
cmp
fiaddl
imul
cltd
outsl
mov
cmp
jae
loope
sti
arpl
lods
jecxz
lret
xorb
cmp
hlt
pushf
test
shrb
orl
and
mov
push
out
cld
cmpsb
iret
adc
cmpl
cltd
popf
adc
push
add
rolb
gs
ja
mov
mov
dec
js
jae
dec
fstpl
or
int
stos
lock
cli
aam
cmpsl
or
pop
pop
cltd
out
dec
xor
sahf
sub
and
aas
xor
xchg
aaa
push
push
sti
pop
mov
imul
int3
imull
xchg
adc
cmc
cmp
adc
xchg
sbb
mov
jl
pop
mov
and
add
xchg
imul
addr16
fs
data16
ja
push
scas
gs
jbe
jne
fmul
mov
stc
adc
or
pop
popa
scas
xchg
mov
fisubl
pop
outsl
mov
jb
xor
xchg
inc
push
and
sbb
cmp
inc
call
inc
fmuls
mov
lds
jl
das
pop
pushf
filds
in
rorl
lods
sbb
in
cltd
cmpl
enter
int
aad
jns
stc
xchg
hlt
scas
popa
addr16
and
or
jb
push
mov
je
jns
mov
out
inc
into
xchg
pop
push
xchg
or
add
mov
aam
outsb
mull
scas
inc
fnstenv
bound
mov
in
orb
scas
in
inc
mov
daa
loop
dec
cmp
sbb
iret
add
out
jl
clc
stc
or
repz
aam
ja
ja
mov
in
mov
fidivrl
xor
jmp
dec
imul
in
sbb
push
add
inc
outsb
inc
sub
popa
push
psadbw
inc
cmpsb
cmp
hlt
xchg
and
out
mov
fs
mov
dec
cli
test
xacquire
and
aas
div
fstpl
mov
or
cmp
inc
loope
in
movsl
xor
mov
call
jns
push
in
inc
push
push
xchg
adc
or
sbb
jnp
inc
xorl
inc
loope
adc
sbb
stos
sahf
dec
adc
and
push
or
cmp
out
xchg
mov
lods
xchg
inc
neg
orl
xchg
clc
pop
rorl
pop
fs
imul
sub
aaa
and
pusha
hlt
dec
mov
ljmp
sti
pop
cmp
pop
adc
iret
lods
inc
movsl
fucom
leave
fistpl
ljmp
cmp
mov
sub
dec
stos
mov
gs
arpl
mov
adc
call
mulb
aad
xchg
xchg
mov
out
mov
icebp
shrb
jmp
xor
dec
testl
xor
inc
cmp
push
or
or
dec
add
dec
and
add
shll
arpl
mov
jle
pop
cmpl
add
stos
ja
push
mov
pusha
popf
addr16
insl
ds
loop
pop
cs
pushf
jp
or
daa
xor
mov
sti
add
dec
pop
push
nop
fdivs
inc
cmpb
shlb
test
out
push
inc
movl
mov
or
inc
imul
xchg
sti
lods
or
repnz
out
cmc
outsb
into
enter
xor
inc
mov
pop
inc
jb
pop
leave
test
sub
clc
or
adc
and
sbb
aaa
outsb
dec
xchg
test
sahf
sbb
mov
adc
out
int
dec
push
jg
inc
aas
popf
das
fiadds
notb
cld
iret
sub
pop
fdivl
pop
test
inc
sarl
cltd
xchg
aad
mov
xlat
push
fidivrl
out
and
stos
inc
lret
sarl
jge
mov
mov
pop
and
mov
push
decb
push
or
dec
testb
clc
xchg
cmp
popa
cmp
mov
mov
inc
xor
enter
orl
leave
dec
and
scas
mov
pop
lods
sbb
hlt
mov
and
jmp
repz
and
adc
pop
test
xchg
imul
lahf
ljmp
fadds
pop
sbb
adc
xchg
rcll
sub
cmp
gs
jg
into
arpl
cmp
ljmp
sbb
movsl
dec
and
std
cli
daa
arpl
call
dec
sahf
dec
and
rorb
and
add
movsl
popf
test
adc
hlt
stos
in
ds
adc
sti
fsubl
scas
and
push
xor
adc
loopne
int3
movsb
bound
mov
xchg
or
in
stc
repnz
dec
adc
push
mov
out
test
xor
fldl
push
faddl
push
or
roll
or
lods
lea
sub
cmp
xor
insl
mov
mov
xor
popf
sar
dec
outsl
inc
pop
xchg
cmp
sbb
and
adc
fld
lea
dec
push
pop
sti
or
sbb
cs
fs
dec
std
jbe
push
enter
mov
sbb
and
adcl
jo
ja
jg
into
cmp
divl
mov
jl
dec
xchg
inc
daa
mov
mov
xchg
dec
inc
aam
mov
scas
sbb
repz
in
pop
or
sub
push
mov
mov
loope
repnz
fcoms
notb
insl
insl
sbb
popf
sbb
adc
cwtl
push
gs
pushf
cmp
scas
cltd
mov
lods
ljmp
les
stos
daa
daa
out
loope
iret
lret
out
lret
movsl
bound
pop
adc
js
pop
add
shrb
imul
out
lds
cli
sbb
fs
fsubrp
in
dec
push
mov
cmpsl
jbe
sarl
sbb
scas
pop
iret
sub
adc
push
dec
dec
sub
mov
sbb
mov
stc
fstpl
fisttps
mov
xchg
cs
pop
xchg
out
negb
or
ret
xchg
es
addl
fnsave
jle
enter
and
adc
in
mov
mov
rclb
adc
lea
pop
jno
icebp
scas
mov
fistl
jle
xchg
bound
test
bound
push
cltd
test
out
out
into
fwait
jo
je
test
fdivrl
addr16
fwait
adc
xor
sbb
cmpsb
lods
sub
add
push
push
ret
out
inc
adc
pop
sbbb
adc
fdivrl
adc
pop
jb
adc
cmovl
inc
mov
sbb
mov
jbe
jbe
fbstp
push
ret
mov
out
mov
popa
push
cmp
mov
fcmove
pop
sbb
push
imul
aam
cmp
fstl
loop
mov
jle
mov
xor
push
push
lds
and
bound
and
mov
dec
loope
out
les
ret
aam
push
lods
xor
add
mov
cmp
cmpsb
jl
fisubs
mov
xor
mov
adc
loope
mov
sbb
xchg
xlat
adc
sub
jge
sub
pop
in
mov
insl
sbb
shrb
div
rcrb
cwtl
iret
and
sbb
mov
inc
aam
or
mov
push
dec
aam
ret
shlb
sub
call
sbb
mov
cmpsb
aaa
cmp
out
out
jmp
push
adc
cmp
xor
std
addr16
sub
mov
movsb
jbe
add
pop
xor
and
aas
and
lcall
push
xchg
mov
loop
shlb
mov
xchg
fsubrs
in
jae
cmp
inc
sbb
hlt
test
fstpt
push
mov
add
ss
movsb
mov
adc
iret
jmp
mov
out
test
and
push
test
ss
scas
sahf
mov
outsl
pushf
data16
mov
adc
xor
mov
test
imul
push
imul
ss
dec
add
loop
sub
xlat
in
sub
xor
aas
pop
jle
es
loop
cmp
pop
lahf
dec
and
in
push
outsl
bswap
les
aad
jns
xchg
cwtl
mov
pop
cmc
fs
mov
mov
push
push
add
ss
and
push
leave
cli
fcmovnbe
jno
jno
pop
xor
and
or
mov
aaa
mov
cmp
lahf
fcoms
xor
inc
cli
ss
cmc
negb
mov
jle
ja
loope
mov
aas
sub
or
cmc
pop
and
cmp
fisttpll
mulb
cmp
mov
pop
or
cmp
js
mov
sub
jbe
int
mov
nop
testb
add
leave
pop
adc
in
and
mov
or
ret
jne
inc
imul
jg
mov
or
adc
dec
xchg
fstpt
cmpb
test
xchg
pop
jbe
icebp
repz
std
cli
pandn
add
cmp
in
mov
mov
xchg
or
rcll
sub
mov
jne
in
push
lahf
mov
movsb
popf
mov
sahf
dec
jo
in
and
lods
mov
cld
push
lret
pop
lcall
push
or
je
jmp
adc
sets
and
mov
add
mull
lret
sub
lret
lcall
out
mov
call
cmp
pop
push
cmpsl
dec
sbb
fiaddl
xchg
jns
pusha
shl
inc
xor
push
stos
hlt
test
dec
sbb
push
dec
or
add
adc
sbb
je
and
pop
cmpsl
leave
jmp
fisttpl
cmpsb
push
leave
shl
xor
mov
cmpsl
lcall
pop
cmp
jecxz
sub
jne
ljmp
adc
stos
xchg
push
inc
scas
inc
sbb
mov
in
ficoml
repnz
or
xchg
mov
adc
or
addr16
mov
daa
mov
xchg
cmpsl
sbb
or
lcall
loope
nop
std
hlt
cmp
pop
loopne
data16
dec
addl
or
test
ja
pusha
repz
xor
push
fmuls
inc
adc
ljmp
pop
das
das
sub
repz
cli
mov
add
lods
xchg
ret
adc
loope
xor
xchg
xorl
pop
in
pop
gs
add
arpl
nop
out
rol
jp
divl
cmpsb
and
and
lock
inc
cld
push
push
ror
xchg
sub
arpl
enter
jo
push
dec
jecxz
mov
sti
rorb
pushfw
mov
lods
loop
insl
int
fmul
push
pop
push
sbb
mov
xor
add
lods
or
pop
popa
int
push
fisttps
mov
pop
shll
pop
shrb
xchg
outsb
dec
scas
mov
mov
sub
mov
lock
add
out
in
mov
inc
adc
pop
pusha
lret
les
divb
sub
sbb
push
popa
shl
mov
cmc
pushf
outsb
cmp
pop
jae
insl
fwait
mov
int
addr16
arpl
xchg
fcompl
add
js
inc
and
dec
cmp
jae
sub
mov
sub
enter
and
mov
inc
std
out
je
xor
nop
movsl
call
xchg
and
lret
and
out
sbb
mov
in
cmp
stos
xchg
or
je
pusha
bound
test
mov
pusha
xchg
ja
stos
mov
out
cs
push
fistpl
adc
imul
out
push
mov
adc
mov
lret
and
push
jbe
inc
mov
dec
mov
adc
adc
cltd
lcall
nop
ret
fsubrl
fsubl
mov
mov
jmp
push
addl
aaa
mov
jmp
pusha
sbb
ret
bnd
aad
jl
adc
jge
fsubrl
mov
push
icebp
mov
xchg
inc
pop
or
add
jo
jo
mov
sti
test
mov
adc
pop
aad
jae
in
lret
out
mov
sub
int3
lods
in
rclb
rolb
jle
inc
loop
sarb
dec
mov
inc
shlb
mov
dec
dec
cmp
outsl
arpl
in
lea
popf
sbb
lcall
es
stc
sbb
adc
stc
xchg
pop
shlb
sbb
nop
dec
adcb
mov
jle
mov
push
mov
pop
fidivrl
pop
sub
dec
scas
cmpl
and
aaa
mov
cmp
int
xor
frstor
fwait
lds
xchg
insb
jb
or
fisubl
mov
cmp
repnz
dec
mov
dec
dec
stos
mov
dec
sub
imul
mov
xor
cmpsl
ss
leave
fs
inc
pop
and
pop
data16
dec
mov
and
or
push
push
int
sub
adc
xlat
test
adc
inc
mov
cmp
stos
jp
in
shlb
jne
mov
xchg
aad
pop
push
and
xor
mov
mov
inc
sbb
insb
cmp
dec
scas
std
insl
jp
adc
cs
jns
mov
imul
jb
jb
jnp
movsl
or
push
sub
xchg
js
in
lcall
jns
jp
movsb
mov
fbld
fwait
nop
jnp
add
sub
ds
adc
add
mov
mov
out
cli
xor
dec
das
add
js
xor
and
aaa
xor
sub
cs
insl
in
add
sbb
xor
xchg
mov
ret
pop
in
ret
mov
sti
inc
jecxz
pop
rcl
mov
and
sbb
repnz
push
faddl
test
mov
ljmp
das
arpl
jb
jp
popa
mov
out
mov
fwait
out
ret
call
leave
pop
jge
addb
cmp
ficomps
dec
cld
fs
sar
outsl
pop
int
dec
mov
aad
xchg
into
mov
jl
push
push
sbb
sbb
cmpsb
test
sbb
lahf
pop
xor
lret
mov
pop
mov
dec
jg
push
dec
xchg
push
lods
and
mov
scas
and
dec
inc
gs
andb
clc
mov
cwtl
cwtl
and
sbb
push
shll
sub
dec
fdiv
push
and
imul
dec
mov
or
aam
ss
cmpsb
jecxz
mov
sbb
pop
in
leave
xchg
pusha
mov
inc
push
mov
push
gs
mov
cmp
jle
inc
pop
push
lock
insb
dec
fldt
sub
sub
nop
aad
adc
inc
hlt
hlt
imul
leave
sub
lret
mov
loope
arpl
or
xchg
mov
in
or
inc
mov
push
neg
or
xchg
lretw
maskmovq
notl
cmp
sahf
pop
cmp
cltd
jecxz
mov
inc
fucomi
xchg
fdivr
add
sbb
push
fwait
push
add
fwait
adc
int3
pop
xor
mov
sub
insl
mov
xorps
fs
push
iret
sub
and
sbb
pop
stos
ss
xchg
cmp
xchg
push
jns
nop
rol
cmp
mov
jno
stos
ret
test
jo
jge
lods
mov
jno
or
push
inc
sahf
jp
clc
sbb
mov
xchg
cmpsl
mov
int3
gs
sti
std
push
pop
scas
es
xchg
jge
lret
jb
scas
jnp
pop
mov
subl
xchg
dec
xlat
imul
shrb
int3
sub
pop
add
xor
insl
adc
jnp
aam
lret
fimull
pusha
jbe
sbb
adc
imul
cmp
sub
jnp
sbb
jp
mov
push
sti
arpl
jmp
and
and
aad
inc
sahf
mov
inc
mov
xlat
jo
dec
push
in
out
mov
push
sbb
iret
inc
xchg
sub
addr16
movsb
fs
mov
dec
adc
cmp
mov
cld
lock
mov
mov
sub
loop
jg
xor
jnp
stos
imul
push
rorb
test
hlt
repz
cmp
iret
out
rcl
push
cmp
and
cmp
mov
dec
leave
or
push
mov
and
xlat
jl
xchg
and
sbb
xchg
in
sahf
dec
dec
sahf
pop
mov
push
mov
sbb
das
jne
pop
outsb
shrl
xchg
arpl
jns
pop
xlat
xchg
cwtl
pop
andl
incb
ja
push
pusha
pop
je
add
leave
popw
rcrb
mov
popf
or
mov
sbb
or
adc
pop
pop
sbb
repnz
mov
xchg
insl
add
aas
test
push
arpl
xor
ret
mov
aad
fnclex
xchg
call
mov
int3
mov
mov
cmp
mov
pop
adc
and
sub
lret
mov
cmp
imul
xor
fcoml
push
insl
xchg
rcrb
mov
inc
lock
mov
inc
jo
mov
xchg
fimull
lahf
movsl
mov
xor
shll
shrb
cmp
mov
push
out
sbb
scas
sub
ret
mov
lret
mov
ja
adc
test
cmp
mov
cmp
popf
lret
sub
in
pushf
hlt
xchg
fdivrs
inc
xor
add
jae
jecxz
movsb
je
hlt
push
jnp
fwait
int
fs
mov
les
cmp
roll
enter
imul
out
add
add
mov
decl
and
fsub
jmp
dec
mov
push
sub
xchg
sub
sbbb
mov
pusha
aaa
sub
lock
lret
push
out
sarb
aaa
dec
adc
pushf
jl
xchg
das
xor
push
cltd
in
sbb
pop
je
dec
jmp
jae
jle
push
adc
or
xor
ss
les
icebp
xchg
mov
jae
jmp
push
mov
jb
and
icebp
test
daa
lods
xor
leave
pop
mov
add
cmc
and
push
mov
jne
push
add
loopne
push
shll
ret
dec
sub
insb
enter
mov
adc
testl
mov
enter
daa
mov
je
addr16
mov
test
leave
dec
mov
inc
dec
cmp
mov
add
xchg
rcrl
push
cmc
cmp
mov
jno
test
and
fsubr
cmp
stos
ljmp
popa
lahf
insb
insb
push
ss
stc
testb
in
or
insb
fmul
lods
xor
ret
push
mov
add
xchg
lods
mov
cmc
jg
xchg
mov
aam
add
adc
jnp
inc
mov
sub
mov
xor
mov
sbb
repnz
std
xchg
sub
add
sub
stc
adc
jmp
mov
jecxz
lea
xchg
mov
lret
sbb
mov
xor
daa
insl
sbb
nop
push
mov
scas
mov
out
adc
inc
bound
sub
xchg
jne
mov
mov
into
mov
sti
out
and
jbe
dec
cmp
mov
pop
inc
push
sbb
test
xchg
jmp
add
rdmsr
cwtl
je
popf
cmp
cmp
movsl
arpl
aam
fiadds
sub
arpl
xchg
mov
xchg
out
je
jl
dec
das
push
push
cmp
jg
notl
lcall
fcmovnb
jnp
push
std
test
pop
iret
mov
push
jg
mov
add
or
sbb
pop
cmp
inc
inc
int3
out
sub
add
mov
lds
shl
addr16
lods
push
jno
dec
in
sbb
inc
scas
push
nop
cld
sbb
test
pop
in
xor
hlt
movsb
aam
fistl
movsb
adc
and
andb
repnz
imul
pop
mov
cld
shrb
sbb
int
fadd
mov
icebp
and
mov
ss
push
pop
cwtl
cmp
dec
jno
popa
repz
in
sub
lret
jae
out
das
in
inc
xchg
xor
jmp
addl
sti
xchg
mov
push
mov
in
dec
sub
sbb
sub
mov
popa
pop
pop
xchg
hlt
add
test
jne
add
add
bound
xor
mov
stc
push
pop
mov
fwait
rorl
or
cmp
sub
push
orb
imul
inc
sbb
cmp
lds
and
repz
insl
jecxz
inc
sbb
popf
in
cs
jne
adc
xchg
ret
lock
call
inc
inc
adc
cmpsb
mov
std
sahf
dec
insb
lret
inc
xchg
push
push
mov
movsb
mov
call
cmpl
stos
inc
lcall
movsl
sub
mov
bound
jecxz
in
out
iret
push
xchg
and
fwait
mov
inc
addr16
sub
std
ljmp
test
mov
inc
pop
xchg
cmc
inc
test
inc
test
xchg
ret
pusha
lods
pop
sbb
add
sub
js
stos
fcoml
pushl
in
xorl
pop
cmp
cmpsl
mov
mov
cmpsl
and
cld
lock
fincstp
mov
orl
push
seto
movsb
bound
je
pop
fimull
sbb
int3
xchg
decl
adc
jecxz
jo
mov
fld
push
movsb
jecxz
adc
loope
imull
jl
fdivrl
icebp
inc
inc
clc
adc
ljmp
fildll
cmpsl
decl
iret
mov
dec
jp
or
mov
push
das
mov
cmp
arpl
adc
and
dec
lahf
or
push
les
repz
loopne
mov
mov
add
mov
iret
in
std
sbbl
jmp
push
pop
and
or
lds
cwtl
lret
mov
pop
pop
jg
hlt
pop
and
das
mov
push
and
insb
push
mov
mov
pop
xchg
mov
or
lahf
jmp
mov
cld
aaa
leave
add
mov
and
scas
incb
sahf
loopne
mov
idivl
sbb
add
clc
push
sub
jp
mov
sub
jp
cltd
dec
ss
push
mov
dec
add
adc
xor
cmp
js
mov
mov
test
shll
cltd
cltd
adc
mov
sub
pop
xor
pop
dec
mov
out
enter
pop
push
in
test
idiv
ljmp
out
test
aam
add
or
fs
mov
rorl
xor
nop
sub
leave
cmc
jne
sti
push
divb
jmp
jp
and
cmp
and
scas
inc
rorb
add
aas
push
mov
pop
std
adc
notl
jp
addr16
mov
iret
je
outsl
cld
or
push
jae
mov
scas
mov
push
mov
fcompl
mov
ss
and
es
jae,pn
rolb
out
mov
icebp
ss
cmp
rolb
xchg
pop
pop
mov
bound
into
daa
adc
jl
fcmovu
lock
mov
repnz
sub
pop
mov
mov
pop
nop
cmp
inc
int
xchg
sbb
mov
jle
mov
fildll
repnz
std
inc
adc
mov
adc
scas
pop
xchg
mov
das
sbb
push
inc
cmpsb
stc
cs
xchg
fists
pop
out
aas
int
inc
in
inc
xorb
add
arpl
dec
in
push
mov
fmul
leave
dec
cmpsl
sbb
das
std
pop
fwait
lret
mov
add
inc
xor
and
cmp
or
and
mov
or
stos
cmpsl
pop
int3
jge
mull
xchg
ja
jb
mov
push
fldenv
mov
popa
in
cmp
test
lret
in
xchg
adc
sbb
rorl
stos
pop
sti
cmpsl
fstl
sub
mov
ret
cmp
jb
rol
inc
mov
push
inc
mov
scas
mov
shll
cld
cmpsb
imul
aaa
aad
aas
push
fyl2xp1
xchg
or
and
int
movsb
sub
lahf
jg
rclb
out
and
int3
repnz
xor
jns
lods
dec
in
and
sti
jmp
jae
mov
gs
xor
push
xchg
hlt
inc
notb
jmp
and
sbb
pop
xor
pop
hlt
push
mov
int
mov
pop
fisubrs
arpl
lods
sub
adc
outsb
cmpsb
sub
or
sub
movsb
aas
imul
jp
add
cltd
ss
jecxz
ret
push
lcall
or
push
lcall
mov
out
je
pop
inc
stc
imul
addr16
sub
pop
pushf
cli
stc
xor
xor
pop
add
add
ret
cmpsb
xor
sbb
lahf
je,pn
jne
stos
in
lds
adc
cltd
and
mov
push
push
mov
lret
setns
xchg
mov
imul
sbb
pop
imul
in
loope
test
lcall
pushf
sub
jge
mov
aaa
out
iret
sti
out
movsb
adc
push
push
jl
mov
or
cmp
push
rcl
pop
pop
push
mov
dec
pop
mov
mov
jg
test
and
cmp
cs
mov
mov
fwait
or
xchg
movsl
mov
lds
cmp
push
mov
cltd
jbe
loop
test
jo
sbb
lock
mov
shll
inc
aas
xor
dec
add
iret
inc
xchg
xor
mov
mov
adc
and
push
std
inc
imul
cld
je
jbe
inc
jmp
push
ficompl
lods
dec
shl
pop
xchg
paddsw
dec
inc
xchg
stc
mov
push
lret
mov
jnp
pop
xchg
inc
xchg
pop
sbb
inc
cmp
sbb
dec
mov
cwtl
enter
and
repnz
cwtl
in
pop
lcall
dec
inc
inc
icebp
push
lea
in
sbb
pop
lea
dec
jg
movsl
in
adc
rcl
in
fiadds
cmp
in
and
inc
jp
sbbb
sbb
mov
cmpb
mov
out
cli
ja
test
or
pop
dec
lods
jae
addb
mov
out
int3
test
ficompl
lret
and
adc
and
bound
mov
dec
xchg
fistpll
pop
hlt
outsb
cmc
notl
inc
sahf
jp
sub
sub
imul
dec
mov
pusha
dec
jae
fcomi
lahf
fld1
mov
ljmp
das
js
call
jecxz
insb
pop
mov
cltd
cmp
sub
nop
mov
inc
and
rorb
or
movsl
movsl
sub
out
popf
test
lods
and
xor
inc
leave
in
pushf
and
dec
aad
in
lcall
rorb
sub
mov
push
jmp
inc
jo
inc
pop
clc
dec
cmpb
out
in
loopne
pop
jbe
sti
pop
icebp
orl
test
jns
aad
sar
adc
xlat
stc
jmp
sub
cmp
outsb
ja
les
push
add
and
lcall
into
pop
fiadds
mov
shl
xchg
xchg
mov
xor
in
out
sbb
dec
pop
xorl
shl
or
jle
int
mov
aas
sbb
cmp
xchg
decb
lcall
or
jns
aam
dec
imulb
out
xchg
aaa
xchg
pop
aam
xchg
ds
push
mov
ljmp
push
daa
out
out
and
inc
push
hlt
insb
cld
shr
adc
mov
dec
fcmovb
ja
jle
shrl
lahf
aas
ret
pusha
ret
call
data16
movsb
mov
jb
scas
xor
sbb
jae
push
out
adc
fimull
xchg
add
cli
xor
iret
imul
fimull
xor
in
and
and
sbb
int3
std
dec
mov
out
xchg
xor
jmp
xchg
ret
fwait
xlat
fmuls
and
outsb
mov
pop
jl
mov
adc
mov
hlt
xor
ret
mov
mov
or
adc
arpl
pop
add
pop
aad
mov
es
cmp
scas
sub
fwait
pushf
insb
mov
mov
test
shl
scas
inc
mov
rclb
in
bound
loop
aam
and
push
or
cmpsl
mov
pop
in
xchg
push
loopne
sub
push
sub
mov
jl
xor
lcall
into
mov
mov
sub
out
loopne
das
lcall
rorb
jb
out
in
add
cmpsb
xchg
daa
out
dec
dec
mov
fwait
mov
lcall
mov
jmp
leave
addl
sbb
ds
xchg
adc
cmc
movsb
mov
lahf
mov
add
lods
and
fists
dec
inc
cmp
orb
mov
outsb
cmp
jo
pop
mov
shr
xchg
outsl
pop
jg
jns
xor
shrl
xchg
scas
adc
mov
test
and
scas
in
cld
mov
daa
jg
mov
cld
stos
inc
int
flds
jecxz
xchg
ss
jno
in
adc
mov
ss
inc
test
aad
ffree
rclb
fsts
lcall
inc
dec
mov
clc
mov
inc
subb
data16
pop
dec
cltd
cmp
sbb
and
movsl
mov
or
cmp
mov
test
xor
in
xor
mov
mov
daa
lret
pop
adc
mov
out
sbb
sbb
and
sbb
lahf
enter
mov
test
and
mov
sub
jmp
adc
lea
mov
adc
mov
sbb
pop
aad
imul
testb
mov
aad
cmpsl
addr16
push
addr16
adc
in
push
ss
push
fimuls
fstpt
jp
aam
dec
filds
lds
mov
js
xchg
fldt
push
in
lcall
outsl
pop
fwait
pop
stos
push
push
popa
jle
add
jnp
mov
mov
ja
mov
and
movsl
dec
xor
add
fnstsw
jnp
and
pop
or
lahf
sub
inc
mov
repz
adc
loopne
in
pop
pop
jmp
les
clc
mov
stos
xchg
push
mov
xchg
leave
xchg
mov
roll
sub
int
jge
negl
lret
clc
mov
shll
xor
inc
sbb
and
jae
jnp
push
sbb
dec
mov
lock
movsb
push
je
aam
rcr
or
dec
mov
je
rolb
xchg
dec
lret
push
lret
pusha
repnz
inc
test
stos
mov
sbb
dec
mov
decl
dec
fisttps
iret
data16
rcll
pop
fstl
sub
cmp
mov
scas
ror
jae
fsin
test
push
sbb
shll
das
xchg
ds
dec
pop
imul
lds
pop
cmc
jb
pop
std
cmp
sub
jl
shrl
lods
push
lcall
lea
sarl
fisubrl
cmp
push
mov
divl
xchg
out
insl
aad
divl
xor
movsl
cmpsb
nop
mov
loope
setle
jg
and
mov
in
and
push
lret
dec
or
fwait
rol
push
loop
dec
jbe
ja
pop
sub
push
in
sbb
adc
push
jmp
stos
cmp
mov
in
cli
mov
gs
pop
rorl
outsl
stos
cli
adc
fisttpl
push
das
lcall
cmp
inc
mov
scas
inc
mov
jg
mov
pop
outsb
jne
xchg
pop
xor
pop
xor
pop
imul
dec
cmpb
scas
adc
orb
push
loop
cmc
ficompl
imul
fsubp
mov
xlat
test
in
jmp
dec
push
push
fnsave
fs
pop
pushf
cmp
aaa
jmp
call
pusha
lahf
xchg
jge
mov
jmp
sub
adc
lea
adc
jle
xchg
ret
cmpl
pop
clc
out
mov
pop
js
sbbb
int
js
jae
pop
cltd
mov
inc
mov
pusha
cwtl
xor
jo
fistpll
jo
ds
popf
dec
sub
jmp
push
inc
mov
cld
cltd
ds
in
sub
sahf
pusha
imul
sub
test
aaa
je
mov
adc
mov
mov
pop
or
mov
jecxz
stos
xchg
and
ret
inc
fistpll
mov
push
dec
jb
cmpsl
cmp
dec
cs
mov
sbb
jne
pop
sbb
jb
mov
cld
mov
inc
in
divl
loop
inc
xchg
shlb
in
push
leave
subl
add
dec
outsl
or
adc
js
inc
mov
or
pop
clc
shl
test
pushf
test
cmp
xchg
lods
sahf
loope
or
jbe
mov
ficompl
sub
cmpsb
das
bound
ds
push
sub
mov
fmul
adc
xchg
or
xchg
mov
xor
iret
sbb
pop
sbb
dec
push
jl
mov
dec
jne
in
popf
pop
movsl
inc
pop
inc
lret
jnp
je
insb
mov
lret
adc
xchg
pop
fstl
and
popf
jg
cwtl
mov
mov
outsb
dec
push
pusha
addb
enter
data16
ror
pop
mov
ficomps
jne
xchg
push
sarb
test
sbb
adc
or
dec
out
fwait
shlb
mov
fs
jp
sub
xor
jg
xchg
data16
sbb
dec
or
mov
mov
jge
nop
ljmp
push
dec
movsb
cltd
sahf
je
inc
cld
xor
outsb
rclb
push
lahf
outsl
jnp
pop
or
sub
inc
test
push
sbb
xor
push
add
sub
filds
hlt
mov
or
repnz
sbb
inc
cmc
cwtl
sub
add
push
sub
push
inc
ret
cmp
fdivl
sbb
jle
pop
dec
fsubrs
cmp
iret
sbb
test
dec
sbb
xchg
in
pop
ret
insl
jno
lret
cld
std
imull
jl
mov
adc
cmp
dec
push
ds
mov
aas
xor
out
mov
adc
pop
shlb
fnsave
repz
push
shlb
int
jecxz
mov
xchg
mov
and
cmp
jae
out
mov
js
movsb
sub
mull
pushf
ret
pop
in
or
insb
aad
dec
sub
jg
test
sahf
movsb
dec
xchg
cld
lock
lcall
mov
jne
fwait
dec
rcl
loope
ficoms
out
jle
sub
mov
gs
push
or
test
cmp
iret
pop
pop
xchg
cmpl
add
scas
mov
cmp
repnz
das
or
pop
push
es
pop
jl
xchg
dec
fcmovne
pop
sub
mov
ret
mov
pop
add
sarb
fcmovnbe
out
sub
rcrb
icebp
loope
test
sbb
mov
aam
jl
xor
dec
push
test
push
negl
inc
in
shrb
jno
sbb
cltd
mov
adc
int
ret
inc
inc
mov
xor
push
jp
mov
rcrb
mov
xlat
cmp
jae
push
stos
mov
jle
jo
pop
sub
xor
mov
cmp
dec
stos
cmpsl
push
mov
mov
and
mov
cwtl
add
push
push
shlb
outsb
jle
hlt
sub
leave
and
sub
jb
fistpl
bnd
adc
mov
aad
xor
mov
loopne
es
sbb
mov
sub
pop
push
cs
movsb
sub
ret
mov
mov
mov
cwtl
aad
das
mov
shll
ret
cmpsl
sub
dec
and
sub
cmp
push
imul
in
push
std
pop
aam
and
jle
movzbl
outsl
rorl
sub
mov
addb
std
stos
mov
xchg
ret
lret
insb
mov
cmp
jecxz
sub
in
scas
rcl
pop
jge
ja
add
jne
xor
lcall
xor
push
pop
bound
mov
mov
or
xor
push
push
mov
xor
hlt
in
cld
xlat
stos
data16
repnz
cwtl
je
loop
mov
mov
flds
or
push
popf
jecxz
inc
mov
lahf
lock
sub
jge
movsb
in
cmpsl
cwtl
lods
inc
inc
lcall
adc
cli
push
mov
mov
insl
add
insb
sbb
push
inc
imul
mov
add
xchg
pop
sbb
test
pop
xchg
test
mov
mov
js
pop
add
lods
cli
and
imul
push
mov
xchg
lahf
pop
and
jl
js
lods
pop
inc
sbb
js
adc
adcb
cmp
or
pushf
xor
pop
push
mov
aad
mov
jmp
addb
mov
mov
jl
xor
lea
movsb
not
or
mov
mov
lds
ss
shrl
inc
aas
aam
jmp
mov
decb
jl
add
loop
sub
jge
scas
test
popa
mov
xchg
lods
dec
andl
decl
jno
xchg
inc
mov
xor
rcl
mov
jge
push
adc
mov
aad
stos
inc
mov
stos
insb
mov
repz
sbb
adc
lret
loopne
add
xor
jmp
push
cmp
cmp
push
xchg
pop
cld
xor
xchg
push
jne
negb
aaa
or
and
jns
cmp
mov
mov
fs
mov
dec
inc
push
adc
andl
add
cmpl
cmc
push
mov
push
xchg
nop
xchg
add
aam
jno
push
je
xchg
mov
push
inc
or
mov
xchg
push
adc
push
out
data16
cwtl
adc
or
sub
pushf
fists
ss
adc
js
mov
push
out
xchg
lcall
lock
nop
aas
mov
out
mov
pop
jne
dec
rorb
movsb
jg
or
jge
sub
sahf
ret
mov
mov
cld
and
add
or
xor
testl
stos
sbb
pushf
mov
pop
jge
pop
scas
repnz
pop
push
pop
nop
outsl
jb
mov
xchg
push
cmpsl
rcrb
sbb
and
mov
dec
popa
xchg
sbb
push
xor
movsl
into
ss
mov
dec
sbbb
daa
or
das
sub
push
sbb
shlb
push
xchg
stc
or
dec
rorb
call
and
stos
jnp
out
inc
xchg
push
fdivl
jg
dec
xor
sub
outsb
sbb
and
xchg
inc
cltd
mov
pop
cmp
roll
pop
arpl
or
mov
stos
lret
pop
outsb
xchg
stc
push
mov
popl
or
push
in
jg
jmp
and
negl
pusha
cmp
pop
fildll
pop
movsl
mov
cmp
or
arpl
test
mov
insl
cmp
jne
jmp
mov
out
fwait
mov
stc
jle
xchg
ja
subb
mov
ja
fnstenv
jge
sub
cmpsl
test
push
mov
and
cltd
arpl
dec
ljmp
roll
mov
adc
push
int
sub
pop
or
test
or
and
fs
popf
dec
dec
mov
push
popa
stos
ljmp
mov
xchg
fstpl
test
in
xor
push
sbb
sub
jo
ja
dec
xchg
or
imul
lea
jp
shlb
xor
inc
jns
int3
inc
mov
fcmove
leave
xor
push
test
add
call
hlt
repz
jle
push
xchg
add
xor
movb
push
clc
xor
pop
test
stos
lods
and
icebp
mov
ret
shll
cmc
ds
cmpb
cmpsb
mov
or
jbe
pop
xor
pop
mov
cld
loopne,pt
mov
adc
push
cmp
out
jg
jb
icebp
and
cmp
xor
jae
es
jmp
xchg
lea
mov
mov
cmp
cwtl
pop
out
iret
in
and
dec
inc
xor
cmpsb
mov
adc
add
add
mov
push
mov
popf
mov
out
push
xlat
fdivrs
pop
pop
fs
pusha
pcmpgtd
repnz
xor
mov
dec
in
stc
bnd
pop
fbld
sub
sub
lods
shlb
mov
dec
and
test
cwtl
outsl
in
and
mov
jmp
sbb
and
fldcw
je
push
inc
jl
mov
mov
push
aas
lret
repnz
mov
pop
jno
out
add
jnp
pop
testb
pop
sub
popf
dec
sub
adc
sti
pop
out
push
xchg
push
insb
pusha
sbb
imul
outsb
testb
push
and
and
das
mov
test
in
jge
in
cmc
inc
pop
aad
dec
xchg
faddl
add
jne
mov
leave
push
dec
adc
cmpsl
adc
inc
loope
mov
xor
sbb
movsb
arpl
cmp
std
cmp
insl
cltd
mov
or
fwait
push
mov
mov
push
push
daa
mov
xchg
pop
adc
dec
std
mov
cmp
sbb
call
scas
xchg
fdivl
pushf
mov
stos
mov
out
loop
imul
pop
or
push
arpl
mov
push
and
lret
fists
xchg
xor
mov
repnz
mov
aad
fisubrs
xlat
add
testb
jp
pop
lahf
jne
push
out
pop
jnp
xor
pop
mov
outsb
orb
aaa
iret
pandn
mov
lret
jg
mulb
fidivrs
aaa
fadds
and
xchg
ja
xchg
inc
ss
dec
mov
mov
or
daa
sub
pop
daa
in
jmp
push
es
push
mov
test
mov
cmp
das
mov
xlat
push
jo
pop
inc
and
xchg
lcall
jle
jb
mov
xor
fcompl
adc
shlb
imul
out
push
pop
sbb
jmp
push
shll
nop
jmp
pop
xchg
inc
xor
imulb
xor
in
mov
divb
popa
lea
test
stc
rcll
adc
mov
in
push
lahf
lods
mov
lock
hlt
pop
test
push
dec
add
fisttpl
out
add
movl
sahf
xchg
pop
clc
xchg
int
gs
lret
insl
lds
das
jo
dec
pop
push
sub
aas
xchg
or
dec
lods
jae
push
or
cmc
mov
fs
repnz
adc
cmpsb
leave
mov
hlt
inc
imulb
add
mov
mov
pop
jg
popf
dec
pop
inc
mov
mov
inc
pop
popf
or
push
mov
jae
lcall
es
daa
test
outsl
xor
int3
ss
inc
or
sub
push
or
shrb
mov
or
outsl
ljmp
inc
leave
jb
repz
cwtl
pop
das
mov
popf
and
mov
add
or
adc
dec
push
mov
pop
cmp
std
repz
mov
xor
scas
pop
ja
jecxz
sub
lret
loopne
pop
sbb
pop
mov
ljmp
pop
mov
das
clc
nop
movsl
repz
out
les
mov
sbb
mov
cwtl
insb
aam
sbb
jno
xchg
out
hlt
shrl
rorb
add
loopne
cwtl
rclb
daa
add
jp
push
cmp
inc
xchg
xchg
enter
jnp
iret
ds
mov
push
test
xchg
xor
push
adc
test
dec
sub
mov
adc
jnp
sub
and
push
insl
jne
aam
mov
fprem
movsb
and
testl
mov
ret
mov
shlb
pop
inc
fwait
push
mov
pop
sarb
and
push
clc
dec
sahf
push
lcall
mov
jo
dec
xor
jle
es
cmpsl
xor
jcxz
cli
mov
pop
lret
mov
dec
dec
enter
dec
pop
push
mov
push
jb
push
or
jg
outsb
pop
and
das
sub
cltd
cmp
icebp
and
mov
dec
xchg
xlat
std
inc
and
clc
cmp
add
repz
xchg
shlb
ljmp
outsl
push
stos
push
movsl
xor
dec
repnz
lcall
or
xor
dec
push
inc
fsubl
push
and
int3
xor
int3
in
xlat
cmc
add
out
arpl
outsl
mov
pop
pop
jae
ror
cmp
mov
sahf
das
fld
mov
jb
jle
mov
xchg
insl
loopne
leave
jns
sub
in
sub
scas
ja
fsubs
lds
mov
out
dec
mov
mov
out
stc
push
cmp
cmpsl
fsubr
pop
ljmp
sub
xor
push
and
je
jae
pop
cmp
stc
outsl
aad
inc
add
in
lock
dec
fwait
jae
iret
dec
mov
pop
out
mov
adc
jecxz
pusha
inc
fildl
fcmovnu
popf
scas
pop
insl
lods
sub
imul
pop
inc
inc
jno
cltd
test
or
das
cwtl
jg
push
xchg
and
outsl
xchg
sbb
push
rcrl
nop
loop
adc
dec
mov
mov
inc
adc
je
xchg
add
or
sub
xor
mov
xchg
imul
lcall
xchg
jno
aas
out
mov
pop
mov
lahf
aas
in
adc
xor
decb
test
xchg
lock
cwtl
out
call
pop
jno
ds
bound
push
xor
adc
pop
fmuls
aaa
ret
imul
dec
jo
insb
dec
sbb
push
rclb
or
adc
adc
insb
mov
lret
mov
and
cld
inc
adc
xor
test
cmp
mov
lds
jo
adc
and
push
pop
adc
cmp
cmp
int3
jl
in
fs
lret
add
xchg
out
sbbb
xor
xchg
sbb
sbb
pop
shrb
jno
fstpl
push
test
ret
out
ret
sbb
loopne
mov
or
es
in
std
sub
inc
mov
popf
and
jnp
pop
ljmp
shll
dec
or
adc
aad
pop
les
shrb
xchg
mov
dec
popa
sbb
push
lods
out
pop
or
push
xlat
mov
sbb
and
jge
dec
outsl
dec
nop
daa
jns
jp
popf
cmc
xchg
repz
sub
insb
dec
test
pop
push
fisubrs
data16
test
pop
mov
rclb
jecxz
idivl
or
jge
add
pop
lahf
pop
ficoml
sub
mul
rcrb
mov
mov
lods
push
dec
mov
out
xchg
outsl
add
dec
jb
insb
mov
or
push
das
in
pushf
mov
push
jno
adc
ds
ret
inc
jg
cld
sarb
cmp
je
and
scas
xchg
inc
adc
lcall
push
pop
mov
adcb
push
jg
dec
mov
cmp
popf
clc
ss
add
pop
call
fwait
pop
mov
aam
cmp
mov
negl
pop
fcomp
mov
mov
adc
andl
inc
or
shr
mov
fisubrs
pop
ret
xlat
mov
sahf
pop
sub
xchg
in
adc
scas
out
mov
mov
sub
jnp
push
rcrb
push
inc
mov
inc
xchg
stos
cmp
fwait
shrl
divl
or
aaa
popf
loopne
dec
outsl
enter
mov
cs
xchg
inc
outsl
mov
ss
mov
push
dec
les
mov
out
push
pop
or
mov
jg
pop
es
push
fsub
ret
ret
icebp
imul
in
movsb
jmp
cmp
add
adc
jecxz
addr16
push
ret
mov
push
push
cmp
repnz
addr16
repz
push
push
cmp
push
out
jbe
xor
adc
je
jl
insl
dec
ret
sbb
outsl
in
dec
rcrl
lret
pushf
or
hlt
mov
into
enter
and
je
mov
mov
lds
push
idiv
scas
xor
les
fiaddl
lcall
leave
ds
bound
cmp
std
push
or
lret
stos
hlt
cmpsl
icebp
pop
jnp,pt
xchg
cmpsl
aad
hlt
inc
pop
fsubs
adc
pop
cmp
push
xchg
adc
in
sub
pop
inc
aam
jo
mov
jbe
ja
add
inc
jle
xlat
mov
sbbl
insb
icebp
xor
sbb
mov
movsl
sbb
sbb
adc
out
mov
lahf
fisubl
fldenv
dec
scas
push
xor
sbb
sbb
xchg
mov
or
mov
pop
and
jg
mov
push
nop
in
jle
mov
mov
push
inc
out
leave
mov
jnp
mov
jl
mov
cmovge
cwtl
dec
repnz
fs
adc
mov
popa
daa
outsb
jne
push
and
mov
fsubs
adc
xchg
call
xor
adc
xchg
mov
int
mov
ds
xchg
add
inc
dec
jecxz
loop
xchg
addr16
clc
dec
sbb
movsb
mov
xchg
add
xor
movsb
jmp
pop
int
inc
imulb
jl
adc
pop
aam
data16
mov
popf
pop
pop
repz
adc
jo
imul
pop
pushl
or
aaa
and
lock
pop
clc
stc
push
gs
pop
xchg
arpl
into
clc
pop
pop
cmp
or
dec
and
repnz
jmp
lahf
xor
inc
xchg
pop
jns
addr16
cwtl
adc
mov
xchg
cmp
xor
sarl
jp
mov
mov
pop
cmp
pusha
scas
or
sbb
adc
cmp
adc
jmp
dec
hlt
inc
adc
pushf
pop
mov
jae
mov
and
pusha
pop
pop
stos
fsubp
shl
loop
dec
push
pop
xor
sbb
sbb
push
dec
add
dec
test
cld
ficoml
sbb
push
jl
jge
cld
sbb
ss
out
mov
js
cmp
fistpll
mov
adc
push
mov
cmp
std
jmp
popl
inc
inc
adc
xchg
mov
scas
mov
mov
aad
add
jg
out
repnz
xchg
push
cmp
mov
inc
int
xchg
jno
and
or
lcall
jle
mov
outsl
cmp
movsb
sub
jno
insb
pop
and
or
mov
call
stc
lret
jle
cwtl
shrb
adc
adc
mov
add
push
jbe
in
add
sbb
mov
int
mov
imul
push
and
cmc
cmp
lcall
loope
shrl
test
imul
cmp
xorb
ljmp
sub
popa
jnp
pop
push
fs
or
jle
testl
test
pop
mov
mov
inc
jl
outsb
mov
stos
adc
jne
xor
mov
mov
xor
mov
lcall
lahf
test
sub
push
fwait
cmp
rcrl
pop
xchg
jno
subl
sbb
test
in
pop
insb
rcl
cltd
add
addb
mov
or
cmp
incl
jno
push
data16
gs
xchg
cltd
or
and
xrelease
inc
and
mov
lret
cmp
std
adc
mov
orl
jbe
fidivrl
xchg
in
movsb
je
push
es
jle
xchg
jbe
roll
add
inc
and
or
fimull
movsb
jp
push
sub
xor
jno
jmp
scas
sbb
scas
or
inc
sub
cmp
stos
inc
xchg
mov
jo
or
gs
inc
mov
sub
pop
ficoms
popa
sbb
inc
iret
call
xor
je
xlat
xchg
gs
test
int3
mov
stos
mov
cli
and
or
lods
sbb
and
mov
xor
jae
test
push
negl
mov
fscale
and
mov
pop
fs
pop
pop
inc
adc
pop
xchg
pop
pop
lahf
cmp
loopne
sbb
je
push
fnstenv
stc
jns
pusha
inc
aaa
imulb
pushf
mov
fsubp
add
pop
out
fiaddl
shlb
jb
mov
pop
sbb
sbb
ret
fmuls
in
stos
mov
push
pop
and
ss
sbb
mov
pop
add
push
xchg
test
sti
pop
loope
leave
cmp
fs
mov
mov
add
sub
int3
rolb
xchg
inc
jg
mov
ljmp
lods
sub
mov
lock
out
adc
movl
and
into
add
cmp
or
aam
pop
xchg
mov
pop
adc
dec
jb
cmp
fildl
mov
pop
ja
inc
mov
xchg
cltd
ret
sti
cmp
inc
aaa
mov
or
frstor
jecxz
leave
cmp
xor
mov
cmp
loope
mov
and
push
rcrb
xor
bound
call
jnp
div
sub
xchg
dec
mov
jb
jb
mov
xorb
adc
setnp
mov
push
repnz
aam
sbb
lods
dec
cwtl
scas
adc
loopne
lcall
lcall
cwtl
pop
iret
cmp
xlat
or
mov
push
add
sti
fwait
les
ret
jo
ss
loop
mov
sub
push
inc
inc
arpl
dec
inc
sahf
xor
scas
dec
fwait
mov
movsb
nop
mov
das
mov
jmp
movsl
into
adc
sub
roll
cld
cmc
sub
das
cwtl
ret
sub
ss
cli
pop
outsl
sub
sub
psubsb
mov
add
psubusb
jmp
cmp
inc
jp
fsts
pop
mov
bound
mov
mov
lock
inc
femms
mov
cmp
fidivl
push
hlt
add
sub
sahf
addr16
mov
fidivrl
mov
fucomip
shl
ja
or
popl
cmp
or
negb
adc
mov
jp
and
mov
cmc
lcall
ret
outsb
mov
fld
cmc
adc
inc
mov
mov
xor
inc
addb
pushf
mov
fisttps
repnz
nop
in
sarb
out
seta
or
xor
mov
loop
decl
push
fs
jmp
xchg
push
test
xchg
or
adcl
inc
jp
in
jno
arpl
sub
popl
arpl
mov
dec
push
in
imul
mov
cmp
stos
cmpl
into
ljmp
xchg
mov
idivl
pop
xor
insb
cmp
xor
arpl
mov
sarb
filds
test
cmp
test
dec
in
push
gs
push
addb
sahf
gs
xchg
pushw
rcrl
push
test
test
popf
add
inc
mov
fldt
push
loop
filds
xchg
push
push
or
stc
sbb
jo
scas
aam
out
jns
push
outsb
cmp
mov
aam
out
xor
and
lret
and
pushl
jns
and
xor
push
cs
jle
push
jmp
insl
and
pop
lods
pop
dec
lcall
insl
or
add
test
cmpsl
daa
dec
mov
aam
pushf
mov
add
mov
adc
jecxz
lea
jbe
mov
lea
aad
pop
addr16
cmp
add
jns
mov
dec
aas
or
jecxz
fstl
test
pop
outsl
mov
ret
aad
sbb
stos
and
shrl
in
pop
pop
or
cmp
les
inc
add
jge
pop
movsl
ja
out
int
stos
mov
aad
hlt
divb
js
pop
add
lock
movsb
mov
xchg
outsl
xchg
cld
push
outsl
outsb
cmp
not
inc
loop
out
out
push
jp
shlb
es
cmpsl
cmp
arpl
cmc
sub
notb
or
xor
lret
addb
inc
push
inc
outsl
xor
cmc
xor
adc
leave
nop
fs
jle
ds
jge
aad
mov
clc
aas
lcall
or
add
lret
mov
cld
scas
mov
lret
dec
lret
ffreep
les
push
xchg
repz
aam
mov
xchg
aaa
fwait
ss
repz
xor
dec
addl
cmp
cs
sub
and
push
daa
sbb
ficoml
pop
mov
mov
dec
mov
xchg
mov
lods
outsl
adc
dec
mov
and
dec
lcall
push
js
push
subl
adc
cvtps2pd
sbb
and
or
xchg
push
mov
push
dec
ja
leave
jl
gs
cs
loope
xor
sbb
mov
mov
cli
cmpsb
pop
aad
jo
jns
aaa
dec
inc
sub
mov
or
ds
sub
rcll
in
lock
adc
fdivrl
push
xchg
outsw
int3
mov
inc
and
scas
inc
pop
jmp
loope
cwtl
ret
push
pop
inc
mov
inc
mov
aad
sub
pop
and
lods
mov
xor
mov
pop
scas
ja
pop
add
jmp
adc
cmp
or
adc
add
xlat
fsubrs
and
cmp
inc
pop
les
popf
mov
rol
push
adcb
fwait
dec
stos
mov
mov
movb
push
jmp
add
jo
mov
sbb
add
xor
or
lret
mov
cs
cli
and
cmp
addb
dec
leave
dec
mov
cmp
mov
repnz
cmc
xor
push
pop
std
mov
or
cltd
and
mov
lret
stc
jns
cmpsl
int
mov
std
and
loop
enter
dec
inc
in
push
or
int
add
pop
fwait
in
push
aas
push
ret
push
jmp
xchg
push
popa
jnp
or
cld
or
addl
add
loop
stos
jg
movsl
outsl
das
push
xchg
mov
jge
xor
loope
pop
lods
xchg
sarl
lret
loop
inc
xchg
dec
sub
or
dec
call
test
mov
xor
setne
push
lds
in
iret
xchg
roll
insb
ficompl
bound
add
mov
jae
mov
mov
pop
xor
dec
xchg
loop
inc
loop
push
mov
mov
jne
mov
mov
adc
push
loopne
clc
test
jns
mov
xchg
xor
into
cmpsb
or
cwtl
fidivl
ror
jae
in
jae
xor
call
cmp
popf
imul
iret
gs
or
mov
push
out
test
xchg
xor
in
push
and
jns
scas
mov
dec
insb
jmp
inc
test
xor
adc
clc
mov
jl
sbbl
mov
push
sub
cs
popf
sub
cld
popf
test
xchg
test
fiaddl
fs
jb
rcll
addr16
aas
push
lidtl
jo
stos
and
push
dec
mov
lea
out
in
fnstenv
cmp
lods
sbb
stos
push
add
push
ljmp
add
inc
lret
xchg
repnz
inc
push
cmpsb
dec
adc
movsl
call
or
cld
sahf
shl
dec
nop
faddp
fisttpl
jmp
cmp
out
jb
gs
mov
shrb
aad
push
rclb
stc
jbe
adc
stos
and
dec
cli
daa
sub
imul
iret
dec
insb
pop
xor
push
pop
fs
pop
jno
push
add
lods
push
pop
dec
repz
jo
pop
pop
mov
hlt
fmull
mov
mov
xor
cmp
bound
ljmp
jnp
sub
movb
jne
ud0
inc
push
mov
jg
mov
jge
or
ficomps
lods
addr16
lds
xor
dec
add
xchg
aad
adc
pop
mov
ss
adcb
fidivl
push
out
xchg
or
and
push
and
sbb
xchg
pop
ficomps
cmp
nop
sahf
xchg
sub
adc
cwtl
movsl
push
loopne
xchg
testl
in
mov
push
pop
xchg
dec
scas
xlat
sbb
mov
push
sub
pop
loope
loope
mov
adc
push
cmpsb
mov
dec
bound
mull
sbbb
dec
adc
xchg
fsub
stos
mov
loopne
xor
insb
mov
repz
outsb
int
or
cld
sarb
push
xchg
sbb
out
and
notl
les
loop
fisubl
out
test
sbb
popa
sub
dec
cmc
push
notl
jae
jg
sbb
stos
insl
mov
or
lahf
fdivs
inc
dec
xor
push
and
arpl
pop
jbe
sbb
push
call
icebp
and
inc
cmp
arpl
stos
pop
ret
shl
fisttps
adc
push
and
shl
int
or
in
sbb
int3
nop
mov
iret
mov
scas
addr16
cli
dec
jp
negb
pop
xchg
lock
mov
push
mov
aas
mov
mov
lret
jg
sbb
pop
and
lods
push
push
jbe
cmp
stos
push
int3
and
lock
sbb
sub
sub
or
push
adc
push
add
nop
adc
dec
movsl
mov
in
dec
inc
sbb
test
fsub
clc
mov
lahf
movl
or
gs
jbe
pop
push
cltd
xchg
jnp
xchg
repz
ss
mov
xor
ret
push
xchg
cmp
int
dec
jne
cmp
pop
fildl
out
mov
arpl
inc
add
dec
or
rcr
inc
and
shl
adc
fcmovnu
fsubs
mov
dec
mov
ljmp
mov
cmp
push
lock
nop
int
nop
jecxz
iret
sub
pop
jmp
jae
xchg
cmp
dec
cmpsl
ret
push
sub
push
cmpsb
pop
jne
cs
xor
cmp
les
repz
xor
call
lock
dec
sub
push
or
call
xor
dec
sar
cld
mov
lcall
je
push
pop
adc
fildll
inc
pop
push
jecxz
adc
pop
subb
pusha
adcb
lahf
add
xor
aaa
pop
std
fcompl
pop
scas
scas
push
cmp
xor
pop
ja
test
dec
aam
into
mov
jle
sub
push
sbb
movsl
out
add
xor
std
fcomps
aam
fwait
push
enter
shrb
mov
inc
mov
cmp
rol
jg
out
add
xchg
mov
idivb
jae
aam
push
mov
cli
sub
imul
outsb
fimull
xchg
cld
push
mov
xchg
cmp
xchg
push
pop
push
hlt
scas
sub
push
ja
add
xor
mov
inc
add
push
and
scas
push
notl
in
inc
mov
loope
pop
shll
mov
xor
daa
pop
pop
inc
ljmp
cmp
xor
ret
fs
or
mov
es
lret
pop
imul
in
xor
cmp
lahf
xchg
cli
and
ret
fildl
lcall
mov
pop
sub
into
cmp
inc
stc
ret
inc
sub
test
loopne
hlt
xchg
stos
in
fbld
xchg
aam
stos
push
bound
xor
lea
aas
cmp
xchg
push
popf
rcrb
cli
push
push
gs
pushf
or
cs
lcall
fs
sbb
xor
pop
in
addb
in
in
jge
inc
xchg
movsl
fdivrs
mov
aaa
fisttpl
push
jg
shll
or
js
test
xor
es
lds
jo
aad
jne
ja
jmp
pop
jle
sbb
jb
add
test
pop
mov
mov
repnz
dec
pop
shrb
jle
jl
scas
int
xchg
jge
mov
into
sbb
mov
mov
adc
add
fidivrl
movsb
add
jns
les
lea
xchg
lahf
xor
jns
sbb
jne
inc
inc
testl
insl
mov
daa
lea
repz
mov
icebp
or
mov
jns
sbb
cltd
sub
inc
mov
jo
xorl
jp
dec
loop
sbb
mull
xor
enter
test
mov
adc
cltd
outsb
jmp
mov
iret
jo
sub
pop
pusha
orl
xor
lods
jle
or
das
or
mov
xor
negb
stc
mov
jg
lods
mov
jg
cld
jp
aam
in
pop
jno
aaa
adc
out
stos
dec
adc
add
push
or
subl
or
xor
out
dec
push
cmp
jg
in
cmp
jmp
aaa
sub
push
mov
cmp
and
add
lret
xchg
cltd
mov
dec
popa
dec
repz
xor
std
or
and
push
cmp
dec
fstps
sbb
and
cs
push
outsb
adc
or
xchg
pusha
jle
jmp
push
sub
xor
enter
imul
xchg
mov
jbe
je
pop
in
inc
jge
in
leave
sub
sub
aad
ljmp
scas
icebp
mov
mov
adc
rep
push
hlt
sub
stc
icebp
out
outsb
mov
enter
jmp
xchg
push
jae
cmp
lock
fs
or
in
imul
lock
sbb
jp
mov
cmp
xchg
aam
outsl
dec
jecxz
arpl
xchg
in
scas
xchg
jnp
jne
mov
bound
mov
aam
jmp
ja
inc
int3
jbe
mull
movl
or
add
add
andb
mov
adc
add
push
outsl
aas
test
popf
jbe
sti
push
add
sub
adc
mov
cld
and
fldcw
inc
push
out
sahf
icebp
and
pop
iret
jb
sti
mov
out
xchg
mov
mov
out
lea
pop
inc
jmp
mov
inc
cmp
inc
mov
cltd
imulb
insb
out
test
mov
mov
dec
repnz
mull
stc
shrb
cmpl
cmpsb
int
lret
push
ds
addb
nop
out
mov
test
cli
imul
inc
xchg
std
sub
shrb
pop
outsb
mov
and
xor
stc
xor
mov
orb
jbe
sahf
ss
popa
loope
jle
xchg
dec
dec
data16
push
sar
sub
test
loopne
cli
in
xor
out
and
xchg
xchg
cmp
and
mov
test
and
inc
mov
jle
xor
loop
and
mov
mov
lods
pop
push
fwait
lret
mov
and
pop
and
pop
or
pop
push
int3
sub
fstpt
loopne
xor
pusha
or
sbb
or
cmp
jp
or
add
ret
mov
jno
dec
outsl
aaa
lods
cwtl
leave
or
xlat
out
iret
in
xor
sub
adc
fsubrl
ljmp
xor
dec
lods
xchg
stos
mov
sub
dec
dec
call
divb
out
in
icebp
inc
cmp
sti
imul
pop
sbb
lahf
mov
int3
mov
dec
push
mov
push
cmp
dec
loope
loope
in
jne
gs
sub
aam
pop
mov
pop
imulb
popa
sbb
cmpsl
add
xchg
or
ds
stos
jg
cmp
int
insb
not
lea
scas
pop
mov
mov
je
or
push
mov
dec
jbe
mov
gs
rorl
js
push
repnz
pop
lea
adc
int3
and
mov
dec
fiaddl
shrl
sbb
dec
xchg
psraw
mov
inc
sub
sbb
add
inc
inc
outsb
push
mov
icebp
push
pop
lods
dec
push
sbb
cmp
xchg
popf
scas
pop
gs
movsl
das
test
shlb
aaa
imul
xor
mov
movsb
mov
sub
jmp
dec
ds
mov
inc
mov
push
int3
lcall
xchg
ss
sbb
cs
xor
push
push
mov
jge
nop
adc
sub
insb
cmp
rcrb
inc
xchg
xchg
xorl
dec
fistps
push
dec
inc
clc
test
ret
inc
dec
lock
pop
hlt
pop
test
call
jp
jl
sbb
ja
add
or
insb
pop
pop
cli
insl
mov
inc
rclb
jb
mov
inc
imul
add
fisubrs
mov
ja
jmp
jo
std
adc
inc
inc
icebp
sarl
int
mov
xchg
scas
push
rcrb
iret
imul
push
shlb
mov
inc
daa
aad
and
insb
lea
icebp
aam
adcb
xchg
decl
rolb
in
push
jb
ret
push
adc
in
sbb
mov
sti
in
cmc
xchg
pop
adc
std
xor
ljmp
push
les
mov
mov
dec
in
inc
scas
into
adc
jbe
ds
aad
pop
jl
jecxz
jns
nop
pop
cmp
adc
adc
cmp
push
dec
mov
loopne
out
hlt
cmp
jb
mov
inc
ja
mov
lea
out
sub
repz
das
cltd
fmull
arpl
jo
pop
stos
mov
test
insb
push
mov
ficomps
dec
scas
lahf
xchg
call
fisttps
aad
sbbl
popf
inc
cmp
xorl
sbb
cs
and
out
adc
mov
push
mov
ljmp
loopne
mov
in
mov
mov
adc
imul
stc
ret
dec
insl
repnz
aaa
dec
cmp
add
or
out
idiv
or
mov
xor
jle
and
aas
fistpll
inc
pop
mulb
xor
xor
mov
lds
cld
rol
ficoms
push
push
cltd
orl
pop
aam
push
jnp
or
push
imul
loope
std
xchg
pop
jle
xchg
gs
mov
test
outsb
pop
jns
ror
mov
fsubrp
js
dec
popa
fs
push
cmp
ret
or
inc
fstpt
cs
add
pop
scas
mov
inc
xor
xorl
and
jmp
and
xchg
mov
psubq
push
cmp
pop
mov
rep
lods
push
sub
sti
addl
jbe
stos
jmp
mov
insl
mov
adc
push
add
sub
fsub
jp
cmpsl
nop
and
jge
pop
sub
popa
pop
shll
bound
push
cmp
sbb
jb
and
jnp
sbb
pop
push
in
xor
and
push
enter
fistpll
pop
nop
add
mov
sub
and
imul
incl
xor
mov
or
xchg
das
cmp
ret
clc
jns
ret
or
add
fs
dec
mov
inc
mov
mov
mov
adc
adc
and
xor
out
dec
out
cmpsb
cwtl
incb
mov
aaa
lcall
fs
loop
jb
jmp
cs
mov
stos
inc
mov
and
repz
push
leave
clc
arpl
adc
repnz
ret
dec
sbb
aam
lds
cmp
jo
push
lahf
or
mov
xchg
mov
je
adc
out
sbb
hlt
lret
mov
test
xchg
mov
mov
lret
and
xchg
add
outsb
and
xlat
mov
cld
push
test
cmp
psubq
ja
xor
aaa
push
cmp
cmp
xor
add
or
adc
mov
mov
sti
mov
and
lahf
dec
inc
mov
and
xor
push
imul
lcall
shlb
xchg
adc
mov
cmc
pusha
mov
lea
shll
jp
ret
add
cld
iret
and
mov
mov
jno
mov
push
sbb
and
mov
and
jbe
sbb
repnz
mov
out
mov
pop
jl
out
mov
dec
cmp
xchg
mov
pop
icebp
jb
cmpsl
jge
cmp
push
cs
les
mov
sbb
idivb
cmpsb
jl
jbe
sub
les
jmp
xor
aad
rorb
hlt
lcall
cmp
cld
jg
in
int3
mov
orb
inc
mov
popf
in
fsts
cwtl
xchg
sahf
xchg
xchg
adc
and
into
jne
nop
popa
repnz
insb
movsb
and
cmp
xchg
push
or
lods
js
xor
jb
adc
hlt
imul
add
js
mov
jp
cli
inc
fbstp
popf
outsb
bound
fwait
mov
mov
les
adcl
xchg
lahf
cwtl
test
imul
call
mov
lahf
mov
mov
aad
test
xchg
pop
add
in
fildll
cmp
les
xchg
sbb
es
push
in
push
lea
jno
popf
addr16
int
stc
loopne
sbbl
sub
es
ds
pop
xlat
cmp
or
jne
and
xchg
jnp
fucomi
push
movsb
or
add
sbb
not
mov
repz
cli
xchg
inc
mov
fcoml
cmp
pop
jge
icebp
adcb
rorb
dec
pop
mull
iret
xchg
push
pop
sbb
scas
in
lcall
lea
xchg
popa
je
filds
lahf
lock
inc
mov
mov
fbstp
xchg
rolb
je
insb
cmp
shl
je
adc
jbe
out
testb
in
popa
xchg
loope
adc
mov
push
dec
fldt
and
xor
scas
push
mov
rorb
rorb
mov
cmp
and
clc
sbb
jo
dec
test
gs
mov
xlat
call
xor
mov
and
shlb
ret
cltd
mov
into
movsl
inc
loopne,pt
xor
mov
in
subl
mov
test
mov
ret
aad
sbb
add
call
dec
cmpsl
lods
stos
cmp
cmp
nop
mov
or
stos
je
mov
mov
stc
in
in
pop
loopne
adc
pop
dec
xlat
loope
mov
inc
mov
mov
add
jns
jo
mov
test
scas
mov
cwtl
clc
mov
push
mov
pop
jle
inc
add
pop
iret
int3
xlat
adc
add
pop
pop
push
xor
pop
fisttpll
ja
test
push
cmpsl
dec
push
mov
neg
cli
mov
stc
xchg
pusha
int
sbb
xchg
aad
movsb
fs
dec
push
sahf
imul
ljmp
pop
cmpsl
sbb
lret
mov
rol
js
pop
jg
mov
sub
mov
jno
imul
mov
iret
pusha
daa
test
ficoml
jl
addb
mov
stos
mov
xor
mov
fistpll
dec
pop
adc
inc
and
xlat
lds
shl
pop
fisubl
and
push
adc
inc
pop
push
pop
in
inc
mov
imul
stos
in
dec
or
cmp
test
mov
int3
jae
test
in
adc
cli
pop
push
pop
jmp
push
out
out
fs
cmc
adc
and
mov
ret
arpl
mov
jle
ret
call
loopne
cltd
mov
push
mov
mov
cmp
sbb
cmc
sub
int
inc
jecxz
in
add
sub
shr
push
sub
pop
dec
inc
add
lea
push
ljmp
stos
xadd
out
cmpsb
pop
arpl
lea
sub
adcl
pop
sub
xchg
bound
mov
das
ja
add
xor
addr16
std
xor
into
sub
push
out
xchg
inc
clc
xor
sub
daa
mov
icebp
das
mov
daa
cli
addl
jne
push
xchg
adc
mov
insb
mov
adc
jo
jg
inc
je
push
pop
xor
cmp
out
or
repnz
add
dec
xor
fcom
orb
and
notb
dec
test
idivl
aaa
jo
sub
test
push
inc
pop
mov
clc
xchg
mov
out
cmp
xchg
inc
and
pop
xlat
jne
xchg
shrl
shll
orl
xlat
mov
mov
imul
insb
pop
loopne
mov
neg
cwtl
cmpsl
mov
dec
add
stos
cmp
cmpsb
inc
fisubs
shll
out
jo
mov
call
ret
or
sbb
mov
repnz
adc
leave
fidivl
mov
xor
adc
sbb
hlt
mov
out
jne
cmp
jo
mov
dec
hlt
mov
xor
dec
lahf
or
jae
ljmp
xor
mov
xchg
outsb
mov
mov
xor
xor
in
dec
jae
loopne
inc
test
movb
push
fwait
jp
cmp
sbb
inc
popa
sub
call
mov
std
push
shrb
mov
dec
out
dec
xlat
add
xchg
xchg
pop
sub
xchg
and
fsubs
and
fisubrs
adc
inc
sbb
dec
push
cwtl
lods
mov
popf
or
lea
leave
shll
fbld
inc
xchg
xor
pop
sub
dec
scas
cmpsl
fwait
xor
jl
mov
xchg
xchg
adc
sub
pop
push
std
mov
sbb
mov
adc
push
insl
mov
sub
sub
outsb
adc
jecxz
loopne
pop
out
mov
push
cmp
test
shll
cmc
popf
push
cmpsb
std
jbe
popa
out
inc
aaa
jae
sub
fdivs
cmpsb
je
sub
popa
sub
stos
mov
push
cmp
ffree
lret
lds
mov
adc
sarb
in
mov
test
fcmovu
adc
jne
popa
fdivs
lahf
shll
loope
cmp
arpl
pop
test
mov
inc
scas
popa
cmp
cmpsl
add
aaa
push
pusha
adc
inc
mov
cmpsl
rorb
adc
xorl
inc
lods
ret
push
int
dec
test
cmp
scas
mov
shrb
repz
adc
mov
jbe
cmp
dec
push
in
nop
scas
adc
fsubrl
rolb
cmp
or
jne
add
insb
push
mov
mov
mov
ljmp
dec
mov
push
lret
xchg
in
pop
sub
inc
sub
lds
fxam
ret
push
or
hlt
cltd
iret
xor
outsl
push
push
es
lock
mov
lcall
loop
and
pusha
xlat
xor
mov
test
mov
fs
lods
outsl
jl
std
cmp
lods
out
addr16
pushf
movsb
adcl
inc
dec
subb
fdivrs
cmpsb
inc
rcr
lock
gs
and
ret
notb
xor
inc
insl
ficoms
adc
push
out
jo
mov
and
or
nop
mov
out
and
sub
enter
cltd
aam
inc
fistl
test
out
test
call
jle
fcompl
bound
jns
scas
and
jmp
insl
sbb
mov
xchg
mov
mov
mov
pop
daa
dec
addr16
push
popa
adc
mov
popa
out
stc
sub
out
stc
cmp
xorb
push
push
add
seta
aas
data16
test
inc
or
cltd
je
inc
imul
jge
test
std
icebp
mov
fisubs
ljmp
mov
cmp
mov
sub
jbe
lret
cmp
ret
xor
adcl
lock
out
data16
push
int
mov
shlb
mov
inc
jnp
adcb
mov
and
cmp
lds
bound
or
test
jge
mov
adc
mov
mov
inc
dec
fisttpll
mov
jg
inc
jo
push
push
fistl
jle
mov
shr
pop
bound
mov
int3
das
ret
xor
add
cs
mov
add
pop
sub
fwait
sub
mov
add
cmp
int3
mov
ficoml
or
mov
mov
out
mov
loope
jge
adc
cld
dec
aad
testl
adc
push
pmaddwd
or
imul
cmp
or
clc
test
and
cmpsb
clc
and
mov
loop
lret
movsb
pop
loop
pop
ds
fldcw
push
ja
sub
out
mov
fnsave
adc
sarl
rclb
sti
sbbl
stc
cltd
jbe
pop
clc
lret
faddp
lcall
jecxz
lfs
jp
mov
mov
call
jae
jge
inc
scas
jne
stos
les
int3
dec
cmc
pop
sbb
out
add
dec
outsb
xor
mov
mov
mov
sub
and
testl
and
push
jo
sbb
mov
inc
inc
sbb
sahf
mov
jb
add
inc
ret
leave
popf
mov
push
mulb
cwtl
lahf
jmp
repnz
sub
outsl
push
aas
add
cs
push
push
sub
shlb
xlat
add
mov
xchg
daa
jle
inc
ja
push
mov
mov
fbld
pusha
mov
gs
rcl
lahf
adc
sbb
daa
imul
xorl
fists
gs
xchg
inc
adc
and
mov
cmp
adc
jp
adc
int
inc
pop
shll
cwtl
rorl
dec
xor
dec
test
enter
es
mov
jl
mov
or
mov
test
jge
stc
popf
dec
stos
sub
loopne
pop
and
jge
mov
dec
and
sbb
cli
cmpsb
xchg
mov
or
subl
dec
add
jg
mov
call
push
xor
push
lret
or
sbb
ficomps
mov
lock
faddl
lret
hlt
sub
fucom
rcll
lods
or
in
add
loope
pop
or
push
sub
mov
sub
les
test
mov
inc
cld
pop
inc
negb
and
xor
jmp
add
hlt
cmp
pop
fldl
cmpsb
sbb
sahf
shl
mov
test
loopne
xchg
sbb
pop
fnstcw
or
int
mov
addr16
push
and
xor
mov
imul
push
ret
stc
jp
iret
xchg
scas
cmpsb
shrl
dec
imul
mul
and
mov
xor
in
cmp
lock
push
pop
mov
sbb
enter
je
enter
fsts
cmp
mov
and
push
je
imul
lea
pusha
xor
pop
lahf
stos
ja
mov
adc
sbb
sbb
cmp
out
add
xor
popa
push
test
std
add
inc
adc
jno
push
jne
cmc
loop
mov
fsubp
lods
sub
dec
rclb
repnz
mov
xor
sbb
fisttps
jbe
loope
jne
xchg
mov
jnp
xchg
int
fcoml
lea
mov
cltd
aad
pop
xchg
fldcw
ficoms
imul
pop
rol
cmp
cmp
fwait
mov
imul
arpl
out
jl
jl
sbb
and
jmp
frstor
push
mov
cmp
xor
andl
xchg
mov
jle
outsb
sbb
jle
fistl
dec
push
sub
mov
mov
mov
mov
cld
test
add
jle
scas
sub
mov
loopne
gs
pop
sbb
sbb
stos
imul
xchg
lret
rcrl
jp
shrl
stc
int3
or
sbb
out
xchg
std
fcomip
push
scas
das
push
mov
cmc
ljmp
std
cmp
add
pop
cli
xor
outsb
aas
out
cld
es
bound
outsl
cmp
xor
in
or
xor
adc
sar
xchg
pop
mov
in
inc
es
gs
sub
mov
push
dec
shlb
cmp
xorb
and
and
sbb
inc
pop
and
mov
adc
pop
inc
dec
aaa
push
sub
sub
adc
push
adc
dec
dec
stos
cmp
das
mov
push
mov
jmp
pop
xor
xor
lea
cli
mov
rcr
jb
divb
lds
je
mov
rolb
lret
into
stc
movsb
mov
js
setp
cwtl
jne
adc
inc
xchg
xchg
mov
rclb
lahf
jle
divl
inc
test
cmp
repz
movaps
mov
loopne
push
sub
xor
movsb
push
xlat
sahf
pop
stc
les
sbb
mov
int
repz
aas
scas
xchg
loopne
sbb
add
add
lock
pusha
test
push
mov
inc
inc
mov
xchg
add
mov
sahf
inc
sub
outsl
inc
incb
rcrl
fcompl
das
sahf
inc
sahf
cmp
dec
pop
inc
gs
xor
icebp
push
cmp
loope
cld
pop
xchg
mov
push
push
adc
sbb
and
push
lods
in
stos
jnp
imul
sbb
int
lahf
add
fldenv
xchg
imul
int3
mov
sti
lods
and
mov
pop
cmp
fsubr
and
dec
lret
std
sbb
cmpsb
add
push
ret
je
fistpl
addr16
push
test
cmc
call
outsl
and
mov
stos
mov
inc
mov
sbb
std
xor
or
sbb
cmpsb
fmuls
lret
dec
clc
out
mov
iret
sub
arpl
icebp
dec
or
sbb
push
cmp
sbb
sbb
icebp
fcmove
mov
jnp
mov
leave
adcl
jp
aad
call
mov
xchg
ss
and
jb
ret
adc
mov
push
mov
mov
mov
cld
push
pop
and
mov
lea
lret
mov
ret
bound
fldenv
lcall
or
rorl
add
fstp
scas
aas
adc
sub
sub
push
or
outsb
jae
mov
mov
pop
das
clc
fndisi(8087
dec
pusha
movsl
dec
mov
test
in
inc
fmuls
jns
popf
imul
aad
cmc
xor
lock
aad
jmp
in
adc
test
pop
and
or
pop
push
sub
adc
rcl
imul
xor
pop
xlat
nop
into
lea
jnp
int
pmaxsw
cmp
roll
stos
imul
jbe
test
out
ljmp
cld
pushf
or
icebp
incb
and
or
iret
jl
test
and
mov
mov
outsb
pop
and
sub
lock
sub
inc
mov
enter
leave
stos
movsl
jg
nop
insl
inc
lret
fisubs
xor
cwtl
sub
aam
push
cmp
push
or
cmp
imul
cld
pop
repnz
xchg
loopne
lods
sarl
je
js
into
dec
frstor
fcoms
dec
sbb
sbb
push
outsb
ljmp
ja
mov
enter
sbb
or
loope
lock
inc
and
mov
loopne
xchg
jb
pusha
fwait
and
int3
int3
adc
xor
xlat
push
arpl
push
mov
div
mov
pop
out
lods
std
and
jbe
add
fistpll
pop
push
rol
data16
xchg
sub
in
leave
cmp
or
pop
data16
xchg
scas
jbe
jp
pop
fisttps
add
xchg
mov
js
inc
jle
or
cmp
lahf
push
movsl
dec
daa
notb
dec
jno,pn
jnp
adc
fwait
adc
mov
sbb
sbb
arpl
sti
loopne
jo
popa
loopne
push
sub
xchg
dec
jg
ffree
out
lahf
lret
or
adcl
rcll
jl
inc
pop
jp
dec
mov
lahf
and
and
dec
xchg
cmp
add
sub
mov
mov
xchg
adc
aas
jge
lock
add
std
movsl
jnp
jbe
iret
jbe
or
ret
cld
repz
icebp
and
fcomp
inc
dec
icebp
sbb
pop
push
xlat
outsb
mov
lock
outsl
jo
mov
ss
es
aaa
add
push
lahf
test
outsl
pop
or
push
push
icebp
mov
aaa
mov
sahf
cmc
clc
mov
jl
jg
loop
shrb
cltd
stos
das
mulb
mov
inc
xchg
and
ss
mov
aaa
adc
sbb
sbb
cmp
pop
or
jmp
add
fs
xor
aaa
jno
sub
adc
stos
cli
cwtl
add
bound
mov
sbb
repz
jge
pop
mov
insl
dec
xor
push
mov
mov
test
inc
dec
loopne
fcoms
pushf
adc
mov
je
sub
ja
test
jp
loop
dec
or
ret
cmc
xlat
outsl
adc
dec
jecxz
adc
xchg
or
pop
and
mov
adc
lret
in
je
int
pop
fwait
xor
dec
adc
xchg
adc
pop
push
fsubrs
push
add
fs
lahf
cmp
cwtl
imull
rcrl
daa
push
cld
pop
sub
icebp
sub
mov
sub
mov
call
outsb
push
push
loope
in
mov
mov
movsl
jg
inc
pop
xchg
and
jbe
and
sub
ret
outsl
xchg
shlb
fldln2
dec
in
push
cmc
das
ret
adc
ljmp
aam
insl
dec
test
in
pop
pop
xor
arpl
mov
gs
xor
cld
mov
dec
les
xor
jmp
and
cs
add
xchg
imul
mov
addb
andb
xchg
or
push
cltd
ret
pop
inc
inc
fnsave
mov
int3
mov
xchg
dec
lret
inc
jno
out
push
inc
inc
mov
ret
add
cs
mov
sub
mov
pop
in
cli
inc
sbb
add
ja
inc
adc
mov
addr16
add
mov
inc
xor
insl
and
dec
addr16
out
xchg
cli
int3
shll
cmp
ljmp
hlt
fs
xchg
push
dec
pop
pop
mov
rclb
inc
adc
fmull
cmp
xchg
xchg
mov
ljmp
lret
lcall
mov
pop
mov
mov
ret
xor
jo
test
out
push
lret
and
xchg
cmp
cmp
cmp
cmpl
jnp
mov
cmc
shrl
sbb
mov
mov
mov
out
inc
ds
std
ljmp
pop
adc
adc
sbb
jno
outsb
pushf
popa
imul
inc
in
mov
jle
imul
loop
hlt
jle
adc
das
push
dec
sub
inc
lahf
imul
nop
iret
pop
fcoml
adc
pmullw
aas
and
f2xm1
cmpsl
in
fcmovnb
rorb
pop
sarb
push
clc
mov
sub
icebp
scas
sbb
inc
popa
jns
stos
call
repz
fistpll
icebp
push
adc
push
pop
pop
fcompl
daa
sbb
xchg
and
xor
out
nop
mov
mov
sub
add
js
fstpl
sbb
adc
fxch
ret
subb
hlt
out
cmp
int3
mov
repnz
add
mov
pop
dec
sub
inc
inc
sub
sub
add
inc
fisubl
lahf
imul
shl
push
loopne
cmpsb
adc
leave
imul
idiv
dec
test
xchg
or
ret
fisubrs
call
push
cmp
lahf
mov
mov
add
iret
push
pop
add
push
cmove
les
lret
add
add
sarb
dec
jle
fwait
fwait
call
pop
int3
inc
xchg
mov
jecxz
inc
xchg
lds
mov
jns
sti
test
dec
outsb
bound
divl
fcoml
das
or
and
dec
push
leave
fsts
out
mov
subl
outsb
shlb
dec
jne
leave
xchg
push
inc
hlt
sub
push
adc
dec
add
leave
jge
in
int
jle
xchg
notb
stos
jo
out
mov
in
jne
bound
rclb
add
cmp
repz
pop
or
xchg
rolb
into
mov
dec
push
out
data16
add
sbb
inc
mov
mov
pop
gs
cltd
call
xor
inc
pop
aaa
in
insl
das
test
cmp
dec
loopne
push
cmp
dec
ret
pop
xor
mov
imul
mov
xchg
inc
dec
mov
lret
ret
inc
xchg
into
pusha
mov
loop,pt
mov
rcrb
in
xor
push
ja
jmp
push
xchg
incb
or
xchg
pop
inc
pop
fildll
pop
xchg
rorl
cwtl
daa
sbb
inc
adc
add
xchg
cmpsl
aaa
mov
push
cmp
cmp
orl
leave
mov
loopne
mov
mov
daa
sub
xchg
dec
rorb
xchg
stos
divl
xchg
sbb
jp
mov
or
xchg
add
adc
and
pop
xor
fdivl
leave
mov
push
imul
jo
lods
icebp
jp
mov
faddp
ret
and
shll
cmp
lahf
enter
cmp
fildll
std
mov
or
iret
shll
idivb
lods
sahf
mov
and
and
stos
mov
fstps
test
call
push
mov
mov
mov
clc
jmp
pop
ret
and
mov
repz
cmp
cmpsb
pushf
and
fldt
aaa
adc
jne
loopne
cltd
mull
fsts
ja
mov
sub
cmpsb
push
pop
mov
push
sbb
std
mov
ss
add
sbb
jge
cmp
and
mov
into
leave
int
outsl
sbb
jae
icebp
jmp
pop
outsl
imul
cmp
push
xchg
hlt
fisubrs
xor
or
loop
inc
aas
insb
mov
enter
shlb
ficoms
pop
push
and
jp
mov
out
add
add
mov
lods
test
xor
push
fnstsw
sbb
ja
xor
dec
dec
pop
push
xchg
xchg
lea
clc
adc
push
popl
scas
xlat
add
out
jno
xor
inc
pusha
int3
mov
aaa
sbb
xchg
dec
mov
fnstsw
rcll
pop
mov
push
out
jnp
add
ja
add
mov
ret
adc
sbb
ljmp
pop
xchg
mov
fucompp
sub
lods
pop
outsl
xor
xor
testb
mov
popf
inc
and
mov
fsubl
inc
cmc
pop
popf
rcll
jge
movl
and
ficoms
mov
mov
and
sub
jl
mov
pusha
dec
movl
sub
jmp
loope
psadbw
inc
dec
mov
xchg
shll
sar
icebp
into
orl
pop
and
subl
outsb
push
aad
jge
cmp
sub
and
imul
lcall
mov
cmp
xchg
or
push
or
call
mov
jp
addr16
out
loopne
addr16
pusha
dec
pop
sub
ja,pt
pop
iret
decl
insl
add
js
add
mov
mov
dec
inc
fisubrs
stos
or
lret
pop
cmp
jecxz
negl
dec
sbb
pop
test
fwait
sub
aad
push
leave
pop
mov
ss
adc
in
xchg
pop
int3
add
jp
xor
notb
arpl
xor
jp
fsubrs
push
xor
mov
jmp
int
mov
mov
mov
push
fmuls
scas
insl
sub
sbb
dec
xchg
jp
daa
sbb
adc
pop
sbb
sbb
push
pop
sti
in
xchg
sbb
lret
bound
adc
jbe
insl
enter
dec
xor
xchg
fs
mov
lods
mov
push
rorb
pop
inc
mov
fwait
clc
or
mov
vfrczpd
and
push
arpl
imul
out
mov
lods
mov
insb
daa
outsl
movsb
daa
cmp
inc
nop
sahf
pop
sahf
mov
add
dec
bound
leave
add
mov
sbb
xor
inc
cs
les
cli
sti
repz
and
dec
mov
adc
sbb
push
inc
push
adc
push
test
jns
inc
xor
leave
push
inc
jl
testl
fwait
les
jl
shll
fsubl
adc
cmp
sub
push
movsb
std
stos
inc
dec
dec
in
jg
jne
or
cmp
popa
test
lock
sub
pop
cs
out
fldt
stos
jmp
push
dec
fiaddl
inc
inc
xor
push
lret
out
fwait
imul
out
cmp
inc
testb
jecxz
xor
sub
lcall
mov
test
test
and
sbb
or
mov
lods
jns
ss
out
xor
pop
sahf
jns
lock
add
jge
mov
int
and
pop
sbb
icebp
movsl
xchg
out
pop
sub
xchg
pushf
test
mov
rorb
aaa
push
enter
int
cmp
push
iret
decb
mov
lods
das
pusha
jae
fidivrs
enter
test
in
cld
jl
sub
insb
arpl
std
xor
andb
lds
add
test
jbe
xchg
mov
cltd
mov
mov
or
xchg
movsb
mov
lock
inc
xchg
jb
xchg
add
and
add
loopne
adc
in
adc
jno
or
repz
stos
in
pop
jecxz
addr16
lcall
xor
push
insl
in
xchg
jns
in
inc
fisttpll
ficoml
call
leave
hlt
or
stc
shll
hlt
push
pop
xchg
imul
fsubp
push
adc
cmp
outsl
mov
fiadds
mov
sbb
mov
or
mov
cmc
es
js
hlt
jmp
pop
in
xlat
xlat
jbe
xchg
lret
push
pop
jmp
rcll
cmpsb
rcrl
dec
mov
ss
add
gs
stos
dec
sbbb
push
jnp
inc
aas
add
inc
add
inc
jns
xor
imul
out
mov
lcall
pop
cmp
fdivl
mov
popa
jle
and
cld
lret
adc
stos
insb
fdivl
xchg
cwtl
cmp
cwtl
push
dec
mov
mov
mov
push
insb
stos
fs
lea
dec
cmp
out
add
cmc
es
xor
adc
pop
xchg
ja
cmp
adc
ja
inc
js
or
fildll
inc
mov
pop
aaa
mov
mov
sub
test
pop
gs
lret
sub
icebp
or
stc
pusha
bound
out
push
xchg
adc
mov
or
add
pop
xorb
jge
jmp
dec
test
and
cwtl
sbb
stos
mov
lods
in
xchg
xchg
inc
dec
aad
sub
push
pop
sti
pop
lret
rorl
adc
pop
mov
jo
sbb
push
pop
push
sub
jmp
or
push
test
fmull
pop
jo
or
clc
and
les
adc
jecxz
mov
inc
test
jne
stos
scas
jae
mov
pop
loop
inc
mov
mov
cmc
cmpsl
aam
inc
mov
adc
jg
in
jae
push
leave
stos
sub
pop
mov
jnp
cld
lods
push
sbb
or
xor
dec
cmp
aad
rcrb
push
adc
adc
addb
push
adc
and
cmpsb
clc
xchg
xchg
cmpsb
xor
ss
xchg
jns
mov
jb
mov
lcall
mov
sub
push
mov
mov
call
sub
fdivrs
stos
sub
or
std
sbb
enter
stos
jbe
data16
lret
popa
call
cmp
xchg
std
mov
fxch
gs
out
into
pop
cmpsl
jl
mov
in
push
popf
or
pop
shll
fsubr
test
repz
test
frstor
mov
test
idivl
jnp
cmp
inc
pop
lds
rcrl
test
pop
lock
pop
pop
repnz
or
outsl
lds
cmp
addb
lods
movsb
imul
pop
and
into
lahf
push
fisttps
lea
fmull
dec
imul
xor
addr16
aam
or
cmp
addl
ret
jmp
or
adc
pop
loopne
sbb
xchg
std
les
in
mov
daa
rcrb
out
lret
sbb
add
test
cmp
sub
pop
cmp
movsb
es
or
mov
jbe
stos
jb
movsb
popa
loop
in
aas
add
xchg
mov
ret
or
int
stc
push
sub
mov
xor
jg
inc
imul
adc
cmp
mov
repz
pop
push
daa
jmpw
xchg
and
div
mov
push
dec
mov
scas
ljmp
sbb
xor
jp
inc
pusha
pop
lea
mov
flds
shll
dec
cli
loop
dec
dec
lahf
mov
shlb
int
testl
sub
mov
inc
xor
int
fs
push
stos
sub
add
push
cld
inc
cmp
sub
ret
cmp
lcall
and
sub
and
cmp
sub
nop
xchg
movsl
add
ja
xchg
in
lods
das
fidivl
test
cld
sbb
nop
hlt
pop
fldcw
mov
dec
mov
dec
sub
pop
out
xor
sub
lods
iret
xchg
adc
pop
xchg
sbb
sub
jge
cld
lret
cltd
jo
lods
movsb
ss
stos
test
adc
sub
sub
jmp
dec
sahf
and
loopne
pop
fidivl
sub
push
mov
test
inc
or
xor
pop
lahf
lcall
imul
push
xchg
shll
daa
mov
xchg
ljmp
scas
mov
mov
into
mov
popa
aad
or
jnp
sub
scas
lea
movsb
ss
pop
mov
jnp
pushf
into
mov
mov
and
inc
lods
stc
mov
popf
rcrl
or
test
pusha
mov
xor
jae
clc
inc
jo
mov
int3
sub
xor
push
jae
fdivs
mov
popa
push
pop
ds
push
cld
insl
xor
adc
rsqrtps
push
flds
pop
ds
insl
or
xor
cmp
jae
lods
shll
repnz
mov
stos
push
push
lods
sub
jmp
xchg
xor
test
fs
mov
aas
shrb
out
pop
faddl
ret
outsl
push
popf
jp
inc
push
sub
inc
or
inc
cwtl
xchg
push
xchg
jns
flds
test
roll
rcr
inc
adc
cmpsl
imul
xor
push
and
cmp
std
mov
pop
push
push
aad
fcmovnb
mov
jo
cmpsb
addb
loop
mov
cmp
lds
jo
lock
inc
or
inc
push
pushl
imul
add
pop
sbb
jnp
in
pop
xchg
test
sbb
fbstp
clc
cltd
adc
cld
xlat
lods
clc
cltd
mov
mov
jns
test
sub
mov
mov
repz
inc
nop
mov
xor
xorl
push
push
popf
xor
in
xor
mov
and
packssdw
add
xchg
mov
outsl
inc
jg
adc
clc
xor
inc
fnstenv
aaa
iret
cmp
xor
mov
or
hlt
shlb
push
sub
shr
jb
jle
xchg
adc
inc
imul
mov
dec
idivb
dec
push
push
imul
clc
int3
push
mul
xor
push
cmp
sahf
mov
data16
adc
sahf
stos
scas
adc
test
std
cmp
adc
adc
xor
inc
jbe
inc
adc
cmp
test
jge
sti
das
data16
mov
inc
js
mov
inc
iret
push
or
into
scas
push
push
adc
or
mov
ja
sbb
imul
cmp
roll
icebp
stos
testb
ljmp
ja
gs
adc
aam
jbe
sub
lcall
ljmp
cli
popf
and
pop
in
mov
mov
dec
jns
dec
pushf
xor
jae
sbb
nop
sbb
shl
or
in
push
cmc
lods
cmp
js
mull
xchg
or
dec
and
xor
pop
add
shlb
push
xchg
jb
jnp
dec
inc
push
cmp
mov
cltd
pushf
jo
xchg
push
sub
push
mov
mov
and
lods
cmp
sub
lcall
push
popa
std
cmp
std
stos
dec
bound
ds
pop
aam
cld
fistpll
add
test
add
push
stos
fbstp
repnz
xchg
outsb
in
dec
sbbl
pop
ror
xchg
pause
sarb
out
sbb
add
adc
push
xchg
divl
mov
out
shlb
icebp
std
out
xchg
and
scas
mov
data16
test
cmp
fnstsw
lcall
and
popf
inc
repz
imulb
dec
lods
push
dec
jb
lea
mov
clc
sub
std
stc
cli
data16
mov
cmp
insb
adc
rcrb
sti
xor
mov
pop
mov
xor
sub
inc
add
adcb
xor
insl
or
out
adc
enter
lsl
xor
fmuls
cmpsl
pop
sub
insb
dec
jnp
mov
fnstenv
sub
mov
jg
mov
int
lcall
jo
adc
stos
loope
push
enter
ja
std
mov
push
fimuls
out
mov
scas
stos
jnp
add
cltd
push
lea
mov
cltd
movsl
cmc
push
repz
iret
enter
inc
shlb
mov
je
clc
xchg
push
xchg
fisubs
test
jmp
dec
push
imul
movsl
mov
cwtl
cmp
lods
arpl
xchg
out
xchg
mov
xlat
mov
inc
lods
mov
std
and
je
loope
xchg
mov
xor
dec
popa
mov
in
mov
jae
cld
loopne
stos
push
mov
xchg
imull
jno
mov
sub
xchg
inc
cmp
mov
insl
hlt
xchg
jge
dec
outsl
pop
gs
pushf
orl
aad
xchg
iret
lea
add
mov
xchg
shl
ljmp
rol
inc
add
imul
pushf
imul
fisubrs
xchg
les
inc
pop
sub
jecxz
cli
rorl
shrl
ja
insl
pop
mov
lock
nop
in
pop
or
dec
sub
mov
or
fwait
mov
adc
cmp
pop
mov
xor
int3
pop
data16
cmp
lret
push
dec
cmc
adc
pop
stos
aam
in
stc
aas
rorb
sarb
pushf
addr16
ljmp
xlat
gs
and
xchg
daa
jmp
imulb
pop
test
or
jp
fwait
mov
inc
adc
add
inc
insb
out
shrb
push
mov
ret
test
jp
and
sbb
push
sub
xor
enter
pop
sbbl
jb
push
jbe
and
arpl
iret
clc
jmp
dec
sub
push
stos
dec
push
inc
push
and
inc
aam
add
popf
push
imul
out
mov
shlb
mov
stos
es
clc
fists
sbb
pop
jl
lret
imull
push
out
sbb
dec
add
jg
fstps
outsl
in
adc
mov
cmp
outsl
insb
js
push
cmc
sbb
rcll
popf
nop
mov
icebp
mov
dec
fs
and
mov
push
inc
sbb
scas
mov
out
mov
movl
cld
or
outsb
add
pmaxsw
call
dec
mov
iret
ja
sub
ja
push
jnp
in
adc
fwait
repnz
js
jns
mov
dec
fwait
std
out
xlat
add
popa
lods
in
repnz
mov
movsl
addl
jo
and
in
pop
adc
iret
scas
pushf
sarl
test
mov
jmp
and
mov
mov
outsl
mov
arpl
mov
push
and
inc
inc
icebp
into
push
cmp
fmuls
test
xorb
rcl
shrb
add
jo
arpl
sbb
lcall
and
push
ret
sub
mov
adc
jbe
notl
fsubrl
stos
fisubs
test
imul
rol
sub
repnz
mov
outsl
or
pop
fyl2xp1
mov
out
sti
popf
lret
pop
shr
xchg
addr16
cmpl
jo
jns
push
xchg
cli
loop
fldl2t
pop
and
add
call
mov
and
mov
jle
lock
mov
xorl
ljmp
pop
add
inc
es
sbb
outsb
scas
popf
sarl
dec
cmpsb
in
pop
jle
dec
jp
sti
pop
fs
and
adc
adc
pop
popa
fwait
or
out
mov
jns
add
inc
hlt
aaa
inc
arpl
adc
mov
lret
push
out
add
lds
loopne
add
xchg
or
mov
jae
outsb
mov
cmpsl
mov
cmp
imul
iret
add
movsb
mov
lds
inc
add
je
push
out
mov
lret
pop
lret
push
push
pop
cli
sbb
push
stc
and
in
jne
test
sbb
out
ret
mov
inc
insb
das
mov
sub
lock
popf
mov
lret
int
xchg
sti
mov
xchg
outsb
sbbb
mov
ret
test
icebp
and
and
clc
daa
push
hlt
mov
aaa
repz
ret
enter
push
clc
sbb
add
cmp
sbb
fwait
imul
xchg
push
sbb
shlb
popf
lock
mov
pop
insl
bound
gs
dec
movsb
sti
insb
jmp
mov
and
test
lock
lods
mov
lods
pop
clc
xchg
adcl
or
sti
mov
enter
insl
jnp
cmp
push
sbb
das
jo
jns
push
outsb
inc
add
jbe
jg
xchg
mov
jecxz
in
icebp
jmp
and
ja
popa
es
movsl
add
outsb
in
jl
aam
arpl
das
inc
push
sub
mov
addb
clc
xchg
addl
or
fs
aaa
dec
call
cmpsb
mov
dec
insl
pop
inc
scas
test
cmp
lahf
cltd
ds
mov
mov
rcl
das
push
dec
or
and
mov
ficompl
pop
cmp
mov
or
stos
mov
bound
arpl
push
xlat
into
js
sbb
shrb
iret
inc
std
pop
inc
movsl
pop
adc
jbe
je
xchg
loope
shlb
push
and
jae
test
insb
stos
scas
je
call
fs
fnstsw
in
divps
bound
ja
cmp
pop
sub
js
and
inc
cwtl
insb
xchg
cltd
dec
sbb
fwait
call
insb
movsb
mov
bound
push
cmp
mov
int
ljmp
andb
fbld
pop
into
addr16
cmp
es
gs
pop
cli
es
adc
pushf
scas
cli
in
pop
lahf
lods
xlat
int
aas
popa
filds
imul
cmp
push
xchg
imul
lret
cmpsl
mov
addr16
push
mov
fisttps
mov
sub
sbb
call
popf
or
icebp
mov
int3
out
icebp
aaa
pop
mov
xlat
inc
xchg
stos
xor
cmpb
mov
mov
dec
jp
xor
mov
and
pop
in
xchg
jnp
pop
mov
push
lods
and
cltd
push
test
sub
iret
push
xchg
out
fistps
push
aaa
push
subb
mov
sti
mov
sbb
and
sub
lahf
nop
and
mov
mov
adc
popa
fsubrs
movsb
pop
inc
push
jno
loope
icebp
out
mov
test
and
mulb
cmpsb
jae,pn
loopne
and
int3
mov
add
pop
adc
mov
xchg
repz
xor
add
sbb
dec
add
sbb
jecxz
negb
mov
cmc
insl
jb
popf
imul
add
ds
rorb
inc
jo
int3
jns
testb
dec
ret
cmc
sbb
push
es
arpl
xlat
jg
psubb
xchg
rcl
or
cld
push
sbb
xchg
mov
iret
or
xchg
shll
mov
std
or
mov
mov
sbb
lcall
loopne
sarb
mov
jo
sbb
repnz
pop
mov
jmp
fpatan
mov
cs
and
clc
out
pop
push
popf
push
add
push
and
xchg
push
aaa
mov
ret
mov
lock
fcomip
xchg
adc
mov
mov
addr16
test
xchg
das
test
out
sbb
ja
dec
inc
cli
movzwl
fmull
shrb
fadd
outsb
stos
or
mov
push
jg
dec
je
sbb
mov
addb
xor
addl
das
mov
loopne
mov
jg
fldenv
mov
dec
push
std
jp
lea
jecxz
and
leave
arpl
mov
jbe
pusha
xchg
add
int
push
shl
xor
icebp
sbb
add
jp
lret
jecxz
outsl
inc
jne
dec
inc
cmpsl
stc
dec
movsl
je
cmpb
add
and
scas
sbb
push
pusha
adc
fcmovu
lea
imul
outsb
daa
js
add
mov
jecxz
or
push
sub
cld
push
nop
test
pop
fistps
mov
push
pop
frstor
dec
in
lret
add
sbb
test
dec
adc
lea
add
repnz
inc
mov
jge
ficompl
mov
xchg
fdiv
mov
mov
arpl
or
xor
mov
ljmp
jp
ds
ds
xchg
in
dec
outsb
dec
inc
and
mov
mov
and
in
mov
dec
push
and
repz
add
iret
lock
ja
test
add
xchg
fs
shr
dec
stos
jg
mov
cltd
mov
jmp
pop
dec
stc
dec
pop
sub
dec
ffree
add
inc
push
sbb
xor
testl
popf
sbb
pop
shr
jb
cmp
nop
push
ficoml
aad
push
xchg
fdivs
xchg
mov
cmpsb
in
mov
arpl
lods
shl
push
xchg
std
stos
aaa
movsl
popf
in
scas
sbb
xor
addl
fcomp
xchg
pop
inc
xchg
movsl
pop
inc
sbb
insl
sbb
aaa
das
scas
mov
repz
cltd
fdivrs
mov
sub
cmp
add
mov
jmp
push
xchg
dec
addr16
mov
jmp
jb
inc
mov
mov
rolb
push
push
pop
test
push
mov
fbstp
xchg
ret
dec
mov
jae
xchg
mov
pop
stos
in
add
dec
mov
push
insl
xlat
out
inc
pop
jge
shll
mov
mov
sub
fucom
xchg
jno
iret
cmc
xchg
add
imul
jg
mov
sbb
icebp
in
jmp
jp
neg
xchg
shl
cmpsb
int
adc
iret
jmp
lea
mov
and
mov
faddl
jle
adcb
mov
xor
aad
dec
jo
add
nop
push
sbb
cmc
int
outsb
push
cmpsb
repnz
lret
mov
xlat
jne
sti
jae
lods
out
shlb
bound
lret
ret
push
mov
xchg
cld
add
scas
popa
ja
int3
push
and
call
mov
xchg
dec
xchg
bound
nop
and
push
mov
stos
push
lcall
test
lahf
sub
jb
ja
jbe
fs
jno
cmc
std
ficomps
add
jecxz
call
and
mov
fiaddl
push
xchg
mov
cld
movsl
je
cmpsb
mov
fcmove
rorl
push
ljmp
jmp
inc
xlat
les
addr16
insb
xchg
sub
lds
mov
push
fcomps
daa
add
mov
push
repz
sbb
mov
mov
pop
call
mov
inc
pop
jmp
inc
mov
sub
pushf
sarl
call
cmc
xchg
xchg
push
jle
stc
sti
push
nop
dec
fistpll
cmp
jnp
test
add
push
sbb
add
xchg
lret
jbe
push
lret
int3
inc
cmc
jne
mov
adc
loopne
cmp
inc
out
js
movsb
pop
js
jl
cmp
push
testb
cmp
ljmp
jmp
jecxz
push
mov
shrl
inc
and
ret
xchg
pop
pusha
or
xchg
cltd
xchg
pusha
iret
and
dec
push
sbb
cwtl
pop
mov
mov
sbb
cwtl
pop
sub
sub
aaa
push
icebp
push
sbb
test
adc
pushf
push
imul
lret
inc
loope
pop
push
aad
bound
fcomps
les
sub
mov
addr16
incl
inc
adc
stos
leave
lcall
push
cs
addr16
shrb
or
pop
and
cmp
hlt
lcall
sub
sub
cwtl
jne
dec
xchg
jb
stc
inc
sub
adc
icebp
aaa
test
repz
push
test
and
scas
sbb
aad
scas
jle
and
adc
sub
sub
and
mov
push
repz
pushf
xchg
jge
pop
enter
or
or
push
nop
jo
xor
inc
cmp
and
rorl
sub
stc
cmpsb
mov
imull
jo
je
jae
ja
adc
sahf
and
jmp
xchg
sbb
les
xor
mov
mov
dec
sub
cmpsb
xchg
aam
loop
test
jmp
in
fsubs
push
or
ljmp
sub
imul
movsl
push
imul
mov
jae
hlt
stc
mov
insl
mov
jnp
inc
test
clc
sbb
ret
dec
outsl
test
xor
sub
dec
pop
pop
jne
pusha
lock
fs
gs
cli
addr16
testl
inc
clc
or
mov
cmp
test
push
mov
mov
ljmp
or
andps
jb
mov
clc
ljmp
loope
cmpsb
sahf
insl
jecxz
push
mov
mov
sub
cmp
data16
movsl
dec
mov
pop
fchs
loopne
cltd
inc
mov
ret
out
std
std
shll
mov
shl
lds
setb
inc
mov
fisttpl
pop
cwtl
mov
inc
fwait
into
out
mov
mov
pop
je
lods
or
stos
insb
popa
dec
andb
arpl
movsl
clc
xor
clc
int
mov
fsubs
sbb
dec
xchg
shl
out
hlt
sahf
stc
and
add
test
pop
inc
in
push
fisubrs
dec
adc
lcall
cltd
mov
xor
loop
leave
xchg
shll
ja
jne
je
sahf
pushf
std
mov
jle
fldt
add
pop
dec
xlat
push
loop
xchg
mov
pop
cmp
dec
mov
xchg
ss
jns
cmp
add
lahf
inc
in
cltd
push
jmp
sub
mov
or
test
mov
out
pop
jb
loop
pop
shlb
sbb
xor
jp
xor
les
mov
lock
or
mov
inc
push
shr
bound
dec
inc
fbstp
add
test
push
pop
rolb
loopne
sbb
lods
lds
es
mov
scas
in
dec
addr16
clc
lahf
jl
mov
xor
lods
or
stos
jno
push
popf
lods
jl
int
pop
or
in
fildll
out
mov
movsl
sti
imul
cld
sub
sub
or
sbb
or
and
pop
and
pop
lock
inc
adc
call
cwtl
out
push
cld
pop
daa
test
addb
sub
hlt
and
dec
stc
xor
outsb
fistpll
dec
sahf
or
fildl
pop
pop
push
pop
pop
or
inc
movsb
cmp
cmp
les
sbb
iret
or
jno
cwtl
xor
je
mov
dec
cmp
mov
insl
aas
inc
sbb
out
jp
mov
inc
lods
scas
add
cmp
cmp
and
sub
push
fdivrl
dec
loope
push
xchg
dec
push
sub
shrb
negb
jbe
sub
popf
nop
scas
add
pop
mov
rcll
andb
mov
roll
cli
rcrb
adc
mov
mov
sub
ljmp
jle
and
xchg
out
pop
xchg
nop
cmp
loopne
out
jne
sbb
xchg
call
outsl
push
pusha
fsubs
call
movsb
jp
repz
icebp
push
xchg
xor
inc
pop
adc
mov
iret
rcr
mov
push
and
sub
xchg
jmp
je
data16
mov
xchg
adcb
sbb
inc
push
mov
mov
movsb
jp
mov
push
fildl
mov
xlat
add
cmp
insb
push
mov
test
call
dec
cmp
xchg
jne
icebp
mov
push
imul
and
cmp
shll
xchg
jmp
cmp
jg
gs
outsb
push
inc
xchg
fildl
xor
dec
shlb
mov
push
or
sub
push
cmpsb
shll
inc
clc
xor
xchg
add
notl
popa
cmc
push
lds
jmp
mull
cmp
sbb
xlat
jge
jo
jmp
push
jnp
push
cli
push
mov
lcall
push
push
inc
pop
push
inc
push
fimuls
fisubrs
fisubs
div
jmp
adc
les
xor
aad
insl
enter
sub
add
and
sbb
inc
jge
or
cmp
jno
cmpsb
fldl2e
mov
pop
jb
pop
and
or
add
xchg
sub
data16
xchg
pushf
inc
pop
dec
fisubl
in
pop
mov
sbb
fisubrs
ficoml
in
aam
ss
lods
pop
mov
daa
dec
pop
pop
rcrl
and
cld
stos
movsb
ss
add
cli
in
and
outsb
mov
add
repnz
xlat
push
addl
dec
scas
cmpsl
les
idiv
sub
xchg
xor
push
orb
pusha
inc
jmp
push
cmp
sub
xor
mov
addb
pop
fidivrl
sbb
sub
cmp
popa
or
aam
pusha
outsb
rcll
sbb
mov
cwtl
pop
xchg
cmpb
outsb
mov
movsl
push
pshufw
ds
bound
mov
mov
jmp
fstl
inc
mov
mov
rorl
mov
sbb
and
insl
adc
sbb
mov
rcl
repz
pop
int
popf
pop
int3
or
dec
sbb
inc
fcoms
push
cs
xchg
xor
cmp
sub
out
inc
xchg
out
add
jbe
sahf
je
push
shlb
incl
and
cmpsb
jmp
jns
cmc
push
inc
aad
and
inc
sbb
xchg
into
ss
xor
jno
dec
mov
mov
rolb
pop
push
inc
je
mov
xchg
out
mov
add
cmp
mov
cmp
nop
mov
add
in
popa
insb
mov
jb
lcall
popa
sub
mov
dec
xchg
mul
push
pop
mov
xor
pop
ljmp
adc
xchg
imul
ficompl
add
pop
ljmp
leave
rcrl
out
es
rcrb
cmp
xchg
stos
sbb
nop
inc
insl
sahf
das
jb
push
in
mov
lods
cli
pop
mov
addr16
or
cmp
inc
pop
dec
jecxz
xchg
inc
add
out
cmp
cmp
push
cs
add
sub
js
fnstenv
lcall
aad
shl
mov
cmp
fsubs
lret
xchg
and
add
adc
cmp
add
stc
pop
arpl
mov
cmc
pop
dec
xor
int3
test
jbe
scas
sub
and
mov
pop
jecxz
test
push
xor
or
repnz
movsl
inc
sbb
mov
jg
stc
fisttps
mov
insb
jbe
mov
clc
jl
fbstp
sub
cltd
nop
lods
sbb
mov
ljmp
hlt
mov
fists
fcompl
push
inc
icebp
ds
int3
push
push
jae
add
jg
adc
stos
fdivl
mov
rorl
lahf
addl
test
popf
and
cwtl
jle
nop
mov
imul
lret
in
cli
outsb
add
mov
mov
stos
fsubrs
mov
pop
sbb
stc
icebp
jmp
mov
push
lock
inc
shrb
clc
fdivrs
sbb
je
cld
sbb
mov
xchg
arpl
adc
int3
popf
cmp
mov
out
add
cld
or
xor
mov
scas
jmp
stos
push
xor
xor
mov
enter
js
or
mov
popa
pop
xor
ror
mov
movsb
mov
sbb
dec
inc
inc
push
and
fimuls
xchg
sub
sbb
pop
test
ret
xchg
pop
shl
leave
fisubrs
mov
in
sbb
dec
cmpsb
or
test
mov
hlt
lcall
leave
pop
push
add
push
inc
or
xchg
daa
mov
rcrl
je
dec
loopne
cmpsb
in
jg
xchg
mov
fs
inc
fs
out
adc
aas
push
je
xchg
mov
clc
and
addl
or
mov
xor
inc
sbb
iret
pop
lcall
stos
ret
sbb
les
jg
push
jge
cmp
pop
add
add
es
cmp
jb
adc
gs
popf
shlb
test
pop
lds
sub
div
push
inc
adc
lods
push
sbb
and
mov
jmp
daa
orl
mov
push
adcb
sub
call
into
leave
jb
pop
mov
add
cmpsb
mov
test
pop
aam
jns
dec
imul
cltd
scas
repnz
out
or
cmp
mov
cs
pop
sub
je
daa
xor
sub
sub
js
sub
xor
add
out
xchg
push
sub
cmp
xlat
pop
sbb
jae
jle
mov
outsb
xor
outsl
lods
pusha
fcomps
in
and
xchg
add
xlat
xor
cmp
jno
and
inc
xlat
imul
imulb
push
pop
push
daa
jnp
hlt
pop
fcompl
scas
out
sbb
xchg
lock
push
loop
xchg
sbb
jp
sbb
pop
mov
jne
push
add
cmp
jmp
or
out
add
jl
mov
loope
push
sub
dec
mov
js
jns
subb
sarl
dec
test
dec
loopne
dec
xlat
mov
jbe
or
or
shr
sbb
shl
and
cli
lods
enter
jbe,pn
shrl
das
or
push
push
scas
xchg
outsb
push
lret
sbb
les
mov
inc
inc
xchg
ret
fdivrs
mov
or
pop
cmc
xchg
mov
jb
pop
add
and
add
ficoms
jbe
adc
cmp
out
scas
testb
jnp
xor
xchg
rolb
cmp
test
lret
imul
cmc
fstl
jb
push
pop
and
push
add
pop
push
sbb
add
cmpsl
and
push
and
mov
icebp
lret
ljmp
imul
xchg
and
push
mov
mov
mov
sbb
cmp
mov
js
out
aaa
add
jmp
sbb
xor
cmp
and
or
jnp
test
into
pop
add
ljmp
push
add
roll
insl
inc
dec
jns
call
ficompl
mov
insb
stos
cli
push
xchg
push
sub
popf
mov
insl
or
jg
bnd
shrb
xor
add
je
dec
aaa
mov
cmp
inc
test
bound
lods
push
lcall
ret
and
sahf
fmull
test
rcll
sti
dec
push
or
mull
add
je
lret
fwait
fwait
push
adc
lahf
mov
cmp
inc
add
arpl
cmp
jns
jne
jl
jp
or
inc
cmpsb
xor
das
mov
adc
daa
xor
insl
sub
pusha
sbb
popa
jg
je
or
mov
pushf
outsl
popf
mov
fildll
add
stos
mov
mov
mov
cmp
xor
xchg
pop
dec
test
inc
lret
xor
subb
xchg
cmpsb
ljmp
rorb
mov
addl
js
cmp
int3
jne
in
arpl
repz
jecxz
pop
sub
cltd
or
testb
sti
sub
sarb
pop
mov
dec
xor
sbb
mov
mov
cmc
lahf
push
pop
into
adc
xor
sub
pop
imul
push
les
or
adc
insl
je
dec
popa
xchg
fldlg2
jge
dec
into
insl
repnz
and
gs
lea
xor
mov
adc
cs
xchg
xchg
dec
fldenv
jle
add
ret
leave
ja
lock
loop
push
mov
jb
adc
and
xlat
mov
rolb
push
push
frstor
insl
pop
xchg
call
fstl
cmp
inc
gs
enter
adc
pop
notb
push
lods
fimuls
stc
push
adc
mov
mov
test
mov
cmpsb
push
xor
cmp
iret
xor
xor
cs
lds
push
xchg
fdivs
push
imul
sbb
in
jb
mov
jge
lods
call
cmpsl
jle
mov
jnp
sbb
or
popa
mov
jo
outsb
mov
jg
dec
mov
inc
je
sbb
xchg
repnz
jo
sbb
push
jmp
cmp
or
ds
je
mov
stc
mov
push
or
mov
repz
fwait
cmpsb
call
sub
push
inc
mov
lods
jg
adc
xlat
jge
ficompl
mov
push
enter
pusha
rorb
test
sar
fsub
push
pop
push
inc
jo
jmp
dec
movb
stc
cmp
xacquire
pop
mov
jmp
int
cmp
jge
lret
data16
xor
cmp
movsb
test
xchg
inc
ficoms
add
incl
or
mov
and
xchg
cltd
adc
je
dec
je
bound
lahf
shlb
add
seto
fwait
and
mov
fsts
adc
add
fiaddl
in
fistps
insl
xchg
cmc
jge
jae
jmp
scas
push
test
sbb
or
arpl
rolb
jecxz
xlat
inc
lret
xchg
clc
test
xor
fidivs
mov
sub
arpl
and
push
lret
dec
dec
out
movsl
ljmp
and
fisubrl
jle
sub
movsl
ds
and
clc
xlat
or
fwait
mov
push
dec
dec
jl
shr
out
enter
das
fcompl
popa
jbe
lcall
dec
lds
push
xchg
js
bound
jnp
add
gs
jp
mov
out
int
dec
xchg
movsb
mov
lods
into
xchg
cmp
les
lock
sti
mov
push
pop
pop
imul
push
mov
xchg
pusha
rcll
fldl
arpl
fisubrl
inc
gs
enter
loopne
jb
sar
fmuls
pop
loop
cmpsb
sbb
pop
sbbb
sub
sbb
paddw
je
sbb
aas
fcmovne
jns
push
mov
cmp
mov
push
mov
push
scas
xchg
subb
scas
mov
mov
or
pop
xor
adc
pop
lea
lcallw
jns
ret
cmovno
in
inc
sahf
jae
pop
aaa
xchg
sbb
mov
xor
mov
adc
daa
pop
dec
mov
lcall
jo
int3
and
aam
inc
leave
test
jnp
jp
jnp
xchg
std
mov
push
pushf
dec
pop
lcall
in
rcll
xor
lret
pop
mov
int3
pop
cmpsb
xchg
out
dec
adc
push
rol
xor
push
insb
jp
add
das
movsl
into
stos
sub
push
sbb
pop
xchg
aaa
mov
icebp
mov
push
mov
jle
mov
and
push
push
pop
inc
imul
xor
sub
sbb
shll
mov
sti
sub
cmp
or
and
dec
lock
arpl
and
divsd
cmp
jbe
push
sbb
insl
out
std
mov
pushf
lock
aas
and
call
push
jne
add
sbb
push
push
frstor
hlt
test
std
in
ds
jns
xchg
push
xchg
xchg
mov
sbb
hlt
xor
dec
push
stos
cmp
cmp
dec
out
pop
sbb
mov
pushw
arpl
out
xchg
popa
hlt
inc
sti
cmpsb
out
push
jno
dec
sbb
in
or
or
cmp
or
sahf
or
outsb
dec
jmp
inc
mov
pop
pop
nop
and
add
rcrl
push
mov
pop
pop
push
pop
sub
mov
push
imul
in
insb
pop
and
shrl
sub
xchg
fistpll
nop
jae
mov
fbld
mov
jl
cld
pop
cmp
call
sub
repz
stc
xor
add
mov
jnp
movsl
ror
movsl
fnstsw
les
js
rclb
popf
test
xchg
shrb
mov
add
dec
ljmp
xchg
sbb
jge
xor
popf
insl
dec
sbb
add
aam
jb
aad
inc
stos
xorl
rcll
or
dec
pop
test
cmpsl
push
aam
pop
lods
dec
xchg
imul
out
mov
nop
testl
mov
or
clc
ja
movsb
aad
sbb
adc
inc
xchg
jmp
dec
outsl
test
loope
push
mov
retw
xchg
or
xlat
out
pusha
shll
dec
push
lret
repz
into
in
cs
sbb
jae
jb
sub
pop
mov
jge
cltd
fdivrl
loop
not
lock
rcll
leave
lret
loope
jno
addb
aad
sbb
adc
testl
je
out
xchg
loop
jb
cld
ret
cli
in
punpckhbw
ret
shl
int3
add
xor
fbld
pop
xchg
sbb
std
enter
int3
daa
jb
popf
loope
mov
push
xor
inc
cmp
mov
push
pop
adc
stos
or
in
pop
scas
dec
adc
mov
nop
sbb
scas
jne
inc
jno
inc
je
stos
sbb
lea
jl
adc
vunpcklps
mov
mov
pop
loope
dec
arpl
fdivrs
pop
int3
mov
dec
addr16
sbb
insb
stos
pop
sbb
xchg
stos
mov
xor
mov
pop
jb
sbb
in
xchg
mov
test
out
or
enter
and
es
jmp
bound
rclb
adc
xchg
mov
mov
imul
sbb
add
bound
xor
pop
push
rcll
repz
jmp
sub
fldl
aad
inc
dec
dec
fs
mov
dec
mov
imul
inc
and
xor
mov
pop
or
sti
jae
jge
xchg
loope
movsl
xchg
mov
mov
ja
push
loope
popa
testl
adc
daa
data16
mov
xchg
repnz
xor
mov
jns
or
in
and
mov
inc
sbb
xor
sti
xor
adc
stc
jnp
stc
imul
adcl
xor
xchg
or
dec
and
in
and
dec
jo
test
dec
rcll
lahf
jae
movsb
xchg
enter
jbe
pop
imul
repz
mov
je
jmp
out
ljmp
fnstsw
test
inc
or
adc
cmp
fstpt
mov
mov
jg
outsl
cmp
pop
cmpsb
xor
fimuls
and
sub
cmp
lods
aaa
bound
xchg
and
inc
mov
in
ja
ja
jg
xchg
sar
jp
push
shrl
jle
mov
lock
repnz
add
sub
push
fsubr
push
mov
mov
jg
out
inc
int3
insb
mov
ret
mov
insb
mov
mov
aaa
sti
hlt
pop
jnp
sti
mov
or
dec
arpl
icebp
icebp
push
jb
xor
addr16
xrelease
mov
bound
and
aas
mov
sub
add
popf
mov
scas
adc
push
and
push
iret
and
mov
adc
or
cltd
aam
outsl
mov
or
enter
cmpsb
fiaddl
sbb
xorb
adc
dec
ret
cmp
sub
inc
mov
pop
or
in
rcll
shlb
jmp
outsb
inc
insb
imul
pop
sub
mov
sar
add
inc
push
subb
pop
cltd
pop
jg
or
xchg
sahf
mov
data16
inc
push
loopne
test
cmp
aam
xchg
jbe
inc
add
mov
or
pop
lahf
fbld
add
arpl
jp
lds
cwtl
stos
xchg
popa
movsb
loope
ja
fstl
jmp
adcl
push
xchg
sbb
enter
xchg
sub
jg
out
or
lock
lret
jge
out
in
push
mov
inc
inc
insb
mov
pop
sub
or
adc
out
stos
popf
push
pushf
iret
nop
fbstp
inc
sar
lock
dec
sahf
sub
jl
insl
push
mov
or
pop
test
xlat
push
pop
mov
inc
cmp
insb
aam
addl
fmull
jo
std
imul
std
mov
inc
mov
mov
mov
fdivrl
in
jle
sti
xchg
aad
sub
inc
movsl
loop
xchg
ss
fists
aad
sahf
notb
dec
popf
and
add
imul
lret
and
xor
je
stc
pop
pop
jns
je
arpl
xor
jmp
push
inc
scas
les
push
aas
xor
das
sbb
cmpb
mov
fidivrs
mov
mov
or
sti
rcr
or
lret
sub
push
ja
jae
pushf
and
mov
jecxz
lock
adc
mov
cltd
and
xor
repnz
pop
inc
out
push
xchg
sub
ss
inc
incb
push
stc
mov
or
cmc
insl
pop
mov
lret
and
jne
jle
repnz
pusha
pop
jle
dec
outsb
xchg
push
or
push
cwtl
out
push
cmp
daa
push
jae
or
xor
xchg
sbb
jnp
pusha
sahf
fwait
push
jmp
sub
vmovss
dec
dec
mov
fistpll
ror
mov
dec
mov
pushf
lahf
xchg
jns
mov
jmp
lahf
and
jnp
xchg
adc
mov
dec
movsl
nop
fsubs
inc
pop
icebp
fstp
mov
mov
cmp
add
movsb
out
push
sub
xor
ljmp
add
shrl
pop
ljmp
into
lcall
mov
idivb
mov
pop
loope
std
or
add
inc
jg
mov
mov
or
into
outsl
sti
push
sbb
jne
sub
mov
pop
popf
sub
fldl
frstor
or
mov
loopne
and
das
xchg
lret
xor
je
incl
dec
mov
dec
loope
insl
jns,pt
mov
and
mov
xor
fwait
and
cmc
sahf
xchg
cmp
push
rorb
jae
pop
add
push
jo
stos
xchg
xchg
lods
push
aad
dec
push
jmp
pushf
in
push
ret
insl
insl
mov
mov
ficoml
or
jne
repz
loopne
push
mov
xor
mov
xor
loope
into
push
in
cmp
sub
mov
cmp
scas
jae
push
cmpsl
and
rcl
mov
test
sti
jne
push
mov
pop
stos
cld
xor
adc
imul
pop
movsl
push
mov
dec
jbe
push
outsb
jge
push
loope
sbb
pop
in
les
adc
out
jg
and
xchg
rcrb
xchg
push
dec
repnz
cwtl
jg
fst
inc
xchg
lea
or
imul
inc
inc
jno
push
push
push
lock
pop
dec
jl
repnz
insl
mov
scas
cmpl
push
sbb
int3
leave
add
in
adc
sub
mov
pop
mov
pop
icebp
ljmp
fiadds
adcb
ss
inc
aas
cmp
aaa
fadd
dec
mov
roll
mov
inc
scas
outsl
sbb
mov
adc
mov
mov
mov
add
popa
scas
xchg
sbb
js
test
js
inc
outsl
mov
or
mov
adc
out
ret
xchg
pop
fs
int3
fmul
mov
int
or
mov
dec
leave
addr16
adc
mov
daa
cwtl
popf
push
xchg
jae
cld
mov
cmpsl
jg
js
add
lahf
imul
aam
cmpsb
push
cltd
int
addr16
aas
subl
inc
adc
push
mov
sub
pop
out
or
out
adc
pop
fcompl
imul
repz
inc
clc
pop
cmpl
cld
jl
iret
jl
xlat
js
nop
xor
incb
pop
jbe
jg
jmp
dec
push
orb
sub
addr16
dec
je
inc
mov
les
sbb
lret
fwait
adc
int
inc
dec
dec
test
roll
lret
sbb
dec
nop
mov
push
lea
or
sub
jg
in
into
iret
leave
xor
pop
ss
inc
xlat
inc
ret
fs
popf
adc
or
movsb
imul
mov
xchg
xlat
cmpsw
add
aad
call
sbb
push
sbbl
sub
sub
xor
lcall
cmp
scas
push
les
icebp
fstps
and
ja
sub
mov
js
lret
or
les
mov
inc
fisttpll
call
decb
sti
mov
and
jo
rcl
lock
imul
ret
das
or
add
xor
xlat
das
pop
fistps
pop
aaa
icebp
fwait
out
dec
inc
add
push
in
xor
jmp
call
lahf
mov
jns
aas
dec
xor
dec
sarb
dec
popa
cltd
add
mov
jno
lods
clc
push
fsubr
sub
dec
cmp
mov
pop
sti
jae
cmp
stos
rorb
add
inc
mull
jl
mov
push
and
shrb
or
sbb
setns
jg
inc
fs
pop
and
loop
ds
loopnew
xchg
shll
sub
cli
sub
adc
jns
movsb
adc
or
jnp
add
push
push
xor
sbb
sub
lea
jb
push
cmpl
call
mov
aas
mov
movsl
rorl
je
and
rcrb
adc
and
arpl
or
cmp
lcall
loope
adc
xlat
and
rcll
std
pop
lret
nop
and
and
cwtl
mov
mov
dec
popf
mov
xor
clc
mov
in
js
mov
outsl
mov
es
adc
sbb
andb
dec
aad
mov
xchg
cmp
adc
xlat
and
cli
add
jne
lcall
icebp
or
stos
shrl
pop
shr
add
mov
les
xchg
xlat
jl
adc
aam
insl
cmp
sub
mov
and
push
pop
pop
clc
adc
hlt
outsb
mov
or
ja
jo
jmp
insl
add
daa
sub
jle
or
iret
pop
jnp
insb
ret
xlat
xchg
xchg
xchg
mov
sub
imul
insl
jbe
int3
sub
in
repz
aad
test
add
wrmsr
cmp
pop
std
xchg
lcall
jp
pop
adc
orl
aam
adc
add
pop
iret
xchg
int3
sbb
add
mov
add
push
shl
sarl
ljmp
test
stos
outsl
xchg
fdivrl
sbb
mov
sub
xchg
lods
jno
xor
movsb
adc
or
mov
stos
or
subb
mov
hlt
pushf
imul
aaa
push
add
jne
shll
es
pop
xor
sar
pop
in
mov
xchg
lock
leave
cmp
popf
mov
add
es
xor
adc
sbb
mov
int
push
ret
xor
mov
int3
dec
mov
lds
and
and
cmp
sbb
lds
aad
jle
cmp
add
mov
cltd
mov
out
popa
ss
leave
fadds
add
push
push
fistl
sbb
push
or
dec
sbb
fbld
cwtl
add
icebp
or
sti
jge
aam
in
mov
inc
loope
push
jae
xchg
pop
lods
cmp
into
dec
lahf
xlat
test
loop
dec
shlb
mov
call
rol
pop
cwtl
clc
adc
scas
add
das
or
and
lock
jno
inc
inc
cmp
aas
add
int3
lret
fwait
loope
cld
call
rol
fwait
mov
xor
or
mov
pushf
gs
loope
cmp
adc
pop
mov
dec
addr16
int
jl
in
decb
addr16
cmpsb
mov
jmp
les
dec
into
xor
and
push
cmp
xor
mov
pop
pop
mov
cmc
push
test
jp
std
or
lods
sbbb
test
or
mov
mov
jnp
mov
movsl
insb
bound
xchg
gs
or
popf
and
mov
or
xor
popl
adcb
ljmp
adc
daa
pop
xchg
xchg
mov
bound
xchg
push
sbb
aam
sub
popa
lock
out
sub
jp
cmpsb
mov
xchg
arpl
out
lods
popl
cmp
shr
and
inc
icebp
ss
idiv
movsl
leave
mov
call
arpl
sbb
pop
sub
push
fucomip
daa
sbb
xchg
jne
xchg
fsub
cmpsl
scas
cmp
in
jle
and
add
in
jae
testl
adc
dec
jns
mov
in
push
jle
mov
cli
mov
aaa
or
push
ljmp
lods
jp
lea
cmp
outsb
jbe
or
inc
xor
cmp
movsl
pop
scas
js
push
cmpsl
mov
xchg
les
adc
pop
fs
jge
rorl
push
mov
dec
mov
iret
out
loop
cmp
test
mov
jae
and
test
pop
cs
inc
dec
icebp
pop
jge
add
xchg
stos
stc
pop
and
push
fwait
test
push
scas
ja
cmp
movsb
and
mov
pop
fcmovbe
add
dec
stos
lock
sbb
add
sub
popf
aas
pop
mov
sub
repnz
fs
and
mov
imul
mov
rcr
xchg
into
jno
into
or
mov
sub
pop
jl
jmp
popa
jecxz
and
mov
xchg
ret
out
xchg
push
dec
loop
ljmp
pop
js
sbb
add
push
cmp
push
jnp
andb
mulb
fcmovne
pop
push
push
sub
ljmp
ds
or
inc
movsb
add
push
data16
sahf
cmp
sbb
adc
adc
fists
dec
in
sbb
leave
repz
in
mov
mov
test
scas
push
xor
mov
mov
xchg
clc
mov
sub
sub
inc
and
int
into
pushf
test
xor
repz
cmp
pop
adc
jnp
xchg
jg
mov
stc
cmpsb
mov
dec
popf
aam
jno
jno
loope
fbstp
stos
dec
lcall
fsubrs
pop
rolb
lret
pop
push
fdivr
xchg
jne
pushf
pusha
adc
xor
xor
leave
jecxz
sub
aam
mov
orb
xor
mov
pop
sub
push
adc
and
sbbb
dec
std
daa
ficomps
mov
push
pop
sbb
imul
xchg
sub
cmp
sbb
cld
hlt
sub
ljmp
pushf
and
stos
mov
ja
add
nop
in
fisubs
or
outsl
mov
dec
xchg
pop
mov
mov
negb
adc
xor
lds
fidivrl
orl
lret
fistpll
negl
dec
mov
aam
pop
loop
mov
subl
test
cmc
or
enter
dec
xchg
mov
sbb
or
sub
jle
push
cmp
jge
or
and
jo
and
mov
push
arpl
js
bnd
int
ficomps
test
xchg
negb
inc
xor
inc
ficoml
push
out
cltd
push
jmp
inc
mov
mov
or
sub
add
sub
orb
sub
xchg
dec
rcrl
mov
sahf
ja
cmc
xchg
pop
pop
iret
cs
jmp
xchg
dec
js
xchg
mov
in
dec
sbb
pop
enter
mov
or
mov
mov
nop
aas
sub
xchg
or
and
sbb
in
pop
mov
lock
dec
repz
xor
loop
push
ja
loop
jg
push
xchg
sbb
mov
movsb
scas
adc
or
push
call
lods
call
and
fnsave
dec
aad
add
adc
cli
push
and
dec
dec
jp
jmp
push
or
adc
stc
cmp
and
test
scas
lock
adc
sbb
call
dec
jae
orl
jle,pn
jbe
imul
les
xor
and
and
scas
xor
sbb
outsb
jg
sti
jne
sub
xchg
fimuls
push
daa
mov
mov
scas
pop
fisubl
xchg
and
ret
push
or
aaa
push
cltd
fistl
fiaddl
mov
xor
push
ror
or
ljmp
dec
add
aam
pop
daa
adc
sub
fsubs
mov
pop
lods
inc
orb
and
inc
sub
mov
popf
xor
mov
inc
fldenv
leave
ja
insl
xor
mov
pop
mov
cmpsb
clc
adc
fldenv
bound
fstpl
out
daa
mov
and
sbb
call
fistl
pop
cmp
or
or
push
xor
jns
or
add
rcrb
mov
mov
mov
fwait
data16
ds
lods
pop
mov
sub
hlt
lods
mov
std
push
mov
xchg
arpl
out
xchg
sbb
rcll
enter
mov
jg
ds
test
loop
mov
dec
shrd
mov
cmp
lcall
dec
into
in
mov
push
fdivr
je
jmp
jp
jmp
jnp
pop
mov
adc
jmp
jbe
ret
xor
call
imul
pop
js
push
outsb
and
outsl
pop
dec
pushf
inc
sbb
orb
sbb
xor
push
mov
sahf
cli
fbld
pop
inc
test
les
ljmp
inc
push
jb
out
jnp
jnp,pn
jecxz
or
mov
mov
mov
xabort
inc
in
addl
in
jl
fstl
inc
or
mov
cmpsb
mov
std
push
inc
inc
pop
inc
push
jmp
ret
nop
sbb
inc
sub
xchg
xor
mov
in
test
notb
xor
das
loopne
ja
fwait
ss
andb
rol
sahf
jbe
mov
jecxz
adc
or
mov
cmp
pushf
decb
fmull
jmp
jnp
test
daa
cld
push
sub
mov
push
mov
mov
sbb
xlat
mov
in
lods
sbb
sti
fnsave
cmp
das
iret
movsb
icebp
xor
mov
xor
loop
sbb
adc
or
mov
pop
fidivrl
mov
sub
fwait
les
jne
dec
push
clc
add
pop
in
lods
lods
jmp
mov
jl
push
aam
fnstenv
and
shl
sub
adc
jbe
pop
jl
jp
pushf
lods
lea
imul
adc
or
sbb
mov
jno
mov
or
ljmp
stos
test
adc
sub
arpl
xchg
xchg
add
jl
insl
or
xchg
loopne
roll
sub
arpl
cld
dec
adc
test
mov
fildl
cmp
nop
loop
jge
mov
push
add
pop
and
sbb
or
xor
aam
jns
add
xchg
dec
pop
inc
xchg
lods
cwtl
jne
daa
mov
aas
jecxz
dec
lcall
adc
dec
mov
sbb
shrl
sub
rcrl
mov
repnz
xchg
and
jl
mov
arpl
rcrl
lods
pop
inc
aad
push
push
iret
pop
mov
push
sub
addl
ret
and
inc
icebp
cmpsb
fimull
mov
cmc
mov
and
outsl
adc
pop
je
fwait
call
dec
jno
punpckhwd
ss
cmp
cmp
ja
adc
out
jecxz
popa
jp
leave
pop
sti
mov
loop,pt
mov
stos
inc
cmp
es
dec
gs
dec
cmp
jecxz
mov
and
pop
enter
xchg
push
arpl
lret
push
xlat
push
int
ljmp
jns
in
fnsave
cld
xor
add
mov
scas
pop
sahf
add
outsb
push
cmp
out
fidivl
adc
fldl
mov
inc
pop
fxch
cmp
pop
test
call
in
pop
cmp
or
hlt
lods
push
add
mov
and
cmpb
push
sub
mov
jbe
fidivs
in
cmp
shrb
xlat
mov
inc
aad
mov
jno
pop
lret
test
inc
ljmp
cwtl
lods
lcall
and
cmp
push
adcl
std
stos
sub
sbb
fwait
stos
mov
jno
fisubs
push
and
push
into
int
aad
push
in
jl
cmp
aas
aad
sub
push
push
ret
ret
fidivrl
test
push
daa
add
call
rcr
pop
lds
sbb
mov
insl
jae
add
mov
int
sbb
xchg
clc
stos
cli
or
cs
das
mov
lea
and
jns
test
sar
mov
inc
inc
shll
movsl
mov
shlb
sti
pop
addr16
and
and
mov
cmp
xlat
sbb
jl
mov
jmp
insl
xchg
movsb
jl
jb
cmp
shlb
xchg
dec
push
movsb
ret
pushf
loop
mov
pop
push
cmp
dec
aaa
out
dec
mull
popa
mov
mov
push
cmc
jo
call
xor
or
fidivrs
xor
push
orl
mov
js
add
dec
jecxz
pusha
cli
mov
xchg
or
shlb
add
xchg
scas
addr16
mov
lock
adc
ficompl
dec
push
orl
imul
call
push
stos
xor
xor
sub
mov
test
sub
pop
or
outsb
pop
pop
or
repnz
sahf
mov
adc
pushf
aas
jg
stc
lahf
add
cmp
loope
adc
out
imul
inc
orl
add
ror
insb
aaa
rcr
sti
adc
xchg
test
js
xor
xchg
es
pop
cmc
sub
pusha
cmp
nop
outsb
aad
clc
sti
sbb
call
pop
movsb
cld
mov
stos
pop
adc
ret
inc
and
jne
sub
xchg
cmc
aam
and
iret
outsb
std
xor
xchg
sbb
add
cwtl
xchg
pop
cmpsl
and
mov
inc
es
das
xchg
shrl
push
sbb
bound
xor
lea
imul
cmp
sbb
and
ficompl
jle
icebp
jno
adcb
hlt
ljmp
dec
in
push
repz
popf
pop
loop
insl
fldenv
add
pop
or
bound
mov
mov
cwtl
fs
mov
sbb
jge
push
orb
out
pop
cmp
in
cld
imul
jmp
imul
mov
pop
mov
mov
jne
sti
outsl
jmp
stos
or
cmp
cmpsb
pop
aam
cwtl
inc
into
mov
pop
mov
adc
cs
repnz
or
xor
add
ud2
mov
jmp
je
cmp
xchg
mov
cltd
pop
cmp
lret
jge
adc
imull
test
adc
addr16
or
jg
pop
decb
outsl
xchg
sub
xchg
mov
stos
aaa
dec
test
push
pop
push
cs
into
leave
lock
into
pop
push
mov
ret
mov
mulb
pop
jno
dec
aam
out
mov
or
daa
mov
or
fs
loop
insl
push
arpl
in
cmp
push
daa
lcall
jb
jne
jecxz
push
cmp
andb
xchg
jns
test
xchg
or
lret
adc
inc
pop
cmp
mov
add
lods
sbb
dec
cld
sahf
jo
lock
mov
cltd
jle
add
dec
jl
adc
dec
js
adc
in
push
jo
iret
dec
jmp
mov
dec
sbb
xchg
sbb
and
push
and
rcrl
sub
sbb
push
dec
ja
movsb
addr16
out
cmp
adc
movsb
xchg
and
pusha
fldenv
imul
sbb
mov
add
lds
sbbb
lea
or
push
mov
test
les
movl
pop
in
sahf
inc
inc
inc
shl
jno
pop
adc
mov
fs
fisubs
enter
nop
sbb
addb
sarl
add
repnz
repz
mov
cmp
mov
lods
jecxz
adc
dec
lret
outsl
cld
cltd
cmc
shll
subl
mov
testb
mov
and
std
lods
xor
xchg
sub
movsl
fistpll
stos
pop
add
pushf
cmpsl
sub
add
xor
in
stos
push
sbb
arpl
insb
xor
mov
stos
pop
inc
scas
dec
cld
lea
test
pushf
cmp
iret
int
fidivrs
imul
mov
loop
mov
add
jle
call
and
pop
insb
lret
jno
ds
mov
push
dec
sbb
sub
pop
pusha
cmp
mov
inc
push
mov
mov
outsb
lods
jge
xchg
ds
mov
xor
mov
loopne
lods
cwtl
jns
outsb
pushl
les
and
into
cmp
ljmp
mov
xor
push
rol
push
addr16
insb
jge
push
xchg
shll
adc
add
add
fiaddl
nop
neg
xorb
ljmp
fimull
dec
push
insl
in
lcall
cwtl
jno
xchg
ss
xchg
loope
lea
notb
iret
int
jp
int3
mov
xchg
jb
into
movaps
popa
jecxz
jle
shlb
dec
sub
out
inc
stos
jbe
shl
in
sub
adc
stos
ror
cmp
xchg
ss
sub
cmp
inc
sahf
jmp
mov
les
inc
mov
xor
into
jae
je
inc
jns
sub
mov
mov
or
cld
call
cmp
inc
test
add
inc
lea
test
mov
popa
mov
aas
cmp
test
cmp
sbb
call
jae
pop
mov
iret
inc
adc
cmp
dec
mov
dec
dec
ret
dec
stos
push
jg
imul
mov
mov
mov
or
mov
mov
repnz
push
sub
popf
aam
jnp
jmp
mov
or
xchg
icebp
mov
push
data16
sbb
mov
jp
cli
call
dec
rcl
ljmp
mov
add
jp
je
jl
dec
and
out
shl
mov
jp
pop
insl
mov
sbb
inc
cmpb
cltd
icebp
inc
lea
sbb
popf
jge
mov
and
push
sti
xchg
in
lahf
stc
dec
sti
xor
adc
shll
adc
ljmp
out
out
rcl
inc
test
js
call
adc
fisttpll
sbb
inc
jl
and
mov
sbb
jmp
xchg
add
aad
roll
lods
mov
mulb
cmp
sbb
jg
int3
push
push
lock
stos
pop
repz
push
cmp
add
pop
outsb
sbb
lods
and
fwait
mov
mov
fisubrs
fistpl
shll
imul
mov
sub
pushf
sub
je
cmpsl
sbb
neg
or
mov
and
xor
xchg
add
add
jmp
lahf
push
adc
or
insl
mov
jg
add
into
test
rorb
cmp
std
lea
pop
fnstsw
mov
push
push
jo
negb
aam
xchg
popa
stos
jnp
push
push
rorb
sahf
stos
shll
jne
pcmpeqd
roll
mov
xor
xor
add
imul
add
in
xchg
dec
push
and
jecxz
jg
pop
add
jb
arpl
cmp
mov
out
mov
xor
mov
push
out
div
cwtl
fs
in
stos
clc
fwait
callw
dec
je
push
mov
jl
in
out
sub
into
gs
dec
mov
push
jl
inc
mov
in
lock
push
stos
lea
push
fisubs
mov
pop
cmc
repz
or
dec
mov
scas
pop
push
xchg
cmc
sbb
shll
pop
lea
xlat
lea
jle
loope
add
mov
into
mov
mov
push
testb
or
push
std
lods
js
jb
popf
jnp
insl
ljmp
mov
or
int
cmp
dec
add
in
and
push
scas
das
cltd
fadd
cmp
in
ljmp
loopne
mov
pushf
push
mov
xchg
jbe
subl
test
jle
fcoms
les
cs
push
addr16
repz
mov
pop
data16
pop
rcrb
jns
sbb
mov
in
ljmp
std
stc
ret
jl
movsl
jle
sub
lret
xlat
pop
adc
cmp
int3
lahf
ja
dec
gs
loop
mov
mov
xchg
cmp
iret
mov
int3
ja
cmp
cmc
jno
lahf
push
cmpsb
jp
and
popl
add
imul
sahf
int
js
and
test
fisubl
js
pop
bnd
pop
ret
dec
cmp
xchg
addr16
dec
jns
add
sti
pop
xchg
adc
mov
mov
adcl
sbb
xlat
movsb
pop
push
in
cs
dec
enter
iret
sub
push
outsb
jmp
fistpl
and
sub
sub
popa
lea
add
shl
push
dec
lock
ficoml
nop
sahf
mov
or
xor
mov
push
mov
jae
fldt
push
or
lock
inc
popa
sub
xchg
mov
ret
lods
fucomp
jl
in
pop
jge
ds
iret
ficoml
push
scas
jno
mov
loope
ljmp
outsb
and
int
out
repz
hlt
inc
jo
mov
cmpsb
sti
bound
sub
ror
mov
in
cmp
fucomip
popf
pop
dec
sti
jge
fdivrs
xchg
mov
push
repnz
xor
int
iret
roll
sbb
push
sbb
es
dec
dec
and
and
sti
gs
into
fistpll
lret
gs
cmpb
imul
mov
jg
jnp
cmpsb
stos
pop
pop
fs
in
test
pop
mov
lahf
test
stos
es
lcall
jno
sarb
or
stc
ljmp
sbb
int3
dec
cmpsl
cmp
rclb
hlt
xchg
jo
push
xchg
outsb
flds
push
and
xchg
adcb
rclb
cmp
push
jno
xchg
mov
arpl
cmc
cmp
pop
fsubrl
int3
mov
je
mov
jl
xor
dec
repnz
and
push
cli
pop
push
ja
push
sbb
pop
mov
pop
adc
loopne
lret
gs
ja
outsb
mov
xchg
mov
aaa
divl
mov
cs
dec
xor
xlat
cmp
adc
xlat
fldl
filds
aaa
lahf
roll
cmp
fsubr
cmp
mov
shll
test
push
cld
mov
test
imul
ja
mov
rcrb
pop
add
nop
leave
dec
pop
cld
jecxz
in
int3
sbb
sub
shlb
popa
mov
mov
mov
dec
sti
pop
rcr
sbb
push
cmp
in
loopne
sub
lods
mov
inc
inc
push
dec
lods
mov
movsb
cltd
lahf
and
dec
insl
xchg
dec
cmpsb
jmp
sbb
jae
addb
pop
cmpsl
subb
outsl
mov
pop
out
shrl
lret
testl
push
xor
adc
pop
xchg
xchg
js
ds
and
inc
dec
xor
jl
popf
and
sarl
or
aam
xchg
out
add
das
push
repz
sarl
adc
xor
mov
xchg
pop
mov
xor
sbb
mul
into
pop
aaa
pop
add
data16
mov
sbbl
mov
cld
leave
ds
dec
loopne
mov
pop
xorb
out
lds
push
xor
test
test
mov
mov
std
mov
sbb
add
arpl
mov
jno
mov
add
cmpsl
mov
cs
mov
sbb
mov
xchg
xor
dec
mov
ss
mov
cmp
add
fidivl
nop
leave
sbb
pop
jecxz
in
repz
jae
nop
cwtl
inc
lcall
add
mov
mov
arpl
sub
clc
fistpll
cmp
mov
inc
lret
mov
movl
insl
in
jge
cmp
aad
inc
dec
ds
scas
add
outsb
sbb
cmc
push
adc
cmp
dec
sub
mov
push
mov
test
push
jmp
and
pushf
clc
addr16
loope
jns
inc
sub
test
jbe
xor
out
mov
mov
stc
repz
push
xchg
sbbl
xchg
push
and
mov
dec
xor
sbb
mov
lcall
emms
out
lock
mov
mov
into
dec
cmpsb
outsb
sti
push
xchg
andl
repz
loope
mov
cli
outsb
push
mov
das
stc
cld
and
sub
repz
repz
cmpsl
pop
lds
ds
add
xor
inc
push
or
aaa
mov
pusha
jns
cmpb
pop
es
pop
inc
scas
in
das
jo
xor
inc
cmpsb
or
jb
push
cmpsb
repz
fbstp
inc
xchg
adcl
adc
imul
mov
or
inc
loopne
jl
rcl
jp
push
cmp
inc
mov
fdivs
gs
subl
loopne
jno
and
sub
dec
enter
mov
jg
xor
jae
lret
dec
mov
je
mov
fildll
sbb
jnp
or
pop
roll
mov
popf
inc
fs
cld
xor
sub
addr16
lret
xchg
faddl
pop
out
pop
push
jno
gs
lahf
rcrb
pop
rclb
xor
jle
fsub
mov
in
sarl
jmp
add
std
and
in
rol
fwait
shrb
test
inc
out
stos
dec
jp
mov
notl
pusha
insl
push
mov
ret
gs
stc
xor
xchg
popf
add
xchg
and
jl
sbbb
test
out
icebp
xor
imul
test
xchg
aas
mov
in
in
mov
lahf
scas
mov
push
stc
scas
or
lahf
movsl
jno
push
sbb
push
fs
xorb
shl
jecxz
outsb
repnz
sub
sub
fisttps
inc
push
mov
mov
cmpl
add
sub
int3
ret
jbe
hlt
xchg
pushl
dec
sbb
hlt
sub
xor
repnz
mov
inc
jp
enter
pop
inc
nop
xchg
mov
test
adc
and
jnp
shll
inc
leave
addr16
mov
outsl
mov
lock
stc
lock
nop
notb
or
mov
bound
repnz
icebp
jecxz
std
movsb
add
add
xchg
inc
mov
sti
mov
xor
jl
push
lret
xchg
cli
mov
ficoml
cmpsl
pop
repz
mov
mov
jne
pop
cltd
out
inc
insl
loopne
aas
inc
and
int
cmp
loope
addr16
sbb
push
mov
lods
ljmp
cmp
sbb
cmc
push
loope
addr16
sbb
scas
lahf
jnp
and
in
adc
mov
dec
mov
cmp
jb
jae
sub
jmp
adc
divb
inc
rcrl
sbb
and
fxch
lock
mov
xchg
fsubrs
outsb
test
pop
xor
xorl
dec
popa
cltd
pand
jecxz
jecxz
sbbb
mov
loope
add
mov
cmp
cs
movsl
out
or
jne
arpl
fldl
or
mov
cmp
jne
mov
gs
inc
xchg
je
add
add
in
cmpsb
pop
test
ret
repz
addr16
pop
and
ret
lret
ss
data16
mov
iret
jmp
push
out
ss
cmpsb
call
xor
dec
and
add
cmc
lahf
xor
insb
cmpl
sub
loop
jge
cs
pop
inc
fcoml
dec
inc
sub
mov
scas
test
ret
jno
fidivl
shrb
fs
daa
mov
dec
arpl
adc
push
rcrl
xchg
add
dec
cmp
push
xchg
mov
call
mov
xchg
test
mov
mov
lcall
xlat
sub
cmpsl
sub
test
insl
jle
sub
rolb
icebp
bound
movnti
out
jecxz
pop
mov
mov
sahf
pop
arpl
out
scas
fcoml
mov
fildl
jo
movl
test
fstpl
lret
sbb
pop
movsl
xlat
test
popf
mov
jg
lods
add
gs
or
test
sarl
inc
shrb
mov
inc
sub
push
div
xchg
jp
popa
xchg
inc
inc
cs
in
dec
lcall
xor
lods
not
stos
or
js
add
outsl
fnsave
mov
push
idivb
cs
divl
imul
add
mov
push
cmpsb
and
or
pop
es
dec
outsl
inc
movsb
mov
push
add
aam
mov
dec
adc
imulb
jecxz
dec
jnp
enter
fdivrl
cs
cmc
in
push
in
mov
icebp
dec
lcall
popl
cmp
or
dec
cmp
dec
or
mov
sbb
loope
fadds
mov
mov
mov
or
push
push
mull
mov
inc
insb
test
adc
xor
jp
mov
mov
cld
repz
cmp
add
cmpsb
fdiv
lock
pop
sub
ja
mov
stc
mov
pusha
pop
xchg
pop
gs
dec
or
out
ret
pop
inc
loope
dec
imul
xlat
icebp
or
inc
adcb
inc
pop
jl
push
dec
adc
loope
add
mov
divl
sub
repz
mov
pusha
and
mov
loopne
push
push
call
pop
adc
or
sar
jl
out
sub
es
mov
mov
mov
fbstp
cltd
xor
sbb
aad
scas
pop
xlat
cmp
dec
inc
jl
stc
pop
xchg
inc
lahf
in
jg
fnstcw
add
adc
jbe,pn
mov
mov
xchg
and
jecxz
popa
adc
sbb
xor
pop
popf
jmp
sub
dec
nop
xchg
pop
mov
xchg
mov
jnp
fistl
testl
call
or
mov
pop
mov
ret
scas
mov
or
lret
icebp
cmp
incl
notl
iret
pop
insb
aaa
lahf
ret
and
stos
inc
loope
lahf
mov
pop
dec
lret
push
dec
add
mov
orl
adc
sub
mov
mov
popa
and
int3
jle
dec
inc
jmp
inc
lods
ret
adc
enter
leave
mov
mov
inc
mov
inc
out
mov
out
inc
loope
ret
mov
sahf
push
addl
pop
bound
sti
push
sbb
imul
or
mov
jbe
sbb
dec
pop
fidivl
out
inc
cltd
in
dec
outsb
pop
rcll
jmp
dec
sub
pop
cli
leave
leave
push
xor
cmp
and
imul
xor
mov
in
pop
cmp
cmp
stos
mov
shrb
loopne
rcrl
shll
jbe
cld
movsl
or
pop
cmp
adc
inc
mov
rolb
and
mov
or
out
pop
cmpsb
dec
stos
inc
in
and
roll
add
mov
lods
xchg
mov
cmpsb
adc
clc
sub
add
pushf
lcall
addr16
inc
shl
sbb
lahf
cld
sub
jns
xor
pop
negl
sarb
pop
shrb
int
inc
xchg
test
cld
and
roll
lock
adc
inc
fildll
test
xchg
mov
add
aaa
ret
nop
addr16
mov
mov
ss
ljmp
out
dec
jecxz
mov
popf
pop
push
xlat
push
ret
loopne
push
and
sub
pop
push
dec
addr16
pop
mov
fnstsw
fcompl
popa
insl
fs
hlt
mov
lods
xchg
fnsave
and
adc
jnp
outsl
adc
inc
dec
mov
and
mov
push
ds
jo
clc
fsts
lods
cs
inc
ret
js
data16
out
pop
xchg
mov
mov
cli
movsb
jo
insb
pusha
movsl
mov
pop
push
adcl
andb
and
jl
loope
and
adc
imul
mov
xor
fists
les
int
pop
push
jnp
int
mov
lret
jl
sbb
mov
mov
arpl
rcl
sbb
mov
nopl
add
scas
adc
inc
mov
and
sub
testl
das
shlb
inc
cmpsb
and
pop
and
mov
and
adc
pop
mov
pop
ret
les
insb
mov
cmpsb
mov
push
mov
out
mov
gs
and
mov
enter
adc
in
daa
xor
sahf
mov
in
add
lea
push
push
add
mov
push
rorl
xor
and
inc
in
or
inc
nop
pop
dec
fcoms
sub
int3
imul
cmp
gs
sub
xchg
pusha
test
push
fsts
sub
aaa
push
and
arpl
pop
cwtl
loope
pop
dec
scas
sub
sbb
repz
lahf
dec
imul
repnz
or
xchg
add
sbb
mov
xor
pop
mov
adc
ret
cmc
mov
mov
push
repnz
sahf
pop
sub
pop
push
nop
in
mov
leave
sub
fs
insb
aad
jae
push
repz
outsl
jecxz,pn
lock
inc
aas
imul
repnz
lods
push
in
pop
stc
push
out
cli
mov
and
es
jle
sti
push
xchg
cmp
faddl
movsl
inc
pop
jnp
inc
je
dec
imul
mov
fildl
add
pop
jae
imul
lahf
and
or
pop
in
mov
out
jbe
sub
into
jo
sbb
jae
inc
mov
inc
or
dec
and
add
movsl
mov
rcrl
push
popf
mov
adc
jle
pop
cmp
out
jnp
sub
test
cwtl
and
or
jl
add
das
adc
sahf
or
jmp
mov
pop
mov
xchg
mov
inc
push
loope
xorb
mov
push
fucomi
mov
xor
pop
aas
test
xchg
mov
jnp
and
jbe
insb
test
sbbb
jp
stos
sub
test
pop
mov
cmp
dec
daa
ljmp
inc
sub
xor
xchg
xor
push
mov
lods
mov
ret
push
xor
stos
loopne
or
sub
fistpl
addr16
sub
or
ljmp
inc
lret
sti
add
ret
pop
leave
pop
fisttpll
xor
push
test
sub
sti
fistpll
sbb
xchg
xchg
jnp
aad
mov
nop
jne
ficomps
jmp
push
filds
cmp
push
xchg
add
push
fsubrl
mov
daa
xor
loope
out
cld
xchg
pop
push
and
xor
mov
call
stos
jnp
mov
adc
enter
xlat
ret
mov
icebp
lods
fs
mov
mov
add
xlat
ss
inc
inc
mov
push
nop
add
adc
cltd
test
xchg
hlt
mov
mov
jge
ljmp
sub
outsb
call
adc
push
fwait
lods
jg
js
adc
dec
and
and
push
xchg
movb
imul
mov
jae
push
mov
in
pop
aad
aas
test
add
mov
rcr
lcall
mov
ljmp
cld
ret
mov
negl
xor
adc
fdivrl
into
sarl
leave
rorl
xchg
xchg
mov
xor
out
idiv
push
or
jns
lret
sbbl
call
repnz
sahf
idivl
push
cmc
daa
inc
xlat
lcall
push
bound
out
and
jnp
cld
jecxz
test
and
dec
ljmp
repnz
test
iret
repz
pop
pop
mov
cmp
xlat
pop
imul
and
xor
push
and
mov
stos
stos
cmpsb
std
subb
xchg
adcl
sbb
aas
scas
pop
leave
pop
and
jmp
fldt
js
or
adc
ret
ljmp
cs
push
hlt
mov
pop
dec
dec
test
jno
adc
dec
push
mov
xorl
pushf
movsb
imul
cli
sbb
sbb
loope
cltd
arpl
mov
mov
adc
mov
push
int
lods
or
call
mov
cmp
jae
aaa
fmull
pop
mov
addr16
mov
in
xchg
fwait
push
xchg
dec
and
sbb
jecxz
sbb
or
mov
leave
jl
aaa
pop
add
mov
cmp
mov
test
movsb
pushf
sub
loopne
pushf
int
inc
fidivrl
cmpxchg
das
mov
fbld
inc
mov
orl
outsb
dec
roll
movsl
insb
cmp
idivb
lahf
adc
popa
aam
sti
inc
insb
adc
jnp
fstl
lahf
dec
rcrb
inc
aaa
pop
mov
cmp
lods
inc
mov
ret
xchg
jg
jl
push
inc
dec
ja
jbe
xchg
jg
repnz
ds
out
sbb
mov
jp
mov
mov
dec
inc
fwait
push
inc
xor
jecxz
pop
pop
add
jns
add
add
cli
dec
test
and
movsl
sub
mov
loop
add
pop
lea
or
inc
stos
and
push
xor
fmuls
popf
fldenv
loope
mov
sbb
mov
inc
xchg
xchg
mov
sbbb
addr16
cmp
movsb
mov
push
add
sub
add
shrl
repnz
mov
test
jb
cltd
add
test
push
inc
adc
in
imul
fsubs
xchg
testl
subb
sar
in
jle
and
mov
jns
push
ret
add
inc
pop
lahf
cmp
mov
sbb
push
lods
test
fisubs
inc
jmp
mov
push
add
ljmp
mov
sahf
aaa
mov
mov
aas
push
movsl
aaa
jle
in
xchg
enter
ret
fwait
push
mov
xchg
mov
rorb
loop
add
in
xchg
inc
pop
hlt
icebp
jg
add
or
cmovne
dec
push
xor
aam
xchg
cli
mov
adc
dec
rcr
out
leave
repnz
mov
add
jbe
cmp
mov
outsb
fisubs
and
shrb
cs
pop
dec
addr16
add
and
lds
mov
fdivs
and
cmp
pop
sarl
insl
jo
mov
sbbl
xchg
sarl
pop
dec
add
mov
jmp
es
rorb
mov
pop
fs
mov
out
jbe
mov
in
mov
push
jle
fnstsw
fsubrl
pop
ret
in
sahf
imul
je
jnp
or
jae
pop
or
stc
add
out
nop
cmp
cmp
fisubl
lret
fld1
mov
cmp
orb
fsubs
add
push
rcr
dec
mov
punpcklbw
pop
pop
and
imull
in
movsl
int
sub
outsl
push
inc
xor
or
pop
sbb
aaa
xchg
xchg
adc
into
into
fidivs
popa
dec
xor
adc
inc
jo
in
outsl
orb
jge
int3
test
js
adc
popl
dec
movsb
pusha
sbb
add
push
popa
sbb
inc
lds
add
insl
sbb
lcall
xchg
loop
push
push
dec
iret
fld
mov
arpl
inc
jge
jecxz
fiaddl
fbstp
ret
ljmp
mov
mov
inc
cwtl
out
dec
pop
lods
andb
pop
ficoml
fistps
lahf
cmp
ss
jecxz
inc
or
xchg
mov
cmp
xchg
cmpsb
pop
xorl
xor
lock
and
ficoml
leave
addr16
negb
ret
ret
roll
lds
daa
test
xchg
xor
fwait
and
addr16
and
xchg
in
cwtl
cmp
adc
sub
inc
insl
sbb
div
lahf
or
rorb
mov
test
jbe
jp
mov
mov
cmpsl
and
mov
push
movsb
mov
jns
push
adc
jns
mov
fnstenv
dec
clc
cli
and
jns
or
and
out
dec
ds
xor
xchg
and
and
adc
xchg
test
adc
and
movsl
pop
data16
mov
addr16
jbe
sbb
es
imul
inc
xor
or
mov
sub
arpl
stc
dec
rorl
test
sbb
sbb
movsb
nop
push
mov
and
fisubrl
stos
sub
rcr
push
xor
jnp
and
push
or
pusha
movsb
mov
lret
and
mov
and
xor
sahf
sti
popa
lock
jl
fs
xchg
jmp
jae
xlat
mov
pusha
inc
jo
leave
or
adcb
push
pop
push
push
aam
imul
shrl
add
cs
out
add
fbstp
mov
lcallw
test
ret
sub
pop
hlt
sahf
rdmsr
adc
inc
es
jns
jl
fistl
jo
arpl
pop
shr
push
mov
data16
jecxz
out
aaa
cmpsl
dec
lock
test
inc
cmp
push
push
loope
adc
xlat
adc
cld
or
cmp
xchg
and
mov
add
pushf
push
int
filds
daa
pop
mov
push
mov
cld
inc
out
cmp
imull
lock
or
cwtl
xchg
mov
and
sub
xchg
and
mov
cmpsb
jns
nop
mov
ds
xchg
xchg
adc
fs
push
jbe
mov
and
pusha
add
dec
pop
or
cmp
fsubr
fs
adcl
in
test
js
mov
push
and
pop
jmp
enter
es
test
push
repz
aam
lods
pop
sub
repnz
sbb
jno
push
ret
xor
jns
fists
sub
shll
dec
cmp
sbb
cld
inc
jecxz
mov
xlat
ds
xchg
mov
jae
outsl
pop
pop
into
imul
adc
cltd
mov
mov
out
cmp
movsl
lods
in
mov
movsb
lret
xchg
add
nop
dec
movsb
hlt
mov
jecxz
js
mov
stos
xchg
inc
notb
jne
outsl
mov
mov
roll
dec
pop
jmp
and
dec
and
mov
mov
pop
stos
clc
dec
and
jecxz
jae
push
aad
add
cmp
sbb
jle
ror
dec
sti
call
adc
ret
dec
and
and
test
add
cmpsb
or
movsb
cmp
mov
dec
and
frstor
cli
inc
push
loop
push
and
push
mov
js
cmp
scas
mov
shll
mov
mov
out
insb
das
cmpsb
or
shll
out
les
jmp
add
shrb
outsl
addr16
adc
in
pusha
ret
xlat
xchg
adc
pop
mov
sub
aas
or
inc
jle
stos
je
cltd
add
out
jmp
cld
les
push
incl
mov
dec
test
add
push
and
fidivrl
insb
cmp
push
jns
stos
pop
rcrl
add
jnp
stos
negb
adc
xor
xor
fsincos
in
xchg
xchg
cmc
jp
lds
jmp
sbb
dec
sbb
imulb
add
lret
repnz
pop
or
push
mov
dec
pop
push
pop
mov
out
enter
xchg
push
and
pop
bound
test
cwtl
and
in
push
or
rorl
clc
ds
adc
fldenv
test
shlb
fs
push
repnz
push
pushaw
repz
or
outsl
pushf
roll
xlat
or
clc
pop
push
inc
push
sub
out
in
call
jo
jmp
jnp
dec
cli
in
or
adc
inc
mov
jmp
push
jne
mov
lea
je
cli
fisttpl
shrb
daa
sti
pushf
add
stc
clc
out
test
xchg
aad
mov
ja
dec
pop
ss
fs
bound
mov
inc
shll
imul
ljmp
ds
push
inc
dec
xor
and
mov
out
jnp
xor
dec
dec
out
and
testl
test
dec
test
cmp
pop
sub
inc
pop
mov
loopne
cmp
test
or
push
iret
jne
mov
jae,pn
push
fadds
fcomip
push
add
ja
xchg
mov
test
out
sarb
pop
cmp
out
incb
push
mov
int
sub
dec
nop
ja
sbb
xor
dec
inc
add
push
sbb
je
push
ljmp
insb
sub
xor
in
movsb
ljmp
xor
sbb
test
jge
mov
add
mov
pop
pop
jnp
int3
xchg
add
and
push
cmp
sbb
ljmp
imul
clc
repnz
inc
sbb
into
fisubrs
pop
jbe
and
inc
lea
fcoms
xor
lahf
out
jb
dec
pop
ss
and
xor
or
in
js
add
dec
testb
lock
aas
mov
in
jnp
fcomps
rorb
or
adc
cmp
popf
inc
jmp
inc
sub
scas
fnsave
lret
pop
jl
mov
dec
or
nop
std
out
aaa
pop
or
rcll
push
mov
lcall
push
popf
stos
push
push
sbb
aaa
cld
nop
ja
es
pop
out
decb
clc
mov
into
jge
fbld
jp
test
bound
outsl
mov
mov
adc
rclb
es
dec
sub
cltd
lret
mov
shrl
adc
xchg
xor
test
mov
jge
pop
jecxz
mov
call
pop
pop
sbb
xor
cmc
hlt
inc
cmp
rep
cltd
push
cmpsl
rcrb
and
adc
mov
jle
shr
fisttpl
nop
jnp,pt
mov
sub
inc
push
xchg
inc
push
mov
mov
pop
push
aad
mov
insb
insb
xchg
lcall
mov
data16
inc
mov
out
sbb
jg
fcmovne
push
cmp
push
sub
loopne
pop
stos
mov
lahf
jo
arpl
out
cltd
aam
ljmp
nop
dec
hlt
xlat
sbb
xor
bound
cmpsb
imul
mov
sub
fildl
jae
and
pop
repz
and
dec
out
xchg
cmp
fstpt
jbe
and
imul
push
lods
loop
mov
lahf
sub
pop
jge
outsb
insb
pop
stos
inc
pushf
mov
pop
es
dec
les
xchg
test
loop
xchg
fsubp
notl
inc
sub
ret
out
pop
popf
notb
mov
sbb
and
scas
cs
adc
mov
pop
je
mov
je
and
push
addr16
mov
addr16
jne
sbb
bound
cmp
gs
scas
xor
aam
movsb
or
push
sub
xor
lret
sub
mov
jp
jns
int3
xor
adc
nop
outsb
mov
sub
xchg
fwait
or
popf
pop
xchg
dec
mov
add
cmp
xchg
xor
push
pop
sbb
and
loopne
sub
xorb
adc
pop
add
pop
addr16
popf
filds
push
js
add
pop
loopne
sub
mov
cmc
xor
add
push
pop
push
jno
addr16
je
push
pusha
mov
push
cmc
dec
xlat
data16
ret
dec
sub
push
inc
mov
lcall
rcr
xor
xchg
push
pop
imul
jmp
scas
push
push
out
xchg
jmp
pop
in
ja
frstor
xor
mov
push
add
lret
jnp
and
add
lcall
outsl
cmp
hlt
inc
in
fldl
sbb
les
repnz
loopne
sarb
jb
fisttps
fcoms
sbb
inc
sbb
jl
imul
in
lret
es
das
mov
repz
pop
mov
lds
outsl
xchg
mov
jae
and
psubb
mov
or
test
nop
mov
mov
mov
sbb
sub
rorl
push
sahf
xor
sbbl
cmp
xor
fldcw
adc
sbb
sbb
jp
int
hlt
xor
shrb
jle
lods
ljmp
cmp
ret
iret
shrl
lock
pushf
movsl
xchg
sub
push
cltd
fwait
popa
loop
pop
jnp
mov
je
sbb
pop
dec
pop
xchg
popf
dec
in
scas
lods
lds
lcall
xor
sbbl
leave
add
rcll
pop
pushf
cld
dec
movq
sub
add
and
loop
or
pusha
add
dec
scas
cwtl
mov
fsubrl
repnz
pop
mov
pop
mov
ja
push
movsl
pop
pop
cmp
mov
and
xchg
dec
incb
jo
jmp
xlat
or
mov
jae
push
pushf
les
pop
push
push
push
xchg
mov
popa
cmp
sarl
out
mov
repnz
pop
inc
into
imul
pop
pushf
jo
lret
push
aaa
xchg
lret
sbb
pop
fs
push
mov
out
scas
add
and
popfw
dec
cmp
js
dec
cmc
lret
imul
sahf
lcall
fwait
adc
aas
push
cs
xor
in
stos
popa
bound
cli
push
lds
sbb
push
xor
push
test
jne
sub
xor
or
popf
dec
lcall
in
cs
mov
test
cmp
dec
movsb
js
cmp
jmp
xor
mov
push
push
add
fnstenv
mov
dec
dec
arpl
pop
rorl
in
int3
mov
scas
ds
lret
cltd
adc
mov
adc
xchg
mov
dec
mov
or
or
add
ficompl
xchg
xor
dec
not
add
js
inc
sub
xchg
out
jns
mov
mov
call
mov
outsl
xchg
jge
mov
ret
popf
xor
xor
mov
in
inc
mov
pop
adc
rcl
push
push
lods
into
sub
enter
xor
jp
das
stc
mov
in
bswap
dec
and
ja
imul
gs
xchg
movsl
push
xchg
mov
pop
inc
arpl
push
jae
mov
dec
lret
cli
or
dec
stos
shrb
fmull
add
mov
data16
loopne
jne
jo
repz
idivb
pusha
or
lods
and
outsb
mov
out
das
sub
out
jle
inc
jb
jg
or
dec
mov
pop
sar
sbb
mov
mov
dec
ficompl
and
dec
sbb
xchg
ficoms
pop
sbb
or
or
sbb
sub
rcll
and
add
leave
sbb
mov
je
dec
negl
inc
sub
imul
jle
xlat
or
add
add
into
daa
lods
cltd
sub
aad
orb
in
inc
adc
out
pop
ret
pop
es
mov
push
iret
out
pop
cmp
in
push
ss
test
cmc
fs
push
push
mov
fldt
aad
aam
aad
mov
jae
sub
xor
mov
pop
in
sbb
adc
add
jb
cwtl
push
adc
dec
dec
popf
in
movsl
xlat
rcrl
cmp
jns
shr
adc
loope
cmp
pop
jb
aas
mov
scas
movsb
and
pusha
adcb
sbb
lods
daa
mov
daa
mov
pop
aaa
pushf
dec
cld
inc
adc
fstpl
aam
pop
sub
ljmp
movsl
ja
loopne
js
xor
bnd
fstp
mov
idivb
cmpsl
lds
mov
xor
popa
dec
cmpsb
sub
sbb
jle
and
and
mov
jae
into
aad
movsb
jne
sub
in
out
inc
std
iret
cmp
icebp
pop
sbb
fstpl
scas
sub
sbb
lds
dec
pop
or
mov
cmpsl
nop
xchg
mov
insl
jmp
cmp
aad
lret
fnstcw
out
xchg
mov
ja
or
lds
pop
sub
xchg
pusha
sub
rcl
std
push
daa
add
in
xchg
pop
fmull
mov
lea
sub
cmp
inc
cmp
into
std
mov
lahf
pop
sub
xchg
adc
mov
clc
int3
out
leave
mov
stos
loop
xor
nop
jnp
fldcw
test
iret
aas
hlt
sbb
pop
jnp
daa
dec
or
and
cmpsl
sub
mov
sbb
mov
dec
aad
pusha
adc
cmp
ljmp
jnp,pn
dec
leave
ror
xchg
pop
daa
dec
add
push
test
add
fisttpll
inc
xor
and
daa
cmp
leave
stc
adc
dec
or
stos
pushf
mov
jbe
popf
mov
movsl
add
mov
xor
jnp
ret
mov
sti
pop
xor
xor
cmp
sahf
mov
test
mov
aam
and
aam
aad
jmp
xor
xor
inc
push
cmpsl
cmc
scas
aas
mov
sub
aas
gs
insl
aas
rolb
fs
fsubrl
xor
fistps
arpl
pop
push
gs
sahf
and
push
not
das
add
out
xor
loop
or
lods
out
push
inc
pop
icebp
or
dec
mov
and
inc
imul
repz
rcrb
mov
adc
mov
movsl
pop
inc
mov
jb
clc
lods
jae
dec
jae
aaa
mov
out
mov
shlb
mov
fdivrs
cmpsb
ss
or
jnp
sbb
ret
or
rorb
adc
in
sbbb
lea
arpl
hlt
inc
add
jne
lods
subl
dec
xchg
aad
mov
xchg
in
jge
loope
lock
push
lahf
insb
inc
mov
pushf
or
dec
mov
mov
push
and
clc
sub
shlb
into
sub
sbb
sub
jle
int
movb
push
rorb
dec
ss
ror
mov
pop
imul
push
das
pop
push
je
sub
pop
jns
sub
aam
shl
jb
lea
cwtl
jle
std
cmp
mov
addr16
add
out
pop
jmp
sbb
xor
sub
out
fwait
mov
iret
inc
xchg
mov
mov
push
aam
ja
mov
mov
sahf
lea
into
cltd
sar
mov
add
movntq
push
dec
cmpb
insl
inc
push
mov
sbb
xchg
sbb
fistps
push
inc
jae
mov
and
inc
pop
inc
int3
mov
popa
pushf
xchg
psubusw
rcrb
loop
mov
or
jnp
pop
stc
arpl
iret
fld
inc
ljmp
js
inc
pop
bound
xor
test
dec
xchg
mov
jb
loope
cmp
fiadds
adc
jns
pop
jmp
repnz
cld
xchg
test
stc
mov
xchg
and
xchg
xchg
xchg
and
out
dec
inc
negl
sub
pop
add
insl
or
or
int
and
outsl
loope
cmp
pusha
cmp
fisttpl
adc
leave
scas
ficompl
call
call
mov
fiadds
test
or
jle
ret
ja
mov
jns
jae
sub
xchg
int
inc
cltd
adc
add
in
sti
stos
enter
push
jle
sub
addr16
mov
ljmp
lret
sub
rorb
into
mov
arpl
test
jmp
fcmovb
gs
aaa
pop
inc
sbb
inc
clc
mov
pop
xchg
and
inc
jo
pop
lret
aad
je
xor
jecxz
or
mov
push
xor
cmc
out
call
cmovne
xchg
outsb
js
fnstcw
xchg
leave
xchg
inc
test
sub
push
mov
fdivrl
sub
or
cmpsb
xchg
pop
lods
in
xchg
repz
adc
sbb
stos
cmp
jg
xchg
fistpll
les
push
sbb
ja
scas
xchg
mov
fcom
jge
loope
push
ds
ss
mov
imul
xlat
jle
push
loope
cmp
mov
fnstenv
cmp
dec
fcmovbe
out
cli
push
bound
jg
stc
push
pop
add
mov
mov
mov
sbb
clc
xchg
iret
lahf
shr
jbe
enter
cs
popa
jae
mov
cmp
pop
out
dec
mov
dec
lret
lods
ret
movsb
aas
mov
lods
pop
mov
push
rorl
sbb
inc
test
dec
push
pop
add
fcomps
daa
mov
in
sub
fld
imul
mov
repnz
js
mov
push
add
and
sti
xor
ss
dec
out
cmp
shl
into
outsl
dec
leave
adc
xor
icebp
jecxz
in
push
arpl
sbb
decl
lahf
mov
cmp
mov
aam
fs
stc
iret
or
inc
lret
mov
scas
in
daa
add
je
les
imul
xchg
aas
push
mov
clc
addr16
stos
sbb
sbb
jmp
insl
cmp
sbb
mov
add
pop
faddl
mov
xor
popa
faddl
js
aam
cmovl
mov
cli
cltd
mov
lds
jno
jb
push
xchg
sets
mov
fdivr
insl
fs
or
loope
popa
aad
aam
int3
test
add
ffreep
cmp
jne
mov
or
push
sbb
inc
popa
std
push
xchg
mov
addb
add
cmp
fcoml
pop
movsl
xor
jae
fldt
mov
cltd
sbb
mov
cmp
sbb
js
push
push
ret
xchg
sarl
nop
sti
lds
gs
outsb
loop
and
cmp
rep
cmpsb
stos
int3
call
test
lahf
lea
lods
fidivl
imul
sub
and
imul
mov
incl
mov
orl
pop
cmpb
sbb
sub
push
outsb
js
push
in
fcmovbe
push
inc
cmp
loop
mov
sbb
rorb
sub
and
dec
daa
push
xor
xchg
cmp
sub
dec
lods
dec
push
fisttpll
sub
mov
cmp
fsub
jnp
popf
push
adc
inc
scas
ds
sahf
or
pop
lock
sqrtps
jo
sub
cmpl
xor
dec
ja
push
cs
jge
push
xchg
out
jle
mov
neg
push
repz
jnp
inc
inc
stos
cmp
mov
mov
add
mov
jns
add
fnsave
lea
mov
pushf
cld
ljmp
iret
lahf
pop
cmpsb
test
nop
outsl
push
adc
and
pmullw
add
jbe
mov
adc
aas
out
fwait
or
mull
aas
xchg
insl
mov
icebp
insl
mov
inc
xchg
mov
mov
lock
loop
xlat
and
orl
hlt
pushf
xchg
mov
iret
add
repnz
fisubrl
cmpsl
fldcw
xor
adc
icebp
sub
jb
shlb
fs
mov
inc
mov
pop
adc
add
inc
test
dec
lods
lret
jmp
mov
popf
jae
inc
inc
mov
mul
jae
add
daa
push
faddp
roll
fdivrp
lahf
scas
popa
std
push
cmp
fcompl
lock
lahf
xchg
nop
retw
sti
cs
in
lret
mov
mov
mov
outsl
scas
adcl
cmp
mov
imul
orb
ftst
rcrb
in
loop
push
popl
ljmp
fdivr
prefetchw
incb
sbb
aaa
adc
mov
jmp
sub
inc
add
fiaddl
sbb
fcoml
xor
sbb
add
or
aas
xchg
mov
sbb
cld
daa
in
out
es
addr16
das
sbb
pop
cmp
gs
jbe
mov
and
subb
or
mov
idiv
add
aas
add
xchg
ret
hlt
into
inc
jbe
xchg
jp
scas
int
dec
ret
inc
dec
sub
in
cli
mov
jge
call
cmp
cmp
mov
in
bound
sub
push
cmpb
flds
adc
imul
push
xor
fsts
pop
mov
testl
mov
mov
in
leave
hlt
cs
repnz
cmp
pushf
jae
mov
repz
mov
and
lahf
ficompl
lods
dec
icebp
in
insl
movsb
nop
xchg
mov
lret
pop
lcall
div
f2xm1
adc
mov
sub
popf
or
pop
cvttps2pi
in
push
push
scas
xchg
inc
dec
and
shlb
cmp
mov
and
aam
mov
xchg
xchg
and
sbb
jnp
mov
mov
fnstsw
je
sub
mulb
pop
insb
insb
mov
iret
ror
pop
sbb
pop
fcomp
push
fs
mov
push
pop
scas
shll
outsl
cwtl
mov
add
cmp
jne
cli
sub
out
out
mov
mov
cmc
fucomp
outsb
ss
imul
sbb
sbb
js
dec
add
jns
cmp
mov
xor
dec
andb
les
and
push
test
or
es
movsl
out
out
push
pusha
pop
subb
inc
mov
arpl
and
psubd
addr16
push
jp
add
pop
imull
js
cmpl
repz
jecxz
dec
or
xor
aad
cmp
aas
jnp
out
sub
pop
and
outsl
pop
xchg
jmp
adc
xor
scas
aam
nop
mov
repz
and
lock
push
test
inc
subb
mov
stos
rcrl
and
inc
push
pop
aaa
outsl
movsb
xchg
rcll
xor
add
call
loop
mov
add
and
pop
iret
hlt
cmpsl
xchg
cmp
xchg
sub
add
pushf
mov
jmp
enter
dec
movsl
leave
pop
fbld
clc
shl
lahf
cmpsl
pop
sub
cwtl
and
jno
and
sbb
mov
stos
imull
mov
aam
or
push
jmp
xchg
lea
pop
add
xchg
pop
cli
xchg
sub
lahf
xchg
push
jmp
push
ret
dec
push
push
push
sti
into
xchg
xchg
arpl
inc
fbstp
iret
sbb
pop
fistpl
sub
adc
repz
pop
shr
movsb
cmpsb
mov
scas
mov
sub
push
out
cld
into
cmp
cmp
adc
xor
push
xchg
cmp
push
push
adc
psadbw
and
out
popa
xchg
lods
mov
cmp
pushf
movsb
or
outsl
lds
dec
jl
movsl
mov
sahf
sarb
jnp
jecxz
adc
push
ljmp
cmp
xor
popl
mov
mov
arpl
jne
push
arpl
cld
int
ficomps
shl
insb
aad
push
mov
rcr
movsl
scas
insb
push
dec
dec
sub
push
xchg
pop
xchg
sub
jp
insl
mov
fstpt
push
adc
mov
adc
test
nop
sub
sbb
inc
dec
ret
push
fwait
adc
out
js
test
jnp
cmc
xchg
push
jo
sbb
and
icebp
sbb
outsb
mov
hlt
pushf
dec
or
push
and
arpl
xor
xchg
fisubrs
divb
and
cmpb
dec
test
lahf
test
or
out
cli
pop
push
or
push
mov
mov
jb
and
fidivrl
push
inc
cmp
out
icebp
inc
inc
les
dec
adc
jno
ljmp
rclb
mov
movsb
loopne
jg
paddusb
scas
rcr
aaa
jecxz
or
adc
dec
scas
mov
stos
test
in
xchg
xlat
mov
cld
nop
push
cmp
xlat
jmp
xlat
int3
push
clc
push
pop
pop
sbb
xchg
popa
add
repz
push
fistpl
inc
movsb
ds
push
daa
int3
or
cmp
pop
xor
dec
leave
cmp
jae
neg
push
sbb
les
xlat
sarb
or
ss
jle
xor
cld
sbb
lds
jle
hlt
sub
mov
mov
mov
stc
adc
jno
popf
stos
orl
dec
xchg
lahf
orb
adc
jb
or
mov
arpl
mov
cmpsl
push
add
cltd
ret
lret
in
cwtl
shl
lds
xlat
test
or
add
test
rcr
enter
xor
fdivs
shl
test
out
aam
xor
fnstenv
mov
insb
imul
inc
inc
sub
cmp
dec
scas
xchg
sub
push
cld
sbb
loopne
inc
dec
pop
sbb
jge
xor
pop
fisubrl
lds
hlt
mov
lcall
ret
mov
pop
lods
pop
and
push
iret
stos
cmovle
or
xchg
test
cmpsl
jecxz
in
fwait
dec
das
sbb
dec
push
push
fnstsw
cltd
clc
outsb
nop
insb
mov
aas
sti
dec
repnz
jnp
es
push
mov
clc
mov
rorb
mov
nop
mov
mov
faddl
js
xchg
mov
pop
jmp
inc
sub
add
fisttpl
fmul
jg
outsb
sbb
mov
or
dec
mov
in
lods
insl
pop
or
iret
ret
xor
push
loop
fcmovnu
test
sub
xor
int3
pop
and
mov
jecxz
test
adc
sahf
call
mov
fildl
enter
jl
shrl
push
cmp
popf
mov
sub
ss
push
push
xchg
fcompl
out
xchg
inc
out
inc
insb
sbb
add
and
mov
repnz
inc
mov
sub
or
add
icebp
push
leave
sub
dec
test
fisubs
xchg
int
pop
xchg
inc
jp
mov
sbb
push
mov
jbe
lcall
arpl
pop
xchg
je
sahf
cmpsl
loopne
das
arpl
lods
das
std
sub
test
xchg
inc
enter
out
mov
in
loope
shlb
cmp
insl
mov
inc
ret
outsl
inc
sub
jl
int3
rdtsc
xor
hlt
mov
addr16
cwtl
enter
xlat
sub
mov
or
scas
std
dec
fildl
xchg
fadds
cmp
mov
cmp
add
call
jo
rcll
ljmp
mov
dec
fildl
fisttpll
imul
test
adc
sub
mov
add
subl
out
es
imul
xchg
xor
icebp
mov
push
xchg
jae
rcrl
sub
cltd
pop
or
arpl
fcmovnbe
push
imull
cs
sbb
sbb
sbb
fisubrl
dec
sub
bnd
push
or
pusha
dec
push
and
and
or
aad
cmp
cmc
or
pop
loop
out
sub
or
data16
adc
cmp
xchg
xchg
dec
xchg
jge
add
out
jnp
scas
or
ja
mov
xlat
cmpsb
cmp
push
sbb
cmp
add
adc
int3
dec
fstpt
push
mov
shl
add
sbb
jmp
enter
inc
xor
xchg
movsb
dec
jge
cmpsl
aas
mov
inc
inc
in
das
push
out
adc
cmp
outsb
jae
scas
cs
ljmp
test
mov
mov
out
and
lcall
mov
dec
mov
lahf
stos
add
lcall
out
pop
add
push
sub
add
or
cli
add
or
sub
xchg
dec
cli
lret
pop
clc
mov
pop
scas
sub
jo
jb
ljmp
data16
mov
adc
jb
aas
push
mov
lret
hlt
sub
mov
mov
dec
out
dec
fistps
rcll
mov
ret
pusha
mov
add
shll
aas
adc
adc
adc
fsubl
outsb
jg
call
loop
insl
mov
roll
in
xor
imul
fildl
and
out
cmp
stc
pop
loop
cmpsl
pusha
and
xor
jp
xor
repnz
sti
test
lea
push
xor
and
leave
addb
push
mov
adc
sub
dec
outsl
xor
sahf
imul
push
inc
push
sbb
cmpsl
cmpl
ss
pusha
push
dec
adc
cmp
pop
jle
sub
cmp
xchg
sbb
test
pop
xchg
mov
pop
loop
jnp
aam
popa
jbe
callw
mov
mov
incb
sarb
lock
xor
jno
xchg
fisttpl
sti
jno
es
test
xchg
pop
pop
jg
push
inc
arpl
fisttps
bound
and
push
sbb
jmp
cmp
pop
stos
sub
mov
inc
xor
cmp
mov
cmp
xchg
sub
adc
inc
adc
cmp
mov
insl
pop
adc
in
insl
mov
inc
bound
roll
mov
lret
pop
out
aas
into
push
fisubs
sbb
adc
stos
adc
outsl
aas
mov
popa
mov
inc
or
dec
jns
sbbb
cli
pop
je
inc
in
pusha
add
movsl
clc
in
adc
cwtl
fsubrs
adc
mov
cli
js
mov
xchg
jo
insb
mov
xchg
jns
enter
outsb
stos
xor
mov
stc
lods
movsb
push
mov
mov
enter
lods
cli
inc
add
icebp
pop
push
mov
jbe
stos
cmc
clc
sub
decl
push
inc
mov
call
call
movsb
dec
cmpsl
mov
movb
jge
lret
sahf
xorl
or
push
in
and
push
push
xorl
inc
jge
push
xchg
add
in
jns
je
test
lea
and
shrb
sbb
mov
cs
pop
or
es
daa
cmp
push
xchg
les
push
cwtl
jno
inc
into
xlat
lods
adc
idivl
xchg
mov
sub
fwait
lret
shll
sub
push
in
sub
into
push
dec
and
cltd
push
sub
hlt
std
lods
shll
mov
les
lods
pop
pop
inc
mov
adc
into
out
adc
push
cld
sub
in
dec
mov
mov
idiv
insl
cs
stc
mov
call
or
sbbl
leave
leave
mov
cmp
fcompl
jb
jbe
cmc
push
sbb
out
call
adcl
ljmp
lret
jb
and
sub
xor
fisttpl
xor
bound
sahf
lods
cmpsb
inc
mov
mov
sbb
cli
js
xchg
xchg
pop
adc
int3
leave
orb
imul
sbb
mov
fidivrs
loopne
in
test
fstpt
ja
fistps
and
cli
mov
lret
push
push
pop
sahf
jl
pop
fldenv
lock
adc
adc
mov
fsts
outsl
test
int
imull
cmp
jnp
rorb
mov
and
inc
sahf
out
adc
xchg
inc
test
aas
jl
pop
jns
dec
out
cmp
jp
rcrl
lock
sbb
push
pop
mov
scas
mov
imul
dec
xchg
sti
cmp
mov
jle
mov
and
fcompl
imul
and
xchg
adc
mov
aaa
pop
leave
push
sbb
aad
sub
xchg
jb
lods
out
mov
or
cwtl
mov
leave
dec
add
cwtl
out
imul
inc
ret
arpl
and
movsb
inc
mov
rcrb
sub
mov
mov
push
aam
push
dec
lods
insl
shrb
xor
jmp
lret
jp
xor
fs
test
mov
jmp
cmp
ret
cmp
mov
je
mov
seta
cmp
pop
test
lret
std
je
mov
dec
cmp
scas
repnz
sub
mov
xchg
andb
pop
sbbl
mov
sub
int3
rolb
and
in
mov
mov
mov
loope
movsb
nop
shlb
roll
and
lea
pop
push
lret
int
aas
push
mov
and
cli
xor
cwtl
imulb
js
adc
rclb
jge
push
lahf
jp
sub
popf
and
mov
cld
sub
xor
sub
std
mov
push
jbe
pop
xlat
insb
aas
jle
lahf
push
pop
movsb
fidivl
cli
out
cli
cltd
std
sub
mov
sub
std
int
and
ret
sbb
in
pusha
divb
scas
dec
add
mov
pushw
imul
xchg
lahf
jecxz
enter
loopne
add
repnz
xorb
or
push
jno
cmp
and
sub
adc
and
adcl
mov
stos
or
clc
pusha
call
orl
enter
not
adc
add
pop
xor
imul
xlat
or
xchg
mov
push
les
stos
jp
fwait
or
cltd
hlt
push
scas
sub
imul
mov
xor
mov
jle
mov
cmp
fwait
mov
and
push
and
orl
subb
jl
test
lcall
inc
movsb
jp
lea
jbe
out
inc
test
rcr
cmp
xchg
mov
sub
and
push
mov
lock
adc
cli
scas
icebp
ret
test
xchg
adc
stos
pop
sbb
jo
dec
mov
imul
dec
adc
inc
test
mov
mov
cld
cmp
lahf
adc
xchg
loop
rcl
sar
dec
xchg
aad
xchg
or
adc
lret
jno
dec
pop
sar
enter
mov
rcl
pop
lcall
mov
sbb
lods
shrl
fmul
stc
mov
xchg
lahf
xchg
pop
imul
cld
sub
rolb
push
sub
fwait
adc
pop
dec
fcmovbe
push
call
push
cli
pop
xlat
xchg
int
mov
sbb
pop
jns
mov
mov
pop
pusha
scas
or
sbb
insb
pop
jbe
popf
ret
in
stos
mov
sub
dec
cmpl
push
push
mov
test
mov
adc
popf
mov
mov
jno
mov
push
js
jg
dec
add
loopne
jo
jmp
sub
cltd
insl
gs
test
outsl
xor
xchg
or
fwait
testl
rcl
push
push
out
jne
adc
out
cmp
jge
in
push
movsb
mov
jg
inc
in
orb
out
mov
pop
or
adc
cs
adc
adc
mov
inc
or
stc
dec
xchg
dec
fisttps
shlb
jns
xor
dec
mov
pop
mov
xor
repnz
jge
inc
or
cmp
in
lods
mov
xor
mov
in
jo
sti
popa
pop
xor
gs
test
and
xor
fld
add
jno
dec
mov
xor
inc
test
pop
cmp
mov
dec
int
int3
pushl
sbb
lahf
xchg
and
stos
jg
adc
popa
in
push
subb
adc
sub
inc
lcall
cmpb
fsubr
das
adc
loope
xor
gs
pop
loope
inc
push
add
mov
or
into
hlt
push
fstl
mov
out
daa
add
fwait
push
fldl
push
jmp
add
gs
inc
fcoml
popa
popa
pop
adc
out
inc
xchg
jo
mov
add
cmp
mov
jns
and
mov
popa
aaa
cld
cmp
ja
inc
out
mov
pop
xchg
mov
imul
fdiv
cmp
outsb
mov
dec
mov
mov
dec
mov
jmp
dec
popa
pop
xchg
push
or
out
sub
sbb
xchg
mov
push
pop
and
gs
xchg
cmpsl
daa
cltd
xchg
jne
xlat
mov
pop
push
xchg
inc
push
mov
pop
out
fimuls
mov
dec
or
inc
jg
mov
je
aaa
xlat
xchg
pop
iret
fbstp
and
lods
popf
or
lods
arpl
dec
add
imul
cltd
push
sub
mov
cmp
adc
mov
push
jle
imul
lret
pop
fnstenv
hlt
cmpsb
sbb
test
adc
fstpt
jmp
gs
fs
out
add
test
shrl
mov
adc
pop
jb
cmpsb
jecxz
sub
sbb
aam
sub
inc
cmpsl
sbb
sub
dec
mov
push
sub
imul
imul
jmp
popa
dec
dec
or
sbb
sbb
fwait
call
shr
mov
pop
nop
in
cltd
xchg
or
jmp
or
ja
xorb
mov
mov
pop
lret
jae
pop
cltd
repnz
iret
pop
fdiv
nop
lea
jbe
adc
rcrl
lcall
dec
les
mov
lds
movsl
inc
and
add
mov
dec
notl
cmp
dec
adc
test
mulb
push
jbe
mov
les
cmp
ja
pop
adc
sbb
mov
and
mov
mov
dec
idivb
fcmovne
adc
stos
mov
leave
mov
mov
cmp
pusha
mov
dec
sahf
jge
xchg
jp
scas
not
mov
sbb
in
xor
cli
and
addl
enter
adc
mov
fs
into
loopne
inc
sti
inc
arpl
pop
icebp
and
loopne
lmsw
adc
imul
add
mov
repz
pop
mov
leave
sbb
xchg
cmp
adc
xchg
cmp
and
mov
mov
sub
popf
mov
mov
aam
loope
loopne
icebp
ss
lods
xor
adc
mov
pop
or
fbld
lods
dec
in
inc
inc
out
pop
nop
pop
inc
xchg
std
call
or
fstpl
mov
das
xchg
call
sbb
or
cwtl
dec
cmp
cmp
xor
sti
fiaddl
lret
jb
test
daa
ret
pop
cmp
adc
inc
cli
mov
ja
mov
lds
lcall
or
scas
add
ficompl
mov
loopne
cli
loop
mov
sbb
cmp
jle
gs
pop
adc
adc
shl
xchg
mov
adc
fidivl
mov
fs
fabs
sub
stos
add
xchg
repnz
cmpsb
jp
xor
ror
dec
call
add
jl
cwtl
out
xchg
and
aad
into
ret
jb
sahf
insl
out
imul
cmpsb
dec
fidivrs
dec
pusha
cltd
pop
or
imul
push
mov
inc
adc
inc
xchg
dec
mov
or
push
push
pop
inc
add
sbb
leave
add
mov
xchg
cli
ficomps
push
js
mov
int
ljmp
mov
scas
scas
fistl
jg
push
cmc
inc
push
lods
mov
or
addr16
or
inc
addl
outsb
into
stos
inc
js
bts
cmp
fs
cmc
xorl
jbe
sbb
mov
mov
push
stos
jle
sahf
mov
nop
cmpsl
xchg
mov
adc
mov
out
inc
or
dec
inc
adc
neg
push
test
jns
mov
and
sbb
fisttps
mov
js
sbb
xchg
sbb
adc
xor
in
lret
lret
mov
mov
nop
mov
pop
ss
jo
test
into
ss
lahf
dec
insl
andb
push
fnsave
rcrl
pop
xlat
iret
push
push
mov
out
fs
dec
add
pop
pop
in
ljmp
pop
in
push
jbe
call
lahf
jmp
aaa
push
scas
or
or
mov
jecxz
dec
adc
pusha
test
pushf
test
sahf
aad
in
test
pop
push
cmp
pop
fbstp
and
adc
negl
mov
popf
jle
mov
mov
imul
lds
push
sbb
add
popa
cmpsb
pop
fldcw
lret
repz
popf
mov
add
pushf
cmp
es
aas
sti
push
sbb
scas
push
popa
mov
lret
sbb
test
jb,pt
rclb
into
jo
or
cmp
aad
lret
dec
fst
in
sub
leave
call
ljmp
pop
sbb
idivl
cmpsl
into
pop
idiv
repnz
das
arpl
arpl
pushf
sbb
in
mov
imul
roll
add
mov
adc
outsl
andl
push
mov
popf
jns
cmp
push
cld
mov
jo
dec
xchg
out
sarl
popa
xchg
dec
aaa
or
test
jge
mov
repz
scas
pop
int3
push
cld
adc
push
and
stos
jl
int
sub
es
pop
add
xchg
aaa
fs
or
data16
sti
loope
cmp
jge
lret
shll
mov
cmc
test
mov
enter
fwait
xchg
mov
fadd
push
mov
imul
or
test
test
sbb
cwtl
mov
add
call
xchg
pop
dec
mov
gs
icebp
and
jnp
dec
inc
pop
pop
arpl
repz
std
icebp
mov
adc
cmpsl
sarb
pop
mov
sbb
iret
xor
stos
push
cmova
nop
idivl
push
or
and
cld
ljmp
sub
sbb
out
mov
push
repz
push
jns
mov
jecxz
fbstp
add
gs
lods
roll
fucomp
outsl
loope
nop
pop
dec
enter
lods
sti
insb
inc
mov
incb
mov
xchg
dec
jne
xchg
jo
std
dec
leave
inc
lcall
and
cmp
push
ret
enter
xor
mov
mov
movsl
xor
fcmovnu
aaa
mov
push
pop
xor
inc
cmp
lcall
ljmp
mov
xchg
aad
notl
push
push
cmp
adc
sub
jecxz
data16
push
mov
neg
dec
xchg
xor
cmp
sbb
sub
jmp
outsl
loopne
jns
enter
in
mov
or
imul
cld
mov
jl
xor
sub
loop
jbe
fwait
xchg
pop
pop
ljmp
rorl
cli
stos
mov
push
inc
fcomi
mov
push
xchg
pop
rcrb
lock
ffreep
sbb
ja
push
js
xor
shll
test
jne
cmpb
aas
pop
xchg
dec
popf
push
jecxz
test
xchg
cmp
mov
inc
mov
sti
aas
and
add
mov
int
lcall
sub
aad
or
jmp
and
mov
jp
sub
clc
fmuls
icebp
fcom
adc
sbb
add
testl
popa
repnz
dec
sub
into
notl
stos
cmp
or
scas
xor
ds
out
jo,pt
popa
fbld
and
sbb
js
adc
mov
into
xchg
daa
inc
jl
sub
lret
cmpsb
mov
sub
test
xchg
into
mov
int
jns
arpl
shr
call
fstp
cmp
add
fcmovnbe
cmp
sbbl
or
jecxz
mov
cld
test
sahf
jo
lods
xchg
vcvtss2si
add
pop
or
lea
push
or
outsl
popf
jne
fadd
jmp
outsb
xor
inc
cmp
shl
rolb
test
lcall
mov
test
fldln2
test
cmp
jmp
mov
push
nop
out
adc
sub
cmp
xchg
movb
insb
adc
xchg
loopne
and
das
mov
ficoms
pop
es
cmc
in
mov
movb
xor
popf
dec
dec
lds
mov
into
or
push
mov
and
loopne
or
push
add
lcall
stos
adc
rclb
cwtl
pop
xor
ds
insb
ljmp
loopne
movsb
mov
xor
and
pop
repnz
cs
lcall
jl
stos
cmp
gs
in
xchg
subb
repz
lahf
cld
jno
loop
push
sub
stos
and
int3
movsl
and
xor
jp
insl
jmp
inc
xchg
sar
cltd
movsl
call
lahf
ficompl
sbb
aaa
push
mov
das
shlb
stos
sbb
iret
fstpt
pop
std
xchg
jno
icebp
outsb
out
jge
int3
out
inc
call
mov
pop
cmp
in
push
xchg
push
dec
repz
aad
in
push
cmp
pop
in
mov
into
mov
addr16
add
stos
rcrl
sub
into
jecxz
adc
adc
adc
dec
hlt
aaa
loop
sti
cmp
xchg
mov
call
mov
test
les
jl
add
adc
xor
jle
ret
mov
sbbl
adc
push
mov
lds
bound
mov
dec
fiaddl
fstps
ret
fwait
pushf
dec
xchg
ja
push
cmp
and
add
add
pop
cwtl
dec
mov
xor
lret
nop
in
hlt
addr16
sub
and
sqrtps
icebp
adc
inc
cs
mov
lods
fildll
pop
xchg
mov
adc
jg
and
sub
lahf
mov
mov
xchg
xchg
mov
pop
dec
popa
push
mov
push
push
sbb
add
es
cld
and
mov
mov
lar
in
out
in
lcall
mov
lods
das
push
sub
inc
les
ret
add
fdivs
into
fadds
lret
fcompl
pop
sbb
xchg
mov
fwait
enter
loope
inc
push
sub
lea
inc
aas
nop
jae
or
loope
outsb
mov
inc
or
xorb
in
cltd
dec
sbb
add
stc
gs
push
mov
xchg
lret
scas
pop
je
sar
add
pop
movsb
xchg
jnp
adc
loope
mov
push
add
cli
or
and
imul
mov
pop
mov
insb
mov
out
push
insl
sahf
fiaddl
int
adc
and
jle
lods
stc
fnsave
mov
int
ja
shlb
inc
cwtl
arpl
pop
repnz
pop
xchg
dec
lods
add
fisubrl
mov
adc
mov
popf
mov
je
push
movsb
ja
insl
in
cmc
stos
add
adc
orb
mov
hlt
test
das
jmp
repnz
addb
negl
dec
imul
sarb
sti
xor
inc
cmpsb
inc
jge
adc
push
inc
dec
xchg
lcall
jae
in
push
test
in
xchg
dec
xchg
cmc
adc
inc
sti
adc
mov
mov
lock
cmp
inc
xchg
push
dec
push
and
notb
ja
cwtl
loopne
andl
cmpsb
jno
and
ja
lret
std
sbb
pop
int3
js
pop
stos
enter
cmpsb
mov
fisubs
push
xor
fimuls
stc
xchg
fidivrl
loopne
rolb
lock
sbb
out
or
lds
flds
cmpl
cmp
out
xchg
cmpsl
popa
popa
testl
rcl
xlat
mov
mov
xchg
ja
lahf
imul
or
icebp
xor
shll
lea
mov
icebp
or
repz
fimull
inc
xlat
fidivrl
pop
lret
pushf
jno
and
jl
mov
addr16
pop
adc
aaa
mov
mov
cmp
adc
mov
pushf
mov
adc
pushf
add
cmp
mov
js
bound
imul
jecxz
mov
ljmp
sbb
mov
aad
add
daa
testb
push
pop
popl
int3
shlb
les
lock
xchg
loopne
cmpb
push
push
adc
shll
pop
lock
inc
xchg
or
jmp
mov
fs
mov
mov
scas
out
sbb
scas
fcomi
jle
pusha
sbb
jg
xchg
lahf
mov
xor
jmp
in
mov
jns
xchg
fwait
push
cli
or
cli
xor
imul
out
int
inc
fimuls
mov
xchg
enter
inc
jne
jo
jns
or
cld
out
outsb
sarb
fimuls
cwtd
mov
das
int3
in
int
pop
push
test
fsubrl
aad
or
repz
xor
je
dec
aad
out
mov
sub
dec
cmpsl
cmpsl
sti
dec
mov
jbe
mov
jmp
xchg
xchg
xchg
in
mov
mov
xor
pop
xor
jb
dec
js
push
movsl
out
clc
jae
and
rclb
loopne
pop
movsb
mov
dec
push
cmp
add
mov
sbb
xor
pop
or
pop
sbbl
and
xchg
cwtl
fs
jne
cmp
stc
or
or
add
xor
js
pop
movsb
dec
nop
inc
test
imul
imul
inc
mov
aas
mov
pop
xchg
jmp
sahf
stos
inc
fstpt
dec
sub
or
push
mov
pop
push
jae
xchg
insl
int
pop
mov
dec
fcmovbe
cmp
lds
adc
xchg
movsl
jns
jmp
aad
loopne
and
js
push
stos
xchg
es
add
arpl
scas
mov
cs
sub
mul
sbbb
inc
loop
jle
mov
pop
inc
cs
pop
fcmovnb
stos
xchg
jbe
roll
aaa
addb
stc
xchg
mov
lahf
movsb
fwait
sahf
daa
sub
mov
aaa
and
ss
mov
mov
and
dec
xchg
js
sahf
or
call
arpl
mov
cmpsl
or
cli
fwait
or
repz
sbb
enter
dec
stos
mov
in
pop
repnz
push
lock
cli
and
lcall
stos
pop
inc
xor
rolb
mov
mov
push
cwtl
notb
adc
cmpsb
xchg
pop
xor
ja
inc
dec
shlb
pop
adc
repnz
push
in
jbe
push
mov
xor
loope
daa
inc
and
xlat
xlat
jnp
arpl
into
dec
cmp
je
adc
insb
mov
cmp
test
lods
sub
mov
divb
shl
leave
ret
mov
shl
cli
fidivrs
dec
in
orl
je
fcoms
jne
fcompl
cwtl
pop
fadds
or
add
lahf
or
sub
pop
lods
pop
jo
imull
push
mov
and
repnz
mov
jae
or
adc
push
notl
sbb
or
rorl
es
pushf
mov
and
cwtl
sbb
repnz
popf
mov
push
rcrl
int
inc
popa
pop
test
scas
loopne
xchg
inc
xchg
xlat
imul
fnstcw
out
sahf
nop
mov
inc
imul
into
sbb
pop
cltd
loopne
inc
jne
xor
cwtl
mov
inc
mov
add
mov
sbb
das
jo
dec
stc
lods
fyl2xp1
cmpsl
push
roll
mov
stos
jmp
mov
xchg
mov
cmpsb
in
inc
jecxz
lahf
mov
mov
jb
adc
out
xchg
dec
movsb
shlb
stc
pop
rep
dec
insb
insl
mov
xor
jnp
sub
ffree
push
lcall
subl
lret
cli
out
lret
fbld
sub
cld
fs
jge
shll
clc
ds
jl
xlat
lock
mov
lahf
dec
jmp
add
paddsb
pop
pusha
clc
xor
popf
sahf
xor
aaa
dec
sahf
cmpsb
push
fwait
dec
std
pop
sbb
dec
xchg
cmpsl
mov
mov
mov
sub
stos
leave
lret
cmp
test
aas
scas
dec
xchg
dec
in
out
loopne
andb
and
das
neg
xor
pop
inc
mov
mov
ret
or
push
in
jl
push
mov
pop
mov
push
in
mov
test
sbb
rcll
pop
mov
pop
sbb
insl
sub
mov
test
mov
sub
xchg
mov
je
adcb
cmp
dec
out
pop
inc
nop
and
dec
and
adc
inc
ljmp
jmp
inc
xchg
push
mov
cmpsb
adc
or
push
adc
out
dec
xchg
js
test
mov
outsb
or
cld
sub
mov
hlt
stc
xchg
lcall
add
dec
pop
adc
adc
movsb
mov
cmp
xor
dec
pop
sub
das
das
cmp
lea
inc
adcb
cmp
sbb
sub
lock
test
pop
or
outsb
add
jecxz
shr
addr16
or
out
testb
fldenv
stos
xchg
pop
cltd
xor
fdivrl
cwtd
inc
and
dec
and
pop
xchg
inc
mov
cwtl
fstpt
nop
xchg
popf
lds
lods
inc
or
popa
scas
mov
mov
jge
dec
jmp
xor
aad
mov
shrl
mov
pop
icebp
pop
sbb
in
sbb
sbbb
pop
sar
dec
jmp
and
and
add
ucomiss
push
js
icebp
jne
pop
pop
mov
mov
fimull
in
int3
aad
xchg
sub
xlat
insb
ljmp
cmpsb
test
in
call
dec
push
add
shrl
mov
fwait
pop
pop
sub
cmp
xchg
add
fcompl
xchg
mov
sbb
into
out
add
dec
fisttpll
or
xor
sub
pop
xchg
mov
inc
ja
out
mov
mov
ftst
fwait
leave
insl
movsl
jb
push
cmp
int
out
mov
cmpsb
sub
xchg
fsubrs
add
es
xchg
sub
test
jno
cmp
xor
repnz
sub
fs
gs
inc
xchg
in
arpl
push
aaa
cwtl
mov
loopne
cmpsl
stos
insb
and
inc
pop
lds
cs
jle
iret
xor
scas
cmp
sub
int
add
es
mov
lret
fwait
popa
leave
xor
cmpsb
cmp
int3
pop
ja
cmp
jo
addl
mov
lret
sub
aaa
rorl
mov
cmp
mov
inc
mov
loope
insb
dec
daa
lahf
aas
cmp
mov
icebp
stc
insl
push
lods
cwtl
ja
cmp
sub
es
xchg
push
inc
test
jmp
xchg
aam
fnsave
cmp
cli
sub
or
mov
das
xor
notl
sbb
push
add
xor
mov
or
movsb
jo
xchg
js
pop
stos
in
add
xchg
mov
rcrl
xor
mov
add
aam
lcall
stos
cmp
cmp
out
add
sub
jbe
sub
int3
sbb
mov
mov
mov
fxch
pop
mov
out
rcl
mov
push
mov
add
in
xchg
xor
mov
jecxz
subb
cmc
mov
xor
jno
repnz
clc
cmp
jno
ret
pop
and
leave
test
negl
call
xchg
xlat
in
sub
push
ljmp
cmp
push
std
imul
adc
aad
stc
iret
push
in
shl
jge
cmp
jnp
jge
jle
enter
icebp
aas
sbb
int3
mov
add
pop
dec
mov
test
pop
mov
mov
and
inc
adc
jb
scas
movsb
jnp
mov
xor
xor
lahf
nop
enter
mov
inc
or
iret
pop
int
or
jge
sbb
loope
out
ficomps
bound
movsl
or
icebp
push
sbb
fsub
mov
sub
scas
add
lods
jecxz
cwtl
popf
ljmp
xor
xchg
test
stos
or
repz
ss
loop
gs
jb
pop
mov
dec
sahf
das
clc
inc
popf
cmp
in
xor
jbe
mov
pushf
mov
addr16
pop
xchg
adc
sub
mov
int3
pop
outsb
jne
mov
jle
inc
mov
repz
movsl
aaa
sti
mov
and
sbb
shrb
cmp
sub
testl
gs
push
sarl
test
jbe
jb
jmp
aas
push
iret
pusha
sbb
inc
jb
dec
lods
jle
pusha
adc
inc
mov
and
dec
outsl
mov
cmp
dec
ja
add
cmc
add
mov
popa
pushf
add
into
or
pop
rolb
mov
fadds
outsb
add
rcrb
jecxz
adc
lods
out
and
sub
test
push
iret
or
daa
xchg
fsubs
test
mov
cmp
jg
fdivrl
mov
mov
ret
loope
lods
xor
adc
int
mov
mov
lods
dec
push
xor
jnp
int
aad
test
inc
or
fnstcw
jae
mov
mov
mov
fbstp
or
jae
imul
ret
int
fnstenv
ljmp
adc
sti
lds
ljmp
ret
jno
cmp
insb
jg
iret
je
jne
jecxz
imul
or
add
pop
dec
fsub
sti
jmp
mov
cmp
int
scas
xchg
mov
ljmp
mov
lret
mov
ja
sahf
aas
push
pop
rorb
dec
aam
mov
pushf
push
pop
jns
jb
jge
jmp
out
imul
sahf
pop
ret
loopne
mov
add
cmp
sti
aad
xchg
lahf
xor
pusha
sti
pop
jno
aam
out
jl
mov
push
rorl
dec
sbb
mov
xlat
mov
sbb
or
movb
outsb
test
mov
cmc
xor
sub
mov
loop
xchg
je
sbb
dec
jecxz
test
repz
or
nop
add
or
push
lahf
gs
add
aad
aam
add
jge
xor
arpl
enter
mov
in
enter
sbb
xchg
pop
and
jb
xor
adc
mov
adc
jl
mov
or
dec
xchg
aas
add
out
call
jbe
jo
shl
cmpsl
xchg
push
mov
mov
adc
dec
stos
push
or
test
adc
adc
xchg
lret
rorb
or
jae
jmp
insl
push
test
mov
dec
shrl
adc
ret
fidivs
rcr
push
add
push
dec
lds
mov
xchg
imulb
stos
jmp
xchg
sub
push
mov
adc
out
in
jae
mov
and
cmp
pop
sub
int
mov
sbb
and
xor
call
not
daa
lret
out
pop
inc
cmp
js
add
loope
addr16
mov
dec
sub
push
push
ja
cmpsb
das
out
pop
das
popa
and
mov
dec
mov
lea
dec
and
or
mov
decl
sahf
mov
in
dec
aaa
jno
dec
mov
popf
lods
push
js
out
jecxz
mov
jae
jo
cltd
or
outsb
push
fistpll
push
loopne
popf
mov
scas
dec
add
mov
sbb
out
shlb
icebp
xchg
loopne
inc
shrb
stc
repnz
scas
out
jp
xor
iret
repz
jns
ret
stos
rorb
adc
mov
loop
xor
loop
bound
add
push
cmp
mov
and
xchg
ss
pop
inc
inc
mov
xchg
into
rclb
inc
pushf
addr16
lds
stos
mov
or
mov
fstpl
push
sub
pusha
ljmp
jge
mov
or
mov
dec
clc
mov
cltd
and
and
sbb
mov
pop
out
dec
popf
ficompl
lret
outsl
xorl
pushf
jnp
ja
out
in
hlt
push
mov
sub
test
int
mov
cmp
jle
mov
cmpsl
inc
pop
inc
mov
inc
lcall
test
int3
jnp
xchg
xor
fmull
test
dec
mov
add
popf
mov
sbb
aaa
mov
ja
push
dec
int3
mov
mov
mov
add
jbe
mov
filds
xor
and
jg
mov
incl
pop
sbb
fstpl
mov
jno
xorb
flds
jno
push
outsl
scas
and
cmpsb
cmpsl
ds
fidivl
mov
fnstcw
mov
adc
loopne
cli
not
scas
psubw
outsb
jecxz
xchg
fldenv
xchg
sub
into
push
popf
stc
dec
pop
test
sub
sti
test
out
aam
cmp
xlat
std
lea
dec
rcl
scas
ljmp
shl
cmpsb
out
cmp
sbb
fstpt
sbbl
push
cmp
js
ss
and
mov
clc
xchg
notb
stc
popa
mov
and
in
adc
insb
mov
or
movsl
jae
cmc
movsl
xchg
in
sub
mov
into
pop
mov
inc
sarb
in
mov
dec
jne
out
shlb
arpl
sbb
arpl
jo
lock
cmp
stc
cmpsl
mov
xlat
stos
or
mov
ss
ja
roll
fmuls
adcl
add
rorb
xchg
and
jge
test
ss
mov
ret
repnz
scas
in
stc
dec
inc
in
lds
xchg
fbstp
inc
push
daa
add
mov
mov
test
mov
cmc
leave
orl
out
mov
ja
xchg
in
shl
jecxz
mov
int3
dec
not
lods
into
cs
loope
or
dec
xorl
fs
cmp
fwait
shlb
dec
push
into
cmpsl
inc
filds
das
scas
mov
stc
ljmp
dec
fs
dec
repnz
loopne
cmp
adc
rcr
or
dec
aam
dec
jge
adc
mov
idivb
sbb
out
stos
mov
aaa
insl
scas
mov
push
fwait
data16
pop
or
hlt
outsl
popf
lds
dec
arpl
xor
clc
jb
push
fdivp
adc
lret
stos
or
jmp
out
sub
pushf
aas
insb
cmpsl
or
fisubrl
ljmp
jmp
sbb
imul
dec
es
jl
mov
scas
and
push
jle
sub
adcb
push
jg
lret
orb
mov
dec
in
stc
ds
inc
jno
mov
pop
xchg
push
pop
fbld
in
ss
in
xchg
xor
adc
leave
pop
sbb
adc
fcomps
pop
gs
rcrb
push
add
push
jns
rolb
lret
mov
add
xchg
or
sbb
jge
sahf
mov
xchg
enter
or
or
inc
cmp
and
inc
jno
jbe
rcrl
dec
out
fsubr
pop
mov
int
add
inc
sbb
gs
stos
sub
lcall
pop
pop
sub
jb,pn
mov
xchg
stos
xlat
aad
cs
mov
out
pushl
push
cs
push
fdivrl
push
nop
test
repnz
pop
and
jo
add
sub
mov
ret
outsb
dec
sub
cltd
subl
jmp
popa
jle
fst
sub
ljmp
cmp
jne
jecxz
loope
sub
push
lret
push
push
jp
hlt
push
movntps
pop
pop
cmp
jge
mov
aaa
fiadds
lea
fiaddl
pop
mov
loop
push
xchg
cmp
jge
sarb
pushf
ret
stos
aas
sub
shrl
mov
bound
pushf
mov
insb
fisubl
mov
daa
loope
add
push
or
push
and
or
lods
mov
rolb
push
popa
test
sbb
push
js
mov
or
mov
ret
cmc
jg
fucomp
xchg
and
xchg
leave
into
sub
push
out
test
mov
and
or
je
pusha
add
aad
mov
cld
stos
and
loope
jmp
mov
lret
jle
sbb
xor
and
and
push
jmp
or
inc
in
imul
dec
xchg
shll
cli
jg
cmp
clc
pop
sbb
fildll
in
adc
xchg
in
fcoml
push
mov
les
xchg
pop
cli
rol
sbb
mov
cs
mov
jp
xchg
repz
es
ret
xor
pop
fwait
les
and
repz
and
lock
mov
adcb
xlat
push
adc
sbb
int
sbb
arpl
mov
pushf
adc
ret
stc
sbb
loopne
sbb
ljmp
sub
mov
add
pop
ds
mov
gs
mov
xchg
cmp
or
data16
xchg
gs
mov
mov
push
imul
int3
je
insb
jnp
or
mov
mov
movsb
shl
sub
add
lods
sti
and
jbe
shrl
jp
test
dec
xchg
jo
lods
jo
out
add
inc
fs
jo
pop
repz
inc
mov
xchg
arpl
ficomps
clc
push
test
lahf
inc
in
or
loop
out
pop
jno
lret
iret
aad
cwtl
pop
mov
push
cmp
imul
paddusb
jmp
xor
mov
call
in
add
jge
add
mov
sbb
in
mov
test
int
hlt
ret
and
scas
arpl
push
mov
or
testb
stos
xchg
push
fmulp
cmp
mov
push
pop
das
xor
mov
inc
push
cmp
cltd
mov
xchg
push
mov
paddsb
lods
lods
sti
cs
pop
loope
or
sub
push
test
test
sahf
pop
xor
hlt
out
push
inc
loopne
lret
sub
jle
es
shll
adc
sarb
pop
roll
inc
ljmp
adc
cmpsl
jle
or
xchg
test
xor
das
inc
addr16
cmpsb
or
inc
fimuls
mov
pop
mov
dec
push
or
push
shlb
lret
aad
pop
dec
out
push
jecxz
mov
scas
xor
insl
idivb
jb
int
and
inc
ret
xchg
cmp
cmpsb
icebp
insl
leave
outsl
outsl
fisubrs
pop
xor
cwtl
mov
aaa
jge
fildll
lds
in
das
pop
fxch
sahf
mov
cmp
jg
xor
pushf
cltd
ffree
pop
aas
cmpsb
outsl
sbb
cmpsb
sub
or
sub
mov
jp
icebp
pop
and
pop
xor
pop
sub
mov
jmp
sub
leave
xor
jp
ret
push
scas
xchg
push
sbb
sub
daa
iret
icebp
dec
jecxz
aas
cmp
inc
jb
and
icebp
ficoml
push
in
push
movb
add
push
cld
inc
fsubl
pop
sbb
dec
cmpsl
insb
jnp
rcl
lock
mov
pop
cmpsl
sub
or
xor
sahf
xchg
fwait
push
and
add
scas
cmp
inc
cld
jne
stos
dec
repz
sbb
fbld
mov
jge
inc
movq
xchg
pop
adc
push
mov
add
std
test
mov
out
jp
mov
or
push
movsl
xor
mov
mov
loopne
xor
pusha
sti
mov
gs
mov
daa
sub
cmp
jg
jb
cld
xor
ret
sbb
jecxz
movsl
jl
add
repz
rcrb
adc
cli
ja
cld
mov
imul
adc
dec
pusha
xchg
push
push
lret
pop
push
jo
fbld
pop
faddl
inc
add
inc
dec
std
push
in
inc
leave
lods
andb
xor
sti
xchg
push
test
xorb
dec
inc
hlt
gs
in
and
xchg
cmc
cmp
jns
sub
outsb
sbb
mov
outsb
movsb
inc
enter
cmpsl
xorps
lea
leave
mov
test
mov
inc
cmp
xor
out
movsl
aad
je
cld
sub
adc
cmc
inc
lret
or
sub
cmc
mov
pop
stc
jbe
adc
dec
jl
cmpsl
bound
scas
pop
inc
add
dec
bound
add
xchg
mov
xor
jno
loopne
push
cmp
lods
mov
cmp
add
sbb
loope
mov
leave
fbld
xchg
dec
daa
jbe
lods
lcall
cmpl
cld
fucomi
out
jge
mov
xchg
inc
sti
xor
pusha
jb
popa
pop
xchg
aam
imul
cmp
in
xlat
and
cmpsl
push
xor
test
mov
daa
pop
pop
cmp
icebp
lock
clc
sub
push
jle
loopne
sbb
cmp
jge
xor
leave
lds
mov
mov
popa
sbb
mov
ret
mov
dec
pop
test
out
jge
daa
dec
das
push
adc
inc
dec
rclb
or
add
fldl
dec
nop
stc
mov
cmpxchg
inc
leave
rorl
mov
dec
loope
or
shr
mov
dec
pop
pop
jno
cmpsb
andb
xchg
movsb
iret
popf
bound
mov
lahf
adc
mov
sysexit
les
lret
sbb
movsb
cld
pop
inc
adc
outsb
push
mov
inc
orl
lds
add
clc
cmpsl
scas
sub
pop
lds
pop
xchg
mov
sub
cmp
insl
cli
jmp
mov
stc
fcomps
cmp
prefetchwt1
or
dec
cs
stc
jnp
adc
add
jle
mov
dec
xchg
cmp
mov
pusha
aas
xor
leave
sbb
gs
mov
mov
mov
jge
sub
adc
push
xor
stos
out
std
xchg
pushf
nop
jle
or
ja
or
push
test
mov
test
push
dec
mov
push
ds
push
pop
ror
popa
jne
add
xor
je
pop
je
mov
jb
sbb
repnz
jbe
aaa
adc
out
add
cmp
mov
loopne
or
pop
mov
aas
enter
pop
cmp
pushf
cmc
mov
vmread
pop
adc
out
pusha
test
inc
aad
xor
out
xchg
insl
jo
into
jne
push
or
in
or
test
scas
add
fwait
rorb
jo
orl
xchg
lcall
shrl
and
call
and
sub
push
push
das
ret
and
ret
cmp
sahf
and
jo
test
cmp
stc
xor
inc
xchg
add
jmp
jg
or
aas
or
cmp
xor
dec
cmpsl
dec
in
hlt
js
sbb
stc
adc
fisubrl
xchg
inc
mov
xor
sub
lods
adc
test
xor
and
mov
inc
into
nop
ds
dec
sbb
mov
and
pop
inc
cmc
and
mov
dec
pop
adc
pop
lcall
fstl
push
pusha
fstpl
scas
cmp
mov
mov
movsl
xlat
out
push
fstl
xchg
jne
xchg
sti
add
cltd
jo
movsl
jg
jle
nop
xchg
pop
jne
xchg
jl
mov
out
mov
cmp
lock
push
push
sarb
jg
pop
jo
pop
pop
mov
push
push
out
out
jo
das
pop
fidivs
or
movsb
mov
pop
jbe
out
pop
and
jle
pop
idivb
sub
and
pusha
unpckhps
sub
sti
sub
rolb
sar
mov
mov
inc
sbb
popa
dec
stc
lods
lds
pop
test
jne
xchg
and
data16
or
dec
jae
xchg
add
dec
dec
enter
scas
addr16
cmp
std
inc
adc
push
movsl
sub
sbb
hlt
push
cmpsl
stos
or
mov
fimuls
pushf
sbb
jecxz
test
pushf
pop
movsb
pop
xchg
lock
mov
mov
insl
pop
sar
test
lds
cwtl
insl
int
xchg
push
xor
xchg
leave
xor
ljmp
lods
subb
xchg
out
adcl
call
fs
or
xchg
mov
adc
add
movsb
add
imul
and
rorb
cmp
ja
adc
cmp
js
push
xchg
push
and
mov
xchg
mov
pop
cmpsb
mov
add
mov
sub
push
mov
push
sti
mov
ss
or
push
movsb
pop
adc
mov
jl
add
mov
inc
clc
pop
out
xchg
out
dec
ret
lea
cmp
bound
fnsave
dec
out
adc
and
int3
and
rep
fistl
xor
test
xchg
cli
mov
jl
mov
int3
fsubs
mov
jnp
push
xchg
push
test
imul
bound
test
add
cmp
pop
js
mov
cmp
jmp
stos
or
push
mov
push
push
mov
push
insb
pop
out
or
jmp
inc
cmp
sbb
or
jp
fiadds
push
sub
push
pop
jb
push
outsb
or
mov
es
cmp
int3
lcall
inc
lahf
mov
aas
inc
adc
mov
dec
adc
in
mov
mov
cmp
push
push
inc
mov
int3
jo
and
adc
mov
bound
stc
xchg
in
dec
outsl
not
cmpsb
mov
ja
aam
add
dec
mov
jae
insb
push
and
xchg
mov
and
sub
jnp
mov
es
cwtl
cmpsb
sbb
loop
cmp
mov
jmp
jns
jmp
and
mov
push
imul
in
cwtl
sbb
paddw
mov
lcall
mov
and
mov
push
or
mov
test
adc
mov
and
push
sbb
fmull
iret
xlat
in
push
fmull
popf
loop
xchg
mov
outsl
lret
jle
jmp
fistpl
stos
lds
popf
aad
inc
push
push
das
je
std
cwtl
add
dec
jbe
insl
push
arpl
xchg
lea
cmpsl
leave
dec
cmc
adc
adc
dec
loop
in
inc
cmp
pop
mov
jnp
dec
or
cli
arpl
jo
iret
and
push
sti
pop
ud0
popa
xchg
jmp
aam
negb
outsb
and
fisubrl
in
xor
and
pusha
push
in
mov
aas
fld
dec
or
ret
mov
ret
sbb
push
xchg
int
xchg
jbe
and
inc
jb
pop
pop
xor
sbb
push
or
imulb
sbb
enter
push
sbb
cmc
cld
jmp
jg
ljmp
inc
jecxz
lods
mov
popf
pop
adc
push
lcall
int3
mov
mulb
iret
mov
push
mov
imulb
jp
shrl
std
push
cwtl
add
inc
jmp
repz
das
or
out
pop
push
and
mov
addb
fcmove
shrl
mov
dec
pop
inc
popa
inc
lcall
sub
jmp
ficompl
sub
fistl
movsb
dec
adc
outsb
adc
roll
scas
je
mov
xlat
pop
xlat
push
jl
cmp
inc
mov
jg
adc
xor
int
adc
add
jns
add
xor
pop
xor
fisttpll
mov
and
and
xchg
jecxz
sub
push
xor
mov
stc
nop
sub
mov
mov
push
mov
testb
movsb
xchg
mov
movsb
jb
cmp
sub
leave
mov
shrb
dec
push
pusha
int3
mov
jmp
int
mov
sbb
cld
fnstsw
dec
aaa
loop
and
iret
bound
jb
mov
jo
mov
push
outsb
fistl
xor
ret
hlt
or
out
or
sti
daa
dec
jb
into
dec
scas
sbbb
xchg
mov
les
test
lret
fwait
mov
mov
cmp
lret
jp
xor
fwait
xor
dec
insb
xor
sahf
cmp
push
repz
call
mov
sub
imul
pop
mov
aam
inc
test
mov
insb
out
in
or
fisttps
cmp
dec
test
xchg
adc
shlb
mov
mov
lods
pop
xchg
aas
mov
fsubl
popa
data16
out
xchg
and
loope
adc
lret
adc
or
scas
nop
fsubrs
adc
lea
lahf
lahf
rorb
in
ret
xchg
dec
js
xchg
fldenv
call
scas
sbbb
fldl
inc
mov
fdivr
repz
pop
lods
test
fcoml
in
pop
callw
pop
imul
mov
sub
mov
xchg
aad
lods
out
jne
jecxz
ds
cmp
in
mov
xchg
cmp
adc
divl
daa
pop
push
jp
xchg
push
mov
std
in
mov
cli
mov
ret
push
test
pop
dec
add
rorb
sarl
out
xor
mov
cmp
test
stos
clc
movsb
pop
sub
in
cli
push
pop
aad
dec
mov
icebp
imul
pop
jo
mov
mov
stos
jns
ds
mov
mov
testl
jne
mov
mov
int3
adcb
test
add
addr16
sbb
in
enter
adc
xchg
push
cmp
in
lcall
xor
ljmp
scas
dec
in
lods
mov
or
in
jp
xor
pop
xchg
rol
insl
addb
ret
push
vmovsldup
pop
icebp
cmpsb
repnz
mov
std
dec
jge
mov
call
sarb
call
out
fisubs
pop
xlat
mov
mov
mov
test
leave
adc
mov
or
jecxz
xchg
mov
sub
ret
cmpl
out
mov
jae
dec
enter
sub
mov
adc
inc
sbb
cmp
mov
jno
sbb
add
lods
pop
or
jnp
idivb
and
xor
es
adc
adc
mov
push
xchg
adc
xchg
sub
insl
lds
mov
lret
inc
fists
std
insl
cmp
out
xor
repz
pop
inc
scas
or
int3
pop
icebp
leave
shl
test
pop
inc
or
clc
mov
cs
jle
test
or
cmpsl
add
and
xchg
jmp
mov
mov
dec
pop
inc
pop
cld
mov
pushf
add
mov
sub
insl
mov
sbb
lcall
pop
pusha
mov
jp
ss
daa
repnz
mov
lock
stos
je
mov
sbb
fisttpll
lods
adc
xlat
push
ror
sti
mov
or
add
ljmp
cs
dec
push
cs
add
std
inc
lods
es
subl
fs
sti
ret
cmp
inc
xchg
xchg
pop
push
int3
mov
fmull
repz
mov
rcll
jmp
lds
or
or
ret
mov
cld
mov
push
mov
jecxz
scas
cmpsb
xchg
outsl
ret
sbbl
cmp
inc
out
push
sbb
repz
nop
imul
mov
jno
sub
pop
lahf
mov
xchg
mov
fsub
mov
inc
dec
mov
fsts
fs
stos
jb
les
out
out
push
imul
push
jbe
xchg
lahf
or
cltd
and
xchg
mov
sbb
sti
xchg
lahf
add
mov
je
hlt
sahf
sub
pop
popa
jg
cltd
dec
push
mov
sbb
lock
imul
sub
push
mov
pop
lods
cmp
sub
data16
jp
les
sbb
jns
enter
fiaddl
push
in
mov
icebp
cmp
xor
or
cmp
lret
loope
lcall
ja
jae
rclb
add
cmp
fmulp
fisttps
jns
in
inc
ss
sbbb
mov
aas
shll
adc
imul
out
les
cmp
shl
add
stos
pop
pop
jne
mov
nop
xor
sub
sahf
adc
mov
jo
pop
pop
cmpsb
aad
push
lahf
sbb
pop
popf
repz
addr16
or
mov
shlb
das
dec
in
addl
insb
inc
rcll
adc
add
and
out
mov
arpl
mov
out
out
aaa
xchg
pop
mov
jg
cltd
pop
pop
lods
fs
push
pop
int
aad
loopne
insb
lcall
loopne
inc
das
in
cmpsl
cmpsb
xchg
pop
mov
add
mov
dec
push
in
arpl
inc
pop
out
clc
aaa
cs
rorb
fldl
pop
pop
mov
in
xchg
mov
xchg
data16
push
test
sbb
orl
mov
push
jno
daa
loopne
data16
lods
push
jae
mov
sbb
mov
cmc
rolb
add
imul
andl
imul
inc
popf
loop
jb
sbb
xchg
jge
jno
xlat
mov
rcll
push
subb
fdivr
or
fidivs
mov
data16
add
ds
jmp
sbb
ljmp
cs
xchg
add
jno
mov
aam
cmp
outsb
lret
test
test
add
orl
inc
inc
or
icebp
sbb
sbb
bswap
jmp
pop
mov
xor
mov
arpl
pop
xor
inc
fs
lock
inc
add
into
mov
cli
pop
mov
and
jle
mov
imul
and
mov
push
pushf
and
sbb
push
sbb
xchg
insl
xor
out
lcall
push
andb
jl
or
or
push
or
jo,pt
xlat
mov
push
ja
or
int
iret
mov
cs
nop
add
sub
insb
jo
and
shl
out
rorb
ret
icebp
pop
lahf
mov
dec
xchg
int3
inc
test
mov
inc
outsl
nop
sar
stos
je
call
or
inc
out
dec
or
jp
push
ss
mov
loopne
hlt
stc
cltd
jae
lahf
movsl
imul
fistpll
lcall
fcompl
out
dec
dec
jo
icebp
or
mov
lock
adc
insb
adc
mov
jmp
cmpsb
cld
jmp
popf
push
es
lahf
mov
sbb
sbb
insl
inc
pop
or
cmp
mov
mov
repz
std
sahf
sub
rol
in
shlb
sub
mov
cmpsl
cmpsb
or
mov
sarl
int3
inc
cmp
mov
pop
mov
mov
ljmp
dec
iret
pop
lcall
xchg
xchg
xchg
mov
negl
jb
xor
fadds
loopne
pop
enter
mov
jb
push
dec
rcrl
and
cmp
ljmp
dec
dec
fistl
aad
mov
adc
lods
pop
loopne
xor
mov
jns
pop
mov
pop
test
push
cltd
js
cmp
int3
sub
or
pop
iret
jo
sub
push
cli
inc
wrmsr
dec
scas
das
mov
pop
daa
repz
dec
adc
dec
add
jo
test
sti
ret
mov
and
pop
push
test
leave
testb
dec
cli
mov
adc
daa
xchg
clc
pop
rorb
adc
adc
mov
lea
jae
inc
sub
pop
add
mov
aas
enter
dec
aaa
mov
dec
lock
sbb
mov
adc
sub
adc
test
inc
loop
mov
lds
fbld
sub
movsl
test
or
icebp
scas
push
dec
fs
js
inc
cmp
sbb
or
loopne
xchg
push
testl
pop
and
mov
jbe
fcomps
mov
sub
jbe
pop
jns
jp
fisubs
mov
idivb
or
mov
lahf
jge
xchg
pop
pop
cmp
or
sub
lcall
lret
push
sub
call
addl
xchg
call
rep
push
jge
or
setle
jno
mov
push
or
push
mov
xchg
xchg
scas
movsb
ss
or
sbb
out
and
popf
sbb
mov
xor
fwait
outsb
jmp
imul
dec
popf
cmp
cmp
jl
divb
push
xchg
lahf
or
mov
repnz
xchg
outsb
mov
sub
cmp
xor
adc
in
dec
lods
inc
mov
inc
pop
sbb
push
push
mov
iret
mov
xchg
sbb
iret
mov
and
fwait
jns
mov
xchg
out
fbstp
loope
aam
fstpt
ret
arpl
clc
test
mov
pop
insb
push
dec
add
cmpsb
inc
cmp
or
add
mov
adc
pop
xor
pop
dec
outsb
jecxz
add
cmc
pop
or
mov
pop
rorb
test
movsb
shll
adc
lods
mov
loopne
insl
push
jl
ret
pushf
cmpsl
mov
fdivrl
cwtl
pusha
xor
mov
add
xor
in
xchg
sbb
cmp
or
xchg
inc
sbb
xor
adc
call
cmp
mov
fcompl
lret
jae
scas
jae
push
sbb
mov
push
jl
and
mov
push
pop
call
mov
fbstp
test
sub
in
popa
or
aam
pop
jle
xor
mov
pop
faddp
xor
mov
movsl
cmp
sti
into
movsb
movsb
hlt
leave
mov
lods
or
add
mov
imul
addr16
or
pusha
js
add
cmp
or
and
xchg
dec
das
insl
push
jl
pop
rcl
inc
mov
ja
mov
mov
mov
sub
les
test
sub
push
add
pop
or
pop
loope
hlt
pop
push
or
in
and
mov
inc
ret
sti
jle
xchg
add
gs
dec
pop
loop
add
popf
out
add
cwtl
aam
in
jle
add
mov
adc
add
out
xor
lret
shr
andb
inc
pop
xchg
imul
pop
push
inc
and
mov
pop
std
or
jnp
rorb
gs
lret
pop
out
sbb
mov
dec
stos
loope
push
push
push
pop
fisubrs
mov
adc
add
andb
ret
test
les
dec
and
in
rclb
push
xchg
fnsave
mov
fcomps
push
enter
mov
xchg
mov
enter
mov
mov
cmp
adc
lods
sbb
sbb
in
cmp
aaa
adc
sbb
jge
dec
cmp
ds
mov
iret
inc
jne
sbb
and
or
jg
cmp
cmp
jecxz
sbb
mov
sub
pop
orl
sahf
test
cmp
in
cs
icebp
xchg
cmpb
shrl
inc
gs
cmpsb
jo
pop
jb
shlb
inc
imull
inc
cmpsb
push
inc
cs
cmp
das
push
loope
jg
data16
mov
aas
gs
mov
add
pop
cmp
and
push
xchg
sub
mov
pop
stc
fcoml
push
and
push
out
in
sbb
les
shrl
test
pop
pushf
sbb
aaa
shll
push
in
scas
dec
add
mov
push
les
mov
ret
mov
fists
sbb
cmp
xchg
jb
or
dec
fisubrs
lcall
inc
adc
xchg
movsl
inc
stc
arpl
fwait
rep
rolb
jns
xchg
dec
inc
mov
jo
adc
aaa
enter
fwait
sti
add
jmp
loop
psubd
sub
or
outsb
cmc
aaa
sti
cmp
dec
mov
lods
pop
mov
inc
or
sbb
lcall
xchg
cltd
test
push
ret
mov
rcll
push
dec
mov
in
push
lds
push
xchg
jns
addr16
cmp
mov
call
cmp
push
movsb
sub
js
adc
mov
mov
push
imul
cmp
cmpsb
jne
pop
std
inc
pop
mov
adc
xchg
cwtl
dec
push
movsb
addr16
ficomps
imul
fwait
or
mov
aas
cld
and
adc
dec
push
insb
rcrl
bound
arpl
fcom
fadds
pop
or
xchg
sub
rol
bound
xchg
in
jno
out
fcmovnbe
mov
pop
jne
test
pop
pop
into
pop
pop
jecxz
dec
repz
std
sub
scas
pop
mov
test
aaa
cmp
mov
xchg
rcl
lret
jle
push
mov
adc
dec
out
orb
dec
je
les
push
shlb
mov
fs
cli
inc
push
out
jno
cltd
mov
pop
add
ja
aad
imul
cmp
sbb
mov
mov
and
mov
cmp
inc
outsl
and
insl
loope
mulb
mov
pop
aaa
popf
jmp
pop
iret
add
sbb
js
jle
mov
pop
cltd
stos
add
push
fwait
push
out
sub
sub
cmc
adc
sub
aas
lock
gs
xor
or
sbb
jle
out
jp
push
xchg
xchg
das
imul
gs
dec
addl
fldenv
pop
adc
dec
mov
xchg
sbb
push
daa
stos
cld
fstpt
vandps
ds
lods
push
test
jb
push
lret
adc
rcrl
clc
jno
jle
sbb
jecxz
ss
mov
mov
aad
lods
pop
cld
mov
leave
jmp
and
xchg
rclb
jo
flds
pop
dec
orl
cmpsl
lret
aas
mov
sbb
aaa
js
dec
rcl
sar
mov
push
scas
test
mov
mov
mov
movsl
add
pop
cmpsl
fistl
sbb
test
xchg
jno
scas
and
push
and
push
insb
test
sub
dec
sub
mov
inc
cld
jmp
jl
pop
sbb
stos
cli
leave
mov
leave
in
dec
sub
push
inc
xor
jl
inc
pop
sub
xchg
or
fcom
push
pop
sub
int
in
sub
das
mov
jne
test
xchg
mov
in
cwtl
mov
mov
mov
in
jp
xchg
and
pop
cmpsl
pop
xor
jae
shll
lahf
inc
push
adc
out
mov
test
cmp
sbb
fldenv
popa
dec
push
int
push
sub
dec
cmp
push
aas
fisubl
jne
dec
out
loope
cmc
push
jmp
jae
dec
mov
js
ljmp
cltd
outsb
in
cmpsl
jecxz
pop
aam
jae
pop
push
les
iret
xor
movsl
popf
mov
pushf
xor
arpl
and
daa
insl
lahf
std
sub
out
jns
out
ljmp
std
pop
add
adc
les
ficompl
mov
cltd
loope
cmp
cltd
std
push
xor
insb
xor
sub
cmpl
sub
push
xor
je
repnz
sbb
sarb
in
daa
clc
push
jae
ret
test
scas
int3
xchg
sbb
std
test
movsb
xchg
std
cwtl
inc
fmull
and
mov
mov
dec
push
and
push
and
mov
jl
lds
int3
sahf
lods
loop
cwtl
xor
and
stc
mov
imul
sti
cmp
mov
jns
push
mov
cmp
jmp
inc
jge
push
mov
push
lock
ss
push
jno
ret
cmp
adc
ss
mov
into
lcall
jmp
push
jl
push
test
sahf
push
rcrl
pop
or
inc
flds
test
add
fcompl
and
rolb
loope
xchg
push
lret
add
inc
sbb
sub
je
outsl
shll
int3
shlb
or
dec
and
cmp
pop
enter
push
jmp
fsubr
arpl
testb
mov
sbbl
loope
movsl
pop
leave
cmp
xor
ss
and
mov
fstpt
nop
outsl
xchg
jae
mov
xchg
in
mov
cmp
insb
adc
xchg
push
lcall
push
sahf
xor
icebp
outsl
sub
mov
dec
out
push
ja
ss
inc
pop
cli
imul
orb
jmp
mov
inc
mov
xor
pop
xchg
ss
or
in
and
stc
in
jno
cmpsl
fbstp
cli
fdivrl
fnstsw
push
fdivs
movsl
mov
lret
xchg
adc
dec
sub
nop
and
pop
fmull
popf
inc
cmp
iret
cmp
cld
andb
shll
mov
enter
push
xor
or
pop
fcompl
in
jmp
push
sti
xor
rcrb
pop
mov
inc
and
mov
inc
clc
lea
mov
into
stos
pop
popa
jmp
mov
cmpsb
sub
adc
daa
and
jmp
mov
not
dec
insb
cwtl
in
mov
ret
cmp
lods
les
mov
xor
cli
dec
out
fadd
movsb
iret
mov
sub
lea
aas
js
std
add
xchg
cmpsb
push
mov
leave
sub
push
clc
push
xchg
popa
idivl
push
sub
mov
jmp
cmp
shlb
mov
and
push
mov
insl
sbb
js
aam
scas
mov
and
cwtl
out
push
add
ja
mov
popa
hlt
mov
sub
scas
sub
inc
dec
lcall
cmc
test
loope
or
cmpsb
stos
fistpl
inc
lock
add
mov
adc
pusha
add
xchg
sbb
inc
outsl
sbb
inc
pushf
andl
aad
aad
xor
cld
mov
leave
pop
adc
add
xor
pop
enter
jl
in
and
xor
dec
mov
fldt
mov
out
test
jns
xbegin
addr16
movsb
mov
call
sub
or
jo
aam
aaa
sub
adc
pop
fwait
fwait
aas
jne
jge
sbb
sbb
fadd
and
cwtl
or
sarl
in
sub
mov
pop
movsl
lock
mov
jp
sub
incb
jl
arpl
fs
shll
mov
mov
jle
sbb
and
xchg
inc
sub
mov
inc
add
rcrl
movsb
repz
dec
push
sbb
jmp
xchg
xchg
xchg
iret
ds
mov
repz
jne
or
pop
outsl
sub
push
js
mov
push
stos
and
mov
inc
mov
xor
sbb
clc
inc
dec
sti
dec
stos
sbb
add
sbb
aas
out
push
dec
lods
bound
ss
push
or
vpaddd
lahf
cmpsl
adc
clc
xchg
hlt
incl
jbe
push
mov
sub
and
add
cs
lahf
movsl
sbb
rolb
xor
gs
adc
enter
mov
inc
adc
cs
ret
or
jae
lret
sub
out
mov
pusha
mov
cltd
rorl
pop
movsl
popf
cld
sbb
lahf
xchg
int
mov
xor
popf
jp
xchg
bound
jbe
jno
or
imul
loopne
int
gs
das
or
sbb
pop
inc
fs
mov
mov
std
xchg
add
jne
stc
xchg
negb
lods
or
mov
std
data16
cmp
inc
scas
push
xor
pop
shl
inc
sbb
lods
adc
mov
mov
sbb
pop
mov
out
jae
sub
scas
mov
mov
fbstp
movsb
mov
scas
xchg
call
fildll
pop
in
jmp
std
bound
enter
sbb
sbb
push
flds
lods
inc
repz
push
add
jp
clc
inc
and
stos
sahf
mov
std
in
inc
nop
xchg
lret
or
es
inc
sub
sub
jne
pop
nop
int3
xor
jne
enter
ss
loopne
sbb
jo
add
lahf
popf
cli
std
cmp
xor
dec
push
or
movsb
pop
loopne
and
outsl
aaa
mov
dec
cmpb
jae
fsubrl
push
int
inc
inc
inc
pop
loop
jg
js
mov
imul
cltd
lods
lods
inc
push
fsubrs
and
push
enter
in
pusha
jo
in
into
adc
inc
jmp
cmp
into
test
inc
adc
movsb
stos
cmpsl
xchg
pop
stos
test
inc
test
gs
xchg
mov
hlt
sbb
or
lret
push
or
xor
daa
add
xchg
test
sub
cli
push
insb
pop
gs
lods
adc
mov
loopne
rcrb
pop
ljmp
and
fidivl
movsb
add
push
push
mov
mov
addr16
push
nop
lahf
int
and
leave
movl
sbb
loopne
sbb
addl
gs
dec
sub
imul
xchg
adc
jo
lret
out
loopne
fidivrl
adc
dec
dec
xchg
xchg
xor
xchg
push
mul
arpl
pop
repz
and
shrb
cmpsl
mov
push
popa
mov
and
in
daa
leave
jmp
bnd
icebp
xchg
push
pop
rcrl
and
mov
movsb
das
fisttpll
pop
cmp
lds
push
ja
adc
pop
and
adc
cmpsl
imul
mov
or
lods
inc
jbe
pop
xor
out
fisttps
mov
pop
cmp
pop
incb
subb
test
mov
dec
out
pop
push
mov
or
dec
cli
std
jp
adc
cmp
lods
lods
outsl
stc
roll
movsb
xchg
and
jns
xchg
es
data16
mov
xor
jb
ret
pop
sti
mov
inc
xchg
clc
stos
add
pop
dec
jl
jne
ret
add
sbb
rolb
fimull
rclb
cmp
sarb
xchg
or
mov
repnz
popf
jmp
leave
or
push
rcll
adc
dec
pop
xchg
sub
movb
xor
pop
jb
daa
addr16
or
jnp
mov
xchg
dec
jge
pop
pusha
pop
out
dec
sti
call
std
clc
mov
lahf
outsl
add
jne
mov
dec
popa
cmp
aas
and
jle
and
xor
xchg
subb
clc
jge
jle
sbb
jbe
push
outsb
shrb
mov
repz
inc
mov
or
out
clc
dec
cmp
xchg
push
dec
jb
out
aas
mov
xchg
xor
adc
daa
test
and
and
mov
mov
sub
dec
mov
cmp
mov
test
sub
cld
lcall
out
mov
pop
nop
loope
mov
push
bound
adc
mov
push
mov
lods
jg
dec
movsb
inc
dec
jecxz
adc
sbb
pop
test
das
out
cltd
lcall
jge
pusha
stos
add
lret
cmp
cmp
pop
mov
pop
notl
adc
xor
jo
les
push
dec
mov
test
fsubrl
jecxz
cmp
shl
mov
mov
mov
and
das
addr16
cmp
push
lods
add
xorb
movsl
movsb
dec
in
out
je
sub
call
in
ret
mov
lods
pop
fcoml
xchg
push
cli
pop
sub
jnp
push
movl
mov
xchg
xor
int
fs
sub
cmpsl
adc
jmp
cli
popa
lea
jmp
lret
push
mov
jge
popa
mov
adc
fsubrl
lahf
adc
adc
pusha
xchg
nop
push
cwtl
mov
pop
insb
movsb
stos
mov
stc
movsb
loopne
mov
fcompl
pop
cmp
xchg
mov
in
js
adc
les
popf
mov
movsl
mov
outsl
cmp
shll
pop
xorb
lahf
mov
cmp
jl
xchg
mov
jp
xlat
sbb
lret
adc
shlb
xor
adc
jns
int3
loop
std
or
mov
jge
out
xchg
xchg
shlb
push
fucomip
cli
fsubrl
pop
push
inc
dec
iret
mov
xchg
xchg
cli
rclb
mov
dec
mov
mov
or
jae
outsb
js
outsl
and
adc
lea
shlb
mov
pop
and
cltd
pop
push
jg
pop
push
mov
ror
out
jb
imul
or
movsl
lea
add
rorl
push
cmc
push
repnz
cld
sbb
cwtl
mov
mov
or
cli
dec
fiadds
mov
dec
popf
cmp
push
and
test
jns
popa
sbb
dec
jno
jb
adc
sbb
push
push
bswap
mov
aas
lds
popa
dec
repnz
out
or
mov
jmp
test
mov
int3
cwtl
adc
fs
xchg
int3
ficompl
mov
sub
rcl
fldl
jmp
adc
popf
cli
dec
data16
mov
dec
stos
xchg
mov
test
out
cmp
popa
lret
mov
popf
dec
inc
xor
jno
test
mov
repz
arpl
scas
cmp
mov
lea
xchg
sbbl
mov
jne
and
and
pushf
sub
push
adc
sbb
dec
imul
outsl
push
inc
popa
pop
std
lock
test
iret
jns
xchg
pop
inc
and
jno
jge
out
das
dec
mov
sub
inc
push
fdivrs
push
push
rolb
ja
repz
jg
stos
sbb
jo
js
arpl
sarb
push
sarl
jne
out
inc
sti
or
lock
pop
int
adc
adc
movsl
lods
ljmp
addr16
mov
fdivp
xchg
cmpsl
int3
mov
ret
orl
or
dec
xor
fcom
cmp
jbe
inc
mov
test
adc
dec
mov
xchg
movsl
je
es
inc
outsb
pop
dec
xchg
mov
xor
push
ds
rol
add
int3
shl
sarb
cmpsb
cmp
and
mov
cs
push
xor
test
cmp
mov
notl
and
pop
pop
fisubl
dec
rolb
or
dec
fnstcw
mov
mov
pop
xchg
stos
dec
fucom
ljmp
gs
ss
fdivrl
xchg
sub
in
sub
orl
xor
pusha
xchg
lahf
mov
or
mov
cld
push
mov
mov
mov
lret
jb
jb
fmul
in
daa
mov
cmpb
into
push
leave
dec
mov
addr16
mov
adc
adc
add
sub
jle
cmp
shrb
pusha
es
insb
aaa
push
repnz
xchg
shll
pop
les
cmp
inc
insl
add
jg
lods
in
adc
cmc
xchg
ja
or
sti
inc
je
pop
dec
inc
cmp
adc
mov
mov
mov
push
adc
mov
jp
lock
jae
sbb
mov
mov
inc
std
es
inc
lds
xor
sahf
xchg
leave
push
inc
pusha
mov
aas
xor
gs
dec
mov
sbb
adc
sbb
xor
jo
mov
add
mov
sub
mov
sti
ja
adc
roll
lods
int
in
push
mov
add
negb
xor
sub
bound
jl
or
sub
lods
xor
test
pusha
out
dec
or
sub
cmpsl
xchg
outsl
iret
pop
jmp
dec
sub
dec
aas
pop
test
dec
pusha
in
lock
sbb
jecxz
inc
jns
dec
mov
or
dec
lds
enter
mov
push
jmp
in
xor
lods
jle
inc
fsubl
mov
xchg
pop
sarb
cmpsb
pushf
adcl
sub
and
je
test
mov
push
add
or
arpl
inc
outsb
pop
fldt
push
out
mov
jle
jns
add
out
fwait
jns
xchg
bound
fs
jg
sbb
jecxz
mov
push
sbb
adc
jns
inc
shl
aam
out
adc
xchg
push
insb
sub
mov
out
push
adc
sbb
scas
xor
adc
or
sbb
cli
adc
and
jecxz
pop
xchg
in
lret
push
adc
inc
add
jno
lcall
imul
subb
sub
mov
bound
ds
xchg
lods
or
stos
jp
loopne
aad
pop
stos
adc
push
test
std
adc
icebp
mov
dec
inc
sub
not
xlat
push
sub
pop
aas
ja
popf
std
dec
jne
cmp
mov
jns
fidivs
adcl
sub
push
jb
in
out
jne
jo
scas
lcall
jle
test
mov
sbb
sbb
pusha
rorb
cs
cli
mov
notb
xchg
mov
adc
or
stos
ret
add
mov
outsb
xchg
push
jmp
jo
cs
in
lret
inc
dec
mov
cmp
cmp
icebp
imul
adc
push
bound
test
jp
cmp
add
push
dec
xor
xlat
ljmp
xor
push
or
dec
mov
pop
pop
mov
push
sbb
jmp
outsl
sbb
xor
and
les
push
ja
push
mov
js
iret
dec
push
clc
jle
call
cmp
adc
xor
cmc
sub
fmul
xor
in
enter
ja
xchg
push
fucomi
mov
lret
in
ret
inc
xchg
jns
test
out
xor
mov
fisubrs
inc
mov
adc
xchg
and
push
jnp
sbb
pop
loope
mov
push
adc
push
mov
insb
push
cwtl
test
xchg
adc
push
fsubs
sbb
xlat
mov
cld
shll
out
ss
leave
pop
arpl
dec
test
mov
loop
int
push
push
xchg
fistps
cli
rolb
sub
pop
xchg
lods
leave
aam
or
lock
xor
dec
add
adc
pop
dec
and
es
cli
pop
cmpsl
jl
pop
and
ret
mov
inc
mov
sbb
lea
out
xorl
cmpsb
fmull
and
sub
and
inc
loop
push
popa
repz
fmull
sub
cmp
in
push
dec
or
call
sbb
jmp
jns
inc
ja
inc
push
push
mov
mov
and
ja
shr
push
arpl
rorl
mov
xchg
mov
setg
lods
pop
mov
inc
xchg
aam
sub
js
and
add
pop
push
icebp
mov
sbb
push
push
pop
out
ret
insl
add
popf
pushl
aaa
pop
inc
dec
adc
outsl
ss
outsl
adc
pop
fadds
or
dec
lret
jne
xchg
enter
inc
and
and
aaa
mov
pop
cmp
and
rcrb
std
out
leave
cwtl
dec
mov
mov
sub
popa
fisubrl
mov
daa
mov
daa
xchg
les
adc
jle
dec
aam
rol
pop
xchg
out
adc
ret
hlt
pushf
sub
ds
inc
push
xchg
stc
test
jmp
jle
shrb
pop
xorb
mov
inc
inc
mov
mov
cmp
in
and
cmp
sub
mov
fs
and
movsb
leave
xchg
mov
aad
out
mov
mov
stc
adc
daa
mov
and
lods
idivl
rol
xchg
mov
or
mov
xchg
push
push
xchg
movsl
repz
push
lcall
fucom
jg
lods
mov
cmp
notb
lret
and
mov
push
ret
jbe
std
les
dec
loope
jno
xchg
loope
cmc
dec
xorl
aam
mov
loopne
enter
jp
scas
push
ret
xor
mov
mov
das
shll
pop
in
call
sbb
js
enter
imul
aad
cmc
hlt
stos
sub
push
icebp
out
inc
lcall
mov
dec
pushl
fldenv
cmp
popa
push
scas
mov
cmc
sbb
inc
jno
and
int3
cmp
cmp
sbb
and
mov
decl
mov
mov
addr16
add
cwtl
xchg
xor
cmp
xchg
gs
leave
push
fisubrs
icebp
lcall
xchg
add
loopne
sbb
pushf
loop
in
int3
pushf
sub
enter
push
pop
pop
jnp
mov
mov
daa
mov
add
test
in
sbb
jp
cmc
xor
mov
and
in
mov
iret
dec
inc
dec
mov
cwtl
mov
xor
addr16
mov
cmp
jg
test
and
jno
mov
mov
ss
test
cwtl
or
jbe
cmpsb
shl
lret
add
aas
lock
sbb
pushf
out
jl
pop
cmp
xor
out
dec
fstps
xchg
mov
cmp
xchg
imul
fs
and
mov
or
jl
test
div
inc
mov
addr16
sbb
imul
xchg
xor
pop
push
mov
push
das
aam
cmovno
ret
jae
shrb
xor
inc
or
push
adc
cwtl
xor
dec
pop
add
leave
jb
test
pop
stos
ret
cmpl
or
popa
pop
ljmp
test
jns
mov
outsw
mov
sub
jmp
mov
xchg
mov
pop
lods
push
inc
push
pop
xchg
push
repz
jno
aad
xor
or
inc
add
andl
std
lret
mov
add
cmpsl
mov
pop
jns
xor
jge
mov
xchg
lcall
inc
pop
mov
dec
mov
repnz
mov
jb
xchg
mov
stc
rolb
loopne
sbb
pop
jp
sti
dec
mov
scas
add
sbb
and
andl
push
jle
sbb
add
xchg
lea
repnz
jbe
xchg
cltd
das
pop
jo
dec
in
lods
adc
mov
pop
scas
mov
cmpsl
jp
jecxz
mov
in
idivb
addr16
jo,pn
jmp
cltd
adc
or
imul
dec
loope
clc
movb
xchg
jecxz
xor
xor
in
ss
lcall
outsl
or
mov
mov
insl
mov
scas
inc
add
xchg
into
loope
mov
inc
je
cs
aad
das
sub
sbb
or
cmpsb
mov
adc
daa
xchg
mov
out
roll
pop
in
sbb
mov
mov
insl
cmp
sub
test
push
lea
jo
cmp
push
int
lods
pop
pop
jb
loopne
mov
push
pop
ror
call
xchg
mov
lret
ss
fs
pop
mov
push
pusha
and
jmp
mov
add
shl
pop
cmp
cmpsb
je
lds
push
push
and
push
push
push
xor
ja
dec
xor
mov
mov
xchg
jecxz
mov
out
movsb
repnz
je
ja
dec
jmp
orb
dec
mov
andb
aas
repnz
pop
lods
or
mov
in
mov
movsb
push
lods
lret
dec
into
and
inc
jno
in
push
jecxz
int3
mov
jnp
daa
add
inc
lds
icebp
lods
adc
daa
jge
jne
mov
fs
inc
int3
ret
inc
inc
sbb
frstor
mov
pop
add
jo
adc
shlb
insb
push
call
decb
std
hlt
cmp
cmp
hlt
stc
add
jge
jle
mov
faddl
data16
add
scas
dec
out
sub
cmp
loop
mov
add
fsub
sub
aad
cmc
sbb
mov
jge
decb
add
rclb
shrl
pop
inc
mov
mov
jmp
rolb
xchg
add
int
mov
mov
loopne
lods
into
cmp
and
and
push
inc
dec
notb
ret
push
mov
xchg
add
xchg
xor
ret
pop
negl
clc
add
mov
xor
cld
je
dec
scas
mov
push
arpl
jbe
jecxz
and
in
jp
in
push
lcall
jns
std
add
jnp
push
lds
cmp
add
out
sub
loope
push
cmpsb
outsl
adc
lret
pop
jo
gs
stos
icebp
xor
mov
addb
stos
lods
mov
in
xor
dec
jno
sub
adc
aam
enter
cmp
out
push
mov
dec
sub
add
mov
mov
in
ljmp
or
sbb
cs
mov
mov
mov
into
mov
cmp
out
stc
cmpsl
dec
ficomps
jp
or
jge
add
push
loopne
gs
jecxz
mov
or
adc
xchg
xor
sarb
lds
jo
sub
outsb
cmp
es
vfrczps
adc
cli
out
mov
fs
into
or
xchg
push
and
stos
imul
jg
dec
xor
out
cwtl
mov
push
xchg
mov
sub
xchg
xchg
insb
pop
xchg
pmulhw
cmp
js
loopne
pop
push
ja
in
enter
addr16
mov
cmpsl
dec
sbb
push
mov
loopne
or
adc
bound
cmp
push
dec
inc
in
roll
dec
pushf
cld
push
daa
fcoms
jns
scas
mov
ret
sub
or
cmp
adc
mov
jecxz
pop
shlb
leave
add
mov
cmp
loop
in
pop
xchg
and
push
lock
mov
push
pop
push
inc
ret
add
push
dec
pop
cmp
pop
pop
sub
out
or
int3
sbb
dec
cmp
jle
lds
arpl
repnz
sti
jp
sahf
sub
mov
imul
out
xchg
xchg
pmaxub
jnp
or
mov
daa
sbb
shrl
or
or
push
push
mov
mov
loope
xchg
or
popa
push
leave
mov
fldenv
jle
inc
xor
xchg
inc
adc
fldl2t
or
sarb
out
mov
lret
push
adc
lods
stc
mov
ljmp
ss
jmp
push
push
int
jb
test
daa
jno
xchg
ja
mov
push
pop
dec
lock
iret
push
pop
or
out
or
cli
jecxz
loop
sbb
dec
lahf
pop
movl
daa
xor
push
lds
cmp
or
pop
and
cmc
mov
lock
adc
push
in
inc
sbb
jle
dec
imul
fbstp
add
fbld
fcomps
addr16
pushf
jne
cmpsl
pop
popl
daa
push
pop
gs
or
loope
add
push
pop
inc
mov
mov
setbe
add
in
stos
movsb
test
xchg
outsb
bound
pop
pop
and
int
les
fnstsw
xor
xchg
imul
adc
sub
push
es
jns
lcall
leave
add
mov
pcmpgtw
mov
icebp
notl
stos
push
imul
jmp
dec
adc
or
dec
adc
cmp
rcrl
out
leave
adc
hlt
xor
cmpsl
cmp
xchg
jno
lea
cmp
jp
stos
cmc
ss
mov
loop
add
sub
push
push
outsb
divl
mov
in
sbb
add
lret
jne
pop
outsb
out
loopne
jb
jae
mov
repnz
scas
mov
sbb
jb
cs
data16
cmpsl
adc
enter
call
jb
int3
test
fnsave
sbb
pop
inc
cmp
fisubl
sarb
test
repz
and
xchg
shlb
rclb
scas
cmc
mov
dec
cmp
add
rclb
fwait
cmc
mov
fidivs
push
inc
aam
dec
mov
xchg
xchg
mov
push
outsb
add
and
xor
imul
mov
fldcw
and
adc
lods
mov
xor
lea
cld
and
fisttpl
mov
filds
iret
fmull
pop
mov
or
mov
cwtl
mov
xor
sbb
add
je
test
jmp
xchg
rorb
push
lock
xchg
xchg
enter
scas
lods
fcoms
sti
je
fstl
mov
enter
test
fstpt
popf
pop
add
inc
mov
int3
outsb
mov
pop
jbe
js
nop
adc
pushf
mov
aaa
sbb
xchg
loope
mov
mov
imul
fs
fwait
loop
movsb
ja
dec
iret
imul
add
jmp
mov
jb
push
ljmp
leave
sti
jae
loopne
ss
mov
and
mov
pop
movsb
std
push
mov
inc
cmp
xchg
add
insb
ret
stos
dec
decl
mov
and
add
xor
aam
add
mov
in
jno
push
sub
popf
int3
jae
pop
sub
push
inc
xor
pop
xchg
mov
mov
cmp
ret
and
pop
into
mov
mov
subl
add
stc
xchg
xor
rorl
inc
cltd
stos
pop
adc
movsb
push
inc
les
jae
mov
cmc
add
dec
jge
je
lods
xorb
es
sti
popa
xor
negb
push
das
xchg
mov
jbe
cmp
add
gs
outsl
pop
mov
inc
cmove
aam
out
xchg
sub
fdivrl
call
or
in
fs
js
ficoml
popf
int
adc
dec
mov
imul
jp
sti
out
fwait
add
fistpll
jne
pop
fs
add
hlt
mov
in
sbb
xchg
mov
cs
xor
sbb
mov
je
lahf
outsl
dec
cld
mov
adc
sbb
es
aas
call
jecxz
aas
cmpsl
out
iret
push
fwait
adc
inc
mov
jp
jnp
mov
or
nop
dec
lea
sbb
jnp
cmp
sub
adc
mov
and
inc
push
xor
cmp
loope
mov
jno
mov
lret
inc
inc
push
sbb
add
lock
jo
adc
sub
add
dec
fsubs
iret
mov
mov
iret
ret
cmc
dec
mov
lret
sbb
sbb
add
in
push
inc
mov
out
mov
leave
push
jge
cltd
mov
push
mov
pop
mov
pop
in
mov
lea
xchg
xchg
in
lret
in
movsb
out
xchg
in
outsb
xor
subl
outsl
dec
mov
push
insl
pop
mov
mov
mov
pop
cli
inc
inc
movsl
mov
mov
jo
adc
cmp
xor
fistl
xchg
je
pusha
fs
std
dec
xchg
xchg
fucom
xchg
je
inc
test
push
addr16
loop
outsl
push
mov
lret
sub
sub
hlt
cmpsb
popa
and
jle
leave
outsl
inc
outsb
stos
aad
js
stos
adc
xchg
lock
jnp
lret
lcall
mov
stos
aam
cmp
sub
fmull
mov
push
das
in
cmpsl
lock
add
dec
push
fs
test
jbe
dec
jle
int
and
mov
movsb
mov
in
stos
mov
cld
adc
gs
or
ret
add
push
insb
jg
ljmp
xor
cmpsl
add
mov
mov
ret
adc
xchg
cmp
leave
cmp
scas
mov
lea
mov
mov
mov
sub
jo
in
jae
ret
imul
stos
cmc
fildl
push
jmp
push
adc
sub
imul
fs
inc
mul
ss
mov
xchg
sbb
pop
xchg
push
dec
xor
out
mov
pop
leave
mov
cmp
pop
arpl
pop
sub
mov
jo
sahf
and
ljmp
mov
hlt
addr16
loopne
es
clc
dec
xor
shll
in
dec
aam
hlt
dec
add
repnz
mov
ljmp
repnz
pop
call
push
hlt
dec
mov
jl
xor
mov
xor
out
sub
ret
fisttpll
ds
or
adc
mov
bswap
pusha
bound
mov
adc
pop
mov
sub
bound
jp
loopne
jmp
call
pusha
mov
dec
push
in
xor
sub
xor
scas
inc
jnp
jg
jo
push
lahf
insl
add
jge
add
inc
mov
rol
xor
std
ret
stos
clc
popf
mov
xlat
jbe
into
jno
cli
pop
lcall
dec
push
mov
pop
repz
into
adc
pop
xor
inc
call
inc
fstpt
jecxz
and
jb
mov
loop
scas
sbb
shl
inc
cld
push
test
jg
mov
and
loope
lods
sbb
xor
sbb
movsl
mov
mov
inc
mov
in
push
xchg
pop
sub
push
je
mov
testb
add
mov
pop
and
test
add
push
lcall
bound
pop
xor
shll
inc
or
cmp
or
mov
or
fbstp
dec
mov
and
cmp
lret
inc
es
subb
dec
or
ljmp
shll
lret
push
xor
fwait
mov
jp
data16
ret
sub
popa
xlat
pusha
je
sbb
in
enter
add
icebp
test
or
xchg
sti
mov
add
ds
inc
insb
push
xor
pop
inc
push
mov
jmp
popa
aaa
call
and
inc
movsl
int
inc
out
mov
cmp
out
sbb
in
adc
stc
cwtl
repnz
jns
pop
lret
test
cld
outsl
popa
pinsrw
mov
or
cs
scas
pop
loope
push
ret
lahf
mov
xor
pop
add
add
lahf
xchg
sahf
pop
loope
js
inc
clc
sbb
pop
xor
cli
pop
sub
or
sub
outsl
push
cli
xor
jp,pn
movsb
decb
xchg
cmc
push
jbe
adc
mov
aam
mov
rcl
xchg
add
xor
fmuls
sbbb
lcall
clc
mov
int
sbb
jge
sarb
loope
push
adc
or
fisttpll
cmpsl
lock
decl
outsl
in
jmp
insl
pusha
push
inc
mov
pop
add
insb
int
inc
fmuls
out
xchg
rcl
mov
adcl
inc
ret
movsb
fs
insl
pop
dec
push
sub
pop
pop
loop
push
jns
dec
xchg
daa
fs
mov
xchg
or
xchg
shll
orps
mov
test
jmp
lahf
int3
fs
fldl
fcompl
jl
push
pushf
and
scas
mov
mov
pusha
add
data16
jne
pop
xchg
scas
adcl
mov
aas
pop
push
jne
pop
mov
lds
or
fwait
nop
pop
xchg
or
pop
lods
inc
add
das
test
lea
pop
shr
pop
ret
and
pop
xchg
mov
pop
push
lock
sub
xor
rorb
sbb
inc
mov
insl
mov
idivl
rclb
push
lds
xor
in
add
mov
orl
adc
mov
xorl
outsl
das
mov
out
popa
mov
xchg
mov
add
jmp
jns
popf
outsb
dec
hlt
push
je
push
cmpsl
add
fdivr
jae
jae
jb
sub
push
aam
sub
fldenv
lret
pop
fs
popa
imulb
and
das
or
or
sbb
popf
hlt
sahf
mov
jo
pop
pop
mov
or
sub
jb
xor
cmp
lds
pop
push
jns
mov
nop
sbb
das
sahf
jecxz
ret
sbb
outsl
push
sti
cmp
incl
mov
cmc
imul
mov
mov
mov
lds
xor
pop
pop
mov
in
popf
test
pop
popa
mov
xchg
push
fwait
push
mov
scas
sbb
enter
int3
mov
sbb
sbb
mov
mov
fucom
xchg
in
test
in
mov
ds
add
mov
ds
mov
imul
mov
lds
iret
shl
push
or
add
int
out
iret
rcl
lcall
jge
sub
inc
das
mov
sub
loope
adc
mov
loopne
ret
and
sub
xlat
mov
hlt
xchg
dec
mov
xchg
dec
mov
rcll
lret
xrelease
sub
out
and
mov
clc
xor
cmp
jecxz
pop
js
cmp
imul
push
mov
imul
pop
ret
callw
je
loopne
arpl
dec
arpl
mov
xchg
lods
pop
or
dec
cltd
stos
cmpsb
nop
cmp
jge
push
orl
std
pop
jo
call
dec
lea
cwtl
inc
loop
add
adc
jge
xor
add
push
add
inc
xchg
aaa
adc
push
stos
popf
mov
add
push
aaa
sahf
jb
clc
sub
xor
dec
xor
or
jg
jl
dec
jns
nop
mov
es
pushf
xor
pop
andb
int3
xchg
jmp
sub
nop
subl
stos
xchg
mov
ljmp
dec
aaa
hlt
out
bnd
fwait
loope
fs
or
in
xchg
xor
loop
sbb
sub
ja
sub
fwait
xor
stos
push
push
jecxz
xchg
or
lods
add
gs
aas
clc
fbstp
lods
sbb
push
jecxz
das
hlt
mov
adc
dec
sbb
dec
adc
jo
fwait
loop
sbb
and
push
mov
jp
or
xchg
inc
adc
cmp
and
mov
fwait
dec
push
call
insb
cmp
enter
cmpsl
imul
and
push
adc
pusha
xchg
push
lds
scas
cmc
mov
add
sbb
sub
aam
jne
int
jno
push
roll
les
jp
push
loopne
ror
push
push
push
outsl
pusha
es
inc
ret
mov
ss
call
mov
mov
jg
fs
shrl
out
mov
js
xchg
mov
cmpsl
xchg
out
push
mov
test
ret
add
pop
cmp
or
lods
push
xor
inc
and
xlat
push
sub
sbb
mov
addr16
cmp
sbb
cmpb
enter
mov
repz
mov
or
jns
outsl
and
out
pusha
sub
add
mov
cmovl
cs
jae
int
mov
jg
rcrb
gs
aas
push
int
aaa
jae
cmpsb
fs
mov
mov
pop
cmp
stc
cmp
mov
pop
nop
out
imul
pop
jl
dec
cmp
test
cmp
cmp
and
sub
cmpsl
nop
popf
dec
ss
cmp
sarl
mov
pop
out
mov
scas
sbb
rorl
mov
aad
sbb
or
into
mov
mov
adc
and
mov
pop
mov
adc
pand
movsb
or
and
and
and
inc
ss
loopne
retw
mov
test
sub
cmpsb
sbb
inc
jg
fistl
ljmp
fidivs
adc
jno
dec
push
sahf
inc
test
jbe
int3
mov
fcoms
pusha
enter
sbb
movsl
int
inc
and
dec
bound
push
mov
cs
test
call
xchg
lret
sub
idivl
sub
imul
pusha
and
push
mov
jo
inc
push
rorb
aad
inc
pop
fcomp
lret
out
cmpsl
int3
xlat
jle
rcl
inc
cmc
cltd
aas
dec
ficomps
loopne
jmp
aaa
mov
or
xchg
pushf
lods
cmp
inc
push
jne
lret
pop
movsl
fmull
and
jnp
ret
pop
add
mov
stos
sahf
jns
sahf
test
inc
push
xchg
fildll
pushf
repz
rorb
hlt
lahf
and
pusha
sbb
xlat
mov
es
cmpsl
jp
dec
lret
pop
les
imul
mov
fcmovnb
push
xor
xchg
pop
jg
sbb
inc
push
mov
cmp
sbb
lcall
sub
dec
xchg
repz
into
push
inc
lcall
test
push
dec
mov
mov
out
pop
aad
fisttps
ficoms
scas
fsts
mov
cmp
dec
jae
dec
inc
sbbb
notl
stos
dec
adc
cmpsl
lret
ret
cmp
icebp
test
mov
in
dec
inc
fistl
pusha
and
je
mov
addr16
pop
insl
je
inc
ja
add
ljmp
fcmovne
xchg
sti
sbb
call
pop
enter
jmp
dec
iret
dec
mov
xor
cmp
sti
cmpsl
insl
seto
das
loop
fucomi
add
out
sub
mov
jp
cli
outsb
hlt
or
sub
jle
std
sbb
cs
or
pop
in
outsl
dec
adc
lea
push
cmpsl
jbe
stos
sub
mov
idivb
test
cld
loop
stc
adc
xchg
mov
cld
xor
rcr
psadbw
subb
mov
and
mov
bound
jl
pop
addb
hlt
out
lds
repnz
loopne
psraw
pop
int3
jmp
sub
pop
cmpsl
inc
mov
mov
faddl
js
mov
fidivrs
ja
sbb
jmp
sarb
pop
cmpl
fnsave
xchg
scas
xchg
mov
cltd
pop
and
mov
in
and
mov
or
lods
push
aad
add
pop
xor
nop
outsb
add
lods
loop
push
cwtl
outsl
or
dec
xor
aas
aad
xor
fcoms
rep
stc
outsb
mov
outsl
or
mov
scas
ret
push
jle
push
inc
pop
inc
shlb
inc
cmp
scas
and
pop
sub
repz
ss
mov
lret
ret
arpl
mov
mov
out
out
mov
xchg
adc
mov
cmp
shlb
enter
std
dec
ret
call
mov
aam
lods
inc
cmp
dec
mov
cltd
rorb
inc
inc
mov
in
sub
sub
jnp
insl
outsl
push
js
popa
lods
add
push
xchg
adc
dec
add
jp
sbb
jno
sbb
adc
push
inc
jnp
mov
sub
fstp
mov
arpl
andl
fdivl
push
xchg
pop
in
cmp
and
cmpl
push
inc
pop
pushf
fucom
jecxz
mulb
das
movsl
lods
sbb
xor
pop
lea
mov
push
xor
fld
inc
pusha
xor
cmpsl
mov
pop
ljmp
mov
xchg
call
inc
aaa
pop
xor
les
mov
fisttpl
add
push
imul
mov
iret
fnstenv
xchg
mov
dec
aas
xor
jae
pop
cmp
or
cltd
and
scas
xchg
jecxz
andb
mov
ss
gs
sbb
test
inc
pop
mov
push
sub
xchg
mov
inc
xor
imul
js
fs
in
mov
push
cmp
dec
push
andl
pop
aam
fidivrl
xor
xchg
ret
aam
pop
and
push
test
imul
jo
mov
cmp
push
pop
and
fcoml
test
xchg
aam
xor
sbb
cmc
mov
and
sbb
aas
pop
cmp
pushl
testb
dec
xchg
xor
mov
sti
fisubl
das
add
cmc
adc
loope
scas
jbe
inc
aad
outsb
lret
jmp
lods
jge
jne
lahf
mov
jnp
mov
add
sub
add
adc
lods
pop
loope
xchg
jle
pop
jmp
into
iret
sti
lods
mov
mov
inc
data16
scas
int3
and
push
sti
add
pop
fdiv
ret
or
sbb
mov
out
lcall
gs
out
pop
inc
xlat
stc
add
dec
stos
test
mov
clc
jae
xor
insl
or
sbb
stc
sub
mov
lcall
shlb
fstpl
pop
sahf
je
fildl
in
loope
loope
and
adc
and
inc
scas
dec
add
aas
cmp
push
cmc
test
les
ret
mov
jb
enter
mov
or
adc
inc
mov
int3
mov
int3
sbb
int
xchg
mov
hlt
push
dec
ds
sub
out
pop
add
pop
shlb
mov
mull
inc
daa
scas
rolb
sahf
into
ja
rcll
inc
rcll
jmp
or
xlat
add
enter
pop
not
dec
cmpsb
mov
in
dec
and
pop
mov
push
mov
jp
jae
loop
jnp
or
repz
jl
cli
cmc
xor
int
call
cltd
inc
inc
roll
enter
sahf
sarl
ds
insl
mov
xchg
and
gs
iret
pop
lock
push
jmp
in
pop
lret
cmp
add
mov
loop
push
jecxz
dec
mov
test
xor
inc
loop
inc
pop
leave
mov
mov
cs
and
push
imul
inc
rorb
add
orb
jnp
fcompl
lods
xor
mov
aam
in
xchg
shlb
jb
mov
push
push
inc
mov
mull
mov
shrl
push
or
pushf
roll
dec
or
or
jnp
repz
xor
sub
mov
stos
mov
mov
push
mov
in
test
mov
roll
stc
sbb
cmp
es
cmpsl
ss
sahf
sbb
fldl
sub
sbb
rolb
xor
cmp
leave
mov
mov
xor
mov
lods
int3
movsl
push
inc
dec
jle
shlb
rol
gs
push
movsl
stc
movsb
cmc
jns
arpl
stos
in
enter
fstpl
std
jo
ror
add
sub
int
in
loop
out
or
cli
rolb
push
rcrb
cli
dec
mov
lds
lcall
inc
sub
mov
pop
fsubr
iret
pop
mov
xchg
jne
mov
sub
outsl
lds
cmp
lret
mov
mov
mov
xchg
orb
ret
mov
mov
xchg
ds
mov
xchg
sub
push
pushf
popa
add
lods
iret
sbb
add
ds
mov
and
stos
dec
sbb
jmp
movsb
lret
and
aaa
fdivl
jmp
rcrb
out
jnp
pop
push
jns
dec
inc
add
mov
in
xor
mov
jg
dec
sub
imul
int3
inc
popf
mov
adc
mov
out
cwtl
icebp
adc
sub
xchg
call
jo
mov
mov
mov
ss
cld
mov
in
mov
call
subl
mov
cmc
mov
ds
int
push
add
xchg
movsl
jl
inc
xchg
insl
dec
sbb
ficoms
jbe
in
out
or
jnp
jg
dec
cmovge
int
jp
adc
mov
test
and
pop
jae
mov
bnd
mov
pusha
lret
jae
out
xchg
arpl
cmpsl
push
flds
mov
xor
stc
dec
daa
mov
jl
out
iret
pop
notb
cwtl
ss
into
cs
xchg
aad
add
aaa
push
pusha
fists
xchg
mov
neg
mov
xchg
inc
jb
shr
arpl
mov
out
imul
imul
sbb
inc
lret
sub
movsb
xor
pop
xor
pop
dec
push
lahf
insl
in
add
popa
sbbl
std
aam
mov
ds
mov
loop
dec
or
pop
pop
roll
sub
jb
pop
aas
cwtl
pop
mov
sbb
jo
divl
mov
mov
mov
add
jmp
dec
data16
jge
pop
hlt
xchg
dec
cld
into
cmovbe
dec
sub
fisubrl
fstl
mov
dec
lock
inc
jnp
loop
mov
xchg
daa
pusha
test
jno
nop
sahf
sbb
mov
cs
and
repz
push
ja
ret
scas
imul
mov
icebp
lcall
push
push
dec
aad
aas
das
decb
sahf
insl
sub
cmp
cli
in
shlb
nopl
sti
inc
outsb
inc
and
mov
fdivl
gs
jle
addr16
mov
sbb
call
mov
stc
sarb
inc
xchg
jl
lock
test
repz
cwtl
inc
leave
jns
arpl
insl
inc
pop
xchg
jnp
jp
aad
sarl
jo
pop
push
xor
and
jb
aam
mov
xor
fisubrs
idivb
push
movsb
aam
data16
xor
mov
popf
xchg
sub
jnp
adc
jns
imul
sti
push
xor
dec
xor
xchg
pop
add
pop
xorb
inc
mov
sbb
add
loop
mov
in
mov
sbbl
in
jae
and
lahf
mov
ja
insl
xor
pop
jbe
mov
xorb
addb
int3
adc
rcr
in
in
ljmp
clc
ljmp
jno
ja
aaa
and
repnz
xor
pop
and
call
loop
js
cmp
rol
or
cmp
mov
adc
mov
ret
jbe
push
sbb
cmp
lret
mov
and
lret
out
in
mov
mov
jl
dec
add
push
inc
adc
repz
out
es
call
pop
aam
lret
ljmp
pop
pop
cmp
and
out
dec
mov
int3
mov
sub
call
inc
loope
xchg
call
xchg
clc
repnz
loope
enter
insb
xlat
xor
sbb
test
ret
mov
xor
ljmp
sbb
add
pop
mov
rclb
lock
clc
adc
mov
dec
or
test
movsb
jecxz
dec
push
push
mov
mov
je
movsb
adc
or
pushf
lods
sbbl
incl
dec
cmp
aas
fistl
jmp
orl
nop
cli
gs
inc
out
and
jbe
gs
push
addr16
in
push
lock
jb
push
dec
dec
inc
xchg
xor
or
sub
outsl
adc
adc
lret
out
pushf
in
movsw
ds
lret
in
dec
xchg
or
push
lods
xor
repnz
dec
outsl
cwtl
dec
pop
imul
mov
into
sub
cmp
adc
lcall
cmp
in
jmp
cmc
inc
mov
movsl
push
popf
ja
gs
mov
arpl
jecxz
std
pop
adc
sarl
mov
cmp
repz
rcl
fcomps
ret
dec
sub
adc
hlt
push
cltd
movsl
gs
test
cmp
or
test
sbb
dec
andb
pop
cmp
adc
or
jnp
push
mov
pop
or
shl
fnstsw
cmp
js
pop
xor
rcrb
pop
sbb
repz
int3
sub
call
test
in
mov
fsubl
ja
sub
jnp
pop
decl
and
sub
lret
outsb
sbb
xor
fldt
int3
add
mov
xlat
cmp
jmp
les
dec
addb
lods
idiv
out
xor
or
mov
sub
out
hlt
ja
inc
cmp
mov
dec
icebp
sub
jmp
sub
ds
or
cli
sti
outsb
divb
pop
sub
and
mov
lds
out
lret
sti
add
sub
sub
pushf
dec
leave
xchg
frstor
movsb
sbb
shl
jne
dec
and
mov
mov
iret
addb
int
pusha
jecxz
jno
adc
pop
scas
fistl
call
jge
jmp
cltd
mov
xchg
cmp
pop
push
stos
fs
or
mov
pusha
pop
jo
sbb
cld
dec
repz
sub
scas
push
sub
xchg
inc
testl
js
cli
cs
xorb
aam
xchg
mov
call
cwtl
adc
ja
dec
add
lock
dec
cmp
movb
cwtl
sbb
clc
into
xchg
sbb
outsl
jmp
cmp
fstl
add
out
xchg
jmp
into
or
jge
cmpsb
mov
movsl
and
jb
pop
sbbl
lcall
int
inc
fsubs
adc
ret
std
mov
cmp
and
ljmp
mov
mov
add
lods
and
xchg
push
cmp
push
in
lret
cmp
mov
leave
repnz
pop
popa
and
mov
cmpb
addb
pop
das
sub
lret
loop
cmpsl
gs
ljmp
and
std
clc
push
pop
shll
sbb
jmp
mov
mov
add
push
sbb
adc
adc
cmp
adc
imulb
mov
cmp
aam
xor
add
sub
sub
and
add
test
push
cmpsb
orl
ret
shll
pusha
ja
jp
push
xchg
in
push
imul
sbb
add
add
repnz
ljmp
xor
add
pop
adc
sub
sti
and
orl
sub
mov
scas
adc
mov
out
outsl
adc
mov
jg
shlb
lods
push
out
jmp
in
addl
fidivrl
lea
ret
or
pop
mov
push
xchg
scas
sub
xchg
xorl
inc
xchg
adc
hlt
dec
mov
test
cltd
movsl
addr16
mov
push
sbb
mov
ss
jae
mov
cvtpi2ps
mov
shrb
scas
fs
in
or
data16
push
divb
sbb
fnsave
sarl
stc
sub
xor
sub
push
mov
dec
imul
movsb
xor
rorl
data16
or
out
and
sub
imul
aaa
push
test
dec
das
int
mov
in
mov
lahf
add
jle
aas
xor
inc
loope
jmp
cmp
rorl
mov
out
sarl
xchg
pop
fmuls
stos
daa
das
hlt
sbb
jns
cmc
out
jns
cmp
xor
xchg
int3
fcomi
dec
sub
mov
sahf
test
test
inc
and
sub
inc
or
and
mov
mov
mov
mov
mov
add
add
cmp
cli
insl
dec
dec
and
push
push
arpl
xor
mov
cli
stc
pop
sub
bound
add
xor
mov
ja
xchg
jnp
and
mov
movsl
xchg
roll
mov
stos
lret
cli
xchg
sub
push
aam
fdiv
adc
stc
add
jp
orb
out
push
lahf
das
lret
pop
or
andb
int3
test
ja
pop
sbb
pop
mov
mov
mov
aaa
aam
mov
je
push
inc
jne
jb
dec
mov
aaa
or
mov
xchg
sahf
jne
mov
lds
jecxz
shlb
iret
cmpsb
xor
pop
jmp
xor
fstl
mov
fs
cli
lret
inc
sub
push
lret
jmp
adc
inc
cmp
int
test
and
imul
mov
lret
fs
pop
imul
push
sarl
xchg
or
je
dec
xor
fadds
inc
fwait
pop
add
ljmp
pop
aas
ret
std
sbb
pop
jg
negl
outsl
dec
clc
mov
lret
call
push
test
data16
mov
adc
out
dec
adc
mov
and
jmp
push
sub
test
rorl
daa
sub
pop
and
add
jns
popa
insl
cltd
push
inc
dec
or
sti
lods
cli
lcall
pop
jb
mov
add
nop
pop
sti
mov
mov
mov
xchg
pop
icebp
fstl
jecxz
sti
in
imul
outsl
mov
sbb
pushf
and
pop
lcall
xchg
repz
stc
jae
mov
mov
out
mov
xchg
stc
in
push
inc
out
outsb
dec
xor
dec
or
pop
orb
mull
mov
jne
call
subb
sahf
sub
idivb
lods
or
xchg
dec
mov
ret
es
sub
mov
mov
cltd
xor
movsl
aas
add
rdmsr
mov
sub
out
sahf
leave
xchg
jmp
mov
repnz
pop
add
test
or
inc
jns
xor
cwtl
sub
mov
jge
cmp
bound
xchg
test
xchg
mov
fsubrl
xor
pop
adc
mov
lock
or
mov
pusha
repnz
fbstp
out
into
stos
jbe
xorb
or
movl
lock
dec
insl
je
cmp
mov
stos
out
gs
inc
lods
pop
es
jge
rcrb
or
xchg
inc
pop
mov
std
out
idivb
aam
pop
aas
or
mov
lahf
repnz
mov
lods
jbe
and
adc
and
and
pop
cli
fisubrl
sbb
sbb
loope
jmp
daa
mov
mov
fists
mov
add
aaa
xchg
cwtl
mov
pop
arpl
cmp
aas
jmp
lcall
subl
std
mov
rcrl
and
lret
enter
in
add
test
or
add
mov
sub
leave
aas
outsl
xorb
cmp
test
lds
xchg
cmp
aaa
les
ret
jns
xor
lds
sub
sbb
and
andl
adc
loop
repz
jecxz
dec
out
aas
ret
andb
aaa
dec
mov
clc
mov
xor
lret
aam
stc
mov
cmp
inc
movb
inc
mov
popf
ror
fpatan
cmp
dec
sub
mov
ret
xlat
mov
jge
add
mov
mov
sarb
stc
adc
jbe
mov
dec
ret
mov
ror
sar
mov
jmp
aas
aas
ja
jp
cmp
stc
adc
ja
pop
sub
es
add
pop
mov
rolb
push
inc
pop
lret
lods
jnp
fdivrp
jmp
push
outsl
pusha
hlt
xchg
sub
mov
or
lret
loop
sub
dec
dec
sub
or
adcb
decl
jo
jbe
dec
xor
mov
sbb
mov
rcl
fisubrs
jno
fsubs
mov
mov
or
adc
jmp
or
stc
push
ljmp
inc
out
in
arpl
sbb
mov
and
add
mov
add
dec
and
push
mov
push
adc
jp
xor
lret
fistpll
ljmp
in
pop
mov
pop
test
fildll
cmpsb
xchg
push
jmp
mov
imul
xchg
mov
xchg
pushf
test
mov
das
movsb
mov
cmp
jne
lret
mov
not
push
dec
cmpb
or
inc
cld
mov
bound
lret
ja
aad
test
aaa
pushf
mov
pop
or
es
push
dec
cmpl
popf
jg
fs
adc
lret
fwait
call
bound
sub
hlt
cmpb
mov
pop
das
cld
xor
cli
daa
pushf
push
das
cmp
fldl
rcrl
aad
imull
scas
fisttpll
out
repz
ds
out
dec
mov
mov
mov
pop
sub
cmp
pop
rcrl
xor
adc
sahf
shlb
inc
repz
add
push
xor
fwait
into
push
add
in
mov
add
out
jecxz
inc
pop
bswap
dec
cli
aad
dec
jbe
lcall
xchg
mov
fldcw
test
pop
js
pop
sub
ret
es
add
loope
pop
xchg
push
pop
jo
add
out
rcl
adc
scas
fwait
jbe
pusha
dec
push
cmpsl
jo
adc
ror
imul
iret
pop
pushf
outsl
mov
mov
push
xchg
das
lock
mov
jl
mov
sti
push
sub
dec
lcall
ds
shr
cmp
add
cmp
movsl
in
sub
arpl
xchg
loopne
mov
cld
mov
imull
or
sahf
lcall
xchg
pop
add
mov
cs
sub
jecxz
adc
xchg
outsl
mov
jnp
pop
test
push
sub
jle
jmp
popf
loopne
cld
mov
cmpsb
xor
mov
push
mov
sarl
icebp
ja
cmp
bound
icebp
roll
inc
add
xchg
lods
cmp
push
xor
cmpsb
inc
fcomps
xchg
add
sar
push
push
jp
jle
test
fadd
jno
fcmovu
jae
jle
mov
ret
adc
es
pop
mov
sti
adcl
ret
or
pop
rorl
sbb
adc
fldl
pop
enter
popf
enter
loope
push
shrb
bswap
fsubl
scas
rorb
and
sti
mov
push
cmp
sub
inc
and
inc
jnp
enter
lea
fiaddl
mov
jg,pt
sub
nop
mov
or
pop
fisttpl
lods
pop
in
mov
mov
or
sub
mov
aaa
movb
fldl
test
sbbb
push
lods
mov
push
dec
xchg
xorl
cwtl
inc
xchg
outsb
sbb
or
cli
in
dec
shl
aam
das
test
bound
mov
mov
sbb
mov
dec
mov
popa
mov
jle
jns
dec
mov
lds
xor
mov
aas
push
insl
cmc
pop
sub
sti
pusha
add
mov
out
dec
scas
insl
movsb
fs
xchg
cmp
js
bound
dec
inc
rolb
dec
sbb
pop
push
inc
xchg
cmp
cmovne
mov
pop
repz
fwait
and
or
cwtl
add
les
inc
jmp
or
scas
fs
cmpsb
in
mov
xchg
sub
mov
fiaddl
mov
pop
mov
scas
inc
mov
jmp
stos
and
lret
addr16
xor
pop
ljmp
enter
mov
and
data16
sub
xchg
flds
test
inc
xor
testl
fildll
adc
shrb
sub
xlat
sub
xor
jb
sub
and
jbe
pushf
dec
into
outsl
sti
lock
test
popf
push
fnsave
sahf
out
imul
jg
shl
xchg
mov
in
or
test
repnz
test
push
addr16
cltd
into
ljmp
jl
fidivrs
xchg
fstp
mov
shrl
das
xor
ss
imull
fdivrs
cmp
rol
stos
cmp
jno
fcomps
and
ljmp
iret
ss
adcb
sarb
cli
adc
dec
mov
stos
xchg
ror
sub
in
fwait
jbe
inc
enter
outsb
adc
jbe
ja
mov
aaa
loop
jmp
test
dec
inc
imul
adc
mov
mov
dec
and
sbb
clc
pop
mov
add
fildll
xor
jmp
xchg
int
loope
test
mov
mov
jnp
inc
aam
fsubrl
lea
mov
call
outsb
mov
inc
movl
or
and
pushf
in
adc
push
push
mov
xchg
cli
xor
lahf
adc
pop
arpl
repnz
xchg
pusha
arpl
inc
pop
stc
jns
lock
and
sub
mov
pusha
mov
push
sub
out
addr16
gs
sub
hlt
pop
inc
cs
repnz
out
popa
adc
adc
iret
out
scas
mov
jnp
push
jg
ljmp
jno
fisttps
pusha
dec
mov
pop
dec
xchg
sub
popf
and
mov
in
leave
sub
mov
push
ja
or
dec
repnz
rol
mov
into
inc
cmp
decl
mov
add
lods
adc
jmp
push
inc
scas
and
mov
fs
add
es
add
mov
pop
xor
ss
test
rorl
pop
xchg
and
and
inc
out
push
clc
in
and
push
aad
inc
rcl
sub
sbb
mov
pop
addr16
inc
fistl
lods
dec
pop
mov
sbbb
lea
ss
ss
dec
cs
test
in
sbb
in
cmp
mov
cmp
fiadds
fmuls
test
js
xchg
lea
mov
xchg
in
pop
loopne
cmp
repz
scas
or
or
sti
jno
push
jbe
jg
arpl
sub
loope
incb
sbb
inc
push
cmpsl
jo
mov
dec
push
lods
push
out
test
or
sub
mov
cmp
enter
divl
xchg
or
ud0
pop
xor
inc
sti
in
ljmp
xchg
mov
xchg
and
mov
xchg
and
pop
je
push
data16
cmp
cmp
mov
jg
add
xchg
ret
and
sbb
dec
sub
xchg
or
scas
adc
neg
mov
add
fcomps
push
sub
out
jae
cmp
add
icebp
add
iret
icebp
aas
jg
and
nop
mov
jge
mov
pop
mov
outsl
cmpsl
orb
push
sahf
scas
sbb
dec
sti
in
or
add
sub
push
pop
push
jb,pn
into
rorl
js
insl
inc
incl
cmpl
lods
aas
loopne
or
and
inc
sbb
fdivp
test
xchg
mov
ret
and
test
xchg
popa
roll
push
fsqrt
sub
cmp
loope
push
out
pop
xor
fsts
cli
sbb
mov
sub
pop
sbb
movsb
scas
repz
repnz
mov
mov
addr16
mov
mov
int3
imul
adc
rorl
movl
xor
in
sub
dec
pop
mov
mov
inc
cmp
sub
sbb
cmp
xlat
fsubr
das
jmp
mov
sub
repz
mov
fildl
xchg
inc
jae
mov
cwtl
push
mov
lock
fnstenv
sub
dec
xchg
lahf
pop
lret
cmpsb
shlb
jmp
push
cmp
sbb
js
push
dec
mov
mov
ret
push
sahf
in
cld
repz
mov
notb
jo
pop
pushf
inc
cmp
pop
test
lods
mov
mov
or
cmp
and
or
inc
mov
jl
sbb
js
stc
push
das
jge
ds
push
or
bound
inc
insb
fldcw
or
hlt
imull
icebp
inc
and
adc
out
popa
xor
mov
xor
call
imul
jp
pushf
inc
out
pop
mov
push
jmp
or
in
stos
jnp
xchg
inc
inc
jo
inc
in
add
fsts
add
rolb
test
lahf
ja
cli
adc
or
xor
lret
dec
push
xor
mov
outsb
xor
movsl
hlt
mov
mov
std
cmc
aam
mov
pop
push
or
ljmp
adc
sbbb
pop
out
icebp
test
jl
and
xchg
add
inc
add
nop
icebp
adc
rol
xor
pop
mov
cmp
sbb
clc
les
add
iret
lret
and
test
inc
inc
insl
iret
jecxz
mov
movsb
adc
fs
inc
cmc
ljmp
rclb
es
repnz
loope
or
xor
xchg
push
jb
mov
cwtl
lock
push
inc
push
sub
aam
movsl
cmp
repnz
xor
jbe
lock
int
or
mov
stos
push
adc
and
ja
lahf
stc
xchg
cltd
adc
jbe
add
dec
and
loope
xlat
rorl
call
pop
inc
pop
fwait
mov
mov
dec
test
dec
insl
push
js
and
les
mov
insl
mov
mov
aam
xor
push
subl
and
pop
lods
adcl
sbb
enter
xor
nop
pop
fwait
mov
add
repz
mov
inc
aad
test
lds
dec
mov
mov
mov
repz
dec
orb
leave
lcall
cmpsb
cmp
inc
mov
cli
cmc
and
lds
push
mov
xchg
push
sbb
fxch
fsubrl
jg
in
adc
sbb
scas
xchg
mov
xor
sub
dec
push
into
xor
mov
xor
lcall
bound
or
ss
sbb
dec
and
cmc
pop
loop
xchg
jl
les
shll
mov
pop
jge
stos
or
cs
das
loop
ss
adc
iret
scas
dec
inc
out
add
jb
and
and
test
pop
cmc
mov
popl
in
dec
push
les
push
aam
in
push
xor
mov
adc
in
in
aam
imul
sahf
cwtl
jecxz
cltd
sbb
cmp
stos
add
mov
cs
mov
jmp
out
jnp
fidivs
outsl
mov
mov
arpl
dec
lods
out
cs
sbb
xchg
jns
inc
add
xor
insb
test
jp
add
mull
and
int
nop
in
mov
ficoml
adc
or
inc
lock
fbld
sub
ljmp
mov
fsubrl
inc
std
ficompl
leave
mov
dec
cmp
das
and
ret
push
sbb
xchg
jnp
adc
cmp
xor
inc
lcall
arpl
cwtl
sub
cs
push
mov
pusha
dec
jmp
dec
jo
test
xor
jp
pop
test
xchg
int
push
mov
pop
add
push
mov
out
mov
shll
jb
fnsave
outsl
push
pop
jae
xor
mov
mov
negb
mov
or
mov
lods
xchg
mov
adc
shl
mov
clc
sub
fs
jns
fmull
inc
or
sbb
scas
pop
sub
or
jns
ljmp
sub
sbb
mov
pop
out
insl
das
push
fsubrs
add
cmpsl
or
pop
shl
or
push
lret
addl
jbe
ret
clc
movsb
stos
clc
fcoms
hlt
sti
aam
cmpsl
call
and
stc
or
pop
movb
outsb
loopne
adc
mov
loope
mov
jle
jnp
shlb
push
jbe
pop
lods
jl
fwait
sub
mov
fldenv
lock
rorl
pop
in
xlat
into
mov
stos
adc
xor
scas
dec
cmpsl
jo
ret
or
out
daa
push
jns
cmc
xchg
mov
mov
jno
add
jmp
js
and
xlat
test
std
inc
jge
xor
pop
addr16
fistpl
int
push
jnp
scas
pop
sbb
bound
sub
or
pushf
aas
xchg
leave
mov
fxch
jg
and
or
cmp
adc
xor
or
pop
pop
jge
aad
jle
outsl
out
mov
adcl
lds
mov
ja
add
fwait
test
outsl
ret
fisubrs
ja
jno
pushf
dec
pop
in
add
push
xchg
jbe
xor
mov
jl
push
ds
jns
dec
stos
ja
movsl
jnp
into
push
adc
xor
cmp
out
mov
pop
mov
or
std
push
mov
int
adc
cmpsl
sbb
cs
clc
dec
push
and
arpl
adc
nop
bound
addr16
icebp
cwtl
xchg
mov
dec
mov
sub
or
aaa
scas
adc
mov
repz
jp
dec
in
jle
arpl
fnsave
mov
inc
mov
push
mov
sahf
and
pop
push
jbe
ds
cmpb
xchg
xor
cli
or
adcb
sbb
call
push
stos
shl
subb
shrb
stc
lock
stos
mov
lock
xor
fmull
dec
int3
cs
or
fcompl
push
mov
fcmovnbe
lods
mov
int3
mov
ds
dec
mov
xchg
jb
push
xchg
inc
shrb
aaa
push
mov
sbb
sarl
jmp
jecxz
stos
dec
or
stos
arpl
inc
cmp
inc
sbb
sub
inc
pop
ljmp
xor
lea
int3
in
mov
mov
out
sbb
mov
ficoml
adc
subl
xor
popa
jae
es
jg
adc
push
lcall
loopne
mov
aas
push
pop
ja
push
fildll
adc
sbb
movsl
ljmp
call
cmp
in
cmc
sub
mov
fadd
sub
push
int
je
das
test
xor
out
scas
and
out
xchg
imul
lds
es
out
add
js
add
lods
adc
test
sbb
enter
sub
add
cltd
ds
push
add
test
mov
adc
fdivrl
and
xchg
fiadds
pushf
lds
leave
xorb
mov
jnp
cmp
lret
test
aad
jmp
in
sbbb
pushf
mov
inc
fbstp
xor
cld
push
leave
es
push
sbb
sbb
mov
sahf
in
fistpll
out
or
rcr
mov
pop
pop
cmc
das
call
cwtl
or
inc
sub
fdivrl
repz
mov
mov
jge
ret
or
or
cmp
mov
inc
shlb
in
sub
gs
and
bnd
sbb
add
cmp
mov
sub
push
xor
sbb
inc
xor
cwtl
inc
adc
jns
add
jmp
push
inc
shll
add
mov
std
jle
aam
jno
xlat
pop
scas
jmp
aas
bound
inc
pop
jb
ja
and
nop
pop
out
sbb
mov
sbb
or
pop
xor
fs
pop
cs
sub
lods
dec
sbb
push
xchg
adc
negl
dec
sbb
and
sti
xchg
mov
out
mov
push
pop
sbb
push
in
inc
dec
inc
pop
push
push
xor
jo
imul
xor
jb
sbb
xchg
lds
mov
mov
cmp
push
movsb
jne
sahf
pop
sbb
rorl
test
mov
fmulp
imul
nop
out
outsl
jne
sub
jne
lods
push
sub
jge
fstl
shrl
push
loop
dec
movsl
push
sbb
cld
jg
dec
leave
out
xchg
and
mov
and
in
jge
jg
mov
pusha
jns
nop
test
adc
or
mov
scas
pop
mov
mov
fwait
std
jle
mov
clc
idivb
xchg
mov
ljmp
sarl
xchg
fcmovu
inc
push
int
push
addr16
cmp
and
int
jne
inc
lret
es
push
aad
push
aaa
jge
fisttpl
mov
sbb
fwait
pop
jns
jp
mov
dec
mov
cmp
es
jae
pop
filds
nop
jecxz
out
mov
loopne
jle
into
jle
sub
test
aad
dec
mov
cmpsl
insl
sbb
xchg
in
cld
daa
pushf
mov
inc
lock
fbld
cmc
sub
add
scas
repz
sub
out
fistpl
in
insb
jmp
arpl
adc
dec
lods
jno
int3
jnp
lcall
mov
inc
je
je
sbb
les
cmc
repz
iret
into
arpl
popf
divl
or
mov
pop
cmp
inc
jp
dec
xchg
sbb
bound
sub
push
int
xor
lea
sti
xchg
mov
xchg
stc
push
mov
adc
sub
and
loopne
push
gs
sbb
sub
jns
je
mov
adc
clc
and
push
and
test
data16
mov
xor
stc
in
mov
xchg
movsl
sbb
mov
inc
nop
mov
adc
stc
decl
or
ja
dec
mov
ficomps
xor
mov
push
insb
push
cmpsb
roll
adc
aas
cmp
push
jl
pop
out
es
movsb
divl
mov
xchg
fwait
pop
imul
xor
or
add
add
clc
testl
xchg
mov
xorb
je
stos
jae
xchg
cmp
or
inc
fldcw
orl
push
shl
cwtl
mov
popa
mov
dec
mov
test
out
inc
adc
mov
add
fcomps
ffree
cmpsb
cltd
push
les
xor
imul
repz
or
jne
insb
shlb
in
jp
scas
sbb
sub
sbb
aad
aad
mov
inc
add
movsb
hlt
cwtl
mov
aas
dec
daa
mov
repz
dec
outsl
shrw
inc
or
or
xchg
mov
mov
mov
ljmp
adc
jp
pushf
mov
dec
push
mov
js
xlat
pop
daa
sub
daa
pop
bound
cmp
or
adc
cld
jle
cltd
push
mov
ret
add
rclb
dec
filds
cs
mov
jnp
cmpsb
inc
in
insl
repnz
pop
fbld
jnp
jo
cli
aas
mov
cmp
inc
lods
pop
aad
push
mov
jg
insl
jecxz
jl
das
sahf
ret
add
mov
push
mov
aad
mov
mov
leave
enter
lret
and
jge
adc
ret
mov
loope
jmp
js
loope
and
hlt
int3
inc
mov
mov
mov
lcall
scas
xor
mov
mov
pop
xchg
mov
lods
push
frstor
add
fiadds
jmp
cmp
insb
lea
jnp
testb
mov
lcall
imul
test
or
cs
sub
stos
aam
lret
push
xor
mov
fsubr
inc
hlt
imul
xchg
leave
push
xlat
cmp
inc
mov
loope
jnp
push
push
in
dec
cltd
dec
xor
mov
lods
cmp
clc
inc
aas
jg
cltd
push
fldenv
ljmp
dec
popa
inc
test
jmp
push
fildll
sub
shl
jmp
xchg
push
cmp
xor
cmpsb
loop
cmpsb
pushl
iret
xchg
xchg
mov
pop
pop
mov
fadds
mov
mov
je
out
xor
jl
xchg
xor
mov
cltd
shlb
mov
inc
les
jnp
xor
dec
mov
pop
addr16
std
xor
dec
daa
push
ss
ret
push
cli
call
movl
jle
rolb
stc
jmp
xchg
in
or
dec
test
lahf
add
fldl
xchg
adc
iret
lret
clc
lods
jle
cmp
sarl
xchg
and
pop
pop
lahf
je
mov
sub
sbb
or
xchg
decb
daa
fdivrl
sub
popl
xchg
push
xchg
pop
sbb
fiadds
sbb
mov
or
pop
and
adc
xor
sub
cmpsl
xchg
leave
cmc
fwait
xor
pop
decb
mov
outsl
jbe
cmp
add
mov
mov
cmp
push
cmpb
inc
push
cmp
adcl
inc
pop
mov
inc
jge
fs
mov
jae
fnstcw
xchg
out
int3
pop
cld
push
test
pop
je
cmpl
gs
mov
out
jmp
cmp
dec
inc
mov
push
enter
in
imul
icebp
inc
or
int3
addr16
icebp
jnp
sbbl
lcall
sbb
mov
xchg
pop
andl
cmc
push
popaw
jmp
test
pusha
enter
and
jmp
jecxz
mov
lds
jbe
lret
dec
bound
or
pop
std
leave
insl
mov
sub
mov
sahf
cmp
cmp
mov
clc
arpl
aaa
mov
lods
movsl
mov
out
cld
xor
push
pop
out
lods
les
cmpsl
pushl
jmp
out
js
cli
mov
dec
stos
dec
mov
xorb
test
push
addl
pusha
add
inc
and
cmp
daa
add
push
pop
and
mov
loope
dec
mov
inc
adc
or
scas
jb
out
aad
xchg
mov
mov
mov
xchg
lds
daa
in
sbb
xchg
aaa
cmc
and
das
dec
inc
xor
ret
call
cmp
adc
call
mov
clc
je
dec
rcrb
icebp
sbb
mov
fs
jecxz
insl
repz
or
adc
dec
xchg
xchg
es
mov
or
mov
xor
arpl
shr
in
or
outsb
sbb
lcall
addl
or
roll
addb
pop
inc
adc
aam
js
cld
cld
or
pop
outsl
sbb
mov
jmp
outsb
out
in
int3
cmp
sub
cmc
rcrl
cmp
mov
adc
pop
xchg
rol
pop
and
pop
push
dec
sub
inc
mov
jb
bnd
sub
xchg
jecxz
or
out
mov
stc
cmp
jbe
mov
clc
sbb
dec
cmpsl
cmp
rclb
aad
add
mov
test
inc
dec
lods
lock
or
fstpl
pop
dec
mov
lcall
aaa
push
repnz
fcomps
movb
pushf
in
nop
in
jge
or
jle
push
cltd
mov
mov
in
xchg
mov
imul
push
stc
and
jmp
pop
push
repz
cmp
in
xor
subb
xchg
daa
negb
pop
jl
rorb
test
cs
pop
out
sahf
push
push
cld
xchg
out
push
sub
aaa
mov
bound
adc
xor
sub
sub
xchg
fsubs
jne
mov
int3
test
cld
insb
out
imul
ja
jge
mov
pshufw
icebp
call
cmpsl
jb
mov
enter
cli
je
pop
sub
xlat
outsl
ret
int
pop
jns
out
std
jl
in
inc
pushf
sub
out
out
cmpsb
test
insb
imul
ljmp
inc
aam
faddl
jl
shll
in
stos
cmp
fsubs
cmpsl
sbb
push
adc
movsb
adc
add
mov
hlt
sti
xchg
pushf
aaa
mov
loope
outsb
sub
push
outsb
icebp
rclb
sub
mov
dec
adc
cmpsl
mov
dec
lea
and
mov
cmpl
pop
rolb
bound
cmpsb
add
mov
mov
xor
add
scas
sbb
ret
pop
lret
negl
inc
xor
das
cmp
int
ret
out
xchg
fldl
inc
scas
cmc
arpl
mov
xor
incl
shl
jl
mov
mov
lds
frstor
xchg
dec
ja
rorl
push
dec
out
pop
or
and
rol
ret
ss
lock
fisttpl
mov
out
clc
fcompl
lret
xlat
es
mov
mov
xchg
cmc
inc
xchg
lods
jmp
bound
push
and
mov
push
divl
iret
push
push
xchg
sub
cmpsl
jo
or
jae
in
push
clc
cmp
scas
ljmp
inc
or
or
cmp
sub
cltd
into
mov
in
jmp
dec
mov
mov
xchg
bound
ret
movups
lret
hlt
subb
push
xchg
lock
popf
aam
pop
mov
push
fwait
cs
sbb
daa
cmpb
stos
lods
xor
in
js
sbb
add
daa
aaa
cwtl
pop
scas
push
and
iret
mov
incl
push
adc
flds
sbb
int
in
adc
out
es
testl
repz
or
mov
mov
cmp
or
popa
jge
fcoml
cli
jge
or
dec
cld
push
pop
adc
insl
and
stc
dec
adc
sti
sub
std
mov
stos
and
stc
shrb
std
loopne
dec
stc
test
stc
aas
inc
sub
pop
mov
add
xchg
xchg
dec
stc
and
xlat
movsl
leave
cmp
dec
lcall
fnstcw
adc
test
in
mov
sub
leave
mov
arpl
jno
inc
out
aam
inc
or
and
ds
gs
or
push
push
and
sar
les
mov
jg
out
adc
xchg
xorb
sti
fidivs
inc
add
jnp
push
or
mov
and
lret
repz
xor
pop
xchg
and
inc
jns
cmc
sbb
and
mov
sbb
stc
or
clc
rclb
mov
outsl
in
daa
mov
or
xchg
dec
std
ficompl
mov
not
popa
push
js
xor
fadds
mov
inc
dec
xor
mov
jne
testb
adc
xchg
out
pop
xorl
cmp
xlat
aam
jg
fcomip
pop
sub
dec
dec
push
jnp
hlt
cltd
xchg
adc
fisubs
hlt
divl
mov
das
iret
test
mov
pop
mov
ds
aam
test
out
lock
mov
push
adc
push
mov
stos
cmpsl
cmp
add
std
adc
mov
or
out
data16
dec
sti
dec
fisttps
outsb
xchg
rcr
mov
out
aam
xor
mulb
jle
cs
cld
push
dec
in
fimuls
mov
jne
cwtl
shl
ss
lcall
add
sub
pop
adc
shlb
imul
xchg
adc
push
notb
cmpl
sbb
xchg
push
mov
js
test
push
je
push
inc
fwait
or
dec
mov
dec
xor
pop
xor
lcall
nop
daa
mov
pop
mov
xor
out
lods
sbb
imul
inc
push
ficompl
and
mov
fisubs
xchg
rcrb
arpl
push
rolb
push
sti
mov
rorl
adc
xchg
das
sub
mov
mov
outsb
pusha
jae
push
sbb
addb
in
aas
dec
mov
es
insl
cmp
sahf
pop
in
fisubrl
inc
jp
and
inc
pop
scas
and
sbb
aaa
dec
jecxz
fwait
nop
nop
ljmp
es
jb
dec
xchg
cwtl
sub
mov
daa
mov
push
xchg
push
xorl
push
stos
xchg
mov
mov
cmp
scas
inc
fwait
inc
mov
lock
fwait
test
fdivr
arpl
cmp
mov
mov
out
push
pop
jecxz
mov
sahf
adcl
xor
loopne
test
dec
into
in
cmp
out
vpminsw
push
jmp
out
pop
add
pop
pop
test
xchg
cld
pop
pop
sbb
idiv
sbb
pop
sub
out
ret
data16
sub
sub
add
mov
xor
jne
mov
sub
cwtl
dec
jg
pushf
mov
movsb
sbb
call
sub
or
sub
fcmove
lea
movsl
insl
jae
xor
jno
xlat
cli
idiv
je
add
inc
test
idiv
shlb
sti
push
test
loop
lahf
mov
cs
pop
push
insb
xor
dec
xchg
sbb
aaa
mov
pop
fsubs
dec
icebp
or
jp
les
lahf
outsb
mov
test
dec
inc
inc
inc
sahf
pop
or
ss
push
mov
cmc
xchg
jbe
repz
les
sahf
add
inc
stc
popa
out
sub
sub
arpl
push
daa
mov
mov
xchg
mov
insl
insb
jmp
dec
popa
and
insb
pop
push
push
fistps
adc
adc
or
es
and
scas
mov
pop
push
xlat
xor
insl
jmp
pusha
mov
sahf
clc
in
fistpll
xor
sbbl
or
or
push
mov
outsl
add
and
push
aas
ss
shr
jmp
adc
and
jl
inc
les
mov
xor
push
xchg
hlt
insl
inc
pushf
add
jo
cs
gs
aam
call
movl
xor
jb
stos
aam
popw
add
pop
xchg
xchg
mov
inc
popf
mov
push
outsb
jae
mov
mov
nop
out
or
cmpsb
add
inc
and
jae
xchg
cmpsb
push
xchg
or
jecxz
inc
lea
aam
sub
xor
add
cmp
cltd
pop
and
xchg
mov
cwtl
cmp
xor
ss
sub
mov
xor
pushf
sbb
stc
adc
ljmp
imul
addb
cwtl
xor
push
loopne
aad
jmp
repz
sbb
inc
movsl
adc
cmp
fildll
lcall
mov
mov
lock
pop
pop
pop
dec
pop
cmpsb
dec
pop
sub
inc
dec
push
shll
or
mov
mov
leave
rcr
inc
lret
adc
pop
shrb
mov
mov
or
mov
adc
mov
aad
or
insb
push
shr
push
sub
mov
mov
adc
mov
jmp
dec
or
into
pop
push
mov
jnp
inc
add
bound
jbe
mov
arpl
xor
or
fs
ret
cmpl
cwtl
xorl
sub
loope
mov
inc
mov
inc
pop
enter
mov
add
jmp
cs
cmc
out
pop
and
push
and
js
aad
popa
xor
mov
or
mov
cmpsl
in
or
nop
add
loope
dec
mov
lea
imul
dec
push
negb
daa
jl
imul
xor
inc
or
jb
sbb
cmp
jle
dec
bound
test
fcompl
pop
mov
mov
inc
ds
cmp
lods
sub
ret
lea
call
sub
cli
push
test
adc
scas
movsb
into
mov
cmpl
mov
push
add
cmp
jecxz
daa
sbb
out
and
fldl
add
stos
fdivr
xchg
adc
stos
mov
out
and
lds
jno
xor
in
in
jnp
rcrl
jbe
scas
jmp
and
add
sub
push
pop
push
shlb
push
jmp
push
jl
stos
add
cmpsl
fistl
arpl
aam
jbe
and
mov
pop
sbb
in
push
aaa
pop
and
add
add
dec
movsb
jnp
cs
mov
or
jbe
mov
loope
jae
jge
sbb
loopne
rolb
add
scas
pop
cmp
dec
jno
aas
ret
cmp
daa
into
pop
mov
add
pop
out
adc
sti
push
out
dec
enter
leave
inc
sub
lds
lcall
cmpsl
adc
test
mov
sbb
xor
inc
dec
ret
jp
lock
cmp
jle
cwtl
push
add
out
push
fld
jb
inc
sub
movsb
pushf
jno
dec
add
adc
adc
stos
lahf
dec
or
cmpsl
cmp
add
stc
pop
mov
sbb
mov
lods
pop
dec
sub
cmp
testl
and
js
aam
test
pusha
cmp
jne
add
data16
test
repz
out
or
mov
mov
iret
paddusw
cmc
stos
mov
lcall
xchg
pop
inc
pusha
and
jae
aas
mov
pop
call
out
shll
mov
inc
pop
jp
or
sbb
xchg
mov
gs
stc
and
or
lcall
or
push
jp
outsl
dec
ret
jo
fwait
pop
mov
push
lret
mov
pop
imul
loop
ret
ret
popa
mov
imul
incb
sbb
adc
sahf
xchg
fildl
cmp
hlt
push
jle
and
sub
leave
or
inc
jecxz
and
push
out
in
rcll
fstps
mov
mov
mov
daa
sub
mov
cli
inc
lock
test
sub
cmc
or
xchg
pop
sbb
mov
insb
repz
fcmovnbe
pop
mov
ds
push
mov
cltd
fistps
adc
andl
xchg
imul
cmpsb
imul
popa
lods
inc
mov
pop
mov
lcall
repnz
stos
mov
icebp
es
mov
scas
outsb
mov
mov
adc
add
cmp
loop
jmp
mov
jbe
pop
push
sub
cmpsb
bound
inc
push
jp
imul
test
inc
mov
xchg
cltd
fidivl
leave
cs
adc
adc
mov
mov
push
cmp
push
mov
dec
jno
mov
xor
pop
push
inc
shlb
flds
testl
and
call
mov
add
push
pushf
jb
or
jbe
movsl
add
pop
sar
leave
movsb
shll
xchg
jmp
push
pop
mov
loopne
gs
sbb
imul
cmpsb
in
mov
cmp
push
cld
aad
mov
push
jge
divb
adc
or
sub
ss
lcall
xchg
sub
subb
mov
jmp
cmc
in
xchg
sarl
lods
lods
fdivrs
mov
mov
std
iret
inc
cmp
shll
dec
inc
imul
mov
dec
lahf
cld
fcmovbe
mov
loopne
out
repnz
sbb
pop
test
pop
fwait
adc
mov
popf
or
add
stos
stos
xchg
insl
jmp
lds
int3
mov
xor
cmp
adc
jns
and
fmul
sbb
mov
insl
xor
adc
xorl
out
scas
and
xor
sti
aaa
push
popa
test
pop
xor
repz
pop
adc
xchg
cmp
cs
inc
mov
ret
shrb
sarl
test
std
mov
fistpll
adc
dec
shlb
jle
mov
testb
daa
pop
cwtl
xor
dec
lahf
adc
mov
gs
test
jge
jmp
rorl
dec
and
jne
sub
mov
and
push
popf
xor
clc
addl
adc
jae
sub
aaa
outsl
sbb
outsl
xchg
mov
push
pop
insb
mov
insb
fiadds
shl
out
and
cmp
scas
jo
fstps
icebp
cli
nop
mov
sbb
movsb
push
rcrl
shll
sbb
mov
mov
test
xchg
imul
xor
jecxz
push
xchg
mov
mov
lock
scas
sbb
jmp
push
mov
and
dec
mov
popa
fwait
cmc
js
das
subl
cld
push
fucom
lds
jbe
mov
lret
adc
push
cmp
pop
loop
cmp
out
mov
dec
mov
cli
fwait
sub
jo
mov
loop
loope
mov
and
sbb
jmp
jg
popa
sub
out
imul
jb
leave
fdiv
jle
mov
mov
mov
dec
shl
addr16
rclb
mov
and
mov
into
lock
mov
xchg
cwtl
adc
sub
xchg
test
aad
cs
dec
cmpsb
or
add
fisttpl
xor
cltd
push
sbb
pop
dec
negl
mov
movsb
sbb
push
mov
cmpb
iret
or
mov
push
nop
sub
nop
xor
test
popa
jb
fwait
insl
inc
dec
xor
jg
cmp
arpl
mov
xchg
scas
lcall
push
das
int
cmp
fbstp
int
pop
ja
sub
lret
cmpsl
rolb
lods
lret
adc
mov
inc
xor
subb
rcrb
cmp
loop
call
pop
loope
in
mov
mov
adc
mov
jnp
popf
mov
pusha
mov
cmp
js
ret
cmp
dec
cmp
mov
cmpsb
xchg
ss
std
jne
xorb
clc
mov
inc
xor
add
sbb
dec
sbb
mov
and
mov
sbb
cmc
jae
ss
pop
test
mov
leave
xor
jmp
ret
mov
mov
roll
pop
dec
mov
fwait
rorb
aaa
aam
clc
ret
or
lret
test
sbb
pop
push
sbb
stos
in
inc
and
pop
mov
or
fiaddl
mov
movb
mov
bound
xchg
adc
ficoml
leave
pop
lea
leave
push
xlat
jmp
mov
stos
insb
or
mov
pusha
push
clc
inc
adc
testb
push
dec
gs
mov
add
fwait
daa
dec
leave
xlat
ss
pusha
jmp
cmc
add
ljmp
jnp
loop
loope
sahf
ljmp
daa
in
testb
jl
or
jne
cs
pop
inc
iret
jae
cmp
lahf
pop
mov
mov
in
push
scas
sub
bndldx
and
aas
andl
jae
test
or
push
pop
push
fisttps
vmovdqa
jae
jmp
call
dec
stos
shl
enter
lret
cli
pop
lahf
enter
add
outsb
pushf
dec
dec
push
shl
xor
push
xchg
scas
add
hlt
ljmp
jg
neg
push
inc
lea
sbb
or
in
int3
es
inc
gs
push
mov
leave
cltd
in
stos
shrl
and
mov
sbb
negb
enter
mov
repz
mov
pop
in
mov
push
scas
sbb
les
push
pop
push
mov
or
addl
and
cmp
fwait
cwtl
test
mov
cmp
filds
adc
js
dec
subl
lcall
ds
dec
sub
call
pop
and
jl
cltd
mov
out
movsb
fiadds
jae
clc
cltd
gs
outsl
sbb
mov
dec
fldl
data16
dec
jbe
aas
clc
cmpsb
lcall
dec
push
aad
mov
mov
mov
shrl
xchg
jl
or
or
cmpsl
or
sbb
inc
daa
test
xchg
repz
inc
xor
xchg
es
jb
jl
das
push
inc
sbb
stos
mov
sbb
lret
xor
or
enter
pusha
push
cwtl
xlat
jae
jg
sub
and
cmp
or
push
sub
stc
or
and
add
mov
add
adc
rolb
push
pop
sub
jecxz
sub
inc
sarb
mov
movsl
cmp
stc
or
and
imul
repz
mov
shl
sbb
ffreep
icebp
push
cmp
xor
jbe
lea
cmp
xor
xor
adc
pop
leave
xchg
lret
mov
inc
aam
scas
aad
add
loope
lea
pop
ljmp
std
and
adc
push
or
sbb
cmp
loopne
daa
fldl
jns
inc
xadd
mov
je
inc
andl
inc
lret
dec
test
push
stos
jbe
push
js
aad
pop
jne
imul
iret
sub
sub
jnp
int3
int3
pslld
fnstsw
test
sub
jnp
sub
jmp
cs
je
insl
inc
or
clc
add
mov
jmp
adc
sti
mov
ljmp
or
imul
xchg
testb
out
testl
loope
pop
rcrb
lret
or
adc
std
ljmp
dec
adc
mov
mov
xchg
push
inc
repnz
sbbl
mov
lret
sbb
push
jo
pop
push
pop
loop
xchg
sbb
gs
lcall
shlb
lea
adc
ret
mov
pop
pusha
or
cmp
jmp
or
xor
scas
outsb
cltd
dec
cmpb
in
test
in
cmp
ret
lds
mov
dec
pop
mov
push
push
sbb
mov
or
jns
xchg
out
jbe
xchg
and
push
lods
fimull
das
jl
and
jnp
and
or
or
jg
xchg
je
push
arpl
lahf
mov
sub
add
xchg
mov
call
mov
mov
test
repz
or
dec
cwtl
stc
mov
lods
out
push
inc
aas
pop
add
jge
pop
or
fdivp
mov
loopne
add
inc
lahf
cmp
dec
pop
mov
cmp
in
jne
lea
lret
jecxz
or
push
inc
adcb
mov
push
int
mov
mov
cs
jg
flds
pop
vpshld
test
fidivs
cmc
fs
setg
icebp
out
sarb
shrb
mov
cmp
sub
and
xchg
mov
xchg
stos
adc
jae
jb
dec
data16
xor
sbb
push
add
shlb
push
cmp
leave
repnz
mov
or
add
sub
adc
in
xor
aam
and
mov
stc
mov
push
jl
pop
scas
cmp
cmp
jae
pop
or
sahf
mov
or
jae
xor
pop
cmc
mov
lahf
xchg
cmp
ja
cmp
mov
jle
andb
and
sbb
add
cmpsl
jbe
mov
decb
jp
fwait
pop
cmp
into
sub
shrb
data16
ret
popa
inc
int
mov
mulb
gs
pop
jmp
cwtl
jge
mov
les
push
cmpsb
push
xor
jl
lods
xor
xor
jae
cmp
sbb
mov
mov
push
fidivrs
adc
mov
adc
ret
push
or
inc
mov
push
ljmp
sub
push
xor
adc
imul
push
mov
mov
jae
stc
xchg
pop
and
js
sbb
inc
mov
mov
jno
mov
dec
xor
out
outsb
pop
sbbl
inc
pop
fldt
push
jle
clc
jmp
pop
push
dec
out
jl
test
rorl
pop
cmp
js
dec
movsb
in
das
outsl
mov
adc
stc
mov
sbb
or
enter
leave
mov
inc
adc
mov
test
cmp
mov
pop
out
add
jne
cmpsl
addr16
pop
test
jbe
aaa
mov
mov
mov
inc
adc
jp
hlt
movsl
insl
push
mov
inc
mov
das
mov
mov
sahf
jle
fdivl
test
pop
push
dec
ljmp
pop
mov
dec
bound
lds
mov
lahf
cmp
or
xor
dec
and
mov
inc
test
jg
loop
inc
sbb
pop
xchg
sbb
mov
stos
or
add
push
push
lea
les
xlat
lods
push
pop
aaa
xchg
sub
xchg
es
test
idivb
push
mov
mov
insb
lret
fs
addr16
popa
jmp
adcb
mov
jecxz
xchg
mov
xor
and
cmp
in
loop
sarb
pop
cmpsl
fisubs
sub
lds
xchg
lret
fbld
inc
mov
inc
mov
aad
rclb
out
nop
imul
fisttpll
movsl
fdivs
xor
cmp
les
aaa
imul
sbb
mov
mov
arpl
lcall
sbb
mov
lcall
cmp
outsb
stc
fwait
shll
subl
xor
mov
hlt
push
xchg
xor
cmp
stc
cmp
inc
or
mov
xor
mov
inc
sbb
xor
jb
push
pusha
push
xor
mov
mov
mov
jmp
aaa
push
dec
fnstenv
inc
imul
lret
push
sbb
adc
mov
push
mov
add
test
add
outsb
ret
cld
std
stc
roll
fs
lds
pop
add
rorl
jge
mov
xor
pusha
cmc
lret
test
sub
mov
int
mov
sub
mov
cwtl
sbb
push
scas
out
xchg
rclb
sbb
push
out
add
lea
mov
daa
aad
popf
push
insb
pop
sti
mov
pop
insb
leave
lock
mov
jbe
inc
cmp
enter
fldl
push
pop
adc
out
mov
repz
sahf
mov
pop
add
sbb
mov
mov
out
test
fsubrp
mov
push
pop
es
jo
pop
sbb
leave
fstpt
lds
pop
into
lahf
movsl
pop
cmp
lcall
ret
mov
iret
popf
repnz
jo
aaa
mov
cmp
popf
shl
cmp
subl
icebp
mov
cmp
lods
jp
adc
or
insb
cmc
in
hlt
iret
fs
enter
xchg
cmp
arpl
mov
leave
arpl
inc
adc
fsts
outsl
mov
dec
gs
pusha
mov
outsl
xor
jo
xchg
ljmp
packsswb
test
and
sbb
lods
mov
mov
test
jno
cmpsb
jnp
lcall
sub
gs
adc
pop
xchg
dec
inc
jne
cld
xor
push
cmc
cli
std
pop
int
bound
mov
mov
inc
into
push
std
and
jb
cmp
loopne
ret
pop
loope
cmp
pop
jg
push
adc
mov
popf
cmp
mov
rcll
lods
mov
jecxz
sub
add
and
adc
jo
pushf
paddsw
and
stos
idivl
jge
loopne
pop
cmp
and
add
rcrl
add
xchg
sub
cmpsb
mov
mov
dec
or
jmp
xlat
mov
fs
gs
adc
ja
iret
test
outsb
sti
dec
movsl
xor
in
lods
mov
pop
sbb
pop
ss
gs
pop
leave
dec
js
nop
imul
fidivrs
sti
mov
jnp
xor
or
and
jmp
cmc
push
mov
sub
sbb
movsb
sbb
jle
mov
test
adc
adc
or
dec
adcb
sub
sbb
adc
loope
fistpll
cmp
push
sbb
mulb
inc
imul
jne
dec
test
push
and
imul
xor
inc
jl
push
cmp
xor
lahf
inc
or
out
mov
test
cmp
adc
clc
pop
xchg
mov
or
jno
movsl
cmpsl
orb
cwtl
rorb
es
hlt
pusha
mov
push
pop
cmp
mov
jnp
xchg
repz
mov
push
les
pushf
xchg
and
ljmp
xor
stos
inc
jae
xchg
rep
or
lret
pop
movsl
pushf
pop
mov
iret
test
sahf
inc
fdivrs
push
xchg
inc
insl
adc
icebp
and
inc
aaa
adc
loop
push
pop
jle
es
mov
orl
vdivpd
out
notb
insl
xor
les
imul
pop
xor
push
or
adc
xlat
sub
jno
out
sbb
pushf
lret
inc
test
mov
mov
ret
fwait
sahf
sub
or
sbb
pop
ja
outsb
mov
jnp
or
idivl
mov
push
sbb
jmp
or
shrb
shrl
fcomp
or
cmp
sbb
fdivrl
ds
sub
cmpsl
arpl
and
or
mov
cmp
xchg
mov
icebp
cmp
les
sub
loope
dec
or
or
dec
xchg
mov
lcall
xchg
cmp
push
fsubl
in
sahf
xchg
dec
adc
pop
mov
adc
stos
add
jge
sub
xor
das
xor
loope
or
mov
cmp
inc
pop
sbb
push
lods
int
popf
mov
aas
shll
jbe
sbb
pusha
iret
xor
lods
imul
adc
mov
jb
sbb
sbb
dec
shr
inc
adc
and
jp
jp
mov
test
push
dec
dec
out
xor
push
xorb
pop
mov
ja
pop
cltd
mov
test
push
jnp
lea
xchg
xor
mov
int
inc
shlb
test
push
mov
and
shrl
out
cwtl
test
pop
les
jmp
sbb
std
inc
cmp
push
mov
push
pusha
sar
adc
cli
inc
aaa
dec
addb
inc
lcall
fstpl
enter
add
jp
jne
adc
rolb
adc
div
push
adc
dec
push
cmc
je
out
fs
xchg
cmc
mov
or
js
sub
out
sbb
gs
inc
push
pop
xor
and
xchg
fldcw
movsl
push
or
arpl
test
mov
popf
lds
and
leave
xchg
xchg
adc
dec
test
pop
pop
loope
adc
push
inc
push
push
mov
adc
xchg
data16
lcall
test
push
test
jne
and
sub
fisttpll
xchg
jns
push
sbb
mov
aam
in
fcoms
cwtl
push
mov
mov
mov
sbb
jle
add
ret
out
cmp
loope
sub
lods
inc
adcb
adc
cltd
cltd
adc
or
adc
and
loopne
daa
push
jl
subl
jbe
aas
sub
xor
cmp
inc
pop
jl
mov
out
leave
aad
mov
aas
filds
mov
jnp
or
sti
adc
jb
cmpsl
pop
ror
or
add
movsb
pop
xchg
out
pushf
mov
sarb
lock
inc
xchg
mov
fildl
test
mov
cmpxchg
movsb
gs
sbb
add
inc
add
js
push
stos
ds
sbb
loope
testb
test
xchg
mov
gs
fcmovnu
fmulp
adc
test
pusha
shlb
and
mov
jb
push
push
cld
or
jae
fwait
xchg
stos
mov
jo
idivl
pop
lods
xchg
mov
daa
int3
add
mov
std
mov
in
les
jg
in
in
or
aaa
push
mov
add
jne
and
repz
and
sbb
test
or
test
pop
in
lock
inc
xor
fst
jl
xor
mov
sbb
push
mov
scas
jbe
std
add
lcall
mov
pop
mov
cmp
jle
sub
ljmp
mov
inc
mov
or
jb
mov
rcrb
leave
pushf
inc
call
je
ljmp
sub
fstpl
inc
sub
inc
cmp
cmpsl
pop
mov
xor
cmp
mov
movsl
outsb
push
or
outsb
hlt
int3
aas
les
ljmp
mov
repz
pop
mov
add
ja
pop
lcall
dec
gs
je
rcrl
insl
xchg
std
int
bound
sub
dec
and
pop
lods
pop
pop
test
jmp
inc
fistl
fstl
xchg
pop
add
in
hlt
clc
std
rorb
sbb
jle
add
add
inc
div
push
sbb
arpl
jp
pop
cli
xor
cmp
leave
pop
push
mov
sub
mov
xor
shll
mov
or
add
adc
cli
sahf
or
pop
popf
fstl
leave
cltd
ja
leave
rorl
mov
mov
mov
ret
cs
popf
cmc
jge
ja
lahf
into
fwait
mov
jnp
sbb
test
cltd
orl
aaa
or
cmpb
stos
mov
sub
sbb
mov
lock
pop
pop
in
xor
fdivl
adc
xchg
pop
loopne
outsl
dec
scas
or
mov
cmp
fs
aad
sti
into
jge
nop
sti
cltd
pop
or
adc
push
leave
cwtl
lods
fmuls
mov
cli
out
and
xchg
loop
sbb
negl
in
jle
mov
mov
xor
ret
imul
cs
repz
and
fmull
ret
ljmp
and
jo
scas
addr16
mov
xor
fisttpl
adc
cmp
sub
or
push
xchg
mov
lcall
gs
bound
or
jb
imul
in
cmp
in
jmp
sub
mov
dec
sbb
mov
std
xor
cmp
jne
push
aas
jae
mov
mov
sub
call
movsl
fcmovu
or
xor
ja
ds
push
inc
pop
add
lods
cmp
mov
gs
sub
push
ret
jg
xor
cmpsb
xor
outsb
je
xor
popa
test
sahf
nop
xlat
mov
loope
jecxz
cmp
test
rcrl
xchg
jb
out
cmpsl
jge
mov
ficoml
mov
dec
bound
loop
flds
adcb
lcall
std
iret
push
or
add
mov
xchg
mov
push
cmp
mov
mov
inc
push
xor
mov
push
xor
negl
repnz
sub
outsl
xchg
xor
scas
lret
and
push
xchg
shlb
dec
in
mov
loope
les
divl
ljmp
mov
fists
or
fists
bound
sub
nop
lahf
sbb
mov
dec
aaa
push
sti
mov
aas
fbstp
adc
movsb
mov
lds
loop
adc
pop
pop
fcmovne
test
in
ret
jp
xchg
mov
stos
out
or
or
or
cmp
pop
mov
jp
enter
xor
loop
out
mov
std
fstpt
outsl
mov
sbb
adc
loope
loopne
jg
mov
or
inc
and
cli
into
inc
push
imul
inc
push
pop
sbb
push
push
idivb
jae
xor
mov
xchg
jmp
xor
add
daa
pop
into
mov
rorb
test
or
and
aad
in
dec
xchg
add
mov
push
aad
sub
enter
cmpsl
add
dec
pop
push
movsl
push
sarl
pop
and
popf
xlat
or
cmp
add
or
add
psubusw
lods
dec
xchg
xor
into
sub
sub
dec
in
or
pop
push
outsl
xchg
aaa
aas
pop
arpl
std
push
lahf
in
lcall
imul
pop
xchg
push
cmp
pushf
inc
adc
enter
insl
out
mov
xchg
mov
inc
push
mov
lock
dec
xor
mov
mov
and
mov
lret
xchg
sub
or
or
ds
xchg
xor
sub
inc
data16
pop
mov
int
push
sbb
mov
arpl
push
rcrb
icebp
adc
dec
pop
dec
aad
ljmp
sbb
mov
jle
mov
pop
int3
stos
mov
pop
pop
mov
inc
stos
jnp
sbb
jb
pushf
popf
scas
pop
xchg
pop
arpl
push
cmp
or
scas
mov
dec
push
or
dec
scas
jmp
pop
push
loop
cmpsl
popf
aad
lahf
cmp
jmp
or
hlt
or
adcl
inc
jnp
nop
test
pusha
rolb
lock
dec
pop
cmp
cmc
cmp
cmpsb
mov
in
mov
imul
add
add
sub
imul
inc
std
lds
inc
gs
rcrl
jns
inc
test
lods
les
out
adc
arpl
gs
adc
pop
jge
adc
sbb
rolb
mov
lds
outsl
addr16
loope
movsl
std
mov
mov
clc
daa
fwait
test
push
sbb
enter
inc
clc
mov
jae
int
daa
push
aad
dec
test
mov
neg
rcrl
fsubrs
insl
mov
rclb
lahf
movsl
push
outsl
push
sbb
mov
pop
bound
dec
in
inc
sub
pop
push
push
jge
cmp
popf
les
or
jno
pop
ficomps
popf
outsb
cld
xchg
mov
mov
ret
inc
inc
add
mov
dec
push
adc
aas
std
xchg
pop
push
outsb
lods
movsb
fwait
push
out
fs
xchg
or
mov
push
jns
jne
sahf
sti
cs
jl
je
into
das
pop
add
inc
pop
push
inc
pop
jae
jmp
push
cmpsl
fmul
adc
mov
pop
pop
jno
shlb
mov
popf
xchg
dec
mov
jnp
movsb
xor
mov
cmpsb
movsl
iret
mov
dec
cmp
out
or
mov
inc
pop
out
aas
inc
push
inc
popf
xor
mov
ss
adc
jbe
aad
rcrb
loopne
mov
imul
fwait
lds
and
sbb
push
push
lods
jecxz
stc
sbb
sub
aam
scas
insl
loop
leave
dec
jae
add
addr16
shll
pushf
daa
scas
shr
jnp
leave
mov
inc
in
dec
ja
test
pushf
inc
popa
orl
scas
inc
add
jb
pusha
adc
push
lock
pop
jb
gs
adc
cmp
xor
dec
fsts
in
xchg
stc
or
mov
xchg
adc
fs
jl
jno
xor
mov
pop
add
jp
repnz
in
and
clc
ret
pop
into
in
mov
sub
add
mov
fisttpll
cltd
cmpl
inc
jo
xor
fstpl
lods
dec
enter
push
and
stos
cld
inc
add
lods
inc
daa
adc
dec
inc
leave
bound
jns
pushf
lret
add
mov
enter
out
ja
inc
fistpll
shlb
mov
mov
jle
frstor
outsb
out
std
leave
sbb
sti
xchg
repz
test
lock
push
cmpsb
test
andl
cmp
scas
movsl
inc
or
gs
sbb
sbb
ret
call
adc
insb
mov
or
jae
and
adc
xchg
movsb
cmpl
cli
push
and
mov
movsl
sbb
xlat
orb
fnsave
jg
sbb
mov
outsb
out
dec
out
dec
adc
push
pop
sub
push
shlb
scas
sub
dec
lods
mov
jecxz
push
nop
add
clc
pop
js
lahf
insl
mov
inc
std
rclb
xor
xorb
test
or
std
jmp
daa
inc
test
mov
mov
cwtl
mov
dec
push
inc
xchg
rcl
pusha
lret
addr16
dec
jne
mov
cmpb
xchg
jmp
xlat
push
roll
pop
insl
add
mov
xchg
mov
out
repnz
lods
push
mov
mov
dec
pop
outsb
and
imul
ret
icebp
frstor
mov
inc
mov
es
cld
push
pop
test
imul
add
mov
ret
xlat
fdivr
test
mov
jmp
aaa
dec
sbb
lahf
out
and
sbb
push
insl
push
lret
movsb
out
into
mov
inc
jge
push
test
adc
mov
leave
jae
jg
ljmp
js
adc
cwtd
push
inc
imul
clc
in
push
and
stos
gs
inc
out
mov
cmp
or
mov
js
call
xchg
cmc
mov
adc
ror
jg
jnp
or
xor
clc
or
xor
loop
int3
mov
pop
ret
add
test
mov
pop
jb
cmpsl
sahf
mov
dec
add
ss
clc
or
jl
push
mov
xor
leave
jg
stos
xchg
adc
mov
cmp
test
xchg
icebp
jp
and
xor
imulb
fcmovu
mov
dec
pop
dec
dec
sarb
adc
cmp
cwtl
jo
cmp
int3
or
mov
push
inc
push
std
mov
sbb
push
jae
mov
xchg
inc
sarl
jmp
xchg
lcall
fwait
sub
cld
mov
add
fsts
dec
xchg
pushf
in
adc
xchg
outsb
cmpsl
cwtl
jmp
push
movsl
xor
bound
jb
jae
mov
mov
ficoms
imul
mov
addb
in
jmp
sbb
mov
jns
or
xchg
popf
jmp
push
sub
rcr
xchg
or
inc
or
dec
rcrl
mov
rcrl
mov
sbb
sbb
cs
xchg
cmpsb
test
sahf
push
mov
stos
arpl
aaa
sub
jnp
or
xor
movl
cmp
mov
or
ja
xor
stc
mov
dec
lods
mov
xor
sub
mov
adc
fcomps
sahf
adc
int3
es
movb
fisubrs
lea
or
mov
xor
testb
push
pop
mov
call
and
fldt
mov
sub
mov
jbe
mov
into
fwait
pop
mov
ds
addr16
xor
das
mov
cmpsb
mov
jge
int3
xchg
push
lahf
pop
mov
xchg
push
mov
out
test
cmp
faddl
aaa
push
cmp
cmpsl
adc
int3
lods
or
je
movsl
jnp,pt
mov
pop
pop
in
int
loope
fs
mov
leave
cli
mov
popf
hlt
loopne
sub
add
mov
adc
sahf
jno
in
je
mov
sbb
enter
fstps
test
mov
mov
xchg
das
xchg
sbb
sbb
jo
jge
and
sub
mov
subl
cmp
cmc
inc
fwait
bound
pop
lods
data16
pop
hlt
ljmp
ja
fcmovnu
dec
aaa
or
mov
mov
adc
dec
ficomps
neg
stos
jmp
movsb
xchg
dec
addr16
pop
jb
scas
sbb
cld
jns
iret
adc
mov
mov
rcll
cmp
dec
and
cmp
cld
outsb
fmul
ljmp
shll
sbb
test
or
into
div
dec
adc
push
test
sbb
jbe
xchg
mov
ret
cld
mov
inc
adc
mov
out
nop
mov
test
sub
ljmp
xor
jl
xchg
shll
addr16
add
pop
jno
in
fidivs
or
sbb
fwait
cmp
dec
stos
movsb
dec
mov
arpl
push
dec
stc
push
cs
add
jb
mov
ret
sub
test
mov
and
and
insb
mov
mov
sbb
mov
dec
push
pop
fsubs
jecxz
mov
jge
mov
push
adc
jo
mov
arpl
xchg
xlat
aad
sti
mov
enter
adc
xlat
bound
test
xchg
idivl
mov
lahf
sarl
cmp
dec
outsb
lds
mov
aad
cld
cld
cs
jmp
or
inc
sbb
sub
and
inc
sub
xor
cwtl
cmp
xchg
mov
push
inc
cs
data16
repz
xor
lret
push
lods
lret
jb
sbb
not
les
ret
xor
stos
ljmp
push
sbb
ss
in
mov
xchg
mov
sub
imul
pop
pcmpeqb
sbb
and
pushf
dec
jns
jne
pop
cli
push
xchg
clc
dec
lcall
xchg
mov
push
fbstp
mov
xchg
or
std
mov
mov
sbb
mov
mov
cwtl
xor
cmpsl
in
dec
cwtl
fwait
adc
in
jle
mov
rcrb
roll
shlb
lock
in
mov
rcll
movsl
xchg
hlt
popf
movsb
js
xor
or
cmp
repnz
pop
mov
subb
push
repz
loop
xchg
add
jnp
dec
dec
fidivrs
nop
aad
add
xchg
loopne
pop
fs
mov
outsb
push
scas
ficompl
lcall
sbb
push
mov
sbb
cmpsl
cmp
lock
shrl
adc
mov
and
sbb
mov
xchg
lret
lret
fstl
cmp
enter
in
incb
jb
jg
xlat
out
loopew
les
sbb
test
out
dec
pop
add
aam
loopne
cwtl
jge
and
jge
or
js
cmp
bound
ljmp
mov
imul
test
push
fldt
or
fisubrl
shld
adc
out
movsl
push
mov
cmpl
mov
and
mov
and
sub
jae
lods
or
roll
cltd
add
cmp
cmp
add
aam
daa
lods
aas
push
push
sbb
test
cmp
aas
xchg
add
dec
cli
xchg
adc
int
repnz
jl
mov
loop
add
mov
sub
push
ret
pop
outsb
sahf
or
and
xchg
insb
lahf
insl
shr
fnstsw
into
xor
enter
lahf
adc
inc
rorl
mov
push
push
fwait
or
dec
jno
inc
leave
mov
and
add
fldcw
in
xor
inc
mov
xlat
and
dec
fistps
sbb
and
fldl
fs
cmpsb
xchg
sbb
int3
dec
ret
aad
test
jp
xor
sbb
fcoms
lcall
fsts
test
dec
lcall
sub
jmp
xor
cmp
dec
lea
sbb
lods
imul
movsb
and
pushf
pop
imul
jp
sahf
push
mov
mov
loop
push
ficompl
sub
arpl
ret
jecxz
or
roll
out
ficoms
and
cli
mov
pop
jns
add
je
push
xor
and
lods
out
shrb
rolb
sbb
in
cli
cli
push
jb
dec
rolb
cmpsl
lds
loopne
stos
cld
aad
dec
addb
stos
ljmp
xor
and
jge
xchg
xchg
imul
add
mov
push
lret
mov
mov
test
jb
xor
jmp
inc
cmp
lcall
jns
sbb
and
addr16
rolb
in
jns
jns
pop
and
cmp
mov
mov
in
aas
xor
xor
xchg
mov
ja
clc
iret
push
inc
test
mov
inc
and
bound
ljmp
imul
or
xchg
fcomip
cmp
xchg
xor
sub
mov
inc
pop
cltd
xchg
xchg
lret
push
mov
pop
je
pushf
jmp
scas
cmp
stc
jg
mov
insl
add
stos
push
jmp
mov
mov
dec
popf
lods
push
pop
cli
cmc
push
fimull
mov
andb
adc
ljmp
pushf
pop
jo
xor
mov
negb
mulb
pop
cmp
add
jno
xorl
stos
pop
push
in
in
jo
xor
dec
jnp
xlat
adc
mov
mov
xor
stc
xchg
repnz
scas
jnp
lods
jo
jp
pop
mov
repz
mov
and
adc
mov
sbb
inc
add
dec
fbld
jo
int
verr
add
adc
jg
cmc
pop
loop
xchg
in
cmc
cmp
int
xor
cmp
sub
call
insb
mov
and
push
loope
cmp
divps
jge
lret
xchg
mov
pop
add
test
mov
out
test
popa
dec
jge
ja
mov
cmpb
std
or
jl
pop
pop
je
iret
testl
cmpsb
outsl
cltd
std
sbb
mov
sbbl
cmpl
xorl
mov
xor
mov
or
mov
pop
cmp
cmp
and
mov
pop
and
xor
xor
mov
lea
mov
sub
push
pop
pop
ret
insl
dec
cmp
sub
mov
cmp
arpl
ret
mov
movsb
scas
sti
test
sahf
cwtl
lret
iret
jne
xchg
lods
push
cmpsb
inc
ss
sub
mov
mov
mov
inc
or
movsl
cmp
dec
loopne
xchg
sub
push
testl
mov
iretw
fsts
adc
gs
push
ja
pushf
jg
adc
cmp
leave
jecxz
movsb
inc
test
inc
xchg
jg
mov
cmp
pop
out
bound
mov
push
cmp
cli
sub
xor
xor
hlt
arpl
cmp
sbb
or
scas
lods
cmpxchg
xlat
in
scas
lds
shr
mov
sub
adc
mov
fimull
outsl
sbb
mov
pusha
jg
call
out
cmp
sub
mov
sbb
movsl
lock
jmp
popf
xchg
lds
ret
nop
call
jb
xchg
sub
jle
pop
shlb
dec
jmp
shlb
mov
xchg
push
jno
xor
dec
loopne
xchg
outsl
pop
aad
inc
mov
pop
push
inc
xor
mov
xchg
sbb
push
sub
push
insb
pop
jmp
fcmovnb
cld
rorl
sbb
and
sub
ret
push
pavgb
mov
mov
mulb
pop
add
aad
mov
push
test
out
cmp
mov
clc
sub
push
mov
lret
pop
mov
repz
movsb
imulb
sub
inc
and
test
pop
scas
mov
push
or
scas
xor
mov
test
mov
out
lods
test
pusha
jl
mov
jb
mov
out
outsl
xchg
scas
cmp
add
or
aas
je
out
xchg
fs
test
or
pop
icebp
int
movl
sarb
std
inc
cmp
add
jnp
or
test
add
out
or
push
loop
lret
dec
fnstcw
cmp
xor
daa
jo
lcall
lods
movb
cmc
outsb
in
sub
mov
and
mov
jg
loopne
movsb
rcrl
mov
push
inc
mov
dec
lods
adc
or
pop
insb
in
inc
dec
icebp
popw
add
pop
adcb
xor
lret
mov
push
push
lret
push
ret
xchg
mov
mov
xchg
pop
xor
mov
mov
mov
pop
les
xchg
cmp
arpl
aas
inc
cmc
leave
pop
in
adc
inc
in
mov
lahf
ss
push
xchg
adc
movsl
jb
xchg
pop
push
and
pop
mov
or
in
push
in
rcrb
aad
and
and
fadd
pusha
btr
pop
adc
pusha
sbb
push
insb
lcall
xchg
test
push
push
add
xchg
rcll
mov
xchg
mov
in
ffree
jl
and
jge
int
jmp
bound
in
jno
push
out
scas
out
pop
jmp
jae
add
leave
pop
mov
cmp
add
sbb
inc
insb
xchg
stos
xor
dec
cmp
ja
pop
sub
test
dec
stos
stos
pusha
out
lret
mov
jns
cmp
jb
or
mov
sub
imul
ss
dec
push
je
lret
xor
sub
dec
jmp
cmc
xchg
and
clc
subb
adc
cmp
jnp
testb
jg
mov
inc
movsb
add
or
mov
cmc
out
js
adc
fnstcw
mov
and
and
inc
jl
lods
sbbl
push
cmpsl
lret
rclb
or
xor
xchg
aam
int3
out
xchg
jmp
mov
gs
cmpsb
icebp
dec
fs
icebp
cmc
cs
add
fmul
cs
fsubs
push
in
vminss
add
jmp
cld
es
push
fxtract
add
lret
xchg
call
push
lods
cld
fidivs
push
mov
ljmp
addr16
imul
mov
and
fsubrl
mov
cmp
lea
movsl
aad
inc
aas
jmp
loopne
mov
pop
xor
test
mov
xchg
fcoms
repnz
jecxz
lods
clc
mov
pop
lock
xor
dec
les
fmull
pop
dec
lret
rclb
push
xchg
or
push
adc
jge
inc
push
sub
inc
pop
dec
fisubs
iret
pop
fimull
and
daa
fdiv
adc
in
nop
lret
xor
xchg
add
enter
rorl
or
dec
lahf
es
rcll
hlt
mov
negl
lret
xchg
xchg
je
clc
popa
adc
test
xchg
leave
subl
outsl
daa
in
sub
rorl
pop
movd
orb
ljmp
testl
cmp
dec
aad
dec
push
add
mov
push
ret
rcl
pop
aad
hlt
mov
test
sbbl
push
sbb
pushf
jns
imul
jmp
xor
push
push
outsb
inc
roll
cmpsl
loope
xlat
leave
add
xchg
mov
shld
pop
in
adc
scas
pop
mov
aam
lret
or
sub
push
push
loope
push
mov
psrlq
aaa
add
lret
cld
arpl
test
scas
js
jecxz
adc
pop
sbb
cli
dec
sbb
push
cmpsl
push
test
testl
les
xor
sub
or
or
ds
addr16
sub
and
cli
jmp
loop
sub
fcmovnb
mov
mov
lea
mov
scas
lret
adc
push
lret
sbb
jmp
inc
sub
dec
nopl
clc
xor
stc
imull
mul
cld
mov
mov
add
pop
test
pop
fdivs
xor
mov
xchg
sub
xor
loopne
icebp
mov
fs
or
mov
dec
mov
push
jb
cmp
aad
sti
mov
and
pop
aas
cmp
mov
cmp
push
mov
out
jecxz
push
std
mov
pop
pop
dec
or
sbb
fadds
inc
push
mov
mov
jb
push
xlat
push
int3
mov
xchg
fistl
arpl
int3
sub
jo
push
jecxz
sahf
pop
sub
sbb
mov
shlb
cmpsl
adc
or
jl
lahf
push
pop
cmc
push
lds
and
mov
mov
pop
scas
xchg
int3
xchg
push
sarl
sbb
dec
mov
adc
mov
and
push
bound
aam
mov
mov
jno
dec
mov
and
lahf
adcl
gs
xchg
push
pop
fisubl
dec
or
sub
adc
out
mov
je
cmp
std
aam
bound
dec
fisubs
or
out
cmp
sbb
pushl
outsb
mov
addl
repnz
pusha
push
lds
xchg
push
notb
sub
xchg
gs
push
mov
bnd
sbb
nop
pop
jmp
xchg
fsubr
insb
loope
ret
add
mov
ror
mov
adc
sub
or
fs
cwtl
outsb
int
jo
push
cmp
jo
dec
inc
or
shll
mov
jno
jbe
stc
mov
mov
les
mov
mov
iret
or
movsl
adc
jmp
out
out
lock
pop
mov
pop
xor
dec
rol
inc
int
push
leave
jno
rol
or
pusha
test
lods
adc
ds
push
jecxz
loope
out
daa
pop
es
push
push
subl
mov
mov
movsb
xchg
or
xor
mov
xchg
push
test
cmp
push
fistps
jp
out
push
shlb
pusha
in
push
aad
frstpm(287
xchg
stos
push
add
rcr
cmp
out
rclb
xchg
ljmp
xchg
mov
dec
sbb
test
loop
mov
sub
in
cmpsl
jge
aaa
jp
pushf
repnz
mov
sti
or
sti
mov
jnp
pushf
mov
iret
cmc
dec
lret
mov
popa
mov
ss
cmp
aaa
leave
mov
inc
adc
stos
push
mov
pop
rcll
mov
dec
in
shr
jge
adc
pop
pop
pop
cld
or
add
or
mov
cli
iret
pop
xchg
xlat
shlb
test
jns
repz
sub
ljmp
inc
divl
insb
inc
addr16
leave
js
js
movsl
jmp
xchg
hlt
xchg
and
add
jge
push
dec
mov
dec
fs
sub
pop
adc
out
sbb
push
aas
stos
ret
sub
je
fistpll
sub
lea
adc
cli
pop
ja
movsl
inc
add
mov
lcall
imul
cld
loop
cmpsb
or
jle
sahf
push
fldenv
mov
das
mov
movb
gs
test
aas
loopne
pop
outsb
mov
ljmp
cmp
loopne
push
sbb
pop
pop
cmpsl
std
dec
sub
cmp
mov
insl
into
test
dec
loope
cmp
incb
dec
mov
adc
mov
popf
rorl
jbe
sarl
dec
mov
dec
clc
outsb
pop
add
popa
ss
sub
push
and
lods
es
jl
jnp
and
cmp
dec
in
movsl
mov
dec
ja
add
or
jo
or
lret
mov
or
bnd
xor
insb
jg
lods
imul
out
mov
pop
repz
mov
lds
mov
or
cs
lds
dec
xor
push
jo
test
and
lea
dec
in
int3
jp
xor
jl
arpl
sbb
or
into
sbb
outsb
xchg
fcomps
pop
loope
cmp
mov
ret
lds
clc
mov
or
mov
jnp
hlt
mov
or
or
test
mov
add
xchg
xchg
add
repz
mov
ss
xchg
rclb
std
xlat
movsb
push
sbb
sub
arpl
fimull
pop
sub
mov
push
and
ja
mov
mov
sbb
insb
cmp
cmpsl
sbb
sub
jno
ret
rolb
sarb
in
and
push
ret
je,pt
jle
pop
adc
rorb
mov
lods
pop
rorb
mov
call
jnp
mov
aaa
xor
sahf
std
lds
aas
jmp
lock
repz
movsl
jmp
movsb
sbb
loopne
mov
dec
jnp
adc
mov
xchg
insb
ret
int3
push
xchg
in
mov
sub
bound
dec
shrl
mov
aas
jl
push
add
sbb
jnp
pop
outsb
rcrb
sub
ds
out
addl
icebp
jnp
mov
addl
cli
fcompl
ret
push
mov
xchg
push
mov
xchg
mov
iret
das
scas
push
sub
xlat
fs
pusha
scas
arpl
mov
outsl
ja
adc
cmp
lea
cmpsl
dec
aaa
test
sub
inc
dec
repz
or
dec
dec
sahf
leave
sub
push
mov
jo
xchg
cmp
mov
out
inc
mov
push
aas
or
xchg
mov
mov
mov
cmpsb
pusha
jl
ret
movsl
js
xchg
push
sub
push
lcall
into
jecxz
movsl
js
bound
in
sub
mov
jle
mov
mov
stc
inc
lret
mov
sbb
xor
mov
or
je
jns
cmp
call
repnz
test
mov
lret
sub
in
in
fdivr
xchg
add
out
add
fcomip
outsb
imul
mov
or
push
shll
push
pop
adc
xchg
inc
loopne
lcall
cltd
aad
lcall
ja
xchg
les
shrl
fs
or
outsb
xor
inc
das
cmpsb
mov
mov
repz
lods
shrb
in
cmp
jnp
insl
lea
in
cmp
pop
push
imul
mov
arpl
dec
mov
and
xchg
loop
adc
pop
adc
rcr
jno
lock
lahf
imul
out
or
out
pop
sbb
cmp
scas
mov
sub
jbe
leave
pop
xor
jle
adc
push
xchg
add
stc
das
into
imul
movsl
aas
push
pop
pop
xor
div
mov
and
push
orl
clc
cmp
inc
xor
sbb
sar
jo
dec
aas
dec
leave
pop
lret
clc
bound
lahf
adc
daa
int3
stc
cs
je
mov
jecxz
jno
mov
add
mov
aad
push
rorl
or
cmp
das
js
sub
repz
in
push
dec
xorb
or
push
xchg
sub
fwait
les
adc
ss
push
mov
jp
ss
pusha
stc
fcoms
aad
add
repz
mov
xchg
lods
mov
or
adc
out
sbb
dec
das
and
out
iret
pop
cmp
push
adc
adc
and
add
dec
clc
push
mov
or
xchg
mov
cmp
pop
mov
fcmove
lcall
roll
aaa
cmpsl
movsb
data16
inc
insb
push
in
mov
repz
sbb
cli
pop
popf
xchg
pop
cmp
mov
sarl
adc
movsl
nop
cltd
cmp
pop
idivb
add
xor
push
enter
xor
insl
xchg
fwait
mov
insb
push
push
cmpsb
fistpll
insb
pop
test
shl
or
cld
push
mov
bound
sbb
jecxz
xchg
jmp
sbb
cmp
fists
adc
loop
xchg
and
mov
jmp
rcl
cmp
inc
xacquire
imul
inc
loope
or
and
and
stos
jbe
jb
ret
sbb
push
popa
mull
clc
sbbl
cld
or
sub
xlat
daa
cmp
cmp
insb
adcb
je
xchg
mov
inc
int
xorb
fistpl
scas
js
enter
lods
or
add
mov
addr16
in
jle
sti
push
xor
pop
loope
sub
mov
stos
mov
jl
xchg
aam
hlt
loope
hlt
xchg
subb
scas
imul
and
mov
pop
mov
in
or
mov
inc
lods
fidivs
push
xchg
xchg
arpl
push
and
cmp
dec
call
lods
gs
aam
ja
pop
fs
mov
icebp
test
data16
xchg
fcoml
xchg
test
pop
clc
mov
xor
xor
dec
lahf
stc
and
dec
adc
mov
sbb
call
pop
cmp
loop
jecxz
jle
mov
mov
adc
inc
ret
jle
imul
or
mov
out
inc
daa
int3
pop
outsb
cmp
mov
add
push
adc
cmc
fstpl
mov
cmp
stos
xchg
push
lret
pop
fsubr
push
pop
bswap
push
jno
xchg
lds
pop
pop
mov
int3
jp
repnz
cmp
pavgw
rcrb
lahf
addb
mov
adc
call
push
jl
outsl
mov
add
in
mov
ret
lret
mov
pop
lods
gs
cmp
outsl
fs
mov
fsubrl
ret
jle
loop
pop
dec
xor
xabort
lahf
lods
jmp
cmc
mov
dec
repnz
inc
dec
dec
pop
xor
xlat
shll
lea
or
cmp
pop
call
divl
inc
stc
mov
sub
dec
xor
xlat
lahf
xor
lcall
inc
sbb
dec
lret
push
and
out
clc
repnz
adc
sarb
movsb
jmp
aad
fmul
cmpsl
dec
inc
sub
cld
xchg
test
ds
lret
inc
mov
cmp
mov
test
inc
sahf
xchg
mov
lahf
fwait
arpl
aaa
out
or
call
cmpsb
push
push
add
andl
mov
js
adc
insl
mov
call
and
int
push
shlb
push
nop
or
fists
lret
call
or
adc
pop
cmp
sbb
adc
movsb
ret
and
out
aaa
lock
fidivrl
icebp
dec
dec
pop
add
test
xlat
mov
inc
inc
cmp
ds
test
cmp
stc
dec
cwtl
in
xorl
mov
xlat
cmp
out
fdivr
nop
cmp
pop
ret
push
fsubs
pop
add
xor
sub
divl
aaa
xor
mov
jo
fists
lret
adc
in
lods
outsb
inc
in
or
cmpsb
outsb
mov
and
rorb
cmp
inc
xor
add
aad
clc
aam
mov
push
jge
pusha
jbe
jo
push
roll
js
cs
aad
dec
out
pop
not
adc
insb
iret
in
cwtl
adc
in
loope
test
mov
lds
xchg
add
pop
push
mov
lahf
dec
scas
movsl
out
pop
wbinvd
pop
idivl
jmp
fdivs
stos
dec
iret
movsb
imul
add
push
cmp
fnstenv
notl
mov
push
daa
fcomps
or
sub
push
jns
lea
ss
in
gs
jno
xchg
out
sub
adc
outsl
mov
sbb
adc
xchg
pop
sub
insb
test
and
push
add
lahf
inc
push
cmp
dec
mov
ds
pop
inc
pop
dec
aaa
pop
ficomps
mov
jb
rclb
mov
xchg
js
mov
subl
jl
pusha
push
repnz
mov
mov
pop
sbb
jge
push
inc
mov
roll
popa
inc
or
push
testl
jecxz
mov
shld
jb
popf
testb
xor
jmp
aad
xchg
mov
clc
push
loop
mov
shlb
aad
jo
loop
sbb
fstps
jge
xlat
sarl
ds
jmp
dec
push
ss
pop
ret
inc
inc
ja
pop
inc
push
xchg
sbb
jnp
sub
xchg
fistpl
or
aad
xor
jns
sbb
out
pop
pop
ss
xor
push
clc
cli
jecxz
negb
push
jle
sub
sbb
in
mov
js
popa
cld
xchg
push
add
lea
ret
mov
or
mov
sub
add
sbb
push
por
lods
or
or
arpl
push
or
sbb
sbb
add
leave
and
adc
punpcklbw
data16
mov
sub
test
inc
cmp
leave
mov
push
in
ret
xor
shr
xor
adc
xchg
dec
mov
orl
lods
jp
pop
sbb
dec
iret
jmp
push
sbb
jp
sbb
imulb
mov
jmp
sbb
fsubs
adc
lds
xchg
decb
cmp
push
loope
lods
lahf
rcll
jns
lods
cmpsb
dec
scas
lds
call
mov
and
pop
jae
daa
aas
and
xor
sbb
frstor
push
out
cmc
xchg
data16
jl
pop
aaa
sti
pop
adc
ds
nop
rcrb
mov
or
jbe
lea
les
cmp
xlat
xchg
pushf
and
ja
pop
add
sti
lds
xor
sbb
inc
mov
dec
mov
lods
insl
in
vdivsd
cmp
mov
lods
andb
cmp
bound
aam
mov
cld
mov
imul
in
and
popf
insl
fisubrs
clc
adc
dec
lock
pusha
in
arpl
loopne
or
je
mov
cmpsb
out
mov
pop
mov
sbb
jae
lock
iret
insb
sarl
mov
stos
fldenv
les
xchg
rcrb
popf
test
adc
test
and
cmovp
xlat
and
jnp
std
push
jp
cmp
mov
scas
pusha
test
dec
xor
jo
pop
or
insl
stos
insl
sub
push
cmc
mov
jmp
shlb
repz
insl
outsb
xchg
test
jl
mov
jne
in
sti
xchg
insl
decb
mov
jge
popa
data16
inc
mov
xchg
xor
push
jae
out
lret
enter
inc
add
sbb
sub
aad
cld
inc
mov
or
loop
cmpsb
cmp
jno
cmp
xchg
enter
ljmp
hlt
in
lret
xor
fiadds
sub
cli
pop
push
add
inc
addr16
lcall
es
enter
inc
mov
mov
mov
xchg
aam
sub
jne
cmp
push
mov
inc
xor
rolb
sarb
xchg
xchg
cmp
movsb
bound
bound
in
fcmove
je
data16
leave
fwait
push
outsw
or
cmp
xor
push
in
std
test
jle
cmp
in
mov
sub
xchg
in
fidivs
cld
lds
sub
sub
dec
lock
inc
scas
fsubr
sarb
xor
jmp
xor
inc
sbb
pop
jns
pop
lahf
mov
jns
lea
mov
xchg
dec
lods
push
and
jle
ja
mov
hlt
bound
xorb
lea
addr16
mov
sub
call
pop
mov
mov
xchg
mov
mov
push
cmpsl
mov
xchg
mov
jmp
cmp
pop
pushf
pop
xlat
pop
cmp
xor
xchg
call
jg
subb
jnp
mov
seto
cli
cmp
dec
in
mov
xlat
jns
or
xor
xchg
sti
sub
cmp
push
shr
mov
pop
sbb
cmpsl
or
push
lahf
xchg
repz
movsb
ss
mov
push
cmp
xchg
push
cmp
insb
fcmove
mov
adc
pop
pushf
fbstp
movsl
mov
dec
sti
loopne
int
cmp
cmp
ret
cmpsl
fucomp
mov
pusha
or
pop
push
popf
movsb
mov
jmp
fidivrs
test
ret
fwait
ret
jp
imul
out
xchg
loope
xor
cmpsl
sbb
xchg
into
cmpsl
adc
add
sti
cmp
and
psllw
nop
cld
inc
mov
jmp
sti
mov
mov
xlat
pop
sahf
pop
sarb
int
aaa
popf
add
mov
das
and
int3
test
enter
xchg
pop
cmp
xorb
repz
divb
aas
or
add
imul
lret
xor
cmp
mov
fistl
outsl
mov
add
lahf
movsl
shrb
xchg
mov
or
test
jo
inc
in
pop
mov
out
scas
push
xlat
cmpsl
and
mov
subb
mov
push
and
inc
imul
js
xchg
lcall
popa
sti
push
cmp
and
xor
cmp
cmpb
mov
pop
xchg
xchg
and
xchg
int
push
xchg
jne
sbb
mov
cmp
jae
and
add
adc
ljmp
dec
std
jp,pn
ds
fisubrs
cmp
cmp
test
pop
fnstenv
insl
xor
aaa
mov
negb
lret
sub
xchg
xor
sarl
cld
jno
aad
les
inc
sti
lahf
ret
add
out
rolb
fildl
xlat
rcrl
out
jmp
dec
fcom
cs
mov
jg
ror
jo
call
iret
xlat
and
mov
xor
inc
jl
dec
or
out
cmp
ret
andl
mov
mov
lock
rorl
cwtl
orl
push
test
or
aad
sbb
iret
fmulp
fisubrs
mov
or
push
popa
into
data16
out
adc
add
pop
cld
cltd
gs
cmp
out
adc
dec
adc
rolb
fbstp
mov
push
out
popa
sub
mov
sbb
cmp
mov
jb
in
arpl
push
lods
lret
xor
sbb
ljmp
stos
mov
mov
mov
fnstcw
pop
popa
test
mov
jmp
dec
hlt
sbb
xor
mov
sbb
xor
stos
push
and
mov
adc
ja
pop
mov
mov
push
add
cmpsl
sarb
sbb
xchg
fldenv
popa
imul
inc
jns
andb
cmp
filds
loope
dec
push
mov
shll
sub
lock
mov
imul
orb
mov
cli
mov
pop
pushf
jae
jge
mov
lea
lahf
fistpl
flds
sbb
mov
mov
sbb
fidivrl
dec
cld
mov
pop
sub
mov
push
js
inc
lods
lods
mov
fadds
es
mov
jno
adc
outsl
cld
cltd
mov
xor
inc
mov
mov
sbb
sbb
mov
dec
stos
cmp
mov
in
mov
les
xor
jge
xchg
in
dec
adc
adc
cmc
push
xchg
daa
pop
scas
xlat
nop
sti
xchg
lds
sbb
xlat
jl
jb
cmpsb
xor
pop
mov
mov
and
out
addr16
aas
call
lcall
xor
stc
add
cmpsb
pop
xchg
mov
int3
jnp
xlat
lret
cli
mov
je
cld
stos
inc
add
mov
dec
std
jge
and
xor
push
iret
sbb
ja
sub
sbbl
xor
pop
cmovae
xor
inc
jp
insb
pop
mov
xchg
inc
in
sbb
dec
ret
jp
mov
ljmp
xor
mov
mov
cmpb
or
flds
shll
psubd
sub
and
pop
or
cli
and
push
hlt
xor
sub
cltd
mov
jne
jge
xor
lds
stos
sbb
jno
cld
pusha
xchg
adc
mov
jmp
scas
xchg
sub
scas
mov
inc
cltd
add
cwtl
lret
jns
xlat
pop
mov
cmp
inc
dec
push
adc
ret
into
sbb
hlt
sbb
nop
pop
mov
ficoms
cmp
xor
sub
add
dec
mov
mov
jp
jnp
mov
add
jb
add
adc
in
je
inc
sbb
mov
outsb
jae
ljmp
bound
outsb
jmp
lret
mov
cli
adc
inc
sub
negl
js
ds
sbb
mov
jge
jmp
in
jle
sbb
loope
lret
outsl
jns
xchg
lahf
lcall
sti
insl
in
mov
jg
out
notl
mov
sbb
aad
call
sahf
jo
mov
rorl
cmpsl
dec
mov
add
aaa
mov
fistps
sub
std
lret
nop
pop
add
xor
dec
sub
lret
inc
cmpl
xor
mov
div
ror
loop
push
divl
mov
mov
icebp
pop
loope
cli
add
gs
lods
jp
enter
inc
ucomiss
enter
jp
aam
mov
les
lahf
movsb
popa
jae
outsb
and
lock
popa
lret
repnz
cmp
push
mov
shl
pop
movsl
xchg
add
pop
loopne
mov
mov
fnstsw
outsl
nop
push
dec
xor
jmp
sub
sub
cmp
xor
xchg
xchg
out
add
stos
into
mov
cmp
sbb
pop
hlt
shll
lahf
cmp
dec
push
sub
jle
push
popa
and
hlt
push
dec
xor
lcall
inc
out
adc
xor
data16
jb
sub
adc
mov
dec
repnz
aas
lret
dec
push
fistl
pop
enter
add
in
pop
add
sub
or
xor
xor
das
int3
lret
sti
incb
stos
sub
inc
stos
jb
mov
mov
test
into
push
filds
dec
sbb
mov
jge
insl
pop
xor
pop
dec
ss
clc
mov
js
push
lret
or
out
insb
leave
push
lcall
je
or
xlat
cwtl
cli
int3
mov
mov
pop
aas
pop
mov
ret
lea
adc
xchg
ss
mov
lods
sbbb
out
push
fadd
ret
pop
in
cwtl
add
fwait
sahf
js
imul
cmp
cld
mov
xor
inc
inc
sahf
pop
pushf
sti
fwait
xorl
xor
cmp
pop
xor
dec
outsl
jne
mov
jecxz
cmp
incl
adcb
cli
sti
or
mov
clc
mov
mov
pop
lock
ljmp
in
pushf
pop
lea
mov
inc
out
mov
addl
jl
outsl
mov
dec
outsl
add
rorl
outsb
jp
xchg
jmp
scas
or
divb
jo
cli
icebp
adc
cmpsb
imulb
sub
in
push
sbb
popa
lods
sbb
xchg
fld1
fsubr
hlt
fiaddl
xchg
scas
sbb
jmp
mov
scas
jp
cltd
lods
add
cmp
imul
push
outsb
and
sub
out
ret
jae
mov
fst
cld
js
pop
ret
xor
out
je
or
testb
arpl
or
mov
cmp
lods
nop
std
xchg
and
dec
inc
out
cmpsl
push
mov
cmc
vmread
sub
push
xlat
outsb
xchg
arpl
xor
rolb
sub
and
xchg
xchg
ja
push
mov
xchg
aas
add
test
lea
or
cmp
push
lods
xor
bound
mov
or
fbld
fsts
jle
or
sahf
jmp
adc
jne
imul
rclb
dec
pop
int
addr16
push
xchg
pop
xchg
mov
mov
mov
scas
bound
cmp
test
push
mov
mov
pop
adc
das
mov
mov
sub
mov
pop
and
sub
jp
jecxz
pop
mov
outsb
cli
repz
xor
mov
mov
jmp
call
sub
inc
xor
test
fildl
mov
subl
mov
rorl
pop
out
pusha
xchg
sbb
jle
adc
push
inc
dec
into
add
xchg
push
pop
inc
sbb
dec
mov
jne
xchg
sbb
add
popf
sub
cli
out
and
cld
jp
pop
mov
mov
mov
test
xlat
iret
loopne
inc
dec
push
and
dec
je
mov
add
rorl
int
jbe
jnp
push
lret
jecxz
add
xchg
xlat
fcmovnu
mov
test
dec
or
popa
pop
nop
out
lock
mov
rcrb
orb
shlb
out
cmovns
mov
xor
sub
xchg
js
push
mov
ss
adc
insl
jo
cmpl
adc
or
dec
ja
ret
dec
sahf
sub
loope
mov
mov
lahf
push
inc
rcrb
shlb
xchg
dec
imul
xchg
mulb
cmp
sbb
loopne
jmp
dec
cwtl
fisubrl
cmp
xchg
push
sbb
pop
aad
mov
sbb
ds
jp
ds
adc
shll
subb
mov
jnp
loopew
popf
outsb
jnp
imul
ljmp
outsl
movsl
dec
jmp
adc
or
inc
repnz
test
add
popl
jle
cmpsb
leave
mov
cmp
push
cmp
mov
int
add
cmp
ljmp
jge
mov
loopne
add
lcall
xchg
push
int
xor
sbb
jae
xor
shlb
xchg
insb
mov
and
sbb
ret
cwtl
xor
je
push
jnp
mov
push
xor
jo
mov
pop
in
in
mov
test
mov
xlat
lea
mov
mov
scas
setns
fcompl
gs
add
push
icebp
push
mov
jecxz
inc
or
cwtl
jnp
or
or
pushf
mov
js
inc
cmp
mov
mov
dec
mov
mov
inc
xor
in
cmp
inc
into
inc
jg
test
jle
fnstcw
mov
pop
sbb
es
rorb
cld
push
pop
push
jl
insb
loope
sub
mov
aad
iret
push
mov
or
cmp
js
mov
outsl
sub
pop
mov
pusha
xor
call
aad
idivl
loop,pn
push
jno
sub
mov
scas
inc
pop
cmp
inc
sbb
in
jle
call
or
jle
js
jnp
xchg
or
and
pop
js
pop
jae
pop
jae
sub
dec
cli
in
or
sbbb
mov
pop
cmp
jl
jnp
ljmp
sub
xchg
mov
xchg
xchg
cmc
or
push
cmpsl
and
int
jb
cmp
data16
cmc
repz
jbe
xorb
push
pop
sub
push
lea
loopne
ss
cli
test
js
jo
into
push
sbb
jmp
subb
fninit
sub
and
xchg
inc
movsl
cmp
stos
bound
js
movsl
sub
xchg
outsb
test
pop
pop
or
je
add
cmpsb
out
mov
je
inc
clc
test
adc
das
and
scas
push
pop
mov
sub
jl
fcompl
aas
pushf
push
mov
jns
stos
pop
dec
and
pop
ljmp
push
cs
es
xchg
or
lds
test
daa
add
ljmp
orb
sub
push
cmp
iret
imul
hlt
jae
movsl
pop
ljmp
push
lock
push
pop
jg
add
fwait
sbb
insl
xchg
pop
mov
mov
imul
outsl
sbb
mov
cmp
xor
int3
int
xor
lea
das
or
in
jne
into
jno
xlat
add
fs
mov
popf
loop
ljmp
adc
xchg
or
xor
shll
or
push
daa
roll
xchg
cmp
dec
mov
inc
inc
dec
bound
inc
xchg
push
imul
push
jmp
xor
insl
jmp
inc
mov
adc
lahf
jmp
jmp
sub
ljmp
jg
push
adc
sbb
mov
cld
lods
inc
movsl
cmp
jg
pusha
mov
mov
mov
enter
sarl
xor
loop
ret
push
das
cmp
inc
imul
mov
cli
je
std
lcall
xor
cmp
jns
pop
mov
sbb
repnz
push
es
push
rclb
sbbb
setbe
fwait
mov
add
clc
dec
push
pop
inc
xchg
lods
dec
sbb
data16
lods
popa
aad
sbb
sub
stos
negb
xlat
iret
sub
out
jns
dec
neg
pop
lods
cmp
in
stos
dec
xlat
popf
xlat
jmp
shlb
adc
mov
and
xor
insb
push
or
xchg
pop
mov
inc
cmpsb
in
dec
cmp
shll
leave
jbe
inc
xchg
jge
popa
and
testb
adc
ljmp
cld
mov
xchg
jns
test
inc
cltd
push
loope
cmp
pop
insl
and
ror
jg
fnsave
sbb
xchg
and
mov
or
dec
je
lcall
and
ficomps
mov
lret
cli
mov
pop
movsl
xlat
fdivrp
inc
add
loop
dec
mov
mov
call
xor
push
subl
add
lcall
push
ljmp
pop
xor
dec
jle
mov
jo
add
int
adc
sub
cwtl
fdivrs
fisttpl
es
pop
mov
add
dec
jne
inc
jb
test
push
cmp
xchg
xchg
push
ja
or
mov
pop
sbb
faddp
xchg
mov
mov
cmpsl
addr16
sar
outsb
cmpsl
mov
aaa
push
scas
out
ret
mov
pop
fldt
mov
fs
and
sub
pop
mov
popf
push
negb
mov
xchg
mov
fwait
inc
test
fidivrl
nop
jb
scas
add
mov
es
sahf
add
jmp
mov
shl
sbb
repnz
dec
cmp
xor
imul
pop
xchg
les
sbb
mov
and
enter
mov
xchg
mov
lods
aaa
push
js
xor
cmc
xchg
jb
or
cmp
loopne
dec
gs
jg
mov
sbb
mov
mov
cmp
out
popa
sub
mov
inc
adc
mov
fisubrl
movsb
jae
push
fwait
adc
out
cmc
or
and
fadds
mov
test
push
pop
adc
sbb
and
subb
inc
ds
cwtl
xor
insl
nop
push
xchg
fsubrs
aad
inc
cmp
mov
popa
or
xor
stos
sbb
add
add
cmpsl
je
enter
decl
inc
pop
mov
jae
lcall
xchg
in
sub
adc
add
bound
inc
xor
out
repnz
cmpsb
pusha
mov
fwait
shll
sbb
lahf
or
mov
push
push
mov
sbb
or
outsl
mov
mov
enter
inc
addr16
test
mov
cwtl
aam
lods
in
and
push
loopne
pop
test
cmp
test
sub
lea
cltd
test
inc
mov
mov
xchg
lret
movl
add
or
dec
sbb
mov
jno
outsb
push
call
sub
and
xchg
addr16
jg
mov
ret
push
outsl
pop
pop
and
addl
jbe
loope
cmp
sbb
xor
lahf
ss
loope
xor
sub
sub
jge
dec
mov
mov
dec
or
cmp
fsubrl
pop
adcl
mov
xchg
ret
jno
jns
adc
jecxz
xchg
push
mov
xlat
adc
lods
mov
sbb
sub
xchg
cmp
loope,pn
lock
xchg
adc
inc
cmp
aaa
mov
mov
lea
cmpsb
jmp
xlat
or
pop
flds
xchg
out
cmpsl
pop
es
cmc
clc
inc
mov
pop
add
sbb
das
dec
js
call
push
push
fdivr
pop
sbb
js
pop
hlt
ret
dec
in
out
mov
loop
scas
jb
nop
insl
orl
jl
insb
lahf
shrl
jmp
outsl
psadbw
in
pop
je
gs
insl
daa
sti
test
pop
push
lret
in
xor
and
fistpll
rcrl
decl
adc
mov
stos
or
out
xlat
mov
inc
inc
aaa
xor
sub
sub
clc
into
cltd
rcrl
mov
je
cmp
pushf
std
push
jnp
insl
jno
jl
sbb
mov
cs
mov
push
mov
sbb
pop
jae
cld
mov
stos
push
call
push
out
xor
data16
xchg
mov
lock
pop
in
xchg
stos
jmp
aad
jmp
aas
jne
or
insl
adc
ljmp
insl
das
push
int3
js
dec
sub
mov
bound
xlat
fbstp
icebp
xchg
xchg
test
and
repnz
testl
sbb
cmp
enter
push
fwait
add
mov
jbe
xchg
cwtl
sub
pop
orb
mov
adc
dec
repnz
outsb
stos
jns
push
fwait
icebp
stos
pop
cmp
sub
dec
ljmp
int3
sarb
outsl
out
mov
inc
cmp
hlt
lods
xor
lds
fmuls
dec
aam
loope
lret
mov
mov
mov
and
mov
inc
dec
enter
add
orl
adcb
ss
mov
mov
and
inc
aad
mov
sbbb
cmp
adc
xchg
loop
add
mov
int3
std
dec
add
jl
nop
mov
addr16
push
push
shll
iret
and
pop
fs
test
ds
lahf
shlb
sbb
mov
in
xorl
loope
aaa
cmp
lea
scas
loopne
lods
call
int3
bound
mov
cltd
xchg
xchg
jns
jp
iret
cmc
jne
push
mov
imul
ds
fadds
fnstcw
popa
aad
ret
xchg
pop
push
scas
jmp
fbld
xchg
fdivrs
aad
into
cmp
dec
lods
cli
test
out
leave
xchg
lods
push
daa
dec
test
mov
pop
push
inc
adcb
cs
andb
xor
pushf
sub
adc
stc
cmpsl
push
adc
add
push
jae
sbb
push
je
mov
je
xchg
cs
jmp
lret
popf
loope
jno
jecxz
jo
push
add
cmp
cs
ret
aaa
pop
cmpl
jnp
or
mov
mov
mov
repz
lods
jg
push
outsl
arpl
push
add
push
sbb
pop
xlat
dec
xor
aaa
pusha
dec
cmpsb
shll
lods
jmp
int
mov
scas
call
or
sbb
hlt
xchg
mov
mov
jmp
enter
int3
mov
lar
mov
test
lcall
pop
push
push
lcall
dec
pop
push
pop
mov
xchg
xchg
push
enter
mov
push
mov
rol
adc
ret
cmp
lea
mov
pop
pop
jecxz
rcr
jge
cmp
fdivr
add
mul
pop
push
jg
dec
ret
lea
pop
inc
std
and
idivb
pop
pop
dec
xchg
cli
insb
movl
and
sbb
js
mov
mov
test
andb
inc
adc
rcrb
sbb
xor
stc
addr16
mov
in
lahf
imul
sub
xchg
adc
scas
mov
pop
push
test
xchg
enter
sbb
sti
movsl
pop
aad
push
divb
mov
sahf
mov
xchg
int
add
inc
inc
pop
push
cmpl
mov
fistpll
fistpl
mov
or
in
jno
movd
jmp
cld
shrl
fucomi
shlb
inc
add
into
jecxz
inc
sub
jle
mov
scas
add
adc
xchg
push
ljmp
mov
mov
adc
and
hlt
pop
mov
inc
outsb
mov
arpl
sub
jns
pop
sahf
push
lods
imul
out
pop
pop
or
pop
sahf
jp
adc
pop
sub
adc
and
mov
jl
inc
mov
mov
jo
shll
movsl
leave
in
fsts
ljmp
insl
bound
incl
out
iret
and
std
movsb
cmp
cmpsl
lds
and
fimull
cmc
dec
xchg
jae
imul
and
ret
adc
cs
add
ljmp
mov
xor
push
test
sub
xchg
repz
push
dec
scas
fsubrs
cwtl
xor
mov
test
mov
sbb
notb
dec
cmp
dec
cmp
add
push
pop
fisttpll
cmp
cwtl
sbb
rol
sub
add
dec
sub
xor
incl
aam
jmp
clc
jge
int
call
adc
add
pop
jl
pop
cmp
lcall
or
and
icebp
mov
sub
jl
mov
push
shrl
into
sbb
mov
mov
pop
jne
fmuls
stc
addr16
and
rclb
mov
es
pusha
je
popa
fnclex
add
mov
mov
gs
mov
data16
cmp
imul
push
js
movsl
push
stos
jecxz
adc
mov
dec
cmp
stos
stos
jl
or
pushf
ret
ret
jns
int
pop
push
xor
mov
cmp
jmp
test
ret
mov
sbb
clc
movsb
pop
ret
repz
repz
sti
cmp
dec
imul
fimull
jl
jg
movsl
js
xor
or
js
pushf
imul
stc
pop
cmp
ret
movsb
jecxz
jbe
jp
dec
add
jo
sub
loopne
jge
and
je
sbb
push
outsl
adc
inc
mov
inc
add
pop
add
fadds
inc
arpl
outsl
in
mov
loop
aam
popf
sub
bound
sub
push
shl
sub
mov
add
sarb
jl
cmpsl
bound
mov
jns
mov
sahf
dec
jb
ljmp
jmp
popa
cmp
out
jo
mov
icebp
insb
in
cli
out
fnsave
movsl
sub
push
loopne
insb
xchg
add
lret
jno
js
bound
out
test
push
popf
jge
jl
sub
rcrb
and
les
pop
cli
fcomip
aam
std
stos
aas
sbb
ljmp
sbb
into
jl
cs
jg
imul
jecxz
xor
idivl
push
push
push
push
jnp
cmp
jg
pop
inc
mov
pop
dec
jo
mov
les
leave
mov
out
inc
xchg
in
testl
mov
sub
mov
je
daa
lahf
jne
aas
enter
fidivrl
xchg
mov
xor
push
movsl
call
pop
rol
cld
ja
and
pop
sbb
int
xchg
ds
shr
push
test
shlb
lcall
and
mov
xchg
cmp
das
adc
into
mov
cmpsb
cmp
mov
mov
popa
jg
fadds
or
add
fldl2t
bound
mov
in
mov
out
or
sbb
jns
in
mov
fidivs
dec
lds
stos
inc
lods
jne
rclb
mov
int
loope
arpl
sbb
and
cmp
cld
jl
xor
cs
fisubrs
xor
sub
sub
arpl
lds
fwait
rorb
pop
dec
sbb
fdivrl
imul
sahf
fs
inc
popa
push
subl
sub
jo
jne
cmpsb
les
icebp
mov
cmpsl
out
jb
in
imul
int
call
out
fistl
mov
lahf
push
mov
dec
sahf
inc
icebp
xchg
cmp
xor
mov
aam
add
out
cli
int3
adc
pop
out
movsl
aam
movsb
cmp
jle
jns
ljmp
mov
xchg
or
leave
sbb
mov
mov
repnz
dec
mov
pusha
mov
or
fldln2
cmp
mov
pop
stos
jb
jno
xchg
lods
jns
js
sti
mov
outsb
inc
push
push
in
sub
dec
add
hlt
loop
lock
mov
jge
cltd
mov
lods
cmpsl
cld
pop
sbb
rorb
orb
lahf
xchg
jecxz
add
xchg
jae
pop
mov
arpl
add
fs
adc
xlat
jl
xchg
fsts
enter
bound
push
lods
push
add
lcall
mov
loope
lds
dec
push
pop
lret
dec
cwtl
jnp
out
fadd
inc
fwait
xchg
sarl
inc
hlt
dec
mov
aad
call
pop
jp
add
sbb
mov
sti
lcall
pop
xor
xchg
rolb
sbb
cmpsb
mov
jl
in
pop
xchg
das
pop
sbb
xchg
cld
cmc
xchg
mov
adc
xchg
jns
xchg
dec
mov
jae
push
cmp
daa
test
loopne
dec
jns
or
jp
imul
cmp
sub
pop
hlt
and
jnp
jmp
pop
data16
sub
cs
imulb
jge
fsubl
mov
rcrb
xchg
pop
cwtl
push
cmpsb
subb
push
sub
js
xchg
jge
cmp
sub
fildll
insl
xchg
add
out
xor
or
jl
pop
add
add
into
push
add
repz
ret
nop
dec
xor
cwtl
push
insl
aaa
pusha
out
into
int
pushl
pusha
jb
testl
lods
push
push
push
icebp
adc
xchg
loope
pop
test
sbbb
push
pop
lods
insl
or
inc
mov
mov
inc
push
pop
clc
xadd
test
loope
int
into
pop
popa
rorb
dec
sar
mov
fchs
sub
call
pop
mov
bound
xor
int3
pop
pop
mov
in
mov
imul
pop
fwait
sti
pop
arpl
xchg
xlat
xlat
mov
mov
add
dec
add
add
mov
test
xchg
daa
gs
insb
es
mov
ljmp
roll
jle
enter
pop
orl
push
jge
push
jmp
jo
cli
sahf
pushaw
lahf
cmc
xchg
rcl
dec
lods
lret
cmp
stos
or
aad
pop
or
add
sbb
cmp
roll
mov
jbe
jae
or
out
adc
out
mov
sub
int
ficomps
adc
std
dec
push
xor
or
and
out
js
add
out
pop
jle
push
add
mov
mov
push
lea
push
pop
pop
loopne
pop
addl
mov
les
dec
clc
inc
clc
push
xor
stc
shl
mov
fcmovnu
cwtl
or
in
aaa
or
inc
cmp
jl
mul
scas
ja
mov
pop
movsl
ss
cmp
xor
pushf
add
sub
cwtl
pop
lock
out
subl
cmp
inc
sub
cmpsl
in
sub
sub
fwait
pop
xchg
aam
and
adc
addb
addr16
mov
je
sbbb
imul
ret
adc
inc
pop
repz
push
loope
mov
hlt
in
dec
movsl
and
movsb
inc
clc
sub
push
pop
scas
rolb
and
xor
sbb
loop
mov
inc
rorl
adc
lods
cmpsb
in
ret
or
xchg
outsb
xchg
ds
cwtl
dec
pop
leave
push
mov
push
mov
xlat
or
inc
icebp
insl
daa
cltd
cmc
loop
lds
push
rorb
fildll
lahf
clc
mov
lret
adc
or
addr16
lds
inc
inc
lods
xchg
sub
xchg
mov
stc
mov
push
std
xlat
jge
xor
mov
push
dec
mov
hlt
xorb
mov
sbb
push
mov
dec
add
and
out
xacquire
xor
inc
dec
inc
pop
sbb
lods
mov
cmp
popf
sbb
daa
outsb
aad
jne
iret
and
aad
fcoml
scas
orb
gs
mov
ljmp
dec
sbb
or
les
pop
es
add
mov
or
push
aas
pop
xchg
inc
jns
sbb
mov
mov
mov
lock
fld
mov
adc
xchg
mov
push
insb
testl
dec
test
xor
rclb
je
inc
ss
cmpsb
ds
pop
push
push
sarb
jnp
jmp
mov
xor
jl
mov
mov
xchg
pop
cmpb
iret
and
mov
xchg
dec
mov
mov
xor
mov
pmaxsw
push
jecxz
pop
or
jecxz
inc
inc
push
sar
fisttpl
mov
jmp
xlat
dec
cwtl
pop
adc
iret
cmp
adc
jae
mov
mov
lcall
cld
push
mov
xorb
ljmp
pop
cld
mov
jo
ss
repnz
sbbb
stc
clc
stos
fwait
and
cmp
mov
or
movsb
lods
mov
and
ljmp
jge
sbb
mov
jae
pop
xchg
sub
std
divl
scas
adc
insb
shrb
aad
rcr
jae
leave
cmp
jg
xor
add
mov
hlt
std
cmc
xchg
data16
cwtl
push
jg
adcl
stos
xchg
insb
push
xor
ss
popa
pop
mov
mov
stc
enter
push
xchg
mov
cmp
push
mov
mov
fsubl
andl
daa
dec
aad
xlat
stc
jno
jge
rcrb
cmp
rep
cmp
mov
xchg
data16
jl
arpl
cltd
fwait
xlat
outsb
add
xchg
mov
mov
sub
ss
xchg
cmpsl
test
divl
movsl
loopne
xchg
cmp
mov
jle
sarl
popa
mov
cmp
sbbb
ja
sbbl
xor
dec
iret
and
or
call
into
adc
in
lahf
in
mov
jle
xchg
daa
push
cltd
mov
cmpsb
xchg
jnp
push
movsb
add
adc
test
in
lret
std
and
mov
ret
test
sub
sti
pop
ret
push
xchg
cwtl
nop
mov
xor
call
leave
lret
dec
inc
jae
mov
push
xor
popf
ljmp
insb
inc
cmp
or
aad
mov
orps
fs
aaa
orl
insl
mov
pushf
push
sbb
pushf
pop
int
and
out
mov
xor
adc
mov
push
fildll
mov
mov
sbb
pop
jecxz
leave
addl
fs
inc
pop
sbb
mov
dec
daa
cmp
inc
jp
pop
xchg
movsl
arpl
ljmp
xchg
cmp
outsl
dec
cmp
jmp
cmp
mov
lcall
add
adc
aas
push
pop
inc
mov
pop
clc
pusha
data16
or
ds
enter
and
mov
imul
sbbb
push
cmpsl
fimull
andl
repnz
dec
adc
push
jo
mov
mov
xchg
pop
pop
cmp
sbb
pop
xchg
into
sub
ljmp
fistl
js
lret
fdivr
dec
mov
push
shll
push
scas
cmpl
jns
stos
xor
add
imul
xchg
cmp
pop
ss
out
jmp
dec
cli
enter
lods
mov
movsb
mov
aad
xchg
push
cmp
cld
cmpsl
mov
pop
cmc
mov
inc
sub
sbb
es
jg
loopne
push
fldenv
dec
pop
add
fcomi
cs
notb
lcall
fcmovnb
jle
ljmp
adc
sub
inc
mov
fldl
mov
mov
xor
ror
repz
jp
clc
sbb
sarb
pop
enter
xor
lods
add
inc
repnz
mov
adc
push
jg
lret
pop
stos
repnz
push
stos
rcll
mov
inc
pop
fdivs
das
ja
inc
fisttpll
jb
in
dec
loopne
ss
cmpsb
pop
ds
dec
cs
dec
sbb
jg
inc
cmpsb
fistl
addr16
imul
lea
test
jo
mov
push
in
test
shll
or
mov
inc
pop
gs
jbe
mov
mov
and
cmp
stos
mov
cmp
xchg
les
stc
jge
addr16
rcl
fadd
out
jle
inc
scas
stos
dec
pop
loopne
pop
jne
test
test
push
aad
sbb
add
cmpsl
inc
je
enter
cmp
jns
loope
cmp
sbb
mov
mov
add
jmp
xlat
or
push
sbb
mov
ljmp
fucomi
mov
push
in
or
cmp
sbb
in
or
icebp
mov
cwtl
fisubrl
mov
int3
mov
or
adc
sbb
pop
xchg
in
sti
xor
js
dec
rcrb
dec
push
sub
and
sbb
int
int3
jecxz
ret
cmp
xorb
daa
shll
push
roll
ljmp
or
mov
aaa
or
pop
pop
push
iret
outsl
dec
jb
xchg
lock
sbb
ja
dec
pop
add
movsl
cmp
shrl
je
push
cmp
sbb
test
insb
add
out
test
pop
rcr
add
repnz
inc
je
mov
cmp
jbe
cmpsb
adc
lcall
mov
rol
mov
push
xor
pop
push
lods
sub
xchg
iret
shlb
pop
fistl
mov
and
cltd
imul
mov
mov
push
out
mov
dec
and
into
and
in
add
cmc
loopne
xlat
lcall
cmp
add
dec
inc
into
cmp
mov
mov
adc
imul
imul
cmp
jl
sbb
outsl
jl
push
movsl
ljmp
fwait
cmp
mov
dec
jb
jns
push
sbb
cbtw
loopne
jne
add
and
inc
push
das
inc
push
int
bound
fiaddl
cs
xchg
push
lea
xor
pop
ds
inc
mov
push
mov
xorb
mov
or
or
in
and
and
jcxz
xchg
lcall
in
pop
mov
mov
cmc
mov
mov
into
fisttpl
in
ret
stc
lret
xchg
pop
nop
add
fsts
aam
inc
jo
clc
cltd
push
das
xchg
or
in
ret
int
jge
packuswb
adc
push
push
fistpll
mov
inc
lds
fsubrp
fwait
push
mov
scas
sub
test
lret
sbb
js
push
sbb
mov
je
dec
sti
add
pop
pop
cld
int3
pop
jmp
and
sahf
ljmp
imul
adc
push
add
push
and
fsubp
cmc
addb
cwtl
mov
mov
mov
data16
xchg
lret
sbb
lea
lods
clc
fimuls
adc
adc
add
dec
sbb
mov
jg
and
cmp
test
daa
sbb
jbe
mov
notb
and
dec
sbb
mov
push
cs
sbb
mov
push
cld
adc
mov
int3
loop
jge
das
iret
repnz
loop
scas
leave
jmp
push
andl
and
xor
mov
cmpsb
mov
pop
inc
repnz
jp
xchg
jnp
int3
enter
jns
sbb
scas
mov
dec
outsl
jp
movsl
adc
movsl
dec
sub
pop
sub
popf
repz
into
pop
pushf
stc
jne
sbb
icebp
fldpi
icebp
and
add
testl
notl
add
xchg
push
scas
pop
push
push
fstl
xor
ds
or
jno
jnp
mov
mov
add
aaa
and
mov
mov
xor
jl
in
push
pop
sbbb
xorb
xchg
inc
into
sub
pusha
in
sti
lea
mov
sbb
sbb
popa
popa
shrl
test
aad
mov
popf
sub
popf
cmpsb
stos
sbb
dec
rcrb
sbb
pop
lret
mov
jle
or
add
fmull
xchg
push
insb
daa
daa
arpl
cmpsb
dec
pushf
xchg
je
dec
inc
inc
push
and
sbb
mov
cwtl
mov
shrb
popf
add
dec
xor
pop
fwait
jne
movsb
imul
jmp
mov
mov
jns
leave
mov
jp
jecxz
cwtl
ja
popa
mov
xchg
mov
imul
icebp
out
mov
iret
or
imul
rcr
pop
add
andb
dec
add
cmp
popa
xchg
mov
loopne
mov
or
outsl
jbe
hlt
mov
clc
jno
out
mov
jne
push
adc
inc
xor
call
cmp
pop
aaa
push
int3
lods
or
inc
jg
inc
or
shll
jg
xor
fldt
sbb
mov
sbb
ss
mov
mov
mov
pop
iret
cwtl
std
xchg
sub
nop
test
div
xor
jo
and
jnp
aas
push
cmpsb
pop
je
aas
or
test
inc
mov
xor
pop
fistpl
insb
xchg
pop
xchg
sbb
jo
inc
pop
and
cld
out
sub
pop
inc
arpl
sahf
add
or
es
adc
jb
xchg
jb
xor
in
test
sub
pop
test
jnp
mov
scas
adcl
push
in
xor
and
movsl
add
imul
push
cmp
add
cmpsb
sub
sahf
gs
add
shrb
adc
inc
mov
les
outsb
test
movsl
jne
adc
pushf
lds
stos
inc
out
or
test
add
xchg
mov
push
sub
scas
jns
xor
cmc
and
xor
and
in
push
loope
outsl
push
sub
fstl
and
test
jl
out
xchg
and
inc
xor
pop
test
fwait
pop
pop
mov
mov
movsb
orb
pop
fld
out
mov
in
cmp
xchg
cmp
fcom
fldenv
ret
std
cmp
movsb
mov
sub
push
sub
fnstenv
mov
lea
mov
lea
out
jno
push
popa
mov
fwait
xchg
push
daa
and
mov
rorb
mov
ljmp
inc
cmpsb
cmp
inc
mov
repnz
xlat
sbb
ds
rcll
jg
and
ficomps
jp
ss
push
js
out
insl
jns
cmpsb
fcoml
xor
pop
fcomp
mov
adc
cmp
xchg
stos
cmp
jbe
fimuls
stos
imul
test
mov
ret
xchg
xrelease
gs
flds
jbe
and
push
inc
inc
cmpsb
cmp
sub
addr16
inc
jns
add
stos
lret
in
fdivr
arpl
push
dec
cmp
xchg
test
sahf
outsb
mov
insl
call
or
ficompl
pop
mov
arpl
jbe
in
outsb
cmp
xchg
rorb
pop
leave
add
int
or
gs
outsb
inc
push
imul
mov
push
and
mov
and
adc
lods
mov
push
fimull
cmpsb
dec
mov
jg
push
call
mov
mov
sbb
pop
xchg
stc
dec
in
cmp
jg
popf
xor
mov
int
movl
test
shrl
addr16
out
mov
jg
fdivp
jno
cmp
dec
nop
shrb
mov
hlt
or
adc
icebp
jo
adc
inc
decb
inc
xor
or
inc
jbe
push
jo
flds
addr16
dec
push
sbb
mov
pop
fwait
adc
stos
out
aaa
jo
adc
push
inc
inc
sub
mov
or
mov
inc
cmp
mov
jle
not
sbb
and
shl
push
sbb
andl
cmc
jne
mov
or
sbb
push
mov
repz
mov
sub
js
jg
jbe
fstl
seta
jae
adc
out
into
nop
sub
cld
notl
pop
movsl
pop
push
pop
cmc
cli
jmp
and
add
lret
in
into
movb
mov
nopl
sti
adcl
cld
sbb
fs
sbb
and
shr
mov
mov
pop
shlb
or
add
cmpsb
adc
sti
loop
jmp
push
divl
fwait
or
mov
or
cmp
lret
jae
pop
in
stc
aad
mov
out
sbb
xchg
ficomps
movsb
and
sbb
push
mov
mov
int3
in
call
loope
xor
dec
jge
fstps
lcall
adc
mov
or
pop
add
dec
mov
xchg
fnsave
adcl
inc
lcall
cmp
mov
and
les
push
xchg
fsubp
pop
inc
popf
clc
sub
add
push
mov
adc
xchg
add
cmp
pop
mov
pusha
push
add
adc
push
mov
mov
pop
lock
mov
sbb
sti
jae
mov
fldcw
out
jnp
add
imul
enter
add
ja
loopne
cli
xor
fsubrs
fsts
imul
fwait
pop
pusha
mov
push
out
inc
fs
lret
fldenv
mov
clc
cli
repz
in
js
xlat
jne
mov
pop
push
fst
xor
cmp
add
dec
cmp
outsb
dec
sbb
jb
repz
dec
pause
xchg
push
sti
int
ror
adc
ret
cmp
iret
ja
fcompl
inc
xchg
in
mov
aad
lcall
pop
adc
fistps
cmp
bound
jne
mov
fdivl
sahf
pop
push
cld
jno
mov
fcoms
jp
insl
and
mov
lods
fs
cwtl
mov
ss
and
dec
push
imull
call
mov
std
pop
sub
test
fnstsw
sbb
fcmovnbe
sahf
lahf
aam
andb
and
ret
sbb
push
ss
iret
ss
cli
aam
cmp
mov
movsl
adc
mov
jno
das
and
xchg
jb
add
sti
add
cmp
xchg
ja
mov
and
ds
mov
sub
jnp
jmp
cmp
cmpb
dec
adc
xor
rorb
mov
inc
subl
outsb
xlat
fiaddl
int3
int3
pop
out
inc
jge
icebp
pop
and
sub
dec
outsl
arpl
call
sbb
inc
mov
push
push
arpl
rorl
cmp
adc
fnstenv
mov
movsb
xchg
jl
lret
test
popf
mov
jbe
lahf
shlb
xor
ja
mov
sub
sbb
pop
xchg
scas
adc
fstl
cmp
push
ds
mov
shll
mov
stc
enter
gs
inc
hlt
xchg
jno
jmp
mov
frstor
jno
loop
loope
push
adc
aad
sbb
jne
add
and
inc
sbb
sbb
dec
mov
dec
xor
rcrb
adc
pmaddwd
cmp
sbb
movsl
ret
mov
mov
lret
push
std
add
frstor
cwtl
out
add
mulb
movsl
xor
and
outsl
ds
xor
jb
push
roll
sahf
div
and
xchg
adc
imul
repz
add
push
mov
cmp
ljmp
icebp
mov
jne
pusha
dec
mov
ds
mov
xchg
sbb
inc
dec
ds
inc
jmp
sahf
mov
sti
pop
cld
push
mov
add
add
xchg
test
int
into
cs
pop
popa
xor
sub
aam
ret
xor
add
and
int3
mov
es
cmp
lret
test
fwait
jns
rcrl
jg
hlt
xlat
jo
xlat
jbe
xchg
xchg
dec
xchg
cmp
cmc
mov
add
xchg
jge
scas
notl
arpl
iret
aaa
mov
popa
and
or
lods
ret
cwtl
xor
pop
filds
jne
push
roll
ret
filds
mov
imul
je
test
push
lods
xor
xchg
sub
loope
cmp
lods
cltd
icebp
daa
rorl
pop
clc
cmp
jmp
inc
adc
xchg
mov
inc
xchg
ja
adc
js
jae
push
popa
outsl
mov
cmp
pushf
xchg
jb
jmp
in
xor
or
aaa
pop
pop
xor
lahf
mov
jae
dec
loopne
xchg
scas
adc
pop
ret
rcr
mov
push
mov
scas
adc
in
jne
popf
mov
test
fs
xchg
insl
scas
shlb
pop
lods
mov
mov
leave
rorl
or
into
add
imul
dec
jb
jo
test
cmp
fwait
sub
mov
fldcw
or
dec
insl
dec
adc
pop
pop
jmp
push
pop
dec
int
adc
xchg
jne
push
xchg
dec
incb
js
and
inc
js
leave
popf
push
add
es
sahf
test
jno
or
dec
sbb
loope
xor
out
test
push
rol
or
push
lahf
xlat
sbb
mov
xor
mov
loope
or
dec
mov
xor
inc
in
js
ja,pn
aaa
mov
stos
daa
popl
jmp
mov
inc
jecxz
mov
outsl
pop
jl
mov
xlat
cltd
scas
aad
push
pop
movsl
sub
mov
clc
repnz
mov
cmc
out
or
sbb
adc
cwtl
sahf
lcall
push
ljmp
into
aad
sbb
je
jmp
sbb
mov
cmc
int3
inc
xchg
sub
sub
dec
daa
mov
mov
sbb
add
aam
icebp
xchg
xchg
ret
cmpsb
mov
jb
inc
pop
leave
test
stc
xor
dec
xchg
iret
push
mov
mov
lahf
inc
movsb
cltd
popf
icebp
sbbl
ret
ret
aaa
xlat
in
cmpsl
mov
sbb
dec
test
lret
pop
or
cmp
stc
or
fnsave
mov
add
pop
popl
and
test
or
fwait
test
jl
push
cmp
jae
pusha
shrl
and
add
dec
or
mov
cwtl
mov
es
sub
scas
bound
sbb
data16
clc
xor
xchg
imul
orl
int3
sub
add
xchg
jmp
pop
mov
imul
stos
lods
sbb
in
xor
push
add
lods
dec
loope
daa
or
inc
gs
inc
dec
ret
pop
sbb
scas
jge
xor
flds
xlat
push
sti
add
sbb
push
adc
mov
lds
jno
cwtl
lods
sbb
cmc
inc
sbb
shlb
mov
mov
fnsave
aad
test
jno
sti
addb
add
or
ret
sub
jno
dec
in
dec
movsl
push
inc
loop
leave
ss
cmp
cmp
add
ds
inc
sbb
xchg
testb
xchg
jns
ljmp
into
xor
loop
mov
les
insl
fistps
in
dec
push
insl
aam
push
test
mov
or
dec
xor
adc
sub
fwait
cmc
inc
cmp
and
jne
xchg
sbb
decl
jb
ret
inc
cmp
aas
sub
push
push
pusha
mov
add
mov
pop
dec
scas
lahf
mov
cmp
stos
jb
push
inc
mov
loope
repz
xchg
popa
jb
popa
push
popf
mov
add
dec
jp
pusha
adc
sbb
or
sti
dec
mov
das
test
cltd
inc
ficoml
sub
cltd
aad
imul
fwait
push
add
jo
pop
inc
sub
lea
leave
dec
cmc
mov
test
or
xor
jmp
scas
les
xor
jae
fwait
pop
lret
adc
xchg
mov
mov
push
dec
data16
test
pop
xor
addr16
out
mov
mov
mov
pop
or
leave
or
cmpsl
daa
pop
mov
mov
push
inc
scas
pop
ds
cmp
or
test
or
mov
test
stos
fsts
andl
cmp
jmp
repnz
mov
pop
push
dec
loop
or
add
or
jne
aam
in
sub
add
dec
call
sbb
jg
lahf
xor
loopne
jle
sub
push
iret
dec
sbb
sbb
mov
loope
add
mov
dec
and
mov
test
jae
les
iret
in
cmpsl
mov
sub
loope
flds
lods
add
xchg
int
lahf
sbb
push
fcomi
imul
jmp
pop
shll
dec
and
or
fcompl
pop
xor
or
in
andb
sahf
xlat
loop
xor
xor
hlt
sub
add
push
jb
or
adc
jbe
ja
sbb
cmpsl
xor
push
lods
push
xor
in
push
inc
pop
ss
mov
nop
mov
inc
mov
dec
sub
or
das
inc
movsb
pop
add
enter
pop
in
inc
jbe
popf
hlt
pop
mov
lcall
outsl
dec
shlb
dec
dec
mov
imul
inc
insb
lea
aad
sbb
pop
movsb
enter
mov
insl
call
cmp
pop
fstps
test
lock
fiaddl
fstps
lret
pusha
pop
dec
xchg
inc
cmp
or
pop
jo
cmp
fsts
out
jo
add
aad
adc
adc
xor
mov
rcrl
dec
lods
testb
jge
stos
pop
xor
scas
mov
fucompp
pop
xchg
arpl
adc
or
sahf
jno
add
les
xlat
mov
dec
cmc
pop
xor
pop
pop
push
push
jmp
pop
cs
pop
push
in
in
ret
shl
clc
dec
fs
pop
jne
mov
mov
push
stos
xchg
mov
jecxz,pt
push
ret
dec
pop
dec
push
and
jmp
xor
inc
jge
push
and
test
pop
aas
fs
xchg
mov
movsb
push
xchg
iret
mov
testl
inc
sub
pop
cltd
add
xor
add
aad
push
inc
mov
jnp
adc
xor
in
in
mov
cwtl
das
cmp
sbb
mov
pop
push
cmp
pop
xchg
xchg
sub
mov
lcall
pop
shl
mov
mov
popf
rclb
iret
xor
jl
cmp
inc
sbb
out
and
pop
sub
stos
in
add
mov
xchg
out
mov
leave
outsb
fstp
jbe
idivl
aaa
lods
clc
adc
sbb
cmp
imul
or
or
sbb
push
adc
cmp
inc
mov
ljmp
push
inc
rcrl
sbb
in
cltd
and
sub
jecxz
push
insl
dec
push
mul
jns
push
ret
push
lea
loop
cltd
jp
pop
fildll
scas
imul
test
add
shlb
or
inc
mov
cmp
mov
and
xor
add
imulb
push
out
or
lret
pop
int3
mov
icebp
ds
sti
aas
xor
das
std
and
mov
lea
int3
mov
imul
xor
incl
repnz
xchg
jecxz
adc
jecxz
repnz
mov
jbe
xchg
dec
repnz
sub
pop
jmp
jmp
pushf
dec
ret
imull
pop
jmp
int
cmpl
jle
mov
and
stos
btc
adc
xlat
dec
jnp
jmp
xor
fcoml
and
mov
data16
divl
jne
ss
xor
or
fwait
hlt
stos
xor
jg
arpl
pop
xchg
and
xchg
daa
lock
mov
or
aad
push
in
fninit
xchg
jg
enter
add
pushf
cld
mov
push
cmp
or
push
jmp
sub
sub
mov
lcall
cmp
test
sub
sub
es
cmp
ret
sbb
js
jb
mov
dec
fcom
ret
loopne
cmp
cmp
adc
and
mov
rorb
xor
stos
cmc
bound
test
jno
gs
aam
dec
or
lea
stc
push
cwtl
push
insb
imul
fdivrl
test
shl
sub
add
lods
adc
jno
mov
or
and
inc
je
mov
dec
inc
es
sar
into
and
cwtl
push
mov
repz
xor
dec
mov
xchg
dec
jp
push
mov
push
fsubp
aam
pop
loop
sbb
dec
lea
fwait
inc
push
call
ss
sbb
repz
jns
push
flds
mov
jmp
dec
jae
push
pop
gs
je
jmp
mov
subb
loop
fs
mov
fmul
dec
jnp
xchg
xabort
jne
pop
test
inc
pop
int
sbb
pop
xor
in
arpl
sub
test
int3
call
xchg
out
test
cmp
lcall
push
ljmp
stos
scas
or
or
push
xor
int
xchg
cld
sub
xchg
fimuls
dec
inc
mov
int3
sarl
ss
inc
xchg
jns
mov
lods
mov
jae
inc
mov
mov
ror
test
fisubl
ss
lret
inc
js
bnd
fsubrl
mov
in
jmp
rcrl
adc
cmp
xchg
ss
mov
data16
xor
inc
lock
insb
outsw
cmp
imulb
ss
cld
out
bound
dec
jmp
into
sub
mov
pop
sti
mov
repz
add
adc
inc
movsb
imul
push
sub
std
fs
push
mov
jne
xor
iret
dec
imul
sub
xchg
push
fnsetpm(287
pop
sbb
repz
xchg
test
shrb
mov
mov
insl
xchg
pop
adc
loopne
and
inc
mov
sub
aad
jl
pop
lods
imul
loopne
and
jno
rcrl
mov
cltd
and
xchg
mov
ret
and
int
mov
push
mov
inc
into
mov
out
repnz
cmpsl
pop
out
shrb
sti
inc
xor
or
stc
stos
pop
push
sysenter
sub
mov
gs
mov
add
js
int3
dec
push
dec
pusha
inc
jnp
dec
fimull
mov
das
add
lcall
mov
iret
int
jge
push
push
lret
in
dec
mov
sti
xchg
dec
bound
xor
or
inc
out
push
jns
xor
xchg
sbb
shlb
sub
xor
and
cwtl
xchg
mov
xchg
je
test
xor
rclb
sub
dec
xchg
into
fs
sahf
push
dec
pop
or
pop
mov
cmp
testb
inc
jl
sbb
mov
cwtl
push
scas
lcall
xchg
fsubs
call
daa
xchg
lock
call
dec
faddl
insb
and
inc
scas
pop
cmpsb
lcall
mov
sub
or
sbb
out
dec
gs
pop
or
push
stos
jecxz
int
arpl
pop
xor
mov
push
cld
sbb
stos
cwtl
pop
stc
and
sbbb
punpcklbw
xor
roll
inc
fcmovne
pop
cmp
out
mov
rolb
jp
mov
sub
sub
ja
ja
cmp
test
adc
mov
or
aam
mov
cwtl
repz
mull
es
or
xor
pop
das
cmp
clc
je
adc
pop
scas
push
call
testb
call
fwait
pop
push
xor
push
lods
sti
xchg
xorl
jb
mov
test
mov
or
cmp
jge
push
movsl
adc
push
hlt
pop
sbb
pop
jns
push
mov
jmp
inc
call
push
cmp
aam
ja
cmpsb
dec
cmpsb
loope
lea
xchg
jo
je
stos
and
ror
mov
int3
int
cmp
sbb
and
outsb
mov
push
xor
scas
add
xor
mov
loop
push
mov
xor
jle,pn
gs
ljmp
lcall
jmp
dec
mov
data16
inc
js
mov
xchg
add
jmp
jne
dec
jno
lret
movsb
jecxz
std
push
and
xchg
mov
cli
loopne
and
hlt
xchg
orb
out
xchg
adc
sub
popa
incl
xlat
sub
aas
adc
nop
adc
cmp
lret
mov
frstor
insl
orl
outsl
push
int
shrb
and
ds
xchg
add
add
shl
mov
dec
neg
mov
xchg
sbb
mov
repz
test
fsincos
js
data16
or
sbb
cs
test
mov
mov
mov
sbbl
loop
or
clc
mov
push
jmp
pop
jmp
hlt
or
fdivr
jbe
pop
popa
fnstsw
xor
adc
dec
and
adc
daa
adc
repz
insb
mov
js
es
inc
frstor
movsb
pop
fsubrs
pop
mov
bound
cmp
pop
out
sbb
cmpsb
and
sahf
into
scas
dec
fmulp
rcrb
cmpsb
out
out
push
in
push
aad
aas
repnz
xchg
xlat
fs
pop
push
sti
jmp
sbb
push
fwait
inc
lahf
mov
loope
fistl
xor
fisubl
scas
into
ss
in
cmp
jae
aad
data16
push
jb
lods
xchg
iret
call
fs
cwtl
pop
cmp
sub
sbb
mov
into
mov
and
js
jmp
cmp
int3
lcall
pop
inc
mov
cs
dec
dec
sub
movsb
push
fsts
push
dec
xor
sub
ja
cmpl
imul
leave
test
push
jae
adc
mov
mov
cmpsb
mov
xchg
push
mov
push
stc
in
push
fsubrl
imul
lods
dec
pop
adc
mov
fsubl
cltd
out
jne
frstor
xor
roll
mov
imul
testl
lds
ud2
mov
and
movl
call
fwait
stc
adc
pop
lds
add
fldenv
sub
mov
cmpsl
out
inc
add
mov
add
sbb
mov
std
mov
test
pop
mov
cmovbe
fiaddl
pop
pop
jae
xor
adcb
cmp
popa
sub
cmp
jns
jp
sti
in
cmp
xchg
movsb
cmp
mov
lock
out
cwtl
xchg
inc
hlt
sub
xor
int3
dec
iret
dec
popa
push
rorb
sub
push
insb
ss
or
adc
mov
mov
jl
das
add
mov
sahf
daa
hlt
mov
mov
lret
mov
sub
xor
frstor
pop
lret
sbb
mov
jl
jno
dec
lds
aas
aam
loopne
cli
mov
or
pop
ss
movsb
pop
sub
mov
fs
pop
mov
aad
out
pop
mov
test
or
imul
fidivl
inc
jo
ljmp
pusha
fistps
mov
lods
std
fcmovne
mov
ss
lea
pop
aaa
in
ret
loope
mov
or
mov
push
jo
imul
in
incl
es
movsb
pop
shrl
xlat
or
stc
lahf
xchg
pop
sbb
ror
mov
jecxz
faddl
inc
and
jmp
push
jge
in
jp
xchg
cmp
pushf
cmp
inc
dec
sbb
fistl
sbb
enter
mov
popa
outsl
jns
jae
mov
sbb
fsubl
mov
loopne
or
insl
sub
outsb
mov
pop
mov
ljmp
icebp
aaa
mov
lods
rcrl
aad
addr16
add
push
jns
sub
lods
jb
adc
cli
dec
out
xorb
pop
out
sbb
in
out
jecxz
fsubs
jmp
lods
mov
lock
inc
dec
cmpsl
sbbb
adc
add
testl
jle
dec
pop
xchg
int3
arpl
jmp
mov
push
stos
lods
push
xor
out
cmp
dec
mov
iret
inc
in
aaa
mov
pushf
pusha
lret
sub
cltd
or
pop
or
adcb
push
ret
pop
pop
dec
cmp
xchg
rcll
push
mov
imul
and
rol
loope
shll
xchg
inc
fildl
lock
es
mov
inc
adc
cmpsl
or
pop
mov
fwait
out
sub
add
sub
xor
cmp
adc
fldt
rcr
xor
imul
shll
arpl
ss
add
sbb
outsl
daa
popf
mov
and
popa
lock
push
and
andb
lea
sub
fistl
pop
and
out
daa
dec
mov
mov
jl
push
iret
das
xchg
push
in
hlt
sbb
pop
movsb
jne
sbb
fcmovnb
xchg
into
into
xchg
lds
and
jb
call
mov
mov
das
jp
jno
nop
jp
gs
dec
pusha
dec
pop
xchg
rcrl
inc
rolb
add
pop
lods
dec
sbb
dec
repnz
das
dec
push
mov
jge
lret
mov
jl
fucom
mov
insl
fisubs
or
pusha
add
push
add
out
inc
mov
in
out
xchg
in
fmull
scas
inc
cs
sarb
xchg
es
pop
rorl
pop
pop
xchg
and
mov
adc
insb
xchg
lret
xor
cmp
sub
xchg
dec
xchg
pop
mov
test
push
in
ret
and
test
fsubrl
sbb
mov
mov
das
test
idiv
or
int3
dec
dec
pop
fisttpll
lret
pusha
push
mov
data16
xchg
mov
addl
push
adc
add
pushaw
xor
in
mov
mov
pop
shrl
test
das
cmpb
mov
loope
mov
sub
sbb
push
in
push
inc
sahf
add
push
adc
cmp
out
cmp
mov
jo
movsl
inc
jmp
xor
jae
mov
xor
xchg
aas
cmp
dec
jmp
cld
or
das
loop
subl
push
dec
out
sub
movsl
rclb
ds
lret
in
adc
lea
sub
pop
aas
sub
dec
or
cmp
lods
inc
xchg
xor
testl
fldenv
jmp
inc
adc
pop
dec
jg
pop
dec
out
sub
xchg
and
and
and
inc
pop
jl
xor
mov
test
es
jge
and
loop
int
fadds
jb
push
push
bound
popa
mov
mov
push
pusha
or
cmp
push
hlt
aam
ss
sbb
push
scas
cmp
adc
xor
or
loope
fs
sbb
cmc
sahf
mov
in
ja
mov
bound
ljmp
inc
shl
repnz
mov
std
int
pop
mov
xchg
out
jge
stos
xor
enter
cmp
call
and
push
sahf
addr16
push
aas
pop
outsl
push
test
xchg
pop
inc
inc
inc
xor
jae
push
and
mov
and
add
dec
cs
mov
outsb
insl
lock
out
dec
dec
aaa
push
in
ljmp
insb
das
inc
and
adc
out
out
sub
test
xor
cmp
aaa
jmp
gs
test
div
repnz
pop
inc
int3
fmuls
pop
adc
inc
lods
xchg
cs
xchg
mov
pop
sahf
adc
dec
call
adc
cmp
cmp
movsb
cld
and
push
scas
dec
bound
xor
pop
push
mov
pusha
test
rclb
pop
stos
loope
xchg
xor
sbb
xchg
fs
aaa
test
sub
inc
push
mov
sbb
add
add
push
xchg
mov
clc
loop
and
aam
pushf
jo
aas
gs
dec
adc
pop
or
jge
outsl
repnz
add
or
stos
push
inc
movsl
scas
arpl
int
lcall
adc
adc
mov
mov
lgdtl
test
cmpsb
iret
out
jns
mov
fildl
popf
pop
stos
dec
push
arpl
fildl
outsb
cmpsb
sti
or
pop
aad
xchg
ja
add
mov
rclb
jae
mov
aaa
lsl
jno
push
shll
add
xor
mov
hlt
repz
cli
sbb
int
and
int
jge
pop
fbld
popa
outsl
test
mov
rorl
mov
adc
mov
std
sbbb
mov
pop
je
cmp
xchg
inc
ret
xchg
cmp
sub
lcall
imul
pop
mov
jnp
out
xchg
and
jl
cmc
jae
pusha
mov
cmp
movsb
sub
inc
iret
push
out
lcall
orl
mov
sbbb
cmc
pop
mov
dec
mov
pop
jp
jae
stos
and
ret
inc
les
lret
or
mov
repz
sahf
or
mov
and
aas
inc
call
dec
sti
je
ficoms
cmp
stos
aam
scas
sbb
cld
xchg
inc
idivb
adc
mov
insb
push
push
inc
fisttpl
pop
gs
scas
call
xchg
pop
test
stc
outsb
pop
or
push
mov
imul
dec
negl
mov
adc
pop
push
sete
mov
mov
mov
lcall
adc
cmp
enter
adc
cmpsl
xor
sahf
hlt
in
test
fidivrs
aas
movsb
add
xlat
dec
mov
cmc
ret
mov
outsl
pop
and
loop
fsubl
cli
fisttps
stos
scas
mov
leavew
pop
shl
aaa
jb
xchg
cmp
addb
cmp
psubsw
mov
rorb
pop
and
xor
dec
out
jg
cmpsb
leave
arpl
xchg
and
jg
cmp
push
stc
and
and
lahf
outsl
add
mov
out
cmp
add
sahf
push
xchg
pushf
loopne
stc
xor
scas
shlb
movb
not
out
js
xor
rolb
js
mov
jle
lahf
dec
lods
ss
or
mov
lahf
cwtl
mov
lods
adc
arpl
lret
loopne
xchg
ds
in
mov
jnp
sub
xor
ret
mov
sub
push
popa
push
ret
scas
xchg
push
push
mov
and
je
nop
ret
inc
mulb
repz
jge
jp
in
sbb
cmovnp
push
sub
adc
mov
lret
mov
mov
lods
xchg
outsb
jecxz
mov
add
test
push
cmp
push
cmc
lds
enterw
push
popa
out
sub
loope
push
dec
in
jnp
add
rcll
xchg
lods
je
shlb
into
or
push
or
ret
scas
test
jno
dec
or
popf
sbbl
push
push
add
and
loopne
add
xchg
pop
fdivs
jbe
cltd
int
cmp
add
ret
push
xorb
pop
pop
in
in
js
icebp
sbb
adc
loop
nop
sub
arpl
mov
mov
arpl
adc
sub
imul
or
jae
sbb
push
add
jb
test
push
jb
mov
ss
xor
subb
sub
mov
mov
hlt
cltd
and
sbb
shl
mov
fisubrs
mov
xchg
ds
pop
sub
fimuls
shlb
test
je
enter
int3
sub
scas
and
jg
cmp
push
dec
hlt
xchg
jne
aas
xchg
xchg
adc
test
sbb
xor
ret
lahf
sti
adc
sbb
arpl
outsb
add
xor
sub
cltd
adc
stos
or
mov
lds
imul
jge
das
ss
jmp
mov
sub
mov
xchg
dec
push
int
dec
push
aad
fbld
push
or
jno
cmp
jne
ljmp
mov
dec
les
push
imul
dec
xchg
loope
sbb
add
ds
jne
jns
hlt
ds
ret
xorb
xchg
pop
fiaddl
js
jno
mov
loopne
popa
xor
adc
subb
jp
pop
push
je
arpl
and
sub
loope
sbb
mov
inc
xchg
add
iretw
out
pop
fadd
sub
fmull
inc
add
aaa
push
dec
push
sub
jg
pop
sub
mov
aaa
ss
fsubrs
outsl
ror
scas
mov
test
and
cmp
jae
fwait
loop
adc
popf
cmpsl
mov
and
push
mov
dec
fstps
jno
jbe
mov
jecxz
xorb
loopne
push
mov
arpl
subl
push
sbb
js
stos
es
repnz
call
ret
test
pop
sti
sub
loope
push
adc
cmp
mov
jbe
ret
stc
sti
ss
sub
push
popa
xchg
stos
mov
cmp
xor
mov
xlat
sub
xchg
ficompl
add
shrl
inc
ja
push
dec
adc
orb
negb
pop
xchg
jae
outsb
push
inc
icebp
and
sbb
cmp
xchg
movsb
sub
test
sahf
jns
mov
cmp
ja
and
hlt
cmp
shrl
inc
and
int3
adc
fisttpll
idivb
xchg
jl
testl
out
xor
dec
nop
mov
mov
cmp
adc
xor
imul
stos
push
push
pop
scas
cmc
fs
cli
mov
testl
lods
in
sbb
mov
movsl
adcl
xchg
icebp
mov
mov
ss
hlt
push
push
or
in
mov
mov
add
cmpsl
adc
mov
gs
andb
imul
xchg
leave
orl
pop
pushf
fidivrs
repnz
xchg
pop
shl
loop
movsb
and
pusha
dec
aaa
jnp
jo
xor
in
in
cmpsl
fldt
mov
cmp
xchg
es
scas
pop
out
test
cltd
xorb
cmc
or
and
cli
xor
cmp
lock
sbb
mov
inc
pop
xor
mov
aaa
cli
cmc
mov
ds
lret
xor
pop
sbb
push
pop
jl
ss
inc
cmp
sbb
and
lahf
fisubrl
insl
add
cltd
jbe
into
das
test
sbb
cwtl
dec
repz
sbb
push
sti
cmp
jl
or
lock
mov
push
ret
cmpsb
popf
mov
pushf
jg
arpl
gs
cmp
out
inc
jp
jp
test
jg
or
or
jne
jbe
ficoml
sub
test
dec
ret
adcb
int3
jmp
xchg
dec
mov
std
jno
lret
ret
jp
xchg
stos
and
sarb
gs
in
pop
push
stos
xor
mov
std
xchg
decb
cmp
dec
cltd
mov
fadds
adc
and
xor
cmpsb
lret
test
bound
loopne
cmp
sbb
pop
imul
inc
adc
mov
cltd
mov
mov
mov
jno
jae
xlat
cld
fs
xchg
movsb
push
push
iret
ljmp
fs
mov
bound
scas
sbb
arpl
sub
insl
inc
movsb
sub
cmc
ret
adc
ljmp
stc
lahf
stos
add
inc
lcall
mov
add
pop
into
dec
push
push
in
mov
adc
or
aas
cmp
pop
je
xor
fldcw
sub
insb
daa
aas
arpl
popf
dec
fstps
in
add
sub
push
imul
test
sub
jne
imul
xchg
sarb
sub
stc
lcall
mov
lods
jmp
adc
lock
rclb
clc
jmp
ss
sbb
cli
shll
push
std
cmp
mov
mov
lahf
mov
xor
xor
repnz
add
sbb
push
stc
pop
data16
xchg
fcmovb
aaa
movb
jae
sbb
pop
into
cld
mov
inc
mov
mov
xchg
sub
jne
stos
mov
xchg
js
out
test
dec
mov
mov
jae
mov
push
sub
cmp
mov
cs
aas
stos
fimuls
rcll
out
mov
or
ret
or
adc
push
push
adc
xor
daa
pop
dec
inc
int3
mov
repnz
gs
or
mov
fdivr
push
xchg
mov
mov
push
out
mov
adc
jno
jae
testl
push
scas
mov
push
inc
mov
hlt
sbb
push
dec
pop
add
in
subb
inc
cmp
cmp
imul
and
mov
call
jge
call
lahf
mov
fisubs
jne
cmp
xor
ss
hlt
ljmp
out
les
daa
dec
mov
enter
orb
cmp
fisubl
mov
add
ja
pop
mov
fsubrs
out
push
shlb
stc
xor
subl
mov
call
les
cmovne
jbe
xchg
gs
xor
dec
dec
clc
cmp
mov
adc
addr16
mov
int3
mov
mov
orb
xor
jge
cmp
jae
mov
fadd
xchg
mov
push
ret
add
mov
loop
daa
mov
or
jno
div
ficompl
cmovge
shlb
into
mov
mov
int3
jno
cmp
popa
in
mov
mov
xchg
data16
pop
lds
mov
fcomi
dec
push
dec
inc
mov
sti
xchg
outsl
push
popf
sbb
fildl
sbb
gs
sbb
xor
ret
pop
popf
xor
out
clc
lahf
mov
dec
shll
pop
mov
shrl
shrb
aad
pop
jmp
sbb
imul
dec
mov
push
mov
xor
cwtl
mov
push
pop
cltd
mov
leave
pop
add
insb
shlb
dec
or
popa
cmp
fwait
sahf
push
lds
sub
outsb
adc
repnz
jo
lock
int3
and
test
popf
inc
movsl
xchg
mov
inc
push
xorb
lods
inc
xchg
jo
or
push
daa
ficoml
cmp
adc
jns
stos
push
mov
stos
sarl
cmp
adcb
dec
push
adc
std
fst
lds
data16
mov
cmpsb
adc
sub
push
repnz
and
sbb
mov
push
nop
fstpt
mov
pop
fsqrt
ljmp
pop
enter
xchg
inc
adc
jae
scas
xchg
ficoms
repz
dec
out
add
mov
xchg
addr16
xchg
outsl
movsl
jle
imul
in
pop
imul
adc
vminpd
imul
inc
ret
pop
and
cmpsb
pop
cmp
stos
and
inc
mov
sti
out
movsl
outsl
subb
mov
shll
adc
addl
mov
test
xor
daa
jle
xchg
jbe
lods
dec
bound
sub
shrl
sub
out
mov
xchg
fwait
jns
je
stos
inc
push
or
sub
mov
xchg
or
lock
push
push
cmp
sub
int3
inc
ret
and
movsl
mov
fstl
dec
xor
pusha
sti
fxch
pop
cs
cmpsb
lcall
movsb
notl
and
dec
add
test
jbe
les
ja
mov
cmp
pop
push
cmp
nop
jb
pop
pop
pop
inc
push
sub
adc
roll
mov
pop
ja
cltd
cld
xor
rcll
mov
nop
insb
dec
dec
pop
pushw
insb
xchg
in
jne
lea
push
insl
push
cmp
std
insb
and
fwait
outsl
out
pop
or
jge
add
add
fisubrs
iret
or
daa
push
xchg
sbbb
xor
shrb
adc
in
cltd
add
daa
jp
jnp
xchg
inc
mov
xor
push
add
insb
xchg
std
scas
add
mov
mov
xchg
inc
fidivrl
push
std
lcall
sub
adc
adc
ds
gs
orl
leave
test
fwait
inc
xor
hlt
and
sarb
xchg
loop
sub
sub
loope
out
adc
test
scas
add
mov
push
fstp
add
lods
jbe
add
popa
sub
ss
jge
xchg
mov
push
mov
sub
imul
dec
lock
or
aas
in
inc
cmp
and
out
jo
aaa
inc
and
dec
ret
inc
or
notb
add
inc
cmp
push
arpl
xchg
xor
sarb
les
push
adc
sbb
dec
and
jae
jo
or
xchg
jge
insb
mov
stos
sbb
fidivrl
xchg
sbb
out
cld
pushf
or
imul
pop
lods
rcll
sti
adc
sub
pop
into
test
mov
and
loopne
xlat
cs
jb,pn
clc
fdiv
les
aaa
lret
inc
outsb
pop
fcoms
inc
ficoml
xor
push
hlt
cmp
cmp
push
push
mov
cmp
xchg
aad
mov
pop
cmpsl
add
je
pop
mov
mov
imul
rcl
jno
test
sub
mov
in
xchg
movsb
pop
aam
test
mov
mov
movsl
cs
leave
inc
dec
leave
cvtdq2ps
pusha
inc
add
in
ret
out
dec
pusha
jo
mov
out
and
add
test
jae
scas
dec
jnp
adc
mov
lds
add
ret
nop
aad
pop
or
test
nop
mov
mov
xor
ret
push
cmpps
cmc
mov
push
mov
das
shll
sub
outsb
sub
pop
out
inc
cltd
dec
sub
mov
cmpsb
push
jge
mov
unpcklps
or
cmp
jb
cmp
pop
mov
cs
movsb
and
pop
rol
ja
lret
inc
cli
cmp
in
cmc
jns
lea
fbld
add
ljmp
cltd
mov
aas
inc
or
jmp
lahf
pop
aaa
and
cwtl
aad
xor
dec
dec
pop
dec
mov
add
cmp
ljmp
and
push
repnz
js
outsb
jle
ds
mov
mov
lret
test
enter
cmpsb
test
mov
loopne
ljmp
mov
test
cmp
repz
mov
int
or
push
mov
fdivrl
mov
cld
jae
jg
mov
andl
pop
jmp
das
std
add
sahf
push
adc
cmpsb
ret
and
pusha
std
je
lea
mov
sbb
or
push
arpl
mov
jle
fmuls
cld
in
in
add
mov
jmp
adc
push
inc
xchg
mov
add
dec
mov
adc
repz
hlt
out
xchg
cmp
and
int
pop
dec
xor
loope
scas
mov
fwait
dec
test
or
mov
repnz
fwait
mov
hlt
push
js
inc
enter
pop
jae
test
pop
push
mov
les
adc
and
dec
xor
xor
cmp
cwtl
std
arpl
mov
data16
iret
test
sbb
ret
cmp
pushl
jb
adc
shrl
add
test
and
push
inc
test
cmp
sub
sbb
jb
sub
dec
or
mov
xchg
xor
pop
mov
jge
sbbb
dec
test
out
or
xorb
jg
test
movsl
pop
int
imul
pop
cld
jecxz
fnstenv
cmp
shll
notl
stos
push
push
push
lea
incb
mov
sbb
arpl
add
pop
cmpsl
rcrl
pusha
loop
dec
cli
cmpsl
fstl
xor
adc
adc
xor
inc
shll
inc
sarb
cmpsl
test
ljmp
mov
mov
mov
out
mov
nop
cli
hlt
sbb
mov
add
dec
xchg
and
push
mov
mov
cmp
inc
or
scas
pusha
popa
and
jl
pop
lods
sti
mov
cmp
mov
into
sbb
out
sub
ja
fldcw
mov
in
hlt
stos
sahf
push
popa
push
add
push
jg
pop
daa
int
dec
mov
push
lds
push
aam
aam
sarb
mov
mov
cmp
rorl
aas
movsb
dec
dec
cmp
arpl
sbb
mov
popf
cmp
arpl
test
stc
mov
iret
or
leave
sti
repz
inc
ljmp
sbb
rcl
addr16
bound
scas
shlb
shlb
cmp
out
mov
pop
fmuls
cmpsb
and
adc
mov
inc
jge
inc
nop
mov
mov
dec
lahf
scas
orb
jecxz,pn
movsl
pop
mov
notl
mov
imul
adc
lret
and
mov
cli
lahf
data16
inc
push
jge
cwtl
mov
andb
mov
vandps
aas
lret
pop
or
mov
ror
test
fwait
scas
loop
or
movsl
rcrl
jnp
dec
mov
fcompl
arpl
mov
sub
es
fisubs
cmc
jge
shlb
cmc
test
std
adc
lds
cmp
cld
push
jo
call
pop
jmp
xlat
add
adc
and
ss
sbb
mov
xchg
into
out
jns
daa
addr16
and
mov
fidivrl
or
jl
xor
popf
movsb
sbb
lods
cli
xor
in
aas
mov
mov
leave
nop
notb
lods
lret
insl
js
ss
lock
rorl
xchg
aas
fbstp
jmp
cmc
xorb
scas
mov
dec
or
xor
ret
xor
mov
fcomps
cli
stc
test
sub
hlt
jnp
sbb
or
xor
popf
pop
out
movsb
fs
mov
fadds
aaa
dec
ficomps
cmp
fisubs
ficoms
jo
dec
ljmp
je
and
gs
mov
xchg
loopne
pmulhw
aaa
ljmp
add
mov
and
fsubrl
popa
sbb
inc
xchg
bound
pop
sub
iret
cmp
lods
mov
in
or
std
jecxz
jmp
bound
dec
add
and
inc
mov
insl
sbb
cs
sti
loopne
push
or
pop
aaa
xchg
fstps
arpl
cmp
jmp
mov
xchg
add
push
les
rclb
mov
mov
shl
inc
movsb
sub
daa
insb
scas
adc
xor
xlat
cmp
fldl
mov
cmc
mov
cmpsb
fildl
xor
mov
nop
jae
jne
or
ss
push
lret
xor
push
les
sbb
xor
xchg
int3
jnp
xchg
and
mov
enter
iret
rclb
insl
in
push
fistpll
in
std
out
je
sbb
lea
fcmovb
jl
int3
adc
adc
mov
mov
inc
js
gs
xchg
jmp
mov
push
das
pop
clc
mov
xor
es
nop
sbb
mov
popf
pop
add
in
or
xor
inc
xchg
mov
stc
cmp
stos
sub
jl
pusha
enter
push
psubw
cmp
jecxz
fldt
repnz
jecxz
das
sahf
imul
sbb
repnz
hlt
outsb
cwtl
aad
push
inc
daa
sahf
inc
imul
mov
int3
insl
adc
jne
mov
fdivl
out
lods
xor
xor
imul
adcb
push
push
pop
xor
outsb
mov
stos
cmp
xor
cltd
cmp
sarl
xchg
adc
jmp
add
sarl
mov
ds
lret
xchg
pop
sub
or
rorl
js
cli
pop
test
pusha
jmp
scas
fwait
outsl
and
aas
in
mov
mov
fidivl
jmp
ret
in
mov
push
xor
sti
lods
and
xchg
sub
inc
inc
or
enter
mov
inc
cmp
enter
jnp
or
push
adc
xorb
dec
sub
adc
imul
call
enter
gs
inc
sbb
sub
in
mov
das
ljmp
xchg
in
dec
iret
les
pushf
rorb
push
cmpsb
pop
dec
jg
fs
sub
lods
lea
xlat
cmpsl
mov
dec
das
shrl
rcrb
mov
adc
addr16
clc
out
jno
mov
add
cmp
in
adc
int3
sbb
je
in
xchg
mov
xchg
lods
cmp
inc
push
das
mov
and
gs
push
cmpsb
add
add
cltd
jp
xor
xchg
sbb
and
lea
pop
dec
jnp
add
inc
fcomps
stos
ja
dec
add
imul
fistl
inc
iret
pop
add
dec
rcr
or
in
push
xchg
and
inc
mov
sbb
mov
shr
and
arpl
ja
test
cmc
mov
fsubr
mov
sbb
add
aad
xchg
or
cmp
pop
jb
push
loop
mov
fildl
xor
sbb
mov
cmp
popa
popa
jne
or
fstpt
xor
push
mov
fcmove
add
push
shr
pop
adcb
push
mov
jge
mov
xchg
pushf
inc
sbb
cld
hlt
xchg
repnz
lret
stc
popf
rcrl
fcomps
pusha
lcall
push
lcall
and
inc
inc
inc
shl
adc
inc
cmpsb
pop
push
leave
ljmp
pop
lret
sbb
cld
ljmp
adc
xchg
jecxz
jae
push
mov
aam
aaa
in
sbb
mov
lods
fdivs
jb
bound
cmp
mov
out
mov
es
jge
lret
jb
ljmp
lret
cld
lds
sar
fistpll
mov
jno
mov
cmpsl
cld
adcb
sbb
and
push
cli
jecxz
fidivrs
sar
leave
loop
add
push
xchg
shlb
and
cltd
mov
cmp
inc
push
mov
sbb
ret
add
dec
mov
sub
dec
rolb
pop
add
mov
cmp
movsl
jecxz
and
enter
mov
cmp
test
cmp
out
cmp
push
push
popf
xor
sbb
ret
dec
insl
daa
mov
jb
stc
dec
and
sub
pop
icebp
fstl
push
pop
and
dec
jns
popf
dec
loope
dec
test
or
cmp
dec
or
sti
mov
ss
test
sbb
shlb
mov
and
fs
std
or
test
inc
push
cmp
xchg
dec
xchg
popf
lock
adc
xor
out
int3
clc
pop
out
gs
insl
xchg
xchg
xlat
xchg
ljmp
movsb
ret
push
mov
sub
in
aas
jnp
popf
inc
aam
sbbb
in
and
inc
ret
pop
movb
fldcw
fadd
sahf
push
adc
loopew
cmp
out
in
aam
hlt
test
sub
fisubrl
inc
ja
call
std
adc
cmpsl
hlt
mov
movsb
xor
hlt
cmp
lock
in
outsb
insb
loope
stos
jle
dec
sub
das
lret
into
in
push
lock
loope
decb
pop
ds
scas
sti
ljmp
xchg
and
sub
out
add
and
pop
sbb
lret
push
inc
rolb
fcoms
stos
out
lcall
pop
sbb
pop
mov
inc
dec
repnz
xchg
cs
push
jmp
dec
loopne
adc
mov
cmp
dec
loope
xor
cmp
or
les
mov
mov
xor
cmp
mov
sbb
push
mov
imul
sbb
jmp
loop
or
push
js
repz
jp
inc
fimuls
fcomps
inc
sub
dec
loopne
mov
sbb
in
jno
mov
outsb
mov
push
ret
inc
add
loopne
call
pop
jbe
les
add
out
add
pop
je
sbbb
pusha
mov
jno
cmp
push
popa
jnp
pop
or
call
sbb
lret
inc
push
imul
sub
pop
jne
repz
subb
adc
out
ret
aad
dec
int
lea
mov
lods
lods
shll
adc
lret
lret
xchg
sti
jmp
pop
ja
pop
int3
xchg
ja
jl
add
fsub
jo
xor
lea
icebp
roll
push
jmp
fstpl
call
loopne
out
cmp
aas
mov
cmp
es
push
ret
leave
or
mov
mov
lock
inc
sub
rclb
mov
pop
scas
sub
xchg
nop
lds
stos
gs
addr16
push
lods
test
push
sbb
add
jmp
jae
xchg
dec
push
and
sub
mov
pop
mov
mov
mov
movsb
movb
aad
xor
out
test
shlb
std
sarb
lret
outsl
aaa
fdiv
jbe
int
movsb
aaa
aaa
mov
stos
mov
pop
jbe
mov
add
add
clc
aam
fsts
sti
mov
lods
cmc
mov
stos
mov
scas
inc
sbb
jp
out
lret
scas
sbb
mov
mov
rep
arpl
fstl
inc
pop
mov
xchg
jge
scas
mov
pusha
test
dec
sbb
paddb
push
pop
imulb
leave
jno
lods
dec
push
xor
int3
sarb
dec
icebp
push
pop
push
ficoms
xlat
jmp
lea
popa
clc
in
pop
cli
mov
cmovno
lods
scas
jo
insb
and
mov
rcrl
fisubs
jae
test
rorb
inc
inc
sub
lahf
int3
dec
cltd
rcl
cmpsl
add
leave
out
mov
mov
and
pop
jge
sbb
in
xchg
mov
adc
inc
pushl
adc
mov
and
int3
lods
sbb
mov
aam
out
imulb
dec
dec
cmp
cmp
es
xor
insl
lea
andb
push
lahf
mov
xchg
mov
movsb
out
jae
push
xchg
outsl
xchg
xor
lods
enter
pop
pop
scas
fsubr
xorb
mov
dec
and
push
sti
sti
stos
arpl
push
daa
pusha
dec
and
pop
lcall
sub
rcr
repz
xchg
or
mov
ds
outsl
or
mov
or
jecxz
pop
clc
sbb
push
mov
js
jo
xchg
iret
flds
enter
mov
xor
dec
push
popa
or
cmpsl
ret
xchg
ficompl
insb
cmp
clc
xor
xchg
mov
inc
mov
sbb
ror
xchg
leave
shl
shl
mov
fs
and
aad
enter
stc
shll
adc
xor
loopne
xchg
jp
sub
cmp
neg
out
mov
repz
sbb
mov
cmpsb
mov
mov
clc
dec
fdivl
xchg
ss
clc
insb
mov
cltd
lcall
sti
out
stc
fdivrs
fucomip
out
pop
pusha
jmp
jne
jo
mov
addb
andl
movsb
jle
inc
inc
movsl
movsb
mov
and
sbbb
test
xor
into
pop
pop
add
lock
dec
xchg
xor
jg
das
es
and
ljmp
sbb
fnstenv
rcl
sbbl
jmp
cmp
pop
je
pop
jp
popa
rcll
xchg
test
fcmovb
xor
mov
sbb
insb
jb
ljmp
mov
pop
mov
and
push
imul
out
or
sahf
mov
leave
mov
notl
xchg
adc
inc
dec
stos
mov
insl
and
cs
cltd
push
aas
sub
ret
daa
es
pushf
fldcw
mov
sub
dec
sub
xchg
xchg
inc
dec
cli
pop
xchg
fwait
jmp
mov
sahf
lods
and
add
pusha
in
push
jg
push
fsubs
push
and
mov
fcoml
jge
push
sub
fidivl
mov
insb
cltd
test
mov
call
cmpsl
inc
inc
ss
dec
wrmsr
and
dec
lods
pop
dec
stc
xchg
fildl
or
mov
dec
in
les
outsb
lret
add
pop
sarl
ret
sub
jne
mov
dec
data16
jno
pusha
and
in
pop
sbb
sub
mov
sub
fcomi
scas
add
insb
lds
push
in
mov
aaa
dec
sbb
ds
push
jg
shl
push
mov
mov
mov
cmpsl
push
push
scas
hlt
adcb
and
stc
into
lea
sub
lret
sahf
mov
sub
fsubl
inc
insl
sahf
notl
push
mov
mov
mov
cmc
aam
xor
cmp
insb
xlat
sarl
fsubs
repnz
movsb
movsb
enter
sub
scas
mov
dec
aaa
popa
mov
addb
dec
push
push
xchg
lret
mov
push
push
loopne
andl
push
aaa
jl
addr16
mov
adc
and
insl
adc
push
push
incl
lret
xor
xor
push
jbe
out
movsl
jbe
imul
fadds
mov
push
gs
xchg
cld
cli
andb
jo
ljmp
jmp
mov
arpl
leave
mov
push
sbb
mov
jne
jge
and
mov
cwtl
cmp
inc
cld
inc
data16
pop
lods
mov
jp
sbb
xchg
inc
pop
pop
jecxz
pushf
daa
dec
jne
je
sti
add
jns
mov
adc
mov
mov
or
cmp
aam
mov
push
pushl
push
pop
roll
dec
addr16
gs
mov
jbe
sub
out
addl
sbb
in
adc
aam
aaa
out
insb
test
dec
cwtl
sahf
das
pop
cmpb
push
mov
aas
dec
and
call
aad
adc
jl
add
shl
and
mov
fdivrl
xor
das
xlat
std
sbb
xchg
cli
sub
fwait
xchg
dec
mov
cmp
aam
jbe
std
sbb
adc
xchg
test
mov
ljmp
fs
scas
pop
xor
stc
arpl
sbb
in
jno
and
mov
push
or
iret
scas
pop
enter
pop
sbb
pop
rcl
ja
test
mov
mov
dec
pop
sbb
or
mov
dec
movsl
dec
arpl
popf
sbbb
ds
and
jle
sbb
popa
sub
add
arpl
cwtl
lods
jge
imul
mov
xchg
ret
mov
adc
ja
insl
mov
in
das
nop
jecxz
jmp
push
dec
push
imul
xchg
jge
sbb
std
and
out
nop
dec
xor
xchg
fldl
push
iret
in
arpl
rorb
js
inc
mov
jp
pop
divb
test
pop
push
mov
les
push
inc
sub
cli
jl
dec
sub
fbld
js
mov
popf
inc
aas
mov
das
fwait
dec
sub
jle
mov
xchg
lcall
pop
hlt
movl
test
outsl
mov
push
mov
xchg
ss
dec
jne
sub
fidivrs
mov
lret
scas
stc
push
scas
std
add
mov
pushf
lret
add
inc
or
icebp
pop
dec
test
pop
fwait
push
lods
xorb
popf
das
push
loope
loop
or
push
xchg
stos
and
mov
lods
addr16
ret
mov
pop
je
faddl
sub
xchg
xor
jp
rcl
lods
in
inc
push
iret
test
pop
mov
cltd
xchg
dec
push
fadd
int
dec
jns
xchg
lret
push
lods
js
inc
push
rcrl
lret
les
xchg
mov
cmp
lock
mov
lret
outsl
cmp
push
hlt
repnz
xor
xchg
in
jle
inc
push
mov
push
in
lcall
mov
pop
jg
icebp
xchg
and
sub
enter
test
cld
mov
jns
jo
cs
inc
pop
sbb
insb
mov
hlt
xor
and
dec
cwtl
push
or
orl
nop
xor
orb
sahf
adcl
inc
add
jge
out
shrb
mov
pop
pop
mov
punpckhbw
lahf
loopne
xor
les
mov
xchg
mov
out
test
xor
outsl
dec
imul
insl
adc
pop
cmpl
dec
cmpsb
or
xor
xchg
xor
stc
pop
push
fimull
test
or
cmp
sbb
push
adc
ret
test
stos
mov
inc
cmpsb
call
or
lret
or
das
enter
pop
ficoms
stos
sub
std
clc
sbbl
cmpsl
jmp
jno
mov
sub
push
sbb
xor
mov
mov
ljmp
repz
xchg
add
sub
inc
pop
pop
popa
in
jecxz
sbb
push
sub
lcall
xlat
iret
arpl
imul
fsubl
vmovdqa
stos
mov
sarb
arpl
mov
push
pop
leave
aaa
pop
adc
nop
jp
push
in
stc
in
sbb
sub
sbb
dec
push
aad
xor
mov
xchg
jno
adc
adc
aaa
xor
test
sbb
cwtl
out
popa
fimuls
call
adc
jge
cmp
pusha
scas
scas
sub
inc
xor
mov
mov
or
lock
xchg
and
ja
or
fs
adc
in
or
cmpsb
xchg
loop
in
iret
xlat
jg
mov
int3
xchg
pop
in
in
sti
cld
dec
push
mov
sti
adc
ljmp
test
inc
scas
mov
adc
les
jge
repnz
pusha
or
stc
jg
sbb
cwtl
addr16
in
das
mov
jns
lock
repz
std
adc
aam
addr16
lahf
fldl
sbb
lret
sub
loope
fucom
test
adc
push
addl
push
mov
push
push
pop
and
aaa
hlt
adcl
aaa
cli
imul
jae
mov
or
mov
sub
daa
sbb
jnp
adc
push
outsl
in
sub
push
sub
lods
push
push
lock
cs
push
rcll
popa
mov
pop
das
cmp
mov
aam
adc
mov
cmpsb
rorb
stos
imull
jecxz
stc
ljmp
xor
popf
mov
push
cld
nop
dec
cmpsb
data16
jg
cltd
rorl
jl
inc
pop
xchg
mov
and
xchg
xchg
push
aas
sub
push
adc
hlt
data16
into
fwait
lock
je
insb
imull
out
lods
adc
test
sbb
dec
sub
shrb
xor
cmpl
jp
sub
clc
icebp
fbld
mov
fucomi
call
pop
addl
cmp
and
jp
sub
outsl
mov
jae
xchg
lea
arpl
mov
test
xor
push
mov
mov
movsb
xchg
mov
out
add
inc
and
in
fdivrl
xchg
mov
insl
jo
push
jae
mov
pop
mov
in
arpl
out
add
fmul
cmp
test
inc
pop
xlat
push
arpl
js
sbb
adc
xchg
fisttpll
mov
and
mov
cmp
xor
mov
adc
das
daa
lcall
mov
mov
push
divb
jle
lods
scas
inc
mov
sub
mov
sarl
pushf
xor
jle
loope
test
rorb
sub
adcl
mov
and
jg
loop
adc
jecxz
jg
jle
std
js
adc
mov
arpl
sbb
daa
mov
call
push
inc
jmp
out
jne
icebp
and
fcmovnb
mov
sbb
sti
pop
pop
cmp
jo
dec
xchg
pop
insb
popa
push
imul
add
adc
push
mov
sub
mov
mov
cmp
sub
pop
mov
clc
cmc
addr16
jo
loop
mov
dec
mov
sar
and
mov
addr16
rcrb
sbb
dec
dec
jecxz
fbld
or
stos
popa
inc
sbb
push
fwait
mov
test
push
pop
outsl
add
sub
add
jl
xchg
xlat
push
in
fists
xchg
cmp
sahf
or
movb
into
pop
mov
jmp
pop
xor
out
dec
imul
ja
mov
mov
and
pop
and
mov
sub
cmpsl
pop
call
inc
sub
jl
ja
lea
adc
ds
cmp
cld
mov
mov
in
pop
lahf
call
sub
mov
mov
cli
mov
inc
punpcklwd
icebp
mov
mov
pushf
sub
stos
fldt
ret
pop
pop
sti
push
in
lret
cmp
add
xlat
jb
adc
std
xor
out
push
push
mov
xorl
add
adc
adc
mov
dec
jg
jg
inc
or
mov
xchg
jp
add
movsl
insb
sbb
test
push
imul
mov
stos
xor
add
cmp
in
xor
std
sub
mov
adc
pop
in
sti
shlb
clc
xor
idiv
mov
ljmp
insb
lret
push
mov
ficoml
stos
inc
push
popa
push
sub
arpl
xchg
sbb
sub
jge
pop
cli
repz
and
push
cmp
jns
add
dec
dec
mov
dec
push
xchg
xchg
inc
pop
add
mov
cmp
lret
jno
arpl
notb
ss
and
int
lret
lods
addr16
pop
cmp
or
xlat
xchg
jle
leave
orl
cmp
sbb
sub
daa
lods
push
and
ja
dec
insl
lret
dec
push
cs
gs
adc
addr16
dec
sbb
popa
test
inc
push
mov
sbb
test
mov
pop
mov
das
inc
scas
mov
scas
dec
dec
push
rcrl
mov
fsub
push
aas
or
adc
iret
pop
stos
cli
jl
sub
outsb
mov
mov
rorl
xchg
xchg
or
mov
subb
xchg
data16
xchg
xchg
cmpsb
ret
lds
bound
mov
push
jl
leave
pusha
loopne
lret
or
andb
mov
lea
arpl
cmc
push
popa
pop
sbb
push
dec
out
and
ss
mov
popl
adc
inc
cs
lcall
pop
mov
inc
sub
push
xchg
je
dec
mov
sbb
test
dec
adcb
and
jb
faddl
cwtl
mov
femms
gs
pop
push
pop
ret
inc
imul
dec
test
mov
mov
lret
clc
jmp
add
xor
lahf
inc
lahf
lahf
aas
jno
push
rcl
inc
pop
test
nop
jno
mov
xorb
mov
addl
insl
lock
mov
test
in
cwtl
sti
add
sub
out
xchg
xchg
popf
cmp
decl
loope
pop
ret
sbb
shlb
imul
jae
dec
mov
fs
add
popf
cld
cmp
jns
pop
jae
cld
loopne
push
insb
arpl
mov
xchg
fs
adc
push
push
ljmp
mov
sbb
stc
fwait
cmp
movsl
inc
and
pop
or
addr16
dec
or
cmp
pop
xchg
mov
adc
fsts
dec
fdiv
xor
inc
repz
mov
sub
adc
mov
pop
pop
mov
pop
add
lock
xchg
push
test
sbbl
inc
xchg
loopne
std
sarl
push
js
add
in
inc
xor
cmpsl
dec
and
cmp
adc
push
xchg
les
sub
lds
iret
add
arpl
je
mov
ds
lahf
xchg
add
inc
push
ljmp
lea
in
lock
aas
scas
and
fcomps
sbb
xchg
stos
jnp
data16
xlat
pop
or
mov
out
xchg
jmp
rcr
dec
sbb
je
loopne
enter
xchg
mov
mov
rcr
adc
mov
mov
int3
mov
lock
xor
mov
mov
aam
pushf
popa
pop
daa
mov
inc
xlat
mov
test
pop
pushf
shlb
sub
lahf
je
movsl
sbb
aam
pushf
and
xchg
cmc
jne
mov
xchg
popf
sub
mov
sub
mov
push
sub
push
repnz
movsb
pop
adc
insb
dec
add
jl
jp
enter
insl
addr16
push
ffree
xor
mov
pop
mov
cmc
fdivs
jns
sub
je
cmp
in
imul
aam
stc
in
jae
insl
ljmp
mov
int
push
fistl
testb
cmc
lea
jle
in
clc
mov
jp
out
or
gs
in
add
sbb
inc
pusha
pop
das
inc
leave
mov
push
cwtl
lods
repnz
push
cmp
out
lock
pmuludq
xchg
stc
mov
lcall
repz
outsl
sbb
mov
adc
scas
aaa
push
and
inc
sbb
ja
add
mov
sbb
cmp
or
pusha
shl
ret
repnz
sub
popf
data16
je
dec
pusha
sahf
add
lahf
stos
fidivs
gs
pop
sbb
test
sahf
aas
in
fstps
testb
ja
loop
jns
cmpsl
add
jecxz
xchg
daa
mov
mov
and
fisttpl
sbb
je
sub
sarb
add
xor
inc
jb
lret
sub
hlt
push
lret
sarl
xor
shrl
movsb
mov
je
push
insb
xchg
js
stc
sub
mov
adc
add
mov
fsubrp
arpl
mov
xlat
add
sub
push
adc
cli
jne
push
sbb
test
jge
xor
fisttpll
adc
sbb
mov
push
or
jl
push
mov
sti
jnp
lea
push
sbb
aam
fdivr
insl
push
mov
hlt
dec
sti
xor
mov
movsb
jae
fildl
xchg
lods
mov
jmp
fdiv
aas
loope
shlb
lock
out
cmpb
es
and
in
mov
pop
mov
imul
sbb
mov
push
fistl
rcrb
cld
add
sub
dec
dec
sub
push
mov
push
jbe
lret
adc
mov
inc
or
jnp
enter
mov
testl
xchg
xchg
cmpsb
loopne
xchg
xor
xor
cmc
adc
fildl
push
and
aam
adc
mov
mov
mov
push
mov
xchg
out
xchg
outsl
bound
inc
outsb
fstl
test
enter
or
lock
jns
lcall
xchg
repnz
out
imulb
xor
xlat
sub
lret
test
adc
jecxz
lods
stos
xor
outsb
lret
lcall
sbb
hlt
mov
cs
mov
inc
adc
mov
push
mov
cs
cwtl
push
push
cmc
sub
push
sbb
int3
mov
mov
sub
mov
mov
cmpsb
andl
and
push
stc
xor
pop
mov
aas
mov
stos
mov
in
lret
cmp
mov
sub
push
leave
lret
xor
add
andb
mov
jbe
and
fcmove
int3
outsl
roll
sbb
jo
ret
sti
orl
scas
scas
cmc
lock
fisttpl
je
addr16
sbb
lahf
orb
sub
cmp
mov
cmc
xchg
lahf
dec
xor
int
cmpsl
xchg
loopne
sbb
push
arpl
enter
and
fidivrl
jg
fbstp
sbb
fistpll
pop
jns
pop
adc
scas
movsl
cmpsb
subb
cmp
test
mov
add
push
mov
stc
mov
nop
stos
mov
jo
test
inc
mov
vmulpd
out
in
mov
jnp
movsl
subb
popf
cs
mov
dec
pop
jcxz
pushf
in
lcall
or
cli
and
inc
mov
mov
mov
adc
or
sub
jnp
loopne
fadds
in
mov
pushl
xchg
push
and
int3
les
xchg
test
dec
ja
inc
mov
xchg
insb
test
sahf
mov
push
cmp
repnz
ss
xor
mov
ret
pop
cmp
in
ret
ljmp
stos
or
push
pop
fcoms
xchg
cmpsl
loopne
fidivrs
push
fists
ds
fisubrl
pop
fsubrp
call
xlat
popf
andb
leave
sub
pop
cmp
lods
jge
mov
sub
fisubrs
stc
call
lods
cmp
inc
jns
xor
xchg
adc
push
insl
inc
nop
mov
cmp
loope
insl
xchg
imul
mov
int3
jp
push
adc
into
dec
in
stos
lds
lahf
pop
lret
and
sbb
gs
fs
aas
int
jp
ror
lahf
push
push
test
pop
or
pop
addr16
dec
iret
mov
lds
jge
mov
inc
inc
push
push
ljmp
xor
jecxz
iret
mov
dec
pop
outsl
push
adc
out
arpl
dec
xchg
stos
add
cmp
rolb
aas
push
imull
cmp
into
test
aam
pop
aam
push
data16
mov
scas
inc
sarb
xchg
cmp
mov
jg
pop
jl
inc
add
inc
rorb
mov
loop
cmc
pop
dec
xchg
cli
mov
add
cmc
jecxz
jge
add
or
inc
lahf
les
xor
iret
out
xor
loope
repz
xchg
stos
and
adc
xchg
loopne
push
icebp
or
into
neg
int3
mov
out
xor
xchg
iret
add
fs
cmp
sbb
pop
xchg
cld
jne
mov
xor
xor
stos
cmpsb
sbb
sub
mov
lock
xchg
pop
or
dec
fadds
cwtl
shrb
mov
das
das
dec
sbb
jge
in
mov
scas
lea
and
jge
pop
mov
cmova
pop
stc
mov
lds
enter
lahf
inc
jbe
jo
sub
roll
inc
xchg
lahf
js
mov
dec
je
pop
xchg
loopne
adc
loope
jo
subl
mov
push
movsl
cmp
adc
lock
aaa
outsl
dec
add
sbb
faddl
mov
test
clc
and
mov
lahf
daa
out
jmp
mov
mov
xchg
sub
stc
adc
pop
aam
mov
std
mov
fwait
jb
out
ret
dec
and
jo
cmc
sbb
popf
adc
jne
iret
xor
repnz
cmp
jle
pop
push
dec
mov
lahf
repnz
jmp
dec
push
xchg
shll
mov
orl
stos
sarb
lods
cs
xor
sbb
or
icebp
mov
cmp
push
dec
or
mov
mov
cli
ljmp
stc
sbb
cmp
add
cmc
das
dec
sub
jb
lret
mov
mov
inc
dec
test
iret
incl
sub
push
sahf
roll
jg
jo
addr16
call
mov
add
sub
or
mov
fwait
in
cmp
insb
rorl
cltd
mov
inc
push
loop
ja
cmp
cwtl
push
paddd
sbb
cmp
popa
popa
xor
pop
mov
and
or
imul
lock
fimuls
jge,pn
cmp
rclb
insl
out
lcall
cmp
popf
shrl
jo
xlat
loop
push
add
sahf
lret
inc
sti
sbb
xchg
adc
out
in
sbb
stc
or
dec
cltd
or
popa
dec
jnp
and
sub
xchg
xchg
xchg
sbb
adc
and
push
and
daa
mov
in
mov
mov
mov
cmp
fdivl
sub
sub
int
jo
and
dec
fcmovnb
dec
sub
mov
and
iret
mov
xor
rcll
cld
xchg
jmp
or
cli
xchg
sbb
shrb
loopne
pop
lahf
fsubrl
popa
inc
pop
and
or
addl
adc
sbb
push
cmp
cld
adc
and
or
loopne
dec
or
cmp
sub
rcrl
mov
inc
add
cmp
fstpl
push
loope
addb
adc
rolb
int
push
mov
rcrb
jb
mov
push
mov
jbe
dec
sbb
lea
mov
push
and
inc
lret
adc
insl
cltd
add
cmpsl
jo
hlt
jg
cmp
pushf
test
adc
shl
lods
push
js,pt
test
ret
push
add
pushf
clc
in
nop
imulb
mov
data16
popa
repz
jle
test
ljmp
mov
and
sahf
jnp
cld
or
sbb
xchg
jp
pop
xor
add
ss
inc
sbb
fstl
sbb
dec
fiaddl
leave
fstp
sub
jnp
dec
int3
add
ja
das
or
adc
lds
or
repnz
push
and
cmp
jne
icebp
fbstp
in
inc
in
mov
loop
sub
adc
aaa
fdivs
fiaddl
xchg
fldenv
repz
mov
shll
inc
jg
push
iret
dec
loope
lea
jbe
pop
pop
dec
loopne
sbb
rcpps
clc
fwait
cmc
mov
fwait
popf
in
adc
jmp
shrl
out
repz
push
mov
test
fsts
int3
mov
cmp
aaa
popa
cli
dec
movsl
enter
wbinvd
les
es
pop
inc
idiv
pop
pop
mov
jnp
aad
pop
pop
jl
xor
aam
xchg
test
inc
push
scas
popa
and
mov
pop
dec
sub
xor
inc
lcall
xor
push
pop
xchg
or
sbb
shll
fisubrs
enter
sbb
sub
push
das
in
xor
adcb
aam
jge
pusha
dec
dec
fisubs
icebp
insb
mov
xbegin
mov
aam
and
mov
jg
lahf
sarb
dec
xchg
jmp
sbb
and
push
testb
jae
or
sahf
and
and
fidivrs
add
ficoml
ret
aam
add
imul
cmpsb
loopne
enter
shlb
stos
ljmp
leave
leave
nop
and
iret
orb
repz
jle
or
or
lahf
dec
popf
sub
movsb
mov
mov
and
xchg
outsb
inc
dec
out
test
add
int
and
inc
insb
out
ja
out
mov
leave
mov
mov
cmp
sbb
cmp
clc
adc
lahf
popf
xchg
movsb
out
jg
popf
inc
adc
xlat
cmp
xor
mov
add
xor
xchg
xchg
sub
mov
dec
aas
mov
inc
jns
or
mov
adc
adc
mov
in
leave
jo
jp
imul
or
fidivrs
adc
leave
ja
js
stos
or
sbb
push
mov
xlat
std
mov
inc
and
add
testb
stos
mov
cmc
stos
push
sahf
rcl
rcr
or
dec
mov
scas
icebp
cmp
jns
or
std
xchg
push
jo
sbb
ss
lret
mov
xlat
fmuls
mov
test
cmp
and
rcr
shl
pop
shll
leave
sub
pop
dec
loope
fiadds
fwait
pop
push
outsb
cmpb
test
ret
push
cmp
xchg
or
mov
repz
mov
xor
mov
pushf
popf
rclb
or
movsb
sbb
jb
popl
insl
imul
pop
add
iret
push
mov
pop
dec
shlb
dec
push
aas
pop
or
push
push
mov
mov
lock
aas
dec
call
fldt
lods
sbb
jl
and
add
sub
xchg
mov
push
mov
mul
mov
adc
fiadds
loop
adcb
dec
fidivs
pop
mov
jns
pop
orl
fsubrs
test
cli
in
cmp
nop
xor
mov
fwait
mov
cld
and
mov
sbb
xor
nop
outsb
pop
loope
or
adc
fmull
inc
fisttpll
and
adc
cltd
add
xchg
inc
dec
repz
mov
in
mov
push
jo
lods
pop
aaa
pushl
addr16
jp
lcall
jbe
sbb
and
gs
cmp
and
mov
xor
push
sti
movsl
repnz
test
mov
jb
jecxz
lock
jb
lcall
cmp
dec
cmpsl
cmpsb
bound
jl
push
mov
xor
cmpsb
test
jne
jle
pop
out
cmc
xchg
insl
jp
sub
xor
dec
in
add
adc
jg
xchg
ja
push
mov
cmpsb
cwtl
sub
lods
outsb
xchg
sbbb
xchg
jg
mov
movsl
jne
push
fs
and
push
bound
movsb
fstpt
imul
mov
xor
or
dec
adc
mov
std
aam
cwtl
mov
lcall
movsl
movsl
dec
leave
out
loop
scas
into
negl
and
popf
outsb
dec
inc
stos
roll
ja
test
jb
shll
cmp
cmp
icebp
dec
test
or
cmc
dec
test
mov
es
pop
inc
and
sti
dec
mov
cltd
cmpsb
push
fmull
ficoms
insb
cld
pushf
movsl
clc
mov
shll
fs
nop
bound
sarl
and
add
int3
mov
pop
stos
jle
mov
andl
mov
scas
mov
ljmp
xor
cmp
loop
lahf
xchg
add
shlb
xor
adc
mov
mov
push
mov
popa
imul
push
fstp
or
repnz
pop
xor
inc
cmp
idivl
fcmovnbe
push
test
jle
ljmp
sub
enter
shlb
mov
inc
and
mov
or
lahf
ficoms
push
lods
xor
sbb
dec
pop
jb
push
pusha
push
sub
dec
dec
stos
sub
aad
imul
outsb
sbb
push
or
lds
mov
or
push
in
lahf
ficoml
int
divb
ret
out
push
in
repz
cmc
divb
lcall
dec
push
imul
mov
mov
int
jmp
pop
mov
pop
and
and
enter
pop
icebp
hlt
cli
fs
imul
rcrb
rorb
sbb
push
int
xchg
xchg
jl
nop
cmp
pop
stos
lds
add
mov
xor
std
adc
in
inc
sarb
ljmp
sahf
hlt
pop
jecxz
iret
daa
in
push
adc
xchg
mov
les
push
push
lods
add
pusha
xlat
mov
inc
mov
movl
jecxz
pop
pop
mov
fistpll
cmpsb
push
insb
jnp
scas
shl
pop
insb
sar
jbe
popf
pop
add
pop
lods
icebp
jns
imul
mov
push
push
mov
pop
jle
icebp
inc
mov
inc
cli
lcall
xchg
pop
adc
sarl
mov
cmpsl
jo
roll
jns
pop
adc
mov
jle
pop
adcb
adcb
sbb
sbb
xchg
mov
outsl
outsl
sbbl
lcall
jnp
jmp
loope
or
adc
and
sub
lea
cmpsb
enter
and
ficoml
pushf
fiadds
pop
es
xor
sarb
divl
test
fld
fwait
xor
cwtl
sub
imul
leave
fs
xchg
out
adc
iret
es
mov
iret
pop
inc
add
inc
push
xor
sbb
subl
mov
add
jg
ss
pop
lahf
xchg
lret
shl
pop
cli
scas
repnz
popa
cmp
pop
out
adc
inc
adc
into
mov
and
into
push
out
add
xchg
jp
mov
jno
outsl
mov
rcll
lods
cltd
push
bnd
mov
sub
pop
stc
and
loopne
jg
pop
mov
jmp
fistps
sti
stos
js
xchg
mov
mov
dec
pop
or
cmp
mov
lods
mov
jg
inc
sub
mov
inc
stos
cmp
movsl
pop
sub
imul
sub
xchg
fcoms
fildll
js
mov
and
movsl
cld
shlb
mov
pushf
icebp
in
sbb
stos
addb
cmpsb
push
xchg
jns
sub
outsl
ret
push
imul
fisttpll
push
jbe
dec
adc
cmp
xchg
jnp
dec
mov
outsl
xor
xchg
mov
mov
and
pop
loopne
xor
fisubs
sub
rolb
lods
and
or
sbb
dec
and
stos
xchg
and
test
mov
hlt
scas
out
xchg
stos
cwtl
pop
fidivrl
ljmp
data16
lahf
sbb
test
mov
cmp
or
aad
outsl
popa
sbb
jbe
mov
push
push
cmp
mov
xor
dec
call
mov
loopne
lods
sbb
fadds
pop
pop
das
dec
sub
xor
push
adc
lock
lret
pop
inc
adc
shll
daa
ret
push
push
mull
and
sub
or
inc
fwait
xchg
xchg
pop
dec
mov
cmp
jnp
inc
push
fldcw
adc
test
dec
outsl
enter
mov
mov
loope
dec
lds
lds
push
fwait
lock
aas
or
add
jecxz
jecxz
dec
repnz
dec
das
mov
pop
ret
dec
imul
or
int
adc
lahf
sbb
and
push
or
test
mov
out
fwait
sbb
mov
pushf
jae
fcmovnb
pop
mov
xlat
mov
cmp
roll
gs
ss
enter
dec
or
push
xor
shlb
add
push
inc
mov
popa
add
mov
ss
mov
jno
sub
push
out
mov
cmp
inc
data16
in
cltd
lods
out
add
jmp
fldenv
pop
mov
xor
iret
loope
cli
test
out
lret
clc
js
nop
mov
rcl
into
push
clc
aaa
movsb
cs
cmpsb
push
push
std
call
outsl
dec
addl
and
mov
outsl
mov
xor
add
cwtl
movsl
jne
lahf
adc
repnz
ficompl
pushf
js
lea
sub
jp
pop
hlt
hlt
cwtl
lahf
fnstcw
inc
or
adc
rol
dec
fidivs
cwtl
cmp
add
icebp
dec
adc
loope
inc
pop
xor
jg
or
jbe
mov
mov
cmp
into
clc
sub
add
lcall
dec
mov
pop
lret
scas
or
sarl
aad
shrb
cli
mov
out
pop
jb
push
pop
stc
out
xor
test
push
iret
ja
cmp
adc
int
inc
adc
bound
mov
mov
add
jecxz
adc
mov
jecxz
mov
xor
addb
inc
sub
cmp
ljmp
ljmp
pop
pop
mov
inc
ja
dec
lea
loopne
adc
adc
mov
adc
sub
and
cmpsb
pop
fstpl
in
outsl
and
push
cmp
cmp
enter
mov
or
xor
jg
jae
pop
out
push
pop
mov
mov
pushf
scas
cmp
jmp
clc
out
jle
mov
testb
pop
addr16
into
into
xchg
mov
add
adc
insl
mov
fisubs
test
notl
fwait
add
xlat
seta
dec
and
cltd
js
xchg
xor
sub
insb
es
repz
rol
out
xor
adc
xchg
jb
jmp
ret
cwtl
mov
fmuls
imul
gs
mov
or
ja
lods
and
mov
cmpsl
fwait
mov
adc
lcall
fmuls
inc
sbb
cmpb
or
imul
mov
lock
mov
push
cli
inc
mov
popf
es
pop
cmc
aas
cmc
dec
cmp
adc
cmp
inc
sub
cwtl
dec
mov
lods
repz
add
ret
cmp
sub
dec
sub
sbb
inc
int3
and
cmp
xor
sbb
sub
and
test
sub
movsb
mov
dec
jbe
xchg
sbb
push
dec
cli
repz
push
cltd
shl
pop
out
xchg
inc
jne
inc
roll
inc
dec
popa
sbb
dec
shrl
pop
xor
pop
push
ja
push
cltd
cmovno
sbb
enter
jecxz
fwait
negb
xchg
dec
add
mov
pusha
or
mov
pop
xor
aam
and
and
adc
mov
scas
and
rolb
sbb
push
ret
push
clc
push
dec
or
ds
adc
dec
in
inc
stc
cmpsl
mov
adc
cmp
lock
test
sbb
aas
out
mov
add
jb
test
loope
test
test
xchg
sub
or
aam
xchg
movb
sbb
daa
scas
pop
pop
xchg
pop
das
dec
and
sbb
or
xchg
mov
push
aas
popf
out
sahf
fs
mov
pop
add
adc
ds
nop
mov
adc
xchg
jno
mov
pop
int3
mov
xchg
hlt
std
sbb
jecxz
outsb
outsl
mov
test
adc
add
push
dec
adc
subb
data16
xchg
imul
add
jbe
imul
gs
jnp
out
cmpsb
outsl
xchg
adc
sbb
push
lock
subl
rorl
scas
mov
arpl
jl
sahf
jge
pop
adc
ds
scas
mov
sub
push
sub
sub
mov
loop
push
mov
aas
inc
pushf
jge
imul
sahf
and
arpl
mov
or
outsl
push
inc
leave
outsl
rclb
xor
inc
js
cmp
in
mov
lahf
outsb
push
loop
cmp
push
pop
popf
es
lea
xorb
sbb
movsl
repnz
push
fistl
ss
mov
aam
sbb
push
or
xchg
mov
xchg
test
iret
mov
orl
jg
punpcklwd
mov
inc
out
notb
fcompl
sarb
xadd
fisubs
mov
into
lods
xchg
cmpsl
je
popf
cmp
jg
les
sub
sbb
jmp
cmp
cmp
sub
or
adc
lahf
ret
xchg
negl
cmp
mov
inc
xchg
inc
xchg
mov
call
add
sub
mov
ret
dec
dec
fidivrs
xchg
pop
data16
insb
jl
bound
cmp
je
mov
or
sahf
xchg
loopne
testb
cmpsl
xlat
cmp
and
aad
imul
in
mov
or
cmp
mov
std
das
sbb
loopne,pn
dec
fsubl
jmp
push
mov
mov
push
je
adc
pop
xor
daa
push
in
js
push
push
out
rolb
mov
bound
out
inc
movsb
cltd
sahf
psrlq
mov
inc
mov
fadd
aaa
imul
cmp
add
loop
sbb
push
add
xchg
adc
push
cmp
jo
test
mov
les
jae
addr16
sbbl
or
push
aaa
imulb
lock
jne
xchg
js
adc
mov
nop
adc
dec
mov
push
sbb
xlat
cli
pushf
push
xchg
or
sahf
lret
daa
cmp
sub
inc
out
push
add
cmp
mov
lds
scas
push
test
add
jle
jg
and
jl
test
dec
clc
enter
test
mov
xchg
bound
jno
cli
rep
mov
push
movsl
test
subb
push
in
sub
pusha
sub
fsubrs
jmp
imul
or
scas
mov
dec
stos
inc
dec
pushl
test
addr16
dec
popf
mov
push
rorl
sbb
pushf
nop
push
gs
ffreep
xchg
into
sbb
sub
test
scas
pop
dec
outsl
fnsave
sti
rcl
scas
sub
sbb
or
inc
sub
xchg
js
arpl
je
lret
and
sub
pop
xchg
dec
sbb
test
mov
dec
pushf
adc
or
mov
xor
adc
pop
popf
imul
dec
dec
jp
pop
jecxz
dec
roll
pop
call
mov
mov
mov
add
js
cld
jb
lret
cmp
cmpsb
xchg
dec
call
or
test
push
cmp
out
ljmp
or
add
sub
andb
test
mov
pop
mov
push
or
jns
sub
inc
jnp
popa
movsl
rcll
stos
rorb
lahf
in
inc
pop
les
aad
jmp
add
les
jb
out
mov
jb
and
roll
adc
sti
mov
cmpsb
mov
mov
lret
mov
popf
sub
dec
push
stc
lea
mov
mov
leave
testb
or
xor
mov
and
clc
test
jl
ja
mov
xchg
arpl
lods
pop
jb
dec
mull
mov
fucom
push
dec
out
mov
pusha
mov
sbb
lret
in
jnp
mov
out
mov
mov
inc
xor
xchg
cld
cmc
mov
lods
imul
les
cld
daa
mov
loop
cs
repnz
pop
int3
mov
bound
cmp
cmpsb
and
sahf
xchg
inc
push
stos
or
cmovb
push
add
mov
ljmp
jp
aas
inc
push
outsb
and
daa
popf
lock
add
lcall
push
inc
jns
shlb
add
into
lds
repz
cmp
mov
out
pop
pop
ror
test
add
scas
cmp
into
mov
pop
sahf
adc
push
add
mov
scas
pop
rclb
and
sub
lahf
xchg
cltd
andb
pop
aam
into
pop
ljmp
scas
daa
inc
mov
not
mov
fildll
or
mov
adc
mov
fistpll
mov
push
sub
std
pusha
cmc
popf
inc
movsb
sbb
jb
sarl
jne
or
xor
ja
xchg
sub
cwtl
enter
les
insb
push
les
mov
int3
out
dec
mov
xor
lds
lret
fs
or
out
mov
push
jnp
cmp
push
push
hlt
jnp
dec
fcmove
decl
insl
dec
lcall
sahf
sub
push
mov
js
mov
mov
pop
scas
lret
mov
mov
mov
sarl
fists
fisubrs
xor
insl
lea
pop
pop
adc
and
out
mov
dec
pop
and
shl
jno
jg
andb
add
stos
rcrl
inc
inc
xchg
or
test
je
push
daa
pop
pop
push
out
mov
dec
adc
arpl
push
jle
in
lcall
pop
adc
push
push
push
popf
sti
movsb
loope
push
shlb
mov
test
adc
sbb
mov
push
push
add
lret
xor
pushf
pop
pop
daa
imul
mov
jbe
cmc
fstl
push
xor
cmp
xchg
daa
add
push
and
subl
mov
mov
addr16
mov
sbb
pop
jns
mov
jp
mov
or
hlt
adc
fwait
mov
mov
ret
je
dec
push
xor
clc
mov
xor
les
xchg
mov
inc
push
test
insb
push
push
fdiv
mov
ljmp
movsb
pop
sbb
jo
add
das
mov
dec
sbb
push
adcb
cmp
fstpl
enter
dec
xor
lods
dec
pusha
lods
pop
add
or
in
fdiv
cmp
scas
ja
cltd
scas
xchg
push
pop
mov
pop
test
arpl
ss
pushf
popf
or
mov
sub
push
sbb
jae
lods
mov
sub
xchg
mov
je
cli
xor
pop
les
rclb
xchg
pop
repnz
rcr
popa
and
enter
pop
pop
or
stos
int
mov
push
movl
xchg
dec
shll
jl
je
and
xor
addr16
leave
sbb
rcr
mov
sahf
popf
sti
jg
and
enter
or
jge
pop
pop
lcall
shlb
ja
in
rorl
pop
pop
ja
push
enter
sbb
xor
fsubs
loopne
inc
mov
adcl
leave
xor
add
test
inc
fs
sub
imul
arpl
test
xorl
push
mov
push
lcall
xchg
rcll
adc
std
test
popa
jo
cmp
inc
js
pop
lods
sti
sbb
data16
test
xchg
dec
rorb
stos
push
in
cltd
jns
out
inc
cmp
sbb
jge
dec
pop
xchg
jp
pop
xor
cmc
insb
lcall
stos
aaa
inc
sbb
jp
je
pushf
mov
test
pushf
ja
push
pop
inc
push
in
dec
mov
imul
int3
enter
push
popa
or
cmpl
xchg
xchg
sahf
add
int
sti
stos
dec
inc
popa
fdivrs
mov
rclb
xor
stos
or
mov
int3
pop
mov
push
imul
jge
pusha
int3
xor
into
push
xchg
jne
daa
cmp
jmp
fstps
mov
cmp
adc
mov
xchg
pop
stc
xchg
xchg
or
jecxz
rcrl
adc
sti
inc
and
xchg
out
and
adc
mov
and
pop
adc
push
data16
lcall
fcompl
das
jle
xchg
negl
or
fs
movsl
cs
xchg
adcb
setae
mov
stc
xlat
jns
gs
cmpsb
in
mov
adc
in
movsb
dec
sub
lahf
adc
xchg
and
loope
mov
xor
mov
and
daa
ret
add
scas
daa
insl
and
jecxz
dec
iret
ds
imul
mov
js
mov
sti
inc
push
xchg
out
mov
insl
cmp
ljmp
es
loop
xor
fstpt
push
out
cltd
insb
leave
push
sahf
pushf
pop
sub
adc
lods
into
andl
cmpsl
jecxz
movhlps
sbb
sub
jns
cmp
ja
mov
scas
sarb
ret
pop
and
icebp
lea
sub
stos
mov
das
shr
test
push
ds
jno
sub
inc
jno
ss
adc
dec
adc
movsb
push
frstpm(287
les
aaa
hlt
sub
push
adc
dec
mov
add
dec
mov
mov
add
mov
addr16
xchg
jnp
shr
out
mov
stc
scas
fisttpl
inc
fcmovbe
bound
aad
popa
test
xor
ljmp
sbb
mov
sbb
push
jecxz
popa
pop
add
aas
sub
jg
or
cmp
fmull
lods
shr
fcompl
and
stc
jmp
xor
dec
push
mov
add
iret
cld
jle
mov
aam
inc
lahf
xor
insb
in
xor
adc
mov
mov
mov
stos
rol
mov
sbb
add
repnz
xchg
cmpsl
mov
rcll
push
xor
stos
mov
sbb
shr
stos
shlb
dec
in
xchg
xchg
sub
jne
adc
cltd
mov
pusha
push
push
and
int3
sbb
mov
push
sub
ss
cmpb
ljmp
andb
icebp
mov
jns
aas
or
lret
mov
add
cmpsl
pop
cmp
adc
mov
adc
rcl
and
lods
iret
or
xchg
out
xor
js
aad
fsts
shrb
and
icebp
or
and
mov
or
cmp
push
aas
hlt
dec
rol
or
dec
test
dec
repnz
arpl
jmp
cld
lret
lds
adc
jb
icebp
inc
les
xchg
std
insb
sub
int
pop
int3
test
push
xor
adcl
out
xlat
xchg
cmpsb
lcall
jg
jle,pt
cmpsl
ljmp
fnstcw
lock
xor
je
rorb
mov
and
push
mov
in
jb
lock
xorb
frstor
add
mov
int
loop
lods
add
pop
out
pop
insb
shr
inc
les
sarb
lea
scas
push
cmpsl
pop
push
icebp
add
xchg
ds
mov
leave
xor
jmp
loop
xchg
movsb
stc
sbb
out
adc
sub
sbb
sub
lea
enter
mov
outsl
jne
es
xchg
popf
add
xchg
adc
adc
xchg
mov
and
jmp
es
testb
movsl
xchg
dec
and
call
rclb
jne
inc
popf
loope
push
fdivrl
or
push
or
lret
or
js
add
dec
xchg
rcl
lret
mov
stc
les
and
rcll
xor
in
shlb
mov
dec
jnp
xor
sub
xor
mov
into
cld
push
mov
cmc
jae
push
test
sub
fsubr
or
call
movsl
sub
push
xor
cltd
mov
add
pop
dec
xchg
pusha
xor
jl
pop
and
push
out
inc
lret
add
mov
daa
pop
test
ljmp
xor
js
test
aas
sbb
xchg
std
push
pop
cld
sub
dec
and
scas
jae
xor
pop
clc
mov
pop
mov
cld
sbb
popf
test
in
je
addr16
fstpt
mov
shrl
aad
clc
pop
sub
ja
mov
adc
pop
lds
out
aam
gs
pusha
xorl
sbb
mov
int3
push
inc
mov
addl
adc
int3
sbb
fldenv
sub
jae
mov
xchg
mov
sub
pop
test
test
rolb
mov
mov
js
cwtl
inc
jno
push
ja
fucomi
je
push
jne
xor
dec
dec
fcom
movsb
gs
stc
in
arpl
dec
mov
jmp
rclb
xor
push
fistl
xchg
cli
push
in
sbb
inc
sub
mov
es
add
pop
hlt
xor
shl
jp
xor
jecxz
adc
inc
pop
jl
mov
lods
and
pop
subb
js
adc
xor
or
das
rolb
addr16
pop
xor
jne
jmp
sbb
shr
ljmp
fcomps
cmpsb
ja
pop
ret
jmp
leave
and
cwtl
sub
repnz
mov
shrb
cmp
stc
sub
pop
bsr
inc
test
ret
out
fsubrs
sarb
dec
mov
hlt
fcomi
sti
push
pushf
sbb
xor
sub
cltd
cltd
movsb
int3
popf
fisubl
cltd
adc
or
adc
aas
stos
mov
push
in
inc
adc
sub
push
outsb
fwait
mov
icebp
stos
xchg
jae
shrl
or
cmp
xor
or
fisubrs
xor
out
addb
adc
outsb
push
and
or
cmp
adc
sub
xor
or
ss
lret
js
jo
dec
fs
xor
dec
addb
pop
inc
pop
inc
cmpsl
push
xor
xor
jp
inc
data16
xor
outsl
fucomp
push
stos
xor
andl
sti
cmp
sbbl
les
test
jle
inc
testb
cld
enter
ljmp
xchg
in
mov
push
sub
addr16
cmp
fwait
in
jae
xlat
orl
lcall
imul
dec
insl
or
aaa
jnp
cmpsb
gs
xor
mov
call
xor
in
lea
repz
pop
fwait
repnz
and
mov
in
jne
mov
xchg
inc
mov
xlat
push
gs
ss
stc
mov
cmp
fdivrs
mov
rclb
je
test
loope
pop
and
mov
arpl
repnz
int
mov
cmp
cld
dec
xchg
outsl
push
rcrb
inc
bound
arpl
mov
shl
mov
popf
cmp
xlat
leave
dec
fsubrs
mov
push
push
lock
cs
cmp
or
call
dec
cmp
lods
movsb
mov
adc
xor
orl
fldl2t
pop
adc
sbb
adc
push
in
sti
cmp
movsl
xchg
sbb
and
sub
sbb
test
mov
sub
incb
lret
xor
mov
cmpsl
int
aad
test
xlat
dec
sbb
push
test
in
insb
push
in
imul
or
pop
es
jp
jae
xor
pop
sbb
mov
inc
inc
xchg
shlb
fisttpl
out
mov
xor
decl
movsb
js
bound
and
mov
mov
loopne
adc
mov
jecxz
push
cltd
add
insl
add
pop
adc
loop
or
inc
inc
mov
cmp
mov
mov
pushf
jnp
mov
pusha
adc
das
dec
fmull
dec
xchg
and
jmp
jmp
ds
mov
scas
dec
out
lret
lea
ljmp
xorl
inc
call
es
mov
sbb
jp
jbe
out
scas
jecxz
shlb
add
ja
fiadds
mov
nop
aam
adc
shlb
rcrl
in
jae
aam
mov
lea
add
xchg
adc
xchg
xor
pop
sub
fs
leave
je
push
jb
addb
xchg
adc
aad
outsb
sbb
push
add
push
and
adc
xchg
xor
sub
cltd
and
sti
jnp
sbb
or
push
sub
movsl
pop
jmp
jno
adc
jecxz
inc
enter
fnsave
add
repnz
in
imul
dec
psubw
dec
dec
into
sub
fs
jnp
ljmp
cmp
jge
and
jae
movsl
prefetch
sub
inc
dec
lea
insb
loopne
aaa
jne
sahf
loopne
jg
fdivrs
sub
xchg
xchg
popa
cmpsl
orl
and
pop
iret
dec
test
add
adc
and
mov
mov
jae
iret
jbe
cltd
scas
cmp
jecxz
aas
mov
scas
pop
in
inc
cld
and
push
in
icebp
js
mov
clc
xorb
fsubl
and
and
divb
dec
cli
pop
add
xchg
dec
pop
addr16
in
inc
pushf
add
jne
rep
aam
mov
dec
iret
and
icebp
add
pop
inc
jg
shrl
dec
movb
and
test
jns
pop
fsubrl
push
hlt
jecxz
jae
dec
sub
jg
adc
mov
outsb
xor
mov
ss
in
cmp
cmpsb
fwait
inc
sbb
insb
and
mov
pushf
in
mov
lea
aas
daa
adc
mov
dec
xlat
xor
jnp
push
dec
icebp
xchg
xchg
xlat
mov
sbb
add
xor
loopne
pop
das
ret
jg
orl
sub
hlt
jg
bnd
push
inc
shll
pop
incb
add
testl
hlt
hlt
xchg
fwait
repz
testb
shlb
adc
mov
dec
int
rcr
mov
add
test
insl
mov
fs
sub
push
inc
lahf
orb
jmp
sbb
repnz
pop
and
insb
lods
sqrtps
out
int3
add
adc
mov
mov
shl
popa
sbb
or
jmp
mov
and
ss
pop
mov
xchg
dec
dec
jnp
dec
pushf
inc
lahf
or
push
mov
je
jns
ret
movsl
shlb
outsb
pop
movsl
and
in
icebp
idivb
lea
addr16
and
jl
lock
shrb
adc
pop
mov
mov
repz
mov
ljmp
repz
xor
mov
add
jecxz
insb
dec
testl
or
add
aaa
mov
int3
fadds
gs
dec
insl
and
and
enter
sbb
mov
xchg
sub
insb
push
fucomi
adc
mov
push
jns
notl
int
pushf
mov
xchg
jb
xor
pop
mov
add
scas
cmp
jmp
xlat
or
scas
and
rcrb
add
loope
repz
add
clc
mov
adc
mov
mov
push
push
sub
push
adc
dec
jle
arpl
mov
push
jae
pop
add
insl
cmpsb
jb
xchg
sbb
and
movsw
mov
mov
xchg
xchg
dec
jno
int
fdivr
mov
lea
jo
andnps
lods
movsb
push
ja
out
pop
sbb
dec
push
dec
dec
les
sub
les
int3
sbb
shrl
add
jle
jle
adc
cwtl
cmp
add
hlt
mov
out
mov
mov
push
mov
inc
pop
mov
mov
insl
xchg
or
fisttps
push
fdivs
int
fistpl
rclb
jp
mov
out
pop
fcompl
imul
pop
and
mov
nop
into
mulb
subps
fs
shr
push
test
test
cmc
dec
mov
das
push
mov
inc
fnstsw
mov
std
dec
orb
cmp
sahf
movsl
rcll
test
fdivr
jne
imul
dec
mov
out
sahf
daa
das
repz
or
adc
xchg
mov
adc
or
sub
mov
or
or
cmp
dec
in
or
mov
adc
and
mov
je
xor
fstps
push
lret
adc
pop
adc
xchg
add
inc
lock
mov
stos
cmp
fidivs
add
sub
push
mov
sahf
es
fstpt
xor
mov
fisttpl
fdivs
sbb
mov
in
dec
jne
xor
add
cmp
popf
pop
out
add
jle
repz
mov
xchg
pusha
sub
push
ds
or
dec
dec
cmp
addr16
stos
push
push
in
push
pop
xorl
dec
lea
or
inc
dec
call
data16
inc
fdivrs
cmpsb
mov
cmp
push
jp
dec
pop
arpl
jnp
sahf
sub
sub
xchg
xor
dec
sarl
stos
xchg
insl
mov
add
push
add
xchg
adc
push
and
out
rolb
int3
mov
mov
insb
mov
mov
mov
sbb
and
movsl
adc
dec
mov
in
in
push
sub
mov
pop
mov
xchg
mov
icebp
cld
dec
ret
into
repnz
push
scas
ret
fstps
jmp
out
sbb
stc
outsl
add
daa
pop
mov
sarb
dec
cmp
or
mov
call
std
pop
adc
cmpsl
loop
mov
popf
sub
sub
and
mov
sub
jl
push
dec
inc
fs
aas
repnz
inc
in
push
cmpsl
in
mov
and
sbb
adc
int3
xor
sbb
cltd
mov
jae
ljmp
mov
movsl
inc
or
pop
loope
outsl
shlb
mov
mov
stc
fcmovnbe
test
xchg
mov
test
xor
xlat
mov
dec
repz
das
add
cmp
mov
sub
data16
sub
sub
mov
dec
fimull
popf
add
int3
enter
adc
notb
in
cld
push
add
sub
fstp
jp
or
adc
xor
lods
xchg
sbb
mov
fdivl
int3
mov
imul
jno
rcrl
mov
mov
pop
xor
lret
add
pop
dec
das
and
mov
loopne
in
mov
das
xorl
dec
add
loop
cs
sbb
cmpsl
fbstp
inc
jle
xor
pushf
jp
int3
jmp
xchg
jne
sub
mov
cltd
pop
daa
lahf
jb
sbbl
xorl
xlat
setb
imul
dec
mov
mov
jmp
test
int3
fdivl
scas
out
mov
xchg
iret
or
test
out
cld
mov
and
int
mov
rcrb
iret
stos
rcl
mov
icebp
fstps
xchg
aas
and
repnz
in
or
popa
enter
insl
sbb
stos
inc
daa
leave
xchg
sub
ds
push
mov
fisubs
adc
mov
fs
test
inc
or
ljmp
repnz
divl
fiaddl
xchg
sti
mov
dec
cmc
int3
mov
sbb
or
pop
add
jl
jb,pn
les
loopne
pop
or
scas
add
inc
and
pop
xor
sbb
cli
adc
mov
out
repz
push
pop
sub
pop
add
mov
mov
or
xchg
bound
mov
dec
push
dec
adc
test
les
jnp
aaa
xor
gs
adc
cmpsl
enter
std
mov
out
jno
jp
int3
arpl
jb
pop
sub
jg
adc
rclb
sub
adc
xor
dec
movsl
jns
jnp
and
fnsave
and
movsl
sbb
pop
sarb
jl
jb
push
push
dec
or
test
pusha
jmp
icebp
aas
inc
js
jno
pushf
into
sub
mov
std
cmp
sahf
and
pop
daa
xor
xor
out
push
mov
lret
pushl
cmp
bound
fcmovne
push
fcmove
jns
je
xor
xchg
sub
mov
imul
lret
add
pop
mov
ret
cmpsb
xchg
jo
clc
pop
fsub
cld
or
dec
fildll
loopne
xor
es
and
jle
pop
stos
lret
imulb
das
test
adc
cmpsl
popa
mov
les
int
lahf
jno
or
dec
popa
int3
sbb
arpl
daa
push
ljmp
inc
lea
loope
stos
mov
add
cwtl
ret
not
in
iret
push
adc
cmp
sub
sahf
arpl
out
sbb
das
fdivrs
lods
shl
loopne
push
pop
sub
jbe
adc
bound
adc
nop
fmull
popfw
pop
daa
data16
shrb
les
lret
fldenv
shll
jno
inc
data16
push
xchg
js
and
dec
dec
or
rcr
mov
adc
filds
cmp
notl
mov
pop
xorl
or
jns
xchg
nop
mov
lock
std
sub
shrb
mov
inc
in
cmpsl
mov
shrb
imul
out
push
add
mov
int3
les
mov
add
scas
sub
lods
aam
iret
xchg
jecxz
jb
push
jp
sti
xchg
in
inc
lods
dec
xchg
push
test
lret
aas
add
clc
cli
leave
mov
rclb
cld
rorb
mov
fs
loopne
ss
mov
test
pushf
rcrb
mov
js
addr16
dec
out
cmp
and
dec
iret
les
push
repz
rol
xchg
push
jmp
das
das
pop
pop
das
loopne
lods
xorb
add
dec
and
divb
popf
xchg
lods
push
fidivs
push
dec
dec
int3
rol
fsubrl
mov
and
push
sbb
jecxz
fists
enter
popf
sahf
iret
add
ss
cmp
jo
decl
ss
rcrb
fwait
inc
je
cmp
jl
arpl
fcompl
stc
lret
xor
aam
movsb
mov
push
loop
clc
lahf
xchg
outsl
pop
sub
data16
adc
pop
pop
cmc
jge
push
mov
push
aas
cmpb
adcl
xchg
dec
jb
and
nop
dec
cmpsb
mov
inc
inc
adc
movb
lret
popa
repz
dec
arpl
imul
cli
aad
ret
lahf
cmp
mov
mov
mov
push
mov
icebp
inc
add
push
mov
xor
xchg
les
ror
movsb
jns
inc
pop
incl
cmpl
std
add
lret
cmp
test
inc
push
jns
leave
pushf
and
lds
push
or
movl
sbb
out
in
dec
xchg
ljmp
inc
sbb
xchg
or
test
jmp
mov
notb
aad
in
enter
sbb
insb
push
inc
arpl
dec
sub
or
inc
icebp
jae
loopne
in
mov
push
iret
sarb
or
xchg
mov
repnz
xor
stos
iret
or
repnz
les
mov
xorl
sub
dec
test
inc
lcall
bound
push
les
cli
ds
push
sbb
or
push
pop
js
xchg
aaa
mov
popf
xchg
push
cmp
jge
fwait
jo
les
jecxz
push
std
dec
adc
test
out
pushl
dec
sub
popf
sbb
ja
enter
ret
inc
rcr
or
jle
cmpsb
inc
add
fnstcw
dec
pop
sub
sub
jae
xchg
mov
sahf
pop
dec
lret
fcomi
dec
mov
scas
jmp
pusha
fists
jecxz
fldl
mov
or
jae
lahf
aaa
adc
or
cmc
adc
out
data16
jb
or
push
jns
cli
xchg
xchg
dec
addb
sub
xlat
xchg
cs
dec
adc
ret
cmp
push
sub
pop
and
adc
mov
jl
mov
push
and
out
jl
xchg
lock
cmpsl
push
pop
lds
aam
lds
in
mov
inc
nop
or
mov
jnp
hlt
fistpll
call
fs
lea
sub
mov
iret
pop
jp
and
cmp
xor
cmpsl
call
ja
mov
into
inc
or
adc
or
mov
fsubl
cmpsb
aad
jns
into
pop
xor
lods
out
std
lret
out
insb
and
cli
adcb
fistpll
xchg
inc
das
out
cmp
rcll
mov
into
scas
push
push
push
xchg
int3
mov
xor
push
mov
repnz
adc
insb
scas
sbbb
inc
mov
pop
or
mov
adc
sub
int
mov
push
sub
test
xchg
push
or
test
mov
inc
add
imul
xor
adc
stc
enter
in
arpl
dec
enter
add
out
dec
xor
cmp
xor
xchg
jns
inc
push
or
loopne
jnp
test
mov
mov
jb
mov
push
movsb
loopne
mov
xchg
or
jne
mov
loopne
mov
in
cmp
mov
scas
dec
xchg
cld
xor
sub
inc
pop
iret
sub
add
test
rcr
mov
adc
pop
or
outsl
inc
inc
test
xor
or
shl
pop
repnz
mov
pusha
fbstp
dec
xor
lods
xchg
or
mov
add
sbb
in
loop
scas
sbb
xor
scas
testb
ljmp
and
or
scas
push
cwtl
sbb
jmp
add
and
inc
popf
push
movsb
loopne
das
es
sbbl
jmp
dec
sahf
test
jbe
or
iret
jmp
dec
cmc
scas
or
mov
outsb
insl
gs
sbb
inc
pushl
push
lcall
cli
lcall
out
push
or
mov
aas
in
ss
ret
jbe
and
inc
inc
cmpsb
aaa
inc
cs
ljmp
lret
jp
mov
pop
mov
clc
je
movl
in
adc
pushf
test
jbe
xor
sub
int
sub
adc
shrb
jg
mov
cmpsb
sarl
and
and
pop
mov
cltd
push
mov
dec
inc
leave
jg
xchg
push
sub
inc
fnstcw
cwtl
gs
and
sub
jo
stc
adc
push
scas
xor
pop
lea
cmp
andb
push
hlt
movsl
dec
inc
and
push
cwtl
push
js
test
inc
addr16
cmpsb
jns
in
dec
imul
icebp
jae
or
cmp
xor
call
adc
mov
add
ret
cmp
enter
fistl
xorl
inc
pop
mov
mov
fldcw
xor
cld
mov
fs
jp
ror
jmp
pop
dec
dec
cmp
xor
mov
loopne
cmp
cmp
fstps
cmp
cmp
cld
imul
and
test
fistl
lret
lods
shlb
aam
push
lret
lock
mov
bound
adc
and
push
adc
push
mov
aaa
jae
aad
inc
or
sbb
fnstenv
pop
lea
loope
test
ja
test
roll
aas
out
push
sbb
and
pushf
xchg
ficoml
add
icebp
adc
fwait
adc
ja
mov
data16
data16
addl
sbb
mov
pop
and
cmp
adc
jbe
bswap
subl
stos
aam
outsl
xchg
loopne
add
inc
insb
inc
js
lahf
sbb
mov
jg
adc
push
fcomps
int
out
leave
shlb
mov
jecxz
cmp
and
sub
inc
jb
jb
inc
pop
loop
mov
repnz
sahf
popf
mov
mov
test
mov
cmpsb
push
lea
push
jbe
or
in
hlt
cmp
pop
in
sbb
and
bnd
dec
call
xchg
sbb
dec
mov
ds
cld
inc
stos
int3
xor
xchg
cmp
jbe
jl
cmp
arpl
jns
push
sbb
into
rcrl
cli
inc
aaa
dec
push
add
lock
inc
cmp
inc
sub
xorb
das
jb
mov
adc
push
daa
xor
mov
into
call
lahf
mov
adc
adc
add
lret
testl
xchg
cld
repz
jns
ret
arpl
push
lock
fisubrs
flds
and
mov
cmpsb
xor
in
cmpsb
pop
pop
mov
jbe
rcrl
clc
ror
clc
ja
jmp
dec
and
aaa
subl
and
sbb
out
ret
and
jmp
push
jl
lods
mov
push
xchg
lods
fisttps
push
add
mov
leave
fldcw
xchg
xchg
cmp
ret
std
mov
inc
mov
or
cmp
rolb
mov
and
je
ret
std
hlt
popw
xchg
jae
jle
cltd
icebp
or
outsb
gs
into
cmp
cltd
or
mov
loopne
test
jg
out
sbb
pop
ret
out
es
int3
mov
inc
mov
push
outsl
mov
lcall
lret
jbe
push
cs
out
test
push
cltd
fcoml
jnp
jg
insl
mov
inc
jnp
add
cmc
cmp
xchg
cmp
lahf
mov
add
pop
xor
fsubl
fsubrp
jmp
inc
dec
frstor
test
push
outsl
gs
mov
int3
mov
int
sbb
push
dec
sub
mov
sub
imul
jnp
mov
adc
add
lret
jno
xor
loope
out
add
jle
fadd
leave
inc
scas
jno
mov
add
inc
lock
pop
aaa
nop
fisttpl
je
mov
cs
js
int3
inc
jle
arpl
mov
push
rclb
lock
fstp
push
mov
shr
in
lret
push
push
std
psubq
shll
dec
pusha
push
arpl
pop
pop
leave
adc
movsl
lahf
imul
sbb
push
rcrb
push
mov
pop
push
jge
adc
inc
jmp
in
popf
cmp
cmpb
dec
lds
cmpsb
lock
cmc
outsb
inc
in
inc
test
mov
or
out
xor
ljmp
test
incb
dec
and
std
and
ret
ljmp
cltd
repz
cmp
push
xchg
pushf
mov
mov
push
pop
in
xchg
inc
cmp
jge
repnz
sub
testl
cmp
movsb
mov
inc
out
jnp
cmp
cmp
popa
mov
cltd
iret
test
fcoms
test
and
and
das
push
sub
lock
dec
test
push
adc
jae
cmp
mov
mov
jo
mov
xor
add
dec
xchg
push
sbb
mov
leave
sbb
xor
adcb
jae
nop
push
inc
jbe
mov
xorb
outsl
or
movsl
out
add
cmc
out
add
test
mov
fwait
jecxz
cmp
and
sbb
or
xor
sub
subl
dec
inc
dec
jae
faddl
pop
push
pop
aam
aas
jb
or
imul
adc
and
ja
imulb
jmp
cmp
out
sbb
leave
jl
pop
das
into
insl
mov
mov
push
mov
mov
out
std
or
lods
and
dec
push
push
sub
pop
fistps
mov
jae
mov
stos
sbb
mov
inc
jno
jno
adc
and
inc
enter
adc
mov
pop
lret
stos
ret
xchg
or
sbb
cld
or
nop
js
xchg
jecxz
loop
mov
movsb
sbb
cmpl
cltd
mov
sub
dec
loope
cmpsl
lds
out
or
xchg
jns
or
loopne
or
add
fsts
push
mov
jne
push
mov
insl
and
mov
aas
mov
fsubs
push
adc
add
sub
jb
push
loop
cmp
out
cltd
es
lret
hlt
xchg
test
pop
push
inc
js
inc
and
jecxz
lock
mov
and
jno
dec
sahf
xor
std
lods
add
ror
and
rol
push
aaa
fimull
dec
in
inc
adc
cmp
iret
sarl
lock
lahf
mov
jns
and
fimull
xlat
mov
sarb
mov
daa
out
aam
scas
sub
sbb
xchg
xor
jns
aas
xchg
iret
addl
aaa
insl
mov
mov
int3
mov
sub
mov
inc
sbb
ja
lods
jae
sbb
mov
add
ds
es
dec
in
jbe
dec
add
mov
jb
fisttpll
in
mov
loope
daa
repz
jl
pop
faddl
ljmp
bound
or
aaa
pushf
addr16
adc
jae
cmp
aas
mov
sarb
testl
fiaddl
jbe
in
xor
dec
and
fisubrl
mov
mov
mov
push
pop
sub
rclb
xchg
pop
aas
int3
adc
leave
push
les
hlt
jl
sub
pop
sbb
mov
push
enter
mov
aad
adc
xchg
insl
repnz
notl
or
push
mov
sahf
movsl
or
lods
jne
sbb
xchg
repz
test
adc
cltd
ljmp
fcoms
cmc
inc
xchg
std
aam
cs
in
jne
cs
ds
xlat
mov
jne
mov
dec
cmc
div
and
and
hlt
dec
push
jmp
insl
xor
out
fwait
inc
outsl
push
imul
iret
ret
sbb
negl
or
fsubs
sub
popf
and
and
ja
loop
mov
push
mov
lcall
js
mov
in
loopne
cmpsl
jge
lcall
sub
inc
cld
push
arpl
mov
jmp
sbb
sub
lds
test
cmp
cmp
xchg
loope
pop
jb
and
rclb
icebp
setno
jl
sti
mov
or
and
push
insl
mov
pop
insb
sbb
mov
jne
sbb
not
shr
pop
test
jp
movsl
movsb
xor
push
mov
call
bound
dec
add
int
cmpsl
push
pop
mov
push
fcmovne
mov
ret
out
imul
add
jae
pop
cli
jnp
add
pop
mov
mov
add
leave
sub
or
insb
and
out
lret
inc
mov
inc
and
das
lods
cmpsl
push
add
addr16
cmp
cmp
scas
inc
push
push
loopne
mov
loop
push
cmpl
mov
mov
adc
xor
inc
or
mov
aas
sbb
mov
int3
mov
dec
jns
int
movsl
cmpsl
es
pop
sub
pop
and
mov
call
xor
jp
pop
pop
and
lds
jae
mov
push
push
jecxz
sub
insl
imul
movsb
cmc
fldt
push
movsl
xlat
sub
test
push
sbb
cmc
imul
ss
dec
jmp
mov
adc
add
inc
adc
jno
jae
xor
xor
dec
jg
cmp
bound
sbb
sarb
push
out
jb
inc
mov
xchg
mov
gs
ds
outsb
arpl
push
inc
mov
push
sbb
sub
xchg
sbb
push
cmp
sub
or
push
cld
in
inc
jge
mov
stos
sbb
insb
sub
loope
ret
cmp
aam
push
add
int
mov
xchg
xchg
pop
adc
and
and
mov
jp
mov
in
test
lods
adc
dec
test
shrl
push
lss
xor
out
jp
je
stos
push
fstl
addr16
inc
inc
out
and
nopl
stos
sub
je
shl
lahf
icebp
mov
pop
clc
dec
add
pop
adc
or
daa
lods
xchg
inc
fldt
sub
pop
cmp
mov
fbld
call
fldl
push
cmpl
pop
push
and
push
and
out
jne
in
sarb
push
ljmp
push
cmp
sub
repnz
jge
inc
lock
fcmovu
cmp
mov
addl
sub
jns
stos
cmp
cld
jle
test
sahf
adc
push
push
popa
sub
mov
sbb
push
mov
imul
lods
mov
and
js
sahf
fwait
push
das
jb
mov
into
dec
jo
or
jg
test
xor
pop
and
rorb
adcl
jmp
outsb
je
push
stos
jge
mov
mov
add
or
push
bnd
mov
cld
sub
mov
inc
js
xchg
and
dec
mov
push
ja
inc
jo
fucomi
daa
loop
enter
push
mov
mov
data16
nop
inc
mov
jnp
sub
out
mov
jno
pop
jg
mov
imul
cmp
imul
mov
nop
cmpsb
xor
pop
push
in
popf
sbb
or
pop
or
sbb
aaa
aaa
xor
cld
pop
adc
mov
mov
ljmp
cmp
pushl
dec
icebp
sub
popf
push
mov
xchg
loopew
mov
mov
cmpl
outsl
mov
popf
inc
jo
cmpsb
pop
fs
jae
scas
or
or
ljmp
mov
into
or
fdivs
mov
dec
xor
push
shll
xchg
xchg
or
lea
insl
pop
xor
inc
dec
icebp
mov
mov
sbb
ja
inc
in
cmp
mov
out
je
and
sbb
push
push
dec
outsb
pop
lcall
cld
das
or
push
mov
pop
dec
insl
fisubl
notb
insl
iret
and
cmpsl
mov
pop
pushf
adc
insb
push
jno
mov
jns
fistpl
lea
aad
jb
adc
ret
rorl
or
ds
sub
xchg
addr16
push
jecxz
lahf
jecxz
fwait
or
dec
jmp
cwtl
movsl
mov
add
inc
pusha
rorb
xchg
je
test
aad
insb
xor
cmp
adc
clc
sbb
les
jmp
pop
mov
sbb
mov
iret
sti
adc
lret
cmp
xor
sbb
and
mov
jns
sbb
dec
mov
jecxz
mov
fldt
mov
ret
inc
int
in
pop
insb
movsb
push
push
mov
loopne
loopne
and
sub
sbb
sbb
adc
xchg
out
cmp
jo
out
out
xchg
jo
pop
adcb
jp
adc
add
pop
jne
adc
dec
ds
and
mov
inc
into
jo
shrb
pusha
outsb
mov
jmp
aaa
pusha
scas
lock
lds
fnsave
clc
inc
daa
outsb
pop
movlps
push
mov
in
in
sbb
inc
fwait
xchg
rorl
pop
fstps
outsb
jge
nop
jl
push
cld
das
stc
sbb
shll
fcoms
popf
dec
repnz
or
cwtl
jb
xor
xchg
and
jns
add
shl
mov
insl
adc
jg
fcmovb
pop
jns
mov
hlt
arpl
movsb
pop
imul
int
ds
xchg
adc
mov
pop
add
fwait
scas
pop
jmp
out
push
loopne
mov
test
xor
push
fwait
aas
xchg
js
pop
mov
sub
je
test
push
sbb
cmp
jmp
loope
pop
jns
fwait
inc
mov
pop
hlt
cmp
jae
xor
mov
scas
mov
in
xchg
in
or
inc
adc
shr
pxor
mov
je
scas
sarb
into
pop
push
and
push
arpl
in
mov
sahf
or
mov
dec
hlt
xchg
add
adc
sbbb
adc
insb
mov
rol
mov
fmuls
lock
adc
lcall
fcomps
inc
loope
int3
je
lods
icebp
loope
decb
icebp
cmp
testb
inc
repnz
call
lods
push
sub
mov
mov
mov
jecxz
in
jae
push
int3
in
mov
sub
and
pandn
addl
add
cmp
cltd
aaa
sub
sbb
movl
sub
out
test
xchg
sub
movsl
in
das
aaa
stc
dec
fldl
lret
pop
mov
je
dec
jmp
xor
xor
jb
dec
out
sub
stos
mov
into
push
jbe
pop
cmp
add
in
or
cmpsb
push
and
dec
in
add
subl
xchg
pop
lods
jo
xchg
mov
les
ja
cmovae
sbb
shl
pop
xorl
iret
pop
cmp
mov
xlat
pusha
lret
js
fcomps
adc
and
and
lock
leave
inc
ret
inc
into
jae
es
mov
or
out
scas
aaa
and
jp
das
adc
xlat
sti
inc
or
sub
mov
cmp
adc
in
sbb
or
int3
jo
cmp
cmpl
sbb
in
pusha
stos
xchg
sbb
mov
stc
xlat
pop
xor
lods
mov
fdivs
and
jge
or
ljmp
test
mov
fmul
jmp
into
lods
add
add
lods
popf
cli
jnp
inc
in
das
test
adc
pusha
push
push
or
lcall
sub
pushf
inc
shrl
fiadds
stc
fsts
aas
into
jle
dec
xchg
jae
push
and
add
test
jg
push
push
jb
mov
mov
lods
jbe
repnz
mov
rorb
das
adc
faddl
push
mov
addl
data16
scas
xlat
add
std
xor
inc
fcomps
andb
stc
adc
push
push
out
popa
pop
leave
mov
ret
iret
in
das
sti
out
cmp
aad
sbb
pop
movsl
gs
ret
dec
push
push
lds
sub
sarl
cmp
mov
sti
shrl
xor
and
inc
mov
lods
dec
pop
mov
pop
pop
stos
in
jl
push
jp
dec
pop
mov
int3
jle
xor
lods
pop
sub
icebp
inc
xor
insb
stos
sub
push
mov
jnp
or
iret
dec
xorl
shll
xor
adcl
ja
stc
shlb
inc
int3
xchg
js
fcomi
xchg
flds
into
fwait
scas
test
sbb
mov
nop
cltd
adc
and
sahf
cmp
sub
subb
insl
dec
out
popf
xchg
jmp
pop
stos
iret
push
sbb
jl
sahf
mov
add
cmp
ret
iret
pop
data16
test
es
std
rclb
push
daa
das
out
lock
data16
insb
sub
cld
shll
xchg
cmp
jecxz
jo
sub
pusha
or
or
mov
lods
pop
add
jne
dec
or
push
pop
cmp
pop
sub
fsts
xchg
and
push
add
adc
fsubs
pushl
cmc
mov
out
out
clc
inc
cmp
xchg
dec
sbb
add
test
dec
mov
das
xor
scas
inc
fmuls
jae
fdivr
lret
pop
push
aas
lods
pop
movsl
mov
insb
psadbw
mov
pop
iret
outsb
das
out
mov
mov
rcrb
cmp
arpl
and
mov
pop
and
or
loopne
push
push
mov
cmp
lods
mov
test
push
inc
jae
mov
es
cltd
loope
cmp
sbb
dec
cmp
arpl
fcoms
pop
call
notb
aam
push
ljmp
xor
icebp
sub
rcrb
inc
xchg
loopne
fcomps
test
push
mov
stc
and
pop
cmp
jns
iret
add
mov
dec
call
mov
sub
sub
popa
mov
push
js
cmc
js
add
cmp
sub
adc
dec
ret
mov
inc
icebp
mov
in
jbe
lcall
and
pop
xor
stos
in
or
inc
outsb
or
adc
xchg
pushf
cmp
nop
fs
pop
cmpl
stos
sti
mov
inc
mov
lahf
push
sub
aaa
push
pushf
daa
pusha
ljmp
push
xchg
dec
lret
outsl
jns
stos
les
arpl
addb
dec
jae
dec
or
cld
xor
in
push
repz
pop
imulb
sahf
repnz
pop
daa
test
bound
inc
cmpl
xor
cltd
iret
mov
mov
add
mov
cli
xlat
jl
push
jg
push
lcall
pop
cmp
flds
aaa
inc
jne
imul
dec
jle
jo
or
or
pusha
rorl
fucomip
jle
enter
xlat
xor
mov
fdecstp
daa
es
rcrl
adc
push
xchg
repz
lock
loope
loope
xchg
mov
or
out
adc
enter
xor
icebp
dec
pop
adc
xchg
adc
in
dec
mov
cmpsl
je
mov
inc
inc
mov
xchg
mov
loopne
jns
sbb
mov
dec
inc
aad
add
cld
mov
loope
pop
and
iret
pop
xor
mov
popa
adc
test
sti
fmull
out
xchg
imul
nop
mov
xor
lds
adc
mov
add
mov
fsts
jmp
sti
fucomp
mov
dec
out
aam
cmp
or
call
adc
mov
insb
arpl
stos
enter
aaa
dec
jne
loopne
or
dec
and
and
scas
cmp
fisubs
xor
or
jle
sub
mov
lock
icebp
add
cmc
cmpl
call
push
scas
nop
push
sbb
jae
in
cwtl
loopne
lods
js
push
adc
lods
adc
cmc
into
lcall
rcrb
fisttpl
and
add
cs
or
movsb
iret
push
dec
mov
add
int
mov
mov
and
push
inc
stos
loopne
inc
nop
ret
fcom
jno
sbb
xlat
jle
in
aam
out
xchg
xchg
or
inc
mov
aaa
jmp
sahf
dec
adc
or
test
pop
out
mov
bound
clc
fisubrl
outsb
xchg
imul
fcoms
clc
jb
leave
sbb
in
out
inc
cmp
test
pop
fimuls
nop
stos
mov
test
xor
repz
sahf
iret
ljmp
mov
pop
test
das
mov
sub
jmp
pusha
jecxz
lea
sahf
popf
add
mov
pushf
movsl
adc
js
js
ss
stos
adcl
mov
pop
fs
fisttps
cltd
pushf
mov
mov
gs
cmp
jg
inc
out
sbb
dec
mov
popa
pusha
push
cmpsl
sbbl
dec
adc
enter
push
push
iret
dec
sbb
push
insl
jg
ret
jmp
iret
enter
mov
je
add
adc
sub
idiv
mov
fisubrs
sub
jb
iret
or
cmc
sahf
jmp
out
mov
sahf
ret
cld
inc
add
ds
mov
jbe
leave
dec
sti
ds
push
ja
jns
xor
and
fstpl
lahf
mov
pop
cmc
add
inc
inc
add
jns
lcall
dec
das
or
jno
jne
mov
push
or
sbb
push
fcomip
mov
es
jo
outsl
mov
jo
mov
sbb
movsl
movsb
ja
int
jmp
mov
loopne
pushf
add
push
lcall
jp
pop
mov
fimull
lock
ja
add
js
xchg
aad
push
lea
jne
push
in
mov
out
mov
test
fisubl
and
sbb
out
jp
xor
lds
cmpsl
pcmpeqw
jmp
cmp
es
xchg
aaa
lahf
int
mov
movsb
mov
xor
call
and
mov
jge
pop
sbb
and
lret
and
aaa
movsb
test
subb
shl
dec
jl
mov
popa
pop
mov
or
push
dec
call
mov
loopne
or
xchg
xor
ja
popa
daa
add
nop
xor
int3
aas
inc
lcall
outsl
or
push
cmp
add
xchg
xor
hlt
add
sarb
incl
sbb
std
push
xchg
dec
imul
cmc
mov
inc
xor
rcll
ret
mov
outsl
subb
dec
sub
dec
jp
cwtl
inc
test
sub
movl
ja
lods
iret
iret
and
and
mov
push
inc
push
sub
sti
and
push
negl
adcb
adc
fnstcw
dec
jno
sbb
shrl
insb
jb
stos
rcll
cwtl
sbb
jl
xor
push
sub
push
sub
aam
xchg
mov
xor
mov
inc
add
jae
adc
xlat
loopne
xchg
push
add
outsb
jecxz
nop
clc
ljmp
jns
data16
dec
rcll
addr16
dec
repz
and
mov
in
pop
dec
push
sub
sub
adc
sbb
inc
mov
add
lods
mov
into
insb
cmp
movsb
dec
fcomps
icebp
loopne
xchg
jno
inc
mov
mov
les
scas
dec
push
cmc
push
std
sub
fldenv
push
fldt
lret
mov
pop
pop
xlat
cmp
outsl
lds
mov
inc
push
pop
pop
sbbl
addl
mov
cmpsb
pop
dec
or
and
out
cmpsb
lods
mov
cmp
mov
or
pop
sbbb
outsl
mov
dec
stos
lahf
rcrl
push
xlat
fyl2x
ja
or
je
pop
push
test
adc
std
dec
enter
push
jo
adc
add
call
mov
loope
dec
ror
adc
test
xor
enter
inc
pop
xchg
loope
mov
sub
cmpsb
gs
stc
stos
sbb
insb
daa
in
leave
lods
jecxz
sbb
pusha
xlat
cmp
stos
scas
ss
sarl
dec
push
fcmovu
je
lds
push
ljmp
mov
popa
lahf
adc
int3
xlat
aas
std
pop
cmp
call
in
pop
sbb
scas
outsl
leave
lods
loope
mov
sbb
or
xlat
cltd
pop
mov
adc
push
lea
ljmp
pop
or
rclb
pop
xor
lock
sub
sub
cld
jle
gs
sahf
test
inc
loope
data16
xchg
hlt
mov
push
push
ljmp
sahf
jp
xor
lcall
data16
jecxz
test
sbb
inc
or
insb
push
aas
lods
push
ljmp
out
cmp
mov
xlat
dec
xchg
push
int3
lods
lret
in
in
cmpl
jge
mov
lcall
cli
pop
inc
out
out
cwtl
iret
mov
loopne
sar
and
out
adc
dec
jo
dec
aad
mov
mov
mov
inc
and
call
rcrl
jb
cld
sub
add
mov
jne
call
pop
sub
faddl
dec
gs
lods
lds
dec
xor
dec
fistpll
inc
pop
mov
sub
mov
adc
push
cmpsl
push
mov
iret
xchg
int3
inc
sbb
or
insb
stos
pop
sub
leave
cmp
int
mov
popf
in
sar
mov
inc
cmp
cli
fadds
mov
int3
jl
fnstenv
cmp
loope
cmp
and
pop
inc
fdivrl
or
sbb
fwait
inc
in
cs
aam
sub
sbb
std
lods
rcrb
adc
fcomps
push
and
mov
arpl
out
in
fs
out
or
mov
push
sub
aas
sahf
js
jmp
ss
stc
push
pop
dec
jle
cmp
jp
test
lock
js
lret
sbb
inc
pusha
lret
ljmp
imul
hlt
xchg
cmp
ficoms
repnz
rcrb
ss
movl
inc
push
loopne
ficoms
xchg
mov
daa
in
sub
subl
mov
scas
jp
mov
movsl
or
das
cld
scas
enter
iret
test
pop
mov
push
std
out
andl
dec
adc
xchg
dec
and
lret
cmp
fistpl
cmp
pop
je
xor
rcrl
jge
add
adc
ds
pop
jecxz
xchg
iret
add
fcmovnb
int
and
push
lret
addr16
jl
ffreep
fs
lcall
test
ret
cld
ljmp
idivl
into
cmpsb
iret
and
and
iret
sub
adc
mov
nop
stos
push
inc
mov
mov
loop
pop
aaa
pop
adc
aad
popf
fs
jmp
lahf
mov
mov
int3
mov
add
and
pusha
scas
sub
mov
hlt
mov
scas
cmp
popf
and
scas
and
add
mov
xor
push
cmp
xchg
push
out
lea
mov
fisubrs
sbb
or
leave
or
scas
xor
scas
cmp
mov
cmp
fs
cmc
js
out
push
push
pop
jae
or
or
mov
inc
fadds
hlt
mov
sub
inc
js
xchg
into
sbb
insb
ja
imul
pop
inc
push
push
fwait
adc
cmpsl
cmc
rolb
loope
inc
xchg
xor
xor
jp
xchg
cltd
pop
repz
test
dec
xor
enter
add
inc
add
push
sbb
je
jo,pt
jb
lcall
push
mov
push
inc
hlt
pop
out
jg
loope
fwait
int3
aam
ja
sbb
sub
imul
in
outsl
jp
pop
fldl
lcall
cld
mov
shl
adc
and
punpckhdq
lret
pusha
rcrb
loopne
xchg
pop
insb
daa
cmpsl
push
mov
adc
dec
fcomps
cmp
dec
out
iret
mov
adc
ret
mov
or
inc
mov
mov
cmp
mov
frstor
jb
addr16
mov
lret
jae
jne
aaa
jno
mov
dec
push
dec
adcl
jno
cmp
jo
in
outsl
ss
pop
stc
dec
jmp
test
push
sbb
popa
lcall
pop
mov
int
sbb
fdiv
xchg
push
or
shll
into
adc
xchg
dec
js
fwait
xchg
mov
sbb
ljmp
xor
add
fmul
inc
pop
das
icebp
or
pop
jne
dec
dec
jmp
icebp
stos
jb
and
icebp
mov
adc
addb
mov
or
push
pop
mov
push
lcall
mov
lea
outsl
loop
jmp
insl
repnz
mov
scas
sbb
out
or
inc
jp
mov
push
pop
das
loopne
fadds
mov
push
scas
stc
int3
std
xlat
sbb
dec
dec
inc
data16
idivb
shr
adc
inc
movntps
dec
cli
cmp
subl
mov
dec
push
mov
fst
imul
ror
xor
and
stos
xchg
cli
xchg
mov
repnz
int
jmp
push
pop
mov
sub
fwait
out
out
outsb
adc
es
mov
jno
stc
sbb
lret
pop
lret
dec
repnz
xchg
jns
outsb
mov
in
into
mov
jle
aad
jp
mov
jno
inc
xor
popf
jb
push
out
inc
pop
inc
jo
pop
loope
cmp
fdivrs
mov
dec
repz
push
ja
add
and
outsb
inc
loope
imul
in
sbb
test
andl
pop
mov
js
outsb
pop
sub
es
cmp
mov
jno
clc
rorl
sti
outsl
mov
pop
insb
add
lods
add
insl
divl
insl
outsb
push
jecxz
repnz
aaa
mov
mov
jbe
in
or
stos
jl
mov
mov
mov
xchg
cltd
jmp
adc
jb
mov
and
sub
pop
add
test
push
sub
cltd
cli
movsl
movsb
sub
mov
rorb
or
mov
and
sti
xchg
fldt
outsl
les
push
popa
aam
aam
daa
std
cmpsb
pusha
scas
cmpsb
mov
xchg
or
sub
mov
in
ret
mov
pop
hlt
cwtl
leave
int
fisubl
inc
aas
ds
cmp
xor
inc
mov
inc
jle
cmc
inc
lret
jmp
and
out
cmc
push
jno
rorb
fcmovb
je
mov
cmpsl
push
out
es
fdivs
jmp
or
or
xchg
pushw
outsb
xor
das
push
adc
cltd
fimull
rcrl
scas
xchg
dec
xchg
lock
fcomps
jnp
lods
adc
jp
lods
xchg
adc
add
repnz
cmc
and
xchg
cmp
xchg
orl
add
mov
xchg
push
cmp
insb
sahf
cwtl
jae
sub
mov
das
pop
inc
jp
mov
adc
mov
scas
push
in
cmp
push
notb
jle
xor
mov
shl
sbb
fsubr
fimuls
jns
dec
loop
imul
jns
call
dec
cmp
rorb
std
ret
in
push
mov
push
push
mov
lods
das
lock
push
test
imul
jno
jne
push
sahf
ret
stc
pop
and
sub
pcmpeqd
mov
dec
mov
push
lcall
xchg
sub
gs
lahf
adc
rorb
test
or
sub
inc
or
shrl
xor
sub
fs
cmp
xchg
sub
lock
mov
das
dec
bound
mov
fistl
jl
mov
adc
xchg
adc
mov
call
adc
mov
inc
jnp
out
xor
or
jge
dec
jg
xchg
sub
mov
shll
mov
mov
movsb
mov
and
lahf
lds
inc
add
xor
fstps
or
fiadds
arpl
xchg
jo
cltd
pop
jbe
adc
data16
hlt
adc
sti
pop
out
jle
pushl
xchg
sub
push
push
popf
rorb
test
roll
aas
mov
xchg
jns
pushf
ret
insl
shl
arpl
jle
jnp
popa
mov
and
mov
mov
sub
insl
das
dec
xchg
mov
sub
sti
adc
imul
daa
pop
fimull
rep
inc
dec
pop
mov
lcall
stos
mov
jae
test
push
rcll
and
sahf
jmp
xlat
stos
roll
lods
jle
fiadds
xor
nop
inc
fwait
push
and
pop
pusha
test
push
int3
popa
arpl
data16
add
mov
jg
push
inc
mov
mov
push
xor
pusha
notb
fnsave
mov
mov
sbb
pop
mov
mov
pop
push
ljmp
xor
enter
outsb
and
jmp
push
adc
pushf
xchg
sub
aas
out
and
popf
mov
or
jp
xor
out
pop
jl
cmc
test
addr16
push
inc
mov
mov
jo
jnp
mov
mov
push
outsl
into
mov
test
inc
pusha
dec
mov
lock
push
ss
xor
push
cltd
mov
jmp
xchg
cld
rcll
push
fsubrl
sub
enter
inc
test
sub
leave
inc
lret
xchg
mov
mov
rclb
adc
push
xchg
lret
sub
iret
pushf
jbe
ds
adc
div
int3
popa
jp
popf
push
mov
mov
pop
out
mov
movsb
cwtl
add
shlb
aam
repnz
mov
xor
jne
ja
repz
popf
ret
dec
pop
adc
in
lea
push
cld
mov
or
mov
xor
enter
scas
movsl
cld
or
xchg
add
ja
sub
dec
pop
fcomip
mov
mov
hlt
into
push
imul
mull
fnstsw
push
insl
xor
dec
jecxz
pop
sahf
pop
xchg
test
sub
out
aad
sub
lahf
xchg
divl
xor
lahf
cmp
incb
outsb
mov
push
jl
into
outsl
imul
jp
jo
push
cmp
sbb
out
xor
dec
lret
mov
outsl
test
push
inc
and
jl
push
addb
ljmp
aam
cmp
xor
push
pop
pop
push
and
inc
xchg
add
adc
dec
jnp
and
pop
pop
movsl
mov
sub
loop
inc
pop
cmp
cmpl
push
and
cmp
mov
pop
lods
jl
sbb
fcmovnu
in
jmp
jne
push
cmc
lret
pop
leave
outsb
aam
loope
movsb
xchg
or
jmp
stos
shl
fisttps
test
add
lret
dec
or
lock
push
lahf
mov
xor
cwtl
inc
adc
pop
mov
xchg
ds
sub
mov
cld
loop
andl
push
imul
mov
push
pop
mov
xor
mov
out
aad
ficompl
mov
sbb
andb
mov
rcrl
loopne
pop
jge
bound
pop
push
clc
or
push
into
adc
rcrl
out
xor
inc
fstpl
insl
xor
in
cltd
out
ja
xor
adc
xchg
int
xchg
rcrb
fsubrs
add
adc
mov
aad
rcll
xchg
repz
jmp
add
icebp
push
dec
jne
xlat
add
out
js
adc
cli
cld
test
rorb
clc
pop
jbe
pusha
mov
or
mov
int
jb
clc
in
inc
dec
call
pop
js
test
test
cld
lds
insl
fadd
imul
int3
dec
jp
dec
inc
shr
xor
loopne
cmpsl
repz
xchg
lret
sub
inc
push
or
lods
jge
lods
sbb
nop
test
clc
mov
insl
sub
je
cltd
jno
fisttps
jbe
mov
loop
mov
xchg
push
into
sbb
imul
nop
cmc
ljmp
jle
adc
xor
push
mov
mov
aad
sbb
xchg
pmulhuw
stos
cli
adc
jns
or
sar
mov
subl
jmp
pmullw
ss
push
int
jge
and
jae
mov
fs
gs
imul
or
xchg
adc
sbb
mov
mov
out
das
xchg
mov
hlt
jne
std
pop
and
cltd
jp
xchg
fildll
pop
mov
xchg
outsl
inc
jmp
push
dec
stos
popf
sub
lock
ljmp
hlt
in
dec
dec
mov
ror
push
jecxz
fcoml
movsl
test
dec
iret
sbb
dec
or
push
dec
sti
mov
mov
nop
cli
outsl
jae
push
imul
in
add
pop
push
daa
push
aas
pop
cmp
jae,pn
jl
cs
adc
or
adc
xor
in
test
int3
mov
fldcw
pop
push
push
scas
jl
les
and
mov
outsl
ret
test
lea
mov
cmp
cmpsb
mov
lret
jecxz
sub
aaa
adc
cmp
sub
clc
mov
dec
lods
sub
xchg
push
repz
xchg
popa
fimuls
std
lret
push
or
in
rolb
adc
sbb
jecxz
add
cmp
push
negl
mov
cmp
call
pop
cmpsl
scas
push
or
pop
cli
mov
iret
iret
in
ds
stc
aaa
add
inc
and
push
rolb
movsb
cwtl
scas
cmp
sub
sub
and
call
aad
mov
mov
ret
lods
jmp
mov
cmp
mov
scas
es
pop
fsubs
test
insb
dec
and
add
cmp
xchg
xchg
or
mov
xchg
aas
mov
cmp
vpsubsw
ljmp
mov
add
inc
aam
nop
movsb
sbb
sysexit
je
data16
rorb
jg
mov
sub
ss
inc
icebp
and
pop
push
cs
jmp
jp
hlt
int3
inc
jg
jo
mov
jp
xchg
in
and
lea
xor
loop
mov
lds
fwait
negb
jnp
or
ljmp
sbb
add
push
ret
nop
ret
icebp
mov
mov
mov
lcall
mov
outsb
ds
xor
in
ds
fisttpll
int3
call
out
repnz
sbb
mov
mov
fs
fimuls
cltd
adc
mov
inc
clc
xchg
testb
mov
loopne
sbb
push
or
inc
jp
mov
mov
cld
xchg
xor
jns
int3
xchg
not
aad
mov
insb
jmp
mov
inc
xor
cmc
int
insb
popa
je
sub
in
dec
scas
xor
dec
add
stos
adc
nop
mov
sbb
cwtl
inc
mov
sbb
and
jno
mov
jg
cmp
jl
xor
test
xchg
push
adc
lea
xchg
clc
out
cmp
or
pop
outsb
ret
pop
xor
ret
roll
outsl
int
xchg
mov
dec
pop
dec
lods
ja
jle
in
jne
inc
sub
ficoml
add
outsl
push
sbb
and
or
loopne
xor
in
mov
hlt
and
outsl
lock
pop
adc
out
push
rcrl
push
jecxz
cmp
mov
popa
sub
and
dec
dec
sub
xor
adc
sar
cmpsl
pushl
xchg
ss
cmp
fbstp
mov
fs
xchg
jl
adc
adc
into
jae
dec
push
insl
xlat
fnstsw
je
lret
push
mov
and
pop
mov
sub
push
pop
idivb
pop
xchg
cld
push
pop
push
adc
dec
xchg
mov
xchg
in
mov
bound
ds
xchg
loop
out
pop
mov
inc
mov
pop
push
mov
popa
mov
inc
test
mov
mov
test
in
dec
call
insl
mov
mov
push
jp
sar
and
fwait
xchg
or
fs
shr
sbb
lds
btc
icebp
in
adc
in
sbb
mov
and
leave
int
repnz
cmc
jge
subl
jl
mov
negl
cli
jnp
outsl
jg
add
mov
adc
adc
dec
sbbb
cmp
pop
mov
add
mov
icebp
mov
out
xlat
out
pop
imul
stc
push
cs
sub
add
subb
rcrl
jae
repnz
movsl
dec
mov
mov
inc
jbe
pop
mov
dec
call
std
mov
adc
push
out
adc
mov
imul
lret
jns
in
push
mov
testl
inc
pusha
sub
xor
daa
adc
lahf
adc
and
adc
cmpsl
mov
lods
pusha
stc
push
ss
imul
pop
gs
pop
mov
pop
adc
movsl
jle
jnp
js
outsb
xor
add
mov
push
adc
enter
adc
xor
jmp
lods
mov
dec
stc
mov
inc
xchg
inc
sub
mov
jp
jne
sub
add
fistpll
out
or
nop
pusha
rcll
pop
jecxz
fcmovnu
lds
jb
add
push
mov
sub
pop
push
mov
lret
mov
lods
mov
sbb
push
pop
stos
ds
std
mov
xchg
pop
fmulp
ret
dec
insl
jge
mov
push
push
nop
sub
mov
push
add
adc
cmp
repz
and
out
cmpsb
std
enter
cld
or
cmp
inc
movsb
mov
in
test
divl
pop
cmpsb
jo
pushf
or
xchg
popf
or
shlb
icebp
xor
jg
dec
push
lret
mov
push
fildll
insb
or
or
dec
push
lahf
mov
clc
mov
mov
hlt
lret
std
dec
add
push
out
pop
adc
out
pop
mov
mov
cmpsb
jl
gs
push
cwtl
xchg
es
xchg
push
fwait
jge,pt
sti
imul
mov
lcall
imul
push
outsl
xor
dec
out
xchg
es
fbld
addr16
js
sbb
xchg
cmp
push
repz
dec
sub
in
jle
dec
ja
mov
mull
jg
gs
ret
mov
cmc
jae
repnz
shlb
dec
and
aas
stos
shll
nop
js
mov
lock
mov
sbb
stos
inc
add
push
inc
popa
int
dec
push
subl
daa
sbb
fdivrl
dec
stos
cmp
outsl
mov
andb
mov
jo
mov
jecxz
outsl
mov
jecxz
test
xchg
xor
lahf
push
mov
or
mov
jbe
cmp
jmp
xor
js
adc
pusha
cmp
scas
das
mov
test
and
repz
sti
or
pop
xor
dec
test
push
sbb
or
testl
pusha
dec
mov
ret
xor
iret
push
out
cwtl
fsts
test
push
sub
mov
loope
popa
xchg
and
mov
rcrl
clc
jle
js
mov
xchg
xchg
jmp
lods
sbb
sub
mov
mov
mov
pop
scas
ret
mov
inc
jle
nop
fimull
and
cld
ljmp
pop
fwait
cli
shll
outsb
imul
iret
dec
in
stc
mov
sbb
and
mov
stos
sub
sahf
data16
scas
fwait
cmpb
xchg
shll
stc
xchg
test
xchg
and
sarl
ds
scas
mov
mov
test
shr
xchg
leave
lahf
loope
inc
xchg
and
pushf
jnp
cmp
xchg
cmp
sbb
dec
dec
addb
pop
xchg
mov
sub
pop
jne
in
daa
sub
push
xor
std
rcll
xchg
ret
add
ds
mov
scas
cli
js
aad
lods
out
movsl
fidivrl
rcrb
fmull
sub
jge
daa
ret
push
mov
enter
out
cltd
daa
cmp
and
movsl
mov
inc
push
xchg
aaa
addr16
cli
mov
inc
pop
dec
jae
dec
jns
sbb
jae
pop
out
xor
mov
sbb
xlat
dec
sub
inc
xchg
rolb
jbe
cld
jecxz
mov
pushf
ret
lds
xchg
dec
mov
xchg
ficoms
push
sbb
inc
mov
pop
dec
fs
sub
add
call
std
dec
imul
jge
xor
mov
movsb
int
pop
or
jne
ss
fwait
scas
or
pop
cld
inc
idivl
dec
adc
scas
push
ljmp
add
mov
lahf
repnz
dec
push
ljmp
icebp
mov
inc
xchg
sbb
loope
les
mov
adc
sbb
mov
cld
mov
add
shl
push
das
inc
int3
dec
and
leave
dec
push
dec
mov
jp
fstpt
jecxz
and
jmp
sbb
ja
mov
test
fwait
lret
call
popl
xor
int3
adc
outsl
mov
leave
fsubrl
pop
aas
jne
sub
rcrl
dec
mov
inc
cltd
add
hlt
push
and
int
fdivrs
or
sbb
mov
xor
cwtl
and
cwtl
pop
out
addr16
dec
mov
lcall
test
outsb
lods
mov
dec
stos
aas
shl
mov
cli
pusha
je
fwait
mov
imull
cmp
mov
imul
pusha
cmp
cmpsl
out
test
rcl
xchg
loop
xchg
push
outsb
cmp
pop
leave
push
hlt
mov
out
or
jae
mov
adc
add
sub
scas
pop
std
mov
clc
pop
xchg
jge
and
fsubrs
mov
and
rclb
sub
iret
push
leave
add
in
leave
hlt
enter
inc
lock
mov
push
ret
lods
outsl
cld
push
in
outsl
mov
roll
adc
adc
cmp
xor
stc
fdivl
dec
or
idiv
stc
jno
in
aas
jmp
in
adc
int
push
pop
push
test
rorb
movsl
jne
bound
divb
insl
jmp
push
movsl
jmp
hlt
dec
inc
adc
inc
aas
arpl
mov
or
popa
icebp
ja
ja
leave
ss
inc
iret
mov
or
cmpsb
loop
jo
or
leave
cmp
and
mov
scas
inc
xor
int3
mov
into
shlb
push
call
shll
cwtl
mov
test
dec
dec
jle
push
cmp
fadds
adc
cmp
add
outsl
mov
jnp
push
dec
cmpsl
mov
inc
test
arpl
sub
lret
sti
loop
and
inc
fisubrs
jmp
and
fwait
sbb
cli
inc
sbb
loope
xchg
dec
shrl
loop
test
adc
jecxz
pop
je
jge
pusha
outsl
cmp
add
insb
testb
pop
rclb
shll
xor
daa
stos
lods
mov
sub
mov
jg
push
mov
or
pop
mov
scas
jg
jmp
mov
pop
sub
push
loop
mull
cmpl
bound
xor
data16
jo
push
lods
mov
mov
mov
loopne
out
xor
mov
dec
sub
and
xchg
push
sub
int
cmpb
fiaddl
pop
xchg
sub
out
call
and
ror
iret
ljmp
push
jae
lea
shll
mov
jae
cmpsl
lea
push
das
vpaddq
lcall
subb
flds
or
rorl
rorb
fwait
jp
add
push
test
test
mov
cltd
aaa
cvtps2pi
aaa
movsb
insb
lock
test
ss
ljmp
in
and
cmp
push
movsl
jnp
inc
xlat
mov
cmp
mov
rcr
dec
sbb
mov
and
les
scas
pop
xchg
sub
sbb
stc
xchg
jo
into
xor
arpl
ret
push
sbb
dec
repz
or
xchg
jp
xchg
leave
cwtl
lds
sub
idivl
adc
push
sub
cld
ja
dec
xor
insb
xchg
sub
mov
mov
or
imull
clc
cmp
cmpsl
xchg
xor
pop
and
movsb
push
aad
jecxz
loope
cmpl
or
cmpsl
imul
xor
mov
lret
out
in
or
xchg
sbb
jae
xor
pusha
mov
in
aad
add
into
nop
test
movsl
xchg
out
push
sub
mov
mov
sbb
cmp
or
and
sti
pop
cmp
orl
aad
enter
mov
push
fmuls
and
cltd
inc
in
xor
dec
out
sbb
xchg
pop
push
dec
test
push
dec
loopne
add
xor
fstpt
adc
cmc
and
jbe
mov
or
outsl
pop
jnp
jo
jl
pop
dec
cli
jge
cltd
sti
mov
out
test
dec
fsubrs
xchg
jns
jge
jns
xor
fcompl
mov
arpl
inc
jmp
sub
fmull
push
mov
pop
inc
jnp
mov
and
out
jns
xchg
mov
leave
les
lds
dec
mov
imul
cwtl
pop
mov
imul
and
sbb
repz
jb
test
xor
or
lret
sbb
cmp
mov
popa
lret
cmpsl
mov
add
dec
jecxz
adc
push
lock
repz
push
flds
mov
sub
pop
sbb
dec
repnz
cmp
pop
push
dec
pop
dec
pop
cmpsb
cmc
outsl
into
in
fadds
inc
fnstsw
mov
fcmovb
mov
inc
push
fmul
push
push
adc
dec
mov
push
cmpb
mov
mov
jae
push
lcall
push
out
and
xchg
mov
data16
jge
jecxz
pop
mov
adc
fldln2
push
mov
adc
gs
lds
pop
or
add
lcall
push
cld
inc
mov
pop
stos
iret
aad
xchg
mov
xchg
aas
and
pop
jae
fsub
repz
nop
inc
xor
or
mov
adc
enter
xor
hlt
mov
outsl
cs
cli
rorb
add
and
jge
inc
mov
loop
push
and
imul
int3
add
dec
ss
mov
shlb
dec
pop
into
mov
sbb
push
in
fstpl
scas
push
popa
lret
stos
xor
mov
outsl
flds
lret
ja
add
repnz
bnd
mov
icebp
push
pushf
outsb
mov
fwait
ljmp
popa
icebp
jle
mov
mov
mov
imul
inc
inc
dec
inc
test
adc
add
add
pop
shr
xorb
jo
dec
sbb
loopne
dec
cmp
sbb
or
add
js
xor
idivl
sub
imul
xor
mov
add
inc
or
and
and
push
dec
in
cltd
lods
repnz
cli
inc
pop
sub
in
js
xchg
scas
xchg
dec
push
xor
jo
dec
mov
icebp
xchg
andb
movsb
jg
sbb
test
fs
mov
repz
iret
jo
or
cmp
je
mov
sti
ja
inc
fdivr
sub
adc
iret
jno
xchg
pop
jl
outsl
lcall
jmp
push
inc
jne
jnp
cmpsb
inc
and
out
into
pusha
mov
xorb
repnz
cltd
mov
loope
pop
push
scas
pop
xlat
xor
shl
cmp
xor
mov
or
ret
sahf
dec
ficoms
enter
cmp
popf
mov
into
add
inc
mov
test
fsts
inc
xlat
mov
test
push
lds
fs
in
clc
mov
out
stos
push
mov
ret
inc
pop
mov
out
add
pop
iret
testb
ja
stc
jp
repnz
cmc
test
mov
fisttpl
xchg
jnp
imul
push
dec
xor
adc
or
aad
or
aaa
into
xorb
cmp
int3
test
dec
das
outsl
ret
sub
mov
pop
sti
lret
mov
cs
mov
pop
inc
pop
jns
pop
xchg
aaa
jno
inc
imul
rclb
cmpl
sub
outsl
es
pop
gs
xchg
insl
dec
js
cmp
dec
mov
push
inc
jl
mov
popa
imul
dec
flds
or
sbb
das
pop
stos
stc
jle
sub
mov
and
arpl
imul
inc
xor
push
sub
push
aaa
xchg
aad
sbb
nop
daa
iret
clc
push
test
or
mov
aas
into
movsb
jnp
add
jge
test
or
mov
pause
filds
in
xchg
mov
mov
gs
mov
jnp
push
sub
mov
insb
sbb
outsb
inc
mov
add
fdiv
fldt
sahf
pminsw
imul
mov
sbb
call
sar
int
xchg
stc
adc
dec
add
push
mov
fcompl
jb
in
xor
add
movsl
enter
add
lds
and
mov
mov
dec
fwait
cmp
push
into
icebp
js
jg
call
jge
lods
leave
lods
mov
mov
cmp
mov
addb
inc
sar
fldt
fadd
outsb
mov
scas
jp
push
mov
cmp
loop
in
lods
or
or
sti
fwait
clc
jecxz
adc
out
loop
sbb
js
imul
fs
jns
sahf
mov
ljmp
les
idiv
adc
in
and
in
or
shlb
scas
mov
adc
xor
lahf
inc
fwait
xlat
jae
mov
cmp
icebp
cmpsb
stos
mov
sub
shr
loopne
mov
xchg
dec
movsb
iret
lods
xchg
xor
aam
pusha
fwait
movsb
ja
out
push
cmpsb
stos
std
shlb
mov
push
ret
push
cmc
hlt
jne
pop
or
out
js
enter
or
loope
pop
push
or
arpl
and
jmpw
imul
cmc
jmp
shlb
xor
gs
mov
ret
cmp
or
jbe
xchg
in
mov
ljmp
lods
mov
aaa
ljmp
lret
mov
outsl
xlat
mov
clc
adc
sbb
mov
inc
pop
repnz
jnp
movsb
stos
inc
test
xchg
jbe
sarl
imul
xorl
mov
push
loope
stc
cmp
and
jne
inc
clc
push
mov
push
aas
jge
fidivs
pop
xchg
mov
lret
repnz
pop
lahf
jae
add
out
fisttps
sbb
addr16
mov
or
out
pop
mov
dec
insb
mov
or
iret
bnd
addl
fstl
out
jae
int
iret
imul
lock
bound
mov
jp
jbe
inc
test
cmp
scas
int
inc
pop
stc
cmpsb
xchg
fucomp
cmp
jge
pop
cmp
pop
sbbl
daa
les
ret
push
jmp
mov
fsubs
mov
pop
outsb
push
adc
popf
dec
dec
push
pop
leave
mov
xchg
mov
aaa
sbb
cwtl
sbb
add
addr16
icebp
fstsw
in
sub
jp
out
sahf
jmp
mov
out
fcoml
add
shl
inc
sub
mov
mov
aam
add
dec
add
and
lahf
adc
les
movsl
sbbl
cmpsl
cmpsb
jl
fcmovne
dec
fcoms
rcl
aam
pop
insl
out
xor
into
xorl
lods
imul
inc
or
adc
inc
imul
push
sub
xor
fnstsw
scas
mov
push
jle,pn
fninit
dec
mov
popf
addb
test
mov
bound
inc
mov
xor
xor
xchg
mov
adc
mov
int3
push
push
loopne
sarl
mov
mov
jb
jbe
mov
leave
inc
xchg
inc
sub
mov
jle
clc
stos
js
xchg
in
jmp
jns
mov
hlt
int3
jno
pop
aas
jne
xchg
fwait
lods
loop
mov
jmp
aas
movsb
js
jb
mov
lea
xchg
xchg
mov
xchg
sub
mov
inc
add
fwait
or
jo
aad
inc
insb
int
xor
xor
in
aas
daa
or
pop
mov
inc
adc
push
insb
pop
or
push
dec
and
clc
cmp
cmp
sub
xchg
cli
repz
add
or
dec
rclb
or
je
xchg
pop
pushf
add
jo
out
mov
test
jns
ljmp
jp
sarl
stos
sbb
imul
out
movsb
xchg
pop
pop
psubsw
sub
outsb
and
add
sbb
push
or
dec
and
push
sub
dec
loopne
lea
or
or
clc
mov
inc
mov
pop
or
mov
sbb
mov
repnz
ror
adc
popf
inc
fdivrs
pop
push
lods
pop
idivl
cmp
mov
nop
inc
lret
popa
xlat
mov
aad
add
pop
bndstx
adc
inc
xor
cmp
sub
in
mov
push
mov
push
aas
cmp
imul
inc
cmp
cs
es
jno
movsb
lcall
push
xlat
decl
pop
lret
incb
fbstp
mov
in
test
sbb
je
add
push
push
xchg
adc
and
lods
push
xchg
or
repnz
data16
push
das
bound
hlt
xorl
test
out
rorl
add
pop
sbb
add
in
movsl
xor
cs
lret
push
aam
lret
add
stos
stos
aas
push
scas
inc
jns
and
xlat
lods
mov
repz
sbb
movsl
inc
sub
mov
pop
les
jmp
or
pushf
fildl
test
pusha
jo
xor
aam
scas
pusha
xchg
cmc
fisubs
sbb
lcall
arpl
notb
dec
mov
jnp
rcr
or
jmp
push
ret
test
add
jb
lods
std
lahf
js
add
aam
push
repz
jecxz
cli
push
dec
mov
mov
jne
mov
outsb
adc
and
jmp
jns
mov
adc
push
cli
and
and
or
and
je
fwait
cmp
or
adc
push
sbb
pop
jle
out
inc
ss
ja
mov
mov
adc
and
jns
les
cmpsl
mov
outsl
adc
icebp
rorb
ljmp
jle
pop
mov
dec
pop
data16
fwait
imul
inc
mov
mov
sub
lea
lds
xlat
xchg
pop
cmp
pushf
inc
outsb
ljmp
jno
call
jo
test
ljmp
inc
fcmovnb
inc
or
cmc
xor
mov
xchg
mov
xchg
das
or
or
xchg
outsb
push
dec
mov
ds
jmp
js
and
fadd
sahf
popa
lret
push
jb
push
push
push
fiadds
insb
dec
or
packssdw
xlat
and
mov
das
clc
data16
into
je
loopne
cld
cli
pop
mov
push
in
cs
sbb
add
out
mov
cmp
mov
in
xchg
or
out
sub
test
dec
ja
dec
lcall
test
xchg
lds
inc
dec
mov
xor
xchg
pop
out
add
mov
pushf
cs
inc
sub
divl
push
jne
jmp
sbb
xchg
push
inc
shrb
mov
mov
fldpi
das
adc
fwait
ss
aas
leave
ljmp
adc
pop
sub
mov
lahf
shll
or
sub
mov
int3
nop
cltd
lret
lods
test
loopne
repnz
pop
xor
repnz
pop
sarb
cs
jne
loopne
out
and
mov
push
and
ja
iret
decb
cltd
sbbl
xchg
idivb
and
inc
leave
in
aas
lds
hlt
outsl
rorl
jae
imul
sbb
push
cmpsb
in
rcrb
add
mov
sti
mov
and
lock
xor
inc
adc
add
xchg
fptan
mov
push
push
cmc
push
push
pop
sbb
out
mov
jae
pushf
fsts
pop
mov
or
sub
pop
ret
jno
push
hlt
jb
dec
js
or
sub
pop
ljmp
or
fildl
lret
add
cmp
cmp
enter
aas
mov
push
mov
xor
and
sbb
repz
push
sub
inc
mov
or
sbb
xchg
scas
add
aas
shrl
pop
dec
rolb
in
lea
and
or
xor
jecxz
scas
add
aaa
inc
pop
loope
xchg
ss
ffreep
cli
lock
sbb
add
pop
fstp
push
out
cs
cmpsl
pop
jecxz
fdivl
add
lret
push
sbb
clc
pop
aas
mov
nop
fnstenv
je
popf
xor
add
out
and
aad
gs
mov
stos
xchg
aam
fs
cmovs
in
outsb
popa
in
push
pusha
dec
push
adc
sbb
mov
add
mov
mov
mov
stos
movsb
mov
add
and
push
jmp
adc
jae
les
dec
subl
add
mov
dec
mov
pop
not
push
adc
mov
stos
jae
in
rcrb
not
adc
enter
pop
pushf
push
xchg
fwait
sahf
arpl
and
or
xchg
sahf
jne
icebp
add
int3
inc
shlb
fldenv
imul
popa
cmpsb
sbb
add
xchg
adc
cmp
push
stos
mov
mov
and
xchg
rol
inc
cmp
scas
dec
cmpsl
leave
dec
cs
je
mov
mov
rclb
mov
rclb
pop
hlt
pushf
push
mul
lods
add
aas
scas
icebp
or
push
push
aaa
loopne
xchg
push
int3
imul
cmp
stos
testb
out
push
sti
sub
or
int3
test
cmc
push
fildll
popf
into
adc
mov
dec
pusha
arpl
mov
xchg
mov
sbb
mov
shlb
cmp
inc
daa
inc
fwait
mov
repz
push
add
lds
dec
jmp
jo
sbb
push
mov
push
insb
in
jnp
es
test
jae
sbb
xchg
push
sub
inc
dec
cmp
je
sti
push
dec
adc
aas
movsl
cmpsb
sbb
hlt
sbb
or
jge
push
dec
jne
ss
xchg
add
out
inc
mov
push
loopne
dec
stc
fwait
ja
sbb
or
inc
mov
pop
ret
scas
imul
cmp
xchg
and
popf
jb
fdivrl
mov
shll
sbb
mov
daa
stos
sub
sbbb
or
and
insl
xorb
sbb
leave
outsb
lods
lds
addr16
jmp
cmp
stos
repnz
nop
orb
cmp
setl
or
add
sbb
xor
fisubrl
or
mov
xchg
ret
pop
adcb
dec
addr16
rcrl
icebp
out
gs
mov
in
cs
call
xchg
fstpt
and
add
mov
in
mul
xchg
xchg
shll
push
cmp
or
xchg
int
and
cmpsl
sbb
outsb
mov
popf
mov
pop
cmp
add
aaa
in
adc
cmp
es
cmp
jns
test
ljmp
stos
pop
ja
outsl
xorb
dec
movsb
push
sub
jo
cmpsb
jae
lcall
cmp
sub
rorl
and
clc
push
push
mov
cltd
sub
mov
call
jb
sub
push
mov
cmp
mov
lret
add
mov
pop
test
ret
and
sub
cmp
std
pop
in
add
add
xchg
sbb
push
stc
into
imul
cltd
jnp
sbb
scas
adc
cmp
shrb
or
out
lcall
push
push
jge
mov
cmp
fnstsw
adc
mov
add
decl
dec
push
fldl
loopne
idivl
mov
out
sub
or
jl
sub
xchg
daa
cltd
xchg
scas
and
loop
xor
cld
add
or
int3
stos
into
dec
mov
pop
fdivs
jp
loopne
rclb
ja
sbb
xchg
inc
and
sub
cmp
xor
scas
movsl
mov
xor
stos
jo
inc
sbb
push
out
cmp
aaa
movsb
mov
add
aas
int
xor
adc
inc
jne
out
out
xchg
fimuls
xor
aad
mov
and
mov
jne
rorb
jnp
push
arpl
paddw
push
mov
inc
fstpl
cltd
das
std
jnp
cli
inc
add
mov
pop
push
adc
mov
int
sbb
aas
and
popf
xchg
ficoml
adc
xchg
pop
scas
fs
mov
addr16
sub
or
lcall
ds
mov
cmp
mov
fdivrp
jmp
sub
xor
int
test
or
rol
lds
ja
cmp
pusha
pop
repnz
fsubs
les
mov
into
jnp
cmp
shll
mov
xor
cmpb
mov
aaa
inc
pushf
lret
decl
dec
jl
ja
and
scas
nop
or
test
clc
jg
fidivl
cmpsb
cltd
adc
mov
jp
fisttps
add
pop
push
fdivs
xor
int
outsb
sub
xor
lret
das
test
mov
cmc
test
xlat
clc
in
outsl
inc
xchg
jbe
add
jl
jo
push
mov
or
inc
xchg
test
mov
loope
jno
xorb
mov
add
adc
cld
fldl
push
dec
scas
mov
adc
loope
mov
jecxz
and
xchg
jge
das
sbb
out
in
add
sbb
cmp
jnp
shrl
inc
dec
and
add
rorl
cmpsl
sbbb
pop
cli
imul
inc
push
inc
xor
push
hlt
push
dec
jbe
or
add
dec
and
mov
pop
das
fildll
stos
icebp
repz
xor
dec
or
shrl
aam
testl
xchg
cmp
std
inc
or
mov
dec
dec
dec
push
inc
testl
out
or
imul
add
outsb
and
sbb
push
sarb
pusha
add
adc
int
out
aaa
aas
push
insl
cmp
lods
pop
outsl
xor
movb
or
or
mov
adc
mov
pop
lcall
cmp
add
dec
jle
rorb
lock
mov
es
jl
mov
mov
loopne
enter
xor
test
jecxz
sbb
fcoml
cmp
test
xor
aaa
clc
fiaddl
and
fdivrl
sbb
fistpll
mov
fisubl
roll
lea
jl
enter
cmpl
sbb
out
cmp
fistps
jo
outsb
sub
shrb
fists
cmp
cmpsb
les
add
arpl
inc
addr16
mov
pop
pop
jecxz
mov
and
jmp
cmp
call
aas
or
fs
outsl
sbb
add
and
add
leave
xchg
repz
mov
dec
das
icebp
and
roll
inc
mov
cwtl
ss
lods
push
leave
fstps
jp
push
cmp
stc
inc
cmp
push
push
insl
sbb
jmp
out
mov
and
cmp
sub
mov
gs
xchg
shll
fadds
mov
lock
sub
pop
xchg
push
inc
xlat
add
stc
add
or
sti
das
test
sahf
jle
mov
lods
je
sbb
pop
dec
rclb
sub
adc
push
es
lahf
cmp
insl
pop
test
mov
xor
push
push
gs
jae
cld
mov
cmp
shlb
or
add
inc
or
stos
lods
sub
iret
loopne
aad
pop
rcrl
loopne
inc
cmp
cmp
mov
rcrl
and
xchg
cli
push
fdivl
cmovge
neg
jo
aaa
lods
sub
dec
jmp
cmpsl
inc
fidivrl
sub
addb
lock
enter
push
movsl
dec
dec
das
ss
xchg
out
mov
fnsave
pop
nop
in
loopne
call
stc
xchg
inc
lds
mov
adc
and
ret
cltd
mov
mov
or
and
int
jp
fdivl
jl
jns
inc
icebp
not
nop
and
add
pop
pop
dec
stos
dec
push
jmp
test
int3
adc
test
pop
xchg
sbb
lds
and
dec
dec
lcall
in
push
aas
in
push
sbb
jb
les
sti
jmp
inc
mov
in
lret
loope
mov
addb
mov
and
xor
lock
mov
jge
shlb
pusha
xor
cltd
sbb
add
lock
cmpsb
test
inc
mov
stos
mov
adc
ljmp
or
inc
cmp
mov
sub
lcall
mov
jl
sbb
icebp
int
mov
andb
fildl
mov
addr16
xchg
cwtl
fld1
mov
mov
push
les
sbb
and
mov
jmp
adc
movsl
imul
mov
jle
push
lods
mov
leave
inc
out
sbb
popa
dec
shrl
jb
xchg
lock
or
enter
pop
in
pop
sar
gs
out
xchg
inc
mov
scas
push
stos
or
and
xor
faddl
xchg
lcall
add
xor
popa
sub
in
push
xchg
sub
push
jecxz
shlb
movl
insl
outsb
jb
shlb
sbb
inc
push
loopne
push
aad
stos
and
inc
roll
mov
in
fists
notl
orl
cmp
pop
ljmp
xchg
push
xor
xor
lea
add
aas
sti
inc
sub
sbb
xchg
xlat
inc
js
out
mov
inc
dec
hlt
push
add
daa
cmpsb
insb
xchg
cli
mov
mov
xchg
cmp
adc
loopne
jecxz
mov
ficoml
jbe
mov
sahf
pop
dec
jecxz
push
jl
jb
push
clc
jbe
jno
out
bound
pop
inc
inc
xor
sbb
cmpsb
inc
outsb
pop
jge
dec
and
push
push
repnz
test
mov
test
mov
adc
iret
cmpsb
push
orl
movsl
pusha
loopne
cmp
negb
push
out
lahf
test
mov
mov
ds
mov
jmp
add
mov
test
sbbl
cmc
jp
push
xor
lret
inc
lock
iret
xor
fidivs
mov
dec
in
fwait
or
sbb
movsl
push
adc
mov
jge
adc
and
add
cmp
mov
add
mov
or
mov
mov
aad
mov
dec
cs
cmovae
add
sti
int
pop
adc
ja
xchg
in
test
add
xor
dec
ret
xchg
adc
or
int
mov
xadd
pop
lods
daa
mov
sarl
push
jne
icebp
inc
sub
xchg
loopne
jge
in
cmp
add
pop
inc
test
scas
pop
pop
sbb
and
into
dec
pop
mov
dec
push
dec
imul
inc
push
sbb
xchg
aad
mov
push
mov
push
movsl
leave
lock
fcomps
aad
cmp
sub
out
cmpsl
fistpl
insb
sti
xchg
repnz
push
cmp
sbb
test
or
lcall
scas
divb
sti
or
out
pop
out
xchg
jmp
fdivl
insl
mov
repnz
pop
pusha
mov
xchg
aas
std
jmp
aam
or
jns
in
sub
fsubrs
cmp
ret
imul
ds
push
leave
xor
jne
inc
jmp
add
jno
clc
ret
mov
mov
outsl
sbbl
push
rcr
jnp
jno
scas
ljmp
sarb
mov
cmp
bound
pushf
add
bound
negl
lock
adc
lods
dec
mov
les
push
shll
sub
fists
fnsave
mov
and
dec
jecxz
jp
sbbb
sbb
mov
lret
mov
jg
rcrb
push
xchg
push
fisubl
sub
es
fwait
inc
xchg
mov
aaa
cmp
data16
mov
ret
repnz
sbb
xchg
mov
mov
outsl
scas
std
mov
scas
call
lcall
pop
fldcw
outsl
test
sbb
std
out
in
daa
nop
lahf
sub
add
pop
adcl
data16
and
ja
mov
mov
fidivrl
mov
fisubl
ljmp
movsb
gs
scas
pushf
outsl
mov
arpl
adc
xchg
sbb
out
lds
es
aam
xlat
stc
and
ret
mov
mov
int
loope
xchg
das
pushaw
bound
mov
adc
xchg
dec
test
dec
adc
iret
jb
mov
mov
mov
sbb
arpl
sbb
add
mov
xor
cmpsb
imul
jno
in
sbb
jle
mov
mov
leave
pushf
pop
mov
daa
jns
mov
inc
in
pop
shl
xor
or
gs
je
jl
out
dec
cmc
jge
mov
stos
xor
add
mov
stos
orl
stos
scas
or
sbb
loopne
call
mov
dec
cmp
call
xor
test
lret
call
cmp
in
fdivr
add
cltd
loope
iret
adc
jae
hlt
cli
loop
jge
inc
imul
test
fsubr
outsb
out
into
pusha
or
xlat
out
pop
push
add
roll
lret
mov
mov
aaa
nop
lret
cld
in
cmp
xlat
inc
sbb
pop
jle
add
mov
negb
dec
add
xchg
mov
hlt
int3
pushf
xor
out
inc
loopne
cmpsl
das
rcll
fists
lea
mov
pop
das
push
cltd
xchg
lea
dec
jle
ljmp
js
adc
fs
mov
sti
mov
lcall
lods
push
xchg
leave
fimuls
rcl
adc
fwait
xorb
jns
mov
dec
aam
pushf
and
sbb
jecxz
hlt
popf
adc
adc
out
inc
jg
push
mov
shlb
int
mov
mov
mov
adc
fldcw
out
sbb
lods
shrb
jnp
pop
outsl
jbe
pop
xchg
push
hlt
sbbb
insl
test
mov
push
mov
inc
scas
lcall
in
push
adc
add
test
xchg
mov
insb
jnp
imul
insb
cmp
sbb
dec
notb
mov
lock
push
aaa
fwait
ret
mov
sub
inc
add
xor
jl
and
mov
or
inc
test
iret
or
addr16
jbe
and
testb
cmpsl
loopne
mov
add
inc
jo
xor
dec
push
xor
push
insl
pop
mov
adc
mov
mov
lcall
loop
xchg
aam
push
jmp
repz
sub
out
cmpb
and
dec
and
test
cmpsb
mov
push
xor
sub
inc
push
call
aam
cmp
adc
push
xchg
inc
xchg
pop
mov
pop
cmp
and
pop
loop
shll
lgs
lcall
cld
leave
inc
and
push
fisubs
lahf
jecxz
push
add
insl
lods
jmp
icebp
jno
xchg
test
cmp
adc
rcrl
dec
imul
rcl
mov
test
push
icebp
sub
xor
jbe
fldl
repnz
aas
mov
push
les
lcall
jmp
insb
mov
ds
mov
mov
mov
out
mov
xchg
xor
loop
lods
stos
arpl
xchg
jecxz
je
icebp
insb
nop
mov
lods
add
sbb
cmp
xchg
inc
loopne
aam
sub
out
jns
mov
lock
das
sahf
add
xchg
and
rorl
dec
cmp
mov
dec
enter
jg
sub
jae
mov
inc
into
pop
in
xor
sbb
cltd
ja
pop
add
imul
cmp
mov
adc
mov
fmul
mov
push
or
icebp
xchg
movsl
sbb
fs
in
mov
mov
xor
stos
mov
daa
je
movsl
jmp
jl
push
je
cmp
fldl
out
js
and
push
in
int
or
pop
xchg
mov
inc
outsl
lods
daa
test
xlat
and
lret
imul
cmpsl
and
mov
jbe
and
imul
sbb
xchg
cld
xchg
into
das
sub
rcll
and
xor
jle
lret
jl
cmc
push
stos
push
sub
jl
cmp
add
pop
adc
lahf
fwait
jmp
cltd
cmp
ss
sbb
inc
scas
aam
setbe
nop
xlat
and
lcall
adc
jmp
sub
xchg
hlt
inc
inc
jle
icebp
sub
in
cli
inc
jp
mov
add
test
mov
dec
paddb
push
jecxz
inc
jmp
add
add
xchg
pop
adc
xor
ds
mov
xchg
mov
mov
xor
inc
cmp
aaa
lahf
shlb
sahf
imul
pop
jl
adc
pusha
loopne
push
cmpsb
out
sahf
add
movsl
dec
adc
jecxz
jae
popf
mov
in
xor
imul
ret
mov
scas
andl
xchg
pop
aaa
ds
lea
in
mov
mov
pop
pop
mov
cmp
lea
or
dec
ss
out
mov
popa
dec
cltd
sbb
fsin
ljmp
jno
and
mov
pushf
add
mov
mov
cmp
fcoml
std
jae
mov
and
mov
adc
imul
xchg
icebp
jecxz
jno
mov
mov
adc
inc
movsl
loope
mov
iret
testl
cmp
sub
inc
mov
fisttpll
sbb
aad
mov
xorb
inc
jle
lods
aaa
clc
xor
xchg
mov
adc
mov
stos
enter
cmp
xchg
arpl
adc
shll
mov
cmp
rcr
cmp
out
jecxz
push
pop
cmp
movsb
aas
adc
jl
push
mov
pop
mov
jbe
daa
jbe
push
xor
xchg
jge
xor
mov
sub
gs
roll
scas
dec
adcl
rcl
ljmp
lods
and
je
negb
mov
lock
add
ds
lock
xor
inc
pusha
mov
sbbl
sbb
inc
mov
mov
dec
push
pop
jg
xor
sub
add
push
fsubrl
mov
add
jl
insb
add
nop
sbb
ror
loopne
jecxz
push
or
jg
cltd
stos
pop
mov
or
int
sub
daa
cmc
add
imull
addl
pop
lods
mov
adc
dec
fdivrs
jbe
sahf
adc
aaa
sub
mov
into
xor
movsl
les
ret
js
shll
test
cmp
icebp
fists
stos
mov
jp
jno
push
inc
sub
and
fimuls
popf
xlat
sti
stos
fsubl
outsb
insb
in
lods
and
push
fld
pop
fucomip
cmp
cmp
test
dec
sub
jno
jnp
cmpl
mov
mov
adc
add
mulb
jnp
or
push
cld
out
mov
pop
push
fstps
push
sbb
ds
mov
cmp
ret
and
xor
loopne
push
fwait
push
pop
lds
pop
mov
ret
xchg
pushf
loopne
lods
out
xor
call
xor
lcall
pop
leave
adc
imul
leave
mov
sub
daa
inc
pop
push
xlat
pop
mov
and
decb
adcl
mov
int
arpl
dec
inc
mov
pop
stos
xlat
movsw
aam
pop
sahf
cli
stos
cmp
jns
and
notl
std
rclb
push
iret
push
xchg
mov
and
out
es
daa
fwait
push
and
xor
pop
xorl
stc
push
cmp
mov
lahf
mov
xorl
pop
icebp
ret
inc
std
jle
mov
mov
xorl
mov
xor
and
xor
notl
cld
sbb
icebp
push
mov
and
cmp
adc
outsb
aas
mov
mov
out
inc
je
ljmp
jmp
dec
movsl
push
in
mov
add
pop
sbb
xlat
fldt
dec
sti
mov
push
add
push
sbb
or
lret
scas
cmp
in
cltd
jmp
rolb
jp
iret
add
fdivrl
ds
aas
cmpsl
lea
enter
jo
sub
fisubs
notb
js
push
and
inc
mov
test
pusha
xchg
mov
repnz
or
jno
mov
mov
shll
sbb
aaa
xchg
sbb
lods
jl
jo
stos
cmp
and
sbb
test
adc
jge
out
jae
lds
call
sahf
lcall
inc
mov
lcall
fs
add
and
cmp
rolb
push
js
gs
ljmp
sub
mov
fimuls
gs
decl
mov
sbb
inc
rolb
into
pop
pop
arpl
mov
pop
aam
pop
fstpt
rorl
filds
scas
mov
pop
xor
insl
jg
inc
insl
cmp
lock
or
sbb
aad
hlt
pop
push
jo
inc
cwtl
and
cmp
xchg
inc
je
mov
push
iret
test
adc
xchg
xor
xor
adc
jg
push
pop
sbb
aaa
into
pop
lods
add
rcll
push
gs
ds
mov
jns
mulb
cmp
adc
pop
inc
pop
shll
sub
test
fiaddl
lret
jb
push
sti
shl
inc
jmp
sbb
rorb
js
cltd
mov
sbb
notl
pop
inc
testb
out
jne
adc
xor
adc
fsubrs
jge
movsl
test
mov
iret
adc
in
add
aad
sub
and
cmpsb
dec
adc
cmpsl
cmc
xchg
sbb
cmpsb
pop
aad
xor
addr16
jmp
ret
aaa
mov
push
icebp
jp
icebp
lods
xor
mov
pushf
arpl
out
ja
mov
pushf
fwait
imul
fcompl
bound
adc
or
mov
dec
dec
sbb
mov
push
mov
mov
push
pop
lea
ret
lock
mov
dec
int3
lock
aam
xchg
cmp
mov
jae
pop
pop
pop
push
cmp
pop
loopne
icebp
in
pop
hlt
leave
popa
jne
dec
and
roll
lds
aas
adc
and
add
or
jmp
clc
scas
mov
add
mov
xchg
scas
clc
addr16
jle
xor
xchg
in
inc
mov
sbb
add
vunpcklps
add
lds
insl
les
and
out
aam
cmp
adc
sbb
pop
cltd
mov
ja
pop
outsb
dec
xor
hlt
test
scas
in
jnp
mov
lea
pushf
lea
lods
push
jecxz
push
and
xchg
sbb
inc
add
jne
in
icebp
dec
daa
aad
sbb
inc
mov
pop
cmpsb
jg
add
mov
add
fisubrl
mov
cmp
sub
das
dec
jae
or
jmp
clc
inc
xchg
mov
out
or
jl
lods
mov
or
sahf
mov
pop
cwtl
sbb
imul
pushf
xor
mov
outsl
add
sbb
aaa
dec
out
inc
jnp
loopne
popa
xor
mov
fs
mov
insb
aam
sahf
leave
dec
cmpsl
fcomp
mov
mov
pop
sub
cmp
dec
sub
or
outsb
xchg
movsb
pusha
mov
fldz
inc
xor
jp
mov
add
mov
sub
jle
xchg
jecxz
cld
jnp
test
xchg
lret
mov
mov
enter
pop
pop
lock
add
or
cmc
push
pop
movl
insl
mov
in
incl
sbb
sbb
mov
jge
mov
xorb
rcrl
sub
mov
and
push
cmp
mov
test
inc
xor
ja
sub
imul
add
std
imul
out
movsl
loope
inc
lock
mov
xor
and
dec
js
fmuls
ja
in
popa
pop
lods
xchg
add
dec
stos
je
fs
jo
ret
mov
insb
fists
pop
jnp
imul
jp
inc
or
jl
mov
movsl
fldl
xchg
rclb
dec
jge
mulb
cmpsl
pushl
adc
in
rcrl
xchg
jmp
push
mov
mov
and
add
sahf
mov
sbb
and
jg
mov
mov
sub
xchg
clc
push
cmc
xor
je
add
ret
movsb
sbb
push
bound
cli
bound
mov
add
pop
shlb
stos
or
dec
out
xchg
adc
or
inc
inc
cld
push
cmp
mov
dec
out
lcall
xchg
sbb
scas
push
ficomps
popa
mov
je
std
cld
cmpb
adc
sub
scas
stc
sahf
push
sub
cmp
jb
adc
add
push
sub
mov
inc
pop
clc
mov
cmp
out
jmp
data16
daa
adc
adc
out
lahf
and
and
pop
and
push
pop
cmpb
cmp
mov
mov
mov
js
int
gs
aaa
lahf
sbb
movsb
mov
inc
cvtps2pi
sbb
or
shr
jmp
mov
or
mov
scas
add
popf
cmc
imul
sbb
ja
pop
ror
xchg
fs
push
mov
mov
pop
jbe
icebp
dec
ljmp
sbb
movsl
loopne
inc
sbb
imul
sarb
add
xchg
inc
sub
ljmp
and
jecxz
inc
xchg
push
mov
jmp
cmc
and
push
lock
adc
pop
push
inc
cmpsb
xchg
sbb
clc
lret
loop
xor
sbb
mov
rclb
divb
orb
mov
rclb
aad
push
int3
sub
lret
and
pop
or
arpl
mov
outsb
mov
decl
fistpll
dec
push
psubusb
out
dec
xor
mov
sub
pop
add
xor
inc
adc
int
cmp
xor
sbb
pushf
ret
jecxz
xorb
out
push
xor
call
or
outsl
adc
sbb
in
pop
outsl
movsb
pop
sub
and
sub
push
pop
loope
pop
lahf
stos
cmc
iret
cmc
push
scas
mov
inc
repnz
js
adc
test
mov
fs
shlb
lds
push
sub
pop
or
push
imull
inc
lea
rcrb
pop
push
inc
shr
pop
clc
add
cmp
fsubrl
cwtl
inc
inc
fsubs
jb
push
jnp
mov
xchg
outsb
mov
jp
sbb
out
shlb
in
mov
cld
mull
or
add
out
lods
mov
jl
adc
mov
out
mov
push
mov
push
jg
sub
enter
subb
dec
mov
mov
enter
and
add
imul
mov
mov
into
scas
push
xchg
dec
add
aas
and
xbegin
pop
lahf
test
jecxz
xchg
lcall
call
push
fchs
lret
pop
dec
fisttps
pop
mov
in
jae
xor
push
scas
push
outsb
imul
inc
outsb
jl
rcr
dec
sub
xor
sbb
clc
jl
flds
orl
lea
push
mov
stos
xor
ret
into
mov
xchg
into
bound
popa
dec
leave
out
cld
cmp
mov
jns
test
cwtl
in
jne
mov
and
jne
mov
js
sub
ficompl
js
mov
int3
inc
inc
adc
sysenter
cmp
sbb
hlt
inc
xlat
insb
lods
cwtl
in
std
addb
data16
inc
lock
js
divb
jle
and
repz
mov
lods
inc
sub
out
js
xchg
in
lcall
or
xchg
cmpsb
pop
in
shll
sbb
addr16
jp
or
test
jno
push
lods
leave
aas
jg
or
in
imul
test
pop
xor
sub
jno
mov
loop
and
stos
cmp
push
loop
mov
call
test
test
cltd
aaa
dec
pop
cltd
ds
inc
hlt
or
jo
outsb
inc
add
and
sub
daa
add
mov
mov
mov
push
icebp
loope
jmp
aad
cmp
bnd
sub
dec
call
fisttpl
xor
out
jge
mov
cmp
shl
and
and
insb
ret
mov
call
inc
repz
sahf
cmpsb
insl
pop
adc
out
xchg
mov
pop
sbb
jge
call
xchg
mov
pushf
popf
mov
nop
pop
shrb
pop
add
sbb
push
nop
enter
and
loop
adc
div
pop
dec
sti
cmp
push
outsb
mov
call
push
xor
sub
ja
sub
push
shr
or
push
pop
and
in
and
sub
xor
inc
shl
arpl
inc
xchg
fbstp
adc
scas
les
jle
push
or
pop
xor
pop
dec
je
sahf
outsb
stc
cli
xlat
xor
testb
in
popa
xchg
test
and
sbb
je
mov
ljmp
repz
adc
jne
mov
in
in
in
xchg
inc
lds
cmp
push
push
mov
xchg
sub
rep
mov
xor
cld
cltd
or
pop
dec
push
xchg
xlat
sub
ja
movsl
rcr
cmp
inc
push
xchg
pop
ljmp
outsl
lods
lods
aaa
pop
jno
mov
xchg
jl
cwtl
lock
stos
pop
mov
push
xor
aam
cmp
rcl
push
lahf
cmpsl
ja
xor
sbb
xor
aam
mov
xchg
add
test
adc
cmc
cmp
jae
jecxz
icebp
subb
ds
inc
sbb
das
jno
in
mov
test
loope
scas
mov
loopne
data16
ja
push
push
out
js
inc
push
cs
dec
mov
je
jle
mov
sbb
push
pushl
push
push
mov
enter
pop
movsb
mov
aam
sbbl
mov
xor
inc
cmp
lds
popa
rcrl
insl
loopne,pn
faddp
icebp
push
mov
scas
enter
shr
cmp
rcl
pop
lds
lcall
mov
int
dec
test
in
scas
test
or
dec
adc
mov
pop
mov
pop
jp
lea
xor
pop
out
xchg
adc
popf
xor
daa
and
inc
inc
sub
mov
sbb
cmpsb
mov
dec
push
cmc
mov
mov
add
add
dec
xchg
rcrb
push
pop
rolb
jb
push
sbb
in
ljmp
movsb
stos
rep
leave
popl
rcrb
cmp
je
jle
fmul
mov
pop
arpl
add
insb
jnp
pop
cmp
or
or
sarl
inc
jns
sub
dec
jle
in
xchg
out
cli
push
loopne
scas
nop
cmpsb
and
scas
mov
mov
addr16
mov
pushf
mov
inc
push
ss
inc
lret
imul
mov
icebp
dec
fistpl
xchg
adc
dec
adc
cmp
out
lods
or
cmpl
repz
out
daa
insb
add
in
cmp
jo
jbe
movsb
cmpsb
stc
push
pop
ret
cmpsb
clc
and
stc
add
adc
adc
bound
hlt
push
jle
dec
push
notl
jne
enter
jg
clc
sahf
cli
fadd
xor
inc
push
xor
ss
mov
fcoml
and
aam
pop
sbb
bound
push
shr
mov
push
and
adc
rcll
or
loope
xchg
push
cmp
xor
dec
jae
xor
xchg
sti
shrl
pop
std
push
mov
mov
push
shll
loope
mov
js
add
lret
fwait
repnz
leave
es
mov
jmp
cmp
xchg
movsb
push
ja
dec
lcall
push
insb
xor
cmp
push
mov
jno
dec
and
inc
mov
lea
ret
mov
jle
sub
jg
add
xchg
imul
mov
mov
leave
pushf
cmc
push
adc
shlb
movl
outsl
push
insb
inc
ljmp
ljmp
add
and
je
mov
out
pop
loope
clc
pop
cmp
ja
out
cs
lcall
xchg
mov
ljmp
rclb
xor
push
and
push
pop
add
inc
bound
xchg
loopne
mov
cmpb
mov
enter
dec
shll
shrb
lods
dec
divb
dec
movsb
ret
jecxz
push
cld
imull
aas
fiaddl
cmc
testl
subl
add
xor
bound
andb
mov
xor
and
pop
fstpt
stos
xchg
loop
mov
mov
rcl
stos
int
mov
xchg
sub
pop
or
insb
mov
aaa
cmc
andl
xchg
or
xchg
jnp
jno
adc
in
add
sbb
outsl
lods
lret
dec
arpl
mov
decl
ljmp
ret
adcl
int
out
mov
cmp
imul
sub
jno
loope
insb
sbb
jle
es
push
arpl
std
mov
dec
sbbb
movsb
das
mov
xlat
mov
sbb
shrl
test
sbb
xchg
popf
xchg
lahf
or
ljmp
jae
push
mov
lsl
shll
sbb
xchg
test
sahf
pop
mov
es
ljmp
lods
lret
fcomi
pop
mov
movsb
pop
inc
imul
xchg
scas
mov
jle
rorb
sbb
loope
push
cmp
dec
jne
add
mov
push
pushf
sub
cmp
pushl
loop
out
jno
jecxz
push
lods
sub
or
std
stos
push
test
push
repnz
out
pop
cwtl
ret
mov
mov
xlat
test
or
inc
mov
sarb
out
test
sarl
dec
mov
xorl
push
xor
fisubrs
jno
rorb
dec
jecxz
repnz
sbb
test
xor
or
les
pop
in
mov
mov
or
arpl
outsl
rclb
subl
std
insl
cltd
cmpsb
hlt
outsl
xorl
mov
xchg
int
jl
cmp
insb
push
mov
daa
mov
xchg
aad
adc
ret
nop
cmp
scas
or
or
cmpsb
imul
sahf
aaa
cli
cmp
lcall
xor
sbb
and
mov
test
les
xchg
insb
movsb
mov
jecxz
les
gs
cmp
bound
jl
pop
cmp
mov
cmp
es
and
mov
jmp
pop
loope
sti
inc
jge
mov
jae
add
stc
xchg
je
stc
sub
addr16
cmp
xor
aaa
into
negl
aaa
mov
shlb
mov
push
mov
movsl
sti
fsubl
xlat
mov
cmpsl
mov
mov
xchg
xchg
daa
cmp
mov
fcmovbe
lea
jno
or
cltd
ja
mov
sub
mov
sti
test
out
stc
inc
sub
pop
fsub
jmp
popa
movsl
or
add
jl
cmpb
loop
jb
xchg
add
jp
test
fmuls
lea
insl
jle
mov
dec
jae
test
mov
pop
jp
subb
dec
adc
pop
ljmp
ds
and
dec
imul
fidivrs
cmp
inc
movsl
push
mov
int
cmp
scas
adc
push
popa
movsb
pop
loopne
or
add
add
push
aaa
inc
cli
repnz
push
xor
sub
pop
pop
ret
divl
sub
test
mov
mov
push
imul
sbb
xor
out
adcl
shr
jge
mov
imul
call
pop
ficomps
ss
in
adc
out
iret
pusha
into
mov
cmc
xor
pop
hlt
or
sub
mov
scas
or
xor
rcl
les
jb
or
jl
rcll
aaa
xchg
sub
lock
cmp
vsubsd
jb
inc
xchg
rcr
mov
mov
ret
mov
jno
mov
lds
and
out
imull
enter
pushf
sub
addl
cwtl
sub
neg
inc
orb
cwtl
jle
mov
mov
aam
in
ds
leave
imul
in
sbbl
mov
sti
cmp
adc
pop
xchg
and
mov
loopne
jns
loope
insl
and
jl
mov
cld
add
popa
shl
pop
sbb
sar
mov
or
shrb
int
dec
test
mov
loope
sbb
dec
push
inc
movups
dec
adc
mov
sub
jg
pop
mov
inc
cli
shrb
xchg
push
and
push
mov
pop
inc
shl
or
pusha
sub
cmp
fdivrl
ret
mov
jecxz
xchg
mov
inc
inc
adc
mov
je
pop
cmp
mov
and
jmp
mov
xchg
std
es
xor
pop
and
stc
or
inc
mov
cwtl
adc
movsl
cmc
int
cld
adc
frstor
loope
bound
inc
cmp
cmp
mov
enter
lcall
pop
insl
or
push
push
adcb
jmp
push
movsl
cmpb
sub
clc
les
ljmp
mov
faddp
lea
fistpll
xor
push
dec
ljmp
or
je
std
adc
bound
push
lcall
mov
aam
popf
mov
adc
iret
fwait
lret
jb
mov
out
adc
pop
dec
sub
scas
fstl
xor
mov
push
add
mov
inc
scas
lcall
std
or
push
mov
cmpsb
xor
sbb
pusha
mov
push
mov
jnp
jae
and
aam
push
scas
inc
adcb
mov
cmc
aad
mov
or
add
int
stos
or
loope
xchg
gs
xor
mov
insl
pop
prefetcht1
mov
cmp
mov
xor
orl
jmp
lods
xor
jp
mov
sahf
imul
xor
xchg
mov
hlt
or
ffree
sahf
mov
inc
mov
pop
movsb
sahf
sub
hlt
mov
add
sbb
stos
stc
lods
push
dec
fidivrl
pop
out
test
shlb
popf
jns
or
jmp
cmpsl
and
rcl
ja
jl
negb
mov
adc
loopne
dec
xchg
movsl
add
adc
push
sahf
xlat
cwtl
loope
jno
dec
das
jmp
leave
xchg
mov
das
sbb
data16
mov
mov
and
dec
or
aam
and
ss
xchg
cs
ret
pop
call
jp
shrl
jle
sub
rcrl
rcrb
bound
cmp
outsb
mov
insb
adc
xor
mov
cli
sub
loope
loop
arpl
xchg
lods
and
push
or
arpl
pop
test
movl
xchg
jle
cwtl
pop
in
sub
rol
inc
inc
sub
cli
pop
mov
loop
sub
incl
sbb
sub
pop
or
sbb
push
cli
adc
popf
pop
inc
mov
andb
scas
push
xor
mov
jge
xchg
sub
pop
pop
mov
or
pop
dec
sub
dec
mov
jns
shll
mov
or
xchg
mov
add
and
insb
inc
mov
and
inc
insb
xchg
mov
lcall
stos
adc
and
lods
in
aad
mov
aas
and
stc
gs
push
jbe
cmp
push
aam
mov
mov
dec
pop
aad
inc
sbb
and
in
xor
add
xchg
pop
cltd
mov
test
scas
sub
testb
cwtl
lock
cltd
pop
aas
push
pop
lcall
and
push
loopne
sub
cmp
rorb
cmpsb
sbb
mov
int3
outsl
inc
push
mov
push
xchg
sub
aaa
jg
push
push
mov
test
scas
xor
iret
add
or
or
or
ret
xor
ss
lcall
imul
imul
sbb
mov
inc
sbb
fidivs
lcall
adc
andl
fcmovnu
test
inc
lock
pop
mov
add
cmp
push
shl
clc
hlt
add
inc
jno
popa
dec
pop
lcall
mov
insl
movsl
ds
push
repz
jp
mov
test
movsl
inc
mov
mov
ljmp
imul
mov
jg
pop
sti
popa
cwtl
leave
push
mov
push
or
jmp
pop
inc
or
repnz
mov
test
out
jecxz
xorb
xor
xor
out
mov
in
jg
sub
push
mov
pop
add
push
mov
lea
xchg
adc
adc
pop
out
cs
popa
pop
jo
add
repz
movsb
fs
jmp
mov
int3
inc
fwait
lahf
sahf
negb
mov
pop
pop
sahf
jge
sub
push
sbb
mov
cli
adc
aaa
lret
xchg
aad
and
shrb
test
xchg
lods
addl
in
inc
sub
sbb
pop
fldenv
mov
push
lock
mov
loope
stos
push
setne
les
sbb
jns
dec
imul
mov
cwtl
inc
jmp
fcmovne
ljmp
loop
pop
fstpl
push
in
in
sbb
scas
mov
xchg
adc
lahf
xor
dec
stc
in
adc
sub
shr
cmpps
or
in
outsb
sarb
sbb
xchg
sbb
xchg
in
xor
lds
push
ss
fldcw
mov
pop
aaa
in
bound
aas
sti
or
pop
bound
lock
push
into
je
push
jg
hlt
mov
push
push
cmc
or
sbbl
fwait
sub
add
pop
into
fmulp
xchg
sbb
mov
push
shrl
leave
dec
pushf
dec
sbb
leave
ljmp
pop
cli
mov
dec
clc
dec
mov
inc
jo
outsl
jmp
inc
je
jnp
sub
xor
mov
cld
jbe
and
fsqrt
jg
loope
adc
ljmp
adc
fsubs
adc
fwait
inc
call
dec
mov
cli
sbb
clc
jge
inc
mov
dec
mov
std
sub
shlb
xchg
inc
es
insl
repz
and
xchg
pop
or
clc
sub
mov
adc
xor
and
outsb
inc
inc
cmp
in
mov
xor
adc
fstp
lds
pushf
push
ljmp
pop
mov
movsb
pop
ja
xchg
inc
sti
sub
inc
popf
cmpsl
push
jg
scas
daa
hlt
daa
stos
mov
inc
cmp
out
cmc
dec
add
or
dec
out
mov
adc
jmp
mov
push
daa
clc
push
shll
daa
inc
jo
test
add
mov
faddl
out
lds
inc
cwtl
cmpl
nop
fidivrs
inc
jmp
or
test
inc
pop
pop
shrl
push
cwtl
xchg
pop
push
stos
pop
leave
loop
sahf
inc
dec
aas
push
scas
jl
cmp
test
add
pusha
mov
es
repz
stc
and
jmp
movsl
mov
inc
cs
mov
or
add
andb
adc
stos
addr16
je
jp
aad
ret
hlt
xchg
mov
xor
in
inc
cmp
lret
mov
je
jae
mov
and
jecxz
xchg
push
adc
jae
test
xchg
push
ljmp
sbb
cmp
out
orb
sbb
add
shll
stos
in
clc
divl
inc
lock
pusha
push
pushf
dec
es
aas
xchg
cmp
je
mov
shrb
out
dec
das
cmp
lret
ficomps
mov
xor
push
push
stc
into
sub
in
ja
cmp
fmuls
icebp
movsl
pop
lahf
scas
xor
dec
push
jl
daa
in
sub
mov
out
mov
aam
loope
jmp
lcall
ss
pop
sarl
hlt
jbe
jl
lahf
mov
leave
xor
pop
cli
addl
xchg
sbb
scas
add
in
mov
xor
in
pop
push
gs
xor
mov
rcrb
jno
js
xor
leave
mov
cmc
into
mov
ja
lret
sbb
js
mov
test
cltd
mov
or
dec
push
outsb
add
lahf
inc
mov
lods
das
jl
push
push
jne
or
aam
pop
nop
and
mov
jno
rcrl
dec
aaa
in
sti
xor
repnz
mov
add
jbe
hlt
pop
stc
aam
rcl
add
or
cmp
mov
xchg
xchg
out
jmp
sbb
xlat
sti
lahf
pop
scas
fmulp
pop
xorb
xor
jbe
cmp
test
jecxz
pop
mov
push
add
xchg
push
fmull
jge
iret
sub
cmpsl
das
mov
inc
rolb
pop
dec
or
pop
mull
adc
jp
or
xchg
loope
fwait
scas
inc
fwait
out
fsubs
xchg
mov
push
cs
hlt
cmc
shrb
push
insl
mov
aad
adc
pusha
movsl
arpl
aas
sbb
movsl
dec
and
frstor
call
push
aad
xor
pop
popa
ss
mov
cmpsl
clc
sbb
insl
aas
sbb
aaa
jno
aam
push
lcall
and
mov
pop
mov
mov
and
mov
js
mov
call
add
aam
bnd
lea
fisttpll
jmp
flds
pop
mov
fstl
je
gs
mov
sti
add
xor
or
hlt
inc
mov
into
add
push
into
jne
cmc
sub
call
stos
xorl
mov
adc
ficomps
repz
fimull
outsl
loope
vpmacssdd
das
mov
je
lods
add
leave
add
push
mov
rclb
dec
ret
lret
std
jmp
arpl
pop
into
scas
sbb
xlat
push
je
or
jge
add
inc
inc
push
xlat
push
push
sti
dec
sbb
sbb
in
nop
call
push
lea
shll
mov
sbb
in
negb
sti
push
or
imul
inc
mov
in
aam
mov
pop
je
testl
in
pop
loopne
jbe
mov
enter
or
arpl
orl
ljmp
pushf
lahf
dec
lret
or
add
movsl
mov
repnz
scas
sahf
int
cmp
mov
push
dec
mov
mov
bound
stos
xchg
xor
xchg
jae
lret
jl
pop
test
lret
js
fs
sbb
movsb
loop
cmp
dec
cli
js
pop
cmpl
push
inc
xor
or
sbb
fimull
push
xor
jo
test
mov
jl
ljmp
int3
out
adc
xchg
fs
lahf
xor
add
test
xor
sbb
int
lds
sahf
inc
push
jo
xchg
mov
lret
lahf
pop
xchg
out
pop
fs
rorb
or
imul
fdivs
sbb
jmp
xchg
xchg
push
aaa
incb
adc
in
dec
hlt
cwtl
xor
push
xchg
xor
sahf
fldt
insb
fmulp
inc
jo
stos
jmp
fistpl
test
flds
sti
or
adcl
nop
test
cmp
jmp
mov
fbld
mov
add
shll
les
push
hlt
ds
mov
mov
in
xchg
outsl
lret
arpl
mov
pop
dec
inc
xor
aam
inc
lcall
gs
gs
mov
ret
es
movsl
mov
cmp
and
cmc
ret
orb
inc
movsl
out
jmp
adc
mov
inc
dec
aaa
js
nop
fimuls
inc
pusha
mov
pop
sbb
push
mov
jl
dec
dec
into
inc
lea
mov
mov
pop
test
andl
cmc
or
push
cli
add
mov
jae
hlt
push
xchg
add
rclb
jnp
je
lahf
or
jne
lea
mov
jmp
jp
lock
push
pusha
mul
sahf
lret
cmp
jge
xor
insl
mov
inc
popf
sbb
mov
roll
or
testb
add
xor
dec
or
xchg
bound
add
jbe
les
dec
sbbl
cmp
rolb
push
mov
fmuls
jo
push
je
jo
adc
add
jge
sbb
shlb
mov
addl
cmp
adc
movsb
stos
push
lock
lcall
fwait
xor
dec
mov
mov
add
sub
jmp
cmp
inc
add
les
jne
cmc
dec
xor
push
mov
aaa
jge
mov
pusha
mov
or
mov
movsl
mov
fsts
fcoms
roll
push
or
dec
add
test
loop
lods
or
and
pushf
jmp
rcrb
ljmp
adc
mov
xchg
jo
fistpll
in
mov
mov
jns
push
jnp
cmp
hlt
aad
sahf
mov
fimuls
data16
adc
mov
adc
mov
cmpsl
xor
sub
jae
mov
arpl
xor
rorl
dec
mov
mov
mov
and
jnp
test
fcompl
jge
lods
adc
leave
xor
push
push
mov
js
loope
iret
jle
sbb
pop
or
push
jb
fisubs
clc
out
xor
mov
cmp
in
lcall
push
cmp
test
inc
fcomp
or
jg
lods
adc
cwtl
push
loope
pop
rclb
sbb
test
insb
inc
jnp
push
movsb
adc
lahf
and
dec
js
fwait
call
jp
sbb
rcrl
in
ja
jecxz
xor
adc
repz
data16
jle
adc
popf
test
inc
lcall
inc
lds
jno
cmp
jno
mov
movsb
push
adc
stos
popf
ret
cli
adc
lret
inc
inc
dec
jecxz
dec
cmp
push
pop
in
add
fisttps
and
stos
add
orl
movsl
andb
mov
jns
lds
mov
adc
stos
xchg
pusha
mov
or
mov
aad
cld
repnz
lahf
sub
scas
sti
out
fidivrs
lods
dec
mov
or
roll
jge
push
push
loope
or
fldenv
cmp
push
cli
jae
xchg
fninit
clc
int3
testb
or
popa
and
pushf
into
ds
scas
dec
sub
mov
mov
jl
fldl
fistpll
mov
movl
ja
loopne
mov
movsl
out
push
hlt
push
test
xor
xor
and
test
xorb
push
mov
pop
lods
mov
das
fdivr
inc
out
std
mov
mov
mov
leave
xchg
cltd
cmp
inc
les
xlat
mov
push
mov
rclb
jecxz
fstpl
nop
sub
loope
jg
mov
xchg
movsb
xchg
loope
jo
jmp
adc
xchg
popa
sbb
ret
cli
dec
xchg
icebp
loopne
movsl
cli
aad
mov
pushf
in
push
mov
loopne
data16
xchg
and
dec
inc
and
lahf
in
mulb
xor
and
xchg
sub
mov
mov
and
cwtl
xor
inc
lret
cmp
dec
bound
fyl2x
mov
stc
sbb
arpl
lcall
mov
lret
and
push
ret
or
stos
pop
pop
pop
lret
push
sub
mov
shlb
dec
mov
mov
pop
sbb
mov
push
add
pusha
mov
lds
sbb
stc
jg
in
push
sar
and
mov
cmp
loopne
rcl
shll
outsb
jmp
cmp
mov
jae
call
pop
cmp
pop
push
test
icebp
and
lcall
mov
ret
or
mov
add
loopne
sub
sbb
cmp
negl
jns
pop
pop
cmp
mov
mov
mov
push
lret
pop
add
mov
leave
and
fnsave
sbb
sbbl
mov
loope
push
stos
mov
int
lea
out
sub
inc
repz
sbb
push
cmp
xchg
sbb
xlat
mov
decb
cmp
xchg
orb
divl
test
add
pop
roll
testb
cmp
jnp
push
or
fsts
cmp
pop
fistpll
sarb
loop
or
xor
pop
int
inc
xorl
xorb
lret
aad
sbb
mov
cmpsl
inc
sbb
loope
shlb
jp
dec
sub
fnstcw
sbb
dec
inc
mov
or
lods
std
pop
add
stos
or
outsb
fcoml
ja
pop
mov
adc
adc
jo
fnstcw
and
jns
pusha
pop
popl
shlb
mov
mov
dec
subl
and
mov
stos
rorb
mov
or
fisubrl
add
add
and
xlat
mov
pusha
and
fdivrs
and
incb
fsubrs
and
rorl
mov
and
popa
mov
cmp
jno
shll
add
push
test
jbe
dec
push
mov
aad
push
out
xchg
dec
mov
fs
das
sahf
pop
outsl
sub
sbb
push
pushf
xor
out
addb
dec
push
jge
mov
les
imul
sub
jg
push
lcall
mov
bound
cmpsl
and
int
outsb
and
ljmp
shlb
inc
pop
insb
cld
dec
or
stos
sarb
xchg
call
insl
xor
push
push
xchg
inc
aas
push
jmp
inc
js
xor
cmp
mov
jno
xchg
scas
pop
js
gs
fcomps
sar
lea
or
scas
loopne
pop
insl
cld
add
xchg
mov
outsb
dec
sbb
scas
sbb
test
aaa
insl
mov
mov
push
dec
cmp
jle
adc
xor
pusha
xchg
mov
inc
nop
xchg
push
sbb
or
sub
lods
adc
out
cltd
lods
loope
pop
in
jbe
push
roll
outsl
add
clc
lea
xor
jns
mov
push
into
pop
xor
aaa
adc
add
icebp
or
jl
push
scas
fcmovne
push
xchg
cmpsl
outsl
pop
in
jmp
aaa
nop
pop
push
xor
fucomp
sbb
sub
test
dec
ss
imul
mov
fs
fists
mov
outsw
sbb
and
aam
mov
mov
insb
pop
add
mov
in
xor
xchg
adc
inc
push
push
cmc
adc
movsl
in
ficompl
nop
cmp
test
mov
outsl
pop
in
data16
iret
jo
xchg
mov
xchg
cmp
mov
orb
repnz
lcall
test
adcl
inc
mov
fcompl
mov
jl
adc
jns
lahf
stc
jle
int3
in
mov
inc
inc
lea
and
mov
cmpsl
add
mov
fcompl
xlat
in
pop
ja
mov
add
outsl
or
ds
xor
ljmp
je
fsubrl
fwait
jle
mov
cwtl
adc
lock
test
sub
xchg
out
or
hlt
out
or
or
dec
sub
inc
fprem
rorb
xchg
mov
or
jne
sbb
fwait
lods
daa
mov
int3
push
es
dec
cmp
hlt
xchg
mov
push
and
int3
insl
or
and
rorb
flds
lds
mov
shll
insb
jmp
rcrb
clc
sbbl
pushf
mov
out
jg
push
jb
dec
movsb
xor
jns
dec
xor
jb
jae
xchg
xor
sub
mov
js
push
jae
decb
insb
js
dec
push
pusha
imull
cmpsb
pop
sub
lods
adc
popf
fistpl
rorl
mov
pushf
notl
lahf
xor
sahf
imul
mov
inc
push
scas
mov
xlat
rcrl
cltd
rclb
inc
or
jae
mov
xchg
jne
sbb
and
mov
rorb
jae
push
or
adc
stos
push
xor
add
adc
pop
xchg
std
sbb
iret
lods
xchg
and
js
in
ljmp
cmpsb
lret
adc
cmp
cwtl
sbb
or
fdiv
mov
paddb
add
mov
jp
dec
xor
mov
andb
sbb
adc
cmp
xchg
fildl
sbb
lods
xor
xchg
pop
push
mov
pop
xorb
sub
pop
outsb
sub
roll
and
jno,pn
enter
mov
pusha
mov
mov
daa
sub
std
jnp
shrl
adc
lea
scas
pushf
sub
sti
lcall
icebp
and
pop
cld
pop
int
mov
xchg
jnp
jbe
adc
add
addr16
out
scas
jb
cmp
pop
mov
dec
or
push
sub
push
mov
rcr
sub
int
xchg
mov
or
cmc
outsl
sbb
jne
push
popf
mov
push
sbb
dec
adc
dec
incl
arpl
out
jmp
mov
or
out
lret
and
dec
xchg
mov
ljmp
adc
adc
dec
cmp
bound
adc
popfw
ds
iret
xor
andb
inc
dec
and
nop
cli
pusha
jg
and
stos
mov
sub
out
mov
jle
xchg
adc
jo
pop
inc
or
pop
mov
cld
pop
xor
push
dec
adc
adcl
xor
inc
sahf
xchg
fldt
jo
or
insl
lods
push
add
jecxz
or
add
mov
inc
push
push
jg
faddp
and
jmp
jae
adc
xchg
sbb
icebp
shrl
add
fsubrs
insb
inc
test
aas
int3
mov
pop
repz
fincstp
sbb
sub
add
cmp
sub
arpl
jb
cmp
ds
sbb
stos
mov
lds
test
sbb
ljmp
cmpsb
push
fsubs
test
and
daa
pop
dec
inc
mov
xchg
fisubrl
into
iret
insl
call
fsubrs
xor
adc
jnp
mov
inc
xchg
into
push
fistps
movl
push
mov
push
mov
mov
sub
dec
cmpsb
mov
push
jge
mov
in
xchg
push
ja
imul
adc
pop
adc
int3
scas
adc
adcl
jns
inc
dec
lds
adc
rorl
test
xor
das
jb
test
mov
imul
in
hlt
dec
jns
cmpsb
push
mov
and
cmpsl
je
sbb
repnz
jbe
inc
popa
pop
jle
pop
inc
orb
lcall
fwait
xor
push
subb
ljmp
test
fld
dec
sbb
lds
stos
sub
iret
insl
mov
mov
notl
mov
mov
lret
out
inc
jb
and
sarl
popf
cwtl
outsl
int3
mov
push
test
rol
scas
mov
scas
xchg
xor
cmp
repnz
and
shlb
cs
pop
adc
push
enter
hlt
hlt
sbb
outsl
subl
ds
mov
push
imul
mov
test
sbb
sbb
pop
orl
pop
ds
sbb
lcall
mov
xor
imul
stc
ror
mov
push
aad
cmp
incb
xor
sbb
dec
inc
das
imul
out
adcb
jno
mov
push
popl
lret
jge
test
sbb
adc
adc
mov
das
lret
mov
mov
adc
sahf
bnd
mov
mov
movsl
dec
shrb
push
add
sbb
sbb
into
cltd
xchg
aam
lahf
movsl
inc
lds
iret
xchg
movhps
in
mov
out
jge
mov
dec
mov
or
dec
mov
js
sbb
jns
and
test
enter
push
cmp
in
fiaddl
int3
or
dec
bound
and
xor
sub
mov
lods
xchg
lods
stos
mov
imul
mov
test
pusha
cmp
loopne
pop
sub
stc
out
fs
roll
int3
addb
icebp
fmull
xor
sub
addr16
sub
lcall
rol
adc
repz
add
inc
test
jl
insl
xor
cmc
xchg
rcr
cmp
adc
mov
jne
jnp
test
inc
out
inc
mov
push
cld
pop
jo
shll
jo
arpl
inc
mov
pop
push
popf
and
cmc
dec
mov
cmp
mov
dec
hlt
xor
pop
mov
add
mov
mov
adc
jbe
mov
xor
repnz
add
out
ja
or
push
je
pop
add
mov
xchg
jg
leave
leave
xchg
cmp
ficoml
mov
pushf
jb
scas
test
mov
jae
incl
ffree
addl
jl
inc
xchg
popa
pop
lock
pushf
xchg
test
mov
lock
into
sbb
add
dec
in
xchg
sahf
mov
addb
mov
jae
add
ficompl
or
or
xchg
sub
daa
mov
dec
dec
insb
fcmovnbe
push
mov
shl
cmp
movsb
sbb
shl
mov
test
arpl
cmpsl
xlat
ret
sbb
lods
mov
les
or
repnz
push
lock
mov
sbb
divl
lea
cmpsl
test
iret
dec
mov
ja
and
cmpsb
out
stc
test
ljmp
mov
sub
push
lods
lods
mov
push
mov
mov
bound
sbb
movsl
and
or
aaa
cmp
clc
push
mov
rcll
and
shll
outsl
pop
lret
mov
stos
es
xor
push
fcmovu
repnz
stos
xor
add
add
jns
and
push
pop
lea
add
mov
popf
cli
iret
and
push
push
or
mov
movsl
mov
jae
cmpsl
fiaddl
inc
xlat
sbb
or
pop
nop
inc
test
sbb
rorb
dec
adc
mov
pop
cmpsl
decb
push
jge
push
mov
out
xchg
movsl
mov
pusha
jmp
shll
in
xor
fwait
dec
repz
out
aam
xlat
xorb
cmpsb
cli
fwait
icebp
loop
xorb
inc
and
out
mov
xlat
push
inc
in
jae
jmp
testb
ds
int3
cld
lock
enter
xchg
testl
jmp
mov
or
mov
fnstsw
sbb
xchg
xchg
adc
mov
push
and
or
scas
push
mov
jbe
out
inc
aam
in
mov
xchg
pop
mov
mov
cmc
jg
xor
xchg
stos
mov
xchg
gs
in
cmpsb
xor
mov
xchg
fwait
sbb
cmpsl
jmp
push
inc
ljmp
mov
rolb
sub
sbb
fstl
xor
pop
jle
jmp
lock
les
and
xor
ja
popa
leave
loope
daa
out
addl
mov
add
inc
inc
jne
xorb
loopne
nop
movsb
lods
xchg
popa
jg
dec
pop
fsubrl
mov
mov
jne
dec
mov
cmp
xlat
cmp
xchg
mov
xor
push
sbb
or
in
mov
fstp
adcl
mov
insl
mov
test
jbe
repz
mov
insl
clc
inc
jnp
add
fsubl
nop
test
inc
rolb
pusha
or
nop
mov
call
xchg
mov
mov
arpl
add
js
mov
inc
xor
push
mov
out
adc
push
dec
repnz
sub
adc
adc
cli
jno
jbe
insl
sub
pop
xor
add
dec
mov
iret
aas
loope
jbe
sub
push
fdivs
scas
rcr
bound
ljmp
push
xchg
movsb
loopne
mov
xor
shrl
std
cmp
ret
mov
cs
aad
test
pop
popa
mov
arpl
cmp
xchg
shl
jae
jo
popa
cltd
mov
cmpsb
mov
ret
jle
xchg
adc
add
xchg
mov
add
fstps
adc
push
cli
add
xor
mov
shrb
loop
jle
push
sbb
addr16
add
push
imul
jecxz
outsl
sbb
or
add
or
lods
push
jecxz
mov
cmp
notb
gs
adc
mov
inc
sbbl
xchg
or
movsl
stos
scas
aad
inc
mov
mov
setno
add
jge
push
cmp
int
sbb
pop
data16
sarb
lods
rcrl
xor
ds
jge
cmp
or
inc
bound
sti
rcrb
cmp
sub
mov
aaa
es
sub
xchg
aam
add
je
fdiv
mov
jecxz
movsb
xchg
or
sbb
sub
movsl
xor
lods
add
push
stos
pop
imul
mov
imull
inc
cmpsl
arpl
pushf
lahf
xchg
mov
cmp
jg
cwtl
pusha
dec
mov
push
mov
pop
inc
jnp
pop
mov
cs
jb
cmp
rclb
and
adcl
add
lods
lds
lds
int3
int3
inc
xchg
sarb
or
dec
sbbb
fwait
pop
and
insl
adc
fstp
or
das
out
jmp
mov
jne
shll
mov
cwtl
aaa
push
ss
insb
lret
fs
adc
xchg
pop
or
lret
adc
ret
push
cli
orb
add
or
and
cld
cmpsl
das
gs
mov
pushf
lret
xchg
fldl
mov
xchg
cld
cli
cmp
test
fbld
mov
es
inc
int3
fsubrp
jns
out
cmpsl
iret
sub
or
mov
cmp
sbb
insl
sbb
ret
outsl
or
out
lds
or
dec
js
popa
test
and
movb
repnz
sub
es
mov
ret
mov
dec
test
xlat
lahf
inc
mov
fcoml
push
imul
cltd
je
sahf
fisubrs
mov
cwtl
lds
in
in
shlb
shll
xor
cs
cwtl
adc
push
mov
pop
xchg
mov
shrb
mov
jmp
xchg
adc
and
fs
cmpsl
fsts
or
inc
or
mov
inc
or
pop
popf
lret
movsb
cmp
mov
pop
fs
jb
mov
jae,pt
mov
adc
lahf
cmp
int
mov
jno
inc
daa
jl
test
insl
daa
leave
fnsave
pop
rcll
push
hlt
mov
inc
adc
addr16
mov
aas
out
dec
sbb
jns
jmp
jbe
cmpb
test
or
andb
dec
add
andl
out
or
les
fmul
mov
mov
fwait
leave
mov
arpl
cmpsb
incb
iret
mov
lret
xor
or
cwtl
xchg
aad
pop
call
popf
sbb
cld
sub
add
outsl
insl
mov
pop
sub
sub
pushf
sbb
xor
fmuls
in
int3
rcrl
inc
data16
cmp
pusha
mov
push
xor
mov
arpl
cmp
push
xchg
lock
pop
test
push
mov
aam
cltd
in
lods
inc
add
lcall
pop
in
nop
or
cmp
jmp
add
mov
xchg
insb
inc
sti
push
or
jmp
or
in
sub
sub
int3
clc
pop
dec
sbb
sbb
or
dec
pop
movsb
enter
and
movsl
lock
cmc
xchg
inc
xchg
int3
mov
in
or
je
fwait
pop
inc
shl
movsb
leave
cmc
imul
xchg
jl
fmull
into
jecxz
add
gs
cmp
mov
inc
mov
cmpsl
mov
cmpsb
lret
out
cli
xchg
cmpsl
xchg
mov
jecxz
daa
mov
and
xor
mov
lret
adc
xchg
jnp
cmc
stos
push
adc
lret
cmp
decl
xor
rclb
or
jnp
adc
cs
addr16
xchg
push
dec
popf
sbb
ds
mov
jmp
mov
idiv
cs
jnp
mov
repnz
pop
xchg
and
ljmp
or
cmp
sub
dec
int
sbb
out
jp
insl
jmp
pop
cmp
dec
sti
cmpsl
jmp
mov
add
and
and
adc
mov
repnz
daa
or
out
outsb
insl
dec
lock
arpl
xor
dec
xlat
lret
popf
les
push
inc
add
adc
pop
and
dec
or
lea
imul
and
pop
outsb
testb
mov
xchg
inc
pop
sub
arpl
dec
insl
sti
popf
iret
nop
push
dec
insb
or
push
lods
cs
arpl
pusha
fnstcw
mov
or
inc
arpl
sub
gs
in
into
push
aaa
sbb
mov
popf
loop
mov
mov
lret
mov
fdivrs
stc
arpl
insb
icebp
out
scas
rorl
mov
cmpsb
in
push
arpl
mov
jbe
sub
rcll
xchg
shlb
jge
jp
mov
or
push
mov
xchg
mov
mov
xchg
dec
cmp
xor
lods
bound
xchg
popf
ret
mov
pop
es
jb
sub
adc
sub
imull
ds
mov
cmc
xchg
clc
inc
xor
out
jecxz
and
repnz
inc
mov
cmp
ja
cld
push
mov
add
sbb
dec
lcall
push
xchg
negb
pop
sub
mov
lret
push
iret
sub
aad
inc
ljmp
out
jecxz
insl
sbb
mov
sahf
loope
mov
cmpsl
aam
and
jg
inc
shll
scas
je
push
cmp
in
pop
fcoms
idivb
fucomip
push
mov
and
es
or
jecxz
repz
push
dec
adc
mov
xor
pop
dec
int3
sub
dec
shl
in
dec
js
adc
mov
aas
insb
sub
out
inc
adcl
mov
mov
pop
icebp
divl
fsubs
mov
ljmp
lods
cmp
out
mov
add
movsb
adcb
inc
icebp
push
insl
clc
pop
stc
push
cmc
aad
jb
jns
in
aas
inc
xchg
loope
fnsave
cmc
icebp
popa
das
sub
fwait
out
inc
mov
in
inc
dec
cli
outsb
outsl
out
jecxz
lea
or
nop
jl
and
xor
mov
or
push
jno
je
pop
ljmp
aaa
dec
stos
push
ljmp
ret
inc
inc
push
xchg
push
push
inc
jl
lcall
sub
inc
in
mov
adc
scas
jg
ss
jb
les
jns
out
subl
les
pop
mov
arpl
sbb
fnstsw
sahf
call
xchg
mov
dec
test
test
movsl
nop
in
fsubrp
or
xchg
and
mov
adc
push
push
pop
dec
arpl
out
inc
pusha
jno
adcl
icebp
fwait
pop
std
ja
rclb
mov
mul
popa
int
mov
rcr
mov
ds
mov
jnp
fmuls
iret
popf
cmp
mov
movb
mov
stc
dec
ret
pop
cmp
insb
leave
add
fwait
aas
pop
cmp
fstl
movsl
xchg
stos
fisttpll
cmp
cmp
ja
dec
mov
in
shl
or
es
mov
or
sbb
nop/reserved
jne
dec
shlb
fs
addr16
je
loopne
sti
aad
mov
mov
fcoml
gs
popf
mov
ljmp
pop
jne
loop
mov
mov
pop
and
cld
cs
sbb
pop
fsubl
mov
push
shl
pop
in
mov
and
daa
js
or
dec
fwait
mov
je
adc
mov
out
sub
or
imul
mov
inc
cmpsl
ss
dec
and
jge
push
xor
xchg
orb
insl
xor
stos
add
fadd
or
mov
jo
fwait
mov
mov
adc
dec
loope
movsl
jg
dec
sub
insb
sub
out
int3
shrb
int3
call
and
sbb
fiadds
stc
push
lret
divb
xchg
roll
jne
jne
add
jb
repz
and
push
or
add
xor
fisttps
ljmp
cmp
jnp
rcrl
outsb
data16
arpl
pusha
mov
daa
push
lret
xor
dec
cld
rorb
push
std
sbb
test
mov
stos
daa
in
push
xchg
xchg
call
xor
mov
cs
jecxz
xor
fsubrs
mov
shll
jo
xor
out
xor
cmp
xor
lahf
enter
mov
push
jb
mov
out
mov
shlb
sahf
loop
add
outsl
adc
out
test
xchg
and
mov
sub
cmp
imul
or
xchg
dec
mov
inc
outsb
imul
movsl
ja
fists
mov
jne
arpl
notb
jge
xor
push
popf
lods
pop
jnp
mov
loopnew
test
adc
icebp
xor
cmc
xor
adc
add
sbb
data16
je
gs
xor
add
in
jbe
psubd
cs
add
mov
pop
imull
mov
addr16
mov
xchg
lahf
xchg
push
jle
pop
xor
sahf
orb
adc
in
xchg
frstor
clc
mov
leave
lods
jge
lods
leave
or
push
sub
xchg
mov
xchg
test
cmp
in
mov
mov
pop
sbb
loope
cmpl
mov
cmc
mov
arpl
push
push
dec
xchg
dec
jnp
loope
out
mov
add
push
cmp
mov
loopne
inc
addr16
addr16
jne
mov
mov
mov
orl
fs
loope
pop
stos
stos
pop
fdiv
dec
int
dec
xchg
cs
mov
jl
notl
and
fbld
or
cmp
pop
cmc
ret
push
test
cmp
mov
xchg
and
into
pop
stos
lret
pop
rclb
jecxz
cs
je
mov
iret
inc
dec
jge
push
sub
cld
cmp
push
sub
lds
jo
push
scas
add
maxps
js
jmp
mov
push
in
fsubrs
xor
xorl
test
jle
mov
maskmovq
idivl
add
push
mov
gs
lds
and
cmp
dec
sbb
mov
js
lods
mov
call
sbbb
mov
loope
int3
adc
push
ds
and
out
mov
jp
sub
inc
jae
adc
in
add
adc
sbb
cmpsb
loope
ja
cmp
sbbl
movsb
fwait
loopne
hlt
in
popa
mov
ds
pop
jae
outsb
lret
sub
or
movsb
mov
add
jo
aam
pop
mov
dec
pop
jge
sarl
repz
add
jne
leave
or
int3
ret
std
lds
mov
gs
push
sahf
jge
lcall
pop
loop
adc
sbb
stc
movsl
lcall
xor
nop
cmpl
sbbl
and
push
loopne
cmp
mov
mov
mov
iret
add
cmp
sbb
shlb
stc
xchg
cmpsl
mov
mov
xor
outsb
xor
xchg
mov
int
loop
imull
xor
arpl
mov
pop
in
mov
movsl
lret
scas
inc
andb
mov
shll
out
sub
mov
xchg
test
pop
fwait
mov
ffreep
jo
mov
dec
dec
sbb
cmpsl
cld
add
in
jecxz
mov
ret
mov
mov
shrl
jl
inc
int3
aad
clc
into
jno
popf
loope
mov
cld
aad
pusha
mov
sti
cmp
popf
pushf
xchg
push
andb
jb
inc
rclb
cmp
lods
cmp
test
add
xchg
sub
sbbl
mov
int3
in
cmp
out
sub
addb
popf
and
mov
dec
div
lock
and
incb
jbe
add
jmp
cmp
mov
lds
and
fstpl
out
cli
inc
clc
adc
inc
and
lock
ret
lahf
aam
clc
push
sub
repz
scas
mov
clc
fmul
lods
decb
adc
lea
pop
pop
jle
cmpsl
xor
mov
faddl
cs
lcall
jbe
testb
lret
jmp
rorl
mov
inc
lcall
insb
xchg
cltd
jmp
cld
cli
mov
sarl
shrl
dec
not
jo
jb
push
xchg
jg
push
and
ret
andb
push
mov
push
loope
sub
pop
in
es
aad
mov
test
fstps
jb
xchg
sub
pop
repnz
jne
add
notl
rolb
iret
xchg
mov
or
push
push
push
mov
xchg
lret
das
inc
lods
pop
jne
and
ret
inc
test
iret
cmp
push
mov
repz
or
dec
decl
int3
outsl
pop
push
fwait
sbb
cmp
sbb
popa
in
inc
lahf
mov
fcoml
fs
or
es
mov
sbb
movsl
leave
push
jae
sahf
frstor
add
adc
mov
aaa
addl
lea
mov
in
popa
or
sbb
repnz
or
out
out
adc
xchg
cld
xchg
sub
orl
sub
fwait
pop
mov
inc
enter
mov
inc
mov
in
pop
xor
and
mov
ret
xchg
xor
adc
add
movsl
dec
nop
lods
gs
cmpsl
xchg
jl
int
xchg
xor
bound
fwait
jg
adcb
mov
mov
push
in
shr
popf
and
or
call
and
xchg
dec
test
dec
push
dec
push
loop
ret
es
pop
test
sub
das
mov
dec
shlb
mov
and
dec
imul
roll
jbe
fwait
in
push
movsb
jae
sub
jo
push
pop
dec
push
xor
mov
test
stos
sub
ss
sub
xor
in
mov
test
ret
mov
popa
xchg
xchg
stc
subb
enter
inc
or
cltd
cmp
add
mov
inc
dec
fwait
cs
xchg
cmpsb
lods
lods
sub
loope
xchg
lret
sub
rcl
mov
pop
mov
out
shll
pop
sbb
push
dec
stos
dec
addl
in
pushf
out
cli
xchg
repnz
cmpb
add
outsl
mov
in
out
out
fs
in
inc
xchg
sbb
xlat
dec
and
data16
iret
out
xchg
sbb
mov
in
mov
mov
or
or
mov
inc
or
outsb
xor
sbb
aad
icebp
in
gs
fiaddl
cmp
ret
push
loope
pop
repz
idiv
jecxz
addr16
ljmp
pop
dec
jnp
sbb
das
adc
lahf
jl
pop
int
jne
lcall
add
inc
stc
lods
pusha
into
inc
mov
mov
push
in
loop
aad
mov
jge
xor
int
inc
idivb
imul
shll
je
aas
popf
add
je,pt
lea
dec
rorb
mov
jmp
movl
and
jecxz
push
sbb
jns
loopne
dec
xor
inc
aam
pop
pop
aam
rcrl
pop
out
pushl
pop
jae
xchg
jnp
push
jmp
add
mov
jnp
clc
xchg
jo
ret
pop
test
aas
stc
movsl
in
add
add
mov
push
insb
aas
enter
imulb
mov
bswap
in
pop
mov
in
adcl
adc
inc
dec
xlat
push
mov
pusha
xor
shll
icebp
jbe
popf
jns
rcl
repz
lds
jnp
cmp
mov
adc
loop
pop
je
jecxz
loopne
xor
and
sbb
jb
push
jmp
leave
imul
dec
stc
mov
push
daa
adc
push
fisttpl
in
out
sub
rep
repnz
outsl
sti
arpl
or
dec
test
pop
cmp
ret
jne
push
scas
insl
idivb
fdivp
mov
fimull
cld
int
ret
add
aad
or
jbe
mov
jb
xchg
sbb
rol
add
jge
xchg
je
inc
icebp
sbb
xor
andl
xchg
js
mov
jno
sarl
push
hlt
adc
add
and
xchg
dec
mov
inc
and
mov
clc
dec
fdivl
test
mov
push
addr16
orb
mov
mov
sahf
mov
lcall
adc
lea
arpl
jge
adc
js
popa
push
fs
std
inc
in
pop
mov
jns
in
adc
movsb
xchg
sti
push
push
xlat
pop
inc
mov
test
mov
icebp
lds
test
scas
cmp
cltd
push
sub
lahf
push
adc
es
in
mov
dec
mov
test
popf
mov
addr16
ss
leave
pop
sub
xor
iret
les
mov
and
jl
pop
gs
pop
sub
cmc
ds
sub
add
movhps
faddl
inc
inc
lcall
lea
fmull
xchg
push
cmpsb
mov
call
aas
imul
sbbl
incb
lret
iret
aad
sbb
test
sub
inc
push
and
cmp
xchg
test
stos
pop
push
xorb
and
jno
mov
pop
das
adc
jp
js
inc
and
femms
add
pop
push
sub
cld
add
add
sub
ljmp
imul
add
fadds
xor
xchg
call
xchg
outsb
dec
lahf
cmc
insl
out
jnp
inc
les
xlat
daa
pop
pop
lods
adc
sbb
pop
sub
mov
lcall
das
mov
outsl
movaps
sub
sbbl
insl
je
int
push
and
mov
jp
mov
mov
test
push
pushl
lods
pop
imul
push
inc
dec
mov
cwtl
enter
or
pop
dec
cmpb
test
js
mov
jge
je
sbb
sub
cmp
ret
adc
mov
fsubs
mov
xchg
daa
cmpsb
fs
inc
js
dec
gs
clc
xchg
inc
fistpll
loopne
mov
mov
fsub
add
sti
cmp
jns
jno
or
gs
xor
sti
gs
arpl
dec
pop
jns
out
mov
shll
mov
xlat
sub
movsl
int3
mov
push
pop
clc
outsb
aas
arpl
inc
xchg
jne
enter
outsb
push
push
leave
fstp
mov
mov
incb
cld
out
int3
iret
fdivp
mov
sti
psubb
pop
idivl
adc
insl
xchg
and
scas
jle
scas
sbb
add
gs
sbb
xchg
mov
test
or
divl
jg
mov
inc
test
cmp
mov
jg
inc
gs
roll
adc
xchg
into
in
arpl
xchg
test
add
ret
ja
stos
sbb
pop
sbb
cs
das
dec
pop
pop
mov
ret
dec
js
test
adc
out
and
fdivl
mov
mov
dec
push
icebp
mov
pop
mov
repz
andl
pop
out
leave
mov
or
bound
cmpsb
mov
flds
inc
repz
imul
or
pop
adc
ljmp
jno
sti
mov
lret
dec
sub
jb
mov
and
or
daa
sub
insl
add
fcompl
dec
out
outsl
inc
ret
and
popf
lods
sub
cmpl
and
mov
in
jl
inc
call
aaa
lock
xchg
sti
inc
and
mov
pop
shl
adc
or
and
inc
ret
test
mov
mov
and
rclb
lods
xor
mov
adc
mov
jnp
pop
sub
std
mov
push
add
clc
sub
add
push
xchg
das
jae
add
or
aas
ljmp
int3
and
add
and
dec
pushf
cli
adc
aas
stos
addb
insl
push
xor
repz
test
sub
lods
aas
loopne
cmc
popa
push
cld
movsb
imul
or
and
aam
adc
inc
push
adc
pop
push
jp
fstl
int3
test
dec
cmpsb
xor
xor
les
test
mov
test
fwait
mov
out
fisttpll
call
sahf
ljmp
xchg
xchg
icebp
mov
call
stc
bound
test
sbb
mov
pop
arpl
jbe
sti
imul
movsl
and
jne
hlt
sti
inc
mov
mov
add
mov
insb
gs
dec
ret
mov
addb
dec
lods
or
push
cli
pop
stc
fldt
loop
cmp
lock
pop
sbb
jnp
je
stc
nop
jge
stos
ret
jnp
sub
mov
les
xchg
push
adc
pop
loope
inc
or
cmpb
mov
test
int
add
jp
adc
mov
repz
ret
loopne
fnstenv
std
jg
repz
xchg
pushf
push
ficoml
mov
in
aas
cmp
jns
popa
mov
loop
push
cmp
push
in
jmp
rolb
iret
xchg
adc
mulb
push
mov
mov
aad
addb
ficoml
xor
ds
sub
and
sbb
dec
fimull
test
mov
mov
sti
fisubl
jo
aas
adc
inc
lea
inc
mov
scas
sub
stos
cmp
stos
mov
aaa
sbbl
repnz
repnz
pop
adc
mov
imul
dec
push
xchg
out
xlat
pop
jmp
mov
cs
test
mov
lods
or
inc
ffreep
aad
adc
xchg
js
mov
pop
and
mov
fs
dec
mov
xchg
sub
stos
sub
icebp
dec
mov
inc
loope
ss
push
xchg
mov
out
adc
repnz
lahf
cmc
ss
fwait
dec
push
or
data16
sub
push
xor
fs
xchg
add
xchg
dec
jp
pushf
mov
test
inc
fildll
out
sbb
xor
stos
pop
cltd
mov
scas
inc
adc
and
mov
pop
pop
jae
mov
cmp
stc
loopne
mov
jp
iret
inc
pop
or
mov
adc
mov
pop
adc
jecxz
cmp
push
mov
push
pop
insb
imul
decl
pop
adc
sub
int
lods
test
sub
popa
dec
add
xor
jge
aas
dec
push
xchg
lret
mov
mov
mov
sbb
mov
loope
clc
mov
cmp
sbb
rcr
mov
jg
dec
into
in
xlat
fdivl
push
mov
push
cmpsb
loope
jae
pop
aas
jno
addb
fimull
push
push
fcompl
adc
pop
jge
mov
rcll
push
in
and
dec
pop
lret
les
imul
push
adc
popf
xchg
xor
fiaddl
std
mov
sub
and
adc
test
lcall
leave
dec
mov
lret
mov
out
dec
push
adc
mov
jns
xchg
cld
ds
ss
cmp
shr
mov
fadds
adc
sti
push
sbb
aas
test
movsl
sbb
mov
sbb
lock
push
pop
push
or
xor
lret
rcr
push
pop
mov
inc
ret
mov
cmp
das
movsl
outsb
mov
jecxz
jmp
add
mov
and
jge
in
dec
push
cmpsl
and
xor
add
mov
xor
jg
gs
cmpsl
outsb
out
int3
mov
inc
push
sarl
pop
adc
xchg
pop
add
push
fdivrs
out
pop
add
jo
icebp
sbb
test
ret
mov
sarb
xor
push
jmp
xor
addr16
int3
pop
popa
loopne
or
js
mov
mov
pop
mov
sbbl
mov
mov
inc
cmc
mov
lods
sub
pop
and
fcomip
in
mov
jle
and
xor
imul
mov
repnz
nop
xchg
ret
mov
shrl
out
sbbl
jns
inc
gs
mov
data16
dec
jae
popf
inc
inc
int
outsb
cs
int3
dec
or
pop
push
fcomps
fwait
stc
pop
and
aad
pop
test
iret
flds
jns
xchg
mov
notl
stos
scas
xor
jl
pushl
les
out
and
ss
push
ds
jecxz
movb
popf
push
xor
cli
mov
aas
xor
sahf
aas
pop
mov
mov
jb
fidivrs
stc
sbb
adc
test
inc
and
scas
stc
repz
mov
push
mov
out
in
and
mov
cltd
mov
mov
inc
enter
and
lcall
xchg
sub
les
adc
mov
xchg
mov
cmp
cld
fistpl
in
leave
lods
notl
and
push
out
loop
xchg
push
or
aaa
jle
shlb
cmp
cmpsb
xor
test
movsl
cmp
add
or
std
add
adc
inc
notl
aad
sub
ret
rcl
lret
jl
mov
jae
mov
test
dec
pushf
push
popf
cmp
sbbb
rorb
jne
pop
sahf
sbb
ret
addr16
mov
or
outsb
clc
imul
push
and
insb
ror
xor
jl
loopne
inc
xchg
lahf
sbbl
jp
dec
out
iret
shrb
and
jns
ret
xor
xor
imul
inc
mov
popa
jae
jg
mov
push
adc
lods
int
cli
loopne
xor
add
cmp
xchg
lahf
and
sbb
sbb
out
mov
aam
movsb
dec
cmp
arpl
nop
push
mov
les
shrb
jo
fwait
stos
cmp
call
rclb
add
jge
dec
std
or
loop
fmuls
cmpsl
loop
or
in
rorl
mov
test
fs
xchg
inc
ret
sub
add
jg
outsl
dec
xor
test
mov
daa
xchg
mov
sbb
into
loop
lods
ds
push
inc
push
outsb
sbb
scas
cmp
test
xchg
pusha
xchg
scas
pop
sahf
inc
in
sbbb
rolb
mov
shrl
mov
in
mov
push
jno
pop
inc
icebp
fldenv
push
or
std
cmp
add
push
push
sarb
sub
push
jnp
push
scas
nop
repnz
loop
out
sub
pusha
xchg
lret
test
mov
stc
rolb
xchg
mov
push
test
stos
pusha
leave
addr16
lret
mov
loop
inc
inc
sub
pminsw
ret
pop
jp
add
loop
xchg
push
jnp
mov
mov
and
push
lea
ljmp
sarl
pop
jb
mov
mov
mov
in
mov
mov
and
bound
out
sbb
test
test
mov
sar
sub
and
add
andl
ljmp
out
in
repz
add
sub
lahf
insl
push
scas
mov
push
addr16
mov
mov
cmpsb
fisubs
adc
fstpt
lock
pop
in
lcall
popf
adc
inc
sar
aad
mov
mul
mov
int
mov
shlb
lods
push
icebp
xchg
test
xchg
daa
mov
adcb
dec
negb
iret
repz
mov
sub
adc
mov
daa
sub
insb
fstps
es
dec
jns
into
and
push
leave
or
lcall
cmp
sub
dec
outsb
fwait
cmc
mov
xchg
jae
push
fstpt
mov
sbb
xchg
mov
fisttps
imul
mov
iret
in
pusha
inc
add
es
push
adc
addb
adc
ror
aad
xchg
mov
mov
mov
lahf
imul
ficoml
je
mov
leave
push
insl
mov
fwait
bound
int3
stos
pop
xor
jle
xchg
xchg
add
sub
mov
adc
aaa
dec
loopne
jae
and
push
loop
sub
push
xor
cmp
add
in
or
lods
mov
loope
repnz
aad
mov
into
xlat
push
sbb
xor
xchg
lret
stos
jge
adc
sbb
push
out
or
addr16
jmp
es
cld
ja
pop
shrb
scas
sbb
mov
pushf
adc
adc
scas
mull
std
dec
dec
das
pop
in
jnp
jmp
xchg
out
rorb
pop
cmpb
mov
xchg
or
insl
mov
mov
scas
fildl
and
xchg
iret
in
cltd
mov
cmp
loop
stos
jg
mov
lods
enter
std
jae
shll
xor
movsb
push
or
lahf
aam
popf
in
xor
mov
pop
sbb
jge
dec
mov
and
adc
pop
xchg
jnp
enter
jae
scas
cmpsl
xchg
jg
push
test
xchg
push
aaa
je
mov
rol
popf
and
lahf
xor
sub
fs
xchg
aad
jne
push
push
push
jo
mov
xor
repnz
sub
std
daa
push
or
scas
cmp
arpl
ja
pop
cs
inc
outsl
dec
outsl
and
add
fs
xor
jbe
mov
add
ds
push
cmp
mov
push
or
jmp
insl
ret
inc
and
cmp
push
jl
int
mov
dec
or
mov
orl
popf
nop
xor
adc
cld
push
inc
cwtl
pusha
xchg
in
lds
movsb
popa
addl
inc
lret
pop
mov
cli
in
mov
dec
or
sti
nop
jmp
adc
outsl
frstor
fsubs
nop
xor
pop
js,pn
daa
aas
dec
push
jno
jecxz
in
push
push
xchg
dec
imul
sbb
xchg
push
and
fcompl
iret
cli
or
inc
mov
jne
stos
fildll
add
loope
jmp
xor
fdivrs
xchg
push
cli
jle
jb
sbb
lods
test
popa
push
xor
dec
fdivs
lea
cmp
cmpb
mov
mov
lret
aaa
cmpsb
jle
test
xchg
sub
xor
lds
jae
mov
out
jmp
bsf
adc
jmp
movsb
inc
mov
jmp
gs
jg
jle
fstl
jge
dec
push
xor
push
loop
dec
insl
jmp
loopne
sbb
jg
xchg
jg
push
pop
aam
js
leave
push
mov
arpl
je
imul
xchg
sbb
mov
loopne
out
jle
or
adc
fdivrl
adc
pushf
lret
cmp
xchg
sbb
push
cmp
std
push
pop
adc
sbbb
xor
call
xchg
cmp
orl
scas
sahf
or
inc
push
push
fildl
pushf
rol
sarl
sbb
dec
cmp
je
lods
fstp
daa
mov
jnp
mov
pop
sub
sub
xor
sarl
xlat
stos
call
cmpsb
xchg
test
pop
mov
dec
bnd
add
push
or
aas
xor
jmp
pushl
push
loop
or
ja
jge
adcb
cmp
xor
shr
push
popa
call
cmp
cmpsl
pop
xchg
fistpl
fidivrs
test
std
dec
in
fisubl
imul
and
push
jns
cli
and
lret
daa
sbb
mov
sbb
mov
dec
push
mov
or
es
popa
fsts
jl
push
ja
mov
arpl
or
pop
dec
push
xchg
or
mul
mov
mov
cmp
add
repnz
push
addr16
sub
push
lds
add
rcl
jb
sub
bound
fistps
bnd
icebp
gs
in
call
int
mov
daa
mov
push
xchg
fwait
mov
mov
fsubl
repz
adc
fisttpll
sbb
enter
fildl
mov
lret
sbb
dec
mov
ja
mov
xchg
add
arpl
fmuls
int3
push
arpl
movl
lds
sar
mov
jbe
ljmp
cmp
ror
and
in
sub
fnstcw
mov
sub
xchg
cltd
scas
jecxz
dec
scas
scas
push
addr16
sub
xchg
fwait
loopne
loope
idivl
xor
cmp
dec
lcall
testb
inc
inc
xlat
stos
lret
push
xchg
jecxz
and
mov
loope
fs
ss
fwait
dec
sub
aaa
stos
sbb
pop
sbb
adc
nop
pop
clc
ret
push
mov
pop
dec
xor
and
xor
push
mov
cld
dec
pop
mov
and
leave
inc
sti
adc
dec
mov
loop
fsubp
pop
and
les
xor
sbb
js
cmpsl
mov
jp
or
movsl
shrb
xor
aas
pop
inc
mov
loope
inc
fwait
loop
inc
loop
sti
lock
int
lea
and
jns
mov
push
outsb
and
pop
xorps
add
daa
mov
or
sub
xchg
mov
dec
xchg
inc
in
mov
rol
movsl
mov
or
or
cmp
mov
js
sahf
xor
pop
outsl
js
cwtl
shlb
clc
lea
ss
in
out
filds
inc
fadd
xor
mov
aam
lea
inc
pop
or
fwait
ret
xchg
lods
out
repz
xchg
ret
jmp
popf
shll
mov
orb
xor
or
movsl
mov
or
dec
ret
pop
lds
neg
add
clc
stos
jge
into
xchg
adc
hlt
mov
or
mov
mov
orl
or
jns
jb
xchg
call
jmp
push
adc
sbb
mov
mov
add
dec
mov
push
dec
mov
pop
mov
xor
push
inc
scas
xor
sub
stos
push
shrb
roll
aaa
rorl
sbb
sub
mov
add
int
mul
sbb
addr16
gs
movsl
leave
insl
add
adc
lahf
std
push
push
pop
push
std
pop
jno
movsl
pop
jne
in
test
jl
pop
or
into
fs
mov
adc
mov
stc
cltd
movsb
sbb
xor
inc
subl
arpl
loop
inc
dec
pop
mov
iret
mov
test
add
clc
inc
inc
adc
cwtl
sarb
adc
add
cli
or
dec
addr16
cmp
cmpsb
std
andb
imul
aas
pusha
lods
adc
imul
aad
inc
and
imul
in
push
ljmp
sbb
dec
lds
pop
jl
push
into
setge
cmc
aad
xchg
in
jge
pop
sbb
adc
push
push
pop
jp
sbb
jg
iret
test
sbb
ret
mov
adc
arpl
lock
pop
add
adc
mov
mov
adc
xchg
repz
xor
out
jl,pn
je
das
jbe
inc
stos
cli
xchg
fldcw
pop
das
lret
xchg
fs
sub
aam
push
jg
lods
sub
in
pop
mov
insl
imul
xchg
mov
in
das
leave
mov
cld
xchg
inc
loop
or
adc
and
xchg
dec
aas
sbb
dec
gs
fldcw
inc
push
sbb
and
mov
fwait
pop
lods
aad
sbb
clc
cmp
fisubs
sbb
je
push
nop
dec
mov
nop
cmp
xlat
lahf
jp
and
fsubl
lcall
mov
out
sub
push
mov
inc
out
jecxz
ljmp
xor
imul
mov
push
lahf
jb
mov
mov
push
js
push
lret
cmp
mov
mov
xchg
fisttpl
mov
cmc
push
push
rol
mov
xchg
and
cmp
addr16
push
xchg
retw
pop
lods
mov
fs
int
cmp
cmp
fildl
nop
int3
cmpsb
test
test
negb
or
mov
lcall
icebp
mov
test
add
mov
ret
mov
dec
subl
in
lcall
in
aad
mov
add
sub
insb
sahf
xchg
xchg
mov
add
ret
sbb
jbe
into
cli
mov
fstl
mov
cli
cmp
cltd
and
cmp
popf
nop
stos
mov
jl
adc
int3
cwtl
dec
in
xor
sahf
mov
idiv
loop
add
sbbl
jb
lods
ret
pop
dec
call
sub
push
fldl2e
into
clc
stos
loope
dec
daa
or
orb
stc
lds
add
loope
or
leave
loope
ret
popf
jmp
or
xor
xor
out
push
ljmp
push
pop
test
jg
movsl
cld
je
xchg
into
jno
outsb
xchg
pop
cmp
jg
jnp
into
test
into
mov
xchg
xor
inc
pop
cld
lret
bound
fstl
sarb
stc
stos
pop
das
jmp
and
icebp
xchg
push
xchg
push
pop
mov
and
push
cmp
mov
outsl
adc
inc
inc
rcrl
jo
arpl
cwtl
push
sbbb
stos
data16
pop
push
jp
adc
loope
pop
inc
arpl
aam
mov
fcmovb
dec
pushf
or
mov
pop
adc
lcall
dec
popf
cmp
mov
cmpl
shl
shld
xchg
js
pusha
mov
arpl
xchg
popl
imul
scas
call
or
push
xchg
in
cs
push
out
nop
jl
popf
wrmsr
jp
add
xor
push
ficoml
lcall
ret
pop
cmpsl
sahf
ljmp
stc
xchg
mov
lret
dec
pushf
jge
add
add
mov
rcrb
jecxz
outsb
xchg
push
adc
faddl
out
lock
fwait
and
jecxz
xlat
pop
ljmp
aad
mov
mov
mov
fisttpl
ret
push
jae
out
inc
dec
inc
add
lcall
sub
shrl
cmc
mov
nop
scas
pop
aas
xchg
mov
pop
sbb
jnp
sti
push
pop
bound
mov
lret
lods
or
or
dec
inc
loopne
cmp
gs
test
pop
call
dec
stos
lret
xlat
icebp
push
fidivrs
cmp
cmc
pusha
stos
cmc
std
jle
test
mov
stos
fs
lea
repz
or
sub
add
imul
int
outsb
repz
push
cmpsl
shlb
mov
dec
or
inc
sub
in
xchg
imul
mov
mov
mov
sbb
imul
jbe
jne
mov
jg
lcall
pop
push
sub
scas
call
andl
aam
out
jge
idivb
push
sbb
jp
mov
sbb
repnz
mov
pusha
es
dec
xchg
inc
cmpsb
push
push
inc
inc
xchg
jo
ljmp
stos
jg
movsb
mov
imul
pop
rolb
loop
lret
out
por
ret
xor
test
lcall
and
fdivrl
pop
aas
orl
aas
xchg
int3
ds
sbb
pusha
aaa
sub
mov
out
xchg
inc
lahf
aad
jge
rcl
lcall
mov
lcall
adc
mov
mov
fstpl
dec
aad
jp
pop
xchg
mov
dec
and
mov
mov
pop
mov
dec
loop
aas
dec
popf
jge
and
mov
in
rcr
popf
inc
push
cltd
lret
cli
movsl
out
repz
jns
es
adc
adcb
ret
in
hlt
jl
pushf
repz
push
mov
pop
repz
mov
push
pop
les
cmc
mov
in
sbb
pop
dec
rorl
pop
dec
in
push
mov
mov
cwtl
mov
pop
xor
sub
jo
pop
ss
adc
jb
test
mov
sub
jb
clc
ja
inc
or
mov
xor
and
jg
sbb
jg
mov
jne
outsb
nop
mov
jl
pop
fists
enter
jle
add
push
dec
cmp
jmp
stc
inc
mov
cmp
lahf
pop
cmp
pusha
nop
pop
inc
decb
pop
ret
out
mov
fnstcw
mov
xchg
add
int3
xor
inc
mov
mov
push
pusha
pusha
xor
pusha
leave
mov
or
popa
pop
loope
jnp
cmp
cmp
and
dec
iret
lds
inc
dec
sbb
insb
sahf
jmp
gs
ret
lock
fnstenv
repnz
mov
daa
lahf
fldt
xor
in
push
hlt
push
shll
sti
dec
mov
or
loop
lods
pushf
jp
les
push
inc
push
cmpb
add
stos
bswap
repz
mov
xor
xchg
cmp
rcrl
jns
repz
dec
add
mov
sysenter
xchg
push
sub
test
loope
push
inc
mov
sbb
push
jp
testl
rorl
xor
pop
adc
mov
int
adcl
repz
les
out
fists
xchg
add
sti
hlt
outsl
std
scas
insl
mov
addb
cmp
cmp
test
xor
sub
push
mov
mov
stc
adc
fiadds
mov
inc
pop
pause
pop
nop
mov
and
popf
pop
adc
aad
insb
pop
sub
outsl
or
and
jno
hlt
and
inc
rep
push
push
out
jmp
jno
push
cmp
push
jb
call
rorl
pop
add
sub
add
dec
fwait
stc
stos
leave
xlat
lahf
xor
stos
dec
mov
es
fwait
imul
push
pop
push
mov
lret
and
or
loop
cmp
in
popf
daa
jbe
pop
movsl
int
pushf
repnz
cmpl
or
xchg
inc
test
pop
jns
daa
xchg
sub
sub
jmp
fadds
into
or
inc
mov
inc
in
sub
lds
inc
stos
or
rorb
lock
pop
sub
cwtl
sub
mov
adc
cmpsl
enter
sub
repnz
jle
xor
cmp
mov
add
shlb
push
loopne
les
leave
ja
lock
rcrl
stc
pop
sti
movsl
xchg
push
mov
ljmp
sub
mov
loopne
test
jmp
clc
jae
out
inc
inc
lahf
scas
mov
cmp
cmp
shrl
xor
or
fdivr
cltd
pop
dec
pop
scas
mulb
xchg
test
xchg
mov
mov
and
lods
push
out
mov
mov
fdivrs
jecxz
adc
dec
lret
push
stos
imul
xchg
sahf
jge
mov
sarl
cmp
out
lahf
enter
int3
cmc
std
in
pop
and
jo
andl
cld
mov
jb
int3
xor
jo
add
push
ss
jb
mov
ja
ljmp
rorl
cmp
xor
pop
push
pop
stc
push
inc
sbb
aad
lcall
bound
add
inc
inc
mov
out
testl
nop
sbb
inc
mov
lods
mov
shll
xor
ret
int
mov
imul
adc
popf
adc
stc
pop
mov
dec
mov
mov
popf
pop
and
xor
inc
or
or
or
pop
dec
jns
jge
mov
leave
sbb
pop
xchg
mov
mov
dec
int
dec
jmp
push
cmp
push
clc
xor
ret
adc
cmp
jne
movsl
xor
fists
lahf
stos
inc
or
adc
xchg
ret
and
jge
xchg
sub
push
sbbb
sahf
jbe
gs
scas
or
jecxz
xchg
popa
push
stos
adc
les
pop
push
in
add
lcall
dec
ds
jno
cmp
inc
sbb
mov
mov
jecxz
pop
mov
sahf
rcll
push
push
cmp
xor
and
clc
nop
cwtl
inc
div
add
divl
mov
sbb
test
mov
cs
insb
movsb
es
push
enter
xor
push
lcall
ja
and
bound
sub
inc
jg
scas
ja
arpl
icebp
cmc
daa
lock
icebp
test
xor
push
mov
imul
stc
pop
cld
mov
mov
fs
movsl
mov
dec
and
inc
add
arpl
out
xchg
out
mov
fcomps
loope
mov
or
dec
sti
dec
dec
mov
int3
cmp
mov
das
dec
jmp
cmp
xor
jbe
xchg
insb
xor
mov
rolb
mov
push
cmp
pop
incl
lock
push
aam
jmp
lret
jns
xchg
das
xor
push
xlat
and
mov
push
cmc
xchg
fcomps
jle
loop
mov
xor
call
lret
js
or
push
mov
aam
loope
push
adc
jecxz
lret
out
cld
jle
subb
adc
jp
dec
mov
dec
mov
aam
bound
jae
shl
cmp
pop
mov
sbb
lock
and
inc
cmp
outsl
sbb
jp
cmp
sbb
push
shl
leave
pop
jbe
insl
out
cld
add
xor
mov
out
xchg
sub
jmp
add
fcmovu
lea
push
and
push
mov
js
mov
orl
shlb
cmpsb
and
das
rolb
ja
inc
fistpll
adc
das
mov
out
mov
negl
out
xor
dec
mov
mov
scas
sub
pushf
inc
nop
loopne
push
fs
sbb
jae
mov
mov
outsb
jecxz
cmp
pop
ficoms
cmpxchg
adc
decl
add
das
out
jne
pop
cmp
xchg
jge
fcomps
cmp
mov
mov
cmp
add
je
test
xor
int
aas
ljmp
jo
lahf
loopne
dec
sti
in
pop
adc
push
in
sbb
scas
gs
xor
stos
sbb
xor
test
js
lret
pop
mov
ret
cmp
adc
scas
dec
mov
loop
movsb
jp
lock
int
sbb
jnp
xor
into
xor
scas
loopne
sub
vmulsd
and
jne
sbb
repnz
sub
sub
cmpsb
mov
movsl
push
inc
fmulp
sub
adc
dec
out
decl
gs
sub
adc
lcall
pop
cmp
jnp
je
test
stos
cmpsl
mov
mov
pop
inc
sbb
jns,pt
iret
xchg
rolb
fcoms
sbb
xor
adc
pop
fcmovnb
aad
add
dec
push
rorb
push
daa
leave
sbb
push
pop
jg
push
mov
or
in
sub
loop
and
adc
pop
popa
cli
xor
ficoml
sbb
in
mov
stos
mov
loope
inc
cld
mov
or
mov
cmpsl
fdivl
push
xchg
inc
mov
adc
nop
inc
add
out
arpl
mov
std
inc
mov
mov
icebp
filds
scas
ja
pop
lods
lret
lods
push
outsb
sbb
in
sahf
adc
pop
jp
mov
aaa
xor
pusha
adc
hlt
pop
ret
mov
int
int
jb
mov
imul
lds
sbb
push
test
xchg
dec
outsl
js
inc
jmp
or
dec
inc
ss
pop
les
mov
into
sub
inc
xchg
mov
inc
hlt
cmp
ficompl
xchg
sbb
mov
lock
push
lea
dec
fiadds
inc
idivb
loop
xlat
jmp
ja
lahf
jne
jl
jle
cmp
push
mov
and
nop
icebp
cwtl
inc
insl
jo
ret
cwtl
mov
cld
rolb
push
scas
mov
and
mov
mov
cmp
ficoms
mov
jnp
push
ja
jns
repz
push
push
pop
adc
pop
lahf
jl
xor
loop
pop
hlt
test
aad
mov
mov
scas
and
xchg
test
scas
enter
jmp
rorb
imul
sbb
pop
std
jne
xchg
ds
sqrtps
dec
xor
mov
mov
push
hlt
daa
adc
ljmp
enter
enter
sub
xor
mov
outsb
clc
xor
push
cmc
inc
xchg
mov
and
movsb
fnclex
insl
fcomip
sbb
xchg
jl
mov
stc
add
cmc
xor
fnstenv
jg
xchg
hlt
xchg
xchg
loope
pop
insb
pop
je
shrb
test
call
or
addr16
cmp
jno
adc
xor
mov
jmp
dec
mov
cmp
shlb
inc
sti
call
and
add
adc
or
add
xchg
xor
cmp
push
outsl
cmp
sub
jmp
fdivl
rcr
inc
mov
ljmp
iret
aaa
scas
push
dec
and
mov
ret
dec
ss
arpl
shlb
xchg
cmc
mov
cwtl
inc
fwait
leave
in
jge
mov
dec
lock
xor
ds
xchg
sbb
push
push
add
xchg
adc
inc
aas
and
lods
mov
xchg
jl
test
sbb
addr16
xor
in
adc
mov
hlt
movsb
sub
mov
stc
inc
lret
notl
push
insb
inc
mov
cld
xor
push
enter
aaa
xchg
test
imul
movsl
pop
ds
adc
mov
sub
rolb
mov
movl
test
mov
in
pusha
popa
loopne
scas
adc
test
add
out
cmp
vsubpd
inc
mov
gs
lock
test
push
sbb
stos
push
or
aam
mov
lock
inc
push
scas
js
cld
lock
call
loopne
jecxz
lahf
addb
loop
dec
aam
out
and
imul
sub
pop
sub
inc
test
xchg
loopne
into
loope
imul
jl
jge
sbb
dec
cmpsb
xorl
inc
in
xchg
push
fdivl
ss
mov
pop
out
cmpsb
sbb
addr16
fadd
sti
mov
lods
stos
or
and
data16
sub
icebp
stos
test
ret
arpl
daa
jo
mov
loop
loope
dec
xchg
cmpsb
pop
mov
xchg
pop
lods
xchg
lahf
push
int3
adc
pop
push
clc
xor
mov
xor
pop
lds
mov
mov
pop
xor
and
movsb
sti
scas
dec
push
inc
popa
jle
adc
xor
jns
or
clc
push
adc
je
jb
mov
inc
xchg
test
or
or
xor
sub
js
shll
pop
or
mov
sbb
out
subb
es
inc
jl
in
imulb
xchg
cltd
jmp
add
ja
cmp
ja
mov
int3
push
aas
mov
mov
jno
adc
xor
rcrb
int
xor
std
push
push
and
das
repnz
hlt
push
push
push
lock
mov
repz
in
rorl
push
popa
pop
sbb
pop
mov
adc
mov
fbstp
sub
sub
in
dec
mov
and
sub
in
js
sub
pop
aad
dec
dec
add
lcallw
jl
or
repnz
sbb
decb
xchg
inc
aaa
subb
dec
lahf
adc
push
cmpsb
lods
xchg
pop
repz
mov
inc
shrl
je
jl
dec
jae
xor
xorb
imul
je
add
cli
or
jmp
jns
mov
aas
fcomp
cld
pop
pop
sbb
leave
inc
pushf
mov
cmp
in
clc
xchg
ss
jle
jge
pop
rcll
pop
xor
nop
inc
pop
out
in
addr16
mov
mov
leave
jno
and
and
cmp
fsubrl
sbb
add
mov
cmp
loope
pop
mov
data16
xchg
test
and
and
in
pop
sbb
mov
lods
and
xor
sbb
mov
cmp
mov
bound
imul
jge
pop
aam
dec
pop
xor
inc
es
add
sub
push
fisubs
xor
scas
push
mov
iret
int
and
and
std
shl
aad
mov
hlt
jae
add
test
imul
add
rol
fisubs
lea
inc
or
leave
adc
data16
inc
jl
outsl
mov
push
pop
jp
hlt
mov
inc
cltd
fadd
cmp
cs
mov
adc
mov
jb
sbb
orl
xor
sub
and
xchg
movsb
and
scas
mov
pop
inc
std
jo
mov
insb
adc
jp
ds
aam
mov
movb
and
bound
dec
mov
in
arpl
and
mov
notl
ret
test
pop
mov
in
add
mov
int3
xlat
aas
lock
sub
loopne
add
addr16
add
push
mov
out
sub
mov
jle
add
pop
outsl
push
enter
icebp
xchg
adc
out
mov
add
pop
dec
sarl
lea
les
cmp
mov
stos
adc
xchg
xor
sbb
mov
cmc
jae
stc
out
out
mov
mov
arpl
cli
fucomi
stos
movsb
inc
mov
dec
jb
mov
inc
pushf
xlat
cmp
aad
lock
rorl
xchg
int3
adc
mov
jle
std
dec
jae
inc
push
testl
jle
fidivl
rclb
adc
xor
popf
loopne
test
andb
pop
cmp
dec
adc
insb
fidivl
aam
popf
sub
mov
adc
pop
or
cmp
mov
xor
cmp
jle
sbb
add
jl
add
push
hlt
dec
rcl
and
and
xor
xchg
cld
rorl
lahf
outsb
js
pop
sub
add
push
xchg
jge
das
shll
jbe
andb
jbe
pop
rcrb
add
into
fcmovnu
rcrb
cmpxchg
push
add
out
jmp
sbb
mov
xchg
mov
push
mov
pop
mov
arpl
shl
push
sbbl
ret
es
addl
dec
fistps
out
in
fistl
xchg
mov
cmp
xchg
jne
les
aam
push
out
jbe
ds
cmc
ret
in
pop
mov
mov
popf
lret
je
hlt
adc
aam
ficoml
sub
xchg
jle
ds
cli
xor
mov
mov
xchg
into
shl
lret
popf
cmp
sub
xchg
jae
ljmp
mov
or
cmp
adc
pop
loopne
jbe
shrb
rcrb
sbb
xchg
orb
testl
pop
mov
jmp
sbb
inc
nop
mov
jge
xchg
mov
push
in
daa
cli
pop
rcl
ffreep
ret
cmp
sarl
pop
mov
iret
mov
sbb
or
nop
scas
jmp
mov
dec
mov
scas
push
les
cmp
mov
pop
push
jae
mov
mov
mov
aad
cmc
cs
loopne
cmp
imul
pushf
jle
lcall
push
jge
int
mov
lret
xchg
movsb
mov
fndisi(8087
inc
imul
and
mov
xchg
cs
push
sti
and
inc
das
cmp
or
push
jmp
std
mov
mov
out
push
adc
jnp
pop
sbbl
cs
xchg
dec
insl
lahf
or
adc
sbb
cmpsb
ss
jo
insl
jo
sub
sti
inc
lret
mov
hlt
jb
rorb
mov
das
iret
or
mov
push
pop
sub
jmp
adc
mov
outsb
leave
aam
fwait
pop
pop
lcall
mov
movsl
sub
rclb
dec
fdivrs
and
cmc
xor
cmpxchg8b
fnstsw
mov
les
sub
adc
push
in
and
cmp
movsl
nop
stc
push
cmp
mov
pandn
push
cmp
xor
or
iret
repnz
sbb
leave
je
add
add
in
jle
sub
sarl
cmp
mov
xor
jnp
and
dec
fistpl
xchg
icebp
mov
out
inc
out
push
xchg
mov
jae
mov
in
lods
popf
jecxz
es
aas
xchg
mov
lahf
enter
out
mov
push
shll
xor
mov
sub
or
out
out
rcll
mov
add
cltd
scas
in
mov
adc
and
jnp
mov
mov
in
and
pop
xchg
je
fnstsw
es
sub
mov
jns
mov
sbb
stos
arpl
fstpt
lcall
and
cmp
mov
jl
jmp
clc
mov
xchg
or
mov
pop
pop
mov
popa
sub
push
mov
jle
ret
inc
or
sahf
bound
push
mov
outsl
sahf
push
popf
mov
xchg
jge
nop
add
repz
inc
inc
mov
mov
sbb
or
cmp
sbb
cmp
scas
xchg
adc
repnz
sbb
in
inc
sbb
or
and
nop
les
ss
stos
pop
cmp
pop
icebp
jne
push
stos
mov
iret
mov
int
jge
pushf
lret
pushf
add
repz
imul
fcomip
xlat
aaa
push
out
pop
insb
ret
subl
jg
std
sbb
xchg
sbb
sub
push
mov
sbb
hlt
fmull
push
divb
ret
xor
lea
pop
insb
out
data16
sarb
aad
cltd
daa
add
jmp
cmp
push
mov
into
int3
push
fisubrs
jns
jns
sbb
fiaddl
or
jecxz
mov
fs
xchg
jb
dec
scas
push
pop
sbb
and
aas
outsl
inc
or
add
mov
lds
mov
dec
cmp
xor
mov
mov
mov
mov
xor
outsb
pop
adc
mov
dec
mov
sub
loop
pop
addb
lahf
pop
inc
out
jmp
shll
sub
mov
cmpsb
unpcklps
in
imul
fs
xor
push
test
gs
addb
fwait
xor
mov
push
clc
mov
mov
out
frstor
xchg
popa
test
popa
xchg
xchg
mov
mov
pop
and
mov
fs
addr16
out
stos
imul
or
out
cmpl
fadd
mov
dec
jne
pushl
mov
flds
jg
in
jecxz
pop
in
jae
or
jp
mov
mov
pop
notb
cmp
out
mov
xor
dec
ret
and
ret
scas
or
lods
add
jg
inc
mov
lret
sub
test
loopne
dec
fnstenv
iret
repnz
xchg
ret
jmp
jnp
push
lock
cmpsl
adc
ja
cli
adc
cmp
testb
call
hlt
xchg
add
and
mov
div
arpl
in
mov
jnp
fs
push
pop
mov
cli
out
imul
cmpsl
dec
cmp
std
adc
fcoms
ret
xchg
lock
add
xchg
jns
fldt
loop
daa
sub
cmp
hlt
es
cmp
mov
loope
icebp
push
dec
ja
and
mov
in
add
jge
aas
outsb
dec
jl
dec
insl
sub
fcmovne
or
pop
push
cmp
leave
xchg
test
add
mov
cmp
stos
mov
mov
cld
jb
ret
xlat
fildl
subl
es
push
push
inc
mov
pop
leave
inc
mov
jnp
add
pop
shlb
xchg
out
add
insl
add
cli
incl
mov
orb
add
sub
imul
inc
mov
or
out
sbb
ja
cli
push
add
scas
lcall
mov
and
push
nop
scas
test
cmpsb
sti
sbb
and
andb
test
add
push
ja
dec
sub
fstl
lds
add
mov
subl
fcmovb
xchg
lahf
les
subl
or
mov
orl
mov
jbe
outsl
shr
outsb
test
dec
je
mov
test
xchg
cld
mov
loopne
out
xlat
or
and
mov
sub
adc
and
orl
pop
cmpsl
fcmove
mov
aas
faddl
bound
scas
mov
xor
outsl
and
scas
sub
sarl
lret
int3
pop
repnz
dec
fisttpl
mov
stos
mov
or
fcmovne
stos
xor
cli
sub
pushf
rcr
ja
lret
xchg
dec
xor
in
clc
dec
push
pop
fisttps
movsl
outsb
pop
mov
add
cmpsl
ljmp
mov
test
into
loope
mov
sahf
enter
xchg
mov
push
sub
inc
cli
pop
andb
inc
sbb
jmp
cwtl
shufps
cld
xlat
xor
stos
sti
pop
xchg
push
inc
mov
sbb
add
test
faddl
jecxz
push
sub
lahf
dec
jl
out
das
in
rcl
sbb
push
add
hlt
cld
pop
fidivrl
test
adc
cmp
dec
lds
int3
repz
out
out
push
clc
jo
sbb
out
mov
xchg
add
inc
fnsave
adc
cmpsl
inc
xor
jo
mull
lds
mov
jno
adc
xchg
in
ret
loopne
insl
inc
int
xchg
push
mov
in
push
std
addr16
push
sub
adc
in
sahf
or
iret
out
lods
int3
es
cmp
add
push
cmpb
dec
and
aas
aaa
and
imul
mov
roll
iret
add
test
and
fdivl
mov
subb
add
lea
and
jl
cmp
jecxz
inc
fstl
sbb
fcompl
push
ljmp
jbe
mov
scas
cmp
and
pop
dec
xor
adc
cmp
je
mov
xor
es
cmp
out
mov
fcomp
add
xor
jge
mov
mov
push
popf
sbb
jp
push
cmp
push
adc
out
pop
and
push
gs
lea
out
cmp
mov
mov
mov
jecxz
stos
sbb
mov
cwtl
inc
mov
iret
lea
inc
loope
mov
rclb
sub
dec
push
mov
xchg
sub
mov
xchg
add
add
insb
fildl
test
push
aam
je
cmp
adc
outsl
adc
dec
nop
push
fistpl
inc
shl
incl
sub
pop
aad
push
jae
or
sub
sbb
lods
push
out
mov
add
adc
cs
push
xchg
push
cli
fs
push
push
jge
cmc
adc
mov
mov
lahf
pop
leave
stc
js
adc
mov
xchg
in
mov
stc
pop
sub
sti
fcomps
lea
out
or
xor
push
cmp
cmpsb
xor
adcb
mov
mov
dec
bound
cwtl
jbe
test
int
int3
daa
push
sqrtps
fdivp
xor
addr16
in
mov
std
xchg
ja
jne
sbb
fisubrs
andl
mov
iret
jno
xor
movsb
cmpsl
in
and
jnp
pop
pop
push
lds
sbb
cmp
jmp
js
ljmp
insl
adc
add
ror
pop
jp
sub
bound
je
pop
adc
jnp
jne
mov
dec
push
inc
addl
push
mov
jp
pop
push
dec
call
jge
scas
movsl
sub
mov
dec
mov
cld
aad
test
fidivl
xchg
popf
aam
dec
cld
dec
pop
ret
aas
cli
icebp
mov
popf
or
xchg
pop
ror
sbb
adc
fwait
sub
mov
xchg
std
jne
or
je,pt
pop
sbb
mov
repz
jb
sbb
in
add
push
xchg
cmp
ds
shlb
xchg
mov
mov
dec
leave
mov
jbe
dec
mov
fcmovb
daa
adc
push
cld
push
mov
and
push
das
pop
nop
orb
xchg
loop
pop
cltd
xchg
mov
cld
jg
aaa
int3
xlat
ja
jnp
in
xchg
repz
test
sbb
mov
xchg
jno
ss
pop
cmp
mov
mov
test
xlat
test
and
out
mov
sbb
add
adc
pop
loopne
cmc
xor
daa
outsl
mov
arpl
sbb
loop
inc
pop
mov
in
cmc
ljmp
jae
push
shll
sbb
hlt
mov
insw
mov
and
xchg
mov
repz
dec
mov
push
fcomip
and
mov
cltd
mov
cmp
push
imul
mov
insl
push
jb
nop
icebp
lds
dec
xchg
notrack
dec
mov
or
xchg
aas
data16
add
add
push
cmp
push
bound
jecxz
div
dec
gs
dec
mov
dec
pop
rcr
fisubrl
jge
add
leave
insb
or
stos
fidivs
mov
testl
xchg
xchg
cmp
popa
mov
andb
clc
loopne
pop
xchg
aas
sbb
jl
xchg
test
incl
inc
mov
mov
and
jns
cmp
mov
pop
div
popa
mov
out
sti
mov
imull
xor
mov
adc
inc
shll
pop
pop
adc
fidivrl
jb
dec
movb
and
xchg
push
push
enter
push
in
and
mov
sub
xchg
cmpl
verw
pop
sbb
fwait
scas
or
push
sub
mov
adc
test
mov
pop
xchg
addr16
lahf
fxch
outsb
fs
outsb
sbb
push
xor
lahf
test
xchg
jle
je
cmp
cli
stos
int
jae
leave
repz
mov
ret
adc
repz
pop
iret
aam
sbb
mov
or
or
roll
xchg
sahf
enter
mov
mov
jmp
sub
or
pop
clc
inc
std
mov
sub
inc
add
icebp
xchg
jnp
push
mov
adc
addl
jae
and
mov
sbb
shll
pop
cs
cltd
xchg
jecxz
sti
push
jg
lds
pop
push
lret
jl
adc
push
pop
movb
add
cli
lret
dec
loope
xchg
inc
dec
sub
xor
mulb
push
mov
pop
jnp
adc
sti
stos
inc
adc
popa
cld
mov
mov
stos
mov
enter
cli
daa
std
vphadduwq
mov
xor
or
outsl
dec
pushf
test
iret
lret
jno
loop
mov
movl
inc
mov
adc
addr16
fsubrl
sub
or
clc
jno
mov
push
cli
jno
sahf
aad
and
das
mov
cltd
dec
out
arpl
mov
hlt
scas
lcall
cmp
mov
std
fistpl
or
mov
sbb
xlat
hlt
fwait
icebp
push
sbb
pop
pop
stos
jo
sbb
fsubs
fs
loopne
sbb
fldt
rcr
jecxz
int
cmpsl
fsubrs
lret
enter
out
xchg
data16
sbb
mov
cmpsl
xor
fwait
xlat
dec
stos
fstpl
scas
jg
sbb
jo
sbb
popa
jmp
loop
inc
cs
out
das
ljmp
adc
cmpsb
mov
adc
rcrb
xchg
push
jmp
pop
push
pop
je
pop
cltd
mov
les
imul
cmpb
mov
xchg
jg
aam
lods
xor
add
fwait
inc
rorb
xchg
add
adc
int
test
pusha
cmp
hlt
push
mov
insl
mov
and
inc
cld
outsb
or
jl
pusha
cmp
dec
cmpsb
test
inc
aaa
call
jecxz
inc
xor
xor
mov
orb
adc
cmpsl
out
adc
push
cltd
adc
lods
cmp
xor
xchg
sti
lret
pop
sbb
int3
js
push
mov
mov
popa
add
les
sub
inc
jmp
js,pt
rorb
mov
lea
jae
cmp
pop
fcmovb
arpl
insb
xor
pop
jb
push
or
jno
sub
cmpsb
add
xchg
shrl
jp
call
or
adc
dec
push
repnz
pop
mov
push
jo
test
add
jo
jmp
arpl
inc
mov
mov
lock
jns
aaa
shrb
inc
xorb
xlat
lret
fdiv
cld
or
mov
in
and
out
loope
jo
outsl
sahf
mov
sbbb
jae
inc
jmp
sarl
sahf
mov
push
fstps
jno
mov
mov
sub
hlt
xlat
pop
les
mov
add
mov
jge
fcoms
jecxz
std
sbb
bound
dec
jb
xor
jb
rcr
pop
inc
out
daa
add
fwait
insl
adc
cmpl
jle
inc
dec
mov
inc
pop
inc
adc
aaa
sahf
jne
and
arpl
lods
adc
out
fistpl
pop
ficoms
pop
push
jge
or
mov
mov
pop
gs
sub
test
inc
daa
cmp
jb
push
cmc
mov
or
pop
fdivrl
xor
sbb
cs
dec
rcl
arpl
div
mov
mov
ja
xchg
jae
scas
and
ret
push
xlat
pop
cltd
and
fisttpl
clc
sarl
addl
mov
inc
or
pop
cmp
dec
ljmp
cltd
cs
sub
mov
outsb
push
add
jle
imul
inc
popf
xchg
mov
mov
push
and
movsl
add
adc
mov
ss
pusha
mov
scas
dec
mov
cltd
xor
mov
lcall
mov
xchg
mov
and
dec
fldt
pop
repz
icebp
mov
dec
add
push
div
shlw
popa
inc
add
and
rcrl
cs
hlt
sbb
and
xor
shll
xchg
in
inc
aad
es
xor
fcompl
mov
pop
ret
nop
sbb
and
popl
push
out
pushf
aaa
imul
adc
aaa
adc
mov
add
shl
pop
test
sarl
inc
jp
mov
enter
xchg
fimull
lahf
pushf
imul
dec
les
dec
xor
test
repnz
dec
das
leave
sub
cmp
stos
out
hlt
repz
jg
dec
xchg
movsl
cmpsb
xchg
mov
popf
xor
adc
or
add
imul
xor
lret
outsl
arpl
push
clc
xchg
aad
mov
push
fldcw
pop
and
popa
push
out
mov
push
shrb
lock
mov
push
xchg
sbb
adc
dec
push
je
xchg
sbb
ljmp
push
fidivs
js
daa
les
jg
lods
stos
orb
stc
repz
or
out
mov
lea
movsb
xlat
jne
jb
sarb
sbb
pushf
pop
dec
mov
ljmp
ss
or
pop
scas
in
cld
mov
lret
jo
out
js
xchg
mov
cmp
sub
xchg
pop
sub
pop
fs
push
filds
jl
cwtl
or
kmovb
pop
xor
ficoms
sbbb
inc
push
fcoms
es
inc
test
adc
mov
pop
mov
xchg
jecxz
push
add
push
in
cmpsb
mov
je
out
push
and
sub
rclb
movsl
mov
mov
cmp
sbb
pushf
add
or
sbb
inc
or
mov
mov
lock
adc
pushf
push
pop
mov
mov
mov
inc
in
sub
mov
mov
mov
adc
lahf
dec
pop
push
cmp
xchg
inc
nop
mov
outsb
ljmp
popa
hlt
dec
aas
lea
insb
les
mov
sub
cltd
ja
pop
cltd
repz
xchg
mov
aaa
mov
iret
jb
inc
lods
addr16
push
movl
mov
test
mov
mov
movsl
cs
das
shlb
cmpsl
pop
pop
xchg
test
bswap
xchg
rcl
int
pop
out
fs
popa
adc
negl
leave
inc
cmc
xlat
inc
mov
dec
add
call
rorl
sbb
outsb
jmp
fnstcw
dec
mov
adc
jle
test
xchg
add
push
roll
add
movsb
mov
and
mov
ret
push
dec
lahf
mov
mov
lods
inc
cmpsb
cmp
sub
ss
ret
aam
scas
pop
gs
mov
jle
jnp
das
jp
push
popf
cmpsb
in
mov
xchg
hlt
sahf
sbb
inc
push
insl
xchg
addr16
mov
cmpsl
and
mov
xor
push
pop
shll
or
addr16
test
push
rcl
lahf
pushf
jge
inc
adc
in
jecxz
adc
push
xor
xchg
add
andl
ss
sbb
sbb
mov
test
test
test
xchg
leave
or
loop
test
pop
or
xchg
add
leave
inc
call
lds
jo
in
ret
pop
push
movsb
dec
outsb
addr16
movsb
lret
je
loope
fisubrl
cmp
xchg
lock
mov
hlt
mov
xor
scas
rcrb
ret
cld
cwtl
imul
lahf
pop
dec
test
dec
dec
sbb
push
loop
cmpsb
adc
js
mov
sahf
cltd
sbb
xor
repz
push
mulb
mov
pop
mov
sbbl
stos
les
sahf
sarb
sub
xchg
sub
test
jno
jecxz
push
mov
mov
lcall
stos
sbb
adc
dec
fists
jle
cmp
xchg
fisubs
nop
test
ljmp
rcrl
bnd
outsl
mov
fstl
xor
clc
mov
push
jnp
ret
xchg
dec
data16
movsl
xchg
xor
push
fists
jb
inc
addr16
aas
sti
cmc
xor
test
sbb
ret
sub
pop
scas
and
xchg
std
in
sbb
and
fstpt
cmp
insl
mov
enter
js
push
stos
movsl
xor
ret
leave
xchg
dec
mov
in
mov
test
xchg
fidivrs
aam
xor
jb
pop
lcall
std
scas
in
ja
rcll
pop
jecxz
mov
pop
jbe
mov
dec
pop
push
mov
xor
mov
mov
aam
adc
or
mov
and
inc
xchg
dec
xor
sub
push
add
xchg
sbb
mov
out
inc
pop
rol
fucomi
cld
ss
sbb
push
je
lock
ljmp
adc
sub
clc
adc
mov
notl
aam
adc
outsl
int
adc
add
and
out
arpl
sub
test
faddl
jnp
push
cs
sbb
inc
sbb
pop
xchg
daa
aam
nop
lds
jp
xor
js
inc
and
sbb
push
pop
inc
es
sbb
aas
inc
fisubs
adcl
add
arpl
lahf
sar
adc
rolb
mov
push
add
inc
mov
scas
shll
mov
mov
out
cmpsb
mov
sub
fadds
loope
mov
out
push
mov
jg
fnstsw
out
out
clc
mov
xchg
dec
clc
mov
cmp
sub
aad
mov
inc
scas
pop
inc
mov
movsl
jno
add
mov
pop
sub
pop
fcmovb
repnz
and
cmp
scas
lcall
mov
mov
inc
aam
in
xadd
gs
xchg
mov
pop
xor
sti
mov
iret
mov
cs
outsl
dec
fnsave
add
ret
outsb
test
mov
das
cmp
xor
andl
cmpsl
clc
enter
out
xor
call
push
icebp
cli
cmpsl
lock
fldl
arpl
mov
into
pop
sub
or
icebp
dec
loope
je
sbb
push
arpl
aaa
xchg
dec
push
xor
add
push
jnp
xchg
loop
xchg
pop
push
cs
ljmp
mov
cmp
adc
push
adc
jo
or
xor
shl
or
xor
adc
mov
cld
loop
push
sub
int3
or
cli
jno
mov
in
call
jge
add
mov
cmpsl
mov
popa
cmp
push
inc
or
in
std
adc
je
les
das
out
pop
adc
in
into
aam
jb
leave
pop
add
aas
subl
bound
lret
scas
sarb
push
bound
mov
je
out
loope
xor
xchg
jmp
mov
call
mov
mov
dec
out
pop
cmp
cmp
xchg
stos
sbb
clc
lcall
fisubl
mov
mov
es
mov
and
mov
pop
mov
push
push
jp
pop
sbb
std
mov
shlb
pushf
out
or
jne
and
sub
sbb
leave
xchg
mov
mov
pop
lock
daa
lcall
nop
std
push
pusha
pop
aad
push
dec
lods
pop
loopne
push
add
cmp
dec
mov
shll
jbe
loope
dec
mov
les
sbb
cli
jbe
pushf
xchg
lret
mov
testl
push
push
movsb
push
je
push
lods
jmp
push
pop
int
mov
out
fadds
jmp
iret
clc
xlat
fldcw
pop
int3
fsubl
loop
aam
stc
xchg
fcom
pop
adc
lret
unpcklps
xchg
pop
adc
mov
adc
xchg
loop
xchg
adc
cltd
mov
lds
xor
or
jmp
inc
movsl
shl
sub
adc
sub
out
test
fwait
xchg
jecxz
dec
inc
push
test
cmp
jnp
add
xchg
stos
inc
xor
dec
xchg
fiadds
add
sub
mov
mov
add
xor
dec
mov
scas
mov
adc
xchg
mov
sahf
xor
test
mov
inc
pop
push
dec
xchg
pop
lcall
jb
sbb
loopne
movsl
jmp
fnsave
sti
out
jmp
loope
sub
mov
adc
and
loopne
mov
je
lret
cmpsb
and
lods
pop
jb
scas
imul
dec
lahf
dec
test
js
push
sbb
xchg
mov
push
pop
adcl
shlb
pop
mov
jns
mov
jb
popf
mov
dec
mov
and
xor
mov
or
mov
inc
cld
jne
dec
mov
mov
mov
jb
mov
inc
ds
mov
cmpsb
negb
bswap
xchg
out
mov
dec
add
outsb
cltd
xor
stc
in
mov
out
insb
mov
rol
sarb
fstl
cltd
loop
sbb
scas
dec
cmpb
test
cltd
arpl
movsb
and
cmp
mov
movsl
inc
lret
jecxz
popa
xor
mov
cwtl
pop
leave
mov
mov
push
or
add
xchg
imul
sbb
xchg
enter
ret
fcoml
jmp
mov
xchg
sbb
mov
dec
cmp
aad
inc
movsb
in
add
inc
and
xchg
cmc
fmuls
fcoml
dec
jno
push
pushf
mov
mov
call
inc
inc
sarl
push
stc
cmp
insb
shll
push
pusha
fs
cs
sbb
test
fdivrs
xchg
adc
cwtl
sarb
xlat
lea
lods
xchg
pop
pusha
mov
in
lods
inc
shlb
jg
sbb
in
mov
sbb
ffree
in
mov
testb
ret
fsts
push
and
sub
adc
inc
and
mov
sti
sti
pop
sub
push
cmp
shl
inc
fwait
xchg
push
lcall
xchg
popf
cmp
cmp
and
mov
sbb
es
in
jae
std
or
jbe
pop
pcmpeqd
sbb
or
push
call
add
cwtl
int3
shl
fcoml
filds
fs
mov
adc
xor
sub
decl
fcom
adc
test
pusha
rol
addr16
add
xlat
cmp
push
notl
stc
insl
rcrb
aas
arpl
es
jnp
out
lods
cmp
jns
mov
inc
xchg
xchg
aad
imul
sahf
mov
fwait
add
add
push
adc
jo
and
xchg
add
iret
jne
mov
or
lahf
xor
mulb
xchg
push
xor
test
mov
into
hlt
push
divl
int3
adc
out
ss
xchg
dec
push
and
lea
movsl
cld
fildl
sub
push
or
xchg
xor
push
sub
jno
or
inc
call
sbb
rcrb
mov
inc
push
fldl
and
add
scas
js
mov
jbe
adc
mov
rcr
adc
fst
sti
mov
cli
cmp
dec
xor
fbstp
jp
scas
test
add
es
fimull
mov
mov
add
addr16
sbb
call
int
lret
loope
pop
pop
rcll
dec
adc
jae
mov
cmp
stc
mov
push
xchg
das
xor
aaa
lret
add
inc
xchg
dec
pop
push
mov
xchg
es
push
mov
inc
flds
jnp
adc
mov
stos
or
out
add
addr16
sub
pop
sub
xchg
icebp
int3
insb
lea
dec
xorl
rorl
xor
xchg
push
mov
sbb
xchg
movsl
ljmp
push
adc
inc
lock
aas
add
jnp
mov
addr16
outsl
cld
xor
lahf
test
inc
popa
movsl
mov
movsb
push
xchg
pop
or
or
jbe
mov
lds
mov
cmp
sti
or
cltd
push
fs
test
aas
imul
jmp
xchg
push
jle
stos
outsl
insl
cmp
and
add
push
es
clc
outsb
sub
cmp
or
stc
mov
xor
inc
fdivr
mov
jge
dec
xchg
dec
push
repz
push
dec
in
sahf
leave
pop
imul
movsl
inc
iret
inc
push
out
pop
test
sbb
inc
sub
inc
push
add
notb
dec
inc
push
jno
sub
in
jns
adc
xor
dec
test
xchg
jle
sbb
dec
cwtl
add
sbb
ds
test
push
addr16
inc
outsl
cmc
sub
testb
cmp
mov
push
push
fisttps
sub
js
sub
cmpl
mov
xor
hlt
push
popa
xor
imul
addr16
cmc
ja
cld
call
add
sub
pop
adc
test
mov
add
adcl
or
aas
add
in
mov
push
push
std
mov
aaa
adc
andl
adc
cli
int3
jmp
cmp
push
lods
test
loope
iret
test
icebp
adc
mov
cmp
mov
icebp
cmpsl
inc
sti
stos
mov
jecxz
jno
fisubl
cmpsl
xchg
jmp
pop
push
popa
fiaddl
push
mov
mov
cmp
dec
shll
rolb
dec
negl
push
ret
jecxz
ret
dec
mov
mov
iret
insl
sbb
cli
mov
mov
sbb
imul
xchg
jae
push
xchg
in
jne
fdivs
adc
pop
int3
inc
cmc
pushf
jns
in
add
pop
xchg
cmp
je
push
sbb
jle
stc
jg
mov
test
adc
push
sub
pop
mov
in
movsl
jge
mov
jae
lds
xchg
call
adc
cwtl
lcall
mov
sub
inc
out
xchg
fcmovnu
hlt
jg
loopne
mov
push
mov
mov
fmull
lods
xchg
adc
xor
and
repnz
push
dec
sub
imul
negl
je
in
test
test
daa
aam
xor
add
xchg
cmp
fdivp
mov
adcb
movb
pop
inc
jmp
jge
repz
ficompl
scas
lahf
lcall
addb
mov
in
into
pop
icebp
mov
call
or
loopne
in
push
or
call
bound
test
mov
fcomps
inc
outsl
adc
cmpl
jmp
xor
sub
cmp
inc
js
push
adc
mov
ret
add
aaa
or
lret
and
mov
jl
mov
add
pop
jno
dec
jg
hlt
addr16
ljmp
rcl
and
jns
dec
mov
sub
je
xor
outsl
cld
dec
pop
popf
inc
pop
sub
int
je
push
pop
ret
pop
cs
push
and
sub
das
mov
mov
ficoms
mov
bound
testb
mov
and
inc
sbb
dec
test
add
test
orl
icebp
adc
es
cmpsl
es
orl
cmp
testb
mov
xchg
leave
push
sbb
cld
insl
sbb
repz
mov
mov
dec
dec
flds
mov
sar
std
push
inc
call
mov
and
test
int3
ficompl
stc
inc
jl,pn
gs
mov
inc
jge
or
add
adc
push
and
lock
and
nop
pop
xor
js
push
repz
stos
adc
int
or
imul
jp
xchg
orl
sub
ss
adc
lods
cli
and
cltd
fmull
imul
mov
xor
in
mov
push
add
push
shll
in
lcall
imul
ret
bound
jp
sub
fistps
gs
mov
inc
push
test
loop
outsl
int
stc
int
inc
cmc
mov
out
mov
push
mov
test
lock
lcall
fdivl
dec
mov
ret
cmpsl
stos
dec
mov
scas
pusha
jl
sbb
in
or
add
sti
movsl
sbb
inc
add
jmp
mov
inc
sub
dec
cmc
push
xorb
push
dec
aaa
push
data16
insb
jmp
dec
push
xor
or
sti
repz
add
mov
das
pop
icebp
mov
jns
shll
lcall
adc
jg
push
lret
add
nop
lods
adc
jne
sub
sbb
mov
cmp
es
popa
push
sub
and
insb
movsl
push
jge
cli
or
xchg
jne
rcll
stc
jl
and
sbb
aam
mov
mov
lds
and
jbe
leave
and
and
lcall
jecxz
push
mull
mov
andb
sarb
sbb
ss
sahf
sbb
inc
pop
sbbl
and
pushf
pop
cmp
push
pop
pop
stos
sahf
in
xchg
pop
mov
mov
add
pop
pop
mov
sub
fldt
adc
mov
insl
sub
stos
mov
ss
dec
cltd
xor
mov
mov
dec
or
mov
ljmp
mov
out
in
jnp
test
movsl
sti
dec
ja
jg
arpl
dec
jnp
outsb
push
lcall
out
and
sub
cmpsl
xchg
scas
enter
mov
mov
gs
lret
mov
mov
mov
das
lds
fmul
add
inc
mov
repz
xchg
lds
or
inc
insl
jle
add
jnp
jecxz
push
test
outsl
jmp
mov
adc
push
loop
xchg
cmc
into
enter
xor
ljmp
dec
fimuls
pop
pop
lcall
adc
jg,pn
mov
gs
sub
jp
mov
clc
mov
lcall
mov
pop
cli
push
jecxz
pushf
mov
mov
aaa
and
adc
or
mov
scas
aaa
repz
pop
in
or
jp
mov
xor
popa
jecxz
stos
sub
cmp
icebp
push
inc
daa
sbb
jp
out
jle
mov
jl
pop
aam
mov
push
leave
pusha
std
lods
out
cltd
pop
jmp
int
sete
and
cltd
push
aam
mov
sub
xchg
mov
jae
out
leave
in
push
aam
dec
cmpsl
ret
popf
cmp
sub
scas
inc
bound
dec
sbb
jge
or
pop
xor
add
jne
adc
sahf
mov
mov
stos
cmp
dec
lods
out
xchg
gs
fs
mov
std
addb
and
loopne
test
mov
in
jne
push
adc
push
inc
dec
xchg
es
xlat
xchg
cmp
mov
xchg
and
adc
add
clc
cmova
adc
add
popf
jb
idivl
push
test
sahf
ror
test
movsb
push
into
xchg
test
sbb
jg
fs
mov
ljmp
out
sub
dec
punpckhdq
pop
lcall
jmp
not
dec
leave
mov
adc
and
and
stos
sub
rcrb
xchg
dec
jle
inc
push
push
mov
or
test
mov
in
mov
or
stc
dec
js
cwtl
mov
popa
pop
push
arpl
inc
fs
rcrb
shl
add
out
xor
clc
insl
push
mov
test
ret
leave
in
dec
pop
lret
hlt
mov
mov
arpl
pop
les
test
outsl
movl
add
jecxz
push
pop
cmp
mov
in
xchg
or
das
adc
dec
sahf
pop
sbb
jl
jno
sbb
mov
sti
jbe
add
cmp
sti
add
in
jo
mov
mov
or
movb
lea
sti
nop
shlb
ucomiss
jle
pop
mov
bound
cmp
xor
push
cli
cmp
push
pop
jle
sbb
adc
test
fcmovne
inc
popf
cmpb
inc
andb
mov
int3
adc
fldt
popa
ficomps
icebp
adc
lret
dec
cmp
xchg
cmp
pop
push
test
fdivs
aaa
add
mov
push
stos
xchg
inc
mov
lea
outsb
aas
mov
mov
sbbl
inc
hlt
mov
mov
fwait
das
aad
push
out
xchg
ret
push
mov
jne
push
pop
cmp
adc
mov
dec
pop
dec
push
jl
inc
dec
gs
mov
fmuls
jge
and
out
xchg
or
xchg
in
sbb
nop
push
add
fidivl
inc
mov
push
bndldx
and
inc
cltd
loope
int
mov
test
xchg
xor
cmp
int
inc
adc
call
xchg
push
leave
mov
inc
gs
sbb
xor
or
push
in
add
pop
push
cltd
sbb
imul
add
dec
pop
push
ret
dec
test
fwait
call
in
mov
mov
pop
and
pushf
cli
iret
insb
mov
add
or
mov
mov
pop
movsl
jle
pop
jnp
stc
jo
leave
sbb
mov
fisubl
or
sahf
popa
adc
stos
in
cmp
xchg
jle
mov
outsl
popf
ss
aaa
loop
inc
aam
mov
sbb
js
in
cmp
pop
loopne
mov
inc
jo
loope
sbb
jge
dec
pop
jb
call
cmp
add
aad
cltd
mov
sub
pop
mov
inc
mov
jg
mov
ror
adc
dec
or
int
xor
test
in
pop
or
je
data16
adc
xchg
das
adc
das
xor
push
sbb
icebp
mov
cmp
fnstsw
sub
shll
jae
mov
add
mov
xchg
cmp
mov
bound
sbb
shll
and
lcall
fistl
lea
mov
xchg
cwtl
add
out
xorl
sub
sbb
jle
repnz
mov
pop
ja
rclb
and
test
pop
pmaddwd
lret
adc
mov
jo
lcall
sbb
cmp
nop
inc
inc
inc
dec
sub
push
ljmp
adc
or
push
arpl
inc
clc
lods
incb
xchg
enter
xchg
insl
lahf
jge
xchg
mov
push
sub
iret
push
push
ja
test
nop
sub
sub
out
jge
test
lock
imul
inc
jno
jmp
sbb
inc
lret
aad
test
push
orb
pushf
dec
and
mov
hlt
jno
addr16
in
das
mov
sub
psubsw
test
add
adc
push
push
xchg
xchg
cmp
xchg
je
cmpsb
cld
add
dec
sbb
inc
fcoms
ficompl
push
cmp
sub
enter
rol
jae
out
inc
xor
lret
ret
ret
or
pop
mov
dec
cs
fwait
pop
cmpb
jl
cmp
cwtl
addr16
cmp
ficoms
sub
aam
jnp
cmp
cltd
outsb
enter
push
xchg
stos
push
push
stos
xlat
cmp
push
cld
mov
add
pop
mov
insb
dec
sub
incb
addr16
jl
xchg
and
mov
scas
xor
lret
or
adc
dec
dec
dec
cmp
add
shll
sti
ffreep
mov
dec
jmp
jl
sarb
jmp
addr16
pop
ffree
test
add
cmpsl
xchg
xchg
lods
jp
mov
mov
pop
pop
scas
lods
in
mov
mov
outsb
push
mov
dec
inc
xchg
scas
clc
lret
sbb
repz
dec
jmp
mov
imul
inc
sub
xor
jbe
aaa
rorl
ss
dec
xor
pop
arpl
and
test
push
es
fsubrs
xlat
rcl
repnz
scas
mov
inc
mov
push
push
into
dec
popw
sbb
xor
js
mull
sub
fwait
movb
cmp
out
mov
sub
inc
mov
or
pop
push
sub
adc
call
adc
adcb
sub
pop
dec
sub
lods
es
imul
or
popf
nop
lahf
jg
pop
jmp
idivb
add
xorl
lock
inc
mov
sub
jecxz
pusha
mov
push
dec
jne
dec
jne
repz
mov
xchg
int3
mov
rcr
xor
pop
jbe
xchg
imulb
iret
pop
fwait
cltd
pop
cmc
repz
lahf
fsubrl
ss
xor
inc
mov
adc
adc
aam
out
mov
imul
clc
cwtl
les
test
and
stc
pop
pop
mov
mov
sbb
dec
test
fstl
or
js
out
iret
sbbb
xlat
int
lret
punpckhdq
lea
enter
stos
gs
inc
inc
xchg
xor
mov
sbb
icebp
jnp
pop
dec
mov
push
push
loop
sub
sbb
cmc
push
xchg
imul
aas
fstl
cli
jns
xor
testb
fwait
jp
sbb
iret
daa
outsb
mov
fdivrl
inc
cmp
mov
sbbb
stos
adc
sub
cmp
std
mov
pop
mov
mov
lahf
rorl
mov
mov
je
fs
sub
das
shll
gs
adc
sbb
pop
xchg
test
cmpsl
xlat
mov
mov
mov
xor
ret
jmp
stc
cmp
xor
pop
cwtl
scas
mov
or
lret
mov
mov
test
enter
cmp
gs
add
outsl
sbb
rcr
and
or
pop
jmp
mov
xchg
es
cli
insb
xchg
pop
mul
pop
xchg
movsl
pop
sub
sbb
bound
imul
or
fiaddl
pop
out
inc
out
or
pop
popa
xchg
rclb
adc
jb
loopne
inc
or
test
fwait
aaa
in
mov
sbb
pop
popa
dec
aam
test
repnz
lahf
xchg
adc
xor
repz
pop
xchg
push
outsb
push
sahf
sub
sub
data16
js
add
cmc
ror
xor
call
xor
inc
push
sbb
push
inc
mov
aas
aad
mov
jnp
push
es
loop
les
jg
pop
pusha
mov
xchg
jge
jge
jo
aad
inc
sbb
lret
mov
sbb
mov
aaa
cld
imul
adc
inc
lock
mov
push
pop
test
outsb
xchg
sbb
and
inc
inc
xlat
mov
add
icebp
push
jo
cld
dec
fdivrl
mull
int3
fst
loope
in
cmp
cmp
add
pop
xor
ss
push
add
xchg
aam
sub
and
xchg
jo
sub
hlt
fbld
insl
movsb
pop
ficoml
fldenv
jl
xchg
dec
lret
and
cmp
add
push
mov
adc
cmp
lret
sbb
aad
xchg
mov
mov
fcmovne
add
sbb
sbb
push
adc
jae
jnp
aad
shll
das
imul
sbb
dec
divb
jb
push
outsb
int3
fdivl
lret
jmp
cmp
or
jecxz
add
jge
mov
xor
pusha
out
sbb
mov
sbb
aaa
test
sti
xor
mov
sbb
sti
jmp
cmp
and
add
rorb
ret
pop
push
call
push
gs
lret
stos
call
inc
pop
dec
jg
daa
pop
or
mov
mov
dec
cmp
inc
sbb
clc
icebp
dec
jecxz
in
fnstcw
cmpsb
fiaddl
dec
push
mov
out
or
jmp
lahf
push
dec
xchg
mov
or
pushf
adc
dec
leave
jb
out
and
movsl
adc
fisubs
daa
imul
xor
xor
fsubrl
cmp
imul
ret
mov
ja
subl
ja
in
ss
clc
or
jmp
adc
pop
aad
add
aas
insb
mov
sub
int3
das
xchg
icebp
add
filds
jo
push
loope
cmp
js
cltd
iret
xchg
imul
inc
out
cmpsb
popf
mov
testb
mov
repz
lahf
mov
jp
pop
sbb
loop
nop
push
pusha
mov
loope
in
sub
mov
adc
cs
popa
mov
int
jmp
lahf
out
jo
cmpb
aad
push
xor
mov
jae
xchg
mov
mov
sub
lret
and
sub
subb
test
lds
fiadds
cmpsb
pop
pop
mov
lcall
and
lahf
stos
pop
mov
fisubs
jb
hlt
add
mov
sbb
jo
mov
push
clc
push
insb
js
dec
lea
xchg
jmp
out
mov
jl
jns
dec
fnstcw
add
lods
fstpl
pop
sti
push
loope
cmc
sbb
dec
sbb
mov
mov
jecxz
fwait
sbb
test
pop
push
xchg
sbb
mov
inc
xchg
loopne
pop
mov
dec
and
sti
and
scas
pop
inc
pop
das
xor
or
or
add
pusha
sysret
stc
sbbl
push
test
inc
mov
cmp
es
enter
rolb
dec
jle
mov
mov
aad
dec
adc
test
dec
mov
cltd
or
jae
popf
arpl
aam
xor
jae
aad
dec
wrmsr
cli
xor
div
std
jg
test
or
push
stc
in
outsb
or
dec
js
fwait
aaa
mov
pop
sub
dec
insb
dec
add
jns
inc
mov
xchg
test
pop
clc
aam
adc
jo
int
mov
jns
pop
shrb
inc
cs
sbb
dec
fsubl
imul
pop
push
sbb
int
sbb
adc
push
hlt
ficompl
and
mov
icebp
leave
dec
adc
push
push
pop
outsl
pop
gs
inc
aas
insb
add
dec
pusha
cli
fcompl
and
mov
push
js
or
xchg
mov
push
stc
aam
fwait
mov
cmpsb
or
and
in
mov
dec
popf
imul
and
and
sub
sbb
dec
xchg
jb
bound
pop
sbb
mov
gs
sub
daa
leave
xchg
jo
push
int
jl
and
js
leave
jp
mov
test
mov
push
imull
pusha
and
insl
or
dec
push
mov
sbb
mov
jno
repnz
loope
adc
xor
aaa
iret
pop
push
sbb
call
jbe
test
jae
lods
mov
in
sti
add
fistps
dec
add
xchg
push
xchg
es
pusha
sub
call
pop
test
adc
dec
dec
aad
sub
jmp
out
sub
movsb
pop
mov
adc
imul
stc
sbbb
mov
cs
pop
lock
mov
rolb
ret
mov
aas
popa
out
stos
adc
inc
and
gs
push
cmp
mov
pop
mov
test
cli
xlat
adc
mov
sar
pusha
fistpl
daa
sbbl
push
lret
mov
out
fstps
sbb
repnz
gs
and
mov
mov
rorl
ljmp
aaa
shlb
xor
mov
iret
jns
cmpsl
mov
rcrb
jno
jo
and
lret
sub
push
cmp
loop
aaa
lret
roll
popa
test
int
std
push
clc
ljmp
popf
jb
fists
pusha
stc
int
pavgw
ds
insl
cmp
jle
cltd
ficompl
push
sbbl
push
enter
je
inc
in
jp
pop
loopne
and
imul
outsb
mov
rclb
mov
or
cmpsl
mov
gs
pop
add
orb
sti
xor
test
or
mov
stc
movb
jb
jle
incl
add
sub
lock
out
xchg
pusha
lret
ret
or
push
pushf
mov
test
ret
lds
arpl
lock
mov
ljmp
sub
add
dec
push
jae
and
mov
mov
addb
inc
sub
call
xor
scas
iret
pop
hlt
gs
lcall
mov
repz
stos
cmpsb
add
lcall
sarl
sbb
xchg
inc
rcl
aad
sbb
inc
adc
andl
adc
mov
int
pop
lock
inc
mov
jecxz
mov
movb
ss
mov
jge
mov
fucomi
decb
loopne
xchg
inc
addr16
jl
mov
jbe
daa
lock
lods
xchg
adc
inc
rcrl
jmp
mov
ss
mov
mov
fxtract
sti
int
push
mov
stc
in
scas
jmp
fisubl
cmp
pop
cmpsb
repnz
fwait
xor
adc
push
mov
inc
push
or
xchg
pop
fadd
dec
fidivl
push
and
sti
xchg
mov
add
pop
xor
jge
adcl
enter
int3
mov
inc
dec
xchg
xchg
xchg
imul
adc
jno
mov
in
push
psrld
adc
lock
sub
pusha
repz
nop
fwait
inc
loop
inc
aaa
aam
jnp
jmp
js
adc
inc
sub
popa
fmul
or
js
and
xor
fwait
movsl
pop
mov
mov
loope
xor
lock
sub
or
xchg
add
push
movsl
aam
add
add
push
cs
inc
sahf
jecxz
adcb
sbb
lods
jno
pop
fcoms
cmp
clc
scas
cmp
xlat
outsb
fildl
icebp
negb
js
hlt
cmp
lods
sbb
mov
xchg
imul
rep
and
inc
jae
sbb
sbb
mov
imul
xor
jecxz
scas
outsl
adc
jne
sar
cmp
rol
push
rolb
mov
cs
sahf
stos
adc
pushf
iret
int
jne
mov
hlt
xor
in
adc
pop
push
mov
fs
mov
aaa
sub
cs
xchg
xchg
sbb
cmp
adc
jmp
pop
inc
inc
rolb
shlb
sbb
imul
or
hlt
xor
les
push
jne
cli
leave
jmp
adc
je
push
cmp
pop
xchg
test
push
mov
int3
fimull
mov
sti
in
shr
dec
xchg
xor
movsl
adc
test
int3
enter
in
scas
int3
pop
and
xor
lahf
out
pop
bound
arpl
sub
mov
out
dec
repz
jae
imul
mov
inc
loopne
mov
testl
in
inc
test
fbstp
pop
pop
jle
insl
jo
aaa
mov
sbb
push
xlat
mov
bound
cmp
dec
and
inc
xchg
leave
clc
inc
inc
sahf
jnp
mov
pop
mov
out
mov
call
xlat
or
pop
push
gs
scas
push
cs
and
push
outsl
and
outsl
incb
and
mov
iret
psubd
pop
sub
cmc
test
out
sub
pop
mov
cltd
dec
ret
test
mov
mov
dec
imul
xchg
rol
je
pop
cmp
notl
addr16
stos
fsubl
insb
adc
data16
jo,pt
scas
sahf
xchg
add
scas
push
repnz
adc
dec
inc
sub
in
lea
imul
and
jb
and
adcb
jne
js
int3
es
jge
jle
mov
push
xor
mov
insb
ljmp
movl
aam
sbb
ja
mov
out
cmp
push
movsb
jb
leave
mov
mov
mov
test
jbe
dec
jnp
dec
xchg
mov
imulb
outsl
adc
scas
fiadds
pop
jns
jg
shlb
sub
in
les
xchg
nop
jne
ja
mov
imul
enter
scas
inc
sub
xchg
or
adc
xchg
cmp
stc
hlt
es
jno
out
aas
or
jle
arpl
mov
cmp
das
fs
sub
sarl
sbb
iret
and
sub
insl
test
inc
inc
icebp
nop
sti
gs
mov
mov
jecxz
mov
inc
stos
ret
inc
sub
lods
call
je
out
pop
push
mov
arpl
cmp
jmp
int
sbb
sahf
add
outsb
ss
mov
sbb
fyl2xp1
xor
addl
adc
pop
scas
sbb
dec
loopne
cs
std
push
push
adc
xchg
cld
xchg
mov
lret
add
jnp
pusha
lret
aas
leave
das
or
loop
xchg
cmc
bound
mov
dec
push
push
lods
out
fwait
imul
xchg
js
add
scas
push
ficoml
xor
sub
mov
push
sbb
fistl
outsb
ret
add
lods
fidivrl
bound
xchg
mov
fisubs
fs
inc
aas
ret
jle
push
xchg
in
and
mov
jg
mov
sub
mov
stos
out
aas
lds
enter
jecxz
popf
test
mov
jge
inc
sub
notb
scas
in
aad
pop
cltd
pop
rorl
pop
out
daa
push
jmp
jno
push
arpl
dec
sbb
aaa
nop
dec
jl
add
or
adc
fs
push
cmp
in
add
fadds
scas
lahf
into
push
movsl
imul
mov
mov
icebp
push
mov
fidivl
add
cmp
dec
arpl
nop
test
adc
fcom
into
stos
lcall
jl
push
repnz
cs
add
into
pop
cmpsb
and
add
rcrl
push
push
sti
aam
inc
ficoms
mov
decb
mov
jbe
xor
xor
cmp
or
mov
pusha
or
sti
popf
mov
test
sbb
test
push
mov
mov
jmp
outsb
jge
or
enter
push
lcall
mov
mov
adc
mov
sbb
xchg
mov
outsb
adc
sbb
mov
pop
fcoms
xor
mov
popf
cmc
cmc
inc
cs
push
and
ja
es
jp
pushl
cld
loop
leave
xchg
pop
lahf
mov
loop
pop
shl
jmp
out
movsl
out
cmpsl
icebp
add
loope
or
mov
add
ret
inc
test
push
mov
jnp
enter
xchg
subl
lods
jo
xorl
and
dec
jae
insb
movsl
je,pn
adc
fsubrp
ljmp
jle
cmpsl
sub
mov
out
test
xchg
sub
inc
jmp
dec
sub
inc
push
popa
pusha
pop
sbb
andl
jecxz
ljmp
jb
mov
mov
cmpsl
sbb
inc
sbb
inc
or
daa
js
lock
mov
mov
jp
in
daa
mov
loopne,pn
popf
dec
out
cmpsl
sub
test
ror
inc
shll
pop
mov
aaa
out
xor
pop
push
leave
jl
cmp
data16
mov
sahf
inc
add
jge
stos
mov
dec
fstp
xchg
add
sahf
pusha
in
filds
sti
aad
outsl
lods
pop
pop
push
hlt
pop
cmp
sahf
lea
rcl
std
adc
xchg
cmp
fdivrl
aad
pop
mov
push
jmp
lods
inc
fcmovnu
rorb
push
xchg
dec
and
adc
and
hlt
xor
arpl
push
inc
les
lcall
filds
movsb
ret
in
insb
repz
lret
in
pop
addr16
xlat
adc
mov
push
jle
xor
pop
jl
mov
push
movsb
insl
rclb
dec
and
test
js
sbbb
clc
aaa
data16
dec
outsl
shlb
cli
or
filds
mov
roll
sbb
jns
sub
imul
fwait
aad
nop
or
arpl
out
add
sbb
ret
les
xchg
insl
mull
test
xchg
call
je
push
fs
cmpsl
jb
in
cmp
mov
xchg
out
push
pop
xor
clc
js
xlat
imul
jecxz
ja
sub
jne
repz
mov
pop
xlat
adc
add
dec
fsincos
cld
cwtl
sub
lea
mov
push
test
or
lret
xchg
dec
xchg
hlt
lods
nop
pushf
rol
mov
shll
add
jl
lods
adc
mov
roll
jecxz
ret
mov
jmp
andb
stos
jbe
cs
pop
into
idivl
rcll
fdivrs
xor
fstpt
fmulp
icebp
cli
ja
xor
xchg
xchg
push
ficoml
call
loope
cmpsl
pop
jno
cltd
jl
ds
stc
lea
lahf
xchg
pusha
stc
fildll
sahf
pop
loopne
fstpl
inc
jg
jbe
hlt
inc
mov
das
mov
shlb
cmpb
sbb
xor
xchg
stos
add
notl
scas
in
ficoml
pop
pop
pop
sarb
pop
push
xor
jnp
repz
pop
lods
sub
outsl
push
test
flds
ret
dec
pop
test
mov
jg
test
scas
icebp
push
scas
or
add
mov
ja
or
add
dec
out
xlat
mov
xor
mov
cmp
sbb
mov
test
inc
arpl
inc
xchg
add
cmc
dec
shl
xchg
or
xchg
aaa
jg
fs
pushf
mov
add
ja
dec
mov
loopne
sarb
loope
add
mov
mov
xchg
ret
lcall
orl
rcl
add
aam
sbb
imul
int
clc
and
xchg
sahf
push
pop
xor
adc
sub
xchg
stos
jbe
sub
mov
in
lock
and
clc
dec
mov
lret
sbb
scas
popa
mov
pop
mov
lods
xor
fsubrl
push
arpl
pop
popf
mov
in
enter
mov
or
rep
sar
ljmp
add
in
cltd
ror
xor
inc
pop
leave
sbb
cmpsb
or
sub
cmp
add
movsb
adc
cmc
inc
mov
xchg
dec
nop
sbb
cli
hlt
adc
mov
jmp
sti
stos
cmp
pop
addr16
pop
mov
inc
sub
test
pop
aad
sbb
loope
in
lahf
mov
jl
adc
mov
fldt
in
pop
jne
lcall
jmp
cmp
jg
sahf
sarb
lret
stos
das
or
sahf
punpckhwd
clc
mov
jp,pn
mov
pop
int
pop
dec
cltd
mov
cmp
clc
push
aad
xorb
shll
hlt
lret
or
sti
stc
push
cli
out
or
sbb
inc
ja
mov
leave
xor
adc
and
dec
sub
movsb
test
out
jl
adc
rorl
int
jo
jecxz
scas
lods
dec
leave
pushf
popf
xor
insl
cmpsb
mov
and
jle
xor
adc
negl
lods
push
and
daa
outsl
je
lods
adc
pop
adc
sbb
iret
sbb
jnp
xorl
es
lcallw
xor
cs
out
pusha
shlb
pop
dec
push
sbb
push
xor
loop
add
es
sti
mov
adc
or
xor
cltd
sbb
mov
je
dec
cmp
jb
jae
add
jmp
mov
inc
inc
push
outsb
cmp
sbb
repz
jl
lcall
in
dec
xchg
fs
jge
movsb
stc
aaa
or
fs
bnd
cmp
and
cltd
int
lea
mov
sub
xor
sub
or
adc
or
mov
pop
push
sbb
sbbl
jbe
test
scas
pop
mov
fldcw
or
daa
mov
dec
jo
cli
push
rcll
repz
pop
pushf
fs
jnp
push
icebp
xchg
xchg
fidivrl
loopne
mov
dec
aam
ss
push
dec
lret
test
cmp
enter
mov
inc
and
int3
shrb
cmp
fsts
cli
repz
imul
out
roll
dec
jge
adcl
mov
inc
pop
notb
cwtl
mov
popa
fnstsw
xchg
arpl
imul
leave
sti
mov
outsb
ret
scas
movl
pop
xchg
push
pop
fstpl
into
js
inc
sarb
loopne
das
inc
push
iret
sbb
mov
sbb
add
mov
addr16
add
mov
xchg
push
test
inc
jge
aad
or
sub
sub
inc
out
mov
mov
mov
add
xor
cli
or
loopne
push
and
iret
dec
std
cld
jbe
cmp
fcmovnb
jecxz
sbb
cmp
pop
jge
rcrl
outsl
lods
or
xchg
adc
xchg
jp
test
jmp
test
dec
or
adcl
stos
cmpsb
sbb
pop
movsl
in
enter
jo
lcall
fnstcw
leave
fwait
pop
and
sub
popa
push
xchg
shrl
daa
stos
inc
cmpsb
test
cmp
and
sbb
adc
fpatan
jne
mov
jbe
mov
mov
mov
inc
mov
sbb
dec
push
clc
sbb
and
das
or
push
add
js
xchg
inc
in
aaa
jbe
test
inc
cmpsb
in
push
sbb
rcll
cltd
xor
stos
xor
cmp
out
cli
loop
xchg
sbb
push
cmpsb
scas
pop
or
stos
incb
test
into
xchg
outsl
orl
call
adc
push
push
shlb
xchg
push
aad
pop
mov
arpl
sub
mov
test
pop
push
inc
mov
xchg
test
fwait
push
stos
call
dec
dec
or
adc
sub
mov
pop
int
repnz
dec
stos
or
cwtl
enter
mov
cli
sbb
add
rolb
jge
mov
mov
and
jne
leave
jl
sti
mov
or
cwtl
pop
mov
mov
inc
ret
jl
mov
not
scas
mov
shr
in
mov
add
popa
xchg
inc
subb
add
cmp
pop
jbe
lods
es
adc
mov
in
push
and
outsl
int3
imul
icebp
gs
and
roll
and
sub
mov
or
add
test
iret
enter
int
or
and
shll
loope
ret
je
adc
dec
add
mov
mov
scas
cld
or
stos
jae
mov
mov
inc
cltd
cmpsl
push
jg
mov
or
push
dec
mov
lret
push
dec
and
pusha
call
std
sti
mov
adc
int3
daa
lret
mov
mov
les
sbb
jl
rol
sbb
decl
sbb
and
mov
cli
test
push
push
imul
mov
jge
mov
xchg
push
pop
rcl
insl
mov
popa
lret
lods
xor
sbb
testb
sub
sbb
mov
jl
pop
pop
xor
jno
imul
dec
push
neg
pop
pushf
sbb
cli
inc
pop
jnp
into
pop
cld
pop
and
mov
pop
outsb
adc
fidivrs
sbb
gs
and
jo
inc
push
cld
icebp
jle
arpl
ljmp
sub
xor
and
popa
dec
mov
xchg
popa
lret
fidivrl
fistps
test
push
test
sti
mov
fimull
sub
mov
xor
daa
lods
imul
into
out
mov
inc
jb
jae
orb
mov
neg
adc
mov
push
test
stos
push
aaa
out
movsb
pop
fisubrl
mov
in
sahf
push
pusha
cmp
sti
js
out
mov
dec
ds
push
mov
loop
jge
add
pusha
bnd
pop
push
xor
pop
pop
mov
push
push
ror
push
shl
scas
jecxz
cmpb
xchg
dec
test
fadds
out
push
pop
mov
pop
or
lea
dec
push
jo
mov
sahf
lock
cli
mov
data16
hlt
sub
push
push
scas
jae
aaa
sahf
int3
inc
ss
hlt
fidivs
sub
popa
fnsave
push
lock
lret
fstpt
fstps
mov
sub
lret
jo
pop
mov
enter
push
dec
shlb
rol
xchg
mov
rol
sbb
loopne
xchg
bound
cli
stos
das
mov
insb
cmpsl
inc
push
lcall
inc
sbb
xor
rol
jb
imul
jmp
fwait
push
repz
fisubrs
or
dec
ret
pop
lea
mov
ds
dec
jae
jae
push
push
je
cmpsl
mov
cmp
insb
adc
mov
sarl
decb
sbb
and
pop
mov
ret
sbb
cmpsl
cmp
jb
adc
sar
mov
cmp
xchg
dec
rorb
mov
test
stos
cmp
xchg
outsb
shlb
and
mov
leave
mov
fcmovb
xor
jg
movsl
inc
xchg
jbe
adc
mov
jg
sbb
decb
pop
hlt
pushf
pop
les
fistpll
jbe
popf
cld
in
xor
es
loopne
sub
mov
xlat
clc
pop
subb
push
je
into
adc
and
push
clc
dec
sub
adc
sbb
sahf
mov
fildl
jnp
mov
fmuls
sub
mov
daa
cmp
inc
lds
int3
data16
xchg
mov
push
sbb
rcl
pop
add
pop
in
mov
sbb
lods
push
ficomps
cli
test
mov
pop
mov
rolb
and
and
xchg
inc
dec
sub
xchg
inc
xchg
icebp
xchg
mov
push
outsl
jmp
push
sub
repz
add
test
daa
xchg
mov
incl
mov
repz
scas
iret
divl
add
fs
fcoms
jmp
and
icebp
sbb
pop
jo
adc
adc
xchg
sub
mov
cmp
add
pushf
sbbb
push
cvtps2pd
mov
or
mov
repnz
push
xor
mov
out
jns
adc
mov
nop
xchg
lock
ret
xchg
and
xchg
enter
push
sar
adc
arpl
xor
mov
ror
sub
loopne
imul
push
mov
xor
dec
stc
and
fwait
loope
fwait
jns
xchg
orl
mov
adc
popa
jb
jp
inc
or
inc
in
divl
divl
andb
das
insl
hlt
sbb
fldenv
negb
jp
test
and
xchg
cmpsb
push
orl
push
mov
mov
notl
push
nop
dec
test
loope
inc
out
nop
cmp
sub
loope
fnsave
xor
cld
add
xchg
and
cld
or
fcomp
sbb
andb
imul
cld
cmp
mov
orl
rcrb
in
ds
cmp
pop
jle
in
not
xchg
mov
xchg
sbb
lea
inc
in
push
or
or
mov
add
movsb
mov
mov
outsb
mov
outsb
pusha
outsb
idivl
mov
inc
addr16
xchg
mov
xchg
fstpl
lods
push
in
mov
mov
test
fld
pushf
subl
pushf
sub
or
dec
adc
push
push
in
mov
imul
fists
lret
cmc
jmp
mov
sti
aaa
cld
pop
aam
jge
imul
lods
jno
in
mov
mov
mov
outsb
push
stc
inc
sbb
cs
sub
test
jae
pop
sarl
and
jmp
mov
jg
fnstcw
in
in
or
inc
or
je
fmulp
pop
mov
add
adc
das
stos
lods
test
xor
jle
je
arpl
cmc
out
sub
jno
or
push
dec
xlat
stos
xchg
jmp
int3
push
call
mov
sub
xchg
push
fists
mov
insb
das
xor
mov
push
xchg
push
fwait
cmp
pop
dec
xor
sbb
outsb
mov
dec
roll
push
push
inc
xchg
or
stos
sahf
lahf
add
icebp
cmp
jae
inc
xchg
cmp
pop
into
cltd
mov
insb
repnz
jg
iret
orb
mov
adc
add
dec
pop
es
enter
jo
addr16
out
xlat
xor
leave
lahf
mull
inc
or
call
pop
add
stos
xor
pusha
stos
xchg
pop
mov
adc
xchg
lcall
ljmp
ficoml
movsl
lcall
cmp
fs
cmp
jb
sahf
aam
filds
enter
in
out
lea
iret
push
roll
mov
aaa
and
inc
roll
add
pop
test
sti
jb
jb
lds
or
in
out
mov
aas
scas
xor
xlat
popa
adc
jmp
or
or
fwait
hlt
jno
aas
inc
int
add
xchg
pop
imul
jge
mov
mov
push
sti
jmp
sub
mul
sbb
mov
dec
push
jo
mov
daa
inc
dec
mov
lret
sti
daa
xchg
shr
xlat
or
push
xor
pop
call
call
mov
lds
xor
push
jno
sar
xor
mov
xlat
push
out
push
sub
sub
jae
mov
stc
xchg
gs
mov
mov
mov
inc
inc
jns
xchg
adc
jmp
mov
insb
out
xchg
lret
cltd
in
stc
fildl
aad
pop
shl
mov
movsl
jp
mov
xor
xchg
pop
cmpsb
in
dec
and
bound
or
movsb
jnp
int3
add
lret
jp
inc
aaa
xchg
push
xor
cwtl
jmp
push
mov
jne
sahf
adc
adc
inc
jmp
jne
mov
sti
ret
mov
aad
imull
loop
add
dec
repz
aas
outsl
mov
adc
pusha
mov
bound
addr16
push
push
movsb
adc
mov
add
xor
and
jmp
sub
test
xchg
in
loop
or
sub
into
pop
dec
dec
nop
cwtl
scas
imul
cmp
ljmp
adc
mov
cmpsb
pushf
push
or
sub
sbb
data16
or
jae
or
xor
cmp
call
in
xor
pusha
push
add
cli
ret
movsb
jnp
outsl
dec
icebp
xor
sbb
mov
scas
add
push
aad
data16
ret
inc
ss
sub
push
loopne
pop
js
ret
pop
and
gs
fists
pop
imul
ds
rcr
cld
popf
jecxz
lret
mov
and
ja
js
cmp
push
les
les
scas
push
imul
movsl
xrelease
test
and
notl
and
daa
ljmp
insb
pop
je
out
xchg
or
mov
test
out
cmpsb
xor
pop
lods
jbe
out
popa
sarl
imul
ds
fwait
mov
or
scas
push
xor
dec
stos
adc
adc
cmp
rorl
scas
pop
jmp
jae
cmpl
dec
pop
dec
mov
mov
cmpsb
lret
dec
addr16
rorl
pop
test
leave
push
in
loopne
push
shl
mov
cmc
loope
or
adcb
cmc
jge
xchg
xchg
repnz
inc
mov
jae
mov
jne
lea
ret
add
add
pop
mov
xchg
add
jns
dec
xchg
mov
loop
push
enter
mov
xor
ss
gs
xor
sub
ret
cs
fisttps
mov
movlps
fstps
cwtl
push
xor
out
fistl
negl
jne
lea
leave
sub
insl
push
test
out
in
sbb
xor
jmp
ljmp
outsb
cltd
xlat
jb
adc
addr16
inc
out
aas
jge
inc
jo
mov
and
sub
push
lods
push
sub
ret
fsubl
inc
cld
or
xor
aas
inc
pop
pop
mov
mov
popf
sub
and
decb
cmp
fsubrs
pop
add
call
xchg
into
in
je
sbb
adc
xchg
jbe
pop
xor
or
shl
add
imul
mov
xlat
repnz
rcr
cltd
cmp
cmpb
fcomp
leave
adc
adc
sub
jp
inc
push
push
fs
add
loop
sbb
testl
xchg
jg
lods
ror
fdivs
int3
fidivrl
xor
pop
gs
lods
gs
popa
lcall
fcoms
mov
jle
dec
ja
aam
mov
fcomi
mov
pop
test
aam
sbb
aam
imul
fcoml
xchg
mov
xchg
pop
lea
pop
into
test
xlat
int3
pop
test
lret
and
push
orl
jecxz
mov
fldl
fbld
insb
int3
and
inc
test
imul
sarb
push
push
stos
and
xor
mov
mov
adc
mov
adc
pop
mov
sub
test
shll
mov
dec
add
jge
mov
loop
xchg
andb
je
ds
addl
inc
xchg
fstps
out
xchg
mov
ljmp
push
test
mov
mov
inc
cmpsb
fwait
pop
add
mov
mov
adc
scas
push
daa
les
daa
jne
popa
mov
pop
jae
xor
xor
pop
mov
sarl
mov
loope
pop
or
and
hlt
pextrw
pop
and
out
stc
inc
sub
pushf
jns
xchg
xor
xlat
sub
jg
jo
lcall
iret
xchg
sub
loop
and
mov
cwtl
fnstenv
jle
pushf
outsl
mov
cld
or
xor
xor
ret
out
mov
adc
pop
call
mov
cli
xor
cmp
test
mov
push
outsl
lods
push
mov
rcrl
negl
inc
dec
stc
or
or
mov
mov
mov
fiaddl
pop
fwait
sti
xchg
adc
xchg
addr16
jno
jno
fstp
int
or
push
mov
arpl
pop
outsb
add
push
sub
jno
nop
push
mov
in
in
xor
scas
adc
repz
mov
mov
push
daa
dec
orb
roll
inc
mov
jmp
je
mov
shll
adc
push
or
aad
dec
in
dec
pop
aas
call
pop
add
testb
aaa
xchg
fiadds
xor
mov
and
push
std
xor
mov
in
jne
ljmp
fdivs
sub
sbb
ss
fcomi
lods
daa
jns
insb
xchg
push
mov
jne
add
and
push
sbb
jo
sarl
xor
mov
sbbl
test
loop
jns
jecxz
pop
fs
xchg
out
xor
fwait
mov
xor
pop
inc
mov
fimull
push
mov
inc
push
loopne
gs
dec
orl
out
les
cs
mov
dec
cmc
hlt
and
mov
cmpsl
mulb
outsb
push
test
iret
je
hlt
fsubl
shl
push
loop
dec
stos
cmp
pushf
mov
xlat
adc
push
or
jecxz
or
fwait
add
mov
mov
xchg
mov
mov
incl
jne
fwait
pop
sbb
stc
xor
les
xchg
pusha
xor
ljmp
xor
inc
lods
test
add
mov
ljmp
stos
mov
fidivrs
aaa
xchg
push
lods
leave
push
mov
inc
xchg
add
xchg
pop
int
stos
sar
or
jp
pop
loope
mov
outsl
das
mov
and
add
arpl
in
daa
push
stos
cmp
in
add
lods
idivb
cmp
xchg
jecxz
xlat
out
mov
stos
sub
fdivr
inc
mov
pop
pop
int3
jp
and
rcll
mov
into
in
inc
test
sbbl
bound
or
push
add
xor
pushf
sbb
jle
cld
push
in
fsub
fs
int3
cld
insb
mov
shr
aaa
xchg
stos
imul
iret
lret
dec
in
pop
jle
sbb
inc
movb
mov
lea
mov
aad
cli
out
out
cli
adc
aas
push
fs
mov
inc
xor
xchg
add
mov
das
lcall
scas
ret
arpl
adc
or
out
dec
inc
out
mov
sub
je
jb
xor
sub
push
cld
ljmp
lds
push
fdivs
gs
jg
lock
mov
adc
sbb
es
jae
xchg
mov
jmp
outsl
mov
scas
ret
jle
sbb
iret
pop
fstps
outsb
jecxz
pop
dec
pop
mov
pop
xchg
mov
mov
test
xor
pop
mov
call
cs
clc
aas
or
xchg
in
jne
pop
movsb
movsl
mov
jecxz
mov
mov
sarb
sub
shl
mov
mov
mov
ja
push
fs
std
inc
sub
mov
mov
jne
pop
push
xchg
xor
fdiv
popf
in
push
jae
pop
out
mov
ficoml
push
mov
jle
sub
dec
rdtsc
std
xor
enter
cmp
jnp
mov
mov
stos
clc
mov
adcb
std
int
mov
sarl
loope
pop
add
out
pop
test
push
repnz
mov
out
inc
in
clc
mov
cmp
pop
rcl
jg
dec
inc
mov
aas
or
sbb
adc
icebp
pop
leave
jno
xchg
or
adc
aam
test
push
mov
sub
aas
clc
push
pusha
jbe
jnp
stos
pop
push
jg
push
mov
mov
push
flds
scas
dec
or
or
or
add
jmp
mov
gs
sti
push
push
hlt
mov
cmp
mov
imul
gs
js
pusha
ret
ffreep
test
or
mov
xchg
jmp
push
inc
mov
pop
addr16
mov
outsb
xor
adc
mov
es
idivb
roll
mov
lret
and
ja
xchg
xchg
adc
pop
mov
dec
inc
mov
in
into
sbb
decl
jg
adc
loopne
dec
aas
xchg
xchg
mov
jecxz
xchg
xchg
movsl
sub
push
inc
fst
mov
cmp
adc
jne
cld
cmp
inc
lods
xchg
scas
lods
fcmovb
sbb
xchg
xchg
lcall
jno
aad
inc
and
cmp
mov
pop
lret
add
push
push
les
roll
cmpsl
cmp
xchg
pushf
addr16
loop
lret
fcoml
mov
xchg
leave
mov
inc
test
xchg
jg
mov
xchg
adc
imul
mov
push
clc
test
cli
addl
out
hlt
mov
pop
mov
mov
mov
sub
and
aam
jecxz
cmp
adc
stos
lcall
xor
cmp
adc
aaa
pusha
mov
cmp
js
jmp
mov
imul
sbb
sarl
andb
mov
jg
xlat
cmp
out
lret
cs
leave
push
dec
dec
fwait
int
aam
test
mov
or
ret
dec
mov
loopne
test
jg
pop
testb
jle
stos
inc
test
mov
cmp
lods
mov
and
push
rolb
divb
sbb
sub
mov
rclb
fistl
mov
xor
pop
fldcw
jmp
inc
jle
pop
push
inc
push
lods
push
arpl
pop
pop
cmp
test
xor
adc
pop
mov
inc
pop
es
mov
sbb
and
jecxz
or
in
and
out
cmp
push
into
jecxz
imul
pushf
sub
daa
sub
xchg
daa
cmp
ljmp
xor
pop
mov
xchg
or
mov
push
enter
lea
lahf
push
testb
sahf
mov
test
pop
jnp
js
fimull
gs
aad
push
ret
dec
daa
add
push
arpl
xor
scas
push
orl
rcr
mov
sarl
imul
push
cli
pop
and
ficoms
negl
xor
fisubrs
cs
push
cmpb
push
std
push
mov
inc
popf
sbb
dec
mov
sbb
orl
lea
add
icebp
dec
add
lods
imul
fistpll
fsubs
movsb
push
jp
mov
in
jno
jbe
es
mov
lret
dec
mov
imul
sub
push
xlat
loopne
inc
fisttps
ret
xchg
aaa
pop
sub
pop
mov
loopne
and
orl
popf
xor
sub
jg
adc
cltd
sub
bound
mov
hlt
aam
adc
cmp
mov
add
jmp
imul
cmp
sub
xchg
jae
stos
add
mov
clc
stos
stos
loop
xchg
pop
adc
mov
push
or
pop
sbb
cmp
mov
cwtl
jp
movsb
and
aad
jg
movsb
icebp
push
push
cltd
jns
sub
pop
pop
push
cs
sub
push
cmp
jae
rcrl
ss
cmp
cmp
lcall
mov
andl
jb
or
xor
rorb
xchg
mov
add
jno
inc
mov
inc
std
enter
sub
jge
pop
pop
xchg
cmp
push
add
jo
scas
faddl
pop
mov
jmp
lock
sub
jecxz
into
cmp
lods
arpl
sbb
mov
and
insb
and
mov
ror
scas
mov
icebp
cmc
add
outsl
adc
push
adc
cld
adc
jmp
dec
cltd
repnz
rolb
and
mov
mov
push
push
cli
inc
or
pop
fdivrp
and
xchg
cmpsl
sub
ret
das
mov
jno
lods
sahf
inc
js
mov
orl
pop
inc
nop
or
adc
pop
je
dec
arpl
xor
sbb
pop
mov
fcmovbe
add
mov
pop
add
mov
mov
andb
mov
jno
addr16
shlb
or
repnz
sbb
rcrb
dec
mov
jb
add
and
jb
xchg
sti
inc
lods
clc
lds
dec
jbe
mov
xor
xchg
mov
xor
pop
cmc
adc
xchg
dec
cmpsb
nop
lret
push
aad
cmp
and
push
mov
lahf
movsb
pop
push
mov
std
sbb
pop
cmp
sbbl
and
inc
ds
aam
mov
inc
jbe
add
add
mov
jbe
loopne
xchg
add
adc
pop
sti
adcb
sbb
pop
rcll
sbb
bound
adc
ret
ret
push
dec
xchg
out
sbb
jbe
push
movsl
daa
pop
inc
adc
cmp
pop
dec
mov
push
mov
jmp
or
mov
into
sbb
lahf
or
into
mov
jl
ficoml
xlat
shll
xacquire
cmp
inc
ljmp
popf
or
jo
mov
mov
add
adc
iret
push
inc
movb
in
jp
popa
adc
push
stc
sbb
fisubs
hlt
inc
daa
mov
lock
or
mov
jp
dec
imul
scas
test
std
push
jb
mov
mov
aas
subb
jne
les
outsb
mov
fsubl
pop
jbe
cld
fiaddl
loop
xchg
loop
mov
add
sahf
inc
add
stos
jle
fldl
loope
nop
shlb
push
sub
icebp
stc
mov
out
sub
arpl
sbb
adc
repnz
ss
repnz
inc
test
cli
ss
push
sub
sub
jp
rorb
arpl
inc
aaa
cld
jns
jmp
cmp
fs
mov
cltd
push
sahf
mov
xor
lret
jo
cmp
in
and
mov
movlps
push
adc
push
sti
push
loop
dec
sbb
xchg
pop
aas
mov
mov
xor
sub
stos
or
pop
pop
call
cmp
in
and
mov
mov
shll
sub
decb
dec
or
jae
mov
ja
fnsave
fiadds
jne
mov
xchg
jg
jae
cltd
jns
adc
aaa
adcb
mov
ret
mov
adc
repz
mov
aas
xor
adc
stc
mov
movsl
jno
add
or
daa
sub
xchg
dec
mov
lods
jbe
ljmp
ret
mov
push
jno
jmp
jbe
mov
mov
outsl
adc
testb
lock
jge
sbb
mov
pop
push
std
adc
das
dec
test
dec
es
popa
mov
sbb
mov
outsl
loop
pop
lret
inc
mov
push
insb
pop
enter
push
in
pop
iret
je
sarb
pop
inc
add
mov
outsl
xchg
mov
mov
loop
adc
je
insl
inc
icebp
inc
adc
jne
and
popl
or
inc
sub
and
pop
inc
aaa
pusha
mov
idivl
xchg
sub
test
xor
push
dec
pushf
push
pop
int
pop
push
movsl
cmp
inc
in
not
inc
mov
mov
adc
lcall
rolb
and
or
fidivrs
jno
jecxz
sbb
sti
adc
ss
bound
leave
jae
rorl
test
mov
and
push
mov
je
shlb
sub
mov
or
mov
lock
test
push
lahf
mov
pop
add
rol
rcll
pop
pop
loopne
or
mov
repnz
mov
xchg
and
mov
adc
fstl
mov
addr16
outsb
push
popf
outsb
mov
jecxz
les
std
imul
movsl
sbb
mov
outsb
mov
mov
decb
sahf
les
dec
cmpl
fsts
mov
add
loop
out
add
jne
cmp
negl
push
pop
push
cmp
out
adc
js
xchg
mov
or
cmpsb
sbb
adc
xchg
inc
test
mov
and
and
cltd
lret
ljmp
sub
shl
mov
inc
mov
push
stc
add
add
xchg
inc
test
test
xchg
lock
lahf
push
xchg
inc
add
rclb
ficoml
jmp
rolb
mov
rol
jno
in
loopne
push
rcll
ja
shrb
xchg
push
cmp
movsl
loope
mov
xchg
ret
push
cmp
daa
push
cmp
pop
xchg
or
xor
mov
shlb
and
or
inc
and
je
mov
scas
inc
aas
imul
push
adc
inc
dec
fistl
rorl
mov
add
mov
mov
icebp
push
or
sub
push
lret
mov
sbb
jbe
insl
inc
aam
inc
or
out
fwait
xchg
ficoml
push
popa
mov
adc
mov
adc
ret
adc
fst
mov
push
inc
imul
sahf
mov
in
out
jns
mov
shlb
cmp
sub
jge
mov
jns
xchg
dec
mov
mov
mov
pop
loop
dec
mov
in
movsl
push
push
lahf
dec
inc
ljmp
adcb
push
or
inc
out
or
aas
shl
sbb
lods
mov
js
pop
mov
xor
clc
sarb
sti
cli
rolb
adc
cs
sbb
gs
cld
xor
mov
dec
ss
out
mov
push
push
or
push
xor
jb
push
pop
push
decl
jbe
adc
sbb
push
xchg
or
out
int
cmpsl
push
insb
gs
lds
or
dec
sbb
pop
scas
cmp
jp
mov
add
pop
aad
out
int3
mov
fistl
dec
imul
fsubl
rolb
lods
aas
pusha
jns
sub
stos
mov
outsl
faddp
psllq
pop
lahf
add
mov
cwtl
ja
cs
cmp
dec
cwtl
in
test
jmp
fidivs
shl
aam
mov
inc
sub
xchg
imul
inc
sub
dec
sub
nop
or
arpl
arpl
out
lock
or
cmpsb
in
push
sub
mov
sub
push
lret
or
dec
mov
es
dec
aaa
std
cmc
xchg
subl
xchg
xchg
xor
and
rorb
es
addr16
arpl
xchg
insl
add
test
movl
shll
cmpsb
imul
mov
adc
out
cwtl
mov
mov
mov
mov
jnp
ss
sub
push
pop
and
cmp
repz
dec
insl
jmp
add
xchg
mov
mov
adc
push
int
iret
cmpsl
dec
mov
lock
loopne
or
push
arpl
adc
pop
push
mov
or
jbe
inc
add
sbb
push
xchg
adc
or
dec
mov
mov
rolb
mov
sub
xchg
mov
lret
xchg
out
adc
out
stos
outsl
sarl
popf
mov
xchg
adc
mov
cmpsb
dec
stc
cli
dec
dec
sahf
cmp
jg
mov
pop
pop
sub
out
jo
xchg
sbb
iret
or
adc
bound
mov
mov
enter
mov
test
aas
jp
arpl
add
aad
dec
mov
mov
repz
clc
sbb
fdivl
in
mov
sbb
xchg
rclb
adc
push
adc
std
pop
mov
in
test
lods
insl
ficompl
push
mov
add
jbe
aam
mov
rclb
dec
xchg
movsl
inc
cli
in
push
ljmp
pusha
sub
jp
loop
insl
ss
in
inc
mov
cwtl
dec
jne
xchg
repz
roll
cs
fwait
push
hlt
inc
clc
test
repz
push
push
or
fiaddl
jmp
push
mov
iret
lods
das
aaa
in
aam
imul
aad
mov
xchg
loop
cmc
sub
add
push
cmp
das
mov
pop
mov
gs
jno
add
cmpb
lret
mov
lods
add
arpl
mov
mov
inc
push
sbb
inc
das
jno
mov
cmpsb
mov
outsb
sub
bound
sbbb
xchg
cmp
ret
cs
push
scas
call
inc
std
mov
mov
sti
and
inc
or
int3
mov
dec
mov
shll
mov
in
xorb
sti
ja
into
sti
jno
gs
and
mov
xchg
bnd
xor
mov
in
shll
ret
jecxz
outsb
push
sbb
mov
ja
popf
add
mov
jnp
mov
sub
or
test
sbb
mov
sbb
dec
int3
popf
add
mov
sub
popf
xchg
push
lret
jae
sbb
js
xchg
fmuls
inc
xchg
jmp
jbe
outsb
std
xor
jbe
mov
into
xlat
mov
in
rcrb
mov
xchg
jmp
inc
mov
lret
js
dec
fcompl
pop
mov
int3
jle
fwait
sbbl
orb
outsb
or
shrb
test
pop
jae
mov
mov
add
sub
into
std
push
out
sub
jp
test
dec
mov
mov
xchg
das
mov
fstpt
std
std
shll
in
cld
out
and
clc
mov
aas
inc
jbe
add
and
xor
adc
inc
adc
cmp
sti
jle
dec
push
movsb
data16
sbb
lea
or
repz
push
sahf
or
idivl
and
fnstsw
fwait
push
xchg
stos
aaa
sbb
loop
hlt
inc
int
pop
test
cmp
rorb
push
cltd
dec
adc
xor
ja
loope
jp
or
inc
dec
pop
das
cmpsl
push
mov
cwtl
push
nop
mov
testb
js
aam
pop
mov
xchg
or
loopne
sbb
mov
call
loopne
pop
cmp
test
insw
ja
cltd
aam
jnp
lahf
lret
std
add
xor
rorb
jle
push
jnp
cmovne
pop
cs
sbb
cwtl
sbb
ss
mov
shlb
mov
fs
fwait
popa
fsubr
popf
sbb
fdivrl
xchg
rcl
inc
adc
dec
mov
pushf
xlat
lods
cmpsb
sahf
dec
pop
push
rcll
dec
push
gs
sahf
sbb
jmp
and
add
call
jecxz
inc
pop
js
repnz
pusha
fisubrs
cld
js
lret
ljmp
pusha
ret
shrb
mov
out
ret
aad
popf
ljmp
mov
lcall
clc
lahf
sar
inc
cld
fs
loopne
test
leave
in
xchg
stos
jae
cltd
dec
adc
das
jnp
cli
fiadds
jl
ljmp
inc
orl
xchg
mov
mov
sbb
mov
or
rolb
clc
or
cmp
insl
or
outsb
movsb
sbb
idivl
cmp
ss
gs
loope
ljmp
and
mov
lea
mov
mov
sbb
pop
ja
jae
xchg
ret
push
je
xchg
xchg
pop
imul
pop
nop
daa
loop
push
lods
xlat
lcall
shrb
or
aam
xor
jecxz
sub
imull
in
jnp
xor
or
or
jns
inc
je
xor
sbb
jno
shrl
shll
jbe
adc
clc
jo
into
push
mov
push
sub
cmp
xchg
push
inc
jb
test
cwtl
mov
les
pop
je
lods
inc
sub
xorl
movsl
movsl
mov
loopne
rcl
mov
mov
aaa
je
movsl
dec
sarl
cmp
daa
loope
sub
mov
cmpsb
inc
and
int3
pop
and
roll
push
dec
push
mov
dec
gs
in
pusha
pop
xlat
rcll
add
mov
inc
pop
sbb
and
in
into
movb
and
fs
shl
insb
inc
adcb
lock
fucom
cmp
lret
lock
jl
lahf
dec
stos
mov
jae
xchg
cmp
leave
adc
ja
cltd
mov
mov
or
dec
dec
cmp
push
mov
push
int3
dec
inc
mov
test
dec
xor
pop
mov
jmp
push
add
outsb
cld
mov
adc
movsb
rcl
push
fwait
inc
jnp
jnp
enter
or
mov
lcall
out
cmp
push
pop
lahf
inc
test
pop
mov
nop
jbe
movsl
pop
adcb
data16
mov
or
ss
leave
test
jb
movsl
in
aas
test
cmp
pushf
xchg
add
jmp
push
subb
clc
or
adc
fwait
sbb
shr
or
test
cmpsl
jp
push
xchg
lods
shlb
mov
fcmove
btc
das
das
mov
or
das
ds
pop
testb
lods
jg
xchg
out
or
mov
push
aad
addr16
dec
sub
out
adc
xor
mov
dec
leave
push
cmp
jl
roll
push
cs
rol
cmp
in
scas
decb
sti
enter
mov
jp
inc
iret
aaa
pop
dec
jns
push
clc
mov
add
enter
push
adc
mov
pop
outsb
sbb
fdivrl
outsl
mov
xlat
fwait
sub
jge
or
dec
push
mov
cli
insl
out
inc
mov
adc
std
xchg
dec
sar
xlat
das
roll
fidivl
mov
insb
jo
adc
jg
enter
dec
ret
mov
push
insl
inc
inc
mov
push
mov
pusha
inc
xchg
mov
xchg
mov
jecxz
dec
insl
xor
cmp
dec
mov
cmp
push
pminsw
flds
ljmp
push
orl
xchg
mov
jecxz
push
add
fistl
popf
int3
fcoml
push
sub
stos
mov
sarl
sub
push
mov
cmp
sub
xchg
inc
sub
sub
loopne
jl
sbb
int
xchg
ret
sub
dec
jno
insl
pop
ja
daa
sahf
cmc
mov
call
lds
popf
mov
mov
pop
and
or
mov
aam
inc
lock
std
mov
movsl
cmc
or
pop
es
and
nop
stos
out
cmp
xchg
mov
xchg
dec
xor
mov
jmp
push
cmp
insb
push
les
mov
mov
sub
test
lock
dec
adc
xor
sub
xchg
push
adc
cld
mov
repnz
fldt
cmp
inc
mov
add
lea
xor
sub
xlat
out
pop
mov
xchg
push
pop
scas
sbb
or
and
inc
xor
push
pop
int3
cmc
daa
sbb
hlt
fsubrl
inc
movsl
sbb
sbb
push
fiaddl
movsb
jb
jge
sbb
inc
xlat
test
loope
push
xor
jle
ss
and
pop
cltd
mov
ror
rep
or
stos
outsb
orb
fistl
pop
int3
in
pop
and
shll
sub
add
jb
pop
insb
pop
jb
in
mov
cmp
sbb
rorb
xor
into
and
fsubp
ja
adc
gs
inc
pop
out
neg
mov
in
jae
fldt
test
mov
push
push
mov
cltd
pop
mov
mov
inc
mov
xchg
imul
int3
int
int3
mov
sub
cmp
arpl
xlat
adc
addb
mov
loope
add
loopne
xor
adc
sbb
inc
fistpll
jmp
sub
jno
ds
push
mov
pop
pop
pop
shrb
adc
push
icebp
push
sbbb
mov
xchg
mov
sahf
andb
std
jnp
fs
pop
push
and
stos
cmp
sub
xor
sahf
mov
ljmp
mov
inc
hlt
sbb
cmp
xor
or
or
insl
imul
add
jecxz
cmp
into
out
sahf
xchg
adc
loop
call
adc
notl
cmpsl
ret
mov
inc
dec
and
pop
sub
ss
xor
inc
cs
cltd
bound
and
inc
orl
imul
ficomps
xchg
mov
in
and
fidivrs
xchg
or
mov
cs
jno
popf
jnp
dec
pushf
sub
inc
sub
mov
cmp
in
and
add
push
xchg
push
pop
repz
cltd
jo
into
fwait
outsb
and
call
cltd
adc
notb
inc
test
cli
shl
test
sbb
mov
fisubs
gs
mov
imul
test
sub
mov
push
shrl
inc
imull
lret
stos
xchg
aaa
add
push
mov
mov
lret
mov
ss
mov
shlb
mov
fidivrs
dec
mov
dec
imul
push
sub
xor
and
pop
mov
mov
xor
ja
cltd
daa
jl
out
mov
sti
dec
insb
and
mov
jg
cmp
dec
test
xchg
aad
push
loop
inc
inc
rorb
push
scas
loop
add
pop
cmp
daa
sub
cmp
or
ljmp
sbb
or
lahf
dec
movsl
mov
popa
sub
mov
sbb
jnp
int
or
mov
clc
mov
hlt
mov
mov
aam
mov
xchg
data16
jle
negb
inc
push
pop
add
dec
pop
jno,pn
sbb
add
pusha
sub
inc
cld
mov
cli
mov
cmp
movsb
clc
add
or
popf
out
jp
jmp
xor
pop
pop
cmp
pop
insb
mov
mov
scas
jae
ficompl
cmp
out
jmp
dec
pusha
out
sahf
mov
mov
inc
xor
pop
out
pop
xor
in
xor
sahf
fnstcw
dec
shll
mov
fsubrl
popf
lahf
dec
inc
mov
out
in
jle
dec
fiaddl
in
adcb
cmp
mov
cltd
jb
and
lods
clc
dec
xchg
jbe
mov
repnz
pop
push
push
outsb
ret
sbb
xchg
pushf
out
dec
mov
mov
in
jle
mov
mull
shlb
fcompl
sub
sbb
fnstsw
mov
mov
enter
and
mov
jne
imul
iret
add
jl
inc
loop
xor
xor
out
pop
movsl
or
loopne
addl
xor
adc
mov
jp
xchg
scas
push
test
pop
orb
jae
mov
mov
push
xor
aas
push
loopne
cmpsb
dec
push
scas
dec
ficomps
xor
add
add
sub
xchg
std
jnp
sub
cwtl
lret
inc
ds
inc
pop
pop
sbb
pop
xchg
adc
rcr
pop
mov
lods
sbb
popl
cs
ficoml
hlt
adc
ret
cmpsb
mov
sahf
cwtl
xchg
jno
fiaddl
imul
or
movbe
pop
mov
stos
lret
xchg
rcr
aas
stos
clc
add
fdivs
dec
dec
push
pusha
cmp
xchg
add
dec
out
andb
lds
and
pop
push
in
scas
dec
adc
aaa
pop
xchg
cmp
mov
mov
adc
stos
push
xchg
dec
rorl
ja
in
and
shlb
call
jo
jl
mov
push
idiv
cs
imul
stc
enter
flds
out
or
in
dec
push
push
out
ret
mov
jecxz
cmp
shll
xor
outsb
pop
jecxz
pop
xchg
dec
mov
movsb
loope
popa
adc
std
mov
xchg
jno
add
adc
aas
in
lods
push
pop
mov
jmp
or
test
push
jmp
pop
mov
or
shl
cs
push
push
into
xor
jnp
mov
addr16
out
pop
push
ljmp
add
jb
push
into
das
call
out
mov
cmp
adcl
xor
xchg
fwait
or
loop
gs
cmp
pop
xor
dec
pushf
out
mov
cmp
inc
sahf
inc
cmp
pop
ljmp
mov
mov
lods
adc
repnz
jb
xor
je
push
adcl
push
movsl
push
loop
and
and
sub
jle
push
pop
lock
mov
sub
pusha
sbb
loop
add
pop
and
sub
or
ss
jo
repnz
sub
jae
jo
pop
in
xor
enter
jge
mov
movsl
push
mov
movsb
xchg
pop
mov
in
out
les
int
push
sahf
mov
mov
cmc
cmp
jge
popa
loop
idivl
dec
xchg
testl
cmp
mov
aaa
lcall
loope
xor
add
aam
push
cmp
in
xchg
stos
insl
lret
clc
aas
imull
cmpsl
dec
cld
ret
sahf
adc
imul
std
inc
cmp
mov
psubsw
mov
add
ljmp
in
sub
sahf
sbb
sbb
xchg
jmp
jb
mov
pop
add
inc
pusha
mov
xchg
lds
stos
and
dec
leave
pop
ret
mov
xchg
adc
arpl
lods
subl
sub
cli
aam
orb
fidivl
ss
rolb
sbb
cmp
loopne
test
inc
nop
int3
xchg
mov
pop
push
jmp
fs
adc
scas
lock
leavew
ret
push
fnsave
and
out
xor
inc
push
cmc
scas
xchg
adc
shlb
push
daa
sbb
pop
push
sub
js
lods
inc
cmp
cld
and
cmp
jbe
cmp
sub
push
scas
stc
dec
mov
push
rcl
pop
movsl
sbb
or
imul
rclb
or
mov
jb
ficompl
outsl
mov
cmp
push
ret
fwait
push
dec
imul
cmp
jl
mov
add
cmpb
jne
add
pop
cmpb
std
sub
in
adc
mov
sub
std
pop
ffree
mov
push
jo
pop
push
xchg
inc
mov
int3
pop
ja
or
test
lods
cs
aad
sbb
std
mov
mov
add
cmc
shl
fistl
mov
mov
jbe
jmp
push
sti
cmpsl
insb
xchg
sbb
or
dec
and
clc
cli
lods
lahf
xor
mov
inc
mov
mov
inc
push
outsl
in
mov
and
cld
in
adcl
sub
aaa
fstpl
or
enter
jecxz
ds
sub
fs
repz
pop
mov
xor
pushf
icebp
shlb
cmpb
sub
repz
pop
sahf
mov
adc
xor
mov
jne
xlat
loopne
outsl
inc
loop
pop
pop
adc
mov
adc
inc
xchg
into
fsubrp
inc
lcall
adc
fdivrl
push
inc
das
xchg
jns
lock
fidivl
sarb
sub
mov
fadd
mov
and
std
and
add
jbe
inc
mov
enter
xchg
dec
fnstenv
mov
outsb
pop
idivl
or
push
mov
rcll
rol
aad
xor
loopne
cmp
jbe
sbb
sub
mov
pop
pop
movsl
cmp
jg
cmp
cmp
lcall
sbb
loopne
scas
das
jecxz
cs
sub
lcall
rcl
adc
aad
aaa
inc
inc
stos
cmpsl
rcll
mov
mov
push
cld
fstpl
and
test
cmp
lods
out
pop
popf
jle
mov
rcrl
add
sub
mov
outsl
daa
loop
pop
fstps
fs
mov
out
adc
inc
out
push
fs
add
push
xchg
cmp
out
mov
insl
enter
cmc
rorl
or
fcoml
subb
std
and
lods
hlt
mov
dec
dec
pop
rcrb
push
nop
mov
ja
stos
mov
into
fidivrl
inc
sbb
fwait
and
cld
xchg
es
shlb
fwait
or
xchg
notb
sub
out
push
jmp
dec
add
jo
cwtl
lock
pushf
cmp
imul
cmpsl
pusha
xor
ds
jno
xchg
lods
inc
nop
push
pop
in
lret
jno
std
jb
jecxz
cli
pop
mov
sbb
mov
mov
jecxz
adc
xchg
fisubl
dec
testl
decl
adc
loop
mov
scas
mov
jp
cmc
insb
sti
jnp
pop
adc
out
jge
andl
push
scas
jecxz
mov
lahf
lods
fcmovbe
adcl
push
dec
dec
mov
fldenv
xchg
aas
int3
lcall
and
inc
cmp
and
sysret
adc
and
repnz
rorl
mov
das
inc
xchg
test
fcmovbe
jg
fldenv
mov
iret
sbb
arpl
lock
iret
xchg
lods
in
sbb
inc
pop
popf
movsb
call
fwait
pusha
ret
push
aam
fwait
pop
js
add
pop
sbb
fldcw
addr16
mov
adc
outsb
movsb
lods
popa
and
clc
loopne
add
mov
adc
nop
das
xchg
mov
or
mov
in
ljmp
lahf
sbb
out
call
mov
dec
add
lret
outsb
cmp
push
inc
outsb
addr16
jg
fisttpll
xorb
xor
dec
push
stos
test
adc
shll
lea
sub
lds
sub
enter
lds
shrd
rcr
mov
dec
mov
lock
repnz
mov
dec
mov
inc
push
mov
mov
dec
aas
fstl
or
mov
lret
sub
mull
lret
bound
sbb
push
xor
dec
pop
xor
xchg
cmp
cmpsl
stos
bound
fcomip
xchg
int3
neg
out
push
push
hlt
leave
mov
pop
lret
sub
pop
add
roll
dec
sarl
gs
shrl
cmpsl
mov
std
fmul
xorl
adc
leave
xor
test
xor
int3
jg
add
dec
inc
loope
out
dec
fadd
mov
sub
mov
ds
dec
imul
add
das
jae
clc
int
jp
sahf
in
in
sarb
cmpsl
cmp
lahf
rorl
ret
push
mov
popa
and
mov
mov
sarb
imul
arpl
mov
es
cld
ljmp
testl
and
icebp
xchg
dec
in
rorb
fcoml
addr16
xor
hlt
rcrb
cmpsb
sub
pop
fstpl
mov
push
push
repnz
incb
inc
mov
shlb
push
lods
adc
nop
aaa
mov
push
daa
test
cli
lahf
adc
fadds
push
sbb
dec
jno
adc
pop
gs
add
divl
pop
in
adc
ret
pushf
inc
hlt
sub
sub
outsl
inc
pop
cmp
push
aam
lcall
cmp
adc
mov
in
fistl
push
data16
inc
fwait
shl
pop
cmp
xchg
dec
push
mov
lcall
cmp
jp
xchg
ja
subl
xchg
add
out
cs
ja
add
jecxz
jmp
push
aad
divb
jp
lds
add
movsb
movsl
xchg
inc
sbb
and
mov
sbb
ret
cld
cmp
jnp
pushf
sbb
xor
cmp
sbb
push
data16
or
lods
cmpsb
cmpb
jge
and
sub
inc
sub
loop
fcmove
pop
insb
mov
test
xchg
cmpsb
out
adc
repnz
hlt
and
frstpm(287
mov
aaa
dec
ret
lcall
dec
xor
into
mov
sti
cltd
push
pop
mov
sbb
fs
push
sub
inc
imul
lcall
nop
xchg
rcr
xor
bnd
leave
shrl
popf
pop
xor
cltd
rcll
scas
or
adc
pop
mov
sub
mov
sbb
mov
gs
xchg
mov
popf
ret
mov
or
popa
pop
inc
xchg
mov
dec
xchg
out
add
dec
mov
hlt
loop
jb
fmuls
adc
stos
push
lahf
loop
nop
inc
imul
lock
leave
jae
pushf
call
sarl
ficoml
push
gs
pop
cmp
xor
cmp
into
daa
add
and
jbe
fstl
imul
adc
sar
fwait
in
fsub
sbb
mov
cmc
mov
mov
adc
xor
in
sub
sbb
adc
mov
or
loopne
pop
rolb
ja
and
mov
pop
sbb
or
sub
mov
push
xchg
loopne
scas
fmuls
adc
pusha
push
mov
mov
dec
pop
idivl
sub
adc
inc
pusha
cmp
das
out
test
orl
idiv
in
sub
mov
int
fs
sbb
jb
les
loop
fsts
je
scas
jno
stc
xchg
adc
xor
cltd
shrb
xor
loope
lock
bound
data16
xlat
sbb
cmpsb
hlt
sub
mov
sub
or
push
fs
mov
int3
add
or
and
jge
inc
add
test
push
aad
cwtl
pop
dec
add
lods
push
or
adc
stos
or
xchg
xchg
jo
add
xchg
js
push
cmp
and
adc
jno
les
push
leave
mov
loop
imul
hlt
jns
imul
test
js
clc
xlat
movsl
cld
xchg
aas
ret
daa
pusha
notl
or
lods
pushf
subl
jp
push
sub
xchg
mov
pop
xor
mov
and
push
fistps
lcall
repnz
ficompl
sbb
mov
stos
out
xchg
loope
or
addr16
pushf
or
sub
shlb
xor
dec
jmp
aam
addr16
icebp
mov
mov
jmp
loopne
sbb
scas
jl
adc
dec
addb
call
andb
sbb
lcall
push
push
mov
test
mov
push
sub
sbb
loopne
insl
mov
lods
rol
push
stc
xchg
jmp
push
mov
fcoms
xor
scas
jns
cwtl
mov
loopne
fs
popf
pushf
bound
push
pop
das
xchg
adcb
lea
leave
lea
mov
je
dec
loopne
aaa
iret
sub
out
sbb
cld
flds
movsb
imul
sahf
roll
xlat
lods
or
test
scas
int3
test
aaa
jmp
pop
lock
ljmp
mov
popa
mov
fists
mov
pusha
sbb
scas
mov
jne
call
sbb
enter
inc
xchg
and
inc
xchg
mov
push
sub
lahf
jle
ds
dec
xchg
push
fisubrl
pop
and
lea
enter
notl
rorb
add
push
mov
pop
dec
lds
js
jne
lret
pop
dec
out
xchg
sbb
push
sub
xor
push
pop
pop
pusha
stos
aam
jns
fnstcw
aas
gs
inc
repnz
imul
std
daa
rolb
pop
aad
call
rolb
cld
shlb
fnstenv
sti
jae
addr16
mov
jae
pusha
testb
mov
add
lods
xchg
inc
inc
lcall
outsl
flds
sbb
push
dec
jae
jecxz,pt
pop
inc
loope
jo
sbb
scas
daa
outsb
nop
push
jle
iret
stos
pop
stc
lock
daa
ljmp
fnstenv
adc
les
fadds
mov
push
adc
mov
dec
mov
bnd
fdivrs
cmc
inc
jo
pop
cmp
mov
fistps
out
push
addr16
xor
mov
mov
pop
sahf
fs
fldenv
cltd
xchg
aad
add
test
lock
lret
std
cmpsl
lock
fisttpl
insl
cmp
sbb
push
fnstsw
xchg
icebp
or
push
aad
dec
xchg
clc
outsb
xor
xlat
xchg
ret
icebp
pop
sbb
adc
addr16
cmp
mulb
aad
xchg
inc
xchg
aaa
es
mov
shr
push
lock
jle
jle
add
fisubrl
adc
add
push
xor
in
sbb
sbb
mov
dec
jecxz
jns
outsl
cmp
cwtl
lods
and
in
cmp
or
mov
sbb
pop
jae
push
pop
dec
mov
mov
inc
cmpsl
int
in
loop
imul
loope
aas
dec
xchg
or
sbb
jp
sti
sbb
sbb
cmp
push
clc
roll
fisttps
adc
xchg
lret
and
mov
insl
outsb
scas
xorl
push
stos
cmp
push
cmp
push
mov
xor
push
sub
xor
inc
adc
jno
cmp
jae
ljmp
stos
push
pop
lds
jmp
inc
clc
cmpsl
pusha
popf
or
aad
sbb
mov
cmp
and
mov
out
aas
dec
mov
fdivr
add
push
out
or
movsb
jo
adc
jo
cmpb
pushf
mov
xchg
pop
lods
add
rol
mov
pop
fs
das
or
pop
xchg
mov
ret
dec
out
push
imul
mov
fcomp
cli
mov
jp
cli
ljmp
in
dec
lods
sub
jge
mov
jle
jle
call
xchg
ret
jge
mov
add
mov
inc
arpl
sbb
mov
sub
xchg
mov
mov
xor
ja
sbb
mov
mov
fcomip
les
pop
fldcw
iret
or
cmpsb
cmp
sbb
daa
sbb
mov
call
pop
jae
xor
data16
jl
loope
sbb
lret
cmp
pop
ljmp
jns
dec
jp
scas
dec
cltd
repnz
push
or
push
lods
cltd
xchg
shll
sbb
jno
xchg
lret
pop
mov
mov
lcall
lds
jbe
mov
icebp
mov
mov
fldenv
popf
push
lcall
ja
push
cmp
xor
xor
pop
sub
clc
cld
xchg
mov
and
aaa
movsl
dec
xchg
or
jecxz
cmp
cmp
mov
or
pop
push
clc
popf
sbb
sub
out
cwtl
and
stos
mov
leave
test
pop
sbb
mov
mov
sub
out
int3
xor
mov
in
ss
idivb
popf
test
pop
repz
pop
pop
jp
lcall
or
fisubl
add
sub
mov
sbb
inc
cmp
pusha
inc
enter
movsb
jo
es
loope
stos
pop
adc
fisttpl
jb
rcrb
aaa
pop
and
dec
loope
fnstsw
push
push
loop
mov
stc
movsl
xor
cmp
lods
mov
lahf
and
jge
loopne
lods
out
dec
gs
add
enter
pushf
movsl
enter
ss
pop
add
mov
aad
push
push
in
call
enter
jnp
loop
xchg
cli
rorb
sbb
sbb
xor
cmp
arpl
loope
and
mov
dec
jns
jo
fisttpll
dec
fucomp
sub
shl
std
push
cmpsb
mov
inc
push
insb
enter
lods
inc
adcl
mov
ds
mov
jp
jo
cwtl
xchg
dec
add
adcb
and
jb
mov
pushf
insb
out
and
add
into
push
mov
rorb
gs
aad
pop
pushf
cmp
push
xorl
mov
mov
loopne
in
ficomps
negl
aam
sar
sub
jne
pop
cmp
xchg
jl
pop
pop
and
inc
popa
dec
sub
iret
and
movsb
and
mov
push
or
pop
jl
outsb
shr
fsubs
xchg
cmpsl
jle
add
adc
push
sub
mov
std
dec
xor
stc
sbb
push
in
dec
xchg
add
push
orl
pop
outsb
repz
xor
add
dec
popa
in
xchg
adc
rolb
rol
in
mov
xchg
sbb
call
fisubl
lods
aaa
inc
das
stos
cmc
adc
push
adc
add
je
jns
inc
cmp
cltd
rcl
mulb
hlt
and
das
out
dec
lods
sbbl
mov
pop
pop
stc
mov
adc
push
inc
inc
sub
mov
jo
cmp
outsl
dec
pop
inc
xor
xchg
add
out
movsl
arpl
ja
fwait
inc
pop
movsl
movsl
ret
pop
xchg
pop
push
aad
out
inc
mov
js
mov
loop
pavgw
push
lds
add
cmp
jp
sti
jecxz
ret
outsb
in
mov
mov
mov
and
mov
jnp
int
xchg
mov
into
xor
push
lret
scas
push
mov
cld
ficomps
into
aaa
pop
mov
xchg
scas
loop
push
xor
sahf
js
cmpsl
cmp
insb
pop
js
cmp
or
cmc
lods
mov
add
push
jecxz
jl
xor
mov
ss
pop
or
inc
add
dec
add
mov
out
push
mov
push
sub
inc
and
jno
add
lahf
jmp
adc
and
roll
inc
and
jl
inc
daa
lret
ret
imul
fldt
out
lea
ljmp
lods
cmp
es
in
push
cld
sub
inc
xchg
adc
jmp
mov
pop
mov
je
xchg
mov
lock
test
add
xor
movsl
adc
rcrl
pop
mov
lock
push
sub
cld
jae
inc
into
cmp
subb
sbb
jge
adc
mov
das
sub
je
call
xorl
iret
jecxz
xor
xchg
bound
lret
adc
aad
sub
insb
dec
pusha
inc
adc
sahf
push
inc
lods
fcmove
in
test
test
jg
jb
xor
mov
test
pop
pushf
mov
dec
rorl
sbb
ret
push
or
or
or
mov
dec
daa
pop
and
scas
enter
pop
negl
int
pusha
addr16
lret
cmp
xchg
jb
or
xchg
out
xchg
shrb
push
adc
pop
cmp
mov
push
fisubrl
mov
call
jae
or
xor
imul
mov
mov
nop
shll
test
mov
pop
fidivs
dec
sbb
outsl
test
dec
add
jmp
scas
aas
jo
scas
or
cltd
xor
cli
imulb
inc
adc
addl
mov
jge
xchg
cmp
pop
cwtl
mov
call
jne
inc
hlt
into
mov
stos
inc
mov
pop
sub
mov
fmull
jne
pop
sbb
or
jbe
inc
mov
push
decb
adc
cmp
mov
push
pushf
es
jno
pusha
mov
pop
fiadds
lds
aam
or
xor
clc
daa
sub
mov
jae
dec
lahf
sbb
or
into
jae
repz
mov
pop
and
mov
out
les
jne
pushf
movsl
sub
pop
add
dec
pop
add
cmovne
jae
stos
outsb
popf
push
outsb
mov
hlt
insl
lahf
mov
or
or
icebp
in
cmpsb
and
or
loop
jbe
xchg
or
jecxz
fsub
jg
mov
and
push
sti
push
cwtl
pop
fwait
xlat
mov
cmpsb
data16
xchg
ud1
int3
mov
loopne
ds
popa
adc
ljmp
das
xor
adc
jge
fcoml
push
icebp
movsb
xchg
loope
stos
mov
push
cmpsl
push
sbb
dec
and
gs
dec
mov
andl
lahf
xor
push
inc
daa
sbb
inc
outsl
jle
neg
cmc
mov
les
mov
inc
jno
int3
pop
sbb
jg
bswap
rolb
mov
jae
mov
sbb
movsb
mov
mov
pop
mov
pop
lock
movsl
pop
xor
test
sub
inc
push
out
fs
movsb
push
enter
sbb
xchg
fcmovu
cwtl
dec
adc
test
stc
in
popf
mov
scas
mov
pusha
push
add
fistl
add
rol
jl
jg
ds
mov
fwait
inc
sbbl
and
mov
rcrl
pop
mull
jbe
xchg
jle
popa
cmc
mov
lahf
sti
xchg
pop
jmp
jbe
cld
mov
pop
mov
xor
shl
mov
jae
pop
jnp
mov
repnz
pop
arpl
enter
les
xor
adc
es
sbb
addr16
out
faddl
mov
mov
jo
jns
notl
aas
mov
mov
push
mov
xchg
rcr
xchg
push
aad
adc
mov
xchg
mov
sub
push
int
push
aam
test
loopne
into
outsb
and
insb
xchg
pop
movsl
out
pop
cmp
add
push
pop
pop
xchg
subl
sahf
lea
test
inc
jno
jbe
push
push
enter
out
pop
pusha
adc
dec
xor
dec
outsb
popa
mov
mov
cmp
sbb
xchg
mov
xchg
fs
cmpsl
jmp
lods
pop
push
std
sahf
add
ret
mov
jne
adc
int
nop
pop
jle
mov
xchg
into
lds
xor
inc
push
xlat
mov
int3
lret
xchg
or
mov
mov
mov
dec
out
shr
lock
iret
adcb
sbb
pop
les
mov
sub
cmp
jmp
loopne
scas
pop
push
pusha
adc
pop
and
inc
push
sub
mov
mov
inc
cmp
mov
sbb
arpl
test
aas
cpuid
mov
or
push
ljmp
mov
cli
xchg
stos
loope
scas
cmpsb
inc
adc
imul
dec
sbb
mov
mov
push
aad
push
sub
cmp
jbe
mov
jl
fstps
add
jl
pop
les
jo
stos
std
inc
ficomps
sbb
imul
xchg
add
jg
sahf
mov
mov
mov
movsb
mov
int
iret
bound
ds
out
rol
fiadds
in
mov
lods
int
xchg
xchg
push
es
adc
cmc
xor
decb
imul
std
xor
push
and
test
mov
shrb
mov
jp,pt
xchg
cs
cs
cltd
cmc
jmp
xchg
mov
add
shrb
pop
push
pop
sbb
mov
inc
cmp
xor
xor
mov
insb
aad
stc
pop
int3
imul
mov
fsub
lahf
jmp
imull
lods
fs
mov
dec
add
js
test
pop
xor
dec
outsl
stos
adc
ret
les
sub
xor
inc
dec
and
nop
or
push
pop
icebp
nop
sub
inc
stc
insb
ret
mov
das
jno
push
shll
inc
cmpb
ljmp
xchg
jge
add
ja
das
adc
fldt
and
or
dec
mov
jge
jle
sub
pop
movsl
xor
aaa
dec
aad
and
and
pop
and
mov
ja
xor
pop
into
jb
xchg
cli
ret
sub
dec
cmp
xor
pop
mov
clc
adc
push
push
xchg
lahf
call
pop
movsl
push
mov
mov
adc
add
sbb
fsub
jg
xchg
movsl
movsb
les
ljmp
push
mov
inc
jge
ret
pop
push
lods
sub
std
push
sub
clc
je
mov
aad
stc
mov
imul
inc
or
xor
out
es
sbb
adc
mov
push
out
fadd
xor
mov
pop
addr16
jb
ret
pop
add
jle
xbegin
lret
dec
mov
mov
loop
out
mov
push
lret
outsl
mov
mov
cmc
sbb
in
mov
ret
adc
dec
push
dec
push
or
jg
enter
fwait
jecxz
add
pop
nop
cmp
jg
dec
in
mov
jbe
into
add
call
jge
je
shll
icebp
ret
ds
addl
scas
fcoms
sbb
push
adc
adc
cmp
icebp
inc
xchg
fwait
push
pushf
imul
xchg
dec
add
fucomi
cmp
call
stos
inc
dec
fldcw
mov
pop
and
push
pop
scas
push
mov
fcoml
sahf
push
mov
mov
gs
les
adc
incb
lds
aam
adc
addb
lret
xor
pushf
test
out
lock
cld
movsl
pop
mov
xchg
daa
sbb
mov
push
gs
inc
inc
in
and
into
rcr
test
jmp
cmp
mov
lret
pop
pop
fnstenv
cmc
subl
jmp
xorb
push
jnp
mov
mov
int3
out
js
shll
add
adc
and
sub
xchg
push
iret
mov
pop
pop
and
xor
mov
or
jo
movsl
cmpsb
fwait
jge
mov
fwait
lret
jns
rorb
clc
sbb
mov
bound
ss
jo
rcll
cltd
jp
push
xor
aas
adc
adc
push
cmp
sub
mov
inc
adc
sti
stc
imul
ja
repnz
es
fs
inc
std
mov
mov
lods
loope
movl
out
adc
movsl
mov
das
in
inc
ret
fcomi
and
jns
mov
push
xor
wbinvd
mov
imul
jnp
dec
jnp
xorl
pop
dec
xor
xor
fimuls
imul
push
and
mov
call
aas
dec
cmp
inc
cmp
sub
and
add
and
pop
aam
push
outsb
lods
inc
fmul
ljmp
lock
push
out
jge
sub
dec
cmp
add
in
sbb
out
dec
sbb
adc
sub
and
push
stos
cmp
add
dec
aaa
sub
cmpsb
jp
outsl
mov
jmp
shr
xor
adc
and
jns
cli
mov
sbb
hlt
push
bound
jge
jae
dec
cld
aad
nop
negb
and
adc
cmpsb
adc
sub
adc
test
lahf
mov
inc
lahf
mov
pop
out
inc
cwtl
cmp
mov
push
jmp
push
sub
repz
clc
inc
mov
cmp
and
dec
cmp
adc
loop
lea
mov
xor
cltd
leave
or
rorb
sub
jg
nop
and
in
mov
dec
xchg
addb
fldcw
rcl
and
cwtl
jl
in
popf
inc
inc
out
int
inc
fs
or
es
subb
jp
rcr
push
in
aas
jmp
rcrb
dec
int3
enter
mov
xlat
add
aam
or
push
ljmp
pop
mov
lcall
xlat
gs
out
repz
pop
and
inc
aas
test
popf
inc
mov
fistpll
pop
insl
mov
jo
pop
daa
adc
cmp
adc
mov
cmp
repz
lcall
std
inc
pop
pop
ds
adc
les
mov
dec
in
outsb
in
aaa
jmp
sbb
mov
sub
test
inc
bound
outsb
push
dec
jge
sub
sub
jnp
xor
stc
xchg
pop
sub
inc
mov
sub
dec
rorl
mov
push
aas
mov
mov
imul
push
add
outsb
pop
and
jb
and
jmp
adcb
mov
adcb
dec
inc
and
pop
aam
les
aam
adc
push
scas
pop
sbb
and
dec
leave
mov
ja
xor
fbld
xchg
mov
sahf
ficoml
data16
popf
adc
mov
pop
orb
rclb
lcall
mov
sbb
pop
sbb
or
aas
xor
adc
lods
sub
mov
inc
outsb
mov
jl
enter
lea
rol
leave
dec
into
mov
adc
dec
in
cmp
pusha
jns
push
mov
mov
adc
divb
mov
loop
cmp
je
push
mov
and
not
mov
jb
mov
aaa
pop
rcll
lret
ljmp
fiaddl
out
loop
insl
dec
shll
imul
loope
cltd
insb
inc
jbe
xor
pop
mov
xchg
mov
ret
xchg
lods
stos
fucom
mov
iret
ficompl
sbb
inc
and
sbb
ret
pop
stos
jnp
mov
inc
xorb
jns
mov
add
les
jmp
pushf
imul
mov
mov
sbb
mov
test
data16
cld
push
out
lds
insl
fcompl
lea
push
and
mov
fadd
or
adc
mov
push
add
fwait
es
pop
dec
xor
xchg
aas
fisttpl
test
stc
xchg
jle
pop
rcrl
cmp
jne
and
aam
sbb
int
pop
push
adcl
mov
pop
jbe
mov
jno
push
pop
mov
hlt
pop
inc
mov
popl
repz
mov
pushf
sub
cmpsl
mov
mov
jl
ja
inc
cld
and
dec
fldt
cli
lret
addr16
mov
data16
push
addr16
jo
dec
or
push
xor
jp
aam
dec
dec
negl
jmp
mov
jae
mov
push
cmp
dec
and
pop
cld
dec
cwtl
push
inc
mov
or
mov
mov
popa
bound
insb
jmp
sbb
xor
and
stc
pop
lods
data16
inc
enter
sbb
pop
out
mov
shl
outsl
mov
arpl
fsts
rorb
xor
dec
lahf
sahf
ss
cmp
xor
stos
mov
es
movsw
xchg
dec
idivl
adc
lahf
sbb
dec
nop
dec
xor
pop
imul
test
or
add
insb
lahf
add
aaa
test
pop
push
mov
jmp
int
in
rorl
es
pop
test
pusha
inc
roll
push
lds
insb
mov
test
js
push
cltd
aam
arpl
lock
pushf
sbb
inc
fsubr
mov
test
mov
int
inc
stc
jbe
bound
imul
push
and
and
ret
test
es
xchg
jl
in
xorl
je
test
xchg
jmp
into
cmp
push
cmpl
jecxz
cmp
xor
in
pop
adc
inc
xchg
xchg
pop
loope
jnp
cltd
out
push
movsb
mov
repz
or
loope
lret
lock
out
xor
push
mov
inc
cmp
mov
sbb
in
mov
sub
into
jecxz
jp
mov
sbb
mov
sub
lods
in
cmc
add
mov
mov
xchg
push
adc
push
shrl
mov
loop
inc
dec
mov
xchg
mov
dec
aad
dec
mov
test
sbb
inc
push
mov
mov
sbb
push
aaa
and
adc
push
mov
mov
inc
sub
stos
pop
test
cmp
mov
push
mov
nop
pop
mov
insl
sub
nop
sub
andl
inc
jge
fst
fwait
ja
popa
orb
mov
add
fsubrl
sbb
jb
push
xor
dec
adc
and
xchg
repz
xor
dec
dec
adc
push
cld
icebp
dec
imul
iret
jae
fistpll
in
std
fcomps
jle
lock
jbe
xchg
push
mov
ret
jp
fsubrs
lret
out
xor
sbb
insl
sub
leave
sbb
aas
mov
mov
fldenv
jns
fidivs
adc
pop
cli
clc
rcrl
adc
lods
stos
out
out
mov
cwtl
pop
mov
scas
mov
add
xorb
inc
push
adc
xchg
sub
test
adc
sub
mov
clc
cmp
mov
jo
shrl
sbb
out
mov
jl
lret
inc
cmp
or
js
test
xchg
mov
sub
mov
ljmp
sub
iret
jb
or
hlt
js
test
leave
test
ljmp
mov
lods
les
cwtl
inc
outsl
scas
cmp
loope
cld
push
rcrl
or
push
fidivs
les
push
cmp
dec
xor
inc
dec
sbb
cmp
lods
dec
jb
cs
add
jl
sbb
enter
jp
cmp
es
hlt
mov
pop
mov
push
or
js
sbb
loope
pop
mov
fwait
jne
push
in
loope
add
sub
and
sub
jnp
jle
sub
loopne
mov
test
fs
jmp
pop
fld
push
sbb
mov
dec
cmpsl
mov
movsb
push
sbb
data16
jp
mov
add
inc
std
or
hlt
bound
out
mov
shrb
mov
cld
scas
push
inc
or
jne
stc
mov
rcl
fmull
aas
or
jae
jp
sub
arpl
adc
aaa
popf
pop
sub
pusha
or
in
lahf
pop
insl
jmp
sub
or
pop
fucomip
ds
sbb
push
adc
xchg
add
sti
cmc
fwait
inc
inc
sub
and
mov
nop
loope
push
adc
stc
ljmp
rcl
or
in
rcrl
cmpsb
push
jbe
mov
mov
pop
mov
mov
test
lods
sub
sub
lods
fstpt
mov
sti
mov
ret
push
jg
inc
pushf
arpl
push
ljmp
and
push
xchg
push
int3
fadds
aam
dec
and
subl
jge
mov
shll
and
mov
dec
faddp
jb
pop
dec
or
sbb
mov
lods
mov
push
test
je
mov
mov
push
jno
xor
push
std
loop
xlat
adc
test
imul
inc
and
jp
xchg
lahf
pop
or
mov
pushf
cmp
leave
mov
mov
fisubrl
into
leave
ffree
lret
and
push
push
sbb
loope
int
fwait
iretw
adc
adc
pop
mov
push
mov
or
clc
pop
loope
fsubl
pusha
xchg
cwtl
pop
cmp
imul
xchg
mov
pop
aam
movsb
dec
xchg
mov
mov
xchg
and
dec
xlat
pushf
push
stc
push
ds
xor
mov
inc
loop
mov
jo
les
pop
das
push
mov
inc
xor
jno
fcmovnu
inc
divl
stc
xor
jne
hlt
lret
jl
mov
pop
mov
int
inc
pushf
fs
sbb
outsl
addr16
push
idivl
popa
inc
dec
push
jne
dec
loopne
push
xor
pop
and
xor
cmpl
or
lods
sbb
fbld
bound
sub
mov
lea
in
adc
push
ftst
inc
sub
rclb
cs
aad
jno
std
sbb
fdivrs
movsb
mov
aam
jnp
pop
jbe
lock
xor
push
cmpsb
int3
jmp
push
xchg
mov
bnd
es
outsl
popa
inc
loope
inc
insl
mov
ljmp
lods
arpl
jmp
or
bnd
cmpl
stc
push
mov
hlt
shrb
sub
imul
and
pop
sti
jbe
push
dec
push
pushf
out
push
xchg
fcomps
dec
adc
rclb
inc
ss
pop
ret
aad
inc
mov
stos
out
repnz
movl
mov
cmpb
or
add
adc
lock
xchg
dec
loop
cmpsb
imul
and
mov
outsb
dec
lods
xchg
xor
mov
pop
add
inc
inc
pop
popa
adcb
test
outsb
pusha
adc
insl
cltd
sarl
andb
xchg
gs
jb
xchg
push
loopne
jae
xor
inc
mov
pop
adc
cwtl
inc
out
int
mov
adc
les
shrl
les
mov
in
int
ficompl
mov
into
fidivrs
insl
enter
pop
adc
and
xor
inc
scas
pop
lret
imul
mov
popa
sbb
xchg
lds
jp
pop
mov
xlat
movsb
insb
lcall
pusha
push
repnz
es
decb
imul
les
sbb
cmp
and
mov
pop
test
adcl
xchg
push
inc
mov
pop
add
push
dec
scas
adcb
and
mov
cmpsl
fwait
push
jle
pop
rol
fidivrs
shrl
push
add
add
push
je
pop
pop
stos
cli
ret
je
push
mov
inc
loop
or
mov
mov
mov
mov
popf
loop
dec
xor
pop
addb
shrd
aas
rolb
mov
mov
xchg
xor
mov
jg
mov
jb
in
repz
sti
or
nop
ret
ss
sbb
sbb
inc
and
sti
or
xchg
inc
jae
and
fwait
mov
push
nop
pop
fs
push
inc
insb
mov
cld
lods
inc
adc
test
test
lds
incl
add
sub
das
aam
lock
mov
dec
in
inc
xor
faddl
repz
jb
mov
push
adc
push
movsb
jg
sub
fwait
sub
sbb
sub
std
pusha
mov
mov
push
or
and
add
pop
add
iret
mov
inc
xor
mov
fimull
push
cmp
paddusw
adc
or
add
xchg
psrlq
arpl
adcb
mov
push
add
cmp
adc
add
add
inc
cmp
dec
jo
nop
mov
insl
add
or
mov
push
xor
int
mov
gs
leave
outsl
aas
add
in
or
push
mov
pop
int3
mov
xor
mov
sbb
dec
pop
aam
cli
or
jp
aad
lock
imul
aad
test
cmp
pushf
iret
cmp
jno
fwait
enter
lcall
aas
pusha
mov
push
sarl
mov
add
cld
out
jecxz
out
out
jo
push
sub
cli
add
pop
push
push
into
movsl
inc
xor
test
mov
mov
jecxz
adc
inc
and
add
and
test
lds
insl
mov
lods
jbe
push
pop
add
jp
test
cmp
adc
cmc
adc
xchg
movsl
add
popf
fs
scas
ja
je
imul
cmp
xchg
popa
sahf
scas
add
push
mov
es
lret
ss
push
dec
outsl
ljmp
mov
xchg
repz
add
es
repz
push
mov
inc
lcall
nop
loopne
scas
mov
andl
mov
mov
mov
addr16
cmp
data16
pusha
pop
icebp
mov
pushf
pushf
mov
jne
add
enter
loopne
sub
loope
lahf
xchg
dec
data16
pop
jecxz
add
mov
adc
mov
js
add
adc
and
mov
add
jg
mov
dec
es
or
and
sbb
push
lds
mov
mov
push
cmp
stos
fimull
adcl
mov
sub
cmpsl
test
and
loopne
mov
aaa
sbb
cwtl
cmpsl
fwait
ljmp
imul
add
lock
mov
mov
adc
lret
mov
push
jno
jno
xchg
xchg
bound
repz
xchg
sti
xor
sub
mov
aaa
data16
movsb
jg
pop
ret
mov
movsl
outsb
stc
orl
inc
imul
jmp
imul
fxch
and
push
mov
pop
lds
sub
push
and
mov
jecxz
loopne
pop
and
adc
insl
adc
dec
and
fisubrs
push
out
mov
insb
lods
cmpsl
mov
push
xchg
lock
cmp
jle
ljmp
cmpsb
insb
inc
cmp
xsavec
dec
inc
jne
shrl
data16
mov
icebp
ret
sub
les
dec
sbb
mov
movsb
add
inc
xchg
add
pushf
sbb
push
addb
psubsw
pop
imul
cld
gs
fcmovnb
adc
mov
nop
push
mov
addr16
mov
leave
dec
mov
rcl
mov
jns
mov
pop
sti
sahf
gs
loope
push
inc
add
lock
lret
xchg
push
mov
hlt
lods
inc
gs
pop
test
xchg
dec
dec
dec
cmp
or
pop
adc
shrb
sub
punpckhwd
stos
push
xchg
loop
std
mov
stos
notl
mov
sbb
jecxz
xchg
cmp
test
sti
sti
cwtl
pop
pop
add
dec
hlt
mov
mov
movsl
popa
shll
push
insl
jno
add
cwtl
xchg
jne
das
mov
sti
push
int3
cmpsb
movsl
lods
add
mov
sbb
fwait
aam
mov
scas
lds
sahf
sbbl
mov
cs
inc
test
dec
cwtl
jo
std
ss
mov
in
idivl
mov
push
adc
aaa
xor
mov
sub
xchg
fldcw
dec
push
divl
jae
jmp
mov
test
xchg
jg
pop
lret
mov
dec
mov
push
enter
inc
cmp
faddl
adcb
test
mov
sub
sub
iret
lock
push
xor
inc
jg
cmpsb
in
je
inc
test
add
int
popa
push
push
and
jmp
pop
ret
add
stos
mov
pop
mov
push
add
pushf
dec
cltd
cmp
cld
stos
xchg
push
jg
aas
sbb
lret
scas
std
mov
movsb
sbb
adc
outsl
pop
jbe
out
xor
dec
mov
in
add
lahf
outsl
dec
pop
js
shlb
imul
sahf
je
mov
mov
push
pop
sub
pop
or
cwtl
pusha
dec
pop
arpl
pop
imul
adc
addl
inc
push
pop
sbb
pop
movsb
inc
mov
inc
xchg
mov
rol
cmp
xor
or
push
pop
dec
mov
adc
lcall
cltd
pmaxub
aad
push
psubb
js
mov
mov
stos
sbbb
movsl
push
pop
or
mov
mov
xor
push
mov
xchg
cmp
addr16
push
loopne
and
ret
sub
and
sub
ja
shr
cmp
mov
or
arpl
jae
imul
jp,pn
lods
out
xchg
popf
inc
out
inc
daa
jle
mov
jo
mov
decb
dec
mov
mov
push
cmpsl
cmpsb
lea
ja
sub
sahf
or
je
xchg
popf
sub
add
out
test
pop
arpl
push
test
rcr
dec
aad
or
push
add
stos
dec
mov
mov
inc
sbb
jo
cmovp
fcompl
dec
nop
sub
leave
mov
or
push
mov
push
loop
dec
sub
sbb
xchg
jle
and
stc
aam
sarl
shlb
into
jo
pop
fisttpl
and
jb
out
sbb
mov
outsl
xor
jo
xchg
popa
mov
repz
pushf
sub
pop
cmpsl
mov
cmpsl
pop
jae
loop
bound
sahf
fdivs
add
mov
nop
adc
sbbl
ret
add
fsubr
sbb
sub
add
sbb
add
push
dec
movsb
cmc
cmp
or
push
hlt
and
data16
sub
cmp
cltd
sbb
ja
xor
imul
sub
xlat
int3
or
cs
test
ja
or
mov
mov
push
mov
fcompl
cld
sbb
stos
sub
adc
or
ljmp
insl
sbb
js
or
cmpsl
fdivrl
sarb
xchg
mov
cmp
sub
aam
pop
add
sub
ds
loop
jnp
insl
fcmove
push
ud2
je
addr16
mov
mov
scas
cmp
mov
push
inc
das
loop
push
and
cmp
in
sbbl
jg
dec
add
out
sti
std
xchg
fs
push
cmp
arpl
xor
or
push
pop
jg
addb
xchg
jne
cmp
ret
xor
or
mov
loop
js
ret
mov
rcrl
sahf
pop
pushf
loop
es
push
or
test
addr16
lret
sbb
das
imul
inc
sub
sbb
pop
dec
int
in
mov
pop
mov
cltd
dec
popa
sbb
jge
andb
xor
dec
test
sub
rcrl
repnz
push
in
xchg
sahf
or
sbb
daa
nop
pop
mov
sub
cs
sbb
push
mov
sub
sbb
push
jle
inc
cmp
out
test
jp
aaa
push
lock
and
mov
icebp
cmc
xor
xchg
pop
dec
rcrl
data16
sbb
and
mov
and
pop
mov
cld
pop
dec
ja
rorl
mov
leave
cltd
mov
sub
mov
leave
or
fmull
jge
gs
nop
mov
adc
dec
add
sti
popa
sub
cmc
xchg
es
mov
add
dec
xor
jecxz
decb
xchg
mov
xchg
ja
sub
divps
lea
sbb
lcall
fidivrs
lds
lahf
pop
lcall
ret
call
mov
pop
add
insb
imul
mov
mov
lret
sub
mov
leave
cwtl
xor
cmp
xor
sbb
push
rcll
pushf
jl
and
cmp
iret
sti
xor
imul
mov
mov
mov
dec
pop
sahf
gs
arpl
test
dec
movsl
jmp
and
jbe
jmp
lret
and
xchg
cwtl
adc
hlt
ss
mov
nop
xchg
or
lods
cmp
sub
loop
push
inc
popa
cltd
and
cmp
insb
xlat
pop
es
inc
pop
push
dec
enter
jle
sub
xor
sbb
fstl
mov
outsl
adc
cli
jnp
cmp
icebp
mov
sbb
xchg
or
cld
inc
loopne
or
xor
in
cmp
push
aam
pop
mov
decl
ficomps
sub
push
push
pop
sub
test
pop
cmp
cmc
lods
sub
xchg
daa
jbe
push
lcall
push
loop
lods
adc
adc
xchg
insb
mov
mov
dec
movl
xchg
add
leave
dec
push
xchg
inc
sbb
jns
scas
in
lret
pop
xchg
test
repz
stos
and
out
xorb
pop
cltd
push
jg
movsl
mov
fcompl
lods
push
inc
jle
jns
push
lds
mov
imul
movsl
mov
jp
mov
fistpl
lods
ja
push
push
xor
movsb
or
mov
shl
shll
xchg
shrl
pop
cltd
nop
mov
inc
cmp
pop
cmp
xchg
inc
int
pop
pop
shl
and
push
lock
mov
or
push
pushf
sub
lahf
ja
call
inc
hlt
gs
jbe
xor
xchg
mov
push
lret
xchg
mov
inc
into
mov
fstps
sub
adc
in
dec
dec
pop
outsl
adc
rcrb
mov
in
push
push
sbb
stc
in
add
mov
popa
jmp
icebp
jg
xchg
adc
xor
jp
ret
mov
xchg
pop
and
xchg
push
mov
or
xor
out
mulb
adc
and
hlt
xor
add
jae
push
inc
out
jne
xor
ds
xchg
aam
pop
lea
daa
sahf
sub
mov
jo
xchg
es
jecxz
inc
pushf
push
inc
xchg
cltd
mov
and
dec
fnstenv
mov
or
ljmp
test
sbb
or
je
mov
xlat
inc
mov
and
mov
hlt
jbe
cmp
cmp
push
mov
loope
mov
enter
mov
enter
cmp
lock
movsl
andb
int3
mov
je
mov
jbe
cs
cmp
cmp
out
icebp
daa
roll
mov
inc
jb
cltd
mov
mov
add
lock
loop
mov
inc
dec
sub
movb
sub
std
les
jecxz
or
andl
sahf
sbb
push
mov
inc
mov
mov
add
xorb
mov
lcall
xchg
in
push
pop
cmpl
push
insl
and
mov
pop
pop
fcmove
inc
mov
cmpl
xchg
mov
fmul
jns
mov
xchg
jbe
inc
std
add
test
rorl
dec
and
lcall
adc
sbb
stc
or
adc
popf
mov
ret
push
add
ljmp
lods
jge
pusha
jno
iret
mov
push
push
nop
inc
fsts
inc
jns
loopne
js
dec
mov
and
out
jmp
fucomp
leave
jnp
xor
push
mov
iret
loopne
cmp
addr16
pop
and
push
jle
pop
pop
xchg
xor
rolb
xor
pop
sub
rolb
adc
xor
popa
jo
loopne
mov
jno
in
lods
sbb
ljmp
cmc
in
pop
js
adc
test
fists
mov
sub
aam
out
out
mov
fnsave
and
lcall
sbb
mov
mov
pop
arpl
pop
test
adc
ljmp
jbe
mov
int
sub
jno
or
and
outsb
or
or
inc
and
ljmp
jae
fsubrs
mov
test
jle
adc
aam
push
mov
loopne
inc
mov
leave
fstps
sbb
leave
andb
sub
xchg
dec
decb
ja
das
insb
dec
sub
dec
scas
ja
xor
enter
xor
inc
hlt
sahf
shll
or
push
cmp
cmpsl
and
je
add
shrl
pop
and
sub
in
mov
imul
xor
outsl
aas
ss
in
dec
mul
pop
das
xor
dec
xchg
cmp
sub
mov
cmp
clc
outsb
sti
adc
mov
nop
xor
call
adc
lds
adc
test
int
into
fwait
out
xor
ja
sbb
add
or
mov
inc
clc
dec
in
rol
or
shrl
mov
push
ss
sub
push
fidivs
pusha
clc
pop
stc
push
scas
sbb
stos
js
xchg
adc
push
xor
cltd
out
mov
fimull
subb
in
jl
fistps
leave
stos
mov
mov
pushf
mov
shrl
dec
jmp
push
xlat
or
lds
push
jb
xchg
sub
mov
pop
push
jb
clc
or
lods
into
int3
mov
and
dec
lret
mov
insl
and
adc
jne
jo
jb
lret
pop
cmp
sub
pop
cmc
cltd
std
lret
jecxz
lods
push
add
lret
daa
lds
in
jne
or
jp
stc
pop
dec
push
mov
addr16
or
adc
data16
dec
sub
ljmp
cmp
lds
mov
jecxz
sbb
and
enter
push
movsb
insb
nop
push
lods
je
push
cmp
das
das
test
stc
and
pop
fisubrl
sbb
sub
mov
sbb
scas
mov
push
mov
push
xor
adc
lods
inc
fsubrs
mov
and
addr16
and
jl
xorl
inc
jmp
jge
lret
add
xchg
sbb
ret
mov
xchg
jae
mov
pop
mov
popf
popa
cmp
in
add
enter
add
ss
push
jnp
ficoml
dec
xor
jl
sbb
aaa
xchg
lock
dec
ja
cmc
adc
js
inc
xor
adc
mov
ds
cmpsl
jmp
loop
dec
sub
push
mov
and
jbe
sub
lock
cmpb
fs
out
cmp
clc
into
repnz
mov
fistpll
lock
jg
mov
cmp
repnz
adc
jnp
push
out
mov
lds
cmp
test
adc
and
fcompl
mov
insb
scas
mov
arpl
inc
inc
dec
shlb
fsubp
adcb
inc
add
clc
inc
cltd
negb
lcall
negl
and
fistl
into
dec
and
xchg
cmp
mov
js
push
jo
scas
mov
test
test
mov
divb
orps
pop
out
pop
lds
push
mov
xor
and
daa
sub
ljmp
loope
or
adc
pop
mov
outsl
add
push
and
sahf
fistl
fdiv
mov
fcmovnu
dec
imul
aaa
cmp
xor
sbb
xchg
scas
popf
cmp
sbb
xchg
hlt
push
xchg
pop
ja
cld
pop
fisubl
rcr
mov
add
das
insl
mov
stc
inc
mov
out
mov
dec
icebp
cld
popf
dec
cld
sbb
and
clc
mov
pop
inc
jo
mov
fiaddl
js
cmp
scas
push
xor
fbstp
adc
xchg
outsl
or
inc
es
xchg
cs
scas
dec
jnp
je
jb
jle
or
movsl
fwait
cmp
mov
mulb
pop
call
cmp
ficomps
push
mov
scas
jmp
xchg
shll
ds
hlt
dec
pop
movsb
pop
xor
lods
xor
xchg
mov
cmp
sbb
stos
adc
cwtl
mov
cld
mov
sub
push
arpl
mov
sbb
push
mov
test
cmc
mov
addl
mov
push
xchg
mov
popf
sub
jle
xchg
add
jbe
movsl
movsb
xor
call
mov
push
ss
mov
mov
xchg
xor
xchg
test
mov
fistl
icebp
fadd
mov
jno
and
repnz
adc
mov
arpl
sti
pushf
mov
jmp
xchg
jo
jne
repz
ja
in
and
or
push
mov
adc
stos
popa
mov
fidivrl
out
es
sbb
xchg
fstps
mov
lret
faddl
push
data16
push
inc
js
push
push
jp
cmp
aaa
cmpsb
frstor
dec
lret
shrl
hlt
pop
cmp
int3
addr16
mov
mov
xor
mov
inc
and
stc
inc
jg
pop
sahf
sahf
sbbl
pop
jbe
xchg
push
je
test
ljmp
fs
push
test
xchg
jecxz
dec
xchg
icebp
jns
ror
push
out
push
ror
daa
fadds
and
xchg
js
pop
lea
pop
or
jo
inc
mov
iret
popf
pop
test
adc
adc
bound
adc
xor
lock
dec
inc
out
cmp
aas
dec
lret
cmp
xchg
pop
mov
lahf
adc
dec
and
in
es
pop
call
lock
sbbl
out
mov
or
and
lahf
xchg
loope
sbb
add
movsb
icebp
inc
cmc
xchg
cmp
or
push
les
lahf
xlat
adcl
dec
and
negb
hlt
test
imul
cs
jne
xchg
imul
sub
in
dec
pop
mov
pop
clc
data16
add
adc
dec
lds
stos
push
sahf
add
ljmp
jl
xor
addr16
clc
out
js
pop
jnp
xor
int
cmp
outsb
in
daa
mov
notb
fistpl
mov
mov
test
xchg
lret
fistl
push
push
cmp
lods
xchg
inc
push
pop
data16
jg
add
pop
xchg
and
push
stc
push
and
outsl
mov
xor
push
fisttpl
xchg
movsb
xor
cli
sahf
lock
stc
mov
inc
stos
lock
or
mov
fwait
jnp
repz
cltd
aam
test
mov
pop
xor
xchg
mov
inc
mov
test
dec
aas
xchg
lahf
pop
xor
mov
xlat
push
popf
fsubrs
or
jae
pop
addr16
aad
dec
jmp
xchg
xorl
rcll
loop
dec
sub
imul
shl
pop
aaa
xlat
dec
push
outsb
mov
jb
mov
ret
or
and
xor
jb
push
inc
cmp
sbb
cmp
push
lahf
inc
loop
push
fld
pop
dec
sti
lock
jle
push
dec
out
sub
jle
movsb
subl
lcall
sub
outsb
xchg
out
sub
js
jbe
mov
fisttps
dec
mov
jecxz,pt
mov
inc
fldcw
pop
dec
pop
mov
test
insb
repz
ret
test
ficompl
inc
mov
aam
xor
int3
lock
xor
aaa
dec
fistps
enter
adc
cs
cltd
test
out
dec
ljmp
sub
das
jo
cmp
jns
pop
lret
mov
inc
add
les
push
jecxz
or
std
inc
push
stc
adcb
xor
subb
aaa
sub
lret
fcoml
iret
jecxz
mov
push
leave
icebp
call
test
dec
xchg
lods
hlt
fwait
or
jecxz
and
jmp
lds
mov
shl
push
dec
mov
jns
sub
jbe
mov
test
push
das
pop
xor
mov
mov
jmp
imul
repz
add
cmp
imul
mov
sbb
cmp
mov
inc
stos
push
sbb
data16
jno
xor
mov
mov
or
dec
mov
mov
stos
sub
in
mov
das
mov
add
dec
adc
mulb
inc
mov
lods
fnstsw
jno
pop
xor
jge
imul
aas
jne
shl
sti
or
push
dec
pop
inc
xchg
ja
lds
mov
add
cmp
movsb
inc
jo
jno
cwtl
dec
dec
aas
aam
and
push
jns
jbe
jecxz
dec
adc
sub
test
mov
sbb
nop
test
in
jae
pop
enter
sbb
popa
or
xchg
or
push
add
cltd
test
dec
lock
and
shr
sti
sbb
cli
test
aas
pop
sbb
xlat
pop
sbb
js
pop
and
pop
jbe
pop
add
into
xchg
lret
int3
mov
jnp
ret
jae
addb
ret
fsubl
jo
sub
jo
xchg
int
push
es
inc
ds
xchg
jg
sbb
push
jne
mov
mov
imul
lea
out
pop
test
outsl
xor
xchg
push
test
insl
pop
fildll
cmp
cwtl
push
mov
jg
bound
mov
aad
mov
lods
mov
lcall
push
stos
push
push
imul
sbb
dec
mov
sub
sub
jno
mov
mov
ja
cmpsl
dec
outsl
lea
bnd
dec
push
and
inc
xchg
push
pop
scas
pop
and
dec
sti
lock
jnp
out
loopne
pop
adc
aad
sti
jne
outsb
aas
push
std
aaa
push
lcall
ljmp
push
loope
push
pop
or
cld
inc
loopne
adc
cmpsb
sub
mov
pop
dec
and
cmp
mov
push
add
lcall
shl
sub
lea
add
ja
jne
and
push
test
mov
stos
aam
pop
repz
xor
lret
mov
lahf
mov
div
push
xlat
jns
mov
imulb
sbb
inc
dec
push
pop
icebp
int
dec
dec
clc
dec
fisttps
add
aaa
fstpt
xor
or
test
mov
shll
scas
push
lds
loop
mov
sti
dec
xchg
inc
mov
adc
dec
shlb
dec
clc
imul
push
outsl
shl
pop
mov
pop
jnp
outsl
pop
jae
mov
lret
test
sbbl
dec
push
dec
jmp
das
mov
shr
repnz
aas
outsl
aaa
lcall
dec
shlb
pop
or
inc
fsub
lock
pop
out
roll
shrl
jl
pop
xor
mov
out
pop
cmp
xor
sbb
jge
int3
sti
ret
lcall
jno
adc
xchg
mov
push
popf
sbb
shrb
movsb
xor
fcoms
into
stos
jge
add
sub
mov
xor
or
cmpsl
sbb
call
cltd
add
pop
shrb
dec
xchg
xorl
jp
out
pop
fld
pop
push
and
cmovo
cmp
lock
aas
mov
push
xlat
sti
push
pop
cmp
mov
cmp
enter
outsl
imul
pushf
push
fdivp
into
mov
add
ds
std
cltd
jmp
push
sbb
jb
stc
dec
leave
scas
in
jmp
xor
pop
stos
inc
push
fimull
and
or
adc
aas
loope
stc
push
or
inc
mov
enter
pop
iret
xor
xchg
cmpsb
mov
mov
fldcw
repz
xor
fsubs
jo
push
and
incb
popf
icebp
test
popa
add
adc
mov
fcmovnb
mov
stos
movsb
jle
cmp
push
fldenv
dec
scas
mov
sbb
or
add
repnz
sbb
cmpl
cmp
mov
data16
add
xchg
mov
mov
sub
xor
inc
sub
jnp
dec
mov
into
movsb
add
es
jg
jne
sub
dec
jae
fldcw
add
out
in
mov
mov
out
inc
mov
addr16
cmp
and
test
xor
mov
xchg
xor
hlt
lods
ljmp
mov
sti
ret
mov
hlt
xchg
pop
ret
sub
inc
and
xchg
aam
jl
mov
rclb
lds
push
dec
sub
js
mov
cmpsl
in
lods
lcall
inc
loop
lds
std
adc
sbb
xchg
push
add
mov
addl
and
mov
sti
dec
push
lcall
inc
mov
scas
das
cmp
sub
lods
jl
leave
sbb
cmpl
mov
in
outsb
inc
rorb
mov
mov
xchg
mov
xor
xor
cmc
dec
fldcw
sub
jnp
iret
outsl
dec
push
pop
xchg
dec
movsb
out
inc
fidivs
movl
sub
out
in
bound
pop
int
test
xchg
ljmp
pop
iret
push
xor
pusha
inc
and
add
scas
sub
inc
add
adc
lds
cmp
aad
sub
mov
pop
fdivl
mov
aaa
add
out
call
pop
or
jbe
shrb
add
addb
shll
cmp
mov
rolb
sub
xchg
fnstenv
mov
push
mov
xchg
loop
lods
imul
popa
lods
mov
fidivrl
jbe
shrb
divl
lret
jo
enter
mov
xor
aam
std
mov
pop
int3
pop
pop
jmp
loop
dec
jns
shl
jb
cmpsl
jp
scas
fcomps
sbb
pop
clc
xor
or
push
or
lock
mov
fcmovbe
or
jmp
out
sahf
cmp
mov
movsl
std
iret
movsb
popa
jnp
xchg
out
in
pop
sbb
or
mov
decl
insl
scas
repnz
mov
pop
jae
mov
shll
push
shll
mov
add
out
mov
and
jge
mov
lods
leave
mov
xchg
sub
pop
xchg
jno
int3
ficompl
push
push
nop
std
loop
inc
jb
jnp
subl
sbb
in
xor
fsubrs
in
addb
test
mov
sbb
and
push
std
cmp
shlb
hlt
mov
xor
sub
adcl
jl
mov
xchg
aad
add
jg
insb
aas
add
mov
and
lcall
pushf
mov
int3
into
mov
xor
inc
adc
jbe
xchg
adc
rcrl
scas
ds
es
and
rcrl
fcmovu
pop
hlt
movsb
mov
mov
sub
jno
jb
sbb
lahf
shlb
movb
or
jo
sbb
in
hlt
fiadds
in
rcr
cmp
sub
ds
inc
andb
jmp
xchg
dec
cmp
xchg
jle
std
cmp
call
sbb
cmpsb
mov
xchg
fwait
lock
and
out
pop
addr16
mov
add
stc
sbbl
ja
jo
in
xchg
sbb
popa
or
mov
mov
sarl
aam
jbe
push
std
mov
fcmovne
movsl
dec
mov
out
mov
faddl
in
xlat
aas
jp
inc
clc
and
jnp
jmp
sub
jmp
fwait
scas
xchg
pop
inc
xlat
inc
pop
mov
arpl
jecxz
imul
jns
xor
dec
sbb
cmp
das
stos
addr16
pop
xchg
pop
iret
fucomip
rolb
or
ret
sub
imul
lods
loop
mov
dec
mov
jae
ds
adc
xor
movsb
arpl
cmp
sub
popl
xchg
cmp
jl
stc
jnp
sub
mov
mov
aad
mov
jge
enter
push
jnp
fsubl
into
push
sar
enter
loop
dec
mov
mov
xlat
dec
xorl
pop
sub
fdivs
or
movsb
pop
in
mov
into
adc
mov
jbe
jno
sub
xchg
pop
jns
arpl
fldcw
insl
adc
in
ror
push
mov
hlt
push
mov
ret
mov
mov
xchg
es
arpl
jnp
jp
jle
and
cmp
cmpsb
pop
inc
xchg
stos
imul
sbb
mov
push
xchg
xchg
mov
mov
aad
sub
xor
je
pop
icebp
inc
std
xlat
loopne
pop
cli
int
out
add
cmc
sub
xor
sub
repz
mov
arpl
xor
stc
and
xchg
sub
jns
lods
inc
leave
inc
mov
jl
cmc
test
push
loop
in
into
and
push
xchg
ljmp
dec
or
addl
cltd
test
enter
jae
das
rorb
inc
cmpsl
rcrb
adc
shr
or
add
cmp
inc
jecxz
aam
mov
mov
sub
lock
fadd
mov
mov
rorb
mov
es
fists
imul
hlt
mov
fistpl
or
fbstp
scas
mov
mov
jmp
dec
jmp
cmc
jae
inc
imul
repnz
cmp
rorb
push
sub
mov
out
jbe
push
xor
sti
push
pop
cmpsl
js
sahf
mov
lods
int
shrb
clc
lahf
fsts
shrl
cmp
imul
lods
test
push
aaa
scas
in
std
mov
leave
xchg
arpl
dec
ljmp
and
add
fsubrl
popa
mov
int
rol
cli
sub
dec
mov
pop
lods
and
lcall
sub
insl
popa
xchg
test
test
cmp
pop
dec
jnp
xor
test
pop
fstp
xchg
jmp
dec
sbbb
cs
push
add
repnz
mov
sub
cltd
pop
inc
pop
or
iret
add
mov
or
cmp
out
cmpsl
cld
imul
cmc
jnp
jmp
aam
push
xchg
adcl
and
pop
iret
movsl
add
push
stc
mov
and
mov
jbe
jno
push
mov
popf
xchg
inc
pop
cwtl
notb
cmp
and
xchg
add
jp,pt
dec
push
lahf
mov
xchg
push
dec
xchg
adc
add
bound
adc
fsubrl
movsl
movsl
pop
imul
std
pusha
ret
aas
out
mov
mov
cmp
and
lods
adc
lahf
adc
das
lds
and
xor
sarl
sbb
sub
int
lcall
gs
aas
hlt
xchg
pop
mov
cltd
xlat
xor
jle
loope
mov
push
pop
outsl
adc
cmpsb
out
xor
fsubp
mov
lret
dec
cltd
aas
ljmp
ljmp
xor
xor
xchg
call
xor
sub
or
sbb
or
test
xchg
jns
pop
leave
or
jg
push
js
inc
adc
insb
jne
mov
sub
or
cmp
pop
pop
andb
adc
in
inc
lahf
mov
leave
clc
imul
das
sbb
xor
test
or
in
aaa
cmp
push
mov
imul
movsb
push
cs
add
push
sub
outsl
xor
and
push
push
cs
mov
lret
inc
insl
fdivrl
lret
orl
mov
enter
int
imul
fstps
lret
imul
addr16
pop
fdiv
or
icebp
inc
data16
adc
in
mov
test
sbb
xchg
cli
sub
pop
repnz
push
lods
fucomp
inc
lock
mov
rol
push
pushf
movsb
pop
call
add
orb
push
cmp
mov
add
out
imul
push
sub
or
pop
push
fstps
pusha
mov
js
cmp
pop
push
dec
in
push
push
jg
inc
iret
jg
rol
lcall
jle
int
cli
cltd
test
cmc
shrl
pop
mov
dec
dec
test
das
cmp
jb
popf
inc
mov
hlt
pushf
mov
mov
and
add
pop
pusha
ret
xor
sbb
jnp
and
imul
imul
xlat
cmp
shlb
lcall
test
mov
fucom
mov
push
mov
push
cs
std
imul
sbb
xchg
xchg
adc
dec
fcomi
mov
ret
cmp
ljmp
mov
mov
mov
movsb
je
mov
pop
cli
cmp
scas
cmp
adc
adc
test
in
push
inc
mov
mov
xchg
push
es
sbb
push
xchg
cmp
jb
mov
shlb
insl
jmp
push
lret
inc
data16
daa
jg
pop
jmp
push
jmp
in
rorl
pop
lock
lret
sbb
push
imul
mov
sub
push
mov
cli
xchg
adc
mov
or
adc
pop
mov
dec
enter
pop
stos
cmpsl
hlt
sub
popa
movsl
sbb
push
sbbl
imul
inc
pushf
push
cmp
cmpsl
test
scas
cmp
fistpl
mov
xchg
jb
push
enter
pop
ror
jnp
scas
pushf
inc
fsubrl
fwait
out
dec
fisubrl
cltd
push
inc
xchg
jg
cmpb
mov
sahf
inc
mov
frstor
jge
and
and
ret
es
mov
mov
mov
cmpsb
ror
ret
mov
shl
mov
fwait
stos
test
outsb
dec
inc
rcrl
movsl
or
pushf
icebp
arpl
je
jg
shlb
dec
add
insb
mov
and
nop
stos
scas
mov
add
mov
scas
mov
or
daa
jmp
lret
bound
inc
adc
inc
mov
lds
ret
sbb
sbb
cmp
scas
xchg
cld
mov
shrl
dec
sahf
cpuid
inc
cmpsl
ficompl
ljmp
fidivrl
dec
sub
dec
push
insb
imul
icebp
clc
aas
xchg
into
mov
jmp
repz
push
pop
pop
mull
jnp
repnz
adcb
outsb
mov
jno
adc
sbb
fwait
lret
out
out
add
test
and
mov
int3
jbe
outsl
leave
stos
cld
das
daa
popa
aas
push
lcall
lds
xorb
ret
mov
les
mov
ror
mov
mov
ficoms
fdiv
xchg
aas
pusha
sub
dec
xchg
movl
dec
imull
cltd
in
sarl
inc
pop
pop
rcr
test
add
jp
pop
test
aad
inc
and
push
push
cmp
fbstp
and
adc
stos
ja
or
jl
out
sbb
mov
jge
call
out
je
jecxz
jp
mov
jl
hlt
aaa
cmc
xchg
sub
push
jle
insl
push
int
mov
stos
sub
sbb
xor
sub
push
mov
push
mov
lods
lods
mov
das
mov
pop
add
addr16
sti
xchg
push
filds
and
push
dec
lea
cmc
stos
dec
mov
std
fs
dec
add
cmp
adc
cld
mov
movsl
inc
fs
enter
cltd
inc
inc
ud2
dec
addr16
gs
fnsave
cs
cmp
stos
cmc
outsb
or
ret
dec
outsb
dec
mov
jge
movsl
fists
add
cmp
push
mov
xchg
cmp
jmp
into
adc
int3
mov
data16
xchg
fbstp
adc
xlat
push
lcall
xor
cmovne
cld
mov
dec
inc
push
jnp
mov
mov
mov
add
leave
mov
xchg
rolb
fmul
xorl
mov
fucom
jbe
hlt
xchg
test
sti
shll
mov
add
popf
loop
cmpsb
nop
in
push
push
cmp
xorl
sub
push
shlb
add
movsl
sub
outsb
pop
js
cli
popa
lea
inc
out
xchg
aas
es
push
sbb
aad
fwait
test
sahf
aas
ret
cmp
add
mov
xor
mov
xchg
jns
mov
popf
lods
jmp
inc
and
add
mov
cs
add
cs
negl
cld
dec
dec
pop
push
cmpsl
lock
pop
jo
and
pop
out
xchg
cmp
push
push
scas
imul
cwtl
pop
mov
cld
jns
insl
inc
out
imul
test
inc
sbb
cmp
hlt
mov
dec
sub
xchg
jns
pop
add
ljmp
rcrl
jmp
add
lcall
outsl
das
adc
filds
dec
push
push
jle
mov
outsl
xchg
cmp
es
mov
and
inc
push
stos
or
rcll
aad
gs
lret
in
and
int3
mov
sbb
pop
stos
or
jno
js
cmc
imul
mov
add
imul
xchg
adc
mov
ret
pop
xchg
mov
call
jle
jl
in
mov
sbb
jmp
icebp
fwait
mov
mov
jecxz
sbb
daa
adc
mov
push
mov
lods
dec
sub
sbb
inc
xchg
or
out
hlt
movsl
addr16
sub
push
test
jge
jae
xchg
loopne
push
jle
sbb
fildll
inc
rcl
out
scas
pop
pop
out
out
jle
dec
xchg
add
push
sbb
or
lahf
and
or
popf
mov
bound
test
lods
jle
adc
lret
xor
ljmp
sub
push
loop
cltd
cld
rcrb
inc
orb
ficomps
and
cmpsb
cwtl
in
xor
out
xlat
stc
xchg
lret
inc
xlat
push
imul
das
xchg
jo
adc
test
inc
or
push
and
xchg
nop
cmp
std
xlat
incb
cpuid
testl
or
sbb
loope
jecxz
mov
mov
aaa
mov
or
mov
pushl
and
jne
enter
jecxz
imul
mov
sub
lcall
mov
movsb
mov
mov
fprem
pop
jecxz
shrb
das
mov
add
jg
mov
shll
pop
xchg
xchg
fcoml
pop
jge
mov
loopne
fcompl
mov
jmp
test
mov
out
cmp
repnz
arpl
sub
pop
imull
push
push
and
xchg
dec
ret
jl
ljmp
fnstenv
cmc
mov
mov
xor
fs
pop
stos
xor
sub
hlt
mov
xchg
sub
dec
mov
fs
mov
inc
pushf
aas
scas
dec
mov
rep
lds
cmp
das
cld
mov
loop
sub
popf
jo
clc
fmull
inc
cltd
mov
mov
cmp
mov
into
inc
sbb
inc
icebp
rorb
mov
inc
in
shlb
inc
sarb
in
push
mov
mov
out
mov
adc
divl
sbb
jae
mov
imul
push
sbb
out
stos
mov
mov
add
push
xchg
cwtl
adc
movsl
ss
leave
and
sub
in
repnz
enter
mov
in
not
mov
sahf
pop
push
cmpsb
in
ljmp
sub
mov
test
hlt
lret
in
cltd
test
mov
pop
fidivs
add
cs
out
xchg
repnz
cld
xchg
pop
repz
mov
mov
dec
sub
mov
int
xchg
add
xor
xchg
jmp
xor
scas
sti
or
xchg
adc
dec
cmp
lea
fcoml
stos
loopne
insb
out
inc
je
mov
cmp
sbb
jge
insl
lds
pop
nop
xchg
test
fistps
shl
dec
xor
add
cmp
sub
pop
xchg
inc
and
movsb
ret
xchg
nop
in
cmpsl
xor
cwtl
jo
subl
nop
cltd
imul
sub
nop
arpl
repnz
and
dec
add
jnp
call
sbb
mov
push
repnz
fistps
addl
call
and
cltd
cmp
sub
call
jb
in
mov
push
out
ss
sub
or
das
mov
jo
xchg
add
cltd
popa
ljmp
js
mov
je
jp
aam
dec
or
inc
je
cmc
inc
mov
enter
sub
push
dec
pusha
adc
in
ret
mov
clc
pop
dec
add
or
sub
pop
adc
push
xor
sbb
andl
xchg
xor
or
out
mov
xor
xchg
lock
icebp
jns
jp
and
insl
test
xchg
xor
lock
mov
repnz
test
xor
lret
ljmp
cmp
mov
or
rcrb
movsb
mov
mov
pop
daa
xchg
push
jne
xlat
and
or
leave
fildll
xchg
inc
hlt
insb
dec
je
fcomip
pusha
dec
jle
mov
and
stos
pop
push
into
xchg
lods
test
push
jo
aaa
in
mov
mov
int
in
leave
pushl
mov
popf
adc
or
in
cwtl
jb
cltd
into
das
push
call
js
jb
pop
hlt
dec
jmp
cmp
repz
mov
xchg
popa
jno
add
lahf
enter
jne
loopne
vpsrlq
out
aas
inc
dec
loop
pop
std
popa
int3
int3
jmp
loope
mov
or
cli
mov
push
push
and
fiadds
clc
dec
loop
jmp
je
mov
nop
sub
xor
mov
mov
xchg
mov
cmp
subl
outsl
push
loopne
movsl
in
lods
push
dec
stos
mov
rcll
mov
shl
or
add
fdecstp
ret
cmpsl
aas
lret
lea
fstpl
add
mov
dec
push
loope
sbb
and
xchg
xor
push
xor
mov
mull
adc
inc
jg
scas
mov
xor
inc
pushf
in
in
dec
xchg
loop
and
add
pop
xor
inc
les
ss
lods
andb
fists
jl
adc
push
rcr
inc
insb
push
sub
and
fwait
pop
data16
xor
and
test
insb
push
incb
mov
icebp
rcrl
movsb
mov
jo
cmpsl
jns
cmpsl
cltd
xchg
mov
lret
xchg
mov
sub
arpl
mov
testl
push
das
int3
insb
lods
adc
push
xchg
push
dec
pop
jmp
or
dec
add
test
jecxz
negl
in
push
push
int
sub
cmp
test
inc
imul
test
cmp
inc
jl
shll
test
pop
adc
cmp
xor
add
add
ljmp
mov
sub
jle
xor
mul
push
cmc
popf
lock
popa
or
pop
mov
mov
in
in
popa
and
inc
mov
rclb
dec
and
test
lahf
fldcw
mov
icebp
mov
inc
call
push
cmp
push
mov
iret
inc
xchg
mov
scas
cmpl
push
xor
fidivrl
rcr
clc
outsb
and
adc
pop
dec
add
push
popf
cmp
outsb
jle
pusha
into
fwait
scas
and
shrb
adc
pop
sub
aad
repz
cmpsb
popa
lock
cld
es
jno
scas
inc
icebp
jg
es
rcrl
scas
mov
imul
push
add
cmpsb
mov
mov
mov
adcl
dec
add
mov
inc
enter
pop
jl
cmp
sub
shl
mov
ja
jmp
cwtl
mov
and
inc
adc
daa
push
test
in
pop
loop
std
cmc
loop
xlat
les
sub
insl
sbb
hlt
or
jno
xor
or
mov
pop
mov
das
push
icebp
inc
cmpsb
xchg
adc
addr16
mov
sub
mov
aas
bound
xor
xor
inc
js
or
mov
mov
mov
push
pop
sbb
ret
popa
pop
push
pushf
and
and
and
mov
inc
insb
sbb
xor
and
push
sbb
xlat
in
sbb
mov
and
mov
lods
jb
pop
addr16
mov
dec
int
cmc
movsl
xor
sub
mov
push
cmp
and
dec
outsl
mov
inc
mov
sbb
out
xchg
in
cmp
daa
jecxz
cmp
fwait
shlb
out
sbb
fisubrl
sti
mov
xchg
jl
or
mov
mov
imul
push
jne
dec
xchg
jne
push
cwtl
fwait
mov
lods
cmc
sub
or
push
add
je
lahf
inc
cmpsb
outsb
xchg
not
add
mov
cmp
mov
add
cmc
sub
arpl
imul
adcl
sub
jle
xchg
out
aam
cs
jne
insb
in
cmp
inc
sbb
mov
frstor
lds
sub
jo
or
xchg
mov
imul
into
jmp
inc
cmp
pop
cs
sbb
daa
mov
gs
sub
mov
ror
mov
push
pop
add
add
out
mov
out
jnp
mov
pushf
and
cmp
inc
and
leave
push
movsl
mov
imul
movsl
js
fnstcw
cmp
aad
clc
push
enter
fstpt
pop
test
mov
mov
jle
sahf
fisubs
cmpsb
in
xorl
lret
shl
pushf
sub
inc
movsl
dec
ret
push
loope
push
mov
stos
arpl
cmpb
pop
add
popa
sub
std
pop
ss
xchg
lahf
aas
sti
aad
jle
mov
add
cmc
mov
jp
cmp
iret
popf
mov
int3
in
cmp
and
jne
adc
sti
dec
fbld
rorb
out
aaa
xchg
in
mov
and
mov
add
jns
mov
aaa
mov
ja
mov
test
leave
sub
mov
pop
ret
push
ss
pop
rorl
std
mov
or
push
mov
jnp
ja
pop
ljmp
pop
call
xor
pop
imul
inc
or
xor
mov
xchg
pop
or
mov
jg
jl
jbe
cmp
mov
mov
out
xchg
cs
jo
mov
push
xchg
lods
xchg
aam
sbb
add
mov
insl
adc
repz
xlat
cmp
in
sbb
clc
push
mov
fdiv
js
in
andl
mov
mov
mov
sahf
sub
shll
test
or
scas
dec
or
ficomps
adc
dec
cmpsl
rcrl
je
shll
ret
or
int
pop
inc
xor
xchg
rcll
pop
scas
xlat
packsswb
hlt
sub
ljmp
pushf
jnp
sbb
lea
aaa
es
xchg
jno
rcrl
and
mov
fcmovbe
mov
jbe
jns
fistps
lods
mov
stc
inc
iret
pop
in
mov
lahf
push
jge
stos
jge
adc
test
dec
fiaddl
pop
sub
add
test
cmpsl
test
pop
outsb
pop
je
das
add
imul
jmp
mov
loopne
pop
cmp
cmpsb
push
xchg
imul
mov
and
lahf
pop
out
sub
jb
bound
call
imul
cmp
dec
mov
dec
imul
jnp
and
inc
mov
cmp
mov
out
jnp
jmp
in
lea
sbb
jo
in
insl
dec
inc
hlt
push
js
add
insb
mov
scas
mov
jle
push
ds
or
daa
xchg
push
add
mov
movsl
das
cmpsl
clc
popa
rcrb
ja
mov
or
xor
int3
icebp
mov
stos
xchg
ret
hlt
int
imulb
push
mov
xor
dec
sbb
sahf
cmp
push
xchg
adc
mov
ficompl
add
das
dec
popl
adc
adc
pop
xchg
add
test
inc
lea
cmc
push
imul
pop
pop
das
jle
mov
scas
or
lcall
lock
aas
dec
push
xchg
jae
lods
ret
rcr
mov
cmp
inc
xor
sbb
dec
push
jns
sahf
cmpsb
scas
ljmp
pop
mov
pop
icebp
popa
fidivs
sahf
jecxz
mov
imul
repnz
imul
into
xchg
lret
outsl
aas
repnz
jbe
mov
rorb
or
jmp
icebp
push
iret
into
lods
pop
mov
pop
and
jp
sbb
sahf
add
xor
jns
mov
sbb
int
fwait
lcall
gs
test
dec
push
sbb
mov
add
mov
movsl
pop
in
out
pop
jb
cmpsb
push
lock
daa
sub
aaa
addb
mov
nop
mov
cmp
jb
push
mov
pop
add
inc
dec
mov
dec
cmc
js
inc
ret
jmp
cmp
xor
movsl
iret
loop
and
mov
adc
push
pop
sub
call
cmpsb
pop
xlat
mov
mov
subb
out
fwait
jnp
inc
mov
fildl
clc
in
mov
mov
shrb
jb
je
repnz
add
cs
xchg
pushf
loopne
mov
mov
ficomps
push
xor
stos
and
pop
push
outsb
or
sbb
lock
jbe
add
int3
or
inc
arpl
xor
ret
in
and
or
mov
int3
xchg
iret
test
cli
dec
lahf
repz
cmpsl
fidivrl
inc
fwait
pop
cwtl
add
imul
das
jns
bound
fistps
cmp
hlt
and
inc
adc
or
fbstp
mov
aaa
jne
jo
shlb
insl
imul
and
lret
sahf
sub
sub
xor
xchg
push
in
out
inc
pushf
loope
movsb
fnstcw
pop
jmp
out
xor
mov
adc
ja
pop
sub
xor
mov
repnz
mov
jno
xchg
push
or
jae
push
mov
pop
dec
add
bound
stos
mov
dec
in
gs
pop
xchg
lea
add
mov
repz
or
mov
gs
decl
cmp
mov
bound
inc
inc
addr16
xor
and
adc
mov
incb
jle
fmul
fcmove
rdpmc
push
std
insb
jno
in
testl
add
xor
pop
sbb
add
jle
fisttps
leave
int
lds
adc
or
test
aaa
inc
mov
and
test
loopne
push
sub
shrl
les
sub
outsl
out
add
negb
orb
mov
pop
cmp
lahf
fdivl
and
fstp
inc
dec
pop
mov
sub
mov
fcomps
jl
enter
cs
mov
and
mov
xchg
mov
into
push
sub
popf
dec
and
fbstp
dec
mov
push
shr
addr16
and
hlt
sbb
sub
in
or
lods
sub
xchg
mov
adc
hlt
dec
adc
jno
outsl
or
fidivrs
cld
cs
xchg
or
scas
add
adc
mov
lret
and
push
mov
or
xchg
sub
std
cmpsb
lcall
loop
cmp
xchg
mov
popa
sub
dec
sbb
xchg
xadd
mov
push
pop
sbb
cmpl
push
push
dec
sbb
mull
mov
inc
mov
stc
mov
pop
pop
xchg
push
mov
push
call
sbb
inc
xchg
rorl
jge
fldl
fidivs
popf
ja
hlt
inc
stos
jb
mov
mov
pop
lea
ret
push
out
cmpb
mov
pop
xchg
mov
xchg
sub
sarb
lret
imul
cmp
jbe
add
dec
mov
sahf
insl
popaw
jecxz
es
mov
aad
push
daa
pop
aam
xchg
lds
jne
mov
cs
sub
mov
and
xchg
loopne
inc
imul
int3
imul
aam
jle
push
pop
pop
aaa
pop
nop
shlb
jns
pop
repz
cmp
mov
sbb
test
mov
fstp
fidivl
sahf
movsl
scas
adc
dec
sub
shlb
mov
cmp
daa
ljmp
xor
xchg
xor
lock
inc
xor
js
pop
outsb
into
mov
inc
cs
mov
pop
sbb
into
dec
call
mov
jne
aam
adc
divl
in
sbb
dec
push
insb
cltd
xlat
out
imul
add
push
in
jmp
cmp
xchg
jb
cld
pop
fidivs
inc
pop
push
std
fiadds
fidivs
adc
mov
lahf
cmp
mov
adc
xchg
insl
lds
sahf
lahf
shrb
or
mov
lret
lahf
aas
test
ljmp
adc
adc
cmpsb
aas
push
fwait
cld
fiadds
das
call
insb
sbb
push
push
andb
std
int
popa
adc
adc
mov
cmp
push
das
psubsw
addr16
js
sub
cltd
mov
dec
adc
aaa
push
adc
cmpsl
mov
add
add
sti
ds
call
cwtl
jns
outsl
add
mov
mov
jb
xchg
sbb
cmp
ja
test
insb
pop
addb
ja
movsb
insb
inc
nop
cmp
push
sahf
sub
loop
xor
pop
pop
inc
sbb
push
push
in
out
xlat
cld
aas
bound
mov
push
mov
push
arpl
xchg
lcall
push
test
cli
pop
inc
jns
jbe
imul
ret
pusha
pop
sti
mov
dec
sub
mov
hlt
fnsave
dec
mov
cmp
outsl
sti
and
pop
push
jns
pushf
xchg
mov
xor
jns
and
cmc
lock
jle
and
rcl
adc
xchg
sbb
js
lret
test
fadd
inc
les
cld
jmp
cmpsb
outsl
ret
frstor
paddusw
rep
or
cmpsb
pusha
xorl
cmp
and
adc
movsb
lods
lret
es
or
enter
outsb
es
xchg
fisubl
xchg
mov
or
and
dec
jae
and
jo
ljmp
jge
leave
cmp
xor
inc
out
test
cltd
xor
out
push
andb
push
mov
mov
fiaddl
cmovb
fsubr
jl
dec
adc
inc
jns
test
inc
out
out
cmp
pushf
xchg
loope
sub
push
cmp
and
scas
xchg
push
mov
into
pop
sub
and
pop
pop
out
dec
inc
idiv
pop
xchg
push
ja
sub
cltd
sbb
cmp
or
bound
or
xchg
add
int3
or
das
adc
out
out
xchg
mov
push
stos
movl
fdiv
shr
in
inc
cmp
stos
mov
jecxz
sub
adc
fnsetpm(287
fimuls
outsl
mov
hlt
cmpsb
jnp
xlat
outsl
sub
lret
orb
into
test
test
adc
std
xlat
mov
push
inc
popf
xor
cmp
outsb
fwait
push
out
in
in
push
xchg
push
xchg
mov
xchg
xchg
or
outsb
leave
fbstp
daa
xlat
scas
int
scas
cld
jno
stc
xor
inc
sub
inc
push
sbb
ja
movsb
push
and
sahf
inc
aad
mov
and
or
test
inc
dec
inc
inc
mov
mov
pop
inc
les
dec
push
nop
xchg
jl
iret
adc
repnz
subb
mov
std
stc
pop
xor
stos
movsl
insl
ds
cmp
fmulp
pop
jle
lret
cmp
mov
mov
outsl
pop
in
sbb
les
nop
xor
mov
mov
cmp
jg
sub
inc
insb
repnz
sub
in
sub
sarl
stos
and
xchg
int
jno
repz
sub
fisubrs
cmp
cmp
dec
push
stos
popa
stc
cli
das
aad
xor
jns
xor
pop
jge
repnz
or
test
mov
xchg
scas
adc
fisttpl
xorb
sub
les
and
rcrl
popf
repnz
inc
test
add
fs
iret
ffree
cmpsl
push
lds
push
clc
movsb
push
mov
out
cld
out
pop
jo
inc
mov
daa
and
call
aad
fsubp
sahf
psubsw
sub
sti
notl
pop
std
adc
sub
fwait
jle
dec
cmp
in
jp
or
fmull
add
mov
xchg
mov
add
shll
insb
andps
punpckhwd
pop
dec
imul
js
sub
sti
loop
sub
scas
mov
insl
sbb
dec
xor
lahf
fidivl
dec
loopne
ds
cmp
xor
mull
pusha
or
inc
jne
icebp
bound
and
mov
repz
push
xor
or
out
inc
fs
loopne
push
ljmp
in
push
and
stos
mov
std
xor
arpl
bound
bnd
pop
imull
ja
adc
push
fisubs
pop
nop
scas
movsb
jg
mov
subb
xchg
cmp
stc
add
inc
xchg
in
shr
adc
xchg
fstpl
out
pop
sub
push
or
negl
xlat
pop
jb
cmp
lock
fisttpll
dec
jnp
mov
xchg
push
scas
add
mov
inc
hlt
push
jo
adc
insb
fmul
inc
inc
cmpsl
push
cs
xchg
ret
push
or
xchg
push
jl
push
ja
mov
fisttps
jb
sti
mov
loopne
sbb
push
xchg
add
jp
daa
mov
out
and
jo
mov
push
scas
inc
outsl
add
xchg
outsb
sbb
subl
clc
lahf
jg
out
cmp
inc
in
add
aad
pop
push
jl
out
xor
stc
mov
stos
idivl
inc
push
mov
mov
jp
incb
fisubl
xchg
int3
xor
mov
popf
dec
or
mov
inc
inc
adcb
jne
push
xchg
cmp
addr16
rorl
scas
xchg
mov
inc
leave
repnz
loopne
add
or
add
cmpsb
dec
cmp
lds
adc
ret
fcompl
jl
pop
sysexit
or
outsl
in
jg
popa
add
jb
sahf
mov
ret
sub
rcrl
xchg
rorl
das
sub
loop
sbbb
dec
out
xchg
add
dec
xchg
mov
adc
cmp
lods
fs
insl
ret
scas
mov
aad
daa
inc
pop
cmpsl
cwtl
ja
adc
jmp
int
aam
mov
mov
jnp
js
xchg
call
push
das
or
sarb
xor
nop
and
adc
inc
subl
arpl
andl
nop
cs
insl
gs
syscall
sbb
cmp
insb
or
loope
test
out
fnstenv
jbe
jae
jnp
sbb
loop
mov
shll
addr16
inc
xor
pop
pop
inc
cmpsb
mov
mov
cmp
push
shl
cmpsb
pop
xchg
xchg
je
jmp
shr
adc
mov
adc
lds
repz
mov
pushf
jae
add
out
dec
jmp
mov
je
ss
jo
data16
pop
push
jge
sbb
inc
test
dec
sbb
xchg
jp
incl
jmp
sbb
out
dec
aad
adc
sbb
test
test
add
imull
mov
sbb
inc
aad
push
push
int
gs
lods
add
dec
jp
dec
sbb
int
inc
out
inc
push
shrl
ret
mov
movsl
test
in
repnz
clc
jmp
loop
or
xchg
mov
mov
inc
fs
int3
out
jle
cmp
mov
jo
repnz
mov
pop
lea
mov
in
test
lds
mov
in
xor
aad
cmp
cmpsb
push
gs
or
test
lcall
sbb
xor
and
and
jle
add
xchg
mov
sbb
fs
and
dec
xor
je
dec
rcrb
or
imul
add
out
stos
lock
xor
jl
repz
lret
loope
sub
in
pop
arpl
cmp
cmpsb
xor
pop
cmp
mov
pop
pop
imul
jbe
push
jae
insl
pushf
mov
xchg
inc
insb
ja
lret
fisubl
imul
cs
push
call
mov
ljmp
movsl
xchg
sahf
add
leave
outsb
adc
shlb
and
lahf
add
cmc
inc
adc
repz
lret
out
jmp
test
sbb
mov
call
lea
cmp
xor
stc
sbb
sbb
es
fstpl
jmp
push
sbb
jmp
xor
cmp
xchg
std
imul
adc
mov
and
mov
lret
inc
fs
mov
mov
mov
es
pusha
les
out
notl
jmp
aam
mov
push
mov
xorl
ficoml
inc
sub
lds
push
xlat
bnd
stos
cmp
jle
cld
add
mov
lret
hlt
xor
ja
jl
shrl
push
lcall
adc
insb
inc
jns
sbb
inc
add
stos
lahf
icebp
pop
enter
dec
pop
andb
mov
push
inc
sbb
mov
sub
in
into
jns
adc
hlt
out
and
test
lcall
outsl
test
test
adc
data16
push
xchg
movsl
dec
add
mov
in
scas
mov
aas
test
nop
mov
xchg
bound
push
shrl
lods
jle
lea
jmp
or
movsb
stc
or
std
lcall
testb
push
jge
cmc
xchg
in
sub
push
ljmp
movsl
xchg
and
call
xchg
sti
pop
pop
pop
ret
hlt
inc
loopne
sti
repz
mov
xlat
imulb
add
jle
inc
aad
or
pop
test
lea
mov
clc
cmp
push
sub
xchg
dec
push
pop
clc
out
repz
or
testl
jmp
mov
xorl
out
push
cs
and
pop
and
in
outsl
aam
sbb
push
sbb
mov
mov
js
data16
mov
adc
sub
add
push
and
pop
push
adc
jb
and
and
mov
ja
push
add
adc
sub
mov
shrd
mov
mov
shlb
fiadds
jne
push
mov
push
out
movsb
lds
jg
loope
mov
mov
aam
or
into
dec
jl
jo
ss
addr16
dec
mov
pop
jl
cmp
adc
stos
add
sbb
inc
mov
hlt
pop
into
jp
fstps
dec
mov
and
or
add
add
cmpsb
inc
sti
xchg
mov
cmpsb
aad
js
jno
add
daa
lret
lock
ja
and
sub
dec
jg
pop
push
and
js
or
jo
inc
xchg
inc
popf
adc
xor
mul
pop
in
jo
stos
dec
mov
insb
push
jns
lret
sub
cmc
or
xchg
sub
ds
mov
cmp
pop
mov
insl
pop
jp
inc
loopne
mov
push
mov
dec
pop
mov
dec
and
dec
test
fs
mov
adc
or
aad
add
or
aad
movsb
pop
xchg
jno
xchg
cmp
stos
mov
addr16
popl
fildl
lret
leave
sbb
outsb
popf
icebp
or
mov
in
lahf
jecxz
pop
add
inc
mov
lods
mov
cmpsb
mov
enter
and
add
dec
push
je
ror
mov
cmp
or
insb
test
fadd
mov
xchg
jle
icebp
push
add
fst
gs
xor
das
adc
add
iret
bound
cli
push
cmp
mov
and
sbb
jo
jno
loope
je
push
xchg
add
xlat
loope
loop
cltd
xchg
outsl
or
testb
mov
mov
negl
movsl
cld
out
or
mov
dec
in
fidivrl
jo
add
scas
das
dec
jmp
pop
sbb
into
call
bound
sub
or
cwtl
test
clc
xor
sbb
dec
outsb
out
pop
sbbb
xor
cli
imul
cwtl
pop
les
xchg
mov
pop
and
inc
ret
push
push
addr16
ror
lock
stc
xorl
mov
lods
fdivrl
inc
cmc
dec
jbe
push
cmpsb
jno
mov
repnz
adc
stos
dec
ljmp
rorb
dec
ret
jp
test
fwait
push
xor
loopne
test
insb
popa
xor
arpl
aam
icebp
fs
lret
adc
and
cmp
movsb
pop
lea
mov
gs
inc
bound
pop
popf
mov
add
fldcw
je,pt
push
push
ja
mov
outsl
push
dec
or
push
dec
incb
in
incb
rdtsc
or
fadd
jecxz
outsl
imul
push
outsl
jp
jecxz
pop
enter
bound
hlt
rcr
or
cltd
jecxz
sbb
insb
add
mov
cmp
popf
jp
xchg
fidivs
push
lds
mov
clc
rcrb
sub
test
popa
mov
popf
les
adc
in
lahf
push
push
add
gs
ljmp
ficomps
movsl
xchg
cmp
mov
fisubl
cmp
cwtl
adc
fstpl
push
and
outsl
movsb
push
mov
mov
dec
cmp
pop
mov
mov
std
bound
add
mov
cmp
scas
imull
mov
outsl
iret
pop
iret
data16
and
push
sbb
pop
adc
dec
adc
das
in
in
in
xlat
daa
ljmp
stos
das
dec
jnp
push
cmp
loop
adc
pop
test
sbb
inc
push
shrl
movsb
outsb
mov
xchg
dec
or
sbb
adc
test
inc
int3
sub
stos
xor
test
push
push
and
cli
in
jle
les
push
out
pop
sbb
ror
or
loopne
pop
repz
pop
fisttpl
nop
mov
mov
xor
nop
das
std
mov
mov
stc
jmp
or
or
ja
xchg
daa
faddl
in
push
adc
push
es
rol
mov
call
enter
rcrb
jnp
xchg
call
inc
roll
xchg
cmpsl
aas
sub
fisubl
add
push
dec
or
nop
movsb
loope
data16
stc
mov
in
push
subl
daa
sub
gs
call
pop
pop
inc
sub
jno
mov
push
cwtl
fs
outsl
dec
dec
dec
lods
cwtl
cmp
or
ss
cltd
jno
xchg
loopne
push
add
notl
dec
mov
or
outsb
sbb
xchg
and
ret
out
sbb
cmpsb
cwtl
mov
cmp
xlat
mov
dec
shr
mov
dec
xor
dec
pop
cmpl
push
addb
inc
popa
or
loop
push
es
sub
adc
jne
fmuls
icebp
lds
xchg
cltd
jo
stos
sti
or
popf
mov
sub
ds
vmwrite
nopl
pop
mov
push
sarb
movsb
add
sub
add
fstpl
push
fwait
jecxz
xchg
jecxz
push
add
push
icebp
push
iret
and
xor
sub
in
stc
ja
or
das
fs
jne
test
test
adc
fnsave
loop
stos
mov
pop
xchg
ss
xchg
mov
or
push
out
adc
xor
movsb
or
punpckldq
imul
xchg
data16
inc
outsb
cwtl
pop
out
push
notl
ss
jns
outsl
cmp
adc
insl
xchg
dec
jg
scas
ljmp
sub
aam
mov
mov
iret
aaa
mov
and
xchg
and
sub
int
cwtl
adc
cmp
xor
movsw
scas
adc
sti
test
pop
push
jmp
stc
sub
or
mov
popf
fildll
or
pop
stos
scas
out
test
cld
and
pop
pop
iret
dec
and
sbbl
add
loopne
or
pop
mov
mov
out
sti
arpl
out
push
lods
lock
cwtl
ja
pushf
mov
pop
rolb
cmp
stc
sub
cmp
add
adc
fdiv
push
push
and
lds
or
and
and
mov
std
push
mov
out
dec
shl
pop
adc
mov
lret
or
mov
xchg
les
insb
xchg
sti
mov
scas
jge
cmp
push
cmp
mov
or
xchg
xchg
arpl
insb
out
js
cmpb
jle
push
adc
inc
jl
dec
out
dec
jecxz
adcl
test
int
and
inc
lods
xchg
and
imul
ret
cmp
fucomi
cmp
inc
jbe
cmpsl
popa
adc
stos
push
loopne
jbe
pop
adc
sub
xchg
push
mov
dec
xor
xor
inc
and
mov
and
jmp
cltd
cmp
sti
sub
push
or
push
jl
aaa
popa
add
fsubl
add
jns
push
negb
mov
mov
mov
pop
fbld
mov
lret
sub
sub
dec
outsb
aad
aad
addr16
mov
mov
lods
scas
dec
test
rcr
fucomp
shrl
push
sbb
mov
xor
sbb
add
test
and
adc
movsl
fimull
jo
mov
je
push
hlt
enter
test
imull
cmc
insl
adc
neg
mov
lds
add
or
stos
mov
pop
xor
jecxz
clc
cmp
stos
repnz
popf
inc
lock
lds
sbb
mov
jle
ljmp
lea
mov
or
in
stos
arpl
bound
outsl
dec
cmpsl
mov
rcr
ret
mov
insb
int
in
jmp
inc
jmp
cmpb
pop
in
das
ret
cltd
fcomi
or
xchg
add
push
mov
adc
rcll
mov
add
and
pusha
fcmovnb
xor
ss
inc
sbb
fisubs
lds
pop
sbb
sahf
pop
bound
jns
mov
push
pop
push
nop
into
gs
stos
sbb
mov
daa
dec
push
and
fiaddl
mov
sub
adc
std
leave
and
mov
pop
jle
fldt
add
xchg
in
int
neg
adc
es
stos
cmp
adc
cmp
cmpsb
jb
push
test
mov
xchg
lods
repnz
movsl
inc
adc
inc
xchg
in
fnstsw
sbb
cmp
mov
and
mov
in
imul
cmp
xchg
jo
mov
xlat
fildl
fidivrl
bound
xlat
stc
dec
xlat
jle
lock
lods
pushf
sub
jg
mov
pop
add
es
pop
adc
iret
adc
imul
addr16
or
inc
sub
push
gs
add
push
rorl
xchg
mov
cld
mov
pop
adc
add
sub
out
xchg
int
pop
imul
cmp
jl
out
cmp
mov
shl
loope
nop
jp
scas
in
push
dec
ret
repz
push
jb
cmpsl
out
fs
or
jns
add
es
in
mov
xchg
shrb
xchg
insb
or
fs
sti
mov
jno
push
mov
imul
xchg
push
pop
mov
sbb
adc
jbe
push
lea
add
pop
leave
scas
mov
loope
bnd
subl
gs
dec
int
int3
cltd
js
cmp
gs
mov
daa
push
mov
jp
xor
loopne
lret
inc
push
inc
push
dec
test
push
jge
jle
or
or
jnp
push
pop
sarb
insb
out
mov
inc
mov
loopne
cmp
lds
or
lods
cwtl
int
mov
outsl
push
mov
stos
paddsw
in
stos
push
test
pushf
imul
int
ljmp
adc
in
inc
sub
mov
daa
icebp
test
sub
adc
xor
jnp
sbb
mov
sahf
mov
mov
mov
jae
fdivrp
jl
mov
xorl
cmp
arpl
sub
sbb
addr16
loopne
ja
mov
xlat
test
int
decb
mov
stos
sbb
lods
neg
jg
push
xchg
cli
and
jg
mov
jb
arpl
adc
lods
push
rcrb
sbb
xor
ljmp
xchg
xor
mov
nop
jle
test
sbb
std
inc
inc
stos
push
add
enter
push
pop
stos
jle
jae
inc
mov
ja
push
and
and
cltd
jmp
jg
xor
scas
xchg
bound
mov
stc
xchg
sbb
sti
jno
dec
mov
sub
push
orl
mov
aaa
popf
test
mov
stos
lds
pop
adc
and
xchg
jbe
int
or
cmp
jl
outsl
mul
nop
gs
mov
mov
outsl
prefetch
cwtl
aam
cmp
xor
test
or
and
xor
xor
push
pop
jns
mov
jb
inc
divl
fnstsw
push
sub
jg
jae
bound
cmp
dec
call
adc
mov
and
int3
cmp
in
dec
and
mov
xchg
dec
mov
leave
mov
inc
aad
adc
and
pusha
ss
ja
sub
xchg
fisttps
dec
and
mov
mov
sbb
lock
sbb
dec
das
sbb
sub
and
dec
mov
inc
and
hlt
int3
and
fdivrl
cmp
push
pop
lret
mov
inc
xchg
jecxz
icebp
js
xchg
ret
shll
adc
pop
lds
pop
push
lds
pop
push
jge
imull
and
inc
scas
imul
sub
pop
shll
add
pop
stos
test
in
jne
push
fstpl
fstpt
push
jae
ret
shlb
inc
nop
jge
dec
or
or
sub
stos
lret
sbb
add
mov
jmp
jmp
fwait
aaa
jo
xchg
xor
xor
pop
in
jo
sarl
in
mov
aaa
adc
sbb
outsl
mov
outsl
mov
sbb
add
je
dec
push
shlb
sbb
sub
cmp
dec
ret
sbb
push
stc
inc
mov
lret
lods
sbb
out
fwait
cmpsb
das
aam
cmp
mov
pop
das
roll
loopne
gs
in
cmp
sarl
xchg
jge
mov
xchg
lret
adc
cmpsb
mov
xchg
add
sub
lock
push
pop
mov
addl
or
lds
mov
mov
enter
mov
ljmp
inc
sub
seto
xor
mov
sbb
popa
sbb
fnsave
jge
push
sub
imul
shl
dec
and
repnz
mov
loopne
jnp,pt
mov
sbb
in
je
mov
pop
inc
sbb
fisubrs
pop
push
mov
inc
divl
cmp
adc
int3
stos
fs
mov
and
jnp
loop
mov
pop
fdivrs
adc
sub
pusha
dec
dec
loopne
add
data16
add
lods
loope
rcrb
jmp
aam
mov
sub
into
pop
fs
cmp
fnstenv
cmp
cmp
insl
cmc
jmp
insb
push
mov
mov
test
out
test
and
cmc
mov
mov
lods
xchg
scas
inc
sub
fistps
cmp
pop
pop
adc
sarb
dec
aaa
fldt
or
outsb
jge
imul
and
inc
pop
jl
rcl
cmp
dec
ja
popf
hlt
adc
loopne
adc
sub
lods
lcall
xchg
je
mov
and
sbb
lods
dec
orl
sub
cwtl
push
sarb
jg
dec
arpl
mov
movsl
outsl
gs
xchg
jl
mov
mov
add
xchg
jl,pn
fisubrl
pop
mov
popf
fs
lahf
xor
xor
dec
inc
sub
test
add
scas
pop
mov
xor
outsb
cli
mov
popf
shll
imul
inc
mov
in
rolb
sarl
jecxz
jecxz
ja
repz
jecxz
sbb
pushf
scas
xchg
pop
push
sub
aaa
stos
ror
inc
mov
fs
inc
mov
jae
push
cwtl
xchg
pop
and
loopne
mov
push
push
mov
cmp
jmp
adc
push
mov
imul
cld
ja
xchg
in
dec
pop
xchg
movsl
lds
ljmp
test
pop
sarl
dec
sub
mov
popa
mov
hlt
aam
rcll
push
jae
add
push
adc
cmc
test
cmp
pop
stos
ret
cmp
movsl
mov
clc
in
sbbl
inc
sbb
movsl
lret
leave
add
dec
inc
mov
mov
and
mov
in
sbb
clc
dec
pop
cmpsb
cmp
push
adc
cmp
pop
jmp
push
popa
sub
xchg
imul
sarl
and
movsb
pusha
das
imull
cmp
lock
mov
insl
sarb
push
push
xchg
lds
dec
inc
pop
fisttps
sub
sbb
ret
fildl
xchg
add
aad
sbb
jbe
xchg
fwait
jae
mov
or
dec
ficoml
out
or
clc
mov
lods
pop
fs
enter
push
lods
jecxz
pop
mov
sbb
imul
ret
filds
push
fildll
out
mov
jecxz
imul
adc
ljmp
fcmove
jb
lods
loope
ljmp
pop
xor
mulps
push
dec
push
lcall
or
dec
mov
gs
ja
fnsaves
mov
jne
mov
jb
dec
call
clc
insb
mov
pop
jle
jmp
fnstenv
inc
cwtl
lods
ret
clc
imul
out
cld
cmpsl
lods
into
inc
imul
pop
js
shlb
mov
fld
push
sbb
pushf
xchg
cmp
inc
insb
cmc
pop
scas
xlat
int
add
aad
sbb
cld
sub
push
mov
push
pushf
adc
cmp
clc
pop
pop
je
xor
jp
shrb
xchg
mov
push
sarl
dec
cmp
les
iret
adc
loopne
jle
insl
cltd
jmp
mov
sub
loopne
jb
dec
push
mov
add
push
into
sbb
insl
cmc
mov
add
pop
pop
std
lock
mov
adcb
xchg
je
ret
outsl
repz
xchg
adc
and
dec
mov
add
hlt
sub
dec
iret
mov
jne
std
movsb
jp
dec
xchg
repz
icebp
mov
sbb
xchg
test
fbld
xchg
stc
pop
push
iret
mov
ljmp
push
mov
adc
cli
jnp
push
out
sahf
or
or
lds
mov
cld
outsb
jnp
int
sbb
stc
xchg
mov
push
and
rcll
mov
jp
test
or
and
sti
push
out
jns
push
adc
sbb
adc
ret
and
xor
add
imul
mov
stos
dec
mov
in
mov
mov
jecxz
xchg
mov
adcl
loope
in
jp
out
push
pop
sti
xchg
cmp
cmp
mov
jbe
sbb
lahf
fwait
iret
pop
cld
mov
imul
popa
ret
rclb
fucomi
jno
in
and
pop
ljmp
lahf
sahf
push
adc
repnz
test
into
imul
cs
pushf
push
fmuls
or
xor
jecxz
pop
push
lods
rcl
push
loopne
lret
lock
xchg
pusha
dec
pushf
out
bound
shlb
push
sub
xchg
push
sub
aaa
fsubp
aaa
push
cmpsb
inc
fsubrl
inc
inc
mov
fdivs
dec
enter
xor
mov
dec
push
sub
pop
jne
lds
cmpsb
inc
test
mov
cs
dec
ss
fwait
ret
cmp
adc
inc
pop
mov
shll
inc
cli
les
imul
add
xor
mov
idivl
dec
jge
pusha
inc
lcall
sbb
mov
mov
mov
pop
or
add
push
enter
or
pusha
sti
jae
dec
pop
mov
push
adc
out
das
jnp
inc
inc
add
push
or
dec
andb
leave
js
mov
mov
push
sub
fcompl
mov
jb
mov
fcmovu
mov
xor
mov
test
repnz
inc
cmp
ljmp
xchg
loopne
jle
pop
scas
popf
push
mov
mov
adc
pop
sbb
and
push
xor
xlat
inc
mov
pop
adc
inc
fldt
dec
ds
mov
xor
mov
mov
cmp
sub
adcb
mov
das
jne
nop
lcall
jp
mov
into
pop
ja
sub
inc
xchg
cmp
lret
jl
test
adc
fidivs
dec
cmp
repz
mov
int
pop
shlb
addb
mov
stos
rcll
ficomps
mov
sarl
adcb
call
sar
jp
lods
mov
xchg
sub
aam
adc
pop
test
std
fwait
mov
fs
shr
xor
sbb
rorl
aad
push
call
mov
ror
sub
push
jecxz
rol
stc
lret
cmpsb
int3
sub
test
and
mov
sbb
pop
jl
sti
jb
pop
insl
cwtl
cmc
mov
cmp
std
popf
out
hlt
or
ret
pusha
mov
push
ficompl
mov
nop
and
rorb
stc
test
push
add
add
dec
push
out
cmp
add
lds
into
lahf
xchg
dec
int
aas
gs
stos
test
in
std
sub
jne
xor
inc
je
and
and
and
shll
fisttpll
mov
and
inc
push
lcall
int
fs
push
mov
aas
leave
cmp
mov
dec
xchg
pop
fistl
sbb
jle
dec
lock
cmp
dec
or
pop
pop
dec
je
insl
jnp
lahf
adc
sub
cltd
mov
das
or
testb
sbb
rcrb
and
mov
dec
stos
mov
mov
aad
mov
push
jge
repz
sub
mov
push
pusha
arpl
sti
in
test
pop
call
cmp
sti
lea
bnd
adc
int3
push
mov
lahf
sub
mov
dec
sahf
jne
pop
addr16
and
sahf
imul
xor
loopne
mov
in
sub
in
mov
sbb
mov
lea
cmpb
out
rclb
inc
fmul
es
lret
lcall
xchg
mov
cmp
sub
or
sub
ss
xchg
cmp
sbb
cwtl
lock
insb
push
jb
leave
dec
lods
pop
clc
push
push
cmp
fs
idivl
out
std
dec
and
xor
jmp
cmc
imul
je
jecxz
out
adc
sbb
rcl
dec
or
mov
mov
or
fcmovne
or
rcr
mov
aam
xor
clc
xor
xchg
mov
mov
sbb
adc
push
jne
mov
std
stos
xor
call
fmuls
sub
aaa
mov
and
sbb
arpl
xor
rclb
inc
pop
mov
xchg
aaa
mov
incb
imul
jnp
shlb
push
ljmp
sbb
lret
xchg
pop
sbb
outsl
addr16
inc
cli
xchg
in
lahf
or
shlb
fnstenv
adc
mov
mov
fisubrs
in
or
fs
cmp
mov
fdivrs
sub
xchg
sahf
dec
or
mov
or
xor
mov
jl
mov
and
in
lret
push
mov
ja
jmp
dec
mov
cmpsl
mov
test
shll
cmp
mov
test
xchg
loopne
pop
lods
cs
xchg
in
xchg
scas
mov
jb
testb
jle
adc
adc
sahf
fcomip
outsl
xchg
int
loop
aas
dec
sub
jmp
repz
push
lock
ss
call
iret
or
add
movsl
in
mov
add
sbb
pop
fldcw
fdivrl
jns
jno
lcall
aad
xor
subl
das
enter
mov
pop
mov
dec
inc
insl
pushf
adc
xchg
hlt
in
mov
in
test
sub
mov
dec
sub
dec
push
inc
cli
jo
or
negl
pop
sbb
shrl
mov
jmp
mov
add
cli
aaa
dec
imul
push
rcll
ret
cwtl
cmp
mov
cmp
roll
sbb
stc
sahf
mov
in
sub
outsl
push
iret
or
and
popf
dec
mov
mov
or
decl
sub
nop
ljmp
aas
inc
imul
xchg
out
fsubrs
stc
sbb
xchg
push
fbstp
orl
lcall
test
in
mov
xchg
movups
dec
popf
loop
lock
std
popf
flds
fisubrl
aad
sub
lea
add
pop
xchg
cld
lret
cmpsl
sbb
pop
mov
dec
xor
std
push
test
add
dec
hlt
dec
dec
mov
and
sarl
scas
adc
xor
insb
mov
movsl
and
mov
imul
push
loop
xlat
test
push
push
mov
fldenv
xlat
aaa
push
pop
xrelease
pop
addl
xlat
fistps
popf
pop
lds
xchg
call
cwtl
es
lret
pop
mov
pushf
mov
xor
or
shrl
movsl
jne
dec
jmp
add
cld
subb
push
add
inc
roll
sbb
adc
fucomip
mov
sbb
pop
inc
add
sub
andb
xchg
bound
push
pop
dec
ret
cmp
adc
jne
stc
add
shrl
rorb
pop
leave
outsl
je
and
lds
lcall
pushf
insb
cmp
orl
xor
lds
mov
pop
lret
lods
adc
or
lret
outsl
cs
stc
cmp
aaa
sub
jo
test
data16
sub
cmp
data16
stc
popa
outsl
pop
std
mov
lods
xchg
xchg
popa
mov
fadds
xchg
mov
fstpt
pusha
sbb
lret
mov
push
insb
loop
push
movsb
jns
inc
test
mov
xchg
inc
sbb
fsubp
out
mov
divb
movsb
inc
xchg
push
xchg
aas
jno
lods
mov
mov
out
sbb
sbb
xchg
push
xchg
push
dec
roll
sub
jnp
xchg
adc
push
notb
lea
jb
xlat
daa
cs
imul
mov
insl
fsubrp
pushf
lock
stos
test
add
mov
mov
idivb
jp
sbb
jle
push
out
adc
fucomi
es
jge
or
data16
lret
ljmp
adc
jo
push
or
ss
jp
fidivs
ss
pusha
call
rorl
ror
stos
rorb
scas
sbb
xchg
xor
jno
mov
xchg
add
in
jbe
mov
push
ja
push
adc
cwtl
repz
add
popf
cmp
ds
cltd
sar
and
icebp
popf
pop
adc
cmp
fdivrl
push
fwait
and
test
xchg
cmp
aas
sbb
cld
and
sub
pop
sbb
fisttpll
sbb
daa
adcl
jp
das
xchg
outsb
dec
ret
push
or
fsubrp
in
sub
out
push
dec
into
push
mov
inc
int
add
fs
call
xchg
pusha
mov
in
loop
xor
ret
sbb
stc
jnp
inc
aad
fstpt
xchg
cwtl
clc
or
sbb
stos
adc
mov
imulb
out
mov
dec
ret
mov
stc
shl
push
int
cmpsl
stos
pop
into
mov
movsl
loope
not
call
call
das
scas
push
xchg
cmp
fistl
pop
lods
sbb
cmpsl
mov
clc
insl
or
mov
push
mov
cwtl
hlt
lods
lock
mov
in
pop
addr16
js
movsb
mov
into
sbb
push
mov
sbb
stos
xor
mov
pop
rcrb
mov
mov
or
push
sbb
inc
push
xor
xchg
sbb
xor
dec
gs
lret
adc
mov
gs
pop
mov
push
mov
mov
cmp
sub
ja
xchg
lods
pop
sbb
fadds
push
mov
pushf
mov
push
mov
insb
aas
push
lea
mov
nop
push
inc
insb
jnp
popa
dec
cmp
loope
add
add
sbb
push
inc
sti
lahf
hlt
stos
adc
out
jg
xlat
es
pushf
imul
mov
cmp
sub
dec
mov
lahf
das
add
addr16
dec
int
bswap
push
adc
pop
pop
leave
mov
scas
xor
scas
dec
daa
jmp
cmp
into
xlat
xchg
lahf
push
mov
pop
scas
mov
pop
iret
loope
orl
es
jl
in
inc
pop
and
mov
mov
mov
sbb
imul
mov
push
mov
xchg
cli
pop
jle
sbb
fildll
mov
mov
bound
mov
nop
mov
xor
cmc
jl
sarl
dec
inc
inc
in
mov
lcall
flds
xor
jl
sbb
mov
out
ja
cs
and
xor
setge
ret
popl
sub
in
push
add
int
xchg
inc
pop
sub
mov
dec
pop
push
xchg
mov
sub
into
scas
cld
ja
lahf
cltd
adc
xchg
aam
mov
loope
jge
add
dec
pop
fwait
jle
aaa
jl
dec
adc
mov
hlt
mov
movq
int
and
fdivl
add
mov
push
gs
xor
mov
pop
bound
imul
push
dec
pop
movsl
inc
iret
cmp
imul
fcomps
je
imul
ljmp
xlat
inc
push
lea
mov
bound
push
inc
lcall
cmp
push
ret
dec
xchg
pusha
ficomps
shrl
cwtl
push
mov
lret
aas
in
xchg
rcll
jno
addr16
or
push
shlb
jb
push
movsl
aad
cmp
inc
push
mov
mov
dec
mov
fbstp
mov
mov
sbb
jge
loop
push
fs
imul
arpl
fcompl
xchg
sub
or
pop
push
xorl
or
xor
out
mov
jb
mov
popa
bound
aad
aas
push
popf
sub
repnz
ja
xor
mov
lds
xorl
rcrb
stc
inc
imul
mov
and
dec
jno
pop
mov
dec
inc
jb
sbb
ret
outsl
xor
cmp
xor
jbe
sbbb
jo
push
jo
flds
cmpsb
xchg
pop
arpl
jecxz
push
pop
xchg
jmp
ret
xchg
negl
jnp
mov
xchg
shlb
add
mov
lock
imul
loope
jl
leave
out
mov
or
sar
push
mov
test
testb
sbb
dec
imul
loop
movsb
dec
fs
mov
mov
jne
data16
cmpsl
sub
dec
xor
add
out
test
xorl
cmp
pop
scas
jmp
cs
das
mov
loope
out
mov
or
cwtl
push
cmp
push
insb
jnp
jmp
loop
insb
sbbl
rcll
cmp
push
mov
xor
not
and
cmp
insl
in
imul
or
sbb
or
push
ds
xor
jo
ret
pop
sub
repz
das
insb
push
mov
inc
xor
pop
cld
int3
lcall
pop
push
push
pop
jp
aaa
repz
xor
in
lcall
jne
add
sub
enter
es
pop
out
inc
jae
lods
adc
mov
pop
dec
imul
cmp
sub
lahf
outsb
and
lock
jae
pusha
std
adc
es
pop
stos
inc
add
xchg
xchg
sub
mov
and
mov
lods
xor
sahf
dec
fmuls
mov
xlat
mov
int
cmpsb
jecxz
push
or
out
pop
mov
out
mov
lds
outsb
xchg
cmpsl
mov
inc
out
and
jnp
aaa
rcrl
push
xor
adc
hlt
jo
sbb
cmp
push
arpl
xchg
iret
imul
fsubr
push
mov
push
icebp
daa
pop
push
out
test
pop
rolb
pop
pop
fidivrs
cltd
xchg
lods
xor
xchg
cmp
xchg
push
in
cmp
pusha
sbb
loop
cmp
in
or
xor
or
jns
cmpb
dec
ds
jo
jnp
xorl
inc
insl
rorl
lods
sbb
loopne
jecxz
das
xchg
js
in
imul
mov
push
xor
icebp
out
shll
test
jge
and
mov
jne
jns
loop
pop
xchg
pop
or
cmp
dec
stos
mov
repz
nop
cmp
dec
jge
out
or
push
push
les
dec
sbb
stc
mov
jns
cs
inc
mov
xor
and
out
pop
cld
aas
xchg
or
out
adc
lret
xchg
je
inc
inc
incl
fld
repz
repz
mov
inc
inc
mov
scas
mov
push
mov
push
adc
or
jecxz
mov
mov
movsb
and
test
movl
outsb
add
sahf
xchg
mov
xchg
jmp
mov
jg,pn
outsl
ljmp
jmp
repz
dec
dec
popf
test
xor
ficoms
cld
pop
and
ljmp
cwtl
xor
sti
stc
adc
inc
lcall
push
ror
mov
inc
or
lret
in
xchg
push
xor
cmpsl
push
addr16
ja
mov
addl
clc
insl
push
daa
push
push
xor
mov
adc
lcall
xchg
add
mov
lret
push
xchg
jnp
je
repz
lahf
loopne
lahf
cmp
out
sbb
dec
imul
jp
adc
mov
mov
xlat
rcll
enter
test
mov
mov
pop
sbb
lret
dec
outsl
add
and
es
inc
test
sbb
in
xor
daa
stos
xor
ss
pop
test
gs
or
mov
lcall
das
fcoml
divl
ja
inc
mov
int
ret
lahf
repnz
aas
jnp
xchg
jb
push
mov
fistpll
inc
dec
sbb
adc
xchg
xchg
inc
addr16
cmp
add
pushf
sbbl
mov
cwtl
sbb
mov
sub
jmp
and
xchg
inc
pop
lods
pop
mov
loop
mov
cmp
psrld
popl
xchg
and
mov
cmpsl
sub
pop
xchg
xor
mov
mov
out
jge
iret
std
xchg
movsl
clc
mov
in
push
pop
dec
loope
inc
idiv
arpl
out
push
push
push
xlat
cli
xchg
test
sbbl
int3
insl
or
ret
out
mov
fs
add
cwtl
clc
stos
cli
mov
stos
clc
mov
jge
pop
in
xchg
int
sti
mov
sbb
push
lods
ss
xor
xchg
xor
pop
aad
mov
push
xchg
cld
jnp
xor
xor
lods
sub
pop
pop
push
hlt
hlt
ljmp
xchg
sub
ljmp
xorb
dec
push
cld
addr16
sbb
outsl
call
cmc
cmp
mov
fisttps
lock
shr
shr
cmp
xor
cltd
popa
scas
mov
inc
inc
insb
push
sahf
jle
lods
mov
push
xchg
push
jbe
test
inc
dec
pop
xor
pop
lret
or
sub
push
xorb
dec
dec
push
negb
cwtl
clc
jg
inc
shlb
stos
pop
jb
gs
cld
push
fsubrs
and
jbe
dec
icebp
xchg
mov
insb
out
mov
mov
fiaddl
sbb
lret
cld
adc
insl
ss
jge
int
xor
rcl
xchg
pop
sub
daa
push
add
jge
fs
push
mov
ret
mov
cld
cmp
dec
das
iret
mov
outsl
push
or
pop
mov
mov
jo
xchg
ja
cmpb
pushf
mov
shll
into
cmc
inc
adc
popa
fcoms
xlat
cmpsb
jle
push
rclb
mov
in
dec
movsl
sarl
xorl
inc
sbb
into
add
cmpsl
and
addl
mov
rorl
jp
mov
in
clc
sti
and
pop
imul
fisubl
and
push
mov
dec
repnz
push
jo
insl
or
divl
xor
sbb
and
jl
scas
dec
sbb
inc
mov
loopne
jmp
jns
xor
push
leave
inc
fisubrl
fcmovbe
shlb
les
lock
rorb
mov
loope
push
addr16
xor
stc
and
dec
sbbl
mov
xchg
jmp
adc
sbb
jmp
dec
push
outsb
sub
xlat
subl
xlat
mov
mov
data16
inc
mov
outsl
mov
aad
fdivr
inc
sbb
addb
stos
in
jmp
out
dec
loopne
int3
mov
sbb
add
test
dec
rorl
push
mov
mov
mov
pop
push
hlt
mov
add
bound
filds
dec
xchg
pop
test
es
inc
lock
adc
mov
test
push
push
test
fdivs
hlt
in
cli
mov
jge
aad
add
loope
sub
xor
push
test
jl
cs
das
jecxz
je
jp
sbb
adc
dec
jp
popf
ds
rcll
push
pusha
xchg
cmpsl
mov
es
mov
adc
fwait
es
jbe
dec
js
cmpsb
dec
and
lahf
dec
scas
leave
jmp
inc
sbb
push
aam
fisttps
les
mov
sub
clc
xor
inc
adc
scas
test
fsts
cmp
pop
pop
movsl
imul
stos
push
mov
in
lahf
fistl
aaa
cmp
insb
push
sbb
add
into
push
sbb
mov
cmc
adc
dec
sub
cmp
cmpsb
in
adc
pusha
movsb
repnz
and
lret
shrb
add
das
pushf
cmp
mov
mov
jg
out
xchg
aas
test
jo
cmp
addr16
mulb
dec
push
xlat
lcall
dec
divl
adc
shll
dec
inc
jle
hlt
add
inc
xchg
mov
test
sub
sub
dec
sbbb
lret
pop
daa
testl
mov
test
lea
shrb
fwait
sbbb
sbb
inc
pop
scas
mov
outsb
mov
aaa
xlat
and
jmp
jg
in
or
add
call
push
xlat
cmp
aad
daa
adc
xor
push
inc
dec
xchg
cli
pop
mov
bound
hlt
fdivrs
xor
add
mov
sbb
mov
push
or
xchg
ret
jae
adc
ljmp
ret
cmc
mov
cmc
mov
frstor
les
push
sti
dec
sbb
add
lock
mov
mov
xor
les
mov
mov
adc
shlb
mov
xor
pusha
stos
sarb
push
mov
in
jbe
mov
mov
nop
xchg
jle
outsl
mov
push
push
xchg
imul
dec
lods
dec
in
js
xor
sbb
arpl
shrl
jg
mov
jg
loopne
das
mov
sahf
sti
data16
add
push
inc
cmp
cwtl
jo
ss
nop
stc
lcall
cmpsl
sti
mov
test
or
add
dec
cmc
push
inc
pop
add
dec
jp
inc
cwtl
js
cmp
mov
ss
push
and
xor
jge
arpl
lret
call
subb
shrb
ds
in
mov
cmpsb
and
xchg
lods
adcb
std
jl
add
cmp
aam
lods
int3
stc
cmp
or
inc
xchg
les
xchg
xchg
ja
xchg
pop
mov
test
leave
jg
xchg
adc
jle
aas
insl
sbb
and
imul
sahf
cmovl
mov
pop
sti
lds
sub
jge
jecxz
mov
xchg
call
in
sbbb
mov
in
add
inc
ja
in
cmp
out
ds
lret
dec
pop
sub
xchg
push
or
out
ja
pop
jg
adc
push
jmp
push
inc
and
and
lret
enter
addr16
lcall
xor
and
xor
xor
or
sbb
sub
je
push
mov
push
adc
ja
fldenv
jp
hlt
mov
jecxz
scas
push
lcall
dec
cmpb
iret
dec
pop
mov
push
xchg
outsb
dec
mov
xchg
imul
xorl
js
cmp
mov
movsb
cs
xchg
jb
mov
nop
lahf
leave
inc
inc
lods
in
jmp
mov
jle
mov
xchg
push
sar
adc
or
sbb
dec
xlat
fldcw
mov
aas
insl
jmp
cmc
je
mov
das
imul
add
cmp
fcoms
insl
fidivrs
clc
addr16
mov
jmp
push
ja
inc
sbb
out
dec
in
or
xor
les
shr
cmp
or
lods
push
shll
ret
popf
add
lret
push
adc
mov
fs
push
cwtl
vmwrite
pop
or
cld
sub
cmp
in
xorb
repnz
mov
ret
add
je
mov
cmp
mov
add
mov
mov
sub
outsl
mov
js
mull
call
sub
int3
notb
mov
repnz
push
jo
fldcw
popa
dec
lds
push
push
mov
sbb
sbb
scas
push
push
cmp
sub
xchg
xchg
shlb
jno
divb
add
dec
adcb
pushf
sub
jne
les
sub
aam
inc
out
inc
in
lret
shrl
daa
aam
mov
test
mov
fcmovnu
in
enter
stos
and
adc
aaa
cmp
mov
add
sbb
push
loope
cmp
scas
pop
cwtl
jnp
icebp
inc
xchg
fs
inc
xchg
outsb
xor
sub
dec
popf
push
lods
dec
push
out
sti
fs
jmp
or
add
inc
mov
bound
movsl
iret
dec
cld
wbinvd
sbb
out
repz
sbb
in
push
xlat
imul
mov
notb
xchg
push
adc
mov
cli
les
xor
cmp
into
idivb
out
pushf
test
addb
daa
sbb
nop
loop
popf
dec
out
dec
sarb
scas
out
fucomi
aad
call
imul
jp
add
fsts
sbb
inc
sbb
adc
mov
shll
and
out
lods
icebp
mov
xchg
fucomip
cmp
dec
hlt
pop
scas
and
inc
inc
xor
insb
xor
cmp
add
or
mov
in
mov
testb
adc
push
aas
and
movsb
adc
hlt
jns
and
ret
push
dec
adc
outsb
es
das
movsl
mov
pusha
jns
aam
mov
cltd
pop
je
out
push
ffree
adc
daa
or
xchg
sub
jp
mov
mov
push
xchg
mov
mov
imul
outsb
pop
popa
jne
fnstcw
out
cli
xchg
sub
movsb
in
cmp
fnstenv
mov
push
mov
lods
xor
in
or
cmp
daa
or
and
imul
jno
gs
add
pop
jno
leave
cwtl
mov
std
or
arpl
fistps
adcb
cmc
xchg
xor
mov
inc
lods
dec
out
cmpsl
fisttpl
dec
fldl
sar
sbb
lods
sahf
jmp
int3
adc
ret
sub
gs
sbb
stc
clc
and
xchg
flds
sbb
aam
mov
lret
mov
jae
gs
jmp
insb
inc
pop
push
and
enter
or
mov
xchg
cmp
sub
adcl
idivb
push
xchg
push
dec
sub
movsb
inc
jmp
shll
addb
lds
imul
cmp
fdiv
movsl
mov
sub
xchg
movsl
adc
sbb
jb
ss
pop
inc
cmp
pop
jecxz
push
xchg
push
adc
jbe
in
outsl
or
fwait
and
jge
mov
mov
insb
scas
ret
insb
call
push
out
arpl
mov
lods
fcmove
xchg
jl
imul
mov
cltd
lea
mov
jae
cmp
jle
cltd
mov
xchg
pusha
and
push
movsl
xor
xchg
shll
mov
mov
clc
and
test
mov
in
push
jae
xlat
jmp
pop
push
bound
push
frstor
sub
cmp
cltd
pop
push
jnp
adc
mov
jne
cltd
test
dec
cmp
lds
cmp
dec
ljmp
push
scas
dec
lock
cmpb
push
pushf
or
ja
jmp
mov
xor
push
add
push
shlb
push
mov
ja
rolb
adc
push
icebp
pop
lret
gs
pop
outsb
push
pop
aas
jnp
or
in
mov
clc
enter
ljmp
repz
cld
into
dec
xlat
or
hlt
or
aas
cmp
jae
push
int
push
mov
jne
and
aas
mov
pop
ja
sbb
cltd
pop
cmpsb
jmp
mov
pop
jge
mov
lcall
mov
cmpsb
outsl
jb
cmp
lahf
mov
fwait
and
mov
sub
lahf
jecxz
add
icebp
mov
stos
sbb
cmp
aas
add
sub
pushf
push
xchg
js
ljmp
mov
xor
xchg
dec
add
and
and
hlt
pop
imul
lcall
xor
xchg
xchg
mov
insb
dec
out
test
jmp
loope
inc
hlt
jmp
pusha
lret
or
icebp
fimuls
cmp
movsl
dec
stc
scas
xchg
cwtl
popf
popf
pop
aaa
adc
sub
fwait
mov
scas
filds
or
loop
xchg
out
fsubl
xchg
sub
jecxz
call
lret
lock
data16
and
movsb
dec
push
cld
fs
push
add
xor
ja
dec
js
fmull
fld
fistpll
popf
push
fimull
mov
mov
sub
mov
or
mov
xchg
cmpsb
inc
jbe
inc
push
imul
push
cmpb
mov
inc
sbb
mov
mov
lods
ret
inc
or
mov
jbe
dec
shrl
jge
das
fstps
and
xchg
push
pop
call
inc
sub
dec
bound
ficompl
cmp
push
shlb
rclb
lds
stc
xor
xor
lea
push
aad
mov
loop
push
cld
and
aas
push
bound
pop
or
mov
mov
mov
inc
push
das
xchg
xor
clc
adc
cmc
sahf
cwtl
inc
je
mov
sub
pushl
and
pop
movsb
xchg
popa
fs
sub
inc
repnz
mov
or
jecxz
mov
out
add
xchg
lock
scas
mov
call
cld
mov
inc
mov
push
in
jns
ret
pop
xchg
test
testb
test
dec
add
push
mov
mov
mov
sub
xchg
adc
adc
jle
jecxz
and
andb
mov
clc
scas
mov
enter
mov
out
sub
ss
and
sub
out
sub
xchg
fnstcw
jb
js
jb
test
repnz
scas
pushf
sub
push
out
scas
movsb
push
icebp
scas
pop
aaa
icebp
pop
lahf
mov
rcr
fwait
cmc
jmp
mov
enter
mov
xor
push
push
mov
sbb
xor
xchg
es
jbe
sub
or
cmp
mov
jle
in
outsl
leave
ljmp
pop
inc
push
xchg
cmp
adc
push
push
data16
push
call
add
sarl
in
jae
push
or
in
mov
stos
in
mov
push
and
or
adc
roll
dec
jecxz
inc
or
sub
pop
jno
lds
xchg
sub
repz
cwtl
or
insl
cmp
mov
shr
jl
jmp
dec
pop
shll
pop
cmp
sbb
je
adc
out
stos
adc
lcall
push
into
push
pop
pusha
inc
addr16
mov
sbb
test
sbb
cmp
xchg
dec
mov
movsb
cmp
fdivr
adc
iret
mov
insb
fprem1
cmp
jbe
add
icebp
loope
clc
jmp
imulb
xorl
cmp
lcall
aam
lds
sbb
loope
imul
shlb
je
inc
outsb
add
jmp
sbb
mov
mov
jmp
sar
cmpsl
fdivrs
in
out
sub
and
dec
jno
push
pop
mov
and
ds
adc
push
xlat
mov
jb
push
pop
sub
jae
sbb
cmp
aas
lods
xorl
jle
jnp
mov
cmc
jg
out
es
inc
popa
inc
flds
je
lret
sbbl
mov
outsb
je
arpl
jecxz
dec
push
and
mov
int
mov
repz
jbe
cmp
inc
into
push
add
pop
xchg
jo
fdiv
inc
cltd
jo
xsaves
inc
xor
cwtl
std
ds
fs
push
es
int
shlb
call
nop
pusha
push
xchg
cld
dec
je
sbb
xchg
xlat
rcll
cmpsb
je
mov
ret
and
mov
stc
dec
in
gs
and
ret
aaa
lea
mov
jp
push
movsl
cmc
addr16
push
addr16
cld
pop
je
hlt
test
ljmp
xor
ja
mov
aaa
cmp
cmp
xor
jl
test
insb
aam
mov
inc
mov
roll
fisttps
fstps
push
daa
cmp
cwtl
loopne
fs
js
dec
lret
int
ljmp
pop
test
lea
out
push
pushf
scas
fs
ds
popa
insl
or
mov
js
negl
vphaddubd
jns
in
jp
mov
jl
mov
mov
mov
inc
jl
push
add
mov
sub
dec
iret
aas
fisttpll
mov
mov
xchg
pop
mov
sub
or
sbb
pusha
movsl
jl
mov
add
mov
jecxz
pushf
jb
mov
cltd
push
xchg
fsubrs
xchg
mov
int3
pop
aam
mov
in
mov
dec
xchg
mov
adc
bound
shlb
add
in
aad
pop
cmp
mov
dec
jg
iret
cmp
cmp
jo
push
and
shrl
inc
jo
stos
mov
or
xchg
sub
sbb
outsb
std
cli
push
mov
push
or
mov
subl
nop
pop
push
dec
ja
shll
fsubp
mov
sbb
inc
fstpt
hlt
add
dec
in
shrb
shll
out
xchg
jno
enter
sub
xor
mov
mov
adc
adc
mov
je
and
mov
pop
shr
rolb
push
mov
mov
imul
cmpsl
enter
cvtdq2ps
addr16
testl
addr16
fcoms
aad
leave
arpl
mov
jp
and
sbb
ret
fdivs
in
sub
sub
mov
adc
dec
mov
shrb
mov
ret
mov
sub
sahf
popf
jae
dec
fwait
pusha
mov
sarb
jl
jae
aad
aam
cmp
es
ficomps
add
in
or
nop
sub
or
stos
lcall
mov
add
sub
into
cmp
cld
sbb
popf
pop
or
scas
jmp
add
pushf
dec
mov
mov
sbb
ss
les
out
pop
cmp
out
cmp
int
jle
into
clc
test
rcrl
jl
xor
lods
sbb
push
inc
rorl
mov
or
das
mov
enter
repnz
inc
rorb
adc
in
test
sbb
cmp
lock
enter
mov
inc
sub
das
sahf
lds
push
add
mov
and
xlat
lods
mov
xor
sub
stc
inc
mov
fstl
icebp
fdivrl
sub
int3
push
lods
lret
out
ds
int
cmp
sti
das
sahf
adc
les
mov
fwait
nop
outsl
xor
dec
sub
sbb
mov
fiadds
cmc
mov
hlt
mov
and
movsb
jo
push
aam
cmp
adc
ja
pop
out
mov
jns
mov
out
lods
aaa
jecxz
pop
es
dec
outsb
mov
lahf
popf
xchg
aas
jg
or
jo
xor
mov
jl
xchg
mov
test
sbb
test
rolb
addr16
scas
push
push
mov
sbb
or
loop
les
pop
ret
sub
dec
cwtl
outsb
xchg
stos
aas
into
or
test
jg
mov
scas
dec
push
addb
xchg
push
fsub
push
push
fnsave
xchg
dec
xchg
cmp
pop
insb
sub
movsl
sbb
cwtl
ret
aaa
push
xor
ss
push
pop
incb
nop
cmc
sub
pop
gs
test
xchg
push
roll
or
imul
mov
fwait
movsl
mov
and
shl
cmp
ffreep
inc
sti
stos
in
jns
sub
jne
loope
arpl
insl
and
loopne
lret
sti
lahf
dec
sbb
inc
rcrl
sbb
lock
push
in
outsl
in
inc
dec
mov
jge
inc
jae
das
jmp
add
xor
bswap
packsswb
aam
and
xor
ja
push
and
xor
aas
pop
push
shlb
shll
inc
cld
xor
xor
xor
or
inc
ret
mov
xchg
scas
adc
mov
in
inc
js
jae
jp
xchg
mov
sbb
into
rep
jno
inc
leave
or
rorl
loop
sub
addr16
cli
pop
mov
xchg
pop
and
sub
movsl
out
adc
imull
enter
xor
mov
in
xchg
mov
adcb
sbb
sub
pop
add
jbe
gs
outsl
addb
fnstenv
sub
sub
mov
dec
aad
and
mov
into
test
rclb
adc
cmpsb
inc
dec
out
out
scas
rcrb
add
outsb
in
jo
jno
adc
push
lods
imul
outsb
lret
xlat
stc
bound
idivb
std
push
inc
xchg
movsl
xchg
loopne
repz
aas
xor
fildll
sub
lahf
ljmp
sbb
lahf
jno
cmp
mov
mov
xchg
mov
add
cmp
jns
fistl
and
ss
sbb
test
dec
movb
call
add
cmp
cli
and
mov
adc
pop
sbb
push
popa
punpcklwd
or
nop
xchg
dec
lds
in
ljmp
sub
rcl
lds
in
fwait
jle,pt
push
cmpsl
and
mov
outsl
subl
jl
movsl
mov
jmp
pop
cmp
mov
je
out
and
adc
adc
shlb
out
mov
or
orl
pop
dec
pusha
add
test
je
roll
jo
stos
xchg
mov
sbb
fdivr
ja
dec
xor
pop
inc
in
std
icebp
frstor
mov
or
in
push
mov
lods
sti
shrb
lahf
or
shlb
jle
idiv
xchg
nop
push
mov
pop
lret
cmp
push
and
cmc
jl
push
ss
xchg
std
xlat
lret
push
sub
loopne
and
insl
mov
shlb
xchg
jbe
push
insb
scas
shrb
pop
cli
ds
pop
sub
lret
push
sbb
mov
mov
or
xor
scas
enter
push
xor
fadd
pop
mull
jb
jno
outsb
shll
sub
add
dec
fcomp
mov
adc
in
pop
aas
imul
or
or
mov
mov
insb
fidivs
push
iret
push
inc
add
jl
lock
cld
sub
jb
je
fildl
dec
adcb
outsl
adc
xor
push
clc
addl
dec
and
push
loop
inc
fadd
push
push
add
pop
stc
dec
in
sbb
mov
sub
js
leave
adc
push
cmp
ljmp
push
sbb
fistps
xor
pop
cmp
dec
arpl
sarb
xchg
push
push
testl
fmull
incl
xchg
pusha
inc
out
in
jge
xchg
test
int
cwtl
xchg
xchg
leave
xchg
sahf
jecxz
into
mov
je
ljmp
fldln2
inc
jns
and
mov
push
mov
xchg
or
sub
push
inc
fdivrp
add
pop
mov
ret
push
repz
mov
add
fisttpl
inc
push
outsl
adc
fwait
cmp
dec
sub
pop
iret
ret
les
shll
jp
mov
popa
lods
ror
insb
js
sbb
ret
xchg
mov
xor
cltd
stos
outsb
and
mov
fcmovnbe
leave
insl
pop
inc
adc
mov
outsb
or
inc
mov
movb
mov
inc
sub
cmpsb
inc
cmc
or
dec
pop
mov
push
enter
into
cmpsl
push
movsb
mov
pop
leave
popf
fisubs
mov
sbb
mov
insl
inc
push
fwait
sub
hlt
mov
lds
inc
jmp
adc
push
and
sbb
das
sbb
fisttpl
pushf
push
int
xchg
jge
scas
je
xor
pslld
inc
push
sbb
out
test
or
fidivl
pop
adc
daa
mov
nop
jnp
addl
cwtl
xor
dec
lds
push
xor
dec
push
stos
xchg
add
push
loop
aaa
adc
or
dec
mov
stos
mov
in
loope
mov
outsb
xchg
ds
pop
or
xor
clc
icebp
dec
fidivrl
in
sbb
cmp
cld
pop
stc
fadds
mov
stos
push
pop
dec
jns
adc
dec
cmp
test
xchg
cmp
add
and
hlt
mov
pop
shrl
adc
jb
pop
fsubs
inc
cmp
pop
mov
xchg
mov
sahf
sarl
sub
cmc
fprem1
jge
shrb
mov
dec
maskmovq
testl
movsb
adc
lods
jnp
cmp
mov
fmull
inc
popf
sub
lods
xlat
scas
cmp
insl
hlt
insl
xchg
and
xor
push
popf
lcall
jge
lahf
rclb
pop
gs
dec
enter
add
lahf
fidivs
xchg
mov
mov
repnz
sub
loope
mov
or
jmp
fisubrs
add
xchg
inc
imul
jne
les
data16
adc
mov
scas
mov
aaa
ja
je
and
push
outsb
cmc
scas
fidivs
loope
out
inc
jmp
jg
fstpt
movsb
inc
leave
xlat
and
sbb
fwait
je
ja
dec
push
cld
cmpsb
lds
dec
pushf
pop
xor
into
pop
notl
test
mov
xchg
add
sbb
outsb
add
inc
add
jnp
xchg
sub
cs
push
sub
inc
sbb
cmp
bound
xor
imul
inc
xchg
icebp
in
dec
fcmovu
sti
std
push
cmp
or
sti
repnz
popf
dec
adc
xor
push
xchg
ret
push
add
loop
aad
sbb
outsl
inc
or
ljmp
scas
xor
jo
jmp
daa
movsl
jmp
inc
push
mov
inc
sarl
jno
adc
mov
or
lods
cs
xchg
and
fimull
pop
pusha
inc
popf
incl
mov
imul
shlb
xchg
or
outsb
cmp
push
cld
inc
push
cmc
and
mov
sbb
dec
xchg
hlt
jge
xor
inc
cmp
jbe
rorb
sub
push
insb
jbe
jmp
nop
pop
fwait
rclb
mov
add
inc
inc
xchg
sti
mov
cld
and
and
aaa
pop
push
nop
push
stc
push
enter
in
cltd
repz
outsb
mov
lea
lds
pop
or
outsl
cmp
rcrb
push
hlt
pushf
sbb
or
and
mov
or
push
lds
pcmpeqb
push
in
mov
call
es
add
ljmp
xor
pushf
nop
cmp
sub
int
testb
sub
int3
insl
mov
add
int
cli
cmp
mov
pop
cwtl
dec
les
sbb
int3
in
aad
fistps
movsl
adc
cmpsl
pushf
bound
push
repz
adc
pushf
popa
push
push
xor
je
xchg
inc
sti
ja
daa
test
ljmp
leave
fwait
notl
cmp
adc
jno,pn
testb
imulb
mov
adc
aam
fsub
iret
mov
xchg
sbb
or
mov
inc
cwtl
stc
push
mov
ds
jp
add
mov
jge
lds
sbb
fdivr
or
outsl
sahf
push
xor
stos
cmp
jmp
fidivrs
cld
fcomip
movsb
mov
out
sbb
je
data16
loopne
lods
leave
test
sub
and
push
mov
int3
aas
and
or
fwait
mov
fstpt
push
scas
je
insb
cmc
sub
mov
stc
movsl
repnz
adc
dec
sub
ficoms
adc
das
dec
add
movsb
cmpsl
fisttps
aad
and
add
lods
push
out
mov
add
out
pusha
leave
leave
cs
mov
fadd
scas
cs
mov
subl
hlt
and
push
imul
pop
mov
outsl
testl
mov
in
sarl
xor
fdivr
pusha
mov
stc
test
sbb
pop
scas
or
fisttpl
jl
les
xor
jno
leave
lahf
inc
fimull
test
jns
or
into
or
adc
divb
ret
rcr
lcall
mov
xchg
movsl
mov
ret
stos
das
adc
and
pop
and
aas
pop
sbb
push
ljmp
xchg
jle
or
mov
inc
out
cltd
cs
lods
adc
out
gs
add
test
add
push
stc
sti
ret
jne
leave
mov
lea
imul
xor
xor
divl
mov
lea
sub
bound
daa
adc
push
or
push
adc
cs
pop
fwait
sbb
mov
cmp
mov
jecxz
test
add
xchg
or
in
mov
xor
mov
xor
dec
sbb
mov
cltd
mov
mov
inc
fiaddl
inc
bnd
repz
jnp
pop
fistps
mov
jnp
call
loopne
idivb
push
and
cs
push
or
dec
cld
cmpb
fcomps
add
repz
outsl
ds
xchg
add
inc
fs
and
dec
loop
push
aaa
adc
inc
popf
lcall
xor
cmp
test
cmp
push
xlat
xor
int
ds
lcall
ds
aas
add
push
adc
ror
es
cltd
pop
mov
ds
rcll
fcoml
popa
dec
clc
jae
jne
cli
xchg
imul
cmp
movsl
imul
pop
add
fcomps
mov
push
or
inc
popf
test
pop
testl
mov
ret
out
pusha
xchg
push
stos
inc
mov
sbb
pushl
enter
aas
enter
sbb
mov
cmp
aad
cli
arpl
mov
pop
add
pop
cmp
jmp
or
jns
std
pop
aam
ja
mov
inc
xchg
fwait
stos
aam
jp
dec
mov
hlt
movsl
ljmp
nop
int
fmull
and
xor
cmp
xor
lcall
sarl
and
push
lea
xor
shrl
icebp
jge
add
imul
bound
cmp
dec
and
rol
add
andl
or
cmp
sub
dec
inc
pop
aas
in
inc
xor
leave
push
and
inc
fcompl
lret
cs
sbb
sbb
jle
cs
sbb
fcomip
or
mov
xchg
inc
insb
push
mov
andb
adc
inc
xchg
fcmovnbe
mov
out
icebp
sbb
fnstenv
or
fdivs
add
hlt
mov
cmp
dec
mov
mov
xchg
hlt
fcmovu
loope
mov
xchg
adc
std
scas
pop
cmc
int3
jge
mov
cmc
xchg
subl
xchg
and
sbb
dec
and
push
xlat
dec
cwtl
cmc
jno
push
jmp
xchg
pop
dec
mov
fisubs
or
nop
xchg
aad
dec
or
orb
aad
or
les
sub
lods
pop
mov
es
jb
lods
sub
sub
add
mov
scas
sbb
cmpsb
xchg
push
push
pop
inc
popf
mov
pop
xor
push
roll
lods
call
test
stc
lahf
xor
and
lods
pop
jp,pt
and
add
add
or
test
sbb
sbb
push
pop
hlt
sub
lods
lods
leave
mov
add
fwait
sub
dec
sub
ret
and
mov
leave
inc
mov
ljmp
mov
stos
ds
js
or
push
xlat
popf
icebp
mov
hlt
pushf
sub
dec
aam
inc
arpl
hlt
dec
pop
daa
loop,pn
test
push
stos
stos
lods
lcall
push
push
incl
ficomps
es
loope
sub
push
jmp
add
sbb
mov
sub
jnp
add
shl
insb
inc
mov
enter
int
sbb
gs
loope
cmp
in
sub
sub
dec
jmp
std
mov
js
jbe
mov
push
jge
test
movsl
xlat
cmp
adc
loope
rcrb
adc
push
ss
adc
ret
push
sub
dec
pushf
scas
popw
mov
arpl
in
cmpsb
into
cld
dec
sub
outsl
sbb
sarb
jg
gs
adc
lcall
mov
or
cmc
mov
sub
add
sti
shl
icebp
cmp
push
xlat
mov
call
sub
and
sub
or
adc
clc
pop
sub
pop
inc
inc
iret
sbb
das
jg
jno
push
mov
sti
adc
jno
mov
enter
pop
mov
repz
sub
jbe
sub
push
pop
movsb
dec
and
push
jns
lods
dec
inc
imul
insb
sbb
jnp
in
aam
jge
push
cmpsl
aam
popf
and
test
dec
fbstp
xlat
loop
jp
scas
adc
hlt
ja
fiaddl
call
fwait
outsb
or
ljmp
movsl
and
jmp
iret
repnz
scas
repz
adc
fcmovnb
or
fsubrl
and
sbb
aaa
push
mov
pop
aaa
push
sti
and
fnop
or
sbb
pusha
out
shlb
inc
fwait
and
sub
movb
hlt
lock
mov
iret
das
je
popa
gs
inc
mov
insb
jg
mov
pop
push
push
xor
xor
jl
ds
cmp
hlt
stos
jge
arpl
icebp
mov
out
sti
ljmp
sub
and
fimull
vaddsubpd
pop
js
jae
rclb
arpl
ja
cmpsl
insl
icebp
in
xor
jle
mov
mov
xor
dec
inc
mov
out
sub
cld
loope
cmp
loope
addr16
sub
pusha
fsubrl
arpl
or
dec
mov
push
sub
nop
repz
pop
push
sbb
cmp
sahf
ss
sbb
cli
loopne
push
sub
dec
addr16
jns
sbb
outsb
xor
mov
mov
inc
lret
mov
lahf
cmpl
xor
aas
dec
ret
xchg
mov
sub
insb
sahf
mov
scas
mov
lret
lods
sbb
subl
cmpsl
sbb
dec
pop
push
cmc
out
shrl
sub
das
lock
leave
into
mov
jnp
rorb
cmp
adc
loope
fdivrs
sahf
outsb
lahf
push
pop
xchg
xchg
dec
inc
cmpsb
loopne
jecxz
add
and
xor
lret
jp
inc
test
adc
imul
fnstcw
cmp
daa
in
cmp
pushf
loopne
inc
dec
push
cwtl
test
cmp
cs
jo
sub
decw
jmp
ficomps
lea
enter
sbb
pop
ret
aas
mov
cmp
add
dec
sbb
pop
test
sbb
cld
push
push
add
jo
jge
scas
lods
or
adc
lods
adc
insl
pop
fbstp
jg
hlt
pop
push
fisttpl
inc
scas
loope
arpl
js
or
add
shll
mov
negl
lods
and
inc
jns
data16
ljmp
or
xor
push
in
inc
jp
pop
nop
imul
push
push
out
and
mov
pop
data16
mov
andl
out
cmp
shlb
pop
push
repz
add
pop
sub
sbb
popf
dec
push
or
popa
add
and
fimuls
in
test
or
dec
lret
sub
push
lcall
xor
mov
test
jecxz
mov
xor
aam
outsl
xchg
xchg
push
lock
add
mov
cld
test
sub
jge
bnd
jb
in
sti
dec
rcrl
nop
out
daa
mov
in
mov
pop
or
insl
fsubs
pop
mov
xchg
mov
mov
test
mov
pushf
push
lea
sub
lcall
leave
popf
imul
inc
and
insl
es
mov
test
int3
mov
xchg
call
inc
jno
cltd
sub
sub
in
jns,pt
xor
out
mov
mov
pop
push
inc
push
push
jae
shlb
imul
mov
bound
icebp
jp
sub
inc
dec
mov
xchg
imul
cmp
mov
add
jae
lods
dec
or
clc
fmuls
mov
cli
pusha
sarl
and
mov
in
test
and
movsb
inc
outsl
clc
aam
push
lock
stc
negb
push
add
pop
clc
in
filds
mov
sub
adc
xchg
inc
cld
outsl
adc
dec
and
scas
jns
arpl
jb,pn
fistpl
test
loope
and
cwtd
xchg
mov
jb
mov
adc
ljmp
mov
and
out
enter
in
loop
inc
jns
add
or
mov
fldt
add
popa
inc
adc
arpl
es
sti
in
push
cmc
test
fwait
or
popa
xor
sub
iret
call
mov
xor
loope
push
lea
lcall
out
pop
sbb
jl
xchg
loop
stos
data16
jae
ljmp
mov
or
ret
adc
cmp
clc
sahf
loope
cmp
xor
lret
xchg
jg
inc
inc
mov
sahf
mov
and
or
dec
inc
aad
xchg
test
add
es
mov
sti
frstor
ficomps
jns
and
adc
arpl
adc
xchg
fsubs
cli
mov
jg
leave
cmc
adc
sub
cmpsb
xchg
js
mov
mov
daa
insb
mov
dec
mov
jg
dec
mov
ficoml
inc
mov
ret
sbb
push
cmpsl
fiaddl
mov
stos
arpl
dec
rcrb
or
dec
cmc
jg
cmp
test
and
test
push
jecxz
lods
sti
mov
mov
and
gs
and
cmp
arpl
test
mov
add
adc
out
mov
push
sarb
jns
dec
cmp
shrb
cmpsl
sub
or
jae
incl
pop
xchg
repz
sbb
js
fistpll
xor
mov
loope
ret
les
lret
clc
pop
cwtl
xchg
sub
scas
out
ret
sbb
cmc
push
xchg
stc
mov
hlt
mov
insl
mov
inc
push
lret
mov
add
lret
std
pop
stos
es
mov
std
test
dec
std
pushf
in
or
xor
les
jns
jnp
or
and
sbb
arpl
lea
inc
inc
imul
push
jg
mov
pop
andl
inc
mov
mov
mov
push
pop
push
push
pop
xchg
lahf
xchg
in
mov
sbb
enter
mov
fsub
and
push
pushf
add
mov
inc
lods
jb
invd
xchg
js
cmc
popa
shr
inc
jg
dec
arpl
cwtl
jl
mov
and
rclb
cmpsb
mov
push
ret
scas
test
imulb
aas
int3
bound
lret
repnz
lods
push
sub
lods
add
movsl
loop
fsubrs
mov
inc
les
and
push
hlt
pop
add
inc
pop
es
or
jge
cmp
movsb
fbstp
iret
rcrb
bnd
loopne
shrl
push
fsubrl
mov
sti
jle
inc
insb
fcoms
lcall
dec
and
test
test
xchg
imul
inc
shll
movsb
jmp
fcoms
out
pop
das
cmpsb
in
mov
aad
movsb
or
xor
js
lea
popl
add
inc
int
add
mov
adc
imul
ficompl
insl
in
aad
insl
leave
xchg
sub
mov
sbb
pop
iret
ret
jg
movsl
and
rcrb
mov
sub
cmp
add
sbb
adc
xchg
add
sub
or
ja
icebp
push
in
pop
mov
lahf
cmc
sub
jmp
dec
xor
mov
xor
or
movsb
lret
xchg
xchg
xchg
aaa
mov
jmp
mov
jg
or
and
adc
leave
repnz
std
push
iret
or
imul
sbb
ffree
and
adc
ljmp
push
fdivs
out
insb
into
xor
xor
mov
orl
fs
jne
and
pop
or
xlat
push
dec
lods
fidivs
mov
movsb
dec
mov
stc
and
rol
xchg
mov
out
inc
jo
movsb
adcb
aam
movsl
cltd
mov
call
inc
jmp
mov
jbe
mov
pop
imul
cmp
inc
xlat
add
repnz
xlat
aad
fnsave
pushf
scas
xor
cli
dec
shll
outsb
sbb
push
pusha
mov
jg
xchg
mov
stc
cmp
ds
int3
outsb
sub
add
sub
or
jp
mov
jp
mov
pop
inc
loop
aam
addr16
mov
mov
inc
mov
push
xchg
inc
adc
icebp
testl
popa
jecxz
sbb
pop
jp
push
and
push
iret
push
xor
pop
dec
lea
call
cld
sbb
xchg
dec
push
outsb
mov
pop
adc
mov
out
sbb
mov
jae
pop
test
dec
add
fnstcw
inc
scas
cmpsb
jae
imul
lock
out
je
mov
je
leave
push
aas
lock
cmp
lret
icebp
sti
xor
ret
push
xor
xchg
ja
jl
adc
mov
bswap
mov
inc
push
insb
mov
push
gs
test
xor
int
dec
and
xchg
sub
cli
mov
fmull
pop
push
cltd
and
repz
push
mov
mov
ret
ficomps
jmp
js
mov
addr16
or
push
push
outsb
out
ja
sbb
cmpsb
popf
cmpsb
gs
scas
inc
dec
pop
aas
inc
mov
xorl
lea
mov
test
mov
mov
lds
xchg
cmp
mov
lret
push
clc
adc
push
ljmp
ss
std
pop
enter
xor
xor
adc
loopne
negl
cli
mov
addr16
or
out
inc
xchg
fwait
jp
aaa
int3
dec
inc
jns
xor
mov
in
movsb
dec
std
movsb
adc
test
ja
cli
test
adcl
es
pop
jne
cmp
lds
xor
imulb
dec
std
jbe
mov
fisubs
xor
cmp
jo
scas
ficomps
in
push
cli
repz
push
sti
aas
scas
and
lahf
ds
lahf
fisubrl
fdivp
lret
fs
push
into
adc
in
cmp
mov
pop
mov
adc
ja
jmp
xchg
mov
mov
jo
add
xlat
push
lcall
sbbb
stos
adc
sub
jmp
test
push
push
xchg
lret
sarb
push
sahf
ja
jmp
lret
dec
div
aaa
outsl
pop
pop
cld
call
fidivs
dec
out
sub
cmpsl
ret
dec
negb
aam
mov
pop
rclb
dec
test
stc
cmpsl
pop
popa
sub
add
loope
jmp
pop
jp
inc
stos
push
test
mov
pusha
xchg
add
dec
bound
xchg
cmp
mov
or
call
sbb
xchg
mov
dec
xchg
push
push
jl
push
sahf
inc
lea
push
ljmp
add
sti
inc
rcrb
imul
push
clc
sub
in
push
movsb
jns
sbb
arpl
inc
cmp
cli
and
adc
inc
mov
inc
pop
xchg
pop
cmpb
add
repnz
cmpsb
jno
arpl
mov
xor
adc
js
fisubl
int3
push
gs
rorb
mov
push
rcll
cld
js
push
xchg
stos
push
xchg
popa
cmp
and
dec
in
loope
leave
jo
pop
fstps
or
mov
jb
sub
xchg
arpl
pop
mov
mov
mov
inc
imul
out
call
bound
mov
les
je
or
jl
iret
test
in
mov
neg
lds
leave
mov
push
aaa
vunpckhps
mov
xor
pop
testb
pop
fwait
call
fwait
out
sub
jb
std
cmp
fwait
bound
dec
dec
lods
sbb
inc
insl
xchg
lods
ljmp
lret
jnp
inc
pop
fldcw
jp
inc
mov
jo
sub
scas
aad
idivb
jns
daa
in
push
movsl
lods
xchg
stos
aam
jo
rcl
mov
insb
sub
pop
fistpl
sbb
pop
jb
push
repz
jnp
sbb
jl
js
jbe
xchg
sub
mov
mov
xor
or
sbb
fisttpll
shlb
sbb
ja
hlt
outsb
mov
mov
mov
mov
mov
push
std
dec
loopne
movsb
mov
jns
addb
pop
cmpsb
cmp
ss
jb
xchg
negl
sub
cmp
hlt
loope
dec
das
xor
fstl
sub
mov
mov
push
loop
xchg
cmpsb
cmp
mov
test
mov
pushf
test
cmp
lret
sti
cmp
xchg
cltd
hlt
dec
fsub
jae
stos
push
frstpm(287
cmp
jmp
in
mov
and
dec
loop
jg
aaa
sbb
xlat
add
int
adc
lret
mov
push
jns
mov
adc
sbb
dec
xchg
inc
jle
das
pop
ret
xor
cmp
push
lds
mov
pop
ds
mov
cli
lds
or
and
sub
push
jle
sub
mov
aad
xchg
inc
stc
ja
push
data16
pop
jg
add
out
push
sbb
inc
mov
or
inc
sub
aam
outsb
adc
xor
mov
ljmp
sub
xchg
jae
pop
xchg
aad
mov
cld
push
push
loopne
dec
add
xchg
or
addr16
sbb
jl
inc
jns
aad
inc
xor
in
dec
test
aad
and
jb
cli
push
xor
inc
daa
xchg
cmp
mov
or
xor
push
xor
cwtl
push
out
pop
push
or
cmc
push
jl
jmp
stos
pop
lock
adc
inc
ja
pop
loop
in
popf
arpl
cli
sub
jle
mov
test
hlt
lods
pop
pusha
insl
add
and
andb
mov
loope
nop
fisubs
rcl
mov
aaa
sub
mov
sub
and
out
mov
push
jg
fsub
inc
jle
ret
fnstcw
cltd
push
stc
ret
call
sub
cmp
lock
cld
pop
mov
loope
inc
data16
jno
sbb
out
push
pop
sbb
ljmp
out
xchg
hlt
sbb
push
aaa
ljmp
or
mov
scas
rclb
xchg
xor
into
fidivrs
mov
cld
pop
mov
mov
adc
int3
int3
popa
jbe
shrl
test
add
jp
rcrb
mov
orb
leave
fldcw
std
push
cltd
iret
mov
inc
mov
subl
sar
es
mov
jle
shrb
jae,pn
dec
xchg
mov
lods
push
jp
js
dec
pusha
sti
pop
ds
xor
fstps
adc
out
movsl
rcr
test
sbb
scas
and
cs
mov
int
xor
push
jg
xor
mov
stos
inc
cmp
xor
pop
mov
out
mov
jns
out
insl
or
sti
sbb
inc
adc
stc
jge
pusha
pop
jp
ret
cmpsb
sbb
jg
mov
xor
sbb
popf
es
mov
mov
test
call
inc
push
dec
test
xchg
fisttpll
lock
sbb
cmp
popf
daa
in
jge
cwtl
stc
adc
dec
out
outsb
mov
outsb
ss
xrelease
aad
xor
mov
movsb
hlt
imulb
inc
sbb
js
and
jge
mov
test
imull
adc
dec
enter
stos
mov
sbb
push
stc
mov
mov
mov
rcl
dec
inc
mov
add
push
or
mov
xchg
adc
xchg
int
xor
inc
ror
ds
cmpsl
test
aaa
mov
into
mov
sahf
gs
and
mov
out
mov
orl
sbb
pushf
mov
into
adc
push
repnz
and
sbb
xor
lret
andl
ja
cmp
ja
pop
mov
call
imul
addr16
sarl
shlb
daa
mov
insb
popa
adc
inc
pushf
pop
cmp
mov
mov
mov
sti
test
mov
xchg
pop
rolb
push
adc
mov
aad
inc
xchg
sbbb
xor
fmul
dec
and
dec
xchg
sbb
lret
push
movsb
cld
xchg
mov
iret
mov
sub
fwait
out
pusha
adc
lods
mov
jne
int
sbb
mov
sbb
jl
out
repnz
add
sub
push
add
mov
adc
xchg
push
popf
inc
es
cwtl
cmpsl
outsb
or
sbb
idivl
add
jg
cmpl
jge
jl
pusha
xchg
shr
xor
sub
sahf
cmp
dec
cld
std
xor
push
jo
into
lahf
mov
mov
jp
enter
je
jno
add
imul
test
movsl
jne
cld
sbb
daa
mov
dec
pop
add
mov
hlt
outsb
pop
andb
mov
and
or
cltd
push
pop
leave
mov
xchg
and
push
insl
addb
out
push
cmp
sbb
push
jne
mov
pop
in
fwait
popa
rorl
add
mov
jns
add
mov
adc
and
mov
pop
and
movsl
into
testb
sahf
mov
pop
jno
rcll
notl
mov
sbb
inc
jns
adc
fwait
rorl
push
jp
inc
mov
cmpsb
jnp
cmpsl
sbb
add
cld
cwtl
mov
or
xorl
loop
push
ljmp
sub
inc
cmp
mov
jbe
imul
sar
sub
push
xor
ja
inc
leave
jecxz
popa
jo
fwait
push
mov
out
or
xor
sti
leave
imul
push
das
jp
out
adcl
fisubl
out
xchg
mov
call
cmc
hlt
mov
test
in
inc
imul
into
mov
andl
sbb
fstpt
jecxz
repnz
loopne
ja
in
inc
or
or
lahf
pusha
hlt
rclb
lock
imul
mov
lods
pop
add
cmp
push
xchg
xchg
loope
shlb
fldl2e
xchg
mov
in
in
rclb
and
xchg
aas
fs
sbb
jb
xchg
in
lods
shrl
dec
cld
pusha
emms
push
repnz
outsl
sti
inc
dec
stos
sub
add
shl
push
mov
mov
sahf
push
mov
mov
mov
stos
mov
movsl
scas
push
dec
add
jo
ljmp
adcl
pop
cmpsl
sbb
and
out
push
insl
cmp
cli
stc
ljmp
shll
add
sarl
movsl
popf
repnz
pop
daa
xchg
cmp
test
popf
bound
mov
in
push
rol
pop
cmp
adc
shlb
fstpl
and
dec
repnz
xchg
rol
dec
pop
mov
fimuls
insb
pop
or
jns
push
adc
mov
mov
mov
sahf
jb
lret
in
mov
jno
jne
inc
add
cli
xor
push
call
sti
pop
in
mov
jl
bndstx
fs
mov
in
mov
aas
pop
mov
fdivl
std
cmpb
daa
mov
push
xchg
and
push
xlat
ljmp
xchg
pop
and
pop
imul
sbb
popl
add
gs
inc
xchg
insb
into
cmp
out
in
cmp
dec
sarl
mov
rcll
push
sahf
pop
jmp
iret
mov
pop
out
call
mov
pop
xchg
stos
push
aam
adc
ss
sar
cli
and
div
dec
inc
stos
push
fwait
out
push
jne
push
aam
fidivrl
add
or
mov
call
jne
and
fadd
mov
shrb
repz
mul
add
pop
sub
cmpsl
sub
int3
cmc
sub
mov
mov
sub
ja
jne
pop
xor
pop
mov
fimull
test
dec
sti
idivl
add
loope
xchg
or
or
das
mov
jne
adc
pop
call
out
sub
in
lock
sub
adc
in
cld
out
and
jnp
adc
xchg
xchg
push
in
pop
addr16
ljmp
jge
into
and
adc
jne
ret
mov
stc
aas
inc
jmp
pop
mov
jo
les
cmp
mov
sbb
push
and
rorl
sbb
rclb
dec
cmp
mov
sahf
dec
mov
fs
jne
jge
dec
stos
mov
cmp
or
test
repnz
ret
pusha
cmp
adc
pop
hlt
cmp
cmp
outsl
cmp
xor
push
xchg
ljmp
xor
xlat
sbb
mov
fbld
les
pop
mov
scas
cmp
cmp
gs
push
sub
stc
jmp
aaa
xchg
sbb
or
cs
sbb
jle
xor
push
adcb
enter
mov
add
push
mov
enter
lret
push
pop
mov
or
mov
push
in
in
jmp
ss
pop
scas
lahf
push
hlt
fadds
xchg
mov
icebp
test
in
scas
pusha
lret
mov
pusha
mov
shrd
mov
cmp
and
in
lcall
fmuls
mov
lods
fidivrs
lods
inc
pop
jmp
cmp
mov
adc
jb
test
and
xchg
aaa
pop
inc
mov
push
mov
call
add
xor
jecxz
dec
cltd
sahf
mov
push
fs
xchg
lock
outsb
int
inc
iret
and
push
mov
jge
sbb
imul
in
orl
cld
mov
push
decb
xchg
xchg
jmp
popf
xchg
xchg
and
add
xchg
mov
sub
jp
xchg
pop
mov
and
add
mov
xor
or
cltd
sub
gs
es
mov
xor
cmp
repnz
xor
pop
push
pop
popa
mov
jb
inc
das
jmp
leave
mov
mov
xlat
iret
fstpt
sub
add
imulb
in
pushf
in
cmp
mov
and
or
iret
add
jno
cmpb
dec
xorb
fidivrs
dec
outsb
inc
lcall
daa
dec
test
sub
insb
aad
popf
outsl
inc
gs
push
push
testb
mov
sti
shlb
xor
xchg
jo
std
xchg
adc
mov
mov
sti
aaa
stos
xchg
imul
push
in
test
loope
out
lret
jo
ret
xchg
dec
cmp
stc
pusha
cld
cli
push
or
imul
aaa
test
push
decl
lock
dec
lcall
add
or
pop
mov
push
into
jp
hlt
test
std
popa
fidivrl
sbb
sarl
gs
inc
sahf
xchg
hlt
lahf
movsl
repz
int3
push
movsl
inc
mov
push
test
adc
lock
pop
out
arpl
daa
mov
inc
das
je
mov
popl
xchg
sub
sbb
test
dec
pop
mov
or
cmp
xchg
cmp
outsb
cmp
jo
cld
aas
movsb
mov
mov
mov
xor
and
add
roll
lea
mov
inc
or
repz
pop
pop
adc
mov
repz
test
and
push
mov
jecxz
js
inc
arpl
ja
int3
xchg
pop
dec
cmc
stos
sbb
sub
popf
jns
sbb
in
xchg
stos
adc
pop
popa
test
lea
pop
test
rolb
loopne
popa
rol
lret
repz
jge
sarb
cmp
loopne
push
jg
enter
movsb
les
iret
fstps
sar
test
cld
out
jns
stos
mov
leave
imul
adc
outsl
cmc
cli
xor
fsubr
push
sub
adc
mov
inc
xor
push
mov
into
pop
repz
push
mov
test
xor
jb
sub
xor
dec
xor
push
xchg
sahf
sub
add
jge
aad
aas
arpl
lcall
imul
fwait
and
repnz
jl
pop
icebp
lea
jae
and
imul
inc
test
out
fbstp
jg
dec
mov
push
or
and
rcrl
fnstsw
popf
cmp
fcmovnbe
mov
fs
mov
inc
cli
push
and
xchg
xchg
iret
or
movsl
jmp
dec
ror
lret
imulb
popa
adc
mov
leave
pop
mov
push
outsl
add
fwait
add
xor
lds
pushf
movsl
push
mov
jp
lret
inc
aaa
add
sub
lahf
ljmp
mov
fdivrs
jg
lea
xor
dec
jg
or
push
aas
push
push
jno
test
lds
mov
mov
or
mov
filds
cwtl
inc
mov
outsl
push
pusha
aad
adc
stos
lea
int3
mov
push
adc
push
dec
test
fwait
cmpsl
cmp
sbbb
cmp
lock
dec
lahf
es
sub
mov
out
push
dec
xchg
loopne
jg
jno
popa
mov
xor
and
add
imul
mov
ret
in
mov
pop
inc
jae
xchg
sub
xor
gs
rcll
jle
outsb
and
pop
mov
popf
or
sub
push
mov
fcomps
or
dec
jge
jl
or
and
out
into
sbb
add
mov
roll
test
aaa
inc
nop
inc
and
in
insb
mov
mov
xor
pusha
test
sbb
adc
mov
dec
pusha
mov
fsts
mov
arpl
pushf
jne
clc
ret
ja
je
jecxz
enter
push
mov
leave
sbb
outsl
jmp
test
add
cmpsb
pop
or
push
xlat
push
xchg
std
js
jae
pop
js
cmp
jo
cmp
dec
inc
pop
fsubrs
out
icebp
cs
pushl
push
test
push
and
arpl
jb
fdivrl
cmpsb
mov
push
mov
lds
push
ffree
out
and
xor
das
cmp
adc
cltd
loopne
cmp
push
pushf
mov
stos
cli
xlat
mov
jecxz
pop
cmp
mov
dec
add
push
out
es
filds
inc
push
aad
rorl
lods
mov
nop
nop
mov
jge
cld
inc
dec
inc
in
ja
jbe
mov
xchg
in
mov
add
cld
inc
cmp
jbe
sub
cmpsb
push
jae
stc
fidivrl
dec
js
leave
out
shlb
js
adc
push
outsb
daa
jp
mov
mov
in
lret
push
cmpsl
decl
jns
in
stc
mul
aas
inc
mov
and
loopne
pop
out
mov
pop
xchg
aad
jae
push
in
xchg
and
push
xchg
mov
popa
insl
scas
dec
int3
adc
add
aas
jecxz
into
xor
movsl
inc
pop
xor
hlt
dec
out
test
jb
add
jl
push
pop
es
mov
or
and
gs
int
in
push
stos
loop
mov
pushf
or
cld
fisttpll
mov
inc
mov
test
les
gs
add
inc
adc
in
adc
push
lret
pop
and
aas
test
xchg
test
enter
shlb
cmpsl
aas
xchg
jge
nop
orb
cmpsl
lret
sub
imul
cmp
dec
lea
jge
cmp
shll
aam
push
push
mov
inc
stos
jbe
cmpsb
sti
shlb
jae
jns
jl
jmp
sbb
sub
roll
or
movsb
mov
js
lds
jae
aas
mov
ficomps
das
inc
or
inc
mov
push
adc
popa
sbb
and
out
xchg
in
and
lds
shrb
negb
mov
in
subb
cmc
xchg
and
add
mov
mov
imul
and
ret
jns
pusha
cmc
sub
xchg
mov
dec
fldenv
scas
insl
in
add
cli
jecxz
enter
push
notb
in
inc
or
clc
xchg
xor
jp
xor
pusha
addr16
cmc
add
cmp
int
add
push
jp
in
mov
shlb
daa
or
push
out
mov
cmp
xor
ss
push
jge
adc
pop
lahf
add
push
out
and
sbb
enter
arpl
ret
adc
jle
dec
in
push
gs
fmul
fs
sbb
pop
pusha
pop
repnz
lods
cmpb
fnstsw
std
or
in
loope
mov
mov
sahf
mov
sub
cmp
pop
jle
xchg
nop
cmp
int
fnsave
xor
mov
lret
adc
cli
in
push
push
in
pop
insl
xchg
repz
lods
ss
loopne
clc
mov
outsl
lods
in
cwtl
cld
cmp
rcrb
xor
jae
lods
mov
fmul
inc
aam
js
or
fnstenv
push
inc
fiaddl
sub
dec
jns
std
lds
sub
inc
int3
mov
push
or
fbstp
das
movsb
adcl
insb
int3
dec
and
shll
clc
xchg
pop
sahf
pop
stos
xchg
aad
rorl
jecxz
xor
imul
adc
gs
mov
les
dec
nop
jo
cmp
lods
in
jno
xchg
jns
mov
mov
divb
mov
mov
gs
les
nop
inc
mov
sub
outsb
jae
mov
xchg
push
loope
adc
enter
out
aam
jbe
add
and
mov
add
cmpb
imul
mov
sbb
outsl
call
push
testb
loope
jns
mov
aaa
adc
repnz
jnp
popf
mov
fiadds
loopne
adc
jbe
xchg
push
mov
inc
clc
inc
and
sbb
cmpl
fs
inc
fnsave
lods
jb
or
sbb
push
in
xchg
stos
mov
iret
mov
xchg
outsl
and
iret
jp
cmpl
mov
add
and
pop
repnz
outsb
cltd
push
pushl
pop
dec
fnsave
bound
inc
rclb
mov
daa
dec
enter
dec
inc
mov
cmp
out
push
inc
mov
xchg
sbb
in
repnz
sarl
mov
test
jne
jne
repnz
outsl
mov
ja
mov
repz
jmp
dec
push
and
icebp
ja
cld
and
sub
lods
add
push
mov
mov
aaa
daa
xchg
mov
dec
pop
mov
int
ds
lods
push
cwtl
mov
mov
xchg
loop
pop
vmwrite
mov
cmpsb
mov
nop
test
inc
aas
pop
mov
daa
mov
sbb
cmp
mov
inc
mov
inc
gs
insb
aam
fldcw
scas
cmc
test
pop
push
imul
gs
xchg
addr16
test
lret
mov
and
jno
push
shll
or
outsl
adc
fwait
push
mov
xchg
and
add
pop
fiaddl
pop
add
cmpl
pop
daa
into
mov
adc
mov
arpl
inc
in
fldl
push
xchg
cmp
jmp
into
gs
jne
scas
addr16
pop
fstpt
pop
jge
test
xchg
movsl
mov
cltd
jle
subb
xor
out
ficoml
mov
cltd
xor
scas
loope
jns
pop
push
out
mov
push
ficompl
decb
cmp
std
push
js
push
popf
mov
movsb
jo
inc
adc
jecxz
jne
leave
adc
mov
fcom
or
or
dec
and
cltd
ja
dec
lock
cmpsl
mov
test
adc
pushl
sub
cmp
inc
mov
mov
in
dec
repz
xor
sub
insl
xorl
and
leave
mov
ss
push
into
ljmp
fimull
mov
into
jmp
inc
dec
int
adc
cmpsl
jle
gs
sub
in
fbstp
jmp
cmp
sarb
lcall
leave
ja
flds
mov
imul
subb
jg
rorl
push
int3
push
cli
push
gs
pop
jae
mov
ret
fwait
xchg
xor
or
ret
pop
add
add
jae
push
dec
popf
movsl
adc
jg
cmpsl
mov
dec
out
mov
dec
sbb
pop
mov
mov
sbbb
mov
pusha
pop
jb
xor
cltd
xchg
mov
inc
ffreep
rcrb
int
testb
xchg
push
movsl
aad
push
inc
jbe
and
xor
pop
jge
mov
bound
jb
jg
iret
repnz
fucomp
mov
out
pusha
int
lcall
xor
cmp
fs
test
add
xor
add
loop
sti
and
es
and
mov
fbstp
lock
out
or
cli
mov
movl
int3
fdivrl
out
sub
adc
and
push
andnps
icebp
leavew
dec
test
mulb
inc
iret
daa
dec
insb
and
inc
pop
mov
sbb
xor
stc
repz
stos
scas
subl
add
jle
popf
inc
xchg
pushf
scas
ss
cmp
xor
dec
add
jl,pt
dec
add
pop
shl
clc
mov
std
orl
pusha
dec
inc
push
adc
out
pop
push
mov
cmp
or
sbb
sbb
lahf
mov
pop
sahf
pushf
nop
ret
xchg
jecxz
int3
push
out
push
imul
xor
jp
int3
inc
jo
pop
add
arpl
inc
ja
mov
subb
rcl
and
mov
scas
cltd
fwait
dec
cmc
jmp
lea
movsb
sub
dec
inc
sub
and
sub
inc
pop
dec
call
mov
sti
cmp
xor
scas
jno
jbe
aaa
jmp
pop
fst
sbb
cmp
fdivrl
lock
xchg
rcll
sbb
test
mov
das
sbb
push
and
fdiv
or
sbbl
xor
dec
test
out
dec
jbe
mov
add
fs
mov
test
pop
push
xchg
or
fistl
in
cmp
xchg
imul
pusha
sub
bound
loopne
addb
pop
in
ret
cmp
xor
add
int
cmp
jl
pop
fildl
sbb
test
out
test
insl
outsb
std
lds
movb
adc
add
inc
es
jae
mov
clc
inc
addr16
lret
xchg
fisttpl
jne
sbbb
add
fimuls
idivb
mov
in
scas
clc
xor
jge
fidivl
mov
xchg
sbb
lret
adc
sub
stos
cmpsl
cmpsb
pop
pop
fnstsw
into
mov
sbb
arpl
cmp
xchg
mov
repz
push
pusha
orb
jecxz
cmp
enter
jbe
sbb
ja
or
and
xchg
mov
xor
adc
dec
dec
xchg
fildl
pusha
adcb
add
mov
jle
add
ret
jae
push
adc
lret
iret
dec
sub
mov
in
inc
mov
xchg
cwtl
sub
out
sub
jae
int3
push
mov
adc
dec
jge
iret
test
insb
repz
pop
stos
aad
outsl
test
xchg
test
jnp
mov
imul
and
xchg
pop
and
mov
shlb
je
stos
or
xor
arpl
jnp
adc
pop
popa
mov
ret
dec
push
xchg
into
repz
push
dec
movsl
jl
xchg
sub
sti
pop
int3
call
mov
xor
xor
add
repz
lea
xchg
push
clc
cmc
nop
pop
or
imul
lret
in
outsb
insb
enter
test
dec
xchg
jecxz
hlt
mov
xlat
imulb
jp
xchg
or
inc
push
push
mov
add
push
inc
add
mov
ja
test
pop
decl
adc
pop
jb
testb
out
cmp
dec
push
daa
pop
aad
adc
dec
fdivrs
push
out
test
mov
mov
daa
cmpsl
xor
xchg
pop
clc
xor
hlt
jg
mov
mov
mov
xchg
sub
in
mov
jge
sbbl
into
dec
pop
adc
in
push
ds
xor
lods
mov
lret
cmp
int3
inc
insb
test
pop
cmp
subb
push
test
sub
mov
jle
mov
fists
cmp
pop
mov
pushw
jge
sub
out
inc
xlat
mov
arpl
leave
adc
lcall
mov
cmp
cli
jno
pusha
out
sbbb
dec
sbb
mov
imul
dec
inc
aaa
mov
sarb
ds
xor
sbb
cmp
outsb
mov
dec
push
xor
mov
jle
cltd
xor
or
sbb
jle
mov
mov
test
push
cmp
fnsave
jle
push
dec
sahf
add
jb
pusha
scas
lahf
in
add
hlt
enter
shrb
gs
int
xchg
sub
das
fidivs
jmp
jb
jle
xor
sub
inc
jp
je
mov
mov
mov
xchg
fistpl
mov
mov
mov
subb
or
fstpl
xchg
dec
rorl
clc
das
hlt
repnz
dec
cmp
mov
mov
sub
test
test
dec
jno
mov
mov
mov
add
int
flds
dec
daa
mov
and
xor
mov
add
mov
jp
inc
ss
into
inc
jo
hlt
test
mov
dec
sarl
gs
mov
mov
inc
or
popa
sub
iret
sub
cmp
movsb
stos
jl
mov
push
sub
pop
in
and
mov
mov
lea
mov
rclb
lods
insl
test
mov
inc
pop
outsb
or
int3
popf
adc
jbe
scas
xchg
sbb
dec
clc
int
shll
pop
xchg
dec
add
mov
push
stos
jg
and
adc
repnz
notb
cs
adc
data16
js
mov
in
push
scas
aas
cmp
pop
clc
mov
inc
jge
xor
ljmp
fisttps
xor
push
aad
add
add
cld
xchg
sbbb
cmp
push
ljmp
ss
sub
sub
push
push
scas
not
nop
fisttps
xchg
lea
add
ja
inc
stos
out
aam
outsb
les
shll
pop
sub
xchg
call
pop
sub
adc
lds
lods
leave
ret
lods
pushf
add
mov
in
out
push
jge
les
aaa
jmp
inc
into
pop
cmp
xor
pop
gs
arpl
push
add
inc
jb
pop
pop
cmp
cli
and
sbb
fldl
inc
pop
jl
adc
or
adc
hlt
pop
inc
imul
into
or
dec
out
dec
insl
xor
aaa
cltd
sahf
jg
add
popf
shrb
imul
rcll
xor
outsl
lods
ret
loopne
addb
adc
jno
inc
movsl
xchg
adc
or
ds
outsb
add
xchg
push
orb
movsl
aad
sub
mov
lret
and
jnp
and
in
jge
repz
xor
fcoms
movsb
daa
xor
icebp
push
sar
test
mov
shr
mov
fs
call
jne
jbe
sbb
sub
sbb
or
loop
cltd
sub
mov
pop
aam
es
cmp
fwait
dec
sub
insl
icebp
iret
out
mov
cmp
in
xor
rcrb
je
stos
jne
jg
lahf
lret
pop
pop
fwait
lea
cmp
fistps
pop
stc
call
rorb
aad
repz
add
adc
adc
pop
mov
enter
mov
sub
xor
and
call
in
pop
std
inc
ljmp
push
pop
andb
cmc
xchg
ret
inc
or
mov
in
ss
pop
das
xlat
push
fsubl
imul
movsb
mov
ret
das
jnp
dec
cli
mov
xchg
adc
arpl
fld1
and
dec
ljmp
mov
fadds
adcl
lods
rcll
pop
jl
adc
loope
fmull
mov
xchg
dec
in
pusha
push
dec
fildll
adc
addr16
std
inc
fsub
or
pop
jne
in
push
adc
imul
ret
adc
or
lret
sbb
mov
mov
cmp
ss
xlat
pusha
xchg
jg
cs
scas
pop
mov
mov
inc
add
add
lea
loope
aaa
pop
push
xor
mov
jle
pushf
lret
sub
stc
rclb
sub
cmp
orb
sbb
repz
in
adc
ret
leave
and
cmp
repz
inc
mov
or
inc
pop
fistpll
pushf
lods
das
mov
sbb
pushf
lods
jmp
call
mov
mov
fsubs
jmp
xchg
aam
xor
mov
or
lea
stos
push
es
fdiv
and
adc
jle
call
aaa
stos
icebp
lea
lods
push
mov
lahf
test
jne
dec
sub
or
inc
jle
and
lahf
mov
outsl
and
sub
xchg
fs
je
push
add
and
mov
push
push
dec
insb
mov
mov
pushf
ja,pn
test
mov
nop
xchg
add
adc
scas
mov
ffree
xlat
inc
jmp
add
push
sbb
xor
sahf
jae
push
inc
pushf
iret
cmp
push
lea
decl
insl
sahf
es
push
outsb
xor
andl
scas
je
dec
lcall
fidivrs
lcall
gs
mov
notl
jp
xchg
sbb
es
out
gs
mov
jmp
hlt
les
mov
sbb
mov
insb
inc
fnstcw
cmp
push
push
cmc
in
pop
mov
jecxz,pn
gs
in
out
push
xchg
pop
add
jge
sarb
insl
in
mov
xchg
sbb
shl
push
push
rclb
hlt
stos
shll
cmc
repz
push
mov
in
lea
nop
aaa
or
test
into
mov
dec
jmp
mov
aam
xor
mov
mov
dec
pop
cmp
nop
daa
clc
jns
ss
pop
lret
pushf
lods
outsl
nop
xchg
cmc
int3
enter
mov
cmpsl
cmp
outsb
je
lcall
dec
out
xchg
shlb
or
push
xchg
fcompl
sub
pop
popf
gs
clc
iret
mov
repz
push
loope
lea
mov
cmpsb
adc
mov
in
enter
sub
daa
jmp
lods
xchg
insl
mov
inc
ss
ja
adc
mov
sbb
shll
and
or
push
je
addb
mov
sbb
imul
and
mov
push
xor
jge
push
test
les
movaps
and
mov
xchg
xor
out
mov
xchg
subb
xchg
test
aaa
es
in
aas
cltd
push
mov
inc
xchg
daa
push
test
sti
xor
ss
lds
cmp
nop
sub
mov
jmp
bound
scas
in
dec
stos
loop
test
mov
lock
and
daa
lds
imul
cmp
rcl
pop
pushf
xor
lret
jl
in
add
mov
out
or
movsb
or
jnp
pop
lcallw
cld
ds
gs
lods
adc
leave
lea
daa
inc
inc
push
clc
push
jns
pushf
jecxz
and
inc
enter
sbb
and
push
stos
mov
sbb
xor
scas
or
sub
xor
call
cmp
or
sub
mov
frstpm(287
leave
push
loop
cmp
mov
mov
in
or
xchg
sbb
shll
incl
sub
hlt
xorl
sbb
push
mov
das
addr16
jmp
testl
sahf
add
fldcw
outsl
in
arpl
iret
lods
cmpsl
int3
das
notb
fndisi(8087
mov
fmul
mov
dec
add
mov
aaa
fldl2t
loopne
and
jmp
jge
int3
inc
inc
leave
adc
jmp
cld
sub
rclb
sahf
pop
lret
push
mov
rcll
push
dec
jb
loope
mov
sub
add
ljmp
sahf
mov
pop
jle
enter
cwtl
in
sub
xchg
xchg
push
incl
add
and
xchg
icebp
and
xor
xor
and
sbb
ljmp
popf
movsb
lods
xchg
adc
cmp
dec
pop
inc
jmp
lds
pop
sub
xlat
inc
jae
movsl
xchg
dec
or
out
mov
push
out
test
dec
xor
cli
jge
loop
mov
repnz
sub
xor
lahf
dec
sbb
outsb
cmpsl
imul
add
cwtl
push
std
jl
jle
sbb
cmp
pop
push
mov
arpl
mov
into
sahf
repnz
stos
sti
cmp
mov
fstpt
mov
and
pop
cltd
jnp
sahf
xchg
hlt
sbb
daa
add
xor
xchg
push
rcr
rcrl
jg
pop
movsb
sbb
mov
jp
jne
imul
or
ljmp
xor
movsl
rcrl
out
sub
cltd
mov
ds
xor
popf
and
aad
jns
cmc
xchg
mov
xor
mov
decl
mov
mov
mov
fcmovne
dec
mov
aas
mov
sub
call
or
mov
shll
lods
ret
mov
aam
dec
mov
arpl
jp
test
cld
cltd
sbb
dec
popf
mov
shlb
repz
sahf
jmp
push
sbb
in
testl
add
icebp
in
js
push
loope
cmp
dec
test
inc
stos
mov
mov
fists
shrb
xabort
int
cmc
inc
add
or
pop
xor
sub
lock
xor
push
nop
fiadds
dec
mov
sub
adc
xchg
push
or
inc
jne
cmp
dec
inc
push
dec
cli
mov
push
movsl
sbb
jo
push
inc
mov
cmp
out
and
pusha
hlt
dec
insb
mov
dec
mov
dec
dec
push
test
xchg
mov
adc
nop
insl
dec
popf
push
in
fistpll
pop
and
movl
pop
inc
sub
jnp
pop
jmp
mov
jl
cmp
decb
dec
test
inc
cld
push
xor
push
ret
je
adc
js
addr16
popf
xchg
stos
mov
pop
mov
mov
pop
mov
iret
loop
add
andl
roll
mov
jb
mov
and
popf
jge
ret
das
rcrb
lcall
repnz
push
mov
sub
push
cltd
movsb
clc
orb
inc
xchg
pop
fcoml
mov
xor
daa
xchg
mov
mov
lods
add
iret
sbb
mov
stc
stos
xchg
fsubl
enter
add
pop
int3
sbb
xchg
loope
cmp
xchg
es
inc
mov
jmp
sti
clc
ret
inc
xchg
push
jb
test
sub
rclb
testb
sarl
fyl2xp1
aam
lret
or
mov
adc
into
pop
pop
das
xor
cmp
dec
jmp
sub
xchg
inc
add
mov
lods
daa
xchg
xlat
add
aaa
das
test
scas
adc
xchg
or
loop
mov
xchg
mov
mov
clc
mov
pop
xor
xchg
movsb
mull
jns
sub
lods
iret
push
enter
push
pop
test
ss
fsubl
or
addr16
call
sbb
outsb
jne
sub
out
scas
add
dec
out
dec
or
jl
fbld
shll
fwait
push
in
push
enter
aas
std
push
shll
push
mov
xchg
xchg
push
jne
je
lret
xor
mov
arpl
pop
push
gs
ss
stos
mov
xchg
add
pop
icebp
popf
stos
sub
push
icebp
cltd
lahf
add
xchg
ja
sahf
sbb
inc
cmpl
sub
imul
pop
dec
negb
stos
xchg
jb
push
loopne
fiaddl
push
dec
int3
xor
sub
lea
pushf
icebp
repz
movsb
pop
shlb
mov
push
loop
idivb
lock
pop
and
sub
jl
jg
mov
imul
xchg
jle
lods
imul
xor
cmp
lret
sub
adc
pop
xchg
stos
and
fisttps
adc
cmp
outsl
add
imul
cmp
and
cmp
push
jno
sbb
xlat
ljmp
push
out
or
push
pop
push
fucomip
dec
pop
or
mov
or
adc
mov
aas
jecxz
sub
lea
data16
cmpsl
jecxz
adc
int
inc
sar
xchg
sub
and
xchg
push
sub
push
int3
pop
push
push
cmp
xorl
mov
mov
inc
xchg
xchg
sbb
loopne
leave
jl
mov
push
add
mov
mov
inc
enter
sub
jg
adc
call
dec
sub
dec
mov
sbb
lret
fidivl
ficoms
rcll
and
inc
jo
ret
pop
stos
int
jne
cmp
out
mov
and
movsl
add
out
sbb
cld
adc
popa
or
test
sub
sub
add
fcomp
addr16
xor
or
divb
push
lret
xor
es
repz
movsl
inc
add
pop
repnz
std
imul
lcall
push
and
lahf
dec
popf
daa
jmp
dec
sahf
dec
int3
ja
push
push
xchg
lods
std
jno
test
shll
test
adc
lock
pop
push
imul
or
or
or
dec
pop
mov
sub
sbb
rorl
pop
adc
out
xchg
add
clc
inc
dec
arpl
aad
cmp
iret
mov
push
loope
clc
aaa
xor
mov
jp,pn
xor
rcrl
sbb
dec
cmp
adc
jl
sbb
add
or
mov
mov
push
jecxz
ja
or
cmp
push
addl
jns
mov
inc
push
fs
test
repnz
test
dec
cmpsb
in
enter
inc
and
scas
inc
xor
inc
scas
ljmp
mov
or
inc
and
out
xor
lret
seto
lcall
xacquire
xor
pop
adc
jecxz
dec
xchg
and
in
xor
adc
rcr
push
fisttpl
jae
loop
stos
mov
xchg
out
std
pushf
cltd
imull
pop
sub
push
add
jecxz
fistpl
xor
mulb
cmp
aam
fsub
dec
jecxz
aam
aam
cmp
dec
outsl
iret
xor
sbb
push
hlt
mov
jmp
sbb
add
jno
push
enter
adc
mov
mul
sub
dec
pop
call
fs
dec
inc
fildl
adc
nop
icebp
cmp
fbld
cmp
cmc
pop
popf
roll
pop
and
jle
loopne
lret
sub
adcb
push
sbb
movsb
sbb
test
jno
leave
arpl
jmp
cmpsb
inc
mov
arpl
mov
mov
mov
clc
inc
mov
gs
add
ja
jle
dec
es
add
xor
aaa
cwtl
jg
sahf
add
pusha
sti
loop
shrl
push
sub
inc
jnp
lahf
push
or
stos
cltd
and
push
jle
addr16
dec
aad
imul
sub
sbb
mov
lret
cmc
aad
js
push
addb
push
xchg
mov
insb
cld
sub
dec
or
jns
sbb
push
cmp
insb
jmp
scas
fistl
sub
repz
xchg
pop
xchg
jno
addr16
or
mov
xchg
dec
cld
pusha
inc
push
arpl
push
cmp
inc
cmp
push
mov
pushf
sahf
andl
insb
into
sbb
jg
inc
movb
out
lds
jbe
jne
mov
lds
addb
roll
ja
shlb
or
mov
test
lret
jnp
or
sub
rorl
mul
les
pop
pop
out
lahf
mov
loope
aas
shlb
jmp
sarl
pop
imul
flds
adc
or
daa
jp
mov
xchg
cli
cld
mov
cltd
sub
lods
pop
rcl
sbb
nop
mov
and
lock
out
call
int
rcl
das
in
mov
cld
jle
adc
neg
sub
xchg
mov
mov
sub
les
dec
andl
inc
mov
add
outsb
sahf
stos
ret
arpl
mov
add
xor
jmp
leave
dec
jo
fcoms
je
leave
aam
bound
outsl
enter
cmc
hlt
and
cwtl
arpl
scas
stos
testb
mov
mov
lahf
add
sbb
enter
fstpt
add
out
hlt
jnp
cmpsb
shlb
cmp
jae
push
add
lcall
or
aad
out
orl
cmp
sar
mov
loopne
loopne
out
jns
push
insl
pop
pop
pop
cmp
inc
and
sbb
fldt
mov
enter
sbb
popa
lea
addr16
jne
mov
inc
push
mov
bnd
mov
lods
or
inc
je
gs
sub
mov
mov
call
mov
rcrb
movsl
push
mov
pop
icebp
fcmovnu
push
loope
lret
cmc
test
shll
inc
fs
inc
xchg
lss
sub
xor
xchg
and
jge
shll
mov
rolb
scas
mov
sub
lods
mov
push
push
push
ret
jne
mov
aaa
inc
cli
push
push
mov
jg
sbb
not
gs
hlt
ficoml
inc
push
dec
dec
xchg
mov
cli
and
ljmp
push
test
sbbb
lods
lods
mov
lods
daa
or
mov
clc
imul
cmpsb
inc
icebp
imul
mov
mov
push
xchg
cmc
fs
xchg
stos
flds
mov
les
out
cld
popa
and
into
ret
xchg
lret
test
lds
inc
adc
inc
sahf
fdivs
mov
movsb
xlat
adc
mov
fadds
cmp
inc
push
fsubp
dec
in
into
es
push
std
pop
ja,pt
jg
fnstenv
xchg
into
inc
inc
dec
popf
add
cmpsl
push
rclb
mov
cltd
or
inc
movl
movsl
cmpsl
ljmp
mov
xchg
add
jl
fwait
popa
push
and
xor
fwait
lret
outsb
mov
js
pop
sub
and
movsl
add
mov
mov
out
jbe
adc
mov
in
mov
ret
in
mov
dec
or
or
mov
pop
bswap
insb
push
sbb
xchg
pop
setl
aam
mov
lock
or
iret
push
stos
cmp
mov
pop
pop
mov
loop
and
xchg
cld
cld
test
push
adc
icebp
loopne
dec
jl
mov
inc
data16
rcrl
fwait
sbb
inc
mov
repz
sub
out
push
ja
xchg
cwtl
popf
add
ret
push
rcl
fiadds
into
pop
or
lcall
pop
ss
movb
cwtl
and
xor
test
outsl
mov
cltd
mov
fldl
or
jp
sub
jbe
mov
mov
inc
enter
ret
mov
and
clc
repnz
scas
lea
ret
pop
jne
int3
das
mov
sub
xchg
clc
imul
int
insl
jne
and
stos
add
sbb
fs
mov
push
jae
xor
mov
mov
dec
pop
pop
push
mov
cld
in
psubsb
mov
out
jno
adc
outsl
out
adc
adc
mov
fistpl
cli
shlb
shrl
inc
popf
in
jae
test
leave
pop
jnp
add
in
push
mov
sbb
cmc
repnz
rclb
lahf
mov
or
lock
or
sbb
jge
mov
xor
loop
enter
pop
lret
push
lcall
js
repz
aad
movsb
insl
cs
dec
sbbl
cmc
mov
fisttpl
sub
mov
insl
mov
jne
or
enter
or
repnz
push
movsl
or
in
sub
lret
lock
cmp
scas
adc
lods
mov
dec
fmuls
pushf
mov
push
pop
jnp
and
js
inc
or
lods
lahf
sahf
adc
xchg
and
inc
mov
dec
out
mov
jle
add
xlat
adc
xor
and
mov
in
xchg
xor
or
jge
lock
ljmp
adc
loope
inc
push
gs
and
dec
xor
add
xor
push
loop
insl
and
and
scas
mov
test
xchg
dec
fisubrl
mov
xchg
push
and
mov
fcmovne
rorb
xchg
xor
lret
push
lahf
out
push
cmp
insb
pop
cmp
aam
cmp
push
xorl
repz
js
or
mov
int3
mov
push
orl
test
jmp
mov
push
enter
adc
push
lret
sti
mov
cwtl
es
popa
sbb
add
cli
fcompl
pop
push
cmpxchg
int3
scas
out
jecxz
sub
into
out
les
les
xor
lret
ss
xchg
rorl
lods
dec
jp
shrw
dec
scas
aam
pop
pop
dec
movsb
ja
sub
mov
mov
mov
loop
rorl
aas
jae
out
mov
daa
in
fsts
ljmp
aad
stos
sbb
mov
or
mov
pop
arpl
call
testl
xchg
push
mov
push
fiadds
ficompl
mov
cmp
sub
jbe
sub
adc
rcl
inc
popf
cltd
cmp
stos
or
in
pop
adc
mov
jnp
pop
arpl
lcall
xor
or
test
test
mov
sbb
idivl
lret
dec
jns
fwait
jb
mov
stos
test
aaa
and
lds
or
mov
nop
scas
lods
insb
cmp
out
loop
xchg
jno
movb
cmp
gs
lcall
orl
aam
dec
stos
xchg
adc
loopne
daa
ret
insl
stos
stc
incb
dec
cltd
cmp
sub
test
add
mov
mov
pop
outsl
pushl
stc
inc
icebp
dec
xchg
push
adc
lret
insl
mov
out
sbb
jmp
pop
sub
jb
lret
call
cmp
pop
scas
xor
lea
fdivr
cmp
jl
mov
xchg
cmp
iret
sbbl
imul
jo
jbe
adc
adc
imul
sbb
xor
sbb
pop
xorl
or
imul
adc
insb
mov
je
mov
cmp
pop
aaa
inc
bound
aaa
out
hlt
and
popa
gs
jg
adc
adc
in
mov
push
and
push
shl
jg
decl
push
lcall
add
push
rcrb
push
sub
mov
clc
and
pop
call
dec
rcl
lock
shrb
xchg
cmp
fdivl
mov
jnp
jle
pop
mov
pop
je
jb
pop
mov
xchg
mov
lock
nop
and
sarl
in
xchg
adc
adc
scas
cmp
js
push
shl
addr16
jno
aaa
repz
in
insl
jb
push
and
jbe
and
lret
lahf
and
sti
xor
mov
cltd
cs
adc
and
push
push
out
imul
adcb
les
test
mov
sub
adc
cld
mov
mov
mov
sub
mov
mov
mov
and
push
aaa
out
sbb
lahf
lea
adc
jg
adcb
out
imul
push
xchg
dec
xor
in
lret
pushl
jbe
add
iret
rcr
adc
bound
mov
xlat
fisttpl
je
popf
lods
lahf
movsl
xchg
cmp
sub
imul
mov
imul
fidivrl
mov
mov
mov
in
or
test
mov
mov
add
sub
push
mov
jmp
cmp
lcall
insl
add
fs
fidivrs
aas
imul
push
dec
leave
iret
idivb
push
mov
mov
mov
jle
hlt
jl
cmp
das
inc
xorl
shrl
popf
and
loope
and
cmp
add
xchg
cli
sbb
cmp
pop
fstpl
popa
rcr
and
jne
mov
fnstenv
or
mov
sbb
cld
or
lcall
sub
testl
je
push
push
les
push
test
xor
cld
jbe
dec
jns
xchg
mov
sbb
and
test
fcmovnb
shlb
sbb
hlt
xchg
inc
adc
lret
xchg
in
adcl
sub
test
sub
push
xchg
cli
sub
cmp
xchg
lea
xchg
cmp
sbb
jne
sbbb
mov
inc
mov
xor
sbb
je
cwtl
sub
or
lods
sbb
repnz
jnp
sbb
cli
popa
jg
addb
fimull
or
sbb
xchg
xchg
mov
nop
stos
mov
add
cli
adc
mov
sahf
cmp
mov
add
inc
mov
repnz
rclb
test
mov
jne
adc
adc
sarl
or
mov
int3
xchg
xchg
or
cmpsb
add
mov
mov
mov
imul
add
test
jo
addb
mov
je
xchg
mov
idiv
ja
jno
loop
subl
stos
test
mov
adc
int
mov
jno
inc
cmp
repz
cwtl
stc
loope
clc
mull
lods
lret
fsubrs
xchg
jno
test
inc
or
sub
jb
ljmp
or
jge
in
cmpsl
sbbl
mov
cmpsl
push
ffreep
or
out
adc
xchg
pusha
sahf
jnp
pushf
popa
repnz
mov
aam
cmc
stos
call
push
jge
dec
sub
repnz
pop
les
push
xchg
sbb
xchg
cmp
in
dec
xor
pop
loop
xchg
inc
sbb
sbb
push
sbb
jmp
mov
push
pop
outsl
int
rcl
push
fidivl
gs
adc
pop
insl
mov
inc
xchg
push
and
fldenv
dec
inc
data16
jbe
dec
icebp
in
ja
push
push
push
mov
lds
cmp
push
jne
add
in
ficoms
lcall
push
xor
adc
daa
in
push
push
mov
jnp
addr16
mov
fwait
mov
popf
fistl
sub
pop
mulb
nop
scas
dec
mov
in
outsb
push
popf
inc
testb
inc
push
jl
outsl
lahf
imul
cli
inc
jno
pop
insb
sbbl
xchg
stos
xchg
pop
out
lds
rcll
pop
ret
in
adc
xchg
cmpl
sbb
lods
test
nop
gs
adc
pushl
sahf
push
push
adcl
fidivrs
sbb
outsb
mov
sbb
pusha
int
movsl
in
or
stos
inc
rcrb
adc
pop
insl
xor
jbe
jle
lretw
jnp
mov
add
jnp
mov
push
fcmovb
add
pop
pop
cmp
xor
pop
sbb
push
inc
jne
dec
dec
dec
inc
mov
addr16
mov
dec
lock
out
push
cmp
dec
mov
loope
and
pop
mov
mov
sarl
sbb
subl
lret
pop
xor
js
testl
mov
mov
cwtl
loopne
xor
sbb
jns
aad
mov
cmpsl
iret
mov
xchg
jmp
push
movsb
jge
mov
and
mov
lcall
scas
fistps
data16
inc
cwtl
mov
mov
push
div
or
cmp
in
out
xor
sbbb
xchg
and
mov
inc
mov
cmc
lds
sbb
out
jge
bound
in
push
dec
add
inc
mov
xchg
or
mov
dec
xor
or
fcom
dec
sbb
std
arpl
sti
inc
mov
fmull
jbe
mov
jno
test
ret
add
add
mov
jno
push
jbe
inc
xor
iret
sub
popf
fcomps
jns
scas
test
pop
push
scas
loop
jns
movsb
in
and
aaa
mov
mov
jb
push
repnz
nop
mov
fsubr
loop
cmp
scas
sbb
and
bound
lret
mov
adc
push
scas
xchg
lret
lret
ficompl
pop
js
pop
mov
adc
push
loope
shll
jo
adc
in
sub
fsubl
xor
mov
pop
mov
idiv
jno
sti
sbb
push
repnz
imull
dec
outsl
fisubrl
mov
push
mov
popf
insb
in
rolb
push
pusha
addr16
cmpsb
aad
leave
adc
mov
mov
lods
leave
and
add
mov
sub
mov
pop
sub
int3
in
mov
into
ss
dec
inc
lds
xor
xlat
test
inc
mov
xchg
loop
mov
jg
in
stos
call
cmp
adc
loop
pushf
mov
sub
xor
mov
pop
in
call
ljmp
add
adc
pop
inc
sub
mov
push
fimuls
out
pop
add
fcmovnu
add
mov
sub
dec
cmp
fwait
mov
fsub
mov
dec
hlt
stos
xor
cmp
jecxz
cmp
cmc
addr16
cmpsl
ljmp
std
pop
addr16
sub
lods
lret
mov
int
lods
lods
inc
inc
loop
std
or
push
mov
dec
lahf
out
jp
sti
and
outsb
push
mov
ret
out
sahf
neg
xor
or
mov
stc
cmp
sarb
mov
psubsb
movsl
add
xchg
movsl
cli
aas
push
adc
dec
cmp
nop
push
xchg
inc
fstpl
sub
out
and
lods
fwait
push
push
xor
jne
jmp
inc
push
cli
sbb
mov
dec
mov
cmp
lcall
push
dec
cmpb
push
pop
movsl
jp
aas
sub
push
adc
xor
notb
jb
jns
cwtl
xchg
jecxz
push
add
leave
inc
hlt
mov
cmp
shrb
inc
pop
mov
mov
jae
test
ja
push
in
test
out
mov
out
aaa
outsl
gs
pop
mov
add
pop
jge
aas
xchg
lahf
ret
stos
dec
fidivl
mov
repnz
mov
lock
xor
loope
in
pop
dec
push
jp
mov
mov
mov
jbe
mov
hlt
mov
dec
iret
push
adc
cli
mov
lods
mov
jnp
sub
mov
das
xchg
repnz
insb
ss
sub
and
inc
jnp
adc
aaa
popa
mov
fwait
jns
jp
js
gs
dec
sbb
mov
rol
adc
xchg
shlb
xlat
ljmp
mov
fdivrl
aaa
aaa
sbb
scas
repnz
cld
xchg
into
jae
mov
out
adc
sbb
sbb
jle
jo
call
hlt
faddp
rol
fwait
pop
push
push
arpl
cmpsb
out
std
inc
lods
imul
or
dec
push
xchg
sbb
mov
in
stos
xlat
dec
dec
aaa
and
pop
dec
pop
pop
dec
leave
sub
mov
jo
jmp
xchg
movsl
sahf
add
ret
pop
and
inc
pop
sarb
pop
xchg
add
addl
mov
xor
packuswb
lret
pop
sbb
and
lods
adc
cmp
inc
roll
das
data16
inc
inc
jge
cmpsl
and
add
andb
add
xchg
negb
xchg
mov
daa
ljmp
cli
or
inc
xchg
sub
mov
add
out
jnp
sub
push
push
call
cmpsb
ja
sub
insb
clc
mov
or
fwait
sbb
adc
xlat
stos
out
imul
sub
es
xchg
or
mov
inc
or
jns
mov
xor
jno
or
ja
dec
pop
mov
ret
xchg
dec
inc
fimull
sub
push
mov
push
pop
pushf
sbb
loope
sbb
push
sbb
jne
sbb
push
in
shlb
mov
fimuls
dec
mov
mov
jae
scas
xchg
ja
pushf
sub
push
dec
mov
testl
arpl
addr16
lds
xchg
xor
xchg
mov
and
cmp
mov
jnp
mov
dec
push
push
cltd
dec
lock
hlt
xor
fidivs
pushf
push
push
or
add
xchg
test
iret
mov
adc
leave
add
imul
fld
or
push
insl
sbb
sub
jbe
stos
add
sbb
outsb
and
adc
pop
xchg
nop
and
xchg
in
inc
xchg
icebp
mov
sbb
fsubl
jle
js
jae
fsubrl
out
xor
push
push
add
mov
adc
rcll
lcall
inc
and
pop
cmpsb
das
arpl
aad
and
pop
xchg
dec
add
cwtl
rcll
rorb
mov
mov
lret
pop
mov
cmpl
pusha
pop
push
movsl
ror
negb
adc
xchg
mov
cmpsb
aas
fmuls
pop
mov
gs
sarb
das
pushf
jbe
and
cs
pop
jne
fstp
xor
mov
ffree
std
sbb
or
cmp
pop
add
ds
xor
ret
xor
sahf
push
pop
mov
jge
inc
mov
xlat
aas
xor
push
inc
imul
sub
movsb
mov
sub
xchg
and
mov
fildl
mov
pusha
mov
loop
pop
inc
fidivs
add
and
les
aam
dec
outsb
add
subb
xchg
cmp
scas
sbb
xor
test
xor
sbb
jge
test
in
fs
xor
sbb
sbb
pop
adc
add
fnstcw
add
sbb
push
enter
call
in
sbb
sub
aas
pop
xor
push
jp
or
loopne
push
xor
fistps
shll
std
add
jg
mov
sbb
inc
push
push
stc
or
sub
cmpb
mov
iret
mov
jp
mov
out
adc
stc
lds
movsb
sub
cmp
and
in
fs
pop
pop
dec
push
incb
pop
and
jo
mov
jg
mov
and
xor
pop
fldt
stos
xchg
icebp
add
dec
sub
mov
mov
bound
js
lea
lfs
je
lcall
into
fs
sarl
push
shll
xchg
stos
inc
into
pop
dec
sbb
lahf
stos
add
push
popa
cmpsl
lods
xchg
mov
rolb
ret
insb
pop
scas
sub
add
jno
inc
fistps
rol
pop
jmp
xchg
cmp
dec
push
test
movsb
aam
arpl
xorl
mov
dec
cmc
xor
pusha
and
mov
push
mov
rol
into
and
add
sti
fimuls
mov
rclb
icebp
or
cmpb
or
test
fstpl
adcl
nop
orl
int
aad
ds
cmp
xchg
dec
int
inc
dec
jne
call
scas
pop
test
xchg
mov
jmp
xchg
movsl
movsl
pop
and
mov
adc
sub
mov
sub
or
cmp
clc
cmp
push
out
shll
push
call
mov
mov
or
rcrb
sahf
in
addr16
push
test
xchg
std
mov
xchg
jp
pop
xchg
sbb
jecxz
out
imul
mov
adc
or
lcall
lret
jmp
xchg
pusha
jg
movsl
imul
xorl
and
or
aas
std
out
mov
jo
sub
add
mov
movsl
push
pop
jae
adc
mov
int
pop
int
pop
jmp
sahf
hlt
leave
clc
push
push
dec
push
lahf
xor
dec
movsb
lret
xchg
out
jecxz,pt
fstpl
addr16
movsl
fnstcw
test
es
int3
loop
sahf
shll
xor
pop
xchg
dec
call
pop
pop
cmpsl
pusha
inc
in
cmpsb
dec
dec
bound
push
sub
adc
jae
aaa
sbb
in
aaa
add
mov
pushf
aaa
mov
mov
cmp
or
push
loope
inc
das
push
mov
mov
icebp
rolb
push
imulb
mov
stos
sub
inc
mov
test
push
arpl
pop
sub
ss
jecxz
int3
xchg
outsb
push
and
mov
test
inc
inc
scas
and
lods
gs
fmulp
add
xorb
mov
cwtl
loop
cld
int
dec
cmp
in
push
adc
inc
insb
lret
movsl
and
add
in
adc
mov
pop
ret
ror
shl
push
push
sarb
jns
mov
or
cmp
jg
shrl
stos
arpl
xor
and
mov
dec
mov
inc
loop
adc
arpl
pop
rorl
popf
bound
ret
fdivr
ja
mov
fdivrs
xchg
fldcw
rolb
xchg
icebp
or
push
dec
test
insl
movsb
fcompl
cmp
inc
insb
gs
arpl
or
arpl
mov
cmc
cs
mov
mov
faddl
mov
adc
aad
dec
scas
inc
mov
xchg
push
adc
cld
mov
call
inc
stos
loop
pop
movsl
jnp
push
sbb
xchg
icebp
or
inc
pop
jo
rcrl
jnp
fcmovne
add
inc
aas
sbbl
cltd
cs
scas
pop
mov
push
out
mov
jbe
jg
movups
lods
aam
add
xchg
insl
xchg
jmp
fildl
and
loopne
or
xchg
out
xchg
hlt
insb
adcb
pop
xlat
pop
sbb
pop
sub
jg
mov
sbb
add
imul
leave
shll
mov
pop
jecxz
mov
xchg
or
mov
mov
test
insb
mov
cmp
in
sbbl
fwait
push
enter
fidivl
cmp
in
inc
mov
push
scas
push
mov
and
mov
lret
push
pcmpgtw
dec
pop
lret
push
inc
rorl
mov
cmp
ret
add
push
out
jmp
jb
sub
jb
xchg
hlt
push
xchg
mov
pop
jecxz
lods
cwtl
jle
mov
fldt
jmp
mov
fcomps
mov
dec
scas
mov
movsb
mov
cs
scas
inc
adcl
inc
mov
fdivrs
sbb
in
pop
mov
test
dec
adc
fbld
addr16
loope
ss
sbb
pop
stos
addr16
mov
aad
fsubr
cwtl
in
shll
insl
sub
sbb
push
add
mov
sub
inc
setp
shll
lahf
test
clc
loop
imul
and
call
mov
loope
push
lods
pop
push
add
inc
adc
jle
push
rorb
fmuls
in
xchg
rclb
daa
add
add
sub
push
cltd
cmpsb
sub
mov
insl
outsb
dec
and
add
inc
inc
out
shl
mov
scas
push
lods
adc
pusha
jae
ss
pop
inc
int
pop
pop
bound
push
mov
pop
push
pop
add
ds
stos
int
movsl
pop
in
xchg
xor
pop
lret
push
and
inc
sub
fldt
int
mov
inc
jae
ret
fidivrl
loopne
shlb
mov
push
repz
push
hlt
adc
idivb
jns
push
mov
gs
insl
jno
add
ja
ljmp
inc
sbb
pop
aaa
push
sbb
or
jecxz
lds
mov
lods
dec
or
jno
adc
test
jbe
pusha
jne
cmc
lret
push
imul
cli
inc
xchg
aam
cmp
push
enter
mov
dec
or
jno
dec
mov
jo
add
repz
cltd
mov
mov
cmpsb
jne
cmc
jns
inc
push
in
push
outsb
or
add
frstor
sahf
add
icebp
pop
xchg
and
pop
fs
pop
xor
inc
cmpsl
cmp
mov
sub
xchg
jne
cmp
movsb
pushf
jae
pop
adc
xchg
or
lea
std
sbb
sbb
push
fwait
xchg
sahf
mov
dec
stos
cmp
dec
xchg
xor
fsubs
dec
or
xor
or
mov
es
sbb
mov
ds
sbb
test
rcrb
xchg
push
jg
xlat
jge
push
movsb
stc
adc
pop
jno
mov
imul
or
sub
mov
push
rcll
or
loop
cmp
test
mov
xor
inc
lahf
dec
lcall
in
sarl
stos
pop
les
jg
or
or
jg
push
lret
out
cltd
sub
insl
sbb
pushf
mov
repz
mov
inc
cmp
and
fs
xchg
dec
sub
mov
es
repnz
mov
scas
not
scas
out
iret
mov
mov
xchg
sub
adc
in
dec
fcoms
or
sbb
pop
inc
jecxz,pn
in
mov
xor
cltd
mov
dec
add
xchg
std
dec
popf
jo
inc
pop
fldl
mov
mov
jo
and
jmp
or
mov
ss
cmpsb
dec
inc
sub
out
mov
add
cmp
xlat
pusha
cli
mov
clc
adc
popa
jle
xchg
dec
mov
pushf
mov
in
fnsave
pop
pusha
dec
mov
imul
mov
jp
dec
xchg
call
jmp
add
das
add
cld
mov
cmp
wbinvd
daa
testb
push
fisttps
in
imul
jle
fsubrs
push
cmp
add
in
or
fisttpll
add
lods
or
sbbb
inc
das
xor
repnz
pop
mov
mov
cmpb
data16
stos
jb
dec
lahf
jecxz
popa
and
cmp
or
and
cwtl
out
inc
mov
lea
pushw
inc
mov
jp
fadds
jecxz
jp
or
lret
addr16
mov
mov
cmpsb
dec
and
inc
sub
test
push
sti
inc
push
xor
in
movsl
pushf
in
enter
push
xchg
subl
cmp
repz
and
dec
mov
sbb
test
jns
inc
pop
xor
imul
push
lds
outsl
or
push
add
push
push
icebp
outsl
loop
xor
lods
aas
xchg
sub
mov
pop
shr
gs
mov
fwait
lds
push
outsb
add
and
cs
lcall
cld
stc
das
fptan
addl
in
stos
cli
pop
outsb
jg
pop
dec
adcl
cs
das
aas
fs
xor
push
mov
lcall
push
fidivrs
fisttpll
fwait
pop
mov
out
pop
sub
cmpsb
int3
inc
sbb
fstpt
repz
cmp
sti
sbb
rolb
and
xchg
es
mov
dec
xchg
xchg
gs
inc
mov
xchg
jl
xchg
lods
cmc
inc
dec
popa
pusha
outsb
pop
add
sahf
movsb
or
and
in
cmpsb
lock
cmp
test
data16
dec
aam
jmp
scas
les
stos
push
cmp
inc
jmp
inc
loop
dec
vmaskmovpd
icebp
in
jecxz
jg
lcall
insb
loope
inc
or
push
das
mov
or
movl
aas
hlt
push
sahf
adc
mov
out
jb
pop
out
sahf
mov
jnp
loope
cmp
mov
xor
jp
mov
pop
adc
add
ja
xchg
push
iret
push
and
pop
test
pop
es
mov
and
pop
jnp
clc
inc
into
pop
xchg
xchg
mov
cmpsb
push
push
aaa
filds
into
or
stos
pop
mov
cmp
fdivrl
sub
push
jnp
mov
add
mov
mov
mov
cmpsl
inc
loop
aad
mov
xor
pop
fnsave
cmp
adc
pop
outsl
mov
mov
xlat
xchg
fsubl
subb
xchg
movsb
clc
sub
sbb
arpl
jle
mov
mov
jnp
sub
test
aad
pop
add
stos
cmp
adc
test
sub
mov
test
filds
cmc
mov
fwait
mov
add
lret
mov
push
lea
sub
es
pop
dec
xchg
lock
jecxz
movsb
bound
jmp
jmp
cs
mov
pop
sbb
bound
mov
lahf
jb
scas
int
cli
adc
push
insl
out
jae
add
push
pop
repnz
sbb
pop
push
sub
mov
movsl
fiadds
shrl
gs
mov
rclb
jne
mov
int3
out
shlb
push
or
jae
sub
mov
insb
imul
shl
pop
and
push
mov
push
movsb
mov
cwtl
pop
shr
pop
ror
into
or
mov
daa
pop
cmpsb
dec
jns
or
or
xchg
insb
js
icebp
add
add
in
arpl
and
pusha
jp
fiadds
jmp
and
pop
negl
jnp
scas
bound
lret
mov
dec
fildll
je
addr16
mov
imulb
movsb
jp
xchg
fsubrs
pop
mov
rol
cmovg
gs
and
or
outsb
fisttpll
mov
sub
and
in
mov
xchg
add
add
lretw
add
sbb
ret
clc
fsubrp
mov
lods
or
es
pop
dec
add
sbb
fwait
inc
push
imul
dec
sahf
jle
dec
xchg
movsb
push
arpl
or
inc
aas
inc
mov
ret
mov
pop
aam
mov
stc
and
pop
inc
jle
insl
jecxz
or
loope
mov
sbb
push
sbb
insl
dec
mov
add
dec
test
outsb
push
xchg
pop
dec
inc
ljmp
cli
andb
cwtl
sub
xchg
xor
jnp
mov
les
in
adc
enter
mov
xchg
mov
xchg
mov
leave
movsl
movsb
adc
sub
ds
sub
outsl
rolb
xor
jl
mov
adc
gs
ret
sub
xor
cli
arpl
cmp
sbb
std
xchg
lods
ret
pop
cs
or
scas
in
test
bnd
call
mov
cmp
dec
xor
sub
jne
std
push
xor
outsl
sbbl
inc
jp
mov
inc
loope
mov
lret
leave
cmc
mov
sbb
xchg
nop
mov
andl
xchg
rorb
push
xlat
jo
dec
sub
aam
roll
rcr
cmpsb
test
ret
loopne
and
loopne
mov
pop
pusha
xchg
nop
push
icebp
rcr
inc
int3
out
jl
jnp
xor
sbb
je
icebp
pop
mov
daa
popf
inc
pop
xor
fildll
ja
gs
xlat
decb
cmp
push
xor
push
lahf
imul
in
pop
and
push
cltd
dec
sbb
jmp
stos
test
fists
stos
int3
lods
ret
and
ds
mov
stc
mov
into
js
jmp
sub
je
pushf
test
push
test
out
loope
pop
push
iret
shl
jbe
dec
dec
lcall
push
inc
ret
sbb
ss
cmpb
into
dec
jae
lcall
popf
sub
push
cmpsb
sahf
fimuls
scas
lret
scas
or
mov
xor
adc
test
test
scas
xor
sub
aaa
cmp
ds
pop
daa
movsb
add
xchg
leave
scas
loop
add
lcall
adc
mov
std
jno
xchg
jp,pn
mov
fsubl
dec
in
test
test
mov
cwtl
mov
or
std
rcrl
push
jo
cs
sub
adc
push
jle
mov
mov
push
adc
dec
out
cs
and
rcrb
xchg
fwait
das
test
xor
inc
mov
cmp
outsl
xchg
push
dec
adc
clc
jmp
cmp
cmpsb
in
jo
sub
test
mov
scas
pusha
lods
aam
aad
jo
test
andb
mov
aaa
mov
mov
adc
and
mov
sbb
ret
cmp
jmp
xor
cmp
cs
mov
mov
aas
xor
hlt
xor
lret
sbb
jle
cmpsb
push
push
sbb
dec
ret
sub
add
mov
cli
test
jns
mov
and
lret
movl
fisttpll
cmp
and
js
push
lods
jl
lahf
les
push
xchg
insl
xchg
fs
ret
sub
lods
rorb
sub
rcr
push
sub
imul
std
notl
fcompl
xchg
push
mov
movsb
xchg
fwait
mov
mov
incb
push
fwait
jmp
rcll
or
lods
add
jo
mov
adcl
xlat
cmp
cwtl
dec
jp
push
dec
push
outsb
stc
xor
flds
adc
sub
sarl
pop
push
and
lret
stos
mov
add
jo
je
icebp
add
imulb
inc
mov
movsb
pop
add
mov
repz
dec
test
jl
enter
test
xor
lcall
aad
aam
cwtl
inc
pop
mov
sbb
inc
xor
pop
andb
test
adc
popa
sbb
cmpsb
fmul
in
das
adc
or
stc
adc
icebp
mov
jge
stc
mov
pop
dec
cmpsb
jne
aad
dec
xchg
add
stos
xor
pop
mov
cwtl
imul
popf
jmp
push
cltd
jl
adc
mov
rorb
or
mov
and
push
inc
cwtl
stos
imul
insl
fdivrl
stc
out
not
adc
lcall
pop
add
fsts
or
jbe
jne
insl
jle
push
pop
fimuls
mov
push
and
iret
ret
bound
rorl
imul
orl
ret
gs
or
push
mov
sub
add
test
and
jne
fildl
jecxz
outsl
sbb
dec
cmp
sub
lea
cmpsl
or
ljmp
jnp
mov
lret
das
mov
mov
pop
xchg
dec
ljmp
es
sbb
stos
mov
fisubl
clc
icebp
out
lods
repz
out
add
xorb
push
int3
push
jb
clc
out
stc
pop
insl
fwait
push
je
call
mov
repnz
push
cmp
sarb
jne
mov
inc
or
jmp
jb
pop
jg
cmp
push
adc
xorl
stc
jp
nop
mov
lods
fiaddl
jb
push
sbb
mov
push
ficoms
scas
mov
mov
mov
mov
mov
push
mov
shll
outsl
dec
push
out
cmpsb
dec
push
std
test
fldenv
xchg
cmp
mov
popf
pop
test
sub
push
outsb
cmp
or
inc
xor
mov
scas
fadds
add
mov
test
mov
sbb
sbb
xchg
push
lock
scas
cmp
xchg
aas
xor
add
push
sub
inc
push
xchg
sbb
outsl
and
loope
pop
fbld
call
or
adc
push
mov
ds
cltd
xchg
in
cmc
lcall
mov
and
sub
fs
cltd
shll
daa
sbb
idivb
imul
or
xor
cmp
pop
ljmp
pushf
rorb
lahf
mov
int
lds
test
aad
push
insl
xchg
idivl
and
lahf
push
jmp
and
pop
mov
pop
xor
inc
push
mov
int3
std
add
dec
scas
or
jp
mov
cmp
mov
add
rclb
pop
xorl
fadds
lods
popa
push
fcmove
test
adcb
mov
cs
mov
adc
push
jecxz
fsubrs
leave
mov
jbe
sbb
sbb
mov
shll
and
mov
and
lret
sub
add
adc
pop
inc
fdivp
and
xchg
pusha
adc
shll
xchg
loope
ficoms
xchg
test
cmp
sbb
jno
xchg
jecxz
ss
add
push
sahf
enter
add
xor
aaa
xlat
mov
daa
or
jle
pop
hlt
js
mov
fisttpl
xchg
adc
or
sbb
inc
insl
scas
mov
inc
sub
lret
icebp
ret
in
cmpsl
imul
dec
xlat
lods
shlb
sub
xor
push
int3
or
sbb
out
aad
js
jo
mov
ds
lods
repz
push
aad
cmpsb
add
pushf
cmp
movsl
sbb
push
fdivrs
pop
pop
scas
sub
sbb
xchg
repz
es
adc
sbb
mov
jno
in
int
rcrl
leave
bswap
cwtl
pop
js
fildll
aaa
dec
lret
test
pop
pop
lds
imul
ficomps
or
mov
jl
js
mov
loopne
cmp
fldcw
enter
adc
imul
enter
push
lock
adc
jg
sahf
xchg
jmp
inc
ja
add
push
mov
test
loope
xchg
xchg
mov
icebp
add
test
arpl
pop
cmpsl
js
cmpsl
push
arpl
roll
xorb
inc
data16
dec
adc
mov
daa
xor
pop
xchg
lcall
je
mov
fidivrl
clc
jno
mov
fwait
and
jb
pop
push
add
cltd
mov
pop
mov
mov
sub
sub
mov
in
test
push
push
ffreep
xlat
jmp
mov
test
mov
sbb
xlat
jb
xor
jae
xchg
fs
movsl
cwtl
xor
sub
jnp
pushf
cmpl
mov
aaa
into
gs
cmp
cmpsl
pop
fcoml
mov
mov
lea
fists
mov
or
cwtl
mov
adc
mov
sbb
sahf
loope
iret
mov
mov
ret
dec
in
lret
cmp
fs
sbb
cmp
gs
add
les
add
push
insl
mov
xor
inc
into
or
mov
push
mov
insb
leave
mov
xlat
stos
lahf
js
mov
out
nop
push
push
shl
bnd
xlat
push
and
imull
inc
push
out
loopne
ss
pop
or
sbb
adc
sbb
mov
sbb
iret
hlt
jg
jno
repnz
jl
loopne
icebp
lds
pavgb
xor
pop
ss
out
addb
shrb
sti
xchg
sti
stos
and
call
arpl
and
popf
ss
cs
mov
inc
mov
int3
jl
lds
aaa
ja
jno
repz
dec
push
imul
ror
adcb
repnz
mov
jecxz
iret
xchg
xchg
mov
mov
fcmovnb
jne,pt
aaa
dec
outsl
mov
mov
clc
xchg
dec
fchs
push
cmp
push
cmp
mov
sub
and
xchg
movb
or
inc
scas
das
mov
sbb
adc
mov
or
test
stc
push
pushf
or
pop
inc
pushf
xchg
imull
das
mov
mov
push
hlt
jg
push
mov
xchg
add
jl
in
add
dec
insb
dec
call
mov
test
push
add
test
or
mov
sub
mov
out
inc
lahf
jns
fsubrl
sbb
ljmp
sub
xchg
subb
sub
imull
jae
sbb
mov
add
ja
cmp
popf
sub
mov
incb
mov
mov
xchg
cs
shlb
test
sbb
fs
arpl
mov
push
stos
dec
in
xor
xor
cmp
lret
popf
push
call
in
out
enter
sbb
jo
dec
loope
shlb
xor
out
mov
pop
sbb
and
push
ja
lret
pop
pop
dec
cmp
sti
std
add
into
in
rclb
iret
lods
test
add
xchg
add
xorb
jecxz
xchg
push
cmp
iret
imul
aas
mov
sbb
xchg
or
data16
xchg
fdivl
fwait
jo
push
xor
push
dec
adc
loope
ret
negl
sbb
int3
pop
adc
cmpsb
bound
mov
pop
aaa
jne
arpl
cltd
enter
sti
xchg
mov
in
dec
inc
fdivrs
xchg
insb
into
cmp
push
cmp
pop
gs
or
cmpsl
sbb
or
cmpsl
loop
and
mov
sub
xchg
adc
outsb
es
pop
adc
cmp
add
mov
sub
shll
pop
mov
dec
sub
fsubr
xchg
mov
lock
xor
leave
jno
scas
inc
das
push
pop
sub
dec
lret
sbb
scas
or
or
imul
cmpsl
sbb
outsl
out
xchg
adc
push
sarl
xor
mov
sub
jae
jo
shrl
mov
mov
mov
lds
or
or
mov
adc
xchg
stos
int
xor
ljmp
stc
jl
or
repnz
push
and
repz
or
add
dec
lahf
dec
dec
cli
xor
inc
jecxz
imul
sbb
data16
add
add
ss
das
in
add
iret
sbb
sbb
sahf
xor
shll
jne
jns
pop
push
leave
test
push
push
dec
dec
sub
xchg
es
loop
mov
stos
ja
jle
push
push
iret
leave
and
mov
fnstsw
add
daa
cmc
adc
addr16
nop
adc
call
xlat
fs
and
inc
aas
xchg
jmp
test
incl
or
cmp
fisttpll
mov
sub
pop
inc
into
mov
xlat
cmc
loope
sub
repz
adc
sbb
clc
xchg
dec
push
pop
dec
and
mov
rorb
mov
loopne
jg
out
or
lods
out
ss
dec
sbb
push
je
dec
jecxz
jne
jbe
push
sbb
pop
out
mov
iret
mov
mov
popa
pop
dec
aam
insl
jns
rcll
mov
xor
cmp
enter
mov
testl
jle
xchg
orl
adc
xchg
std
dec
mov
cmpsl
sub
lahf
and
adc
sub
cmp
jbe
lret
fidivrs
std
cmp
in
dec
cmp
lret
mov
scas
nop
inc
add
and
push
test
rorl
jnp
push
imul
jge
dec
mov
ret
adcl
jecxz
push
dec
xchg
test
mov
iret
add
pushf
inc
loope
jnp
mov
outsb
jp
xchg
ds
xchg
pop
jle
jmp
dec
push
js
mov
mov
cmp
aam
int
and
pop
popa
mov
dec
testl
push
xlat
in
out
xchg
fwait
into
push
xchg
sub
sub
dec
sarb
in
xchg
movsb
in
inc
mov
inc
jb
mov
sbb
lret
bound
or
bound
test
add
jns
xlat
lock
mov
xchg
sbb
sub
aaa
icebp
cmc
mov
inc
pop
xchg
push
xchg
mov
pusha
sub
or
ret
mov
push
aas
fwait
loopne
and
out
mov
fnsave
jo
dec
cld
sarl
ret
mov
in
movsb
sub
sbb
lea
push
lret
notb
or
insl
xchg
mov
or
stc
out
sub
popf
add
daa
ljmp
cmpl
mov
popl
sbb
pop
push
fs
scas
mov
pop
jnp
xchg
lods
iret
mov
jge
mov
mov
pop
jns
popf
xchg
pop
nop
jns
out
add
rorl
mov
or
daa
mov
int3
stos
sbb
and
lds
std
ja
or
inc
pop
pop
mov
inc
aad
pop
fucompp
and
xchg
lret
cmpsl
lcall
test
aad
hlt
insb
push
push
mov
xor
push
cli
cmpsl
ret
jnp
jne
pop
jp
ficoml
test
pusha
mov
daa
aam
lock
or
pop
test
pushf
clc
mov
mov
enter
xchg
rorb
xchg
mov
popa
adc
and
int
xor
pushf
sbb
cmp
fldt
fmuls
js
sbb
xlat
ja
call
jmp
rcll
ret
mov
lret
sbb
mov
mov
push
mov
mov
leave
dec
mov
jns,pn
pop
pusha
sbb
cmp
pcmpeqd
or
or
jmp
out
js
jne
and
out
pusha
xor
cli
imul
sbb
jb
dec
in
mov
mov
nop
insl
negl
subl
in
push
pop
les
stos
jo
cmpsb
sub
xchg
in
fsubl
lock
or
addb
pusha
out
xor
xor
cwtl
fs
cmpsl
and
mov
mov
mov
popf
adc
mov
mov
lcall
pop
in
push
fimuls
sub
jbe
addl
rol
add
dec
push
sub
adc
xlat
scas
cmp
xchg
inc
loope
cs
sub
add
adc
js
pop
in
mov
mov
or
imull
les
and
mov
push
sub
mov
mov
pop
sbbl
inc
inc
outsl
cmc
inc
sbb
adc
xlat
fsts
jp
je
mov
imul
mov
mov
out
jo
in
dec
cmp
out
in
mov
jg,pt
bound
fdiv
int
pop
mov
or
rolb
insl
movsl
test
cmp
jge
subl
push
test
ljmp
dec
int3
xchg
sahf
test
push
ret
ror
adc
push
fadds
push
ja
gs
popa
jbe
add
sbb
das
pop
push
pop
mov
ficompl
sbb
arpl
insb
lods
insl
leave
mov
idivb
call
push
push
push
rolb
mov
xchg
xor
or
jnp
cli
bound
dec
mov
loope
into
fiaddl
push
xchg
or
movsb
repnz
pop
shl
jg
dec
sbb
sub
push
inc
add
scas
xor
sar
mov
adc
xchg
addr16
sub
dec
je
add
add
cmovo
fsubs
jno
ret
lret
xor
sahf
xor
pop
cltd
adc
pop
xchg
pop
mov
scas
out
les
mov
sbbl
inc
cmp
imul
stc
cmpsb
push
mov
out
mov
cld
fiadds
mov
test
subl
ret
pop
inc
jb
mov
into
and
popf
push
cmp
imul
or
push
jl
fwait
cltd
cwtl
push
test
stc
sbb
adc
or
mov
fsts
push
in
lret
daa
orl
mov
xchg
cmp
cwtl
sbb
sarl
push
sbb
and
ja
dec
dec
lods
leave
movsl
imul
push
lret
sub
xchg
pop
push
fsubl
shl
jne
fdivs
scas
aaa
ljmp
jbe
jno
orb
or
ror
mov
addr16
jo
pop
into
lcall
dec
jne
push
inc
mov
test
repnz
and
sbb
jae
icebp
xchg
and
cld
mov
and
mov
cmp
sar
push
dec
or
testb
imul
cmp
mov
stc
mov
cmp
fcmovb
or
mov
sti
outsl
gs
dec
xor
outsl
mov
popf
pushf
dec
hlt
add
cvtps2pi
fnstsw
xor
mov
bndldx
or
inc
mov
push
mov
int3
jmp
push
mov
stc
mul
bound
cmp
sahf
push
movsl
or
mov
out
adc
and
xchg
push
cwtl
out
sub
xchg
cli
jbe,pn
jl
sub
or
call
inc
mov
cmp
test
mov
push
dec
or
mov
int3
test
scas
adc
popf
xor
xlat
or
push
mov
mov
mov
outsb
out
shlb
dec
fmull
cmp
nopl
jae
pop
cs
enter
loope
push
jne
cltd
xchg
gs
jmp
fnstcw
popa
js
mov
loope
and
xchg
mov
dec
stos
mov
nop
xor
or
and
jns
nop
xorl
test
test
jp,pn
inc
enter
mov
dec
sbb
xor
or
fdivl
jns
movsb
push
and
and
xchg
jbe
adc
xchg
jbe
cmp
bound
dec
sub
les
cmovs
shlb
jl
movsb
jo
enter
ljmp
dec
in
mov
adc
pop
cltd
sub
in
jmp
xor
sahf
mov
ljmp
push
push
leave
fnstcw
ja
sahf
out
aaa
cmp
leave
mov
add
in
sbb
pop
arpl
adc
leave
or
stos
aas
test
mov
sbb
call
and
or
enter
in
cmp
in
and
jecxz
test
inc
xchg
jo,pn
xor
aad
cli
test
sbb
rcrb
clc
fincstp
insl
ljmp
repz
mov
iret
nop
add
xchg
ret
pusha
arpl
ss
adc
add
sub
iret
imull
icebp
cltd
movups
push
pop
shll
jle
xchg
cld
mov
icebp
lods
out
xor
add
jmp
ds
rcrb
aam
or
mov
xor
rclb
test
xchg
int3
scas
mov
mov
loopne
push
sbb
sbb
aaa
sub
adc
out
inc
cmp
push
mov
aas
jnp
loopne
js
push
xor
jl
or
push
ret
leave
stc
std
pop
inc
sub
or
sahf
and
sbb
cmp
dec
dec
mov
insl
jg
popf
push
xchg
hlt
std
push
roll
and
cmp
out
stc
inc
xor
push
adc
out
adc
insl
cmp
mov
movsl
jnp
das
test
inc
push
nop
jns
out
mov
orb
sbb
das
sbb
cmp
mov
cmc
push
lods
int3
pop
sarb
cmp
jo
je
sbb
repnz
enter
pop
in
imul
in
test
test
andl
lds
mov
rcrb
pop
sbb
fisubrl
push
cmpsb
or
ljmp
sbb
pop
push
sbb
xlat
add
sbb
or
mov
test
dec
pushf
jecxz
add
mov
push
mov
les
int3
or
pop
out
adc
inc
enter
gs
xchg
fstp
dec
inc
cmp
sarl
mov
sub
scas
sub
cmp
lods
je
mov
cli
dec
faddl
out
rcrl
mov
test
lcall
cmp
cmp
sbb
subl
aas
and
push
mov
xchg
jne
jne
orb
adc
xchg
sarb
stos
pcmpeqd
or
fidivl
inc
sub
add
xor
push
push
xor
clc
or
cmc
out
jo,pt
fdivrp
sub
inc
adc
mulb
fdivrl
outsl
arpl
xor
cmp
addr16
sbb
jmp
mov
mov
mov
lret
int3
mov
inc
push
dec
mov
jg
stc
ds
aaa
shr
mov
add
mov
cmc
std
add
in
cwtl
xlat
lcall
cmp
js
shll
sub
pop
in
fisubrs
cwtl
cltd
or
push
movb
xor
mov
inc
sbb
mov
jp
fmuls
sahf
fsubr
mov
dec
fists
push
cmpsb
lods
push
mov
mov
or
pop
jle
or
xchg
inc
add
ret
mov
and
mov
leave
jecxz
or
sub
bound
dec
inc
bound
mov
les
cmp
add
push
imul
cmp
jnp
sahf
iret
push
sbb
pop
popa
xchg
insb
and
xchg
add
insl
sbb
jmp
cmp
dec
adc
aad
mov
pop
cmp
xor
add
push
jmp
add
loop
int
dec
push
dec
or
rolb
mov
loope
mov
mov
jae
adc
add
jle
fnstcw
test
idivl
dec
seto
pop
jbe
cld
scas
fistl
xchg
and
fwait
cwtl
aas
sub
subb
aaa
mov
ret
adc
fcmovnbe
insb
popa
iret
gs
push
fstps
dec
lds
fcompl
int
in
outsb
pop
je
or
pushf
aas
mov
mov
xchg
repz
fdivr
add
fldenv
cwtl
adc
jl
sbb
mov
jmp
mov
ljmp
loop
arpl
lcall
jl
mov
mov
test
or
lret
add
jno
cld
in
and
mov
ds
xor
ljmp
pop
cmp
int
inc
mov
mov
aam
xchg
jbe
dec
xchg
cmp
loopne
clc
xor
imul
adc
loopne
inc
stos
dec
adcb
mov
cmp
xorl
mov
fnstenv
enter
pop
mov
cmpsl
les
pop
jne
scas
and
add
mov
sarb
std
add
call
ds
cwtl
repz
xor
add
or
jg
add
xor
push
aaa
leave
sbb
ret
xchg
clc
xchg
jb
ds
adc
sbbl
inc
ja
xor
les
sbb
outsl
xchg
ds
lret
iret
or
mov
xchg
movsl
mov
in
mov
sbb
fisttps
inc
sub
jmp
xchg
mov
inc
mov
cltd
mov
test
jne
bound
jne
mov
xchg
outsl
mov
hlt
stc
lfs
push
push
gs
lds
sbb
sub
inc
je
sub
sub
call
jle
pop
sbb
dec
push
test
lock
iret
in
jmp
mov
sub
imul
and
arpl
pop
sbb
in
ds
loop
pop
aaa
sub
jmp
popa
jmp
sti
pop
testl
lea
mov
aad
cmp
nop
sti
and
fisttpll
add
ret
in
sahf
or
push
mulb
in
fbstp
jg
xchg
shlb
aas
mov
test
les
fstpt
iret
scas
mov
cmp
pop
jmp
and
ljmp
shrl
adc
adc
lds
shrb
mov
aam
ja
and
and
test
mov
or
and
mov
ljmp
push
iret
adc
lahf
or
scas
xchg
lock
scas
push
and
pop
xchg
pop
mov
jmp
jmp
mull
stos
insl
inc
push
cmc
adc
imul
xor
pop
ficompl
lods
jg
rcr
cmp
jb,pt
out
mov
out
outsb
xor
imul
icebp
test
ss
jnp
stos
cmp
cmp
rcrl
push
jae
and
cmp
andl
outsb
sbb
dec
pop
lods
ret
out
cltd
xorb
push
mov
out
push
int3
mov
pop
enter
pop
or
and
ret
and
iret
inc
out
and
sti
lahf
hlt
xchg
dec
cmc
sbb
pop
push
les
mov
inc
outsb
lret
pop
pop
xor
ljmp
mov
adc
loope
call
hlt
mov
in
mov
push
or
imul
pop
mov
xor
jl
mov
pop
arpl
mov
lods
adc
cltd
mov
mov
inc
fsub
adc
and
cltd
dec
ret
sarb
lret
leave
inc
pop
add
enter
xor
imul
jnp
dec
aas
in
cmpsl
in
mov
adc
mov
push
insb
adc
push
cmp
xor
adcl
pop
out
push
inc
sub
adc
divl
sahf
fnsave
aas
adc
xchg
stos
push
in
cmc
xchg
xchg
fdivs
int3
sbb
mov
mov
inc
mov
popf
inc
and
lds
cmpb
cwtl
jo
and
jne
shlb
push
fs
pop
add
cmp
dec
mov
sub
jbe
cmpsl
cltd
mov
sub
call
xor
decb
or
sbb
scas
pusha
cmpsl
pmaxsw
jg
iret
sti
daa
ljmp
xchg
imul
dec
insl
lret
rclb
stos
push
inc
mov
cmp
cld
out
jp
inc
das
sbb
mov
mov
jns
or
stos
dec
repnz
ja
inc
inc
pop
mov
adc
cmp
push
fmull
lahf
lcall
xor
jae
int3
cmc
mov
ljmp
nop
sbb
ss
xchg
cltd
idivl
out
and
out
push
push
sbb
push
int3
cmp
ret
inc
arpl
inc
sub
ss
mov
das
bound
into
mov
adc
fidivrl
jmp
call
lods
cmp
push
sub
pusha
out
test
mov
clc
jmp
pop
loope
inc
fcoms
call
mov
lahf
das
cli
shlb
and
mov
inc
adc
push
adc
ret
fiaddl
aaa
adc
cs
push
pop
pop
ror
into
in
sub
jmp
lods
outsl
test
leave
nop
lret
into
mov
add
rolb
mov
cwtl
inc
imul
mov
pop
mov
loop
mov
mov
adc
mov
dec
and
jo
aad
lret
xchg
inc
ja
jbe
out
data16
das
movsb
int
xchg
mov
clc
inc
hlt
adc
pop
sarb
xor
aas
xor
pushl
adcb
idivb
push
cltd
add
ja
cmpsl
fwait
lds
out
push
aam
outsl
jns
rcl
lcall
push
mov
imul
xor
fsub
cmp
push
cmc
shll
cmp
lret
icebp
sub
xor
in
addr16
js
pop
sub
push
push
adc
rcl
scas
xchg
clc
mov
and
add
hlt
inc
cmp
test
xor
mov
xchg
add
xchg
push
in
loopne
jnp
push
shrb
aas
out
or
ret
std
loop
jecxz
pushf
jno
cwtl
ds
mov
pop
popa
mov
jae
outsb
and
rcrb
stos
jae,pt
inc
add
movsl
or
repnz
outsb
push
mov
inc
out
outsl
fnstcw
inc
cmp
out
das
pop
loopne
int3
cmp
fdiv
inc
pop
aad
xor
inc
push
xchg
cmc
mov
out
push
cltd
insl
bound
dec
push
clc
ljmp
jmp
push
testl
push
jecxz
jp
sub
mov
push
dec
mov
xor
pop
mov
add
mov
test
mov
mov
adc
sbb
test
rcll
fcmovnb
in
push
aaa
xchg
das
imul
imul
movsl
pop
and
filds
lret
mov
iret
out
cmp
xchg
push
mov
cs
mov
push
add
adc
jno
lock
enter
js
in
aaa
xchg
mov
ss
push
jo
and
movsb
mov
daa
or
xchg
data16
daa
stos
cltd
jo
xor
push
cmpsl
aas
jge
or
leave
mov
and
mov
pop
push
pop
push
out
movsb
in
loop
dec
in
add
addr16
mov
mov
test
popa
xchg
testb
cmp
mov
neg
xchg
jne
mov
mov
xor
pop
js
pop
adc
dec
in
pop
lds
and
cmpsb
enter
and
out
mov
sub
pop
push
cmp
mov
out
or
cmpsb
es
or
pop
rcrl
comiss
lcall
lods
adc
aad
mov
pop
stos
jb
adc
jl
push
sbb
push
jno
test
jb
je
xor
js
mov
enter
sub
mov
xchg
sbb
mov
dec
or
std
jo
push
sub
pusha
jp
lahf
xchg
lcall
dec
push
mov
push
jo
cli
xchg
hlt
or
jb
lret
jo
push
jmp
jno
call
pop
outsl
mov
adc
stos
or
and
jns
fbld
pop
jge
push
mov
add
mov
mov
repnz
adc
outsl
cmpsl
rcrl
enter
outsb
int3
les
orb
sti
jmp
pop
jge
movsb
pop
popa
subl
xchg
or
loopne
xor
mov
aas
fisttpl
sbb
add
mov
mov
cmp
into
xchg
insl
scas
scas
in
stos
rorl
clc
mov
lcall
iret
or
pop
add
sbb
std
out
jo
mov
pushf
cltd
adcl
lcall
rolb
sbb
pop
sub
addr16
cmpsl
pop
add
dec
xor
into
adc
xchg
jle
mov
dec
pop
scas
outsb
mov
jp
push
dec
push
dec
inc
and
jno
and
ljmp
push
mov
cmp
adc
ds
or
cld
cmp
xchg
aaa
loope
sbb
nop
dec
lret
add
in
adc
loopne
cmp
xor
sarb
adc
pop
js
cmp
movsl
jno,pt
sbb
push
sbb
inc
xchg
push
cli
cld
mov
loope
dec
sbb
cmp
and
mov
fsts
mov
sub
jbe
dec
adc
mov
cmp
shrb
daa
adc
inc
add
and
scas
or
pop
mov
aaa
in
hlt
ja
mov
adc
loope
pusha
sti
negl
lahf
jb
pop
andl
and
jo
inc
ss
sahf
mov
enter
aaa
leave
jmp
pop
pop
addl
out
mov
out
inc
or
rolb
into
cmp
hlt
rcrb
fsts
adc
jle
sbb
jnp
mov
dec
pushf
data16
sbb
adc
pop
ljmp
lahf
jecxz
lret
packssdw
xor
ret
cmp
loopne
xor
outsb
add
sbb
fisttpl
jb
mov
jne
aad
sbb
aaa
push
je
push
pop
jo
iret
out
outsl
and
fldcw
mov
andl
js
daa
xchg
add
xor
in
pushf
mov
mov
push
out
in
pop
inc
dec
adc
dec
pusha
daa
add
xchg
imul
out
aaa
push
sahf
fdiv
js
stc
arpl
xchg
mov
dec
sti
or
es
sbb
xchg
icebp
enter
pushf
adc
rcrb
iret
divl
js
sub
add
arpl
sbb
ret
pop
movl
cmpsb
nop
outsb
xlat
in
push
leave
lock
pop
cmpsl
popa
enter
loope
in
ret
cmpsb
lahf
rcrl
pop
push
jp
call
dec
lret
std
out
shrb
cmp
rcrb
mov
loopne
jns
roll
push
or
in
or
stos
fstps
xchg
jb
and
sarl
bound
add
pop
cmp
fwait
cmp
adc
fwait
arpl
popa
sub
push
inc
dec
jl
pop
loop
hlt
dec
mov
test
scas
in
jp
and
test
bound
mov
xchg
in
mov
push
cmpsl
adc
mov
sbb
mov
mov
pop
xor
jmp
mov
mov
pop
bound
xor
cltd
loope
xor
negl
sbb
and
fwait
idivl
pop
cmp
jne
push
or
stc
push
je
stc
daa
ljmp
add
std
cmp
sbb
sahf
lret
lock
cmp
adc
aas
sub
cld
xor
lods
xchg
mov
negb
sbb
int3
ljmp
bound
ljmp
pop
xchg
mov
or
dec
in
shlb
mov
aaa
adc
jns
sbb
lds
lcall
xchg
repz
fsubrl
fimull
jmp
ret
pop
je
pop
cwtl
sub
jecxz
mov
pop
inc
push
jl
ja
lock
lret
ja
cmc
repz
lret
push
push
or
sbb
stos
shl
fimull
cmp
mov
pop
sub
outsl
addr16
lods
ds
pop
addb
jp
adc
ljmp
cmc
sbb
int3
jne
or
lret
xchg
and
mov
adc
mov
adc
mov
stos
data16
push
jb
fnstenv
out
addr16
sbb
mov
icebp
enter
pop
pop
adc
xor
mov
xchg
cld
jge
cmp
repz
lock
push
inc
loope
fidivrl
stos
adc
or
ds
pop
add
scas
and
push
out
push
and
lds
in
ret
jno
cmp
ljmp
ds
fs
mov
loope
push
add
add
pushf
ret
repnz
xchg
mov
mov
cmp
in
in
mov
insb
ficomps
xor
aad
jmp
and
lret
jle
out
push
gs
sbb
inc
leave
outsl
icebp
dec
sbb
dec
xchg
cmp
lahf
jmp
addl
imul
pop
fidivs
mov
dec
mov
cmp
shlb
out
mov
jg
adc
out
ss
push
mov
inc
inc
jecxz
add
shll
int3
cmp
add
or
neg
out
jge
sub
cmp
ljmp
push
push
pop
mov
or
sub
mov
int3
pop
and
mov
adc
dec
aad
gs
xor
jle
mov
ja
test
fidivrs
push
mov
enter
inc
iret
pop
ja
xchg
sub
das
lret
inc
sub
sahf
or
and
push
mov
cmp
pop
mov
or
je
in
in
mov
das
dec
push
mov
out
push
mov
test
push
pop
pop
or
cmp
xchg
xor
jl
loope
jne
aam
mov
imul
and
mov
into
jnp
cli
mov
jmp
mov
test
inc
out
dec
test
sub
push
or
pop
push
jmp
mov
hlt
pop
cwtl
jne
sbb
pop
or
inc
insb
test
aad
xor
mov
xchg
rcrl
push
push
lea
cltd
cs
xchg
int
pop
iret
inc
movsl
pop
and
lock
shr
in
dec
loopne
cmp
xchg
sub
lcall
add
scas
daa
xchg
fdivrs
mov
add
mov
mov
pop
outsb
cmp
or
jb
and
call
push
jns
push
inc
subb
das
mov
sahf
sbb
mov
je
bound
and
cmp
adc
das
ja
push
dec
dec
inc
or
dec
in
sbb
rsqrtps
mov
push
jecxz
aas
imul
xor
mov
cmp
sub
dec
call
sbb
lcall
sti
push
mov
in
jg
mov
ss
sub
adc
xchg
stos
xorb
sub
test
pop
cltd
pop
loop
shlb
add
cwtl
je
fucomp
ret
pop
inc
fcoml
cwtl
cwtl
gs
popa
cmp
mov
dec
add
fbstp
mov
jno
out
add
cmp
inc
sahf
test
lds
xchg
xor
les
pop
dec
test
imul
ljmp
push
dec
inc
pop
xchg
outsl
or
add
cld
cbtw
mulb
xor
jo
xchg
add
mov
sub
jecxz
jno
mov
jno,pt
bndstx
cmpsl
inc
inc
mov
fistps
jnp
mov
lahf
xchg
lds
nop
int3
adc
gs
mov
cli
jb
out
xchg
inc
jno
sbb
mov
mov
mov
mov
movsl
mov
fistl
cld
cmpsb
xchg
lds
in
mov
and
cmp
roll
fldl
bound
loopne
jge
outsb
int3
shl
outsb
mov
aas
fmul
inc
popf
jg
pop
mov
or
mov
sbb
cmpsl
mov
xchg
push
add
push
cmpsb
push
xor
sbb
push
das
repnz
mov
outsl
popl
xchg
and
adc
jno
fcoml
in
inc
add
mov
mov
dec
mov
pop
mov
push
scas
mov
xchg
clc
cmpl
inc
lods
sbb
fmuls
add
rcll
in
pop
add
pop
cmpsb
arpl
ficompl
mov
inc
test
mov
mov
and
push
leave
mov
or
inc
aam
mov
loope
mov
push
push
mov
sar
repz
ljmp
ret
leave
outsl
mov
sub
out
xorb
es
xchg
ret
imul
fst
push
movsb
sarb
cs
out
fdivp
ret
jle
jl
repz
fiaddl
xchg
fsubrs
mov
outsb
in
testb
mov
xchg
iret
movsl
add
in
repz
aam
outsl
push
push
loop
mov
sub
aaa
jno
xchg
into
mov
ljmp
mov
iret
push
xchg
adc
and
dec
mov
and
rcl
inc
cmp
popa
lret
mov
lcall
sub
lock
mov
mov
loope
imul
pop
ljmp
out
out
inc
dec
sub
xlat
in
mov
push
mov
cmp
mov
ja,pn
mov
or
dec
and
xorl
call
sahf
rcll
jecxz
xchg
scas
xor
outsl
dec
mov
mov
jge
jle
push
mov
subb
in
jns
ds
xlat
push
inc
adc
xchg
lods
bound
aam
pop
cs
rol
andb
dec
sbb
and
std
cmp
cwtl
mov
imul
sarl
sbb
adc
in
cltd
jge
pop
or
inc
dec
arpl
push
cmp
fwait
lods
int
adc
nop
sbb
jno
xchg
and
add
add
pop
jno
repz
jo
cmp
sbb
das
and
jp
sub
outsb
jecxz
loopne
mov
jl
and
outsl
push
cmp
dec
rcrl
cmp
nop
popf
or
pop
shll
adc
aam
mov
inc
or
pop
mov
fnsave
iret
ja
push
das
rep
push
mov
xor
xchg
and
adc
fistpl
pop
mov
pop
ror
int3
jmp
mov
shr
sub
ss
and
jmp
mov
mov
aam
lret
mov
adc
push
and
std
test
push
shll
pushf
jle
fwait
iret
cmp
xchg
push
insl
mov
xor
enter
aad
dec
sub
cwtl
lcall
mov
je
frstor
enter
push
jo
fs
mov
movl
sub
sbb
andb
cld
mov
cli
cmp
xchg
cmp
das
dec
inc
mov
pand
pop
add
xor
pop
mov
push
cmp
xor
mov
stos
pop
xchg
cmp
arpl
ret
gs
xor
ljmp
xor
seta
xchg
sarb
lods
xorl
push
stos
xor
ret
dec
sub
aad
mull
cmp
in
mov
pause
fidivrs
popa
das
in
mov
imul
ficomps
lret
scas
xor
popa
mov
xchg
xor
jnp
stos
dec
stos
inc
ret
jecxz,pt
repnz
mov
xchg
int
sti
out
clc
xor
out
dec
jbe
mov
int3
das
adc
xor
fstps
lahf
jp
insl
cmpsb
add
pop
out
sbb
xchg
dec
xor
int
stc
mov
cmp
mov
out
add
fcomp
iret
rclb
stos
repnz
ret
cmp
jmp
dec
xchg
mov
out
add
push
and
sbb
jg
xchg
daa
and
inc
sbb
popl
pop
xchg
adc
and
mov
cmp
lcall
nop
or
cmp
xchg
xor
dec
pop
nop
push
in
fsubp
jg
repz
add
pusha
sahf
je
popa
in
push
bound
dec
stc
pop
lods
out
addr16
sbb
in
push
push
add
mov
xchg
and
dec
add
ds
push
jmp
xor
ja
int3
and
inc
mov
mov
dec
je
movsl
jg
aas
mov
pop
rcr
sbb
or
outsb
test
data16
add
add
mov
shrl
sbb
mov
or
gs
cmp
lds
jb
pop
enter
dec
mov
into
xchg
fistl
iret
cmc
pusha
xor
repz
aas
sbb
shlb
sub
xchg
sub
insb
mov
movsb
int
mov
xor
lcall
sbb
xor
xchg
arpl
push
ds
xor
dec
lret
jns
pop
aad
and
push
test
push
add
les
lea
shll
cmp
imul
mov
mov
jnp
cmp
push
jnp
inc
loopne
fwait
addb
push
mov
test
sub
lock
insb
repz
pushl
and
dec
inc
sub
test
pop
mov
inc
shr
stos
out
addr16
pop
push
les
xchg
repnz
je
outsb
je
and
insl
mov
cwtl
repnz
mov
aaa
cltd
repz
jbe
xchg
xor
int
jno
rorb
inc
xor
jecxz
nop
insb
repz
imul
mov
cltd
cs
dec
ljmp
dec
pop
std
jae
out
dec
lock
xor
mov
pushf
jle
movsl
nop
xor
jo
dec
cmp
sbb
mov
mov
fisubrs
orb
into
hlt
dec
dec
jmp
push
sbb
mov
lods
arpl
xor
movsb
movsb
mov
pop
hlt
and
rcr
dec
mov
or
cmc
sbb
test
pop
push
add
or
js
sub
out
cmp
cmc
in
mov
sbb
dec
mov
inc
mov
and
or
scas
or
mov
orl
xchg
lret
xlat
xlat
fdivs
das
and
push
call
daa
aam
cmovae
sbb
fs
rorl
sbb
xchg
pop
in
jle
in
fidivs
hlt
lea
inc
shl
clc
lods
out
in
add
push
aad
xchg
add
mov
mov
mov
fsts
lahf
pop
adc
mov
mov
outsb
mov
pop
scas
aaa
or
pop
jle
sbb
pushf
dec
lret
lods
leave
repz
cs
je
mov
xchg
or
sub
xchg
test
xor
lret
in
jmp
out
sarl
adc
ret
mov
xchg
fiadds
rclb
scas
add
mov
push
mov
cmpsb
lock
int
test
or
adc
pslld
xchg
add
cli
and
jbe
dec
mov
ss
das
jl
imul
daa
push
clc
repz
popa
rclb
jecxz
scas
xor
lret
add
sub
cmp
imul
or
repz
jo
cli
xorl
imul
add
fiaddl
lret
idivl
mov
mov
or
xchg
inc
shrb
add
scas
dec
mov
push
sbbb
jmp
gs
push
sub
pop
loop
mov
jmp
adc
jo
fidivs
dec
stos
sub
add
and
jecxz
push
push
xchg
add
xchg
pop
push
or
mov
fisubl
test
or
cmp
pop
fmul
push
dec
fisttpll
ror
scas
xchg
push
xor
inc
dec
cli
daa
push
and
mov
clc
push
mov
pop
jno
mov
mov
aam
mov
push
movsb
dec
cld
imul
cli
cltd
hlt
int
mov
imul
scas
sub
fcoml
fbld
sbb
dec
or
repnz
sbb
mov
cmpsl
push
ds
push
mov
jns
es
lahf
popa
filds
mov
sub
scas
jne
and
add
sahf
loop
mov
xor
dec
aas
jnp
mov
imul
add
in
cmpsl
pop
in
ss
cli
loopne
arpl
out
stc
mov
add
stc
xor
lds
lret
repnz
and
cmp
and
or
xlat
test
push
inc
adc
pop
mov
xorb
repnz
jp
int
cld
sbb
ret
sub
dec
out
mov
lds
insb
notl
and
rorl
add
out
rcl
pop
jb
and
test
cmpb
lcall
scas
mov
insl
ret
mov
pop
icebp
fdivl
add
insl
xor
cld
cmp
mov
out
in
dec
sub
push
xchg
mov
lock
or
cmpsl
mov
imul
mull
fisttpll
push
push
rclb
or
ja
jae
ja
aas
jecxz
loop
jle
lret
mov
sub
andl
test
or
sahf
jmp
test
movsb
dec
loope
mov
daa
lahf
dec
jg
lds
jmp
in
lret
and
adc
mov
sahf
mov
jl
add
cmpsl
xchg
icebp
add
stos
xchg
out
js
push
xchg
testb
movsb
flds
stc
in
dec
xchg
shrl
pop
lret
outsl
lcall
sub
bound
scas
movl
jbe
xchg
xchg
cltd
xchg
push
mov
and
mov
xchg
add
mov
fs
xchg
xor
xor
loopne
or
sarl
fldl
xor
push
pop
cmp
mov
pusha
pop
outsb
cmp
or
fistl
in
jns
mov
mov
pop
mov
rol
imul
and
sub
adc
cmp
mov
int3
psubusw
inc
rorl
cwtl
lods
fadd
and
jns
stos
lock
lahf
jne
sub
pop
mov
ja
pop
frstor
stos
or
jg
leave
mov
bound
xor
sbb
fisubrl
add
xor
aad
out
scas
dec
das
sub
and
mov
shll
mov
push
mov
addr16
jb
cmpsb
int
push
or
or
scas
loope
xchg
xlat
sbb
clc
mov
adcb
mov
or
leave
fdivrs
adc
test
lret
sbb
and
sahf
xchg
pop
adc
dec
ss
aad
aam
ds
insb
es
sub
add
scas
mov
add
xchg
sahf
inc
dec
arpl
pushf
sahf
jb,pt
fldenv
add
mov
and
arpl
cltd
or
or
jae
int
inc
push
add
or
sbb
nop
sbb
push
leave
cmp
push
cmp
mov
sub
rcr
filds
test
popa
movsb
aaa
jnp
ficoml
or
jb
stos
maxps
mov
dec
aas
push
out
xchg
inc
jno
dec
imul
imul
iret
inc
int3
adc
ja
pop
pop
xor
outsl
sub
js
add
cmp
pushf
and
pop
pop
js
aam
mov
push
push
popa
sub
repz
loop
repnz
rcl
mov
cmpsl
cmp
in
fistpl
mov
shrl
or
or
enter
jb
pop
mov
fcomps
push
inc
fs
and
clc
jnp
mov
push
clc
mov
scas
call
add
mov
enter
outsl
repnz
cld
fistpll
xchg
jne
into
pop
xchg
sbbb
cmp
lods
repz
aaa
sarb
imul
int3
sub
pop
push
push
mov
stos
inc
push
enter
fs
sbb
std
call
cmpsl
push
dec
daa
dec
bound
mov
mov
push
fwait
mov
xchg
daa
arpl
mov
stos
dec
adc
loop
dec
jb
ja
ror
in
cmp
jo,pt
movsl
cmp
and
add
xor
cmp
mov
xchg
stos
dec
gs
add
jmp
jb
leave
xchg
dec
pop
scas
decl
mov
cs
sub
test
addr16
or
fildl
jno
jno
mov
incb
test
lods
jle
and
push
imul
or
inc
into
mov
leave
out
popf
enter
cmpsb
idivl
and
sub
ret
pushf
test
aas
in
mov
movsb
pop
in
mov
lea
pop
jns
mov
in
cmpsl
lods
aas
jbe
cmp
jecxz
xor
popf
xor
movsb
ret
stc
cltd
pushf
divb
xchg
xor
les
push
data16
shr
das
aaa
and
mov
mov
gs
jb
pop
fwait
into
test
or
fistpl
movsb
mov
inc
or
sub
xchg
lea
ja
pop
mov
fsub
sub
fisubrl
stos
in
mov
ljmp
xor
jecxz
imul
jmp
mov
adc
adc
ljmp
mov
stos
jmp
mov
out
jg
stc
inc
test
aam
mov
icebp
pusha
cli
sbb
jbe
enter
cmp
gs
das
jnp
dec
arpl
xor
addr16
data16
xchg
or
or
xor
out
cmp
push
pushf
movsb
lret
gs
nop
push
sti
gs
addb
sub
lea
or
sbb
aad
aam
xchg
push
stos
andb
push
jno
adc
adcb
adcb
adc
fsubrl
add
xchg
mov
pop
mov
loop
test
cld
jae
push
jmp
repnz
in
sbb
bound
sahf
ret
xor
cmp
xchg
mov
jmp
cld
mov
mov
ret
bound
loope
mov
stos
mov
aaa
lahf
nop
push
orb
xor
mov
or
repz
sub
scas
pop
mov
and
les
mov
je
fldl2t
mov
shrb
dec
sahf
sbb
mov
repz
push
push
mov
inc
push
sub
cmp
mov
and
pop
push
test
jl
mov
push
cmpsb
insl
sbb
call
pusha
repnz
hlt
test
push
lods
inc
rorb
pop
aad
xlat
add
adcl
sub
imul
pop
cmp
aas
pop
fistpl
adc
xchg
daa
inc
in
mov
fldt
cmp
loop
lock
and
outsb
sbb
into
cmc
mov
mov
mov
push
imul
outsl
test
push
lret
pop
ljmp
fdivp
and
pusha
test
fs
cs
call
lcall
frstor
push
pop
ja
jmp
les
fsubs
jmp
pushf
rol
mov
ficoms
jae
aam
add
push
push
subl
sahf
and
push
lea
daa
adc
sub
aad
sub
sub
add
xchg
pop
mov
push
sarb
mov
adc
sti
push
mov
in
xor
sub
or
sti
scas
gs
push
cmp
xchg
lds
jg
or
cwtl
jb
xchg
adc
pop
icebp
lock
icebp
xor
divl
add
mov
cmp
out
inc
lds
inc
pop
pop
sub
jne
lret
mov
mov
mov
pusha
cmp
out
or
das
push
or
call
and
add
dec
mov
notb
call
push
mov
sbb
and
daa
cmp
faddp
inc
int
lds
out
popf
in
xchg
jp
and
push
inc
mul
js
insb
dec
mov
xchg
jmp
sbb
pop
jno
call
sbb
sub
clc
cmpsl
jbe
adc
jecxz
shrb
les
aas
das
and
clc
jne
stos
mov
scas
in
or
int3
cmp
in
cmpl
inc
pop
bswap
insl
mov
leave
sbb
mov
push
mov
mov
test
jb
fistpll
mov
scas
add
sub
out
arpl
mov
cmp
add
sbb
fadd
and
lods
sti
je
mov
scas
rorl
jae
clc
mov
jle
sahf
ds
je
xor
lahf
push
mov
jno
sub
out
leave
add
movaps
iret
mov
pop
pushf
lds
jg
xchg
inc
mov
pushf
fnstenv
call
pusha
mov
and
xor
daa
push
and
dec
movsb
xchg
cltd
push
push
mov
mov
in
cmp
fwait
dec
xor
lock
mov
repnz
xchg
push
lds
dec
push
adc
dec
cmp
lods
xchg
cmp
push
add
lods
sub
inc
aad
imul
pop
gs
divb
hlt
jns
or
xchg
jbe
pop
jns
aas
cmpsl
popf
imulb
imulb
shrb
mov
push
stos
cmp
push
loope
flds
cmp
mov
mov
in
adc
mov
int3
push
out
addr16
cmp
clc
stos
or
push
jmp
imul
outsl
jb
xchg
in
push
xor
pop
cmpsl
cmp
adcb
fsubl
movsb
add
movsl
setg
lahf
dec
gs
jns
pop
inc
testl
sub
mov
mov
sbb
pop
fsts
add
fnstcw
add
adc
stc
popf
cmp
or
xchg
mov
xor
fisubs
in
and
cwtd
scas
sbb
jno
mov
pop
sub
sbb
cmp
mov
push
fwait
mov
xor
jo
or
je
add
addb
mov
lods
pop
test
or
xor
sub
push
setae
or
mulb
aas
mov
sbb
xlat
orb
xchg
stos
sti
pushf
push
mov
mov
je
cmpsl
dec
and
xchg
push
outsl
test
lods
loope
mov
movsb
pop
and
andb
mov
mov
cmp
cld
loop
stc
jl,pn
and
mov
jmp
ljmp
das
mov
pop
test
jo
out
add
cltd
test
mov
cmp
outsl
xor
dec
add
pushf
jnp
mov
test
xor
jnp
int3
jne
jmp
lret
jmp
lcall
add
jae
fidivrl
mov
adc
aad
mov
xchg
mov
pop
mov
ret
or
add
sbb
lods
mov
mov
sub
adc
inc
out
pop
arpl
daa
loopne
mov
sbbl
xchg
inc
cwtl
sbb
push
sar
adc
mov
and
scas
nop
popa
testl
out
add
add
inc
repz
cmp
push
mov
imul
arpl
dec
pushf
enter
push
pushf
mov
jne
outsb
lahf
lods
mov
arpl
push
xor
faddp
std
int3
lods
and
lret
fucomi
shl
sbb
sbb
sub
cmp
shlb
dec
push
cmpsb
push
pop
push
mov
pop
inc
dec
jge
hlt
and
je
and
jno
sub
les
in
xchg
mov
jle
jo
outsb
and
xchg
mov
loope
lods
rorl
cmpsb
cmp
xchg
popa
scas
fldcw
push
pop
push
nop
mov
push
xchg
xchg
test
fldcw
cs
fcmovb
call
cmp
sbb
popa
loop
fldz
movsl
fstpl
fs
dec
and
cmpsb
pop
icebp
jecxz
sbb
and
jnp
mov
or
je
pop
or
push
xor
mov
ret
aad
and
jp
cmp
add
in
adc
cli
sbb
dec
sub
decb
test
or
mov
cmp
test
jge
rcll
and
or
or
cs
cmpsl
fs
aaa
pop
movsb
push
movsb
xchg
pop
dec
adc
mov
bound
sbb
sbb
movsb
scas
inc
data16
icebp
es
in
mov
daa
mov
imul
out
mov
and
xor
cld
mov
rolb
push
pop
movl
lods
mov
mov
in
xchg
cwtl
loopne
movsb
iret
shr
mov
fistl
rclb
and
mov
sub
inc
cltd
mov
and
jne
and
in
fisubs
and
orl
sahf
in
inc
pop
stos
inc
out
sti
fdivrs
es
cs
mov
jl
fcoml
jp
push
inc
mov
add
mov
fimull
mov
sarl
jg
popf
into
mov
xor
xchg
lcall
repnz
xor
call
sbb
fisttpl
mov
aas
cs
clc
lret
adc
pop
dec
mov
xor
mov
mov
arpl
cmp
sahf
inc
pop
dec
pushf
lods
sti
fbld
orb
cmc
or
popf
enter
fsubl
jecxz
popa
test
test
xor
dec
cmp
or
push
sbb
mov
xor
cwtl
jnp
imul
jbe
fwait
test
out
sub
mov
pop
and
mov
inc
out
stos
and
xor
lret
idivb
lea
push
add
ja
mov
push
add
and
lahf
pusha
ret
rorl
adc
sub
aam
add
int
mov
test
inc
iret
sbb
cs
enter
sbbb
add
ss
xor
lds
pushf
or
scas
gs
add
xchg
adc
mov
loopne
mov
dec
rorb
in
push
shll
ljmp
mov
ds
jb
js
xchg
sbb
loopne
stos
xor
imulb
mov
addr16
jge
ja
adc
adc
andl
push
ret
add
in
nop
pop
sbb
insl
aaa
pusha
aad
dec
les
test
popa
jae
mov
sub
jge
dec
fucomi
cmc
std
jl
dec
adc
arpl
mov
add
jg
sbb
mov
in
jns
ret
adc
jp
sub
adc
lock
andl
sub
dec
sbb
cmpsb
xchg
movl
pop
adc
xchg
dec
pop
fcoml
sbb
pop
and
sbb
mov
std
push
add
fwait
lock
mov
rclb
ret
mov
add
mov
xor
sub
and
dec
in
sahf
enter
aam
sub
add
ja
sbb
cmc
pop
aaa
int
in
loopne
jns
xchg
popa
push
jmp
je
jae
adc
and
jp
shll
mov
lods
and
bound
lcall
ja
mov
iret
orb
or
andb
mov
leave
push
out
sarl
add
mov
fistpll
hlt
mov
mov
fistl
and
xor
dec
xchg
movsb
cmp
sbb
sub
inc
push
rorl
out
in
fyl2x
xlat
ljmp
les
test
xchg
sub
sbb
xchg
lret
push
out
fadd
stos
inc
push
pusha
mov
mov
pop
xor
aam
jl
test
jo
sbb
popf
xor
faddl
pop
jne
xchg
int3
push
or
inc
dec
or
or
mov
xor
dec
fistps
bound
fbstp
xchg
fildll
cmp
mulps
jle
iret
adc
mov
bnd
xor
dec
ja
das
dec
popf
push
icebp
mov
sbb
or
jo
out
mull
lods
fcoml
xor
test
lret
push
test
in
xor
jmp
push
mov
sbb
fld
jecxz
xor
dec
xchg
jbe
imul
cli
and
leave
loop
in
push
icebp
jge
cltd
in
inc
mov
into
loopne
and
sub
mov
or
pop
cltd
xchg
mov
mov
fcompl
jecxz
icebp
cmp
mov
dec
insl
in
cs
push
mov
jle
je
cmp
xchg
rolb
enter
sbb
jae
jg
mov
jbe
stc
xchg
mov
icebp
nop
stos
or
mov
popa
xchg
js
fnstsw
out
mov
inc
stos
addb
fstpt
movsb
mov
xchg
mov
mov
popf
pop
xor
add
inc
mov
inc
cwtl
stos
mov
lds
or
xchg
pop
or
rcrb
aas
inc
mov
in
jecxz
rclb
lods
inc
dec
testb
pop
xchg
pusha
lret
test
adc
imul
loope
push
push
jl
pop
nop
in
jge
pop
dec
lods
sub
jbe
jmp
mov
xchg
insl
gs
xlat
call
ret
xchg
addr16
shl
lahf
pop
scas
aas
ljmp
in
aaa
mov
cmp
cs
cmp
cmp
loopne
sub
out
mov
mov
ss
add
xchg
outsb
jb
fdivr
enter
adc
mov
or
xor
test
out
das
lcall
sbb
jg
hlt
sub
popf
divb
sbb
mov
inc
into
shl
test
out
fs
outsl
jmp
in
ss
mov
shl
mov
dec
cmp
mov
fwait
xor
push
push
std
sbb
cwtl
pop
or
stos
popf
lods
out
adc
inc
jnp
sbb
jb
and
pop
lcall
loopne
scas
shrb
mov
or
sbb
lock
out
lea
lock
pop
sbb
jp
mov
mov
push
sbb
ss
and
test
addr16
xchg
inc
and
xchg
fldt
cs
pop
dec
adc
flds
adc
push
xchg
mov
xor
adc
pop
and
or
or
and
cwtl
and
xchg
movsl
sbb
js
push
out
ss
in
test
pushf
dec
dec
push
dec
mov
xor
fsts
dec
out
cmp
push
mov
pusha
pop
xor
push
sahf
gs
jle
and
or
jmp
popa
les
icebp
sub
shlb
mov
mov
xchg
xchg
jb
mov
inc
cwtl
jecxz
stos
icebp
hlt
and
adc
pusha
xchg
cwtl
loope
jo
pop
add
dec
adc
leave
jae
sbb
xor
push
and
pusha
push
xor
dec
les
iret
repnz
pop
cmpsl
inc
daa
out
fsubl
xor
imul
arpl
mov
jae
sbb
mov
test
cmp
pop
aad
pop
cmc
mov
int
mov
loope
jb
lods
jp
add
dec
je
mov
xchg
xlat
jae
call
es
push
xor
inc
inc
inc
mov
add
push
xchg
inc
out
pop
int
and
rolb
mov
mov
das
test
fistpll
xlat
xchg
sti
mov
inc
inc
imul
cmc
jne
pushf
int3
jno
cld
aaa
rcr
inc
pop
int
rorl
incl
xchg
pop
xor
insb
scas
inc
jmp
add
add
sbb
cmp
jb
jns
movl
add
lea
outsb
lds
in
add
sar
dec
std
fistpl
filds
inc
aas
or
dec
add
mov
sbb
xor
aas
jmp
jmp
xor
inc
ret
das
mov
shr
lret
fdivs
push
xor
mov
pop
pop
mov
xchg
pop
mov
xchg
push
cmp
jbe
push
shll
fs
push
jb
aaa
es
and
mov
call
pop
sbbl
inc
push
lret
rcl
pop
popf
dec
aas
jno
xchg
cmp
movsl
dec
iret
or
es
mov
mov
sub
into
test
nop
dec
mov
movsb
int
mov
int
inc
pop
fwait
es
fsincos
stc
pop
jo
and
loope
jmp
push
out
fwait
cmpsl
push
mov
push
jns
pop
outsb
push
push
jmp
jmp
push
push
xchg
nop
jo
test
or
inc
mov
push
nop
jno
xchg
cmovge
cmp
adc
dec
fmul
sbb
popf
ret
scas
mov
mov
cmp
es
add
or
xor
rcrl
scas
int
push
test
push
cltd
push
inc
mov
out
xor
jmp
iret
repz
cmp
data16
push
stos
inc
movsl
and
lahf
in
ljmp
mov
icebp
pop
adc
xor
mov
roll
repnz
or
das
rorb
push
hlt
in
fbld
adc
add
fimull
sbbl
dec
ljmp
fnstcw
inc
setno
mov
and
mov
call
jle
xchg
es
mov
fcmovne
cmp
or
push
xor
clc
mov
jne
push
cmpsb
out
cmp
jl
and
loop
or
adc
inc
iret
cs
jbe
repnz
int
fadds
pop
rcr
push
mov
cmp
lock
jle
inc
imul
mov
sub
cmpb
sti
loope
lret
aam
ret
test
jb
push
addr16
outsb
jo
adc
sub
clc
cmp
in
jo
and
enter
rorl
ss
je
subb
and
hlt
push
hlt
mov
repz
stos
or
dec
or
push
cmpsl
rcl
push
les
jb
dec
add
mov
outsb
ds
inc
jno
push
mov
mov
push
jbe
pop
push
fcmovu
adc
incl
aas
adc
and
test
mov
push
push
and
aas
insb
pop
test
iret
sbb
jle
shl
mov
ret
testl
push
aam
add
jno
add
aad
push
jl
push
xchg
or
data16
xor
dec
icebp
and
sbb
xor
movsb
inc
test
inc
or
adc
ret
mov
or
fcmove
pop
addb
pop
fsub
xor
call
and
lock
mov
mov
in
fisubrs
movsl
push
ret
lret
dec
out
inc
mov
fldenv
sub
xlat
stos
aas
imul
xchg
fdivs
xchg
sub
and
stos
loopne
sbb
rorl
cmp
mov
daa
imulb
sub
loopne
popf
push
lcall
inc
icebp
es
test
and
or
leave
popf
inc
add
cmpsb
mov
mov
jns
in
stos
arpl
mov
add
test
jmp
dec
jae
adc
fmuls
adc
test
leave
in
arpl
mov
push
cmp
ss
mov
imulb
mov
cld
int
shll
cmp
xchg
jo
divb
and
and
je
xlat
cld
pop
repnz
pop
wrmsr
and
mov
and
insl
divb
xchg
sbb
adc
pop
adc
mov
call
sbb
test
dec
cli
stos
mov
lds
sbb
xor
dec
mov
leave
xor
mov
jnp
inc
lods
cmp
repz
pop
ret
mov
ficomps
loopne
xchg
sti
sbb
and
mov
pop
adcl
out
dec
movsl
jmp
out
or
rclb
daa
xor
aad
rcrl
int3
out
adcl
cwtl
icebp
inc
dec
jmp
lahf
push
add
roll
cs
stos
xor
out
cwtl
daa
xor
mov
enter
cmpsb
mov
movq
inc
adc
and
divl
jbe
fsubs
xchg
and
jb
shll
imul
adcb
push
outsl
pusha
or
xor
add
add
repz
add
scas
dec
rcrb
lahf
mov
xor
mov
lret
mov
sub
pop
jge
pop
test
or
mov
adc
adc
push
out
inc
fsubrs
mov
inc
je
int
arpl
pop
pop
xchg
insl
adc
outsb
ds
into
into
mov
mov
popa
and
aad
into
push
push
or
cmp
icebp
lds
ror
mov
daa
cli
add
sub
sub
mov
or
mov
sub
lcall
sub
mov
inc
push
xchg
popf
xchg
fnstenv
mov
sub
or
pop
jb
mov
or
sub
adc
jecxz
mov
test
in
outsb
pop
divb
popa
jmp
cs
push
imul
jl
mov
mov
mov
rep
mov
pop
mov
xchg
popa
popf
arpl
add
jmp
and
gs
lea
dec
and
insb
pop
or
mov
cmpsl
xchg
add
push
sbb
insl
in
cltd
adc
neg
out
aas
out
sbb
jl
pop
add
inc
sbb
sub
jge
cli
jle
dec
sbb
xor
ficompl
in
outsl
insl
inc
notb
fidivrs
sbb
imull
inc
mov
pop
std
stc
mov
out
push
add
jmp
sbb
push
pop
cwtl
push
mov
outsl
cmc
insb
dec
aad
cmp
les
push
faddp
call
loop
idivb
xchg
mov
andb
clc
leave
mov
xchg
cmp
and
push
or
push
dec
ds
sub
aad
pop
xchg
repz
hlt
pop
add
aas
repnz
je
insb
pop
pop
aam
jg
mov
or
inc
out
int
pusha
cwtl
jae
and
jecxz
xor
iret
lahf
mov
xchg
mov
imull
mov
sarb
pop
and
pop
sub
sbb
sbb
sub
iret
aam
ss
push
xchg
cli
jp
subb
repnz
add
pop
fbstp
int3
imul
xchg
or
int3
inc
fadds
ljmp
and
sbb
cli
addb
cmp
jecxz
lods
in
shrb
fistpll
dec
pop
sub
outsb
loope
sub
mov
mov
leave
mov
ret
adc
movsb
adc
cmp
outsb
xor
scas
fs
pop
jmp
xchg
gs
scas
cmp
fstps
inc
ljmp
inc
jo
mov
insl
push
mov
pavgb
ret
aaa
pop
xchg
sbb
inc
sub
repnz
loope
sbb
out
movsl
adc
ret
das
dec
push
push
mov
and
xor
aam
std
pop
pop
push
jge
inc
shrb
je
es
cmp
test
fdiv
fnsave
inc
jl
jmp
mov
pop
iret
roll
sarl
or
out
mov
mov
std
adc
notb
mov
jge
pop
jmp
rcr
sbb
mov
jb
stc
dec
outsl
mov
stos
mov
xchg
sahf
cmp
push
mov
push
adc
cmp
or
das
cmpsl
mov
adc
pop
test
mov
sub
jno
pusha
andl
inc
adc
mov
fucomip
sarl
sub
pop
or
test
cltd
mov
addr16
dec
dec
xchg
jle
insb
sahf
xchg
sbb
mov
add
adc
pushl
rorb
movsb
mov
loope
ret
xchg
addr16
std
in
add
pop
repnz
rclb
mov
testl
outsb
cld
dec
int3
push
daa
adc
inc
call
call
mov
rclb
add
hlt
rorb
inc
adc
dec
pop
icebp
push
cltd
jbe
test
sti
mov
sbb
flds
das
adc
xchg
pop
xchg
in
icebp
xchg
and
int
nop
pushf
xchg
inc
test
pushf
ljmp
inc
xor
add
sahf
scas
sbb
js
cmp
clc
ja
test
inc
inc
mov
ficomps
jne
repz
adcl
jb
fs
xchg
jo
mov
int
dec
inc
add
out
push
xorl
cmp
inc
call
adc
cmc
rcrb
sub
lock
cmp
xor
sub
inc
out
call
rcrl
insb
dec
mov
stos
mov
imul
mov
imul
mov
cwtl
in
inc
sahf
jle
jae
jnp
cmp
add
xchg
push
idivb
sub
fcmovbe
adc
dec
test
popa
scas
push
jo
lcall
dec
subl
pop
fidivrs
pop
les
mov
bound
shll
mov
pushf
jp
loop
xchg
mov
jae
clc
sbb
or
mov
stc
pop
mov
cld
iret
xor
jl
cwtl
mov
loopne
js
adc
adc
pop
xor
pop
dec
adc
mov
imul
wrmsr
insb
push
push
mov
push
in
rolb
and
cmpb
mov
add
fcomps
jle
fstpl
inc
icebp
sbb
out
std
lods
xor
inc
addr16
and
aad
push
stc
dec
rcrl
xchg
jnp
in
shl
aad
inc
js,pn
cltd
sbb
subb
push
mov
pop
repnz
loope
leave
aaa
jne
cmp
xchg
imul
or
int
dec
popl
aaa
jge
es
xor
mov
inc
inc
inc
inc
clc
in
mov
xor
sbb
mov
lds
xor
jmp
jo
out
jmp
xchg
cli
inc
xchg
popf
call
and
repnz
mov
adc
loopne
xchg
mov
shlb
pusha
pop
std
jmp
add
icebp
inc
insl
ret
mov
push
mov
shrl
pop
lea
and
push
and
sbb
ds
cmp
stos
sub
cmp
in
out
popa
outsl
loopne
add
mov
push
lods
rorl
xlat
out
fiaddl
add
mov
xor
mov
lods
testl
inc
cmpsl
xor
lods
leave
call
loopne
xor
dec
lea
pop
pop
add
decb
dec
xchg
push
dec
mov
sub
clc
test
arpl
sbb
fnsave
add
sub
jmp
mov
es
pop
adc
sub
dec
lahf
aas
inc
mov
mov
andb
inc
shlb
arpl
ss
adc
popf
pop
testl
push
sbb
sub
jge
push
push
mov
into
mov
jnp
insl
jmp
ret
jmp
lret
dec
xchg
lahf
mov
xchg
mov
cmp
cmp
xchg
adc
and
or
add
arpl
not
shlb
pop
sbb
fimull
filds
rcll
nop
notl
insb
mov
lea
jbe
mov
sub
xor
lock
xchg
scas
js
xchg
mov
mov
sub
je
sbb
aaa
rcrb
and
push
test
leave
shll
xchg
out
bts
xor
or
xchg
sbb
inc
sbb
xchg
les
ret
loope
mov
mov
push
pop
stc
aad
fsts
mov
inc
daa
xor
daa
mov
mov
adc
inc
lods
fcomps
iret
jo
mov
xor
lahf
insl
fs
test
loop
cwtl
jle
stos
out
fs
test
push
insl
cmp
xchg
adc
sub
dec
cmp
mov
xchg
jg
or
testb
fimull
xor
cld
sbb
adc
ljmp
mov
inc
inc
cmp
add
ret
pop
out
pop
sbb
mov
rorl
mov
push
sbb
aam
mov
xchg
jne
push
popf
mov
in
repz
inc
ds
and
sbb
lret
push
inc
mov
jno
jne
aaa
push
xchg
into
mov
xor
outsl
adc
push
adc
xchg
fwait
mov
inc
mov
push
in
jb
xchg
mov
mov
ds
mov
hlt
add
or
inc
movsb
xor
fwait
sub
cwtl
bts
cmp
xchg
pop
ret
jp
inc
cmp
movsb
mov
ja
sahf
std
ret
loope
not
add
xlat
lcall
jno
push
adcb
mov
rorl
lock
inc
aad
sbb
and
jmp
mov
inc
sub
jns
ret
add
xchg
ljmp
into
mov
aas
popf
clc
outsl
xor
cwtl
repz
ret
sbb
sbb
stos
rorb
out
or
cmp
popa
cltd
push
xor
mov
and
add
or
push
mulx
xor
sbb
sub
lahf
ficomps
pop
sbb
jle
mov
cld
popf
pop
sti
setns
pushf
dec
aas
push
push
sahf
in
jnp
lds
mov
lods
jno
out
push
adc
add
sub
cwtl
pop
mov
jmp
jle
push
in
xchg
in
and
or
adc
call
xchg
pop
jle
nop
rorb
fdivrl
ret
adc
mov
sub
fwait
pop
das
cmpb
push
rcr
arpl
mov
pop
jmp
cs
and
sahf
fwait
in
loope
sbb
add
adc
pop
add
movsl
lock
jg
inc
add
and
inc
out
outsb
xchg
imul
mov
cmpsl
cwtl
jl
push
leave
or
out
xchg
xor
jno
mov
in
out
in
stos
das
dec
xchg
jns
adcl
rcr
mov
cmp
sbb
hlt
inc
shlb
mov
addr16
inc
in
call
cli
mov
mov
scas
xchg
icebp
lret
lods
cmp
adc
mov
mov
not
das
loope
in
out
lcall
mov
lcall
stc
adcb
and
pop
mov
sbb
mov
push
es
not
pop
or
jge
leave
inc
push
push
mov
cld
jbe
popa
sbb
lret
cmpsl
daa
lea
add
sub
jo
inc
test
inc
imul
sbb
gs
repz
inc
aas
mov
mov
hlt
xchg
push
scas
les
lahf
and
pop
fs
and
lret
mov
loope
xchg
insl
dec
inc
call
push
enter
cmp
sbb
push
ljmp
popf
pop
mov
jmp
inc
xor
aas
mov
daa
and
push
inc
aad
sti
mov
cmp
popf
cmpl
mov
rclb
fsubrl
ds
test
fwait
lds
pop
xchg
cltd
and
inc
jns
sub
mov
arpl
push
stos
jbe
aad
loope
xor
jmp
je
sub
loop
cwtl
mov
jno
or
ja
xlat
mov
xchg
xchg
movsb
mov
dec
jbe
mov
jne
pusha
cltd
in
xor
adcb
sbb
sub
movsb
mov
jne
inc
jl
cmp
push
mov
xchg
and
test
cmp
adc
das
sbb
dec
lds
stc
or
ret
inc
mov
mov
push
das
xchg
iret
xchg
and
les
lods
lods
je
mov
addb
mov
pop
aam
lock
imul
idivb
rdpmc
jle
repz
push
out
sub
icebp
xor
sbb
sahf
repz
mov
dec
sahf
sbb
pop
test
push
jb
push
sahf
pushf
push
push
mov
lea
cmovnp
fnop
lahf
mov
xor
test
pushf
add
aas
fcompl
lahf
cmc
pop
mov
mov
mov
lods
lea
mov
or
icebp
xchg
push
enter
in
sub
sub
push
aam
add
mov
daa
mull
jno
mov
es
and
leave
or
in
mov
xchg
dec
ljmp
and
pop
shll
insb
fs
pop
xchg
ja
loop
out
mov
pop
lahf
or
dec
sahf
insb
xchg
or
and
add
mov
sub
xor
adc
xor
lds
cli
mov
ret
push
mov
mov
fdivrs
flds
pop
fsts
mov
sbb
cmp
popl
insl
xchg
jns
or
xchg
pop
pop
or
cs
outsl
lahf
jns
jle
pop
icebp
inc
or
aad
out
sbb
jmp
and
pop
push
adc
mov
xor
and
fimull
sti
inc
adc
mov
xor
mov
mov
andb
ret
inc
push
in
mov
mov
xchg
outsb
sbb
jne
fisttpl
inc
out
xchg
ret
cmp
jge
cmp
and
shll
cld
mov
mov
and
icebp
jl
iret
jne
sub
inc
ja,pt
xchg
setae
or
sbb
mov
sbb
inc
xchg
fistps
pop
movsb
sbb
jmp
out
push
enter
jl
divb
out
arpl
popf
lret
orb
lods
and
mov
cmp
xchg
xchg
jle
rcrl
cmp
pushf
xchg
mov
cmp
jo
ss
or
cwtl
push
pop
mov
pop
sub
inc
and
dec
cmp
adc
scas
xchg
test
shlb
mov
fsub
jmp
dec
popf
sti
and
jmp
repnz
jp
cltd
aam
sbb
add
pop
dec
xor
fs
adc
xor
xchg
xchg
add
fadd
add
mov
call
jns
in
fadds
jge
stos
mov
add
mov
nop
add
push
fstpl
xchg
pop
into
add
jg
cmp
push
repz
or
dec
ds
adc
mov
inc
ret
lock
pop
sbb
xchg
jo
pop
add
pop
mov
fldt
jbe
inc
loopne
cmpsl
xchg
mov
pop
nop
fnstenv
hlt
jle
loopne
gs
cmc
cs
leave
mov
adc
xchg
cmpsb
mov
fs
lcall
sub
jmp
mov
inc
enter
in
add
mov
lods
scas
sub
mov
jnp
add
pop
xor
jbe
leave
push
clc
ret
mov
into
push
pop
in
ret
sbb
rcrl
push
cwtl
negb
imul
push
pop
lods
cmc
repz
lret
mov
mov
subl
mov
and
jg
mov
cmp
int
and
add
push
xor
xchg
push
scas
push
mov
lods
xchg
repz
push
inc
xchg
sub
pop
pop
pop
mov
and
les
repnz
cmp
fsubrs
scas
shll
subl
jle
movsb
sbb
mov
pushf
mov
lret
negl
cltd
adc
outsl
mov
push
dec
loope
mov
fisubrl
pop
insl
lahf
pop
or
sbb
jg
insl
pushf
push
xchg
xlat
sub
mov
push
inc
mov
scas
inc
jno
pusha
sub
std
mov
div
movsb
insl
mov
jecxz
or
jbe
lods
adc
les
in
in
lret
add
add
push
lods
mov
jno
add
xor
out
sub
test
sbb
repz
aas
xchg
mov
setbe
popa
xchg
stos
sub
cmp
je
out
sbb
orl
jl
pop
movsl
stos
bound
fwait
and
sub
and
mov
lods
fucomip
insb
lds
xchg
mov
rol
lods
mov
std
pushf
lock
clc
insb
dec
loopne
shll
xor
test
jl
cwtl
and
or
daa
nop
scas
shll
in
bound
repnz
aas
xor
out
nop
xchg
movsl
out
clc
mov
xor
out
mov
or
repnz
imul
jae
bound
mov
addb
call
cmp
mov
fwait
cld
jnp
fidivrl
push
mov
sbb
ret
addl
dec
fldln2
in
and
mov
sbb
dec
lret
loop
scas
fcoml
pop
push
push
out
mov
jg
xchg
push
mov
sbbb
xchg
or
jae
mull
cmp
fs
jle
out
pop
movsb
les
bound
hlt
inc
daa
hlt
sbb
sbb
rcll
and
cmp
cmp
mov
bound
imul
xchg
insl
pusha
das
das
mov
sbb
mov
mov
stc
mov
lds
mov
add
movnti
cs
dec
and
mov
fldt
popf
jmp
jo
mov
movsl
pop
cwtl
sti
push
mov
loopne
call
inc
mov
imulb
mov
sub
push
nop
xchg
mov
pop
insl
cmpsl
je
cmp
and
and
xor
push
ds
dec
cmp
outsb
mov
in
sub
jns
loop
mov
aas
pop
ret
pop
dec
insl
aas
cld
and
inc
mov
fs
ret
lahf
dec
ficoms
pop
dec
and
cs
test
mov
clc
sbb
imul
inc
jnp
mov
push
and
lahf
mov
or
push
adc
mov
mov
clc
mov
loope
jmp
xchg
movsb
mov
in
cmp
mov
imul
xlat
lret
jp
mov
mov
fwait
stos
jb
sbb
adc
cmp
push
adc
push
push
mov
push
or
out
imul
loop
add
daa
fisttpll
mov
inc
sub
lods
inc
out
dec
mov
cmp
dec
jbe
testl
shlb
pop
in
sbb
pop
sbb
jb
jns
movsb
lds
loop
sbb
lock
dec
notb
pop
out
sbb
hlt
pop
pop
xchg
jl
push
sbb
pop
push
dec
adc
or
inc
ret
mov
icebp
por
mov
inc
fcoml
orl
adc
inc
cwtl
out
sti
lahf
shr
xchg
sbb
jae
xor
dec
outsb
loopne
lret
sbb
gs
and
sbb
movsl
push
repz
subl
fldenv
call
dec
sbb
jno
call
cmp
sub
inc
pop
push
mov
cld
dec
fdiv
sbb
or
std
mov
pop
out
shlb
push
cmp
sbb
push
xor
in
inc
sub
rol
inc
jnp
xor
sub
cmp
bound
mulb
sub
mov
jmp
rolb
push
repz
shl
imul
jp
jge
mov
xchg
jnp
sbb
cmpsb
or
adc
es
out
pop
cmp
add
pushf
sbb
adc
add
arpl
sub
gs
test
mov
pop
je
cmp
or
push
mov
and
mov
imul
push
pop
in
cmp
enter
sub
pop
in
out
stos
js
xor
in
out
enter
nop
cmp
jae
outsb
lahf
push
sbb
fwait
mov
icebp
int3
flds
mov
pusha
push
add
dec
pop
and
jl
push
clc
inc
mov
fsubl
lods
andb
lret
pop
int
sub
lret
mov
or
sbb
in
scas
push
gs
push
mov
xchg
cmp
in
adc
jns
or
leave
mov
inc
cmp
inc
fdivrl
xchg
scas
subb
jns
insb
inc
rolb
adc
mov
inc
jg
sub
sub
pop
adc
data16
pop
xlat
push
ds
cmc
cmp
lock
aad
cltd
sbb
fildl
inc
xor
cmp
mov
ja
lahf
icebp
xorl
fisttpll
in
add
mov
fcomp
or
ss
sbb
sbb
inc
adcl
jl
jb
and
sub
xchg
push
inc
imul
mov
test
push
faddp
jp
cmp
or
lea
das
test
pop
les
sahf
loopne
jb
ss
cmpsl
pop
enter
fisubrs
cmpsb
repnz
out
imul
xchg
adc
xchg
sbb
xchg
mov
add
push
lods
shrl
push
and
shl
cmp
mov
jge
js
aaa
stos
cmp
in
dec
stos
addr16
inc
xorl
jns
sahf
outsl
inc
push
xchg
xchg
or
sbb
ret
mov
add
mov
popf
loopne
sbb
in
bound
sbb
insb
lock
jg
test
cmp
je
dec
pop
pop
inc
out
mov
dec
ss
push
fwait
mov
test
aam
adc
push
mov
lods
fimuls
fcmove
shlb
xchg
pop
lret
xchg
adc
int3
scas
xchg
or
cmp
cmp
pop
xor
mov
stos
je
std
pop
cltd
pop
mov
mov
repz
popa
lock
lahf
xor
jecxz
inc
daa
out
add
pushf
mov
insl
and
mov
aad
aas
mov
dec
stos
lea
dec
ljmp
test
mov
mov
outsl
ret
int3
push
push
sbb
roll
xchg
lock
stc
mov
dec
jmp
mov
xchg
or
mov
lea
ret
mov
nop
cmp
jmp
lahf
popa
mov
in
push
or
push
lods
and
loopne
xor
jno
or
xor
or
xchg
dec
call
std
inc
fildl
mov
pop
mov
shl
mov
clc
fistpl
pushl
mov
push
arpl
scas
js
int3
sub
add
into
pusha
rclb
or
bound
xchg
cmp
add
popa
push
outsb
pushf
cwtl
and
out
mov
rolb
aad
out
mov
lods
jno
std
mov
jb
sbb
jae
xor
ja
xchg
jae
push
push
popf
add
jae
fincstp
loope
daa
inc
loope
outsb
xor
dec
pop
adc
jne
inc
sub
movsl
jl
aaa
aam
push
aad
cmp
lods
mov
inc
lods
leave
rclb
fs
xchg
rorl
push
pop
xor
popa
push
mov
add
xchg
cmpsb
push
or
data16
and
push
sbb
dec
aad
add
add
cmp
or
rolb
cmp
lea
jle
sbb
test
in
loop
shr
sbb
jb
push
testl
push
dec
adc
sbb
ret
icebp
adc
mov
mov
subl
dec
pop
or
add
xchg
push
call
mov
subl
mov
lret
xlat
ja
fisubrs
inc
rcrb
jge
outsb
pop
mov
test
xlat
ret
and
cmp
xchg
arpl
test
outsl
rcrb
xlat
jae
ja
sbb
cmp
data16
push
pop
out
lods
int3
push
cmpsb
cwtl
jno
insl
pop
push
pop
or
pop
jl
test
push
mov
xor
adc
cmc
add
jbe
je
push
pop
bound
push
mov
ss
lods
cwtl
jne
mov
fucomi
addr16
sti
xchg
dec
add
das
imul
leave
jae
inc
mov
xor
add
xlat
mov
scas
push
mov
sahf
and
xor
xor
sub
lds
jae,pt
adc
inc
mov
jle
mov
xor
mov
add
dec
push
jno
subb
sub
out
enter
or
cmp
lret
repnz
jnp
pop
cld
mov
ljmp
fs
clc
cmp
enter
lods
mov
mov
mov
aaa
or
bound
repnz
and
mov
das
or
arpl
imulb
add
popf
fwait
sahf
push
repz
fdivrs
xor
push
in
cld
out
inc
mov
adc
mov
lods
ret
int
icebp
xlat
dec
sbb
sti
adc
repnz
and
mov
xchg
adc
mov
pop
sbb
pusha
outsb
psrlw
outsl
push
mov
mov
pop
xchg
pop
jbe
sbb
mov
xchg
xchg
dec
lret
loop
popa
jb
fmuls
ret
addr16
ja
or
jne
ds
mov
lds
sbb
xor
insb
ja
aad
ss
or
or
xchg
dec
outsb
fwait
add
call
xchg
mov
mov
cs
sahf
enter
int
clc
orl
rcll
mov
cmp
sbb
push
dec
outsb
daa
iret
pop
mov
pop
mov
sbb
outsb
and
dec
out
jbe
sbb
fisubrs
xlat
xchg
ljmp
xchg
add
adc
jp
xor
std
sarb
cltd
mov
jno
or
mov
mov
lcall
cltd
or
push
jne
push
or
stc
xor
push
xlat
mov
ljmp
mov
stos
cmpsb
pop
repnz
cwtl
jnp
and
pop
add
mov
cmovs
jbe
xor
sbb
xchg
push
or
mov
sahf
pop
mov
cmp
fidivs
xor
dec
jg
lahf
xchg
ja
fnsave
mov
arpl
rcll
int
ret
push
mov
lcall
mov
jmp
jecxz
inc
movsb
push
in
push
enter
add
sub
sub
fldt
icebp
cmp
push
sbb
jmp
stos
pop
rcll
lea
cmp
cmovno
push
iret
xchg
aaa
sub
stos
xor
push
xor
stos
lret
sub
out
mov
aam
loopew
xchg
mov
sbb
jle
inc
xlat
pop
mov
jbe
mov
sti
rcl
cmp
out
lea
mov
testb
xchg
int3
sahf
sti
jbe
in
and
cmp
insl
fisttps
add
test
xor
fistpll
addl
aas
aam
and
repnz
shll
mov
mov
loopne
insl
inc
mov
and
ret
fs
jmp
jae
sahf
iret
test
jmp
dec
cmp
sub
cmp
fcomip
jg
xor
dec
jnp
in
sbb
stc
cs
inc
iret
popf
fdivrl
or
jge
inc
mov
les
mov
add
jmp
jp
repnz
mov
mov
jnp
in
subl
and
add
mov
ret
cmp
and
and
add
fstpl
jge
fcompl
cwtl
scas
aas
leavew
mov
mov
popf
xor
pop
mov
xlat
out
pop
jmp
mov
push
and
idivb
push
test
pop
pop
and
ret
pop
lahf
cmp
jo
add
or
lea
out
jl
add
daa
lahf
cmp
lods
icebp
test
or
push
call
push
rclb
mov
xchg
cmpsl
inc
test
jecxz
mov
or
ds
cmp
mov
mov
xlat
and
dec
jg
testl
icebp
mov
cli
xchg
call
and
adc
inc
mov
sbb
xchg
mov
jns
adcl
cmp
xchg
sbb
xchg
mov
into
loope
cmp
xor
pop
xor
lcall
adc
stos
cmp
and
mov
cmp
inc
and
ret
pop
mov
aam
fdivrl
dec
inc
sahf
rcrb
not
jb
push
xchg
push
repz
adc
shlb
sbb
jge
fidivrl
lahf
sarb
out
fisubrl
push
rcrl
subb
loope
mov
jne
sub
inc
not
jae
xor
mov
insl
adc
and
xchg
aam
fldcw
es
and
test
pop
cwtl
pushf
sub
xchg
das
fwait
sti
je
rorb
pop
dec
sbb
mov
clc
dec
sub
test
ds
imul
mov
jecxz
lcall
gs
or
pop
cmpsb
jg
insb
shlb
push
lahf
cs
mov
xor
data16
sub
out
lods
lods
pop
adc
push
ret
insb
and
cmc
xchg
sbb
jno
out
icebp
nop
iret
rclb
std
lea
lret
sbb
pop
jecxz
jmp
cmpsb
fcomp
hlt
adc
aaa
inc
mov
dec
cli
outsb
leave
jb
je
push
jns
fwait
int3
movsb
sub
es
repz
cmpsl
adc
rcrl
adc
jmp
jle
pusha
push
cmp
lea
fcmovnb
mov
mov
mov
adc
sbb
mov
popf
push
jns
push
mov
xchg
pop
int3
mov
jns
sti
movsl
pop
enter
dec
push
shrl
mov
test
jb
out
dec
pop
insl
shl
mov
test
int
out
gs
push
icebp
or
mov
add
add
int3
cmp
pop
mov
xchg
add
inc
sarl
inc
mov
lcall
pop
cmp
outsl
leave
push
cwtl
mov
cmpsl
dec
mov
xchg
and
movsb
fdivrp
push
jecxz
iret
push
out
addr16
loop
stos
pop
adc
push
sarb
sub
cmpsb
jo
fdivr
lods
pop
outsl
ss
dec
xchg
imul
inc
aam
push
mov
cmp
imul
sbb
scas
cmp
cmc
daa
xchg
push
mov
xchg
xchg
outsl
mov
cmp
pop
mov
mov
movb
cmp
or
shll
sahf
ljmp
xchg
rol
jg
inc
aas
gs
and
mov
xor
subb
into
dec
mov
jmp
aam
enter
mov
xchg
ret
faddl
icebp
sbb
jl
or
cmp
fmuls
dec
mov
jecxz
enter
inc
data16
adc
pusha
jno
adc
pop
mov
sbbl
hlt
insl
mov
xchg
inc
insl
cmp
and
cmp
gs
jbe
inc
mov
push
pop
xchg
inc
int3
xor
fwait
xchg
aaa
pop
int3
cmp
mov
adc
lret
pusha
cltd
xchg
fildl
sbb
cmp
insl
and
loopne
ret
mov
xchg
ret
imul
push
test
push
cld
nop
sahf
pop
js
out
mov
std
fdivrl
mov
mov
sub
pop
les
addr16
jge
xchg
mov
std
cmp
test
lock
mov
add
jle
pop
and
leave
inc
pusha
clc
lahf
fwait
out
mov
adc
ror
jl
xor
dec
or
jmp
popa
push
and
gs
sbb
xor
cmpsb
inc
sbb
add
shrl
xlat
inc
pop
stos
mov
in
pop
push
ret
xor
scas
call
push
pop
xor
or
push
xor
cmpsl
ljmp
ljmp
adc
jge
frstor
cmp
jmp
jbe
loop
dec
repz
jbe
push
out
xor
jecxz
pop
cmp
add
or
scas
std
jo
or
mov
insb
and
inc
cmpsl
ss
push
mov
sti
add
cmp
mov
fistpl
mov
out
xchg
mov
jmp
cmpsl
daa
gs
jno
out
xlat
xorl
push
repz
rorb
addr16
jge
fstpt
shll
dec
inc
test
outsb
xchg
xor
mov
cmp
mov
or
cmc
ljmp
js
shlb
sbb
or
cltd
push
lods
cltd
stos
adc
add
imul
or
cmpsl
mov
cmp
data16
mov
into
shrb
mov
jbe
psraw
jne
sbb
mov
or
fwait
xor
prefetch
jp,pt
addb
pop
mov
xchg
cltd
popf
xor
call
jl
push
xor
stos
or
in
imul
push
push
lret
jg
lods
movsb
shr
push
push
shll
push
cmp
hlt
repz
addl
sbb
adcb
xchg
xchg
sti
clc
add
in
inc
stc
aam
and
xchg
out
sti
or
jge
testb
fldenv
add
leave
movsl
pop
lods
imul
shrb
xor
and
or
in
fcmovnbe
les
imul
pop
int3
lret
mov
jbe
jno
popf
pop
or
mov
pop
or
hlt
mov
std
xlat
call
lret
add
xor
push
ds
or
jle
and
imul
mov
mov
mov
cltd
pop
mov
clc
lret
movsb
std
inc
cmp
mov
leave
push
insl
fidivs
fdiv
cmp
orl
call
push
mov
out
sti
shl
ljmp
outsb
cmc
leave
imul
pop
push
das
xchg
pop
adc
ret
xor
rclb
jg
or
pop
cmp
jmp
pop
imul
add
mov
or
cmp
pop
pop
js
insb
out
push
add
jp
stos
jl
nop
rorb
push
mov
push
xchg
and
movsl
add
lcall
xchg
inc
into
mov
pop
lret
xchg
out
mov
and
fstl
leave
ds
js
mov
pop
rcl
pusha
call
pop
jns
imul
stc
sbb
jmp
dec
xor
imul
jmp
hlt
add
adc
dec
or
out
mov
xchg
bound
fistps
jno
scas
jo
and
add
mov
xchg
jl
push
and
enter
add
dec
rclb
in
xor
dec
sahf
pop
mov
orl
sbb
sbb
scas
mov
sbb
arpl
out
pop
and
bound
inc
pmaxsw
dec
sti
mov
pxor
ret
or
pop
cmpsb
mov
ds
icebp
clc
mov
pop
jnp
inc
mov
movsl
js
push
cmp
cmp
xchg
out
push
aam
repnz
xor
mov
cwtl
xchg
push
and
jns
subl
movsl
push
adc
sarb
or
das
xchg
dec
inc
xchg
xchg
or
stos
aas
add
xlat
mov
inc
cmpsb
fldcw
adc
sbbb
ds
fldenv
sub
or
leave
lret
aam
cmp
cmp
jge
enter
lods
and
cwtl
fisubrl
fisttpl
mov
pop
loope
cli
mov
fstl
jnp
jecxz
mov
jno
lods
lea
and
mov
jno
je
push
leave
xorb
sub
fildl
inc
cld
jne
movsb
push
cld
lock
xor
out
orl
dec
mov
fwait
outsl
adc
jge
sub
test
inc
popf
and
ret
lret
inc
or
dec
in
rorb
xchg
fsubr
lret
fwait
iret
out
notb
stos
icebp
xor
xor
inc
test
mov
cmpsb
inc
push
jns
jnp
cmovs
mov
popf
cmp
pop
les
add
scas
add
es
xchg
fdiv
mov
in
pop
rcl
loopne
mov
fnstcw
inc
adc
adc
or
pop
jle
cmp
mov
lock
inc
xchg
inc
ret
mov
push
push
cmp
push
sub
xor
push
nop
cmp
push
aas
or
pop
push
add
xlat
addr16
js
pop
add
adc
push
lret
cli
and
xchg
jl
add
jns
pop
aad
mov
cmp
xchg
push
sbb
addr16
push
aas
in
pop
mov
loopne
mov
stos
loope
mov
adc
cmp
jle
dec
mov
sub
fildl
lea
mov
cmp
xchg
adc
jge
shrb
in
inc
pushf
call
mov
dec
mov
jae
fiadds
push
pop
xor
js
sub
int
scas
sub
mov
pop
adc
ja
into
pop
push
adc
push
lret
cli
push
insl
std
add
daa
lods
fldl
es
add
and
jge
test
inc
add
sub
lock
sbb
aad
dec
xlat
jno
push
call
cmc
push
push
data16
xchg
fidivs
jbe
repz
mov
fstpl
je
cmp
cmpsl
xor
lds
jo
hlt
cli
push
outsl
mov
pop
jle
movsb
nop
stc
mov
jecxz
out
or
enter
fisubrs
fidivrl
jg
iret
dec
pusha
dec
ret
cmp
out
sub
aam
bound
adc
test
jne
jbe
test
mov
cmp
divb
dec
or
sti
add
cmp
ja,pt
les
xlat
pop
cmc
lock
adc
mov
loop
add
xchg
dec
mov
push
cwtl
subl
pop
iret
jb
inc
and
cwtl
sub
stos
loope
jbe
sbb
xchg
mov
sbb
xchg
cmp
popf
out
pop
movsb
mov
jae
sbb
cmp
cld
cmpsl
notb
pop
fldlg2
rcrb
and
xor
sub
jp
lret
xchg
lods
ljmp
aam
sahf
test
push
or
popf
push
xchg
and
and
popf
data16
fisttps
shrl
mov
adc
or
mov
in
xchg
repnz
xor
negl
stos
xchg
add
jae
adc
push
dec
rcl
cmp
push
mov
fsubr
push
dec
xor
adc
adc
lods
insl
out
hlt
mov
cmp
jmp
xchg
clc
push
int3
addl
push
jo
les
outsl
lret
jmp
daa
lret
out
xchg
subl
shll
mov
cmpsl
inc
pusha
jo
jb
mov
daa
sarl
dec
xor
sub
mov
jb
shll
xchg
enter
xchg
sbb
dec
xor
push
fdivr
xor
std
adc
or
jle
and
push
inc
adc
movsl
push
inc
inc
xor
subb
xor
jno
xor
xor
leave
or
or
or
call
xchg
cmp
cmp
inc
jno
fwait
add
int3
pusha
sbb
xchg
enter
jg
dec
or
sub
and
int3
cmc
xor
mov
adc
xor
adc
test
sub
bound
sbb
in
lock
pop
xchg
sub
xchg
enter
inc
out
mov
adc
ss
nop
cmp
pop
push
mov
aad
push
fmuls
dec
and
cld
popf
int
push
xorl
cmp
or
and
cmpsb
jg
movsb
stos
leave
aad
or
push
mov
jg
push
sub
mov
push
pop
mov
fistps
or
mov
mov
mov
add
or
and
xchg
repnz
jbe
ror
mov
xchg
push
lahf
jbe
and
and
mov
cld
jae
cltd
cli
and
stos
inc
enter
sti
sbb
mov
pop
push
cli
xchg
sub
cmp
xorb
cmp
push
xchg
data16
xor
shrb
dec
xor
mov
add
push
in
cmp
cmp
push
jge
std
pop
ja
loop
pop
sbb
outsl
repz
loope
fdivr
aam
mov
loope
xor
mov
sbb
push
lock
test
into
add
sahf
lcall
fs
daa
inc
ret
rol
inc
push
add
fcmovnu
call
das
cmpsl
add
pop
xchg
add
frstor
and
cltd
mov
dec
es
cmp
daa
cld
pop
ret
jmp
sbb
jp
mov
out
rcrl
mov
movsb
push
mov
movsl
enter
insb
sbb
fcompl
dec
inc
inc
cmpsb
push
or
sub
testl
aaa
mov
mov
xor
push
mov
popf
xchg
push
pop
or
enter
and
repz
ret
or
pushf
int
in
pop
lcall
fstl
pop
or
xchg
mov
sub
add
lods
xchg
xchg
shlb
push
ret
pop
out
lret
push
jle
xor
jmp
shrb
aaa
and
pop
add
inc
test
jge
jne
rcrb
pop
fsubrs
loopne
ret
add
jb
dec
adc
sub
arpl
jp
or
loope
add
nop
mov
lea
adcb
cmp
add
adc
scas
aaa
jne
stos
and
mov
std
sbb
ja
cmp
jno
push
push
add
sbb
mov
insb
mov
push
and
pop
push
add
bound
pop
fisubrl
das
push
or
inc
fwait
lea
dec
adc
sti
in
mov
mov
or
arpl
jle,pn
cmpsb
sub
stos
out
movsb
mov
xor
cmp
jge
or
fidivrl
jns
loope
cmpsb
fmull
mov
imul
adc
xchg
sti
xor
xchg
jle
add
inc
stos
aam
cmp
fcompl
cmp
mov
pop
mov
incb
popa
xor
mov
dec
cwtl
cltd
lods
shrl
fimull
mov
inc
sub
add
inc
push
adc
cmp
cld
lcall
mov
push
jno
lret
sub
test
mov
mov
fsubrl
mov
sbb
stc
dec
jmp
adc
int3
jecxz
js
sbb
loope
aad
popf
sub
rol
clc
mov
sub
in
xor
scas
adc
sbb
arpl
xor
xor
fimuls
pop
clc
jns
sbb
icebp
leave
ror
adc
xchg
ficoml
cmp
dec
ret
insb
lods
ret
push
inc
rcrl
pop
scas
test
int
nop
mov
inc
nop
testb
adc
push
outsb
mov
or
jns
adc
fcoml
jge
ds
mov
inc
out
aas
aaa
aas
popa
and
add
xchg
mul
pop
in
xor
and
cmp
cli
sub
ficompl
mov
insb
in
push
push
cld
or
pop
sub
orb
imul
push
pop
sub
inc
sbb
adc
js
cwtl
daa
in
test
in
test
add
pop
rorl
jb
insb
lcall
sbb
dec
or
outsl
imul
aas
xchg
push
stos
loope
xorb
mov
lcall
pop
push
dec
mov
outsl
sbb
lods
inc
repz
in
jne
aad
dec
pushf
shr
and
aas
data16
call
xchg
call
adc
or
repz
dec
and
mov
push
pop
sub
push
cmp
jnp
push
mov
cmp
sahf
jle
xor
stc
inc
inc
xchg
insb
dec
outsl
sub
fstps
cs
mov
or
sbb
push
ja
dec
add
scas
dec
pop
notb
or
or
inc
lcall
mov
xchg
cmp
mov
jmp
cs
sbbb
and
adc
inc
lahf
pop
les
rcr
aaa
inc
cwtl
mov
loopne
sub
jo
inc
inc
call
jae
xchg
pop
inc
mov
scas
push
sub
inc
ss
xlat
sub
inc
mov
in
jo
or
xchg
or
inc
xor
inc
imul
daa
rolb
push
aas
jae
sub
repz
lds
push
xor
cmpsb
inc
inc
std
enter
adc
mov
or
mov
pop
xchg
pushf
clc
xchg
lcall
fisubrs
fistpll
dec
scas
insl
mov
mov
sbb
hlt
mov
js
and
cmc
and
in
push
mov
mov
pop
call
dec
xchg
jno
adc
je
cmp
mov
cmp
push
repnz
inc
adc
dec
xchg
or
inc
insl
mov
sub
out
lods
jo
mov
xor
into
sub
scas
xor
xor
js
fisubs
sbb
std
in
inc
stc
jnp
adc
shlb
xlat
jmp
stos
xchg
ja
push
jno
icebp
jp
lods
fdivl
cmp
dec
pushf
cld
mov
inc
jno
mov
scas
jl
test
or
sub
stos
test
clc
or
out
pop
mov
sahf
pop
mul
stos
inc
jnp
dec
iret
mov
adc
iretw
mov
cmp
bound
push
mov
imul
push
gs
stos
xchg
out
lcall
and
inc
inc
mov
ljmp
std
sbb
out
pop
cmp
clc
ret
sub
icebp
mov
or
jmp
add
inc
ret
xor
push
mov
jg
push
daa
shll
mov
and
or
push
in
and
shll
sysret
pop
ror
call
sbb
in
scas
add
pop
test
xor
or
and
add
push
xchg
inc
in
jge
mov
xchg
js
inc
push
ds
adc
push
fsubs
xchg
js
jnp
cmp
add
add
jns
sbb
mov
mov
mov
lcall
mov
dec
inc
ljmp
bound
pop
fstl
daa
inc
jae
lock
movsl
jbe
mov
scas
in
ja
xor
jo
les
mov
sbb
adc
push
cmp
movsl
mov
pop
fimull
imul
dec
mov
lods
mov
adc
mov
push
pop
inc
mov
adc
je
aas
sti
push
xchg
dec
sti
les
sbb
arpl
subb
xchg
in
cmp
xchg
or
cld
mov
xchg
inc
xor
sbb
cld
xchg
dec
inc
sub
dec
push
inc
mov
dec
gs
mov
add
cmpsl
or
xchg
out
mov
imul
sub
in
test
jmp
mov
sub
lea
lret
push
cli
cltd
sbb
loope
cltd
in
std
and
fsubrl
cltd
xor
pop
clc
pop
fstps
das
fadds
mov
ja
add
add
nop
in
and
xchg
repz
clc
lea
pop
pop
rolb
nop
test
xor
imul
out
push
xor
test
or
xchg
cmp
dec
pushf
jmp
out
cld
sub
pop
and
adc
mov
jge
pop
lods
cmpb
mov
fisubl
cmp
icebp
stos
xchg
mov
pop
imul
inc
sub
ja
popa
xor
sub
popa
mov
loope
gs
negl
mov
mov
pop
fildll
lods
jmp
repnz
pop
mov
std
push
out
dec
test
xchg
xchg
fstp
faddl
mov
inc
xchg
sar
jbe
and
mov
lret
subl
inc
shll
and
cmp
sbb
pop
lods
orb
or
sbb
jnp
mov
push
mov
test
negl
ss
sub
testb
push
lret
roll
push
mov
inc
aad
push
cmp
lcall
cmpsb
xchg
into
popf
dec
sbb
icebp
fbstp
addr16
loope
repnz
jbe
xchg
adc
push
sub
xchg
ljmp
add
call
jae
sub
xor
xchg
in
sahf
push
pop
fwait
xchg
popa
loop
adc
ja
cmp
sub
pop
aam
jne
jg
enter
popf
jno
or
push
and
scas
adc
scas
or
sti
push
mov
leave
jb
jo
sahf
ja
mov
adc
sti
arpl
xor
subl
negl
sbb
add
sbb
stos
out
dec
test
lret
sbb
sbb
aas
and
push
jecxz
lods
mov
and
arpl
mov
ret
cmpsl
inc
push
hlt
cmpsb
add
icebp
mov
icebp
les
scas
or
add
data16
in
push
mov
dec
pushf
ret
xchg
popa
stos
or
rorl
jno
sahf
arpl
push
rcll
cmpb
or
lock
lea
sbbb
cmp
and
test
mov
jnp
loopne
fsts
xchg
dec
mov
adc
inc
push
mov
lods
add
xchg
stos
stc
movsl
test
enter
repz
out
out
loope
fs
pop
lods
xchg
and
pop
cmp
dec
xor
aaa
mov
or
mov
test
outsb
xchg
out
rcll
out
loope
cltd
js
sbbl
sbb
stos
push
test
xor
stos
pop
rcrl
out
pop
push
mov
loopne
movsb
divl
les
enter
xor
xor
lahf
xor
and
xchg
or
sub
rcrb
orb
arpl
sbb
xor
add
bound
cmpsl
das
lahf
jbe
ret
xor
pop
xchg
add
and
enter
adc
test
nop
mov
push
sub
je
loopne
fwait
push
jge
cld
mov
push
std
mov
and
leave
lods
stos
fisubl
jno
lds
loope
test
push
ret
loopne
outsl
add
xlat
sbb
pop
mov
dec
jb
jle
movsb
push
xchg
scas
daa
push
ffreep
inc
cmc
iret
lahf
mov
mov
mov
in
or
sarb
and
idivb
roll
lret
or
xchg
mov
dec
rorl
or
cmpsl
ret
lret
mov
js
repz
pop
sub
jne
push
adc
sbb
pop
test
rdpmc
adc
or
push
outsl
test
in
loop
ficomps
addr16
rorl
dec
rcll
mov
ret
xchg
mov
cld
push
mov
push
out
sbb
daa
in
jne
cmpsb
xchg
ffreep
scas
pop
or
fnstenv
jg
aam
ret
and
mov
inc
in
in
fcomps
jg
mov
and
and
inc
lds
and
sbb
add
sub
gs
cld
fmuls
sub
clc
loope
mov
jnp
repz
and
dec
pop
jno
lods
fdivl
pop
enter
mov
sub
stos
inc
add
out
int3
cmc
xor
mov
xchg
je
jp
rcrb
xchg
jns
sub
in
fstpl
add
sub
and
mov
lock
outsb
pop
std
and
push
fldenv
incl
jle
mov
lock
ss
lock
mov
setg
jecxz
adc
xor
lea
mov
xchg
mov
test
push
outsl
sub
movsl
pop
xchg
mov
add
in
cmp
sub
roll
enter
inc
inc
fwait
jp
pop
mov
ss
addr16
or
inc
sbb
push
adc
pop
or
pop
sub
adc
mov
xchg
jb
xchg
aam
pop
test
jb
in
insb
cmpb
scas
daa
sub
mov
std
in
pop
push
jp
int
xchg
xor
push
imul
mov
das
movsl
test
cmp
and
std
pop
in
das
shl
cmp
xchg
out
ds
jge
test
out
testb
out
lea
mov
out
jp
pop
hlt
cmpsb
xchg
fdivl
push
sub
mov
inc
xchg
lds
or
inc
mov
add
sahf
dec
inc
or
js
xor
sbb
jg
notb
or
lret
lret
xor
add
sbb
insb
push
mov
xor
jb
and
in
jo
popf
test
fmuls
sub
popa
into
lock
and
stc
mov
push
ret
cmp
mov
les
popf
push
adc
je
clc
lock
mov
imul
fdivr
lcall
outsb
or
jmp
mov
inc
fwait
js
arpl
shlb
arpl
or
roll
lods
lret
jmp
mov
pusha
adcb
push
xor
rolb
jg
int3
sub
dec
and
xlat
lret
sub
icebp
or
xchg
mov
insb
inc
xlat
jb
push
xchg
adc
mov
sub
jns
into
popa
xchg
insb
ret
sbb
testl
fdivrs
jbe
test
mov
or
lahf
push
adc
sub
movsb
cmp
and
jno
clc
nop
int
xchg
jae
push
add
add
outsb
mov
pop
daa
jl
jae
sbb
or
shrl
pop
inc
call
mov
cmp
push
clc
das
dec
popf
pop
pop
xchg
call
fmull
sub
pop
jmp
jg
in
dec
adc
cmpsl
jo
jecxz
js
dec
adc
fmul
inc
xchg
cmp
and
out
dec
fdivrl
inc
dec
lods
fs
mov
sbb
stc
fucomp
push
stc
movsl
jge
enter
push
mov
cld
scas
push
inc
xchg
mov
mov
call
or
cmp
push
frstor
ret
lods
jbe
sub
xor
jns
mov
sbb
xchg
scas
sub
adc
mov
sbbb
adcl
dec
cmc
jnp
fdiv
push
lcall
out
adc
xor
sahf
frstor
rcrb
lock
sbb
jne
xchg
adcl
sarl
push
cmp
subl
outsb
lods
daa
sbb
out
mov
jl
inc
rclb
adc
je
vandps
jne
sahf
rcrl
fldenv
pop
aas
mov
push
push
dec
add
pop
hlt
xchg
xor
mov
loop
sub
insb
mov
fcomps
loopne
cmp
nop
das
rclb
adc
and
dec
out
adc
adc
js
loopne
mov
sbb
jg
mov
dec
aas
test
lods
or
cmp
repz
ret
xchg
push
dec
jae
pop
iret
fucomip
pushf
scas
or
lods
std
test
lock
jp
jp
in
xor
jns
ljmp
push
popa
test
lds
xchg
lods
outsl
xchg
ljmp
adc
push
sbb
adc
mov
cmpsb
push
sub
je
push
inc
cmp
xchg
repz
icebp
lahf
inc
jp
gs
lret
pop
mov
mov
cmpsl
lods
hlt
adc
rolb
inc
aaa
pop
adc
push
icebp
into
out
ret
inc
scas
pusha
jl
jne
bound
jle
add
sahf
xor
lahf
rorl
pop
imul
pop
popf
out
je
sbb
jbe
scas
or
xorb
or
cmpsb
dec
add
push
loope
xchg
repz
pop
sbb
pusha
xor
inc
cltd
cld
cltd
and
mov
pop
rcll
sbb
fcompl
and
add
pop
inc
leave
mov
sbbl
sbb
mov
stc
sub
jns
and
stos
sub
in
push
insb
stc
ss
mov
add
lcall
xor
arpl
out
cwtl
pusha
push
icebp
cli
aad
or
mov
lcall
xchg
shrl
mov
outsl
adcb
push
movsl
pop
cmpsl
enter
mov
popf
jmp
push
scas
jl
pop
xchg
dec
mov
jns
test
call
add
add
ficompl
cmp
add
repz
and
add
or
incl
xorl
and
arpl
xchg
mov
gs
stc
je
out
xchg
cmp
inc
outsb
icebp
adc
push
adc
mov
roll
pop
or
push
adc
inc
decb
mov
dec
jo
iret
cmpsl
push
push
pop
or
mov
jb
jmp
or
inc
adc
jle
sub
push
sbb
movsl
cwtl
vpunpckhbw
fwait
ret
xor
movl
xchg
test
sarl
sub
cmp
mov
mov
loop
xor
jno
jmp
ljmp
maxps
xor
jns
cmc
out
gs
xchg
ss
ret
mov
mov
test
pop
pop
insb
or
popf
movsl
jo
and
add
imul
lret
pop
stc
jbe
sub
lock
cmp
or
mov
test
ficompl
adcl
xchg
cltd
cmpsb
xor
test
pop
nop
sbbl
and
mov
test
in
push
fdivp
push
lea
daa
int
sti
pop
dec
jne
fidivl
cmp
jae
sahf
mov
and
mov
dec
loope
mov
sub
enter
push
stos
sub
scas
out
and
and
shrl
loopne
andb
loopne
js
aas
fmull
cltd
sub
adc
lods
and
popf
pop
adc
jg
jbe
mov
push
loope
ds
iret
or
stos
mov
jae
adc
dec
divl
icebp
pop
sbb
xor
aam
ja
iret
aaa
mov
inc
and
cmp
rcll
add
lcall
lcall
inc
sbb
pop
and
je
and
pushf
dec
dec
push
jl
out
addr16
lock
fidivrs
sti
jle
mov
lods
mov
jne
and
fisubl
movsb
scas
jp
cmp
dec
je
icebp
sub
sub
xor
cmp
add
cld
in
rcr
hlt
fxch
sahf
xchg
inc
int
pop
jle
sub
ficoms
shll
jb
in
loop
std
mov
mov
stos
pop
stos
es
and
sarb
sub
cmp
mov
or
xor
lret
and
ljmp
push
push
cld
add
add
and
movsb
add
pop
scas
mov
push
cs
add
jb
ds
adc
daa
mov
outsl
lds
fisubrs
sbb
ret
lret
imul
insb
cmp
inc
dec
jg
ret
adc
int
push
push
insl
fwait
and
sbb
out
cmp
mov
ss
cmp
gs
mov
in
cmpsl
mov
push
test
ljmp
dec
bound
sti
cli
leave
loop
test
cmpsb
cmp
fistpll
mov
and
push
sub
jl
push
aad
cmp
add
mov
xor
push
xor
inc
mov
jo
lret
shr
pop
sbb
sub
inc
int3
pop
test
pop
into
jne
xor
pop
and
add
jmp
imul
cmp
lods
adc
or
insb
mov
sbb
test
push
xchg
or
ror
dec
icebp
mov
nop
repz
push
bound
sbb
loopne
and
in
aad
sbbl
daa
push
nop
sti
in
pop
add
mov
out
mov
push
pop
adc
fnstcw
lahf
insl
jbe
aas
mov
mov
mov
inc
jbe
push
fwait
out
mov
fisubs
dec
add
mov
jmp
fnstcw
push
repz
xchg
pusha
jmp
cmp
add
aaa
or
ficoms
or
bound
inc
add
mov
lods
fistps
jp
xor
pusha
pop
jbe
mov
popf
out
mov
loop
add
je
imul
imul
cld
in
or
inc
push
and
sbb
mov
mov
mov
je
lfs
push
scas
cmc
arpl
andl
jp
cltd
jle
or
jbe
and
cmp
xor
xchg
mov
dec
push
popf
cmc
pusha
mov
xor
arpl
mov
mov
adc
or
popa
mov
mulb
cmp
arpl
cmp
push
ret
sti
xor
and
push
dec
mov
inc
loope
push
inc
adc
movl
or
ror
out
cwtl
pop
dec
outsl
stos
cmp
pop
inc
adc
outsb
outsl
add
cld
outsl
loope
faddl
sbb
or
jp
ss
rcrb
int
rcll
shrb
mov
andl
sub
sbb
pop
dec
in
mov
lods
movb
into
lods
es
sbb
scas
imul
std
repz
leave
cld
shll
fwait
xor
sahf
popa
adc
push
or
into
mov
fnstcw
or
inc
xchg
pop
jecxz
cwtl
mov
cmp
jg
cltd
mov
enter
ljmp
stc
call
iret
jno
xlat
dec
mov
iret
insb
add
mov
or
jns
mov
popa
xor
jp
cld
sarl
scas
mov
in
movsl
mov
loop
or
sbb
xor
pop
cmp
lea
loope
aam
stos
lcall
lods
xor
stc
sahf
loopne
popa
loop
fdivp
cmp
xchg
stos
xchg
mov
aad
pop
mov
cmpl
data16
pop
hlt
clc
sbb
and
and
loope
cmp
test
aad
add
pop
popf
popf
aaa
lods
sbb
jbe
aad
fs
sub
dec
arpl
fs
mov
lock
inc
jp
mov
jo
mov
inc
or
jl
mov
jae
insb
stos
mov
and
mov
jno
fadds
add
mov
jno
testb
xchg
adc
bnd
jle
cmpsl
scas
pop
add
mov
test
cmp
aas
fdivrs
xor
add
out
cli
mov
test
pushl
mov
ja
int3
in
pop
out
enter
dec
mov
cmp
movsb
jo
dec
adc
scas
lock
sbb
aas
push
mov
inc
adc
push
pusha
call
into
test
mov
out
cmp
in
enter
cmp
dec
xor
push
test
lds
xor
inc
jnp
xor
xor
int3
out
jno
ja
mov
outsb
push
pop
fistps
sbb
popf
shll
dec
sub
sub
leave
jno
das
cmp
push
bound
mov
xor
das
test
aaa
std
push
jge
out
or
sub
adc
push
outsb
push
xchg
xchg
js
mov
cli
loopne
push
imul
mov
pop
lods
mov
sbb
sbb
in
roll
pop
fnsave
add
cmp
scas
cmp
js
xchg
enter
nop
xchg
cltd
sbb
or
rorl
insb
pop
ret
cmpsl
jns
js
stos
movsb
cld
or
and
popa
add
imul
test
ret
pushf
xor
add
rolb
push
movsl
or
sbb
nop
cmp
pusha
jecxz
mov
inc
ja
mov
mov
stc
add
and
xchg
mov
pop
ss
push
test
mov
or
adc
cmc
push
and
adc
pop
jo
outsb
dec
mov
mov
test
mov
aam
stc
fs
push
cmpsl
mov
cwtl
mov
xchg
call
roll
xor
movsb
shrl
out
sbb
xchg
jb
and
add
int3
cltd
jns
js
jno
aad
sti
jecxz
mov
cmpsl
adc
flds
jnp
hlt
data16
imul
addr16
mov
inc
cmp
dec
jbe
out
adc
rorl
adcl
add
fwait
xor
xor
sbb
dec
sbb
inc
das
nop
cmc
xor
rorb
xor
mov
arpl
ja
imul
push
lahf
xor
sub
or
mov
in
ret
xor
mov
in
idivb
cmp
jo
adc
xchg
fildl
jecxz
mov
gs
popf
push
adc
test
subb
imul
movsb
and
lret
clc
pop
jne
aaa
jg
cmpsb
cmpb
int3
and
clc
scas
ret
mov
mov
shrl
mov
into
xchg
movsb
repnz
dec
jae
mov
daa
gs
aad
divl
or
test
lods
and
or
xchg
andb
roll
cmpsb
gs
add
inc
mov
or
mov
pop
pop
loopne
rorl
in
mov
dec
fdivrl
dec
iret
and
scas
movsb
rolb
mov
xchg
xchg
mov
lcall
enter
mov
outsl
dec
jno
pop
loop
loopne
push
add
cmpsb
or
inc
and
gs
in
shrb
sub
mov
gs
leave
nop
jg
or
imul
xor
in
popa
test
xchg
xchg
cmc
mov
pop
ret
push
mov
inc
sbb
push
stos
jns
dec
cltd
ja
adc
loope
mull
xor
mov
lcall
jg
xchg
push
lahf
subb
mov
jb
push
aam
xchg
ljmp
mov
xor
or
jbe
test
adc
aas
cs
mov
nop
mov
rorl
xchg
shl
cld
out
mov
lods
jns
ret
daa
push
sti
data16
mov
adc
mov
xchg
inc
and
or
in
or
leave
sub
push
add
jo
aad
dec
jmp
dec
ja
push
jns
sbb
ret
add
daa
testl
inc
int
stc
subb
xchg
nop
mov
add
int
insb
jae
jb
lea
jo
call
fisttpl
adc
fwait
sub
xchg
and
aas
pop
add
mov
or
mov
fisttpl
or
or
xor
shl
and
jns
mulb
test
out
sub
jle
push
cmpsl
jo
adc
cmp
cmp
push
mov
mov
jb
sub
pop
imul
and
pop
fidivrs
mov
test
fsubl
test
pop
pushf
incb
lods
pop
lods
mov
or
push
add
lock
call
fstpt
fcmovnu
pop
inc
lds
mov
jle
mov
or
mov
dec
cld
and
fdivp
xor
loop
jmp
jmp
jno
call
mov
mov
addl
jl
repz
shll
push
cmp
xchg
cli
aas
loop
push
bound
adc
mov
leave
pop
cmp
cltd
xchg
mov
out
xor
negb
xor
rorb
mov
pop
jbe
nop
mov
cmp
xchg
jb
pusha
jp
xor
je
fists
xor
mov
mov
add
stos
push
push
shll
mov
xchg
aaa
andb
push
rcrb
rcll
ret
adc
sub
push
lock
push
sahf
jl
mov
dec
push
imul
push
add
add
mov
dec
xchg
push
xchg
test
push
stos
adc
mov
lret
cwtl
jo
ds
lods
sub
cli
sub
mov
jge
sbb
ret
icebp
scas
clc
pushf
iret
mov
pop
aam
push
cmp
je
stos
jbe
cmc
xchg
pop
sbb
stos
outsb
adc
inc
jle
loop
test
or
xchg
lret
sbb
in
jo
xor
lods
lock
xor
in
mov
mov
nop
es
or
inc
stc
fisttps
mov
xor
sbb
mov
outsb
and
inc
or
push
andl
mov
sub
cmp
xchg
and
dec
je
lret
mov
cltd
lcall
xlat
js
dec
mov
add
sbb
lcall
sub
sbb
insb
push
shrl
dec
js
sub
lods
roll
in
or
in
mov
sub
add
jae
sub
stos
or
fs
lds
fsubr
sub
mov
cmp
mov
dec
cmp
sti
jp
call
jle
lcall
fmul
jnp
add
mov
repz
pop
jmp
not
fwait
imul
mov
std
loop
jmp
cmp
scas
mov
int3
mull
or
fwait
mov
jbe
jle
pop
sbb
inc
test
xor
mov
outsl
inc
inc
dec
and
xchg
or
mov
mov
movsl
sub
cmp
loop
sbb
daa
aas
mov
mov
lods
push
cld
adc
fstpt
les
icebp
movsb
jb
ljmp
sub
std
fimull
jmp
das
loopne
fnstenv
mov
test
mov
xor
xor
mov
push
lock
hlt
std
push
pop
inc
sbbb
mov
les
push
and
push
fistpl
pop
add
pop
fistpl
sahf
cmc
dec
lcall
inc
jns
out
xchg
push
and
daa
clc
insb
into
xchg
cmp
xor
sub
inc
lds
xor
push
mov
mov
ret
lods
jg
mov
push
lods
jl
shll
sub
or
mov
dec
push
js
lret
mov
pop
fldz
mov
cmp
inc
dec
repnz
jl
mov
jle
dec
mov
ror
loop
loopne
push
aas
pop
cli
leave
dec
pushf
jmp
and
lahf
mov
lret
clc
shrl
aas
pop
imul
outsl
std
inc
jo
jmp
imul
jmp
or
add
imulb
mov
jne
adc
outsb
insl
xor
adcb
pop
jne
jno
xchg
mov
pop
pushf
mov
cmc
pop
jmp
xchg
scas
das
mov
shr
in
sub
jl
xchg
ret
cmp
rcl
nop
hlt
xchg
or
add
mov
pop
imul
xor
frstor
daa
xchg
fwait
dec
mov
out
cld
mov
jno
cmp
sbb
xor
push
sub
inc
inc
scas
xchg
rorl
or
aam
arpl
pop
adc
mov
pop
sti
dec
aam
jecxz
inc
mov
je
add
fisubl
or
stos
jbe
dec
pop
xor
ror
fs
movsb
push
sbb
jno
mov
hlt
cmp
fistps
pop
push
iret
pop
jg
int
out
add
inc
xor
popa
cwtl
mov
inc
stos
js
pop
mov
aas
pop
gs
fistpll
adc
mov
lods
repz
inc
and
xchg
rol
nop
rcll
jae
pop
roll
sahf
outsb
jle
in
loop
dec
jmp
or
outsb
inc
loopne
sub
push
std
imul
and
test
loope
xchg
xchg
scas
repnz
test
mov
ja
pop
inc
shlb
or
mov
sub
popa
mov
arpl
mov
xor
lock
adc
xchg
cmp
push
frstor
cmp
add
sub
jmp
stc
mov
dec
and
fwait
adc
and
sbb
push
push
popa
mov
jl
rcrl
jbe
int
lahf
xor
and
int
pop
fstpt
lods
pop
and
dec
mov
sub
xor
push
jno
mov
mov
adc
dec
mov
inc
fs
sub
add
imull
in
add
cld
repz
shlb
xor
push
lahf
and
rolb
sbb
jns
and
push
sub
int
xchg
dec
sbb
push
xlat
fsubrs
je
dec
push
pop
cmp
lods
aad
mov
and
clc
cmp
mov
pop
lcall
out
fcoms
in
scas
in
jecxz
dec
rcr
mov
add
push
mov
lds
inc
outsl
and
aam
mov
dec
jle
daa
jecxz
test
xor
psubsb
pop
cmp
aaa
nop
push
xor
or
in
lahf
inc
mov
push
testb
dec
insl
test
loope
mov
push
cmp
repz
and
pop
or
stos
cmp
add
jbe
xor
es
leave
fdivs
pop
clc
push
daa
xor
fucom
stos
popa
adc
lods
mov
data16
adc
ljmp
dec
js
jbe
lret
ss
jae
nop
mov
xor
cmpl
arpl
cmpsl
push
lea
ljmp
push
mov
fucomi
mov
popa
add
nop
push
pushf
sbb
cmpsb
nop
sbb
jge
mov
iret
mov
data16
inc
or
daa
xchg
xchg
mov
mov
js
outsl
pop
push
pop
mov
mov
fbstp
adc
addr16
insb
pop
ret
fmul
mov
ljmp
mov
jmp
insl
cmpsb
pop
cmp
adc
fdivrp
add
mov
add
scas
mov
js
xchg
stc
sbb
xchg
enter
cld
aad
scas
nop
or
mov
pop
mov
xor
loop
cmp
jl
es
pop
stos
xor
cwtl
inc
or
adc
xor
or
cmp
movsb
jmp
xor
xchg
clc
lahf
mov
lret
faddl
mov
push
adc
lea
pop
shlb
add
sbb
movsl
adc
icebp
jo
rcrl
mov
int3
out
add
inc
sbb
aaa
fsub
ret
icebp
push
je
xchg
loopne
mov
rorl
mov
xchg
push
loop
inc
push
adc
repz
push
sbb
arpl
xchg
call
mov
fnsave
pushaw
movsb
sub
sbb
lahf
lea
stc
sti
iret
test
repz
adc
sahf
xchg
shll
in
inc
loopne
cmp
inc
ret
insl
out
and
xchg
and
or
adc
dec
std
decl
inc
dec
push
push
stos
jl
cltd
and
pop
push
sti
pop
sbb
negl
inc
jge
ret
mov
stos
out
pop
sbb
pushl
mov
jb
in
adc
popf
inc
loopne
inc
rolb
xor
pminub
adc
ss
add
inc
aaa
and
cmc
mov
nop
dec
roll
jne
xor
dec
loopne
sahf
in
test
inc
fcompl
orl
add
bnd
and
iret
imul
fistps
or
add
in
jnp
iret
pop
iret
jns
idiv
out
mov
repnz
sbb
test
dec
jge
test
inc
dec
pop
cld
dec
jo
or
push
pop
ja
ljmp
jle
clc
dec
xorb
fildll
pop
jg
mov
insl
jae
xchg
hlt
xor
jb
pop
or
inc
test
into
and
mov
es
dec
jbe
lgs
xor
adc
fwait
push
mov
sbb
imul
pusha
dec
jle
push
fdivrs
jbe
pop
pop
lret
push
fwait
jl
fwait
movsl
repnz
sbb
dec
flds
aas
lret
push
adc
sbb
aad
or
xchg
icebp
repz
sub
pop
jae
nop
mov
push
push
dec
mov
lcall
js
xchg
andb
mov
xor
dec
ja
loop
dec
aam
loope
cmp
data16
call
insb
xor
scas
push
mov
pusha
pop
jl
lea
mov
fs
testl
adc
int3
in
inc
notb
xchg
lret
cwtl
pusha
jmp
and
adc
scas
lahf
jae
mulb
push
jl
fdivrl
mov
cmp
outsl
out
and
pushl
push
mov
pop
mov
clc
pushf
in
xor
loop
inc
pop
imul
pop
ret
fldenv
andb
shrb
or
push
rolb
shrl
ljmp
andl
ja
inc
mov
lahf
repnz
pop
stos
in
xchg
sub
mov
xor
or
adcl
std
or
mov
inc
push
jp
inc
lods
lods
insb
inc
scas
cwtl
dec
mov
mov
subl
ss
sbb
fldt
cmc
pop
or
gs
aad
rol
cmpsb
mov
sbb
test
adc
sbb
xchg
push
gs
rcrb
add
scas
mov
add
mov
daa
sub
push
xlat
mov
xchg
push
mov
into
sarb
and
push
fmul
in
add
fs
sub
sub
add
dec
inc
jle
inc
icebp
js
sahf
lcall
xchg
pop
xor
and
mov
mov
or
jae
sbbb
add
mov
push
shlb
cltd
and
jge
nop
cmp
jne
xor
rcll
int
add
in
cmp
or
and
or
int3
xor
es
insl
into
adcb
ja
icebp
or
sub
test
pushf
dec
lahf
lods
call
and
sub
push
pop
in
aas
fnstcw
bound
jge
iret
xchg
xchg
push
and
sahf
dec
pop
adc
push
shll
cmp
push
mov
push
and
push
or
iret
jo
dec
inc
jnp
push
clc
into
cmp
dec
cmp
adc
fistl
push
jg
xchg
jnp
jp
addr16
adc
push
add
sub
mov
add
or
and
lods
cs
xchg
pop
jno
repnz
in
and
jle
lods
aam
and
loope
jge
and
mov
mov
shlb
push
mov
out
popa
adc
outsb
jmp
mov
xchg
xchg
cmp
mov
in
outsb
push
or
or
and
int
xor
movsl
push
sbb
cli
pop
mov
aad
lret
add
std
adc
loop
jecxz,pn
adcl
or
clc
stos
rorl
rol
xchg
andl
adc
xor
mov
imul
imul
shlb
lods
loop
pop
or
mov
xchg
leave
or
add
je
inc
mov
popa
sub
hlt
sub
jp
pusha
inc
movsl
aad
dec
sub
push
rolb
cmp
mov
lods
loope
and
or
sbb
sbb
add
fisubs
sbb
sbb
outsb
dec
jle
mov
mov
into
sbb
subb
or
imul
push
leave
add
sti
inc
inc
ss
mul
enter
and
sbb
cmp
insb
mov
cmp
jne
xor
in
dec
xchg
push
sbb
fnsave
orl
rclb
hlt
mov
call
std
sub
push
pop
test
inc
scas
jno
mov
xchg
pushl
out
nop
pop
pop
insb
incl
mov
inc
mov
inc
xchg
test
push
mov
out
push
sarl
jo
and
test
xchg
inc
cwtl
je
daa
jnp
popl
stos
daa
bound
mov
insl
insb
jns
ficoml
scas
jbe
insb
pop
pop
push
out
out
rcrl
std
adc
in
xor
jp
push
push
fucom
sbb
fdivr
fwait
adc
subl
ret
xor
and
repz
push
imul
iret
fcoms
sbb
out
dec
ret
dec
test
jno
decl
adc
in
outsb
addl
and
mov
push
mov
testb
arpl
inc
aaa
jle
jmp
scas
in
cmc
mov
cwtl
fs
and
sbb
xchg
es
add
push
repnz
mov
xchg
push
outsb
inc
aad
add
shl
mov
stos
or
dec
outsl
sub
or
pusha
mov
dec
dec
jb
fimull
xchg
pop
sbb
rcll
nop
pop
cmovbe
and
adc
or
cwtl
push
sbb
nop
subl
das
mov
js
push
repz
enter
pop
push
sbb
sbb
lods
jl
push
pop
adc
sbb
push
sub
scas
xchg
mov
mov
testl
cmpsb
cmp
jne
leave
cmp
xor
cmp
gs
pop
add
cld
jp
jmp
push
xchg
cmp
scas
clc
mov
cmp
mov
xchg
mov
cmc
and
test
cmp
cmpsl
leave
push
das
mov
jl
rcll
pop
loopne
pop
movsb
gs
shrb
adc
enter
pop
sub
adc
xor
fsubrl
stc
dec
and
sub
sti
sub
and
mov
std
mov
pushf
movsb
pop
mov
push
inc
lcall
pop
movsb
adc
mov
fadds
pusha
cmp
stc
outsb
sub
push
out
lret
repnz
mov
mov
push
lcall
cmp
xor
sbb
mov
add
jge
ja
push
sbb
call
dec
push
fdivp
jmp
mov
push
xlat
push
and
xchg
mov
hlt
ror
mov
or
arpl
pop
nop
scas
xchg
call
jnp
insl
push
stos
gs
jl
cwtl
or
mov
insl
and
xor
outsl
xchg
jnp
mov
clc
jno
repz
xlat
loop
mov
push
in
fisubrl
lea
jle
xor
adc
aas
pop
sub
mov
pop
aad
stos
jmp
test
push
movaps
pop
in
lea
sti
rolb
aad
push
push
movb
call
icebp
or
das
and
nop
xor
push
or
sbb
mov
add
xor
mov
in
lcall
mov
jl
mov
imul
es
mov
pop
or
flds
cwtl
or
ret
les
jecxz
repz
jp
ss
stos
jecxz
xchg
in
pop
aas
fwait
lea
sub
shll
xsha256
cmpsb
push
cmp
or
ret
xor
add
push
adc
xstore-rng
cmpsl
inc
daa
inc
sahf
movsl
sahf
mov
and
pop
ja
jo
cwtl
xchg
inc
and
mov
out
imul
adc
and
bound
xchg
add
sti
adc
and
pop
lds
dec
pop
or
lods
pop
in
and
test
sbb
push
popa
pop
xchg
stos
inc
js
dec
loop
adc
push
dec
test
and
fidivs
dec
sbb
aas
aas
jge
nop
aas
popa
lret
das
push
pop
stc
cmp
cmp
inc
movsl
xor
insb
mov
fwait
and
inc
xor
testl
fisubrs
sbb
repnz
mov
stos
test
sbb
out
push
xor
rclb
popa
out
adc
mov
clc
call
push
xchg
cs
xchg
dec
lret
and
xchg
or
cld
test
and
repnz
jge
jb
nop
dec
dec
loope
sub
ficompl
lods
loope
push
ja
fstpl
jge
loopne
rdtsc
jecxz
out
sbb
or
js
imul
imulb
sbb
and
cld
icebp
add
push
inc
mov
xor
or
push
pusha
je
xor
je
jmp
inc
mov
test
les
adc
movzwl
adc
dec
cmp
cmp
clc
inc
xchg
outsl
sub
cs
fs
jbe
mov
dec
lods
mov
xor
out
insb
pop
pop
or
and
in
out
jge
int
xor
jbe
push
jg
aam
dec
pop
inc
loope
xchg
arpl
dec
or
mov
mov
inc
movsb
bswap
mov
add
mov
add
adc
inc
mov
mov
outsb
and
into
pusha
enter
dec
dec
in
je
xchg
or
jge
fwait
push
jmp
pop
jne
imul
into
scas
and
pop
dec
xchg
xor
mov
out
scas
mov
test
sti
repz
pop
xchg
incb
jbe
bound
xchg
mov
mov
movsb
lret
movsl
cmp
adc
push
fistpl
sbb
notb
popf
push
add
pop
sarb
xorl
mov
push
sub
outsb
vsqrtss
out
int3
aam
imul
sbb
or
mov
lea
inc
inc
loope
or
ds
adc
test
ret
pushf
push
mov
cwtl
adc
mov
dec
cmp
in
inc
bound
es
dec
fucomp
push
loope
push
in
jne
inc
cmp
push
adc
in
mov
sbb
fstpt
rcll
mov
push
pop
shll
xorl
xor
mov
int
negl
repnz
add
adc
loopne
add
or
add
cmp
pop
or
jns
dec
movsb
pop
xor
scas
xchg
scas
push
add
fwait
sub
scas
or
loopne
mov
lret
pop
mov
das
dec
lcall
stos
mov
repnz
push
loopne
test
jecxz
mov
lods
bound
iret
ds
mov
xchg
pop
pop
mov
dec
inc
lods
sbb
cmp
unpckhps
cmc
dec
jecxz
or
mov
and
orb
and
mov
dec
mov
arpl
lea
sbb
xchg
iret
shl
call
fadd
aas
out
idivb
mov
out
dec
mov
jbe
inc
addr16
and
mov
aam
sbb
ret
cmpsl
dec
stos
sbb
fisttpll
mov
xor
add
int
aas
cmpsl
fs
jmp
dec
movsl
cmpsl
stc
ss
rcr
fs
std
test
push
data16
in
sahf
jbe
cmp
push
adc
pushf
addr16
daa
xchg
ss
or
cmp
push
outsl
js
adc
jno
dec
in
mov
push
cmp
xor
sub
xor
daa
addr16
sbb
or
cltd
mov
bound
push
pop
jmp
cwtl
ret
mov
or
pushf
mov
push
popf
ret
cli
nop
inc
add
imul
loope
iret
push
push
xchg
arpl
sub
out
cmc
sbb
rep
ficomps
add
fdivs
xchg
jl
into
scas
fdivs
nop
inc
vpsrlq
or
loop
lcall
inc
dec
adc
adc
popa
add
push
lcall
pop
outsb
nop
push
in
ret
mov
loope,pt
popa
lods
enter
fidivrs
dec
xor
lea
ret
xor
cmp
cltd
jnp
loope
insw
mov
xchg
fistpl
inc
loopne
adc
sub
aam
xchg
mov
aam
or
cmc
ds
xor
outsl
add
mov
xor
in
les
notb
insb
or
xchg
sahf
xchg
or
ss
enter
popa
aad
loope
pop
xor
mov
aas
insb
or
mov
sub
mov
push
xor
add
loop
jbe
icebp
push
test
out
xor
inc
inc
cld
bound
xorb
pop
ret
jmp
adc
iret
inc
lea
mov
ss
dec
mov
cltd
es
leave
mov
fldl
dec
rcll
cmc
mov
lea
fbstp
in
in
push
push
mov
sbbb
push
jmp
pop
frstor
pop
in
push
cwtl
inc
or
out
cmpsl
into
jmp
pop
pop
aad
fsubrl
xchg
test
push
cmp
sub
jg
xchg
jmp
push
outsl
sub
xchg
mov
lcall
xchg
inc
and
inc
mov
adc
scas
and
test
or
or
sbbl
sbb
jae
jmp
loope
and
push
push
movsb
repnz
sub
je
mov
jg
ret
nop
cmp
loope
aam
push
adc
push
test
imul
lret
sbb
inc
mov
or
lods
dec
or
xlat
push
mov
iret
dec
nop
outsl
insb
repnz
jbe
in
enter
mov
mov
pushf
mov
cmpsl
in
xor
pop
jne
in
push
sahf
mov
lds
mull
clc
jns
jne
pop
sbb
ficompl
mov
in
pop
push
jge
lret
sbb
cmpsl
in
jp
push
dec
and
outsl
jge
add
xorl
dec
dec
mov
jp
fcompl
xor
data16
popf
sub
xchg
cmp
add
and
popl
cmp
xor
arpl
cmc
push
int3
outsb
and
xor
jns
or
jns
lret
cmp
into
shlb
mov
loope
and
mov
iret
call
sub
jnp
sahf
repnz
pop
xor
or
cmc
pop
pop
mov
stc
mov
sub
mov
inc
cmp
mov
scas
cmp
mov
popf
dec
jecxz
daa
aaa
mov
xchg
gs
js
mov
adc
dec
cmp
cmpb
lods
subb
enter
inc
lahf
jmp
push
or
and
xchg
imul
pop
xor
jp
out
test
fcmovbe
or
adc
mov
sub
jmp
cmp
popa
repz
push
cmpsb
pushw
pop
sub
sub
mov
test
or
jno
mov
mov
rorb
rolb
push
push
stos
int3
loope
mov
dec
add
push
mov
pop
sarl
bnd
mulb
xchg
xor
pushf
sub
mov
sbb
pusha
sbb
lret
mov
out
push
add
xor
jge
sbb
sbb
lds
cmpsl
cmp
or
push
mov
cmp
out
xchg
jo
or
inc
jge
insb
adc
mov
dec
sarb
pop
xor
xchg
fsubl
shl
pop
cmp
lea
sub
addr16
lods
mov
and
xchg
mov
popa
xchg
test
rclb
leave
fmuls
xor
sbb
cltd
push
xlat
push
cmp
jno
fsubrp
sahf
lea
cmp
xchg
scas
sub
mov
mov
fists
pop
jge
push
outsl
sbb
inc
mov
push
call
add
movb
divb
or
push
jbe
sub
test
lea
mov
add
rcrb
shrl
call
outsl
lea
add
adc
test
in
popf
loopne
bound
inc
push
mov
push
leave
movnti
aam
pop
mov
call
cmp
push
inc
sub
bound
imul
hlt
or
data16
mov
pop
mov
sbb
test
out
cmpsl
ljmp
insl
insb
sbb
ja
popa
mov
lods
and
stc
adc
inc
push
aad
jbe
mov
push
push
cmp
push
xor
in
xchg
pmulhuw
mov
ja
lock
xchg
inc
dec
xor
loope
jmp
roll
orl
adc
incl
mov
repnz
out
sbb
shlb
cmc
iret
fistl
out
jne
lds
dec
sbb
jmp
out
mov
test
std
cmp
xchg
cmpsl
push
jle
push
push
stos
jno
faddl
rol
mov
fiadds
insb
cmc
mov
adc
pop
xlat
push
fldenv
push
fnstsw
push
xor
push
mov
and
and
sub
jb
fwait
arpl
push
or
sub
cmp
mov
pop
jl
mov
into
fs
lret
loop
sbb
fildl
inc
sarl
std
xor
je
add
in
dec
push
xor
jecxz
jnp
outsl
mov
lods
mov
pop
or
inc
and
enter
cmp
bnd
ret
push
adc
cmpsb
lock
pop
push
push
inc
add
in
inc
xchg
lods
xlat
in
adc
out
pop
out
jo
outsl
sub
rorb
loopne
ror
leave
out
dec
add
inc
jmp
clc
in
shlb
push
and
dec
fwait
outsl
int3
icebp
cmp
add
push
jae
fnstcw
mov
iret
test
stos
or
fnstenv
dec
add
pop
scas
das
into
mov
xchg
mov
les
sarl
pop
test
pop
jmp
mov
lea
pop
dec
imul
add
test
inc
pop
loopne
inc
mov
xchg
push
push
mov
sub
sbb
bound
mov
add
cmpsb
gs
xchg
or
sbb
pop
test
cmpsb
iret
adc
add
push
js
leave
mov
test
arpl
or
int
adc
xchg
pushf
mov
adc
scas
pop
and
int
mov
mov
push
rclb
int
pop
pop
cmp
pop
push
imul
mov
sti
adc
and
aam
fdivl
pop
movsb
mov
xor
je
sbb
cmc
or
xor
in
cltd
mov
cmp
mov
dec
popf
fwait
inc
xor
mov
popf
nop
jle
sbb
push
je
jae
lret
inc
or
sbb
arpl
incl
lcall
pop
in
sub
orb
sub
add
inc
dec
xor
js
ljmp
xchg
mov
mov
mov
hlt
adc
insb
imul
push
adc
dec
mov
push
adc
addr16
dec
mov
into
sarb
and
mov
fnstenv
jp
push
sbb
sbb
dec
dec
inc
pop
sbb
cmpsb
mov
jb
jne
int3
insl
test
aam
loope
mov
jle
fs
rcl
adc
mov
fisubrl
out
movsl
mov
mov
jecxz
and
test
pop
lret
in
int
ret
adc
cmpsl
cmp
jne
lea
jns
cmp
inc
test
pusha
iret
pop
leave
cmp
cmp
scas
xchg
xor
mov
and
repnz
inc
lock
push
or
nop
arpl
sbb
or
movzwl
sub
fisubrs
push
roll
sub
pop
jmp
jle
pushf
xor
mov
xor
nop
icebp
jb
push
movsl
lahf
and
shr
daa
outsb
adc
cmc
sbb
dec
and
repnz
clc
adc
jae
jne
mov
inc
jo
incl
inc
repnz
jns
in
push
dec
and
movsb
stos
push
jb
lahf
xor
int
scas
into
jo
cs
mov
stos
xor
xor
jecxz
inc
in
pop
sbb
jge
sub
aam
out
mov
mov
jbe
pop
jge
cmc
mov
xor
outsb
xchg
movsl
ja
mov
or
pop
mov
adc
or
mov
icebp
adc
inc
movsb
sahf
jg
adc
cltd
cmp
test
insl
pop
cmp
push
mov
jno
pop
mov
repz
jp
sub
cltd
cmp
jecxz
add
daa
idivl
cwtl
cld
push
dec
aam
jp
jbe
add
aad
pop
addr16
mov
pop
adc
push
aad
jp
out
jnp
push
add
xchg
mov
mov
imul
inc
mov
sbb
lock
ds
jmp
pop
rorb
xchg
sbb
mov
gs
jle
ss
iret
fidivs
sahf
mov
lods
inc
popf
je
jb
call
out
pop
gs
cmp
sahf
daa
mov
add
std
fs
jg
int3
idivb
xchg
mov
and
sahf
jns
arpl
ja
jl
mov
mov
repnz
push
cmp
repz
xchg
insl
fadds
pushf
inc
mov
addr16
shl
cmp
sbb
or
push
pop
outsb
lds
and
aam
jbe
popf
push
into
fcoml
mov
inc
jg
lods
cli
aas
loopne
jne
dec
add
lock
mov
sbb
sub
mov
dec
pop
nop
sbb
pop
xchg
inc
or
push
sbb
mov
cltd
cmp
int
sub
aad
pop
inc
jbe
dec
shlb
push
dec
xor
xchg
sarl
enter
ja
fs
pop
inc
mov
or
bound
out
lea
enter
test
inc
pusha
repz
dec
fidivrs
jge
and
movb
or
in
jnp
jae
add
inc
fmulp
sub
sbb
leave
mov
icebp
mov
or
sbb
test
adc
jo
mov
push
xchg
fcmovb
lahf
ljmp
cmp
ret
or
adc
ret
cmp
push
rep
int
test
jg
adc
mov
aad
mov
xchg
ret
jae
imul
push
cmpb
ret
fistl
loop
stc
cmp
lds
in
stos
lahf
or
popa
dec
cmp
sbb
mov
roll
pusha
xchg
addr16
add
mov
ss
mov
inc
lea
insb
pop
aad
cmp
movsb
and
and
lret
mov
jbe
aas
mov
cwtl
xchg
and
adc
stc
lds
mull
inc
sahf
imul
fwait
addr16
insl
lods
mov
xlat
mov
es
loope
sub
insb
fs
outsl
hlt
xor
aam
mov
and
orl
shl
insl
xchg
aaa
rorb
push
pop
mov
jb
sbb
sub
add
and
rcrb
inc
or
adc
loope
or
mov
dec
in
mov
xor
pop
add
pusha
scas
jb
jmp
push
mov
pop
cli
dec
lods
les
add
in
cmp
rcrl
aas
daa
mov
sti
mov
rol
jo
jne
and
orl
mov
test
clc
pop
test
xor
imul
shll
sti
adc
jp,pn
repnz
add
out
enter
into
adc
push
push
outsb
hlt
dec
inc
cmp
out
xchg
std
jne
mov
mov
mov
mov
into
cmp
or
repz
cltd
xchg
fldenv
add
test
cld
or
enter
adc
push
pop
add
xor
xchg
lcall
sub
addr16
stc
add
xchg
inc
ret
shlb
imul
and
subb
imul
xor
dec
dec
jnp
mov
jge
stc
fs
mov
stos
js
xchg
out
insb
or
dec
mov
inc
push
mov
pop
dec
je
push
mov
ss
dec
jae
cmp
cmpsl
fstpl
icebp
icebp
push
cmp
add
movsl
mov
out
add
filds
mov
leave
push
lcall
cmp
adc
addr16
jno
mov
cld
mov
movsl
mov
call
sbb
data16
push
addl
adc
outsl
aad
fs
inc
divb
mov
inc
cmpb
pop
or
fdivr
rorl
xor
into
js
xlat
inc
shrl
shl
add
push
mov
xchg
inc
imul
and
mov
adc
sub
insl
jecxz
inc
add
xlat
into
cmpsl
inc
jo
mov
jne
adc
adc
jge
mov
dec
push
fs
or
pop
ss
mov
bound
xchg
and
aaa
cmp
add
push
push
mov
pop
lret
pop
xor
sbb
inc
sbb
sub
dec
mov
scas
sbb
stos
ljmp
popf
add
jmp
inc
pop
popf
ret
stos
pop
cmp
add
dec
repnz
movsl
mov
add
push
adc
jmp
scas
inc
aaa
fs
adc
fldl
frstor
sbb
cs
add
lods
das
and
xor
in
shr
mov
mov
mov
int
mov
popf
mov
sub
icebp
xchg
fidivs
xorl
mov
sub
test
xor
bound
push
in
shll
adc
loop
stos
add
cmp
stos
aam
and
test
loopne
pop
int3
ljmp
and
mov
xor
xlat
shll
hlt
add
dec
xchg
inc
arpl
sub
sbb
out
mov
out
pop
sub
sar
mov
movsb
add
mulb
inc
test
pop
int3
repnz
inc
xchg
test
es
cmc
ret
js
jecxz
jl
and
add
ja
jns
xchg
dec
stc
leave
xchg
test
repz
rolb
xchg
inc
mov
mov
lods
cs
mov
mov
mov
push
scas
testl
and
repz
neg
dec
cmp
fidivrs
ss
push
scas
add
add
int3
movsb
in
fs
es
xor
push
ljmp
fmul
or
imul
daa
gs
xchg
ds
sub
shl
pop
and
xchg
sub
mov
lret
dec
push
xchg
js
push
lcall
hlt
daa
inc
sarb
xor
mov
bound
mov
pusha
repz
daa
xchg
fwait
sub
or
adc
jmp
aaa
das
repz
mov
sub
sti
sub
inc
js
mov
inc
lcall
enter
int
insl
out
daa
dec
add
adc
jno
ret
enter
mov
sahf
out
sub
fidivrl
push
shll
cmpsb
ljmp
cwtl
scas
cmp
out
loopne
icebp
out
mov
pop
adc
or
push
or
ja
shll
loop
add
inc
push
jno
xor
mov
pusha
xchg
cmp
jo
mov
sbbl
pop
daa
rorl
popf
push
outsb
mov
jp
jmp
pushf
outsl
fadds
scas
sti
call
jl
hlt
inc
pushf
sti
xchg
mov
ja
add
pop
sarb
add
jmp
add
dec
mov
sbb
adc
insb
push
fnstcw
imul
xchg
cli
test
enter
xlat
sub
gs
adc
int3
dec
push
mov
call
movsl
push
hlt
jno
or
popa
out
sub
or
pop
movsl
push
dec
pusha
ret
stc
mov
xchg
or
jne
rorb
jae
sahf
cmp
test
cwtl
or
adc
pop
lcall
fwait
xlat
imul
stos
ljmp
push
cmc
cmp
ss
mov
inc
and
jno
xor
or
pushl
or
out
pop
fldcw
stos
scas
xbegin
mov
mov
push
in
out
jge
ret
inc
pop
andb
shll
jb
xor
sub
je
movsl
cwtl
xchg
cwtl
inc
and
add
pop
xor
test
fidivs
sbb
cli
mov
repnz
daa
xchg
inc
testl
adc
cmp
jg
push
mov
jae
hlt
arpl
push
pop
push
xlat
call
int
sub
push
and
roll
pushf
inc
jae
sahf
pop
call
je
aad
in
fwait
lods
data16
pop
jge
mov
add
xchg
cmpsb
pop
or
adc
cmp
inc
fwait
xchg
test
fldt
mov
pop
lahf
push
pop
xchg
rcrb
ja
cmpsb
div
lods
xlat
rol
je
iret
jecxz
popa
and
sbb
or
stos
test
popa
cmpsb
mov
pop
sbb
xchg
push
ss
sbb
jbe
adc
xchg
cmp
mov
imul
fs
pop
cmp
es
popa
test
cltd
insl
in
xchg
jmp
repnz
std
xchg
inc
pop
and
mov
mov
or
addr16
dec
outsl
dec
jcxz
fcmovne
mov
mov
sbbb
and
mov
xchg
push
call
inc
fldcw
lea
inc
xchg
jns
lods
and
inc
clc
xor
mov
popa
leave
jb
mov
mov
sbb
mov
pop
adc
sbb
rorb
ljmp
shll
push
addr16
dec
in
sub
push
mov
rcll
sub
mov
fnsave
ds
in
jecxz
rcr
xchg
mov
mov
jmp
arpl
popa
xchg
jl
xchg
inc
addr16
pop
leave
std
or
out
inc
mov
push
lret
pop
pop
inc
xor
adc
jp
mov
and
add
mov
sub
subl
adc
adc
mov
scas
out
mov
cmp
dec
push
in
mov
adc
daa
xchg
mov
pop
aaa
nop
mov
pop
push
pop
fnstenv
push
cwtl
pop
mov
shll
mov
xchg
pcmpgtw
pop
jnp
add
lret
push
push
out
bound
inc
mov
imul
mov
iret
fcomps
jmp
adc
loopne
mov
fwait
fs
jmp
sbb
fnsave
lret
aad
sahf
jg
daa
jecxz
addl
mov
mov
ret
dec
mov
jp
stos
xchg
lock
rorb
scas
xchg
sbb
mov
std
ss
mov
imul
bound
loop
dec
mov
ret
adc
addr16
fmul
jns
pushf
push
je
imul
stos
sub
out
ljmp
test
mov
inc
pop
mov
lods
add
rcrb
pop
ror
ret
and
cmp
jge
and
xor
sub
pop
test
jae
addr16
xchg
es
pop
hlt
mov
loop
les
jle
outsb
or
mov
mov
cmp
add
bound
pop
std
aas
lods
dec
je
add
sub
xlat
movsb
jns
hlt
nop
cs
push
mov
xchg
out
pop
repnz
cmp
iret
iret
int
insl
mov
jbe
jns
pop
jmp
dec
or
in
test
pop
mov
adc
push
xchg
je
rcr
call
mov
xor
loope
push
pop
mov
out
test
shlb
cwtl
mov
adc
into
lret
push
jle
push
call
cmp
pop
out
pushf
xorb
cs
push
fdivs
daa
add
xlat
dec
mov
jmp
jp
addr16
cli
dec
jp
sub
stos
and
xchg
in
xchg
cmpsb
fwait
cmpsl
mov
dec
ret
xchg
jno
mov
cli
mov
dec
or
inc
test
dec
jbe
inc
and
mov
lret
dec
dec
ljmp
sbb
push
es
pop
adc
sbb
add
cmpsb
roll
loope
adc
mov
cmpsl
fildl
xor
mov
fs
push
mov
int3
data16
aaa
loop
sub
jae
adc
repnz
roll
adc
aam
xchg
adc
and
cmpsl
mov
mov
cwtl
xchg
leave
call
aad
add
adc
ja
repz
lret
or
int3
adc
mov
push
scas
imul
dec
adc
sbb
popf
icebp
shrl
fs
int3
movsl
paddusw
cmpsl
shlb
ret
or
rorb
jno
dec
lea
and
push
and
aad
in
scas
movsl
pop
sahf
aas
and
push
std
enter
jp
or
mov
jmp
loope
cs
adc
lret
inc
sbb
inc
sub
sub
lret
pusha
push
mul
mov
pop
lock
pop
jns
jns
ficoms
lcall
jae
push
mov
sub
mov
push
and
addr16
dec
out
cltd
xor
mov
dec
insl
xchg
jno
jae
data16
cli
idivl
add
insb
add
xlat
imul
in
jne
and
inc
add
push
xchg
cmp
scas
adc
outsb
fbld
push
jle
sbb
test
movsw
hlt
gs
out
pusha
in
data16
sub
in
sub
or
andl
pop
xor
push
and
dec
lcall
fwait
cltd
ljmp
roll
notl
inc
es
cmpsl
push
gs
ret
cmpsl
cwtl
popa
addr16
mov
pop
inc
and
mov
mov
lods
aas
movsl
popf
imul
pop
mov
mov
fisubl
sub
loope
sub
popf
mov
paddusw
sbb
pop
push
and
push
sub
cli
jp
ljmp
sahf
leave
or
insl
jbe
push
test
add
nop
js
mov
mov
lock
popa
mov
ss
pop
push
push
mov
and
sbb
pop
aad
xchg
jp
ret
xor
rcr
jl
sbb
mov
and
push
lahf
cmp
add
dec
xor
bound
sub
rcrb
in
lcall
pop
lods
fidivs
pop
adc
push
inc
xchg
test
shlb
jns
adc
and
fwait
mov
inc
std
iret
pop
pusha
sbb
or
fldl
jmp
and
or
cmp
adc
cmp
lock
aas
lret
fdivs
fldcw
add
dec
cs
fimuls
cli
hlt
cmp
pop
es
sbb
out
add
or
repnz
xlat
aas
dec
jmp
cmc
cmpsl
push
movsl
cmp
out
scas
in
jo
xchg
push
mov
cmpsl
xor
dec
lods
mov
arpl
jbe
jg
jp
stos
dec
rcl
xchg
popa
int
add
insl
pushf
jnp
fildl
or
pop
xchg
popf
test
bound
sub
xchg
xor
movsl
lahf
sub
mov
sub
imulb
dec
insb
jge
hlt
addr16
sbb
in
lret
xchg
mov
xor
and
jbe
out
cmp
push
mov
imul
mov
stos
push
loop
sub
rclb
aas
ficoml
movsb
les
stos
cmp
dec
dec
ja
stos
fwait
in
repnz
pop
or
mov
cmp
pop
mov
dec
or
shrb
cmpsb
inc
stc
cmp
xchg
stos
mov
cmp
sub
xor
and
sbb
outsb
mov
lea
inc
ret
push
add
in
inc
inc
mov
mov
fdivrs
mov
daa
sub
jno
jmp
ja
pop
incl
push
jae
rcrl
call
mov
js
clc
ja
pop
cs
sti
ds
test
aam
jbe
sbb
xor
xor
inc
cmpsb
or
aaa
subl
mov
cmp
jp
mov
mov
add
sbb
push
jnp
into
pushf
cmp
mov
out
sub
adc
xchg
pop
popw
push
mov
or
scas
sbb
adc
test
lods
aaa
cmp
sbb
mov
js
sbb
arpl
and
testl
push
in
addr16
decl
xchg
push
mov
dec
addr16
xor
hlt
jae
jbe
sbb
sub
arpl
sbb
push
mov
in
cmc
lret
stc
fsubl
arpl
or
sarl
es
das
adc
jns
cmp
jge
xor
jns
loopne
mov
xchg
fwait
in
mov
mov
gs
dec
pop
sbb
mov
dec
jg
jnp
inc
adc
icebp
sub
inc
dec
imul
rcl
lcall
cmp
fsubs
aam
mov
cld
sbb
std
xor
mov
imul
jo
jge
enter
outsb
inc
lea
jbe
xlat
repnz
push
shrl
push
mov
cld
push
adc
xchg
mov
gs
mov
lds
ds
int3
std
test
es
repnz
test
xchg
push
xor
dec
lret
insl
jo
ficoms
push
int3
xor
xchg
sbb
outsl
or
mov
fcmovnbe
sub
mov
or
pushf
xor
mov
out
sub
inc
sti
in
clc
jl
push
push
mov
pop
addr16
lods
mov
cmp
and
popf
stos
dec
mov
mov
jmp
ljmp
addr16
mov
pusha
or
iret
repz
dec
xchg
jp
test
xchg
mov
jnp
sub
jecxz
inc
out
outsb
mov
gs
xlat
adc
jecxz
mov
jns
loopne
sub
out
pop
js
loopne
in
or
divl
sahf
cmp
push
stc
ss
fnstsw
adc
jg
idivl
add
sbb
xor
aas
push
mov
cmp
addr16
test
icebp
pop
clc
jo
xor
push
ljmp
stos
cmp
or
cs
lock
fcmovnb
jg
test
in
mov
xchg
outsl
lods
mull
inc
test
lret
ret
out
xchg
jne
mov
fildl
nop
mov
jmp
insl
out
cli
testl
stos
jmp
sti
xchg
test
out
stos
mov
mov
ss
cmpsl
add
cmp
and
add
cld
inc
dec
xor
xchg
pop
mov
mov
es
cmp
adc
scas
ret
out
dec
dec
cltd
mov
cmc
sbb
dec
add
pop
outsl
jno
outsl
lahf
push
gs
sbb
test
lret
mov
sub
mov
jmp
mov
cwtl
adc
lahf
call
cmp
shrb
ljmp
and
out
xorb
pusha
xlat
gs
push
pop
push
cmpsb
insl
test
add
xchg
mov
pop
push
aaa
push
aaa
jae
xchg
lret
xor
cli
repz
mov
jo
insl
xor
fsubrs
stc
dec
inc
cmpl
cmp
jnp
mov
lret
xchg
out
lret
adc
test
mov
and
xchg
or
xchg
pushf
hlt
jle
imul
shrl
aam
xor
jge
add
cmp
xchg
inc
sbb
xchg
rcrb
rcl
xor
faddl
add
mov
xchg
sub
inc
xor
loope
sti
pop
dec
aam
fidivrl
mov
mov
jmp
push
addb
xchg
jl
push
mov
push
pop
dec
or
mov
cmpsb
js
mov
lds
int3
mov
fld
sbb
sbb
xchg
std
jge
mov
jae
fidivrs
js
cmp
lea
sub
mov
fisubrs
sub
ret
jmp
icebp
mov
push
sub
nop
inc
add
out
icebp
xchg
mov
lahf
ret
xchg
icebp
fidivl
jno
test
stos
fnstsw
insl
shr
fstpl
inc
test
xchg
mov
xchg
add
sub
jb
adc
pop
ja
mov
and
fsubs
cltd
or
andl
push
ja
andl
stos
insl
imul
xor
sbb
push
ja
stos
in
in
add
pop
je
insb
dec
jle
imul
push
mov
sub
stos
jl
fdivr
sahf
imul
shlb
push
sahf
pusha
jbe
add
loope
shrb
mov
or
or
arpl
jne
outsl
pop
sti
mov
nop
int3
and
jp
mov
test
fdivl
inc
xor
cmpsb
pop
into
add
push
or
jmp
push
sub
mov
movsl
inc
cmp
aam
dec
test
loop
pop
shrl
fwait
push
mov
lds
xor
mov
arpl
or
jbe
jae
iret
mov
faddp
outsl
pop
jle
mov
sub
cmpsl
cmp
fadds
sub
mov
out
arpl
cmp
sub
aad
sbb
fisubrs
adc
mov
xchg
std
dec
imul
lahf
jecxz
in
sbb
rcll
cli
lods
rcrb
into
stos
mov
movb
fists
jp
dec
or
lods
cli
push
outsl
mov
push
push
add
mov
iret
cmp
mov
andb
jo
test
icebp
shll
xchg
scas
loope
loop
sub
inc
cmp
rorb
push
xchg
imul
mov
leave
sub
dec
and
pusha
jecxz
inc
sbb
test
pop
inc
popa
jbe
xchg
in
pusha
test
stos
or
js
xor
add
dec
arpl
jl
push
scas
clc
dec
data16
lods
push
xor
jo
insl
add
sub
xlat
inc
mov
lcall
rolb
dec
xchg
cmpsl
addr16
notb
cmp
push
mov
daa
aam
pop
dec
mov
xor
adc
add
xlat
sar
mov
lcall
popf
sub
jl
push
push
pcmpgtb
imul
sbb
mov
xor
push
lret
cmp
inc
arpl
inc
lods
xor
mov
sahf
imul
in
sbb
int
or
cld
push
mov
mov
insb
in
cs
cmp
jmp
aaa
pop
loop
and
push
mov
mov
pop
xchg
call
cmp
xor
lock
mov
mov
and
rcrl
push
je
ret
jnp
notl
arpl
mov
xor
daa
sti
mov
and
push
xor
fdivrl
fldcw
inc
push
into
mov
jg
test
cmp
lcall
xchg
js
fisubl
push
shll
test
ja
pusha
xor
mov
or
repnz
iret
hlt
mov
push
add
cmpsl
mov
push
mov
inc
jecxz
jo
movsb
adc
sub
xor
cli
xor
in
fs
mov
int3
cmp
negb
pop
in
sub
das
adc
subb
sbb
gs
arpl
sub
mov
into
xor
dec
lock
xor
xchg
shlb
in
stos
cmp
addr16
mulb
or
xchg
je
sub
ss
stos
imul
cltd
test
sbbb
sub
mov
lcall
mov
inc
xchg
push
push
jl
xor
shl
aaa
mov
xor
mov
jb
mov
dec
lcall
and
push
sub
hlt
das
add
lret
stos
mov
jo
add
mov
xlat
cmpsb
into
leave
aaa
in
jb
aad
dec
out
loop
mov
sti
sbb
cmpsl
std
jmp
dec
loop
movsl
dec
xchg
cmpsb
jb
fdivs
mov
push
add
test
cmpsl
mov
mov
sahf
negl
pop
fcomps
mov
pop
jnp
jp
adc
jl
jbe
add
test
nop
push
sbb
cmp
push
rol
pop
sub
push
test
jno
in
cmp
insb
arpl
pop
std
xor
xor
cmp
cld
int3
inc
push
out
pop
fwait
sti
pusha
test
xor
push
mov
mov
dec
add
cmpsl
pop
cmp
ficompl
ret
xor
iret
in
stos
mov
es
movsl
imull
daa
mov
lret
dec
sarl
push
je
ljmp
adc
fcmovnbe
ljmp
cmpl
lds
sub
sub
aam
pop
out
and
inc
repnz
loopne
mov
jno
iret
out
sahf
icebp
or
or
jae
sti
ss
xchg
dec
jo
sub
sbb
inc
lret
fistl
cld
pop
jae
push
cmp
adc
jno
xor
sub
dec
in
jp
in
cmpsb
xchg
adc
sub
test
xor
xchg
cmp
div
mul
mov
pusha
in
test
add
and
mov
xor
ret
add
in
push
aaa
xchg
jp
mov
repnz
xor
loop
int
mov
data16
insl
daa
ss
aaa
cld
sbb
movsb
sub
cli
push
sub
inc
mov
loope
and
cmpb
mov
adc
int3
add
fiaddl
lds
adc
outsl
pop
repz
leave
testl
je
cmp
sbb
scas
or
xchg
sbb
std
adc
adc
jg
xlat
mov
dec
cmpsb
mov
inc
scas
sub
data16
mov
mov
aaa
push
out
mov
mov
mov
sbb
inc
jp
cmc
xor
sub
inc
imul
out
push
lock
out
sahf
jne
jbe
xor
mov
dec
mov
pop
pusha
dec
cmp
or
rorl
fisubl
xchg
popa
mov
pop
rclb
sub
rcl
xor
cwtl
dec
mov
mov
add
stos
xchg
and
pop
sahf
dec
mov
sub
pop
imul
test
adc
in
repnz
xor
ret
mov
jns
mov
pop
movsl
mov
outsb
inc
stos
pop
test
loop
jg
dec
and
jge
outsb
ret
lods
and
cltd
xor
int3
mov
in
jno
add
or
ds
mov
xor
dec
mov
adc
xchg
inc
cmp
cmc
jne
xlat
rsqrtps
mov
dec
xlat
lahf
sbb
lcall
and
inc
lret
dec
lcall
xor
jnp
mov
outsb
and
lret
push
idivb
jmp
mov
int
leave
xchg
fidivs
insl
out
orl
sbb
je
lods
add
add
cmp
mov
cmp
cltd
outsb
dec
ret
pop
adc
arpl
data16
or
pushf
pop
mov
iret
aam
outsl
je
lcall
les
mov
jl
mov
aas
xchg
xchg
inc
inc
pop
and
ds
lock
mov
jno
and
cmc
leave
pop
inc
sub
push
js
mov
addr16
js
jmp
fldl
into
das
xchg
or
mov
xchg
xchg
and
imul
pop
stc
jmp
cmc
sub
lret
mov
nop
mov
dec
jl
jg
mov
push
mov
pushf
cmp
stos
inc
loope
add
repnz
mov
mov
int3
push
mov
xor
cmpsb
movsb
bound
dec
sahf
mov
out
out
pushf
sub
mov
or
js
std
rcrb
mov
movsl
or
pop
das
ljmp
jmp
adc
not
das
jecxz
loop
call
mov
stos
sbb
inc
sbb
sub
fsubp
xor
xor
jl
adc
mov
shll
lods
mov
sbb
incl
data16
mov
mov
sbb
mov
push
push
pop
push
xor
in
stos
movsb
insb
mov
or
fs
fs
sub
mov
js
or
sbb
adc
or
mov
dec
mov
es
shlb
add
mov
outsb
fildl
in
cmpsl
push
hlt
gs
jg
and
mov
xchg
mov
bswap
shlb
add
ja
cltd
ret
test
xor
lock
dec
add
sar
lret
icebp
mov
lcall
daa
movsb
cwtl
adc
lret
pop
popf
push
lcall
cmp
imul
cwtl
xor
push
xchg
jnp
or
mov
pop
cli
or
in
aad
or
jecxz
push
les
ja
gs
dec
jl
outsb
mov
cmpsl
mov
mulb
loopne
ja
adc
pop
add
lret
int
ret
xchg
push
add
test
andb
xchg
sbb
add
mov
and
out
cmpsb
out
scas
cmp
fcoml
pop
scas
fisubrl
xor
sub
or
shrl
ljmp
filds
fists
xor
addl
mov
lahf
jmp
movsl
cmp
test
sbb
jg
adc
ljmp
out
inc
sub
dec
jg
clc
push
push
ret
push
xchg
or
es
nop
ja
mov
aam
jmp
popa
lahf
jp
and
jne
jnp
imul
xchg
outsb
movsb
xor
mov
test
and
mov
and
outsb
int
xchg
add
not
aam
push
inc
loop
div
cmpsb
xlat
in
imul
xchg
les
int
adc
sbb
jecxz
mov
shlb
mov
push
fldl
push
pmaxsw
loop
push
xlat
ss
jne
lret
ret
pop
shlb
es
ja
xchg
adc
test
stos
jno
and
mov
fmul
inc
sub
mov
sbb
jmp
je
orb
sbb
popf
mov
xor
dec
ss
sar
popa
repnz
les
scas
mov
lods
icebp
mov
cli
push
repz
xor
arpl
and
aad
outsb
imull
jbe
repnz
insb
pop
sbb
pop
sbb
xchg
xchg
bound
ficoml
std
sbb
push
cmp
push
or
adc
xchg
in
pop
pop
iret
insl
add
sahf
jg
and
and
xchg
and
fstps
out
pop
sbb
inc
and
icebp
mov
jnp
ret
mov
xchg
jne
lods
dec
xor
rcrl
sti
movsb
jmp
nop
outsl
cmp
sub
pop
mov
movsb
imul
mov
in
aam
pop
fucomp
scas
ret
hlt
jo
add
mov
popa
mov
punpckldq
leave
outsl
call
push
pushl
mov
mov
xchg
cmp
jne
add
mov
jno
inc
xchg
data16
loope
adc
aas
popa
xor
data16
jns
or
dec
add
adc
je
dec
jle
inc
xchg
addb
outsl
sbb
cli
xor
testl
xor
sub
xchg
push
jne
mov
jecxz
pop
mov
mov
dec
xchg
aad
loope
icebp
sub
sub
enter
xchg
xor
xor
or
inc
inc
xchg
sbb
and
pusha
mov
add
dec
sbb
test
lds
mov
and
addr16
test
jno
mov
in
repnz
xchg
sbb
fwait
outsl
movsl
dec
or
xor
lahf
pop
xchg
mov
imul
cmp
add
nop
jg
sub
inc
insb
lea
adc
mov
push
pop
adc
sbb
jl
enter
inc
cmpsl
cmp
cmp
inc
inc
cs
jbe
sbb
push
mov
pop
xchg
imul
call
xchg
mov
xor
mov
faddl
xor
and
enter
inc
mov
sbb
clc
pop
xchg
sbb
jg
add
mov
test
dec
xor
loopne
out
movsb
cmpsl
js
fcmovb
jo
push
xchg
out
or
xchg
adc
dec
enter
adc
imul
jp
xchg
and
ja
add
adc
mov
pop
fldt
add
rcrb
pop
jns
es
jb
aad
add
and
lods
or
sti
adc
xchg
outsl
rcrb
push
mov
ss
push
cmp
jmp
xchg
dec
xlat
add
movsl
mov
xor
sahf
adc
adc
cs
mov
fs
js
sub
lcall
cmpsb
jl
inc
mov
enter
jo
xchg
fsts
enter
mov
jne
jg
mov
mov
mov
dec
shrb
out
pop
xor
fldenv
dec
ds
rcrl
inc
cmpl
mov
dec
mov
std
adc
cmpsl
imul
cmp
push
sbb
bound
in
pop
mov
in
mov
fbstp
dec
iret
sbb
ret
fcomps
ja
sub
in
iret
aam
sub
stc
and
adc
jp
dec
xor
cli
inc
in
xchg
pop
lods
inc
in
lcall
fsubs
subps
into
out
lret
inc
int
andb
lret
inc
sbb
adc
mov
outsl
pop
xor
and
les
out
lock
getsec
jbe
cmpsl
mov
push
sbb
push
jne
xor
sarl
inc
jmp
inc
ljmp
int3
inc
push
mov
lret
hlt
or
cli
mov
jo
and
sbb
cmp
testb
cmpsl
andl
jecxz
xor
cmp
lods
mov
test
pusha
add
mov
mov
sbb
sub
sbb
ja
jmp
mov
in
leave
mov
mov
pop
aas
push
push
mov
outsb
outsl
loope
movq
addl
pop
stos
loopne
mov
movsb
rcrb
and
xor
pop
push
jl
lcall
add
xor
dec
and
neg
push
or
adcb
sbb
mov
and
mov
xchg
leave
mov
cmc
enter
fxch
mov
aad
pop
insb
jo
movsb
adc
inc
loop
mov
cmpsl
cltd
rcrb
mov
sbb
shrb
lcall
ret
add
mov
pop
sbb
and
sub
imul
add
repz
mov
pop
sbb
sub
sbb
push
leave
std
lds
sbb
cmp
daa
cltd
jno
scas
xchg
ret
mov
daa
arpl
xchg
pop
aaa
pop
lods
jbe
fdivl
inc
loope
ret
in
in
sub
xor
adc
adc
adc
in
js
stc
inc
cwtl
stos
add
ljmp
lods
xchg
xchg
xchg
lret
movsb
add
dec
add
stc
jbe
lea
cmp
pop
xchg
mov
dec
pop
cmpsl
xchg
aam
ja
pushf
sub
ffreep
mov
lock
mov
add
pop
test
xor
jns
aas
popa
jl
adc
sbb
push
test
inc
xor
ja
in
mov
daa
jecxz
das
xchg
sbb
mov
xor
fidivrl
pop
and
in
pusha
movsb
je
int3
xchg
arpl
push
cmpl
inc
test
aad
lret
mov
repz
and
push
and
or
aad
loopne
in
adcb
fsubrp
sahf
pop
mov
xor
add
xchg
jg
pop
push
push
inc
cmpsb
push
in
repz
jp
and
push
cmp
in
ret
mov
test
jbe
jno
outsl
xor
aad
sub
imul
sbb
ror
add
or
lods
aaa
sbb
rolb
cmp
pop
sbb
rcrl
inc
mov
lea
mov
insl
pop
cld
sub
dec
insb
outsl
movsl
dec
lods
lock
shr
xchg
sti
push
bound
adc
sti
jle
sahf
pop
mov
push
jp
push
ret
mov
sub
push
cli
xchg
cltd
leave
xor
sub
es
add
std
shlb
loop
add
shlb
mov
out
jl
xchg
jl
jmp
sbb
or
stos
push
fldl
add
leave
mov
mov
fwait
lds
xchg
fsubrs
orl
jne
std
xor
mov
mov
sbb
popf
test
out
in
jmp
push
shrl
sar
xor
aad
mov
push
mov
je
stc
test
jecxz
popf
jns
icebp
dec
mov
or
imul
icebp
addl
rorb
repnz
scas
sbb
jge
sbb
adc
dec
addb
mov
fmul
idivb
fbstp
dec
in
dec
hlt
cmc
stc
into
sti
lods
xor
or
mov
hlt
es
outsl
das
jle
out
addb
pop
xorb
pop
sbb
xchg
jbe
test
outsl
cmpsb
out
repz
sub
jle
push
dec
push
in
or
lret
mov
inc
mov
fldenv
xchg
cmpb
sahf
or
sub
stos
hlt
ret
fwait
jp
insl
lcall
push
sbb
in
mov
lea
adc
cmp
inc
mov
in
mov
mov
jno
jecxz
mov
mov
iret
or
or
and
out
ret
xchg
and
gs
mov
dec
pushf
add
idiv
das
sbb
xlat
iret
in
dec
add
or
mov
adc
xchg
push
cmpsl
inc
pop
sbb
aad
lods
pop
data16
mov
adc
int3
dec
xchg
popf
int
jno,pn
outsl
sub
mov
xchg
push
aaa
lahf
sbb
cmpb
jecxz
xor
inc
imul
pop
lahf
mov
jmp
inc
lahf
int
ror
lea
sbb
push
push
cmp
dec
sti
jb
cmp
jmp
dec
or
or
fistpll
cwtl
push
xor
aas
jns
xchg
dec
rcrb
repnz
movsb
int
and
cli
or
xor
and
enter
and
aad
aaa
fwait
pusha
shlb
jmp
mov
mov
jmp
mov
and
jg
test
outsb
lret
mov
push
pop
out
fs
lea
movsl
xor
mov
nop
and
shr
push
sarl
psubusb
fsubl
mov
push
push
xchg
notl
ljmp
push
scas
call
xchg
pop
xorb
cltd
pop
sbb
gs
test
test
movsb
push
imul
lret
jp
fisubs
mov
std
xrelease
andl
cmp
mov
xorl
dec
jmp
adcl
inc
fdivrl
sbb
aad
adc
imul
std
insb
mov
test
enter
mov
popa
movsl
dec
aaa
jl
sub
roll
subb
jae
or
mov
test
xor
mov
add
xor
cmpl
adc
negb
insb
test
push
insb
or
sti
pop
in
test
sub
adc
out
andb
jne
adc
pop
test
cmp
inc
ja
mov
mov
adc
mov
or
jge
push
into
lods
dec
int3
addl
es
repnz
sub
inc
ret
js
jp
loopne
pusha
cmpsl
cmp
loope
orb
and
push
fistl
ljmp
jns
and
lret
add
movb
push
stc
popa
stos
dec
and
les
push
out
jmp
fmulp
rorl
stos
or
or
pop
sbb
xchg
pop
pop
mov
in
or
das
dec
daa
mov
mov
inc
xchg
sbb
adc
stos
stc
xchg
les
sub
mov
xchg
pop
mov
mov
repz
jge
imul
or
test
dec
add
mov
jb
add
data16
mov
xchg
fs
jle
sbb
cli
fmull
or
sahf
daa
and
dec
aam
mov
pop
mov
lret
inc
fdivrs
cld
push
mov
outsb
dec
xchg
mov
lds
andps
repnz
std
add
clc
and
and
xchg
dec
hlt
movsl
push
mov
sub
sarl
cmp
mov
les
push
xchg
pop
mov
scas
lods
popf
push
push
hlt
dec
cltd
jbe
test
pop
pop
mov
cli
pop
pop
testb
repnz
push
fcomps
mov
sbb
loopne
dec
mov
ror
addr16
jle
jge
xor
shlb
lea
ja
dec
sub
sbbl
push
repz
jl
int3
sbb
popf
sub
imul
lock
pop
add
mov
lcall
adc
mov
inc
scas
fldenv
data16
xchg
popl
pusha
push
mov
inc
xlat
mov
cwtl
xor
dec
inc
lods
fstp
inc
mov
arpl
outsb
mov
cwtl
std
inc
cmp
test
mov
add
lcall
fsubl
mov
jp
loopne
push
daa
mov
mov
sbb
pop
in
add
lret
xor
jbe
pop
sbb
mov
lods
jmp
call
jnp
sbb
xor
sbb
xchg
fnsave
and
data16
jbe
pop
ret
sbb
inc
addl
out
mov
sub
scas
inc
out
rolb
sti
ja
xor
das
mov
fucomip
mov
lock
in
xchg
jmp
ljmp
insb
ja
xchg
inc
jbe
andb
xlat
mov
mov
not
icebp
mov
aaa
xor
inc
imul
add
ss
das
cmp
ds
aam
mov
lea
mov
xchg
imul
lcall
cmp
sbb
pop
les
jno
cmp
sbb
lds
push
stos
idivl
les
push
loopne
mov
les
shll
cmp
insl
mov
xlat
jae
arpl
mov
jle
stos
xchg
xor
push
in
imul
jmp
push
orl
fadds
sbb
pop
mov
aaa
mov
stc
pop
mov
pop
rcrl
loope
mov
mov
mov
adc
xor
pushf
and
cmpsl
adc
pop
pop
sbb
mov
dec
push
mov
push
jnp
sbb
out
mov
and
or
cwtl
xchg
bound
fcoms
ret
dec
mov
sub
sub
mov
int3
fdivs
stos
addr16
lea
rcrl
and
mov
push
xchg
insb
xchg
jns
aam
push
inc
pop
std
mov
xlat
rcrl
cmp
or
fiaddl
push
scas
xchg
je
fwait
loope
adc
pop
jmp
mov
push
jnp
decb
mov
call
das
cmp
jmp
insl
jo
stc
push
andps
sbb
push
xor
jp
enter
or
add
lods
clc
test
sti
mov
sbb
push
clts
ror
or
or
test
test
dec
stos
sbb
mov
jl
fidivrl
xor
shrl
cld
cltd
jno
pop
cltd
dec
mov
sbb
cmp
call
push
cwtl
push
and
fidivrl
fucomip
sahf
je
ret
xor
jecxz
pop
nop
push
pop
pop
addr16
pop
in
pop
adc
std
out
cld
push
push
jno
mov
stos
xor
fadd
xor
in
icebp
push
jmp
jnp
push
add
testl
insb
adc
add
hlt
add
mov
int3
fcompl
pusha
sahf
int3
sbb
lret
adc
repz
inc
dec
jns
jnp
out
scas
cltd
xor
dec
loope
inc
jge
push
ljmp
sbb
pop
lcall
dec
in
ss
cmp
mov
xchg
jg
rorl
cmp
dec
andl
iret
dec
mov
mov
inc
scas
dec
fnstenv
jle
jbe
sbb
or
cmp
lock
jne
xchg
rclb
push
mov
fidivrl
bound
imul
cltd
cmp
popa
cwtl
sbbb
aam
ret
insl
and
sarb
call
inc
mov
repnz
fstpl
jp
xor
out
mov
in
rorl
fildll
cmc
cmp
mov
rolb
pop
aam
dec
mov
sti
rorb
test
xlat
aas
jge
stos
or
pop
fistps
mov
adc
lea
rorl
sub
ss
jne,pn
push
lods
xlat
mov
xor
mov
push
xchg
pop
xorb
into
test
xchg
mov
scas
xchg
shll
les
adc
mov
xchg
inc
das
adc
xchg
es
out
pop
cmpsl
xor
loope
cltd
je
inc
or
mov
xchg
jnp
dec
mov
lret
cmp
mov
push
jnp
add
cmpsl
aad
push
mov
lret
sbb
dec
pop
sub
inc
mov
jl
out
push
test
inc
pop
aas
in
js
lret
iret
addr16
lcall
xchg
test
mov
das
mov
clc
pop
lahf
out
sub
fmull
nop
sub
push
mov
or
out
xlat
dec
lods
jbe
ja
sbb
mov
testb
cmp
pop
std
mov
xor
dec
push
ret
mov
stos
push
rcrb
out
test
xchg
add
mov
imul
fbld
dec
pop
lcall
pop
imul
mov
inc
mov
jb
mov
sbb
mov
lea
in
addr16
pop
lret
jnp
xchg
inc
jnp
movsl
shlb
test
mov
data16
dec
orb
clc
jmp
daa
mov
jno
lea
mov
mov
adc
scas
or
push
mov
sub
sbbl
sahf
mov
xchg
daa
xchg
mov
popf
or
les
test
repz
cmpsl
dec
rol
inc
sbb
push
and
daa
mov
pop
adc
ss
xchg
jle
out
nop
loop
add
ja
leave
fs
push
xlat
mov
adc
rolb
in
mov
pushf
mov
loopne
push
or
pop
in
mov
pushf
inc
jns
sbb
cltd
ficompl
call
inc
sub
pop
jb
popa
lods
sbb
cmp
stos
xchg
jbe
push
lret
subb
push
inc
iret
frstor
jge
or
mov
mov
fnstcw
cmpsl
push
dec
jg
pop
shr
xor
rcrb
sub
test
jle
les
nop
test
insl
es
adc
dec
cwtl
repz
jne
xor
icebp
cli
call
xor
addr16
rorb
addr16
in
mov
add
jns
outsb
xor
rcl
loop
push
lret
and
addr16
sub
aaa
jne
ja
xchg
add
mov
pop
mov
push
std
in
leave
cmpb
jno
mov
sub
imul
push
sar
into
sub
imul
adc
aas
test
mov
dec
in
xchg
ret
sub
fistpll
jl
loopne
adc
add
and
pop
jo
pxor
jp
ss
popa
popa
out
addr16
shll
sti
test
jne
jge
sbb
or
std
sub
lahf
mov
xor
pushf
ret
xchg
sub
jg
mov
cmpsb
jnp
pop
dec
pop
dec
fwait
push
xor
lcall
bound
repnz
mov
sbb
mov
mov
mov
in
jge
inc
iret
movsl
pop
fmull
sub
imull
out
fcomp
adc
pop
outsl
ljmp
cmp
in
das
imul
imul
clc
xor
idivl
and
or
ss
xchg
into
jl
movb
insl
pop
push
scas
shl
into
rol
lods
dec
push
xchg
pop
ss
shlb
call
ljmp
jb
into
bnd
dec
or
dec
aad
sbb
push
scas
mov
insl
daa
jmp
jg
out
mov
push
sub
test
lea
and
mov
std
jp
imulb
jnp
loopne
pop
mov
std
xchg
out
es
imul
adc
mov
xchg
in
pop
mov
or
lret
pop
cltd
add
pop
loop
xchg
aas
test
and
xor
iret
enter
lock
cmp
inc
inc
inc
and
lcall
jbe
mov
jae
and
push
pop
dec
das
push
or
lock
out
movsb
adc
push
mov
add
fwait
and
out
cmp
xchg
jns
add
dec
xchg
and
cmp
mov
popf
xchg
jo
adc
fwait
loop
repz
xlat
aam
aaa
push
loop
cwtl
push
xchg
adcb
test
jle
mov
push
and
cmp
mov
inc
stc
sub
cld
adc
jmp
and
aaa
ljmp
adcb
cmp
and
dec
js
push
ret
adc
sub
sub
enter
jle
and
das
add
mov
stc
fisubs
cmpl
inc
and
and
mov
dec
fld
dec
pop
push
mov
lcall
aad
pop
fwait
xchg
xchg
and
ret
out
fisubs
inc
push
jecxz
sbb
lods
mov
in
pop
out
mov
mov
shr
in
sbb
xchg
mull
cmc
jbe
fwait
in
mov
inc
sbb
lods
leavew
jl
dec
jo
xor
mov
outsl
ror
add
mov
fidivrs
movsl
pop
mov
dec
test
pop
jno
loope
loop
add
subl
lods
fld
stos
insb
daa
testl
inc
xchg
pop
cs
fcmovnu
mov
mov
jl
mov
cmpsb
test
sarb
out
ds
xor
xchg
jg
add
xor
sub
js
sub
sbb
aam
rclb
xor
and
mov
testb
cmp
xor
sahf
out
imul
fnstcw
gs
outsl
imul
cmp
outsl
push
push
push
into
lods
fmul
xchg
loop
test
outsb
adc
jmp
push
pushf
pusha
enter
cmp
mov
or
sub
iret
push
mov
out
inc
dec
push
test
shrb
daa
sbb
scas
pusha
and
enter
jnp
movsl
icebp
lods
xor
mov
jnp
sarb
cmp
inc
lret
nop
xlat
shll
sub
fwait
outsl
sub
hlt
pop
data16
inc
mov
fnstsw
sbb
cmp
jl
fnstsw
addr16
mov
test
and
mov
mov
out
or
dec
repnz
mov
add
movsw
popa
stc
xor
xor
mov
int
repz
arpl
sub
cmp
out
push
jle
mov
hlt
cmp
int3
jo
dec
fcoms
lods
pop
mov
adc
jns
rcrl
stos
pop
insb
jmp
and
imul
fstpt
js
mov
push
cmpsl
imul
xchg
mov
add
pop
outsl
cmpsl
or
push
ret
add
mov
js
xchg
and
adcl
lret
shlb
mov
inc
mov
and
push
prefetch
xchg
cmpsb
iret
stc
or
loope
jae
std
negl
xor
insb
ret
cmp
dec
inc
cld
xlat
mov
xor
or
cwtl
sbb
inc
mov
push
insl
lcall
pusha
in
adcl
cmp
in
jecxz
je
mov
jmp
fisubrl
and
shr
xchg
mov
fwait
cmp
inc
push
adc
ds
in
mov
mov
adc
adc
push
xchg
pushf
jno
cld
mov
daa
push
jbe
notl
lock
or
or
fisubs
fcoml
test
fstl
add
hlt
gs
lea
pop
pop
and
xor
pop
mov
popf
pushf
cli
fsubl
mov
xor
and
xor
push
pop
push
mov
insb
xchg
and
fs
xchg
dec
cmp
sahf
cmp
sub
int
and
pop
icebp
lahf
xor
subb
adc
insb
mov
repz
adc
and
int
outsb
cmpsb
or
loope
adc
shl
jne
fsubs
fstl
jo
or
and
rol
xorb
stc
clc
push
cmp
ss
xor
sub
add
test
ljmp
push
das
or
push
and
dec
aad
jns
lods
ljmp
sub
enter
lea
pop
adc
dec
inc
out
dec
movsb
pop
mov
addr16
int3
mov
sahf
xchg
pop
xlat
daa
pop
xchg
daa
jmp
push
and
push
lods
pop
gs
cmpsb
hlt
cmp
or
dec
arpl
into
movsb
adc
ror
into
insl
adc
cmpsl
popa
push
push
cmpb
pop
jno
nop
jmp
gs
sbb
aad
std
pop
fsub
adc
outsb
add
jne
test
mov
lock
sub
jg
push
jns
repz
mov
add
inc
cmp
dec
inc
dec
sub
stos
test
repnz
xor
fwait
cli
fwait
cmpsl
xlat
movsb
push
test
mov
adc
cli
adc
xor
mov
jg
outsl
fcomip
jl
mov
test
and
arpl
push
add
repz
push
dec
mov
adc
cs
mov
div
out
push
and
fstpl
jb
mov
xor
add
xlat
repnz
xchg
mov
loopne
dec
push
inc
push
outsb
mov
leave
mov
sbb
inc
sub
int3
dec
decb
not
outsl
fucomip
cmpsb
iret
lret
xchg
xchg
nop
jbe
mov
das
loopne
dec
pop
in
adc
or
rorl
adc
pop
and
hlt
or
cmp
jmp
and
cmp
stc
repz
insb
inc
sahf
mov
inc
mov
xor
repz
jmp
into
mov
negb
cmp
out
adc
fisubl
adc
inc
push
ss
mov
jmp
and
insl
faddp
push
inc
in
xchg
pextrw
dec
xchg
iret
cmp
cmp
cmp
or
cmp
imul
xor
push
mov
xchg
dec
xchg
xor
push
dec
cmpsl
and
dec
push
jecxz
stc
fidivrl
fsubs
ret
jae
notl
mov
ljmp
stc
push
sti
jbe
jae
cmp
mov
les
sub
pop
lahf
lahf
out
scas
js
jnp
mov
xchg
imul
mov
out
and
xchg
jb
push
imul
jmp
shlb
mov
in
loope
jnp
in
ss
repz
dec
daa
adc
jge
fdivp
ret
rorb
pop
imul
aas
iret
push
divl
push
sti
fstps
mov
and
std
add
orb
jl
mov
xchg
xchg
das
and
pop
cwtl
sbb
int3
sub
xchg
mov
mov
outsb
enter
add
and
aas
push
lret
sbb
daa
fptan
popa
test
popa
mov
or
push
fisubrs
lret
nop
out
adc
call
jmp
pop
stos
sbb
inc
push
fstps
aam
insb
mov
dec
inc
push
xorl
pop
sahf
jo
rcll
mov
jp
adc
xor
cmp
jmp
inc
jge
je
push
out
aad
or
or
rcrb
or
test
movsb
mov
pop
hlt
inc
std
add
xchg
pop
pop
fwait
jne
mov
aaa
imul
inc
jne
fdiv
jecxz
push
adc
testb
xchg
cmp
jno
bound
inc
xchg
and
int
test
ja
mov
into
paddusb
imul
imul
cmpsb
lahf
hlt
sahf
jle
inc
mov
addl
dec
sbb
jnp
in
int3
int
sbb
outsl
xlat
in
dec
loopne
jge
mov
imul
jle
movsl
dec
xor
dec
ret
inc
pop
mov
sbb
mov
jb
xchg
push
mov
xor
arpl
dec
les
dec
dec
inc
fdivl
jnp
movsb
insl
adc
sub
adc
subb
outsl
jne
shrb
stos
sbb
das
and
cmc
leave
minps
sbb
sub
lods
fldl
mov
push
movsb
mov
insl
mov
inc
adc
jp
daa
fcompl
inc
test
inc
push
mov
scas
jmp
jle
push
orb
insl
jmp
xor
jecxz
adc
daa
dec
mov
in
cmp
adc
ja
test
fsubs
xchg
pop
mov
cmp
sarl
and
jae
push
int3
inc
iret
sub
aam
ds
out
push
int
das
insl
sub
jne
sub
mov
mov
outsl
or
dec
cmc
in
cmp
and
xchg
cmp
push
sbb
stos
les
jmp
xchg
lret
jbe
pop
inc
mov
pop
xchg
push
xchg
in
sub
push
mov
dec
enter
push
out
pop
xchg
int
adc
in
call
addr16
adc
fwait
cli
fldcw
call
sub
cmp
test
int
or
enter
mov
fld
shlb
cmp
das
pop
sarb
test
pop
subb
cwtl
sub
add
jae
cld
add
pop
sub
pop
jge
push
pop
fdivl
pop
int3
fadd
loope
or
adc
xlat
sahf
mov
or
scas
jp
push
icebp
fcmovnu
pop
out
test
dec
flds
push
ret
popf
addr16
jge
push
test
xor
add
cmpsl
xor
add
and
or
xchg
inc
sub
inc
pusha
cmpsl
jge
adc
and
jno
out
ja
xor
sbb
push
sti
pop
mov
scas
push
test
xor
lock
faddl
add
loop
insl
dec
lea
push
push
push
dec
test
push
and
sahf
sub
lret
int3
stc
inc
adc
int3
cmp
cmc
pop
sbb
repnz
push
jbe
aas
sub
mov
inc
or
addr16
movsl
loopne
cmc
jmp
int
stos
scas
push
rclb
daa
sahf
inc
aaa
aad
lret
pop
lods
rol
js
push
cmc
push
xorb
push
jp
ss
mov
mov
pop
sbb
push
push
aas
jb
ss
in
stos
out
xor
or
xor
imull
jns
pop
clc
insb
fisubrs
dec
mov
loopne
mov
or
dec
loopne
rcrl
pop
popa
sub
and
sbb
iret
or
outsl
sbb
add
adc
dec
pop
xchg
xor
and
and
jno
sub
out
cltd
push
imull
data16
outsb
outsl
cwtl
in
and
bound
inc
pusha
xor
jp
cmp
in
movsb
jle
aas
std
xor
repnz
xchg
sbb
fisttpll
mov
inc
out
adcb
mov
rcl
jl
aaa
ret
xor
pop
daa
jmp
enter
jp
sub
addr16
js
xchg
inc
add
push
mov
imul
push
xor
insl
and
mov
cmove
in
mov
nop
ficoml
cmp
adc
dec
add
cmpl
mov
repz
aaa
pop
addr16
inc
int3
cld
aas
loope
xor
cmp
jbe
aas
push
sbb
adc
push
push
popa
sbb
movsl
pop
or
inc
icebp
xchg
loop
jae
pop
je
pusha
sbb
fstl
stc
mov
hlt
loope
lret
ss
adc
cli
lods
mov
fisubs
repnz
mov
daa
xchg
jbe
add
fcmovb
imul
sub
cwtl
and
pop
or
outsl
shll
mov
xor
fwait
add
mov
xchg
sti
xor
jmp
sbb
inc
inc
adc
xor
ss
scas
adc
or
lods
rcll
test
out
call
or
cwtl
pop
and
es
pop
xchg
js
sub
or
sub
out
push
insl
add
movsb
fbld
push
popa
cmp
mov
ss
and
inc
mov
dec
call
test
adc
lds
pop
push
jmp
add
adc
mov
or
xor
mov
in
pcmpgtd
popf
pop
dec
insl
std
pushf
pop
aad
mov
xchg
add
fst
cmp
inc
push
push
sbb
lret
sub
dec
or
and
rcll
and
push
mov
aas
or
and
outsl
mov
filds
enter
nop
fs
pop
daa
shll
aam
xor
push
push
push
sbb
fcoms
adc
aas
mov
es
or
jb
mov
dec
int3
insl
pop
jo
mov
ljmp
mov
push
mov
and
aam
outsb
mov
fs
jae
jb
fs
movd
cmpl
je
and
add
test
inc
movsl
pop
jmp
inc
enter
sub
mov
jle
shlb
cmp
sub
xchg
aam
call
insl
mov
pop
insl
fisttpl
xor
and
adc
sti
jbe
sti
dec
or
dec
out
mov
cmp
adcl
and
and
dec
or
mov
cltd
adc
xor
cltd
insb
in
rclb
jecxz
pop
sarb
push
movsl
jle
xchg
jnp
test
xchg
fwait
leave
mov
lret
xor
xchg
aaa
pop
cmp
lock
mov
dec
shl
scas
xchg
movl
xchg
out
subb
mov
mov
push
fwait
lods
jg
in
daa
sti
push
cltd
sbb
and
push
jl
lds
mul
ret
hlt
int
imul
les
sahf
jl
xchg
pop
xchg
jns
pop
pop
lcall
and
pop
lret
imul
xchg
imulb
aas
cmp
mov
xor
into
jg
add
xor
and
mov
dec
arpl
inc
sub
mov
call
cmp
add
pop
lock
daa
mov
mov
stos
sti
jp
enter
sbb
cli
mov
cmpb
inc
xchg
dec
lods
mov
scas
mov
sbb
bnd
punpcklbw
inc
mov
mov
cli
test
ret
sub
xchg
ret
and
mov
and
fisubrl
pop
shrl
adc
sub
mov
les
aam
popa
or
test
jge
mov
push
mov
xchg
jb
fdivl
bound
push
xor
push
mov
push
mov
loopne
push
cmpsl
and
add
aaa
cs
loopne
add
and
out
add
dec
pop
pusha
ss
mov
pop
mov
mov
push
int3
mov
cmp
out
es
xor
or
jnp
je
mov
mov
repnz
xchg
pop
stos
cmp
xor
cmp
pop
test
cmp
pushf
adc
mov
cmc
push
inc
cld
cwtl
es
fisttps
inc
xor
mov
dec
pushf
jg
inc
lcall
pop
pop
cmp
xor
lcall
cli
jae
adc
int
stos
gs
push
xchg
insb
mov
lods
push
daa
iret
adc
mov
dec
mov
mov
jb
insb
jae
pop
sub
testb
mov
incl
fadds
andb
lods
or
xor
lds
inc
and
push
call
mov
sbb
add
jo
outsb
or
mov
sbbl
imul
and
mov
aam
arpl
mov
jmp
pop
insl
sub
mov
add
fadd
frstor
or
dec
xchg
sqrtps
sahf
add
and
xchg
sub
in
cmpsl
xchg
movsb
pop
fs
addr16
nop
adc
js
outsb
lcall
mov
fnstsw
mov
mov
les
dec
nop
push
scas
scas
nop
outsl
inc
mov
xor
inc
inc
xor
fwait
mov
xor
mov
fildll
adc
cli
dec
cmc
les
or
xchg
jns
xchg
int
mov
lock
or
imul
pop
sti
adc
push
sbb
scas
popf
icebp
jmp
aas
addr16
mov
in
call
xchg
sub
cmp
lret
jge
xlat
fisubrl
dec
xchg
add
push
add
sub
lods
pusha
repnz
cmpsl
sbb
jp
loopne
adc
dec
repz
mov
dec
jnp
fcomi
adc
mov
test
mov
pusha
or
dec
push
mov
out
cmp
aas
mov
or
dec
xor
addl
adc
lcall
cltd
leave
xchg
mov
les
sbb
inc
cmc
and
cli
jae
push
push
cmpb
pop
add
stos
dec
sbb
sub
mov
movsb
dec
inc
sub
fcmovb
cmp
mov
jns
lret
ret
mov
shrl
dec
cmp
sub
xchg
in
sbb
call
jle
xchg
pop
aad
pop
sub
in
jb
arpl
push
dec
adc
pop
aam
inc
push
cmpb
mov
sbb
mov
mov
or
sbb
fadd
sub
push
call
cmp
insb
inc
cwtl
arpl
mov
xchg
movsl
in
push
je
sbb
mov
lcall
cld
adc
jno
decb
gs
pop
enter
sub
mov
enter
xchg
nop
cmc
sti
push
loope
cmp
andb
cli
mov
faddl
fisubrs
cld
jle
cmpsl
push
adc
inc
imul
inc
and
sbb
fcoms
cmp
cmpsb
aad
fwait
aaa
sub
sar
jae
push
lods
je
je
cmpsl
es
insb
mov
dec
insb
pop
pop
jle
sub
ljmp
aaa
add
mov
cmp
pop
test
fistps
clc
mov
and
out
aaa
mov
xor
add
sbb
int3
aad
adc
mov
mov
pop
xchg
stos
cmpsb
dec
pushf
lds
xchg
ss
adc
test
aaa
loope
xchg
popf
sbb
push
pusha
aas
mov
test
mov
mov
and
sub
sub
out
aad
add
sbb
fwait
xchg
or
jae
fldl
clc
or
xor
ret
inc
into
in
push
cld
ret
mov
mov
or
inc
enter
popa
fdivrl
mov
and
orl
jmp
push
cmp
xor
out
out
gs
add
test
fsubl
or
popa
ds
xor
es
xor
or
lods
mov
and
stos
xchg
dec
mulb
ss
repz
imul
mov
add
fidivs
icebp
pop
push
int
pop
pop
enter
mov
or
mov
scas
shrb
jge
add
pop
pop
jp
jbe
mov
pop
lock
push
cmp
nop
mov
jno
ss
xchg
sbb
stc
daa
sbb
and
mov
subl
mov
jecxz
in
cmpl
or
and
add
push
xor
sbb
stos
jmp
arpl
mov
cmpsb
outsb
shr
shl
sub
test
jb
sub
push
sub
es
cmpsb
push
das
popf
inc
adc
cmp
push
scas
or
mov
pop
xlat
pop
repnz
addr16
mov
nop
ret
mov
mov
cmp
orb
jg
std
mov
or
push
cmpsl
imul
fldl
fwait
in
jbe
pop
cmp
jb
mov
xchg
cs
mov
jp
dec
push
out
cs
in
fs
test
or
test
xchg
mov
cmpl
cltd
xor
mov
aaa
lds
xlat
cs
dec
mov
mov
int
sub
sbbb
repnz
sub
lods
rcl
pop
iret
xor
push
pop
dec
cwtl
insl
xchg
lahf
loopne
and
popf
push
sbb
xor
sbb
jno
ljmp
lret
mov
lods
and
inc
mov
ja
jp
cmp
into
inc
imul
or
jl
scas
mov
cmpb
mov
mov
clc
daa
inc
sbb
jno
dec
xor
xorl
hlt
pop
inc
dec
fucomip
cmp
or
cld
mov
or
and
dec
test
xchg
pop
mov
jne
mov
loope
outsl
sbb
adc
aam
mov
in
and
into
jecxz
test
cmp
imull
sub
cwtl
fimuls
jne
inc
es
lret
mov
adc
popf
pop
mul
bound
jle
mov
int3
sub
jne
clc
push
lods
scas
int
push
leave
or
idiv
sbb
xor
jnp
jg
pop
call
imul
test
insb
push
add
fisubs
hlt
dec
cmp
dec
pushf
push
and
push
pop
mov
daa
ss
popa
add
jmp
jo
out
mov
inc
push
clc
or
dec
adc
and
adc
xchg
and
pop
nopl
mov
jae
and
push
adc
iret
dec
jno
rclb
xchg
sbb
mov
notl
out
inc
daa
ss
push
jmp
xchg
sub
lcall
movsb
shlb
sub
std
fidivrl
dec
mov
xchg
fcompl
mov
sub
mov
les
ret
pushf
lcall
mov
dec
jbe
jbe
adc
std
add
sbb
push
dec
sub
lcall
loopne
sti
loop
push
push
sar
mov
into
leave
add
sti
mov
loope
movsb
into
cmp
dec
pop
mov
pop
mov
movb
test
iret
jmp
push
ret
aad
insl
adc
mov
fidivrs
sarl
cmp
gs
aam
cltd
push
cmp
lret
jbe
pop
aad
cwtl
mov
sub
lret
gs
inc
xchg
xchg
xchg
ds
test
xchg
dec
scas
jmp
push
mov
pop
and
aas
roll
les
xor
les
mov
inc
xor
cmp
loopnew
and
and
push
das
in
dec
inc
adc
adc
sub
out
cmp
jmp
and
pop
mov
xchg
dec
imul
pop
xchg
outsb
in
sub
in
lcall
mov
dec
xchg
imul
or
ret
int
and
sbb
ret
scas
or
mov
xchg
insb
jbe
mov
movsb
imul
cmp
or
add
sti
add
loopne
in
xor
aaa
adc
sbb
cmp
and
jne
cmp
arpl
fistps
xchg
lcall
sub
sub
sahf
push
push
repnz
pop
mov
mov
mov
mov
repnz
ret
pushf
je
dec
shlb
xchg
jbe
mov
popa
repnz
rorl
outsb
xchg
or
jp
sub
jbe
inc
fwait
inc
mov
ss
inc
add
or
inc
iret
xchg
push
mov
mov
lods
push
mov
mov
push
cmc
pop
add
test
aam
leave
fldcw
clc
add
mov
xchg
mov
shrl
cmp
jp
out
sbb
fldenv
xchg
mov
scas
mov
lahf
mov
add
dec
hlt
sub
movsl
dec
imul
or
inc
cmp
mov
mov
sub
call
in
into
push
ja
inc
scas
add
stc
jge
adc
xor
out
xchg
or
arpl
and
inc
mov
push
stos
xchg
and
or
pop
pushf
fsts
xor
and
cmpsb
loope
stc
gs
sub
sbb
sub
pop
test
jae
jg
push
out
pop
inc
outsb
jae
or
inc
pop
out
inc
inc
mov
push
out
jl
xlat
ret
and
mov
jne
mov
dec
lret
aad
roll
xor
out
call
mov
mov
push
imul
test
sbbl
jge
fucom
sbb
mov
xchg
mov
dec
popf
pop
mov
mov
jne
adc
imul
outsl
not
inc
mov
in
bound
movsb
sbb
loop
outsl
adc
or
ret
scas
test
jae
rorl
bound
inc
pop
mov
call
test
sub
cli
setb
insb
sbb
xchg
filds
cltd
push
push
mov
mov
sti
aas
in
add
push
dec
or
mov
in
movsb
rcr
push
or
daa
pop
xor
and
xor
lcall
jg
pop
cld
stc
mov
lcall
leave
pop
std
inc
aaa
and
adcb
push
jbe
loopne
popa
and
dec
mov
stos
cmc
addr16
rclb
pop
addr16
imul
or
xchg
cmp
xchg
lret
push
and
sbb
mov
xchg
clc
dec
mov
fsts
scas
xchg
inc
xchg
data16
call
mov
sti
hlt
xor
lods
scas
push
inc
push
mov
repz
and
mov
sbb
mov
fs
sahf
push
lods
push
cmp
mov
dec
mov
pop
mov
and
jns
cwtl
push
add
mov
movsb
mov
xchg
jmp
je
push
sbb
loope
jo
or
sbb
or
das
xchg
out
cmp
add
pop
xchg
fcoms
jecxz
mov
std
xchg
stos
int
pop
and
xor
bound
mov
mov
pushw
xchg
fisubs
xchg
push
sarl
or
pop
inc
fistps
dec
outsl
or
mov
push
iret
or
or
bound
dec
add
cwtl
push
or
adc
sub
xchg
ss
pop
xor
mov
clc
xorb
xchg
pusha
lret
xchg
dec
cli
add
setno
jge
movsb
sbb
adc
cltd
insb
fcoms
dec
xchg
pop
push
sub
lea
pop
lods
mov
jbe
lcall
or
ss
imul
sbb
ret
jbe
movsl
cmp
dec
sahf
jle
fwait
cmp
xchg
lods
jns
add
jp
jp
sbb
dec
mov
into
out
dec
pop
pop
xlat
call
jmp
int3
xor
aam
xchg
scas
sbb
add
loop
shlb
fucomip
jne
ja
mul
repnz
mov
add
add
jecxz
sub
inc
inc
and
cmpsb
loop
cmp
pop
divl
loope
lods
fnsave
sbb
mov
dec
push
test
stos
mov
and
xor
arpl
cmpsb
lods
loop
test
xchg
pop
xor
xchg
int3
cltd
adc
hlt
imul
fildll
xor
sbb
or
cmc
dec
mov
sbb
nop
pop
lods
mov
pop
cmpsl
pusha
test
pushf
int3
leave
lds
loopne
movsb
loopne
int3
sub
push
sahf
loop
add
lods
pop
adc
add
sub
je
popf
jecxz
dec
inc
push
xchg
jb
scas
and
repz
ja
sbb
test
mov
in
pop
mov
les
add
in
xlat
xchg
jle
pusha
ds
cmpsl
out
add
lock
or
or
pop
mov
movsb
inc
jge
mov
xchg
cmpsl
in
xor
adc
enter
hlt
rorl
repnz
ljmp
xchg
add
out
in
and
mov
dec
xchg
outsb
xchg
hlt
gs
mov
and
cmpsb
mov
add
test
mov
jmp
pop
loope
out
fdivl
pop
aad
sarl
dec
mov
xchg
sub
add
fstpt
ret
xor
push
int
pusha
in
add
sti
jne
push
out
push
add
fxch
popa
and
push
nop
int
inc
pop
bound
into
jle
sbbl
fsubrs
icebp
dec
xchg
movb
dec
js
fs
divl
mov
xchg
test
icebp
xchg
or
lods
mov
sub
pop
sbb
dec
enter
std
aam
pop
mov
stos
cltd
add
xchg
loope
out
cmpsb
xchg
sbbb
adc
sub
jb
inc
push
cmp
ljmp
push
jg
dec
cmc
fdiv
add
xchg
out
cmp
inc
cmp
sub
testb
ret
push
fsubl
mov
pop
scas
push
mov
lods
add
scas
repz
xchg
or
inc
data16
inc
je
pop
outsl
dec
lds
das
add
lret
subb
sbb
mov
bound
popf
repnz
push
addr16
outsb
sbb
sti
in
xchg
dec
mov
xor
ret
ret
jno
out
sub
jae
lcall
dec
adc
mov
push
jae
les
and
dec
mov
sti
jae
mov
pop
aam
add
lahf
popa
int3
cli
das
daa
mov
into
ret
out
dec
mov
mov
push
out
dec
adc
bound
dec
int3
sahf
push
outsl
fimuls
and
pop
jne
lret
pushf
and
shlb
dec
cwtl
dec
lret
cld
and
ljmp
or
jmp
xchg
sub
pop
push
aaa
loopne
xchg
fldl
scas
or
xlat
xor
xchg
inc
cmpsb
xchg
jecxz
mov
lret
sbb
mov
gs
lret
lods
push
pusha
out
fwait
mov
add
adc
adc
loopne
dec
or
push
sbb
pop
sbb
cmp
cmp
fsubl
lcall
cmp
lods
and
dec
in
lret
adc
lock
sbb
sbbl
out
mov
push
ret
and
fwait
cmpsl
movsl
adc
and
xchg
or
test
cmp
xor
stos
bound
jp
dec
cmp
push
insl
sbb
inc
cmp
push
fimull
imul
dec
mov
ret
add
and
sub
imul
in
inc
aas
mov
xor
xchg
mov
not
jecxz
rorb
imul
dec
sbb
mov
test
mov
in
and
pushf
jne
mov
add
sub
mov
jecxz
stc
shll
sbb
fidivrs
inc
scas
sub
push
popf
lock
or
xchg
adc
pop
test
inc
xchg
xor
std
fwait
ljmp
pushf
dec
call
inc
aad
push
xchg
js
scas
test
or
nop
enter
jl
mov
iret
idivl
jp
aam
shrl
push
add
sbb
into
adc
in
stos
daa
dec
mov
lock
and
popf
test
lods
jmp
add
mov
cwtl
outsb
sbb
fs
inc
sub
fnsave
mov
test
js
out
mov
iret
ds
lahf
lea
addl
adc
jnp
aas
in
xor
je
sbb
jno
push
loope
test
ficoml
adc
pop
xor
stc
je
out
mov
push
mov
xchg
sub
mov
stos
cmp
or
jbe
movsl
cmp
mov
jmp
fistpl
xor
and
jg
push
or
into
pusha
fnsave
mov
dec
in
imul
dec
sbb
jge
lret
out
push
jp
sbb
push
fwait
dec
fdivl
fidivl
push
int3
add
dec
xchg
add
out
aad
pop
push
inc
shll
push
mov
xlat
jle
loopne
popa
and
sbb
fwait
mov
lcall
ss
add
cs
cld
inc
aaa
adc
les
push
ret
inc
push
push
or
popa
mov
loop
loopne
adc
cmc
mov
sub
jmp
jecxz
aad
rolb
xchg
or
and
les
lock
and
out
stos
sbbl
sub
and
xchg
jbe
cmp
icebp
shlb
in
and
jo
xchg
lods
nop
sub
adc
push
sub
mov
test
xor
push
adc
or
sbb
xchg
fwait
mov
sarl
pop
fcmovnbe
enter
mov
mov
mov
add
testb
mov
sub
sbb
inc
sub
das
cwtl
jne
ret
adc
or
movsb
or
adc
push
imul
mov
cmp
outsl
jp
pop
inc
dec
xor
or
stos
xchg
xchg
jp
cli
fidivrs
dec
sahf
aas
test
dec
dec
scas
andl
mov
aas
push
push
inc
mov
jp
cmp
in
fisttpl
dec
fwait
jnp
jle
test
jl
jle
lcall
ror
dec
inc
jae
or
mov
push
test
adc
ficompl
push
mov
sbb
enter
js
sarb
lock
dec
mov
scas
out
je
insb
jo
jb
xor
adc
inc
dec
add
inc
insl
mov
adc
jmp
pop
inc
xchg
je
mov
fsub
clc
sbb
push
shr
stos
adc
or
xchg
sub
xchg
push
add
jl
ds
inc
addr16
adc
stos
jbe
inc
out
dec
andl
stc
out
jg
pop
or
jp
push
jo
or
fdivr
test
mov
repnz
aas
and
lret
xchg
xor
mov
out
and
subl
adc
sbb
jl
xchg
xchg
mov
pop
or
outsb
push
ret
push
fisubrl
pop
rclb
xchg
ljmp
mov
sbb
or
xchg
pop
push
jns
adc
aaa
xchg
xor
test
enter
jge
cltd
push
dec
movsb
xchg
stos
int3
jle
add
dec
sbb
cmp
push
mov
pop
aas
es
or
or
pop
mov
rcll
ljmp
scas
js
cmp
cmp
sahf
in
xchg
out
inc
testb
xor
test
repz
jge
sti
mov
mov
mov
xor
scas
pushf
movsl
or
and
lds
int3
fisttpl
adc
icebp
mov
fsubrs
jnp
enter
test
lcall
mov
and
or
in
or
dec
cwtl
add
xchg
xor
fists
mov
lahf
popa
jmp
xor
ret
inc
cmpsb
sub
push
mov
rclb
cmp
cmp
cmpsb
lret
xchg
push
addb
dec
scas
mov
idivl
stos
mov
push
and
mov
test
cmpsb
mov
push
xor
sub
pop
popa
repz
test
jbe
push
outsl
scas
aad
jo
mov
lret
sahf
pop
fdivrl
insb
push
inc
sbb
add
jg,pn
mov
jbe
das
xchg
cmp
jecxz
fnsave
mul
fidivrs
jmp
and
add
out
outsb
mov
lahf
cmpb
dec
cmp
gs
outsb
mov
rcll
popf
clc
jns
cld
sbb
lds
pop
subl
sbb
pop
xor
mov
lods
pusha
hlt
aaa
adc
push
adc
ror
push
cmp
mov
xor
xor
rorl
les
or
lahf
mov
lods
hlt
popa
adc
or
fildll
divb
jnp
sub
add
jg
mov
jbe
mov
mov
loop
push
sbb
or
ss
lahf
or
or
mov
push
mov
or
sub
or
lods
idiv
mov
dec
repnz
inc
out
push
add
dec
stc
xor
ja
add
mov
inc
add
sub
jno
shlb
xor
idiv
mov
push
lret
ud1
stos
adc
loope
jb
pop
cmp
mov
jp
popa
ljmp
roll
dec
cld
fisttps
mov
rclb
mov
push
or
push
pop
mov
out
xor
imul
dec
popf
sahf
insl
inc
and
lea
imul
lds
psllq
rcrb
mov
or
xchg
inc
jno
dec
cmp
cmp
sbb
packssdw
pop
add
clc
ffreep
das
fstpt
dec
jle
out
cli
outsl
and
jle
out
cld
mov
inc
mov
fidivrs
xchg
loopne
enter
xchg
es
sub
notl
js
and
stc
push
push
xor
inc
adc
xorl
push
jne
mov
nop
movsb
lods
xchg
lahf
sbb
ds
cmpsl
fxch
dec
pop
in
aas
adc
imul
adc
cmpl
jne
mov
call
jo
jno
mov
lock
mov
shrb
popf
inc
test
pop
mov
fstps
aad
incb
pop
stos
xchg
inc
ret
mov
clc
lcall
roll
fnstsw
fs
xchg
lret
push
jge
jae
cmp
je
mov
idivb
sar
mov
or
pusha
jo
hlt
mov
or
testl
push
mov
leave
lea
aas
pop
mov
popa
pop
jnp
shll
push
test
and
insb
sub
das
xor
pop
pop
add
jmp
mov
mov
shll
jne
ret
lcall
pushf
lret
xchg
shrl
loop
movsl
add
xorl
or
push
pop
ljmp
pop
dec
movsb
outsl
inc
mov
mulb
lahf
jno
ljmp
mov
pop
je
mov
xor
push
divl
xorb
loopne
jns
inc
sub
icebp
push
add
add
xchg
fists
aaa
xorb
scas
lahf
fcomi
sbb
mov
mov
mov
xchg
pushf
addr16
lods
push
push
pop
push
dec
inc
and
lret
push
xchg
movsb
mov
or
cltd
jge
dec
jecxz
stos
fwait
shrb
and
cmpsl
scas
sub
inc
xchg
mov
pop
loop
pop
mov
mov
mov
rorb
push
mov
cltd
xor
cmp
sub
lret
daa
pop
fucomp
xor
stc
jg
sub
imul
sarl
fwait
ror
mov
sbb
mov
sbb
mov
push
mov
inc
xor
mov
lcall
push
jp
jecxz
leave
push
sub
dec
rorb
sbb
lahf
stos
pop
dec
int3
jmp
dec
mov
sub
jmp
add
cmpsl
movsl
stos
sub
inc
pop
jecxz
dec
push
arpl
adc
push
insl
cld
jg
sbb
jg
fbld
out
and
mov
ficomps
cmc
sbb
std
xchg
push
lods
cwtl
pop
inc
movsb
or
scas
outsl
mov
mov
inc
stos
adc
idivb
xchg
jae
inc
inc
mov
push
int3
iret
je
push
sub
imul
add
insb
pushf
fdivl
pop
cmp
jae
and
pop
ret
jns
sub
cmpsl
outsb
mov
push
mov
mov
jp
jg
fnstsw
jge
mov
inc
arpl
shrb
sub
sub
xor
jne
pop
sbb
test
cmpsl
xchg
hlt
pop
subb
sub
daa
sti
jl
push
jbe
add
mov
and
push
fldcw
xchg
jle
pop
push
inc
movsb
pusha
xlat
cmp
nop
sbb
add
cmp
inc
push
leave
add
fbld
sbb
leave
gs
jne
sub
cmp
mov
jle
xor
adc
test
dec
xchg
mov
mov
adc
das
shll
sub
inc
jecxz
out
adc
rcrl
scas
mov
cld
inc
xchg
lods
out
pop
jg
or
test
mov
adc
mov
cltd
je
adc
imul
test
and
sub
dec
pop
jecxz
mov
dec
test
int
cmpsb
ficomps
lock
ret
stos
das
div
sbb
pop
push
xchg
stos
jle
mov
adc
fistps
jno
lret
outsb
or
test
dec
cltd
cwtl
mov
insl
addb
dec
and
push
pop
push
dec
push
mov
ja
push
scas
fsubs
jge
aaa
lcall
loop
or
mov
xchg
adc
rolb
fisttpl
scas
jno
scas
fists
ljmp
dec
inc
inc
ja
add
sbb
sar
push
leave
mov
loop,pt
and
cmpsl
push
mov
je
xor
sub
xor
fistl
adc
or
in
ja
push
out
pushf
rcrl
sti
mov
xchg
std
jno
xor
repz
addr16
iret
or
xor
imul
push
xchg
testb
xchg
mov
push
mov
pop
cltd
js
sti
xchg
dec
loope
data16
xor
push
xor
xchg
mov
pusha
pop
enter
aad
add
jnp
stos
sub
movsb
xchg
popa
movsb
lea
lods
dec
cltd
js
pop
lret
mov
mov
fcomps
data16
daa
lcall
cli
stc
insl
pop
cmc
xchg
aam
aad
int
mov
call
dec
arpl
pop
pop
xor
add
out
iret
lcall
xchg
shll
jle
jmp
lahf
jb
out
jbe
push
add
and
je
adc
adc
mov
shrl
jo
push
stos
iret
jecxz
add
out
or
push
mov
loope
cmpsl
mov
adc
xor
mov
in
mov
hlt
xorl
mov
cli
jnp
push
sbb
mov
sti
scas
int3
and
scas
ljmp
out
add
push
mov
cmp
or
out
aaa
stc
inc
cmpsb
jb
aaa
in
test
dec
cmp
cmp
cmpsl
jne
insl
adc
dec
mov
dec
leave
shll
sbb
push
std
popf
call
jl
out
cld
adc
jmp
jge
fwait
cmpsb
mov
cmp
push
mov
leave
fsubrs
and
xor
movsb
neg
shll
pop
xor
inc
xor
jge
push
ficoml
dec
mov
mov
mov
inc
inc
and
cmp
sub
adc
sbb
fucom
cmpsb
or
dec
movsb
popf
inc
add
push
mov
cmp
adc
pusha
out
jg
in
push
nop
testb
addr16
mov
stc
lea
and
lods
push
rcr
add
aam
jns
lock
ds
nop
arpl
nop
cmp
pop
data16
mov
sbb
dec
or
cmp
call
push
sbb
jmp
iret
mov
test
lods
outsb
dec
shlb
push
pop
test
mov
enter
sbb
lcall
adc
and
cmp
jg
cmp
jne,pn
in
rclb
ljmp
sbbb
stos
cmp
rorb
notl
nop
insl
test
out
jecxz
int3
vrsqrtps
das
ljmp
test
mov
mov
mov
xlat
jnp
cmc
push
je
jbe
xlat
sbb
sahf
inc
gs
jp
add
add
mov
stos
mov
fildll
cld
mov
xchg
xchg
gs
sub
scas
stos
pop
cmp
sub
sarb
mov
ret
mov
scas
and
inc
mov
dec
scas
adc
ret
mov
add
mov
ds
inc
and
jge
fs
js
jmp
sub
pop
lret
insb
aad
jge
or
and
push
into
pop
pop
push
sub
mov
xlat
sbb
or
mov
sbb
cs
out
jno
aas
pusha
sub
ja
outsw
dec
sub
sahf
cltd
jnp
adc
pop
rorl
inc
loope
add
lea
jg
out
push
add
test
das
in
bound
cmpl
fwait
xchg
xchg
adc
add
shl
mov
ljmp
xchg
push
arpl
in
mov
and
lret
in
into
out
aam
ror
inc
lcall
pop
pop
mov
sbb
push
sti
cs
xchg
fadds
cmp
and
xchg
sub
data16
mov
sub
jne
lret
sbb
mov
mov
cltd
xchg
loopne
dec
cwtl
dec
pop
pop
lret
int3
int3
cmpsl
sbb
xchg
mov
scas
scas
insb
or
push
subb
div
mov
lods
xor
or
lret
ss
sbb
rorb
or
enter
cmp
je
jnp
cmp
ljmp
int3
pop
push
inc
sbb
mov
test
xchg
mov
push
jb
push
xor
outsb
mov
jmp
arpl
add
lea
leavew
jmp
sub
sbb
shlb
ret
inc
pushl
inc
add
outsl
jns
outsl
inc
and
mov
mov
stc
aam
xor
fdivrl
cmp
gs
dec
cli
mov
push
daa
dec
mov
movsl
or
xchg
xor
aad
xchg
aam
dec
jae
clc
ret
aaa
cmp
xlat
mov
dec
jns
popa
sahf
push
into
scas
inc
push
sbb
sbb
adc
sbb
movsb
adc
lods
dec
or
loope
mov
ja
popa
push
les
add
lahf
int
arpl
sub
and
jp
sbb
xor
lock
ret
lock
pop
hlt
xchg
jns
out
jge
and
addb
imul
jp
jbe
andl
inc
movb
pop
sbb
pop
push
mov
sub
jno
scas
dec
jnp
stos
mov
out
push
imul
or
xchg
sti
icebp
sub
xor
jnp
sahf
shr
inc
mov
cmp
xchg
ficoml
sbb
shr
push
repnz
ljmp
inc
xchg
xchg
mov
scas
aas
mov
in
add
mov
cmp
add
sbb
or
cld
imul
loopne
xor
fcomps
clc
pop
scas
les
fisubrs
xor
lods
loope
nop
jmp
clc
inc
stos
shufps
cmp
or
ja
out
repnz
rcrb
cmpsb
sub
pop
sub
push
ja
gs
xchg
pop
fcomps
mov
scas
or
adc
mov
xchg
in
jge
xchg
out
cmpsl
mov
jp
dec
mov
mov
dec
nop
inc
sahf
sahf
scas
insl
add
xchg
ret
enter
aad
xor
mov
outsl
stc
dec
int
pushf
outsl
loopne
push
jmp
push
inc
pop
xchg
lods
xchg
orb
outsb
inc
jb
mov
clc
prefetchwt1
out
and
orl
or
add
ret
andb
xchg
xor
adc
jl
pop
mov
mov
les
pop
inc
aad
fbstp
leave
cmp
push
and
outsb
mov
fnsave
cmc
pop
inc
jns
xchg
dec
xchg
test
xchg
lret
xchg
mov
mov
shl
inc
jno
adc
pop
ds
jns
inc
movsb
xor
outsb
jp
push
jl
ja
inc
or
cmpb
mov
jle
or
and
dec
testl
or
cmp
and
jg
xchg
jo,pt
sub
pop
fwait
rorl
xor
imul
fsubrl
jne
and
mov
xor
out
lods
xor
adc
dec
cli
scas
fs
pop
rolb
shrl
lods
rcl
mov
mov
lret
ret
dec
pop
push
xchg
and
pop
jge
fistpll
xor
mov
lea
aad
and
stos
jmp
scas
or
fsubl
mov
cmp
pop
lods
mov
leave
xchg
movsb
les
repnz
rcrb
inc
enter
xchg
cli
and
jo
push
in
xlat
fwait
aad
mov
mov
and
inc
out
movsb
mov
std
dec
add
and
sbb
sti
mov
clc
mov
inc
push
jp
test
sub
adc
lea
push
fisttpl
lock
lods
push
fstl
and
xor
sub
cmp
stos
daa
fmull
add
movsl
xchg
lcall
cmp
mov
xor
sbb
mov
mov
lods
push
adc
pop
sbb
loop
lahf
movsl
mov
jl
pop
in
call
daa
jnp
cwtl
sbb
mov
mov
mov
mov
and
movsl
xor
and
in
mov
mov
xchg
pop
pop
push
push
pusha
mov
scas
mov
in
or
cmp
arpl
test
push
outsl
es
dec
popa
int
push
push
mov
rclb
pop
sub
dec
jge
enter
out
jge
sbb
out
das
outsb
mov
and
xchg
push
dec
loopne
cmpsl
xor
xor
int3
enter
xchg
fadds
out
jno
push
pop
int
lds
subb
inc
cmp
xchg
xlat
lcall
pop
mov
inc
scas
rcl
and
mov
je
mov
pushl
and
cmp
sbb
pop
add
vaddsd
adc
mov
pop
stos
adc
lret
testb
fisttpll
fimull
adc
idiv
loopne
add
shr
sub
stos
lods
pop
rcr
inc
es
fiadds
mov
inc
sub
inc
repnz
call
and
popa
das
xchg
cmp
xor
sub
rcrb
add
push
add
cltd
mov
jo
es
out
out
scas
cltd
xor
mov
sar
or
sbb
adc
scas
lock
dec
scas
sub
int3
and
int3
mov
incl
push
out
jg
and
xchg
loop
push
xchg
add
test
shrb
shll
icebp
divl
and
xchg
mov
leave
scas
dec
add
push
ja
pushf
jae
cmpsl
and
rol
dec
iret
add
sbb
ret
rcrl
push
pop
lods
xchg
push
jb
inc
xchg
inc
push
leave
leave
add
std
adc
sti
sbb
cmp
cld
adc
dec
mov
clc
add
adc
sbb
test
and
add
cmp
sbb
dec
data16
aaa
stos
lock
in
idivl
push
mov
pop
arpl
mov
mov
mov
cmp
mov
mull
lea
jle
add
in
call
mov
pop
or
loopne
push
imul
jae
rorl
shrl
andl
mov
adc
ljmp
mov
pop
or
push
shlb
mov
add
cwtl
in
push
repnz
loopne
addr16
xchg
cmc
jb
mov
lock
out
int
cmp
cmc
in
leave
jno
pop
cmpsb
mov
orl
call
pop
dec
js
dec
jecxz
ljmp
adc
addr16
ret
mov
lret
mov
test
call
mov
jg
and
int
cmp
xchg
mov
cmp
sbb
subl
out
int
cmp
js
adc
xor
jne
and
xor
pushf
xlat
inc
and
hlt
dec
cmp
cmp
imul
sub
push
adc
sbb
mov
jmp
in
insl
push
or
cwtl
repz
mov
shl
outsb
mov
insb
sbb
mov
insl
dec
mov
nop
jb
lock
lcall
int
das
or
push
out
push
fistl
push
sarb
jle
dec
mov
dec
or
sub
jae
daa
movsw
mov
mov
dec
pop
pop
and
insl
enter
test
sub
lahf
xor
aad
test
or
sbbl
ljmp
arpl
jge
adc
pop
shl
ds
inc
dec
jl
pop
test
jge
and
pushf
mov
cmp
add
ljmp
test
jp
jnp
inc
mov
xchg
cmpsb
mov
xor
negl
and
adc
divl
and
cli
add
mov
inc
jp
pop
ja
cmpsb
inc
adc
xor
cmp
and
test
dec
xchg
int
push
and
pop
mov
mov
cld
inc
mov
repnz
dec
pop
push
bound
mov
xorb
jnp
xchg
fisubrs
out
lods
jne
cmp
int3
addl
push
push
push
jmp
popf
lods
test
add
cmp
mov
and
adc
or
inc
mov
adc
hlt
mov
add
loopne
add
cltd
xchg
inc
cmpsb
or
pop
pop
cmp
aad
aaa
sbb
xlat
leave
mov
iret
iret
int3
sbb
testl
arpl
stc
inc
stos
dec
in
out
js
dec
pop
inc
push
test
push
sub
sub
push
sub
xor
jbe
movsb
and
jge
pop
mov
and
movsl
xchg
mov
sub
push
xor
adc
out
scas
je
adc
stos
jp
pushf
mov
shll
add
cmp
sahf
jbe
pop
dec
int
out
stc
int3
dec
test
xchg
test
push
test
loop
jo
sbb
mov
push
aam
mov
xchg
push
mov
cwtl
sahf
pop
sub
arpl
leave
xchg
cld
cmc
icebp
daa
jle
pusha
add
push
dec
es
or
inc
jne,pn
movsl
and
sahf
xor
xor
sub
fs
or
or
mov
leave
cmp
sub
test
cmp
icebp
les
std
in
inc
out
adc
adc
xchg
cli
push
jb
lahf
data16
pop
nop
fcom
mov
mov
orb
ljmp
sbb
mov
fidivrl
inc
xchg
int3
ret
jbe
jae
inc
movsb
and
adc
xchg
fisubrl
sar
imul
xchg
jp
push
aam
dec
mov
mov
rcr
int3
sub
lock
shl
test
stos
dec
jmp
jnp
mov
sub
iret
into
add
lahf
test
mov
sbb
aad
cmc
bts
scas
push
push
mov
mov
fstpt
sbb
push
in
inc
xor
fdiv
dec
jns
jb
sub
scas
cmp
test
fwait
test
mov
leave
inc
xorl
mov
arpl
scas
sbb
subb
cld
loope
push
cmp
sbb
repnz
and
test
sbb
cld
jecxz
lret
sbb
or
push
jp
mov
jle
push
ret
lahf
cmp
inc
add
ss
sub
push
dec
ficomps
call
in
xor
pop
jl
stc
cmpsl
jae
daa
in
fwait
mov
mov
or
sahf
repz
xchg
repz
pop
xchg
and
aam
jno
jmp
inc
fiaddl
add
inc
les
je
push
jg
push
lds
roll
fcoms
pop
ficompl
sbb
jnp
push
ja
sub
outsl
push
in
add
jae
fs
int3
mov
dec
int3
push
outsl
jno
or
mov
ss
push
adc
mov
fbld
lret
out
ret
add
pop
pop
pop
xor
ja
imul
iret
xchg
rol
cmc
sahf
pushf
bound
lds
insb
in
les
icebp
in
sub
aaa
loopne
enter
popf
repz
xchg
cld
cmp
pop
adc
jg
xchg
sbb
stc
pop
std
test
adc
push
mov
mov
rcrb
jmp
inc
idivb
adc
mov
xchg
lahf
rcl
sub
xorb
pop
push
divb
jo
dec
sub
fucomi
test
cs
dec
inc
test
loopne
pop
xchg
cmp
mov
cli
shl
pop
push
sti
hlt
adc
lcall
dec
cltd
jbe
fdivrs
mov
xor
xor
push
jno
push
pop
inc
cli
cli
insl
nop
fisubrs
sub
and
scas
leave
es
fadd
int
imul
mov
fs
mov
cs
cld
bound
xlat
jbe
aas
orb
xchg
jbe
rclb
sbb
dec
adc
xor
loopne
mov
and
stos
jo
fistl
mov
lods
mov
je
sarb
xchg
jp
ja
not
xchg
popf
sbb
int
mov
outsb
sbb
dec
adc
frstor
jns
ret
cld
icebp
lods
out
push
fs
test
cld
sub
add
lock
mov
fwait
mov
push
inc
pop
push
sahf
lock
repz
inc
pop
out
pop
lods
int3
ljmp
sbb
test
fidivrl
rolb
nop
jg
mov
ss
cmp
int
push
imul
jno
jo
dec
aad
add
cmp
jg
movsl
xor
jmp
ret
jno
ret
in
push
xor
sarl
lds
pushf
xor
pop
sbb
roll
push
mov
ror
scas
and
rolb
push
jle
popf
pop
testl
dec
into
or
pop
aam
lret
sbbb
add
decl
cltd
or
dec
and
clc
std
mov
pop
mov
mov
xor
in
mov
adc
dec
sub
xchg
xchg
mov
out
mov
imul
jmp
dec
bnd
jmp
pusha
jp
repz
cmp
stos
cmpsb
push
fcmovnbe
test
lret
sbb
data16
mov
imul
out
stos
push
mov
sbb
pop
iret
inc
in
fisttpll
pop
stos
or
popf
mov
mov
fistl
xchg
dec
insl
mov
inc
cmp
cmpsl
in
xchg
cmc
das
lret
inc
stos
cmp
cmp
jl
pop
out
push
jg
mov
rcl
mov
mov
sub
test
icebp
dec
int3
ret
xchg
loope
repz
js
and
mov
or
fists
xlat
push
scas
insb
cmp
test
mov
and
push
ficompl
pop
inc
cmp
repnz
shll
cld
mov
call
clc
lahf
lahf
call
stc
inc
mov
in
pop
mov
mov
push
popf
fstl
mov
leave
add
scas
or
out
inc
or
xchg
dec
jg
lds
mov
shlb
add
xlat
mov
lahf
jmp
sub
clc
mov
adc
insl
fldt
call
and
mov
test
jmp
idivl
sub
cmp
scas
dec
xchg
lock
in
je
decl
les
and
sbb
rorb
sub
test
ds
lods
xor
pop
rorl
mov
inc
sbb
clc
mov
enter
int3
outsb
or
mov
dec
mov
jae
je
sbb
ljmp
dec
out
in
out
or
jbe
stos
jmp
cmp
les
dec
xor
pop
pop
rcr
mov
into
inc
es
fbstp
int3
push
pop
jecxz
sbb
les
lret
fmull
xor
out
jno
or
shl
xor
dec
push
mov
cmp
stos
in
pop
call
or
fucomi
xchg
xchg
sub
sbb
mov
aaa
outsl
mov
cmp
adc
test
mov
out
inc
sub
lods
popa
imul
mov
jecxz
xor
neg
das
push
adc
inc
popf
jge
jo
add
imul
test
test
jmp
aam
fsubl
int
inc
cld
lock
in
add
fndisi(8087
xchg
push
fists
in
ret
insb
add
js
jmp
mov
js
push
add
rcll
ds
cmp
jle
push
cmpxchg
push
jmp
sbb
cmc
shrl
rorb
outsl
sub
pusha
stos
pop
mull
jecxz
jb
xchg
cmp
movsb
aaa
ret
lods
mov
inc
jnp
mov
dec
fsubrs
xchg
insb
or
les
scas
icebp
fcompp
mov
and
xchg
test
lahf
xor
sbb
adc
fmuls
dec
cmp
mov
dec
sub
jb
xchg
sbb
push
or
into
xchg
andl
inc
scas
sub
and
sti
adc
push
ret
dec
mov
cmp
dec
stc
in
mov
idivl
cmp
loope
mov
xlat
pop
cltd
setbe
mov
mov
mov
cld
jp
or
cmc
outsb
push
pushf
je
rorb
cmpsb
mov
jmp
out
push
xor
and
inc
push
push
mov
repnz
popf
pop
push
ljmp
xchg
mov
in
jno
lcall
scas
push
sub
mov
xlat
and
mov
sahf
push
mov
inc
or
cmp
dec
icebp
mov
pand
sbb
dec
fistpl
pop
adc
adc
sahf
cmp
fs
aam
cwtl
mov
adc
jb
dec
sub
fwait
mov
xchg
and
xchg
stos
rcll
pop
andl
cmp
mov
loope
aad
gs
int
cmpb
inc
out
and
fnstsw
push
jl
xor
inc
pop
loopne
movb
sahf
shlb
mov
test
mov
sub
mov
mov
xor
stos
outsl
loope
ds
add
aas
call
mov
sub
pop
test
mov
dec
dec
mov
sar
inc
scas
cs
mov
dec
adc
pop
mov
pop
jmp
in
mov
xchg
sub
push
cmpsb
sbb
push
repnz
fadds
ror
leave
jmp
insl
data16
push
jg
xor
and
les
test
sbb
mov
sub
lods
add
aaa
adc
or
jb
clc
out
jecxz
or
xor
cmp
mov
inc
leave
das
lret
lret
lahf
fistps
ret
push
ljmp
inc
insl
testl
push
icebp
xchg
or
loopne
arpl
addr16
jne
lock
mov
mov
pop
xor
mov
loop
jno
mov
pop
sti
les
lea
mov
pop
pushf
xchg
pop
sub
jae
push
inc
dec
jno
sub
mov
movsb
fld
pop
jno
push
imul
dec
ficomps
out
mov
jo
push
imul
inc
iret
xor
ret
filds
lret
aad
ficoms
cwtl
daa
xchg
or
xchg
pop
repz
dec
cmp
cmp
and
dec
add
test
jge
and
or
fstpt
cmpsl
fstp
notb
mov
fistl
sub
popf
xchg
lahf
jge
push
sahf
or
add
sub
mov
js
rorb
nop
loope
gs
mov
push
loope
fistps
test
stc
cltd
je
int3
cmp
sbb
sub
ss
mov
sub
jno
call
popf
stos
add
mov
lcall
xor
cs
cmp
aaa
filds
aaa
lret
stos
fwait
push
jbe
data16
out
push
pop
xchg
filds
shlb
or
sbb
jmp
cli
movsb
pusha
add
jmp
push
mov
das
mov
push
push
icebp
pusha
sbb
nop
cmpsl
repz
mov
repz
test
pop
enter
push
cmp
inc
or
pop
xchg
fdivl
add
mov
js
in
inc
stos
addr16
cs
push
pop
fsubrp
mov
mov
jo
pop
outsb
dec
mov
dec
popf
outsb
adc
mov
cmpl
out
popfw
push
leave
aas
mov
cmp
imul
mov
out
cld
adc
pop
outsl
test
es
sbb
mov
mov
pop
xor
cmp
daa
loop
inc
ljmp
cmp
aam
clc
xlat
loopne
stos
out
and
outsb
stc
jae
xchg
mov
inc
inc
sbb
sti
dec
scas
cwtl
aas
dec
mov
jge
fstp
imulb
cmpsb
scas
sbb
pop
jno
mov
jb
aas
lods
jl
mov
icebp
push
lods
imul
out
loope
add
adc
and
mov
call
and
jne
daa
clc
xchg
mov
pop
mov
nop
inc
lahf
insl
and
cmp
adc
xor
fwait
adc
rcrb
cmp
int3
fs
mov
nop
pushf
mov
stos
out
loop
jg
je
jae
data16
mov
nop
dec
sub
lds
jmp
add
or
cmp
in
cmp
in
sub
or
repz
push
sahf
outsb
jo
insb
and
mov
iret
mov
adc
stc
pop
lret
dec
xor
jno
or
mov
jle
sub
sti
xchg
push
sub
push
iret
adc
push
or
mov
insb
int
fidivl
mov
popa
lret
and
mov
mov
inc
mov
push
sbb
push
jge
and
push
mov
fisubrs
jae
xor
rolb
inc
mov
je
mov
je
and
dec
rol
push
xor
push
aaa
out
lcall
jmp
aaa
stos
add
cmpb
pop
or
dec
les
sub
and
flds
add
or
inc
pop
jmp
out
adc
pop
dec
outsl
daa
into
ja
add
pop
add
push
mov
sub
aas
mov
jg
hlt
lods
aam
dec
adc
mov
xor
and
ret
xchg
inc
or
mov
call
stc
imul
add
jge
test
push
fstl
in
jl
sub
adc
das
stos
push
add
insl
cmp
push
cmp
stc
adc
pop
add
fs
add
inc
std
pusha
sbb
insl
add
outsl
sar
loop
out
add
xchg
iret
inc
arpl
cs
and
cmp
sarb
addr16
daa
fs
push
imul
jbe
cli
and
inc
movsl
cmp
fucom
rcll
aaa
pushl
sahf
aaa
stos
dec
sbb
enter
fcmovnu
cmc
xchg
rclb
setae
dec
mov
mov
mov
sbb
dec
push
sub
loopne
fadds
cwtl
mov
aaa
inc
pop
inc
sbb
mov
mov
stos
sbb
adc
xchg
cld
mov
fnsave
or
shll
fisttpl
js
xchg
cs
rclb
xchg
adc
xchg
add
cmp
ja
pop
aam
dec
mov
repz
fsubl
test
addl
mov
shll
sub
and
icebp
or
xor
or
jl
mov
push
jo
stos
jae
xchg
std
mov
mov
jo
test
sbb
inc
scas
shll
movsb
aad
or
and
idiv
sub
mov
stos
pop
mov
xchg
enter
mov
and
mov
jo
std
mov
sti
mov
xchg
cld
xor
cwtl
cmpsl
pop
fstl
mov
sbb
mov
nop
push
pop
sub
jg
add
dec
jmp
push
test
dec
clc
sub
pop
jns
and
aam
push
ja
lcall
inc
in
mov
cli
bndldx
insb
aas
cli
pop
fwait
aas
rcrb
cwtl
sbb
cmp
mov
mov
fnstenv
mov
test
dec
sub
into
out
xor
aad
pop
xor
add
xlat
xor
pusha
jl
test
cmp
daa
jne
enter
push
cli
dec
push
mov
push
and
sub
dec
jecxz
cs
lahf
mov
mov
mov
das
xor
push
idiv
scas
addr16
testl
mov
cli
test
xchg
push
mov
je
rcll
das
stos
loop
data16
testb
adc
xchg
pop
movsl
test
inc
xchg
insl
and
test
hlt
das
call
pop
and
push
adc
dec
mov
sbb
cmpsb
sub
in
cmp
add
xchg
jae
test
les
add
fs
mov
test
jle
cwtl
imul
in
add
lods
push
call
mov
xchg
loope
shl
xor
pop
or
pop
xchg
ficoms
mov
xor
mov
mov
push
add
insl
rclb
jnp
lock
lods
lahf
test
fidivrs
jl
ds
mov
cmp
inc
jcxz
aad
adc
xor
mov
adc
loope
or
movsb
in
fstps
cmp
push
shrb
xchg
jg
dec
xchg
lock
sbb
or
add
sub
shl
cltd
jge
in
jmp
jne
push
lods
out
mov
js
jg
and
jne
loope
mov
jo
jecxz
mov
mov
in
dec
sbb
test
jg
xchg
fists
scas
int3
mov
cmp
ss
out
pusha
add
or
mov
jns
mov
jnp
push
dec
stos
xor
nop
int
sarl
in
shl
and
xchg
sbb
outsl
mov
push
stos
push
ljmp
sub
dec
dec
cmp
sti
cmp
in
outsl
shrl
sub
shll
sbb
ja
fcmovne
mov
es
jne
pusha
out
sbb
and
repz
jecxz
adc
push
mov
movsb
test
std
and
jge
dec
mov
scas
cwtl
rorl
pop
xor
in
ss
es
mov
sub
pop
movsl
mov
icebp
jle
lcall
int
cmp
adc
sbb
js
in
pop
fistpl
popa
mov
bound
mov
mov
sub
mov
pop
dec
xor
mov
mov
int3
xchg
add
mov
jno
push
sub
push
test
inc
push
out
out
mov
pop
cmp
fnstenv
out
das
push
lods
in
test
and
imul
data16
lcall
shrb
std
adcl
insb
mov
mov
dec
jo
in
hlt
loop
aad
fwait
cmp
fxtract
push
aam
sbb
push
xchg
add
xchg
or
jnp
mov
lcall
test
shrl
ret
rcll
out
and
pop
and
mov
enter
insl
sbb
in
pop
fstps
jge
mov
inc
mov
shlb
or
inc
or
cmp
dec
rcrl
sub
mov
movsl
pop
repnz
push
mov
jbe
insl
cmp
ret
and
scas
adc
test
jae
out
in
scas
out
aad
fsubl
jl
test
stc
repz
sti
stos
mov
cmp
leave
sbb
mov
ljmp
daa
sarl
lods
pop
sub
sbb
push
xchg
arpl
clc
pushf
dec
ja
es
fcompl
pop
pop
fiadds
lock
push
cmp
and
and
and
pushf
mov
leave
push
lret
imul
pop
fbld
mov
addr16
mov
insb
call
xor
adc
mov
inc
mov
pop
mov
sbb
and
dec
iret
stc
add
xchg
scas
push
inc
lcall
sbb
loopne
int3
popf
lock
fcmovnu
and
push
int
test
jo
packsswb
das
mov
mov
insl
pop
inc
jg
outsl
inc
mov
loope
in
jle
mov
xor
ja
popf
es
sti
dec
inc
inc
out
jns
es
jecxz
pop
jne
push
jge
popf
icebp
hlt
test
dec
scas
xchg
mov
in
addr16
cmp
dec
scas
and
out
xor
imul
push
pop
mov
scas
jecxz
push
jle
mov
in
mov
loopne
gs
pushf
jp
pop
pusha
xor
push
xchg
in
outsl
sbb
leave
jl
inc
fs
add
loope
nop
mov
in
dec
mov
push
fidivrl
loop
jne
test
cmp
ss
xchg
xchg
mov
call
and
fstpl
jp
ljmp
inc
push
les
fstpl
ret
in
mov
outsl
push
or
sarl
std
orb
add
or
shlb
divl
movsl
xor
add
int
mov
aam
mov
aam
std
rol
clc
loop
mov
pop
mov
lds
mov
mov
xchg
sbb
in
lds
pop
cmp
arpl
sbb
sub
mov
jne
sbb
mov
fiadds
ljmp
sbbl
mov
das
imul
jp
ret
mov
mov
dec
fistps
pop
lret
int3
out
test
sbb
and
outsb
out
adc
mov
mov
or
ljmp
lret
loopne
in
jmp
pop
sahf
sbb
lret
int3
lahf
or
jae
je
dec
cli
popf
mov
adc
and
lahf
arpl
lret
add
inc
lds
push
lea
pop
int3
jbe
aad
int
ja
lods
cwtl
aas
push
in
adc
jb
and
stos
mov
pop
outsb
mov
xchg
popf
data16
shrl
cmpsb
pushf
xlat
test
inc
inc
xor
out
fnsave
push
xor
popa
clc
orb
ret
and
add
inc
outsl
sbb
in
pop
lods
pusha
enter
in
dec
jae
ret
psubb
loopne
out
cltd
mov
fs
mov
push
and
pop
or
xchg
pop
xor
and
xchg
imul
int
clc
xorl
push
mov
fldt
cli
nop
gs
fdivrs
cltd
pop
pop
into
pusha
scas
cmp
test
lock
mov
add
xchg
sbb
jmp
ss
mov
dec
sbb
and
incb
jmp
cmp
push
mov
js
xor
rcrl
mov
adc
cs
pushl
xchg
xchg
inc
mov
je
loop
cli
repnz
adc
mov
test
enter
repz
loope
mov
jle
imul
test
jle
insb
jmp
jmp
popf
sub
subl
xor
mov
lahf
into
mov
push
jo
sti
jle
mov
pop
outsb
xlat
xor
jb
icebp
mov
call
and
mov
jle
mov
push
sub
lods
rcl
pop
pop
negb
xchg
into
jo
pop
push
mov
pop
push
pop
scas
push
pop
ljmp
repnz
add
adc
loope
mov
stc
movsl
or
mov
mov
icebp
lds
xchg
inc
and
sub
je
sbb
add
xchg
sarb
lahf
inc
sub
decb
mov
shr
mov
or
dec
movsb
lea
cmpsl
adc
push
std
mov
int3
pop
leave
push
int
lods
pop
pop
xor
cmp
sahf
or
into
js
in
aas
dec
test
add
dec
lahf
js
mov
call
inc
cmp
mov
cmp
mov
mov
bswap
lods
bound
nop
test
push
mov
sbb
test
mov
pop
add
bnd
dec
push
test
int3
out
mov
sub
arpl
fisttpll
cs
adc
sub
nop
cmp
jle
jae
mov
sbb
ficoml
mov
ds
push
divb
sbb
xchg
mov
dec
or
sub
adc
loopne
es
leave
out
push
ljmp
pop
test
push
ss
mov
push
and
movsb
outsl
mov
lret
dec
push
movsl
jp
insl
fsubl
iret
jo
out
mov
repz
xor
xchg
push
mov
adc
jle
pop
add
xchg
outsb
xchg
dec
rorb
lds
fmuls
pop
popa
in
ficoml
jl
xor
js
iret
ljmp
punpckhwd
mov
loopne
pop
jl
fiaddl
rclb
jp
pop
mov
push
inc
insl
in
rol
sub
pop
lea
mov
popa
inc
sbb
push
mov
push
push
mov
dec
push
aad
add
push
inc
xchg
bound
data16
mov
popa
inc
mov
jnp
lds
pop
mov
repnz
push
dec
sbb
lock
sahf
inc
imull
sub
add
cmp
ja
add
jle
adc
xlat
roll
xchg
xor
int
andl
testb
mov
pop
sub
pop
ret
cmp
stos
testb
arpl
push
adcl
leave
xchg
push
ss
shlb
xor
push
xchg
push
rclb
ficompl
xchg
test
fidivs
cmp
cmp
lcall
adc
shll
shrl
add
les
jg
pop
mov
mov
jle
jmp
pop
xchg
sahf
nop
inc
shlb
stos
or
into
jne
or
pusha
mov
movsl
sub
inc
inc
popf
or
push
sbb
push
shll
mov
cmp
rcr
lret
ds
and
aam
gs
jp
cmp
or
divb
jno
jcxz
dec
lcall
mov
out
and
sbb
movsb
mov
add
sub
dec
cmc
loopne
lods
adc
pusha
mov
mov
mov
pop
sarl
push
icebp
pandn
fistpl
pop
or
jno
scas
add
xchg
sbb
insl
push
dec
add
loopne
mov
icebp
fs
mov
out
idivl
data16
add
push
int
ljmp
mov
xor
fstl
dec
mov
xor
les
aad
fadds
js
loope
push
push
inc
cs
dec
mov
pop
jnp
push
or
aad
js
xchg
adc
gs
into
repnz
add
or
sbb
push
push
pop
sub
rcr
addr16
inc
sbb
into
pop
setge
incl
insl
loope
orl
and
pushf
pop
cmp
mov
jns
mov
xor
pop
inc
sub
pop
mov
cmp
adc
mov
stos
orl
cmpl
into
or
mov
dec
addr16
pop
nop
outsb
mov
sbb
mov
enter
and
iret
int
cmp
xchg
iret
jecxz
inc
test
fcmovbe
loope
or
or
ja
or
inc
cmp
xchg
mov
dec
lahf
cld
stos
sub
or
mov
repz
mov
pop
xor
fstpt
je
sbb
mov
mov
xlat
sub
popf
add
dec
jo
mov
sti
and
jp
cmp
das
sub
jmp
inc
cs
add
inc
lcall
in
daa
jge
push
or
clc
int3
xchg
out
les
mov
push
jo
push
adc
cld
sbb
addr16
and
lods
enter
inc
sti
cmp
xchg
or
es
add
mov
cmc
aam
shlb
mov
clc
insl
mov
int
lods
filds
loopne
mov
mov
lods
filds
lcall
or
push
ds
sbb
inc
call
adc
xchg
fs
xchg
dec
xchg
cmp
push
cld
xchg
jge
adc
hlt
xchg
and
mov
xchg
jle
lea
repnz
jno
ds
pushf
fmulp
outsl
dec
mov
cmpsb
pop
and
shlb
mov
sbb
push
pop
shl
scas
push
mov
inc
lods
push
shlb
lds
icebp
sub
add
inc
addl
ds
or
push
adc
mov
add
insl
or
mov
nop
sahf
pop
inc
in
jb
mov
xor
imul
push
imul
cmc
add
inc
pushf
push
add
xchg
bnd
movsl
jge
call
jle
sahf
fwait
or
jb
and
sahf
lcall
push
and
mov
mov
push
test
push
in
mov
push
aas
mov
lret
sbb
inc
mov
xchg
out
dec
pop
scas
shrl
sub
andb
fsubr
incl
andb
cwtl
jmp
sub
sbb
lock
hlt
push
rcll
ljmp
movsb
mov
jp
dec
pop
push
mov
out
sub
sub
cmpsl
shrl
mov
adc
cmp
inc
push
lret
cmp
push
leave
pop
gs
dec
rolb
xchg
into
ja
pop
jp
pop
push
mov
out
push
mov
adc
xor
test
cli
mov
dec
pop
inc
cmpsl
or
pop
push
dec
pop
jl
imul
pop
ss
insb
pop
rolb
test
cmp
jge
fdiv
outsl
in
inc
outsb
inc
push
jge
xchg
hlt
jl
sti
jnp
mov
mov
jmp
jl
shrb
mov
in
xor
lret
add
insb
mov
popf
imul
stc
pop
sbb
adc
jecxz
sahf
mov
mov
xchg
push
insl
jne
fwait
clc
jne
lret
es
shll
out
leave
out
sub
ljmp
fstp
stc
cwtl
xlat
cld
jo
mov
cwtl
mov
mov
out
imull
and
pushf
xchg
movsl
adc
xchg
cld
pushf
out
push
jg
dec
lret
mov
jmp
subb
mov
jle
push
in
incb
mov
fiaddl
xchg
movsl
lea
je
push
divb
imul
push
arpl
jmp
mov
es
rorl
test
movhps
sbb
jecxz
lds
push
js
sarl
push
fistl
ret
or
mov
mov
data16
dec
sbb
xchg
nop
mov
xor
adc
rolb
and
idivb
jne
sub
fcoms
lret
add
sbb
cli
add
aas
xor
sbb
pushf
cmp
mov
and
cmp
inc
pop
js
bound
mov
or
stc
add
pop
pusha
xor
in
movsb
sahf
sub
inc
mov
out
mov
bound
pushf
enter
inc
and
xor
pop
cmp
jnp
cli
cld
jne
jg
nop
mov
aam
ds
ret
sbb
push
xor
test
jmp
data16
push
test
outsl
insb
ljmp
hlt
cmp
dec
mov
sub
lock
aad
cmp
sub
sbb
sub
cmpl
mov
fidivl
pushf
jge
jge
aas
pop
fcoms
push
jmp
jle
pop
movsb
sub
xchg
jne
ds
cwtl
fnsave
xchg
scas
fwait
fimuls
outsl
pusha
cmp
aam
mov
mov
push
data16
jnp
js
mov
xlat
sub
jns
jle
push
in
pop
jmp
loopne
mov
fcmovu
adc
je
adc
js
sbb
adc
or
and
in
shlb
outsl
loop
int3
cmp
dec
cmp
or
jle
inc
xor
or
inc
lret
pop
fsubr
sub
xchg
adc
adc
mov
pop
cli
dec
outsb
push
push
loopne
pop
pusha
dec
push
xorb
pop
out
pop
sbb
fstpt
lock
pop
adc
fsts
fists
lock
push
sub
push
int
loope
xor
mov
push
mov
add
les
push
push
movsb
clc
iret
inc
sbb
xchg
imul
and
pop
outsl
sub
daa
lods
pop
shr
sbb
mov
fcmovne
stc
sar
addr16
push
jb
sbb
sbb
aas
out
mov
ds
xor
in
leave
aas
mov
andl
cltd
adc
xchg
xchg
inc
dec
add
popa
neg
mov
test
lcall
sbb
test
cmp
cmp
or
lock
jb
xchg
shrl
sahf
mov
sbb
negl
or
sbb
adc
mov
dec
aaa
push
adc
mov
cmc
add
dec
nop
xor
testl
in
jecxz
adc
fimuls
fmul
cmp
dec
aaa
jb
das
add
jno
pop
jnp
cld
and
jg
mov
mov
cltd
xchg
jno
das
push
sub
shlb
xchg
pop
repz
out
jb
jg
dec
rorl
inc
mov
popa
sub
jl
rorl
dec
dec
mov
mov
xor
and
xor
mov
pop
mov
jp
rorl
movsb
cmpsl
pop
cli
mov
inc
xor
lahf
lock
jns
divb
push
aam
shll
xchg
movsb
push
mov
xchg
jecxz
cmp
inc
xor
jne
mov
scas
popa
das
dec
ret
add
in
push
sbb
pop
xor
gs
pop
insl
push
fs
icebp
lock
popa
popa
pop
stos
mov
cmp
sbb
lret
mov
xchg
test
loope
aad
jl
outsb
xchg
xor
out
ja
cmp
lret
daa
push
or
jnp
fwait
cmp
popf
lahf
cld
adc
fsubrl
jmp
sbbl
lret
dec
and
ja
lea
out
mov
sarl
dec
dec
inc
xor
cmp
fcomi
pop
xchg
scas
lret
xchg
jmp
int
cmpsl
add
popa
push
imul
push
mov
mov
push
fsubs
or
fsubrp
dec
sti
sahf
std
js
imul
add
aas
aad
sti
outsl
push
stc
xchg
mov
out
and
mov
pop
xchg
xchg
mull
lock
dec
jnp
inc
lods
shrb
push
sub
divb
int
xor
dec
loopne
xchg
js
dec
popa
xor
cmp
mov
sbb
and
jecxz
adc
mov
lock
cmpsl
in
mov
mov
or
adc
mov
sbb
jbe
add
fisubl
sbb
jno
mov
or
ja
jo
mov
or
adc
cmp
int
repnz
mov
addr16
stos
or
test
lahf
dec
add
lcall
add
push
das
outsb
imul
pop
mov
or
add
push
xchg
je
dec
ss
push
stos
mov
int3
stos
cvtps2pd
xchg
divl
nop
push
lcall
out
loop
jecxz
hlt
adc
fsubp
lea
ret
dec
xor
xorl
push
mov
and
mov
dec
xchg
add
sbb
call
sbb
and
xchg
mov
mov
into
out
pop
movsl
xlat
imul
sub
and
sti
lcall
js
lret
into
and
mov
cs
ljmp
mov
scas
mov
pop
fucomip
into
cmpsb
lahf
cli
xor
jp
mov
out
out
inc
pushf
sub
mov
mov
das
push
dec
ja
add
cmp
xorl
shrb
dec
sarl
xchg
pop
std
mov
inc
shr
pop
pop
lds
xchg
data16
mov
sub
jle
fs
sub
pushf
lea
inc
xor
mov
sub
mov
mov
or
lock
adc
lock
add
pop
loope,pt
and
shlb
scas
push
adc
jns
push
jbe
test
mov
jg
xor
leave
jle
das
dec
loop
hlt
adc
loopne
mov
or
out
xor
pop
pop
jne
fs
int
mov
pop
mov
push
inc
sarb
jl
insl
fldenv
das
or
adc
setnp
xchg
sub
push
push
and
lret
imul
add
cld
or
add
cwtl
xor
fmull
cmp
out
imul
dec
jbe
add
dec
stos
retw
sar
push
rclb
fisttpl
test
pop
in
mov
ret
lods
and
test
and
or
jne
xorl
aam
jno
xchg
jge
mov
cwtl
int
mov
mov
pop
xchg
sbb
jbe
imul
popl
iret
sub
icebp
out
imul
stos
insl
xor
push
gs
fstpl
repz
aad
je
inc
out
mov
push
adc
mov
cltd
cmp
adc
jno
cmp
cs
add
cmpsl
jbe
add
setp
and
xor
lea
mov
mov
mov
pusha
sub
mov
jbe
push
push
mov
dec
mov
lods
dec
frstor
mov
test
nop
and
sub
push
sbb
lock
fisubl
xor
gs
scas
clc
out
sti
cmc
stos
lds
and
mov
ret
pop
rcr
mov
xchg
xchg
in
xchg
push
popf
test
cmpsb
int3
sbb
jl
pop
test
cmpsl
stc
enter
lods
push
mov
push
fnstsw
shll
mov
pop
mov
mov
fistps
mov
dec
dec
popa
movsl
nop
aaa
fisubs
lret
adc
insl
je
loopne
les
inc
xor
repz
xor
popa
push
mov
repnz
ret
push
lret
pop
xchg
jo
test
and
iret
rcrb
mov
dec
imul
nop
scas
jbe
cmp
mov
rcr
dec
outsb
cmp
in
and
les
aam
mov
sbb
psubusb
jnp
pusha
jno
mov
shrl
mov
xchg
icebp
call
fcmovnb
or
nop
and
std
push
out
cwtl
fisubs
inc
rcll
push
pop
inc
ja
push
mov
mov
xor
pop
stc
dec
jp
mov
loopne
dec
imul
push
sub
cld
stc
hlt
mov
ja
fldl
dec
mov
sub
pop
dec
dec
mov
scas
cmp
shlb
ja
mov
mov
xorb
sbb
jns
xor
or
jae
cmp
cwtl
movb
fidivs
pop
xchg
lods
jg
sbb
test
xchg
int3
sub
out
test
push
push
pushf
push
push
test
cmp
pop
les
dec
out
xor
mov
pop
dec
pushf
adcl
sub
xchg
loopne
jae
cmp
pusha
inc
jb
sbb
mov
lret
push
enter
xchg
mov
adc
or
lret
cmp
sub
xchg
adc
adc
test
fs
sbb
inc
daa
sbb
sub
test
jo
mov
cmp
or
ss
xchg
and
cwtl
jmp
add
push
and
add
lret
pop
lds
int3
lods
mov
lret
test
or
mov
cld
cmp
cmpsb
sub
sub
xor
mov
push
mov
in
adc
rcrl
jae
sub
stos
push
popf
leave
xor
or
scas
xchg
outsb
mov
test
pop
sub
into
stos
ret
xchg
in
dec
sbbl
and
cmp
shr
mov
pop
push
xor
test
add
pop
fistl
mov
cmp
push
bound
repnz
test
pop
mov
mov
adc
ret
repnz
inc
mov
imull
mov
sub
push
movsb
mov
aas
inc
mov
aad
pop
jl
inc
pop
adcl
imul
fnstcw
xlat
js
push
xor
sar
pop
mov
std
andl
mov
sbb
inc
adc
mov
movsl
inc
mov
fwait
or
shl
jge
lret
movsb
roll
cmp
jne
pusha
cmp
addr16
in
jmp
imul
push
les
push
sub
sbb
mov
ljmp
mov
push
ss
les
xchg
sub
sbb
push
jg
or
iret
sar
sti
cmp
out
adc
loop
push
jecxz
mov
add
std
adc
mov
xchg
cmp
fs
push
adc
mov
hlt
and
sub
sarl
jns
jbe
loopne
dec
cltd
cmp
arpl
jb
mov
push
fsub
adc
in
out
and
repnz
xchg
out
arpl
es
cmp
xchg
xchg
in
jns
cwtl
loope
dec
pop
aaa
aaa
push
scas
inc
cmp
lock
lret
jp
inc
vsubsd
mov
sbb
sub
inc
stos
adc
jnp
scas
adc
inc
mov
es
dec
pop
out
sbb
cmc
cmp
nop
roll
inc
js
pop
xchg
dec
push
mov
jbe
in
dec
enter
arpl
xchg
jge
add
pop
lret
rolb
negb
add
push
push
or
insl
icebp
xor
fisubl
add
insb
sbb
pop
movlps
je
sarb
lret
push
int
shlb
ljmp
je
scas
lret
sub
sti
push
popf
into
pop
cmp
fwait
or
test
stc
add
out
movsb
dec
adc
aas
adc
sub
movsb
pop
cmp
pop
je
dec
daa
jbe
jns
addr16
lds
jae
test
inc
dec
cmp
cmpsl
pop
or
add
clc
repz
fadd
xchg
test
insl
jno
andl
jle
adc
sbb
adc
stos
dec
xchg
fdivs
mov
jne
out
sbb
adc
jno
inc
jno
sbb
xchg
adc
mov
movsl
push
aad
stc
jmp
outsl
add
stos
mov
in
cmp
mov
punpckhwd
adc
inc
push
mov
sub
push
mov
sub
cmp
jle
fdivr
jge
xchg
jge
ds
les
adcl
test
cmp
cmc
fidivs
jne
daa
jne
mov
insb
mov
jp
push
out
jbe
shrl
popa
je
mov
mov
cmp
xchg
fwait
outsb
rsqrtps
popf
mov
pop
cltd
test
jno
and
testl
xchg
sub
fwait
cmp
cwtl
shr
xchg
pop
test
int
sbb
adcl
outsb
mov
negb
sbb
add
mov
lds
retw
stos
in
mov
cmp
adc
sub
int3
dec
jns
pop
in
test
bound
movsl
lret
push
pop
addb
fists
pushf
sub
add
shll
sub
lcall
andl
jbe
aaa
mov
int3
cmp
data16
mov
xchg
lcall
fisttpll
pop
push
dec
xor
mov
movsl
xor
cmp
test
into
pop
mov
mov
sahf
in
js
cli
adc
icebp
lods
pushf
jmp
inc
add
cmp
fistpll
mov
imul
popl
pop
inc
mov
mov
pop
mov
mov
movsl
aas
cmp
add
imul
push
adc
sarl
shlb
mov
pushf
sub
jl
jb
repnz
dec
aaa
and
das
sbb
fmull
inc
xor
mov
ss
adc
push
mov
push
sub
jle
jp
decb
mov
push
shlb
arpl
rorb
xchg
cmp
lods
push
inc
out
push
pop
sbb
loop
out
insb
dec
jo
out
or
decb
xchg
mov
xor
enter
xchg
test
sub
fcoms
fstl
stos
mov
pop
xchg
mov
mov
sub
inc
sbb
enter
adc
mov
mov
xchg
sti
mov
rcr
movsb
or
scas
lret
push
in
scas
mov
xor
push
fs
fsubrl
mov
pop
add
sbb
loop
aad
les
inc
fs
pop
cmp
jo
mov
inc
mov
loop
push
movsl
sub
ss
ret
mov
dec
mov
or
adc
or
movl
clc
sahf
jb
lods
in
cmp
cmpsb
test
test
add
aam
aaa
ds
xchg
dec
push
popa
das
sub
sar
lea
std
leave
pop
sub
xor
xor
sub
int
fmul
int3
out
cmc
and
lret
cmc
mov
inc
cmp
xchg
sub
out
xor
inc
push
ljmp
mov
pop
out
aas
lds
jbe
addb
movb
ret
into
sbb
push
ds
das
pop
mov
or
pop
test
ljmp
and
enter
and
pop
fs
ljmp
inc
fs
out
das
jp
sbb
pop
cmpsl
cmp
xchg
jae
popa
arpl
data16
je
xorl
mov
repz
imul
pop
adc
and
sub
dec
sbbb
and
or
iret
ret
dec
and
mov
jge
inc
jno
push
out
into
xor
pop
fsub
iret
cltd
jmp
loope
push
inc
ljmp
cli
test
pop
mov
out
movsb
dec
add
fistpll
out
xlat
repz
xor
aas
mov
das
loope
repz
in
dec
cmc
pop
mov
mov
push
inc
ja
adc
sub
and
fdivrs
cmp
mov
pop
push
cmp
push
pop
xchg
dec
movsl
imul
das
jae
mov
mov
and
enter
aas
adc
dec
ficompl
lds
imul
fcmove
mov
hlt
outsb
lock
mov
mov
xor
push
enter
sub
xchg
mov
push
push
or
and
cmp
cltd
into
pop
cli
data16
mov
popf
adc
jnp
jl
cli
jne
pop
ljmp
insl
or
mov
push
imul
bound
xor
pushf
sub
mov
xchg
mov
movsb
fsubp
push
xlat
cmp
dec
int
cmc
decb
add
push
fs
pop
dec
sub
fmull
mov
addr16
aam
jle
int3
dec
sub
movsb
imul
mov
js
add
adc
fldl
mov
outsb
cmp
cmpsb
xchg
xlat
enter
arpl
mov
push
pop
lret
cmpsl
add
out
test
inc
in
loop
inc
sbbl
xchg
out
mov
loope
xchg
fwait
test
jo
inc
cmpsl
int3
push
or
sbb
imul
enter
leave
xor
test
push
inc
xchg
jae
sbb
imul
leave
mov
and
into
nop
xlat
add
push
add
pop
aaa
and
shl
adc
inc
jmp
dec
pop
outsl
int3
popa
jg
iret
push
mov
pushf
sub
int
out
pop
or
test
pop
stc
aam
and
test
mov
lea
mov
push
and
sub
push
fwait
and
scas
add
lea
xchg
pop
scas
lods
xchg
adc
shl
xchg
lcall
mov
lcall
fcoms
inc
out
shll
xchg
gs
jae
inc
cmp
and
sub
in
ljmp
shrl
adc
xlat
sbb
loopne
sub
outsb
test
out
movsb
lea
push
shlb
bound
aas
divl
fcmove
dec
test
jmp
or
sub
mov
jle
lahf
aaa
loop
test
adc
int
inc
xor
cwtl
mov
cmp
mov
adc
xor
movsb
pop
sbb
jb
repz
xor
inc
insl
pop
rcr
sub
addl
inc
adc
sbb
outsb
jno
outsb
repnz
lds
lcall
dec
sahf
dec
pop
shrl
mov
loop
jne
sti
pop
jne
push
mov
inc
mov
out
out
inc
ret
nop
movsl
mov
jl
popf
lea
xchg
dec
cmp
in
sub
dec
pop
cmp
call
dec
repz
bound
pushf
jmp
negb
sub
push
mov
mov
mov
mov
ljmp
mov
xchg
roll
sub
fiaddl
cmpsb
inc
lods
in
mov
xor
inc
imul
mov
inc
pop
pop
pop
sbb
inc
outsl
test
fimull
imul
fists
pushf
leave
notb
sarl
mov
lock
lds
jb
loop
mov
mov
and
and
or
outsl
idivb
test
enter
push
push
hlt
bound
or
jnp
mov
push
mov
pop
mov
dec
mov
push
push
in
jge
pop
xlat
adc
dec
aam
add
adc
and
xchg
daa
cmpsb
pushf
or
imul
rorl
enter
xchg
jl
outsl
mov
mov
jne
inc
loop
add
pusha
cwtl
pop
fsubr
insl
push
lret
or
xor
mov
test
lret
imul
enter
incl
bound
insb
rorl
in
test
jbe
pusha
dec
daa
cld
lods
xchg
pop
lock
daa
and
subl
lds
sti
mov
loop
fldt
jo
push
cmp
xor
das
xchg
scas
and
andl
dec
push
ret
cmp
xor
pop
adc
jecxz
data16
enter
dec
push
ja
jb
add
fsubl
test
aam
sahf
imul
mov
shlb
adc
mov
loope
repz
call
xchg
icebp
test
mov
jg
insb
adc
or
inc
ja
pop
sub
cmpl
push
cmpl
aad
cmp
xor
mov
sahf
aam
cmp
xchg
gs
and
sub
mov
out
shlb
cmpsb
sbb
pop
mov
push
das
sbb
les
mov
add
mov
mov
lds
pop
add
xor
add
jmp
jge
cs
xchg
incb
repnz
test
movsb
hlt
test
stos
jno
test
pop
or
outsl
or
xchg
insb
xor
inc
sbb
sub
sub
jae
fnstcw
xchg
mov
mov
inc
sub
das
imul
or
or
jb
das
xchg
or
bound
adc
js
rcll
insb
mov
rol
xchg
divl
xacquire
repz
mov
stos
pop
insl
mov
enter
mov
cltd
fisubs
pop
popf
xchg
sub
sbb
insb
mov
push
addr16
es
add
jg
mov
outsb
lods
fs
imul
out
mov
lds
jmp
cmpsb
jge
dec
pop
mov
iret
mov
loop
xchg
push
xor
xchg
xchg
pop
sub
fcmove
das
aam
in
fdiv
inc
movsl
adc
aam
push
cmp
int
push
aaa
cmp
in
pop
lea
addr16
adc
loop
push
das
divl
mov
inc
fnstenv
leave
mov
cmp
or
mov
ret
into
jg
xchg
dec
cmp
aad
incb
bound
sahf
sbb
fsub
pushl
jae
and
in
mov
jge
sub
mov
xor
inc
inc
gs
rolb
add
pusha
mov
dec
loopne
cmp
mov
rcrb
push
and
or
or
pop
inc
fdivl
inc
lods
cwtl
jnp
jp
stos
xchg
dec
jae
mov
iret
sbb
sub
add
push
adc
fidivl
cld
imul
sub
hlt
popf
or
pop
bound
mov
imul
and
jbe
clc
lahf
pop
mov
xchg
xchg
insb
adc
imul
subb
sahf
dec
popf
xchg
cmpsb
dec
pop
pop
cmp
adc
mov
andb
jecxz
and
or
hlt
mov
fstpl
jle
pop
orb
push
mov
mov
ja
xchg
and
lea
lret
xchg
mov
and
jp
adc
mov
xlat
scas
inc
or
mov
cmp
rorw
leave
or
unpcklps
scas
pop
rcrl
add
rorl
and
sbb
dec
lret
sbb
mov
int
fildl
iret
pop
add
std
jmp
ss
stos
mov
inc
repz
dec
sub
inc
jg
or
pop
mov
mov
daa
sbb
loop
xchg
push
sub
inc
addl
inc
fildl
adcl
fstp
aam
cmp
inc
add
jg
stos
testl
nop
mov
mov
pop
push
rolb
dec
cmpsb
and
cltd
popf
adc
push
pop
cs
mov
ret
fisttpl
adc
xchg
push
xchg
inc
jnp
push
sbb
insb
mov
setne
out
in
mov
cmp
jnp
mov
sarl
fs
jmp
stos
lods
icebp
and
jns
xorb
push
mov
mov
test
cld
aaa
push
jns
fdivrs
call
shlb
ja
test
cld
mov
int3
fsub
or
adc
stos
or
ja
out
sbb
loopne
mov
mov
filds
cmp
in
sbb
andb
inc
ret
subb
jo
mov
dec
call
mov
add
cwtl
push
add
sbb
or
cmpsl
outsl
mov
add
xor
mov
sbb
or
in
loope
and
mov
sbb
push
jp
and
iret
out
and
mov
fisubs
pop
jmp
in
jbe
imul
pushf
cmp
lret
xor
fdivl
pushf
push
xor
mov
mov
xor
addr16
gs
and
dec
scas
test
pop
and
xor
dec
mov
enter
jns
std
enter
adc
inc
jne
pop
push
push
ret
push
push
xchg
add
cltd
sub
xchg
and
test
enter
inc
enter
pop
icebp
stos
movsl
or
filds
and
fidivrs
into
repnz
and
sub
ds
xchg
mulb
int
add
adcl
fisttpl
popa
bnd
mov
outsl
push
xchg
cmp
stos
cmp
inc
inc
pop
je
into
adc
aad
jle
das
enter
xor
movsl
jecxz
mov
jl
or
sti
and
push
xchg
lock
xor
shr
mov
mov
lds
outsl
rol
sti
dec
and
das
adc
aad
popf
int
adc
cmp
fisubs
push
push
add
nop
jg
push
mov
sub
push
jge
scas
push
cmpb
jmp
mov
dec
fsqrt
bnd
add
stos
push
xor
jbe
imul
fcomps
popl
ja
sbb
mov
pop
addl
out
or
jbe
mov
loop
jecxz
daa
cli
fldcw
mov
adc
add
hlt
mov
jle
data16
repnz
xor
stos
movsb
pop
sub
push
push
dec
adc
mov
dec
sbb
sub
gs
xlat
scas
fdivl
cmc
rcrl
movsb
mov
mov
shll
cmp
fldenv
inc
imul
int
fsts
cmc
xlat
iret
cmc
push
mov
aaa
add
loope
adc
cwtl
in
add
mov
add
pop
cmpb
sbb
jns
into
insb
sbb
mov
gs
cmp
icebp
outsl
cmc
leave
jge
ljmp
or
scas
fisubrl
lahf
cmp
inc
add
lods
or
dec
adc
mov
jmp
and
out
inc
arpl
jno
leave
nop
pusha
inc
fcomps
ret
inc
pop
ret
push
mov
adc
rcll
aam
jmp
inc
mov
inc
hlt
cs
or
add
mov
push
outsb
das
jge
sub
scas
cmp
out
xor
xor
xorl
and
push
out
repz
or
jae
pop
cld
dec
repz
and
mov
mov
or
adc
dec
adc
movsb
dec
rcll
dec
dec
imul
dec
out
adc
adc
mov
mov
xchg
rolb
mov
js
bound
adc
cmc
adcl
in
pop
jge
and
ret
imull
adc
shr
jecxz
push
call
repnz
mov
adc
push
test
jne
popf
mov
and
pop
es
pop
ret
inc
sbb
cli
outsb
lods
xchg
scas
xlat
mov
pop
movsl
dec
or
pop
xchg
jg
subb
mov
pusha
pop
inc
pop
dec
negb
lret
pop
lock
decb
push
shlb
ror
popf
in
jbe
aaa
dec
push
repz
add
lret
jecxz
inc
rep
inc
cmp
pop
xchg
cmp
je
data16
and
jge
add
mov
outsl
adc
sbb
out
lods
nop
js
inc
push
mov
push
mov
or
loope
inc
adc
loopne
mov
cmp
movsb
xchg
sbb
sub
inc
jg
ja
stos
mov
int
push
add
aas
pop
adc
cmp
hlt
outsl
subb
push
push
adc
enter
imul
or
fwait
testl
mov
pop
imul
push
leave
out
pop
out
in
xchg
mov
inc
add
int3
test
mov
adc
adc
push
cmp
addr16
je
inc
iret
push
fs
inc
sub
cmp
movsb
aad
lds
loop
aam
call
jmp
dec
lret
test
adc
std
jbe
mov
pcmpgtd
iret
pop
adc
cmp
cs
xlat
pop
mov
and
ja
data16
cmpsl
sub
aam
inc
xchg
push
test
adc
fistpll
jae
mov
or
sbb
scas
cmp
outsl
int3
cmp
cmp
push
inc
xor
push
push
addr16
sbb
popa
push
adc
jbe
inc
fxch
or
test
clc
adc
adc
cmpsl
push
cmp
arpl
xchg
mov
arpl
pop
xchg
and
bound
imul
sub
mov
lods
cli
fdivs
mov
roll
push
cmp
cmp
mov
dec
jg
dec
push
jne
loopne
cli
gs
push
dec
adcb
xchg
out
sub
cmp
daa
push
cmp
xchg
lock
or
mov
jecxz
in
shr
rclb
or
or
icebp
pop
punpckldq
xorl
lea
xor
xor
dec
xchg
and
inc
dec
sub
int3
test
push
shll
enter
fdivr
mov
push
ja
clc
jl
mov
sub
fs
mov
pop
les
mov
inc
aas
add
mov
imul
adc
mov
or
push
sub
inc
xor
mull
mov
push
dec
gs
jl
inc
in
popa
daa
lea
out
cmpsl
xchg
in
inc
stc
imul
fsts
pop
fisubs
popa
bound
adc
icebp
jb
jmp
mov
push
cmp
or
dec
sbb
lods
ret
int
fsubrl
and
into
mov
scas
push
mov
add
sahf
imul
cld
xchg
aad
lret
adc
mov
sti
stc
inc
push
jmp
push
aad
mov
das
mov
cmp
jle
fdivr
sub
mov
cmp
mov
push
dec
sub
adc
cmp
lret
iret
ret
fisubrl
and
mov
dec
pop
dec
pop
in
sub
lods
xor
pusha
xor
cmpsb
sbb
lods
lods
mov
in
rcl
sub
or
hlt
or
or
lcall
pop
fneni(8087
cmp
xor
dec
movsb
and
fsubs
xor
iretw
mov
test
fmull
add
notl
push
loope
mov
adc
mov
popa
adc
push
adc
imul
cld
jg
xchg
push
repnz
xor
jp
inc
cmp
negb
push
ja
stos
inc
lret
pop
addr16
push
inc
imul
fcmovnb
loope
bt
fstps
push
xchg
sub
cmp
scas
lahf
or
stos
pop
andb
pop
mov
push
or
jmp
test
mov
pop
subb
imul
lahf
push
dec
lret
adc
sbb
xchg
push
adc
xor
jae
jp
push
lret
outsl
sub
jbe
addb
inc
out
xchg
iret
cmp
cmpb
push
mov
stos
xor
push
inc
hlt
mov
add
and
lret
out
jle
push
xor
push
adcl
jle
out
in
ror
mov
loop
xchg
dec
sahf
and
stos
imul
pushf
lods
adc
or
mov
xor
ss
call
sbb
aad
mov
loope
jl
out
popa
cwtl
lods
arpl
push
lret
jno
add
daa
jnp
xor
lret
mov
pop
dec
jae
rol
jne
sbb
push
cmc
ja
arpl
push
pop
inc
pushf
inc
push
int3
adc
fnstenv
movsl
push
shrb
adc
hlt
and
fmul
push
mov
dec
vandnps
ds
imul
lea
lret
lods
pop
xchg
fnstsw
ret
dec
jmp
lds
popa
inc
jecxz
cmp
das
cmp
loopne
ret
sahf
pop
cmpsl
mov
jecxz
or
inc
fs
sarl
xchg
sbb
pop
xor
pop
mov
xor
or
and
xchg
jne
aaa
cmp
dec
and
int3
xchg
leave
push
cli
loope
hlt
dec
add
lods
and
cmpsb
inc
mov
in
adc
dec
rclb
aam
loope
repz
mov
pusha
push
inc
push
test
push
adc
jne
push
mov
les
les
arpl
cwtl
dec
loopne
sahf
sub
loop
or
jp
mov
scas
push
cmp
ja
or
loopne
dec
call
xchg
xor
jl
add
sti
pop
adc
xchg
mov
dec
xchg
sbb
xchg
adc
push
rcrb
push
jmp
add
adc
gs
jg
insb
vpackuswb
and
dec
mov
push
mov
mov
ret
cli
cli
inc
movsb
ficoml
cmp
cli
push
fcomps
popf
rcrb
mov
fidivrl
inc
mov
and
mov
add
neg
fldenv
or
add
test
cmp
xor
sub
adc
and
inc
or
or
sti
cltd
push
or
lret
lret
lcall
push
mov
push
sub
and
jb
xchg
mov
test
and
mov
es
mov
ljmp
repz
daa
jmp
sub
xor
sahf
movb
out
pop
or
ss
data16
mov
mov
nop
adc
push
add
jecxz
sub
cmp
in
add
mov
scas
cmp
sarb
push
push
imul
scas
add
jnp
jbe
mov
movsl
das
shll
pop
push
adc
or
insb
cmc
xor
testb
in
push
xor
lock
mov
enter
push
rcrl
inc
jns
mov
dec
jnp
mov
cs
inc
adc
sti
sbbb
mov
loop
add
push
or
ret
lods
mov
mov
dec
mov
lods
repnz
push
jbe
sbb
jp
xchg
cld
daa
cmp
adc
popf
inc
adcl
sub
or
jns
mov
cs
test
lods
xor
ret
lea
sub
cmp
add
sub
mov
xchg
fsts
dec
in
or
or
ds
jbe
imul
push
and
cpuid
loope
insb
xlat
cld
icebp
cwtl
std
fmull
mov
sub
mov
mov
jne
ret
add
pushl
cwtl
mov
mulb
int
jle
xchg
mov
or
jnp
cli
mov
out
lcall
cmp
add
mov
xchg
ja
and
and
lcall
mov
ljmp
push
aaa
xor
xor
mov
rcrb
xor
repnz
add
mov
push
loopne
adc
dec
or
bound
xor
adc
pusha
mov
mov
shr
sahf
jmp
sub
and
push
and
sar
add
in
nop
sti
adc
mov
adc
arpl
mov
and
push
push
je
adc
movsb
push
sub
xchg
jb
jl
cs
mov
icebp
pop
imul
mov
adc
sbb
dec
arpl
add
hlt
mov
iret
inc
sub
mov
mov
mov
mov
addl
and
lcall
aaa
xlat
lret
fcompl
dec
clc
xchg
adcl
pop
xchg
test
dec
andb
pop
sub
inc
adc
bound
xchg
rcr
dec
cld
mov
push
or
inc
ds
xchg
add
loope
jmp
adc
dec
pop
rcrl
push
shl
sbb
jg
jp
mov
xor
call
inc
mov
stos
pop
stos
mov
xchg
out
jne
insb
adc
dec
pop
jns
loop
inc
sahf
fcmovu
mov
insb
adc
inc
fadds
mov
jne
in
push
mov
out
fsub
cmp
insl
inc
xchg
jle
subl
ret
jnp
xorb
lahf
addr16
pop
jmp
xchg
mov
sbb
lock
cmp
aad
js
repnz
mov
loope
sub
push
dec
ja
jne
inc
aaa
mov
repnz
test
push
sbb
or
pop
mov
or
pop
xchg
loope
cli
testb
xchg
loopne
jl
xchg
jmp
push
adcl
mov
pop
push
add
cmp
push
fs
lret
mov
mov
loop
xlat
cmp
shll
aas
es
popa
push
push
scas
inc
xor
repnz
arpl
cmp
outsl
dec
dec
repz
and
aas
inc
sbb
out
sbb
mov
pop
loop
fdivl
test
sub
out
clc
ret
pop
cmp
and
mov
dec
sub
xchg
xchg
push
in
xchg
pop
add
mov
adc
fwait
inc
push
push
cs
sbb
dec
sbb
pop
inc
or
mov
push
adc
or
lahf
pop
mul
xchg
arpl
push
mov
lock
jo
mull
pop
aas
mov
dec
mov
test
sahf
mov
sub
sub
insb
adcb
xchg
jle
int
arpl
sahf
mov
ja
ret
dec
test
sbbl
sub
je
cmc
movsl
pushf
lods
dec
test
data16
pop
movsb
dec
daa
xchg
jae
mov
pop
pusha
pop
lret
aas
decb
mov
dec
out
and
in
shll
xor
or
cwtl
fxtract
sub
mov
mov
sub
pop
clc
push
jp
mov
divl
xchg
mov
aas
mov
jne
jmp
lods
call
cs
cld
xor
outsl
les
aad
lret
lret
xor
insl
fwait
inc
pop
xchg
sbb
push
in
adc
out
loopne
sbb
mov
and
mov
pushf
es
cli
mov
insb
and
xchg
xorb
les
lods
loopne
inc
cmp
dec
aad
ja
movb
int3
push
je
or
les
and
dec
and
pop
xor
data16
push
cli
addr16
pop
adc
mov
cmp
movsl
push
fmuls
jae
dec
shll
mov
pop
mov
lods
sbb
arpl
push
lods
xchg
gs
aas
ja
jp
mov
jle
cmpb
and
je
push
pop
icebp
ficompl
stos
jne
jp
and
add
sub
aad
inc
push
pop
xchg
cld
mov
loopne
sbb
test
xchg
pushf
mov
aam
cmp
jge
cltd
out
cmp
or
mov
xchg
rolb
or
hlt
add
dec
add
and
adc
out
mov
mov
cmp
mov
gs
call
dec
lcall
lahf
imul
ljmp
dec
insl
imul
or
xor
inc
test
out
push
and
aas
push
mov
mov
test
pop
dec
mov
cwtl
xchg
push
xor
unpckhps
out
nop
push
or
adc
jecxz
or
mov
jb
pop
sub
dec
push
shlb
or
xor
cmpsl
mov
xlat
mov
inc
xchg
sub
pop
push
mov
clc
inc
dec
mov
adc
xor
adc
mov
jne
jnp
scas
xor
adc
sub
fisubrs
jmp
lock
in
sub
js
pusha
addr16
loopne
ret
pop
divl
fldcw
mov
pop
aas
inc
icebp
push
push
addb
push
sub
cmp
pop
aas
mov
int
jns
lods
mov
jae
icebp
mov
mov
lods
call
dec
sub
shl
push
mov
push
insb
clc
inc
or
lcall
addr16
sub
sbb
xor
lret
aaa
inc
test
ret
in
cmpsb
push
notb
push
jp
jbe
fisttps
inc
mov
inc
sub
xor
mov
jmp
push
stos
rcrb
nop
push
mov
pop
cmp
cmpsl
push
aaa
add
xchg
adc
mov
jp
inc
inc
repz
jmp
insb
mov
mov
aas
jle
push
jbe
pushl
int
fdivs
mov
hlt
mov
dec
call
fnstcw
lret
jnp
pop
mov
xchg
loop
js
loop
fcmovu
ljmp
cmp
add
push
jae
adc
mov
mov
psubusb
mov
xchg
mov
fidivl
ljmp
ficompl
xchg
int3
push
push
lcall
xor
icebp
fwait
jg
nop
mov
push
push
adc
push
sbb
add
roll
imul
fdivs
test
sbb
sti
and
clc
jmp
repnz
imul
pop
xchg
xor
sub
mov
fsub
pusha
out
popf
dec
pop
add
scas
sahf
mov
mov
lods
scas
add
jne
jmp
or
iret
and
push
xchg
and
addl
cmp
fimull
mov
lea
and
call
jns
sbb
mov
lods
cmpl
popf
sub
pop
mov
mov
push
mov
or
xchg
push
ljmp
mov
enter
push
mov
push
jne
and
mov
or
mov
les
aad
xchg
orl
pop
gs
mov
cmp
test
push
mov
pop
addr16
pop
in
rcrl
rcrl
std
in
jge
rolb
mov
stc
or
mov
pop
and
loope
sbb
sbb
scas
popa
cmpsl
int3
aam
shrl
mov
xor
pop
sbb
jle
outsl
jo
mov
cli
cwtl
push
push
lcall
fmul
sbb
pop
mov
jns
ret
inc
add
and
cltd
xchg
scas
push
arpl
shr
mov
movsb
dec
mov
fdiv
int3
sti
rorl
cmp
shrl
shl
aaa
in
jmp
mov
dec
insb
addr16
sahf
lahf
leave
in
in
cmpsl
add
lea
inc
jecxz
fldl
add
lds
rolb
push
aad
fs
jae
adc
xor
pop
pusha
stc
xor
jl
rcrb
arpl
pop
push
push
cmp
int3
cwtl
pop
test
adc
adc
std
sbb
in
adc
pop
pop
outsl
xchg
ja
popa
enter
or
insl
jo
pop
or
enter
sbb
pop
or
fs
pop
call
and
jg
dec
int3
imul
arpl
pop
mov
add
aas
out
fs
lea
test
fwait
scas
adc
out
jmp
jnp
test
mov
loop
and
in
lret
cmp
sbb
xchg
lds
push
jle
scas
lcall
nop
rcll
mov
addr16
clc
and
scas
inc
cmp
enter
insb
cmp
pop
repz
nop
inc
or
insb
clc
es
iret
ret
sarb
call
push
mov
mov
lret
nop
pop
arpl
mov
stc
lcall
sbb
mov
loop
test
in
inc
jo
pop
inc
lods
mov
cmp
push
ret
gs
or
pushf
repz
jl
repz
ret
stos
out
jp
movsl
lods
inc
pop
idivb
nop
ljmp
push
adc
imul
mov
mov
mov
add
ret
add
lcall
inc
sti
ret
cltd
adc
sbb
inc
pop
int3
ss
adc
shrl
xor
mov
js
jnp
xchg
and
push
cli
nop
dec
fsub
ljmp
push
or
push
mov
cmpsl
mov
jae
aam
and
mov
sub
ss
into
inc
push
fdivrs
imul
jns
test
pop
mov
sar
in
mov
incb
rorl
imul
enter
sub
ret
inc
push
inc
scas
lahf
mov
sbb
lahf
xchg
aad
or
in
jl
std
aaa
dec
fxch
lock
cs
ficomps
sub
hlt
loope
cs
fistpll
jne
cmp
dec
movsl
add
dec
in
stos
lret
sti
push
addb
push
scas
cmpsb
xchg
ret
ret
cld
pop
rclb
lods
popf
jne
adc
sbb
xchg
dec
pushf
das
roll
call
mov
jg
int3
shrb
fists
movsb
decl
dec
jmp
or
inc
xor
dec
sub
fmul
cmp
imul
in
andl
xchg
mov
lods
sarb
addb
loope
xchg
inc
mov
push
mov
out
arpl
fstpt
out
mov
sahf
ss
mov
icebp
test
xchg
inc
cmpsb
fsqrt
scas
pop
movsl
adc
movsb
mov
pop
filds
xchg
push
adc
jne
addb
fcoml
lcall
dec
imul
jnp
push
xor
pop
jp
pusha
data16
in
repnz
scas
je
cmc
mov
imul
xor
in
in
cmp
lcall
arpl
cmpb
test
jle
adc
or
jmp
xchg
pop
loope
icebp
enter
je
into
xchg
push
and
mov
insb
jp
ret
mov
dec
inc
test
add
cmovnp
jge
lret
sub
sbb
add
mov
loope
xchg
and
or
push
cmc
outsl
enter
cmp
push
ss
out
cltd
and
rolb
pop
cltd
mov
shll
insl
inc
mov
adc
push
push
mov
frstor
lock
lcall
ret
ljmp
mov
push
imul
out
imul
pop
xchg
inc
mov
add
popf
scas
mov
mov
lahf
dec
inc
jp
mov
add
sbb
repz
jne
nop
loopne
cmpl
test
in
cmp
fstps
or
mov
or
aad
xchg
jae
das
and
mov
cmp
cmp
sub
dec
jae
or
cmp
xorb
or
aaa
add
out
pusha
dec
fwait
sbb
jae
in
inc
mov
push
clc
inc
cmovp
mov
sub
mov
rcl
outsb
je
cmc
cmp
cmp
repnz
loopne
mov
cs
push
insl
aam
push
jns
fwait
push
and
out
fdivrl
call
add
dec
cmp
test
mov
jne
out
adc
sub
or
leave
stc
mov
stc
mov
inc
or
mov
loop
inc
lea
add
ljmp
lds
inc
xchg
xchg
inc
ret
rcrb
cmp
xchg
push
fwait
ja
call
es
stos
dec
dec
inc
pop
xor
movsl
clc
addr16
jecxz
pop
push
xor
dec
and
fldcw
out
jmp
xchg
xchg
outsb
inc
loopne
shr
mov
lods
movl
out
mov
pop
fsubs
mov
cwtl
nop
push
fnstsw
les
aam
cmpsl
adc
ret
sbbb
cli
pop
and
pop
ss
push
mov
xor
sbb
icebp
in
pop
aad
or
or
aas
inc
push
adc
idivl
out
jge
mov
clc
arpl
roll
xchg
cli
add
mov
lock
push
pop
fisttpl
push
fbstp
mov
cmpsl
ret
inc
mov
hlt
pusha
mov
ret
push
dec
cmp
or
lods
mov
fmul
pop
mov
mov
jno
lret
jmp
out
jb
cmc
sub
in
arpl
push
jae
mov
mov
fwait
js
negb
jmp
cmp
dec
push
aaa
push
sbb
out
mov
int3
je
pop
imulb
fstps
push
aas
outsb
add
int3
dec
dec
jmp
loop
xor
imul
pop
cmp
rcrb
jmp
fdivs
mov
add
cmpb
xor
fsubrs
lock
cmp
jmp
xchg
mov
cltd
sar
int3
adc
mov
adc
js
gs
out
aam
movhps
jb
dec
lahf
shlb
xor
icebp
clc
loopne
jmp
jnp
jo
test
repz
sbb
mov
adc
mov
jnp
xchg
jnp
mov
jne
xor
sbb
mov
mov
push
mov
add
insb
mov
ss
or
dec
insb
aad
push
push
in
idivl
fmul
pop
mov
add
push
mov
and
pop
mov
pop
mov
mov
popf
inc
ret
cld
fstpl
or
pop
sti
jg
cltd
pushf
pushf
int3
lock
adc
push
lods
call
fmuls
jle
inc
ret
cli
insb
or
dec
bound
add
xchg
add
mov
or
jge
roll
lods
pusha
sysret
mov
lea
enter
push
and
pop
or
imul
mov
inc
in
leave
rorl
gs
pop
adc
mov
je
cmpsl
jnp
loop
test
dec
ficompl
cltd
pop
lahf
leave
add
mov
aas
or
xlat
syscall
mov
enter
mov
fs
sub
dec
ficoms
add
adc
int
jns
jns
push
in
fadds
mov
test
ret
adc
cmpsb
sahf
dec
jbe
fs
ja
mov
and
xor
std
faddl
sub
into
cmp
push
mov
pushf
jecxz
ret
dec
dec
xor
xor
dec
loope
inc
lret
adc
ljmp
imul
pop
mov
add
sahf
pop
fimuls
and
xchg
fimuls
lock
imul
stos
mov
cmpsl
aad
push
aaa
insl
pop
addl
jl
icebp
push
pushf
scas
jge
pusha
loope
mov
pop
cmp
and
xorb
test
ljmp
ds
add
pusha
pop
push
mov
or
jle
je
pop
adc
ja
js
push
test
lret
mov
sub
movsl
ljmp
hlt
aas
xor
ds
xor
fstpt
sub
mov
orl
mov
gs
call
xchg
addr16
dec
ret
stos
test
ret
mov
mov
adcb
ljmp
cs
pop
es
cli
push
and
xchg
into
adc
pop
pop
sarb
sbb
sub
cld
or
inc
lret
jb
movsl
jb
or
notb
js
packssdw
loopne
scas
jb
and
adc
es
fsubrs
mov
cli
and
xor
ds
lock
inc
sbb
and
mov
inc
push
push
sub
sub
jae
dec
xor
iret
mov
psrld
cwtl
das
jmp
adc
adc
mov
sbb
sub
loop
jmp
mov
pop
loopne
mov
cmpsb
fbstp
cltd
pop
dec
mov
fwait
mov
jmp
inc
ja
inc
adc
or
sub
jle
aam
mov
movsb
out
aad
adc
repz
outsl
push
jns
aaa
into
cwtl
inc
fwait
inc
lea
push
mov
sbb
mov
sahf
scas
inc
push
and
incb
add
xchg
mov
pop
es
addl
idivb
pop
fbstp
fs
pop
in
cmp
lds
jle
out
add
test
je
ljmp
rcr
adc
ss
addr16
sub
mov
or
push
mov
mov
testb
dec
mov
addr16
sarl
push
repz
jne
mov
sbb
outsb
pop
std
mov
divb
fwait
dec
aam
lds
fiadds
or
pop
mov
aaa
mov
outsb
in
push
dec
add
inc
mov
pushf
iret
adc
loop
movsb
je
cmp
xor
mov
mov
mov
fs
call
fwait
inc
push
jg
cmp
movsl
mov
cmp
fsubs
repnz
stos
daa
out
and
movsl
in
jg
xchg
movsl
adc
aam
test
ret
shl
mov
insb
nop
fwait
inc
lods
dec
in
mov
jne
fidivs
jg
or
push
das
leave
js
mov
jg
inc
cmpsb
out
or
sti
ja
cmp
repnz
fs
pusha
testl
xchg
pop
pop
sub
nop
scas
loop
xor
xchg
jle
mov
decl
adc
and
push
xor
hlt
add
test
jne
dec
in
test
pop
imul
add
negl
add
repz
dec
movsb
sub
dec
xchg
frstor
test
js
inc
xor
and
mov
dec
xor
mov
fmuls
mov
popa
out
lahf
pop
fbstp
lcall
adc
in
or
jp
dec
jp
cmp
cli
insb
xchg
pop
fisubl
imul
adc
shr
xchg
mov
sti
add
sub
out
cmp
stc
in
xchg
dec
aam
lods
cmp
adc
test
jmpw
add
loop
push
sbb
jmp
inc
push
out
sahf
jb
jg
in
add
jp
push
aaa
mov
dec
xchg
inc
jg
mov
vmovdqa
popa
pop
call
mov
iret
scas
pop
inc
jmp
and
mov
push
mov
insb
adc
test
sahf
cmp
pop
mov
jl
dec
add
imul
pusha
outsb
lret
add
fwait
jle
cmp
push
xchg
fists
pushf
das
add
lock
xor
ja
movsb
dec
aas
vcomiss
jb
inc
push
adc
or
mov
mov
fsubl
adc
add
rorl
nop
jno
lret
push
mov
jb
lahf
hlt
lock
fmuls
mov
out
sbb
test
dec
out
sbb
xchg
xor
aad
vpackssdw
data16
popa
inc
xchg
test
adc
inc
xor
pop
test
inc
push
push
ret
insl
shrb
jno
fnstcw
daa
pop
xchg
loope
shll
push
add
aam
addb
cwtl
lret
inc
insb
mov
sub
lock
mov
sahf
sub
or
shl
inc
shlb
fwait
xlat
add
ret
mov
adc
ret
fists
push
bound
jnp
aaa
mov
mov
pop
test
sti
sub
das
mov
popf
sub
rcll
lahf
cs
dec
test
pop
addr16
jecxz
mov
ror
cwtl
mov
or
and
jns
push
ror
lret
push
ret
sub
cmc
mov
scas
rorl
jmp
adc
ror
insb
sbb
jge
push
cmpsl
aaa
test
pop
data16
nop
add
and
jo
adc
enter
in
andl
jnp
outsb
jae
int3
mov
pop
adc
dec
test
mov
or
insb
or
pop
pop
sahf
sbb
gs
ficoms
clc
add
and
jbe,pt
ja
iret
stos
lahf
pusha
inc
inc
lock
jp
sbb
lds
and
es
aad
dec
xchg
adc
sub
push
xchg
loopne
dec
js
jl
je
out
push
xor
push
and
dec
jle
jmp
push
sub
mov
and
mov
mov
push
cmp
xor
cli
dec
aad
or
sub
insl
adc
leave
push
push
fcoml
imul
imul
and
call
movsl
out
cmc
sarb
lret
ret
adc
cmp
xchg
dec
dec
sub
andl
insl
fbld
ja
mov
xchg
mov
sub
mov
push
notb
and
cli
mov
xor
dec
lret
ja
mov
dec
lahf
cmp
xchg
xor
jg
dec
out
lret
int
ror
jecxz
es
xchg
cltd
daa
and
push
lods
jno
adc
xor
mov
lahf
aaa
inc
adc
push
sbb
pop
xchg
mov
fs
arpl
pop
in
out
dec
cmpsb
int3
cld
pop
data16
push
xor
stos
mov
test
pop
sbb
int
inc
aad
xor
push
imul
jae
or
bound
out
push
push
test
xor
sub
pusha
out
adc
mov
dec
adc
mov
loop
pop
push
mov
sbb
aam
and
mov
xchg
orb
dec
push
push
and
addl
add
mov
pop
shr
shr
jmp
jle
andb
pop
xorl
mov
repz
pop
iret
mov
inc
and
out
and
mov
lock
flds
dec
mov
aas
mov
in
fldcw
ss
dec
jecxz
cwtl
fstps
int
push
sbb
inc
sahf
adc
lcall
adc
adc
pop
sub
xchg
test
scas
sbb
push
ss
inc
and
pop
out
mov
cmpsl
mov
jmp
dec
fs
aad
and
pop
fiaddl
stc
adc
sbb
push
popa
jge
pop
fisttps
out
hlt
ja
adc
dec
popa
es
mov
push
rolb
and
popf
add
add
jno
fs
and
xchg
xor
and
mov
mov
sub
pop
ja
xchg
sbb
mov
mov
mov
or
pop
outsb
push
cmc
cmp
loop
dec
movsl
dec
cmp
cmpsl
cs
lret
fisubrl
sub
sbb
add
mov
cmpsl
push
outsl
nop
ss
pop
movsl
inc
mov
mov
jbe
shlb
int
add
and
push
push
imul
mov
mov
bound
mov
add
xlat
ds
mov
repz
dec
in
shl
inc
xor
jle
pop
sbb
das
aam
mov
cltd
xchg
sbb
jns
mov
cmp
jae
cmp
ret
xchg
xor
push
lret
test
out
popa
push
push
pusha
or
pop
push
cmp
inc
shrl
xchg
jmp
jmp
icebp
popa
lret
jg
add
mov
or
dec
fisttpll
jecxz
in
mov
lcall
mov
enter
xchg
das
xor
mov
ss
stos
mov
das
push
sub
and
push
enter
movsl
pop
mov
jmp
mov
fwait
data16
popf
nop
xchg
sub
decl
jmp
cmp
jo
adc
add
push
lcall
sub
std
xor
sbbl
push
sub
push
das
out
repz
cli
jmp
xor
mov
mov
in
add
mov
sub
fists
aad
or
pop
pop
or
add
sub
lahf
dec
orb
ja
cwtl
jno
test
jecxz
fisttpl
sahf
add
or
cmpsb
addl
out
imul
out
cmpsb
scas
dec
cltd
inc
pop
pop
mov
jo
cmp
lods
add
jo
paddusb
cmp
cmp
sbb
pop
std
adc
adc
test
mov
popa
xchg
pop
sbb
push
mov
jbe
xor
cld
mov
enter
xchg
dec
jmp
out
ds
xchg
mov
lods
mov
push
sahf
xor
cmc
mov
pop
shlb
pop
pushw
xlat
and
jecxz
lods
sub
imul
cmp
cwtl
test
push
inc
sbb
repz
mov
sbb
sarb
je
fcmovnu
add
pushf
rol
cld
fcmovnb
lret
xchg
dec
inc
sub
dec
call
jle
adc
in
xchg
and
mov
scas
call
bound
inc
scas
mov
xor
and
jmp
or
in
mov
popf
icebp
loopne
mov
mov
mov
push
out
popa
subl
sub
je
jge
push
push
xlat
fstl
sub
int3
pop
shld
aam
jae
arpl
movsl
mov
add
stc
mov
shl
clc
popa
test
mov
inc
or
mov
sub
sbb
mov
in
sub
shrb
es
sbb
adc
mov
or
xchg
xor
cmp
or
cmp
xor
lcall
jl
fs
cmp
push
lock
out
mov
xlat
jnp
popa
xchg
adc
rcl
and
cmp
insl
cmc
and
push
sarl
and
pusha
into
ss
jmp
insb
mov
jge
mov
xchg
or
insl
sub
jge
or
outsb
movsl
out
mov
jmp
jg
das
inc
pop
ja
outsb
mov
dec
data16
mov
iret
int3
add
fstps
push
lahf
push
ror
push
pop
clc
pop
mov
xchg
in
inc
xchg
enter
dec
iret
ljmp
lock
sub
jae
cmpsb
test
test
sbb
popf
dec
ja
icebp
pop
ficoml
mov
icebp
push
lret
stos
mov
call
stos
cwtl
test
cmp
pop
push
sbb
inc
sbb
into
fs
lods
fadds
subb
pushf
jmp
es
lock
pop
mov
xchg
bound
pop
cmp
push
lahf
xor
lea
and
inc
adc
xor
fisttpl
adc
enter
jno
add
sahf
mov
stos
pop
mov
out
iret
sub
lock
sti
push
push
dec
filds
dec
mov
inc
push
enter
add
adc
jns
rol
test
cmpl
aad
mov
mov
xchg
cltd
xor
jmp
jg
rcrl
mov
cmc
idiv
scas
popa
icebp
cmp
out
adc
jg
sub
and
add
les
hlt
scas
subl
adc
rcl
outsl
xchg
ja
mov
int3
jae
pop
aas
subb
xor
arpl
decb
dec
popa
mov
push
mov
pop
fs
andb
dec
hlt
mov
outsl
xchg
incb
push
aad
lods
lds
mov
je
inc
fdivl
sub
xor
or
inc
xlat
out
xlat
push
sahf
movsb
xchg
jno
push
int3
outsb
inc
cs
jnp
push
ss
fwait
push
adc
or
xchg
xchg
mov
or
jb
cwtl
into
notl
out
sub
sbb
push
sbb
pusha
sub
inc
subb
cmpl
jmp
xchg
test
and
lcall
mov
aam
ret
jbe
xor
aam
test
mov
cmp
ss
ret
cmp
dec
push
stc
int
xchg
jnp
push
lock
out
jl
inc
cs
ljmp
lret
lods
mov
int
jbe
sub
test
push
testb
dec
hlt
and
stos
push
mov
mov
add
imul
pop
mov
or
jmp
sbb
mov
in
inc
out
mov
loope
jnp
lret
mov
xchg
fidivrl
cmp
sub
cmpsl
sbb
jnp
mov
push
adc
pusha
outsb
mov
xor
pop
add
jns
into
loope
jmp
xor
mov
cmp
dec
aaa
inc
movsl
ljmp
sbb
cmpsb
int
out
loopne
pop
movsl
or
mov
outsl
rcl
jnp
out
cltd
outsb
inc
xchg
sti
adc
les
xor
add
fwait
dec
ja
jge
add
and
jecxz
push
push
pop
xor
pushf
mov
pop
xchg
dec
adc
or
icebp
in
dec
in
lods
jnp
inc
xor
loopne
sub
in
inc
mov
cmp
mov
adc
add
iret
xor
cwtl
inc
mov
pop
jnp
sbb
jbe
dec
outsl
shll
inc
insl
push
sbb
xchg
inc
stos
add
pop
movsb
out
push
jmp
fcom
and
inc
shlb
stos
xchg
icebp
in
loop
push
pop
stos
repz
lods
adc
mov
jg
hlt
ss
mov
test
scas
mov
jno
pop
xor
mov
mov
aas
clc
inc
adc
sub
push
lock
add
pop
stos
pop
adc
push
sub
pop
js
shr
xor
imul
pop
mov
mov
cli
outsb
in
test
pop
loopne
pop
push
or
rcll
xor
out
mov
inc
insb
out
lock
push
mov
sbb
xchg
jl
jno
mull
scas
mov
xor
sti
cmp
cmpsl
jo
cltd
pop
xor
jbe
fiaddl
add
inc
clc
jge
pop
lret
incl
cmp
aam
js
push
dec
into
js
out
sub
test
xchg
lret
mov
mov
push
ret
cmpsl
pop
pop
inc
lea
jns
test
sub
mov
stos
sub
dec
jp
ret
cli
aad
fdivrl
div
mov
daa
mov
out
and
add
push
sahf
repnz
jae
cmpl
pushf
dec
sbb
inc
jo
test
push
idivl
ds
dec
popf
jne
repnz
outsb
xor
adc
xor
mov
ret
mov
sbb
cmp
lods
stc
cmpsl
sub
test
mov
jg
out
es
dec
sarl
into
sbb
inc
xchg
lods
sub
inc
call
mov
mov
mov
sub
pop
aad
push
shlb
mov
mov
inc
dec
pushf
mov
js
leave
mov
jne
inc
xor
addr16
out
data16
mov
int3
dec
sbb
lds
leave
cmp
notb
jmp
fwait
or
pusha
fdivl
add
sti
stc
lods
pop
mov
pop
dec
stos
out
cmp
in
cs
bound
lods
sub
add
shrl
pop
or
jnp
cmp
test
xlat
outsb
push
aam
out
dec
jns
ja
loop
sbb
cmp
aaa
rcl
xchg
sub
mov
call
fsubl
xchg
inc
mov
test
add
sahf
xlat
test
insl
leave
xchg
mov
and
mov
mov
subl
fs
pusha
and
arpl
inc
push
mov
in
dec
arpl
rorl
mov
fists
jb
xor
stc
or
jmp
arpl
sub
inc
jmp
xor
hlt
call
or
pop
sti
into
ffreep
mov
aaa
jmp
inc
outsb
fs
xor
std
xor
xor
hlt
ret
or
sbb
pop
adc
into
lock
mov
push
clc
add
xchg
test
cwtl
iret
psubb
call
cwtl
push
fildl
movsb
mov
stc
cli
cmp
mov
push
pop
inc
in
stc
pop
cld
aam
add
cltd
pop
out
pushf
daa
out
sbb
mov
mov
push
mov
cmp
mov
pop
push
movsl
dec
ret
mov
push
cmp
out
mov
ljmp
jns
cli
xor
mov
push
xor
or
call
push
pop
or
cmp
pop
notl
add
inc
cs
arpl
in
es
xor
dec
xchg
sbb
push
push
fsubrl
pop
mov
sbb
aaa
js
mov
lcall
or
cs
adc
sub
inc
insl
test
push
rolb
mov
push
and
mov
push
into
cmc
mov
dec
inc
xor
out
fs
arpl
lret
cmc
or
lret
or
frstor
xorb
roll
lods
jo
and
mov
addr16
gs
daa
fsin
das
ljmp
or
xchg
mov
shl
pop
mov
out
dec
outsb
push
fimuls
xchg
dec
bound
push
lret
hlt
xlat
aad
rorl
and
sbb
or
push
dec
decb
sbb
shr
push
loopne
pop
dec
bound
in
insl
fs
inc
mov
sub
xor
out
push
and
xchg
repnz
xor
adc
stos
dec
mov
xor
jl
sub
mov
pop
ss
sbbl
ffreep
and
xor
sbb
stos
mov
push
shll
lods
pop
cmp
lahf
jns
sub
insl
cmovb
mov
dec
sbb
fildl
in
rclb
outsb
inc
xchg
add
push
insb
insb
leave
pop
test
dec
or
mov
imul
inc
movsl
fldenv
inc
iret
inc
xchg
les
mov
lods
mov
dec
or
adc
ret
imul
loope
or
dec
lahf
lods
jnp
in
mov
and
mov
in
stos
test
loope
enter
out
sbb
pop
jle
rolb
outsb
or
in
inc
test
push
ds
icebp
sub
inc
xchg
loop
dec
inc
lock
add
sbb
cmp
sub
das
jno
pop
andb
mov
test
out
or
shl
sahf
xor
sti
aam
aad
cmpb
pop
inc
mov
daa
xor
sub
or
cmpsl
mov
jge
xor
test
pop
inc
add
pushf
push
js
aas
lahf
int3
pop
inc
mov
rep
inc
dec
mov
jne
add
loop
xor
ja
fmul
pop
shll
cltd
mov
test
xor
push
adc
movsb
xor
xlat
or
pop
mov
mov
and
inc
out
add
sub
fstpl
out
orl
xchg
mov
xchg
cmpsl
icebp
imul
scas
mov
or
add
mov
mov
or
ret
pop
jge
adc
loop
sahf
mov
mov
stos
dec
mov
jne
dec
cmp
shlb
iret
jne
and
fsubs
xchg
fiaddl
cmpsl
mov
loop
push
add
dec
cmpsb
push
adc
dec
and
jge
xchg
mov
pop
xchg
push
bound
in
inc
pop
cmp
pop
call
insb
xchg
xchg
fsubr
popa
mov
loopne
dec
movsb
test
xchg
movsl
dec
fmuls
rorb
mov
iret
cmp
imul
pop
adc
lret
rolb
mov
mov
dec
push
push
test
scas
ds
ljmp
out
cmpsb
leave
in
rcll
paddb
fwait
cmp
lods
mov
int
mov
jge
xor
test
icebp
call
fmuls
std
or
jmp
mov
cmpsb
cmpsl
and
mov
ds
mov
adc
add
mov
cmp
test
cmpsl
and
push
loope
inc
mov
mov
shrb
mov
inc
pop
fidivrl
clc
jnp
test
dec
sbb
cwtl
dec
mov
adc
jo
adc
push
ds
pop
imul
mov
js
sarl
push
lods
in
xor
das
and
lds
dec
bound
nop
pop
jmp
fwait
jp
xchg
xor
loopne
or
jmp
xchg
orl
dec
fs
or
dec
dec
adc
pop
rcr
cmp
xchg
mov
loope
xchg
sbb
cli
xorl
lds
outsb
adc
cs
and
pop
loop
lods
test
and
jecxz
add
test
xchg
add
mov
shll
cmp
inc
sti
add
inc
push
aaa
pusha
fwait
cmp
mov
sbb
mov
aad
push
das
mov
cltd
sbb
hlt
and
outsl
sbb
xchg
in
sbb
filds
enter
fidivrs
iret
fwait
jecxz
xor
xor
ljmp
mov
shrl
imul
add
enter
fs
fnstsw
mov
dec
mov
add
xor
pop
xchg
pushf
leave
test
sbb
movsl
or
ficoms
imul
nop
pop
push
stos
sbb
call
jge
lret
les
cmp
xchg
mov
jo
xchg
icebp
cmp
inc
imull
fisttpll
repnz
ss
sbb
hlt
sbb
jg
scas
ret
ljmp
xor
int3
xchg
jbe
int
and
gs
pop
insl
add
mov
scas
lret
inc
in
clc
dec
into
push
jnp
frstor
add
shl
xor
int3
mov
mov
inc
cmp
pop
sub
in
ja
pop
mov
sub
push
sub
cmp
mov
sub
add
xchg
pop
push
and
mov
adc
push
pop
sub
sbb
nop
pop
inc
arpl
fcoml
xchg
pushf
jbe
loopne
in
movsb
mov
test
and
push
ret
push
stos
push
pop
lods
out
jmp
lcall
ret
nop
shlb
rclb
pushf
add
js
out
call
sub
add
in
pop
jmp
outsl
fbld
and
pusha
fistpll
xchg
mov
mov
dec
sbbb
inc
sub
push
dec
cmp
dec
lock
mov
inc
rolb
int
or
bnd
dec
jecxz
mov
fstl
lods
inc
cwtl
sbb
xchg
imul
inc
cmp
fs
sub
jo,pn
dec
mov
ljmp
addr16
inc
inc
jo
sub
cmp
stos
push
dec
js
sahf
cmp
notb
xor
fists
adc
xor
fimuls
sbb
mov
dec
fdivs
rorb
and
aaa
js
in
aam
test
cmp
push
js
mov
mov
pop
dec
mov
dec
roll
and
cmp
jno
loop
pop
and
adc
xlat
jecxz
mov
outsb
xor
stc
cmp
cmpsl
add
in
ds
lods
add
pop
xor
pop
pop
mov
xchg
push
xorb
std
popa
or
push
decb
pop
mov
sbb
ss
jno
push
pop
and
fsub
inc
pop
test
in
or
and
and
inc
popl
xchg
dec
popf
dec
out
inc
jmp
mov
pop
loop
mov
les
mov
cmpsb
push
in
aad
roll
mov
mov
out
sub
rolb
loop
ret
test
cmp
or
add
pop
in
xor
cmc
mov
push
repz
push
push
xor
in
sbb
dec
cld
pop
sahf
out
std
enter
testl
scas
icebp
mov
and
or
mov
inc
push
lea
or
or
mov
or
imul
pop
lods
fstps
jge
jle
sub
push
jp
fucomip
xor
adc
fimull
nop
negl
inc
pop
daa
mov
push
mov
subl
cs
jo
jns
mov
xchg
fcom
pop
mov
cltd
inc
movsb
adc
mov
jmp
or
scas
sbb
imull
cmpsl
daa
push
push
icebp
insb
scas
les
xchg
popf
cmp
out
insl
ret
jno
ljmp
cmc
push
sbb
loopne
scas
je
mov
fists
mov
icebp
je
dec
xor
inc
orl
mov
mov
int
cltd
jns
ljmp
inc
ds
pop
mov
ret
pushf
mov
dec
into
mov
sub
sti
aaa
mov
mov
mov
and
imul
xchg
add
je
clc
aad
cmp
out
movl
jmp
out
inc
leave
lods
sbb
pop
hlt
sub
shlb
xchg
aad
fiaddl
and
xchg
cld
sub
inc
sbb
insl
test
cmp
cmp
fwait
lahf
cli
shll
fs
out
cmpb
leave
mov
add
fidivl
ret
mov
pop
xchg
mov
adc
pushf
xchg
push
adc
popa
ja
dec
rorl
iret
clc
sub
in
inc
iret
xor
sbb
outsl
pop
mov
pushf
movsb
fwait
in
fmuls
bound
mov
int
jae
inc
push
dec
lock
ss
jo
mov
mov
adc
adc
or
sahf
imul
gs
adc
push
jecxz
lret
sbb
mov
push
mov
cmp
rorl
imull
jg
lret
cmp
std
jl
loop
push
out
dec
jg
push
push
inc
push
aad
fisubs
ss
sub
sti
mov
cs
jmp
gs
rcll
xchg
or
enter
ret
and
fcmovnbe
lock
inc
or
std
jp
inc
stos
loop
jmp
scas
fidivrl
adc
push
or
jae
enter
dec
pushf
lods
cmc
dec
dec
jne
lret
jae
jnp
stos
jp
scas
ror
mov
xor
lret
fwait
test
dec
dec
jb
mov
cmpsl
lods
test
jl
sub
push
xchg
jecxz
jns
inc
hlt
loop
pop
int
aaa
inc
xchg
pop
mov
push
test
adc
iret
sub
inc
insb
xorb
lock
mov
cmp
cmc
sub
mov
cmp
int
bound
dec
sub
sub
loopne
push
stos
out
or
mov
stos
push
jo
enter
mov
mov
mov
or
pop
inc
popf
roll
and
loop
and
mov
sti
rol
jne
sub
dec
sti
rclb
jge
xlat
dec
push
rcrb
xor
and
pop
push
fsts
out
jge
lds
dec
stos
mov
inc
fldenv
mov
in
xor
pop
pop
dec
push
loop
sub
pop
push
stos
xchg
dec
mov
pop
out
loopne
cmp
inc
fwait
and
pop
mov
mov
divl
cltd
pop
mov
mov
sbb
cmpsl
pop
and
push
cmp
or
xchg
aas
out
shll
dec
adc
lahf
rclb
mov
or
dec
adc
lods
cltd
fisttpll
jle
sbb
pusha
sahf
mov
fldln2
or
cmp
push
sbb
das
fs
ret
inc
xor
and
xchg
lcall
mov
ret
sub
mov
daa
pop
sti
inc
arpl
fistpl
ret
dec
aad
sbb
xlat
lock
lds
ror
push
xor
jbe
addr16
xor
xchg
leave
add
mov
inc
mov
adc
je
push
cmp
lea
lret
fldcw
add
aam
das
push
jno
add
mov
and
sub
push
pop
mov
jbe
sub
jnp
and
cmp
pusha
lret
rcrb
jno
dec
add
pop
fsubrs
lcall
and
jae
popa
aas
mov
xchg
sbb
aad
test
int3
clc
jmp
sbb
scas
mov
shlb
xchg
xchg
ret
cmpsl
int
jecxz
sub
mov
jecxz
ds
stc
pop
xchg
add
cli
fldl2e
outsb
outsl
call
xchg
mov
adc
imul
das
mov
mov
je
scas
cmpsl
jle
stos
ja
mov
ret
mov
push
push
gs
and
xchg
adc
out
mov
or
and
inc
xor
data16
xor
xchg
dec
outsl
push
mov
xchg
or
inc
pushf
mov
add
jecxz
pop
add
lcall
test
incl
xchg
jmp
mov
adc
pop
adc
stos
dec
nop
lret
in
les
loope
shll
jo
cli
shrl
push
push
sahf
loope
jnp
pop
imul
ljmp
mov
stos
jmp
daa
add
test
cmp
push
idiv
outsb
jo
cmp
dec
adc
xchg
and
and
xchg
add
xor
push
cld
inc
push
dec
add
data16
sub
arpl
std
out
cmpsb
xor
pop
imul
jae
pusha
subl
jo
aam
icebp
add
mov
pop
pop
or
sahf
add
adc
repz
mov
jne
lahf
sub
lods
in
inc
arpl
enter
mov
xchg
int3
cmp
adc
jle
ds
call
int
roll
insb
mov
sub
insb
dec
js
ja
test
xlat
add
cmp
test
inc
mov
pop
enter
fsubrs
dec
js
cs
or
popf
movsb
repz
sub
imul
into
sub
adc
mov
inc
lea
jbe
icebp
or
shr
out
mov
push
and
dec
jbe
jno
sti
pop
adc
mov
push
mov
xlat
push
aaa
sti
xchg
mov
les
xchg
addr16
xor
out
icebp
and
iret
insl
pop
jmp
popf
xchg
xchg
sarl
pop
leave
pop
sbb
aad
lret
insl
cmp
or
push
in
jecxz
ret
iret
mov
cmp
lret
or
repnz
mov
adc
imul
mov
imul
adc
out
dec
test
fsub
mov
inc
ljmp
pop
sbb
lea
shll
jmp
jne
mov
adc
cltd
xor
cmpsb
sub
aam
mov
add
inc
aaa
adc
into
in
pop
aas
mov
cmpsb
out
adc
scas
push
push
fmull
imulb
mov
aas
xlat
lahf
sahf
and
dec
insb
icebp
jne
outsb
inc
sub
cmp
mov
idiv
mov
int
mov
xor
adc
ror
repnz
ja
shlb
and
lds
mov
lods
xchg
adc
mov
sub
adc
pusha
das
bnd
or
jl
movsb
test
and
push
cmpb
fmul
clc
repnz
pop
je
and
add
mov
sbb
aad
pop
aas
mov
lods
dec
push
push
stc
scas
xor
xchg
xor
add
popf
call
xor
inc
xor
add
ds
mov
orb
test
lahf
out
push
imul
popa
into
sub
pop
jno
jp
jmp
push
in
ret
or
fnstsw
sahf
xor
mov
mov
sub
fisttpll
xor
jbe
loop
outsl
jp
pop
sub
fldenv
pop
negb
aam
mov
push
and
sbb
movsl
mov
fwait
sbb
dec
and
sbb
add
push
mov
jp
jne
insb
call
sub
pop
negl
or
adc
or
sub
dec
inc
xor
outsb
xchg
push
ficoml
sahf
movsb
pop
sub
mov
enter
out
movsl
ljmp
push
and
nop
pop
dec
lret
iret
das
repnz
inc
and
jno
call
out
lret
xlat
cltd
movsb
rolb
pop
lret
addl
loope
cmp
dec
adc
fidivl
outsl
fucomp
jo
call
scas
fdivrs
xor
push
or
sahf
je
mov
nop
mov
out
aas
push
xor
mov
adc
mov
bound
clc
js
jg
xlat
inc
pop
cs
shlb
sbb
js
and
mov
adc
mov
jo
and
in
or
test
std
les
xchg
ds
rcl
xchg
pop
jae
dec
mov
sbbb
xor
dec
dec
push
subl
lods
nop
mov
push
lret
and
data16
loopne
mov
js
jbe
lcall
jge
fnstsw
jns
ja
mov
pop
pop
clc
outsl
js
sub
bound
xor
sub
pop
jo
or
cmp
inc
jns
fs
push
pop
iret
jb
nop
cmp
pop
jno
shlb
mov
leave
mov
test
flds
xor
ljmp
xchg
push
sbb
lods
cmp
rcrb
lock
hlt
add
stc
xor
cmc
xor
and
mov
popf
and
testb
sub
jne
insl
pop
add
into
jne
cmp
push
xchg
ret
loope
or
and
fadd
push
sti
lods
pop
outsb
loopne
aam
or
or
fdiv
rcrl
or
push
cmc
mov
daa
xor
xor
jmp
notl
add
mov
ds
outsl
or
insb
lret
push
inc
shlb
mov
add
pusha
in
jno
xor
sbb
das
gs
mov
cmp
stos
into
cmp
scas
fiaddl
out
inc
enter
or
sbb
es
pop
es
pop
cmp
js
cmp
sbb
push
imul
adc
in
std
mov
repz
pop
dec
iret
mov
adc
pop
icebp
mov
subb
movl
not
mov
jbe
jb
pop
push
pop
iret
mov
xchg
data16
mov
cmpsl
pop
stos
rcrl
adc
mull
arpl
sbbb
dec
mov
movsl
mov
imul
inc
mov
mov
sbb
daa
fcoms
add
cmpsl
lret
jmp
jnp
jo
sub
mov
setae
sbb
mov
mov
test
in
enter
push
ss
out
adc
xchg
xchg
loop
mov
jb
mov
pushf
mov
dec
push
push
call
in
loopne
push
fcom
dec
inc
add
das
push
lcall
lret
jmp
test
xchg
nop
mov
aad
jbe
sarb
xorl
ss
cltd
icebp
xchg
add
lahf
xchg
test
lods
repnz
arpl
cmp
pop
sbb
fdivrs
inc
into
ds
mov
mov
imul
xchg
pcmpgtb
jl
js
shll
test
and
xchg
cmp
inc
jno
lock
scas
mov
mov
pop
fs
push
les
mov
mov
leave
test
out
pusha
add
xlat
aam
add
push
xchg
pusha
icebp
or
dec
mov
stos
and
lds
push
xchg
xchg
cwtl
fldl
loope
mov
in
mov
jmp
ror
out
add
fwait
ret
outsb
lds
out
ss
mov
loop
ds
dec
adc
je
fisubl
popa
in
mov
nop
arpl
sbb
mov
jae
inc
pop
mov
or
mov
gs
inc
fcmovne
mov
psubw
stos
addr16
jne
std
push
shlb
lock
xchg
xor
js
cs
shlb
dec
pop
pop
dec
jno
lock
push
and
ja
and
mov
cmp
sbb
inc
mov
imul
imul
test
xchg
xor
das
in
sbbl
cmp
dec
jnp
xchg
ret
js
mov
bound
and
lods
sbb
jne
xchg
add
repz
leave
mov
xchg
cmc
adc
iret
js
xor
in
test
mov
roll
adc
jp
fstpl
and
pop
icebp
negb
pop
decb
mov
loop
jg
jl
inc
sti
hlt
shrl
jmp
add
xor
sbb
addr16
test
push
lahf
adc
out
fbstp
or
and
ss
flds
push
inc
dec
popf
loope
mov
mov
add
pop
pusha
or
outsl
js
jmp
xor
mov
dec
push
std
jo
scas
popf
sbb
iret
out
and
loopne
and
out
and
xchg
mov
push
les
sub
addr16
sub
cmpsl
push
inc
inc
cmp
stc
xor
in
idiv
xchg
in
andl
xor
jmp
inc
mov
pop
cwtl
sbb
mov
dec
aam
mov
int
mov
cmp
add
rorl
pop
jnp
and
cltd
sbbl
aas
lahf
pushf
lds
ret
inc
dec
mov
adc
sarl
mov
leave
inc
cmpl
cmp
push
ds
fucom
dec
or
dec
insl
xor
gs
call
pop
dec
ret
adc
lret
push
lock
repz
and
mov
sbb
int3
mov
push
pop
lock
sub
mov
dec
arpl
mov
notb
insl
rcrl
and
enter
les
mov
arpl
jne
popa
cwtl
cmp
or
insb
add
xor
aad
push
xchg
fbstp
adc
adc
mov
pop
dec
outsb
sbb
mov
and
jae
loope
lods
push
fisubrl
mov
mov
pop
je
clc
and
mov
out
mov
cmc
dec
inc
scas
mov
mov
pop
push
ret
jbe
push
add
lcall
pop
jo
aaa
xchg
lods
movsl
push
scas
inc
clc
jecxz
mov
ret
fwait
rcrl
js,pt
jno
nop
add
aas
rcrl
cmpsl
dec
adc
dec
cmp
mov
pop
push
fwait
daa
sahf
mov
push
aas
pop
rcll
mov
jb
pushf
mov
xchg
arpl
test
push
xor
lods
mov
mov
and
lret
movsl
xchg
test
push
push
dec
mov
dec
push
mov
bound
repnz
fisttps
sub
test
lcall
ljmp
pop
sbb
mov
adc
sbb
jg
inc
sbb
mov
cmc
nop
sbb
lock
stc
push
push
mov
into
ds
fcompl
jne
cwtl
jecxz,pt
lret
push
xor
stos
pop
and
jns
cmpl
adc
pop
inc
sbb
inc
xchg
es
aam
mov
cmp
repnz
out
xor
hlt
test
dec
and
repz
cmp
cmp
pop
cmpsl
lret
pop
mov
lods
xor
dec
xchg
loopne
mov
sbb
lcall
gs
cmpsl
mov
sub
push
push
js
jecxz
int3
lret
and
outsl
push
int
shrl
je
jb
dec
mov
cmc
into
sar
pop
adc
enter
push
mov
lods
sbb
js
adc
add
sbb
test
sub
push
lret
fs
mov
jle
push
test
into
mov
or
imul
mov
or
pop
cltd
adcb
arpl
bound
jmp
ss
test
add
test
mov
fldl
sbb
xor
push
stos
cltd
movsl
adc
jae
loopne
icebp
leave
cmpsl
push
lods
push
lcall
sbb
and
and
lret
push
inc
lods
jl
dec
pop
in
cmc
sub
ficompl
xchg
bound
inc
cltd
test
test
xor
loopne
fldl
mov
fs
cmp
enter
add
inc
ja
imul
cltd
lcall
or
mov
pop
jp
daa
mov
out
push
push
xchg
aad
daa
dec
sub
push
stos
repnz
dec
jno
jo
lret
stos
rcrb
dec
cmp
flds
fs
imul
ja
in
dec
sbb
movsl
sub
cltd
inc
mov
pop
loope
in
jle
out
jmp
sub
roll
pop
pop
or
mov
les
scas
pop
add
add
ljmp
jnp
aas
xchg
hlt
add
and
xchg
enter
xchg
mov
mov
in
mov
adc
cmp
je
mov
stos
scas
mov
outsb
enter
push
jmp
xchg
lods
sbb
mov
leave
daa
bound
sbb
dec
mov
sub
jp
mov
arpl
es
pusha
push
gs
and
pop
into
test
and
lret
imul
adc
pop
pop
push
sub
cmpsl
sbb
xor
or
or
nop
jne
clc
jmp
sbb
les
rorb
ljmp
mov
clc
sub
xchg
lock
dec
inc
rol
cs
repnz
cmp
push
add
mov
stos
or
scas
shll
mov
or
ficoml
pushw
repz
dec
outsb
ret
fsubs
pop
ja
sahf
hlt
popa
jmp
addr16
mov
divb
sti
jl
cmc
in
loopne
arpl
shrb
ss
and
xlat
cmp
jne
inc
arpl
adc
notb
inc
in
notl
sub
push
push
cs
les
pop
fs
jge
movsl
outsl
push
jnp
inc
dec
push
data16
pop
flds
pop
mov
xchg
jb
jb
rorb
xchg
push
loop
fdivs
sbb
xor
mov
dec
sbb
addr16
neg
xchg
add
and
in
jmp
pop
std
xor
ret
jne
stc
mull
fimull
push
cmp
mov
aas
in
jne
js
xor
add
dec
mulb
dec
arpl
xorb
adc
mov
outsl
fldcw
ja
lcall
xor
icebp
data16
in
push
mov
xor
jecxz
pop
out
sub
loope
xor
dec
sub
aaa
sbb
dec
js
mov
loop
sbb
mov
sub
in
fcomps
cmp
push
sub
sbb
scas
out
pop
cmp
cld
add
fs
mov
bound
xchg
and
sub
jg
sbb
sbb
sbb
adc
and
stos
pop
std
int
dec
and
sub
shll
cs
nop
ljmp
inc
hlt
sbb
mov
jg
adc
insl
subl
std
sti
out
je
lcall
in
fucom
inc
xchg
rcll
lret
xor
stos
imul
sahf
jne
sbb
fdivs
cmpsl
gs
jle
push
daa
xor
mov
mov
xlat
push
or
ficoml
roll
inc
test
push
in
std
add
sbb
push
dec
lret
mov
add
pop
out
push
pop
mov
pop
cwtl
dec
cli
leave
dec
dec
or
mov
jne
sub
xor
js
and
and
jecxz
inc
cmp
scas
inc
xchg
js
pop
jne
clc
mov
testb
out
and
inc
repnz
insl
popl
mov
or
or
mov
int
mov
pushf
lock
push
notl
stc
xchg
add
ss
into
jp
notl
mov
xchg
xor
jg
je
or
repnz
int3
xor
enter
iret
ficompl
jmp
dec
xlat
sub
test
pop
add
mov
or
xor
pushf
insl
pop
push
pop
mov
xchg
das
insl
aas
mov
adc
jno
jmp
cmp
ja
mov
inc
xor
or
mov
adc
push
dec
pop
or
or
insb
sub
dec
pop
mov
mov
push
lret
fdivl
sub
mov
fnstcw
xchg
sar
mov
lods
jecxz
push
sarb
mov
xchg
xchg
or
mov
aaa
cltd
sub
sub
out
jg
jg,pt
and
ret
ja
out
cmpsl
into
into
jmp
cli
repz
jecxz
mov
rcl
push
mov
jl
out
movsl
jno
incb
and
inc
icebp
aaa
outsb
fsubl
pop
mov
psadbw
divb
lods
jp
pop
jno
setns
push
sbb
imul
sub
push
cmp
loopne
roll
jecxz
adc
sub
ja
fs
outsl
adc
fisubs
les
roll
repz
xchg
xor
cwtl
rolb
sbb
mov
mov
test
shrl
add
ja
sub
or
or
enter
xor
test
push
insl
les
mov
cmp
andb
in
lods
insb
notl
test
dec
sbb
sbb
idiv
sbb
mov
popf
fdivr
in
mov
insl
sub
dec
inc
add
mov
stos
cld
cs
push
outsl
mov
sbb
lret
cmp
je
fisubs
pop
cmp
movsl
mov
je
mov
mov
fs
xchg
add
ds
cld
es
test
pop
lcall
lods
inc
pop
pop
mov
mov
cld
cmp
dec
jb
add
dec
lods
fdivrl
sbb
cmp
mov
push
pop
gs
and
cwtl
out
sahf
xchg
sbb
and
push
or
jg
imul
ss
ja
mov
or
and
fwait
dec
pop
inc
aaa
test
mov
dec
stos
and
push
in
fmul
xor
addr16
sbb
dec
fistl
mov
inc
xchg
lahf
jle
cmp
mov
push
shll
lea
int
ret
cli
sbb
pop
stos
jns
cmc
retw
xchg
mov
stc
outsl
cmpb
mov
sti
adc
cmp
lods
mov
and
mov
test
pop
or
sahf
fs
dec
ljmp
dec
jp
enter
rcl
nop
lock
push
lds
sarl
pop
call
mov
sbb
mov
mov
fdivr
jge
jge
dec
in
mov
pop
gs
int
or
in
mov
xor
sub
push
lahf
shrb
mov
xlat
and
xchg
mov
push
enter
out
out
loop
repz
sti
push
arpl
jbe
xor
push
sti
test
add
mov
dec
pop
aad
out
dec
jnp
gs
fadds
dec
pcmpeqd
sbb
subl
pop
in
sarb
xlat
clc
fsts
xor
test
andb
dec
in
jecxz
sbb
add
jmp
xchg
popf
js
inc
jns
pop
lock
adc
movsb
sub
ljmp
mov
jnp
push
cmpsb
push
push
leave
mov
xor
sbb
jg
aam
inc
fldt
sub
leave
and
sbb
cmp
jge
aas
nop
sbb
fucom
test
js
cmpsl
cmp
mov
mov
push
jge
mov
daa
cmp
mov
inc
enter
inc
aad
inc
filds
bound
notb
jne
scas
fsubrs
mov
into
icebp
sub
sbb
jg
lcall
mov
mov
and
mov
or
dec
and
pop
adc
push
subb
out
jo
sub
les
les
push
sbb
inc
repz
add
sbb
mov
push
mov
into
ljmp
callw
fdivrp
adc
sub
xor
in
mov
in
dec
jnp
les
push
fwait
sbb
xchg
adc
bound
mov
sub
and
stc
inc
or
sbb
mov
and
push
mov
lods
inc
int3
sub
add
stc
mov
sti
out
cmp
or
in
lret
mov
es
inc
adc
aam
loopne
pop
lods
push
jbe
xchg
mov
cmp
adc
push
jge
pop
sub
lock
int
add
mov
mov
sub
cmp
sbb
outsl
sub
lds
pop
xlat
fadds
daa
mov
and
cmp
dec
mov
and
nop
inc
xchg
jmp
cmp
jge
add
shr
xor
sbb
adc
xor
lcall
push
out
hlt
add
or
test
lock
inc
mov
fwait
movsl
sbb
add
sub
xor
hlt
pop
mov
das
cwtl
int3
pop
inc
xlat
dec
lret
popf
add
ror
cs
les
ljmp
ds
push
out
cltd
jnp
xor
fdivs
sbb
mov
mov
add
pop
xchg
inc
dec
insl
or
sbb
mov
and
js
test
out
outsl
add
iret
adc
push
adc
xchg
ds
jo
pop
sbb
notl
fcomps
inc
js
daa
and
cmc
xlat
fisttpl
inc
adc
mov
inc
add
pop
add
aam
incl
fbstp
jge
xlat
pop
jo
aam
daa
cmp
xchg
popf
popf
add
aam
and
lcall
cmp
nop
mov
push
pop
cmc
aas
loope
inc
cwtl
fstpl
mov
in
dec
mov
xor
adc
aas
jns
ficomps
adc
imul
sbb
mov
mov
add
cmp
xorl
push
cmp
in
push
and
out
pop
in
rcrb
lret
rep
xchg
add
dec
lds
and
fs
incb
arpl
rorb
mov
inc
cmp
cmp
lods
in
test
and
push
pop
scas
ret
fists
lret
pop
cmp
inc
and
aam
push
xor
test
cmc
out
push
loopne
push
insb
jb
das
xchg
sub
pop
nop
fucomi
fnstcw
lods
repnz
pop
cmpb
aaa
lea
add
stos
pop
cwtl
ja
inc
sahf
xchg
sub
pusha
scas
jbe
loope
xor
sbb
mov
enter
mov
movsb
mov
push
fucomp
int
lcall
or
mov
andl
pop
int3
xchg
mov
pop
jl
dec
cmpsb
mov
mov
jp
and
add
dec
fmuls
or
inc
lds
cmp
fwait
add
lret
add
mov
sub
loopne
cld
mov
cs
aaa
fldenv
sbb
xor
icebp
jge
outsl
repnz
loopne
stos
popa
jg
jb
mov
jl
sbb
jge
out
in
test
ret
xchg
mov
aad
mov
int3
sbb
adc
or
ss
ret
cwtl
out
cmp
mov
lret
dec
sub
and
lret
out
mov
stos
leave
or
fadds
cs
std
aas
xchg
js
xchg
xchg
ror
jae
aam
mov
filds
das
je
arpl
sti
or
mov
dec
pop
flds
arpl
mov
pop
nop
inc
scas
cmpsb
add
mov
pushf
dec
ret
inc
sbb
in
in
dec
xchg
lods
sbb
push
jbe
repnz
adc
shrb
inc
mov
nop
loop
fldl2e
pop
fistpll
test
xchg
repz
mov
popf
xchg
icebp
jl
adc
fs
into
loope
dec
push
cmpsb
push
ret
stc
mov
xchg
mov
and
xor
push
mov
loop
pop
jge
sbb
pusha
push
das
repz
mov
sti
popa
mov
cmp
arpl
ljmp
add
mov
mov
push
dec
mov
cs
adc
das
mov
adc
mov
dec
xor
in
mov
dec
pop
xor
push
push
repnz
mov
cmovle
ja
cmp
jno
je
mov
scas
int3
push
int
or
sub
movsb
imul
scas
jbe
fcomip
push
jecxz
sbb
or
add
sbb
je
insb
mov
xchg
outsl
int3
cmpb
cs
sti
jne
mov
mov
aaa
pop
test
xor
sub
push
mov
jb
fnstenv
xor
dec
dec
shlb
sarl
daa
in
orb
mov
push
cmc
testb
cmp
in
xor
mov
dec
test
sahf
add
pop
jno
push
sub
cmpsb
loop
add
and
push
pop
daa
les
std
rcrl
push
outsl
or
mov
inc
clc
xor
pop
xchg
movsl
pop
xchg
cmp
jle
sub
stc
pushf
xchg
lret
in
jle
and
cmpsl
mov
mov
sarb
sub
mov
lods
inc
sbb
sbb
push
shl
mov
add
pop
ljmp
adc
push
jle
orl
jo
and
out
mov
push
ds
adc
outsb
cli
pop
adc
cltd
xchg
mov
aaa
popl
add
cmpsb
ret
push
les
movsb
popf
mov
xor
mov
in
xor
inc
mov
lcall
addb
and
jb
and
dec
cwtl
iret
daa
jmp
or
sarl
jae
xorl
xor
je
inc
subl
sbb
push
mov
sbb
push
repz
imul
add
jge
out
ret
cmp
cltd
daa
xchg
out
or
jae
sub
ss
pop
push
fdivrs
jg
xchg
cmp
aad
repnz
jmp
cmp
jle
push
fs
adc
popa
push
adc
hlt
pushf
jge
push
cs
notl
push
scas
pusha
mov
sbb
orb
xchg
icebp
insl
repz
inc
sbb
cmpsl
test
inc
cmp
push
sti
ja
out
int
es
pop
xor
notl
adcl
es
outsl
push
imul
js
mov
jns
in
stc
in
popa
xchg
imul
daa
push
fcomi
loope
mov
jo
jnp
mov
lcall
lock
jns
loop
inc
adc
adc
int3
in
pop
jg
sbb
xchg
cmp
rol
fistps
adc
mov
dec
shlb
incl
mov
testl
ss
cmpsb
xchg
shl
mov
push
dec
out
xchg
movsb
adc
shlb
imull
sbb
pop
test
in
repnz
imull
xor
xchg
out
mov
outsb
fs
pop
sub
mov
in
jge
jno
stos
fstpl
in
dec
jns
jns
xchg
jecxz
std
sbb
xchg
jl
leave
popf
sbb
fadds
in
mov
and
xchg
and
dec
cmp
pop
mov
ja
add
push
add
gs
ljmp
mov
or
rolb
fstps
cmp
push
test
mov
popf
jo
shrl
mov
hlt
mov
daa
cmp
sahf
xor
adc
inc
mov
insb
iret
fwait
bndstx
decl
xchg
test
pop
xor
mov
fucomip
into
dec
push
and
push
das
shlb
xchg
dec
and
les
sar
cmp
inc
push
fisubl
jle
add
sar
push
jl
dec
xor
mov
lcall
addr16
xchg
inc
lods
dec
or
idivl
mov
loopne
xchg
inc
subl
xchg
mov
cmp
cli
xchg
inc
repnz
mov
punpckhwd
mov
cmp
fadds
out
lahf
shrl
push
outsl
in
mov
stos
push
hlt
bound
je
leave
es
dec
jo
mov
mov
int
es
dec
jg
in
addb
fiaddl
inc
add
adc
pusha
pop
fwait
sbb
xlat
cmp
cmpsl
add
mov
scas
xchg
mov
and
lock
mov
sub
pusha
adc
or
pop
fsubl
jne
sbb
pop
int
jns
pop
or
stos
adc
sar
insb
or
aad
imul
jle
xor
aaa
clc
sbb
sahf
push
imul
mov
cmpsl
adc
mov
bound
lret
cli
sub
shrb
xchg
mov
lcall
inc
xor
dec
mov
and
lods
push
sahf
jns
add
fistps
and
js
div
ljmp
ljmp
ljmp
ljmp
mov
cli
mov
ja
aas
dec
jnp
or
test
mov
inc
loope
nop
jb
cltd
out
sti
ss
pop
rorl
sub
sub
pop
cmp
pop
sbb
in
lcall
stc
mov
sbbl
adc
or
adc
sbb
mov
adc
sub
dec
cltd
out
jo
je
ds
pop
ljmp
mov
xchg
mov
rdmsr
mov
jecxz
add
dec
jmp
sbb
pop
mov
xchg
pop
sahf
lds
pushf
mov
cmp
daa
add
movsl
mov
dec
call
pop
and
icebp
fdiv
jp
mov
into
adc
jle
aam
sahf
les
in
mov
pusha
arpl
dec
push
pop
pop
std
mov
data16
mov
ss
repnz
cmc
add
ja
lods
push
push
lods
shlb
xor
call
stc
xchg
xor
push
jne
rcl
icebp
imul
jb
ds
mov
xchg
cmp
imul
pop
lcall
test
hlt
push
xchg
rcll
iret
in
push
adc
or
jge
mov
push
mov
xchg
xchg
mov
mov
stos
sbbl
sbb
inc
insb
adc
xchg
int3
sub
ja
dec
add
pop
loopne
pop
mov
adc
test
xchg
jecxz
jns
shll
pop
std
fdivs
cmp
cmp
jns
cwtl
and
test
inc
imul
rcrl
cmp
movsl
js
and
in
mov
add
icebp
cli
shlb
pop
out
and
push
push
cwtl
ret
or
push
nop
mov
rorl
das
testl
imul
push
fwait
rorl
shl
andb
push
icebp
popa
jp
xchg
imul
push
es
jp
lret
mov
lahf
mov
jge
mov
xor
cmp
cmc
or
cmpsb
insl
dec
repz
and
mov
cmp
cld
nop
sbb
fldenv
mov
push
mov
outsl
dec
add
out
fdivp
out
jecxz
and
xchg
sarl
fadd
inc
add
inc
repz
jnp
mov
pop
sub
dec
call
sub
cmp
mov
sub
fnstsw
nop
in
adc
stos
push
pop
inc
aam
aad
ja
fcomp
inc
clc
cs
inc
xchg
xchg
adc
pop
outsb
mov
cmpsl
ds
aad
mov
dec
and
sbbb
pop
mov
das
ss
mov
mov
xchg
pop
dec
jne
or
or
filds
repz
push
adc
cli
jge
test
arpl
pop
out
and
hlt
negb
mov
loope
in
mov
repz
ds
push
jp
mov
aam
jne
icebp
std
mov
sub
idiv
dec
mov
pop
xchg
sub
dec
push
cmpsb
dec
stos
push
mov
scas
mov
pop
cmpb
cmp
cmc
testb
cmpsb
pop
or
jnp
xchg
xor
inc
sarl
push
pop
movsb
adc
cmp
sti
mov
insb
pop
repz
dec
pop
sbb
mov
ljmp
pop
addr16
pop
out
pop
insl
lret
jae
psubusb
fisttps
or
call
arpl
dec
aas
jp
pop
sub
std
cmpsl
mov
dec
into
inc
es
pop
test
jns
add
mov
adc
cmp
loop
mov
es
in
mov
movsl
cli
xchg
setle
leave
xchg
and
lock
inc
xchg
dec
fistps
aas
sahf
scas
fwait
outsl
daa
or
pop
fmul
xor
and
popa
add
add
mov
in
repz
mov
xor
mov
cmpsb
in
dec
ret
jns
mov
mov
jl
lds
mov
xor
lahf
jae
ljmp
into
push
out
imul
xchg
cmp
pop
loopne
cltd
arpl
adc
and
push
jo
sbb
mull
stos
loope
es
and
or
mov
movsl
sub
dec
pop
cs
mulb
add
push
mov
adc
les
stos
fdivrs
jecxz
mov
cmpl
andb
add
xchg
test
notl
inc
jg
inc
movb
lods
ret
xor
mov
xchg
and
fwait
mov
js
jmp
js
jne
adc
ret
xchg
mov
jno
cld
and
mov
imul
xchg
in
movsl
pop
push
lret
fwait
sub
gs
mov
enter
pop
inc
mov
stc
and
packuswb
adc
incb
insl
adc
call
lds
pop
mov
inc
bound
mov
add
rclb
and
mov
sub
nop
mov
out
sub
mov
mov
in
ja
in
out
inc
pop
or
popf
sub
in
lahf
stos
mov
sub
xchg
enter
jnp
or
sub
sub
xchg
cwtl
mov
icebp
aam
daa
and
sub
mov
test
fbld
fwait
jo
mov
cs
test
les
sub
xchg
cmp
imul
dec
and
adc
repz
cmpb
jns
test
rcll
and
test
fistpll
aam
adc
and
lahf
or
mov
jnp
ja
ret
pusha
or
xor
mov
int
es
cmc
xchg
xor
dec
mov
xor
aam
ljmp
loop
out
lock
push
dec
pop
lock
rolb
and
pop
cs
ss
push
lret
sub
ret
or
das
scas
xchg
jecxz
mov
cld
inc
adc
adc
mov
sub
outsl
ljmp
jb
add
pop
dec
and
cmpsl
pusha
mov
dec
mov
es
mov
sub
and
pop
add
cmp
addr16
pop
scas
push
add
cltd
sbb
mov
mov
mov
mov
mov
std
dec
mov
jmp
out
mov
xchg
stc
jno
repnz
xchg
aad
xlat
cs
bound
aam
fwait
enter
sahf
repnz
dec
aad
pop
fwait
pushl
push
inc
movsb
test
add
push
cwtl
das
leave
xchg
pusha
inc
cmp
inc
pop
sbb
and
scas
aad
pop
das
in
sbb
mov
sub
daa
cwtl
ss
xor
push
mov
push
shll
rol
andb
cli
add
jae
aam
loopne
fmull
fistpll
out
and
xlat
mov
and
ret
push
icebp
add
pop
or
outsb
mov
inc
rcll
mov
dec
inc
push
jns
inc
shrb
mov
mov
cmpsl
sub
aaa
and
pop
out
lds
sub
xlat
xor
jae
pop
iret
andb
sub
test
sbb
in
xor
dec
push
fisttps
cmc
pop
fmuls
inc
and
pop
lcall
pushf
cmpsb
insb
xchg
imul
mov
imul
cmpsl
mov
adc
xchg
mov
xchg
outsl
jecxz
mov
ds
and
sbb
movsl
in
inc
xor
roll
shlb
fninit
test
adc
cld
xchg
sub
mov
loop
push
lea
aam
adc
jno
lods
popf
sbb
cmp
sbb
repnz
loopne
insb
jbe
mov
leave
fs
xchg
mov
or
int3
call
wbinvd
fisubs
es
insl
je
je
and
push
pop
mov
mov
pop
push
push
stc
je
or
dec
lcall
cltd
add
dec
push
xlat
je
das
test
adc
out
add
dec
pop
orb
sbb
test
rolb
sbb
mov
mov
insl
cs
mov
and
xchg
sti
pusha
push
pop
and
adc
arpl
mov
push
rcr
jne
dec
or
outsl
jns
fisttps
mov
movsb
jmp
stc
pop
dec
and
and
and
test
sbb
push
and
xchg
rorl
xorl
xor
mov
mov
es
imul
aaa
fmul
or
sbb
pop
jo
test
adc
pop
rolb
or
es
sbb
sahf
push
mov
xchg
dec
test
or
push
add
rorb
imul
dec
xor
fwait
test
add
nop
mov
and
test
add
dec
ljmp
ss
cmp
push
push
xchg
jne
cmp
imul
mov
and
mov
fidivs
aad
orl
sbb
jne
pushf
xchg
notl
rolb
mov
dec
adc
jnp
pop
inc
add
testl
or
mov
dec
mov
in
sbb
hlt
jb
push
fisttpl
add
mov
sub
aad
sbbb
sbb
sub
adcl
jl
push
nop
test
jg
add
push
rcll
test
fwait
pop
mov
mov
mov
add
out
lahf
pop
mov
lret
mov
jp
ret
add
and
push
cmp
movsb
xchg
jmp
add
sarb
mov
adc
inc
sub
push
or
pop
sbb
sbbb
scas
and
stos
stos
xlat
stos
pusha
xchg
sbb
into
adc
pop
int3
popa
pop
pop
mov
loop
arpl
dec
pop
mov
mov
lods
arpl
dec
icebp
or
lret
inc
lahf
mov
rcr
std
push
adcb
pop
jno
scas
hlt
fcmovb
push
cmp
enter
aaa
sbb
out
xchg
push
xlat
aad
jbe
fwait
mov
inc
pushf
add
ret
lock
sbb
jge
nop
mov
pop
lods
lahf
mov
sbb
addr16
push
sbb
pop
mov
enter
clc
js
jg
mov
fidivrs
subl
xchg
lds
or
dec
inc
or
imul
repnz
inc
popa
lahf
sbb
cmp
mull
dec
sbb
lock
stos
push
shr
jl
or
movsb
push
jbe
adc
leave
fnstsw
ljmp
imul
incl
lret
push
mov
jge
mov
fcoms
xchg
mov
hlt
sbb
mov
pusha
cmp
jmp
enter
jg
and
push
cmpsl
cli
add
jecxz
scas
lret
mov
or
xor
loop
pushf
cmp
mov
push
dec
push
xchg
mov
xchg
sti
fldt
out
mov
fs
sbb
pop
push
add
add
loop
cmpsl
lret
imul
nop
das
mov
and
repz
ret
or
mulb
dec
subl
repz
insb
test
fwait
sub
jmp
fistps
inc
nop
sbb
sbb
mov
cmc
mov
sub
imul
mov
movsb
in
cmp
dec
push
cmpsb
and
jo
mov
loopne
int
addr16
jp
push
pop
cmp
es
fbld
mov
fs
das
fdivl
push
pusha
cwtl
arpl
fistl
mov
fistps
lcall
out
and
jne
cmp
cwtl
repz
mov
pop
adc
rcrl
mov
scas
adc
mov
test
data16
stc
xchg
mov
mov
gs
ds
cmp
lds
cmp
sbb
xchg
lahf
jg
jp
lret
fcmovnb
in
jecxz
stos
push
push
arpl
inc
jae
clc
call
pop
and
lods
ss
cmp
inc
jae
lret
jl
adc
fs
mov
sub
pop
xor
lea
pop
add
imul
push
aaa
push
sub
icebp
rcrb
scas
xchg
lods
fwait
test
fisubl
jl
fsubrl
pop
mov
cmc
sbb
imul
outsl
xor
cld
or
adc
cmc
pushf
lods
rolb
sarl
lahf
xorb
inc
jecxz
inc
aam
sbb
imul
xchg
outsb
out
pop
fs
pop
loopne
push
add
sub
add
rclb
fwait
jnp
add
je
xchg
fdiv
push
in
dec
adc
cmp
rclb
fadds
push
mov
out
mov
sub
daa
pop
fists
mov
out
inc
push
push
and
mov
push
push
aaa
mov
mov
cltd
int3
cmc
or
popf
loop
push
call
arpl
pop
adc
inc
jle
movsl
add
mov
push
cmp
inc
inc
insl
inc
inc
loopne
mov
subl
mov
mov
mov
mov
mov
add
and
inc
push
fidivrs
sbb
ja
adc
and
ret
and
dec
call
adc
mov
mov
mov
rcrb
push
xor
imul
pusha
aaa
pop
inc
fildll
outsb
loopne
or
add
outsl
into
imul
cmpsl
fidivl
sbb
jo
test
mov
popf
mov
pop
xchg
push
jp
adc
mov
cmp
cmp
movsl
lcall
fs
clc
shlb
xchg
je
xor
fstl
sub
test
and
jg
xor
sbb
mov
jbe
adc
lret
pop
push
aas
pop
xchg
or
mov
cs
fs
mov
cld
repz
push
add
add
push
inc
sbb
add
or
test
sbb
xchg
repz
sub
push
push
clc
pop
mov
loopne
xor
pop
xchg
xchg
sub
or
sub
sub
push
sbb
jb
mov
sub
fnstcw
jae
in
ss
pop
call
xlat
mov
mov
adcl
push
fsubrs
inc
cmp
pop
pop
mov
and
or
xchg
or
cmp
lret
add
icebp
jno
popa
push
xchg
xchg
mov
jl
ljmp
pop
adc
push
add
int3
sbb
jne
idivl
add
iret
stc
ja
nop
hlt
sub
sub
or
xchg
xor
in
or
jle
or
sbb
push
rclb
ljmp
icebp
lahf
sub
shlb
pushf
arpl
or
pop
sbb
cmp
pop
pushf
jge
popf
dec
push
out
cld
jns
add
stos
insb
xor
xchg
pop
sahf
adc
inc
xor
pop
sbb
cmpsb
lock
mov
cmp
add
push
sub
popf
mov
stos
cmpsl
mov
cmp
aam
cmpsb
jb
ljmp
or
sbb
popf
add
pop
pop
sbb
pop
mov
ss
sub
adc
and
ss
cmp
jns
xchg
xor
and
popf
test
lret
sbb
add
mov
iret
fmull
cmc
lahf
mov
in
or
sub
jb
test
int
mov
stos
or
push
fsubr
scas
sbb
mov
push
adc
pop
loop
repz
add
clc
or
dec
aas
push
mov
jb
aam
enter
out
lods
cwtl
push
cld
push
or
inc
adc
jns
into
leave
stc
mov
pop
or
fdiv
js
sub
ss
lea
cmpsl
pop
fisubs
push
push
daa
ljmp
push
insb
and
jne
adc
inc
dec
mov
push
xchg
xchg
daa
adc
int
cmp
sbb
ljmp
or
mov
mov
cmc
mov
add
pop
pop
adc
insb
fwait
dec
and
inc
jns
das
test
mov
push
ret
out
mov
sbb
inc
mov
aas
mov
clc
dec
mov
stos
xor
mov
push
insl
dec
lret
xor
mov
ljmp
out
add
or
fsub
sbb
push
mov
mov
pop
je
ja
loopne
push
inc
or
mov
test
sbb
jle
jle
sbb
cmp
and
cltd
out
scas
pop
test
mov
int3
in
and
int
mov
mov
or
fisubrl
mov
aad
cmp
insb
inc
daa
je
inc
adc
cwtl
ljmp
push
xchg
push
fdivl
add
cli
xor
add
lcall
mov
test
imulb
and
xchg
mov
out
pop
inc
push
shrl
push
and
pop
dec
xchg
jne
pop
stos
insb
adc
ljmp
mov
xor
cmc
push
negb
cmp
xchg
and
xlat
mov
ret
push
dec
mov
sahf
mov
sbb
adc
stos
jp
inc
out
or
dec
scas
pop
sahf
clc
outsb
imul
outsl
sti
dec
pop
adc
push
and
push
mov
and
lahf
movsb
in
sbb
sbbl
out
gs
daa
clc
add
mov
movsb
ljmp
mov
pop
dec
cmp
xchg
sub
cmp
xor
aas
sarb
popf
inc
out
sub
sub
cltd
jle
jne
insb
push
loope
xchg
aad
cmp
jle
js
ret
xchg
mov
or
nop
mov
sti
and
iret
dec
mov
cmpsl
pop
wbinvd
push
pop
dec
test
ficomps
pop
aas
test
scas
ljmp
pop
dec
rcll
pusha
xor
inc
mov
jae
dec
push
dec
rorb
loop
dec
mov
pop
fldt
sub
scas
mov
cmc
movsb
gs
push
fldenv
std
push
in
idivb
cwtl
push
xor
cmp
jl
fcompl
add
clc
orl
pusha
rorb
cmp
hlt
xor
rorl
in
mov
mov
lret
enter
outsb
xchg
idivb
xlat
inc
push
cmp
add
jg
ret
jmp
adc
xor
in
xor
je
pop
jnp
movsb
or
jo
add
pop
xor
jnp
in
jp
adc
hlt
mov
ss
nop
xlat
shrl
sti
jnp
pop
adc
inc
clc
ja
xorl
aad
adc
xchg
pinsrw
jae
jle
fcoms
mov
or
je
bound
mov
outsl
shrl
imul
ret
mov
cmp
add
hlt
xor
sub
jg
or
mov
mov
imulb
iret
mov
mov
repz
dec
fs
cltd
jns
pop
roll
inc
mov
dec
ljmp
dec
aaa
dec
cmp
cmp
int
and
sbb
cld
xlat
shlb
loope
mov
stos
cmp
inc
pop
mov
and
into
arpl
lea
jo
scas
adc
sub
mov
mov
ss
push
jmp
ficomps
pop
daa
cltd
add
icebp
mov
cmc
jl
test
xor
push
mov
scas
mov
out
mov
mov
sub
lret
dec
mov
loopne
jmp
insl
push
pop
push
loop
ret
push
push
xchg
cwtl
adc
xor
inc
shll
inc
dec
les
out
adc
mov
imul
call
int
adc
mov
inc
fucom
xor
mov
add
aaa
test
lods
test
movb
je
mov
repnz
ret
cmp
scas
mov
std
in
rclb
push
push
testl
dec
xorl
add
and
and
sub
sub
xor
pop
inc
mov
xor
sub
fwait
sbb
cmp
mov
imul
mov
xorl
arpl
push
mov
cmp
inc
sub
jecxz
clc
inc
xchg
and
notb
repnz
cmpsb
inc
pop
push
mov
xchg
pushf
add
cmp
mov
dec
or
mov
push
mov
mov
dec
sub
push
jmp
mov
aas
xchg
cmpsl
push
dec
add
outsb
data16
push
mov
lcall
pop
dec
outsl
jae
sahf
adc
ljmp
adc
fucomi
flds
cmp
cmc
adc
cmp
mov
addr16
mov
das
loop
pop
pop
sbb
cltd
cmp
and
les
inc
inc
inc
pusha
addb
pop
add
mov
inc
mov
inc
movsb
jg
adc
lret
and
or
fwait
xor
enter
adc
jns
addb
insb
adc
das
xchg
or
sti
outsb
and
jae
mov
pop
stos
pcmpeqb
loop
mov
or
push
aad
scas
ds
xor
lret
jbe
push
mov
addr16
mov
xchg
outsb
faddp
enter
stos
loopne
adc
inc
sub
std
dec
adc
adc
mov
aam
enter
mov
les
adc
dec
sbb
cmp
sbb
mov
lret
pop
xor
sahf
mull
mov
mov
cld
inc
gs
and
clc
fdivl
dec
cld
pop
add
nop
xchg
roll
movsb
unpckhps
iret
and
mov
xorl
js
ljmp
sbb
ljmp
stc
gs
mov
leave
xor
lret
scas
push
jo
cltd
inc
xchg
sti
pop
pop
jge
cmpsb
loopne
cmp
push
mov
enter
cmp
pop
sti
jp
or
mov
pop
subl
push
inc
lods
push
push
mov
enter
inc
mov
pop
cmpb
mov
sbb
adc
push
clc
mov
lret
cwtl
addr16
shrb
sub
inc
cld
lahf
sub
notb
mov
dec
ss
or
es
lret
dec
jle
fisubs
push
mov
imul
cli
jecxz
and
mov
inc
fadd
mov
lret
setnp
call
jg
inc
pop
mov
outsl
ret
push
xor
dec
stos
cmp
cmp
ret
clc
inc
insl
sub
lock
mov
lock
lahf
push
mov
lods
xlat
clc
dec
mov
lods
nop
mov
xchg
pop
dec
adc
out
or
out
bound
jp
out
jle
lock
jae
jl
sbb
sti
jle
jp
stos
inc
push
out
jg
aad
adc
inc
es
mov
fnsave
xor
fildl
xchg
xchg
dec
add
fstpt
xor
dec
dec
repz
jb
jg
cmpsb
popa
test
add
pop
enter
incb
push
and
add
add
addr16
in
mov
push
push
into
mov
in
add
loop
mov
dec
push
repz
out
push
inc
adc
icebp
into
fisttpl
push
or
lock
jbe
inc
arpl
in
xacquire
jl
es
mov
icebp
fptan
hlt
es
pop
addr16
mov
cmp
xor
mov
dec
lods
adc
mov
mov
xor
popf
mov
xchg
push
mov
in
sub
cwtl
iret
jp
sub
and
pop
cmp
pop
or
fsubs
or
loopne
in
xchg
out
fwait
jp
sub
mov
test
add
arpl
push
add
out
adc
or
sbb
iret
pop
in
loop
add
inc
fwait
add
in
dec
lods
push
insl
outsl
pop
bnd
and
sbb
shl
jo
shll
popa
lcall
sbb
sub
add
rol
clc
and
lods
add
xor
pop
mov
or
jmp
shr
leave
fsubrs
inc
mov
jl
dec
xor
ljmp
dec
nop
and
xor
addr16
gs
cmp
nop
lea
imul
cmp
stc
bound
rcl
push
or
les
push
mov
mov
push
sbb
dec
lock
pop
stc
sbb
xlat
mov
lahf
push
push
cmpsl
or
shll
xor
push
cli
xchg
sub
jo
aaa
adc
vmovaps
mov
sub
fninit
cmp
xor
mov
ss
aas
repnz
and
adc
stc
push
jmp
insl
sbb
adc
push
arpl
iret
xchg
dec
mov
sub
inc
repz
rcrl
adc
hlt
xor
cmpsb
push
dec
scas
xchg
stos
and
popa
jecxz
push
mov
iret
inc
mov
ss
mov
gs
aas
pop
dec
cmp
pusha
int
hlt
data16
aas
stos
mov
nop
mov
push
cmp
ret
xchg
or
stos
cmc
in
lods
jnp
shlb
das
fcmovu
js
jecxz
pop
pop
test
out
out
outsl
and
fwait
fwait
xchg
push
mov
int
push
mov
repz
sub
loope
loopne
mov
mov
mov
imul
xor
add
rorl
aad
fstpt
jae
xchg
mov
jge
cmp
je
pushf
dec
mov
lret
cmp
lock
cli
decb
xor
loop
mov
movsb
subb
jmp
fisubs
jge
aam
adc
sbb
mov
ljmp
dec
aas
mov
into
in
mov
mov
shlb
xchg
cmpsb
iret
pop
test
in
daa
icebp
mov
pusha
inc
xchg
call
adc
cmp
out
test
mov
test
adc
test
fiadds
jmp
xchg
inc
dec
xchg
sbb
inc
push
mov
mov
fimull
lods
pop
and
push
push
arpl
jmp
sub
xchg
jne
sbb
push
rcl
cmovbe
es
jmp
mov
push
cmp
inc
arpl
jno
pop
xor
xchg
lahf
cltd
adc
push
pop
fldl
repz
jno
push
or
shll
mov
lcall
test
or
testb
and
mov
xor
dec
ficompl
scas
icebp
addr16
lods
and
xchg
rcrb
sub
scas
pop
cwtl
loopne
out
cmp
mov
int
rolb
sbb
sbb
xor
es
mov
icebp
aad
sbb
push
rep
adc
stc
popa
add
lods
dec
repnz
incb
mov
shr
js
ljmp
adc
jnp
dec
add
or
ljmp
pop
mov
jl
fnstcw
sub
jbe
cmpsb
lock
inc
imul
insb
not
hlt
jae
xchg
xchg
adc
jge
lods
mov
rorb
bound
inc
mov
data16
decl
fstp
mov
inc
mov
sbb
fcmovnu
into
dec
lahf
jle
ljmp
inc
mov
hlt
fistps
stos
pusha
mov
jo
je
push
mov
and
xor
neg
jbe
fstl
clc
divl
push
push
cmp
push
loop
inc
insb
test
mov
test
mov
sub
and
sub
call
scas
es
shrl
push
fists
dec
dec
pop
jl
fnstsw
xor
adc
add
outsl
outsl
mov
push
ret
mov
into
loop
dec
test
mov
out
fistl
fcmovnb
inc
mov
cwtl
sub
xlat
dec
push
lret
aad
das
icebp
in
jg
mov
insb
mov
adc
sti
pop
sar
outsl
insb
push
xchg
loopne
inc
cli
or
loop
sbb
mov
lret
push
loope
rcrl
adc
hlt
dec
pop
cmc
clc
loopne
aad
ds
popa
imul
jp
inc
outsl
or
fldt
xchg
sar
cmc
mov
cmove
dec
pushf
mov
push
mov
add
xchg
daa
stos
jge
stos
divps
pop
mov
inc
sbb
mov
arpl
pop
in
and
adc
xor
je
orps
jo
jo
repnz
enter
adc
mov
lods
sub
pusha
jbe
push
fdivrl
shll
in
dec
nop
scas
outsl
xchg
imull
pop
xchg
or
mov
stos
push
sbb
and
xchg
test
ret
cltd
jg
ret
bound
pop
inc
push
sti
xchg
sbb
adc
bound
pop
rcl
outsl
pop
mov
adc
pop
bound
sbb
mov
ljmp
dec
dec
push
mov
xchg
sahf
fsubrp
stos
xor
jbe
pop
lcall
fistpll
dec
or
or
pop
mov
dec
dec
mov
xlat
cmpl
ss
stc
pop
sub
das
ss
jbe
cmp
jecxz
mov
jle
out
jne
into
mov
mov
mov
pushf
sub
mov
xchg
adc
sub
pop
addr16
repnz
mov
out
mov
loopne
xchg
scas
pop
jnp
mov
sub
lods
sbb
lea
mov
jb
outsb
dec
dec
jbe
data16
mov
mov
cmp
xlat
enter
pop
cmp
xchg
mov
ret
fbld
mov
les
mov
sarb
xorb
fbstp
push
iret
sub
mov
call
jae
mov
stos
jnp
pop
insl
es
insb
cmp
xchg
mov
cwtl
push
pop
xor
mov
negb
mov
cwtl
sbb
repnz
sub
mov
inc
es
mov
cmp
fwait
xchg
dec
push
inc
sti
inc
sar
dec
rcll
mov
and
pusha
push
xor
mov
mov
pop
push
gs
rcr
into
nop
inc
imul
sbb
adc
xchg
dec
mov
cmpsl
loopne
mov
inc
mov
push
fcoms
adc
in
std
pop
pushf
out
ljmp
jnp
adc
mov
pop
adc
hlt
cmc
jbe
dec
mov
test
ficoml
data16
xor
ljmp
sahf
jecxz
cmp
jnp
jl
and
cmpsb
fiadds
inc
add
es
inc
in
xor
cld
test
push
into
push
adc
js
iret
repz
or
and
clc
or
orb
pop
xlat
test
mov
pop
adc
scas
int
test
dec
test
clc
push
shlb
sub
sub
out
cmp
jns
and
sbb
popf
inc
rolb
addr16
ja
push
mov
sub
add
push
mov
loop,pt
icebp
sbb
mov
rclb
sub
and
pop
rcll
sub
and
push
adc
aaa
jo
aas
daa
add
outsl
pushl
into
inc
ja
daa
xorb
dec
sti
cmpsl
outsl
pop
jo
inc
push
popa
in
test
lds
call
and
mov
pop
push
mov
add
xor
shrb
pop
cmp
leave
sahf
sbb
xor
cli
mov
inc
fnstcw
stos
dec
cmp
nop
fsubp
loop
jp
jecxz
stos
push
gs
mov
add
jnp
jge
mov
popa
sbb
std
test
push
repz
aad
adc
xchg
pop
ret
cld
sbb
nop
cmp
xchg
sbbl
jbe
hlt
pop
mov
or
jnp
xchg
cmp
add
adc
int3
test
orl
imul
pop
add
lods
js
ret
stc
ficoms
aad
xor
lahf
mov
nop
sbb
add
scas
inc
sbb
andl
ret
popf
idivb
and
sub
add
fstl
fidivrs
pushf
jae
leave
xor
jb
cmp
cmp
sar
andl
jb
mov
mov
pop
ja
and
subb
es
mov
jns
inc
lock
in
mov
fstpt
sbb
add
test
addr16
fnstcw
xchg
push
sbb
clc
imul
mov
jne
mov
mov
loop
inc
pop
test
or
mov
rolb
inc
pop
push
dec
sbb
fadd
cmpsl
ss
aas
xchg
rcll
sbb
or
cld
es
sbbl
inc
imul
adc
shrb
insl
inc
testl
ret
js
jb
sbb
xchg
pusha
push
movsl
xor
inc
cwtl
jmp
inc
cmp
and
xchg
popf
xchg
mov
out
fs
in
adc
fwait
loope
mov
dec
sbb
stc
ds
or
aaa
pop
popf
mov
fsubrl
and
adc
mov
aad
outsl
fldt
pusha
aad
mov
add
sub
iret
cmc
outsb
mov
cwtl
iret
inc
dec
stos
es
sub
xor
shrl
push
xchg
fcomp
std
push
pop
push
mov
mov
cmp
stc
out
sub
inc
push
xchg
fnstenv
push
pop
jo
movb
cmp
decl
data16
push
mov
adc
lahf
nop
jb
dec
fidivrl
outsb
pop
out
or
mov
sbb
mov
ds
popa
cmpsb
sahf
cmp
add
or
roll
pop
jns
push
bound
ficoml
das
aaa
loop
into
scas
fwait
lahf
push
xor
xor
out
xor
dec
dec
push
nop
push
std
sbb
aam
out
xchg
sbb
movsl
mov
mov
jo
testl
and
or
pop
mov
mov
adc
rcll
mov
sti
stos
stc
jg
jl
jecxz
out
sbb
dec
jnp
or
fwait
lret
out
orl
sbb
les
push
inc
xorl
std
loopne
movsb
mov
stos
inc
lea
pop
ret
enter
mov
pop
addr16
aas
sti
popa
imul
sub
mov
sub
add
cmp
dec
insl
mull
xchg
mov
shrl
mov
clc
and
sbb
outsl
inc
inc
movsl
test
icebp
ficoml
push
or
out
sbbl
pusha
mov
popf
sti
jge
scas
nop
sahf
aad
loop
or
or
jmp
lret
sbb
mov
outsl
rol
cmp
mov
arpl
xor
mov
mull
rcll
aad
rorb
loop
ret
xchg
adc
mov
pop
and
pandn
sti
mov
xchg
mov
outsl
inc
std
mov
enter
movsl
sbb
adc
imul
fsubl
stos
popa
push
adc
in
add
stc
sub
adc
lock
push
cmpsb
lock
push
int
stos
push
enter
test
dec
mov
jecxz
pop
sbb
fsubl
xorl
ds
and
andb
fiadds
sub
jle
or
cwtl
in
jle
sub
fsubrl
cmc
pop
scas
fiadds
loopne
cmp
mov
fcmove
aas
mov
je
xlat
clts
mov
xchg
jno
mov
mov
push
lcall
aas
cld
mov
lods
out
mov
pop
lea
sti
filds
push
fstpt
push
sub
inc
sbb
xor
ja
sarb
clc
dec
cli
jo
enter
inc
cmpsb
test
adc
aas
stos
pop
adc
ljmp
mov
mov
pop
outsl
orb
mov
lret
adc
mov
xor
inc
sarb
int3
test
ja
inc
cwtl
cmp
inc
add
fwait
cmp
fs
sub
aaa
test
sub
or
add
jl
fadds
dec
pop
or
mov
and
outsl
outsb
cmpsl
scas
bound
cmp
repnz
dec
pop
fcmovbe
push
out
sub
xchg
lahf
fldl
sbb
xchg
clc
xchg
inc
imulb
jge
addr16
fistpl
sbb
sub
out
jecxz
call
mov
mov
mov
aad
cli
add
cwtl
sahf
lcall
leave
jl
mov
imul
mov
sub
adc
sub
jge
jbe
test
jmp
mov
les
shll
cmpsl
cmp
iret
adc
jns
je
lcall
xchg
fisttpl
sarl
mov
mov
ret
ja
iret
lea
and
mov
fsubrl
push
rcl
push
mov
test
inc
in
add
xor
out
and
sahf
fisttpl
cmp
cmpsb
daa
adc
or
mov
inc
push
stc
inc
out
enter
sbb
lods
mov
inc
and
fcomp
xchg
push
cmp
sub
mov
adcb
aam
push
inc
enter
lock
mov
sahf
push
mov
mov
iret
loopne
jo
in
dec
xor
add
xor
es
xor
fldenv
jge
and
jnp
jns
loop
dec
sbb
jo
aas
fcmovb
mov
mov
dec
cltd
xchg
icebp
or
addr16
hlt
mov
out
xor
jb
std
sbb
sahf
xor
icebp
out
pusha
sub
aaa
jnp
movq
sbb
stos
xor
in
roll
jnp
add
xlat
insb
in
mov
in
mov
pushf
jg
rclb
mov
add
mov
xchg
inc
inc
xchg
addr16
adc
pop
sub
and
loop
push
sub
and
js
or
lcall
bound
int
add
aas
clc
xchg
pop
xchg
out
cmpb
dec
push
mov
and
clc
andl
add
and
out
sbb
jno
pop
xchg
movsl
arpl
adc
or
adc
addr16
cli
cltd
lcall
adc
mov
or
bound
pushf
out
out
xor
sub
adcb
lcall
jge
dec
mov
daa
mov
clc
adcb
mov
mov
push
mov
mov
call
sbb
jmp
push
mov
pushf
out
pop
add
mov
dec
cmp
mov
jg
fnsave
xchg
pusha
cltd
mov
arpl
aas
mov
idiv
rorl
push
ret
loope
and
xchg
cmp
jl
inc
xchg
fwait
sub
int
mov
or
popa
test
mov
add
cmp
lret
cwtl
hlt
nop
jnp
mov
sbb
and
mov
fsub
cmpsl
les
mov
jnp
scas
mov
push
pop
xchg
jmp
mov
in
dec
mov
cli
and
adc
jg
sbb
dec
sub
arpl
cmp
and
dec
ds
gs
jnp
outsl
mulb
mov
dec
mov
xor
xor
add
or
decl
lahf
adc
pop
je
push
ja
and
loop
xchg
sub
pop
rclb
mov
cli
adc
push
loope
ja
fmull
add
iret
inc
and
jb
pushf
imul
fisttpll
ds
mov
daa
je
mov
fisubl
cld
cmpsb
scas
stos
cmp
cli
aad
pop
fsubr
xor
lahf
faddl
mov
sub
fistps
orb
sub
jl
add
add
adcl
stos
cld
clc
bound
push
pop
push
aam
mov
mov
ja
arpl
mov
pusha
cmpsl
test
sbb
mov
fmull
mov
cmp
dec
movsb
iret
mov
movb
nop
imul
inc
cwtl
push
test
sbb
data16
inc
pop
adc
dec
xor
pusha
push
cld
ret
cmp
fs
and
mov
and
mov
jge
rorb
sbb
sub
dec
rcl
cmp
push
push
xor
negb
icebp
mov
or
sub
mov
mov
pop
inc
push
mov
cmpsb
and
cs
cmp
add
pop
push
xor
out
jnp
mov
jne
xchg
or
mov
shll
or
fsubrl
fcomi
outsb
jecxz
sub
and
xchg
repnz
into
cmc
and
lret
xor
aas
in
or
mov
push
mov
les
mov
xchg
fistpl
out
lea
push
and
cmp
push
lock
ror
dec
cltd
or
inc
aam
fldcw
or
stos
popw
test
add
lcall
sub
lea
pop
incb
sbb
xor
sub
push
adc
dec
inc
mov
lahf
lods
cwtl
xor
push
decb
roll
push
dec
sub
push
iret
rolb
bound
lods
cmp
stos
mov
je
lret
in
mov
ljmp
out
xchg
lret
pushf
jns
dec
push
dec
or
xlat
pop
aaa
jmp
mov
pop
ret
ds
lahf
std
std
sub
lret
mov
sbb
jecxz
sbb
xlat
adc
dec
arpl
leave
push
xchg
ja
mov
or
xor
into
and
push
aas
sub
and
pop
lods
push
jg
loope
ss
mov
cmpsb
push
adc
fs
enter
sbb
sbb
pop
mov
pop
subb
jae
sbb
call
sub
jg
or
pop
in
inc
mov
clc
jecxz
imul
dec
jge
add
scas
lret
xor
jl
dec
addr16
mov
or
nop
insb
je
xchg
je
lods
add
repnz
ljmp
cmp
lea
rclb
mov
inc
nop
int3
or
xor
test
nop
push
push
inc
xchg
sbb
cld
dec
mov
pushf
pop
dec
jne
popa
inc
inc
jns
inc
lahf
movsb
fwait
dec
cmp
push
jmp
cmpsl
pushf
dec
je
cmp
dec
cmp
sbb
out
or
lret
adc
daa
cmp
adc
icebp
dec
leave
sub
pop
add
sahf
push
dec
cltd
pop
jo
lods
lds
cmp
icebp
cld
sub
sarl
adc
cmpsl
jbe
push
sub
dec
divb
dec
ds
popa
sti
add
push
inc
xlat
sbbl
push
xchg
push
cld
adc
sbb
out
lock
aam
imul
pusha
jnp
xor
ret
jle
popa
test
xor
sbb
or
scas
sarb
aam
jno
mov
inc
cwtl
cmp
add
and
mov
mov
pop
jno
mov
jae
and
mov
adc
inc
jne
jecxz
sbb
or
and
sub
jb
out
sub
sub
push
mov
cltd
stos
pop
pop
or
fwait
shll
xor
lods
lds
lret
je
out
and
pop
es
fidivs
lret
jnp
pusha
xchg
cli
shlb
repz
popf
jae
dec
ja
lods
shrl
mov
and
mov
mov
cmp
hlt
insb
inc
or
xor
pop
test
and
addb
push
bound
leave
gs
lahf
dec
lret
mov
pop
cmp
sub
jl
mov
pop
sahf
xor
sub
xor
inc
and
adcb
cmp
xor
gs
lds
lods
andb
stos
cmp
sbbl
inc
test
xor
mov
rclb
lahf
mov
mov
dec
xor
push
or
dec
cmp
cld
cmp
push
sbb
frstor
mov
lret
jbe
mov
sub
call
loopne
rcl
les
loop
xchg
xchg
mov
sub
add
mov
adc
jp
xchg
pusha
dec
mov
pop
sbbb
popa
mov
test
cmp
mov
pushf
scas
mov
mov
adc
les
jns
push
imul
lock
sub
xchg
pusha
jno
sub
sbb
mov
push
rolb
push
popf
and
outsl
jl
mov
push
movsl
push
das
and
cmpsl
sarl
cmp
adcb
mov
and
nop
je
and
or
dec
icebp
sti
and
pop
aam
jnp
popa
imul
push
sub
subb
ret
mov
enter
mov
gs
mov
jmp
test
lods
stos
loopne
jl
push
popl
mov
pushf
jecxz
aas
jecxz
leave
out
pop
sub
dec
mov
sub
iret
sub
mov
daa
fcmovne
jp
inc
jns
lahf
cmc
xchg
lcall
mov
daa
in
add
nop
mov
and
int
mov
inc
std
jle
sbbb
jge
sub
ret
stos
fistpll
repz
test
and
cmp
inc
insb
sub
test
mov
mov
mov
mov
mov
cmp
pop
dec
lock
jp
insl
inc
aad
loopne
adc
scas
mov
test
mull
out
cmp
push
xchg
out
repz
cmpsl
fidivl
pop
xchg
enter
push
sbb
pop
jmp
push
mov
roll
imul
int3
push
xor
pusha
stc
stos
push
fldenv
repz
jns
or
jae
push
andb
andl
mov
pop
cmpb
outsl
ds
inc
cmpsl
into
cmpsb
in
xchg
mov
cld
or
and
sbb
pop
arpl
aad
testb
das
jbe
test
lret
iret
lahf
popf
push
inc
pop
mov
sub
insb
lods
fisubl
and
jns
mov
jl
push
xchg
dec
sub
cmp
test
sbb
jp
inc
fsubrp
xchg
jnp
mov
adc
mov
inc
inc
dec
nop
and
mov
bound
pop
add
out
cltd
enter
mull
sbb
aaa
fldt
test
cmp
cmp
jecxz
and
sbb
scas
mov
jecxz
sbb
fiadds
scas
lock
xor
insb
xlat
push
dec
jns
dec
cwtl
ljmp
inc
sti
sahf
add
into
lods
dec
mov
scas
andl
push
dec
cmp
jp
inc
mov
aad
sub
xchg
rol
push
inc
cmpsb
pop
pushf
inc
add
icebp
xchg
cmpsb
mov
cmp
pusha
out
arpl
lds
pushf
mov
mov
mov
sbb
movsl
fistpll
and
and
mov
xchg
popf
push
xchg
sahf
mov
ds
and
lret
sbb
setno
hlt
mov
fs
sbbb
xlat
add
push
lcall
pop
jecxz
sbb
fsubl
xor
outsl
fs
mov
stc
jg
xor
or
test
pusha
jecxz
dec
sub
adc
xchg
daa
sbb
jno
loope
gs
divb
cli
hlt
enter
mov
mov
dec
lock
and
mov
push
xor
imul
daa
enter
xor
xchg
popa
aas
lods
pop
xchg
xor
mov
adc
push
mov
sub
jg
aad
insl
sub
hlt
jge
push
inc
and
ss
mov
addw
xor
movsb
imul
outsb
mov
gs
dec
cwtl
jmp
dec
in
add
pop
rcr
sbb
mov
inc
push
pushf
sbb
lods
mov
lret
test
mov
inc
das
adc
pop
fisubrl
jae
adc
addl
or
jbe
push
cmp
cmpsw
jmp
cmpsb
pop
cwtl
adc
call
mov
pop
sub
sbb
mov
pop
fimuls
pop
mov
rolb
sbb
arpl
and
subb
sbb
sbb
or
flds
lcall
xor
movsl
or
divb
dec
mov
imul
push
in
movsl
xchg
mov
aaa
nop
fbstp
mov
stos
add
or
jl
ss
cmpsl
adc
pop
or
inc
dec
int
inc
sbb
xchg
ja,pn
adc
test
fisubs
cmpsb
mov
dec
imul
out
fs
ret
cld
repnz
ret
repz
xchg
adc
leave
add
mov
push
adc
pop
shl
inc
movsb
mov
aaa
fildl
lret
imul
jns
nop
pusha
fwait
aaa
ret
leave
aad
mov
xchg
addl
repz
in
pop
xchg
mov
ret
aaa
scas
rcrb
cmc
test
popf
rclb
ss
daa
push
aad
ret
nop
mov
cmp
je
and
test
xor
inc
shr
fcomps
pop
adc
jge
push
mov
push
sbbb
rolb
push
pop
jbe
sub
je
inc
arpl
cmp
in
and
add
sub
and
loop
in
iret
roll
lock
js
lods
int
xlat
imul
sbb
and
and
jg
pop
inc
fimuls
cmpb
push
dec
leave
sub
or
xor
bound
inc
jg
mov
adc
rcll
dec
mov
mull
push
lret
sbb
aam
xor
fisubrs
jl
mov
lods
cs
sbb
jp
stos
cmp
or
xchg
inc
and
cmp
fildl
or
orl
iret
outsl
push
loope
imul
dec
pop
xlat
aaa
rcrb
mov
and
xor
mov
jmp
pop
mov
jp
cmp
arpl
imul
push
out
sub
shll
jl
outsb
sbb
jae
stc
xlat
lret
xor
sub
ljmp
js
pushf
popa
sub
add
mov
cmp
adc
sbb
mov
inc
jp
in
add
mov
mov
fisubs
push
pop
dec
push
sbb
xchg
xor
mov
xchg
rorl
test
enter
jge
push
mov
inc
das
imul
cs
jl
in
adc
rorb
out
rcr
and
divb
stos
pop
jl
pop
sbb
fcomps
test
xchg
mov
dec
pop
aad
imull
out
and
pop
shrl
jno
fcoms
pop
cmp
stc
cmp
shll
js
add
cs
mov
inc
adc
dec
adc
orb
inc
scas
xor
jae
mov
dec
lds
fcoml
cli
jecxz
lock
mov
xchg
mov
add
test
inc
mov
sub
pop
mov
loop
pop
aas
xchg
sbb
jmp
mov
es
sub
cs
mov
lret
jge
shl
fldl
push
popa
lds
push
mov
and
push
mov
popa
arpl
fisubs
fidivs
jb
mov
or
push
pop
fistpl
sti
stc
lods
rcrl
mov
shrb
xchg
inc
xor
mov
mov
xchg
and
icebp
test
cmpsl
jmp
gs
add
dec
fdivrs
push
jmp
push
dec
sbb
mov
mov
cmp
loopne
lock
mov
movsb
adc
fidivrl
rcrl
pop
out
gs
sti
cmpb
pop
imul
loop
ret
shl
xchg
push
pop
aam
shl
lods
sahf
fnstsw
mov
or
fdiv
add
cmp
hlt
pop
outsl
outsb
sub
xchg
inc
mov
repz
or
mov
jge
mov
push
push
das
int3
leave
mov
lods
dec
stos
or
lods
pop
sbb
lea
scas
popf
mov
jp
mov
rol
and
insb
push
inc
aaa
repz
stos
inc
out
cltd
es
shl
push
dec
or
insb
invd
jno
mov
mov
sub
mov
addr16
orps
dec
push
repz
adcl
xor
cmp
int3
adc
and
mov
inc
sub
or
cmp
lahf
cmp
jnp
add
pop
push
movsb
lods
incl
xor
dec
scas
popa
cli
add
shlb
adc
add
sahf
and
out
js
adc
mov
add
jp
mov
pop
push
xor
sbb
or
ja
jb
jo
test
mov
push
or
in
out
pop
xchg
mov
pop
jecxz
repz
sub
loop
cli
insb
repz
sub
jbe
add
dec
test
or
adc
fisttps
xchg
cmp
into
mov
lea
mov
push
inc
imul
sbb
add
cmp
mov
icebp
scas
sbbb
jne
mov
jmp
shll
fwait
dec
inc
cli
popf
lahf
mov
adc
aaa
mov
cltd
sbb
cwtl
daa
jmp
enter
gs
adc
lahf
outsl
insb
jl
jle
in
cmp
sub
inc
xor
sbb
jns
xorb
push
int3
pmuludq
imul
xchg
pop
cld
add
xchg
lods
xor
fstpt
mov
add
gs
sbb
xchg
cwtl
cld
popf
push
push
and
aaa
mov
aaa
add
test
stos
repz
cmp
into
and
pop
mov
sub
addr16
inc
inc
pop
test
xchg
mov
push
push
add
sbb
jmp
mov
lahf
ja
add
dec
add
xchg
ficompl
mulb
pop
or
loop
push
inc
xchg
jge
sti
mov
mov
push
xor
push
cmp
sbb
cltd
test
xor
mov
jp
dec
sbb
lods
lods
pop
leave
iret
pop
push
lods
loopne
sbb
pop
mov
cwtl
dec
scas
and
xchg
push
adc
add
imul
xchg
cmpsb
pop
dec
push
push
addb
decb
cmpl
lods
cmp
inc
scas
out
jo
add
ja
push
inc
out
jl
out
call
dec
cmc
cmp
mov
adc
or
mov
adc
mov
nop
std
xchg
dec
sbb
test
movsl
iret
mov
xor
movsb
in
repz
mov
mov
loope,pt
inc
xchg
pushf
xor
cld
mov
cmp
inc
aad
add
mov
call
push
add
mov
sarb
add
adc
stos
dec
dec
es
cmp
rolb
or
and
and
mov
xchg
adc
nop
xlat
out
outsl
cmpsl
jle
jecxz
shll
js
in
lea
mov
dec
xchg
and
pop
popa
xlat
movsb
xor
pop
mov
dec
xlat
mov
push
pop
clc
push
aad
mov
xchg
inc
mov
mov
loop
arpl
pop
sbb
sbb
jmp
mov
mov
lahf
lea
addr16
add
pop
add
push
daa
scas
adc
repnz
imul
pop
addb
pop
scas
aas
imul
push
pop
call
cmp
in
ja
rorb
push
dec
xchg
aam
adc
inc
xchg
xlat
in
mov
stc
pusha
xlat
adc
pop
mov
mov
xchg
pusha
xchg
sbb
pushf
and
repz
xchg
gs
int
mov
stc
pop
rorb
jno
fsubrp
and
jb
cmp
mov
xor
inc
in
pushf
xchg
cmp
sub
xor
pop
jbe
and
imul
xlat
ret
jno
stc
js
in
fsubrs
mov
ss
mov
imul
js
mov
pop
adc
add
mov
shl
fwait
jb
adc
jp
or
jnp
out
iret
inc
dec
nop
xor
fimull
xor
push
mov
xchg
fwait
cltd
arpl
gs
movsb
outsb
aad
or
xchg
and
insb
cltd
push
push
jne
addb
scas
sub
ja
pop
jno
sarb
jo
addr16
sub
xchg
sbb
and
xlat
inc
mov
stos
or
xor
xor
add
loopne
xchg
lds
sahf
dec
stos
rorl
inc
cmpsl
push
dec
test
and
dec
fldl
add
pop
test
dec
mov
mov
aaa
push
dec
mov
mov
pop
xlat
cmp
iret
mov
movsb
fucomp
xchg
mov
cmp
fstp
mov
xchg
mov
sbb
jns
add
dec
mov
or
add
push
aaa
sub
es
sub
jne
leave
ss
loop
das
bound
push
insl
pop
cld
fisubrs
push
jge
nop
push
mov
stos
mov
push
mov
jge
xchg
addl
adc
and
jge
clc
leave
mov
mov
add
jge
fcomp
pop
mov
pop
xor
pop
movsb
add
ret
ja
pop
dec
jmp
js
scas
ljmp
add
xchg
data16
cld
push
shrl
lds
mov
mov
mov
das
add
loop
push
rorl
mov
mov
fisttpll
out
sbb
jmp
inc
shll
jns
or
imulb
roll
xchg
pop
into
cmp
xchg
jge
and
loopne
jnp
dec
add
and
shlb
insl
or
xor
xor
in
cltd
lods
fcomps
dec
andl
sarb
test
adc
mov
and
fs
cmp
inc
or
aas
mov
mov
jae
ret
aam
xchg
xor
push
jb
xchg
aad
inc
into
sbb
stc
loope
or
xchg
adc
mov
lret
cmp
ja
sbb
cmpxchg
aam
cs
loope
cmp
cmp
push
dec
or
xor
ret
repnz
xor
fs
xchg
out
les
insb
sbb
mov
jge
dec
jecxz
inc
rcrb
pop
jmp
pop
ret
or
fidivrs
jae
fnstenv
jp
cmp
jae
push
pop
mov
loope
jbe
icebp
jp
xchg
cmpsb
cmpb
frstor
rorl
rorl
iret
mov
mov
imul
sbb
xchg
mov
cmp
je
push
adc
xor
out
xor
iret
fwait
popf
and
das
cs
ljmp
pop
lret
subl
jmp
adc
mov
sbb
pop
aas
inc
cmp
div
lret
stos
ret
jge
fcoms
jl
xadd
adc
inc
inc
call
cli
stc
popa
psadbw
push
out
dec
jno
add
leave
add
mov
insl
ljmp
add
xchg
adc
out
dec
popa
out
lret
push
push
imul
cmpsb
fsubl
lods
filds
fdiv
addr16
adc
pop
sbb
push
xor
fisubl
push
pop
insl
sbb
dec
int
xchg
add
popa
fnstenv
mov
add
adc
rorl
lcall
xlat
lcall
cmpsl
into
movsl
pop
jle
xchg
cmp
mov
inc
adc
in
inc
enter
sbb
xor
popa
hlt
push
mov
push
inc
sarl
mov
push
shlb
xchg
lods
mov
mov
dec
cld
test
test
mov
iret
shrb
mov
mov
jo
subb
faddp
iret
dec
adc
mov
aas
jmp
xor
jns
inc
adc
push
push
dec
push
orl
sub
jmp
lods
je
daa
and
icebp
add
sahf
stos
push
aaa
test
or
push
adc
nop
js
jmp
fdivrl
loopne
pop
or
push
sub
aas
es
mov
xchg
movsl
add
adc
or
insl
popa
push
pop
jnp
push
and
dec
adcl
push
xchg
xor
jns
sub
jno
scas
ljmp
leave
pop
std
js
jl
stos
sub
aam
rcrl
pop
mov
aas
mov
fwait
pusha
sti
mov
test
cmp
or
jmp
imul
mov
push
adc
icebp
mov
scas
test
gs
push
xor
testl
aam
cmp
mov
fisttps
push
mov
aad
inc
out
mov
pop
mov
pop
loopne
xor
mov
add
stos
call
stc
jl
icebp
adc
jp
loope
lods
test
ret
jbe
out
mov
and
ja
lds
pop
xor
out
nop
arpl
add
push
mov
arpl
rsqrtps
pop
dec
insl
ljmp
pop
xchg
cld
sahf
dec
inc
dec
sbb
addb
and
mov
dec
xor
ja
sbb
xlat
pop
push
sub
inc
movsb
dec
dec
mov
pop
je
mov
rorb
inc
mov
nop
mov
popf
pop
aas
rcl
lcall
cld
adc
leave
mov
inc
lret
jg
sti
fwait
enter
mov
out
lcall
push
xor
mov
shl
fs
sbb
and
repnz
ret
out
in
jg
jge
sub
in
sub
out
jle
push
and
daa
sbb
cmpsl
lock
xor
popf
mov
push
sub
mov
sub
cmp
enter
in
test
fs
xor
xchg
cmp
xor
or
cs
pop
test
sti
push
and
sub
stos
add
cmpsl
dec
fidivl
inc
or
inc
jnp
cmpsb
pushf
mov
adc
mov
ljmp
mov
es
int
lock
dec
sahf
inc
xchg
sbb
cwtl
rorb
inc
lea
xchg
inc
sbb
ret
ljmp
insb
data16
sub
mov
test
lahf
mov
add
movsb
imul
mov
pop
pushf
imul
aaa
clc
popa
mov
sahf
int3
xchg
dec
pushf
aam
shrl
or
sti
jne
fwait
std
paddusb
sbb
push
cltd
das
pop
pop
insl
shr
xchg
loope
ja
imul
mov
insl
cmp
gs
sub
inc
xchg
rorb
pop
fwait
test
icebp
cs
inc
movsb
mov
filds
or
js
add
xlat
push
aas
out
add
pusha
jle
xor
push
push
roll
enter
mov
xchg
xchg
pop
inc
in
jp
mov
or
and
lock
and
sahf
cmp
mov
inc
mov
negb
mov
cmpsb
jmp
pop
int3
dec
gs
jge
scas
or
and
or
orb
mov
inc
jo
je
addl
das
add
fwait
sti
jg
dec
mov
push
imull
shrb
cmpsb
lea
in
pop
sub
xlat
or
cli
jo
xchg
jmp
cwtl
or
testl
cmp
sbb
cmc
xchg
ljmp
mov
add
jmp
lret
incb
dec
lock
jns
fsubr
mov
lret
jmp
loop
dec
sub
jo
cltd
cwtl
nop
je
imul
imul
scas
push
sti
test
jae
stc
xchg
adc
and
fstpl
sbb
pusha
add
xchg
daa
arpl
mov
xor
add
test
in
pusha
ds
or
pop
dec
cmp
sub
fldenv
cmp
clc
xchg
add
xchg
outsl
sub
fs
sbb
xor
xchg
in
sbb
ret
inc
dec
and
std
mov
loope
fldenv
mov
in
or
mov
adc
adc
or
iret
loopne
test
push
add
scas
test
cmp
mov
add
or
and
aaa
xorb
mov
mov
lock
and
int
inc
sbb
test
scas
inc
push
out
sahf
cmp
mov
dec
jl
sub
xchg
ja
int3
jne
test
and
adc
xchg
aad
mov
pop
pop
sbb
add
jmp
mov
push
cltd
cltd
push
xlat
pop
inc
cwtl
int
adc
fimull
mov
xchg
shll
adc
cmpb
testb
cmpsl
sbb
out
adcb
icebp
push
lock
or
xchg
mov
call
sbb
out
cmp
fcmovne
stos
mov
sqrtps
mov
dec
sub
xor
int
inc
shrl
pusha
xchg
pushf
inc
add
les
lret
pusha
sub
sub
outsl
sti
or
pop
mov
xchg
xchg
mov
push
xor
cltd
popa
push
jmp
push
cmc
mov
daa
popa
jo
pop
xor
mov
cmp
xchg
mov
js
rcrl
cmp
mov
int3
mov
dec
push
insl
loop
cmpsb
inc
add
popf
outsb
mov
jnp
dec
repz
cmpsb
add
lock
inc
pushf
lea
dec
push
scas
dec
imul
push
add
mov
lods
pop
xchg
sbb
jb
cmpsb
test
mov
xchg
jl
pop
leave
sar
out
xlat
sub
dec
xchg
mov
xchg
gs
and
dec
push
cmp
mov
movsb
sahf
xchg
jmp
rcrl
fnstsw
nop
xchg
fisubl
icebp
cld
call
push
int3
orb
xchg
mov
pop
sub
pop
mov
jge
lret
fisttpl
pop
je
add
xchg
sahf
mov
push
push
mov
jns
shlb
les
out
jne
je
aam
pop
pop
or
sub
lcall
sbb
xor
rorl
adc
inc
or
push
cltd
mov
lods
enter
dec
cmp
cs
sbb
lret
mov
mov
and
mov
jns
in
or
mov
sbb
lods
popl
rorb
loop
pop
jne
jns
dec
or
push
mov
fwait
and
out
fistl
push
sahf
jbe
or
add
xchg
lcall
test
and
fbld
sbb
cmc
add
addr16
cmp
cmpsl
jl
push
out
jecxz
sub
out
hlt
mov
mov
fs
in
aas
sti
fadd
xchg
jl
xchg
push
or
mov
push
xchg
in
test
sub
sub
clc
xchg
stos
addb
inc
dec
jl
mov
lret
jnp
pop
sarb
inc
add
cmp
sub
dec
loopne
int3
xor
push
jg
dec
fildll
scas
xchg
cmp
stc
mov
lahf
aam
add
jg
in
adc
std
fstpl
test
xor
mov
xchg
or
xchg
addr16
mov
dec
fnstcw
fwait
pushf
mov
mov
add
xor
cmpl
sti
lahf
sti
adc
dec
sbb
push
xor
lods
scas
mov
fsubs
adc
adc
push
inc
pusha
test
mov
dec
paddusw
dec
push
fwait
xchg
lcall
cmpsl
ret
cmp
jno
pop
or
loop
scas
inc
cltd
fsubs
cmp
dec
inc
pop
scas
dec
xchg
test
lret
cmp
push
popf
sub
out
in
lods
pop
add
mov
mov
cmp
sub
lods
inc
fsubrl
sbb
dec
mov
jp
mov
arpl
mov
mov
sub
ds
das
rcl
ds
inc
out
test
orb
and
out
sub
adc
mov
pop
xchg
cmpsb
sbb
sub
aaa
pop
cld
lods
imul
xor
dec
add
mov
sbb
leave
pop
aad
xchg
fwait
jecxz
xchg
inc
subb
int3
ljmp
ret
pop
int3
pop
xlat
jmp
adc
xchg
xchg
sbb
push
out
push
inc
or
xor
repnz
pushf
out
stos
into
aad
adc
dec
add
pop
stos
adc
dec
mov
loop
adc
or
jne
and
add
cmp
cli
xor
xchg
xor
in
add
or
sti
cltd
pop
mov
lds
mov
pop
pop
cltd
pop
fldl2e
adc
and
sub
inc
xchg
adc
decb
push
push
in
adc
and
jnp
clc
inc
sbb
adcl
mov
lahf
aaa
in
sbb
jne
xor
push
mov
xchg
icebp
mov
arpl
xor
scas
pop
adc
stc
lret
pop
aam
call
adc
push
test
jns
push
push
dec
jno
push
repz
mov
jp
movsl
jp
adc
or
jnp
pop
push
inc
xor
stos
cmp
cmp
lods
cmp
pop
ret
mov
jg
jns
inc
jo
jne
mov
mov
push
push
adc
or
negl
lahf
test
test
mov
repz
adc
cmp
scas
movups
push
mov
mov
xchg
inc
frstor
test
cli
es
mov
or
clc
add
out
cld
and
dec
xorb
shrb
lds
sbb
cmp
in
jnp
xor
jb
stc
nop
pushf
jo
addb
and
cwtl
dec
pushf
dec
xchg
jg
and
xor
nop
loopne
push
jno
mov
fsubs
shrl
xchg
sub
jns
mov
rclb
pop
sub
shr
rorb
mov
shlb
dec
repz
jne
xor
sbb
mov
xor
ret
fisubs
lcall
xchg
pusha
lahf
sub
inc
fbstp
sub
pop
popf
popl
outsb
mov
test
ds
aaa
mov
or
mov
lock
fs
icebp
sub
loope
jmp
hlt
ljmp
repz
cld
sbb
adc
cmp
test
adc
jmp
adc
out
mov
pop
dec
leave
add
insb
sbb
pusha
jno
pop
rolb
add
ret
jmp
out
lods
jns
out
or
subb
push
mov
cmp
xor
cmc
fildl
or
cwtl
pop
jno
push
fistps
push
mov
call
pop
cmp
rol
and
loop
xchg
in
pop
push
xor
shl
push
int
in
jp
adc
mov
mov
add
xchg
push
loopne
or
in
xchg
lahf
xchg
outsl
mov
sarb
push
cltd
rorb
int3
mov
or
cmc
pop
jl
push
sbb
dec
aam
pop
filds
pop
mov
xor
sbb
jp
clc
std
mov
movsl
hlt
mov
push
test
nop
dec
fsts
lock
mov
into
xchg
cs
movsl
pop
mov
mov
pop
aam
mov
test
mov
sarl
repnz
cltd
lret
and
repz
imul
subl
notb
in
mov
test
jae
rol
pop
lcall
cmp
test
xorb
xchg
cmp
aaa
daa
xorl
out
negb
or
loop
dec
or
int3
test
xchg
jl
xchg
das
fdiv
xchg
mov
adc
sub
mov
clc
xchg
inc
dec
jp
in
arpl
pop
sarl
pop
loope
movsb
inc
jmp
sarl
out
cli
add
mov
mov
lea
inc
mov
loopne
push
mov
push
inc
mov
inc
std
push
dec
mov
adc
je
ljmp
push
jnp
pop
dec
pop
stos
sbb
adc
test
fistl
das
cltd
xchg
mov
inc
mov
leave
lods
pop
ljmp
xor
std
mov
and
test
or
cmp
sub
cmpb
repz
xor
and
sbb
mov
popf
mov
xor
aad
or
in
or
pushf
sbbl
xor
push
sahf
pop
cmp
dec
cwtl
push
in
mov
mov
and
add
xor
cmp
xchg
and
lret
adc
mov
pop
das
jl
lahf
testb
jmp
dec
xchg
mov
inc
xlat
out
arpl
ret
shr
test
cmp
xor
es
ja
enter
push
add
add
bound
pushf
inc
lods
fsubr
pop
jne
or
push
xchg
adc
cmpsl
xchg
in
int3
in
js
dec
out
adc
jo
les
cmp
cwtl
xor
repnz
jns
xchg
add
subb
jae
push
filds
je
dec
popa
push
lcall
mov
loop
cli
jecxz
or
jecxz
outsb
mov
jbe
ss
test
dec
mov
pop
in
inc
out
jbe
or
pushf
jle
fs
add
in
push
andl
jb
in
loop
stos
ljmp
mov
and
mov
rcrb
dec
push
jmp
inc
out
xor
xchg
pop
xchg
sbb
push
nop
int
icebp
sub
xor
rclb
cld
jg
cltd
enter
mov
repz
cli
sbb
les
sub
divl
push
dec
dec
mov
jl
push
mov
xchg
divb
cmp
outsb
jg
pop
push
sahf
inc
rcll
imul
cli
mov
aad
mov
gs
jg
loope
push
lock
xor
xrelease
pop
fwait
sbb
repz
ja
inc
inc
fwait
arpl
inc
cld
mov
xchg
ret
jle
in
mov
add
out
stos
into
sbb
subb
enter
jbe
es
testl
mov
push
outsb
sub
in
fucomip
or
mov
push
xor
idivl
mov
lds
shrl
or
mov
push
inc
and
mov
loopne
add
aad
in
es
js
pop
jno
iret
aad
jecxz
add
or
insb
movsl
jbe
sti
hlt
sahf
sahf
or
pop
jecxz
mov
cmp
lahf
push
popf
jno
and
nop
dec
data16
push
mov
mov
sub
lret
jbe
stc
call
jnp
clc
push
dec
mov
sahf
leave
mov
cmc
leave
stos
repz
pop
or
cmp
int
fisubrl
push
je
xor
sub
aam
into
movsl
xchg
es
cmp
imul
inc
xchg
imul
aas
test
iret
out
fcoms
or
scas
lcall
mov
popf
add
inc
outsb
xorb
cmp
int3
popa
movsb
das
and
cmp
push
mov
pusha
or
and
mov
aad
andb
call
mov
add
mov
jge
cld
sbb
mov
jmp
cmp
subl
insl
xor
stos
xchg
xor
fs
sbb
adc
or
cmp
into
mov
push
and
sbb
xchg
fwait
pop
stc
dec
out
mov
mov
daa
and
ds
test
jecxz
repz
incb
xchg
mov
movsb
lcall
mov
stos
cmp
test
sbb
jecxz
adc
aad
out
mov
jb
jno
mov
cltd
cmp
mov
imul
fldcw
fnstsw
data16
dec
push
push
adc
jne
push
movsb
or
mov
lods
or
ljmp
mov
in
pop
scas
fdivrl
jmp
cltd
sarl
ljmp
cwtl
push
push
xchg
pop
mov
push
push
xlat
pop
xchg
mov
push
mov
or
and
and
fisubs
pop
bound
add
jge,pt
and
sub
push
jmp
hlt
push
push
mov
adc
mov
jecxz
jmp
xor
sub
push
or
inc
pop
xor
lock
xchg
enter
dec
subl
ss
add
fnstsw
adc
inc
dec
cmp
pop
cmp
mov
scas
icebp
xor
imul
pop
rorb
xor
insl
movl
xor
repnz
cmpb
mov
or
and
mov
jge
test
sub
je
mov
dec
mov
sub
mov
loopne
int
call
add
repnz
pushf
cwtl
jae
out
test
cwtl
inc
sub
pop
or
cmp
iret
adc
popf
pop
dec
cwtl
pop
sub
cmp
pop
test
mov
mov
stos
mov
mov
or
pop
mov
mov
out
adc
in
rcll
push
int
out
loop
into
cwtl
pop
mov
cmpsl
pop
arpl
testb
out
xchg
pop
int
cmc
mov
xor
inc
sbb
fistps
lahf
je
mov
popa
dec
loopne
sbb
sub
cs
leave
lret
cmpsb
push
pop
cmc
rcl
mov
ret
in
fistpl
mov
aad
adc
in
mov
xor
out
stos
pop
xchg
cmp
pop
scas
mov
ss
es
mov
push
push
cmp
add
push
xor
rorb
test
outsb
inc
cmp
shlb
mov
push
add
popa
or
xchg
lds
add
add
cmpb
scas
enter
es
es
das
xchg
adc
mov
mov
mov
mov
repnz
mov
bound
nop
iret
fistpl
push
mov
and
xchg
dec
push
mov
sbb
jno
and
sbb
iret
pop
mov
add
mov
roll
test
test
mov
loop
jecxz
mov
push
sahf
inc
mov
rorb
repz
pop
aaa
rorb
jae
shr
jb
adc
or
xor
adc
adc
inc
adc
add
mov
sbb
mov
lock
outsl
rol
in
rorl
mov
les
pop
shrl
movsl
jae
sti
sbb
les
pop
sub
repz
xchg
inc
jle
and
lcall
lret
inc
sbb
bound
mov
sub
pop
jb
stos
shl
call
in
xor
mov
jmp
sbb
enter
pop
cmp
sahf
xlat
adc
push
scas
adc
or
cmpsl
mov
jae
push
mov
xor
add
test
daa
lcall
pushf
lea
insl
gs
sub
rorl
pop
mov
cli
sbb
ja
mov
and
dec
xchg
or
loopne
gs
adc
mov
jge
pop
ds
stos
jmp
and
inc
adc
sbb
jl
push
hlt
out
jmp
mov
test
pop
js
data16
xor
xor
xchg
dec
lcall
mov
inc
fs
pop
int3
add
jge
int3
mov
xor
mov
cmp
shlb
lret
cmpsb
dec
pusha
dec
dec
sbb
jge
daa
out
or
lcall
jl
inc
dec
test
imul
aas
and
ss
xchg
out
jg
push
fsts
or
xor
push
bound
jnp
sbb
mov
dec
movsl
lahf
testb
scas
jmp
pop
fdivl
xor
add
or
sti
in
sub
adc
cmp
mov
and
lahf
es
icebp
or
mov
push
lods
jns
insl
out
jge
lock
in
sub
add
adc
repz
fcoms
mov
add
js
es
or
mov
loopne
scas
add
ljmp
sub
mov
sub
pop
mov
jmp
das
cmp
mov
pushf
dec
mov
leave
mov
sbb
lret
pop
sbbb
gs
stc
inc
gs
push
cmp
mov
testl
cmp
fldt
jecxz
mov
andl
sub
shl
push
xor
mov
push
cmpb
mov
scas
and
xchg
add
xor
xchg
sbb
jb
cmp
dec
out
mov
add
cmpsl
icebp
mov
cmpsl
test
clc
jns
add
inc
mov
jmp
sahf
outsl
aad
pop
push
int3
xchg
push
adc
xor
jns
push
sbb
mov
and
int
add
je
lcall
jae
sbb
cli
mov
icebp
pop
sbbb
jmp
xor
xchg
arpl
addr16
out
in
xor
ljmp
les
mov
push
arpl
jmp
shll
sbb
add
stos
int3
push
jp
fbstp
sub
dec
fwait
xchg
fistps
adc
inc
mov
mov
je
insl
jl
cld
pop
mov
or
jle
pop
mov
popa
sbb
mov
inc
fldcw
jle
dec
mull
int
adc
adcb
push
mov
insb
lods
ss
fildll
sbb
mulb
test
sub
scas
insl
ljmp
jmp
pop
lods
ss
mov
leave
out
mov
sbb
mov
jb
sub
or
mov
popa
pop
pop
pop
mov
sbb
cmp
push
dec
xor
testl
mov
mov
lea
in
fwait
les
addl
sbb
fdivl
add
jmp
push
mov
xor
jmp
mov
mov
and
add
jns
xor
imul
dec
mov
les
pop
add
mov
ret
mov
fisttpl
cltd
sbb
mov
fs
int3
hlt
ret
stos
hlt
add
push
nop
and
pop
cmp
dec
add
pop
movsl
gs
ret
or
addr16
cmc
arpl
jmp
gs
pop
enter
cmp
push
add
mov
das
inc
jo
repnz
dec
and
jns
test
daa
mov
in
sub
fldl2e
sbb
push
inc
aaa
fldt
jecxz
cmp
push
push
xor
ja
cli
push
fcmovnb
dec
xchg
popf
adc
into
std
pop
pop
add
mov
xchg
dec
aas
pusha
mov
andb
insl
jo
ffree
fdiv
into
clc
mov
inc
js
aam
mov
jl
xchg
pop
mov
add
ret
pop
aas
jmp
pop
xor
lods
push
xor
dec
xchg
push
mov
fidivl
and
movsl
xchg
fcoml
insl
lds
loope
xorb
daa
fwait
insl
cwtl
les
pop
daa
mov
mov
jbe
cmpsb
aas
or
nop
pop
dec
lret
scas
pop
adc
cs
inc
stos
xlat
and
xchg
fisttpll
mov
sub
sbb
mov
call
add
ds
sbb
xchg
pop
iret
fadd
ja
cmp
in
push
aad
roll
in
cmp
into
sub
out
cmpsl
push
adc
aaa
dec
fdivrl
inc
pop
jp
mov
and
testl
add
cmpsb
lea
lcall
popf
cmp
pushl
pop
out
in
adc
lds
xorl
fists
popa
rorb
xor
stc
push
cmp
push
mov
sbb
push
add
mov
mov
js
push
shl
movsl
jns
clc
xchg
aas
and
jle
sbb
rolb
aad
js
mov
test
mov
test
mov
ficoml
mov
insb
add
jge
fnstenv
pop
movsl
inc
stos
fcomi
popa
xor
jle
fistl
mov
rcl
int3
je
mov
jmp
mov
clc
mov
push
insb
dec
sbb
movb
testb
ljmp
decl
scas
inc
jge
cmp
sub
lret
stos
cli
lcall
test
jns
addl
mov
popf
push
push
das
jnp
aas
fwait
jbe
test
cmp
imul
ret
dec
dec
enter
dec
cmpsb
jle
lret
fidivl
xchg
adcl
jmp
in
mov
bound
icebp
movsb
sarb
mov
js
mov
xchg
adc
rolb
sub
movsl
mov
adc
mov
loop
sbb
sti
sub
js
pop
imul
mov
cli
addb
mov
clc
sbb
test
fisubs
add
mov
dec
mov
cmp
or
or
pop
fsubl
pop
out
mov
shrl
pop
adc
pop
lret
adc
pop
es
add
xor
xchg
je
push
mov
std
pop
sbb
mov
push
inc
iret
adc
sbb
jle
add
sar
fsub
aaa
add
int3
add
xchg
fdivrs
sbb
jbe
gs
movsl
daa
push
cmp
xchg
test
xchg
push
test
pop
or
lods
subl
and
xor
insb
jge
pusha
hlt
shlb
sub
push
gs
mov
std
push
divl
ljmp
mov
sbb
cmpsl
ds
or
daa
cmp
push
mov
mull
jl
out
pusha
jno
cli
xchg
or
repz
or
add
int
iret
das
stos
and
sbb
xor
xchg
inc
in
sti
addr16
repnz
insb
dec
ds
fucomi
pop
sub
sbb
xor
notl
sub
mov
and
cmpsl
and
orl
test
in
lods
or
out
and
push
cwtl
in
inc
cld
fimull
jge
push
popa
push
jnp
jp
into
lods
add
test
xor
mov
rcl
and
xor
jle
testl
out
cmp
mov
pop
pop
xor
adc
sub
add
cmc
push
jp
jle
xchg
insl
dec
sbb
jns
add
and
dec
data16
push
inc
rolb
jb
iret
mov
mov
xor
lods
stos
inc
mov
add
sub
pop
sbb
insb
and
or
pop
push
xchg
adc
mov
aam
pop
cmp
push
lcall
sarb
out
jle
xor
add
pop
imul
and
orl
int3
add
push
test
pusha
lods
add
inc
cli
xor
sub
fs
fwait
test
test
pop
cs
push
sub
inc
in
in
sbb
pop
adc
dec
fbstp
and
int
rorl
lds
mov
mov
push
xor
icebp
adc
xchg
mov
ftst
aas
fwait
cmpsb
addr16
pop
cmp
pushf
dec
sahf
scas
jnp
in
adc
cmp
sub
fcmovnu
lods
inc
ljmp
cmpsl
pop
popa
sbb
inc
mov
sub
cmpl
sbb
je
loopne
jno
jb
movsl
and
outsb
adc
loope
adc
cmp
cmp
outsb
stos
xchg
aaa
jmp
fcmovnu
cld
hlt
fwait
jns
push
xor
pushf
add
push
inc
stc
clc
xor
mov
insl
xchg
mov
mov
clc
pop
mov
fnsave
rcl
pop
fdiv
mov
mov
lea
cli
int3
shrl
pop
imulb
inc
out
sub
movb
cmp
sahf
add
mov
pop
sbbl
dec
pop
cmpsb
outsl
test
lods
adc
cld
sub
movsb
test
add
push
add
adc
dec
ljmp
mov
add
mov
andl
add
pop
pop
jnp
out
mov
jns
ret
sbb
lahf
mov
jmp
stc
or
xchg
sbb
push
imul
push
lock
or
xchg
pop
mov
lock
jecxz
repnz
ss
mov
mov
push
mov
fdivl
int
mov
mov
or
nop
pop
mov
test
xor
scas
and
xchg
decb
popf
dec
pop
mov
xor
lods
faddl
lahf
pushf
mov
fcompl
ret
negl
movsb
jnp
pop
lahf
jne
dec
mov
rolb
inc
adc
dec
add
ret
xor
add
nop
jg
adc
addb
ret
pop
fnstsw
imul
push
mov
outsl
push
popf
pusha
inc
popf
lahf
xchg
jl
aad
mov
sar
xor
daa
insb
or
cmp
mov
inc
pop
orl
sbb
popf
pusha
out
scas
jb
add
xor
jle
mov
das
and
arpl
push
xchg
adc
cmpb
or
inc
cmc
aas
out
mov
aaa
xchg
xchg
inc
pop
aas
push
mov
xlat
xor
movsl
inc
mov
push
push
add
cmp
add
enter
mov
xchg
xchg
adc
stos
out
stos
mov
xchg
mov
pop
shll
aam
add
dec
push
inc
test
pop
stc
or
mov
rorl
int3
lret
mov
test
push
js
push
jae
push
stc
and
in
dec
mov
jb
push
test
fdivs
jmp
inc
xchg
jg
jne
subb
imul
cwtl
mov
imul
mov
arpl
mov
cmp
xor
lret
push
dec
xor
mov
push
dec
xor
pop
mov
repnz
sub
mov
dec
and
ja
pop
outsb
dec
dec
sbb
mov
mov
enter
and
stc
push
ja
outsb
pop
push
mov
sti
lret
sahf
lahf
xchg
inc
int3
pop
and
jp
mov
or
jecxz
ds
dec
sarl
aad
add
mov
pop
stos
sub
imul
sbb
and
mov
mov
mov
jle
or
insl
jae
push
push
pop
sahf
bt
cmc
cltd
outsl
clc
mov
mov
in
arpl
jmp
repnz
dec
pop
adc
and
leave
mov
mov
sub
inc
and
mov
test
das
ljmp
daa
and
sub
inc
push
xor
jl
mov
lcall
out
pop
insl
mov
pusha
aam
adc
pushf
in
les
dec
das
push
dec
ljmp
sti
cmpsb
shrb
sub
ds
outsb
sarl
aam
pop
inc
xchg
cmp
dec
lcall
xchg
daa
shrl
add
call
cli
lahf
cmp
mov
mov
push
push
xlat
jle
sahf
int3
and
ss
mov
inc
xchg
inc
sub
inc
mov
pop
outsl
xor
pop
jp
jo
outsl
bound
dec
sahf
into
bndldx
icebp
xor
loope
ret
jg
lds
xor
out
jae
sar
mov
in
push
mov
adc
aad
xor
test
jmp
mov
dec
mov
outsl
or
inc
ljmp
push
test
jp
rcrl
cli
in
push
sbb
add
xchg
mov
cmp
mov
inc
add
shrb
data16
sbb
mov
push
cld
pusha
aaa
mov
add
cmp
mov
repz
divl
int
leave
dec
loop
mov
in
mov
xor
push
test
mov
mov
adc
shll
jp
dec
xchg
mov
repz
ja
push
cmpsl
mov
subl
loope
or
xchg
inc
pushf
xor
push
and
dec
aas
andps
adc
adcb
push
sub
mov
fwait
mov
sub
and
addb
les
xchg
xorl
xor
and
or
fldl
push
push
push
push
mov
loopne
xchg
popa
add
inc
adc
push
jecxz
fisttpll
push
sub
pushf
call
sub
test
push
sub
enter
cmp
ficomps
cmc
orb
mov
dec
cwtl
scas
fistpll
cwtl
stc
ljmp
outsb
adc
xor
call
shr
push
cmp
cwtl
jl
dec
cltd
mov
stos
imul
cmp
jns
out
bound
cmp
mov
sti
jb
push
cld
mov
aas
dec
outsl
dec
fucomi
mov
negb
mov
jmp
cmp
cmpsb
test
out
sub
dec
insl
out
adc
jmp
repz
hlt
adc
jne
inc
fstl
cmp
and
es
rorl
lods
out
mov
sbb
movsb
dec
xchg
ret
hlt
outsb
out
xor
std
cs
lretw
loop
mov
xchg
incb
xchg
fidivs
inc
ret
and
pop
call
jo
adc
dec
sbb
push
stc
xor
leave
xchg
cltd
adc
push
fs
lahf
ljmp
push
fwait
mov
lcallw
adc
jo
out
and
push
and
mov
gs
lds
stos
pop
mov
rclb
lcall
inc
xchg
mov
cmp
jge
xchg
cmp
inc
ljmp
les
jae
sbb
imulb
push
outsl
pop
cmp
data16
mov
xor
cwtl
sbb
imul
or
in
pop
sti
adc
sub
daa
xchg
sbb
clc
out
icebp
shrb
in
cmp
popa
add
jl
push
andl
lods
mov
jae
bound
inc
shl
adc
repnz
and
imul
fistpl
dec
or
push
orl
cmp
faddl
sub
pop
inc
push
dec
push
add
mov
repnz
add
dec
jne
push
xchg
pop
mov
imul
shll
adc
sahf
decl
out
aaa
sub
mov
out
sbb
aas
xchg
or
adc
pop
xchg
rorl
fsubrl
cwtl
out
mov
mov
std
nop
aam
pop
fdivs
inc
mov
inc
mov
aad
or
pop
sbb
cltd
aad
sti
ftst
stc
fldenv
cmp
sbb
mov
dec
xor
scas
jbe
inc
mov
mov
mov
or
push
enter
es
roll
xchg
pop
std
punpcklwd
pushf
ficompl
mov
adc
repnz
lds
fldcw
mov
jle
insl
adcl
dec
movntq
in
aam
cmpsb
ss
roll
adc
push
insl
lcall
sbb
cltd
stos
adc
push
pop
pop
mov
jne
mov
xor
stos
cmp
inc
fcomps
inc
lods
mov
test
ret
scas
jmp
sub
fmull
sbb
xor
subb
ds
pop
lret
nop
xchg
jle
out
mov
lret
mov
mov
or
sub
pop
lret
push
cmp
test
mov
push
test
stos
dec
or
shrb
sub
adc
cmpsl
clc
lret
std
inc
mov
shrl
stc
push
pop
icebp
xchg
xchg
stos
add
dec
jne
xor
arpl
les
fadds
inc
into
iret
push
mov
dec
xor
int
in
xor
jmp
test
inc
pop
call
out
or
out
or
ror
clc
xchg
in
ficompl
mov
aas
iret
add
lock
ret
pop
and
popf
pop
leave
cld
adc
arpl
mov
adc
inc
loop,pt
pop
mov
cltd
mov
jmp
aaa
sbb
arpl
loope
cmp
fldt
jecxz,pn
cwtl
movsl
xchg
pop
arpl
dec
adc
or
mov
outsl
movsl
push
sbb
and
jne
mov
cwtl
test
adc
scas
push
push
fists
hlt
xor
cmp
inc
cmp
xchg
xchg
xchg
or
adc
jns
jle
mov
test
sti
push
xor
out
dec
insb
sbb
pop
mov
push
pop
popa
mov
or
mov
ficomps
loopw
mov
mov
decb
clc
lcall
adc
xchg
push
shlb
xchg
iret
repnz
jnp
cmp
mov
arpl
xchg
xor
movsb
ret
sbb
add
clc
js
mov
and
stos
stc
inc
push
pop
sub
inc
add
push
mov
aam
add
ljmp
add
bnd
test
mov
cld
outsb
pusha
jb
sub
sbb
cvtdq2ps
notb
loop
xchg
mov
pop
jne
jmp
loop
aaa
mov
xor
hlt
fwait
add
icebp
orl
scas
mov
dec
ljmp
cld
sbbl
enter
fbld
int
mov
xchg
into
xchg
push
std
call
es
mov
xchg
and
push
outsb
stc
out
in
popa
xor
xchg
mov
rclb
nop
enter
push
cmc
inc
outsl
fdivrs
pop
mov
cmp
je
je
addl
xchg
fucomip
sarl
mov
or
and
sahf
push
sahf
lret
stc
bound
mov
decb
lret
or
cmp
mov
sub
out
pusha
and
sahf
mov
and
je
mov
vpunpckhbw
call
sarb
cwtl
push
cmp
stos
adc
mov
adc
scas
jge
inc
cs
sub
int3
sbb
cmpsl
cli
enter
mov
inc
sub
and
arpl
outsb
les
es
sbbb
sub
mov
jns
ljmp
in
pusha
int
addl
or
pop
sub
sub
cmp
lods
sbb
fidivrl
roll
mov
sahf
sub
xor
cmc
fnstenv
nop
gs
push
lods
cmp
cmp
sub
pop
insl
divb
sub
in
pop
inc
loopne
dec
jns
dec
fisubs
inc
ret
adc
cld
cmpb
xchg
mov
fwait
aaa
dec
dec
in
or
and
stos
cmp
and
fsubrp
int3
adc
jp
mov
loopne
ss
pop
pop
jg
fadds
test
lret
xchg
mov
jne
mov
sub
pop
sarb
mov
imul
pop
ja
dec
push
mov
insb
aad
jbe
xchg
shll
xchg
inc
insb
jae
add
add
mov
and
aam
add
jne
jae
lods
cld
push
jg
loopne
out
loope
lret
dec
mov
fs
sarb
push
add
notb
adc
sti
push
mov
jp
cmp
add
mov
mov
jns
daa
sub
mov
aaa
push
repz
incb
sub
clc
ss
cmp
cmp
std
sub
in
cmp
xor
mov
sbb
subb
mov
cmpsb
es
dec
lea
add
les
loopne
cmp
enter
fimuls
add
cli
stos
stos
enter
jne
sub
jp
out
movsb
add
inc
cltd
pusha
inc
std
adc
daa
lret
push
test
mulps
add
mov
fucomip
xor
sub
pop
jno
mov
xchg
lcall
mov
pop
stc
xor
pop
mov
test
fldt
adc
sbbb
cmc
int
jecxz
xor
cmp
pop
int3
cmp
out
push
push
pop
add
jg
movb
insl
push
fimull
sub
push
inc
lcall
cwtl
outsb
sub
sbb
pop
lds
mov
sarb
ss
repz
and
dec
loop
xchg
jb
mov
and
adc
outsl
iret
int
shlb
sub
sbb
aas
enter
in
dec
mov
xlat
and
lock
cltd
fiadds
jno
cmp
pop
push
ret
lods
jl
inc
aam
sarl
mov
jp
fs
movl
mov
sbb
fwait
mov
and
jae
insl
dec
popf
xchg
cmpsb
xchg
pop
cltd
psubusb
bnd
dec
js
and
pop
in
fbld
rcrb
adc
and
adc
mov
adc
cltd
mov
or
arpl
int
or
insl
daa
or
imul
rcll
test
sub
cmp
hlt
fwait
bnd
fidivrs
xor
cmp
add
mov
out
xor
pusha
in
xchg
stc
add
and
pop
push
popa
inc
aas
mov
cmc
mov
cmp
in
pop
loop
test
xchg
sbb
push
mov
pop
std
sub
imul
bound
add
or
lcall
cmpsb
int3
es
subb
xor
add
fcoml
aad
hlt
and
lds
sti
fadds
adc
insl
daa
add
push
cmp
in
repz
rcrb
int
jmp
xchg
fbstp
test
loope
xchg
push
jg
mov
xchg
and
and
in
sbb
push
das
push
or
dec
pop
jnp
das
fcoms
add
lahf
out
testl
dec
ljmp
jo
mov
xor
mov
mov
cmp
cmc
sub
das
dec
call
rclb
pop
gs
pop
pop
notb
pushf
pop
mov
dec
inc
sub
clc
stos
adc
push
in
dec
repz
dec
and
cmp
out
pop
sahf
dec
and
sub
cmpsb
outsb
xchg
test
inc
mov
inc
pusha
cmp
cmc
popl
push
lock
pop
adc
pop
icebp
pop
in
sub
jp
fdivl
movsb
ja
dec
xchg
pop
idivl
xchg
out
dec
scas
outsb
fimuls
stos
mov
aad
and
xchg
xchg
jl
push
mov
cli
xor
lcall
rolb
sbb
mov
jne
xchg
adc
mov
shrb
mov
xchg
jge
inc
les
cmc
mov
or
aam
add
popa
push
sbb
sbb
ljmp
fsubrp
aad
jle
dec
cmpsl
stos
dec
xchg
bound
stos
test
or
mov
out
pop
push
sbb
popa
es
xor
icebp
cli
dec
sub
sbb
stc
xor
scas
dec
ret
push
xchg
mov
imul
or
add
mov
in
jae
or
pop
cmc
cmp
in
ret
icebp
jne
sbb
pop
lods
cwtl
mov
xchg
shlb
and
adc
std
testb
jl
jno
ret
cmc
xchg
iret
mov
lock
loope
pushf
lock
pushf
adc
add
push
sysenter
rcll
shrb
sbb
add
or
outsl
sahf
add
push
xchg
into
cmp
sbb
outsl
sarb
pop
jnp
mov
out
cmp
mov
test
bound
sbb
cmpsl
out
jne
ret
sbb
xchg
aas
cld
adc
sti
pop
idiv
mov
xchg
imul
inc
ret
and
xchg
out
repnz
lds
hlt
or
aam
dec
pop
mov
inc
add
mov
loop
and
mov
js
xor
jg
js
or
scas
enter
mov
fcmovnb
aaa
fnstenv
inc
mov
testb
scas
and
jns
or
sahf
push
xor
or
mov
xor
xchg
fcmovnb
inc
pop
int
les
out
add
ret
mov
cld
pop
push
ds
inc
addr16
dec
jle
xor
imul
xor
insl
ljmp
and
xchg
sub
jecxz
lods
sahf
imul
js
adc
pop
loopne
pop
outsb
sahf
rclb
adc
sbbl
cmpb
stos
dec
test
jmp
das
pop
dec
or
xor
lds
cmp
mov
inc
add
out
sub
lock
out
in
add
data16
imul
out
imul
mov
test
inc
add
dec
mov
lods
adc
loop
push
mov
sbb
and
outsb
rcrb
adc
es
push
xchg
add
enter
add
mov
pop
pop
pushf
mov
add
xchg
inc
sbb
hlt
inc
sub
dec
in
mov
test
or
lds
push
fs
icebp
out
repz
call
mov
call
loope
sti
inc
sahf
adc
push
jns
clc
lcall
clc
sti
cmp
jbe
add
adc
movsb
sub
pushf
aaa
cmc
sbb
stc
mov
notl
cmp
push
sbb
insb
mov
adc
dec
loop
inc
mov
lock
lea
cld
push
sbb
or
je
test
pop
pop
cwtl
cmp
mov
jne
je
lods
or
inc
xchg
cmpb
or
test
iret
lods
fistps
inc
mov
je
rolb
jle
scas
sub
mov
fucomi
dec
and
cmp
cmp
mov
fwait
xchg
mov
cmpsl
out
xchg
gs
inc
popf
xchg
cmp
je
or
dec
add
mov
lea
roll
push
jge
xchg
cltd
lret
xchg
xor
and
mov
scas
faddl
decb
add
insl
cmpb
test
jle
pop
mov
push
add
and
pop
imul
mov
mov
sbb
sub
insb
inc
in
mov
les
push
sbb
cmpl
lret
mov
shl
sti
and
and
aaa
stos
fwait
push
xchg
pop
call
jp
fcoml
cmp
cwtl
dec
jmp
add
mov
jns
xor
dec
pop
and
jp
imul
and
adc
pop
adc
in
sub
push
sub
sbb
mov
jl
mov
mov
push
arpl
clc
mov
cmpxchg
jbe
in
cmp
sti
aaa
cmp
gs
lahf
push
js
cmpsl
jo
loopne
xchg
ficomps
loope
jne
jge
aas
add
cmp
jmp
cmp
shrb
pushl
push
sub
push
aas
dec
negl
imul
imul
jge
in
jbe
stos
aam
dec
fildl
and
and
and
push
dec
jg
adc
cmp
push
arpl
adc
xchg
ja
ja
or
mov
enter
mov
push
cmc
cs
cmpsl
rcll
fnstenv
adc
xor
push
test
push
pop
push
shl
test
loopne
or
sahf
xchg
adc
addb
mov
xor
ss
out
adc
je
push
push
adc
pop
mov
ljmp
loope
das
aad
lea
xchg
popa
xchg
ret
popf
shll
mov
mov
in
rcl
clc
lock
add
lret
scas
xchg
xor
pop
sbb
dec
fldt
repz
or
push
cmp
add
push
sbbl
push
or
mov
cmp
pusha
call
data16
xchg
out
out
pop
inc
outsb
std
jp
mov
sub
cs
enter
lahf
sti
lret
stos
fcomi
add
sub
arpl
sub
data16
jns
pop
loopne
repnz
iret
fwait
call
js
ds
pop
das
or
filds
cmp
mov
popf
mov
xchg
into
add
addr16
pop
cmpl
add
out
push
and
mov
pop
inc
jge
pop
insl
and
dec
mov
inc
insb
sti
adc
arpl
imul
push
mov
xchg
popa
cmp
stc
pusha
outsb
mov
inc
sub
mov
xchg
sahf
lret
mov
push
xchg
rorb
leave
cmpsb
push
dec
mov
out
arpl
and
dec
xor
fisubs
fs
xor
js
int
and
mov
cmpsb
dec
lods
cmp
adc
jmp
pop
pop
iret
xchg
jno
rorl
xchg
outsb
xchg
daa
sub
push
cmp
jl
out
add
xchg
in
das
int
ljmp
pop
jge
lcall
xor
jnp
sub
dec
xchg
clc
jge
and
mov
mov
dec
popa
testl
outsl
js
push
rcr
bnd
dec
or
das
dec
mov
xchg
lods
sbb
sbb
fadds
lcall
insb
mov
loopne
and
dec
mov
sbbl
adc
test
repz
shr
dec
mov
mov
aas
jp
mov
push
mov
sahf
cli
dec
mov
mov
pop
mov
fwait
mov
jmp
inc
dec
xchg
mov
je
ficoms
and
push
mov
cmp
push
pushf
or
mov
and
xor
sarb
mov
iret
push
dec
lret
xchg
test
mov
sahf
push
mul
dec
and
fwait
and
xchg
repnz
sbb
xchg
repnz
popa
out
push
push
push
xor
es
int
jo
cmpsl
jnp
lahf
daa
push
mov
fcompl
out
inc
jns
pop
add
push
lea
addl
cltd
fsubl
mov
pop
and
ljmp
dec
scas
out
sub
mov
push
fcoms
in
imul
xlat
fisttpl
mov
sbb
jae
inc
adc
iret
cmp
out
testb
rorb
fbld
adcb
push
insl
data16
xor
push
int3
jmp
pushf
jecxz
scas
addr16
pop
out
push
rcll
push
lea
jle
mov
add
cmp
jl
and
in
jb
out
stos
pmullw
lds
out
inc
mov
imul
mov
xchg
push
push
bound
stc
ljmp
int
pop
int3
mov
pop
push
sti
bound
lret
mov
mov
stos
movsb
in
fmull
insb
mov
mov
aad
clc
push
mov
push
out
sub
jecxz
jo
lcall
add
or
add
lods
mov
icebp
pushf
lcall
lea
leave
stos
mov
sbb
mov
pop
call
in
pop
imul
lods
lahf
cli
sbb
push
stos
push
or
test
addl
negb
push
add
xchg
inc
adc
pop
hlt
jo
gs
imul
std
mov
or
adc
push
and
shlb
pusha
adc
out
ds
test
repnz
addr16
xorl
insl
or
jb
xor
jnp
dec
lock
inc
popf
loope
test
and
inc
sahf
daa
jmp
cmp
xor
dec
lcall
mov
lds
arpl
jns
out
mov
mov
cmp
sbb
jns
jns
push
es
or
lods
out
iret
ja
jb,pt
movsl
jne
xchg
mov
cwtl
mov
inc
ret
pop
js
sbb
push
push
mov
inc
sub
xchg
cmc
fcomp
or
add
or
repnz
inc
adc
ret
jmp
rcll
adc
adc
inc
xor
nop
adc
loope
cmpl
mov
add
popf
imul
jo
pop
lds
add
cmp
fdivl
xor
addr16
addb
das
mov
and
inc
cltd
dec
or
dec
fisttpll
sub
hlt
fisubs
xchg
jge
mov
icebp
xchg
sub
pop
aad
push
or
ljmp
or
orb
loope
pop
xchg
clc
imul
sbb
fsubp
lods
loop
dec
icebp
and
or
sub
mov
sbb
jns,pn
aas
adc
aam
int
or
pop
cmp
enter
insl
icebp
pop
xor
ret
fimuls
inc
pop
adc
mov
fstpl
xorl
js
add
or
ds
je
jecxz
shll
mov
mov
clc
add
out
or
icebp
sub
mov
mov
lret
mov
lret
jl
stos
jmp
add
ds
movaps
cmp
mov
adc
cmpl
filds
or
push
sarl
cld
pop
out
xor
js
lea
cmp
dec
pop
dec
fisubrl
leave
mov
aam
mov
aas
mov
fsubrl
jg
sbb
repnz
ljmp
push
pop
mov
push
adc
icebp
jp
xor
add
das
stc
xchg
inc
add
jns
jae
jno
push
je
dec
stc
je,pt
pop
arpl
adc
fstpt
negl
cmp
out
lcall
add
mov
inc
adc
stos
pop
sbbl
add
out
inc
add
mov
mov
pop
pop
loope
mov
stos
mov
sbb
lock
fmull
cmp
je
xor
daa
fcoml
jns
xor
insb
sti
xor
movsl
push
inc
rep
push
aad
adc
pop
add
push
lods
sub
push
nop
js
mov
mov
movsb
pop
js
xor
mov
cmc
aam
jp
jns
rorl
dec
push
int3
or
sub
cmpsl
shll
fcomps
and
je
insl
xor
jb
dec
pop
pop
mov
fwait
enter
cmpsl
hlt
push
rorb
out
inc
lahf
fcompl
jns
sub
setp
push
and
xor
or
add
dec
inc
leave
lods
scas
mov
addr16
mov
xor
and
cs
leave
mov
or
stc
add
stc
pushf
gs
iret
into
xchg
xchg
pop
std
mov
jnp
adc
or
stos
push
insl
popf
add
dec
loope
sub
test
pop
add
stos
xchg
cmp
xor
mov
and
mov
sub
push
stos
or
mov
add
add
outsl
mov
aaa
sub
jp
xchg
jecxz
push
mov
push
jge
xlat
cmpsl
fldt
sbb
push
push
shl
xchg
lds
xchg
lods
inc
cmp
mov
ret
mov
rcll
das
data16
xchg
and
jle
cmp
mov
mov
lret
push
les
scas
push
gs
push
jp
xchg
repz
cmp
es
stc
mov
push
jno
pushf
out
inc
pusha
xchg
mov
sub
jge
or
fdivs
or
dec
mov
in
lret
dec
fcomi
or
in
sbb
jb
sbb
sbb
and
pushf
repz
jae
and
push
mov
push
in
xor
cmpsb
enter
adc
dec
mov
dec
add
jno
rcrl
xor
outsl
test
adc
jb
or
dec
mov
stos
les
jnp
adc
cld
aas
js
mov
and
sub
or
inc
cltd
mov
out
lret
pop
xchg
xchg
or
ljmp
pop
lock
xor
in
outsb
cs
sub
cld
dec
pop
scas
adc
enter
ljmp
mov
enter
push
jno
cld
add
cmpsl
cwtl
sbbb
and
std
dec
xchg
sbb
mov
pop
pop
xor
sub
cld
lea
mov
push
lods
std
popl
scas
cs
cmpsl
in
pop
and
shll
and
movsl
fwait
mov
xchg
push
gs
xchg
and
jo
dec
mov
cmc
das
jecxz
sbb
jns
sbb
jo
adc
push
and
sub
enter
test
in
test
sbb
testl
repnz
bound
iret
inc
dec
ja
mov
dec
inc
and
adc
mov
inc
jae
mov
add
ja
xor
add
mov
lahf
pop
dec
adc
push
sbb
dec
outsl
aas
sub
pop
mov
int3
xchg
daa
out
ja
std
mov
add
mov
rcrb
shr
jmp
and
or
add
add
pop
cmp
pop
ret
xor
jns
dec
lds
cmp
dec
and
ds
sub
cmpsl
push
and
add
jnp
or
js
neg
mov
cmpsb
pop
test
dec
cli
insb
cmp
divw
sti
pop
scas
sbbb
mov
test
cmp
mov
shrb
sub
insl
iret
and
and
cmpb
xor
in
xlat
mov
faddl
gs
jecxz
outsl
int3
sahf
stc
mov
add
bound
ret
sti
arpl
xlat
inc
pushf
insb
sbb
fwait
test
ja
call
mov
enter
inc
scas
insl
repz
rorl
pop
insb
adc
repnz
add
cmp
lcall
mov
vpackuswb
push
test
sub
sub
fstpl
dec
cmc
xor
xchg
inc
out
and
jb
es
mov
sbb
xchg
js
aam
jns
fsub
mov
mov
push
xor
int
sub
rol
fs
cli
adc
inc
jns
push
mull
lods
xor
fbstp
test
xor
inc
dec
and
cs
jecxz
cmpsl
das
repz
ret
gs
stos
jecxz
and
je
jns
in
data16
mov
xchg
adc
pushf
cmp
push
xchg
popa
fadd
add
call
cmpsl
or
in
fs
out
mov
jmp
mov
cmp
je
iret
and
loopne
hlt
fmull
repz
cmc
sbb
sub
mov
sub
ss
dec
mov
push
mov
nop
rcr
loop
mov
scas
add
push
and
ret
jg
add
jno
add
aad
or
fists
cmp
adc
push
stos
jae
sub
in
fsubrl
add
repnz
sub
dec
adc
push
inc
or
sub
mov
inc
roll
ror
dec
mull
outsb
inc
les
and
pop
pushf
psraw
cli
push
out
mov
call
scas
loop
cmp
adc
sbbl
test
iret
popf
aas
mov
sub
in
cmp
pop
pop
aam
sub
arpl
lods
ds
xchg
in
xor
pop
pop
icebp
and
mov
pop
aam
movsl
mov
mov
out
scas
and
sub
lcall
lret
adc
out
pop
mov
xor
loope
aam
adc
jle
loop
pushf
ret
aad
cwtl
gs
jge
push
cld
lahf
shll
jo
arpl
ficompl
mov
mov
mov
sbb
incl
stos
lods
pop
ljmp
push
mov
inc
cmp
adcl
and
xacquire
mov
push
lret
pop
dec
pop
xchg
push
adc
fstpl
fidivrl
sbb
nop
je
enter
add
clc
enter
push
into
xchg
out
cmc
xchg
xlat
int3
pop
jne
sbb
or
out
xor
dec
popf
call
or
loop
dec
mov
nop
pop
xchg
and
movsl
sbb
pop
add
mov
loopne
std
or
sbb
sahf
nop
lret
lods
outsl
das
orl
dec
push
add
icebp
outsl
icebp
push
mov
cld
mov
test
in
out
and
cmpsb
mov
sbb
sahf
in
int3
scas
mov
in
or
cmc
movsb
sbb
and
sbb
pop
outsl
aad
dec
pusha
cmp
cmc
lcall
add
pop
adc
xchg
push
fadd
stc
gs
sbb
inc
mov
adc
add
repz
aaa
jge
cmp
aam
xor
mov
test
aad
dec
xchg
test
inc
idivl
push
jge
lcall
jbe
out
leave
push
mov
pop
sub
dec
push
or
jge
daa
push
ja
cwtl
in
xor
mov
xchg
pop
adc
mov
movsb
xchg
arpl
aam
scas
cli
cld
out
mov
nop
push
cmp
mov
les
adc
sahf
dec
outsl
push
cltd
fidivl
or
mov
jmp
sbb
repnz
loop
int
xor
cld
jo
scas
iret
std
add
mov
sbb
xor
aas
aaa
add
je
inc
cmp
pushf
dec
sub
pop
add
jl
les
xchg
and
cmpsb
faddl
fsubs
sti
shl
inc
icebp
fistl
pop
dec
insb
dec
popf
cs
push
lea
and
ucomiss
xor
mov
or
lods
icebp
cltd
sub
rol
test
mov
push
jmp
cmpsb
ss
bound
outsl
dec
loopne
test
repz
rcrb
ror
fisubrs
sub
iret
push
cmp
pop
mov
loop
add
leave
push
lret
test
in
stc
leave
mov
push
icebp
rclb
push
dec
scas
test
scas
xchg
sbb
xchg
call
dec
shrl
mov
push
adc
stos
data16
xchg
adc
push
push
out
mov
sub
aam
call
les
xchg
cltd
mov
out
push
jne
shlb
sarb
inc
movsl
je
in
add
xchg
sbb
push
incl
pop
dec
subl
lret
cli
jle
in
decl
sub
pop
out
xchg
mov
inc
in
pop
push
xlat
pop
shrl
jl
or
test
push
pop
or
xor
xor
xor
jnp
sti
adc
outsl
mov
jmp
adc
ds
and
mov
stos
push
adc
dec
int
sub
shll
jl
sbb
cmp
xchg
xor
fwait
lcall
scas
mov
mov
push
inc
lods
lret
std
cmp
mov
push
push
jnp
imul
cmp
add
pop
push
mov
pop
jne
lcall
pop
sub
xchg
and
and
pshufw
lods
iret
pop
stc
mov
stos
mov
push
in
jne,pn
out
push
pop
loope
lds
daa
gs
mulb
inc
popf
rorl
and
leave
hlt
pop
scas
loopne
mov
icebp
fcmovnbe
xchg
mov
adc
mov
cmp
std
jne
out
fnstsw
cmp
movsl
cmpl
loopew
in
test
jecxz
pushf
ret
cmpsl
out
sbb
cltd
adc
jno
xor
popa
out
xor
and
mov
cmpsl
cld
daa
ljmp
les
test
es
stos
insl
je
mov
and
enter
popf
xor
xchg
nop
push
divl
and
jnp
lods
xor
test
lods
sub
mov
pop
lret
imul
fsts
sbb
imul
lds
pop
fs
mov
pop
pop
cmc
or
addr16
lea
sub
mov
incl
mov
jns
fiadds
xchg
fisubrl
shll
or
addr16
adc
ljmp
test
cmpsb
pop
test
jp
inc
ret
sbb
cli
cmc
mov
scas
jnp
and
outsl
repnz
push
popf
sbb
scas
dec
outsl
ljmp
xchg
cmp
mov
and
or
push
push
push
arpl
fwait
bound
pusha
pop
shrb
jo
and
out
mov
imul
dec
xchg
sbb
sub
sbb
shll
mov
icebp
and
rolb
xchg
mov
ds
or
jle
jmp
popa
jge
addr16
out
mov
inc
test
fxch
das
jb
sub
icebp
pop
xchg
shlb
xor
inc
aad
mov
mov
xchg
ficomps
addr16
out
pop
ret
or
pop
push
leave
push
mov
imul
popf
movsl
aas
movsl
mov
dec
mov
pop
bound
mov
sbb
ret
in
mov
pusha
add
jecxz
test
mov
jno
sbb
dec
dec
ds
daa
rcll
test
mov
lds
daa
lods
add
xchg
adc
fwait
shlb
lods
mov
test
mov
rcrb
mov
lahf
add
int3
ljmp
sub
inc
add
mov
jo
scas
mov
mov
loope
adc
adc
push
neg
adc
cmp
inc
loop
mov
jp
sub
jmp
lods
fsubrs
cli
jp
xchg
movsb
dec
xor
mov
fcomp
mov
or
cmpsb
add
int3
mov
popa
nop
hlt
pop
dec
inc
pop
inc
fidivs
test
clc
enter
and
in
ret
movsb
cmp
repnz
mov
xchg
dec
cmp
enter
shll
cmc
ret
mov
dec
mov
sarb
mov
std
imul
movsb
loopne
sbb
aad
test
mov
inc
cmpl
jmp
inc
adc
push
xchg
mov
mov
mov
add
stos
mov
pusha
and
out
push
cld
sbb
mov
mov
cmp
sub
add
and
cmpsl
xor
in
dec
jp
mov
pop
cmp
inc
repnz
das
cmp
xor
imul
mov
leave
mov
xor
mov
jle
cs
repnz
xor
push
pop
or
mov
ret
scas
int3
pop
stos
aas
lcall
push
fucomp
cmp
cmp
dec
out
cmp
jmp
xor
cmpsl
nop
mov
fdivr
hlt
adc
in
sub
dec
and
inc
fcmovb
xor
cli
inc
hlt
data16
cmpsl
rclb
xor
imul
and
inc
and
push
mov
mov
sbb
push
ss
cli
and
inc
mov
icebp
cs
les
dec
or
and
jns
adc
lcall
pop
je
add
xchg
lock
fldt
nop
jo
dec
outsb
mov
jecxz
cmp
testb
addb
int3
ret
pop
jns
push
mov
stos
push
jb
mov
dec
fprem1
mov
inc
loop
call
aaa
dec
or
add
in
adc
xor
dec
mov
mov
stos
jae
lods
adcb
adc
loopne
sub
pop
push
mov
in
add
popf
rolb
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
out
mov
mov
dec
clc
and
fwait
call
mov
dec
add
aas
fnstenv
add
adc
out
add
adc
daa
xor
push
mov
inc
adc
in
ds
mov
ss
lahf
test
fsubr
sub
cmp
fwait
std
sub
dec
lods
cld
adc
pop
add
hlt
cmpsl
jne
jmp
movsb
xchg
pop
and
pop
ljmp
push
dec
cmpsb
icebp
loopne
xchg
pop
dec
jo
jb
in
add
sub
sbb
cmpb
jno
push
out
sub
mov
mov
aad
sarb
pop
fwait
add
mov
int
lcall
mov
call
leave
repnz
push
movsl
xor
aaa
iret
popf
ja
cwtl
insb
outsb
aad
clc
sahf
lcall
data16
hlt
pop
xchg
push
stos
loop
iret
push
cmp
and
mov
hlt
jno
incl
stos
cli
in
stc
inc
movsb
in
sub
shrb
popf
fsubrs
push
and
cmp
lea
xchg
pusha
mov
fdivp
mov
mov
pop
movd
and
mov
iret
and
lock
jecxz
sub
iret
fldenv
mov
ret
das
je
and
sub
pop
xchg
adc
bound
jnp
arpl
sub
pop
xor
mov
push
jbe
popf
xchg
mov
ss
iret
pop
mov
mov
adc
inc
sub
lahf
ja
mov
cmp
adc
cmp
das
loop
adc
jo
pop
dec
cmp
mov
ret
pusha
into
decb
pusha
dec
std
dec
mov
or
or
lock
repnz
fdivl
sub
pop
stos
and
rcrb
sahf
hlt
dec
jl
inc
or
int
inc
pushf
adc
in
pop
stc
or
nop
sub
add
xor
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
andl
in
fcomps
