adc
rclb
lea
sbb
rclb
orb
in
adc
jb
decl
inc
adc
decl
inc
adc
decl
dec
adc
decl
rorb
push
decl
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
mov
test
movl
movl
add
js
les
je
push
call
pop
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
mov
push
xor
cmpb
mov
mov
je
mov
cmp
jne
movzbl
cmp
jne
movzbl
cmp
jne
mov
cmp
mov
mov
mov
je
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
xor
cmp
jne
mov
mov
mov
mov
xor
cmp
mov
mov
mov
jne
test
jne
xor
xor
mov
cmp
mov
jle
mov
mov
mov
add
add
cmp
mov
jle
mov
lea
add
push
push
lea
mov
call
mov
mov
mov
mov
xor
mov
sub
sub
add
cmp
mov
mov
mov
mov
jl
lea
cmp
jl
lea
cmp
mov
mov
mov
jne
lea
push
lea
push
lea
lea
push
mov
call
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
add
mov
add
cmp
jge
neg
cmp
jle
xor
mov
cmp
jl
mov
cmp
jl
mov
cmp
jne
mov
mov
mov
mov
mov
lea
mov
call
test
je
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
je
jmp
mov
jmp
cmpb
jne
jmp
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
jmp
cmp
je
mov
mov
add
lea
cmp
jge
mov
neg
cmp
jle
xor
mov
cmp
jl
cmp
jl
mov
cmp
je
xor
pop
pop
pop
pop
add
ret
lea
jmp
mov
mov
mov
mov
jmp
mov
jmp
lea
jmp
xor
jmp
push
mov
call
test
mov
je
mov
push
push
push
push
mov
call
test
js
mov
mov
xor
jmp
xor
jmp
lea
jmp
mov
mov
jmp
lea
jmp
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
xor
test
push
mov
mov
mov
mov
mov
mov
mov
mov
push
roll
mov
jbe
lea
movzwl
addw
lea
add
cmp
jb
mov
mov
mov
cmpw
jne
sub
cmp
jae
cmp
mov
ja
test
je
mov
cmp
jbe
mov
cmpw
jne
add
cmp
jb
cmp
mov
jb
mov
mov
movzwl
add
sub
js
add
cmp
jbe
test
jg
movw
mov
lea
mov
add
add
cmp
mov
jb
test
jbe
xor
lea
cmpw
jne
add
cmp
jb
mov
sub
je
sub
jne
mov
sub
mov
mov
sub
mov
movl
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
lea
mov
mov
cmp
movl
mov
mov
je
cmp
jne
cmp
jb
jmp
movzwl
movzwl
mov
movzwl
addw
lea
jmp
mov
mov
jmp
cmp
jae
mov
jmp
sub
sub
test
mov
jne
lea
mov
shl
mov
test
jne
test
je
lea
and
add
addw
movzwl
addl
test
mov
je
cmp
ja
mov
mov
mov
movzwl
mov
mov
sub
mov
movzwl
cmp
jge
movb
mov
mov
mov
sub
mov
mov
shl
mov
shr
mov
mov
lea
add
lea
mov
jmp
mov
shr
test
jne
jmp
jle
movzwl
mov
add
mov
mov
mov
mov
mov
jmp
mov
and
cmp
je
mov
test
je
mov
mov
lea
mov
sub
add
cmp
mov
jae
mov
shl
mov
lea
movzwl
sub
test
jg
mov
mov
shl
add
mov
mov
cmp
jne
cmpl
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
jmp
cmp
je
mov
movzwl
movzwl
jmp
xor
jmp
test
jne
mov
mov
lea
add
mov
mov
mov
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
add
add
add
cmp
mov
jae
jmp
mov
mov
jmp
cmp
jne
cmpl
jmp
movl
movl
movl
jmp
mov
mov
movl
jmp
movb
movw
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
shr
and
cmp
mov
je
test
je
cmp
jb
cmp
jae
test
je
cmp
jb
mov
shr
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
sub
add
add
sub
jne
test
je
movzbl
add
sub
add
add
test
jne
mov
mul
shr
imul
add
mov
mul
shr
imul
add
mov
pop
shl
pop
or
pop
ret
pop
pop
mov
pop
ret
test
je
nop
movzbl
add
sub
add
add
test
jne
cmp
jae
mov
mul
shr
mov
shl
sub
add
pop
shl
pop
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmpl
je
mov
mov
push
mov
push
mov
roll
push
mov
mov
mov
mov
mov
mov
mov
movl
jmp
add
jne
test
jne
and
mov
movl
mov
test
jne
mov
mov
movl
mov
mov
shl
sub
and
mov
mov
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
roll
mov
enter
movzbl
add
shr
sub
test
mov
jne
mov
shr
and
mov
mov
movl
mov
test
je
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
mov
movl
cmpl
je
mov
sub
mov
cmp
ja
mov
sub
mov
mov
mov
cmp
ja
sub
mov
mov
sub
mov
mov
mov
add
add
sub
jne
cmp
jne
movl
mov
mov
cmp
jne
cmpl
jae
mov
mov
mov
shl
movl
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
ja
test
jne
mov
shr
movzbl
add
shr
sub
mov
shr
test
mov
mov
jne
movl
jmp
cmp
ja
jmp
cmpl
je
mov
mov
add
subl
movl
jmp
test
jne
mov
shr
movzbl
mov
mov
movzbl
add
mov
shl
mov
mov
shr
sub
and
shr
add
mov
mov
mov
shr
movzbl
movzbl
add
cmp
ja
movzbl
mov
shr
sub
mov
jmp
sub
cmp
ja
mov
cmp
mov
ja
sub
add
mov
cmp
mov
jbe
mov
jmp
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
jmp
cmpl
jne
movl
cmpl
jne
movl
movl
mov
mov
mov
mov
mov
roll
mov
cmpl
mov
mov
je
mov
mov
push
push
call
add
test
jne
mov
mov
sub
mov
sub
add
add
add
cmpl
je
test
je
cmpl
push
jne
mov
mov
sub
call
add
mov
mov
mov
mov
neg
sbb
and
cmp
je
xor
cmp
je
cmp
je
xor
add
add
add
test
mov
je
cmpl
je
mov
pop
pop
pop
pop
add
ret
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
push
mov
out
add
pop
cmp
decl
push
adc
mov
fildl
mov
mov
add
cmpl
mov
mov
mov
je
mov
jmp
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
cmpl
je
cmpl
je
cmpl
jne
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
shr
mov
and
and
sub
cmp
mov
jne
movl
shr
mov
sub
jmp
mov
jmp
movl
movl
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
and
add
mov
shr
mov
and
mov
add
shr
mov
mov
and
add
shr
sub
cmpl
mov
mov
ja
cmpl
ja
movl
movl
mov
jns
inc
add
cmp
jb
mov
cmp
adc
mov
and
mov
mov
add
neg
inc
add
add
pop
mov
jb
mov
cmp
add
in
add
scas
lahf
adc
inc
push
jo
add
inc
push
out
xchg
add
insb
mov
mov
lea
push
push
lea
push
lea
push
mov
movl
call
add
test
mov
jne
mov
mov
pusha
mov
add
add
pusha
cmp
and
pop
jmp
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
mov
shr
cmp
jae
mov
shr
movzbl
cmp
jb
movzbl
mov
fcmovu
inc
add
dec
and
mov
addl
ret
sbb
pusha
cmp
xchg
ret
inc
add
jmp
mov
add
test
xchg
xor
lea
lea
mov
mov
lea
push
push
mov
lea
push
lea
push
movl
call
add
test
jne
mov
lea
push
lea
push
mov
lea
push
mov
mov
lea
push
movl
call
add
test
mov
jne
cmpl
movl
je
movl
jmp
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
jmp
mov
cmp
je
cmp
movzbl
jne
lea
cmp
jb
shr
mov
and
add
mov
shr
mov
sub
add
mov
movl
mov
loop
inc
add
pusha
mov
cmp
ja
cmpl
je
mov
mov
daa
rolb
add
inc
dec
jo
inc
push
sbb
jne
jmp
movzbl
lea
cmp
jb
mov
fs
je
movzwl
mov
and
add
shr
mov
mov
sub
jmp
lea
cmp
jae
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jb
shr
mov
and
add
mov
shr
mov
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
cmpl
jne
movl
jmp
mov
and
shr
sub
movl
mov
jmp
cmpl
jge
mov
mov
cmp
jne
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
mov
shr
mov
movzbl
mov
movzbl
add
mov
mov
shl
mov
sub
and
shr
mov
shr
add
mov
mov
mov
movzbl
mov
shr
movzbl
add
cmp
ja
movzbl
mov
shr
sub
add
jmp
jmp
lea
cmpl
je
mov
movzbl
mov
shl
mov
add
mov
add
movzbl
add
subl
mov
shl
mov
add
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
sub
je
sub
jne
cmpl
movl
movl
movl
movl
movl
jne
jmp
test
jne
jmp
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
mov
sub
mov
add
add
test
je
cmpl
mov
jne
mov
mov
sub
push
mov
call
add
mov
mov
mov
mov
cmpl
mov
mov
mov
jne
and
mov
shl
add
xor
mov
shl
add
mov
shr
add
cmp
jne
xor
mov
xor
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
testb
jne
mov
test
movl
jne
testb
je
movzbl
shl
mov
shr
add
xor
mov
div
test
jne
mov
and
cmp
jne
mov
shr
mov
and
add
test
je
sub
cmp
ja
mov
shl
push
xor
xor
mov
call
mov
add
test
mov
mov
jne
mov
xor
mov
mov
xor
jmp
cmpl
je
jmp
movl
mov
jmp
add
sub
sub
jmp
lea
cmpl
je
movzbl
mov
shl
mov
subl
add
add
movzbl
add
mov
mov
shl
mov
add
mov
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
nop
push
cmc
push
adc
xorb
xchg
xorl
adc
xorl
inc
test
adc
test
adc
test
adc
xchg
adc
push
adc
xchg
adc
mov
adc
mov
adc
push
adc
push
adc
adc
push
adc
in
push
adc
in
push
adc
out
push
adc
out
push
adc
out
push
adc
adc
aaa
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmpl
je
cmpl
je
sub
push
mov
cmp
jae
sub
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
jne
add
mov
mov
cmp
je
mov
cmp
jae
add
mov
pop
pop
pop
xor
pop
ret
mov
mov
shl
movl
movl
mov
jmp
mov
mov
mov
shl
mov
push
push
push
call
add
test
mov
jne
jmp
mov
mov
push
sub
push
push
call
mov
add
pop
mov
movl
pop
pop
xor
pop
ret
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
cmp
push
mov
mov
push
lea
jb
lea
mov
mov
lea
push
push
mov
call
mov
add
test
je
cmp
jne
mov
mov
sub
test
mov
je
mov
push
mov
call
add
cmp
mov
jne
lea
push
call
mov
add
cmp
jne
xor
pop
pop
pop
ret
mov
cmp
jne
jmp
xor
jmp
push
mov
cmpl
jne
cmpb
jne
lea
xor
call
push
movb
call
test
js
mov
test
je
call
test
js
mov
mov
mov
mov
push
call
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
test
je
mov
test
je
xor
mov
xor
mov
mov
mov
cmp
jne
cmp
je
push
mov
push
push
call
mov
mov
xor
cmp
jne
mov
mov
cmp
je
lea
mov
or
lock
dec
je
movl
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
cmp
ja
jmp
cmp
je
mov
mov
sub
mov
cmp
jae
lea
mov
test
je
mov
push
mov
add
push
push
call
add
mov
add
mov
mov
xor
mov
cmp
jb
mov
mov
cmp
je
call
jmp
lea
jmp
mov
jle
cmp
mov
cmp
popf
adc
adc
cld
push
adc
in
mov
call
test
js
push
pushl
mov
pushl
mov
pushl
mov
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
xor
pop
ret
cmpl
push
push
push
lea
je
mov
mov
cmpb
je
mov
push
mov
call
mov
mov
push
push
mov
push
call
test
js
mov
mov
mov
add
push
push
call
test
js
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
je
xor
cmp
je
mov
mov
cmp
jne
xor
pop
pop
add
ret
mov
push
mov
push
push
lea
push
push
push
push
push
lea
mov
call
test
js
mov
cmp
je
cmp
je
xor
mov
movl
lea
cmp
je
mov
cmp
jge
mov
mov
mov
cmp
mov
jne
cmp
mov
mov
jne
add
cmp
jge
cmp
jle
sub
mov
mov
js
lea
mov
sub
cmp
mov
mov
jge
lea
mov
mov
cmp
jl
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
addl
mov
jmp
lea
call
mov
cmp
jne
xor
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
je
testl
je
push
call
add
pop
pop
pop
xor
pop
add
ret
push
mov
push
push
xor
cmp
je
cmp
je
push
push
mov
lea
mov
test
je
pushl
mov
xor
inc
mov
shl
lea
push
push
pushl
pushl
pushl
push
call
inc
add
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
test
push
push
je
sar
add
mov
lea
or
mov
pop
mov
pop
pop
pop
ret
mov
test
mov
je
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
pop
or
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
call
test
jne
add
mov
cmpb
je
mov
mov
leave
inc
add
add
cmpb
je
mov
mov
mov
mov
add
add
add
mov
movzbl
add
add
xor
sub
je
sub
jne
mov
add
add
mov
mov
sub
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
add
call
cmp
jne
movl
mov
xor
test
mov
jne
mov
cmpb
mov
je
mov
lea
push
lea
push
push
call
testl
jne
cmpl
je
mov
movl
mov
call
mov
mov
xor
xor
cmp
je
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
mov
call
mov
lea
call
test
jne
mov
mov
cmpb
mov
jne
mov
cmpb
je
mov
mov
cmpl
je
mov
add
mov
mov
cmpb
jne
mov
mov
mov
mov
call
cmp
jne
xor
xor
lea
cmpl
je
mov
mov
mov
push
lea
push
call
mov
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
add
add
add
mov
sub
mov
mov
sub
mov
mov
sub
mov
pop
sub
pop
sub
pop
mov
mov
pop
add
ret
mov
push
lea
mov
call
mov
mov
lea
push
mov
mov
push
lea
call
cmpl
je
mov
mov
cmpb
je
mov
test
jne
mov
add
mov
mov
lea
mov
cmp
je
mov
test
je
movl
mov
lea
push
push
push
call
add
cmpl
je
test
je
mov
add
mov
mov
jmp
mov
mov
push
lea
mov
call
inc
add
pushl
mov
pushl
mov
pushl
mov
push
call
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
add
mov
xor
mov
test
jne
mov
push
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
pushl
call
test
pop
pop
je
mov
jmp
push
mov
sub
andl
push
mov
push
push
mov
movzbl
push
pushl
and
pushl
lea
push
xor
call
mov
pushl
mov
mov
mov
mov
mov
cmpsb
fiaddl
inc
mov
inc
rorb
mov
lea
mov
call
mov
andl
andl
mov
mov
lea
call
mov
lea
mov
mov
call
andl
test
je
movl
mov
mov
push
call
push
lea
push
lea
push
push
lea
push
pushl
push
call
mov
add
test
je
mov
test
je
testb
mov
je
mov
mov
mov
cmp
jne
mov
mov
lea
call
xor
mov
call
mov
lea
call
mov
test
je
mov
mov
mov
mov
test
je
lea
call
andl
andl
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
cmpw
jne
push
mov
mov
push
lea
push
push
call
cmpl
je
push
mov
cmpl
mov
mov
je
orl
lea
push
mov
call
push
mov
call
push
call
mov
pop
mov
call
mov
test
jne
pop
pop
leave
ret
push
mov
push
push
push
push
push
mov
push
call
mov
test
je
push
call
pop
movl
cmpl
je
push
call
test
pop
je
mov
andl
mov
mov
mov
mov
mov
movl
mov
mov
mov
push
call
test
je
mov
push
call
mov
mov
push
push
push
call
mov
mov
push
call
test
je
cmpl
je
push
call
pop
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
and
push
mov
addl
push
js
mov
mov
or
test
je
xor
pop
mov
pop
ret
mov
cmp
mov
jne
test
mov
jne
cmpb
je
test
jne
mov
push
push
mov
call
movb
xor
pop
mov
pop
ret
mov
call
xor
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
lea
mov
mov
call
test
jne
mov
mov
lea
push
push
mov
call
test
js
add
lea
push
mov
call
mov
mov
mov
push
pushl
push
push
mov
call
test
mov
js
call
cmpl
jne
mov
mov
call
mov
mov
mov
mov
mov
imul
imul
lea
call
mov
push
push
push
call
flds
mov
push
fstps
call
flds
cmpl
call
xor
cmp
jne
pushl
mov
mov
lea
mov
mov
call
lea
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
mov
cmp
je
mov
mov
mov
call
push
lea
mov
call
lea
push
push
call
mov
test
jne
pushl
andl
mov
lea
call
mov
mov
mov
push
push
call
test
jne
lea
mov
test
mov
jne
push
call
test
pop
je
movl
add
add
rorb
cmpsb
in
add
js
call
mov
test
je
mov
mov
push
pushl
call
cmpl
jne
xor
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
test
jne
mov
mov
pushl
mov
push
call
ret
mov
jmp
push
mov
push
push
mov
push
call
xor
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
leave
ret
mov
mov
mov
push
mov
mov
mov
add
mov
xor
pop
ret
int3
mov
mov
testb
mov
je
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
not
and
mov
testb
jne
xor
mov
testb
jne
mov
mov
mov
shr
and
mov
ret
push
mov
lea
pop
jmp
xor
mov
mov
shr
and
mov
ret
push
mov
cmp
je
push
mov
mov
xor
cmp
ja
pop
pop
ret
push
mov
push
test
mov
jne
cmpl
push
jne
xor
lea
call
mov
pop
leave
ret
mov
push
call
jmp
mov
push
lea
call
mov
lea
push
push
call
cmpl
je
jmp
push
mov
mov
sub
call
test
jne
mov
mov
call
leave
ret
push
mov
mov
mov
call
test
mov
je
mov
push
push
xor
call
cmp
je
push
lea
mov
call
lea
lea
mov
push
push
call
pushl
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
pop
lea
call
pop
jmp
push
mov
sub
mov
xor
mov
push
mov
push
lea
mov
xor
cmp
push
mov
jne
xor
cmp
mov
jg
mov
test
je
mov
push
push
call
mov
andl
lea
lea
push
lea
movb
mov
movl
call
call
push
push
push
call
mov
test
je
testl
jne
push
mov
call
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
jmp
mov
mov
mov
call
mov
lea
call
mov
test
je
mov
push
call
incl
cmp
jl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
push
mov
lea
mov
mov
lea
push
and
or
lea
push
push
movl
mov
call
mov
mov
add
cmp
jne
mov
xor
cmp
mov
movl
mov
ja
push
push
push
lea
mov
mov
mov
push
call
mov
cmp
je
testl
je
lea
cmp
jne
mov
pop
pop
pop
mov
pop
ret
lea
sub
mov
mov
push
mov
mov
sub
mov
call
cmpl
je
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
call
mov
xor
test
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
test
push
push
mov
je
cmpb
je
mov
cmpl
mov
jge
push
mov
call
add
lea
mov
movl
call
test
je
xor
mov
test
jne
test
jne
test
jne
mov
xor
push
xor
mov
mov
call
add
cmp
jne
push
lea
push
push
mov
call
mov
mov
add
mov
mov
push
lea
lea
mov
call
test
je
mov
test
je
testb
mov
mov
jne
cmp
je
call
push
push
push
push
call
mov
cmp
ja
mov
cmpl
jge
mov
test
je
lea
push
call
add
mov
cmpl
jne
mov
mov
push
call
add
test
je
mov
mov
mov
push
push
push
mov
call
lea
push
call
add
test
je
mov
mov
pop
pop
pop
pop
xor
call
add
ret
cmpl
jne
cmpl
jne
cmpl
jne
lea
push
push
call
add
test
je
cmpl
jae
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
mov
jne
mov
mov
mov
call
test
mov
js
mov
jmp
cmpl
je
jmp
push
lea
sub
push
push
push
mov
xor
push
call
test
je
mov
pushl
lea
call
mov
cmp
pop
mov
aas
rolb
cmp
mov
xor
lea
mov
inc
push
mov
mov
mov
push
call
test
js
cmpl
je
mov
outsl
inc
add
jge
mov
mov
push
call
test
js
lea
mov
lea
mov
lea
mov
lea
mov
lea
xor
push
lea
push
movl
movl
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
lea
push
lea
push
mov
movl
movl
mov
call
mov
pop
pop
lea
push
push
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
jne
testb
jne
mov
in
inc
add
call
cmpl
je
pushl
call
cmp
pop
je
mov
push
push
push
mov
call
test
je
mov
movw
pushl
mov
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
xor
lea
jne
inc
add
mov
pop
pop
pop
add
leave
ret
mov
push
push
call
jmp
testb
je
jmp
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
pushl
mov
pushl
call
neg
pop
sbb
pop
inc
ret
mov
decl
mov
je
ret
movl
push
movl
call
pop
xor
jmp
push
mov
push
xor
push
push
mov
mov
push
lea
pop
mov
movl
call
test
pop
je
cmpl
jne
pop
pop
mov
pop
ret
call
mov
jmp
pushl
mov
pushl
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
push
call
cmpb
jne
mov
mov
test
mov
jne
mov
mov
jb
inc
add
not
and
lea
cmp
ja
mov
xor
cmp
je
cmp
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
push
lea
push
call
add
mov
jmp
push
push
mov
mov
test
jne
mov
push
push
call
test
je
test
je
mov
push
call
pop
pop
ret
mov
mov
test
je
mov
mov
cmp
jae
mov
test
je
pushl
mov
pushl
push
call
ret
mov
jmp
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
push
call
test
je
mov
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
je
pushl
call
cmp
pop
je
mov
mov
call
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
mov
add
mov
call
mov
cmp
je
pushl
lea
call
lea
call
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
pushl
call
test
pop
je
push
pushl
call
andl
pop
push
mov
lea
call
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
push
mov
sub
lea
cmpl
push
je
mov
mov
mov
xor
pop
leave
ret
push
mov
push
pushl
mov
call
pop
mov
lea
call
mov
mov
pushl
mov
push
call
test
pop
pop
pop
pop
jne
pushl
pushl
call
mov
pop
pop
jmp
push
mov
test
je
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
mov
call
test
je
mov
pop
ret
mov
jmp
xor
pop
ret
push
push
push
mov
test
je
mov
mov
call
test
je
mov
call
mov
test
je
mov
mov
call
cmp
jb
mov
test
mov
jne
test
jne
pop
pop
pop
ret
pushl
call
pop
mov
call
mov
mov
jmp
push
mov
and
sub
push
mov
mov
mov
mov
push
xor
cmp
push
mov
je
mov
push
call
pushl
lea
push
mov
mov
mov
mov
push
lea
movb
call
mov
fbstp
push
pushl
lea
push
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
lea
call
pop
pop
xor
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
lea
call
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
mov
test
pop
jne
mov
test
jne
mov
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
push
mov
push
push
push
push
mov
call
test
je
andl
push
mov
mov
add
cmp
je
xor
mov
cmp
mov
je
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
mov
mov
inc
cmp
jne
pop
cmpl
jbe
mov
mov
cmpb
je
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
cmpl
push
push
jle
cmpl
jle
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
movl
call
mov
mov
lea
push
call
mov
mov
mov
add
call
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
fstpl
mov
fildl
mov
mov
push
fidivl
mov
fstpl
call
fstpl
mov
add
call
test
je
mov
mov
mov
jmp
mov
mov
cmp
je
movzwl
test
je
movswl
call
movzwl
cmp
jne
lea
push
lea
push
mov
push
mov
call
add
test
je
fildl
mov
mov
push
fidivl
mov
push
fstpl
and
fld1
fsts
add
fcomps
fnstsw
test
jnp
lea
flds
mov
fstps
sub
lea
fmuls
lea
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
push
lea
mov
mov
call
mov
mov
mov
test
jne
test
je
mov
mov
push
call
add
test
mov
jne
cmpl
jle
cmpl
jle
mov
lea
call
test
je
xor
lea
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
lea
mov
cmp
push
lea
jne
test
jne
xor
test
jne
mov
mov
and
or
jne
xor
test
mov
jne
xor
pop
pop
ret
mov
mov
mov
mov
pop
pop
ret
mov
jmp
push
mov
mov
mov
push
push
mov
push
add
mov
add
decl
inc
cli
push
add
cmp
add
cmp
je
push
call
cmp
pop
je
mov
orl
mov
pushl
mov
call
pushl
mov
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
cmpb
jne
mov
test
movb
jbe
dec
mov
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
je
pushl
mov
dec
mov
call
jmp
push
mov
call
mov
pop
mov
movb
pop
leave
ret
movl
jmp
pop
lds
inc
adc
incl
std
xor
push
push
mov
push
lea
push
mov
call
test
je
push
push
push
mov
call
test
jne
cmp
je
call
movl
xor
inc
pop
ret
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
test
mov
je
addl
lea
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
push
lea
push
movl
movl
movl
call
orb
cmp
jne
cmpl
je
mov
cmpl
jne
mov
call
test
je
push
mov
mov
call
test
je
mov
call
test
je
push
call
test
je
cmpl
jne
cmp
je
orb
push
call
test
je
add
pop
jne
cmpw
jne
mov
cmpl
jne
mov
movl
mov
add
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
test
je
addl
cmpl
je
mov
pop
pop
pop
mov
pop
ret
test
jne
mov
test
je
push
lea
call
cmp
je
lea
push
push
mov
call
add
test
je
push
push
lea
push
mov
call
test
mov
jne
lea
push
xor
call
test
je
push
mov
mov
call
test
jne
cmp
jne
push
push
push
mov
call
test
je
mov
push
lea
mov
call
test
jne
jmp
mov
call
test
jne
jmp
mov
call
jmp
push
push
lea
push
mov
call
push
push
lea
push
mov
mov
call
cmpl
jne
push
push
push
mov
mov
call
test
jne
cmp
je
push
mov
mov
call
test
je
mov
jmp
lea
cmp
ja
movzbl
jmp
nop
sbb
push
pop
adc
cmp
add
add
add
int3
int3
int3
push
mov
push
call
test
je
cmpl
jne
mov
cmp
jne
mov
pop
ret
orb
xor
pop
ret
push
mov
sub
push
mov
mov
mov
lea
push
call
mov
test
mov
je
andl
push
push
push
mov
add
call
mov
test
je
andl
mov
mov
lea
lea
mov
add
call
push
push
call
xor
cmp
jne
lea
mov
lea
call
push
call
test
pop
js
mov
pushl
mov
push
call
mov
cmp
mov
mov
je
mov
push
call
mov
cmp
je
cmp
jne
pushl
lea
push
call
lea
call
xor
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
call
inc
add
jge
push
mov
call
jmp
add
inc
add
add
push
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
ret
inc
add
add
push
add
decl
or
inc
adc
adc
inc
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
shl
inc
add
xor
and
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
incl
test
out
cmp
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
pusha
push
call
mov
add
mov
popf
add
fiadds
mov
add
jo
jle
ja
add
push
cltd
add
roll
add
add
mov
add
push
push
push
push
push
lea
push
lea
push
call
xchg
rolb
add
xlat
mov
add
mov
fiadds
scas
pusha
add
xchg
in
stc
shrb
out
add
push
lret
bound
add
pusha
stos
in
test
add
addb
add
clc
mov
lcall
inc
in
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
fucomi
enter
pop
addl
jecxz
add
add
test
add
fcomps
jo
testb
add
hlt
xchg
jl
cltd
push
add
add
movsb
lret
add
lcall
push
push
lea
push
call
shr
add
call
add
roll
xchg
mov
push
push
fwait
test
add
pop
enter
add
push
push
add
int3
outsl
lods
mov
add
mov
pushf
ljmp
stos
int3
mov
sub
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
cli
xchg
add
ljmp
lret
jmp
cld
lds
mov
add
add
jge
cmpsl
mov
int3
add
aam
add
in
in
call
push
push
push
push
lea
push
push
push
lea
push
push
call
test
lcall
enter
push
in
pop
add
mov
add
test
push
jge
mov
add
xchg
add
add
addr16
roll
add
data16
pop
lahf
loopne
add
add
rolb
sahf
andb
add
lret
mov
in
fcompl
add
mov
add
mov
dec
pop
push
push
call
push
popa
fs
xchg
add
push
icebp
data16
mov
jb
add
xchg
out
add
add
arpl
cli
fwait
in
add
outsl
add
add
add
ja
roll
in
call
add
push
push
push
push
call
fnsave
lret
ljmp
add
into
mov
test
push
test
add
push
add
fldl
sahf
push
add
push
push
addl
mov
jmp
add
add
xchg
xchg
in
lock
lcall
mov
push
push
push
call
add
ret
out
add
test
add
jge
lret
add
add
ja
add
mov
add
push
add
movl
mov
add
push
push
push
push
call
cmpsb
test
ljmp
repnz
add
bound
pop
push
add
stc
sti
stos
add
movsb
pop
add
add
mov
clc
std
scas
je
mov
ret
add
add
push
lea
push
push
push
push
push
call
mov
add
add
nop
mov
add
jmp
add
js
add
mov
fadds
pop
lea
jmp
cli
add
lock
mov
icebp
mov
add
fwait
jge
cmc
imul
jecxz
test
add
lcall
ret
jo
add
mov
push
push
push
call
pop
cmc
hlt
add
pop
add
int3
add
add
add
ja
add
mov
add
ljmp
add
add
add
mov
add
in
clc
lcall
sbb
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
pop
add
push
jp
enter
popa
int
add
add
jns
mov
scas
call
add
push
lret
push
out
push
test
mov
add
add
add
sarl
lcall
add
jmp
add
cmc
arpl
add
push
push
xor
shl
push
or
inc
add
add
sub
sub
add
rol
pop
ror
shl
pop
push
push
push
call
jmp
add
add
add
ret
pop
pop
add
add
add
mov
add
push
mov
add
sar
add
add
add
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
add
mov
mov
in
add
jb
push
mov
movsb
add
pop
add
repnz
mov
add
mov
add
data16
adcl
add
popf
add
fcomi
addr16
in
fdivr
lcall
push
bound
add
inc
xchg
push
lea
push
push
call
sahf
addl
mov
addb
fistpl
pop
xchg
les
shl
push
idiv
push
fists
imul
add
faddl
in
add
add
add
js
push
je
push
mov
jne
mov
jmp
mov
pop
mov
movl
push
lea
push
push
push
push
push
push
push
call
roll
mov
insb
outsl
add
pop
int3
add
jbe
lret
pusha
iret
add
lcall
ljmp
add
add
popf
add
mov
pop
add
add
add
add
add
add
mov
test
sub
pop
lea
push
push
push
lea
push
push
push
push
push
call
add
add
add
mov
mov
cld
js
add
add
xchg
fbstp
mov
jge
pushf
pop
aad
int
mov
mov
jle
in
loopne
lcall
push
lea
push
push
lea
push
push
call
add
add
add
movb
fiadds
testb
in
ljmp
add
add
imul
imul
add
out
add
scas
add
ja
sub
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
jge
out
add
addl
push
add
add
pop
cmpsb
add
filds
lds
jp
lods
add
in
fcomps
jne
push
push
push
call
add
add
mov
loop
xchg
add
add
pop
rolb
xlat
add
test
movsb
int3
insb
add
push
lcall
add
pop
xchg
call
pusha
xchg
hlt
lcall
or
add
pushl
push
push
push
push
push
lea
push
push
call
add
fcomps
jno
loope
add
add
repnz
les
pop
add
add
fldl
add
add
sub
pop
pushl
push
push
call
add
mov
add
mov
lahf
lret
push
mov
test
add
xchg
icebp
pop
mov
cli
xchg
roll
js
in
clc
pop
call
push
push
not
ror
push
and
add
sub
sub
sub
sub
rol
pop
xor
dec
add
pop
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
cwtl
add
mov
xchg
pop
push
add
aam
subl
mov
fs
mov
add
pusha
mov
push
mov
test
add
into
mov
add
mov
add
add
roll
jne
add
add
add
push
add
lcall
jne
push
push
push
push
push
push
push
call
nop
add
fcomi
xchg
lods
js
add
out
add
add
mov
mov
push
lock
cmpsb
roll
push
add
cmpsl
push
jecxz
add
add
fldl
mov
add
sub
pop
call
push
lea
push
push
call
imul
add
rolb
popa
cli
add
push
add
icebp
je
jmp
add
add
add
jo
mov
add
test
ficoml
fsts
arpl
outsw
mov
add
fsubl
lcall
inc
push
push
push
xor
add
xor
sub
add
sub
pop
xor
pop
push
push
push
call
fstpl
imull
stos
lret
add
mov
xchg
nop
pop
add
int3
pop
xchg
out
popf
xchg
mov
ja
nop
call
fldl
imul
hlt
pushf
pop
add
fsubr
jne
movsb
sub
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
addb
rorl
data16
jno
xchg
push
stos
andl
push
roll
add
pop
push
add
aad
add
add
sahf
imul
lret
push
xchg
jne
fs
add
test
pop
jge
pop
stc
sub
pop
push
push
push
push
lea
push
push
push
call
enter
add
mov
add
mov
mov
add
aam
add
cmpsb
add
push
jae
arpl
stc
mov
mov
sub
pop
call
push
push
call
add
add
mov
jmp
add
add
cmpsb
jbe
pop
add
loop
clc
pop
add
jae
popa
mov
mov
jle
add
add
test
add
xchg
scas
jae
xchg
rol
add
add
mov
add
gs
add
sub
pop
mov
push
lea
push
call
add
jbe
fadd
movsl
rolb
roll
mov
add
add
pop
lds
popl
js
add
shlb
in
clc
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
mov
fcoml
add
int3
in
add
test
add
add
fstpt
add
mov
mov
add
aam
clc
pushf
mov
push
mov
pop
push
push
lea
push
lea
push
push
push
call
add
add
mov
xchg
add
sbbl
add
add
mov
add
pop
mov
xchg
nop
jnp
add
mov
fiaddl
sub
pop
mov
push
lea
push
push
lea
push
push
call
ja
add
lret
fnstsw
add
add
mov
add
xchg
sub
pop
add
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
push
fucomi
add
lds
lds
pop
mov
add
jne
leave
adcb
xchg
adc
add
add
add
ljmp
mov
jns
mov
push
mov
enter
jp
imul
jecxz
add
add
ret
add
add
push
push
lea
push
push
push
lea
push
call
add
add
add
mov
add
xchg
mov
cwtl
xchg
in
mov
add
movsb
add
add
mov
add
addr16
add
push
les
add
add
add
fcomps
add
add
jne
jnp
push
jne
add
sub
pop
add
mov
xor
push
push
push
push
push
push
push
call
add
mov
xchg
addl
out
mov
add
sahf
add
add
cmpsb
xchg
fcomps
add
movsb
ja
in
add
sahf
add
add
iret
push
int3
loop
in
in
add
push
push
push
push
lea
push
push
call
jns
push
add
add
cmpsb
je
jecxz
roll
adcl
mov
add
jmp
mov
add
mov
mov
add
add
add
mov
add
rolb
lcall
mov
xor
push
push
push
push
push
push
push
push
push
call
addb
int3
ja
push
stos
xchg
outsl
test
repnz
mov
enter
in
aad
add
add
add
imul
add
add
arpl
out
ror
je
add
add
xchg
jmp
pop
mov
pop
add
pop
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
jp
jl
stos
add
out
ret
add
push
stc
fsubl
xchg
add
add
add
add
dec
add
cmp
gs
call
add
xchg
lods
notl
add
mov
jb
lds
add
test
mov
xlat
add
add
add
jne
pop
mov
lahf
push
fnstsw
pusha
add
add
lcall
lcall
or
push
push
push
push
push
push
lea
push
push
push
call
add
out
add
add
scas
add
add
in
add
cmc
mov
add
add
test
push
add
repnz
add
add
add
lcall
les
add
push
push
push
push
push
push
lea
push
push
push
call
add
sbbb
icebp
add
pop
add
iret
pop
jge
push
xor
add
lret
call
jne
sub
pop
push
push
push
push
push
push
lea
push
push
call
fbstp
movsb
mov
add
add
cmpsl
fdivrl
int
add
aad
lds
loope
xchg
mov
push
data16
cld
pushf
in
in
lcall
inc
or
mov
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
push
add
stos
add
add
jnp
jnp
add
pop
add
cltd
jbe
fptan
mov
add
mov
shll
jb
add
mov
add
popa
add
fdivr
lcall
enter
push
push
lea
push
lea
push
push
lea
push
push
call
mov
add
addb
out
int3
loope
cmpsb
add
mul
add
cld
add
mov
out
mov
add
add
lcall
rep
push
lea
push
call
in
jmp
add
add
movsl
in
mov
enter
mov
add
popf
add
mov
jb
cmc
roll
int3
enter
or
add
xlat
add
out
xchg
mov
push
push
lea
push
push
call
add
push
add
add
stc
in
mull
gs
add
mov
ffreep
add
add
add
add
in
cli
add
add
mov
add
roll
jp
call
jp
nop
fldl
lcall
jmp
std
shr
jle
stc
add
pop
add
add
push
push
lea
push
push
call
hlt
add
aam
cld
test
add
addl
add
cld
in
cmc
xchg
add
fisubrl
fnstsw
test
add
add
add
mov
mov
add
popl
mov
lods
add
push
mov
add
add
lea
add
sub
pop
add
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
add
mov
outsl
add
sti
push
insb
add
add
in
add
add
add
std
test
mov
mov
add
xchg
add
cltd
std
imul
lock
loope
add
leave
add
faddl
jmp
lock
add
mov
add
lcall
inc
and
mov
push
call
add
enter
fwait
xchg
mov
test
int3
add
add
cltd
sti
add
cmpsb
add
add
add
mov
push
push
push
lea
push
call
add
xchg
movsl
add
add
jo
add
pushf
push
jo
data16
std
loop
add
pop
add
incb
xchg
pop
add
add
add
add
jb
jmp
jne
jo
pop
fwait
out
add
pop
mov
popa
pushf
movsb
add
add
jmp
add
scas
sub
pop
xor
push
lea
push
lea
push
push
push
push
call
add
add
jmp
icebp
jnp
xchg
outsl
les
mov
fimuls
jecxz
addb
bound
add
testb
or
add
call
add
push
push
push
push
push
lea
push
push
lea
push
call
lds
mov
stc
mov
add
add
add
int
imul
push
jecxz
add
push
add
add
mov
shrl
mov
mov
movsl
jnp
add
push
add
add
jecxz
jb
push
movsb
xchg
jge
rcrl
xchg
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
add
add
add
jle
add
add
add
faddl
ljmp
add
mov
in
mov
add
add
add
sub
pop
xor
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
call
bound
add
loopne
jge
imul
push
xchg
stos
out
add
fucomip
lds
in
loopne
lcall
les
add
push
lea
push
push
push
push
push
push
push
call
add
jmp
loop
lods
pop
add
shll
outsl
xlat
add
push
add
pop
mov
add
cli
mov
out
pop
fcmovnbe
loope
jge
addr16
pop
add
lahf
add
rorl
jl
xchg
jno
add
lcall
ret
push
cltd
ja
call
lahf
test
not
in
lcall
iret
add
imull
add
add
add
imul
add
add
jnp
mov
add
add
sahf
sub
pop
add
mov
push
push
shr
shr
shl
push
and
add
shl
sub
lea
rol
pop
pop
push
lea
push
lea
push
push
push
call
add
pop
rcll
add
add
fcompl
add
lods
add
jl
add
les
add
fiaddl
jge
in
mov
movsl
flds
movsb
add
call
mov
loope
ljmp
std
loope
push
add
and
push
add
add
lcall
jne
push
push
push
push
push
push
push
lea
push
lea
push
push
call
clc
lcall
add
mov
add
mov
cmpsl
add
data16
movsb
ret
mov
loopne
mov
cmc
xchg
sarl
add
int3
cmc
add
int
test
mov
scas
add
pop
xchg
mov
sub
pop
call
push
push
push
push
push
push
push
push
call
add
lahf
add
pop
rolb
add
add
popa
add
add
scas
cmpsl
lret
push
jecxz
xchg
add
out
test
lcall
add
or
add
loopne
dec
push
or
not
add
add
inc
not
rol
sub
sub
rol
shl
pop
add
pop
push
push
push
push
push
lea
push
push
call
stc
pop
add
clc
cwtl
adc
add
std
add
loopne
mov
mov
ret
cltd
pop
jp
add
testl
aad
les
push
leave
mov
nop
add
mov
add
les
add
lret
repnz
add
add
data16
jae
add
lcall
push
push
lea
push
push
push
call
stos
scas
add
lret
mov
shll
add
in
lcall
insb
flds
add
fldl
adc
lret
add
loope
in
add
add
hlt
pushf
lds
int3
pop
sarl
popf
movsb
xchg
mov
add
add
add
sub
pop
push
call
push
lea
push
push
push
lea
push
call
pusha
add
call
push
cmpsb
call
arpl
add
mov
out
js
add
add
xchg
repnz
mov
push
add
pop
mov
push
push
add
add
sub
add
pop
push
mov
push
push
push
call
out
xchg
add
jbe
add
ret
ret
loope
add
add
add
mov
fildl
sahf
pushf
scas
add
test
jne
movsb
movsl
add
add
xchg
idiv
imul
add
mov
lods
testl
add
push
shr
shl
shr
pop
add
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
xlat
add
add
add
popa
add
stos
loope
out
test
mov
pushf
ja
mov
add
jmp
fiaddl
add
mov
push
push
push
push
call
je
mov
mov
add
gs
outsl
add
add
aad
int3
cmc
rcrb
add
ja
in
sub
pop
xor
push
push
call
jge
add
jns
push
incb
in
icebp
jl
push
roll
int3
mov
add
add
add
aam
xchg
lds
mov
flds
in
add
xlat
shlb
add
mov
add
add
add
sub
pop
add
push
ror
pop
add
push
sub
pop
push
mov
xor
push
lea
push
push
call
add
mov
popa
call
mov
js
mov
pop
fwait
jl
icebp
add
add
out
out
xchg
pop
bound
lret
fs
pop
add
push
mov
xchg
add
mov
subb
add
add
into
lods
add
lcall
lock
lea
push
push
call
add
stos
pushf
add
mov
push
add
add
cltd
pop
add
add
pop
mov
push
add
pop
add
add
add
ljmp
in
hlt
lcall
push
xor
pop
mov
xor
push
dec
rol
add
pop
rep
mov
xor
push
push
lea
push
lea
push
push
call
neg
mov
add
xchg
add
add
add
pop
pop
popa
add
pop
fidivrl
mov
add
add
outsl
add
in
add
xchg
movsb
stc
add
hlt
add
addb
add
out
xchg
add
pusha
add
add
add
add
add
push
int3
lock
pop
or
je
mov
xor
push
push
push
call
out
add
add
jbe
mov
test
mov
data16
jne
movb
out
push
mov
mov
add
lods
cwtl
xchg
test
add
add
xchg
sub
pop
mov
xor
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
movl
add
push
out
add
add
jne
xlat
into
add
add
add
add
mov
lea
mov
subl
fcompl
repnz
ror
sub
pop
add
push
rol
pop
push
push
lea
push
push
push
push
call
in
hlt
push
xchg
lods
add
mov
add
add
push
faddl
push
push
jbe
jmp
jl
cli
testb
add
xchg
add
add
add
add
lahf
in
loop
add
mov
push
add
out
pop
add
add
add
add
cltd
outsl
add
lahf
sub
pop
mov
push
push
push
push
lea
push
push
call
add
add
add
add
pusha
jo
add
jle
add
add
aad
add
add
xchg
jge
lcall
cli
mov
aam
add
pop
fwait
outsl
jp
sub
fiaddl
cmpsl
jae
iret
pop
xor
fiaddl
outsl
add
sti
sub
pop
xor
push
push
push
push
lea
push
push
call
int
mov
lods
add
add
add
std
int
add
fs
hlt
mov
add
xchg
bound
jl
push
add
mov
add
lcall
les
inc
rol
add
pop
add
push
push
lea
push
push
push
push
lea
push
push
call
xchg
pop
xchg
add
les
add
lcall
pop
mov
add
add
add
add
add
cmpsb
data16
in
add
pop
add
add
add
loop
add
lcall
rep
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
ja
nop
je
add
add
add
xchg
jle
imul
mov
test
add
fiadds
enter
jnp
add
add
in
fdivr
lcall
dec
sub
mov
inc
rol
pop
or
je
push
ror
inc
pop
mov
push
push
call
pop
add
out
xchg
mov
xchg
sti
mov
mov
int
addl
cld
pop
add
arpl
cmpsl
add
std
ja
jecxz
push
jge
mov
add
out
mov
popf
add
in
clc
lcall
sub
movb
add
push
sub
pop
rep
pop
push
push
inc
lea
shl
push
sub
add
add
sub
add
sub
dec
pop
pop
push
push
call
mov
push
movsb
jns
int
cmc
call
rol
add
mov
cltd
add
sahf
lahf
add
lods
add
stos
fsts
pop
mov
add
push
jb
out
iret
shrb
in
clc
pop
pop
push
push
call
fimull
out
add
movsl
add
fldt
add
int3
mov
pop
jnp
xchg
add
add
push
mov
add
push
xchg
add
xchg
add
jne
push
push
call
loop
jge
add
add
add
rcrl
fisubrl
add
jecxz
add
std
clc
test
add
jmp
mov
popf
mov
sub
pop
mov
push
push
push
lea
push
call
add
push
fcmovnb
add
fmul
arpl
arpl
ljmp
push
add
add
push
jp
filds
test
mov
rolb
les
int
add
test
add
fiaddl
add
add
lcall
inc
and
jmp
push
push
push
push
lea
push
push
call
push
jne
pop
pusha
mov
test
add
lds
cmpsb
bound
add
lods
add
add
lock
add
mov
add
lahf
add
sub
pop
push
mov
push
sub
shr
pop
add
push
sub
not
pop
push
push
push
push
lea
push
lea
push
push
call
pop
add
jnp
jle
add
je
add
pop
jp
add
add
xchg
lcall
xchg
add
arpl
lcall
push
push
not
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
jmp
add
cmc
add
add
cld
lock
jbe
add
movsl
add
lcall
add
incb
lcall
inc
cld
push
push
lea
push
push
call
add
loope
add
mov
xlat
add
add
add
add
add
add
push
jmp
add
movsb
imul
add
add
add
test
outsl
add
add
in
xlat
out
add
mov
add
imul
leave
mov
lcall
push
push
push
call
pop
xchg
add
lods
jecxz
lock
add
test
pusha
mov
add
push
ljmp
add
ja
flds
add
aam
add
clc
mov
add
scas
xchg
add
loope
add
add
add
add
cltd
add
mov
lock
jmp
addr16
add
add
lcall
push
push
call
test
xchg
cltd
mov
jo
xchg
stc
add
add
sahf
xchg
stos
add
add
add
imulb
fisttpl
movsl
add
repnz
add
ja
add
rolb
pop
push
rol
pop
leave
push
push
push
push
push
lea
push
push
lea
push
call
pop
add
add
cld
in
push
into
push
add
add
push
add
mov
add
lahf
mov
mov
stc
fsubp
add
test
movsl
push
xchg
add
in
loopne
lcall
or
push
push
push
push
push
lea
push
push
push
lea
push
call
xchg
add
out
add
sti
add
fcmovb
add
rolb
add
add
lods
mov
add
sbbl
pop
ljmp
lret
add
add
fists
pushf
repnz
lret
call
lcall
in
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
jae
push
enter
add
movb
add
test
jecxz
add
movsl
jecxz
mov
mov
add
movsb
add
mov
faddl
mov
into
stos
lds
scas
add
loopne
add
add
loope
mov
arpl
mov
pop
add
fdivr
lcall
push
push
ror
lea
xor
pop
push
push
add
pop
push
push
add
add
inc
pop
movl
push
dec
sub
inc
pop
addl
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
push
add
add
add
mov
add
mov
add
xor
add
mov
add
push
imul
pop
test
je
push
sub
shl
pop
mov
pop
push
push
lea
push
push
lea
push
push
lea
push
call
cwtl
jb
in
lods
cmp
roll
add
jle
testl
out
add
jmp
cwtl
fwait
jnp
jmp
add
in
jle
add
nop
iret
jle
cli
add
sub
pop
pop
pop
push
add
add
pop
pop
push
push
call
cli
mov
imul
movsb
add
mov
add
lods
add
stc
cmpsl
icebp
movsb
mov
xchg
int3
mov
mov
add
add
test
stos
pop
add
add
add
add
lcall
ret
push
add
pop
push
push
rol
pop
mov
push
ror
pop
add
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
xchg
push
roll
xchg
add
lock
jge
fildl
add
add
push
ja
movl
add
pop
fisubl
xorl
xorl
sub
pop
push
push
inc
sub
pop
push
push
add
add
sub
pop
push
push
shr
sub
pop
testl
push
lea
push
push
push
push
push
push
push
lea
push
call
add
out
add
pop
sti
jne
in
addb
fnsave
outsl
lock
roll
jo
fwait
xchg
fucomi
add
test
add
mov
add
jle
mov
mov
loope
enter
sub
pop
addl
push
push
push
lea
push
lea
push
call
add
lods
push
mov
add
mov
lret
roll
pop
add
add
add
add
add
add
popa
loop
icebp
add
mov
jmp
add
add
in
lock
lcall
pop
cld
call
ss
push
lea
push
push
call
out
pop
jp
add
add
add
cmpsl
add
add
movsb
pop
add
push
add
stc
insb
mov
mov
add
arpl
out
add
xchg
add
pop
les
lahf
bound
sub
pop
mov
pushl
push
sub
not
sub
xor
pop
push
push
shr
shr
add
pop
push
call
push
dec
rol
ror
pop
cmpl
jne
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
pop
stos
add
in
add
scas
add
add
jns
add
mov
call
stos
in
repnz
filds
lahf
mov
stos
adcb
add
in
cld
add
fwait
add
sbb
lds
addb
xchg
je
in
sub
pop
pop
pop
push
pop
pop
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
lcall
loop
ljmp
add
cli
add
add
xor
rcl
add
xchg
sub
pop
pop
leave
push
push
push
lea
push
push
push
push
push
push
call
hlt
lahf
cli
pop
add
xorb
add
arpl
add
add
aam
fmul
stos
add
fs
test
fdivrl
add
add
sub
pop
ret
push
sub
pop
push
push
push
push
push
push
push
push
call
push
mov
mov
jle
add
cmpb
shll
aad
in
add
pop
add
jge
add
add
addb
add
lods
add
add
add
add
popa
mov
stos
add
mov
sub
pop
mov
push
sub
xor
pop
add
push
lea
push
push
call
add
add
rcll
iret
jb
subl
add
xlat
bound
mov
movl
insb
cmc
add
add
push
fs
add
incb
loopne
movsl
add
pop
jmp
subb
add
jo
xchg
jne
add
outsl
add
mov
add
xchg
add
add
add
add
cmpsl
sub
pop
push
push
dec
sub
shr
shl
pop
push
push
push
sub
add
pop
push
push
push
call
xchg
stos
mov
add
xchg
call
pop
test
add
jl
add
fs
stos
jp
jle
add
push
in
push
mov
arpl
cmpsb
fsubrs
testl
cld
or
add
push
shl
add
pop
push
push
lea
push
push
lea
push
push
push
push
call
stc
add
int3
lret
pop
push
add
add
into
into
mov
mov
ja
mov
out
add
adcl
repnz
mov
mov
add
jle
roll
add
add
hlt
imul
xchg
popa
add
lret
out
pushf
test
int3
add
add
add
lcall
mov
push
push
push
lea
push
push
call
jnp
insb
out
fsubrl
add
add
rolb
fldl
xchg
add
insb
hlt
lods
pushf
out
add
add
add
add
add
addl
mov
add
add
mov
idivb
push
push
lea
push
call
aam
filds
add
add
mov
mov
add
push
scas
add
iret
add
add
xchg
add
stc
fmull
mov
pop
cltd
add
add
xchg
mov
stos
jbe
repnz
movb
add
mov
add
icebp
pop
sub
pop
call
push
add
shl
pop
subl
push
not
pop
cmpl
jne
push
push
push
push
lea
push
lea
push
push
call
fldl
je
jns
mov
test
add
add
mov
xlat
add
add
add
arpl
sub
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
stos
add
add
in
pop
add
add
add
mov
mov
test
add
add
popf
push
add
mov
push
stc
add
call
add
add
add
add
clc
sub
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
call
aam
add
mov
lahf
add
int
add
add
out
lods
add
pop
add
add
jnp
add
aad
jle
in
add
add
add
mov
pop
data16
add
jb
lods
push
lea
add
mov
sti
repnz
rolb
sub
pop
pop
leave
push
push
push
lea
push
push
push
push
push
call
pop
lret
mov
addr16
loop
push
sahf
push
push
imul
pusha
jecxz
add
cmpsl
lods
mov
add
add
add
fmul
add
mov
add
fldl
add
pushf
add
cli
ror
add
add
add
insb
mov
lcall
push
push
add
add
pop
mov
push
lea
push
lea
push
push
push
call
pop
add
sahf
test
pop
lcall
in
shr
movl
add
add
mov
mov
lods
xchg
push
pop
add
sbbb
idiv
in
in
and
add
cld
push
dec
not
pop
push
push
push
push
push
call
jae
pop
out
add
add
movb
ror
add
mov
fildl
add
pop
add
lds
add
add
add
lods
xchg
add
out
jae
jecxz
push
add
push
iret
pop
test
add
pushf
xchg
mov
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
fists
add
into
fdivrl
cli
leave
xchg
lret
add
add
add
pop
add
xchg
pop
add
sar
fwait
rcrb
push
add
add
frstor
insb
add
lea
mov
push
mov
sub
pop
push
push
push
shl
dec
rol
push
xor
add
xor
rol
xor
dec
sub
sub
pop
rol
shl
pop
push
lea
push
push
push
push
push
push
push
call
xchg
pop
cmpsl
jbe
add
push
jns
add
stos
rclb
add
in
out
mov
mov
in
add
mov
add
add
rol
mov
repnz
lcall
push
pop
jo
in
fldl
scas
add
lock
faddl
jne
push
ror
sub
pop
call
push
lea
push
push
call
add
pop
imul
aam
bound
mov
pushf
add
add
jmp
test
mov
sarl
add
add
add
add
add
jmp
sub
pop
call
push
push
sub
shr
push
and
add
xor
xor
add
inc
sub
sub
pop
sub
pop
push
lea
pop
pushl
push
lea
pop
call
push
push
call
out
pop
testl
add
fs
xchg
nop
aam
jbe
xchg
jle
add
filds
fisubs
add
jae
add
pop
add
add
add
clc
js
jne
in
ret
push
xchg
xchg
aad
ret
jmp
movb
xlat
xchg
add
xchg
scas
add
sub
pop
call
push
push
sub
ror
dec
push
or
inc
add
sub
dec
dec
dec
sub
shl
ror
ror
pop
sub
ror
pop
push
lea
push
push
call
add
faddl
push
add
mov
add
loop
mov
push
add
add
add
push
lret
jo
add
jne
push
shr
add
dec
pop
call
push
push
push
push
push
lea
push
call
popl
add
add
add
mov
rcr
aam
mov
pop
push
mov
push
add
add
add
fildl
add
add
movsb
outsl
pop
mov
xor
add
movsl
repnz
pop
add
add
call
call
push
push
push
or
inc
add
ror
sub
add
sub
ror
pop
add
shr
pop
push
inc
shr
pop
pushl
call
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
xorb
add
lea
mov
out
add
aad
add
pop
add
xchg
ljmp
add
xchg
xchg
add
jno
pop
aam
jge
add
fisubl
std
add
sahf
jae
add
mov
in
fcompl
shrb
xchg
gs
push
shl
add
inc
push
xor
add
add
sub
add
pop
inc
sub
pop
push
not
sub
lea
pop
pushl
call
push
add
lea
add
pop
call
push
push
sub
lea
ror
push
and
add
sub
lea
add
dec
sub
inc
sub
pop
rol
add
pop
push
ror
pop
pushl
push
push
call
add
add
add
pop
stos
pop
mov
add
add
imul
add
cli
add
test
cmpb
add
movsl
add
add
sahf
je
add
add
mov
les
xchg
test
jnp
mov
cwtl
add
fwait
add
rcl
mov
popl
test
add
push
pop
call
push
push
not
push
push
pop
add
shl
sub
add
pop
not
inc
dec
pop
push
push
push
push
push
push
push
push
push
lea
push
call
sarl
add
arpl
pop
xchg
sti
add
add
popf
std
jmp
add
push
add
sti
jbe
pop
add
add
in
fdivr
lcall
jne
push
sub
shr
xor
add
pop
call
call
push
push
push
xor
add
not
sub
add
lea
shl
inc
pop
shr
rol
pop
push
push
push
push
push
call
add
iret
roll
add
popf
fbstp
add
leave
mov
add
add
fisubl
mov
imul
add
int3
scas
xchg
pop
test
add
lcall
jne
push
lea
push
push
push
push
lea
push
call
add
jge
mov
jnp
les
add
addr16
add
add
mov
add
ja
movl
test
push
add
stc
jno
ret
bound
add
add
add
add
pop
add
sub
pop
call
push
add
not
sub
pop
call
mov
push
push
push
call
mov
cld
add
jmp
add
addb
lds
add
jbe
add
mov
nop
cld
mov
jbe
lahf
fmul
jb
jecxz
jp
add
push
mov
jns
jl
lret
pop
addr16
xchg
jo
add
add
mov
addl
js
in
hlt
lcall
inc
cmp
lea
push
lea
push
push
push
call
les
aad
add
mov
les
xchg
out
add
add
add
in
mov
xchg
cld
add
mov
out
xchg
repnz
aam
into
add
xchg
in
jae
add
add
xchg
popf
sub
pop
sub
push
push
push
push
lea
push
call
add
mov
add
filds
jle
lods
jle
add
popa
clc
cmc
jl
mov
add
xchg
aam
pusha
sub
pop
mov
push
push
push
push
lea
push
push
call
les
add
pop
add
int
roll
add
pop
ljmp
bound
push
push
out
add
ljmp
test
in
call
push
ror
pop
add
push
push
lea
push
push
push
push
push
push
lea
push
call
icebp
ja
addl
mov
fildl
jl
jge
ret
hlt
flds
movsl
sarl
mov
rolb
jns
mov
in
fcompl
inc
cld
push
lea
push
push
push
push
call
movsl
enter
add
xchg
add
lock
add
pop
add
test
in
jecxz
mov
xchg
add
add
in
cwtl
add
add
andb
inc
shr
pop
add
add
push
push
call
add
add
add
sti
xchg
add
add
jnp
mov
add
add
add
mov
jp
out
mov
arpl
mov
push
push
push
push
push
push
lea
push
lea
push
call
pusha
fldl
add
add
add
xchg
roll
cltd
gs
test
faddl
xchg
mov
cmpsb
rcrb
mov
stos
add
test
icebp
add
add
mov
clc
mov
jno
mov
add
add
shr
add
lcall
nop
nop
nop
nop
push
push
call
xchg
add
push
data16
test
testl
add
lea
popf
add
mov
add
insb
add
test
incb
lcall
pop
outsl
jne
push
push
call
add
add
add
xchg
mov
scas
testb
add
add
add
add
add
imul
cwtl
lcall
sub
pop
cmp
jne
push
rol
xor
rol
pop
mov
push
sub
xor
lea
pop
movl
jmp
push
lea
push
lea
push
push
push
push
call
add
pop
add
add
in
cwtl
clc
aad
xchg
add
pop
xchg
pop
push
cltd
add
mov
test
sub
pop
mov
mov
push
shl
xor
pop
sub
jne
mov
push
lea
pop
movl
push
push
push
push
push
push
push
push
push
lea
push
call
mov
arpl
add
mulb
ja
add
leave
movl
les
add
aam
pop
mov
stos
popf
scas
pushf
mov
scas
add
push
add
std
fldenv
add
xchg
add
aam
fldl
out
xchg
add
in
mov
popf
jnp
lea
add
add
adc
jne
mov
push
push
lea
push
lea
push
push
call
pop
pop
fnstsw
lods
xchg
add
add
mov
jbe
add
add
into
pop
add
jae
sahf
mov
fadds
pushf
add
add
loopne
lcall
inc
cld
push
not
pop
mov
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
fidivrl
add
insb
jge
lods
add
add
cltd
add
xchg
cmc
in
test
jmp
mov
stos
test
shll
jecxz
add
cli
add
test
add
push
xor
sub
pop
mov
movl
push
lea
push
push
call
add
add
sahf
stos
pop
arpl
sti
out
mov
outsl
add
jp
cli
add
add
pop
rolb
rcrl
add
movsl
add
add
add
mov
gs
test
mov
add
popl
sahf
push
add
divl
scas
ljmp
jmp
mov
push
pop
cmpw
jne
push
xor
pop
mov
movl
push
push
lea
push
lea
push
call
hlt
sbbl
lods
sti
add
add
test
test
add
std
clc
cld
pusha
add
add
pop
pop
add
icebp
xchg
addl
add
mov
leave
add
push
add
add
sub
pop
jmp
push
dec
sub
shl
shr
pop
pushl
push
push
push
push
push
lea
push
lea
push
call
cmpsb
imul
add
add
add
je
add
addl
into
enter
add
xchg
mov
iret
add
xchg
add
pop
push
rol
pop
mov
mov
push
lea
rol
pop
mov
push
push
dec
inc
add
push
xor
add
lea
ror
add
sub
sub
pop
inc
dec
dec
pop
push
push
push
push
push
call
add
cli
add
imul
mov
add
fsts
mov
lahf
xlat
ljmp
add
scas
add
mov
ja
add
add
add
add
add
xchg
jae
pop
add
mov
sub
pop
push
push
lea
lea
lea
ror
pop
call
push
inc
sub
pop
cmpl
je
push
push
not
push
and
add
ror
xor
add
sub
inc
pop
sub
pop
push
push
push
lea
push
call
add
pop
loop
clc
add
jmp
mov
lcall
stos
mov
add
jae
test
jmp
xorl
call
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
stos
outsl
out
add
add
je
lods
idivl
stos
mov
std
mov
add
enter
add
addb
jne
jne
cmpsb
add
in
fcomps
js
int3
fldz
ret
inc
or
add
mov
push
or
inc
add
rol
ror
add
sub
add
pop
xor
dec
pop
push
push
push
lea
push
push
call
jnp
xlat
add
mov
loopne
add
xchg
push
je
add
add
pop
jns
mov
push
jbe
in
add
push
call
push
shl
pop
cmpl
je
push
push
sub
push
or
not
add
sub
inc
pop
add
shr
add
pop
push
push
push
push
lea
push
call
add
fadds
mov
jl
pop
pop
add
xchg
add
jnp
mov
popa
jmp
imul
xor
pop
add
in
pop
push
push
push
call
imul
mov
xchg
data16
lret
hlt
fcom
add
add
add
add
pop
jmp
push
mov
aad
jp
push
add
sub
pop
call
push
shl
sub
pop
cmpl
je
push
push
add
lea
push
or
not
add
lea
shl
ror
sub
ror
shr
lea
rol
pop
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
lods
std
fildl
mov
add
jle
cltd
mov
add
popa
push
mov
js
jno
popa
add
add
stos
fcomps
xchg
in
lods
mov
jnp
lea
and
add
xchg
lcall
push
push
lea
push
push
push
push
call
loope
add
mov
jne
push
pushf
add
test
mov
cmpsl
add
add
movb
add
mov
data16
add
add
addb
in
call
call
push
sub
pop
cmpl
je
push
push
ror
push
or
inc
add
add
lea
sub
inc
pop
lea
sub
lea
pop
push
ror
pop
push
push
not
sub
pop
call
push
lea
push
push
call
add
push
add
add
into
add
out
clc
lret
ljmp
stos
add
out
stos
add
add
pop
add
add
scas
mov
add
iret
add
add
imul
sub
pop
cmpl
je
push
push
shl
sub
push
or
inc
add
sub
dec
ror
add
sub
lea
shl
pop
inc
pop
push
push
push
push
call
lcall
mov
cmpsl
jp
mov
jne
imul
out
stos
fimuls
add
popa
add
ja
mov
add
mov
add
mov
add
add
mov
bound
sub
pop
push
push
shr
sub
pop
call
push
push
call
add
in
add
jbe
lret
add
int3
add
add
not
push
fdivr
add
push
mov
in
add
ljmp
add
push
sbbb
add
add
cld
push
jp
cmc
test
sub
pop
cmpl
je
push
push
push
and
add
inc
sub
sub
inc
sub
pop
rol
not
pop
push
shl
sub
add
rol
pop
push
call
push
push
push
push
push
call
add
mov
add
add
stos
lock
jnp
add
add
fsubrl
clc
add
push
add
add
jo
in
ror
add
add
bound
mov
jo
icebp
add
sti
add
data16
xchg
into
add
outsl
sub
pop
cmpl
je
push
push
rol
rol
push
and
add
dec
shl
not
sub
pop
shl
shr
pop
push
push
push
push
push
push
lea
push
push
push
call
call
out
imul
add
sti
scas
stos
add
add
gs
add
add
jae
add
cmpb
xchg
movsl
out
add
mov
add
lcall
call
push
push
push
push
push
push
call
movsb
loope
add
push
add
add
add
js
add
mov
add
bound
add
add
orb
cmpl
je
push
push
inc
push
xor
add
shr
shr
sub
shl
xor
pop
add
pop
push
xor
rol
dec
pop
push
push
push
push
push
lea
push
push
push
push
push
call
pusha
addl
pop
testl
add
les
add
add
add
leave
jbe
add
jae
add
add
faddl
fwait
pop
add
pop
add
add
enter
mov
add
pop
imul
push
lea
push
call
lret
jne
pop
addb
add
mov
add
add
add
sahf
notl
jle
add
mov
mov
add
add
add
add
insb
push
add
sub
pop
cmpl
je
push
push
lea
sub
push
or
inc
add
sub
sub
shr
add
sub
pop
shl
inc
pop
push
rol
dec
pop
push
push
pop
call
push
add
pop
cmpl
je
push
push
xor
rol
push
sub
add
ror
ror
sub
xor
sub
ror
pop
shr
ror
sub
not
pop
push
push
push
push
push
push
push
push
push
lea
push
call
shll
nop
not
addr16
add
add
aam
jnp
fcomps
ret
add
popl
add
jmp
rcrb
push
mov
add
push
ret
sub
lcall
push
push
push
call
lods
iret
lret
jmp
fsubrp
in
mov
loopne
mov
mov
add
add
ret
movsl
add
add
jno
sub
pop
call
push
lea
push
call
xchg
add
cmpsb
sti
push
add
mov
add
int3
mov
mov
push
leave
add
lret
sub
add
jl
in
clc
pop
cmpl
je
push
push
lea
shr
inc
push
and
add
rol
xor
shr
dec
sub
sub
pop
add
pop
push
add
not
add
pop
push
push
dec
inc
ror
pop
call
push
xor
not
pop
cmpl
jne
mov
push
push
push
push
call
stos
push
stos
sbbb
xchg
add
push
jae
push
xlat
add
rolb
stc
pop
add
in
add
cld
pop
pop
add
sub
pop
movl
push
add
xor
pop
jmp
push
push
push
push
call
add
add
into
add
stc
movsl
bound
cld
in
mov
add
xchg
lods
add
pop
leave
add
add
fstpl
imul
enter
mov
add
add
jmp
mov
add
in
popa
add
add
mov
in
lock
lcall
rclb
pop
pop
push
push
call
mov
push
add
mov
mov
add
jns
jle
test
push
add
add
flds
sub
pop
pop
pop
push
push
push
push
call
add
jno
push
push
in
add
add
ret
shll
add
cmpsb
add
add
add
cmpsb
out
hlt
ret
add
sub
pop
pop
leave
push
push
push
call
hlt
popa
cmc
leave
add
mov
xchg
add
call
roll
rcrb
imul
xchg
jo
test
sti
add
push
roll
aam
fldl
add
add
add
call
xchg
scas
push
cld
out
int3
push
add
add
hlt
pop
ret
push
push
call
add
roll
add
add
add
add
mov
add
cmc
push
add
add
add
xlat
add
xchg
pop
mov
shrb
add
add
add
subb
push
cwtl
add
mov
icebp
hlt
add
int
imul
gs
sub
pop
push
push
inc
dec
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
into
imul
addr16
mov
rcll
push
leave
xchg
add
add
add
add
in
add
in
push
push
push
push
push
lea
push
call
add
jmp
mov
stc
leave
add
jmp
lods
mov
pushf
movsl
add
push
pop
jne
add
add
lcall
data16
xlat
movsl
out
add
add
mov
add
pushf
mov
testb
add
movsb
sub
pop
cmpl
jne
push
push
rol
inc
add
push
or
not
add
add
sub
rol
sub
add
shl
pop
ror
pop
push
dec
shl
pop
pushl
call
push
ror
lea
rol
pop
push
call
push
rol
pop
jmp
cmpl
jne
push
add
not
shl
sub
pop
mov
push
dec
sub
shl
pop
call
push
shl
add
shr
pop
ret
jmp
push
push
lea
push
push
push
push
push
push
push
call
mov
imul
popf
add
loop
add
xlat
lods
add
mov
out
fiaddl
add
add
push
mov
add
add
add
add
test
in
add
lock
stos
cltd
add
xor
add
add
add
add
sub
pop
cmpl
jne
push
push
rol
push
push
pop
add
inc
shr
rol
sub
sub
sub
xor
pop
shl
pop
push
not
ror
xor
pop
pushl
push
dec
sub
pop
call
push
lea
push
call
test
fwait
pop
add
pop
jnp
add
mov
add
pop
add
add
push
push
add
add
add
imul
cli
fwait
insb
add
mov
mov
xchg
std
fdivrp
xchg
gs
add
pop
add
jp
in
clc
lcall
add
rclb
rolb
rcrl
lods
adc
into
mov
repnz
pop
cmpl
je
push
ror
not
pop
cmpl
jne
push
dec
add
pop
mov
mov
push
push
push
call
add
jmp
add
add
add
add
pop
add
add
ret
pusha
xchg
jae
add
je
add
add
add
add
in
push
scas
mov
push
loopne
test
pop
lea
jae
nop
sub
pop
push
push
push
push
push
call
add
pop
add
add
ja
jecxz
mov
addl
add
jmp
add
xchg
add
add
add
in
push
add
add
notl
jl
add
lcall
inc
sldt
push
push
add
add
lea
shl
push
or
inc
add
ror
add
dec
sub
sub
ror
add
pop
xor
rol
pop
push
sub
pop
pushl
push
push
push
push
lea
push
call
mov
loop
pop
add
fsubs
add
movsl
xchg
add
icebp
fiaddl
jmp
mov
push
add
cmc
add
int
bound
mov
scas
mov
addr16
mov
add
add
add
bnd
add
add
xchg
out
jge
push
sub
pop
call
push
dec
add
pop
call
push
push
sub
push
xor
add
not
sub
rol
pop
rol
add
rol
pop
push
shr
xor
pop
pushl
call
push
push
push
push
call
jmp
add
mov
xchg
add
fiadds
add
cli
addb
lcall
bnd
mov
xchg
add
out
mov
shrb
add
add
add
ljmp
add
add
lods
nop
add
lcall
jo
mov
pop
add
mov
sub
pop
call
push
push
rol
shr
push
push
pop
add
sub
shl
shl
rol
pop
xor
pop
push
rol
pop
pushl
push
push
push
push
call
add
add
arpl
xchg
lcall
test
pusha
cld
add
add
add
add
add
rcl
mov
hlt
fiadds
push
add
pushw
in
sub
pop
call
push
lea
pop
call
push
push
add
push
and
add
add
rol
shr
sub
xor
ror
pop
sub
pop
push
push
call
add
pop
add
les
js
int
add
insb
fldl
imul
add
js
aad
push
mov
lods
add
sub
pop
pushl
push
inc
pop
call
call
push
push
sub
sub
dec
inc
push
sub
add
add
sub
add
add
shl
pop
sub
shr
pop
push
shr
sub
pop
pushl
push
lea
push
call
add
xchg
rorl
pop
out
add
pop
add
add
mov
mov
mov
rclb
pop
add
cmpsl
xchg
push
push
data16
push
scas
flds
xchg
sub
pop
call
push
sub
pop
call
push
push
not
dec
xor
push
and
add
add
not
sub
sub
sub
dec
pop
not
dec
inc
pop
push
dec
add
pop
pushl
call
push
push
push
push
lea
push
push
lea
push
push
call
addl
xchg
add
mov
add
pop
out
add
mov
cmpsb
mov
add
into
fadd
lea
add
in
pop
add
add
fisubl
add
divl
int3
mov
xchg
add
stc
sub
pop
call
push
push
push
or
not
add
add
sub
inc
add
pop
shr
pop
push
pop
pushl
call
push
not
pop
call
push
push
lea
push
push
pop
add
sub
add
inc
add
sub
shl
pop
add
pop
push
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
call
add
jne
movl
add
gs
add
test
pop
xlat
add
push
xchg
mov
loopne
call
push
push
push
push
call
imul
add
xchg
add
add
jmp
jp
mov
add
loop
xchg
add
add
aad
add
ljmp
add
push
add
pop
sub
pop
call
push
push
lea
sub
sub
sub
push
push
pop
add
xor
sub
shl
add
lea
pop
sub
dec
not
pop
push
push
push
push
call
add
movsl
pop
add
mov
stc
clc
add
ja
loope
add
xlat
add
add
lods
add
push
mov
add
push
fildl
add
push
add
mov
pop
add
add
test
scas
fldl
push
fwait
data16
mov
add
lcall
std
add
add
add
add
in
lock
lcall
jne
call
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
loopne
add
rolb
add
add
add
loop
xchg
add
jmp
fwait
lds
jbe
add
lcall
shrb
fwait
xor
lret
push
rolb
add
push
and
add
lea
xor
pop
add
sub
pop
push
sub
inc
dec
xor
pop
pushl
push
sub
pop
call
lea
push
push
push
push
push
call
add
gs
fldl
jge
xchg
add
add
mov
push
addb
sarl
push
nop
add
add
add
pop
testb
sub
pop
call
push
push
dec
dec
push
sub
add
xor
not
dec
sub
sub
shl
shr
sub
pop
not
not
pop
push
not
rol
pop
pushl
push
push
lea
push
call
add
push
pop
add
add
xchg
xchg
add
add
add
add
gs
mov
add
hlt
stos
fs
cmpsb
add
lret
add
add
imul
nop
aad
jecxz
fs
jb
add
fwait
cmpsl
jp
add
fdivr
insb
pusha
add
jp
in
loope
jb
flds
add
fwait
add
sub
pop
call
call
push
push
shl
push
or
not
add
sub
dec
shl
pop
pop
push
shr
ror
dec
not
pop
pushl
call
push
push
push
call
faddl
lahf
add
insb
add
xchg
out
cli
add
rolb
add
cwtl
add
shrb
add
lcall
shrb
and
push
not
add
add
push
and
add
add
sub
sub
sub
pop
sub
pop
push
push
push
push
push
lea
push
call
pusha
add
lea
mov
icebp
pop
add
add
add
add
mov
mov
add
mov
jl
pop
xchg
sub
pop
pushl
call
push
push
push
lea
push
push
push
push
lea
push
push
push
call
push
add
add
pop
add
add
mov
add
mov
cld
add
add
add
mov
mov
add
add
out
in
add
arpl
call
lcall
shrb
jle
pop
push
shr
ror
add
add
push
push
pop
add
not
shl
xor
sub
shl
shl
shr
ror
pop
shr
add
pop
push
pop
pushl
call
push
push
add
push
sub
add
dec
sub
ror
add
pop
shl
sub
rol
pop
push
push
rol
lea
inc
push
sub
add
shr
sub
sub
rol
add
sub
sub
pop
dec
pop
push
lea
push
push
lea
push
lea
push
push
push
push
call
fbstp
addr16
xchg
int3
scas
add
popa
push
add
add
mov
loope
add
add
add
add
add
lcall
rclb
xor
mov
das
mov
ss
lea
push
lea
push
lea
push
push
call
add
add
add
pop
in
mov
add
int3
clc
add
sahf
add
arpl
mov
add
andl
cmc
add
add
jns
xchg
lret
add
mov
fiaddl
add
into
add
pop
les
js
sub
pop
pop
dec
jne
push
push
lea
push
lea
push
lea
push
push
lea
push
call
in
cmpsb
mov
lcall
lahf
lcall
mov
pusha
add
sti
push
pop
add
repnz
enter
push
test
jnp
add
add
pushf
sub
pop
call
push
not
pop
mov
int
push
lea
push
call
lret
add
loope
fdivr
in
arpl
add
add
mov
add
popa
mov
subb
add
mov
add
add
add
add
add
add
add
cld
cwtl
test
cld
add
xchg
add
add
add
add
fsubr
sub
pop
lea
push
push
sub
push
or
inc
add
sub
sub
inc
pop
ror
not
add
pop
push
add
pop
pushl
call
push
push
push
push
call
push
mov
data16
jge
in
jno
loopne
xchg
cli
je
add
push
test
pop
add
scas
add
lahf
add
add
pop
hlt
add
pop
lahf
test
mov
add
pop
gs
sbb
add
cmc
mov
mov
movsb
add
add
in
lock
lcall
push
rol
inc
pop
call
push
push
sub
push
or
not
add
rol
inc
sub
shr
rol
shl
pop
pop
push
not
pop
pushl
call
push
dec
pop
call
mov
push
lea
push
push
push
lea
push
push
push
push
call
into
clc
ret
cmc
add
push
fs
push
jo
add
fiaddl
add
lret
add
shll
add
add
add
sub
pop
lea
push
push
sub
sub
sub
xor
push
or
not
add
lea
sub
not
pop
sub
sub
sub
pop
push
shr
add
not
pop
pushl
call
push
push
push
push
push
push
push
push
call
push
jne
add
add
fiadds
scas
mov
mov
mov
add
ljmp
out
push
add
in
loopne
lea
push
push
call
movl
push
fstps
add
int
pop
add
lret
incb
add
addb
add
add
rolb
add
mov
nop
out
add
jle
jnp
test
add
mov
sti
add
add
add
movsb
in
jle
mov
mov
pop
sub
pop
push
push
push
rol
pop
push
push
push
push
call
xchg
add
jmp
add
pop
pop
lret
add
add
xchg
add
popa
addl
add
movb
in
hlt
pop
pushl
push
push
dec
rol
push
xor
add
add
inc
sub
sub
dec
pop
pop
push
lea
push
lea
push
push
push
push
call
mov
hlt
add
add
aad
add
loopne
mov
clc
arpl
lea
fiaddl
add
add
cli
pusha
add
add
loope
add
ja
cli
add
jno
loop
mov
icebp
shrl
leave
add
add
in
mov
pop
mov
scas
std
mov
add
into
add
repnz
pop
push
call
push
push
add
push
xor
add
sub
ror
rol
sub
pop
inc
pop
push
add
shl
pop
pushl
push
xor
pop
call
push
push
push
push
push
lea
push
push
call
add
mov
push
add
shrl
pushf
incb
add
add
add
lock
test
sub
pop
push
push
xor
add
pop
call
push
push
dec
dec
push
sub
add
xor
add
sub
add
dec
pop
xor
add
sub
pop
push
push
push
push
lea
push
push
push
push
call
arpl
add
add
lahf
jns
add
add
fiaddl
add
xchg
add
add
add
add
mov
add
call
shll
add
cmpsb
add
or
add
cmc
add
je
add
push
add
faddl
add
add
sub
pop
pushl
push
lea
pop
call
push
xor
pop
call
pushl
push
push
push
push
call
add
gs
add
add
add
add
add
faddl
pop
add
add
xchg
add
add
std
jbe
movb
mov
lret
lods
push
add
add
mov
push
lea
push
push
push
push
call
roll
mov
iret
jne
add
les
rolb
add
pop
add
add
movl
scas
xchg
add
mov
xchg
xchg
mov
rolb
pop
cli
ljmp
cli
lret
mov
incl
ret
or
shl
sub
shl
add
pop
not
add
rol
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
push
testl
ja
cmpsl
add
scas
jae
lret
add
cltd
add
jno
add
fs
arpl
add
lea
add
notb
cli
addl
push
add
xchg
mov
in
fcomps
jne
call
push
push
lea
push
call
pop
xchg
loope
pop
add
popa
cwtl
add
cld
add
pop
cli
mov
lods
add
add
add
pop
mov
enter
rcrl
jmp
add
add
jmp
icebp
add
mov
lods
cld
icebp
add
add
mov
out
jl
xchg
pop
sub
pop
push
push
push
push
push
call
mov
add
roll
mov
mov
add
incb
add
add
add
mov
test
add
mov
mov
ret
add
jmp
mov
mov
add
add
stc
popf
fadds
lcall
shrb
jne
xlat
push
dec
add
shl
push
and
add
inc
rol
lea
shr
sub
shl
pop
add
pop
push
shr
add
pop
pushl
push
inc
sub
pop
call
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
pop
mov
add
jge
add
add
add
movsb
flds
iret
add
cltd
gs
add
add
lret
add
add
leave
add
mov
add
bound
add
mov
lea
xchg
add
add
rolb
insb
pusha
add
mov
lcall
rclb
iret
lea
shl
pop
leave
push
lea
push
push
push
push
push
push
push
call
cmpsl
imul
in
push
pop
jecxz
add
ficoml
push
add
pop
sahf
imul
add
movsl
test
add
in
mov
add
pop
add
xchg
add
add
mov
lcall
les
push
shr
xor
pop
pop
push
push
push
push
push
push
push
lea
push
push
call
add
lahf
movsb
add
cwtl
push
loope
mov
stos
js
add
std
add
mov
in
popl
add
pop
pop
push
push
push
lea
push
lea
push
push
call
push
pushf
xchg
pushf
lahf
add
cmc
stc
fldl
mov
out
rcrl
add
cmc
movsl
add
js
repnz
add
movb
sbb
add
add
add
add
jnp
xchg
add
mov
add
sub
pop
pop
push
lea
push
push
push
push
call
jne
add
add
xchg
add
xchg
add
add
pop
add
jmp
add
movsl
lahf
in
add
lods
add
add
add
mov
insb
jae
cltd
add
add
add
sub
pop
xor
push
push
push
call
mov
mov
add
cmpsb
add
mov
fistl
add
call
mov
add
pushf
mov
add
add
scas
testb
add
stos
mov
mov
in
mov
cmpsl
lret
add
loopne
add
lret
clc
roll
in
xchg
add
in
hlt
pop
inc
push
inc
ror
pop
ret
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
add
add
sti
xchg
in
call
fsubs
fcomp
push
sub
rolb
cli
mov
movsb
add
scas
add
hlt
scas
add
ret
push
push
push
push
push
push
lea
push
push
push
call
mov
shrl
fs
add
mov
cli
jl
nop
add
sti
mov
cwtl
add
push
insb
testb
push
add
push
mov
sahf
xchg
add
add
jns
lcall
pop
popf
add
add
push
mov
add
mov
push
gs
mov
hlt
cld
fistps
pop
andb
in
fcompl
push
lea
push
push
push
lea
push
push
lea
push
call
add
test
cwtl
mov
add
add
jmp
sahf
mov
jo
mov
rcl
add
mov
add
mov
mov
xchg
mov
push
add
test
add
mov
jge
mov
jbe
add
in
in
mov
push
push
push
lea
push
lea
push
push
call
pushf
add
mov
in
push
ret
add
add
test
add
arpl
add
add
xlat
hlt
fadds
in
mov
push
lret
add
add
jecxz
test
add
int3
push
pusha
hlt
sub
pop
cmpl
jne
push
push
push
push
lea
push
lea
push
push
push
push
call
add
jb
xchg
mov
lea
filds
add
add
fcompl
fxch
roll
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
incb
js
add
pop
ror
mov
add
add
add
int
lret
push
add
add
add
mov
add
jbe
nop
mov
push
add
mov
out
add
je
jle
mov
xchg
pop
pusha
add
jnp
xchg
mov
aam
rol
pop
sub
pop
jmp
push
push
call
in
nop
loope
add
in
add
add
add
add
add
add
add
cmc
add
cmpl
add
lcall
inc
or
enter
xor
and
push
push
call
mov
add
add
in
add
test
fadds
imul
jl
pushf
or
push
add
ja
mov
test
in
add
xchg
pop
adcl
jo
test
test
mov
rolb
mov
popf
add
roll
sti
mov
filds
hlt
fwait
mov
mov
movl
leave
push
inc
pop
xor
push
push
lea
push
push
push
push
push
call
pop
xchg
add
ja
lahf
add
add
add
add
stos
ljmp
je
fistl
xchg
add
add
int3
aad
pushf
jl
add
int3
scas
gs
add
add
cmpsb
mov
push
mov
cmc
lret
test
flds
scas
push
add
add
lcall
rolb
push
push
call
add
add
add
add
add
add
mov
add
xchg
test
loop
movb
je
lcall
add
mov
add
je
add
lcall
add
add
add
call
hlt
repnz
cmpb
in
hlt
lcall
dec
decl
push
push
call
jbe
mov
ljmp
ret
nop
mov
incb
mov
sbbl
add
mov
mov
add
jno
add
add
add
sub
pop
sub
push
lea
push
push
push
push
push
push
lea
push
push
push
call
fnstcw
int
xchg
rolb
push
std
add
pop
loop
add
jp
add
add
js
lods
test
add
cmc
jae
popf
mov
add
add
add
addb
mov
in
jbe
add
lcall
add
idiv
xchg
xchg
addr16
pop
jmp
push
push
push
lea
push
push
lea
push
push
call
mov
enter
fdivl
loope
int3
add
add
cmpsl
add
cwtl
add
movsb
mov
push
add
push
loopne
add
xchg
je
add
add
hlt
add
mov
nop
iret
repnz
les
add
out
insb
mov
stos
mov
mov
in
sub
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
xchg
add
imul
test
cltd
fidivrl
mov
add
mov
add
xlat
outsl
add
xchg
add
cmpl
mov
add
add
shrl
jb
add
fldl
aad
add
push
rclb
faddl
mov
movsl
imul
in
loopne
lcall
xor
lret
ror
add
pop
pop
sub
push
inc
inc
pop
cmp
jne
mov
push
ror
add
pop
lea
sub
push
pop
mov
shr
push
add
inc
xor
lea
pop
add
push
sub
pop
sub
push
lea
push
push
call
add
add
popf
add
mov
add
jmp
testb
mov
add
add
xchg
pop
pop
addl
add
idiv
sub
pop
pushl
push
xor
rol
shl
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
test
jge
add
mov
pushf
pop
movl
add
sti
add
jecxz
add
insb
add
jnp
sahf
sub
pop
shr
push
push
push
call
add
stc
out
cwtl
add
add
push
add
rolb
cwtl
push
mov
scas
stc
mov
add
pop
roll
jb
add
test
insb
add
stos
stos
mov
add
add
add
add
pop
and
sub
push
sub
pop
cmp
jne
push
push
push
push
push
push
call
gs
mov
mov
jo
add
mov
fbld
repnz
add
add
cwtl
mov
jo
add
mov
mov
add
test
add
imul
sahf
lods
leave
in
addb
outsl
xchg
xchg
fiadds
jno
cli
into
add
add
add
lcall
ret
push
sub
dec
pop
push
mov
push
rol
add
pop
add
push
push
push
push
push
push
push
call
imul
add
pushf
add
sti
lock
jp
jge
call
add
pop
add
add
test
mov
add
add
add
mov
fildl
add
lcall
push
push
pop
push
push
shl
sub
inc
pop
push
push
push
lea
push
call
int3
add
xchg
pusha
in
push
sarb
pusha
add
fldl
scas
push
xchg
stc
rcrb
xchg
call
in
add
add
insb
test
mov
pop
push
lea
add
mov
fildl
lcall
push
sub
not
pop
mov
push
push
lea
push
call
loopne
push
add
add
add
push
loope
add
jmp
push
mov
arpl
lahf
add
add
lcall
xorl
fidivrl
xchg
push
loopne
add
shll
add
in
hlt
pop
lea
push
push
push
push
call
mov
stos
cltd
add
add
add
add
push
js
add
add
in
mov
leave
mov
test
testb
sarb
out
lahf
mov
add
push
xchg
jmp
ret
mov
mov
pop
sub
mov
push
push
push
push
push
push
lea
push
push
push
call
add
jp
xlat
add
add
sti
mov
mov
ljmp
add
movsl
add
cmpsl
mov
out
mov
je
mov
pop
testb
mov
out
mov
in
fcompl
ljmp
dec
pop
mov
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
popf
add
jle
cld
les
add
mov
add
add
rolb
test
add
add
repnz
push
add
add
call
push
icebp
pushf
imul
add
add
mov
mov
mov
add
lods
add
add
jns
add
pop
or
adc
jno
push
call
testl
add
add
loope
add
add
xchg
scas
ret
popa
jnp
add
add
jmp
lea
add
mov
add
mov
add
add
jl
popa
mov
hlt
lcall
jge
push
sub
pop
xor
mov
push
push
push
lea
push
push
lea
push
push
call
xchg
iret
aad
fisubrl
xchg
ficoml
fwait
add
pop
mov
add
cmpsb
mov
add
mov
scas
popf
cli
add
lock
add
jl
mov
add
pop
and
rol
push
push
push
lea
push
push
push
push
lea
push
call
lods
cli
add
add
add
idiv
add
add
lods
testb
lods
xlat
icebp
add
testl
cmc
add
shll
mov
add
add
add
testl
std
movb
add
in
loopne
rol
push
lea
push
push
push
call
mov
add
mov
addl
out
xchg
jno
xchg
addr16
shll
add
add
add
js
add
add
mov
add
aad
sub
pop
xor
inc
push
inc
inc
pop
cmpb
jne
add
push
push
push
call
xchg
movsl
mov
ret
push
add
jmp
add
addb
pop
add
add
sahf
mov
fdivs
jb
std
fnsave
ja
add
jge
in
hlt
lcall
inc
or
test
lea
push
push
push
push
push
push
push
call
add
add
mov
out
cmpsb
subb
add
add
add
add
stos
fidivrs
pusha
xchg
iret
xchg
hlt
add
les
sub
pop
add
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
in
add
fldl
push
add
add
jne
add
mov
add
mov
add
stos
add
mov
add
add
jmp
lret
sarb
add
add
xchg
add
stos
sub
pop
cmpl
jne
push
push
push
push
push
push
push
push
push
push
call
jae
int3
add
add
add
add
push
add
mov
mov
fcompl
jae
add
lcall
rcrb
loopne
add
pop
pop
push
push
push
push
push
push
push
push
call
add
mulb
add
add
push
xchg
jge
out
add
mov
add
pop
in
xlat
scas
outsl
add
cltd
add
std
mov
add
add
add
add
push
jb
add
add
add
imul
fdivl
add
fadds
add
add
filds
in
loopne
pop
push
rol
sub
ror
pop
pop
push
add
pop
pop
push
lea
push
lea
push
push
push
lea
push
call
loope
add
add
mov
add
add
int3
jecxz
sbbl
out
sti
add
add
add
sti
mov
addl
add
test
pop
pop
insb
jmp
add
add
loope
fadds
push
push
lea
push
push
lea
push
push
call
add
mov
add
jmp
add
mov
outsl
cwtl
add
out
add
mov
cli
pop
mov
pop
xlat
add
fdivrl
rcl
shl
jne
lret
add
add
push
add
lds
clc
mov
in
call
push
sub
shl
pop
mov
add
push
push
push
call
add
incb
push
add
add
addr16
add
shll
cwtl
movb
add
add
add
sahf
testb
add
sahf
mov
fiadds
in
hlt
pop
mov
push
sub
add
pop
push
mull
push
lea
push
push
push
push
lea
push
call
notl
add
add
add
icebp
add
popf
add
add
aam
add
add
sub
pop
pop
push
push
call
add
add
add
fnstcw
add
imul
add
lods
add
add
add
add
incb
sub
pop
call
push
push
lea
add
xor
pop
call
push
lea
push
call
into
rolb
add
jle
fadds
loope
insb
jbe
mov
add
add
jns
rcrl
add
js
push
jecxz
call
sub
pop
xor
push
push
push
push
push
push
push
push
call
mov
add
mov
pop
testl
mov
add
push
mov
mov
jno
into
rolb
incb
jne
add
add
popa
add
iret
add
add
pop
int3
xchg
shlb
add
test
mov
jno
rolb
jnp
add
sub
pop
pop
push
push
push
push
lea
push
push
push
push
call
jmp
pop
add
add
scas
add
test
mov
xchg
out
add
add
jns
fildl
scas
add
add
mov
pop
ja
add
mov
add
push
add
popa
lahf
add
hlt
add
mov
add
add
add
lcall
push
inc
xor
ror
add
pop
pop
pop
push
sub
dec
add
pop
pop
leave
push
lea
push
lea
push
call
pop
or
add
movsl
imul
add
add
add
mov
scas
pop
int3
out
add
flds
pop
sub
pop
ret
push
push
call
mov
mov
add
stos
sahf
clc
mov
push
add
jae
add
xlat
into
hlt
pop
jmp
mov
add
jnp
ret
testl
add
add
mov
push
lea
ror
pop
add
push
sub
pop
push
push
push
push
push
push
lea
push
call
loope
rcrb
int3
add
pop
add
pop
xchg
jnp
add
stos
add
add
add
jmp
add
mov
outsl
add
add
add
in
call
mov
add
clc
lret
ljmp
lret
add
add
push
shr
xor
lea
dec
pop
push
push
push
call
addl
add
add
imul
add
add
test
jb
add
jmp
mov
aam
imulb
sub
pop
push
mov
push
pop
push
pop
push
ror
add
xor
pop
lea
push
pop
sub
mov
push
dec
pop
shr
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
add
push
pop
jle
add
aad
xchg
ret
testb
push
bound
mov
hlt
add
call
pop
lcall
in
add
push
lea
push
push
lea
push
push
push
call
ja
add
mov
test
add
xlat
add
add
movsl
fadds
rorl
js
add
repnz
orb
add
xchg
pop
jmp
add
imul
std
pop
add
nop
aad
sarb
jnp
pop
movb
pop
mov
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
ror
push
cli
add
lcall
iret
cli
mov
push
stos
popf
roll
scas
xchg
testl
mov
rcrb
loop
movsl
ljmp
inc
cltd
push
test
mov
push
mov
xchg
add
add
mov
add
push
lea
push
lea
push
push
push
push
push
push
call
mov
jmp
mov
add
rcr
add
shlb
add
imul
cli
fs
lahf
lcall
pop
add
pop
pushl
popl
push
not
pop
mov
add
push
pop
xor
push
push
push
push
push
lea
push
push
push
push
push
call
add
mov
mov
add
in
pop
mov
add
cmc
add
add
cmpsb
jl
push
addl
add
xchg
scas
jne
rolb
jmp
outsl
add
lea
push
dec
shr
pop
mov
add
push
push
push
push
push
push
call
out
lcall
add
push
jl
cmc
add
fmuls
out
add
mov
nop
add
add
lcall
rclb
push
push
push
push
push
push
lea
push
push
call
mov
jne
add
cli
cmpsb
jne
in
add
add
add
insb
mov
negb
fwait
mov
cmpsb
fiadds
in
testb
add
add
add
std
mov
jne
mov
push
mov
into
sbb
sub
pop
rol
push
pop
nop
push
rol
pop
nop
push
push
push
push
push
call
add
add
pop
stos
mov
add
add
add
add
add
add
int
add
add
repnz
add
mov
mov
mov
xor
push
ror
add
pop
nop
push
push
push
push
lea
push
push
call
int3
rclb
scas
add
arpl
add
addb
mov
add
sahf
enter
add
jge
js
add
add
cli
movsl
pop
add
mov
xchg
pop
jl
add
push
movsb
int
add
push
pushf
mov
sub
pop
nop
inc
push
add
add
shr
pop
nop
nop
push
add
shr
add
pop
cmpb
jne
push
push
lea
push
push
push
push
push
call
add
cmc
add
imul
push
frstor
mov
je
div
aad
imul
lcall
mov
jbe
jns
add
add
loope
rol
add
mov
sar
loope
pop
mov
out
scas
add
roll
addr16
hlt
sub
pop
add
push
sub
rol
lea
pop
nop
push
sub
not
not
pop
nop
cmp
je
push
rol
pop
nop
push
shr
inc
pop
nop
inc
push
lea
push
call
out
xchg
add
add
add
add
push
test
push
jle
mov
mov
stos
test
enter
add
xchg
mov
add
push
popa
cmc
pop
sub
pop
nop
push
add
ror
shr
pop
nop
push
xor
add
not
pop
cmp
jb
push
sub
dec
add
pop
xor
push
push
call
add
nop
mov
arpl
lret
xchg
imul
jne
pop
add
xchg
pop
add
add
fwait
add
add
add
add
les
mov
xchg
add
mov
lcall
add
add
or
push
push
call
jbe
stos
jno
add
leave
add
add
add
insb
xorl
lret
jae
mov
pop
std
stc
je
in
lds
add
mov
lcall
push
and
push
push
push
lea
push
lea
push
push
push
call
fildl
add
add
fs
mov
lds
mov
mov
enter
xchg
xchg
xchg
add
pop
add
ljmp
add
add
out
jne
insb
rcl
iret
loop
ljmp
loopne
lcall
rorl
mov
jb
shl
ror
pop
mov
push
lea
shr
pop
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
push
add
stc
ret
std
outsl
shr
add
jl
sarb
iret
ret
cmpsl
pop
iret
js
fldl
lods
adc
push
add
add
add
push
imul
add
xchg
imul
jle
add
pop
cmc
xchg
push
fildl
add
sub
pop
mov
push
push
push
push
call
rolb
ja
ret
popa
add
pop
jmp
add
cld
add
push
ret
add
add
mov
add
push
add
add
lods
add
add
cmpsb
roll
add
mov
add
arpl
sub
pop
xor
push
lea
not
shr
pop
xor
shl
push
dec
sub
rol
pop
xor
push
add
dec
add
pop
shl
push
shl
sub
shl
pop
xor
shl
push
lea
push
push
push
push
push
call
mov
mov
add
cld
mov
add
add
mov
call
loopne
stos
xchg
mov
push
mov
add
add
insb
add
scas
add
add
add
sub
pop
xor
push
lea
push
push
call
jle
xchg
clc
jno
shr
mov
std
xlat
ficoms
add
out
push
add
jle
add
add
jp
rcrw
jbe
fdivp
jl
xchg
pop
out
gs
add
mov
add
sahf
add
add
in
add
lcall
rcll
ljmp
lea
push
lea
push
push
push
push
push
call
les
les
add
add
add
add
add
cltd
add
jo
fbstp
mov
mov
call
test
aam
repnz
lcall
inc
hlt
pop
push
push
call
add
add
test
out
in
xchg
add
xlat
clc
add
add
add
bound
add
add
add
mov
add
call
fsubrp
addr16
in
mov
mov
xchg
add
add
mov
filds
cmpsb
gs
cwtl
lahf
add
push
push
push
push
push
push
push
call
stos
fistl
iret
filds
popf
cmpsb
mov
je
add
add
shll
in
mov
out
add
jl
add
in
lcall
push
add
ror
not
pop
pop
push
push
push
push
lea
push
call
std
jl
add
sahf
add
lock
xchg
retw
movl
cmpsl
add
add
addr16
add
imul
test
cmpsb
add
lods
add
add
push
test
rorl
add
add
add
in
xorb
add
sub
pop
leave
ret
push
shr
pop
push
push
ror
sub
pop
mov
push
push
ror
ror
pop
push
push
xor
dec
shr
pop
push
push
sub
shl
shl
pop
push
mov
push
push
push
push
push
push
push
push
call
add
add
mov
outsl
shl
pop
add
gs
mov
push
add
add
ror
mov
add
std
add
add
stos
fbld
xchg
add
jmp
in
loopne
mov
push
ror
pop
mov
push
rol
pop
test
je
push
sub
sub
not
add
pop
mov
push
sub
pop
test
je
push
push
push
lea
push
push
call
sahf
jmp
movsb
add
add
rolb
nop
roll
jmp
addl
add
mov
push
pop
pop
add
gs
lahf
cltd
xlat
mov
lahf
add
les
add
mov
idivl
sub
pop
mov
mov
push
push
push
push
push
lea
push
push
lea
push
push
call
in
add
pop
add
loopne
add
add
loop
add
jl
icebp
add
add
popa
jnp
push
mov
cmpsl
xchg
add
add
mov
sub
pop
mov
inc
push
not
shr
rol
pop
cmp
je
push
ror
pop
test
je
mov
push
xor
lea
pop
inc
cmp
je
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
cwtl
add
add
in
leave
call
insb
arpl
add
xchg
ljmp
movl
loope
add
pop
add
mov
add
aad
in
sub
pop
test
jne
xor
push
shr
shl
pop
pop
push
push
push
push
lea
push
call
mov
add
add
test
add
lahf
cli
add
cwtl
add
mov
je
loope
add
ror
in
stc
add
add
lcall
push
push
push
push
lea
push
push
call
jb
pop
stc
add
loope
lods
add
pop
out
add
mov
testb
add
out
add
test
out
lds
add
roll
add
add
add
xchg
add
mov
lcall
pop
push
inc
sub
pop
leave
ret
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
mov
push
rcr
mov
fiadds
fadds
add
add
cltd
add
add
cmc
add
lock
aam
jecxz
add
add
cmpsl
push
shll
add
add
int
add
stc
in
add
imul
std
add
sti
add
push
mov
push
push
lea
push
lea
push
push
push
push
call
mov
insb
sahf
add
adcl
lds
rolb
push
add
add
sahf
add
rolb
add
scas
in
lock
add
js
stos
lock
add
add
ret
mov
lcall
push
rol
rol
not
sub
pop
cmp
jne
lea
push
push
push
push
push
call
sahf
add
arpl
fucompp
xchg
xchg
add
loope
xchg
enter
aad
cwtl
add
add
add
jmp
push
add
scas
mov
mov
mov
add
popa
shrb
mov
jecxz
test
popa
add
add
push
shl
pop
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
fnstcw
add
add
add
outsl
add
push
imul
lock
cld
add
fcomps
movb
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
addb
add
add
add
int3
movsl
add
add
add
add
add
call
stos
je
add
jae
mov
flds
cmp
jne
mov
push
push
push
push
lea
push
push
push
push
call
add
mov
add
add
add
jns
add
lea
enter
xchg
pop
xchg
mov
std
fs
in
rolb
imul
add
rolb
xchg
jae
jge
outsl
out
add
mov
mov
add
imul
in
loopne
lcall
rorb
mov
lea
push
push
push
call
in
add
rcrl
outsl
bound
add
push
cld
movsl
in
add
mov
out
add
add
xchg
mov
sub
pop
mov
add
push
xor
shr
sub
sub
pop
cmp
je
push
push
push
push
lea
push
call
xchg
enter
lds
rcrb
add
lds
data16
js
add
push
add
test
xchg
add
add
rol
mov
mov
push
mov
in
in
pop
jmp
push
push
lea
push
push
lea
push
push
lea
push
call
adcb
stos
add
mov
shrb
lcall
fildl
mov
pop
add
mov
add
mov
add
mov
add
fwait
xchg
fidivrl
rcl
lods
add
rcl
flds
lcall
rcrb
into
adc
pop
pop
push
sub
pop
pop
pop
push
push
push
push
push
lea
push
push
call
add
add
mov
mov
add
pop
lcall
jbe
push
mov
add
mov
fmull
popf
add
xchg
add
xchg
in
in
leave
push
xor
lea
xor
pop
ret
lea
push
add
pop
pop
push
push
call
cmc
ret
iret
add
add
add
enter
xchg
cmc
jge
sti
ja
add
mov
add
sahf
mov
push
movsb
xchg
scas
lods
add
add
add
test
lcall
push
push
push
push
push
push
push
push
call
popa
arpl
jmp
mov
add
add
popf
in
clc
cmpl
adc
add
add
add
jo
repnz
in
add
pop
jne
loopne
test
push
test
aad
add
arpl
jno
pop
add
popa
push
cld
popa
scas
subl
add
movb
add
add
add
pop
push
push
call
cmp
bound
movsl
xchg
loop
add
pop
add
rolb
mov
xchg
leave
iret
iret
add
add
add
loope
pop
add
cmpsl
rcl
mov
xchg
rcll
mov
add
mov
jl
out
pop
xchg
add
add
push
add
add
arpl
lcall
push
push
push
push
lea
push
call
add
out
add
add
fdivs
jp
je
arpl
add
mov
jnp
loop
add
add
out
lods
add
sti
cltd
push
add
add
add
jo
add
add
fucom
add
add
jo
je
xchg
cwtl
repnz
sahf
mov
in
lcall
or
push
ror
pop
mov
push
ror
pop
pop
push
not
shl
inc
pop
pop
pop
push
push
push
push
push
push
call
pop
lods
lret
addl
in
xchg
add
add
bound
out
add
jne
xchg
add
push
in
xchg
add
add
add
mov
mov
add
add
add
add
xlat
mov
jbe
sub
pop
pop
leave
push
rol
pop
ret
cmp
leave
mov
xor
mov
mov
into
mov
ror
mov
mov
lret
add
mov
xchg
lret
or
xor
mov
add
add
dec
push
in
cmp
xor
loope
cmp
div
pop
sub
mul
xor
mov
dec
outsl
popf
arpl
cli
mov
sub
stos
sub
lret
lea
dec
aad
cmp
cmp
lods
jne
push
mov
cmpsl
sub
loopne
je
push
add
push
call
aad
and
xchg
inc
adc
in
lret
mov
mov
jmp
or
out
js
push
cs
sbb
mov
or
cmp
mov
or
mov
outsb
mov
stc
mov
sub
in
dec
sbb
xchg
inc
sbb
adc
dec
jmp
jl
popa
test
int3
lcall
push
push
jge,pt
mov
fdiv
in
xchg
pop
lods
jne
call
add
flds
pushf
pop
sub
mov
xor
sub
out
lahf
idivb
ret
pushfw
and
mov
mov
movsl
jl
xchg
pop
pop
and
dec
mov
out
xchg
mov
arpl
and
pop
cli
sbb
sbb
fldl
bound
mov
bound
sub
pop
or
jle
daa
scas
dec
xor
sbb
mov
add
clc
aad
mov
jbe
fs
mov
popf
cmovbe
xchg
add
lods
popa
loop
fsubp
add
xor
sub
cmp
int3
lock
mov
sbb
push
push
iret
test
stos
pop
loope
scas
fdiv
cmp
cmc
mov
mov
imulb
mov
pop
jecxz
mov
mov
es
mov
pushf
cmp
sub
add
aam
mov
pop
shll
add
sub
xchg
mov
imul
dec
jno
mov
int
aad
mov
cmp
mov
add
pop
loopne
std
and
xchg
xor
incb
gs
dec
xlat
add
cmp
idivb
push
mov
and
ss
fcoml
jo
insb
fldenv
cmp
ds
stos
sub
arpl
and
xorl
cltd
ds
movsl
stc
imull
and
adc
mov
cld
mov
dec
movsl
add
adc
int
ret
test
loop
and
push
push
mov
fistl
add
pop
outsl
xor
loopne
xlat
pop
je
out
pop
cmp
mov
sbb
push
push
dec
pop
test
xor
add
aad
xchg
cmp
popa
mov
pop
insb
cmp
fnsave
xlat
xchg
shrb
hlt
cmpsb
dec
pop
fildll
sub
or
lahf
sub
pusha
pop
mov
pop
jmp
xchg
adc
mov
pop
icebp
ret
aaa
sub
mov
repnz
orl
fisubrl
xchg
int3
hlt
lods
mov
filds
jo
xor
roll
xchg
fwait
inc
xchg
or
aaa
jmp
fdivrs
and
mov
roll
rcrl
cltd
xor
pop
daa
or
xor
cltd
push
lea
les
jmp
mov
je
ret
fldl
mov
xchg
in
xor
xor
mov
sub
push
dec
add
sbb
jns
test
into
cmp
shlb
or
or
pop
test
fisttps
inc
loop
jecxz
xor
movsl
sbb
adc
scas
int3
sbb
push
cli
xor
ret
mov
jl
jns
inc
and
adc
cmp
xchg
xchg
je
add
push
hlt
cmp
addr16
mov
imul
mov
mov
cmp
jp
ficoml
pusha
push
push
pop
or
repz
pop
xchg
pop
ja
lret
cmp
cmp
xchg
cmp
lds
pop
sbb
aas
sub
mov
test
mov
jg
sbb
lods
rcrb
jecxz
sahf
test
push
insb
dec
xor
mov
cwtl
dec
lahf
jl
cmp
jno
mov
daa
and
mov
call
and
dec
mov
mov
xchg
lods
pop
push
cld
mov
ja
or
dec
icebp
mov
add
out
arpl
dec
push
push
aam
mov
sub
and
jo
sarl
mov
loopne
stc
mov
and
jns
outsl
push
xchg
sbb
ret
adc
lods
add
sti
movsl
push
out
dec
jp
mov
sahf
xchg
sbb
mov
imul
jp
lods
insl
push
sbb
push
je
mov
add
and
xchg
sahf
dec
popa
ja
inc
movsb
adc
nop
mov
ja
and
out
les
outsb
mov
stc
fists
xor
mov
popf
js
lret
sbb
lods
cmpsb
ret
int3
or
mov
push
movsb
mov
into
mov
add
sbb
and
pop
push
test
add
pop
mov
push
mov
adc
add
ret
jbe,pt
sbb
movsl
mov
lods
out
jmp
ficoms
insl
lods
or
dec
or
or
out
lret
or
mov
rcll
sar
jp
xor
mov
push
scas
rorb
xor
xchg
push
jne
xor
js
call
push
paddq
pop
inc
test
cmp
jmp
cmpsb
ret
pop
xchg
test
or
out
nop
sbb
jno
xchg
sar
jp
andl
out
mov
mov
fisubl
cmp
insb
cmp
xor
test
mov
idivl
sbb
sbb
mov
ss
inc
mov
gs
lcall
or
pop
sbb
call
jne
sub
loope
iret
testl
iret
sbb
repnz
pop
add
out
fistl
xchg
fisubrs
pushf
jle
inc
push
jg
lds
loope
xchg
fstpt
or
mov
pop
out
in
cmpsb
negb
ja
test
mov
pop
lret
add
or
leave
fsts
cmp
and
and
pop
push
sbb
adc
lcall
push
cmp
adc
lret
jmp
lcall
aaa
repnz
mov
cmc
xchg
pushf
cmpsb
lds
pextrw
pushf
cmp
ljmp
pop
pushf
adc
xchg
inc
dec
dec
push
mov
xor
pop
addr16
mov
repz
pop
test
push
jg
mov
xchg
aam
mov
ret
fstpl
lods
mov
add
mov
or
xchg
pop
enter
push
test
int
leave
divb
mov
ret
sti
xor
pop
test
stos
mov
xchg
mov
in
pop
insb
popa
inc
pushf
or
sub
add
add
mov
mov
hlt
cmp
shrl
xchg
repnz
fstpl
inc
lods
xchg
push
test
fwait
stc
pop
fnsetpm(287
and
dec
push
pop
je
jbe
sti
xchg
in
in
jmp
fsubl
cmp
lahf
xsavec
xor
mov
repnz
lock
outsb
inc
mov
insl
dec
xchg
in
jns
mov
test
clc
fwait
lret
dec
mov
aas
push
sbb
sahf
pop
data16
pushf
cmpsl
or
loop
daa
push
and
je
push
fistpl
sub
ret
sub
lret
mov
sbb
mov
jno
cmp
lcall
popa
xchg
mov
xor
adc
inc
jae
xchg
mov
and
movsl
pushf
and
mov
add
mov
sti
jno
xchg
pop
xor
mov
xorb
and
add
repnz
pop
movsb
mov
jl
pause
mov
push
mov
loop
sbb
inc
or
push
cmp
pushl
jle
iret
push
into
addr16
aas
adc
jp
mov
cmp
enter
test
das
aam
aas
out
aas
mov
in
lcall
mov
sbbl
aas
push
test
pop
xchg
scas
cmpsl
jo
faddl
xchg
and
push
cmpsl
push
cltd
rol
std
push
cli
shlb
push
cwtl
sbb
jb
scas
je
pusha
loop
push
push
imul
or
flds
adc
cli
aam
orw
ss
adc
int3
imul
rdtsc
dec
adc
mov
stos
dec
lret
sti
int3
push
mov
cmp
cld
fdivs
or
inc
call
xor
or
rclb
xor
adc
cmpsb
repnz
xor
mov
cmp
adc
or
ljmp
test
ficompl
cld
ss
pop
ja
insl
mov
rcrb
mov
cmp
mul
js
stos
lods
and
outsl
adc
or
push
call
sub
repz
inc
test
sbb
dec
rorl
clc
out
mov
iret
pop
dec
lret
rcrb
fsubs
or
shll
scas
in
jmp
inc
push
addl
cmpsl
mov
es
les
movsb
imul
xchg
cmpsb
adc
sbb
dec
fisttps
mov
cmpl
dec
mov
cmpsl
cs
xor
sub
std
jp
incl
jno
in
out
pop
jge
sbb
jmp
int
push
popa
or
imul
popa
cld
stc
dec
loopne
cmpsb
sbbl
call
je
icebp
popa
and
inc
movsl
movsb
sbb
popf
cwtl
pop
xchg
fdivs
fdivrs
push
outsl
push
xchg
mov
adc
sbb
pop
sbb
popf
std
xor
pop
xchg
cmp
mov
xlat
xor
enter
lcall
imul
mov
dec
or
jp
fwait
xorl
cli
sub
movsl
pop
sbb
es
jns
shll
cld
cli
jmp
call
ljmp
mov
xchg
into
xchg
pop
repz
mov
sbb
fs
subb
push
lret
push
add
fsubrl
sub
adc
jbe
add
nop
and
into
insb
sbb
loope
push
adc
dec
imul
mov
push
sbb
xchg
ljmp
add
das
jg
mov
fisttpl
jne
dec
inc
jae
jmp
dec
rcrl
xchg
dec
stc
jle
cmp
dec
dec
mov
push
jb,pt
lret
xchg
mov
pop
jecxz
push
jae
hlt
xchg
mov
sub
push
sub
popf
inc
mov
insb
movb
je
xchg
test
cmpb
jne
bound
negl
inc
push
xchg
mov
call
push
add
cmp
xorb
adcl
jns
dec
push
add
outsl
cmpsb
std
sti
mov
stos
ljmp
repnz
inc
push
js
clc
dec
xchg
movsl
repnz
iret
faddl
notl
nop
ficoms
daa
adc
xor
mov
pushf
adc
shlb
popa
jmp
add
sub
test
xor
xchg
rcrb
dec
push
popa
testl
icebp
mov
stos
test
frstor
fisubrs
cmpsl
cs
xchg
cmpsb
cmp
jb
jp
das
jecxz
cmp
push
loopne
mov
jno
cli
iret
shl
sbb
imul
pop
or
cli
imul
mov
inc
sbb
popl
mov
lods
mov
jge
xor
cmc
mov
inc
add
mov
pop
xchg
gs
inc
subb
cli
add
xlat
push
pop
xchg
mov
out
enter
lock
ja
xchg
pop
or
mov
je
or
lods
out
mov
add
das
sub
xchg
fmuls
adc
push
and
pop
repnz
imul
addl
in
push
aas
mov
mov
test
jno
xchg
cmp
jnp
ret
inc
out
lock
das
rolb
ljmp
or
sub
sbb
cmp
int
cmp
xchg
xor
sbb
inc
ja,pt
push
dec
push
js
jmp
mov
sub
pop
pop
xor
sbb
xor
sub
shl
cwtl
add
and
jbe
mov
sbb
mov
call
mov
push
fldcw
out
mov
loop
cwtl
cltd
fnstcw
push
data16
gs
pop
sbb
and
outsb
cmp
push
add
imulb
out
mov
test
add
xorl
mov
xor
pusha
rorl
pop
inc
out
je
jp
xchg
test
mov
and
or
push
jns
mov
lock
mov
mov
pushf
pushf
mov
icebp
inc
push
pop
jmp
sahf
ja
sbb
or
clc
lods
cwtl
shll
test
mov
dec
icebp
adc
or
insb
push
adc
sbb
mov
dec
dec
out
out
adc
popl
outsb
fcoms
jmp
xchg
packssdw
xor
inc
dec
jnp
xor
enter
mov
or
and
ret
ljmp
mov
inc
dec
xor
jne
jg
xor
popf
pop
sti
jb
sub
adc
jbe
mov
iret
jno
out
dec
dec
negb
adc
int
push
in
xor
mov
mov
lret
dec
sbb
mov
repz
dec
pop
scas
dec
fldt
inc
xor
mov
lret
in
cmp
imul
lcall
dec
xor
outsb
in
xor
bound
mov
daa
pop
loop
jmp
mov
pop
rol
ficoml
pushl
inc
aad
xchg
shl
int3
jns
movsl
lret
push
mov
lea
dec
test
or
test
xchg
sub
push
mov
push
push
iret
pop
push
out
into
inc
into
inc
xchg
inc
mov
mov
lcall
or
sub
mov
lahf
test
xchg
jle
pushf
jae
sbb
rcrb
cmpsl
push
jo
ret
lcall
mov
mov
adc
daa
mov
aas
mov
mov
jae
jl
fs
inc
push
push
sub
dec
jmp
mov
xchg
cmp
cmp
pop
sub
push
xlat
add
xchg
enter
mov
mov
or
cmp
lods
lret
adc
mov
sub
fstl
iret
sbb
nop
push
popf
pusha
mov
cmc
nopl
outsl
jb
fwait
sahf
addr16
test
mov
out
inc
in
xorl
rcrb
fwait
mov
test
cltd
mov
pop
xchg
rol
lret
xor
pusha
cmpsl
and
xor
lea
iret
or
das
push
pop
inc
adc
mov
fs
pop
dec
lret
arpl
and
push
negb
stc
jl
iret
mov
push
adc
mov
add
adc
sbb
loop
inc
andl
xchg
sbb
push
dec
lods
jge
cmpl
in
xchg
mov
out
pop
fildl
jo
sahf
mov
repz
and
push
push
out
out
out
jo
shll
outsl
fidivrl
orl
mov
push
sub
stos
pop
adc
dec
cld
cmpsl
sub
fmul
mov
push
push
std
movsb
bound
data16
jnp
xchg
pop
adc
mov
cmpsb
mov
int
lret
push
sub
push
xor
xchg
in
mov
imul
loop
xchg
inc
xchg
cmp
hlt
data16
xchg
jnp
push
mov
mov
movsb
xor
fistps
int
sbb
js,pn
or
test
ficomps
xchg
and
dec
popa
dec
jae
test
out
iret
dec
lret
mov
mov
ret
arpl
stos
xor
jg
pop
shlb
clc
ss
add
arpl
and
nop
cltd
add
jnp
stos
out
test
pop
loope
push
jmp
cmpsl
push
mov
sbb
loope
mov
mov
pop
pop
and
std
push
loope
rclb
mov
mov
mov
jno
push
sbb
mov
dec
sbb
cmp
inc
movsl
sbb
push
push
mov
jo
clc
jl
jmp
lea
popa
loope,pn
imul
cli
std
imull
addr16
jae
dec
sahf
jg
mov
jp
cli
out
fwait
imul
xchg
fninit
repnz
add
jno
das
nop
test
xlat
mov
sbb
mov
cli
clc
sub
std
in
out
leave
ljmp
addr16
pop
mov
shr
mov
fwait
mov
mov
out
outsl
lret
cli
insb
mov
imull
pshufw
fmul
lods
mov
loop
sbb
push
repnz
nop
mov
decl
mov
ds
push
and
into
and
push
add
add
push
jle
sub
or
sti
mov
mov
mov
mov
testl
ja
pusha
or
ds
mov
out
inc
pusha
das
lret
or
lods
or
shll
push
int
or
fnsave
arpl
xor
xchg
mov
or
imul
pop
pop
mov
rorb
ja
outsb
int3
in
lea
pop
pop
dec
inc
xor
xchg
cmp
inc
cmp
cs
cmc
daa
clc
dec
sub
mov
xchg
mulb
cmp
stc
inc
mov
pop
cmpsb
mov
pushf
sbb
imul
in
fldt
aaa
into
mov
loop
push
repnz
jmp
inc
adc
pop
jns
notl
repz
xchg
cmc
popa
sbb
mov
dec
cmp
cmp
push
xchg
dec
cmc
out
xlat
scas
sahf
fs
subb
push
subl
lds
inc
dec
out
addr16
dec
cld
imul
jo
shlb
lcall
cmp
dec
int
int
jne
dec
push
jb
mov
jmp
jmp
jae
pop
and
cld
jmp
pop
movsl
adc
lds
mov
jns
in
ljmp
movzwl
mov
xchg
jns
fwait
adcb
insb
rolb
movb
in
sti
xchg
aam
push
int
repnz
pop
cmpsb
data16
or
stc
mov
test
push
lret
sub
mov
sub
mov
mov
mov
lret
jo
clc
ret
cltd
xor
mov
mov
sbb
scas
je
pop
jno
ljmp
call
mov
sbb
into
test
fwait
xchg
out
adc
sti
pushl
testl
loopne
mov
outsl
outsl
lret
cmp
mov
lret
cmp
fistps
add
cld
out
dec
jb
cmc
clc
xchg
push
sbb
and
xchg
inc
push
jecxz
xlat
test
adcb
push
aad
int
aaa
je
mov
jne
mov
jmp
bnd
test
loope
test
pop
fisubl
pop
jle
sarl
fldln2
xchg
mov
orb
scas
xor
cmp
xor
xchg
arpl
cmp
cltd
add
mov
fisttpl
push
jp
outsl
inc
mov
movsb
pushf
mov
sub
or
jnp
data16
adc
arpl
xchg
and
mov
cmc
seta
fcomi
call
pop
mov
mov
pop
movzbl
popf
dec
call
push
orb
ss
out
xchg
popf
nop
popf
mov
sub
repnz
dec
out
cmp
inc
push
mov
sub
inc
cmp
sub
mov
sti
jno
adc
xchg
js
movsl
mov
aaa
sti
or
cmpsl
mov
mov
inc
cs
inc
test
int3
ret
in
push
pop
cltd
loopne
pop
mov
mov
mov
ja
outsb
leave
cld
orl
fnsave
jmp
lret
lahf
loopne
jae
adc
xchg
push
mov
dec
xchg
js
mov
push
addb
in
repnz
pushl
lods
into
roll
mov
cmp
push
ret
test
fmull
movsl
scas
or
lret
xor
mov
mov
push
sbb
daa
sub
fldenv
jp
mov
lods
cmp
sbb
and
in
ss
decl
mov
lock
mov
sbb
rcrb
scas
push
push
xor
lock
pop
or
insl
dec
pop
gs
mov
fidivrs
andb
stos
popa
filds
inc
out
mov
into
popf
hlt
jno
xchg
loope
sti
cmp
fidivs
inc
sbb
push
pop
pop
fmull
std
std
out
cmpsl
fsubr
cmp
dec
push
adc
sar
ss
add
jb
ficoml
inc
out
das
inc
lret
jae
cwtl
gs
mov
push
or
mov
in
daa
adc
into
push
lods
mov
movsb
xchg
dec
and
sbb
sub
pop
imul
in
xchg
sub
dec
std
jne
lret
cmp
push
mov
mov
mov
sub
inc
loope
mov
aad
loopne
jmp
push
loop
jmp
or
lds
lret
add
fisubl
rol
stc
cmpsl
mov
sub
cwtl
outsl
jg
xchg
cwtl
cmovs
cmp
jge
out
lods
sub
fmul
and
add
clc
repz
pop
pop
enter
inc
mov
inc
fs
ja
lods
cmp
fwait
nop
and
push
in
mov
jp
inc
add
je
and
xor
xor
dec
inc
pop
sub
mov
xchg
pusha
repz
popa
test
mov
jne
jmp
sbb
sbb
lock
adc
jns
rclb
cli
sbb
lods
clc
fs
testb
mov
lret
call
push
mov
dec
loope
call
les
insb
lods
push
sbb
push
je
fcmovu
dec
in
dec
rcl
and
test
cmpsb
pop
mov
ss
mulb
pushf
popf
push
aas
aas
jge
dec
pusha
mov
mov
cmp
push
insl
sbb
mov
das
mov
fcoml
xor
jmp
and
or
adc
mov
into
mov
out
adc
or
pushf
cmp
clc
inc
xchg
and
cmp
inc
cmp
test
sbb
je
test
fidivs
xor
insb
adc
sbb
add
or
pop
jmp
fs
test
flds
xchg
pushf
lods
jns
cmpsb
add
inc
pop
fwait
pop
and
mov
mov
xor
scas
add
jmp
in
mov
inc
loope
test
cwtl
adc
imul
pop
sbb
push
sbb
shrl
cli
add
cwtl
or
aad
pop
stos
dec
push
sub
call
cs
adc
inc
pop
ret
pushl
pop
jae
xorl
repz
pop
pop
cmp
shlb
inc
push
or
mov
xor
and
lock
pushf
cmp
in
mov
jp
fstl
mov
mov
dec
frstor
insl
sbb
addr16
insb
pop
arpl
scas
sbb
outsb
mov
inc
mov
rsqrtps
repz
or
cltd
in
cmp
dec
jb
aam
mov
adc
inc
test
xor
es
xchg
push
jae
xchg
enter
cmpsb
jae
aam
xor
sbb
fs
cmp
xchg
jle
je
mov
xchg
mov
movsl
leave
ret
mov
aam
scas
mov
repz
cmpsb
pop
add
lret
cmpsl
test
jbe
push
xor
hlt
daa
add
xchg
xchg
imul
popf
dec
lahf
adc
fs
jle
mov
fwait
mov
cmp
mov
sbb
punpckhbw
js
inc
push
out
lret
push
adc
push
leave
dec
mov
inc
mov
jae
mov
lret
xor
sub
test
sti
xorl
or
not
and
xchg
stos
aam
push
mov
xor
mov
xchg
xchg
pop
outsl
jo
xchg
pushf
incl
or
adc
cmp
sub
jo
cmp
in
cld
xchg
inc
int
lods
mov
sti
je
adc
lahf
add
sbb
xor
lds
xchg
and
mov
and
lret
jne
mov
push
mov
daa
lods
mov
cmp
xchg
mov
inc
mov
pop
sbb
push
adc
xor
mov
mov
out
rolb
dec
mov
test
cld
mov
lret
mov
das
ds
mov
push
bound
loope
pusha
in
out
aaa
jp
xchg
sbb
push
addr16
aad
dec
xorl
or
nop
outsl
jecxz
int
jae
jne
in
cmp
push
sbb
inc
dec
dec
ja
out
pop
hlt
push
rcrl
pop
jmp
in
dec
fcompl
lods
push
add
int
xchg
loop
ja
sahf
xlat
jecxz
inc
cmp
mov
push
mull
orl
sub
xchg
iret
cmp
dec
fcmovnu
inc
jg
mov
pop
xchg
scas
dec
xlat
sbb
int3
call
mov
addr16
jo
sbb
xchg
or
dec
repnz
inc
es
cmpsb
xchg
shrl
imul
mov
xchg
pop
mov
inc
repnz
call
lcall
cmp
mov
out
fldcw
jmp
in
inc
pop
ja
repz
pushf
xchg
xchg
mov
ljmp
mov
lock
or
cld
push
pop
sub
mov
lcall
jl
stos
hlt
adc
dec
nop
in
mov
inc
sti
xchg
mov
sbb
out
cltd
xchg
inc
jecxz
frndint
mov
jecxz
dec
xor
loop
sbb
mov
pop
mov
mov
sbb
lea
pop
mov
lret
jl
inc
jb
jns
push
pop
popa
out
cwtl
insb
outsb
pusha
jecxz
pop
insb
insb
cmpl
xlat
daa
or
fildll
mov
sub
mov
mov
push
shl
repnz
jmp
ret
cmc
fsubr
movsl
adc
dec
call
popa
mov
loopne
mov
adc
mov
and
pop
jb
aas
or
aas
imul
push
or
popa
or
in
pop
das
xor
pusha
xlat
and
cmp
jo
or
push
cli
outsl
outsb
mov
stc
pop
insb
ss
pop
xchg
fcoml
push
sub
gs
subb
xchg
xchg
outsl
mov
pop
mov
sbb
out
mov
xchg
xchg
stos
mov
mov
push
add
inc
lods
xor
std
push
imul
mov
jnp
jl
rcrl
iret
test
in
xor
cltd
push
xlat
mov
or
push
push
and
jp
jo
in
mov
and
cmp
jl
mov
filds
test
pop
cli
int
add
mov
scas
push
mov
xchg
mov
sahf
aas
xor
pop
out
and
rcr
decl
sub
outsb
jns
movsb
adc
push
sub
test
scas
jle
sbb
cmp
adc
leave
jbe
mov
in
xor
jno
dec
fidivrs
sbb
or
pop
aaa
aas
cld
jo
ljmp
repz
mov
movsl
push
sub
inc
inc
leave
out
jl
pop
push
test
out
ljmp
jmp
pop
in
es
sbb
mov
jl
outsb
xchg
mov
mov
lahf
mov
dec
fidivl
and
xchg
js
js
inc
int
add
into
xlat
cmp
js
jp
push
ss
mov
pop
dec
out
mov
mov
nop
mov
pop
jns
sub
lods
pushf
cmp
mov
mov
dec
mov
xchg
and
fwait
pop
mov
pop
std
push
aam
push
lods
mov
stos
adc
dec
es
cmp
fstps
mov
push
and
ret
imulb
push
push
clc
pop
sbb
cmpsb
adc
push
cmpsb
adc
pusha
fbld
xlat
or
cmpsl
and
test
es
and
and
rep
sbb
cs
pop
roll
pop
das
loopne
repz
mov
hlt
sbb
mov
cmpsb
ret
mov
adc
cmp
mov
adc
imul
pop
and
mov
cmpl
adc
dec
dec
pop
repnz
push
pop
dec
pop
jp
in
and
jmp
ret
cmpsb
mov
int3
jns
cmp
inc
and
jae
ss
js
push
xchg
xchg
into
jge
cmp
scas
cmp
dec
int
xlat
movsl
lcall
daa
or
fmull
lods
test
mov
daa
clc
pop
xor
dec
pusha
sub
pop
or
jo
push
xlat
inc
jo
das
sub
cwtl
ret
push
addr16
inc
cmp
push
ljmp
ret
repnz
repnz
inc
movsb
in
mov
or
call
imul
call
xor
fnstcw
xchg
sub
pop
cs
fdivrs
or
movl
or
arpl
xchg
push
cwtl
add
fnstcw
pop
lcall
cmp
cmp
out
fs
mov
repz
mov
adc
inc
je
pushf
sti
push
xchg
stos
repnz
add
cltd
or
scas
jp
lahf
adc
sbb
insb
fstpt
push
rcr
lret
sahf
sub
cmp
and
ljmp
adc
outsl
pop
aas
add
pusha
jmp
xchg
bound
cmpsl
inc
fwait
mov
dec
mov
xor
sbb
gs
in
add
gs
daa
push
mov
jle
push
jno
mov
popa
and
lret
pop
std
rol
mov
faddp
mov
mov
jo
rcrb
cli
int
mov
push
jbe
insb
mov
pop
cmp
fdivrl
pop
inc
shlb
stc
cmp
jge
cmp
cmp
sahf
sbb
mov
call
and
dec
push
fnsave
aam
sub
pop
ret
dec
xor
inc
and
scas
inc
jnp
fldt
or
repz
and
xchg
lods
hlt
mov
setns
sbb
sub
pop
sarb
and
jno
sarb
mov
fwait
pop
push
xchg
mov
stos
push
movsl
xchg
in
add
dec
or
or
dec
popf
mov
pop
shr
test
sbb
cmp
rol
sub
es
cs
xor
arpl
sub
or
lds
dec
jg
out
xchg
data16
ret
fsubrs
xchg
cmp
push
hlt
lds
jmp
inc
test
inc
subb
xchg
ret
pop
add
add
sub
adc
hlt
push
lahf
cld
adc
lods
xchg
and
mov
fidivl
outsl
loopne
mov
fwait
inc
sarl
insl
jmp
sbb
mov
rcr
mov
movsl
push
pop
mov
ja
std
dec
sahf
in
lds
and
fmuls
test
and
mov
jmp
addr16
fdivp
dec
scas
push
jnp
mov
pop
push
mov
pop
pop
ja
fnstenv
xchg
cmp
lret
sahf
aaa
repz
dec
sbb
cmpsb
pop
mov
inc
mov
out
lret
inc
sbbb
xor
jp
or
mov
and
pop
jp
test
sub
rcrb
pop
jns
jnp
repnz
dec
pop
inc
fmulp
xlat
mov
int3
or
xchg
fcmovne
andnps
add
jmp
subb
jmp
jge
xor
cwtl
mov
das
pop
xchg
mov
fsubl
xchg
stos
sub
idivb
cmp
jae
fs
lret
push
and
mov
test
jns
out
dec
mov
stc
aam
cmc
add
mov
mov
ret
shlb
sbb
in
cmp
bound
andl
xchg
in
xchg
sti
pop
repz
mov
fiaddl
ret
outsl
cwtl
xchg
mov
pop
jg
fwait
sbb
mov
or
dec
jecxz
call
and
mov
push
jg
or
shrl
and
stc
rorb
sbb
in
ret
inc
loope
dec
mov
das
sbb
sub
nop
mov
insl
mov
dec
addb
xlat
into
repz
cltd
or
inc
xor
pop
enter
lods
dec
dec
pop
scas
scas
imul
imul
mov
dec
pop
bound
mov
lds
mov
sub
cmp
arpl
fsubl
lods
push
ljmp
push
loopne
sarl
les
or
dec
leave
inc
xchg
test
loop
dec
inc
jo
pop
hlt
lds
adcb
testl
jbe
push
and
push
mov
repz
xor
xchg
push
imul
test
push
xlat
jg
lahf
in
jmp
cmpsb
sub
inc
or
mov
or
iret
mov
stc
mov
je
fdiv
bound
and
sub
mull
or
xchg
add
jno
test
and
lcall
loop
in
cwtl
leave
mov
aas
setns
test
sub
gs
lahf
ja
mulb
mov
pop
lods
shl
pop
or
lea
insl
fimull
inc
testb
jp
inc
xor
in
adc
cmpsl
jo
sbb
faddl
outsl
adcb
xlat
cltd
stc
inc
or
popa
push
call
cmp
test
xchg
pushf
aas
cmp
ret
pop
mov
lock
xchg
jg
rol
jbe
call
repz
je
xchg
in
incl
add
pop
push
aaa
cmpsl
mov
shr
movsb
mov
testl
sbb
aas
scas
jle
jle
xor
jp
ja
mov
gs
cmp
dec
arpl
pusha
sbb
lea
hlt
jno
push
jle
or
mov
push
cmp
jno
mov
sbb
arpl
lret
fstl
mov
pop
out
add
ret
aaa
push
cmp
sub
stc
lock
mov
mov
mov
mov
cltd
enter
or
cwtl
pop
mov
out
stos
add
aam
mov
aad
sbb
leave
add
pop
bound
xlat
je
inc
hlt
mov
shr
xor
movsb
sbb
and
enter
fstl
and
ss
cmp
mov
xchg
lcall
add
cmpb
mov
cmpsb
push
dec
icebp
imul
movsl
xor
or
adc
xchg
movsl
inc
sub
inc
jle
pop
std
je
xor
es
push
lods
js
sbb
mov
cmc
or
mov
pop
outsb
lea
or
ss
pushf
lods
add
or
push
sbb
in
divb
jge
jp
push
add
mov
xchg
stos
test
cwtl
aas
shrb
sti
aam
scas
xchg
fdiv
sub
jle
lods
je
into
rolb
push
bound
stc
jae
inc
pop
loop
test
adc
jns
iret
push
nop
mov
nop
inc
pop
pop
jbe
mov
in
cltd
cmc
pop
xchg
inc
cmpsl
mov
mov
out
xchg
add
jecxz
mov
je
icebp
adc
lds
leave
divl
or
loopne
pop
lock
dec
add
ror
sub
data16
mov
pushf
outsb
repnz
cwtl
shl
adc
call
insb
idivb
ljmp
repnz
or
push
add
sbb
fdivl
cmp
pusha
fwait
xchg
das
xlat
mov
sub
mov
jae
and
push
dec
jae
mov
xor
stos
es
insb
push
inc
adc
loopne
and
loope
adc
dec
orb
hlt
loope
mov
cmc
push
sbb
sbb
jle
pop
push
fidivrs
mov
rcrb
adc
lea
push
outsl
push
sar
sub
xchg
cmc
jle
fnsave
lret
neg
les
cmp
push
insb
std
mov
fwait
enter
adc
pop
push
imul
adc
mov
pop
str
fs
xor
add
dec
lahf
mov
call
mov
dec
push
push
out
dec
or
mov
cmp
mov
mov
bound
imul
sub
das
mov
pop
sub
or
push
jmp
push
adc
mov
test
adcb
out
pop
xchg
aad
mov
mov
mov
jge
jb
adc
inc
jle
cmpsb
xor
call
fbstp
mov
jae
fsubr
subl
mov
arpl
stc
dec
repnz
aad
adc
push
mov
mov
xor
es
add
jl
sub
xorl
pusha
in
stos
repz
sbb
les
outsl
aam
out
xchg
in
iret
xchg
and
cmc
test
adc
ret
out
dec
fisttpl
out
lea
subl
mov
outsb
add
jecxz
enter
pop
rcl
cwtl
enter
sub
dec
test
push
pop
adc
aaa
jnp
xchg
push
int3
inc
sbb
push
int
leave
pop
adcb
notb
sub
fnsave
and
dec
lock
mov
lret
push
xchg
or
or
cmp
mov
stc
insl
dec
adc
jae
mov
ret
scas
jns
fwait
sub
fs
cld
inc
mov
adc
add
inc
dec
sbb
dec
cld
in
xor
test
sbb
adc
jno
adc
push
andb
outsb
dec
mov
insb
rclb
call
add
sbb
ficoms
mov
mov
inc
test
cmp
fldenv
add
sbb
pop
hlt
addr16
push
icebp
movsl
daa
push
sub
xchg
jp
lods
dec
mov
xor
push
add
test
mov
xchg
jl
sub
push
mov
jo
scas
mov
and
mov
mov
outsb
outsl
dec
outsb
mov
stos
push
aam
mov
repnz
iret
xor
xchg
pop
push
push
jns
out
test
push
jb
cmp
mov
enter
sub
and
cld
sub
in
cwtl
jle
sbb
aad
lods
mov
sub
xchg
pop
jp
jmp
xor
push
cltd
push
push
xor
xchg
rcl
shll
sti
in
and
in
rcrl
add
and
pop
leave
dec
ret
orl
adc
jne
pop
xor
xor
fs
lock
inc
mov
stos
int
outsl
jno
aam
sarl
push
inc
xchg
push
repz
lods
out
pop
or
sbb
in
or
aas
jo
sti
dec
xorb
adc
xchg
adc
loop
adc
test
add
adc
pushf
mov
mov
pop
nop
shl
mov
pusha
dec
dec
mov
xchg
jae
pop
psubusw
ss
and
fwait
out
add
or
and
pop
inc
jle
mov
push
lods
movsl
ret
mov
fadds
mov
or
lret
add
mov
negl
fiadds
scas
sub
subb
or
adc
fucomp
daa
push
icebp
sbb
shrb
sub
stos
lret
add
fcomps
dec
cmp
sub
add
sbbl
push
push
push
push
fstpl
je
xchg
scas
scas
jmp
mov
push
jge
xor
and
mov
aaa
xchg
add
clc
sbb
popa
add
lret
xor
cmp
and
mov
jno
push
je
jg
xor
xchg
popf
sub
xchg
pop
sbb
adc
fistpl
rcrl
or
mov
cmpsb
mov
dec
jp
jo
addl
lahf
inc
fwait
dec
or
mov
popa
test
daa
push
mov
icebp
shlb
add
enter
fidivs
pop
repnz
fs
sbb
mov
test
or
jge
add
cmp
cmpl
movsl
and
adc
gs
cltd
push
mov
cltd
mov
stos
cmp
aad
dec
ljmp
clc
insl
out
ficomps
adc
das
lret
stc
out
xchg
lods
inc
repz
fists
fwait
clc
imulb
and
xor
imul
out
test
mov
lock
inc
std
mov
or
inc
inc
sti
repnz
or
popf
mov
push
mov
xor
mov
stos
cli
jo
mov
mov
mov
or
add
jbe
pop
jge
lcall
fldl
sub
insb
push
popf
jg
jle
sbb
or
aam
int3
push
out
xchg
jmp
fwait
popa
imull
in
leave
jne
int
inc
mov
lds
aad
mov
dec
mov
mov
pop
les
push
jae
sbb
xchg
xor
lods
int3
or
cld
lret
lods
ja
hlt
popa
xor
lods
inc
js
mov
pushf
inc
sbb
cmp
test
dec
mov
adc
test
adc
inc
fwait
insb
push
mov
mov
ret
mov
shrb
ds
push
lock
int3
aam
mov
stc
int
sbbl
and
nop
repnz
mov
inc
mov
out
cmp
leave
popf
xor
fsubs
shrl
clc
in
pop
jne
mov
loope
fstpl
wbinvd
sub
ja
mov
or
sbb
fcmovu
data16
outsl
pop
jl
mov
or
sub
pusha
rcrl
daa
lret
add
adcb
push
xor
stos
in
hlt
push
mov
xor
pushf
adc
push
inc
push
mov
pop
call
mov
jne
roll
insl
repz
fsubrs
outsb
and
idivb
dec
jae
shlb
scas
sahf
test
or
aad
mov
adc
pop
mov
mov
pop
in
push
rcrb
enter
jbe
cwtl
xchg
aad
sbb
add
addr16
jno
add
mov
mov
sub
inc
sbb
jp
rcll
jae
jno
add
dec
inc
pushf
adc
pop
pushf
lods
inc
loopne
cwtl
div
adc
lcall
loope
lahf
lods
ret
xor
sahf
jno
in
fdivrl
and
adc
arpl
ss
xchg
push
adc
leave
orb
das
sub
imul
call
and
inc
test
lret
mov
in
jae
sub
fmulp
cmp
xchg
ds
mov
pop
in
into
xchg
pop
das
jge
xchg
push
shlb
test
imul
mov
dec
jno
or
lret
sub
aas
push
mov
jb
es
jb
xor
pop
dec
adc
and
iret
jle
fcmovbe
cmpsb
scas
idivl
xor
ret
xchg
mov
mov
enter
lahf
idivl
in
jmp
inc
out
lret
repz
push
or
mov
cltd
jae
loopne
jp
mov
test
scas
loope
or
cmc
xor
inc
adc
mov
mov
fs
mov
mov
xor
jne
push
pop
mov
popf
and
insl
and
inc
add
mov
test
sti
or
lahf
lods
gs
stos
aas
mov
in
loop
pop
iret
stos
mov
mov
dec
xor
mov
mov
mov
in
loopne
test
popf
lods
sub
jp
jge
and
and
mov
jg
inc
lret
cmp
test
mov
and
aam
mov
inc
test
xor
movsb
jecxz
adc
cmp
int
inc
mov
lods
adc
movsl
imul
int
push
aas
pop
outsl
sub
fidivrl
cltd
popl
jge
jae
xor
dec
jecxz
pop
daa
aad
pop
and
imull
and
dec
movsb
outsl
aam
cld
popa
xchg
mov
clc
add
mov
repz
or
ret
adc
jb
aam
push
insl
ret
iret
testb
jle
daa
popf
inc
pop
into
and
push
pop
add
xor
xor
fstl
sub
sbb
fndisi(8087
xchg
addl
fistpll
in
cwtl
std
outsl
mov
mov
mov
add
xchg
stos
lods
add
out
lds
in
shrl
in
sub
cmp
stc
insb
pusha
sbb
int
cmp
lret
std
outsb
add
push
lret
mov
or
push
rcl
dec
xchg
cmpsb
testl
in
fwait
in
bound
int3
es
push
jo
icebp
inc
sti
or
stos
push
mov
lea
jg
out
xchg
dec
push
lret
dec
mov
ljmp
sub
and
mov
popf
andl
ficoms
scas
push
jbe
int
cld
mov
test
je
mov
fnstsw
popa
xor
int
mov
push
mov
push
inc
arpl
rolb
vpunpckhwd
push
mov
clc
jnp
int
adcl
sbb
mov
hlt
jo
ja
mov
insl
js
xor
adcl
jl
cltd
jns
add
fisubrs
dec
lfs
call
lcall
lods
cmp
inc
mov
mov
pop
jbe
ss
and
jg
jecxz
mov
xor
sub
out
dec
std
mov
pop
sub
pop
int3
sbb
cld
jmp
mov
cs
ja
aaa
adc
dec
jno
adc
add
mov
loope
inc
xchg
repz
xor
sub
or
mov
add
loopne
stc
aaa
xor
adc
xor
outsl
movsb
mov
add
and
ja
xchg
pop
shll
mov
fwait
mov
jo
ficoms
loope
gs
sbb
bound
jb
adc
jecxz
lock
cltd
adc
pop
mov
imul
pop
xchg
pop
jb
into
add
jns
lcall
jb
xchg
jns
into
ss
xor
lahf
mov
add
test
push
jb
xchg
std
cmpsl
mov
or
inc
or
xor
mov
aas
iret
or
pop
xor
movsb
adc
int
imull
jae
pop
inc
cs
repz
ficompl
and
test
bound
push
icebp
jg
movsb
or
and
repz
out
jp
shrb
int3
cmp
cli
sarb
adc
fimull
jb
lret
rorl
or
mov
push
pop
out
mov
data16
xor
jo
push
or
enter
mov
mov
fs
or
jle
and
mov
pop
bswap
das
sub
les
xor
mov
aad
enter
sbb
fdivrp
adc
dec
fmuls
lds
insl
sub
cmp
scas
sahf
or
and
cmp
leave
pop
insb
lods
xchg
fs
testl
jnp
inc
mov
adc
or
xchg
pop
dec
imul
dec
xor
push
inc
sbb
pop
lret
inc
and
ficoms
repz
xchg
pop
stc
cs
aam
jp
clc
add
in
rol
adc
ficomps
arpl
lds
xor
cmpsb
std
imul
adc
test
ret
aas
enter
cld
xchg
mov
sbb
decl
pushf
decb
xchg
lock
jl
lret
lcall
mov
das
je
cmc
sub
lcall
push
jl
andb
std
and
fistpll
popa
mov
fildl
adc
dec
test
push
cltd
aad
insl
or
xchg
int
mov
loopne
cmp
jecxz
das
dec
in
sbb
jl
fdivrs
add
fsubrs
xor
jbe
out
icebp
and
jl
loop
pop
jg
pop
sub
and
jl
out
fnstsw
ss
xchg
cmc
loope
xor
loopne
or
or
lods
lret
adcl
mov
imul
lcall
in
push
mov
lods
jp
push
sbb
popa
rorl
push
fistl
sub
clc
sub
loope
xchg
cwtl
aam
insb
pop
adc
xchg
push
imul
mov
push
dec
pop
add
cwtl
xchg
arpl
jno
mov
push
pop
xchg
inc
and
fldcw
mov
or
push
insb
pop
addr16
stos
or
mov
scas
mov
cmpsb
lods
xlat
sbb
xchg
insb
out
xor
cmp
test
mov
popf
cmp
push
or
sub
stc
mov
jo
push
jbe
push
inc
nop
mov
jae
pusha
js
mov
xor
adc
xor
mov
cmpb
mov
pop
pop
push
in
imull
xor
cmp
sti
repnz
aaa
lock
jns
cmp
hlt
xchg
cltd
test
fmul
test
addr16
fstps
adc
pop
push
or
sbbl
mov
sbb
movsl
mov
lock
jae
inc
mov
int
jmp
orb
lea
or
and
mov
std
and
pop
dec
test
in
shrb
dec
pop
sbb
scas
lea
loope
ret
lods
and
pop
mov
outsl
fcmovnu
hlt
outsb
test
dec
lea
pop
ret
sti
pop
stos
repz
mov
and
pop
cmc
xchg
stos
ljmp
pusha
push
mov
lds
enter
aam
dec
xor
add
dec
xor
pop
pop
jmp
push
jno
call
ret
movsb
pop
mov
out
mov
xchg
lods
pop
popa
add
int
xor
out
rcrl
cmp
mov
stos
mov
ret
push
cmp
mov
arpl
xchg
pop
icebp
je
sbb
jb
xchg
dec
or
pop
in
push
xchg
pop
add
scas
and
jb
pop
jns
fisttpll
loop
shlb
fwait
sbb
nop
jnp
mov
pop
xor
sub
add
nop
rcr
add
xchg
xor
call
adc
xchg
mov
pop
out
or
push
xchg
stos
imul
stc
out
cltd
xchg
sbb
outsb
call
push
mov
or
adc
push
jle
mov
mov
outsl
and
mov
insl
iret
in
icebp
mov
fs
sub
push
test
mov
and
sub
pop
iret
movsb
sti
dec
ljmp
std
popa
xchg
adc
and
lcall
adc
jle
inc
or
stos
aad
stos
dec
call
inc
rcrl
cmp
push
mov
cs
imul
in
movsb
jns
push
xchg
lea
jnp
lahf
mov
inc
fsubr
or
mov
mov
fisttpl
std
adc
sub
mov
pop
ja
fdivl
jge
mov
in
stos
xor
js
cmpsl
jb
lods
jle
test
push
push
imul
pushf
dec
mov
and
inc
cld
push
daa
out
jge
adc
shlb
cld
subl
adc
dec
jb
sub
pop
inc
or
cmc
out
les
sub
test
mov
js
ret
out
jae
pusha
ds
cld
fmul
adc
fmull
cmpsb
stc
cmpb
push
push
scas
dec
inc
mov
test
in
jb
mov
fistpl
inc
mov
pusha
ret
int3
dec
push
lahf
push
es
daa
xchg
xchg
inc
inc
shl
popf
lods
jo
in
movsl
pop
fdivl
in
mov
jp
sbb
sub
sbb
push
rol
call
push
xchg
push
cmpsb
jbe
pop
xchg
dec
pushf
int
adc
xchg
jge
scas
cli
jo
push
sbb
push
loope
and
int
xor
mov
xchg
movsl
mov
cld
or
pop
or
and
ret
pop
push
add
xchg
test
scas
jnp
push
outsb
jae
or
inc
mov
jns
mov
adc
add
fsub
or
or
sarl
popf
lcall
sahf
lock
pop
sub
pop
pop
mov
pop
xor
loop
push
call
mov
push
insl
sbb
movl
cld
or
jmp
jge
and
shll
mov
fildll
test
idivb
dec
or
stos
fwait
xchg
xchg
gs
cmp
mov
stos
push
dec
mov
hlt
cmp
jmp
xor
dec
and
and
adc
shlb
push
fld
and
pop
mov
scas
sub
push
pop
pop
mov
adc
fidivrl
adc
mov
jp
sub
daa
int3
adc
hlt
daa
imul
jmp
add
mov
jp
fmull
push
outsb
pop
jl
jg
test
js
imul
and
dec
pop
add
dec
sub
cwtl
imul
xchg
or
push
mov
fwait
ret
ret
inc
jnp
out
in
mov
lcall
xchg
push
jl
push
out
enter
add
inc
nop
jae
xchg
mov
mov
lods
icebp
mov
sbb
sti
cmp
popa
pop
das
xchg
push
in
loopne
rcr
and
cmp
inc
inc
inc
pop
mov
arpl
mov
jae
repnz
movsb
shll
iret
fldcw
ss
popf
sbb
sub
call
or
ljmp
mov
xlat
push
and
das
cmp
add
jns
push
pop
dec
rorl
leave
jo
pushf
int
jg
aam
mov
movsb
aas
mov
std
leave
pop
push
adc
call
jmp
mov
inc
leave
outsb
in
ret
lahf
push
dec
jl
adc
roll
outsb
or
jmp
leave
sarb
sbb
push
push
cmp
addr16
add
ret
mov
mov
mov
sub
jnp
in
mov
push
cli
cmp
mov
sbb
or
mov
sbb
pop
lcall
in
add
mov
inc
cmp
inc
jecxz
jae
mov
adc
xchg
subb
stos
stc
movsl
dec
xchg
sub
jbe
ljmp
popf
adc
fcomi
mov
fs
js
push
insb
inc
mov
sbb
add
pushf
xchg
xor
pusha
imul
fisttpl
shlb
fnstsw
into
sbbb
lcall
popf
popa
insb
mov
ret
cmpsb
push
mov
mov
or
sbbb
cmc
xlat
sub
sbb
movsb
jbe
and
cltd
dec
pop
xor
shr
adc
bound
ds
inc
int
mov
push
pop
adc
pop
xchg
gs
decb
jo
mov
cmpb
add
insl
es
cmc
add
sahf
out
dec
pop
adc
sbb
add
mov
pop
aas
and
addr16
dec
dec
dec
lds
mov
push
enter
adc
jmp
iret
pop
cmp
xchg
push
into
or
arpl
cmpb
popf
fmulp
push
jle
push
fsts
and
lock
cli
mov
inc
sub
incb
aad
cmp
push
sbb
jecxz
pop
sbb
fsts
mov
jb
imul
cltd
out
pop
es
outsb
lods
jns
xor
jno
mov
pmuludq
jl
dec
add
push
fnsave
jmp
clc
adc
and
mov
in
or
imul
pop
jo
mov
mov
push
jg
dec
js
fdivrs
jne
mov
js
sub
popa
divb
cmp
cwtl
cmp
jmp
push
js
loop
push
mov
cltd
mov
rcr
sbb
push
decl
jle
cltd
fldl
enter
icebp
push
xrelease
xchg
pop
arpl
rclb
jo
inc
pusha
ljmp
adc
in
cmpsb
popa
jp
sti
xor
lcall
push
xor
shll
ljmp
hlt
lds
les
adc
xchg
xor
mov
push
test
cli
jmp
movsb
cltd
xor
or
lock
xchg
pusha
fucomip
inc
pop
and
sub
pop
dec
cli
in
popa
aaa
jp
lret
mov
cmp
xchg
mov
or
in
push
xchg
call
dec
insl
cs
enter
leave
js
or
pushf
cmpsb
enter
sbb
test
dec
vmulsd
pop
out
xchg
mov
and
xchg
mov
jp
cmp
cmp
sbb
push
sub
add
mov
lock
rcrl
mov
ja
loopne
enter
iret
lret
popa
sbb
jbe
cs
pop
mov
pop
inc
mov
xchg
stos
flds
dec
cmp
sti
cmp
sub
and
aas
das
mov
movsl
pushf
addr16
sbbb
or
push
mov
or
mov
dec
ret
das
std
pop
push
dec
inc
pop
stos
bound
sar
mov
jns
dec
mov
testb
test
or
in
sub
inc
xchg
cltd
jmp
sbb
in
cltd
test
inc
popf
nop
nop
mov
stos
sahf
dec
arpl
or
sub
sub
rclb
sarl
out
jmp
xchg
aam
leave
push
aad
sub
ffree
cli
xor
in
add
push
das
adc
stos
loop
sub
push
out
gs
sbb
adc
aas
lahf
pusha
lret
xchg
lods
mov
lahf
lcall
cltd
sub
xor
pop
daa
xor
ds
add
test
lock
push
push
pop
sbb
cmp
inc
add
cld
test
js
xor
mov
mov
in
sbb
mov
es
mov
andb
xlat
repnz
sahf
sbb
lods
sub
int3
dec
and
jge
addr16
push
sub
notl
xchg
scas
mov
movsb
in
data16
into
popa
pushf
cmp
dec
or
adc
out
sub
stc
cmpsl
or
icebp
pop
or
movsb
mov
xchg
pusha
add
sbb
imul
loope
sbb
cmc
jno
sbb
out
push
subl
mov
cmp
or
or
loop
mov
jp
pop
cwtl
and
mov
cmp
out
sbb
sbb
pop
push
mov
fidivrs
pop
out
sub
sarb
enter
imul
mov
mov
mov
sbb
add
jmp
outsb
xchg
scas
and
push
cmc
sbb
push
inc
fwait
shrl
inc
dec
cmp
fbld
cmp
iret
roll
sub
fimull
sbb
inc
inc
popf
in
and
cmp
lret
xor
enter
inc
xlat
enter
adc
outsb
cltd
loope
pop
das
addr16
jo
xor
mov
sbb
pop
aad
cmp
ja
push
dec
dec
mov
pushf
mov
pop
or
in
rcl
aam
sbb
cmpsb
sbb
repz
lret
sub
cltd
ficoml
pop
imul
ja
pop
xor
repz
or
imul
stos
mov
jo
jnp
lea
in
sbb
xor
out
sub
inc
or
cwtl
dec
adc
in
andl
mov
jns
das
cmp
jmp
xchg
aam
jnp
fistpl
xor
jmp
push
insl
jne
push
call
mov
lcall
movsb
pop
lods
in
mov
in
andb
xor
test
jle
ret
inc
aad
push
stos
xor
stc
xchg
jmp
inc
test
fwait
cltd
pushf
sub
fs
inc
adc
sbb
mov
aam
jmp
pop
loop
mov
bswap
and
xchg
imul
fisubl
jl
adc
fdivrs
divb
sbb
jns
stc
mov
push
push
popf
mov
xlat
movsb
cwtl
push
roll
mov
imul
add
mov
pop
imul
popa
mov
test
inc
es
push
sbb
int
jnp
lcall
xor
rorb
inc
aas
cmp
out
adc
cmpsl
je
add
mov
call
fdivrl
jmp
loope
sub
add
sbb
sub
adc
pop
jl
or
test
mov
in
arpl
in
jg
and
cmp
call
mov
adc
or
fcomip
fmul
test
pop
ds
clc
pushf
jne
call
jnp
sahf
xchg
pop
pop
add
mov
pop
js
inc
pushf
in
ds
pop
cmp
rcll
jnp
mov
loope
xchg
sub
rclb
push
cld
sub
pushf
jle
fdivl
mov
insl
rcrl
add
bnd
mov
xchg
movnti
imul
fs
push
jl
out
arpl
xchg
jp
cwtl
or
jnp
negw
pushf
cltd
scas
mov
test
stc
dec
cmp
pop
ret
inc
cwtd
or
imul
enter
mov
jl
xchg
repnz
inc
push
ljmp
cmp
xchg
ficoml
cs
dec
fsub
mov
repnz
or
mov
mov
push
test
repz
push
dec
mov
xor
push
mov
fdiv
call
int3
cli
xchg
mov
adc
or
mov
push
jecxz
outsl
je
inc
lods
test
ret
pop
stc
adc
and
fisttpl
adc
dec
push
mov
arpl
jno
add
and
lods
or
and
sbb
inc
ret
stos
les
cmpsl
sbb
in
clc
mov
mov
sub
mov
mov
out
ret
pop
pop
fdivrs
sbb
pop
ljmp
lret
and
jle
push
push
lods
outsl
fs
lahf
pop
test
cmc
push
xchg
mov
shlb
out
into
lods
insl
int
mov
into
fs
lock
xor
adc
aam
scas
test
insb
lahf
in
mov
insl
rcr
pop
jl
popa
imul
mov
cs
fcomp
or
push
enter
sub
pop
dec
dec
dec
stos
fadds
mov
daa
and
mov
mov
lcall
aad
in
push
dec
mov
push
xlat
sub
loopne
enter
cmpsb
test
mov
xchg
push
repz
ss
adc
xchg
or
int
out
mov
push
and
push
mov
stos
inc
push
push
std
fwait
dec
test
fsubs
pushf
mov
dec
lahf
mov
jbe
pop
xchg
dec
adc
shrd
divb
test
shl
int3
xchg
pop
outsl
adc
sbbb
dec
push
lahf
pop
fstl
jl
les
ss
dec
ret
sbb
add
sub
push
inc
mov
or
xor
mov
pusha
inc
pop
fmul
mov
push
mov
movsb
ljmp
inc
or
adc
insl
repz
dec
dec
xor
in
jbe
and
pop
jae
sbb
cmpsb
push
fmull
outsl
mov
bswap
mov
test
sub
sub
sbb
ret
mov
in
inc
push
add
neg
stos
leave
add
lea
push
nopl
xchg
mov
push
push
add
dec
cs
out
jbe
cmc
inc
pop
pop
or
push
decb
mov
xchg
ret
call
or
jne
inc
xor
out
sahf
cmp
mov
in
loope
mov
fs
pop
push
lret
cld
out
jno
cmpsl
stc
push
lahf
xchg
stos
or
insl
mov
std
push
std
mov
and
call
pop
mov
inc
les
and
dec
test
sbb
xchg
xor
ja
add
adc
ds
adc
in
bound
push
mov
pop
mov
xlat
gs
fnstenv
int
push
xor
xchg
out
mov
xor
fsubl
jl
inc
lock
call
fsubrl
mov
cmp
mov
jg
shlb
xchg
push
add
cmpsb
sub
sub
mov
int3
movsl
push
cltd
mov
sub
mov
dec
mov
pushf
inc
push
std
sub
xor
inc
leave
sti
ljmp
pushf
dec
cs
mov
test
cld
dec
push
loop
jl
mov
lods
mov
stos
cmp
sbb
add
je
lods
xor
or
loop
pop
and
sbb
dec
mov
mov
ds
pop
xlat
mov
dec
mov
and
hlt
addl
mov
pop
mov
and
ljmp
sbb
mov
dec
xor
sub
sbb
hlt
test
shll
loopne
sub
shl
int3
cli
sbb
vmovntps
pop
outsb
jle
sub
pop
imul
test
cmp
movsb
sub
cmp
pop
loopne
ljmp
dec
fisttpl
mov
mov
lock
push
xor
jg
push
adc
sub
and
cmp
mov
pop
js
add
pop
notb
add
aaa
adc
mov
sbb
xchg
push
cmp
mov
loop
int
int
xchg
dec
mov
movsb
jnp
jbe
test
dec
repz
pop
pop
int
data16
insl
out
loopne
ljmp
sub
sbb
les
jmp
enter
pushf
sbb
ljmp
mov
ds
imul
fimull
stos
dec
iret
fwait
cs
shr
data16
insb
jl
jecxz
test
lahf
ds
xchg
mov
andl
cwtl
and
mov
push
dec
cwtl
fs
filds
xchg
and
js
lds
insl
cltd
roll
adc
cmpsb
gs
mov
int3
sub
or
add
push
fcmovnb
imul
jns
sub
push
add
cwtl
add
mov
ljmp
sbb
in
fs
mov
addb
ljmp
xlat
fwait
adc
ret
xor
rcrb
push
lods
hlt
ss
mov
sub
xlat
jmp
aam
inc
mov
push
jecxz
cmp
cmp
inc
or
jge
fwait
dec
adcl
mov
jo
in
rcrb
cmovbe
in
popa
jo
insl
jp
test
jl
inc
imull
lods
sub
outsb
or
push
dec
mov
fs
dec
pop
sub
lods
fwait
cmp
push
cmpsl
aas
pusha
inc
in
les
bound
daa
xchg
or
inc
push
xchg
mov
sbbl
out
mov
sbb
mov
jno
push
push
mov
pusha
push
in
cltd
inc
aam
or
lock
xchg
mov
je
mov
push
ss
std
add
cmp
jecxz
repz
mov
push
dec
js
lds
jmp
dec
lds
pop
clc
fcompl
iret
add
outsl
repz
and
push
adc
adc
stc
in
xor
xchg
mov
wrmsr
mov
mov
and
sti
lahf
sbb
xchg
adc
cmpsb
inc
xor
pop
jmp
push
cltd
f2xm1
lods
push
add
leave
or
fcmovbe
sbb
sbb
push
in
push
sub
push
sbb
push
inc
add
inc
bound
ret
fidivrs
insb
push
int3
stc
and
outsl
into
jo
pop
jl
and
jae
xchg
cli
cltd
leave
or
xchg
mov
insl
sub
icebp
push
loopne
aam
dec
andnps
cmp
push
insl
in
ss
jbe
movsb
xchg
dec
dec
jl
and
xchg
roll
jbe
xor
lcall
repz
push
stos
repnz
das
xchg
pop
add
insb
cld
pop
mov
fstpl
lods
dec
or
fistpll
in
cmp
dec
sbb
lret
testb
xor
jnp
push
test
adcl
enter
xor
mov
fistps
inc
push
dec
in
inc
mov
cld
xchg
leave
xchg
out
cmc
push
push
jnp
iret
mov
dec
jecxz
push
pop
pushl
sub
sub
es
pop
cmpsb
mov
call
mov
sub
sbb
jl
hlt
mov
xor
cmp
or
orb
pop
fdiv
mov
sub
repz
popf
add
shlb
pushf
repz
push
ficoms
repz
push
mov
cmpsb
dec
inc
or
cs
lret
in
pop
decl
xchg
gs
dec
test
sbb
dec
insb
negb
xchg
jg
sub
xchg
pushf
push
pushf
mov
test
cmp
fstpt
pop
insl
popa
adc
xchg
popf
cmc
outsb
xchg
scas
xor
sub
mov
pop
mov
insl
xchg
sub
jmp
lea
pop
push
push
xchg
cmpsl
push
fisttps
push
fistpl
adc
call
fwait
loope
adc
mov
xor
movl
out
push
std
out
lret
loop
sbb
stos
rolb
xchg
mov
stc
cmp
lret
mov
xchg
movsb
adc
icebp
bound
xchg
maxps
xor
mov
cmp
push
mov
push
in
faddl
mov
add
pop
fwait
sahf
les
cmp
inc
scas
add
aad
popa
bound
out
adc
jge
div
sbb
and
pop
cld
xchg
xchg
ret
push
shrb
movsl
mov
xchg
mov
stc
dec
sub
inc
mov
sahf
inc
sarb
loopne
mov
fadds
sbb
or
dec
inc
fists
iret
xchg
rcll
bound
dec
decb
adc
mov
decl
loop
inc
xor
aad
or
popa
xchg
and
push
adc
testl
loopne
enter
push
in
lea
sti
ret
out
and
cmp
dec
insl
push
jns
fsubr
inc
inc
inc
movsl
sub
pusha
or
xor
mov
sti
and
scas
dec
sub
inc
sub
cmpsb
push
xor
lahf
dec
lret
scas
xor
sub
dec
or
cld
jle
mov
mov
adc
sub
inc
icebp
cwtl
and
lods
les
mov
fs
pop
cmp
xchg
test
cmpsb
dec
in
jne
inc
sahf
sub
jne
mov
and
aam
mov
jmp
ror
sub
ds
imul
in
rorl
mov
cmp
sti
in
movsl
fdivrs
enter
loop
mov
inc
pop
sub
pop
mov
jp
leave
sbb
xlat
jo
mov
int3
adc
push
add
ss
ror
arpl
popa
and
mov
mov
imul
and
inc
hlt
stc
and
mov
sub
and
sub
jl
push
iret
xor
mov
lods
add
xbegin
iret
js
mov
pop
aas
outsb
mov
ret
xchg
and
dec
pop
cmpsb
data16
shr
and
jbe
sub
les
lock
sbb
mov
adc
sbb
dec
ror
fimuls
or
jno
cmp
pop
movsb
mov
jo
xchg
mov
jmp
cmp
leave
call
scas
add
and
loope
mov
xchg
dec
test
dec
cmp
mov
daa
aam
hlt
mov
mov
jnp
xor
jns
scas
outsl
sub
dec
lret
sti
jmp
pop
lods
movsb
in
mov
push
xor
adc
addr16
push
fildl
ds
arpl
shrb
mov
cmc
mov
stc
repnz
testb
ja
xor
shll
xor
push
nop
sub
xchg
jmp
insl
cmc
int
lret
addr16
xor
fistpl
fsubrl
mov
pop
cmpsb
aaa
or
int3
push
pusha
cmpsl
mov
int3
test
mov
mov
mov
mov
cmp
pop
mov
ret
mov
lock
repnz
in
xor
pushf
sbb
fs
idivl
push
add
mov
jb
imul
cmp
lret
xchg
inc
pop
dec
or
pop
adc
xchg
jo
fdiv
movsl
jb
test
mov
or
mov
ficomps
pop
jno
push
inc
push
mov
ret
pop
sbb
push
lret
pop
jmp
sub
adc
adc
in
sub
pop
ret
mov
sub
inc
in
stos
and
push
setb
add
data16
push
loop
adc
ljmp
xchg
mov
xchg
xor
jnp
sbb
pop
fistpll
mov
mov
imul
loopne
in
xchg
sub
dec
jo
in
pop
in
and
mov
xchg
fsubrl
jnp
jno
mov
xchg
hlt
ret
cmc
push
mov
push
lods
fistps
mov
mov
mov
xchg
pop
in
jno
jmp
add
cmp
fnstcw
mov
addr16
jnp
lods
push
cltd
popa
inc
test
ljmp
push
and
sbb
mov
xlat
cmp
lahf
xchg
push
je
or
hlt
int3
std
stos
and
jae
aad
dec
out
mov
xor
jle
rclb
mov
xchg
mov
jecxz
out
insl
add
cmp
dec
pop
push
sahf
mov
mov
xor
mov
xor
int3
hlt
sbb
xchg
adc
xchg
dec
testb
pusha
std
lret
loop
adc
dec
or
jo
cs
mov
clc
sbb
fmull
inc
jle
fs
xorb
xchg
push
fnop
mov
mov
adc
cmp
ret
push
lods
or
arpl
fs
xchg
or
ror
push
das
test
pop
push
mov
jg
insl
sbb
aam
push
mov
fs
mov
sub
mov
inc
int3
daa
xchg
pop
or
or
jmp
jno
inc
hlt
adc
subb
add
int3
dec
rclb
sub
push
loopne
push
test
sbb
and
xor
out
dec
xchg
popf
lret
lret
jbe
mul
sbb
xchg
pop
addl
rcrb
cli
cmp
rcrb
xchg
in
push
out
push
pop
enter
aaa
fs
adc
xchg
in
xlat
icebp
shll
xor
push
xchg
pop
xor
pop
cltd
int
push
pop
data16
push
js
in
jb
sbb
mov
mov
sub
repz
int3
inc
add
and
push
sub
dec
icebp
push
nop
xchg
loopne
inc
mov
push
xlat
cmp
sbb
push
leave
sbb
cmp
sub
rcrb
adc
imul
in
divl
movsl
movsl
enter
xchg
ret
movsb
out
add
loop
std
or
outsb
stos
push
and
rcrb
sbb
in
into
repnz
mov
push
dec
adcl
pushf
pop
or
shll
xchg
mov
ljmp
test
aad
xchg
lods
test
mov
inc
dec
pop
and
fidivrs
rclb
sti
lods
lods
jnp
enter
jns
int
nop
inc
sti
fistpll
and
sub
mov
lret
lods
stos
mov
outsl
test
sahf
and
ss
lahf
ss
mov
jle
fldt
xor
aaa
add
dec
in
cmp
stos
testl
xor
aaa
cmp
arpl
pop
adc
adc
lds
mov
call
outsl
stos
rolb
pop
adc
cli
std
loop
jnp
pop
sbb
lock
lea
in
mov
test
xchg
subb
fsubr
lahf
pop
sbb
sub
jnp
mov
rcll
loopne
inc
mov
test
rclb
cmp
push
jb
jne
ret
lds
jns
dec
fwait
out
adc
sbb
pop
jno
push
ljmp
and
add
push
or
add
cmp
xchg
mov
scas
push
adc
inc
lret
pop
fs
or
jecxz
lods
push
aaa
sbb
test
arpl
ret
fistps
fs
push
in
aam
bound
or
push
pop
lods
xor
and
test
sub
mov
mov
stc
or
lahf
cwtl
mov
out
stos
xchg
arpl
xchg
mov
fnsave
std
push
scas
push
push
mov
mov
icebp
lock
ds
cmp
and
sti
bound
test
pushf
clc
inc
addr16
xor
push
add
mulb
sti
pop
jge
aas
ret
mov
push
jns
pop
fwait
loope
and
fcomps
lods
dec
xchg
insb
mov
add
push
push
dec
cmp
mov
and
out
jne
mov
and
or
adc
in
shl
pushf
pop
adc
mov
icebp
out
mov
std
and
enter
sub
mov
outsb
or
inc
pop
xor
add
jl
test
jb
out
push
pusha
je
es
lods
push
mov
pushf
jecxz
std
ret
cmpl
sbb
add
shrb
hlt
fisubl
push
std
push
jnp
data16
mov
mov
out
mov
xor
hlt
cltd
xchg
jmp
mov
and
mov
popa
out
and
mov
aaa
mov
mov
jb
es
leave
test
ds
inc
jno
pop
fidivrl
push
adc
out
lret
xor
dec
add
in
pop
mov
inc
out
test
push
fcomip
pop
inc
push
jae
jle
cwtl
push
xor
pop
lahf
sbb
sbb
push
mov
loopne
cmp
test
jge
cld
insl
mov
cmpsb
fiadds
lock
sbbl
addr16
push
shl
outsl
inc
insb
repnz
lcall
add
mov
fists
sub
inc
xor
setb
hlt
fs
fisubrs
push
xor
out
fucomi
fisttpl
jne
cmc
or
mov
add
pop
repnz
and
xchg
mov
pop
loopne
mov
ss
xchg
xchg
divl
das
dec
outsb
xchg
lods
mov
out
xchg
sar
xchg
xchg
lret
fcmovnb
mov
ret
and
std
int
jmp
inc
movsb
fwait
rcll
and
xor
test
add
push
mov
mov
cmp
xchg
add
xor
out
add
pop
outsb
dec
jge
sub
lret
test
push
ja
scas
ljmp
inc
jg
mov
les
mov
pop
xchg
pop
add
mov
leave
test
jmp
mov
call
pop
dec
aaa
shll
inc
enter
lret
cltd
movb
movsl
push
and
pop
cmp
out
and
imul
xchg
xor
xchg
dec
sbb
icebp
xor
scas
hlt
inc
fisubrs
loop
test
add
xchg
adc
test
sub
pop
rclb
inc
xlat
sub
in
jl
addr16
pop
inc
shlb
insl
xchg
cmp
sub
mov
fisttps
mov
insl
bound
sub
je
mov
or
lret
mov
cli
cld
fists
movsl
mov
inc
mov
push
xor
and
fnstenv
out
pop
or
sub
je
lock
sub
lcall
pop
mov
hlt
dec
add
outsb
xchg
popa
aas
xorb
jns
mov
inc
mov
push
arpl
cltd
jo
lods
push
sbb
out
ljmp
iret
les
icebp
mov
shlb
dec
imul
popf
inc
mov
stos
xchg
adcl
dec
jg
out
jnp
cmp
xchg
jl
stos
pusha
pop
mov
cmpsb
push
sbb
adc
aad
pop
xorl
in
cmp
and
js
outsl
mov
jne
cmp
bound
mov
pop
push
or
add
push
jp
jl
enter
sub
mov
fldl
jle
iret
js
lcall
lods
dec
pop
sub
jbe
jp
mov
pusha
cmc
shl
inc
aaa
adc
fsubl
mov
pop
cmp
and
or
dec
add
pop
sbb
sahf
movsl
cs
cmp
pushf
in
bound
cmp
dec
test
pop
mov
xor
pushf
in
stos
negb
popa
cmpsb
cmp
sbb
adc
test
aas
push
xor
je
cmpsl
mov
sub
movsl
or
cmp
and
arpl
lea
and
add
ds
call
pushf
pop
xchg
mov
mov
dec
sbb
push
int3
lret
add
stos
xchg
push
lahf
addb
dec
mov
loope
pushf
in
add
cmpl
daa
push
test
popa
inc
inc
sbb
adc
imul
cmp
jmp
dec
add
push
push
mov
aas
pushf
call
icebp
cmp
mov
lret
xor
out
mov
sti
stc
ja
cmc
mov
icebp
cld
jne
cmpb
mov
test
or
sarl
xchg
fnsave
pushf
and
or
ret
into
nop
imul
dec
in
scas
insl
aam
test
out
push
push
int
and
das
ret
loop
pop
sub
int
xor
pusha
lahf
or
shr
out
sbb
rorb
rcrb
aam
push
xor
aas
mov
iret
mov
sub
fdivrl
inc
mov
icebp
push
add
dec
jae
stc
stos
cmp
add
inc
pop
aas
adc
cltd
stos
xor
daa
cmp
xor
cli
or
sarl
lret
pop
mov
pop
sub
push
enter
and
mov
mov
sub
jge
bound
pop
int3
dec
in
lock
bound
pop
lods
cmpsb
lock
negb
inc
jg
and
and
add
xchg
dec
mov
insl
enter
sbb
fld
pop
mov
jae
dec
xor
shll
jns
mov
pop
sbb
inc
cmp
push
lahf
inc
in
cltd
ret
lret
push
out
jb
xor
jae
cli
sub
jae
popa
xchg
loop
push
mov
cmp
push
lds
jge
aad
aam
sbb
bound
sbb
mov
scas
inc
jno
rol
clc
rol
es
icebp
dec
push
pop
insl
cs
fdivrs
mov
imul
leave
sahf
gs
fnsave
inc
loopne
int
out
dec
iret
push
loope
lret
and
xlat
lods
mov
jp
bound
jo
dec
sbb
add
xchg
or
cwtl
idiv
pushf
in
mov
outsl
fcompl
inc
adc
rcll
lea
scas
fimuls
pop
xchg
mov
inc
xor
pop
and
out
ret
mov
pop
adc
les
cmp
addr16
js
leave
and
mov
sbb
sbb
pop
and
lock
bound
divl
cld
mov
in
fimuls
loope
mov
mulb
dec
into
sbb
mov
add
jno
sbb
xor
loope
mov
lock
pusha
and
or
addl
sub
mov
adcb
insb
pop
and
roll
aaa
or
rorl
lea
cmp
ret
push
jmp
aad
das
sbb
dec
cld
sub
fnsave
mov
xor
sbb
cmc
adcl
loop
adcl
shr
pop
fnstcw
cmp
mov
inc
inc
hlt
data16
push
rcrb
dec
mov
jge
aad
lock
addr16
push
ret
fistps
lds
pop
out
sbbb
lods
lret
cmp
xor
cmpsb
xchg
out
imul
dec
push
pop
or
push
je
in
fs
mov
mov
dec
lcall
lods
shrw
sbb
imul
jmp
cmpsl
adc
divl
sbb
pop
mov
in
pushf
push
sbb
inc
and
cwtl
or
test
repnz
dec
std
stc
outsl
add
add
push
cmp
fdivl
pop
cwtl
xor
and
cs
pop
inc
pop
js
sub
movsb
fwait
jecxz
sub
adc
jmp
jp
or
mov
jmp
pop
movsl
pop
int3
push
and
cmp
mov
mov
test
dec
sub
out
sti
and
arpl
and
pop
ljmp
mov
pusha
cmc
fnstenv
sbb
cmpsl
in
fimuls
push
stc
in
mov
test
pop
rcll
ss
adcl
dec
dec
jbe
movsb
xchg
ljmp
in
cld
fistpll
incb
xchg
fninit
je
mov
xor
cld
sub
in
dec
mov
dec
mov
push
sub
jns
dec
xchg
notb
mov
sti
mov
xchg
jp
andl
mov
loope
sub
cmp
pop
add
jns
mov
enter
int3
sub
sarl
mov
mov
mov
jecxz
mov
test
clc
mov
fs
inc
mov
nop
sbbb
decl
adc
pop
inc
mov
jnp
jns
xchg
push
push
js
inc
imul
dec
popa
pop
or
pop
sub
inc
jo
sub
or
push
insl
xor
outsl
xor
adc
rclb
and
mov
in
arpl
repnz
popa
add
imul
aaa
rol
in
sbb
or
sub
sbb
mov
insl
in
clc
xchg
pop
cmp
jmp
pop
int3
fdivrs
mov
imul
and
and
mov
sbb
add
mov
into
jl
mov
stos
pop
mov
dec
cld
dec
aaa
mov
ljmp
in
mov
enter
ror
jl
stc
test
dec
adc
push
add
pop
mov
sub
xchg
insb
fdivr
xlat
push
scas
jg
or
js
ret
pop
pop
jo
int3
sub
shrb
xchg
enter
xor
sahf
decl
cmp
cmpsb
mov
aad
pmullw
cli
sbb
and
or
fsts
insl
jne
movsb
sbb
icebp
int3
les
push
imul
sub
inc
jecxz
das
iret
sbb
push
sarl
lock
push
xor
into
dec
insb
dec
push
ja
push
sub
add
xor
dec
out
jmp
push
movsb
mov
sub
stos
fwait
cld
xor
dec
iret
xor
imul
int
jae
cs
outsb
rcrb
xor
inc
lahf
sub
push
mov
movsl
mov
lods
js
loopne
push
inc
icebp
data16
sbb
jmp
mov
loope
shll
lcall
je
into
mov
sbb
sbb
xor
scas
lea
test
loope
and
and
pop
nop
or
xchg
inc
dec
push
sub
dec
mov
fcmovnu
lea
outsl
dec
xchg
subb
bound
test
jbe
mov
out
stc
jle
js
cmp
push
ret
and
repz
movsl
pushf
mov
cwtl
xchg
push
sub
stos
cmp
sbb
cwtl
daa
test
fs
push
movsb
das
lods
jbe
cltd
stos
aaa
outsb
lahf
aas
inc
and
cmc
arpl
mov
ret
in
lret
jp
xchg
xor
popf
repnz
mov
ja
jae
add
sub
adc
jl
mov
xlat
xchg
pop
inc
mov
outsl
dec
mov
repz
push
adc
psubusb
mov
cli
and
cmc
dec
out
mov
add
loopne
sbb
or
inc
or
lret
or
cmpsl
ss
mov
or
movsl
ja
leave
stc
cmp
pop
outsb
mov
fucom
jle
mov
gs
xchg
add
add
inc
lods
fstps
xchg
adc
je
stos
and
xorl
packuswb
or
cmp
xchg
sbb
fwait
ljmp
push
sbb
pop
adc
mov
pop
idivl
push
cli
lock
mov
push
ds
ss
and
cmp
xor
addr16
aaa
cmp
adc
repz
push
adc
pop
rcl
mov
dec
pop
lea
cmp
popf
sub
mov
fcmovnbe
leave
lods
popf
sub
xlat
aaa
pop
ret
pop
mov
add
in
mov
mov
mov
dec
cli
sub
and
outsl
sub
cmp
test
jb
push
add
adc
mov
setl
stc
jbe
sbb
add
cli
lea
xchg
and
add
cs
adc
add
cmp
shrl
int3
insb
rorb
pop
xchg
mov
in
jp
ljmp
std
cmp
pop
cltd
add
xchg
in
mov
ret
test
or
sbb
add
dec
inc
or
mov
jge
pop
or
mov
loop
movsb
add
lret
ror
data16
pop
adc
mov
xchg
inc
mov
lahf
xor
xchg
push
xchg
arpl
cmpsl
rsqrtps
xchg
xor
sti
es
push
in
mov
mov
ljmp
add
mov
outsb
push
scas
frstor
mov
adcl
fldt
adc
std
cld
xor
fistl
js
xor
imulb
out
fisubrs
int3
fimuls
aaa
cmp
mov
out
jno
das
inc
mov
aad
push
sbb
popa
shrd
out
mov
and
mov
push
jmp
and
and
pop
jno
shrl
dec
stos
sbb
fs
cs
dec
or
push
sbb
jne
push
mov
sub
int3
lods
xchg
dec
jae
inc
loopne
fincstp
add
push
stc
es
adcb
repz
fs
cs
mov
lcall
sbb
dec
lahf
xchg
cmpsl
lods
inc
and
or
popa
dec
inc
inc
adc
dec
push
and
xor
aas
push
cwtl
pop
inc
sub
mov
jle
shlb
xor
and
jp
pop
mov
fstpt
and
or
rcl
ds
xchg
js
std
push
ret
loopne
iret
jb
test
and
hlt
push
adc
jnp
je
lods
test
lret
insb
adc
mov
dec
scas
addr16
or
out
cmp
lods
cld
enter
jo
fistps
sub
jge
jge
loopne
iret
hlt
sbb
mov
les
in
cmp
sbb
pop
ret
inc
inc
in
xor
xchg
or
pop
push
xor
fsubs
popl
dec
xchg
cltd
rclb
ret
mov
popa
cmp
add
mov
ffree
push
mov
mov
call
mov
xor
repnz
adc
mov
push
stos
jo
cmc
std
add
inc
jl
cmp
lcall
xchg
fisttpl
jb
clc
sub
scas
mov
flds
add
sub
push
push
mov
shrl
xchg
jge
dec
test
sbb
dec
add
pop
es
negb
xor
xor
dec
or
ds
cmp
jno
shll
andb
push
lret
xchg
adc
jae
movsb
pop
outsb
sub
test
jl
push
outsl
jo
cmp
insb
fiadds
dec
data16
sbb
pop
lock
std
in
sbb
rcll
sub
xor
icebp
inc
outsl
xchg
jmp
inc
jae
out
movsb
repnz
fisubs
in
das
rcrl
iret
mov
daa
pop
fcompl
int3
fscale
pop
in
cwtl
call
inc
pcmpgtd
lods
sub
fnstenv
inc
inc
in
and
stc
dec
cmp
rcr
ret
adc
push
ss
push
out
dec
fsubrp
add
cmp
mov
cld
sub
push
andb
ja,pn
movsb
cli
sub
in
das
mov
mov
subb
xchg
jg,pt
mov
sub
loopne
and
test
dec
lea
and
sbb
xchg
imul
mov
aam
sbb
mov
fistl
out
loopne
lods
add
mov
lret
out
shlb
ss
inc
jmp
pop
outsb
and
add
mov
lahf
sbb
call
pop
cmp
outsl
push
pop
jp
sub
xor
xorl
sbb
adc
jne
lret
push
and
push
shll
hlt
cmp
outsl
lods
fnsave
insl
mov
jb
jecxz
roll
jg
xor
loopne
out
mov
decl
pop
mov
sub
call
xor
add
sbb
les
int3
mul
jle
repnz
jmp
xchg
loopne
pop
cmp
mov
rclb
pop
jo
shrb
sbb
xchg
xchg
sub
test
into
aad
sub
ret
icebp
loop
notb
adc
mov
insb
int
xlat
insb
jo
mov
mov
fistpl
int
mov
clc
sub
lret
fiaddl
pop
cmp
lods
sub
mov
pop
outsl
mov
cmp
push
mov
mov
sub
pop
pushf
and
mov
xchg
pop
pop
shll
cmpsl
jmp
adc
adc
xchg
lods
jmp
sub
ret
xchg
and
das
pusha
gs
cmp
fs
pusha
jge
je
ja
in
inc
push
xchg
mov
inc
pop
in
adc
imul
cld
mov
push
ficompl
pop
adcb
pop
in
gs
adc
push
into
lret
push
cmp
mov
mov
cmp
mov
ficoms
pop
sbb
in
push
arpl
sub
sub
lock
test
and
jp
lret
and
push
das
xchg
ja
or
arpl
icebp
rorl
pop
jp
incl
test
pop
outsb
mov
push
fdiv
push
sbb
sbb
pop
faddl
dec
mov
cmp
test
les
mov
xchg
mov
cmc
sub
outsl
arpl
sti
sub
xor
fisubs
fisubrs
pop
sub
xchg
inc
mov
outsl
sbb
xor
dec
lea
outsb
xor
leave
xor
sbb
lods
mov
icebp
and
xchg
es
mov
or
cwtl
or
mov
aaa
adc
push
scas
add
scas
out
xchg
clc
daa
mov
aad
inc
dec
pusha
jbe
sub
and
cmpl
lods
jge
push
sub
or
mov
push
addr16
in
test
push
test
pop
inc
pop
or
xchg
mov
out
or
ret
sbb
sub
and
inc
inc
mov
stos
pop
jp
jne
lret
mov
cs
rcr
push
imul
adc
mov
movsb
les
push
outsb
sbb
add
gs
int3
call
mov
in
xor
std
pusha
ret
pop
sub
in
or
cmpb
sbb
rep
in
ficoml
negb
aam
lret
mov
dec
cmp
lret
movsb
xorl
pop
jge
addr16
fisubl
sub
scas
shr
aam
insl
daa
mov
pop
sub
sbb
imul
vpshufhw
clc
test
sbbb
sub
int3
mov
jnp
pop
cmp
and
inc
sahf
xchg
ljmp
les
arpl
loopne
pop
popa
daa
scas
ljmp
jb
seto
pop
lret
loop
add
mov
ss
push
gs
jae
jg
sub
outsl
xor
mov
push
in
add
mov
or
mov
adc
je
lods
mov
mov
decb
jns
hlt
cwtl
fbstp
pop
loop,pn
jb
aaa
mov
sbbl
inc
xlat
xor
leave
rol
dec
aaa
sub
xlat
push
sub
xor
dec
sarb
lret
rclb
imul
mov
int3
xor
gs
rcll
lret
xchg
inc
mov
adc
leave
cltd
rcrl
loop
xchg
fmuls
cmp
cmp
dec
insb
clc
inc
mov
or
lods
adc
aas
shl
rorl
push
iret
adc
leave
insl
ss
testb
cmpsl
int
daa
out
xor
sbb
ret
jno
out
loopne
adc
mov
sub
iret
jb
mov
rclb
mov
mov
xchg
push
mov
aaa
lock
cmpsl
or
mov
pop
cmpsb
addr16
es
mov
in
sbb
sbb
sbb
cwtl
outsl
out
outsb
scas
lret
and
or
lcall
sbb
fwait
pop
push
sbbb
adc
leave
mov
jmp
xchg
push
lahf
mov
mov
mov
inc
push
cmp
mov
aaa
stos
jmp
mov
fsubrl
mov
cld
mov
lret
add
pop
decl
stos
jno
jns
mov
in
cmp
inc
inc
rcrl
adc
mov
adc
loopne
add
and
andb
rorl
jnp
dec
cs
lods
icebp
insb
into
js
ret
xchg
loopne
in
icebp
mov
cmp
notl
push
aaa
hlt
fs
xchg
out
adc
notl
test
pop
fcmovu
stos
xlat
cmp
stos
jnp
lods
rcll
and
jmp
cmp
shl
lcall
add
ret
mov
mov
mov
adc
sub
jmp
movsl
dec
pop
testl
rcll
fstps
lret
pop
mov
add
dec
cld
aam
aam
das
ljmp
mov
je
mov
push
rol
in
sub
jno
nop
stos
inc
and
push
xor
sar
icebp
dec
imul
call
xchg
popa
xchg
test
jb
sub
mov
pop
fdivl
adc
jecxz
shrb
push
pop
test
aam
das
push
imul
jle
data16
in
ret
sahf
mov
mov
xchg
xchg
sub
lods
imul
sbbb
jmp
aaa
xchg
ret
and
jns
imul
pop
data16
pop
cmp
pop
popf
in
push
js
xchg
mov
jne
out
and
lods
cmp
jae
das
mov
das
divb
jle
inc
mov
pusha
scas
dec
sbb
jmp
add
cmp
push
fs
mov
incl
aam
test
das
cmp
fwait
add
push
clc
mov
push
aaa
lcall
dec
push
ud0
cs
lret
inc
jmp
mov
cmp
jmp
les
and
mov
insb
aaa
stos
or
imul
jle
cmp
xor
mov
push
cmp
jmp
push
mov
adc
mov
cmp
inc
push
sub
cmpsl
push
popl
dec
sbb
sbb
outsb
stos
cs
out
inc
repz
ds
jmp
mov
movsb
outsb
testl
aam
cmp
adc
xchg
cmp
sbbl
dec
iret
cmp
ja
push
ja
dec
iret
cmp
ljmp
mov
scas
mov
sub
lock
andb
negb
dec
jmp
out
fbld
adc
push
out
sub
stc
pop
aas
fcomps
pop
add
hlt
dec
add
mov
fdivrl
sbb
scas
fnstsw
scas
lods
dec
sarl
mov
js
push
mov
sbb
mov
bound
pop
and
lock
mov
ja
cmp
pusha
les
adc
cltd
popf
xor
hlt
sarb
sbb
push
push
popa
and
inc
or
cmp
rcr
inc
mov
cmpsb
pop
push
ficompl
fneni(8087
loop
test
mov
pop
test
lret
mov
inc
lea
mov
jge
pop
cmp
push
rcrb
jl
icebp
jg
fstpl
adc
roll
dec
pop
cli
fwait
jno
xchg
or
jecxz
xor
scas
push
and
es
movl
mov
mov
adc
mov
addb
or
mov
xor
or
xor
xor
imul
bound
and
ficoms
mov
mov
adc
pop
test
cltd
sarb
lods
int
cli
add
mov
ds
or
cmp
mov
mov
mov
mov
add
movsl
dec
lea
jg
fdivrl
inc
jb
mov
push
push
push
jmp
lret
pop
repz
dec
rolb
arpl
add
insl
cmpsb
shl
pop
outsb
stc
or
ret
in
mov
push
aad
loop
popf
and
sbb
cwtl
pop
push
test
sub
outsl
repnz
in
xlat
call
scas
jbe
push
add
dec
hlt
lock
cltd
lds
inc
cmp
jbe
leave
adc
neg
adc
popf
dec
jmp
test
or
sbb
bound
shlb
mov
push
jmp
scas
test
and
cli
fcoml
fists
iret
cs
lret
divb
xor
andl
jne
and
sti
lds
lret
movsl
cli
daa
rcrl
mov
mov
call
lret
sti
pop
add
sub
nop
rcrl
jne
and
fsubrl
arpl
mov
mov
and
stc
lret
xchg
stos
sub
nop
fwait
sub
cmp
cmp
sahf
inc
sub
imul
xor
mov
sub
adc
lret
fwait
js
scas
ficomps
cs
nop
push
scas
test
push
ds
gs
ret
mulb
icebp
into
jge
and
aam
leave
dec
jbe
sub
jl
fwait
scas
roll
adc
insb
mov
dec
ja
les
rcr
imul
xchg
aas
jbe
fcmovbe
call
dec
ffreep
jmp
in
aas
xor
aam
mov
xchg
jbe
mov
cmpsb
out
or
mov
ret
les
in
addl
loop
subl
test
mov
ljmp
mov
mov
daa
jp
mov
lods
call
jbe
loope
scas
xchg
add
or
sbb
imul
shll
cs
dec
or
scas
inc
or
outsb
add
stos
ljmp
mov
sub
xor
jo
and
arpl
idivl
mov
fistps
cmpsb
mov
ret
push
out
pop
mov
or
jmp
mov
jb
cmp
xlat
bound
jae
dec
xorl
dec
cmpsl
rolb
dec
imul
nop
lds
mov
test
cld
mov
fistl
jbe
pop
out
adc
stos
fwait
xchg
je
or
cmp
call
es
mov
dec
stc
xchg
mov
and
xchg
add
or
push
mov
dec
add
or
mov
add
jbe
stos
xor
cld
mov
lahf
or
out
fisubrs
add
jmp
mov
add
mov
cmpsl
cmp
xor
popa
pop
add
push
imul
leave
aaa
aam
pop
insb
int
cli
dec
xchg
sub
xchg
add
add
scas
xor
and
xchg
push
xchg
mov
xor
or
pop
sbb
insb
and
jmp
insl
inc
in
jg
adcl
gs
outsl
mov
scas
mov
sarb
xor
jmp
popa
fnstsw
jns
clc
ja
mov
mov
fwait
xorl
stos
mov
inc
enter
mov
add
push
mov
adc
in
rcrb
in
lret
mov
xchg
add
repz
hlt
scas
imull
ljmp
sub
sub
das
call
dec
aad
jg
out
push
imul
pop
sbb
sub
pop
push
loope
call
cmpsb
int
fcoml
out
mov
add
enter
les
subb
ret
and
mov
pop
aaa
mov
lds
jne
push
sub
pop
call
mov
cmp
mov
scas
xchg
mov
inc
int
aas
fwait
push
pop
fnstenv
fbld
roll
nop
stos
jo
rcl
mov
arpl
adc
lea
ret
mov
push
movsl
add
lcall
and
sbb
push
xchg
test
shr
jne
popf
int3
push
pop
jle
aam
pop
in
lods
push
rcl
test
in
mov
xchg
mov
hlt
sub
fwait
call
adc
rclb
push
xor
dec
push
cmp
jo
repnz
outsl
cli
sahf
es
mov
mulb
xor
mov
out
push
pop
adc
xor
mov
mov
pop
adc
xlat
mov
cwtl
push
outsl
loop
fldt
cmp
mov
test
and
jae
aas
push
xchg
or
repz
jg
cmp
test
xor
xor
out
cltd
cwtl
xor
pop
mov
jbe
inc
dec
cmp
or
push
in
inc
xor
mov
inc
inc
or
or
cmp
aam
out
sbb
repnz
dec
jmp
mov
mov
sbb
sbb
in
mov
andb
pop
inc
pop
push
mov
test
inc
sarb
mov
adc
xlat
clc
fwait
push
std
cmp
xchg
mov
adc
ds
xor
incb
test
mov
push
gs
ja
dec
enter
repnz
mov
sti
jne
pop
aas
icebp
cwtl
out
xor
mov
mov
aaa
lods
jmp
mov
addb
adc
sbb
jns
mov
mov
push
or
js
jo
xorl
out
js
loope
add
adc
mov
mov
jo
sbbb
xlat
in
std
mov
ss
cs
mov
pop
mov
addb
lret
mov
mov
ss
mov
jbe
mov
lahf
ret
push
mov
jb
fisttps
mov
ret
mov
xchg
mov
sti
fucomi
in
in
add
xchg
xchg
in
cmp
repz
popa
js
xchg
dec
lods
mov
lods
sbb
jnp
js
sbb
flds
addr16
pop
outsl
lea
ret
inc
add
dec
mov
jbe
mov
int3
cli
adc
mov
jo
jmp
push
cmp
sub
rclb
lret
mov
loope
adc
mov
and
popf
jne
ja
in
scas
test
ljmp
sti
dec
pop
and
lods
inc
jae
lret
mov
xchg
fwait
imul
or
inc
stos
jns
xorl
push
jo
out
adc
fsubr
pop
iret
fs
adc
xchg
mov
pop
pop
icebp
fwait
push
xchg
xor
icebp
mov
xor
sbb
ds
mov
xchg
insl
loopne
rorl
push
mov
sub
outsl
scas
and
or
mov
xor
push
aas
jle
shrb
dec
in
pop
adc
fldcw
lret
ror
popa
sbb
xchg
dec
inc
popf
popl
adc
and
clc
ljmp
ljmp
xchg
add
rcll
pusha
jo
arpl
mov
sti
lea
sub
out
roll
adc
fidivrs
adc
inc
pop
aam
fstpl
sbb
cld
adc
mov
scas
and
or
sub
fidivl
push
add
daa
rorb
rorl
mov
stos
test
in
add
mov
push
inc
fildll
mov
mov
addl
jne
sub
insb
jg
jns
jae
lock
cwtl
dec
add
je
or
inc
xchg
jp
pusha
in
int
into
dec
ret
mov
das
mov
mov
clc
mov
mov
mov
jno
in
sub
in
imul
cmp
dec
orb
notb
sbb
test
dec
cmp
add
mov
inc
je
sti
adc
jge
sti
arpl
insl
aas
mov
movswl
int3
dec
lret
adc
dec
mov
daa
and
ror
in
mov
dec
mov
adc
mov
das
push
cmp
dec
adc
shrb
icebp
pop
test
sub
aam
dec
push
jp
pop
jno
roll
pusha
out
mov
es
adc
call
arpl
cmp
push
mov
out
bound
arpl
cs
adc
sbb
fwait
push
repnz
dec
push
loop
xor
pop
push
xor
add
pusha
xchg
cwtl
lods
adc
scas
lods
mov
cmp
mov
mov
negl
lock
jb
cli
dec
jmp
mov
das
xorl
nop
adc
test
test
fwait
neg
loopne
mov
clc
sub
test
push
into
adc
lea
outsl
xchg
cld
jmp
out
mov
btc
das
mov
and
enter
cld
dec
lret
mov
xchg
sub
rolb
and
or
in
cmc
xlat
inc
push
fcoms
inc
and
push
out
mov
icebp
push
mov
mov
rorb
lret
adc
and
mov
dec
add
mov
push
pop
das
in
lds
cmp
idivb
add
jp
enter
push
out
push
push
sbb
sbb
jp
sub
xor
rcr
mov
inc
pop
xorb
sbb
add
in
and
add
pop
shr
xor
mov
xor
int3
sub
aad
cli
and
fwait
lds
mov
jl
sbb
mov
push
in
or
xor
push
imul
lcall
mov
bound
jne
std
xor
int
cmp
adc
mov
out
arpl
sahf
loop
pop
push
jo
jae
not
inc
sub
arpl
push
in
aaa
sbb
lods
outsl
mov
sti
cli
jne
outsb
fimuls
ljmp
mov
dec
je
call
xor
sub
xor
xor
mov
pop
sbb
or
movsl
out
mov
fldenv
jns
inc
dec
lret
scas
arpl
icebp
repnz
dec
sahf
xchg
fucom
xchg
xchg
outsb
sub
push
cmp
inc
adc
pop
inc
adc
sbb
imul
xor
sbb
push
fmuls
ret
and
sub
ds
arpl
jl
stos
mov
or
jecxz
in
nop
adc
jle
xchg
stos
sub
leave
push
stos
rcrl
addl
jbe
ret
test
adc
sarl
xchg
mov
rcrb
pop
andb
pop
cli
stos
or
in
cmp
daa
sub
andb
cmpsl
outsb
dec
push
jbe
sub
lods
inc
cmpsl
push
addb
sub
vpcmpgtb
loope
jmp
xchg
push
dec
fsubs
pusha
shrl
push
ss
imul
pop
jle
lds
repnz
cmp
xor
or
call
imulb
mov
clc
lret
sbb
subb
cmp
dec
jbe
dec
xor
inc
pop
add
xor
or
scas
adc
pop
inc
or
arpl
data16
loopne
out
ret
pushf
push
inc
into
jge
jecxz
repz
xchg
mov
test
fistps
cmpsb
sbb
and
inc
lods
out
data16
aas
and
inc
xor
aas
adc
sbb
mov
clc
nop
cmp
and
xor
push
fisttpll
sub
pop
push
stc
repz
jl
dec
daa
ret
pop
in
cs
call
mov
dec
sub
dec
mov
gs
sub
xor
pop
clc
fcomip
xlat
std
mov
xor
push
scas
jge
ja
pop
xor
mov
mov
in
hlt
mov
mov
out
out
pop
movsl
ljmp
cmpl
mov
fwait
stos
add
or
dec
xchg
and
mov
cmp
outsl
jo
ds
lahf
sti
cmp
mov
das
mov
adc
mov
test
ss
add
test
andl
adc
pop
jge
and
mov
xchg
sbbl
dec
popf
enter
repnz
mov
add
pop
sbb
and
ret
mov
rol
je
push
out
popa
imul
iret
inc
xorl
insl
popf
and
and
push
xor
ret
pop
imul
pop
lret
cld
xchg
incb
push
pop
dec
and
call
or
sarb
adc
or
cmp
and
lret
gs
inc
popf
pop
adc
ficoml
repz
jecxz
xor
xchg
mov
pop
pushl
int
aad
or
pop
cmp
into
mov
cmpsl
adc
sub
mov
arpl
sub
data16
cs
imul
dec
shlb
adc
mov
push
or
fldt
xlat
out
jecxz
icebp
scas
mov
mov
aad
sub
insl
inc
adc
mov
insl
and
xchg
dec
sbb
imul
cmp
scas
and
pop
nop
sbb
mov
xchg
push
push
mov
push
int
mov
jbe
add
aaa
out
fwait
or
sar
int
ds
iret
jecxz
out
jmp
xchg
mov
xlat
ret
cmpsl
inc
pop
fstpl
xchg
pop
scas
dec
lret
xchg
fdivl
inc
pop
das
or
inc
je
int3
clc
mov
cmp
or
in
mov
aad
jbe
ret
pop
fisttps
pop
jnp
push
mov
push
and
fucom
loop
scas
mov
gs
jle
pop
sbb
mov
push
and
mov
and
mov
mov
es
cli
mov
mov
scas
mov
ljmp
test
stos
push
cmp
pop
cs
mov
sahf
popf
lods
fcoms
sub
push
mov
xchg
push
xchg
in
xchg
push
dec
popf
xchg
std
lods
sbb
popa
iret
push
dec
mov
mov
in
push
mov
mov
or
push
adc
pushf
aam
add
inc
inc
xchg
and
out
add
frstor
nop
enter
add
xlat
push
mov
inc
lock
sub
pop
scas
test
jns
inc
cmc
inc
lock
pop
cmp
lods
aam
fsubrs
pop
pop
shlb
daa
adcl
pop
mov
sub
imul
push
out
mov
adc
and
mov
sbb
ds
int3
insl
pop
shlb
xchg
pusha
xchg
mov
inc
mov
shrl
sub
icebp
bnd
dec
repz
mov
adc
cmp
xchg
pop
adc
jb
adc
cwtl
mov
mov
jmp
push
or
mov
aam
outsb
inc
cmpsl
adcb
cmpb
jmp
outsb
repz
cs
jp
adc
xchg
sub
pop
bound
repz
fisubrs
sarl
loop
inc
bound
dec
jecxz
mov
jp
cmpsl
add
imul
pop
xchg
fwait
scas
stc
mov
ss
iret
push
push
adc
pop
mov
or
shl
sbb
pop
js
mov
icebp
dec
push
mov
loopne
push
test
pop
sbb
mov
jp
push
push
sbb
sbb
ljmp
imul
cmp
dec
xor
jno
push
sub
push
and
cmp
scas
jp
xchg
outsl
inc
jecxz
les
jb
mov
sbb
mov
sbb
sub
scas
fwait
cmp
out
pop
cmp
arpl
dec
test
int3
repz
fildl
mov
nop
cmp
adc
ret
push
lret
lahf
add
cmp
test
xchg
lds
push
cltd
loope
in
inc
xchg
loope
repnz
mov
push
mov
mov
test
and
ficompl
mov
lock
inc
adc
aad
frstor
inc
lea
and
mov
push
pop
out
mov
add
lods
call
addr16
aas
loope
xchg
jno
out
test
push
or
divl
xor
aam
lock
xchg
mov
cmp
and
lock
sub
icebp
dec
dec
mov
sub
cmpl
lods
jae
test
stos
incb
bound
xchg
aaa
shr
in
stos
xchg
push
adc
dec
in
lds
lods
xor
mov
sti
push
ffreep
push
sub
jno
sub
cs
sub
inc
ja
jnp
xor
adc
ja
ss
mov
or
adc
add
xor
imul
faddp
mov
lea
imul
dec
das
shl
fsubs
arpl
xchg
testl
not
dec
aaa
andb
inc
fnstenv
imull
fs
fs
int3
loopne
xchg
mov
pop
ljmp
pusha
inc
mov
push
stc
jle
pop
adc
xor
jnp
push
mov
pop
add
jns
cs
les
jo
mov
push
stos
mov
sahf
in
out
add
push
mov
xor
ret
push
push
inc
mov
test
repz
insl
fs
in
xchg
mov
mov
jae
xor
push
outsb
div
xor
pop
adc
dec
pop
jl
insb
mov
clc
mul
jb
cmp
stos
xorl
andb
lahf
cmp
lret
lods
sub
lods
and
cmc
cmp
fmul
xchg
and
ljmp
add
loope
stos
subb
in
adc
mov
jg
jne
shlb
inc
clc
pop
fimuls
fs
mov
cmp
test
xchg
shll
xchg
arpl
cmp
outsb
daa
stos
jno
sbb
xchg
outsb
lock
xchg
sub
movsb
sub
mov
incb
cltd
push
fdiv
adc
push
cmp
shrl
insl
ja
mov
test
stos
cmp
daa
pop
mov
xchg
fldl
push
pop
mov
inc
cltd
pop
xlat
outsl
mov
mov
push
xchg
pop
jns
or
enter
sbb
outsb
mov
xchg
jbe
lds
add
cmpsb
sbb
jl
test
aaa
cmpsl
add
adc
xor
pusha
addr16
add
das
adc
out
cmpl
lods
rolb
lcall
aam
pushf
loopne
std
xchg
movsl
pop
mov
popf
jnp
out
shrb
cwtl
movl
pop
lret
add
mov
rorl
xchg
xor
and
data16
xor
mov
std
lds
movsb
sbb
int
bound
cmp
or
dec
xchg
cmp
mov
jl
dec
nop
adc
inc
adc
jno
sti
scas
lods
xchg
sub
aad
mov
add
data16
fwait
mov
mov
mov
or
movsl
adc
sti
das
cmpxchg
mov
adc
sbb
sub
je
aas
sub
dec
gs
jmp
aas
dec
cmpsl
enter
jno
xchg
iret
jae
and
dec
iret
adc
test
xchg
mov
cwtl
in
pop
mov
lea
stos
mov
aaa
ja
fstps
repnz
or
add
lret
adc
mov
mov
sahf
ret
and
mov
mov
insl
loope
bound
lcall
shlb
scas
xor
push
subl
pop
or
and
shr
push
xor
enter
in
aaa
insl
aad
rcll
lock
or
ljmp
adc
pop
sbb
xchg
enter
add
pop
and
mov
jecxz
icebp
sub
jp
sbb
jbe
cld
out
push
ret
imul
push
add
sbb
pop
inc
inc
adc
mov
outsl
cld
mov
jno
pop
or
imul
aad
das
lret
pusha
mov
xchg
incl
xlat
in
push
cmc
cmc
aas
out
in
inc
outsl
out
cmpsl
push
push
jecxz
insb
pop
data16
call
filds
jnp
mov
filds
sti
dec
sub
je
in
cmp
repnz
fsts
adc
loop
pop
or
lret
loopne
push
xor
ljmp
mov
mov
repnz
or
pushf
or
scas
push
call
outsl
ljmp
addr16
mov
push
roll
xor
es
adc
xchg
ret
rcl
fldenv
mov
std
jmp
aam
iret
cltd
xchg
in
jo
push
insb
and
jae
movb
ja
int
adc
mov
inc
daa
add
clc
ljmp
lahf
xlat
andb
dec
cmpsw
fadds
fisttps
mov
ret
icebp
shrb
and
pop
dec
dec
jno
pop
stc
or
pop
jnp
lret
loop
mull
repz
sbb
hlt
sbb
ss
inc
stos
mov
and
dec
arpl
inc
jecxz
rcll
ds
sub
aas
sbb
mov
enter
mov
int
and
pop
sub
jl
or
daa
int
and
jmp
push
jns
xor
imull
add
jae
jg
sbb
jge
cmp
adc
xchg
cltd
imull
pop
jmp
jg
pop
pop
xchg
mov
xor
mov
or
mov
inc
hlt
xor
and
cltd
mov
inc
adc
call
popf
xchg
inc
fldt
in
or
ljmp
jae
or
xor
xchg
mov
icebp
aaa
xor
int3
ljmp
jns
cmpb
pop
out
in
inc
mov
cwtl
sahf
mov
stc
out
jns
or
pop
add
jns
lea
adc
notb
jne
lock
or
cmp
sahf
in
inc
mov
loop
loopne
cmc
pusha
jge
cltd
mov
aam
or
cmpsl
int
xor
into
pmulhuw
cmp
shll
pop
and
cmp
outsl
test
inc
pop
arpl
sahf
inc
pop
scas
jo
inc
hlt
ret
divb
lahf
in
mov
sbb
sbb
push
in
mov
xchg
jb
scas
mov
cmp
mov
lahf
iret
cmp
aaa
pop
push
scas
mov
iret
add
mov
lock
cmp
xchg
xchg
into
cltd
insb
mov
subl
inc
and
mov
mov
lock
fstps
mov
les
adc
jno
sub
shlb
mov
and
push
leave
sarb
cltd
jo
stos
outsl
shr
outsl
out
outsb
lock
xor
jnp,pn
push
outsl
xor
iret
pop
sbb
into
dec
std
into
sub
mov
mov
mov
jecxz
pop
xchg
pop
or
xchg
cmp
shl
mov
dec
in
or
ffree
jne
stc
cld
jp
sbb
arpl
ja
sti
fisubs
cmpb
ds
enter
mov
sub
dec
xchg
jle
repz
lahf
shlb
fiaddl
fs
and
popa
or
or
dec
mov
cld
add
std
or
cmp
les
icebp
xchg
movsb
test
loope
in
jp
lock
int
pop
fisttpll
out
mov
mov
fdivl
out
pop
outsl
cmp
xchg
mov
mov
ret
out
fcmove
repnz
pop
jno
iret
push
cltd
outsl
pop
test
xchg
xchg
pop
ret
jle
insb
add
ja
leave
mov
jne
mov
inc
rcr
dec
xchg
sub
cltd
fdivp
add
test
fisubl
nop
and
push
sbb
mov
xchg
inc
repz
adc
call
xchg
dec
or
je
out
les
cwtl
jbe
test
mov
dec
in
add
sbb
xchg
jno
pop
sub
push
sub
mov
and
arpl
or
cli
sbbb
clc
cmpb
inc
jns
cmc
mov
sidtl
inc
xor
pop
fdivrl
imul
jle
jmp
cltd
and
dec
sahf
cmpsl
mov
es
loope
or
arpl
ret
mov
or
jnp
cmp
sbb
dec
xchg
mov
add
gs
and
fwait
aad
aaa
cmp
stc
repnz
adc
and
jmp
data16
mov
push
xchg
jns
fldcw
aas
int3
inc
inc
icebp
movsl
lods
xor
leave
dec
mov
xchg
sti
push
outsb
ret
lret
test
jne
add
rcll
mov
xor
stc
add
adc
je
imul
cs
bound
and
in
shlb
mov
lods
lods
or
push
cmpsb
test
or
xchg
sbb
std
aas
add
pushf
bound
pop
or
pop
xchg
int3
test
sub
stos
ljmp
adc
shrb
scas
mov
push
push
sub
stos
cmpsl
mov
popa
xchg
cwtl
mov
pusha
or
dec
movsb
or
push
inc
hlt
inc
je
and
ret
cmp
int
mov
inc
and
mov
mov
mov
inc
icebp
jb
and
sarl
out
lds
adc
rcr
mov
sbb
sbb
xchg
mov
rcrb
pop
xchg
scas
inc
test
push
cmpl
pop
sbb
sti
rol
push
fs
rcll
int3
aad
addr16
out
out
pop
data16
addb
cld
xor
pop
fcmovnbe
or
push
xor
cmpl
sar
enter
es
mov
mov
mov
pusha
sub
jg
inc
mov
cmpsl
ret
in
pop
cmpsl
popa
cmpsl
das
push
stc
lret
push
shll
es
xor
outsl
das
sarl
adc
inc
int3
fistl
mov
xor
xchg
aas
insb
scas
fdivs
arpl
mov
or
jno
stos
xor
dec
jbe
pop
dec
cmc
or
jbe
add
push
adc
test
xor
xchg
and
jne
ds
pop
add
dec
xchg
push
inc
cmp
aam
into
int
mov
rorb
int
xor
add
cld
adc
fisubs
or
repz
or
aas
lock
jle
lret
repz
mov
or
sti
int3
stos
addr16
sbb
cmc
fnstenv
aaa
push
ret
mov
xlat
adc
sbb
xlat
repz
push
jmp
inc
lahf
mov
pop
pop
push
out
jmp
mov
adc
pop
pop
sahf
inc
lret
sti
jg
mov
fsubs
scas
lock
lds
jno
push
cli
and
outsb
mov
imul
mov
scas
dec
jb
stos
xchg
inc
imul
imul
loop
xlat
int
aad
ret
testl
jl
mov
xchg
jno
sbb
imul
mov
adc
stos
rorl
mov
mov
out
popa
imul
cld
inc
mov
dec
xchg
and
and
and
mov
push
sbb
mov
xchg
stos
hlt
pushf
std
and
add
sti
push
mov
add
jne
jnp
push
jbe
mov
jecxz
popa
add
jl
imul
shl
pop
rolb
cld
dec
dec
add
xor
cmp
sub
xor
fistps
pop
mov
add
fcoml
jmp
decb
mov
jp
data16
pusha
push
aas
inc
add
js
mov
and
mov
fs
repz
jne
pop
mov
pop
xchg
lret
jl
ret
or
scas
imul
lods
cmp
or
es
aad
add
sub
dec
add
jb
pushf
in
sbb
in
push
fistpl
lds
mov
add
nop
xor
push
ret
das
mov
inc
addb
push
leave
mov
and
cs
psubsw
cmp
movsb
dec
shll
jae
xor
and
jne
in
xchg
pop
das
imul
sub
cmc
gs
and
mov
jnp
fmuls
bound
insb
es
and
xchg
hlt
jg
push
rcrb
cmp
and
jbe
movsb
fadds
jno
push
ss
xchg
mov
lret
sti
in
xor
xorl
rolb
mov
sub
inc
dec
add
mov
cli
std
and
cmp
popa
mov
mov
pop
fldcw
stos
nop
int3
cmp
popf
push
inc
mov
nop
jno
adc
ss
adc
andl
insl
mov
pusha
out
add
adc
sbb
mov
js
dec
sbb
sbb
imul
inc
sub
sbb
pop
sbb
pop
sub
xchg
xlat
bound
push
add
pop
nop
jo
leave
mov
or
and
xchg
dec
push
lahf
lahf
aam
fsubrs
in
pop
mov
fsubrp
ficoms
xchg
enter
pop
xchg
push
mov
mov
fcompl
sbb
arpl
dec
nop
lret
jno
int
pop
or
testb
out
dec
imul
pop
andl
stos
movsb
imul
js
push
push
push
and
and
into
sub
in
fnstsw
std
jnp
ret
out
cli
scas
dec
add
mov
ret
mov
push
mov
lret
aaa
sub
ret
jmp
cli
adc
aam
sbb
pop
sbb
adc
jg
aam
mov
ja
adc
dec
out
fldenv
sbb
xor
jge
xchg
das
orl
sbb
outsl
lcall
out
jge
add
xchg
sub
testl
add
into
pop
shrb
lahf
cli
sbb
xchg
pop
dec
add
jmp
mov
popa
leave
out
fnstsw
pop
call
idivl
jnp
call
add
mov
cmc
cmpsb
add
loope
cli
mov
inc
pop
test
lret
mov
xchg
xlat
ja
cmc
ret
sub
xchg
enter
push
sahf
divl
and
pop
xor
stos
push
ds
mov
or
lret
stos
mov
pop
ret
mov
inc
xchg
sbbb
test
jo
roll
pop
arpl
xchg
jb
or
shrb
aaa
mov
je
fiadds
xchg
or
and
push
jecxz
imul
pop
movsb
stos
out
xchg
adc
loop
ds
daa
xchg
cmpsb
stos
dec
pop
mov
mov
in
repnz
dec
adc
sahf
mov
ljmp
loop
fsubrl
and
cmpsl
enter
je
ja
scas
pop
mov
mov
ret
scas
cmp
fs
lcall
mov
cmp
push
inc
fdivl
push
pop
jmp
sbb
xchg
data16
or
add
popa
cmp
cmp
and
inc
and
lahf
inc
pop
push
add
std
add
stos
fstpl
mov
pop
pop
fmul
arpl
ret
rcll
aam
popa
leave
and
inc
xchg
test
pop
in
scas
push
in
dec
jmp
cli
imul
imul
add
sub
cmp
inc
jne
fcoms
enter
movsb
les
movsb
xchg
int
add
shlb
push
xchg
lcall
test
fldcw
sbb
mov
or
sub
pop
cmp
outsb
std
decb
push
fwait
lock
xchg
les
repnz
mov
sarb
jne
insl
cs
sar
clc
jo
and
imull
and
jnp
add
inc
sti
jb
mov
pop
adc
or
sub
xor
fisubrl
andb
mov
sbb
xlat
lcall
lods
dec
adc
out
cmp
fidivrl
adc
jo
add
es
fnstenv
mov
dec
or
inc
sbb
int3
add
adcl
notl
mov
mov
ja
or
fstl
dec
das
jge
dec
push
push
add
int
mov
insb
mov
inc
dec
rol
das
sbb
and
call
shr
mov
mov
jl
add
out
sti
imul
xor
ret
adc
mov
push
dec
and
dec
scas
scas
xor
dec
cmp
or
push
cmp
imul
add
pushf
sahf
aas
in
scas
xor
push
inc
sti
mov
fiaddl
aaa
sbb
xor
xchg
insl
xchg
add
mov
lds
sbb
jmp
test
mov
pop
xor
lods
insl
pop
push
xor
rorl
sahf
jl
das
add
movsb
lods
out
sbb
sub
jne
or
cmp
lahf
inc
or
aad
es
out
js
cld
and
mov
sub
dec
inc
pusha
sub
pop
movb
adc
push
xchg
test
lods
inc
repnz
pop
pop
popf
daa
arpl
sahf
lods
into
hlt
lret
mov
xorl
lods
pop
add
and
rclb
dec
stos
mov
jmp
mov
sbb
and
aad
scas
and
dec
mov
jmp
jae
out
notl
add
sub
or
cld
xchg
xchg
mov
cmpl
in
adcl
mov
mov
dec
mov
dec
and
jle
pop
insb
cmp
imul
popf
lret
add
and
pop
mov
jge
jmp
in
cmpsb
mov
push
sub
in
je
mov
int
icebp
aad
jmp
jno
inc
arpl
mov
andl
lidtl
mov
push
mov
cs
ret
flds
or
nop
stc
push
out
sbb
rorb
mov
mov
xchg
ret
mov
ljmp
int3
mov
stos
jge
pushf
negb
jecxz
data16
mov
sub
mulb
in
adc
xor
out
rol
or
pop
cmp
cli
mov
add
add
dec
mov
notb
push
inc
outsl
scas
pandn
sarb
loopne
outsb
pop
mov
jmp
das
nop
addr16
idivl
mov
filds
lret
lods
push
lods
movsl
adc
out
adc
push
pop
jp
shlb
popf
das
mov
into
cmc
jg
sub
sbb
fld
fs
and
imul
fwait
push
jmp
jbe
mov
inc
in
xor
mov
add
decb
xchg
sbb
sub
cmc
mov
fwait
and
adc
cld
dec
orl
push
in
mov
out
add
jle
mov
and
mov
xor
imul
stos
add
adc
xchg
div
fistps
test
push
push
xchg
sti
cmp
iret
fdivrs
mov
xchg
push
push
add
inc
mov
lds
iret
xchg
cmp
in
scas
dec
int3
sub
lret
mov
rcl
aas
and
mov
push
lock
lahf
jno
cwtl
insl
inc
jecxz
shlb
lods
enter
cld
lahf
pop
and
adc
mov
dec
popl
js
push
test
lock
loopne
mov
pop
aam
xor
adc
movsb
gs
jge
std
loop
jb
mov
push
or
mov
out
shlb
push
add
enter
xchg
aam
in
or
icebp
pop
test
cmp
mov
cmc
push
negl
push
push
ss
xor
sub
jbe
ljmp
inc
sarb
push
sbb
cmp
xchg
mov
rcrb
test
sub
pop
test
imul
mov
and
fisttpll
xor
push
repnz
xchg
mov
push
xor
jecxz
lahf
sub
lret
out
imul
dec
push
dec
cmpsl
ds
xchg
jmp
decl
xor
mov
jo
nop
mov
shr
xchg
adc
nop
jo
sbb
bnd
aam
sub
add
jge
je
mov
add
das
and
push
and
in
mov
xchg
out
mov
lods
pop
mov
dec
xchg
lea
pop
and
cs
push
push
movsl
sbb
xchg
fnsave
mov
push
pop
ja
xchg
loopne
pop
sarl
stc
in
mov
mov
fdivrl
out
cmp
add
mov
sbb
inc
mov
pop
add
or
mov
and
dec
call
mov
repnz
lret
fucomp
scas
scas
mov
sbb
call
insl
scas
test
mov
sar
dec
or
mov
jecxz
mov
je
nop
std
pop
mov
push
jmp
pop
push
scas
push
jp
cmp
lahf
mov
push
cmp
inc
push
or
int
popf
xchg
addr16
add
sbb
push
insl
mov
xor
lret
xor
push
es
iret
jg
sbb
and
insb
cmp
pushf
xor
or
cmp
cmpsb
enter
stos
push
mov
sub
push
or
mov
fs
jno
cmp
adcl
add
std
xchg
mov
mov
add
test
adc
cltd
jl
nop
pop
rol
sbb
cmp
pop
jne
mov
cwtl
scas
cli
into
or
int
xchg
mov
sbb
shl
pushw
fsubs
push
out
adc
daa
push
xchg
out
lret
sub
xor
jmp
xchg
fisubl
cli
mov
imul
fldl2e
push
mov
out
stc
mov
loope
stos
ret
mov
mov
sahf
inc
movsb
pushf
out
stos
xchg
cmp
pop
lods
pusha
shlb
addb
int3
and
adc
push
or
cmc
or
pop
dec
lret
insb
pop
xchg
xor
jbe
jle
and
mov
rol
adc
inc
rcll
push
dec
xchg
ret
xor
sbb
mov
daa
mov
andl
push
or
sbb
lds
push
ss
test
jl
xorb
mov
int
notl
and
int3
xor
sub
dec
fs
add
popa
push
repnz
lods
in
outsl
mov
insl
or
cmp
rorb
inc
loope
adc
xchg
inc
jecxz
push
pop
adc
daa
mov
cmpsb
popf
pop
xchg
mov
xor
fidivs
imul
ljmp
stos
pop
xor
jne
out
mov
jl
xlat
jne
iret
pop
scas
mov
xchg
and
mov
cltd
and
sub
arpl
in
test
nop
pop
jle
rorl
std
inc
hlt
fildl
sbb
xchg
fldcw
sub
and
adc
jp
rclb
lock
je
or
inc
decl
mov
cld
adc
adc
cwtl
jnp
dec
inc
sbb
jecxz
cmp
push
les
or
push
adc
fisttpll
je
ja
pop
repz
sub
and
popa
imul
aad
mov
fcoml
xchg
xor
jecxz
add
lahf
cmp
and
add
jno
dec
fwait
shrb
shl
xchg
cmpsb
mov
scas
xor
stos
adc
insb
test
sub
xchg
xchg
sbb
fwait
popa
movsb
mov
sub
pushf
out
jae
fistl
pop
dec
leave
sub
adc
adc
mov
sub
push
roll
js
bound
push
cs
xchg
cli
mov
jo
mov
pop
add
inc
inc
and
sbb
xorb
decl
nop
dec
sub
cmp
inc
push
lcall
call
js
push
add
leave
call
xchg
pop
jmp
loopne
insl
bound
pop
mov
aaa
sbb
inc
mov
cmp
movsl
jb
pop
cmp
lahf
scas
xor
and
dec
call
shlb
std
inc
xor
scas
fs
loopne
loopne
fisubl
jnp
stos
arpl
jmp
jecxz
in
adc
cmp
sahf
cld
pop
and
imul
pop
push
arpl
sbb
js
frstor
inc
cli
or
cmp
shll
ret
jl
mov
adc
dec
faddl
lcall
jns
cmpsl
out
cmp
or
popf
ja
repz
sbb
ja
xlat
and
stos
out
adc
pop
scas
sahf
cmc
mov
shl
pop
xchg
mov
or
sbb
pop
pop
outsl
loop
add
lea
sbb
sub
mov
popf
out
jp
inc
test
outsb
rcrl
lods
and
sahf
mov
aad
sub
pop
fs
xor
add
lret
mov
arpl
mov
rcrl
enter
cs
fwait
imul
lret
dec
je
negl
shlb
gs
insl
xchg
dec
pop
add
movaps
gs
cmp
push
sbb
data16
out
jle
cs
cmp
pusha
mov
jle
push
lock
sub
pop
ja
cmp
and
mov
pop
push
int
adcb
or
aam
xor
repz
out
stos
outsb
mov
xchg
ss
cwtl
filds
jns
movsb
xchg
fdivl
mov
and
gs
dec
fninit
mov
mov
inc
cwtl
out
lea
stos
fidivrs
and
in
daa
in
add
aas
push
pop
cmp
inc
mov
gs
sahf
sarb
add
outsl
mov
dec
cltd
icebp
mov
out
in
shlb
adc
add
push
sbb
jo
and
js
adc
mov
add
dec
fldt
mov
out
insb
xor
xor
incl
sub
mov
loopne
stc
ret
in
ret
test
icebp
iret
ss
and
das
insb
outsl
jecxz
inc
pop
loopne
outsl
mov
je
nop
fildl
lods
jle
xor
int
aam
adc
out
fmul
and
aaa
test
sub
ror
movsl
loopne
dec
in
sub
adc
cmc
inc
push
pushf
inc
aaa
ljmp
add
pop
rcll
lcall
add
jmp
mov
and
jb
push
sub
jg
push
xchg
adc
xor
mov
pop
dec
jecxz
dec
inc
inc
imul
pop
shlb
stos
mov
cmpsl
repz
push
movsb
sar
mov
dec
leave
and
mov
out
fdivrs
ss
iret
faddl
ret
dec
push
adc
sub
dec
shl
orb
cmpsb
fsubl
mov
lahf
orb
inc
shll
std
hlt
fldcw
loopne
call
leave
fwait
ret
gs
sbb
ds
xlat
jne
add
dec
ljmp
push
insb
je
xchg
iret
fsubp
xchg
or
lcall
mov
push
mov
push
insb
shrl
lcall
mov
popf
sub
out
cmpsb
mov
xchg
icebp
lea
fimull
pop
xchg
test
shll
sub
jp
sbb
test
sarb
cmp
and
pop
mov
push
xor
add
incl
pop
fsubs
and
jle
stos
icebp
add
out
out
pop
jge
xchg
push
mov
fbstp
add
jo
out
inc
movsb
ljmp
es
push
lcall
outsl
add
cmp
testl
mov
jb
xchg
popf
sub
arpl
loope
xchg
add
mov
cmp
into
ja
bnd
xchg
or
cli
aad
loop
outsl
sub
loopne
mov
in
jb
inc
add
pusha
pushf
popa
call
cmp
fwait
outsb
fwait
mov
xor
jno
fnstcw
iret
enter
into
xlat
jmp
xchg
add
rcrl
jo
or
cld
mov
push
cmpsb
loope
jmp
aam
pushl
scas
out
add
ret
inc
jl
inc
xor
and
and
xor
fdivl
leave
cmp
dec
in
sub
sbb
inc
push
fucomi
jne
hlt
daa
jo
dec
test
lods
mov
ja
sbb
popa
xchg
jmp
ficomps
lcall
call
lea
test
sbb
test
push
jnp
lahf
push
fldt
mov
or
or
add
mov
push
lahf
aad
imul
cmp
bound
data16
xchg
mov
pop
inc
movsl
inc
mov
aam
lock
xor
adc
movsl
or
jmp
mov
sbb
jae
inc
mov
fimuls
dec
xor
cmp
shr
nop
fldt
in
xor
fmull
adc
mul
mov
enter
lret
jl
aam
leave
movl
xchg
std
push
popl
in
cmp
lods
adc
and
and
shl
cmpsl
mov
mov
mov
addr16
xor
call
in
das
cli
cmc
out
jge
and
mov
xchg
popf
enter
mov
inc
xor
ret
bound
int3
dec
aad
dec
pop
add
and
xor
or
pop
lret
clc
mov
add
mov
loope
shl
ss
in
adc
in
or
pop
mov
or
jmp
dec
repz
fmull
ret
daa
outsb
loopne
arpl
or
shr
lds
mov
out
mov
mov
and
out
pop
sbb
pop
sbb
dec
popa
mov
int3
pop
push
iret
rorl
lock
daa
xchg
mov
xor
lret
movsl
stos
mov
mov
fbstp
add
loop
pop
test
pop
stc
mov
scas
dec
mov
bound
push
aas
imul
xor
mov
xor
or
inc
mov
jecxz
adc
dec
repz
push
push
mov
mov
sub
sub
cmp
jnp
sbb
xchg
test
scas
mov
arpl
xor
gs
stos
inc
lcall
scas
std
sbb
movsl
scas
sbb
movq
sbb
or
xor
dec
mov
es
movsl
push
xor
popf
push
cmp
mov
mov
jl
xchg
and
movsl
fildl
adc
add
push
add
mov
pushf
clc
roll
icebp
call
repz
in
test
and
sub
test
hlt
int
int3
not
push
shl
clc
xchg
imul
insb
pop
cmp
xor
mov
imul
movsb
xor
pop
and
dec
es
cli
test
cmp
hlt
lahf
push
iret
and
sbb
insl
shlb
sbb
xor
jbe
movsb
pop
sbb
cmp
xor
adc
es
sbb
or
push
sbb
xlat
jecxz
mov
rolb
or
les
jo
mov
testb
push
inc
jo
popa
push
movsb
fwait
test
sbb
popa
lods
enter
shrb
xor
or
repz
xor
sub
and
adc
lea
fisttps
sbb
fdivr
push
mov
pop
pop
in
pop
xor
sbb
push
xor
fbld
lods
cmpl
into
enter
push
mov
mov
lods
adc
fisubs
call
push
cmpsl
mov
add
jns
mov
lcall
ss
sub
dec
sub
test
fcomp
cmc
test
mov
mov
test
fcomps
stc
xor
xchg
or
mov
or
ja
jmp
xchg
cmpsw
add
lods
fcmove
mov
pusha
cmc
iret
or
push
jg
jo
aad
out
lcall
push
ds
mov
mov
cmpsb
shlb
call
sbb
cld
das
mov
cmp
lret
and
stc
mov
mov
xchg
fucom
push
sub
mov
jne
jb
dec
sbb
pop
loope
mov
inc
loopne
cs
inc
loope
pop
cmp
jne
sbbl
daa
or
add
xor
inc
lods
daa
push
or
jo
sub
xchg
fiaddl
xor
rcrb
pop
xchg
fcmovnbe
mov
fidivs
dec
icebp
adc
mov
out
mov
insl
fnstenv
icebp
enter
bswap
les
loope
ja
fsubrl
adc
pop
mov
sbb
jmp
jle
jns
bound
adc
pop
int
pop
outsl
or
loope
adcl
xor
std
xchg
or
xor
mov
int3
cltd
xchg
shll
mov
mov
inc
in
lds
cwtl
or
push
out
nop
mov
fs
mov
sbb
jg
sbb
pop
push
sbb
and
fs
out
sub
stos
push
cmp
lcall
out
or
mov
mov
push
aaa
sbb
xor
subb
inc
andb
rcrl
mov
mov
inc
xor
jnp
push
aad
cmp
push
pop
inc
push
jb
stos
sub
adc
push
js
pop
xchg
lods
jbe
sbb
rol
pop
iret
or
xor
fistpl
pop
push
sub
insl
sub
jae
aam
inc
mov
gs
jecxz
ret
sti
dec
loopne
fimuls
daa
push
jbe
cltd
fcomps
stc
mov
jne
addr16
rcll
bound
inc
and
in
jmp
negb
ds
adc
std
dec
xor
lods
cld
add
cmc
and
add
pop
jge
fistps
ret
outsl
add
inc
jno
mov
mov
xchg
inc
jb
popa
push
add
repnz
xchg
jb
push
aaa
dec
xchg
mov
fwait
into
cltd
pop
sub
shrb
mov
cmc
push
std
out
or
jle
xchg
add
pop
xor
sahf
sti
xchg
jge
aaa
in
pusha
in
adc
lret
aad
lea
outsl
sbb
leave
lds
cmp
test
rol
icebp
fucomi
push
dec
je
loope
xor
cmp
or
cs
or
and
jmp
cltd
scas
xor
or
movsb
pushl
out
mov
xor
jl
dec
cli
cmp
jo
sbb
jmp
incb
pop
xchg
cvtpi2ps
pop
test
pop
scas
xor
sbb
xchg
addl
cwtl
cmp
mov
aad
scas
xchg
fistps
in
ljmp
and
and
ret
push
outsb
jge
call
and
mov
clc
imulb
jp
loope
or
les
gs
add
cli
dec
jne
nop
loope
or
cmp
pop
xchg
add
adc
adc
inc
pusha
fwait
xchg
cmpsb
pop
in
lods
lret
pop
mov
cmp
cmp
inc
jne
sbbl
mov
gs
dec
adc
test
loopne
xchg
arpl
pop
js
sub
push
mov
dec
dec
inc
pop
mov
sbb
dec
int3
bound
sbb
add
repnz
roll
rol
jnp
fnsave
rcrb
fildl
and
into
fisubrs
aam
cmp
add
rol
adc
jge
mov
sub
inc
push
sbb
add
jnp
scas
sbb
mov
aam
fwait
jae
add
or
test
pusha
push
push
cli
daa
loopne
push
out
orl
sbb
sahf
pop
mov
or
in
jbe
pop
add
cmp
sahf
push
subb
or
mov
mov
inc
mov
outsl
imul
repz
adc
xchg
xor
and
inc
icebp
shrb
pop
sbb
pop
mov
inc
sub
sub
jg
pop
sub
sub
stos
repnz
rorl
add
mov
imul
cmp
jmp
push
ret
push
add
xchg
lcall
pusha
shlb
dec
jge
push
sub
mov
mov
cld
cmp
xlat
inc
fsubp
shr
push
pusha
das
mov
fisubrl
and
pop
cwtl
adc
push
mov
xchg
and
into
sbb
or
sbb
mov
js
imul
es
sub
or
leave
or
pop
cmp
insl
imul
sarb
fs
icebp
das
fnstcw
ss
in
xchg
jno
add
and
add
add
dec
fwait
sub
sahf
push
sub
adc
ficoml
data16
test
int3
sbb
int3
pop
add
xor
js
lods
cmp
sub
xor
sarb
jmp
arpl
push
and
add
sbb
xchg
cmp
jbe
scas
mov
or
sub
mov
add
hlt
movl
sbb
push
pop
jbe
scas
cmpsb
sbbb
out
lret
adc
cltd
adc
push
outsb
into
outsl
insl
lret
ret
xchg
hlt
push
sub
xchg
inc
stos
iret
and
mov
clc
xlat
clc
jg
xchg
add
sub
repz
push
mov
shrb
rep
aas
add
lret
fldt
out
imul
dec
mov
scas
outsl
mov
jne
out
pop
aaa
pop
sahf
shlb
call
mov
mov
addr16
in
mov
lret
ljmp
cmp
hlt
inc
das
mov
scas
xchg
mov
addr16
mov
sti
xchg
xchg
mov
mov
int
jp
rep
repnz
cmp
mov
cli
int3
jecxz
lods
xchg
xchg
stos
add
fadds
dec
fldt
rcl
scas
sti
mov
sub
or
cli
inc
test
daa
ds
adc
cltd
cmp
xchg
sub
and
pop
lods
pusha
push
cmp
stos
js
cmp
test
mov
mov
repnz
sbb
mov
push
dec
sahf
mov
out
sbb
pop
fidivs
psrad
xor
dec
imul
push
clc
loopne
xchg
sarl
aas
mov
pop
lods
pop
sub
mov
mov
adc
fsubrl
sub
sub
push
mov
movsb
mov
inc
cmc
jbe
xchg
daa
xchg
arpl
and
push
les
mov
and
or
movsb
popf
push
mov
xor
jge
shl
fisttpll
out
xlat
fwait
push
mov
cmp
ja
movsb
adc
add
enter
popf
jae
xor
sarl
mov
stos
divb
push
mov
test
js
and
pop
testl
fs
mov
bnd
or
pop
aaa
push
in
adc
xor
dec
adc
sub
mov
mov
dec
sub
mov
add
subl
stos
or
sbb
add
push
sub
xchg
aas
inc
stos
in
rcl
or
call
pop
pop
sbb
or
and
out
out
dec
and
loopne
jge
shll
test
in
in
out
aad
push
pop
pop
cmc
sbb
mov
mov
sbb
insl
or
bound
xchg
mov
xchg
jp
jmp
jnp
add
cmp
sub
xchg
rcr
xor
addr16
jecxz
sub
loope
repz
push
lea
adc
out
lcall
scas
test
sub
mov
add
xlat
adc
pop
lods
jbe
clc
movl
mov
jl
lret
pusha
movsb
mov
pop
mulb
adc
mov
xor
pop
push
push
mov
enter
jp
push
lock
add
in
or
mov
sub
into
or
cltd
sub
sub
and
xchg
xchg
or
stos
fisubrs
mov
sbb
cmc
sub
lret
jns
sub
mov
scas
mov
nop
rcr
mov
inc
mov
ret
repnz
and
sub
jo
adc
stos
inc
cwtl
adc
xlat
push
and
inc
in
mov
int3
cmpsl
mov
test
arpl
cmc
xor
mov
and
outsl
out
or
daa
cmpsl
pop
gs
scas
mov
ret
xchg
mov
fcompl
icebp
into
push
rclb
negl
mov
adc
mov
pop
inc
ss
inc
jns
add
adc
int
ret
rcrb
loop
fcoms
test
ss
mov
fldt
push
cld
mov
cltd
sub
xchg
hlt
xlat
dec
aas
xchg
add
mov
outsl
aam
jbe
jp
int
in
cltd
sub
iret
and
ror
inc
xor
in
mov
push
mov
and
in
xchg
lcall
scas
adc
pop
cwtl
cmp
fisubrl
and
xchg
cltd
stc
cmpsl
mov
fisttpl
sbb
lock
repnz
inc
pusha
fcmovb
pop
jge
mov
fisttpl
or
push
hlt
call
mov
jmp
enter
sbb
or
add
jge
sbb
divl
adc
ss
mov
xor
jae
ror
add
shlb
aas
xchg
fs
jae
adc
ljmpw
orl
mov
mov
sbbl
je
mov
dec
int3
adc
movsb
push
cld
in
sar
mov
adc
shll
push
jp
icebp
pinsrw
cmpsl
mov
push
xchg
xchg
pop
leave
insl
jo
jbe
push
pop
jmp
sbb
xor
lock
jge
ret
xchg
or
ljmp
nop
jb
xchg
int3
sub
int3
add
ret
clc
in
out
xchg
test
xor
in
adc
mov
ljmp
or
inc
and
pop
push
mov
cmpsl
xor
cmpsb
stc
or
or
jl
stc
jno
icebp
xchg
adc
push
pop
cld
filds
mov
divb
in
cli
orb
ljmp
cmp
sub
mov
cmpb
lods
test
pop
dec
arpl
cmp
into
fcmovnb
insl
cmp
hlt
push
inc
or
inc
jne
jge
xor
jmp
add
adc
or
cs
push
stos
pop
push
out
pop
lods
flds
adc
xchg
push
push
dec
sbb
sahf
mov
out
pusha
sub
fmull
repnz
sub
ljmp
ljmp
out
imul
push
cmp
scas
xchg
sub
orl
jns
xorl
adc
jae
aaa
enter
add
xchg
std
xor
dec
stos
sbb
xorl
xlat
sub
pop
mov
mov
mov
add
int3
mov
inc
loop
repnz
ja
lcall
shll
push
sahf
int
jbe
shlb
jne
out
and
fistpl
sbb
aam
lret
adc
cwtl
mov
cmc
xchg
cltd
inc
std
ret
lahf
negl
loopne
or
addr16
aam
mov
out
into
jnp
cmpsl
sbb
nop
ret
inc
fwait
ja,pn
mov
aaa
push
and
cmc
mov
mov
mov
pop
push
add
pop
loope
call
int
in
xchg
mov
cmp
gs
das
xchg
xor
lea
pop
cltd
pop
jnp
gs
jns
iret
ja
cld
fistpll
lret
add
pop
pop
adc
sub
nop
push
push
adc
sub
push
arpl
mov
clc
mov
test
mov
aas
sub
pusha
mov
push
sarb
push
movsl
pop
cli
adc
filds
and
sbb
enter
sbb
pop
testl
lcall
cmp
aaa
ja
aas
filds
xchg
mov
orb
mov
adc
dec
or
shlb
push
xor
cltd
sbb
push
outsb
ljmp
inc
js
lock
out
lcall
shll
int
push
adc
or
and
xchg
and
mov
dec
pop
cmp
adc
popa
shll
dec
sbb
movsl
xorb
scas
add
jp
leave
insl
jmp
das
pop
xor
sahf
ficoml
and
pop
je
loop
xor
mov
enter
pop
repnz
push
cmpsl
mov
mov
aad
pop
xor
pusha
cmpl
lret
dec
mov
mov
leave
aaa
ret
pop
or
jp
mov
add
push
lcall
fistpl
mov
xor
bound
pop
enter
idivl
dec
daa
aad
adc
push
inc
mov
leave
xor
rcrl
das
out
pop
fstpt
push
iret
jbe
xchg
aad
bound
js
scas
scas
mov
xorl
daa
ds
cmovle
push
mov
or
add
in
dec
and
jecxz
xchg
cmp
xchg
adcl
push
xchg
je
sub
call
dec
lahf
add
dec
out
fs
imul
or
lret
mov
cmp
ret
cmc
std
lds
sub
shrl
mov
cwtl
out
aad
mov
xlat
sub
push
fwait
or
cmp
jns
lock
out
in
mov
js
test
out
xchg
adc
int3
and
inc
add
scas
mov
sti
cmp
shl
test
inc
enter
daa
sub
jl
addr16
push
push
stos
xor
scas
loope
jecxz
xchg
pusha
cmp
idivb
mov
mov
xchg
in
adc
jge
mov
adc
out
push
push
mov
mov
enter
lock
adc
jb
call
scas
outsl
sub
sub
push
mov
shl
test
js
sub
lret
xchg
fcmove
sbb
xchg
cwtl
gs
push
xchg
sbb
mov
iret
aam
cltd
andl
push
xor
xchg
ret
sub
mov
rep
xchg
stos
stos
in
push
jo
push
aas
mov
mov
loope
sti
mov
out
lcall
daa
fwait
outsl
mov
pusha
movsl
sub
and
cmp
fimuls
inc
hlt
enter
test
in
out
lahf
fadds
mov
pop
orb
push
out
fs
and
add
stos
push
popf
add
adcb
addr16
call
adc
lods
sbb
or
out
icebp
mov
adc
jno
jmp
add
idivl
add
xor
and
or
jnp
inc
mov
repnz
fists
push
nop
call
mov
lods
sub
cwtl
pushf
lock
loope
xchg
nop
popf
dec
pop
xor
add
mov
addr16
dec
icebp
je
add
fnstcw
and
jae
pop
push
and
fwait
lea
pushf
ja
ljmp
fsubrl
mov
out
ds
rol
repz
or
cs
mov
orl
outsb
mov
xchg
insl
or
stos
xchg
jmp
les
mov
mov
and
filds
sub
push
test
mov
inc
xor
arpl
mov
mov
jbe
in
pop
int
scas
loopne
adc
popf
sahf
xor
xor
xchg
repnz
leave
cmpsb
ljmp
cs
add
xchg
popf
aad
adc
cmp
sarl
or
xor
es
fnstsw
out
out
je
mov
add
or
mov
daa
ds
or
ja
js
js
icebp
pop
push
ss
sub
sahf
je
aam
cltd
aas
inc
dec
cmp
or
dec
or
xchg
iret
or
mov
shlb
jo
out
lock
sbb
jmp
sub
dec
xor
jl
stc
mov
pop
andb
and
movsb
std
gs
mov
inc
das
in
mov
dec
xchg
in
orb
xor
and
out
test
movsb
aad
jo
aam
lret
sbb
adc
and
fnsave
cmp
shr
pop
and
inc
stos
fnsave
js,pt
mov
nop
test
stc
mov
mov
mov
inc
insl
stos
nop
jno
or
daa
ret
lods
xchg
jg
xor
inc
das
mov
insb
das
jae
insb
pop
jns
lcall
stc
sbb
jnp
repz
das
mov
xchg
and
lcall
and
mov
jmp
jno
jge
das
add
mov
lea
mov
mov
mov
js
dec
adc
dec
mov
cmc
or
adc
cmp
push
mov
insl
adc
rcll
mov
cld
and
xchg
xor
add
movsl
out
or
shlb
in
fwait
sbbl
adc
xchg
ret
xchg
mov
xor
arpl
sbb
loop
pop
pop
sub
or
or
pop
sub
ss
adcl
inc
mov
ss
dec
std
cmp
shll
fldl
cltd
inc
lock
les
arpl
mov
mov
insb
xor
adc
sbb
ret
ficomps
stc
xor
mov
and
roll
inc
push
mov
je
mov
pop
push
sub
push
mov
mov
xchg
sub
jb
cs
aas
xchg
mov
mov
in
addl
sbb
ss
orb
aam
mull
push
rcrl
cmp
pop
in
mov
sbb
scas
shrb
mov
notl
or
sbb
in
mov
and
or
mov
out
int
and
inc
dec
cmp
add
adcb
out
clc
das
imul
add
repz
mov
or
push
fcmovne
pop
mov
mov
xchg
push
ficoms
in
sub
mov
cwtl
and
dec
inc
sub
mov
adc
ret
lock
xor
insb
pop
adc
imul
ss
stc
push
mov
rcll
popf
add
in
in
shrl
push
xchg
leave
xchg
fisttpl
inc
cmp
shrb
mov
xchg
pop
xlat
jnp
and
inc
push
and
xchg
ss
xchg
mov
adc
inc
cs
xchg
cltd
aam
xlat
adc
ljmp
and
cmc
push
hlt
sub
xor
sub
ror
pop
cmp
frstor
or
roll
xor
test
sbb
int
pop
fdivs
cmp
call
xor
push
pop
adc
cmpsl
push
push
lea
sbb
imul
inc
xchg
dec
daa
jl
cmc
xor
add
sub
icebp
test
lock
push
mov
and
add
xchg
jle
imul
mov
ds
negl
je
negb
xchg
test
addr16
jle
mov
loop
push
jle
out
int
pop
sub
scas
adc
test
inc
mov
test
arpl
fcom
dec
cmpb
push
test
and
inc
aam
and
xchg
aas
aad
pop
iret
stos
push
cmp
xor
popf
data16
xchg
scas
sbb
scas
mov
sbbl
arpl
jo
pop
mov
popf
dec
push
andb
test
movsl
sarl
mov
icebp
cmp
js
lock
mov
adc
lcall
test
pop
and
mov
adc
jmp
push
sbb
lods
shll
imul
ja
js
arpl
test
mov
push
sub
std
mov
mov
sbb
or
aad
outsb
jmp
repz
pop
out
adc
jns
mov
pusha
incl
out
inc
mov
insb
inc
xor
sbb
stc
cli
sarb
cmpsb
xor
subl
lret
popa
xchg
pusha
adc
inc
stos
sahf
jmp
push
repnz
cwtl
inc
add
xor
sahf
pusha
popa
mov
cli
andb
mov
mov
push
inc
aad
divb
scas
pop
int
xchg
jmp
out
lret
pop
mov
in
into
inc
rclb
mov
xor
push
imul
mov
mov
sbb
insb
push
movsb
ljmp
roll
imul
in
sbb
lods
mov
mov
pop
ret
addb
fwait
or
imul
shl
mov
sbb
xchg
mov
or
test
inc
inc
out
push
pop
fistpll
mov
aad
push
hlt
pop
cmp
sub
jecxz
xchg
test
mov
leave
scas
dec
sub
stc
ret
je
pop
call
push
xchg
fs
cmp
adc
movsl
mov
icebp
jecxz
xchg
jo
jno
push
dec
add
jl
mov
jne
xchg
movsl
fistps
cmp
in
out
inc
repz
jae
xor
mov
scas
push
or
outsb
mov
pop
dec
xor
clc
mov
lods
sub
dec
data16
mov
pushf
sub
je
jae
pop
leave
orb
clc
ret
divb
ret
imulb
inc
aad
sbb
and
lret
inc
repz
cmp
inc
and
dec
icebp
sbb
mov
daa
sbb
iret
lods
fcomi
xchg
nop
ja
mov
fwait
loop
mov
fcmovb
add
shlb
jecxz
cld
inc
mov
and
cmp
jae
scas
mov
push
pushf
inc
cmp
pop
mov
inc
mov
lds
insl
out
ror
lcall
lock
out
xlat
push
jb
cmc
stos
subb
cwtl
xchg
dec
popa
xlat
mov
dec
add
aam
stos
cmpl
jp
imul
pop
stos
and
xlat
shl
aam
sub
push
repnz
sbb
comiss
jl
lahf
out
jmp
push
pop
scas
xor
pop
xchg
xor
mov
push
movsl
mov
jbe
dec
and
or
imul
out
xor
xchg
hlt
mov
popa
inc
pop
xchg
addr16
push
sub
call
outsb
rorl
pop
rcll
mov
test
int3
inc
les
push
aas
mov
repnz
pop
sbb
lahf
cmp
xor
and
jmp
cmp
aas
push
sbb
dec
mov
xor
in
mov
push
aad
and
mov
jns
daa
adc
lcall
sbb
mov
mov
inc
mov
pop
jmp
mov
sbb
dec
xor
or
jne
out
or
iret
leave
mov
arpl
call
cmp
jbe
sub
mov
bound
and
xchg
jne
aam
je
sub
shlb
leave
dec
jp
cmp
dec
dec
es
mov
lods
out
xchg
push
cmpsb
hlt
xorl
inc
out
inc
or
and
pop
inc
loopne
fcomip
cltd
shlb
xor
imul
mov
cli
unpckhps
jae
loope
pushf
and
mov
repnz
fbld
rcll
mov
cld
int
push
out
movsb
test
inc
mov
add
aad
outsl
pop
test
cltd
inc
cltd
cmp
ss
push
ret
stos
lock
daa
mov
add
sub
hlt
jb
inc
or
filds
divb
dec
ljmp
std
dec
addl
push
movd
mov
jb
cmp
mov
insb
and
dec
pop
mov
xor
into
mov
xchg
aas
mov
cmp
shll
xchg
push
add
mov
adc
pop
mov
jno
ss
jns
xchg
andl
shrl
lds
push
inc
je
or
mov
push
out
int3
push
in
dec
imul
ljmp
pop
mov
cmp
inc
lcall
in
xor
dec
pop
xorb
mov
cmp
mov
mov
out
mov
loope
mov
dec
leave
loopne
dec
add
sub
es
push
lea
out
gs
outsb
test
in
arpl
jbe
cmp
inc
adc
sbb
ret
inc
or
test
idivb
in
sbb
mov
pushf
mull
outsb
lock
fldenv
dec
popa
adc
fisttps
lahf
xor
adc
jmp
mov
push
pop
mov
xor
jl
in
fisubrs
push
xchg
cs
dec
adc
fdivl
std
push
push
aam
insl
pushf
shll
mov
fsubrs
enter
repnz
sbb
pop
mov
mov
test
mov
popf
dec
xor
aas
push
jae
stc
push
mov
sbb
sbb
jnp
cmp
test
daa
mov
mov
popf
imul
xor
pop
mov
cmp
mov
insb
bound
lock
sub
imul
sub
pop
sbb
cmpsb
push
out
and
ljmp
fidivl
push
and
push
cmp
dec
jnp
mov
add
push
fwait
stos
in
mov
fcmove
ss
and
les
add
jg
push
sub
cmp
dec
hlt
sbb
mov
push
jno
sarl
stc
jecxz
imul
inc
xchg
data16
fwait
negl
leave
popf
lret
and
adc
push
sub
shr
stc
push
mov
dec
sti
pushf
push
ds
mov
out
iret
pushf
lcall
frstor
push
outsl
sbb
outsb
les
je
sbb
movl
inc
pusha
aaa
arpl
mov
ror
outsb
outsb
outsl
daa
int3
bound
mov
icebp
push
push
mov
enter
dec
mov
pop
stc
cmp
int
adc
pop
aad
and
popa
cwtl
jae
pusha
pop
test
mov
sub
icebp
inc
int
pop
xor
jge
sti
cmpsb
cs
jle
xor
sub
push
or
xor
popl
jne
mov
jp
xor
push
mov
and
sbb
push
inc
xor
push
jmp
and
ret
or
leave
and
and
xchg
push
jecxz
adc
jae
sbb
sti
scas
sub
xlat
loope
shl
pop
inc
sub
xchg
inc
cmp
pop
push
push
cmp
mov
fdivs
dec
jle
cmpsl
push
mov
or
jmp
in
test
imul
mov
or
push
mov
lcall
in
leave
mov
enter
rorb
mov
cld
imul
xor
mov
xchg
add
ficoms
idivb
in
jmp
rol
add
mov
imul
loop
adc
dec
jns
lret
sub
jg
lds
push
cmpsb
call
mov
lcall
pusha
lds
arpl
dec
mov
add
adc
sbb
push
add
out
sub
sti
in
sbbl
fisubrs
mov
push
or
mov
xchg
dec
out
clc
mov
or
nop
das
pusha
cmpsb
jae
or
cmp
ds
stos
movsl
sbb
andl
inc
stc
ja
pop
ror
ljmp
cmp
imul
in
incl
pop
shlb
jne
or
nop
xchg
icebp
mov
in
dec
test
pop
in
xchg
nop
cmp
or
add
cli
pop
aad
jae
mov
cmp
les
dec
cld
aaa
xor
push
xchg
outsb
xor
pop
loopne
addl
jmp
popa
mov
sbb
mov
mov
xchg
dec
sbb
lock
fxch
xor
shlb
xchg
pop
scas
imul
push
das
dec
mov
dec
mov
pop
loope
and
sbb
dec
adc
adc
in
rolb
add
xchg
fsts
sbb
dec
push
hlt
mov
jecxz
clc
dec
leave
inc
sbb
sub
inc
cmp
outsb
lock
out
imul
stos
jge
sub
shll
aam
mov
aad
orl
enter
imul
ljmp
fwait
sbb
aas
inc
or
cld
sbb
into
sti
xor
xor
or
inc
call
push
dec
dec
leave
out
hlt
cmp
push
cmp
mov
mov
inc
dec
and
nop
repz
jmp
loop
adc
and
xor
mov
fdivrs
push
pop
and
xchg
and
aas
mov
jg
ror
xchg
das
inc
repz
xor
or
push
and
in
icebp
hlt
outsl
mov
jl
xchg
sahf
imul
push
push
idivl
pop
sbb
movsl
push
and
lret
inc
jl
xchg
push
rdmsr
std
inc
movsl
xchg
add
jl
jge
test
sub
mov
lds
dec
add
xor
push
insl
push
cmp
cmpsb
mov
mov
push
stc
mov
outsb
into
int3
rorb
and
or
xor
pop
fs
scas
or
test
and
sub
mov
jae
push
jns
mov
xor
cwtl
xor
mov
jo
insl
jb
and
jg
inc
push
roll
xchg
add
pop
call
xor
ret
cmp
fidivs
lret
dec
inc
xchg
movsl
jae
jb
outsl
mov
sti
mov
leave
call
out
incl
dec
xchg
sarb
popa
adc
xchg
and
nop
mov
push
inc
push
shlb
clc
fisubrs
cmc
xchg
ret
push
ja
jno
sbb
sbb
repz
xor
cltd
test
lret
jae
mov
mov
dec
pop
aam
and
lea
cmp
dec
cmp
cmovnp
in
xor
ss
test
mov
xor
push
mov
push
js
add
jp,pn
sub
test
mov
mov
into
mov
mov
xchg
pusha
push
fwait
jmp
outsb
aad
add
mov
dec
mov
lret
nop
sbb
aad
clc
pop
inc
ja
cmpsl
lock
xchg
cmp
adc
repz
jmp
lahf
in
sahf
cwtl
lret
mov
pop
sub
sbb
enter
pop
push
dec
loop
sti
aaa
shrl
sbb
sahf
outsl
popf
or
push
mov
push
cmp
test
sub
jg
cmpsl
mov
inc
incl
pop
xor
bound
cs
cli
xchg
sbb
loopne
pushf
lock
and
sub
and
adc
shll
loope
sbb
out
cmp
outsl
push
add
mov
jecxz
mov
dec
aad
sbb
nop
adc
mov
xchg
jbe
cld
sbb
fucomi
mov
mov
fdivrs
out
clc
push
add
adc
jns
cmpsb
dec
sub
sbb
cmc
jb
notl
loopne
je
xor
pop
ds
pop
jb
pop
push
cmpsb
add
push
mov
lds
les
sub
test
ljmp
les
inc
lock
inc
sbb
imul
shr
jb
pop
stos
dec
enter
sub
insb
bound
lods
imul
jb
inc
cmp
test
push
jbe
mov
dec
in
mov
test
cwtl
enter
jne
jmp
cs
test
pop
jp
test
and
mov
or
clc
mov
pop
repz
add
pop
les
push
jl
cmp
fbstp
xchg
and
push
xchg
push
ljmp
cld
sub
mov
lock
test
adc
add
sub
shl
pop
or
insb
inc
adcl
push
les
das
mov
mov
or
xor
or
into
in
push
aas
inc
push
xchg
cmc
into
arpl
jp
xor
ja
cld
sbb
push
fildll
pop
stc
outsb
mov
outsb
or
mov
stos
es
and
outsb
xor
fnsave
lock
dec
test
push
fcmovnu
sbbb
push
ret
loope
xchg
add
shlb
push
in
mov
xchg
stc
xor
jo
sbb
mov
orb
mulb
jae
or
mov
or
mov
out
test
or
test
fimuls
fwait
or
push
sbb
in
movsb
int
pop
jno
push
outsl
mov
cltd
test
jne
imul
sub
cld
imul
adc
mov
dec
sbb
loope
das
mov
lock
mov
rorb
pop
pop
or
ror
push
xchg
arpl
mov
stos
imul
push
aad
scas
test
and
int3
cmp
mov
or
popf
int
stos
inc
test
in
add
xchg
ja
popf
sub
or
imul
pop
add
rclb
cli
test
adc
pop
cmp
sti
push
in
cwtl
scas
or
mov
push
mov
int3
jmp
fldenv
mov
mov
dec
adc
es
scas
vorps
clc
add
inc
mov
inc
pushf
and
data16
aam
mov
or
insb
cmp
mov
or
loop
in
and
loope
test
repz
sbb
sub
inc
out
popa
mov
sub
ja
lock
mov
jb
fnstenv
adc
xor
hlt
pushf
jno
xchg
mov
and
push
inc
divl
out
mov
sbb
pop
enter
cli
jbe
cmp
mov
inc
xor
or
inc
loopne
je
inc
push
shrl
jns
jbe
add
aam
add
jae
adc
xchg
testb
test
int3
push
sub
gs
mov
adc
jge
pop
ds
dec
rolb
xchg
mov
in
push
es
fisubrs
mov
sub
push
insl
jo
testb
cmp
cmpsl
jo
sbb
and
cmp
out
mov
test
pop
imull
add
mov
jge
push
or
push
pop
cltd
addb
pushf
cmp
and
leave
mov
mov
pop
jbe
addr16
inc
stos
push
orb
cs
jecxz
aad
push
cmc
and
test
dec
mov
lret
push
int3
pop
ret
cmp
mov
push
cmp
push
add
ja
ffree
test
add
mov
mov
rorl
mov
out
cs
das
push
sub
push
adc
test
xchg
add
lret
outsb
push
xor
inc
hlt
push
pop
xor
stos
xor
mov
sbb
and
sbb
shll
fld
xchg
and
jb
stos
cmpsl
add
jne
sbb
mov
leave
iret
movsl
and
xchg
cmp
sub
dec
xchg
pop
stos
test
mov
fwait
cmpl
sbb
stos
loope
movsl
jp
scas
mov
lock
testl
push
push
rorb
jg
shrl
loope
inc
sub
leave
sub
gs
cmp
jmp
jle
inc
mov
cli
mov
sub
jge
out
inc
push
pop
pop
scas
mov
xchg
mov
mov
sub
sub
adc
pop
add
pop
inc
xor
mov
outsl
lods
xor
and
shr
iret
or
jno
xchg
and
add
int
loope
mov
enter
orb
push
xchg
xlat
sbb
rcrl
mov
pop
lcall
adc
shlb
in
xor
js
repz
outsb
sbb
rclb
insl
jecxz
test
cmp
scas
push
ljmp
mov
add
int
xchg
pushf
sbb
dec
scas
into
ds
lcall
fisubrs
aam
add
dec
jne
jg
xchg
gs
hlt
add
push
jl
cs
xchg
dec
jle
sbb
xchg
add
andb
push
pop
test
insb
jmp
pop
pop
pop
push
adc
sbb
pop
cmp
bound
mov
xchg
mov
mov
frstor
lret
mov
cmp
mov
lds
daa
lock
xchg
cmpl
popf
push
decb
fdivr
dec
jbe
adc
cmpsl
insb
bnd
push
xchg
ds
cmp
stos
call
out
sysenter
gs
jns
push
jecxz
lcall
daa
fldcw
fdivl
cmpsl
adc
call
adc
js
lcall
pushf
js
jmp
jns
enter
dec
out
inc
cmp
rclb
mov
scas
push
cmc
hlt
test
mov
fsubl
addr16
cmc
dec
faddl
dec
bound
pop
mov
xchg
shrb
lret
sub
jns
mov
push
jle
jle
js
movl
nop
xchg
hlt
mov
mov
mul
cmc
dec
cmp
cmp
push
mov
pop
test
mov
pop
or
adc
lcall
and
push
loope
xchg
testl
sbb
xchg
xlat
xchg
cwtl
out
cwtl
cmp
scas
xor
in
and
arpl
pop
inc
adc
mov
push
scas
mov
out
xchg
mov
mov
mov
adcb
mov
adc
lea
mov
popf
dec
sarl
push
push
sub
jle
hlt
xchg
push
fisttpll
pop
jne
jne
and
mov
xchg
cmpsb
cmpsb
sub
test
mov
stc
cwtl
imul
das
push
sarl
mov
popa
dec
enter
inc
imul
test
js
push
stc
outsb
sbb
jne
xor
jne
mov
push
dec
bound
das
sbb
mov
add
fidivrl
or
or
push
mov
loope
pop
into
inc
hlt
aaa
fists
into
scas
clc
xchg
mov
ja
shll
iret
cmpsl
test
inc
xchg
adc
loopne
icebp
int3
outsb
add
push
jno
xor
fildll
std
dec
mov
sarb
mov
and
dec
cmp
lfs
pop
dec
ja
stos
mov
xchg
mov
mov
cmp
ret
jge
fisttpl
add
mov
sbb
adc
adc
pushfw
in
mov
sbb
dec
stos
adc
das
les
movsb
rol
addr16
out
sbb
loope
dec
ljmp
pop
mov
stos
cmc
pop
scas
jo
rorb
xchg
test
xchg
inc
push
insb
out
push
cmp
loop
mov
orl
jp
sub
push
lds
dec
sahf
mov
dec
rolb
inc
dec
xchg
mov
cmp
mov
sub
data16
sub
cmp
mov
arpl
inc
pushf
or
pop
in
or
cmp
inc
cmpsl
or
subb
test
mov
pop
jmp
out
xchg
and
outsl
xor
jg
popf
xor
stc
ss
jns
aaa
jmp
inc
fisttpll
lret
xor
cld
sbb
lret
push
jae
or
pop
loop
inc
xchg
xchg
jbe
inc
mov
and
xchg
and
ror
out
loopne
sub
inc
add
or
mov
int3
cwtl
cmc
xchg
nop
pop
in
xchg
loop
push
test
ret
inc
scas
test
xlat
xlat
mov
popa
sub
inc
jbe
xchg
leave
push
stos
lock
ds
dec
pop
ljmp
jecxz
testb
mov
inc
cmp
rorb
clc
daa
mov
or
adc
adcl
sub
adc
xorb
int
aas
int
lahf
pop
pop
cmp
add
into
jno
divl
lret
into
pop
sti
repz
jge
sbb
lods
ret
dec
scas
popf
mov
xlat
daa
xlat
imul
cmp
or
add
shll
adc
dec
pop
pop
mov
in
mov
fisubrl
shl
in
iret
scas
mov
popa
fidivrs
repnz
xchg
sti
lods
jns
adc
sbb
or
mov
add
lret
xchg
in
outsb
adc
lret
inc
mov
addr16
cs
inc
ds
in
in
dec
outsl
mov
int
cwtl
xchg
lcall
mov
push
cmc
cmpsl
test
mov
add
ficoml
mov
push
xchg
test
adc
dec
into
dec
mov
test
ret
lret
test
lret
inc
lret
lods
adc
lret
pop
push
sub
aam
aad
sub
jl
popa
in
lret
dec
aad
xchg
sub
int3
dec
add
and
orb
ret
rcrb
rolb
sti
mov
adc
xchg
fldl
das
mov
aad
ss
xchg
stc
rcll
fs
xor
ja
es
lock
jno
inc
pop
adc
shrl
cmp
in
orb
mov
pop
scas
mov
push
cmp
push
hlt
dec
pmulhuw
scas
adc
sbb
ljmp
insl
loope
ror
int3
push
jae
sahf
enter
stos
arpl
or
cmp
bound
xor
in
bnd
dec
add
mov
arpl
inc
filds
jp
cmp
pop
cmpsb
pop
xlat
xor
pop
sub
and
jle
lock
call
shl
ja
and
test
rcrb
sub
xchg
lret
adc
mov
sub
dec
pop
push
cmpsl
jb
cwtl
jae
lds
movsl
fnstcw
rclb
dec
or
leave
cli
inc
mov
aam
jne
lret
cmp
loope
xchg
movsl
cmp
js
lods
out
adc
shlb
pop
dec
rorb
ret
test
movsl
repz
ficompl
and
das
andb
xor
jb
pop
fwait
add
inc
cmp
mov
mov
nop
stos
xor
mov
sahf
test
mov
push
insl
dec
add
xchg
mov
scas
rcrl
sub
jnp
or
leave
shl
cmc
xor
and
jno
hlt
fsubrs
push
cmpsl
icebp
in
fistpll
push
ja
sub
mov
xchg
and
push
bnd
sub
fldl
fdivrs
in
xchg
pop
ds
xor
xlat
out
je
cmc
pop
push
into
out
mov
xchg
inc
and
add
bound
call
stc
mov
in
mov
imul
scas
rorb
push
cmp
aad
cmp
inc
sbb
pop
cs
mov
out
dec
mov
xlat
sbb
sbb
or
pop
xchg
jns,pn
out
outsb
pop
fsts
adc
std
xchg
cmp
push
sbb
push
pop
add
ret
mov
mov
lods
aad
pop
daa
mov
orb
imul
outsb
outsl
lret
mov
dec
mov
fiadds
mov
dec
sub
out
cld
push
lcall
inc
mov
adc
pushf
push
js
adc
imull
push
icebp
push
push
inc
enter
btc
jmp
dec
mov
outsl
es
shll
xlat
arpl
mov
movsb
jno
nop
cmp
adc
cmc
vorps
out
movsb
aam
xor
mov
adc
cmp
xchg
in
mov
adc
das
scas
xor
cmp
pop
pop
sbb
jg
push
jno
push
int
push
inc
pop
cmp
jb
mov
cltd
adc
les
sub
mov
push
mov
mov
jb
aad
jl
cmp
pushf
fdivs
movsl
sbb
repnz
cmp
pop
pop
mov
xchg
cmp
xor
add
nop
jl
loope
xacquire
popa
int
mov
inc
pop
mov
xor
lods
clc
loopne
xor
sub
pop
ds
cmpl
adc
mov
push
rcl
xor
inc
push
dec
xchg
xchg
daa
in
rorl
scas
jbe
xorb
in
cmp
ss
fs
push
xchg
test
negl
movsb
jbe
fdivs
push
sub
inc
mov
cmpsl
sub
sbb
or
clc
arpl
divb
inc
test
dec
xchg
repnz
sbb
push
push
dec
mov
push
outsl
sbb
test
ds
cmp
subb
lahf
add
minps
sub
mov
pop
out
dec
jo
or
std
pop
imul
call
ss
push
xchg
loope
sbb
out
mov
lret
mov
bound
out
icebp
stc
jge
push
mov
push
sbb
cld
add
pop
adc
rorb
gs
imul
and
in
jge
aaa
std
mov
rclb
in
xor
pushf
bound
add
sub
or
mov
mov
mov
fwait
ret
fisubrl
into
add
rcll
push
popl
int3
popa
sub
jg
lea
xchg
testb
xor
mov
shrb
add
sub
sbb
arpl
fwait
les
jmp
cmp
sub
jmp
mov
out
repnz
dec
mov
movsb
stos
test
insl
cmp
cmpsl
mov
cmp
das
test
mov
mov
push
mov
pushf
sub
out
int3
sbbb
cwtl
sarb
mov
push
pop
neg
push
or
mov
adc
push
loope
ret
test
clc
mov
sti
jecxz
push
in
aad
jno
cwtl
in
sbb
fbld
pop
call
movaps
dec
mov
jns
jl
xchg
movsb
add
adcb
shrb
lods
ret
cmc
cltd
push
cli
push
fldcw
lods
popa
xor
lahf
inc
pop
inc
pop
icebp
or
test
push
push
iret
test
aaa
dec
pop
pushf
test
xchg
jmp
ret
push
nop
push
adc
faddl
or
in
jae
cmp
ja
sub
popf
bound
mov
sub
imul
call
jo
dec
mov
jb
jl
mov
sub
stos
imul
fwait
inc
and
mov
fimuls
adc
mov
fisttps
xchg
sub
insl
xchg
inc
pop
cmp
daa
stos
hlt
movl
movsb
and
rorb
mov
daa
pcmpgtd
jnp
sar
adc
and
mov
cmp
insl
mov
sub
sahf
call
outsb
int3
mov
add
pop
mov
lret
pushf
pop
bound
or
cmp
in
cwtl
dec
adc
and
je
pop
jno
dec
jge
and
pop
scas
movsl
fisubl
and
inc
xor
pop
dec
mov
shrb
adc
adc
push
movsb
push
loope
push
popf
push
add
into
jmp
pop
and
movsb
cmp
aas
push
sbb
aam
xor
fldenv
mov
ss
dec
ds
insl
test
cltd
adc
fs
ffree
xlat
jbe
xchg
popf
fldcw
inc
or
and
or
mov
lea
push
repz
xorb
sahf
pop
aad
ret
dec
cmpsl
xchg
in
in
cmc
jne
cmp
mov
lock
xchg
mov
and
sti
stos
cmc
sub
inc
xor
out
push
fbstp
scas
cmpsb
xor
push
bound
test
std
cmp
int
mov
adc
filds
iret
test
add
or
dec
and
in
cmp
push
mov
jp
cmp
cmp
mov
addl
mov
fcomps
add
sub
jnp
lcall
jne
arpl
rclb
lds
lahf
pop
shl
lock
dec
pop
pop
xlat
push
cld
sbb
outsl
clc
or
mov
mov
pop
repnz
loop
repnz
lea
out
rorb
xlat
dec
inc
push
xor
mov
xchg
lcall
ss
cmp
outsb
cmp
mov
outsl
cmp
add
mov
mov
ja
mov
adc
pop
outsl
xor
orb
push
add
inc
scas
mov
xchg
test
pop
cmp
push
rclb
pop
xchg
adc
lea
dec
mov
stc
daa
loope
shl
mov
cli
in
insl
or
sbb
cmp
add
pop
mov
inc
mov
mov
xor
test
stos
loope
adc
mov
jo
cmpsb
fcmovbe
fsubrs
xor
fbld
cmc
repz
xor
or
fcmovu
pusha
cmp
imul
mov
xlat
outsl
sub
sbb
push
push
dec
push
mov
jnp
outsb
cmpsl
xchg
out
insl
ds
and
loop
ja
xchg
inc
cmpsb
movsb
sti
and
inc
cmp
cmp
movl
mov
cmpb
adc
outsb
cltd
cmpsl
jae
sub
out
lahf
dec
data16
push
aas
scas
jns
fmulp
jo
mov
sub
cmp
ljmp
repnz
in
and
pop
jecxz
adc
pop
or
jbe
sub
mov
in
sarb
out
sub
mov
pop
loop
pop
sbb
loopne
out
stos
out
push
and
cmp
lds
loop
and
cli
stos
mov
push
pop
adc
xor
leave
test
out
adc
push
jb
lcall
das
dec
push
rolb
sbb
in
jecxz
add
test
jp
jecxz
mov
ds
cmp
xchg
adc
je
and
incb
mov
mov
lods
in
into
adc
test
xor
js
mov
shlb
sub
aaa
mov
popf
cmp
aad
rolb
inc
xor
pop
or
inc
sahf
popa
inc
mov
push
pop
push
mov
add
scas
mov
std
adc
pop
jno
inc
sub
stos
push
push
pop
in
call
je
stc
mov
sub
cmp
and
movsb
fbstp
mov
shlb
inc
sti
cmp
int3
nop
and
jmp
imul
cmpsb
fcoms
es
xor
inc
mov
pop
pop
mov
mov
mov
pop
scas
out
scas
push
cmpsb
sub
ljmp
gs
jmp
and
mov
jno
jb
in
testl
out
sbb
int
negl
int3
call
dec
push
shrl
or
fstl
pop
repz
incb
gs
lret
dec
add
mov
or
mov
dec
das
xor
sahf
movl
add
mov
shr
dec
rolb
push
pop
fists
push
xlat
hlt
stos
adc
int
or
popf
stos
sbb
mov
sbb
sub
dec
jbe
aad
xchg
jne
test
jmp
xor
and
cld
inc
push
lret
cmpsl
out
les
jae
cmpsb
inc
xchg
inc
inc
fst
sbb
push
add
cmp
repnz
mov
mov
mov
add
gs
xchg
lods
jp
jo,pn
js
nop
jmp
out
cmp
sbb
mov
shrl
xchg
pop
mov
dec
push
and
test
push
push
mov
adc
ds
sbb
das
sub
push
lock
dec
fnsave
pminub
jp
sub
sbb
insl
xchg
add
loopne
xor
push
or
xchg
loope
fwait
add
lods
jg
cmpsl
aad
in
aad
jmp
and
push
test
sub
cmpsb
call
mov
sarl
add
lods
sub
inc
fistpll
xor
sub
xor
add
loopne,pn
out
les
popa
sub
jecxz
in
xlat
repnz
movsl
lods
push
test
sbb
cmpsb
shlb
fisttpl
out
into
sbb
incb
jmp
adc
loop
push
les
pop
stos
inc
sbb
loopne
mov
mov
cld
icebp
cwtl
mov
cltd
dec
jle
jne
and
movsl
push
out
cmc
shrl
sbb
stos
out
data16
cmp
iret
xlat
jno
fidivrs
or
rorl
jl
mov
das
leave
lret
dec
add
test
push
cmpsb
pop
inc
push
mov
or
jecxz
inc
pop
repz
testl
push
addr16
scas
daa
test
jp
cli
xchg
lods
cmp
push
mov
lods
cmpsb
xchg
loope
mov
aas
mov
lds
add
cmpsl
int
shrb
jg
jne
inc
push
xlat
inc
mov
inc
and
push
push
xchg
jbe
sbbb
dec
mov
int
push
push
xor
xor
popf
shll
adc
in
dec
in
xor
xchg
xor
pop
dec
into
dec
pop
test
les
int
das
out
pop
out
lcall
mov
mov
cmp
mov
and
imul
ffree
enter
imul
sarl
mov
test
ljmp
push
lret
xor
lahf
xchg
xor
lods
call
nop
popl
in
push
test
iret
call
adc
in
xchg
xchg
fs
and
dec
dec
cs
push
xchg
jb
gs
xchg
push
aam
into
cs
pop
mov
fdivp
out
dec
xchg
fimuls
and
sahf
outsb
push
sahf
pop
jno
pop
jmp
fstps
or
stos
out
clc
sbb
sub
or
loopne
ret
iret
xor
mov
xlat
mov
dec
ret
fwait
sub
lods
or
and
xchg
out
inc
cld
inc
sbb
jle
addr16
jle
out
pusha
cli
daa
jo
add
pop
and
sti
test
jp
or
push
in
jmp
loop
mov
jecxz
or
iret
jge
ljmp
repz
mov
imulb
push
fcomps
and
inc
xor
add
ja
repz
movsl
ds
ja
jmp
ret
scas
rorb
push
es
fwait
push
push
jle
daa
shl
pop
jns
and
mov
or
pop
or
int3
lret
lds
jg
insb
cmp
mov
and
mov
inc
mov
cmp
mov
popf
sti
lcall
xchg
rcll
jne
inc
jne
lods
cli
pop
insb
dec
dec
xchg
xor
pop
outsl
sarb
nop
aaa
jo
ljmp
addl
sahf
fwait
jae
test
cmp
pop
fsubs
loop
cmp
add
pop
mov
sub
adc
inc
push
jge
cmp
repz
div
out
push
mull
inc
pop
imul
jg
outsl
sbb
insl
mov
inc
mov
mov
xor
ds
pop
sub
in
notl
dec
fdivrl
jecxz
xlat
push
push
inc
imul
jo
mov
loop
push
add
inc
lods
or
je
mov
and
jns
mov
scas
inc
mov
sahf
jnp
pop
rcrl
mov
cmp
xchg
and
and
call
or
push
xor
ds
out
jp
enter
dec
sar
sub
xlat
orb
add
inc
push
xchg
mov
and
stos
das
push
dec
dec
ret
arpl
test
jecxz
push
or
mov
lods
push
xchg
add
push
sub
pusha
bound
mov
mov
loop
dec
addr16
and
roll
push
jle
lods
std
xlat
fsubr
testl
in
movsl
push
mov
xchg
in
jns
mov
imul
mov
xchg
push
fistpll
push
adc
adc
adc
mov
adc
sub
mov
shrb
push
inc
pop
bound
xor
jle
shll
sub
push
test
pusha
push
loope
fnstsw
mov
fisubrl
ljmp
rcrb
xor
xchg
dec
jecxz
or
xchg
aad
jl
cli
push
enter
add
xchg
movsb
arpl
fisttps
cld
std
xchg
lods
and
pop
cmp
add
jbe
cmp
stos
or
lret
inc
xor
loop
cmpsb
das
lcall
jnp
sub
dec
push
mov
add
ret
rcrl
add
mov
xor
pop
add
out
daa
pusha
das
into
and
adc
popf
dec
mov
inc
popa
sbb
push
mov
mov
jo
xchg
lret
inc
mov
ret
push
push
xchg
sbb
bound
push
or
or
mov
repz
adc
sbb
push
mov
aaa
cmp
adc
out
dec
daa
fldcw
pop
mov
sbb
ds
and
pop
sbb
push
pop
add
sarb
push
rcll
arpl
jns
jb
adc
cmp
lcall
dec
aad
sbbb
mov
not
pushf
lret
aad
sub
xor
jle
push
mov
insb
add
mov
outsl
mov
push
daa
lret
or
arpl
data16
int3
push
sbb
movsl
dec
shrb
mov
push
loopne
lcall
cmp
popl
arpl
clc
push
mov
fistps
jnp
rcll
sbb
mov
lock
fdivrl
jbe
in
xchg
xor
push
arpl
cmp
addr16
mov
mov
jp
iret
jp
mov
jbe
jmp
aas
xchg
or
lds
scas
dec
repz
insb
cmp
in
push
jno
cmp
jne
rorw
jge
stc
push
push
mov
pop
adc
mov
and
fcomps
insb
call
test
pop
scas
xchg
cmp
mov
xchg
ret
or
rcr
add
aam
push
cs
dec
loope
sbbb
and
xor
bound
in
movsb
ja
out
jo
mov
rclb
jae
inc
sarb
in
and
int
cmpsl
insb
inc
inc
mov
outsl
xchg
pop
sub
cmc
mov
xor
mov
mov
add
std
push
stc
xor
dec
cmc
mov
sbb
cwtl
and
pop
jnp
jge
add
in
dec
ljmp
push
xchg
dec
incl
mov
mov
push
in
mov
jae
idivl
mov
inc
negb
rorl
js
inc
lret
inc
ret
fs
out
bound
sbb
xchg
sbb
out
out
loop
mov
jge
insl
xchg
push
cli
inc
or
bound
das
mov
movsl
in
dec
sbb
mov
lods
add
xchg
scas
jno
push
test
outsb
inc
sbb
imull
push
adc
repnz
out
and
enter
sbb
test
jle
mov
out
mov
fnstenv
arpl
mov
cmp
jbe
sar
fcoml
cmp
jmp
testb
into
insl
xor
out
pop
mov
scas
arpl
pusha
dec
push
mov
pusha
out
sbb
test
stc
in
xor
int
xchg
rclb
jge
pop
or
push
jae
push
mov
xchg
dec
jbe
mov
idivl
add
cwtl
mov
icebp
sub
add
adc
jns
cwtl
jae
int3
loopne,pn
js
iret
dec
inc
dec
stos
xchg
and
xchg
add
hlt
ja
stc
in
lods
ror
ret
pop
stos
inc
and
rolb
enter
add
out
adc
insl
push
repz
pop
pop
sbbb
push
jns
in
mov
dec
pop
test
imul
add
pop
mov
pop
subl
iret
fsubs
jno
cmpsb
in
jo
daa
dec
push
ja
mov
daa
outsb
hlt
and
mov
push
inc
ss
push
sbb
sbb
movsl
pop
pop
push
or
out
pusha
les
rcrb
ja
out
gs
jg
lock
cmp
xor
in
jne
std
xlat
mov
pop
jecxz
inc
inc
out
fstpt
mov
jno
pop
and
loope
push
lcall
ds
repz
pop
ret
in
and
fstl
jno
popa
and
sub
out
scas
popf
cmpsl
push
int3
jg
ret
data16
cli
jle
aas
sbb
jp
adcl
mov
xor
stc
add
push
jp
dec
lea
pop
imul
sbb
movsl
jp
rcrl
test
mov
out
ja
shl
cmpsb
data16
sub
arpl
ja
in
or
xchg
dec
out
js
lcall
in
fcomps
pop
mov
cmpsb
jmp
cmpsl
mov
add
add
cmc
mov
nop
add
cmp
loope
xor
mov
in
adc
add
gs
test
xor
out
imulb
test
aad
adc
out
icebp
aam
jb
lods
jne
xor
inc
outsl
or
test
in
inc
inc
xlat
sar
push
pop
lock
mov
sub
in
adc
mov
fisubrl
mov
aas
leave
and
push
pop
push
mov
cld
lds
out
stc
adc
bound
sbb
add
mov
adcb
xor
xchg
push
in
push
shll
xor
cmp
jo
cltd
xor
repnz
or
xchg
pop
ret
lret
pop
out
mov
out
xchg
push
pop
mov
insb
inc
rolb
xor
mov
mov
flds
leave
mov
jbe
mov
sti
push
aam
inc
push
mov
addr16
push
rolb
pop
cli
cltd
jno
mov
daa
pop
mov
cmc
cmp
jnp
dec
loope
add
dec
notb
out
or
push
jo
dec
call
cmp
cmp
dec
bound
xchg
nop
fildl
inc
or
push
inc
notl
fwait
cmp
xor
push
dec
js
xlat
ficoml
or
adc
out
movsl
leave
call
nop
sahf
push
sbb
pop
push
or
fsubrs
mov
push
xor
mov
pop
sti
imul
aad
xchg
scas
push
lock
jns
pop
pushf
les
out
repz
out
addr16
mov
adc
push
loop
mov
inc
add
jae
popa
mov
inc
test
push
inc
rclb
loope
add
mov
mov
sub
shll
fldt
xchg
push
shll
jl
enter
cwtl
clc
or
testb
mov
jns
stc
aad
bound
ret
dec
mov
inc
sbb
fcoms
daa
out
scas
ss
sbb
or
adc
inc
shr
imul
cmpl
hlt
mov
int
js
mov
repnz
pop
dec
inc
sbb
xor
dec
cmp
or
push
push
inc
jnp
jg
imul
adc
add
in
cmpsl
sub
aam
fwait
push
roll
jl
push
pop
xor
cmp
fldenv
push
mov
rcll
lock
xor
stos
push
xor
test
dec
mov
cmp
mov
sbb
sbb
mov
adc
push
or
in
pop
inc
adc
push
jnp
pop
sbb
jno
cmp
inc
mov
outsl
in
mov
mov
popa
push
mov
ret
leave
mov
sbb
mov
inc
mov
mov
fnstsw
lcall
adc
mov
dec
or
mov
mov
mov
call
xor
mov
adc
movsb
mov
adc
jo
cmpsl
dec
nop
out
add
sti
add
aam
arpl
add
push
outsl
int3
pop
orl
test
int
jo,pt
xor
fistl
popa
inc
test
iret
es
mov
add
outsl
scas
test
cli
add
mov
sbb
lcall
lcall
add
aaa
adc
notb
pusha
mov
push
pop
cmp
stc
test
mov
cltd
nop
lret
out
mov
test
pop
loopne
inc
xchg
cltd
add
call
lcall
inc
pusha
dec
jne
sbb
adc
fisubrs
adc
cltd
aad
stc
jno
fs
loop
hlt
mov
mov
mov
xor
imul
inc
test
enter
mov
pop
push
movsb
xchg
jne
pop
xchg
inc
pop
ljmp
mov
sub
notl
mov
sahf
lea
add
daa
rclb
cltd
ss
sbb
fs
lods
subl
pop
pop
repz
add
xlat
call
pop
inc
dec
lds
sub
push
mov
xchg
jp
push
xlat
pop
pusha
push
je
pop
outsl
and
lods
out
inc
or
inc
out
and
stos
cmp
and
test
push
add
fwait
clc
xor
jle
mov
js
pop
adc
lret
sti
jnp
xor
mov
jno
aam
leave
pop
addr16
into
pusha
sub
lea
cmp
mov
lods
cs
push
into
cmp
mov
loopne
dec
push
stc
mov
add
sbb
subl
movsb
repnz
scas
shrl
push
sbb
sar
xchg
out
lahf
push
gs
test
into
and
sti
imul
dec
ffree
cs
mov
daa
aas
or
mov
dec
repz
mov
cmpsl
and
loop
dec
fbld
dec
or
push
cs
add
lock
rorl
test
sbb
jb
cmp
sub
fsts
xor
cmp
inc
fisubrs
cmpsl
push
addr16
int
or
and
clc
or
js
and
sti
push
push
add
xlat
push
data16
jbe
fisubs
cld
lret
xchg
jl
fs
test
dec
cmc
dec
or
mov
mov
or
and
shlb
js
cmp
push
nop
mov
scas
adc
jmp
mov
xor
xchg
adc
push
xchg
jne
xchg
adc
xchg
add
and
or
mov
inc
sub
xchg
lret
lret
mov
imul
inc
xor
sbb
jne
notl
scas
and
dec
and
or
aas
sbb
movsb
jmp
or
pushf
fstpt
mov
loop
jb
xor
jle
xchg
loopne
xchg
mul
mov
push
jge
adc
sbb
push
fdivrs
sti
push
mov
out
mov
into
lods
enter
lret
enter
fwait
jbe
movsw
ret
es
js
mov
sbb
stos
in
je
insl
aaa
adc
shl
or
mov
or
out
inc
jb
insb
xor
ret
and
lahf
mov
dec
mov
mov
enter
cltd
popf
in
xchg
cmp
jp
std
imul
rcr
jg
adc
jns
stos
xchg
pop
dec
fcoms
movsb
mov
subb
mov
sub
je
jno
pushf
dec
cmp
cmp
aas
out
mov
call
cwtl
inc
ljmp
jnp
jmp
lds
fmull
cwtl
inc
sahf
fbstp
dec
icebp
out
rcl
sbb
imul
addl
inc
scas
movsb
lret
cmpsl
lcall
int
cmp
jmp
mov
mov
sbb
pop
mov
jle
mov
mov
sbb
gs
andb
mov
aaa
sbb
jns
dec
xchg
stos
sub
adc
inc
sbb
addb
jecxz
lea
mov
mov
fsave
shl
and
aad
inc
push
aad
popa
insb
and
negl
es
lods
or
xor
insl
in
jae
daa
push
out
movsl
dec
fisubrs
cmpsl
add
cwtl
sti
push
in
jle
rcll
stos
mov
mov
push
insb
pusha
loop
mov
sub
mov
mov
ds
pop
xor
stc
push
jle
xor
push
lret
shrb
xchg
repz
test
xor
pop
les
xchg
call
insb
and
stc
notb
push
jno
cmp
push
push
mov
xor
ret
cmp
adc
lret
pop
or
pop
fucomp
push
pusha
ja
inc
push
call
icebp
lcall
addr16
adc
add
push
dec
and
ljmp
loopne
mov
aaa
roll
xor
xchg
push
stos
mov
add
pusha
sbb
mov
jmp
lods
nop
or
bound
sub
js
mov
mov
xchg
in
jne
mov
cmpsl
insl
nop
add
gs
mov
and
mov
xchg
ret
xor
cmp
push
cmpb
add
sub
jmp
cmp
xor
inc
and
test
pop
dec
loope
lock
jl
cmpsl
addr16
lods
leave
out
out
sub
or
lds
mov
test
xchg
in
clc
jge
fsubs
not
mov
fimuls
push
loopne
cmp
cwtl
jg
push
mov
nop
call
inc
lret
fwait
push
mov
or
lds
fisttps
xchg
mov
out
cs
fstps
cmpl
xchg
fldl2t
stos
lods
mov
push
loopne
adc
fimull
add
sbb
inc
notb
sbb
mov
pop
inc
movsb
cli
repz
jo
out
in
xor
mov
enter
insl
fdivrl
sub
xor
dec
pop
inc
jecxz
ret
cwtl
mov
shr
mov
clc
adc
mov
mov
push
jno
fdivrs
or
imul
addb
lea
push
notb
adc
fldz
xorl
xor
xchg
out
fstpl
cmc
push
xor
push
pop
xchg
popa
aas
xlat
pushf
jp
sub
in
ss
push
fisubs
cmpsb
dec
dec
adc
bswap
fisubrs
push
vpinsrw
and
inc
jnp
mov
sbbl
xchg
andb
xlat
fsub
lcall
xchg
mov
je
pop
cli
push
jl
and
popf
push
cwtl
mov
push
jmp
push
cmp
cmp
inc
push
xchg
adc
mov
xchg
fcmove
cmp
cwtl
xchg
fldenv
mov
call
lahf
pop
daa
pop
mov
fnstcw
inc
fistl
dec
adc
adc
adc
lcall
es
mov
loopne,pn
xchg
mov
in
cmp
push
xchg
jns
cmp
xor
rcrb
les
xchg
dec
mov
loopne
pop
adc
inc
bound
pop
inc
mov
aam
ficoms
xor
in
mov
and
jae
dec
cmp
stos
lcall
flds
rolb
dec
es
popf
lods
fildl
mov
dec
sbb
fldcw
enter
mov
mov
cmp
jae
push
pop
popa
mov
sub
js
jns
imul
xor
xor
fs
jmp
xor
jl
add
shll
push
andb
inc
jge
fs
ds
in
cmpl
cmpsl
bound
lods
in
xor
sub
cmp
add
fs
dec
mov
push
xchg
add
sbb
jnp
js
rorl
imul
mov
test
add
movsb
les
jno
inc
cld
fs
xor
loopne
pop
xchg
aas
xor
les
test
stos
repz
in
sbb
mov
data16
lods
push
scas
clc
decl
push
lea
adc
cmp
or
orl
in
cmp
outsb
inc
adc
cmp
scas
dec
outsb
movl
sbb
aad
sbb
adc
pop
sub
out
test
rorb
hlt
lods
addr16
and
xor
mov
pop
fdiv
jecxz
sbbl
push
cmp
xchg
cs
into
lods
scas
jecxz
xchg
sub
repz
fsubrl
xorb
mov
cmp
xor
cltd
push
js
mov
push
fscale
mov
jbe
jno
push
into
mov
in
jg
sbb
lds
cld
sahf
scas
data16
hlt
mov
fisttps
imul
or
dec
ja
inc
imul
test
inc
fstpl
or
test
mov
int3
or
jp
xor
xchg
rcl
and
add
mov
popf
xorb
in
add
mov
shlb
sub
push
lret
mov
and
jbe
lea
std
fstpt
aam
and
jg
out
inc
filds
clc
xchg
jnp
sub
cmpsl
inc
outsb
sub
daa
add
addr16
mov
push
outsb
push
ret
fstpl
push
in
xlat
xor
mov
addl
and
js
jnp
idiv
aas
jg
movsb
int
or
and
int
and
push
and
mov
add
sbb
add
fsubrl
mov
cmp
cmp
push
xor
adc
mov
cltd
mov
lcall
and
pop
fistl
jecxz
in
fstpt
pop
jb
aam
leave
cmp
addb
addr16
sti
xor
cwtl
aad
push
out
bound
fistl
clc
incb
mov
mov
fs
mov
andb
mov
ja
mov
add
sbb
in
mov
lock
dec
ja
loope
loope
sbb
mov
mov
movsl
xlat
mov
push
lcall
add
xor
push
mov
pop
adc
push
cmpb
xor
mov
into
jns
sarl
js
lret
push
addb
jne
dec
xchg
add
mov
xchg
std
dec
jp
mov
cli
ja
adc
ret
call
in
cmpsb
mov
xor
int
test
leave
mov
mov
xchg
sbb
mov
sub
sti
int3
mov
adc
in
sbb
mov
ja
xor
xor
mov
dec
push
ds
push
mov
fisubs
jne
inc
repnz
push
inc
enter
rcr
or
xchg
push
push
sub
cmp
or
test
jmp
xor
inc
roll
xchg
jmp
push
push
jmp
shlb
cld
dec
mov
filds
xchg
mov
movsl
mov
les
push
shr
mov
push
dec
out
mov
adc
add
xchg
sub
pop
sub
cli
xor
xchg
cmp
das
cltd
jle
jle
jle
ss
mov
fsubrl
jg
mov
call
loop
or
stos
scas
xor
ficoml
dec
sti
mov
cmp
popf
and
addl
dec
cmp
push
push
or
lret
mov
shrl
lahf
nop
jno
js
and
sarl
inc
ja
out
push
stc
jmp
cld
ds
fs
inc
mov
mov
and
xchg
shrb
mov
jns
cs
xor
jbe
mov
sbb
xchg
cli
jl
movsb
mov
ds
sub
mov
sub
in
pop
test
enter
push
adc
mov
mov
mov
insb
add
cmp
iret
fwait
in
adc
mov
xchg
subl
inc
insb
inc
mov
pushf
or
and
nop
mov
movzwl
inc
test
push
subb
xor
mov
and
icebp
mov
repz
mov
adcl
xchg
nop
inc
int3
out
push
sub
bswap
jecxz
push
mov
jmp
sub
and
add
pop
sub
jnp
jb
pop
cmpsb
jns
mov
jl
cli
sub
inc
xor
test
int
and
cmp
push
loopne
cmc
pusha
stos
fsts
data16
mov
lahf
divl
adc
or
dec
mov
push
sub
arpl
and
xlat
fs
ds
mov
popa
mov
ficomps
pop
cmpsl
adc
shrl
or
push
mov
mov
js
adc
sub
fnsave
mov
insb
mov
inc
rclb
pop
fildl
ret
xchg
cmpsl
sbb
lret
pop
push
les
push
add
jae
lea
dec
icebp
fcomip
sub
fidivl
int
icebp
das
xor
incl
jbe
and
out
pop
xor
inc
push
jnp
and
test
mull
xlat
mov
lods
mov
xor
push
pushf
pop
jo
mov
into
cld
call
scas
sub
clc
loope
pop
inc
inc
inc
out
cmp
pop
cmp
xor
push
sbb
jb
enter
pop
jmp
sbb
imul
add
inc
cmp
loope
xor
mov
nop
lock
sub
fsubrs
fdivl
js
mov
xor
jp
inc
xor
mov
pop
repz
int3
pop
scas
push
arpl
popf
popa
pop
sahf
orb
ficomps
mov
dec
lret
outsb
adc
sbb
sahf
lds
jno
pop
push
pushl
adcl
mov
or
loope
and
lods
mov
and
out
cmc
push
imul
mov
cmpl
jbe
inc
lds
inc
mov
jmp
outsl
or
push
je
fsubrl
or
mov
gs
lret
xor
push
xchg
sarb
mov
mov
fiaddl
inc
insl
sub
jnp
nop
xor
xor
jle
xchg
mov
lret
mov
test
in
std
je
loop
jecxz
inc
lds
cmp
inc
lea
dec
call
xor
push
push
add
leave
nop
dec
sbb
loopne
incl
sub
idivb
jmp
std
lahf
lds
loop
sub
ficoms
test
add
test
cmp
cmpsl
mov
dec
mov
in
pop
aas
mull
cmc
fimuls
aas
repz
cli
add
movsb
addr16
or
repz
nop
jecxz
mov
inc
subl
lret
or
int
dec
or
fbstp
add
test
sub
clc
mov
xor
mov
inc
push
rolb
cld
aaa
std
cmp
icebp
add
test
push
rolb
stos
ss
dec
inc
enter
test
dec
roll
jne
jecxz
sub
test
jmp
rolb
mov
inc
or
mov
sar
test
mov
ja
and
jb
out
in
ficoms
mov
cmpb
jl
pushf
dec
pop
lods
and
fwait
mov
adc
lret
xchg
xor
icebp
add
sbb
fisttps
sub
out
pop
popa
cmp
and
test
push
inc
push
mov
push
push
dec
imul
cli
jae
or
out
xor
mov
ficomps
es
fists
mov
lds
lods
cltd
mov
xor
inc
loope
add
mov
sbb
adc
jl
ljmp
push
lcall
mov
lods
cmp
scas
mov
sahf
mov
test
mov
test
jecxz
dec
leave
lahf
push
and
mov
and
or
outsl
mov
inc
pop
les
and
mov
mov
inc
mov
sbb
js
add
lret
push
movsl
cs
inc
es
jle
inc
test
aas
bound
pop
iret
out
inc
pop
sub
dec
ficomps
cmovnp
mov
xor
lea
add
sub
pop
xor
inc
inc
and
cmp
mov
lods
push
mov
call
cwtl
out
pop
sarb
sbb
dec
scas
cs
aam
sub
stos
and
sbb
dec
add
popf
aas
xor
mov
and
test
mov
push
jg
popa
arpl
jecxz
mov
and
lcall
sbb
push
push
stos
dec
xor
sbb
test
rcl
in
and
xor
loop
adc
and
enter
xchg
outsb
push
in
popa
dec
sarl
cmp
test
ja
int
sbb
out
pop
and
iret
ss
out
xor
cmp
cmp
in
push
jp
add
hlt
inc
imul
jne
mov
cmp
dec
js
stos
jle
or
shl
inc
pushf
fnstenv
push
xchg
lahf
xor
or
sub
xchg
dec
add
sbb
cmpb
lcall
imul
jo
in
pop
adc
cmpl
xchg
xor
outsb
in
and
pushf
loopne
fdivrs
imul
dec
fucomi
or
pop
dec
sub
push
jb
sub
popa
mov
pop
jo
mov
and
mov
nop
aaa
sub
ds
notl
cs
inc
inc
in
nop
sub
inc
lds
push
test
cwtl
pop
fisttps
mov
imul
mov
lods
dec
dec
cmp
insb
mov
fildl
fistl
loopne
ljmp
cs
iret
xor
sub
dec
push
push
idivl
outsb
call
stc
mov
out
pusha
cli
xlat
add
dec
adc
pop
inc
stos
dec
and
xchg
xor
push
movsb
jmp
adc
jo
or
mov
test
adc
jbe
adc
mov
or
roll
adc
push
lods
xchg
movsl
jmp
jp
fwait
pop
mov
in
ret
dec
stc
push
int
aaa
cmp
inc
cmp
mov
in
andb
mov
fadds
add
sbb
jecxz
out
dec
mov
push
sbb
pop
mov
jae
cmp
in
pop
sub
out
push
push
inc
xchg
mov
mov
sbb
fwait
xchg
lcall
xor
aas
inc
or
icebp
pop
adc
outsl
ret
pusha
aad
aaa
and
and
clc
gs
push
mov
xor
lock
lods
lcall
aaa
add
dec
ljmp
sbb
sub
loop
inc
cmp
scas
gs
int
jle
add
hlt
xor
in
adc
insb
scas
dec
rcr
mov
pop
and
mov
cmp
push
sahf
cmp
lcall
and
lods
inc
adc
or
mov
inc
jae
mov
push
mov
in
xlat
sbb
cmpsl
sbb
jae
imul
cmp
loop
lods
aam
and
clc
xchg
cmp
jmp
jmp
push
ret
mov
cmp
sbb
scas
mov
dec
cmp
sbb
cmp
mov
push
fisubs
mov
sti
es
into
shrb
pop
add
jo
lret
sub
mov
cltd
inc
jno
adc
mov
or
jl
adc
mul
inc
inc
push
sub
int3
xlat
out
popa
cld
test
fs
add
push
xor
pop
lret
aas
push
pop
das
and
xchg
bound
pushf
fstpt
fbstp
testb
adc
dec
xchg
mov
aad
add
rcrb
inc
vshufps
mov
mov
out
cmpsl
aas
adc
aas
or
subb
fs
stos
mov
lret
sub
imul
push
test
ja
test
js
repz
sub
pushf
int
sub
movsl
push
push
and
xor
dec
mov
imulb
mov
xlat
ds
rcll
fdivrp
push
enter
add
xchg
cltd
aam
dec
ud2
jne
push
lods
mov
mov
push
bnd
aaa
js
ror
add
pop
jecxz
sub
mov
mov
movsl
adc
mov
fnsave
test
aad
cmpsb
mov
push
and
pushl
int3
negl
push
and
xchg
mov
hlt
mov
in
aad
mov
mov
mov
pop
inc
js
adc
cli
lea
inc
repnz
pop
mov
xorb
cmpsb
std
xchg
aad
add
ljmp
sbb
int3
cli
out
incl
fdivrp
lods
pop
movsb
or
cmp
push
sbb
pop
pop
in
push
imul
pop
dec
pusha
loopne
fisttps
xchg
bound
xor
mull
xlat
subb
dec
sbb
sti
dec
adc
mul
aam
stos
xchg
push
xchg
fwait
popl
pushf
jg
scas
jnp
fisttpll
dec
test
ret
cmp
pop
test
mov
adc
sub
cli
lahf
sahf
push
fucomi
hlt
and
sbb
in
sbb
xor
in
push
mull
push
movsb
xchg
movsb
mov
push
inc
push
mov
daa
shr
xchg
cld
push
iret
out
es
lahf
pushl
sub
push
ret
adc
and
out
sahf
push
in
lahf
je
add
jmp
sbb
imul
jne
popa
iret
add
shlb
iret
mov
inc
mov
pop
mov
add
and
xchg
or
xlat
add
bnd
jne
and
adc
jmp
outsl
push
adc
out
sub
mov
lahf
push
mov
outsl
pop
test
aam
and
push
xchg
pushf
je
call
clc
pop
mov
ret
push
lods
out
dec
mov
lahf
cmp
lods
push
xlat
fisubl
inc
cmpsl
pop
or
out
push
mov
cld
mov
pop
inc
mov
jl
mov
cs
les
xlat
iret
mov
imul
xchg
xor
jle
daa
loopne
xor
loopne
popf
imul
cmp
push
inc
ret
sub
jle
js
mov
enter
lea
cltd
iret
cld
inc
int
int3
call
xchg
pop
push
lcall
inc
lds
fcmovnu
pop
mov
xchg
sbb
in
push
sbb
jmp
sbb
jbe
bound
adc
ss
mov
enter
and
xchg
xor
adc
imul
loop
xchg
and
dec
bound
dec
sbb
sub
mov
stos
push
sbb
mov
test
sbb
sete
mov
mov
cmp
mov
mov
mov
mov
cld
jp
adc
cmp
jne
xlat
push
cmpl
sahf
pop
xchg
in
and
mov
push
fdivrp
sub
pop
cmp
push
out
sbb
scas
fdivp
pop
adc
xchg
mov
xchg
jns
shll
outsl
xor
mov
imul
sbb
sbb
xchg
test
loopne
sub
cmp
sbbl
iret
ret
cmpsl
mov
sbb
push
arpl
and
cmpl
sub
push
sbb
dec
sub
mov
sbb
inc
stc
lods
into
cmp
imul
inc
sub
loopne
cmp
test
cmp
inc
lds
lret
inc
or
cmp
and
clc
lret
arpl
push
push
xchg
push
rclb
sub
movsl
cmp
popa
dec
ja
movsb
and
adc
es
pop
pop
jecxz
cld
mov
push
mov
mov
push
stos
push
inc
mov
push
outsb
jge
dec
nop
mov
push
lds
icebp
mov
push
adcb
in
xor
sti
sbb
in
mov
cmp
loop
fiadds
cmp
inc
cmp
repnz
inc
jno
mov
js
call
cmp
push
hlt
cmc
xor
pop
pushf
xchg
cmpsl
or
bound
and
push
bound
test
mov
fnstcw
push
dec
scas
jl
sbb
dec
divb
push
js,pt
enter
fidivs
aad
jb
and
or
clc
mov
mov
cmpsb
andl
loope
dec
add
out
movsb
adc
xchg
in
movl
or
jb
mov
fstpl
mov
dec
insl
xor
xor
mov
push
test
cmp
jp
out
inc
dec
aaa
mov
or
icebp
pop
mov
inc
mov
aaa
sub
jne
sbb
jno
out
mov
mov
cmp
and
jmp
cli
out
jl
cmp
mov
ljmp
aaa
mov
arpl
gs
jp
mov
inc
rcl
mov
lcall
mov
add
test
xchg
sbb
rclb
jno
dec
dec
cmpsb
push
mov
mov
sbb
xchg
sub
jmp
test
nop
sti
mov
mov
lahf
add
enter
and
pop
sti
fldt
adc
sub
sub
xchg
add
inc
cmc
xchg
jp
into
jbe
lods
ljmp
fdivs
stos
mov
inc
cwtl
enter
push
addl
sub
pop
add
mov
xor
scas
mov
adc
iret
cmp
adc
test
adc
popa
mov
pushf
nop
aaa
pop
call
push
cwtl
mov
push
inc
imul
das
lods
mov
adc
adc
xlat
jp
mov
loope
mov
add
ds
add
mov
cmp
or
daa
jne
pop
cmp
popf
dec
out
hlt
inc
adc
stos
ss
pop
int
fs
push
jnp
sbb
stos
push
jg
leave
lea
inc
xchg
xor
add
test
and
jmp
cmp
pop
dec
inc
inc
xchg
pop
loopne
jmp
jecxz
out
pop
stos
inc
divl
and
mov
sbb
add
sahf
sub
outsb
or
gs
cmp
inc
mov
test
repz
xchg
pusha
ja
fnsave
xlat
popa
call
in
pop
inc
dec
add
pop
call
jae
stos
outsl
or
adc
enter
adc
test
sbbb
xchg
push
or
sbb
loop
repz
cld
jo
fiadds
popf
cli
int
mov
jo
rorl
fstl
xchg
push
cwtl
xor
leave
sub
mov
je
xchg
out
push
or
jae,pn
push
pop
rcrb
sub
xor
push
mov
sub
or
out
ds
fistl
inc
xchg
mov
out
mov
or
xchg
pop
imul
jge
inc
negb
dec
sbb
pusha
in
mov
lcall
or
in
sub
adc
cli
loope
dec
lods
adc
addr16
mov
enter
loop
and
mov
pop
arpl
sub
daa
or
test
inc
or
pop
stos
cli
insl
lods
arpl
test
push
sahf
push
adc
xchg
or
paddq
in
sahf
cmpsl
scas
dec
xchg
mov
and
sbb
and
test
pushf
shrb
mov
or
push
add
nop
add
imul
jmp
neg
leave
bound
enter
je
mov
xchg
cmp
sar
mov
add
xor
outsl
outsl
les
adc
sbb
out
fs
mov
inc
movsl
pop
xchg
pop
adc
aam
pushf
lds
add
jmp
aad
popa
lcall
sahf
fcom
dec
cs
add
mov
mov
jmp
jge
shlb
dec
pushf
lods
mov
cmp
andb
inc
push
cmpsb
inc
mov
mov
mov
dec
rcrb
andb
imul
jno
call
mov
ds
leave
mov
xchg
iret
das
adc
inc
mov
scas
xchg
sbb
adc
ja
subl
sbb
sub
or
cltd
or
pop
cmp
mov
sbb
xor
dec
push
loope
or
jge
cmp
cmp
xchg
aam
mov
dec
fwait
inc
push
mov
and
jl
popf
pushf
jmp
call
mov
mov
xor
lahf
bound
jge
scas
mov
mov
xchg
insl
lcall
stos
ja
jmp
push
aam
pop
scas
inc
inc
out
ljmp
dec
pop
js
not
add
sbb
lea
rcr
pusha
inc
pusha
adc
scas
push
fwait
pop
sti
pop
and
mov
and
jmp
loopne
pop
and
xor
loope
jg
cwtl
insb
xchg
call
xor
adc
loopne
out
add
pop
into
inc
add
stos
test
addr16
lods
jo
mov
mov
xorb
out
enter
xor
jne
fs
lahf
xchg
loopne
fimull
ja
adc
inc
stos
xor
mov
cld
iret
and
cmp
std
fcomps
rcll
cld
xchg
sbb
mov
lock
movsl
int3
mov
mov
enter
jge
lcall
sar
mov
mov
in
mov
mov
and
or
orl
xor
in
loope
jecxz
mov
cmp
xchg
das
movsl
pushf
ret
stos
repz
in
mov
add
mov
jbe
ds
insb
arpl
mov
scas
xchg
jecxz
pop
psubw
jo
leave
loop
imul
inc
push
push
outsb
push
push
fisubl
in
mov
mov
cmpsb
sbb
pop
popa
pop
jne,pt
or
add
js
add
lret
insb
jg
repnz
jmp
cmc
pusha
in
xchg
in
ret
jmp
jle
ror
dec
shll
or
jae
pop
pop
fildll
inc
adc
cmc
xor
stos
mov
jge
imul
xlat
ret
jo
adc
add
movsb
cmp
in
cs
leave
or
mov
hlt
jg
jns
sub
in
mov
ret
inc
and
add
add
decb
lock
jo
xor
jnp
mov
lods
cli
aaa
sbb
outsb
in
arpl
repnz
dec
or
jnp
mov
inc
sub
out
sub
mov
sti
xor
or
xchg
cmp
orb
jo
iret
push
in
inc
xor
add
or
add
xor
fadds
jbe
adc
push
divl
orl
ss
rcll
xor
dec
or
int3
adc
dec
mov
push
mov
sub
inc
sub
push
sbb
push
pop
push
mov
cmp
test
mov
in
into
testb
nop
cmp
cmp
das
adc
push
lods
xchg
lcall
fsubrs
inc
sub
pop
cmp
xor
jmp
jns
mov
inc
shll
test
iret
iret
push
aam
in
das
mov
xor
inc
aaa
add
popw
sahf
add
xor
xchg
pop
adc
fucomi
sub
enter
rcr
mov
pop
decb
fcmovu
mov
fwait
jne
outsl
add
insb
movsb
loop
andl
dec
icebp
es
in
fstpt
xchg
mov
jl,pn
daa
nop
and
adcb
call
add
xor
adc
push
xchg
test
sahf
jo
repnz
push
adc
cmp
popa
dec
xlat
ljmp
xchg
pop
xor
pop
mov
fsubrl
sbb
or
insl
icebp
dec
sbb
sub
fsubrs
out
adc
movsb
push
mov
fs
ror
pop
les
shrb
push
fisttpl
pusha
cmp
fs
jmp
enter
xchg
sbb
fcmovb
inc
lcall
mov
sub
mov
jo
dec
loop
xchg
pop
jo
sbb
loope
mov
or
divb
jno
xor
sub
jnp
lret
subl
xchg
pop
std
add
xor
xor
sub
test
fdivp
mov
mov
out
add
cs
push
mov
enter
cwtl
movlps
inc
xchg
mov
int3
cli
inc
data16
jge,pn
pop
repz
sub
xchg
sahf
xchg
push
sbb
leave
add
sbb
inc
push
loop
inc
jo
insb
scas
jecxz
ret
lret
or
stc
adc
push
xlat
pop
add
dec
rorl
add
aam
inc
daa
push
test
aad
push
xor
in
dec
or
jbe
pop
ret
sub
repz
and
xchg
fisubrs
lret
stos
add
mov
push
fdivrs
inc
and
pop
inc
jmp
cli
add
mov
jb
pop
loopne
scas
cmc
fwait
mov
mov
push
es
sub
push
mov
jo
cmpxchg
arpl
pusha
fnstcw
sbbb
sub
arpl
adc
shrb
andl
pop
sub
repz
jns
cmpsl
pop
shl
mov
mov
aad
push
mov
out
jns
in
lahf
push
int3
or
mov
jbe
daa
hlt
ss
fstpl
shll
xchg
scas
in
outsl
mov
and
test
addb
mov
mov
xchg
pop
nop
or
and
repnz
out
mov
inc
shll
push
push
cmp
into
icebp
push
push
add
xchg
into
incl
cmp
mov
sub
js
inc
cmp
xlat
inc
or
pop
clc
movsl
outsl
mov
decb
icebp
negl
pop
push
pop
xlat
popf
mov
jne
mov
pop
pop
jo
fsubrl
lods
ret
xchg
xor
jg
or
xchg
fstpl
adc
sti
imul
loop
pop
inc
dec
pop
add
jp
shrb
addr16
ja
cmp
xchg
pop
nop
xchg
add
fdivrp
dec
jg
jp
xchg
bound
mov
pushf
ljmp
jae
sbb
scas
repz
fstps
es
sbb
pop
xchg
lret
mov
dec
adc
gs
push
mov
cmc
ja
pop
dec
jnp
outsl
stc
xor
sbb
imul
dec
inc
mov
sbb
outsl
jbe
mov
stos
jne
in
push
cld
add
sub
xchg
dec
pop
divl
sub
sbb
sbb
sbbl
in
or
sbb
adc
shlb
pop
mov
jne
jae
jge
push
xor
mov
adc
hlt
in
jno
xchg
sarb
push
inc
sbb
fsubr
add
mov
mov
jne
or
xchg
cmpb
addl
pop
in
mulb
inc
mov
scas
lds
fwait
fwait
hlt
pop
test
movsb
movsl
loope
out
or
sub
sub
mov
aad
jecxz
jl
jns
adc
loope
xchg
outsb
xchg
push
sub
push
mov
xchg
adc
pop
es
scas
test
push
das
daa
mov
cmc
ds
cmpsl
or
pop
dec
pusha
mov
fistl
or
je
pusha
lahf
cli
sbb
adc
lods
push
xchg
push
ret
cmpsl
inc
lret
push
gs
jle
mov
jg
jl
loop
xor
push
jae
adc
in
fnsave
dec
lahf
adc
jne
mov
mov
stos
lods
sub
mov
xchg
in
orb
sub
out
in
stos
jb
xor
jge
das
shll
gs
xor
mov
inc
scas
sub
into
inc
jmp
xchg
mov
sub
int3
or
add
pop
leave
xor
mov
add
outsb
adc
pop
mov
aam
mov
jle
ret
jnp
daa
fstl
test
mov
mov
loop
push
dec
iret
inc
outsb
leave
cmp
fdiv
cmp
and
scas
xor
rep
lock
movsl
add
sar
pop
ficomps
clc
scas
cwtl
cmp
xor
ds
lcall
pop
xchg
sarl
pop
jg
cmp
imulb
or
and
sti
sub
mov
dec
cld
mov
adc
cmp
lahf
mov
dec
push
lods
shll
hlt
stc
sbb
jnp
jns
aad
stos
testl
es
jp
push
sub
clc
xor
pop
xchg
enter
insb
xor
pop
mov
push
lock
rcrl
nop
test
in
xchg
xlat
aam
xlat
jl
adc
jo
das
in
cmp
sbb
mov
int
icebp
push
add
mov
jg
popf
lea
neg
mov
out
and
dec
sbb
xchg
jge
xchg
lds
loop
pop
pop
icebp
inc
mov
sbb
lods
nop
mov
in
stos
sub
inc
jns
pop
add
fcompl
xchg
data16
mov
inc
incl
pop
inc
sbb
into
shrb
jmp
cltd
xor
cltd
sub
aam
pusha
ret
mov
mov
add
ret
xor
adc
in
mov
aad
cmpl
dec
xchg
into
pop
mov
dec
adc
dec
test
push
cmpb
jne
dec
jbe
dec
je
sub
cltd
pop
pop
push
rorl
pop
sub
lock
push
hlt
dec
jg
lcall
pop
bound
and
adc
push
sub
jne
sub
lea
mulb
mov
and
negl
inc
int
dec
xchg
sarl
jg
and
divb
push
xchg
loopne
xchg
and
jno
pop
xor
dec
arpl
xchg
lcall
add
push
insl
rcll
or
jle
rolb
cmc
jge
nop
xchg
in
xchg
nop
out
hlt
sbb
xor
add
mov
or
pop
pop
scas
outsl
and
jl
or
pop
mov
push
mov
dec
inc
loop
int
jb
inc
mov
popa
add
fsts
add
inc
ja
stos
and
fwait
pop
fmuls
sub
pop
aad
fs
repz
paddd
scas
or
es
and
into
pop
xchg
xor
popf
gs
cmpsl
inc
nop
push
mov
dec
mov
ljmp
mov
je
aas
jns
das
or
decl
nop
popf
xor
dec
mov
inc
add
jmp
or
xor
cmpsb
mov
cmp
or
ljmp
pop
subl
scas
fcompl
mov
ja
pushf
jmp
mov
loope
sbb
clc
push
lret
ret
cmp
loop
or
or
pop
iret
in
dec
roll
clc
cmpsb
lods
pushf
stc
pushf
fucomp
aas
or
mov
sarl
xlat
or
imul
xchg
rclb
lods
mov
mov
mov
sub
repz
add
movsb
dec
jo
jno
stos
mov
js
sbb
shll
mov
notb
out
cmp
and
loopne
or
andl
sbb
imul
mov
mov
and
sbb
sahf
sub
adc
adc
pop
xchg
and
out
mov
scas
xor
sarl
mov
mov
pop
mov
into
or
fwait
push
ljmp
or
jl
add
sub
mov
shrb
inc
out
sub
addl
cmp
mov
mov
icebp
lahf
cmp
das
fwait
and
fs
loope
std
in
push
dec
xchg
pop
gs
rcrl
inc
sub
sbb
cmpl
dec
xchg
mov
lret
sbb
outsl
push
sahf
sti
inc
mov
mov
fisttps
push
push
jnp
scas
loop
adc
les
mov
adc
sub
add
jb
cmp
loopne
cmp
push
xchg
insl
sub
cmpsl
adc
frstor
jle
jbe
fadds
fistl
sti
data16
mov
mov
fsub
cmp
pop
jle
addr16
add
mov
add
push
inc
sub
sub
mov
inc
xchg
insb
sub
push
test
in
test
je
sahf
add
or
dec
insl
rolb
add
lods
mov
sub
call
insl
sub
mov
out
loope
call
pusha
push
idivb
mov
push
mov
movsl
mov
dec
mov
mov
add
sbb
test
xor
lret
daa
fmuls
cltd
add
cmpsl
mov
jecxz
sbb
sub
pop
add
fsubs
add
push
pop
je
in
imul
push
push
push
and
mov
dec
adc
mov
call
cmp
mov
mov
sbb
xchg
stos
xchg
or
push
add
push
in
lcall
cli
data16
mov
hlt
or
incl
push
addb
mov
jp
inc
and
cltd
adc
popf
or
bound
fmuls
repz
shll
insb
imul
int3
pop
std
std
jle
fsubrl
or
jl
push
iret
test
mov
pcmpeqw
mov
xor
jmp
popf
cwtl
sbb
mov
loop
inc
in
lods
xchg
cmp
bound
jl
clc
sub
jne
cltd
insb
mov
adcl
jb
aas
mov
push
fcomp
int3
mov
inc
out
bound
push
dec
push
push
inc
cld
ja
in
sti
xchg
xchg
jp
dec
movsb
jne
inc
dec
mov
lahf
fistl
sahf
iret
mov
imul
jo
sbb
fs
and
xchg
loop
xchg
push
mov
cmp
push
icebp
pop
out
rol
je
rorl
fisttpl
mov
cltd
ss
inc
enter
jb
mov
jnp
xchg
fsubs
pop
adc
jo
jmp
aas
add
jbe
rcrl
inc
or
push
scas
lods
lods
mov
xor
test
inc
int
icebp
and
and
xabort
int
cmc
bound
ja
outsb
mov
cwtl
int
in
addr16
out
scas
add
clc
es
int3
cltd
ljmp
ds
pop
sti
dec
pop
pushf
add
inc
dec
mov
mov
sahf
outsl
fwait
into
cmp
xchg
pop
cli
lock
hlt
mulb
pusha
gs
stos
in
je
loope,pn
daa
imul
adc
ja
mov
adc
je
dec
outsl
sub
or
sti
fstps
aas
cs
xchg
jle
mov
add
ds
mov
lcall
and
adc
add
out
pop
notl
xchg
out
fstps
rcr
jge
pushf
in
or
loop
sub
and
xor
lock
call
mov
cmp
mov
and
in
add
sub
inc
aam
scas
fiaddl
test
pop
sqrtps
rcrl
rorb
leave
fisttpl
gs
js
inc
scas
imul
ffree
fisttpll
jne
and
nop
xor
lock
add
insb
jp
popa
out
xchg
sub
inc
inc
mov
scas
cli
iret
test
jmp
popf
mov
xor
add
repz
inc
dec
or
lea
sbb
adc
add
add
jg
jnp
insb
pop
dec
scas
sar
out
loopne
loop
cmpsb
xchg
mov
test
dec
push
sbb
scas
jg
xchg
cld
jns
mov
push
loope
xorl
mov
pop
test
pop
scas
leave
mov
dec
sub
andps
data16
pushf
sbb
push
jnp
fsubs
clc
loope
std
outsl
xor
and
in
or
mov
sbb
cmpsb
int3
fistl
add
dec
pop
add
push
inc
mov
add
rcrl
pusha
or
jmp
lahf
int3
imul
dec
push
rcll
iret
loopne
inc
add
popf
xor
cwtl
in
outsb
ds
dec
xor
loop
sbb
pusha
xchg
jp
sub
xchg
push
and
add
into
pop
push
mov
ret
jp
sbb
cwtl
xor
fwait
or
add
mov
call
add
dec
mov
je
xor
dec
push
in
xchg
cmp
sbb
lret
loopne
cmpl
mov
orl
fistps
sub
sub
movsl
fcoms
fnsave
mov
enter
mov
jecxz
and
ret
mov
pop
into
cvtdq2ps
mov
or
jg
in
jge
int
clc
xor
or
sub
add
out
shrl
jae
arpl
fldcw
cmp
lcall
test
mov
sti
adc
frstor
rcl
sub
lds
jecxz
sub
mov
ret
pushf
dec
sbb
fdivl
scas
mov
or
rorb
int
repnz
ret
mov
nop
daa
sarb
pop
add
jmp
popf
int3
dec
push
and
and
mov
or
xchg
jecxz
lret
out
aaa
xchg
jl
invd
rcrl
popa
add
cmp
hlt
push
sub
xchg
clc
push
popf
fildl
mov
lret
test
cmp
sub
pop
mov
lock
xor
outsb
fistpll
xchg
bound
xchg
push
imul
mov
sbb
cmpsb
imul
and
flds
fsubs
xchg
or
loope
imul
jbe
inc
add
daa
arpl
inc
je
repz
mov
dec
adcl
cmp
xor
jo
adc
es
mov
and
push
or
cld
je
and
mov
mov
push
fwait
mov
fisubs
into
nop
je
imul
pop
lret
in
xor
xor
outsl
popl
xor
push
scas
add
sub
push
dec
lret
loop
mov
mov
jns
stos
mov
sbb
jmp
xchg
mov
inc
xchg
or
mov
adc
in
stc
pop
sub
cmp
addb
popa
lahf
add
mov
lds
in
rcrl
pop
es
hlt
inc
lock
insb
mov
cli
jl
xchg
call
cli
rclb
jmp
sub
out
lret
or
mov
rcrb
and
sbb
adc
imul
xchg
mov
inc
mov
adc
movsl
xor
or
rol
sub
pushf
sbb
lods
add
leave
stc
cmp
adc
lock
fwait
and
sbb
rolb
mov
jmp
and
sti
inc
lahf
lahf
mov
sbb
xor
movsb
mov
mov
int3
cmp
xor
das
pop
popf
leave
ss
mov
lret
movsl
into
aad
rcrb
sub
mov
loop
fisubs
xrelease
mov
pushw
mov
cmp
ja
adc
lret
or
sub
nop
and
pushf
cmp
lret
mov
inc
sahf
pop
xor
imul
out
pushf
aas
test
aad
mov
xlat
lahf
dec
nop
test
rcrb
out
fs
imul
pop
xchg
xor
add
jecxz
hlt
sbb
out
cmp
pop
jo
push
jmp
mov
mov
dec
jmp
lea
in
jne
xchg
pop
lea
mov
rcrl
inc
mov
push
pop
into
xchg
das
sub
imul
sbb
into
rcrb
and
fstps
iret
bnd
inc
insl
les
iret
outsb
dec
cmp
pop
orl
cmp
adc
jno
add
wrssd
nop
xchg
pop
dec
test
fs
push
clc
xchg
inc
mov
cmpl
aad
std
out
sbb
lret
loop
outsl
sti
das
ljmp
repz
in
xor
inc
jb
sbb
lahf
xchg
sbb
rcr
incl
mov
mov
dec
cld
xchg
call
mov
xor
add
xchg
dec
lret
sbb
adc
push
mov
adc
pop
cmpsl
push
pusha
xor
mov
and
xor
mov
mov
iret
sbb
xchg
nop
jge
sbb
fisttps
pop
js
jae
mov
jno
sub
dec
mov
cmp
dec
fdivrs
dec
int
jbe
cmp
movsb
pushf
test
mov
pop
mov
std
or
movsb
sub
scas
pop
clc
push
mov
cs
test
imul
iret
movsb
jno
push
xor
ja
sarb
call
cmpsl
jnp
sbb
loop
push
mov
push
sub
ret
lods
and
xlat
mov
rcrb
xchg
push
mov
iret
lea
push
xchg
push
mov
add
arpl
jae
in
dec
psubsb
insb
or
or
sbb
outsl
ss
cltd
adc
addr16
lods
pminsw
push
xlat
mov
push
mov
ret
repz
push
andb
sbb
movsb
mov
push
jae
aaa
test
xchg
adc
sbb
push
sar
je
and
mov
cmp
test
sahf
adc
scas
pop
ja
xor
jbe
mov
in
sbb
push
pushf
notrack
and
xchg
popf
add
and
xchg
or
inc
mov
pop
scas
xchg
mov
in
cmpsb
sbb
orb
adc
xchg
jae
out
shrb
je
cmp
in
pop
adcl
jb
insb
xlat
cmpb
dec
lds
lods
shrl
cmc
mov
xchg
mov
outsb
mov
outsb
or
cmpsl
imul
xlat
jnp
sbb
mov
add
push
mov
insl
cmpl
ret
pushf
jno
cld
xlat
dec
sbb
fcoml
fcomps
xor
jecxz
inc
mov
sub
in
decb
fnsetpm(287
call
fildl
insb
les
mov
movsl
cmp
inc
dec
mov
test
jge
pop
cwtl
outsl
cmp
sbb
and
mov
cmc
jmp
cmp
push
gs
mov
dec
pushf
adc
mov
popa
cmp
mov
lock
jecxz
mov
fcomps
push
aas
fisubrl
jecxz
ficoms
mov
add
pop
xor
add
pop
or
mov
fisttpll
xchg
mov
jmp
data16
testl
cmpsb
mov
cmp
adc
cmp
inc
mov
xchg
test
lcall
frstor
xor
je
fldl
jmp
lret
mov
imul
dec
lock
dec
or
pop
push
out
jge
mov
cltd
jecxz
inc
js
sub
stc
in
popa
cltd
addr16
mov
jb
mov
mov
cmpsb
mov
fimull
jo
jnp
inc
aas
pusha
mov
icebp
or
xchg
outsb
and
pop
cwtl
repz
push
loope
lods
pop
cmc
lcall
xor
iret
add
arpl
jo
je
mov
scas
cmp
mov
decb
int
or
pushf
cmp
into
adc
inc
in
inc
ljmp
lds
idivl
sti
sub
pop
jbe
fdivl
dec
out
aaa
xchg
push
movsl
ret
imul
in
pop
jmp
fwait
mov
enter
fcmovnb
jne
fbld
out
inc
fiadds
mov
dec
jae
sti
lock
std
jnp
xchg
cmpsl
xor
out
and
xor
mov
fldt
lock
mov
jecxz
outsl
sbb
shlb
sub
lods
cld
add
mov
sbb
mov
mov
push
dec
xchg
mov
dec
mov
xor
mov
lahf
mov
imul
sbb
jg
or
andb
shrb
mov
dec
outsl
dec
mov
pushf
in
dec
cmp
shl
lods
lea
into
call
xor
add
hlt
xor
cmpsb
int
rcl
lods
call
test
jg
mov
jge
lret
xor
outsl
mov
fwait
sbb
mov
ret
adc
pop
insb
mov
xorb
cltd
adc
mov
mov
pop
bound
xchg
xlat
cmp
xlat
mov
mov
cmpsl
lds
fs
fwait
jecxz
push
fstpt
push
add
jb
icebp
stos
xchg
xchg
mov
mov
inc
xchg
adc
nop
lods
xchg
and
movsb
scas
rcr
inc
ljmp
push
xchg
xchg
lret
cmc
add
pop
gs
dec
mov
push
cmpsl
clc
mov
sbb
popa
pop
inc
jg
in
jae
push
add
jge
sbb
adc
hlt
xor
call
imul
push
jbe
jg
cltd
lret
cmc
dec
in
fimull
fisubrl
mov
fcoms
sarb
ret
idivl
lock
jp
lea
sahf
fimull
push
out
pop
sub
fcmove
sahf
mov
mov
pop
rcll
test
cmc
js
pusha
add
inc
aas
aas
test
jae
cmp
lods
in
mov
xor
outsb
bound
shl
and
jnp
fdivl
jb
sarb
push
lret
mov
leave
outsl
shr
lock
stc
inc
loopne
cmp
dec
mov
xchg
pushf
popa
fwait
adc
test
hlt
mov
out
bnd
scas
and
sbb
imul
lcall
jno
je
stos
pop
rep
mov
pop
sbb
pop
xchg
xor
pop
sbb
movsl
ret
xchg
dec
cmp
or
imul
xor
loop
xorl
pop
cmpsb
dec
jb
mov
mov
or
icebp
arpl
pop
cmp
loopne
adc
repnz
adc
sub
clc
jbe
jle
mov
pop
jns
inc
or
dec
repz
pop
inc
vcvtsi2ssl
sbb
add
cmp
xchg
xchg
mov
in
mov
add
notb
nop
sbbl
pop
dec
in
sbb
xor
sbb
movsb
xchg
in
mov
mov
sbb
lret
rol
and
cltd
into
mov
outsl
push
adc
or
sbb
pop
xchg
divb
clc
lds
pushl
jecxz
dec
sti
mov
or
or
inc
and
push
cmpsb
or
repnz
and
das
mov
ljmp
in
mov
inc
xor
push
in
sub
outsl
adc
sub
subb
movsl
cmpl
push
imul
mov
out
pop
loop
fisubrs
and
out
cmpsl
les
ds
cld
cmp
rolb
or
movsl
fstl
xor
cmp
xchg
sub
cmp
jb
add
pushf
mov
sar
and
fisubl
sar
jne
cmp
jecxz
sub
add
movsl
shll
fs
jb
scas
dec
movl
stc
movsb
insb
jge
jno
sub
lock
jo
rorb
mov
inc
mov
push
push
stc
xchg
sbb
into
rcrb
outsb
push
fcomps
cmpsl
cmc
fildll
int
cmp
pushf
jb
rcrl
cmp
ret
psrld
jb
dec
mov
ret
lret
pop
xlat
fbld
loopne
sbb
and
xchg
pusha
pushf
or
bound
stos
and
xorl
inc
packuswb
std
dec
pop
cmp
xlat
mov
lods
movsl
or
test
cmp
jo
daa
jmp
adc
xchg
sbb
xchg
cwtl
adc
inc
aas
and
push
sub
daa
pop
inc
incl
sbb
ror
dec
int
mov
jae
hlt
mov
call
cmpsl
test
loop
rol
mov
es
dec
js
adc
or
filds
or
jae
or
shlb
inc
sub
pop
add
cld
nop
test
jge
lds
out
cmp
jae
lods
xor
and
sbb
mov
cmp
hlt
fstps
adc
testb
je
mov
sub
adc
jno
rclb
xchg
cmovae
rcl
ds
rorl
inc
stc
pop
inc
aam
jne
lcall
idiv
insb
mov
mov
test
es
into
mov
jecxz
push
jmp
pop
lahf
sub
mov
fidivl
dec
cmpl
sbb
sbb
das
pusha
sarb
sub
push
daa
enter
cltd
ja
mov
and
cli
mov
andb
mov
inc
jo
mov
add
lahf
ljmp
dec
jae
sub
cmc
ds
mov
adc
sbb
adc
rorl
dec
sti
rorl
aad
xlat
dec
jns
add
mov
popl
xchg
xchg
adc
dec
fistps
jno
push
shll
addr16
or
sbb
xchg
xlat
push
ret
cmp
cli
jno
adc
lahf
fsubl
insl
sbbl
inc
or
mov
xor
insl
cmp
aaa
in
fsubr
cmpsb
and
or
ss
cmp
xor
mov
ss
int
subb
addr16
or
das
in
insl
and
mov
leave
mov
mov
nop
lahf
in
outsb
sub
mov
or
in
aaa
movl
inc
mov
das
and
inc
or
and
das
lret
cmp
dec
sub
insb
repz
dec
fcmovnb
stc
dec
pop
out
mov
mov
sub
pop
sar
subl
neg
xchg
arpl
subb
xlat
call
scas
mov
dec
test
sbb
mov
xor
outsl
cmpl
jg
mov
not
push
cli
lret
and
pop
sti
inc
lret
xchg
lods
mov
scas
xchg
in
sbb
lds
adc
jne
jmp
mov
sti
xchg
pop
mov
or
and
inc
loopne
adc
xchg
fmul
cmp
xor
mov
int3
movsl
and
add
sbbb
scas
mov
sbb
mov
negb
push
cwtl
sahf
sub
inc
sub
lcall
scas
mov
pop
js
xor
jecxz
mov
mov
xchg
repz
mov
sub
imul
mov
ret
push
decb
lahf
ljmp
sti
mov
push
mov
frstor
dec
pop
mov
sbb
into
mov
push
push
fwait
sahf
add
outsb
pop
dec
or
or
jg
adc
push
jb
pop
add
daa
std
dec
movsl
repnz
lods
sub
pop
fidivrs
mov
mov
ss
xor
pop
aad
lock
inc
dec
movsb
movsl
jb
shl
dec
pop
add
jg
out
and
sub
and
pop
repz
cmpsb
outsb
jle
enter
daa
scas
into
test
add
push
popl
inc
lock
add
movsl
loope
push
test
pop
aam
gs
aaa
push
aad
adc
das
in
repz
in
mov
mov
rcrl
push
cmp
pop
mov
imul
aam
jmp
mov
idiv
testb
xor
xor
insl
lods
mov
sahf
mov
in
outsb
xor
int
test
add
into
xor
lds
cmpsb
outsb
jns
and
in
mov
in
xor
xlat
aaa
and
mov
xchg
ficompl
push
arpl
lret
dec
fsubp
add
icebp
ffree
push
adcb
cmp
cmpsb
clc
popa
jnp
lods
and
out
ficoml
jnp
lods
mov
sbb
dec
dec
cmp
lds
loopne
jb
testb
clc
fdivl
xchg
fcomip
pop
fwait
das
mov
movaps
rolb
js
icebp
fistpll
outsb
loope
mov
repnz
cwtl
fadds
icebp
cmp
gs
and
lods
lcall
loopne
inc
sbb
xor
xor
mov
adcl
into
outsl
enter
cmc
sub
mov
cpuid
test
mov
sub
adc
daa
aas
in
add
into
test
testl
fs
jbe
mov
pop
cmp
add
fistl
mov
pop
jo
shlb
dec
jne
out
dec
popa
add
rcl
fistpl
dec
lcall
rolb
pop
inc
dec
arpl
andb
or
mov
loope
mov
fdivrl
fmull
mov
subl
sbb
mov
lods
loope
push
pusha
dec
jecxz
pop
mov
pop
sbb
adc
xchg
inc
push
into
cmp
adc
ss
push
jbe
inc
and
inc
in
push
mov
inc
pop
adc
adc
sbb
sub
jns
jo
mov
pop
mov
outsl
test
mov
fistpl
adc
push
rcrb
in
pusha
popa
popf
dec
xchg
out
imulb
scas
dec
outsl
std
mov
loope
push
mov
mov
imul
sbb
fisubrs
add
ss
int3
mov
lds
sbb
jb
xor
in
shr
test
add
je
push
movsb
inc
fadds
push
sbb
xor
outsl
mov
mov
dec
sub
fcoml
or
cmp
scas
push
sbb
cs
mov
fnstenv
jns
jno
adc
cmp
cmp
hlt
push
aad
jnp
outsl
push
clc
int3
cmpl
inc
int3
push
sub
xor
leave
scas
pop
push
cs
add
sbb
hlt
jg
push
xchg
sub
push
test
jp
negb
push
dec
movsl
aam
stc
int3
dec
popf
mov
push
sti
es
cltd
fidivl
mov
xor
adc
push
movsl
xchg
mov
fwait
mov
vcvtsi2sdl
sub
push
in
data16
mov
imul
negl
inc
adcl
add
mov
ljmp
pop
insb
loopne
and
cmpsl
or
cmp
jge
xor
mov
sbb
xlat
sub
mov
movsb
lcall
dec
push
pop
aam
pusha
data16
mov
push
fs
jmp
mov
jg
scas
add
push
test
outsl
cld
daa
out
push
adc
fcoml
adc
inc
xchg
pusha
das
enter
jns
jl
lahf
nop
scas
insb
loop
sbb
cli
cwtl
and
dec
andb
and
jno
and
jae
arpl
dec
sbb
cmpb
insb
jmp
iret
test
cmpl
sbb
pop
and
xor
mov
insb
loope
gs
mov
cmpb
xor
xchg
fmuls
cmpsb
mov
lock
div
ss
js
xor
int3
cmpl
scas
ljmp
add
mov
jb
sbb
jbe
adc
shlb
push
nop
cmp
jnp
sub
pop
lds
stos
add
mov
mov
and
imul
mov
xor
xor
cwtl
daa
mov
shlb
fwait
adc
lret
out
aad
push
adc
pause
stc
inc
add
xor
fsubr
ror
pop
xchg
push
ret
sti
and
outsb
mov
jbe
fcomps
mov
mov
fstl
dec
push
js
or
decb
push
notl
movsbl
pop
arpl
mov
xchg
cmp
cli
cmp
push
mov
mov
pop
aaa
loop
mov
cmp
stos
mov
or
xor
push
inc
mov
add
add
outsb
push
adc
xor
mov
popf
mov
das
pop
pop
xor
push
int
cld
pushf
jecxz
cmp
clc
xor
dec
dec
call
movsl
pop
jecxz
mov
ret
cmp
adc
dec
pop
fcoms
push
shll
jo
add
cmp
jmp
sbb
jl
out
push
mov
shl
cmp
scas
cmpsb
mov
jne
cmp
jns
adc
pop
sub
mov
lea
pop
mov
jno
mov
das
lahf
imull
add
popf
inc
cmp
fadd
xchg
lds
orb
sahf
pop
mov
xor
xor
jecxz
jl
pop
es
push
icebp
cmpsb
pushf
fldl
setns
inc
adc
lods
test
xchg
stc
or
cmpb
mov
jae
test
xchg
mov
jbe
out
inc
jmp
ftst
add
push
inc
mov
scas
test
pop
mov
jae
jmp
add
outsl
sbb
or
cltd
arpl
notl
test
lock
xor
cmp
and
ja
orb
das
mov
data16
or
fnstcw
insl
fwait
xor
ds
mov
mov
or
sub
dec
mov
out
lret
pop
mov
push
and
cmp
mov
sti
adc
flds
xchg
notl
mov
imul
rcrb
and
ds
sahf
fstl
push
cli
insl
mov
test
fisttpll
jne
imul
add
orb
ljmp
mov
mov
scas
pop
nop
addl
sbb
jb
lret
and
inc
js
jmp
out
adc
popa
mov
into
arpl
shrl
jnp
out
fcomip
and
arpl
push
mov
inc
or
fcomp
pushf
imul
pop
inc
sbb
lcall
stos
jns
cmpsl
cltd
xchg
ja
in
mov
mov
in
cmpsb
mov
inc
dec
mov
sub
pop
pop
ds
cmp
cwtl
jmp
rorb
fnstsw
insl
in
scas
test
xchg
test
cltd
and
inc
lods
xlat
fistps
sbb
test
push
arpl
lds
mov
xchg
xchg
out
fnsave
inc
and
adcb
jbe
jno
inc
dec
fisttpl
jp
inc
add
jl
pop
mov
jp
loopne
stc
adc
jecxz
inc
xchg
inc
call
les
adc
sahf
or
je
jb
add
push
cltd
dec
jns
jno
or
xchg
jmp
leave
jbe
bnd
subl
cmp
xor
or
nop
add
iret
adc
out
inc
stos
mov
cmp
push
or
out
rcr
iret
jecxz
mov
cmc
mov
movb
mov
je
or
dec
pop
xchg
out
sbb
mov
sub
xchg
mov
and
jp
cmp
rorl
mov
aas
mov
inc
rclb
ljmp
cld
je
jmp
dec
sub
add
add
lret
and
xchg
call
dec
lret
decl
mov
cmp
in
mov
loope
dec
sarl
ss
test
test
cmp
cmp
pop
push
dec
or
adc
pop
lret
out
ds
outsl
nop
outsl
pop
int3
jle
mov
jb
cmp
xor
lods
sbb
call
repz
mov
cmpsb
mov
mov
cmp
inc
pop
roll
fdivrs
pop
scas
stos
xorb
xchg
dec
jmp
leave
out
js
ljmp
cli
sub
sub
mov
cmp
dec
fnstenv
mov
xchg
into
aam
and
pop
inc
std
add
xor
and
es
frstor
and
mov
mov
xchg
mov
sbb
es
sub
mov
inc
aaa
push
dec
test
jecxz
leave
ror
imul
insb
adc
pop
loope
jae
pop
inc
imul
jno
pop
pop
cmp
and
xchg
ret
inc
outsb
mov
lcall
dec
stos
outsw
or
fldl
sbb
fstpl
lret
int
mov
aad
loopne
inc
aad
or
clc
insb
mov
adc
and
add
out
shl
push
insl
imul
pushf
pop
ljmp
dec
js
lret
dec
dec
push
sbb
repnz
stos
movsl
sbb
leave
xchg
lahf
ja
or
and
int
mov
mov
inc
or
outsl
sar
fwait
pop
int3
aam
popf
sbb
jbe
int3
dec
jecxz
inc
pop
xor
arpl
mov
dec
and
nopl
dec
and
or
in
mov
sbb
and
xchg
adcb
int3
dec
test
xchg
pop
out
xchg
stc
pop
push
imul
cmp
adc
add
cmpsl
sti
jb
imul
pop
or
ja
mov
mov
outsb
outsl
gs
dec
insb
out
test
cld
inc
add
out
sti
shlb
fcoml
add
xor
cld
xchg
gs
xchg
jo
iret
xchg
lret
ss
call
cmc
jns
aam
and
xchg
popa
or
repz
jno
mov
roll
push
stc
stos
into
dec
mov
test
das
add
cmpsl
sti
cmc
or
xchg
jns
icebp
out
ja
push
push
jo
nop
lcall
mov
aaa
cmpsb
mov
in
scas
jecxz
adc
mov
rorl
add
cmpl
jae
adc
cmp
outsb
lret
add
dec
icebp
repz
adc
lret
ret
mov
and
xchg
xchg
mov
jg
je
out
mov
pop
jle
imul
nop
jp
out
out
push
mov
mov
xchg
fst
sti
cli
adc
pusha
mov
jno
mov
xchg
mov
cmp
cmp
or
lock
cmp
cmpsl
addr16
repz
mov
jbe
mov
push
pop
cwtl
pushl
in
movsl
sbb
jb
repnz
push
xchg
mov
jns
lret
hlt
jmp
lds
mov
mov
stos
enter
or
repz
xchg
inc
mov
outsl
cmpsb
fists
cmp
in
inc
cmp
aad
int
out
mov
xchg
test
imul
and
repnz
rcll
pop
lret
cmp
mov
test
xchg
push
loope
or
mov
test
cwtl
cmpsb
in
xchg
hlt
lcall
adc
testb
loop
jecxz
fsubl
das
lds
sbb
xchg
pushf
iret
adc
repnz
xor
push
jge
mov
adc
cmp
rcrl
mov
mov
mov
adc
into
adc
pop
aad
mov
ss
pusha
pushf
mov
jb
xchg
aad
testb
repz
popa
out
je
iret
mov
rclb
mov
mov
es
cmp
pop
mov
call
lods
fistl
insl
ret
pop
push
push
sub
shll
or
and
xchg
stc
mov
add
inc
push
adc
sbb
mov
sub
fwait
jno
xor
iret
je
xor
fnsave
stos
mov
fcomi
dec
push
fisubs
dec
popl
shl
pop
insb
pushf
cs
ret
rcr
loope
int
sub
pushf
movsl
or
mov
dec
scas
cmp
sti
cwtl
movsl
popf
bound
into
lods
adcl
cmp
insl
jno
dec
lahf
adc
lock
add
push
jns
arpl
loope
and
jge
scas
push
lea
adc
sub
out
jmp
and
xorb
inc
and
leave
mov
inc
idivl
lds
mov
jb
jecxz
sti
insl
add
xchg
lock
sub
add
ja
cmpsb
lret
push
pop
fsubl
inc
rclb
jbe
lea
sbb
int
inc
push
subl
push
cmc
imul
jp
inc
push
xchg
lea
dec
fdivr
ss
pop
cli
adc
mov
cli
mov
test
mov
testl
sub
cmp
mov
xchg
or
pop
xchg
in
add
fs
dec
nop
adc
in
inc
cmp
or
xor
cltd
clc
or
sbb
mov
inc
mov
xor
pop
daa
mov
push
std
xchg
out
add
inc
jno
mul
dec
dec
cmp
nop
xchg
jno
push
pop
repnz
into
sbb
dec
mov
jl
les
insl
movsl
sbbb
bound
idivl
scas
jmp
pop
xlat
cmp
push
adc
into
jp
add
aaa
popl
xchg
xchg
fnstenv
pop
xor
jne
mov
das
add
jae
xchg
inc
loope
icebp
fcomip
insl
push
cmp
adc
add
ja
mov
in
xlat
jmp
cmp
push
pop
sbb
fwait
aas
jo
push
inc
push
rcl
mov
fs
sarb
addr16
daa
pop
ss
in
mov
pop
or
mov
dec
test
scas
enter
loop
fcomps
push
iret
inc
sbb
stos
jae
inc
ljmp
jb
inc
xchg
cltd
mov
ja
daa
sbb
or
and
push
lret
scas
imul
fcomp
fildl
mov
inc
mov
mov
popf
mul
jno
mov
cwtl
orb
inc
mov
jp
in
inc
call
sub
pop
in
inc
push
call
mov
cli
rclb
mov
xor
lods
pusha
dec
jb
mov
fnstcw
jmp
sbb
cmpsl
arpl
test
jb
or
jg
mov
in
in
sti
pop
mov
pushf
xor
jne
cltd
repz
je
xor
lea
loopne
push
lock
cmpsb
push
sub
inc
sub
xchg
ret
push
addl
mov
hlt
aad
test
scas
jle
insb
push
xcrypt-ofb
cmpsl
jmp
aas
fcom
popa
or
int3
sbb
notb
sub
divb
insb
add
in
pop
sub
push
jae
dec
jo
or
xor
rorl
fmull
lods
mov
cmp
repz
adc
insl
loop
hlt
popf
sub
xlat
in
and
sub
adc
fdivr
jno
out
push
sbb
lahf
xor
pop
fsubs
add
out
stos
cltd
pop
add
mov
lea
inc
out
pop
mov
sbb
inc
scas
insb
lret
pop
fwait
add
imul
aad
xchg
mov
repnz
fcmovb
jae
test
fsts
jb
ret
fmuls
cli
sbb
jb
adc
inc
inc
xchg
mov
fwait
insb
pop
push
ljmp
xor
ret
push
jle
xchg
mov
adc
ret
ret
dec
xchg
std
xorb
mov
jnp
xor
push
out
cmpsb
cmp
lahf
mov
mov
sub
lahf
pop
mov
pop
sbb
mov
sti
dec
push
mov
out
dec
mov
xchg
lea
push
call
pop
xor
adc
push
pop
addr16
les
push
xor
mov
mov
cmp
lret
popf
add
rclb
rcll
mov
sub
movsl
in
mov
cmc
xor
xchg
add
xchg
dec
mov
jmp
jno
ret
outsl
xchg
mov
lret
fdivl
or
pop
lret
sti
in
rclb
adc
pop
adc
pop
xchg
cmp
pop
shll
inc
mov
outsb
cmp
in
add
fimuls
js
pop
sbbb
mov
mov
sbb
sub
cmp
and
imulb
mov
add
mov
sub
inc
movsb
xor
rorl
scas
and
xor
test
ja
arpl
cmpsl
ret
sbb
pop
cmp
jp
lds
xor
jb
jecxz
xor
stc
xor
dec
les
jp
stos
xlat
scas
loope
sbb
das
mov
cltd
stos
in
cwtl
stc
mov
dec
or
sbb
sub
int3
out
push
fwait
pop
cmp
pop
inc
mov
lock
jecxz
pop
mov
insb
gs
aas
imul
jnp
pop
sahf
mov
mov
les
pand
dec
mov
cltd
inc
ss
or
push
jb
adc
jo
in
std
aad
add
sub
xchg
fcmovbe
and
mov
pop
push
jbe
fistpll
xchg
add
ljmp
jmp
push
cmp
mov
cmp
xor
pop
nop
mov
xchg
and
push
inc
pop
movsl
adc
mov
dec
scas
int3
xchg
jnp
movsb
je
aam
pop
xchg
mov
imul
xor
jle
stos
mov
je
mov
in
lds
cmc
je
fwait
in
cmp
in
in
cmp
pushf
popf
xchg
push
mov
cs
xor
test
inc
or
movsl
inc
xchg
add
mov
cmp
iret
loop
out
cmp
popa
in
xchg
fcoms
pop
add
jp
in
add
inc
or
fwait
out
pop
push
pop
sahf
stos
push
lret
movsb
adcl
inc
jno
shrl
pusha
mov
sub
stos
mov
jl
add
xor
sbb
cmp
jne
in
cmp
loope
jecxz
xor
aas
sub
sub
mov
add
and
sub
xor
sub
add
pop
insb
leave
mov
add
lea
scas
pop
jecxz
inc
sbb
std
push
push
mov
pop
jp
jmp
jne
fs
inc
daa
lods
jns
mov
sub
les
inc
xchg
xchg
push
cmp
adc
roll
push
test
aas
add
lret
insl
mov
in
jne
out
mov
cmpsl
andl
mov
imul
in
push
xor
cld
sub
dec
add
jns
cmp
add
push
lahf
int
cltd
mov
dec
jnp
test
nop
jb
xchg
mov
lea
pop
idiv
fldenv
subps
ss
and
and
mulb
push
movsl
sub
into
xor
push
in
dec
xor
jo
ret
iret
cli
pushf
out
insl
lods
imul
aam
cmp
sub
mov
sbb
loopne
mov
mov
sahf
aaa
jno
jmp
xchg
add
arpl
cmp
and
add
icebp
sti
fnsave
inc
push
lods
jo
nop
movsb
and
mov
xchg
and
jae
add
out
pop
adc
mov
and
clc
imul
rep
pop
push
data16
xchg
pushf
push
shl
aam
inc
popa
adc
mov
pop
sete
inc
aam
cmp
xor
or
sub
cmp
sahf
fdivrs
and
sti
sti
and
mull
mov
outsb
and
mov
insb
mov
and
xor
cs
mov
rcrl
pop
xor
xchg
movsb
push
rorb
and
bound
stos
ret
dec
ret
jmp
dec
fsts
and
mov
inc
or
lods
das
daa
cmp
jae
adc
add
xchg
lea
mov
scas
jno
rorb
cltd
xor
lods
sub
loop
arpl
sbb
sbb
cld
repz
adc
xchg
cs
or
aaa
sub
aas
ffreep
ja
xor
mov
sbb
sti
clc
xor
addr16
icebp
clc
sub
push
out
mov
fiadds
loopne
addl
mov
roll
inc
xor
pop
jle
fs
std
jne
test
sbb
xor
das
roll
sub
xor
or
xchg
xor
sub
scas
arpl
mov
or
mov
dec
lock
push
mull
ss
popf
add
add
sub
hlt
mov
mov
ret
clc
add
push
call
sub
cmc
jmp
or
mov
cmp
dec
inc
sub
cmp
inc
in
incl
fcmovu
cmpsb
lahf
imul
std
ss
imul
xor
call
jl
fcoms
lds
push
xchg
pop
movsl
push
and
dec
pop
xchg
add
jae
inc
cmpsb
pop
mov
fsts
std
xor
fistl
pushf
std
sbb
or
add
repnz
mov
les
sbb
imul
mov
sbb
jns
mov
int
xor
int
cmc
in
push
xor
cmp
dec
scas
ret
outsb
fisubrl
pop
jmp
aam
jb
loopne
and
aas
addb
test
call
sub
jl
mov
cmp
aas
repnz
mov
lahf
notb
sub
orb
test
xchg
jo
push
cmpb
pop
mov
and
into
mov
mov
pop
imul
cmp
lods
cmp
and
out
sar
mov
rolb
adc
jmp
movsb
ljmp
sbb
jae
inc
mov
stos
inc
stos
bswap
pop
jmp
imul
xchg
cld
fldl
pop
xchg
fsubs
dec
repz
push
xlat
sbb
push
inc
out
add
cmp
test
jmp
mov
or
adc
ret
xchg
nop
adc
jno
dec
lods
xchg
jp
mov
pop
adc
ficomps
jg
mov
scas
push
xchg
jae
cli
dec
fisubl
mov
stos
outsl
testb
daa
dec
ror
dec
ret
xor
xchg
loop
rclb
sub
or
sbb
shl
add
adc
xchg
push
xchg
pop
int
add
fs
or
or
lods
sbbl
mov
pop
adc
incb
ljmp
insb
mov
test
dec
sub
insl
pop
pop
rorl
jecxz
cmpsb
scas
adc
outsl
push
sbb
add
out
imul
out
push
call
testl
mov
adc
popa
push
add
insl
pop
das
adc
or
and
jge
add
mov
mov
cmp
mov
push
adc
icebp
mov
lahf
sti
mov
insb
xchg
pushf
mov
sub
repz
cwtl
popf
cltd
inc
jecxz
sbb
mov
xchg
mov
aam
repnz
gs
daa
imul
sbb
int3
add
pop
es
fsubrl
lret
inc
aad
pop
addr16
lret
xor
sbb
fcoml
and
int3
notb
dec
scas
fildll
xlat
rcrb
adc
shl
xchg
pop
mov
ret
and
adc
mov
jle
bnd
jo
mov
andl
sub
into
pop
negb
push
pop
fidivrl
mov
dec
jl
test
push
scas
mov
mov
ret
clc
jne
jecxz
inc
mov
fistl
add
xchg
out
push
bound
mov
ret
jge
mov
mov
rol
cmpsl
inc
aaa
and
push
pop
stc
fwait
sbb
inc
daa
or
pop
scas
movsl
in
or
call
mov
push
call
rcrl
sub
stos
inc
shrl
movl
lods
fidivs
mov
inc
lahf
push
jbe
js
rorb
inc
xor
mov
jmp
jnp
nop
inc
scas
sub
arpl
mov
push
adc
stc
xchg
dec
xchg
stc
je
sub
shrl
fst
lea
fcom
loopne
iret
jecxz
sahf
cmp
stos
popa
nop
ret
and
sub
insl
loope
test
iret
movsl
iret
xchg
inc
or
mov
xor
push
push
jno
mov
inc
mov
fdivl
stos
or
fwait
shrl
lock
sub
push
sti
push
lret
pusha
int3
pop
repz
mov
add
iret
shrl
mov
call
aam
pusha
mov
and
lret
inc
bound
rcll
or
cmp
xlat
pop
sub
add
mov
out
pop
mov
add
push
ret
inc
pop
jo
cs
add
sub
cmp
loop
sahf
add
cmpsl
fisttpll
jg
pop
rcrb
mov
mov
mov
lds
cmp
mov
in
hlt
sbb
adc
shlb
in
jbe
cmp
dec
enter
dec
jge
daa
jo
mov
inc
mov
add
adc
fs
jl
in
jmp
push
push
movsl
aaa
mov
push
pop
ljmp
sub
shll
arpl
pop
lcall
aaa
cs
out
mov
aad
rorl
ja
and
outsb
lds
mov
call
fwait
cmpsl
push
movsb
add
inc
push
scas
out
out
adc
mov
imul
add
dec
fcomip
aad
push
push
adc
jae
mov
cmp
adc
fwait
adc
loop
mov
leave
xchg
fs
cld
loope
aaa
cld
sti
shlb
mov
sub
push
stos
outsb
pop
dec
cld
cs
jmp
fistl
imul
add
pushf
test
and
ja
popf
mov
add
add
lret
and
rolb
loopne
scas
repz
push
sarb
adc
or
imul
shlb
out
mov
jmp
subb
mov
sbb
or
scas
sbb
pop
xchg
std
inc
filds
in
and
fwait
pop
push
test
cmpsl
mov
shlb
ret
jg
lds
or
es
and
cltd
push
inc
fiaddl
or
and
popf
pop
cmp
mov
push
sbb
stos
mov
jne
pop
mov
outsl
pop
out
xor
add
inc
mov
fsubrs
outsb
push
mov
lds
dec
and
fsubrl
stos
sbb
sbb
insl
sar
jo
xor
cmp
into
lret
stc
mov
loop
lret
ds
pop
lahf
inc
xor
sti
aaa
jge
inc
push
inc
shlb
fistpll
dec
pxor
xchg
loop
add
sbb
hlt
pop
into
insb
jae
xchg
mov
leave
push
sbb
pop
push
ja
xor
aam
dec
rolb
mov
jne
nop
xor
mov
pop
xchg
adc
repz
dec
in
test
inc
xor
or
jne
dec
ds
aam
imul
jb
dec
push
sahf
adc
rcl
xor
dec
mov
je
addr16
or
mov
lret
xlat
jne
mov
xor
fsts
add
je
mov
addr16
push
cmpsl
in
lods
or
popa
and
cmpsb
dec
mov
nop
out
outsb
mov
inc
inc
cmpl
imul
ljmp
push
push
or
inc
mov
stos
inc
in
jnp
mov
jbe
add
push
fisubrl
imul
sbb
int3
in
push
and
int3
or
jmp
pop
inc
jl
out
or
out
loope
std
jno
sub
or
in
es
jmp
loope
pop
fnstsw
xchg
push
inc
out
arpl
fistps
cmp
cltd
cli
fnstsw
lods
cmp
inc
stos
xorl
pop
cmc
sbb
shr
insl
mov
shr
pop
fcoml
mov
cmpb
out
je
popl
cmp
negl
mov
adc
sbb
das
sbb
jbe
push
test
repnz
insl
sbb
pushl
dec
push
or
sub
mov
mov
sbb
add
sbb
cwtl
add
scas
sub
and
xor
enter
adc
xchg
mov
and
int3
testl
nop
mov
adc
rcl
inc
jo
cmp
test
bound
mov
jne
mov
sbb
loope
mov
adc
lret
lods
mov
jl
jnp
inc
cmp
incl
mov
dec
and
fdivl
daa
sub
fptan
dec
imul
jmp
fstpt
sub
out
dec
and
dec
mov
jbe
arpl
sti
push
aam
xchg
fldt
or
shlb
xor
mov
or
add
aad
cmp
xchg
stos
hlt
stos
das
mov
testl
xchg
push
push
xchg
dec
mov
loope
dec
addl
cmp
rclb
pushf
imul
mov
jle
mov
pop
jo
xchg
daa
mov
hlt
xchg
fcomps
xchg
sub
xchg
aad
incl
push
mov
popa
xchg
mov
or
mov
inc
aam
out
cmp
and
out
mov
or
std
aas
mov
fisttpl
mov
pop
jno
xchg
popa
jne
lcall
push
gs
jge
fidivrs
cwtl
lods
sbb
stos
xor
syscall
iret
pushf
jle
xor
mov
std
mov
push
lods
cmp
mov
mov
xchg
mov
or
test
fcompl
xor
or
shrl
jns
clc
and
cli
xor
les
es
mov
test
loope
repnz
out
ljmp
popa
clc
push
loopne
adc
dec
or
inc
aam
adc
loop
sbb
pop
push
call
subl
jo
cmc
and
outsb
lret
bound
pop
mov
ss
inc
sub
pop
adc
dec
push
push
pop
aam
mov
jl
sub
adc
cltd
fnstcw
test
test
dec
pop
cmp
int3
or
and
add
fsubs
out
sub
or
sub
pop
movsb
pop
test
add
push
test
popa
ret
and
lods
jge
jge
ds
icebp
fldt
push
mov
setns
add
pop
xchg
push
mov
sbb
imull
int3
jbe
or
mov
inc
push
into
insl
push
mov
loop
jb
mov
or
cmc
lock
sti
push
pop
pop
mov
fildll
aam
push
mov
adc
pop
mov
xchg
dec
out
pusha
xchg
cmp
lock
xchg
xchg
xor
mov
inc
xchg
ficompl
xor
xchg
push
bound
pusha
xor
mov
add
lret
add
mov
ret
fidivrl
sahf
stos
andnps
jb
push
les
and
fsubrl
mov
pop
movsb
test
xchg
xchg
push
adc
jnp
dec
add
lods
xchg
gs
pushf
lea
and
or
jbe
adcl
je
add
adc
lahf
and
jg
cmpl
mov
pusha
rcrl
xchg
pop
ficoms
or
push
adc
fdiv
mov
sti
pop
ret
idivl
stos
push
dec
xchg
push
push
pop
iret
jmp
push
and
jecxz
xchg
or
dec
aam
xor
sbb
iret
xor
mov
push
jae
lds
sbbl
jns
inc
lock
addr16
jae
out
sub
test
sbb
mov
pop
movsb
jge
or
mov
mov
out
and
inc
cld
adc
push
popf
mov
sahf
imul
rcll
imul
adc
out
jbe
in
add
dec
rorb
push
pop
xchg
repz
mov
jbe
mov
dec
subl
xchg
jne
push
mov
loopw
lahf
cmp
add
fisttpl
xchg
int
and
lods
sub
icebp
rorl
mov
jl
cmpsb
test
fs
inc
dec
pop
sahf
sub
pop
sbb
or
add
mov
inc
mov
sub
xchg
insb
loope
aas
push
sbb
pop
movsb
jnp
inc
or
mov
jb
xlat
ficomps
loope
int3
jnp
push
shll
out
mov
dec
mov
push
ret
jg
aas
cmp
rcrb
pop
push
jmp
imul
mov
cmp
ja
lret
pushf
insb
add
cld
sbb
mov
out
add
aad
mov
testb
or
push
cmp
les
lahf
ret
repz
movsl
add
inc
les
movsb
cli
mov
cmovnp
cltd
push
notl
pmaxsw
inc
cmp
pop
xchg
jne
cli
int3
cmc
add
xor
lahf
inc
sbb
aad
adc
mov
lods
or
push
push
stos
add
adc
mov
dec
arpl
sub
sub
jb
ret
pop
lret
adc
iret
xchg
sub
ja
jo
cwtl
rol
scas
push
sub
add
pop
repnz
std
push
pop
push
push
sub
xchg
xlat
jno
fldcw
mov
xor
push
mov
sub
push
pop
cmp
shrl
movq
pop
fcomps
out
pop
xorb
cwtl
dec
test
cmp
pop
arpl
loopne
repnz
negl
fmull
xchg
mov
sbb
icebp
sbb
loopne
test
push
ljmp
adc
pop
dec
iret
and
out
sbb
es
jl
xor
add
insb
ja
jg
pushf
or
test
mov
or
cli
rcrl
xor
jg
in
xor
sbb
cmp
lea
cld
jmp
test
test
enter
daa
in
loope
mov
or
or
movsb
xchg
adc
in
imul
les
ljmp
sti
rcll
adc
lock
mov
aas
jg
rcrb
xchg
dec
cmp
mov
pop
adc
push
mov
popf
movsl
mov
inc
mov
es
push
mov
jbe
ror
inc
jmp
or
add
xor
xchg
stc
push
into
xchg
pop
mov
std
mov
mov
addr16
and
cltd
mov
movb
push
xor
cmpsl
mov
adc
fs
outsl
push
or
in
xorl
popa
jle
sbb
pop
in
push
fs
popa
dec
dec
push
repnz
dec
inc
push
loope
and
jo
push
push
jp
sahf
pop
mov
jae
pusha
cmpsb
add
sbb
mov
mov
ljmp
mov
mov
lods
cs
imul
inc
mov
dec
or
dec
cmp
in
mov
shlb
sub
push
sarl
lock
pop
mov
adc
add
aaa
movsl
fidivs
and
mov
mov
jo
add
pop
or
jl
out
sbb
dec
mov
cmp
jmp
ja
xor
aas
push
cmp
xchg
sub
push
add
mov
insl
gs
stc
cmp
xchg
cmpb
fldcw
ds
int
out
stos
scas
test
fcompl
imul
fldenv
or
mov
scas
push
sysexit
pop
out
xchg
jp
inc
stos
outsb
jns
adc
push
jecxz
sub
jo
pusha
sub
xor
lcall
test
adc
clc
leave
mov
sbb
loope
mov
mov
pop
stos
mov
xchg
sub
stos
cli
fildll
push
insb
adc
pop
push
inc
rcrb
inc
pop
hlt
scas
xchg
sarb
out
cmp
out
jle
jne
dec
sbb
cmp
jp
stos
xchg
adc
lcall
or
jb
int3
mov
int3
pop
fs
das
jge
xchg
or
ficompl
inc
jbe
out
pop
fiadds
jo
lds
push
pop
pop
push
pop
nop
rcrl
adc
jae
cmp
pop
sub
fwait
inc
lds
loop
xchg
outsb
lahf
nop
push
add
xchg
jbe
fldt
cmp
dec
push
fstpl
xchg
mov
inc
cmp
inc
sbb
repz
fwait
shl
data16
scas
test
popf
adc
aam
push
jnp
mov
ret
pushf
insl
xor
cmp
inc
jb
adc
fs
fisubs
push
shrb
repz
and
push
int
jns
inc
decb
push
lcall
std
outsb
pop
adc
fistl
leave
mov
adc
jl
sub
sahf
inc
push
shrl
fwait
aas
hlt
mov
push
lods
push
out
mov
stos
rol
imul
lea
call
stos
or
cs
mov
push
dec
lea
mov
jbe
cmpsl
lods
ficoms
push
ljmp
sub
icebp
shrb
orl
das
add
call
aas
dec
push
xor
mov
mov
shll
in
in
call
sahf
adc
repnz
iret
mov
icebp
push
jmp
loope
mov
push
lods
or
stc
or
and
mov
sub
mov
jno
mov
out
or
jns
iret
or
test
pop
lret
outsb
movsl
jmp
xchg
mov
imul
outsl
jb
imul
and
sbb
cmp
out
fcomp
push
jae
cmp
nop
out
lahf
sub
push
std
fsubrs
cmc
call
inc
cli
push
pop
sbb
sahf
rcll
or
mov
test
outsb
or
or
jmp
dec
jecxz
fs
adc
and
outsb
stos
and
rolb
mov
push
sub
mov
cmpsb
jge
cmp
jno
push
lods
pop
pop
mov
pop
call
loope
xchg
cmc
xchg
push
pop
repnz
movsl
js
mov
into
addb
daa
adc
movsl
mov
imul
jae
std
cwtl
arpl
leave
xor
mov
add
rolb
sbb
ss
into
sbb
push
xor
roll
test
cmp
ja
das
sti
inc
pop
sti
jbe
pop
sahf
shll
dec
jp
push
adc
out
addr16
popa
mov
and
mov
mov
push
in
sub
int
jns
std
inc
push
lods
jge
or
jns
int3
call
sbb
lahf
sbb
cmpsb
clc
les
mov
adc
lds
in
add
dec
and
push
mov
cmp
stc
mov
into
mov
aaa
scas
sub
shll
push
ljmp
sarb
imull
mov
out
adc
mov
stos
dec
pop
jecxz
sbb
stos
mov
in
ret
dec
fwait
dec
jge
and
testb
mov
clc
in
adc
mov
inc
testl
push
lret
cmp
enter
sbb
sbb
aaa
adc
adc
loop
push
inc
test
movsb
psrlq
or
push
cmp
jp
loopne
cltd
mov
cmc
pop
dec
lods
pop
xchg
pop
lea
xchg
cmpsl
xor
sbb
and
mov
popa
aaa
jg
cwtl
fistpll
ret
aam
jmp
mov
popf
call
push
dec
enter
pop
incl
lret
icebp
aam
clc
hlt
inc
xor
sub
in
adcb
pop
in
shlb
out
iret
js
shr
shrb
push
or
lods
adc
test
mov
mov
mov
inc
or
das
pop
jno
xchg
lcall
test
xchg
fucom
mov
xchg
fsubrs
lods
sbb
shll
cwtl
jb
daa
adc
add
ret
xchg
pop
cli
shll
pop
xor
mov
jne
push
rorl
enter
jecxz
mov
pop
jle
out
mov
cltd
icebp
cld
inc
inc
insb
mov
pop
cmpsb
jl
ficomps
cmpsl
pcmpgtb
cmc
pop
shr
inc
cmp
push
sbb
popf
fs
jo
inc
dec
loope
loopne
xchg
stc
popa
lret
ficomps
test
push
int
jmp
mov
dec
add
mov
movsl
out
sbb
orb
mov
arpl
repz
ss
mov
xlat
std
mull
mov
cmpsb
inc
pop
nop
fwait
cli
addr16
mov
cmp
outsl
or
imul
test
stos
lods
jle
inc
ret
cmp
sub
das
fidivrl
bt
icebp
cmp
sbb
pop
test
xchg
mov
addr16
dec
bound
in
int
xchg
push
roll
in
or
jge
dec
xchg
je,pn
cmp
mov
leave
sbb
jle
mov
out
jmp
sub
dec
in
sbb
dec
mov
mull
adc
mov
and
push
mov
dec
outsb
push
lods
and
lds
sbbl
cmp
adc
int3
inc
xor
adc
mov
shrl
mov
fwait
xchg
out
sahf
add
popa
lods
push
es
mov
cld
icebp
test
scas
dec
daa
data16
cmc
adc
sbb
insl
aam
jp
or
mov
fabs
ljmp
pop
add
xchg
sbb
in
inc
jb
outsb
mull
ds
out
pop
adcb
cld
test
leave
mov
cli
jns
ss
push
push
mov
stos
mov
das
leave
fwait
in
fidivrl
lods
iret
scas
insl
loop
jb
pop
sbbb
in
aas
aad
pop
jmp
fwait
xor
popa
scas
mov
mov
repnz
movsl
ja
push
stc
ja
push
xchg
popa
sub
mov
lret
aas
sub
mov
enter
sbbb
adc
jb
mov
jl
repz
repz
shll
repz
cli
push
rcr
outsb
insl
dec
mov
add
loope
pop
mov
movsb
in
dec
mov
and
mov
jle
js
mov
loopne
mov
outsl
imul
push
out
mov
or
push
jb
jnp
out
iret
pop
fs
ljmp
mov
jmp
xor
pop
leave
dec
or
nop
rcll
mov
cwtl
test
movsl
add
imul
xor
outsl
cmp
mov
ss
ja
and
push
jmp
and
adcl
imul
dec
out
cltd
test
cmpsl
jb
push
cmp
jae
push
jge
cmp
ret
mov
enter
mov
push
cmp
or
inc
les
and
divb
lahf
shlb
int
pop
jmp
sbb
jno
sti
push
adc
mov
inc
ret
fwait
loop
outsb
mov
xchg
out
testl
repz
mov
mov
aaa
xor
xchg
and
sbb
repz
add
inc
and
rorl
hlt
mov
icebp
jg
mov
mov
mov
mov
cmp
movsl
hlt
dec
cmpsl
cld
aas
mov
pop
inc
ljmp
out
roll
mov
mov
rol
daa
push
out
cs
and
inc
pop
mov
sbb
mov
inc
stos
inc
sub
add
out
push
ficoml
dec
inc
movsl
sbb
or
out
xchg
movsbl
xor
cmpsb
scas
int
or
test
lods
es
outsl
testb
cmc
xchg
daa
cmp
jge
in
sahf
aas
xor
mov
cmp
fistpl
pop
ror
mov
mov
std
pop
into
pop
shr
enter
xchg
mov
stc
push
daa
jp
imulb
lods
lods
enter
lods
pop
or
cmc
test
ficoms
test
out
and
xchg
pop
test
mov
push
inc
lcall
mov
icebp
jge
fs
je
adc
mov
les
push
adc
scas
fdiv
js
and
sbb
xchg
stos
jecxz
sub
push
mov
or
sbb
dec
push
fimull
push
push
ja
mov
pop
data16
cwtl
push
hlt
call
mov
imul
imul
sub
mov
sub
out
adc
xchg
pop
push
les
adc
leave
int
fcmovbe
inc
push
push
sbb
inc
nop
xor
pop
cmp
mov
or
pusha
lret
jle
jp
stos
jg
add
outsb
repz
int3
mov
insl
push
enter
push
popa
sub
jge
xchg
repz
fidivl
insb
inc
rorl
jne
sbb
mov
pusha
sbbl
nop
mov
stos
fwait
cmp
sti
cmp
xor
sbb
mov
sarl
cmc
xchg
cmpsl
adc
mov
xor
jne
fwait
add
lahf
in
add
leave
fisubl
xor
mov
into
cmpsb
test
rcrb
ret
push
inc
movsb
test
and
mov
mov
sbb
shll
dec
movsl
pop
fsubl
out
orl
iret
ljmp
add
jmp
mov
mov
into
and
and
xchg
aam
adc
data16
push
decl
mov
jne
cli
popf
fdivs
icebp
push
add
sbb
xor
push
inc
dec
sahf
pop
and
repz
cmp
negl
mov
jne
testb
and
dec
add
dec
mov
jmp
mov
sub
or
test
add
insb
mov
mov
rcrb
out
shlb
call
mov
inc
fidivrs
push
add
in
inc
out
leave
and
mov
push
push
loop
fisttpll
mov
push
and
in
dec
lods
adc
hlt
stc
movsl
or
mov
sti
mov
ficoml
sub
pop
scas
adc
mov
into
xchg
xchg
inc
mov
dec
mov
loopne
inc
inc
push
leave
imull
sahf
aaa
xor
jbe
aam
leave
ret
sub
out
jl
dec
cmpsl
lahf
movsl
push
sub
mov
cli
fs
dec
rolb
stc
dec
jge
lret
mov
xchg
and
xor
push
xchg
dec
sub
pop
shll
mov
icebp
pop
jmp
lret
adc
imul
jge
std
dec
push
dec
dec
lahf
sub
dec
xchg
insb
aam
pop
xor
mov
jne
push
cmp
xor
jle
les
push
adc
add
and
xchg
mov
scas
or
stos
lea
and
mov
sbb
fisubl
xchg
adc
xor
pop
fwait
mov
inc
das
clc
outsb
hlt
inc
and
test
out
xchg
jnp
adc
fdivs
ja
mov
or
fisubs
adc
xor
cli
das
and
cmp
cs
dec
iret
pop
shr
adc
in
push
and
jne
hlt
or
fistpll
push
popa
enter
enter
pop
cmp
jmp
adc
xor
ds
jnp
and
or
or
pop
nop
mov
cmp
inc
rclb
out
out
nop
movsb
xchg
std
jne
push
repz
imul
mov
cmp
cltd
popa
adc
or
xchg
into
xchg
rcll
xchg
pusha
push
mov
push
and
popa
or
pushf
push
adc
ljmp
cmpb
xchg
sub
call
xchg
cmp
ret
insl
cmp
adcb
hlt
lcall
push
arpl
push
aad
pop
lods
xchg
outsb
fcomi
inc
rorl
repz
in
lret
sbb
test
sbb
insb
adc
xchg
call
test
ds
leave
pop
imulb
in
dec
cmp
repz
in
sbb
jmp
mov
arpl
fistpll
xor
mov
into
inc
mov
pop
sub
cmp
lret
in
pop
pop
push
sti
stos
imul
mov
repnz
fdivrp
push
je
fstps
out
iret
rcrl
pop
adc
shll
test
inc
and
dec
sub
dec
hlt
pop
add
xlat
scas
cltd
cmp
inc
pop
mov
hlt
sbb
mov
cmp
push
inc
movsb
dec
cmpsb
loop
jns
ljmp
sbb
in
jnp
sbb
pop
jb
popa
shrb
sbb
iret
notb
adc
stos
aaa
repnz
ss
dec
shlb
movsl
mov
or
repnz
xor
mov
call
test
test
sbb
push
pop
fs
scas
inc
xor
mov
out
idiv
push
inc
adc
std
inc
jge
dec
inc
cmc
fildll
test
insl
out
mov
mov
cmpsb
mov
lock
push
or
and
mov
popa
insb
jns
imul
jno
or
mov
lcall
lahf
bound
test
gs
add
test
mov
mov
icebp
jle
xchg
xchg
clc
mov
fnstenv
int3
das
or
jg
call
lds
pop
addl
rcrl
sarb
js
test
add
sbb
sub
cmpsl
or
push
push
int3
bnd
icebp
repnz
imulb
imul
in
ret
int3
test
lret
lcall
sbb
test
sbb
push
repnz
lods
jb
pop
pop
sbb
lock
or
mov
or
xchg
jae
adc
andl
add
mov
fs
dec
sti
cmp
xor
lea
fisubs
les
mov
jo
int
xor
sub
jo
pop
inc
loopne
shr
mov
cmp
ds
sub
xor
add
lds
xchg
mov
bound
push
movsl
test
pop
movsb
call
sub
fcomps
and
and
and
clc
adc
mov
mov
insl
cmc
dec
cmp
cmpsl
or
fucom
aad
jp
mov
pushf
fldenv
in
jns
mov
cwtl
mov
cmp
stos
ljmp
jb
scas
cmp
pop
inc
jnp
lea
mov
cmp
mov
mov
scas
movsl
xchg
xchg
sbb
xorb
xchg
xor
push
cmpsb
rorl
ret
popf
out
pop
adc
inc
lods
sbb
sarl
mov
xor
pop
mov
das
mov
pop
and
and
std
mov
movl
jbe
jno
fnsave
adc
movsl
dec
xor
mov
gs
mov
ds
sahf
fstpt
cmp
test
xchg
cmpl
movsl
hlt
clc
cmp
xor
fisttpll
xor
enter
add
mov
push
pop
inc
or
insb
adc
mov
cmp
out
pop
add
fs
test
add
inc
push
test
mov
and
lret
xor
dec
cmpsl
nop
es
dec
and
std
stos
jl
pop
mov
outsl
jg
xor
jnp
dec
sahf
or
push
push
jno
mov
lret
stc
mov
push
lods
daa
or
ds
inc
jg
push
loopne
adc
pop
es
jno
movsl
pop
push
xchg
mov
js
mov
jo
cltd
jne
mov
sar
adc
clc
inc
or
xchg
push
jnp
mov
xchg
fs
std
cs
jne
pop
or
clc
stos
mov
shr
cltd
cmc
sbb
pop
dec
or
mov
sub
shl
push
repnz
nop
aam
mov
xor
nop
sar
xlat
outsb
mov
mov
pop
andl
push
mov
mov
dec
fildll
push
iret
hlt
pop
mov
movb
adc
ja
and
or
movsl
inc
and
mov
xchg
in
mov
push
sbb
pop
mov
std
hlt
daa
fs
push
mulb
dec
inc
ja
dec
andb
in
fildll
cli
arpl
daa
cmpsb
dec
mov
xchg
test
mov
lods
mov
inc
sub
and
mov
add
and
std
out
push
dec
jno
ficoml
cli
popf
push
and
dec
pushf
js
sti
mov
xchg
jnp
push
std
test
xchg
xchg
aam
enter
rcrb
fnstcw
sub
pusha
fstpt
movsb
js
orb
add
sbb
mov
dec
mov
mov
movsb
add
stos
jmp
std
fsubl
imul
jmp
fidivl
mov
sub
lea
inc
insb
and
inc
fstl
jmp
cmp
dec
mov
xchg
ss
push
or
xchg
or
sub
aad
ret
clc
push
xchg
and
addl
pop
dec
cmp
std
movsl
jns
sbb
negb
arpl
mov
pop
into
add
pusha
fsubrp
cmp
sahf
inc
xchg
dec
nop
adc
and
push
adcw
jbe
dec
leave
cmp
push
inc
push
and
xor
insl
mov
pop
adc
xor
push
loope
mov
jecxz
iret
lods
int
or
repz
inc
xor
cmpsl
testb
fiaddl
or
mov
repnz
cmp
pop
scas
aam
cmpsb
fwait
lock
inc
sub
or
xor
inc
jmp
stos
rcrb
inc
dec
popa
mov
xchg
and
adc
and
stc
jle
bswap
icebp
movsl
ds
outsl
xchg
cmpsl
aaa
mov
or
and
mov
cli
cmp
xchg
mov
adc
pop
pop
xchg
push
push
in
or
fs
add
pop
cmpsl
push
test
ffree
int
xor
stos
mov
pop
cmpsb
ss
mov
add
push
faddl
mov
or
mov
xchg
mov
fld
jno
lds
mov
dec
lret
jno
stos
negb
sub
fucomp
out
jne
mov
jbe
into
int
into
xchg
adc
cli
fstpl
fldt
sbb
shll
cli
jns
mov
stc
ds
inc
insb
sbb
data16
mov
add
xchg
fidivs
and
or
adc
aas
sti
sbb
cltd
and
and
data16
add
push
and
fnstsw
in
bound
adc
xchg
xchg
icebp
sbb
mov
xchg
jo
ss
mov
jecxz
imul
mov
cs
sbb
shrl
xchg
cld
imul
out
inc
icebp
addr16
popf
push
movsl
test
xchg
and
add
into
dec
xor
ljmp
test
jnp
dec
aad
in
adc
idivl
xchg
mov
add
add
or
add
inc
loopne
fcom
mov
jl
js
mov
repz
jb
les
cmp
mov
push
sub
loop
cwtl
xchg
ja
push
sbb
out
insl
les
test
rolb
out
aam
cld
and
mov
and
mov
rcll
pop
push
pop
jmp
inc
push
je
pop
fidivs
dec
stc
xor
or
bnd
xor
enter
push
in
fmuls
xor
cmc
and
aaa
xor
push
push
hlt
pop
jne
and
repnz
les
leave
ret
pop
rcrl
leave
push
xor
adc
enter
leave
mov
mov
pop
sbb
fidivrs
cmc
lret
pop
retw
and
sub
gs
push
movsb
rorb
cmpsl
or
dec
and
push
fwait
push
xchg
mov
mov
test
push
jge
xchg
ret
pop
mov
inc
jne
mov
sub
or
mov
shll
aam
push
jno
adcb
sub
rcl
lea
addl
pop
arpl
pop
sub
xor
add
fcoms
jb
pop
mov
stos
gs
and
test
imul
adc
rcll
dec
shll
push
cmp
mov
sub
lea
cli
pop
xchg
lds
push
add
xchg
pushf
fstl
out
pop
clc
xchg
cmpsb
sti
frstor
jmp
fwait
mov
popf
leave
add
mov
or
inc
std
jle
add
hlt
rclb
outsb
cmp
and
repnz
addr16
movsb
push
mov
in
push
sub
loopne
ljmp
adc
imul
sarl
sbb
xor
into
call
xchg
add
xchg
rclb
sbb
cmp
loope
ljmp
inc
lcall
adc
cld
ret
cmpsb
push
push
xchg
push
stos
lock
notl
inc
cld
push
popf
mov
data16
addl
jns
fldcw
or
dec
mov
mov
test
mov
test
sub
sbbb
inc
inc
popf
push
stc
xchg
lods
pop
and
fcoms
inc
mov
clc
mov
dec
cmp
jb
enter
fs
ljmp
pusha
dec
daa
inc
icebp
mov
cmp
out
scas
or
dec
je
leave
arpl
aaa
mov
or
iret
jno
add
fisttpll
fldl
xchg
xor
mov
stos
mov
iret
test
sbb
adc
push
mov
les
dec
xchg
sbb
and
cmp
jg
aam
enter
cwtl
dec
jp
scas
movsb
xchg
leave
popf
mov
out
push
dec
out
pop
adc
push
jo
sub
sub
adcb
mov
dec
adc
pusha
push
push
push
push
xor
fwait
xor
fcompl
push
jp
fistps
orl
scas
dec
pop
dec
cmpsl
dec
imul
sbb
mov
push
or
enter
xlat
call
imul
jno
xchg
sub
sub
int
aas
push
push
stos
mov
call
psrlq
outsb
jmp
cmp
adc
lock
test
mov
out
cmp
sbb
mov
or
inc
add
pop
popaw
sub
lea
or
mov
sub
iret
pusha
pop
adc
adc
inc
mov
aad
add
sub
fdivrs
popa
es
adc
aam
xchg
mov
stc
inc
mov
icebp
pop
scas
cs
rolb
int
xor
or
jge
test
add
adc
pop
xor
sub
fildll
add
repz
cmpsb
scas
scas
dec
jl
cltd
jne
cs
jle
pop
and
ja
andb
push
push
ret
sbb
sbb
gs
mov
or
and
fiadds
jmp
jge
inc
or
shrl
mov
cmp
mov
dec
sbb
outsb
jle
in
inc
mov
and
sub
jge
sub
sub
add
adc
adcl
sahf
mov
sbb
bound
jno
das
mov
pop
mov
out
adc
dec
cmpsb
test
fistps
pop
and
mov
pop
fistpl
sbb
adc
ljmp
jo
xor
add
flds
imul
xor
imul
sbb
loope
dec
enter
inc
push
ja
sbbb
ret
xlat
xor
sbb
xchg
lcall
adc
std
outsl
sti
arpl
and
sarl
lret
pop
add
or
in
test
sub
aas
rol
pusha
add
push
fildl
sub
jo
jmp
inc
xchg
imul
dec
and
mov
jge
shlb
xor
jl
loop
pusha
or
xor
insl
sbbb
mov
sub
mov
cli
test
xor
idivl
and
pop
jo
jp
mov
jae
inc
cmc
push
lock
xor
sbb
jle
mov
fcoml
sbb
or
jo
push
inc
pop
or
ficoms
pop
adc
mov
adc
jl
aad
cmc
mov
sbb
add
sbb
gs
ret
inc
mov
push
mov
inc
nopl
mov
jmp
or
push
test
fstpt
imul
ja
and
lods
in
movsb
divb
dec
sahf
mov
loop
loopne
imul
enter
inc
cld
fwait
inc
lahf
mov
shrl
adc
push
or
mov
fidivrs
sbbb
xor
cmp
mov
sub
sti
mov
inc
push
cmp
mov
sahf
mov
pop
sub
fildl
sbb
lods
sbb
push
fldt
or
mov
inc
sub
iret
hlt
mov
mov
int
outsb
lods
movsl
ss
xchg
dec
pop
push
push
popf
and
jg
sub
leave
call
rorb
pop
repz
int
push
lods
cmp
in
mov
pop
pop
js
push
out
mov
imul
jge
imul
incb
inc
dec
mov
stc
pop
pop
xor
int3
add
mov
and
lods
jbe
ds
pop
xlat
mov
xor
push
mov
xchg
mov
mov
or
mov
aas
ds
jg
pop
ret
mov
mov
mov
jmp
scas
add
mov
pop
adc
loop
repz
mov
cld
cwtl
push
and
incb
adc
mov
xchg
pop
pop
add
std
sub
icebp
mov
in
outsl
xchg
arpl
cmpb
test
xchg
add
inc
iret
out
fldcw
icebp
loopne
pop
fs
jnp
push
sahf
mov
mov
hlt
das
mov
movsb
dec
push
xchg
in
mov
pop
data16
rol
lods
addb
imul
or
out
push
repz
push
cmp
or
sahf
adc
xor
ja
incb
push
mov
pop
stos
int
add
shlb
push
inc
cmp
and
leave
cmc
repz
iret
fimull
fs
dec
div
dec
cmp
cmp
cmp
jno
gs
inc
jmp
ds
mov
test
out
xor
hlt
cwtl
in
push
add
xchg
xchg
dec
int3
sbb
adc
mov
ljmp
jmp
mov
dec
sub
out
add
icebp
sti
mov
sbb
xchg
ljmp
inc
ret
int3
mov
adc
or
je
add
fdivr
jae
dec
xchg
cmp
jmp
push
xchg
test
jno
inc
or
cltd
sbb
inc
mov
cmp
sbb
into
xlat
mov
push
pop
xor
cmc
sub
inc
dec
mov
lds
or
sbb
and
movsl
push
sub
or
pop
scas
int3
dec
repnz
dec
std
mov
jns
adc
push
fdivrs
pop
mov
jmp
dec
jns
or
jecxz
sahf
adc
in
mov
pop
dec
cmp
mov
push
pop
nop
mov
data16
int
pop
lods
test
inc
mov
mov
adc
data16
xchg
in
jne
sub
inc
stc
lds
cmp
inc
leave
loop
sub
cmp
adc
gs
and
sbb
loop
dec
sub
insl
push
outsl
xchg
das
aam
enter
pop
sbb
idiv
ja
int
xchg
mov
mov
mov
in
shll
mov
into
push
int
xor
out
sbb
jno
pop
scas
gs
inc
lret
jmp
and
cwtl
int
mov
jmp
ljmp
fucom
jno
mov
cmp
imul
xchg
sbb
je
jne
mov
adc
lahf
bound
xlat
call
dec
sbb
mov
and
sub
inc
push
lret
and
dec
test
iret
adc
xor
jmp
fs
mov
dec
fbstp
mov
xor
push
aad
lea
and
cli
js
ss
enter
shlb
scas
or
add
xchg
inc
es
pop
in
into
mov
cmp
sub
lds
out
mov
inc
jp
cmp
xor
test
movsb
mov
mov
add
ja
test
cmp
jo
cmpl
cmc
arpl
les
scas
dec
or
cmpb
rol
push
fdiv
out
cmc
andl
push
or
xchg
movsb
push
mov
sbb
rcll
push
rol
jae
dec
inc
aas
or
loope
out
aad
inc
aam
add
ds
adc
cmp
jl
mov
gs
or
in
lods
mov
mov
int3
bound
fadd
cli
ljmp
inc
jle
ja
fwait
test
or
stos
outsb
mov
pop
mov
push
cld
mov
xor
lahf
jle
in
scas
sbb
dec
insl
pop
into
nop
loopne
push
dec
jne
and
les
loope
enter
sbb
popf
adc
sbb
mov
test
lods
test
outsb
inc
les
lret
dec
fwait
mov
loopne
add
push
xor
sub
add
jne
les
mov
stos
rcl
fsts
sysexit
scas
pop
or
add
xlat
cmp
pop
ja
jge
and
out
in
ja
mov
mov
mov
xor
pop
into
push
mov
fbld
mov
ret
jecxz
test
add
insb
lcall
packuswb
jmp
mov
lods
sbb
aam
test
lods
or
mov
mov
xchg
mov
movsl
lods
push
cmp
push
dec
out
mov
popa
sub
xchg
daa
mov
arpl
popa
jecxz
sub
jae
dec
int
dec
and
in
popf
push
loope
insl
je
dec
popa
xchg
adc
cmp
sbb
jecxz
dec
in
jbe
ss
jb
js
repz
repz
aad
and
xor
dec
or
push
sub
dec
icebp
inc
movq
data16
orl
sub
daa
and
push
lods
xchg
fstpt
dec
das
xor
mov
inc
mov
ja
insb
test
cmc
cld
mov
xchg
push
dec
loop
adc
fmull
jbe
cld
pop
dec
hlt
pop
cltd
mov
push
sub
ret
insl
sub
mov
cmpsb
ljmp
pop
push
je
push
jnp
repnz
rcr
dec
fiadds
aas
xchg
stos
outsl
jmp
mov
push
jg
out
leavew
dec
shrl
mov
add
pushf
push
movsl
ds
xlat
outsl
arpl
gs
iret
insl
sbbb
pop
lock
repz
scas
dec
andl
stc
int
add
rolb
testl
ljmp
xchg
fidivrs
out
inc
inc
dec
cmp
mov
dec
pop
or
lret
push
mov
movsb
mov
sahf
dec
inc
insl
jge
int
pusha
xchg
jle
mov
ret
add
dec
mov
xchg
dec
push
icebp
call
inc
repnz
xor
mov
mov
mov
pop
icebp
divl
shrb
mov
sbb
push
arpl
loopne
lods
add
decl
imul
and
mov
xchg
je
mov
lods
adc
push
or
mov
or
mov
xor
jmp
mov
push
or
aam
mov
adcl
lock
into
jb
sbb
xchg
pop
js
cmp
cmpsl
mov
mov
inc
lret
scas
lea
xchg
add
movsl
pop
push
adc
or
lock
arpl
jle
stos
push
enter
push
repz
add
inc
push
and
call
pop
incl
pop
outsb
xchg
ja
jo
jl
je
xor
stos
and
jb
add
or
xor
adcb
cmp
mov
sahf
add
sbb
lcall
pop
adc
pop
xchg
jge
or
jmp
mov
add
and
sub
xor
xchg
jb
ja
adc
outsb
push
iret
cs
ja
inc
or
sub
fisttps
xchg
mov
in
repnz
test
or
aad
xor
mov
push
inc
fiaddl
sbb
outsl
inc
outsl
lds
sbb
dec
repnz
fwait
and
jl
outsb
imulb
popl
mov
mov
inc
pop
dec
aam
jp
mov
mov
or
insl
rcr
repz
mov
sub
mov
rol
jo
imul
js
into
add
or
sub
andl
dec
xchg
pop
int
gs
jp
scas
call
or
rcrl
xlat
sub
aas
movsl
js
aaa
inc
xlat
popf
pop
hlt
xor
and
mov
leave
sub
jo
lahf
rcrl
fidivrl
push
push
fistl
mov
mov
and
mov
cmp
or
fs
xor
pop
cmp
pop
cmp
gs
ficompl
xchg
es
rcrb
icebp
xchg
movsl
dec
int
cwtl
lods
mov
xchg
in
dec
cmp
rcrl
int
inc
xchg
and
adc
ret
pop
call
mov
out
lods
in
mov
imul
pushf
adc
lods
popa
daa
or
jp
sbb
std
cmp
fsubl
daa
xchg
cltd
int3
cs
pop
sbb
movsl
cmpsb
dec
das
inc
jle
imul
cmp
bound
fstpt
fidivrl
ret
and
adc
dec
nop
loop
cld
lret
push
arpl
aam
mov
xchg
mov
fcompl
jle
dec
js
cmp
inc
push
sbb
xlat
cli
loopne
push
fbld
sahf
fisubl
dec
adc
mov
in
in
sub
pusha
jb
push
inc
sub
imul
add
jg
pop
sahf
aam
sbb
fdiv
int3
inc
push
xor
lret
or
jg
cmpsb
rorb
adc
fmuls
xchg
fistl
hlt
pop
xor
inc
jno
jle
push
clc
das
pop
jns
mov
stc
inc
xor
and
imul
aad
cmp
imul
or
dec
lret
adc
je
sub
pop
pusha
aaa
ror
mov
push
daa
call
pop
and
mov
jnp
lea
inc
mov
lock
push
or
adc
out
mov
cmc
adcb
lret
adc
jmp
mov
push
sbb
mov
cs
inc
pop
mov
sti
movsb
dec
pop
push
mov
incl
rcr
mov
sub
mov
jns
stc
mov
stos
jge
mov
mov
push
sub
mov
jno
cmp
gs
fidivl
orb
lods
or
xchg
movsb
sbb
lahf
test
data16
pop
cltd
or
mov
in
cmp
mov
int3
arpl
js
ret
pop
jge
xchg
jo
cmp
out
std
and
addl
dec
mov
mov
cmp
dec
cmpsb
mov
jae
sub
add
scas
sbbl
ret
jmp
pushf
cs
scas
popl
mov
lods
mov
addr16
iret
mov
mov
xchg
sub
shrl
mov
pop
jbe
mov
xor
sub
and
jae
int
cmp
mov
jb
dec
fs
mov
ds
inc
test
sbb
int3
add
sub
std
jne
icebp
cmpsb
jo
stc
imul
sub
and
insb
idivl
xor
and
scas
lahf
push
xor
or
cwtl
push
test
add
out
ja
xchg
and
jne
sub
cmp
xchg
inc
pop
pop
jmp
cmp
inc
add
lret
jne
jmp
pop
ret
popa
xor
outsb
in
mov
sub
hlt
mov
and
loop
inc
mov
push
jbe
dec
cltd
xchg
clc
push
js
pushf
and
and
add
adc
and
cmp
repz
lods
roll
subb
jae
fstp
jo
call
sub
icebp
mov
idivb
cs
lahf
stos
pop
cmpsb
pop
jae
jp
adc
fdivs
int
inc
cmovo
sub
cmp
pop
jp
dec
cmc
jne
mov
mov
stos
call
push
sub
dec
jl
andl
into
jbe
rcll
or
cmpb
or
jmp
insl
stc
iret
scas
jo
outsl
inc
adc
aam
dec
push
dec
jbe
mov
int
call
test
daa
mov
push
push
lock
lahf
lea
std
ret
in
push
lea
dec
mov
xchg
push
jne
insb
xlat
loope
stc
pushf
lods
fsubrl
fmuls
ss
xlat
dec
ja
mov
or
pop
aad
xlat
call
add
push
loop
test
lret
adc
nop
and
jmp
sbb
mov
cmp
scas
sub
sti
or
lahf
cmpsl
mov
outsb
cltd
jbe
dec
dec
daa
out
int
xorb
adc
sbb
xchg
or
adc
or
int3
add
lahf
rcrb
sti
jl
fs
ljmp
sbb
mov
pop
or
xor
int3
int
xchg
jle
xchg
fcmovb
dec
lds
xor
dec
das
and
push
push
clc
popf
mov
aad
cld
in
pop
pop
sbb
mov
test
shl
and
xchg
std
jbe
xor
mov
add
fcmove
mov
scas
and
cmp
cld
adc
inc
mov
add
daa
pop
fmull
mov
push
fwait
mov
arpl
cmpsb
cmpsl
xchg
inc
jo
or
icebp
cmc
and
lock
arpl
jae
scas
ret
out
add
lret
imul
fisttpll
xor
mov
icebp
pop
mov
push
in
mov
popf
sbb
add
sahf
and
mov
shlb
xchg
push
jae
and
xchg
adc
add
mov
xchg
insl
addr16
scas
or
daa
stc
or
sahf
add
sub
sbb
jle
int
inc
sub
lods
jecxz
int
fiaddl
pop
cmp
shlb
cmpsl
lock
repnz
push
cmc
jg
sbb
or
jno
fistps
cmp
adc
adc
mov
inc
outsb
add
add
es
hlt
pop
lcall
mov
bound
xchg
test
std
mov
mov
sub
push
std
add
clc
in
push
ret
jo
sbb
jle
cs
sbb
ljmp
sbb
lods
jecxz
xchg
and
pop
lcall
mov
jl
inc
mov
sbb
std
out
in
bound
scas
cwtl
mov
bound
jnp
dec
call
dec
cmp
int
fisubrl
mov
mov
mov
stos
in
inc
sub
and
scas
fcomip
int3
cmpsb
xadd
xor
in
push
sbb
hlt
shl
mov
aam
fnstsw
lods
sti
test
cltd
aas
add
push
out
add
loop
lret
ret
jae
ja
shrl
mov
sub
std
jne
mov
push
adc
cltd
ret
add
int
rdpmc
insb
xchg
je
popa
push
das
insl
inc
sub
or
jle
bound
and
xor
imul
sbb
je
scas
fsub
mov
lret
es
pop
mov
cltd
dec
ljmp
lods
fldl
nop
cmp
jnp
fld1
mov
cmp
test
adc
sbb
mov
insb
inc
lcall
adc
lods
xchg
fpatan
orl
int
fmull
push
xchg
adc
fld
pop
xlat
shl
xchg
fucomp
sarl
es
push
jle
adc
dec
notl
es
loope
js
nop
cwtl
lcall
pop
in
scas
jle
insl
pop
pop
push
repnz
js
and
pusha
jne
fwait
and
scas
fnstsw
pop
popa
mov
outsb
sub
aas
pop
pop
mov
lock
cli
jg
in
push
xchg
cmp
jnp
ret
cld
sbb
push
aas
in
xor
lret
int3
ss
sub
add
in
push
movsl
inc
imul
mov
insb
jecxz
pop
add
cmpsb
rdpmc
jno
xchg
add
movsb
jno
nop
daa
lods
rolb
mov
sbb
arpl
mov
mov
clc
call
jmp
mov
leave
xor
imul
jns
test
ljmp
sahf
stc
lret
insl
push
adc
push
jne
decb
sbb
addl
test
mov
movsb
scas
ficoml
aad
xchg
sarb
mov
jb
mov
out
cmp
mul
out
mov
call
inc
mov
ss
fiadds
mov
mov
loopne
jnp
loopne
repz
and
pop
test
mov
fwait
adc
pop
sub
mov
mov
lcall
icebp
push
stc
popa
mov
mov
movlps
daa
outsb
cmpsb
cmp
mull
in
push
mov
and
inc
pop
sbb
into
push
push
sbb
ss
les
sbb
sar
sub
subb
xchg
mov
loop
insl
ljmp
scas
fsubs
jne
inc
dec
jb
cwtl
mov
out
xlat
xchg
pop
sbb
mov
cmp
outsl
sub
sbb
and
lea
arpl
mov
icebp
jge
lds
in
clc
shrb
je
ficoms
lret
adc
sahf
int3
mov
iret
inc
aam
pop
inc
loope
xor
and
rorl
push
mov
lock
pop
bound
aaa
jo
push
sbb
enter
sbb
outsl
cmpsb
xor
pop
xor
scas
fmull
cli
lahf
mov
sbb
repnz
stos
cmp
repnz
pop
ja
sar
nop
inc
out
or
push
adc
cs
nop
gs
cld
cmp
lds
jg
jmp
pop
push
leave
lock
addb
xor
or
pop
cmp
jmp
dec
inc
movsl
jge
and
insl
pop
nop
add
nop
scas
push
iret
sub
or
dec
mov
mov
pop
pop
adc
hlt
ja
into
adc
sub
dec
mov
cltd
xchg
ret
push
sti
icebp
or
addl
cs
cltd
xor
jg
inc
roll
jno
sti
xorl
sahf
pop
stos
or
test
jge
scas
ja
mov
push
out
mov
arpl
dec
lds
leave
jmp
hlt
lret
pop
insl
aad
cld
push
ja
pop
test
mov
inc
dec
jbe
add
std
add
xor
or
std
in
in
xor
dec
xchg
cmc
outsb
cmp
sbb
js
adc
sub
xchg
aas
inc
lods
pop
jb
in
xorb
aaa
nop
jmp
shlb
lock
mov
mov
sarl
hlt
lea
sub
inc
scas
xchg
sub
imul
add
pop
in
cli
fs
loope
leave
inc
jne
cmpsb
cmp
addr16
dec
mov
ret
outsl
push
insl
mov
popf
hlt
sti
push
imul
jmp
mov
push
out
std
lret
fsubr
sbb
cltd
insb
pop
cli
int3
pop
js
dec
sti
rclb
dec
mov
mov
mov
adc
fmull
lods
add
mov
test
rcrb
pop
fdivrs
cmp
hlt
in
shrb
cmp
je
scas
xor
adc
out
push
std
adc
loop
ja
fiadds
mov
cvtps2pd
pusha
jge
jns
jp
adc
lods
jg
sub
insb
test
ja
ds
in
int3
mov
popa
and
cld
cmpsl
or
mov
ret
sub
push
lahf
mov
stc
out
out
test
or
ljmp
rclb
imul
push
sbb
dec
addl
rep
test
mov
neg
lcall
jae
sahf
add
pop
sub
jbe
pop
or
lea
inc
cltd
xchg
movsl
mov
push
sbb
add
sub
add
sub
dec
test
cli
and
jge
lds
loope
in
ret
jb
rorl
rorb
movsl
pop
inc
repnz
lods
push
loope
add
lret
and
cmp
cltd
jns
add
sbb
hlt
dec
cmpl
fdivp
cwtl
enter
or
loop
mov
sub
add
cmp
and
add
mov
pop
shrb
adcb
xor
loope
cld
and
addr16
mov
fnstsw
std
jno
lret
dec
sbb
jne
pop
popa
insb
iret
xchg
add
in
sbb
xchg
shlb
cwtl
inc
aas
add
sub
inc
out
fldenv
shll
mov
pop
and
das
xchg
jl
jo
and
movsb
inc
sbb
icebp
iret
into
add
fwait
mov
in
jbe
xor
add
mov
jmp
std
sbb
sub
data16
or
mov
push
ret
int
xor
cli
test
outsb
sub
sbb
sbbb
test
sbb
sub
das
pop
push
addb
adc
or
das
dec
jle
inc
aam
mov
add
dec
loopne
insb
mov
pop
xchg
push
arpl
xchg
les
pop
inc
lea
pop
cmp
cmp
mov
pop
cmp
cs
push
xlat
test
mov
lods
loope
dec
mov
sbb
shlb
vpsubusb
aam
mov
mov
arpl
cld
movsl
ds
xor
xor
cwtl
or
scas
lahf
xchg
scas
cmp
icebp
pop
mov
mov
jp
mov
adc
sub
fstl
test
jnp
pop
and
mov
movsb
xor
dec
call
out
pop
out
cltd
or
xchg
outsl
lret
bound
insb
lds
pop
jne
ja
out
xchg
and
loope
fcmovnu
sbb
push
test
push
push
pop
sub
add
mov
add
ficomps
lret
cltd
popf
push
arpl
jns
adc
xlat
mov
xor
sbb
es
and
in
lock
ret
lods
movl
inc
xor
pop
xor
cmp
mov
inc
mov
bndldx
sub
rolb
jle
loopne
insl
pop
cli
in
rorb
jmp
jne
adc
outsl
jmp
sahf
pop
mov
jne
lock
mov
mov
mov
mov
test
mov
lcall
stc
push
scas
lcall
mov
pop
mov
ret
push
popa
pop
bound
out
sub
pop
pusha
sbb
test
outsb
mov
test
test
lods
adc
mov
addr16
cmp
test
pop
out
cwtl
fildl
cmpsb
rolb
sub
decb
and
negl
rcl
pop
mov
popf
fistpl
mov
inc
dec
and
mov
mov
mov
mov
mov
push
insl
mov
enter
xchg
jl
les
xor
adc
sub
push
iret
add
xorl
aaa
inc
and
cld
fwait
and
mov
and
into
bound
pavgw
in
jne
loope
hlt
imul
xchg
mov
mov
dec
push
fsubl
and
popa
push
sub
xchg
sbb
movsb
adc
bnd
mov
scas
loopne
mov
cmp
in
mov
mov
mov
pop
lahf
cld
mov
adc
dec
sub
xchg
jp
add
into
fisubrs
jp
push
jmp
cmpsl
mov
cwtl
iret
cs
fdiv
xor
lods
popa
leave
dec
dec
or
push
mov
xchg
mov
fbld
sbb
mov
stos
iret
rorl
test
xor
std
out
iret
xchg
fadds
testl
and
jno
cmp
cmp
lret
dec
test
jle
push
sbb
fcmove
lods
pop
out
das
jg
mov
sti
sarl
or
mov
sbb
xlat
xchg
jl
lds
call
or
pop
jecxz
scas
jo
mov
pusha
mov
mov
cli
rorl
pop
out
xlat
pop
xor
mov
pop
adc
lock
out
dec
inc
mov
pop
push
xchg
js
aad
fidivrl
roll
into
cmp
dec
je
sbb
sbb
cmp
xchg
cltd
add
testl
ret
popf
sbb
out
cmp
or
sbb
out
mov
jmp
mov
lahf
jno
sarb
out
push
fisubrs
push
lret
or
and
inc
out
out
imul
sti
daa
or
pushf
or
add
popf
add
xchg
leave
adc
xor
ret
test
cmpsb
int3
add
pop
xchg
in
sbb
adcl
fdivs
pop
fists
inc
or
push
mov
cmp
pushf
stc
in
mov
out
in
and
mov
sub
dec
fbstp
xchg
stos
inc
jl
in
sbb
or
push
lea
sub
cli
inc
cmc
adc
mov
lods
sub
xchg
cmpsl
push
fimull
out
cmp
not
jo
jb
es
aad
lret
jb
mov
mov
test
fisubs
push
in
inc
sarb
les
dec
jecxz
xor
ret
lock
jno
in
es
test
ljmp
stos
sbb
xchg
aad
cltd
or
outsl
rorl
push
mov
push
inc
xor
push
push
or
adc
pop
cmp
cld
aam
in
mov
and
ja
mov
mov
pop
mov
pop
fldcw
es
jge
lock
add
outsl
popf
mov
xchg
cmp
cwtl
jne
test
cmp
sbb
dec
push
sub
mov
jae
insl
test
pushl
jp
mov
in
sub
jge
scas
xchg
sub
push
scas
sbb
sahf
xchg
xchg
jmp
pop
lods
ss
and
pop
and
jnp
dec
sbb
lret
sub
dec
aas
das
fwait
lea
daa
xchg
mov
xchg
push
mov
cmpsb
lea
jne
arpl
decb
jmp
outsb
mov
sub
cli
xchg
imul
rcr
test
pop
sbb
dec
inc
bound
or
mov
cmp
cld
xchg
pop
pushf
mov
mov
stos
pop
out
je
xchg
add
aam
cmp
ja
adc
push
pushf
je
insl
cli
dec
shr
sub
outsb
shlb
movsb
out
js
and
fmull
movsb
inc
btr
mov
cltd
in
hlt
xchg
xchg
cmp
int3
inc
incl
test
clc
repnz
ret
test
sbb
ret
pop
sti
cltd
iret
mov
sahf
stc
iret
fldenv
sbb
xor
mov
in
pop
cwtl
fcoml
sbb
mov
sub
push
and
aam
stc
jns
xchg
cmp
js
fs
sbb
mov
mov
js
insb
mov
pusha
sarb
jp
mov
cmpl
cmp
daa
mov
std
adcl
cmc
and
movsb
jl
cltd
pusha
into
sub
nop
mov
cli
roll
pusha
xchg
xchg
mov
das
or
push
push
mov
repz
inc
stos
call
pop
cli
inc
lea
sub
cmp
cli
xor
xor
icebp
push
in
cld
jg
into
bound
jp
sbb
in
jbe
enter
ret
dec
iret
jg
mov
mov
iret
out
out
cmpsl
add
fwait
xor
jle
mov
dec
cmc
ret
mov
sbbb
mov
xor
lcall
mov
popa
std
decb
add
mov
xor
pop
or
and
dec
pop
inc
scas
mov
test
or
push
test
jg
pop
mov
pop
push
int
lds
xor
in
or
cmpsl
add
out
xor
test
sbb
xor
pop
cmp
movb
jmp
aas
mov
imul
xor
mov
xchg
inc
sub
sbb
mov
push
push
ss
jns
mov
inc
cmp
test
aaa
out
xor
dec
dec
test
push
add
push
mov
inc
lods
add
xlat
das
in
dec
lret
add
dec
rcrb
scas
mov
outsb
add
std
xchg
stos
lahf
imul
xor
or
cmp
cmp
ljmp
sub
cmp
push
loope
xchg
inc
mov
cmp
jl
stos
push
ror
pop
rorl
cmpsl
in
mov
inc
aam
add
jg
and
jae
in
inc
inc
push
int3
jo
insl
inc
fdivrl
pusha
add
rorl
addl
dec
mov
mov
adc
cmpsb
cmp
popa
sbb
push
dec
dec
fistps
inc
mov
mov
jp
sub
and
out
mov
pop
movsb
cmp
lods
and
add
ljmp
insl
int
ret
push
jne
xchg
mov
cld
cld
sahf
mov
jle
xor
jb
pop
xor
ja
jb
xchg
loopne
mov
push
call
aam
jge
jmp
dec
mov
dec
ja
pop
mov
test
leave
cmp
dec
or
add
inc
mov
inc
fwait
or
icebp
sarb
mov
in
dec
adc
inc
push
jbe
or
jge
xchg
mov
push
daa
outsb
xchg
lea
clc
sbb
or
dec
pop
adc
sub
and
mov
enter
and
sbb
xchg
bound
or
or
dec
test
dec
minps
out
add
jnp
and
mov
nop
repnz
xor
ror
bound
jo
pop
fisubrs
popl
or
xor
mov
xchg
in
mov
popf
sbb
out
jne
dec
pushf
idivb
loop
fwait
imul
xchg
in
mov
in
jae,pt
sti
jmp
mov
filds
or
sub
inc
lods
mov
lcall
loopne
pop
je
push
xchg
dec
xchg
mov
scas
pop
inc
aam
xchg
xchg
push
or
adc
mov
in
xchg
fst
mov
sbbb
ret
jb
push
and
adc
jne
lahf
lock
sub
inc
rorb
and
scas
icebp
fdivl
aad
push
xchg
or
inc
push
repz
jp
mov
mov
fidivs
xchg
xchg
es
out
stos
xchg
int3
mov
gs
repnz
inc
and
adc
sahf
iret
or
jne
imul
pop
jo
pop
sarb
jmp
inc
jb
sbb
aas
pop
loop
icebp
xor
lea
cmp
push
loop
das
pop
and
mov
push
leave
test
cwtl
pop
mov
pop
add
lcall
pop
or
pusha
in
outsl
or
mov
arpl
ds
dec
loope
stos
mov
xchg
adc
jbe
sti
ret
mull
or
pop
in
pop
xor
cmc
cli
xor
sbb
mov
xor
loopne
cmp
and
notl
fistps
repz
das
cmp
xchg
sub
dec
inc
pop
popf
movsl
js
mov
mov
lods
cli
and
or
add
filds
movsb
sub
outsb
sub
in
cmp
stc
sti
pusha
jl
cmpsb
adc
mov
lods
jle
xor
cmp
imul
and
inc
out
lea
bound
jp
hlt
popl
rcrl
mov
xchg
mov
and
stc
mov
xor
push
push
cs
or
mov
and
incl
cli
push
cmp
add
mov
jne
lock
enter
loop
rcl
inc
mov
nop
test
push
mov
mov
cmpl
test
push
popf
movsb
cmp
xchg
xor
pop
push
xchg
je
iret
mov
lods
scas
into
xor
js
push
stc
cmp
add
mov
xchg
mov
xchg
mov
aad
push
adcb
and
fnstenv
jg
adc
addb
pop
mov
cmp
push
xor
inc
sub
aas
mov
push
xchg
jmp
adc
ljmp
dec
mov
xchg
pop
lea
lahf
out
fsubrp
sbb
xor
push
aaa
dec
in
ljmp
xor
xor
and
fildll
jbe
fldt
xchg
hlt
cli
sub
and
in
sahf
adc
lahf
call
sahf
ds
sbb
cmp
gs
xor
cmc
popf
dec
data16
out
lcall
dec
sti
cli
in
fstpl
mov
ss
es
xchg
pushf
imul
mov
xor
pusha
cmc
or
out
adcb
iret
sbb
mov
lods
mov
in
repz
iret
sub
push
rcr
pushf
jo
jmp
dec
jae
push
xchg
push
loop
sahf
lods
lret
or
dec
mov
outsl
add
add
inc
push
fstl
test
leave
loope
cmpb
orl
dec
add
add
mov
mov
xchg
add
cmp
mov
sub
lods
inc
jne
scas
sbb
adc
imull
bound
cmc
dec
or
sarb
test
xor
testb
adc
gs
das
or
cs
and
fidivl
jo
mov
mov
test
test
incb
mov
inc
ds
add
and
xchg
xchg
xor
and
xor
ja
cli
and
es
cmp
cltd
sti
jl
test
dec
sub
insl
aam
rcll
ljmp
inc
or
jo
into
xchg
aam
jno
aad
jge
mov
pop
out
mov
in
into
mov
mov
adc
push
mov
flds
fsts
push
stos
stos
insb
inc
arpl
mov
inc
mov
or
mov
or
rorb
jg
fistps
adc
sbb
sbb
cmp
dec
aad
popa
shlb
gs
loope
clc
aad
mov
cltd
mov
test
stos
sbb
aaa
jne
sahf
es
cmp
lea
into
dec
out
push
sub
lods
xor
in
push
aam
adc
test
pop
dec
push
lea
and
xchg
int
mov
or
dec
inc
movsl
imul
imull
inc
inc
jg
ljmp
jg
push
jl
jmp
xchg
aad
inc
dec
cltd
imull
mov
sahf
in
ds
adcb
sbb
push
hlt
inc
jge
loope
pop
push
bound
adcb
mov
cmpsb
mov
mov
cmp
scas
mul
in
inc
ljmp
mov
inc
in
sarb
xchg
cmpsl
mov
mov
cld
adc
lods
scas
faddl
push
pop
shrd
out
and
test
arpl
push
rclb
movsl
mov
bound
add
ret
push
cli
ret
jns
push
decl
mov
in
and
cwtl
jne
scas
sub
pop
dec
mov
sbb
sbb
ret
and
jle
pop
mov
jecxz
add
cmp
inc
out
aad
xchg
mov
mov
pop
ror
inc
cwtl
push
or
fstl
jns
mov
jo
sbb
sbb
adc
xchg
cmpsl
cmp
fisttps
jp
dec
xchg
fldenv
xchg
mov
jnp
and
add
xchg
clc
adc
push
cmc
jne
jmp
cli
sbbb
sbb
dec
ljmp
cld
aad
jae
sub
mov
pop
add
ja
push
mov
es
xchg
mov
repnz
push
or
outsl
cmp
adc
popf
adc
inc
leave
mov
daa
xor
iret
jl
add
cmp
mov
cmpl
test
xor
fbld
jg
cmp
mov
es
and
sbb
dec
fcompl
orl
cli
sub
push
xchg
scas
cmp
mov
mov
push
es
sahf
je
ja
push
inc
lcall
popa
arpl
mov
insl
adcb
stos
or
inc
fcmove
sub
jl
xchg
ljmp
shrl
pop
xchg
nop
xor
cmpsb
adc
lahf
pop
mov
imul
ja
push
sub
xchg
jae
jae
dec
xchg
xor
xchg
gs
cmp
dec
shrb
cwtl
xchg
aas
mov
addr16
mov
inc
mov
xchg
in
insl
shlb
add
imul
push
push
push
push
xor
pop
popf
repz
lahf
cld
je
cmp
jge
add
xorb
inc
mov
push
xchg
or
xor
bound
add
pop
insb
sbbl
lods
mov
jno
add
es
cltd
daa
add
cmp
sub
aam
cld
cmc
mov
pop
and
je
sbb
push
stos
mov
cmp
popa
rorb
ljmp
outsl
movsl
xchg
xchg
pop
clc
pop
faddl
mov
push
movsl
xor
jge
dec
das
and
mov
loopne
sub
stos
add
outsl
mov
popf
add
mov
mov
push
sub
xchg
in
sbb
movsb
imull
pushl
jnp
sbb
mov
mov
movsl
sub
testl
xchg
outsb
scas
xor
or
pop
lods
add
icebp
scas
xlat
lods
xor
test
mov
mov
imul
rol
in
push
rcll
xchg
es
outsb
mov
ljmp
lea
mov
and
xor
push
scas
enter
sbbl
sbb
cwtl
pop
sub
add
jbe
div
mov
cmc
adc
movl
lcall
pop
sub
cmpb
xor
adcl
xchg
in
addl
dec
mov
ror
orb
mov
or
mov
test
dec
jns
jnp
mov
dec
mov
lret
cmpl
cli
or
add
adc
or
mov
shr
sti
pop
iret
popf
add
sub
xorb
and
call
lock
dec
jo
xchg
aaa
xchg
sbb
add
add
xor
out
lods
xor
push
push
or
adc
xchg
xchg
adc
out
cmpl
lock
xchg
outsb
ljmp
and
daa
mov
psubusb
pushw
jp
mov
jno
shr
dec
lahf
jb
stc
loopne
dec
lret
cmp
xchg
pop
cmp
cmp
lcall
mov
sub
fs
cli
mov
xchg
and
cmp
xchg
push
popa
cli
push
xor
mov
dec
lret
xchg
mov
lds
test
inc
loopne
inc
aas
shll
mov
jns
inc
add
and
cmc
movsb
inc
dec
ficoml
sbbl
imul
sbb
mov
and
push
movsl
cmp
sub
mov
fcomps
insl
push
in
push
add
jne
leave
add
pop
sbb
bound
pop
in
rcrl
sarl
mov
mov
hlt
repnz
and
adcb
push
mov
mov
dec
adc
stos
adc
mov
cmpb
add
sub
pop
out
pop
arpl
popa
push
fsts
xchg
adc
dec
mov
push
adc
ss
mov
inc
inc
and
jle
cmp
nop
hlt
xorb
cmc
aad
iret
scas
xchg
lcall
cltd
subb
add
pop
call
jmp
xchg
in
mov
jo
xchg
inc
jg
out
mov
or
jo
pusha
dec
mov
or
lock
roll
mov
push
call
add
push
fwait
adc
sub
mov
sbb
sub
mov
xchg
lods
inc
sbb
and
test
sti
mov
dec
addl
jmp
jp
cwtl
cmp
or
and
mov
sub
ret
cld
cmc
sub
dec
inc
mov
jecxz
or
cmp
cmc
add
lods
inc
insb
into
aas
adc
rcll
or
es
jmp
mov
xor
mov
cmpsb
out
push
dec
into
rclb
jae
inc
jge
inc
jae
test
pop
lret
sbb
adc
inc
enter
loopne
bnd
pop
movsl
rclb
push
add
cmp
cmp
shlb
adc
insl
aam
shlb
cmp
pusha
sub
inc
subb
adcl
xlat
and
ds
mov
andl
sub
jns
out
dec
dec
pop
rcr
adc
xor
pusha
push
gs
cmp
inc
mov
jbe
in
sbb
ja
test
xor
jge
ret
mov
xchg
clc
icebp
mov
mov
loope
sbb
mov
clc
and
hlt
cmp
cmc
mov
mov
fsubrs
or
cld
stos
fcomps
movsl
dec
jmp
jmp
xor
push
call
mov
leave
jecxz
loop
in
in
pop
and
test
mov
mov
lcall
cmp
loop
sub
xchg
push
xor
aas
push
sub
int
inc
sub
mov
jno
xchg
shll
lret
adc
cmpsb
pop
sub
jnp
bound
out
stos
or
sub
sub
outsl
pop
mov
adc
rolb
push
mov
pop
xchg
or
xlat
iret
dec
jns
sbb
fwait
inc
xchg
dec
stc
addb
add
inc
jg
fcomi
pop
push
outsl
pop
or
xor
adcb
ret
jae
sbb
pop
lock
push
or
push
es
cmpb
xlat
mov
fimull
jns
sub
inc
mov
sub
add
sti
and
mov
cs
mov
cmp
cmp
add
pop
mov
sbb
jb
adc
loopne
das
imul
ficomps
jg
sub
fidivl
test
fisubs
push
dec
data16
shll
and
push
mov
dec
pop
sbb
add
add
dec
mov
dec
add
mov
jl
aam
insb
popf
mov
dec
mov
pop
push
outsl
cmp
adc
movlps
lret
test
cmpsl
aam
jno
pop
sub
xacquire
mov
xor
stos
pop
pusha
das
cltd
pop
pop
jl
add
fistps
cld
jge
shlb
addr16
test
mov
decb
rolb
sahf
pop
jno
jle
jp
aad
filds
cmpsl
popa
mov
mov
jg
test
xor
lret
mov
and
add
jecxz
insb
ret
pop
nop
lret
push
sar
jmp
adc
repnz
sbb
test
cltd
pusha
xor
mov
mov
pusha
add
xor
scas
movb
outsb
jae
mov
in
xchg
push
scas
pushf
push
add
daa
mov
in
xor
mov
cmp
mov
jp
test
or
lock
lock
enter
push
pop
jns
inc
or
mov
sbb
sbb
sub
fldenv
push
into
and
fs
adc
shrl
cmp
add
mov
adc
pop
jnp
inc
push
xor
dec
dec
jp
add
lods
mov
sub
inc
enter
pop
stos
mov
popf
mov
and
pop
push
outsb
lahf
jg
stc
subl
xchg
xchg
call
cld
or
cmp
and
xchg
in
outsb
lds
outsl
mov
mov
or
mov
xor
sbb
add
push
and
inc
cltd
adc
add
lock
enterw
xchg
xchg
jne
inc
jno
sub
cmpsl
adc
icebp
imul
shll
cwtl
popf
inc
pushf
pop
sub
les
and
int
testl
mov
rcrl
dec
or
dec
repz
inc
jno
popa
jg
mov
scas
sti
add
test
hlt
fistpll
or
jle
pop
pop
or
test
xor
cmp
imul
and
or
aas
fmuls
shrl
inc
sbb
insl
stos
lcall
inc
movsl
or
aas
lahf
sub
daa
jg
rol
cmp
and
ret
cmpl
push
ljmp
into
imul
mov
lds
mov
shll
mov
stos
or
cltd
jo
xchg
jo
loope
push
inc
dec
inc
jg
aam
add
dec
mov
jo
fiaddl
repnz
adc
push
inc
mov
xor
into
subl
inc
loope
push
shll
inc
ficomps
mov
scas
repnz
mov
insl
cld
xchg
push
jae
and
cmpsb
fimuls
jp
ret
lcall
inc
add
stos
mov
inc
or
xor
sbb
fmuls
movsl
mov
mov
mov
aas
call
inc
pop
in
jle
push
mov
mov
out
and
ror
mov
inc
mov
pop
pop
mov
test
push
cltd
push
aaa
jle
xor
cltd
cmp
jb
pop
mov
ja
test
gs
pusha
es
mov
jp
mov
mov
mov
mov
jge
pop
clc
cld
sub
cmc
push
mov
adc
in
or
jae
sub
loope
fs
ret
loope
dec
adc
jl
or
pop
and
out
std
xor
popf
push
jmp
push
jnp
xchg
mov
test
push
das
adc
lret
test
fmul
mov
add
mov
ret
mov
push
cmp
jns
xchg
sbb
jne
xchg
mov
enter
jb
aad
test
jmp
inc
mov
out
pop
push
mov
sbbl
pop
sub
cltd
subb
jle
inc
aad
rcl
cmp
mov
cmp
mov
xor
lds
xchg
sub
les
mov
sbb
jl
pop
imul
push
and
or
cmp
enter
push
or
mov
addr16
jecxz
das
scas
call
cmpsb
cwtl
xor
sbb
adc
fdivl
bound
negb
inc
xchg
adc
movsl
xchg
orb
inc
mov
aam
jo
mov
xchg
aad
pop
adc
dec
mov
sub
test
and
mov
pop
sbb
pop
sub
jmp
mov
ret
test
dec
pop
mov
fwait
sub
mov
adc
dec
mov
cmp
xstore-rng
cmpsl
pop
imul
arpl
cmp
stos
mov
cmp
inc
xor
mov
mov
inc
push
fdivrp
mov
jo
xchg
mov
pop
stc
bound
movsb
out
daa
andl
movsl
sub
xchg
pop
mov
enter
daa
or
popa
xor
adc
adc
iret
inc
js
and
xchg
sahf
xchg
jecxz
loopne
imul
aad
lret
fcomps
cmp
lods
fs
cmp
ss
push
xor
popf
xchg
pop
popf
imul
popa
or
mov
gs
mov
mov
inc
xchg
xchg
fwait
in
fwait
js
std
jae
push
popl
push
inc
stos
mov
mov
xchg
inc
nop
xor
xor
cmpsb
sub
sahf
cltd
pop
jge
popa
mov
mov
call
mov
sbb
pop
icebp
mov
adc
jecxz
jne
jl
mov
mov
pop
jbe
pop
inc
jp
and
mov
repnz
mov
mov
mov
js
outsb
xchg
mov
cmc
or
fisubl
movsl
lret
and
xchg
mov
in
push
inc
flds
mov
sub
lods
cmp
mov
loope
fsubrl
add
insl
and
and
jmp
out
cwtl
into
push
pop
sti
nop
jns
push
adc
insb
stos
xchg
movsb
add
mov
es
push
mov
imul
xchg
je
mov
lods
fstpl
fwait
test
fldenv
jecxz
xor
aas
rclb
dec
inc
mov
push
sarl
ja
cmpsl
ret
ds
mov
cwtl
decl
cltd
out
and
sti
xchg
cmpsb
mov
xlat
out
sbb
xor
mov
xor
mov
not
sbb
movsb
cmpsb
mov
and
pusha
rolb
mov
out
repnz
je
rolb
push
add
and
js
push
lock
dec
stos
test
pop
call
xor
arpl
fcom
dec
pop
dec
xchg
inc
sbb
repnz
gs
mov
aam
gs
addw
push
jl
mov
js
inc
popa
daa
addr16
mov
and
cltd
clc
push
mov
sub
cmpsb
or
and
test
mov
inc
shll
mov
ss
dec
mov
test
push
push
add
or
scas
popa
rolb
push
dec
sti
cli
sbb
add
inc
loope
add
inc
inc
xchg
test
push
shlb
push
divb
push
imul
std
ror
lods
in
jge
popf
stos
lods
adc
mov
bound
push
subb
ljmp
jne
in
xor
jnp
sub
cmc
xchg
mull
cwtl
mov
fs
pushl
add
insb
pop
pop
je
outsl
jo
pop
neg
popf
addl
rcl
pop
sub
int3
xchg
dec
mov
call
shlb
cmp
cmp
sub
mov
js
les
dec
ljmp
icebp
adc
roll
fsts
dec
cmp
adc
lods
mov
push
mov
in
add
push
dec
es
pop
jae
nop
fbstp
test
mov
xchg
daa
cltd
cmp
out
sbb
mov
mov
adc
xchg
inc
pop
add
push
push
cmp
jne
ja
push
shll
pop
jmp
mov
or
adc
lods
push
jno
cld
arpl
mull
movsl
xchg
xchg
xchg
jmp
popf
pop
dec
jge
scas
test
test
subl
dec
or
int
xchg
sbb
dec
pop
clc
and
and
sbb
aaa
loopne
mov
xor
push
xor
cmc
ret
mov
mov
loope
mov
iret
jo
outsl
lret
in
mov
aad
js
ja
imul
std
dec
std
hlt
jecxz
dec
xor
stos
mov
push
push
movsl
cmp
rorb
and
mov
mov
test
xchg
ret
es
ret
pusha
jl
mov
jmp
and
add
dec
push
sub
test
lds
cmpsl
mov
mov
insl
cld
sbb
and
adc
jnp
push
xor
jb
ds
mov
xor
ficomps
add
sub
test
mov
adc
out
lds
popa
mov
ljmp
pop
push
sbb
into
int
dec
stos
dec
test
mov
mov
push
xlat
pop
icebp
lods
adc
ret
rcr
pop
or
xorb
cmc
or
push
pop
xor
mov
icebp
lea
sar
adc
dec
pusha
inc
adc
mov
into
or
in
xor
divl
jno
sub
mov
push
gs
pop
jp
cmp
fldt
outsl
inc
je
jg
and
nop
cmp
mov
stc
xor
xchg
sti
enter
jo
out
inc
loopne,pn
js
lds
or
mov
cmp
ja
dec
jecxz
sub
popa
xchg
hlt
icebp
push
and
addr16
pusha
call
hlt
sub
sahf
jmp
outsb
sbbl
das
sbb
imul
xchg
mov
sti
jle
lods
sub
push
jb
sub
sub
xchg
in
xchg
enter
mov
insb
cmp
leave
clc
sarl
jle
ljmp
mov
into
push
sar
repnz
jnp
mov
add
mov
ja
js
mov
loope
in
fisubrs
lods
fsubrl
sbb
xchg
cmp
mov
out
xor
fldcw
jns
jno
sub
daa
testl
pop
data16
pop
repz
mov
popa
pushf
aaa
imul
inc
sub
call
jg
je
push
jnp
sbb
in
pop
aas
int3
xor
and
out
sub
xchg
pop
jne
inc
ljmp
addb
in
pop
dec
mov
dec
mov
movsb
add
cmpb
popf
lcall
sbb
loop
xor
fcmovb
test
and
in
pop
popf
xchg
cmp
jne
jns
push
aad
insl
jae
xchg
arpl
xchg
scas
jle
sahf
mov
lods
leave
lods
sub
pop
mov
mov
idivb
push
push
push
xchg
out
idivl
or
outsl
cwtl
add
ret
hlt
hlt
fistpll
cpuid
sbb
es
xlat
push
lock
nop
cmpsl
mov
rcll
ljmp
pop
mov
loopne
mov
outsl
dec
testl
pop
pop
pusha
faddl
outsl
lret
adc
movsl
and
es
out
test
dec
call
lahf
add
in
sbb
jo
test
movsl
add
enter
xor
scas
xchg
or
in
sahf
data16
jb
fwait
cld
cltd
add
lea
mov
lret
test
fstps
lea
mov
push
icebp
das
xchg
jbe
mov
fdivrl
pop
cmp
pop
push
pusha
push
sbb
inc
push
scas
loopne
fcmovne
imul
add
movsl
push
push
lods
clc
push
out
in
inc
add
arpl
iret
cli
sbb
dec
es
cmpsl
out
xor
xchg
or
lea
mov
xor
xchg
insl
popf
clc
aad
rorb
les
rcrl
inc
gs
sbb
rcrl
push
cmpsb
mov
sub
ret
aam
lock
push
and
cwtl
mov
movsb
jge
push
pop
test
push
lods
dec
outsl
mov
pop
jg
hlt
inc
punpckhwd
in
call
imul
idiv
std
inc
or
incb
bound
pushf
lods
xor
xor
inc
push
es
lea
shlb
jbe
lcall
push
mov
xchg
xor
outsl
js
out
stos
dec
inc
or
insb
mov
mov
pop
jnp
hlt
pushf
push
fs
mov
mov
cmp
jb
or
stos
decb
inc
hlt
mov
pop
mov
pop
fcoml
xor
sbb
push
das
sti
fidivl
ja
cwtl
mov
or
stos
insl
push
inc
daa
imull
mov
dec
sub
add
int3
sub
ret
sti
xor
pop
and
dec
fcoms
in
mov
push
nop
add
lret
xlat
mov
stc
aaa
mov
arpl
pusha
cmp
adc
xchg
loope
jp
cmp
dec
fmuls
fmulp
push
xor
inc
imul
jo
das
mov
inc
aam
lret
jb
test
push
jmp
sbb
xchg
mov
fcoml
pop
xchg
shlb
dec
sbb
ret
xchg
fisubl
das
repz
sahf
or
das
cmpsl
jnp
rcr
pusha
shlb
adc
or
lock
jmp
inc
dec
push
pop
or
jne
ja
mov
sbb
in
jg
hlt
mov
outsb
in
xor
or
out
push
xchg
mov
xchg
jo
int
pop
xlat
shlb
push
aas
and
ret
loop
inc
rorl
push
mov
loopne
push
inc
cmpsl
mov
ret
mov
sbb
cmpsb
inc
repz
loop
dec
cmp
out
mov
pop
icebp
adc
repz
push
xor
push
sbb
dec
insb
or
ja
inc
popf
adc
sbb
sub
int
pop
adc
call
adc
push
sahf
jecxz
mov
in
mov
pop
and
jl,pt
stos
lods
les
push
and
gs
or
iret
daa
les
stos
bound
ljmp
outsl
add
popf
xchg
sbb
mov
pop
and
adc
pop
fisttps
decl
pop
cmp
aad
inc
aad
mov
mov
adc
mov
adc
cmp
lahf
out
adc
xor
std
hlt
or
inc
sbb
out
sti
cmp
incl
or
inc
addb
ss
repnz
jmp
adc
or
xorl
scas
dec
hlt
outsb
and
push
push
adc
push
push
dec
sbbb
cmp
rolb
dec
stos
hlt
push
sub
push
push
xor
stos
sti
push
or
add
psubsb
imul
and
jae
add
pop
mov
or
jo
xor
mov
ficoms
ljmp
push
and
xchg
dec
into
push
push
fs
mov
and
mov
cmp
push
mov
in
insl
mov
test
seto
jg
pop
popf
es
loope
xchg
scas
xor
out
xchg
in
loop
and
aad
ljmp
jae
loopne
test
adc
mov
inc
mov
js
jp
ret
push
jg
mov
dec
fldcw
push
out
rol
dec
pusha
int3
fistps
fucomp
add
ret
xchg
les
adc
mov
cmp
fdivrl
inc
or
pop
arpl
cld
mov
sbb
pushf
test
xor
jae
jb
dec
lds
pushf
jg
in
dec
out
adc
ds
pcmpeqb
jo
add
icebp
pop
pop
cld
fs
fs
outsl
or
ja
ja
cs
je
clc
je
xchg
mov
push
inc
fiadds
jl
adc
pushf
cmp
adc
pop
jg
jg
xchg
test
loop
ds
push
push
mov
in
aas
mov
xor
imull
and
mov
movb
repnz
ffree
xor
scas
cmp
mov
shll
and
test
xor
and
jmp
dec
shrl
pop
jo
mov
push
mov
or
mov
faddl
fmull
dec
inc
stc
sbb
dec
shll
sub
cwtl
scas
int3
xlat
mov
jns
push
loop
cmp
cld
lds
mov
hlt
pop
jmp
out
movsl
repnz
xchg
sbbl
outsb
mov
mov
inc
or
mov
mov
adc
cmpsb
mov
adc
lods
pushf
loopne
or
xor
out
jmp
xchg
fists
fcoms
sub
inc
cmpsl
jae
and
cld
or
dec
mov
dec
icebp
push
das
sub
xor
cmpsb
lods
mov
outsl
xor
std
hlt
mov
sbb
mov
sbb
mov
sub
lret
test
es
inc
cwtl
mov
push
jp
xorl
sahf
int
or
test
out
push
stc
and
add
divb
xchg
pusha
pop
sub
lock
mov
loop
fcomi
data16
and
push
xchg
sub
inc
pop
mov
xor
les
loop
push
mov
test
sbb
test
test
rorb
nop
cmpl
xor
inc
je
repnz
sbb
jmp
loopne
mov
add
scas
scas
lret
dec
xchg
jl
cmpsl
jne
cmc
mov
ficomps
mov
sbb
jb
shrl
in
cmpsl
rep
aad
stc
and
popf
ret
jbe
fcomp
inc
arpl
dec
jne
mov
cmpsl
or
xor
cld
cwtl
call
roll
out
xchg
lock
jge
and
out
lea
popa
outsb
and
cmp
clc
mov
push
stos
sub
jo
scas
mov
imul
jae
or
push
int3
pop
into
int
pop
mov
ja
cld
aam
test
pop
iret
roll
cmpsb
test
mov
bound
insl
add
insb
cmp
cltd
adc
in
cwtl
cmp
add
or
or
sub
scas
imul
sbb
enter
and
mov
mov
or
pop
cmc
adc
das
jne
cmp
clc
jae
dec
js
xor
lcall
mov
insb
loop
sahf
pop
sub
gs
aaa
xor
popf
rorl
sti
pop
mov
subb
xor
sarb
push
lahf
shll
lret
lods
or
adc
std
cmp
into
xlat
jno
push
xor
sti
cmpsl
out
mov
lock
inc
mov
mov
or
pop
add
mov
sti
imul
inc
jbe
inc
xor
ds
or
gs
cwtl
pop
clc
or
les
xchg
ret
push
lds
jle
cwtl
mov
enter
xchg
push
rcrl
sbb
cmp
inc
imul
divb
add
push
shrl
sub
sbbb
jg
jmp
int3
dec
mov
mov
rolb
cmp
out
ljmp
pop
mov
iret
shr
fisttps
pusha
mov
jno
fsubl
fistpll
aaa
sub
std
adc
mov
jne
arpl
add
mov
mov
sub
sahf
stos
ret
test
daa
push
jb
cli
movlps
cwtl
push
ja
imul
and
rclb
lods
sub
or
mov
and
jno
stos
pop
mov
adc
pop
mov
or
jo
pop
clc
mov
cmp
sbb
bound
aam
loope
adc
xor
dec
pushf
xlat
cs
jl
outsl
mov
lret
cmpb
lock
mov
jnp
ret
cmp
jge
sub
fabs
adc
sub
fldt
repnz
icebp
cmp
xchg
inc
idivl
incb
push
sti
push
enter
cmpsl
lods
cld
movsb
xchg
cmp
fisttpl
test
sub
bound
into
dec
jae
push
cmp
sbb
jge
lods
scas
jns
das
pusha
push
addr16
pop
aam
jecxz
pusha
lods
fstpl
dec
mov
sub
int
jmp
add
and
fimull
cmp
fs
data16
sahf
jo
mov
jno
aam
and
mov
adc
pop
out
pop
add
push
sbb
call
stos
jne
push
pop
and
cltd
inc
cs
push
roll
in
mov
loopne
ficoms
xchg
push
jmp
aas
jns
clc
ret
imul
or
cmp
test
nop
loope
xchg
rorb
or
popf
push
cmp
dec
fildl
push
pusha
lret
ret
mov
sbb
sbb
sbb
popa
inc
je
push
lods
mov
and
cld
pop
pop
jge
ficoms
cmpsl
jge
xor
shl
stos
testl
pop
scas
push
sti
mov
out
and
mov
cs
es
outsb
outsb
in
sahf
cmp
aam
sti
mul
cs
lret
mov
dec
test
lcall
fnstcw
push
repnz
sbb
lret
fld
jl
jp
hlt
pop
xlat
and
orb
ljmp
lahf
fsubrl
cwtl
dec
and
xor
ja
pop
sub
mov
mov
xor
nop
lret
js
xor
push
cmpl
das
subb
mov
jne
sbb
lret
imul
jl
jne
pop
in
push
xor
jo
mov
hlt
das
adcb
push
stos
xor
shr
cmp
aas
ret
pop
lea
push
sbb
mov
adcb
mov
mov
imul
orl
mov
cmpsb
scas
jp
shll
add
push
mov
jns
add
lret
inc
mov
push
lret
fwait
jne
pop
or
mov
mov
adc
aam
fcompl
aaa
sbb
sub
cmp
xchg
adc
inc
sub
mov
mov
into
cld
out
aad
clc
mov
iret
stc
das
add
or
sub
cmp
sahf
xchg
adc
mov
nop
mov
shll
push
roll
pop
pop
sbb
shll
std
push
xchg
loope
and
xchg
jecxz
lret
lods
cs
stos
shlb
sub
jo
data16
outsl
sbb
mov
sub
out
sarb
sbb
movsl
or
mov
cmp
and
inc
mov
and
fsubrs
mov
leave
repz
jbe
lahf
aaa
loopne
in
shl
mov
dec
aas
push
mov
and
sbb
fisubs
or
fstp
xor
fmul
pop
cltd
mov
sub
test
js
inc
arpl
fstl
mov
jne
adc
repnz
cmp
stos
mov
mov
cmc
fwait
out
arpl
out
iret
mov
xchg
enter
cli
pop
xor
and
out
bnd
sti
ret
sub
popa
adc
xchg
push
popf
and
mov
mov
cmp
outsb
outsb
inc
outsl
mov
mov
push
fldenv
push
inc
mov
ret
mov
aas
push
pop
mulb
inc
pop
push
popf
dec
pusha
cmp
outsl
jge
push
and
out
mov
cs
test
mov
pop
xchg
fsubrl
jmp
xor
or
repz
push
repz
and
push
icebp
jne
nop
mov
lods
push
push
lea
outsl
pop
fistl
icebp
dec
lods
lock
lea
fbld
jbe
or
or
fwait
mov
pop
mov
int3
mov
aam
lcall
stc
rcl
mov
adc
xchg
adcl
jp
les
inc
movsb
pop
adc
into
jbe
pop
adc
xchg
adc
std
push
sahf
fsubl
out
sbb
cmp
or
rcl
fmulp
inc
movhps
xchg
iret
pop
dec
stos
push
rclb
cmp
sbb
add
cmp
cs
jl
rol
jg
sub
stos
xor
push
sbb
add
cwtl
sub
hlt
sub
aaa
lret
lods
xchg
inc
push
adc
mov
cmp
das
jb
mov
dec
pop
shll
cmp
sbb
loopne
pop
pop
leave
loope
mov
pushf
jne
dec
cli
add
inc
mov
iret
cmpsl
inc
sbb
mov
into
lods
rorl
push
call
sbb
in
rorb
gs
xchg
scas
out
es
data16
popf
xor
add
std
mov
jp
mov
push
arpl
add
mov
sti
inc
jp
xchg
sbb
mov
dec
push
iret
xor
cmp
inc
lcall
call
imul
cmpsl
ljmp
mov
insl
sbb
xchg
inc
dec
or
adc
test
mov
daa
js
inc
push
inc
testl
or
jp
mov
dec
xchg
jecxz
and
shlb
jbe
cmp
test
dec
jno
jg
out
xchg
and
inc
lahf
into
fwait
pop
aas
in
out
jg
pop
adc
and
mov
mov
rsqrtps
pop
imul
push
dec
inc
mov
clc
stos
popf
mov
je
jl
add
xchg
aad
xor
mov
lret
mov
adcl
in
lahf
sub
sahf
jbe
inc
and
das
outsb
hlt
xor
pop
fdivrs
clc
push
xor
sbb
cmc
movsb
jmp
adc
mov
or
int
jp
cli
push
in
test
ljmp
pop
pop
fisubrs
rcrl
dec
sub
inc
test
in
mov
mov
out
pop
pusha
hlt
sbb
arpl
sbb
in
sub
ja
sbb
mov
mov
add
imul
loope
pop
xor
out
jmp
in
test
push
in
scas
mov
mov
jecxz
jae
pop
mov
mov
out
enter
fsubrs
je
pushf
mov
mov
fs
adc
jns
movsl
mov
mov
cmp
fidivs
loopne
pop
or
call
dec
push
push
push
push
mov
vprotd
cltd
jo
lahf
push
aas
pop
cmp
add
adc
inc
xchg
xchg
je
das
lds
sub
testl
dec
push
rcrl
std
sti
js
mov
leave
fmull
jno
dec
ljmp
pusha
insl
int
xchg
lds
and
pop
popa
mov
sbb
mov
in
xorl
cld
and
or
adc
cli
pop
call
in
pop
movsb
xchg
adc
inc
jae
popa
cwtl
sbb
mov
jae
cmp
lret
pop
sub
punpcklbw
scas
cwtl
jnp
adc
fsubr
mov
sub
inc
mov
sti
sub
movsb
mov
inc
leave
pop
clc
out
cmp
xchg
jo
mov
adc
mov
and
into
outsb
jmp
stos
outsl
sbb
sbb
or
movsb
xchg
sbb
pop
adcb
fsubs
in
cmp
jae
sbb
insb
sbb
push
mov
fs
xorb
fcompl
xchg
xchg
repz
fildl
adc
xor
scas
ficoml
sbb
and
ror
add
xchg
push
xchg
xlat
adc
es
pop
loopne
in
fcomps
test
aas
mov
aas
mov
je
xchg
cltd
mov
pusha
mov
mov
cs
dec
xor
sub
xchg
lahf
sbb
push
into
push
lret
inc
mov
xchg
fdivr
pop
insb
imul
lds
jl
jbe
pop
addr16
jns
gs
lret
or
jmp
cmp
cltd
push
outsl
call
pop
jnp
sti
loop
ds
cmpsl
mov
cli
je
mov
sub
hlt
push
dec
iret
lods
jne
popa
ljmp
in
lods
rcrl
fistl
xor
in
rclb
lods
mov
cmp
jle
push
sub
ja
adc
enter
ss
pop
push
sbb
ss
mov
push
xlat
dec
cltd
fstpt
imul
out
arpl
sub
xchg
jo
aaa
pushf
mov
sbb
ss
shrl
repz
pushf
mov
mov
cmpsb
sub
mov
inc
push
and
xor
pop
fstps
fildl
xchg
dec
mov
and
dec
cmc
dec
dec
add
mov
pop
xchg
scas
push
movsl
jg
mull
push
outsl
nop
aas
mov
pusha
sub
imul
sub
or
js
mov
mov
inc
sub
pop
mov
fnstcw
addl
lock
int3
icebp
bound
or
int3
xchg
lds
push
dec
cltd
ret
push
or
pop
icebp
bound
and
sbb
cwtl
push
sbb
mov
inc
jb
sbb
jb
out
push
or
insb
sti
jmp
pop
bound
call
mov
mov
inc
pop
pop
jecxz
stos
hlt
xor
mov
xor
adc
fstps
cmp
mov
ret
cmp
add
aad
push
movsb
mov
and
cmp
jo
mov
lret
shrb
xor
sbb
sub
pop
sub
dec
daa
jbe
sarb
and
jge
sub
std
add
and
xchg
ficompl
inc
or
adc
jbe
shrl
aam
xor
outsb
cs
add
pop
cli
pop
add
ss
or
pop
cwtl
rol
divl
pop
stos
ljmp
cwtl
xchg
pop
cmp
push
out
imul
insb
sbb
dec
fstps
xchg
xchg
or
lods
push
jb
mov
mov
movsb
or
ds
push
push
outsl
mov
xlat
push
xor
ss
sbb
mov
push
popf
push
lods
lock
push
rcrb
inc
add
mov
push
subb
adc
pop
test
push
frstor
or
and
mov
jne
outsb
sub
sub
mov
ss
lcall
inc
fdivr
xchg
mov
pop
inc
inc
or
inc
push
stc
fstps
cmp
push
out
out
or
mov
das
cltd
lock
rcl
jo
pop
les
sbb
imul
std
cmc
or
out
sub
push
inc
cs
les
sbb
sbb
pushf
scas
jo
fimull
mov
mov
fists
jo
mov
cs
aas
sti
test
cwtl
les
and
fsubrs
mov
inc
outsl
sub
dec
lods
sbb
cmp
or
mov
faddl
mov
movsb
inc
add
aaa
fdivs
and
test
cmp
cmp
jmp
and
xor
xchg
xchg
ret
xchg
dec
jo
push
xor
testl
loopne
xor
mov
ds
andl
lock
repz
fldln2
mov
notb
pushf
pushf
fldt
roll
push
or
push
out
sti
mov
sbb
test
push
loopne
ljmp
pop
xchg
xlat
mov
lret
cmc
call
dec
insl
insb
popf
mov
lcall
mov
push
test
ljmp
scas
or
xchg
mov
sbb
xchg
cmpsb
cltd
jne
cmp
insl
in
cli
dec
mov
fldt
dec
pop
loope
clc
adc
mov
mov
xchg
imul
shl
pushf
jb
je
mov
test
inc
aaa
sbb
dec
cld
cmp
or
xchg
jns
jle
mov
cmpsl
les
mov
jle
sub
es
mov
xor
mov
sub
and
mov
inc
aad
xchg
jge
rol
adc
adc
test
lods
pop
sahf
lcall
jns
jg
pop
shlb
xor
and
scas
adc
shl
aam
icebp
jg
je
fistl
xor
repnz
mov
cmc
loopne
xor
inc
jb
mov
pop
inc
hlt
or
insb
out
in
ljmp
jae
pop
dec
aad
movsl
mov
test
or
mov
push
adc
int3
aas
adc
xchg
les
aas
adc
jno
cwtl
iret
or
mov
adc
mov
xor
mov
jmp
mov
notl
and
jle
jle
inc
mov
inc
into
sbb
mov
sub
xor
divb
jnp
jnp
push
ss
pusha
pop
cmp
out
jg
insb
xor
inc
dec
pop
loopne
jne
loope
inc
repz
repnz
test
loope
test
scas
jmp
mov
inc
popa
jns
stos
xchg
add
pop
cmpsl
adc
shrb
pusha
mov
imul
das
adc
sub
imul
in
xor
dec
shlb
push
fwait
sarb
ret
dec
in
rorl
lods
mov
mov
cli
scas
mov
sbb
icebp
outsb
lret
fidivrl
int
sbbl
and
mov
shll
xchg
addl
pop
fildl
adc
sbb
mov
xor
fstpl
lret
mov
iret
rcr
mov
or
jo
mov
popf
xor
jns
psraw
push
xchg
leave
or
cltd
push
int
add
jne
and
rcl
push
les
add
je
sti
xlat
stos
sub
mov
es
fldenv
xchg
adc
lock
adcl
stc
xlat
adc
jle
xor
dec
and
xchg
pop
push
arpl
ds
sbb
xchg
orl
adc
jno
dec
sub
cmc
mov
cmp
lcall
dec
subb
es
fwait
or
scas
jne
scas
dec
xchg
insb
lods
hlt
cmp
stos
jl
clc
mov
int
mov
lahf
repnz
pop
xchg
mov
shl
leave
popf
fcmovu
daa
loopne
jecxz
push
sbb
push
test
loop
lods
mov
mov
cmp
fsub
mov
ja
jg
ss
push
and
sbb
inc
shlb
xor
jae
int3
repz
aaa
jnp
ret
and
xchg
cmp
jnp
pushf
xchg
test
adc
pop
cmc
push
inc
cmp
inc
xchg
fstpt
ret
lock
cltd
add
cmpsb
cmc
jbe
aad
inc
fsubrl
cld
mov
sahf
push
or
rol
insb
add
cmpsb
jecxz
push
inc
inc
cwtl
or
sub
jecxz
in
icebp
int
gs
call
pop
push
ljmp
lea
xor
adc
push
mov
pop
cwtl
in
outsl
mov
cwtl
cwtl
outsb
aaa
and
sbb
jno
jp
scas
ret
mov
in
xchg
loop
sub
add
loope
test
fdivl
mov
call
or
test
inc
mov
and
mov
sahf
popf
cmp
cmp
loope
fsts
js
cs
std
nop
dec
mov
mov
mov
dec
outsb
mov
and
mov
iret
ja
loopne,pn
lods
jl
xchg
xchg
lahf
je
movsl
inc
and
jae
leave
insb
push
sbb
ret
fs
daa
inc
mov
shlb
cmp
aas
mov
inc
mov
hlt
mov
outsb
sbb
mov
dec
xor
shrl
cmp
jge
lds
movsl
loopw
dec
jb
sub
jno
add
xchg
out
add
sti
inc
inc
dec
pop
sub
xchg
inc
fadd
sar
jge
push
mov
ja
lcall
mov
or
or
add
insb
lret
pop
jmp
cmc
cmp
add
add
pop
lcall
sub
popf
nop
popf
inc
notl
aad
push
inc
cmpsl
sbb
mov
loopew
test
sub
int3
lds
jo
mov
or
adc
xor
and
stos
icebp
mov
outsb
call
int3
jnp
das
adc
pop
push
jge
lods
aaa
and
neg
flds
pop
xchg
stos
and
jno
adc
inc
mov
and
xor
sub
dec
mov
jns
jmp
mov
sub
not
ror
and
push
scas
cld
xchg
lret
cmp
mov
leave
int
es
test
arpl
push
mov
imul
adc
mov
mov
in
jl
or
xchg
cltd
push
push
lret
rcr
ds
and
addb
xlat
sub
into
repz
aad
jl
inc
xor
les
push
lcall
jne
mov
xchg
je
push
xor
insl
imul
gs
sarl
and
xor
push
scas
dec
outsl
movsb
adc
xor
or
rolb
dec
mov
jbe
lds
sub
cmp
mov
test
push
push
inc
into
adc
aas
sbb
pop
repz
movsb
adc
push
sub
in
mov
xor
orb
add
pop
cmpl
dec
pop
incl
push
dec
jo
add
in
and
xchg
int
dec
jmp
xchg
js
xchg
adc
arpl
jbe
dec
and
cmp
sub
or
ficoml
outsl
ret
xchg
jb
aam
shlb
test
loop
push
pop
xchg
scas
pop
jne
push
push
lahf
jl
cli
push
aas
dec
adc
cmp
insb
or
out
pop
dec
insb
mov
add
mov
add
mov
fmul
shr
xchg
repnz
xchg
mov
fs
inc
pop
inc
or
sub
sub
out
jne
jg
adcb
or
loopne
inc
stos
aam
or
cmp
ja
jnp
leave
and
stos
int3
add
in
push
mov
mov
pop
pop
add
push
sub
push
push
add
cmpsl
push
xchg
sub
repnz
aaa
ljmp
hlt
stc
out
lret
mov
stos
xor
adc
add
mov
out
mov
or
cmc
or
mov
jne
bound
xchg
jg
add
icebp
jbe
mov
push
ret
outsb
mov
pop
pop
shl
repz
and
mov
in
iret
roll
ret
xor
js
pop
outsl
add
xchg
dec
mov
ds
cmp
out
mov
lret
fcomip
push
lock
jmp
mov
xor
jmp
arpl
jmp
or
lret
test
out
add
cmp
sahf
fsts
mov
outsb
add
ficompl
adc
inc
sbb
pop
fsts
and
lods
pop
hlt
mov
pop
add
in
xorb
cmp
mov
stos
lea
xchg
lods
sbb
and
or
clc
pop
lahf
clc
mov
lock
pop
or
or
pop
sbb
pop
cmp
xchg
cmp
cmpsb
mov
arpl
sub
int
or
ftst
cmp
mov
and
inc
movsb
test
sarl
leave
cmp
outsl
or
loop
and
or
imul
iret
ret
aas
push
dec
xchg
cmp
lcall
sbb
in
pop
out
mov
jae
fsubr
bound
adc
cmp
sub
add
add
mov
loop
les
and
test
cmp
jp
in
or
cmp
jmp
cmp
inc
jle
js
pop
jg
add
ljmp
cmc
sbb
enter
hlt
pop
pop
roll
les
mov
jge
mov
xchg
xor
jl
fiadds
mov
mov
sbb
cld
iret
or
icebp
jno
out
mov
orb
bound
fdivp
sub
decl
push
pop
into
pop
jbe
iret
mov
rclb
into
loope
pop
inc
enter
mov
push
iret
movsl
adc
enter
dec
mov
dec
leave
out
pop
lock
dec
add
icebp
stos
imul
dec
and
ret
dec
mov
stos
dec
stos
pop
pop
sub
dec
pop
dec
mov
add
les
cmp
out
lods
cmp
movsb
out
cmp
pusha
xlat
scas
mov
adc
cli
xor
dec
push
jno
mov
scas
and
mov
jge
leave
mov
mov
repz
stos
or
nop
lahf
sbb
cmc
mov
rcl
jecxz
pop
shll
sub
mov
and
and
lret
stos
jno
sti
and
or
adc
sub
and
arpl
mov
shrb
xor
in
jecxz
xor
popa
shrb
cltd
ficompl
mov
repnz
jle,pt
rorb
out
sbb
stc
cltd
mov
adc
mov
or
adc
cs
cld
jp
ljmp
pusha
or
js
pop
lahf
and
mov
xor
lds
lcall
xchg
ret
insb
push
inc
loopne
jae
aaa
xor
add
dec
pusha
out
sbb
pop
pop
shlb
cmc
xor
mov
add
adc
dec
xor
sti
sahf
xchg
out
mov
mov
out
out
dec
push
and
imul
sbb
add
push
jbe
ja
xchg
scas
push
xchg
cmp
call
mov
pop
popa
fsubl
pop
pop
out
sub
lea
mov
lods
in
add
xchg
in
insl
sbb
inc
fiadds
mov
popf
lahf
add
jl
sbb
fs
hlt
and
repz
aad
add
outsl
jb
or
mov
mov
sarb
xor
cmp
stc
push
pop
lds
shll
nop
mov
adc
add
inc
add
mov
int
out
or
clc
stc
out
mov
out
push
sbb
pop
sbb
scas
mov
lcall
sbb
addr16
adc
addr16
sub
aaa
loopne
pop
push
incb
push
cmc
xor
sub
sarl
jae
jb
pop
mov
in
jge
call
cltd
cmp
bound
lods
and
cmp
cmpsl
mov
imul
mov
add
lock
cmp
mov
stos
mov
into
jecxz
repnz
repnz
repz
leave
sub
icebp
mov
xchg
outsl
fprem1
fs
fistpll
mov
pop
mov
jne
cmp
imul
inc
sahf
mov
data16
fstps
sbb
icebp
xor
mov
rorb
sub
ljmp
fdivr
cmp
push
jmp
mov
push
jb
repz
xor
dec
aam
aaa
jp
call
orl
xchg
arpl
hlt
fistpl
inc
dec
fcos
push
out
sbb
sahf
pop
fcmove
int
mov
jb
pop
negb
daa
pop
mov
adc
insb
xchg
fsubl
pop
xchg
popf
fidivrs
enter
insb
mov
mov
aam
das
or
or
xor
xchg
out
jno
jb
inc
inc
push
insb
fistpl
ret
out
xchg
jo
cs
or
shrl
adc
push
stos
xchg
div
aas
outsb
imul
pusha
stc
arpl
rorl
lock
repnz
loopne
out
cwtl
xchg
orb
std
adc
cs
and
out
call
pusha
sti
pop
cld
cmp
dec
fsubs
notl
lahf
dec
movl
xchg
movsl
pop
and
test
sub
cltd
ljmp
jns
sub
ljmp
xor
sbb
dec
mov
mov
icebp
fimull
fadds
sbb
push
inc
mov
or
call
push
push
dec
stos
rorl
xor
jge
iret
add
daa
stc
outsl
stos
mov
or
int3
idivl
pop
pop
jno
es
fimuls
in
mov
xchg
inc
je
jno
mov
popf
mov
nop
mov
ljmp
fcompl
or
sub
mov
pushf
cmc
rclb
push
call
sti
mov
test
xor
jne
mov
push
insl
sbb
nop
xchg
push
push
add
sub
jl
dec
inc
test
in
xchg
adc
mov
push
cmp
sbb
or
inc
sub
out
sti
sti
jge
push
sub
mov
fbstp
sub
fiadds
mov
mov
cs
pop
stos
mov
push
pop
mov
shr
fcmovbe
jb
pop
inc
or
sbb
popa
mov
mulps
push
xor
or
push
jg
pop
jge
bound
cmp
test
pop
leave
jbe
fists
and
xor
pop
and
add
mov
jp
jmp
in
xor
outsb
pusha
mov
mov
aas
stc
cmc
rcl
mov
aas
ss
inc
mov
mov
sub
subb
lret
in
stc
jns
cmc
int3
stc
stos
insl
or
pop
sub
out
sbb
aad
imul
insb
addb
test
test
stos
fwait
gs
or
ret
cmp
call
push
movsb
call
mov
xchg
sub
add
dec
adc
dec
addr16
in
stc
push
int
push
pop
xchg
repz
rcrl
xchg
mov
fstpt
mov
pushf
enter
ret
xchg
mov
leave
mov
mov
sub
or
stos
cmc
enter
cmpsl
jne
sbb
pop
int3
js
sbb
mov
sub
icebp
enter
in
dec
lock
pop
mov
das
mov
mov
or
lahf
pop
test
lcall
mov
mov
test
imul
pop
push
pop
pop
dec
mov
iret
pop
jmp
lahf
shl
out
mov
out
lahf
push
outsb
icebp
jge
test
sahf
and
dec
cli
jne
mov
xor
shlb
in
je
jnp
jns
pop
andb
outsb
outsl
inc
das
push
lcall
push
sbb
inc
mov
mov
fbld
jp
adc
stos
mov
push
lock
mov
in
out
sbb
push
xchg
scas
cmpsb
xchg
das
sub
mov
mov
loope
ja
ret
movsb
sub
mov
or
jge
rcll
push
jnp
int
loop
push
add
mov
mov
push
push
and
push
cmp
jmp
sbb
into
insb
rclb
imul
cwtl
in
js
mov
xor
sarb
pop
xchg
lds
fcompl
push
xchg
inc
mov
add
stos
jl
mov
jmp
scas
sahf
adcl
adc
test
and
mov
xchg
pop
aas
pop
push
sar
jnp
mov
rcl
cmc
dec
mov
dec
ret
push
push
mov
loopne
loopne
leave
mov
sbb
push
imul
decb
jns
xchg
inc
pop
out
mov
data16
mov
jbe
lock
fs
scas
test
dec
jmp
pop
pop
mov
mov
hlt
xchg
in
leave
and
dec
jnp
lret
js
jle
adc
cmp
pusha
mov
out
jecxz
adc
push
inc
jle
dec
ljmp
fcomps
lret
push
jb
repz
ja
dec
insl
dec
ss
mov
lds
popa
xchg
cmpsb
cli
or
hlt
fsubr
into
fisubrs
xor
sub
jge
popl
int
dec
repz
or
mov
or
sub
dec
movsl
dec
pop
ljmp
pop
addr16
lcall
adcb
and
push
mov
test
push
jb
or
mov
and
ret
sub
jle
test
into
call
pop
ficoms
lret
mov
sub
rcr
push
dec
cmp
fs
andl
into
xor
das
ret
xor
mov
popa
xchg
in
jmp
out
push
pop
mov
mov
pop
or
scas
dec
je
mov
push
stos
inc
pusha
sbb
fnstsw
add
jl
fldcw
fwait
icebp
dec
add
ss
loop
pop
xchg
stos
shr
jge
mov
mov
adc
adc
push
int3
inc
push
pop
and
stos
cs
test
ret
call
in
mov
mov
test
lods
outsb
inc
sub
out
mov
scas
xlat
and
cld
jne
xor
les
jl
pop
dec
repz
mov
inc
int
push
xchg
mov
push
jns
add
shlb
lret
ror
push
cmp
stc
pop
in
shll
hlt
jnp
xlat
xor
loop
arpl
mov
ret
jge
les
jb
das
xor
mov
mov
pop
and
and
push
push
push
or
sti
sbb
ds
jne
stos
cmpsb
pop
cmc
push
lea
mov
jbe
add
cmpsl
lret
push
aas
jae
decl
mov
mov
sti
inc
aad
add
sbb
les
dec
pusha
in
sbb
fidivl
sarl
cmp
mov
mov
sbb
xor
jge
shlb
jmp
dec
aad
out
xchg
js
add
add
xor
lods
andb
jge
jns
aaa
jne
les
sub
cli
lret
sub
mov
jnp
lahf
popf
mov
jbe
mov
and
xor
fstpl
adc
push
sbb
cmp
adc
pop
vmwrite
inc
imul
mov
movsl
dec
xor
negl
int3
lcall
dec
nop
movsl
push
cltd
inc
aas
ret
push
jle
lock
pusha
mov
dec
cld
push
and
lcall
into
mov
cmp
in
sbb
call
cli
test
add
pop
in
dec
das
lcall
sbb
int
add
cwtl
clc
or
xchg
push
adc
push
pop
push
and
and
lods
ss
and
je
inc
loopne
dec
mov
pop
mov
mov
fwait
sbb
or
or
or
pop
incb
mov
push
sbb
add
mov
sub
test
jnp
mov
in
push
cmp
xchg
dec
pop
pop
shr
xchg
sub
test
mov
push
sti
mov
dec
sub
outsb
lret
cmpl
nop
clc
mov
aas
rcrl
add
inc
xor
jae
pop
inc
cmp
mov
lock
jnp
movsl
jns
push
sub
clc
aad
aad
les
punpckldq
aas
ljmp
sahf
lahf
sar
movsl
sbb
outsb
daa
xchg
ljmp
movsl
in
roll
test
xlat
aam
xor
cmp
scas
inc
pop
dec
imul
adc
lret
cmp
fstl
push
push
push
mov
inc
sbb
add
xchg
cli
sbb
call
add
nop
xor
pushf
ds
idivb
test
push
mov
sarl
sub
dec
jmp
loop
dec
movsl
mov
fmull
mov
lret
lods
imul
imul
adc
movsb
int3
mov
cmp
xlat
jle
xor
push
jnp
lahf
pop
mov
dec
movsl
xor
rcrb
inc
or
xor
push
cltd
xor
test
sbb
mov
outsl
add
sub
orb
movsl
roll
outsl
push
xlat
data16
rcr
jno
xlat
or
xchg
lret
dec
push
adc
fsts
mov
mov
decb
jmp
xchg
mov
mov
push
sarb
xor
in
mov
xchg
or
adc
or
xchg
lods
push
inc
mov
dec
outsl
ret
xor
daa
mov
or
stc
sub
or
sbb
lret
outsl
mov
push
scas
inc
xchg
xchg
sbb
shlb
push
jecxz
jmp
arpl
imul
in
sbb
mov
jno
add
mov
sbb
sbb
adc
mov
and
pop
xchg
lret
je
pop
pop
out
push
jne
aas
notb
sbb
loope
lock
dec
lahf
mov
clc
insb
and
hlt
js
sbb
mov
cmp
dec
mov
int
into
aaa
icebp
xor
je
hlt
cmc
inc
sbb
addl
leave
add
sbb
sbb
outsb
push
sub
outsl
pop
in
xchg
or
shrb
or
insl
fs
mov
icebp
ljmp
test
fs
addr16
add
push
dec
mov
loop
in
or
mov
mov
xor
inc
lret
add
mov
scas
pop
sbb
push
pop
jl
push
fdivrl
dec
mov
leave
stc
fnstenv
jno
rcll
xor
loopne
push
loopne
cmp
into
mov
jl
hlt
test
dec
cmp
xlat
xchg
outsl
imul
push
addl
sarb
push
fucomp
push
pop
add
popa
sbb
in
push
cmp
movsl
stos
imulb
adc
cmp
stc
setne
xchg
jl
jb
call
xchg
adc
or
push
mov
mov
xor
sti
into
pop
sbb
shrl
pop
sti
imul
loope
dec
loope
jno
push
das
xchg
mov
cld
xchg
lret
shll
mov
orl
sub
out
inc
aad
push
test
aaa
out
xchg
out
imul
sbb
cmpsb
cmp
xor
mov
outsl
push
test
xlat
push
mov
fists
pop
shrl
ficompl
data16
data16
push
in
dec
sub
mov
xchg
iret
push
in
insl
xor
xor
lods
xchg
mov
cs
pop
xchg
cmp
test
clc
pop
in
add
shll
std
sub
lds
sbb
aaa
xor
insl
mov
int
mov
test
fnsave
cmp
cmc
add
mov
jp
icebp
fsubrs
outsb
divb
shll
insb
das
jg
lods
fildl
push
pop
push
out
inc
xchg
daa
xor
shll
cwtl
fistpll
push
jmp
jb
pop
add
test
mov
xchg
add
cli
sarl
test
xor
arpl
in
repz
xor
andb
xor
movsb
aaa
loope
fs
cmpsl
mov
sbb
sahf
into
fwait
les
scas
imul
sahf
push
icebp
cs
jne
push
xchg
adc
sti
cmpsb
pop
sarl
loope
or
and
out
xlat
mov
push
lds
xor
std
scas
and
daa
ja
lods
inc
popa
add
pop
loope
lret
in
push
cltd
add
push
test
dec
mov
dec
mov
lret
lret
ret
fs
insl
push
dec
mov
or
push
stos
in
dec
inc
mov
jp
or
dec
push
xor
cmp
mov
cmp
lret
xchg
cmp
cmp
mov
sbb
out
sbb
dec
xchg
pusha
fnsave
xor
or
sbb
sbb
mov
inc
bound
sbb
mov
xchg
mov
mov
loope
or
insl
add
lds
lret
jno
push
icebp
fwait
cmp
xchg
sbb
int3
pop
int3
enter
stc
adc
loop
push
cld
pushf
mov
lods
jl
dec
sub
dec
mov
push
mov
sbb
push
add
sbb
lods
jo
push
push
add
movsl
jbe
jbe
add
push
xchg
mov
test
insb
xor
aam
iret
sub
cli
mov
jb
mov
pop
jns
aas
orl
clc
fstpl
sub
mov
pop
jge
sbb
dec
stos
xor
and
aam
out
pavgb
in
mov
xchg
inc
fwait
jb
mov
pop
ljmp
mov
pop
ret
ljmp
icebp
xchg
adc
and
dec
cmp
repnz
out
push
xor
out
cmc
or
dec
and
or
cli
mov
xchg
push
mov
test
idivl
add
mov
xchg
xor
insl
cwtl
ret
cmpsb
pop
mov
out
mov
mov
gs
lahf
or
mov
ljmp
inc
test
pop
adc
addr16
pop
jmp
sbb
jns
ljmp
and
push
lods
or
sahf
cltd
aad
sub
jecxz
insb
jo
sub
pop
loop
inc
outsl
scas
add
or
pop
xchg
sub
test
ljmp
sub
ret
xlat
pop
out
jo
movsl
call
pusha
and
adc
adc
pxor
mov
sub
pop
cltd
inc
stos
nop
mov
aad
add
insl
fdivrl
and
sub
xchg
test
push
es
cld
int3
pop
push
jnp
ret
jecxz
cmp
outsb
jg
stc
lea
cmp
mov
adc
in
ja
jb
pop
mov
or
pop
or
ss
cmp
mov
jge
and
stc
jle
aaa
popa
push
add
in
dec
roll
xchg
iret
xchg
pop
push
cmp
sti
movsb
fidivl
out
dec
test
pop
sbb
movsl
fldenv
and
mov
rclb
xchg
jne
sbb
pop
inc
jl
repnz
mov
fsubl
in
add
enter
call
inc
or
xor
ret
pop
sbb
outsb
sub
sbb
addr16
shl
adc
loope,pn
int
add
imul
inc
pusha
adc
imul
sbb
sbb
sbb
or
xor
dec
lods
and
dec
mov
dec
jmp
nop
xchg
dec
xchg
fsubr
cmp
cmp
incb
test
jmp
mov
push
lock
fdiv
xchg
jne
jmp
repnz
dec
inc
lret
mov
imul
xor
sub
rcrb
cmpsb
mov
lock
cmp
shll
out
pop
arpl
mov
pop
addr16
into
mov
pop
repz
jle
ss
insb
inc
push
pop
insl
and
scas
ljmp
fildll
into
xor
fistpl
aam
sub
push
in
xchg
clc
lret
mov
adc
mov
hlt
out
rcl
push
adc
or
inc
je
out
and
or
andl
sbb
mov
add
or
jecxz
dec
xor
movsb
xchg
adc
and
ficoml
cld
add
mov
adc
pop
jo
xlat
fbstp
jle
leave
andb
stos
push
stos
or
addr16
leave
push
data16
pop
popa
cwtl
shll
int
cmpsb
scas
or
mov
rcrl
gs
lcall
xor
shrb
add
sub
in
ret
pop
int3
icebp
or
out
fiaddl
gs
dec
dec
xchg
mov
inc
sbb
test
fists
and
enter
fcoms
jbe
jbe
ret
jg
gs
iret
adc
jb
sub
add
xor
jl
dec
mov
mov
sub
cmp
add
sub
scas
sub
add
xor
sub
mov
leave
ss
lret
push
inc
push
gs
fldcw
lcall
jns
mov
pop
in
in
cmp
or
mov
mov
jle
pop
js
cmp
add
stos
sub
or
xchg
cli
and
add
add
cmp
jge
nop
fwait
mov
mov
adc
push
scas
mov
js
jmp
mov
mov
mov
in
xor
pop
xchg
cmp
adc
dec
ret
jbe
cmpsl
push
pop
in
fldt
mov
pop
cmp
std
sbbl
ss
mov
notl
pop
lahf
mov
testl
popa
test
fdiv
negb
mov
pop
adc
push
cmpsb
dec
jg
jo
push
mov
mov
cld
gs
add
inc
psubb
jecxz
mov
and
dec
mov
arpl
out
dec
add
rorb
ja
test
jecxz
aaa
dec
pop
pop
fincstp
mov
and
fwait
adc
dec
mov
dec
stos
pop
popa
and
fwait
or
dec
loopne
inc
xor
mov
mov
xchg
nop
popa
xor
jle
jle
or
loopne
inc
and
or
mov
sbb
cmc
iret
andl
lods
fiadds
in
dec
cld
jo
add
inc
test
pop
rcr
movsb
jg
sub
mov
jae
mov
push
arpl
or
push
push
mov
sub
sbb
loope
xchg
test
stc
sub
repnz
andl
mov
fs
mov
cli
pop
jp
loope
fnstenv
sti
push
mov
push
out
dec
or
movsl
leave
in
ljmp
ja
and
add
popf
fimull
add
jge
mov
data16
into
cmp
inc
lds
push
fistpl
sbbl
lods
bound
into
repz
arpl
fdivrs
out
outsl
and
pop
movsl
in
out
pushf
ljmp
leave
fsts
adc
call
fwait
cmp
fidivrl
or
pop
xor
into
dec
insl
movl
fsts
jae
iret
jns
cmp
mov
cmc
ss
add
xchg
adc
push
xchg
adc
pop
imul
jg
add
nop
pop
mov
jge
mov
cmp
sub
daa
fstpl
movsl
iret
sbbl
insb
and
jb
jae
mov
inc
imul
insb
aad
shlb
shr
push
xchg
mov
pushf
jnp
push
fcoms
jnp
mov
sub
mov
mov
jns
stos
icebp
jge
lock
inc
sub
aad
and
mov
mov
or
das
sub
xor
or
and
lock
mov
and
sbb
dec
xor
loopne
ficompl
add
sub
call
leave
and
jge
test
sub
ficoml
shrb
dec
loopne
fadds
sbb
mov
cmp
mov
xchg
add
imul
and
bound
xchg
lea
icebp
mov
lahf
movsb
add
insb
jnp
scas
int
sub
int
push
leave
dec
mov
add
lods
jns
clc
push
lds
pop
loop
aad
ror
xchg
xor
xchg
outsl
inc
into
sbb
setge
and
inc
gs
or
je
out
jl
data16
or
ss
mov
insl
js
dec
iret
push
rorl
dec
cmp
inc
rcrb
add
lahf
mov
mov
add
ja
sub
jne
shll
scas
lret
pop
out
jnp
cmc
or
fwait
dec
cli
lret
jnp
sub
cwtl
fsubp
jg
inc
adc
xlat
repz
pop
dec
scas
test
div
jmp
or
pusha
xor
mov
adc
jge
insl
mov
aas
mov
in
push
popaw
xchg
push
or
cld
sub
pop
sbb
jae
sub
sti
icebp
fisubrl
mov
sahf
and
addr16
test
xchg
call
sahf
fnsave
mov
cmc
out
adc
jb
xchg
jle
je
jge
xchg
pop
idivb
xor
cmc
pushf
ss
mov
dec
test
push
ficompl
outsl
nop
es
mov
xor
in
fidivs
jmp
mov
or
int
jno
or
mov
xorb
mov
call
in
test
xchg
and
and
pop
pop
add
cmp
in
adc
lods
das
adc
mov
inc
add
inc
jmp
xor
nop
xchg
ss
jmp
add
pop
ret
jbe
bound
sbb
into
call
out
pop
pop
mov
dec
or
mov
add
sub
pop
push
push
sbb
xchg
pop
ss
mov
mov
ret
push
arpl
insl
aam
sub
push
mov
repnz
stc
rclb
sbb
sub
push
sarb
cmp
push
popf
dec
in
fisttpll
jae
js
or
mov
mov
pop
ss
adc
jae
jecxz
add
push
jle
psraw
mov
shrl
xchg
cmpsb
mov
idivl
jo
mov
cs
jmp
das
es
ret
push
fidivrl
pusha
push
fucomip
sarb
popa
cs
repnz
shl
das
pop
insl
maxps
dec
push
sub
cld
rcrl
sub
mov
jmp
pusha
aas
out
jmp
cmp
fwait
cwtl
mov
gs
cld
popf
xchg
push
or
lods
dec
mov
mov
xchg
je
shl
mov
lcall
sub
test
pop
jae
sub
test
repz
test
add
xchg
add
iret
insb
xchg
sbb
movzbl
rorl
repnz
in
jbe
ljmp
popa
dec
in
out
sti
mov
jnp
ja
shrb
out
push
rcl
or
dec
xchg
jge
or
adc
add
push
rclb
cmpsl
cmp
xchg
cli
sub
pusha
lock
repnz
pop
sahf
add
xchg
mov
xor
dec
cmp
dec
mov
adc
rcll
loop
pop
in
enter
push
mov
xchg
subl
mov
mov
aaa
jmp
xor
lret
inc
add
and
pop
cmp
js
mov
or
mov
push
jge
and
sub
outsl
xchg
or
jmp
xor
mov
test
add
aaa
push
dec
xor
mov
jbe
xchg
and
adc
add
into
mov
mov
aam
lahf
pop
mov
aaa
cmp
movsb
js
pop
fdivrs
scas
insb
ljmp
repz
mov
push
leave
or
xor
cmp
lea
push
push
in
sbb
inc
mov
icebp
xor
mov
ss
sub
sbb
rorb
mov
aam
dec
or
ret
bound
jb
mov
push
sahf
push
pop
ds
int3
xor
test
in
pop
cmp
lds
popf
push
outsl
sbb
mov
push
and
fcomi
es
push
mov
fldt
and
test
cmpsb
pusha
into
test
and
mov
mov
push
int
adc
mov
xor
rcrb
add
jae
out
xor
adc
mov
push
or
dec
out
jecxz
in
mov
pop
insb
mov
bound
pushf
loop
cmp
fisubl
cmp
mov
mov
xchg
ret
mov
pop
arpl
cmp
mull
pop
fcompl
jnp
scas
adc
ljmp
repnz
enter
outsb
rol
jg
andl
sarb
ret
push
push
jg
iret
or
hlt
inc
loope
lret
ficoml
pop
test
sbb
xor
lret
pop
lcall
sbb
jmp
and
push
fcomps
enter
mov
or
imul
adc
xor
enter
dec
pop
cmpsl
jne
or
sub
negb
out
jp
jle
fs
andb
fs
add
daa
int3
add
fsts
adc
rcrb
mov
mov
xor
aam
arpl
cs
mov
mov
mov
fimull
divl
addr16
sub
je
cwtl
lods
lods
test
cmp
add
xchg
rorb
scas
out
shlb
mov
mov
adc
ja
fcmovnu
adc
sahf
jp
popa
jecxz
shrb
mov
aad
sahf
xor
cltd
mov
xlat
aaa
pop
pop
xor
sub
enter
addl
sysret
scas
fildl
das
sbb
stc
test
movsb
test
out
testb
int3
in
cld
xchg
and
js
out
and
insl
cmp
mov
mov
fimuls
mov
loope
xor
mov
jg
jnp
inc
inc
hlt
jmp
dec
mov
adc
sbb
out
inc
and
jmp
daa
mov
lcall
rcrb
leave
inc
aam
cmpsb
sub
push
imul
gs
sbb
imul
xor
lahf
fmull
shll
mov
in
mov
inc
test
jmp
mov
lret
fdivrl
int3
or
inc
out
in
insl
fs
jge
ror
insb
cmp
mov
xor
xor
mov
mov
arpl
sub
dec
xchg
aad
pop
das
test
inc
sbb
cmpsl
cwtl
roll
mov
fcmovnu
inc
out
jnp
aas
mov
push
cwtl
shlb
sbb
and
sub
or
add
stos
cmp
dec
loope
ds
and
ret
stc
mov
shrb
fdivl
pusha
sub
xchg
push
xlat
sub
mov
jno
mov
and
es
xor
fisubrl
xor
test
pop
or
scas
repnz
mov
cwtl
xchg
jmp
lret
add
lahf
jae
cwtl
push
mov
mov
call
fcmovne
lock
and
push
sbb
test
xor
xchg
adc
sbb
jb
mov
repnz
stc
pop
lahf
aas
arpl
int3
cwtl
inc
fsubl
roll
inc
push
out
pusha
fsubrl
mov
fists
add
loope
mov
outsl
enter
fs
xchg
scas
outsl
xor
push
mov
jns
test
dec
das
popf
xchg
into
ss
dec
and
mov
or
add
popf
cmpsb
dec
inc
lds
pusha
and
int
add
xchg
je
sti
les
aad
flds
sbb
mov
or
fdivl
xor
lock
dec
add
and
inc
in
push
or
xor
negl
pusha
mov
lds
xchg
leave
add
popa
push
repnz
push
inc
add
jns
xlat
outsl
loopne
mov
jl
shll
dec
jmp
adc
mov
stc
pop
bound
mov
and
mov
cmp
insl
mov
jg
nop
push
and
mov
xor
and
fimull
lods
mov
pop
fadds
shll
scas
shr
mov
add
and
pop
popa
and
push
sub
in
mov
inc
cmc
into
mov
imul
dec
nop
ljmp
inc
imul
cwtl
jns
cld
sub
xchg
aas
push
cmpsb
cmp
push
xor
out
mov
adc
sbb
push
pop
adc
lods
into
repz
lahf
mov
mov
clc
scas
pop
mov
jae
cmc
test
in
les
cwtl
adc
or
xchg
sahf
xor
out
jne
xorl
and
cmpsb
fmuls
push
cmp
and
in
dec
jno
jmp
xor
push
cmp
in
lock
test
ljmp
rorl
cs
xchg
outsl
mov
jo
movsb
or
lea
popf
mov
repnz
hlt
xchg
icebp
xchg
dec
mov
or
sub
adc
xor
pop
or
inc
out
push
mov
nop
scas
sbb
push
cld
jecxz
shlb
mov
mov
or
ficoms
push
jmp
xlat
or
int3
push
mov
jle
xchg
in
ficomps
lock
jle
or
imulb
cmp
ss
xor
in
mov
sub
push
push
mov
fcomps
out
lock
mov
and
loop
icebp
in
inc
cmp
xchg
jns
jmp
add
inc
pop
mov
sub
gs
sti
aad
adc
mov
outsb
mov
push
jecxz
fdivrs
push
adc
in
push
int
pop
in
or
iret
jnp
pop
push
std
push
jmp
lods
mov
in
test
fisttpl
xchg
repz
mov
push
rcl
mov
fmulp
fimuls
aas
jbe
scas
imul
jns
stc
rclb
jp
test
jbe
fists
cmp
sbb
int3
es
lods
jl
icebp
sbb
in
mov
push
nop
out
xchg
testb
outsb
data16
mov
mov
mov
xchg
stc
shr
cmp
mov
dec
mov
or
lods
fisttpl
sbb
loope
cmp
pop
mov
sub
mov
push
sar
cltd
or
xor
pop
xor
daa
cmp
cmc
mov
mov
lcall
aaa
fmuls
imul
mov
pushf
lcall
pop
adc
in
data16
sbb
jne
outsb
pop
mov
cli
lods
je
gs
mov
gs
sub
scas
mulb
or
les
xor
cld
gs
push
xor
lcall
mov
adc
cmp
clc
cmp
ja
movsl
leave
xchg
pop
xor
lret
xchg
repnz
jmp
add
out
mov
ds
in
btr
and
sbb
inc
test
ret
test
addr16
sbb
imul
adc
adc
aaa
insb
add
mov
inc
jmp
add
lret
or
xor
ss
lret
cmp
std
lods
flds
jne
mov
lea
mov
jp
fwait
cltd
jmp
sbb
loopne
scas
aaa
pop
xor
mov
xchg
cs
mov
data16
testl
cmp
add
mov
adc
push
sti
mov
add
jmp
bound
popf
sub
pop
dec
ljmp
subb
je
jns
pusha
cmp
int
inc
scas
imul
push
mov
sub
mov
jp
mov
sbb
jne
jmp
test
jle
int
aas
jbe
andl
addr16
push
ss
pop
add
mov
mov
lods
loop
dec
sbbb
inc
jg
imul
lret
sbb
adc
push
gs
jg
pop
test
rclb
cli
push
adc
cmpsb
inc
ja
or
pop
xchg
push
mov
xchg
outsb
dec
dec
or
insl
dec
aas
outsb
jno
inc
and
pop
mov
xorb
jo
pop
sub
inc
out
mov
hlt
adc
adc
lcall
cmp
cmc
cmpb
int3
cwtl
jne
add
and
jmp
dec
in
sub
fidivrs
inc
mov
inc
pop
rorl
sti
mov
or
bound
mov
repz
fldl
push
jae
mov
adc
in
push
in
or
sarl
out
jns
outsb
jp
mov
sbb
sbb
shl
sti
ljmp
dec
xchg
rcrb
ret
fwait
rcll
stos
xor
sti
mov
js
sbb
repz
outsl
leave
movsl
scas
roll
jecxz
div
cwtl
test
test
mov
cltd
inc
xchg
xor
popf
sub
mov
pop
xchg
orl
popf
push
sub
jg
pop
sbb
pop
lock
mov
clc
outsb
push
jge
push
pop
mov
cmpsb
push
dec
mov
stos
jle
sarl
sub
mov
cmpb
and
call
aas
add
and
and
xor
loopne
xor
cmpsl
inc
mov
fldenv
and
mov
pop
mov
sbb
adc
outsl
fnstcw
insb
insb
cmp
cmp
lcall
shll
sbb
pop
loop
dec
push
xchg
cld
xchg
cmp
addr16
rcrl
orb
mov
sub
inc
add
movsb
pop
fwait
jle
mov
out
subb
push
mov
push
test
or
cmp
mov
mov
je
push
ljmp
sbb
daa
jmp
scas
ret
daa
mov
xor
xlat
mov
popf
dec
mov
xchg
in
je
push
pop
mov
dec
sub
fdiv
cmp
icebp
sarl
stos
push
repz
xor
sbb
outsl
call
sub
lock
imul
mov
mov
jecxz
inc
inc
jecxz
xchg
sub
lret
inc
add
add
cli
ds
loopne
loopne
push
scas
xchg
sub
mov
ss
cmp
orl
mov
add
arpl
mov
sbb
or
adc
inc
data16
mov
out
mov
pop
xchg
or
std
imul
jge
outsb
jg
popa
inc
push
out
adc
movsl
or
daa
or
lcall
test
inc
mov
je
push
jecxz
sbb
es
cmp
je
push
xchg
sub
movl
xor
pop
mov
xor
mov
mov
incb
jle
jl
stc
cld
inc
inc
ds
arpl
jle
imul
cs
push
jcxz
jnp
add
nop
inc
jno
pop
mov
or
cmpl
bound
lret
or
pop
les
adc
push
shlb
js
movsb
xchg
xchg
cmp
sbb
jg
dec
xchg
lea
ret
fcompl
lcall
xor
and
push
lods
push
aad
movl
fisttpl
push
sub
or
stos
mov
aaa
mov
xchg
push
add
sahf
and
fsts
jo
pop
dec
dec
push
imul
pop
mov
inc
sbb
or
clc
dec
push
mov
mov
inc
mov
mov
sub
jbe
outsl
xor
pop
jp
push
psubw
inc
lods
sub
stos
mov
and
xor
sub
or
aad
repnz
js
pop
or
outsl
xchg
push
sbb
les
xor
or
jne,pt
test
fwait
stos
add
fs
fiadds
xchg
movsl
les
into
or
mov
ds
dec
jmp
lcall
jp
or
int
in
ss
cs
adc
sub
and
insl
aaa
fldt
ret
sub
arpl
xchg
push
int
mov
xor
xor
and
ss
and
stc
and
mov
pusha
mov
or
xchg
in
and
in
cltd
into
fidivrs
enter
stc
stos
clc
xchg
xor
adc
cli
and
cmp
sub
imul
scas
xor
jge
in
sub
add
push
inc
icebp
sub
push
push
dec
cltd
ljmp
xchg
stc
adc
push
fidivrs
popf
xchg
mov
add
or
daa
mov
ja
mov
fcmove
mov
xchg
add
shlb
xor
and
xchg
mov
adc
lret
or
and
insl
daa
sbb
imul
inc
sub
jmp
movsl
dec
xchg
jb
std
xor
cli
xchg
sbb
inc
sbb
push
cs
inc
movq
inc
dec
or
sahf
fsubrs
popa
cmp
fs
call
pop
flds
inc
jl
mov
cmp
pop
cs
div
jo
mov
sbb
mov
inc
dec
fildll
inc
push
stc
fdecstp
inc
mov
mov
push
xchg
adc
rcr
jle
mulb
out
loop
cmp
jns
mov
mov
mov
sbb
ret
mov
dec
fisttps
loope
adc
repnz
or
and
or
or
and
out
imul
sub
xchg
imul
jns
movsb
mov
mov
in
xlat
cmpsb
test
orl
shll
sub
mov
push
xchg
jae
cmp
sbb
cmp
dec
dec
or
pushf
imul
stc
mov
cmp
dec
jecxz
fiaddl
dec
fistl
mov
dec
or
xor
icebp
cmp
fdivp
mov
insl
sub
mov
xchg
cltd
rcrl
inc
pop
lcall
and
sti
call
mov
andb
add
push
adc
stos
inc
cmc
roll
fmull
sub
cmpsb
xor
into
lcall
jle
inc
mov
mov
rcrb
test
dec
and
hlt
test
int3
cmp
lret
enter
dec
push
ficoml
dec
sti
cmpsl
xchg
adc
leave
inc
sbb
mov
call
and
dec
xchg
insl
inc
adc
sub
push
je
or
xor
pop
aam
mov
mov
xchg
aaa
adcl
sub
dec
push
pop
in
sbb
add
or
imul
popf
sbb
adc
add
jmp
lods
mov
dec
push
and
or
xor
imul
sub
xchg
ljmp
xor
inc
push
outsb
xorb
fwait
mov
xchg
add
push
cmp
mov
int3
cli
mov
push
iret
cmp
js
adc
mov
jae
ret
sbb
sbb
add
xchg
xor
or
cmpsb
pop
cmp
inc
into
sub
ret
inc
insl
repz
sbb
push
in
mov
movsl
ret
jp
sbb
jl
shlb
and
shll
sub
out
inc
es
mov
imul
dec
mov
lcall
mov
jae
roll
or
jg
xchg
out
stos
addb
sbb
es
dec
lret
sarb
dec
out
sub
call
dec
mov
and
fistps
mov
ja
or
loop
ljmp
jle
add
mov
add
or
sub
jge
ror
in
pop
pop
out
stc
push
out
xchg
and
idivl
push
jmp
adc
and
push
add
rcrl
xlat
sub
push
ljmp
fstpt
jg
jnp
dec
dec
inc
mov
xor
inc
adc
jmp
lods
stos
add
je
pop
inc
lcall
popa
imul
cmc
push
insb
sahf
mov
dec
pop
jno
ss
outsl
lcall
pop
push
ja
jns
push
push
xchg
pushf
pushf
sub
fcoms
add
xrelease
clc
pop
sarb
add
ljmp
popa
jnp
jmp
adc
loope
lods
leave
lds
test
mov
or
xlat
xlat
jbe
push
call
lods
sti
jae
or
cmp
lock
xchg
cmp
test
orb
xchg
pop
scas
lods
xor
xor
add
xor
cmp
or
push
and
pop
sub
inc
scas
xchg
dec
insl
mov
mov
mov
sbb
push
loopne
dec
inc
call
xchg
mov
mov
fs
testl
or
add
pop
incb
mov
into
mov
icebp
hlt
mov
fisttps
in
sub
or
inc
mov
mov
cltd
and
lea
call
pop
mov
and
dec
xchg
cmc
imul
addl
cld
inc
jae
pop
mov
jp
cmpsb
inc
je
inc
iret
cli
std
aam
fsub
fwait
movb
xor
hlt
mov
jmp
mov
imul
mov
or
test
adc
insl
pop
addr16
int
lds
addr16
cmp
test
and
sbbl
push
add
sub
xchg
lret
pop
push
mov
jb
jge
daa
or
add
push
fistpll
mov
data16
fs
call
mov
out
pop
flds
xchg
imul
push
dec
fisubrs
lret
inc
subb
push
sbb
push
mov
pxor
push
dec
push
jno
or
pusha
pop
and
and
aad
stos
push
mov
stc
cmp
pop
adc
cmp
scas
mov
dec
mov
daa
das
pop
sbb
call
mov
add
sbb
fidivrl
ds
inc
addl
mov
or
cmp
push
xchg
fcom
jae
cli
leave
jecxz
rolb
push
repnz
cld
insl
xchg
adc
xchg
jnp
rclb
push
fisubrl
mov
mov
je
mov
sti
push
or
outsb
or
push
inc
xchg
ja
inc
data16
or
mov
imul
pop
shlb
je
push
int
loop
fistl
es
je
mov
cmp
hlt
xchg
xchg
or
dec
mov
es
mov
push
dec
xchg
test
shr
lock
das
fimuls
jg
stos
call
xor
pop
sub
pop
mov
add
lcall
sbb
js
dec
stos
xchg
aam
and
xor
mov
or
mov
clc
rorb
push
in
movsl
mull
jo
inc
adc
xchg
sbb
ljmp
add
sub
mov
in
mov
stos
dec
loop
ret
mov
push
push
and
pop
dec
mov
adc
adc
mov
out
mov
mov
dec
adc
stos
call
inc
repnz
jb
aam
xlat
or
popf
outsl
movsl
mov
cs
mov
sub
cmpsb
sub
aad
mov
int
inc
pushf
or
push
jg
loope
push
dec
or
dec
add
lods
jp
fsubl
scas
lods
sbb
insb
pop
std
aam
sbb
in
loope
daa
lahf
ja
lods
imul
sub
ljmp
sbb
flds
incl
add
push
rolb
push
and
add
jb
add
jne
xchg
cmp
pushf
push
movsl
jo
mov
pop
dec
inc
jno
or
pop
lds
insb
out
jo
push
imul
xchg
enter
cmpsl
sbb
mov
popa
lods
cli
xchg
and
inc
icebp
not
loop
lret
xchg
dec
or
or
cwtl
ret
pop
xlat
pop
dec
in
stos
popf
inc
xor
push
jne
cmp
sbb
fstpt
xchg
lea
fbld
push
mov
xor
test
js
fwait
mov
cmp
adc
jp
mov
mov
mov
or
imul
mov
popf
sbb
push
jns
dec
jge
and
or
push
push
pop
cmpsb
ja
mov
push
lods
shl
popa
mov
pop
ss
movsl
mov
pushf
fldt
cmp
jecxz
and
in
jo
mov
divb
test
adc
out
sub
rcr
mov
insb
std
inc
and
jge
loop
enter
repz
push
adc
ds
sub
stc
mov
mov
mov
cs
mov
cwtl
xorb
cmp
mov
sbb
loopne
xchg
arpl
scas
mov
int
mov
subl
xor
sub
fldenv
xor
sbb
mov
ret
in
rclb
inc
cmc
inc
jno
aas
hlt
pop
arpl
xchg
in
cmp
xor
test
push
addr16
leave
xchg
addb
xchg
pop
jp
jb
lret
xor
adc
cmp
fsub
push
shlb
dec
in
add
std
loop
mov
rorl
int
insl
mov
dec
pop
push
int3
inc
arpl
in
subb
dec
mov
dec
add
jnp
mov
lret
push
push
hlt
sub
sub
cmp
push
jmp
stc
mov
cmp
mov
inc
shrb
out
cmp
divb
cltd
inc
and
mov
adc
mov
std
mov
rcr
mulb
pop
pop
das
jae
scas
add
sub
loopne
fistps
or
jp
rep
jns
stos
add
xor
out
icebp
sub
lea
test
leave
jp
mov
imul
adcl
sub
push
xchg
cs
mov
pop
sub
pop
sbb
mov
inc
mov
mov
and
fincstp
mov
dec
in
mov
cmpb
inc
push
dec
arpl
lods
add
and
arpl
and
addl
dec
sub
cmp
push
fwait
movsb
fdivs
pop
fsubrl
fcomi
or
stos
push
mov
iret
xlat
mov
sbb
mov
push
fdivp
xchg
jno
aam
in
jb
sarb
subb
xchg
pop
lret
jmp
dec
mov
sub
sbb
jno
insl
ror
outsb
out
add
out
jmp
mov
mov
movsb
pushf
or
xor
cmp
enter
js
push
xchg
jb
mov
jmp
mov
icebp
jmp
ljmp
mov
call
sub
pop
sbb
and
pusha
adc
repz
sbb
hlt
lds
ret
stc
sti
or
lahf
mov
loopew
sbb
imul
sub
stos
or
cmpsl
icebp
lds
push
incl
push
dec
lret
lock
loope
sub
dec
inc
xlat
ds
mov
aam
push
nop
cmpsl
sbb
mov
clc
jg
addr16
dec
xor
mov
int3
loope
test
fisubrl
lds
pop
inc
xchg
inc
sub
in
shl
pop
pop
cmpsl
push
aaa
jecxz
outsb
push
and
popf
sub
mov
out
out
cli
inc
sub
lahf
iret
jecxz
sbb
pusha
ds
hlt
dec
imul
pop
mov
push
cmp
sbb
mov
sub
cmp
mov
dec
lods
adc
jg
mov
cld
sbb
jb
popf
mov
push
scas
cmpb
push
mov
fcmovnu
push
lahf
push
jns
mov
shlb
sbb
cmp
adc
and
sub
lods
add
lahf
pop
int
push
arpl
dec
aas
shlb
bound
fldenv
cmp
or
sbbb
nop
leave
xor
stos
pop
in
lret
in
jecxz
sarb
negb
xor
inc
shrb
push
sub
xor
pop
repz
push
shll
pusha
cwtl
dec
xor
pop
bound
sbb
xchg
mov
arpl
mov
mov
and
sub
mov
cmp
popa
mov
pushf
loope
jge
lods
es
push
sbb
adc
mov
pop
mov
loopne
test
sbb
int
lahf
push
xor
in
or
xor
dec
sub
push
pop
scas
sub
jmp
xor
data16
dec
and
or
mov
dec
in
xchg
mov
leave
mov
or
jmp
jae
pushf
or
ljmp
push
jo
jle
repz
or
mov
int
loop
imul
pushf
inc
mov
push
add
jl
test
sti
cs
jne
add
fsts
imul
adc
cmp
inc
mov
ret
push
daa
sahf
add
xor
lods
dec
in
out
sbb
les
sbb
daa
push
lods
out
pop
cmp
xchg
jae
sbb
xorl
jp
mov
mov
fcmovnbe
inc
mov
or
adcb
jbe
repz
ficoms
push
xchg
fcoms
mov
subl
sbb
mov
and
cmpsl
ret
lret
pop
pop
add
imul
iret
fwait
adc
lock
mov
xchg
loopne
imul
mov
push
cmpsb
jmp
mov
insl
ljmp
add
mov
xchg
dec
add
shr
cmp
push
cltd
insl
push
outsl
jo
fcmovnb
or
xchg
push
sub
jbe
cmp
adc
mov
add
cmp
push
inc
mov
push
scas
sti
imul
xor
aas
daa
sub
sbb
add
cmc
push
lcall
out
inc
call
mov
xor
sbb
pop
in
loopne
stos
mov
lcall
cmpsl
jp
rol
cld
into
fdiv
mov
and
arpl
xchg
pop
divb
iret
xchg
rcrl
and
rclb
outsl
in
inc
pop
insl
sub
xchg
pop
les
or
dec
lret
aas
out
cs
or
xor
dec
jg
sbb
and
hlt
pushf
sub
fisttpl
fmull
fwait
sti
add
movsl
mov
lods
jbe
jns
pop
xor
jp
pop
push
xchg
jb
out
ja
loopew
orb
sbb
jle
jne
mov
add
mov
je
xchg
data16
xchg
add
loopne
outsb
out
stos
jmp
cmc
adc
icebp
pop
sbb
adc
lret
cmp
push
ljmp
cltd
and
in
push
dec
lds
ja
push
cmp
adc
int
xchg
sub
mov
push
and
sti
cmp
fsubrl
test
shrl
nop
ret
add
sub
in
push
mov
push
fsubl
xchg
mov
mov
shl
adc
js
mov
shl
mov
pop
movsb
dec
mov
and
sub
mov
sub
es
outsb
mov
clc
movsl
out
xor
xchg
or
ds
shlb
xchg
or
sbb
cmp
xor
push
int3
ds
and
jg
xor
sub
aad
sbb
pop
int
sub
ja
sbb
inc
popa
inc
dec
mov
call
xor
adc
lcall
scas
es
std
mov
and
xlat
stc
mov
inc
jnp
push
fimuls
push
cmpsl
faddl
aas
and
div
rclb
imul
lret
or
cli
sub
fldcw
in
fistps
mov
cltd
add
test
xchg
enter
lahf
fldt
xlat
sbb
jne
cltd
xchg
ljmp
jb
call
jne
sbb
nop
add
ss
push
ja
or
and
sub
dec
and
xchg
cltd
ds
bound
insb
cmp
ret
scas
movsl
jg
jg
je
push
lret
pop
fwait
push
cmpsl
pop
mov
ljmp
mov
mov
mov
pop
mov
sbb
out
or
lds
lahf
mov
and
inc
jl
ljmp
xor
ret
mov
add
push
xor
mov
lret
in
shrl
push
ficoms
or
fsubl
mov
sbb
nop
mov
or
xlat
xlat
fistpl
push
add
lds
add
xlat
imul
aam
pop
add
xchg
test
shl
std
shrb
mov
imul
sti
lock
sahf
out
stos
aaa
repnz
repnz
or
aaa
and
mov
sbb
lea
mov
int3
and
sub
jl
push
mov
jle
insb
outsl
loopne
add
pop
jmp
outsl
jl
xchg
int3
mov
pop
dec
sub
cmp
ret
xchg
sbb
movsl
out
pop
adc
js
imul
add
repz
sarl
add
out
sbb
mov
jg
cli
push
imulb
cmp
ss
adcl
cmp
xlat
dec
xlat
mov
push
lcall
or
popf
mov
sti
jg
inc
ja
pusha
sub
aam
rcl
pop
pop
inc
aaa
add
lcall
daa
rcrb
jne
fistpll
mov
sub
mov
mov
popf
dec
pop
cs
push
jno
adc
std
inc
dec
pop
jp
lret
xchg
and
push
ret
xchg
and
das
insl
jns
or
fbld
adc
std
lcall
add
and
clc
adc
sub
int
call
jae
outsb
stc
dec
push
add
fsubp
jg
das
fiadds
fnstenv
sbb
js
adc
lock
jne
idiv
outsl
or
mov
push
mov
call
sub
dec
push
pop
mull
add
insl
inc
sbb
xchg
stos
test
inc
jae
sbb
enter
pop
adc
out
loope
adc
push
jge
adc
mov
cmp
mov
and
fs
cmp
pusha
cltd
add
fwait
inc
push
iret
mov
out
sbb
fwait
xor
je
mov
adc
jae
cmp
add
popa
xor
mov
cmpb
roll
jae
inc
repz
insb
insb
or
nop
pop
adc
mov
stos
sarb
loop
xor
aad
loopne
sub
out
xor
addr16
sbbb
xor
aaa
xchg
sub
xchg
cmp
orb
je
push
dec
mov
popa
xor
xchg
in
mov
cmp
dec
lods
push
inc
mov
int
iret
inc
decb
push
cld
jge
dec
cmp
and
pop
jg
das
ficoms
lea
mov
call
adc
nop
push
mov
fcompl
adc
repnz
mov
jge
ret
stos
sahf
ss
enter
lods
fstpl
loop
cmp
insl
subl
add
inc
mov
mov
rcrl
xor
das
jnp
test
sub
adc
scas
je
xchg
xor
in
and
shll
mov
fwait
and
hlt
mov
scas
mov
cs
repz
subb
jbe
je
lods
xchg
mov
push
cmpsb
cmp
mov
movsb
or
stc
test
lahf
ret
fsubrs
and
and
push
rcrl
push
scas
into
cmp
aam
lea
sub
push
or
adc
vmaskmovdqu
subb
clc
xchg
ret
mov
adc
std
in
negl
cmpsb
lea
movsl
shll
push
push
cltd
ret
imulb
fildll
movsl
sbb
es
xlat
dec
pop
mov
jo
aaa
mov
pop
int3
inc
sarb
inc
mov
sbb
movsb
lahf
enter
adc
rcrb
ret
dec
popa
loope
xor
xor
jns
push
lret
mov
or
fnstcw
imul
push
dec
jecxz
push
aad
cmovle
repz
mov
adc
test
jbe
and
lcall
xor
adc
rcl
push
jg
out
pop
push
cwtl
fidivrs
xor
in
push
fxch
fimuls
pop
test
shrb
test
ret
loope
bound
jne
cmp
test
xchg
or
inc
jns
xor
out
frstor
xchg
adc
mov
mov
inc
enter
jle
hlt
or
add
rcr
ljmp
dec
push
sub
add
sti
jge
rcll
in
xchg
push
xor
pop
sbb
leave
mov
out
jmp
cmpl
jecxz
xor
rcrb
mov
sub
adc
adc
divl
jno
test
dec
scas
pop
dec
stos
aad
mov
lds
stos
dec
jle
cs
xor
push
aam
inc
dec
push
out
pop
or
fcmovnu
lret
cli
bound
adc
fstpl
ret
and
pop
xor
mov
adc
jbe
dec
xchg
fildll
aad
mov
or
cmpsb
loopne
hlt
dec
icebp
icebp
mov
adc
lods
cmpsl
xor
dec
jmp
cmp
push
aad
push
add
pop
add
add
loope
mov
and
inc
cmpsl
nop
insb
mov
jmp
test
push
jecxz
insb
sub
dec
mov
mov
jne
sbb
pop
and
test
sub
push
push
cmpsl
in
xor
mov
shrb
sub
stos
ljmp
xchg
sti
add
jmp
lods
inc
xlat
pop
cmp
js
in
mov
lret
mov
sub
sti
push
cmpsb
jmp
pop
jno
daa
loop
mov
fdivs
lcall
je
ficoms
push
push
sub
xor
push
jp
mov
clc
iret
fnstsw
or
call
lea
add
lods
inc
xchg
lret
aaa
ror
in
and
xchg
lcall
jnp
fwait
fs
push
call
lock
or
movsl
push
int
shrl
and
insl
mov
mov
outsb
jg
fdivrl
adcl
addb
pushf
mov
in
fucomi
dec
pop
ljmp
subb
cmpsl
hlt
sub
fwait
push
push
sbb
sub
lock
sub
jno
cmc
jmp
jge
in
dec
adc
xchg
lds
cmp
pop
sahf
iret
cmpsl
rcll
cmp
loop
jg
in
mov
fs
and
xchg
adc
mov
inc
mov
fbld
negb
sbb
push
sbbl
sarb
adc
or
and
imul
int3
push
orl
push
add
mov
jae
loope
test
sbb
lcall
and
pop
inc
mov
cltd
in
loop
sti
xor
cmp
or
or
xchg
xchg
repz
add
add
mov
outsb
and
fcomi
das
mov
dec
out
iret
adc
jbe
mov
ror
in
cmpsl
mov
clc
aad
stos
sub
repz
in
test
xchg
ljmp
sub
xor
stos
add
sbb
adc
int
icebp
aaa
sub
fwait
pop
push
dec
sbb
arpl
mov
jo
aam
and
jb
mov
or
in
push
pop
cld
ret
jge
inc
mov
andb
add
pop
add
pop
mov
xchg
decb
push
dec
add
xchg
sahf
mov
lahf
mov
mov
xor
pop
dec
lea
mov
jge
sbb
inc
push
sub
ja
aad
shrb
jno
pushf
mov
sub
dec
mov
adc
jno
and
jmp
lods
adc
dec
jbe
push
jno
jo
push
ret
sbb
xor
mov
xchg
outsl
xor
fdivr
jne
outsl
lret
pushf
in
movsb
adc
xchg
sub
test
dec
mov
inc
dec
push
je
jecxz
ret
sbb
loop
cs
mov
push
push
and
js
sub
int
mov
dec
movsl
inc
push
push
xchg
fdivs
xor
add
xchg
es
clc
fstp
out
or
fadd
fwait
aas
xor
insb
mov
xchg
or
fs
sub
inc
lret
and
push
and
jnp
mov
popa
push
stos
das
lds
punpckldq
adc
repz
dec
movsl
cmpsl
enter
js
inc
lods
pop
push
jecxz
mov
inc
popa
filds
repz
pop
and
pusha
cmp
dec
xchg
ja
pop
push
loopne
cmp
cmp
stc
xor
fs
mov
or
mov
sub
into
inc
mov
lahf
into
outsl
pop
jns
out
and
and
movsb
jno
aad
adcl
mov
mov
roll
cltd
push
jns
lret
shlb
pop
cmp
add
jne
je
pushf
aas
negb
add
sbb
out
inc
xor
lock
shlb
in
or
andl
jp
jg
popa
pop
mov
add
push
das
mov
push
and
popf
xor
and
xlat
popf
into
pop
adcb
nop
lret
andl
add
mov
shrb
sbb
sbb
aaa
out
not
push
int3
or
jns
shl
xchg
test
filds
mov
jle
loop
mov
mov
mov
repnz
testl
xchg
andl
outsl
jno
les
movsl
ficomps
xor
xor
pop
push
adc
sub
dec
mov
dec
xchg
xchg
outsb
imul
stc
dec
cmpsl
fchs
inc
hlt
fdivl
cltd
dec
out
sbb
cmpsb
scas
leave
adc
pop
stos
movd
inc
inc
pop
clc
pop
aas
cmp
popa
jo
insl
mov
mov
push
in
xor
pop
and
jnp
cmpsl
xchg
inc
jmp
jg
lods
addr16
aam
test
nop
mov
js
push
cs
js
stc
loop
add
repz
mov
dec
in
mov
cmp
push
movsb
std
mov
push
or
cmp
imul
lods
cmp
jae
cmp
aam
mov
stos
cmp
insb
imul
pop
push
fwait
mov
rcr
and
mov
mov
divb
xchg
aaa
pop
sub
xor
mov
fcmovb
stos
xlat
xchg
fst
out
jle
adc
cwtl
pop
pop
repz
sahf
dec
and
movsb
pop
jg
data16
icebp
inc
enter
mov
push
fdivrp
scas
cmp
stos
push
in
sub
mov
mov
dec
or
mov
jle
push
ret
add
push
or
sub
sub
and
cld
je
dec
inc
pop
sbb
xchg
and
scas
hlt
xchg
jecxz
dec
xchg
push
fiadds
push
or
sub
xchg
flds
imul
pop
stos
jo
or
adc
push
ja
fstp
test
int
and
mov
jp
inc
lcall
mov
ja
bound
aad
dec
xor
xor
inc
lock
sub
push
adc
or
pushf
mov
fisubs
push
std
lods
fdivr
lods
mov
cmp
lret
mov
call
xor
movsl
movsl
mov
push
movsl
or
push
mov
lods
cli
mov
int3
and
cmpsl
and
fs
cs
cmp
mov
inc
pop
movsb
pop
and
fisttpl
push
jne
out
or
push
lock
adc
imul
test
jmp
mov
ret
pop
mov
cwtl
sub
ret
sub
sarb
aas
test
lcall
xchg
pop
xchg
fcompl
hlt
mov
mov
out
daa
fldcw
jp
sub
mov
pop
mov
adcl
rcrb
sbb
xor
inc
xchg
loopne
push
es
jae
mov
mov
cld
push
stos
dec
icebp
mov
sub
push
and
push
cmpsl
jns
and
frstor
out
sbb
mov
push
fnstcw
test
sub
aas
popf
xor
xchg
es
lret
adcb
adc
mov
ss
add
addr16
ror
mov
scas
movb
mov
add
pop
pop
je
or
or
inc
push
jne
decl
sbb
rolb
ljmp
sti
sbb
or
movsl
sahf
cmp
sbb
jno
je
les
fs
dec
push
xor
fistl
jne
xchg
push
adc
movsl
xchg
jg
push
pop
mov
and
xchg
add
or
mov
mov
pop
ror
icebp
stc
pusha
mov
fimuls
es
jl
pop
jae
jo
ja
iret
inc
or
jbe
insl
dec
jo
ss
push
mov
cmp
mov
mov
xchg
inc
xor
cmpsb
repz
outsb
enter
dec
mov
inc
out
sbb
mov
shr
fmulp
fdivs
pop
iret
sbb
xchg
scas
xor
xor
js
sub
imul
aaa
mov
add
inc
addr16
push
cwtl
das
xchg
xchg
dec
pop
outsl
sbb
rcll
data16
sub
data16
or
mov
and
orb
add
dec
pop
pop
mov
ret
test
je
mov
in
cmpsb
data16
or
pop
jg
push
sub
in
in
popf
out
hlt
adc
enter
sti
dec
push
shlb
stc
sub
pop
and
and
imul
insl
mov
lods
das
sbb
add
fidivl
or
jmp
inc
loope
inc
pusha
push
cld
mov
push
lret
sbbl
popf
fstps
push
jnp
enter
inc
xchg
movsb
push
mul
ret
jg
sbb
rcll
and
loopne
mov
lds
fisttpl
or
pop
and
fsts
dec
pop
lea
adc
arpl
inc
es
test
adc
test
xor
pop
sbb
hlt
sbbl
mov
or
aam
imul
jnp
mov
ljmp
sub
xor
test
xchg
call
mov
lock
cmpsb
adc
scas
and
ds
cmp
daa
daa
popa
dec
divl
out
push
push
xchg
lret
jno
leave
test
imul
ja
push
cld
cmp
mov
mov
sub
sti
leave
fdivr
out
pop
hlt
and
or
jle
xlat
add
iret
or
or
inc
mov
add
or
jg
add
push
adc
mov
loopne
sub
sbb
loope
fstpl
into
jp
fwait
inc
mov
or
xor
sbb
or
push
ja
dec
pop
add
pop
test
pusha
andl
std
inc
lcall
cmp
rorl
jecxz
inc
sub
jne
loop
cmp
mov
sahf
jae
sbb
clc
and
jne
aad
shll
mov
test
xchg
cmp
pop
xchg
iret
hlt
lods
push
push
lret
or
sub
shll
push
jns
sub
fs
mov
pop
lret
push
pop
das
repz
clc
add
mov
xor
psraw
sub
pushf
movsb
pop
cmp
sti
mov
xor
or
scas
lcall
lret
jl
inc
xchg
xor
adc
adc
outsb
push
or
aas
bound
iret
das
pop
scas
fwait
cwtl
adc
out
jae
shlb
cmp
pusha
js
push
lahf
pushf
mov
sbb
or
mov
frstor
in
inc
loope
fcomp
outsl
add
neg
xchg
jmp
ds
push
pop
jle
inc
mov
jae
lods
xor
pop
data16
dec
pop
adc
hlt
inc
aaa
orb
push
mov
add
cmp
js
mov
jo
push
sbb
or
cmpsl
loop
loopne
test
xlat
orl
test
push
fldcw
xor
loopne
mov
and
shll
int3
loop
sbb
cmp
int
ret
push
hlt
cmp
jne
sub
cmp
pop
cmc
dec
test
andb
jmp
inc
add
nop
es
xchg
shll
sahf
mov
sub
and
js
lret
aad
test
push
inc
scas
pop
jecxz
shll
fidivrs
xchg
movsl
enter
sub
decl
xlat
stc
dec
cmp
into
mov
cmp
pop
pop
movsb
fdivs
insb
and
or
mov
jle
mov
in
orl
add
cmpsb
mov
mov
mov
ja
push
rorb
push
or
or
sbb
cli
jae
scas
jno
addr16
lret
clc
out
xor
pop
push
sbb
cltd
pop
jae
sti
jno
and
or
fnsave
dec
cli
pop
cmp
addr16
jmp
repz
int3
sub
test
ret
jns
lea
or
inc
sbb
xor
roll
loope
fildl
inc
aas
insl
push
into
xor
enter
fincstp
fimuls
stos
addl
dec
sti
gs
add
out
or
pop
adc
xchg
repnz
jno
pop
cmpsb
xor
insb
xor
xchg
arpl
aam
daa
insl
popf
cwtl
cmp
jge
out
fs
sub
push
mov
dec
call
and
je
lea
mov
jae,pn
cmpsb
adc
mov
push
xor
pop
inc
xchg
xchg
dec
out
jo
sbb
fcmovnb
pop
mov
sbb
inc
cltd
mull
mov
js
fsubs
loopne
sahf
frstpm(287
lcall
scas
cmc
mov
push
mov
scas
pushl
mov
sbb
push
pushf
inc
ja
sub
mov
inc
pop
sbb
xchg
jb
shlb
jecxz
mov
insb
jb
mov
pop
inc
and
jle
ss
imul
xchg
sub
int
mov
repz
mov
into
add
mov
pusha
pop
push
mov
lahf
mov
xor
mov
sbb
in
mov
xchg
push
add
sub
adc
pop
insw
arpl
mov
and
shrl
sub
xor
mov
dec
loopne
inc
xchg
stc
pop
sub
or
xchg
sub
insb
in
cld
ffree
jecxz
lock
in
loopne
mov
push
lods
mov
insb
and
inc
into
jo
gs
inc
jne
or
daa
xchg
inc
lock
cld
xor
cli
sbb
jmp
adc
sbb
fincstp
mov
xchg
std
adc
inc
pusha
cmp
out
push
fdivl
loope
pop
pop
mov
lods
mov
fistpl
xor
sub
mov
fidivl
mov
sbb
sub
out
adc
cmp
fs
xor
mov
int3
stc
sub
aam
enter
push
and
pusha
adc
ja
or
mov
inc
jns
push
das
push
mov
sub
clc
push
stc
dec
ret
dec
js
or
jno
push
mov
cld
iret
push
je
mov
loope
divl
sub
daa
std
arpl
in
inc
inc
pop
mov
push
imul
inc
scas
push
inc
aad
mov
xchg
lods
addr16
xchg
cltd
dec
jecxz
sub
ljmp
lods
add
lods
jp
sub
fimuls
das
stos
mov
pop
fwait
cmpsl
and
andb
insl
leave
mov
jnp
pop
cmp
loopne
inc
lods
stc
xor
adc
xchg
sub
insb
stc
pop
stos
mov
incl
int
xchg
xchg
dec
addl
imul
add
cmp
inc
mov
shlb
hlt
lcall
jle
adc
pushf
xor
pop
sbb
add
sub
pop
imul
leave
pop
inc
jnp
cli
xchg
pop
or
mov
pop
lret
imul
lds
mov
adc
aad
mov
adc
data16
cltd
sbb
nop
mov
pop
add
movsb
aad
xor
cwtl
cmpsl
dec
das
jbe
fidivrl
jns
and
call
jno
push
inc
rcll
sarb
cmp
bound
adc
xor
mov
push
in
cmp
jg
movsb
mov
adc
cmp
xor
shrb
sbb
push
inc
jnp
mov
aaa
inc
dec
cmp
mov
lods
push
or
inc
mov
mov
mov
jl
shll
jmp
iret
add
lea
xor
fwait
mov
leave
jnp
and
adc
rcrw
mov
fisttps
test
in
icebp
out
adc
jecxz
sub
loope
jne
hlt
dec
jmp
mov
nop
movsl
xchg
adc
push
clc
ss
mov
mov
sub
pop
cs
addr16
fimull
cli
fisubl
xchg
subl
adc
dec
mov
sbb
pop
lea
mov
cmpsb
inc
push
test
and
cmpsl
inc
pop
xor
sub
lret
fildl
jno
mov
lea
pop
and
or
sub
adc
sbbl
push
or
movsl
cwtl
outsl
arpl
stc
pop
gs
frstor
rolb
lret
xor
fnstsw
ljmp
add
dec
adc
jle
mov
xor
loopne
loop
mov
in
hlt
pop
ja
sub
xor
inc
outsb
jecxz
daa
xor
fstl
mov
into
imul
push
pop
pop
rolb
icebp
inc
mov
dec
fistpll
ja
lahf
dec
imul
pushf
jl
jp
and
jno
xchg
push
pop
sub
pop
mov
mov
insb
iret
cmp
lods
dec
push
hlt
hlt
push
sub
inc
shr
mov
cmp
or
jl
mov
std
sbb
dec
xchg
sub
mov
lds
or
out
js
adc
dec
fistps
jg
aaa
int3
sbb
add
int
xchg
and
aad
push
int3
xchg
mov
lret
hlt
mov
cli
scas
add
sub
jecxz
mov
mov
push
stc
mov
shlb
subb
mov
repz
js
les
sub
shll
pop
icebp
mov
ret
cmp
push
ret
movsb
sub
push
jge
fs
jno
mov
push
movsl
cmpsb
ja
lods
rcr
push
pushf
out
adc
mov
mov
mov
dec
pop
xchg
mov
dec
jae
mov
bound
xchg
fwait
inc
inc
mov
inc
xor
push
cmpsl
fldcw
inc
mov
push
dec
push
dec
cwtl
xchg
adc
fdivs
xchg
cmc
std
sbb
add
fs
add
insb
das
fxsave
pop
inc
mov
mov
repnz
xchg
or
int3
or
sti
pop
pop
push
leave
dec
in
js
imul
call
sbb
and
sahf
or
mov
lock
adc
negb
fstpt
lret
cmp
dec
mov
cld
lahf
or
repz
jae
roll
add
mov
stos
cmc
popf
fs
je
int3
inc
sahf
loop
pusha
call
dec
mov
lret
roll
mov
fimull
xlat
bound
jmp
adc
rorb
test
pop
mov
out
call
pop
or
push
adc
or
mov
cli
or
out
dec
mov
mov
pushf
gs
mov
mov
popf
int
push
mov
outsb
and
es
or
push
mov
jl,pn
aas
mov
pop
fdivp
ret
bound
pushw
pop
dec
jmp
stos
repnz
bound
ror
arpl
sub
ss
cmpsl
adc
jmp
aaa
clc
dec
pop
mov
mov
push
bound
aad
pop
call
fisttpll
int
pop
das
push
or
insl
sbb
pop
inc
pop
cli
lock
insb
stos
daa
pop
sbbb
push
stc
lods
pop
outsl
xchg
fstpt
mov
xlat
in
cli
and
xchg
sahf
jne
js
es
xchg
and
cmp
fwait
mov
mov
lahf
sub
dec
xchg
xor
fmul
out
pushf
out
fwait
icebp
xor
xor
mov
cmpsl
cmp
dec
mov
popf
mov
enter
scas
sbb
pusha
adc
or
jbe
xchg
add
lods
xor
push
and
testb
icebp
in
iret
aad
loope
out
clc
shlb
add
cmp
dec
inc
jo
ret
les
pop
and
jl
jg
dec
xchg
sub
lahf
fwait
ret
xor
out
mov
mov
cltd
daa
xchg
xor
ret
jns
xor
push
ljmp
cmp
xchg
mov
lret
fisubl
sub
rcrb
dec
push
push
aam
sti
cwtl
inc
cmpsl
repz
fidivs
sbbb
mov
jnp
out
ja
lahf
shll
sbb
cli
xchg
push
into
adc
jbe
shrb
insl
pop
sbb
out
push
les
lcall
pop
imul
add
popf
mov
mov
mov
into
fldt
out
fucomp
pop
arpl
int3
repz
movsl
cmp
and
add
aad
mov
xchg
insb
sarb
lahf
test
imul
cmc
je
jecxz
lret
cmp
add
out
lahf
ret
add
dec
push
arpl
test
in
sbb
mov
out
dec
sar
push
lcall
xor
xor
mov
dec
sbb
rol
test
dec
rcrl
enter
imull
xor
jo
xchg
in
cmp
shrb
xor
mov
imul
sub
mov
cmc
cmpl
sarb
fsts
push
xor
in
enter
pop
ret
ljmp
mov
fsubrs
push
mov
jge
push
orb
adcl
jb
es
fdivrl
out
pop
add
jg
sub
add
mov
clc
cmpsl
mov
xchg
mov
pminub
pop
sub
cmp
add
out
dec
sub
dec
insb
and
clc
hlt
xchg
mov
leave
mov
mov
mov
cltd
jl
test
rorl
mov
dec
repz
mov
in
xchg
enter
subb
mov
xchg
leave
push
pop
ljmp
fdivrs
mov
xchg
cmp
ds
mov
cmc
and
dec
push
movsl
divl
incl
pop
inc
fisubrs
pop
pop
and
mov
dec
sbbl
cmc
or
dec
out
out
mov
pop
adc
mov
or
add
mov
push
adc
sahf
pop
pop
lods
shrb
scas
push
sub
pop
push
lock
addr16
push
fwait
push
sub
std
xor
dec
mov
divb
outsl
gs
inc
repnz
test
mov
mov
xor
dec
cs
fsts
mov
ret
in
ficompl
js
sbb
inc
cmpsb
push
mov
fstpt
pop
xorb
jp
movsl
and
ja
lea
pusha
mov
inc
jmp
dec
aam
pop
jecxz
xor
xchg
sub
inc
push
pop
sub
lods
enter
mov
pop
jp
inc
jae
mov
mov
loopne
cltd
cltd
xchg
mov
push
push
pop
stos
jg
pop
loopne
mov
in
cmc
aas
movsl
popf
adc
icebp
cli
aaa
cmp
test
outsb
xchg
xchg
mov
ret
pop
fsubs
and
cmp
pop
rcl
sbb
jne
dec
out
ss
push
das
movsb
in
dec
mov
mov
lods
sti
adc
lret
xchg
les
cli
sbb
xor
xor
not
push
roll
and
push
sbb
lea
or
notb
push
lods
js
sti
cmp
inc
icebp
sub
xchg
sub
lret
imul
scas
xor
mov
pop
jne
xchg
cmp
inc
lret
es
ret
add
pushf
mov
jle
mov
imul
and
imulb
scas
ss
cwtl
ret
jb
mov
mov
mov
insb
jle
out
add
movsl
sbb
leave
xchg
orb
imul
xor
scas
mov
pop
pop
sahf
testb
rorl
mov
push
inc
outsl
cmpsl
ret
les
pop
sub
inc
addb
adc
fwait
add
xor
mov
pop
lods
and
pop
or
push
xchg
das
dec
sbb
pop
xlat
sahf
popa
jecxz
lods
fildl
cmpsb
xchg
mov
addr16
imul
js
push
cli
js
repz
jbe
and
mov
dec
cli
adc
mov
jo
je
out
dec
push
iret
inc
jmp
out
inc
jecxz
xchg
xchg
xchg
loope
mov
jb
sbbl
clc
leave
sahf
hlt
aas
rcrl
push
xchg
in
cld
je
xchg
mov
jbe
jno
and
xor
icebp
int3
pop
sti
pop
cwtl
or
sbb
xor
hlt
adc
mov
dec
add
pop
inc
xor
xor
adc
xor
sbb
pop
mov
pop
dec
fs
pop
inc
jle
lock
imul
data16
lock
dec
aas
xor
pop
sahf
inc
inc
and
lahf
movsb
popa
push
cmpsl
call
sub
rorb
pop
iret
out
cwtl
aam
pop
ret
xor
int
push
jg
xchg
jbe
or
shld
mov
jns
fcmovnbe
add
xor
pop
and
outsl
int
mov
inc
pop
pop
into
add
jle
push
notb
icebp
mov
xor
flds
js
fmul
or
jmp
les
adc
stc
jno
popa
mov
out
adc
lea
mov
test
cmp
adc
push
push
push
add
rclb
inc
lahf
jp
mov
je
es
das
jl
aaa
fsubr
es
iret
add
repz
sbb
xor
add
jo
out
ja
cmp
adc
je
xchg
andl
dec
jns
lods
jne
mov
movsb
pop
inc
imul
fldcw
or
ja
push
dec
adc
data16
mov
pushf
cltd
add
test
popa
lods
jecxz
repz
das
pop
adc
cli
cmpsb
das
nop
and
dec
pop
mov
jle
mov
mov
and
idiv
sbb
rcrb
insb
add
out
jecxz
or
mov
dec
mov
rol
dec
aaa
xchg
mov
or
push
shrl
mov
insl
pop
shrb
addl
pop
xchg
mov
and
pop
outsl
push
pop
cmp
xchg
cltd
pop
or
mov
mov
lea
sub
inc
fmul
mov
cmp
adc
out
cmp
int3
popa
xchg
icebp
cmp
outsb
inc
pop
add
cmpsb
fstpt
cmp
mov
in
mov
mov
adc
mov
shll
inc
mov
cld
dec
fiadds
aad
mov
cmp
daa
es
mov
or
adc
bnd
stos
aaa
mov
pop
icebp
adc
adc
jno
rcr
stc
inc
mov
out
inc
aam
xchg
xor
scas
dec
rcrl
mov
nop
mov
fbld
and
cltd
out
cli
arpl
xor
xor
movsb
dec
movsb
sarb
int
mov
jno
or
dec
adc
xor
jnp
mov
fldenv
out
jo
adc
cltd
mov
inc
fcmovne
daa
ds
adc
dec
fcompl
movlps
mov
xlat
jmp
dec
push
ljmp
test
gs
sub
shrl
jmp
push
fldt
push
dec
xchg
mov
data16
fidivl
data16
cmp
movsl
cmc
jle
pushf
adc
fidivs
scas
adc
ja
mov
pop
cli
iret
pop
test
cltd
mov
dec
xor
repnz
das
out
adc
fiaddl
shlb
rcll
add
faddl
jge
dec
in
sub
cmpsb
subb
dec
int3
sbb
in
repnz
movsl
add
push
iret
mov
jnp
lea
xchg
shrb
insb
out
cmp
paddusw
loop
inc
ljmp
iret
cwtl
mov
lahf
sub
popa
in
outsb
jecxz
cmp
push
pushf
cs
xor
sbb
cwtl
cmp
xor
leave
testl
arpl
loope
cli
lods
movsl
pop
fisubs
fwait
mov
xchg
pop
arpl
rclb
pop
and
mov
fcmovnbe
or
push
push
sub
scas
mov
into
mov
dec
sarl
and
jno
and
stos
test
adc
scas
mov
mov
out
pushf
add
inc
add
shlb
faddl
mov
loopne
push
stc
xor
mov
xlat
outsb
stc
sbb
or
dec
sbb
mov
adc
ss
xchg
std
mov
push
mov
mov
sti
cmpsl
mov
je
pusha
inc
mov
cmp
ficoms
insb
or
jmp
es
mov
scas
inc
testb
mov
notb
insb
mov
lcall
push
mov
into
xor
push
mov
dec
in
pop
mov
in
into
push
mov
int3
or
cli
jmpw
cld
dec
lret
popa
lea
dec
adc
dec
mov
mov
filds
mov
nop
stos
into
push
call
inc
dec
mov
ret
adc
mov
mov
shrb
jecxz
out
adc
pop
jmp
insl
dec
ja
rolb
dec
mull
sarl
fdivl
xchg
pop
dec
push
xchg
sub
xor
sub
jno
xchg
inc
loopne
and
out
pop
xor
fdivl
jo
ljmp
enter
cmp
mov
pop
cli
mov
cmp
adc
push
sub
sbb
or
add
ret
cwtl
mov
pop
mov
pop
popf
out
lods
jle
mov
cli
xor
dec
jecxz
or
and
sub
mov
in
jp
shld
mov
sbb
cmp
xor
pop
out
sbb
push
fisubrl
mov
xchg
ficompl
in
and
dec
scas
jl
adc
repnz
push
popf
mov
cmpsb
sbb
fstpt
ss
fcomi
mov
fldcw
imul
mov
inc
paddusb
lock
mov
pop
les
repnz
insb
or
sbb
xchg
cltd
cmp
adc
add
mov
mov
adc
adc
imul
aad
push
gs
pop
push
cmp
jbe
mov
sbb
xor
fisubrs
cli
int3
add
cmp
popa
fs
das
inc
or
out
int
mov
add
mov
xor
xor
jecxz
mov
push
and
xor
push
cli
jb
xchg
cmp
sub
addb
ds
sahf
lods
sub
mov
xchg
lcall
push
mov
in
dec
cld
mov
jmp
fldpi
jmp
cltd
mov
pop
pop
mov
jg
pop
xchg
shrl
adc
movb
loope
cmp
jne
mov
jb
sti
pop
pop
dec
test
in
movsb
or
subl
cmp
push
xlat
ficompl
and
std
jo
cmp
arpl
nop
pop
test
aaa
sarl
xchg
data16
mov
movsb
enter
cltd
daa
movsw
inc
mov
jp
jns
scas
xchg
sbb
test
scas
mov
xchg
adc
fucompp
cmp
cmp
jne
fbld
mov
pop
scas
cmp
push
fcmovnbe
sbb
scas
mulb
xor
call
fimull
mov
sbb
xor
dec
jb
jl
cmp
or
mov
stos
aaa
mov
sbb
call
and
and
and
inc
jecxz
test
adc
lock
in
sbb
lea
mov
inc
sbb
xchg
fst
sub
mov
pop
mov
or
mov
mov
imulb
sti
lock
sbb
aas
mov
pop
mov
jmp
nop
fsubr
sbb
js
insl
and
out
fdivs
dec
add
cmc
inc
les
mov
sub
mov
xchg
lods
cwtl
lret
mov
sbb
pop
adc
pop
mov
cli
push
inc
and
mov
loopne
and
cli
jns
mov
cmp
add
push
inc
adc
mov
out
sub
outsl
xor
add
fisubl
pusha
pop
ret
sub
cmp
lock
add
pusha
movsl
jae
outsl
cmp
je
dec
mov
imul
and
out
fimull
mov
in
push
sbb
mov
loop
inc
shll
dec
cltd
mov
lods
fldt
insb
fwait
or
int
sub
xor
imul
data16
es
inc
inc
popf
daa
ja
out
shll
fsubr
sbb
test
lret
pop
ja
lsl
stc
fistps
fdivrl
outsb
xchg
mov
push
add
cmpsl
mov
push
jecxz
pop
and
rclb
jnp
jno
fs
iret
cs
push
and
dec
data16
in
add
icebp
pushf
mov
rcrb
xor
or
or
popa
sbb
add
xchg
adc
repz
sbb
cmp
mov
retw
and
jne
in
movsb
mov
inc
sbb
push
push
push
scas
and
mov
lods
jo
addr16
push
shlb
push
gs
fwait
xor
dec
aam
scas
pop
lret
mov
sahf
push
sti
popf
stos
mov
mov
sbb
idivl
inc
push
or
dec
mov
andl
mov
mov
and
orl
das
xor
bound
jne
jg
movsb
les
jmp
int3
push
xchg
adc
sbb
lock
fcoml
repz
push
cmovl
sbb
lret
insb
adc
int
push
pop
test
stc
mov
loopne
dec
adc
leave
and
jmp
in
fs
sti
ret
xchg
sub
inc
lea
xor
inc
addr16
jo
cmp
mov
inc
jns
mov
sbb
lods
mov
outsl
sub
add
pop
mov
push
jp
cmovge
out
rcr
pop
adc
mov
mov
fwait
roll
rorl
lret
mov
fdivs
nop
hlt
mov
sbb
add
sahf
xchg
inc
shrl
gs
mov
mov
add
enter
iret
or
dec
rorl
punpckldq
inc
xchg
addr16
push
or
xor
andb
xlat
rcrl
jl
fxch
mov
and
movsl
pop
das
mov
test
fwait
enter
add
xchg
pop
fs
ds
pop
push
int3
jnp
stc
sbb
jecxz
mov
js
leave
movsb
sbbb
test
xlat
ljmp
xchg
jo
in
xchg
add
ss
mov
in
insb
lea
sub
lret
pop
insl
addr16
fld
cli
sub
xchg
add
push
mov
or
addl
xchg
cmpsl
sbb
pop
out
xlat
clc
imul
and
xchg
and
iret
lret
outsl
mov
fwait
in
inc
sub
inc
add
xchg
js
dec
push
repnz
pop
xchg
cmp
dec
add
sti
xor
addr16
inc
jecxz
mov
in
scas
cmpsb
mov
or
call
jmp
pop
test
mov
jg
call
push
aam
loop
add
inc
loopne
mov
mov
jmp
in
out
sub
inc
pushf
iret
xchg
out
and
inc
imul
dec
orl
mov
inc
inc
ljmp
loopne
lret
enter
lcall
pop
or
ss
dec
decl
out
je
mov
mov
out
xchg
inc
popf
inc
fs
daa
and
call
sub
cld
int3
fimull
incb
fmuls
cmp
sarb
clc
xor
stc
inc
xchg
cmp
pop
loop
int
js
loopne
sub
jo
fimuls
cwtl
cmp
fsub
xor
sub
cmovg
jb
pop
shlb
je
push
sbb
xlat
mov
xlat
inc
int
or
add
adc
dec
outsb
mov
mov
fidivs
xor
jmp
and
fldcw
xchg
cmp
jecxz
sqrtps
sub
xchg
pop
push
add
pop
cmp
sub
out
mov
fidivs
mov
xchg
jmp
cmp
add
outsb
add
pusha
pusha
repnz
fistl
or
push
iret
fwait
add
jo
rorl
stos
mov
lret
add
push
mov
decl
popf
test
loope
dec
add
inc
jle
xor
test
scas
ret
in
scas
sub
push
aas
pusha
pop
and
cltd
xchg
mov
push
mov
or
je
mov
push
loopne
xlat
lret
lds
mov
rcrl
scas
mov
mov
addr16
push
sub
push
repnz
cmp
mov
cmp
jns
inc
add
dec
mov
xor
xchg
add
bound
stos
push
add
lcall
popf
adc
or
jno
pop
sbb
mov
jae
mov
xchg
jae
and
and
fidivl
push
je,pt
fmulp
stos
inc
outsw
sbb
adc
dec
leave
xchg
jle
inc
lret
adc
in
call
in
xor
xchg
mov
rclb
adc
or
sbb
push
fidivrs
jle
ss
ss
idivl
and
or
cs
pop
xchg
ret
shrl
push
jle
rorl
in
or
adc
shll
int
pop
lods
jne
mov
jb
push
aam
test
jl
fs
xchg
rorb
mov
ljmpw
lcall
rclb
fimull
popf
pop
push
hlt
adc
rolb
dec
aam
mov
iret
xchg
loopne
frstor
jb
insl
mov
push
fisubrs
or
push
loop
out
or
push
cmp
clc
or
fs
jle
in
test
icebp
je
pop
jmp
hlt
stos
inc
jl
dec
out
xchg
dec
xlat
or
cli
lea
mov
cmp
mov
outsb
mov
push
arpl
test
mov
xor
iret
cmp
xchg
insl
or
pushf
jbe
stos
imul
jno
outsl
adc
sub
dec
inc
sub
int
mov
mov
xor
jle
imul
inc
popf
add
mov
aas
sub
adc
addl
sbb
fildl
popf
test
push
cmp
stos
xchg
imulb
push
jns
dec
imul
adc
aad
nop
mov
xchg
hlt
push
adcb
and
adc
push
fidivs
mov
mov
pushf
mov
xor
jae
call
mov
jp
lret
vmread
adc
sahf
mov
cmpsl
inc
xchg
mov
mov
xor
jecxz
fs
outsl
sub
aad
jmp
sub
dec
pop
into
push
xchg
hlt
aas
in
in
iret
or
pop
sbb
shll
cmp
cltd
aas
aas
enter
jae
lock
dec
push
sbb
sbb
out
sbb
popa
mov
cmc
fnstcw
lds
adc
insb
test
ljmp
jo
fstpt
cmp
push
aad
mov
sub
sbb
inc
inc
or
pop
outsb
inc
movsl
push
cmp
cld
add
mov
pop
inc
movsb
xor
ljmp
in
fldl
test
and
int3
pop
mov
adcl
mov
sub
iret
insl
jne
rdtsc
or
jecxz
push
out
insb
imul
jmp
xchg
out
cmpsl
and
test
sub
inc
imull
xchg
sub
push
or
cltd
jle
lret
iret
mov
ja
cmp
jg
sbb
out
nop
and
xchg
popf
jmp
repz
enter
sub
popf
inc
or
sub
aam
jne
in
push
iret
mov
out
cli
std
aaa
pause
cmp
mov
popf
inc
jp
or
inc
test
dec
xor
push
mov
cmp
outsb
sbb
outsb
into
cld
xchg
or
sahf
sti
iret
add
iret
test
xor
push
add
and
xchg
sti
dec
sti
and
iret
movsl
push
ja
push
ljmp
stos
push
xor
int
dec
xchg
xchg
sbb
cmc
out
ret
cld
mov
push
in
cli
pusha
mov
enter
xchg
cld
sbbl
jmp
jno
sbb
test
or
test
push
int
xchg
cmp
outsl
mov
cmp
fldl
cmp
scas
loop
and
lock
lds
mov
out
pop
std
pop
mov
sub
cli
fdivrl
arpl
sub
hlt
inc
aad
fdivrs
rolb
cltd
mov
loopne
stos
cli
dec
ret
fwait
xchg
push
loope
addr16
inc
jmp
xor
jle
jae
aam
dec
xchg
aaa
push
ret
dec
jns
dec
loop
sbb
cmp
scas
jge
or
int3
cmpsl
roll
mov
shl
jp
cmp
nop
mov
sahf
shlb
pop
or
insl
ds
sub
popf
adc
out
sbb
jne
push
ljmp
hlt
mov
pop
pop
xor
loopne
inc
popa
push
out
dec
fucom
test
xchg
xchg
or
sub
push
xor
cmc
cmpsl
xor
cmc
ss
out
mov
cmp
or
dec
sbb
or
adc
bound
and
mov
adc
fs
in
xor
cld
sbb
ljmp
test
cwtl
test
ss
dec
mov
mov
add
mov
pop
xchg
mov
pop
push
mov
loop
pop
jne
lret
and
adc
mov
call
pop
xor
cmpsl
mov
stc
clc
and
and
and
mov
adc
into
pushf
mov
push
xor
insl
mov
push
or
iret
add
jno
stos
and
in
cmp
mov
stc
mov
dec
jne
fisubs
pop
int3
or
sub
mov
aam
xor
repz
or
cld
mov
fmul
cmp
jge
int
inc
adcl
xor
mov
fwait
or
test
jnp,pn
stos
pusha
adc
flds
pusha
mov
sahf
jle
push
loope
cmp
data16
cltd
jae
subb
ss
sub
cmpsl
mov
pop
sbb
rcrb
call
scas
xchg
pop
mov
lret
arpl
lods
jmp
loop
xchg
fisubl
fisttps
fstl
push
pop
mov
in
xor
sarb
or
xor
test
jmp
fcomps
nop
stos
nop
scas
js
ss
sub
pusha
mov
and
cmp
rcrl
insl
mov
cli
pop
inc
dec
in
cmpl
fucom
test
jge
mov
movsl
lret
jmp
push
pop
repnz
in
adc
sub
test
adc
cltd
mov
cld
in
push
aaa
addl
push
xchg
push
mov
aad
inc
inc
popa
aaa
mov
pop
inc
je
loope
stos
insl
sub
xorb
push
or
add
lret
ret
icebp
pop
fisubl
xchg
mov
inc
add
loopne
jle
jne
inc
add
xor
and
xor
fnstsw
jle
xor
mov
push
orl
aaa
in
push
lock
fistps
adc
aas
add
cmpsl
adc
subl
lods
xor
pop
inc
jno
neg
push
nop
mov
jmp
dec
ror
in
add
fimuls
or
mov
int
jmp
nop
movb
or
aad
xchg
mov
in
mov
movsb
cmp
mov
mov
movzwl
jp
xlat
xor
inc
jmp
mov
cmp
mov
repnz
mov
mov
sti
and
pop
mov
mulb
movsl
enter
push
xor
fwait
pushf
push
mov
cmp
mov
jno
sbb
xchg
out
xchg
inc
push
push
xlat
les
and
adc
sub
pusha
jmp
lret
push
or
or
out
mov
mov
dec
push
xor
in
ud1
jno
sbb
ficomps
lea
int
push
inc
push
subl
and
adc
pop
hlt
fwait
mov
jp
fs
icebp
mov
pop
add
and
mov
jl
push
mov
clc
add
fisubl
adc
push
hlt
mov
inc
pop
cmp
jl
stos
inc
popf
iret
cmpsb
and
daa
or
mov
cmp
add
cmp
pop
xchg
addl
sub
mov
or
std
imul
inc
jge
into
jnp
or
aad
mov
test
mov
push
lahf
cmp
push
push
ss
xorl
xchg
enter
xchg
enter
fs
xchg
lock
fldt
enter
das
les
xor
cwtl
movsb
ret
mov
movsl
jmp
pop
mov
insb
and
rcrl
in
or
xchg
testb
xor
fldcw
data16
dec
mov
and
test
mov
jnp
jbe
ljmp
xchg
push
xor
divb
mov
int3
mov
push
inc
pop
adc
pop
mov
jns
cmp
nop
pop
cmpsl
add
rcr
movl
popf
in
push
lret
xchg
and
dec
lret
dec
sti
jmp
xchg
pop
push
jp
js
cmp
fdivrs
inc
pushf
andb
test
cmp
mov
cs
rcll
roll
dec
push
cwtl
inc
jns,pt
lcall
push
pop
sub
sbb
ret
pushf
pandn
clc
xor
add
test
sbb
loope
jge
imul
sahf
xor
lods
mov
or
lods
daa
aad
rcrl
mov
push
jnp
in
sbb
mov
aad
movsl
aam
cmp
and
xchg
les
sbbl
loop
scas
and
pushf
aaa
sbb
ret
push
cltd
mov
aaa
mov
ficompl
scas
ja
cltd
sub
jp
js
cmp
cltd
mov
cmpsl
jecxz
jp
mov
out
ficoms
stc
pop
lods
jg
mov
fs
cmp
xor
imul
inc
pop
shr
and
clc
xchg
dec
xor
popl
adc
aam
cmp
shrl
inc
pop
shlb
add
ss
cwtl
push
push
pusha
sub
lcall
cwtl
clc
std
nop
sub
dec
add
inc
sbb
push
cmp
es
or
xchg
sub
add
inc
jno
xchg
cmc
xor
cwtl
or
xor
jge
push
cli
sbb
addr16
pop
js
scas
fmull
mull
inc
and
sbb
dec
push
mov
adc
mov
rcrb
pop
add
out
lock
pop
fs
pushf
int3
fst
fcoms
into
aaa
sbb
test
negb
pop
xchg
imul
adc
dec
test
jle
xor
test
aas
fsubrl
pop
jno
scas
mov
insb
lock
push
sub
mov
adc
or
int
bound
sub
es
imul
sub
lods
call
test
add
rcr
sub
aaa
xchg
xchg
adc
insl
xchg
shlb
inc
xchg
in
jl
dec
inc
dec
xor
and
mov
or
jmp
pop
or
jbe
aas
enter
adc
mov
cltd
subb
ja
incb
repnz
cmp
inc
push
xchg
es
and
mov
addb
fs
je
in
mov
popf
push
mov
adc
adc
fsts
test
repz
jecxz
sub
repnz
dec
std
std
adc
adcb
and
bound
mov
fistpl
or
adc
mov
je
jno
stos
adc
jne
mov
scas
adc
push
dec
adcl
mov
mov
aas
and
int
das
xor
insl
lcall
xchg
cld
push
pop
pop
mov
popf
push
xchg
divl
pop
push
lahf
inc
pop
xchg
shrl
fistl
rorl
xchg
mov
jbe
cli
sahf
or
lret
lods
cmp
cmc
pusha
lds
aam
int3
out
sbb
pop
push
les
xor
cmpsb
push
jnp
sbb
sbb
aaa
sbb
jp
mov
scas
xor
pop
insl
test
dec
mov
test
inc
inc
pushf
or
clc
pop
jl
mov
cmc
jmp
ret
sbb
and
mov
mov
loope
sub
pop
adc
sub
or
rclb
je
sbb
mov
js
shl
dec
sub
cmpb
sbb
cwtl
movsb
int
roll
loopne
ja
clc
lret
js
xchg
pusha
sbbl
rolb
mov
sbb
mov
add
sub
les
daa
movb
lds
mov
in
mov
sub
dec
ret
sub
stos
enter
in
pop
push
adc
add
test
inc
xlat
push
shlb
cmp
rclb
push
lea
mov
mov
pop
test
mov
adc
mov
aaa
int3
loopne
xchg
mov
jecxz
into
mov
mov
int3
scas
ficoms
or
xor
imul
cmp
xlat
and
fisubrs
fidivs
imul
sub
push
out
sahf
lret
xor
in
cmpsl
push
js
adc
sub
rorb
jno
add
dec
mov
or
std
lds
mov
mov
lahf
dec
xchg
mov
sbb
mov
mov
inc
sbb
sbb
lds
xor
loope
sti
pop
jns
add
iret
xchg
fsts
cwtl
movsb
push
ret
cmc
jns
add
pop
xchg
stos
adcl
fnstenv
addl
xchg
test
sub
outsl
clc
push
mov
ja
leave
or
and
loope
jns
loope
push
mov
xchg
repnz
lcall
jo
mov
mov
sub
lock
aam
test
ds
mov
cld
fisubl
fildl
loope
pusha
inc
jle
fcoml
mulb
insb
aaa
leave
mov
cwtl
outsl
mov
outsl
dec
das
daa
jmp
mov
pop
dec
pushf
lea
stos
divl
jb
stos
and
sbb
mov
push
xor
and
sbb
and
lods
mov
ret
pop
and
addl
adc
data16
adc
cmpsb
push
insl
sbb
rorb
out
pusha
ljmp
loope
lods
mov
je
adc
ret
dec
mov
adc
dec
jecxz
mov
movsb
mov
mov
shrb
fistpl
jg
nop
jb
inc
cltd
sub
push
ret
fsubrl
out
mov
xor
mov
mov
cmc
lret
dec
popf
test
and
ret
cs
mov
scas
pop
in
sti
pop
push
into
mov
repz
push
cmp
push
faddl
mov
cmp
mov
imul
insb
pop
xchg
and
inc
es
xchg
nop
mov
cmp
sbb
add
cmp
adcl
inc
fisubrl
mov
addl
sub
jp
fcomp
jne
repnz
dec
movsb
add
mov
int
sbb
rclb
mov
cmpsb
mov
jbe
mov
lcall
dec
mov
jno
pop
lahf
aas
ret
mov
cs
aad
xor
mov
jge
push
pop
iret
jle
xor
mov
inc
cmp
lret
xor
sub
gs
cli
xor
test
cmp
pop
out
mov
jb
popa
push
xchg
cmp
stos
mov
xchg
lea
jns
sbb
adc
inc
fnstenv
insb
ret
dec
adc
leave
cmp
rolb
jp
sub
inc
test
arpl
popf
stos
add
idiv
loopne
push
cld
test
add
push
cmp
mov
pop
outsl
mov
scas
dec
lock
pop
inc
pop
adc
mov
sbb
enter
stos
dec
push
sbb
xor
repnz
rcrb
in
inc
out
jbe
es
adc
mov
scas
pop
test
xor
arpl
pushf
scas
jnp
mov
jg
sahf
xchg
aad
mov
shrl
push
in
xchg
sub
add
idivb
jmp
sbb
push
jge
out
in
insl
arpl
arpl
xor
xchg
cltd
dec
add
iret
and
rclb
xor
push
adc
sbb
xor
je
xchg
mov
test
push
mov
push
adc
gs
and
ret
hlt
mov
dec
nop
cmpsb
mov
test
and
ret
cmpsl
sbb
cmp
cltd
cli
xor
dec
sbb
cltd
loope
arpl
insb
ss
add
or
loope
stos
aaa
pushf
mov
cmpsb
jecxz
push
push
aaa
sbb
inc
push
mov
mov
movsl
rcl
push
add
cmpsl
pop
pushf
ljmp
xchg
loopw
jge
add
out
js
insb
insb
fcomps
mov
push
repnz
mov
test
inc
jnp
mov
lahf
loopne
test
mov
sbb
ret
add
inc
pop
mov
stos
cmp
sbb
push
adc
sub
cmp
out
fsubrl
fdivrs
out
lock
inc
inc
or
jge
pushf
cmpsb
jnp
xor
sbb
enter
fisubl
int3
mov
es
test
imul
sub
stos
fs
sbb
cltd
pusha
pusha
push
xchg
sbb
xchg
cmp
sub
jmp
jae
stc
stos
inc
xorl
adc
jae
ret
inc
mov
fs
bound
inc
mov
inc
push
sub
fsubrl
sub
fildl
mov
sbb
ret
test
jl
lcall
cmp
and
das
mov
sub
xchg
iret
mov
lcall
push
fistl
add
add
cmp
and
xor
push
sbb
es
jbe
out
pop
vmaxss
dec
or
jl
lret
out
jge
xchg
lret
mov
xor
rcrb
pop
xor
add
sbb
jecxz
mov
fldenv
pop
mov
dec
inc
clc
xchg
testb
xor
push
ss
subl
pop
and
mov
xchg
cmp
add
xor
push
pop
cmp
sub
fwait
add
cmp
add
xchg
idivb
mov
jecxz
cmc
cltd
mov
cmc
clc
iret
and
jg
mov
jecxz
lods
popl
mov
add
into
in
jae
repnz
ljmp
mov
mov
cmp
ss
fnstenv
jns
pop
in
inc
loop
mov
mov
xchg
pop
inc
in
fisttpll
xor
and
shrb
push
outsl
jl
ret
fisttpll
cmpsb
ljmp
jge
jae
incb
sub
cmp
jb
xchg
andl
sbb
cmp
fstpt
lds
shlb
pop
bound
mov
jb
cli
stos
cmp
mov
loop
ret
insl
mov
pop
pop
sub
out
mov
pop
mov
addr16
add
sbb
xor
cmp
xchg
inc
inc
inc
inc
mov
inc
sub
pop
mov
out
iret
pop
neg
bound
in
loopne
pop
cmc
xchg
lcall
adc
insl
cmp
ret
mov
cmpsl
mov
xchg
adc
lds
dec
aaa
or
idivb
pushf
popf
fcoml
mov
mov
out
jns
sbb
jns
mov
cld
popa
hlt
mov
jg
xor
dec
je
dec
ficoms
out
push
mov
je
mov
xor
clc
sahf
mov
std
jb
fldl
pop
fldenv
mov
jge
push
enter
or
lret
xchg
ja
pop
cmp
stc
xchg
es
out
dec
out
mov
dec
inc
push
lahf
loopne
test
add
jmp
nop
lret
mov
xlat
jb
out
xlat
pop
mov
movsb
scas
mov
loop
sbbl
movsl
jb
push
es
pushf
jmp
or
lods
xor
jg
cmp
cmp
push
xchg
and
mov
es
lods
insl
testl
stos
pusha
rcrb
dec
lds
in
pop
mov
mov
jmp
insb
sub
sarl
sbbb
xchg
das
out
repnz
daa
dec
cmp
movsl
sbb
adc
sub
lret
add
aam
pop
mov
sub
ret
pop
push
insb
mov
xchg
inc
sbb
sbb
lods
pop
inc
xlat
out
mov
mull
out
push
mov
out
test
inc
iret
push
imul
xlat
shlb
mov
test
adc
incb
jmp
popa
mov
jbe
je
les
enter
push
pop
lahf
dec
mov
out
jle
xor
lods
das
sti
lret
andb
outsl
sub
xchg
push
and
xchg
mov
dec
xor
add
adcl
dec
fdivr
xchg
data16
adc
push
in
xor
out
addr16
mov
inc
das
pop
mov
sbb
and
lahf
sbb
out
push
mov
cmp
cli
inc
out
and
mov
test
lret
das
lock
sarb
xchg
inc
ficoms
add
popa
and
aaa
sti
data16
and
mov
push
mov
rolb
jmp
xor
insb
sbb
or
inc
shlb
jle
jmp
sub
mov
clc
lcall
gs
inc
rcll
cld
mov
and
ds
repz
xor
pop
ret
repz
ljmp
sub
out
mov
adc
mov
cld
cmp
jge
jmp
adc
pop
push
dec
ljmp
nopl
movsl
mov
sbb
xor
adc
push
xor
inc
les
and
shlb
pop
adcl
lret
push
push
int3
faddl
push
pop
jle
adc
jb
data16
xor
jne
andb
nop
into
cmpsb
les
fcmovne
sub
lret
pop
es
push
pop
push
sbb
leave
lock
insb
test
mov
xor
xorb
gs
or
notl
mov
test
push
pop
popf
adc
lds
ret
mov
std
mov
xchg
push
mov
outsl
inc
dec
xchg
xor
ds
mov
aas
xor
leave
imul
movsl
pop
pushf
dec
in
aad
popa
fsub
cmp
mov
add
mov
fwait
cs
fs
lea
push
pop
sub
idivl
fsubr
pop
push
int
lods
push
mov
js
iret
jno
mov
cli
sahf
xlat
nop
jp
insb
mov
fcompl
dec
dec
bound
mov
xchg
fdivr
add
push
mov
outsb
imulb
xchg
les
stos
outsl
adc
in
enter
push
jge
xlat
aad
call
sbb
fisubrl
pushf
cs
xchg
movl
inc
xchg
mov
mov
xor
xchg
jns
xchg
pop
and
jecxz
sbb
je
clc
sub
in
out
in
inc
loope
outsb
jo
inc
add
mov
pusha
push
xchg
push
dec
pop
scas
int
in
and
sar
pop
or
aaa
sub
lret
mov
jp
jo
mov
mov
movsl
inc
outsb
mov
std
mov
aaa
mov
aas
jo
dec
inc
mov
pop
jl
shrl
jl
cld
push
je
idivl
outsb
jecxz
leave
xchg
push
ja
xchg
mov
push
scas
les
sbb
mov
jnp
add
pop
xchg
xor
and
cmp
ss
lahf
jg
push
add
aam
ja
cmp
inc
add
cmc
xchg
adc
cmp
stc
push
add
mov
popf
in
addl
cmc
dec
xor
movsl
sahf
mov
lods
xor
clc
clc
cmp
ja
gs
xor
inc
push
cmpsl
sarl
mov
jmp
xchg
add
xor
jo
mov
jae
mov
xchg
pop
es
aaa
push
lods
adc
mov
cwtl
rclb
cld
lcall
fcoms
mov
sub
adc
jl
cmp
add
sbb
loopne
xorl
ljmp
sub
xor
loope
imul
xchg
repnz
inc
sub
sbb
lods
dec
cs
mov
mov
mov
gs
out
xchg
iret
sbb
xchg
pushf
or
leave
out
inc
aaa
jge
lock
jmp
add
mov
shll
jmp
pop
sub
adc
cs
or
shlb
xchg
ret
fiadds
mov
xchg
es
call
les
lret
pushf
faddl
popa
pop
xchg
sarl
or
aam
ud0
xchg
lahf
xlat
int3
sbb
fldcw
and
jp
xchg
xor
or
adc
lods
add
in
push
push
and
sbb
sub
pop
mov
orb
xchg
jg
adc
addr16
aaa
pop
adc
push
cs
jecxz
adc
ljmp
xchg
push
jno
dec
shlb
in
add
dec
mov
mov
ret
out
ret
pushf
sbb
pop
sbb
mov
dec
aaa
int
mov
cli
or
push
andb
fwait
shrb
jl
pop
jmp
mov
jbe
or
sti
test
stc
js
mov
aad
int3
enter
push
icebp
lcall
push
jl
add
scas
test
gs
jge
adc
mov
shl
jle
or
mov
std
jo
jo
sahf
sbb
imul
mov
jmp
sub
xchg
out
mov
add
sbb
test
addl
xor
sarl
xlat
pop
ret
inc
pop
stos
jno
or
lcall
test
mov
rcl
cwtl
cs
adc
push
pop
cltd
je
lock
and
pop
cwtl
mov
mov
push
jb
mov
int3
jge
sahf
cmp
push
subl
push
dec
mov
pop
mov
xchg
or
sub
cwtl
loopne
nop
les
clc
inc
shrb
mov
adc
pushf
fiadds
out
movsl
dec
cmpsb
sbb
pop
jecxz
cmp
cmp
mov
inc
and
jp
and
pop
add
mov
test
outsl
fwait
es
xchg
adc
sub
rcll
inc
adc
mov
jle
pop
cmp
cvtdq2ps
inc
push
call
fsts
lret
js
and
fcmovb
sbb
xchg
mov
jns
mov
popf
mov
test
frstor
sub
sbb
insl
jo
loope
neg
fisubrl
scas
sbb
loop
movsl
cmp
mov
jle
sbb
decb
repz
jmp
outsl
pushw
adc
data16
loopne
rcrl
insb
dec
jno
and
vpcmov
aam
pushf
fiaddl
adc
loope
add
lret
out
in
jne
xor
pushf
sub
lret
adc
push
cmp
mov
xchg
jne
bound
cmp
out
push
xchg
xchg
add
fists
push
push
ss
push
or
inc
pushf
push
xor
les
test
xchg
sub
push
fwait
jg
outsb
inc
mov
cmpsb
jne
dec
jge
dec
jo
push
mov
push
xor
lods
sub
dec
or
jno
divl
fwait
ja
push
cmpsb
mov
lods
sahf
sub
outsb
xchg
pusha
shrb
mov
push
jg
mov
cmp
or
xchg
aam
pop
push
dec
dec
dec
loopne
arpl
push
sbb
inc
icebp
and
das
inc
outsb
xchg
repz
test
jmp
and
sub
pop
cltd
push
in
add
jmp
pop
stc
adc
fadd
ljmp
sbb
add
mov
adcb
pop
xchg
test
sbb
mov
aaa
xchg
andl
dec
fwait
out
or
push
mov
adc
sub
ret
out
out
mov
jno
insl
leave
in
mov
loope
mov
sti
inc
dec
clc
xchg
inc
enter
ss
rcl
popf
mov
jmp
push
and
js
or
mov
pop
mov
inc
mov
inc
push
cmpsl
mov
xchg
imul
and
aas
sub
mov
inc
lods
fistpl
mov
jecxz
das
dec
ss
push
movl
push
test
fmul
inc
xchg
sub
sub
mov
and
inc
setnp
inc
push
shll
jg
or
or
mov
jb
sbb
fcmovb
into
pop
daa
outsb
jecxz
push
mull
loope
push
fs
mov
adc
out
adc
out
jmp
and
in
inc
int3
xor
cmpsl
dec
inc
push
orb
js
lods
lea
stc
dec
or
dec
sub
sub
cld
cld
sti
test
xor
cmp
out
mov
ss
aam
pop
mov
inc
shlb
cmpsl
inc
iret
sub
dec
in
test
mov
cmpsl
mov
jge
sbb
icebp
adc
mov
sti
pop
mov
sbb
jle
mov
push
ficoms
rcrl
int
lcall
lds
cmp
gs
movsl
add
movsl
jge
data16
addb
arpl
cmp
pushf
bound
pushf
jge
cs
mov
ret
jb
lea
push
xchg
outsl
lock
ret
xrelease
inc
push
js
push
repnz
icebp
adc
sub
test
out
icebp
mov
cmpsl
dec
fildl
jecxz
pop
idiv
adc
pop
outsl
and
ss
or
pop
cs
in
add
cld
or
inc
jge
jp
mov
and
not
gs
nop
shr
lahf
adc
sub
fisubs
mov
inc
cmpsl
jno
inc
push
dec
lock
xor
test
push
mov
into
cltd
add
insl
in
cmp
cmp
push
sbb
jbe
movsb
movsl
mov
cmp
mov
dec
mov
fs
push
out
fidivrl
xor
mov
add
cmc
add
or
mov
inc
gs
add
pushf
and
mov
int
int3
sub
cmpsb
in
jmp
mov
mov
dec
and
jo
adc
xchg
jno
and
clc
scas
cmpsl
mov
sbb
stos
or
call
or
xor
int3
ds
mov
insl
int3
mov
outsb
xchg
jge
cwtl
xor
cmp
xchg
push
cmpl
inc
and
or
mov
add
dec
es
mov
mov
icebp
loop
dec
pop
addr16
mov
or
adc
out
stc
lds
pop
fisubl
int3
mov
lock
stos
outsb
jge
mov
pop
icebp
subb
shrl
mov
addr16
sbb
loop
rcrl
popf
mov
fisttpll
xor
adc
push
jmpw
clc
dec
or
cmp
nop
scas
mov
dec
jne
out
xchg
nop
dec
ret
mov
clc
push
jecxz
nop
test
mov
test
pop
pop
jno
jge
push
aad
or
loopne
or
push
das
sbb
out
pop
jo
cmp
xchg
aas
mov
fdivs
pop
adc
jp
pop
inc
sbb
fwait
popf
shrl
fwait
leave
jae
js
pop
xor
in
shll
add
jge
neg
jp
out
ss
in
mov
jmp
test
ds
sub
cmp
or
les
in
dec
jo
imul
outsb
daa
iret
push
out
fldcw
xchg
inc
lods
popa
in
in
int3
sub
cld
mov
daa
add
arpl
aaa
orb
jns
mov
xor
xchg
paddsb
fs
pop
cli
xchg
shl
or
fstl
fsubrl
and
mov
pop
jo
lods
mov
inc
lods
ja
jb
jecxz
aas
jp
cltd
sub
popf
sbb
pop
lods
pop
lret
aad
iret
roll
dec
wrmsr
int3
sahf
mov
xlat
jae
cmp
scas
sarb
int
fwait
inc
mov
xchg
int
jno
fs
jl
mov
jge
addr16
cmpsb
lods
add
int
push
lcall
mov
popa
jb
in
adc
sbb
call
mov
fs
push
xchg
fmull
in
pop
js
push
rcr
rclb
push
pop
xchg
mov
inc
out
sbb
xchg
sub
lcall
rorl
in
push
mov
insl
dec
scas
mov
mov
mov
cmp
jg
clc
push
cltd
fidivrs
and
inc
inc
pop
subb
xchg
jae
add
jne
fisubl
xchg
movsb
jns
mov
pop
mov
in
fdivr
jmp
icebp
sbb
lret
sbb
mov
mov
lret
outsl
push
in
call
cmp
inc
mov
mov
adc
pop
jns
mov
pop
movsl
pusha
xor
mov
rolb
lds
pop
jae
and
push
pop
xchg
sbb
sub
mov
icebp
ja
out
inc
mov
xchg
add
jns
or
enter
lret
js
lock
fmull
inc
outsl
xlat
scas
icebp
out
dec
leave
out
mov
inc
and
sub
mov
stos
fmuls
lahf
scas
mov
dec
cmc
scas
pusha
xchg
dec
xchg
lret
enter
mov
mov
mov
test
add
push
call
push
fcompl
jnp
bound
or
xor
in
in
loop
or
xchg
bound
cmp
fsubrs
dec
out
pop
push
out
mov
sbb
push
push
push
pop
jle
sbb
dec
mov
jmp
xor
shlb
and
pop
movsl
dec
push
out
in
lret
fistpl
dec
fstps
lahf
add
sbb
pop
out
mulb
pop
xchg
add
mov
stos
xchg
adc
pop
mov
mov
dec
cmp
or
and
loop
cmp
or
mov
nop
icebp
pop
in
mov
mov
dec
mov
push
pop
jnp
cmp
push
lcall
pop
pop
cmp
test
bound
int
lods
cmpsl
pop
das
add
mov
xchg
test
in
sub
lahf
cmpl
ds
movl
add
xor
stc
sahf
pop
jle
enter
sub
and
pushf
or
mov
test
aaa
adc
loope
xchg
mov
movsb
ret
jge
popf
cmp
mov
sub
in
sub
clc
bound
cmp
imul
mov
cld
nop
dec
mov
or
adc
mov
cmpsb
adcb
inc
sbb
mov
cli
or
and
push
adcb
mov
xchg
test
jle
neg
stos
pop
popf
sti
add
push
sbb
xor
push
sti
xchg
pushf
rol
cmp
loope
in
mov
jno
lret
ret
add
ret
xchg
mov
mov
pop
add
daa
mov
jb
lret
add
scas
roll
mov
xor
sbb
cltd
mov
xor
inc
and
cltd
xchg
fsubrs
push
jo
dec
imul
mov
cmc
imul
or
out
mov
or
outsl
loopne
add
popa
imul
or
mov
aas
sbb
or
push
mov
adcl
fistps
sub
inc
arpl
jle
std
push
cltd
and
pop
out
pop
pusha
iret
lea
shrl
adc
aad
lds
jecxz
bound
in
pop
std
adc
mov
fdivr
push
in
xchg
cmp
pop
push
mov
cmp
cmpsl
mov
cwtl
adc
lods
jmp
call
in
test
push
mov
push
shlb
add
mov
inc
xor
fwait
dec
dec
mov
xchg
andl
or
out
insl
lods
jno
xchg
push
lcall
mov
xchg
or
push
scas
cld
js
mov
cmpl
or
dec
dec
mov
sub
mov
or
int
jg
push
add
or
mov
add
dec
test
stos
std
sub
xor
loopne
cmc
push
push
inc
xor
nop
push
xchg
sti
push
scas
inc
std
xor
adc
inc
dec
xchg
mov
mov
es
ret
aas
nop
adc
push
insb
jl
mov
enter
jne
dec
cltd
ret
in
jg
adc
push
fsubs
roll
insb
cmp
ja
out
stos
mov
dec
mov
push
add
jno
add
fstps
mov
mov
loope
sub
imul
leave
pop
mov
cmp
cmp
mov
cmpsb
lds
mov
or
pusha
cmp
ljmp
fs
xchg
add
push
xchg
xor
pop
divb
xor
add
sti
xchg
push
xchg
add
and
outsl
rclb
xchg
dec
es
pop
fnstcw
shlb
dec
lock
in
xchg
seto
stos
mov
negl
rcll
add
sahf
test
sbb
mov
and
nop
dec
jecxz
test
xlat
loop
push
push
insb
leave
lahf
mov
sbb
and
hlt
imul
pop
data16
pushf
aaa
jle
xchg
lea
mov
shrl
adc
mov
xchg
or
aas
lods
int3
mov
mov
nop
lmsw
inc
iret
repz
sub
lods
sarb
jle
pop
jg
insb
adc
dec
fs
stos
sti
add
mov
xchg
orb
test
push
xchg
pusha
aas
ucomiss
cld
fmulp
mov
aad
or
or
iret
mov
inc
push
iret
push
cmpsb
push
shlb
or
jmp
es
movsb
lock
xor
or
xor
push
jmp
fsubrs
out
cmpb
jbe
ss
and
pusha
cld
push
clc
rcll
mov
and
mov
jnp
or
bound
xor
cmpsl
stos
test
int
add
jp
lea
sbb
xchg
push
aaa
adc
mov
call
jb
negb
sbb
xlat
cmc
xchg
mov
int
pop
repnz
fsts
stc
dec
mov
fsubrs
xor
pop
call
inc
adc
out
gs
outsl
adc
inc
add
lcall
js
and
add
sub
and
ljmp
inc
jg
repz
test
scas
jmp
adc
insb
nop
mov
mov
mov
int
mov
int
mov
popa
pusha
fstps
cmp
stos
push
xchg
cmpsl
std
fwait
xor
and
test
mov
bnd
inc
fs
je
mov
sti
je
adc
xor
pop
push
push
ss
lret
dec
lds
jge
fimull
loop
stos
call
sbb
rcrl
fwait
ljmp
cmp
sbb
xor
jmp
std
push
pop
mov
mov
jne
pop
loop
int
mov
mov
movsl
xor
dec
cmpb
stos
xchg
or
xchg
stos
push
mov
cmpxchg
ret
cld
adc
mov
and
cmp
cmp
mov
xchg
lds
insb
out
adc
lods
inc
nop
sbb
je
push
add
dec
xchg
pop
inc
mov
lock
xor
shlb
movsl
imul
mov
jb
stos
inc
lods
cmc
fbld
insb
ficomps
jle
mov
das
sub
mov
das
pop
and
je
shll
mov
test
cmc
pop
or
loopne
sub
push
cmpsb
mov
outsl
leave
fists
repz
adc
cmpsl
das
mov
jae,pn
mov
ja
js
loop
mov
or
imull
out
pop
push
lcall
cmpsb
sub
mov
int
rcl
dec
push
sub
sbb
fcompl
int
pop
jae
mov
lods
jp
test
in
fcoms
cs
aas
sub
int3
xor
mov
scas
cmpsl
idivb
push
cli
scas
jl
push
pop
or
xchg
cwtl
push
mov
sbb
int3
js
out
lds
mov
jae
fadds
or
adc
test
out
mov
mov
push
mov
pushf
shll
loop
cli
push
jne
mov
push
push
outsl
jae
lret
xchg
inc
mov
dec
aas
call
loop
pushf
mov
and
shlb
mov
mov
mov
icebp
scas
out
push
sub
mov
inc
outsb
mov
xchg
ficoml
int3
cmpsl
movsl
aad
pop
push
rcll
cmp
subb
aas
test
scas
mov
and
int3
cmpsl
cltd
jge
mov
cmpsb
sub
loop
sahf
add
adcb
push
pop
jg
vpmadcswd
lea
jle
or
lret
cmpsb
or
cltd
push
lret
ret
addr16
jl
fldt
aaa
push
stos
icebp
cli
in
lcall
aam
pop
push
mov
cmp
mov
pop
sub
loopne
add
mov
call
dec
call
jae
pusha
or
gs
lods
dec
pop
lock
subl
cmp
cld
mov
movsl
out
dec
sbb
fists
stos
test
and
enter
movb
aam
fcomps
lods
cmp
imul
test
and
inc
inc
sbb
cmpsl
dec
sahf
adc
push
adc
xor
adc
mov
out
lods
rcl
sbb
mov
sahf
popl
icebp
add
std
inc
xlat
mov
xchg
leave
jmp
insb
enter
push
fidivs
jbe
adc
popa
shll
push
dec
pop
mov
adc
lods
or
mov
jmp
lcall
jno
adc
sahf
mov
dec
pop
cltd
xchg
and
push
sbb
mov
xchg
repz
pop
mov
add
xor
mov
lahf
xchg
inc
add
inc
nop
inc
push
inc
loop
inc
xchg
aad
cs
fsubr
sahf
ror
or
sbb
inc
jb
mov
imul
add
rorb
es
sti
lahf
sub
loopne
insl
call
xchg
loop
jae
iret
js
shlb
xor
daa
pop
xchg
add
sub
inc
dec
jge
mov
or
inc
cli
pushf
sahf
pop
and
mov
push
aas
arpl
out
pop
lea
idivl
divl
mov
jp
repnz
push
pop
push
cmpsl
push
mov
adc
inc
js
xchg
out
es
orl
js
aas
inc
lds
adc
sbb
sbb
lds
pop
lahf
gs
pop
pushl
push
ret
cmpsl
aas
mov
pop
std
add
adc
mov
sbb
lcall
inc
sahf
sub
mov
mov
jecxz
sub
mov
mov
notb
loope
test
adc
pop
and
aad
cld
push
sahf
and
mov
bound
arpl
sbb
pop
bound
nop
imul
add
lock
repz
cmc
cmpl
and
add
jo
adc
pop
js
mov
fcomip
jae
push
std
push
xlat
or
xor
test
in
insb
pushf
arpl
add
addr16
sub
jmp
icebp
xor
ret
xchg
fnstenv
mov
clc
sub
inc
pop
add
loop
inc
dec
jg,pn
mov
aad
mov
in
out
xchg
out
mov
pop
jecxz
xor
stos
stos
jnp
mov
les
and
idivb
xor
fldt
sub
cwtl
cmp
hlt
add
aam
sahf
jecxz
lock
out
cli
ds
scas
frstor
xor
adc
jo
fwait
clc
mov
adc
dec
mov
dec
stc
cmp
and
std
dec
inc
in
xchg
push
jns
lret
enter
je
cmp
xchg
es
mov
jmp
dec
lock
xor
fisubrs
sbb
jecxz
inc
mov
insl
mov
test
push
bound
xchg
pop
ja
pushf
imul
inc
dec
xchg
std
lods
xor
cs
add
push
subl
push
xchg
xchg
cmp
inc
push
mov
push
loop
pop
test
sbb
inc
imul
std
jb
or
cltd
cmp
mov
xor
mov
sti
sub
dec
mov
into
jo
dec
rolb
adc
call
lahf
mov
enter
outsb
adc
adc
ret
xchg
je
subb
scas
shlb
fdivrp
ret
leave
in
fwait
lcall
rcl
jl
inc
aam
pushf
xor
loop
lock
clc
aaa
jns
sbb
not
add
mov
pop
push
icebp
push
and
add
jg
popa
out
mov
or
xor
test
inc
cwtl
jnp
enter
in
jl
enter
in
jnp
sub
lods
jnp
shrl
icebp
movsb
xor
aad
movaps
movsl
adc
cmpsl
pop
lods
xor
gs
test
jge
adc
mov
jb
add
sti
or
out
dec
cmp
scas
mov
jnp
sti
jb
fcomp
fisubs
cmp
jge
scas
out
das
or
sub
outsl
dec
pop
rclb
out
std
dec
sub
ja
jp
in
aad
subl
leave
je
adc
aam
pop
push
dec
sbb
xchg
icebp
in
xlat
jmp
dec
jmp
test
adc
cmc
add
cwtl
xor
imul
iret
xlat
stos
call
or
mov
stc
sub
out
clc
mov
cmc
mov
rcrb
and
jae
out
xor
aaa
cs
xor
jb
jge
mov
mov
or
adc
push
jle
push
ljmp
pop
pop
stc
jecxz,pn
adc
xor
notl
or
xchg
ss
push
test
mov
das
inc
arpl
ds
mov
cmc
lds
mov
shlb
and
fnstenv
sub
inc
pop
cwtl
bound
push
in
pop
mov
jmp
std
in
inc
jb
in
dec
das
test
mov
popa
mov
movsl
iret
cmc
pop
test
fwait
xchg
idivl
jno
test
test
jecxz
mov
dec
or
push
xorb
call
dec
cmp
mov
add
xchg
testl
or
xor
xor
push
imul
imul
aas
lret
sbb
addl
rorl
outsb
scas
xchg
test
xchg
movsl
or
loope
xor
mov
data16
jp
in
insb
push
insb
sbb
pop
stos
inc
sti
xchg
push
cmpsb
stos
fstps
sarl
test
movsl
add
lods
mov
repz
jmp
pop
dec
movsb
lcall
rcrl
jecxz
outsl
xchg
adc
inc
adc
xor
out
shlb
mov
lods
pop
jg
push
cs
cltd
mov
lahf
push
mov
jo
or
push
and
cmpsb
adc
add
push
test
adc
push
and
sub
subb
mov
clc
xchg
pop
inc
fisttps
dec
lret
das
lcall
clc
test
pop
mov
jg
sahf
lods
arpl
rcll
repz
sbb
xchg
bswap
xor
pop
xor
inc
dec
iret
cld
cmp
insl
testb
xchg
xor
sub
inc
jbe
popf
call
add
or
sar
stos
mov
data16
rep
adc
lock
mov
push
adc
fsubrl
inc
mov
dec
sbb
jno
inc
sub
iret
sbb
xchg
inc
mov
adc
pop
scas
dec
adc
mov
imul
lret
data16
lret
or
das
sbb
pushf
and
pop
sub
sbb
inc
aam
into
pop
stos
adc
mov
jno
push
mov
adc
stc
loopne
push
sahf
pushf
cmp
jae
pop
subl
dec
push
adc
loopne
idivb
xor
subb
pop
orb
sub
or
rcll
iret
scas
aad
inc
js
jo
pop
into
mov
inc
cmp
jl
insb
imul
sbb
jbe
adc
jo
push
cmp
or
adc
out
gs
outsl
in
jecxz
inc
into
mov
mov
loop
xchg
lods
push
push
jns
shl
popf
mov
cs
push
cwtl
or
iret
sbb
clc
rcll
loop
or
xchg
aas
imul
sbb
jmp
pop
xchg
aad
adc
adc
lods
gs
jae
popa
push
mov
je
mov
test
movb
sbb
scas
push
fdivl
mov
fdivr
adc
loop
in
mov
enter
xchg
sbb
xor
cmpb
lods
adc
push
jno
testb
outsl
dec
push
scas
dec
jno
inc
int3
js
mov
xor
jbe
in
pcmpgtd
jb
dec
jmp
data16
jle
pusha
dec
jp
mov
mov
out
cld
sti
inc
jp
pop
aad
sub
push
dec
add
mov
popf
push
clc
push
stos
xchg
sahf
adc
icebp
jecxz
xlat
test
stos
leave
sbb
pop
inc
test
pop
in
push
icebp
or
test
scas
lea
inc
popa
adc
dec
dec
mov
inc
or
test
mov
imul
adc
cmp
mov
into
cmc
into
aas
hlt
inc
sbb
fcomps
mov
mov
dec
or
loop
and
dec
testl
pop
push
mov
cli
aaa
pushf
fmuls
inc
pop
xchg
leave
xchg
sbb
push
lock
scas
inc
push
add
dec
mov
mov
ret
adc
pop
mov
test
mov
shrl
int
inc
cld
fisubl
call
pop
leave
jo
push
out
ja
mov
adc
mov
cltd
ja
aam
cs
leave
lods
loopne
xchg
je
mov
mov
mov
imul
and
popf
inc
mov
subb
pusha
push
stos
cmc
jge
scas
stos
push
xor
cmp
cli
in
add
outsl
sub
imul
xor
in
icebp
inc
iret
xorl
es
push
push
inc
jge
dec
mov
scas
fldln2
into
push
add
stos
xchg
ss
jmp
dec
jp
vpackuswb
je
xorb
sub
sbb
dec
andb
add
ret
sub
lahf
mov
negl
xchg
mov
jle
and
ficompl
xor
mov
fcoml
or
test
dec
sub
mov
test
dec
add
popa
mov
loope
loope
pop
and
dec
cmpsb
fildll
push
sub
adc
out
mov
pop
push
adc
sub
xchg
sub
nop
mov
shr
in
xor
jno
inc
xchg
lods
ds
sbb
inc
pop
js
cmc
lret
lock
das
push
push
out
mov
fwait
mov
mov
jl
fmull
cli
aaa
hlt
mov
and
sub
pop
imul
ficompl
fsts
into
loop
dec
mov
loop
cwtl
ret
push
xchg
pushf
fisubl
std
mov
dec
repz
or
add
add
loop
xor
loopne
iret
lds
outsl
adc
in
aas
xchg
mov
test
xchg
movl
push
xor
mov
push
mov
lods
add
ljmp
icebp
xor
jecxz
mov
sbb
dec
popa
inc
sbb
add
xor
sbb
mov
pop
dec
jl
xchg
aas
loopne
sbb
int
arpl
xlat
loopne
ficoms
in
xchg
je
jmp
push
nop
outsb
xchg
and
je
fisubl
sub
dec
rol
loopne
dec
cmp
stos
sahf
ljmp
cli
mov
test
pop
rcrb
std
pop
mov
int3
dec
push
movb
mov
out
adc
int
mov
cmc
bound
dec
jecxz
inc
iret
push
es
mov
pop
add
or
jne
gs
jl
xor
fsubp
cld
es
or
popf
dec
lds
push
add
jne
xchg
test
shrb
addr16
inc
sbb
lcall
fs
adc
dec
and
mov
hlt
ret
pop
jge
test
dec
mov
push
cmp
add
sub
push
inc
sub
pusha
ret
or
cmp
fldl
lcall
dec
out
dec
dec
fwait
js
int3
xchg
mov
mov
lcall
adc
cmc
int3
or
sbb
pop
adc
pop
pop
mov
cmp
gs
lods
sahf
push
cld
jb
das
testb
jmp
adc
or
in
movsl
xor
mov
mov
hlt
test
insb
adc
cwtl
xchg
in
rorb
sbb
adc
cli
pushf
ljmp
mov
cmp
in
adc
push
ljmp
ja
das
outsb
shr
jl,pt
xchg
shrb
and
jl
ud1
or
cmc
dec
outsl
xlat
arpl
lahf
out
fld
inc
inc
pop
xchg
testl
jl
mov
mov
sbb
dec
das
insl
es
sub
xchg
ffree
mov
lss
push
xchg
xor
sbb
stos
xchg
dec
inc
add
jb
mov
mov
lods
and
push
dec
outsl
lahf
add
aaa
imulb
in
mov
inc
push
fistpll
or
cmp
or
es
les
movsl
jg
sub
out
loopne
jb
out
addr16
cmp
mov
sbb
bound
sub
pushf
repnz
push
mov
stc
test
mov
dec
push
lods
jo
xchg
pushw
loope
std
push
lods
or
adc
rcl
fnstcw
outsl
jnp
sbb
test
out
lods
xor
nop
adc
loop
lods
ss
xchg
adc
or
fdivl
outsb
cmpl
stc
adc
and
mov
fisttps
sbb
icebp
je
mov
mov
pop
adc
iret
mov
es
and
nop
lods
jmp
cmp
test
jno
enter
cltd
test
andl
popa
mov
addb
xor
lret
dec
test
dec
adcb
fs
pusha
loop
rcr
sub
aad
icebp
xor
jl
cli
sub
jmp
add
xchg
sbb
cld
out
push
test
in
xor
and
nop
mov
roll
cs
or
jp
mov
jl
or
xlat
fdivrl
xor
mov
mov
adc
aam
dec
jns
or
sbb
pop
icebp
imul
dec
repz
std
inc
lods
roll
lock
jo
sub
mov
pop
in
mov
scas
mov
mov
jae
sub
inc
aad
fs
mov
test
aam
stos
sbb
xor
jno
jno
dec
insl
lahf
scas
sub
or
pop
push
repz
fcmovu
xor
push
nop
cwtl
mov
popf
enter
pushf
leave
xchg
lret
sub
xor
aam
mov
dec
rcll
dec
push
and
jne
pop
push
decl
adc
in
mov
pop
lret
pop
fcmovbe
jecxz
enter
add
sahf
fdivrl
pop
js
dec
push
mov
jl
adc
aad
mov
gs
xchg
loope
cltd
inc
add
test
fdivrp
cld
adc
in
gs
mov
sbb
mov
sbb
xchg
add
aam
sbb
push
lret
test
and
vminsd
es
inc
mov
push
jbe
add
repnz
or
or
mov
movl
or
in
jle
pop
cmp
mov
and
in
jecxz
mov
dec
mov
inc
shlb
aaa
loope
addb
shll
shrl
dec
mov
push
push
add
in
sub
ret
mov
pushf
cwtl
jne
imul
push
cmpsb
sub
add
sar
jo
xchg
push
fidivrl
movsl
dec
stc
inc
sbbb
mov
fimull
repnz
cmpsb
hlt
jp
and
mov
mov
push
cs
fs
push
pusha
sbbl
repz
sub
movsb
insl
or
dec
mov
adc
pop
mov
xor
adc
adc
push
int3
mov
or
repz
xchg
fs
cmc
insb
pop
sub
aaa
inc
jno
ret
sub
xchg
icebp
mov
pop
mov
or
scas
inc
sbb
cltd
into
out
inc
std
clc
sbb
out
xchg
xchg
je
lds
movl
pand
fidivrs
mov
cltd
push
es
popa
mov
imul
inc
js
dec
js
sbb
or
adc
pusha
mov
enter
testl
loop
rol
mov
iret
pop
sbb
ret
clc
repnz
fcompl
and
lds
and
adc
xchg
xchg
adc
int3
cmc
and
nop
shll
xor
test
jb
mov
add
adc
mov
test
testb
scas
lcall
mov
sub
add
lods
xor
frstor
sbb
mov
repz
in
cmc
int3
sbb
shlb
sbb
mov
jno
push
popf
xabort
xor
xor
dec
jle
inc
fidivl
and
nopl
lock
push
add
fs
sbb
cmpsb
pop
repz
jnp
or
testb
rol
fmulp
lret
fisttpll
xor
sub
jns
fwait
mov
xchg
jge
int3
mov
mov
pop
and
ja
imul
xchg
leave
xchg
and
shrb
lods
or
jbe
fcoml
mov
ror
xorl
xor
fbstp
mov
and
imul
decl
arpl
aam
pop
mov
dec
out
xlat
and
mov
les
push
sti
cltd
mov
bound
push
push
push
lret
ret
pop
into
sub
pop
mov
xchg
test
mov
push
enter
rcl
imul
sub
int3
sbb
aas
cmpb
xchg
sub
or
jo
sahf
mul
jmp
fs
int
data16
sti
push
jle
inc
and
jle
push
sbb
icebp
stos
cmpsb
and
cmp
outsl
adc
ret
sbb
stc
sbb
pop
in
inc
les
sbb
sbb
xor
ret
stos
jle
xor
aas
test
mov
push
int3
rcl
in
mov
fstpl
pop
lea
jecxz
cmp
movsl
mov
js
sahf
jmp
sub
cs
ds
mov
adc
or
add
out
scas
xlat
call
popf
pop
jnp
out
dec
leave
xor
adc
cmp
xchg
stos
int3
ss
subl
sub
or
sub
adc
lret
imul
stos
jle
push
lock
arpl
xor
xchg
jmp
cltd
sti
pop
push
adc
add
sub
lods
dec
lcall
call
jmp
fwait
or
sub
loopne
or
loop
insb
adc
inc
sub
jnp
jns
repz
clc
loopne
out
pop
int
adc
pop
arpl
insb
lds
pop
cmp
shr
in
cmpsl
cmp
mov
xchg
xor
sbb
sbb
jmp
stc
pop
mov
ja
sahf
mov
xchg
sub
loopne
dec
pop
mov
nop
clc
jg
adc
es
pushf
fiaddl
ljmp
fcmovnu
jle
sbb
adc
mov
andl
inc
add
je
mov
lds
xchg
jo
inc
negl
jb
das
lret
in
mov
sbb
push
adc
or
rolb
pop
xcrypt-cfb
cmpsl
mov
xchg
inc
xchg
fyl2xp1
xchg
pop
lods
xor
or
dec
lcall
shlb
out
inc
push
lcall
xorl
and
dec
xor
nop
arpl
addl
adc
mov
dec
and
inc
in
loope
xor
test
push
push
mov
adc
mov
jmp
jl
jo
mov
sbb
fdivr
sahf
fdiv
daa
pop
cmp
ja
or
jle
push
dec
adc
sbb
in
icebp
sbb
mull
in
fmull
dec
lock
ja
xor
bound
xchg
aam
cli
dec
scas
pop
movsl
adc
fildl
inc
and
jae
add
cmp
imul
js
fbld
xchg
pop
push
mov
fst
xor
cltd
loop
popf
out
mov
in
sbb
inc
les
and
pop
adc
pop
sahf
pop
paddusw
mov
cmp
inc
inc
aad
mov
or
push
xchg
xchg
mov
xchg
cmc
stc
hlt
push
aad
fists
or
xchg
jl
push
mov
stc
je
fimuls
mov
test
les
aaa
push
mov
cmp
mov
popa
fs
sbb
mov
scas
jns
lods
sub
inc
mov
imul
sub
test
mov
bound
or
cmp
fldcw
data16
cs
cmp
sub
imul
pop
loop
lods
call
stc
adc
or
cld
dec
cmp
out
push
popf
add
mov
jp
clc
repnz
lds
lret
leave
outsl
xchg
add
mov
aad
sub
adc
lds
or
clc
pop
or
push
mov
fisubrl
mov
cmpsb
pop
adc
test
sbbb
cltd
dec
xor
lret
inc
push
push
rcrb
test
dec
iret
insl
jmp
jo
mov
inc
pop
add
mov
nop
mov
mov
mov
mov
jge
aad
les
fucomi
inc
cltd
test
dec
scas
lret
rcrb
inc
sub
cmp
mov
fwait
mov
repz
mov
int3
mov
das
sub
push
loop
test
jmp
cmc
clc
mov
aas
sbb
into
cwtl
xchg
dec
cmp
add
lahf
inc
out
jno
mov
std
pop
jbe
jge
lock
lret
xchg
push
xchg
jae
dec
and
scas
std
pop
mov
addl
cmp
pushf
cmp
daa
adc
add
js
das
cmp
ds
push
test
push
daa
jae
popa
push
mov
push
jge
in
sbb
xchg
xchg
sub
inc
push
das
into
cwtl
mov
jns
call
cmc
dec
jl
push
sub
cmp
lcall
in
mov
inc
sbb
scas
jb
not
mov
jmp
lret
add
mov
sbbl
fsubrs
cmc
mov
push
add
and
add
popf
sub
xor
and
pop
lret
or
inc
into
rcll
subb
push
inc
iret
inc
inc
pop
cmpsb
lret
jbe
cwtl
mov
push
or
push
sarb
in
xchg
out
xchg
loope
sti
ja
iret
lcall
lahf
iret
roll
fidivl
in
jbe,pn
push
loope
and
push
das
loope
jl
ror
sahf
push
or
push
aaa
sahf
pop
aaa
in
loop
mov
int
les
sbb
sti
out
jno
in
adc
mov
js
push
mov
cld
pop
shrb
adc
jae
insb
cmp
clc
pop
jg
data16
push
lock
notl
push
jecxz
adc
mov
mov
jecxz
cmp
and
jge
fs
in
cwtl
inc
mov
lods
pop
lcall
mov
xor
xor
push
mov
out
enter
and
icebp
ja
inc
cmp
enter
dec
std
or
fldt
lds
dec
pop
insb
or
jp
sbb
inc
jae
out
divb
sbb
cltd
sub
insl
shll
inc
call
jns
mov
rep
and
cld
sub
mull
adc
mov
and
sahf
out
or
fs
adc
mov
shll
test
sub
je
add
sub
add
push
jb
jg
pop
cwtl
cmp
sub
mov
mov
jae
mov
imul
mov
mov
dec
fisubl
and
sahf
outsl
pusha
cmpl
out
int3
lock
mov
cmp
fcomps
cmp
or
ja
leave
inc
int3
xchg
sub
cmp
push
sub
dec
push
push
inc
cmp
adc
popa
aas
push
mov
fwait
popl
pop
hlt
mov
cmp
jnp
fistps
jae
mov
dec
jge
inc
shll
pop
xor
lods
cmp
aad
pop
pop
jae
sti
sub
cs
test
pop
insl
xor
adc
pop
or
adc
stos
xchg
and
pop
lcall
push
js
test
insl
jle
rcrb
mov
push
sbb
gs
pop
jbe
adc
fsubrs
imul
mov
outsb
fsts
adc
shl
inc
fisubs
sbb
ljmp
lret
mov
sbb
xchg
cmp
jle
jnp
cmpsl
dec
dec
sub
cmp
mov
mov
out
adc
push
leave
out
sbb
pop
mov
push
mov
pop
fistps
ss
cmp
fs
cmp
icebp
and
int3
cli
outsb
cmp
mov
push
shlb
insl
cmp
and
popf
scas
out
enter
inc
fs
test
add
lahf
js
std
mov
outsl
lahf
pop
and
sti
add
add
call
outsb
add
arpl
daa
inc
ljmp
icebp
loopne
lret
pop
out
dec
inc
mov
push
jge
ret
int3
sbb
sub
pop
push
push
add
lahf
dec
or
cmp
mov
sahf
xchg
xchg
call
fadds
lret
and
xchg
sub
movsl
mov
jge
pushf
nop
aam
sub
fcomps
dec
movlps
shll
adc
and
push
pop
inc
jecxz
mov
leave
dec
cs
ja
jg
ss
jmp
sub
inc
loope
pop
stc
xor
js
nop
push
adc
jae
enter
lods
test
jecxz
loopne
pushf
mov
roll
lcall
loopne
pop
sbb
lods
stos
push
ljmp
mov
loopne
or
out
sbb
imul
jge
js
and
cmp
xchg
loopne
rcr
loope
dec
in
mov
sbb
in
into
out
jb
shll
fwait
inc
push
enter
shrb
outsb
add
dec
mov
inc
xchg
rclb
movsb
test
into
inc
int3
es
push
into
pop
jecxz
and
addr16
mov
xlat
push
fldt
scas
ljmp
mov
cmpsb
mov
insb
lret
pop
xchg
and
mov
dec
jl
pop
out
decl
negb
out
ljmp
mov
dec
xchg
fldl
pop
sub
xlat
jo
int3
lds
mov
lds
push
ljmp
add
pop
shll
mov
mov
mov
std
sti
sub
or
in
dec
xchg
inc
push
mov
fcmovnu
aam
shll
push
cmpsb
mov
out
fisubrl
es
xchg
fdivr
addr16
insl
incb
lds
inc
fidivrl
mov
mov
cmp
mov
push
mov
mov
daa
loopne
repz
icebp
xor
push
fisubs
sub
cmp
push
into
xor
rorb
fs
inc
pusha
push
std
dec
cmp
outsb
push
sbb
int
sub
sub
mov
rcr
sbb
test
movsb
mov
xorb
js
pop
mov
leave
not
mov
and
or
ficoml
jbe
popf
jne
and
sub
or
into
mov
cmp
push
leave
xchg
mov
mov
sbb
scas
xchg
icebp
call
ja
enter
mov
das
test
pop
jnp
or
fadds
enter
add
les
ret
scas
fwait
or
mov
adc
sbb
mov
rcrb
les
cld
das
movsl
out
sbbb
jg
fstps
mov
sbb
xchg
jge
test
ficompl
and
das
je
test
pop
addr16
mov
mov
ret
imul
test
pop
ds
test
stos
out
test
rolb
jne
pop
jl
inc
xlat
movb
sbb
push
dec
iret
sbb
test
fildll
and
push
dec
and
jge
rcll
addl
sbb
out
call
movsb
subl
aas
xor
jns
addr16
or
mov
icebp
sub
fdiv
and
and
sbb
jae
out
ret
imul
mov
repnz
stos
repz
jle
jmp
stos
inc
jb
ss
loopne
cmpl
xchg
mov
mov
jae
lret
inc
rorl
mov
sbb
clc
push
les
sti
jnp
mov
mov
mov
sarb
out
pop
shll
push
dec
aaa
mov
mov
in
shrb
out
or
cmp
push
rolb
pusha
push
add
cmpsl
mov
pop
jl
dec
sub
cmpsb
cmp
or
and
jmp
dec
cmpsb
cli
mov
ret
cmp
push
inc
push
fwait
add
and
int
mov
dec
andl
mov
imul
call
and
icebp
sti
or
ds
pop
movsb
addr16
cld
shll
test
gs
jge
repz
push
aam
rol
daa
jbe
mov
push
dec
popa
popf
les
jl,pt
and
test
mov
dec
gs
popa
mov
popf
pop
dec
push
fstpt
scas
sbb
inc
stc
mov
xchg
jnp
jo
sub
dec
mov
cmp
mov
mov
sub
pop
out
jg
dec
pop
sub
insl
mov
cld
cmpsl
ja
xor
fxtract
or
pusha
movsb
or
out
pop
mov
lods
ja
push
ret
lret
mov
mov
mov
outsb
inc
popf
mov
sbb
mov
out
addb
mov
or
out
adc
icebp
and
jl
xor
lcall
mov
in
xchg
dec
push
push
push
flds
mov
cwtl
cltd
in
or
scas
dec
push
shll
or
movsb
or
push
aas
xor
inc
enter
in
mov
fstl
mov
lods
rcl
mov
dec
enter
in
push
fnsave
ss
mov
dec
aam
xor
xlat
add
movsb
or
pop
push
add
inc
fimuls
nop
mov
lret
out
repz
cmp
push
dec
mov
jb
jne
in
xchg
xor
dec
das
imul
out
ret
fwait
xchg
icebp
dec
into
rorl
xchg
mov
cmp
mov
mov
push
test
aaa
div
gs
mov
scas
or
jl
out
nop
shrb
jecxz
lds
adc
cmp
ja
mov
testb
sbb
and
jbe
in
jecxz
jbe
push
mov
bound
dec
aaa
pop
xlat
xor
push
push
or
ret
neg
clc
jge
sub
sbb
mov
xchg
repnz
jbe
push
call
cmp
pop
xchg
ljmp
pusha
int3
decb
loope,pt
insb
into
ds
or
dec
repz
mov
xchg
inc
inc
pusha
pusha
pop
inc
das
adcb
jg
dec
mov
shlb
ss
mov
dec
mov
add
sbb
mov
test
mov
sbb
jp
cmp
call
in
fsts
je
cwtl
lods
enter
ds
add
pop
mov
sub
repnz
sbb
nop
push
addl
imul
jge
push
push
in
lcall
jae
lcall
jnp
xchg
call
scas
cmp
cmc
imul
loopne
out
lret
jae
test
jge
aam
pushf
aad
push
dec
dec
adc
popf
pusha
adc
inc
jecxz
mov
or
sub
dec
stc
into
mull
daa
add
stc
cld
pop
jmp
hlt
cmp
outsb
or
jmp
jge
fistps
cmpsl
nop
and
lret
xor
scas
push
lret
fucomip
test
or
and
nop
adc
imul
fnstcw
sbb
aas
call
add
iret
fisubs
es
fndisi(8087
lahf
push
or
jp
and
xchg
sbb
dec
adc
mov
push
fsubs
mov
pop
scas
mov
scas
inc
mov
xor
xchg
mov
pop
std
hlt
pop
shrb
dec
xor
lods
add
cld
mov
cmp
mov
out
add
push
loopne
shll
add
int
mov
into
cld
mov
test
push
in
cmp
test
imul
push
mov
jle
fs
rolb
leave
outsl
shr
add
clc
adc
xchg
xor
xorl
sti
xchg
dec
xchg
lods
jns
xlat
shlb
scas
sbb
mov
ror
rorl
xchg
jge
fistpll
sub
inc
in
iret
or
mov
cs
cld
fs
xlat
je
bound
lock
jmp
add
call
mov
int
mov
loopne
ja
cli
push
cmc
mov
and
cld
movsb
lcall
push
or
fidivl
ja
dec
imul
pop
jl
fmulp
movsb
clc
xchg
xor
fiadds
xchg
aaa
js
popf
push
add
cmpsb
sbbl
jne
mov
push
das
insl
jbe
mov
or
jp
aas
data16
adc
cmp
jmp
dec
xchg
mov
sbb
aad
cmpl
and
push
stos
bound
movsl
or
pop
ret
je
and
jae
aas
pop
packuswb
cmp
cmp
fwait
in
xchg
movsb
jle
dec
dec
xor
xor
repz
inc
lds
into
in
mov
inc
shrb
adc
mov
add
mov
hlt
mov
bound
clc
jbe
jmp
scas
ja
xchg
and
push
es
lods
out
gs
mov
xchg
notb
add
sbb
xchg
mov
dec
jecxz
movsl
cwtl
repnz
push
mov
adc
push
sub
stos
scas
mov
dec
ficomps
fs
dec
outsl
xor
mov
es
jge
xor
shll
xchg
in
lods
pop
jae
bound
and
in
mov
push
aam
pusha
pop
in
cmp
fidivs
call
ror
outsl
add
push
fildll
cmp
xor
mov
ljmp
mov
sahf
mov
testb
jo
jae
stos
jne
adc
push
fsubrs
sti
loope
mov
cmpsl
lods
lahf
push
and
movl
push
out
cmp
loopne
lods
and
arpl
jo
fs
rclb
bound
stos
push
add
pop
fmuls
frstor
xchg
mov
popf
jns
out
jno
sti
xchg
shl
adc
pop
push
adc
sub
mov
mov
jl
aad
call
ss
ret
fbstp
addr16
jmp
cmp
ficompl
popf
add
stc
sub
fcomps
adc
sub
insb
ljmp
faddl
test
mov
insl
idivl
push
fdivr
jbe
cmp
add
push
sbb
mov
inc
lcall
jle
push
push
sbbl
les
scas
dec
or
xchg
adc
dec
cltd
insl
dec
add
and
sub
dec
sub
test
stos
mov
stos
stc
jp
xor
leave
push
fadds
lods
mov
out
sub
fs
sub
inc
jge
into
imul
and
add
inc
cwtl
lods
xchg
into
pop
inc
fisubs
out
and
repnz
ret
push
dec
jmp
adc
mov
xor
outsl
enter
out
dec
cmpl
mov
pop
jb
imul
fmulp
pop
lahf
dec
cmc
pop
pop
mov
sbb
or
sbb
xor
push
mov
push
incl
pop
mov
pop
or
adc
lods
mov
pop
push
pop
pop
sub
pop
dec
fwait
xor
inc
push
das
push
cmp
mov
outsb
push
inc
lahf
push
or
fiaddl
add
gs
stc
or
xor
cltd
sub
mov
stos
sbb
xchg
add
outsl
stos
dec
mov
cmpsl
cld
mov
mov
pop
add
mov
dec
jbe
adc
add
sahf
push
test
xchg
cmc
mul
sub
stos
lods
fisttpll
dec
add
jo
add
fists
std
fdivrs
inc
xorb
push
sub
das
and
adc
mov
pop
push
sbb
out
jae
popf
sub
ds
or
pop
mov
dec
adc
inc
cmp
add
into
test
in
xchg
mov
mov
mov
mov
subl
int3
sbb
pusha
xchg
xchg
fisubs
sbb
pop
sub
leave
icebp
addl
adc
jp
dec
xor
sbb
lcall
xor
fdiv
inc
leave
int3
xchg
bound
enter
sti
dec
ret
sarb
inc
int3
push
jae
xchg
push
pop
jp
push
repz
jne
mov
mov
rcrb
sub
inc
cli
xor
cld
out
scas
dec
test
cmp
incl
ror
cmp
repz
pushf
or
insl
stos
ds
and
mov
lds
std
cmp
ret
push
mov
add
dec
pushf
xchg
jb
push
or
leave
iret
setle
arpl
test
pop
jecxz
and
xor
mov
das
mov
adc
js
dec
in
xor
lods
mov
dec
sub
cld
imul
lds
and
in
ss
addr16
and
ljmp
dec
popf
cmp
leave
mov
fcmovne
mov
std
mov
mov
cwtl
repnz
pop
fstps
shlb
aas
sub
xchg
out
ret
fidivrl
test
shrb
cltd
or
sub
sub
adc
mov
xor
scas
iret
orl
nop
mov
cmp
cmp
clc
adc
fxch
loopne
inc
test
push
add
fimuls
jb
sub
aaa
sahf
ret
cmp
add
lods
pushf
pop
dec
xchg
enter
loopne
adc
mov
stc
add
out
jp
mov
pop
sbb
push
adc
push
xchg
xor
add
jg
outsb
mov
xor
add
inc
mov
cltd
jp
xchg
jg
or
fs
sti
imul
push
xor
and
mov
mov
or
stc
dec
jle
add
cmp
xor
js
outsl
gs
ja
jae
stos
test
mov
lds
outsb
jg
mov
and
push
addl
push
pop
adc
into
outsl
cmp
inc
aaa
add
cmp
dec
rcll
clc
orl
pusha
pop
mov
decl
nop
clc
ret
clc
mov
sbb
pop
adcl
bswap
sbb
ja
cmc
in
inc
or
xor
aam
popa
loopne
test
ja
insl
inc
insb
pop
inc
rorl
mov
xchg
mov
push
xchg
in
dec
test
lret
inc
aaa
loopne
xor
push
jb
jns
movsb
cmp
lcall
pop
adc
push
cmp
push
cmpsb
ficompl
movsl
push
popa
ret
std
mov
in
add
loopne
popf
ja
int3
sbb
dec
pop
repz
cmc
mov
mov
fucomip
pop
push
mov
les
push
add
fcoms
fcoms
xchg
aam
mov
add
jno
data16
out
jge
and
jnp
fs
mov
pop
sub
and
stc
sub
dec
xchg
cli
call
jmp
sub
xor
dec
iret
std
cmp
sub
gs
jno
shrb
movsl
dec
jne
and
aad
lahf
sbb
lahf
xchg
cltd
push
out
pop
lahf
mov
mov
movsb
testb
lret
insl
dec
push
mov
aaa
rcrl
add
lret
test
xor
pop
aaa
mov
int
mov
scas
xchg
jno
mov
test
jg
mov
repnz
push
decb
jge
shrb
sbbl
xlat
add
push
fsubs
sub
sbb
loope
and
and
pop
lahf
dec
cmp
adc
iret
out
push
cli
adc
xchg
jno
movsl
inc
pop
xchg
arpl
gs
inc
stos
imul
fwait
cld
dec
xlat
cmpl
nop
push
mov
jb
mov
aas
jb
jmp
dec
sbb
into
inc
jle
ret
divb
or
xor
insl
roll
pop
dec
mov
dec
push
mov
mov
jmp
mov
imul
xchg
and
insl
jae
and
sub
mov
jne
jb
dec
add
enter
push
push
sahf
aad
jmp
jmp
and
cmc
cmp
adc
lahf
imul
outsb
or
in
fwait
pop
fs
and
sti
sbb
leave
les
mov
rcll
shlb
lret
sbb
xor
sbb
jl
fcom
xchg
in
pop
lods
cs
xabort
cld
loope
mov
xor
out
xor
inc
add
mov
inc
imul
and
test
js
jno
cmpsb
ja
insb
test
lods
test
hlt
mov
xchg
jl
jp
pop
fdiv
push
mov
mov
and
cmc
jbe
sub
insb
scas
cmp
xchg
imul
dec
inc
xor
adc
bound
mov
inc
mov
or
aaa
cmp
repnz
inc
lcall
dec
mov
cmpsl
into
mov
lods
insb
lock
out
js
or
jne
xor
les
add
xorb
adc
xchg
mov
and
or
leave
push
mov
pop
idivl
add
les
sub
sbb
pushl
cmpsl
ret
jns
out
or
mov
lods
add
adc
cmpb
jnp
data16
test
movsl
scas
sub
sbb
popf
sub
cmp
push
mov
push
lock
repnz
cmp
bound
push
repz
mov
in
stc
shll
addr16
out
lods
pop
push
ficompl
cmp
in
in
sbb
mov
adc
scas
or
push
pop
mov
mov
adc
ret
or
xor
jnp
adc
push
push
fidivs
mov
loop
sub
das
fstpl
js
lcall
adc
orb
add
mov
ret
add
sub
inc
jg
or
jae
cltd
out
pop
daa
enter
aaa
xor
test
jne
add
pop
clc
pop
push
mov
cld
lods
lods
loope
jno
sbb
push
jle
clc
jae
insb
jl
dec
cmpb
dec
adc
fimuls
stos
orl
adc
push
stos
in
outsl
dec
mov
and
adc
xor
movsl
mov
xor
cmp
clc
fildl
int3
mov
mov
inc
mov
cmp
andl
incl
adc
pop
mov
test
push
cmp
and
push
push
hlt
and
pusha
push
adcb
sub
imul
clc
cs
mov
int
test
and
in
bound
sbb
shll
push
or
push
cmp
and
sbb
lcall
inc
push
lret
xchg
pop
cwtl
pop
outsb
test
lret
popf
addr16
ja
in
and
into
mov
mov
sub
push
mov
push
fildll
xchg
mov
or
daa
rep
mov
dec
jns
movsl
jnp
xchg
push
sub
outsl
push
addr16
in
xor
adc
xor
jo
ret
mov
dec
fcomps
ja
fs
rolb
pushf
xchg
pop
jle
sub
jbe
das
or
sbb
sub
push
push
inc
mul
pop
shr
mov
je
sbb
push
aad
loopne
ficomps
outsl
xor
cli
jnp
inc
sti
adc
stos
xchg
dec
push
testb
pusha
mov
lds
fwait
inc
inc
stos
adc
bound
arpl
push
test
add
add
cs
cmc
jb
hlt
add
repnz
int3
sbb
ret
jle
sbb
fiadds
cmp
mov
jb
dec
jns
xor
mov
bound
jg
scas
adc
mov
in
repz
jbe
lods
ret
out
insb
lret
xchg
xor
xchg
jg
push
lret
sbb
popa
inc
jne
push
lret
mov
xchg
mov
out
dec
pop
add
lret
adc
lods
mov
stc
stos
add
mov
cmp
push
mov
cs
ja
mov
or
push
jbe
push
pop
mov
mov
pop
pop
int3
mov
hlt
int
fcom
cwtl
movsb
std
popf
pop
cmp
mov
cmp
or
bound
pusha
sub
push
insl
or
addb
ret
jge
pop
les
push
loope
inc
lds
or
fcompl
cmp
mov
adc
sti
adcl
sbb
jecxz
mov
cs
movsb
adc
hlt
daa
aad
sub
inc
ret
push
push
dec
insl
daa
mov
neg
mov
adc
add
aad
data16
mov
jns
pushf
sub
out
pop
hlt
inc
xchg
xor
sbb
fisubrl
and
inc
adc
int
pop
or
idiv
into
dec
push
sub
xchg
mov
jb
pop
pop
pusha
sbb
dec
push
xchg
pushf
iret
mov
in
push
inc
mov
adc
jle
pop
stc
jne
shll
fsub
push
test
mov
test
adc
test
push
into
jo
dec
addl
or
sub
cmp
in
mov
xor
cwtl
jp
and
pop
sub
cwtl
cmp
addb
ja
mov
lds
imul
insb
add
xor
scas
fldenv
insb
outsb
mov
or
and
clc
add
leave
and
xchg
pop
dec
sbb
test
stc
cltd
or
cltd
fldt
pop
popf
incl
xchg
mov
or
cwtl
adc
ret
loopne
fcompl
or
inc
in
pop
mov
stos
push
dec
enter
stos
jno
imul
scas
orb
xchg
dec
roll
addr16
addr16
rcrl
adc
sub
dec
stc
movsl
mov
movsb
lock
jl
rcrl
popa
or
dec
and
cmp
rcll
int
test
sbb
mov
cwtl
dec
fistl
ljmp
lret
sub
out
and
int
xchg
mov
mov
sbb
jmp
and
test
push
loopne
loopne
adc
sub
add
dec
xor
sbb
loop
ss
dec
mov
pop
cmp
in
mov
mov
enter
xor
pop
xchg
xchg
popa
pop
xchg
push
into
ret
scas
das
je
mov
xor
aaa
fs
imul
mov
cmpsb
sub
std
pop
inc
inc
repz
mov
in
and
cmc
mov
addr16
adc
jae
les
add
cmp
mov
int
notl
xchg
popa
xchg
insl
and
test
xchg
xor
adc
dec
cmp
fsts
pop
cmpsl
jl
mov
jle
movsl
jae
jns
mov
xchg
push
loop
jnp
in
sub
fs
outsb
inc
daa
aad
pop
loop
adc
push
imul
pop
pop
dec
test
inc
or
cltd
out
iret
fs
outsl
dec
pushf
outsb
xchg
inc
sbb
lods
sub
jl
sarl
and
cmp
push
jecxz
add
inc
das
jns
cmpsb
xorb
mov
cmp
jne
pop
popa
adc
jle
popa
pop
xlat
les
in
loope
ja
ja
imul
loopne
mov
jae
cli
jle
fistpl
movsb
xor
in
push
lds
mov
cli
fmulp
jmp
out
ja
out
test
xor
jb
sub
mov
fsts
flds
mov
aam
jbe
lahf
sub
shll
imul
sbb
jmp
fsubs
xor
xchg
cmp
xchg
into
mov
add
jbe
mov
lea
sub
adc
pop
fidivrl
jns
pop
add
out
aam
mov
cmc
mov
jmp
lods
inc
jecxz
push
fldenv
and
push
sti
ja
fnstsw
xor
push
cmp
mov
mov
outsl
lret
imul
jl
sbb
icebp
jns
fwait
jmp
daa
ds
cmpsb
stc
xor
mov
fwait
loope,pn
mov
cwtl
push
mov
lret
pop
inc
cltd
mov
cmpsl
hlt
jmp
jns
arpl
mov
ds
dec
cmp
cwtl
fsts
shl
rcrl
sbb
xor
xor
push
xor
enter
jne
insb
mov
jmp
sub
mov
pop
push
jl
jns
jbe
xchg
lds
test
lods
xchg
xor
stos
ret
mov
fld
scas
mov
push
dec
neg
arpl
mov
in
inc
sub
pop
cmp
fistpl
imul
rcrb
sub
popf
jae
cmp
imul
repnz
aas
inc
pop
xchg
jno
adc
cli
mov
sahf
cwtl
test
add
xchg
xlat
mov
jg
mov
sbb
pmulhuw
pop
imulb
pop
mov
xchg
mov
fdivs
mov
mov
mov
jle
aad
mov
sub
mov
lock
add
lods
fnstenv
ret
mov
sbb
jo
cmp
push
xor
popf
mov
fnstcw
dec
lock
aam
and
mov
cmp
das
stos
mov
adc
cltd
pop
into
or
pop
pop
xchg
js
pop
mov
arpl
mov
fcompl
js
xchg
ljmp
imul
jne
test
loop
aas
adc
repz
das
mov
pusha
scas
xor
push
inc
inc
or
adc
jl
sbb
and
xlat
cmp
add
or
add
inc
xor
adc
dec
repnz
mov
imul
jmp
stos
or
loope
loopne
jb
inc
bound
addl
and
fs
std
cmp
xchg
mov
ss
movsl
sbb
outsb
std
gs
lret
mov
xchg
les
je
adc
sti
mov
pop
jecxz
inc
mov
in
mov
pusha
jo
xor
mov
inc
inc
cmp
cld
add
movsb
pop
jno
xchg
shrl
lret
add
dec
shrb
xor
sbb
and
movsb
cmp
adc
dec
push
mov
mov
xchg
mov
mov
ds
ljmp
inc
pop
jae
jnp
sbb
sbb
dec
cmc
int
cmp
mov
in
sub
lcall
cmp
add
ror
das
or
stos
fwait
xlat
pushf
mov
ljmp
int3
hlt
stc
dec
mov
mov
ja
enter
xchg
pop
xchg
mov
pop
jmp
mov
xor
jmp
mov
ds
xchg
sahf
pushf
mov
ret
sub
mov
enter
mov
decb
mov
or
sbb
iret
leave
inc
push
inc
add
aad
jecxz
lret
movsl
jnp
xlat
lahf
outsl
or
add
dec
rclb
negl
in
sub
cmc
lods
adc
lret
sahf
out
cmp
add
push
imul
sbb
fsubl
inc
sub
xor
cld
xor
push
sbb
push
and
test
cmpsb
stos
sbb
push
inc
outsl
jo
xchg
out
out
cwtl
or
jle
and
and
stos
inc
sbb
jns
dec
out
or
std
idiv
scas
lods
int
outsl
dec
xchg
mov
call
and
outsl
xchg
pop
dec
roll
or
mov
add
daa
mov
adc
inc
cmp
sti
sbb
sahf
or
cmp
js
cmpsb
ds
ds
ss
stos
insl
adc
inc
scas
stos
and
sti
scas
lock
jl
dec
mov
add
jbe
jb
clc
inc
fst
cmp
or
mov
cltd
mov
cmc
pop
mov
xor
loope
repnz
push
bnd
jb
sub
iret
cs
mov
loop
out
mov
push
addb
inc
sub
jo
test
ret
pop
and
sub
add
addr16
js
iret
rclb
stos
push
idiv
test
mov
scas
aas
and
pop
lahf
fbld
add
dec
xchg
hlt
arpl
mov
dec
dec
mov
scas
jb
sbb
icebp
push
adc
mov
jns
mov
icebp
por
xor
inc
push
scas
jp
fdivs
rorb
add
push
jmp
lcall
xor
stc
loop
imul
jns
jg
and
mov
cmp
sbbl
iret
pop
pop
dec
xchg
cmpsl
add
xor
or
shll
xchg
sub
mov
inc
stos
daa
aaa
sub
inc
sub
mov
jbe
mov
mov
xchg
mov
cmpsb
orb
cwtl
stos
and
adc
out
outsb
sahf
fidivs
push
xchg
das
adc
repnz
or
xchg
mov
jmp
mov
mov
hlt
xchg
and
imul
xchg
pop
xchg
test
sbb
dec
xor
fld
mov
in
sub
mov
mov
fsts
daa
sbb
lds
pop
loopne
cmp
dec
xchg
cld
mov
sbb
int3
push
in
subl
cmp
in
aaa
stos
scas
fisubl
sub
push
insl
imul
daa
pushf
arpl
cmp
dec
roll
xchg
lea
lods
fisttpll
movsl
ds
push
xor
movsb
fcoms
sbb
mov
shrl
inc
or
in
push
je
pop
xchg
cmp
in
in
mov
aas
cmp
leave
xchg
push
jmp
cmp
mov
adc
push
jae
fdivrp
jge
stc
pop
loop
outsb
int3
mov
enter
dec
rcl
rcrl
outsb
repnz
mov
jecxz
les
cmp
or
pop
sbb
push
add
and
outsl
loope
push
add
notl
outsb
fimuls
leave
lock
aaa
push
mov
sti
sub
lret
cmc
lds
call
inc
xchg
pop
lret
xchg
dec
fisttps
fldcw
push
xor
jae
pop
sbb
aaa
stos
or
mov
or
dec
aaa
cmp
jo
pop
pop
ds
divl
mov
dec
sub
cmp
cmp
mov
xor
es
xchg
popf
xorl
inc
les
mov
nop
cmp
push
out
cltd
stos
leave
movsl
or
jne
pop
insb
jg
cmp
outsl
lcall
add
push
sbb
aas
sbb
sub
push
addr16
aaa
jb
xchg
pop
mov
ljmp
mov
xchg
push
add
movsb
xchg
and
lds
mov
xchg
push
or
mov
xor
sbb
push
fs
pop
arpl
pop
pop
fmuls
inc
pop
call
add
jge
popl
push
dec
xchg
pop
push
fisubl
rcrb
mov
mov
pop
rolb
shlb
xor
pop
out
dec
mov
and
jae
or
outsb
mov
out
jl
out
ss
jle
hlt
js
cli
push
fs
or
cld
repz
jns
sub
xchg
xlat
or
dec
xchg
outsl
mov
dec
in
cmp
jl
dec
xor
pop
pop
xchg
add
cmpsl
cmp
dec
pop
fdivrl
xchg
adc
sbb
push
sub
movsl
mov
add
xchg
push
insl
dec
mov
lahf
sarl
repz
outsb
xor
sub
cmp
inc
loop
push
lcall
shrb
push
jg
leave
insl
pop
out
xchg
xchg
dec
and
loopne
mov
pop
mov
test
fimuls
and
pop
aaa
addr16
enter
sub
test
add
and
les
aad
inc
rolb
fcompp
les
sbb
xor
in
xchg
sub
lea
lds
les
sbb
xor
cs
roll
mov
loop
or
outsl
mov
sub
in
pop
sub
into
cmp
movsb
outsb
or
add
or
leave
aas
mov
aad
adc
jno
mov
pop
popa
inc
insb
and
xor
dec
imul
adc
push
jne
fnstenv
xchg
aaa
mov
out
pop
outsb
out
mov
jle
mov
and
mov
or
mov
pop
out
sub
stos
scas
pop
mov
and
push
mov
ljmp
pop
aam
inc
dec
daa
mov
into
adc
inc
aas
pop
jg
lods
in
lods
popa
insl
nop
shll
clc
mov
in
lea
cmpsl
call
pop
or
mov
add
enter
iret
cld
or
mov
xor
loopne
iret
fcomps
pop
popf
or
mov
adc
mov
pop
clc
mov
out
test
jne
stos
jecxz
push
xor
ror
add
mov
fdivr
in
sub
js
pop
pop
dec
mov
xchg
adc
fiadds
mov
icebp
lods
out
xchg
inc
add
dec
divb
jp
roll
lahf
sti
pop
xchg
movsl
adcb
inc
loope
xchg
lock
mov
mov
leave
jbe
lahf
inc
mov
out
nop
jno
sub
jb
in
lods
mov
lds
adc
dec
pop
mov
push
sbb
inc
jp
jmp
sbb
lods
jle
insl
push
cmpsl
daa
clflush
xor
or
mov
dec
push
mov
xlat
mov
add
adc
xchg
std
test
test
stos
push
call
mov
aad
sub
fistpl
movsl
mov
stos
inc
in
jl
cmpsb
aam
mov
dec
lcall
repnz
sub
cwtl
sti
imul
sub
and
int3
pop
xchg
xor
fwait
sbbl
sub
es
out
jecxz
adcb
out
mov
pop
jmp
cmp
cltd
ret
in
xor
test
push
push
sbb
pop
mov
mov
and
lea
inc
imul
mov
stos
cli
divb
pause
sbb
or
pop
adc
or
or
rcrb
inc
cmp
mov
dec
push
lahf
std
outsl
fstps
popa
mov
push
xchg
aam
mov
scas
jns
pop
insb
mov
lahf
repnz
or
enter
jne
jnp
sarl
ret
mov
dec
sub
and
pop
clc
sbb
add
push
mov
addr16
and
mov
adc
mov
and
fbld
cltd
push
into
ds
inc
xchg
arpl
lahf
mov
sti
rcrl
mull
xchg
xorb
mov
push
xor
mov
js
add
dec
mov
jbe
or
sarl
scas
ret
xchg
test
icebp
inc
lods
mov
jno
push
paddd
inc
add
addr16
sub
sub
jns
mov
mov
inc
outsb
push
mov
mov
roll
cltd
out
test
inc
adc
push
push
divb
ljmp
cmpsl
repnz
mov
inc
sbb
mov
inc
jmp
insl
jae
repnz
or
shrb
mov
cwtl
dec
ficompl
xchg
jg
mov
test
frstor
popf
pop
js
cli
mov
dec
fs
pop
nop
lret
orb
fs
push
in
mov
add
inc
hlt
mov
cltd
cmp
lods
dec
call
jge
mov
stc
shll
and
pop
outsb
and
pushf
neg
pushf
cmp
inc
aad
push
and
sbb
jle
bound
clc
iret
dec
mov
inc
lahf
cmp
xor
jecxz
bswap
sbb
shlb
aaa
mov
daa
mov
sar
lods
dec
cmp
dec
adc
sti
pusha
mov
jo
sbb
lret
test
loop
es
ret
jp
sub
push
mov
xchg
xor
jl
push
popf
mov
or
adc
push
adc
pop
jmp
inc
subl
dec
les
pop
and
icebp
add
cmpsb
or
sub
aad
ds
call
mov
fxch
xor
ja
fnstenv
lods
arpl
cltd
mov
cmpsl
or
mov
lahf
mov
lock
push
lret
add
and
test
add
sti
mov
xchg
lret
mov
dec
mov
mov
popf
xchg
xchg
in
pop
ja
repnz
out
cli
aam
xlat
sbb
in
int3
sbb
insl
rorb
jmp
mov
test
pop
subb
icebp
mov
test
xchg
test
push
sahf
add
xchg
or
int
insb
jmp
jb,pt
xchg
xor
sub
pop
cwtl
es
dec
xchg
push
mov
xchg
and
xchg
mov
sub
xchg
push
leave
bnd
sti
xor
inc
les
push
sbb
push
xchg
mov
mov
aaa
cwtl
repnz
test
push
sti
dec
jo
ss
pop
cmc
in
cmc
enter
inc
sub
cltd
ljmp
inc
jecxz
inc
loop
jae
push
push
sbb
mov
mov
inc
ret
mov
dec
mov
inc
inc
or
adc
xchg
sub
cmp
pop
xor
mov
in
mov
lods
mov
int3
pop
loopne
popa
jbe
in
out
aas
add
stos
push
das
or
popf
orb
rcr
dec
jmp
pusha
mov
stc
insb
add
and
repnz
jl
frstpm(287
scas
sub
mov
pop
adcl
push
jnp
dec
nop
mov
or
jnp
cli
outsb
pusha
lock
cld
and
mov
in
imul
adc
xor
lds
scas
jmp
arpl
and
into
icebp
cmpsb
fdivrl
xchg
inc
call
push
pop
pusha
lock
dec
sub
sti
adc
mov
and
add
and
pop
scas
mov
jnp
imul
rcr
sub
xor
lds
and
xchg
mov
mov
and
cmc
addr16
sahf
jno
aad
inc
or
aam
pop
pop
test
repnz
mov
das
in
jnp
rol
and
arpl
repnz
xchg
stos
ja
in
lcall
lds
lods
cmp
aad
imull
pop
dec
inc
out
push
lret
pushf
dec
jne
sub
mov
mov
pop
pop
pop
cmp
aaa
aaa
xchg
shl
sub
test
cmpsb
cld
dec
cmpsl
lds
ds
shlb
sbb
or
and
inc
inc
sub
sahf
mov
gs
sub
popf
fsts
mov
and
cmpsl
std
stc
pop
mov
sbb
xchg
addr16
scas
fmuls
dec
cs
or
out
dec
aas
fsubp
mov
pop
pop
push
lods
popf
dec
enter
shufps
cmp
jge
loopne
ds
jmp
or
ret
dec
push
decb
rcrb
xor
dec
pop
adc
add
rolb
pop
lahf
push
push
ret
mov
sbb
pusha
movsb
je
dec
add
mov
inc
fwait
imul
mov
mulb
xlat
sti
rclb
add
mov
lcall
add
dec
lret
pushf
pop
jno
imul
push
cmp
cmp
push
mov
cmp
pusha
xorb
stos
cltd
idivb
icebp
sbbb
stos
lahf
daa
adc
adc
lock
das
cwtl
out
sbb
movsb
in
and
test
mov
jmp
stos
imul
push
cmpsl
dec
nop
mov
cmp
or
add
scas
push
mov
push
ret
add
push
fadd
xchg
dec
mov
mov
or
dec
jae
je
mov
jae
arpl
outsl
mov
mov
mov
pusha
inc
loopne
out
dec
push
ja
mov
mov
addl
imul
cwtl
mov
ds
pop
xchg
dec
lahf
mov
gs
cmp
jp
sbb
dec
add
mov
fwait
clc
mov
movq
jecxz
and
xchg
inc
cmp
cld
adc
cs
sub
adc
out
sbb
dec
push
pop
xchg
or
push
aas
add
das
hlt
push
and
push
lcall
lret
gs
push
cmc
ret
jae
adc
clc
cmp
fnsave
xchg
ja
outsl
jecxz
cmp
cmp
push
pop
dec
jl
mov
rorl
cmp
subl
aam
test
jl
scas
mov
sub
and
push
mov
xor
cmc
ds
adc
or
ja
xlat
inc
cwtl
mov
aas
jnp
jo
pop
cwtl
mov
test
pop
sub
daa
mov
lcall
lods
cmp
fs
lock
adc
mov
nop
jbe
cmp
or
mov
adc
dec
add
pushf
pop
jns
insl
adc
lods
test
dec
cmp
xchg
push
push
sbb
stos
cli
lods
in
pop
adc
les
mov
and
call
and
lock
lods
push
ja
sub
xchg
cmp
jp
or
sub
pop
pop
test
nop
xor
lds
fisttpl
or
xchg
pop
int3
scas
fldt
dec
cmp
in
mov
jmp
jle
das
fistpll
lahf
mov
shll
cmp
sbb
mov
inc
fpatan
jge
arpl
inc
push
pop
lods
lock
aas
push
mov
xchg
mov
std
lock
add
or
ret
add
pusha
cwtl
xchg
adc
or
pop
std
sub
mov
loope
xchg
pop
adcb
dec
pop
pop
mov
mov
je
cmp
pop
xor
div
jns
push
cmc
adc
scas
jle
outsl
pusha
loope
mov
mov
aas
mov
je
int3
cmp
add
aam
jmp
lods
pop
push
and
xor
subl
pop
push
dec
jecxz
ljmp
pop
mov
mov
movsl
xchg
lods
in
pop
or
push
jb
inc
mov
pop
stos
adc
jle
pop
repnz
xlat
fwait
test
and
pop
pop
fidivs
les
xchg
sbb
idivb
arpl
inc
jo
je
call
pop
xorl
sbb
int
cmpsb
add
push
xchg
aaa
cli
pop
lods
mov
dec
cmp
adcb
mov
inc
xor
fdivp
out
sti
add
add
cmp
adc
sti
dec
outsl
into
mov
pushf
scas
mulb
mov
jnp
daa
jg
push
dec
mov
adc
sub
jl
xor
cmp
mov
movsl
xorl
and
pop
aam
inc
stos
rcll
das
xchg
imul
cmp
jle
jo
incl
xor
mov
out
popf
test
sti
push
mov
scas
outsl
add
fs
int3
cmp
adc
ret
call
mov
insb
xchg
lcall
xchg
mov
in
mulb
jae
cmp
loop
xor
jnp
nop
imul
adc
fdivrl
mov
mov
jge
mov
push
jecxz
out
lahf
fmul
loopne
add
xor
jae
sbb
cmp
dec
enter
out
mov
sbb
adc
xchg
mov
xor
lcall
jno
fisubrs
fiadds
sbb
cmp
sub
cld
sarb
pop
pop
sub
sub
mov
and
sub
sar
lret
push
cli
xor
dec
xchg
dec
and
pusha
lret
enter
inc
outsl
decl
pop
add
fbld
mov
rcrl
or
test
and
roll
loopne
cmp
lods
orl
xchg
dec
mov
inc
daa
mov
ds
mov
insb
cmpsl
jae
mov
out
in
and
int3
mov
inc
adc
lahf
notl
outsb
int
shl
xor
pusha
js
daa
ja
adc
mov
fwait
scas
shrb
sbb
pusha
mov
jp
sbb
div
lret
lods
call
jnp
cwtl
jg,pt
pop
test
movl
xchg
push
aas
dec
xchg
push
rcrl
pop
jp
xor
push
xchg
dec
pop
sahf
pop
lock
push
scas
leave
pop
mov
fldcw
test
test
out
xchg
movsb
mov
mov
cli
fwait
adc
insl
pop
stos
adc
cmp
xchg
push
out
xchg
jae
push
mov
mov
sahf
sbb
pushf
aas
lret
mov
jae
mov
shll
and
mov
mov
test
iret
inc
cmp
pusha
stc
and
lret
mov
movsb
lock
sti
out
inc
aas
jnp
js
sarl
jmp
fcmovnu
xchg
cmpsl
xchg
ja
scas
jns
fisubl
mov
mov
in
int3
sub
or
cs
sub
inc
roll
xor
xchg
jp
xchg
insb
test
ljmp
mov
pop
addr16
imul
mov
mov
in
dec
jns
xor
movsw
in
xor
lret
movsb
gs
mov
mov
cmpsb
iret
aas
imul
cld
outsb
mov
mov
sbbb
lds
add
push
push
shl
out
fidivrl
mov
cli
xchg
sarl
clc
pusha
repnz
in
and
sub
pop
mov
fnsave
add
lds
mov
ljmp
int3
fmulp
shlb
call
xchg
arpl
leave
sbb
jg
mov
mov
nop
mov
loope
pushf
pop
jae
dec
pop
mov
add
sbb
push
dec
cmpsb
in
cmp
jno
lock
pop
mov
xor
nop
sti
jecxz
leave
sub
lahf
inc
imul
cmc
into
add
jmp
lds
push
fmuls
jno
shrb
xchg
testb
nop
xor
movsb
mov
add
outsl
mov
in
sbb
jae
outsb
jb
dec
xor
ds
dec
mov
and
and
sbb
mov
adc
inc
scas
popf
push
cmpsl
dec
in
cmpsl
pop
pusha
lods
sub
js
in
xorb
dec
lods
or
out
cmp
and
dec
fwait
lea
sbb
cli
insb
int3
add
fabs
int3
lcall
and
or
inc
sub
push
imul
sub
jg
lock
dec
push
pop
xor
push
mov
dec
jne
jp
cmp
inc
push
imul
dec
xor
add
mov
dec
in
aam
dec
xchg
sbb
cmp
data16
mov
push
add
mov
jl
pop
mov
movsb
mov
mov
stos
lock
orb
pop
inc
pop
aas
sti
xchg
mov
jb
jl
sbb
iret
test
les
rolb
xchg
add
lahf
or
mov
insl
xor
mov
dec
dec
push
add
pushf
movsl
ret
aas
mov
xchg
jl
mov
loop
std
popf
mov
out
mov
sub
xchg
mov
jl
pusha
bswap
xchg
or
and
or
shrb
mov
ss
je
loope
jge
add
or
mov
or
xlat
int3
aaa
pop
scas
or
push
push
dec
out
movsb
pop
and
pop
mov
dec
xchg
xchg
movsl
push
cld
int3
xchg
in
adc
push
cmp
aaa
bound
fmul
cmpsl
mov
je
inc
enter
fwait
or
sub
sbb
cmp
fs
sbb
sbb
inc
test
cltd
pop
xlat
sbb
mov
pop
test
inc
xchg
jns
inc
icebp
inc
or
mov
push
insl
pusha
cmp
lods
dec
inc
mov
push
mov
iret
dec
rclb
cltd
imul
mov
cmp
roll
data16
scas
jae
pop
jae
mov
jmp
or
fidivrl
out
sar
jno
cltd
adcb
arpl
add
xor
dec
jp
fidivrs
dec
inc
and
mov
pushf
mov
or
aaa
pushf
ljmp
in
inc
push
inc
push
fidivl
aad
ja
xchg
pop
push
cwtl
mov
sahf
sahf
stos
fsubrl
fmuls
adc
jmp
adc
decb
jb
stc
lcall
cli
sub
pop
insb
xchg
mov
inc
fisubrs
in
es
xchg
cmp
enter
int3
clc
inc
or
mov
push
dec
popf
inc
dec
lret
scas
mov
gs
mov
movsl
pop
pop
lods
xlat
pop
sbb
mov
call
dec
mov
xor
leave
ljmp
cmp
decb
gs
pop
mov
loope
ret
mov
popa
sbb
cmp
das
or
ficoms
test
xchg
xchg
loope
bound
pop
into
psadbw
fmull
in
push
fnstcw
mov
subl
jne
bound
popf
aad
push
add
je
push
in
out
xor
aas
mov
mov
call
inc
ja
cltd
dec
stos
sbb
add
loope
pushf
fsubrp
push
sbb
push
loope
adc
jge
testb
fdiv
rol
call
movsb
push
push
scas
in
aad
add
stc
cmpsb
adc
xchg
and
jno
jge
mov
or
mov
ret
outsb
push
clc
mov
pop
test
pushw
jnp
inc
lods
push
adc
vxorps
sbb
xor
popa
outsl
xor
shlb
gs
mov
insb
cmc
unpckhps
clc
jmp
gs
stos
int
xchg
call
mov
xor
test
pushf
sub
add
dec
pop
jle
rorb
or
push
mov
mov
inc
js
jnp
arpl
jb
adc
mov
sub
enter
mov
cmp
sbb
les
mov
xchg
out
scas
int
das
les
add
fmull
mov
push
add
data16
mov
push
mov
ret
inc
xchg
sti
pop
and
loop
int3
das
add
xchg
cmp
or
jns
je
cmp
clc
jnp
or
icebp
sbb
adc
out
stc
cmc
sbb
and
push
jecxz
bndldx
pop
inc
out
stc
add
je
xlat
adc
popl
