inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
scas
andb
mov
andb
mov
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
jnp
and
xchg
andl
rolb
and
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
push
test
and
and
mov
test
and
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
xor
test
and
and
pop
test
and
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
sbb
and
xchg
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
call
mov
mov
push
call
mov
lea
add
cmp
jae
lea
cmp
ja
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
lea
sub
push
push
push
call
add
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
add
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
das
int
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
out
inc
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
inc
mov
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
out
rolb
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
jb
inc
add
call
mov
in
mov
add
add
mov
add
cmp
jae
mov
mov
mov
add
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
push
lods
inc
add
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
fwait
enter
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
jae
inc
add
pop
add
cwtl
mov
nop
nop
nop
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
cmp
and
cwtd
and
and
in
sub
add
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
pop
lcall
jnp
and
sahf
lcall
nop
nop
nop
nop
nop
nop
nop
nop
sub
test
mov
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
push
lds
clc
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
xchg
movl
push
nop
nop
nop
push
push
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
dec
movb
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
xor
inc
add
inc
and
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
add
add
add
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
ret
test
and
test
and
test
and
test
and
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
subb
and
stos
and
and
and
inc
stos
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
add
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
add
aad
cmp
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
mov
sub
cmp
push
push
push
push
jbe
dec
mov
jmp
mov
xor
test
jbe
mov
mov
lea
push
push
call
add
test
jle
mov
mov
lea
rep
movsw
mov
mov
mov
rep
movsw
mov
lea
mov
rep
movsw
mov
mov
mov
dec
mov
jne
test
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
mov
push
xor
cmpl
jbe
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
push
lea
push
push
call
lea
movw
push
call
mov
lea
push
lea
lea
mov
lea
push
call
mov
add
inc
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
test
jbe
push
mov
push
mov
push
mov
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
mov
push
mov
push
push
push
mov
cmp
jae
mov
xor
test
jbe
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
mov
push
lea
lea
mov
lea
push
call
mov
add
inc
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
push
push
mov
test
jbe
xor
test
jbe
mov
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
mov
cmp
je
inc
cmp
jae
mov
lea
lea
lea
lea
mov
mov
inc
rep
movsw
mov
add
cmp
jb
decl
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
test
mov
jbe
mov
push
mov
push
push
sub
lea
mov
mov
inc
rep
movsw
mov
add
cmp
jb
pop
pop
pop
pop
ret
nop
nop
nop
sub
push
push
push
push
mov
xor
cmpl
jbe
mov
xor
lea
push
push
mov
mov
add
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
je
mov
inc
add
cmp
jb
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
mov
mov
push
mov
push
push
push
call
mov
push
push
push
call
add
test
jne
mov
mov
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
mov
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
call
add
ret
nop
nop
nop
mov
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
push
cmp
jbe
mov
mov
mov
mov
shl
test
jne
inc
mov
mov
cmp
ja
mov
mov
cmp
jb
pop
pop
xor
pop
ret
mov
test
je
mov
push
shl
push
add
push
push
push
push
call
movw
mov
pop
inc
mov
pop
mov
pop
ret
push
push
mov
push
push
mov
xor
push
lea
push
push
push
movl
call
add
test
je
push
lea
push
push
push
inc
call
add
test
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
push
mov
lea
push
push
push
movl
call
add
test
je
push
mov
push
mov
add
testb
and
lea
push
push
call
add
test
je
inc
add
cmp
jb
mov
mov
push
lea
push
push
call
add
mov
lea
push
mov
lea
push
push
push
call
add
test
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
call
mov
mov
mov
add
mov
add
test
je
push
push
call
add
add
mov
mov
test
je
push
push
call
add
add
or
mov
cmp
jbe
mov
mov
lea
lea
movl
shl
push
call
mov
add
test
mov
jne
pop
pop
pop
xor
pop
ret
mov
push
push
push
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
call
mov
add
test
je
movl
mov
xor
test
jbe
xor
mov
mov
add
push
push
call
add
test
jne
mov
movl
mov
inc
add
cmp
jb
mov
cmpl
je
mov
movl
test
jbe
mov
mov
push
push
push
call
add
add
dec
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
sub
mov
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
push
lea
push
mov
lea
push
mov
push
xor
push
push
mov
mov
call
add
test
jne
pop
add
ret
mov
mov
push
mov
push
xor
cmp
mov
jbe
push
mov
mov
lea
push
call
add
test
jne
mov
movl
jmp
test
je
mov
lea
push
push
call
add
mov
inc
add
cmp
jb
pop
mov
test
je
mov
push
call
add
mov
pop
pop
pop
add
ret
mov
test
je
push
call
add
mov
mov
mov
mov
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
loopne
pop
add
adc
call
call
call
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
push
mov
sub
push
push
lea
push
push
lea
push
lea
push
lea
push
call
jle
add
add
mov
mov
push
add
mov
push
jmp
jb
add
cmpsl
mov
mov
js
add
rolb
sub
pop
popl
push
push
push
push
push
lea
push
push
lea
push
call
pushf
scas
add
add
lds
pusha
ret
push
add
roll
add
add
add
push
add
mov
push
out
popa
je
add
loopne
nop
add
lcall
push
push
push
push
push
push
push
push
call
out
in
ffreep
xchg
mov
add
add
mov
jns
add
xchg
add
add
popa
ljmp
in
loopne
lcall
push
push
push
push
call
cld
add
mov
xchg
add
add
add
xlat
add
push
in
add
add
popl
add
call
cmpsb
lcall
into
add
lcall
push
push
push
push
push
push
call
pushf
add
testb
pop
mov
loope
add
mov
mov
add
fwait
add
mov
add
jle
add
push
add
add
pop
xlat
les
add
add
mov
add
add
add
in
call
add
push
push
push
push
push
call
call
add
mov
add
addl
add
cmpsl
add
scas
add
rol
add
xchg
mov
ljmp
add
mov
movb
add
add
add
mov
andb
mov
scas
shrl
lcall
add
xchg
psrad
lea
push
push
push
push
lea
push
push
push
call
stos
add
divl
int
out
add
sarb
add
stc
push
les
pop
fstpt
stos
jbe
add
add
into
xchg
add
in
fadds
push
add
stos
add
add
in
fcomps
rclb
push
push
lea
push
push
push
push
lea
push
push
call
add
xchg
int3
add
rolb
jle
aam
jo
add
addb
xchg
add
clc
add
int3
add
popf
aam
add
xchg
add
iret
addb
mov
sahf
stos
mov
add
fmull
pop
jmp
push
push
push
lea
push
push
push
push
call
add
jo
add
add
add
jmp
xchg
addr16
testb
xchg
add
fs
xchg
add
mov
add
scas
filds
leave
push
xchg
jmp
jbe
lods
jecxz
pop
add
add
hlt
sub
pop
ret
push
push
push
call
in
add
add
test
add
push
clc
add
outsl
add
lret
pop
jecxz
add
mov
jb
popf
jno
hlt
add
enter
lcall
inc
hlt
push
lea
push
push
push
call
xchg
arpl
push
js
xchg
pop
add
roll
xchg
xlat
mov
add
add
fildl
add
repnz
mov
loop
add
add
add
add
add
add
cli
fldl
insb
sub
pop
mov
push
push
push
push
lea
push
push
call
popf
add
jmp
push
fnsave
mov
mov
add
mov
push
add
add
pushf
add
jmp
lcall
pop
in
add
push
lea
push
push
push
push
push
push
lea
push
call
sahf
cmpsb
xchg
mov
jo
popf
xchg
jb
mov
mov
lret
lahf
shlb
in
enter
mov
addr16
add
fsubs
push
add
popa
add
add
shll
jecxz
xchg
push
add
sub
pop
add
push
lea
push
lea
push
push
push
call
pusha
add
movl
popf
movsl
add
add
out
jnp
sbbl
pop
add
add
add
loopne
test
pop
mov
add
popl
add
cmpsb
out
lcall
add
jmp
add
push
sub
pop
mov
push
push
push
call
add
jb
lret
jp
add
xchg
mov
mov
add
lock
add
add
add
add
faddl
arpl
fisttpll
jne
mov
pop
add
mov
add
add
leave
add
jl
sub
pop
xor
push
push
push
push
push
push
push
push
call
out
notb
mov
add
mov
add
pushf
jno
mov
xchg
cwtl
add
jne
pop
add
add
int
andl
int
add
push
jo
jbe
push
cli
repnz
in
loopne
add
push
push
not
push
xor
add
add
not
not
sub
shr
pop
lea
not
pop
push
push
push
lea
push
call
shrb
add
stos
out
xchg
push
int
movsb
push
xchg
mov
icebp
aam
scas
ja
test
cld
add
out
lret
add
ret
lret
std
jnp
add
jae
imul
nop
add
sub
pop
pushl
push
push
call
add
add
outsl
add
add
push
std
lret
add
out
add
loopne
shr
mov
mov
push
fnstsw
add
into
add
mov
out
jno
aad
out
fildll
add
mov
int3
sti
fldl
add
test
add
out
sti
cwtl
jmp
lret
pop
sub
pop
call
push
push
lea
push
lea
push
push
push
push
call
add
add
loope
pop
add
clc
add
mov
add
add
add
add
mov
add
add
cmpsl
out
mov
flds
push
in
ljmp
add
xchg
pop
popf
add
xchg
add
shrl
add
jmp
add
add
test
sub
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
jnp
lea
add
mov
clc
mov
add
les
pop
lea
xchg
les
filds
xchg
add
aad
in
fcomps
inc
call
ss
lea
push
push
lea
push
push
call
push
rcr
lds
mov
mov
mov
jno
add
ljmp
mov
add
rcrl
int3
ja
decb
jne
sbb
mov
add
add
aam
add
stos
mov
pop
add
add
lcall
pushl
push
push
push
push
call
lods
ljmp
add
lods
add
ficomps
lods
add
out
xchg
add
jae
mov
add
jns
add
cwtl
jns
imul
xchg
add
lret
add
lcall
jne
push
push
push
push
call
xchg
add
add
je
out
std
add
add
dec
sti
push
scas
add
mov
add
nop
outsl
std
add
mov
jo
add
int
mov
add
add
add
cld
add
ja
scas
add
pusha
imul
add
lcall
sbb
add
pushl
push
push
push
push
push
lea
push
push
push
call
pop
add
add
add
nop
add
add
add
add
add
add
add
xlat
popa
add
roll
push
xchg
add
add
nop
add
add
pop
sub
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
add
fcoms
jno
add
add
mov
jle
int3
xchg
jl
add
mov
add
add
add
loope
add
lock
ja
add
xchg
jp
loopne
popa
xchg
jne
jns
popf
out
push
pop
add
add
addb
add
cli
mov
add
in
fcomps
loop
add
push
push
add
sub
sub
ror
push
or
inc
add
ror
dec
sub
xor
sub
pop
xor
ror
pop
push
push
push
lea
push
push
push
lea
push
call
mov
xlat
mov
cmc
add
ja
testb
fisubl
add
add
add
add
mov
ret
mov
sbbb
mov
add
movsl
shlb
int3
add
push
add
ljmp
in
lcall
jne
call
push
push
lea
push
lea
push
lea
push
call
lret
test
xchg
rcr
out
popf
roll
aam
add
data16
add
mov
clc
test
movsl
pop
pop
push
ret
cld
mov
add
imul
in
lcall
inc
push
push
shl
push
and
add
sub
sub
add
pop
rol
pop
push
push
call
add
add
lahf
mov
movsl
jb
int
sahf
jnp
push
cmc
cmpsl
xchg
cwtl
add
jl
add
enter
ficompl
in
pop
add
xchg
pop
mov
clc
mov
jns
push
testl
add
add
add
lret
insb
add
lret
add
fldl
lcall
push
push
lea
push
push
lea
push
call
add
add
pop
add
int3
mov
mov
leave
lock
add
push
addl
add
pop
add
xchg
add
lcall
add
mov
daa
jae
push
push
call
fbld
push
aam
aad
add
mov
mov
nop
mov
sahf
loope
std
xchg
add
pop
fiadds
pop
cmpsl
enter
adcb
fcoml
in
hlt
pop
call
mov
push
push
push
push
push
push
call
add
xchg
add
lcall
je
jge
add
mov
movl
idivl
xorl
mov
insb
push
stos
pop
mov
add
add
cmpsl
add
mov
add
add
mov
hlt
add
not
lds
clc
popf
add
mov
incb
add
jbe
sub
pop
push
push
push
push
lea
push
lea
push
push
push
call
mov
add
add
jmp
imul
add
add
add
sti
add
aad
insb
lods
xchg
xchg
add
add
aam
imul
in
test
add
add
add
fmuls
lcall
push
lea
push
push
lea
push
lea
push
push
call
add
test
pop
mov
mov
mov
std
mov
xchg
addl
add
add
add
add
sarb
lods
add
add
mov
add
add
add
test
add
add
fwait
mov
xchg
add
fisubrl
addr16
mov
lcall
pop
hlt
push
push
push
push
lea
push
push
call
lock
lret
xchg
add
icebp
iret
xchg
add
int3
outsl
mov
jae
in
add
add
mov
jb
lret
mov
add
ret
cltd
pop
ret
adcl
add
arpl
add
nop
fcomi
add
stos
add
loopne
add
pop
in
push
lea
push
lea
push
push
call
add
add
add
mov
push
add
lret
mov
hlt
dec
les
negb
jmp
add
add
js
testb
mov
add
mov
rolb
lcall
ret
add
add
add
push
push
push
push
push
push
lea
push
push
lea
push
push
call
shr
add
aam
testb
xlat
add
jbe
jle
add
mov
mov
jl
add
std
in
add
lods
add
add
mov
mov
mov
add
add
shl
jbe
add
add
add
add
lcall
xor
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
jecxz
add
pushf
je
mov
ret
neg
add
add
enter
add
add
pop
mov
push
add
xchg
movsb
add
add
add
xor
push
push
push
push
call
xchg
imul
add
add
fdivr
push
push
stc
ljmp
add
nop
xchg
aad
stc
add
xchg
add
int
leave
add
sbbb
add
test
jbe
test
push
fsubs
add
add
jne
pusha
add
add
sub
pop
add
push
push
push
call
movsl
add
add
add
add
add
faddl
xorb
add
les
xchg
add
in
hlt
pop
add
push
push
push
push
push
call
movsl
add
popa
mov
loopne
fiadds
add
imul
lods
xchg
add
add
stos
ja
add
ljmp
addb
or
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
push
add
movb
mov
testl
add
jb
loope
add
shlb
add
add
mov
xchg
mov
jns
into
add
in
enter
clc
add
add
sub
pop
add
push
push
push
push
lea
push
call
add
loopne
popa
int
add
fiaddl
add
add
out
cmpsb
fdivrl
mov
shlb
add
mov
push
add
jne
jp
jo
clc
mov
out
sahf
movb
out
cli
push
lods
pop
sub
pop
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
jnp
iret
aad
add
mov
add
std
add
add
add
add
add
fcoms
mov
pop
pop
pop
add
stc
jno
js
add
add
fstpt
mov
repnz
mov
xchg
in
ljmp
xchg
ljmpw
nop
stc
lret
into
mov
add
jge
lcall
and
push
push
call
test
add
loope
imul
mov
cmc
mov
push
enter
mov
add
add
add
xchg
imul
imul
pop
add
push
lea
push
push
push
call
filds
add
add
add
push
push
ja
add
out
pop
sti
ret
xchg
xchg
add
aad
mov
imul
mov
jbe
test
add
mov
mov
add
je
stc
movsl
ret
in
lock
push
push
push
lea
push
call
stos
add
add
xchg
mov
sti
addl
add
add
lcall
lock
test
add
scas
jne
add
add
mov
test
shlb
lcall
inc
or
push
push
push
lea
push
push
push
push
call
add
add
testb
nop
add
stos
fwait
add
add
add
add
add
add
stos
int
add
fidivl
mov
ret
add
ror
push
xchg
jge
xchg
add
jb
add
add
fcomps
mov
cmpsl
lods
add
add
in
in
lcall
enter
scas
sub
call
icebp
add
jge
in
pop
addb
add
add
loopne
push
icebp
fldenv
add
add
leave
imul
rolb
imul
fildl
jecxz
add
cld
add
add
fsubs
add
lcall
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
mov
subl
xchg
cmpsl
add
add
push
push
add
add
add
add
mov
add
add
test
add
jb
mov
add
orb
add
testb
iret
pop
ja
add
lret
aad
out
add
lcall
movsb
push
push
call
add
lret
mov
add
out
pop
lods
lock
mov
add
iret
add
push
pop
add
and
add
add
add
add
les
add
jecxz
add
xchg
add
int3
add
add
jno
push
add
mov
int3
add
push
add
lcall
push
push
push
call
xchg
fadds
notb
jle
jge
enter
add
add
add
lahf
cmpl
shlb
add
jl
testb
add
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
addb
addl
sti
lods
add
jno
add
jge
rorb
add
out
push
test
js
sub
pop
add
push
push
call
add
rolb
add
fucomi
in
add
lret
add
stos
add
lret
pop
test
stc
mov
add
popl
add
ror
popf
outsl
outsl
jo
add
scas
add
add
add
add
clc
xchg
add
mov
mov
add
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
add
add
ljmp
add
fwait
add
int
pop
fldl
add
jae
mov
add
in
xchg
mov
stos
loope
fldl
cmpsl
arpl
add
fsts
out
test
add
mov
jecxz
push
xchg
movb
insl
inc
add
push
push
lea
push
lea
push
push
push
push
push
push
call
add
cmpsl
push
pop
add
push
push
cmpsl
add
mov
add
add
lea
add
add
add
add
add
add
fiaddl
in
xchg
jbe
popl
fcmovu
cli
addl
add
fdivr
lcall
inc
and
push
push
push
push
push
push
push
push
lea
push
call
je
gs
lahf
add
int
mov
cwtl
add
xchg
mov
loope
data16
imul
add
add
lcall
push
and
push
lea
push
push
push
push
push
lea
push
call
add
mov
pop
lea
push
pop
fs
insb
xchg
imul
ljmp
add
mov
add
jo
mov
test
fwait
sub
pop
xor
push
lea
push
lea
push
push
push
push
lea
push
push
call
xchg
add
movsb
imul
push
add
add
mov
scas
add
addr16
popf
mov
add
mov
mov
cli
add
add
pusha
xchg
jle
xchg
jmp
mov
lods
add
add
add
movsb
cltd
lds
add
cltd
movsb
push
sub
pop
add
push
push
lea
push
push
push
push
push
lea
push
call
testl
mov
insb
jae
test
shlb
add
movsb
addb
push
add
sar
jo
mov
lcall
mov
add
addl
cmpl
loopne
mov
xor
push
push
push
lea
push
call
cli
movsl
add
lea
add
movsl
mov
mov
add
add
loopne
mov
add
int3
push
jno
lods
mov
mov
add
addb
push
add
add
js
popa
test
add
push
push
loop
xchg
js
test
call
lock
lcall
ret
mov
lods
push
push
call
in
push
addr16
add
hlt
imul
mov
add
mov
add
add
add
ret
pop
std
leave
mov
fwait
add
test
add
fcmovbe
mov
movsl
add
cltd
push
mov
rcll
xlat
add
add
add
add
roll
rcll
push
push
push
lea
push
push
call
xlat
out
lods
add
lahf
jae
shll
add
nop
lea
call
cmc
leave
mov
add
in
sub
pop
mov
push
push
dec
dec
shl
shl
push
or
inc
add
sub
ror
sub
not
inc
add
pop
not
dec
pop
push
lea
push
push
push
call
push
add
push
imull
add
add
fucomp
mov
add
push
mov
add
out
addb
mov
mov
jae
shr
xchg
add
ljmp
stc
lret
add
add
sub
pop
pushl
push
push
lea
push
call
mov
pop
out
push
add
add
add
add
xchg
jmp
add
add
iret
add
insb
mov
add
movsl
add
add
mov
add
in
cli
add
mov
adcl
lcall
dec
add
push
push
push
push
lea
push
push
call
into
xor
mov
bound
mov
push
add
add
pop
outsl
int
add
addr16
call
mov
sub
pop
push
push
push
add
lea
push
xor
add
ror
sub
ror
add
sub
pop
shr
lea
pop
push
push
call
push
cmpsl
enter
add
fnstcw
add
cwtl
add
add
imul
add
shlb
je
test
add
in
movsb
nop
add
loop
xchg
iret
mov
test
pop
std
mov
add
movsl
add
add
jns
add
mov
add
add
gs
icebp
addb
push
lea
push
push
push
push
call
mov
jo
orb
test
jb
add
xchg
add
add
mov
mov
sub
pushf
pushf
add
jl
add
add
push
add
mov
stc
add
xchg
pop
enter
jb
pop
hlt
add
sub
pop
push
call
push
rol
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
fs
mov
add
add
add
test
int
sahf
mov
add
add
add
add
add
lret
add
xchg
loopne
scas
add
sahf
fists
add
jge
loopne
lcall
add
add
add
lcall
push
push
lea
pop
mov
push
push
push
push
lea
push
push
push
call
vshufpd
push
aad
push
add
mov
add
int3
jl
xchg
fisttps
mov
add
movsb
add
add
loopne
hlt
xchg
lock
rorb
testb
movb
pop
add
push
push
call
mov
add
in
add
add
rolb
push
addl
xchg
clc
mov
ljmp
fwait
jnp
add
in
mov
add
popf
xchg
xlat
add
pop
fstl
push
nop
rolb
push
pop
add
add
mov
add
lcall
ret
add
add
add
push
lea
push
push
push
push
push
push
push
push
call
add
add
mov
sar
jp
mov
jl
add
add
add
sti
add
push
mov
add
stos
test
arpl
add
filds
add
jle
add
mov
int3
gs
bound
cli
add
bound
in
fdivr
lcall
jae
push
push
push
push
push
push
push
call
add
xchg
push
add
imul
add
jecxz
jmp
add
add
add
add
mov
add
add
lcall
xor
push
push
push
push
push
push
push
call
jno
cmpl
cmpsb
fnsave
add
mov
mov
add
mov
testl
incb
xchg
add
add
test
mov
add
lret
push
pop
add
jae
mov
cltd
add
addr16
xchg
fs
add
add
xchg
mov
jnp
nop
add
test
les
inc
pop
add
push
sub
not
shr
add
pop
push
mov
push
push
push
push
push
push
call
add
loope
add
hlt
mov
mov
lea
add
mov
lcall
mov
add
in
add
jbe
add
add
add
pop
add
mov
sub
pop
xor
push
push
push
call
lea
add
stos
add
add
mov
mov
popl
fadds
pop
push
leave
push
add
add
lahf
je
rol
xchg
add
add
cld
pop
addr16
mov
add
pop
mov
add
sahf
add
les
add
push
lea
push
push
push
push
push
call
mov
ljmp
add
add
jnp
add
push
lock
imul
in
mov
out
flds
add
test
push
cld
add
pop
movl
jbe
add
add
cmpsl
add
add
pushf
in
add
mov
add
sub
pop
add
push
push
push
push
lea
push
push
push
push
push
push
call
fsubrl
push
js
xchg
xchg
add
add
add
rolb
int
add
xchg
in
pop
insb
stos
add
add
aam
add
add
je
add
loope
mov
mov
push
jl
jecxz
mov
add
subb
div
xlat
ficoms
push
sub
pop
pop
mov
xor
push
sub
add
pop
rep
push
shl
sub
pop
mov
xor
push
push
lea
push
push
push
push
push
push
push
push
call
mov
cmpsl
rcl
add
aam
add
add
mov
pop
xchg
in
in
add
rolb
lods
stos
add
lcall
leave
je
push
lea
push
call
add
faddl
add
aam
scas
fistl
loopne
lds
jp
add
mov
mov
jmp
add
test
popf
fucomi
add
pop
mov
push
add
xlat
add
add
add
jbe
in
clc
lcall
xor
push
push
push
lea
push
push
push
push
push
push
push
call
rolb
mov
jae
mov
xchg
movsl
jo
jnp
mov
mov
add
lcall
pop
in
test
add
gs
add
shlb
movsb
sub
pop
mov
push
push
push
lea
push
lea
push
push
call
add
add
popa
add
mov
fwait
mov
fadds
add
add
int3
cltd
add
mov
add
add
out
std
mov
add
add
jb
mov
jne
fnstcw
add
add
add
add
in
in
pop
xor
push
lea
push
push
lea
push
lea
push
push
call
add
js
mov
mov
add
add
add
add
xlat
add
insb
rolb
add
add
add
jae
mov
into
fisubrs
add
add
add
add
std
arpl
in
call
add
push
shl
sub
sub
sub
pop
add
push
shl
shr
xor
pop
add
push
push
push
push
lea
push
push
push
lea
push
call
add
add
lret
add
mov
add
add
xchg
frstor
pushf
pop
mov
add
mov
mov
in
loopne
push
push
push
push
push
push
push
call
lods
into
cmc
add
fnstenv
add
shl
add
xchg
mov
add
mov
xlat
add
cmpsl
push
pop
jmp
add
pop
pop
lahf
add
add
sahf
in
add
pop
add
into
push
add
add
lcall
inc
or
push
dec
xor
dec
pop
add
push
not
rol
pop
pop
push
lea
push
push
call
call
iret
scas
push
xchg
add
lret
push
out
lret
jp
fsubl
add
addr16
sub
pop
rep
push
lea
push
lea
push
call
push
cmpsb
push
popa
rolb
jmp
int
iret
arpl
flds
add
jb
mov
in
add
mull
cli
fwait
push
add
cmpsb
jae
jo
add
mov
enter
cmc
out
pop
add
add
call
hlt
pop
mov
push
push
push
lea
push
lea
push
lea
push
call
add
pop
mov
add
push
pop
add
add
out
movl
add
faddl
loop
cmc
add
add
out
add
popa
add
mov
in
test
add
xchg
add
add
mov
cli
rolb
add
sarb
add
aad
mov
mov
mov
in
in
pop
xor
push
push
push
call
fwait
add
pop
out
xlat
test
add
add
ljmp
add
rcr
out
pop
add
add
lcall
les
add
lea
pop
or
je
push
shl
pop
mov
push
sub
shl
pop
add
rep
push
push
push
push
push
push
push
call
hlt
add
js
addl
add
add
movb
add
out
add
push
jmp
add
add
add
mov
add
mov
add
push
push
inc
rol
sub
push
or
inc
add
add
sub
not
pop
shl
lea
lea
add
pop
push
push
push
push
push
push
push
push
push
call
lods
add
stos
mov
addr16
add
add
pop
add
mov
ja
in
popf
mov
stos
mov
mov
add
xchg
cld
add
add
add
xchg
lea
add
ja
mov
pop
jl
push
add
gs
mov
add
xchg
test
push
rol
shr
pop
mov
push
push
call
add
add
add
ror
outsl
add
les
mov
les
add
stos
add
add
add
jae
add
add
fbstp
mov
add
in
jnp
add
int
add
mov
pushf
sub
pop
mov
push
lea
inc
rol
pop
mov
push
push
call
roll
add
add
pop
mov
add
push
ret
mov
mov
add
cmc
add
cmpsb
cld
pop
bound
fidivrl
add
jne
sub
pop
jmp
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
jle
fadds
add
add
add
add
mov
movsb
pop
loopne
call
add
sub
pop
push
push
lea
xor
add
pop
mov
push
lea
push
push
call
hlt
out
test
loopne
add
add
mov
scas
bound
add
cltd
add
mov
loopne
add
in
nop
ja
add
jnp
lods
pusha
sub
pop
add
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
roll
mov
add
add
add
add
aam
pushf
mov
movl
add
add
call
jge
add
add
push
out
add
add
add
sub
pop
push
push
push
push
push
push
push
call
rcl
add
mov
xacquire
xlat
test
mov
enter
mov
xchg
mov
add
jbe
add
jns
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
jmp
lret
push
lds
out
aam
add
add
add
xchg
add
mov
out
xchg
pushf
add
jl
jnp
subl
add
lcall
push
lea
push
push
push
push
lea
push
call
add
roll
mov
mov
rcl
add
int
jl
add
rolb
andb
add
add
jge
add
add
addb
add
in
call
inc
shlb
int3
iret
sub
push
push
call
pop
data16
add
pop
xchg
add
add
jge
ror
add
add
add
pop
add
add
popl
push
add
mov
jmp
xchg
sub
pop
mov
pop
push
ror
add
add
pop
pop
pop
push
push
lea
push
push
push
push
lea
push
call
lret
jecxz
movsb
add
push
xchg
jmp
add
add
push
add
fcomps
xchg
cmpsb
xchg
jbe
aam
add
popa
add
add
add
add
ja
add
leave
push
sub
pop
ret
push
push
push
push
push
lea
push
push
call
push
loope
pop
mov
movsb
xchg
lahf
jae
lock
jb
movl
mov
add
stos
add
add
cmpsl
fadd
movb
xchg
add
addl
stos
add
in
call
lea
push
push
push
push
push
call
jge
nop
popf
mov
stos
aam
cmc
add
test
outsl
mov
xchg
xchg
push
mov
mov
mov
xchg
std
add
add
add
clc
push
push
rol
pop
push
push
sub
rol
pop
push
push
sub
pop
push
push
push
push
lea
push
call
test
jno
add
mov
add
xchg
mov
mov
int3
add
add
add
rolb
rolb
iret
bound
add
xchg
add
lods
add
loopne
in
lock
lcall
inc
cld
add
add
push
ror
shl
ror
xor
pop
addl
push
lea
push
call
mov
add
add
mov
add
push
rolb
add
fs
push
xchg
jae
xchg
mov
movsb
add
add
add
lcall
rorb
or
dec
sub
pop
mov
push
ror
pop
pop
push
inc
pop
pop
push
push
push
push
push
push
push
push
push
push
call
int
add
shl
nop
add
add
add
add
xchg
xlat
pusha
add
mov
shlb
add
add
insb
add
add
add
xchg
jp
mov
js
add
addb
into
mov
sub
pop
pop
push
pop
pop
push
push
push
push
call
mov
lret
test
add
mov
push
cwtl
orl
lods
flds
fwait
cwtl
add
movsb
lds
add
pop
popf
add
add
pop
aam
add
vpshufhw
fmuls
enter
add
jmp
push
in
lock
lcall
push
push
push
lea
push
push
push
push
call
add
xchg
flds
add
add
stc
lods
lret
iret
hlt
aad
js
int
mov
lods
int
jmp
add
add
lcall
add
push
push
ror
sub
pop
mov
push
add
xor
sub
pop
add
push
push
rol
pop
push
push
xor
add
add
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
fidivs
in
call
add
lock
pusha
fiadds
aad
enter
cli
cld
mov
mov
add
testl
add
push
sti
add
add
pop
jle
mov
add
pop
push
sub
pop
push
push
ror
ror
pop
testl
push
shl
add
sub
ror
pop
addl
push
sub
pop
push
push
lea
push
call
add
mov
add
add
add
add
xchg
addr16
xchg
int3
add
add
fadds
icebp
mov
add
add
mov
js
jae
add
add
push
xchg
pop
fs
in
sub
pop
call
push
push
lea
push
call
add
test
ljmp
push
add
fadd
add
in
add
mov
enter
sahf
pop
mov
sahf
leave
add
add
add
mov
ja
push
addr16
mov
add
lcall
add
stos
add
call
hlt
pop
mov
pushl
push
ror
pop
push
push
lea
push
push
lea
push
lea
push
push
call
cltd
lea
movl
add
pop
add
popf
enter
fistl
add
push
push
add
jmp
mov
add
add
add
mov
lcall
add
addr16
jne
push
call
cld
add
out
pusha
sahf
add
pop
aam
add
lock
add
add
in
mov
lods
add
add
lods
add
jl
pop
roll
test
add
jp
ja
iret
add
add
mov
add
sub
incl
test
call
loop
pop
pop
push
rol
not
shr
pop
pop
pop
push
push
lea
push
call
add
cld
add
loop
add
push
roll
fistpll
jl
add
add
xchg
add
add
add
mov
fidivl
xchg
lods
pop
test
sub
pop
pop
push
push
push
push
push
push
push
push
push
call
fiadds
roll
xchg
aam
add
mov
stc
mov
xorl
add
popl
add
add
pop
add
hlt
add
add
cmc
fildl
out
add
leave
imul
test
add
add
int3
add
ja
cmpsb
jmp
faddp
aad
out
cwtl
add
add
xchg
ret
sub
pop
leave
push
add
pop
ret
push
push
xor
rol
pop
mov
push
shr
pop
add
push
lea
push
lea
push
call
mov
jecxz
scas
addb
aad
add
repnz
pop
add
out
add
fistpl
pop
pop
les
add
add
test
add
xchg
addr16
add
xchg
lahf
xchg
add
mov
andb
lods
in
jbe
std
sti
mov
add
add
sub
pop
push
push
add
rol
shl
rol
pop
push
push
pop
push
push
lea
push
push
push
push
lea
push
push
call
sahf
pop
test
xchg
call
add
lahf
imul
add
lds
add
add
add
add
fdivs
xchg
xlat
mov
iret
loopne
imul
add
add
sti
mov
test
add
lcall
push
xor
not
add
pop
movl
push
push
shr
add
shr
ror
pop
call
push
lea
push
push
lea
push
push
push
call
add
mov
push
xchg
xchg
add
jle
mov
gs
add
mov
lea
je
std
jle
popa
icebp
xchg
add
roll
les
xchg
add
addl
add
mov
movl
popa
add
les
divb
lcall
adc
add
inc
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
hlt
add
mov
enter
add
add
pusha
add
add
add
push
out
add
pop
ror
addb
jl
in
loopne
lcall
insl
cld
add
test
call
pop
pop
pop
push
dec
shr
lea
pop
pop
pop
push
dec
add
pop
leave
push
xor
dec
dec
pop
ret
push
lea
push
lea
push
push
push
lea
push
push
call
mov
fsub
int3
xchg
add
ljmp
mov
mov
mov
add
add
push
test
mov
add
test
mov
lcall
push
push
push
push
lea
push
lea
push
push
call
ror
pushf
adcl
nop
xorl
add
pop
add
scas
add
roll
pop
outsl
add
add
add
iret
jns
add
lcall
in
push
not
dec
pop
add
push
push
dec
inc
shl
pop
push
push
push
push
push
lea
push
push
push
call
push
xlat
add
add
les
pop
add
in
add
add
push
mov
pop
imul
cli
or
push
add
push
push
push
not
lea
push
push
pop
add
sub
lea
rol
pop
inc
lea
shl
shr
pop
push
push
lea
push
push
call
add
add
xchg
movb
add
ljmp
stos
add
mov
ja
leave
mov
ljmp
add
add
mov
add
add
add
stos
mov
mov
pop
add
add
js
jne
jmp
pushf
imul
pushl
push
inc
inc
ror
pop
call
push
shr
dec
xor
pop
call
push
push
inc
dec
sub
push
sub
add
xor
sub
shr
pop
inc
pop
push
push
push
push
call
test
mov
push
mov
xchg
shr
add
pop
mov
xchg
add
cltd
xchg
mov
add
std
in
jae
scas
test
add
cmc
add
stc
add
jp
lahf
sahf
add
add
arpl
sar
add
add
in
lock
pushl
push
pop
call
push
push
push
push
push
call
mov
add
lret
add
fsubrl
ret
push
xchg
add
add
lea
push
jne
sahf
push
popa
add
xchg
addr16
add
add
in
lcall
shrb
inc
shrl
ja
fs
add
inc
inc
xor
sub
inc
xor
pop
not
sub
pop
push
push
push
push
push
push
call
add
add
roll
add
fadds
add
addb
flds
std
jle
add
fmull
jb
add
outsl
add
add
add
add
add
fildll
mov
add
jmp
in
call
push
dec
rol
rol
pop
call
push
rol
pop
call
push
push
not
push
sub
add
shl
lea
sub
sub
not
pop
xor
not
pop
push
dec
shl
pop
pushl
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
fucomip
pop
add
push
out
xchg
xorl
add
push
jl
enter
add
fs
add
cli
nop
int3
testb
add
imul
in
add
cmc
add
mov
imul
add
add
mov
add
jo
add
call
push
push
push
push
lea
push
push
push
push
push
push
call
lock
xchg
fs
add
push
add
add
mov
roll
test
hlt
jp
jae
add
icebp
out
xchg
add
jbe
add
jp
cld
add
add
lcall
add
in
lahf
push
xchg
rolb
andl
add
add
addb
add
pop
cwtl
sub
pop
call
push
push
call
int3
fadd
cmc
faddl
push
mov
test
add
fiaddl
jo
xchg
xchg
add
mov
push
add
jnp
rolb
leave
arpl
add
add
add
add
push
adc
add
add
mov
pop
mov
push
push
lea
push
lea
push
lea
push
push
push
call
clc
jns
add
decb
push
fsubr
add
movsb
add
add
add
jp
into
add
js
stos
loop
cli
add
add
test
add
jo
in
in
lcall
inc
cmp
xor
rol
pop
sub
push
lea
xor
inc
pop
mov
push
lea
sub
ror
inc
pop
shr
push
add
pop
add
mov
push
push
push
call
add
xchg
add
add
add
add
imul
add
add
mov
push
add
lcall
andb
lea
push
call
add
imul
add
jecxz
add
mov
pushf
bound
icebp
add
pop
add
outsl
add
add
add
xchg
add
add
pop
add
add
push
push
push
push
push
push
push
push
call
add
add
add
mov
lds
movsl
scas
out
jp
loope
jne
mov
icebp
into
jmp
movsl
loope
add
add
add
mov
add
cwtl
add
add
add
push
jl
add
mov
popl
pop
mov
push
add
pop
mov
push
lea
push
call
popa
mov
add
mov
add
add
xor
mov
aad
testl
xchg
mov
add
fstpl
add
add
fildl
shlb
add
out
arpl
stc
add
push
jge
xchg
add
add
lcall
pop
fs
push
add
shl
pop
cmp
jne
push
rol
lea
not
pop
mov
movl
push
sub
pop
jmp
mov
push
sub
dec
dec
pop
mov
push
push
push
push
push
push
lea
push
push
call
add
add
stos
stc
push
loop
add
add
mov
sarl
addl
out
add
cmpb
imul
jbe
in
loopne
sub
jne
push
pop
mov
push
shr
not
not
pop
movl
push
push
call
mov
xchg
leave
add
add
data16
lods
add
add
xchg
add
add
sahf
add
in
add
add
pop
cli
add
repnz
add
xchg
sub
pop
jmp
mov
push
shr
pop
mov
cmp
jne
push
lea
shr
pop
mov
push
shr
add
add
pop
movl
jmp
push
rol
pop
mov
push
push
push
push
push
push
push
push
push
push
call
scas
mov
mov
cld
add
add
lret
pop
stc
leave
testl
push
jl
lret
xchg
add
in
fdivr
lcall
cmpl
jne
push
lea
push
lea
push
call
test
add
add
lods
add
roll
mov
jo
mov
lods
call
add
jp
bound
mov
add
mov
add
addr16
add
les
stos
loop
mov
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
call
scas
mov
hlt
add
test
cli
xchg
xchg
push
add
shll
add
add
cld
gs
fbld
add
add
notb
add
add
in
movl
push
push
push
lea
push
push
push
push
push
call
fnstenv
add
add
mov
outsl
in
mov
add
mov
out
add
fildl
add
mov
push
add
loope
pop
hlt
rolb
in
ret
scas
clc
mov
xchg
add
icebp
add
pop
add
in
loopne
jmp
pushl
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
pop
add
lret
nop
add
imul
idiv
fsubrs
add
mov
jle
add
add
lea
pop
pop
push
push
lea
push
push
call
je
iret
add
movsb
mov
xchg
insb
pop
add
stc
add
mov
aam
add
addl
pop
pop
pop
test
pop
stos
mov
cld
add
mov
sub
pop
mov
push
push
push
call
mov
pushf
push
add
push
out
mov
in
add
xchg
test
pop
test
xchg
jp
mov
add
add
add
mov
add
add
add
pop
mov
push
add
pop
mov
push
push
rol
push
sub
add
xor
shl
sub
add
xor
pop
add
not
add
add
pop
push
lea
push
call
movsl
mov
movsb
icebp
jl
add
nop
mov
mov
incb
add
add
movsl
mov
add
add
lock
add
mov
add
popl
call
fistps
in
clc
pop
push
call
push
sub
shl
add
inc
pop
cmpl
je
push
push
dec
shr
not
push
xor
add
sub
rol
sub
shr
add
ror
pop
pop
push
not
pop
push
push
shl
ror
pop
call
cmpl
je
push
push
xor
lea
push
and
add
sub
lea
rol
xor
sub
pop
dec
add
pop
push
inc
lea
pop
push
push
sub
add
not
pop
call
push
not
shl
not
pop
cmpl
je
push
push
lea
push
and
add
sub
sub
add
pop
xor
rol
pop
push
push
push
lea
push
push
call
add
into
jne
push
lcall
std
addb
out
add
faddl
mov
add
into
mov
jno
aad
push
add
lcall
push
push
push
push
push
push
push
call
add
scas
add
in
add
add
nop
add
add
jmp
ret
imul
add
addr16
mov
add
pop
call
cmpl
je
push
push
sub
dec
push
or
inc
add
lea
sub
ror
sub
not
shr
rol
rol
pop
dec
xor
shl
pop
push
push
push
lea
push
lea
push
push
push
call
jp
stc
add
imul
add
push
add
add
test
add
add
xchg
imul
add
add
stos
mov
add
add
pop
add
ret
add
leave
rolb
add
jle
in
in
push
call
push
sub
add
not
pop
cmpl
je
push
push
xor
add
rol
push
or
not
add
rol
shr
sub
shr
lea
not
pop
inc
not
add
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
add
mov
jecxz
repnz
lahf
add
add
push
mov
pusha
add
cwtl
add
mov
pop
add
add
lods
add
jp
add
mov
ja
add
push
add
add
cwtl
push
push
outsl
xchg
add
push
pop
lret
mov
bnd
mov
add
pop
jb
jo
in
fdivr
lcall
call
push
ror
pop
cmpl
jne
mov
push
not
not
xor
pop
movl
push
ror
sub
pop
jmp
push
inc
xor
pop
xor
push
sub
dec
ror
pop
pop
push
push
push
push
push
push
push
call
mov
add
nop
scas
xchg
pop
test
xchg
pop
add
aad
mov
add
add
add
mov
js
mov
ret
bound
fsubr
rol
fs
jae
mov
rorl
add
add
mov
cmpsb
add
in
lcall
push
push
call
add
fadd
gs
gs
iret
fildl
pop
pop
add
add
out
add
add
add
push
add
add
cmc
cmpsl
add
jo
jl
mov
add
add
xchg
aam
add
add
loope
add
in
sub
pop
pop
pop
push
add
rol
not
pop
leave
ret
push
lea
push
lea
push
push
push
push
call
ljmp
add
add
mov
add
shll
add
je
mov
andl
int3
lds
rcll
add
test
mov
add
mov
push
xor
inc
pop
add
push
push
push
call
add
push
add
iret
jl
lret
aad
out
jmp
roll
jge
fadds
fldl
mov
push
add
mov
imul
mov
pushf
add
add
out
notl
jb
add
lcall
jge
add
test
out
lret
xlat
push
shr
inc
push
push
pop
add
not
sub
ror
inc
pop
add
ror
pop
push
push
push
push
push
push
call
add
add
sahf
data16
add
test
xchg
jb
add
nop
mov
lods
add
mov
add
lods
ret
insb
add
add
add
jo
std
outsl
lret
shl
mov
add
jbe
mov
pop
mov
fldl
lcall
jne
push
push
push
push
call
add
add
add
add
imul
popl
into
add
je
push
add
fidivrs
mov
push
add
jns
mov
pop
arpl
out
sub
pop
call
push
push
lea
push
push
push
push
push
push
call
add
popf
add
cmpsb
jge
jge
xchg
add
lock
hlt
add
enter
push
add
jns
push
add
movsb
add
jge
add
in
pop
sub
pop
push
call
push
rol
pop
jmp
push
push
push
push
push
push
push
push
call
pusha
add
lds
fldcw
js
int
popa
add
icebp
jb
mov
testb
add
add
pop
push
pushf
jns
mov
fisubs
add
clc
fisubrs
mov
push
sub
pop
cmpl
jne
mov
push
sub
dec
pop
ret
push
lea
push
push
push
push
call
add
test
std
xchg
add
addr16
flds
xchg
imul
fwait
add
mov
pop
lods
add
test
jl
add
sub
pop
jmp
cmpl
jne
push
push
add
push
xor
add
rol
xor
sub
xor
pop
inc
shl
pop
push
push
push
push
push
lea
push
push
push
push
call
cmpsl
add
cmc
jo
xchg
add
mov
lods
pop
add
shll
out
add
jnp
insb
roll
xchg
ljmp
ljmp
mov
add
lcall
add
int3
cli
sahf
add
mov
add
add
add
test
lcall
jne
push
dec
sub
rol
pop
call
push
push
sub
shr
add
pop
call
push
not
pop
jmp
push
push
push
push
lea
push
call
push
jne
pop
add
add
rolb
jae
jbe
int3
mov
rorb
imul
jl
imul
addb
mov
add
pop
roll
push
add
add
rolb
pushf
add
add
lcall
jge
add
test
mov
push
push
push
push
push
push
push
call
push
add
add
cmpsl
mov
pop
add
add
in
popa
push
add
add
mov
std
add
add
clc
add
add
jge
add
add
push
lea
push
call
cltd
add
out
add
jbe
test
movl
fwait
pop
pop
fnstsw
xchg
std
add
loopne
addr16
add
loope
jle
add
add
mov
add
add
mov
lret
xchg
xchg
push
push
add
lcall
add
add
push
rol
ror
pop
mov
push
push
push
sub
not
push
sub
add
sub
shl
sub
inc
sub
inc
not
inc
pop
inc
rol
shl
pop
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
push
jns
add
cltd
add
add
lock
loop
mov
add
gs
add
mov
into
loope
add
pop
mov
add
stc
pop
add
add
stc
jne
mov
push
in
in
lcall
jne
call
push
lea
rol
add
pop
call
push
push
xor
not
add
push
push
pop
add
shr
inc
sub
add
pop
not
pop
push
shr
add
not
pop
pushl
push
push
call
popf
mov
xchg
add
mov
aam
add
pop
add
test
stc
jle
roll
mov
cltd
mov
mov
add
add
in
add
aam
sti
jmp
icebp
xchg
add
clc
pop
call
push
pop
call
push
push
shr
push
xor
add
sub
add
sub
ror
sub
add
shr
shl
pop
rol
pop
push
ror
pop
pushl
push
push
push
push
push
push
push
push
call
mov
test
add
jb
xchg
add
pop
lret
jne
add
js
iret
add
push
loop
xchg
scas
add
add
flds
add
add
add
call
xchg
lret
in
loopne
call
push
ror
shl
pop
call
push
push
xor
rol
ror
add
push
and
add
xor
dec
rol
ror
sub
add
add
pop
add
pop
push
rol
add
lea
pop
pushl
call
push
xor
pop
call
push
push
push
or
inc
add
inc
shr
sub
sub
pop
rol
pop
push
push
lea
push
push
push
lea
push
push
push
call
gs
xchg
add
mov
mov
movsb
add
add
decb
add
leave
add
popa
xchg
xchg
mov
add
shll
out
test
jne
push
pop
call
push
inc
ror
inc
add
pop
call
push
push
xor
lea
xor
push
or
not
add
add
sub
add
sub
rol
pop
rol
pop
push
xor
add
pop
pushl
push
lea
inc
pop
call
call
push
push
sub
not
push
sub
add
add
xor
sub
shl
pop
not
pop
push
push
push
push
push
push
call
add
pop
filds
xchg
fdivrs
cwtl
pop
xchg
mov
adcb
add
jp
add
stos
add
add
push
jne
loop
repnz
lds
addl
iret
cld
mov
mov
add
add
leave
stc
pop
sti
add
stc
sub
pop
pushl
call
push
lea
push
push
push
push
push
call
add
mov
mov
add
mov
jle
cltd
addl
popl
mov
add
ja
jl
lret
popa
movsl
nop
fiaddl
push
mov
add
sub
pop
call
push
push
rol
add
push
sub
add
sub
sub
lea
shl
shl
pop
not
pop
push
ror
pop
pushl
call
push
shl
not
pop
lea
push
push
not
shl
pop
call
push
push
not
shr
push
xor
add
inc
add
sub
sub
sub
pop
pop
push
xor
rol
pop
pushl
call
push
shl
inc
pop
call
push
push
add
push
or
not
add
lea
sub
sub
rol
pop
shr
pop
push
push
call
les
jo
nop
je
add
add
idiv
add
jne
jl
leave
addl
movsb
add
add
add
stos
mov
in
clc
pop
pushl
push
push
lea
push
push
push
push
push
push
push
call
mov
in
sti
mov
sti
push
pop
add
add
rcl
mov
pop
add
add
pushf
js
jp
data16
jmp
add
int
add
shlb
cltd
sahf
ja
add
popa
fsts
fdivp
add
mov
add
mov
in
fcompl
inc
sbb
add
shrb
jns
stos
push
lea
push
sub
add
shl
dec
sub
add
pop
inc
sub
lea
pop
push
lea
push
lea
push
call
add
out
cld
pop
add
add
xchg
popf
add
pop
push
aam
jle
add
xchg
stos
add
jge
loop
add
add
mov
add
add
iret
add
jecxz
add
add
lock
mov
xchg
ljmp
pop
pushl
push
push
push
push
push
push
push
call
add
gs
bound
add
in
jle
enter
movl
int3
add
addr16
mov
mov
les
cmc
fdivr
mov
xlat
add
stos
imul
enter
add
mov
scas
mov
xchg
add
mov
int3
test
in
call
call
push
push
shl
dec
add
add
push
push
pop
add
xor
ror
sub
add
sub
dec
sub
dec
sub
pop
dec
rol
ror
pop
push
add
pop
pushl
push
inc
pop
call
push
push
not
push
or
not
add
sub
rol
rol
sub
add
not
shr
lea
pop
dec
inc
sub
pop
push
push
lea
not
xor
push
sub
add
shr
lea
sub
pop
sub
sub
ror
pop
push
sub
xor
pop
call
push
push
call
pop
add
xchg
add
add
lods
lret
xchg
add
add
movsb
imul
add
cld
data16
loop
add
add
in
popf
xorl
scas
add
push
add
pop
pop
push
ror
sub
inc
pop
dec
jne
push
add
sub
lea
pop
call
mov
push
shr
pop
lea
push
push
rol
add
push
or
inc
add
sub
sub
dec
sub
xor
pop
sub
pop
push
add
add
pop
pushl
call
push
not
add
pop
push
call
push
push
xor
ror
add
shl
push
or
not
add
not
sub
shr
not
ror
not
pop
xor
xor
pop
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
test
mov
lret
add
stc
add
cmpsb
jno
mov
data16
mov
mov
jnp
add
fdivl
mov
scas
mov
add
add
int
test
mov
testl
or
pop
call
push
rol
pop
call
mov
push
add
sub
ror
pop
lea
push
push
add
sub
add
push
or
not
add
add
sub
sub
sub
ror
dec
pop
pop
push
add
pop
pushl
push
push
call
add
cmc
lret
mov
add
add
add
add
add
jne
mov
cli
add
add
popa
pushf
push
push
mov
popf
mov
add
add
add
add
je
add
mov
fadd
sub
pop
call
push
add
pop
lea
push
dec
sub
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
popl
scas
add
mov
ljmp
push
mov
test
pop
add
lcall
loope
filds
mov
add
add
mov
in
in
lcall
add
push
push
call
add
test
add
add
jbe
push
scas
jne
push
xchg
mov
mov
mov
out
add
add
testl
nop
pop
cmc
add
int
movl
add
popf
mov
push
add
add
mov
add
data16
stos
out
scas
movsl
pop
aam
gs
roll
lcall
jne
push
push
lea
push
xor
add
xor
sub
sub
lea
ror
pop
sub
pop
push
add
inc
xor
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
ljmp
notb
mov
jmp
xchg
add
shr
xchg
add
lahf
add
add
std
fwait
add
add
je
mov
add
push
xchg
sub
pop
call
push
push
shr
push
or
not
add
ror
sub
dec
rol
pop
sub
ror
ror
pop
push
push
lea
push
push
lea
push
call
and
xchg
add
add
test
add
jae
add
outsl
mov
roll
push
add
add
add
leave
add
fmulp
mov
lahf
out
test
add
add
mov
addl
movl
hlt
xchg
jae
sub
pop
pushl
push
sub
add
pop
call
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
pop
lret
add
pop
imul
add
add
add
add
addl
add
ljmp
int
stc
push
mov
js
out
movsl
pusha
ror
sub
pop
push
call
push
push
add
lea
inc
ror
push
or
not
add
dec
add
xor
sub
add
inc
pop
lea
pop
push
push
push
lea
push
push
lea
push
call
add
or
je
call
add
idivb
jp
add
add
leave
jo
jl
lods
icebp
add
xlat
xchg
add
add
sub
pop
pushl
push
push
push
push
call
xchg
pop
fsubr
add
push
mov
out
add
stos
jmp
test
add
mov
lret
add
loope
xchg
add
add
hlt
push
test
add
add
jb
scas
jmp
pushf
in
ljmp
adc
add
rclb
incb
push
add
pop
pushl
mov
push
ror
dec
lea
xor
pop
jmp
push
push
rol
not
sub
push
or
inc
add
dec
sub
sub
pop
dec
pop
push
lea
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
add
jnp
icebp
add
ljmp
add
add
add
iret
add
add
add
push
in
add
sar
pop
add
mov
hlt
mov
fbstp
mov
in
fdivr
lcall
jne
call
push
ror
rol
dec
pop
push
push
xor
pop
call
push
push
push
or
inc
add
inc
inc
sub
inc
add
shr
pop
dec
rol
pop
push
push
lea
push
lea
push
push
push
call
push
popa
in
add
test
nop
add
add
add
cwtl
jl
stos
add
add
mov
push
test
add
sarb
jae
sub
pop
pushl
call
push
push
lea
push
lea
push
lea
push
push
push
call
mov
add
ja
add
lock
add
pusha
hlt
add
fiaddl
add
push
arpl
test
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
lret
jno
jecxz
add
add
add
test
pop
push
add
lret
lcall
add
addl
fcompl
push
push
lea
push
call
jle
add
add
fildl
lea
add
scas
aad
fcomps
add
faddl
mov
aam
mov
icebp
pop
mov
sarl
in
jle
add
add
sub
pop
add
pop
push
push
push
push
call
add
loope
add
test
mov
cmpsb
addb
mov
add
mov
add
add
filds
add
xchg
mov
mov
add
popl
add
add
movsb
add
rolb
lcall
push
push
push
push
lea
push
lea
push
call
testl
js
add
xchg
icebp
xchg
add
xchg
fidivrs
add
loope
add
jne
push
mov
test
scas
addb
loope
out
add
shll
mov
in
call
pop
xor
push
rol
add
pop
inc
ret
push
push
lea
push
push
push
push
lea
push
push
push
call
add
arpl
mov
add
jecxz
fimuls
add
mov
add
ja
test
cmpsb
add
add
push
add
cmpsl
push
enter
test
add
lcall
push
push
lea
push
lea
push
call
add
imul
movb
add
add
movsl
icebp
add
fiaddl
push
add
out
mov
add
add
icebp
mulb
push
movsb
mov
addb
sub
pop
ret
push
push
lea
push
push
push
lea
push
call
iret
add
rorl
test
pusha
add
jmp
mov
mov
js
stos
add
xchg
lods
push
and
std
fs
stos
xchg
leave
iret
fadds
add
enter
in
lcall
in
cmpl
jne
push
push
call
pop
scas
add
mov
fsts
add
add
add
add
je
add
pop
scas
mov
add
add
pop
jp
jae
add
jnp
add
add
add
add
loope
add
add
out
mov
aad
add
cld
add
lcall
inc
and
push
sub
not
add
pop
jmp
push
rol
pop
mov
push
add
inc
pop
and
push
push
lea
push
push
push
call
add
add
stos
mov
add
add
mov
pop
xchg
pop
mov
out
sub
pop
xor
push
lea
pop
xor
add
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
lret
add
movsb
mov
movl
add
add
test
roll
lcall
add
add
mov
mov
outsl
add
jo
sar
add
mov
push
lods
mov
push
add
scas
std
imul
mov
fcomps
dec
call
iret
sub
stc
add
pop
dec
sub
push
push
lea
push
lea
push
push
push
lea
push
call
faddl
add
xchg
lds
ret
fadds
add
add
arpl
push
push
add
mov
xchg
js
xchg
add
add
mov
add
filds
mov
jns
fsubs
stos
mov
add
pop
add
roll
mov
fstpt
in
in
lcall
scas
add
add
push
xor
xor
pop
pushl
push
sub
add
shr
shl
pop
pop
push
inc
xor
lea
pop
sub
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
cmc
add
mov
insb
jns
add
add
shlb
add
lahf
add
mov
mov
add
add
add
js
stos
movsb
add
les
jnp
push
add
mov
pop
rolb
push
add
add
add
push
enter
sub
pop
cmp
jne
push
push
lea
push
push
push
lea
push
push
lea
push
call
nop
add
push
andb
subb
add
iret
in
add
add
jl
fcmovbe
add
sub
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
call
aad
fistpl
pop
jae
out
loopne
pop
add
lds
lret
mov
fbstp
icebp
add
add
lods
test
add
popa
movsl
add
add
mov
outsl
add
in
add
scas
add
xchg
stos
mov
add
add
test
add
mov
add
jge
push
add
jle
in
in
in
lcall
dec
cmp
push
push
call
stos
lcall
add
xchg
add
int
add
loop
int3
mov
add
mov
add
add
ja
add
pop
iret
test
xorb
add
add
push
jecxz
add
lea
mov
add
add
stc
shll
sub
pop
sub
push
push
push
call
into
add
pop
arpl
add
imul
cmpsl
jo
mov
add
popa
jmp
loopne
movsl
imul
add
jmp
push
add
jmp
out
add
push
add
lock
jb
fmulp
xchg
add
testb
add
add
pop
test
jae
add
movsb
stc
pop
les
add
hlt
lcall
or
jmp
lahf
das
push
lea
push
push
call
add
mov
int3
out
jl
mov
add
cmpsb
stc
add
cli
add
cltd
add
fadds
add
enter
push
push
call
cltd
int3
add
add
stos
cli
cli
ret
add
addl
in
in
stos
cli
add
in
add
ja
add
add
add
add
pop
add
add
data16
mov
push
hlt
outsl
push
add
cltd
add
sub
pop
sub
pushl
push
xor
shl
shr
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
addl
fwait
add
lret
nop
mov
cld
xchg
lds
testb
jle
add
lds
loope
lods
add
add
jns
cmpsl
add
add
jb
lcall
add
std
roll
in
fdivr
lcall
jmp
lods
and
rcrl
loope
incl
add
add
lret
push
sti
subb
js
push
push
push
push
lea
push
call
add
add
aam
stos
add
add
mov
add
mov
ja
add
add
push
add
add
mov
mov
xchg
add
lret
push
add
out
pop
shrl
int
add
lcall
stc
sbb
test
push
push
push
push
push
push
call
add
add
add
add
pop
add
testl
fmulp
cmpsb
xchg
add
sub
add
scas
cwtl
test
mov
add
mov
nop
sub
pop
ret
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
mov
cmpb
add
nop
mov
loope
aad
add
clc
jbe
xchg
jge
stos
iret
adcb
jno
add
add
lcall
mov
push
inc
shl
ror
shr
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
push
call
nop
mov
add
add
add
shl
add
loopne
add
jns
popl
rcr
push
faddl
sub
pop
push
push
push
lea
push
lea
push
push
push
call
data16
stos
addl
popf
popa
rcrl
add
add
in
js
cwtl
pusha
mov
mov
xchg
jecxz
repnz
add
mov
jp
xchg
bound
jb
add
leave
sub
pop
push
push
push
xor
xor
add
pop
push
push
push
lea
push
push
push
call
add
testb
add
add
out
dec
mov
test
mov
fcoms
rolb
out
jge
std
add
in
pop
push
push
sub
pop
mov
lea
push
pop
sub
mov
push
push
push
call
add
repnz
add
enter
lahf
idivl
lret
scas
add
jbe
bnd
bound
addb
outsl
add
add
into
loopne
mov
add
rcrl
mov
mov
add
sbb
nop
add
lods
cltd
add
sub
pop
shr
add
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
in
mov
add
add
loop
xchg
xchg
jne
pop
test
add
cli
mov
jnp
js
fdivl
call
std
add
mov
lcall
fwait
addb
add
pop
or
xlat
lea
push
lea
push
push
push
lea
push
call
movb
add
mov
mov
xchg
add
push
call
xchg
add
mov
jne
mov
push
add
push
rolb
in
in
lcall
jnp
push
push
lea
push
call
mov
mov
out
cmpsl
rcl
mov
add
xchg
jae
jmp
add
add
xchg
mov
scas
jae
nop
add
repnz
add
add
out
arpl
push
jecxz
add
lret
lock
add
add
add
add
hlt
lcall
jge
xor
push
rol
pop
mov
push
push
push
lea
push
push
call
jle
add
add
jbe
add
test
add
push
add
mov
insb
jbe
add
mov
add
out
add
xchg
jns
movsl
mov
add
add
add
add
filds
jae
in
add
jle
in
in
lcall
loopne
push
push
push
push
lea
push
push
push
push
push
lea
push
call
int
add
add
mov
ffreep
scas
mov
add
nop
jp
mov
lds
scas
cmc
mov
mov
nop
add
mov
movsl
mov
mov
repnz
iret
mov
add
jae
add
ret
add
add
popf
lahf
aam
add
pop
rol
push
dec
pop
rol
xor
push
push
lea
push
push
push
push
call
add
add
add
add
popf
mov
push
roll
add
add
xchg
mov
add
sub
cmc
int3
scas
mov
push
mov
repnz
add
add
nop
aad
add
sahf
cltd
stc
add
add
add
add
roll
test
add
lcall
cmpb
jne
push
push
push
push
call
call
les
scas
mov
clc
mov
mov
in
push
pop
lods
add
add
stc
test
jecxz
push
scas
lahf
add
add
test
add
iret
add
pop
jp
mov
out
add
pop
cwtl
movsl
add
mov
add
inc
pop
ss
push
not
lea
sub
pop
cmp
je
push
push
push
push
push
push
push
push
call
add
mov
add
movsl
lcall
lret
jnp
add
movsl
jge
gs
jge
mov
les
in
filds
add
jmp
add
rolb
adcl
pusha
push
mov
push
test
filds
add
add
add
add
add
sbbl
ret
adc
push
lea
push
push
push
push
push
push
push
lea
push
call
testl
add
add
insb
add
add
jl
lahf
repnz
add
enter
xchg
add
mov
mov
popf
add
mov
mov
mov
pusha
in
incb
lcall
jnp
add
test
push
push
lea
push
call
scas
lods
scas
push
lods
add
sahf
add
add
fidivrs
add
add
mov
imul
lods
add
add
andb
xchg
movsb
cli
les
jge
add
std
push
imull
add
fisubrs
add
add
add
push
sub
pop
xor
pop
push
push
push
push
lea
push
call
add
jge
fcmovne
add
lock
loop
add
xchg
add
add
add
scas
cli
cmpsb
mov
pop
pop
push
push
lea
push
push
push
push
push
call
add
add
js
add
enter
imul
xchg
and
pusha
je
std
rolb
mov
add
enter
jl
fildll
std
addr16
add
add
cli
jbe
add
enter
add
add
pop
pop
push
not
ror
shl
pop
pop
push
sub
pop
leave
push
sub
pop
ret
mov
push
dec
add
pop
add
push
dec
xor
shr
lea
pop
mov
test
push
push
push
push
push
call
fidivrl
jmp
fisubrl
fldl
leave
andb
add
les
add
add
add
add
popf
hlt
clc
add
lcall
push
pop
call
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
jae
out
shrl
insb
je
add
add
sahf
add
jmp
scas
jnp
stos
add
out
mov
add
lods
add
mov
insb
lahf
in
addb
push
add
add
jnp
add
add
fiaddl
lcall
xor
push
dec
rol
pop
pop
pop
push
shl
pop
pop
push
push
call
fadds
insb
xchg
outsl
mov
add
hlt
add
xchg
add
mov
rcrl
mov
lret
neg
cmpsb
hlt
mov
mov
fwait
add
jge
sahf
add
sub
pop
pop
push
add
pop
pop
push
xor
shr
pop
leave
push
sub
ror
xor
pop
ret
push
push
push
push
push
push
push
push
push
push
call
jmp
aam
add
add
lret
jle
mov
mov
outsl
mov
add
out
std
jmp
add
add
add
pusha
sbbl
add
pop
iret
testl
add
add
add
pop
add
fdivr
lcall
in
add
push
push
call
addb
lods
rol
in
call
push
add
lea
xlat
add
jnp
add
addr16
mov
movsl
add
mov
out
add
movsb
add
jl
add
enter
mov
add
add
push
push
add
add
sub
xor
pop
push
push
pop
push
push
dec
lea
pop
mov
push
push
push
push
push
lea
push
call
push
rolb
push
add
fiaddl
jl
pop
add
out
sahf
out
sahf
add
les
jp
cld
imull
mov
jmp
in
in
pop
pop
push
ror
rol
add
shl
pop
lea
push
push
push
push
push
call
add
jns
mov
jae
mov
std
add
in
mov
cld
sti
add
add
lea
add
mov
fcmove
add
push
in
pop
sub
push
push
push
push
push
push
call
scas
add
add
add
roll
add
add
add
add
add
repnz
add
icebp
jns
xchg
add
cli
jnp
pushf
pop
lahf
mov
out
add
or
mov
add
leave
add
adc
ljmp
fimull
xlat
call
fnsetpm(287
sbb
mov
cmpl
mov
add
add
add
mov
cli
lds
sub
pop
add
push
add
inc
pop
pushl
push
shr
shr
pop
popl
push
push
push
call
jo
push
fs
add
jae
add
popf
roll
popa
bound
filds
mov
out
mov
lret
rcrl
add
add
add
add
mov
add
shl
in
add
add
mov
out
stos
add
imul
add
in
hlt
lcall
jnp
push
lea
push
lea
push
push
lea
push
lea
push
push
call
xchg
add
add
add
add
sbbb
mov
add
add
stc
add
add
cltd
jl
add
roll
add
add
sub
pop
add
xor
push
add
lea
pop
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
out
loop
mov
add
les
testl
repnz
mov
mov
mov
lret
in
fdivr
lcall
adc
rcll
pop
xor
push
add
add
shr
add
pop
rol
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
add
jmp
add
add
mov
cwtl
add
ret
add
add
pop
add
repnz
cld
pop
lock
add
sub
pop
nop
push
push
push
push
call
add
icebp
fcoml
add
xchg
test
add
add
push
add
jb
jb
in
popf
stos
test
mov
orl
outsl
xchg
js
insb
mov
add
imul
mulb
xchg
pop
addl
sub
pop
nop
push
push
push
push
push
push
call
scas
mov
pop
add
cmc
fs
add
icebp
sar
movl
add
mov
add
into
imul
fiadds
stc
mov
mov
add
mov
add
add
int3
xchg
add
add
add
mov
fwait
sub
pop
xor
push
shr
pop
nop
push
lea
push
push
push
lea
push
call
add
add
add
mov
add
add
loope
nop
add
add
cmpsb
mov
mov
pop
push
add
add
pop
add
add
add
gs
nop
aam
lock
jmp
lock
loop
shlb
in
lcall
inc
push
push
push
lea
push
call
nop
cmc
in
add
mov
hlt
add
roll
out
add
xchg
stc
add
iret
jne
mov
add
xchg
xchg
enter
pop
add
add
rcll
xchg
cli
add
add
add
mov
test
jle
add
imul
lcall
lock
nop
push
push
lea
push
push
lea
push
lea
push
push
push
call
arpl
andl
cmpsl
add
repnz
lcall
test
add
mov
call
lcall
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
outsl
add
pop
ret
add
repnz
push
xchg
mov
jae
add
add
aad
add
mov
add
stc
fwait
add
cmp
jne
add
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
int3
add
add
popa
jmp
out
cmc
xchg
pop
in
outsl
lret
add
add
add
adcb
clc
jmp
mov
movsl
mov
sub
pop
nop
nop
push
dec
pop
cmp
je
push
not
add
pop
nop
push
lea
push
push
push
push
push
push
push
push
call
push
mov
mov
push
testl
mov
lret
je
test
sti
add
mov
in
fdivr
lcall
inc
push
dec
rol
inc
pop
nop
nop
push
lea
push
call
lods
iret
add
add
add
jmp
cmpsl
jmp
leave
xchg
lcall
scas
jl
sahf
sar
out
pop
add
fidivrl
sub
pop
cmp
jb
push
lea
push
push
lea
push
lea
push
call
jl
add
call
add
imul
add
iret
movsb
imul
add
jp
add
add
sahf
add
imul
div
in
lret
cwtl
jle
int
pop
add
add
fadds
xchg
add
add
add
pop
addl
jl
add
in
in
pop
xor
jmp
push
add
shr
pop
mov
push
sub
pop
add
push
push
push
push
push
call
les
cmpsb
fcmove
call
add
add
ljmp
lret
mov
test
stc
add
add
add
cli
lea
je
fstpt
test
mov
jb
inc
sbb
dec
pop
add
push
inc
pop
mov
xor
push
add
add
dec
sub
pop
xor
shl
push
lea
add
pop
xor
push
add
pop
shl
push
lea
push
push
push
push
push
push
push
push
push
call
add
jge
add
add
add
add
mov
add
js
scas
lods
add
add
add
scas
loope
push
lds
stos
add
cli
out
add
push
int3
mov
movsl
add
push
mulb
in
fcomps
dec
nop
add
push
push
call
js
loop
jge
popl
pop
add
jmp
int3
cmpsl
xchg
mov
jns
adcb
out
fwait
add
mov
ljmp
add
push
fs
mov
jns
add
jne
sub
pop
shl
push
push
push
lea
push
call
cli
add
les
cli
xchg
xlat
add
cwtl
add
add
scas
arpl
ja
jo
jecxz
mov
lock
mov
pop
add
jno
add
loope
in
mov
fiadds
add
lcall
or
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
push
add
xchg
aad
mov
nop
int
push
add
mov
mov
leave
add
mov
cmc
add
push
add
add
rcll
xor
pop
add
push
push
lea
push
push
push
lea
push
push
push
push
call
loopne
scas
add
xchg
jno
add
add
add
cli
mov
add
add
add
mov
add
stos
add
add
mov
pop
in
add
mov
pop
add
mov
data16
into
mov
xlat
add
mov
hlt
sub
pop
pop
push
add
pop
pop
push
push
push
push
push
push
push
lea
push
call
add
add
roll
popa
sahf
mov
hlt
add
add
add
mov
loop
add
add
cmc
pop
lea
jmp
push
enter
add
pop
mov
mov
add
imul
out
push
cli
lret
fldl
sub
pop
pop
push
shr
sub
sub
pop
pop
push
lea
push
push
push
push
lea
push
push
call
jae
filds
add
xorb
shll
leave
add
mov
incb
jne
lods
mov
lods
fildll
add
add
push
dec
add
add
lea
pop
ret
push
push
rol
pop
mov
push
not
shr
shl
pop
push
push
push
push
lea
push
push
push
call
in
iret
je
pop
mov
imul
push
pop
stos
loopne
lods
test
fdivl
clc
popa
add
add
test
add
sub
pop
push
push
pop
push
push
not
sub
add
pop
push
mov
push
push
push
push
call
jae
iret
cmp
cmpsb
mov
test
xchg
test
test
cmc
test
mov
in
adcl
push
movb
jp
add
in
lock
lcall
adc
lock
pop
test
je
mov
push
push
call
xlat
xchg
add
add
add
add
add
add
fucom
stos
add
pop
int3
mov
stos
add
mov
roll
pushf
pusha
sti
add
lds
add
pop
push
push
rorl
add
out
test
sub
pop
test
je
push
add
add
pop
mov
push
add
pop
mov
mov
push
sub
xor
add
pop
inc
push
xor
pop
cmp
je
push
shl
rol
pop
test
je
push
add
dec
sub
ror
pop
mov
push
push
call
out
rcrl
in
add
add
movsl
add
add
lret
out
fcmovnu
add
add
pop
add
xchg
add
roll
cmpsb
add
rcll
push
add
mov
sub
pop
inc
push
sub
lea
sub
pop
cmp
je
test
jne
push
not
pop
xor
pop
push
push
push
push
push
push
push
push
push
push
call
add
mov
add
mov
lret
add
std
add
push
add
hlt
mov
je
push
mov
imul
fadds
jb
jl
pop
clc
stos
aam
outsl
into
add
in
loope
nop
data16
mov
add
sub
pop
pop
push
sub
add
pop
pop
push
shl
lea
sub
pop
pop
leave
push
add
lea
dec
ror
pop
ret
push
push
lea
push
push
push
push
push
call
out
add
xchg
out
add
add
lea
add
scas
cwtl
lock
cwtl
mov
mov
add
add
add
pop
add
cld
mov
in
add
test
test
out
add
mov
add
add
lcall
push
inc
push
push
lea
push
call
add
shlb
mov
lods
add
mov
mov
les
add
data16
incb
mov
mov
mov
in
hlt
pop
cmp
jne
lea
push
shl
not
pop
mov
test
je
push
push
push
lea
push
push
lea
push
push
call
add
xchg
movl
cmpsl
mov
insb
fiadds
mov
add
add
add
popf
roll
sub
pop
mov
push
push
push
lea
push
lea
push
push
call
add
shlb
add
add
enter
add
xchg
mov
add
mov
add
notb
sub
xchg
add
add
jno
mov
icebp
xchg
fiaddl
test
add
cli
add
mov
out
cltd
add
add
leave
jge
out
jb
mov
in
call
cmp
jne
push
shr
rol
pop
mov
push
pop
test
je
push
lea
push
push
push
push
push
push
push
call
enter
sarb
add
push
add
add
test
add
push
mov
lcall
add
addr16
add
push
in
add
stos
lret
imul
sub
pop
mov
push
inc
pop
add
cmp
je
push
ror
add
inc
pop
jmp
push
lea
push
push
push
push
push
push
push
call
add
add
xchg
add
add
filds
add
clc
add
add
add
add
add
xchg
jae
add
mov
add
sarl
mov
mov
mov
in
mov
in
loopne
xor
push
rol
ror
not
pop
pop
push
sub
pop
pop
push
lea
ror
pop
pop
pop
push
sub
shl
shr
pop
leave
push
sub
pop
ret
lea
push
lea
pop
pop
pop
push
ror
not
not
pop
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
leave
bound
jns
add
add
mov
add
out
nop
mov
testl
std
mov
add
imul
pop
add
add
lcall
leave
push
push
lea
push
push
push
lea
push
push
push
call
pop
scas
add
leave
aam
mov
jl
pop
pop
jbe
popa
jl
mov
add
lods
add
in
add
pop
pushf
mov
insb
add
fdivrl
mov
test
xchg
add
push
add
add
loope
mov
lret
lahf
xlat
lods
pop
xchg
push
repnz
or
push
lea
push
lea
push
push
lea
push
lea
push
push
call
ficomps
cmpl
pushf
gs
iret
push
test
repnz
fcoms
add
add
mov
xchg
lcall
mov
add
push
add
loop
xchg
in
popf
fiadds
stos
fsts
addr16
xchg
movsb
add
fcmovnu
add
pushf
add
lcall
push
dec
xor
pop
pop
pop
push
lea
push
push
lea
push
lea
push
call
add
std
add
add
add
add
call
add
lea
in
mov
push
stos
add
popl
mov
mov
mov
lods
scas
test
add
add
add
pop
pop
push
sub
pop
pop
leave
push
lea
push
lea
push
push
push
push
push
push
push
call
rorb
add
add
add
add
insb
scas
in
add
insb
cld
movsb
add
pop
in
xchg
jo
lret
lods
ljmp
popa
add
mov
lock
add
cmc
add
mov
add
xchg
add
add
cwtl
call
jp
lods
testl
add
or
lcall
lcall
icebp
into
mov
mov
xchg
decb
out
std
xchg
xor
jmp
rorl
shrl
mov
inc
lret
xor
pusha
jb
cli
add
sbb
or
int3
nop
sub
lahf
jne
bound
xchg
movsb
stos
fmull
push
mov
jg
mov
lods
mov
repz
aam
mov
and
mov
aaa
les
push
leave
loop
sbb
mov
outsl
xor
pop
mov
push
xchg
xlat
imul
insl
dec
iret
push
xor
dec
xchg
xor
frstor
xchg
cmp
jge
mov
out
ffree
mov
in
mov
mov
jp
cmp
insl
dec
dec
push
jge
mov
je
rcrb
pop
push
dec
rcrl
jnp
sub
stc
dec
clc
popa
mov
pushf
icebp
mov
add
add
lcall
jae
push
pusha
jnp
shlb
in
push
clc
fldt
sbb
or
ret
in
pusha
and
test
rorl
jo
nop
push
mov
mov
das
sub
fcomps
dec
jbe
pop
dec
je
cld
adc
cmp
es
stos
adc
xor
add
loope
in
insb
sbb
cwtl
fwait
and
pusha
cli
imul
pusha
outsl
testb
imul
mov
imul
jb
cmpsl
cmp
movsl
inc
push
test
insb
mov
cmpl
cmpsb
test
xchg
push
js
iret
jp
in
es
xchg
jg
es
pop
es
mov
insl
jne
hlt
xchg
inc
sbb
and
mov
std
adc
lret
xorb
xor
arpl
and
cmc
dec
and
pop
shl
aas
loop
test
popa
mov
je
sub
outsb
int
pop
rorl
sub
inc
push
in
out
push
cmc
lahf
out
push
jmp
gs
popf
sbb
lods
rcr
mov
aam
add
shlb
cmc
call
mov
in
push
sbb
gs
xor
push
clc
dec
cmp
cmp
test
pop
scas
push
rorb
lret
ss
hlt
sbb
sbb
inc
xchg
dec
and
inc
cmp
inc
add
sbb
mov
cmpsb
cs
lcall
pop
aas
cmpsl
lahf
jno
mov
clc
sbb
shrb
xor
std
jne
cmpsb
xor
aas
test
jle
insl
outsb
pop
call
je
push
nop
xor
scas
repnz
fidivrs
add
lods
sbb
imul
fistl
loope
repnz
dec
divl
push
dec
js
fxam
in
gs
push
add
into
test
mov
orb
into
push
add
push
mov
inc
cltd
fisubs
mov
shl
mov
sub
adc
je
pop
fstpl
and
pop
and
cmp
and
xor
test
push
movsb
enter
aas
or
jge
stc
stos
popa
cmp
bound
sbbb
les
int
fmull
cwtl
andl
popf
xor
or
dec
inc
ret
shr
icebp
sub
gs
call
rcrb
mov
mov
pop
leave
or
rorb
mov
lret
sbb
das
je
xchg
or
cmp
js
sub
jg
ds
xchg
jb
divl
mov
xchg
mov
mov
push
popa
add
jg
or
adc
inc
into
aaa
push
mov
xchg
or
mov
in
and
dec
enter
jae
jl
ja
js
aad
inc
mov
add
lock
out
push
and
into
loope
pop
pop
xor
push
loope
arpl
xchg
add
mov
and
pop
xor
scas
jg
mov
stos
pop
insl
xchg
into
fsubs
xchg
cmp
jno
sbb
repnz
xchg
add
add
and
lret
cwtl
push
gs
fdiv
mov
jno
xchg
mov
adc
mov
test
mov
and
xor
jns
mov
push
ja
cli
sbb
sarl
cmp
jmp
jecxz
dec
add
stos
push
hlt
xor
movsl
push
int
mov
xchg
arpl
xor
sahf
push
dec
lock
and
mov
outsl
push
jecxz
mov
xchg
leave
xlat
push
pop
repnz
pop
enter
mov
ljmp
notb
into
jnp
or
imul
sub
es
adc
sub
pop
cli
test
adc
gs
out
lods
cmpsl
fs
movsb
lcall
and
dec
int3
sbb
cltd
lret
sar
xchg
and
stc
cmp
outsl
mov
pop
sub
ret
xchg
daa
push
xor
or
cmp
push
lods
ret
js
pop
cmpsl
lea
adc
rcr
xchg
aaa
clc
cli
inc
iret
stos
negl
xor
or
les
pop
push
das
insb
and
gs
push
dec
fildl
sbb
enter
sar
mov
decb
dec
and
fcmove
es
test
pop
sti
fstl
or
xchg
imull
adc
mov
mov
and
hlt
dec
dec
jae
stc
dec
test
ret
cmp
jle
cmp
fsub
ret
or
fcomi
lahf
nop
lock
jbe
adc
inc
pop
lds
inc
test
andb
jg
cmp
xor
jo
scas
inc
add
gs
mov
push
cmp
pop
icebp
mov
cwtl
popa
mov
clc
iret
mov
pop
mov
push
rorb
mov
inc
push
int
jge
test
fisubl
sub
inc
or
mov
push
mov
inc
ret
mov
fimull
dec
andl
or
xchg
sarb
xchg
sub
out
cmpsl
push
push
xchg
pushl
mov
add
push
stc
cli
add
xlat
sbb
mov
in
daa
cmpsb
ret
xor
ja
inc
and
add
pusha
mov
or
aad
xor
add
adc
popf
or
fs
out
xlat
std
clc
sub
clc
test
scas
in
rorl
xchg
mov
std
test
scas
pop
add
dec
je
jmp
rcrb
lds
adc
sahf
and
out
xorl
and
scas
loopw
or
inc
pop
mov
stos
fldz
jne
push
push
lcall
mov
push
pop
mov
popf
cmp
insb
pop
add
out
push
out
or
push
inc
fnstenv
jg
les
out
cmpsb
neg
loopne
fchs
mov
jo
cltd
lret
pop
jne
push
jb
or
jb
dec
xchg
popa
inc
cltd
shll
fs
and
and
sub
xor
test
ljmp
mov
xor
jae
mov
insb
xlat
inc
push
fdivp
mov
and
dec
push
ljmp
test
hlt
imul
adc
mov
xchg
into
mov
xchg
cmp
mov
xchg
jbe
sbb
je
adc
xchg
ret
push
test
subb
enter
mov
dec
inc
and
out
pop
arpl
and
fdivrs
repz
fiadds
test
mov
and
mov
dec
aad
push
rcll
xor
cs
jge
jecxz
stos
insb
cmc
mov
xor
xchg
negl
mov
movl
xchg
loope
call
movsb
mov
out
mov
sub
cmpsb
push
xchg
ds
xchg
imul
out
dec
data16
or
out
fs
stos
sub
mov
mov
pushf
bound
push
out
inc
aaa
mov
sti
mov
test
mov
dec
xchg
or
stos
stc
mov
or
inc
jnp,pn
sbb
stc
loope
sbb
adc
inc
out
lret
xchg
fwait
sbbb
sub
mov
popa
jo
in
scas
mov
jo
test
cmp
mov
sbb
adc
pop
or
dec
xchg
cmp
pop
sbbl
inc
push
cmp
mov
std
into
inc
jbe
jo
sbb
push
ret
xlat
fisttpll
stos
lods
inc
xor
cmp
scas
push
sbb
ret
pop
mov
jbe
dec
test
fadds
mov
push
addb
dec
popf
cmp
ds
mov
jno
test
cmp
pop
rclb
jbe
and
and
fidivrs
jae
cmp
repz
inc
stos
pop
ret
shrl
ret
imulb
xor
push
incb
fistpll
add
pop
jmp
jo
out
inc
fmull
jmp
js
jb
push
or
adc
push
push
outsb
mov
out
movsl
jge
adc
hlt
and
ret
insl
or
pop
xchg
add
mov
mov
mov
xor
push
movsl
jl
mov
dec
mov
mov
cmpl
fimull
stos
inc
dec
dec
inc
sbb
mov
lds
sub
ljmp
mov
add
orb
rcr
mov
movsl
aam
lcall
mov
std
jmp
cmpsb
add
mov
stos
adc
into
dec
in
pop
inc
fisttpll
dec
cmpsb
add
psllw
fldenv
repnz
push
in
and
push
fidivs
mov
aam
dec
out
addr16
pop
test
imul
pop
mov
jmp
cmp
cli
out
insl
lea
push
mov
inc
pop
push
call
cwtl
and
adc
cltd
cmpsb
and
jl
pop
pop
jno
pop
movsb
jae
not
jbe
fwait
stc
xor
rcr
mov
pop
push
sub
test
enter
xchg
sbb
test
push
out
xchg
filds
inc
das
mov
mov
nop
sarb
iret
dec
in
dec
mov
cmp
fcmovnb
mov
push
xor
or
inc
sbb
pop
insb
fstpl
xchg
mov
das
pop
imul
fstl
inc
iret
mov
arpl
outsl
dec
sub
push
loope
data16
ljmpw
add
jns
in
test
int3
bound
nop
je
inc
pop
std
cmp
mov
addr16
adc
jle
movsl
ljmp
ja
cmp
popf
aas
push
mov
cmc
hlt
xor
cmp
push
clc
sbb
aas
pushf
and
lret
cltd
pop
fwait
mov
xor
cltd
push
fldenv
sbb
js
outsl
insb
ljmp
imulb
pushf
std
jbe
dec
shrl
dec
push
movsb
stos
jne
pop
cmpsl
pop
and
and
jle
mov
fimuls
into
dec
add
mov
cmp
iret
push
add
test
push
popa
shlb
add
es
pop
test
fnstcw
add
sbb
push
push
adc
mov
int
and
jnp
aaa
cltd
in
sbb
adc
lret
cmp
dec
sti
stos
js
push
pop
mov
add
xlat
inc
popa
and
sahf
mov
sbb
pop
jb
fidivrs
lahf
cld
scas
shl
xor
fdivr
sub
in
stc
xor
scas
daa
xor
repnz
sub
dec
fnstcw
cs
je
add
mov
loope
pop
cmp
ret
add
mov
stos
xlat
jne
cmp
add
lods
adc
pusha
push
or
pop
popf
push
daa
stos
adc
pop
int3
cmpsb
sbb
clc
in
adc
sbb
bound
orl
ss
or
pop
xchg
inc
xor
adc
xlat
outsl
jnp
cltd
xor
es
pop
jle
jb
add
pop
fs
ret
xor
sbb
notl
xchg
or
add
aaa
xor
fmull
cli
pushf
loope
aas
lret
stc
add
testl
mov
rorb
imul
sub
outsl
jge
pop
inc
and
mov
shrl
jle
xchg
xchg
cmp
xor
dec
pop
or
out
aaa
dec
aas
shrl
aaa
fdivl
das
movsb
inc
inc
push
loop
adc
lea
iret
lea
call
mov
fsts
xor
mov
add
mov
nop
xchg
mov
cmpsl
es
imul
test
mov
clc
add
sahf
push
aas
pusha
ja
nop
les
jbe
outsl
stc
into
xor
aam
push
enter
rorb
fadd
fildl
fistpl
xor
xor
xor
xor
cli
cli
fwait
lahf
lock
xor
scas
je
fistpl
inc
jbe
xchg
xlat
adc
mov
es
popf
push
push
arpl
cli
adc
fwait
aas
adc
mov
pop
in
pop
test
in
inc
cmpsb
push
loopne
and
inc
into
or
fwait
jg
ret
push
cmp
or
cld
mov
test
ds
and
xchg
gs
mov
or
sarb
rcrl
or
pusha
mov
sub
dec
push
ljmp
and
lcall
pop
mov
bound
stos
adc
fwait
outsb
xchg
cltd
sbb
push
cmc
mov
aad
push
dec
push
gs
pop
test
or
adc
push
pop
inc
xor
inc
scas
stos
adc
jb
outsl
dec
jmp
test
insl
cmc
ja
cltd
cs
or
xchg
and
sbb
sbb
test
xlat
dec
cmpb
xor
aad
fsub
add
mov
js
lcall
mov
daa
cmp
mov
xor
xor
pushf
test
push
xchg
imul
lods
xor
stos
or
sub
cld
sub
jbe
dec
cld
mov
pop
cmpsl
mov
xchg
mov
in
push
aaa
push
cmc
into
aas
sbb
jge
call
in
xor
xchg
xor
lods
or
ret
das
fs
cmp
sbb
ds
sbb
adc
xlat
xchg
test
xor
jo
sbbb
mov
adc
cmpsl
test
mov
xchg
ficoms
sbb
pop
mov
out
xchg
inc
mov
pop
sub
loope
or
jnp
insl
dec
inc
push
jge
xlat
mov
cmpsl
cmp
lahf
push
out
loop
xchg
jl
stos
lock
and
in
les
pusha
cmpsl
hlt
sar
and
sti
shll
adc
int
sbb
push
movsb
add
and
jle
aad
jle
jmp
jae
fnstsw
ja
pop
jb
jp
loope
int3
notb
stc
lock
mov
test
icebp
rcr
jecxz
bound
dec
lea
mov
fstps
sub
mov
jge
pushf
test
dec
fucomi
cmp
aas
or
xchg
mov
lods
jns
lahf
nop
sub
xor
dec
rclb
jmp
arpl
mov
out
fisttpl
inc
dec
out
pop
mov
lret
and
sarl
push
out
std
jae
scas
and
fldenv
sbb
es
mov
xchg
push
les
test
in
jbe
sbb
xor
out
jnp
arpl
and
popl
dec
and
jl
ret
ja
xchg
sahf
xlat
push
add
rolb
roll
jmp
lea
dec
cmp
inc
pop
test
and
mov
scas
sub
push
jecxz
add
sub
sub
les
inc
pop
push
cmp
jmp
mov
std
xor
movsb
cmp
adc
fmul
sbb
leave
lock
scas
negl
and
inc
adc
sbb
frstor
mov
adc
adc
iret
scas
xchg
cmp
pop
loop
mov
jbe
adc
jno
shr
imul
addr16
mov
jl
add
inc
lcall
out
icebp
cs
and
sahf
in
adc
pop
dec
aas
mov
push
add
addr16
push
sub
xchg
dec
mov
fstp
je
add
jecxz
sub
mov
push
iret
mov
inc
pop
push
scas
jecxz
outsl
inc
cmp
jno
adc
xor
aam
loopne
push
ljmp
inc
jne
ss
outsb
push
repnz
pop
out
mov
jle
xor
mov
push
or
les
call
inc
test
xor
popf
fisttpll
or
lret
out
dec
and
pop
jmp
and
daa
lods
sbb
ss
and
fidivl
jbe
popf
or
ljmp
jae
sbb
out
sub
movsl
pop
xchg
out
inc
nop
scas
arpl
dec
loope
mov
push
push
inc
js
add
fwait
loope
insb
mov
insl
push
xchg
pop
add
inc
nop
cld
outsl
lcall
das
lcall
in
shrl
push
cmp
and
fwait
mov
jecxz
mov
mov
dec
test
jge
fldcw
decb
jmp
gs
incl
mov
in
cmpsl
xchg
xor
les
repz
cmp
mov
in
xchg
rcr
and
movsl
in
mov
cmc
or
popa
dec
jns
dec
inc
add
divl
jecxz
or
test
sub
xchg
xor
cld
cmp
mov
fiaddl
xchg
mov
scas
dec
rcl
int
jno
aas
mov
loop
outsl
enter
setbe
jnp
and
daa
stos
bound
jo
lods
push
cmp
lea
negl
push
testl
jno
daa
mov
mov
and
mov
and
out
inc
or
mov
jno
xchg
add
clc
imul
and
nop
add
and
xorl
data16
xor
stc
mov
insb
mul
in
sub
jne
or
nop
jb
aad
sti
or
ljmp
and
jle
sbb
aad
dec
mov
les
xchg
daa
fs
scas
mov
js
xor
and
shlb
and
fisubl
insl
popf
test
dec
jg
mov
jo
jo
push
stos
cli
lret
push
cli
jb
pop
pop
push
dec
push
or
shrb
mov
push
adcb
pop
or
adc
lcall
xchg
mov
fisubl
jns
dec
mov
cmp
dec
push
rclb
outsb
push
cmp
xchg
sbb
inc
sbb
dec
stc
aam
add
subb
pop
inc
xor
mov
lods
imul
cmp
mov
pop
sub
xchg
popf
xor
inc
xor
test
andl
and
xchg
and
clc
and
mov
jg
into
jle
adc
jl
jmp
out
js
shrl
out
mov
rep
sti
xchg
cmpsb
in
imul
push
add
mov
cwtl
test
inc
xchg
xchg
test
jbe
cmp
fwait
scas
xchg
jae
loope
cltd
int3
add
xlat
xlat
popf
xor
loop
push
rclb
call
mov
sti
loop
icebp
or
movb
push
ljmp
cs
loope
pop
mov
dec
pop
mov
lahf
pop
sbb
sub
punpckldq
daa
and
fdivp
orl
bound
es
rorl
loop
push
xor
nop
fadd
xchg
cmp
adc
push
adc
xchg
mov
int3
clc
and
fistpll
test
loope
adc
popaw
repz
xor
icebp
call
pop
inc
jno
push
roll
push
or
sbb
sub
mov
xor
cmp
decl
jmp
fisttps
movsb
test
mov
cmp
imul
mov
stos
int3
and
adc
aaa
ss
mov
lret
mov
adc
jbe
gs
xor
mov
jle
adc
mov
push
scas
jae
xchg
adc
loopne
inc
and
cmp
aad
push
imul
cmp
jl
rcrl
lcall
rcrb
dec
imul
inc
cmpsb
pop
jns
mov
or
sub
movsb
jmp
into
dec
repnz
adc
inc
pushf
add
pusha
sub
int3
xchg
lods
cltd
clc
add
les
dec
jnp
inc
imul
xor
ror
in
jmp
cmpsl
push
sar
and
call
and
jmp
iret
popf
jl
or
mov
adc
aas
movl
mov
adcl
xlat
inc
xchg
lea
jo
iret
repz
add
aad
jnp
or
dec
shll
cmp
mov
daa
test
adc
sbb
push
adc
adc
nop
xchg
mov
lods
pusha
jmp
sub
pop
aas
ret
sub
add
inc
xchg
sub
loop
jge
divl
xlat
js
ror
mov
pop
imul
xchg
into
sbb
or
or
sbb
dec
lahf
int3
add
test
inc
shlb
in
ss
aam
aas
fsubl
xor
sub
push
dec
jp
add
loopne
sub
les
shll
sbb
scas
dec
xor
fdivl
std
fiaddl
aaa
dec
cwtl
push
cltd
pop
cmc
jae
out
cmp
test
nop
push
loop
dec
jmp
out
cmpsb
fiaddl
lret
xchg
ljmp
int
shlb
xor
lret
sbb
out
mov
inc
fnstenv
dec
fsubrl
jg
push
xchg
ret
adc
dec
pusha
dec
or
imull
cld
movsb
xor
mov
sarl
add
pop
ret
push
shl
mov
sbb
xor
inc
or
dec
dec
ss
lret
unpcklps
mov
cs
push
out
pop
daa
cmp
mov
loope
movsb
sub
mov
push
push
and
insb
leave
push
cmp
cli
pusha
lock
imul
sbbb
xchg
cmpsl
dec
pop
aas
add
push
mulb
pushf
in
les
mov
xchg
fcmovbe
das
imul
fwait
rclb
or
mov
jg
or
xor
pop
jmp
cld
insl
pop
mov
mov
cmp
lret
cmp
das
test
xchg
addl
stos
jmp
adc
push
jne
cmp
mov
jge
rolb
jbe
ja
jmp
inc
in
push
fisttps
cld
sbb
movsb
xor
xor
icebp
adc
aam
rcll
clc
imul
leave
fptan
inc
cwtl
fstps
bound
js
add
outsb
cltd
push
mov
test
xlat
mov
outsl
std
les
dec
popf
jne
fcmovb
and
dec
icebp
xchg
inc
add
stc
push
int
push
sti
and
lret
stos
test
cmpsb
sbbb
pushf
ss
dec
add
movsb
pusha
lds
add
enter
jb
aam
aad
movsb
es
das
outsb
sbb
out
cmp
stos
aaa
mov
fisttpl
negb
mov
jne
or
fisubrs
pop
add
inc
dec
xor
dec
divb
repnz
jbe
inc
out
pop
call
fwait
xchg
out
inc
movsb
adcb
test
sub
in
cli
fsubrl
mov
popa
ljmp
dec
add
sbb
stos
mov
out
cmp
lods
xchg
xor
addr16
inc
mov
out
pop
cmp
outsl
shl
fdivl
or
adc
sbb
push
or
std
ljmp
das
enter
cltd
mull
adc
and
cld
mov
push
ds
dec
dec
notl
iret
bound
cltd
add
jle
imul
lock
repz
scas
dec
add
repnz
enter
popa
pop
pop
add
ficoml
jno
movsl
inc
enter
jo
adc
mov
ss
stc
fs
sub
out
push
xchg
in
mov
mov
inc
pop
mov
sub
fstl
xor
data16
in
dec
add
push
jo
xor
lret
fwait
inc
ret
and
fldt
sub
mov
xchg
sbb
ficoms
in
sbb
push
and
lods
mov
jo
icebp
pop
out
cmp
jne
pusha
hlt
push
xor
faddp
sub
push
jl
push
inc
mov
and
mov
fldenv
pop
cwtl
jns
stos
call
inc
mov
mov
add
mov
mov
test
dec
add
sbb
lods
sub
xor
ret
xor
rol
xor
and
in
mov
in
loop
loop
pop
movsb
mov
addb
call
testb
pop
push
and
rcrl
and
adc
shlb
mov
pop
cwtl
xchg
dec
inc
sub
sbb
pop
add
in
push
loopne
adc
insb
mov
stos
push
nop
fs
mov
pop
mov
stos
xchg
nop
add
push
mov
dec
sub
sbb
in
aas
and
xor
fwait
cs
sub
fwait
mov
into
pop
aas
daa
inc
enter
cltd
imul
adc
cmp
stos
ss
xor
loop
or
popf
filds
push
roll
sub
pop
push
dec
dec
pop
cmp
fsincos
xchg
sarb
xor
int
jl
daa
pusha
and
lcall
sbb
sets
ljmp
jns
ljmp
fistl
scas
and
loope
out
jl
or
push
out
inc
aad
xor
mov
push
sbb
pop
xor
push
mov
clc
xchg
xchg
loope
andb
dec
xchg
lcall
mov
mov
jno
inc
pop
xchg
fidivs
cltd
adc
pop
dec
mov
mov
sub
xor
cld
movsl
and
popf
fidivs
sbb
insl
icebp
pusha
hlt
inc
pop
xor
aas
fsubl
sbb
cwtl
aam
mov
or
add
and
pushf
xchg
fnstsw
cs
aaa
push
dec
pop
andb
out
inc
mov
and
out
cmpsl
push
in
push
test
xchg
mov
cld
fcomps
in
cltd
or
mov
push
addr16
sub
notb
sbb
and
xor
cmp
out
push
aam
sub
push
or
hlt
mov
in
adcb
cmp
mov
shll
cld
sbb
xor
in
cmc
inc
sbb
nop
insl
icebp
and
jecxz
pop
and
mov
pusha
bound
rcrb
pop
in
dec
push
rorb
adc
fildl
mov
lock
pop
scas
mov
pushf
loopne
bound
mov
xchg
jno
xchg
in
mov
lock
push
sbb
jae
nop
sbb
mov
repnz
fsts
and
mov
std
loopne
inc
pop
ljmp
adc
in
addr16
popf
jb
mov
jns
and
mov
int
es
xlat
cwtl
xchg
jle
imull
push
int
jae
pop
jb
cmc
xchg
mov
ja
shll
clc
dec
pop
xchg
mov
add
fs
mov
icebp
push
cmpsl
in
int
sub
mov
push
mov
push
mov
lds
aad
add
cs
in
and
and
mov
mov
ret
out
movsb
les
jg
and
es
jae
xchg
pop
cmpsb
int
lock
pop
mulb
in
adcb
mov
imulb
or
dec
cltd
pop
pop
adc
mov
cmc
mov
ret
cld
leave
pop
pop
lret
mov
rorl
test
adc
mov
mov
adc
dec
test
mov
daa
inc
mov
adc
ds
mov
push
push
pop
lods
shufps
push
or
mov
loope
cmp
lea
mov
mov
pop
ror
pop
jne
xchg
or
add
mov
xchg
pop
dec
lods
xorl
imul
mov
jle
mov
cmp
jp
mov
dec
sbb
ss
stos
mov
fwait
mov
fdivrp
mov
adc
pop
lcall
xchg
in
xchg
adc
clc
cmpsl
mov
fdivrl
mov
xchg
mov
repnz
mov
cmp
sarl
icebp
sbb
in
xor
sbb
mov
inc
mov
mov
testl
dec
fnsave
mov
fsubl
ljmp
adc
mov
xor
popf
popf
pop
ret
push
mov
sub
cmpsl
and
mov
mov
xlat
push
jl
orb
mov
mov
ljmp
inc
and
mov
adc
sub
jl
aam
jecxz
imul
jne
in
mov
xchg
or
inc
adc
inc
pop
xchg
pop
cltd
xor
and
notl
sbb
ja
fistps
cmp
mov
movsl
in
clc
std
mov
popf
jne
mov
stc
cltd
or
data16
cmc
dec
jnp
or
xor
out
mov
movsl
movsl
jle
pop
fsubrl
mov
dec
enter
xor
outsb
ficompl
outsb
and
lock
movsb
add
clc
out
pop
in
sbb
pop
mov
mov
pop
stc
jne
jo
dec
stos
cmpsl
cmp
lds
ja
jp
dec
add
lret
push
push
mov
mov
inc
push
in
jb
int3
int
ja
js
notb
aam
push
lcall
sub
pushf
loop
inc
iret
iret
pop
rorl
mov
push
inc
xor
sub
addb
add
mov
daa
and
push
adc
ficoml
int
xchg
push
leave
and
aas
sbb
mov
lcall
lret
jbe
jl
pop
aaa
sbb
rolb
das
fisubs
xor
loop
push
iret
pusha
cltd
dec
lods
push
inc
inc
test
add
mov
ss
in
jae
cmp
push
or
cwtl
orl
push
add
and
xchg
push
lahf
cli
or
inc
ret
pop
mov
push
sub
add
cmc
jle
lds
in
dec
cmp
clc
lret
mov
cmpsb
dec
pop
shrl
test
adc
mov
or
in
mov
pop
fbstp
jmp
js
mov
push
jne
aad
int
and
sbb
pop
nop
pusha
pop
lret
jmp
adcl
addl
call
dec
xor
dec
inc
out
imull
or
sub
pushf
ffreep
les
loop
sub
xor
xor
mov
test
jmp
mov
pop
mov
inc
dec
and
cli
dec
fwait
jl
test
dec
lods
dec
dec
pop
cld
cmc
ret
jae
insb
mov
negb
mov
xchg
or
insb
sub
insl
stos
push
mov
mov
or
icebp
sbb
lret
out
jno
mov
xchg
in
mov
stos
xor
lods
xchg
inc
xor
jo
arpl
add
les
push
outsb
dec
imul
mov
call
jae
add
enter
cmp
cmc
xchg
xor
enter
clc
dec
dec
repnz
mov
adc
js
test
mov
mov
add
mov
sub
push
test
int3
repz
adc
inc
cwtl
pusha
mov
mov
insb
lock
mov
jbe
or
xor
pop
call
rol
outsb
push
pop
imul
rcrb
loopne
xor
or
dec
xlat
mov
into
iret
stc
ja
sbb
lahf
hlt
adc
push
adc
popa
leave
inc
es
mov
js
cld
fistl
push
adcl
leave
dec
das
mov
rclb
inc
push
cmpsl
fpatan
test
aaa
pop
popf
out
sbb
or
pop
scas
xchg
dec
cmp
adc
mov
int
call
sbb
call
loop
aad
sub
xor
mov
nop
mov
xor
pop
ljmp
dec
lods
mov
push
push
push
or
aaa
rcll
xor
ret
pop
test
rcl
add
push
xchg
or
inc
adc
outsl
pop
int
cmp
push
or
push
pop
lea
pop
push
dec
stc
xchg
mov
cli
aam
imul
dec
out
cs
push
mov
stos
sub
push
int3
lahf
xchg
sbb
lahf
and
push
sti
jmp
in
xor
mov
add
ljmp
ds
scas
xchg
jo
jae
fsubrp
push
mov
sbb
sahf
imul
mov
xchg
mov
icebp
stos
das
mov
aam
sbb
xor
mov
inc
sub
mov
pop
pop
dec
pop
and
cmc
dec
clc
add
and
cmp
cmp
inc
mov
lahf
cwtl
pop
xor
mov
loopne
sti
add
es
sbb
pop
xchg
sbb
adc
mov
xchg
cmp
add
cmc
mov
addr16
or
cmp
bound
or
and
cmp
imul
inc
adc
push
insb
sbb
or
pop
jp
nop
dec
cmp
jg
cmpsb
fmulp
lret
or
cs
dec
sub
stc
pop
mov
int3
stos
push
mov
and
xchg
sahf
and
test
sahf
fcom
jae
and
sbb
pop
and
cmp
cmp
add
pusha
push
mov
mov
pop
add
fcoms
or
repz
mov
inc
adc
jns
xchg
sub
sub
cld
mov
dec
push
xchg
mov
mov
or
adc
add
mov
in
xor
cs
push
add
mov
mov
cld
scas
adc
xchg
sbb
popa
mov
mov
ja
push
test
mov
sbb
leave
ror
or
or
add
fisubrs
cmp
mov
inc
cltd
ret
jp
sub
popa
jecxz
sub
lock
cmp
inc
xchg
mov
adc
sbb
pop
pop
inc
jb
es
ret
iret
inc
stos
ljmp
fxch
ds
xchg
fmuls
vcmppd
xor
daa
or
xchg
out
dec
enter
out
push
mov
mov
inc
jb
stc
pop
and
dec
xchg
and
cmpsb
fstpl
push
add
sahf
hlt
sbb
shll
ret
dec
ss
cli
jmp
out
sbb
iret
mov
mov
in
inc
adc
jbe
cmp
and
dec
pop
push
data16
pop
cmpsb
sub
inc
out
leave
repz
xchg
aam
adc
addl
cmp
xchg
or
mov
adc
sbb
rcrl
lahf
push
jmp
add
jl
jae
cmp
cltd
jo
dec
sub
fiadds
cmp
inc
inc
repnz
cmpsl
or
mov
shlb
daa
insb
adc
fists
sbb
push
es
ljmp
std
pop
dec
add
sbb
or
cmpl
jno
dec
lahf
call
inc
jno
mov
stc
nop
pop
xchg
jb
dec
xchg
jns
cmp
cmp
xorb
adc
fisttps
xor
push
xchg
bnd
jne
xor
pop
adc
movsl
jecxz
dec
int3
push
fimull
push
lock
cmp
lods
dec
push
pop
fdivs
jns
outsb
mov
xor
mov
pusha
lds
jnp
and
shrl
stos
fcomp
rcl
pop
sbb
and
sbb
rolb
dec
push
cmpsb
pop
add
add
out
and
push
fldl
jle
mov
addr16
lods
jbe
cld
xchg
sahf
repnz
movsl
mov
fldln2
fiaddl
fbstp
mov
daa
inc
jle
adc
adc
adc
int
stos
in
in
sbb
movsb
mov
mov
std
mov
inc
ds
add
xor
mov
cmc
mov
cs
aam
pop
push
lods
mov
mov
pushf
pop
mov
pop
xlat
xor
fisttpll
daa
pop
jmp
mov
inc
mov
push
es
mov
jp
mov
cmp
mov
js
scas
mov
add
inc
mov
testl
idiv
adc
mov
dec
cmp
mov
add
mov
adc
std
push
mov
ja
rolb
push
nop
mov
enter
xorl
test
add
jmp
or
mov
scas
pop
rorb
mov
pop
or
xchg
lds
and
dec
loopne
xor
add
add
cld
sub
mov
add
cmp
test
ljmp
cmp
cmp
insb
mov
pop
cmpsl
inc
sahf
dec
movb
mov
in
or
cmc
loope
or
xchg
or
jbe
jmp
hlt
mov
mov
or
mov
ret
or
fstps
pop
lock
and
adc
and
aad
int3
dec
mov
mov
xor
aad
sub
mov
into
xchg
push
leave
aaa
movsl
je
inc
add
rolb
and
movsb
mov
fldenv
jmp
cmp
jbe
out
loop
sub
outsb
ret
cld
adc
mov
rcrl
dec
ds
mov
xor
inc
roll
adc
xchg
xor
xor
lcall
push
sub
mov
xchg
pop
fidivs
gs
lcall
xchg
ret
push
or
insb
into
lea
repz
out
dec
xchg
lahf
ja
or
add
mov
mov
sbb
add
out
mov
pop
scas
pushf
out
push
mov
jno
clc
xor
or
push
std
call
inc
mov
mov
cmpsb
cli
in
push
jle
jo
test
or
mov
pop
test
jns
dec
out
mov
mov
mov
jle
stos
jl
mov
lcall
sub
jno
arpl
repnz
enter
shll
inc
push
jp
pop
and
fnstenv
insl
mov
pop
insl
test
push
div
adc
push
es
std
xchg
int3
ret
adc
imul
sub
mov
bound
adc
aaa
pop
jns
ret
cltd
orb
add
out
sarl
adc
mov
das
out
cmpsl
push
push
pop
call
or
xor
fiaddl
mov
xlat
add
insl
push
out
xlat
cmpsb
mov
add
add
dec
aad
jmp
loopne
or
outsb
test
fidivs
jb
iret
lds
cmp
adc
fistps
lahf
dec
int
sub
inc
push
adc
add
and
in
or
scas
movsb
pop
aam
nop
leave
sub
mov
js
dec
xor
sbb
adc
div
jle
daa
adcb
mov
sub
mov
sub
ds
fwait
aaa
stos
mov
call
dec
test
fnstenv
push
xchg
dec
push
pop
stos
sub
adc
scas
dec
sahf
js
int3
cmp
xorb
out
shl
stos
xor
jb
js
pop
xchg
in
push
push
cmp
arpl
cmpsl
call
xchg
les
inc
mov
push
xor
lret
jle
adc
movsl
mov
insb
aad
mov
xor
sahf
xlat
mov
stos
mov
xor
jecxz
mov
inc
test
inc
xchg
xchg
leave
mov
hlt
test
loope
cmpsl
xor
jnp
sti
cmp
jno
maskmovq
negl
enter
mov
cmp
push
jp
add
xor
lds
jne
jge
adc
mov
dec
ja
push
and
rorl
out
add
cmp
cli
aaa
cmp
fidivrl
sub
add
sti
cltd
shlb
movsb
add
mov
fwait
popf
mov
jp
fildl
in
sbbl
dec
pop
mov
inc
sub
xchg
cmpsb
add
je
xor
imul
lret
mov
rol
dec
push
ljmp
lcall
cltd
ret
sbb
pop
addr16
sbb
mov
inc
mov
inc
js
out
ret
scas
mov
mov
es
inc
pop
insb
jecxz
push
push
in
aam
int3
sar
popf
sarl
movzbl
adc
sahf
or
inc
fs
test
dec
fnsaves
jg
dec
jmp
xchg
mov
push
ds
cmp
jle
dec
pop
out
mov
jp
iret
sbb
arpl
xor
xchg
pminub
movsl
jp
xchg
stos
dec
in
sub
mov
lds
lcall
jnp
ljmp
stc
rcl
inc
jae
add
in
mov
xchg
das
inc
outsl
ljmp
in
rcl
dec
pop
testl
sbb
sbb
js
ss
out
mov
mov
in
ds
cli
decl
sbb
dec
popa
mov
fnsave
mov
and
mov
hlt
mov
inc
hlt
out
cli
sbb
loopne
es
mov
inc
rorl
in
loop
dec
ret
leave
inc
data16
mov
ret
hlt
push
sbb
xor
into
lea
rorl
pusha
scas
cld
sub
xchg
pop
pop
aam
add
xchg
mov
jb
pop
fmuls
xchg
lea
rcrb
xchg
xor
in
mov
inc
and
adc
cmp
fistps
jg
popf
push
ds
rorb
cltd
leave
cmp
xor
jo
int3
movsl
sub
in
xchg
push
and
js
jg
lods
cs
fistpll
mov
xor
add
mov
push
jge
repnz
dec
rcrl
mov
push
xor
pop
mov
jae
cmp
lds
sub
sbb
stos
es
jns
jge
push
adc
add
loopne
lcall
shl
jl
loope
mov
mov
push
adc
scas
loop
inc
cli
xor
lcall
or
jge
aad
in
fdivp
inc
test
and
inc
pop
loop
sub
fimull
cli
fcomps
ficompl
sub
test
inc
shrl
dec
ljmp
push
insb
lahf
pusha
testl
pusha
xchg
int3
push
mov
sub
pop
loope
sti
mov
sahf
sbb
mov
aaa
out
mov
repz
pop
pop
xor
das
test
in
scas
hlt
push
lods
push
sub
inc
shl
js
bound
scas
sub
pusha
mov
sbb
int
jmp
in
pop
cmp
pop
shll
in
sbb
mov
loope
sbb
xor
inc
xorps
mov
xchg
daa
cwtl
xchg
xchg
adc
fistps
cs
popa
adc
ret
fst
and
lret
scas
out
divb
mov
jecxz
adc
or
movsl
xor
adc
movsl
push
mov
push
mov
setl
push
int3
mov
movsb
mov
sbb
jno
adc
adc
pop
mov
mov
dec
incb
fists
push
fldcw
mov
gs
xchg
cs
cld
sub
lods
loopne
or
fistpl
xlat
test
lret
xorl
dec
leave
dec
jle
push
bound
adc
push
xor
xchg
xor
cmpsb
jg
inc
push
fwait
adc
push
sbbb
movsl
xchg
dec
jno
mov
pusha
mov
push
mov
inc
rcrl
jno
imul
or
pop
jle
add
test
lds
inc
inc
xchg
adc
out
xchg
push
pop
orb
xchg
stc
loope
sub
and
in
aaa
std
inc
or
push
jae
dec
stos
inc
fwait
popf
testl
jb
fsubrs
cmpsb
into
out
push
sti
in
cs
in
jle
sarl
xchg
dec
adc
xlat
imul
ds
aam
movsb
inc
in
and
hlt
cltd
rcl
mov
mov
ficoms
cmp
cli
mov
inc
xor
jbe
aam
cwtl
cs
popa
stos
mov
fcompl
fwait
add
push
jne
push
test
test
out
hlt
iret
xor
jbe
and
icebp
jge
sbb
mov
mov
gs
testl
lods
xchg
les
sti
js
pop
jp
dec
push
mov
fisttpl
mov
dec
xor
mov
xchg
push
fucom
pop
sub
mov
adc
adc
push
ljmp
push
aaa
mov
aam
loope
sbb
pusha
int3
aam
insl
jl
out
xchg
jbe
push
ds
sub
pop
idivb
push
mov
sbb
push
mov
leave
mov
arpl
jbe
fldcw
mov
jno
cmp
push
sbb
addb
loop
cmp
adc
mov
cltd
xlat
mov
or
call
add
rolb
adc
enter
hlt
jbe
cs
cmp
pop
aam
loope
mov
out
xchg
sbb
das
mov
add
push
imul
push
insl
cmp
iret
xor
subb
inc
mov
aaa
push
movsb
adc
shlb
or
pop
popa
les
and
icebp
cli
jns
jp
mov
mov
push
sub
mov
push
stos
add
mov
movsl
add
jp
fildl
sub
mov
sarl
je
mov
ret
or
lods
jecxz,pt
mov
fs
sub
sub
lret
jno
mov
data16
xchg
rorb
test
mov
icebp
shl
add
repz
xchg
push
cmp
inc
cmpsb
icebp
pop
mulb
hlt
fcmovu
movsl
ja
mov
out
ja
adc
adc
repz
jbe
or
push
push
cmp
sbb
and
sbb
in
data16
and
pusha
mov
cmp
dec
sub
lcall
orb
push
out
mov
addb
xor
adc
push
mov
xor
inc
lret
movq
mov
ds
fnstsw
mov
cmpsb
jne
pop
inc
cmp
mov
std
push
jne
andb
imul
inc
lret
lds
bound
adc
dec
test
shlb
cltd
lods
sbb
scas
bound
les
push
dec
push
js
and
cmp
mov
pop
in
pusha
cmp
xor
movsb
movsb
sbbb
out
cmp
or
shrb
and
outsl
cmp
call
fcompl
scas
add
out
cmp
not
mov
daa
inc
xchg
sti
scas
mov
and
gs
fidivrl
loopne
aam
and
das
dec
jmp
lcall
jl
cmpsb
int
inc
push
add
jns
ja
popa
fs
subl
pop
inc
pop
mov
ljmp
xchg
scas
xor
xor
jecxz
shlb
pop
mov
cmp
fwait
mov
bound
lock
inc
or
jecxz
push
imul
and
xor
xchg
mov
pop
lret
pusha
cs
ret
push
mov
pushf
sub
insl
mov
shll
mov
fdivl
add
mov
dec
hlt
scas
sti
mov
dec
ljmp
fcoms
inc
add
push
or
out
iret
adc
iret
scas
dec
imul
pop
or
in
out
cmpsl
filds
xchg
pushf
dec
add
iret
lea
push
movsl
lock
je
inc
mov
repnz
dec
icebp
arpl
subb
xor
push
push
adc
les
test
adc
pop
ja
cwtl
xchg
bnd
mov
jmp
filds
jb
js
insl
cmp
xchg
rcll
test
aas
xchg
mov
mov
dec
test
cmp
cmp
lret
scas
cmp
cmp
mov
sahf
mov
pop
int3
test
mov
push
scas
jbe
xchg
dec
mov
ja
lret
dec
repz
mov
stc
movsl
es
daa
rcrl
addr16
xchg
movsb
out
pop
js
ljmp
xchg
es
sbb
scas
mov
dec
mov
orl
mov
xor
stos
adc
adc
mov
out
gs
push
int3
frstor
push
push
push
scas
adc
push
or
cs
into
into
in
mov
jecxz
mov
mov
mov
daa
xchg
jmp
xchg
ret
lret
jnp
fbstp
leave
mov
push
xlat
cmp
adc
dec
es
out
push
jmp
test
in
jne
push
into
push
clc
jmp
rcl
lds
or
das
xchg
and
sbb
scas
pop
ds
jmp
jne
shlb
or
repnz
stc
push
jae
mov
es
subb
movsl
jmp
adc
mov
push
cmp
enter
xchg
jbe
mov
add
adc
jno
cli
sub
mov
mov
popa
xchg
daa
cmp
xchg
movhlps
jo
sub
outsb
cwtl
push
aad
dec
stos
fidivs
or
mov
jne
stos
dec
mov
add
fsubs
fwait
out
aaa
mov
lods
xchg
mov
mov
or
out
xchg
and
outsb
call
movsl
pop
inc
add
rcll
sbb
sub
outsl
dec
mov
or
add
cmpsb
cmp
pop
pop
inc
movsl
fistpll
mul
mov
test
outsl
jge
pop
sahf
cmp
cmpsb
and
fsubrs
xor
pop
mov
mov
sbb
movsb
sti
pop
push
rcrl
jp
lcall
test
inc
imul
cltd
and
dec
out
mov
sbb
aam
test
imul
sbb
or
adc
sub
cmp
jo
xchg
inc
lods
popa
lcall
cmpsl
fwait
mov
loope
insl
lods
fs
ja
inc
cwtl
fwait
outsl
fldl
push
cmp
jmp
stos
xchg
je
mov
scas
cvtps2pi
jge
lods
pop
pop
xchg
sarl
jae
js
test
dec
sbb
and
dec
pop
or
fwait
ja
rcrl
or
push
mov
lret
push
fdivs
nop
stos
sahf
out
cld
lahf
into
popa
stc
lock
jp
jge
roll
xchg
inc
or
ret
jno
and
mov
cmp
adc
cmp
add
in
scas
cmc
movsb
or
jns
jae
mov
pop
sti
imul
dec
test
sbb
arpl
dec
or
fisttpll
call
mov
xchg
or
lock
adc
mov
aaa
sub
in
xchg
cld
or
cmp
dec
push
mov
cmp
insb
push
in
les
std
ret
jp
cmp
gs
add
push
incb
in
pop
xor
popf
jle
push
push
mov
mov
cmp
outsl
in
jb
adc
stos
or
fdivl
sub
cmp
fidivl
sbb
pop
sub
xor
cmp
fbld
popf
into
xor
cli
pop
in
repnz
jne
ss
push
cmp
lahf
inc
mov
xchg
ret
imul
into
jecxz
push
pop
dec
lret
sbb
cltd
rcll
mov
or
sub
enter
pop
xor
jns
out
xchg
adc
sub
sub
jno
dec
or
jmp
std
mov
int
inc
mov
out
jo
clc
icebp
cmpsb
jmp
jne
fcmovb
gs
ja
loope
inc
out
lret
iret
dec
aaa
jno
and
xchg
and
ja
cmp
and
pop
push
xchg
xchg
test
sub
testb
and
js
xor
lock
in
push
adc
fdivl
lds
and
stc
push
jmp
fisttpl
mov
and
arpl
daa
or
hlt
in
jecxz
popf
sbb
rolb
xchg
out
push
jg
incl
sbb
pop
fsubs
sbb
sub
sti
xor
mov
xchg
xchg
cmp
xor
aam
jp
jns
cmpsl
inc
repz
mov
and
pop
push
mov
xlat
in
sahf
jnp
inc
jb
cs
cmp
or
pop
ror
jmp
xor
iret
jecxz
sbb
pop
push
inc
push
in
push
jl
mov
and
roll
push
cltd
testb
or
lea
xchg
inc
or
xor
add
mov
dec
lock
mov
addr16
shr
and
pop
or
pop
lods
movsb
mov
out
cmp
pop
dec
add
xchg
mov
cld
push
test
adc
out
ja
and
test
adc
out
cmp
jnp
ljmp
inc
ret
add
or
and
jns
mov
orl
orl
lahf
aam
ljmp
mov
movsb
jle
sub
jno
dec
jmp
lds
andl
rol
or
sti
jns
sbb
push
or
xchg
call
jo
add
ljmp
mov
add
filds
pop
sbbb
push
xchg
or
push
mov
adc
cs
pop
push
xorl
sub
push
ret
cmp
add
aad
outsb
mov
int
push
mov
ret
lahf
or
ret
and
lea
daa
jbe
add
mov
in
mov
rorb
sbb
mov
movsl
data16
cmp
cmp
xchg
push
push
lods
mov
faddl
ret
add
sub
mov
sti
test
repnz
outsl
mov
pop
xchg
xacquire
imul
pop
imul
xlat
mov
stos
leave
sarl
cmp
dec
mov
mov
xchg
xchg
cld
or
lea
loope
int3
sbb
lret
mov
bound
adc
bound
cwtl
sub
inc
std
ss
pop
dec
mov
ja
test
cs
xchg
clc
sbb
sub
jno
aad
in
lcall
sbb
loope
xor
inc
xchg
or
bound
inc
aad
mov
sbb
cmpl
mov
xor
dec
xchg
cli
cli
push
rol
mov
mov
push
adc
rclb
cmp
cmp
dec
add
out
imul
add
jge
and
pop
stos
pop
addb
dec
mov
loope
inc
es
and
cs
sbb
push
cltd
push
ds
icebp
and
call
scas
outsb
jo
pop
cs
and
sbb
test
pusha
mov
mov
mov
test
xor
dec
mov
adc
adc
addr16
das
shl
imul
rorb
insb
cli
ss
stos
in
mov
jmp
bound
adc
inc
lahf
mov
xchg
pop
sbb
or
and
or
add
je
mov
cwtl
and
add
inc
stc
test
outsb
out
jmp
add
popf
lock
aaa
mov
xchg
jl
movb
lret
pop
pop
add
xchg
push
mov
xor
sbbl
shlb
in
aam
xchg
das
out
jg
mov
dec
into
das
adc
mov
and
jg
dec
roll
lods
mov
insb
push
xchg
in
sub
paddsb
std
mov
add
hlt
out
pushf
adc
xchg
popf
jb
xor
lock
and
cmp
out
jle
mov
inc
pop
lock
je
mov
sbb
lret
mov
xchg
sti
cmp
enter
jmp
xchg
test
pop
push
out
movsb
shrl
sub
dec
loopne
call
xchg
cwtl
pop
pop
movb
ficoms
lret
mov
mov
lret
pop
outsl
add
mov
cmpsb
enter
sub
lret
and
in
aam
xorl
xchg
int
mov
sbb
mov
dec
dec
pop
les
testb
jns
cmp
push
mov
push
arpl
jno
mov
subb
dec
in
push
pop
rorb
leave
or
or
js
dec
inc
sbb
lret
out
stc
jno
push
iret
cmc
xor
dec
pop
loop
pop
push
pop
fldenv
jnp
jns
adc
lahf
dec
daa
or
stc
out
lahf
rcrb
shll
cmp
inc
test
xchg
add
mov
mov
movsl
out
arpl
outsl
xchg
xor
jo
popa
mov
scas
xchg
icebp
test
adc
and
adc
data16
out
push
bound
or
pop
aam
pop
enter
inc
into
outsb
mov
repz
sbb
addr16
jge
mov
xor
out
cmpsb
dec
mov
fcmovnu
fistpll
dec
xor
or
push
jmp
jb
push
cmp
jns
js
std
sti
xchg
rcrl
pop
jno
mov
push
inc
sub
adc
xchg
stc
mov
out
push
fs
sub
test
sub
test
add
jbe
jbe
pop
mov
scas
fdivrp
mov
ds
pop
out
ficompl
adc
test
loope
mulb
aad
sub
push
pop
jp
mov
jge
push
sub
lods
cli
and
mov
xor
pop
push
cmp
and
adc
xchg
cmp
in
test
mov
cli
clc
out
xor
fildll
xor
ljmp
add
xchg
mov
push
push
cmpsl
push
adcb
pusha
aas
or
popf
xchg
out
inc
or
lock
lcall
and
sahf
cmp
sub
fwait
notl
lods
and
jbe
push
rcl
and
jp
push
jae
xlat
push
sbb
pop
or
fistpl
out
fidivl
sbb
aad
mov
test
cmp
shrl
inc
call
js
aad
mov
call
rol
dec
add
in
test
sub
mov
inc
or
push
lret
shl
cmpsl
inc
mov
mov
imul
push
inc
mov
cld
fadds
jmp
imul
and
mov
cmp
xor
or
insb
insb
pop
mov
pusha
fsubs
inc
mov
xlat
push
and
stos
hlt
mov
iret
and
dec
data16
cmpsb
das
jmp
stos
ret
leave
clc
dec
cld
mov
push
aam
inc
in
and
adc
xchg
sub
jbe
aam
cld
xchg
pop
and
mov
subb
sbb
mov
leave
xchg
pop
jbe
ret
mov
cli
sbb
mov
pop
cs
cld
sbb
push
sub
mov
adc
mov
scas
in
or
in
aaa
pop
fmulp
cmpsb
mov
and
jb
dec
scas
loopne
into
in
push
ds
stos
xor
pop
jmp
sbb
add
mov
xchg
lahf
insl
jp,pn
jns
fcomi
into
jmp
repz
adc
nop
cmp
negl
out
adc
out
daa
sbbl
add
ret
and
pop
out
lahf
loopne
mov
in
jl
les
insl
pminub
inc
call
leave
aas
inc
es
ret
repnz
xor
movsl
sub
pop
dec
sub
adc
jno
fwait
sbb
mov
movsb
dec
pop
cmpsb
push
jae
inc
push
lret
adc
or
xor
and
in
jo
es
cmp
int
lret
cmp
jecxz
jo
pop
fcomi
push
add
std
hlt
dec
cmp
fisubrs
mov
mov
dec
aad
idivb
pop
data16
jmp
lret
std
test
pushf
push
mov
cvtdq2ps
xlat
lret
jge
and
xchg
in
push
add
xor
sbb
push
sub
or
inc
push
mov
cmpsb
mov
iret
mov
mov
xor
fiadds
insb
dec
inc
insl
xor
jmp
iret
pushf
pushf
xor
sahf
adc
and
lock
mov
in
cmp
mov
cwtl
daa
aad
fsts
daa
inc
inc
outsl
mov
lahf
inc
push
jp
mov
nop
fidivrs
mov
ficoml
dec
frstor
jp
shrb
push
idivb
push
mov
les
addb
in
out
ret
xor
test
and
cwtl
pop
nop
data16
push
rcr
push
jae
das
xor
pop
scas
mov
int
aam
scas
pushf
cmp
lods
cli
cmp
pop
mov
fnsave
jbe
hlt
ss
lahf
fbld
xchg
enter
push
xor
jle
insb
jbe
dec
inc
cmp
mov
arpl
pop
test
ret
std
xchg
sub
popf
in
mov
mov
notb
bound
lret
movsl
jnp
inc
xchg
imul
loope
sbb
cmp
and
negl
adc
mov
fisubrs
adc
lods
xlat
xlat
dec
pop
xchg
jecxz
out
ret
mov
pushl
in
jnp
cli
mov
cltd
xlat
imul
insb
xchg
adc
ror
lahf
out
aam
jg
int3
cmp
mov
mov
jmp
mov
popa
xchg
add
lahf
add
cmpsl
shlb
sub
jno
mov
out
daa
push
xor
shlb
adc
fdivl
mov
fisubrs
cmpsb
leave
pop
ljmp
push
push
dec
cmp
dec
das
in
push
mov
mov
sub
int3
and
icebp
addb
add
into
inc
mov
movsl
mov
imul
addr16
xor
pusha
mov
repnz
movsb
cwtl
jno
and
idivl
jno
popf
mov
call
and
lcall
outsb
insb
popf
std
dec
jge
add
push
fwait
cli
stos
xor
xchg
adc
xor
mov
sub
dec
fs
cmc
push
mov
or
imul
and
mov
lcall
imul
jle
ljmp
cmp
movsb
lcall
and
push
test
push
sarb
sub
or
mov
cmpsl
jae
subb
pop
sub
mov
jmp
xchg
loop
mov
pushf
scas
insl
adc
ss
enter
and
push
sbb
dec
ret
not
mov
mov
and
loop
stos
ljmp
mov
mov
push
inc
dec
daa
test
std
fiadds
rcrl
sub
jbe
rorb
xchg
and
cmpsb
xchg
cmp
xor
arpl
je
leave
movsl
cmpsb
dec
test
mov
in
cltd
insl
iret
jnp
mov
and
subl
push
jo
in
push
xchg
repz
sbb
cmp
imul
add
aaa
nop
xchg
cmp
mov
push
lods
mov
mov
in
sti
dec
xor
fs
sub
push
lods
loope
mov
sub
pushf
popa
add
stc
mov
aas
xchg
pop
pop
push
or
mov
scas
xchg
sub
xor
out
inc
out
lock
gs
xchg
les
mov
add
divl
out
enter
cmpsl
clc
int
jbe
lock
mov
fcoms
push
mov
fadd
pop
and
loope
or
les
into
xchg
adc
mov
pusha
stos
mov
icebp
xchg
mov
pop
dec
loop
mov
or
jmp
loop
or
fdivrs
loop
pusha
push
out
dec
outsl
mov
pop
mov
xor
pop
daa
dec
sub
sbb
mov
fisubrl
insl
adc
jnp
add
add
shrl
mov
lock
push
adc
xchg
mov
push
mov
push
cmp
dec
xchg
push
hlt
dec
inc
out
push
add
imul
pop
xor
mov
loop
and
mov
sbb
mov
sub
adc
mov
adc
mull
daa
popa
fwait
out
scas
sub
xor
mov
and
dec
sub
pop
xor
push
jns
out
insl
pushf
imul
sub
xchg
sbb
xchg
sahf
xchg
pop
pop
xlat
test
sub
lret
call
jno
mov
in
mov
lock
fs
or
push
inc
call
ficompl
arpl
push
jge
inc
sbb
cmpsl
jb
lret
sbb
lret
adc
pushf
xchg
lock
imul
arpl
fptan
push
and
push
sbb
insb
ds
dec
push
out
cmp
xchg
push
adc
xor
push
push
sbb
ljmp
pop
daa
sbb
mov
inc
imul
cmp
xor
ret
pusha
clc
jns
push
or
xchg
mov
cs
mov
jno
adc
test
cmp
out
jecxz
push
push
test
ror
cmp
clc
ja
scas
popf
sub
pop
lcall
in
mov
or
jecxz
lret
sub
dec
xor
data16
and
inc
pop
mov
shll
shrb
sbb
popf
pop
xor
xorb
mov
and
fdivr
sbb
xor
mov
add
or
push
sub
mov
or
inc
data16
cmp
xlat
xchg
mov
mov
jle
pop
icebp
pop
sub
ficoml
push
or
xchg
lods
mov
loopne
pop
fistl
std
movsb
addr16
in
ljmp
jo
sbb
or
jge
sbb
adc
cmpsb
cmp
mov
std
mov
outsl
cmpb
inc
iret
or
test
orl
nop
xor
shl
jle
mov
cmp
xorb
das
gs
idivl
mov
repnz
test
out
mov
xchg
jge
nop
repnz
add
push
or
movb
pop
sub
fnsave
add
mov
mov
dec
jns
pop
stos
mov
mov
lock
fcoml
in
in
cwtl
pop
sbbl
mov
ret
test
cmp
push
jge
jns
sub
hlt
call
jae
and
imul
repz
lcall
adc
and
xchg
mov
les
mov
xchg
push
push
jge
cmp
sub
repnz
cld
xchg
mov
out
xchg
das
adc
loopne
sbb
or
cmp
xchg
bnd
cmpsl
xchg
dec
dec
movsl
in
xchg
sbb
cmpsl
sub
lods
imul
sub
adc
shll
cld
in
shrl
pushf
popa
pusha
stc
in
int3
sbb
lds
or
cs
lret
add
pop
stos
push
inc
fists
xchg
add
fstps
jae
xor
pusha
pop
inc
xchg
sbb
mov
test
xchg
and
test
and
xchg
icebp
push
mov
inc
hlt
es
xchg
mov
inc
cmp
xchg
mov
xlat
sti
mov
jbe
mov
les
pusha
xchg
lret
movsb
sbb
pusha
mov
notl
insb
movl
aad
out
bound
jmp
repz
adc
mov
cmp
mov
fistps
mov
outsb
nop
roll
cmp
jmp
cs
jge
and
fistl
and
je
push
jns
testb
push
addr16
out
dec
mov
cli
aaa
or
iret
add
inc
in
sahf
in
xor
push
scas
adc
addr16
js
and
rcll
fsubl
daa
add
mov
inc
fldcw
pop
fwait
out
xchg
jne
mov
and
loop
push
dec
sar
loope
es
mov
mov
addr16
out
out
mov
jp
aas
loop
dec
cwtl
lods
mov
push
xchg
ds
loopne
pop
or
mov
pop
and
jo
scas
push
sbb
lods
fisubl
jl
push
dec
xor
rcll
sub
frstor
rcrb
das
leave
mov
dec
shl
scas
dec
sbb
mov
push
stos
mov
loope
cmpsb
push
mov
gs
xchg
pop
sahf
sub
mov
xchg
das
test
mov
push
sub
xor
cmp
inc
push
lods
cmp
mov
inc
pop
outsb
pop
mov
pop
inc
shll
or
mov
fadd
scas
jae
jnp
mull
test
daa
data16
outsb
inc
adc
mov
outsb
outsl
daa
sbb
push
adc
mov
mov
movb
mov
popa
aas
pop
fwait
in
cmpsb
movsl
pop
nop
xor
out
jmp
and
imul
push
xor
jbe
and
lock
inc
rorb
jle
out
inc
push
mov
jne
enter
xchg
adc
mov
outsb
icebp
fisttpll
mov
call
sarl
sub
mov
push
imul
ljmp
out
leave
popf
jg
mov
fadds
and
mov
or
adcb
jl
out
lea
mov
lds
pop
adc
and
lahf
mov
ljmp
popf
sbb
inc
sbb
cmp
jbe
jne
cmp
daa
pop
je
cld
push
ljmp
mov
aam
pop
repz
mov
sub
cwtl
mov
add
cli
jl
jp
out
jne
cmp
dec
dec
inc
adc
stc
test
hlt
xchg
adc
in
jae
insb
in
sub
cli
cmp
or
pop
xchg
lret
jg
jl
stos
pop
ret
mov
xor
adcb
ffreep
pop
push
jge
push
enter
pop
mov
iret
fidivrs
pop
xor
cmp
xchg
mov
pop
ret
loope
xchg
mov
fcmovb
adc
aaa
dec
xchg
rcl
add
jmp
ret
lods
add
mov
add
jbe
cmc
push
stos
insb
adc
insl
stc
cs
fdivrl
in
dec
in
leave
and
int
push
cwtl
mov
mov
icebp
mov
push
jno
scas
mov
jo
cmp
mov
mov
stos
push
jmp
inc
hlt
div
mov
sbb
jecxz
and
pop
xchg
mov
mov
push
aaa
pop
jnp
xor
fmuls
mov
mov
jmp
test
pop
stos
dec
sub
out
jnp
gs
int
mov
adc
div
add
sbb
sub
inc
inc
sub
push
jle
sbb
outsl
stos
jo
outsl
dec
int3
aas
jno
xchg
in
shr
loop
mov
in
mov
mov
vmread
out
push
mov
enter
je
out
cmp
ja,pn
mov
jae,pt
jge
pusha
js
mov
push
stos
in
jp
xchg
rcr
arpl
xchg
aad
xor
addr16
insb
in
pushf
not
xor
mov
lods
sbb
xchg
dec
cli
inc
cmpsb
lods
jl
jl
popf
jge
mov
push
jecxz
movsb
jle
mov
xchg
sbb
or
xor
inc
pop
mov
cli
jl
add
lret
ds
pop
lcall
adc
shrl
imul
adc
lahf
adc
int
dec
push
xchg
popa
push
je
test
outsl
xchg
test
inc
pop
xlat
int3
push
pusha
bound
mov
or
lcall
and
gs
fadds
inc
in
sub
mov
out
inc
sti
scas
fwait
add
rcr
xor
inc
mov
imul
or
in
rorl
jmp
imul
ret
repnz
in
in
je
lret
adcl
les
add
cltd
mov
xchg
clc
xchg
push
mov
andl
shl
add
fsubl
sbb
scas
int
test
mov
enter
gs
inc
cltd
mov
mov
xchg
shll
push
nop
adc
ja
jns
cmp
pop
movsb
sbb
jl
pop
lahf
mull
mov
dec
mov
hlt
test
inc
or
and
es
jae
lods
dec
and
test
adc
insl
adc
and
loopne
aas
pusha
pusha
lock
orb
enter
fisttpl
shll
inc
je
loop
int
or
repz
test
mov
lret
dec
xor
inc
clc
jmp
xor
push
sub
and
xor
pop
in
hlt
pop
je
jno
xor
mov
dec
jns
test
and
lret
mov
xlat
pop
sarb
dec
popf
pushf
pop
fwait
jno
pop
pop
cs
stos
mov
inc
cmp
push
ffree
movsb
fs
sbb
mov
fists
jnp
add
jle
dec
pusha
and
iret
inc
lds
or
dec
fcomi
xor
jle
pop
popf
loope
loope
lcall
sarb
cmpl
insl
in
fimull
cs
aaa
adc
and
movsb
js
cmc
repnz
push
push
pop
or
rolb
mov
inc
rclw
sbb
aam
fs
dec
or
pop
idiv
hlt
pusha
in
mov
mov
mov
or
ljmp
into
mov
xor
push
push
call
xlat
cld
ss
xrelease
mov
cli
push
movsb
inc
add
leave
sbbb
imul
adc
xor
out
dec
sub
imul
or
daa
push
jne
push
cmpsl
ds
xor
fcomip
adc
std
lods
dec
pop
xchg
add
gs
popa
fs
pop
sarl
or
cmp
and
ss
pop
mov
jle
mov
rcl
pop
je
pop
into
mov
in
push
movsl
mov
mov
mov
push
je
ret
and
inc
jae
mov
addr16
negl
sub
or
or
out
cli
aad
stos
xchg
fwait
dec
repnz
cmp
scas
fcmovnbe
jo
shl
daa
notb
ss
xor
mov
mov
lret
push
addb
jle
cltd
dec
jmp
push
sbb
jle
xor
pop
mov
and
mov
mov
cmp
push
sbb
add
testl
adc
inc
incl
in
sbb
add
outsl
mov
imul
xor
sbb
repnz
mov
lret
out
aaa
sub
fimuls
mov
in
jo
insl
ja
mulps
dec
inc
inc
mov
push
into
mul
sbb
sub
movsl
fldcw
push
cli
cmpsl
jbe
nop
insb
push
xchg
aaa
push
jle
jg
cli
push
idivl
insb
data16
dec
sti
jmp
sti
lret
mov
jl
fwait
sbb
popa
push
sub
sub
adc
loopne
xchg
flds
push
inc
movsb
and
orl
add
pusha
sub
jb
sbb
popf
cmp
stc
lods
mov
dec
fwait
cmp
sub
cmp
jne
xor
in
shrd
les
xchg
cmpsb
mov
jbe
in
mov
scas
xchg
push
in
in
mov
push
pop
mov
push
or
ss
sub
sub
jge
imul
jp
mov
cmpsb
sbb
dec
sub
cmp
dec
inc
lea
nop
rorl
daa
inc
push
cmpb
dec
ret
gs
cli
les
mov
xchg
pop
stos
int
push
outsl
cwtl
pusha
dec
shlb
cmp
stos
dec
je
mov
xchg
cltd
add
ret
mov
sbb
cli
mov
push
or
jo
xor
xchg
mov
pusha
xchg
ljmp
push
sub
shrb
cli
mov
sub
xchg
lock
sbb
cmpsl
aaa
rcll
mov
dec
dec
mov
mov
lds
push
test
xchg
andb
daa
hlt
pop
movsl
mov
dec
pushf
stos
sub
push
push
aam
or
sub
ficompl
ss
mov
sbb
cli
pop
mov
sub
movsb
imul
pop
aas
es
mov
sar
xchg
rcll
jae
les
jl
sarb
xor
and
out
xchg
adc
mov
add
push
pop
mov
add
pop
mov
jl
mov
mov
inc
into
mov
pop
aad
sahf
sbb
mov
cmp
adc
loope
dec
xchg
mov
cvtps2pd
stos
mov
pop
enter
push
sahf
jecxz
shr
movsb
dec
xchg
ljmp
push
mov
sbb
lods
add
lds
jg
push
aas
jnp
leave
pop
fcmovne
pusha
cmp
jne
and
pop
mov
stos
xor
pushw
sahf
sar
xor
xlat
loope
sahf
pop
inc
aaa
nop
outsl
adc
push
and
adc
xor
cmp
pusha
xor
and
mov
mov
shll
outsb
fdivrs
pop
popa
and
mov
xchg
inc
mov
loopne
fwait
scas
fidivs
sar
mov
sahf
lea
insb
dec
mov
out
loopne
fistl
xor
jecxz
xchg
out
movsl
mov
mov
or
add
cmp
and
jecxz
pushf
lock
inc
push
xchg
cmpsl
mov
mov
cmpsb
xor
out
or
jp
cmp
or
notb
push
sub
jns
in
ds
xchg
pop
cld
xchg
inc
mov
stos
jns
jnp
push
jle
push
fcoml
das
and
das
and
pushf
push
fdivrs
mov
pop
pop
mov
mov
jbe
cmp
sbb
mov
lods
mov
mov
pop
dec
jns
scas
or
in
popa
mov
ret
adc
jns
jb
push
insl
mov
gs
mov
mov
or
xchg
push
mov
jecxz
lds
nop
cmpsb
inc
in
es
sahf
cmp
shll
xlat
js
and
sub
xor
sub
add
lcall
fidivrl
jmp
push
divb
mov
insb
jnp
outsl
mov
jne
test
add
sub
sbb
xchg
repnz
jae
in
mov
lods
adc
sub
jg
push
sbb
dec
add
lcall
cmpsb
mov
insl
std
xlat
sub
jno
clc
xor
sarl
cmpsb
sbb
lea
inc
daa
aad
push
cs
add
dec
xor
ret
cmp
xchg
mov
cli
fnstcw
and
mov
dec
les
and
cwtl
mov
dec
inc
imul
into
hlt
jbe
shl
pop
inc
mov
das
movups
test
dec
cmp
mov
aas
sub
and
pop
xchg
aaa
fiadds
scas
lods
push
push
pop
fdivp
push
int
imulb
mov
and
xlat
jns
push
enter
fcomps
or
cmovle
ds
xchg
es
mov
lods
cmpsl
jb
push
xor
clc
or
cmp
pop
cltd
icebp
pop
in
filds
jmp
dec
insl
pop
mov
and
mov
xlat
shrb
mov
pop
pop
inc
dec
push
and
insb
cs
aaa
lods
int
orb
andb
dec
add
cwtl
lahf
cmc
pop
sub
enter
mov
loop
sub
lahf
add
cli
fldlg2
repnz
mov
dec
dec
push
xchg
scas
cs
daa
jmp
adc
ffree
stc
popa
call
arpl
cmpsb
nop
mov
cmp
xor
dec
dec
insl
jns
mov
sub
popa
pop
pushf
stos
daa
xchg
jg
jmp
inc
cmp
lds
xchg
jo
cmc
into
xchg
lret
jle
xchg
pop
and
jne
xlat
push
out
js
xlat
cli
xchg
inc
test
mov
dec
loopew
cmp
push
mov
mov
mov
add
cmpsl
lret
pop
outsb
loopne
jbe
jae
pop
or
adc
add
mov
out
add
mov
jo
cltd
addr16
stos
cli
mov
cwtl
push
dec
push
test
das
orl
push
es
push
inc
push
xchg
pop
pop
insb
arpl
push
adc
cmp
jbe
xchg
cmp
decl
xchg
loopne
shll
sub
mov
stc
enter
push
push
xchg
rcll
add
xchg
and
mov
call
clc
into
mov
inc
xchg
iret
xchg
mov
outsl
scas
push
ds
ftst
mov
stos
pop
pop
push
lret
dec
pop
fsubl
sub
xchg
mov
adc
dec
ljmp
fildl
mov
lret
int
aad
add
mov
or
fbstp
mov
mov
jnp
mov
sub
std
stos
cltd
sti
xchg
out
sbb
sarb
data16
loop
mov
aaa
mov
into
mov
subl
jb
inc
push
in
imul
cmp
inc
call
test
mov
rorb
sbb
les
shl
es
arpl
push
cld
lret
sub
cmp
xchg
push
pop
mov
daa
xor
pop
mov
xor
fisttpl
push
leave
jg,pt
xor
dec
cli
sub
jle
push
mov
fwait
data16
xchg
sub
push
add
into
mov
jnp
fwait
ret
pop
mov
xchg
mov
aas
and
push
je
imul
cmp
call
imul
cmp
test
cmp
and
or
mov
jo
test
jmp
in
xlat
mov
sarb
lea
mov
cld
dec
shl
popa
scas
jns
jecxz
imul
sar
xchg
lcall
xor
xor
sub
or
mov
cmc
xor
cmp
lret
idivb
pushf
cld
lcall
jg
adc
ret
rcll
ret
cli
adc
sub
in
add
flds
mov
imul
fldcw
sbb
repnz
push
cltd
dec
dec
push
cmpsb
imul
scas
stos
and
in
and
push
inc
rolb
xchg
lods
add
mov
sub
loop
mov
and
pop
and
ss
dec
mov
fmul
jnp
cmp
fcomi
mov
dec
dec
or
mov
movsl
daa
and
lfs
mov
push
sub
mov
rolb
lret
lahf
addb
fsubs
ret
or
insb
nop
cltd
fdivrl
in
jmp
lret
cmp
in
sub
dec
das
movaps
or
hlt
enter
push
mov
fistpl
xor
or
jge
xchg
mov
inc
in
pusha
movsb
mov
mov
and
ficomps
fs
xchg
adc
rcrl
sbb
in
sti
mov
test
add
into
lret
shrb
faddp
or
sub
dec
xor
iret
and
add
rcrl
punpcklbw
cmp
hlt
dec
repnz
shll
pop
fwait
inc
push
jl
imull
cmp
inc
outsb
data16
xchg
stc
mov
ret
mov
add
into
lock
jle
punpckldq
cmp
cmpsl
cmp
lds
inc
shrb
push
les
cwtl
adc
adc
xlat
notl
xor
movsl
imul
sub
xorb
mov
inc
dec
sub
dec
or
fidivl
jb
mov
test
je
inc
sbb
or
mov
push
hlt
mov
ret
sub
jne
xchg
test
or
and
or
movsl
inc
je
jle
dec
mov
push
xchg
ret
xor
fidivl
mov
xchg
add
xor
out
in
jmp
shlb
imul
sub
xor
sub
push
cs
lds
fists
push
xchg
adcl
jnp
sub
test
mov
mov
mov
sbb
mov
enter
test
and
or
and
pavgw
cmp
stos
pop
mov
repz
inc
hlt
mov
mov
inc
adc
lcall
popa
adc
sahf
xchg
adc
xor
ss
fsubrl
lds
push
pop
cmp
aad
dec
sahf
lret
out
stos
jb
loopne
popa
popf
and
rol
and
inc
in
dec
fadd
add
mov
pop
gs
ja
fwait
movsb
jbe
sbb
add
mov
mov
pop
es
lret
nop
aad
mov
movsb
div
sub
adc
xchg
cmp
mov
popa
test
sbb
scas
out
test
dec
lods
cmp
imul
les
insb
push
ljmp
mov
movsl
xchg
inc
jbe
push
out
jne
mov
or
loope
sbb
adc
mov
lods
push
mov
icebp
pop
lea
out
icebp
add
cmpsl
mov
sbb
mov
test
inc
push
sbb
xor
loope
repz
adc
icebp
mov
sub
add
or
in
mov
xchg
inc
aad
push
pop
imul
and
jmp
sti
pop
sub
dec
push
js
jae
test
add
or
mov
push
test
push
fidivs
adc
sbb
test
ja
inc
js
mov
push
fsubrs
adc
mov
adc
cmpsl
daa
sti
or
mov
leave
cmpb
addb
ljmp
inc
icebp
cmp
scas
sbb
push
rcll
adc
dec
pop
call
iret
in
incb
imul
stos
cmc
adc
xor
call
test
clc
ljmp
xor
xor
sti
mov
into
popa
mov
out
test
inc
popa
leave
sbb
insb
pushf
jb
adc
cmp
or
mov
loope
insl
aas
mov
push
cld
dec
cs
stc
lds
jge
popa
sahf
sysenter
das
push
std
push
bound
push
cmp
lds
fiaddl
xor
jl
data16
or
arpl
stos
adc
jge
dec
mov
jmp
dec
mov
movsl
rcrb
ss
sbb
xor
and
test
rorl
mov
sbb
cld
and
fdivl
aam
or
pop
imul
push
pop
inc
in
cmpsl
in
aam
or
adc
push
das
inc
cli
fistps
sbb
adc
shl
cli
popf
repz
stos
dec
pop
ret
icebp
in
adc
mov
push
and
cmp
pop
inc
or
stos
mov
jae
mov
push
inc
sbb
or
inc
mov
mov
cld
inc
lds
enter
inc
xchg
lret
fxch
decb
mov
cmpsl
xor
mov
xchg
cs
dec
aaa
shlb
int
es
shl
fisttpl
enter
pop
hlt
fwait
xor
inc
ficompl
cli
repz
sti
xchg
xchg
bswap
repz
pushf
popa
pushf
mov
cmc
mov
fimull
fs
xchg
je
cmp
xor
arpl
inc
dec
mov
stos
xor
and
and
ja
ds
push
orl
xchg
mov
lds
dec
aam
out
das
imul
sub
scas
and
adcb
jo
out
inc
and
iret
sub
cmp
test
sbb
fiadds
sub
mov
xor
pop
loope
sub
or
cmp
clc
pop
in
out
pushfw
stc
mov
sbb
js
xchg
xor
push
push
int3
push
repnz
sbb
and
dec
bound
les
rclb
sbb
inc
lret
dec
mov
fidivl
mov
aad
jmp
sub
mov
pop
sbb
pop
fcmovbe
aas
daa
push
mov
jmp
scas
insl
mov
pop
mov
mov
ljmp
mov
dec
mov
and
mov
mov
or
pop
mov
icebp
add
mov
mov
lds
test
cmpsl
push
and
inc
mov
and
pop
sbb
mov
cli
push
test
mov
xchg
mov
pop
xchg
cli
fwait
sbb
pop
fwait
jbe
mov
mov
fldl
jbe
cmp
inc
xchg
xchg
int
cs
push
sti
lock
inc
jne
add
mov
mov
sub
inc
mov
cmc
inc
imul
fwait
clc
repz
push
lods
adc
lock
rclb
int3
push
mov
pop
stc
push
dec
xor
xor
lret
mov
or
adc
shrl
pusha
pop
dec
dec
popa
iret
imul
out
jle
xchg
sbb
mov
or
test
mov
lahf
jl
mov
xchg
in
sub
pop
mov
addr16
icebp
push
push
ret
pshufw
cmp
mov
xor
mov
adcb
rcr
into
lret
mov
fwait
repz
int3
add
js
loope
cmpl
out
out
and
fs
out
int3
xchg
inc
cmc
sub
cmp
jo
push
and
out
sti
add
cmp
xchg
mov
js
dec
nop
xor
mov
cmc
sbb
inc
sahf
cmp
adc
stos
orl
shrb
adc
inc
push
adc
mov
push
mov
out
ljmp
push
cmovb
pop
lcall
popa
out
outsb
push
mov
jg
sbb
cli
shr
fcoms
adc
fwait
sbb
fcoml
sbb
out
fmuls
fistpl
shl
fimuls
addr16
in
and
mov
dec
movsl
lds
std
aam
pop
roll
pop
ret
add
add
xor
jg
jl
fiadds
outsb
inc
pop
fmulp
ret
mov
sbb
lds
adc
sub
orl
bound
adc
enter
out
dec
mov
les
xchg
repnz
mov
stc
je
insb
sub
dec
mov
mov
popf
shr
adc
inc
adc
shrl
push
fwait
pushf
outsl
adc
ds
sti
or
mov
fsubs
xor
xor
cmp
test
inc
mov
das
test
pop
jns
sub
pop
pop
out
and
push
dec
cmp
lret
scas
fisubrs
sbb
jmp
imul
mov
stc
mov
cmpl
and
or
out
add
xchg
cmp
subb
aaa
jnp
outsb
mov
fdivp
pop
das
push
pop
xor
popl
add
sbb
in
mov
cmpsl
mov
mov
add
mov
test
pushf
mov
hlt
rcl
movsb
xchg
arpl
in
js
cli
jle
sbb
or
pop
add
out
jbe
imul
fs
daa
or
mov
inc
mov
jno
or
dec
ds
sub
out
jns
pop
scas
cwtl
aas
icebp
nop
test
mov
rclb
mov
in
jns
ss
sub
mov
mov
jno
or
mov
xchg
xchg
xchg
jl
loopne
cmp
std
cmc
lods
leave
clc
mov
inc
fldenv
push
xchg
mov
push
mov
sahf
bound
add
in
push
push
jp
mov
inc
movsb
jge
arpl
repnz
pop
inc
and
cmp
and
das
jns
daa
push
jecxz
insb
outsl
mov
popf
jb
mov
lods
out
sub
pop
fadd
inc
pop
call
adc
xor
and
mov
mov
jnp
repz
in
mov
mov
insb
ficomps
into
jmp
outsl
repz
pop
cltd
add
xchg
popa
jge
ss
adc
icebp
popf
add
das
cmp
test
adc
fldenv
hlt
mov
lea
les
adcl
mov
dec
dec
subl
in
inc
aad
imul
mov
mov
data16
mov
jg
leave
pop
test
rcll
enter
jg
xchg
mov
inc
inc
jg
shlb
inc
add
cwtl
jnp
dec
in
push
dec
sbb
xchg
lods
cmp
or
jg
jg
gs
dec
cmp
inc
mov
call
pop
test
mov
xchg
test
sub
pop
cmpsb
mov
gs
mov
mov
jl
and
adc
xor
aam
js
lcall
scas
ficoml
and
repnz
addr16
push
push
pop
mov
xor
sbb
aas
outsb
pop
ds
int
lahf
mov
cmc
fiaddl
cltd
es
repz
pop
pop
and
iret
pop
frstor
jns
mov
jbe
sbb
jb
stc
sbb
adc
cmc
and
stos
jno
jle
pop
push
xor
aaa
inc
mov
mov
fisubs
push
push
clc
das
shrl
mov
sahf
add
jp
sbb
into
mov
jl
sub
ficoms
mov
and
xchg
sahf
xchg
fsub
in
mov
int
pop
rcll
stc
test
popa
mov
add
ds
icebp
xchg
sarb
cmp
lds
into
gs
daa
repz
cli
dec
jg
adc
bound
stos
sub
add
cmp
inc
pop
dec
sahf
movsl
lret
mov
cmpsl
jb
cld
xor
sub
loopne
sti
aad
aaa
repnz
pop
cmp
jo
shl
jb
sub
scas
pushf
mov
shll
mov
jns
mov
movsb
mov
fimuls
pusha
mov
sbb
xchg
and
xchg
clc
pop
ret
scas
jo
notb
mov
aas
bound
test
xor
xlat
dec
push
outsb
lcall
inc
aas
mov
pusha
call
push
movsb
loop
cmp
sbb
das
pop
int3
or
shrl
or
push
fadd
dec
and
in
lcall
mov
je
mov
xor
dec
and
icebp
popf
stos
fbstp
inc
push
rclb
fs
ret
int3
jae
imul
stos
loop
lea
dec
imull
in
sarl
mov
es
int
lahf
sbb
lret
xchg
pop
pop
push
pushl
mov
cmp
push
cltd
xor
sbbl
cmp
mov
inc
inc
xchg
add
mov
jno
or
mov
cmp
xchg
push
test
mov
ret
xor
cmpsl
outsl
sahf
adc
push
and
loop
dec
cmp
shll
sub
jo
push
push
arpl
into
mov
adc
sti
pop
std
sbb
iret
xor
xlat
inc
cmpsl
insb
sbbb
xchg
ret
fsubp
movsb
pop
jne
and
dec
xchg
out
insb
pop
test
negl
inc
dec
lcall
popa
add
pop
add
std
aam
xor
dec
inc
jb
push
daa
sbb
out
mov
repz
add
ret
mov
add
push
push
cmp
jp
pop
mov
aas
fldt
cltd
mov
dec
ja
xlat
mov
sub
dec
lret
cmp
sbb
dec
shll
mov
inc
xor
pop
and
sahf
loopne
push
jbe
in
xchg
js
testb
fnsave
addr16
ret
frstor
test
mov
sti
pop
mov
addr16
inc
adc
cs
ja
and
das
dec
adc
cmp
std
mov
out
mov
mov
pop
loope
lds
fwait
pushf
loop
icebp
repz
insl
or
mov
ret
push
adc
sbb
dec
mov
ret
pop
in
pop
outsl
scas
sbb
add
in
mov
xchg
jne
call
gs
std
cmpsb
sbb
clc
xchg
icebp
cmp
imul
loop
xchg
or
test
call
icebp
aas
mov
add
addr16
lahf
xor
or
mov
insb
enter
cmp
xor
out
out
cltd
out
daa
xor
sbb
add
arpl
roll
pop
xchg
cmpsb
dec
mov
push
adc
sub
call
pop
in
sbb
mov
pop
ret
fidivl
or
mov
or
movsb
stos
dec
imul
fldcw
scas
push
xor
jb
inc
inc
pushw
and
pushf
rorl
xor
sub
jl
mov
lods
xchg
xor
adc
lods
sub
jno
jge
or
cmp
clc
sti
adc
inc
test
xor
pushf
sti
sub
dec
jge
decl
sbb
in
stc
stos
xor
push
adc
js
and
jb
fwait
jge
hlt
imul
addb
stos
or
inc
das
dec
push
outsl
scas
xor
pop
pop
and
and
and
xchg
and
insl
jno
ja
popf
clc
mov
incb
hlt
es
mov
sbb
lcall
xor
add
daa
popa
ljmp
in
push
jb
flds
sbb
jo
pop
in
jle
std
or
mov
mov
fsubrs
dec
movsl
xor
dec
fwait
lods
les
xchg
mov
jg
les
int
jnp
push
push
in
jnp
pop
or
jmp
xor
rolb
aam
jno
jae
movsl
inc
push
pop
popa
mov
loop
add
jg
lcall
pop
ficompl
rclb
mov
ret
xchg
cs
jmp
mov
inc
in
push
fmull
xchg
sti
xor
ret
mov
sysexit
aaa
jmp
mul
pop
jge
jnp
andl
adc
mov
cmpsb
sarb
das
pop
xchg
sub
xchg
int3
mov
cmp
sub
addl
add
movsb
sbbb
sbb
stos
jp
clc
sbb
add
je
jnp
inc
push
push
outsb
pop
or
mov
nop
dec
pop
in
or
mov
jbe
add
pop
unpcklps
adc
push
ja
adc
xor
int3
inc
mov
repz
mov
aam
push
imul
inc
mov
mov
xor
pusha
rcll
aaa
sub
xor
adc
gs
xor
ja
ret
movb
test
xor
xchg
lret
cmp
dec
fsts
iret
jns
clc
jg
fmul
arpl
popa
fwait
xor
jmp
aam
bound
adc
sbb
mov
jae
dec
dec
imul
push
and
xchg
adc
inc
jge
test
mov
or
aas
adc
sbb
inc
int
imul
in
out
mov
or
rclb
add
in
sahf
cmpsb
out
or
lret
sub
sub
sub
mov
mov
mov
std
and
push
push
push
push
out
in
aam
jbe
out
or
xchg
jno
or
cmp
test
cmpsl
mov
xchg
cmp
lret
inc
mov
addb
push
cmp
imul
fcmovnu
pop
jns
in
pushw
test
fdivrs
dec
mov
mov
xor
cmp
in
cltd
mov
sbb
hlt
addr16
inc
lea
pop
jecxz
movsl
test
roll
test
mov
xchg
nop
cwtl
inc
cmp
or
subb
pop
adc
inc
jbe
clc
jno
sbb
mov
inc
out
adc
dec
or
rcr
into
lock
dec
fs
shrl
push
and
movsl
and
fiadds
in
add
add
mov
inc
movsb
add
cmp
fcomi
or
xchg
ds
pop
andl
xorb
adc
push
mov
cmp
xchg
lds
ret
popf
pop
xor
arpl
movsb
enter
call
jp
mov
mov
std
test
jmp
cmpsl
dec
movsl
cmpsb
mov
jae
or
and
mov
sub
xor
pop
ret
mov
push
push
fbld
dec
sub
lods
mov
xor
popa
sbb
dec
stos
pop
push
xlat
std
jge
cli
dec
aam
out
dec
dec
stc
inc
dec
sbb
dec
lods
rolb
test
adc
ds
orps
fcmovbe
jo
mov
dec
xchg
sarb
rol
pop
push
into
or
cmp
jb
movsl
mov
test
sbb
or
pop
rclb
outsl
mov
aas
push
mov
stos
mov
push
cmp
jp
not
scas
mov
cmp
sbb
jle
sar
sub
call
out
dec
in
lcall
frstor
notl
pop
mov
xlat
scas
ljmp
mov
pusha
lock
adc
jge
sbb
pop
addr16
mov
lret
pmaxub
jbe
add
add
adc
or
pop
js
addb
pop
enter
dec
sarl
rolb
xchg
cmp
loopne
mov
mov
dec
jl
mov
inc
mov
and
dec
lcall
xchg
pop
add
inc
jb
jg
adc
xorb
mov
jg
out
xchg
cs
mov
and
divl
pop
inc
jbe
mov
daa
insl
imul
cmp
cld
adc
and
nop
add
jle
pop
test
push
pop
out
lret
mov
add
add
mov
push
add
cltd
add
scas
mov
mov
push
movsb
inc
push
data16
sarl
jnp
sbb
fisubs
into
xlat
mov
lock
sub
xchg
je
adc
test
test
xor
test
cltd
cld
fdivrl
mov
and
mov
int3
inc
xchg
inc
pusha
pushf
push
scas
or
ficoml
jg
mov
cmp
mov
cltd
fadds
cmc
fisubrs
dec
sbb
cmp
icebp
inc
enter
mov
lret
insb
outsb
das
insl
cmp
mov
gs
jp
mov
dec
cmpsl
cmp
cwtl
cmpsb
pop
dec
pop
jmp
and
mov
push
sbb
push
notb
jae
out
pop
dec
nop
cwtl
cmp
cwtl
or
in
daa
jno
sub
fadd
jecxz
dec
cs
add
add
dec
daa
lods
popa
pop
ja
int3
aas
and
ret
cmpsb
add
jecxz
xor
sub
in
cmp
cmpsl
jmp
push
pusha
out
pop
sti
arpl
div
data16
and
jge
jmp
mov
mov
push
inc
sub
aad
nop
cmp
fcoml
add
pusha
mov
jg
fstp
ja
out
adc
cmp
mov
and
and
sbb
cmp
push
mov
jmp
add
pop
stc
add
lods
cmp
and
pop
fs
cmc
jecxz
enter
xor
and
imul
ljmp
andl
scas
sub
xorb
enter
jl
inc
push
shll
or
lahf
ds
inc
stos
sarl
dec
aam
jno
dec
push
cmp
je
pop
cmp
jbe
push
adc
sbb
pop
push
cmp
movsb
dec
add
mov
call
sub
rcrb
pop
rorl
ds
or
sbb
xor
cli
xchg
lods
mov
push
jne
push
sub
andl
pop
push
and
xchg
insb
arpl
enter
mov
in
push
jnp
es
xor
inc
and
fldenv
jae
out
or
jb
ret
push
mov
push
push
bound
push
push
pop
xchg
cmovs
mov
xchg
ss
dec
inc
test
cmpb
ds
dec
sbb
lods
add
fldt
xchg
cmp
add
leave
dec
les
pop
dec
push
imul
aam
rclb
fistpl
shlb
push
pusha
js
inc
push
call
in
adc
outsb
inc
lret
or
mov
rcl
sbb
es
cli
mov
mov
sub
out
shrl
test
clc
cs
popf
in
push
push
lret
data16
mov
pop
xchg
xchg
inc
adc
call
cmp
adc
into
pop
pop
mov
into
dec
add
cmp
or
xlat
add
and
not
xchg
push
sub
pop
mov
les
xchg
pop
dec
xor
test
adc
cmp
xorb
xchg
push
jmp
dec
jmp
ja
rcr
shl
out
mov
sbb
dec
mov
fwait
cwtl
fldt
test
stc
inc
cwtl
pop
shrd
iret
and
xor
xor
sbb
lock
sub
cmpsl
mov
loop
jle
pusha
aas
aas
sbb
pop
je
mov
out
push
scas
xor
sub
ret
int
dec
lds
mov
jge
dec
push
jmp
adc
or
push
ficoml
and
add
inc
out
ficompl
and
in
ds
mov
testl
mov
sbb
jbe
popa
popa
push
mov
push
xor
out
icebp
mov
jg
or
mov
inc
loopne
sbb
mov
pushf
mov
dec
imulb
fnsave
orl
inc
dec
call
jge
jg
push
fistps
mov
push
fimull
fsubs
mov
and
push
je
aas
sub
mov
lret
arpl
push
cmpsb
stos
lods
mov
and
xchg
aas
mov
jns
xchg
sti
loop
sub
push
push
sub
shl
push
std
inc
out
popa
rcrb
add
mov
es
mov
stos
call
das
pop
adc
pop
sti
xor
aam
add
in
mov
push
int
cmp
lock
mov
inc
sub
sbbl
lods
movsl
inc
cmp
lods
and
pop
dec
xchg
add
sub
sub
ljmp
movsb
pushf
lods
lods
push
dec
testl
sbb
mov
out
sub
jbe
or
rorl
lods
mov
fildll
sub
int3
cmc
enter
pusha
xchg
jle
jns
xchg
ss
in
adcl
popa
scas
imul
repnz
jp
fsubl
mov
mov
outsb
sahf
xchg
and
sub
outsb
dec
xchg
sbb
mov
ds
and
dec
mov
dec
jne
xchg
fs
adc
into
cmpl
les
mov
inc
sbb
jnp
lret
and
mov
cmp
das
or
push
mov
iret
mov
mov
outsb
push
icebp
xchg
mov
jnp
ljmp
fstpl
add
jge
jecxz
inc
inc
pop
cli
dec
out
xor
lret
or
in
xchg
loopne
xchg
lcall
cmp
mov
std
leave
or
adc
cmpsl
sub
cmp
std
or
data16
pushf
cli
iret
push
jno
xchg
dec
mov
movsb
jb
push
roll
stos
push
adc
stos
insl
fiadds
or
push
ret
mov
call
pop
imul
movsl
sbb
xchg
or
cmp
fs
lock
cmc
cmp
mov
or
imul
imul
add
lods
mov
out
cmp
sbb
cmp
ss
jp
adc
addr16
sbb
sbb
or
or
add
sbb
out
xor
rcll
lods
lods
cmpsl
push
inc
jb
jge
dec
lret
popa
dec
ja
adcb
mov
test
push
sbb
hlt
or
dec
pop
pop
mov
scas
faddl
mov
and
popa
into
and
mov
hlt
mov
cwtl
jnp
fwait
push
add
pop
repnz
mov
inc
iret
sbb
sub
imul
adc
cld
inc
mov
ret
add
xor
cs
loopne
inc
fldcw
movsb
repz
jno
push
dec
sbb
cld
xor
mov
mov
pop
cwtl
push
rorb
ds
test
jne
lock
popf
rcll
mov
sarl
push
mov
xchg
xlat
subl
inc
cltd
movsl
clc
iret
jg
hlt
int3
inc
sti
fdivp
xor
jbe
repnz
and
sahf
aam
in
rorb
push
sub
outsl
fiaddl
jecxz
inc
loopne
inc
aaa
xchg
test
xchg
hlt
dec
pop
xchg
lret
mov
mov
inc
outsb
lds
loopne
mov
bnd
and
jne
dec
mov
and
fldl
add
icebp
jp
jns
add
fildl
xchg
inc
jne
cmp
fnsave
movsl
ret
add
jae
xchg
repz
sbb
fwait
aam
add
xchg
jnp
daa
icebp
icebp
push
push
jge
push
out
dec
cmp
aaa
fisubl
and
rcr
mov
dec
decb
jecxz
xchg
outsb
push
sti
fcomps
pop
inc
aam
mov
cli
mov
and
or
push
mov
mov
dec
jnp
jge
idivb
loope
cmpb
jl
inc
sub
repnz
push
lea
adc
mov
ret
push
fidivrs
xor
lock
jecxz
adc
mov
leave
xor
adc
data16
sbb
dec
push
pop
scas
xchg
das
jge
mov
push
adc
scas
aas
push
into
push
or
scas
mov
repnz
lds
pusha
mov
ds
cmp
sarb
jne
shl
lea
xchg
lock
fildl
lahf
mov
mov
pop
out
mov
sbb
pop
push
adc
fcomps
jmp
inc
dec
lock
pop
dec
inc
addr16
int
mov
es
add
mov
dec
popf
xor
enterw
fs
js
nop
fldt
cs
ss
jecxz
adc
jl
xchg
and
mov
call
mull
dec
sbb
aas
adc
xchg
ret
dec
in
and
jecxz
sti
push
mov
popa
clc
arpl
cld
hlt
scas
int3
sti
orl
jecxz
jle
test
mov
sub
jns
mov
xor
das
add
jg
push
mov
xor
jle
push
out
shrl
mov
andl
add
je
daa
rcr
loope
jns
xor
push
inc
jb
sbb
and
pop
stos
call
and
ret
mov
push
scas
inc
jg
or
push
jns
push
outsl
adc
in
into
mov
lock
sub
cmp
adc
cmp
xchg
sbb
push
sbb
loop
test
lods
out
lds
test
testb
pop
outsl
pop
xchg
cmc
mov
icebp
or
jno
scas
test
xlat
std
jg
xor
xchg
sub
push
add
dec
xchg
jb
mov
sbb
repz
in
xor
test
pop
inc
out
pop
sti
scas
inc
dec
xchg
xlat
xor
subb
xchg
cli
mov
lea
push
mov
pop
loopne
sbb
mov
dec
test
pop
mov
and
xchg
mov
cmp
leave
mov
decb
fcmovne
cmp
mov
stc
stos
add
mov
xor
sub
rorl
pop
pushf
mov
inc
mov
and
mov
push
cmp
cwtl
movsb
test
inc
mov
in
cs
faddl
mov
jae
pushf
inc
jge
add
xor
cli
sbb
sub
sub
cmpb
xchg
cmpsb
push
or
adc
cmp
out
lret
call
add
mov
add
pop
and
cmp
in
and
enter
enter
in
pop
aad
inc
clc
aam
jg
mov
les
je
inc
mov
cld
fnstenv
icebp
mov
cmpsl
lret
int
cwtd
je
or
add
or
push
xchg
sbb
dec
int3
mov
gs
scas
pop
xchg
xchg
je
dec
add
push
jle
xchg
mov
sub
jle
shrl
xchg
and
push
aaa
in
jno
popa
lea
push
in
in
adc
xchg
xor
sahf
xchg
repz
jne
mov
and
cltd
mov
out
xchg
call
mov
or
leave
pop
stos
sbb
adc
sahf
lds
dec
or
cmpsb
mov
cwtl
gs
mov
insl
mov
dec
dec
test
dec
xor
pushf
xlat
jle
sbb
push
aas
mov
sub
rorl
jg
stc
les
lods
or
push
jmp
push
ret
push
repnz
lret
mov
mov
xor
dec
or
sbbb
push
add
mov
imul
add
inc
es
stc
and
jno
test
dec
es
bound
dec
mov
shrb
xor
fisttpll
and
cmp
xchg
push
cmp
adc
loop
mov
js
xor
adc
roll
jmp
enter
xchg
lock
int
dec
imul
mov
insl
cmp
bound
iret
cmp
cli
xchg
das
dec
incb
sub
sbb
cs
push
mov
adc
xchg
push
or
xchg
iret
icebp
bndstx
mov
std
outsb
mov
jl
xor
mov
test
mov
std
imul
enter
inc
rcrl
jl
or
mov
mov
push
adc
out
cwtl
mov
aam
adc
loop
mov
insl
inc
subb
stc
cmp
mov
enter
je
xchg
jle
scas
cmc
in
dec
jbe
push
or
movsl
cmpsl
push
and
inc
inc
js
in
sahf
js
xor
int
ret
js
andl
std
aad
dec
bound
sub
insb
cld
jne
pop
jge
lock
cltd
cwtl
in
jae,pt
dec
idivb
in
fwait
gs
mov
jo
pushf
cmp
lahf
rorl
adc
jns
adcb
adc
clc
daa
sbb
pop
ret
xchg
fwait
xchg
push
test
cltd
mov
adc
jnp
mov
loope
shll
ficoml
cmp
mov
cmpb
dec
out
sub
cltd
sbb
movsb
cmp
add
fsubl
sub
adc
call
add
out
daa
imul
cwtl
jae
into
push
xchg
push
mov
jne
jle
mov
jl
popf
cmc
pop
or
jg
adc
mov
std
incb
les
in
les
dec
xor
imul
stos
sub
scas
xchg
cwtl
sbb
lods
test
inc
push
lock
sbb
stc
cmp
jno
mov
jp
or
sub
or
inc
push
mov
loop
pop
jne
and
push
loope
pop
cli
pop
inc
mov
or
test
bswap
testl
repz
inc
sbb
pop
frstor
repz
xor
hlt
aaa
andl
add
sbb
add
mov
loope
jbe
scas
ja
push
out
and
stos
or
lods
les
sub
ds
xchg
push
xchg
dec
cmp
aad
fdivrs
dec
scas
daa
les
inc
sbb
sbb
das
stc
test
sbb
push
imul
cwtl
enter
out
addr16
sub
adc
dec
lahf
sub
aas
dec
sub
cmp
stc
mov
add
das
lret
mov
fisubrl
jmp
lods
xorl
mov
jge
ds
jl
push
cwtl
sbb
mov
xchg
adc
jmp
cmp
repz
aad
icebp
in
push
adc
insb
lods
cmp
icebp
ret
das
dec
pop
ljmp
pop
scas
xor
mov
jb
sub
mov
jg
repz
sbb
in
into
mov
gs
push
jo
add
cld
inc
jl
jl
dec
je
xor
cmp
sub
shrb
mov
mov
pop
add
inc
dec
adc
mov
orl
jno
push
jl
aaa
out
pop
add
push
and
shll
add
dec
bound
dec
call
mov
adc
int
and
loop
push
xorl
jnp
mov
inc
sbb
dec
push
cmp
loope
sahf
rclb
sbb
xchg
push
sub
insl
push
pop
pop
ljmp
jg
jg
push
jl
ja
sbbl
xchg
data16
jne
movsl
repnz
lds
ja
enter
sbb
xchg
xchg
ljmp
into
cld
std
daa
adc
cwtl
lock
jbe
push
mov
sahf
dec
sbb
jns
js
data16
es
nop
add
xchg
sub
stos
push
arpl
aad
sbb
sbbl
out
enter
test
adc
jbe
adc
xchg
or
pop
pop
add
loopne
xchg
fbstp
lret
loop
jae
hlt
sub
adc
jns
jo
dec
push
jno
push
jmp
mov
dec
fildll
mov
push
ret
dec
dec
add
xchg
add
loopne
mov
mov
out
data16
sbb
ljmp
test
sbb
notb
push
xchg
pop
xor
jbe
pop
push
or
mov
push
gs
cmpsb
sbb
dec
in
mov
cmp
cs
mov
pop
cwtl
sub
aam
cmc
out
mov
mov
inc
mov
fucomi
test
mov
insb
les
mov
into
dec
push
stos
push
push
xor
ret
daa
push
xor
and
jns
cmp
inc
in
mov
fs
sbb
sub
stc
add
xchg
mov
rorb
rclb
lock
xor
sub
sbb
mov
lcall
cld
inc
mov
dec
out
push
mov
mov
arpl
push
cmpsl
mov
mov
jmp
sub
rclb
fistpll
push
ret
int3
cltd
rep
popf
iret
cli
jecxz
data16
adcb
push
cltd
dec
dec
push
mov
xor
push
or
inc
push
cmp
pop
or
bound
ds
cmp
add
jmp
stos
aaa
stos
inc
rcrl
dec
ja
mov
mov
mov
push
jge
or
mov
inc
push
out
sub
adc
dec
push
pop
sbb
es
mov
les
pop
ret
xchg
mov
mov
pushf
shll
iret
insl
jnp
cmpb
add
movsb
xchg
data16
pop
inc
popf
adc
sub
popf
ds
sbb
jae
in
in
neg
addb
fsubs
pop
or
or
jecxz
out
adcb
mov
mov
aaa
imul
cmp
jo
pop
out
xchg
jecxz
dec
cmp
and
cmp
das
jne
stos
xchg
adc
lcall
dec
or
divl
test
leave
cmp
stos
jae
fistpl
cmc
scas
cmp
cmpsl
xor
das
sub
mov
xchg
add
add
lock
jge
sar
sub
jp
inc
dec
je
std
popl
ret
lods
lds
shl
ja
lahf
int3
js
fmuls
inc
adc
int
nop
push
xchg
xor
adc
mov
out
pop
fs
test
mov
push
repnz
xchg
pop
cld
mov
mov
adc
clc
inc
and
psrad
jge
sbb
xor
pop
and
cmp
pop
pop
inc
add
scas
or
cmp
fildll
sbb
mov
lds
sub
cmc
xchg
cmpb
cmp
test
dec
add
cmp
rorl
into
lds
cltd
pushf
xchg
pop
pushf
inc
xchg
jne
or
cmp
imul
push
add
push
and
cmp
cmp
arpl
cmp
test
out
xchg
mov
add
xchg
test
mov
xor
pop
sub
cld
xor
cmpsl
adc
cmp
add
inc
sub
and
leave
ss
pop
cs
adc
shlb
lcall
jae
xchg
cli
lret
or
mov
and
adc
addr16
out
and
mov
push
in
push
icebp
sub
cli
popf
mov
or
pop
dec
jns
mov
xchg
jmp
repnz
pop
ret
mov
and
fildl
mov
rcll
lods
aaa
adcl
sbb
jns
imulb
adc
sub
addr16
lcall
mov
pop
mov
mov
push
pop
or
call
std
xor
xchg
or
dec
out
sub
lock
xor
inc
cmpsl
mov
mov
mov
stc
addr16
cs
shlb
jmp
fidivrl
adc
xchg
ja
push
lret
rcll
and
add
push
or
mov
xor
or
jmp
lods
arpl
add
xor
cld
jp
and
dec
add
mov
push
xchg
and
cmp
jmp
adc
add
inc
in
xor
leave
sub
and
jbe
imul
inc
cmpsl
or
add
pop
xchg
cmp
adc
das
sti
mov
out
loop
pop
mov
xchg
adc
mov
mov
inc
xor
and
int
int
or
dec
pop
pop
mov
sahf
push
lock
xchg
in
jg
das
cmp
pop
not
dec
in
aaa
or
mov
subl
mov
cli
cmp
clc
push
leave
and
dec
inc
xor
lea
outsb
lds
orb
ds
cld
roll
mov
pop
fbstp
mov
xorb
xor
loope
xchg
push
imull
ret
or
pushf
xchg
ljmp
daa
cs
ljmp
addr16
sbb
dec
fsubrs
sub
jg
dec
mov
adc
jge
pop
in
pop
or
inc
fs
bound
imul
jne
aaa
out
mov
aas
nop
inc
fucom
fidivrs
xor
mov
into
hlt
repz
leave
adc
aaa
jp
and
jecxz
lahf
cmpsb
mov
jecxz
pushf
enter
sub
mov
mov
fadds
arpl
mov
cmpsl
test
jns
xor
push
jb
xchg
ffree
fsubr
xchg
imul
jmp
sub
roll
lea
hlt
pop
sbb
xor
ljmp
mov
jno
ss
js
and
and
js
shr
test
in
inc
mov
sbb
mov
in
or
xchg
push
xor
inc
addl
pop
and
jo
or
adc
rcll
sbb
jge
inc
adc
scas
push
lods
push
popf
mov
rclb
loope
adc
mov
dec
sub
sbb
and
dec
jecxz
mov
or
pop
lods
sbb
xorb
scas
loop
xchg
clc
lahf
arpl
sti
mov
sbb
fldl
enter
mov
out
adc
loope
or
jno
xchg
mov
cli
or
insl
andb
mov
mov
mov
daa
movsl
cmpb
lret
test
xchg
pop
sub
std
mov
int
dec
or
xor
sub
push
jle
or
jecxz
sahf
jne
stc
cwtl
sub
pop
inc
and
popf
gs
push
dec
hlt
sahf
lahf
ficomps
or
lods
xor
jb
hlt
dec
cltd
repz
call
mov
xchg
pop
pushf
decl
std
jecxz
out
push
adc
or
dec
xor
mov
insl
arpl
loop
xchg
decb
add
insb
lret
pop
mov
je
xlat
rcrl
inc
push
cs
pop
loopne
mov
xorb
adc
data16
inc
pop
hlt
dec
xchg
aad
movntq
inc
aas
lea
sbb
shrl
lret
sbb
sub
adc
mov
xor
xlat
out
repnz
xchg
rorl
and
mov
loop
outsb
es
mov
lret
roll
dec
push
fimull
js
fidivrl
xchg
enter
test
dec
mov
pop
stos
into
xchg
jecxz
cmp
test
lock
es
cmpsb
inc
pusha
iret
pop
gs
xor
sbb
mov
cmp
nop
outsb
cmp
pop
imul
jb
mull
jl
push
add
and
mov
fcmovu
jbe
mov
xchg
nop
in
fdivrs
scas
and
push
cld
into
lret
aas
cmpb
ds
adc
jmp
fs
lret
ss
shll
add
push
xchg
shll
dec
and
jo
xor
testb
mov
push
fwait
sub
test
filds
rcl
push
push
cltd
xorb
cltd
lcall
xor
loopne
mov
mov
pop
or
mov
mov
outsl
fwait
mov
pop
mov
sbb
or
aas
xor
xchg
or
xchg
cmp
and
mov
into
xorl
add
pusha
mov
mov
out
sahf
mov
jne
mov
test
add
sbb
push
fsub
add
lock
in
ja
cmp
mov
xchg
pop
pop
adc
ficompl
adc
xor
push
mov
or
outsb
pop
out
pop
xor
xor
and
push
ficoml
sub
or
shr
addr16
xchg
sub
pop
mov
add
push
adc
pop
cwtl
fdivrs
cmp
xlat
jns
nopl
mov
repnz
xchg
mov
mov
mov
cmpsl
jo
xlat
dec
sub
push
into
scas
push
cs
or
sub
pop
subl
in
pushf
das
cmp
in
inc
fmull
add
or
aas
cld
fs
idivb
or
flds
adc
add
jle
repz
inc
test
jne
push
or
rorb
pop
les
jbe
cltd
insl
inc
out
sahf
ret
or
in
popa
add
add
and
sub
rolb
jne
jecxz
sbb
mov
sub
adc
adc
dec
inc
test
or
loop
xchg
enter
mov
loope
mov
stc
lock
and
add
mov
fdivs
lret
hlt
adc
mov
rcll
addl
pushf
mov
cli
movsb
shl
mov
inc
enter
div
jle
fs
divl
mov
cld
ja
add
xor
cmpsb
mov
inc
fdivp
pusha
into
xchg
movsb
or
xlat
mov
hlt
sti
and
inc
inc
dec
jmp
je
jo
das
lahf
sub
lret
in
and
cmp
jp
push
pop
add
sub
inc
mov
movsl
icebp
push
xchg
pop
imul
mov
xor
adc
add
and
sbb
es
lods
pop
lret
outsb
sub
bound
pop
in
or
mov
push
push
fwait
pop
cs
dec
shlb
rcll
enter
inc
sbb
mov
jns
add
mov
test
fs
jmp
mov
mov
adc
fwait
ss
dec
adc
dec
jns
mov
bound
sahf
xor
pop
test
and
xor
inc
ds
fsubrs
es
xchg
dec
shl
push
dec
mov
lret
add
lahf
sbb
jnp
mov
xchg
into
jns
pushf
pusha
xchg
bts
adc
out
fwait
in
gs
imul
ret
arpl
push
mov
or
ja
ja
push
testl
jmp
cs
mov
mov
rol
das
inc
add
dec
push
aaa
int3
nop
inc
nop
lea
dec
out
adc
xchg
inc
call
test
cltd
aad
aad
xchg
stos
fcomps
imul
mov
das
out
gs
xor
les
pop
xchg
mov
add
pop
aaa
lds
push
movsb
and
push
dec
mov
mov
add
pop
loopne
jo
subl
stos
out
gs
dec
lds
ret
repz
xor
into
leave
lods
dec
or
lock
push
inc
cmpsb
jbe
or
fldcw
scas
mul
pop
test
js
mov
cli
pop
dec
cmp
cmpsl
pop
loop
notl
sbbb
shll
sub
pop
push
unpcklps
ret
or
dec
bnd
and
adc
and
popf
jge
sbb
pop
ss
add
sub
xchg
mov
int3
ljmp
pmaxub
jnp,pt
sbb
icebp
lret
inc
adc
push
inc
aas
adc
outsb
pop
dec
rcll
imull
push
inc
addr16
iret
scas
dec
pop
dec
int3
insb
sub
out
mov
cmpsb
sbb
jb
mov
xchg
repz
mull
lds
mov
inc
or
add
add
xor
loop
or
shll
xchg
lret
pop
outsb
popf
fists
clc
xchg
rcr
xchg
push
mov
sub
sub
mov
sub
repnz
lret
out
jne
or
xchg
into
aad
out
ret
in
xchg
scas
imul
inc
mov
je
test
cwtl
xor
loopne
int3
les
int3
divl
sub
mov
pusha
shlb
mov
xlat
lods
jae
ret
out
xor
xor
mov
addr16
insl
pop
lea
test
xlat
pop
and
cmp
add
mov
jne
inc
test
mov
pushf
pop
cs
daa
push
cld
jg
lret
mov
mov
dec
lds
fcompl
jp
aaa
das
or
cmp
and
mov
xor
jmp
sbb
rol
popl
cmp
fiaddl
adc
les
out
ret
cli
jo
pop
cmpsl
mov
pop
xchg
test
cmp
lock
push
incl
cmpsb
or
xor
or
sub
outsl
stc
rcrb
inc
or
dec
jecxz
mov
fsubrl
xchg
nop
jo
rcll
test
mov
adc
mov
and
loop
popa
and
mov
push
push
mov
fchs
pushf
lahf
xor
lods
daa
mov
dec
inc
pop
adc
fisubl
mov
push
ljmp
lcall
adc
mov
daa
inc
fadd
mov
rcrl
sahf
add
inc
push
jne
jo
inc
fiaddl
add
in
inc
es
cmp
outsl
xor
call
xlat
jb
sub
int3
subb
pop
jne
adc
xor
inc
arpl
mov
loopne
repz
fnstenv
lods
lods
call
movsl
loope
ja
jae
adc
scas
dec
pop
es
and
cltd
lret
aaa
fwait
or
xor
adc
movsb
sbb
mov
lds
mov
mov
add
xchg
adc
arpl
push
mov
pop
jp
dec
scas
cli
out
in
mov
lahf
lahf
rcl
push
and
scas
data16
addr16
mov
push
in
pop
pop
pop
jno
fcoml
push
ret
mov
xchg
movsb
notl
sahf
push
insl
cmp
mov
mov
pop
cmp
movsb
dec
repz
outsl
out
jmp
imul
xor
mov
add
add
cmc
push
aaa
bound
sbb
mov
mov
mov
in
cmp
cmp
jns
daa
jecxz
fwait
lock
jge
mov
xor
mov
inc
and
xlat
leave
stc
cmovge
enter
fiadds
shl
dec
outsl
and
popf
pop
int
push
mov
cmpsl
xchg
jp
add
mov
sub
push
jecxz
out
sub
lods
rcrb
mov
jbe
mov
loopne
sbb
rcrl
cmpsb
aas
icebp
mov
xchg
testb
adc
cs
fdivs
insl
js
dec
mov
int
mov
or
xor
sub
les
lcall
in
test
push
fcmovb
daa
jle
sbb
cld
bnd
lret
mov
int
or
shrb
jmp
arpl
lcall
adc
stc
jmp
es
nop
sarl
out
pop
xor
cld
movsb
fwait
jne
dec
fs
dec
lock
xor
repnz
or
jns
and
cmp
hlt
adc
or
les
and
mov
fwait
out
push
mov
xorl
rolb
pop
into
int
les
aas
mov
movswl
aas
jp
std
xchg
or
pop
stos
sub
sub
push
cmc
dec
out
cmp
pushf
sbbl
and
stos
mov
imul
push
in
xchg
aaa
jle
popa
orl
outsl
rcr
cmp
mov
and
push
fs
out
cmpsl
arpl
lcall
rclb
cwtl
into
cmp
pop
repz
jb
xor
xchg
rorb
int3
or
xchg
cmp
sub
sub
pushf
ja
std
mov
es
add
popf
jmp
loop
xchg
lret
movsb
pop
std
mov
and
dec
js
push
ds
repnz
in
imul
cmp
out
dec
fadd
aaa
fwait
cmp
jne
shlb
lds
or
callw
xchg
aaa
xchg
pushl
mov
dec
xchg
mov
lahf
push
stos
in
mov
sub
push
push
stos
out
mov
nop
cwtl
inc
aas
repz
movsl
or
jno
andb
add
dec
scas
test
push
das
ja
adc
mov
jbe
mov
inc
lods
jb
and
xchg
movsb
ret
cltd
fisubrl
or
push
insl
pop
ret
xor
call
xor
mov
mov
notb
movsl
inc
xchg
mov
out
cmp
and
ss
fstl
inc
dec
and
ftst
imul
and
clc
add
mov
sbb
fucom
lret
sub
cs
insl
jnp
mov
popa
push
sub
insb
lcall
lret
sub
jp
outsl
adc
lds
xchg
push
dec
sbb
std
ss
test
imul
outsl
adc
and
mov
push
xchg
sub
push
push
sbb
insl
mov
adc
push
stos
rolb
mov
xchg
or
push
ret
sbb
sti
data16
xor
cwtl
cs
lcall
push
out
aaa
jo
add
data16
push
xor
mov
cmp
pushl
shll
jae
inc
push
insb
popa
push
mov
sbb
bound
pushf
dec
xchg
pushf
push
jae
movsb
pop
mov
mov
imul
or
push
pop
loopne
mov
std
adc
jecxz
jl
cmc
jecxz
mov
push
in
fldcw
mov
sub
or
jp
mov
lret
jg,pt
and
jnp
mov
ss
inc
outsb
jle
and
mov
movsb
inc
sbb
lods
lret
and
pop
add
bound
lahf
xor
test
loopne
pop
lds
sbb
push
stos
lret
aaa
daa
mov
adc
ja
dec
bound
cli
imul
addr16
xchg
push
mov
cmp
out
jp
pop
stos
xor
and
popa
xor
lds
mov
shlb
xlat
leave
ja
mov
pop
mov
cltd
sub
out
enter
add
stos
pushf
sti
mov
and
in
aas
add
xor
mov
fmul
xchg
sarb
and
imul
testb
mov
cmp
ss
popf
mov
cmpsl
mov
inc
jns
cmc
pop
jle
and
clc
scas
cmpsb
or
into
push
fsub
sub
mov
mov
jle
push
cmp
cmp
fcomi
mov
repnz
fldenv
push
mov
inc
out
out
add
jge
xor
roll
pop
rcrb
cmpw
js
jg
cmp
in
dec
rol
sub
dec
cwtl
cmpsb
mov
or
test
jecxz
pushf
push
pop
sti
push
stos
ja
pushf
mov
inc
xor
shrd
jnp
je
pop
mov
daa
xchg
push
dec
pop
fs
repz
mov
je
mov
gs
xor
imul
jnp
cmpsb
xor
ljmp
push
and
sahf
dec
rcl
mov
dec
pushf
mov
cld
xchg
mov
in
mov
rorb
daa
leave
sbb
fcom
push
arpl
xchg
lods
js
mul
subl
scas
loope
and
jmp
push
lock
dec
pusha
pop
vmovaps
xor
mov
xchg
xchg
out
jns
lcall
or
fistpll
sarb
fbld
outsb
in
push
fcoml
inc
bound
std
data16
sbb
mov
nop
subl
add
in
arpl
lds
jmp
cmp
sahf
cltd
adc
jns
outsl
sbb
adc
imul
mov
lcall
jmp
mov
pop
dec
repnz
cmpsb
js
movsl
sbbb
xchg
aam
in
cs
mov
in
js
lods
adc
mov
pop
data16
inc
bound
jl
setge
ja
pop
clc
add
popf
enter
mov
add
cld
push
out
inc
fdivrs
jmp
addb
imul
push
jge
or
aad
dec
leave
xorb
jmp
or
or
lahf
and
inc
jmp
add
aad
mov
dec
jecxz
cltd
dec
xor
daa
cld
cmp
inc
fisubs
pushf
iret
xchg
xchg
lahf
mov
pushf
add
and
ss
bound
adc
xor
outsl
subl
add
adc
and
scas
cwtl
dec
or
fdivr
dec
outsb
sbb
pop
aas
dec
adc
jecxz
pop
test
scas
add
popa
and
sar
shrl
sub
mov
fildl
xchg
xchg
push
pop
sbb
imul
add
outsb
fbld
cmp
adc
pop
mov
les
inc
aam
dec
mov
js
push
xchg
or
mov
je
xchg
mov
aaa
jle
and
or
push
mov
daa
jnp
jg
imul
cs
repnz
test
sti
addr16
lret
jns
mov
out
scas
das
ret
fnstsw
stos
mov
popa
ja
cmp
jcxz
clc
mov
fwait
and
repz
mov
cmpsl
lea
sub
mov
sub
jbe
and
sbb
mov
cmpsl
stos
and
sbb
xor
push
outsl
adc
lock
lcall
mov
or
and
test
in
sub
daa
jns
adc
dec
nop
fnstcw
and
mov
xor
pop
mov
lea
dec
addl
testl
and
or
inc
mov
ljmp
movsb
adc
jl
popa
mov
daa
ficomps
stos
mov
dec
imul
add
shr
roll
jmp
lahf
push
in
cmc
mov
pop
push
dec
cmpsl
mov
je
xchg
push
pop
adc
or
cmp
push
mov
fimull
xchg
mov
mov
in
sub
xor
push
fnstsw
push
add
stos
jp
xchg
lret
je
jns
mov
clc
and
inc
test
mov
xchg
stc
lcall
mov
mov
or
insb
addr16
loopne
jg
add
nop
xchg
gs
stos
push
pop
lods
aas
aad
cmp
loope
pop
jne
subb
enter
call
push
les
arpl
inc
gs
fs
xchg
pushf
sbb
xchg
loope
int3
int3
push
arpl
fildll
push
sbb
fldz
jge
cwtl
inc
xchg
sub
sti
repnz
pop
roll
inc
sub
jns
popf
test
pop
cmc
out
xchg
movsl
jns
xchg
popl
loope
out
mov
or
xlat
iret
xor
lret
clc
mov
pushl
insb
inc
and
into
dec
lds
roll
imul
inc
inc
mov
movsl
lds
js
leave
fwait
or
or
or
jge
test
mov
cmp
or
cld
outsl
lret
and
rorl
imul
fs
xchg
sahf
or
and
jnp
stc
lret
call
inc
jmp
dec
push
into
icebp
ret
or
shll
repz
pop
adc
push
mov
push
ss
adc
loope
mov
mov
dec
xchg
push
hlt
add
adc
mov
shll
outsb
dec
out
nop
inc
popl
push
dec
add
sbb
xchg
rol
stos
cmp
xlat
je
stos
lods
and
out
inc
push
out
clc
mov
ret
loop
fwait
adc
pop
adc
sbb
outsb
pop
hlt
fldenv
cmp
sub
jl
sarl
mov
xchg
in
lods
mov
adc
fdivs
inc
lock
sahf
jb
cs
inc
mov
jg
mov
and
sub
cmc
sub
add
cmp
fidivrl
ss
pop
mov
das
cltd
ret
cmpsb
in
loope
xchg
push
gs
or
aad
gs
mov
enter
mov
mov
pushf
mov
pushl
mov
lods
repnz
std
loope
sbb
outsl
icebp
mov
ss
movsl
pop
outsl
insl
mov
sub
movsl
pop
ja
in
in
es
and
mov
xor
dec
repnz
mov
xor
cmpsb
dec
cmp
inc
enter
sbb
gs
scas
push
out
out
jne
pop
mov
mov
aad
mov
pop
outsl
dec
stos
pop
cmp
pop
fsubp
sbb
pop
push
xor
inc
mov
mov
inc
mov
add
and
aam
jp
scas
lods
out
adc
push
pop
dec
add
aam
cltd
mov
repz
in
sbb
arpl
or
dec
scas
test
push
sub
push
lret
cli
test
cmp
mov
lea
test
xor
psubq
in
push
test
mov
lret
jle
sbb
imul
sub
daa
jle
add
out
mov
mov
pop
mov
mov
pop
cld
adc
lock
xchg
lods
jle
stos
lods
nop
xlat
repz
mov
icebp
inc
add
cltd
inc
add
jp
jmp
popa
cmp
andb
mov
frstor
xchg
rol
mov
cmovg
imul
mov
inc
push
xor
mov
sub
je
pop
call
loop
cmp
push
push
jno
jg
jmp
xor
cmp
inc
mov
xor
cmc
icebp
pop
mov
jae
dec
iret
mov
insl
arpl
enter
dec
bound
mov
ja
shlb
ret
add
mov
or
int
push
cmpb
icebp
stos
test
jne
lods
pop
es
ja
mov
push
cmp
fisttpll
mov
jno
mov
repz
outsb
scas
sbb
and
mov
stos
jbe
adc
mov
rclb
movq
icebp
pop
mov
mov
enter
jl
rolb
and
sub
idiv
rcrl
dec
cmovnp
inc
adc
fdivs
mov
jmp
mov
dec
rcrb
outsb
inc
fidivl
xchg
insl
stc
fisttpl
dec
ret
fnstenv
and
scas
xchg
sub
dec
xchg
push
jge
repnz
push
movsb
mov
std
imul
je
inc
dec
xchg
xchg
or
or
and
daa
outsb
stos
push
xchg
fisubs
dec
xchg
loope
incl
fildl
outsb
push
sahf
ds
dec
call
sbb
inc
pop
pop
push
fcompl
mov
pusha
xchg
out
cs
outsl
cmpsl
arpl
sub
enter
sbb
je
adc
into
cmpsb
push
fdivr
or
inc
xchg
or
filds
clc
dec
nop
push
fsubrs
inc
dec
mov
pop
imul
push
xchg
jns
sahf
adc
cmp
pop
sti
inc
adc
add
int3
and
pop
mov
pop
sbb
inc
lods
les
xchg
mov
push
enter
push
add
fs
outsb
or
and
iret
pop
push
cltd
cltd
cmpb
shlb
movsb
add
sahf
pop
pop
mov
xchg
notl
jae
push
fmull
adc
push
push
jmp
cld
mov
mov
dec
push
inc
ret
mov
mov
roll
xor
pop
and
xchg
clc
jl
fnsave
mov
popa
add
sti
popa
sbb
mov
addr16
aaa
in
xchg
adc
dec
lods
jne
pop
jae
repz
lcall
das
jne
ljmp
lea
inc
out
adc
in
xchg
icebp
push
push
pop
mov
push
or
xchg
mov
cli
out
lds
cmp
aad
push
test
scas
or
lods
insl
jns
push
pop
sbb
xchg
and
inc
shll
lods
mov
and
add
loop
lds
fsts
ds
xchg
push
jno
pop
mov
enter
dec
adc
and
clc
lahf
cmpl
js
xchg
rol
sbb
xchg
ja
adc
fstl
popf
sub
inc
lahf
pop
and
int3
lds
cli
sbb
ret
and
cld
mov
ret
dec
jge
lock
lret
jo
mov
mov
jmp
mov
out
mov
and
repz
add
mov
mov
ja
scas
jnp
adc
and
repnz
cmp
les
fnsave
insb
push
js
in
push
or
mov
mov
cli
movsb
dec
gs
lock
xchg
dec
incb
addr16
pop
in
jl
dec
repz
fwait
cmp
enter
out
or
cmp
xchg
out
ja
xchg
push
pusha
add
iret
loopne
pop
sbb
inc
xor
cmp
testb
pop
jb
fwait
push
test
lock
andl
cs
je
jmp
mov
inc
imull
cmp
rclb
mov
sahf
arpl
std
jo
xor
adc
or
mov
std
add
cmp
or
int3
mov
fdivrl
push
aaa
daa
fucomip
jne
es
push
lahf
mov
or
xchg
sub
mov
adc
sbb
aas
or
orl
xchg
ljmp
lods
sbb
fistps
fdiv
or
call
pop
cmp
jge
push
inc
insl
xlat
cwtl
leave
and
pop
and
cmp
jl
mov
loopne
xchg
pop
xchg
sbb
dec
mov
push
ljmp
lret
push
and
pop
repz
sub
mov
sbb
xorb
ljmp
bound
aaa
movsb
xor
out
in
mov
push
mov
jp
mov
or
mov
sarl
jns
cmp
nop
ljmp
push
mov
jo
popf
imul
icebp
xchg
cmpb
pop
adc
xchg
xor
push
pop
int
push
aad
add
jns
inc
cltd
mov
jl
xchg
mov
pop
dec
pop
push
jo
cmp
or
jne
add
dec
jbe
fwait
xchg
js
fists
repnz
enter
cmp
mov
and
sbb
mov
pop
pop
lods
mov
mull
pop
shlb
xchg
ret
repnz
push
sub
adc
ret
test
cltd
pop
subl
push
or
cli
mov
sbb
sahf
or
shlb
bound
push
out
push
mov
pusha
in
add
push
test
bswap
mov
scas
ror
push
cwtl
enter
inc
movsb
mov
icebp
out
jge
push
pushf
call
imul
pushf
mov
sbb
mov
into
sbb
xchg
mov
push
mov
ss
jmp
and
mov
lahf
mov
dec
mov
cmp
mov
cltd
adc
and
icebp
fadds
idiv
sbb
rcrl
adc
jge
outsl
fs
ficoms
ss
test
jmp
enter
imul
test
aaa
gs
sub
sub
xchg
mov
adc
jae
push
pop
dec
or
pusha
mov
mov
cwtl
pop
sahf
and
dec
adc
push
sbb
int3
jle
neg
jno
xor
shr
dec
mov
mov
shll
mov
mov
and
inc
outsl
inc
aad
dec
in
lea
dec
ds
dec
ds
xchg
jp
push
rcl
jno
add
push
divl
arpl
push
fdiv
bound
xlat
aaa
dec
mov
jnp
jge
and
js
lcall
push
mov
in
sbb
jns
mov
shrb
xor
dec
dec
test
mov
inc
mov
mov
and
rorb
sahf
stc
jecxz
mov
les
mov
and
pushf
ljmp
aad
notl
fwait
or
mov
pop
in
cwtl
pop
std
outsl
jge
pop
test
imul
jb,pn
in
rcrb
scas
cwtl
xorl
sti
sbbl
jae
jae
data16
pop
cmpsb
sub
ja
mov
mov
lods
adc
jb
push
cli
sub
adc
push
pop
stc
int3
cmp
dec
or
push
dec
xchg
enter
and
rcl
shrl
push
or
sbb
jns
dec
repz
pusha
out
lret
dec
sahf
sbb
mov
lock
mov
cmp
jo
test
fcmovnu
jecxz
sbb
cs
inc
gs
push
je
fiadds
jle
dec
int
jo
imul
adc
cli
inc
jae
mov
test
add
sbb
pop
and
adc
mov
or
rcll
xor
mov
imul
xchg
ret
insb
je
mov
hlt
inc
dec
test
fbld
pop
mov
idivl
in
and
rcl
js
in
test
mov
push
js
data16
cmp
and
inc
and
push
xchg
xchg
and
mov
lret
adc
cmp
inc
dec
mov
fcom
and
xor
inc
cmp
sub
push
jp
pushf
xor
out
int3
dec
icebp
fidivrs
pop
push
add
fmull
lods
lahf
test
jae
dec
insl
cmpsl
mov
adc
icebp
inc
sbb
jno
xor
jae
xchg
or
divb
out
mov
mov
or
into
push
andl
aas
imulb
or
lea
addr16
dec
mov
pop
inc
ljmp
rcll
lods
adc
push
lds
lret
divl
lds
jmp
leave
js
cmpsl
sbb
inc
cltd
imul
xchg
add
jns
pop
int3
repz
xchg
adc
mov
push
adc
sub
icebp
xor
adc
les
cld
and
mov
jne
sub
fiadds
xlat
push
ret
jb
aas
and
lock
mov
cltd
xchg
sbb
pop
aam
out
inc
fnstsw
push
xchg
insl
or
sbb
pop
rcl
sub
aaa
push
lahf
andb
mov
imul
shll
sbb
sbb
push
cwtl
mov
into
dec
popa
jbe
add
fsub
out
and
fwait
insb
add
mov
lahf
jbe
pop
test
mov
call
aas
sub
int3
out
negl
dec
rclb
xchg
push
mov
movsl
cmp
dec
fimuls
fmuls
insb
xor
xchg
lds
bnd
scas
and
leave
mov
and
push
cs
aas
xchg
pop
jno
std
into
push
into
xchg
stc
sbb
inc
push
add
dec
mov
cmpsl
jno
pop
stc
pusha
push
shrb
push
push
out
in
std
cmp
xor
xchg
cld
mov
pop
out
mov
xlat
repnz
mov
xlat
push
popa
jge
scas
lods
inc
orb
push
mov
imul
cli
sbb
in
int3
in
pop
lock
adc
jle
mov
or
popa
or
lods
sub
fildl
andl
xchg
pop
daa
xchg
xor
xchg
nop
cli
xor
mov
in
xchg
inc
mov
add
and
lods
xor
push
test
sbb
xchg
dec
push
cwtl
imulb
xor
mov
outsl
sub
cmp
cmpsb
test
je
lret
pop
push
in
stos
loop
cbtw
lock
lea
xchg
push
or
fs
dec
cmpsb
inc
pop
jle
les
mov
mov
ret
je
test
mov
adc
outsb
xor
cli
push
or
mov
mov
dec
mov
push
stos
test
inc
stos
pop
push
aad
mov
inc
mov
dec
in
push
mov
clc
dec
inc
jne
sub
mov
inc
loop
into
iret
cli
roll
sub
sbb
loopne
addl
jbe
ss
jl
dec
lock
and
shr
gs
js
mov
mov
and
pop
add
xchg
mov
sar
push
not
adcb
mov
fs
in
and
pop
loopne
das
push
into
notl
lahf
js
xchg
loopne
movsl
add
je
inc
or
adc
cmp
dec
inc
adc
jo
jb
pusha
ljmp
fadd
adc
add
lods
sbb
out
dec
aaa
icebp
adc
jp
sbbl
adcl
and
out
notb
pop
sbb
andb
sbb
pop
ficomps
inc
inc
scas
out
mov
sbb
jmp
add
and
out
movsb
cwtl
mov
ret
insb
pop
push
mov
adc
and
rolb
pop
jmp
sbb
inc
repnz
push
popa
mov
gs
stos
arpl
lret
std
cs
push
lea
lcall
dec
lret
lods
in
mov
push
push
arpl
rcll
jecxz
rclb
pusha
sub
std
fstpt
outsl
mov
xchg
enter
inc
idivl
jmp
call
xchg
ljmp
daa
rolb
lcall
nop
jae
jmp
jle
stos
int
pop
stc
mov
int3
inc
test
out
or
std
mov
mov
lret
cltd
scas
xchg
and
push
mov
xchg
mov
push
movsl
dec
or
repz
mov
lea
arpl
cmpsl
xor
mov
pop
decl
out
adc
scas
push
xchg
ljmp
mov
mov
in
in
cld
pop
popa
call
fisubrs
in
in
jo
test
mov
mov
sbbl
sub
fnstsw
lcall
push
insl
es
test
ror
push
std
mov
jecxz
pusha
fsub
push
xchg
and
mov
enter
cmp
enter
das
or
icebp
stc
dec
sti
and
nop
mov
outsb
cmovle
ficompl
ss
sbb
cmp
imul
pop
push
jl
pop
push
in
popf
jmp
cltd
sbb
fisubl
or
dec
ret
fsubrp
ret
push
scas
mov
scas
stos
xchg
jnp
gs
jmp
jne
add
outsb
popf
inc
push
cmp
ljmp
or
mov
pushf
hlt
jae
out
inc
jno
imul
scas
push
push
jl
ja
imul
fnop
in
decl
mov
cmpl
popa
and
xor
scas
nop
fs
pop
into
cmp
gs
add
jge
lods
mov
lret
ja
jmp
dec
pop
xor
imulb
sub
push
push
hlt
pop
or
jnp
jle
lods
mov
mov
in
xor
pop
xchg
dec
cmc
add
test
test
fsubr
cmp
sbb
mov
pusha
dec
xrelease
icebp
gs
lahf
jmp
pusha
syscall
mov
cmp
lret
es
add
ljmp
pop
adc
sbb
dec
xor
test
sti
xor
nopl
xor
fucomi
icebp
in
clc
xchg
dec
pop
add
cmp
mov
setns
jo
and
lock
in
inc
push
jb
cmpsl
xor
add
add
adc
dec
loopne
popa
add
or
lock
daa
adc
ret
mov
dec
pusha
lock
in
xor
pop
jns
add
jb
mov
or
pushf
inc
adc
mov
xor
inc
loope
stos
mov
jb
out
or
xchg
add
sub
lods
in
rcrb
mov
lret
scas
gs
icebp
loop
cvtpi2ps
lock
les
add
jmp
pusha
mov
in
jmp
xor
das
jne
sub
icebp
int3
push
mov
lahf
arpl
mov
or
xor
dec
jne
cwtl
add
adc
mov
out
ret
mov
mov
insb
jp
jns
add
outsb
dec
sub
pop
bnd
push
in
cmpsb
fsubl
decl
in
pop
push
or
testl
jnp
jecxz
movsb
mov
lock
pop
jo
int
mov
fsub
jmp
sub
or
dec
mov
xchg
mov
es
lock
jnp
pop
clc
jp
push
pop
insl
xchg
and
or
daa
stos
enter
popf
ffreep
xor
cld
fdivrl
clc
adc
lret
xchg
das
ljmp
sub
scas
mov
jecxz
jg
and
push
leave
imul
inc
or
clc
cmp
xor
fisttpll
jmp
idivb
jo
test
ljmp
jmp
jge
cmpsb
push
and
cmpsb
inc
mov
add
jl
sbb
pop
xchg
scas
in
mov
les
push
cmpsl
nop
pop
loop
xorl
lcall
push
xchg
inc
sti
div
test
ret
scas
in
jne,pn
inc
pop
ss
add
push
mov
inc
mov
and
sub
push
clc
jle
das
sbb
rcrb
push
out
adc
scas
mov
fistpl
dec
jno
std
sub
outsb
inc
cld
imul
punpckhdq
push
fistl
fs
sub
pop
inc
xor
push
dec
test
cmpsb
mov
test
jmp
or
int
adc
dec
sbb
outsl
dec
adc
cmp
dec
fstps
mov
jge
xlat
shl
bound
mov
out
jo
xor
mov
sub
mov
dec
lcall
mov
cwtl
pop
jno
add
lcall
or
add
sub
enter
lret
movsb
push
or
lds
movsl
mov
aaa
jno
popa
addb
pop
ljmp
xchg
push
jmp
repz
fnsave
or
mov
inc
cmc
or
push
push
addb
jne
fnstcw
in
fadds
jecxz
insb
cmpsl
add
add
test
cld
mov
jnp
sub
xorl
xor
mov
call
or
lds
call
stc
dec
mov
xor
in
xchg
in
mov
sbb
cld
fcomi
or
xlat
or
xchg
sbb
inc
mov
decl
cmp
dec
dec
andb
in
xchg
add
mov
imul
add
int
clc
mov
mov
cmc
sti
int
jno
lret
mov
push
cli
insb
fistpll
pop
sbb
xor
imul
iret
jb
popa
jnp
in
xor
scas
test
sub
or
lock
imul
sub
stos
xor
jmp
fs
and
xor
mov
cmp
inc
jae
fnsave
cld
lods
mov
sbb
loop
mov
fadds
mov
in
lahf
cmp
jg
sbb
xor
lods
iret
imul
int
outsl
mov
add
add
enter
imul
or
outsl
test
in
scas
bound
jns
push
mov
fcomps
sub
ror
loopne,pt
dec
lds
push
aad
shll
mov
mov
sbb
push
add
mov
add
in
or
hlt
mov
jge
fs
loope
dec
movl
sbb
hlt
mov
lret
mov
cwtl
or
gs
adc
cmp
add
xor
and
xor
outsb
outsb
subb
inc
mull
arpl
jno
mov
pop
pop
enter
pop
hlt
jmp
lds
cld
adc
and
cmp
pop
pop
xchg
mov
das
mov
mov
clc
outsb
or
repz
in
add
je
les
test
jb
jb
lret
or
fsubs
pop
imul
fucomp
xchg
or
cmp
sub
lret
jecxz
arpl
add
test
cmpb
sub
pop
dec
lea
pop
xchg
cwtl
mov
fidivl
pop
inc
loope
outsb
fstp
xor
adc
push
mov
imull
dec
test
push
mov
push
shrl
mov
cs
flds
and
shll
lock
cmpsl
fiadds
ficoml
mov
mov
mov
xchg
dec
mov
lret
sub
pop
out
cmpl
or
jmp
popa
mov
pop
or
out
daa
xchg
mov
outsl
je
jl
iret
inc
mov
iret
and
arpl
push
sub
outsl
iret
lahf
inc
xchg
fistps
out
add
adc
inc
cli
xlat
cmp
xchg
scas
xchg
push
test
mov
push
data16
xor
lods
sub
or
add
mov
mov
xlat
imull
data16
inc
or
les
out
lods
and
pop
pop
push
std
outsl
aad
jle
adc
jno
inc
cli
sub
add
ret
fwait
pop
addr16
lock
flds
push
sub
nop
test
std
insb
dec
bound
clc
icebp
cwtl
sbb
scas
pop
fiaddl
xchg
cmpsl
xchg
arpl
popl
mov
test
push
pop
sbb
clc
std
decl
das
xchg
sub
xchg
jg
lods
mov
pop
lods
out
xchg
mov
mov
sarb
jbe
sub
addl
and
mov
popa
mov
cmp
mov
cmp
pop
roll
adc
int
ljmp
outsl
shlb
fldcw
pushf
dec
or
stos
daa
lock
enter
hlt
inc
or
push
pushf
mov
or
inc
push
jle
out
ljmp
cmp
stc
lret
mov
in
push
ficoms
jns
inc
rclb
jge
rcrb
sub
pop
aaa
jg
pop
inc
mov
addr16
push
xchg
cmc
into
sub
pop
xor
jmp
outsl
mov
inc
daa
inc
scas
arpl
ret
adcb
ret
xchg
or
gs
inc
ja
mov
out
cmp
lock
pushf
lret
jl
sub
je
push
mov
sub
cmp
pop
mov
sub
or
addr16
and
mov
mov
and
lods
inc
sarb
ds
in
ret
dec
or
inc
pop
cmp
lret
push
scas
push
ja
sbb
jnp
aas
ret
xchg
or
icebp
xchg
cmc
pop
repz
lods
sarl
lods
push
iret
stc
xchg
cmp
es
les
fists
add
bound
inc
inc
pop
es
xchg
cmp
dec
push
cmp
lock
mov
fwait
inc
pop
mov
ret
repnz
lahf
inc
addb
repz
icebp
push
out
mov
jecxz
orb
pop
xchg
push
and
icebp
call
fst
daa
lcall
pop
in
aas
dec
sbb
add
jno
mov
frstpm(287
or
inc
scas
xor
aaa
cmpsl
jno
inc
pop
add
cmp
scas
in
test
cmp
lret
push
mov
mov
not
std
and
mov
jl
in
mov
loope
add
adc
mov
icebp
cli
xor
fs
rclb
lcall
in
fsub
jno
mov
push
push
cld
dec
repnz
dec
mov
out
adc
in
lods
mov
inc
xchg
adcl
mov
cld
cltd
cltd
cmp
push
in
dec
sub
sub
jo
mov
lahf
inc
arpl
mov
xor
movsl
inc
filds
lret
add
cwtl
ds
or
mov
fwait
xchg
cmc
and
inc
jne
xchg
mov
int
adc
movsb
fdiv
gs
aam
jmp
sarb
stos
jge
sti
add
pop
mov
enter
adcb
and
es
or
jae
mul
fs
lahf
and
test
pop
mov
dec
rcrb
or
sub
jno
sbb
loopne
std
shrb
mov
and
aas
ret
push
xchg
lcall
and
divl
jae
fadds
dec
cmp
jnp
ret
add
stos
cmp
pmullw
fs
and
jns
adc
pop
cs
ds
push
ror
and
ja
sbb
inc
inc
sub
add
addl
scas
sub
adc
andl
rclb
jbe
mov
sbb
mov
fmuls
mov
add
loop
inc
or
arpl
mov
aaa
cld
fbstp
pop
shrl
mov
inc
sahf
ja
scas
lods
ret
mov
aam
mov
mov
pop
jbe
stos
mov
mov
cs
dec
daa
xchg
jle
test
cltd
lcall
pop
mov
stos
adc
push
dec
into
inc
mov
adc
jbe
xor
sbb
pop
test
stos
decb
xchg
js
mov
mov
pusha
jne
rcrl
andl
repnz
and
fisubl
aad
arpl
dec
in
pop
lret
sahf
stos
dec
and
dec
leave
push
int
outsb
icebp
aas
clc
out
and
in
cltd
add
push
push
mov
cmp
ret
pusha
decb
mov
es
jns
into
cmp
in
pusha
sti
mov
rolb
sub
sbb
loope
ja
sbb
int
das
xchg
mov
push
fcompl
aas
jg
test
ficomps
out
cmpsl
cmp
iret
test
add
jmp
push
jae
xor
fstpl
dec
fdivrs
outsb
dec
and
jle
std
mov
roll
xor
jae
xchg
bound
xlat
or
cmp
inc
fincstp
dec
xlat
imul
movl
stc
pop
stc
push
sbb
test
push
jecxz
dec
mov
js
hlt
sub
inc
pop
js
push
lret
pushf
fs
ds
shll
xchg
insl
mov
call
xchg
xchg
xchg
adc
mov
cmp
dec
fists
ret
std
cmpsl
xchg
sbb
lret
push
orb
mov
xlat
sub
shld
scas
dec
mov
sub
adc
mov
and
pop
xchg
dec
push
sub
testl
int3
mov
mov
pushf
push
adcb
cmp
cltd
or
cmp
je
inc
xchg
and
inc
outsl
mov
outsl
das
lods
push
scas
cmp
jno
cli
push
iret
icebp
mov
jbe
jecxz
or
or
pop
xchg
pop
jnp
rep
xor
imul
sub
sti
icebp
cmp
inc
inc
jno
not
aas
xchg
outsl
lret
fistl
mov
sbb
imul
movsl
jo
or
mov
inc
sub
arpl
out
testb
and
lock
int3
xchg
cwtl
xor
divl
cmp
addr16
xchg
cmpl
pop
add
mov
inc
mov
jp
rorl
outsl
arpl
ljmp
xchg
imul
cmp
dec
roll
data16
icebp
xchg
pop
jecxz
xchg
test
mov
pop
loope
mov
fisubrs
pop
movsb
das
insb
xor
pop
push
aaa
js
cli
inc
out
cmp
aam
test
call
dec
mov
sar
leave
jmp
push
mov
pop
pop
aas
push
lds
arpl
xchg
xchg
push
cs
adc
lcall
mov
fwait
pop
rcrb
mov
rolb
push
mov
daa
dec
jl
sbb
je
cmc
addr16
and
pop
mov
imul
outsb
aaa
cmc
lods
loopne
out
lcall
sub
dec
addr16
test
inc
jb
lret
mov
sub
xor
or
fabs
push
inc
popf
xchg
mov
fwait
sub
pop
int3
fsubrl
push
addr16
push
sub
outsl
test
sub
cmp
add
pop
xor
pop
xor
ret
cmp
pop
popl
dec
mov
add
adc
pop
dec
cmp
loope
vpaddsw
pop
sub
push
push
pop
cmpsl
and
mov
ss
sub
xor
fidivrs
clc
int
sbb
stos
cmp
dec
lea
adc
fwait
ret
mov
cmp
add
push
mov
mov
or
cltd
xlat
fmuls
fiaddl
push
mov
push
je
jmp
hlt
mov
xchg
mov
sbb
pop
sarb
hlt
push
dec
lcall
mov
sahf
fdivp
mov
and
sub
into
inc
pushf
push
test
mov
ljmp
jmp
loope
iret
lcall
pop
sub
lock
fwait
insb
data16
out
mov
pusha
arpl
fnsave
add
test
cmp
cmpsl
sub
inc
adc
test
ja
inc
and
jne
inc
mov
call
sub
ficoms
add
xor
nop
xchg
aad
push
scas
jg
sbb
or
or
adc
mov
sub
sub
mov
shrb
xchg
dec
into
adc
jp
inc
jl
sub
or
outsb
icebp
xor
icebp
or
sbb
sbb
add
and
mov
adc
push
fucom
and
dec
jl
dec
lea
repnz
je
cmc
lea
test
inc
sub
push
xchg
aad
add
dec
lahf
sub
jg
in
ljmp
aam
fnstsw
roll
mov
rolb
pop
into
icebp
imul
cmpsb
scas
stc
push
jbe
jbe
nop
faddp
popa
hlt
shll
push
dec
or
cmp
add
bound
mov
adc
adc
fmull
cmp
xchg
mov
cmp
in
pushf
hlt
loope
jb
xor
mov
xchg
fisttps
or
rcrl
out
jl,pn
push
xor
pop
mov
xor
pop
pushf
out
sub
cmc
and
dec
addb
ss
cs
addr16
repz
mov
scas
pop
mov
dec
je
addr16
push
fisubl
out
repnz
out
icebp
mov
lret
xor
add
dec
mov
cwtl
sahf
cmp
xlat
dec
ss
dec
lds
add
dec
jle
cwtl
inc
xchg
test
inc
inc
int
xor
sub
dec
cmp
add
loope
mov
fistps
jnp
add
popf
and
es
mov
pop
outsb
mov
shlb
sub
in
gs
cmpsl
jg
mov
inc
movsl
push
sub
jg
mov
mov
aaa
xlat
add
jle
lret
pusha
mov
cli
xor
mov
mov
or
cmpb
nop
jno
jo
gs
fstpl
clc
cli
test
and
test
push
and
mov
mov
movb
mov
int3
int
and
xchg
imul
push
fs
or
sub
push
sub
fsincos
push
ret
imul
scas
pop
mov
in
imul
and
fadds
add
insb
add
je
or
insb
xor
adc
xor
pop
cwtl
or
push
or
sahf
out
push
fbstp
sti
dec
mov
sub
and
jns
fbld
es
add
stos
mov
les
out
fidivrs
loopne
aaa
jns
adc
daa
sub
xor
pop
and
int
inc
and
aaa
jnp
and
xchg
inc
dec
xor
mov
dec
xchg
lea
movsl
repz
shll
in
aaa
fisubrl
mov
xchg
insl
stos
push
inc
xor
sub
leave
adc
scas
nop
mov
imull
movsb
lcall
sarb
pop
shr
xor
ffree
inc
hlt
cmp
outsl
push
dec
sbb
fistpll
mov
and
lcall
dec
xor
icebp
hlt
dec
inc
roll
mov
fnstcw
jge
dec
sub
dec
mov
mov
js
idivl
push
sub
cmp
aas
out
nop
enter
push
cmpb
in
js
pop
sub
out
ror
push
imul
cmpsb
mov
cli
mov
sarb
jbe
mov
int
outsl
xor
stos
mov
pop
pop
mov
adc
sbb
js
aad
cld
inc
pop
jno
dec
test
int3
imul
int3
push
push
cmpsl
lcall
push
stc
inc
mov
arpl
xor
pop
sbb
xchg
in
dec
or
sub
and
stos
xchg
or
mov
inc
lea
imul
sub
dec
rolb
movsb
jecxz
cmp
ds
jne
outsb
ljmp
mov
rorl
out
mov
add
cmp
sbb
out
pusha
into
call
mov
test
fadds
inc
bswap
out
and
ret
push
push
ljmp
fldcw
ljmp
sbb
push
test
test
movsb
xchg
out
lock
ret
popa
adc
pop
iret
fstpl
push
fimuls
xorb
mov
lcall
sub
mov
arpl
mov
jle
insb
xchg
lcall
aaa
nop
lret
mov
div
rol
outsl
repnz
inc
ss
icebp
imul
pop
imul
orb
jg
mov
stos
dec
in
jle
xchg
out
lds
xchg
dec
cmp
dec
icebp
mov
sti
pusha
negl
gs
xor
cmc
adc
addr16
loope
adc
dec
jne
test
pop
dec
call
or
or
or
es
pusha
mov
add
les
ret
jle
lds
movsl
sbb
ss
jge
loop
inc
jno
ja
dec
pop
mov
ja
movnti
mov
mov
popf
pop
ds
popf
and
push
test
push
inc
pop
jmp
test
iret
lret
aad
jae
nopl
int
mov
push
xlat
dec
mov
mov
pop
mov
das
pcmpgtw
scas
cwtl
xchg
add
pop
arpl
xor
test
aad
mov
pop
outsb
call
shrb
xchg
lcall
push
push
xchg
out
inc
fidivrl
pop
fnsave
cmp
lret
call
icebp
loop
leave
iret
pop
in
loope
push
pop
mov
out
cmp
popf
add
sub
mov
test
es
imul
jb
lahf
out
test
stc
fwait
pop
mov
pop
mov
pop
out
fadd
cmp
sub
pusha
cmpsl
inc
push
push
add
sub
add
jno
lock
fbld
jle
test
jmp
stos
divl
push
mov
std
mov
mov
xor
push
adc
mov
push
inc
mov
push
jne
jl
test
sbb
adc
mov
jno
jnp
popa
addb
lret
cld
test
cli
mov
and
pushw
lods
shll
clc
int
ljmp
movsb
popa
ljmp
inc
fstl
fs
jne
sub
mov
pop
and
fildll
int
and
or
push
ret
test
sti
cmpsl
add
imull
mov
xchg
out
ss
fdivr
rclb
dec
sub
aam
jg
rolb
xchg
aas
fs
sub
mov
and
xor
test
loope
inc
out
nop
stos
lret
je
add
je
cwtl
faddp
movsl
adc
sbb
xchg
movsb
adc
out
mov
cli
dec
pop
out
lods
inc
fstpl
fwait
das
imul
mov
pop
sub
mov
pop
movsl
hlt
cld
imul
push
xor
iret
pop
jmp
cmp
mov
in
mov
gs
add
ret
mov
sbb
adc
insl
movl
repnz
decl
out
cmc
dec
and
test
setns
aad
adc
mov
jl
xchg
mov
sahf
jo
mov
sbb
or
xor
outsl
mov
fdivl
mov
test
nop
sbb
dec
sti
or
mov
lea
lcall
push
xor
xor
mov
add
clc
loop
jae
clc
mov
repz
xor
notb
push
xor
outsl
fiaddl
dec
pop
push
fwait
mov
fucomi
jae
mov
stos
xor
repnz
lods
lods
add
icebp
dec
jmp
jnp
pop
rcrl
testl
xchg
pop
scas
mov
pop
flds
inc
pop
out
sbb
or
std
adc
push
xchg
lret
fsubl
pop
pop
clc
es
sbb
jle
xchg
popf
xchg
sbb
xor
test
pop
jp
dec
adc
orb
jne
mov
cs
push
xchg
mov
stos
loopne
int3
cltd
lea
scas
js
mov
inc
adc
pop
xchg
mov
jmp
mov
gs
push
into
cs
mov
int3
mov
popa
inc
adc
fdivr
aaa
xchg
adcl
cli
mov
jmp
orb
mov
fs
int3
xor
loop
lods
sub
in
stos
mov
and
pop
scas
ja
out
gs
dec
jno
sub
and
cmpsb
push
add
or
push
mov
or
js
cmp
in
sti
sarb
inc
mov
mov
int
push
mov
insl
lods
in
subb
mov
or
fyl2x
mov
mov
cld
clc
cld
rclb
daa
adc
xor
mov
jg
mov
push
mov
out
pop
rorb
fdivl
sbb
filds
iret
outsl
in
mov
fwait
std
orl
sub
mov
test
or
or
add
xchg
lcall
and
cmpsb
das
je
sub
sub
fwait
jg
pop
cmp
fidivrl
fdivrs
cmp
xor
incb
mov
lods
lods
cltd
cmp
push
bound
out
add
mov
dec
ss
dec
js
es
repnz
js
cmpsb
iret
mov
rcl
jno
aaa
mov
mov
or
jbe
adc
mov
mov
or
mov
ret
int3
dec
lret
xchg
sub
or
imul
pop
cli
xchg
dec
insb
push
lds
xor
and
lods
pusha
mov
xor
cmp
pop
aam
loopne
fsubrs
in
cli
sub
cld
sbb
mov
gs
aad
adc
or
enter
cmp
pop
add
faddl
bound
movsb
mov
xchg
add
sbbl
stos
movsl
pop
lret
aas
mov
push
inc
cmp
call
inc
in
int3
sbb
add
push
inc
movsb
pushf
add
std
jnp
push
js
adc
and
xchg
cmc
lahf
icebp
cld
jae
xchg
js
push
incl
fs
sbb
mov
jo
mov
adc
or
dec
dec
mov
sub
xchg
jl
push
mov
inc
cmp
cli
ds
jne
add
cmp
adc
lods
hlt
cmpsl
inc
sahf
jg,pn
cs
ret
out
xchg
dec
sti
ljmp
fmuls
mov
cmp
sahf
orl
mov
repz
lods
push
push
jb
lret
cld
or
or
and
sub
lods
loopne
sbb
xlat
ret
and
add
das
and
cs
fcmovne
xlat
test
sahf
insb
mov
cmpsb
rcr
xchg
inc
mov
or
sbb
jp
mov
push
sub
mov
out
and
mov
and
cli
ja
sub
add
or
or
sub
ret
xlat
inc
xlat
jno
cmp
and
xor
sub
lret
push
mov
mov
pop
cmp
xchg
push
out
mov
fisubs
inc
xchg
call
repz
mov
xor
adc
pusha
jmp
in
test
inc
inc
rol
clc
std
in
stos
fcoml
jecxz
outsl
mov
add
xchg
ja
cmp
scas
xchg
xor
push
nop
clc
cld
cmp
nop
clc
mov
cmp
inc
and
xor
mov
nop
adc
fmull
pop
sbbl
insb
arpl
mov
add
mov
ficoml
cli
popa
pushf
lods
mov
inc
scas
movsb
xchg
ret
mov
pop
or
in
lret
adc
mov
push
lds
pop
std
incb
in
and
js
sbb
cli
add
sbb
js
xchg
insb
adc
out
add
and
inc
lcall
enter
in
add
adc
je
test
outsb
push
pop
jo
push
sbb
shll
icebp
mov
dec
push
test
push
inc
mov
lea
in
addb
data16
insl
mov
mov
cmp
cltd
std
sbbb
sbb
fs
test
shr
push
les
jo
cltd
xor
pop
cwtl
cmp
mov
adc
mov
push
inc
adcb
xchg
fcomps
mov
iret
jae
pop
sahf
dec
out
adc
pop
inc
pop
sub
jbe
push
jb,pt
sti
ret
push
aam
in
outsl
sub
ret
inc
repnz
fs
cmp
mov
mov
xor
aad
cmp
sub
sub
dec
loop
int
pusha
mov
sbb
jo
inc
xchg
in
faddl
jb
popa
movsl
jb
mov
enter
dec
pop
inc
dec
cmp
daa
adc
lds
cmp
cli
int
mov
loop
add
mov
pop
icebp
lds
sbb
ret
popf
test
sbb
cwtl
fdivrp
inc
popl
push
in
add
jb
jmp
adc
jl
iret
pop
test
movsl
mov
push
je
icebp
nop
push
sub
ret
rclb
rolb
fcmovb
pop
inc
push
dec
xor
cmp
push
aad
xchg
jle
lret
mov
fadds
inc
mov
and
insb
bound
sub
jnp
daa
les
mov
clc
push
incl
in
push
adc
call
outsb
faddl
cmc
jno
out
add
sub
pop
fdivl
add
std
adc
mov
xor
mov
mov
loope
mov
add
inc
clc
fwait
xor
into
xchg
or
jbe
jg
and
push
jae
jb
clts
sbbl
mov
mov
mov
gs
rclb
add
mov
sub
lock
popa
popf
insl
nop
ret
out
pop
sarl
ljmp
jp
jno
mov
sar
lods
xchg
sahf
pop
outsl
mov
test
cmpsb
and
cltd
push
std
or
pop
xor
jnp
push
test
lea
mov
int
test
fidivl
and
enter
mov
and
lahf
clc
pop
nop
pop
jbe
jne
fwait
xchg
out
insb
gs
addr16
loop
lea
lcall
mov
push
loopne
outsl
sti
mov
lcall
mov
fisubs
lods
dec
jle
mov
dec
dec
rcl
mov
push
or
je
xor
mov
imul
mov
sub
fistpl
cs
push
xchg
idivl
dec
pop
push
shl
pusha
cmp
lret
bound
and
aad
pusha
decl
pop
fldt
pop
dec
push
into
sbbb
dec
repz
mov
fistpl
jmp
xchg
adc
mov
lahf
lret
adc
adc
inc
jb
jg
int
nop
mov
mov
xlat
mov
adc
mov
imul
lods
cld
jne
movsb
inc
jp
or
cmp
cmpsl
fadds
jae
popa
xlat
mov
jnp
mov
out
sub
lahf
in
cs
cltd
jmp
mov
cmc
sbb
pop
cltd
lret
mov
xchg
dec
sar
sub
mov
push
inc
xchg
cmp
lock
or
fsubrs
movsb
add
jo
lods
js
dec
inc
cmp
in
sub
mov
sbb
mov
push
jo
push
mov
testl
sarb
lods
test
adc
add
sub
fildl
fcoml
in
add
jne
mov
shrb
xlat
fistpl
lret
andb
fcmovne
xor
lahf
adc
cmp
sbb
loope
cs
lret
cmp
faddl
stc
dec
fcompl
and
mov
pop
ret
xor
dec
sahf
xlat
into
movsl
xor
fnsave
scas
or
scas
lea
or
sahf
es
xchg
xor
or
dec
stos
sub
sub
mov
or
mov
pop
and
or
sub
or
mov
mov
loop
sbb
mov
imul
dec
scas
inc
stos
push
xchg
das
cld
daa
mov
aaa
gs
adc
stos
bound
sbb
fsts
pusha
jge
jae
repz
inc
mov
loope
subl
cmp
jge
hlt
rorl
xor
bound
xor
xchg
mov
pop
ret
jns
rcl
lahf
cld
sub
jbe
add
loopne
and
and
mov
imul
xor
iret
and
jmp
xor
xor
movsl
cld
pop
arpl
cli
mov
mov
adc
or
xchg
and
pushf
insl
inc
lcall
mov
nop
jb
lock
test
sbb
fisubrl
xor
lods
dec
mov
mov
and
adc
cmp
cli
inc
loop
rcrl
jno
cli
xchg
and
nop
call
into
sub
push
fmul
push
adc
cltd
out
leave
dec
lret
je
lods
adc
fnsave
repnz
push
in
sarl
cwtl
jecxz
adc
jnp
test
addr16
lods
push
lods
add
in
jmp
xlat
aam
icebp
push
nop
loopne
testl
imul
scas
push
pusha
out
rorl
or
or
xor
inc
lcall
shrl
pusha
push
jecxz
dec
mov
xchg
pusha
je
stc
pop
aad
outsl
xchg
pop
icebp
sahf
or
insb
rorb
shll
push
mov
das
and
je
sbb
jmp
lahf
leave
ljmp
adc
inc
ja
icebp
adc
enter
mov
call
xor
adc
rclb
insl
sbb
xchg
int
sbb
lret
divb
push
jle
repz
popa
test
mov
repz
jno
sub
lock
dec
adc
pop
xchg
xorb
or
xchg
ss
mov
push
sub
mov
push
into
xchg
shr
rcrl
xchg
and
pop
pop
mov
mov
push
pop
out
push
inc
rol
imul
add
testb
sbb
test
or
shl
repz
sbb
dec
mov
shrb
push
dec
scas
ds
inc
pop
push
inc
cmp
mov
fiaddl
les
sbb
inc
je
pop
push
pushf
dec
cwtl
scas
mov
repnz
fbstp
push
or
enter
enter
mov
inc
add
sub
mov
test
mov
pop
push
dec
adc
test
repnz
decl
adcl
cmp
sub
and
test
or
sahf
repnz
xchg
push
xchg
cmpsb
rcl
mov
mov
mov
int3
push
cmpsl
fs
jnp
lods
popa
push
xorl
add
mov
gs
cmc
cmpsl
imul
fiaddl
sub
push
sbb
pusha
addr16
sbb
mov
fdivrs
negb
jmp
or
mov
repnz
cld
mov
insl
repnz
mov
inc
pop
sub
push
pop
lods
xor
lret
pop
ret
mov
cmpsl
xchg
xchg
xor
fnstsw
ljmp
jb
movsl
hlt
jle
jle
jle
inc
sub
cmp
xchg
mov
inc
pop
and
cmpb
mov
aad
xchg
fdivrs
and
sbb
mov
xor
ss
cmovb
mov
lret
sahf
loope
sub
xor
repz
ficoms
cmp
mov
adc
pop
nop
push
test
fsubrs
add
aas
and
sbb
daa
mov
repz
inc
bound
fimull
add
push
ret
jne
mov
adcl
int
cmp
adc
lds
repz
out
outsl
shrb
mov
xor
in
rolb
outsl
pop
sbb
mov
ficompl
mov
push
sbb
pop
test
push
insb
or
stc
test
cmp
mov
loopne
pop
dec
idivb
jle
inc
xlat
dec
std
test
mov
cwtl
mov
mov
loope
xchg
shll
fs
add
addr16
dec
and
sub
push
arpl
sti
mov
mov
push
ret
loopne
push
jp
sti
fnstenv
jle
rcll
fadd
sbb
push
scas
dec
decl
xchg
pop
daa
repnz
mov
stos
xorl
sbb
mov
ja
xchg
in
mov
jmp
xor
rclb
cmp
fdivl
add
imul
add
cmp
push
xor
sub
xchg
fucomp
fcomps
inc
adcb
shll
shl
sbb
insl
jl
mov
jo
cs
mov
mov
clc
jnp
rorb
or
mov
pushf
pushf
push
test
repnz
sbb
push
dec
push
std
sub
mov
add
roll
cwtl
cwtl
cmp
loope
xor
aas
inc
mov
fdivrs
aaa
loope
into
xor
mov
adc
pop
sar
add
mov
lock
int
shlb
sub
into
iret
lds
ss
lret
sarb
mov
and
mov
insl
ficoml
adc
mov
xlat
pusha
ds
cmc
into
add
xor
add
inc
js
mov
sbb
lods
inc
add
test
mov
push
sub
add
cmp
out
mov
lea
test
cmp
stos
pop
pushf
imul
mov
mulb
push
xor
lcall
xchg
popa
xor
inc
xor
mov
fst
out
mov
jne
cmp
push
push
ja
fldl
daa
lods
test
mov
iret
add
aas
aam
add
mov
lea
xor
xchg
ret
test
xor
push
insl
fdivp
mov
sbb
lods
or
out
adc
add
mov
cmpsb
ret
test
xchg
loope
inc
or
xchg
mov
mov
xchg
inc
xor
scas
push
std
jge
in
mov
cwtl
xchg
ss
push
sbb
mov
hlt
insb
out
ss
cmp
cmpb
mov
cmp
cs
pop
data16
in
into
repz
sbb
add
mov
sub
repnz
mov
je
movl
orb
or
and
jmp
js
mov
mov
cwtl
push
sbb
out
int
cmp
repnz
mov
inc
jg
js
scas
inc
sarb
xchg
or
push
subb
pop
in
mov
enter
or
xor
dec
test
nop
jl
sbb
int3
setne
cmp
cs
ret
popf
add
movsl
mov
or
xor
xor
leave
xor
push
lods
mov
in
cmp
loopne
jnp
adc
push
icebp
and
jno
fnsave
xor
cmp
pusha
mov
xor
mov
jb
ret
mov
decb
xchg
adc
dec
xchg
outsb
dec
mov
flds
jo
sbb
aas
mov
xchg
mov
stos
js
mov
mov
and
pop
bound
lahf
mov
test
into
and
scas
add
out
iret
fsubrp
andl
dec
jle
adc
pop
dec
out
and
mov
xchg
pop
sub
ds
rorl
outsb
sub
std
jp
jp
xlat
inc
xchg
mov
jb
hlt
xchg
mov
movsl
mov
outsb
jno
dec
lds
into
rorb
push
push
mov
add
add
sbbl
xchg
inc
lcall
lock
daa
inc
shrl
jns
aaa
dec
out
sbb
sbb
std
outsl
nop
add
cmp
xchg
cmp
or
mov
cld
adc
sub
mov
jle
rcpps
inc
sub
mov
sbb
jo
iret
dec
fidivl
std
mov
aad
fsubp
out
xchg
jb,pn
cmp
faddl
dec
addr16
jecxz
xor
sub
inc
jns
xor
cmp
cmp
stos
je
mov
lods
sbb
push
add
ss
and
cmp
and
mov
ljmp
jp
or
data16
sub
pop
sub
std
mov
fs
xchg
in
and
mov
popf
push
mov
sarl
push
fs
adc
lahf
ret
mov
mov
mov
xchg
and
xchg
mov
adc
fsubl
sub
inc
gs
cmpb
sbbb
mov
jns
pop
push
loopne
cmp
aad
xor
jno
into
ss
mov
mov
aas
pop
adc
add
sbb
pushf
popf
push
jnp
push
sub
or
xor
push
pop
shlb
xchg
call
cld
sbb
ffree
mov
jl
jg
test
in
pop
shrb
cli
in
push
clc
adc
pop
cmp
rorb
dec
jae
in
inc
push
out
ss
cmp
not
adc
mov
pop
in
adc
outsb
ljmp
push
or
push
pop
push
rcl
testl
in
inc
and
mov
sbb
or
and
sbb
int
cmp
push
je
pop
add
stos
out
jo
inc
stos
dec
jno
mov
rorb
int
out
mov
jbe
adc
fiadds
xor
pop
inc
int3
push
xor
inc
inc
xor
mov
hlt
scas
pop
dec
scas
std
ret
aam
push
xchg
push
test
mov
ljmp
mov
loop
das
out
incb
pop
or
or
lock
sysenter
dec
loop
fisubrl
jmp
jg
mov
xchg
stos
push
popw
flds
stc
in
daa
loope
cmp
dec
loop
pusha
push
mov
test
ret
imul
leave
mov
addr16
pushf
xchg
xchg
inc
jno
test
insl
mov
ja
scas
out
cs
popf
shlb
test
mov
and
cmp
addb
sub
xchg
stos
out
push
test
ja
pop
mov
fcmovu
ja
sub
bound
pop
mov
mov
mov
rcr
sbb
test
fistpl
nop
xor
xor
repnz
stos
shlb
shlb
fidivl
ret
fadd
repz
sub
and
hlt
rol
mov
pop
aam
int3
inc
adc
xor
xchg
mov
cld
inc
imul
mov
lods
pop
nop
dec
sbb
or
xor
daa
in
rol
ljmp
shrl
sbb
pusha
push
jecxz
mov
xor
push
std
loopne
pusha
and
xlat
cli
dec
fsubs
pop
arpl
lret
dec
out
cli
add
aas
or
add
pop
and
ret
div
jo
out
sti
cmp
cltd
xchg
scas
cmp
dec
pop
add
xorl
es
cmp
movsb
xchg
sub
pop
push
outsl
daa
adc
ficoml
bound
push
outsb
lea
in
xchg
fld
iret
les
imul
movsl
ja
pop
fcoms
orb
cmc
jne
dec
cwtl
neg
pop
test
jmp
scas
fsubrs
jecxz
mov
leave
push
rcrb
xchg
xchg
gs
or
into
int
ds
test
aam
out
lret
stos
daa
loope
rcr
jns
push
out
and
aas
jle
flds
test
loop
xorl
loopne
cmp
clc
movsl
stc
lret
dec
mov
sbb
add
fildl
cwtl
cmpsb
sahf
mov
leave
jecxz
pushf
sbb
push
test
fisttps
fistpll
add
pop
mov
loopne
jle
jne
or
push
lret
dec
pop
iret
test
fdivl
or
daa
cmpsl
jnp
dec
in
lods
dec
or
outsl
mov
or
xor
lahf
and
mov
sub
or
fistpl
je
add
xorl
inc
xchg
rorl
js
xchg
mov
push
loop
jmp
and
repz
lahf
in
cmp
sub
sarb
in
popa
ss
sahf
clc
mov
subb
push
add
sti
daa
push
push
bound
mov
sahf
outsl
fxam
mov
lods
cs
or
ljmp
push
lahf
fidivs
les
les
push
sub
push
cmp
dec
mov
ret
mov
sub
pop
mov
sub
loopne
ret
gs
inc
stos
mov
xchg
jb
adc
cwtl
jns
mov
jecxz
mov
dec
inc
mov
add
shlb
fdivrl
inc
lods
xor
cmp
adc
mov
xchg
daa
int3
pop
inc
sbb
xor
inc
arpl
aas
add
jnp
mov
mov
int
dec
mov
iret
mov
push
mov
dec
xchg
in
mov
jb
pop
dec
mov
jbe
xor
aas
mov
stc
cmp
mov
pushf
jb
ds
push
or
loopne
aad
or
jno
mov
dec
xor
fadds
push
addr16
sbb
cld
insl
xchg
push
mov
lahf
shrl
mov
rsm
shrb
pop
inc
in
xchg
mov
push
mov
repz
ret
or
inc
xchg
into
pop
mov
out
jge
outsl
cmp
mov
mov
pop
out
call
dec
mov
shrb
mov
lret
lcall
je
cltd
mov
and
dec
mov
push
jo
push
aad
lock
dec
xchg
scas
fs
mov
and
pusha
lds
sbb
rolb
sub
or
adc
lret
ret
inc
mov
jl
push
inc
pop
mov
jae,pn
pop
or
addb
outsb
cmp
icebp
lods
push
and
loope
cld
dec
popf
mov
scas
outsl
cmpsb
rorl
aas
cmp
shll
or
sub
scas
jmp
leave
or
addr16
aam
jb
mov
mov
lods
loope
push
or
xchg
repnz
test
mov
and
ljmpw
ja
or
movsb
inc
push
sub
sbb
adc
imul
in
jl
in
imul
nop
push
arpl
je
pop
aam
lock
lahf
js
imul
xor
enter
loope
dec
xor
jg
push
stos
xchg
lcall
sub
push
lahf
out
xor
sbb
sbb
icebp
ljmp
adcb
iret
cmpsb
lahf
push
inc
mov
mov
xchg
and
sbb
in
outsl
xchg
pop
iret
sbb
mov
aaa
jl
sbb
or
adc
adc
dec
icebp
mov
adc
mov
rorl
repnz
xor
mov
jl
sbb
clc
stc
xlat
leave
mov
pop
loopne
ret
jl
push
mov
push
lods
mov
stos
adc
cmpsl
push
jmp
and
dec
pop
mov
stos
jae
sahf
call
and
mov
je
fimull
jo
xchg
fildll
fistps
enter
jns
and
mov
xor
outsl
cmp
lret
lods
adc
fcmovne
jmp
mov
aad
inc
shl
push
xchg
add
xor
cmpsb
sti
mov
std
xor
mov
into
cs
push
and
fistpll
jecxz
js
push
sub
shlb
sbb
mov
push
inc
loopne
nop
out
inc
xchg
insl
dec
xor
dec
pop
rcll
jecxz
xchg
lret
test
mov
aas
inc
sub
andb
xchg
mov
test
jge
jmp
xchg
dec
stos
push
clc
repnz
mov
je
rcl
push
cmp
xchg
aad
lods
in
pop
es
pop
adcl
mov
scas
adc
cmc
pop
mov
add
out
in
jo
sbb
cs
push
or
jb,pt
gs
inc
inc
cmpsb
inc
fsubrs
lahf
mov
mov
test
jbe
and
inc
mov
add
pop
fldl2e
jb
ret
in
rcll
mov
or
sub
call
les
dec
and
fdivs
sahf
xlat
jno
mov
dec
jb
ret
sub
out
mov
mov
dec
les
aam
inc
mov
jnp
mov
clc
jge
inc
sbb
ficompl
jo
cltd
and
inc
subb
jge
xchg
sbb
imul
movsb
cmpsl
dec
out
mov
out
rclb
mov
gs
aad
cmp
inc
or
pop
inc
adc
mov
mov
xchg
adc
test
lods
outsb
aas
cli
or
fdiv
mov
push
cmp
mov
daa
or
and
daa
imul
testl
xor
pop
sub
fstpt
xchg
data16
jecxz
mov
and
insl
js
mov
mov
fimull
fisubs
imull
sarb
bnd
or
jl
or
icebp
aaa
js
subb
mov
adc
pop
jle
loop
cmc
negb
jp
add
fistpl
out
jmp
push
or
push
mov
cwtl
das
and
and
roll
jg
std
sub
lds
or
add
jg
cld
aaa
sbb
pop
push
jno
rcl
lahf
sbb
les
lret
movsl
add
femms
addr16
cld
sbb
xor
mov
decl
sub
addr16
push
xchg
lods
daa
or
mov
sub
xor
sbb
push
mov
xchg
iret
scas
fldcw
mov
or
jbe
xchg
inc
in
adc
out
loope
aad
mov
sbb
dec
shlb
stc
jg
lea
lcall
lods
inc
jne
shl
xchg
in
cltd
or
scas
outsl
jno
cwtl
cwtl
sub
stos
push
sti
repz
cmp
jmp
xchg
stos
ret
mov
sbb
mov
stos
int
int
call
inc
gs
fs
xlat
sbb
or
push
jecxz
mov
fstpl
add
lahf
pushf
ror
cmp
cmpsb
mov
orl
xor
mov
rcll
push
xor
jle
pop
pop
jmp
lods
cmp
cmpsb
sbb
or
in
je
leave
mov
sbb
stos
cli
dec
fimull
ds
jmp
sub
adc
cld
repz
jge
rorl
xor
add
lret
fisubrs
lods
mov
mov
sub
mov
mov
loope
pushf
xchg
lds
fmul
js
jge
leave
in
sahf
push
rcl
add
xor
lcall
inc
out
and
pop
es
das
leave
push
or
mov
popf
int3
mov
sub
aas
pusha
ret
pop
pop
in
sub
into
xchg
dec
int
aas
xor
loope
xchg
pop
pushl
xor
jo
das
pop
leave
xor
popa
outsl
lahf
roll
cwtl
aaa
negl
push
dec
mov
int3
pop
shlb
push
sub
dec
mov
imul
pop
push
or
push
push
lcall
das
pop
mov
es
fs
jae
pop
out
sbb
int3
sar
mov
ja
in
mov
push
sub
notl
aam
inc
inc
ja
fidivs
pop
int3
and
aas
mov
push
ficoml
call
divl
mov
into
jne
icebp
test
sahf
pop
cmp
inc
test
jbe
clc
pop
je
and
test
mov
push
jbe
dec
std
es
mov
out
mov
or
xor
jmp
loope
les
incb
pushf
cmp
ret
sbb
and
mov
inc
jl
lret
add
cmc
mov
mov
jge
lods
sbb
add
lahf
xor
xor
subb
cmp
out
cmp
inc
jmp
push
data16
mov
push
fstps
test
sub
fsubr
es
xchg
lahf
pop
mov
repnz
inc
mov
in
adc
cmp
insl
cmp
lea
imul
adc
scas
dec
and
xor
push
les
repz
sbb
push
cmp
xchg
push
or
mov
or
jge
jecxz
and
aas
outsb
pop
addr16
and
shr
cmp
loope
sbb
faddl
jl
clc
andl
inc
mov
or
or
fidivl
rcr
in
ja
out
ds
pop
and
sbb
push
aaa
push
adc
lods
aam
stos
movsb
andl
insl
mov
std
inc
mov
clc
inc
out
adc
pop
insb
movsl
cmp
aas
jbe
stos
cmpsb
mov
push
mov
popf
bound
xor
sub
ret
push
mov
jo
imul
int
xchg
in
adc
icebp
aad
pop
adcl
mov
mov
xchg
rclb
repz
jno
lret
mov
or
jb
xchg
sub
cld
stc
mov
cmp
bound
xor
in
sub
adc
sub
out
mov
dec
xchg
mov
or
jl
leave
sub
sbb
jno
jo
dec
dec
add
xor
xor
cmp
dec
ds
sbb
int3
add
mov
addr16
cmp
jle
in
ret
popa
mov
dec
mov
inc
loopne
jp
push
in
pop
sarb
std
xchg
push
adcb
xabort
adc
fcomi
push
push
movsb
and
sbb
sbb
in
or
pop
popa
fstpt
lret
sahf
call
lahf
jp
in
cmc
flds
sbb
and
mov
rorb
test
shll
lcall
scas
loope
jp
insb
subb
out
jbe
stc
icebp
cmp
addr16
adc
into
lahf
pop
cwtl
dec
sub
add
repz
les
cmp
out
adc
mov
adc
inc
jg
or
leave
mov
sbb
loopne
jp
lds
rclb
mov
test
jg
and
cmp
mov
cmp
mov
jno
rorl
fdivrl
sub
or
push
pop
jl
scas
cmp
test
out
push
jnp
fldenv
mov
cmp
imul
addr16
roll
not
mov
jle
pop
gs
inc
xor
xorb
ret
mov
mov
xor
mov
push
outsb
add
cltd
ret
xchg
popf
test
fdiv
pop
addr16
pop
jl
cmc
roll
pop
jb
lret
in
xchg
rclb
mov
adc
pop
cmp
add
mov
sub
lods
ja
hlt
into
mov
into
test
scas
aam
test
popa
mov
inc
cmp
adc
loopne
sahf
pop
cmp
push
cmp
loope
mov
cmp
cbtw
lds
mov
enter
push
fs
mov
in
test
repnz
dec
pop
xor
ret
aad
push
rolb
shlb
lea
jp
and
cmpl
scas
enter
mov
mov
ja
sub
jmp
jno
rclb
add
mov
scas
clc
sbb
dec
mov
mov
sti
or
pop
mov
jno
in
pop
and
outsb
ret
ds
insb
add
popa
push
cmp
sbb
sti
and
xchg
lds
xchg
jge
imul
ja
add
aas
fwait
inc
pop
adc
xor
adc
ljmp
ret
xchg
es
pop
ret
mov
mov
inc
mov
jo
fwait
cwtl
mov
jmp
or
jg
sub
xlat
js
sbbl
mov
inc
stos
movsb
pushf
ret
pop
sbb
mov
shlb
nop
xchg
fs
xlat
dec
fidivrl
icebp
jnp
lcall
out
or
leave
pushf
mov
faddl
in
push
and
fnstsw
lahf
push
dec
in
dec
jns
rcr
mov
cmp
movsl
iret
pop
sub
pop
fucom
test
cmc
ds
rcll
and
fs
pop
rolb
xchg
addb
pop
xchg
mov
fsubl
mov
icebp
add
pushf
fwait
xrelease
pop
push
mov
or
jge
ljmp
xor
xchg
fidivrs
movsb
push
push
cmp
std
adc
das
rorl
test
imul
pop
pop
jbe
loopne
mov
sbb
mov
imul
mov
rol
sub
jbe
pop
pushf
pmulhuw
mov
or
add
scas
and
test
jmp
sbb
cmc
je
aaa
mov
inc
leave
out
or
sti
and
fisubrl
sbb
mov
push
std
xchg
xchg
loopne
inc
xchg
sub
fwait
in
sub
pop
jae
lea
jle
mov
jle
inc
popa
inc
or
cltd
xlat
es
mov
bound
arpl
dec
mov
rolb
fwait
cmp
dec
jmp
add
cmpsl
gs
lock
inc
push
notl
fmull
mov
dec
sub
loop
das
xor
out
lea
loope
mov
fsubrl
js
dec
xor
or
adc
push
test
xchg
jl
and
jnp
out
or
leave
push
add
stos
test
xor
js
cmpsl
jno
leave
scas
aam
push
pop
ficompl
lods
xchg
imul
testl
and
sarb
lcall
insl
mov
jbe
pop
mov
push
push
mov
fldenv
jb
mov
sub
mov
test
inc
test
repz
dec
push
inc
adc
bnd
pop
xchg
jmp
aas
mov
sbb
cltd
pop
loop
adc
pop
sahf
in
pop
rsqrtps
push
cmp
sub
stc
and
pop
jp
jae
adc
mov
xor
jnp
pop
test
sar
fdivs
add
cmp
add
scas
push
subl
and
jmp
repz
cmp
add
cmp
cmpsb
icebp
jno
jg
inc
ja
cmp
fwait
in
adc
hlt
lods
test
outsb
xor
scas
xchg
test
xor
mov
and
test
mov
popl
in
std
jp
lcall
insb
mov
and
mov
sbb
sbb
pop
mov
mov
and
rep
sub
sub
enter
mov
jge
and
jo
push
dec
adc
mov
stos
cltd
sub
stos
sub
dec
jnp
hlt
test
push
mov
movsb
jnp
jl
jp
dec
sbb
cmp
leave
jae
dec
and
sub
dec
jmp
lea
cmp
add
dec
repnz
pusha
addw
test
add
incl
das
insb
add
lods
dec
sahf
mov
cs
adc
jno
push
call
std
adc
xchg
add
add
pandn
mov
outsl
or
lods
adc
int
mov
aas
inc
push
dec
les
das
pop
xor
sarb
in
sbb
lods
popa
stc
sub
insl
mov
mov
dec
push
cmc
lret
add
mov
mov
jbe
sub
in
lds
xchg
idivb
pop
mov
outsl
outsl
dec
add
fs
fyl2xp1
pop
iret
stos
imul
divl
adcl
mov
dec
mov
sbb
push
dec
sbb
stc
fsubl
xor
push
xchg
mov
dec
push
and
gs
inc
pop
xchg
movsb
adc
mov
test
mov
push
idivb
outsb
xor
std
or
ds
shl
popa
incb
add
add
sbbb
jno
pusha
sub
test
push
jmp
daa
ljmp
hlt
icebp
test
sbb
mov
xchg
dec
movsb
aaa
lock
ja
dec
aas
push
lret
mov
pop
lock
pop
pop
enter
mov
insb
push
add
mov
subb
mov
xchg
push
cmc
adcb
sub
xor
adc
mov
pop
sub
mov
and
fimull
pop
movsb
mov
loop
xchg
out
jb
lret
mov
inc
sub
xor
sub
mov
xor
inc
into
movsl
inc
mov
pushf
adc
pushf
xchg
xchg
adc
inc
int
inc
or
cwtl
into
dec
dec
movsb
cmc
and
fs
cld
test
dec
jmp
xor
cmp
into
out
and
xor
loopne
dec
lods
ret
popa
mov
ljmp
pushf
mov
lret
testb
insb
enter
mov
add
or
and
mov
pop
aad
cmpsb
enter
sbb
push
lret
add
test
gs
pop
and
push
jae
scas
gs
pushf
addr16
ret
pop
into
nop
add
push
mov
pop
mov
xlat
insl
clc
repz
negl
add
mov
mov
push
pop
inc
scas
mov
mov
int3
xchg
aas
loopne
sub
fwait
and
cs
mov
add
das
pop
xchg
rorb
in
jle
rorb
xor
and
and
lcall
lcall
fnsave
add
adc
shr
out
add
fidivrs
loope
push
mov
js
jns
xor
mov
inc
dec
mov
sbb
std
stc
sub
scas
pop
mov
jb
xchg
popa
stc
dec
and
fcmovne
mulb
outsl
sbb
push
insb
les
sub
and
pop
adc
mov
ljmp
data16
lahf
movsb
cmp
ret
and
inc
push
ja
inc
cmc
inc
dec
cmp
mov
outsl
das
cld
mov
push
nop
nop
lock
stos
idivl
sbb
mov
dec
jmp
es
mov
xchg
pop
adc
dec
cwtl
jae,pt
pop
into
jecxz
in
cwtl
aas
std
mov
outsb
jmp
aam
add
sbb
inc
dec
inc
mov
inc
push
mov
lret
push
shrb
dec
out
in
movsb
mov
in
adc
sbb
and
cmp
pop
mov
jl
imul
add
loope
pop
mov
test
jns
gs
imul
fisubl
inc
cmp
outsb
pushw
iret
mov
cli
jecxz
mov
push
or
jl
punpckhdq
pop
ja
lds
imul
lret
out
pop
lret
push
sub
stc
lcall
cmp
lods
or
add
xchg
cmp
and
sbb
sbb
inc
out
repnz
sbb
cmp
in
push
sbb
and
push
mov
or
pop
hlt
or
xchg
icebp
push
pop
dec
in
sub
stos
inc
or
mov
jns
les
int3
push
lret
popa
lahf
pop
fs
xchg
add
xor
daa
xor
mov
cwtl
pop
add
outsb
call
test
es
pop
mov
fistpl
pop
lcall
add
mov
mov
or
mov
cmp
cltd
loopne
int
decl
shll
jns
int3
pusha
push
mov
clc
call
cltd
dec
mov
xchg
xchg
cmp
shrl
push
test
cmp
or
mov
mov
lahf
sti
mov
inc
dec
dec
jge
jb
mov
cld
jmp
jo
and
sbb
test
xor
pop
mov
mov
imul
sbb
mov
fists
sbb
xor
adc
lahf
mov
sub
xorb
mov
mov
pop
add
adc
clc
orl
in
add
jne
xor
cmp
mov
jno
notb
rorl
jno
sub
sub
add
ljmp
leave
repz
mov
inc
rorl
jmp
jg,pt
add
xor
xchg
mov
xchg
xchg
jmp
dec
std
xor
and
cltd
cli
dec
mov
and
jecxz
cld
mov
fisubl
mov
xchg
cmp
bound
int3
mov
mov
pop
xor
mov
or
out
mov
jmp
nop
pop
inc
xchg
dec
dec
in
pop
or
popa
push
jl
lods
sbb
stos
inc
dec
lret
popa
mov
dec
aam
jmp
outsl
stos
add
fs
dec
mov
mov
lret
dec
inc
xchg
xchg
aaa
hlt
sbb
fbld
js
dec
movl
repz
fcmovbe
cmp
lcall
sbb
sbb
imul
dec
mov
negl
pop
add
push
nop
in
add
push
xor
xchg
mov
aam
fcoms
sub
rcr
xor
inc
dec
stc
cli
dec
scas
scas
pusha
cli
inc
pop
mov
or
jnp
mov
inc
cltd
xchg
pop
jg
jmp
inc
xor
or
shrl
ret
mov
push
out
mov
repnz
pop
clc
mov
sub
fdivrl
aas
cmpsl
cmp
xchg
jg
jbe
jbe
movsl
cmp
in
jno
cmp
adc
jnp
mov
sahf
ret
xchg
les
mov
pop
sub
lods
mov
ljmp
xchg
and
jle
add
push
pop
pop
cmpb
cmpsl
or
sub
ss
cmp
ja,pn
popa
idivb
pop
and
aas
or
loope
ret
lcall
sbbl
out
pop
adcl
and
dec
outsl
repz
cmp
cmp
add
jbe
rol
adc
sahf
sbb
pop
add
jle
addb
or
cmp
mov
das
pusha
in
aam
mov
repz
lret
push
sbb
mov
add
and
push
ret
mov
mov
jmp
pop
xor
xor
mov
jne
test
inc
push
adc
mov
or
dec
mov
cwtl
mulb
pop
ja
mov
adc
jg
out
jbe
out
bound
jl
sarb
stos
jnp
imul
in
enter
push
jae
push
aas
sbb
imul
rclb
and
loop
scas
mov
sbb
cmp
dec
ret
and
fcompl
loope
add
ret
xor
jb
dec
enter
ljmp
jnp
lods
sbb
fsubrs
cs
mov
dec
bound
js
dec
repnz
xchg
and
in
in
ret
idivl
fwait
popf
call
jecxz
push
loopne
xor
push
dec
mov
ficoml
push
mov
and
cmp
inc
xchg
push
inc
cli
sbb
sahf
xor
or
pop
lock
fwait
pop
cmp
movsl
clc
xor
cltd
and
stos
jo
sbb
mov
xchg
sub
dec
outsb
xchg
jo
mov
out
push
sbb
jp
sub
or
stos
pop
js
sub
adc
inc
cmpsl
fdivl
outsl
jmp
dec
lret
adc
mov
cmc
std
pop
js
ja
fnstenv
jg
arpl
add
inc
xchg
fstps
data16
into
xor
sbb
sub
push
fnstenv
add
aad
xor
outsb
pop
jns
in
jg
out
addb
jns
outsl
bound
xchg
gs
mov
cmp
js
in
mov
mov
sub
hlt
jno
clc
push
inc
gs
cli
in
dec
sbb
ret
pop
daa
mov
jo
mov
hlt
loop
repnz
inc
jo
jns
mov
and
mov
jb
pop
aas
dec
push
nop
gs
rolb
loopne
loopne
mov
fyl2xp1
mov
cld
mov
cmc
test
inc
xchg
pop
gs
mov
cmp
mov
ljmp
add
and
xlat
movsb
mov
cmp
ja
dec
push
dec
adc
lods
in
dec
xor
pop
push
rclb
mov
cwtl
sbb
pop
jne
mov
sbb
adc
out
orl
sub
fidivrs
xlat
push
aad
out
inc
mov
into
cmp
xlat
sbb
sbb
and
scas
cs
mov
cmp
adc
cmp
loop
movsb
xor
aad
sub
add
mov
shll
sub
adc
mov
jle
adc
pop
rorl
inc
and
sbb
mov
arpl
rolb
imul
push
orb
ficoms
push
xor
push
gs
lock
jb
dec
cs
in
pop
lcall
xchg
cwtl
sub
ljmp
cmpsl
push
pop
jo,pt
or
jnp
pushf
rcl
in
jg
pop
sbb
cmp
pop
test
dec
movl
je
ja
xor
aaa
rolb
mov
adc
pop
push
pop
addr16
cmpsl
movsl
cmp
sub
cmpsl
popa
sbb
mov
cs
js
mov
add
les
push
cmp
fwait
cmpsb
movsb
popf
je
sub
pop
cli
and
mov
xor
iret
rolb
adc
test
pop
stos
loop
pusha
cmpsl
jge
sbb
mov
sub
je
inc
in
and
or
push
push
repz
xchg
aaa
loop
mov
enter
incl
jmp
divb
std
fdivp
xchg
lret
pop
sbb
jne
repz
notl
adc
jle
cmc
arpl
push
inc
inc
jp
iret
inc
sub
xchg
sub
mov
inc
mov
adc
jg
mov
jge
push
push
adc
cmc
mov
xchg
mov
adc
aam
cmpsl
push
push
inc
cmp
icebp
push
mov
sbb
jp
dec
jnp
mov
scas
repz
and
fmull
test
lahf
add
pop
test
cmc
jnp
xchg
lcall
ror
mov
jbe
adc
insl
xchg
pop
test
jp
imul
inc
je
jg
pop
xlat
push
sub
jmp
or
sbb
outsb
cmpsl
out
or
lcall
adc
enter
pop
sub
sbbb
add
adc
xchg
les
scas
pop
dec
lods
mov
lret
in
ret
sbb
mov
in
cmp
ljmp
aas
push
lods
dec
mov
fisubrl
mov
mov
mov
dec
dec
add
pop
and
inc
daa
sub
pop
iret
mov
pop
loope
or
clc
fmuls
ret
cwtl
adcb
repz
scas
or
jmp
test
mov
fmuls
pop
cmp
aas
test
cmp
dec
cmp
clc
ss
faddl
fsubl
sbb
push
ret
push
mov
pushf
and
rclb
cmc
push
dec
sub
outsl
insb
xorb
push
outsl
nop
adc
neg
mov
repz
in
out
and
xor
mov
incb
popf
std
lret
inc
les
ja
adc
cs
lahf
int
or
sub
or
popf
faddp
repz
aad
sbb
outsb
and
cmp
orl
xchg
lock
outsb
repz
sbb
sub
cmp
mov
and
cmp
pusha
sub
lret
and
div
insl
leave
or
lea
idivl
mov
icebp
sub
arpl
incl
rolb
or
ret
daa
pop
mov
pop
data16
jp
push
push
icebp
aam
jno
mov
and
sbb
scas
pushl
jne
stc
pop
js
pop
sbb
fs
test
cmpsb
jo
mov
jl
or
sbb
pop
and
lds
adc
lock
out
jne
and
lods
xor
sub
pop
movsb
pop
hlt
imul
pop
mov
aam
cltd
ficoml
mov
push
push
cmp
xor
dec
xor
push
mov
or
push
cmc
sub
jno
xchg
mov
fs
mov
pusha
fdiv
add
mov
inc
push
ret
lea
cmpsl
push
loope
mov
cld
cmpsb
lds
push
icebp
testb
mov
jns
roll
xor
cmp
jmp
sbb
adc
pop
int
out
movsl
aaa
cmpsl
or
sbb
arpl
outsl
test
xchg
pop
xchg
inc
mov
arpl
mov
ret
xor
adc
push
icebp
shll
sbb
hlt
daa
jmp
sbb
sbb
cmp
test
rolb
cwtl
test
and
fbstp
pop
arpl
mov
mov
lea
mov
in
sti
adc
and
stos
cwtl
mov
and
loopne
rcll
cmp
adc
pop
push
js
aas
mull
and
xchg
mov
arpl
pop
or
pop
loope
rol
or
and
pop
lds
das
pop
cmp
push
sub
cli
imul
inc
jl,pn
sbb
pushf
xchg
add
xchg
aad
mov
mov
mov
jl
ret
cmp
and
jae
loopne
xchg
cmc
jmp
cltd
xchg
nop
lods
adc
xor
imul
pop
popl
jbe
iret
pop
pop
fldenv
movsb
mov
fcoms
dec
push
jmp
scas
sub
gs
xlat
push
jns
jle
pusha
push
lods
out
je
push
bound
in
inc
lahf
das
mov
push
loopne
outsl
es
ss
push
xlat
jnp
out
or
mov
add
add
bound
adc
sbb
pop
sbb
rorb
out
ret
mov
cmc
inc
jge
fimuls
icebp
inc
ds
in
mov
es
mov
lcall
and
adc
pop
xchg
xchg
fwait
xchg
xchg
xor
std
adc
inc
inc
lahf
stc
xchg
cmp
jne
jnp
ret
push
lahf
push
push
xor
cli
mov
sar
sub
push
aam
icebp
xchg
cmpsb
jle
jno
sub
sbb
xchg
add
pop
test
or
rclb
ja
lahf
int
jbe
dec
andb
and
lret
jge
mov
scas
cmp
cmpsl
dec
dec
mov
out
adc
sub
jle
loop
scas
popf
adc
push
xor
xchg
shll
out
lds
pop
push
in
cmpsl
popa
xor
clc
ret
mov
xor
gs
add
filds
repz
loope
lret
subb
data16
je
jg
or
cs
mov
mov
call
mov
xor
push
jbe
dec
mov
lahf
cmpsb
and
sti
inc
and
in
lock
and
cltd
cmpsb
stos
sbb
hlt
and
xor
nop
xchg
stos
and
and
add
das
sbb
leave
lods
dec
scas
pop
imul
and
push
daa
mov
mov
adc
dec
jne
incl
in
pop
and
adc
fdivs
cmpsb
mov
call
es
cmpsb
out
mov
mov
imul
jl
addl
sub
add
jmp
and
xchg
out
loope
inc
pop
cmc
xor
mov
xlat
fldcw
sub
mov
pop
mov
movsl
pushf
push
lea
add
cmp
add
testl
mov
out
aaa
mov
sub
popf
sub
lds
xchg
add
dec
jbe
dec
inc
sub
jbe
mov
jb
jae
fidivs
je
or
lcall
pusha
mov
fistps
push
xlat
xor
inc
outsl
out
or
dec
push
fs
push
sub
pop
push
pop
or
inc
cld
push
adc
outsl
mov
int3
push
mov
ret
cwtl
out
push
cmpsl
loop
imul
dec
sub
and
sbb
jnp
out
iret
adc
popa
std
cmp
or
das
mov
mov
mov
fs
sub
sbb
imul
mov
inc
insb
dec
xor
xlat
outsb
scas
jle
mov
das
stos
inc
mov
jecxz
lahf
out
add
and
add
jle
push
push
sbb
shrl
je
es
dec
xor
outsb
ss
cmp
je
cmp
and
cld
pushf
mov
ss
pop
je
mov
shufps
lret
and
dec
xorl
fs
mov
adc
shll
dec
mov
addl
push
dec
loope
and
je
stc
repnz
lret
jbe
push
sub
dec
mov
sbb
dec
push
xor
adc
push
xor
cmpsl
sbb
dec
or
test
and
lods
jp
jp
repz
pop
fisubl
mov
aas
lock
jge
test
daa
loop
jge
inc
cmp
add
sbb
push
sub
push
jno
cmpsl
outsl
or
int3
push
lods
jae
sub
jmp
xor
or
lahf
adc
decl
mov
rcrb
adc
in
cwtl
jecxz
data16
stos
gs
push
test
hlt
cmp
dec
loop
jae
push
adc
bound
mov
scas
push
sub
sbb
lret
add
mov
into
xor
xor
xor
scas
jns
pop
outsb
cmp
pop
je
jl
mulb
sub
pop
test
mov
xchg
pop
inc
fs
data16
fs
ret
mov
movsl
mov
pop
add
fcompl
mov
out
fdiv
mov
xor
imul
jl
rcll
cmp
adc
outsl
in
bnd
ja
dec
adc
or
shr
enter
adc
jo
cmp
cmp
shlb
mov
jmp
loop
inc
inc
add
cmp
cmp
int
xlat
shll
lods
sarl
into
mov
mov
mov
jns
decl
loopne
push
push
xorb
aad
xor
ljmp
push
mov
xchg
les
ja
xchg
clc
incl
jg
sub
mov
ficoms
or
in
push
clc
hlt
imul
push
imul
jb
or
jae
xchg
adc
cs
or
and
out
mov
push
into
mov
lcall
test
cld
push
jne
fstpt
scas
aaa
cmp
push
sbb
cs
scas
fimull
pop
iret
popf
cmp
cmp
mov
lret
xchg
sub
jne
daa
pop
in
fdivs
push
cwtl
mov
daa
adc
int
jns
out
movsb
mov
les
push
add
xchg
arpl
adc
lock
repz
or
stos
mov
dec
or
adc
jge
loope
mov
rorb
cmp
jmp
or
mov
push
andb
dec
jb
or
mov
dec
rcr
cs
mov
xor
jbe
mov
mov
in
in
mov
mov
aam
inc
jg
xchg
push
adc
sbb
adc
out
push
adc
rol
filds
bound
test
pop
lock
jae
xchg
aam
xor
xchg
inc
pop
pushf
popf
sahf
adcb
testb
pop
jo
and
jge
push
mov
enter
pushf
pop
push
mov
pop
in
push
adc
lods
and
push
pop
ror
les
aad
sarb
mov
in
fnstenv
pop
xchg
ret
shrl
cld
push
and
adc
fsts
pushf
insb
out
dec
pop
cmp
sbb
clc
fnstsw
sbbb
arpl
fnstsw
outsl
cltd
sub
sub
dec
mov
cmp
cmc
aaa
inc
mov
lock
jg
xchg
xchg
out
add
mov
test
pop
es
cmpsl
int
fimull
xor
imul
sub
xchg
inc
leave
mov
push
jl
les
fdivrp
lret
sbb
les
ror
popa
imulb
add
lret
mov
jmp
jae
inc
pusha
xchg
outsb
add
test
or
ljmp
mov
lahf
and
sub
mov
rorb
xor
lods
movsb
in
mov
cmp
add
loop
push
cmp
push
outsl
sub
aas
inc
xor
sub
and
xor
sbb
sbb
fldl
pushl
jp
loop
xor
mov
int3
int
pushf
shll
xchg
xchg
add
cmp
mov
mov
mov
nop
aam
or
call
fdivrs
pop
dec
cmpsl
sbb
mov
inc
lahf
xor
insb
cs
out
aas
mov
push
jmp
lock
je
in
add
xchg
mov
fstpl
ret
jne
out
in
mulb
test
mov
sbb
bswap
push
aaa
adc
inc
ss
aad
pop
xchg
mov
call
movsl
mov
jns
outsb
daa
fcmovne
mov
icebp
pusha
ja
insl
test
lods
gs
sub
rclb
movsl
aam
dec
mov
inc
test
lods
aad
and
aam
dec
test
inc
imul
movsb
xchg
jg
fcmovnbe
xchg
jp
aad
mov
mov
leave
xor
fwait
jae
push
loop
mov
loopne
xchg
lret
cmp
pop
mov
mov
mov
add
mov
xchg
adc
mov
dec
push
out
sbb
xor
mov
enter
sbb
xchg
add
inc
mov
es
sub
push
orb
pop
mov
test
xchg
pop
lea
fcoml
lret
stc
movsb
addr16
stos
pop
fsubrl
cmc
andl
test
aaa
mov
xchg
push
jae
mov
rcl
mov
sbb
int
lods
fsubr
mov
out
lds
xchg
pop
dec
cltd
mov
inc
lds
test
out
out
cltd
and
or
sbb
fwait
lods
mov
pop
or
inc
sbb
mov
pop
ljmp
out
mov
jb
jb
fists
dec
je
mov
cmp
pop
add
xor
pop
mov
inc
rclb
pop
rcrl
gs
adc
lds
lret
aaa
nop
mov
hlt
pop
xor
dec
dec
lcall
push
mov
js
mov
lret
and
bound
clc
das
lods
jb
stos
in
pusha
dec
addl
jp
into
mov
rcrb
add
outsl
clc
push
ror
xor
jg
pushf
pop
test
sbb
cld
ja
dec
or
lret
addr16
mov
pop
in
popa
push
jbe
decl
xchg
cmp
pop
pop
cltd
and
outsb
push
js
xor
es
mov
inc
sbb
in
xlat
push
inc
xchg
push
jg
mov
and
mov
das
inc
mov
xchg
ret
loop
xor
inc
leave
fisttpl
dec
inc
fisttpl
js
pop
pop
sbb
or
out
push
popf
fldenv
cmp
and
iret
loop
and
iret
clc
mov
add
lods
adc
sbb
cwtl
test
and
stos
aas
fisttps
fstpt
inc
or
daa
mov
inc
ret
dec
cmp
idivb
out
cmp
mov
call
jl
fwait
cmp
inc
cmp
imul
pop
mov
sbb
cmp
ljmp
into
fsubs
or
dec
inc
sbb
cli
lods
jp
pop
ret
jno
inc
and
mov
scas
or
push
push
and
xlat
pusha
push
jecxz
lret
xor
jne
xlat
sub
xchg
mov
cs
adc
pop
xor
push
adc
gs
mov
les
ljmp
fists
mov
xchg
push
sub
shll
aas
scas
mov
mov
or
jnp
dec
icebp
movsl
inc
aad
xchg
int3
scas
sbb
xchg
mov
imul
or
dec
jmp
or
repz
sbb
outsl
pop
sub
mov
cmp
xor
lret
mov
mov
lretw
sub
rorb
test
pop
xor
cmpl
shl
sti
cwtl
mov
popa
sbb
imul
addr16
mov
and
loope
aaa
subb
test
mov
xchg
xor
push
push
adc
xchg
lret
ret
cmp
jo
das
xchg
in
xor
push
dec
rcrb
inc
cmp
insb
fs
mov
fwait
and
sbb
rcll
out
rcrb
fldcw
popa
and
mov
test
das
add
orb
enter
inc
jbe
xchg
fldenv
lea
push
clc
and
repz
sub
sub
pop
mov
mov
lcall
jno
fs
ret
jo
xchg
into
mov
leave
jle
mov
mov
sbb
inc
lahf
icebp
dec
popa
xor
imull
jnp
mov
aaa
pop
movsl
xorl
mov
ds
aas
repnz
hlt
test
rcr
push
pop
out
pop
pop
ret
adc
jg
imul
frstor
sub
cmp
and
std
test
or
stos
cli
daa
adc
mov
pop
pop
roll
inc
sub
iret
cwtl
cmp
pop
cld
lea
repnz
popa
sub
or
inc
sub
rcl
sti
aaa
aad
ret
adc
mov
test
fisubrl
mov
cmpsl
xchg
pop
test
adc
lret
and
cmpb
testl
xlat
cld
rorl
imul
rclb
repnz
rolb
iret
sub
sbb
dec
inc
in
cld
call
sbb
jmp
xchg
and
push
xchg
in
add
mov
xor
fs
das
xchg
inc
jmp
ret
inc
int
add
add
inc
in
push
filds
xchg
sbbb
dec
jge
fs
jbe
adc
sub
js
add
or
or
adc
pushf
mov
jno
pop
sub
sub
cmp
dec
or
sbbl
mov
jmp
sbb
sbb
call
or
loopne
push
lock
rclb
je
addr16
dec
sub
mov
out
sub
aam
fwait
ljmp
repnz
pop
pop
pop
pop
mov
cmp
pop
outsl
xor
insl
lcall
mov
lea
pop
in
aam
shrl
or
cmpsb
sbb
or
in
xchg
pusha
imul
std
bound
push
jnp
jae
mov
les
jg
mov
add
cmp
outsl
cmp
jns
mov
push
popa
adc
sbb
mov
mov
popf
es
cltd
mov
jo
mov
xor
adc
sbb
pop
push
ret
cmc
aam
dec
mov
mov
shlb
insl
outsb
dec
in
adc
push
std
hlt
pop
push
jns
in
addl
mov
daa
cwtl
mov
push
or
cmp
mov
pop
xchg
xchg
outsl
out
nop
ljmp
lahf
sub
mov
lods
add
rorb
xor
cmp
aas
inc
xchg
mov
cld
mov
mov
ljmp
adc
imul
dec
aas
or
dec
mov
pusha
out
in
mul
pop
jge
outsl
dec
jge
js
jbe
lods
lahf
js
outsl
dec
incl
or
jmp
and
push
shll
cmpsl
test
repnz
or
dec
das
fcompl
lret
es
mov
cmpsb
or
out
call
jmp
fmull
es
rcr
inc
and
mov
sub
jmp
lods
test
adc
rorl
adc
pop
jns
mov
pop
push
test
mov
jb
fstpl
das
sbb
dec
dec
je
ss
jae
mov
aas
data16
adc
xorl
xlat
push
fwait
lock
test
fldcw
xor
sti
es
cwtl
jg
xchg
popa
mov
add
adc
push
adc
in
dec
inc
aad
dec
dec
push
or
push
daa
jecxz
mov
mov
je
mov
inc
in
lret
mov
mov
test
sti
sub
xchg
movsb
out
xchg
je
jae
sub
pop
mov
sarb
jle
sbb
mov
mov
cwtl
pop
sub
aaa
adc
or
ss
xchg
lock
fdivrs
and
sbb
push
adc
push
repz
out
and
js
xchg
cld
pop
mov
test
and
push
arpl
mov
xor
fsts
ret
pushf
sbb
inc
or
mov
fimuls
lahf
mov
lret
fs
in
jb
in
mov
push
mov
sub
push
xchg
xchg
cmp
sub
cltd
inc
sbb
mov
pop
sub
arpl
push
mov
rolb
lds
imul
jge
pop
jno
mov
sub
jbe
push
cld
ds
xchg
mov
shll
mov
xchg
outsl
mov
out
xchg
and
push
cltd
xchg
dec
std
mov
dec
pop
jbe
mov
fs
dec
lods
mov
pushf
sar
leave
add
enter
popa
add
rcr
mov
add
cmp
mov
rcr
inc
cmp
or
dec
add
cmp
rorb
sahf
push
add
mov
popf
xor
sahf
adc
cmp
cmp
xchg
aas
sbb
loopne
jns
jle
stos
ret
clc
jb
cs
xchg
in
sbb
out
mov
loope
adc
aas
js
out
out
mov
mov
sub
sbb
iret
int
xor
lret
outsl
push
jbe
icebp
dec
outsl
and
call
mov
fstl
xorl
jo
mov
mov
not
mov
and
add
cmp
test
sub
sbb
sbb
cmp
dec
cltd
std
ret
cmpb
push
xchg
clc
test
dec
negb
out
adc
outsl
and
jno
sbb
mov
bound
sbb
pop
xchg
pop
enter
sbb
cmp
and
dec
cltd
enter
pop
dec
les
sbb
sub
scas
lea
cmp
jbe
xlat
test
push
cli
xchg
test
bound
pop
pop
xor
movsl
je
setl
or
test
pop
lds
lds
dec
int3
loope
cltd
cmp
push
icebp
cli
imul
pop
push
mov
outsb
cmp
lock
pop
jecxz
jg
add
rol
pop
xchg
fucom
test
pop
xor
mov
xchg
daa
fnstsw
add
adc
adc
testl
adc
ss
mov
jb
mov
xchg
movsb
cmc
daa
add
and
push
out
or
cs
push
loopne
incl
in
lret
push
dec
add
inc
jle
lahf
sbb
ljmp
xlat
pop
cltd
jno
call
mov
aam
or
or
xor
jo
sbb
pop
push
in
xlat
je
fnsave
test
std
scas
or
cmp
out
jno
out
stos
icebp
stos
xchg
xor
roll
mov
lret
sub
fidivrs
clc
fsubrl
imul
dec
js
pop
or
outsb
jge
addr16
les
frstor
or
mov
dec
push
fisubs
movsl
cwtl
out
ss
pop
scas
dec
mov
sub
jns
arpl
lds
test
jb
mov
mov
mov
cltd
loopne
and
jge
mov
scas
cmp
std
mov
and
xor
mov
inc
and
sub
sbb
cmp
mov
xchg
dec
and
clc
mov
dec
cwtl
scas
jle
xor
or
dec
dec
pop
aam
mov
xchg
mov
mov
std
lock
xor
pop
decb
mov
sti
dec
hlt
addl
lcall
fcmovnbe
aam
aas
sub
test
dec
or
add
or
js
mov
sub
test
negb
gs
cmp
std
cli
adc
sub
push
inc
dec
rcll
mov
sti
inc
mov
jg
js
inc
lods
out
mov
mov
test
adc
sbb
cmp
sti
sub
adc
in
mov
push
mov
stos
sbb
mov
fcompl
mov
js
push
popa
mov
js
push
out
adc
ja
xchg
add
fucomi
out
cmp
add
mov
add
lods
sahf
cmp
mov
popa
and
adc
mov
xchg
nop
nop
pop
imul
lods
add
add
push
pop
xchg
jl
add
and
ds
lods
lret
xlat
inc
add
icebp
imulb
lahf
int3
lods
pop
insb
in
out
adc
jmp
xchg
scas
cmp
xchg
adc
daa
js
scas
add
inc
mov
mov
test
ljmp
mov
mov
push
xor
in
ds
cmp
inc
outsb
shlb
loop
inc
out
ret
mov
xor
ret
nop
movsb
mov
xchg
mov
jecxz
xor
push
jb
cmp
orb
inc
xchg
sub
insl
mov
int
fwait
lahf
scas
push
xchg
notl
loop
repnz
push
popa
lahf
push
rol
mov
or
pop
clc
mulps
ss
sub
mov
out
xchg
or
jp
sub
pop
push
mov
int3
sbb
mov
mov
pop
lea
pop
push
mov
jbe
pop
leave
add
dec
mov
mov
and
mov
cs
inc
lcall
stos
pop
pop
cmpb
add
cmp
leave
sub
xchg
int3
or
filds
dec
sub
js
pop
sarb
adc
adc
xor
jmp
cmp
xor
pop
xor
enter
shll
call
int3
inc
push
cmp
jp
test
leave
jle
fsts
movsb
jle
xlat
rcl
mov
aad
stos
sarl
lret
lods
mov
es
repz
cmp
inc
mov
mov
cmp
mov
jp
insl
out
push
shrb
int3
xchg
push
das
in
xchg
jle
and
xchg
pop
sbb
lea
xor
xor
lret
mov
cmp
shll
dec
je
into
ja
fwait
xchg
js
fdivrl
adc
mov
sbb
sub
cwtl
or
pop
and
jb
cmc
xchg
repz
add
lock
jecxz
pop
mov
add
scas
ret
out
popaw
pushf
sbb
mov
cmpsb
fyl2xp1
or
nopl
orl
push
dec
cltd
adc
test
lret
in
in
inc
orl
cmp
mov
fs
dec
dec
jns
lcall
mov
jge
bound
cmpb
pop
xchg
popa
pop
lret
int3
lea
fs
xlat
lahf
xchg
shlb
scas
ss
pop
push
mov
cmpsl
adc
aas
mov
pop
adc
sbb
mov
mov
repnz
cmp
mov
cmp
xchg
pusha
sub
lea
and
je
pop
lcall
mov
in
push
mov
cmp
insl
push
pop
adc
add
push
mov
dec
mov
movlps
xchg
mov
jecxz
stc
into
fidivrs
cld
fsubs
dec
lock
orl
mov
jbe
insl
push
push
jbe
lds
out
and
test
in
addb
test
sarb
out
rcl
pop
mov
cmpsb
pop
mov
jae
sub
shll
push
lock
cmpsl
pop
mov
push
cld
sbb
adc
fcoms
xor
adc
out
out
cmp
neg
jl
cli
push
inc
pusha
xchg
das
adc
mov
sbb
adc
loope
je
addb
aas
mov
pusha
pop
movsb
push
imul
cmp
clc
push
outsb
and
dec
xor
ds
sbb
imul
in
sbb
movsb
or
sub
and
lods
pusha
incb
cli
shrb
sub
mov
jb
cmp
stc
mov
inc
push
add
out
cmp
out
mov
ds
adc
test
enter
movsb
aad
scas
mov
in
jno
jno
xchg
lcall
and
jo
add
popf
add
inc
mov
lret
leave
jp
jno
std
and
inc
mov
rorb
int
out
inc
sub
sbb
iret
arpl
aaa
or
or
and
sbb
or
cmpsl
add
cmpsb
xor
das
jnp
cmpsb
and
cmp
jl
xorb
packsswb
ss
push
jle
popa
call
lds
insb
jl
bound
cld
ret
sar
xchg
push
jle
mov
sti
into
sbb
cs
sti
repz
adc
cmc
mov
and
mov
jo
in
imul
dec
arpl
mov
push
push
enter
aad
insb
adc
sarl
lea
lock
sub
jbe
inc
jmp
movsb
inc
psllq
aam
shll
inc
bound
add
cmp
negb
jb
iret
sahf
cwtl
pop
sub
lcall
lods
sti
push
jb
jg
cmp
ljmp
daa
mov
and
stos
jb
aas
dec
sbb
mov
mov
fndisi(8087
int3
adc
jge
push
pop
in
ss
out
mov
lea
cmp
in
mov
rcll
adc
sbb
int3
ret
addr16
xlat
rol
cmp
shrb
sub
and
mov
inc
xchg
push
and
mov
sub
mov
popf
mov
push
or
in
jns
mov
insb
and
ret
in
inc
xlat
jmp
push
ja
fsubp
mov
inc
jg
out
mov
push
gs
aaa
fmull
insb
or
sbb
jle
int
mov
pop
dec
jle
fs
mov
cmp
rclb
imul
mov
mov
push
shl
mov
je
shll
test
jnp
and
popf
inc
pop
cmpsb
cwtl
nop
pop
xchg
enter
repz
mov
cwtl
fnstenv
inc
jp
call
fmuls
sbb
cli
mov
mov
shrb
ljmp
mov
jmp
inc
int
jne
stc
test
fistpll
call
in
xchg
lahf
outsl
fwait
stos
pushf
push
inc
dec
cmpsl
iret
cld
xchg
adc
jecxz
mov
lahf
test
in
pop
fyl2xp1
mov
imul
inc
addr16
insb
movsl
lea
lahf
add
rep
mov
dec
adc
fnsave
jmp
cs
out
inc
push
ficoms
sub
rorl
movsl
inc
push
addl
cmpb
not
xor
andl
jnp
test
cmovnp
cltd
adc
fiadds
push
mov
stos
jl
cmp
dec
das
lcall
cmc
mov
mov
add
out
pop
or
clc
das
cld
aas
jmp
sub
es
cmc
ret
lock
outsl
fmul
mov
dec
clc
leave
sub
mov
cmp
mov
shlb
cmp
stc
sti
cmp
cmp
jl
nop
lea
mov
pop
iret
mov
out
js
pushf
sub
shrl
pop
fnstsw
xchg
or
jmp
xchg
add
fldcw
mov
inc
test
sub
in
rolb
in
mov
sbb
call
mov
inc
aaa
sti
lods
repz
jb
test
mov
sbb
push
sub
jle
out
lcall
popf
lea
jne
movsb
sbb
pop
fmul
xchg
mov
idivl
fidivrs
pop
nop
std
push
int
jb
test
cmp
xor
scas
mov
inc
cmc
jnp
pop
cmpsl
leave
push
pushf
cmp
fadd
rcll
mov
insl
pop
imul
xchg
xor
add
in
enter
push
add
jae
das
jp
lret
lret
in
mov
jbe
jp
popf
out
mov
in
xchg
sbb
fstpt
imul
nop
out
xchg
rcr
lret
add
jl
or
dec
cmp
cltd
cmp
jg
adc
dec
out
enter
jg
mov
and
sahf
movsl
ficoml
lea
fldl
adc
or
std
mov
inc
mov
mov
out
mov
push
outsl
loope
pop
das
xchg
fwait
int3
and
divb
test
pop
mov
dec
leave
cmpsb
std
mov
gs
inc
int
es
inc
xchg
inc
push
dec
movsl
sub
imul
or
data16
int3
sub
pop
fprem
xchg
shlb
xor
pop
pop
adc
jmp
mov
repz
or
popf
scas
lds
out
je
std
test
out
inc
aad
and
outsl
add
ja
dec
sub
ja
subl
pop
repnz
das
stos
or
cltd
xor
dec
add
mov
out
inc
popa
add
jns
sub
inc
out
imull
sub
mov
lea
jecxz
enter
mov
sub
dec
pop
jne
cwtl
pop
push
or
cmp
mov
mov
jle
in
add
int
cli
loope
cmpsb
pop
in
enter
cmp
and
jae
push
dec
xchg
popa
adc
lahf
outsb
aas
jmp
mov
lea
addl
and
xor
fs
pop
pop
add
sub
xchg
cs
cmpsl
mov
adc
fldt
insb
mov
shrl
mov
mov
and
outsb
call
adc
in
movsl
mov
insl
push
pop
test
push
add
movb
mov
insb
shll
testl
decl
ljmp
push
pop
mov
sub
inc
mov
hlt
sub
mov
imul
inc
in
sbb
scas
sar
mov
mov
jo
pusha
cmp
add
mov
dec
mov
popf
int3
std
fimuls
test
int
loop
in
mov
cmc
sub
call
bound
fisubrl
mov
cmpsb
cmp
push
imul
stos
cmp
loop
das
test
mov
sti
mov
lahf
sub
sub
andl
cltd
js
sbb
aam
adc
fcmovnbe
push
popf
loope
or
jb
sub
fldenv
inc
arpl
sti
scas
inc
push
mulb
les
das
mov
dec
fpatan
test
adcl
mov
adc
daa
jg
aas
sub
pop
add
push
dec
add
xchg
xchg
jns
cmpsb
cmc
in
addr16
insb
mov
jl
jns
popa
xchg
aam
sub
xor
pop
ret
lock
jg
add
add
inc
push
jle
add
ret
fisubrl
adc
push
push
repnz
aad
xorl
adc
cmp
sub
xchg
call
adc
push
shlb
mov
cmp
test
lcall
dec
aad
xchg
adcb
sub
xchg
icebp
ja
fldl
mov
mov
push
sar
add
cmpsl
adc
clc
fisubs
add
jle
cmp
xchg
jb
inc
jl
push
call
and
sbb
push
cmp
cld
sub
mov
mov
dec
mov
push
call
pop
cmpsb
int
into
pop
int3
xor
clc
pop
mov
data16
pop
fnstsw
cmp
in
aad
fcomp
pop
jmp
or
roll
xchg
sub
dec
ret
mov
insb
cmpb
mulb
sub
push
test
add
sub
push
les
sbb
jp
rcrb
sbb
popa
testb
shl
push
push
xor
decb
testl
rcll
scas
shll
daa
out
cmpsb
xchg
aaa
push
fdivs
add
xor
lods
rolb
push
sub
mov
xchg
inc
push
sub
movsl
cld
cltd
js
add
in
addr16
xorl
inc
ja
pop
jb
push
call
pop
imul
test
sub
mov
pop
outsl
addb
add
push
or
repz
mov
pop
nop
rcll
cwtl
hlt
jae
mov
pop
bound
adc
mov
jl
adc
fs
fbstp
scas
jb
lods
jp
dec
add
insb
push
cli
cwtl
cmp
out
add
js
in
mov
mov
jp
int3
jae
jno
or
nop
mov
mov
jb
movsl
adc
test
mov
sub
cmpsb
pop
xchg
dec
call
sbb
aaa
mov
pop
pop
or
mov
int
add
mov
xchg
fs
sti
icebp
add
ja
xchg
scas
shll
popf
test
push
leave
mov
cmp
or
jns
int
ret
xor
outsb
in
mov
xchg
jp
add
mov
fimull
shlb
jb
inc
bound
xor
lahf
mov
lahf
inc
mov
fisubrs
ljmp
and
into
lds
aas
cmc
repz
loope
dec
mov
xchg
leavew
enter
jge
stc
pop
lock
and
mull
in
jp
and
or
insb
xorb
and
mov
mov
push
sub
xor
outsl
xor
inc
dec
add
mov
les
fists
adc
iret
std
cmpsb
dec
add
repz
xchg
sbb
add
fidivrs
push
mov
or
ret
jno
shll
pop
mov
aaa
push
iret
repnz
adc
mov
movsb
decb
cli
in
cmpsb
mov
mov
or
aaa
fadds
ror
mov
les
pop
aas
jg
mov
or
sbbl
add
sbb
scas
mov
sbb
inc
inc
rclb
repnz
adc
sub
xchg
call
and
lock
repz
mov
cs
inc
cli
sub
scas
sbb
mov
cmc
sbb
push
stc
fwait
loopne
out
imul
xchg
cmpsl
pushf
or
mov
aaa
cmpsl
xchg
push
out
push
ss
dec
movl
test
sbb
in
or
ror
fwait
adc
lea
xchg
cmp
fdivs
sbb
push
sbb
jge
inc
pop
sbb
cmpsb
inc
ljmp
mov
xlat
rclb
or
ljmp
push
add
ret
in
mov
pop
cmp
adc
lcall
sbb
insl
inc
fidivrl
push
add
xlat
mov
add
mov
xchg
int3
cmp
fcmovb
stos
jmp
in
repz
sub
inc
popf
mov
stos
aam
xor
fcomp
cmpsl
cmpsb
jno
and
popf
movsb
rcr
mov
dec
imul
in
cmp
cmp
sbb
jl
fsts
fistpl
adc
xchg
ljmp
xor
inc
ret
jns
in
fistps
mov
xchg
xchg
push
addr16
jge
push
and
pop
xchg
call
ss
push
clc
jb
dec
push
pop
lahf
jmp
roll
out
jbe
jg
loope
fs
in
mov
xchg
in
bound
jne
out
es
jns
fisubrs
xor
fmuls
push
or
insb
mov
daa
and
jecxz
movsb
das
fldcw
xlat
movsb
mov
and
or
inc
stos
stos
js
scas
roll
cwtl
mov
mov
cld
orl
inc
jle
mov
xchg
push
stos
aam
in
dec
aaa
or
movsl
push
sbb
mov
sub
sbb
inc
or
test
pop
adc
and
insl
and
or
mov
arpl
jbe
rolb
push
sbb
mov
hlt
pop
sub
push
fildll
fs
push
aam
xor
lods
scas
pop
mov
mov
les
fisttps
shrl
mov
jp
jo
je
aas
jbe
or
je
shrl
dec
jns
mov
outsb
pop
jnp
sbb
sub
aas
push
addr16
and
sar
add
jno
fdivr
push
je
outsb
lcall
call
add
mov
cli
out
mov
adc
push
cmc
push
jbe
jl
lods
ret
ja
in
adc
xchg
mov
push
pop
icebp
mov
xor
scas
shlb
sbbb
in
xchg
mov
clc
and
mov
lcall
dec
shll
mov
pop
test
sbb
cmpsl
shlb
and
clc
test
dec
add
icebp
cld
sarb
into
mov
push
lahf
nop
push
outsl
xor
loop
lahf
xchg
fadd
cs
mov
push
adc
mov
outsb
daa
cmp
sub
push
adc
decb
sub
ja
lcall
adc
inc
ljmp
out
bound
in
and
push
rclb
inc
mov
push
pushf
mov
mov
shlb
mov
idivb
jmp
adc
mov
push
pop
jg
and
mov
add
adc
adc
sahf
mov
out
jg
adc
fs
push
movsl
xor
sahf
cmp
scas
mov
lahf
bound
xchg
enter
and
jbe
pop
sbb
inc
mov
add
xor
scas
jg
sbb
or
pop
int
or
adc
jno
cmp
aaa
test
lahf
push
pop
mov
push
adc
and
mov
icebp
imul
fiadds
pop
outsl
sub
mov
frstor
jp
sbb
dec
xor
stc
push
mov
aas
shl
int
sub
dec
push
xchg
push
jb
or
cmpsb
insb
mov
mov
movsb
pop
dec
sub
fadd
movsb
cmpl
inc
ss
ja
adc
in
iret
popf
ljmp
sbb
and
mov
sub
mov
pop
adc
inc
ja
or
pop
outsb
pop
jp
add
stos
aaa
lahf
sahf
jbe
mov
loopne
inc
xchg
push
mov
out
rorb
push
sbb
dec
dec
stc
push
pop
in
lds
repz
pop
lock
cltd
dec
jge
xor
sub
and
imul
and
add
pop
mov
push
loop
xor
ljmp
add
pop
sbb
call
popf
repnz
sti
call
or
pop
icebp
push
mov
test
rorb
jb
jae
inc
stos
mov
jle
pop
pusha
pop
clc
jl
lock
pop
mov
sbb
out
sub
mov
xchg
mov
sbb
inc
push
jl
jg
add
dec
sub
sarl
repnz
movsb
movsb
sbb
dec
aam
mov
adc
push
loop
or
adcl
sahf
mov
mov
mov
mov
rorl
test
aam
mov
xor
leave
in
sahf
sbb
push
imul
popf
pop
lds
dec
lods
cli
mov
and
in
outsb
mov
in
int
rcrl
xlat
mov
adcb
cmp
cld
bound
jo
push
sbb
inc
loop
ret
mov
js
pop
cmp
mov
pusha
xchg
push
push
aad
mov
fildll
inc
jnp
loope
xchg
fsubrl
xlat
in
negl
add
mov
cmp
iret
push
cltd
mov
ret
data16
adc
xchg
mov
jnp
std
jbe
call
into
jno
xchg
addl
lods
cld
out
or
ja
lds
push
sub
jl
sar
push
ficoml
insl
daa
scas
nop
cmp
pop
fcomp
fistpll
cmp
pop
cmp
lds
into
pop
xor
xlat
mov
xor
popf
inc
mov
mov
ror
mov
add
push
push
movsl
enter
xchg
jg
xor
and
xchg
rcll
mov
imul
iret
enter
pop
das
sar
push
jo
jnp
push
xor
or
stos
cmp
in
dec
push
negl
cmp
or
sbb
xchg
xor
xchg
add
jo
cmp
fucom
push
rorb
mov
test
sarb
xchg
and
and
mov
push
add
mov
out
inc
subb
aad
adc
repz
fsubrs
xor
push
jg
or
jge
mov
inc
out
lcall
inc
jb
push
les
xchg
aaa
lcall
sub
cmp
inc
fldenv
xor
fsubrl
mov
and
jl
fildll
mov
mov
lret
mov
mov
sti
mov
mov
cmpsl
faddl
xchg
in
pop
pusha
insb
inc
fadds
aaa
test
daa
mov
les
xchg
fiadds
lea
cmpsl
xchg
adc
mov
xchg
subl
add
jns
jne
fs
lcall
popa
sbb
dec
inc
orl
fdivs
lea
ret
pop
cs
shrl
das
pop
jne
pop
or
push
xchg
cli
jae
or
std
int
gs
fnsave
adc
xorl
in
xchg
push
pop
icebp
int
mov
jno
pop
xor
adc
out
cmp
push
mov
ljmp
sbb
cmp
lahf
xchg
xorb
xchg
ljmp
mov
inc
adcl
sub
mov
bndstx
cs
mov
and
mov
mov
adc
xor
push
in
ljmp
inc
jo
std
pop
lock
aas
mov
scas
inc
pop
cmp
xor
loopne
shr
cmpsb
xor
sbb
adc
jmp
frstor
push
cmp
push
test
dec
push
or
fistpll
or
lcall
in
xchg
repnz
arpl
lret
in
xchg
jecxz
sub
and
outsb
jo
repnz
push
test
loop
nop
addl
mov
add
pushf
adcb
xor
mov
sub
fsub
shrl
mov
ds
xchg
add
pop
push
xchg
jecxz
fdivl
sub
mov
sbb
jno
shl
js
add
adc
pusha
adc
test
cli
mov
insl
add
xchg
daa
or
sub
mov
adc
cmp
sub
insb
mov
push
insl
xchg
pushf
imul
cltd
leave
cmovo
xchg
push
dec
out
fchs
int
pop
cwtl
jo
aaa
es
add
outsl
pop
js
sub
cmp
sub
pop
call
pushf
adc
es
adcl
mov
lret
out
mov
es
cmp
fidivl
jne
iret
mov
push
mov
mov
lahf
lods
xchg
sbb
mov
fs
pop
xor
mov
push
lods
int
push
sahf
outsl
cld
mov
dec
xchg
xlat
dec
or
out
push
mov
mov
in
xchg
jno
jnp
fcmovne
pop
stos
sbb
cmp
pop
push
popf
jmp
aam
xor
insl
cmc
xor
pop
mov
mov
mov
clc
xor
mov
sbb
out
pushf
daa
mov
cmpb
in
iret
adc
cmp
mov
pop
fwait
jle
aas
test
into
cmp
xchg
jo
push
in
out
adc
ret
test
enter
mov
and
xor
int
push
jbe
ret
arpl
jg
dec
adc
sub
inc
add
fwait
je
xchg
add
sbb
ficoms
ror
or
in
cmpsl
aam
cltd
shrl
dec
adc
add
push
jbe
mov
out
xor
aas
test
ret
jg
xchg
pop
and
out
push
and
mov
xor
mov
scas
jmp
push
and
sbbb
sarl
dec
mov
out
addr16
stos
movd
shr
jno
out
cmc
dec
inc
xchg
shll
adc
lods
xchg
sub
push
mov
or
loope
xchg
add
add
outsl
js
or
outsl
and
outsl
xchg
cmp
push
cli
jp
mov
pop
std
pop
ljmp
pop
mov
jnp
pop
int3
inc
leave
pop
insb
add
mov
jb
pop
jg
ret
xchg
cwtl
cwtl
push
or
imul
cmpsl
ljmp
mov
inc
jo
mov
push
ljmp
rolb
mov
cmp
cmp
dec
scas
in
and
add
pop
je
dec
mov
cmpsb
inc
push
add
jg
ds
xchg
pop
xchg
mov
outsb
js
je
popf
or
rcl
lret
rorb
dec
sarb
dec
and
push
dec
and
out
cmc
mov
pop
sbb
cmpsb
sub
xor
fistpll
dec
push
mov
shlb
popa
mov
fdivrl
jno
stos
pop
mov
cmp
jno
fmuls
adc
aad
xchg
cltd
imul
push
mov
mov
fildl
xchg
fstpt
lods
das
sarb
cld
movsb
mov
jo
jge
bound
out
mov
add
mov
jbe
or
push
imul
mov
jle
pop
jns
stos
movsb
in
cmpsb
cmp
and
push
or
lret
addr16
dec
into
cld
and
gs
les
and
stos
addr16
ss
mov
or
mov
sub
jg
divb
pop
cwtl
or
add
and
jl
aas
repz
jmp
mov
imul
jmp
pushf
pop
repz
jb
adc
or
mov
aaa
lcall
mov
xchg
scas
in
sbbl
fistl
mov
movsb
inc
xchg
jae
out
pop
ficoml
adc
cmp
mov
sub
les
imul
filds
pop
jns
fs
mov
addr16
mov
and
dec
mov
insl
rclb
inc
imull
and
fistpl
cmpsb
adc
mov
inc
addr16
movsb
cmp
std
adc
mov
out
jl
sub
mov
sbb
movsb
add
xchg
fistps
out
ss
mov
and
fs
dec
jno
sarl
xor
inc
lret
pop
movsb
or
int
ja
lock
clc
adc
in
mov
mov
daa
call
and
pop
movntq
out
out
sbbb
fiaddl
out
jl
jno
cmp
sahf
fdivrs
xchg
addr16
call
sub
std
test
adc
xor
sahf
or
add
lds
dec
shll
cmp
addb
xor
and
out
out
fstp
add
jecxz
dec
jb
test
pop
push
mov
fimuls
test
rcr
mov
cli
cld
inc
xor
sub
int
mov
pushf
dec
or
lods
sub
push
add
jge
ret
jne
ret
jge
aad
inc
dec
mov
daa
jl
cmc
insl
outsb
mov
mov
addb
ror
addr16
out
iret
clc
mov
adc
mov
jae
iret
jo
imul
sbb
add
lret
or
cmpsb
in
int3
scas
test
fbld
loope
lea
push
aas
lcall
shlb
fwait
xlat
sahf
cmpsb
pushf
dec
stc
pop
popf
pop
add
xchg
xchg
outsl
and
jp
movb
es
inc
rcl
popa
mov
test
push
inc
loopne
xchg
int3
cmpb
or
cmpsb
call
fidivs
pop
dec
adc
cmp
loope
push
ljmp
andb
subl
ds
jne
stc
mov
push
dec
dec
or
xchg
cld
sarb
call
inc
packsswb
sbb
jb
sbb
pop
mov
mov
xchg
hlt
in
popf
sarx
pop
or
cs
ret
andb
stc
arpl
adc
pop
and
sbb
dec
adc
sbb
sub
and
adc
add
inc
ljmp
loop
cmp
fnstcw
inc
lcall
or
imulb
popa
sbb
pop
filds
dec
imul
xor
mov
sbb
cmc
in
sbb
dec
cmpl
fidivs
xchg
cmp
mov
jge
test
sub
cltd
lods
arpl
lea
or
fs
fnstsw
test
sub
cmpsl
enter
lret
shr
repnz
mov
and
daa
js
and
pop
inc
jbe
repnz
cwtl
std
mov
jmp
repnz
andb
lods
xchg
xchg
data16
movsl
push
outsl
lods
mov
jl
sahf
adc
ds
or
xor
in
cli
mov
iret
mov
pop
or
jmp
sbb
mov
push
movsb
mov
xchg
add
cmp
sub
loope
mov
xor
bswap
cmc
inc
cmp
loop
push
into
lock
pextrw
sqrtps
sbb
and
test
rcl
fwait
xor
cmp
push
mov
mov
cli
pushf
fdivrs
and
inc
or
lock
mov
or
sti
fcmovnb
lds
scas
mov
jb
sub
repnz
xlat
xchg
daa
imul
fs
ljmp
in
jbe
negb
xchg
sbb
ficompl
sbb
adc
pop
mov
lock
and
shlb
xchg
ja
mov
or
lcall
sbb
sarl
fsub
xchg
outsl
mov
xchg
jge
sub
push
push
clc
loop
inc
in
repnz
rorl
dec
inc
dec
inc
add
repnz
testl
int
std
test
fmuls
js
pop
jb
stc
andl
xlat
adc
sub
push
and
add
clc
push
push
out
mov
cmp
xor
pop
or
push
xor
sub
xchg
jp
inc
outsl
lcall
scas
scas
pop
inc
fsub
push
mov
into
jmp
add
iret
ret
popl
pop
or
pop
fistpl
popf
mov
cltd
iret
sarl
lock
xlat
push
adc
mov
nop
cmp
xchg
fadds
pop
adc
test
je
enter
pop
mov
daa
and
cltd
xchg
adc
xchg
or
xchg
cmp
ja
clc
cmc
mov
mov
xchg
aas
pop
rorb
sub
pop
or
aaa
jbe
repz
mov
mov
adc
adc
mov
dec
mov
das
lret
sbb
pusha
mov
nop
into
jbe
iret
sti
out
nop
lods
push
pushl
or
fnsave
inc
andb
sbb
in
pop
pop
xlat
inc
mov
push
cmp
mov
insl
stos
fldt
in
cs
pop
rorl
pop
insb
xchg
adc
push
inc
lock
lods
dec
xor
jne
fldl
shll
les
push
stos
aaa
sub
aam
popa
popf
mov
mov
loopne
clc
out
out
jp
lds
int3
sbb
insl
lcall
inc
cmp
mov
test
cmp
fidivs
aam
in
mov
fdivrl
lret
xchg
aas
xorl
mov
xchg
daa
cld
sbb
dec
xchg
cmp
push
adc
andl
push
ret
sbb
sbb
push
ss
sbb
sub
stc
dec
mov
dec
pop
adc
ret
ds
or
mov
xchg
cs
inc
sahf
je
or
dec
stc
bound
imul
push
push
add
and
mov
iret
outsb
mov
xorl
xchg
and
push
xchg
and
push
aam
repnz
stos
icebp
enter
and
out
fcmovb
int
adc
fimull
test
ds
dec
push
loopne
push
cld
jl
loopne
pop
sub
aas
xchg
pop
inc
mov
lret
jecxz,pn
lret
lret
in
in
mov
inc
addr16
sbb
lret
sahf
mov
imulb
lock
fabs
pop
lods
gs
push
cmpsb
inc
sti
inc
rol
and
mov
mov
pop
pop
pop
cmp
push
les
pushf
sbb
mov
sbb
out
pushf
pop
mov
xchg
imul
mov
hlt
fsts
xchg
pop
mov
xor
sbb
cwtl
mov
add
cwtl
add
dec
lahf
add
sub
sub
push
lcall
sbbl
pop
pushf
repz
jns
pop
outsb
jns
inc
push
or
cmp
cmp
push
dec
aaa
in
aam
mov
inc
cmpsb
adc
sbb
lret
mov
cs
addr16
js
mov
push
inc
stc
mov
mov
mov
jecxz
pop
cli
je,pt
cmp
adc
aad
bound
into
mov
cmp
in
mov
pop
pop
inc
rcrl
xchg
movsl
call
sbb
cwtl
into
decb
arpl
jns
push
jo
inc
fnstsw
sbb
cmp
in
cld
sub
inc
jl
xchg
push
push
lcall
inc
cltd
mov
sahf
sbb
jle
repz
mov
mov
inc
cmc
clc
adc
cs
mov
cltd
or
into
mov
jmp
mov
je
pop
adc
sbb
inc
sahf
inc
dec
notl
dec
loope
push
cmp
xchg
popf
push
popa
mov
ret
jge
ljmp
pop
add
int
jno
add
dec
in
xor
setno
mov
fists
popa
gs
pop
mov
sub
jae
lret
adc
imul
jmp
xor
pop
jg
dec
ljmp
push
leave
out
mov
mov
or
xor
data16
jno
xor
in
es
add
sarl
jno
cli
cmp
test
loopne
test
pop
pusha
mov
xchg
nop
dec
in
pushf
push
inc
jge
loope
sbb
jge
test
sbb
cltd
sub
in
xor
loopne
xchg
mov
nop
mov
add
fwait
pop
mov
cs
scas
imul
mov
xor
jno
or
pop
dec
inc
jno
shrb
or
das
add
xchg
fstpt
mov
pand
movsl
outsl
in
jo
xchg
dec
sub
and
xchg
rcrl
daa
loop
shrl
mov
lea
or
pop
push
shlb
sub
clc
dec
pop
pusha
cmpsb
dec
insl
dec
xlat
jb
bound
adc
xor
push
int3
push
mov
xor
and
gs
xor
or
dec
adc
ds
cld
roll
mov
push
ss
push
ds
lock
sbb
arpl
fisubs
mov
xor
mov
xchg
jo
dec
dec
fistpll
jmp
sub
int3
xlat
nop
inc
pop
pop
lock
test
call
into
mov
push
in
or
int
outsb
add
mov
test
int
adcl
sahf
xchg
arpl
daa
jno
lods
pop
xchg
gs
out
jae
dec
ror
pop
mov
test
test
lret
push
push
push
xchg
sbb
sbb
or
inc
fwait
xor
sbb
pop
jecxz
mov
mov
and
cmp
lock
sbb
dec
mov
push
lods
aad
aad
aaa
int3
or
adc
fs
cmp
cmp
arpl
or
push
addr16
push
aam
cwtl
mov
nop
xchg
sbb
push
fidivrs
or
xor
add
mov
mov
xrstor
nop
xchg
cmp
lret
rorb
inc
daa
enter
sbb
and
into
mov
add
mov
pusha
imul
push
push
xchg
out
mov
aas
rep
imul
xchg
out
pop
adc
repnz
cmp
mov
mov
mov
es
popa
movsl
aam
jno
arpl
lahf
mov
cmp
adc
cwtl
jp
push
sbbl
mov
sub
push
xchg
decl
addr16
pushf
scas
outsl
push
testb
sahf
pop
lods
popf
clc
pop
sub
pushf
ja
subl
dec
scas
pop
push
lret
dec
push
mov
in
cmp
cmp
pop
xchg
in
sbb
imul
clc
and
aaa
leave
cmp
adcb
mov
jg
pushf
dec
xchg
pop
test
pop
mov
xorb
ljmp
mov
and
repnz
inc
fdivrs
add
test
and
bnd
dec
enter
in
scas
test
or
insl
cmpsl
cwtl
or
gs
mov
jb
push
mov
or
mov
int
arpl
push
inc
lock
les
adc
inc
subl
in
testl
jge
dec
fnstsw
mov
dec
adc
pushf
pop
ja
sahf
in
stos
dec
xchg
fstl
xor
sar
inc
or
jne
les
jo
xor
pop
js
mov
dec
in
pop
mov
fbld
push
add
push
and
or
nop
loop
sbb
sub
out
mov
mov
es
cmp
or
and
and
mov
imul
jge
addr16
iret
outsb
repz
fdivrs
cmc
repz
in
dec
mov
les
lock
jecxz
sub
mov
call
test
out
jbe
mov
test
mov
jmp
pop
repz
xor
sub
stos
sbb
xor
mov
adc
bnd
mov
fisubl
lds
jae
cld
pop
jb
add
xchg
xchg
lahf
xchg
mov
jp
dec
jp,pt
test
or
pop
and
jge
xchg
sbb
addr16
push
push
ljmp
leave
int
jmp
sbb
in
fwait
cmc
insb
testb
leavew
jp
popf
cli
dec
sbb
mov
popa
xlat
lock
inc
es
les
jecxz
loop
jge
and
mov
in
test
lcall
jmp
dec
fists
xchg
xor
sub
andl
mov
or
sbb
jge
sub
mov
lods
fadds
pop
into
leave
out
inc
test
incb
push
addb
jecxz
add
mov
cwtl
mov
add
shlb
imul
dec
test
cli
mov
nop
jae
jne
scas
xchg
mov
mov
icebp
add
into
in
mov
out
mov
dec
cs
cmc
test
mov
repz
out
shll
sbb
arpl
loopne
stc
js
fldenv
mov
hlt
ficoml
js
fwait
mov
mov
or
xor
adc
rcr
add
adc
xor
or
jno
xchg
in
sbb
xchg
push
sub
das
lret
outsl
sbb
enter
into
jecxz
lcall
popf
mov
int
cli
jo
in
iret
pop
movb
call
rorl
fwait
mov
test
pop
sbb
mov
xchg
rcrb
xor
xor
jg
jmp
popf
push
aad
leave
dec
xchg
test
scas
pushl
fsubr
ds
loop
adcl
jecxz
fisttpll
bound
loop
sarb
ret
jmp
je
or
mov
rolb
fdivl
mov
ljmp
scas
out
imul
pop
adc
push
repnz
pusha
sarb
lcall
out
sahf
loopne
push
cmp
mov
jnp
xorb
cmp
test
js
mov
in
fimuls
je
cmp
fwait
rcrb
pusha
dec
and
lds
popf
lea
test
sub
adc
xor
jl
or
mov
fdivrp
in
aad
xor
xor
mov
pop
xor
dec
adc
push
sub
xchg
insl
sti
xchg
cltd
lea
aas
cli
jecxz
daa
lods
jl
mov
xchg
iret
and
lret
push
dec
insl
jnp
push
sahf
bound
mov
inc
push
push
and
ret
dec
xor
xlat
fwait
daa
jg
xchg
inc
mov
mov
dec
inc
push
clc
fcoml
in
into
dec
idivb
sub
mov
xor
push
je
out
pop
xchg
cmc
aam
pusha
fisubs
pop
js
mov
lret
mov
repnz
cmc
shrb
sub
push
nop
sahf
sbb
dec
sbb
cmp
sub
dec
mov
dec
jne
push
and
xchg
fadds
insl
push
mov
outsl
sub
dec
sbbb
jo
pop
aas
cmp
int
mov
cmpsl
pop
dec
cmp
cmp
jge
jmp
mov
push
andl
adc
in
adc
dec
dec
repz
xchg
in
xchg
fistl
or
cmp
push
sahf
fsubp
ljmp
cmc
jns
pop
add
push
xchg
sub
mov
pop
xchg
enter
mov
loope
mov
mov
jle
std
add
js
icebp
cmp
and
mov
xor
enter
jnp
mov
cs
mov
test
and
dec
or
fidivl
ljmp
mov
ljmp
mov
scas
or
and
testl
rolb
add
mov
flds
out
jle
adc
push
adc
bound
or
addr16
mov
ficomps
sub
ss
mov
cmpsl
fisubs
dec
xchg
iret
add
cwtl
jns
ja
movsb
mov
or
call
xorb
mov
subl
cmp
test
and
sarl
push
mov
push
add
das
lret
pop
or
popf
mov
pop
adc
mov
jbe
adcl
aad
mov
js
sbb
nop
or
inc
ret
sbbb
mov
inc
orb
loop
jg
popf
iret
in
rorl
mov
ficoms
dec
mov
addr16
adc
xor
movsl
adc
lods
mov
test
and
xchg
cmpb
xchg
mov
js
cmp
aas
test
jns
and
mov
adc
dec
test
lcall
insl
mov
fcomi
dec
xchg
icebp
sub
popf
pop
xchg
cmp
mov
ds
mov
out
notl
jl
mov
hlt
fiaddl
push
test
sub
jle
stos
cmp
idivl
jle
jae
in
dec
loopne
jmp
pop
imul
or
sbb
cmc
inc
orl
mov
inc
mov
addl
stc
mov
add
into
push
sub
cmpsb
scas
clc
jo
imul
sbb
xchg
jo
inc
loop
shll
in
sbb
dec
test
hlt
out
cmp
movsb
out
cmp
hlt
dec
add
inc
or
sbb
lcall
add
lods
test
divb
jnp
adc
das
imul
pop
xchg
pop
mov
leave
fiaddl
shll
add
inc
xchg
shll
lcall
cmove
cmp
iret
inc
rclb
in
cltd
sub
sbb
fdivrs
mulb
pop
pop
inc
aad
jecxz
movsb
orl
push
mov
or
scas
stc
je
orb
jge
mov
loop
cmp
outsb
mov
inc
push
push
enter
es
fcomi
ja
aas
dec
cs
fiadds
xchg
push
inc
fldenv
push
lods
ja
cmpsb
add
jbe
repnz
sub
sbb
std
jecxz
rorl
dec
cwtl
cmp
arpl
pop
inc
lret
push
shlb
inc
inc
push
or
or
dec
scas
lret
js
je
xchg
xchg
out
pop
or
stos
dec
lods
fwait
inc
iret
or
jl
dec
out
cmp
fistl
sbb
nop
movsl
adc
inc
bound
es
sub
or
ret
sbb
jns
out
inc
push
cs
incl
stos
adc
push
sbb
xor
arpl
inc
loope
pop
xor
into
push
stos
inc
mov
shlb
subl
or
pushf
inc
dec
jmp
mov
lods
faddl
push
jle
xchg
das
mov
scas
std
cmc
dec
test
xor
mov
add
aad
push
aad
inc
scas
arpl
dec
loop
push
outsl
aad
inc
mov
or
popf
or
cmpsl
or
ficomps
into
mov
insb
popw
rclb
loope
jno
dec
cmp
mov
cwtl
jmp
dec
rcll
mov
sub
fistpll
addb
xchg
aad
sub
or
push
and
add
xchg
pop
mov
add
jne
inc
mov
fmul
dec
jecxz
inc
int3
pop
pusha
filds
inc
xorb
jle
fsubs
lcall
popa
sar
lcall
add
mov
test
imul
out
aam
xchg
jp
xchg
xchg
sbb
cmpsl
out
push
hlt
out
pop
ss
push
in
in
push
pop
sbb
cmp
mov
rorl
or
jge
xchg
mov
ret
ret
les
xchg
adc
fwait
clc
jne
mov
xchg
push
push
push
adc
xor
out
std
out
nop
popf
jge
sahf
je
iret
add
das
xor
sti
mov
outsl
lret
loopne
sub
into
mov
fldcw
or
add
or
js
cmpsb
inc
stc
xor
xchg
je
incl
mov
popa
jle
jae
test
sti
sbb
jg
or
cltd
out
and
loope
shlb
dec
xorb
cmpsb
dec
scas
imul
lahf
dec
mov
je
insl
fbstp
inc
ljmp
popf
popf
jmp
pop
stos
or
jle
lods
jne
sahf
cmp
pop
lock
sbb
mov
int3
clc
mov
add
sbbl
push
sahf
cmp
rol
cmp
dec
jae
aad
lret
lea
cmpsl
lret
mov
in
fs
cmp
loope
dec
cs
pop
fldt
das
jnp
xchg
nop
icebp
test
mov
push
popa
push
sbb
mov
leave
jp
push
scas
mov
loope
jbe
sbb
in
scas
inc
cltd
movsl
mov
mov
mulb
push
sub
or
jns
pop
push
and
mov
in
pop
sub
inc
adc
inc
adc
popf
xchg
enter
cmpl
jno
mov
pslld
test
sbb
mov
and
mov
pop
cmc
pop
pop
gs
xchg
xchg
xor
adc
inc
adc
enter
pop
aam
aas
adc
xor
hlt
js
incb
or
mov
mov
push
mov
add
out
and
lock
je
repnz
push
faddp
subl
iret
mov
out
sub
add
stos
ficoml
loope
pushf
adc
sbb
fwait
std
sbb
ds
sbb
push
or
jnp
repnz
push
pop
mov
iret
sub
inc
clc
dec
xchg
lret
movsb
and
mov
in
fcom
jl
cmp
jns
push
ja
cmp
pop
div
lret
mov
test
mov
movsl
inc
adc
and
dec
jo
add
mov
mov
push
bound
pop
push
cmp
sbb
xchg
xchg
dec
pop
sbb
or
testl
int
shlb
mov
rorb
mov
mov
jl
mov
lock
mov
mov
ljmp
aam
mov
faddl
add
hlt
iret
mov
in
xchg
push
add
push
push
sahf
mov
mov
jg
outsb
xchg
mov
or
jbe
jbe
lock
and
push
lcall
jg
add
adc
jg
sbb
test
and
popa
lcall
loope
xchg
aad
js
mov
push
mov
mov
xchg
push
cmp
sub
pop
jb
jg
inc
adc
push
xchg
xor
jbe
cld
jae
xchg
in
lods
cmpsl
cmp
repnz
pop
sarb
aam
clc
es
jle
shlb
inc
dec
repz
lret
cltd
sahf
mov
jmp
lcall
rolb
imul
test
adc
mov
fdivl
push
and
push
out
xor
or
mov
aam
sbb
mov
mov
xor
ja
repz
pop
mov
xor
jo
inc
push
les
out
mov
sahf
sbb
ret
and
lock
das
pop
test
sbb
out
pop
outsb
rcl
push
pop
nop
push
pop
stc
mov
jae
rorl
arpl
jne
adcb
stc
sub
pop
push
xchg
xorl
cmp
add
scas
mov
adc
jbe
rcr
scas
adc
inc
test
xchg
scas
aam
nop
loopne
cmc
fldt
sbb
pop
mov
mov
xchg
and
ss
js
adc
and
xor
outsb
fdivrl
mov
shrb
pop
push
mov
test
imul
add
clc
xor
ljmp
jnp
repz
mov
roll
mov
and
inc
mov
and
mov
jne
loope
mov
lock
test
movl
dec
pop
ret
in
sub
fucomip
arpl
call
dec
enter
lods
repnz
push
and
movsl
dec
and
push
jg
jae
push
cmpsl
sti
in
shll
jb
clc
repz
lods
arpl
lea
in
nop
sub
imull
mov
push
jbe
or
pop
dec
loope
jo
sti
aam
sbb
cmpsb
negb
imul
into
movsl
or
and
ret
loop
jmp
sti
mov
or
jmp
cli
add
jb
fdivrs
push
aas
adcl
ret
dec
jns
dec
cltd
lods
and
loope
dec
cld
mov
mov
sbb
add
jge
mov
push
pop
sub
mov
icebp
fmul
data16
fs
xor
jb
push
aas
cs
call
inc
fisttpl
in
jbe
dec
mov
mov
test
jnp
dec
inc
dec
xorl
int3
and
xchg
shl
mov
ja
and
mov
xchg
sub
xor
rcr
add
adcl
dec
je
ret
mov
sahf
test
pop
mov
sub
xor
ja
lret
ds
mov
lock
addr16
fdivrl
popf
xchg
shr
lcall
outsl
push
sahf
addr16
es
cmova
xchg
popf
sbb
sub
incl
imul
ret
sbb
movsl
mov
fistpll
in
jb
inc
ljmp
outsb
jecxz
dec
lahf
push
sti
outsl
push
sub
mov
jo
sbb
enter
add
rcll
scas
mov
aas
sub
sub
iret
cmp
out
sti
pop
ja
mov
adc
clc
pop
stos
sub
test
push
icebp
dec
sti
sbbb
mov
mov
flds
cld
scas
ret
shll
test
mov
push
test
jns
in
inc
bound
mov
call
iret
aas
jge
mov
int3
les
sub
jno
out
mov
pop
lret
jp
mov
test
ljmp
addr16
fiadds
pop
jae
lcall
mov
out
jbe
sbb
jae
ljmp
pop
sbb
mov
ret
ds
sub
sbb
jle
add
fmull
xchg
lods
and
insb
loope
icebp
mov
arpl
xor
stos
inc
aas
out
je
cpuid
and
clc
xlat
sahf
pop
imul
jo
and
xor
add
rcrb
jle
sub
mov
mov
push
pop
repz
popf
loop
mov
jmp
pop
jo
mov
jmp
sub
psrad
xchg
cmc
shrb
hlt
push
pop
cmpsb
lods
lret
adc
ja
dec
jecxz
jecxz
dec
aam
pop
aas
imul
repnz
mov
mov
sbb
mov
add
add
xor
les
xchg
jo
xchg
jmp
xor
or
xchg
sbb
std
scas
and
movl
fstpl
aas
iret
add
loop
dec
pop
jne
stos
nop
in
test
sarb
repz
daa
dec
push
test
int3
inc
iret
insl
xchg
repnz
sub
stos
jns
and
faddp
mov
das
jge
jp
mov
add
mov
les
mov
sbb
xor
lret
test
adc
dec
adc
cmp
out
xor
push
lock
aad
loope
cld
mov
mov
push
fidivs
mov
loop
lahf
sti
mov
adc
pop
jo
fdivs
test
data16
and
jg
pop
lds
mov
out
push
and
mov
fs
lods
jp
sub
outsb
lahf
add
js
ja
jno
subl
aaa
outsb
sbb
jnp
sti
adc
stc
cmp
sub
repnz
outsb
fbld
lret
js
xor
mov
xor
and
aad
or
xor
dec
pop
pusha
cli
xor
loop
cs
pop
adc
pop
push
stos
mov
addr16
xchg
cwtl
sti
pop
das
push
sarb
jbe
rorb
mov
std
jbe
add
jge
cmp
pop
jnp
lahf
pusha
ret
push
mov
pop
mov
fs
dec
jecxz
ret
add
push
loope
pusha
repnz
test
push
popf
pop
or
sbb
ficomps
std
mov
push
lods
and
in
mov
sbb
ss
fdivp
fldt
shlb
add
push
and
cmc
and
nop
bnd
add
dec
ljmp
mov
outsl
mov
jg
push
iret
pushf
or
sub
sbb
xor
andb
push
arpl
pop
and
or
ret
inc
enter
jecxz
mov
hlt
lods
add
add
rol
pop
arpl
and
xchg
lret
adc
cmc
and
xor
stc
inc
and
fwait
cwtl
mov
cli
cltd
dec
insb
mov
jp
stos
in
loop
pop
lretw
pop
mov
or
jne
mov
mov
in
sub
dec
jb
lods
adc
pop
dec
lods
cli
jg
adcl
jno
aad
enter
test
cmp
pop
xor
sbb
push
loopne
ljmp
hlt
jo
dec
inc
lcall
xor
pop
rcrb
xorb
pop
xchg
add
cmp
push
das
adc
arpl
inc
repnz
test
adc
popf
xchg
push
jnp
mov
scas
and
mov
jbe
ret
loop
ret
push
fisttps
and
lret
pop
cwtl
push
mov
popa
or
add
mov
and
sbb
jnp
iret
pop
ds
aas
pop
sti
int
or
stos
cmp
decb
jecxz
add
xchg
mov
in
leave
movsb
mov
insl
outsl
pop
and
add
addl
outsl
int3
sub
sbb
and
adc
push
ffreep
xor
jle
dec
sub
enter
cmp
mov
test
pop
adc
push
xchg
lahf
iret
jbe
imull
sbb
dec
je
sub
dec
popa
mov
cmp
mov
adc
sbb
imul
push
testl
cmp
ret
out
scas
pop
clc
mov
cld
sahf
xor
es
xchg
cmpsb
xor
dec
fldcw
or
mov
movsl
mov
mov
outsl
lods
sub
push
xchg
mov
repz
xor
fdivrl
rorb
mov
cmp
aas
cmpsl
ds
dec
sbb
mov
dec
cmpsb
add
mov
sbb
jae
aam
mov
lcall
mov
mov
je
lret
insb
or
lahf
mov
lret
insb
mov
js
mov
je
pop
adc
adc
std
das
les
dec
sbb
pop
icebp
test
outsb
imul
in
mov
dec
push
or
xchg
ljmp
loop
loope
mov
enter
imul
fs
xchg
fcmovne
pop
push
lods
push
popf
pop
mov
adc
xlat
aas
cltd
scas
pushf
in
or
test
push
aad
dec
mov
xor
cltd
fcoml
mov
ljmp
and
cmp
imul
sub
fucom
mov
cmpsl
adc
inc
cmc
out
cwtl
lods
mov
fiadds
aad
fwait
xor
notl
dec
pop
push
xor
movsl
inc
push
lods
hlt
sbb
ja
rol
dec
dec
mov
adc
mov
push
fsubs
call
push
mov
scas
jae
js
dec
and
mov
jmp
aam
call
in
je
dec
outsb
movsl
mov
jp
cmpsl
movsl
mov
imul
cs
jp
cmp
pushf
jae
adc
and
and
jo
scas
pop
insl
enter
es
dec
add
xor
push
test
lcall
jge
repnz
inc
push
sahf
xorl
sub
jno
mov
mov
push
xor
repz
jne
idivl
cmp
fstpl
and
sahf
or
push
in
xchg
iret
inc
dec
push
pop
sahf
fisttps
dec
xchg
adc
cmp
xchg
mov
lcall
pop
repnz
gs
push
loop
nop
mov
mov
fnstenv
sti
in
mov
sub
adc
pushf
movl
mov
push
sbb
sub
leave
std
outsb
arpl
out
dec
adcb
or
inc
insb
push
test
push
sbb
mov
lret
sbb
imul
das
movsl
aaa
cmp
arpl
fimull
jo
mov
xor
sbb
es
pop
paddw
lret
sbb
mov
xor
inc
cmp
sub
jbe
ja
lds
mov
cld
out
pushf
in
or
pop
in
sub
cmpsb
mov
mov
adc
mov
jnp
and
insb
xor
xchg
mov
mov
or
xchg
lods
cmpsb
iret
add
clc
jbe
xchg
mov
cmpsb
xchg
out
mov
out
nop
cmp
adc
push
pop
xchg
jb
sbb
inc
mov
dec
mov
out
ror
js
push
ret
in
sub
push
jle
lret
add
int3
sub
shll
jp
xchg
repz
cwtl
loopne
lods
stos
loope
push
add
push
or
add
je
pop
or
pop
push
insl
or
and
daa
rorb
cmp
mov
and
cld
mov
ret
mov
cmc
cli
add
xor
add
xor
mov
loope,pt
mov
jmp
pop
pop
mov
xchg
inc
push
cmp
insl
mov
mov
aad
fwait
xor
sbb
scas
and
lods
push
jmp
push
bound
stos
xchg
xor
pop
repz
adc
inc
push
adcb
movsb
cmpsl
pop
jb
cmp
loop
cli
jp
push
aas
sbb
adc
push
aaa
icebp
jl
imul
mov
mov
cld
xor
pop
or
das
out
imul
and
pushf
stc
imul
mov
out
xchg
das
scas
sahf
shll
bound
outsb
lfs
out
xchg
dec
in
push
daa
add
push
scas
sbb
xor
mov
push
scas
push
sub
sub
nop
fldenv
add
xlat
or
sub
cltd
call
nop
lret
add
jbe
and
jecxz
ficoml
cmpl
ds
cli
icebp
repnz
sub
adc
int
mov
cmp
lcall
testb
shl
scas
cmp
pop
pop
sti
sbb
mov
add
imul
push
mov
fcompl
add
mov
ds
hlt
mov
push
xchg
dec
cwtl
push
scas
add
sarl
xchg
lds
sbb
subl
xor
push
movsl
push
hlt
adc
fcmovb
sbb
xor
data16
sti
cmpb
xorb
lods
xchg
popf
ss
data16
mov
jp
mov
jns
jae
and
add
cmp
cld
inc
lods
mov
jns
and
inc
lret
jo
jg
out
jns
or
dec
push
insl
lahf
std
mov
lock
and
ljmp
push
jnp
aad
jbe
fnsave
sbb
mov
cmp
mov
cwtl
push
adc
sub
aas
ljmp
insb
pop
cs
sbb
dec
and
inc
fimuls
lea
icebp
push
out
push
or
cld
hlt
sbb
insb
icebp
and
lret
cmc
mov
pop
mov
push
iret
bswap
jp
cmpxchg
cmp
ret
insb
lods
shlb
xor
test
adc
dec
int
lcall
sub
pop
mov
or
mov
shrl
out
pop
scas
xor
lret
inc
mov
push
inc
inc
daa
jae
pop
cmp
mov
jns
mov
mov
pushf
std
into
lret
cmp
pop
mov
sub
je
fs
jge
les
adc
ret
xchg
testl
out
test
xabort
inc
inc
cmc
pop
pop
cmp
dec
and
sbb
data16
mov
mov
jns
pusha
sub
mov
sbb
aas
jle
jne
dec
aad
xor
pop
dec
mov
stc
test
repnz
call
lods
loopne
shlb
mov
inc
adc
cmp
inc
push
bound
mov
in
incb
jg
dec
xlat
andl
jb
cwtl
arpl
push
test
rorb
cmpsl
outsl
orb
pop
inc
scas
and
lods
cwtl
inc
in
insl
cmp
in
test
jno
mov
cmp
inc
adc
pusha
inc
jle
mov
mov
jmp
mov
and
pop
nop
out
push
and
cld
pop
hlt
std
aaa
scas
insl
push
or
mov
xchg
sarb
sub
subl
cmp
std
sbb
mov
dec
mov
xchg
mov
out
ljmp
add
hlt
stos
imull
pusha
lahf
in
outsl
mov
lret
mov
stos
cmp
in
pop
adc
mov
movsb
mov
pop
xor
mov
popa
jnp
hlt
dec
out
in
lcall
je
pop
std
leave
adc
mov
cmpsb
test
mov
jno
jl
sub
and
inc
pop
push
ja
sbb
iret
sbb
add
stos
subl
sbbb
lods
pop
sub
lds
xchg
nop
fdivl
sbb
dec
outsb
in
int3
sub
repz
pop
mov
stos
push
mov
or
adc
sub
stos
fidivrl
pop
or
dec
dec
or
push
ret
mov
scas
dec
mov
data16
enter
xor
push
xor
int
jno
mov
jb
pop
or
out
and
lcall
jae
mov
ret
out
push
adc
arpl
inc
testb
push
mov
mov
pop
repz
dec
ja
in
insl
decl
ret
sub
dec
fadds
imul
push
pop
les
cltd
fdivs
sbb
xor
js
lcall
inc
mov
stos
jmp
ljmp
push
outsb
imul
aad
aas
add
fdivl
in
xor
sar
cmpsl
sbb
adc
cmpsb
bound
mov
cli
mov
xor
adc
sbbb
ja
push
notb
pop
mov
mov
sbb
repnz
insb
mov
sahf
mov
mov
dec
xchg
push
mov
pop
lods
ret
aam
rcr
lods
jne
and
addr16
arpl
push
and
xor
xor
sub
inc
rol
lock
pop
sti
sub
push
sub
aad
fbld
sub
dec
ss
sub
adc
jns
sub
stc
push
filds
sbb
aaa
mov
ret
xchg
push
enter
mov
nop
out
jno
push
gs
ret
xor
lock
xor
jmp
iret
popa
mov
cli
pop
sbb
or
into
insb
mov
jno
rclb
gs
jmp
popf
ljmp
or
sar
cmc
sti
insb
pop
mov
rcrb
sub
repnz
sbb
or
push
lods
cmp
lcall
popf
jl
int
jmp
adc
jo
stc
inc
fnsave
push
aam
shrb
dec
inc
cli
es
repz
and
mov
test
sarl
push
or
mov
push
dec
push
subb
pop
sub
push
ret
dec
std
add
leave
mov
dec
sarl
jno
dec
adc
aaa
mov
out
adc
arpl
popf
xor
idivb
xchg
push
push
pop
ljmp
xor
nop
pop
lcall
iret
nop
cli
dec
loopne
fmull
enter
ret
adc
adc
shr
push
add
cwtl
cli
cs
leave
inc
loop
push
and
fs
mov
and
sbb
aam
pop
add
mov
out
push
fldl2t
addr16
mov
ljmp
pop
cs
aad
fnsetpm(287
or
rcl
cmpl
mov
fdivl
mov
aaa
in
add
push
cmp
add
xor
ljmp
and
pop
test
in
je
mov
inc
psubsw
and
or
push
pusha
shlb
pop
adc
dec
mov
push
jnp
push
mov
arpl
xchg
fwait
gs
mov
das
out
mov
mulps
sub
mov
lea
jg
xor
and
movsl
push
loop
lds
xor
nop
fnstsw
push
or
xor
lret
mov
inc
lret
dec
jno
push
cs
jnp
xchg
daa
dec
mov
xlat
mov
mov
push
adc
fldl
cmp
dec
add
adc
sahf
dec
ds
in
add
inc
add
cwtl
add
add
out
cmp
pop
and
or
fs
fcomp
pop
int
loope
pop
fisttpll
or
repnz
mov
icebp
adc
jae
adc
xchg
adc
cld
sub
mov
cmp
fldt
pop
cmpsl
sahf
andl
adc
jl
mov
in
lock
sbb
in
jns
shr
test
lcall
pushf
cmp
data16
mov
daa
push
stos
test
lahf
mov
fdivrs
push
out
out
clc
mov
adc
test
sti
adc
adc
adc
xchg
xchg
inc
out
mov
sti
mov
outsl
cmp
mov
push
popf
test
jo
inc
insl
sbb
cmpsl
dec
ljmp
jle
sarl
mov
push
mov
mov
sub
inc
dec
inc
rolb
mov
pop
int3
lret
sub
xor
pop
lea
sar
insl
adc
pop
or
aad
mov
decl
sub
sbb
mov
fidivs
incl
lods
pop
cmp
pop
rcrb
movsb
xchg
std
call
mov
sbb
push
or
pop
add
mov
into
clc
test
mov
mov
xchg
mov
push
mov
in
mov
pop
ret
pop
cld
pop
fildll
lahf
lods
flds
aaa
ds
cmpl
mov
push
inc
pop
cmp
push
pop
hlt
dec
imul
scas
hlt
mov
and
repz
push
out
rorl
xacquire
setge
push
cmp
dec
jg
sbb
out
out
mov
xchg
stc
clc
aad
jle
imul
dec
push
pushf
daa
call
shl
popf
mov
nop
push
cmp
inc
out
outsl
cltd
mov
sbb
push
xorb
push
mov
adc
push
hlt
imul
scas
out
or
add
and
cmp
nop
pop
cmp
jl
daa
jbe
fistpll
push
mov
mov
daa
hlt
or
fsub
enter
lods
push
mov
ret
cs
roll
mov
and
sub
xchg
sub
and
mov
push
push
mov
mov
inc
sbb
je
mov
xor
xor
pop
lea
in
add
mov
repnz
mov
idiv
rolb
jb
add
addr16
jb
jo
xor
cmp
dec
sahf
std
fwait
xchg
jge
inc
shrl
rolb
mov
push
jmp
fistps
je
ficoml
std
imul
adcb
push
jge
push
dec
sbb
mov
xchg
and
repnz
jge
dec
sub
xchg
or
out
mov
popf
or
and
aas
mov
mov
push
popf
aam
loopne
bound
fcmovnbe
lds
jg
inc
das
sbb
xlat
lahf
scas
sub
add
test
int
lds
mov
fisubrl
pusha
or
cmp
mov
mov
cwtl
xor
stc
aad
mov
and
and
xchg
loope
or
jg
jl
jle
cmp
inc
mov
dec
imul
int
or
sub
out
inc
lcall
popa
dec
dec
cmp
lods
cmpsl
repnz
sahf
lods
pop
xchg
rolb
push
dec
sub
mov
or
push
jbe
push
clc
in
cmp
pop
mul
addb
hlt
push
lds
cs
shlb
mov
push
lods
xchg
mov
inc
mov
jecxz,pn
xchg
fistl
aam
lods
sub
enter
xor
ss
xchg
jb
mov
xor
xchg
and
jge
ficoms
xchg
int
push
push
outsl
scas
jge
or
je
and
pop
addr16
xchg
sub
push
mov
ficompl
in
push
jnp
fimull
aad
repz
je
xchg
jl
aam
insb
shl
aam
int
std
xor
xchg
pop
les
mov
push
test
add
dec
adc
dec
push
fistps
adc
xchg
lock
cwtl
in
fstl
repnz
pop
das
jg
into
mov
int3
sbb
in
jae
lds
inc
cld
enter
cmp
fnstenv
mov
les
fiadds
sub
dec
add
movsb
cwtl
out
mov
popf
pop
adc
addb
pop
mov
loope
adc
or
negl
mov
dec
push
mov
iret
push
fisttpl
adc
lock
daa
add
cmp
or
out
pop
pushf
repnz
data16
jno
lcall
call
mov
push
test
ja
lret
mov
xor
xchg
rolb
or
sbb
xor
fcoml
dec
movsb
mov
inc
jo
inc
and
ja
or
or
ljmp
ja
fisttps
addr16
lahf
fisttps
imul
jg
jnp
jns
test
stos
test
das
xchg
dec
dec
int3
outsb
test
mov
push
dec
stc
inc
sbb
daa
xor
jb
or
cmpsl
add
insl
sub
mov
or
jbe
cmp
ljmp
mov
dec
jmp
and
out
add
jno
lods
test
loopne
mov
iret
push
dec
clc
cmp
xchg
scas
dec
testl
ret
cmc
in
mov
ret
out
mov
add
mov
popa
xchg
pop
ret
call
jle
xchg
std
mov
pusha
outsb
inc
data16
test
inc
lahf
popf
fs
lods
aad
inc
rolb
sbbl
shr
push
popa
adc
in
cmpsl
in
inc
out
sbb
sbb
and
jns
pop
rorl
mov
ds
and
ss
dec
adc
imul
cld
sub
nop
adc
lods
testl
cltd
hlt
adc
lret
gs
jae
xor
or
adc
das
xchg
inc
lahf
push
test
cmpsl
mov
pop
repz
dec
fucomi
sub
jae
jbe
gs
pop
addr16
aas
jns
iret
sub
jns
test
mov
out
fnstenv
les
inc
jl
xchg
mov
or
add
or
notb
sti
enter
mov
xor
xchg
add
sbb
pop
insb
fdivl
xlat
pushf
stc
enter
mov
mov
movb
or
xor
fldl
in
test
outsb
addr16
repnz
jb
mov
or
pop
scas
fmuls
outsl
std
cwtl
jecxz
pop
fstpt
ja
imul
cs
jge
or
mov
lahf
mov
loopne
imul
lock
push
xchg
outsl
xor
in
or
imul
mulb
xchg
dec
iret
sarl
jb
ret
inc
and
and
push
repz
imul
insb
adc
adc
aad
pop
mov
push
dec
xor
sbb
test
mov
fstl
xchg
xchg
ss
pop
mov
cmp
sbb
xchg
xchg
cmp
pop
cmpl
xchg
ret
dec
psubb
shrl
push
mov
int
pop
in
lds
inc
scas
or
out
fsubs
loope
jbe
div
test
adc
call
cmp
sbb
xchg
jg
and
popf
stos
pop
push
mov
sti
iret
push
or
fsubrs
je
mov
lahf
cli
mov
lret
cmp
push
cmpsl
jg
jecxz
hlt
out
test
jle
scas
sbb
push
xchg
mov
mov
rorb
and
cs
adc
and
push
jne
sbb
aad
push
lahf
sbb
cmp
or
mov
subl
mov
xor
repnz
int3
fsub
mov
out
sub
and
popf
js
xchg
stos
inc
xor
sub
ja
dec
push
mov
int3
pop
sbb
out
insl
push
mov
xchg
ds
cli
adc
pop
stos
push
add
and
push
shl
pop
or
divl
lods
push
mov
fstl
fisubs
pusha
or
xlat
popa
ficoml
aaa
cmp
mov
out
sbb
out
repz
movsl
push
sbb
out
test
add
and
cwtl
mov
popf
scas
loopne
xor
sub
xchg
jl
dec
gs
ret
jno
sbb
fmul
xchg
adc
iret
andl
mov
push
xchg
jp
add
in
or
mov
xor
aaa
push
fs
mov
push
pop
add
fmul
test
xchg
pushf
fidivl
pop
mov
push
push
or
insl
xor
xor
cmp
jge
cmc
test
sub
test
dec
pop
outsb
or
dec
push
or
fsubrl
dec
imul
cld
sub
xchg
cld
inc
mov
test
leave
into
cmp
or
imulb
data16
dec
test
xchg
popa
xor
pop
sbb
push
mov
popf
jmp
pop
mov
adc
decb
icebp
push
mov
jns
out
movntq
lret
sub
mov
jge
dec
leave
jl
dec
adc
sahf
mov
jnp
mov
inc
test
aaa
test
ljmp
xchg
pop
and
out
lock
xor
mov
cwtl
xor
jmp
inc
shlb
push
inc
adc
inc
test
insb
sub
das
aaa
add
pop
mov
test
cmp
adc
les
lods
jmp
lret
in
es
ss
stos
int3
psubsw
dec
lret
inc
pop
adc
jae
xchg
xchg
js
test
cli
shr
push
jns
xor
sbb
mov
or
sbb
bound
mov
pop
scas
shrd
scas
dec
pop
in
ret
pop
test
jns
fdiv
cmpsb
xchg
in
shlb
loop
das
in
mov
fsubl
ficoms
mov
jb
pop
call
jno
add
into
ficompl
int3
lods
testl
sarb
add
pop
mov
icebp
in
jg
flds
movsb
repz
mov
mov
xlat
cwtl
sbb
fnstsw
out
pop
or
sub
std
mull
pop
repz
xlat
or
ficoml
ss
pop
jge
push
aas
sbb
mov
cmpsb
lods
sub
mov
xor
js
mov
sub
in
je
ljmp
xor
cmp
cmc
jmp
das
cmpsl
dec
xor
pop
aam
das
mov
adc
aaa
in
fmuls
shlb
push
fwait
mov
mov
xor
dec
and
cmc
and
pop
inc
push
inc
insb
mov
dec
imul
and
stc
or
cmpsl
push
sbb
add
xchg
outsb
popa
mov
sbbl
das
fisubrl
mov
push
loopne
shl
push
xchg
mov
daa
pop
sub
mov
xchg
loop
mov
andl
mov
jno
stc
ja
sbb
pop
and
movsb
mov
xor
sub
dec
into
xor
lret
mov
lods
fsubs
repz
jbe
jg
fdivr
shll
dec
js
pop
jl
cmp
and
sub
pop
xchg
fbld
cmc
ror
aad
cmpb
push
aam
outsl
cld
pop
dec
dec
cmc
out
jne
lods
jge
repz
add
aas
dec
mov
cmp
adc
cli
pop
cld
mov
xchg
or
cmp
push
test
popf
daa
loopne
and
jo
cmp
xor
es
icebp
idivb
ljmp
adc
in
ret
push
sub
push
xchg
push
out
push
add
in
lret
inc
and
rol
or
push
push
add
inc
sub
push
pop
and
les
ljmp
mov
stos
dec
jg
dec
inc
call
xlat
and
jnp
fsubr
xchg
fstpt
and
dec
push
in
jno
pop
mov
ja
scas
mov
in
push
mov
jl
call
mov
xor
dec
add
and
xor
inc
ret
in
test
push
cmc
loop
and
popf
nop
loop
or
das
mov
sahf
test
cmp
into
xchg
dec
dec
push
into
outsb
push
mov
leave
sahf
lcall
dec
ds
push
sub
add
insl
arpl
leave
mov
movsl
xchg
fisttps
and
ss
aaa
sarb
push
scas
xor
stos
mov
fiaddl
das
xrelease
xchg
push
cmp
fwait
rcll
adc
sbb
ret
cld
pop
lahf
ret
jg
enter
sub
cmp
hlt
add
jno
inc
mov
insb
jmp
jp
jns
xchg
xlat
mov
inc
xchg
or
iret
or
sub
andl
lock
mov
ja
xchg
mov
mov
inc
ds
mov
repnz
mov
mov
add
enter
mov
out
aas
test
in
rorl
insl
insl
add
and
ret
jo
cmp
dec
mov
xor
cmc
push
mov
sbbl
add
aam
jle
or
jl
and
sbb
add
ss
inc
pop
lahf
ds
clc
adc
and
divb
xor
and
test
adc
sub
mov
ficoms
aam
xchg
pop
cmp
lret
mov
xchg
arpl
nop
inc
lea
mov
mov
cltd
mov
mov
xor
roll
xlat
mov
aaa
adc
test
cltd
or
xor
movsl
leave
pop
movsb
adc
cmp
outsb
inc
mov
mov
mov
sarl
inc
adc
cli
lahf
push
xchg
pushf
or
mov
movsl
xchg
sarl
ficompl
das
inc
inc
dec
fld
into
sahf
lods
loopne
sub
in
nop
ret
xchg
xor
adc
inc
jnp
insb
popf
adc
outsb
xor
pop
test
stc
mov
sbb
xorl
icebp
jo
xchg
cwtl
sbb
lods
rcrb
add
pop
fcmovu
sahf
pushf
pop
xor
adc
xchg
scas
sbb
sbb
mov
mov
push
mov
in
push
into
mov
mov
gs
fldenv
cmp
pushf
pop
and
pop
fadds
shl
and
sub
mov
jb
mov
mov
test
jns
out
out
xchg
adc
adc
sbb
fldl
and
into
std
mov
and
mov
fsts
sahf
or
mov
shll
xor
lds
pop
fs
cmpsb
fdivl
lret
cmp
aam
enter
xchg
sbb
cs
inc
test
roll
jo
dec
inc
ret
mov
into
pusha
jge
jle
inc
sub
mov
nop
xor
sti
movsb
sti
lods
lcall
stos
adc
loopne
aas
out
sub
mov
jae
xor
adc
or
repz
cmp
repnz
mov
or
repnz
push
adc
sbbl
test
fwait
adc
sbb
or
push
popf
cmp
js
lret
add
nop
xor
ret
or
cmp
leave
adc
je
rcr
shl
jge
mov
adc
mov
or
add
testl
je
add
push
repnz
xchg
or
xor
movsb
in
movsb
adc
fadd
roll
fs
arpl
std
jl
pop
popa
aad
jl
mov
adc
outsl
mov
jmp
jb
insl
std
scas
jns
jp
fcoml
fsubrl
xchg
mov
addr16
aas
mov
int
cmp
ds
mov
mov
shl
sti
inc
arpl
movsl
push
pushf
cmp
xchg
lret
add
pop
rcrb
mov
push
and
sbb
fidivrs
jecxz
std
mov
pop
mov
mov
xchg
dec
xchg
in
inc
dec
jge
jns
sbb
into
jle
sbb
les
push
mov
jp
movb
ja
cli
aad
lods
shl
sub
mov
mov
bound
adc
jo
mov
xchg
bound
es
cmp
push
pop
jle
mov
mov
test
in
popf
pop
pop
sbb
pop
or
and
shll
mov
rcrl
sbb
mov
adc
repnz
pop
sub
das
insl
lock
out
hlt
aas
fdivl
imul
loop
pushf
cmpsb
push
les
imul
andl
or
stc
mov
xor
jecxz
pop
sar
sub
and
or
xor
adc
iret
mov
push
popa
inc
addr16
pop
pop
mov
movd
cmp
xchg
sbb
and
shll
jle
int
mov
inc
insb
sarl
xchg
lcall
jecxz
hlt
insl
int3
repz
lock
cmc
shll
jp
test
movsl
loopne
or
ljmp
mov
mov
icebp
pop
loop
shlb
xor
sub
aam
icebp
sub
sahf
lret
mov
or
jge
icebp
sub
inc
inc
push
in
mov
ja
or
jge
jle
pop
or
cmp
dec
add
and
outsb
mov
sahf
mov
cmpsl
mov
xchg
filds
add
dec
jecxz
aas
lock
lea
insl
xchg
jl
push
adc
jbe
and
loopne
or
jl
dec
stos
mov
xor
outsl
outsb
inc
mov
push
xor
leave
rorl
cwtl
mov
andl
xor
inc
xchg
sbb
push
gs
xchg
shll
popa
fcmovb
xor
in
cmc
lods
js
ljmp
xchg
dec
pushf
and
ret
shll
jmp
or
repnz
sub
inc
cmpsb
lods
and
scas
cmc
imul
loopne
sub
fidivrs
push
andb
and
mov
test
ret
loopne
andb
decl
mov
push
xchg
ja
adc
xchg
in
ja
icebp
inc
mov
sub
ja
xlat
pop
lds
inc
sti
jns
pop
faddp
mov
imul
sub
insb
fwait
in
push
and
ljmp
lock
lret
jbe
push
lods
test
cmp
pop
push
loop
outsb
movsl
or
cltd
lea
inc
idiv
movsb
mov
push
push
mov
cs
xorl
and
dec
setne
sar
insl
dec
xadd
pop
dec
sahf
icebp
ds
adc
adc
sub
shlb
pop
mov
not
jecxz
dec
pop
int
aas
out
xor
in
addb
pop
lret
testb
mov
pusha
sbb
pop
shr
sbbb
jns
negb
call
out
dec
in
arpl
dec
into
arpl
sbb
xchg
test
icebp
and
mov
aaa
dec
pushf
mov
sbb
add
and
mov
int3
mov
mov
movsl
cmpsb
pop
xchg
and
lea
cmp
fcomps
mov
notl
rcrl
add
inc
mov
roll
fdivs
es
and
sbb
lcall
cmp
adc
sbb
lret
fistpll
sub
pop
xor
pop
lea
in
outsl
push
subl
sub
lret
jns
mov
lods
iret
es
addr16
sub
mov
inc
xchg
sbb
xchg
ret
cmp
rcrl
aam
cmp
xor
iret
movsb
enter
xor
scas
lock
shll
cmpb
pop
push
dec
pop
pop
icebp
shr
or
ffree
insl
idivb
push
sub
sub
pop
hlt
mov
out
dec
and
lahf
mov
push
stos
shl
push
lds
dec
mov
lock
sub
and
and
jne
mov
push
dec
sbb
push
sti
outsl
dec
lods
jle
jnp
sti
jl
clc
mov
jno
ljmp
adc
or
push
popf
jnp
mov
pop
mov
fisubs
mov
jbe
lret
push
jecxz
xor
stos
mov
loopne
popa
popf
ja
lcall
xor
cmpl
and
adc
and
mov
cli
or
enter
sbb
pop
or
mov
pop
out
test
pusha
aad
mov
jae
cld
push
mov
push
daa
je
inc
adc
jbe
mov
or
xchg
adc
or
xchg
xchg
aas
and
mov
out
data16
cmp
negl
stos
mov
xor
fldl
shlb
or
bound
push
mov
and
push
mov
repnz
imul
sarb
daa
inc
cmp
push
enter
pop
stos
fiaddl
add
dec
mov
inc
inc
sbb
shlb
cmp
ja
mov
pop
fs
lcall
nop
push
cmpsb
test
ss
je
push
in
jbe
inc
mov
xchg
insb
flds
xor
dec
test
call
or
jb
xchg
or
test
add
stos
push
cmp
jo
pop
dec
xlat
jno
xchg
cmpsb
pop
stos
sbb
jmp
dec
xor
bound
dec
xchg
xchg
mov
pop
jp
aas
jg
add
xorl
in
sbb
addr16
aam
inc
jmp
inc
sub
out
pop
cs
ficoms
imulb
xchg
pop
outsb
pusha
negb
subb
iret
ret
push
add
sbb
sub
dec
sbb
stos
dec
jp
jg
out
test
mov
into
ljmp
out
sarl
xorl
icebp
sbb
and
std
daa
adc
jb
leave
pop
sub
pop
xor
int3
daa
jp
adc
mull
and
hlt
addb
mov
xchg
lret
mov
sbb
es
repz
int
aad
adc
std
fnstsw
sbb
sbb
sub
ret
dec
cmpsb
adc
into
jp
out
push
jno
add
in
cmp
lret
loope
out
pop
mov
xor
ret
hlt
int3
add
pop
loop
xlat
xchg
push
and
ss
ret
mov
jb
ja
pop
inc
nop
sbb
sti
dec
in
outsb
hlt
xchg
pop
addr16
mov
add
enter
xchg
inc
imul
inc
rcrb
fsubr
fstpt
mov
inc
inc
repnz
push
mov
pushf
andl
mov
ljmp
les
insb
xchg
inc
jbe
cmp
or
es
pop
mov
fistpl
clc
push
cltd
pop
push
daa
jle
push
iret
and
inc
and
mov
or
test
sar
pusha
loopne
nop
xor
lods
ficoms
inc
shr
in
add
aas
and
mov
mov
rolb
xor
xor
lods
sub
outsb
push
dec
test
out
sub
in
pop
xchg
cld
imul
mov
aam
jle
push
or
cmp
xor
xor
rclb
mov
insb
adc
mov
push
cmpsl
in
out
fldl
xor
inc
roll
scas
dec
in
stc
ja
roll
add
sbb
aad
hlt
out
gs
iret
xor
and
xlat
pushf
sub
cmp
jno
testb
jmp
xor
hlt
xor
jae
inc
lret
pop
adc
mov
add
sub
xchg
xchg
js
add
pop
push
ja
jl
je
dec
out
ret
inc
mov
cmp
call
test
into
mov
lods
int
mov
and
pop
sub
out
mov
fisubl
mov
jnp
andl
lds
add
insb
mulb
and
fucom
inc
cmc
pop
adc
inc
and
push
lods
mov
repnz
sti
std
or
cltd
add
dec
mov
and
pushl
mov
ror
jp
push
mov
test
ret
loopne
xchg
cld
xchg
dec
add
push
jb
fidivs
xchg
enter
lods
jns
inc
lret
dec
in
cltd
rclb
cmp
div
stos
leave
jns
inc
mov
aam
mov
imul
pop
orl
push
push
add
mov
mov
les
pop
cmc
and
adc
in
and
sahf
add
mov
sbb
cmp
shlb
sbb
dec
and
fists
pop
aam
imul
cltd
sbb
sbb
lds
idivl
gs
sub
in
mov
push
xchg
xchg
xchg
xchg
test
xchg
fsubp
mov
outsb
and
cmc
sub
pop
fwait
sub
sbb
fst
xchg
rep
ja
xlat
outsb
imul
pushf
std
lahf
ret
sbb
inc
js
mov
aaa
fisttpll
jle
and
nopl
push
bound
roll
loopne
ret
icebp
sub
mov
lahf
add
lods
jmp
adc
jno
cwtl
lcall
ret
adc
sub
cwtl
js
ret
cmp
cld
mov
pop
sub
adc
inc
lret
jl
mov
les
or
dec
push
push
gs
mov
mov
sbb
push
pop
add
mov
call
or
outsb
call
push
xchg
jae
pop
out
insl
ljmp
jnp
mov
test
push
sahf
out
adc
inc
dec
pop
push
mov
xchg
push
pusha
jno
sar
mov
cmp
mov
dec
push
add
inc
pusha
add
pop
jae
out
adc
out
sbb
repz
push
inc
scas
sub
int
mov
shll
jne
js
xor
scas
push
jbe
fcomps
cmpsl
dec
int3
sub
jb
pop
loop
or
scas
aaa
inc
pop
xchg
imul
out
mov
popa
adc
out
lods
adc
in
push
mov
add
mov
aam
imul
shll
mov
shrl
loopne
cmp
jnp
mov
xor
loopne
push
out
adc
mov
out
pop
repnz
and
popf
or
js
inc
mov
es
and
add
fmuls
cmc
shl
loop
fdivs
ror
jno
sub
dec
add
call
inc
andb
insl
js
cwtl
cld
sbb
push
add
add
leave
lahf
push
fdivs
fisttpl
xor
xor
and
out
mov
or
fwait
outsl
hlt
test
orl
jmp
xchg
xchg
add
or
jne
fidivl
lret
pushf
in
cmp
inc
daa
test
jno
mov
mov
sub
dec
inc
aam
mov
rcrl
popa
jbe
sbb
push
insl
cmp
int
popf
lret
mov
out
xchg
push
xor
mov
cs
pop
dec
mov
xchg
shrb
sbb
cmpsb
mov
add
xchg
nop
mov
jb
dec
lods
dec
frstor
or
lods
stc
or
sahf
mov
sbb
lahf
push
cmc
fmul
push
hlt
xchg
pop
aaa
je
addr16
sub
imul
push
jl
push
das
or
lcall
xor
xor
xchg
mov
test
aad
adc
outsl
jns
fnstsw
out
sub
jno
js
inc
lods
test
add
mov
and
push
icebp
stos
mov
cltd
sbb
inc
xchg
xor
sbb
aas
mov
stc
sub
jg
stos
loope
addb
add
adc
cli
outsl
add
and
xchg
cmc
out
fistpl
sbb
in
insl
inc
iret
inc
jnp
inc
sbb
push
jb
pusha
bnd
ret
inc
out
mov
xor
pop
inc
ja
movsl
leave
sub
call
imul
dec
mov
dec
xchg
dec
and
cmc
fucomi
or
add
adc
xchg
cmpsb
sub
push
popa
call
and
jae
cmp
inc
ror
sub
addl
xchg
inc
xchg
stc
repz
fwait
shll
sub
mov
and
push
loope
aad
push
incb
dec
lret
inc
jmp
arpl
scas
mov
xchg
mov
outsb
es
xchg
pop
push
sub
inc
andb
add
cmc
sub
mov
push
lcall
add
in
and
shrl
pop
rcrb
hlt
test
mov
pop
jl
jno
add
imul
loope
inc
imul
in
xor
movsl
bound
js
ja
adc
mov
ret
out
cmp
sbb
gs
in
subb
adc
sub
dec
nop
cmp
stc
fs
ljmp
jmp
xor
adc
out
jl
sti
jae
cmpb
imul
leave
cmp
dec
rcll
dec
nop
dec
rcl
inc
mov
dec
fmulp
or
inc
sbb
pop
inc
inc
cmpsb
clc
je
push
loopne
aad
shl
push
rorb
jl
xchg
or
pop
push
mov
iret
sbb
push
dec
rcrl
or
pop
and
xor
bound
adc
int
icebp
fstpt
pop
jb
scas
or
jmp
js
ret
test
ret
data16
mov
popa
in
outsl
pop
insb
ljmp
xor
es
xor
std
pop
shrb
insl
add
pop
push
test
fwait
mov
rcll
dec
and
xlat
ror
popa
call
xlat
popa
pusha
ja
xchg
repnz
loope
scas
mov
sahf
or
push
lock
in
fcomp
cmp
xor
dec
push
popa
push
sub
lock
cld
pop
rcrb
mov
test
mov
mov
fsub
mov
shlb
dec
pop
lahf
dec
pop
sub
loop
and
add
ljmp
cmp
cmp
add
insb
shrb
cmp
sub
out
jecxz
stc
in
push
mov
or
jbe
cmp
push
not
jle
int
jbe
sahf
aaa
adcb
leave
scas
div
movsl
adc
cwtl
fbstp
jge
fistl
inc
insb
cs
ror
mov
insl
sub
filds
mov
movsb
add
xchg
xchg
dec
outsl
cmp
shufps
push
mov
leave
decb
lea
sbb
push
pop
sbb
sub
mov
pusha
push
arpl
sti
fisubrl
outsl
rol
test
pop
imul
lret
cmp
adc
ret
arpl
scas
rcr
inc
push
add
mov
mov
pop
dec
push
inc
xchg
mov
test
mov
imul
adc
int3
mov
adc
xchg
std
pushf
xor
mov
cmp
scas
add
lea
sbb
in
dec
cmp
jno
mov
push
repnz
mov
dec
lock
cmp
jl
in
pop
je
repnz
stos
test
rcr
fdivs
adc
add
aam
sbb
pop
push
daa
pop
pop
lock
lock
imul
ljmp
jmp
sub
popa
jg
rclb
and
sti
sahf
out
mov
lds
cltd
cld
cmpsl
mov
jle
push
xchg
lock
outsl
outsb
fstpl
out
stos
insb
repz
insl
jae
and
and
pop
enter
rorl
jbe
jae
adc
ret
dec
lahf
shll
mov
call
rorb
lock
inc
xchg
in
jbe
movsl
sub
mov
shrb
mov
mov
faddl
push
iret
aas
lock
xlat
push
loope
jmp
mov
ljmp
ret
sahf
lahf
loop
pop
push
fidivrl
aam
mov
loope
fisttpll
clc
fscale
lock
mov
ror
into
cmp
push
les
fistpl
aas
xchg
cmpsb
cmp
scas
jmp
fmul
mov
xchg
sub
je
idivl
mov
pop
pop
roll
idiv
lcall
mov
and
sbb
lret
pop
shll
stc
add
cwtl
test
xor
adc
fs
mov
mov
repz
mov
clc
and
xchg
cmp
dec
test
fbld
sahf
sahf
sti
aas
and
sahf
sub
mov
pop
bound
sbb
stc
pop
dec
ljmp
cmp
inc
hlt
mov
push
fldl
movl
xor
or
mov
mov
les
mov
lret
jne
pusha
aad
fistl
call
dec
in
xor
orl
cmp
scas
lahf
adc
rorl
popa
mov
cltd
push
jle
fsts
mov
rcrb
or
jmp
mov
xor
scas
std
outsl
mov
xchg
int3
inc
clc
dec
repz
or
xchg
lds
mov
xchg
xchg
xchg
inc
mov
mov
lret
jne
dec
jl
lea
cwtl
mov
popa
fimull
xor
jmp
or
pushf
mov
pop
push
je
and
aam
nop
inc
jecxz
shlb
adc
jbe
inc
mov
dec
fsubl
add
or
xchg
insl
arpl
loop
cmp
ljmp
test
or
stos
and
fisubl
enter
pushf
mov
shrl
rcll
ds
aaa
xchg
mov
in
fmuls
dec
or
mov
push
inc
xchg
insl
or
cmpsl
pop
push
sahf
daa
xchg
push
cmc
inc
push
cmp
mov
sub
sbb
pop
pop
inc
jg
imul
xchg
scas
insl
adc
push
gs
ljmp
pop
fmuls
fstps
mov
adc
adc
out
and
insb
jmp
roll
jb
icebp
ret
inc
mov
xchg
repz
out
aaa
cs
pop
jge
sbb
push
repnz
pop
rcll
sub
in
adc
loope
shrb
bound
insb
sub
cwtl
push
jae
icebp
fwait
inc
stos
ret
and
cmp
push
pop
int3
push
jbe
ss
sbb
xchg
sbb
test
mov
scas
and
enter
xchg
mov
or
add
gs
in
sub
sti
dec
xor
mov
and
mov
xor
imul
inc
fidivrl
jae
popa
cmp
movsl
out
addr16
mov
push
pop
enter
jbe
mov
and
js
cmpb
icebp
jo
mov
xlat
shlb
mov
pop
ds
out
mov
add
js
pop
pop
push
insb
cmp
pop
jp
stc
enter
lea
sub
jp
sub
pop
adcb
in
daa
cld
jae
js
addl
clc
xor
pop
adc
xchg
cmpsl
std
xlat
push
pusha
ret
mov
xchg
shll
aaa
out
sbb
sbb
add
add
fcoms
sbb
and
roll
jmp
in
int
mov
lret
push
popa
or
mov
scas
mov
dec
test
out
xor
mov
aad
call
xchg
daa
aas
inc
sar
sub
in
imul
nop
jp
pop
pushf
leave
xlat
xchg
pop
repnz
or
sti
mov
test
sbb
clc
cld
add
xchg
call
xchg
mov
ja
inc
adc
in
insb
pop
xchg
in
movsb
xchg
add
icebp
xchg
jbe
ret
xorb
pushf
xor
xchg
das
das
push
jecxz
shlb
andb
mov
jbe
mov
movsl
adc
pop
lods
cltd
lea
popf
adc
test
pop
loope
pop
inc
das
clc
push
mov
cmpsb
sub
and
and
jns
pop
xchg
mull
js
rorb
push
in
les
dec
add
adc
jb
out
std
push
mov
push
push
out
add
and
call
rclb
imul
or
pusha
rcll
leave
in
push
xchg
into
cmpsl
in
jmp
hlt
popa
jp
adc
push
scas
jne
mov
popa
mov
addl
and
mov
lods
pop
cmc
add
or
mov
ss
cltd
lcall
je
cwtl
ret
cs
sbb
insl
insb
push
jmp
mov
lods
xchg
xchg
jne
jo
and
xor
mov
mov
dec
es
call
xchg
lret
jae
push
add
add
jecxz
sbb
sbb
sub
ficoms
stos
and
cmp
jb
cs
jl
into
sahf
mov
stos
div
fs
jae
imul
rclb
popa
xor
test
pop
adc
cld
lock
push
cmp
inc
mov
test
shlb
xchg
dec
js
lahf
pop
punpckldq
jmp
test
fs
xor
xchg
add
cmp
push
mov
aad
sub
xor
sbb
dec
call
mov
imul
dec
hlt
and
ret
faddl
out
mulb
lds
xlat
sbb
dec
push
mov
ret
jle
or
push
lds
or
sbb
add
adc
jbe
sbb
cli
mov
push
fs
cli
aad
in
sbb
repz
xchg
data16
mov
aam
aaa
movsl
add
bound
mov
and
icebp
pop
push
add
mov
mov
xchg
mov
mov
xor
sbb
add
sti
fistl
cmp
cmp
push
roll
test
test
xor
pop
mov
mov
popa
std
mov
adc
push
ljmp
icebp
adc
sub
mov
lea
pmulhw
movsb
mov
sbb
add
inc
cmp
push
das
outsl
test
popa
cld
mov
or
imul
popf
rcll
loopne
jo
dec
sbb
stos
xchg
push
pushf
pop
and
movsl
xor
stos
mov
sti
add
pop
stos
sub
jb
push
xor
clc
cmp
popa
ret
cwtl
inc
add
outsb
ja
dec
and
sub
push
and
mov
jns
cmp
lcall
mov
xchg
push
add
mov
imul
inc
lods
fists
mov
movsl
test
cli
xor
xchg
es
sub
add
mov
mov
push
sbb
mov
repnz
loope
incb
mov
stc
and
add
and
btr
rorl
cmp
xchg
xchg
sti
dec
call
andl
mul
push
pop
lahf
cmpsb
js
sub
cmp
stc
mov
leave
les
mov
xlat
jns
pop
add
sub
mov
rclb
or
dec
arpl
jg
movsb
sbb
mov
and
in
or
sbb
dec
mov
stos
push
lcall
inc
jnp
in
hlt
bound
and
cmpsb
imul
mov
mov
loope
and
sub
por
fwait
pop
mov
add
jnp
jecxz
lret
adc
adc
aaa
into
test
sub
and
sbb
fwait
mov
lret
adc
das
mov
xor
inc
sbb
add
dec
in
sbb
aam
mov
push
fidivrs
push
lahf
aam
shll
scas
ljmp
sti
stc
push
xchg
jbe
repnz
xchg
jne
xlat
cmp
xor
scas
push
or
mov
sub
subl
inc
pusha
mov
pushf
mov
repnz
pop
popf
divb
xchg
insb
ss
ss
pop
or
cmp
jp
hlt
cltd
pop
fisubs
sarb
aas
lods
mov
es
fisttps
mov
or
dec
pop
scas
xor
inc
outsl
add
xor
and
inc
push
cwtl
ss
and
sub
fistpll
nop
adc
lods
xchg
add
mov
rcll
adc
daa
cmp
data16
mov
les
filds
movsl
fists
fsubrl
mov
mov
mov
orl
jg
popf
inc
test
add
rolb
cmp
scas
xor
xchg
mov
mov
jno
xchg
jp
shrl
mov
ret
ds
ficompl
adc
xchg
adc
jecxz
fsincos
test
sbb
stos
jl
mov
repz
sub
mov
scas
fcomps
daa
lret
inc
add
mov
decl
cmc
jns
cli
and
testb
cmp
aaa
imul
leave
dec
dec
sbb
repz
and
xchg
dec
mov
pop
mov
insl
xchg
fdivrl
mov
insl
adc
test
pop
mov
pop
in
and
packssdw
loopne
imul
lahf
scas
inc
mov
push
push
les
ret
jnp
xor
mov
loope
andl
cs
push
dec
lods
popf
mov
popf
loop
insb
mov
mov
shrl
sbb
ret
dec
scas
push
sahf
pop
iret
das
jg
test
and
out
inc
insb
jmp
jns
mov
imul
clc
pushf
sub
or
and
lret
mov
sub
mov
mov
xor
sub
ljmp
pop
loopne
jae
jae
mov
mov
mov
cmp
clc
hlt
es
mov
cmpl
or
xor
ficoms
xchg
push
mov
insl
mov
mov
aaa
jp
mov
cltd
lods
sub
shlb
mov
inc
js
out
push
mov
xchg
xchg
or
mov
outsb
aam
ret
je
mov
pop
ja
pop
neg
jmp
sbb
jmp
addr16
cld
xor
neg
das
mov
cwtl
mov
adc
es
addb
jecxz
add
pusha
stos
mov
adc
push
ja
or
repnz
loopne
jge
mov
lret
arpl
nop
fisubl
or
iret
dec
sub
negb
adc
js
arpl
lods
push
push
mov
inc
pop
in
adc
sub
add
sub
sub
dec
adc
dec
push
mov
inc
mov
push
xor
sbb
fnsave
sbb
push
lea
std
nop
dec
xlat
scas
push
iret
test
pop
mov
mov
cs
mov
pop
mov
lods
mov
xchg
sub
outsl
push
xlat
leave
test
push
cmp
in
adc
fwait
lea
daa
xchg
jle
outsl
cmpsl
sub
in
in
popa
pop
leave
xchg
ret
xor
or
lods
scas
inc
test
iret
test
cmpsb
shl
mov
into
cld
mov
sbb
mov
dec
out
lock
cmp
mov
je
sub
mov
add
bound
sbb
adc
mov
mov
aas
es
inc
gs
push
inc
push
je
inc
mov
inc
mov
sub
inc
jb
adc
fimull
inc
cmp
out
daa
mov
shrb
aam
sahf
fwait
ss
or
mov
popf
iret
jle
mov
sti
adc
mov
repz
jmp
cld
and
and
mov
jge
xor
mov
add
lret
inc
mov
in
sub
loope
sub
ret
inc
test
add
lods
repnz
pop
mov
adc
or
enter
push
jg
inc
mov
xchg
dec
push
dec
adc
out
cmp
jbe
ljmp
pop
dec
andl
push
sub
cmpsb
loop
shlb
xor
cmp
mov
mov
ds
and
xor
jo
roll
pop
pop
les
push
mov
sub
shrb
inc
sub
xor
or
cmp
into
xor
and
cmp
push
dec
mov
lret
iret
pop
push
testb
dec
int
mov
jnp
xor
fmuls
jb
xlat
mov
xor
mov
out
jns
xorl
roll
imul
call
mov
cmc
push
push
in
movsb
or
pop
data16
mov
stos
mov
adc
jl
inc
mov
push
adc
mov
in
or
dec
xchg
gs
mov
out
les
insl
out
loop
push
ret
xchg
pop
push
xor
out
xchg
or
mov
adc
out
mov
inc
jg
cmp
std
dec
mov
cmp
lea
mov
pushf
jae
cltd
dec
and
mov
xchg
das
pop
add
xchg
jbe
and
sub
scas
push
in
xor
dec
ljmp
lcall
pusha
and
push
mov
insb
mov
adc
loope
or
cltd
dec
in
mov
mov
sbb
fdivrs
fsubs
loope
outsl
negl
loope
mov
push
test
loope
hlt
ljmp
and
sub
adc
repnz
sbb
push
mov
dec
dec
pop
lahf
mov
arpl
icebp
mov
negl
jl
or
push
inc
pop
or
mov
dec
int3
jmp
cmp
pop
sarb
mov
pop
arpl
mov
cwtl
adc
push
cmp
xchg
sub
call
out
mov
jne
in
out
out
cltd
xor
test
jecxz
jns
push
dec
out
jno
dec
cwtl
std
lret
or
scas
lahf
es
xchg
sbb
clc
imulb
mov
xchg
scas
js
fldl
outsl
jl
mov
aaa
fmuls
inc
inc
inc
jecxz
popa
jl
sbb
mov
cld
dec
inc
xadd
scas
jge,pn
dec
insl
jmp
clc
and
arpl
push
stos
jnp
aas
xchg
sub
and
bound
and
mov
outsb
jb
xlat
push
push
adc
fisubl
cli
enter
sbb
pop
flds
fisubrs
lock
lock
add
repnz
mov
or
cmpsl
jae
xchg
cmpsl
sub
push
ret
jg
mov
hlt
sbb
aas
inc
push
ss
stos
dec
adc
sbb
shl
in
mov
jnp
in
xor
ljmp
lock
iret
dec
sub
inc
cmp
stc
sbb
push
inc
pop
mov
mov
sub
xchg
cmpsb
imul
daa
pop
lods
mov
fstpt
dec
mov
movsl
outsb
ss
mov
adc
mov
cmp
xchg
xor
add
rolb
movsl
sahf
out
inc
push
xchg
pop
mov
cwtl
xchg
pusha
std
mov
int3
pushl
idivb
mov
jecxz
leave
and
fidivl
loop
in
push
into
lock
push
rcrl
dec
cwtl
aam
ss
jmp
clc
arpl
leave
shll
mov
in
shll
add
jmp
inc
std
aam
movsb
mov
jb
push
jo
mov
adc
cwtl
pop
stos
fiaddl
js
fcoml
andl
popf
cmp
push
xchg
xchg
push
and
sub
int3
dec
push
imul
sbb
dec
out
fildll
sarl
adc
mov
and
fs
or
mov
arpl
sub
scas
push
mov
icebp
xchg
add
add
pushf
sbb
sub
adc
mov
loope
sub
jnp
inc
mov
divb
and
sbb
int
outsl
sti
mov
into
ficompl
mov
cmpsb
cmp
xchg
rcrl
push
fdivrs
jno
pop
pop
xlat
or
inc
mov
dec
mov
pop
sahf
sbb
dec
fwait
xchg
scas
in
cmp
push
and
loopne
xor
sbb
xchg
xor
aaa
mov
pop
push
mov
mov
cmp
fldenv
adc
mov
mov
test
jb
dec
loop
lea
push
int
fistpll
fstpt
popa
lods
pop
mov
sti
popf
inc
add
or
or
das
mov
jmp
fmul
add
fs
push
mov
inc
fisubrs
xchg
jp
or
pop
xchg
lret
pushf
mov
out
dec
jmp
cwtl
inc
stos
das
unpcklps
aad
adc
mov
jg
or
mov
sub
add
or
dec
test
push
fsts
loope
xchg
push
and
faddl
cmp
jb
stc
xchg
jmp
and
fwait
jmp
pop
ljmp
sbb
add
and
jbe
js
data16
sub
in
pop
cli
cmp
adc
jne
push
pop
icebp
sbb
mov
mov
mov
out
sbb
movsb
sub
ret
pop
mov
ja
mov
cmpsb
mov
mov
sub
fs
jae
dec
jo
out
adc
jnp
js
push
lcall
xlat
add
xor
std
dec
dec
xchg
xchg
push
sti
ret
dec
adc
cwtl
xchg
jns
loope
cli
scas
in
aaa
dec
cmp
divb
mov
fadds
adc
xchg
cmp
rcrl
or
jge
add
push
xor
dec
rorb
pushf
lahf
popf
xor
sarl
popf
mov
movaps
xor
ljmp
jp
movsl
cmp
sub
pushf
mov
add
aas
rolb
mov
pop
mov
pop
je
loopne
rolb
and
cwtl
dec
imul
jbe
gs
sub
sbb
mov
test
dec
repz
cs
movl
mov
pop
mov
xchg
sti
cmpsl
lock
ss
fisubrl
rorl
movsl
cltd
pop
pusha
jno
loopne
scas
aas
daa
jnp
pop
jmp
pop
sub
xchg
aam
jns
or
aaa
pop
mov
lar
push
mov
xor
fidivrl
and
jno
mov
and
mov
lock
rcrl
add
xor
sahf
lret
adc
and
jno
sbb
flds
roll
xchg
in
or
in
dec
inc
cli
filds
cmp
sbb
fs
fmuls
stos
bound
int
adc
cwtl
mov
jne
xor
in
ret
aad
cmpsl
sub
out
daa
mov
fidivl
sti
jecxz
out
pop
cli
add
lods
sti
mov
jae
push
fdivs
or
js
dec
cmp
and
and
aas
scas
mov
adc
inc
cld
or
mov
es
lcall
shrb
add
mov
enter
push
ficoms
bound
xchg
xchg
sub
mov
and
arpl
dec
imul
fdivr
mov
lea
adc
adc
in
inc
rolb
and
into
mulb
fs
ret
push
cmp
sub
ds
test
shrl
sub
mov
push
add
inc
jae
inc
xchg
xor
aaa
sub
lds
mov
pop
cmc
xor
push
jae
lahf
fisttps
lret
sbb
xor
sbb
inc
lahf
and
stos
andb
inc
and
call
xor
cld
clc
sbb
hlt
leave
inc
iret
mov
jae
mov
neg
call
xor
scas
inc
dec
mov
add
in
inc
in
push
dec
leave
icebp
fists
sbb
jmp
scas
daa
cmp
and
sbb
shl
mov
call
and
mov
jae
mov
fwait
mov
cmp
fnstcw
add
into
adc
pop
std
fcom
enter
adc
sbb
call
mov
into
pop
xor
lahf
scas
into
imul
sub
lahf
mov
mov
rolb
sub
outsb
hlt
adc
push
mov
mov
xchg
pop
repnz
sub
or
ret
mov
push
outsl
pop
mov
and
xchg
imul
inc
aaa
movb
jecxz
jge
test
mov
jmp
cmp
mov
cmc
popf
jns
into
clc
cmpsb
fs
bound
hlt
dec
jge
sbb
stos
mov
sbb
imul
fadds
loop
dec
xchg
inc
xor
lea
mov
or
push
je
ret
inc
jne
leave
ret
popf
loope
lds
jmp
movsb
cmp
add
cltd
mov
mov
sbb
sub
dec
sbb
push
or
inc
notl
inc
mov
shlb
mov
inc
jmp
cld
jg
ds
and
aaa
or
push
jno
inc
dec
repz
sbb
pop
pop
dec
jl
sub
scas
adc
pop
push
pop
lds
add
pushf
fnsave
ss
pop
adc
adc
xlat
je
leave
jecxz
push
push
out
mov
jge
insl
pop
gs
lock
sbb
insb
outsl
pusha
push
sbb
push
fists
popa
mov
dec
fisttpll
leave
int
jmp
dec
pop
jne
mov
js
xor
xchg
xor
jecxz
cld
pop
loopne
sbb
add
push
cmp
xor
inc
mov
lcall
divl
sub
addb
sub
cltd
jnp
scas
hlt
orb
jnp
pushf
adc
test
lcall
mov
in
lods
rcrb
jnp
mov
pop
addr16
test
inc
pop
js
push
stos
dec
inc
fsubp
icebp
flds
hlt
xlat
sbb
adc
sbb
cmp
sub
mov
pop
dec
aam
sti
negl
int
push
xor
sbb
mov
xchg
dec
xor
pop
inc
lods
xchg
push
stos
int3
xchg
cmpsl
cmp
xchg
xchg
dec
int
and
out
jl
es
rcrb
push
aaa
jne
inc
push
cmpsb
sbb
inc
adc
add
mov
sbb
xchg
addr16
cmp
aas
aad
sahf
cmp
cld
inc
push
jne
int
push
sbb
aaa
andb
and
or
xor
adc
in
movsl
xchg
xchg
in
cmpsb
stc
idivb
inc
pop
mov
jp
jmp
sub
sbbl
cltd
insb
xor
decl
mov
mov
adc
daa
pop
daa
jge
jmp
mov
pop
pop
in
loop
das
add
xor
xorb
loope
sbb
cmp
insl
aas
nop
sar
bound
or
leave
push
or
fchs
pop
enter
mov
addb
mov
add
cwtl
cltd
mov
dec
ljmp
sbb
jmp
pop
imul
sbb
or
jge
xchg
arpl
daa
xchg
xor
gs
sbb
inc
lea
push
lds
xor
mov
pop
ret
sbb
out
inc
out
adc
lcall
inc
mov
mov
and
inc
xchg
mov
sub
dec
dec
inc
fcoms
xor
lods
ret
ret
sbb
push
aaa
lret
clc
pop
sbb
int
bound
insb
sub
dec
movsb
cmp
mov
adcl
mov
mov
js
loopne
push
mov
inc
adc
push
pushf
push
xor
pop
andl
in
sbb
sbb
in
scas
out
sbb
mov
jae
inc
push
xor
inc
fmuls
xchg
leave
xor
es
lods
int
iret
xchg
mov
mov
movsl
push
fnstsw
imul
and
aas
outsl
fdivl
lret
mov
mov
das
jae
push
test
aaa
orl
xor
or
dec
dec
test
xor
xlat
lds
test
dec
xchg
mov
sub
repnz
je
dec
sub
xchg
xchg
nop
cwtl
jbe
fbld
xchg
ret
sbb
xchg
and
adc
push
scas
test
jo
or
aas
pop
ret
stos
inc
neg
mov
push
jne
mov
je
sub
inc
jae
lods
sbb
outsb
jne
sarb
lret
mov
pop
ret
sub
mov
push
cmp
mov
xor
pushl
pop
push
cmp
bound
mov
xchg
pusha
jno
sub
aam
dec
mov
mov
jmp
xchg
leave
inc
sahf
or
mov
daa
filds
dec
jmp
dec
shr
pop
in
push
jne
sahf
jg
jbe
cmp
in
fcoml
clc
movsl
lods
repnz
mov
mov
add
test
add
hlt
and
jle
sbb
jmp
jae
flds
test
sub
sub
push
xchg
loopne
xlat
sub
iret
shlb
mov
lods
mov
ds
push
pop
jp
jnp
repnz
push
popa
pop
jg
js
fidivrs
inc
subb
imul
mov
adc
pop
pop
cmpsb
es
mov
mov
mov
ret
push
mov
or
test
dec
push
lods
repnz
in
adc
sbb
push
icebp
mov
imull
xchg
pop
popa
cmpsl
jno
out
cld
and
cmp
mov
pop
push
mov
lret
imul
out
stos
std
inc
fldenv
popa
cmp
cmp
mov
movsl
les
dec
loop
insb
xor
push
dec
push
mov
rorl
jp
fcom
imul
mov
push
ljmp
pop
inc
fistps
xchg
sahf
adc
push
in
add
push
scas
or
xor
out
inc
push
ss
mov
cwtl
push
xchg
adcl
ljmp
mov
adc
gs
inc
pop
inc
add
jg
je
shlb
in
mov
pushf
fsubrl
xor
inc
popa
and
cli
add
xchg
dec
rorb
mov
imul
testb
or
bound
leave
mov
cmp
dec
pop
loopne
les
pop
popf
add
mov
dec
das
and
mov
rorl
push
out
rcll
mov
mov
mov
pop
fidivl
sbb
cmpsb
jb
es
jg
push
fdivrl
xor
mov
add
sbb
or
ss
fs
stc
cwtl
call
xor
fistl
mov
sub
pop
test
dec
popa
pop
testl
jnp
and
inc
cmpsb
clc
jne
jmp
loop
xor
stos
cmp
aas
jns
fdivp
xchg
test
gs
idivb
mov
fisttps
adc
xchg
shrl
jp
aam
jecxz
das
and
sbb
or
or
mov
lds
cmp
push
or
xor
arpl
adc
cmp
adc
sub
jle
les
add
out
mov
sbb
and
xchg
bound
cmc
call
sub
mov
mov
adc
mov
mov
les
inc
leave
jnp
cld
jmp
call
jo
lea
adc
and
and
xchg
test
cmc
dec
xchg
movsb
inc
shl
loopne
mov
mov
pop
and
clc
push
or
das
call
cmp
cmp
push
push
pop
pushf
ret
inc
dec
add
divb
dec
and
lods
push
aas
dec
aaa
leave
cwtl
pop
ljmp
sbb
xchg
jne
into
sbb
xor
shlb
sub
call
out
jl
outsl
je
mov
movsb
hlt
sub
pop
mov
add
aam
or
and
mov
jecxz
push
pop
notb
daa
daa
jae
inc
xor
insl
enter
cmp
mov
out
push
cs
pop
xchg
sub
aaa
popf
jno
insb
or
or
push
mov
cld
popf
bound
mov
jbe
and
les
mov
fs
xchg
pop
rolb
cmpb
sub
push
or
push
jb
fcmovne
lret
mov
daa
xor
ja
adc
pop
loope
es
cmc
add
adc
outsb
adc
or
gs
lock
sahf
xchg
sbb
out
icebp
inc
jge
lret
dec
sub
scas
pop
std
test
mov
fstl
repnz
movsw
push
iret
outsl
stos
push
pop
adc
dec
fcomp
cmp
or
inc
loope
lahf
int3
dec
inc
outsb
popf
jbe
xchg
imul
mov
mov
mov
cltd
sub
push
cld
push
push
xor
mov
jne
cli
xor
inc
sub
bnd
cltd
xchg
stos
sbb
push
das
inc
jo
imul
jnp
aam
xchg
shr
loopne
sub
mov
icebp
adc
stc
vaddsubpd
dec
sbb
mov
fsubrs
aas
or
out
sahf
sub
push
gs
sub
aam
lods
aam
repz
test
jae
mov
imul
ret
dec
mov
pop
and
ljmp
aaa
mov
ja
and
pop
call
imul
in
mov
popf
sub
sbb
inc
fisubrs
push
fnsave
xorb
add
int
lds
outsb
xchg
xlat
in
ljmp
fsubs
adcb
js
loop
xor
shrl
lret
je
xchg
fdiv
push
push
fdiv
int3
mov
fdivs
inc
or
jbe
das
dec
sub
jp
lods
xchg
popf
loopne
das
cli
lcall
mov
shl
lahf
push
pop
push
lods
sbb
fldl
into
out
scas
call
dec
and
xchg
rcr
cmpsb
cld
sbb
in
and
cmc
js
mov
mov
sub
xchg
int3
addr16
sub
jnp
mov
addr16
inc
jg
clc
ja
popf
out
add
stos
lock
call
into
xor
daa
push
lret
push
mov
daa
dec
cwtl
lcall
adcb
push
ja
cmp
je
jg
loope
adc
repz
ds
popf
pop
push
inc
out
adc
or
sahf
scas
fisttpl
test
popa
cmp
insl
dec
pushf
sub
cli
mov
adc
sub
adc
movsb
xchg
outsl
inc
cld
or
mov
movsl
sub
or
call
rorl
or
xor
jp
push
inc
popa
inc
mov
add
in
or
mov
in
test
add
cmp
or
pop
repnz
fldcw
fstps
xchg
nop
in
pop
push
das
push
push
inc
adc
jo
or
out
add
inc
xchg
sbb
fwait
xchg
xchg
sub
pusha
pop
shl
or
xchg
jg
dec
mov
daa
dec
push
outsl
out
fwait
rolb
mov
dec
cltd
call
sahf
mov
adc
pop
rcll
out
scas
jns
mov
out
ret
push
fsubp
mov
cmc
sub
in
notb
mov
repz
add
aas
push
adc
jmp
or
jbe,pn
and
out
mov
stos
jns
xchg
fisttpl
lret
xlat
lret
cmp
xchg
sub
add
cmp
sbb
push
or
insl
and
dec
pusha
cmpsb
mov
in
int
inc
sbb
mov
sub
mov
in
enter
cmp
andl
ss
scas
jbe
push
mov
mov
repnz
sbb
pop
movsb
jo
add
lcall
call
dec
push
outsl
push
dec
rclb
or
jmp
sub
sub
out
clc
in
mov
push
test
loope
sbbb
and
lcall
mov
ret
pop
insb
clc
popf
jge
repz
sbb
test
push
mov
loope
sbb
cltd
scas
stc
push
inc
ret
stos
xor
mov
shll
add
jno
or
rorl
jge
fisubs
out
rorl
sub
pop
push
add
pop
dec
repnz
mov
jmp
lock
mov
dec
jecxz
aam
int
mov
xor
das
setae
jns
test
das
push
or
mov
jne
cmp
ret
pop
les
sbb
mov
shll
lcall
pop
mov
and
sti
push
lods
in
call
or
insb
dec
addr16
cmp
outsl
testb
mov
ja
inc
mov
pop
jns
inc
sarl
ret
mov
out
add
add
mov
xchg
mov
aad
mov
insb
lcall
and
lret
push
sbb
rcrl
sbb
lea
out
dec
lret
cmp
testl
scas
and
and
add
stos
cmpsb
pushf
leave
je
dec
loope
inc
movl
scas
xchg
pop
in
and
enter
mov
or
dec
push
jl
xor
or
rol
test
jno
mov
dec
cld
insb
les
mov
sub
and
jl
pop
jns
pop
movb
into
jbe
in
xor
or
pop
push
adc
ficoml
test
xlat
or
mov
sar
call
pop
push
inc
enter
pusha
iret
fmuls
fnstenv
dec
nop
popa
pop
and
mov
iret
fcomps
inc
movsb
mov
pop
sbbl
lret
nop
insl
sahf
cld
push
leave
faddl
xchg
sub
xchg
mov
pushf
mov
out
cmc
cltd
mov
fisttpl
dec
inc
pop
mov
cs
loop
in
ja
adc
sub
xor
xchg
das
sub
ja
std
mov
jne
inc
insb
aad
xor
and
jmp
stos
and
adc
aad
mov
jns
mov
mov
pop
mov
mov
out
adc
rcl
in
push
jo
mov
xor
mov
cmp
aas
push
xor
je
mov
icebp
and
jp
movsl
fldt
out
pop
clc
add
push
or
inc
out
ret
fucomi
icebp
stc
test
and
inc
dec
test
in
mov
movsb
iret
xor
insb
stc
xchg
adc
dec
fildl
icebp
or
je
or
fmuls
hlt
mov
shlb
or
in
testl
sbb
mov
loope
push
test
push
loopne
mov
jo
icebp
jae
ds
cwtl
fs
mov
stc
in
shl
push
mov
leave
inc
mov
stos
xchg
add
sub
and
inc
fucomip
aad
push
and
leave
ljmp
adc
es
loop
cmpsl
inc
xchg
pop
xor
pusha
jns
inc
pusha
movb
aam
fcoms
loopne
inc
mov
add
fisttpll
pop
and
push
aas
xchg
loope
in
nop
pushf
or
insb
dec
clc
sub
pop
test
arpl
orl
xorl
adc
lods
in
jg
push
xor
jb
inc
xor
pop
adc
mov
push
insl
add
jg
jecxz
dec
nop
mov
jp
popa
leave
inc
int
bound
and
aam
mov
lods
push
fisttps
sahf
inc
sub
shll
jo
cmp
jno
adc
push
mov
and
mov
test
insl
sub
xchg
clc
push
in
test
mov
add
sti
fmuls
xchg
sbb
jg
adc
mov
jp
cltd
cs
xchg
jae
add
sbb
inc
add
bound
aaa
adc
xor
test
pop
or
dec
pop
inc
fadd
stc
aad
clc
dec
cmp
sbb
or
push
pop
addb
xchg
and
mov
cld
cmpsl
and
jp
or
sti
push
gs
imul
adc
inc
and
lcall
sub
inc
inc
jns
push
sub
je
dec
sbb
xchg
pop
fwait
movsb
cmc
in
dec
pop
dec
push
jge
xor
cmpsb
or
test
push
sub
adc
es
shll
xlat
mov
insb
push
fstpt
ss
aas
mov
xchg
movsb
dec
fsubr
pop
in
cmpb
jp
adc
lret
push
nop
push
aam
jns
lods
fwait
sub
pusha
out
jae
push
lcall
out
adc
idiv
push
adc
dec
dec
add
outsb
cmc
push
movsl
cmp
adc
pop
hlt
jno
arpl
dec
push
mov
push
fiadds
sub
pop
adc
add
add
fsubrl
dec
dec
jno
sbb
xor
sbb
dec
int
jo
lret
cmp
sbb
arpl
cmc
or
dec
repz
dec
loopne
out
dec
insb
mov
es
xor
inc
sbb
adc
cmp
flds
cmp
push
outsl
dec
jne
pusha
push
aam
cmp
mov
mov
cmc
xchg
pusha
and
mov
mov
dec
loope
jl,pn
out
add
xor
or
sub
repz
sub
push
aas
dec
bnd
inc
sub
cmpl
jmp
sahf
mov
ljmp
inc
mov
jnp
mov
mov
xlat
popf
lods
pop
push
mov
or
arpl
stos
and
shlb
mov
aad
dec
repz
loope
or
imull
sub
popa
cmp
rorb
cmp
fs
push
popa
mov
loop
push
sbb
xchg
mov
jecxz
lds
out
daa
xor
mov
sub
in
pop
sbb
cltd
mov
insl
jle
xor
bound
adc
ljmp
inc
push
mov
xor
movsl
imul
cmp
cwtl
pop
cmpsb
add
push
push
aaa
xlat
dec
jge
pop
mov
xchg
and
shll
cwtl
sbb
call
mov
inc
fwait
ss
pop
mov
inc
rcr
or
pop
add
push
sbb
pmaxub
repnz
lods
adc
adc
cmp
add
lret
jnp
stos
inc
idivb
dec
and
mov
push
sbb
jle
negb
shrb
je
outsl
cmpb
int3
mov
push
cmp
iret
lods
pop
mov
or
push
jns
xchg
jne
cli
sub
cli
pop
add
fcmovnb
sbb
sbb
notb
xchg
cmp
mov
mov
out
sbb
fistps
cmc
push
push
pop
sbb
outsb
xchg
cmp
dec
ss
dec
or
dec
and
mov
dec
shll
fimull
pop
add
or
jg
iret
xchg
js
xor
cmovp
jmp
pop
mov
iret
xlat
out
mov
lret
push
adc
xor
movb
dec
dec
mov
dec
stos
insb
pushf
mov
mov
es
cwtl
sbb
or
mov
xchg
inc
sbb
in
adc
jnp
mov
adcl
mov
fcoml
in
ja
frstor
push
cmp
addb
je
arpl
xchg
ds
and
dec
pusha
jo
or
nop
popf
nop
into
xlat
cld
shll
xchg
push
or
bound
xchg
aad
dec
les
dec
mov
or
mov
lahf
arpl
stos
jnp
movsl
lods
ja
mov
xchg
jl
fsubrl
dec
lcall
fldl
leave
lock
pop
fldt
ja
rcrb
out
in
movsl
cmp
mov
int
mov
pop
xor
mov
aaa
nop
addr16
in
or
fildl
jo
aas
test
adcl
cmp
sti
imul
lret
pop
add
loope
mov
cmpsl
jge
shll
sub
cmp
lea
dec
inc
and
mov
mov
mov
inc
jbe
cmpsb
sbb
mov
xor
mov
and
sbbb
xchg
or
or
sub
sbb
xchg
divl
adc
dec
rcll
or
sub
dec
mov
andb
pushf
in
mov
add
aad
mov
pop
rorl
lret
push
aam
mov
iret
scas
mov
push
sbb
rcrl
jg
stc
outsl
add
pop
inc
xor
mov
insb
jno
out
add
imulb
cmp
sub
icebp
adc
out
dec
stos
sub
test
fmulp
jp
loop
push
pop
mov
push
mov
push
ret
fucom
sarl
push
mov
icebp
mov
into
test
fs
pop
subl
pushf
loopne
daa
or
jae
push
outsb
xor
jp
mov
add
leave
mov
pop
in
adcb
push
and
dec
in
iret
and
hlt
scas
jg
mov
adc
loop
xlat
or
mov
mov
push
mov
xor
mov
xor
ret
adc
sbb
mov
shll
mov
in
sbbb
push
mov
push
jbe
in
movzwl
in
lea
fmuls
push
mov
mov
inc
cwtl
ret
and
or
pop
mov
scas
mov
add
mov
cmp
adc
dec
and
fldl2t
test
lods
jp
jnp
test
loopne
loope
cmp
es
stos
cwtl
mov
out
iret
stc
je
loope
sbb
stos
mov
pop
sbb
aaa
stos
adc
cli
cmpsb
rorb
cmp
jns
push
pop
loope
push
out
ja
fsubrs
jbe
ret
repnz
and
add
sbb
lock
xchg
test
neg
lea
mov
mov
loope
ret
aad
outsl
mov
xor
ss
scas
add
jnp
and
lcall
aas
inc
cwtl
inc
mov
xlat
mov
fisttps
dec
lods
pop
test
lret
jnp
rorb
and
cltd
xor
inc
xor
jno
sbb
stc
and
stc
enter
push
imul
cld
jl
push
or
dec
icebp
ja
jb
aam
int
std
sub
std
xor
sub
push
ljmp
mov
addr16
cmp
mov
mov
sidtl
push
in
lea
mov
hlt
ret
repnz
mov
xchg
in
testl
pop
xchg
scas
nop
mov
mov
and
movsl
inc
mov
push
addb
nop
ret
int
bound
aad
dec
stc
in
cmpsl
inc
inc
int
mov
xor
mov
push
xchg
fwait
adc
insl
xchg
sbb
jne
adc
aad
rorb
rol
daa
jmp
push
adc
sub
mov
fldl
loop
push
int
push
jmp
pop
mov
push
out
stos
mov
push
and
jbe
jns
or
inc
js
cltd
mov
xor
fstps
and
jns
imul
xor
sbb
inc
es
dec
or
ret
rcll
push
iret
jnp
rolb
push
push
ret
jo
cmovge
sub
dec
ficomps
test
mov
jns
adc
repnz
rcll
aaa
push
sbb
gs
arpl
mov
pop
dec
stc
loopne
pop
lcall
xchg
aas
push
jl
sub
stos
imul
sub
mov
adc
into
mov
sahf
dec
mov
and
add
mov
mov
xchg
cmp
js
lods
add
test
scas
or
fimuls
jge
scas
cltd
je
or
push
out
lahf
cmp
xchg
ret
mov
xchg
mov
jge
sti
imul
leave
or
mov
push
fadd
inc
fisubrl
mov
push
jae
test
xorl
sub
pop
je
cltd
rolb
inc
aad
fbstp
xchg
cmp
lcall
lahf
mov
pop
popf
pop
dec
and
jnp
mov
xchg
jno
pop
call
daa
mov
cmp
sbb
or
int3
inc
inc
inc
popa
mov
mov
andnps
push
repnz
pop
and
cmpsl
mov
sub
movsl
ss
rolb
pop
scas
je
btr
repnz
inc
add
rorl
lret
sbb
pop
aaa
jle
add
pop
nop
push
shrl
dec
sbb
callw
int
sti
add
sbb
sti
jns
cld
and
out
vmwrite
xchg
mov
test
push
xchg
add
xchg
in
mov
stos
xchg
cmovg
pmaxsw
adc
xor
xchg
push
sbb
int3
jnp
pop
fwait
outsl
push
push
cmp
inc
or
insb
insb
enter
in
sbbb
clc
je
lods
pop
inc
stc
sar
call
out
push
mov
jp
add
fisubs
int
jnp
or
inc
mov
xchg
shrl
scas
sbb
pushf
in
add
xchg
lahf
sti
sarl
inc
xor
add
cmp
pop
stos
adc
dec
js
addb
loop
xchg
push
jns
mov
add
mov
out
xchg
sahf
sbb
jg
callw
adc
jmp
jl
and
cs
jecxz
push
cmpsl
leave
lods
cmpsl
rcll
frstor
push
lock
pusha
jbe
or
in
pop
iret
mov
fmull
push
int3
xor
adc
jns
mov
leave
scas
adc
adc
mov
jg
and
or
push
pop
xchg
xchg
leave
jb
test
dec
pop
sub
ja
inc
push
jb
mov
mov
push
repz
lret
pop
ror
incb
call
dec
les
mov
xchg
xor
pminsw
xor
pop
jo
dec
insb
movsl
dec
mov
and
add
push
adc
push
mov
cmp
sbb
es
ljmp
jg
idivl
add
jp
jbe
out
jmp
shlb
pop
sti
fldlg2
fs
ja
xor
mov
xchg
mov
inc
xchg
imul
inc
adc
mov
inc
inc
in
xchg
mov
fcomi
pop
pop
mov
aas
ret
xchg
mov
push
mov
scas
inc
in
sbb
jno
mov
in
fs
add
lds
jmp
leave
andb
cmp
or
ja
cmp
jecxz
mov
xor
icebp
dec
stc
stos
out
shll
nop
test
xchg
clc
mov
fs
mov
fs
sbb
push
mov
int3
adc
or
mov
nop
aad
pop
popf
mov
pushf
shl
push
jecxz
rcll
cmp
je
out
add
popf
inc
inc
jbe
movsl
gs
or
stc
fmull
aad
adc
jecxz
cld
jo,pt
sub
call
sbb
nop
inc
dec
mov
mov
repnz
shl
cltd
fs
inc
stos
xor
lcall
mov
je
pop
mov
cmp
scas
outsl
cmc
sub
xchg
popl
inc
pop
inc
dec
sbb
dec
jmp
test
cmp
lods
test
inc
aam
test
mov
mov
cld
lahf
lock
mov
push
int
imul
dec
push
cmp
cmpsl
xor
push
sti
jb
sub
or
popa
jno
pop
lret
mov
mov
std
mov
xor
in
loop
jns
dec
dec
clc
in
loop
xlat
lret
lcall
push
mov
lret
jge
int3
lock
in
dec
repnz
repz
push
mov
push
aas
je
movb
push
xchg
sbb
jecxz
imul
test
stc
dec
enter
hlt
jecxz
ja
pop
add
sbb
dec
adc
hlt
jg
pusha
stos
pop
repnz
sbb
cmp
mov
jmp
adc
sbb
imul
inc
repnz
push
mov
dec
xor
and
mov
dec
dec
mov
arpl
jnp
or
fcompl
scas
gs
mov
fcoms
mov
or
adc
pop
lods
lret
fsubrp
sahf
pop
push
add
xchg
inc
movsl
and
and
shrl
int
pop
adc
lods
fisttpl
ret
sbbl
and
std
mov
ja
mov
pop
jnp
dec
and
adc
lods
xor
scas
push
xor
mov
dec
pop
fidivrs
mov
mov
inc
lods
jae
test
inc
pop
insl
add
mov
inc
sbb
ret
out
test
jle
into
jge
add
shl
das
xchg
jno
xchg
test
sbb
jns
add
dec
xchg
call
add
sub
and
ljmp
out
cmp
lcall
popf
scas
and
stos
jns,pt
pop
xchg
lcall
xchg
dec
ss
xor
out
or
prefetchw
or
or
dec
jmp
mov
and
mov
outsl
test
insl
out
push
dec
sbb
dec
call
mov
fldenv
jnp
sbb
dec
inc
repnz
push
test
fcoms
mov
xlat
mov
lods
jo
lea
mov
fst
push
add
inc
sbb
leave
mov
sahf
and
lret
sub
mov
int3
call
ja
in
push
adc
leave
xor
loope
ret
inc
rcrl
jne
sbb
xchg
ss
aam
adc
pop
mov
pop
jbe
xor
fs
push
hlt
xor
scas
popa
sbb
je
or
lods
inc
icebp
iret
fistps
daa
xchg
movsl
lock
outsb
ljmp
and
push
cmp
cwtl
push
push
cmp
jmp
popa
int
and
cli
or
mov
pop
cs
mov
cmp
jbe
int3
mov
shll
mov
setne
adc
ss
adc
inc
cmpsb
push
sub
xchg
mov
mov
jns
dec
enter
std
mov
pop
pop
cli
gs
mov
out
fadds
pusha
loopne
icebp
fistpll
lock
ror
pop
jo
cmc
je
sbb
cmpb
xor
in
addl
add
mov
cmc
out
push
imul
adc
je
in
mov
push
push
enter
sbb
pop
mov
pop
outsl
cmovno
shrb
xor
test
dec
fldt
jne
imul
xchg
aaa
test
sub
les
adc
mov
xchg
and
or
mov
and
bound
cmp
sbb
pop
stos
lods
adc
jnp
fs
sarl
js
in
adc
sar
pop
dec
or
mov
add
mov
pushf
jnp
jo
cmp
jp
pop
orl
hlt
rclb
and
inc
cmp
je
lret
pop
ljmp
fwait
push
fnstsw
jecxz
mov
fidivs
push
mov
push
mov
cmp
movsb
lahf
pusha
repz
clc
ret
mov
sub
lea
insl
les
jo
xlat
mull
xor
dec
mov
scas
ss
mov
gs
sbb
js
movsb
stos
jecxz
out
cwtl
push
insl
push
rclb
or
add
pop
out
mov
loope
cmp
dec
aam
test
movsl
ljmp
lea
es
push
push
ss
inc
loopne
mov
and
and
cmc
xchg
pop
call
pop
ret
pop
push
fdivrs
xchg
nop
sub
fs
pushf
popf
sbb
mov
inc
mov
cmp
test
lahf
xchg
adc
mov
push
outsb
andb
or
jp
sahf
and
out
mov
sbb
insb
aas
jae
xor
sbb
and
divb
addr16
mov
movsb
mov
dec
mov
hlt
call
addr16
dec
or
push
andl
imul
in
adc
xchg
imul
lret
les
imul
scas
test
fcos
sub
xlat
cmp
stos
mov
xchg
inc
pop
push
cli
stc
mov
cwtl
or
es
loope
mov
je
fwait
fs
insl
jb
cmp
jmp
sub
pop
lea
mov
adc
shrl
add
sbbb
xchg
cmp
inc
push
mov
repnz
ret
fists
jae
xor
mov
add
loop
bnd
adc
cwtl
jmp
cltd
in
or
testl
jo
adc
jo
scas
lahf
mov
jmp
inc
shlb
mov
imul
lahf
xchg
jno
sub
mov
xchg
dec
or
fxch
popa
or
push
std
daa
iret
loop
xor
into
in
loopne
scas
fwait
shrb
cmpsb
outsl
pcmpeqd
addl
out
sub
fistpll
mov
mov
ficoms
jo
or
mov
and
rorb
shrl
iret
fisubl
jnp
fdivrp
and
xor
inc
jne
mov
js
das
add
popa
aam
scas
mov
jae
dec
xor
cli
add
push
roll
dec
int
sbb
mov
pinsrw
repz
push
ja
jge
test
jmp
ja
movsb
test
push
hlt
imul
mov
divl
xchg
push
cmp
add
std
jo
add
or
cmp
push
inc
mov
sahf
mov
into
sbb
adc
adc
out
ljmp
dec
les
and
fcmovnbe
or
xor
xor
lcall
and
pop
mov
mov
cmp
hlt
fnsave
push
ljmp
fwait
dec
add
mov
call
xchg
dec
imul
and
in
mov
mov
sbb
xchg
pop
mov
fstpl
sub
mov
dec
je
or
jp
inc
sub
and
movsl
jae
jno
pop
pop
test
sub
xchg
inc
cmp
sbb
push
adc
rclb
fdivr
pop
ja
pop
sbb
mov
xor
mov
mov
out
inc
jmp
sbb
gs
xchg
int
out
xchg
xor
add
js
dec
popf
pop
out
leave
stc
mov
push
out
xor
cmc
xchg
sbb
movsb
mov
sub
call
cmp
or
push
jno
fisubrs
dec
cmpsl
cmp
into
scas
jne
xchg
pop
adc
scas
mov
movsb
jne
dec
sbb
jae
cltd
cmc
jp
in
mov
push
pop
and
enter
pop
xchg
addr16
mov
mov
mov
cmp
or
add
push
mov
out
jne
xchg
and
xor
or
rorl
mov
fbld
scas
adc
mov
pushf
dec
orb
icebp
inc
pop
imul
fists
add
dec
rolb
add
mulb
cmp
mov
scas
or
xchg
push
cmp
mov
stos
pushl
cmp
add
movsl
sbb
mov
iret
push
js
mov
adc
xchg
jbe
rolb
mov
rolb
or
mov
icebp
add
sbb
cli
aad
push
add
lret
mov
sti
xchg
in
mov
lock
mov
inc
lock
dec
mov
dec
mov
iret
pop
clc
outsl
cld
inc
sarb
xchg
outsb
mov
aaa
repnz
icebp
stc
repz
inc
push
push
jg
rorb
cmpsl
jo
dec
into
pop
nop
adc
xchg
out
out
rcr
dec
fcmovbe
addr16
loope
cmp
inc
stc
in
push
mov
mov
aad
mov
add
fwait
loopne
pop
or
pop
xchg
cs
mov
out
jecxz
and
adc
xor
jmp
and
mov
and
loopne
leave
popa
mov
nop
lods
jbe
pushf
mov
stos
fldcw
mov
or
filds
xor
push
aas
pop
adc
jmp
jmp
rorb
fbstp
mov
inc
inc
lret
cltd
int
shlb
data16
test
inc
subl
pop
cld
gs
sbb
ret
lret
cmc
mov
jb
push
outsl
rcrl
mov
adc
std
pop
push
push
fcmovbe
mov
movsb
or
stos
mov
xchg
xor
call
loope
push
in
mov
dec
dec
push
or
hlt
mov
mov
or
xchg
lret
xchg
es
addl
setle
push
dec
int
rorl
rcl
lods
or
mov
sbb
mov
mov
mov
push
stos
lcall
out
js
and
push
fmul
lret
pusha
jge
xchg
push
fdivrs
inc
or
mov
and
lahf
mov
sbb
inc
int3
imul
dec
bound
mov
push
mov
and
mov
imulb
outsl
js
pop
jp
push
push
mov
jo
pop
out
movsl
test
idivl
pop
cmpb
push
icebp
ss
xchg
ffreep
mov
cmpsl
cmpsl
push
mov
dec
gs
outsl
mov
sub
push
push
pop
and
inc
jp
mov
jle
fidivrs
adcl
xchg
jb
int3
stos
and
outsw
lahf
nop
dec
xchg
mov
sbb
insl
in
test
inc
xchg
pop
xchg
jp
jg
and
mov
inc
subl
add
rcrb
test
inc
or
cmp
int3
dec
orl
fistpl
out
mov
iret
shrl
test
xor
inc
dec
lret
enter
mov
fiaddl
rorb
jecxz
dec
cmc
je
inc
loop
insl
adc
jae
sahf
gs
fwait
aas
add
cmc
icebp
mov
jb
data16
mov
dec
mov
xor
orl
sti
shll
inc
push
sub
dec
dec
ss
mov
and
sbb
dec
push
sti
cld
cmpsb
sti
adc
add
xchg
int3
leave
sub
or
cmp
mov
mov
mov
xor
int
hlt
xor
hlt
icebp
cli
testl
mov
ja
ja
xlat
jb
sub
aaa
int3
sbb
mov
push
lock
mov
mov
stos
push
imul
add
fcmovbe
xchg
push
es
mov
or
fbstp
daa
adc
rol
and
pop
cli
mov
push
scas
imul
aaa
xchg
sbb
rcrb
ja
pop
cs
xorl
pop
cmp
rclb
mov
jge
and
cmpsb
xchg
outsl
data16
mov
mov
jae
in
sbb
add
out
xor
aad
xchg
es
or
iret
pop
fidivrs
pushf
xchg
dec
sarl
sbb
leave
out
pushf
mov
pop
jge
xor
in
jbe
add
jnp
pop
mov
gs
je
pop
mov
pop
mov
xor
mov
mov
into
insb
pop
fcoms
out
imul
push
adc
sub
arpl
ror
jns
mov
dec
sub
rorb
fsub
xchg
fmulp
dec
fisttpll
imul
stc
mov
and
mov
mov
rorb
mov
iret
shlb
mov
and
or
leave
lock
and
mov
cmp
loope
or
or
orl
add
lret
mov
jbe
xor
pop
lds
pop
push
enter
jmp
cmp
scas
and
mov
xchg
orb
xchg
sub
cmp
stc
dec
cmp
push
cs
test
pop
and
push
xor
addl
fildl
insb
dec
lret
out
pop
add
adc
insl
pop
test
pop
add
aam
lods
fistpll
sbb
add
scas
addb
test
ret
sbb
xchg
fldcw
inc
scas
enter
popf
pop
mov
aad
fwait
or
notb
out
xchg
xchg
aaa
push
mov
jb
test
into
ljmp
data16
cmp
cmp
popf
loopne
jecxz
sbb
cli
popf
mov
mov
jbe
loope
lods
insb
fldcw
repnz
and
lock
outsl
insb
mov
adc
pop
jbe
jle
cmpsb
push
int
fucomip
cmpl
insb
adc
scas
sub
shlb
je
add
popf
pop
test
fsubp
inc
push
fwait
cmp
mov
xchg
dec
push
iret
push
push
mov
jno
push
cmp
push
or
scas
pop
sub
in
pop
sahf
pop
pop
adc
in
and
mov
jle
hlt
mov
cmp
into
test
inc
and
cmp
inc
cmp
test
shrl
popa
out
mov
cmp
testl
test
std
add
mov
and
ss
ljmp
arpl
cmp
jmp
adc
pusha
xchg
stc
add
push
xchg
inc
add
push
jle
popf
into
or
sti
addb
push
shrl
cmpsb
mov
adc
xor
dec
pop
pop
adc
sbb
lods
adc
jmp
fidivs
bound
jg
mov
push
push
arpl
cmpsb
mov
jno
int
mov
mov
daa
inc
push
mov
jecxz
fcoml
lock
sbb
xor
das
adc
add
out
enter
or
in
sbb
jecxz
dec
mov
lretw
push
stos
jb
push
out
inc
clc
xor
xor
ret
enter
inc
jmp
daa
shll
jo
in
inc
int
arpl
mov
mov
lret
jne
out
insl
inc
mov
push
aad
mov
or
xor
dec
movsb
jmp
xlat
movsl
sahf
and
fcoms
inc
and
or
lret
pop
push
fsubrl
dec
xlat
xchg
int3
sbb
imul
and
mov
or
std
leave
iret
leave
jp
jecxz
mov
mov
aad
xchg
and
bound
rcl
jl
push
int3
push
mov
addb
insl
inc
scas
adc
in
inc
jne
aas
mov
mov
fldt
int
pop
pop
scas
fsin
mov
cli
and
cltd
mov
lcall
jecxz
addr16
adc
adc
xor
leave
dec
pushf
sub
push
sbb
cmp
sar
mov
movsl
pop
jle
out
xchg
adc
xchg
dec
and
int3
push
jecxz
sbb
jnp
mov
jo
jp
out
shl
jno
fisubrs
xchg
dec
daa
and
mov
or
inc
out
sbb
es
loopne
cmpsl
push
das
mov
leave
cmc
test
sub
rol
inc
dec
aas
add
mov
xchg
pusha
scas
icebp
repz
mov
cmp
js
jns
push
mov
mov
inc
xchg
cli
jl
mov
add
sub
add
cmp
scas
aas
lret
jbe
adc
cmp
aad
jge
scas
sub
mov
xchg
pusha
sub
and
mov
dec
fst
inc
addr16
xchg
insl
lods
mov
pop
lahf
stc
or
stc
mov
popf
pextrw
lcall
and
and
xor
test
push
outsl
cmpsb
inc
cwtl
ja
scas
test
cmp
ror
adc
jge
popa
loopne
pop
or
push
call
pop
movsb
and
std
stos
pushl
imul
outsb
inc
pop
js
clc
aam
test
outsb
mov
or
mov
cmp
mov
mov
out
xchg
fwait
out
popf
nop
arpl
lea
ret
nop
mov
inc
xchg
sbb
in
das
aaa
push
lret
or
mov
push
sarl
push
imul
add
mov
xchg
jp
mulb
mov
mov
mov
popa
imul
lcall
aas
fidivs
jle,pt
jle
mov
test
xor
icebp
mov
dec
cmp
mov
ss
add
adc
or
add
stc
mov
pusha
pop
stc
push
bound
push
inc
loop
or
pusha
int3
xchg
es
lea
es
imul
add
cltd
aas
or
neg
testb
jge
pop
mov
int
mov
decb
lahf
ja
lret
cmc
cwtl
mov
or
adc
mull
mov
ds
aaa
mov
scas
mov
aas
stos
sbbl
mov
mov
sti
mov
xor
lret
je
push
ret
shlb
adc
cmc
pop
nop
sub
movsl
cmp
mov
js
dec
inc
mov
hlt
stc
shl
cmp
jge
jge
mov
sahf
xor
mov
sub
stos
sbb
insl
pushf
mov
pusha
push
sbb
inc
gs
cmpsb
pop
push
push
mov
lock
leave
addl
cs
shrl
fdivrs
push
adc
cmc
int3
sub
mov
je
adc
or
into
fnstsw
push
mov
jns
decl
pushf
fwait
ds
out
add
xchg
dec
fiadds
out
lcall
inc
xchg
out
pop
adc
or
push
fisubrs
mov
insl
add
cltd
jne
mov
cmp
addr16
lea
ficompl
mov
sub
mov
dec
jle
pop
aam
repnz
bound
fistl
and
sbb
sbb
xchg
cmpb
hlt
push
xor
ja
sub
and
xor
sub
ss
das
cmp
mov
iret
pop
jge
cmp
and
fcomps
jl
mov
lret
jae
lret
mov
adc
lock
dec
int3
fcomps
pop
mov
mov
push
rcrl
add
rolb
jne
xchg
mov
fisttps
testb
inc
mov
xchg
jecxz
fsin
ss
cmp
movsl
cltd
push
les
dec
fdivrl
xchg
scas
pop
jno
addb
cmp
cmp
push
shlb
pand
cmpsb
cmp
jg
dec
cmp
fsubs
dec
daa
loopne
pusha
push
addr16
or
fscale
pop
mov
or
lret
sti
mov
push
cltd
loop
stos
pop
movsb
mov
cs
or
stos
in
sar
dec
inc
or
lret
les
jg
adc
in
repnz
loope
dec
bnd
aam
cmc
rorl
mov
sahf
ret
jecxz
and
cmpsl
mov
lds
sub
cmc
sub
mov
into
lock
jne
cmpsb
jae
mov
mov
mov
les
mov
repz
fnsave
std
xchg
or
add
lret
aas
enter
imul
out
lret
push
cmovb
mov
test
dec
push
push
fadds
push
in
xor
jo
xchg
push
pop
incl
mov
adc
fistpll
dec
pop
dec
cmp
push
lcall
mov
jmp
bound
xlat
cmpb
sub
mov
movsb
fs
and
out
pop
lret
outsl
and
jns
stc
into
gs
repz
cmc
in
int
xchg
bound
ret
loope
out
push
hlt
sub
shlb
insb
ds
adc
pushf
cwtl
xor
or
sbb
mov
xor
decl
ja
jecxz
inc
scas
push
clc
addr16
xor
push
sbb
loope
lcall
icebp
into
hlt
adc
cld
mov
dec
aad
sbb
movsb
mov
mov
push
cmp
push
lret
imul
sub
jge
push
add
aam
ss
cmp
outsl
push
out
dec
iret
addl
nop
outsl
hlt
mov
xchg
mov
bound
mov
dec
sbb
adc
pushf
push
xchg
push
jno
loop
andl
addl
dec
repz
adc
and
in
push
xchg
adcl
cmc
sbb
out
movsl
lret
cmp
mov
mov
inc
xchg
ffree
xchg
mov
movsl
mov
cmpb
in
adc
das
xchg
inc
lcall
mov
dec
mov
sub
stos
mov
out
inc
jnp
cmc
mov
imulb
in
out
cld
bound
jp
repnz
out
jns
insl
sbb
and
xchg
ss
xor
in
jmp
sub
sub
lods
mov
dec
push
daa
imul
lods
pop
jb
ud1
mov
arpl
arpl
decl
arpl
dec
cmp
nop
inc
test
mov
push
add
jns
std
dec
in
push
xor
inc
push
fwait
add
mov
out
popf
push
mov
cmove
mov
je
push
mov
jmp
xchg
mov
and
push
imul
enter
lcall
adc
stos
mov
xchg
mulb
dec
ja
test
mov
jno
fwait
cmpsl
fbstp
leave
and
inc
into
stc
icebp
ret
jo
in
jne
xchg
test
out
add
lods
mov
inc
add
sub
fbstp
inc
push
cld
sahf
movsl
cs
inc
dec
and
dec
lods
push
cmpsb
xchg
fcmovu
mov
subb
sub
pop
jmp
and
out
cmp
out
and
push
xor
lods
xor
mov
dec
inc
push
sub
sbb
push
push
mov
movsb
pushf
ret
std
xchg
icebp
das
in
sbb
cmpl
push
out
repnz
sbb
jno
test
mov
mov
popf
dec
les
sahf
cvtps2pd
nop
and
icebp
movsb
jg
mov
mov
decb
lea
push
push
shlb
aad
inc
or
inc
xor
inc
insl
nop
mov
aaa
div
jmp
sbb
jns
mov
cwtl
orl
add
xchg
sub
cmp
jnp
cmp
dec
movsb
ss
xor
dec
in
loopne
out
fiadds
mov
pushf
fwait
por
stos
jb
int3
xor
lret
sbb
jg
cmp
pop
ret
sub
mov
xor
cmp
push
and
movsl
xchg
add
ss
dec
fnstenv
dec
ds
loope
imul
lret
data16
inc
nop
mov
aad
jmp
out
pop
in
shlb
pop
movsl
scas
fnstenv
mov
inc
sub
cmp
mov
subb
sbb
dec
push
dec
jge
add
push
dec
stos
repz
mov
jmp
mov
xor
mov
addr16
xor
mov
adc
jp
pushf
mov
mov
sbb
sub
dec
ljmp
loopne
in
or
test
xor
or
arpl
cmp
mov
adc
or
rolb
dec
dec
or
popf
jmp
pop
dec
inc
mov
sbb
outsl
gs
or
es
sub
clc
xchg
mov
ficompl
in
or
xchg
into
shlb
pop
adc
xor
es
clc
iret
inc
xchg
int3
add
sub
stos
xchg
jmp
aas
mov
jmp
xchg
scas
icebp
mul
stc
lods
and
mov
imul
gs
ljmp
adc
popf
test
sub
gs
iret
fistpll
mov
pop
or
movsl
mov
imul
outsb
xchg
lock
ljmp
xchg
mov
lock
cmp
inc
popf
dec
or
stos
mov
add
lahf
inc
and
enter
mov
pop
aaa
add
popa
sub
cs
pop
fisttps
xor
movsb
or
inc
xchg
ss
stos
stos
mov
negb
les
frstor
or
mov
or
jge
adcb
fs
jnp
sarb
icebp
xor
mov
xor
cs
lods
xor
outsl
cmp
test
vpavgb
lock
lods
cld
shl
xor
mov
imul
in
loopne
lds
jl
jo
aaa
mov
jo
dec
push
push
leave
into
xchg
sub
pusha
inc
pop
iret
fs
rcrb
adc
lea
ss
loope
or
add
inc
add
mov
sub
in
sbb
and
leave
popa
ljmp
push
imul
or
mov
jg
outsb
imull
inc
pusha
repnz
gs
sti
mov
mov
lret
jecxz
cmp
test
aad
loopne
mov
mov
sarb
repz
xlat
es
imul
xor
sbb
mov
popf
ret
fisttps
repz
out
jle
pop
cmp
cli
mov
push
jecxz
int3
jne
mov
xchg
lahf
jmp
sbb
out
cld
loop
mov
mov
mov
or
popl
mov
push
pop
pop
dec
repnz
int3
pop
sbb
sahf
jmp
jge
insb
dec
push
or
rcr
push
push
push
enter
adc
data16
pop
testl
inc
mov
mov
sahf
sti
add
popf
out
mov
ja
lret
mov
scas
cmp
inc
pop
bound
call
cmc
jmp
jge
gs
imull
das
sub
test
js
sbb
push
xchg
jbe
mov
xor
xchg
adc
push
sbb
adc
jmp
xor
imul
fildll
mov
popa
mov
sub
aas
inc
jp
and
stos
inc
cmpsl
dec
dec
insl
pop
jecxz
or
addr16
dec
jmp
cmp
xchg
sub
mov
sbb
dec
aam
xchg
jmp
or
adc
inc
sub
dec
pop
and
cs
cmp
lcall
mov
xchg
ss
clc
aad
movsl
lcall
xor
or
xor
mov
push
mov
nop
out
jbe
je
insl
orb
lods
test
lcall
push
pushf
daa
and
out
inc
cld
xchg
xlat
adc
sub
dec
xor
sbb
add
pusha
mov
shr
fstp
inc
add
fldt
mov
jbe
addb
lahf
push
out
cmp
inc
sbb
scas
and
jbe
nop
dec
std
outsl
sbb
jmp
add
arpl
fnstenv
xor
push
inc
in
mov
addl
enter
ss
dec
add
cmc
je
add
inc
jne
aam
sbb
fldcw
outsl
mov
or
jle
push
pop
int
inc
mov
insl
and
add
test
rcll
mov
inc
test
fdivrl
cli
sahf
sub
cs
movsb
sbbl
jecxz
pop
jno
xchg
in
loopne
loope
mov
lock
xchg
mov
ja
aad
or
ret
mov
lahf
scas
jmp
lahf
pop
inc
fdivrs
xor
or
jp
in
jne
dec
jae
int3
dec
lock
ret
js
add
push
sahf
sbb
sbb
lock
inc
mov
dec
pop
arpl
les
out
xacquire
xchg
test
sub
ret
jl
mov
jge
dec
xchg
in
jmp
and
adc
push
xchg
test
jne
sub
ljmp
xchg
out
rclb
sahf
push
mov
dec
fistpl
test
ds
sbb
nop
fdivrs
movsb
sbb
test
ds
repz
mov
das
loop
cs
mov
fisttpll
mov
fistpll
shll
out
out
pop
jae
pushf
adc
cmpsl
lock
mov
mov
popf
ljmp
inc
sub
sahf
mov
ja
jb
scas
lcall
and
jl
sbbl
movsl
int
push
adc
cmovs
sbbb
adc
lret
test
es
data16
xor
cwtl
xchg
pop
xlat
jl
loopne
andl
dec
jg
jno
xchg
dec
ret
mov
mov
pop
pusha
jb
mov
mov
mov
cli
movsl
lock
aam
lcall
jmp
lods
callw
or
sub
aaa
jle
pusha
lret
push
and
shll
aam
mov
adc
jb
mov
mov
pop
pop
addr16
bound
leave
push
fidivs
in
arpl
dec
mov
xor
loope
in
push
imul
adc
mov
adc
ljmp
fstp
test
push
lret
vpunpcklqdq
call
popa
mov
insb
lods
lea
int
pop
xor
rcrb
ds
stos
push
push
movsb
mov
cmp
push
in
sub
fdiv
cli
lret
into
ret
adc
or
pusha
inc
enter
sbb
push
xchg
xchg
pop
add
ret
fidivl
dec
and
push
scas
test
ljmp
daa
add
xchg
scas
pop
push
out
cmc
ret
call
push
jae
or
adc
mov
pop
and
mov
lock
mov
or
mov
imul
or
mov
in
add
in
loop
into
push
test
pop
inc
lods
push
xlat
cmp
shrl
fs
mov
lretw
movl
pop
test
jnp
pop
daa
shll
hlt
adc
adc
gs
mov
aam
xor
orb
hlt
fadds
xor
popa
adc
fdivs
iret
xchg
mov
mov
and
les
ljmp
rcrl
test
mov
and
xor
fadds
ret
push
mov
das
lret
cmp
test
push
lods
popa
flds
add
sub
ja
mov
xlat
in
test
gs
movsb
icebp
mov
sbb
mov
test
dec
pushf
jg
mov
rep
inc
inc
lds
xlat
and
push
sub
mov
jno
das
in
sbb
jg
pop
xor
inc
xor
arpl
and
mov
push
fbstp
xchg
pop
and
popf
push
push
dec
push
jns
or
dec
xchg
or
das
xor
mov
xor
pop
lahf
fbld
out
sbb
or
scas
outsb
in
add
mov
mov
out
insl
or
xchg
in
inc
enter
loopne
jle
cmp
pop
or
or
sahf
arpl
xor
shlb
outsl
mov
push
orl
out
push
les
out
sbb
ljmp
sub
in
jo
add
jnp
inc
test
mov
scas
and
ljmp
nop
cmpsl
or
cmpsb
leave
adc
push
aam
push
adc
pusha
pop
imul
daa
add
xchg
jno
cltd
xchg
pop
dec
pop
jb
xlat
pusha
xchg
sbb
stos
pop
lret
xchg
or
sub
jns
push
sub
vpsubusw
addr16
sbb
push
cmpsl
mov
mov
neg
fisubrl
sub
mov
subb
mov
pop
out
bndstx
and
scas
in
mov
out
jnp
out
aam
mov
add
cmp
push
push
mov
sbb
inc
fidivs
cli
out
push
xor
mov
sub
dec
outsl
ret
push
dec
inc
xor
mov
in
jge
out
imul
mov
mov
dec
daa
adc
or
rolb
fildl
test
ret
ds
cmp
int3
mov
sahf
jne
mov
jmp
xchg
js
add
shll
inc
dec
lods
mov
ret
adc
repnz
push
insl
push
sti
cs
xor
push
cmp
je
mov
xchg
mov
in
sub
mov
ss
sbb
inc
xchg
outsl
dec
add
sub
pusha
push
mov
adc
mov
mov
mov
addr16
push
fimuls
push
push
and
adc
es
cmc
iret
jne
scas
scas
mov
push
outsl
xchg
cli
das
repnz
or
jmp
jns
sbb
cmc
xchg
shl
mov
adc
outsb
stc
jp
lcall
push
cwtl
mov
cld
pop
xchg
in
dec
inc
in
fsts
mov
adc
call
call
cmpsb
inc
sbb
icebp
push
and
shlb
dec
sti
clc
mov
popa
in
mov
inc
fisttpll
dec
xchg
aam
add
push
sbb
mov
adc
xchg
jne
test
fstp
sbb
jge
es
loope,pn
xchg
lret
out
outsl
fldcw
mov
pop
stc
inc
ret
mov
pop
jl
or
dec
add
push
mov
inc
push
fmuls
out
inc
xchg
int3
jmp
mov
cld
out
add
adc
mov
lcall
insl
inc
push
mov
push
std
movsl
test
loop
inc
jo
movsb
std
jmp
fstpt
hlt
out
mov
shrl
sbb
daa
pop
mov
sbb
mul
cmp
xchg
push
mov
xor
mov
sub
test
fstpt
loope
push
sub
sahf
xorb
add
cwtl
cmp
xchg
pushf
int3
cmp
xlat
dec
push
out
nop
scas
bnd
xor
dec
out
xchg
inc
push
sbb
pop
fsubrs
inc
dec
mov
shr
cld
pop
jle
and
cld
inc
or
shrb
sbbl
stc
jl
xor
xlat
xchg
mov
inc
push
mov
cld
cmp
mov
adc
jg
aad
and
jo
loope
mov
xchg
mov
mov
pop
and
clc
shrb
inc
dec
push
out
jbe
or
fisubs
fdivrs
into
cmp
or
rolb
push
push
mov
sbb
xor
mov
mov
mov
pop
sub
sti
push
repz
or
iret
or
imul
xor
or
int
pop
lock
icebp
cmp
cwtl
xchg
pop
scas
sub
jbe
frstor
cwtl
pop
inc
inc
mov
cs
scas
jne
dec
inc
fildll
lcall
mov
or
lods
popa
sbb
sub
stc
mov
test
rorb
dec
setp
mov
inc
out
sub
leave
push
xchg
jno
sub
pop
int
stos
mov
and
xor
addb
cwtl
dec
inc
xor
fcmovne
popf
shrb
popf
adc
ret
out
sbb
push
mov
dec
push
sbb
adc
add
pop
repz
and
popa
xchg
inc
jno
cwtl
test
iret
movsl
pop
fstpl
add
adc
lock
jp
lock
dec
add
dec
movl
in
js
mov
adc
push
add
sti
repz
cmp
mov
mov
mov
andl
leave
ret
sub
dec
pop
mov
cli
lcall
iret
cmpsl
xor
je
outsb
cmp
test
mov
pop
leave
fcmove
jmp
sub
pop
sbbb
cwtl
dec
cmpsl
lea
jnp
mov
ja
les
push
push
aaa
cltd
loop
loop
sub
shll
test
outsl
test
movsl
aaa
call
shrl
or
mov
or
cs
lret
inc
mov
inc
inc
lret
jo
test
inc
add
add
add
les
mov
and
push
roll
inc
imul
or
inc
fdivl
in
loope
inc
arpl
adc
js
xor
cwtl
cmp
pop
mov
or
mov
xchg
mov
vxorps
xchg
dec
xchg
xor
int
dec
negl
into
cwtl
mov
xchg
test
or
dec
mov
cwtl
add
mov
incl
xchg
pop
sahf
or
les
sbb
inc
cmp
and
mov
mov
cmp
cltd
push
mov
lods
xor
jmp
jmp
clc
imul
in
notb
mov
mov
shlb
pop
pop
fbld
xor
sbb
fwait
jns
test
fstps
out
xchg
mov
and
add
inc
in
inc
enter
pop
insb
adc
lret
leave
jl
aad
aam
cmc
pop
push
movsb
pop
jle
jmp
xchg
xchg
fnstsw
add
inc
push
xchg
sub
testb
and
xor
pushf
dec
dec
popa
call
inc
xchg
jmp
mov
dec
stos
mov
mov
inc
out
adc
imul
push
inc
psubw
movsb
or
aam
shlb
ss
or
xchg
push
aaa
lret
into
lods
lcall
jno
loope
dec
xchg
mov
mov
loopne
inc
idivb
inc
sub
ret
sub
jns
and
jp
jno
xor
fdivp
sbb
clc
push
fidivrs
ja
mov
mov
out
jle
subb
popf
push
dec
pop
fdivr
push
dec
divb
xor
sti
mov
stc
or
sbb
pusha
xchg
fisubrl
shrl
std
xor
cmp
mov
pop
jns
mov
cltd
subb
loope
inc
xor
mul
cli
cmp
xchg
inc
jns
out
test
mov
dec
mov
xchg
cs
adc
clc
cli
mov
test
fwait
xor
pop
movsl
cli
pop
xchg
lods
inc
lods
mov
jnp
call
push
aam
mov
adc
push
shrb
mov
daa
jb
xor
pop
je
mov
jmp
scas
roll
cmpb
xor
and
fcompl
cs
js
or
lcall
or
jne
or
rcr
sti
xrelease
aam
xchg
popf
jg
cltd
movl
pushf
lret
sar
xchg
push
shll
enter
add
jo
inc
int
fildll
mov
push
adc
cmpl
sub
shrl
fsubrs
rcr
dec
jns
loopne
adc
aas
movsl
adc
jle
lock
cmp
mov
pop
cmp
mov
push
daa
xchg
inc
lods
imulb
jns
fwait
outsb
mov
lods
inc
xchg
lea
lods
adc
cmc
and
mov
ljmp
mov
out
add
test
pop
mov
aam
mov
lds
aam
lds
lock
xchg
fwait
stc
rcr
push
xor
out
mov
int3
and
mov
in
aam
or
and
aaa
mov
fistpl
push
jecxz
sbb
addr16
out
stos
or
dec
cmp
jp
mov
xor
ffreep
jnp
mov
mov
dec
push
jg
fistps
lock
outsl
xchg
cmp
cli
imul
sub
test
lret
sti
and
aad
mov
jo
ja
and
sbb
loope
mov
cmp
sub
cmp
mov
and
loop
shrb
pusha
pop
imul
or
mov
aas
mov
ljmp
sbb
dec
add
mov
xchg
fwait
and
cmp
cld
lock
shlb
addl
sub
aaa
add
pop
test
shrb
pop
sbb
lret
icebp
mul
lcall
out
push
pop
enter
fucomi
dec
mov
push
or
or
loop
cmpsl
push
cmc
repz
movsb
call
pusha
subb
or
jb
shll
xchg
femms
ror
nop
mov
add
dec
test
test
imul
lods
mov
dec
faddl
jo
pushf
inc
mov
cmc
ljmp
sub
in
mov
push
pop
lahf
es
mov
and
rolb
fisubs
mov
shlb
cwtl
scas
inc
das
ss
mov
adc
pop
fiadds
adc
jle
xor
adc
out
cmc
jae
mov
ljmp
frstor
pushf
adcl
das
clc
ret
shlb
fldl
pop
jb
mov
push
adc
scas
fwait
xor
push
and
push
lds
push
adc
ficompl
iret
inc
inc
adc
rcr
mov
xor
inc
xorl
adc
xchg
imul
out
gs
inc
pop
inc
pop
test
push
mov
mov
or
sbb
xchg
dec
sar
dec
pop
cmpsl
shl
or
loopne
ljmp
dec
pop
orl
testb
or
and
add
jno
fbstp
outsb
movsl
ss
sub
loop
shrb
add
adc
jne
jo
mov
ljmp
mov
mov
cmpsb
push
inc
push
insb
pushf
repnz
or
cmp
fldl
lods
or
sbb
jae
adc
and
ds
pop
push
xorl
sbb
gs
movsl
repz
popa
int3
mov
adc
js
push
outsl
sbb
xchg
push
leave
stc
addb
pop
adc
xor
mov
jge
jo
in
and
out
lods
scas
outsl
clc
movsl
pushf
adc
aas
mov
sahf
mov
push
xchg
ret
xchg
jmp
mov
mov
mov
pop
repnz
adc
js
cld
les
enter
fidivrl
cld
inc
shll
lcall
lcall
cli
mov
imul
mov
out
xchg
jg
bound
fdiv
sbb
je
ja
nop
scas
das
test
jne
and
fs
rcll
das
std
in
in
add
mov
mov
adc
test
lahf
aad
sbb
lret
aad
pop
mov
inc
aad
xor
sahf
test
test
mov
pushf
movl
shrb
push
rorb
jo
loopne
insl
xlat
rorb
ja
int3
dec
xchg
sbb
scas
jne
xchg
mov
clc
movzbl
mov
jnp
aad
xchg
leave
lods
movsb
stc
insl
aad
push
push
mov
mov
aad
movaps
lret
push
lret
jo
in
test
xor
sub
in
clc
push
or
ja
lcall
add
mov
cmpsl
aad
clc
mov
es
mov
lds
jmp
push
hlt
jo
call
mov
ret
fldt
pop
sarb
xor
mov
xchg
ret
add
scas
mov
enter
mov
jg
jno
mov
out
sub
or
nop
lret
sub
stc
sbb
hlt
mov
out
push
rorl
std
popa
cmp
ljmp
adc
and
dec
dec
push
hlt
int
or
in
movl
sti
dec
jge
cmp
insl
inc
rclb
or
nop
pop
push
jb
jge
test
push
sub
in
xor
int3
fdivrs
rcll
sarb
add
cmp
mov
mov
mov
iret
or
xchg
jl
imul
lock
mov
add
add
lret
aas
push
xlat
gs
sarl
pop
pop
mov
ret
add
mov
xchg
and
les
jo
push
fwait
and
cwtl
ds
push
sub
fcoms
imul
xor
add
push
leave
xchg
cmp
testl
sbb
or
mov
or
cltd
jg
mov
sbb
in
mov
shll
adc
fmuls
int
gs
lock
mov
add
and
mov
mov
cs
rclb
mov
xchg
jg
aaa
cmp
mov
inc
pop
or
sub
fistl
adc
push
aam
jo
pop
and
and
dec
or
sti
jl,pt
ljmp
pusha
mov
dec
xchg
fmul
test
ret
sub
xor
rorl
mov
ret
or
mov
adc
pop
bound
mov
mov
xor
adc
scas
cld
loopne
jg
and
sbb
lock
push
add
icebp
jns
cli
pop
stc
cmp
push
dec
xchg
into
push
arpl
aaa
mov
movsl
adc
add
xor
cmc
sarl
xor
pop
fdivp
pop
fs
pop
sbb
out
mov
jp
fsubr
fsubl
adc
testb
cmp
dec
ja
sbb
add
jge
sbb
icebp
jnp
or
ret
in
cmp
popf
xor
test
or
push
pop
jge
add
jp
pop
or
sbb
mov
push
repnz
cmp
push
data16
mov
sahf
xchg
pop
hlt
jo
mov
pop
push
jle
outsl
data16
out
std
nop
rolb
lret
aad
out
loopne
xor
cmpsl
mov
pusha
adc
or
mov
pop
mov
clc
sub
sub
das
in
rol
pop
icebp
loope
add
icebp
std
movsb
sbb
pop
repnz
jl
out
ja
ja
mov
cld
cmc
aas
lea
mov
xor
enter
mov
xchg
jle
adcl
xchg
or
test
pop
jmp
sub
ret
mov
mov
pop
daa
inc
mov
arpl
or
js
xor
popf
cs
ja
mov
insb
dec
mov
adc
out
sahf
push
jg
nop
jmp
dec
mov
push
pop
inc
dec
out
pop
sbb
aad
int3
xchg
lcall
ret
mov
mov
aam
rol
std
ljmp
cli
pusha
add
daa
sbb
xlat
mov
xor
jl
nop
jecxz
sbb
and
lods
inc
dec
mov
pop
xlat
in
jne
dec
je
stos
pop
mov
or
mov
incl
add
add
fcomps
jecxz
cmp
adc
push
xchg
xor
pop
lcall
repz
pop
and
shll
jp
repnz
sub
cld
shrb
faddl
dec
sub
addr16
decb
lcall
cltd
pop
dec
push
jno
arpl
xchg
out
pop
xchg
xor
iret
out
jae
jl
xor
hlt
cli
jmp
fs
cmp
int3
roll
ret
and
mov
add
cmp
cmp
leave
sbb
pop
daa
jne
sub
mov
lods
ljmp
sub
lock
adc
test
les
dec
mov
xchg
es
mov
fstl
push
movsb
incl
push
test
push
stos
inc
ja
mov
pushf
jnp
arpl
popl
jmp
stos
mov
sar
mov
divl
mov
mov
pushf
shll
or
gs
test
mov
and
outsl
lods
add
in
jmp
push
rorl
mov
aam
dec
cmp
push
loopne
sbb
push
loopne
pusha
jae
mov
dec
push
sub
mov
bound
cmpsl
cmp
rcrb
cli
inc
popa
dec
add
cmp
mov
mov
cmp
enter
sub
or
dec
mov
jmp
jl
stc
inc
push
lret
cmpsb
cmpsb
add
into
nop
or
inc
push
out
je
ds
dec
lods
es
enter
push
inc
adc
push
push
sub
bnd
scas
push
lods
xchg
mov
sub
lret
push
pop
iret
xor
mov
add
dec
ss
push
adc
mov
push
cld
flds
xchg
push
ffreep
mov
sub
xchg
or
xchg
jns
dec
dec
cmp
cld
jb
mov
push
push
mov
adc
lods
insb
sub
and
add
loop
sub
jmp
dec
rcl
mov
xor
push
rcll
ret
push
popa
push
push
dec
mov
data16
jb
gs
ret
sub
orl
inc
mov
adc
add
mov
cmp
test
push
aad
cmpsl
pusha
adc
scas
push
ljmp
lds
cs
push
cltd
imul
outsb
inc
inc
sub
push
dec
xchg
xor
insb
das
push
ds
inc
pop
sbb
xlat
shlb
out
popa
mov
mov
jle
cmc
cltd
xor
lret
nop
push
jo
vpsubsw
fimuls
mov
push
xchg
pcmpgtw
iret
fsub
fildll
mov
and
dec
ds
dec
adc
enter
daa
cmpsl
pop
jle
aam
add
xor
mov
ja
js
mov
xor
shrl
pop
cmp
mov
and
jmp
ret
arpl
lcall
orb
sbb
dec
test
add
aaa
sub
or
mov
inc
xlat
sub
and
js
shll
sti
dec
fcmovnbe
jbe
lret
adc
cmp
fs
pusha
movsb
popa
mov
pop
adc
inc
mov
and
push
pop
jo
add
call
sub
jnp
aaa
jae
jbe
aam
mov
adc
bound
xor
stc
jle
sub
push
pushf
mov
insb
xor
imul
mov
cmp
aas
add
aad
test
or
pop
mov
scas
es
dec
rcrb
in
stos
sti
test
cld
or
arpl
jp
pop
pop
pop
cmp
add
mov
addb
push
and
xor
fsubrp
inc
jle
ret
mov
mov
add
cmp
dec
icebp
xchg
adc
into
dec
call
xor
or
fs
jg
mov
mov
test
aas
xchg
movsb
stc
flds
xchg
test
and
stos
cmp
jmp
adc
pusha
addr16
seta
pop
mov
mov
int3
jnp
jbe
lea
pop
test
outsl
in
and
dec
cs
lock
inc
filds
cld
mov
push
push
insl
xchg
decl
dec
jne
aaa
testb
xor
dec
repnz
cmp
cmpsb
addb
jo
icebp
jl
sahf
adc
mov
mov
imul
mov
mov
scas
in
addl
add
nop
mov
xchg
cmp
mov
fisubrl
pop
out
inc
rcr
inc
xorb
lock
cltd
push
add
fucomp
test
andb
pop
push
or
cmpsb
push
or
sbb
and
inc
cmpsb
and
jno
ja
bound
cmp
cli
cmp
mov
mov
fsubrs
fwait
push
cmp
hlt
sbb
cmpsb
gs
mov
out
or
rclb
and
movsb
add
push
shl
ds
xlat
leave
inc
sbb
mov
imul
aam
ja
stos
jg
sti
add
dec
stc
mov
lds
imul
subl
jmp
mov
sbb
adc
outsb
arpl
jnp
mov
xchg
addr16
fld
pop
lods
scas
jb
scas
jmp
sti
xlat
ficoml
int3
popf
in
add
mov
repz
pop
sub
push
and
add
outsb
int3
push
es
dec
and
push
xor
jecxz
push
sub
cmp
push
aam
popa
or
push
lret
sahf
mulb
andl
lret
push
mov
sarl
adc
or
gs
xor
andb
push
ljmp
insl
outsb
cmc
sbb
mov
addr16
mov
ret
loopne
inc
mov
jne
cwtl
outsl
aas
incl
scas
mov
pop
mov
shlb
mov
inc
jne,pt
adc
xchg
or
repz
or
out
and
shlb
xchg
adc
iret
fstps
rcr
fidivrs
aad
sub
inc
imul
aam
sbb
jp
movsb
popa
adc
dec
push
xchg
out
sbb
adc
das
into
mov
std
gs
jge
xor
mov
shlb
xchg
jo
popf
xchg
fldenv
daa
pshufw
aad
popa
cmp
pop
jmp
inc
pop
fdivs
aad
and
insl
and
ret
iret
bound
inc
pusha
jmp
jg
iret
pop
sub
xor
push
fwait
push
sahf
xor
adc
mov
fsub
outsl
notb
ja
sbb
sbb
xlat
adc
dec
filds
or
fidivs
dec
hlt
mov
mov
cmp
dec
push
push
lret
popf
jbe
sub
arpl
dec
xchg
in
orb
lods
mov
fisubrs
stos
adc
hlt
cmp
cmc
mov
insl
jl
daa
xor
xlat
lret
in
cmc
arpl
mov
xchg
lcall
jno
cltd
ret
jmp
xchg
icebp
xor
mov
push
add
pop
negb
sbb
adc
add
sbb
xchg
add
rclb
stos
pop
pop
or
rolb
inc
cld
cmpsb
dec
into
and
xchg
mov
ret
pop
roll
xor
or
jge
push
jle
cwtl
push
icebp
lret
in
xor
push
cs
mov
mov
fdivl
ljmp
sbb
sub
pop
dec
popa
dec
movntps
shll
xor
imul
inc
imul
movsb
sbb
enter
cli
aad
popf
xchg
inc
lods
mov
and
pop
mov
or
int
xchg
repnz
test
sub
loopne
mov
ljmp
push
stc
xchg
mov
cmpsb
pop
icebp
cmp
inc
jge
stc
jp
lcall
insl
std
mov
mov
sub
mov
fsubl
xor
mov
stc
shlb
mov
int
pop
out
add
fs
adc
stc
into
add
sbb
lods
pop
aas
dec
fisubs
push
sarl
mov
mov
or
pop
aaa
movsl
sarb
lcall
pushf
addb
ret
es
push
dec
or
popf
testb
js
xor
xor
mov
fimuls
sub
jne
dec
push
xor
cmpsl
mov
mov
pushf
lret
fbld
inc
notb
cmpsb
arpl
mov
lods
icebp
push
lret
rolb
out
ss
sbb
push
in
push
fnstenv
loop
jmp
lods
mov
pop
arpl
dec
sbb
fdiv
repz
pop
mov
adc
stc
lods
sbb
sub
lods
xchg
sbb
or
mov
inc
dec
mov
xchg
fstps
insb
and
scas
inc
std
orb
jae
fnstenv
jno
jmp
scas
push
adc
jecxz
inc
fisubl
int
out
aam
ss
inc
jecxz
fistpll
int
ljmp
ss
inc
test
out
dec
std
les
inc
mov
mov
out
cmpsl
test
pop
sub
mov
cmpsb
out
adc
adc
add
xchg
xchg
in
sti
js
push
xchg
xchg
xchg
addl
cld
dec
pop
mov
lea
push
loope
sahf
cmp
ret
out
jb
fstp
or
sub
jbe
sarb
mov
bound
imul
inc
lcall
mov
cmp
pop
xchg
mov
pop
rorl
push
enter
fsubrl
call
lods
push
sub
test
cmp
jp
arpl
lds
cmp
lahf
xor
push
xchg
cwtl
stos
adc
mov
inc
add
sub
repz
pop
xchg
inc
aaa
stos
inc
loope
pop
fldcw
jno
fldcw
out
cwtl
and
ja
lds
aas
scas
ret
push
iret
les
fisttps
inc
cld
scas
mov
xchg
fisttpl
jns
add
clc
sbb
sbb
sahf
push
push
in
ss
add
cmp
addb
xchg
aas
mull
sub
and
add
aad
mov
inc
push
aad
int
cmpsb
fidivl
out
jae
repnz
xor
sbb
mov
fstpl
shl
sbb
jmp
mov
xorl
xor
cmp
stos
adc
inc
xchg
dec
test
dec
mov
insl
pop
jns
fdivrs
inc
mov
push
inc
sbb
push
lock
les
out
cmp
int3
cltd
jne
dec
movsb
lds
out
out
jbe
daa
xchg
movsb
push
jns
mov
das
pop
lret
insl
xchg
jmp
pop
xlat
pushf
or
cld
fsts
inc
xor
cli
int
aad
add
xchg
popa
ss
dec
cmp
test
fsubl
xchg
js
repnz
mov
popf
pop
dec
cli
out
bound
mov
sub
fnstcw
sub
cmp
or
sarb
jg
pop
aas
adc
out
push
adc
icebp
pop
outsb
fwait
or
jl
ret
or
movsb
add
jecxz
xor
mov
and
push
xchg
pop
fsubrs
ljmp
add
xchg
xchg
ss
cld
insb
mov
aas
sar
mov
xor
fistps
xchg
arpl
and
xchg
jecxz
lock
fs
xchg
xchg
sub
les
xchg
xchg
jns
cmp
jmp
pop
adc
dec
adc
mov
inc
scas
mov
sbb
jno
dec
jb
pop
sbb
outsl
add
das
test
inc
sub
fnstsw
pop
sub
jae
adc
or
cld
xchg
imul
movsl
in
sbb
push
and
hlt
imul
pop
gs
cmovs
and
aam
fcoms
pop
sbb
shll
iret
outsl
push
pop
add
in
outsb
push
cmp
fmul
jnp
pop
mov
mov
cs
daa
addr16
pop
cmp
cmp
arpl
add
out
cli
mov
in
shrb
adc
test
mov
push
gs
out
jns
mov
lret
scas
pop
call
into
and
popf
pop
inc
and
cltd
sub
or
ror
mov
std
fs
xchg
addb
xchg
mov
std
fidivs
cmp
add
mov
push
mov
shlb
xchg
sti
push
ljmp
push
or
outsb
jp
jl
push
sbb
push
or
lcall
inc
addr16
and
js
stc
cs
gs
mov
insl
mov
bound
sbb
in
ja
adcb
cmp
xchg
push
cmp
pushl
test
cmp
push
loope
dec
mov
aaa
shrl
jae
icebp
popf
or
push
sbb
repz
or
mov
adc
mov
xor
adc
std
sbb
aaa
idiv
loopne
pusha
leave
cli
push
dec
jl
pushf
test
mov
or
fwait
mov
lea
shl
jg
out
dec
sbb
mov
pop
lods
loope
add
xor
rcll
pop
sar
and
xchg
popa
jno
mov
xlat
repz
sub
xor
outsb
out
xchg
popf
cs
shlb
dec
jg
ds
outsl
cmpsb
repnz
add
dec
xor
push
outsb
pop
repnz
cmp
mov
mov
pushf
bound
data16
mov
xlat
repz
pop
in
mov
movsb
cmp
mov
mov
fiaddl
add
sahf
iret
sahf
sub
push
leave
out
lods
iret
rorb
cmpsb
mov
push
jecxz
andl
pop
jno
mov
xchg
and
mov
jmp
cwtl
inc
or
enter
adc
push
and
cltd
mov
jns
scas
sbb
xor
xchg
out
or
dec
hlt
xor
sti
fincstp
jbe
pop
cld
add
mulb
mov
test
or
daa
add
mov
outsb
xchg
stc
sub
imul
dec
sub
cmp
bound
sub
lcall
pop
xor
outsl
sub
inc
out
rcll
lret
pop
inc
mulb
rsqrtps
ret
mov
mov
insb
and
fs
popf
mov
ds
lcall
jg
pop
dec
sub
stos
repnz
cli
cmp
jb
sbb
mov
mov
and
testl
aam
sbb
sub
repz
push
mov
std
adc
sahf
jno
inc
aad
fbstp
mov
imul
mov
insl
out
pop
data16
rorb
sbb
mov
inc
fimull
int
dec
jae
dec
jns
lret
loope
pop
adcl
push
adc
out
push
dec
push
sub
out
or
adc
cmpsb
xor
pop
imul
into
dec
jno
loop
mov
sbb
or
cmp
iret
out
mov
pop
aaa
pop
bound
lods
addr16
mov
xor
push
mov
adc
dec
xor
inc
fistpl
outsb
jb
and
sbb
dec
jmp
lods
mov
mov
outsb
xchg
aas
fs
and
fdivr
sub
or
and
roll
adc
dec
icebp
sbb
inc
enter
xchg
call
lcall
scas
ror
mov
push
cmp
mov
pop
jo
outsb
in
pop
lock
and
mov
cmp
loope
push
test
pop
mov
pop
insb
add
movl
int
and
dec
xchg
int
jge
lret
insb
adc
in
shr
in
cli
in
inc
jae
cmp
pop
and
adc
jnp
push
fld
cmp
xor
mov
cwtl
leave
movsb
or
aam
adc
shlb
dec
fstpt
push
adc
cmpsl
mov
hlt
lds
xchg
jle
scas
cmpsl
inc
icebp
je
and
out
aam
sbb
in
std
and
shll
pop
add
js
es
inc
add
xchg
jecxz
rcrl
jbe
jle
sbb
popa
xor
mov
mulb
xor
xor
mov
out
sbb
std
or
pop
mov
push
imul
data16
scas
push
loope
push
sub
pop
aam
cmp
xchg
mov
pop
and
or
jno
xor
sahf
sbb
push
test
ds
mov
cmp
dec
inc
mov
mov
nop
xchg
icebp
cmp
inc
pop
cmp
ljmp
cwtl
fstpl
in
dec
add
adc
jge
xchg
and
or
cltd
fisubl
decb
sub
mov
js
mov
and
clc
jne
or
pop
dec
movsl
ret
or
and
repz
aam
mov
pop
pop
xlat
fs
test
and
jbe
movsl
mov
out
lea
mov
addl
push
xlat
stos
mov
ret
cmp
xor
mov
orb
icebp
mov
in
xchg
or
popf
push
sub
jge
into
inc
add
inc
fdivrs
jmp
enter
ss
cld
and
lret
add
push
push
push
test
nop
push
rolb
sahf
dec
out
cmp
stos
push
xor
aam
or
pushf
and
rcrb
in
out
in
nop
out
and
push
test
into
cmpsl
mov
arpl
into
fsubr
pop
loope
mov
rol
and
add
loopne
pop
fnstenv
mov
pop
rcr
inc
sub
shl
sub
pushf
imul
cli
or
pop
cmc
cmp
push
xchg
fdivrs
fistpll
sarl
mov
stos
push
gs
loop
jb
idivl
adc
sub
adc
das
and
pop
andl
or
jae
stos
mov
shr
cmpsb
int3
aaa
xchg
scas
in
fiaddl
rcr
sbb
lods
repnz
stc
xchg
out
mov
pop
xchg
lcall
push
out
inc
pop
scas
or
test
dec
fiadds
xor
lds
out
and
push
int
mov
mov
fcmovne
lret
mov
fnstsw
sti
xchg
test
lds
setno
push
bound
push
lahf
add
ret
xor
ret
data16
add
addr16
cmpsb
adc
cmp
or
ficoms
xchg
loop
lods
inc
push
cmc
insl
add
pop
or
imul
inc
sahf
sub
sub
sar
add
push
lods
pushf
sahf
xchg
inc
xchg
jle
out
cmpl
jmp
dec
and
cmp
sub
cmc
fstps
sbb
inc
xchg
leave
sub
mov
xchg
cltd
jns
xchg
sarl
shll
fstpt
cmpsb
inc
outsb
ret
mov
mov
aas
mov
jle
imul
popa
test
pop
add
mov
es
ja
push
fstpl
dec
repnz
js
call
mov
mov
das
inc
add
pop
pusha
insl
and
notl
lcall
add
ds
dec
or
js
cmp
jg
mov
cmc
cmp
push
mov
lods
aam
outsl
call
sahf
lock
inc
adc
shlb
or
inc
call
aad
repz
pop
sbb
data16
nop
outsl
inc
add
cmp
into
pop
loop
dec
movsb
mov
xor
jg
mov
push
in
fistps
lret
cld
fistl
out
sbb
div
push
mov
adc
dec
ds
loop
ret
loope
bound
in
mov
add
cli
jle
mov
xchg
bound
cmp
call
fnstsw
in
or
sbb
out
stc
ret
gs
das
jo
scas
shll
sbb
movsl
ds
fiaddl
jmp
into
adc
jbe
stos
movsb
lcall
mov
pop
scas
dec
das
jne
aad
pop
dec
mov
push
loop
leave
fists
stos
into
and
outsb
in
sbb
adc
jmp
adc
xchg
or
fcoml
fs
movsb
lds
adc
mov
iret
loop
das
sub
scas
inc
mov
scas
sub
adc
insl
or
bound
sbb
dec
shlb
scas
iret
in
push
insl
scas
cmc
clc
out
stc
mov
in
dec
clc
addr16
mov
jp
ja
sbb
or
icebp
push
mov
xor
add
dec
sub
lods
sbbl
cmp
push
mov
popa
mov
dec
add
xor
cltd
lahf
pop
cmp
inc
xor
dec
enter
cmp
fbstp
shrb
mov
scas
aad
inc
arpl
stos
inc
pop
push
push
jmp
push
into
cmp
add
xor
bound
cmp
jl
fst
or
or
mov
cmp
popa
stos
test
pop
push
mov
mov
adc
xor
ret
mov
xchg
sub
sub
repz
mov
iret
xchg
cmp
in
dec
dec
sti
stc
mov
xchg
fxch
xchg
or
xlat
adc
mov
mov
shrb
push
jle
xchg
popl
divl
or
sar
pop
cmp
xchg
data16
outsb
mov
jmp
int
sbb
cmp
add
push
stos
jne
xor
les
lret
dec
arpl
mov
dec
lock
scas
sbb
popa
test
lock
push
stos
mov
mov
push
lds
push
adc
cld
loop
aaa
test
and
xor
es
sub
mov
mov
fistpll
jne
sub
and
fmull
std
ss
clc
push
mov
leave
cmpsb
sub
mov
ljmp
pop
mov
xchg
lcall
pop
lahf
into
lret
les
pop
ja
xacquire
sarb
xchg
push
adc
xor
aam
in
dec
test
hlt
imul
je
ret
mov
jp
cld
pop
popf
push
jns
cli
mov
adc
add
sub
mov
and
lahf
pop
leave
pop
cmp
mov
stos
cwtl
fstp
out
jnp
int3
xlat
xlat
xor
stos
pop
stos
and
aam
popf
scas
mov
shrl
stos
mov
push
xorb
add
fs
cmp
push
pop
sub
mov
inc
adcl
push
xor
mov
and
mov
jp
enter
lahf
aas
or
mov
mov
or
pop
adc
sbb
mov
fdivl
mov
mov
ret
addr16
lds
icebp
push
sbb
dec
push
lods
push
push
fldlg2
shll
push
mov
lods
test
and
push
sub
mov
and
cmpsb
xchg
mov
add
xor
cmp
jae
cmpsb
test
out
cmc
sar
loopne
pop
out
test
dec
pop
dec
jg
dec
sbb
pop
mov
scas
ret
flds
imul
test
pop
xchg
xlat
bound
test
inc
hlt
xchg
cmpsb
sub
add
ljmp
adc
hlt
dec
jecxz
pop
aam
mov
xor
cwtl
sbbb
pushf
mov
xor
nop
cmp
lods
loope
or
mov
nop
and
fidivl
jns
aas
roll
addb
ret
lret
sbb
pop
bound
jmp
fldt
add
fiadds
pushl
sub
fs
jne
mov
add
imul
xor
jl
repnz
jno
mov
nop
and
mov
xchg
push
lods
push
xchg
xchg
mov
hlt
dec
nop
jmp
sbb
orl
jmp
mov
jp
js
sbb
imul
push
mov
push
imul
push
jno
popa
daa
lock
mov
inc
push
xor
xor
sti
ret
aaa
lods
push
es
ret
push
test
or
mov
pop
xchg
divb
cmp
das
rorl
lcall
mov
insb
shrb
push
repnz
lret
pusha
arpl
ljmp
aam
shrl
jl
pop
sbb
xchg
dec
test
inc
adc
leave
insl
mov
pushf
mov
fstl
out
into
sbb
adc
into
data16
push
cmp
fs
pop
push
cli
mov
sbb
cmpsl
sub
jo
mov
aaa
sbb
sbb
popa
les
leave
stos
sbb
je
inc
sub
adc
shlb
mov
lea
vpaddw
jg
sbb
dec
sub
sub
jb
out
aaa
pop
sub
hlt
cwtl
sub
pop
mov
pop
mov
cmp
loop
adc
mov
mov
sub
inc
popf
pop
ja
enter
fidivrs
mov
ja
test
mov
sbb
xlat
dec
nop
int3
iret
std
into
daa
inc
cmpsl
adc
or
mov
fs
dec
cmp
mov
popl
ja
test
xor
sti
in
sbb
xchg
lock
aaa
inc
lcall
xchg
movsb
cltd
in
jecxz
pop
jp
mov
arpl
cmp
enter
gs
jge
mov
mov
sub
pop
add
addr16
fdivrl
inc
add
fs
lret
push
xchg
mov
and
or
sub
mov
pslld
or
dec
sbb
jp
mov
adc
test
gs
dec
jb
sub
inc
lahf
repnz
push
mov
mov
and
push
dec
pop
mov
outsl
sti
and
in
lea
pop
pop
and
stos
dec
test
clc
fwait
js
aad
sbb
xchg
into
fwait
lcall
xchg
and
jo
cmp
adc
pop
xor
hlt
or
jmp
pop
sbb
push
mov
shlb
nop
cld
cmp
sub
outsl
sbb
mov
pop
push
jo
out
jmp
loope
inc
and
fwait
xchg
cmovae
dec
out
and
fs
jo
fistl
adc
inc
movsl
test
and
adc
gs
push
lock
sbb
movsb
mov
mov
sub
xor
fcomps
call
sub
lds
es
lahf
rorl
inc
pusha
jg
xlat
js
add
stc
mov
inc
jns
cltd
fcomps
jbe
in
shl
and
cs
bound
and
dec
popa
lods
dec
push
jno
sbbl
push
mov
dec
xor
pop
mov
xchg
negb
xchg
xchg
js
mov
imul
jns
test
or
es
scas
mov
sbb
fcmove
xlat
cmpsb
or
mov
sbb
sub
mov
dec
pop
ds
cmp
scas
js,pt
sbb
movl
fdivl
push
sti
xor
das
call
sub
jecxz
sub
call
pop
in
fildll
scas
adc
shll
ret
int
fstpt
ret
cmp
aam
and
lcall
add
or
sub
call
outsb
xchg
out
call
outsl
dec
and
test
xchg
inc
dec
fdivs
enter
outsl
shrl
xor
push
mov
fsubr
sbb
daa
push
popf
cmpsl
xor
nop
mov
cs
lods
rorl
xor
add
shlb
call
in
ds
hlt
xchg
xor
pop
movsl
and
enter
pop
mov
js
popf
mov
cltd
inc
cli
xchg
insl
fstl
ret
clc
dec
cltd
dec
push
inc
push
pop
je
mov
rcrb
mov
nop
xor
jbe
scas
xchg
jecxz
jbe
data16
test
adc
lcall
sub
insb
or
or
and
pop
stos
lods
fidivrs
rorl
frstor
repnz
jmp
cmp
dec
mov
push
adc
iret
in
andl
aaa
inc
xor
pop
mov
cltd
xchg
test
lret
cmpsb
imul
outsl
orl
cli
dec
or
add
in
ror
into
mov
orb
in
xchg
and
pop
sub
loopne
jbe
loope
jecxz
repz
bnd
jae
adc
scas
mov
dec
adcb
mov
xchg
mov
enter
xor
lods
cmp
aam
jnp
sbbb
cmp
jle
mov
inc
mov
nop
sbb
lahf
int
mov
dec
jno
or
cmp
mov
in
and
add
nop
decl
cmpsb
jne
nop
outsb
outsb
rcll
push
pop
jmp
enter
sub
xchg
and
fsubl
cltd
or
mov
inc
jno
push
into
add
dec
jno
fidivrs
xor
mov
ficoml
push
imul
push
sbb
movsl
mov
frstor
add
fcmovbe
lods
sbbb
into
pop
adc
push
roll
jecxz
xstore-rng
cmpsl
inc
adc
jnp
ds
sub
addr16
nop
ss
sbb
or
push
fmuls
add
stc
scas
loop
push
fcmovb
and
repnz
dec
cmp
jo
ja
push
or
dec
dec
ret
xlat
mov
mov
xchg
pop
pop
inc
xchg
pop
inc
aam
bound
and
movsl
out
lds
xchg
mov
mov
jp
rclb
mov
xor
mov
lcall
imul
stc
push
mov
mov
pop
xchg
add
or
test
push
test
push
xchg
lods
or
sbb
fildl
int
push
nop
iret
dec
mov
cltd
sbb
insb
pop
out
mov
scas
dec
out
mov
pop
add
sbbb
inc
lret
xchg
arpl
dec
fisubl
mov
xchg
inc
mov
in
out
pop
or
jbe
sahf
lcall
clc
movsb
sbb
inc
lret
adc
test
xlat
fisubrl
sbb
xchg
mov
out
dec
push
hlt
in
loope
nop
leave
subb
push
push
mov
jmp
mov
mov
mov
xchg
and
jecxz
mov
out
xchg
cmp
fwait
push
bsr
pusha
lcall
addb
cmp
mov
sbbb
adc
ss
xor
ffreep
push
push
cltd
push
lods
adc
adc
fstpl
arpl
sti
daa
inc
mov
sub
and
std
mov
rorb
and
in
jno
lcall
dec
mov
push
in
push
inc
flds
xor
test
pop
mov
push
or
movsb
sbb
int
or
es
mov
and
subl
cs
daa
or
xchg
bound
ret
nop
lods
pop
je
fs
xchg
xor
shll
into
add
popf
dec
dec
shll
jp
xchg
mov
out
imul
pop
or
jle
or
mov
scas
in
cmp
jo
dec
subl
jl
inc
push
clc
add
cmp
push
andb
hlt
sarb
mov
dec
fistl
pop
add
mov
mov
lret
outsl
flds
add
ret
ja
push
push
add
andl
pushl
sbbb
sub
jnp
push
ds
jae
mov
test
lea
inc
cmp
lret
inc
imul
or
inc
jp
and
xchg
adc
outsl
aas
jno,pt
fwait
les
cli
xchg
push
lret
mov
sarl
pop
pushf
fsubs
mov
xor
movsb
and
sarl
push
and
cmp
cwtl
dec
inc
lea
jb
popf
jp
pushf
push
sti
stos
fmull
adc
sahf
stos
imul
xchg
les
sbb
ja
ss
movsl
out
pop
inc
ljmp
mov
test
pushf
cltd
xchg
push
adc
fbstp
aad
ds
mov
stos
or
fs
jne
daa
or
dec
mov
cmpsb
jp
jns
sub
je
mov
pop
insl
dec
movsb
fmull
pmulhuw
cmp
dec
test
xlat
sub
aas
fimuls
push
mov
cmpsl
mov
pusha
inc
ljmp
imul
jns
rorl
das
push
or
and
ret
rolb
sbb
mov
xor
scas
pushl
insb
lret
mov
and
inc
addl
xor
push
adc
push
jb
rorl
mov
lahf
cltd
sbb
out
jg
mov
xor
pop
cmp
aad
out
push
sarl
add
sbb
cmp
dec
dec
push
stc
and
mov
sahf
in
push
pop
push
adc
cwtl
lock
test
mov
or
nop
pop
mov
fldt
mov
xchg
xorl
mov
into
push
das
outsb
test
xchg
jg
es
sbb
lods
ljmp
movsb
pop
mov
mov
pop
das
cmp
xor
jnp
xchg
repnz
sbb
jbe
addr16
inc
gs
or
sub
inc
add
jns
in
fsubrs
inc
shlb
aaa
and
xchg
cltd
xchg
lret
iret
iret
sbb
fdivrs
int
sbb
jb
insb
xlat
xchg
and
cmp
repz
aas
pop
sti
frndint
pushf
addl
or
stos
les
aad
dec
pop
mov
cmp
jb
push
ficoms
arpl
mov
test
test
stos
loop
inc
test
les
pop
xor
and
sbb
dec
out
sti
push
cmp
aam
push
sub
lock
icebp
in
inc
in
push
popl
mov
loope
jg
cmp
into
sahf
or
outsl
sub
dec
rolb
adc
sbb
xchg
or
xchg
jmp
ljmp
xchg
rcr
xor
callw
insl
pusha
aaa
mov
sbb
xchg
push
cmp
xor
ss
cld
gs
and
mov
clc
pushf
push
and
xor
adc
jle
ret
arpl
jge
movsl
push
xor
jb,pt
mov
inc
sbb
jns
cmp
es
mov
retw
lahf
mov
es
insl
or
push
rolb
shr
movsb
xlat
mov
int3
icebp
push
xchg
cli
inc
xchg
push
clc
popa
imul
cmp
fbld
sub
mov
rcrl
aaa
mov
outsb
sbbb
data16
lret
shl
push
repnz
in
out
mov
aam
xchg
mov
outsl
fwait
add
jne
mov
fsubl
or
lds
cwtl
jnp
loope
outsl
lds
push
stos
xor
xor
pusha
jo
fwait
mov
in
mov
test
fs
cmp
add
jl
push
mov
dec
in
push
leave
inc
xchg
push
pop
xchg
popa
pop
enter
adc
dec
adc
add
xchg
test
popf
add
repnz
push
mov
mov
mov
xchg
sub
stos
and
pop
pop
mov
xchg
inc
cmp
xchg
popf
and
cmp
mov
aam
sub
and
pop
mov
test
clc
jl
jns
shlb
sub
movl
dec
aas
data16
orb
cmp
cmpsb
mov
stos
push
shlb
cmp
inc
sbb
inc
xchg
pop
subl
into
sbb
mov
mov
repz
cmp
rcrb
cmc
push
nop
in
add
mov
push
ret
imul
sbb
dec
pop
flds
adc
negb
dec
orb
add
rcl
std
cwtl
push
outsl
adcl
iret
adc
add
stos
icebp
mov
push
xor
dec
inc
sub
stos
add
xchg
cmp
mov
pop
pop
mov
and
xor
es
call
mov
jp
outsl
test
sub
mov
jb
jnp
pop
mov
inc
mov
stos
adc
jae
pop
dec
outsb
inc
pusha
push
nop
adcl
arpl
dec
sbb
out
test
sbb
lods
test
mov
sbb
dec
sub
dec
pop
pushf
fstps
sbb
mov
mov
scas
stc
arpl
adc
and
and
inc
iret
lret
xchg
fsts
xor
outsb
notl
dec
fucomi
inc
mov
in
fnsave
aam
jg
add
out
js
fsubrp
icebp
jg
gs
xchg
cs
jae
mov
nop
aad
out
jne
mov
repz
add
ret
imul
cmc
mov
lds
dec
fwait
lahf
scas
xchg
mov
jecxz
negb
mov
shlb
mov
mov
jecxz
jmp
je
sbb
sbb
lret
sub
gs
pop
mov
sbb
pop
pop
mov
push
jl
test
mov
stos
fbld
ja
fs
fidivrl
data16
dec
loopne
push
xor
adc
daa
mov
js
fmulp
sbb
mov
jbe
popf
repz
shl
mov
xor
inc
cmc
xor
fs
inc
clc
es
jp
xlat
xorl
aas
test
int3
ss
mov
adc
cwtl
or
push
ljmp
adc
mov
sbb
int
or
cmp
pushf
loope
mov
inc
lret
inc
cld
add
out
and
mov
cltd
jb
or
mov
sbb
in
mov
push
cmpsb
pop
dec
or
dec
pushf
jge
sbb
mull
fsubl
jo
fmuls
popf
addb
dec
sarb
in
dec
dec
lds
insl
mov
pop
adc
sbb
sahf
cld
xchg
mov
push
dec
push
aam
mov
movsl
mov
or
cmp
xchg
cmc
add
mov
and
iret
out
cmp
ret
je
divb
fdivrs
aaa
test
mov
stos
sahf
out
leave
adc
mov
fiaddl
fstpt
icebp
lds
push
in
arpl
loop
in
addb
mov
stos
sub
inc
cmpsb
cmc
mov
pop
adc
sbb
cmc
and
lret
xchg
xor
xor
pushf
inc
sahf
pop
push
sub
and
jl
jno
or
cli
dec
mov
imul
adc
int
dec
jl
mov
les
imul
pop
call
push
adc
lcall
jns
push
mov
mov
pop
movsb
sbb
jo
dec
mov
into
push
loop
idiv
es
xchg
mov
stos
ret
popa
ss
repnz
fdiv
addl
scas
push
fsubrl
adc
scas
push
jns
scas
ret
fnstcw
fimull
push
lret
mov
fcomps
cmp
rorl
and
jmp
int3
int
aam
sbb
xsavec
inc
xor
adc
pushf
fisttpll
sbb
and
and
xchg
inc
movsb
mov
arpl
test
inc
fdivr
add
lahf
mov
cmp
jmp
mov
sbb
inc
mov
mov
inc
and
mov
movsl
jp
divb
fsubrs
jle
push
fidivs
and
lods
sbb
out
jns
jnp
int
or
adc
sbb
xchg
stos
push
sbb
rcrl
xchg
out
jbe
ljmp
loopne
mov
test
push
std
push
jge
outsl
movsl
adc
cmp
lods
fsubp
xchg
lock
lcall
es
push
out
outsb
lahf
jnp
les
bound
push
sbb
int3
mov
sbb
jmp
pop
jle
jge
jb
repz
mov
adc
sub
inc
rcll
popa
dec
add
sbb
inc
inc
jae
fimuls
pop
mov
jge
mov
mov
in
lock
js,pt
sbb
dec
pushf
xor
ds
test
pop
nop
inc
jge
jl
cmp
cmp
push
cmp
mov
sub
push
inc
dec
push
push
dec
cmp
out
outsb
cmp
mov
enter
dec
jmp
jae
lahf
fsubl
fs
andl
roll
outsb
lret
push
idiv
movsb
and
leave
gs
outsl
stos
pop
jge
pop
outsl
imul
mov
cmp
aad
cwtl
fisttpll
push
ss
inc
int3
call
nop
xor
inc
lcall
aam
inc
jle
xchg
sbb
daa
xor
fsubs
stos
lahf
mov
enter
jae
dec
lock
movsb
lret
outsb
dec
jg
scas
ficoms
mulb
orb
sbb
adc
stos
out
mov
or
mov
clc
push
mov
in
sub
out
ret
lahf
inc
mov
dec
cmpsl
lahf
xchg
pop
adc
jle
lock
loop
mov
push
inc
inc
mov
fstps
sbb
mov
test
in
call
rclb
aam
into
stos
mov
and
add
push
cmpsl
in
push
add
cmp
test
adc
js
out
jae,pt
out
je
mov
pop
addr16
repz
outsb
cmp
jg
push
mov
ds
mov
into
push
loope
popf
mov
stc
rol
xchg
dec
cli
cmp
int3
cld
jp
shll
and
add
sub
movsb
popa
enter
pop
lea
mov
dec
cli
cmp
fstpt
mov
mov
roll
inc
ret
xchg
or
daa
xchg
sbb
jne
mov
lock
cmp
iret
dec
mov
gs
mov
data16
jmp
mov
lret
jg
lods
stc
ss
testb
fwait
cmp
stos
data16
push
out
out
push
shrl
push
and
roll
gs
and
xchg
cmp
ja
cmp
sub
push
loop
cmp
pop
das
loope
jge
sbb
mov
gs
fistpll
test
jecxz
aam
pop
lahf
jmp
add
sahf
add
insb
mov
xchg
sub
dec
lods
cmp
xor
out
loopne
es
pop
pop
or
sub
stos
jb
pop
adcb
and
or
mov
and
inc
loopne
mov
xchg
imul
jne
and
xchg
hlt
sub
enter
divb
lock
test
jge
add
lock
xor
sbb
repnz
test
mov
aad
out
xchg
add
in
incb
or
dec
mov
shrb
jne
je
pop
imul
pop
lock
fs
fwait
mov
flds
xchg
jo
out
aam
jbe
cmp
pop
inc
inc
movsl
mov
or
scas
ffreep
mov
test
adc
fcompp
negl
cld
push
test
lret
inc
mov
jg
pop
or
pop
sub
xor
mov
pop
rorl
adc
jecxz
pop
mov
cmp
outsb
mov
dec
mov
dec
push
mov
dec
fsubs
int3
arpl
jo
lret
out
je
cwtl
or
int3
into
pop
ljmp
adc
loope
imull
mov
fdiv
mov
and
minps
nop
xchg
andl
push
xlat
sub
xchg
xor
sub
add
negb
pop
les
int
out
imul
fisttps
pop
push
std
test
xor
jecxz
push
in
stc
daa
pop
cmp
lds
orb
sti
pop
ret
ljmp
push
arpl
jb
movsb
lods
notb
and
jae
jb
push
xor
sahf
fs
pop
movsl
jg
and
push
cmp
loope
push
cmpsl
sbb
pop
in
xchg
cli
aaa
push
neg
and
mov
imull
jp
sahf
cmp
leave
repz
jg
leave
or
neg
xor
push
ret
ljmp
dec
hlt
or
inc
adc
dec
mov
loop
ds
sub
andl
adc
leave
fmul
fsubr
pop
lds
jmp
stc
in
sbb
sub
push
mov
mov
cmp
inc
lret
jbe
sub
out
sahf
adc
fidivrs
push
ljmp
arpl
xor
jbe
pop
add
shl
aas
dec
mov
addr16
es
and
aad
and
push
sarl
pop
rolb
jb
cmpsb
xor
mov
pop
xor
aas
sti
xor
adc
xorb
xchg
add
outsl
lahf
lahf
adc
test
adc
lea
mov
in
mov
add
sub
adc
xchg
ret
mov
dec
mov
sbb
jnp
push
sub
sub
xor
lods
jp
into
push
push
clc
push
mov
xchg
bnd
xchg
pop
xchg
adc
pusha
sti
loop,pt
fdivrs
stos
push
sahf
pop
test
add
add
pop
shll
pop
and
sbb
inc
inc
nop
cmp
roll
clc
push
daa
mov
mov
fldcw
ja
js
cmp
push
dec
mov
fistpl
pop
ds
push
std
jp
mov
mov
cld
shr
mov
mov
sub
sahf
daa
xchg
mov
mov
jbe
fs
cli
mov
jb
aaa
mov
fstpt
dec
push
pop
jo
lahf
mov
mov
lret
xlat
dec
adc
mov
mov
push
hlt
cld
xorb
fdivrs
outsl
cmp
icebp
shll
decb
xor
insl
data16
cmp
arpl
cmp
sti
sub
into
xchg
jbe
dec
outsl
pop
add
les
push
xchg
sbb
jnp
arpl
sbb
xchg
jge
dec
fnstcw
pop
in
in
sbb
mov
cmpl
mov
push
xor
add
xlat
mov
push
mov
mov
jecxz
jge
movsb
andl
repz
fstps
js
add
shlb
sbb
xchg
rorb
aam
xchg
cmpsb
in
lock
inc
xor
test
jne
xor
jbe
shll
scas
xchg
test
jmp
mov
add
pop
mov
push
xor
sbb
cmp
int3
xchg
in
xlat
or
fs
adc
push
cmp
leave
ljmp
sbb
inc
icebp
popf
fmuls
push
jo
outsl
mov
push
test
lods
enter
mov
xor
push
fs
js
cmp
pop
adc
ret
adc
ficompl
and
pop
arpl
adc
nop
sahf
in
xor
and
scas
add
loop
jge
pop
scas
xchg
mov
cmpsb
jmp
test
push
xor
dec
push
mov
or
sbb
or
pop
or
int
jecxz
enter
or
add
sti
ret
shrb
add
mov
imul
xchg
addr16
mov
sbbb
pop
add
xor
enter
dec
je
dec
int3
fwait
jg
out
int3
cmpsl
jns
xchg
inc
inc
jnp
xor
jecxz
mov
in
xchg
cmp
jecxz
push
mov
mov
sub
cmpsl
push
jl
test
clc
in
sahf
mov
test
cmpsl
hlt
lods
fcoms
imul
mov
pop
xor
rolb
inc
repnz
lods
jp
xchg
xor
mov
xor
mov
dec
fs
iret
pop
out
add
mov
push
idivl
inc
jbe
cld
mov
or
xchg
stc
es
sbb
popf
inc
test
cmc
cmc
and
pop
dec
pusha
imul
pop
mov
inc
aaa
pusha
dec
pop
add
xchg
mulb
and
and
add
mov
dec
mov
and
std
bound
scas
inc
cmpsb
cmpsb
cmc
xorb
inc
sub
adc
xor
test
out
sub
adc
rol
or
sti
sarb
xor
aaa
loopne
pop
and
sarb
mov
test
pop
adc
testb
fidivl
lock
call
pop
mov
inc
js
pop
xchg
hlt
das
scas
pop
jnp
nop
popl
adc
push
mov
xor
mov
sub
mov
xchg
push
out
add
dec
jg
mov
mov
inc
fidivrs
cmp
pop
mov
popf
lret
fs
xor
daa
sub
cs
and
push
jle
lock
imul
jp
xor
mov
ret
test
or
rcrb
fmul
adc
mov
fs
xor
adc
aad
sbb
rcll
xchg
sbb
cmp
mov
scas
ds
mov
inc
mov
ljmp
hlt
dec
or
mov
mov
pop
pop
pop
loope
xchg
sahf
sbb
ror
cmp
lods
inc
js
js
mov
fcmovnbe
cmp
mov
adc
inc
mov
adc
daa
bound
sub
dec
xchg
add
inc
hlt
lds
pusha
and
fstl
loopne
lods
or
sub
popf
dec
mov
stc
jp
shrl
daa
cmp
hlt
orl
shll
cmpsb
hlt
sub
movsl
xor
dec
repz
push
xchg
jge
or
xchg
loope
orb
push
cwtl
std
into
leave
movsl
lea
mov
into
inc
test
mov
push
mov
nop
lahf
loopne
or
pop
mov
xlat
lret
push
aas
and
cmp
or
jp
icebp
mov
inc
adc
divl
mov
jae
lods
out
mov
xor
lods
jmp
push
adc
pop
arpl
pushf
arpl
mov
inc
push
loopne
add
add
cld
sarl
mov
sub
xchg
inc
in
cmp
add
adc
arpl
dec
sti
or
or
cmp
xor
xchg
xchg
lret
sarl
arpl
cmp
xchg
lcall
mov
aam
and
movsl
or
iret
cmp
imul
cmpsl
mov
cli
call
cmp
cmp
sbb
pusha
movsb
and
cmpsl
lods
push
or
jae
sub
sbb
push
pop
add
mov
cmp
jecxz
ljmp
cmpsb
sti
in
xchg
sub
xchg
xlat
or
jnp
add
xchg
addr16
daa
sbb
fisttps
loopne
mov
add
pop
pop
imul
repnz
mov
add
jmp
popf
push
jo
push
cltd
lcall
enter
cld
xlat
outsb
roll
int
mov
fs
pushw
jb
pushf
mov
mov
int3
xor
out
add
js
lret
int3
push
jle
xlat
sub
adcl
outsl
ljmp
mov
sbb
cmp
mov
xlat
mov
rolb
push
fisubs
scas
aam
test
popf
popw
aad
xchg
push
dec
pop
mov
loopne
sbb
scas
pop
add
rcrb
in
call
mov
sti
sub
and
add
adc
cmc
jbe
xchg
cmp
nop
sub
fisubrs
frstor
scas
stc
inc
sarb
dec
fldz
pop
adc
repnz
push
fs
cli
shlb
inc
dec
movsl
and
dec
adc
lahf
dec
adc
lret
cmp
push
hlt
fidivl
stos
xor
shlb
fiadds
xchg
fstl
mov
repz
rclb
outsl
fsubrl
aas
mov
fisttps
xor
push
stos
ret
popf
das
mov
mov
stc
mov
push
push
js
fcoms
mov
push
mov
inc
clc
int3
adc
movsl
fldl
or
test
adc
stos
pop
mov
jge
xchg
pop
xor
imul
stos
jle
fdiv
sub
add
push
xor
lea
pop
test
cmp
nop
mov
lds
sarl
mov
push
pop
xor
sahf
dec
sti
inc
push
orl
xrelease
pop
add
popf
pop
xor
insb
push
cmpsb
or
je
lea
mov
dec
adc
pop
adc
stos
mov
scas
insb
cli
mov
lret
pusha
cmp
test
cmpsl
inc
sbb
and
cltd
dec
repnz
bound
pop
mov
push
dec
mov
push
lret
dec
jmp
adc
dec
inc
lea
ficoms
jmp
movsb
or
sub
in
cli
cli
scas
jmp
mov
test
sahf
xchg
pop
inc
xor
in
or
mov
mov
mov
or
sbb
push
or
or
lret
push
dec
mov
push
pop
std
adc
clc
rcr
add
fisttps
cs
hlt
daa
or
pop
jo
clc
jecxz
mov
mov
add
pop
out
rcl
xlat
cmp
scas
fwait
iret
cmp
loopne
lret
lahf
mov
mov
add
mov
push
call
stc
xor
test
xchg
test
xchg
xor
push
mov
rorl
mov
in
fcmovne
ret
sbb
add
sbb
push
push
dec
andb
add
or
cmpsb
push
mov
mov
push
cmpsl
xchg
mov
rorb
or
xlat
mov
push
xchg
outsl
dec
leave
cmc
pop
rorl
pop
cmp
push
jne
mov
imul
pop
dec
inc
or
fimull
fstpt
sarb
push
mov
xor
mov
outsl
mov
out
int
out
cmp
xor
mov
popa
sbb
mov
imul
xor
std
sub
mov
mov
call
inc
mov
lea
and
cmp
in
lahf
pop
cmp
jne
jbe
and
out
inc
fxch
cmpsb
or
inc
cmp
push
pop
dec
enter
pop
push
add
js
push
pop
xor
out
stos
jp
mov
sbb
enter
fst
jb
js
les
mov
pop
lret
cmp
popf
pop
ds
into
or
dec
jnp
loope
dec
sbb
pop
sbb
pop
mov
jle
or
add
mov
and
jne
pop
insl
in
sbb
push
insl
mov
push
mov
clc
mov
add
lds
dec
or
cmp
fs
jecxz
mov
and
mov
idiv
cmp
mov
insb
ret
jne
or
jnp
add
rcrl
sbbb
fdivl
dec
adc
xchg
lods
or
sbb
outsl
lahf
xchg
and
xchg
cmp
fcmovnu
scas
int
js
adc
mov
mov
cs
das
cmc
into
jg
test
push
sbb
daa
mul
mov
jnp
fwait
adc
adc
dec
jl
inc
in
or
shll
in
mov
cmp
enter
push
and
sub
movsl
add
mov
ret
pop
test
loop
jnp
fstl
negb
push
xchg
pminub
push
xchg
cld
and
mov
jl
movsl
pop
es
idivl
add
jp
lcall
sub
outsl
mov
xchg
or
fidivl
iret
xor
jle
sbb
jg
movsb
dec
ljmp
mov
sahf
inc
push
xchg
bound
loope
and
push
in
xchg
and
lds
js
aas
sub
or
rcrb
in
pop
ficoms
roll
popa
and
cmp
in
or
pop
faddl
mov
push
popf
mov
icebp
jp
je
adc
gs
push
loop
adc
out
daa
inc
movsb
insb
adc
aas
sbb
rolb
fldcw
pop
mov
fistpll
cwtl
and
ret
pop
push
ja
pusha
mov
sbb
ds
mov
xor
sahf
xor
pop
push
dec
outsl
int3
test
mov
sbb
dec
and
xor
mov
cmp
mov
adc
sbb
xchg
push
addr16
sbb
fcmove
mov
pop
xchg
xchg
sub
adc
pop
jle
je
add
jl
xor
or
in
mov
dec
jns
dec
pop
dec
hlt
lret
jmp
sub
popa
out
addb
inc
mov
ficoms
lock
cmp
in
arpl
movb
leave
rcrb
lcall
in
repnz
mov
sub
or
mov
rorl
aad
adc
inc
fsubl
int3
rcrb
inc
xor
sub
jne
sbb
insb
inc
test
dec
popa
xor
loopne
inc
mov
aaa
mov
ds
es
pop
lea
pop
mov
add
pop
mov
lcall
fcmovnb
xor
push
movsb
mov
sar
xlat
inc
pop
or
icebp
adc
xlat
lss
int
out
jmp
mov
cld
xchg
push
divl
mov
pusha
stos
dec
aam
lds
xchg
shlb
repnz
addr16
push
shll
or
call
inc
cvttps2pi
stc
in
jbe
iret
or
and
fisttpl
mov
in
xchg
iret
shlb
lock
clc
out
pop
arpl
stos
test
arpl
sub
ss
cmpsl
popf
popf
push
adc
xchg
push
sti
ja
dec
sbb
xor
push
out
lcall
sub
lods
loop
pop
mov
pop
cmp
scas
mov
stos
aam
add
inc
push
mov
hlt
mov
jne
loope
cmp
pop
mov
mov
popf
dec
push
in
push
out
loope
repnz
arpl
popa
sbb
ja
jnp
ret
dec
je
fisubs
add
fs
adc
push
outsl
sbb
inc
sbb
out
and
mov
jo
mov
scas
pusha
ret
nop
mov
or
mov
cmp
cli
mov
cmp
test
fimull
and
aad
mov
or
add
sbb
lods
jl
inc
jp
repnz
ret
fisttpll
sub
inc
fdivrp
loopne
icebp
push
stos
mov
ficomps
es
sbbb
data16
sbb
inc
dec
shll
test
lods
mov
add
mov
add
sub
arpl
sub
pop
mov
dec
or
in
xor
fdiv
stc
cmpsl
pop
jle
and
mov
and
xor
addb
dec
xchg
or
push
mov
inc
es
insl
inc
fsts
out
jmp
push
pop
movsl
arpl
divl
loopne
andl
add
hlt
test
test
mov
jmp
lret
xor
push
xchg
push
out
sar
and
das
and
inc
fistl
inc
jae
add
sbb
jg
mov
icebp
cmpb
xor
fidivl
push
shll
shlb
jmp
fwait
cltd
lret
int3
bound
scas
inc
sbbb
pop
repz
repnz
aad
jne
aaa
add
xor
arpl
push
in
or
mov
js
cmp
lcall
mov
mov
ljmp
xor
sar
sub
fisubs
cltd
pop
fcmovb
int
test
sub
mov
cmp
mov
imul
xor
cmpsb
inc
jb
push
xlat
mov
hlt
cmp
mov
add
lock
cmc
or
mov
fsts
jecxz
push
jbe
pop
js
add
fnsave
xchg
mov
mov
ljmp
bound
mov
mov
dec
xor
and
mov
adcl
push
jbe
and
mov
into
cli
jae
sti
mov
push
aaa
rcrl
scas
lds
jmp
stos
ret
je
gs
pop
adc
xchg
flds
mov
mov
jg
jecxz
adc
aas
jecxz
pusha
xor
dec
mov
dec
flds
loope
out
dec
xor
icebp
inc
and
mov
sub
out
or
loop
lahf
push
iret
and
push
repz
in
jb
push
lods
jne
dec
mov
jo
nop
scas
jae
xchg
push
cmp
das
mov
addr16
mov
jge
sub
andl
inc
pop
cmp
cmp
dec
inc
mov
std
arpl
addl
xlat
fs
cmp
call
sub
pop
test
fs
icebp
pop
fcom
cmpb
ficoms
test
nop
jo
cltd
sbb
dec
movsl
sti
aam
cmp
iret
pop
and
aam
inc
mov
sbb
and
cmpsb
dec
and
outsl
push
leave
sub
push
orb
pop
sbb
stos
in
inc
ficompl
adc
push
sub
test
push
int
jp
aam
xchg
xor
out
movsl
shll
mov
lds
sti
xlat
fnstenv
adc
cmpsb
dec
outsl
in
mov
xchg
mov
pop
leave
pop
jae
mov
in
stos
fstps
and
sti
or
lods
lahf
xchg
leave
loopne
mov
pushf
rcr
insb
sahf
sbb
jg
xchg
adc
arpl
lret
dec
out
hlt
xor
leave
mov
pop
js
shrb
mov
inc
add
int
pop
inc
cld
cmp
or
or
jmp
lods
clc
cmp
icebp
int
xor
mov
jecxz
push
and
outsl
aas
inc
add
xchg
adc
sub
stos
inc
mov
and
mov
sub
lods
sub
clc
lds
pusha
out
pop
mov
fildl
push
out
ret
push
repnz
lret
push
sub
jnp
mov
divl
loope
sbb
out
cmp
mov
fnstcw
ds
dec
icebp
pushf
js
adc
lret
lahf
in
cmp
dec
adc
pop
adc
mov
pop
leave
repnz
and
repz
mov
andb
push
aaa
xchg
mov
dec
aaa
in
mov
xor
add
sub
mov
sbb
xchg
mov
push
jg
inc
inc
xchg
test
xchg
fnsave
movsb
mov
or
xorb
addb
sub
int
lret
xlat
xor
mov
fildll
das
ljmp
jbe
fdivrs
sub
sbb
push
into
popf
ljmp
je
mov
out
pop
lea
call
outsl
dec
mov
add
and
imull
das
sbb
xor
nop
leave
dec
pop
ret
lea
xor
and
fidivs
pminub
mov
pop
mov
add
mov
arpl
mov
sahf
push
fdivs
mov
pop
sahf
mov
nop
repnz
ds
sub
xor
mov
cwtl
mov
mov
leave
inc
xor
jl
sbb
xor
out
sarl
inc
and
and
and
ror
lea
fistpll
ljmp
std
push
push
enter
and
and
xchg
cld
hlt
inc
dec
int
push
pop
shll
push
mov
sahf
inc
out
pusha
stos
sbb
mov
daa
push
xchg
test
lea
stos
mov
sarb
xor
mov
add
sub
adc
add
clc
sub
lret
sub
push
lret
inc
sbb
cmp
xchg
jb
mov
cmc
jnp
cmp
ds
ret
jb
adc
nop
dec
sbb
pop
dec
push
cld
push
out
push
jl
mov
xor
and
rol
int
aam
add
add
and
mov
or
add
iret
fcomi
dec
push
fcomi
test
push
sahf
mov
fwait
xchg
int
and
shrb
aam
inc
fwait
je
sbbl
inc
mov
lods
sbb
out
mov
cli
mov
sahf
shl
ds
inc
and
push
or
jbe
int
sub
or
jno
and
lock
sub
mov
int
hlt
sahf
xor
shll
gs
pop
pop
movd
adc
clc
icebp
jo
sbbl
aam
les
stos
lds
ret
test
or
divl
rcr
xchg
cmp
xor
lcall
dec
sub
test
inc
mov
in
xor
adcl
sub
add
inc
imul
iret
andl
xchg
sub
pop
inc
ja
mov
andb
popf
sti
pop
xor
loope
clc
add
mov
js
xchg
add
jmp
lods
rcr
aad
xlat
push
xor
shr
sub
push
inc
sbb
push
mov
ret
xchg
fisubs
mov
sub
cmp
cld
stos
dec
and
and
leave
mov
jae
imul
je
inc
add
dec
mov
jg
adc
fldenv
jmp
push
daa
sbb
pop
pop
cmp
push
mov
dec
sub
push
outsl
fisubrl
push
dec
aad
ficompl
stos
xchg
inc
xchg
imul
insb
shll
dec
jae
into
pop
jae
inc
pop
ret
jp
test
bound
mov
ja
cwtl
dec
int
cmp
cld
xchg
daa
fsubrl
mov
push
push
push
pop
mov
lea
xchg
repz
or
bt
mov
mov
inc
push
xlat
scas
shll
aam
cmp
xchg
cvtdq2ps
xor
inc
into
sbb
inc
es
lcall
aad
mov
pop
dec
imul
jne
or
sub
lea
sbb
adc
lods
or
pop
ret
mov
push
addb
dec
push
repnz
pop
mov
dec
push
jecxz
xchg
dec
dec
mov
or
jge
xchg
icebp
cs
fstpl
mov
push
cmp
jbe
mov
jbe
sbb
rorl
sbb
lock
push
dec
jo
mov
dec
mov
pop
inc
fdivr
or
out
cli
stos
std
in
scas
lret
arpl
mov
inc
in
inc
jb
lock
dec
xor
and
out
xchg
rorb
sbb
lods
push
popa
loopne
fsub
xor
inc
jmp
mov
loope
pop
sahf
nop
in
push
adc
fbld
adc
mov
xchg
push
aas
jns
in
std
jg
sarl
shr
and
mov
push
jg
or
sbb
into
mov
add
ficoml
adc
jbe
test
lods
xchg
or
hlt
mov
iret
and
sarb
in
mov
jnp
cmp
into
lods
add
fwait
inc
gs
scas
cmp
jecxz
pop
xchg
cmp
ret
imul
mov
fdivrl
std
popa
rorl
sbbb
jne
mov
sub
outsl
push
add
push
subl
xor
aaa
mov
jmp
lahf
sub
scas
aas
xchg
dec
or
ret
and
pop
popa
add
jno
test
pusha
scas
pop
in
rcr
pop
fstl
ds
js
sbbb
sarb
and
clc
dec
or
ja
mov
mov
movsb
mov
dec
push
iret
dec
neg
pushf
jp
nop
out
xor
and
jnp
and
sbb
xlat
rcrb
fcmovu
les
jge
popl
cmpsb
or
sbb
jg
pusha
int
or
imul
sbb
dec
cmp
push
insl
fsubs
sbb
into
inc
jmp
inc
push
cmpsb
add
cmpsl
hlt
out
pop
and
pop
add
xorps
lods
paddb
sbb
roll
nopl
or
mov
inc
test
into
cwtl
lahf
mov
add
or
out
push
out
repnz
add
and
mov
mov
xor
inc
outsl
sbb
sbb
js
jmp
sbbb
mov
mov
in
pop
sub
pop
mov
mov
rorl
jmp
sub
mov
sbb
call
imul
insb
fists
pop
test
xchg
xor
mov
inc
inc
insl
and
sub
out
xchg
dec
in
rorb
scas
or
fisubs
enter
int3
stos
mov
xchg
outsl
es
jecxz
dec
xor
or
in
scas
push
aam
mov
jmp
add
hlt
mov
movsb
xchg
pop
mov
dec
pop
rorb
out
dec
sbb
mov
cmp
xchg
in
es
add
sub
cmp
insb
repz
jns
mov
shll
pop
push
test
test
dec
mov
fs
pusha
pop
aas
dec
call
sbb
mull
push
and
dec
push
fmuls
test
jmp
mov
lahf
mov
clc
mov
jo
test
lahf
mov
call
and
sbb
xor
adc
cvtps2pd
xlat
mov
push
mov
pushf
sub
cmp
rcl
fwait
cmp
mov
mov
mov
pop
or
mov
cmc
xor
mov
insl
dec
add
add
push
out
mov
cmp
push
jge
mov
mov
sub
pop
out
stc
cmp
lahf
popf
in
in
loop
ret
xchg
push
cltd
sbb
or
hlt
ljmp
mov
sub
sti
sub
inc
and
mov
out
repnz
mov
dec
out
cmp
sub
jae
icebp
pop
lret
jmp
rorb
jmp
or
roll
lock
mov
in
pop
roll
sub
lret
jge
push
adc
outsb
cli
stos
ret
add
lock
repz
and
sub
rcrl
std
dec
mov
xchg
das
adc
xchg
cmp
xchg
cmp
sbb
std
pop
mov
dec
lods
imul
cmpb
dec
cmp
pop
jb
cmp
cmp
push
nop
or
mov
popa
pop
mov
pop
out
cld
xor
iret
mov
sub
mov
fisubl
push
jmp
jp
dec
push
adc
mov
xchg
cld
and
xor
lods
sbb
jl
adc
sbb
shl
in
lods
mov
aas
faddl
inc
push
subl
ss
sub
and
push
fcomip
sbb
mov
fistl
outsb
mov
mov
into
out
dec
jg
jns
adc
aad
xchg
lock
push
les
cwtl
inc
inc
sbb
xlat
mov
enter
loopne
mov
mov
sbb
bound
or
test
dec
adc
loopne
daa
pop
clc
ljmp
xchg
icebp
fnsave
xchg
xchg
enter
cld
jl
out
sbb
adc
sbb
pop
pop
push
sbb
xor
outsb
movsl
xor
bound
mov
outsl
mov
cmpsb
push
jae
jp
xchg
adc
sub
pop
lret
sti
iret
aam
or
pusha
hlt
stos
dec
into
clc
jmp
mov
sbbb
out
test
lds
and
popf
ret
sub
das
or
jnp
push
fnsave
sbbl
jg
xor
cltd
leave
aam
shl
inc
push
dec
pop
xchg
push
xchg
mov
add
jae
call
es
dec
and
dec
iret
outsb
add
cwtl
and
mov
cmp
ja
out
movl
test
push
jns
inc
push
inc
or
sbb
add
rcrl
cmp
mov
mov
add
mov
and
inc
rcrb
bt
or
cmpsb
dec
cwtl
call
xor
enter
fsubs
es
xchg
jno
dec
jae
repnz
daa
fmul
mov
popf
jl
push
pop
rcll
xor
push
bound
ljmp
imulb
dec
fistps
shlb
into
adc
ds
and
push
not
add
or
jp
fs
cmp
cwtl
out
lods
fmuls
and
mov
cmp
sbb
out
dec
jb
popa
shrb
sub
lods
aaa
int3
mov
pop
jbe
ja
push
loopne
pop
test
mov
adc
xor
outsb
aad
mov
and
hlt
fmuls
ficompl
shll
repz
or
repnz
dec
subb
or
push
pop
sbb
dec
je
add
push
test
push
fstps
loopne
xchg
shufps
inc
fdivrl
js
cwtl
lea
jge
out
xor
sub
mov
inc
mov
cld
jmp
adc
dec
inc
sub
sbb
adc
lods
add
jecxz
mov
or
sbb
jl
mov
stos
mov
push
xor
add
rclb
xchg
repnz
lret
mov
dec
push
pop
pop
and
repnz
sbb
nop
mov
jo
data16
movsl
js
pop
jecxz
aam
sbb
insb
or
dec
fisttpl
or
lret
sub
or
ljmp
nop
jne
sub
bound
mov
imul
push
mov
adc
cmp
jl
jae
xchg
sbb
add
dec
pop
cld
neg
das
push
rcr
scas
dec
aaa
dec
push
mov
mov
icebp
into
mov
mov
mov
cmpsl
jb
div
jbe
int3
les
xchg
lds
add
add
in
and
test
sub
cmpsl
aam
lea
or
xor
nop
xchg
cmp
iret
and
stc
cmp
mov
stos
popf
insb
jno
cmp
int3
adc
data16
xor
xor
out
jecxz
test
inc
xchg
movsb
fs
push
dec
or
imul
dec
repz
pop
sub
aad
scas
in
adc
insl
pop
xor
bound
addr16
cmp
mov
pushf
dec
out
jno
add
sub
mov
aaa
jae
scas
sbb
mov
mov
add
out
das
ds
stos
adc
imul
pop
rclb
or
sub
xchg
cmp
pusha
pop
xchg
cmp
push
push
pushf
inc
hlt
es
out
push
and
inc
aad
aad
popa
mov
jns
push
dec
xor
sbb
leave
cwtl
cmp
pusha
or
sbb
inc
es
pop
ret
sti
sbb
or
adc
inc
or
out
push
pop
pop
mov
adc
testl
ljmp
scas
int3
sbb
cmp
xchg
mov
addr16
ret
ss
ja
push
imul
xchg
mov
pop
mov
xor
shll
jge
mov
sbb
ss
scas
icebp
mov
loopne
sbb
stos
xchg
imul
scas
sbb
inc
addr16
xchg
dec
pop
lcall
fimull
xchg
inc
adc
popa
ja
push
pop
in
cld
cmc
cmp
jbe
jg
cli
idiv
stos
clc
jl
icebp
adcl
or
loopne
jl
stos
aas
jmp
xchg
jle
inc
sub
lock
lods
inc
xor
lcall
sbb
sahf
pushf
test
je
push
mov
xchg
mov
xchg
xchg
and
inc
sbb
test
dec
xlat
sti
adc
ret
push
jbe
mov
shlb
sbb
or
mov
xchg
call
inc
and
add
iret
and
fnstenv
ljmp
pop
push
xchg
inc
mov
adc
inc
outsl
xchg
and
xchg
cmp
mov
adc
frstor
lock
icebp
cld
sbb
jmp
inc
inc
ss
in
mov
cmp
mov
ds
push
pop
into
or
push
cmpsl
roll
add
call
out
mov
imul
ljmp
std
push
test
nop
dec
adc
scas
stos
cmp
mov
sbb
int
mov
mov
jge
stc
sub
mov
rdtsc
sbb
ljmp
cs
addr16
dec
lods
stos
cld
sbb
pop
lods
mov
ficomps
loopne
daa
push
enter
mov
sahf
movsl
sub
push
bswap
sub
mov
sbb
cmp
addr16
loopne
dec
arpl
out
push
sub
dec
insl
test
cmp
cwtl
jb
cmc
jno
mov
test
push
ret
test
inc
cmp
jo
int3
xor
mov
insl
push
out
mov
fwait
subl
lods
sti
push
xchg
aas
int
inc
imul
sbb
adc
out
bound
and
out
adc
xchg
movsl
push
mov
out
sbb
mov
pop
push
rol
or
mov
scas
inc
push
jmp
mov
popa
sub
pop
jns
sahf
xor
lods
daa
test
inc
pop
dec
jne
movsb
je
mov
adc
addb
pushf
movsb
and
fadd
mov
mov
out
call
push
fcom
and
ja
cmpsl
fs
lods
push
aad
repnz
add
cmp
aaa
push
stos
mov
pop
and
cmpsl
fs
test
sbb
jae
je
push
dec
sub
xor
cmpsb
inc
outsl
push
mov
adc
push
ja
push
adc
push
pop
inc
push
leave
dec
arpl
jecxz
jl
jo
lret
out
or
ficoms
cmp
cmp
in
ss
loope
xor
push
arpl
iret
push
iret
stos
rcrl
int
push
rcrb
repnz
mov
adcl
pop
cmp
lods
jmp
popf
pop
idivb
shrb
fcompl
xlat
jbe
adc
cmpsl
jo
pop
or
cmp
and
ret
roll
jnp
jp
cmp
clc
stc
out
pop
popf
movsb
dec
xor
xor
pop
popf
das
sub
or
mov
lods
sbb
movsb
push
int3
sbb
es
decl
imul
sub
shr
mov
sub
movswl
in
in
jns
pop
dec
out
cmp
cmp
jecxz
mov
sub
lcall
mov
aaa
sub
mov
add
fmul
aas
xchg
push
mov
je
xor
lock
les
jb
nop
out
jbe
scas
scas
mov
inc
rcrl
cmc
xor
xchg
pop
sbb
insb
enter
push
push
jo
pop
sbb
in
lods
in
movsb
adc
add
rcll
dec
popa
out
addr16
add
cs
and
in
sub
jae
jae
sahf
push
jo
mov
xor
push
jmp
push
movl
movsl
jp
fmull
rcrl
xchg
sub
stc
loop
jp
mov
jle
fldt
or
mov
and
cwtl
or
cmc
mov
xchg
xchg
fmul
arpl
sub
or
das
inc
call
insl
test
xchg
push
dec
lds
dec
mov
cld
enter
popa
out
filds
fcompl
sub
jo
sbb
push
inc
out
dec
shl
inc
cmp
cmpb
test
xchg
mov
cmpsl
shlb
push
je
fidivrl
rorb
pop
inc
push
cli
jl
aaa
out
xchg
cli
sahf
push
mov
in
pusha
push
sbb
xchg
xlat
mov
loope
ja
test
sbb
pop
jbe
cmpsl
popa
rclb
mov
sbb
pusha
dec
and
mov
je,pt
test
movsb
stc
mov
or
femms
lret
xor
insb
shr
push
mov
lods
insb
jo
and
lea
incb
add
sub
ds
shlb
push
mov
add
in
cmp
aam
jecxz
arpl
push
std
cmp
pop
xchg
dec
push
push
xchg
mov
pop
jg
xor
out
stos
fcomps
faddl
stos
sbb
push
jne
adc
mov
les
aad
cmp
fsubp
popa
inc
inc
inc
in
mov
sti
and
or
dec
mov
insl
in
xchg
repz
dec
inc
add
sbb
sti
out
push
iret
sbb
das
push
adc
sti
xchg
and
mov
dec
aam
push
mov
dec
ds
cs
rcrl
xchg
xor
inc
adc
pop
push
notb
or
pop
stos
dec
fstpl
mov
cmp
mov
les
ud2
adc
adc
mov
cmp
xor
dec
dec
mov
cli
pop
ficoml
shll
xchg
sbb
vmread
aas
lods
xor
fcomp
repz
lock
pop
push
imul
lret
loop
cmp
push
adc
fldcw
ficoms
sbb
xor
sub
inc
add
pop
add
ljmp
dec
cld
dec
mov
mov
test
insb
or
mov
fsubl
or
adc
out
leave
sti
rcrl
lock
add
sub
jo
pop
pop
add
jns
dec
push
pop
aas
add
or
dec
xor
sub
jb
xchg
mov
das
in
lahf
pop
and
icebp
movsb
fnsave
stos
addr16
inc
sub
outsb
out
inc
mov
sbb
cltd
lds
and
lods
xchg
ret
push
insb
out
cmp
cmp
jle
mov
pop
push
jnp
lods
inc
mov
xor
mov
or
cmp
andl
adc
pop
or
or
in
stc
test
test
dec
xor
lock
sbb
fidivrl
dec
addl
sbbb
sbb
push
test
addr16
jae
pop
fldcw
jge
fimuls
ds
iret
nop
push
xchg
lea
inc
pusha
test
addr16
daa
mov
jg
shl
xchg
insl
std
test
cmc
test
imul
add
les
stos
add
notl
and
sub
fstpt
mov
mov
je
popa
push
pusha
in
into
fwait
stos
or
cwtl
js
jecxz
pop
fs
rcll
jae
or
int
mov
and
mov
inc
mov
mov
movsb
out
pushf
out
cli
fwait
jo
jmp
loope
call
test
cli
into
mov
jbe
sub
adcb
mov
adc
push
mov
ret
xor
aad
xor
fistl
mov
daa
inc
cmpl
cmpsb
leave
sbb
push
sbb
clc
add
decb
mov
xor
loop
inc
inc
pop
mov
loope
repnz
mov
cld
stc
fstpt
scas
jbe
leave
push
jecxz
jp
adc
pop
sbb
dec
jmp
repnz
mov
mov
stos
leave
mov
nop
mov
fadd
mov
dec
rolb
dec
and
les
fwait
dec
cs
pop
and
fs
push
or
push
or
and
nop
sub
std
into
sbb
scas
popa
pop
fbld
xchg
sub
cmc
push
add
cmpsl
repz
mov
mov
cld
mov
xchg
mov
xchg
add
cmp
jl
jnp
jb
cmp
push
mov
lods
popl
pop
std
stos
dec
xchg
xor
or
loope
dec
pop
adc
inc
xchg
pushf
pop
stos
subb
jmp
mov
or
sar
repnz
ret
or
add
aad
inc
int
mov
ret
fisubl
test
xor
into
add
sub
arpl
jl
movsl
mov
insl
jmp
cld
xor
sub
shll
into
jnp
sbb
js
and
sbb
outsl
pop
inc
push
std
push
or
push
cmpsb
stos
pop
ror
or
fs
or
cmc
add
jns
push
jo
and
fwait
mov
fwait
pop
scas
mov
pushf
fcmovnbe
sbb
pop
cwtl
and
mov
lds
cld
pop
pop
dec
mov
jl
pushf
sbb
inc
repnz
insb
roll
and
mov
mov
cmp
loop
xlat
arpl
jg
add
hlt
hlt
popa
mov
dec
pop
stc
sub
dec
loope
lret
outsl
movl
cmp
xchg
add
clc
sub
mov
or
sub
test
xchg
add
or
outsb
movsl
adc
iret
fdivrs
mov
mov
jp
xor
xlat
inc
mov
inc
out
sbb
adc
sar
rcrl
mov
mulb
push
outsb
sahf
sub
stc
sbb
push
pop
ss
ja
dec
ljmp
mov
pushf
gs
cmp
jmp
jns
lahf
es
pusha
scas
xor
cld
ss
mulb
ret
stc
js
xchg
xchg
cld
cmp
imul
test
jl
dec
imul
sbb
cld
or
xlat
dec
shr
dec
inc
push
sbbb
or
sbb
jno
pop
mov
jne
cmpsb
scas
inc
ja
arpl
test
sti
xor
rolb
sbb
icebp
cs
inc
jo
jne
push
pop
push
movsl
scas
rcll
jmp
insb
adc
mov
and
xchg
cmc
mov
mov
mov
cli
or
int
subb
int
mov
xor
adc
cmpsl
xor
xor
inc
add
jne
cmp
loope
popa
sub
stos
cmp
sub
jnp
addl
and
int3
xlat
clc
sbb
fsqrt
jo
pop
repnz
test
inc
mov
or
rorl
iret
sahf
xchg
mov
xchg
int3
jge
stos
fbld
enter
int
push
lret
inc
fmull
fnstcw
aam
cmp
icebp
sub
pop
add
cli
pop
and
push
mov
fdivl
bnd
cmp
jge
pop
aas
pop
pop
sahf
shrl
insb
fs
inc
aam
cli
sahf
push
xchg
mov
pop
jge
xor
subl
add
in
shr
push
rcrb
mov
push
jg
stos
clc
xor
dec
adc
sub
sbb
negb
jo
and
imul
adc
dec
movsl
movsl
pop
shlb
dec
jae
lret
popf
push
repnz
mov
xchg
sub
test
scas
int
mov
pushf
rcll
or
mov
push
and
cmpsl
sbb
fs
sub
fnstsw
pop
or
rorb
adc
icebp
sarl
insl
jmp
imul
repnz
out
inc
into
jo
cli
jg
loop
cmp
test
fcmove
mov
int3
iret
lahf
xor
push
lods
jecxz
push
jecxz
sub
jno
scas
sbb
and
outsb
push
xchg
cmpsb
mov
mov
dec
sti
enter
sbb
inc
aad
mov
fmulp
in
or
lahf
rcrb
out
mov
fnstsw
mov
jmp
cmc
xorl
imul
pusha
bound
nop
outsb
push
push
dec
mov
imul
sbb
pop
les
push
inc
push
ret
ficompl
cmp
fwait
cmpsb
sub
mov
aam
push
adc
push
in
xlat
sarl
xchg
add
push
xchg
jle
add
mov
cmpsl
roll
mov
jno
fimuls
pop
add
out
repz
inc
jle
xor
push
insb
leave
push
test
fdiv
out
push
pop
repnz
aad
mov
mov
sbb
adc
cltd
loope
xor
xchg
xchg
in
rclb
imul
mov
aad
sbb
jbe
cmp
xchg
fsts
in
add
into
mov
xchg
xlat
push
les
daa
int
jb
repz
aad
iret
jne
aas
arpl
push
ljmp
lcall
xchg
clc
data16
test
movsb
ds
hlt
arpl
ds
and
aaa
or
sub
adc
push
add
jbe
cli
les
push
push
fnsave
sbb
jg
xchg
sub
pop
cmp
push
pushf
xor
imul
xchg
xchg
mov
cmc
lret
jnp
and
notl
sahf
scas
repz
push
mov
mov
fs
scas
movsl
xchg
mov
cmc
mov
fbld
jbe
fwait
dec
lahf
mov
inc
pop
cmp
xchg
sub
mulps
outsl
or
or
cmp
sti
jp
ficoms
pop
decb
jo
push
std
inc
cmp
cmp
adc
xlat
mov
pusha
pusha
dec
pmulhw
outsl
icebp
mov
sarl
int
imul
sub
xchg
cmp
pop
movsl
mov
jne
and
in
mov
mov
lock
xchg
add
xor
arpl
repnz
inc
mov
das
push
mov
data16
sub
dec
inc
in
mov
scas
mov
dec
rolb
cmc
xchg
stos
in
mov
orl
mov
in
pop
pop
pop
ficoml
cli
push
cmp
jo
cmp
sub
pop
popf
imul
sub
cmpsl
jecxz
cltd
xor
test
jg
scas
xchg
insl
mov
cs
fdivl
cltd
mov
test
ret
fnstenv
sub
movsl
jae
call
add
pop
lcall
sahf
cmc
cmp
push
jb
notb
loope
push
cmpsb
dec
dec
je
sbb
bnd
fldt
xor
clc
mov
add
lcall
je
out
insl
imul
adc
iret
cltd
cmc
sub
xchg
jo
jmp
mov
jnp
divl
sbb
mov
aas
pop
andl
enter
mov
test
xchg
pop
daa
or
and
rclb
dec
xchg
dec
imul
lock
xchg
dec
sub
push
add
cmp
fsubl
icebp
insl
jecxz
jg
jp
dec
fstp
cmp
enter
aam
sub
and
loop
pushf
pusha
dec
inc
ret
xorl
push
adc
inc
or
xor
sub
dec
inc
out
divl
xchg
pop
lahf
repnz
lea
adc
in
mov
ret
push
push
mov
xor
mov
push
lret
repz
test
push
nop
loop
mov
sbb
mov
mov
clc
sub
imul
enter
fildl
out
orl
pop
in
jne
jecxz
push
sub
addr16
shlb
popf
or
xlat
call
loope
lret
out
adc
push
xor
cmp
cmpsb
test
mov
sbb
loop
add
jae
es
sub
dec
push
ds
ja
push
fs
mov
mov
js
mov
rclb
mov
cmp
scas
aam
int3
aaa
sub
pop
push
aas
sbb
mov
leave
push
xchg
add
inc
cld
jne
jmp
lea
iret
cmp
stc
mov
les
push
sbb
jne
outsl
fs
adc
cmp
mov
mov
xchg
loopne,pn
cmpsl
fsubs
xor
sub
dec
sbb
rcr
into
jl
xor
out
js
sbb
jo
idivb
lcall
sub
or
std
jecxz
jecxz
sahf
mov
mov
xor
outsb
xchg
mov
pop
aaa
xor
mov
lahf
je
inc
dec
jl
pop
adc
cmp
rcr
lods
cmp
addb
push
or
scas
aaa
lcall
xor
sub
f2xm1
inc
cltd
in
add
inc
outsl
fnstcw
dec
inc
add
lcall
pushf
sub
xor
lret
outsb
lret
mov
inc
les
jns
push
test
add
clc
jb
push
and
fdivp
je
cmp
je
jb
push
mov
mov
jg
push
ss
sarb
nop
popa
test
adc
ljmp
repz
outsb
jno
out
popa
fidivrs
das
xor
cmpsl
sub
pop
and
xchg
sub
in
add
cmp
testl
stos
insl
cmp
push
lods
addr16
ss
testb
call
fs
push
mov
lret
outsl
jns
sarb
popa
fadds
fmuls
movsb
adc
cmp
sub
lods
jo
fildl
mov
jns
test
jg
mov
dec
mov
outsb
arpl
or
pop
mov
jg
shr
jae
jg
cltd
jae
mov
mov
push
pop
adc
cwtl
jge
jae
cmp
stos
lods
sbb
fs
sbb
cld
sub
ret
sbb
imul
cwtl
add
notb
shll
out
cmpsb
sub
push
les
jecxz
fwait
insb
dec
in
fimuls
push
and
negb
imul
nop
and
xchg
push
push
inc
popf
mov
lods
xor
stos
or
fs
inc
das
into
dec
mov
test
sub
stos
xor
pop
subb
je
mov
daa
and
lods
add
je
mov
sahf
syscall
sti
xor
and
in
mov
add
adc
sub
ficomps
cltd
sbb
pop
in
mov
or
cmp
inc
test
imul
movsb
xchg
imul
mov
rcr
inc
lock
repnz
jno
pop
jmp
add
fmull
shll
cmpsb
xor
xchg
xor
push
push
mov
sbb
inc
arpl
mov
idivb
cmp
sti
repnz
arpl
mov
push
test
pop
outsb
inc
pop
test
addr16
mov
je
xor
xor
es
imul
imull
push
mov
in
jae
push
pop
lahf
adc
jnp
pop
jnp
std
jle
xchg
mov
jmp
cmp
push
dec
add
std
in
cli
rol
or
shr
or
outsl
daa
and
sbb
mov
repz
icebp
aam
imul
xchg
das
sahf
pop
mov
cmp
inc
and
cmpsl
and
xor
movsb
jg
sbb
out
fildll
mov
or
ljmp
sbb
loopne
sahf
mov
pusha
inc
aaa
fsubrl
or
pop
movsl
mov
push
mov
pop
negb
jno
pop
arpl
aam
ficoms
mov
lods
and
shrl
ja
enter
std
sub
pop
int3
mov
xor
stc
xchg
jne
pop
aaa
fwait
mov
mov
dec
das
push
push
lcall
in
mov
icebp
sub
js
xor
stos
cmp
xchg
xor
xchg
aad
lods
adc
int
mov
xchg
fldl
stos
scas
push
sub
aad
fisttpl
mov
jmp
sub
sbb
xor
dec
imul
mov
lret
jbe
xchg
jle
jge
add
movsb
add
and
out
jmp
fdivs
daa
xor
pop
adc
shr
call
mov
test
sub
inc
imul
jbe
clc
adc
jno
pop
xor
mov
je
sbb
mov
or
or
out
pop
jnp
and
out
xor
icebp
imul
inc
imulb
or
leave
loopne
sahf
pop
or
cmp
or
jecxz
jns
pop
and
fwait
mov
lods
mov
dec
movsb
push
mov
in
mov
pop
inc
lock
out
bound
xchg
in
insb
jns
dec
outsb
inc
std
cmpsb
pusha
loope
ja
inc
and
roll
aam
clc
pop
jg
insb
pop
clc
sbb
push
fcompl
lock
pop
mov
dec
mov
imul
ret
pop
xchg
dec
push
sbb
fildl
sub
mov
das
cmp
xchg
outsl
sbb
xchg
sbb
mov
mov
loop
jb
movsl
or
hlt
fisttpll
loopne
cwtl
mov
xchg
sahf
inc
dec
fiaddl
in
sub
cmp
mov
arpl
int3
push
insl
movl
movsl
sbb
jmp
ljmp
adc
out
mov
sbb
jno
mov
addps
inc
out
and
pop
gs
out
fdivs
test
in
in
inc
or
mov
dec
mov
jp
mov
pusha
fucom
shr
mov
fildl
ja
cmpsb
adc
jno
xorl
bound
sbb
subb
xchg
jae
jg
mov
insl
mov
fs
xor
je
aaa
mov
dec
or
sarb
push
out
fisubl
aaa
ds
sbb
in
mov
mov
icebp
jo
das
gs
cmovno
int3
fistpl
adc
add
inc
nop
or
faddl
loop
rep
dec
rcr
fcmovnu
cwtl
popa
cwtl
mov
or
xor
fwait
adc
or
add
test
pop
xor
dec
lods
data16
pusha
jecxz
lds
enter
repnz
mov
pop
out
xor
add
xor
sbb
fadds
xor
fimuls
stos
fisubrs
sbb
push
dec
adcb
push
jmp
sub
lods
fidivrl
divb
js
scas
sarb
inc
std
ljmp
and
or
out
and
mov
add
daa
xor
fwait
mov
nop
xchg
cs
int3
cmpsl
or
xchg
lret
and
xor
les
adc
inc
mov
test
fsubs
insl
pop
loope
add
xchg
cmc
icebp
dec
leave
arpl
decb
psrlw
xlat
inc
call
dec
ljmp
and
imul
pop
cmp
push
mov
pop
mov
sbb
sbb
ljmp
jle
mov
and
repz
ret
and
xchg
adc
in
je
in
xchg
movsb
fucompp
in
mov
fwait
ss
mov
add
sbb
or
out
movsb
jle
adc
jp
dec
stos
fstps
call
add
pushf
sbb
fstps
notl
and
push
aad
pop
sarl
ret
in
push
cmpsl
adc
lods
shrb
mov
nop
push
cmp
or
out
sti
and
add
cmpsl
movsb
push
xchg
rcr
inc
cmp
adc
xor
jecxz
gs
pushf
mov
adc
sti
or
aas
add
scas
push
xchg
mov
ds
sahf
pop
sbb
adc
and
cmp
fxtract
push
js
ret
cmp
mov
mov
sbb
cli
push
push
sahf
push
call
es
divb
push
mov
push
add
add
mov
pop
adc
mov
adc
pusha
outsb
ja
aaa
cmp
lret
jns
cwtl
dec
lcall
sbb
test
pushf
ds
imul
js
scas
sbb
addl
jbe
into
cmp
jo
ds
lcall
push
popfw
loop
push
lret
mov
test
jp
mov
pop
jns
test
and
aam
adc
inc
pop
push
aaa
lret
push
and
aaa
dec
sbb
mov
movsl
incb
fwait
movsl
faddl
daa
daa
ficoml
jae
addr16
add
push
stos
xor
push
int3
lret
in
push
je
add
lods
out
popa
cmc
out
icebp
adc
data16
sbb
xlat
pop
lcall
sbb
lea
mov
sbb
xchg
cmp
xchg
jo,pt
or
pop
test
sbb
dec
data16
mov
xor
xor
mov
add
push
cmpsl
push
mov
data16
imul
cld
ds
out
movsb
dec
lods
cmp
mov
push
shlb
sub
xor
mov
jmp
aad
mov
adc
call
movsl
daa
fmuls
mov
dec
cwtl
xchg
aam
pop
push
mov
enter
mov
imul
lods
call
adc
or
or
ficomps
ljmp
out
sbb
mov
push
testb
adc
pop
frstor
add
enter
nop
testb
cmpsb
add
jmp
cs
fwait
jno
jb
adc
mov
add
stc
cli
push
and
nop
cmp
leave
and
and
cmpsl
arpl
push
and
jle
adcl
push
imul
dec
dec
mov
cmc
addr16
push
add
ljmp
mov
test
xor
sbb
outsb
ljmp
aaa
sub
mov
and
cmp
and
pop
adc
cmp
setb
adc
mov
jmp
add
outsl
mov
xchg
das
and
mov
xorl
or
insl
roll
jne
dec
mov
sub
push
clc
and
mov
cmp
push
push
js
mov
stos
fs
cwtl
divl
sub
adc
addr16
icebp
lods
je
xor
loopne
and
pusha
inc
pop
pop
mov
push
xchg
jne
xchg
scas
mov
shrb
repnz
dec
xor
push
outsl
adc
sbb
lods
sbb
dec
insl
ret
clc
lea
decl
xchg
jmp
jmp
jp
xchg
xchg
pushf
cmp
int
pusha
xchg
add
jae
repz
mov
negl
in
js
or
loop
xor
mov
mov
lds
sub
test
lret
test
jb
fs
cmp
cmpsl
xchg
push
aaa
cmpsb
out
xor
movsl
enter
or
dec
ret
adc
fistpl
mov
je
imul
adc
inc
adc
pop
and
ljmp
in
mov
jge
cmpsb
push
push
mov
clc
cmp
jle
lds
mov
mov
dec
sti
or
int3
jmp
jno
inc
adc
in
sbb
jl
and
sub
cltd
movsb
ret
cmpsl
es
daa
push
fs
lea
mov
mov
push
ficompl
shl
mov
mov
add
mov
insb
xchg
stos
adc
jge
inc
cmp
leave
or
enter
xchg
scas
out
icebp
movups
bound
mov
les
sarl
add
out
ret
mov
xchg
rcrb
cmp
lds
and
stc
add
out
xlat
xchg
iret
inc
jns
shlb
inc
and
jns
push
xchg
das
and
jb
cld
sub
js
cmp
repz
jecxz,pt
pop
mov
cli
iret
nop
in
fidivl
lods
arpl
sbb
pop
stos
push
gs
ljmp
int3
mov
sub
mov
ljmp
xchg
dec
test
or
jne
lock
pop
leave
cmp
fistl
push
or
cmp
in
cmp
push
mul
leave
mov
pop
push
sub
or
loope
aam
mov
mov
faddl
xchg
cmp
fmuls
jb
jno
movsl
xor
lret
dec
sub
add
mov
enter
jbe
pushf
pop
mov
in
movsb
mov
notl
jecxz
fiaddl
cmpsb
mov
mov
add
push
lret
jo
xchg
push
lret
mov
imul
mov
lds
push
jnp
imul
imul
dec
nop
clc
pushf
lret
adcl
adc
mov
loope
int3
cwtl
out
mov
xchg
xchg
call
lahf
mov
sbb
or
aaa
jmp
cwtl
call
push
cld
xor
cltd
cmpsb
inc
or
stc
inc
mov
outsl
imul
les
xchg
ljmp
inc
hlt
cmc
cmp
lahf
cmp
mov
cmpsl
test
dec
clc
call
jne
bound
movsb
loope
imul
jne
push
pop
mov
into
jno
mov
pop
jbe
mov
add
ds
lret
sbb
and
sbb
pop
mov
push
jle
adc
test
adc
fldt
sbb
aam
inc
add
jecxz
inc
jle
fisttpl
je
mov
pop
lcall
mov
adc
adc
in
shl
in
pop
jp
sub
sbb
pop
dec
jnp
mov
xlat
lcall
cmp
xor
sbb
decb
out
inc
and
xchg
and
dec
adc
push
jno
pushf
push
popf
xchg
pop
data16
jecxz
cltd
stos
add
lahf
cmp
ja
pop
gs
or
in
xlat
in
repz
iret
cmpsb
mov
mov
cmp
xorb
leave
shlb
inc
jg
jae
dec
inc
push
cmp
and
rorb
addr16
xchg
push
jns
mov
jg
stos
pop
jp
add
sub
jo
daa
sarl
lret
popa
sub
lcall
aam
lea
ret
out
xor
add
push
mov
push
or
cld
mov
inc
loopne
sub
pushf
popl
cmp
mov
inc
jo
ret
repnz
sbb
fimuls
cmp
push
stos
push
in
or
nop
loope
adc
add
les
jecxz
dec
pop
cs
mul
adc
fdiv
inc
dec
add
pop
aad
out
and
lret
sub
cwtl
mov
sbb
ljmp
clc
push
iret
cmp
sub
js
pop
push
in
or
jp
popa
mov
pop
pop
lret
movsl
hlt
cli
jbe
test
mov
nop
into
stos
leave
fsubl
jbe
xor
dec
xchg
jecxz
xchg
xor
cltd
addr16
pushf
pop
das
fsubl
jbe
adc
dec
pop
inc
repz
sbb
lea
cmp
mov
in
jno
aaa
cld
sub
cmp
xchg
jge
or
mov
push
jno
lret
lds
jecxz
xchg
dec
pop
push
dec
ja
shl
lock
mov
call
xlat
lds
lea
xchg
gs
scas
pop
movsl
adc
sbb
sbb
sub
jne
xchg
lods
xchg
jp
ret
and
jae
lods
out
rorl
outsb
rcll
scas
xor
or
cltd
or
mov
out
gs
loope
and
fisubs
jmp
jp
push
cmc
int
pop
mov
stos
mov
jp
cltd
mov
cmp
or
adc
jno
or
xor
inc
fcmovnb
cmp
inc
sbb
out
mov
adc
nop
pop
enter
inc
test
jns
movsb
sub
insl
mov
sbb
dec
and
jb
mov
pop
or
mov
xor
inc
xorb
lcall
sub
jo
lds
push
mov
gs
ljmp
xor
or
sbb
mov
push
cmp
adc
dec
repnz
and
popl
test
inc
and
sbb
out
xchg
lods
aad
add
add
clc
std
cmc
ss
aad
mov
inc
inc
push
rolb
aas
aas
lret
mov
xchg
std
pop
dec
and
sbb
add
lods
icebp
imul
push
es
movsb
testb
das
sub
add
jg
das
es
mov
push
shlb
push
cmpsb
pop
mov
sub
sub
popf
pop
cmp
clc
sahf
pop
fnstsw
andl
sub
jp
add
rol
xchg
fadd
pop
xchg
pop
les
scas
stos
addl
mov
test
xor
pop
xchg
xchg
xlat
or
push
jle
sbb
cs
xchg
jns
or
inc
pop
and
aaa
add
and
push
ret
mov
shl
hlt
cmpsl
jno
ret
cmc
cmp
pusha
in
mov
mov
mov
orl
cmp
push
cs
xchg
adc
jb
xlat
das
sbb
fisttpl
dec
push
repnz
aad
negb
fdivrs
push
fdivl
or
cmp
test
mov
mov
dec
jge
les
mov
or
and
push
lret
pop
cmpsl
xchg
cmp
mov
add
push
movsl
dec
inc
push
scas
add
mov
cmp
enter
or
xlat
mov
push
outsl
ret
mov
cltd
jle
pop
dec
jb
insl
jle
sub
sub
xor
lods
out
push
int
imul
call
jle
push
mov
jb
mov
adc
sahf
or
imul
xchg
push
xchg
cmp
aad
stc
xchg
lock
or
mov
dec
jg
and
dec
add
clc
adc
inc
aad
mov
or
jae
aad
inc
lret
aaa
adc
push
mov
xor
sbb
call
mov
jno
imul
mov
gs
mov
andb
insb
sub
mov
push
cli
hlt
pop
xor
cmp
ja
jnp
insb
sti
call
pop
data16
out
lret
js
ds
iret
push
gs
lcall
cmp
mov
scas
sub
ja
ja
dec
pop
xchg
push
out
cli
mov
pop
cs
add
hlt
leave
je
or
adc
stc
push
pop
jecxz
mov
dec
int
jge
or
mov
je
imul
cltd
cmp
lock
sub
xor
pop
inc
xchg
jo
ljmp
inc
xor
notb
sahf
jae
out
nop
jo
es
mov
dec
mull
cli
inc
pop
push
xor
cwtl
jl
lods
sbb
mov
in
and
es
xchg
xlat
shlb
fwait
loop
xchg
sti
je
jbe
loop
jle
enter
cld
stc
push
push
pop
sub
pop
pop
insb
les
dec
arpl
adc
scas
repnz
add
popf
push
add
cwtl
push
mov
hlt
jp
cwtl
popa
imul
xor
and
or
push
sarb
lahf
ret
pop
xchg
sbb
loop
sete
mov
mov
adc
fs
std
fxch
jmp
add
sarb
push
jns
push
jp
ja
xor
jmp
mov
push
loopne
jle
pop
xchg
fcompl
jle
lret
aas
push
adc
aam
adc
test
loope
addr16
pop
pop
xchg
hlt
push
inc
add
push
inc
jbe
icebp
repz
pop
fisubs
xor
scas
pop
in
shr
push
mov
cmpsl
xchg
cli
rcll
lret
das
repnz
jo
adc
out
lret
push
and
lret
data16
lds
loopne
pop
into
dec
rorb
call
cmpl
cmc
lcall
jmp
cli
fcompl
push
in
push
paddsb
fildl
inc
xchg
xor
and
test
hlt
mov
popa
pop
add
cli
in
adc
pushf
ucomiss
mov
scas
pushf
inc
xchg
imul
cmpsb
filds
cli
mov
ror
out
sub
lds
out
loope
mov
pop
outsl
xor
into
and
cmp
jno
pop
testl
cmpsb
and
fxtract
cmc
or
mov
jg
mov
rcl
sbb
enter
sbb
lds
cmc
out
jbe
push
test
lcall
in
mov
xchg
push
push
mov
mov
ret
pushf
push
out
sub
push
ror
ret
leave
mov
jnp
imull
cmp
fldenv
mov
dec
hlt
cmp
mov
das
test
cltd
mov
lods
shr
mov
or
add
and
orb
in
ret
test
ficompl
push
lret
dec
aad
sbb
lcall
fbld
and
mov
sbb
sarl
dec
or
imul
xor
stc
add
inc
into
loopne
in
mov
stos
and
xor
ficomps
mov
sti
out
inc
gs
test
sub
mov
inc
adc
ljmp
sbb
or
jge
rol
mov
add
mov
in
mov
adc
ljmp
dec
cmpsb
mov
mov
fdivl
jl
test
xchg
fs
subb
or
sbbl
divb
leave
adcl
fisttpll
cmpsl
shlb
lock
lret
cli
cmpsb
jp
add
mov
ja
lret
lds
adc
cmp
imul
imul
fimuls
jbe
shlb
mov
jbe
lcall
pop
xchg
dec
rol
xlat
fxam
mul
leave
lret
imul
mov
push
or
popa
push
out
mov
mov
ljmp
pop
xchg
pop
cmp
ror
aaa
xchg
jmp
mov
adc
adc
orb
sbb
int
xchg
xor
and
loope
les
dec
mov
or
out
in
dec
nop
test
mov
add
or
mov
lcall
inc
or
mov
in
lds
or
stc
inc
hlt
cltd
icebp
fistl
ja
test
cmp
test
sarb
mov
cmc
shlb
mov
xor
push
pop
stos
mov
out
out
clc
mov
pop
inc
repz
mov
test
test
aas
std
xor
mov
daa
cmp
pop
enter
cmpsb
rcrb
jne
cmc
daa
out
into
jg
subb
pop
clc
loop
sub
lods
rcrb
jbe
insb
dec
inc
xor
push
shrb
fistl
rclb
xor
fs
mov
movsl
or
leave
cmpsl
ret
xor
fdivrs
mov
ret
cmpsl
ss
xchg
cmpsb
std
xor
sbb
xor
int
pop
hlt
aas
aad
gs
aas
mov
enter
mov
addl
cmp
pop
mov
cmp
shlb
sbb
aas
or
in
pop
xchg
fcmovne
and
adc
sbb
les
ja
xchg
sub
dec
jle
jns
or
dec
mov
dec
mov
leave
cld
cmp
pop
inc
cmp
lods
gs
adc
cmc
jne
push
jae
pop
xor
in
sbb
inc
nop
dec
xchg
pop
and
jp
push
push
popa
push
xchg
hlt
cmpsb
dec
jbe
pop
lea
incl
xchg
ja
mov
in
aaa
and
cwtl
ss
mov
xchg
mov
jmp
lods
out
pop
add
test
mov
mov
lods
mov
jbe
adc
sbb
lahf
icebp
sbb
inc
push
sub
test
inc
pushf
enter
scas
sub
enter
mov
inc
and
mov
and
pop
mov
aad
mov
sti
jmp
mov
fdiv
mov
adcb
or
inc
inc
leave
gs
ss
cmp
jecxz
cs
icebp
cvtps2pd
mov
mov
cltd
fcom
inc
adc
push
rolb
mov
test
fmull
daa
xor
sub
dec
aaa
add
inc
xchg
push
mov
xor
mov
repnz
leave
jg
cli
or
mov
int
sbb
les
dec
mov
pop
mov
lahf
repz
out
or
sti
ja
out
ljmp
pop
push
add
pop
imul
cmc
call
addr16
xchg
and
test
mov
jl
sbb
sbb
and
xor
fucomi
icebp
test
bound
and
shrl
insl
pop
sbb
mov
sbb
push
mov
cmc
loop
in
sti
or
cmp
jnp
lret
and
sbb
inc
leave
push
sub
jmp
aam
or
xchg
in
icebp
andl
xor
test
xchg
aaa
fs
incl
rorl
stos
loope
jl
aam
jge
ds
push
imul
cli
pop
adc
jecxz
xchg
add
add
cmp
test
and
popf
push
out
or
lds
xchg
fldt
cs
cmpsl
jmp
mov
loop
pop
mov
in
addl
xor
xchg
push
add
mov
jns
in
xlat
jns
popf
ret
dec
insl
aaa
popa
ss
andl
mov
jno
sub
pop
or
mov
mov
sahf
adc
jnp
stos
fsubrp
xchg
and
fistpl
sbb
imul
xor
mov
xor
cmp
or
rclb
call
inc
nop
add
and
sbb
loopne
inc
mov
jmp
ficompl
push
jg
stos
fcmove
inc
pop
add
cli
rcll
jecxz
lahf
xchg
mov
xchg
std
loope
xor
int
xor
lcall
int3
pop
in
test
mov
shll
scas
int
aas
lret
sarb
cmp
pop
mov
mov
lea
jmp
lret
push
pop
rcrl
lahf
add
lret
xchg
sahf
cmc
out
mov
cltd
lods
aas
or
std
adc
mov
pop
mov
fsubr
insb
xlat
push
jo
aam
inc
xor
shr
in
sbb
or
adc
js
cmc
jmp
repnz
dec
xchg
xor
push
mov
loope
sub
add
pop
test
scas
icebp
sti
inc
or
jae
push
cmpsb
jb
lock
mov
mov
lret
sbb
mov
mov
dec
shrl
or
add
sub
push
xor
mov
dec
aad
inc
xchg
xchg
popf
stc
mov
shrb
pop
and
fsubs
push
rcll
sahf
mov
mov
jecxz
cmpsb
rclb
popa
call
icebp
stos
lret
xchg
mov
fnstsw
in
fidivl
jbe
in
bound
cli
fstl
ja
popf
ljmp
test
bound
repnz
cmpsb
out
xchg
fidivrs
push
adc
rcl
pop
mov
cmpsl
xlat
sbb
popf
xchg
lods
lods
mov
mov
jbe
ret
pushf
fisubs
out
cmpsw
imul
jle
push
pop
aaa
cmp
inc
incb
push
cmp
xchg
push
imul
outsl
or
sbb
sub
sti
jg
clc
mov
fdivr
insl
mov
lcall
or
push
sbb
push
sub
jnp
dec
mov
mov
push
in
dec
or
loope
insl
stos
js
add
std
pop
insl
loope
hlt
cmp
fldl
inc
xchg
lahf
xlat
mov
in
scas
fbstp
sahf
fucomip
ja
inc
sti
scas
hlt
mov
cmp
cld
mov
jl
lcall
mov
mov
mov
inc
mov
jmp
sub
pusha
loope
mov
sub
es
imul
into
mov
call
cli
mov
hlt
dec
cmp
jb
fsubl
fidivs
push
pop
popa
bound
xchg
sub
popa
xchg
xlat
dec
pusha
mov
fwait
cmpsl
lcall
sbb
hlt
in
outsb
adc
lock
cmp
out
stos
pop
ss
addl
add
xor
test
and
iret
dec
sahf
outsb
movsl
and
adc
xor
jp
xor
mov
outsl
repz
lahf
lock
add
testl
dec
sub
lcall
or
ret
dec
fnstenv
push
fs
iret
mov
mulb
jecxz
add
lcall
imul
std
in
dec
sysexit
and
hlt
jmp
inc
outsb
lods
movsb
jecxz
adc
cmpsl
cmp
inc
int3
sbb
add
cs
adc
fnstsw
jb
or
out
ficompl
inc
cwtl
pop
xor
mov
inc
movb
hlt
sub
adc
inc
add
pop
rclb
xchg
mov
cmp
jne
mov
sbb
scas
fidivs
pop
pop
jg
insb
loop
add
mov
fistpl
addb
lret
sbb
xchg
xchg
lcall
loopne
fmul
mov
cmp
movsb
sti
repnz
out
pop
and
pusha
fmull
mov
add
jno
add
sbb
add
inc
cmp
aad
ljmp
push
subb
into
pushf
add
into
stc
ficomps
xor
push
in
sarl
les
push
fnstsw
or
fidivs
ss
adc
fidivrl
into
fwait
das
out
pop
xchg
and
movsl
fnstsw
je
inc
xor
adc
xchg
mov
push
mov
out
xor
jne
and
daa
push
jp
cmp
roll
das
or
loope
mov
loopne
and
fidivrs
gs
int3
insl
mov
adc
sti
jns
scas
or
mov
out
flds
mov
pop
pop
repnz
xor
jo
jb
scas
mov
divl
mov
fadds
call
outsl
gs
mov
in
popa
mov
pop
xchg
das
mov
addr16
cmp
cwtl
inc
fidivl
in
sub
lahf
xchg
xor
movsb
out
lds
dec
shlb
mov
cmp
pop
hlt
inc
out
icebp
cmpb
xchg
mov
iret
in
sub
cld
mov
push
sub
pushf
addr16
inc
out
push
mov
sbb
arpl
mov
jg
dec
insb
imul
gs
pop
mov
mov
nop
rep
dec
divl
in
xchg
cmpsb
jp
dec
jne
das
mov
xchg
cmc
int3
inc
fisttpl
add
mov
into
lock
mov
inc
xor
xchg
out
mov
fsubr
sti
aaa
mov
stos
into
or
push
sbb
sub
lret
sbb
int3
push
mov
mov
push
in
comiss
fld
jle
adc
cmpsb
imul
cmp
sub
push
or
incl
fsts
mov
dec
popf
outsl
adc
push
add
orb
stos
shlb
daa
repz
imul
adc
ret
enter
out
push
sarb
ss
cmp
mov
pushf
arpl
fistl
push
out
mov
testb
adc
insl
ja
pop
cmpsb
insb
mov
out
push
dec
inc
lods
mov
push
repnz
fisttpll
mov
xchg
lds
pusha
icebp
fistpl
pop
jnp
xchg
icebp
push
fadd
aam
fisubs
mov
mov
dec
pop
dec
clc
scas
lret
scas
mov
popf
mov
sub
repz
lods
inc
imul
add
popf
aas
out
mov
fwait
and
fldt
or
mov
and
dec
icebp
adc
lret
notl
fnstenv
inc
ror
dec
mov
mov
lret
out
adc
lods
add
stos
sbb
and
icebp
fs
stos
jo
inc
mov
arpl
test
pop
or
incl
xchg
movsb
test
mov
pop
es
fstp
pop
inc
xchg
xor
xor
pusha
adc
sarl
and
adc
fidivs
sti
xchg
adcl
adc
fstpl
pop
bnd
loop
add
mov
or
dec
xchg
ds
hlt
mov
shlb
out
xor
neg
push
xchg
out
arpl
xchg
out
mov
xor
cli
mov
imul
test
sub
sbbl
and
push
sub
or
fsubrl
xchg
stos
data16
jmp
cs
inc
mov
mov
jp
popf
inc
std
insl
ficoms
push
xchg
iret
pop
addl
sbb
cwtl
sarl
scas
jae
xchg
shll
sbb
jo
mov
cltd
in
cld
mov
shlb
dec
fadds
xchg
fldl
mov
loop
cmc
push
xchg
add
jecxz
rcrl
sub
pop
lock
mov
fisubs
mov
imul
jmp
test
dec
es
inc
mov
in
icebp
xor
mov
add
jne
sub
in
sub
lahf
imulb
mov
test
fstpl
std
mov
out
mov
push
dec
stc
cmp
pop
mov
inc
rcrb
imul
or
sbb
cmp
add
gs
push
outsl
divb
cld
aam
xchg
in
out
jne
mov
add
and
or
bnd
sti
xchg
or
pop
sbb
loopne
add
push
inc
clc
adc
sahf
add
in
mov
adc
aas
int3
pushf
scas
scas
test
sbb
js
push
adc
cld
mov
rolb
enter
and
mov
addl
in
push
aad
mov
mov
fcomps
sub
in
sub
js
call
lret
xchg
mov
add
sbb
push
icebp
enter
push
sub
out
or
fiaddl
clc
out
fistpl
shlb
repnz
jo
dec
imul
popa
cmp
mov
xor
in
pop
dec
inc
adc
push
repz
mov
cwtl
pushf
mov
clc
leave
sbb
pop
dec
pop
cmpl
lcall
jnp
mov
out
cmpsb
xor
arpl
lock
add
or
cwtl
aad
dec
sub
push
dec
cli
lret
xchg
xor
or
sbb
push
ficoms
lds
and
add
fiaddl
dec
pop
push
and
out
test
mov
addr16
les
mov
and
adc
jne
movsl
shlb
stc
ret
and
in
xor
mov
jle
mov
xor
cmp
xor
push
adc
pop
inc
pop
leave
jp
sbb
fistpl
inc
ss
cmp
push
out
pop
pushf
mov
hlt
test
outsl
dec
sub
jecxz
sbb
es
imul
or
and
sbb
mov
lds
or
dec
arpl
mov
dec
shrl
pop
sbb
xchg
sahf
cmp
push
not
sti
aaa
loop
push
inc
xchg
mov
cmp
cmpsl
int3
mov
mov
cmpsb
outsl
ljmp
jg
sbb
dec
imul
fidivs
rcll
inc
test
mov
imul
sub
pop
ret
cmp
lock
stos
aad
dec
xor
push
xor
add
push
cmp
add
enter
test
jns
sbb
das
je
aam
cmp
jmp
es
and
daa
fdivp
loopne
std
rclb
stc
push
es
arpl
ss
push
and
xchg
outsb
mov
jl
daa
xor
sub
jmp
popa
sub
fnstcw
sub
add
xor
push
push
adc
xchg
xchg
push
jnp
pop
clc
insb
dec
ficoms
cld
nop
aaa
stc
sahf
in
in
ret
mov
sbb
int
js
iret
add
ror
add
dec
jl
jmp
clc
mov
iret
jg
mov
mov
fs
lcall
div
aaa
popl
pusha
fisubl
jl
lea
popa
xor
or
cld
out
xchg
popa
cmp
iret
mov
xor
sub
loop
pop
out
push
push
sahf
dec
add
adc
outsb
xchg
xor
mov
dec
arpl
inc
or
cli
pop
stos
xor
repz
sbb
xchg
push
rorl
aad
pop
iret
cmpsb
sti
adc
daa
or
sbbb
lds
cmp
std
pop
leave
js
pop
outsb
int3
pop
cltd
ds
xor
adc
push
outsb
cwtl
dec
mov
cmp
pop
std
sub
mov
int
shlb
fsubrl
nop
dec
aas
dec
adc
decb
mov
test
cmpsl
push
adc
arpl
adc
xor
mov
adc
xor
sti
clc
mov
lea
cld
xchg
std
in
jbe
xchg
std
frstor
mov
and
or
out
mov
mov
lods
rorl
out
push
jg
in
imul
xor
movsb
cmpsl
push
cwtl
and
pop
cmp
and
aam
dec
or
mov
jp
jne
fcompl
add
loop
pop
add
sarb
or
movsl
dec
fwait
sub
and
js
iret
mov
cmp
push
inc
insb
negl
iret
xchg
fadds
xchg
xor
or
imul
sar
aam
mov
std
push
cmpsb
ljmp
adc
pop
jge
xchg
lock
movsb
push
xor
xor
xchg
mov
iret
mov
xlat
sbb
dec
jb
and
inc
add
je
sahf
fucomp
jae
pop
and
loope
mov
sbb
sbb
xor
je
es
ljmp
insb
xchg
add
out
je
stos
push
es
mov
jmp
sub
in
and
jl
pop
movsl
adc
xchg
cmp
popl
mov
ret
sti
cmc
mov
mov
addr16
iret
dec
sub
adc
or
xchg
add
jecxz
sarl
ljmp
ja
xchg
dec
aas
xor
xchg
cmp
notl
dec
push
mov
cld
pop
sbb
movsw
aaa
fdivrs
dec
cmp
stos
jp
test
or
popa
inc
or
push
jbe
xlat
jecxz
clc
lret
add
jnp
movsb
mov
movsl
push
lcall
movsl
ret
mov
mov
imul
or
pushf
ds
sub
cwtl
push
push
fmull
aaa
mov
jb
pop
sub
fidivs
pop
movsb
mov
xchg
sbbl
inc
cli
pop
sahf
pop
sub
insl
ds
mov
fimull
es
lcall
mov
sub
test
mov
dec
aas
scas
dec
jl
sub
shl
jg
das
dec
push
sub
push
mov
sub
fstpl
and
adc
mov
dec
loope
js
ds
pop
jnp
pop
cmp
movsl
fdivr
xor
inc
mov
jl
mov
movl
in
push
xchg
mov
mov
aas
xor
stos
sub
insl
mov
fidivrs
jg
out
repnz
cltd
cltd
aad
loop
push
int3
sbb
jg
sbb
addl
jb
and
aaa
les
fldcw
lea
enter
mov
mov
cld
sbb
sahf
pop
jmp
mov
in
jge
cwtl
push
std
xor
negl
lret
jno
push
in
mov
sub
cmp
into
xchg
loopne
les
cmp
fimull
mov
mov
sahf
fisttpl
mov
push
lock
jle
push
ret
js
or
push
lds
shr
mov
or
fbld
mov
loope
jb
rorl
adc
push
push
cwtl
bnd
jp
imul
jecxz
jo
lea
or
dec
jle
pushf
nop
insb
xchg
mov
repz
or
mov
pop
pop
mov
cmpsb
cmpsl
xchg
jno
pop
popf
popa
addb
adc
xchg
fidivl
xchg
jae
or
mov
outsb
mov
cmpsb
push
clc
pusha
in
jmp
jnp
std
out
pop
andb
xchg
nop
inc
cmpsb
adc
xor
cmp
fmull
mov
dec
xor
lock
cs
cmc
mov
pop
ljmp
mov
pop
add
nop
jae
xor
push
or
or
sub
outsb
and
xchg
mov
inc
inc
loope
sub
mov
pop
ljmp
and
dec
add
and
iret
sbbl
lretw
add
or
shrl
flds
lds
sbb
inc
xchg
and
cld
sub
popf
ret
cmp
pop
sar
or
push
adc
inc
int
mov
decl
mov
cmc
fwait
cmpsl
es
cmp
out
add
sbb
out
pop
mov
jl
hlt
xor
dec
fnstcw
dec
push
int3
push
daa
addr16
outsl
sahf
adc
mov
mov
test
push
mov
and
add
outsl
fildll
in
ja
lcall
pop
jecxz
dec
add
adc
push
add
div
popa
sbb
xor
jbe
mov
inc
push
and
push
aaa
loopne
insb
or
add
scas
paddusw
js
mov
sbb
and
mov
cmp
and
or
icebp
mov
mov
outsl
jbe
scas
lret
stc
popf
or
xchg
mov
sub
xor
lret
and
je
repnz
jnp
pushl
mov
stos
data16
gs
push
lret
dec
or
mov
lods
jnp
enter
adc
les
jnp
xchg
inc
mov
push
inc
iret
sti
mov
inc
in
cmc
push
sbb
fmuls
jns
mov
clc
or
mov
jns
xor
inc
cmpsl
pusha
sub
jl
push
cmc
mov
cs
filds
in
xchg
dec
mov
cmp
jmp
lret
fwait
or
mov
dec
lea
inc
addr16
add
mov
decb
out
ljmp
sub
cmp
xorl
fmuls
add
sahf
bound
or
xor
or
adc
xor
lret
push
or
sti
sub
push
mov
pop
sbbl
fwait
dec
lahf
push
add
fisttps
int
jo
sub
add
xchg
and
push
les
mov
pop
lahf
ret
ficoms
jns
dec
clc
xchg
mov
pop
push
test
mov
test
add
lret
je
sbb
jb
cmp
mov
xlat
jmp
pop
pop
push
mov
mov
mov
popf
out
fsub
sbb
jge
popf
cmp
test
movsl
xor
ljmp
add
and
outsl
xlat
movsl
or
jne
xchg
movsb
cmp
mov
pop
pop
inc
pusha
dec
test
mov
sahf
insb
movsb
aas
cmpl
or
cmpsb
jno
mov
fnstsw
fwait
outsl
rorb
ret
mov
sub
orl
adc
dec
cmc
add
push
rcl
divl
lcall
adc
pop
mov
add
xor
pop
fcmovbe
test
jae
jo
divb
jp
cmc
aas
imul
ss
jno
jl
mov
stos
xchg
jmp
into
add
mov
or
loope
inc
xchg
push
jne
pop
fld1
pop
inc
test
or
add
sbb
sbb
ret
pop
jae
mov
outsb
outsl
mov
idivb
lahf
xlat
insl
sbbb
adc
sbb
ja
jmp
scas
sahf
inc
inc
xchg
jno
jg
outsb
in
sbb
outsl
push
cmp
sub
loop
push
or
lds
dec
jo
jmp
std
test
das
adc
insl
out
cltd
adc
mov
sub
dec
xchg
lods
adc
mov
push
cmp
aas
cmc
or
outsb
in
lods
pop
outsb
icebp
repz
adc
pop
xlat
inc
cmp
pop
mov
pushf
lock
sub
mov
xorl
sub
xor
repz
dec
push
jge
notb
ljmp
enter
insb
insb
xchg
mov
add
push
fwait
cld
mov
sub
imul
aam
mov
xchg
icebp
pop
leave
sbb
outsl
push
aaa
adc
inc
mov
mov
push
and
nop
shrl
sbb
xchg
je
add
dec
pushf
adc
ss
dec
test
es
shl
mov
fucomp
rcr
mov
aam
mov
out
xlat
xchg
imull
cmp
push
test
lcall
jg,pt
fists
fistl
jns
out
xor
dec
shrb
shlb
inc
mov
xor
call
jge
push
hlt
pop
cmp
cmp
fucomip
les
into
pop
scas
cmp
sar
pop
xor
or
mov
test
sbb
jo
mov
jae
push
scas
aad
fsubrs
dec
xor
jmp
cmp
push
sub
inc
fs
int
popf
inc
mov
and
jp
mov
inc
push
fwait
cmp
cmp
cmp
fstp
fucomi
leave
ds
nop
sub
adc
sbb
mov
nop
pop
adc
rcrb
aam
or
rclb
sbb
jge
lret
sbb
sbb
cmpsb
popa
push
ret
dec
jl
push
roll
adc
mov
cmp
out
xor
xchg
fs
dec
or
cld
dec
xchg
or
fsts
inc
adc
mov
pop
cmc
cmp
cpuid
push
js
mov
dec
sub
adc
fdivs
jb
adc
mov
inc
ljmp
xor
jle
adc
mov
and
dec
test
out
mov
sbb
das
sbbb
mov
jbe
sbb
push
cmp
ret
roll
dec
cs
stc
sub
imul
cmp
cmp
movsl
sbb
cli
incb
dec
xor
dec
rcrb
mov
inc
fs
cld
cmpsb
push
std
or
outsl
addr16
stos
and
adc
dec
sub
jecxz
add
gs
sub
sub
mov
loopne
push
or
dec
mov
mov
out
jle
pusha
adc
shll
inc
inc
push
xor
jecxz
push
loope
addr16
xchg
in
rclb
cmp
inc
jg
test
cwtl
push
aam
test
ja
loope
mul
sub
pushf
push
or
pushf
call
add
xchg
bound
push
xor
sub
mov
out
mov
add
fimull
and
cmp
out
lods
and
ror
cli
pop
jb
push
movsb
movsl
shrb
das
mov
push
push
dec
repz
push
js
sti
and
jl
or
pop
sub
in
xchg
leave
lcall
jbe
sbb
mov
flds
lret
int
sbbb
loop
fsubp
mov
sub
mov
outsl
mov
pop
pusha
push
cmp
out
mov
jmp
cs
sub
aas
test
fimuls
daa
push
inc
mov
test
adc
in
ret
mov
pop
addl
inc
ja
or
adc
gs
les
mov
jo
das
pop
dec
into
pop
notl
push
out
sub
mov
pushf
adc
leave
adc
fildl
mov
pop
movsl
mov
in
jg
dec
mov
xchg
mov
sbb
mov
sub
adc
and
xchg
mov
push
mov
loopne
or
out
jb
sahf
cmpsb
jle
insb
mov
fildll
in
add
sbb
mov
pushf
or
or
fistpll
mov
mov
sahf
stos
push
adc
out
fwait
sti
mov
dec
jns
stc
loop
inc
insl
push
dec
cmp
and
pop
cli
cld
mov
and
aam
sbb
in
shlb
dec
sbb
cltd
shlb
test
mov
cmp
adc
lods
enter
leave
inc
test
ret
out
or
out
sahf
or
sub
xor
inc
shrb
xchg
stos
out
push
and
in
pop
ljmp
mov
mov
add
ficoml
pop
pop
je
adc
jbe
lret
adc
jbe
fdivl
dec
js
and
push
mov
imul
mov
mov
ficomps
in
sub
out
sbb
les
and
in
dec
icebp
pop
xchg
mov
or
push
jmp
add
jl
inc
daa
adc
inc
pop
popa
enter
jbe
fwait
shll
cmp
push
icebp
arpl
cwtl
enter
xor
mov
pop
stos
adc
out
sub
cli
xor
rol
or
push
cmp
scas
sbb
xor
pop
xchg
loope
or
lcall
stos
and
fmuls
mov
mov
sti
push
xor
adc
int3
outsl
mov
or
and
jne
inc
inc
sbb
cmpsl
lea
cmp
mov
shl
and
dec
cmpsl
insb
data16
pop
dec
inc
mov
and
in
cli
push
lock
testl
fdiv
sar
or
fldcw
ret
sbb
ja
jnp
pushf
pop
and
or
add
fs
inc
mov
lret
add
add
mov
jnp
push
push
sub
mov
mov
int
mov
jl
jbe
or
repnz
lret
inc
ja
adc
ljmp
aas
out
or
jns
nop
or
outsb
or
push
xchg
loop
fbstp
repz
in
outsb
dec
push
repz
fcoms
push
or
adc
pop
lock
adc
cmp
xor
fcomps
jb
inc
and
inc
ss
sbbb
inc
in
rorb
fs
and
into
pusha
xor
mov
fidivs
pop
jecxz
shlw
cmp
notl
rolb
ljmp
cmp
leave
xor
fdivs
cs
mov
int3
aas
dec
dec
idiv
int
pop
or
sbb
arpl
pop
lods
push
adc
dec
sbb
sbb
in
out
adc
mov
add
xor
mov
dec
xor
and
and
icebp
loop
fsubr
outsl
mov
adc
jg
push
sahf
mov
mov
jbe
dec
sbbl
xor
fistpll
repz
jp
testb
in
cwtl
mov
addl
and
mov
mov
push
cmp
mov
push
add
xchg
sub
subl
js
or
pop
sbb
popl
fmuls
add
subb
sbb
fs
ds
mov
std
cmp
movsb
sub
xor
mov
imul
mov
fdivrs
xchg
sub
std
jbe
lock
ds
sbb
xor
inc
mov
add
push
pop
jns
pusha
adc
add
shll
loope
and
lock
lea
jo
mov
out
nop
int3
iret
nop
add
sbb
out
movsl
push
insl
and
mov
cmp
and
pop
push
jle
test
out
mov
test
out
vmread
out
shl
jmp
push
mov
vunpckhpd
inc
sbb
in
arpl
inc
sbb
dec
pop
mov
mov
or
jnp
cltd
js
sar
adc
fcmovne
inc
jl
scas
test
pop
shrl
mov
insl
adc
xor
lea
ss
and
jg
data16
iret
mov
lahf
sub
adc
scas
faddl
lods
mov
arpl
movsb
or
sahf
adc
cmp
daa
push
jnp
adc
jmp
stos
cmpsb
ljmp
mul
mov
pop
xor
mov
icebp
shrb
mov
ja
push
cmc
insl
sbb
les
mov
xchg
cs
popa
cmc
sub
out
mov
out
xchg
pop
les
adc
ljmp
xlat
pop
int
movsb
stos
mov
test
rcll
cs
lret
adc
arpl
fwait
cmp
in
jge
sbb
fists
rcl
or
jle
inc
jle
sbb
cmp
or
cmpsl
xor
inc
xorl
mov
jge
mov
ret
sbb
movl
out
push
mov
mov
or
aaa
sub
jg
cmpsb
dec
aas
jle
out
or
push
out
push
mov
mov
cmp
sub
xchg
add
inc
gs
mov
cltd
scas
rcll
sub
mov
dec
jmp
popa
rcll
pop
das
lock
fs
popf
dec
call
jle
leave
jl
and
sahf
or
cmp
into
mov
adc
inc
sbb
cmpsb
jo
bsr
shr
rcl
stc
dec
cmp
xor
aas
imul
lds
sar
adc
lea
xor
adc
pop
icebp
sub
sbb
scas
ret
ss
enter
data16
xchg
nop
cmc
cltd
cmp
sub
mov
pop
sub
mov
pop
jns
fdivr
xor
insl
dec
inc
inc
sub
sbb
incb
das
dec
cmpsl
lret
dec
out
mov
outsl
ds
test
inc
pop
mov
std
cmpsl
mov
icebp
je
out
out
mov
sub
movsb
lahf
pop
bound
push
push
imul
xor
adc
pop
adc
rcl
sub
ret
cs
cmp
das
add
iret
mov
pop
scas
jmp
incb
sbbb
test
mov
adc
aaa
pop
lcall
push
push
rclb
or
cmpsl
aam
enter
dec
xor
fisubs
sub
lret
stos
lret
inc
jb
sbb
xchg
cmp
mov
jl
mov
or
cmp
xchg
cmp
mov
sub
or
pop
and
xchg
mov
sbb
add
popa
pop
lret
dec
cltd
loop
xor
aam
push
test
mov
and
shrb
pop
ret
je
pusha
loop
jns
jge
fwait
dec
or
aam
dec
ja
incb
xor
xor
outsb
and
xchg
rclb
fimuls
cmc
jle
scas
cwtl
mov
adc
test
call
fnstcw
mov
adc
cli
adcl
jmp
out
mov
popa
sbb
das
int3
sub
mov
mov
mov
lds
mov
xchg
stos
aas
movsl
fimull
push
loope
pusha
pop
xchg
sbb
dec
xor
rclb
and
mov
cmpl
and
stos
pop
xchg
jmp
xlat
dec
jbe
stc
mov
shll
mov
int3
arpl
test
push
mov
inc
push
xlat
and
add
addr16
sar
adc
data16
inc
cmp
aas
xchg
repnz
dec
das
dec
lcall
push
adc
push
in
loope
sbb
dec
push
sub
xchg
loopne
call
adc
sbb
dec
leave
xor
outsl
loopne
in
lds
jno
mov
mov
mov
movsl
add
addr16
lea
outsb
pop
out
mov
ret
inc
or
test
xchg
jae
fldenv
imul
or
aad
mov
rsqrtps
ret
test
mov
mov
dec
and
jle
aaa
dec
push
cmp
loopne
or
jge
pop
push
cwtl
and
push
cmp
sti
repnz
sub
xchg
je
xor
loopne
jae
push
xor
sbbl
or
jb
out
fildll
stc
sub
jb
fdiv
sbb
repnz
inc
mov
call
cmp
iret
or
aas
aam
xchg
jo
dec
sub
sbb
jge
or
cmp
inc
push
mov
clc
xor
shl
xor
push
sub
nop
cmc
xor
repnz
aaa
ret
mov
adc
pop
lods
fists
push
add
popa
xor
adc
lods
jle
rcr
or
push
and
adc
or
cmp
sti
lea
push
out
cltd
add
in
jge
out
jb
jno
xchg
ficoms
pop
push
xor
xorb
loope
cmpsb
or
mov
mov
push
outsb
clc
popf
aad
aam
arpl
ja
adc
push
aad
push
and
sub
hlt
mov
test
xor
lret
inc
pop
cmpxchg
mov
add
push
xor
test
jl
mov
inc
cmp
mov
imul
xor
jl
adc
fisubrl
xchg
shrb
or
push
stc
mov
and
pop
push
dec
jp
ss
jns
lods
mov
movsl
mov
int3
or
push
cmp
mov
push
sub
jl
int
iret
ja
pop
sbb
clc
mov
fnsave
mov
ret
pusha
adc
mov
in
push
jnp
outsb
mov
jecxz
lods
cmp
insl
mov
inc
xor
rorl
cmp
cs
es
xor
arpl
leave
xchg
mov
into
mov
repz
movsl
cs
adc
fcmovbe
lahf
xchg
pop
xchg
jo
repnz
hlt
or
or
mov
dec
std
sbb
fbld
repz
repz
mov
mov
or
into
sbb
clc
jno
mov
sbb
minps
mov
mov
mov
sub
mov
std
les
dec
pop
inc
pop
jb
sub
cmovge
inc
push
cwtl
cmpsb
inc
adc
dec
jo
aas
arpl
ja
lcall
fwait
jp
js
mov
xor
aas
jmp
mov
mov
xchg
aad
shr
fldcw
push
inc
lcall
test
aam
out
push
je
movsb
jns
mov
out
jno
pushf
mov
cmp
in
hlt
or
int3
sahf
test
sbb
mov
out
mov
xor
lret
or
cmpsb
enter
mov
push
sti
mov
aad
ficoml
push
cmpsb
les
addr16
out
subb
in
nop
es
sub
pop
dec
jno
sub
and
jle
jo
or
pop
dec
or
and
dec
push
sub
test
push
cmpsb
jmp
pop
adc
xchg
scas
test
mov
sub
bound
xor
adc
lcall
adc
push
xchg
mov
pop
mov
cli
xor
daa
imul
push
ljmp
mov
cmp
je
lds
in
gs
cmpsl
pop
adc
stos
test
out
sub
shrb
rcll
stos
push
gs
jnp
test
xchg
stos
mov
out
sbb
test
ret
fistps
jle
sbb
sti
dec
xor
push
pop
fwait
int
dec
mov
shll
dec
pusha
sbbl
mov
lock
add
jmp
stos
xor
inc
stc
xor
pop
mov
add
sub
sub
mov
dec
shl
mov
jle
inc
cmp
lds
mov
dec
sbb
xlat
outsl
mov
out
clc
cli
std
test
pop
test
stos
pusha
sbb
mov
outsl
bound
test
jg
or
arpl
sub
jne
push
das
jbe
testb
lret
adc
in
fsub
jl
push
loop
out
scas
lcall
ret
mov
mov
sub
dec
fistl
sbb
mov
mov
shrb
cmp
in
cmc
sahf
shlb
imul
mov
movsb
pop
mov
js
add
jne
inc
mov
shl
inc
leave
lods
inc
aaa
jp
test
xchg
fsub
ds
dec
add
dec
pop
out
cli
add
add
jne
insl
jge
iret
notb
arpl
add
test
stos
sti
xor
lcall
pop
cmp
cltd
outsl
jecxz
or
pop
jno
lods
loope
lcall
inc
xchg
shl
leave
inc
mov
popf
popf
test
fwait
rolb
xor
jae
lock
shrl
push
inc
hlt
dec
lods
jns
sub
and
out
test
popf
jno
inc
lea
insl
in
mov
cltd
dec
movl
repz
mov
or
sarb
jmp
and
or
or
inc
mov
lcall
fsubrp
push
out
cmp
dec
push
jge
js
out
in
mov
cltd
xor
xor
push
dec
idivl
dec
test
out
and
aad
sbb
das
int3
cmp
icebp
test
lock
lds
sahf
xchg
mov
push
or
or
cmp
outsb
xor
inc
dec
pop
or
gs
fldcw
scas
cmp
dec
addr16
fidivrs
mov
and
sbb
lret
les
xchg
cmc
imul
leave
out
push
inc
in
inc
sub
scas
orb
orb
bound
subl
test
scas
in
cli
arpl
lcall
cwtl
adc
std
cld
subb
xor
lods
and
mov
mov
xor
les
cli
and
es
push
js
test
push
ds
shll
gs
push
incl
ret
and
leave
push
sarl
out
mov
mov
mov
ror
jg
sbb
sbb
adc
fsubs
nopl
adc
imul
stos
adc
iret
es
add
sbb
aas
mov
pop
pop
adc
push
mov
mov
dec
insb
sahf
int3
notb
ret
int
test
mov
lods
sbb
ljmp
sub
push
mov
mov
jp
pop
jnp
xchg
lahf
jp
movsl
insl
ficompl
mov
push
int3
sbb
xor
jp
pop
shl
enter
sbb
mov
sub
sub
test
addr16
dec
pop
dec
gs
es
popf
sbb
insb
cmp
mov
mov
inc
adc
sbb
mov
out
jp
fildll
popa
sbb
inc
dec
lret
mov
loope
test
imul
and
push
lods
js
mov
imul
mov
addr16
xchg
pop
pop
loope
cld
cltd
aas
fs
cmp
les
mov
jge
xchg
in
andl
mov
pop
mov
cwtl
sub
push
push
xor
out
sbb
out
sbb
xchg
ja
or
lock
xlat
lds
lods
jae
es
mov
fisubrl
mov
shlb
je
fnstcw
fists
vpcomw
sysret
pop
and
xchg
mov
pop
xor
aam
cwtl
subb
xor
jb
pop
mov
ss
clc
pop
ja
jbe
fucomp
test
add
pop
shl
insb
aaa
jbe
fcomps
cmp
cmpsl
mov
cmc
mov
cwtl
lahf
std
adc
mov
inc
loopne
ds
adc
jle
cld
xor
lret
movb
push
ret
sub
inc
sarl
jo
and
cmp
fxch
mov
xorl
lcall
xchg
adc
xor
push
cmp
pusha
sbb
imul
pop
push
fwait
lds
inc
mov
scas
and
jmp
mov
int
mov
mov
mov
mov
mov
or
xchg
mov
mov
xchg
or
adc
mov
mov
repnz
pop
jo
cmp
add
mov
aam
push
aas
jno
and
or
xlat
hlt
icebp
jge
xchg
pop
xchg
xor
lds
outsb
jecxz
lods
dec
xor
mov
outsl
popf
out
rclb
pop
sahf
scas
test
test
mov
xchg
mov
xchg
les
insl
or
sub
cmc
and
loope
loopne
push
mov
sbb
daa
mov
lods
loop
push
loop
add
je
cmp
pushf
out
or
mov
in
pop
jnp
lea
mov
xchg
fwait
adc
xchg
xchg
dec
ror
and
dec
fistpl
insb
and
mov
dec
repnz
adc
xchg
push
mov
test
adc
cmpl
mov
imull
dec
out
faddl
and
fimull
xor
cmpl
jb
shrl
pop
mov
jb
das
adc
insl
sub
shrb
inc
sub
cmp
repz
jmp
dec
int3
pop
jle
ret
xchg
sbb
mov
jmp
jb
ret
mov
xor
aam
push
fwait
paddsw
stc
test
cmpb
jecxz
sbb
aaa
jno
push
addr16
jb
or
jp
hlt
jb
pop
lods
in
jmp
jle
push
dec
mov
divb
inc
es
cmc
cmp
pop
pop
mov
fdiv
sub
call
lods
push
jno
adc
pop
movsl
adc
in
icebp
out
jg
pop
ret
add
sbb
xchg
jecxz
lea
push
in
stos
cmp
sub
mov
test
xor
fs
movsl
xchg
jns
in
mov
cmc
mov
and
cmp
dec
clc
sub
mov
cli
push
push
pop
outsb
or
pop
cmpsl
jnp
std
aam
cmp
push
mov
adc
out
cmp
add
push
lock
aas
add
rcll
mov
push
pushf
push
push
xor
lea
sbb
jnp
ret
xchg
outsb
cmp
imul
mov
or
add
cmp
inc
subb
data16
ud1
push
sub
out
outsb
stos
mov
loopne
ds
ja
rcl
fimuls
shrb
adc
cmpb
aad
push
dec
nop
push
cmp
jge
ljmp
icebp
inc
gs
mov
lret
xor
lret
mov
rolb
ror
test
data16
loope
add
jnp
loop
xor
movsb
lahf
push
adc
push
es
icebp
jle
xchg
fdivs
xchg
or
add
adc
cmp
arpl
push
leave
xchg
jl
repz
sahf
stos
sahf
xor
fdivp
sbb
movsb
add
mov
fdivl
xlat
popf
mov
dec
add
inc
add
fbld
jo
push
pop
pop
int
xchg
sahf
popa
fildll
xor
xchg
sub
in
xchg
or
ficoms
insb
in
and
insl
push
in
push
mov
iret
shrl
rcll
call
mov
mov
xor
jg
inc
xor
push
or
cmp
jecxz
sub
mov
clc
cwtl
sarb
shrl
xchg
outsb
inc
cltd
popf
sbb
dec
or
or
and
stos
add
clc
and
push
and
out
lahf
repz
jle
mov
cmp
adc
lods
mov
pushf
xchg
mov
xor
dec
test
rorl
xor
xchg
jbe
lret
outsb
jmp
addl
fs
inc
jnp
inc
xor
std
leave
or
inc
mov
add
xchg
mov
mov
jns
rolb
out
in
popf
andb
sbb
push
movsb
daa
or
push
mov
jne
out
mov
jno
add
pop
ja
dec
sbb
jno
xor
xor
dec
sbb
insl
sbb
pop
pop
in
inc
inc
lcall
mov
mov
in
mov
mov
std
flds
rsqrtps
jge
cwtl
jb
pop
jnp
jne
scas
sub
cmp
inc
push
xor
subl
mov
jg
rolb
fstpt
mov
outsb
cmp
or
xchg
imul
mov
lret
dec
inc
and
rol
push
xlat
stos
stos
sarl
mov
mov
mov
cmpl
mov
inc
jbe
adc
and
rcll
dec
and
push
cmp
jno
add
lds
fnstcw
addb
leave
xor
cmp
sbb
dec
xchg
inc
adc
cmp
cld
imul
bound
inc
push
jb
push
sbb
mov
sbb
lret
dec
adc
push
xorb
inc
sarb
js
mov
push
jae
sbb
repz
insb
mov
dec
mov
clc
clc
scas
xchg
mov
push
scas
xchg
cwtl
sbb
jo
jae
or
or
imul
sti
sub
hlt
test
loop
inc
push
fidivs
les
sub
push
sbb
lea
pop
cmc
mov
aad
cmpsb
popa
fcompl
push
sub
sahf
xchg
das
mov
test
dec
mov
rcll
mov
dec
jg
aad
pop
out
and
loop
jmp
je
push
inc
movsb
xchg
push
dec
idivb
test
lret
fcmove
sub
dec
mov
rclb
ja
xor
push
or
fs
movb
scas
cmp
mov
xchg
fstp
add
inc
xor
mov
sbb
imull
dec
mov
jae
fcmovu
imul
or
sbb
push
sbbb
call
les
mov
xor
outsl
fmull
mov
cli
out
adc
cmp
sbb
addr16
fcomi
enter
mov
dec
clc
mov
sub
mov
adc
push
scas
push
mov
xor
lods
pop
or
pusha
mov
sti
xor
pop
rcrl
mov
in
cmpsb
inc
xchg
mull
push
aaa
das
loopne
shrb
dec
cld
jns
push
adc
mov
cmpsb
pop
insl
pop
lcall
sbb
and
mov
cmp
add
mov
aad
mov
imul
outsb
or
mov
imul
jl
out
jg
bswap
and
sbb
inc
dec
cmp
es
fsubs
gs
sbb
iret
clc
pop
stos
and
inc
pop
mov
pop
js
and
bound
pop
test
pop
add
mov
rcr
neg
or
jne
lcall
sub
stc
jns
rcl
popf
scas
lcall
xchg
and
iret
test
insl
xchg
sub
inc
inc
test
fisubrl
daa
adc
jl
add
xchg
aas
sbb
jnp
insl
xchg
dec
mov
in
insl
dec
dec
dec
stc
xor
mov
scas
dec
jb
sbb
int3
sbb
rolb
stos
cmpsb
out
enter
icebp
mov
xchg
push
sub
xchg
mov
cmp
popf
int
nop
or
jmp
mov
mov
sbb
idivl
push
push
cwtl
imul
inc
push
mov
xlat
cmp
andl
pop
test
into
das
stc
mov
loop
cmp
xchg
fsubl
stc
js
mov
aas
repz
sahf
rorb
mov
xor
mov
js
mov
ljmp
nop
mov
out
push
or
or
push
push
imul
cmpsb
in
clc
dec
dec
les
out
mov
stos
add
cld
adc
in
cmpsb
scas
insl
jmp
and
xor
ret
xor
lret
dec
xchg
cwtl
stos
jp
push
ret
clc
fmul
cmpsl
push
sarb
jno
xlat
ss
call
divb
dec
in
jl
pop
cmc
add
xor
scas
stos
ficomps
test
cmp
xchg
jnp
ret
mov
negb
jo
lahf
in
cmp
dec
jb
jno
dec
and
inc
and
mov
push
cli
or
push
push
or
mov
in
pop
mov
cmpsb
lock
mov
dec
xorl
lret
lahf
and
pop
inc
and
pop
iret
xor
rcrl
cs
pusha
pop
les
jecxz
or
lods
lahf
jae
add
test
test
popf
mov
sbb
push
mov
push
jno
jne
insb
sbb
push
dec
mov
jae
jne
cmp
cld
in
es
hlt
repz
mov
mov
pop
fidivs
or
ret
inc
les
jb
call
pop
insb
adc
fadds
push
cmp
jle
aam
arpl
fbld
xlat
pop
test
mov
jp
jb
dec
push
lods
fdivrl
lret
loopne
sub
imul
addr16
mov
dec
shrl
test
push
push
or
xchg
test
nop
inc
jns
xchg
add
and
notl
jae
sbb
ja
scas
mov
inc
ss
mov
adc
dec
dec
shlb
jp
jbe
cltd
movsb
shll
xchg
in
xchg
cmpsb
cmpsb
mov
or
les
lock
or
lahf
int
fbstp
push
lods
fwait
sbbb
push
mov
pop
mov
jae
inc
notb
movl
lods
nop
mov
ja
xchg
in
mov
mov
cmpsb
add
iret
es
jecxz
imul
repz
inc
xchg
insl
insl
in
cmp
xchg
out
fsubrl
inc
push
mov
adcb
orl
outsb
cmp
mov
adc
xchg
xor
pop
stos
das
sub
mov
lods
and
mov
enter
inc
ss
js
ljmp
xchg
scas
mov
dec
xchg
dec
pop
push
push
movsl
subb
and
push
sub
mov
mov
ds
jb
scas
add
sub
xchg
xchg
push
push
sbb
push
inc
andb
xchg
mov
sub
sub
jg
mov
cwtl
push
out
mov
negb
decl
fstpl
mov
popa
jge
sub
outsl
inc
loop
mov
sarl
repz
lret
and
js
xor
enter
add
pop
mov
cmp
jns
mov
les
mov
add
dec
add
and
adc
add
adc
and
push
ja
je
lds
push
gs
pop
xchg
sbb
push
movsb
sbb
mov
ss
ds
add
pop
or
sub
lahf
loopne
loopne
pop
sub
push
cmp
lea
cmpsl
sarl
add
mov
shll
xchg
andl
popa
frstor
sbb
mov
add
pop
push
adc
push
imul
inc
xchg
push
imul
sbb
cmp
imul
aad
dec
scas
pop
cmc
push
jae
and
subl
dec
out
dec
xchg
mov
clc
std
ficompl
pop
jbe
aad
xchg
push
divb
insl
cmp
jp
ja
push
les
aaa
es
xor
fimull
or
sbb
push
adc
imul
ljmp
mov
or
push
imul
mov
xchg
dec
xchg
iret
xchg
mov
push
lods
pop
ljmpw
mov
mov
mov
loope
test
xor
push
lea
xlat
pop
mov
ljmp
dec
test
xor
xor
or
fisttpll
xlat
idivl
aam
jge
xor
lret
jno
lret
sbb
add
bound
jbe
mov
shrb
orl
cmc
and
loop
jecxz
dec
mov
daa
xor
fldl
inc
sub
cwtl
call
mov
std
insb
add
daa
lea
inc
test
mov
adc
mov
js
pop
mov
pusha
cmpsb
ret
mov
and
test
in
stos
sbb
bound
inc
push
lret
scas
ds
icebp
repz
cmpsl
lea
pushf
xor
aad
lea
jne
dec
mov
dec
rep
stc
fistpl
ss
push
push
pop
mov
pop
fucom
js
cmpsl
int3
and
add
es
and
das
inc
mov
popf
push
ja
idivb
mov
pushf
imul
je
test
lods
dec
lret
inc
sub
cmpsb
sti
cmc
xlat
xor
sub
mov
cmp
xchg
adc
mov
adc
adcl
add
test
lods
aaa
fiadds
scas
mov
xchg
push
andl
int3
pop
mov
mov
mov
add
fcmovnu
aas
shlb
jl
mov
aas
jle
mov
bound
into
push
daa
sti
fistps
test
sbb
add
nop
push
inc
movsb
jmp
insb
jbe
scas
sbb
adc
das
ja
pop
mov
xchg
clc
fidivrs
mov
mov
or
cmpsl
and
rcll
jne
out
or
aad
test
outsb
rolb
pusha
mov
push
xor
mov
mov
add
cmp
and
add
dec
sub
and
std
or
pusha
aaa
test
mov
adc
cmp
xor
movsb
test
inc
xchg
out
outsb
jmp
dec
inc
adc
sbb
push
and
jo
loop
inc
adcb
jl
adc
addr16
push
mov
mov
arpl
fwait
jmp
notb
cmp
cmp
movsl
pusha
mov
xchg
lret
scas
aam
shr
adc
fucomip
clc
sbb
insb
jl
mov
xor
push
pop
pusha
es
jp
js
pusha
adc
je
sti
xor
hlt
sbb
mov
fdivrl
sub
lahf
dec
jae
jno
fimull
pop
cmp
dec
rclb
popf
fwait
inc
pop
xor
andb
push
divb
out
jg
lea
pop
dec
xchg
out
xor
fsubrl
imul
sti
mov
xchg
ja
imul
xor
inc
cli
mov
lcall
push
push
xor
sti
and
cmp
arpl
mov
ds
xchg
mov
ret
scas
ja
mov
lods
or
fisubrl
sarl
fs
dec
arpl
or
or
dec
fidivl
xchg
or
out
fisttpll
adc
sub
mov
out
sbb
pop
int3
int
out
fisttps
out
mov
dec
mov
xchg
fistpl
call
inc
and
insb
mov
add
leave
fildl
ljmp
xchg
in
sbb
xchg
jae
pushf
push
cmpsl
daa
cmp
jns
jo
es
and
jno
jo
add
and
roll
icebp
cmp
in
cld
inc
push
jno
and
dec
out
into
fdivrl
popa
aaa
adc
imulb
add
cmp
xchg
js
xlat
sti
inc
lahf
aas
in
xchg
xchg
and
or
lods
mov
mov
aad
sub
jbe
add
mov
enter
mov
jp
dec
sub
push
lea
push
ss
faddl
cmp
inc
or
jle
into
mov
push
imul
pop
adc
push
hlt
adc
lea
and
inc
mov
sub
pop
mov
dec
mov
jle
pop
xor
sbb
add
aad
ljmp
in
nop
ret
cmp
jge
stos
xchg
and
mov
sbb
or
xchg
shl
bts
push
out
mov
cmc
hlt
mov
jns
in
movsb
clc
mov
fcmovbe
in
out
jg
prefetchwt1
or
mov
pop
imul
test
fprem
dec
inc
dec
mov
dec
jge
loop
xor
repz
mov
ret
pop
mov
shll
pop
rcrl
inc
ja
adc
xchg
popf
mov
push
dec
nop
pushf
sub
popa
push
xchg
loop
or
add
mov
push
jae
fisttpl
push
push
lret
cli
mov
xor
adc
aad
dec
jle
inc
push
add
sub
jo
push
out
pushf
test
lock
fists
mov
dec
push
data16
aad
jp
cmpb
xor
push
xor
lds
lret
fcompl
sub
pop
jnp
cwtl
movsl
dec
ret
mov
cli
outsb
mov
or
mov
mov
sub
dec
pop
movsb
stc
inc
insl
jge
add
daa
inc
pop
les
xor
insl
loope
push
push
rclb
sbb
sub
ficoml
inc
xlat
mov
sub
inc
inc
orl
xchg
mov
ljmp
pop
cs
sub
inc
push
xchg
push
call
sbb
and
push
testb
lock
sub
shlb
sarb
addb
jecxz
and
jle
pop
inc
sahf
fcomps
dec
js
gs
xor
jb
subb
mov
pop
mov
sbb
xor
xlat
and
pop
aam
xor
clc
dec
mov
aad
sub
and
jbe
stc
outsl
pop
add
iret
push
push
sub
clc
and
ja
dec
mov
clc
mov
mov
jge
cmp
push
xor
jp
add
pop
jmp
ror
movsb
outsl
dec
ljmp
add
mov
xchg
mov
add
sbb
mov
inc
add
and
or
and
mov
xor
mov
adc
les
scas
pop
add
sbb
ror
addr16
enter
ljmp
imul
sbb
jne
fs
push
cwtl
or
jl
fildl
into
test
int3
mov
fs
rol
mov
adc
mov
dec
xchg
or
rorb
mul
ret
jmp
push
incb
pushf
xor
pop
sub
scas
mov
stos
push
call
loopne
jle
movsl
or
push
ret
fsubl
imul
xchg
ret
sub
mov
cwtl
or
xchg
xor
push
push
scas
lea
xor
out
test
mov
test
jne
sub
popa
ficoms
lds
add
push
lret
hlt
fldcw
out
pusha
mov
sbb
mov
bound
imul
int
jecxz
mov
insb
popa
jno
addr16
adc
outsb
out
movsl
das
jecxz
incl
adc
add
je
push
inc
push
pop
or
inc
enter
push
jl
in
cld
mov
enter
std
push
or
mov
cltd
dec
mov
dec
ss
xor
mov
xor
push
clc
lods
mov
jno
sub
leave
mov
add
es
jmp
adc
daa
mov
test
enter
mov
fisubl
jb
out
into
pushf
outsb
cmpsl
mov
stc
les
inc
ja
mov
or
inc
in
sbb
fwait
push
enter
out
js
sub
sbb
dec
jnp
push
pop
add
mov
stos
test
mov
loop
cld
sub
pop
or
outsl
pusha
and
xor
xchg
aas
pop
cmp
movsb
aad
test
push
push
pmullw
cld
mov
inc
jmp
sub
inc
xchg
pop
addr16
xor
adc
insb
testb
mov
stc
iret
loop
lret
adc
jg
inc
jns
fwait
sbb
scas
and
enter
and
xchg
lret
divb
fs
pop
icebp
push
sbb
pop
jmp
das
add
ds
pop
or
cltd
lods
xchg
cmp
cmpb
mov
ucomiss
cld
xchg
inc
in
iret
adc
inc
popa
stos
xchg
data16
mov
or
xor
int3
fsubrl
mov
jns
stos
inc
xchg
aaa
sbb
daa
ja
aam
clc
in
jb
imul
sbb
dec
push
rcl
sahf
test
push
sti
jl
sbb
scas
push
out
sub
or
cmc
jne
cmp
jle
cmp
cltd
lock
adc
psubsb
pop
int
mov
std
or
dec
mov
adc
xor
push
scas
cs
repnz
dec
sbb
dec
xor
xchg
in
cmp
or
test
add
jecxz
sahf
add
outsb
pusha
sti
xchg
cmp
out
das
and
roll
cmp
mov
mov
lds
jno
outsb
cltd
dec
inc
mov
push
sub
mov
addps
rcrb
data16
mov
cmp
fbld
jmp
lods
fsubr
jo
lahf
dec
or
jnp
jmp
insl
jo
fdivrs
add
scas
mov
insb
jl
cs
les
xchg
mov
mov
mov
aas
cmp
jae
push
pop
adc
cwtl
adc
in
fcmovbe
gs
adcl
mov
or
cmp
push
movsl
cli
inc
sub
cmp
aad
pusha
je
bound
cwtl
repz
loop
adc
pop
into
das
ds
mov
jno
loop
sbb
scas
jmp
and
out
ret
xor
lods
adc
fincstp
lods
lahf
dec
mov
cmpb
mov
incb
and
mov
xchg
xor
popa
adc
add
mov
mov
mov
cmp
dec
jns
movsb
lcall
mov
test
xor
movsl
mov
xor
xchg
xor
addr16
fxch
test
or
and
test
cmpb
mov
test
mov
adc
sbb
add
mov
nop
popf
jle
add
xchg
mov
insl
and
test
push
into
pop
jge
out
jno
inc
ds
cltd
xchg
xor
mov
jne
adc
in
push
xlat
xor
nop
push
add
lahf
stc
cmpsl
iret
cld
ds
jge
adcl
mov
cmp
xor
lds
xor
mov
push
jecxz
pop
addw
lods
in
iret
xor
fcmovne
jae
push
push
test
sbb
mov
push
xchg
in
ljmp
or
cmpsl
nop
sub
dec
out
dec
sbb
and
mov
and
cs
add
mov
out
sarl
sbb
into
dec
cmp
aas
pop
cmpsb
pushf
hlt
lcall
out
pop
add
inc
inc
xor
movsb
push
dec
xor
je
lea
hlt
xchg
mulb
jne
fs
mov
lock
test
add
cmpsl
inc
cld
inc
mov
test
xor
jo
jp
insb
cs
xor
fimull
in
test
dec
cmp
repz
arpl
inc
pop
push
adcb
xchg
xor
jl
adc
addr16
shl
cmpb
cmpb
rcrl
ljmp
or
std
aaa
mov
or
jbe
push
jno
mov
inc
push
sbb
xchg
pop
dec
mov
ds
add
lods
inc
cmc
xor
in
mov
inc
mov
pop
jle
cltd
jo
xor
xor
xor
pop
aam
stc
lretw
lcall
or
std
repnz
movsl
add
aad
leave
mov
std
jne
add
repz
xor
cwtl
mov
lea
fidivs
cmp
mov
mov
call
cmp
inc
sub
push
mov
sub
movsl
shll
inc
out
fcmovnb
mov
mov
and
mov
sti
cmp
ret
testb
sbb
cli
out
add
dec
lock
xor
js
or
paddsb
fsub
je
mov
inc
fadds
into
jns
or
sahf
dec
push
lods
mov
sbb
iret
rcrl
cli
rcrl
cmpsl
leave
jl
ljmp
jne
xlat
in
inc
mov
int
int
and
test
xchg
pop
adc
lock
inc
aas
pop
push
xor
cmp
clc
mov
jbe
mov
cmp
sub
mov
test
inc
cltd
sbb
fldt
std
cmp
les
inc
leave
and
icebp
push
inc
js
or
scas
push
sbb
or
fwait
sbb
je
mov
cmp
inc
cmp
filds
pop
mov
add
mov
jge
lret
out
or
out
cmp
mov
jo
sub
cmpsl
or
clc
imull
in
push
fdivp
dec
jae
push
push
das
out
push
cmp
pop
mov
es
repnz
popf
mov
xchg
jl
roll
mov
or
rorb
repnz
mov
dec
cmp
ss
in
int
in
hlt
jne
out
jmp
test
mov
in
mov
sbb
in
insl
jbe
cmp
pop
sub
ficomps
sub
cmp
lds
and
cmc
push
sbb
orl
mov
and
pop
cmp
ret
pop
je
xchg
pop
xchg
dec
xor
mov
lods
sarb
jbe
or
out
xchg
mov
mov
mov
fists
adc
and
sarb
add
push
sbb
daa
pop
mov
mov
adc
and
jecxz
mov
mov
dec
rcrb
pop
adc
inc
push
lahf
pop
js
pop
adc
test
inc
sbb
pop
jbe
jo
imul
addr16
sbb
movl
dec
mov
xchg
lret
call
dec
adc
xor
add
cwtl
jmp
stos
push
mov
mov
sub
iret
xchg
fs
fldcw
cmp
mov
ffree
daa
out
jle
mov
pop
movd
fmuls
xchg
mov
push
addr16
jp
xchg
int3
scas
and
fimuls
mov
ret
inc
pop
mov
jns
popa
xorl
sti
fs
xlat
je
mov
jno
pop
inc
xor
add
push
sbb
sahf
ret
fs
dec
adc
xchg
iret
popf
lock
iret
sahf
dec
sbb
mov
scas
adc
aas
jbe
pushf
push
push
mov
jnp
pop
and
pop
mov
js
roll
mov
addb
push
push
xchg
ja
outsl
ret
cmp
aam
call
pop
js
fnstsw
jle
enter
xor
add
jno
or
mov
pop
cli
fcmovne
inc
xchg
pop
insl
addb
ret
push
lea
jb
dec
ret
lds
sbb
pop
xchg
jne
scas
jb
adc
lea
xor
or
pop
pop
mov
aad
lea
dec
inc
test
xlat
insl
or
dec
popa
pop
fldcw
iret
test
test
sbb
sub
mov
inc
inc
ss
adc
mov
enter
lods
mov
xchg
gs
repnz
scas
jno
enter
lock
cmp
xchg
xlat
imul
pop
aam
out
test
pop
cmp
mov
fwait
bound
xchg
mov
sub
jg
jg
sub
lret
sub
jnp
xlat
push
adc
xor
mov
xchg
loope
cmpsb
mov
or
lods
pusha
std
out
jns
dec
push
cmpsl
outsb
sub
aad
shr
adc
dec
out
adc
cmpsb
push
dec
ljmp
pushf
sub
and
addb
xchg
lock
in
xchg
cmpsb
push
test
mov
pop
mulb
repnz
gs
mov
mov
stos
inc
pop
mov
div
dec
cmp
aas
xor
mov
je
or
in
sub
std
jnp
cmp
and
test
loopne
je
jmp
fbld
stos
rcrb
mov
sbb
insb
shl
pop
sbb
dec
lret
sub
push
aas
xchg
jo
stos
pop
clc
xorb
fisubrl
sbb
jo
jno
lret
xchg
or
cltd
jge,pn
lods
xchg
push
out
ret
stc
cmp
movsb
aas
lret
pop
lea
addr16
addr16
mov
xor
shrb
inc
mov
not
dec
pop
mov
cmp
xchg
or
cmp
xchg
mull
xchg
in
jne
mov
xlat
push
clc
add
fisttps
insl
adc
mov
mov
fdivs
stos
js
cmp
jae
and
jmp
adcb
roll
jg
inc
inc
aam
mov
jno
shlb
mov
inc
mov
in
jle
jno
push
je
inc
popa
xchg
cld
out
fdivrs
pop
iret
xchg
shrb
dec
jns
dec
push
mov
fistpll
int3
js
jbe
and
loopne
dec
stos
mov
rorl
adc
icebp
push
pop
outsl
das
push
sub
cwtl
cwtl
int3
xchg
sti
lcall
adc
fisttpll
jno
mov
sar
adc
mov
xchg
mov
mov
pusha
pop
aad
enter
insl
adc
and
out
pop
sub
lods
popf
daa
add
push
mov
push
xor
push
add
add
mov
sub
nop
add
mov
js
clc
dec
repz
jle
stos
mov
inc
dec
mov
mov
icebp
sbb
inc
call
into
jne
xchg
pop
push
rclb
imulb
fisttpl
aam
aaa
lods
sub
inc
mov
adc
pcmpgtw
pushf
pop
xlat
pop
mov
rorb
data16
mov
and
jg
std
and
and
mov
out
jnp
cmpl
sbb
pop
scas
adc
push
mov
not
push
lods
test
vcmpneq_oqss
mov
or
mov
arpl
add
std
loop
sbb
repz
bound
in
pop
fldcw
aad
outsb
or
lock
in
cmp
shlb
rorb
inc
sub
testl
fnstsw
clc
adc
int
imul
push
mov
call
xor
out
pop
decl
mov
shll
xchg
or
push
hlt
mov
and
mov
inc
cmp
pop
sahf
inc
adc
add
icebp
adc
mov
lds
test
cltd
xchg
pushf
jge
push
mov
loopne
ret
dec
adc
mov
mov
outsl
pop
fisubl
mov
cmp
pop
cmp
and
es
gs
out
push
imul
out
cmc
adc
jo
xchg
cwtl
adc
xor
sub
jmp
rcr
rol
and
outsb
loope
decb
mov
cmp
mov
mov
sti
inc
mov
sbb
jns
inc
test
mov
out
dec
sub
shl
mov
std
jo
sub
dec
adc
push
xchg
ds
enter
xchg
outsl
cmp
push
dec
shrd
or
xor
andb
dec
sub
xchg
cli
pop
or
shrb
dec
mov
std
js
push
mov
adc
sub
loope
sahf
shll
mov
sbb
ret
xor
sbb
iret
mov
dec
loop
and
jo
jg
shl
gs
mov
imul
dec
mov
int3
and
xor
ret
insl
jmp
inc
repnz
std
push
xor
in
inc
shll
fcomip
jns
mov
negb
cmp
imul
scas
sbb
mov
lahf
stos
repz
lock
mov
xchg
sbb
lea
sahf
cmp
fcoml
cmp
je
jecxz
int
repnz
jp
in
movsl
and
ret
push
test
inc
sbb
jnp
test
pusha
fistl
push
out
pop
mov
aas
push
loopne
fmul
outsl
adc
arpl
inc
xchg
mov
ja
fisttpl
cmp
lock
int
or
shrl
mov
xchg
xchg
loopne
jnp
std
mov
add
sub
and
mov
cli
mov
ret
mov
mov
and
mov
xor
ret
xor
inc
cmp
or
subl
movsl
xchg
repz
in
fstp
fimull
jno
hlt
subl
xchg
cmpsb
cwtl
mov
add
mov
mov
int
movsl
lret
rol
sti
jno
int
int
rcrb
sbb
fs
push
mov
xchg
xor
xor
lds
test
mov
aam
fs
lcall
rcl
lds
or
inc
adc
mov
out
lcall
jne
int3
sahf
ss
pop
fdivl
cltd
mov
call
outsl
and
out
das
out
outsl
mov
sbb
xchg
sti
nop
out
outsl
xchg
loop
stc
fs
inc
es
ficompl
jae
or
stos
pop
cli
rcll
cmpsb
sbb
adc
clc
push
imull
fistpll
fwait
stos
sbb
mov
lahf
cmpl
add
stos
sub
push
pop
in
xchg
ja
or
push
push
jmp
xchg
inc
or
