sbb
add
add
rclb
and
dec
push
aam
int
loope
in
fs
inc
stos
push
push
xchg
sub
push
stos
sub
lods
dec
pop
push
leave
clc
mov
arpl
mov
ja
sarl
and
sti
pusha
fldt
decb
js
popa
lcall
loop
push
sbb
pushf
fnstcw
sub
out
or
mov
and
faddl
std
push
fidivs
data16
enter
and
sub
cs
cmp
fistpl
sub
xor
jbe
ljmp
cmp
push
sbb
push
into
push
add
rolb
sbbb
push
adc
pop
ja
inc
fidivrs
int3
adc
xchg
inc
daa
fisttpll
bound
or
sub
pushf
inc
pop
mov
jne
mov
imul
in
pop
and
xlat
mov
pop
xorb
xchg
stos
xor
lds
insb
sbb
ss
out
outsb
cmpsb
push
mov
or
pop
xchg
dec
push
mov
cmpsl
dec
mov
imul
fildl
shrl
mov
xchg
int
stc
gs
or
cmp
adc
imul
jae
in
ja
lds
test
arpl
or
fstpl
cmp
jecxz
ss
cli
stos
mov
in
xor
movsb
pop
xchg
cmp
mov
and
fstl
jne
cmp
pop
fdivrl
sbb
insb
inc
and
stc
fcom
push
daa
sahf
adc
cs
frstor
icebp
test
or
pushf
popf
pop
insb
sub
inc
insb
xor
icebp
xor
xor
push
dec
pop
sarb
and
or
mov
sub
out
repz
inc
repz
xlat
jnp
js
rcrb
test
in
mov
shlb
push
xchg
adc
addb
and
test
jle
and
lock
inc
cmp
repnz
leave
lea
dec
mov
cmp
les
adc
sahf
mov
in
mull
aaa
inc
push
mov
in
mov
mov
subb
repz
lret
xor
ljmp
notl
cmc
push
aad
orb
sub
add
sbb
sbb
fnsave
or
aas
cmp
or
pushf
mov
cmp
mov
lods
sbb
pop
adc
pop
pop
pop
adc
mov
lcall
aas
lods
daa
movsb
dec
fisubl
cwtl
pushf
pop
aaa
add
adc
mov
scas
jg
repnz
cmp
ljmp
cmp
js
cmp
jecxz
pop
stos
ds
cmp
mov
fistl
movsb
mov
mov
jle
popf
dec
pushf
nop
inc
sbb
mov
mov
sub
push
rolb
mov
jae
cmpb
dec
pop
sbb
sbb
xor
xchg
jnp
call
insb
jg
add
inc
icebp
addr16
cmc
icebp
jge
mov
add
jmp
rclb
adc
add
into
clc
mov
cmovae
jmp
push
fs
cmpsl
ffree
sub
mov
shrb
gs
lcall
aas
and
mov
dec
into
addr16
mov
das
push
cmp
and
mov
fidivrl
aam
jg
lret
xlat
test
pushf
sarb
mov
adc
popa
and
insl
incl
decl
pop
into
jge
cmp
and
popa
xchg
push
dec
mov
mov
stos
in
sbb
or
loope
jmp
cmp
pop
out
pop
int
fwait
lds
ret
lods
scas
pushf
es
aas
inc
hlt
push
scas
xchg
jg
sar
cld
shl
in
testl
sbb
cmc
inc
mov
ja
jne
movsl
adc
sbb
mov
loop
sbb
sbb
and
test
stc
rcr
ja
lds
mov
rol
sub
fcomps
in
fmuls
jnp
or
dec
sbb
xor
into
xchg
jl
outsb
mov
push
fsubr
roll
aaa
xor
xchg
lock
adc
mov
mov
mov
popa
sbb
in
mov
test
divl
nop
cmp
add
sbb
cmp
adc
lcall
jge
cmc
dec
xor
push
or
pop
hlt
in
xchg
mov
xchg
inc
hlt
cltd
or
inc
or
rcrl
cmp
insb
mov
sub
nop
or
das
loopne
jns
fadd
cmp
and
jns
dec
jo
in
adc
dec
dec
nop
mov
sub
in
and
aas
out
ss
cmp
clc
mov
lock
dec
cmp
or
insl
pushf
out
mull
gs
test
loop
dec
int
pop
or
mov
mov
sub
movsl
test
loop
mov
stos
mov
xor
mov
push
sarb
outsl
rorb
push
data16
pop
data16
mov
jbe
cs
out
bound
imul
bound
cmpsb
mov
es
xchg
insl
push
stos
test
or
jge
ja
adc
jle
faddl
es
push
xor
addr16
xlat
mov
adc
subps
push
adc
cmp
shlb
xchg
inc
or
in
dec
xchg
cmp
and
jae
stos
adc
addl
scas
push
xchg
gs
cld
add
add
mov
pop
or
xchg
pop
pop
jecxz
inc
inc
ja
cmp
cmp
notb
dec
adc
jl
and
lea
mov
imul
cmp
enter
and
int
loopne
mov
ss
ja
sbb
insb
add
add
fwait
popa
arpl
sbb
sub
cmp
mov
xor
hlt
push
sti
cld
pop
dec
push
xchg
xor
rolb
xor
jno
pop
jge
xor
dec
push
and
xchg
std
stos
shrb
push
mov
jle
xor
sti
sub
out
filds
push
scas
nop
dec
cld
scas
ja
sbb
xchg
cmp
ds
add
dec
movsl
cmc
and
cs
fwait
hlt
or
cwtl
test
out
andl
cmp
mov
loopne
sbb
push
cmp
dec
sub
rorb
add
mov
push
addr16
loope
xor
mov
dec
scas
jae
repnz
jb
or
mov
add
mov
scas
shlb
add
in
sbb
fdivr
movsb
push
jb
and
repnz
inc
stos
repz
pop
mov
inc
xor
fsubp
jno
nop
loop
push
xchg
or
xchg
cmp
sbb
mov
or
in
dec
mov
ret
nop
lret
or
js
movsl
cs
mov
fdiv
xor
rcrb
and
jl
outsl
int3
bound
loope
test
cli
cmp
push
ss
push
int
stos
ss
sbbb
or
xchg
scas
push
jl
jle
test
and
adcb
sbb
iret
daa
repnz
mov
add
sub
cmpsb
shlb
cmp
iret
lret
enter
divl
fisttpll
stos
dec
sbb
jne
jmp
outsb
xchg
outsw
inc
add
arpl
je
xor
mov
mov
push
repz
fxch
xchg
scas
adc
test
imul
or
test
imul
in
cmc
or
pop
data16
xor
or
xlat
inc
js
mov
fnsave
cmp
popa
call
cmp
loop
cmp
fldcw
mov
jne
inc
test
iret
sbb
mov
pop
lods
les
cmpsb
jmp
push
xor
lret
jecxz
xor
or
aas
cmp
ret
lods
pop
loopne
mov
push
pop
fistpll
add
lds
inc
inc
aam
ljmp
mov
dec
push
aaa
push
mov
out
lret
push
push
mov
jb
inc
pop
cmp
mov
push
orb
mov
adc
out
sub
subl
mov
stc
adc
dec
testb
xlat
jl
mov
fincstp
jbe
dec
sbb
sbb
pop
fadd
jl
inc
ja
and
adc
ljmp
clc
sbb
mov
ljmp
cs
shl
sub
xor
inc
inc
pushf
and
popa
popa
cmp
add
call
or
mov
push
rcll
mov
mov
mov
mov
xchg
sub
cmpsl
add
pusha
inc
scas
arpl
push
popa
sub
jecxz
call
sub
push
scas
xchg
sub
cmc
rorb
adc
jmp
xor
outsl
jb
dec
cwtl
pop
jb
mov
xchg
xchg
mov
pop
push
add
push
and
pop
fcomps
xlat
or
test
sub
lods
cmpsl
scas
and
cmp
sbb
mov
divb
xor
lret
and
adc
inc
lock
dec
inc
fcompl
enter
mov
imul
jg
aaa
or
nop
inc
test
dec
mov
fisubl
add
and
cld
fcmovb
nop
lcall
std
outsl
loope
pop
jno
rol
cmp
pop
test
mov
push
mov
lcall
fldenv
ret
sbb
inc
mov
mov
scas
inc
mov
inc
inc
mov
inc
xlat
dec
pop
sub
sub
pop
scas
std
mov
sarb
inc
cmp
data16
gs
andb
insl
mov
xchg
xchg
lcall
pop
out
sub
enter
xchg
xor
stos
sbb
sub
std
sub
jl
mov
cld
push
stos
data16
mov
pusha
cmpsb
inc
lret
adc
xor
xchg
fstps
push
les
lea
sbbl
pop
cltd
pop
push
out
nop
fwait
xor
mov
fwait
sti
inc
inc
mov
enter
jns
nop
sbb
or
sub
loope
notl
sbb
dec
in
jg
jle
mov
mov
xor
pop
cmp
cltd
inc
dec
aam
outsl
shrl
xor
das
std
lret
addr16
scas
xchg
orb
in
xchg
dec
mov
pop
push
fldt
cmp
rorb
cmpsl
imul
inc
pushf
call
in
or
mov
push
test
mov
les
ds
es
pop
mov
cmp
in
insl
lods
or
imul
addb
cmp
jb
sub
or
lahf
sub
cmp
in
outsl
aaa
pop
fidivl
subl
or
shlb
pop
xor
insb
movsl
test
in
mov
jno
jle
or
cmpsb
bsr
movsl
push
enter
cwtl
fldcw
xor
cmp
imul
xchg
pop
repnz
das
mov
jo
arpl
lea
insb
aaa
mov
out
add
decl
add
outsb
push
jb
cli
add
testl
mov
push
pop
adc
lea
jecxz
push
or
icebp
cmp
push
lret
sub
out
mov
dec
jne
call
ss
daa
gs
ljmp
jbe
test
js
lds
into
insb
jo
mov
cld
mov
out
loopne
shll
push
adc
or
mov
or
nop
icebp
lods
inc
fwait
add
idivl
lret
adc
sbb
sbb
xchg
push
xor
insb
in
cltd
not
int3
mov
out
push
sbb
loope
pop
inc
xchg
jno
scas
hlt
nop
and
lret
mov
mov
in
cmp
jge
inc
add
outsb
lea
push
fistl
cmp
inc
movzbl
jmp
test
out
cli
daa
and
mov
and
adc
add
jg
hlt
sub
jo
mov
fldenv
dec
mov
or
mov
pushf
divl
lock
mov
dec
add
dec
dec
adc
xchg
cmp
xchg
mov
mov
mov
push
xchg
jg
enter
int
pop
adc
aam
scas
imul
cmp
mov
data16
mov
cmp
std
adc
xchg
xchg
add
cld
jmp
pop
pop
xlat
jle
ljmp
into
shl
push
imul
xlat
data16
out
add
daa
out
mov
ljmp
mov
jl
inc
cmpsl
mov
jo
add
sbb
xchg
or
test
jle
insl
mov
insb
or
push
dec
addr16
fwait
jns
outsl
dec
ss
push
cmp
push
mov
test
lds
arpl
xchg
mov
mov
push
enter
push
inc
jle
popa
inc
mov
pushf
clc
xor
sbb
adc
scas
xor
mov
or
mov
or
icebp
pop
stos
jae
dec
aam
filds
or
popa
fisttpll
cmp
cmp
mov
repnz
stc
add
insb
push
push
sub
nop
fcmovb
in
adc
or
cmpsb
cmp
in
xor
das
in
cmp
stc
flds
or
test
xchg
insl
imul
repz
jl
imul
sub
xchg
ja
mov
pop
pop
insl
pop
bound
test
dec
jecxz
cld
data16
push
mov
das
add
xchg
cltd
jb
mov
in
loopne
jp
mov
mov
cmp
test
and
and
xorl
inc
push
addr16
adc
int
xor
sub
cld
mov
jge
push
xor
popa
cwtl
outsl
repz
sbb
jmp
testl
add
jne
adc
mov
div
daa
or
and
jmp
pop
lret
inc
jle
mov
iret
jmp
insb
sahf
addl
lret
leave
fs
lahf
lcall
out
lcall
sub
inc
nop
jmp
leave
dec
in
push
cmovl
gs
or
mov
push
fucom
test
push
jecxz
fcmovb
fcmovnu
repnz
mov
jns
pop
shlb
aaa
jg
pop
iret
or
push
mov
movsb
fmuls
mov
pop
or
xchg
sahf
or
mov
lret
insl
repz
adc
lea
jo
mov
xchg
mov
aad
sub
sarb
jno
add
loope
xor
sbb
adc
dec
sub
jecxz
sub
popa
push
scas
arpl
cmp
mov
lea
test
pop
jle
repz
xchg
xor
bound
pop
sub
cli
and
or
push
ret
mov
pop
mov
ret
int3
sbb
mov
out
inc
mov
out
mov
lret
xchg
test
loope
mov
and
ficompl
aad
jnp
xchg
testl
loopne
mov
outsb
xchg
lds
in
mov
cmp
mov
mov
xlat
mov
xchg
js
gs
sub
int
shlb
pop
loopne
push
mov
in
xchg
repz
mov
lret
test
mov
jecxz
push
inc
inc
inc
add
inc
loop
add
inc
sti
inc
push
mov
xchg
inc
sbb
pop
push
inc
mov
test
mov
xchg
push
and
mov
inc
push
dec
adc
loop
mov
mov
js
stc
inc
pop
jle
mov
in
jbe
jge
inc
ret
repnz
imul
cld
loope
push
xchg
xor
sti
xchg
xchg
cmp
or
je
outsl
cltd
add
addr16
inc
jecxz
xor
lahf
xorb
inc
in
mov
jbe
lods
cltd
lods
inc
cmpsl
mov
sbb
jle
into
dec
add
loopne
test
mov
adc
push
mov
push
dec
inc
aad
xorl
ret
movnti
testl
mov
xchg
push
fcomp
dec
cmp
push
cwtl
jge
push
mov
push
xchg
iret
mov
loopne
in
mov
sub
aad
das
add
xchg
mov
xor
inc
xchg
bound
lcall
out
pop
xorl
xor
sub
je
shl
pop
adc
xchg
lret
sub
dec
call
mov
repz
lea
pop
lods
cwtl
cmp
add
cltd
lock
aaa
mov
and
dec
mov
rorl
lahf
and
aam
cli
js
xor
idivb
ret
jg
jnp
jge
lods
call
clc
pop
lods
mov
cmpsl
lock
std
mov
lret
mov
leave
ret
inc
sub
lods
iret
fsin
pop
sub
into
cltd
out
jg
sub
test
inc
filds
mov
repnz
xchg
push
mov
idivl
mov
test
fcomps
xor
adc
inc
outsl
js
or
xor
or
aad
movsb
sti
dec
sub
jbe
es
jns
icebp
lds
aad
jmp
bound
pop
mov
or
int3
xchg
fidivrs
cmpsl
les
int3
push
jb
mov
into
xor
sbb
enter
stc
mov
xor
ds
push
lea
daa
xchg
fidivl
xchg
pop
outsl
xchg
mov
sarb
fistpl
pop
aam
sbb
mov
push
stos
mov
push
xchg
out
mov
clc
outsb
stc
adcl
adc
push
je
and
pusha
pushf
sbb
jnp
mov
out
cli
movaps
mov
sub
mov
aaa
mov
sub
addb
xchg
imul
dec
aad
loopne
out
inc
cmpb
lock
mov
stos
mov
clc
cli
lret
dec
in
out
stc
vcvtsi2sdl
out
adc
lock
xor
cwtl
sbb
and
test
arpl
aaa
ss
fdiv
mov
mov
adc
mov
sbb
mov
arpl
dec
out
mov
repnz
in
inc
xchg
inc
push
sbb
lods
xchg
nop
sub
stos
push
shlb
je
pop
mov
jl
repz
jle
mov
das
stos
std
cmp
ret
test
push
add
repz
mov
insb
sbb
cmp
jne
add
addr16
sub
int3
js
mov
cmp
aas
adc
jb
dec
inc
mov
xor
push
stc
xor
dec
ljmp
xchg
add
loope
test
push
jnp
cmp
mov
dec
lahf
adc
push
or
loop
push
push
lods
cwtl
pushl
add
adc
add
mov
push
lret
and
insl
loopne
rcrb
sbb
xor
adc
js
imul
gs
or
insb
jp
pusha
pop
ds
hlt
and
fwait
imul
out
lods
push
pop
mov
sti
dec
test
xor
push
scas
lds
rcl
mov
jmp
pop
mov
adc
int3
and
test
insl
xchg
test
leave
inc
loop
push
stc
dec
mov
mov
xchg
add
test
push
mov
loope
cs
movsl
mov
xor
mov
push
sbb
test
inc
aaa
loopne
and
gs
rcr
ds
adc
jbe
dec
pusha
popa
push
mov
pop
ljmp
mov
jns
push
dec
popf
dec
mov
ljmp
je
loopne
cmpsl
pop
bound
mov
iret
xor
push
and
and
dec
push
nop
xchg
inc
cli
push
pop
mov
jae
pop
clc
cmp
dec
insl
mov
pop
jb
or
sub
jmp
jnp
pmaxsw
mov
fisttpll
cmc
xchg
into
cmp
push
mov
push
mov
in
out
in
inc
cltd
data16
mov
in
and
jl
loopne
pop
xor
out
xchg
mov
test
sbb
sbb
je
cltd
adcb
insl
arpl
pop
pusha
push
or
inc
push
jmp
movsl
dec
push
loopne
pop
push
or
add
arpl
xlat
sbb
lret
in
test
stos
in
repnz
popa
pushf
cmp
aas
out
pop
jge
inc
mov
lahf
out
pop
jge
jne
shrl
cmovae
scas
stos
leave
lret
enter
xchg
jle
repz
jp
mov
mov
in
mov
sbb
jg
jle
adc
sahf
mov
lret
inc
mov
inc
pop
adc
sub
mov
inc
test
in
stos
loopne
add
das
adc
push
jle
mov
nop
repz
out
aas
testb
jp
lahf
pop
pushf
in
push
jnp
cwtl
mov
cmp
iret
ljmp
icebp
pop
xchg
dec
movsl
sub
nop
or
lret
dec
and
mov
lret
xchg
sub
cmp
cs
daa
call
jmp
jo
int
cli
adc
js
cwtl
dec
jg
aaa
fs
inc
pop
mov
inc
jo
and
mov
notb
fmull
xor
bound
call
push
push
sub
or
dec
mov
adc
inc
cwtl
sub
pop
push
stc
pop
ljmp
push
jp
cs
lods
les
arpl
jne
cmpsb
mov
pusha
inc
sbb
push
lcall
jmp
pop
gs
mov
pop
mov
adc
inc
call
mov
xchg
out
or
out
sub
pop
xchg
ja
insb
dec
cmp
mov
mov
scas
mov
dec
dec
sbb
push
scas
je
adc
addr16
and
and
out
jns
hlt
in
mov
cmp
test
sub
in
jle
adc
cmp
pop
popf
pop
out
sbb
mov
inc
pop
pop
cmp
mov
insl
mov
or
mov
xor
sub
dec
pop
or
adc
ja
inc
mov
fiaddl
out
fs
sbb
jmp
jno
lea
insl
pop
adc
es
stc
push
dec
dec
jbe
incb
mov
icebp
nop
test
dec
imul
decl
daa
fnsave
scas
adc
nop
aad
jmp
fs
xchg
cli
dec
push
sub
int
les
pop
fldt
pop
adc
cmp
and
mov
xchg
inc
fistpll
jge
shll
pop
push
and
test
add
repnz
cwtl
hlt
hlt
sub
aam
mov
repnz
fisttpll
or
add
push
test
or
adc
imul
or
sub
jns
inc
roll
sub
inc
push
ja
jle
cli
ror
sahf
sbb
cmp
stos
cmp
push
test
and
negb
stos
pushf
adc
ret
mov
add
add
push
xchg
pop
and
lret
in
cwtl
lods
rcrl
addl
jmp
push
dec
add
mov
iret
adc
mov
xlat
xlat
out
mov
xor
inc
push
int
dec
mov
jne
xlat
xlat
popf
outsb
mov
test
jp
inc
imul
scas
jg
xlat
or
xor
mov
test
push
push
movsb
cmp
dec
test
test
scas
and
dec
xchg
fcoms
jb
rclb
test
enter
leave
mov
inc
pusha
pop
pop
int
dec
mov
jno
jg
movsl
out
ljmp
cs
jecxz
lods
sbb
mov
add
fmull
ret
push
mov
pop
aam
das
out
mov
xchg
jb
xchg
jg
test
fisttpl
test
lea
push
mov
add
or
xchg
pop
pop
inc
outsb
pop
dec
pusha
fistl
fildl
pop
rol
insb
xor
cli
xchg
int3
add
inc
xor
stos
jne
mov
hlt
mov
cmpsb
lods
repnz
pop
or
jle
push
in
mov
pusha
mov
lret
inc
inc
adc
imull
mov
icebp
sub
jle
movsl
sub
push
cmc
inc
mov
mov
fwait
dec
xchg
into
push
mov
and
imul
shlb
pop
daa
push
sub
add
mov
test
lahf
sahf
in
mov
jns
push
inc
loopne
cmp
add
orps
shr
mov
sahf
push
mov
repz
xchg
sbb
aas
les
addr16
rcrb
loopne
int
pop
inc
rorb
sti
sbb
fnstenv
add
mov
repnz
sub
ret
std
xchg
pop
fidivl
and
imulb
fld
xchg
loopne
daa
xor
out
or
cli
cld
jns
adcb
sbb
sahf
add
rcr
mov
out
rorb
pop
rolb
push
sbb
mov
xchg
fincstp
test
pushf
clc
pop
lods
test
pop
inc
xchg
aad
adc
mov
sbb
shrb
jae
sbb
fxch
cmpl
aaa
mov
lods
outsl
inc
sbb
out
pop
sahf
fldt
add
lret
ret
pop
movsl
out
mov
inc
enter
mov
ret
jecxz
in
loop
aas
inc
cmpsl
and
fdivs
push
mov
mov
xor
add
fidivs
out
mov
test
dec
mov
ljmp
fsubs
cmp
popa
cmp
pop
std
inc
sahf
jl
jae
cmpsl
pop
fstps
shlb
cmp
ljmp
mov
push
ret
mov
sti
push
inc
sbbb
int3
lret
int
sbb
mov
mov
int
sahf
out
repz
js
mulps
sti
pop
pop
sub
iret
sbb
push
sub
pop
mov
mov
push
imul
push
ljmp
fs
popf
mov
xor
xor
sbb
xchg
dec
or
jo
stos
push
scas
pop
inc
inc
and
out
mov
inc
aas
movsb
adc
fwait
test
dec
mov
pop
int
jb
cs
loopne
test
dec
nop
cld
jbe
mov
inc
sbbl
insl
adc
call
pusha
pop
inc
test
jg
cmc
cmp
lret
fisubrl
hlt
aam
jno
das
sub
push
cmpsb
mov
inc
cmp
push
jnp
loopne
addb
les
ja
into
into
jnp
adc
in
lea
cs
loope
jmp
int3
fldl
jp
daa
push
sahf
push
loop
xor
xchg
cmp
fwait
add
dec
lods
imul
popl
jb
adc
pop
xchg
ret
rorl
js
add
fstp
push
clc
inc
jno
sbb
cli
xor
into
cmp
hlt
sti
ds
inc
jmp
jbe
pop
mov
ds
sub
adc
dec
sub
cltd
loopne
and
pop
mov
dec
mov
scas
ja
inc
ficompl
sbb
lret
lea
pop
jge
nop
and
pop
or
jbe
mov
cld
mov
jnp
jno
out
jp
nop
lcall
and
adc
sahf
dec
xor
push
mov
out
mov
xlat
push
add
aaa
jle
clc
aas
outsl
inc
dec
pop
xor
scas
cmpsb
mov
push
cs
loopne
std
sub
inc
dec
lret
pop
enter
imul
adc
adc
cmpsl
or
sti
and
in
frstor
imul
inc
mov
cmc
sub
inc
pop
in
mov
cwtl
cmpsl
cltd
add
or
sub
xchg
pop
lret
dec
rorb
and
ss
out
xchg
inc
clc
pop
mov
call
repz
scas
mov
pop
iret
add
popa
daa
shrb
nop
pop
and
mov
rcrl
fsubl
cltd
jne
fildl
clc
in
mov
enter
cmp
in
mov
dec
roll
and
mov
std
push
and
loopne
repnz
fs
cltd
push
call
inc
push
inc
sub
daa
mov
push
mov
aam
xchg
fwait
mov
lock
and
xchg
pop
mov
nop
lea
mov
xlat
push
scas
mov
iret
add
aas
jne
add
aaa
rorb
lds
inc
jl
and
mov
cmp
dec
aaa
adc
mov
add
out
xchg
or
sbb
xchg
push
mov
push
fwait
dec
and
jnp
std
mov
xchg
jg
es
mov
add
mov
cmp
cmpsb
cwtl
out
out
jns
mov
inc
sarl
cwtl
ljmp
xor
dec
mov
dec
stc
xchg
push
rcrl
mov
or
jae
out
push
cmp
icebp
sub
imul
pushl
add
mov
dec
cmp
inc
jae
mov
mov
push
xchg
sahf
aad
jbe
mov
or
xchg
out
inc
aaa
mov
lret
jnp
push
sub
inc
and
pop
jnp
pop
and
ljmp
negb
dec
stos
test
dec
sbb
aaa
fiadds
out
adc
outsb
iret
mul
pop
push
in
icebp
xchg
mov
mov
lahf
mov
std
call
jl
loopne
testb
cs
add
mov
outsl
loop
or
jle
fwait
or
fsub
sub
cmp
adc
das
les
inc
mov
sub
mov
and
scas
ja
mov
cmp
clc
dec
mov
dec
ret
jmp
xor
pop
out
roll
popfw
dec
dec
mov
xchg
sbb
mov
pop
and
cltd
stc
and
and
leave
scas
bound
addr16
mov
loopne
mov
shll
mov
pop
ljmp
je
inc
pop
test
jp
cmp
push
sti
es
sti
lcall
jo
not
mov
sbb
mov
dec
add
popa
repnz
in
push
in
jne
pop
hlt
push
add
out
rolb
pop
mov
fcmovbe
notb
sahf
or
mov
mov
inc
push
jge
pop
out
cmpsb
enter
xor
sub
outsl
cmp
add
ret
xchg
sub
arpl
and
push
sbb
inc
push
bound
movsb
adc
jp
xchg
cs
mov
sub
scas
xchg
test
je
outsl
pop
inc
push
dec
jle
ret
daa
jge
sbb
sbb
out
sbb
imul
lods
addr16
lret
fisubrs
mov
xchg
iret
lret
mov
push
sarl
xchg
adcl
in
daa
sub
lcall
xor
icebp
xorb
mov
jg
imull
mov
stos
fsubr
fbld
and
and
jecxz
mov
loop
or
scas
out
inc
jns
sbb
pop
xlat
jae
mov
push
jno
jecxz
das
je
and
cltd
fcoml
mov
push
push
xchg
pop
and
lds
stos
jne
adc
fbld
adc
xor
shlb
das
fimull
push
add
mov
in
pop
gs
shrb
cltd
les
cmp
aam
mov
lcall
cmc
dec
mov
add
xor
cmpsb
adc
mov
repnz
pop
xchg
and
and
outsl
stos
aas
lods
sbb
js
xor
shrb
mov
lods
jnp
pusha
call
ret
xor
jo
enter
and
jae
jle
negb
nop
adc
pushf
push
les
lock
popf
rorl
cwtl
aaa
aam
jnp
bound
fcoms
jbe
cmc
repnz
shll
mov
jnp
sysret
loopne
or
sbb
js
mov
push
sub
mov
or
xor
jge
popa
xor
jmp
and
jb
movsl
pop
jno
sbb
jae
es
divl
xchg
or
mov
adc
bound
in
sub
rcr
or
and
lcall
test
pop
or
ss
and
ror
jl
dec
repnz
cmp
subl
rorl
xor
test
push
cmp
cmpsb
lds
push
jnp
jno
and
mov
push
dec
icebp
add
xchg
cmp
pop
jns
or
xor
mov
mov
push
pop
inc
ljmp
dec
aad
mov
xchg
or
or
push
gs
sbbl
test
and
arpl
insl
icebp
adc
and
inc
out
lret
adc
fs
in
sbb
mov
jp
dec
fisubl
push
mov
sti
int
jg
orl
sub
idivb
lret
cmp
cwtl
cwtl
cwtl
mov
add
jbe
sub
sbb
cmovge
push
xlat
cs
lret
jmp
push
lea
mov
fucomp
fldl
imul
ljmp
aas
negl
push
pop
jno
rcll
mov
shrl
in
repnz
jns
pop
dec
xor
popa
xchg
enter
imul
xor
mov
mov
sbb
pop
dec
push
pushf
pop
and
and
rclb
add
lcall
popf
arpl
cld
mov
imul
push
imul
cmp
roll
cmp
out
imul
xchg
imul
aaa
mov
cs
fwait
sub
cmp
daa
aam
stos
lcall
or
clc
dec
mov
gs
push
jnp
cmp
sahf
pop
lds
add
inc
lods
mov
push
in
and
cltd
pop
xor
scas
cltd
jbe
inc
lcall
pop
jne
lcall
xchg
mov
xlat
pop
int3
inc
dec
jge
out
scas
popa
sbb
divb
inc
cmpsl
or
movsb
or
mov
addr16
push
insb
pop
sbb
sub
jnp
int3
sub
flds
add
jl
add
push
mov
ljmp
jle
xchg
push
test
lcall
jl
inc
inc
pop
mov
mov
dec
or
mov
xor
mov
sub
mov
mov
jne
cli
div
push
mov
xor
stos
sbb
jg
lds
adc
lods
fs
in
push
lahf
mov
stos
aas
jmp
daa
push
lret
andl
push
rcrb
mov
sbb
adc
push
mov
pop
xchg
fs
and
dec
mov
pop
sarb
nop
out
les
lret
inc
pop
notl
jl
mov
mov
mov
add
js
mov
data16
pop
inc
pusha
mov
out
test
fs
pop
add
and
js
mov
mov
ret
lock
out
movsl
aaa
repz
mov
push
ds
scas
cltd
push
aas
mov
shrl
xor
mov
jg
lahf
enterw
je
cmp
pop
sbb
nop
adc
or
movsl
jge
gs
jae
std
jge
xor
cmp
aam
cmpsl
sub
aas
in
jg
jnp
mov
inc
aas
pop
outsb
lahf
jp
pop
mov
add
jnp
or
adc
call
data16
seta
dec
add
es
aaa
xchg
dec
jge
clc
xor
and
mov
mov
vmovupd
pop
push
xchg
pop
lret
push
push
out
aas
pusha
js
pusha
popf
xor
je
push
xchg
fdivr
jecxz
stos
lret
lds
aad
xlat
lret
imul
in
push
test
inc
jne
mov
jnp
inc
loope
mov
add
stos
addr16
xor
rorb
lods
pusha
push
in
sub
pop
jne
jge
insl
mov
pop
xlat
xchg
sbb
mov
outsl
cli
pop
sahf
pop
loope
jns
in
jo
xchg
hlt
idivb
sbb
ja
shll
xor
test
or
popf
andb
aad
inc
sti
mov
and
adc
les
rol
dec
ret
ja
enter
adc
mov
mov
sbb
jne
inc
out
adc
and
lahf
hlt
jg
fneni(8087
xorl
arpl
stc
sahf
iret
add
data16
inc
js
add
int
cmc
dec
inc
or
fildll
jne
dec
test
ret
dec
and
loopne
clc
js
dec
xorl
fldcw
mov
adc
ja
xchg
jle
and
xchg
fwait
stos
lods
sbb
mov
mov
test
cmp
rolb
movsl
popa
lods
loop
rolb
jb
fs
test
add
hlt
mov
xor
shl
test
pop
mov
test
out
mov
nop
jne
jno
xchg
daa
jp
and
es
xor
sub
sti
mov
jmp
jmp
jae
and
int3
out
mov
and
in
mov
xor
jnp
or
int
xchg
dec
lds
xchg
pushf
jecxz
and
popa
mov
jae
sub
pop
popf
in
mov
out
xchg
push
cltd
xchg
push
imull
mov
ss
cmp
notl
mov
pop
rorb
std
mov
cmp
jp
mov
mov
mov
mov
mov
jmp
xlat
jae
lock
mov
mov
incl
sti
push
bound
sbb
hlt
mov
test
popf
loope
xchg
mov
in
cltd
iret
push
aam
popa
pushf
mov
enter
mov
stc
dec
xor
pop
aaa
shrl
ss
aam
mov
pop
rcr
nop
sbb
addb
sbb
out
jecxz
jg
jmp
mov
scas
sub
fldz
fdivrs
sub
stos
aaa
std
cpuid
sbb
je
idivb
jmp
ja
cmpsl
mov
mov
push
mov
jp
lret
arpl
sub
test
xchg
mov
mov
sbb
ja
fs
push
adc
int
sbb
and
wbinvd
sub
ja
mov
mov
sahf
sbb
cltd
sti
pop
stc
std
inc
pop
fsubl
adc
icebp
dec
divl
sbb
decl
or
repz
dec
call
ljmp
sbbb
sub
add
stos
add
loope
sbb
testl
daa
mov
cld
leave
cmpb
dec
inc
lahf
mov
decl
jp
mov
sbb
movsb
pop
ljmp
mov
jne
aas
and
in
fwait
mov
icebp
cmp
adc
ret
cld
das
out
shll
outsb
adc
int3
jnp
into
jno
and
jg
stos
lcall
or
add
or
dec
dec
and
pop
push
push
mov
jmp
ret
or
mov
sbb
pop
and
fdivrl
enter
in
in
and
inc
mov
or
cmp
stos
push
in
dec
hlt
mov
mov
sub
mov
into
sub
xor
dec
dec
adc
or
push
jbe
ret
sub
das
pop
jmp
xchg
arpl
sbb
sbb
inc
imul
fs
jnp
mov
or
mov
imull
mov
imul
scas
shrb
add
or
dec
mov
loopne
loop
ret
xlat
dec
or
adc
lock
cld
jb
outsb
ja
or
cmp
orb
pusha
loope
pushf
push
pop
mov
pop
adc
mov
mov
mov
sbb
jne
jecxz
inc
and
push
mov
add
fisubrs
and
test
jns
pushf
xor
mulb
mov
inc
cmpsl
ret
jbe
cmpsl
jnp
mov
loopne
mov
rcr
scas
jg
cld
out
popf
dec
sub
adc
push
cmpsl
iret
lods
push
hlt
ss
popf
inc
jmp
adc
or
in
enter
pop
repz
push
push
notl
iret
or
jl
jp
pop
xchg
insb
shlb
aas
add
repz
ret
outsb
test
pop
add
addl
negl
xchg
lods
in
pop
mov
imul
xchg
sbb
xor
mov
repnz
jecxz
js
testl
fildl
pop
sbb
push
mov
xchg
stos
outsb
and
add
add
push
dec
hlt
mov
push
adc
cld
dec
mov
sub
fwait
xor
aad
cmp
fmul
pop
in
jno
incb
adc
adc
jecxz
lcall
pushf
jb
loopne
mov
aas
cmp
movsl
mov
enter
mov
addr16
cltd
into
fcompl
cmpsl
sub
lock
cmp
es
jecxz
rol
cmc
or
imul
mov
dec
xlat
movb
adc
cmpsl
lock
movsb
jle
jbe
fsubs
and
and
ss
je
add
cmp
sbb
hlt
ss
jg
jecxz
inc
sub
dec
mov
testl
shlb
or
sub
sbb
mov
stos
sbb
fdecstp
jno
adc
js
jmp
dec
jle
hlt
lds
in
je
outsl
roll
into
fbld
iret
dec
mov
inc
in
jge
cmc
gs
push
push
xlat
enter
sbb
repnz
mov
mov
mov
pop
inc
mov
cmp
es
cmp
and
stc
jbe
sbb
push
int3
pusha
test
pop
outsl
jnp
jb
pop
jle
push
fnstsw
or
repnz
mov
ret
pop
mov
dec
rolb
pusha
pop
add
mov
jle
dec
pop
xchg
insb
cmc
adc
out
mov
jbe
adc
lods
inc
aas
lock
cmp
icebp
mov
xchg
ja
es
jp
cwtl
pop
cmc
test
add
arpl
sbb
enter
insl
icebp
sub
je
adc
dec
aam
mov
sti
fiadds
repnz
lea
addr16
push
dec
test
rcl
push
inc
pusha
hlt
clc
mov
push
mov
iret
sub
cmc
and
xchg
in
sub
ret
daa
sub
and
loop
xor
sbb
flds
or
mov
xchg
in
sti
mov
out
out
mov
addr16
adc
in
repnz
jge
xchg
les
xchg
mov
mov
flds
mov
add
pusha
pop
cs
je
inc
fmuls
lods
mov
mov
add
iret
in
push
pop
jp
pop
outsl
xorb
push
aas
setp
negl
mov
fs
test
rorl
in
mov
sub
shrb
pop
mov
xacquire
adc
repnz
pop
fwait
xor
fidivrl
cld
repz
fs
cmp
pop
popf
pop
int
sbb
xchg
daa
or
mov
mov
in
repnz
stos
sub
mov
fists
and
or
xor
int
mov
lock
pop
orps
leave
xchg
jl
adc
mov
inc
popa
shlb
nop
jnp
test
bound
les
pop
lret
mov
or
dec
xor
arpl
ja
push
decl
aam
ret
hlt
cmp
test
and
or
push
mov
pop
fs
fwait
stc
shll
push
or
jle
add
xor
adc
sbb
push
leave
and
inc
jb
ret
and
in
stos
cmp
insb
fstl
cmp
movsb
and
addr16
push
scas
movsl
lods
rcrb
out
hlt
and
psrlw
shll
pushf
outsb
pop
add
or
je
movsb
test
sahf
dec
cmp
movsl
xor
sbb
dec
mov
outsb
cmpsb
or
lret
inc
jne
xor
sbb
dec
divl
push
dec
inc
aas
fptan
idivb
lock
mov
add
jnp
jnp
push
inc
xchg
ljmp
xlat
mov
dec
or
cli
jle
popf
insb
shlb
sar
popa
setnp
rcrl
leave
int3
pushl
ret
jnp
cmp
in
pop
enter
call
and
outsl
jno
leave
jl
jp
inc
arpl
rorl
sub
test
pop
sub
dec
out
cmp
daa
add
repz
sub
push
pushf
int
out
xchg
mov
cmp
xor
outsb
push
dec
mov
and
gs
sub
lods
cltd
and
pop
xcrypt-ctr
cmpsl
fwait
data16
fdivrl
imul
sub
xchg
movsl
cmp
shll
sub
shll
aas
inc
call
int
movsb
jo
popf
pop
cmp
fnstcw
sub
divl
mov
or
or
test
mov
jo
imul
and
inc
cmpsb
scas
add
mov
loope
push
repz
inc
aad
lcall
imul
mov
xlat
inc
fwait
adc
mov
or
mov
cltd
and
les
fists
add
fcompl
imul
jge
outsb
cmpb
insb
or
ljmp
xchg
dec
icebp
jno
mov
pop
pop
shlb
shrb
inc
das
cmp
and
pop
aad
popa
inc
jnp
pop
and
adc
push
xor
lret
pop
dec
inc
jb
lret
cmp
repnz
inc
dec
or
xor
cmp
cmp
and
dec
dec
pop
movsb
imul
aaa
pop
push
push
je
insl
xchg
mov
test
shlb
jecxz
jmp
repz
adc
pushf
mov
sub
sbb
sub
sub
mov
adc
push
fstps
and
outsb
test
rorb
je
pop
jb
jns
sbb
nop
mov
outsl
pop
pop
and
pop
fsubs
add
test
or
pop
mulb
insl
cmpsl
mov
sub
inc
sahf
push
sbb
pop
mov
enter
mov
icebp
xchg
adc
and
push
sti
in
out
xchg
dec
dec
mov
mov
xor
push
push
pop
or
push
sub
mov
std
ljmp
jbe
aad
or
imul
mov
jge
pop
pop
insl
mov
sar
sbb
push
fcos
inc
xlat
jns
cmc
mov
push
sub
loopne
or
hlt
mov
cmp
fwait
jnp
mov
xchg
pop
out
fwait
mov
dec
sub
jmp
mov
cmp
cmp
xchg
or
dec
mov
cld
sahf
ret
sbb
and
testb
sbb
faddp
xchg
loope
in
push
cmp
lds
dec
xchg
pusha
arpl
adc
fbstp
fcoml
sbb
jge
test
and
rcrb
inc
ret
add
popa
je
push
xor
out
pop
imul
xchg
inc
movsl
add
adc
mov
and
rcrl
dec
inc
ret
les
xchg
lahf
js
imul
out
pop
stc
mov
out
push
cmp
mov
out
mov
es
stc
jg
sbb
in
arpl
pop
add
mov
sahf
rcr
pop
ret
mov
ss
pop
push
leave
and
mov
jne
push
insb
pop
ret
pop
int
pop
dec
leave
mov
xchg
mov
mov
push
sub
insl
fnstcw
dec
movl
into
jle
enter
add
sub
ja
sub
rol
addr16
pop
clc
jno
cmp
inc
popf
sbb
add
dec
popf
ja
cmpsb
mov
lret
stc
cld
cwtl
pop
xor
xchg
dec
insb
lds
int
xchg
lret
inc
sarb
add
jae
xor
add
lods
inc
xchg
add
fisubrs
dec
cmp
mov
and
sbbl
shrl
jmp
push
sub
loop
mov
cmp
mov
xchg
dec
negb
add
add
fbld
mov
out
in
lods
and
rol
clc
sub
mov
pop
je
pop
outsb
lahf
pop
mov
inc
flds
push
fs
in
insl
aas
xor
int3
jb
leave
adc
fstpl
dec
push
cmp
movsb
adc
jge
scas
mov
mov
ljmp
jnp
leave
outsb
inc
fbld
in
repz
sarl
lds
lahf
lods
jmp
dec
fs
jge
pop
pop
sub
popa
dec
xor
ja
cmpsb
add
jle
sbb
aam
daa
or
sub
scas
adc
inc
movsl
icebp
adc
and
or
aad
test
test
or
dec
push
fdivrs
leave
cld
inc
xchg
mov
xor
pop
mov
push
aam
adc
daa
sub
add
sbb
movsl
leave
xor
push
push
sbb
dec
cmp
add
dec
cltd
mov
daa
insb
data16
lds
pop
pushl
pushf
jbe
pop
fisttpll
or
xor
ret
dec
cmc
mov
mov
cmp
mov
in
sti
xchg
push
xchg
ja
xor
fbstp
addr16
cmp
in
jb
fnstcw
push
or
test
bound
roll
sbb
add
add
loopne
mov
dec
sbb
push
xchg
loope
jle
jg
lods
push
imul
and
aaa
adc
jae
add
mov
push
push
cmc
xchg
add
and
pop
and
push
imul
push
int
and
push
sti
cmp
adc
shlb
das
cmp
add
sbb
sbb
lock
ja
jl
push
insl
test
ficompl
arpl
pop
les
sbb
add
mov
cmp
xor
push
pop
stos
imul
std
and
hlt
push
mov
movsb
mov
lock
lods
stos
mov
mov
inc
xchg
and
mov
adc
cmpsb
ret
mov
mov
je
pop
mov
imul
push
mov
add
bound
js
cmpsl
jae
sbb
mov
test
cmc
aam
dec
or
aaa
and
fistpll
jbe
lods
add
stos
mov
xor
pop
pop
dec
pop
dec
cwtl
dec
add
mov
and
pmaxsw
mov
cs
adc
inc
leave
ss
lds
stc
and
xor
pop
enter
push
lret
pop
hlt
add
cld
ss
dec
mov
dec
mov
mov
pushl
push
or
adc
jmp
dec
lahf
mov
and
xor
mov
adc
mov
mov
or
push
mov
dec
jno
int
inc
out
cld
sbb
test
gs
shrl
jno
popf
pop
cwtl
lock
mov
test
or
ss
out
push
and
mov
addr16
xchg
or
xor
dec
pop
stc
ss
mov
outsl
lret
adc
lret
ja
or
lods
jecxz
adc
addr16
jle
adc
inc
push
jb,pn
xlat
orb
in
dec
mov
inc
xchg
mov
imul
test
test
add
xchg
aaa
jns
mov
dec
xchg
pop
std
rcr
cwtl
push
sbb
imul
stos
inc
cmc
outsl
movsl
pop
mov
jle
mov
aam
fbld
aad
mov
shrb
nop
std
push
insb
mov
or
dec
scas
jbe
cltd
mov
movsl
add
inc
jl
inc
repnz
jne
lret
leave
mov
cld
fldt
data16
aaa
or
cmp
sbb
sub
lcall
push
xor
jp
lret
out
xchg
jo
push
clc
inc
mov
pop
rcr
inc
idivl
push
lcall
ret
lea
addr16
scas
out
sub
ljmp
cmp
test
xor
jmp
pop
cmpsl
mov
jb
sbb
push
mov
daa
filds
add
xor
int3
out
in
sbb
enter
ds
and
or
fmulp
gs
gs
or
sub
or
sbb
lret
lods
xchg
sbb
jge
mov
idivb
push
lahf
sbb
mov
pop
cmp
adc
add
inc
hlt
or
add
fbstp
mov
xchg
jecxz
pop
adc
xchg
ds
mov
cli
adc
fwait
xor
lds
inc
in
cmp
or
adc
das
inc
ss
mov
cli
push
hlt
outsl
sbb
cmp
imul
idivl
lret
ss
pop
loop
push
loopne
ja
out
xchg
scas
out
lock
add
jl
stos
adc
jg
xor
mov
sub
xchg
lret
mov
imul
popf
jg
xchg
lock
jb
das
in
xchg
pusha
inc
andl
cmpsb
das
sub
pop
dec
xor
and
and
repnz
jnp
mov
cmp
movsl
dec
push
out
jne
pop
and
cltd
repz
arpl
scas
mov
shlb
xchg
icebp
pop
cwtl
loop
lock
mov
mov
mov
lahf
loope
mov
mov
sbb
add
adc
call
fsubl
xor
cmp
push
cltd
mov
lahf
das
xchg
fisubs
push
push
add
jb
and
jno
movsl
dec
inc
jle
pop
mov
inc
jle
sub
mov
popa
sub
scas
outsl
cmpsb
ljmp
iret
outsl
pop
mov
sub
hlt
jl
push
cmpb
push
or
lods
add
push
out
dec
aad
or
add
and
dec
xchg
inc
xchg
cmpsl
dec
mov
and
pop
dec
xchg
leave
aam
out
pushl
push
jle
push
pop
lods
insb
clc
insb
imul
mov
xchg
xchg
fsubrs
jle
pop
pop
loopne
cwtl
mov
fsubs
gs
push
mov
sbb
cmp
gs
dec
cwtl
aaa
pop
cmpsb
cli
sub
push
and
adc
loopne
hlt
pop
aas
sub
jl
and
pop
jecxz
jb
xchg
dec
mov
xor
clc
out
cmp
int
addl
cmpsb
inc
insb
pop
xchg
js
jl
jp
and
insl
lds
dec
pop
fistps
std
push
jns
jl
lock
push
out
popf
inc
loopne
mov
movsb
lret
imul
ret
fmul
mov
jo
mov
stos
cli
jae
jbe
orps
jne
in
das
std
inc
xor
mov
pop
and
pop
adc
mov
xchg
pop
xor
insb
popa
fsubs
fldenv
pop
imul
add
rol
sub
jmp
ret
xchg
push
data16
sbb
movsl
and
rclb
push
xchg
xor
imul
pushf
jge
dec
iret
jns
adc
jecxz
fwait
xor
cmpsl
sub
stos
xchg
pushw
lock
xchg
imul
jne
xchg
mov
sbb
jne
mov
mov
xor
xor
test
mov
mov
xchg
jbe
dec
ret
xchg
xchg
std
shrl
out
lcall
jg
mov
inc
jbe
outsl
gs
repz
jno
xor
pusha
jne
cs
ja
adc
les
xor
rcl
sub
movl
sbb
pusha
aam
mov
pop
push
xlat
cmc
repnz
inc
imulb
repz
mov
cmc
pop
sbb
loopne
jle
cmp
stc
arpl
and
push
cmc
or
cmc
sub
aad
scas
inc
or
dec
rcrl
xlat
cli
stos
add
movsl
push
notl
pusha
sub
ret
les
add
ret
mov
mov
jno
addr16
je
outsb
loopne
imul
je
xorb
fnstenv
loope
adc
loope
xchg
adc
add
into
cmp
push
jo
addr16
out
ljmp
xchg
pop
clc
ret
out
lds
push
dec
xlat
in
sbb
xor
cmc
mov
pusha
mov
xor
jp
cmp
pop
sub
inc
fldl
cmc
jl
inc
jno
icebp
pop
jmp
add
fsubs
mov
pop
fnsave
jo
pop
dec
add
mov
cmc
in
shl
pop
jg
rorl
rcll
jae
cld
xchg
pusha
mov
push
push
sbb
mov
fs
sub
mov
fbstp
sub
cli
adc
xor
jb
mov
mov
out
jae
push
in
push
arpl
movsb
ficoml
dec
cmpsb
rcl
push
lds
inc
hlt
add
add
orb
sahf
sub
pop
inc
mov
lods
or
out
pop
sbb
data16
sbbb
mov
add
mov
stos
and
xor
push
dec
cmp
insl
ljmp
ret
adc
es
nop
pusha
sub
xor
or
adc
pop
fs
imul
dec
outsl
jge
or
or
pushf
icebp
cltd
sub
into
jae
jo
inc
inc
and
jg
and
lret
push
in
adcl
pop
xorps
jle
add
or
test
adc
add
mov
insb
adc
fs
in
or
inc
ret
scas
push
mulb
pop
sahf
cmpsb
push
push
popa
and
mov
in
cmc
fisttps
fstpl
shrb
pop
jl
cmp
out
iret
xor
jl
mov
lcall
addr16
enter
mov
dec
cmp
xorb
fwait
mov
mov
pop
test
add
fisttps
push
push
inc
out
pop
pusha
ret
pop
pop
fstps
arpl
mov
jmp
aas
test
adc
int
mov
orb
push
inc
xchg
or
mov
jbe
imul
push
lret
xchg
adc
xchg
sub
jbe
mov
dec
enter
or
adc
dec
mov
dec
adc
scas
pop
adc
lret
xorb
push
jmp
pop
xor
cmpb
cmp
lock
sbb
jae
xor
stc
pushf
shlb
sub
sub
add
aas
xor
and
in
pop
mov
dec
in
sbb
fwait
sbb
orb
fstl
out
jnp
mov
sahf
je
mov
inc
xchg
mov
in
shll
dec
push
hlt
jns
shrb
xchg
sub
stos
cmp
dec
jae
movsl
cmc
adc
jae
pop
xchg
out
push
fs
nop
sub
pop
iret
mov
in
and
sti
inc
jne
mov
pusha
push
lret
xchg
jecxz
xor
jecxz
nop
jnp
adc
push
std
xchg
jbe
scas
arpl
shl
fwait
push
cs
clc
aas
lods
cmp
mov
ret
or
cmp
daa
pop
mov
lock
icebp
out
mov
sbb
std
scas
push
sbb
mov
dec
jmp
test
fbstp
fisubrs
mov
scas
and
shl
test
mov
pop
dec
enter
movsl
push
xlat
ljmp
mov
adc
inc
repnz
push
inc
scas
movb
sbb
movsb
xor
cmp
ss
sbb
mov
scas
fimull
out
loop
fidivs
leave
xchg
add
jbe
daa
in
sahf
dec
mov
add
jl
dec
adc
es
pop
xor
add
imull
add
cltd
pop
mov
jno
aad
inc
iret
mov
js
or
imul
pushf
add
add
mov
rcrb
jge
jo
mov
add
repz
rcll
adc
add
ja
dec
cmp
loopne
xchg
xlat
sub
xchg
fstl
adc
rclb
gs
out
pushf
ljmp
mov
loopne
mov
jbe
cmp
push
and
adc
inc
xor
and
adc
cmp
imulb
fucomp
mov
stos
enter
sub
jo
or
stc
push
jecxz
ljmp
inc
cmp
and
xorb
ffree
je
xchg
stos
lahf
xchg
mov
add
fnstenv
cmp
jo
inc
mov
pop
mulb
loop
inc
jg
repnz
in
sub
pop
pop
inc
jmp
ficoms
and
dec
cmpb
mov
js
mov
dec
xchg
mov
fcmovnb
mov
dec
fs
push
lcall
clc
fstl
ficomps
add
dec
and
test
lea
addb
call
mov
push
call
push
lcall
stc
fsubl
aad
ret
and
pop
jno
subb
inc
lret
lods
gs
pop
mov
ja
adc
dec
add
or
call
xlat
fadds
mov
xlat
mov
int3
jbe
jne
rorb
jbe
lcall
mov
fsts
add
sub
mov
in
sbb
mov
int
and
rcrl
jno
cld
jge
or
test
jns
adc
jg
and
mov
sarl
jbe
mov
mov
pop
scas
pop
fbld
jl
xchg
lret
xor
push
or
out
xor
jl
jnp
and
es
pusha
add
mov
mov
out
pop
add
mov
fwait
aad
inc
nop
sub
sbb
xor
push
cmp
imul
ficoml
movsb
jl
int
xor
data16
xchg
lods
jae
dec
dec
sbb
and
aad
mov
pop
sbb
xlat
aad
stc
call
sbb
sbb
mov
push
pslld
shrl
test
js
and
xor
ror
mov
imul
gs
andl
pop
jl
xor
jg
dec
jg
and
mov
loopne
and
sub
and
lds
stos
scas
pop
test
aad
out
fnsave
stc
mov
adc
fiadds
push
mov
ret
cld
cmp
mov
adc
jns
xchg
lret
jae
scas
pop
mov
sbb
add
fld
shll
std
cs
ds
popa
mov
lahf
cli
cmpsl
inc
ss
pop
out
xchg
ret
push
or
mov
xchg
mov
add
and
mov
sbb
push
out
imul
mov
loope
imul
jecxz
fldl
imull
loop
fstps
arpl
mov
add
dec
mov
lods
outsl
mov
xchg
add
dec
dec
mov
mov
aad
cmp
mov
mov
mov
add
andl
mov
flds
jmp
int3
or
ja
cwtl
mov
mov
add
inc
cmp
sbb
addb
cmc
enter
stos
dec
stc
adc
es
dec
fimuls
lods
xor
stc
ja
popa
mov
inc
ss
jno
leave
std
cmp
xchg
xchg
imul
sub
mov
add
pusha
movsl
xchg
fistps
inc
enter
cmp
loope
into
enter
repz
push
or
mov
js
shl
sti
cmp
sti
jns
mov
or
insb
fisubs
xor
cltd
sbb
fwait
mov
insb
xchg
sbb
pop
lahf
xchg
or
mov
sbb
sub
xchg
adc
fildll
xor
pop
sbb
iret
fcmovb
sbb
mov
leave
sub
cli
mov
jns
pop
pop
scas
enter
or
push
cmp
lret
xor
cwtl
lea
es
paddw
lret
sbb
pop
fdivp
lds
pop
xor
add
lods
test
adc
aad
cmp
jl
pop
fiaddl
test
out
sbb
inc
pop
xchg
je
jmp
jg
dec
in
scas
mov
xchg
mov
push
and
cmp
jg
stos
or
loopne
ret
outsb
dec
inc
sbb
and
std
mov
xchg
fidivl
jno
add
push
mov
lret
pop
cs
ror
aad
int3
insb
adc
stc
rcrb
int
ja
jecxz
push
aam
sub
daa
or
jno
or
and
rep
andl
sahf
mov
insl
ret
dec
inc
mov
pop
stc
addl
add
pop
adc
cmpsl
sbb
jb
xchg
std
aam
pop
cmp
lret
dec
fldt
push
or
dec
xor
and
inc
inc
or
mov
sarb
bnd
cmp
outsl
leave
rcrb
xchg
into
cmc
bound
sub
cli
frstor
xchg
jo
popa
iret
cmp
inc
add
outsb
dec
jae
int
decl
dec
push
ret
xchg
dec
shll
pop
arpl
adc
or
hlt
mov
enter
nop
cmpsl
push
pop
jle
ljmp
rcrl
push
pop
shl
adc
in
jge
pop
sub
or
mov
adc
std
mov
insl
pop
jae
out
not
int
or
inc
fstpl
mov
cld
mov
cmp
mov
mov
fisubrl
xorb
mov
test
stos
aaa
pop
ret
cld
jbe
in
sbb
in
push
dec
scas
jne
je
popa
fcomp
or
adc
mov
and
push
add
or
add
add
dec
cmpsb
cmpsb
push
cmc
mulb
insb
adc
es
jo
sbb
and
mov
xor
loop
sbb
or
das
push
mov
lods
test
mov
test
je
enter
movsl
rclb
aaa
std
dec
dec
sub
jl
pop
into
movsl
jmp
testb
andl
xchg
cmp
sub
add
vmaxps
or
push
inc
clc
jmp
aas
lock
imul
out
pop
sarb
das
aas
mov
sbb
hlt
mov
rcll
les
addl
sub
ror
mov
mov
mov
jns
adc
inc
jne
pop
pushf
push
and
stos
shl
or
jae
test
bound
xchg
xchg
fstpl
aam
jb
push
mov
into
pop
fsubr
pop
push
pop
pop
ret
fldenv
dec
enter
add
sbb
insl
or
loope
push
push
sub
xchg
mov
mov
jae
out
scas
mov
mov
mov
push
les
out
add
mov
mov
adc
outsl
mov
dec
or
sahf
inc
js
int3
adc
shll
mov
sub
stc
sub
pop
push
outsb
xlat
test
aad
add
roll
hlt
mov
cmp
lret
iret
test
jp
add
inc
sahf
ss
add
and
fisubrs
lods
ljmp
addr16
ret
lods
jl
sbb
pusha
dec
cmc
sbb
lahf
aas
ja
fstps
mov
loopne
into
jo
lods
xchg
gs
cmp
mov
pusha
pop
add
popa
mov
pusha
cmp
jp
in
addl
call
mov
mov
dec
cmp
mov
scas
dec
xor
aad
mov
cmpsl
xchg
int3
pushf
lods
fists
jb
aas
fldl
push
in
cmp
push
repnz
sub
pop
lahf
outsb
in
ljmp
cmp
push
xchg
test
int
and
test
xlat
int3
mov
xor
mov
lds
popf
adc
out
or
aad
add
out
add
lret
sbb
jp
mov
fsubrs
stos
lock
adcl
xchg
orl
and
ret
push
cld
in
lds
fs
in
push
lods
movsl
cltd
inc
imul
clc
mov
lods
data16
inc
outsb
imul
mov
pop
fwait
mov
xchg
pop
xor
stos
and
pushf
and
aaa
rol
inc
outsl
pop
shlb
pop
dec
arpl
nop
inc
jae
or
dec
sbb
jle
inc
add
popa
daa
clc
pushf
pop
pop
cmp
jge
das
xor
dec
mov
aam
cmp
cmc
lret
out
daa
jno
negb
inc
adc
xchg
jge
test
push
into
mov
fimull
outsl
pop
pop
mov
ljmp
pushf
mov
lea
shrb
jg
xchg
insb
test
jo
push
aaa
fsub
icebp
jmp
js
xor
fisubrs
rorb
leave
sub
fstps
mov
mov
jns
outsb
mov
or
sbb
push
popa
add
int
add
shlb
jmp
adc
cmp
loopne
sbb
bound
cmpsb
mov
dec
xor
orl
fs
mov
jae
jp
xlat
add
insl
call
cmp
mov
xor
cli
or
icebp
loop
jnp
mov
push
pop
pop
rorl
shl
hlt
pushf
outsl
scas
insl
dec
and
jl
mov
fisubl
into
jmp
pop
orb
hlt
es
mov
lahf
pop
int
xor
dec
fdivl
fs
insb
cmpsb
jno
mov
test
mov
and
sub
adc
and
dec
int3
ret
es
jge
mov
imul
cwtl
xchg
add
mov
push
je
xchg
jae
std
in
xor
pusha
jg
mov
jo
and
xchg
ja
push
jmp
in
gs
out
call
jle
cltd
arpl
iret
inc
das
or
cmpl
popa
dec
repnz
xchg
and
les
out
call
insl
xchg
test
int
mov
sbb
mov
rol
shlb
mov
jbe
mov
inc
hlt
clc
jno
jo
fcmovu
nop
pop
cmp
mulb
decb
fwait
les
cltd
arpl
pop
mov
add
sahf
pop
adc
inc
sbb
xlat
int
sub
pop
ss
xor
ret
pop
pop
hlt
push
jg
arpl
jl
nop
pop
jns
mov
loop
rcrl
fiaddl
lds
xchg
mov
mov
sarl
push
xchg
push
test
and
std
mov
insl
in
dec
xchg
aam
xor
inc
cs
sub
rolb
subl
jno
lcall
cmp
out
jl
mov
mov
and
aam
lods
xchg
jnp
mov
in
into
xor
xor
in
xor
or
xor
inc
cmp
inc
imul
push
jge
scas
daa
jp
pop
pop
loopne
add
aad
aad
mov
cmp
ud1
mov
lods
pop
mov
in
pop
arpl
push
add
fnsave
dec
je
and
mov
inc
aaa
adc
xchg
push
mov
nop
mov
cld
nop
ja
sub
xorb
popf
icebp
push
jmp
push
and
push
inc
es
pop
cmp
cli
and
clc
ss
pop
pushf
or
int3
xchg
sbb
inc
push
shrb
sti
jg
adc
sub
dec
xchg
jg
xor
inc
scas
or
arpl
push
les
repnz
cli
add
shrl
loop
xchg
cmpl
icebp
outsb
imul
popl
mov
push
dec
mov
dec
pop
xchg
enter
push
mov
mov
cmp
push
in
push
rorb
sbb
outsl
or
ret
inc
adc
mov
pop
stos
les
dec
xchg
nop
test
leave
in
xchg
jge
mov
iret
sub
lahf
jg
inc
sub
xorb
in
daa
sarb
sub
mov
rcll
push
loop
jg
sbb
push
xor
xchg
and
xor
mov
push
cmpsb
call
pop
jnp
in
pop
mov
into
movsb
adc
sub
mov
cs
gs
xchg
or
inc
stos
fistps
jne
das
mov
insl
sti
push
adc
fdivrp
sar
xor
in
xchg
sub
dec
mov
mov
xor
cmpsb
push
insl
pop
mov
lahf
int
push
xchg
xor
dec
sbb
mov
add
stos
sbb
out
push
mov
jmp
call
into
sub
int
mov
mov
jp
in
test
inc
loopne
ss
mov
mov
sub
enter
sub
push
lods
sbb
jbe
pushf
inc
push
fcompp
outsb
fidivrs
dec
sbb
cltd
jo
les
loop
fldl
mov
mov
jno
xchg
loope
dec
xchg
loopne
fldt
mov
cmp
push
adc
stos
sub
mov
stos
or
inc
push
cmp
cwtl
add
xchg
pop
push
mov
and
and
push
popf
popf
out
jnp
or
icebp
mov
mov
in
mov
jmp
pop
or
inc
and
mov
add
rorb
and
sub
loopne
iret
loopne
mov
cmpsb
inc
popl
pop
sbb
lock
mov
cli
pop
imul
out
fldcw
jle
mov
sbb
mov
sbb
imul
pop
cmp
aad
add
or
adc
inc
xlat
pop
xorl
imul
mov
lcall
adcl
push
xchg
ja
cmc
bnd
mov
cmpb
pop
sbb
fistpll
ss
or
adc
push
xchg
sub
sbb
fcompl
dec
dec
add
cmpsl
or
lea
rcll
in
rorb
or
mov
pop
sub
jmp
inc
mov
negb
lods
das
xchg
sub
bound
and
push
push
xorl
xchg
xor
cld
mov
push
adc
repnz
pop
jl
pop
adc
enter
roll
push
mov
dec
pop
sarl
cmp
or
popf
mov
out
daa
dec
dec
repnz
cwtl
pushf
nop
jnp
pushf
lock
repnz
rcr
adc
xchg
mov
out
or
cmpsb
mov
fwait
out
push
push
or
adc
lods
sub
or
mov
dec
fidivrl
pop
mov
mov
in
mov
jecxz
lret
mov
mov
loop
jle
cmpsl
jmp
push
loope
adcl
push
andb
and
les
dec
pop
adc
pusha
jo
pop
jnp
mov
cmp
pushf
mov
mull
add
mov
cmp
mov
fdivrl
xchg
and
adc
add
pop
xor
cmp
mov
xchg
jnp
ja
cmpsb
mov
pop
out
popa
mov
je
iret
mov
cltd
stc
sub
jne
aam
cwtl
scas
aaa
loop
mov
jne
push
push
pop
sti
pop
dec
popa
icebp
je
mov
hlt
dec
jns
movb
sbb
pop
daa
enter
test
lods
add
popf
sub
xchg
sub
xchg
mov
cmpl
sub
xor
mov
adc
mov
jl
xchg
ror
or
dec
dec
cmp
push
xor
dec
xor
cmp
mull
outsl
subb
cmpsl
cmpb
cld
shlb
imul
xor
testl
mov
dec
sub
call
mov
dec
lock
in
ja
add
mov
cmp
repnz
and
cmp
mov
fildl
inc
ja
je
jge
out
popa
sbb
add
mov
xor
je
fldt
inc
mov
stc
dec
jb
cwtl
jle
test
ds
pop
xchg
stos
push
arpl
sbb
int
jmp
decb
subl
stos
fisubrs
cld
inc
shlb
adc
mov
popf
mov
ret
xchg
neg
jp
adc
sbb
jg
push
movsb
inc
xchg
xor
push
test
daa
into
cmp
xchg
dec
mov
pop
pop
es
into
and
xchg
xor
mov
mov
rcl
inc
leave
das
mov
data16
fnstcw
mov
xor
cmp
mov
push
sbb
sbb
push
adc
dec
mov
cltd
loop
sbb
mov
in
outsl
jp
xchg
int3
mov
or
dec
jp
jle
mov
add
or
mov
test
fucomip
cmp
fadd
out
fsubl
icebp
mov
mov
movsl
out
sbb
test
les
jp
xchg
xchg
sahf
lds
mov
daa
cltd
push
cmp
mov
sub
aas
ja
jg
and
dec
cld
mov
jnp
xor
push
lods
js
fiaddl
jmp
sub
add
sub
sbb
div
jne
jecxz
mov
xchg
pop
push
sbb
adc
mov
dec
sub
sbb
gs
cmp
mov
or
xor
dec
pop
sbb
jmp
in
xlat
cs
cmpb
pop
arpl
or
sub
iret
mov
push
in
mov
sbb
in
popa
inc
sbb
xor
adc
dec
jp
mov
hlt
leave
cmp
sbb
out
shl
arpl
push
arpl
arpl
add
mov
xchg
hlt
mov
sti
and
mov
xchg
add
fidivs
push
or
cmp
movsb
hlt
dec
addr16
lahf
adc
ds
mov
jo
xor
popa
mov
aaa
and
mov
sbb
fsubl
rcl
out
dec
cmp
cmp
iret
inc
jnp
pop
into
mov
nop
mov
or
daa
inc
pop
mov
sub
mov
mov
mov
mov
pop
inc
int
add
or
into
mov
push
xchg
cmc
mov
sti
and
cmp
test
xchg
repnz
dec
mov
shlb
aas
push
or
adc
lahf
push
fmull
pop
ljmp
into
push
push
cwtl
cs
push
arpl
push
popa
bswap
dec
mov
xchg
fidivrl
lock
inc
sbb
lahf
cmp
mov
pusha
rdmsr
xchg
mov
push
out
push
out
into
jo
push
lret
insb
loop
cmpsb
sbb
pop
sarb
dec
add
and
or
lret
mov
ret
jecxz
mov
lret
inc
push
sti
xchg
jnp
push
arpl
pop
lods
jae
shrb
stc
pop
pop
or
std
aad
ffreep
push
test
into
and
dec
loopne
cmc
vmread
ss
sub
repz
insl
mov
js
pop
mov
aas
add
sarl
scas
roll
lods
xchg
adc
int3
int
fnstsw
xchg
leave
and
int
push
pop
push
das
scas
and
dec
cmpsl
push
arpl
cmp
or
sub
pusha
movb
xor
or
or
pop
cmc
inc
sahf
fdivr
lock
add
mov
ja
fildll
mov
push
jae
inc
and
and
jge
ja
shrl
scas
mov
cs
stos
sbb
jb
jb
popf
filds
sub
aad
fdivs
add
mov
clc
mov
adc
inc
sbb
jle
adc
adc
nop
xor
and
shrb
or
loope
mov
daa
insl
jmp
test
jae
notb
repz
mov
pop
popa
inc
cli
push
js
stos
sar
into
sbb
pop
jp
cmpsl
js
cld
add
pop
mov
mov
std
icebp
pop
cmc
aam
aam
in
popa
ss
dec
sbb
cwtl
inc
and
lock
mov
mov
xchg
and
jbe
xchg
sbb
clc
in
out
pop
mov
int
sbbl
push
push
lahf
scas
mov
leave
or
xor
cmp
imul
sbb
or
inc
movsl
mov
lret
mov
scas
mov
lds
inc
icebp
les
jae
xor
sub
mov
lds
into
xor
inc
das
sti
mov
daa
pop
jne
ss
leave
xlat
stc
push
mov
xor
arpl
mov
or
xchg
orb
into
mov
cmp
sbb
push
cli
mov
test
or
push
xchg
jns
call
xor
mov
pop
pop
sbb
jecxz
mov
adc
fnstcw
sub
mov
mov
push
imul
push
aam
sub
imul
sbb
push
jmp
and
pop
movsb
mov
outsl
popa
out
dec
repnz
sub
test
stos
js
cmpsb
mov
dec
out
dec
jbe
xchg
xchg
pop
pop
icebp
jmp
jp
pushl
xor
push
xor
popf
clc
imul
cmp
jp
mov
mov
mov
sub
adc
pop
jns
jl
outsl
inc
pop
jge
mov
js
add
aad
filds
int3
push
das
leave
mov
inc
or
inc
insl
push
mov
pop
in
xor
lret
icebp
pusha
and
les
push
jle
lret
jecxz
pop
iret
loope
mov
mov
negb
daa
and
mov
into
mov
pop
add
stc
dec
xchg
mov
add
jg
or
data16
pushl
dec
xlat
in
cs
push
test
shlb
adc
mov
pusha
pop
sbb
cmp
sbb
pop
pop
sub
lock
sub
fisttpll
das
imul
inc
mov
and
lds
or
fnsave
adc
rolb
push
cmp
addb
dec
loopne
inc
cmp
leave
outsb
mov
cmp
leave
cmp
push
enter
add
sub
push
cltd
add
cld
mov
call
cmp
hlt
iret
mov
mov
xor
xchg
add
sub
cli
push
sub
mov
stos
insl
ret
sbb
adc
cld
inc
xor
push
bound
sbb
cmc
mov
popl
jns
sbb
sbb
adc
jecxz
sbb
mov
test
cmp
loopne
xchg
pop
popf
movsl
ret
sbb
aam
call
inc
stos
adc
popa
xchg
lret
jecxz
ret
in
mov
inc
mov
cmp
xor
out
jne
or
cmpsb
push
lret
xchg
iret
lea
pop
out
cmc
mov
adc
lahf
aaa
shlb
jle
xchg
enter
hlt
clc
mov
insb
adc
mov
sub
stc
int
fsubr
bound
or
push
roll
ffree
mov
sbb
in
js
or
fadd
add
stos
outsb
mov
mov
stos
shrb
pusha
aad
jnp
leave
test
push
dec
in
and
arpl
outsl
into
inc
mov
add
pop
inc
stc
xchg
adc
lea
xchg
test
dec
cmp
in
inc
insl
mov
adc
lahf
xor
xor
lret
pop
sbb
mov
cltd
push
loope
pop
sbbl
and
cmp
mov
fidivrl
cltd
jmp
push
and
mov
imul
jecxz
je
jo
jecxz
add
adc
cmpb
pop
jg
xor
and
jmp
and
mov
mov
mov
out
arpl
test
cwtl
loope
pop
sbb
inc
dec
push
ljmp
mov
mov
mov
movsb
mov
mov
arpl
fstps
scas
push
cmpsl
mov
arpl
arpl
push
cmp
jmp
mov
idivl
insl
adc
and
dec
ja
lock
jns
pop
movsl
hlt
repnz
cmc
sub
jns
pop
fimull
cmpsl
and
out
mov
popf
sub
cmp
push
push
addr16
mov
jnp
jp
jmp
lock
aaa
fwait
out
in
mov
xor
dec
inc
add
pop
fcmovnbe
out
xor
and
mov
notl
or
xor
movsb
inc
and
loop,pn
out
fnsave
cmp
sbb
sub
data16
add
xchg
loop
or
mov
addr16
jl
push
or
fldl2e
pop
push
xchg
ret
aaa
and
mov
pop
sbb
mov
popf
jns
dec
sbb
xor
fistps
addb
push
fwait
loop
and
aas
movsl
inc
icebp
movsl
test
jnp
pop
mov
jmp
fstpt
dec
adc
push
inc
jp
pop
insl
jle
in
lret
sub
sub
sub
and
mov
mov
rcll
inc
pop
pusha
lahf
add
cmpl
pop
sub
lcall
inc
inc
cmp
jb
jge
ja
sub
push
daa
push
mov
jb
adc
xor
mov
jns
les
push
jl
sub
aas
icebp
inc
hlt
xchg
addr16
sbb
and
incl
jmp
sub
gs
outsb
or
aas
mov
ficompl
push
shr
pop
dec
mov
add
dec
dec
popf
clc
xchg
pop
mov
shrl
lods
rclb
xor
mov
ret
push
dec
shl
imul
mov
adc
mov
scas
push
sub
mov
adc
pop
jno
rorb
xchg
repz
mov
cmp
ss
mov
xchg
dec
cs
mov
add
or
mov
sbb
sub
les
pop
mov
dec
imul
push
imul
cli
jmp
jne
push
test
filds
jecxz
test
imul
fdivrl
stos
mov
push
or
dec
stos
xor
out
inc
outsl
stos
bound
je
shll
mov
mov
xchg
mov
jo
xor
pop
cmpsb
ficompl
mov
jl
push
cmpsl
es
push
insl
jecxz
rol
mov
pop
cmp
pop
inc
xchg
ficompl
xchg
loopne
push
add
out
jns
push
or
push
bound
adc
leave
sub
addr16
xchg
mov
pop
pop
and
jno
dec
mov
loop
sub
pop
sub
repz
int
stos
add
mov
sbb
mov
pop
push
das
jle
fildl
cld
in
or
push
pop
sbb
lds
dec
ret
xchg
mov
jl
scas
repz
jge
call
into
inc
xor
rorl
adc
xchg
lahf
mov
jecxz
out
mov
sbb
add
sub
mov
dec
mov
sbb
inc
pop
addb
pop
xor
xchg
out
sbb
cmc
mov
jb
pop
insb
add
xor
cmc
push
inc
popf
inc
mov
mov
push
mov
xchg
ds
imul
sub
jp
fwait
xchg
and
jmp
lock
lahf
mov
jle
fs
mov
hlt
dec
cli
xor
push
int3
in
fwait
push
dec
aam
enter
fs
adc
loopne
clc
rolb
adc
rol
rcrb
xchg
sbb
jne
fdivl
imul
and
adc
loop
inc
pop
mov
in
enter
popf
cmp
or
xor
aad
imull
mov
mov
xchg
push
inc
or
daa
mov
stc
rcrb
cmpsb
xor
movsl
adc
cvtdq2ps
and
orl
jle
test
mov
mov
sub
outsb
cmc
adc
pop
push
lods
jbe
cmp
imulb
test
inc
sti
xor
lret
movsb
xchg
pop
test
mov
pop
test
fucomp
adc
inc
add
stos
mov
mov
inc
fiadds
adc
xchg
sahf
rcll
pop
outsb
xlat
out
sbb
xchg
mov
and
push
icebp
inc
repnz
shrl
mov
test
movsb
ds
mov
stos
scas
mov
fildll
mov
xor
rolb
jns
call
fwait
jbe
xchg
mov
outsb
nop
adc
addr16
cmp
xchg
mov
call
mov
and
rcrb
lock
dec
aaa
dec
insb
and
mov
xchg
xlat
or
je
inc
push
insl
push
xor
cs
lret
fldenv
mov
sbb
std
mov
rcrl
imul
test
shlb
xchg
push
fsub
jle
pop
dec
scas
jno
stc
aaa
mov
cmp
loope
mov
xlat
stos
or
in
xchg
icebp
inc
or
mov
in
imul
das
and
jbe
shr
jns
rolb
in
dec
xor
mov
sti
jne
jae
or
pop
loope
fwait
stc
ret
add
push
fimull
mov
push
mulb
jle
inc
mov
int
push
loopne
dec
repnz
outsb
jl
ret
in
data16
add
sub
lds
in
scas
scas
adc
loope
adc
and
cmpsl
repz
js
nop
dec
adc
cmp
fisubl
xchg
insl
push
inc
sub
js
or
subl
push
movsb
jne
and
out
mov
mov
sbb
loope
subb
xchg
nop
push
pop
sub
dec
pusha
outsb
sahf
ret
or
mov
sub
scas
aam
push
sub
js
lock
js
aam
pop
inc
mov
loop
into
imul
mov
or
test
add
fmul
repz
xor
inc
push
in
mov
push
push
data16
xchg
jo
aaa
outsl
inc
ljmp
out
lods
inc
mov
ljmp
or
lret
dec
sti
imul
icebp
lods
push
popf
fdivrl
cmp
outsb
fbstp
lea
mov
push
jno
mov
or
cmp
pop
push
lcall
fwait
pop
movsl
sub
les
mov
inc
push
pop
jb
divb
dec
inc
daa
and
inc
pusha
mov
subb
js
pop
in
push
enter
jge
mov
insl
adc
mov
pop
push
sbb
adc
cmc
aam
outsl
pop
shr
pop
ja
or
mov
mov
cmp
xor
jo
pushf
pushf
mov
lea
cmp
and
dec
jg
stos
js
adc
enter
fs
roll
mov
fdivs
hlt
adcb
jge
scas
mov
or
cmp
loop
mov
cmc
enter
pushf
mov
scas
mov
bound
pop
pop
and
jle
cmc
jl
jmp
push
fwait
xor
adc
xlat
pop
mov
push
pop
cmp
xchg
scas
adc
fdivs
pop
jae
mov
jnp
out
push
sbb
mov
sbb
js
shll
rorl
stos
stos
jp
mov
into
adcb
jmp
pop
push
push
notl
xchg
fldenv
jae
inc
add
into
test
xor
icebp
rcl
inc
lock
nop
movsb
popf
scas
dec
sub
insl
xor
ja
mov
leave
mov
mov
or
test
std
sub
and
push
sbb
xor
hlt
pop
call
lods
xchg
jns
dec
iret
push
cmp
call
add
xor
movsb
lret
jns
mull
sub
inc
cmp
mov
dec
mov
and
test
mov
jp
movswl
icebp
or
inc
leave
mov
mov
lea
in
fsubrl
hlt
lcall
cmp
test
ret
push
xor
push
xor
push
mov
nop
adcb
test
popf
clc
pop
mov
jp
fwait
movsl
pusha
sti
leave
xchg
jnp
xor
mov
xor
inc
sub
sbb
sahf
xchg
fisubs
rclb
jge
push
insl
jb
jno
cmp
cvttps2pi
arpl
sbbb
repnz
imul
push
sub
mov
xchg
sub
test
mov
jp
insl
enter
inc
adc
mov
fiadds
lock
jno
jl
fs
jp
je
adc
sub
jbe
adcl
or
fdivs
pushl
popa
inc
jl
or
mov
xchg
popa
pop
pop
ficompl
or
sbb
fwait
shr
lahf
push
popa
out
push
call
test
mov
ljmp
pop
mov
repnz
cmp
mov
cmpsl
mov
lods
xchg
dec
add
and
sbb
mov
jmp
pop
mov
mov
aad
cmp
orl
add
lahf
fidivl
ret
or
pop
into
gs
test
jle
mov
dec
pushf
dec
lahf
push
stos
inc
xchg
imul
mov
shl
push
pop
test
xchg
push
je
ljmp
loope
hlt
aas
mov
push
push
mov
out
xchg
fidivrl
int3
mov
std
lods
fwait
xlat
cs
jo
push
cmp
mov
inc
clc
lods
mov
adc
shrl
out
inc
ljmp
sbb
lods
jecxz
mov
mull
cmp
leave
cmpsb
add
and
pop
jle
ds
loope
popf
mov
cld
mov
xor
aas
mov
arpl
xor
das
aas
mov
dec
add
lret
mov
jne
sub
xor
sbb
pusha
xor
xchg
mov
data16
int3
push
cli
lds
ljmp
rcll
xor
push
dec
sbb
ret
mov
push
push
les
cmpsl
pop
data16
pop
je
or
mov
sub
add
add
dec
inc
jp
and
push
mov
das
lret
lahf
mov
cs
in
insl
test
or
sti
sub
adc
sub
xchg
adc
push
mov
movntps
adc
mov
mov
jg
or
les
scas
jg
mov
lahf
mov
xor
js
push
ret
int
inc
xor
cmp
sti
fdivrl
sahf
imul
outsb
xor
mov
lcall
xchg
subl
je
nop
in
imul
dec
jb
in
in
xor
jnp
add
fnstsw
dec
ljmp
lock
fnsave
les
pop
dec
push
lea
and
add
shlb
in
push
cmpsl
ret
stos
std
cld
movsl
dec
xchg
sbb
pop
test
sahf
cmpb
jae
movsl
mov
repz
sbb
cmp
out
out
out
push
orl
cltd
js
test
push
push
stos
jno
push
push
ret
lock
jb
xchg
adc
cmpl
stos
pop
mov
sub
jecxz
sbb
add
pop
data16
push
pusha
mov
sub
decb
fnsave
sub
sub
leave
rol
ret
pop
sti
sub
push
mov
mov
xchg
mov
sbb
jo
int3
jmp
push
aas
bound
pushf
outsb
test
mov
xchg
leave
xor
cmpsb
aad
daa
sbb
scas
pop
sub
jle
sahf
dec
jno
movsb
and
gs
pop
popa
pop
lahf
movsl
inc
pop
idivl
jmp
enter
mov
xor
push
ret
test
repnz
in
cmovne
int3
ljmp
or
int3
mov
daa
imul
pusha
das
mov
mov
insb
xchg
imul
lods
push
jnp
pusha
mov
in
mov
pop
mov
xor
xchg
jge
jns
dec
xchg
mov
inc
mov
jb
pop
mov
mov
adc
xor
idivl
faddp
sbb
hlt
ss
mov
jmp
sbb
push
push
sub
lret
loope
mov
int3
out
shr
faddl
fmul
sub
in
add
testb
fisttpll
push
mov
mov
dec
xor
sub
mov
adc
fucomi
pop
xchg
mov
dec
outsl
push
aas
mov
outsb
cmc
pop
outsl
xor
mov
mov
xchg
mov
fstl
pop
add
jmp
or
addl
test
scas
pushf
mov
nop
xchg
test
out
outsb
sub
mov
fst
fbstp
out
ss
sub
mov
cwtl
in
or
in
jle
pop
xor
mov
cs
lret
cmp
aad
mov
lds
cmc
out
or
shlb
and
mov
insl
rcrb
cmp
dec
mul
and
mov
xchg
adc
ss
int
into
add
movsb
lcall
inc
cmc
iret
push
loope
jmp
or
jmp
mov
dec
rcl
mov
cmp
jl
cmp
fld1
jmp
lahf
pusha
lret
or
pop
pushf
data16
cwtl
sub
scas
aas
xchg
test
xor
sbb
test
pop
mov
ljmp
mov
inc
shrl
jle
int3
mov
mov
push
fisubl
cs
xor
loopne
sub
add
fmulp
jp
mov
xchg
pop
gs
imul
fnstcw
fmul
scas
xchg
cld
push
pusha
sub
fadds
jecxz
fucomi
into
sbb
faddl
mov
mov
popa
xor
adc
dec
xor
fs
and
sub
inc
out
push
ds
mov
inc
mov
jmp
les
out
jns
movsb
add
push
push
dec
sarb
sti
push
enter
dec
inc
mov
ret
jecxz
pop
loope
mov
mov
pop
aaa
cmpsl
sahf
jmp
fsubp
pop
push
je
loope
pop
loopne
bound
aas
jle
push
mov
adc
sub
add
dec
sbb
cmp
ljmp
push
push
fmul
jmp
shl
lahf
add
das
outsl
push
lods
xor
insb
sub
fwait
dec
push
inc
insb
pop
mov
and
arpl
adc
ficomps
add
cmp
aas
or
dec
jne
xor
adc
stos
push
or
xor
xchg
push
pop
inc
imulb
cs
sub
fcoms
or
and
loop
imul
and
ds
cmp
sbb
mov
inc
dec
jg
fstps
enter
cli
movsl
cli
cmp
repz
mov
push
xchg
sarb
insl
scas
push
adc
dec
push
inc
jecxz
pop
movsl
adc
sbb
mov
cmp
call
jbe
mov
cmc
fstl
mov
add
xchg
pushf
cs
cmpsb
ret
dec
mov
add
insb
cmp
sar
xor
call
std
cmpsl
addr16
inc
xchg
sub
jbe
sub
jmp
test
and
mov
ljmp
pop
cmp
mov
jae
cmp
addr16
lods
fsubs
jmp
loope
std
pushf
lahf
mov
lret
das
loop
cmp
cmp
cwtl
or
cli
adcl
stos
mov
and
pop
xchg
xor
and
ja
mov
cmc
jmp
cltd
insb
rcrb
sub
jae
pop
lds
aaa
dec
pop
xchg
push
mov
cmp
mov
push
ret
mov
dec
jne
lret
mov
pop
scas
icebp
lock
xchg
pop
cmp
mov
jle
sub
jge
jno
add
sub
mov
push
aas
jnp
sub
pop
pop
and
inc
ret
lds
outsl
sarl
or
mov
jo
mov
dec
sub
add
imul
dec
mov
into
andl
out
stos
dec
stos
push
sbb
cmp
loopne
bswap
xlat
xchg
inc
out
fidivs
js
mov
inc
mov
out
cmpsb
loope
xchg
or
arpl
dec
pop
or
fs
sub
loop
sbb
out
lea
rorl
and
mov
cmp
movsb
ret
jmp
jp
jae
dec
mov
inc
lahf
cmp
jns
pop
js
mov
cmpsb
into
pop
jle
rclb
ret
cmp
pop
pop
in
pop
xor
mov
aaa
iret
sub
mov
lea
stos
call
cmpsb
jnp
dec
std
popf
push
lret
into
lret
cmp
pusha
aad
xchg
je
arpl
scas
dec
sub
inc
jl
insl
cmc
push
scas
insb
jmp
out
inc
mov
je
sbb
sahf
mov
ljmp
cli
testl
addl
and
popf
cld
test
push
leave
hlt
cwtl
je
jp
std
sbb
or
mov
loope
ja
pop
pop
test
mov
cmp
mov
fdivrl
and
jmp
jo
aam
in
mov
movsb
or
imul
pop
js
and
mov
lds
xor
push
and
dec
or
jo
and
pop
or
xchg
dec
and
ret
xchg
xchg
test
pop
mov
jne
rorl
mov
mov
leave
or
aad
inc
or
sub
dec
jecxz
mov
mov
popa
push
cmp
dec
jl
mov
xchg
ljmp
pop
daa
movsd
cmp
loopne
xchg
pop
add
lahf
and
sbb
and
inc
fisubs
jecxz
xchg
lea
jmp
loopne
fistpl
pop
ficoms
pop
sbb
xchg
scas
mov
adc
in
sbb
jge
jbe
or
and
les
push
pop
pop
mov
mov
mov
lret
movsl
cli
clc
mov
adc
jecxz
call
sti
cltd
pusha
add
cmp
js
inc
pop
addr16
sbb
es
adc
lods
cmp
mov
mov
xchg
pop
mov
ss
jp
xor
jns
mov
repnz
mov
push
ds
xchg
andl
mov
in
loop
jbe
push
or
pop
push
or
xchg
int3
pop
mov
inc
sarb
sbb
in
out
mov
xchg
in
jmp
mov
xchg
fs
inc
sbb
cld
add
xchg
shll
loop
adc
jge
dec
fcmovb
es
ljmp
pop
xor
dec
or
and
ljmp
inc
shrb
dec
mov
xchg
add
push
mov
inc
xchg
fdivs
or
xchg
and
subl
lds
adc
pop
mov
mov
jle
and
aam
push
jno
push
fucom
xchg
les
daa
push
js
int
sub
shl
jg
cmc
pop
std
push
jnp
pop
aaa
orb
inc
imul
pushf
not
and
sub
cmpsl
push
notl
push
call
or
pop
mov
and
aas
dec
mov
into
rcl
inc
adc
jae
mov
jp
dec
adc
pop
push
pusha
ljmp
inc
add
int3
pop
and
repnz
cwtl
mov
enter
push
insl
pop
ficompl
adc
xor
pop
xchg
dec
out
mov
imul
or
lea
lcall
add
lahf
fwait
test
lcall
mov
data16
loope
jge
insl
aaa
sub
out
loop
test
aas
or
sbb
imul
and
je
push
dec
pop
int3
and
cmpsl
in
lret
xchg
adc
insb
mov
jb
fwait
wbinvd
mov
add
add
and
les
aam
lahf
in
stos
inc
sahf
hlt
push
bound
leave
cmpsb
daa
dec
pop
sub
mov
repz
adc
sub
fistl
inc
mov
push
jns
sub
jnp
jno
mov
movb
std
sarl
fwait
cld
push
js
mov
addr16
outsb
ss
pop
jp
les
dec
lods
sub
inc
inc
pop
cmp
mov
adc
inc
push
mov
xor
dec
outsb
push
scas
sbb
pop
mov
pop
xchg
data16
stos
or
inc
in
push
cs
or
out
or
mov
shll
sti
and
dec
cld
sbb
mov
addr16
gs
movsb
shlb
pushl
jge
add
adc
mov
nop
xchg
test
in
inc
xchg
add
daa
or
call
pop
cmp
test
cmc
inc
lods
ret
mov
ret
fldt
dec
sbb
lahf
add
cwtl
push
les
sub
pop
jne
cmp
clc
out
scas
jg
leave
mov
cltd
aaa
leave
add
mov
out
or
xchg
jae
aad
hlt
inc
shlb
enter
inc
xor
ret
sub
out
movsl
mov
mov
imul
xor
xchg
das
xchg
add
cmp
cli
ss
xchg
mov
aaa
cmp
or
test
and
and
xchg
inc
add
fisubl
sub
pop
leave
mov
xor
testb
clc
adc
pop
nop
gs
add
push
lret
or
pop
cmp
jl
in
mov
cwtl
fidivl
mov
and
dec
mov
shlb
push
cmp
aas
or
sbb
lret
decl
cwtl
aas
pop
scas
jb
jo
jmp
push
or
sub
sbb
orl
cs
insb
lock
dec
nop
inc
sub
jne
mul
and
mov
push
xor
xor
lea
dec
and
into
int3
mov
addr16
aas
dec
push
lcall
jl
pop
mov
hlt
imul
pop
adc
lahf
sbb
cwtl
daa
rorb
cwtl
mulb
sbb
xor
jae
negb
lds
and
inc
lods
adc
mov
pop
dec
dec
inc
mov
fwait
lods
add
jg
cs
js
add
jns
push
jno
ret
sbb
aas
sahf
or
incl
mov
mov
stos
mov
pop
lods
xchg
jmp
or
nop
and
xor
fwait
inc
test
inc
cmp
push
test
jnp
popa
sub
or
or
mov
js
inc
idivl
sbb
je
cli
negb
in
in
cld
arpl
xchg
arpl
mov
xchg
out
jg
outsb
adc
outsl
sahf
cmp
ss
imul
xor
sbb
je
inc
mov
repz
test
push
inc
imull
mov
dec
pop
scas
arpl
jl
dec
cltd
ret
mov
mov
mov
xchg
enter
jp
inc
test
jbe
add
sbb
insb
vmread
daa
stc
mov
push
arpl
std
cbtw
mov
xchg
sahf
xchg
mov
cmp
ja
out
dec
out
xor
dec
sub
adc
dec
or
mov
testb
imul
das
xor
sub
lahf
shlb
mov
cmpsl
sub
jmp
aaa
xchg
pop
popa
fucomi
pop
adc
jnp
dec
xchg
imul
mov
test
or
cwtl
lock
add
xchg
adc
mov
fs
mov
or
stos
push
int
daa
ret
jg
push
sbb
jecxz
mov
fldt
test
add
sti
js
mov
shlb
pop
sub
mov
repnz
xchg
leave
ljmp
incb
push
fdiv
in
dec
outsl
push
xchg
jmp
push
pop
inc
shll
in
sub
jmp
inc
push
mov
inc
mov
lret
push
mov
mov
in
mov
loop
movsb
jle
jg
jecxz
mov
xor
jns
inc
xor
rclb
and
xchg
jge
punpckldq
push
xor
dec
cli
test
hlt
scas
lea
cmp
aas
jg
pop
dec
mov
add
jmp
das
cmp
out
add
mov
cmpsl
lds
push
add
inc
mov
sub
cmpsl
push
popa
adc
inc
add
hlt
fidivl
outsb
adc
or
adc
mov
and
mov
and
addr16
xor
xchg
fs
push
mov
in
inc
in
ds
cmpsl
lret
pushf
sahf
add
push
in
jg
sub
or
pop
aas
cltd
mov
jmp
aas
daa
stc
xchg
pop
lret
in
mov
xchg
mov
aas
test
aad
std
mov
dec
int
sub
lock
cmp
push
les
cmp
jl
inc
clc
ret
rclb
lods
fs
test
lret
repnz
popf
inc
data16
dec
ds
xor
pop
test
test
pop
mov
adc
ret
add
xorb
roll
lcall
in
push
aam
clc
push
gs
or
popf
xor
add
inc
push
push
xchg
daa
pop
int
mov
dec
nop
js
add
add
push
out
sub
out
sarb
shl
stc
push
inc
or
int3
outsb
xor
and
jno
mov
sbb
sub
cli
inc
fsubrs
enter
cmp
scas
push
add
les
in
test
cmp
icebp
mov
dec
daa
push
loop
rclb
enter
test
arpl
sub
cmc
rorl
fldt
int
std
test
mov
sub
add
lret
xor
imul
loope
push
xchg
jp
test
lea
stos
jo
cmpsb
aas
pop
pop
das
lods
das
jo
jmp
cltd
sbb
mov
lock
paddusw
rcr
cmp
call
shrb
scas
inc
aam
pop
sbbb
pop
cmp
and
xchg
in
in
ret
pop
push
sub
cmpsb
pop
cli
int3
pop
or
xchg
je
shlb
lock
adcl
sub
sbb
movsb
push
mov
push
mov
mov
adc
pop
jne
mov
insb
jl
fistpl
outsl
in
dec
in
mov
xor
es
cmp
mov
xor
and
sub
mov
repz
outsb
mov
hlt
in
mov
subl
add
and
inc
andb
mov
int
inc
inc
adc
in
mov
adc
dec
in
lgs
mov
pusha
lret
pop
jecxz
sub
loopne
leave
mov
lds
arpl
enter
adc
fbld
mov
xchg
cmpsb
in
or
imul
sti
fs
push
sahf
xor
movsb
fsub
imul
data16
test
mov
cmpsb
or
push
mov
cmp
sbb
add
repz
testb
arpl
jnp
xorb
inc
xor
mov
out
jl
and
jns
rorl
cmp
and
inc
sbb
insb
jmp
cmpsl
adc
ljmp
or
jnp
loop,pn
dec
pop
inc
xchg
push
inc
pop
pop
ja
add
push
enter
clc
sub
cs
dec
xchg
ljmp
out
or
shlb
mov
fsubrl
xchg
sbbb
aaa
js
mov
push
adc
and
pop
xor
and
jbe
xchg
mov
or
adc
mov
mul
fldcw
sbb
sub
cmpsb
mov
and
idivb
push
divb
sub
push
pusha
mov
sarl
je
lds
clc
lods
mov
movsl
pop
adc
popf
aas
mov
xor
inc
jmp
ja
jecxz
mov
or
adc
mov
pop
mov
sti
ffree
pop
sbb
imul
mov
sub
adc
or
mov
call
xor
lahf
jle
in
int
fldl
int
push
cmp
popf
mov
add
xchg
pop
mov
mov
clc
jb
aam
sti
jge
push
mov
mov
adc
rolb
pusha
and
mov
adc
fxch
fldcw
lret
add
sbb
test
mov
pusha
adc
and
mov
push
outsb
dec
push
lret
psubd
idivb
jo
lret
sti
sarb
ds
sbb
and
mov
push
fisubl
dec
xlat
cmp
mov
iret
aad
icebp
fmull
out
cmpsb
jbe
pop
cltd
loope
sub
mov
add
fiadds
cmp
and
stos
sbb
movsb
mov
mov
es
fisubrl
mov
adc
iret
pop
pop
inc
test
insl
sub
lods
sbbl
je
mov
push
mov
imul
jno
xlat
mov
and
add
push
lea
ds
or
mov
jno
mov
popl
xchg
fcomp
out
sbb
xchg
mov
jb
popf
in
lods
test
les
xchg
lret
repnz
push
xchg
inc
lahf
clc
jmp
xchg
icebp
push
sub
dec
xchg
dec
sbb
test
rcrb
mov
dec
daa
xorb
int3
movsb
and
popa
push
push
shlb
out
hlt
cmp
xchg
xor
lods
cltd
aad
mov
insb
jne
outsb
pop
xor
lea
cmp
out
and
fnsave
sti
jo
addr16
xor
mov
cld
aad
cwtl
popf
int
aam
std
cmp
mov
scas
jnp
cs
or
xchg
repnz
mov
jnp
sbb
hlt
imul
sbb
inc
mov
push
ret
ja
add
jp,pn
into
pop
adc
mov
iret
outsb
or
stos
sub
loope
adcb
xchg
insl
mov
pop
mull
and
dec
enter
fnstenv
sti
cmp
cwtl
shlb
shlb
adc
cmp
mov
out
lock
fnstcw
sub
lods
mov
cs
in
push
mov
sub
aam
aaa
icebp
cmpsl
jno
outsb
into
das
fmul
mov
mov
gs
pop
repnz
cmp
pop
fcompl
sbb
in
shrl
jmp
scas
scas
outsb
ret
push
ficomps
fcomi
xchg
cmp
or
lods
scas
sahf
xor
inc
mov
jmp
jmp
sub
mov
clc
or
inc
loop
push
cmp
cmc
loope
aam
les
fstp
push
roll
mov
push
jo
push
add
jno
pop
and
fldcw
pop
adc
jle
movsb
mov
mov
sbb
mov
movsl
sbb
andb
adc
pop
pop
ficoml
push
cmp
xchg
fadd
and
insl
paddusb
das
loope
jge
outsb
mov
pop
push
sar
imul
in
mov
cmp
cmp
push
pusha
xor
sub
mov
jb
xor
dec
fistl
shll
loop
lret
and
jne
push
sub
mov
fs
and
cmpsb
sub
test
nop
inc
and
cmc
int3
sub
pop
mov
xchg
mov
gs
jno
inc
mov
daa
ret
cmp
push
imul
cmp
jne
dec
into
popf
xchg
dec
pop
mov
mov
push
xchg
sbb
scas
inc
in
testb
and
cmp
xchg
outsb
js
mov
int
lea
out
icebp
outsb
add
or
les
ret
xor
jp
sub
ffree
loop
insl
out
mov
sub
in
imul
and
jns
stc
dec
add
sahf
inc
mulb
cld
pop
pop
inc
repnz
aas
sbbl
leave
xor
lret
push
dec
fs
push
pop
cwtl
jge
enter
pusha
pop
dec
mov
add
xchg
shll
mov
enter
mov
repnz
negb
sahf
xchg
lods
dec
jle
mov
hlt
xor
push
dec
loop
xchg
add
sub
and
lds
jne
pop
sub
fdiv
loope
sbb
cmp
roll
mov
hlt
mov
add
inc
xor
mov
inc
stos
subl
jp
dec
cmp
in
cmp
lahf
lea
xchg
xchg
and
xor
or
int3
jne
rcrb
stos
lods
xor
push
jo
aaa
pop
inc
repz
sbb
in
jge
fstps
dec
add
jl
xchg
test
aad
fldenv
cmc
cld
and
xor
cld
mov
jp
pop
lock
or
push
xor
fidivrs
js
rorl
mov
mov
std
fistps
arpl
jbe
lahf
stc
mov
pop
pop
cmp
and
lock
daa
insl
lea
mov
jno
mov
std
ret
enter
es
cmp
sahf
in
adc
cmp
cmc
jae,pt
cltd
nop
and
pushf
lds
inc
in
lea
mov
or
out
les
mov
stos
or
pop
xor
push
push
imul
xchg
pop
or
ss
or
xor
jle
and
dec
mov
rcrb
popf
xchg
pop
jmp
pushl
cmc
sbb
push
dec
mov
inc
leave
dec
sub
add
hlt
sbb
sarl
into
bound
add
aam
mov
sub
xchg
leave
push
sbb
push
sarb
nop
ljmp
imul
push
call
movsb
pop
adc
outsb
dec
mov
cmp
and
pusha
aas
mov
sbb
lcall
sahf
lods
ds
aas
mov
jo
adc
pusha
pop
scas
cmc
adc
mov
push
jl
jb
jmp
gs
inc
sub
pop
jmp
cmp
jo
incl
sbb
mov
push
das
xor
stos
sub
loopw
mov
mov
iret
pop
adc
jae
movsl
rolb
nop
add
push
mov
scas
jne
adc
leave
popf
mov
test
sbb
ret
das
loopne
mov
bound
mov
dec
idivb
jb
mov
lods
and
add
pushf
jl
ret
xchg
push
jl
jg
pop
inc
jo
movsb
mov
les
rep
push
dec
xor
js
ds
mov
insl
pusha
mov
dec
ds
xor
jns
push
mov
dec
xchg
stos
scas
sub
mov
cmp
cmp
jp
stos
add
stc
or
sbb
inc
enter
ds
rclb
mov
cmpsb
inc
sub
insb
and
fadds
add
xor
fiaddl
push
or
mov
sub
popf
shrl
popa
in
sbb
insl
sbb
jbe
fisttpl
outsb
mov
push
sahf
out
sti
mov
inc
jnp
jmp
test
or
clc
in
ss
xchg
and
filds
mov
adc
jae
cli
or
jmp
sub
dec
push
or
aad
or
xor
add
subb
mov
mov
sbb
mov
and
mov
ds
test
push
jno
into
and
bsf
shlb
add
fucomip
imul
fnsave
mov
in
push
dec
ret
ret
jl
mov
loop
shlb
imul
repnz
into
xor
dec
inc
push
push
nop
mov
mov
subb
bound
mov
cs
scas
push
push
repz
add
sub
test
jne
ds
mov
push
clc
lret
mov
test
fdivr
adc
dec
cltd
cli
and
fsubrs
aad
pop
pusha
call
jmp
fsubs
xchg
fistps
mov
inc
test
in
je
lahf
jle
cmp
add
shlb
mov
cmp
fadd
call
mov
fnsave
xchg
push
mov
fidivrs
and
scas
xchg
jns
or
xchg
loopne
jno
out
add
and
jnp
sarb
pop
jge
ja
mov
xchg
pop
es
in
and
mov
lret
xchg
lods
jl
mov
sub
or
sub
cmp
and
cmc
stos
es
pusha
subb
cltd
dec
lds
lahf
mov
push
fwait
clc
decl
mov
jmp
and
sub
jbe
push
insw
out
lahf
loope
mov
rcrl
dec
and
je
or
jo
jno
sbb
icebp
mov
mov
push
loop
cmp
push
dec
rcll
inc
pop
mov
ja
rol
lods
add
lock
aam
je
jmp
ret
inc
mov
sbb
sbb
into
xchg
clc
ljmp
lea
mov
outsb
adc
shr
sar
divb
lret
jmp
dec
sbb
int3
cmp
mov
out
jle
test
insl
cmc
jns
orb
inc
mov
sti
pop
dec
lods
push
js
idiv
jl
in
sbb
pushf
and
xor
hlt
and
ficoms
mov
adc
mov
data16
push
sbb
sub
lret
bnd
pop
adc
jae
lret
cmp
push
cli
stos
jb
pop
outsl
push
push
data16
ror
daa
xchg
fs
pop
ret
aaa
jo
fcoms
into
or
pusha
sbb
mov
shr
inc
imul
out
and
in
xchg
or
repz
rep
pop
das
repnz
pop
jl
out
stos
or
xor
sbb
add
push
in
mov
mov
imul
cmp
inc
pusha
xor
bound
into
popl
arpl
push
hlt
test
or
rolb
or
mov
shlb
into
gs
sbb
sbb
mov
insl
dec
and
xorl
pop
fsubrp
iret
lcall
push
xor
jnp
aaa
insb
test
or
fistps
popf
out
jb
js
and
inc
pop
mov
jo
xor
push
jl
fiaddl
in
pop
inc
pusha
mov
jne
mov
sub
mov
and
in
hlt
into
xor
sbb
repz
cmp
inc
fstpl
fs
inc
popf
dec
adc
pop
test
inc
enter
cmp
fisttpll
ret
aaa
aaa
push
repz
ss
jg
sbb
mov
out
xchg
add
push
cltd
pop
pop
mov
fs
repnz
dec
shrl
shll
cmc
or
rcrb
jbe
test
loope
fs
xor
hlt
sti
mov
dec
pop
fadd
lea
outsl
sbb
lods
in
movsl
jp,pn
mov
adc
jmp
xchg
or
stos
outsl
pop
ficoms
and
mov
adc
add
rorb
lods
add
mov
sahf
arpl
pusha
pop
fsts
mov
cld
add
mov
xor
mov
clc
imul
adc
cmpsb
rcrb
nop
test
jp
sub
pop
ds
fcompl
sbb
jo
out
jl
arpl
push
repz
daa
inc
fisttps
fisubs
push
or
mov
leave
mov
addr16
cmp
cmp
aam
cli
cmpsl
je
fstl
stos
sbb
cmp
cltd
ja
in
test
cmp
test
push
mov
xchg
test
hlt
icebp
jmp
lods
in
xchg
xor
pavgb
mov
cwtl
pop
aad
jb
jl
xchg
dec
dec
enter
sarb
dec
ret
xchg
sbbb
cmp
sub
jp
hlt
sub
pushf
frstor
add
jl
or
add
call
and
scas
pop
or
aad
movsl
gs
iret
shl
rorl
push
sahf
fwait
jp
jg
insb
mov
cmp
mov
xor
enter
xor
movsb
fldl
mov
mov
jb
popa
xchg
jns
int3
in
and
pop
addl
nop
daa
jg
imul
mov
sub
mov
cmpsb
clc
or
mov
in
cmp
xchg
lahf
fcmovnbe
neg
in
push
scas
pusha
push
outsb
out
mov
jl
sbb
inc
push
dec
pop
inc
movsb
and
jo
popa
or
rcrb
ljmp
pushf
std
bsr
shl
aaa
fwait
test
gs
jp
cmpb
push
lods
xor
push
add
mov
enter
or
push
push
mov
xchg
mov
int
loope
jbe
ret
fistl
dec
add
xor
imul
data16
dec
cmp
int3
sti
les
mov
lahf
push
stc
mov
dec
push
push
andb
bound
mov
or
xchg
mov
push
mov
xchg
sbb
arpl
sahf
or
cmp
mov
js
mov
jo
rolb
sbb
leave
xchg
adc
pop
movsb
or
sub
jae
mov
pop
lahf
push
sub
fsubr
push
sub
loopne
repz
sarl
adc
mov
jp
cld
icebp
aas
xor
pop
inc
pop
aaa
andb
cld
mov
lahf
dec
push
bound
cs
fsubrs
lods
in
idivl
in
xchg
js
sarl
adc
les
in
outsb
movsl
fisubs
int
aad
sub
cmp
repz
push
ficomps
adc
out
in
dec
mov
in
popa
sub
dec
and
and
pushf
mov
adc
adc
test
cmp
repnz
fdivrl
xor
pop
jecxz
in
pushf
test
add
pop
add
call
push
insb
data16
push
scas
lock
stos
sbb
mov
dec
sub
rcl
rcl
repz
mov
lods
lea
cmp
mov
dec
sub
bound
gs
xchg
lods
inc
adc
or
out
mov
lcall
adc
and
mov
sub
cmpsl
jbe
cmp
add
mov
fiadds
pop
dec
andl
fldenv
pushf
mov
or
popa
nop
xlat
cmp
push
mov
jno
push
inc
cltd
push
sub
arpl
sti
ret
xor
inc
adc
pushf
shrl
jg
repnz
mov
pop
dec
rcrb
stos
fcoml
pop
cltd
jle
dec
xor
mov
push
sbb
pop
enter
cmp
sub
push
es
addl
dec
test
test
adc
dec
push
shl
xor
mov
sahf
mov
sub
add
pop
pushf
cmp
lahf
mov
jmp
xchg
sahf
icebp
es
mov
filds
stos
clc
jmp
mov
out
mov
rcrl
loopne
push
imul
cmpb
sti
mov
jne
mov
mov
int
add
inc
or
idiv
mov
test
aam
mov
xchg
push
cmp
lret
rcrl
popf
push
lds
lea
fucomi
insl
jbe
out
add
pusha
dec
lret
jne
pop
movb
push
mov
mov
mov
js
popa
mov
xchg
mov
cmc
rorl
mov
push
test
push
xor
rcll
pushf
or
jmp
jl
cmp
aas
jge
push
test
sarl
push
ljmp
mov
dec
je
int
outsb
dec
imul
cmpsb
mov
pusha
mov
jmp
lret
xor
fsubrp
sbb
and
jns
dec
mov
inc
std
daa
or
mov
mov
stos
dec
push
inc
stos
jno
pop
in
or
add
mov
sub
mov
push
mov
mov
loop
movsb
dec
mov
ss
test
sub
dec
in
xlat
fstpt
mov
push
les
inc
int3
fldt
test
or
ljmp
imul
lods
fmull
adcl
lret
cmp
in
mov
cmp
pusha
add
jno
ljmp
push
xchg
mov
fildl
in
out
int
dec
ficoml
ret
cmp
fildll
ds
mov
jl
mov
mov
push
pusha
mov
inc
mov
imul
cmp
add
fnstsw
fstp
cld
pop
inc
stos
adc
push
std
jae
pop
out
xchg
repnz
mov
icebp
in
pop
fucomp
imul
in
cmpsl
ja
xchg
mov
or
pop
insl
div
call
out
imul
ret
out
jo
orl
jl
or
dec
out
inc
mov
mov
cmp
aas
cmc
stos
mov
incl
cmp
cmc
repnz
push
rorb
addr16
outsl
aaa
pop
test
lret
pop
xchg
repnz
bound
sbb
aad
lea
jg
or
adc
sub
sub
daa
fs
sbb
xlat
ret
scas
mov
pop
add
sub
lahf
ss
movsb
call
mov
insb
sbb
or
int
mov
aam
popl
and
xchg
repz
push
inc
stos
scas
aaa
adc
neg
or
popf
cmp
cmpsl
sahf
mov
int3
cli
fs
lret
cmpsl
xchg
and
outsl
sbb
xor
mov
cmpsb
or
mov
pushl
pop
cld
int3
ret
sti
fisubrs
dec
cli
iret
cwtl
dec
jp
pop
sbb
or
in
jecxz
jg
leave
inc
out
pushf
fcomip
loope
mov
sbb
cmp
inc
into
add
lock
mov
xchg
jl
cltd
fadds
lret
rcrl
xchg
fists
adc
sub
outsl
fincstp
lcall
aas
dec
fdivs
or
jl
mov
rcl
push
aad
and
xor
out
lods
incl
mov
fldcw
inc
scas
dec
push
icebp
xlat
mov
xchg
sbb
daa
xchg
nop
repz
aaa
dec
cmp
cld
lods
das
loopne
mov
arpl
adc
ret
mov
xchg
mov
mov
jno
loope
mov
stos
dec
jge
sbb
dec
pushf
arpl
aaa
fbstp
pop
adc
call
in
jb
mov
and
or
loope
pusha
mov
xchg
and
iret
push
cmp
xchg
movsl
xchg
push
scas
test
lea
stos
lods
ret
call
add
clc
insl
cmp
jg
repnz
add
fisubs
inc
xor
cmpsl
lahf
or
adc
push
stos
xchg
arpl
repz
mov
push
test
adc
mov
xchg
mov
push
cmp
ret
jg
out
into
inc
pusha
sti
out
stos
orl
enter
sbb
dec
cwtl
xlat
pop
push
xlat
daa
adc
push
repz
mov
jg
aam
push
adc
mov
mov
stos
inc
cmp
add
inc
mov
fmul
dec
inc
ret
into
or
in
lahf
add
retw
lods
or
test
or
push
lea
shrl
lret
sti
cmp
cmpsb
cmp
mov
stos
mov
into
push
loop
fadds
jl
jb
fsts
mov
sub
aad
sub
sub
insb
loop
and
or
mov
std
jo
cmp
fwait
add
pop
mov
leave
bound
inc
test
rcrl
test
out
xchg
lods
cld
add
sbb
call
adc
mov
les
push
cmp
xor
adc
sti
cmp
pushf
xor
mov
aas
iret
pop
shrl
pop
mov
mov
inc
dec
dec
mov
add
in
sbb
rorb
lods
or
dec
rcrl
inc
xorl
dec
xchg
xor
cmp
mov
push
pusha
sbb
les
sub
sbb
pop
rorb
test
lods
jp
add
imul
mov
mov
js
push
fidivrs
aam
add
aam
sub
add
scas
jno
pop
sub
stos
les
clc
cld
push
ds
mov
testb
xchg
mov
dec
lods
pop
daa
or
test
sub
dec
test
mov
or
pop
pop
cltd
push
fidivl
jmp
xchg
xor
dec
sub
lret
cmp
ficompl
jp
jns
pushf
xchg
sbb
int
lret
notl
aas
repz
jl
push
xchg
scas
outsl
addr16
lock
dec
lds
ret
fistps
adc
aad
insb
pop
sbb
cmp
add
idivl
sbb
pop
cwtl
dec
stos
xchg
movsb
iret
jne
sub
cmpsb
frstor
out
sbb
lds
adc
popa
adc
inc
mov
xor
sub
out
inc
lahf
push
out
shll
cmpb
push
ds
mov
cmp
push
xor
incb
outsl
sbb
rcrl
popf
xchg
xor
push
ja
jle
pop
or
inc
cmp
cmc
or
cmc
add
add
inc
hlt
jno
insb
int3
lock
int3
or
or
adc
ds
push
sti
pusha
cmp
push
adc
xor
lea
mov
and
pop
jae
mov
jge
es
inc
test
mov
test
xchg
ss
out
repz
sub
sahf
imul
jle
popa
dec
loopne
jae
or
mov
mov
xor
cmpsb
andl
dec
and
adc
dec
leave
and
dec
ret
outsl
dec
out
mov
fnop
jae
daa
loop
pop
or
cld
pop
mov
insb
mov
push
adc
arpl
adc
mov
jb
dec
adc
sub
cmp
xor
mov
pushf
xchg
push
mulb
pop
mov
pop
sbb
daa
aas
mov
cmpsl
arpl
push
les
mov
jb
lds
aad
in
cli
xchg
add
xor
xchg
or
inc
sub
push
sub
inc
iret
in
cwtl
ret
movsl
jmp
inc
test
inc
dec
lea
cld
push
push
jno
fdiv
jb
and
call
xor
arpl
xchg
aaa
sarb
lods
mov
inc
cltd
ljmp
jno
cmc
adc
mov
mov
mov
add
jecxz
loopne
mov
pop
mov
pop
imul
lods
popa
cmp
jb
mov
frstor
shlb
es
inc
mov
mov
cmp
test
inc
pop
in
push
mov
jmp
nop
push
movsb
js
imulb
fadds
xor
xchg
rcrl
les
xchg
loopne
int3
movsb
imul
jne
ss
xchg
ja
jbe
xchg
push
pop
add
out
mov
xor
mov
cwtl
ljmp
add
out
ret
adc
push
dec
sahf
out
mov
mov
lods
inc
mov
xor
or
and
sti
loop
cmpsb
mov
cmp
mov
push
aas
cld
add
lods
andl
dec
fsts
fwait
mov
pusha
outsl
loopne
leave
out
push
dec
ja
inc
push
iret
sbb
jns
ljmp
pop
aaa
cmc
xchg
add
lret
cmp
rcll
mov
add
not
loop
xor
sub
dec
inc
test
data16
jne
xchg
push
gs
xchg
lahf
or
push
sub
push
mov
ss
xor
arpl
repnz
fidivl
test
loope
scas
add
mov
bound
je
mov
pushf
cwtl
mov
lahf
cwtl
stc
shrb
gs
into
jp
sahf
cmpsl
mov
jns
aas
adc
push
jbe
add
movsl
lea
cwtl
xor
out
sbb
jp
aaa
fisubs
and
imul
jp
xchg
mov
ficoml
ret
inc
mov
mov
dec
bound
sbb
add
je
pusha
dec
dec
cltd
push
mov
ror
xchg
and
inc
adc
jl
push
div
dec
and
sub
sub
push
xchg
mov
inc
mov
test
xchg
popf
and
aas
cltd
out
scas
lcall
mov
sbb
daa
xor
mov
push
test
push
pop
nop
popa
pop
add
movsl
cltd
repz
cmp
push
aad
mov
imul
pop
and
arpl
dec
insl
fs
fdivs
xor
inc
mov
mov
add
cmpsl
ljmp
iret
xlat
pop
shld
inc
gs
push
fcomps
dec
push
sbb
push
ret
sub
sbb
cltd
xchg
xor
repnz
push
sarb
lods
sub
cwtl
cmp
incl
int3
scas
aas
mov
outsl
rcrb
jecxz
lahf
jnp
xor
mov
push
xchg
das
int3
jnp
mov
add
mov
out
pop
inc
test
aam
aaa
sub
sbb
add
int
mov
fisubs
loope
mov
out
cmp
jo
popa
mov
inc
scas
push
and
rorl
pop
cmpsb
mov
ret
fistps
xchg
in
mov
push
inc
cwtl
std
jae
das
sbbl
xchg
sub
pop
popa
jbe
pop
rclb
jl
adcb
or
xchg
or
mov
loope
dec
mov
nop
fcmove
fld
sti
inc
mov
pop
out
mov
push
cmp
mov
and
into
mov
int3
mov
fistl
insl
mov
inc
lea
mov
cmp
fs
mov
jns
or
adc
loop
aad
cwtl
in
dec
and
sbb
cmc
and
popl
in
xchg
mov
mov
jne
stos
sti
xor
nop
imul
mov
or
and
insl
repnz
pop
insb
pop
imul
fwait
xchg
mov
test
mov
fs
stc
dec
sbb
ja
outsl
inc
dec
cmc
movsb
in
add
pop
stc
sahf
jmp
ds
jnp
add
clc
xchg
rcr
lret
std
pop
push
cwtl
add
xor
loop
pop
push
imul
adc
xchg
jb
leave
aad
mov
mov
mov
xor
sub
pop
mov
daa
sub
cmp
and
fadd
jbe
push
loop
mov
mov
sub
pop
hlt
dec
inc
mov
or
int3
or
dec
ret
std
pop
jbe
daa
and
push
pop
bound
ja
and
daa
inc
scas
adcl
sahf
outsl
shrl
mov
icebp
rcrb
mov
add
mov
mov
sar
in
aas
jmp
xchg
pop
dec
push
push
mov
sti
cmc
test
jge
inc
rcrl
popa
jge
mov
xor
or
insl
xlat
bound
lahf
leave
lea
int
jmp
lcall
adc
insb
xor
test
push
int3
push
lret
dec
xchg
add
cmc
jge
dec
insb
out
inc
xchg
or
inc
aas
cmp
mov
out
xor
mov
xchg
sub
pop
sbb
xorl
popf
scas
addr16
mov
pop
test
xchg
add
push
fsubrl
fmuls
xor
test
ja
inc
les
dec
pop
push
xchg
das
lcall
jmp
divl
movsl
ds
pop
mov
sub
out
mov
add
call
xchg
push
sub
jns
jne
fs
adc
push
xchg
and
dec
in
cld
iret
aam
or
and
pop
in
sub
lret
inc
adc
push
xchg
sub
outsl
dec
icebp
sub
pop
into
sbb
in
jb
hlt
push
pop
pop
bound
add
mov
pop
pop
sub
cld
pop
sbb
stc
cmp
mov
sbb
rorl
fidivrl
mov
ss
call
sub
iret
aaa
push
mov
xchg
pop
aaa
fwait
add
or
stos
jo
inc
or
jp
push
pop
adc
cltd
mov
mov
loope
push
sbb
push
sub
jbe
sbb
divb
lret
sbb
int
sti
nop
adc
sbbl
jecxz
cld
enter
lds
dec
pop
sbb
mov
xor
aaa
sbbl
xchg
xchg
push
jae
int3
sub
out
push
jle
adc
jmp
hlt
push
adc
push
sbb
mov
fwait
enter
cmc
fwait
mov
pop
pop
mov
les
aaa
stc
stos
in
das
enter
sbb
push
push
add
xchg
mov
dec
in
leave
jp
aam
ds
aaa
cmc
shll
or
dec
jns
inc
mov
xchg
sbb
jbe
addr16
lret
pop
imul
pop
fisttpl
xor
add
orb
fwait
subb
lods
daa
xchg
dec
mov
jo
xchg
cvtdq2ps
idivb
ja
pop
cmp
loop
pop
mov
push
xor
lods
cmp
and
jnp
ljmp
test
sbb
and
enter
mov
jo
dec
cld
cmpsb
fisubrl
adc
ficoms
mov
pop
sbb
test
mov
jnp
cmc
pushf
add
push
cmpsb
cmp
adc
dec
leave
call
add
adc
push
cld
test
sbb
pusha
pushf
fldenv
mov
fwait
dec
ftst
pop
test
popa
call
jg
and
jmp
int3
xchg
inc
cmp
lcall
dec
sbb
xchg
ss
rcll
clc
sahf
bound
mov
shll
and
mov
sti
test
mov
stc
sbb
sbb
sbb
sbb
std
icebp
lods
hlt
lds
pop
ficompl
push
push
xchg
sbb
xor
add
mov
cwtl
or
jp
add
xor
mov
icebp
mov
and
int
sahf
and
and
sahf
je
imull
mov
push
mov
sbb
imul
push
adc
popa
popf
inc
fwait
cmc
or
lods
push
push
inc
sbb
cltd
adc
fisttps
mov
mov
divb
test
pop
adc
push
stc
nop
loopne
inc
mov
hlt
lods
dec
rorl
incb
mov
fcomps
adc
fidivrl
or
pop
rorl
enter
jo
shl
fwait
sbb
push
mov
sbb
cmp
jp
clc
sub
mov
shl
pop
xchg
cltd
push
in
adc
lock
and
xor
sbb
fdivl
das
jl
in
enter
daa
out
rcll
shlb
xchg
loope
stos
inc
sub
jbe
adc
jb
cld
jb
movsb
scas
inc
pop
cmp
jnp
mov
fstl
pushf
pushf
dec
je
mov
loopne
out
mov
mov
fistpll
dec
lcall
pop
dec
inc
or
xor
rorb
mov
ss
mov
inc
sbb
and
cmp
ja,pn
shl
xchg
jnp
sub
rolb
addr16
out
shlb
daa
shll
movsl
ljmp
add
push
ja
movsb
pop
mov
sti
mov
stos
adc
xchg
gs
fcomps
xchg
mov
insb
and
mov
seta
pop
fcompl
pop
fstpt
mov
lahf
pop
mov
mov
sbb
int
sbb
roll
cmp
inc
in
jmp
gs
out
xchg
pop
shrl
in
fxch
mov
pop
sub
mov
aad
inc
sarb
aam
mov
in
mov
lds
sbbl
out
mov
inc
and
cmp
xchg
movb
movsl
cmp
sub
int3
xor
ror
nop
pop
into
loope
dec
mov
cmp
adc
and
int
shrb
ss
insb
adc
ss
xchg
fsts
sub
sbbb
es
jnp
pusha
jmp
cmp
stc
lock
xchg
add
inc
pop
arpl
sbb
rcrl
fstps
lock
dec
jae
pushf
mov
icebp
in
add
loope
xor
inc
sub
sub
int3
sbb
roll
lea
imul
mov
ja
mov
aaa
jle
outsb
lds
pop
rclb
insl
dec
sti
movaps
jo
lods
mov
dec
pusha
mov
lret
fs
adc
fwait
xchg
xchg
mov
mov
adc
push
test
into
loop
aas
int3
adc
movsb
mov
sbb
push
repz
push
stos
adc
jecxz
sub
mov
shlb
je,pn
ret
xor
aaa
xchg
dec
fiadds
scas
pop
popf
sti
nop
ds
jle
dec
loope
jbe
fdivs
test
int3
fwait
scas
ss
pop
push
outsb
mov
les
gs
test
inc
lcall
aam
jle
data16
mov
and
mov
pop
push
cwtl
xor
shlb
js
mov
sub
pop
out
cmc
enter
arpl
push
adc
jnp
sub
mov
pop
sti
mov
ret
sub
aam
fwait
pop
cli
inc
cmp
push
mov
leave
int3
mov
sub
leave
divl
pop
ds
inc
das
icebp
lret
fmul
shlb
filds
add
fsubr
inc
mov
jl
enter
stc
cli
shlb
scas
psadbw
and
pop
add
loope
push
pop
lea
popf
mov
pop
or
int
rcrb
dec
xchg
jmp
sbb
enter
xor
jns
enter
mov
add
mov
test
into
inc
mov
movsb
dec
push
push
sbb
xor
out
rol
push
pop
cwtl
stc
enter
mov
scas
outsl
push
dec
ret
cmc
scas
gs
mov
jmp
or
xlat
cmp
fimull
jecxz
jno
mov
rcrb
fisttps
inc
out
push
mov
cmp
fwait
sbb
stc
sahf
in
shlb
xor
adc
jl
add
xchg
and
stos
push
sub
leave
sbb
fcomi
mov
cmp
fisubs
or
cwtl
cmp
arpl
mov
mov
jns
push
out
xor
or
daa
stc
cltd
sahf
mov
pop
cmp
jo
xlat
add
cmp
dec
hlt
jae
cltd
jmp
mov
das
xor
jns
fsubrl
jg
cs
ret
imul
mov
imul
jbe
jecxz
push
or
xchg
pushfw
fimuls
sbb
lret
addl
stc
cmp
loop
push
dec
hlt
or
push
orl
inc
loop
jl
cmpsb
pop
sub
clc
inc
push
inc
or
sbb
cmp
lea
int3
or
shl
dec
inc
mov
jns
inc
push
pushf
fcomip
popa
adc
sub
sbb
lods
mov
repz
mov
in
sub
fwait
test
sub
jmp
mov
xchg
jb
xchg
fldt
sub
rolb
loope
cmp
test
js
ret
push
cmpsl
inc
dec
sti
neg
or
push
mov
adc
enter
add
stos
divl
sub
push
enter
sub
push
in
je
sbb
pop
jmp
sbb
push
movsb
xor
out
pop
stos
subl
daa
mov
jb
jmp
enter
sub
int
imul
xchg
and
ljmp
mov
pop
xchg
mov
out
int
mov
test
lret
inc
cmp
sbb
pop
pushf
arpl
sbb
push
iret
js
xchg
loopne
pop
jnp
in
jl
push
inc
add
inc
add
pop
sub
in
and
rorl
stc
adc
pusha
enter
repz
pop
xchg
in
lds
add
xor
adc
imul
stos
cmp
hlt
in
lods
hlt
stos
jbe
mov
pop
es
fucom
fsubr
mov
popa
addr16
divl
fstpl
rorl
cmpsl
packsswb
movsb
mov
adcl
sar
cmpsb
sahf
mov
roll
jl
sbb
mov
insl
scas
arpl
adc
and
mov
sub
lea
popa
enter
add
lods
push
mov
enter
clc
xor
xor
pop
sbb
mov
or
test
sbb
shll
in
imull
addr16
fisubrs
icebp
ss
xchg
sub
xlat
inc
out
rolb
loope
arpl
push
add
push
lods
loop
or
lods
mov
ret
push
movb
pop
stos
xchg
stos
pop
pop
lds
jb
lcall
sub
aas
cmc
add
mov
enter
xor
or
sarb
mov
push
ds
loopne
mov
mov
mov
sub
es
mov
les
lret
pop
lock
xlat
or
mov
testb
subl
loope
adc
jae
scas
mov
xchg
lret
bound
gs
aam
mov
push
lret
cmc
dec
loopne
stc
mov
loope
xor
mov
dec
sub
jno
es
mov
push
loop
fsubl
pop
pop
bound
add
mov
insb
push
inc
lahf
cmp
int
pop
repnz
movsb
int3
into
mov
sti
pop
out
sbb
cltd
add
inc
add
push
mov
dec
lock
mov
xlat
cli
jl
mov
add
outsb
inc
gs
out
inc
rcll
jg
mov
add
insb
out
xor
inc
push
mov
jb
fisubs
push
mov
xchg
adc
and
loopne
mov
dec
mov
sub
xor
jmp
fcomp
sbb
fsubrp
cld
movq
mov
cs
or
and
mov
cmp
ds
mov
cmpsl
dec
lcall
jg
cmp
xchg
adc
dec
inc
pop
aam
aas
cmpsb
jne
adc
mov
sti
mov
test
insl
out
ljmp
mov
lock
add
push
and
hlt
fsubrl
enter
push
imull
mov
dec
inc
je
stos
and
dec
je
lds
popl
fucomip
xchg
push
inc
push
fdivr
aas
sbb
in
jge
cmc
mov
xor
stos
dec
cmp
jge
lods
mov
pop
aas
lea
test
lret
inc
imul
xchg
fisttps
addb
jnp
pop
mov
or
testb
and
xchg
outsl
scas
push
or
mov
clc
arpl
outsb
cs
shrb
bound
ds
pop
mov
inc
xor
cmp
cs
out
jg
pushf
sub
or
or
mov
add
ret
cmpsl
or
jb
push
mov
mov
mul
adc
mov
stos
cs
js
std
out
xchg
push
aaa
jb
pop
sbb
sub
ret
lcall
push
adc
push
push
mov
mov
xchg
push
adc
xchg
test
mov
xchg
dec
add
adc
ss
arpl
sahf
adc
int
aam
faddl
cmpsb
out
dec
pop
sahf
fiadds
mov
mov
daa
popa
test
push
iret
add
xchg
xchg
jno
call
inc
ss
add
jle
add
or
aas
dec
inc
mov
movsl
inc
add
inc
iret
and
scas
ss
fwait
add
in
sbb
jb
and
mov
pop
jp
jnp
jmp
dec
movl
push
xchg
in
xchg
sbb
xor
push
fyl2xp1
push
add
int
pop
xchg
cmp
popa
stos
mov
mov
xor
frstor
inc
mov
or
push
daa
cmpsl
or
sbb
pop
mov
push
iret
xchg
leave
xchg
test
mov
jns
add
adcl
xorl
xchg
imul
mov
aas
sbb
jge
push
leave
mov
cmpl
sbb
lcall
pop
jp
into
fisubrs
fistpl
or
dec
pop
mov
xor
pop
iret
mov
pop
sub
xchg
cmp
sbb
pusha
mov
fdivs
cmc
push
in
inc
mov
cmp
xchg
sbb
aam
or
rclb
mov
pop
int
adc
in
sbb
sbb
xor
movsb
cmp
inc
sbb
xor
or
test
and
xor
test
sbb
add
hlt
mov
push
mov
adc
or
sub
mov
aad
xchg
loop
fidivs
fwait
mov
mov
mov
cmpsl
xor
pop
cmp
fidivs
mov
add
data16
inc
mov
mov
stos
mov
fistl
iret
adc
call
clc
mov
jmp
mov
mov
cmp
out
pusha
pop
mov
loop
inc
icebp
mov
xor
xor
and
inc
int3
insb
lahf
sub
in
lret
xor
dec
jecxz
shll
mov
test
into
inc
sti
mov
xchg
sub
popf
xchg
mov
or
xchg
shlb
rcrl
and
test
inc
into
add
call
or
or
sbb
es
stc
in
icebp
mov
dec
mov
mov
fwait
pusha
cltd
loopne
movsb
and
lret
dec
cli
dec
mov
xchg
adc
sbb
aad
jecxz
popa
data16
bts
imul
and
jo
jecxz
sarl
sub
push
lcall
add
mov
ret
xor
adc
or
or
lcall
scas
in
loop
movl
cmp
stos
mov
mov
in
push
fsubrl
adc
jo
inc
out
repnz
sbbb
xlat
in
clc
arpl
leave
cmp
jns
adc
out
or
xchg
rorl
cmp
cmp
ret
cmp
scas
jns
push
insb
mov
sbb
push
mov
scas
fs
pop
out
sub
fstp
lds
or
adc
pop
mov
mov
repz
jae
call
pop
mov
and
clc
nop
stos
sbb
out
jno
cmp
ficompl
int
sub
cwtl
push
sub
loope
movsb
xor
push
jno
push
push
rolb
daa
clc
add
lret
mov
nop
mov
arpl
cli
js
push
cmp
jnp
ljmp
test
iret
mov
mov
cwtl
aas
iret
inc
mov
jecxz
and
int3
movsl
addl
adc
pop
cmp
push
loope
mov
pop
jecxz
jle
rclb
mov
icebp
xchg
clc
not
xchg
movq
test
fcomps
add
fucom
mov
and
loope
aad
repz
dec
mov
jae
addr16
into
dec
jns
daa
xor
and
aaa
mov
popa
lret
mov
test
aam
out
mov
mov
mov
adc
cmp
and
aas
lret
xor
pop
gs
cmc
and
mov
cmp
into
xorb
cltd
push
push
cltd
push
lret
mov
out
mov
pop
xlat
fcmovu
aam
pop
ror
outsb
aaa
stos
jecxz
xchg
in
movsb
jno
nop
sbb
inc
mov
daa
in
push
jo
cmc
nop
add
adc
je
sub
pop
aaa
cmp
pushf
out
scas
addb
mov
mov
lcall
ret
mov
scas
in
push
adc
cmpb
dec
and
jbe
dec
out
or
ret
mov
clc
lret
dec
jno
insb
or
mov
cltd
sub
and
pop
rol
popa
pop
mov
or
daa
and
push
and
cltd
dec
fsts
add
mov
fdivl
inc
adc
xchg
jbe
and
dec
iret
inc
push
lea
jmp
xor
mov
es
push
out
xchg
sub
dec
dec
xchg
mov
dec
and
and
cli
fidivrs
xor
or
inc
jp
test
jmp
and
ss
pop
loope
push
mov
mov
xchg
and
ret
jecxz
fsubs
fcoms
gs
and
jp
out
sbb
xchg
xor
xchg
out
in
outsb
shll
pop
ds
imulb
adcb
lahf
into
inc
pusha
pushf
or
fs
cltd
inc
mov
fisttps
lock
xor
push
popf
xchg
ljmp
mov
jecxz
push
xchg
test
pop
sbb
jge
shll
or
push
sbb
mov
xchg
or
add
inc
scas
mov
cs
pop
test
mov
fs
into
add
loope
and
pop
outsb
cmp
out
and
std
sub
cmc
xchg
fnstsw
jp
stos
add
xchg
sub
mov
inc
or
lcall
fwait
pop
shll
test
stc
aas
out
sbb
pop
mov
aam
fstl
pop
push
jecxz
xchg
add
jge
and
xorl
cli
xor
stos
adc
int3
roll
add
mov
cmp
pop
jmp
jns
pushf
push
fistps
lods
adc
mulb
adc
add
cmp
adc
push
dec
mov
notl
cmp
xchg
jno
imul
out
outsl
sbb
sahf
aas
sbb
int
jge
fdivs
imul
add
sahf
repnz
sahf
mov
cwtl
jne
dec
sbb
sahf
in
int3
repnz
shlb
fsubl
fdivrl
rorl
mov
in
lcall
les
add
jbe
ljmp
hlt
std
sbb
int
add
enter
fisubl
push
loope
repz
add
stos
andl
cmc
int
ja
pop
pop
pop
ss
cmp
hlt
imul
fbld
rolb
push
pop
dec
dec
sbbb
and
mov
shl
sbb
in
xchg
cmpsb
mov
sarl
xor
imul
push
mov
push
push
cmp
outsl
cld
or
adc
notl
xor
sub
rorl
jmp
push
pop
bound
mov
popf
scas
cmp
cmpsl
and
adc
cmp
mov
pop
mov
sub
dec
push
test
cmc
xchg
push
mov
repnz
pop
mov
and
xorl
fsubr
mov
push
jg
xor
je
pop
outsb
dec
outsl
movsb
inc
mov
out
jbe
lock
add
jnp
sub
sarb
pop
push
cmp
lea
jle
xchg
jge
push
jno
or
fadd
fmull
stos
ret
push
adc
cs
xchg
add
lods
inc
push
lret
inc
cs
loopne
push
jp
clc
pop
mov
pop
loope
popf
mulb
outsl
idiv
enter
push
mov
insb
cmp
addr16
xor
jmp
dec
jb
lret
test
repnz
adc
rolb
iret
stos
stos
popa
clc
stos
cmpsb
in
cwtl
ficomps
add
imul
iret
outsb
sub
dec
into
mov
cmpsb
cs
leave
xchg
cmpsl
jmp
fistl
sbb
insb
mov
movsl
xor
or
sti
sbb
push
sbb
movsl
push
fwait
pop
mov
sbb
xlat
sub
inc
xchg
in
sahf
mov
push
mov
mov
rol
or
sub
jne
rcr
fwait
mov
mov
cmp
icebp
push
loopne
cmp
add
xchg
and
or
leave
loopne
hlt
aad
mov
cmp
rorb
in
xlat
popa
pop
lahf
and
inc
inc
int3
aas
xor
and
cli
jecxz
jmp
rcll
ret
inc
movl
xchg
inc
mov
jp
cmp
data16
pop
cmp
xchg
inc
jne
sahf
and
push
in
cmp
and
add
mov
add
inc
push
jge
pop
sub
fwait
sti
or
mov
xchg
in
push
mov
pop
and
mov
pop
add
push
jno
mov
xchg
mov
sub
mov
push
jnp
sbb
popf
iret
push
pop
pop
fwait
and
imul
or
and
inc
xor
jb
lods
test
xchg
shll
das
sub
scas
jmp
xchg
sahf
jmp
test
movsl
jmp
push
jbe
lock
xchg
push
das
sbb
inc
ljmp
sahf
repnz
add
iret
xchg
ss
dec
push
adc
adc
xchg
sbb
stos
fmulp
or
cmp
jecxz
mov
iret
mov
cs
dec
leave
inc
sub
test
pop
sub
pop
mov
pusha
jns
jae,pt
or
push
stc
stos
movsb
stc
loopne
mov
arpl
cmpl
mov
xor
add
inc
ja
mov
mov
push
stos
lahf
loopne
add
outsb
test
push
pop
mov
cs
movsl
or
lods
jmp
inc
xchg
call
ss
leave
fdivrl
add
cmc
jl
push
and
mov
jg
outsl
pop
push
mov
ss
push
sbb
rcll
negl
repz
loope
adc
out
in
ss
loop
leave
or
cmp
pop
xor
xor
sub
dec
xorb
test
sbb
imul
jg
and
insb
imul
sahf
daa
loope
mul
mov
in
push
inc
arpl
jg
not
mov
shl
test
cmovge
stos
iret
sbb
das
cmp
cmc
cmpsl
ss
add
lds
js
pop
cs
aaa
clc
mov
add
adc
push
test
leavew
or
fwait
cli
fxch
scas
mov
and
out
ss
fists
std
mov
add
or
push
divb
pop
in
lds
addb
jle
jg
jmp
adc
or
scas
repz
or
lahf
add
cmp
in
rcll
jb
sbb
inc
jne
mov
or
jbe
scas
dec
mov
and
iret
daa
movsb
out
int
lods
ds
outsb
sub
cmc
xor
push
stc
out
jmp
and
addb
push
pop
das
and
fwait
xchg
and
cmp
mov
mov
xchg
add
push
inc
dec
push
lcall
jnp
sbb
or
jb,pt
mov
out
sbb
test
cmpsl
mov
lret
sbb
fdivrl
push
cli
xchg
cltd
clc
lea
movsb
out
roll
fsubl
negb
xchg
add
cmp
jle
stos
xor
in
mov
notl
ljmp
test
dec
es
dec
les
loop
daa
xor
leave
mov
stos
movsl
fmull
and
in
xchg
jb
lret
pop
xchg
mov
pop
or
insb
pop
jge
push
jecxz
or
adc
jp
pop
in
mov
outsl
fnstenv
xorb
insl
sub
aad
frstor
mov
pop
adc
mov
jl
es
mov
xchg
dec
pop
enter
in
frstor
sti
cld
inc
push
arpl
mov
pop
lods
inc
sti
jb
out
scas
sub
xchg
in
lret
js
clc
out
out
in
mov
popa
push
xchg
pushf
sti
ljmp
cmpl
push
js
loop
paddusw
dec
ds
insl
out
add
pop
push
mov
push
push
mov
jns
pop
test
or
inc
mov
xchg
lock
andb
push
mov
das
ja
and
xchg
adc
xor
std
fadd
subb
push
and
push
sbb
in
mov
fidivl
or
fwait
adc
add
mov
pop
mov
out
sbb
fstps
shrl
jo
daa
testb
mov
lods
mov
xlat
in
in
loopne
std
mov
mov
pop
adc
dec
jnp
icebp
xor
and
xor
sub
cmp
gs
sti
rclb
xlat
dec
jl
outsb
pop
and
insb
call
mov
sbb
pop
jb
rcrl
sti
xchg
cmpb
lock
pop
and
mov
pop
faddl
addr16
inc
pop
aad
ficoml
fcomip
inc
scas
adc
icebp
pop
out
scas
add
ficoms
outsl
mov
clc
out
lret
add
xor
and
test
addb
movsl
loope
sub
jno
xchg
and
add
xchg
addb
adc
jae
leave
fimull
stc
dec
js
xchg
mov
fs
loope
sub
jge
shrl
mov
gs
decl
lret
movb
lea
dec
push
xchg
pop
call
loope
int3
xchg
sbb
pushf
mov
arpl
sub
ljmp
mov
outsb
and
cmp
imul
pop
mov
popf
test
inc
loopne
aam
dec
jae
add
mov
jo
xchg
jle
mov
fildll
mov
sub
push
movsl
js
rcll
xor
mov
scas
or
jmp
mov
clc
push
add
sub
hlt
push
dec
test
or
adc
mov
inc
xchg
sub
xchg
bound
gs
push
push
mov
mov
sbb
inc
test
jbe
les
iret
mov
push
pop
add
sub
sahf
mov
scas
push
daa
pop
push
xchg
adc
lea
jo
dec
pop
addb
add
into
lret
mov
push
hlt
addr16
jg
and
adcl
xor
imul
and
adc
sbb
mov
inc
adc
loop
mov
dec
mov
pop
scas
push
addr16
out
into
cwtl
pop
das
fisttpl
mov
cmpb
insb
adc
add
push
mov
xchg
jge
ljmp
xor
mov
aam
fstpl
push
and
fwait
sub
mov
mov
popf
sub
dec
mov
sbb
xchg
mov
lock
mov
sahf
or
movsb
jbe
mov
incb
inc
jmp
mov
outsl
iret
out
lds
jns
jp
inc
mov
lock
fisttps
adc
push
sbb
mov
push
push
sub
xchg
add
fisubrs
sahf
cltd
outsb
rol
stos
mov
jecxz
fildll
shl
adc
mov
loope
addl
les
sub
bound
mul
pop
shll
xchg
es
or
fiaddl
mov
push
out
cltd
jge
xchg
mov
int3
lret
push
pop
sub
xchg
scas
dec
int
mov
or
aad
inc
shl
lods
cmp
jno
inc
dec
dec
push
ds
jmp
mov
arpl
lret
sbb
ja
out
add
inc
lret
lret
cli
pop
pop
push
pop
adc
out
shl
les
cli
xor
negb
int3
and
loop
sbb
adc
pop
lret
mov
pop
adc
adc
aaa
scas
inc
fistpl
movsl
add
or
inc
call
jae
push
leave
std
ja
jnp
ljmp
mov
shll
and
inc
fdivl
sar
pop
outsb
add
jge
ret
in
imul
add
lods
push
int3
push
scas
cmp
lods
or
leave
movsb
scas
jo
test
leave
jg
ss
nop
pop
aaa
fwait
sahf
or
jae
loope
scas
aaa
mov
xor
push
mov
xchg
pop
imul
xor
call
rcrb
xchg
call
dec
sbb
cwtl
shl
push
cmp
mov
stos
lock
pop
shlb
js
scas
cmc
push
sbb
mov
pop
adc
jns
notb
insb
add
xchg
mov
icebp
sbb
xor
inc
cmpsl
scas
insb
clc
mov
cmc
or
pushf
push
icebp
push
push
or
add
repnz
dec
pusha
jg
ljmp
stos
jp
jmp
jle
mov
cmpsb
test
add
mov
clc
ret
fadd
jl
and
popa
ret
cmp
push
and
dec
testl
mov
imul
adc
sub
insl
add
xor
call
in
pop
scas
sub
scas
cli
pop
inc
mulb
js
mov
movsl
mov
jno
push
xchg
mov
jp
shr
shl
jbe
fcomi
insl
and
iret
lods
add
in
mov
mov
jl
test
dec
sub
mov
addr16
ja
into
iret
std
or
lock
sbb
mov
mov
incb
insb
xor
flds
icebp
adc
mov
fcmovbe
xor
mov
test
aas
dec
aas
add
dec
mov
mov
repz
arpl
push
push
and
push
mov
mov
jl,pt
mov
lods
and
clc
int3
flds
cmp
int
dec
fwait
xchg
pop
js
xchg
notb
and
push
int
push
loop
pushf
mov
idiv
insl
push
fists
inc
test
mov
stos
repnz
and
mov
push
mov
fadd
xor
xor
pop
push
fdivrp
data16
in
lods
push
mov
pop
or
jl
cmp
sbb
ret
fisttpl
mov
bound
xor
test
int
flds
add
add
mov
push
cmp
sub
jecxz
clc
inc
test
imul
push
fwait
xchg
loope
pop
adc
leave
adc
cmp
inc
pxor
mov
and
es
jp
fidivl
int3
inc
enter
push
pusha
es
in
lea
repnz
dec
pop
std
in
mov
jmp
cmp
fistpll
mov
mov
push
lcall
jl
mov
repz
xor
xchg
scas
jmp
jnp
stc
xchg
enter
and
xchg
int3
fld
pop
movsb
stos
out
xor
xchg
xlat
add
mov
xchg
mov
pop
pop
mov
sti
ret
sbb
cltd
dec
adc
repz
sbb
pop
sbb
pop
cmp
insb
jp
mov
or
ljmp
in
sub
or
addr16
mov
out
mov
mov
lret
pushf
mov
adc
push
pop
ja
inc
dec
movsl
data16
repnz
test
push
testl
cmc
mov
xor
fs
dec
or
les
pushf
loope
dec
jae
fsubrl
or
icebp
or
xlat
mov
dec
mov
pop
lods
add
pop
xor
in
cltd
push
and
and
push
movsl
pop
and
bound
fcomps
js
adc
and
ror
scas
add
pop
xchg
dec
ret
cmp
js
cmp
es
gs
daa
outsb
int
outsl
out
scas
repnz
xchg
arpl
jbe
fldt
out
and
sub
scas
adc
inc
insb
sti
add
rclb
out
pop
cwtl
js
xchg
loopne
jae
mov
sub
stos
add
sbb
mov
xor
or
das
pop
or
jbe
cmc
and
mov
ja
pop
shlb
lahf
insb
outsb
push
aas
sbbb
sub
xchg
lods
stos
mov
push
dec
ret
jecxz
mov
mov
fsubs
cmp
xchg
sub
or
lds
iret
fidivl
or
out
and
xor
inc
aaa
and
xchg
add
dec
mov
test
push
pop
dec
mov
out
loope
pop
es
cmc
push
mov
pop
dec
xchg
cmpsl
mov
sub
ss
je
xor
push
sub
movsl
fcomps
cmp
pop
loopne
ror
add
mov
outsl
mov
rclb
fidivrs
into
scas
pop
aaa
or
lahf
push
jmp
das
adc
mov
adc
sbb
push
enter
cwtl
mov
movsb
insb
push
jne
cmp
jns
repnz
push
loope
adcl
fildl
add
lods
aaa
dec
pop
adc
es
pop
test
mov
fs
push
adcb
jnp
outsl
out
outsb
daa
dec
cmpsb
aaa
and
jmp
jo
xchg
xchg
push
ret
push
stos
adc
fmul
pop
cmp
pop
pop
test
fmul
scas
outsb
mov
fildll
ret
inc
repz
adc
scas
push
mov
jne
adc
and
call
push
and
cmp
push
xorb
mov
mov
movsb
orb
scas
leave
or
stc
mov
dec
mov
xchg
mov
out
inc
xchg
xor
fs
or
mov
inc
or
add
add
pop
aaa
inc
pop
jo
out
loop
adc
push
push
lret
fldcw
pop
dec
js
aas
mov
add
push
pushf
adc
mov
adcb
push
xor
pop
sub
mov
cmp
icebp
push
test
stos
ss
mov
fdivrp
push
sub
cmc
jecxz
xchg
rorl
push
sbb
adc
testb
jne
data16
int3
out
xchg
dec
ffree
out
mov
clc
push
sub
xchg
and
cwtl
adc
push
adc
ds
mov
lret
jecxz
imul
mov
insb
sub
push
dec
cmp
inc
fs
mov
scas
push
inc
daa
xor
jle
xchg
mov
stos
and
arpl
shll
mov
sahf
cmp
push
xchg
sbb
fsqrt
xchg
push
push
test
ljmp
or
or
rorl
int
jg
out
push
fisubs
adc
mov
pop
lahf
cmp
in
add
cmp
fwait
sbb
or
fs
mov
in
lds
addr16
dec
pop
stos
and
dec
lret
push
rol
cwtl
cmpsb
mov
cmp
cmp
shll
and
pushf
int
call
jle
sub
movsl
mov
push
daa
sti
sub
or
rorb
repz
push
aad
mul
cltd
test
cwtl
sbb
xor
sub
cwtl
lods
shll
les
lcall
add
add
push
add
jl
add
xchg
inc
popa
mov
stc
and
aas
xchg
cmp
dec
popa
cmp
mov
das
cmp
subb
test
adc
in
sub
dec
jp
jmp
dec
sbb
inc
cwtl
and
mov
fs
repz
xor
sub
push
cmpsb
orb
in
loopne
je
sbb
test
inc
jp
cld
ss
mov
dec
xchg
shlb
adc
lods
adc
outsb
mov
and
enter
push
jecxz
arpl
stc
mov
xchg
push
xor
jmp
rcrl
cltd
pop
xchg
push
shlb
cmp
repnz
add
sbb
push
pop
xchg
je
push
ret
jbe
in
das
inc
and
mov
mov
add
adc
inc
adc
sahf
inc
or
iret
add
shll
cmp
lods
mov
insb
mov
xor
mov
insb
mov
xchg
enter
ljmp
fildl
mov
aad
shrb
xchg
aad
adc
testb
ja
pop
scas
jl
lods
out
fmuls
sbb
fstpt
mov
jno
or
or
adc
in
xchg
notl
filds
sbb
dec
movsl
add
jae
in
pop
stos
incl
adc
pusha
or
fists
mov
push
mov
faddp
jae
jbe
in
jle
popa
mov
int3
xchg
dec
sbb
pop
jbe
test
jg
int
pop
stos
cli
sbb
push
jecxz
sbb
mov
cltd
cmpsl
pop
xor
cmpsl
std
cmp
inc
xor
lret
aam
add
sub
jnp
jno
mov
es
cmp
mull
inc
xlat
ja
pop
inc
xchg
and
xchg
dec
in
push
adc
cmp
adc
pop
bound
ljmp
movsb
ds
cmp
lcall
pop
iret
cmpsl
out
cmp
sbb
xor
outsb
fldcw
rcll
aam
fdivrl
push
cmp
inc
and
lret
stos
nop
mov
inc
or
jecxz
movsl
push
or
sub
mov
jecxz
stos
xorb
xor
mov
daa
pop
push
xor
and
adc
mov
pop
and
daa
mov
ljmp
mov
icebp
into
mov
dec
add
ror
dec
pop
mov
fldenv
mov
cmc
mov
ret
xor
or
add
xchg
mov
fnsave
push
and
std
clc
loope
mov
sub
and
dec
out
cli
jge
pop
loope
mov
jl
jb
pusha
incl
lods
dec
movb
adc
pop
stos
aam
mov
ret
dec
in
push
push
adc
addr16
pushf
pop
notl
loopne
mov
sub
jge
ret
and
mov
push
enter
hlt
insb
adc
in
adc
or
je
lcall
push
insb
and
fsubrl
xchg
and
mov
inc
mov
outsb
jecxz
dec
int3
and
xlat
cld
sbb
push
int
ficoml
pop
aas
ret
mov
push
sar
lods
fsubrl
int
add
enter
jae
jmp
out
fucomip
jp
jmp
das
xchg
mov
scas
or
fnstenv
mov
fmull
xchg
xor
mov
lret
jo
inc
ds
push
pop
xor
push
or
jp
jbe
jle
js
inc
lahf
mov
xor
mov
inc
mov
and
jo
xchg
imul
and
jns
iret
fistl
cwtl
repnz
out
pop
in
pop
popf
jle
incb
pop
gs
jg
in
jl
fwait
xchg
cmp
push
roll
dec
pop
roll
sub
adcb
sub
adc
or
inc
popa
and
mov
sbb
dec
xchg
insb
mov
dec
push
mov
jp
scas
lcall
fisttpll
sbb
mov
dec
shl
ffree
cmpsb
or
cmp
mov
mov
cmp
leave
cmp
dec
das
xor
dec
cld
mov
test
cld
add
lods
sub
insb
xor
lods
dec
mov
mov
ljmp
fwait
gs
ss
fists
push
repz
sbbb
das
out
adc
sub
cmc
popf
aad
fwait
xor
pop
xor
insb
adc
jmp
je
loop
push
mov
clc
or
mov
jle
xchg
enter
dec
iret
test
or
unpckhps
push
xor
hlt
repnz
pop
and
jno
imul
div
fisttpl
gs
jb
out
inc
movsl
pop
test
mov
xor
fwait
std
loop
mov
test
cmp
push
lret
mov
xchg
ret
add
daa
lea
fadds
adc
ror
test
popf
imul
sub
std
aaa
in
sub
out
sub
sbb
adc
inc
int
mov
out
xor
icebp
push
sbb
push
lcall
xor
or
arpl
or
inc
or
nop
pop
lock
cwtl
or
mov
cmc
mov
dec
jmp
sahf
pop
sub
cmp
cmp
das
dec
shlb
fistpll
decb
sahf
aas
lods
inc
add
mov
outsl
int3
mov
arpl
jecxz
jp
inc
iret
sbb
or
jb
mov
daa
and
das
pop
xorb
inc
or
push
fstps
jge
dec
push
jg
push
fwait
sbb
clc
cmp
inc
jno
test
lods
movsl
in
cmp
add
xchg
insl
and
jge
jl
aam
sbb
addr16
pop
ljmp
ljmp
sbb
int3
inc
rcl
jmp
xchg
bound
popf
ret
sbb
sbb
pop
nop
stos
lcall
das
or
xor
xlat
adc
mov
mov
loop
imul
stos
cli
lret
iret
mov
xor
dec
push
or
mov
inc
scas
imul
data16
add
sbb
adc
xor
xor
scas
and
cmp
fbld
out
mov
mov
mov
sbb
mov
data16
add
data16
rcl
ljmp
in
pop
xor
jno
popf
xchg
xor
mov
dec
lret
add
sub
in
add
test
jb
jle
in
add
loope
out
loop
or
cmc
bnd
es
aam
mov
in
orl
push
pop
cmp
pop
xor
aam
or
jecxz
lcall
xchg
pushf
adc
inc
pop
ret
clc
lods
add
add
hlt
add
in
mov
xchg
test
fadds
dec
xor
sbb
lods
mov
test
js
jne
repnz
stc
jb
sbb
in
mov
fmul
insb
inc
add
add
ljmp
xchg
push
fiadds
inc
es
adc
or
mov
xchg
mov
xchg
hlt
mov
cmc
sbb
rorl
mov
movl
fcmovb
fstl
dec
stc
jg
pop
mov
nop
cmp
fidivrl
jbe
out
jno
ja
fsubrl
add
mov
mov
cmp
in
mov
inc
xlat
sbb
ds
adc
mov
and
push
subb
mov
imul
pop
in
ds
into
mov
lahf
leave
xchg
add
jnp
or
push
dec
xor
xor
dec
push
or
add
lret
adc
fcmovbe
incb
mov
daa
inc
xor
cltd
jecxz
cltd
iret
xchg
mov
mov
subb
test
mov
add
cmpsb
add
dec
or
arpl
scas
jnp
mov
push
movsb
inc
mov
aam
leave
idiv
and
pop
shll
xor
inc
stos
cmp
xchg
jo
inc
add
cmp
lcall
repnz
data16
ja
movl
mov
outsb
test
pop
xor
xchg
pusha
sbbl
movsb
pop
adc
push
pop
lods
sub
cmpsl
jnp
mov
out
ficoml
and
popa
mov
stc
mov
pop
mov
mov
repnz
daa
into
adc
lret
ss
bound
mov
sub
fidivrl
movsl
jmp
loop
pushf
xor
jp
pop
push
das
int
mov
sub
loope
sahf
or
bound
mov
add
push
lds
call
orl
rolb
push
xchg
inc
scas
or
inc
sar
fsubrl
mov
fmull
in
bnd
cld
popa
nop
js
mov
push
test
out
push
or
es
aam
inc
xchg
add
lahf
daa
movsl
shlb
adcl
inc
sarl
fsubrl
fs
push
cmp
stos
cmp
movsb
cmpsl
inc
pop
push
std
loope
sbb
cmp
or
sbb
pop
cmp
push
lods
hlt
imul
arpl
scas
test
lea
icebp
subb
jo
lea
pop
jns
mov
inc
outsl
xor
mov
mov
inc
addr16
imulb
push
out
popa
add
lock
jns
sbb
cltd
js
and
les
pop
add
int
mov
in
das
jne
in
insb
add
scas
movsl
pop
add
mov
scas
push
test
in
add
and
in
ret
mov
inc
jo
lahf
xchg
sub
divb
push
fwait
pop
add
xchg
jg
mov
clc
jg
xchg
lea
lcall
shll
les
lock
aam
sarb
adc
ret
pop
jno
xor
outsl
scas
dec
or
mov
cmp
inc
in
sbb
das
shl
adc
pop
mov
push
jb
push
mov
popw
stos
sub
inc
cs
addr16
mov
xchg
cmpsb
out
aas
sub
and
or
xchg
cmc
push
dec
cmp
in
std
dec
hlt
jmp
lock
push
lea
outsl
mov
mov
js
jne
shrl
test
push
jae
push
sub
sbb
dec
cmp
or
jb
repz
and
in
mov
adc
lock
xor
lods
into
jmp
lcall
push
movsb
sub
add
sub
xlat
lods
lea
pop
adc
out
inc
hlt
dec
fildl
push
xchg
sub
xchg
pusha
cmp
push
mov
jb
pop
xchg
xchg
adc
aad
push
xchg
movsb
cmp
adc
scas
aad
cmp
dec
lret
lock
or
pop
dec
cmpsl
cld
lret
adc
push
mov
jo
push
jl
and
aad
xor
orl
mov
push
aad
dec
adc
sahf
loopne
dec
lock
xchg
mov
rcrl
sbb
cmpsb
shrb
rolb
push
jo
cmpb
push
or
imul
push
das
test
loopne
test
add
or
xchg
lret
xor
cmp
hlt
xchg
cltd
adc
shrl
lea
mov
and
mov
stos
in
ret
icebp
sarb
jle
xchg
cltd
jb
inc
dec
cmpsl
jp
xor
cmp
add
dec
lea
and
pop
enter
xchg
test
sbb
xor
mov
xchg
jge
sti
movsl
mov
or
inc
mov
push
ret
mov
fisubl
int
les
xchg
das
jae
aaa
and
or
rcl
dec
loope
orb
jl
cmpsb
sti
mov
cmp
and
xchg
test
rorl
add
inc
mov
sub
sbb
sahf
rolb
dec
lea
cli
xlat
xor
outsb
jbe
aas
jp
mov
pop
and
cmp
mov
dec
fistl
pop
add
shrb
std
mov
jecxz
mov
dec
cltd
push
lret
or
popa
dec
adc
jns
int
int3
daa
xrelease
pop
imull
sbb
dec
fsub
aam
jnp
sub
xor
repz
outsl
cld
push
jbe
in
addr16
int
sbb
xor
movsl
inc
cltd
data16
cmp
mov
lea
inc
sub
xchg
scas
cli
cmpsl
arpl
pop
sub
lock
je
adc
rorl
xor
cmp
stc
dec
enter
dec
incb
fcomps
mov
daa
xor
dec
int
int
xchg
pusha
jo
pusha
mov
cwtl
pusha
jnp
stos
jne
insb
mov
pop
pop
sub
fistpl
addr16
add
and
into
nop
mov
call
push
jp
ljmp
xchg
xchg
cmp
sbb
jle
mov
sub
scas
clc
adc
stos
aam
sbb
xchg
pop
sub
enter
imul
lahf
sbb
mov
jmp
data16
or
shlb
fmull
lret
repz
shrl
xor
ds
mov
movsb
or
int3
imul
lods
cs
in
leave
sub
arpl
stos
cmp
ret
cmp
cmpsl
test
lcall
insb
fcoml
ja
jo
jle
mov
mov
mov
or
or
out
mov
dec
les
inc
rclb
and
adc
mov
pop
adc
das
fs
mov
lret
pop
cmp
rolb
fsubs
cmpsl
inc
insl
fmul
xchg
cmp
xchg
xchg
sbb
in
and
divb
call
push
pushf
movsl
cmp
iret
lret
cwtl
movsl
test
arpl
or
jbe
jmp
dec
nop
mov
mov
sbb
pop
cmp
sub
fcoms
stc
fdivl
fnstsw
inc
inc
ss
push
jge
push
mov
ljmp
xchg
lret
sbb
mov
sahf
and
nop
jmp
push
mov
aas
push
sbb
insb
cld
test
add
dec
cld
cmpsb
out
les
jmp
mov
jb
mov
fistpl
xor
call
or
arpl
ja
pop
js
adc
lods
cli
xchg
pop
ret
into
jo
into
jmp
hlt
lods
movsb
enter
xor
aad
or
lock
es
xchg
movb
dec
dec
stos
xor
adc
stc
sbb
adc
stc
or
dec
and
cmpsb
sbb
xchg
imul
lcall
outsl
pop
les
mov
sbb
inc
mov
lret
lcall
and
xchg
orl
adc
cmp
stc
and
or
jns
stos
js
xor
das
and
shr
push
rcr
xchg
insl
call
adc
repnz
and
xor
jecxz
cmpsl
push
push
sbb
pop
cmp
out
cmp
or
mov
xor
fsubs
shll
mov
idivb
push
inc
test
je
xor
inc
adc
xor
xchg
mov
sbb
je
xor
in
movsb
cmpsl
xlat
movsb
cmc
in
out
mov
hlt
mov
testb
and
fidivl
xor
jo
stc
adc
loop
xchg
and
cltd
cmpb
sub
xor
int3
pusha
or
aas
pop
or
mov
mov
fsubr
imul
mov
lock
cmp
mov
xchg
or
push
jb
dec
js
mov
cmp
push
mov
mov
and
jl
and
insl
lret
mov
mov
dec
mov
aam
scas
jno
mov
clc
xor
and
mov
dec
outsl
jecxz
xchg
cld
test
lahf
mov
and
iret
lret
cli
xchg
bound
fildl
addr16
jmp
xchg
mov
or
sub
sub
xor
jb
sahf
nop
mov
fsubp
ljmp
adc
out
mov
cs
xchg
enter
rcll
mov
mov
jmp
fwait
mov
mov
ret
movsl
leave
jno
stos
and
xorl
and
lock
jb
mov
jbe
das
pushl
mov
aas
jno
orb
stos
mov
imul
cli
and
sub
subl
loopne
adc
inc
in
stc
add
scas
dec
mov
adc
adc
out
lds
in
xchg
movsb
and
repnz
push
lret
dec
cli
or
and
cld
arpl
aam
and
cli
adc
cli
leave
sbb
arpl
rcll
mov
fs
pop
pop
leave
mov
imul
inc
jns
ljmp
cmp
addr16
cmp
lret
movsb
and
insl
jnp
adc
in
push
loop
stos
mov
mov
jge
pop
mov
or
out
sbbb
dec
arpl
lods
push
push
sahf
dec
lret
xchg
iret
idivl
cld
inc
pop
and
les
pop
ret
jmp
adc
lods
les
stos
jmp
pusha
movsb
mov
adc
cmp
loopne
mov
inc
xchg
adc
shl
sub
fisttps
sub
and
xlat
mov
and
dec
sub
push
inc
lods
into
insl
or
sub
xor
sbb
or
mov
test
pop
js
lahf
xor
mov
cmp
dec
repz
lahf
or
inc
in
pop
scas
pop
data16
insl
std
xor
movsb
xchg
enter
push
jbe
insb
adc
xchg
int
imul
jno
sbb
sub
jle
push
push
or
adc
enter
mov
cld
mov
cltd
lds
push
in
mov
inc
adc
pushf
lods
pop
int3
dec
jb
fsubl
leave
inc
mov
jne
inc
popa
cld
in
xor
pusha
lods
clc
outsb
movsl
in
xor
dec
mov
cwtl
ret
cmp
shlb
push
push
dec
cld
and
gs
inc
fsubs
pop
loope
xlat
push
call
jle
pop
mov
jle
nop
sub
cmp
or
sbb
dec
push
sahf
jae
gs
outsl
out
arpl
cli
sbb
insb
cpuid
je
in
xchg
mov
hlt
idivb
inc
xchg
fwait
mov
cmpsl
fdiv
and
mov
sub
jbe
xchg
notb
mov
adc
sub
aam
aas
push
xchg
jmp
js
push
xchg
cmp
repz
jg
loop
push
daa
fbld
scas
mov
xchg
mov
rorb
in
das
add
arpl
fwait
push
rcll
and
out
add
subb
bound
das
pop
xchg
mov
in
sbb
data16
push
insl
add
dec
sub
cltd
lcall
loope
aam
xchg
adc
fadd
dec
dec
push
sbb
fnstcw
lods
jno
jecxz,pt
jns
push
out
jle
ret
ret
pop
arpl
xchg
mov
out
scas
jo
cs
add
or
imul
fstpt
push
jns
mov
jecxz
add
and
mov
testl
dec
fndisi(8087
jbe
ja
fdivl
jbe
out
pushf
pop
mov
add
and
pop
icebp
or
jae
scas
jns
mov
ljmp
movsl
testb
jno
pusha
jae
cli
cmp
movsl
sub
in
cmp
adc
imul
sbb
ret
js
jmp
xchg
or
push
mov
scas
jae
push
repz
sub
loopne
sub
jns
int3
cld
pop
jl
test
jg
mov
xchg
scas
fcom
dec
movsl
pop
jne
cmp
xchg
loopne
cld
pop
dec
mov
and
shl
shr
fadd
stos
push
cwtl
adc
push
mov
mov
push
int
rcll
xor
pop
loopne
sti
mov
xchg
lret
mov
ret
and
leave
lret
mov
mov
inc
in
xor
cmpsl
push
sub
loop
es
jmp
out
call
popa
add
jb
dec
pop
shr
mov
mov
jns
add
mov
pusha
inc
mov
add
sar
ja
jne
push
mov
pop
scas
sub
out
ret
dec
shll
scas
jp
adc
loopne
xchg
xor
add
insb
testl
sbb
inc
adc
cmp
fwait
outsb
ljmp
test
div
lods
out
mov
scas
lds
xchg
mov
fwait
lahf
sub
fwait
ds
jns
pushf
sbb
inc
repz
stos
rep
cs
add
outsb
xchg
xor
int3
lock
and
shrb
pop
out
xchg
jns
and
gs
incb
divl
pop
aas
cli
iret
lahf
fstpl
adc
mov
pop
jb
mov
stc
imul
not
mov
repnz
dec
xor
sub
dec
xor
mov
enter
add
jmp
mov
xchg
cmp
sub
sub
lret
popf
cmp
adcb
pop
push
or
aaa
arpl
sysret
outsl
pop
shrl
xchg
adc
lcall
sub
in
xchg
aaa
push
int3
cmpsb
push
inc
dec
sub
outsb
xchg
adc
push
xchg
sbb
and
mov
sbb
roll
aam
ss
sbb
fcom
sbb
xchg
sbb
push
cli
loope
sub
stc
jne
cmp
push
add
xor
sti
cwtl
dec
xor
xor
in
push
andb
add
sbb
dec
faddp
adc
mov
push
fstl
inc
clc
loope
jecxz
into
jb
cltd
or
sub
jecxz
xchg
cmc
xor
fcompl
cmp
stos
lock
movsb
and
aam
stc
scas
nop
fildll
jno
mov
adc
mov
sub
mov
idivl
outsb
das
out
jmp
and
aaa
enter
ss
sub
mov
push
add
das
sub
outsb
xor
out
jne
dec
in
shl
jmp
lods
cmp
imul
dec
outsl
loop
cmpl
inc
lret
lods
pop
dec
movsl
loope
or
jmp
imul
or
imul
adc
push
mov
pop
cmp
ljmp
sub
pusha
add
loop
notl
pop
push
mov
js
dec
mov
mov
movsl
xchg
call
out
cmp
mov
and
notb
ret
vmovhpd
mov
negb
fistl
inc
pop
test
dec
mov
orb
cmp
js
mov
in
arpl
mov
dec
call
adc
sbbl
cmp
fstpl
mov
repz
pop
fs
mov
fldt
rcll
or
je
sub
xchg
outsl
mov
je
xor
nop
cs
adc
inc
out
in
jg
xchg
out
addl
jns
push
mov
in
xor
jmp
add
sbb
imul
add
inc
pushf
int3
inc
aad
xor
or
xchg
lret
aad
inc
mov
out
pop
out
scas
out
aam
stc
scas
bound
les
outsl
xor
pop
out
mov
mov
push
jb
pop
mov
pop
push
andl
cmpsl
mov
cld
insl
jge
pop
push
loopne
aad
pop
bound
pop
cmp
xchg
ret
push
jmp
lock
dec
fnstsw
movsl
rcll
push
pop
push
mov
adc
call
das
ss
and
les
pop
xlat
pop
sub
push
lea
insl
push
scas
stos
jne
adc
into
cmp
cmpsl
sbb
dec
pop
mov
mov
sarb
ficoms
js
jmp
shrl
ja
xor
jae
push
jle
sbb
mov
dec
and
dec
pop
repnz
push
fwait
cmp
add
imul
inc
ljmp
sub
mov
insb
std
scas
nop
xor
pop
xor
mov
fwait
ret
cli
shrl
outsb
lods
pop
mov
sub
pop
data16
sbb
ss
shr
nop
mov
imul
test
mov
push
ror
mov
jg
je
lret
cltd
push
push
pop
adc
js
clc
adc
and
cmpsb
pop
hlt
dec
push
pop
add
out
das
cmp
xor
out
mov
lret
push
push
mov
inc
hlt
imul
loopne
add
pop
lahf
loop
ficoml
inc
pop
fdivs
data16
push
or
xor
subl
ljmp
cmp
mov
xchg
push
mov
ljmp
cs
loop
add
pushf
push
mov
push
std
sbb
cmp
and
sahf
mov
jmp
inc
test
dec
nop
sbb
iret
sub
dec
mov
cmp
inc
mov
outsl
jb
aam
rorb
aas
fdivrl
ficompl
mov
into
or
loope
add
mov
sti
stos
cmp
fs
hlt
mov
cli
xchg
mov
decl
movsb
sahf
bound
pop
ret
dec
in
or
mov
pop
dec
pop
inc
mov
push
mov
iret
inc
gs
push
xchg
cli
jno
pop
pop
ret
push
jg
es
mov
clc
insl
push
repnz
lret
sub
xchg
push
and
arpl
jb
out
mov
add
int
call
lea
test
mov
insb
sarb
push
mov
mov
pusha
aas
add
sbb
inc
and
loop
mov
negl
and
in
enter
incb
enter
cmpsl
sub
lds
jb
adc
fstpt
loope
inc
aam
mov
pusha
pop
std
cltd
xchg
add
fwait
sub
mov
es
mov
inc
outsb
xchg
pop
mov
fisubrs
push
in
mov
xchg
sti
xor
jp
cld
mov
jg
sarl
xchg
idivb
lahf
adc
movsl
rcr
cmp
ljmp
ljmp
rcrw
cmp
dec
into
fstpl
arpl
and
cmp
push
addr16
sbb
cltd
inc
and
jno,pn
cmp
pop
push
sub
or
rclb
push
sarl
in
imul
adc
inc
push
and
imulb
ret
or
mov
ss
fwait
mov
shrb
xchg
arpl
aaa
aaa
enter
mov
pushf
push
mov
ss
hlt
lcall
adc
mov
les
mov
pop
push
sbb
imul
cmc
adc
outsb
icebp
ret
push
adc
mov
push
and
stos
lcall
and
orl
pop
mov
ret
scas
jbe
sbb
xchg
ret
and
mov
xor
dec
stos
pop
pop
adc
sbb
int
adc
cmp
jle
sub
loopne
push
sbb
sti
aaa
cmpb
cmp
out
sub
dec
pop
pop
add
decl
pop
imul
not
dec
and
cs
arpl
dec
loopne
xchg
ds
push
adc
cwtl
mov
pop
ja
xchg
mov
push
jl
adc
mov
add
insl
add
hlt
cmp
lahf
pushf
popa
inc
mov
inc
mov
sub
in
inc
fstpl
subl
push
pop
out
adc
cmc
std
rcr
repnz
adc
mov
jmp
fisubs
sbb
in
cmpb
es
cmp
mov
mov
or
shll
call
mov
dec
add
mov
scas
mov
push
daa
lods
lds
or
push
sub
mov
pop
lret
sub
es
jle
xchg
jp
inc
dec
sti
sub
popa
fs
mov
lods
test
fsubrs
xchg
ret
mov
dec
cmovl
lcall
js
xlat
mov
mov
xchg
mov
xchg
pop
icebp
cmpb
sub
sbbl
sub
pop
repz
xor
xor
fcmovb
pop
std
push
int3
gs
push
insb
nop
pop
jle
add
fsub
pop
loopne
pop
fs
cmc
int
int
adc
ds
andb
std
call
add
lock
or
test
cs
dec
shll
sbb
adc
mov
leave
mov
push
xchg
jmp
xor
scas
sbb
mov
test
ret
jno
arpl
cmp
mov
or
outsb
lds
adc
into
insb
sub
lock
mov
nop
lret
pop
ret
mov
push
push
leave
push
cmp
sti
xchg
lods
std
pop
cmp
jge
out
sbb
jbe
fbld
dec
ds
es
js
test
add
clc
cmpsb
adc
or
inc
int
adc
and
inc
xor
cmp
xchg
mov
fs
xor
in
mov
inc
shlb
sbb
mov
jecxz
lock
mov
fidivrs
and
lods
pop
or
insl
jmp
cli
push
pop
out
cmp
sub
push
jns
ljmpw
or
adc
dec
imul
and
jo
fs
jne
ss
hlt
cmpsl
pop
dec
out
cld
repnz
inc
lods
jecxz
dec
jmp
and
push
push
adc
sbb
dec
aad
mov
in
lret
xchg
push
repnz
rol
push
jb
mov
mov
xor
iret
in
popa
pop
and
popa
jge
jo
and
mov
bound
fwait
mov
inc
sahf
push
test
mov
xchg
stc
or
addl
aas
adc
inc
mov
popf
mov
dec
fisttps
inc
dec
pop
faddl
inc
das
xor
pop
cmp
push
and
sub
gs
pop
or
xabort
xchg
mov
je
dec
push
dec
dec
fcomps
or
test
xorl
cmp
fsubs
sbb
dec
lcall
add
jno
aaa
inc
add
or
add
rol
mov
int3
shl
xchg
scas
cwtl
mov
jno
fwait
mov
lret
rol
cmpsb
sub
pop
mov
paddd
leave
cltd
lods
push
push
xchg
es
imul
pop
shlb
ljmp
xchg
mov
cmp
mov
out
xchg
clc
xlat
mov
cwtl
shl
shl
xlat
add
mov
xor
add
mov
loopne
pop
into
push
push
fcomip
ss
inc
pusha
or
cltd
push
lcall
outsb
xchg
dec
popl
pop
ljmp
shrl
out
in
fwait
rcl
push
pop
call
push
lods
popf
sti
aad
scas
les
hlt
fs
jp
pop
aam
adc
adc
lcall
pop
inc
xor
sarl
imull
pop
xchg
ror
xchg
cmc
mov
jmp
dec
or
push
das
lcall
and
xor
lret
jecxz
popa
lahf
mov
mov
outsl
push
mov
out
in
lret
lret
xchg
fdivl
mov
cltd
add
bound
jne
ret
and
out
pop
cwtl
outsb
popf
jp
add
xchg
int3
mov
dec
mov
ljmp
pop
lods
movsl
mov
sar
dec
xor
pop
jbe
nop
fiadds
fstps
jno
ss
cmp
mov
rcrl
fmull
jo
sub
dec
push
rcr
mov
imul
in
outsl
dec
sarl
adc
inc
test
sbb
insb
jecxz
and
negl
mov
and
ret
cmpsb
or
xchg
fidivs
shlb
pop
inc
dec
mov
test
xor
aam
bound
test
pop
jae
jmp
mov
jno
add
shlb
or
sahf
sar
dec
outsl
adc
xor
scas
mov
sub
xchg
lahf
push
push
pcmpgtd
xor
sbb
and
add
pop
out
mov
js
xchg
pop
mov
es
adc
cmp
lret
xchg
bnd
or
data16
aam
imulb
les
inc
in
test
jnp
mov
ret
stc
cli
stos
sub
mov
sbb
icebp
insl
outsl
aam
pusha
in
xchg
mov
icebp
inc
out
inc
and
inc
dec
pop
adc
sub
call
pop
inc
cmp
outsl
add
rcrb
or
jle
cmc
pusha
add
fwait
cmp
jno
and
mov
insl
mov
sarl
dec
sbb
inc
mov
mov
mov
les
pop
outsb
pop
les
outsb
jmp
sbb
mov
add
aam
sti
loopne
imul
and
inc
fistl
mov
out
jo,pt
fisubrl
lock
mov
or
aad
aas
cli
rcll
aad
inc
pushl
xor
iret
jp
inc
jmp
lcall
inc
mov
pop
call
lds
adc
loopne
lret
inc
pop
lods
jg
inc
movsl
jp
add
sub
push
fistpll
das
arpl
ficoml
inc
xchg
xor
jae
call
xchg
or
loopne
int3
or
sbb
inc
subl
add
jo
jb,pn
nop
divl
adc
outsl
xchg
mov
outsb
cmp
dec
popf
adc
pushf
lds
jns
popf
loope
popf
mov
lahf
outsl
cmc
jns
push
les
sub
xchg
lcall
add
xchg
or
xchg
sub
shlb
test
sub
mov
dec
ret
lods
mov
sahf
fadd
cs
xchg
popf
mov
negb
mov
lock
leave
mov
loope
loopne
add
add
jecxz
je
iret
pop
jmp
sbb
and
js
pop
sbb
inc
out
scas
movsl
cs
pop
or
xchg
scas
jg
inc
pop
mov
jae
in
push
movb
mov
add
and
insb
fs
pop
xchg
xchg
testl
mov
push
sub
shrb
jb
pop
mov
mov
in
inc
repnz
mov
fcomip
add
pop
jg
xchg
and
es
pop
pop
push
gs
adc
push
and
lahf
push
rcl
adc
call
shl
pop
call
mov
dec
decl
adc
out
mov
xchg
lock
pop
testl
push
inc
mov
mov
inc
lcall
outsb
inc
jge
mov
xchg
push
fadds
lcall
lods
inc
adc
mov
xchg
dec
cld
sbb
hlt
sub
add
mov
ss
xchg
cs
and
push
pop
bound
std
sahf
jo
iret
into
cmp
or
sbb
test
ds
pop
inc
sahf
data16
notb
xor
jmp
mov
lahf
shll
cli
ret
adc
iret
jmp
or
cld
mov
add
movsl
mov
bnd
scas
rol
imul
std
cmp
repnz
mov
ja
and
inc
fisubrl
test
in
cs
stos
in
mov
out
xor
es
ja
scas
cmp
pop
xor
in
loopne
inc
cmp
push
icebp
sub
and
or
iret
push
xchg
and
call
hlt
lret
ja
ret
lea
mov
les
jg
xor
out
lock
les
cs
icebp
fildll
pop
in
out
xor
dec
lret
mov
cmpsb
enter
xchg
rcrl
sbb
sub
push
aam
jl
sub
mov
push
sbb
fsts
push
push
fstpt
mov
xor
cmp
sbb
lahf
push
inc
popf
sbb
xchg
cmp
bound
out
lea
mov
aaa
shl
inc
sbb
xchg
ja
dec
sti
out
jmp
insb
push
mov
adc
fdivrl
dec
jmp
imul
pop
jp
or
cmp
mov
aad
inc
xlat
mov
sub
data16
mov
xchg
stos
iret
inc
cmp
add
rclb
push
xorb
ret
loope
mov
into
scas
push
sbb
outsb
dec
stos
iret
pop
jns
andl
xorl
sbb
mov
mov
out
jmp
jl
sbb
loopne
scas
or
pop
lret
insb
mov
js
mov
adc
sbb
rcll
loope
dec
mov
scas
andl
adc
ja
mov
xabort
aas
or
mov
test
and
lmsw
cmpsb
cld
cmp
pop
jmp
rclb
dec
adc
add
outsl
xchg
lds
pop
pop
mov
mov
int
adc
in
out
push
push
pusha
in
pop
jp
sbb
push
mov
sbb
in
fisttpl
mov
lea
sbb
cmpsl
inc
mov
pushf
rorl
mov
rclb
idivb
add
aas
shrl
push
movsl
dec
into
xchg
add
out
or
inc
fisubrs
inc
push
sub
mov
jmp
inc
jge
call
stc
dec
or
aam
sub
inc
call
loopne
mov
aad
pop
fadds
jmp
iret
adc
jno
dec
mov
pop
inc
mov
cwtl
mov
mov
mov
add
bound
lret
jl
mov
add
es
stos
cwtl
fsubl
push
imul
lret
mov
xchg
bound
push
pop
lock
mov
mov
in
sbb
ret
lock
xchg
shl
fistpll
icebp
es
shlb
xchg
shlb
cmp
dec
int
push
sar
data16
lods
mov
data16
inc
lret
or
es
ds
fisubrs
sbb
lcall
stos
or
ds
sbb
insl
push
stos
enter
jl
adc
add
mov
inc
ljmp
sub
xchg
popf
mov
or
and
call
cmp
sub
imul
cmpsl
push
aaa
cmp
addr16
mov
and
lahf
sub
mov
stos
inc
push
adc
test
pop
cli
mov
repz
cmc
dec
fnstenv
out
idivb
xor
jmp
rorb
sbb
or
lock
xor
mov
lds
xor
and
lock
fisubrl
inc
gs
adc
jge
cmpsl
sbb
and
psrld
sub
cmp
push
out
push
xchg
js
sbb
faddl
mov
aad
jno
xchg
pushf
mov
jle
and
fcoml
ds
test
sahf
jp
outsl
insb
outsl
addl
push
subl
stos
mov
stos
mov
jmp
sbb
push
mov
and
fbld
rorl
or
das
rcrl
mov
into
call
mov
mov
cs
inc
shlb
sub
repz
sbb
cmpsb
dec
or
loope
scas
aas
jno
repnz
push
mov
dec
add
and
cltd
cld
scas
syscall
std
cwtl
xor
inc
inc
jge
pushf
scas
xlat
mov
roll
dec
inc
js
pop
mov
cmp
cld
cmpsl
mov
outsl
cmp
emms
outsb
dec
dec
sub
dec
xchg
lcall
cmp
filds
xchg
cmp
arpl
andl
xor
popa
movsl
gs
fs
aaa
or
std
das
push
push
add
ret
incl
pop
pop
jne
sub
add
xchg
mov
dec
push
mov
adc
mov
xchg
push
and
inc
hlt
lea
std
test
clc
xor
mov
out
fnsave
test
popa
mov
and
sbbl
jg
nop
repz
lcall
pop
add
dec
mov
dec
into
scas
mov
mov
int
and
in
mov
xchg
shll
xor
ja
pop
or
cld
loopne,pn
into
sub
jp
jle
push
pop
icebp
push
pusha
mov
inc
insb
cmpsl
mull
mov
mov
ret
aam
into
sub
sahf
push
inc
xor
inc
bnd
inc
or
hlt
icebp
cmp
mov
ds
in
or
push
jecxz
cmp
sub
mov
mov
lcall
gs
std
add
movsb
push
or
lods
xchg
jae
sub
and
repz
cmpsl
push
scas
outsb
cmp
pop
mov
xchg
dec
lds
imul
xor
mov
pop
cmp
lcall
fmull
repz
loopne
xchg
insl
fsub
push
pop
cmpl
push
sub
cwtl
adc
aad
repnz
jg
lock
cmp
push
pop
push
xor
push
cmpb
out
mov
cmpl
cmc
js
xor
and
sbb
xor
xchg
std
jmp
stc
or
lahf
cs
pop
imul
pop
add
stos
insb
outsl
in
movsl
cwtl
ffreep
fimuls
stos
push
or
dec
mov
dec
fwait
cmp
xor
lret
xchg
xchg
clc
push
cld
adc
xchg
outsl
mov
inc
xchg
push
ficoml
loop
add
add
pop
cmp
sub
orb
mov
push
outsb
mov
cmp
sub
xchg
jno
iret
xlat
cmpsb
lds
cmpsl
ret
mov
add
out
cltd
lods
xor
add
and
lods
jmp
xchg
pop
inc
daa
pop
cltd
dec
xor
adc
add
jl
mov
inc
lret
jno
sub
mov
jmp
movsl
xchg
mov
jb
cmp
scas
inc
ljmp
dec
test
dec
xor
mov
ret
add
cmpsb
push
sub
cmpl
lfs
insb
and
int3
sub
xor
xor
shl
mov
push
mov
ss
jp
pop
jns
scas
dec
jl
cmp
push
or
lods
insb
addr16
cmpsb
xchg
add
jb
psrad
push
mov
push
in
test
dec
dec
push
xchg
arpl
and
out
into
sti
sbb
int
mov
test
jne
addr16
xlat
clc
adc
shlb
popl
mov
mov
adc
cld
fcoms
dec
mov
scas
push
lods
push
ret
inc
mov
dec
lds
adc
pusha
iret
call
shll
sub
popa
jl
push
or
leave
add
fisttpl
mov
das
adc
rorb
pop
les
andb
movsl
jnp
out
or
jns
inc
cwtl
insl
push
fdivs
leave
cmp
push
dec
into
jbe
popa
stos
adc
or
pop
je
mov
jbe
jb
divb
leave
dec
paddq
sub
xor
mov
movsb
sahf
cmc
sbb
pop
push
pop
cltd
stos
dec
bound
sbb
xchg
mov
mov
sahf
xchg
aam
shll
add
mov
loopne
inc
jnp
sub
pop
mov
icebp
jg
pushf
jbe
jmp
mov
mov
insb
xchg
or
fcmovu
push
jae
jnp
lods
fisttpl
sbb
sub
adc
ret
mov
mov
addl
sarl
call
in
sub
sbb
call
dec
pop
pop
push
sahf
or
dec
push
clc
jg
push
push
push
movmskps
pop
mov
int
aas
rorl
movsb
pop
jmp
mov
lahf
imul
sbb
into
int3
pusha
inc
dec
mov
cmpsb
repnz
inc
iret
cltd
lds
andb
adc
lock
dec
push
movl
or
loopne
or
jno
in
jnp
add
cmpsb
sti
pop
push
in
cmpsb
test
and
cmp
cli
scas
rcrl
out
rol
ret
sub
in
dec
shll
pop
mov
and
and
lock
mov
das
ret
and
shrb
fdivs
inc
dec
mov
push
fsubs
mov
xchg
leave
stc
dec
mov
iret
popa
inc
adcl
add
js
imul
adc
std
fidivs
arpl
pop
dec
inc
cmp
pop
push
cmp
mov
add
mov
test
or
jne
es
cmp
fmull
cmp
lods
cmp
jne
lcall
or
repz
cs
in
sbb
not
push
int3
jecxz
rcrl
push
in
cmp
lea
daa
test
dec
mov
pop
iret
enter
xor
js
or
inc
hlt
jl
arpl
xchg
rcrb
push
stos
ret
jmp
mov
lahf
mov
dec
out
xchg
sub
iret
push
push
xor
pop
mov
out
fisubs
jb
dec
jge
push
clc
push
es
add
shrl
cld
test
mov
sbb
xchg
adc
mov
into
mov
jecxz
movsl
mov
adc
push
jl
push
mov
daa
test
out
out
pop
adc
mov
push
xor
inc
movsl
lea
cwtl
lret
xchg
sbb
mov
push
inc
cltd
cltd
xlat
push
idivl
pop
inc
bound
jno
in
mov
and
xor
inc
test
pop
mov
addr16
sub
dec
test
rolb
xchg
sbb
es
mov
ss
mov
aas
rolb
jo
mov
pop
roll
and
jb
dec
movsl
test
or
je
xchg
popf
addr16
es
mov
add
sti
push
inc
pop
insb
jo
mov
imull
enter
popf
aaa
orb
js
xchg
loope
push
sub
dec
cs
xlat
arpl
mov
test
push
inc
jecxz
cmp
jmp
add
xor
push
loop
fidivrs
cmc
push
ja
jns
dec
cmp
mov
push
push
ret
push
gs
bound
mov
or
addr16
mov
jae
test
in
mov
cltd
and
sbb
sub
insb
int
bnd
xchg
lret
vphaddudq
or
or
mov
cmpl
lds
testb
dec
inc
imul
movsb
fs
or
xor
jbe
icebp
aaa
fs
mov
movsl
jp
mov
pop
ja
int3
mov
in
cmp
xchg
push
mov
push
ljmp
out
dec
adc
adc
fmull
xlat
popf
shll
out
cmpsb
mov
mov
cli
cmpsb
xchg
pop
lcall
xchg
movsl
stc
mov
mov
xor
ljmp
aam
sbb
and
mov
cli
nop
or
lods
out
pop
add
pop
cs
pop
adc
out
lret
loopne
shlb
std
adc
sbb
cmp
and
mov
mov
loope
or
mov
push
fwait
outsl
cmp
and
jecxz
xor
cld
test
scas
mov
stos
adc
xor
jecxz
mov
mov
mov
adc
pop
fisttpl
rcrl
xor
ficoml
or
xor
pushf
inc
fwait
adc
pop
pushf
dec
gs
pop
mov
imul
mov
sbb
mov
mov
pushf
mov
movsl
jnp
mov
clc
outsb
adc
pop
sbb
and
into
data16
outsb
jne
inc
in
dec
icebp
add
pop
jmp
jo
add
dec
mov
or
pop
popf
imul
sub
sar
mov
cwtl
mov
nop
dec
cmp
push
sbb
dec
pop
std
jp
push
dec
xchg
jp
and
loop
push
fisubrl
pop
and
movsb
call
and
lahf
cmpsb
subl
push
fists
jmp
stos
xchg
in
loop
repz
ret
add
mov
cmp
insl
mov
pusha
aas
out
arpl
jnp
sub
xor
addr16
in
in
xchg
sti
stos
sbb
push
xchg
inc
xchg
mov
mov
cs
int
ljmp
aad
xor
cltd
push
testb
addb
inc
popa
jb
jns
shll
pusha
and
mov
mov
jns
xchg
in
add
sub
adc
aaa
xchg
sub
inc
add
daa
ltr
sbb
mov
addr16
push
cltd
mov
push
movsl
outsb
adc
cmp
jp
or
dec
push
inc
or
lock
mov
mov
mov
mov
aad
sbb
stos
jle
mov
frstor
stos
fimull
fwait
das
fstps
imul
shrl
sub
test
xchg
sahf
jge
call
in
inc
pop
pop
jbe
clc
fld
push
sahf
shlb
fcoml
cmp
xchg
xor
shrb
in
jmp
jl
sub
test
je
jp
add
or
mov
int3
xor
lret
cs
xor
ss
fcoml
push
popa
jo
cmpsl
sahf
xor
jns
jmp
mull
sub
cli
int
add
add
mov
cmp
aas
pop
xor
cmp
das
fs
inc
push
push
in
js
and
mov
aam
sbb
xor
pusha
test
call
hlt
cld
lea
outsb
fisubl
cmp
lea
or
clc
sub
repz
leave
pop
cli
cmpsl
in
push
out
mov
sahf
push
iret
jmp
sub
add
pop
fmuls
int3
mov
in
int
aaa
jmp
sbb
shlb
push
sub
dec
dec
jle
or
inc
or
imull
popf
outsl
lods
mov
inc
xchg
bound
mov
cs
nop
fisttpl
mov
ss
dec
shrb
outsb
push
pop
inc
push
push
pop
bound
and
in
inc
nop
xor
mov
test
aam
icebp
lahf
shrl
cmovs
dec
adc
divl
pushf
adc
add
push
sbb
mov
into
jne
rcl
shlb
loop
in
in
dec
mov
arpl
cmpsl
xchg
les
in
sub
insl
stc
loop
jno
cmp
ret
xchg
insl
sbb
repnz
imulb
pushf
xchg
pop
in
enter
sbb
mov
rorl
and
xor
call
jmp
call
sub
lahf
lock
or
rolb
jns
cltd
idivb
mov
sbb
pop
lock
jns
std
mov
test
repnz
int3
cmp
js
push
dec
jne
or
outsl
xor
int3
push
dec
shrb
sub
out
mov
pop
out
arpl
jbe
mov
pop
mov
pop
out
sub
mov
enter
aam
jmp
pusha
xchg
push
xchg
jg
push
pop
mov
jne
test
adc
mov
xchg
xchg
mov
std
mov
idivl
rcrb
sahf
and
lahf
sahf
out
add
ss
psubusb
pop
fisttpl
subl
in
fwait
mov
sar
into
ret
xor
mov
pop
sbb
sbb
push
aam
xor
push
gs
mov
mov
data16
sub
std
mov
dec
lret
sahf
jb
cld
movsb
jo
stos
mov
jnp
dec
and
in
jno
push
pop
pusha
loopne
cwtl
add
pop
jbe
leave
adc
daa
mov
arpl
push
cmpsb
cmp
lock
popf
push
add
mov
rcrb
pop
dec
pop
ss
inc
inc
inc
test
jl
jo
cmp
aaa
outsl
mov
std
lret
inc
mov
jae,pn
cmpsb
push
lea
sub
sbb
push
cmp
adc
cmp
push
ja
xor
and
jp
cltd
mov
add
mov
lret
aad
not
mov
and
test
pop
ja,pn
jne
xchg
inc
mov
or
rcr
negb
jno
or
or
inc
jmp
leave
push
xor
pop
add
daa
push
jbe
xchg
in
sbb
push
je
xchg
daa
test
xchg
mov
and
mov
inc
mov
cs
and
loopne
stc
mov
xchg
xor
push
dec
int3
cmp
or
insl
stos
arpl
dec
fisubs
mov
jns
push
and
mov
test
stc
dec
mov
dec
rolb
jnp
les
aas
nop
jge
int3
push
iret
lods
adc
mov
sbb
inc
cmp
hlt
pushf
clc
xchg
dec
outsl
pop
pop
and
inc
fdivrp
mov
mov
lret
bound
sub
push
lret
int
xor
mov
rol
popf
xor
inc
sarl
xchg
stc
xor
shrb
xorb
out
outsb
icebp
aas
add
lea
push
rorb
cli
jecxz
loope
xchg
lahf
inc
fsts
cmp
stos
test
test
mov
subb
lods
test
push
mov
cmpsl
inc
movsl
add
mov
lea
sub
inc
call
or
jmp
nop
mul
jnp
lahf
loop
cmc
dec
outsl
sub
push
lret
cmpsb
popa
cmpsl
and
or
sbb
add
and
push
fildll
adc
jge
jbe
sarb
loop
jae
mov
repz
or
push
mov
inc
jne
and
jae
pop
dec
outsb
mov
popf
jb
add
fwait
popf
sti
xbegin
jle
mov
outsb
fadd
test
cmpsl
leave
std
xor
stos
cmc
sbb
sbb
push
rorb
mov
and
jnp
sahf
addl
cmp
sub
xchg
dec
sub
inc
mov
out
or
lahf
inc
mov
mov
mov
insb
inc
dec
mov
fsubrl
jbe
cmc
xchg
or
and
scas
cmpsl
jecxz
jg
sti
test
mov
int
add
js
imulb
shl
xor
lock
loopne
loopne
lcall
loop
lods
mov
arpl
rcll
shl
cld
sub
loop
xchg
mov
jo
cmp
add
add
xchg
jb
sub
jmp
in
mov
or
les
sbb
insb
rol
adc
dec
mov
pusha
lods
mov
cmpsl
daa
test
cmp
and
adc
xchg
sbb
enter
jnp
mov
jle
lcall
cmc
fnstcw
aad
sbb
and
push
lret
push
xor
push
dec
mov
mov
and
dec
add
cmp
cmpsl
lods
add
mov
int
push
xor
ret
xchg
ret
cmpsl
and
mov
sbb
fs
test
in
repz
pop
popf
pop
mov
cld
mov
cmp
fadds
push
loopne
mov
pop
aad
jae
push
repnz
fmul
in
rcll
xchg
insl
dec
inc
jnp
xchg
pop
outsl
mov
insb
and
xor
jno
xor
in
call
add
aas
enter
sub
aad
addr16
pop
push
jno
mov
xchg
repnz
push
xor
cmp
fcoml
lahf
mov
inc
ds
outsl
mov
aaa
shrb
lock
pop
cld
pop
push
xchg
or
and
push
push
out
mov
mov
cmpsb
cmp
adc
xor
pop
inc
insb
cmpsl
mov
pop
or
push
pop
cld
and
pusha
adcl
add
test
bndstx
xor
movsl
cmp
and
sarl
mov
lcall
adc
fcmovnb
jb
ficomps
int3
out
add
jg
mov
in
ret
shll
jae
cmc
shlb
and
in
clc
mov
aad
sbb
inc
aad
mov
scas
in
ljmp
mov
xor
xor
push
mov
fldl
pop
or
aad
aaa
mov
and
sub
xchg
sub
push
xor
jne
cld
lcall
dec
xor
repnz
mov
mov
add
cmp
sub
ljmp
jo
rcl
jg
outsb
xor
divl
mov
shrl
rorl
mov
out
add
fcoms
addr16
or
into
ret
cwtl
sahf
outsb
in
stc
jnp
pop
mov
fcoml
movsl
xchg
sub
imul
cmp
pop
push
aas
cltd
mov
iret
mov
sbbl
inc
cmp
fisttpll
xor
push
pop
jno
mov
push
inc
outsb
clc
push
jl
or
pop
push
add
repz
push
mov
or
xchg
mov
out
imul
mov
scas
mov
pop
lret
in
inc
enter
scas
loop
cmp
push
xchg
or
push
aad
push
dec
mov
xchg
mov
ficomps
int3
js
pop
cmp
mov
push
sub
jae
adc
cmp
cltd
dec
jp
mov
inc
lcall
mov
jbe
inc
sub
cli
mov
popf
mov
shlb
je
push
rclb
cltd
jge
xor
data16
les
cmp
aas
andl
arpl
sbb
and
mov
add
push
in
lods
daa
call
pop
mov
in
cli
sbb
sub
sub
mov
mov
adc
push
test
add
mov
dec
sbb
aas
jo
mov
add
push
pop
sbb
mov
mov
fwait
mov
pop
pop
push
daa
ss
frstpm(287
push
adc
sbb
add
pop
mov
push
pop
jg
sub
pop
roll
movsb
int3
fcoms
cmp
cmp
xor
or
mov
and
enter
inc
lret
divl
mov
popa
repz
lcall
cmp
dec
inc
xlat
jno
in
repnz
or
int
fsub
stos
ret
add
icebp
popf
into
divb
data16
test
adc
fwait
ljmp
sub
inc
arpl
inc
add
mov
testl
bound
push
mov
add
aam
xchg
data16
mov
das
sahf
ja
aaa
shl
fdivr
xchg
xchg
lods
in
inc
aad
lret
loop
test
nop
and
or
mov
xchg
jo
outsl
pop
outsb
popf
fcomp
loop
fistpll
repz
hlt
ljmp
xchg
mov
lea
stos
xchg
movsl
loope
pop
adc
inc
fistpl
inc
daa
or
mov
xchg
xchg
push
dec
xchg
xor
aas
subl
xchg
sbb
fisttpll
and
fwait
mov
sub
std
ja
lds
jmp
sub
idivl
fwait
mov
inc
push
mov
out
mov
mov
test
pop
or
loopne
cmp
pop
xchg
inc
das
xlat
add
xchg
aad
lock
les
add
pop
mov
push
lret
test
or
sbb
sti
fisubl
hlt
pop
dec
jg
adc
or
aad
ss
in
les
cmp
dec
push
lret
jo
popf
lahf
mov
cmp
ljmp
jl
clc
or
negl
gs
cmp
inc
outsb
pop
cltd
mov
mov
int3
fists
mov
jg
cmp
inc
pop
push
push
test
adc
aad
insl
jns
push
xchg
pusha
sarb
aaa
fisttpl
cmpsb
or
sbb
leave
push
lahf
mov
xor
fdivrl
pop
add
mov
gs
adc
cmp
divl
dec
jno
xor
enter
xchg
out
idivb
xor
cmp
and
and
xchg
xchg
cmpsb
mov
sti
cmpsl
push
call
jl
dec
lahf
push
imulb
pavgb
hlt
add
mov
mov
arpl
cmpsl
adc
inc
sub
mov
dec
aaa
ljmp
or
mov
and
lds
xor
cmp
stos
cmp
sub
mov
mov
pop
and
mov
mov
pop
mov
adc
add
sbbb
fsubl
in
add
inc
scas
es
popa
or
loope
sbb
bound
add
sti
je
nop
and
or
fisubl
cs
outsl
and
sub
fidivl
jmp
popa
dec
lret
jge
call
jmp
pusha
xchg
pop
lea
cld
mov
cmp
int3
in
ret
push
das
mov
repz
add
jg
incl
ret
nop
jge
inc
mov
fdivp
sbb
movsl
ja
or
cmp
push
inc
int
xchg
and
lods
cmp
gs
cmp
push
mov
jmp
sub
nop
fidivs
cmpl
test
sub
adc
sbb
mov
rcrl
xchg
sbb
push
gs
ja
jecxz
inc
xchg
jmp
lret
popa
sub
es
sti
cmc
fidivrl
xor
push
add
fcmovbe
aas
lods
add
ret
push
sub
mov
ret
cld
adc
dec
mov
or
mov
jbe
adcb
ss
add
jge
cmp
rcrb
pop
xchg
fwait
pusha
jg
ret
cmp
xchg
mov
int
clc
xchg
lcall
stos
push
int
or
aaa
dec
push
mov
inc
pop
fistpll
lods
std
inc
inc
pop
jg
jb
add
adc
pop
gs
fwait
daa
sub
int
push
js
sbb
cmp
sbb
rcr
scas
sti
add
repnz
incl
fwait
imull
push
adc
sbb
dec
xchg
movsl
push
out
roll
loope
mov
out
jnp
popa
in
or
inc
and
and
jecxz
shrb
pop
xor
add
push
add
xchg
das
sti
clc
inc
xchg
icebp
xchg
fadd
dec
sti
push
mov
inc
es
and
dec
mov
sarb
lret
cmp
xchg
test
sbb
sub
and
cmp
sub
outsb
insl
inc
dec
push
leave
insl
fldl
loop
push
sbb
sbb
push
jge
and
sub
orb
adc
fisubs
clc
cmp
in
dec
cmp
adcl
call
cmp
outsb
test
into
in
mov
ljmp
out
mov
enter
lods
mov
mov
popl
push
cmp
mov
pop
jb
sub
fadds
sub
xor
mov
lock
mov
adc
stc
dec
lods
pop
inc
imul
push
ds
dec
outsb
inc
arpl
mov
adc
sub
rcrl
sbb
push
jg
stc
imul
sub
pop
jae
and
xchg
mov
mov
pop
xor
xchg
and
ret
push
push
cs
stos
dec
adc
and
mov
outsb
pusha
mov
sbb
push
movsl
and
ficoms
add
or
test
gs
cmpsb
addr16
pop
or
add
xor
popf
leave
es
jo
xchg
cmp
mov
jnp
pop
or
hlt
push
xchg
sub
into
mov
cmp
pop
les
sub
sub
jne
xchg
out
fldl
sbb
mov
repnz
sbb
jae
imul
xchg
push
shrl
sbb
jnp
mov
lahf
cmpl
cmc
push
rcll
xlat
jae
xor
in
inc
mov
movsb
fs
pop
jmp
aas
in
jnp
scas
int3
push
js
add
test
add
mov
pop
pop
loop
hlt
inc
xchg
mov
and
andb
push
ja
clc
rorl
xchg
dec
icebp
stos
enter
fnstenv
inc
and
decb
add
enter
aam
and
rcll
cmpsb
jno
mov
dec
add
and
add
inc
lods
dec
add
or
cltd
mov
aaa
cmp
mov
mov
inc
mov
mov
cmp
cwtl
push
xor
mov
enter
das
cli
add
push
jmp
jns
into
pusha
out
ja
ja
lock
cmpsb
gs
mov
repz
imul
test
pusha
jmp
cld
mov
stos
in
pop
pusha
test
ljmp
repnz
jge
int3
movsl
cmc
xchg
js
jecxz
pop
pushf
mov
add
inc
outsb
test
enter
xlat
fmull
movsb
pop
movsb
mov
test
push
addr16
loope
lret
ficoms
sbb
mov
adc
dec
adc
dec
stc
mov
or
xor
sarb
jge
pusha
dec
out
int3
mov
and
test
dec
stos
pop
dec
jle
enter
push
lahf
test
jne
or
sahf
or
outsb
pop
xchg
sbb
iret
jnp
outsb
mov
fs
shl
cltd
dec
rol
mov
mov
sub
popf
test
sahf
into
adc
or
movl
ret
into
xchg
sub
ds
xchg
pop
hlt
mov
xor
sbb
mov
add
lea
or
ja
xor
mov
sub
sbb
movsl
push
rclb
cwtl
adcb
mov
icebp
rcrl
and
mov
pop
les
roll
mov
mov
stos
rcrb
and
flds
dec
mov
ret
sbb
pop
push
fnsave
inc
insb
and
mov
jle
sbb
xchg
movsb
sbb
xor
mov
in
push
mov
pop
sbb
jno
lret
xchg
call
insl
xchg
dec
adc
stos
jne
xor
or
dec
mov
rcrl
mov
push
je
loope
inc
call
jge
push
cmc
popa
daa
cmp
push
shrl
out
mov
fdivrs
enter
cmp
xchg
adc
sti
jb
push
test
sbb
xchg
mov
push
inc
in
mov
jno
cmpsb
pop
mov
xor
mov
mov
sub
mov
daa
pop
ja
mov
imul
test
cmpsl
std
aam
mov
inc
sbb
push
imul
loopne
mov
xor
and
sub
shrl
sarl
adc
bound
in
jns
push
adc
adc
xor
dec
dec
xchg
ds
add
fld
movsl
sti
mull
dec
dec
stc
iret
push
clc
mov
jno
out
push
mov
es
mov
sbb
fbld
xor
sbb
scas
xchg
jae
xorl
jmp
js
ljmp
int
lcall
jo
mov
cmp
inc
das
aas
xor
mov
ficomps
in
push
push
sub
add
dec
addr16
les
cmp
jns,pn
lahf
pop
fidivrs
dec
sbbb
inc
sbb
jge
jle
sbb
cld
pop
adc
pop
enter
mov
jno
sub
jo
jno
inc
test
push
jne
das
jno
adc
ds
notl
imull
sbb
cmp
das
mov
or
pop
sub
mov
add
scas
sub
mov
mov
pop
insl
or
ss
mov
rcr
mov
sbb
pop
mov
mov
xchg
xor
dec
jno
movb
test
sub
lcall
loop
xor
push
pop
push
shlb
in
loope
pop
aaa
lock
pop
add
cwtl
shll
mov
movsb
push
in
sub
push
or
push
jne
ljmp
cmp
pop
jle
in
xchg
int
fsubl
dec
rcr
push
hlt
and
pushf
mov
or
scas
push
pop
dec
add
pop
cmp
xchg
lods
imul
sub
xor
test
mov
stos
mov
movsb
sub
sbbb
out
dec
add
pop
dec
div
subb
inc
ret
mov
mov
pushf
add
xchg
xchg
outsb
and
inc
xor
hlt
ret
sbb
cmp
mov
pop
mov
aaa
xchg
cmp
test
sub
outsl
mov
icebp
inc
xchg
cmpsl
mov
push
mov
push
call
stos
cmp
dec
loop
inc
test
addl
sub
or
cmc
cmp
cmp
push
hlt
mov
loopne
in
in
imul
frstor
push
cmpsl
daa
icebp
cmp
mov
push
mov
mov
sbb
or
pop
mov
leave
mov
aas
test
jnp
add
int3
in
cmp
xchg
push
in
pop
mov
add
xor
xchg
jecxz
in
test
enter
jmp
push
cmp
rcr
fs
nop
xor
dec
call
mov
xchg
push
mov
dec
sub
cmp
adcb
lods
mov
icebp
mov
pop
aaa
adc
add
enter
insl
cmpsb
sub
lods
in
stos
xchg
xchg
jnp
and
mov
inc
stc
mov
sub
and
subb
jne
test
cltd
xchg
inc
mov
dec
in
pushf
mov
cld
in
pushf
repnz
icebp
cmp
adc
filds
cltd
mov
xor
and
imul
subl
jmp
add
movsb
sbb
pop
insb
test
shll
stos
mov
mov
sub
pop
out
jne
pop
testb
sub
mov
jle
js
pusha
gs
lcall
ljmp
pop
xchg
cwtl
es
leave
fwait
ja
lock
arpl
mov
cmp
daa
repnz
and
push
and
stos
inc
nop
jle,pt
inc
or
dec
lock
jle
movsb
out
add
sub
shlb
cmp
cmp
lea
insb
insb
push
pop
mov
cmp
fbstp
mov
shr
jge
push
xchg
adc
movsb
or
jmp
push
adc
cmc
mov
and
mov
mov
ljmp
push
push
inc
xor
push
xor
and
jl
jo
lcall
sub
int
jne
mov
int
sbb
rcrb
out
mov
push
mov
push
xchg
mov
sub
inc
in
fstl
push
and
and
add
push
xor
mov
mov
test
adc
mov
and
loopne
lret
lock
pop
leave
add
cmc
adc
hlt
push
out
stc
rcll
ja
cli
data16
inc
or
into
cmpsl
outsb
ja
inc
pop
fwait
mov
addb
and
jne
xchg
sub
cmove
push
stc
sbb
jo
hlt
jns
subl
pop
rclb
xchg
aas
loopne
lock
adc
mov
enter
xchg
pop
lret
mov
inc
cmp
jl
pop
xchg
jns
xchg
add
push
xlat
aas
scas
loope
jnp
adc
xor
or
sub
push
mov
push
pop
or
sbb
test
jl
lret
xchg
int3
push
cwtl
or
sub
clc
ljmp
mov
in
add
add
mov
jmp
push
inc
add
adc
dec
rcrl
es
jle
or
mov
lods
pop
sub
mov
pop
jno
xchg
or
push
xor
dec
inc
sbb
mov
adc
xor
daa
dec
ret
mov
in
fs
mov
jbe
lea
out
add
addr16
ljmp
mov
scas
xchg
mov
jg
lods
sub
jp
mov
sub
cld
sbb
aad
negl
out
ds
add
mov
jmp
sub
xor
lods
shr
ret
out
fisubs
rcrl
push
or
sub
mov
xchg
daa
sub
popa
push
outsb
sbb
lahf
cltd
jae
sub
or
stos
mov
lret
stc
in
cmp
pop
sbb
inc
bnd
loop
add
xor
cmp
or
dec
xchg
xchg
lods
out
sti
add
repz
jno
inc
lods
call
pop
mov
insb
inc
insl
out
fildll
gs
mov
mov
mov
xchg
sub
push
call
xchg
je
dec
mov
aaa
dec
test
push
ja
subl
call
jp
repnz
mov
jo
arpl
clc
mov
pop
xor
int
sbb
mov
shrl
xchg
push
sahf
pop
cwtl
adc
sarl
fadds
sub
test
jg
je
loop
jmp
sub
adc
jns
fstp
icebp
xorl
xor
stc
mov
push
pop
js
out
enter
rorb
filds
das
and
or
cli
icebp
and
lods
into
adc
mov
aas
adc
inc
es
push
clc
lret
mov
cli
sub
in
jmp
push
addr16
aas
push
jle
nop
sub
mov
mov
aas
cli
outsb
fidivs
adc
mov
std
hlt
mov
xchg
in
shll
jns
cmpsb
add
add
inc
loop
clc
or
pop
movsb
insb
cmpsb
aas
adc
pop
mov
adc
sbb
add
or
mov
loopne
sbb
push
dec
xchg
jne
ss
addr16
cld
iret
aaa
mov
pop
in
fwait
cld
dec
mov
outsl
cltd
out
or
or
mov
lods
pushf
outsb
cltd
push
mov
sti
fwait
test
in
jmp
ret
pop
sub
insl
and
lret
notl
mov
mov
ds
jae
sbb
shrl
add
mov
iret
push
sahf
inc
into
jbe
ret
and
mov
cmpsl
enter
into
int3
push
or
aaa
sbb
shll
data16
adc
and
pop
jne
xor
cmp
mov
inc
pop
cmc
insb
inc
or
ja
pop
fldt
test
xlat
jmp
into
lahf
mov
add
subl
or
pop
lds
cmp
mov
imul
mov
jecxz
insl
or
sub
mov
push
outsl
inc
sbb
fwait
in
lods
pushf
fidivl
mov
mov
sub
pop
and
jnp
inc
cld
out
and
leave
out
dec
rcrl
xor
sbb
or
aad
out
test
std
cmp
mov
in
loop
add
ss
adc
dec
dec
lret
adc
inc
mov
mov
sarl
adc
push
mov
push
loopne
sub
xchg
or
mulb
test
push
sbb
xlat
inc
mov
mov
inc
dec
sti
lret
xor
lea
jo
fwait
repnz
mov
sbb
dec
xor
imul
fistpll
adc
add
cli
adc
xchg
sub
movsb
inc
std
jne
mov
jecxz
xchg
out
and
pusha
sbb
xor
push
and
sub
cmpsb
add
dec
arpl
sbb
rcll
icebp
ss
adc
out
xchg
fbstp
pushf
arpl
nop
mov
in
mov
inc
mov
inc
push
and
push
mov
js
subb
insb
imul
xchg
jge
dec
insl
nop
insl
pop
sub
adc
daa
jbe
sbb
fs
movsl
adc
pop
xor
xor
in
xchg
stos
lret
sbb
dec
fldenv
jns
nop
push
mov
cli
mov
mov
cwtl
lcall
mov
xchg
add
push
les
push
popa
ror
test
sti
jp
adc
xlat
xchg
lods
pop
dec
push
cltd
xor
out
mov
ficoms
and
aas
rcll
jl
push
fs
and
ret
pop
mov
cwtl
leave
frstor
imul
mov
xchg
cwtl
sbb
pop
cltd
addb
ret
jl
sbb
xchg
shlb
enter
inc
mov
dec
or
sub
adcl
jno
fs
push
stos
lock
xchg
push
fs
jno
and
jno
and
ljmp
dec
das
sub
dec
out
lea
inc
pavgb
pop
stos
and
nop
and
mov
sub
mov
mov
mov
push
xchg
push
xchg
sbb
imul
jo
xor
out
nop
dec
cltd
push
dec
or
jp
sbb
adc
push
or
cmc
shll
dec
fistl
adc
mov
push
addr16
inc
pop
mov
clc
pop
test
sub
mov
jne
mov
and
adc
int3
push
jne
sub
push
int3
in
fdiv
pop
lret
test
xchg
cmpsl
rcll
xchg
out
add
dec
lret
lret
movsb
inc
or
xor
lea
mov
xorl
loop
jmp
sbb
push
mov
push
mov
daa
hlt
sbb
pop
mov
nop
push
shrl
or
data16
and
sbb
inc
or
jns
clc
adc
dec
scas
lock
lahf
es
xorb
out
adc
pop
push
nop
in
jl
mov
rclb
dec
ret
loope
ljmp
xchg
push
sbb
mov
add
push
xor
fs
mov
push
or
add
cmp
sbb
add
and
sahf
lea
rcr
jmp
in
jb
add
and
or
sub
dec
clc
lahf
mov
ljmp
add
leave
cmpb
in
scas
js
push
test
xor
movsl
dec
das
sbbl
or
push
fs
dec
push
sbb
aaa
das
jmp
mov
push
jmp
mov
insl
push
inc
sub
push
xchg
xor
inc
push
push
pop
mov
xchg
cs
pop
add
sahf
js
lret
stos
dec
xchg
xchg
mov
outsb
sbb
mov
xchg
and
mov
xor
dec
jno
mov
out
mov
mov
test
push
mov
mov
fbld
cmp
mov
movsl
loopne
push
or
data16
sarl
arpl
in
insb
ljmp
xchg
sub
cmpsl
pmullw
int
and
cmp
into
xor
push
sub
push
test
hlt
mov
mov
mov
clc
mov
jne
shl
aaa
cld
adc
or
gs
ss
movsl
lcall
xor
cmp
push
mov
dec
mov
popf
inc
repnz
push
xchg
dec
adc
mov
mov
cmp
jb
cmc
pop
loope
lret
call
std
pop
cmp
inc
leave
loopne
push
sbb
insb
jge
mov
xchg
repz
test
jns
mov
inc
fcos
jg
int
xlat
mov
xor
lret
ret
jae
cmc
in
in
hlt
jae
xor
aad
dec
sbb
sarl
mov
das
inc
push
lea
and
or
arpl
inc
popf
sti
iret
add
lds
lret
inc
movsb
and
jne
aas
pop
cmp
int3
or
ljmp
mov
pop
std
scas
pop
daa
or
mov
daa
jl
pop
add
rolb
push
aad
pop
ljmp
inc
adc
cs
loop
sbbl
dec
push
out
and
arpl
jnp
inc
fiaddl
fsubrs
out
rcrl
jne
out
pop
push
mov
popa
pusha
jg
cmp
push
and
leave
test
xchg
std
mov
xor
jb
mov
mov
stos
pusha
leave
mov
ror
ret
mov
lret
mov
outsl
jp
leave
mov
mov
xor
insl
jnp
xlat
push
xchg
push
or
mov
adc
mov
pushf
ret
lea
push
or
inc
bound
mov
jp
je
xchg
inc
or
cmc
and
out
jle
in
icebp
xchg
scas
xor
repnz
sbb
dec
dec
pop
cmp
stos
jmp
sub
mov
out
out
ss
push
xor
sbb
jmp
xor
mov
repz
jbe
fs
test
scas
xchg
push
test
inc
push
incl
rcrb
xor
test
adc
xor
shl
js
jae
das
ja
mov
pop
fcoms
push
mov
jge
xchg
push
test
push
push
out
push
mov
dec
push
mov
jg
cwtl
fdivs
mov
add
insb
or
fstpl
negl
mov
enter
aas
stos
and
sub
lods
cmp
incl
inc
mov
mov
xor
pop
lds
or
pop
outsl
push
cld
cmc
mov
xor
mov
clc
paddq
stos
dec
add
mov
cmp
lea
fdivs
push
outsl
push
cmc
stos
rcrb
xor
stos
clc
push
fstpt
mov
jmp
xchg
xchg
mov
mov
pop
cmc
mov
pop
jmp
adc
jns
lods
in
cmpsl
lcall
dec
sub
sbb
pop
scas
ja
sahf
enter
mov
sti
inc
lret
fdivrp
repz
or
lds
push
ret
in
out
xor
sahf
add
repz
xchg
adc
pop
decb
mov
in
jg
mov
test
movl
xchg
int
cmp
push
loop
movsb
xchg
idivl
pop
filds
mov
pop
popa
xchg
in
lcall
out
incl
ret
in
xchg
mov
adc
jno
xor
clc
and
push
call
aad
inc
dec
push
arpl
xor
xchg
inc
push
shl
lods
mov
out
fmull
dec
repnz
inc
cs
mov
and
sbb
push
mov
pusha
jecxz
add
mov
imul
mov
std
mov
in
xchg
jl
or
xchg
dec
test
adc
mov
and
add
dec
sbb
fstps
add
repz
cmpsl
pop
daa
stc
pop
jecxz
inc
clc
aaa
lods
stos
mov
mov
sbb
push
jns
loop
andl
pop
rorb
mov
mov
es
inc
lock
cmp
ret
in
or
fildll
jmp
push
push
jbe
test
dec
and
pop
push
rol
sbb
ror
cmpsb
movb
dec
mov
ret
fisubrs
sub
sbb
pinsrw
popf
cld
push
inc
mov
jb
sbb
mov
in
xchg
inc
sbb
or
jo
mov
sub
std
xor
push
cmp
imul
cltd
mov
dec
scas
insb
nop
jmp
push
outsl
and
sub
mov
sbb
add
xor
or
sbb
lock
mov
pop
mov
xchg
scas
and
scas
in
dec
in
enter
movsl
sbb
enter
mov
insb
cwtl
pop
in
stos
xchg
jae
lods
ljmp
push
shlb
push
sub
sbb
jae
xchg
gs
pop
aad
mov
and
in
sbb
std
add
cwtl
jge
loope
cmp
mov
and
push
or
in
push
imul
push
lods
lret
sub
shll
test
mov
shl
xchg
jg
test
and
jmp
xacquire
or
repnz
adc
insl
mov
fwait
stos
xor
fwait
lcall
mov
lods
and
sti
popa
lea
pop
aam
jecxz
ret
popa
sub
mov
xchg
jae
sbbb
aam
inc
jb
cmp
dec
lods
sub
sbb
jle
scas
clc
je
stos
and
shll
in
sti
adc
and
psllq
xor
int3
jle
insb
inc
mov
and
mov
inc
sub
mov
push
movsb
popa
mov
out
stc
adc
test
in
mov
stc
cmc
sbb
mov
inc
out
sub
js
fdivrs
into
repz
mov
out
push
testb
mov
mov
cltd
loop
jo
sarb
sbb
pushf
insb
sub
lcall
pop
insb
xor
mov
decb
sub
inc
push
add
push
daa
adc
cmp
gs
ret
test
pop
jge
sbb
jo
ja
sbb
into
hlt
cmpsb
xchg
addr16
jbe
je
pop
aaa
cmpsl
enter
fucomp
inc
adc
iret
aaa
mov
dec
mov
push
ret
jae
dec
arpl
xor
or
and
jmp
stos
pop
dec
pop
cmp
sub
sub
fimuls
out
mov
adc
shrl
or
sbb
push
fnstsw
adc
push
and
sub
aam
int
xchg
ja
adc
aad
mov
shrb
add
fstpl
sub
add
ljmp
mov
mov
dec
or
fisubrs
cltd
xchg
jl
cwtl
sti
clc
daa
sub
and
stc
lahf
sub
dec
insl
sub
lret
or
cltd
and
xchg
lods
mov
cmp
cmp
xchg
data16
fwait
and
cmc
es
es
in
pop
aad
fimull
cltd
jle
cli
fisttpll
and
jecxz
cld
mov
jo
jmp
mov
jecxz
adc
pop
shl
std
add
mov
xor
jnp
pop
xchg
idivl
ds
mov
repz
jbe
jmp
xlat
mov
fwait
int3
mov
ja
sub
mov
sbb
cmc
jle
push
push
adc
in
das
inc
add
mov
jmp
pop
shl
xor
les
mov
fwait
xchg
clc
xor
sub
stos
cld
fs
ror
dec
std
pusha
xlat
jmp
cmp
mov
jns
sbb
iret
test
insl
out
add
xor
lds
and
stos
or
cld
test
push
sub
and
int
out
push
icebp
fists
hlt
pop
test
adc
subl
mov
roll
mov
adc
push
mov
add
mov
or
mov
adcl
jecxz
push
sbb
icebp
cmp
cmp
scas
pop
es
popa
or
jl
ret
mov
adc
and
fldl
fmull
scas
cmp
scas
cld
jp
inc
ds
add
xchg
and
add
mov
xlat
insl
xor
and
dec
daa
add
shlb
jge
inc
negb
sbb
mov
mov
dec
fsubrp
cwtl
into
jmp
arpl
leave
xchg
mov
dec
xor
shll
fimuls
mov
inc
daa
cmp
push
in
ret
insb
imul
mov
negl
insb
inc
jmp
out
mov
push
pusha
sbb
inc
cli
mov
in
mov
sbb
xor
jo
jge
daa
cmp
addr16
sahf
mov
gs
lods
fcoml
push
or
jbe
stc
push
andl
lods
or
xor
ja
shll
xor
daa
or
cmpsl
or
lcall
dec
sub
push
push
or
inc
addr16
push
mov
sahf
sub
push
push
push
js
inc
sub
aaa
dec
lods
inc
lock
loope
xchg
repz
xor
jle
into
mov
in
pop
cmpl
cmp
inc
in
mov
inc
scas
cmp
jl
scas
lods
xor
jle
cmp
ret
lahf
fwait
xor
or
inc
push
loope
mov
dec
test
jg
cmp
jb
xor
sub
add
ret
cli
shll
aam
out
addb
pop
shlb
sub
inc
dec
cmp
mov
ret
dec
jg
fimuls
push
mov
shl
jae
mov
test
nop
inc
xchg
mov
and
pop
subb
jge
sub
add
mov
inc
faddl
add
cmp
fcmovbe
dec
loope
and
sbb
mov
adc
mov
push
stos
add
cli
jo
xchg
jl
test
mov
test
andl
sub
pop
cltd
aaa
roll
add
mov
ds
sbb
adc
iret
scas
mov
inc
pop
pop
enter
cmp
xchg
dec
addl
nop
pop
test
pushf
repz
rclb
test
sbb
test
fcompl
test
pop
push
sbb
pop
jbe
ljmp
mov
push
adc
ja
push
push
push
pop
adc
dec
cmp
dec
xchg
xlat
scas
adc
mov
mull
shll
sub
mov
push
adc
xor
icebp
loopne
lret
lret
push
cs
fistps
in
add
adc
add
push
rclb
scas
mov
xchg
aad
inc
icebp
push
fdivrl
mov
ljmp
xor
loope
cltd
mov
shll
adc
cs
test
lds
imul
call
add
inc
fisubs
dec
jbe
cmpsl
mov
dec
int3
mov
mov
ljmp
test
cmc
push
sub
cwtl
push
popf
xor
jg
adc
sub
jl
leave
lcall
mov
dec
mov
and
lret
test
mov
cltd
mov
jle
loope
aad
ljmp
out
xor
jl
imul
pop
push
dec
xchg
es
ret
xor
sti
in
adc
repz
shl
jbe
pop
rol
jle
pop
pop
jno
insb
aam
mov
outsb
cmp
out
movsl
movsl
and
sub
adcl
cmpsb
push
cli
daa
mov
jnp
setb
mov
push
cs
jae
aam
sub
jo
add
mov
aaa
pushf
fdiv
add
fists
aaa
sar
ljmp
and
outsl
loop
roll
inc
loop
lahf
popf
sbb
ljmp
mov
or
jne
sbb
push
leave
jg
adc
or
aaa
loop
pop
mov
movzwl
in
push
rcl
fisubrl
ljmp
push
jecxz
xchg
ret
jbe
sub
sbb
pop
cmc
xor
fildll
xchg
adc
push
ret
fsub
xchg
push
inc
pushf
int
loop
and
or
cmp
dec
xchg
cmpsl
adc
in
popa
sub
ljmp
fwait
or
pop
mov
add
push
ss
fistpll
mov
jmp
adc
sub
pop
outsb
popa
xchg
aam
push
jg
in
xor
xor
sbb
js
test
dec
in
pop
jmp
popa
call
test
test
ret
andb
iret
xor
icebp
pop
addr16
fsubs
sbb
aam
rolb
out
mov
or
push
adc
call
mov
movb
cmp
push
inc
xchg
mov
xor
or
int3
push
xchg
xchg
sbbb
jne
xlat
insb
ja
mov
and
lret
arpl
sahf
mov
pop
jo
add
scas
sub
cmp
ret
dec
sub
jnp
ret
dec
xor
mov
push
loop
lret
and
in
add
sbb
lcall
dec
repz
popf
das
aam
test
dec
js
aam
mov
adc
mov
mov
cld
or
addr16
sub
cmp
push
in
inc
shlb
scas
dec
dec
das
idivb
fwait
test
sub
jp
mov
pusha
mov
movsl
fidivrs
fcomp
push
xchg
adc
lock
mov
mov
xor
mov
repnz
pop
imul
jmp
mov
pop
sbb
dec
add
jns
repnz
mov
fistps
leave
inc
mov
sub
iret
xorb
test
mov
xchg
xor
js
mov
xchg
xchg
sub
sbb
or
push
pop
push
mov
mov
fsubl
fdivrl
push
scas
sbb
ror
or
andl
sub
sub
insl
dec
mov
inc
cltd
xchg
push
or
adc
pushf
mov
fcompl
or
sbbl
out
jmp
std
lret
insb
cmp
stc
cmpsb
xchg
jmp
decb
or
jnp
mov
or
jnp
inc
fwait
dec
loopne
clc
mov
jmp
mov
outsb
jecxz
js
mov
mov
mov
push
or
repz
into
xor
fisttps
cmpb
in
jmp
les
fucomi
lods
mov
lret
roll
cmp
inc
pop
idivl
or
jle
jg
xchg
add
adc
andb
cmp
sahf
push
pop
jne
cmp
stos
ljmp
lds
dec
fstpt
in
imul
ds
or
sbb
mov
fldl
imul
mov
push
addr16
xchg
movb
iret
sub
cmp
pushl
xlat
dec
pop
int3
lods
mov
fcoml
lret
dec
mov
rorb
cmp
mov
push
jns
xchg
inc
shll
lahf
jae
sbb
adc
loope
push
mov
aas
mov
out
inc
fcmovnb
arpl
in
push
shr
dec
mov
push
xchg
mov
sub
lods
mov
repnz
xchg
in
pop
lods
or
and
imul
cli
ss
enter
or
cmp
mov
ljmp
ja
sub
jbe
xchg
xchg
loopne
inc
cmp
and
call
adc
adc
shl
loope
and
push
imul
cmp
cmpsb
mov
lret
stc
ficoms
and
aad
push
and
adc
jbe
dec
scas
push
les
imul
sbb
mov
ret
pop
mov
out
cld
les
jg
push
lds
jg
add
outsl
push
xor
daa
xor
mov
aam
popf
inc
mov
inc
inc
pop
shrb
push
jge
fistpl
lcall
adc
lods
fadd
jecxz
pushf
movsl
mov
pop
add
divb
icebp
inc
xchg
int3
rcrl
nop
pop
mov
lods
xchg
add
dec
cltd
fisttpll
jge
pop
sbb
stos
es
outsl
sub
and
scas
std
dec
loopne
sbb
jo
dec
adc
jns
cmp
mov
int3
ss
mov
test
aaa
xchg
sbb
mov
pusha
jle
imul
outsl
mov
inc
movsl
adc
cs
sub
fisubl
addr16
add
pop
mov
sbb
cmp
inc
ds
nop
arpl
ss
push
cwtl
mov
ret
sub
jno
inc
mov
mov
or
mov
stos
scas
stos
and
mov
leave
cmp
and
int3
jne
test
iret
pop
fldenv
push
leave
pop
fists
cwtl
mov
push
pop
push
test
push
popf
gs
ljmp
jne
daa
je
inc
data16
sbb
and
bound
jl
sahf
daa
lahf
xor
mov
xor
aas
ja
nop
xchg
gs
pusha
fnstenv
sub
push
test
mov
and
je
insl
adc
cmp
nop
into
inc
sbb
test
xchg
bound
inc
xor
test
push
xchg
mov
xor
or
dec
cmp
sbb
inc
sti
adc
aas
outsl
jns
shlb
xchg
outsl
inc
int
mov
inc
decb
jne
jp
flds
mov
jns
xlat
or
mov
xchg
mov
xor
dec
sbb
ror
or
push
sbb
repnz
ljmp
hlt
sub
mov
mov
loope
stos
sbb
int3
mov
les
or
outsl
jge
xchg
xor
loope
mov
test
inc
xchg
pop
pop
pop
fs
mov
and
test
mov
sbb
pop
lods
test
mov
pop
int
xchg
shrb
mov
lods
test
dec
out
ja
addr16
ds
mov
or
iret
xchg
repz
outsb
jne
lds
and
mov
mov
stc
jae
xor
ja
jae
lret
mov
test
andb
sarb
mov
mov
dec
mov
icebp
xchg
inc
pop
jo
imul
out
jmp
aam
jecxz
mov
mov
xchg
nop
negb
sbb
xchg
push
dec
movsb
pop
inc
insl
int3
push
mov
xor
cmp
lahf
imul
shlb
or
lock
push
arpl
push
sbb
das
dec
pop
xchg
loope
xor
fwait
xor
sub
add
je
push
jne
cmp
adc
sbb
adc
push
sbb
mov
mov
lret
repnz
push
movsl
inc
aaa
fisubrs
ds
insl
jp
lods
inc
jns
daa
sbb
adc
iret
mov
xchg
xor
dec
pop
test
mov
shll
jne
xchg
jge
mov
jl
and
xor
test
xchg
inc
dec
daa
pcmpgtd
jns
fmull
fistpl
iret
ja
cmp
fbstp
sar
pop
aaa
jmp
mov
xchg
adc
aas
add
pop
lds
xor
stos
hlt
ret
outsl
jle
popa
add
fwait
jbe
xchg
and
notl
pop
pusha
es
mov
ds
mul
mov
mov
arpl
pop
ret
pop
xchg
jge
imul
in
mov
cmpsl
jno
cs
pop
cmp
xchg
mov
leave
dec
mov
jae
int
mov
or
xlat
push
cmpsb
adc
push
loopne
movb
jle
xor
push
iret
test
popf
movsb
adc
in
enter
fcomp
loope
and
and
cmc
test
leave
out
fcoml
das
stos
das
lcall
cmpsl
pop
icebp
mov
sbb
jns
push
mov
xor
int3
dec
enter
stos
fcompp
inc
inc
or
repnz
loop
jp
mov
dec
mov
mov
dec
lock
sub
xchg
into
cli
push
imul
mov
ljmp
es
xchg
ss
mov
push
push
int3
notb
mov
out
js
cmp
jnp
or
test
mov
ficoms
mov
repz
decb
test
fmuls
add
insl
cltd
lods
xchg
pop
outsb
xor
mov
lret
rorb
pextrw
mov
leave
popl
jp
out
iret
mov
ret
push
xorl
pop
das
ss
adc
lods
filds
mov
insl
fnstsw
enter
mov
in
adc
dec
loop
xchg
in
and
leave
mov
loope
movsb
push
dec
mov
push
jb
imul
push
addr16
mov
push
jge
dec
fs
shlb
mov
into
lcallw
sbb
mov
fmull
xchg
adc
leave
add
popw
clc
fnstsw
ljmp
iret
mov
jg
mov
or
add
sub
pop
jbe
bound
mov
pop
arpl
int3
mov
out
cmp
in
popl
xchg
pop
lock
mov
cmpsb
sub
xlat
in
push
in
pop
out
and
jle
pop
dec
mov
loope
push
push
stos
inc
scas
gs
mov
lock
jnp
repnz
inc
popl
dec
jne
mov
cmp
mov
shll
ficomps
out
inc
mov
dec
xchg
xor
insb
jno
jns
insl
movsb
sti
jp
mov
inc
pop
sub
scas
add
sub
sti
test
cmp
in
and
inc
repnz
sub
mov
fildl
mov
loop
bound
mov
mov
nop
lret
ds
xor
xchg
inc
sub
fs
sub
and
add
or
cmpsb
out
stos
dec
insb
stos
movb
inc
push
push
icebp
std
mov
stos
iret
jl
dec
js
leave
mov
pop
and
sbb
push
push
inc
inc
rcrw
pop
pushf
push
rcrb
clc
and
test
loope
sbb
adc
sub
mov
xor
and
mov
mov
jno
or
xor
lds
mov
mov
insb
xchg
std
adc
fidivs
call
jl
or
clc
mov
fwait
pushf
mov
movsl
inc
xchg
arpl
test
or
inc
data16
movsb
gs
sub
mov
xor
aad
mov
xchg
mov
rorl
out
sub
clc
insb
pop
push
movsl
out
dec
dec
shr
mov
shll
pop
test
inc
rcll
iret
in
add
xlat
dec
sbb
out
cwtl
jl
out
sub
xchg
cmp
sbb
cmpsl
mov
inc
imul
out
jp
pop
ja
xlat
ja
add
pop
nop
jae
add
fs
shlb
mov
lods
repnz
or
test
aaa
pop
pop
je
sub
add
mov
jg
mov
insl
inc
sarb
in
popf
shll
movsb
mov
pop
gs
mov
push
add
adc
xor
mov
fildl
push
sahf
je
push
inc
pop
mov
jne
lahf
mov
in
add
mov
loope
negb
xor
iret
xchg
xor
dec
xchg
dec
mov
push
pop
cmpsb
andl
add
sub
pushf
push
mov
pushl
add
pushf
ja
xchg
cmp
addb
lock
testl
rclb
sahf
aas
in
inc
testl
pushl
out
jbe
repnz
insb
popa
jl
pop
jno
xchg
daa
fwait
adc
ljmp
xchg
jg
jg
fcoml
mov
jne
bound
pop
add
loopne
pop
inc
in
into
lret
mov
lcall
mov
and
jne
imul
scas
arpl
les
sub
push
int3
xchg
rcl
xchg
aad
mov
fsubl
pushf
mov
jl
inc
ret
pop
dec
push
inc
cmp
jl
jle
and
xor
add
insl
fcmovb
push
insl
inc
push
mov
jo
ja
ss
dec
mov
cmpsl
cltd
out
mov
mov
lcall
cli
add
dec
iret
mov
movsb
mov
mov
jne
xor
adc
lods
aam
or
mov
xchg
adc
add
loop
xor
dec
and
mov
mov
cwtl
push
lds
pushf
outsb
arpl
mov
push
jmp
bound
xchg
push
cmp
js
imul
insb
loope
cltd
dec
andb
adc
and
sarl
mov
cmp
fwait
test
repnz
idiv
inc
xchg
mov
cmc
or
pusha
mov
jp
or
outsl
xor
pop
sahf
pop
cwtl
ds
iret
or
xchg
mov
push
pshufw
ja
cs
jecxz
dec
add
rclb
mov
xchg
fiaddl
fcompl
inc
ret
ret
cld
and
jle
aad
mov
je
dec
loopne
lea
int
inc
clc
pop
mov
mov
mov
lods
or
bound
lret
test
clc
cmc
push
rcll
xor
loopne
aas
xchg
cmp
fbstp
mulb
fisubrs
fiaddl
divl
out
stos
andl
sub
xchg
xor
mov
sub
mov
outsl
jae
and
xor
push
cmc
inc
cmp
inc
out
loope
inc
rorb
mov
and
xchg
arpl
mov
int3
mov
mov
dec
cld
xchg
sbb
jle
int3
and
xchg
inc
ja
pop
addb
mov
scas
pop
lods
inc
xchg
jno
lret
jb
jns
pop
repz
dec
je
stos
push
js
or
pushf
sbb
mov
jo
add
repnz
pop
mov
into
mov
sub
inc
xchg
and
aaa
mov
jecxz
cmpl
mov
xchg
aaa
ret
testb
std
dec
sub
mov
scas
cmpsb
or
add
pop
cmp
insb
add
hlt
or
jb
pop
add
sahf
dec
insl
jbe
jns
in
jae
pop
popf
jo
xchg
push
and
pop
dec
popa
aad
sti
jp
lahf
shll
xchg
sbb
fs
cs
lds
outsl
lahf
cmp
sub
cmc
jle
push
add
cmc
add
push
gs
scas
loopne
nop
push
adc
adc
mov
jmp
int
cltd
or
xchg
in
notb
xchg
add
jns
dec
push
sub
add
movsb
mov
sti
out
jae
and
mov
jae
xchg
sti
sbbb
ja
jecxz
push
or
aas
pop
xchg
xchg
cmp
push
les
mov
mov
sub
mov
jg
pushf
mov
call
inc
pop
cmp
push
jmp
frstor
mov
sub
dec
arpl
popf
mov
jne
inc
pop
inc
aad
mov
lret
gs
xchg
fmuls
cmpsl
int3
or
mov
push
leave
sbb
nop
out
mov
dec
aaa
inc
push
mov
in
inc
mov
addl
jb
sub
lcall
xlat
jb
xchg
pushf
add
mov
push
add
inc
lock
cmc
stos
push
cmpsb
fisubl
xchg
mov
sbb
fmul
es
sbb
or
push
in
dec
aas
je
je
xchg
in
icebp
testb
rorb
add
adc
mov
call
sahf
repnz
sbb
or
hlt
dec
repz
or
in
push
enter
xchg
cmpsl
sub
ret
das
and
insl
lret
xchg
in
ret
ficompl
in
ss
ja
pusha
xchg
dec
xchg
loope
pop
sub
xor
xchg
jo
sbb
pop
movsl
imul
push
xchg
arpl
jo
cmp
arpl
jns
outsl
jno
jno
mov
pop
lcall
mov
imul
sbb
push
push
int3
cmp
inc
jns
int
and
jne
ja
xorb
addr16
jno
stos
pop
inc
pop
cmp
push
imul
mov
ds
outsl
popf
xchg
repnz
orl
inc
xchg
push
mov
std
xchg
push
lret
xor
into
or
loopne
mov
ja
cld
inc
int
or
adcl
leave
inc
lds
dec
sub
mov
cli
push
bound
mov
mov
dec
push
jno,pt
sub
int
lretw
leave
jle
mov
loop
add
mov
test
mov
cmp
pop
dec
and
mov
dec
cltd
sbb
fnstsw
dec
nop
pushf
notb
cs
adc
rclb
test
pop
je
jno
pusha
lods
xor
and
push
stos
and
mov
mulb
sub
adc
in
xlat
mov
fistpl
fldenv
popf
ret
push
das
ret
pop
mov
xchg
leave
cmpsl
outsl
xlat
pop
pushf
push
div
mov
clc
cmp
sub
mov
jecxz
imul
mov
hlt
or
mov
push
pop
and
addl
push
push
fcmovnu
inc
jb
dec
movsb
popa
push
sbb
push
inc
mov
das
popf
push
rcrl
sub
push
lcall
dec
aas
shrl
and
in
sbb
push
cwtl
xchg
adc
ss
pushf
xor
imul
or
mov
mov
outsl
mov
pop
sbb
and
xlat
dec
insb
mov
addr16
test
outsl
cmc
idivl
int3
xchg
adcb
mov
rcll
cmp
or
stc
aaa
sbb
loop
dec
cltd
lcall
lods
daa
mov
in
or
cltd
xlat
xchg
sub
test
iret
adc
inc
xchg
sbb
mov
or
js
jnp
sbb
sbb
cmc
lcall
add
jmp
mov
push
push
ret
jo
mov
sub
xor
fistl
and
xchg
jbe
sbb
jne
and
mov
jmp
stos
pop
pop
leave
rcrl
inc
lea
xchg
or
imul
in
push
cmpsl
mov
jmp
push
out
test
testb
bound
in
lret
add
push
jbe
push
xchg
xor
outsl
mov
hlt
sbb
jl
loop
fistpl
mov
cli
inc
adc
out
push
xchg
push
add
cmp
jns
jbe
ret
movsb
in
cld
jecxz
sub
int
lea
gs
or
inc
dec
xchg
out
insb
repz
negl
inc
fldl2t
leave
lcall
mull
bound
push
out
mov
out
sahf
add
scas
pusha
js
test
or
gs
pop
mov
jo
pop
add
xor
or
testl
add
jecxz
es
pop
dec
loopne
jl
cmp
dec
jo
movb
sub
sbb
out
push
jmp
pop
xchg
scas
pusha
inc
push
outsb
xchg
mov
mov
leave
sti
xor
es
jecxz
leave
jecxz
das
xor
mov
xchg
mov
adc
inc
dec
dec
jmp
popa
mov
adc
jmp
call
insl
cmp
xor
inc
ja
iret
cmc
mov
xchg
leave
adc
sarb
fs
popa
and
push
fs
pop
and
fsubs
mov
xchg
push
dec
or
repnz
pushf
sbb
push
dec
pop
cmp
pushf
test
nop
xchg
stos
cltd
and
xlat
shl
rcr
add
enter
call
pop
add
push
fwait
cli
cli
inc
jle
mov
fwait
and
bound
mov
xor
pop
sub
push
ss
stos
xchg
lahf
out
out
cmp
fnstsw
xchg
mov
push
adc
xchg
jnp
insl
cmpsb
mov
lods
xchg
stos
jp
push
xchg
mov
mov
pop
cmp
int
ljmp
fiadds
aam
mov
push
sbb
jmp
add
xor
mov
scas
push
and
pop
sbb
repz
pop
test
xchg
adc
add
fsubrp
aam
mov
stc
stos
mov
lods
movsb
xchg
xchg
sbb
mov
jno
outsb
or
dec
movsl
adc
adcb
mov
jnp
jb
les
cmpsl
nop
inc
shrl
enter
iret
rorb
gs
gs
mov
mov
std
push
cmp
cmpsb
sub
sub
jns
popa
jg
cmp
sub
jne
push
xchg
ljmp
cmpsb
arpl
adc
pushl
bound
rcl
icebp
jb
lret
cld
cmp
mov
lret
scas
mov
rcll
push
lcall
mov
mov
popf
repnz
aas
mov
fbld
and
xlat
cmp
aam
aas
or
cmp
inc
mov
addr16
xchg
pop
imul
cmp
push
sti
test
fs
sbb
adc
push
loopne
test
ret
mov
xchg
aaa
xor
in
fisttps
fidivrl
jge
outsl
jge
int3
push
inc
sbbl
push
insl
leave
movsb
sub
das
ss
mov
add
outsl
jmp
sub
jns
bound
cld
jmp
cmp
mov
adc
cmpsl
roll
mov
shr
outsl
icebp
loopne
sub
test
out
jb
adc
enter
add
sub
in
or
xor
sbbl
out
pop
jmp
jo
pop
lods
push
js
inc
cmp
sbb
sti
hlt
nop
sbbb
sbb
or
cmp
push
pop
pop
fdivrp
gs
dec
push
es
push
mov
out
in
scas
pop
aas
mov
lcall
push
jae
fadds
sbb
xchg
in
fdivrl
adc
xorl
movsl
nop
test
outsl
inc
inc
loop
ret
hlt
push
loop
xor
sbb
ja
dec
mov
jb
inc
mov
aaa
xchg
dec
icebp
fbld
inc
out
add
lcall
mov
inc
push
cmpsl
pop
push
mov
les
aad
adc
push
jg
adc
dec
daa
mov
ja
fwait
sbb
xchg
daa
imul
jp
aam
xor
xchg
cmp
push
cmp
mov
or
jb
push
dec
idivl
insl
call
dec
pop
dec
dec
dec
mov
xchg
fxch
movsl
daa
jecxz
xchg
gs
jae
cltd
xor
sub
inc
jnp
adc
shll
popf
mov
sub
outsl
bound
mov
xor
insb
cmpsl
popa
ljmp
dec
push
or
jb
and
pusha
jae
pop
pop
nop
mov
test
jp
jbe
inc
call
or
pop
sbb
sbb
cli
cmp
addl
rolb
decl
mov
push
ficoms
fwait
push
mov
mov
inc
xchg
mov
addr16
xor
insb
clc
add
inc
pop
insb
dec
xchg
push
idivl
rol
addr16
or
xor
sbb
mov
leave
cmc
inc
stos
mov
jnp
out
lods
pop
and
mov
out
fimull
or
stos
jg
pop
shl
mov
jle
mov
mov
cmp
sub
pop
jo
jae
inc
dec
loopne
sbb
dec
pop
adcb
imul
or
je
subb
shrl
mov
dec
adc
jmp
dec
outsb
dec
fdivs
adc
pop
das
scas
xchg
push
add
rcr
push
xor
sub
mov
adc
cld
xchg
mulb
shrb
sub
int
or
sub
xor
movsl
sbb
ficoml
xor
es
or
cmc
pop
pop
push
inc
in
add
push
and
stos
pop
sub
stc
lods
subl
cmp
loop
js
nop
je
dec
mov
mov
and
cwtl
js
repnz
sbb
into
cmpsl
or
sbb
cli
cmpb
out
add
sub
rclb
or
stos
subl
push
and
enter
movsl
or
test
aam
mov
pop
pop
mov
cmpsb
xor
jmp
into
mov
stos
addr16
xchg
loope
ret
sub
nop
pop
ret
push
add
sub
outsl
out
push
lcall
popa
or
mov
int
flds
outsl
test
lods
cmpsb
orl
daa
sbb
or
mov
jp
cmp
out
int
lods
les
ljmp
popa
and
mov
sahf
out
xchg
push
jmp
dec
xor
ret
xchg
push
orl
or
mov
pop
push
ds
inc
mov
outsl
stos
test
mov
rol
xchg
das
mov
mov
mov
loopne
das
pop
bound
inc
stos
mov
or
mov
jbe
dec
adc
jae
or
sti
mov
icebp
fsub
or
ljmp
xor
jl
push
popf
xor
ljmp
das
or
fwait
pop
nop
push
mull
adc
jl
inc
pop
andl
int3
push
pushl
mov
and
das
adc
es
fwait
iret
daa
push
sub
clc
cmp
xchg
test
adc
add
mov
lods
mov
xlat
mov
lds
jge
popf
sarl
arpl
mov
mov
shr
es
adc
dec
bound
fwait
or
aam
cmpsl
or
mov
aam
pop
loope
ret
jle
jp
cmp
pand
lods
jge
daa
sub
or
xchg
add
mov
add
jl
test
dec
cmpsl
lods
aad
iret
in
adc
js
add
outsb
sbb
jp
nop
and
stc
cmp
mov
sub
sbb
or
stos
fbld
call
push
mov
xchg
loopne
in
loope
xchg
aaa
xor
dec
and
or
mov
cmp
cs
mov
mov
loopne
arpl
mov
xchg
mov
add
dec
lcall
loop
cwtl
in
icebp
or
push
xchg
push
call
popa
dec
fwait
aas
push
setne
decb
les
xchg
notb
mov
pushf
hlt
js
faddl
cli
rol
pop
adc
cmp
inc
mov
int3
xchg
sbb
int
adc
ret
xchg
lcall
cmp
pop
jbe
xor
ljmp
xor
push
ret
push
icebp
push
pop
jne
ss
push
sub
imul
dec
push
clc
pop
neg
add
cmpsl
sahf
add
cmpsl
insl
es
mov
pop
jecxz
pop
xchg
negb
dec
aaa
imul
cmp
lea
jl
cli
jge
adc
fildll
add
sub
xchg
push
push
in
cmp
cmp
dec
popa
movb
bound
out
cmc
sbb
icebp
and
cwtl
mov
jns
inc
xchg
mov
inc
pop
push
or
out
je
mov
xor
dec
inc
mov
int3
xchg
mov
cmpsb
dec
lret
loope
dec
pop
dec
out
xchg
lret
pop
push
xchg
mov
ret
and
jnp
jne
push
fisttpl
bound
mov
fs
mov
arpl
pusha
pop
adc
in
adc
pop
jnp
and
sarb
inc
pushf
jl
mov
ljmp
in
jbe
mov
xchg
call
xorb
dec
int
sbb
mov
lret
xchg
add
lahf
xchg
xor
ret
lods
andl
adc
cmp
or
pop
adc
cmpsl
and
scas
mov
lods
lret
jmp
sbb
test
xor
movsb
lret
cmpsb
push
leave
mov
lea
mov
loopne
add
divl
push
jg
adc
fadd
fs
dec
adc
pop
push
shlb
fidivrl
push
repnz
jne
inc
xchg
movsb
mov
xor
lods
pop
scas
test
and
lcall
pop
std
adc
loop
test
mov
or
popf
lea
popa
jp
and
test
out
inc
out
sbb
retw
jmp
pop
iret
pop
xorl
aaa
data16
lcall
leave
and
movl
mov
jl
cli
enter
insl
sbb
pop
xor
cltd
xlat
in
and
notl
fmulp
push
scas
mov
ds
mov
scas
hlt
mov
jb
loop
or
pusha
adc
clc
add
sti
dec
in
add
ds
mov
xlat
fimuls
mov
shll
add
sub
inc
xchg
loop
insl
xor
fcmove
fsubrs
outsl
addl
aam
mov
fistps
call
imul
jnp
pop
mov
and
sbb
add
out
arpl
shrl
test
inc
mov
and
cmp
jbe
jp
mov
adc
stos
cld
aam
ret
test
arpl
cmp
imul
lahf
in
lahf
cmp
sub
sbb
xor
sbb
mov
pop
sub
gs
sti
add
dec
adc
cltd
xadd
aas
aam
outsb
cmc
xchg
xlat
sub
pop
mov
xchg
loop
out
lret
pop
popa
sub
dec
sub
xor
cmp
sub
mov
inc
aam
mov
clc
sub
shl
into
cmpsl
or
xor
mov
inc
bound
sub
pop
xor
addr16
lock
addb
cmp
cmp
jle
push
js
pop
jg
inc
cmpsl
cmp
cmp
jae
pop
jp
mov
pusha
sbb
pop
pop
add
push
mov
push
push
pop
sub
daa
out
addb
mov
movsb
lods
stos
mov
cli
lock
cmpl
js
cmp
jbe
test
fs
inc
insl
movsb
dec
clc
data16
push
ljmp
xor
xchg
cmp
cmp
dec
mov
out
ss
cmc
ljmp
bnd
fwait
hlt
or
sahf
pop
rol
adc
or
push
jmp
cmc
dec
add
pop
sub
outsb
mov
and
into
push
stc
leave
xor
or
addb
movsb
mov
test
stos
mov
jns
mov
adc
mov
leave
xchg
dec
push
pop
xchg
movsb
dec
cmp
mov
lds
shr
stos
mov
bound
jmp
push
pop
movsb
aas
mov
icebp
ljmp
clc
add
lock
pop
test
aaa
cmc
loop
jae
test
push
inc
cmpsl
dec
or
das
in
inc
out
mov
jecxz
loope
mov
fcmovnu
mov
inc
xor
push
jp
push
jecxz
inc
out
adc
lds
mov
insb
popa
lcall
out
push
fcomps
jne
inc
ror
sub
mov
mov
push
loope
mov
fldt
pop
jns
movsb
insb
cmp
xchg
leave
cli
push
xchg
pop
roll
out
les
push
jno
test
mov
in
movsb
lods
test
std
inc
aas
nop
cmpsb
aaa
rcll
imul
sub
jmp
xchg
mov
fucompp
jp
push
clc
lcall
pop
mov
rorl
jae
xor
ret
xlat
jge
jl
lcall
aaa
mov
out
jno
inc
inc
repnz
pop
rorl
push
xlat
or
jge
inc
int3
fs
movsb
inc
inc
inc
setno
sub
fists
sti
mov
jecxz
addl
notl
xor
sbb
ss
stos
mov
jne
test
jl
inc
std
mov
inc
sbb
pop
mov
mov
das
adc
fistps
mov
cmp
shlb
push
mov
ss
leave
fdivrp
adc
sbb
mov
shll
cmp
and
ljmp
in
sbb
jnp
push
lret
cmp
imul
or
mov
pusha
jl
cmp
jle
scas
aas
xor
and
and
outsb
fisubs
jae
fsubrs
bound
test
jge
adc
sub
aaa
cmp
adc
dec
cld
lock
dec
cmc
shrb
testb
sahf
loopne
jl
lods
pop
pusha
and
mov
mov
sahf
pop
cli
xchg
cmp
mov
push
xor
inc
sarb
fidivrs
pop
cmpl
sbb
test
std
mov
leave
dec
leave
inc
or
xor
pop
add
jmp
sbb
cwtl
sbb
orl
or
in
xor
repz
out
aaa
cmp
bound
test
push
xchg
jbe
orb
mov
and
add
sub
jle
pop
jle
lahf
mov
lds
jp
xchg
push
mov
mov
and
mov
roll
mov
jle
and
and
sbb
imul
mov
cmp
fstpl
repz
out
sub
xor
mov
cmp
add
fsubs
sbb
dec
inc
je
and
jl
xchg
movsl
cmpb
mov
push
movsb
or
add
push
mov
cmp
add
dec
out
and
pop
loope
aam
sub
je
and
loope
pop
stos
dec
cmp
mov
scas
ljmp
xorb
popf
rol
outsl
pop
push
mov
or
add
insl
insb
arpl
or
js
mov
adc
arpl
xor
leave
test
cmp
pop
jnp
cli
mov
push
hlt
push
xor
jne
dec
sbb
add
in
mov
dec
fldl
sub
mov
fcomps
imul
js
stos
xchg
inc
popl
std
enter
sbb
inc
adc
mov
popf
shrb
dec
jmp
xchg
mov
xchg
aaa
push
fsub
mov
jbe
adc
jns
xor
jp
cmc
mov
push
sbb
test
pop
push
pop
adc
insl
jl
pop
dec
ret
cltd
and
and
pop
lods
adc
cmc
call
ljmp
mov
pop
and
lea
das
mov
sbb
roll
cmp
sbb
iret
repz
in
mov
int3
sub
and
lods
imul
mov
testb
adc
push
cmp
mov
cli
lret
int
in
out
enter
xor
push
adc
sub
adc
xchg
mov
jl
divl
pop
subb
and
into
inc
inc
fwait
push
repnz
fnsave
mov
sahf
loope
mov
sub
adc
jge
pusha
loopne
std
xchg
std
push
lret
leave
fldt
mov
outsb
push
cli
cli
mov
cmp
pop
hlt
mov
xor
enter
inc
nop
inc
sahf
aaa
jg
dec
mov
cltd
cs
insl
movsl
sub
cmpsl
sahf
push
out
sbb
bound
push
and
push
push
xor
les
addr16
xor
imul
aas
lods
mov
movsl
mov
or
dec
mov
fnstenv
jp
cmp
mov
je
cmpsl
pop
mov
inc
mov
xchg
xchg
mov
lret
test
fadd
lea
pop
dec
fdivl
sbb
push
mov
insl
jns
ret
mov
mov
rcrl
mov
jo
rolb
lahf
pop
xor
xchg
and
stos
dec
pushf
sbb
sbb
lcall
ljmp
aaa
pop
scas
ret
imul
cmp
leave
pop
push
cmp
xor
sbb
adcl
jl
xchg
in
mov
dec
or
adc
lea
mov
ljmp
inc
mov
add
into
sbb
jns
cwtl
jne
das
xor
sbb
aad
loop
pop
xchg
or
movb
sbb
xor
xor
pop
mov
lcall
ret
sbb
or
sti
cmp
cmp
fwait
push
arpl
jns
add
outsl
mov
movsb
lods
pop
cmpsl
push
lods
pop
sub
dec
sub
scas
pop
sub
daa
push
sarb
jl
dec
cmp
jl
inc
imul
jbe
call
out
or
rolb
adc
divb
aaa
sbb
fdivs
push
ss
mov
ds
inc
sub
inc
lock
and
mul
inc
fnstenv
out
enter
aam
add
cld
jg
push
mov
push
imul
dec
jae
inc
lods
mov
test
sbb
aad
es
shll
jb
cmp
cmp
rcrl
xchg
movsb
xor
fwait
xchg
dec
xchg
sahf
loopne
cmc
and
xchg
sti
dec
ds
std
sahf
stos
sbb
hlt
xorl
cmp
ss
pusha
cmc
mov
inc
add
cmp
leave
mov
mov
pop
in
adc
jae
gs
adc
or
aam
push
inc
cmp
mov
cmpsb
add
adc
xor
cld
add
shlb
inc
stc
xchg
call
pop
int3
cmp
lret
loopne
xchg
sarb
test
in
jno
int
ret
sar
push
lea
inc
inc
dec
loopne
mov
jmp
jecxz
inc
push
pop
subl
mov
insb
dec
ret
mov
mov
mov
jg
loop
out
cld
sti
lahf
rclb
xchg
into
mov
dec
adc
or
mov
negb
ljmp
sbb
imull
adc
es
and
sbb
stos
dec
jmp
mov
cmp
push
dec
clc
faddl
test
mov
sub
arpl
or
cmpsb
cmp
ret
je
leave
mov
sar
adc
cltd
lahf
cmp
or
filds
xor
pop
mov
mov
mov
in
insl
lahf
out
xchg
jg
or
mov
cwtl
aaa
mov
insb
push
or
lahf
jmp
mov
sub
sti
cmp
cmpsb
movsb
adc
addr16
cmp
dec
fcmovne
fucom
jle
mov
jp
push
icebp
aaa
mulb
movsb
jno
sbb
pop
push
stos
repz
dec
xchg
push
dec
sub
dec
stos
add
adc
aaa
lods
out
and
out
pop
adc
mull
inc
pop
sahf
stos
xlat
inc
ljmp
ds
xchg
in
mov
dec
out
aam
lods
jae
les
in
xchg
out
and
ret
lret
cmp
daa
insb
add
pushf
ds
lea
add
xor
adc
jl
xchg
mov
sbb
jg
pushf
ljmp
jp
adc
stc
push
insl
pop
jb
popa
xchg
mov
ds
mov
jmp
aam
sbb
pop
xor
or
cs
push
cltd
lock
dec
iret
pusha
mov
pop
jae
inc
xchg
dec
adc
mov
cmc
mov
pop
mov
rcr
in
stos
jnp
fwait
out
sub
mov
test
mov
push
sbb
xchg
lret
adc
arpl
mov
adc
aas
sub
shlb
test
lahf
inc
shrb
or
jnp
test
push
test
sbb
push
aaa
push
pop
inc
daa
dec
jmp
fbld
ljmp
adc
fucom
lock
mov
xor
out
cltd
out
inc
push
std
insl
mov
shll
rsqrtps
lahf
rcll
ds
add
xor
pop
enter
arpl
pop
cmpsl
insl
mov
pop
daa
inc
inc
mov
sub
gs
mov
sbb
dec
sbb
xor
cld
ljmp
dec
add
outsl
lret
cltd
test
mov
xchg
jle
loope
divl
je
test
aad
das
push
cmp
add
mov
push
and
mov
mov
mov
lea
cwtl
push
loopne
mov
and
adc
xchg
xor
xor
cmp
and
pushf
andb
jecxz
push
outsl
ficoms
push
pop
mov
mov
jl
aaa
dec
dec
cltd
aaa
add
lea
lds
mov
fadd
inc
cmp
adc
add
jno
pop
push
jno
fiadds
mov
jnp
fcomps
cmp
adc
lods
cmp
ljmp
test
popf
jp
add
lods
pop
mov
lds
pop
inc
jae
xor
sbb
test
cwtl
and
pop
sub
mov
xor
das
or
cltd
in
ljmp
call
push
out
int
dec
fcoms
mov
aad
sub
test
cmp
test
xlat
fdivs
dec
icebp
ljmp
inc
adc
and
jp
iret
repnz
push
or
sbb
or
cltd
nop
cmpsl
jo
mov
addl
mov
arpl
iret
inc
es
mov
subb
das
test
cmc
pop
lods
inc
pop
les
outsl
sbb
mov
mov
lahf
xchg
inc
push
push
xor
rcr
clc
lea
sti
shrl
pushf
add
js
push
xchg
pop
arpl
sahf
mov
sub
or
cmpb
jg
inc
out
or
and
dec
adc
das
gs
jne
insb
stos
aad
es
mov
or
mov
pop
mov
outsl
xlat
xor
leave
xor
add
sbb
or
rclb
cmp
or
decb
mov
test
addr16
call
or
add
add
loop
push
ss
ja
mov
icebp
dec
pop
cmpsl
ja
cmp
push
xlat
arpl
ljmp
loopne
xbegin
push
lock
mov
mov
dec
dec
adc
mov
sub
xor
mov
adc
jp
into
lods
mov
sbb
add
aaa
and
adc
test
mov
xlat
out
cs
push
rol
sti
in
pop
mov
cmp
adc
mov
jae
dec
xor
aam
cs
out
imul
stos
mov
mov
and
out
push
rclb
pop
lahf
sub
mov
xor
js
inc
fcmovbe
shl
dec
inc
leave
xor
mov
adc
push
ja
sub
sbb
rcrb
arpl
sub
fdivp
call
rcrb
dec
data16
mov
add
sub
minps
int3
sbb
xor
lret
test
lahf
ss
adc
or
sbb
pushf
shlb
insl
xorb
call
lock
and
jl
mov
push
adc
jne
sarl
xchg
and
rcll
mov
add
filds
repz
stos
arpl
inc
ret
ret
lds
test
dec
clc
mov
add
shlb
scas
sti
xor
mov
xchg
popa
xchg
in
dec
push
mov
dec
fimull
nop
cmp
mov
dec
mov
jne
pop
fs
jecxz
leave
xchg
daa
xor
adc
int3
adc
rclb
mov
or
aad
cmp
popa
icebp
sahf
cmp
cmpsl
add
test
jg
lods
aam
xchg
pop
pop
mov
or
aas
xor
sarb
push
jecxz
dec
out
adc
aad
nop
cmp
or
sahf
mov
jecxz
lods
and
cs
pop
rclb
xor
push
xor
scas
push
loopne
pop
sbb
mov
loop
nop
mov
flds
cmpsb
mov
mov
mov
sahf
sbb
inc
addb
test
jecxz
xchg
int
xor
inc
mov
aaa
push
pop
mov
push
rorb
sahf
rorb
add
not
lods
out
jl
popf
icebp
jnp
sahf
xchg
data16
andb
jno
jle
add
dec
adc
dec
cwtl
jnp
icebp
orb
adc
adcl
rcrb
inc
pushf
xor
mov
fs
mov
gs
lds
mov
out
stc
pop
cmpsb
inc
and
leave
lcall
scas
lahf
aam
sub
cmp
ljmp
lahf
sub
js
imul
push
push
push
jecxz
pop
jl
cmc
jl
mov
in
inc
dec
pop
sub
jmp
pop
lahf
or
push
xchg
ja
aaa
std
lea
lcall
cmp
fs
xchg
seta
and
xchg
inc
dec
jl
addl
ja
arpl
repnz
testb
insl
fstl
jp
aam
fcomps
rcrb
dec
mov
push
addr16
mov
adc
jmp
dec
cmp
dec
dec
or
mov
push
mov
add
jbe
aad
lods
adc
call
pop
icebp
xchg
filds
shll
push
sahf
add
pop
out
fstpt
dec
adc
cld
cmc
jg
imul
push
sbb
mov
dec
aad
dec
cmp
pop
mov
jnp
jle
pop
test
imul
pop
mov
jb
mov
sub
aaa
pop
push
add
pop
inc
cmpsb
dec
add
or
scas
and
into
scas
cltd
std
andl
aaa
ds
adc
or
push
ljmp
rorl
adc
lahf
sbb
js
xor
scas
int3
les
sbb
je
lahf
pop
xor
ljmp
push
scas
stos
cmp
sarl
mov
scas
dec
lea
sti
movsb
pop
xor
aaa
add
xor
aaa
or
jge
jge
mov
aas
or
loopne
xchg
mov
call
cs
mov
loope
or
dec
jns
jae
in
insb
xlat
xor
shl
out
popa
lahf
pop
cwtl
leave
lods
test
sbb
in
or
pop
add
lods
lret
insl
out
jne
inc
sub
inc
xor
orl
aaa
jbe
shl
lds
push
idivl
xchg
push
inc
in
push
xchg
in
or
and
or
popa
adc
loope
inc
rorl
out
mov
out
dec
lods
mov
push
inc
mov
push
inc
mov
cmp
pushl
in
ret
fstl
sub
sahf
add
and
ds
push
push
sub
inc
cmp
push
inc
cmpsb
rcr
out
xor
jmp
add
je
push
dec
lods
dec
fbstp
outsl
ja,pt
cltd
mov
leave
and
mov
pop
fsts
jnp
pop
in
ret
lock
in
inc
jne
insl
add
sahf
push
cmp
push
dec
repz
mov
add
push
lods
movsb
pop
jge
aam
out
push
clc
iret
adc
add
ret
lret
rcrl
out
clc
xlat
jmp
das
or
sub
aaa
or
cmp
dec
lret
out
stos
scas
rol
fnstcw
pop
lds
jae
sbb
add
fstpt
xchg
inc
loope
daa
test
es
repz
push
and
jb
mov
outsl
jecxz
repz
adc
pop
xor
mov
pusha
scas
jo
jmp
in
inc
mov
cmp
and
inc
add
test
lods
add
inc
test
or
or
andw
call
mov
aad
sbb
imul
pop
cmp
loope
and
mov
movsb
fsubs
sahf
and
out
xchg
adc
push
clc
mov
fwait
mov
insb
xchg
lea
push
xchg
out
out
addr16
imul
ficompl
mov
jg
testb
movsl
xchg
xchg
mov
sub
xchg
xchg
mov
out
jecxz
inc
pushf
into
cmp
rcl
cmp
aas
nop
scas
cltd
dec
loope
sbb
iret
cs
and
mov
loopne
subps
cmp
or
cmpsl
fs
loop
in
jnp
push
and
lret
jne
aad
out
loopne
dec
inc
jle
inc
push
in
adc
add
dec
sbb
pop
les
data16
out
in
shlb
add
rol
andl
pop
mov
inc
push
ja
cmp
cmp
or
or
jp
sbb
cmp
adc
add
push
out
pop
push
movsb
pop
mov
adc
jmp
adc
jg
jecxz
repz
fimuls
jg
dec
out
popa
mov
mov
jno
fimuls
daa
mov
jmp
xchg
push
dec
mov
ljmp
jae
loope
pop
sbb
insl
mov
sbb
pop
cld
inc
iret
pop
and
fsts
add
outsl
data16
mov
and
or
sub
call
arpl
lret
in
push
xchg
ds
fsubr
xor
call
leave
int
push
jo
mov
clc
xchg
dec
jecxz
frstor
lret
iret
cmp
dec
loopne
popa
pop
fldl
call
jl
push
and
jecxz
ror
fidivrs
or
dec
or
pop
cmc
inc
rolb
xchg
pop
and
jmp
add
and
adc
imul
fs
adc
xlat
push
and
push
or
ret
mov
adc
push
test
mov
dec
popf
adc
repnz
bnd
xor
aas
jg
mov
sbb
test
aam
mov
sti
xchg
out
pop
mov
outsl
fcmovu
adc
sub
cwtl
int3
pusha
pop
in
sub
mov
nop
gs
insl
scas
hlt
xor
jne
jb
pop
sub
mov
orb
clc
mov
inc
divl
movsb
cmp
or
mov
and
xchg
and
dec
add
in
lea
or
sarb
xlat
int
gs
scas
and
rcl
xor
push
mov
pop
lods
bnd
inc
sbb
std
imul
mov
push
test
xchg
test
loop
xchg
arpl
mov
sub
push
ljmp
dec
popf
iret
mov
test
psllq
aas
mov
mov
pop
scas
js
mov
jo
rorl
add
dec
in
mov
jge
mov
pusha
pusha
dec
pop
add
cmp
rorb
out
fldlg2
nop
adc
stc
pop
rcll
mov
fisubs
aam
daa
mov
cmp
ret
push
push
adc
push
mov
pusha
jns
jne
je
push
es
sbb
nop
aaa
stos
ret
int3
xchg
cli
inc
cmp
mov
lods
jmp
outsl
pop
jne
inc
out
loopne
pop
dec
push
xor
jmp
sub
fisttps
je
cmpsb
jl
cmp
xchg
lret
add
divb
sub
cld
xor
shl
sbb
mov
les
popa
mov
jae
sti
test
jns
pop
inc
lret
jb
repz
scas
pushf
cmpb
test
inc
pop
insl
or
imul
arpl
shl
pop
aas
rcl
scas
mov
sub
cmp
mov
sbbb
addl
cmp
pop
sti
lea
arpl
adc
sbb
test
push
sahf
dec
test
xchg
ss
pusha
shr
arpl
outsl
test
mov
insl
cltd
enter
sbb
or
das
pop
inc
sbb
jbe
mov
mov
push
jne
outsb
inc
outsb
out
repnz
stos
test
aam
cmp
xchg
bound
fistps
push
push
sbb
loope
in
push
test
jo
adc
dec
or
mov
stos
outsl
pushf
mov
ds
xor
adc
push
xor
gs
das
pop
mov
inc
mov
jno
dec
xchg
xchg
fxtract
divb
xor
rol
lds
scas
call
daa
shrd
jl
mov
lret
rcrb
shrb
adc
jno
lcall
jecxz
ss
cltd
push
jnp
jbe
and
test
out
mov
and
les
ret
pusha
mov
push
fldl2t
pop
rcll
sbb
mov
aaa
cmp
das
xchg
jbe
push
or
cmp
push
add
iret
mov
adcl
pop
hlt
enter
and
xor
fwait
shl
jnp
cltd
inc
ret
xor
stos
dec
lcall
jl
or
ret
enter
mov
fiadds
std
xchg
insb
xchg
out
xor
sbb
add
into
loop
mov
and
aad
add
icebp
pop
jmp
mov
and
pop
jl
out
sbb
cmp
mov
jae
sbb
fimull
lock
iretw
pop
jg
ja
pop
cmpb
bnd
dec
lea
sub
nop
or
cld
lods
popa
out
scas
push
in
mov
stos
ss
popf
and
jo
loopne
lret
gs
sbb
jge
jg
int3
loopne
xchg
pop
and
mov
add
pop
repnz
testl
movsl
or
js
and
lret
into
arpl
mov
push
es
loopne
mov
scas
mov
dec
scas
aam
mov
pushf
bswap
ret
insb
daa
sub
addl
dec
pushf
mov
push
xchg
cmovp
in
mov
hlt
imul
call
add
push
xchg
sub
aas
stc
xor
push
push
mov
mov
sti
xor
mov
loopne
test
jecxz
push
aaa
add
adc
in
ret
aas
leave
cs
movsb
loopne
mov
call
rcrb
test
mov
cmpsl
shl
dec
jp
push
call
jmp
fs
daa
sub
adc
test
xor
cmc
stos
mov
loop
and
outsl
mov
pop
pop
cwtl
aas
mov
int3
or
outsb
mov
out
gs
mov
in
cli
ret
jno
xchg
movsb
mov
cmp
das
out
add
je
ljmp
jb
test
and
jg
iret
mov
cmpsl
jge
test
inc
inc
movsl
jecxz
pop
cmpl
stc
push
lret
jne
xchg
jno
add
pusha
xchg
daa
mov
adc
repnz
arpl
and
sub
lods
sub
test
add
rcl
xor
mov
out
jecxz
lea
out
sbb
push
popf
rcrl
jne
ljmp
test
and
test
ljmp
jmp
push
mov
pop
and
mov
inc
test
mov
les
dec
lock
mov
lds
xchg
pop
sub
jns
int
sub
test
stos
outsl
inc
popa
cwtl
inc
adc
aam
lret
cs
mulb
xchg
lods
sbb
shrb
data16
out
jge
jecxz
ret
mov
test
mov
jae
push
sub
pusha
pop
and
adc
int3
jmp
test
fwait
and
shlb
mov
sub
xor
test
sbb
xlat
add
adc
xchg
cmpsl
dec
je
insl
mov
sti
or
cmp
jno
pop
jle
inc
jg
je
pop
in
es
inc
fcom
adc
rolb
pusha
xchg
inc
mov
mov
mov
lods
push
stc
stos
mov
int3
jle
sarl
int3
mov
popa
or
mov
jne
adc
ret
bound
fnsave
and
rcll
sbb
pop
fisubrl
aaa
pop
mov
mov
or
jnp
gs
adc
lret
ret
cmc
fwait
dec
ret
insb
ret
js
pcmpgtd
push
test
push
popa
mov
sbb
mov
es
pop
xor
mov
sbb
mov
adc
bnd
popf
mov
jl
cmp
shrb
lds
inc
sub
outsb
push
xor
push
in
jge
sub
or
add
cli
add
lock
adc
sub
jmp
sbb
or
cmpl
cltd
lods
push
pop
inc
rolb
call
sti
cmp
testl
dec
dec
or
xor
in
setge
aad
cmp
cmpl
stc
cmp
jno
pusha
pop
addr16
lret
xchg
cmp
jne
aaa
sar
daa
jmp
xorb
dec
adc
mov
jo
scas
and
std
push
popa
nop
cmp
stos
cli
lahf
cmp
inc
push
loopne
insb
adc
fbstp
cmp
jmp
lds
sub
pop
les
pop
mov
les
xchg
out
sbb
xchg
xchg
pop
push
aas
dec
pop
sbb
adc
and
and
adc
fdivrs
pop
cs
and
rcrb
pop
rol
pop
mov
mov
xlat
push
aas
fimull
mov
pop
pop
shl
sub
test
rolb
out
mov
nop
cmc
mov
mul
test
xor
xorl
mov
lcall
pop
mov
mov
pop
mov
inc
xor
into
lret
int
pop
insl
dec
aad
shlb
fisubl
adc
test
mov
aaa
mov
lret
pop
pop
mov
or
sbb
mov
xchg
dec
mov
out
push
inc
jecxz
aaa
es
int
or
sahf
insl
nop
gs
int3
jne
cmp
aam
mov
inc
ljmp
xchg
enter
xor
mov
aad
in
mov
jmp
imul
incb
fsubs
fwait
out
pop
iret
loopne
insb
ds
les
sub
sbb
sbb
movsl
or
cmc
sbb
loopne
and
lock
scas
ret
sbb
add
push
call
stos
cli
mov
jb
out
mov
shrl
out
pushf
mov
fsubr
push
js
test
dec
pop
test
add
dec
add
fldl
jp
popf
xchg
mov
cmc
imul
lret
fidivs
in
xchg
push
xor
fcompp
jno
pop
xorl
aaa
mov
cld
xchg
jl
fisubl
push
out
das
jne
mov
and
cmpsb
mov
ljmp
sub
add
cmp
pushf
imull
mov
pop
push
jecxz
repnz
in
push
mov
sbb
sarb
inc
lds
je
divl
sub
mov
or
lcall
jmp
shlb
mov
sub
ss
ficoms
jbe
hlt
jecxz
push
inc
mov
mov
sub
xchg
shlb
fisttpll
ror
popl
xchg
or
fidivrs
sahf
repz
outsl
icebp
pusha
mov
push
pop
stc
bound
aad
push
xchg
loopne
movsl
cs
out
dec
push
in
push
subb
pusha
popa
movsl
cmp
mov
fucomi
inc
push
lds
xchg
cmc
sub
andb
xor
outsl
xlat
mov
testl
or
jp
jle,pt
xchg
imul
lahf
cmc
push
xchg
test
insl
sbb
sahf
or
iret
dec
sti
loopne
and
xchg
jge
add
push
pusha
fnstsw
in
xor
sbb
mov
sub
mov
ljmp
test
mov
outsb
sub
lods
int3
std
fcomp
lcall
cmpsb
push
adc
fs
push
call
roll
test
insb
les
push
lock
cmc
xor
inc
adc
es
lods
cltd
and
out
xchg
repnz
aaa
mov
rolb
idivl
dec
nop
cwtl
xor
daa
bound
mov
and
sahf
lahf
push
dec
push
sbb
jmp
adc
movsl
cmp
mov
mov
into
mov
insl
sbbl
mov
dec
lcall
mov
bound
aas
mov
lret
cmp
push
mov
xorb
ljmp
pop
lods
imul
lods
gs
mov
lret
test
sub
xor
sti
call
aas
add
into
jno
sub
add
stos
sbb
je
lds
js
adc
bound
arpl
mov
js
jge
je
jle
iret
popf
flds
xlat
push
jo
popf
jb
popf
inc
in
sbbl
push
cmp
dec
xchg
mov
mov
in
add
jnp
icebp
dec
xor
inc
push
dec
sbb
fisubrs
jnp
cmp
pop
ss
lods
out
lret
pop
cmp
xchg
add
mov
lahf
negb
sub
lahf
pop
mov
loopne
push
data16
mov
roll
jnp
sti
repz
sub
jns
aaa
cmp
lea
insb
fisubl
xor
stc
sbb
xchg
insl
mov
test
dec
cmp
cmpsb
xor
movsb
cmp
or
aam
jo
and
je
das
fcomip
shll
mov
and
jns
test
scas
xchg
inc
lea
clc
add
xchg
and
loope
xlat
pop
inc
aas
inc
push
or
test
pusha
fwait
mov
test
adc
jmp
out
js
les
mov
mov
mov
fwait
jo
adcl
push
mov
test
and
fwait
mov
lcall
insl
movsb
jmp
push
mov
pop
sbb
mov
mov
jbe
jne
addl
cli
flds
sbb
xchg
imul
pop
push
out
jmp
or
push
or
or
jns
push
nop
fdivl
push
mov
sub
sub
inc
xor
jl
and
mov
mov
fs
aaa
int
loop
xchg
jo
jns
add
fninit
push
mov
mov
insb
or
scas
inc
xor
inc
mov
je
cmp
adc
xchg
xchg
dec
aaa
sbb
mov
hlt
addb
out
pop
iret
dec
jns
pop
jns
ret
pop
push
lods
lret
xchg
mov
mov
xchg
sbbl
sbb
out
push
mov
push
jnp
int
inc
mov
bound
pusha
dec
xor
mov
jne
xchg
add
orb
dec
mov
mov
movsb
push
fwait
call
stos
enter
div
lock
inc
or
cmp
sbb
adc
cld
or
lret
xchg
out
lds
ret
fnstenv
in
sub
sub
clc
jl
xor
and
cmp
jnp
sub
out
mov
insl
lea
repnz
popf
cmp
xchg
mov
cwtl
jecxz
lcall
adc
loope
xor
sarb
nop
cmp
cmpsl
ljmp
xchg
push
cmp
mov
jge
xlat
mov
je
or
int
int
pop
js
out
add
in
popl
popl
mov
jns
pop
sti
repnz
inc
sub
jl
out
mov
mov
push
jmp
pop
adc
sub
outsb
insb
iret
xchg
and
cmp
jecxz
push
loope
orb
test
pop
inc
mov
mov
outsb
and
push
xchg
in
dec
adc
sub
int
push
movsl
mov
jg
dec
adc
mov
stos
repnz
rorb
ret
movsl
aas
insb
adc
scas
or
lds
xor
mov
and
and
in
dec
sub
and
outsl
loope
dec
mov
icebp
jecxz
jns
pop
inc
adc
in
rclb
inc
lret
and
sbb
adc
mov
cs
sti
inc
and
xchg
xchg
dec
inc
push
xchg
jae
xlat
lcall
add
jmp
es
jmp
lock
in
or
into
loopne
xchg
and
xor
fmuls
pop
popf
mov
hlt
pop
dec
sub
inc
push
pop
dec
fmull
enter
bnd
xor
outsl
imul
pop
adc
or
and
jle
shll
bound
xor
pop
and
or
mov
jbe
repnz
jp
lcall
enter
test
sbb
or
push
pop
dec
push
movsl
xchg
mov
mov
out
mov
lock
cmp
and
lock
cmp
das
adc
and
mov
ss
xor
cmpsb
inc
pushf
ljmp
int
pop
sarb
lret
fistl
pop
cwtl
xchg
sub
je
dec
fisttpll
sub
xchg
xor
cmp
popa
jg
add
or
mov
add
outsb
mov
mov
out
je
shlb
lock
imul
outsb
sbb
mov
test
clc
shrl
negl
adc
xchg
pop
lahf
lret
xlat
stos
sbb
scas
push
dec
push
les
cmp
mov
test
mov
sbb
scas
mov
fsubrp
pop
push
and
shl
outsl
fwait
and
pcmpgtw
imul
mov
popa
xor
xchg
fnstcw
jl
das
mov
mov
xor
mov
mov
sbb
xlat
add
mov
mov
ds
jae
lcall
xchg
jno
rol
dec
sub
push
aas
shlb
fs
xor
jo
sbb
iret
daa
aad
cmp
mov
push
in
sbb
subb
cmpsb
cs
ljmp
jp
insb
add
xchg
inc
xchg
and
jbe
pop
and
jns
cld
sbb
cmp
rol
aam
jbe
outsb
inc
cmpsl
insl
leave
jns
mov
pop
outsb
pop
or
adc
fidivrs
xchg
cli
xor
ret
enter
and
aam
aas
addl
jns
mov
daa
dec
mov
pushf
jmp
sub
int
cmp
ret
nop
inc
cltd
push
dec
mov
mov
xchg
or
pushl
out
pop
mov
dec
mov
jbe
aad
push
negl
test
aaa
in
mov
xchg
jle
xchg
push
cmp
lods
shl
mov
jo
and
iret
pop
out
jecxz
iret
dec
enter
popf
jnp
push
lea
mov
jecxz
sub
mov
gs
jno
jne
adc
sbb
cmpsb
mov
pop
mov
loop
jb
pop
pop
xchg
xchg
aad
loope
repz
aaa
xor
outsb
pop
xchg
movsb
mov
xor
mov
or
scas
pop
mov
mov
scas
outsb
lahf
fs
mov
push
imul
dec
adc
cmp
ljmp
push
popf
inc
test
push
add
icebp
loop
sub
mov
out
cmc
cmpsl
add
add
pop
inc
stos
enter
negl
jns
ret
jns
mov
xchg
aaa
mov
xorb
bound
push
fldcw
inc
insb
mov
popa
and
xor
movsb
sub
or
mov
cltd
sub
je
daa
test
dec
movsb
pop
add
arpl
or
adc
mov
xchg
in
mov
fidivs
and
pusha
addb
cmp
push
cmpsl
pop
mov
les
and
adc
aad
push
xor
or
std
scas
pushf
loop
lcall
mul
dec
test
roll
mov
mov
push
cltd
add
shll
jno
fcomps
mov
test
insb
dec
lds
adc
sti
shr
push
mov
pop
mov
ja
mov
cmpsl
std
inc
mov
in
jp
xor
mov
pop
or
in
pop
dec
gs
imul
je
mov
mov
mov
lock
push
inc
xchg
dec
jmp
movsb
fs
repnz
jle
pop
les
icebp
lcall
xor
imul
in
data16
movsl
dec
shll
push
aam
and
movsl
ret
aaa
adc
add
jo
dec
sub
cmp
loopne
stos
xor
cld
out
pop
ljmp
inc
icebp
loop
xchg
mov
ds
leave
mov
jmp
add
inc
scas
dec
and
clc
jo
pop
sub
and
xlat
mov
xchg
loope
shll
icebp
lret
adc
sti
call
mov
dec
cmp
ss
je
cmp
iret
or
xor
cmp
cmp
cwtl
mov
outsl
mov
cmp
sbbl
pop
cmpsl
fwait
test
out
xchg
movsb
das
or
gs
mov
popf
stc
arpl
xchg
add
das
sbb
cmc
pop
pop
sub
jmp
xchg
mov
adc
pop
insb
frstor
out
xor
inc
jle
xchg
in
xchg
fimull
adc
subl
clc
push
or
popa
aaa
outsl
pop
push
xor
inc
cmp
and
pop
loop
lods
xchg
in
bound
add
lea
cmpsb
shlb
and
or
iret
mov
cmpsl
add
sbb
pop
xchg
dec
mov
repz
xchg
in
dec
and
imul
jbe
mov
or
xor
repnz
mov
mov
pop
xchg
pop
mov
iret
sub
xchg
adc
mov
jge
movsl
cmc
dec
dec
sbb
mov
addr16
leave
clc
mov
shlb
fnstenv
push
add
and
pop
xchg
fstpt
movsb
or
dec
or
sbb
push
sub
push
mov
in
in
push
push
jmp
aas
xchg
not
fs
shlb
mov
insb
in
cmp
mov
fisubs
ja
pop
daa
dec
cwtl
push
jg
adc
out
cmp
sti
scas
jne
fldenv
dec
push
sbb
scas
decb
adcb
rcr
jae
mov
mov
push
jge
in
nop
push
push
subl
addl
pop
push
add
or
popf
and
pusha
les
sarb
or
xchg
sbb
mov
stos
cmp
repz
xor
sub
imull
add
adc
aam
outsl
inc
pop
jle
sub
outsb
shlb
and
mov
sub
call
mov
add
sbbl
adc
jl
sbb
mov
inc
jns
enter
clc
jp
xchg
test
xchg
int
push
xor
and
sbb
int
or
mov
lea
xchg
dec
in
mov
call
lods
les
push
test
movsb
adc
dec
ret
push
and
mov
outsb
cmpsl
inc
ja
ss
popf
flds
jmp
dec
repz
or
push
inc
mov
mov
cmp
and
es
imulb
push
fs
fnstcw
mov
loope
stc
push
cmp
andl
jbe
int
and
mov
mov
pop
dec
xorb
into
repz
sti
pop
test
outsl
jno
sub
mov
loop
sbb
ljmpw
pop
xchg
and
aas
and
pop
cs
pop
fldt
sarl
and
mov
jne
ja
cli
adc
cmp
iret
inc
mov
mov
pop
add
jmp
les
mov
push
push
xor
push
loopne
xchg
mov
jmp
mov
mov
pop
scas
lret
data16
adc
xchg
xchg
mov
insl
scas
outsl
call
lretw
hlt
dec
pop
xor
inc
pop
in
pop
sbb
adc
dec
dec
addl
test
cmpsb
aaa
out
es
sbb
arpl
sbbl
sbb
icebp
mov
les
das
jl
stos
jl
nop
xor
or
adc
mov
mov
mov
mov
lcall
add
movsb
std
inc
and
sbb
xchg
mov
fisttpl
loop
pop
jmp
adc
sbb
movsl
insb
jbe
xchg
cmpsl
pop
addr16
movsl
xor
call
mov
and
ljmp
andl
sub
jl
testb
lea
popa
mov
out
push
jne
mov
push
adc
into
xlat
xchg
mov
mov
stc
cmpsb
pop
xchg
sub
jbe
jge
add
loopne
adc
mov
cli
movswl
inc
pop
pop
hlt
sbb
add
jge
repnz
stos
dec
cmp
lret
inc
mov
clc
adc
jno
xchg
pop
divb
jno
ljmp
xchg
xlat
push
jb
notb
xlat
test
cmp
enter
xor
andl
xor
test
ret
push
int
std
xchg
push
sub
adc
xchg
lret
rolb
fisttpll
and
hlt
cltd
push
inc
pop
cltd
jecxz
jmp
inc
aas
fwait
adc
cmp
test
imul
xchg
sub
sub
in
xchg
jg
push
into
xor
mov
jecxz
ss
outsb
popf
jl
mov
mov
leave
into
and
les
test
int3
fs
rcr
aam
sbb
push
mov
mov
ja
sbbl
push
cmp
fimuls
and
fisubl
loope
pop
loope
into
gs
push
inc
push
andl
daa
arpl
add
or
xchg
jl
or
cld
xor
cmpsb
je
loopne
xor
xchg
psubsb
jbe
stos
and
add
aam
pop
inc
dec
mov
clc
lret
inc
scas
sbb
sub
loope
push
and
xchg
imul
mov
movsb
popa
sarl
cmpsl
add
bnd
sti
mov
mov
and
cltd
fimull
xchg
subb
adc
out
lret
adc
lds
js
pop
stos
mov
ja
inc
mov
jns
lock
cmc
dec
mov
mov
aas
mov
fidivrl
lret
xchg
xor
mov
push
pop
or
call
lcall
push
cmc
mov
and
mov
mov
inc
outsb
loop
scas
push
sbb
adc
add
dec
mov
cmp
lds
inc
mov
sbb
popf
dec
push
dec
iret
adc
pop
adc
adc
movsl
xor
dec
stc
pop
in
push
ror
sub
pushf
pop
cmp
mov
imul
pop
adc
fdivl
outsb
leave
cmp
out
rorb
or
pop
int
dec
mov
sbb
mov
push
push
or
call
outsl
mov
push
cltd
stos
pop
mov
test
lods
push
rorb
popl
pop
test
out
mov
je
and
jnp
xchg
push
sub
imull
push
fisubrs
sbb
ja
xchg
loop
jle
subl
lret
lahf
minps
je
pusha
mov
push
dec
mov
jg
es
mov
pop
sub
mov
fwait
push
sbb
in
inc
fcmovbe
dec
fwait
adc
push
call
pop
push
fwait
xchg
arpl
adc
addr16
push
lret
aam
out
pop
adcb
push
sbb
in
sbb
cmp
test
dec
add
jp
lcall
mov
sahf
stos
inc
and
mov
jbe
xor
movsl
insb
sahf
adcl
jg
mov
and
ficomps
inc
cmp
int
fidivl
xchg
xor
add
xor
pop
add
out
add
xchg
jle
xchg
xchg
pop
xor
daa
out
or
xorb
fnstenv
dec
mov
and
shll
push
rcll
das
jge
lock
out
sbb
andl
sbb
aad
jmp
movsl
int
into
mov
ret
push
cli
cmp
ret
mov
mov
jne
jne,pn
xor
inc
out
pop
icebp
int3
sbb
insl
lods
or
jg
fcoms
movsl
gs
jnp
push
or
aas
imul
cmc
push
in
mov
scas
mov
sbb
arpl
hlt
or
mov
clc
mov
stos
mov
aam
and
or
int
int3
ss
int3
inc
xor
cmpsl
repnz
pushl
into
xchg
cvtps2pd
fnstenv
ljmp
test
addr16
inc
jb
adc
jg
gs
push
iret
inc
jb
cltd
dec
dec
mov
int3
jecxz
mov
mov
shll
lcall
outsl
pusha
pop
mov
mov
pop
sahf
sub
ljmp
push
inc
lods
fistps
xchg
mov
xor
mov
loopne
pop
mov
jge
test
icebp
mov
sahf
sbbl
loope
cmp
ret
mov
mov
sbb
rolb
xor
sti
mov
fcoms
mov
flds
xor
loop
fidivrl
pushf
lret
das
fadd
xor
adc
jmp
push
fnstcw
arpl
sbbb
fucom
imulb
out
addr16
fimull
add
fiadds
es
lods
push
aam
inc
mov
fcomps
jbe
jp
cmp
and
testb
inc
roll
ss
inc
lahf
gs
jmp
ljmp
mov
rolb
dec
pop
xchg
insb
pushf
sbb
mov
in
pop
call
mul
lods
out
sub
ljmp
sbb
int3
fprem
stc
add
test
cmpsb
xchg
add
cli
or
jns
mov
call
adc
push
mov
arpl
ss
aam
pop
mov
jmp
adc
xchg
sbb
mov
test
or
dec
fnstcw
push
fcomp
enter
insb
add
push
inc
cmp
or
jne
addb
nop
pop
sbb
sbb
adcb
mov
aas
les
lds
lock
outsb
fwait
push
adcl
loop
test
sub
movl
pop
stos
in
jl
cmp
xchg
rclb
dec
scas
jne
dec
mov
adc
in
testb
pop
push
dec
xchg
add
out
or
add
cmc
sbbb
mov
and
or
into
imul
fs
pop
jge
imul
movsl
lahf
jle
sub
xor
in
pushf
clc
sbb
mov
out
das
push
mov
outsl
imul
mov
cs
jno
adc
push
mov
sbbb
xchg
test
ret
es
fisubrl
or
sbb
addr16
shlb
int
outsb
push
inc
call
add
stos
fistl
and
fadds
push
cli
mov
les
add
mov
repz
enter
shrl
push
es
cmp
jno
loop
into
sbb
and
jns
loopne
enter
ss
push
inc
stos
and
inc
lcall
lahf
loope
loopne
mov
xchg
clc
data16
jne
ja
in
jg
sub
dec
push
pop
pop
bound
mov
mov
adc
push
test
rcrl
sub
shrb
pop
lahf
mov
mov
mov
out
and
subl
sbb
xor
xor
out
hlt
lea
sbb
dec
fs
ljmp
in
adc
stc
das
lods
mov
loopne
sub
inc
lcall
fs
stos
cld
mov
pop
rorb
sub
push
stos
jp
imul
push
xor
mov
test
and
out
cmp
cmp
xchg
dec
pop
and
dec
inc
mov
or
imul
mov
jp
pop
mov
adcl
add
ss
xor
fwait
mov
sub
xor
daa
push
push
test
bnd
mov
mov
mov
mov
fiadds
icebp
pop
fistpl
cli
dec
and
cmovs
cmp
cmp
or
fisubrs
ja
lods
lods
cmp
push
xchg
popa
lds
out
test
in
or
and
leave
mov
mov
int3
stos
inc
jno
cwtl
in
call
enter
mov
pushf
xchg
mov
mov
pop
decl
xor
pop
or
jne
xchg
int
cltd
insb
das
pushf
or
jo
inc
adc
repz
lods
neg
es
test
mov
sbb
mov
dec
xor
adc
cld
fstpl
scas
pusha
cmpsb
sub
cmp
call
xlat
push
lret
nop
xchg
test
bound
call
sbb
add
shrb
out
shl
sahf
mov
cmp
jmp
sub
jle
cmpsb
mov
or
fsts
popa
popf
imul
scas
addr16
cmp
lds
stos
les
dec
mov
mov
repz
and
xor
sti
jo
cmp
jb
inc
jb
adc
cmp
add
sub
pop
les
stos
mov
shl
div
loopne
mov
inc
fsubrl
call
xchg
mov
jp
std
lret
mov
test
xchg
xor
mov
into
inc
pop
push
lods
lock
and
dec
inc
cli
jmp
adc
xor
mov
sub
inc
xor
or
xchg
inc
loopne
js
test
and
imul
les
pop
mov
outsl
jne
or
pop
sub
std
fnstcw
xchg
mov
sti
lret
insb
rolb
dec
inc
mov
popl
fstpl
int3
out
mov
int
repz
and
sub
push
neg
mov
xchg
mov
add
jp
cmpl
ss
rorl
sub
movsb
leave
cmp
xchg
xchg
jne
aam
lods
lret
scas
cmp
stos
mov
xchg
dec
in
loope
inc
ja
pop
aas
loope
and
mov
ror
inc
inc
int
lods
mov
cmp
arpl
or
lds
sbb
and
icebp
ss
mov
jle
cltd
int
xor
push
jmp
inc
movsl
xchg
sub
je
dec
in
jecxz
repnz
inc
jno
sbb
push
xlat
movsb
cmp
ljmp
adc
rclb
cli
mov
in
mov
mov
dec
ds
dec
jecxz
call
add
push
dec
mov
jbe
or
and
test
pop
out
push
hlt
call
jne
test
xchg
mov
dec
push
mov
insl
call
in
jb
fisubrs
sub
in
call
lret
inc
addr16
mov
jns
pop
mov
cs
mov
xchg
out
call
pop
jge
and
daa
fucompp
icebp
sbbb
xor
adc
inc
pop
mov
jl
cwtl
mov
xor
xor
insb
fisubrs
js
mov
jo
mov
daa
ret
aam
orb
testb
add
idivb
lods
pop
add
jno
sub
stos
cmpsb
movsl
push
dec
ljmp
or
cmc
mov
mov
dec
xchg
pop
outsb
dec
je
dec
or
dec
sahf
fwait
orb
jmp
das
mov
mov
pushf
inc
pop
push
xlat
and
scas
lea
xor
add
lahf
fistpl
hlt
test
pushf
leave
testl
fmulp
xchg
jbe
insb
loop
lcall
mov
xor
test
inc
out
insb
xchg
sti
lock
out
and
cmpsl
cmc
dec
jno
gs
jo
mov
dec
cmp
lods
xchg
ljmp
ficompl
push
sbbl
pop
imul
aaa
movsl
out
ja
test
popf
dec
mov
xchg
int
fmull
push
pop
test
lea
adc
dec
cmpsb
inc
cli
sub
sti
sbb
or
aad
leave
mov
setns
je
lcall
test
repz
jb
jmp
push
sub
movl
into
pop
inc
ss
dec
fldl
push
jnp
enter
mov
iret
dec
pop
jmp
scas
adc
subb
sub
mov
pop
dec
hlt
lods
push
loopne
mov
and
jle
and
add
test
sbb
xchg
xchg
cmp
rep
pmullw
lret
push
outsb
leave
and
stos
cmp
mov
cmpsb
jno
adc
hlt
daa
pop
enter
ds
dec
shlb
out
fildl
xchg
test
jo
sub
jl
xor
aaa
cmc
dec
fcoml
or
jb
stos
sub
repnz
xor
xor
iret
cmp
cld
jno
and
mov
mov
fistps
mov
fcoms
xorb
sbb
xchg
fwait
insb
cli
add
adc
push
sub
push
aaa
lret
inc
pop
xor
cmpl
lock
push
test
adc
addr16
arpl
lret
cmp
adc
ret
flds
mov
cmp
xor
add
push
lods
xchg
push
xor
dec
fs
call
xchg
in
mov
sub
mov
pop
sbb
enter
popf
repnz
clc
push
stos
idivb
sub
ja
shlb
outsb
push
lahf
cmpsb
push
add
mov
mov
add
enter
mov
fiadds
add
shlb
pop
or
mov
test
lcall
int3
adc
adc
cmp
popf
xor
xchg
cmp
pop
mov
sbb
sbb
add
aam
jns
push
jg
adc
pop
xchg
jp
and
mov
jnp
imul
nop
fdivr
sbb
adc
xchg
inc
push
xchg
scas
loopne
and
dec
lds
cli
loope
adc
add
mov
aaa
push
push
stos
fwait
neg
subb
mov
loop
cli
dec
xchg
add
cmc
mov
cmc
mov
dec
or
ror
popa
dec
pop
fsubrs
popa
dec
mov
mov
fs
pop
pop
in
and
nop
sub
in
movsl
sub
lahf
dec
loop
int
fs
jmp
scas
cwtl
add
xchg
jl
or
or
xlat
std
mov
icebp
stos
sbb
fdiv
mov
inc
shrb
mov
lods
push
ficompl
movsl
std
enter
shlb
and
outsb
inc
pusha
inc
or
in
inc
mov
cmp
xchg
jno
movsb
push
and
ljmp
inc
repz
mov
jge
push
pop
push
lock
and
pop
jg
or
nop
xor
mov
imul
lret
std
jl
or
daa
mov
jo
lret
test
comiss
pop
ret
movsb
in
mov
jno
pop
sti
sub
lret
lods
or
dec
mov
mov
lods
sbb
inc
jae
icebp
sbb
adc
sahf
mov
popf
mov
push
shrb
aas
jl
push
cli
push
fs
sti
push
movsl
sti
aas
mov
aaa
int
out
jmp
fmuls
icebp
sub
andl
dec
pop
frstor
adc
xchg
jmp
scas
int
in
jp
in
inc
sbb
push
push
or
loope
jno
iret
arpl
lahf
push
leave
xchg
aaa
xlat
inc
and
cmp
adc
movsb
stos
inc
js
test
cmp
fsts
sbb
sbb
dec
jb
aaa
movsb
data16
frndint
add
push
iret
pop
clc
hlt
add
repnz
xchg
add
jge
sub
inc
xor
insb
xchg
pop
xchg
sbb
loopne
adc
pop
and
into
dec
scas
rolb
mov
pop
xchg
cmpb
sbb
dec
call
push
adc
xchg
icebp
fcoml
aad
jg
push
daa
in
mov
lret
fcmovu
sbb
loope
adc
shrl
pop
iret
rorl
shrb
sbb
mov
pop
or
jb
stc
sub
ljmp
inc
lods
sub
cmp
aam
cmpsl
cmp
out
ja
pop
and
repz
ja
mov
push
stos
fcom
iret
cwtl
push
sbb
adc
jmp
inc
jmp
cmp
sub
mov
mov
sti
cltd
sbb
jle
cld
mov
mov
jae
xchg
push
mov
inc
push
aam
out
imul
lods
ret
stos
js
test
inc
rcll
xchg
ss
test
jmp
mov
faddl
sbb
or
leave
add
push
and
leave
cmpsb
or
mov
cmpsb
jmp
or
pop
and
outsb
gs
dec
add
or
test
push
stc
mov
pop
xlat
adc
in
stos
sbbb
test
push
mov
adc
adc
jo
mov
cmp
lret
mov
pop
scas
cld
stc
int
stos
mov
pop
jne
inc
mov
jp
imul
loope
mov
aas
push
daa
scas
lds
rcl
adc
push
lods
shl
mov
cmp
sarl
xor
stos
icebp
lret
ljmp
arpl
mov
sbb
jae
xchg
pop
jge
fmuls
in
jmp
ljmp
aad
dec
pop
movsl
and
sarl
adc
movsb
leave
mov
adc
pop
sub
std
clc
add
ljmp
mov
lcall
insb
pop
fldenv
fbstp
push
ret
push
sub
adc
push
jp
inc
xorl
adc
notb
add
jae
or
addr16
ret
jb
mov
push
stc
subb
lret
leave
xor
stos
jecxz
repz
subl
das
pop
dec
in
add
dec
xor
fsubrs
das
pop
lahf
sti
enter
and
push
and
sarb
movsl
lods
icebp
mov
xchg
flds
fs
or
jbe
leave
dec
outsb
mov
js
xchg
decb
pop
mov
fcmovb
sub
jp
xor
inc
mov
xchg
cmp
adc
jo
xchg
sahf
pop
cmp
mov
ret
imul
scas
dec
fisubrl
rorl
lret
orl
rcr
xchg
stos
xlat
mov
jmp
pop
nopl
dec
int3
add
mov
mov
push
shl
cld
int
fwait
xchg
pop
cmp
mov
jae
shr
lods
cmp
push
das
inc
test
test
pusha
scas
pop
push
ret
mov
sbb
aas
inc
lock
cmpl
xchg
and
dec
add
rclb
adc
xchg
adc
push
sub
jg
rcrb
popf
test
dec
push
divl
aaa
jae
faddl
jmp
mov
inc
in
inc
outsb
or
imul
and
out
lahf
mov
jns
add
cld
jl
js
xchg
push
mov
sub
rcll
out
inc
gs
stc
dec
shrl
loop
cmp
adcl
sub
sbb
inc
dec
mov
mov
add
adc
jne
pop
pop
jbe
adc
dec
call
add
lcall
fdivr
stos
gs
pop
pop
sub
push
pop
cmpsb
sub
call
in
adc
push
push
insb
push
test
xor
fwait
scas
adc
sbb
std
mov
fildl
jmp
mov
push
push
push
popf
loop
xchg
nop
jns
fldt
cwtl
scas
mov
pop
int
inc
jge
popa
or
roll
test
mov
push
mov
cmp
imul
fiaddl
fdiv
and
aam
cmp
mov
lret
add
stos
sub
imul
xchg
in
adc
pop
insb
xchg
pop
repnz
push
in
shrb
add
pop
cmpsl
and
fwait
jmp
data16
mov
fwait
test
mov
jmp
push
mov
pop
addb
pop
test
inc
jne
push
mov
mov
and
lock
ss
push
and
stos
pop
xor
jmp
mov
scas
adc
lods
add
hlt
mov
test
test
push
pop
shlb
jbe
adc
clc
cmp
cmp
test
dec
jne
and
cltd
jbe
lcall
xor
cmp
or
push
pop
rcrl
push
fldl
mov
test
insb
adc
cmp
cmc
cmp
scas
push
mov
jg
pop
cmp
adc
pop
pop
in
xchg
sub
pop
add
xchg
insl
ret
shlb
movsl
push
push
in
sub
out
cld
cmpsb
push
das
cmc
adc
sub
add
cmp
cmp
push
push
cmpsl
es
and
pushf
sub
mov
sbbl
stos
adc
frstor
sub
cs
push
adc
cli
andb
jno
and
mov
push
add
xor
push
repz
mov
cmp
popf
addl
pusha
out
sub
imul
inc
jecxz
jae
cmpsb
xchg
jecxz
jge
mov
xor
sub
sub
movsl
rolb
pop
mov
scas
sub
add
aam
ret
mov
cmpsb
dec
aam
sbb
mov
arpl
outsl
xchg
mov
xor
xchg
lock
xchg
mov
push
sbb
and
loop
pop
inc
fucomp
test
mov
mov
sub
xchg
add
cmp
daa
adc
test
jl
push
dec
bound
adc
fsubrs
in
and
push
lcall
push
cmp
push
sti
mov
mov
pop
mov
cmp
sub
lods
jne
xchg
movsl
mov
mov
outsl
sub
addr16
cmp
in
dec
pushf
cmc
xor
sub
push
out
jbe
sti
rorl
pop
cmp
sub
neg
xchg
cmp
add
fisubs
lret
ret
rorb
mov
inc
sahf
sub
in
std
push
mov
mov
push
fildl
pop
fs
xor
rorl
xchg
push
loopne
fs
xchg
ret
sbb
mov
aad
rep
lret
sti
push
cmp
mov
gs
das
rorb
push
xchg
and
repnz
sub
jle
jmp
jns
jp
cld
fsubrs
lret
pusha
lods
cmp
ss
xchg
cmp
fsubrl
xchg
arpl
cli
out
data16
std
mov
addl
into
pop
bnd
adc
icebp
adcb
inc
mov
sub
push
xor
shlb
jbe
jns
mov
push
xorl
mov
lds
lret
or
push
adc
and
test
jl
icebp
pop
aas
gs
lods
dec
push
sbb
or
mov
pop
loopne
cs
xlat
movb
pushf
xor
or
push
xchg
cltd
aaa
out
lds
inc
jne
sub
inc
sbb
out
cmc
sub
jle
insl
cmc
mov
fiadds
jne
jbe
jns
stos
jmp
add
es
xor
shlb
aam
and
mov
je,pt
dec
xchg
leave
bound
subl
sbb
mov
mov
xchg
ror
mov
out
mov
adc
pop
leave
inc
outsl
je
fistps
adc
mov
pop
lods
ffree
dec
xchg
push
out
cmp
adc
push
movsb
pop
inc
mov
push
test
stos
pushf
vcvttpd2dqx
imul
sbb
data16
jl
sub
dec
lds
push
jmp
arpl
stos
inc
repz
mov
and
scas
pop
jecxz
addr16
push
lds
add
push
and
cmp
sub
jg
jbe
and
aas
mov
sti
stos
test
add
loope
push
outsb
psubsw
xchg
mov
mov
and
and
stc
fsts
xchg
cmp
out
dec
rolb
into
loopne
in
lret
inc
in
xor
out
icebp
pushf
ljmpw
loop
push
and
nop
fbld
add
adcl
dec
ficoms
out
jnp
das
aad
or
mov
push
sbb
fdivrl
jb
sub
imul
int
push
mov
test
mov
xlat
js
xor
dec
les
orb
test
mov
ficoml
cmp
xor
sti
es
stc
or
fsubrs
add
repz
add
outsb
cs
xchg
xchg
fldl
pop
push
xchg
lret
mov
pop
sbb
lods
sub
push
pop
cmp
sbb
cmp
jae
sub
jbe
jge
and
leave
or
cmp
scas
out
mov
or
inc
scas
je
push
nop
arpl
push
pop
in
fmull
hlt
icebp
or
cs
mov
pop
push
push
jnp
cmpsl
fucomp
jb
call
xadd
and
or
dec
jo
cmp
fdivp
mov
and
add
cmpsb
mov
les
daa
add
push
mov
in
stos
mov
cmp
push
jo
jecxz
push
inc
xor
pop
fwait
mov
int3
aaa
and
test
icebp
mov
in
out
adc
std
inc
cmp
mov
mov
cmp
adc
add
mov
xor
imul
sub
and
mov
test
jecxz
dec
xchg
or
addb
cli
cmpb
ret
inc
xchg
jmp
lods
lret
ds
test
pop
add
xor
js
adc
push
jo
test
fwait
or
cmp
push
add
insb
aam
jle
pop
jp
xchg
rcrb
dec
push
xor
js
pop
jns
inc
inc
inc
sbb
iret
shll
fcomp
mov
stos
sub
xor
ret
push
xlat
push
daa
dec
xor
sar
sar
xchg
sub
mov
fnstsw
imul
icebp
sub
cwtl
hlt
sbb
mov
xchg
push
fmul
mov
data16
std
inc
jo
imul
jno
xchg
inc
clc
push
rorb
sbb
sbb
out
lahf
lret
cld
data16
adc
rcll
pop
cmpsb
cmpsb
dec
mov
xchg
es
lds
repz
add
xchg
mov
fistpl
in
mov
mov
mov
mov
pop
dec
dec
nopl
test
subl
and
je
and
adc
jg
ret
gs
mov
jl
xchg
jns
in
push
lcall
adc
test
sbb
adc
es
mov
cmp
jb
mov
fmuls
arpl
aas
dec
fcmovu
enter
rcl
out
lods
dec
xlat
lcall
js
xor
inc
mov
addr16
out
inc
add
lret
adc
jp
pop
ljmp
jmp
rcr
lret
in
test
inc
pop
xchg
fs
sub
push
and
pop
mov
les
add
mov
in
repz
mov
add
call
mov
dec
or
pop
sub
sub
pushf
aaa
or
or
jo
add
scas
lahf
inc
xchg
add
mov
dec
stos
cmp
sbb
push
leave
xor
gs
cmp
sti
idivb
dec
push
push
and
and
shl
or
add
mov
loopne
stos
scas
icebp
ds
sbb
mov
cwtl
dec
mov
cmp
jmp
int
pop
cmp
mov
push
sbb
mov
jne
push
stc
mov
out
aaa
pop
cmp
imul
mov
jbe
lahf
outsl
and
inc
out
ljmp
mov
adc
lds
shll
repnz
dec
sarb
movsl
add
push
rorb
jmp
stc
and
fists
cmp
jl
lock
xchg
sbb
lods
cmp
or
je
sub
mov
xor
das
js
imul
sub
jbe
loope
inc
adc
lods
or
lret
pop
add
aas
jne
shlb
lea
fnstsw
popa
dec
mov
push
dec
mov
fdivrl
jns
adc
pop
xchg
cmp
test
sbb
imul
sbb
scas
cmp
lock
roll
cwtl
shrl
in
call
popa
inc
push
cld
fiadds
popf
lods
shrb
dec
cmp
cli
shl
je
pop
ds
andl
rcll
push
push
arpl
fiaddl
or
adc
mov
sbb
dec
je
adc
dec
inc
xchg
in
add
ss
mov
mov
or
mov
lods
xor
fiadds
mov
aaa
not
push
lods
push
sbbb
mov
inc
call
jmp
jno
jge
in
push
loope
and
outsb
shll
testl
out
xchg
or
scas
dec
daa
dec
push
scas
call
fstps
std
in
in
stc
leave
int3
cmpsb
adc
push
xchg
xchg
jle
dec
sbb
cltd
jnp
cs
push
pop
imul
shrl
jnp
dec
fsubrl
adc
mov
jno
inc
xchg
ret
and
jae
pop
inc
insb
mov
sbb
stos
fildl
test
loopne
pushf
cltd
xor
jmp
xor
mov
sbb
mov
push
mov
cmc
cmp
xchg
push
fistps
lods
jecxz
pop
push
xchg
stos
jmp
jmp
popa
sbb
mov
pop
dec
xchg
pop
mov
cwtl
loope
dec
jecxz
mov
sub
pop
jnp
movsb
mov
pop
adc
pop
and
loop
pop
or
inc
out
inc
enter
push
ds
xor
mov
fwait
int3
jbe
hlt
sbb
push
sbb
xor
rclb
int3
std
adcb
dec
xchg
add
jb
dec
or
decb
mov
stos
fwait
int
imull
bound
mov
fucom
xor
in
mov
test
adc
adc
inc
push
popa
or
jge
pop
lods
addr16
xor
mov
call
cmpsb
pop
adc
mov
and
mov
es
jle
adc
out
mov
mov
out
jne
jl
sbb
mov
out
jno
stos
int
pop
fsts
push
test
mov
push
cmp
adc
xchg
inc
and
insl
lahf
loopne
sub
shl
pop
jne
test
pop
cmpsl
mov
mov
sub
push
xor
sti
into
rcrl
push
leave
insl
daa
jnp
mov
lods
add
and
and
xchg
repnz
rcrl
inc
mov
das
in
jmp
push
aad
inc
xchg
dec
enter
sahf
adc
mov
mov
lret
in
sbb
loope
repz
in
repnz
xchg
cmpsb
lea
dec
inc
and
cld
or
mov
shll
fs
dec
cmp
sbb
mov
lcall
xchg
and
xlat
sbb
mov
scas
jl
add
xorl
adc
int3
fsubrs
mov
in
mov
sbb
cmpl
insl
add
ljmp
inc
and
add
jae
lret
dec
pop
cmp
and
sbb
mov
dec
aam
mov
dec
subb
and
lret
pop
mov
nop
js
mov
lock
das
xor
jl
outsl
out
adc
and
push
adc
xchg
cmp
in
dec
arpl
push
xchg
push
mov
mov
aam
add
orl
and
fildl
btrl
lds
lods
js
xor
mov
neg
xchg
fwait
jno
movb
sbb
bound
es
ljmp
dec
xchg
dec
rorb
xchg
pop
test
sbb
cwtl
or
sub
jmp
sub
ljmp
data16
jmp
mov
scas
lods
xchg
mov
or
popf
mov
inc
cmp
xor
inc
lret
jl
in
shrl
fsts
jecxz
push
cmp
outsb
pusha
das
fs
je
push
pop
mov
rolb
out
add
xor
out
js
xor
in
cmp
aaa
dec
cmc
adc
movsl
or
shlb
sahf
cmp
inc
and
xchg
stc
iret
aas
cmp
pop
addl
jae
adc
add
xchg
cld
out
inc
les
xor
pop
in
fnsave
das
jl
or
insl
test
inc
aad
bound
pop
sbb
push
std
cmpsl
dec
sarl
push
mov
fisubrs
pop
mov
cmp
xchg
aas
int3
push
mov
sub
push
push
xchg
fsubs
sbb
insb
mov
jnp
fnsave
push
inc
andb
popa
add
mov
shlb
dec
xor
push
mov
cs
dec
clc
aam
push
mov
mov
mov
gs
imul
pop
ret
popf
xor
pop
push
mov
dec
sar
imul
movsl
xchg
cltd
es
xor
imul
gs
jle
sub
push
lcall
xor
jae
jle
mov
int3
fsub
adc
cs
lea
push
sbb
sub
sar
adc
or
xor
push
insl
xchg
cmp
sbb
pop
jne
addr16
mov
fcmovu
xchg
jecxz
mov
negl
xchg
imul
mov
aad
push
test
xlat
push
mov
and
pop
cmp
pop
cmc
xchg
lds
adc
fwait
sub
mov
jle
bnd
xor
lods
gs
xchg
mov
xchg
sbb
mov
repnz
add
pop
je
iret
test
mov
mov
jns
js
cmpsl
dec
mov
loopne
sbbl
call
dec
mov
je
mov
rcll
cmc
imul
les
xor
cld
cmp
jecxz
add
mov
xor
roll
cmpsb
inc
hlt
push
fwait
push
jle
push
aas
xchg
or
push
push
test
cmpsb
mov
cmpsl
stos
push
push
xchg
in
sti
cs
push
cmpsb
mov
dec
mov
pop
pusha
fucom
inc
int3
cmpsl
rcrl
fildl
dec
rcrb
sbb
sub
in
push
pop
lock
subl
pop
nop
sahf
mov
subb
fs
stos
jmp
aad
cmpb
jb
jle
adc
rorl
add
loop
pop
mov
scas
lock
aaa
xor
adc
mov
std
dec
push
or
mov
and
lcall
mov
ss
rclb
dec
dec
test
sub
dec
pop
mov
add
sub
jp
pop
pop
and
mov
mov
subl
cld
scas
ret
test
test
mov
ds
and
mov
adc
loop
jg
cmpl
gs
lods
mov
leave
push
add
in
mov
or
or
xchg
xchg
sub
fimuls
in
mov
std
es
xchg
mov
push
xchg
test
mov
hlt
inc
dec
loopne
mov
jmp
sub
lods
inc
push
stc
verr
dec
xchg
iret
pop
ja
pop
cltd
sbb
adc
cmp
pushf
or
decl
lret
push
jnp
xlat
sbb
push
sub
and
jge
add
xchg
movsl
test
iret
std
or
ljmp
sbb
clc
sub
mov
xchg
xchg
sahf
mov
loop
adc
sub
loop
ds
sarl
or
into
pop
inc
insl
subl
mov
mov
adc
cmp
jnp
mov
dec
out
clc
mov
add
sarl
lahf
fmuls
xor
and
daa
jbe
cld
hlt
test
xchg
test
cmc
cmpb
xor
xchg
dec
shrl
sbbl
outsb
push
pusha
and
dec
out
loopne
bound
cmp
cli
jne
jo
bnd
je
cmp
loop
pop
push
mov
ljmp
nop
xlat
aas
clc
cwtl
movl
pop
fcomps
outsb
mul
mov
push
out
stc
mov
xchg
movsb
mov
pop
repz
neg
lds
ds
faddl
mov
cmpl
cli
jge
inc
cmp
xor
dec
xchg
or
or
rcll
add
outsb
nop
push
out
cs
iret
sti
fstps
inc
sub
mov
mov
iret
add
cmpb
jge
test
xchg
adc
push
inc
test
jp
sbb
sub
inc
in
xchg
inc
fnsave
inc
out
cwtl
out
push
dec
sti
cmp
sahf
xchg
mov
mov
shl
loopne
out
ficompl
push
test
jmp
insb
and
add
mov
pop
xchg
dec
jne
ja
inc
sbb
sbb
aas
mov
sbb
mov
pushf
jne
mov
sub
and
popf
jmp
mov
test
jge
adc
stos
shrl
mov
popa
ret
imul
jge
inc
sub
cmp
cmp
scas
test
jmp
arpl
dec
imulb
mov
incb
aad
iret
movb
pop
mov
imul
jp
mov
dec
imul
in
loop
jmp
jns
inc
clc
cmc
adc
mov
or
ficoms
jo
stos
push
mov
jae
hlt
mov
xlat
cmpsl
imul
nop
leave
mov
sub
test
stos
cs
xor
push
pushf
stos
out
mov
cs
mov
xor
mov
js
mov
in
shrb
dec
jg
daa
pop
jl
enter
push
inc
push
ss
sbb
jg
add
mov
out
ret
mov
bound
xchg
int
sbb
sbb
pop
aas
loope
int3
push
mov
nop
lock
dec
sbb
loopne
jno
xor
jg
pop
sbb
mov
sbb
js
aad
jmp
mov
xchg
jo
mov
mov
stc
in
or
cmc
push
popf
repnz
lds
iret
dec
mov
sti
cmc
xchg
divl
jo
inc
cmp
ficoms
cmp
mov
enter
jo
aaa
pop
cmp
push
pop
jae
dec
scas
adc
sbb
enter
xor
dec
sar
int
add
fistl
pop
xchg
ficomps
dec
mov
and
cmpsb
mov
mov
and
test
push
jno
mov
call
and
pusha
ja
int
fcmovb
mov
fiadds
jmp
sti
dec
inc
mov
sbb
xorl
xor
ret
notl
ljmp
and
sub
ja
stos
xchg
ret
negb
xor
lret
pop
adc
pushf
pusha
test
sbb
mov
scas
jae
lcall
fldt
inc
inc
sub
push
pop
dec
pop
aaa
jp
rcrb
test
mov
pop
insb
mov
andl
dec
js
fsubrl
incl
push
mov
cmp
lods
ds
xchg
xchg
cwtl
push
ljmp
rcrb
sbb
movsb
inc
ficoms
fildl
mov
add
pusha
mov
neg
or
insb
or
xchg
inc
repnz
sahf
jo
push
mov
pop
cmc
idiv
out
pop
add
xchg
cmpsl
xor
push
pop
cmp
sub
mov
cmp
pop
xor
cmc
sub
push
xchg
mov
test
out
lea
out
test
xor
fbld
push
xchg
adc
xor
pop
pop
dec
inc
cs
fsubrl
and
xor
bound
jl
mov
cmp
mov
xorb
cwtl
test
cmp
ds
xor
xor
popf
cli
pushf
add
ret
ja
xchg
jle
cmp
repnz
sbb
int3
mov
xchg
aas
scas
popa
mull
imul
xchg
xchg
jo
xchg
sbb
lds
mov
xchg
cmp
xchg
nop
adc
push
push
ja
icebp
or
iret
xchg
das
insl
pop
lcall
es
cs
mov
hlt
dec
mov
or
push
aaa
sub
lcall
addl
insl
inc
gs
pop
jl
mov
ds
inc
xchg
std
jb
push
jmp
mov
xchg
xchg
nop
out
and
mov
aam
adc
jae
and
inc
jecxz
mov
ljmp
dec
lahf
cmpsl
dec
or
pop
ret
cmpsl
dec
cwtl
ljmp
addr16
sahf
call
xchg
imul
xlat
mov
insb
and
js
inc
jae
in
inc
adc
stc
adc
jecxz
xchg
dec
jbe
sbb
sub
add
mov
xchg
or
sbb
push
push
jne
push
jns
xchg
clc
sub
or
inc
lret
mov
scas
in
cli
jbe
inc
adcb
imul
mov
arpl
and
xor
rorb
jno
jle
in
loop
cmp
fistpll
mov
daa
cs
mov
push
ret
sub
fmulp
sbb
adc
sbb
int
push
add
xchg
cmp
fwait
push
ds
inc
lods
mov
ret
bound
or
push
fst
cmpsl
add
bound
push
int3
mov
filds
pop
sarl
movsl
cli
addr16
int
cs
aas
sbb
mov
push
dec
aaa
movsl
jmp
mov
lds
into
scas
insb
out
test
jcxz
inc
mov
pop
sub
testl
cmp
jns
inc
test
push
mov
mov
xor
aas
adc
mov
mov
pop
lods
jnp
add
fwait
rolb
call
mov
cmpsl
mov
xchg
into
sub
or
mov
push
fwait
inc
mov
sub
mov
xchg
test
dec
jae
pushf
cli
cld
xchg
pop
std
push
mov
imul
inc
push
enter
pop
push
ret
fs
cmpb
push
cwtl
imul
xchg
push
mov
adc
call
outsl
mov
mov
jnp
and
mov
jns
ljmp
xor
test
mov
hlt
cmpl
sub
inc
dec
cmpl
aaa
repz
sbb
or
push
pop
inc
cmp
push
mov
das
xchg
cmp
out
and
psubusw
mov
mov
inc
dec
pop
es
imul
shrl
add
adc
cmc
pop
cmc
cwtl
push
in
icebp
cmp
sub
push
inc
outsl
test
sub
test
jg
cmpsl
call
and
push
test
mov
mov
mov
stos
sbbb
fidivs
xchg
dec
and
lods
aam
or
jbe
xchg
xchg
cmc
out
rclb
push
int3
popf
mov
push
cmp
push
outsb
test
int3
pop
int
mov
push
dec
out
cs
in
daa
es
xchg
jae
mov
mov
sti
shrl
cmp
cmp
add
jns
cwtl
pushf
iret
cld
fiadds
addb
stos
mov
push
mov
dec
ret
xor
stos
xchg
int
in
inc
loopne
sti
in
mov
test
push
aam
rorb
mov
movsl
mov
fildl
loopne
lods
outsl
nop
insl
insb
xchg
aaa
movsb
cmp
loope
sti
xlat
lds
std
mov
push
mov
adc
daa
pop
pop
hlt
pop
sbb
jge
out
sti
aaa
jnp
and
jp
je
xchg
andl
jmp
out
dec
inc
out
mov
jnp
sub
jbe
decl
scas
or
pop
mov
dec
outsl
or
outsl
inc
jns
sbb
gs
je
and
dec
decl
xchg
add
shlb
je
insb
stos
gs
push
xor
inc
jp
out
repnz
sub
shl
jg
insl
mov
inc
out
stc
std
hlt
mov
cld
fnstenv
cmp
out
lds
push
scas
cmp
in
push
or
mov
mov
push
mov
push
les
fists
or
scas
mov
push
and
scas
sub
mov
mov
jne
mov
daa
and
fucomi
sub
cmpl
push
pop
ljmp
pop
sub
movl
pop
pop
dec
lcall
mov
leave
sub
lods
mov
mov
xchg
and
cmp
repnz
lods
pusha
push
and
push
mov
into
mov
call
movsb
mov
adc
imul
icebp
mov
stc
bound
add
xchg
leave
insb
inc
mov
scas
iret
cmp
pop
fistpll
sbb
jp
insl
pop
xor
push
movsl
pop
pop
xor
push
cmc
imul
xlat
xchg
dec
push
movsb
cld
or
mov
aas
xchg
push
lea
lret
fwait
mov
mov
out
sub
sub
subl
inc
xor
aam
add
test
push
adc
xchg
ss
clc
pop
mov
cmpl
sbb
dec
int
mov
cmp
and
xor
aas
dec
add
xor
or
mov
iret
or
xor
enter
jns
mov
jl
fucom
sub
fmulp
xchg
cld
cwtl
and
adc
rcrb
dec
jp
call
and
xor
mov
int
push
addr16
aas
cmp
push
add
scas
stos
dec
xor
in
lcall
ss
sub
stc
out
clc
jbe
xor
out
call
inc
popf
add
xor
mov
cmp
test
xrelease
add
mov
cld
jecxz
fs
cwtl
std
fimuls
xchg
imul
mov
sti
shrl
loopne
jne
stos
cmp
dec
test
mov
pop
clc
sub
push
adc
sub
int3
jp
inc
push
add
sar
out
sub
dec
js
push
test
dec
add
mov
sbbl
popa
daa
lret
mov
rorl
jle
inc
inc
mov
jge
or
movsl
mov
cmp
xchg
imul
xchg
cmp
and
cld
daa
jecxz
in
lods
jnp
dec
sbb
and
jle
mov
rcr
pushf
inc
cmp
imul
pop
test
call
icebp
out
ret
lret
mov
test
xor
pop
ficompl
popf
cmp
add
pop
or
adc
jns
ret
jae
test
pusha
sub
dec
mov
fdivrp
insb
out
stc
inc
nop
daa
and
nop
push
cs
pushf
int3
das
inc
xchg
iret
jle
mov
jnp
sub
clc
hlt
roll
add
and
into
fnstcw
frstor
sarb
test
ret
mov
jns
fs
pop
fwait
mov
movsl
push
xacquire
jbe
push
xor
mov
sub
loopne
popf
jne
pop
adc
sbb
movsb
out
invlpg
ret
mov
dec
lcall
dec
jno
gs
lret
clc
pop
add
iret
aad
sub
inc
cmc
xchg
pop
leave
or
lcall
adc
cld
adc
mov
mov
lods
mov
or
pop
sub
add
pop
cmova
pop
push
adc
mov
ljmp
jne
lods
pusha
cmp
movsb
ja
push
cltd
mov
jmp
je
add
mov
es
icebp
out
dec
daa
xchg
mov
in
aas
cmp
push
aam
divps
nop
or
push
insl
mov
movsl
das
sbb
sub
and
mov
mov
inc
dec
cltd
sarb
xchg
push
push
fldcw
pop
loopne
pop
xor
jae
dec
jns
mov
loopne
imul
pop
idivl
mov
push
add
sti
cmp
les
mov
sub
and
xchg
ret
jmp
clc
stos
fldl
in
ja
jg
ljmp
imul
sub
repz
cmp
bts
lods
mov
and
lahf
scas
adc
aad
or
lcall
mov
in
add
mov
jg
dec
inc
loope
mov
pop
cmpsl
xchg
subl
jecxz
lret
push
cmp
cmpsl
push
ror
enter
cmp
enter
pop
stos
stos
push
loop
pop
mov
popf
xchg
sub
push
pop
or
xchg
aas
loope
xchg
cs
mov
lahf
mov
lcall
addb
sbb
test
xchg
jno
mov
daa
inc
andb
mov
xchg
jmp
das
mov
jne
add
jecxz
dec
stos
mov
dec
xor
jae
mov
jle
addl
jno
cli
sub
mov
fsubrl
lods
mov
pop
pop
ja
cld
push
cmc
jmp
xchg
imul
mov
inc
sti
mov
rcll
xor
in
dec
out
out
inc
sub
pop
pop
jecxz
cmpsb
scas
int
push
test
xchg
inc
or
sbb
stos
fpatan
jp
lock
xor
push
mov
stos
xor
test
lahf
dec
mov
test
adc
adc
mov
mov
lods
dec
push
insl
repnz
inc
xlat
in
in
out
push
iret
scas
adc
sub
divb
jno
cltd
xchg
inc
lret
fwait
sub
mov
pushf
orb
push
mov
or
inc
mov
cs
cmpsb
cmp
jnp
jg
outsb
sti
lods
out
cmp
dec
sbb
scas
adc
insl
sarl
jg
adc
js
pop
pusha
xchg
lods
hlt
arpl
sub
cmp
sahf
rorb
dec
loop
mov
mov
jae
mov
jg
cmp
lods
into
ficoml
jmp
testl
cmp
les
call
bound
hlt
addr16
push
mov
lret
or
lds
test
imul
add
pop
repnz
ret
jle
mov
mov
rorb
out
insl
aam
xor
inc
pop
push
xor
insb
inc
cmp
jp
adc
pop
add
add
pop
shrb
fs
fdiv
subl
dec
xchg
scas
daa
xor
and
mov
xor
faddl
imulb
sub
inc
xchg
fstl
jg
jg
jle
mov
ror
and
repnz
adc
and
pop
mov
outsl
ss
push
je
add
mov
cmpsl
loopne
ss
sti
in
int
ret
sar
test
sub
das
fsubl
lret
out
out
pop
sub
ja
mov
dec
sbb
mov
stc
cwtl
jne
outsl
in
sti
out
pop
add
lods
inc
aad
inc
adc
dec
push
cmp
jg
cmp
stos
sbb
dec
imul
cmp
jl
mov
subb
outsl
mov
mov
adc
insl
cld
pop
sbb
mov
mov
or
daa
xchg
add
jg
ss
adcl
arpl
movsb
enter
adc
ja
adc
loope
dec
insl
xchg
xchg
jl
jmp
xor
in
xchg
cmpsl
add
jns
pop
out
jmp
idivb
ja
cmp
lcall
jae
mov
adc
pop
ds
or
lds
push
lds
pushf
in
sub
pop
int3
cmp
arpl
and
sbb
jmp
push
loopne
xor
cmp
js
loopne
and
mov
out
push
fidivrl
rolb
lahf
ror
fwait
inc
ffree
mov
repz
ror
dec
es
xchg
hlt
push
jb
data16
rcrl
leave
jp
jno
popf
dec
mov
inc
pusha
popf
fidivs
dec
add
xchg
fucom
push
fcmovu
inc
or
sti
cmp
out
fbld
cmpxchg
mov
sub
pop
cmpsb
arpl
cltd
add
cmc
cmpsl
jno
outsl
subb
cmp
shlb
lods
and
inc
mov
push
sub
pop
jp
fstpl
fwait
and
popa
inc
aam
xor
push
inc
shll
outsl
scas
enter
sahf
jmp
not
mov
mov
out
xor
nop
cmpsb
xor
sub
mov
and
mov
sub
add
lret
push
or
lds
xor
mov
mov
pop
pushf
addr16
and
fwait
mov
lret
mov
in
std
mov
xor
negl
ss
or
cmp
mov
shl
out
and
mov
fcom
xor
cmpsl
test
jbe
cld
into
insb
sub
add
jb
cmp
fwait
cwtl
mov
mov
inc
mov
and
and
out
aaa
add
sub
push
inc
daa
jmp
xchg
jbe
xor
cli
aad
push
inc
mov
cmp
pop
loope
dec
nop
dec
and
push
xchg
xchg
nop
pop
testb
push
xor
test
sub
shr
jp
mov
jg
push
cmp
push
mov
loop
hlt
or
sub
or
fmull
mov
adc
dec
mov
or
fisttpl
mov
xchg
cmp
outsl
jmp
xchg
jecxz
lahf
add
mov
dec
imulb
scas
in
nop
jp
mov
jno
inc
ds
xchg
or
adc
lods
jns
xchg
mov
cmpsb
in
add
clc
xchg
cmp
data16
enter
inc
insb
enter
cmp
mov
xor
adc
loop
data16
cs
mov
adc
test
inc
adc
pop
xor
loopne
dec
jb
stos
and
lods
inc
fcom
repnz
call
or
in
jl
icebp
pop
aaa
push
mov
arpl
sbb
xchg
xchg
ljmp
lret
mov
int3
cmp
sub
aas
cltd
dec
mov
or
shll
ljmp
mov
stc
xor
pop
int3
pop
dec
and
adc
and
xor
sbb
js
sahf
fcmovu
icebp
mov
or
mov
and
sbb
cld
inc
mov
pop
iret
adc
dec
jge
inc
cmpsb
mov
xor
movlhps
xor
and
jae
sub
cmpsb
lods
dec
fprem1
aad
mov
push
and
pop
inc
dec
xchg
loope
pop
mov
add
sbb
scas
adc
cmc
adc
sbb
scas
adc
ds
xchg
leave
mov
cld
xchg
daa
adc
es
mov
jmp
cli
adc
aaa
sub
js
cli
xchg
enter
ja
cmc
mov
pop
dec
fists
cmp
scas
and
into
out
fidivrs
push
clc
mov
sbb
shll
pop
or
xor
pop
sbbb
push
xlat
je
push
xor
mov
xchg
divl
add
jle
push
arpl
push
push
sarl
sbb
lods
pushf
stc
and
mov
cld
std
xchg
pop
daa
pusha
loop
lock
in
add
sbb
adc
push
js
pop
inc
jae
and
sbb
xchg
jo
dec
cmp
cmp
mov
dec
cs
or
sbb
xor
push
cs
sub
sbb
or
aam
cs
xchg
push
or
xchg
fldl
cmpsl
push
aas
dec
mov
incb
mov
and
inc
mov
and
add
inc
mov
mov
popf
in
push
sub
adc
add
loop
jl
ret
nop
repz
mull
enter
push
js
loope
xor
pop
xchg
sub
xor
pop
fsubl
and
and
inc
push
mov
lods
lahf
push
sbbb
js
jp
fsubs
lods
adc
js
inc
jb
and
sbb
xor
push
sub
xchg
cmpl
cmpsl
aaa
and
mov
cmc
and
jmp
lahf
cltd
test
cmpsl
imul
pop
icebp
out
rorl
xor
aad
pop
out
int3
or
sub
test
div
js
ret
loopnew
cmpsl
cmpb
ljmp
out
lcall
fs
add
stc
les
ficompl
scas
mov
fmuls
pop
push
cmpsb
push
fsubr
mov
lea
aaa
push
xor
faddl
in
movsl
inc
and
mov
orl
ja
test
pop
aam
mov
cmp
mov
or
and
ror
dec
test
sub
push
mov
xchg
push
and
add
into
mov
popa
das
lock
mov
push
test
pop
sbb
jo
fwait
inc
icebp
mov
cltd
outsl
inc
aam
mov
jnp
add
aam
push
xor
insb
and
inc
out
addr16
push
push
imul
add
stos
mov
ljmp
icebp
jne
stc
mov
test
inc
jbe
cmp
cmp
add
aas
sub
faddl
add
adcl
scas
mov
and
dec
push
cmc
lds
lea
cmp
or
adc
notb
lods
pop
sub
sub
or
jnp
ret
push
push
and
cmp
cmp
out
vphaddwd
jle
test
arpl
mov
inc
std
pop
insl
outsl
push
sbb
mov
popa
jno
shr
dec
add
repz
add
sbb
cmc
pop
out
or
jmp
movsb
in
stos
stc
mov
push
pop
call
stc
out
cmpsl
add
pusha
test
call
push
jmp
sub
clc
insb
mov
push
xchg
loope
or
cld
in
cmp
jp
pop
pop
stos
push
cmp
xchg
xor
pop
cmpsl
mov
sbb
xchg
sbb
sub
lods
imul
fucomip
outsb
xchg
inc
mov
fwait
xlat
ficompl
pop
aaa
adc
pop
jne
sub
xchg
imul
jns
decl
pop
mov
mov
jbe
cmp
test
call
xor
pop
xor
call
aas
rorl
push
pop
in
mov
stc
inc
lods
fdivl
xchg
cli
sahf
test
das
pop
pop
sub
mov
jecxz
xchg
adc
mov
stc
pop
shrl
das
ja
addr16
cmp
cmpsb
dec
outsl
push
divl
mov
sti
addb
je
or
sub
stos
or
push
mov
std
iret
lods
lret
test
xor
pop
sub
push
sti
add
aad
rolb
xchg
pusha
mov
sti
mov
sub
pop
adc
mov
incl
iret
jae
stos
pop
adc
in
mov
fsub
inc
jb
and
inc
movsb
lahf
insl
mov
dec
clc
xor
iret
add
arpl
jae
faddl
push
es
xor
or
outsb
or
mov
mov
in
or
enter
mov
loopne
roll
jbe
inc
lea
pop
dec
aas
imul
and
adc
jb
pushf
xchg
lret
cmp
clts
mov
jmp
jae
mov
adc
ret
mov
jns
mov
mov
or
loop
mov
push
rcr
ljmp
ret
or
insl
mov
aas
push
xor
pavgw
lret
xchg
mov
outsl
stos
sub
pop
or
mov
sub
jno
arpl
cltd
or
mov
pop
ret
outsb
jae
jnp
jo
js
add
jns
je
sbb
mov
jle
cmp
sub
jo
movsb
shrl
cmc
into
lods
or
lds
lret
leave
mov
jo
xchg
cmpsb
add
jbe
inc
insl
xor
fwait
and
stos
push
push
jmp
cmp
adc
pop
pop
sbb
mov
les
dec
loop
aad
enter
jl
imul
fldcw
mov
mov
divb
pop
cmp
adc
dec
xchg
scas
jnp
jle
lea
fwait
imul
dec
ret
in
cmpsl
push
out
insb
inc
push
sub
stos
and
popa
push
ficomps
mov
int
aas
int
pop
fldenv
or
pop
test
add
cmc
es
daa
leave
xchg
jno
andb
xchg
pop
fidivrs
cli
sahf
jmp
pop
inc
in
lock
fiaddl
lret
adc
addr16
cmpsb
pop
mov
in
loopne
adc
scas
inc
cmp
pusha
shll
insb
out
cmp
xchg
xchg
adc
pop
mov
std
nop
sub
mov
lret
js
pop
into
dec
lret
scas
scas
loope
sbb
cmp
je
outsb
pop
sub
push
inc
jl
testb
inc
dec
jo
sub
mov
jae
dec
or
test
lahf
push
lock
imul
insb
jmp
lahf
ficomps
aam
push
je
loopne
lahf
mov
cmp
xchg
enter
shrb
and
xorl
push
and
in
pop
dec
and
shl
ret
repnz
addr16
loopne
jl
pushl
mov
rol
dec
or
jl
std
ss
iret
mov
mov
inc
aaa
pop
das
imul
ds
arpl
ret
pop
lock
rcl
aas
dec
ds
test
cltd
and
pop
popf
hlt
lock
repnz
cmp
dec
xchg
ja
dec
mov
pop
cmpsl
push
lock
xlat
popa
mov
mov
movsb
push
pop
loope
out
mov
scas
pop
mov
jecxz
movsb
rcrl
stos
pop
loope
lods
movsb
pop
sbb
rolb
ret
xchg
mov
std
push
dec
stos
ja
pop
jno
lcall
xchg
test
ret
xchg
adcl
xlat
fsubrs
push
push
cli
dec
lret
inc
leave
dec
jle
outsl
adc
push
das
cmp
pop
mov
out
jmp
sbb
and
xchg
push
cmp
jge
xchg
lret
mov
lods
adc
mov
aas
shl
xor
iret
loop
and
daa
cwtl
push
dec
or
pop
and
leave
inc
loopne
or
inc
xlat
cmpsl
dec
flds
aam
or
loopne
test
imul
jp
inc
ret
mov
shr
dec
xchg
adc
jnp
sbb
and
pushf
addr16
sbb
mov
in
adc
cmp
test
fnsave
add
sbb
jp
xor
psadbw
clc
jbe
xchg
fdivr
enter
cld
rorb
push
negb
insb
jne
cltd
adc
flds
xor
and
mov
scas
push
jle
mov
and
mov
jne
sub
cld
xchg
xor
cmp
pop
fwait
test
aas
jge
icebp
aad
fmull
sahf
sahf
push
nop
lock
jnp
scas
aad
ja
mov
aaa
xchg
sub
push
xor
and
ret
or
loope
cmp
imul
das
cs
inc
test
das
fsubs
jbe
stos
xor
lock
ret
mov
fisttps
dec
sbb
adc
movsb
sti
sub
jns
sbb
xchg
xor
test
push
pop
jg
in
test
mov
arpl
repnz
nop
mov
or
sub
ja
lock
add
rep
xor
icebp
mov
fstpt
pop
aam
and
inc
ffree
xchg
mov
jno
or
bound
enter
and
or
adcl
cmp
adcl
test
mov
mov
repz
mov
js
sbb
ljmp
pop
adc
adc
ret
lds
mov
cmp
lahf
lcall
iret
popf
in
out
shrl
in
mov
aam
jmp
add
mov
fistl
inc
test
mov
aas
sbbl
push
lods
dec
shll
inc
lods
out
sub
xchg
push
data16
lock
fadd
pop
jns
test
dec
aam
aas
loopne
lods
icebp
sub
mov
test
scas
cli
pop
jmp
stos
ja
popf
cs
pop
jecxz
inc
cmp
jg
fcomps
out
daa
iret
jnp
dec
adcb
lret
test
add
lahf
aas
push
dec
and
pushf
test
sub
cmc
pop
mov
lock
shll
inc
outsb
xlat
mov
outsl
push
rorl
mov
cmp
cwtl
fcmovb
mov
cmp
loop
push
jo
insl
ret
cmp
gs
hlt
xorl
gs
pop
daa
sub
jae
push
or
rcll
loope
or
and
clc
enter
test
push
lods
sub
mov
sub
ds
scas
clc
pop
idivb
rcrb
adc
cmpsb
push
and
lcall
ficoml
shl
dec
mov
xor
test
adc
mov
testl
sbb
mov
or
icebp
aad
aas
ja
pop
roll
sysret
jae
push
flds
cwtl
lahf
ss
scas
inc
call
xchg
mov
fistps
push
jmp
scas
in
dec
mov
ret
bound
cltd
and
push
push
and
cld
outsb
imul
dec
icebp
movsl
fisubs
push
mov
mov
sub
movsl
add
cmpsb
push
sbb
int3
push
pop
lret
inc
mov
btc
hlt
addl
adc
call
and
jg
movsb
adc
mov
cmp
lahf
fstpt
push
leave
jbe
cwtl
cmp
lret
mov
ds
test
lea
mov
mov
push
shll
minps
inc
mov
xor
dec
pop
mov
aas
sub
test
scas
pop
outsb
cmp
lcall
in
addl
or
pop
shlb
add
jno
pop
jnp
fs
ljmp
add
push
xchg
scas
jbe
sbb
out
aam
xor
insb
int
mov
sahf
es
in
clc
cmp
dec
sbb
js
pop
adc
mov
and
sub
shlb
and
sbb
pop
jbe
dec
jno
add
cmpsl
fnstenv
in
mov
lods
and
leave
push
or
fnsave
cmp
loope
jb
cmpb
push
sahf
repnz
aaa
nop
ret
cmp
pop
pop
mov
insl
xlat
sbb
test
stos
lock
mov
pushf
pop
jb
in
xlat
add
cmp
notl
pop
add
mull
fs
xchg
adcl
xor
push
addb
pop
mov
imul
mov
fs
inc
ret
cwtl
xchg
cmp
sbb
mov
sbb
jge
push
mov
fcompl
pop
pushf
pusha
in
jg
fimull
call
and
and
push
xchg
subb
scas
out
stos
sahf
and
xchg
mov
pop
sbb
push
dec
pop
xor
inc
pusha
aaa
or
int3
jae
push
jecxz
push
pop
add
ss
or
xchg
into
mov
and
xor
or
popa
push
mul
push
ret
in
xchg
jns
jnp
test
mov
cmp
ja
push
lret
jnp
or
popf
loop
inc
lea
and
push
dec
jmp
pop
fdivl
mov
sub
insl
out
mov
or
loopne
jp
inc
mov
push
mov
jle
cltd
push
adc
cli
test
in
mov
mov
mov
es
lods
divl
push
mov
enter
test
lea
mov
les
popf
jo
fistpll
addr16
sub
sti
mov
arpl
je
inc
mov
sbb
popf
pop
sbb
ss
test
lock
enter
gs
push
aas
push
add
popa
cmp
ja
xlat
pushf
push
push
xchg
push
in
out
rorb
sub
push
fwait
jnp
cmp
add
pop
repnz
out
lods
mov
data16
mov
cld
inc
aad
bound
loope
adc
mov
jo
mov
xchg
cltd
insb
sub
sub
jge
inc
lret
inc
negb
dec
cltd
and
loop
or
shrb
ds
stos
ss
and
pop
pop
cs
leave
icebp
jg
leave
jne
pop
sub
test
sub
pop
mov
inc
mov
jne
icebp
loopne
dec
cmpsb
mov
sbb
fisubl
in
jmp
int
inc
pusha
push
jg
xchg
push
xchg
daa
lods
adc
std
shrb
jecxz
rol
mov
xchg
push
mov
sti
xchg
dec
cmp
pop
bound
rcr
xchg
sbb
arpl
adc
add
mov
imull
adc
sub
mov
jo
test
inc
insb
ret
xor
xor
call
scas
insl
jno
or
sbb
arpl
add
data16
push
inc
ficomps
jg
sbb
add
push
pop
lea
add
lret
loop
lods
scas
push
cmp
adc
cli
lcall
in
icebp
cmp
test
add
insl
ds
daa
mov
insl
popf
or
sbb
icebp
jecxz
ljmp
jecxz
and
xchg
lret
and
xchg
sbb
adc
push
gs
lods
or
imul
int
adc
cld
sub
ja
inc
int3
insl
ret
pop
imul
pop
aad
std
rcl
jo
or
popa
sti
enter
cmp
lock
shlb
ror
pop
inc
and
mov
add
ljmp
push
aad
inc
jge
xchg
and
push
pop
adc
sub
add
pop
test
xchg
lcall
cmp
cmp
push
dec
mov
inc
enter
or
iret
repnz
cli
cli
jne
mov
cltd
std
xchg
pop
jbe
jo
int3
mov
in
mov
sub
repz
loop
addl
push
xor
mov
lods
lret
xor
pop
popa
fists
cmp
pop
xchg
push
lock
mov
sub
mov
orl
inc
stos
jg
add
sbb
cltd
mov
sbb
mov
repz
mov
dec
xchg
xor
cli
push
sbb
sbb
jmp
loope
push
iret
dec
xchg
insl
leavew
in
jnp
out
dec
mov
jmp
roll
jns
sti
dec
pop
addl
pop
mov
shr
repz
xchg
adc
call
cmpsl
inc
dec
pop
outsb
cmc
fyl2x
clc
xor
pop
mov
roll
divl
rorl
push
fwait
sub
imul
test
sahf
push
out
xor
xchg
mov
and
sub
pop
adc
dec
jns
lea
and
lds
std
jne
ffreep
or
dec
and
roll
pop
shl
iret
jl
jnp
fldlg2
stc
pop
adc
insb
outsb
aaa
js
mov
sub
addps
stos
hlt
dec
ss
std
frstor
or
insl
dec
lods
pop
std
sbb
jle
dec
cmpsb
add
dec
fdivrl
icebp
lea
loopne
pusha
mov
adc
cmpl
mov
dec
sarl
jmp
or
cmp
sbb
cli
jge
sahf
pop
adc
jge
dec
repnz
test
cmc
jecxz
push
mov
inc
mov
cli
repnz
test
cmp
dec
sbb
add
std
dec
sub
add
and
and
daa
xor
movsb
pop
pop
mov
xchg
fbld
rcrl
xor
popf
sbbl
and
xchg
and
jl
xchg
ret
dec
mov
mov
movsl
push
and
and
stos
push
or
push
push
xchg
mov
xor
xor
mov
or
dec
mov
lods
je
in
in
pop
mov
jns
popa
sub
nop
push
mov
mov
jmp
pop
popa
mov
aam
mov
fwait
jbe
rcrl
jbe
sti
lret
jbe
adc
mov
jb
test
sub
sbb
mov
pusha
js
cs
pop
shufps
fldl
vaddsubpd
push
out
adc
jle
add
sub
mov
jecxz
jp
cmp
mov
pop
mov
and
add
xor
xor
dec
sub
les
add
mov
dec
imul
fcmovnu
fidivrl
popf
xchg
pop
jmp
scas
xor
xchg
sub
mov
popf
shlb
add
ffree
or
ljmp
in
cld
xchg
pop
mov
test
pop
or
jg
or
hlt
enter
push
cmp
bound
and
jno
sahf
push
inc
mov
ss
rcll
cmp
dec
xor
add
push
mov
pop
jge
mov
sbb
aas
int
ss
or
scas
int
aas
clc
mov
frstor
jnp
add
mov
out
lret
or
xor
inc
andb
mov
pop
pop
leave
cltd
notl
mov
or
jp
and
fists
in
add
xchg
xchg
xchg
test
mov
mov
loopne
mov
push
fists
fcmove
lods
arpl
mov
aas
out
cmpsb
sub
dec
stc
cltd
adc
loopne
push
push
xchg
jg
xchg
loop
fldl
bound
pop
xor
mov
ss
stos
hlt
pop
cmp
outsl
sub
loopne
mov
cmpsb
inc
adc
push
setne
nop
adc
addr16
mov
test
lock
and
xor
mov
dec
cwtl
dec
cli
into
sub
data16
mov
inc
insb
and
loope
sar
inc
dec
push
add
xlat
je
mov
in
mov
dec
sub
push
sbb
xor
mov
test
mov
jo
xchg
in
fiadds
ljmp
jmp
inc
mov
dec
repz
push
loope
aam
sub
ja
pop
and
ljmp
xchg
popf
pusha
das
mov
push
outsb
out
cmc
pop
loopne
movsb
push
fcompl
sub
push
xchg
lret
lods
cmp
lods
or
pop
hlt
imul
mov
leave
mov
dec
data16
mov
rcr
es
dec
push
adc
pop
add
test
fisubrs
push
mov
jo
mov
aam
pop
cmc
fs
incl
les
clc
add
sub
js
jo
mov
addl
testl
pushf
test
dec
push
xor
loope
cmpsb
jno
cmp
pop
cmc
add
xor
jo
jl
xor
dec
nop
sti
dec
xchg
scas
and
lret
popf
dec
mov
sarl
fs
fiadds
inc
lea
push
push
mov
add
dec
sbb
add
scas
mov
add
mov
aas
orl
cmp
add
cli
iret
in
mov
data16
mov
mov
jnp
and
scas
mov
test
jae
addr16
jnp
xchg
in
cs
cmpsb
sub
mov
cmp
cmp
cmp
test
mov
movsl
pop
jecxz
mov
out
add
sub
imul
loopne
mov
dec
xor
imull
cld
mov
mov
mov
xlat
leave
xchg
cs
bound
sbb
in
push
xchg
cmpsl
sub
add
out
push
stos
adcb
xor
xor
sub
mov
jb
fnstsw
mov
push
dec
xchg
sub
shlb
into
add
mov
add
push
xor
clc
xlat
sub
mov
bnd
mov
fisubrl
inc
xchg
repnz
ja
jae
cld
arpl
adc
jle
or
or
decb
adcl
adc
push
sahf
xchg
in
enter
loopne
sti
jl
and
fstpt
mov
xor
mov
xor
and
popa
cmc
pop
hlt
or
jl
mov
int
mov
andb
sbb
xor
lret
cli
dec
sub
jae
dec
mov
loop
fsubr
and
fsubrs
in
frstor
mov
or
lret
pop
insl
xor
idivb
xchg
loop
aad
loopne
sbbl
push
imul
fstpt
imul
scas
cmp
and
punpckhbw
mov
lcall
movsl
xchg
xorb
sub
lfs
hlt
inc
cmp
pushf
outsl
mov
pop
push
gs
mov
cltd
push
popf
enter
es
cs
mov
sub
testl
stc
dec
and
pop
pop
mov
pop
add
mov
cmp
js
jge
cmp
xor
in
mov
fiaddl
or
dec
mov
cmp
loope
sub
ja
js
dec
incb
dec
pushf
sub
inc
das
pop
mov
mov
push
jb
je
adc
cmp
push
sbb
push
push
jecxz
lods
aas
mov
popf
js
pop
inc
sbb
stos
pop
stc
xchg
into
push
and
xorb
into
mov
les
xchg
jns
dec
add
gs
push
into
int
push
insl
nop
bound
lcall
add
xchg
pop
repz
or
nop
dec
lock
inc
mov
rolb
lods
dec
inc
loopne
xchg
or
mov
cmp
cmpsl
or
cmp
xor
dec
gs
inc
adc
sub
mov
inc
jnp
push
fisubrl
popa
inc
sub
xor
movsl
rolb
sub
aam
ret
in
pop
fwait
mov
or
cltd
dec
jb
mov
cmpsb
imul
in
rol
aam
and
testb
jecxz
inc
pusha
shl
jge
nop
mov
insb
mov
std
popa
incl
nop
addr16
or
je
inc
xor
xchg
xlat
push
xchg
xchg
mov
push
dec
sbb
ljmp
cmp
in
pop
adc
jp
push
xlat
es
xchg
in
push
adc
add
add
aam
adc
inc
mov
dec
sbb
xchg
lret
aas
cld
test
sbb
mov
dec
cmp
es
shr
cvttps2pi
scas
or
or
bound
ja
xor
test
mov
push
aas
shll
adc
addr16
sbb
mov
pop
cmc
adcl
repnz
adc
in
aam
bound
popf
dec
data16
lods
pop
xor
dec
push
ds
pop
mov
pop
shlb
push
cmc
in
push
loop
dec
in
iret
rcll
xchg
scas
popf
xchg
fs
jl
jmp
jl
mov
adc
pusha
sbb
jle
lcall
and
push
mov
inc
imul
xchg
fldcw
movsl
dec
inc
jp
dec
push
xorl
iret
dec
cmp
mov
xchg
jle
fmulp
mov
dec
inc
jmp
pop
mov
adc
int
jne
or
pop
aaa
testl
movsl
bound
test
jo
andb
in
movswl
ja
jg
nop
pusha
adc
subl
fmulp
rcrl
test
ja
bound
lods
jmp
mov
aam
imul
sub
jg
mov
aaa
lret
cmpsb
ja
stos
pop
ljmp
push
pushl
fistpll
sub
mov
and
push
test
movsb
data16
out
mov
jnp
dec
pusha
cmp
popa
call
sbb
jge
fisubrl
dec
mov
or
mov
inc
adcb
lret
mov
js
mov
mov
xor
adc
aaa
xor
cmp
ror
repz
dec
mov
call
push
aad
cmp
bound
mov
sbb
mov
inc
ds
and
ret
pushf
lock
and
sub
call
shll
jbe
mov
out
mov
xchg
aam
cmp
sbb
adc
sbb
lret
lds
popa
dec
fwait
sbb
sti
data16
sub
cmpsb
jmp
adc
inc
aas
sub
mov
xor
push
xchg
repnz
jle
dec
pushf
stos
xor
int
and
mov
sbb
mov
jb
pop
xchg
fdivrl
push
add
xor
clc
arpl
push
sbb
add
jo
xlat
les
inc
aad
sbb
xchg
xchg
sti
fdivrl
scas
cmp
test
sbb
fcoml
push
daa
cwtl
shrb
mov
push
arpl
out
hlt
fistpll
mov
jmp
and
jo
jg
xlat
mov
ss
push
mov
mov
jnp
gs
xor
dec
pusha
lcall
vrcpps
jbe
mov
ret
int3
rorl
sbb
ljmp
xor
pop
mov
in
sbb
xor
xor
and
sahf
test
mov
dec
mov
repnz
or
sub
sub
xor
pop
and
test
les
pop
in
add
dec
cmp
sbb
fwait
and
jmp
sbb
mov
xchg
jecxz
pop
icebp
or
xlat
divl
je
addr16
xchg
mov
fldcw
xor
inc
jmp
pop
lcall
mov
lock
xor
sub
dec
or
inc
mov
negb
or
xchg
add
fstps
jmp
outsl
add
jbe
xchg
pushf
or
xor
dec
in
icebp
addr16
ja
lea
dec
or
inc
cmp
pop
icebp
jnp
mov
call
mov
incb
xor
inc
jmp
cmpsb
xor
int
push
jno
incl
in
add
inc
dec
xor
fidivl
stc
out
inc
xchg
movsb
bound
xchg
and
je
outsb
leave
nop
adcb
aas
pushf
insl
cwtl
sti
push
rcrb
and
fstpl
nop
or
jns
in
jb
dec
mov
mov
mov
add
mov
loop
push
jo
out
push
mov
ret
nop
sub
adc
jp
inc
aad
jns
mov
test
and
mov
in
cltd
push
add
arpl
sub
or
xchg
xor
out
inc
outsb
sbb
cmp
pop
mov
mov
mov
lods
mov
dec
sti
aaa
sbbl
cs
cmp
cmpsl
inc
leave
cwtl
addb
aaa
jg
rcrl
sub
sbb
stos
adc
jmp
stos
sbb
inc
xor
xlat
push
mov
dec
roll
xchg
sub
pop
repnz
push
cmp
fsubrl
push
testl
sub
cmc
cmp
pushf
jle
inc
push
aaa
dec
jg
imul
test
jg
loop
sub
mov
xor
and
negl
xlat
sub
outsl
mov
xchg
rclb
fistpll
jle
incb
ljmp
ja
xor
inc
fnsetpm(287
sti
pop
scas
lods
pop
ret
bound
add
cmp
dec
loope
cmp
pop
sbb
fsub
iret
cmp
mov
stc
movsb
insl
dec
sub
xlat
sti
mov
jno
pop
mov
popa
mov
mov
cmpsl
subb
in
cmp
fdecstp
and
xchg
push
jg
add
es
out
jae
hlt
jle
inc
pop
pop
push
inc
mov
fwait
es
sub
fisttpll
call
mov
inc
imul
adc
xchg
js
divb
add
mov
jnp
aad
ss
push
test
push
sub
stc
call
mov
into
mov
out
cmp
add
in
mov
dec
movsb
mov
loope
in
jl
mov
enter
mov
and
testb
dec
ret
sti
fs
roll
test
adc
or
fbld
sub
arpl
mov
prefetch
ljmp
cmp
inc
es
insb
and
mov
sahf
icebp
hlt
das
mov
xor
test
adcl
jg
int
es
dec
jmp
jb
sbb
out
xor
jmp
add
xchg
outsb
jg
fs
es
cs
loope
arpl
lcall
push
mov
clc
test
clc
cpuid
push
mov
inc
mov
mov
test
or
mov
repnz
sub
xchg
jg
add
pusha
cltd
out
dec
and
insl
xchg
jmp
lods
push
jb
pop
lret
dec
js,pt
in
push
dec
shrl
jge
jbe
into
scas
and
mov
inc
stos
in
ss
jb
and
aaa
xor
sub
inc
insb
ss
sub
adc
jg
fsubrs
fwait
out
repz
sub
cltd
imul
mov
out
mov
inc
mov
adc
in
dec
in
arpl
popa
mov
ret
jnp
cmpsl
ficomps
mov
insb
jge
sbb
mov
dec
mov
dec
jecxz
jge
dec
sbb
mov
push
push
movsl
arpl
in
inc
shl
ret
push
out
adc
iret
les
test
add
xlat
jnp
xor
test
pushf
pop
jae
jl
dec
mov
inc
adc
xchg
inc
dec
repnz
mov
cmp
int3
adc
mov
pop
xlat
in
inc
or
jne
in
xchg
mov
out
and
aad
lods
sub
adc
out
xor
ret
fwait
jmp
icebp
iret
jecxz
cli
mov
jnp
sahf
and
push
outsb
jl
sub
push
xchg
aam
mov
jae
and
adc
add
rol
mov
sub
mov
add
pushw
dec
lods
pop
adc
std
mov
aaa
ja
and
mov
push
repz
cwtl
sub
dec
fwait
adc
jp
lret
sbb
jecxz
and
gs
sbb
dec
xchg
lds
lcall
test
xor
sbb
xchg
icebp
test
or
ljmp
lcall
out
push
mov
mov
ret
push
mov
fs
rcll
sub
sbb
lret
not
pop
pop
pop
test
int3
das
ficoml
nop
testl
shrl
cmpsb
and
dec
ss
bound
pavgb
jle
testb
pop
ret
cmc
pop
sbb
or
lods
xchg
mov
into
rcl
stos
sbb
xchg
jmp
jecxz
aas
jmp
js
repz
mov
andl
jne
test
inc
push
and
jnp
out
xchg
stos
lahf
rcl
lods
mov
fs
mov
cmpsb
ret
nop
nop
cltd
out
jmp
loop
xor
jle
leave
push
xor
insb
sbbb
jns
jb
or
bound
mov
pop
scas
and
negl
add
scas
mov
ret
mov
dec
push
shrb
aam
jmp
mov
lods
enter
mov
outsb
sarb
ljmp
xchg
pop
insl
iret
imul
arpl
cltd
mov
negl
inc
inc
in
test
aas
mov
test
in
xchg
xchg
jnp
popf
dec
cmp
push
dec
in
sbb
aam
in
lahf
fisttpl
pop
mov
fisubl
xchg
dec
add
mov
mov
dec
jae
sbb
mov
sbb
leave
push
ret
push
or
jbe
dec
hlt
sbb
adc
jl
add
xlat
filds
fwait
jmp
inc
jge
lds
mov
sbb
addr16
and
pop
sti
lock
sub
jo
jp
loope
xor
mov
icebp
inc
cmp
jns
jg
jne
ss
or
jnp
lahf
scas
inc
jle
jl
andb
adc
add
divl
jne
mov
add
jb
xchg
sbb
pop
arpl
dec
sbb
mov
mov
mov
loop
add
dec
std
jmp
jg
dec
sub
pop
rcrl
lods
aam
adcl
iret
rclb
sub
idivb
sbb
xbegin
cwtl
dec
pop
push
pop
ret
inc
push
lret
out
dec
clc
mov
movhps
inc
xor
cmp
jl,pn
xor
popa
xor
mov
xchg
stos
popf
mov
jno
or
sub
mov
xor
xchg
push
arpl
imul
test
cmp
mov
dec
int3
fidivs
push
or
in
loope
xchg
sub
pop
dec
push
imul
cmp
sbb
sbb
cmp
cltd
lds
subb
push
xchg
repz
adc
iret
aas
cli
pop
xchg
sbb
cmp
pop
aas
subb
mov
mov
ret
dec
push
outsb
pusha
in
sbb
push
jno
and
roll
and
xlat
push
int3
jp
push
lds
adc
call
adc
pop
ret
mov
mov
call
pushf
mov
sub
jb
cmp
xchg
inc
psubq
lcall
movsb
cmp
jne
imul
and
and
ret
and
lcall
and
test
jge
fldl
mov
sub
pop
pop
fcoms
popa
jecxz
adc
ljmp
add
into
jge
mov
mov
jno
mov
ljmp
or
ja
push
into
adc
dec
pop
mov
shrb
mov
dec
adc
mov
idivb
into
cmp
adc
enter
cmp
fisttpl
insl
movsb
insl
clc
cld
stos
mov
scas
fdiv
mov
roll
and
add
mov
outsb
sti
mov
jns
fldt
pusha
sub
lock
sbb
jecxz
and
iret
enter
xor
lea
ret
mov
push
pop
fistps
mov
mov
inc
or
daa
jmp
testl
mov
out
mov
mov
xchg
aam
push
ret
pop
repnz
cli
push
sbb
add
lods
sub
pop
enter
roll
xchg
popf
and
or
sub
rclb
test
cmpb
jne
les
cmp
add
jno
jns
lcall
mov
loop
lock
outsl
xchg
pop
into
ja
xor
inc
add
xor
or
test
jle
inc
out
mov
ljmp
add
aad
loope
pushf
ljmp
mov
bndldx
mov
call
sbb
adc
test
cmp
int3
out
mov
fisubrl
push
and
outsl
add
xchg
add
sub
cmp
jae
mov
jmp
push
jp
mov
pop
push
xchg
repnz
and
add
add
mov
je
bound
gs
xor
les
outsb
inc
adc
out
cmpsl
jg
pop
sub
mov
icebp
in
mov
test
push
jg
push
xor
push
push
stos
insb
push
push
mov
sub
mov
push
lcall
cmp
cmp
aaa
insb
nop
loope
lret
insb
clc
pop
aas
mov
insb
gs
mov
xor
addl
std
cmpsl
jne
repz
push
or
sub
mov
push
jno,pn
hlt
pop
nop
mov
repz
and
sub
cmp
mov
add
cmp
jo
movsl
fs
es
jle
xchg
ret
std
or
mov
ljmp
sarb
mov
jne
seta
mov
mov
cmp
pushf
add
jl
sub
sti
mov
push
push
jbe
lret
cmp
gs
push
fwait
and
lcall
call
dec
dec
jne
xchg
std
lds
xchg
imulb
movsb
push
add
pop
lret
rorl
jle
into
cmp
adc
or
dec
dec
icebp
jmp
push
xchg
addr16
nop
pop
push
jmp
mov
push
movsl
add
lahf
mov
jp
mov
push
jo
je
shlb
sahf
or
testl
mov
scas
sbb
stc
mov
lahf
and
mov
xor
bound
cld
or
lods
pcmpeqb
fcompl
repz
xchg
cwtl
mov
iret
jge
lret
fldcw
fbld
sahf
cmp
cmp
fidivrs
sbb
jmp
imulb
sbb
jg
adc
movsl
std
mov
push
xor
lea
inc
std
insl
aaa
sbb
arpl
pop
push
les
or
add
scas
cmp
mov
scas
ds
test
fcom
inc
es
pop
cmpb
loopne
hlt
das
int
adc
jno
pop
pop
fistl
jmp
push
loop
pop
insb
les
sbb
jno
pop
mov
fwait
inc
dec
mov
stos
outsl
jmp
inc
sub
sub
mov
jns
adc
stc
jl
sub
or
push
push
adc
mov
or
ret
nop
pushf
mov
fistpll
popa
test
pop
sub
fistpll
out
pop
or
icebp
scas
fcomps
xor
mov
xchg
add
cmpsb
pop
cmp
pop
jp
xor
cld
ret
cli
mov
jg
mov
pop
bndldx
xor
aaa
cli
ficompl
cmpsb
hlt
mov
xchg
cmp
lods
push
cmpb
lea
xchg
pop
lret
inc
mov
adc
dec
test
subl
outsl
cld
stos
push
rol
xchg
cs
test
add
das
jmp
mov
sbb
inc
xchg
add
mov
pushf
and
mov
adc
add
pop
dec
cmpsb
stc
inc
and
loop
xchg
cs
and
and
out
pop
imul
sub
xor
movsb
pop
push
mov
mov
iret
popf
dec
xor
push
mov
in
mov
push
adc
ror
jb
insl
mov
es
mov
dec
addr16
outsb
sub
jnp
mov
ret
sahf
pop
stc
into
dec
add
nop
mov
and
jno
mov
fistpl
out
ljmp
sub
fld
lea
iret
lds
lret
cwtl
mov
ret
cld
in
mov
in
ret
loopne
movsb
hlt
lcallw
mov
outsl
sbb
add
push
out
sbb
sbb
aas
stc
cmp
jae
xchg
xchg
ret
adc
cmp
stc
in
into
jmp
cmp
loope
push
xorl
hlt
jo
jne
push
fnstenv
lret
push
bound
xchg
into
sbb
adc
push
pop
nop
push
xchg
and
mov
fidivrl
popf
mov
add
cmp
mov
cmp
shrl
jle
cmc
dec
dec
leave
mov
and
lret
inc
das
addr16
xor
lds
gs
mov
ret
xor
jne
cli
outsb
in
jns
into
lahf
cmp
call
cmpsl
outsl
fcomps
in
cltd
lret
into
and
mov
pusha
popf
jb
jns
shl
push
sahf
push
xor
push
les
clc
sbb
test
loop
adc
stos
pop
cmpsl
jnp
je
icebp
xor
push
push
push
mov
shlb
lea
ja
loope
fmul
jno
lods
push
xchg
sbb
sub
jae
cmp
rcrb
nop
adcl
popf
xor
xchg
iret
inc
jmp
and
sti
cmp
ret
fiaddl
pusha
add
je
bound
mov
ja
pop
xor
pop
aas
lret
lock
xchg
popf
sbb
in
cmp
pop
shr
popf
imul
cs
leave
fdiv
inc
fdivs
add
cwtl
cli
inc
cmp
adc
mov
shll
jo
mov
and
jge
mov
imul
sti
pop
mov
addr16
rcrl
lock
and
cmc
sub
in
sub
cmp
ror
jl
push
aad
rcl
jno
mov
sub
addr16
pushl
scas
leave
clc
mov
out
pop
push
je
pop
into
insb
push
imul
mov
jmp
adc
cmp
icebp
out
test
dec
add
mov
sbb
mov
mov
cmpsl
adc
stc
cmp
dec
ljmp
movsl
out
inc
mov
js
pop
pop
lds
lret
inc
loop
mov
inc
jno
subl
aad
xchg
pop
push
push
inc
mov
xchg
fwait
dec
pop
aas
mov
add
subl
aam
je
sub
jl
lret
int3
adc
iret
inc
fsubl
imul
ret
xchg
xlat
outsl
ret
in
ret
xchg
movl
sbb
clc
add
mov
shll
popf
shrb
testl
test
mov
stc
rcrb
dec
xchg
popa
rcll
lahf
jnp
xchg
inc
scas
fsts
pop
iret
stos
call
fcoml
lcall
stc
pop
pop
movsb
dec
push
xchg
mov
inc
or
cmpsl
add
rclb
js
lcall
and
push
inc
inc
cmp
ret
ljmp
mov
sub
mov
imul
mov
flds
cmpsb
mov
sbb
cltd
inc
test
lahf
arpl
cld
lods
add
popf
lods
iret
jno
scas
jmp
fmuls
andl
add
mov
adc
stos
inc
stc
sbb
or
repnz
test
ljmp
mov
and
je
daa
push
pop
xchg
inc
sub
stos
mov
mov
rcrl
xlat
mov
outsb
add
repnz
pusha
and
int3
dec
icebp
repz
std
rcl
dec
addb
push
push
add
push
and
sub
js
addb
fwait
mov
and
dec
call
jb
xchg
test
pop
in
inc
ret
or
inc
call
cmc
imul
fisubs
mov
xchg
outsb
push
aaa
mov
mov
jbe
out
xchg
call
out
dec
push
jg
jo
mov
push
imulb
pop
sbb
js
push
fwait
out
mov
pop
gs
fisttpl
in
inc
mov
daa
int3
int
adc
or
cmpsb
jl
xchg
mov
lcall
dec
lahf
rcrb
fidivl
push
jl
mov
in
imul
jbe
inc
lea
shlb
fstps
lods
daa
mov
pushf
fdivs
jle
xchg
pop
and
lret
adc
aaa
loop
lahf
push
pop
mov
std
mov
imul
cs
loopne
mov
sbb
dec
xor
cmpsl
and
lods
nop
lea
jnp
cltd
xor
cmp
ljmp
dec
xchg
data16
bound
pushf
int
popf
xlat
mov
fdivs
rcr
mov
shlb
mov
into
dec
inc
stos
adc
sbb
pop
xlat
lods
and
jb
push
inc
mov
push
pop
fbstp
and
lret
repz
js
in
ret
sub
cmp
ja
inc
fldln2
lods
add
dec
sbb
call
stc
in
iret
into
repnz
das
lods
out
arpl
adc
add
test
jg
test
inc
imul
mov
jb
insb
out
mov
dec
push
add
jbe
xchg
inc
mov
xchg
and
mov
jnp
popa
in
sahf
jne
out
pop
mov
stos
mov
lods
jae
testl
movsb
and
adc
jmp
mov
cmp
aam
push
mov
lock
dec
dec
icebp
outsl
inc
push
ljmp
int3
pop
and
mov
and
in
mov
mov
xor
cmp
mov
pushf
sbb
xchg
push
jns
pop
mov
mov
leave
push
jp
xor
push
xchg
test
fisubrs
movsb
call
out
xor
sti
sbb
outsl
cli
sbb
mov
ja
add
and
enter
shll
sbb
adc
fadds
lods
jnp
inc
cld
and
jae
jg
inc
mov
mov
lea
xor
psrad
divl
mov
scas
cmp
and
outsb
jge
pop
lds
test
add
inc
dec
add
ja
inc
mov
mov
mov
sbb
jnp
hlt
aaa
mov
add
or
cmp
je
enter
and
pop
pop
subb
scas
xor
and
and
cmpsb
push
out
jno
clc
lds
ret
jns
lret
iret
pop
stos
out
lods
push
xrelease
rcr
push
xchg
sbb
shl
dec
aad
subb
mov
push
stc
arpl
pop
mov
shl
pop
sti
sbb
mov
enter
push
loop
pop
pop
lcall
push
std
scas
jg
je
lahf
in
clc
cmp
out
xor
jne
shll
push
xchg
mov
fdiv
sub
mov
in
pop
lret
test
repnz
dec
cmpsl
sub
cld
mov
test
inc
mov
dec
out
pop
cltd
and
stos
or
aas
pushf
les
mov
ret
push
addr16
mov
dec
int
test
popf
add
les
mov
scas
adc
imul
bnd
dec
lods
ja
sbb
andb
pusha
fisubrl
adc
mov
arpl
clc
adc
mov
xor
xchg
cmp
mov
cmp
and
ret
sbb
xchg
pop
sub
gs
add
mull
popf
sti
xor
sar
test
adc
and
in
ljmp
push
xorl
cs
in
jae
xor
dec
xor
push
pop
cmp
inc
in
fcomps
or
pop
je
xor
push
negl
jmp
add
xchg
mov
sbb
sub
movsl
sbb
popa
push
data16
rcrl
or
stos
pop
fdiv
clc
cs
jo
shlb
dec
jno
es
sarb
sub
add
jecxz
or
test
add
push
scas
sahf
mov
sub
xor
mov
fwait
std
push
sbb
cs
fildl
jmp
outsb
cmp
or
pmaxsw
xchg
jb
xchg
mov
pusha
mov
cmp
sub
sbb
stc
icebp
mov
or
jmp
lock
aam
push
pop
ret
jp
mov
xlat
push
mov
std
mov
fsubs
inc
cs
push
jbe
rolb
dec
leave
sti
cmpb
testl
test
ss
movsl
jns
dec
pop
and
xor
mov
icebp
pop
jae
and
movl
sub
sub
cmp
sub
xchg
jmp
push
sbb
out
or
xchg
popf
or
mov
jle
push
scas
das
push
mov
lods
stc
adc
sbb
lret
jl
mov
or
leave
stos
movsl
fsubrl
hlt
and
pop
pop
mov
bound
loop
fbld
imull
lds
popa
or
xor
int3
fcoml
call
push
jae
int3
mov
dec
out
mov
jnp
cmp
jnp
mov
je
test
bound
rcll
sbb
cli
mov
popa
push
insb
xor
sbb
negb
add
inc
add
mov
fdivrl
scas
stos
loope
into
xor
insl
cmp
popa
push
repz
sub
ret
sbb
nop
xchg
pop
jae
cmpsl
andl
ficompl
push
out
int3
pop
cmp
jb
std
adc
lcall
mov
jnp
pop
add
dec
fidivrl
out
gs
pop
sub
jl
push
pushf
inc
mov
testb
add
mov
inc
lahf
cmp
push
icebp
dec
in
and
cltd
cmc
mov
mov
xchg
and
aam
mov
std
in
mov
push
xlat
sbb
mov
pop
xchg
je
sub
sub
js
dec
sub
pop
push
or
pop
fwait
in
cmp
jbe
enter
dec
mov
jae
popf
mov
test
mov
jmp
push
and
pop
jb
stos
push
inc
xor
jl
pop
add
fs
jecxz
sti
jmp
cmp
and
shlb
das
js
jl
incl
push
std
jge
cmp
and
dec
adc
add
imul
test
jmp
fwait
mov
mov
push
cmp
sub
mov
mov
add
mov
rorl
dec
jno
cli
int3
pusha
test
mov
cmc
and
test
aas
movsb
ret
movsl
xchg
stos
or
dec
mov
aas
ds
rcll
pop
in
dec
mov
jno
mov
insb
add
mov
loopne
push
leave
adc
lahf
xor
lock
sub
pop
out
xlat
clc
pop
push
or
inc
push
repz
ja
pusha
jge
jo
ja
fs
xor
fnsave
ds
xor
outsb
xor
xor
or
into
fimull
shll
sub
inc
pop
mov
into
fcompl
vcvtss2sd
std
xchg
sahf
pushf
push
fs
aaa
mov
push
mov
mov
fdivrs
sbb
repz
out
sbb
lods
and
pop
dec
cltd
rcr
pop
cmp
shrl
les
mov
pop
in
mov
stos
scas
sub
cli
iret
call
repz
rcrl
push
push
add
pop
pop
xor
mov
iret
and
lea
or
push
sub
mov
xchg
addr16
es
nop
ret
loope
iret
int3
xchg
fistps
test
stos
aam
lds
inc
lret
add
cmp
fidivs
mov
in
cli
jmp
out
ret
jmp
shlb
mov
cmp
fisubs
inc
add
mov
push
xchg
lods
push
sbb
dec
pop
out
xor
mov
adc
lock
mulb
ret
pop
push
or
jo
ss
nop
loopne
punpckhdq
or
inc
push
sub
jge
xor
sbb
lret
jne
push
pop
mov
or
or
adc
daa
push
fwait
mov
decb
fld
negb
pop
fnstenv
movsl
pushf
lcall
or
or
cwtl
cmp
shll
push
xchg
push
push
lret
push
test
pop
dec
dec
jle
jo
rolb
lods
jno
jbe
adc
outsb
movsl
in
jb,pt
cltd
mov
push
push
pop
in
adc
outsl
mov
bound
and
call
fsincos
test
sbb
popa
mov
inc
or
aam
fs
add
or
jns
test
jae
inc
and
pop
test
xor
push
mov
xchg
adc
xor
cwtl
int
rcrb
movsl
xchg
mov
das
int
push
mov
mov
aad
loop
lock
lcall
push
ds
mov
add
lcall
imul
lods
je
sub
xchg
jae
test
adc
in
call
adc
push
jb
loopne
cmp
inc
loopne
test
cmpsb
fidivl
jb
cmp
in
lret
iret
je
lcall
imul
sbb
divl
sarl
outsb
mov
mov
dec
xchg
daa
jne
or
les
inc
imul
aad
mov
add
shr
mov
mov
push
sahf
add
add
push
mov
add
push
ret
icebp
and
sahf
cmp
les
lock
cli
add
test
pop
out
mov
in
mov
clc
aam
dec
fcom
sti
cmp
xlat
mov
and
sti
dec
out
adc
and
imul
inc
aam
jge
sbb
inc
arpl
adc
movswl
loope
orps
xlat
movzbl
inc
stc
cmp
xchg
cmp
out
loope
jnp
rcrb
ljmp
or
add
jp
jnp
loopne
xchg
rcrl
add
xchg
mov
push
popf
lcall
sbb
lock
movsl
cs
mov
fstps
xchg
xor
and
mov
test
and
jo
inc
and
imul
ret
ffreep
leave
cmp
fisubrl
and
mov
jmp
fcoml
test
jae
and
cmp
scas
in
cmp
mov
in
push
pop
cmc
aad
sbb
pop
mov
outsb
dec
out
jmp
aam
mov
lcall
insl
in
or
insl
js
mov
cmp
and
cmc
or
and
xor
add
xchg
mov
cmpsl
jns
inc
mov
jp
ds
movb
xchg
or
movsl
add
dec
orb
pop
xchg
cmp
popf
idivl
xchg
xorl
inc
test
xchg
jo
das
mov
fsub
or
xchg
dec
int3
lods
mov
call
repz
repz
dec
mov
out
and
subl
adc
aas
mov
jnp
imul
ds
push
push
mov
pop
cltd
nop
in
jge
dec
negl
jle
or
push
sbb
decb
jecxz
popf
scas
inc
push
pop
cmp
icebp
mov
int3
rol
dec
dec
inc
pop
sub
xor
pop
in
loope
cmp
shlb
ficoml
mov
fiaddl
and
mov
fwait
leave
mov
arpl
in
loope
xor
sbb
inc
mov
xor
dec
into
bound
xlat
ficoml
adc
or
or
mov
or
add
ret
lcall
fdivrl
sbb
mov
adcb
pop
or
aam
fisubrs
cmp
cld
idivl
int
rorb
pushf
inc
test
enter
cld
in
insb
xchg
test
bound
sti
mov
stos
lret
dec
xor
push
loopne
mov
mov
insl
dec
out
aad
sbb
repnz
jg
lods
push
insb
inc
jno
sub
mov
fs
xchg
inc
test
cld
adc
inc
jg
stos
or
sti
xchg
mov
lret
jl
scas
push
mov
add
mov
push
loopne
pop
dec
push
lock
dec
push
fnstenv
test
stos
sbb
or
out
xor
les
arpl
adc
stos
mov
loopne
cmc
mov
es
cmp
xor
sahf
cmc
cmp
fdivs
xor
mov
cs
xor
mov
test
popf
loop
mov
mov
sbb
xor
and
int
das
pop
pop
push
stc
fstps
insb
stos
sbb
aam
mov
sahf
aam
push
daa
ret
dec
imul
push
faddl
adc
cmc
cmpsl
rcr
lods
jmp
push
mov
icebp
hlt
sub
jns
das
push
xchg
jno
mov
push
data16
rolb
adc
jne
ss
fucompp
xchg
cmp
xchg
rclb
mov
mov
jo
fbstp
out
mov
mov
insl
cmp
jmp
int3
xchg
sbb
xchg
adc
call
sub
sbb
adc
fdivp
aam
cmp
frstor
pop
dec
and
in
bnd
es
dec
lock
dec
xchg
data16
fld
gs
scas
mov
loopne
jle
mov
sbb
es
in
ret
inc
loope
leave
out
mov
fsubr
lret
pop
lahf
adc
add
pop
sub
stos
dec
push
clc
je
xchg
fadd
xor
subl
add
pop
iret
rolb
cmp
cmpsb
icebp
inc
iret
cmp
addl
adc
cmpsl
es
pop
push
lahf
sahf
mov
xchg
ficomps
fwait
movl
outsl
stc
inc
pushf
xorps
fnstenv
inc
inc
sub
out
push
jl
cmp
adc
shrb
jg
inc
jb
cmp
loop
adc
push
insb
jnp
in
aas
pop
out
jo
mov
lahf
data16
xor
out
ds
push
mov
cmpsb
mov
jbe
push
ja
or
mov
push
push
call
sub
mov
lret
push
addr16
pop
xchg
je
ja
nop
cmc
mov
loopne
jl
add
in
cwtl
mov
daa
dec
and
xchg
lahf
pusha
dec
into
sbb
cltd
push
or
fnstcw
repz
pop
cmpb
ret
ret
ja
mov
push
test
jnp
out
pop
jp
stos
mov
fldenv
stos
scas
or
mov
loop
icebp
xchg
mov
insb
cmp
movsb
adc
inc
dec
and
dec
sbb
cmp
push
mov
jne
or
push
sahf
idivb
mov
push
out
cmc
push
inc
xchg
scas
adc
and
sbb
jp
ljmp
test
call
hlt
push
mov
push
nop
in
es
adc
and
and
mov
dec
fildll
dec
je
mov
xchg
int3
sbb
stos
jo
call
je
cltd
test
test
bound
dec
ret
daa
jle
jnp
insb
cmp
ja
push
iret
adc
cltd
sbb
mov
clc
mov
sahf
hlt
add
jge
xchg
mov
and
daa
pop
sti
lods
idivb
int
cwtl
pop
lret
xlat
test
inc
stos
jns
aaa
fsubr
or
or
mov
lret
sub
jg
mov
pop
dec
xchg
add
dec
push
mov
scas
mov
aam
aad
jnp
add
icebp
enter
cmp
inc
sti
mov
fwait
and
fs
stc
test
adc
mov
xchg
idivl
push
and
mov
pop
cs
xor
xchg
repnz
fisubrl
pushf
repz
pop
ds
test
cmp
sub
sbb
xchg
push
mov
inc
stos
imul
push
xor
data16
jns
std
imul
push
out
sub
xchg
cs
dec
fs
xor
fsub
jo
inc
jb
jnp
jbe
jnp
mov
push
insb
jg
mov
and
mov
lret
and
cmpsl
cmp
xor
jge
mov
jno
stos
xchg
push
push
jns
pop
aas
aad
xor
lock
pop
ret
sti
leave
cmp
bound
sub
jmp
aam
in
insl
inc
and
pop
ret
fwait
jbe
dec
das
jmp
add
test
pusha
xchg
out
cmp
popa
nop
mov
mov
adc
orl
stc
shlb
sub
lret
or
test
push
call
xor
outsb
insl
scas
imul
hlt
lret
lahf
cmpsb
inc
out
lods
outsl
mov
sahf
lcall
adc
or
pop
mov
aaa
inc
leave
lock
leave
jb
repnz
pop
dec
sbb
push
into
shlb
popa
sub
mov
push
outsl
cmp
xlat
out
and
test
xchg
mov
jge,pt
popf
mov
pop
mov
xchg
pushf
pusha
jle
ss
push
out
test
or
outsb
and
mov
add
xchg
mov
adc
mov
mov
xchg
rclb
fprem
fdiv
xchg
push
mov
arpl
inc
xor
loope
cmpsl
mov
inc
mov
addb
jl
or
add
pop
cmp
push
sub
sbb
pusha
lds
dec
ds
fnstsw
repnz
sub
ret
je
test
icebp
mov
aas
sub
xchg
sbb
test
jge
or
inc
shl
ljmp
aad
jo
and
jbe
push
outsb
sbb
xchg
pop
stc
push
add
push
pop
cwtl
xchg
mov
sub
mov
mov
mov
xchg
mov
fidivrl
lods
sub
mov
xlat
inc
jp
xchg
jle
pop
xchg
int3
testl
jg
add
dec
dec
xor
dec
fs
xchg
cmp
bound
loop
repnz
jne
pop
lds
testb
into
aaa
cmp
scas
in
xchg
lcall
mov
xchg
lods
mov
mov
out
rol
inc
sub
sbb
cmp
ljmp
sbb
xor
cli
jp
xor
adc
push
shrl
pop
push
inc
push
pop
lret
xchg
mov
das
jle
xchg
aaa
lret
rorl
ja
dec
ds
mov
leave
scas
cmp
add
negl
pushf
cmp
notb
mov
sbb
push
jg
push
jmp
popa
add
hlt
arpl
xor
fsts
lret
dec
xlat
aam
fs
mull
push
push
int3
push
inc
das
or
cmp
lret
imul
bound
cmp
lret
ja
dec
mov
loopne
fmul
test
adc
cmp
shll
lcall
cltd
xor
or
push
pop
lcall
or
xchg
test
fisubrs
push
movsb
pop
mov
test
jg
popf
in
adc
in
lock
bound
xchg
inc
cmp
test
mov
add
je
push
sub
pop
mov
add
jae
clc
repz
jns
mov
mov
mov
and
pusha
aam
cwtl
jp
rorl
insb
fmull
push
into
movsb
pop
ss
sahf
jo
push
cs
ja
xchg
xchg
xchg
pop
in
data16
rol
subl
jp
mov
mov
aas
out
or
cmp
sbb
inc
cs
and
cmp
dec
push
lods
mov
std
rcr
mov
cld
jge
xor
scas
adc
or
mov
cwtl
sub
ret
cmp
lds
fisubrs
out
dec
in
negb
jne
out
aam
lea
outsl
and
pop
push
lcall
mov
iret
push
ss
sbb
shlb
aad
js
test
push
mov
cmp
mov
mov
pop
mov
es
iret
testb
sbb
scas
js
or
or
jno
pop
jl
jnp
out
or
fcmovnb
mov
sbb
xlat
mov
jecxz
fs
xchg
mov
lahf
out
push
mov
out
adc
inc
jno
lods
leave
loop
sti
push
xchg
stos
mov
jecxz
inc
jcxz
stos
mov
rorl
mov
data16
jmp
sbb
fwait
push
xor
jae
notb
inc
subl
push
push
shl
mov
and
pop
or
add
stos
aad
pop
int
cmp
sub
test
mov
shl
dec
jnp
mov
notb
sahf
lock
mov
in
mov
les
test
push
xchg
mov
dec
add
push
pop
bound
int
out
aaa
xchg
cmp
mov
mov
fsubrl
mov
enter
sahf
dec
or
bound
cwtl
or
or
or
int3
xchg
incl
xchg
xchg
pavgb
or
sbb
ljmp
in
jge
add
jp
lret
std
dec
aam
push
ja
lahf
cwtl
scas
mov
lahf
xor
adc
clc
mov
xchg
into
aas
ret
mull
jae
push
mov
scas
inc
jecxz
stc
outsl
pop
or
adc
std
pop
mov
out
jecxz
dec
imul
or
out
push
scas
mov
addb
das
data16
ds
out
push
lods
adcb
test
ss
fnsave
adc
cmpsb
shlb
jg
or
mov
mov
and
mov
mov
push
mov
adc
jle
insl
add
pop
lds
push
dec
and
xchg
insb
inc
mov
dec
add
in
mov
mov
inc
sub
mov
mov
inc
mov
push
mov
sbb
add
xor
dec
or
mov
fidivl
ret
shlb
rcr
dec
pushl
cmp
lods
push
pushl
xchg
mov
sbb
popa
adc
or
jno
and
inc
push
enter
ljmp
ja
and
lea
inc
js
fwait
ss
iret
aam
or
push
in
mov
mov
jbe
ja
rcll
cmp
into
sbb
insl
push
imul
mov
sbb
lcall
or
les
in
fistps
xchg
pop
add
pop
int
icebp
insl
mov
xor
mov
lahf
jecxz
mov
iret
shrl
jecxz
xchg
ret
cs
xchg
mov
pop
add
push
adc
mull
push
pusha
addb
jg
ret
cs
gs
mov
pop
lds
sbb
in
fimuls
insb
xchg
cli
aam
int
fcomp
and
inc
andl
into
cmp
add
stos
dec
fwait
pop
sarl
inc
sub
mov
ja
jns
lcall
push
rorb
inc
xor
sbb
push
aam
xchg
enter
xor
sub
int
or
sub
stos
rolb
loop
call
int3
int
dec
mov
ljmp
cli
add
lds
cmp
and
dec
insl
pop
sbb
push
push
lahf
sbb
xor
add
inc
cmp
in
lods
jg
es
inc
mov
in
cmp
jge
jb
lock
lahf
inc
xchg
sub
xchg
adc
scas
sbb
cmp
into
jns
push
repz
push
adc
mov
push
lock
cs
mov
mov
dec
or
lcall
loop
ret
push
dec
sub
inc
popf
inc
mov
inc
mov
je
loop
push
jg
xchg
xchg
mov
mov
aaa
jmp
mov
ds
pushf
ret
jno
sti
xor
data16
loopw
and
mov
in
xchg
fs
mov
fcmovnu
mov
aam
lea
and
sub
push
push
dec
insl
dec
inc
out
sub
pop
cwtl
insl
aas
mov
into
xchg
adc
mov
cli
repz
adc
int3
enter
pusha
inc
inc
icebp
xchg
mov
pusha
bound
shlb
push
push
imul
adcb
mov
cmp
sbb
ljmp
push
push
push
push
mov
leave
flds
xchg
aam
or
jne
dec
and
jne
push
je
lods
add
mov
ljmp
mov
sbbb
mov
jb
mov
out
mov
shrl
adc
sbb
cld
stc
add
jne,pn
xor
movsb
hlt
push
stos
sar
pop
lea
ret
ja
or
aam
jp
cs
mov
ret
mov
fnstcw
adc
fcomps
cs
jle
sti
into
aad
outsb
xchg
mov
push
hlt
ret
push
xlat
cmp
cmp
sti
or
data16
loopne
cmp
shlb
enter
mov
dec
aad
sub
hlt
jmp
insl
or
sbb
cmc
scas
and
fs
cld
dec
repz
push
sub
jns
mov
aaa
cmp
ret
add
insb
add
xchg
sub
xchg
fdiv
mov
push
scas
jle
xor
sub
enter
xchg
mov
fldpi
add
mov
nop
add
or
pcmpeqb
int3
pop
ds
mov
lea
andb
inc
xchg
pop
fists
pusha
cmp
adc
das
inc
lret
and
cwtl
inc
int
xchg
ljmp
pop
mov
cmp
loop
fiadds
adc
mov
icebp
and
mov
add
adc
sti
or
mov
add
dec
pop
cmc
bound
lock
dec
push
mov
add
icebp
ja
pushf
mov
out
jo
ja
inc
std
jmp
jg
cmp
mov
lds
iret
cmp
jne
clc
sub
fistl
lods
xchg
jmp
fcmovbe
mov
aaa
notl
cmp
add
addb
cmpsl
pop
cltd
mov
jb
push
rclb
inc
pop
cmp
cmp
cld
sub
nop
inc
fst
dec
aas
pop
and
fmuls
push
test
and
add
mov
xor
call
fsub
dec
out
xchg
repnz
ja
cli
push
mov
daa
js
add
add
aas
mov
mov
fnstsw
pop
subps
mov
xor
push
lods
leave
add
add
test
movsb
nop
add
cmp
lock
in
repz
add
add
test
adc
or
icebp
mov
adc
bound
les
aaa
fadds
mov
rclb
ret
jmp
adc
lret
pop
pop
add
cltd
pop
mov
out
jae
arpl
out
cmpsl
scas
sub
sub
movsb
jns
insl
push
test
das
adc
dec
mov
mov
dec
and
inc
fisttpl
xor
cli
dec
ret
dec
mov
lret
jmp
ljmp
sub
aaa
xchg
jle
jno
push
mov
repz
add
lods
push
dec
pusha
push
std
fwait
xchg
adc
cmpb
mov
out
add
mov
dec
call
int3
and
mov
xchg
ret
cmp
xchg
test
mov
js
fisubrs
popf
mov
in
cmp
and
jae
call
in
push
mov
mov
mov
and
and
ficoml
xchg
push
fmul
inc
inc
bound
pop
aas
fdivl
xor
out
inc
sub
add
jo
xor
cmp
push
insb
xor
aam
xor
not
test
repnz
pop
dec
xor
addl
fdivl
popf
out
jle
fmull
aaa
ss
xor
mov
addr16
cmp
dec
clc
push
mov
mov
stc
add
jge
lock
add
sarl
push
scas
dec
push
or
movsl
dec
add
out
jno
int3
dec
and
inc
pop
pushf
shl
iret
ja
lret
mov
xor
xor
aas
jnp
add
push
arpl
jo
cmp
cmp
push
cmp
jecxz
pop
push
cld
cmp
inc
mov
xchg
out
jb
xchg
inc
inc
fisubrl
cld
push
cmp
addb
jb
xchg
pop
ret
add
sub
or
cmp
mov
xchg
std
fildl
push
dec
dec
insb
ficompl
js
sub
leave
stc
mov
test
fwait
dec
cmp
sahf
data16
jne
data16
jmp
outsb
pop
mov
dec
ja
movsl
adc
cmp
shll
pop
ljmp
out
dec
sbb
add
inc
push
xor
sbb
sub
int3
mov
fistpl
xor
scas
pop
in
xchg
jg
test
enter
dec
push
xor
cmp
jp
rorl
rcrb
add
sub
das
jb
test
sub
das
mov
mov
lea
add
gs
sbb
lods
fcomp
jb
adcl
inc
mov
addr16
and
in
mov
inc
jl
inc
xchg
mov
jae
pop
imul
add
mov
fbld
mov
mov
ret
rolb
dec
mov
pop
xor
inc
out
jbe
loopne
push
and
testl
lcall
cli
dec
adcb
insb
push
pop
dec
aaa
popf
stos
sbb
loope
out
aaa
add
outsl
sub
sar
add
jecxz
pop
mov
leave
imul
push
repz
in
pop
aam
xchg
stc
icebp
out
or
inc
xchg
cmp
mov
xchg
pop
xchg
das
aad
push
cltd
stos
in
and
scas
es
rorl
jmp
sahf
mov
clc
ret
aaa
inc
scas
shll
pusha
inc
lret
adcl
jl
add
xorl
mov
imul
frstor
insl
cld
push
shlb
xlat
js
xchg
insl
add
popa
int
add
xchg
movsb
adc
ljmp
pusha
cmp
in
cld
jmp
add
jns
jo
inc
repnz
in
sbb
popf
out
je
pop
cltd
aad
shll
rorb
or
push
add
inc
push
mov
fsts
push
ret
out
dec
in
cmp
fisttps
push
inc
pusha
shrl
aas
pop
push
jle
and
push
or
in
lahf
add
dec
sbb
repnz
dec
fdivrl
push
sarb
mov
mov
stos
mov
loope
dec
incl
mov
lcall
sbb
mov
mov
ljmp
jne
jl
adc
addr16
mov
test
insb
data16
pop
and
sbb
aad
lret
stos
das
mov
mov
inc
fdiv
xor
lahf
arpl
mov
shlb
sub
adc
lds
mov
jle
out
lahf
cmp
or
addb
lods
das
vmwrite
xchg
push
inc
fld
xchg
mov
jl
lret
clc
or
cld
imul
adc
test
sub
xchg
or
sub
pushf
mov
add
adc
pop
in
add
inc
pushf
sub
pop
or
gs
add
or
leave
loopne
add
cltd
push
dec
dec
inc
in
data16
lahf
subl
pop
test
xchg
jnp
pusha
insl
mov
push
data16
repz
add
cld
xchg
dec
lcall
jmp
shrb
ret
adc
into
lret
insb
push
add
pop
push
pop
mov
ljmp
or
or
jge
mov
dec
cmp
js
std
scas
push
arpl
es
pop
xor
inc
push
cmp
sub
not
jno
xor
push
jae
mov
and
pop
arpl
js
jle
dec
mov
cltd
and
je
lods
sbb
push
add
out
bound
mov
mov
addl
mov
test
mov
sbb
xor
imul
mov
inc
std
outsl
dec
imul
jmp
data16
ja
xor
pop
mov
in
cmc
or
mov
inc
ljmp
lock
cmc
and
mov
int
pusha
push
cli
lret
pop
nop
mov
call
inc
fdivl
loop
mov
aam
mov
sbb
push
pop
cld
mov
std
iret
adc
mov
out
setle
imul
icebp
mov
stos
gs
out
scas
sbb
inc
enter
icebp
nop
lock
fisubs
insl
hlt
ret
test
jnp
xchg
stos
inc
dec
cmp
or
inc
or
jg
xor
test
sbb
mov
or
mov
fidivrl
stos
pop
mov
loope
addb
mov
push
daa
inc
stos
jae
xchg
mov
cmp
inc
cwtl
in
std
mov
cltd
inc
imul
cmp
jg
and
adc
mov
andl
popf
mov
sbb
xchg
dec
jb
not
cwtl
les
nop
jmp
das
pop
cmp
jno
test
jae
arpl
dec
les
aas
int
adc
add
in
or
or
enter
xor
es
push
push
pushf
inc
mov
in
ss
js
bound
xchg
jl
fstp
add
push
and
adc
jae
sbb
xchg
mull
adc
pop
call
and
pop
stos
sub
movsl
pop
cmp
pop
pushl
pushf
jnp
lods
daa
scas
stos
add
ljmp
add
icebp
sarl
add
adc
jmp
call
adc
push
fstpl
push
sub
mov
das
fbld
scas
inc
lds
aad
jo
sbb
inc
dec
xchg
insl
add
outsb
dec
movsl
mov
sub
cmp
jns
push
lds
in
jl
les
mulb
js
mov
testb
pop
pop
inc
addr16
testl
xchg
add
inc
xor
pop
fs
std
xor
adc
sub
jg
xor
fs
cli
je
aam
addb
movsb
cmp
cltd
popa
push
loop
and
jns
lahf
and
inc
pushf
fs
sbb
sahf
or
divb
or
pop
ret
cmpsb
sbb
stos
mov
and
xchg
cmp
cmp
fidivrl
xor
adc
or
push
std
bswap
xlat
mov
jnp
scas
xlat
add
and
hlt
ror
sbb
imull
dec
dec
jg
iretw
in
imulb
sbb
subb
push
nop
inc
call
scas
fchs
push
aaa
adc
ret
push
xor
pop
addr16
push
xchg
jno
mov
scas
jae
lret
pop
cld
stc
xchg
xor
push
mov
mov
dec
aas
mov
in
pop
push
negl
mov
xchg
mov
jecxz
and
clc
push
lods
cltd
pop
rolb
rorb
mov
add
or
jne
pusha
or
or
enter
push
inc
lret
cwtl
les
cld
cld
cmp
cs
mov
jne
xchg
cs
push
cmp
add
inc
mov
xchg
sbb
outsb
fwait
rcll
addr16
imul
or
lret
lea
inc
xchg
popf
push
nop
test
je
sbb
push
ret
xchg
inc
add
mov
pop
pop
dec
js
mov
cwtl
pop
fistps
and
and
fwait
add
insl
push
fcoml
insb
xchg
ret
repz
mov
test
scas
fmulp
jg
les
or
mov
cltd
test
dec
pushf
lcall
sub
cld
js
pop
in
xchg
xor
fwait
clc
dec
xor
sahf
call
and
in
xchg
cmpl
and
jae
add
movsb
cwtl
in
jl
adc
cwtl
mov
jg
fldl
cltd
xor
pop
fistl
mov
shlb
push
divl
lea
or
pop
cmp
test
leave
lods
imul
ja
mov
lods
subl
lods
xchg
jae
sub
cmp
xchg
jnp
adc
cmp
fiadds
orb
imul
sbb
lods
xchg
xor
push
sub
push
push
jne
lds
xor
scas
dec
hlt
rorb
cmp
mov
hlt
enter
pop
fwait
sub
jo
xchg
jge
bound
pop
cmp
nop
pop
sbb
arpl
inc
xor
les
jae
in
mov
ret
jle
je
jae
xchg
push
insl
mov
push
ret
xor
scas
cmp
jo
in
xchg
pop
outsl
imul
sub
inc
jne
insl
adc
cltd
adc
pop
popa
dec
adc
rclb
xlat
fimull
and
xor
cmc
insl
mov
decl
inc
adc
inc
jb
adc
in
insl
adc
test
mov
imul
cmpsl
subl
in
add
fidivrs
test
xchg
add
jecxz
mov
jle
sub
add
mov
cmp
iret
sbb
mov
lea
cmp
dec
iret
push
sub
in
push
pop
sbb
mov
add
mov
mov
stc
xor
out
xor
xchg
mov
lods
loope
pop
lock
cmp
out
pop
outsl
stos
outsb
fildll
dec
data16
out
push
cli
jmp
inc
pop
pop
inc
xor
pop
fcoms
adc
ss
mov
jg
out
data16
js
pushf
xor
push
fsubl
dec
ret
mov
xchg
mov
mov
pusha
jno
xchg
scas
mov
add
insb
xchg
push
in
in
sub
mov
mov
pop
sub
cmp
cs
cmp
cli
push
js
sahf
int
xchg
xor
cmp
jl
push
push
imul
inc
add
sub
ljmp
lret
test
add
sbb
popf
dec
or
mov
iret
popa
ficomps
ss
xor
cmp
lock
mov
popf
dec
mov
add
cmp
xor
cmp
push
mov
adc
push
pop
je
in
adc
shlb
ret
lahf
mov
js
or
out
stc
mov
mov
mov
mov
adc
outsb
push
nop
sbb
jmp
pandn
jle
imul
pop
ja
cmp
dec
push
push
stos
push
aaa
popf
or
push
xor
shll
sub
lahf
leave
loope
cld
or
sahf
cmpsl
cmp
popa
adc
jge
push
mov
xchg
fnsave
mov
xor
out
mov
add
in
sbb
and
pop
and
xlat
jne
nop
ja
jmp
push
test
lds
mov
fsubr
sub
mov
cltd
pop
arpl
icebp
mov
mov
scas
shll
js
xlat
pop
es
and
adc
fwait
shlb
or
bndstx
mov
imulb
xor
inc
repz
sbb
cmp
sub
cmp
xor
subb
mov
dec
pop
jnp
sub
mov
or
imul
jbe
mov
imul
sub
xor
cmp
orb
pop
xlat
ficomps
pop
rcr
dec
loop
lcall
or
xor
xor
lret
dec
mov
or
fnstenv
js
push
pop
mov
sahf
xor
leave
cmpb
adc
lea
js
mov
inc
adc
in
mov
dec
jle
add
dec
std
into
addr16
sahf
dec
mov
jb
inc
or
xchg
lods
bound
and
dec
les
mov
arpl
mov
add
movsl
jbe
rolb
pop
testl
dec
stos
jo
xchg
mov
adc
xor
sahf
and
sti
cli
mov
and
xchg
and
popf
leave
cmp
or
mov
lret
push
cmp
rcrb
xchg
rol
je
hlt
lret
jecxz
fwait
aam
outsl
fstp
mov
inc
orb
and
repnz
mov
and
fmul
loope
enter
test
sahf
xor
xchg
repz
enter
shl
cwtl
je
sub
aad
nop
popa
repnz
cmp
and
movsb
sbb
pop
fwait
adc
test
sbb
hlt
aad
cmpsb
mov
cwtl
ret
mov
pop
mov
adc
ljmp
sbb
add
outsl
dec
mov
xor
xor
out
fcoms
adc
mov
inc
lcall
mov
scas
adc
jo
adc
jb
ss
pop
mov
sbb
pop
imul
mov
pop
jae
call
add
cli
pushf
pop
mov
jo
xor
mov
xorb
xchg
repz
sbb
pop
xlat
ss
inc
adc
gs
lahf
enter
pop
xor
jns
rorb
inc
in
adcb
insl
adcl
pop
xchg
sub
sbb
lahf
jp
lock
arpl
stos
and
xchg
sbb
push
and
stos
pop
dec
lcall
fs
scas
ret
or
subl
int3
popa
pop
xlat
mov
pushf
inc
jae
adc
add
xor
and
jg
stos
fcmovnu
inc
inc
mov
iret
or
xchg
xchg
cmc
pop
imul
test
mov
pop
mov
xchg
sarl
xchg
stos
es
mov
and
push
xchg
shrb
cld
andb
xor
lahf
cmp
xchg
fisubrl
or
push
call
cltd
iret
mov
mov
mov
xorb
cli
insb
aas
mov
xchg
inc
lcall
mov
cmp
faddl
inc
cmp
adc
lcall
cltd
inc
push
sub
stos
orl
add
mov
jg
out
mov
pop
std
pop
jp
movsl
push
xor
addl
lods
push
mov
pop
arpl
fcompl
xor
aam
lods
es
enter
add
mov
fstpl
fs
adc
test
outsl
jnp
xchg
mov
icebp
push
jg
sbb
mov
sti
mov
cli
rcll
mov
std
mov
leave
outsb
mov
insl
push
movl
mov
mov
inc
into
jb
push
repz
lahf
xchg
loopne
and
cmp
mov
mov
mov
enter
in
aad
push
movsb
imul
ljmp
lds
mov
sbb
lods
inc
pushf
cmpsb
lret
pop
mov
sbb
daa
es
and
adc
scas
pop
adc
cwtl
cli
pop
sub
jb
mov
mov
jne
adc
insb
ret
arpl
cs
and
movsb
loopne
inc
push
inc
ret
fdivrs
sbb
jp
and
pop
push
adc
or
test
notb
push
dec
cmc
mov
loop
cld
cmpsb
inc
leave
addb
jp
mov
loopne
movsb
mov
fucomp
popf
cmp
testb
cltd
stos
aas
stos
push
imul
ja
pop
aaa
sbb
fs
mov
jp
insl
jb
shrb
or
int
dec
out
ret
stos
lods
sbb
stos
or
iret
mov
add
test
sub
mov
fucomi
out
pop
mov
aas
in
mov
pop
push
pop
mov
jno
mov
add
loopne
ret
cmpsb
scas
inc
push
stos
mov
push
pop
sub
mov
push
xchg
lds
jg
push
fwait
mov
sub
movsb
ret
icebp
sbb
push
arpl
icebp
sti
lret
xor
out
mov
jl
push
add
cmp
mov
jg
outsl
dec
or
ss
ds
les
add
mov
inc
xor
push
fstpl
dec
mov
or
stc
adc
sti
cmp
aad
fcoml
mov
xchg
imul
test
test
dec
inc
jne
cmc
mov
push
pop
pop
ja
and
sbb
sub
cmc
jbe
mov
js
pop
out
dec
or
sbb
or
addr16
xchg
sub
sub
sti
push
shlb
mov
into
cli
mov
jbe
xor
dec
fdivs
xor
popa
xchg
and
stos
lahf
lcall
xchg
pop
fwait
jno
imul
mov
xchg
subb
cmp
push
and
fs
imulb
sub
mov
mov
jge
mov
inc
shrb
nop
cmp
xorb
ja
xchg
out
adcl
mov
or
sub
mov
lcall
mov
test
adc
mov
std
test
hlt
inc
mov
movq
push
jecxz
lock
inc
arpl
dec
sub
sti
inc
xchg
cmp
mov
gs
shrl
orl
pushf
cwtl
adc
in
adc
popa
ret
pop
jb
sub
push
and
push
sub
or
nop
movsb
inc
out
or
aam
inc
xchg
dec
adc
dec
adc
and
loop
flds
push
mov
ja
add
pusha
mov
shlb
fcoml
popf
cmp
cmp
aam
fists
int3
ss
jle
addr16
mov
cmpsl
insb
pop
lcall
gs
mov
test
sub
xor
pusha
cltd
repnz
aaa
loop
je
rorl
jmp
lds
enter
dec
test
aam
outsl
cmp
aam
mov
shlb
adc
xor
mov
mov
jne
test
or
inc
cs
fldenv
icebp
pop
je
repz
push
pop
mov
sbb
mov
shlb
shlb
and
mov
fwait
inc
je
das
imul
shll
inc
js
xchg
fnstsw
dec
imul
shl
in
cmp
adc
dec
xchg
test
pop
bound
stos
mov
pop
out
lods
jae
les
clc
lret
sub
aam
sub
lock
stc
clc
jge
ljmp
bound
addl
sbb
call
fsubrl
andl
push
int
xchg
ja
push
addr16
xor
aaa
sub
push
enter
sub
orb
xchg
cs
jecxz
xlat
repz
arpl
push
sbbb
sbbb
mov
xor
negl
test
xor
inc
fcmovb
ljmp
or
pop
mov
pusha
jle
and
sbb
push
int
mov
xchg
or
std
mov
mov
fdiv
xor
or
lahf
lcall
push
push
sahf
mov
jbe
les
xor
push
enter
imul
jecxz
ja
lahf
outsb
sbb
sbb
pushf
aad
push
sbb
push
dec
call
aas
push
test
aad
pushf
outsb
iret
sbb
loop
inc
mov
adc
aas
dec
movsb
or
mov
mov
out
shl
rclb
cmp
std
sub
fisubl
mov
out
jl
cmp
incl
in
push
inc
test
inc
arpl
insl
lcall
daa
cltd
jmp
mov
mov
sbbl
inc
fdiv
add
pusha
daa
movsb
xchg
xchg
movsb
xor
cmp
outsb
in
aad
js
andl
and
call
cs
test
mov
rcrb
dec
or
dec
xchg
mov
or
mov
jmp
jbe
sub
inc
xchg
test
cmp
jmp
adc
sbb
pop
fcos
dec
xor
mov
cltd
xchg
fisttps
and
lea
xchg
lret
cmp
push
aas
ret
test
les
sahf
adc
cltd
sarl
bound
iret
cmp
pop
mov
leave
dec
xlat
cmp
dec
dec
leave
pop
cmpsb
lret
sub
or
inc
pop
add
xor
out
push
clc
mov
adc
xor
clc
bound
inc
fld
mov
mov
mov
sub
movsb
outsl
adc
jp
inc
dec
cmc
enter
pop
lds
jmp
push
push
sbb
es
dec
jne
push
lods
pop
add
rol
sub
fsub
sbb
cmpsl
inc
cmp
loop
inc
cmpb
inc
or
sahf
std
sahf
push
adc
movsb
jbe
mov
inc
lcall
pop
pop
sub
adc
test
aam
out
add
xor
ds
sbbb
add
push
jle
aas
dec
in
inc
pop
iret
in
mov
inc
incl
xchg
push
in
adcb
jne
mov
lret
shlb
push
imul
cltd
pop
mov
xchg
out
inc
xchg
jle
dec
dec
push
xlat
jnp
adcl
xchg
outsl
add
in
insl
jmp
xchg
imul
imul
jl
pop
add
mov
jnp
test
cli
or
add
data16
adc
pusha
arpl
filds
adc
lods
loopne
cmp
mov
xor
repnz
or
popf
or
popf
pop
hlt
clc
ror
scas
or
jle
popw
lds
lods
sub
sub
jle
call
mov
xor
and
loopne
and
mov
es
aam
cltd
adc
pop
push
out
hlt
lar
adc
jle
lods
insb
inc
mov
push
pop
mov
loopne
jge
fwait
push
sar
lods
fisubrl
scas
mov
lahf
adc
mov
stos
loope
bound
in
push
mov
inc
sub
and
gs
bound
and
jp
scas
adc
and
sub
loopne
sbb
subb
adc
mov
cmpsl
daa
cmp
jl
sarl
insb
mov
cli
sbb
inc
test
cmp
adc
fisttps
mov
ljmp
dec
nop
mov
sahf
adcb
bound
cmpb
imul
inc
int3
mov
cmp
ret
fistpll
add
jge
inc
int3
pop
dec
xchg
fiadds
pop
pusha
lds
iret
rolb
ljmp
sti
cwtl
lret
ficoml
xchg
xchg
in
cli
adc
adc
sub
ja
mov
icebp
mov
push
cmp
int
lods
push
clc
adc
jae
aad
push
ds
jo
popa
pop
lret
out
add
pop
mov
adc
fwait
inc
mov
mov
dec
mov
hlt
mov
addr16
xchg
in
inc
push
xor
inc
pop
test
imul
mov
stos
pop
mov
loopne
sbb
adc
js
mov
mov
test
das
add
mov
fcompl
xor
out
xchg
notb
mov
mov
xchg
sti
insl
or
inc
pop
push
lahf
xchg
adc
out
inc
aaa
cmp
pop
mov
cmp
adc
xlat
jmp
jg
cltd
mov
iret
jp
cltd
aad
mov
bound
scas
push
int3
imul
fadds
or
and
jle
insb
es
mov
mov
test
test
add
mov
and
cmp
push
and
out
pop
loope
fldcw
jecxz
in
mov
push
or
imul
inc
mov
push
inc
stos
jecxz
add
xchg
testb
loope
mov
xchg
es
imul
or
test
test
and
stos
push
call
xchg
mov
paddq
cltd
mov
sbb
mov
sbb
push
pop
dec
inc
test
fwait
es
xchg
inc
mov
addb
sbb
stc
movsb
pop
aam
and
add
inc
fwait
mov
repnz
cmp
loope
mov
jb
out
sbb
out
push
lods
push
les
and
in
shrl
dec
and
jp
lahf
icebp
outsl
rorb
add
pop
pop
cmp
add
lcall
push
cmp
sbbb
popf
mov
xor
arpl
cmp
add
stos
imul
mov
jmp
fs
lods
dec
sbb
jnp
or
ljmp
pusha
sbb
dec
dec
idiv
push
push
and
mov
leave
nop
decb
loop
add
push
sbb
test
push
stc
js
stos
push
dec
jne
jb
pop
shl
je
stos
jbe
and
test
or
sub
xchg
cmpb
pop
mov
stc
and
sbb
xchg
lds
pop
inc
jecxz
and
mov
lret
into
inc
clc
mov
pop
sub
lea
repnz
mov
sub
or
cld
icebp
xor
andl
je
ja
sub
pushf
dec
mov
jp
faddl
popa
sub
dec
js
mov
lock
cmpsb
dec
mov
iret
add
int3
xor
and
pop
inc
not
ficomps
sahf
jge
lahf
jb
add
shl
mov
mov
adc
lcallw
repnz
cld
lods
pop
mov
shlb
dec
dec
mov
mov
xchg
roll
jb
fld1
fcoml
inc
test
test
xor
mov
insl
cmp
out
push
pop
aas
push
inc
stc
hlt
lods
or
and
shlb
aaa
jae
pop
jne
xor
fadds
fidivrl
xor
loopne
ret
and
hlt
stos
dec
push
out
inc
movsl
rolb
shrb
inc
push
hlt
inc
popf
stos
repnz
xlat
dec
repnz
cwtl
rorl
mov
pop
test
imul
in
inc
sub
dec
inc
lea
out
lea
jae
pop
out
push
sbb
add
lahf
shlb
loopne
inc
pop
mov
cwtl
rorl
dec
insb
push
sbb
imul
addl
call
pushf
inc
cmp
enter
fdivrs
aaa
orb
jne
ret
test
lret
mov
xor
loopne
and
idiv
scas
push
into
pop
out
cwtl
call
mov
fnstsw
mov
adc
jns
rorb
mov
lods
jecxz
into
cmpsb
mov
cli
inc
pop
loope
aam
xchg
jmp
fs
fwait
cwtl
lods
sti
xchg
scas
cmpsb
mov
int
addl
daa
adc
imul
lcall
es
neg
gs
or
xchg
mov
and
dec
ljmp
pop
xrelease
iret
cmp
cmp
jne
adc
sub
repz
jno
dec
mov
sahf
xor
lret
sbb
ds
out
or
faddl
int3
dec
sbb
inc
jns
loopne
cmp
inc
mov
int3
fidivs
xor
in
sarl
les
pop
sahf
data16
aas
addl
or
xchg
bound
nop
dec
add
movsl
icebp
push
inc
xor
sub
xor
stc
xor
inc
sub
jo
jp
adc
mov
outsb
int
les
pop
pushf
sbb
adc
jle
mov
mov
movsb
mov
mov
push
dec
cmp
cmp
stos
jne
push
addr16
inc
call
sub
sub
xchg
iret
lcall
push
ss
pusha
in
mov
out
cmp
sub
xor
jbe
and
add
mov
add
jmp
mov
push
mov
or
or
xchg
sbb
adc
jecxz
adc
fdivs
dec
push
push
sbb
push
push
loop
test
test
jg
push
and
cmpsb
div
mov
jo
mov
std
and
ja
jb
xchg
mov
push
outsl
lock
xchg
shll
mov
in
jns
aas
push
sub
stc
fisubrl
pop
es
dec
cmp
xchg
mov
rclb
aam
popa
dec
sti
fidivl
imul
dec
testb
push
xchg
jle
outsb
xchg
bound
inc
add
dec
jl
inc
aam
jge
idivb
cmp
test
lock
push
add
jnp
mov
mov
jne
adcl
gs
jge
ja
push
jp
inc
mov
push
sub
mov
add
out
push
fiaddl
or
inc
mov
dec
sub
movl
popf
hlt
sbb
jne
mov
sub
sub
sub
lock
add
push
mov
xor
cld
push
les
or
lret
add
outsl
cld
lods
stos
push
pop
push
out
test
pop
test
mov
or
ja
mov
adc
lds
aad
add
ds
jbe
movsl
aaa
fcmovnb
out
shl
and
leave
adc
mov
lods
insl
sbbl
les
lds
push
faddl
jbe
sub
adc
fiaddl
xor
iret
cltd
fcmovb
push
jmp
push
xor
insb
neg
or
mov
push
add
pop
rcl
lock
pop
pop
je
enter
xchg
shl
adc
jp
adcb
stos
fildl
movsb
xchg
sbb
dec
or
lods
push
push
test
fildll
mov
sub
xchg
popa
outsl
xchg
inc
sub
sub
addr16
dec
lea
mov
dec
iret
sbb
sbb
xchg
shlb
sub
cmp
je
sub
test
mov
push
sti
movsl
cmpl
sti
pop
sar
dec
icebp
or
shll
mov
push
popa
repz
cmpsl
xor
cmp
inc
pop
cs
push
dec
xor
test
lahf
movsb
call
xor
sbb
cmpsb
mov
push
addr16
fdiv
out
add
lret
out
ret
stc
jnp
xor
test
into
ret
mov
adc
cmp
mov
subl
dec
add
popa
aad
stc
movsl
clc
inc
pop
inc
add
repnz
mov
jae
cwtl
int
push
pop
ljmp
sub
xchg
cmpsb
jbe
fs
jne
push
xchg
fwait
inc
adc
ja
pop
gs
pop
loopne
stos
ret
mov
cmpsb
xlat
imul
push
sub
pop
pushf
lock
fisubl
aad
pop
adc
cwtl
sub
mov
sub
sti
sbb
test
inc
ljmp
std
mov
mov
loopne
mov
fiadds
adc
mov
in
sbb
cltd
gs
iret
cltd
cld
pop
mov
lret
imul
xchg
xor
test
leave
cmp
pop
xor
fisttps
jb
sti
dec
mov
insb
adc
out
ficomps
mov
in
adc
cmp
out
movsb
aaa
insl
mov
and
sub
inc
mov
test
add
dec
lock
jb
pop
inc
sbbl
fdivr
outsl
roll
jae
cltd
cmc
xchg
jecxz
xchg
rcll
mov
repz
push
push
data16
dec
rorb
and
and
rol
movsl
sub
sub
dec
fidivl
sub
aad
ss
enter
out
in
hlt
pop
pop
xor
cmpsb
lods
mov
jb
adc
call
out
psllw
jae
insl
cmp
scas
pusha
test
sub
out
fdivl
push
and
mov
sbb
inc
sbb
sar
cmp
cmp
add
out
mov
mov
aad
sahf
mov
cld
xor
inc
fldcw
cltd
xlat
lret
sub
psrad
and
sbb
dec
stc
and
or
ja
iret
push
cmp
es
int3
pushf
in
mov
shlb
mov
xchg
pushf
dec
mov
iret
movsb
aad
and
je
ret
mov
push
xchg
add
lret
sub
fdivs
jl
es
fnstsw
mov
sub
pop
mov
iret
lods
fs
sub
sub
fmul
in
arpl
or
or
cmc
int3
pop
pusha
mov
in
lock
dec
repz
pop
setae
dec
or
push
add
dec
jmp
dec
loop
add
pop
mov
test
fs
clc
mov
iret
in
roll
nop
movl
push
jae
pop
cwtl
cmp
imul
cmp
fwait
fwait
lahf
jg
bound
xor
dec
gs
ja
jmp
inc
jns
les
xchg
mulb
add
mov
loopne
iret
cmc
aad
cmpsb
push
out
sbb
lret
rcll
pop
fwait
daa
iret
and
ja
push
mov
mov
fdivrs
jmp
push
shrl
data16
dec
rorl
push
xor
notb
shl
mov
out
xor
or
lods
ret
data16
repnz
jge
xor
mov
cmp
push
lods
mov
mov
pop
adc
in
and
mov
cmpsb
iret
jle
adc
bound
xchg
and
hlt
mov
rcrl
sbb
into
push
mov
adc
negl
int3
fs
out
rcrl
mov
ja
dec
jno
test
pop
jne
pop
lret
push
adcl
inc
inc
ja
mov
mov
dec
xor
add
cmp
add
inc
mov
int3
lret
rcr
cmp
mov
scas
mov
pop
int
ret
jne
and
aaa
shr
xor
pop
push
push
test
push
mov
push
xor
and
arpl
test
lret
fbstp
xor
pop
mov
in
stos
mov
insb
dec
xor
dec
xor
orl
aad
paddusw
fmuls
dec
and
lahf
mov
mov
into
xor
arpl
push
mov
iret
mov
push
cwtl
mov
sbb
jae
leave
push
inc
sub
fstps
btc
mov
ror
push
pop
gs
jg
cmp
mov
push
and
push
lock
lcall
sti
xor
pop
lods
popa
inc
popa
int3
dec
adc
out
hlt
insl
stos
sahf
andb
push
cwtl
jecxz
daa
jo
arpl
fwait
jae
shlb
je
test
or
pop
mull
lahf
jno
gs
lea
xchg
arpl
adc
mov
jo
fldl
imul
mov
aas
mov
mov
jnp
xor
sti
int3
js,pn
mov
stos
pusha
loope
jbe
jge
pop
addl
popa
test
stos
pop
jo
lds
jb
dec
stos
or
pop
sti
mov
sbb
xchg
mov
icebp
int
sub
or
jge
jnp
ss
lret
dec
hlt
mov
pop
or
jne
jne
pop
incw
fldt
and
jno
stos
inc
jb
push
hlt
xor
cwtl
mov
adc
mov
adc
jae
les
pop
sbb
movsl
sbb
xlat
clc
inc
mov
je
jae
adc
int3
cmp
loope
push
subb
cmp
jecxz
icebp
aaa
std
repz
mov
xchg
push
adc
or
cs
imulb
xchg
stos
das
mov
out
loope
xchg
and
data16
outsb
notb
xchg
bound
and
call
into
add
out
jae
add
movsb
mov
adc
cli
sub
xchg
jmp
idiv
or
rolb
jmp
call
sahf
xlat
ds
push
push
jl
sti
xor
push
push
in
test
inc
shrb
std
mov
push
and
push
add
cwtl
addb
cmpsl
inc
js
sub
cmp
out
repz
sub
iret
movsb
cli
mov
inc
es
gs
enter
ljmp
cmp
mov
pop
add
add
cmpsb
xor
sub
fwait
imul
or
push
and
into
xchg
jecxz
mov
mov
pop
or
jne
mov
addl
mov
rcll
xor
push
cmp
sub
sub
int3
stos
test
mov
sub
fidivl
aam
sti
fidivrl
push
repnz
hlt
dec
push
call
rorl
movsb
dec
lods
mov
loop
jmp
lds
inc
stos
cli
nop
popaw
out
jo
pop
or
push
imul
push
pop
cld
clc
or
rcr
stos
pop
test
pop
std
mulb
cwtl
lcall
loop
pusha
sub
pop
xchg
and
insl
pop
mov
ja
lods
xor
inc
mov
mov
or
ja
jg
mov
cmp
xchg
sub
ret
scas
xchg
push
sbb
xor
dec
rolb
call
or
jecxz
std
mov
xchg
xor
inc
jns
fstl
mov
or
jl
pusha
adc
inc
lcall
pop
stc
je
xchg
in
fdiv
mov
or
dec
lret
fidivs
lods
sbb
and
insb
or
dec
cmp
outsl
sbb
jl
jp
jns
mov
lea
test
sbb
push
push
xchg
push
lcall
mov
push
pop
and
arpl
add
rorb
jo
dec
inc
sbb
fnsave
xor
jns
out
shlb
lods
add
movsl
cltd
xor
aas
xor
jnp
cmpsb
rcrl
push
stos
shll
lret
adc
adc
arpl
mov
mov
in
clc
add
notl
mov
adc
fildl
ret
mov
int
cmp
adc
push
xor
imulb
icebp
data16
or
loope
sbb
or
cwtl
call
bound
lds
xor
pop
add
cli
stos
cmp
pop
adc
push
xor
xchg
mov
fs
mov
jnp
mov
gs
pop
sahf
push
rolb
jae
push
inc
cmp
and
push
loop
js
mov
lods
repnz
mov
dec
std
pop
dec
das
pop
in
xor
and
ja
rorl
lods
xor
mov
shll
int3
mov
test
pop
rcll
mov
sbb
stos
inc
notb
jb
jge
outsb
pop
outsb
xchg
lahf
aas
mov
movsb
push
adc
pop
les
push
test
xor
mov
fisubrl
xor
mov
fldenv
or
mov
mov
cld
lahf
mov
aaa
xlat
ficompl
fsubs
rclb
or
mov
mov
xchg
add
mov
or
dec
test
push
push
movsl
insl
arpl
jb
inc
test
sub
lds
nop
popf
adc
adc
xor
dec
lahf
lea
pushf
mov
out
adc
cmp
fadd
inc
xor
fstpt
jnp
lcall
mov
jne
fiadds
std
jl
mov
sbb
pop
push
xchg
cmp
xor
fs
sbb
and
movsl
stos
inc
loop
cld
orl
mov
jne
cli
fucomp
aam
cmp
outsb
fwait
and
jp
movb
push
insl
imul
repnz
mov
ret
test
mov
push
fisubl
adc
in
loope
out
xor
dec
cmp
aad
cmp
or
adc
popf
inc
lea
popl
dec
xchg
sub
add
in
addb
mov
cltd
hlt
mov
mov
ljmp
mov
cld
dec
sbb
jns
sub
jle
rcll
test
test
call
imul
xchg
movsl
sbb
or
in
and
insl
lods
pop
mov
leave
mov
jae
or
loope
pushf
add
leave
mov
pop
mov
iret
popa
aad
aas
dec
adc
insl
mov
jl
and
add
jg
mov
add
fildl
sub
jns
fisubrl
sbb
or
lods
imul
popa
test
or
cli
mov
push
mov
xchg
hlt
gs
and
cmpsl
inc
xor
push
and
jb
leave
clc
andl
mov
imul
out
mov
insl
sarb
jp
xchg
mov
jae
and
mov
xchg
jb
adc
pusha
pop
dec
adc
mov
adc
imul
cli
mov
and
frstor
cmp
stc
mov
cli
pusha
dec
fnstenv
js
ds
jp
mov
mov
push
cmpsl
pop
sub
sbb
add
leave
test
push
xchg
scas
sub
mov
xchg
shlb
xchg
and
mov
outsl
dec
pop
sub
mov
les
xlat
push
pop
adc
iret
add
mov
mov
fidivrs
pop
sbb
daa
push
adc
rcrb
mov
data16
cwtl
and
insb
inc
cld
cmpsb
insl
rorl
dec
jmp
mov
sbb
and
and
aaa
push
sub
mov
out
mov
jns
mov
std
test
popf
xor
mov
sub
xchg
sahf
outsl
dec
cs
lret
xchg
loop
mov
or
in
cmc
push
sub
mov
xchg
add
scas
out
clc
mov
mov
bound
dec
mov
aaa
jae
jp
lcall
or
fwait
test
mov
jno
mov
pop
mov
sti
subb
jmp
push
jb
inc
adc
sbb
or
xor
scas
shl
push
jl
and
push
cmp
fiadds
cmp
push
out
sub
xchg
loopne
fnstsw
xor
add
ja
push
fidivl
imul
int
mov
sub
jae
jge
les
mov
adc
xlat
call
mov
mov
ja
mov
insb
cmp
add
mov
stos
cs
cli
push
int
popf
inc
daa
push
sub
xchg
ds
dec
pop
loopne
jno
adc
ss
adc
repnz
xchg
lcall
outsl
outsl
bound
rcrl
push
ss
lods
imul
mov
push
mov
divb
pushf
mov
dec
roll
and
arpl
dec
jns
push
push
in
mov
xlat
outsb
cmp
outsl
and
sbb
cmpl
cmp
inc
das
out
inc
push
push
pop
ds
xor
rcr
push
shlb
mov
out
js
adc
dec
adc
mov
adc
sbb
lret
stos
adc
insb
push
in
jnp
sub
data16
out
ret
dec
xor
in
mov
push
sbb
sahf
lea
leave
push
shll
xchg
out
and
imull
inc
lret
sahf
pop
into
mov
hlt
mov
or
fistps
iret
pop
fcomps
cltd
imul
sub
cmpsb
js
andl
mov
add
dec
push
sbb
mov
mov
test
sub
dec
mov
adc
mov
lds
and
or
insl
xlat
into
sar
mulb
xor
push
in
jno
pop
stos
jmp
dec
push
jmp
dec
cmp
push
cmp
imul
adc
outsl
test
rorb
mov
and
push
xchg
dec
clc
xchg
push
xor
sahf
stos
sbb
pop
push
sub
insl
jle
add
xchg
aam
push
push
jbe
mov
test
lret
lock
popf
fwait
xor
jbe
in
pop
push
dec
rcr
adcl
mov
shll
in
sbb
cli
lods
mov
jae
in
xor
lret
jae
add
stos
dec
jae
mov
ret
cmp
mov
call
mov
in
nop
push
inc
dec
ja
fisubrl
addb
out
in
cmp
xor
out
dec
movb
fwait
xor
ss
jecxz
loop
mov
pop
xlat
clc
lret
stc
lods
loope
mov
pop
leave
shl
adc
xchg
movsb
movsl
popa
push
test
popa
xor
in
adc
fucomp
and
or
and
jae
jmp
adc
stos
inc
mov
outsb
fs
pushf
jo
pop
inc
mov
or
cld
stos
lcall
into
dec
imul
jl
sbb
cld
adc
loope
das
add
mov
sbb
xchg
jl
and
outsb
andl
stc
pusha
leave
ret
lret
ja
das
sarb
scas
sbb
out
push
push
mov
faddl
js
ret
call
xchg
mov
ret
sbb
test
pusha
fcomps
les
mov
add
cmpsl
dec
jmp
jne
movsl
rcrl
adc
pop
mov
mov
jecxz
sbb
mov
test
jle
inc
pop
inc
je
push
outsb
sub
data16
jge
data16
sub
aaa
mov
ret
xchg
and
inc
aam
stc
mov
sub
dec
adc
shll
data16
loop
push
aad
mov
iret
inc
fcmovnu
lidtl
jg
loopne
mov
lock
fsubrl
xchg
popf
pop
or
sbb
inc
jno
in
mov
xor
and
into
cmp
dec
or
pop
mov
jne
ds
ljmp
incl
mov
cmc
xlat
outsb
imul
test
data16
rcr
clc
jns
ss
shl
sub
popa
adc
test
sbb
inc
pop
shll
jns
pop
shlb
mov
mov
stos
cmp
ljmp
cmp
or
lods
repz
xchg
add
fwait
pop
add
mov
cli
jns
and
mov
loope
cmpsl
cmpsb
lods
sbb
clc
xchg
mov
call
sarl
cmpsl
fs
adc
add
sbb
mov
inc
jbe
inc
add
lock
sbb
js
dec
add
je
jge
or
mov
adc
mov
sbb
aaa
leave
adc
lcall
mov
subb
pusha
clc
je
mov
popa
inc
push
inc
adc
jecxz
xchg
mov
cmp
push
jp
sbb
add
push
mov
xchg
push
push
jne
sbbb
adc
clc
jecxz
mov
push
shll
arpl
jl
jmp
mov
xor
jnp
cmpsl
adc
out
shll
mov
xchg
data16
rcl
lods
cwtl
cld
dec
xor
adc
mov
and
inc
sub
pop
mov
sbb
sbb
lcall
test
add
mov
xor
enter
adc
movsb
dec
sub
push
cmpsb
in
and
or
loopne
push
dec
mov
jb
ja
out
mov
pushf
add
push
adc
cmpsl
sbb
jecxz
mov
cmp
mov
std
mov
push
aam
push
lods
pusha
sbb
push
push
lahf
cmc
cmpsb
lds
mov
decl
pop
sub
pop
jmp
xorb
sbb
inc
add
push
pop
addl
negl
ljmp
out
sub
inc
pusha
sahf
stc
cltd
cli
jp
pop
aam
mov
jbe
loop
lahf
test
pop
popa
stc
pop
jbe
scas
jns
mov
cmp
or
std
cmp
incb
xor
clc
xchg
mov
pop
xchg
ja
or
jmp
test
pop
pop
addr16
or
insb
les
popf
sbb
jecxz
cmp
sub
xchg
mov
sub
mov
xor
cmp
sub
sub
repnz
pop
and
pop
dec
ja
mov
mov
out
call
das
rcll
and
push
sti
push
mov
and
jo
xchg
cli
push
popf
sbb
lods
inc
pop
adc
jbe
push
inc
mov
add
negl
pusha
mov
add
rcr
mov
pop
cmc
test
mov
push
push
dec
ss
mov
scas
je
cmp
push
popa
or
xor
fdivp
int
loopne
addr16
pop
ja
imul
dec
pop
jns
fcmovnb
mov
push
jl
stc
je
in
push
pop
inc
inc
sbb
int
jbe
fidivrs
je
mov
scas
and
mov
mov
xchg
mov
inc
stos
mov
inc
inc
adcl
sahf
push
xchg
push
dec
lods
xchg
psubb
mov
sub
pop
aam
popa
adc
ljmp
push
mov
xchg
nop
out
push
ja
jle
xchg
inc
test
push
ljmp
out
fnstcw
lock
xor
inc
addr16
lods
sbb
fisttpll
push
push
xor
sbb
xchg
pop
data16
loopne
xor
add
dec
jbe
lds
lods
aad
cvtpi2ps
testl
into
faddl
enter
outsl
push
or
or
push
popf
int3
ja
pop
ret
cmc
and
and
outsb
or
jbe
inc
subb
and
or
jmp
imul
or
jo
jg
lahf
mov
scas
fmuls
xor
pop
jecxz
mov
push
ljmp
inc
adc
jp
dec
xor
movsb
les
rol
inc
jle
add
shl
sub
loop
outsb
jns
cmp
mov
pop
loopne
or
mov
mov
mov
jne
add
mov
cmp
test
pop
lahf
pop
lret
insb
pop
loopne,pt
out
call
aam
les
mov
ds
add
xchg
jmp
mov
pop
pop
sbb
xchg
aaa
xchg
sbb
xor
jb
adc
imul
or
mov
icebp
mov
test
fmull
fnsave
cmp
mov
sbb
popf
aad
xchg
sbb
pop
outsl
addr16
xor
add
je
inc
enter
je
lcall
or
daa
or
mov
dec
cli
rorb
repz
mov
lret
add
push
push
iret
ja
push
add
fsin
dec
cli
cmp
pop
add
mov
add
push
jnp
jl
push
push
jg
loop
sti
sub
xchg
push
movsl
push
xchg
cmp
jnp
ret
or
dec
cmc
push
dec
add
std
iret
test
xchg
movsl
shlb
int
jmp
and
js
loopne
mov
mov
mov
les
imul
fimuls
cltd
push
pop
loop
repz
inc
xchg
hlt
push
mov
add
xor
ficomps
cwtl
pop
jne
inc
pop
dec
fistpll
mov
enter
or
enter
dec
adc
mov
or
leave
aaa
cmpsl
ss
les
lea
add
push
std
lock
sahf
aaa
ror
mov
and
test
loop
les
sbb
or
mov
mov
das
xchg
cmpsb
inc
sbb
loop
aam
mov
daa
imul
xchg
cmpsb
sub
push
xor
cmovg
test
test
xchg
inc
xchg
adc
cwtl
imul
xchg
xchg
xor
inc
and
arpl
mov
icebp
add
es
pusha
xor
test
jno
push
sbb
push
xchg
jge
fdivr
paddq
in
cmp
inc
int
shrl
adc
aas
shr
xchg
xor
xchg
xlat
cltd
lods
iret
xchg
push
mov
stc
xor
call
addl
jmp
cld
cmp
jmp
fwait
outsl
mov
cmp
mov
push
or
mov
mov
xor
fs
fwait
icebp
popa
outsb
jge
xlat
jp
xchg
lods
mov
loopne
jl
cmp
insl
jb
mov
mull
or
add
xlat
xchg
imul
inc
out
adc
gs
adc
push
nop
sti
mov
xchg
xchg
lret
sbbb
mov
stos
and
push
xchg
add
xor
jb
or
lret
or
inc
mov
or
sub
adc
pavgb
lret
dec
mov
mov
out
js
mov
ret
aas
repz
popa
push
lret
bound
lahf
cltd
dec
add
dec
sti
jmp
loope
mov
mov
nop
mov
mov
push
outsb
rep
lods
xacquire
jmp
adc
push
cmp
push
les
jle
pop
jne
adc
add
out
dec
cmpsb
jbe
sbb
inc
push
xor
inc
popf
jo
jae
add
and
xchg
pop
pop
icebp
mov
daa
ds
dec
jae
pop
xor
and
scas
lea
scas
loop
jo
jp
lods
aam
push
scas
inc
and
dec
aad
insl
scas
jae
outsb
and
cmp
xchg
dec
push
or
lods
out
push
mov
mov
mov
mov
xchg
les
and
pop
test
xchg
arpl
pushf
idiv
or
dec
dec
and
mov
negl
push
push
jecxz
js
stos
dec
mov
aad
lahf
sahf
sbb
xchg
mov
adc
cs
jg
out
adc
mov
adc
pusha
shlb
lret
cmc
je
iret
mov
mov
ljmp
mov
jne
dec
call
loope
int
xchg
lock
jmp
out
cmp
pop
loope
inc
inc
adc
pop
pop
lock
ja
or
cmc
or
cmp
pop
sarl
or
ljmp
aaa
out
fisttpl
fs
hlt
andl
out
in
sbb
push
inc
xchg
xchg
call
mov
pop
dec
jmp
xor
orb
sti
sbb
enter
pop
or
lcall
imul
xor
jnp
out
jmp
inc
stc
inc
test
decl
leave
push
sbb
loopne
mov
gs
outsb
mov
cwtl
ljmp
aad
daa
ds
xchg
aas
push
xchg
push
dec
rclb
mov
push
das
js
jae
dec
mov
inc
lods
call
jge
gs
fsubs
shrl
test
or
jo
jae
mov
scas
mov
inc
into
call
or
xchg
es
sti
cmc
rclb
pop
in
jle
xchg
pop
pop
pop
out
out
ljmp
push
cmp
shll
repz
iret
or
leave
fmul
jmp
pop
pop
push
cmp
das
nop
out
sub
sub
cltd
xchg
xchg
ss
cmp
lret
jl
push
sarb
jl
xchg
pop
fwait
mov
es
mov
cmp
inc
cwtl
inc
mov
push
ljmp
movsl
or
push
call
pop
out
push
xchg
add
cmp
into
repnz
lods
ja
jl
cmp
jl
adc
xor
jecxz
dec
lahf
mov
or
push
or
stos
adc
cmp
sub
push
sbb
cmpsl
arpl
jnp
or
adc
inc
cmc
rcr
xor
dec
mov
dec
push
sbb
fdivl
das
jae
aad
sbb
pop
jmp
shlb
fucom
and
mov
jb
add
mov
movsl
hlt
sti
scas
jns
addb
xor
lods
mov
push
push
adc
and
xor
rolb
popf
or
call
cmpsb
xor
inc
or
pusha
mov
aaa
dec
mov
xchg
mov
mov
mov
insl
call
dec
scas
dec
xlat
mov
pop
add
sub
cltd
inc
cmp
ror
lahf
dec
jmp
mov
mov
push
mov
in
cld
fwait
jg,pn
mov
sub
dec
fsts
sub
push
xor
bound
in
and
inc
sbb
mov
es
or
jmp
int3
add
inc
mull
jmp
nop
xchg
int
imul
cmp
das
dec
dec
ja
rol
leave
out
sbb
les
fistps
clc
xor
mov
ds
xchg
xchg
mov
sahf
out
icebp
dec
rcll
push
pop
or
or
test
outsb
push
dec
test
xchg
in
mov
lods
inc
xlat
jge
mov
movsb
das
movsl
into
or
gs
inc
in
mov
stc
add
daa
cmpsb
lret
xor
xchg
in
std
and
dec
cld
and
mov
scas
ljmp
sub
call
fisubs
sub
push
mov
mov
and
sub
outsl
push
pop
jle
cmp
dec
add
repnz
pop
dec
shll
jns
push
dec
adc
int
or
jnp
out
cmp
pop
arpl
push
and
adc
xor
sub
fnsave
loop
leave
testb
jnp
aad
ret
jnp
lods
jbe
test
inc
mov
dec
stos
sub
fisubrl
cld
out
xchg
std
nop
and
and
mov
out
lods
or
lods
adc
mov
xchg
aam
popf
js
scas
aad
mov
sub
and
inc
fildll
fs
daa
bnd
jbe
mov
call
ljmp
cmp
outsb
pop
jo
xchg
mov
mov
adc
add
lock
pop
ja
and
pop
mov
or
cmpsl
push
mov
lds
push
aas
int3
ficoml
push
lods
mov
adc
push
pop
dec
mov
dec
jno
or
push
mov
mov
dec
xchg
iret
pop
sub
lret
push
fisttpll
inc
push
outsb
cli
popf
dec
je
sub
add
adc
jp
out
rcr
shl
sbb
cmp
jno
pop
loop
pushf
mov
bound
outsl
outsl
mov
outsb
cld
popf
insl
xor
testb
sbb
shrl
stos
aaa
cmpsb
loope
jg
jo
ja
lock
xor
bound
mov
js
pop
movsl
sarb
pusha
pop
pop
ljmp
inc
nop
cmc
mov
test
sbb
or
xor
incl
adc
mov
xchg
cli
out
push
rcll
popa
cmp
int3
sbb
dec
lock
into
stc
gs
popf
inc
push
pop
push
jno
mov
jl
test
or
loopne
pop
leave
inc
jmp
jne
addr16
ja
aaa
dec
enter
fs
push
sbb
mov
cmp
orl
movsb
aaa
aad
mov
rorl
sub
pusha
mov
ljmp
push
inc
das
mov
lea
mov
out
dec
lret
lock
lods
leave
dec
dec
out
inc
push
push
xchg
lret
add
and
adc
jbe
inc
add
test
pop
dec
push
and
clc
mov
mov
add
add
sti
pop
sti
cmpsb
sbb
push
in
adc
pop
jmp
jle
xchg
loop
popf
mov
icebp
cwtl
push
xor
or
xor
je
and
andb
lods
adc
or
fwait
fdivl
mov
out
xor
stc
in
stos
inc
mov
add
cmp
mov
xchg
shl
loopne
jbe
jns
xchg
mov
add
andl
mov
sbb
stos
mov
jl
pop
das
adc
shrb
dec
and
jno
mov
push
dec
adc
xchg
fld
mov
mov
fildll
je
and
and
sub
lahf
mov
adc
loopne
mov
insb
cmpsb
pop
mov
pop
pop
cs
pop
stos
dec
aam
pop
push
xchg
mov
iret
jae
mov
bnd
push
or
mov
jb
add
enter
push
push
es
add
cli
pop
sahf
xor
mov
aam
xchg
call
ja
loop
out
lods
test
add
push
out
lea
cmp
push
or
xchg
cmc
sahf
imul
inc
adc
mov
mov
xchg
pop
and
andl
sbb
arpl
mov
mov
push
cwtl
or
js
out
cmpsl
pop
jns
mov
movsl
or
gs
adc
mov
dec
mov
loopne
mov
mov
jne
int
cmpsb
int3
jmp
xorl
add
push
pop
adc
adc
xchg
imul
and
push
shld
mov
sahf
fwait
sbb
lcall
adc
loopne
stos
jl
xchg
pop
icebp
pop
cmc
inc
dec
cmpsb
pushf
mov
shrb
bound
roll
dec
add
cmc
mov
pop
lahf
mov
mov
inc
pop
sbb
shrl
int
or
mov
push
jbe
adc
cltd
fistpll
nop
test
stos
xor
leave
lods
add
dec
sub
and
jmp
out
inc
lcall
fmuls
xchg
shlb
jmp
or
cmpsb
push
shlb
sbb
mov
in
mov
scas
loop
ja
dec
call
movb
out
push
cmp
test
inc
cs
lret
out
mov
gs
test
dec
mov
ljmp
cwtl
repnz
std
std
and
dec
xchg
or
sub
xchg
addb
rcrb
push
test
mov
into
cli
jbe
dec
in
loopne
in
or
lods
sbb
arpl
enter
sbb
daa
xchg
or
stos
mov
sub
push
cmp
sub
sti
bound
cmpsl
je
imul
dec
cmp
sub
mul
scas
mov
in
les
sub
push
adc
daa
xor
xchg
outsb
mov
test
pop
adc
or
add
sbb
repz
xlat
sub
gs
sti
shl
sub
push
out
fldt
adc
jae
pop
je
lret
aam
lock
daa
test
insl
or
and
stc
mov
dec
sub
add
xor
cmpsl
adc
lahf
mov
push
sub
inc
pusha
roll
adc
dec
arpl
sbb
xor
xchg
les
shl
xor
mov
mov
xlat
cmp
mov
inc
cmpsb
inc
jae
mov
ljmp
and
addl
cmpsl
pop
bound
xor
ljmp
xchg
sbb
or
test
xchg
mov
inc
adcl
fldt
imul
sub
push
xchg
adcl
add
xchg
xor
adc
das
mov
cmp
in
cmp
jle
add
dec
fdivrl
stos
aas
enter
mov
inc
int3
dec
test
fs
icebp
push
mov
out
js
push
xchg
xor
testb
push
jbe
hlt
shll
add
test
dec
pushl
adc
jnp
jl
jmp
rorl
negl
shrl
lea
xchg
and
and
xor
mov
xor
push
mov
xor
push
mov
hlt
into
mov
scas
insb
dec
sbb
test
sahf
orps
and
sbb
int3
in
movsl
mov
shl
cs
push
fst
push
jg
dec
sti
les
pushf
ret
pop
pop
popa
jb
std
xchg
mov
les
in
sub
mov
sub
ljmp
mov
cmp
mov
push
shll
mov
lea
xor
repnz
xor
jecxz
pop
mov
mov
cld
mov
xor
jno
adc
inc
mov
adc
fcoml
dec
xchg
out
dec
mov
jl
jnp
lret
lods
pop
cld
push
insl
jecxz
xchg
jnp
inc
cmpsl
fdivl
xchg
int
and
pop
cmp
mov
mov
or
jns
mov
push
xchg
or
fcmovne
in
popf
fiaddl
int
dec
xor
mov
inc
stos
mov
jnp
clc
xchg
idivb
xlat
int3
rclb
test
mov
scas
ja
pop
dec
mov
insl
and
sub
xchg
sahf
mov
lock
pop
add
add
es
mov
icebp
mov
pop
lods
add
or
and
es
or
inc
sub
leave
scas
movsb
push
adc
jno
lret
xchg
mov
pushf
pop
in
cwtl
mov
pop
stc
sbb
lds
icebp
cmp
push
aas
cmpsb
push
dec
test
and
pop
jmp
jg
lret
cli
test
mov
xchg
push
xor
xor
imul
sbb
jp
aam
lahf
fsubl
dec
sub
mov
js
idivb
mov
adc
jno
cmc
fidivs
adc
ja
popl
cld
mov
or
jp
loope
daa
int3
ss
mov
mov
sub
or
cld
or
inc
dec
push
subb
xchg
testb
out
sub
ja
add
jae
mov
or
subb
push
pop
inc
inc
sbb
jb
sub
scas
cmp
xor
fwait
int3
mov
clc
lcall
fsubr
lahf
push
inc
std
sbb
mov
std
sub
popl
pop
push
leave
pop
outsl
arpl
aad
aad
mov
lods
add
dec
arpl
add
gs
and
jp
xor
jmp
out
xchg
adc
mov
aas
bound
push
jle
shlb
mov
pusha
inc
jae
add
js
sti
out
add
cmc
jg
lds
test
sbb
adc
in
jnp
in
push
and
imul
push
mov
sbb
ficomps
push
testl
loopne
mov
lret
fdivs
cmp
xorb
pop
shrl
jns
add
push
cwtl
pushw
rolb
aaa
inc
sbb
jb
je
mov
xchg
mov
mov
push
js
sub
pop
xchg
in
or
sub
mov
daa
sarl
stos
subb
push
ret
jnp
add
das
or
or
mov
stos
add
inc
movl
push
xchg
xchg
fisubrl
push
gs
jmp
adc
mov
test
aad
jecxz
add
sbb
test
xchg
inc
and
mov
adc
pop
or
fldt
mov
pop
nop
std
fadds
das
sub
movsl
pop
push
push
cltd
subb
pop
push
shr
mov
int
cwtl
sti
addb
mov
repnz
adc
ss
test
popf
jge
push
push
mov
outsl
push
dec
test
jo
push
xchg
jle
jmp
data16
hlt
ljmp
lahf
fucomp
in
sbbl
shll
ss
adc
jp
rol
sub
popf
cmp
cmpsl
adc
mov
mov
cmp
mov
fwait
cmp
aad
or
or
jp
push
xchg
in
or
fwait
out
mov
incb
js
and
sbb
mov
add
loop
sbb
popa
jae
aaa
jge
faddl
aaa
xchg
imul
test
sbb
cmp
ss
insl
loope
and
out
adc
ror
bswap
iret
jge
pop
daa
loopne
dec
mov
aad
push
mov
clc
scas
jl
pop
xorl
pop
lcall
mov
xor
cs
rolb
cmp
movsb
and
pop
stos
ss
jae
fidivrl
mov
mov
into
cmpsb
ss
xchg
popa
dec
sbb
std
mov
and
ret
jmp
cmp
push
js
cli
in
hlt
rorl
jmp
add
xchg
sbb
xchg
or
stos
movl
mov
ss
fldl
lea
nop
mov
push
xor
icebp
insl
mov
cwtl
stos
push
lea
xor
or
or
fsubr
addr16
add
lock
dec
dec
xchg
aad
in
push
test
mov
call
repnz
gs
in
mov
mov
enter
cmpsb
lock
mov
mov
mov
jbe
or
cmpsb
test
pop
loopne
stos
xchg
repnz
mov
icebp
and
xor
in
sbb
mov
mov
push
aaa
jns
inc
cmpsl
and
icebp
mov
cmp
xchg
in
cmp
and
push
and
pop
mov
popa
jp
imul
mov
out
xchg
scas
gs
xor
xchg
rolb
mov
or
xor
cs
sbb
imul
jl
adc
lods
xor
xchg
push
xor
jb
enter
dec
inc
lea
mov
cltd
push
push
jp
stos
cmp
cli
enter
sub
imul
and
lds
das
dec
lret
movsl
cmpsb
add
jnp
push
fistpll
xor
sub
cmp
out
bnd
fists
movsl
popa
push
loopne
mov
xor
jbe
sahf
sarl
frstor
xorb
mov
push
inc
movsl
mov
arpl
mov
jmp
mov
mov
push
scas
pop
clc
add
xchg
pop
mov
das
jno
or
fdivr
mov
rcrb
adc
mov
in
in
mov
popa
xchg
adc
pop
mov
mov
shlb
movsb
repz
scas
sbb
mov
fs
mov
test
mov
mov
dec
loopne
mov
ljmp
clc
arpl
sti
call
in
and
jo
mov
mov
aas
out
sub
outsb
adc
inc
ret
nop
adc
inc
js
inc
insl
aaa
hlt
repnz
test
movsb
icebp
mov
lock
pop
mov
mov
or
pusha
rorb
xchg
push
pop
in
das
push
or
aad
popf
and
mov
fdivl
and
lcall
lock
push
add
adc
mov
hlt
inc
pop
lret
jb
fiaddl
inc
xor
cld
cld
lods
and
jl
mov
dec
xor
mov
fbld
mov
fdivrl
subl
xor
mov
xchg
mov
mov
stos
in
and
and
call
push
cmpsl
jmp
flds
aaa
mov
imul
ja
dec
xchg
and
sub
cmp
in
mov
das
xchg
rcl
mov
push
sarb
dec
fs
iret
cmp
fdivrl
ja
cmp
test
repnz
inc
repz
push
loopne
sbb
fucomi
lock
fisubrl
movsb
ret
fisttpl
ss
mov
dec
test
les
push
mov
out
xor
push
ss
cli
movsb
cs
std
adc
jle
daa
mov
add
aam
outsl
daa
xchg
insl
ss
cltd
repz
adc
adc
sbb
movsb
out
popf
mov
xchg
mov
das
enter
das
mov
cmp
call
sbb
and
add
js
aas
xlat
or
stc
cs
cli
faddl
inc
arpl
xchg
lods
xor
mov
push
fs
add
sub
xchg
lret
dec
cmc
das
inc
mov
pop
and
in
dec
sti
notb
sbb
mov
mov
scas
ret
jns
or
inc
adc
aam
jo
xchg
add
jne
mov
add
ljmp
fnstcw
aad
jb
aad
int3
mov
cmp
xor
js
sahf
and
jo
popa
xor
pop
xchg
push
cmp
into
push
lods
ret
jns
insl
sbb
xor
dec
lret
adc
inc
jnp
mov
mov
sti
test
les
fbld
int3
xor
or
add
and
inc
cmp
jmp
jle
call
fistpll
shll
aam
or
data16
rorl
adc
cmpl
fst
mov
pop
out
into
and
sub
jmp
xchg
mov
loopne
test
mov
mov
mov
and
sub
pop
mov
cmp
push
xchg
pop
xchg
add
aad
test
lret
push
in
int
test
and
fucomp
xchg
jno
mov
cmp
cld
cld
lds
into
in
test
out
and
std
add
adc
clc
clc
cmpsl
mov
insl
mov
gs
shll
add
inc
adc
pop
sub
repnz
iret
jb
and
test
fimuls
pusha
gs
cli
xlat
pop
jle
fcmovnu
je
outsl
xor
popf
mov
aas
mov
popa
jp
cmp
push
fistl
mov
push
sub
idivb
jecxz
fistl
pop
xchg
dec
mov
pusha
push
mov
hlt
lea
pop
rcl
daa
mov
scas
popa
sarl
push
les
inc
xor
loope
incl
jo
mov
je
icebp
imul
cmpsl
insb
loop
sub
adc
jmp
lahf
fdivrl
inc
aaa
mov
gs
jg
repnz
jbe
addb
fwait
pop
push
pop
fldt
pop
ja
dec
dec
lock
fimuls
dec
jmp
testl
hlt
out
mov
lock
xchg
ret
les
and
add
lds
int
mov
cltd
enter
mov
dec
or
fld1
cld
dec
incl
push
dec
enter
pop
and
cmp
ficoms
imulb
pop
or
scas
dec
mov
out
inc
xor
icebp
mov
push
and
mov
mov
repnz
cmp
insb
xchg
sbb
sub
mov
fnstsw
jb
pusha
mov
add
mov
fisubrl
adc
mov
ds
int3
js
mov
inc
jmp
pop
shll
addr16
arpl
add
test
add
jmp
shlb
xorl
xlat
mov
inc
mov
mov
clc
in
and
xchg
dec
xlat
xor
sarb
cmp
jo
mov
xchg
xor
das
mov
mov
stos
mov
cs
push
call
lret
js
push
daa
in
lods
jl
dec
adcb
adc
ljmp
repnz
bound
inc
add
inc
in
popa
stc
jge
xchg
insl
loope
scas
xor
outsb
cwtl
push
popf
les
call
pop
lods
dec
xlat
sahf
out
jle
ja
add
inc
xchg
inc
cmp
mov
dec
cld
push
icebp
test
lods
addr16
pop
ret
test
add
xchg
gs
sbb
sub
lods
sub
fisttpll
sbb
jg
mov
push
enter
fs
dec
inc
sub
and
sbb
mov
sbb
push
sbb
mov
mov
mov
das
popf
mov
scas
mov
out
sub
mov
mov
xchg
gs
loope
bound
lods
sbb
shrl
clc
cmp
in
mov
jae
iret
mov
test
popf
cmpsl
in
mov
shrb
push
or
les
pop
mov
cli
cwtl
les
or
push
jle
and
out
cltd
jmp
push
adc
movsl
jmp
mov
xor
cmc
xor
mov
xlat
stos
inc
adc
push
stc
sub
int
fnstcw
add
xor
aaa
sbb
add
ds
mov
inc
movsl
int3
cltd
xchg
cltd
fldenv
shrl
insl
insb
shll
jae
mov
movl
cmp
fucomp
aaa
repz
and
jne
ret
ja
nop
cli
into
fidivrs
add
popa
sub
mov
data16
xor
push
and
mov
mov
popf
mov
lret
pushf
mov
cmp
push
or
pop
ss
xor
in
and
insb
into
jb
add
pop
jbe
imull
push
test
js
or
inc
in
pop
loop
mov
xor
scas
push
mov
inc
movsl
outsb
shlb
shrl
xchg
lret
or
mov
ljmp
push
xchg
mov
dec
xchg
inc
inc
insb
xor
test
stc
inc
and
push
imul
add
aad
cld
outsb
insl
add
cmp
aad
data16
dec
and
push
jg
lods
pop
mov
cmpsb
xorl
pop
mov
xchg
xchg
jae
daa
in
repnz
rdpmc
cld
test
popf
dec
scas
and
inc
sub
cmp
test
imul
xor
inc
pop
mov
add
lock
cwtl
test
adc
int
inc
mov
clc
movsb
loopne
ret
mov
into
pop
gs
sub
adc
dec
and
lcall
add
insl
jns
mov
das
cwtl
xchg
pushf
popa
xor
adc
cmpsl
and
int
ror
jle
xor
cmp
daa
in
push
mov
stos
xor
int3
addb
shll
xor
std
dec
inc
jp
out
aam
mov
cmp
adc
sti
adc
and
pop
adc
add
cmp
je
xchg
lahf
xlat
xchg
outsl
dec
sti
adc
sbb
jmp
test
xchg
bswap
test
loopne
sub
mov
outsb
cmp
out
mov
divl
dec
inc
mov
mov
pop
mov
add
pop
push
cmp
test
shr
and
adc
sbb
popa
sbb
roll
aas
aas
sub
lret
cmpsl
or
mov
stc
fs
sub
xchg
scas
or
sbb
inc
mov
cmpsl
inc
or
pop
mov
push
in
mov
jmp
stc
hlt
xor
out
cli
inc
rcll
orb
and
push
into
in
cld
mov
in
enter
nop
xor
xor
adc
out
push
sub
dec
xor
das
dec
dec
push
hlt
cmp
jp
cs
and
sub
int
sub
aam
add
mov
inc
lret
xchg
sub
scas
jo
loopne
lret
out
mov
fisubl
out
addr16
mov
insb
std
jbe
ds
pop
lds
or
pop
fisttpl
sbb
xor
dec
pop
dec
lahf
mov
or
test
aas
sbb
pop
xor
std
movsb
jbe
push
cmpsl
mov
xchg
pop
push
or
push
jno
lcall
sbb
mov
imul
movsl
inc
rcr
inc
rolb
jns
or
outsl
cld
mov
and
movsl
or
pop
jns
cwtl
ds
sbb
xchg
push
mov
and
lods
aad
enter
cmp
test
push
lods
or
inc
icebp
es
je
cmp
das
fcoms
sub
fidivrs
mov
cmpsl
add
adc
mov
mov
movsb
xchg
movsl
sub
rorb
inc
nop
pop
fnstenv
leave
daa
loop
adcl
adc
fiaddl
inc
mov
push
daa
leave
and
stc
sub
nop
xor
out
dec
cmp
lods
xor
notb
roll
mov
ret
stos
andb
lret
mov
andb
bound
jge
cmpsl
jmp
call
inc
mov
dec
test
pop
lock
ds
int
sahf
lds
cmpl
pop
pop
clc
pop
sbb
loopne
jmp
adc
loope
pop
in
repz
dec
or
fsubrs
sub
sbb
add
jns
sub
outsb
hlt
or
inc
ja
and
lcall
dec
jbe
xchg
scas
out
add
shr
dec
mov
and
and
cld
addr16
lahf
dec
mov
xlat
cvtpi2ps
inc
jne
mov
cltd
dec
push
cmp
rolb
popf
push
push
outsl
push
mov
push
xchg
stos
sbb
loop
mov
and
cmpsb
out
sbb
xchg
xchg
test
inc
jns,pn
iret
rcrl
add
push
dec
cld
jl
lods
xchg
mov
xchg
add
outsb
rcrl
neg
leave
lcall
lods
xor
fdivp
fwait
add
cmpsb
and
push
xchg
outsl
push
pop
push
insl
jnp
or
push
xor
int
cltd
jg
jbe
push
bound
out
mov
pop
es
and
inc
sahf
or
jae
popf
daa
mov
mov
jg
mov
push
sti
sbb
add
lods
sbb
loope
push
mov
mov
xor
mov
push
sarl
or
and
inc
sbb
adc
and
dec
stos
xlat
cmpsl
cmpsb
vpsubsw
pop
push
push
pop
ljmp
and
xchg
aas
xor
subl
jmp
pop
mov
push
add
adcb
call
xor
sub
enter
mov
adc
cmp
mov
lcall
mov
inc
popf
push
ds
xor
inc
or
jae
mov
dec
fsubrs
stc
rcr
fs
jo
jp
push
aam
cltd
mov
xchg
stos
push
and
dec
test
jnp
dec
stos
rcrl
jne
fdivrs
shl
xchg
sbb
pop
fcmovu
xor
cwtl
call
xchg
push
cmp
fwait
lods
xor
cmp
int
mov
lahf
push
sub
in
pop
imul
scas
ds
pushf
cmp
push
int
scas
aas
iret
aaa
add
cld
push
mov
mov
das
push
cmp
std
imul
int
mov
bound
or
mov
lods
lds
jmp
negl
js
sbb
sysret
mov
jo
dec
adc
dec
jnp
out
or
iret
sub
stos
xlat
pop
cmp
xorb
and
fsubrl
leave
js
gs
sub
mov
out
or
pop
ret
mov
daa
or
fisubs
inc
pop
daa
lods
ja
push
das
into
movsl
insb
sbb
push
daa
adc
xor
adc
push
xchg
movsb
push
fstpl
mov
cltd
push
mov
loope
sub
aad
or
sub
mov
std
ljmp
popf
popf
int3
fwait
cmp
push
outsb
xor
lods
ret
ljmp
lret
ret
stos
clc
mov
dec
iret
cmp
cwtl
shll
insl
and
or
inc
call
adc
or
rclb
adc
sahf
jns
shl
mov
loopne
and
lds
sbb
inc
out
sbb
cmp
jnp
mov
inc
push
ret
sbb
ret
cmp
adc
pop
dec
es
dec
sub
adc
fisubrl
shlb
mov
push
inc
mov
loope
movsl
addl
insb
fiadds
or
data16
shll
xor
loopne
mov
mov
jge
cmpsb
test
sub
lods
add
inc
arpl
out
push
scas
xorb
testb
jl
cmpsl
or
cs
adc
mov
jbe
jo
cli
adc
push
enter
mov
cmpsb
fwait
int3
pop
cmp
xchg
outsb
stos
pop
xor
cmp
xchg
out
add
or
xchg
lahf
cmp
sbb
rol
loope
ds
bswap
sub
ficomps
imul
shll
mov
adc
cmp
rorb
fisubs
adc
mov
push
mov
mov
push
cmpsl
jp
sbb
or
jle
push
sbb
arpl
testl
hlt
loope
loope
fldl2e
jb
in
push
cmp
and
add
jg
call
or
out
rcll
xlat
mov
cltd
int
add
jle
and
movsb
lock
ret
push
push
out
mov
cmc
add
aam
stc
enter
fisubrl
mov
adc
and
dec
pop
lret
cli
push
mov
test
mov
xchg
fdivr
in
std
orl
push
xor
jo
mov
jge
dec
cmp
stc
mov
out
mov
lock
sarl
insl
es
push
ffree
inc
jb
mov
mov
ret
push
data16
mov
dec
dec
xchg
jnp
in
clc
rep
add
mov
out
test
fmull
orl
dec
mov
mov
jecxz
daa
sub
and
fcoms
xor
frstor
mov
daa
inc
jbe
or
and
fisubrl
dec
mov
push
xchg
fs
fsubs
pop
lods
add
xor
sbb
pushf
sbbl
stos
push
lret
sbb
push
lds
jb
es
cmp
scas
mov
adc
or
push
cmc
sbb
lcall
nop
pop
sub
movsl
mov
xor
inc
dec
in
xchg
sbb
imul
loop
jmp
sub
enter
test
loop
or
cmp
mov
dec
adc
lock
icebp
sbb
popa
call
ljmp
mov
sub
iret
adc
add
mov
adc
sbb
movsb
dec
rorb
push
lods
cmp
sbb
cmp
shll
fmul
jnp
out
repnz
vminsd
lret
jns
in
jecxz
pop
jo
add
in
mov
jmp
gs
mov
jno
pop
loop
loop
push
adc
dec
out
or
mov
inc
and
fwait
xchg
les
push
fmulp
push
pop
lods
pop
cwtl
mov
cltd
add
dec
jno
jne
xchg
in
lahf
xor
xor
mov
dec
int
std
movsl
cmp
xor
sbb
movsl
dec
lret
cs
xor
adcl
jno
push
or
gs
sahf
in
xchg
lock
push
mov
jp
test
int
jo
push
cmp
scas
cmpsb
mov
jp
and
ljmp
aaa
jge
jnp
jmp
push
mov
into
sub
lea
ror
mov
mov
enter
lahf
jge
adc
and
icebp
enter
add
jp
jo
stos
lahf
xor
addl
insl
imulb
gs
test
test
pushw
shrl
add
inc
mov
nop
and
fwait
jnp
pop
pop
outsl
sub
cli
mov
push
cmp
loopne
scas
jge
data16
sbb
hlt
dec
fldenv
pslld
loope
clc
test
cmpsl
xor
addb
mov
test
or
mov
cmp
cmc
leave
jae
mov
or
jb
sub
aam
cwtl
enter
add
dec
cmp
das
sub
mov
lret
inc
jbe
out
jecxz
sub
mov
outsb
push
popa
int3
in
and
adc
cmp
stc
divb
fwait
or
loopne
loopne
pushf
jns
xlat
xchg
xchg
insb
shlb
cli
xchg
test
clc
fsubrl
mov
pusha
pop
mov
inc
lret
outsb
imul
outsb
mov
jecxz
push
push
add
bound
dec
mov
lcall
sti
inc
jae
ret
dec
repnz
sbb
sbb
mov
mov
mov
pop
dec
cltd
inc
xlat
mov
mov
sub
popf
lods
ljmp
adc
jne
xlat
mov
lret
inc
sub
push
inc
jmp
lahf
sub
inc
sti
jne
lea
sub
cs
push
jo
je
stos
fwait
push
xchg
or
xor
mov
mov
push
dec
adc
xchg
aaa
pushf
pop
movsl
insb
shrb
aaa
clc
shll
negb
faddl
cmc
adc
jb
cmpsb
push
sub
cmp
adc
fisubrl
testb
loope
cld
cmpl
xor
inc
push
addr16
push
movmskps
shlb
mov
ret
shl
movsl
out
int
rcrb
fwait
fidivl
orb
adc
jno
and
cmp
cmp
add
lret
xchg
dec
or
int
push
or
test
add
subb
dec
dec
or
inc
push
dec
ficomps
jbe
cli
pop
cmp
loope
stos
push
add
adc
dec
fadd
inc
or
xor
xor
xor
aam
mov
or
fcom
push
mov
scas
dec
ret
js
ljmp
movsb
sqrtps
les
dec
lods
adc
inc
aad
aas
push
adc
jno
jb
mov
leave
ret
sarb
loope
jle
sbb
mov
mov
or
scas
lret
mov
daa
push
mov
sbb
jnp
jle
nop
pop
xchg
xchg
inc
je
push
sub
jl
jl
cltd
fidivrl
inc
push
sahf
loop
push
mov
pop
jne
pop
jmp
mov
inc
ljmp
popf
pop
fimull
sarl
in
dec
mov
int
hlt
addb
cmp
and
pop
popa
push
mov
jo
push
mov
lock
repz
sub
sbb
les
mov
fisttps
cltd
addr16
and
test
xor
jbe
push
inc
and
dec
dec
cmpb
lahf
movsb
xchg
xchg
sahf
sahf
push
test
or
xchg
or
and
pop
outsb
jecxz
bound
sbbl
add
push
ret
jno
jnp
jns
sub
inc
xlat
gs
aam
mov
adc
out
dec
scas
clc
cmp
xor
idiv
sub
cmp
ds
test
mov
nop
daa
jb
mov
and
leave
inc
sub
aaa
inc
into
jp
fs
nop
or
push
cmp
sarb
xor
insb
stos
push
jno
mov
scas
inc
xor
push
push
lcall
inc
mov
mov
cmp
popaw
dec
sbb
nop
dec
xor
add
lock
test
in
aad
xor
push
pop
jp
and
pusha
jne
ja
push
inc
mov
out
hlt
lcall
clc
mov
dec
repz
xor
xor
js
addr16
mov
clc
cmpsb
jmp
fcmovb
and
and
inc
into
ret
adc
dec
push
lea
xor
xchg
mov
sbb
mov
mov
stos
sbb
cmp
stos
sbb
dec
in
movsb
das
or
lahf
lods
and
jle
in
das
cmp
xchg
sahf
fimuls
push
test
ret
lods
sarl
jge
sbb
ljmp
scas
add
adc
adcl
lds
pop
sbbl
lods
cwtl
cld
cmpsb
outsb
mov
mov
cmp
psrad
sub
add
add
xor
enter
dec
xor
push
sbb
and
fnstenv
lret
stos
mov
mov
inc
outsl
or
arpl
lret
inc
lcall
or
mov
in
imul
dec
into
test
outsl
mov
sbb
std
gs
cld
popf
jbe
lods
incb
mov
add
mov
and
in
and
sbb
xchg
lahf
adc
mov
rcll
sbb
lods
dec
inc
imul
sahf
sub
push
icebp
add
sub
stc
mov
mov
jb
incb
push
cli
rolb
mov
out
cld
mov
test
xchg
push
lds
cwtl
and
cmpb
pop
pop
in
call
mov
add
loopne
mov
xchg
pop
cmpsb
xor
test
ret
stc
incl
xor
and
mov
add
dec
inc
sahf
in
sbb
hlt
push
js
mov
adc
dec
inc
jo
sbb
sub
mov
jle
inc
mov
xchg
dec
and
sbb
fistpll
mov
lret
cmp
or
or
cmp
inc
lahf
mov
je
sahf
push
mov
sub
and
es
pop
xchg
movsl
cmp
and
fisubs
adc
stos
ret
mov
mov
sub
lods
cmp
scas
mov
data16
mov
cmp
push
push
orb
repz
rclb
iret
sahf
xor
xchg
add
mov
mov
mov
cmp
mov
jnp
sub
sbb
mov
fs
adc
dec
in
mov
ret
and
iret
fwait
and
jg
mov
add
js
mov
or
dec
mov
mov
mov
pop
mov
fnstenv
mov
push
stos
sub
push
adc
or
and
and
xchg
inc
es
xlat
xorb
push
inc
pop
sub
fmuls
pushf
setne
mov
and
inc
sub
sub
fs
inc
inc
dec
push
or
stos
test
mov
push
pop
test
cwtl
dec
cmp
ror
inc
push
mov
cs
fadds
lods
add
pop
xor
addr16
push
inc
jmp
scas
jns
sbb
clc
xchg
mov
pushf
in
or
jmp
cmp
seto
leave
loope
adc
mov
mov
push
daa
leave
imul
aas
add
pop
push
jbe
jge
jle
inc
addr16
mov
mov
mov
je
sub
inc
mov
mov
movb
mov
push
and
push
addb
pusha
stos
jmp
mov
xlat
or
js
imul
ljmp
push
sub
xor
adcb
out
cld
or
jne
jns
mov
inc
cmp
cmpsl
push
cli
jge
lret
jbe
fsub
and
mov
lock
jl
inc
add
mov
fidivrs
loop
in
mov
jmp
aam
rorl
ljmp
jg
mov
cli
mov
in
pop
push
outsl
pusha
iret
aaa
pop
mov
dec
jns
outsl
cmp
in
xor
jmp
push
adc
pop
pop
stos
xchg
in
call
lcall
jnp
pop
mov
mov
dec
mov
loope
adc
aam
scas
push
jo
mov
ss
jmp
ljmp
movsl
test
cmp
popa
mov
pop
pop
imul
hlt
std
stc
mov
popa
mov
arpl
rolb
aas
repz
adc
xchg
insb
mov
lods
into
shlb
stc
rcr
push
sub
pop
sub
sbb
mov
push
sub
sub
adc
jge
pop
es
cmp
ss
jle
es
cmp
jl
aad
shlb
cmpsl
test
mov
pop
xchg
mov
cmp
cmp
pop
call
test
mov
es
sub
dec
rcrl
mov
pop
lret
out
mov
dec
into
mov
pop
iret
in
sti
inc
hlt
das
testb
jmp
in
pop
xchg
ror
aas
cmp
pop
cmpsl
jg
xor
sub
push
aad
add
daa
pop
add
lods
mov
aaa
in
cmc
repnz
inc
into
icebp
stos
jecxz
and
jne
inc
xor
sti
sub
sahf
xchg
iret
dec
rorb
pusha
test
mov
fnsave
cmpsb
lods
sarl
hlt
xor
add
sub
xchg
xor
into
add
jl
lret
iret
sbb
add
push
out
pushf
xchg
mov
adc
xor
mov
sbb
loopne
xor
jmp
jg
or
jnp
ret
fidivs
pop
stos
add
inc
mov
sbb
mov
popf
pop
push
loope
xchg
add
jp
out
xor
jo
mov
adc
or
enter
stos
cmpsl
fmuls
ljmp
adc
adc
mov
hlt
mov
out
inc
sbb
sti
leave
push
scas
xchg
adc
lret
insb
inc
lcall
xchg
sbb
inc
cs
in
adc
inc
xchg
das
cmp
aas
lret
aaa
sbb
xor
add
push
add
pop
fsubrl
call
push
nop
jne
dec
fs
call
xor
mov
bound
or
jae
cmp
mov
mov
iret
lock
dec
sahf
fsubs
rcll
es
inc
ds
imulb
pop
test
jbe
out
std
mov
lret
xor
lea
inc
scas
jg
mov
jle
cwtl
and
sub
adc
jne
push
stos
imul
inc
mov
roll
and
test
subl
ljmp
mov
lahf
push
or
ja
xchg
scas
sbb
scas
ja
xor
movsb
jae,pt
xchg
aam
pusha
jmp
data16
mov
jecxz
xchg
into
xorb
pop
adc
out
mov
jge
push
dec
sbb
push
and
lods
dec
inc
adc
add
and
mov
push
mov
shrl
jno
push
dec
fiaddl
cmpsl
adc
add
ljmp
and
inc
stos
push
cmp
fidivs
xchg
lock
or
mov
mov
lret
xor
rcrl
push
cmp
lods
test
sbb
sub
outsb
and
fdivr
pop
mov
imul
jnp
lea
test
xlat
ret
dec
lret
ljmp
cld
xchg
pop
outsl
mov
or
add
add
shl
add
jae
je
push
jno
clc
dec
sbb
or
les
jecxz
sub
dec
push
adc
fistpll
sub
xchg
push
mov
repnz
add
lock
sub
push
popf
call
add
fisttpl
and
lret
in
hlt
push
cmp
xchg
pop
cmc
cs
lcall
xor
imul
mov
xor
xor
adc
fs
mov
idiv
leave
pop
fldenv
out
test
pusha
mov
xor
push
fisttps
filds
fisttps
shlb
insb
repz
std
fiadds
adc
loopne
loop,pt
mov
jmp
cli
xchg
popa
fildl
mov
popf
fbld
ljmp
mov
lret
in
fs
jmp
std
mov
push
jnp
or
out
adc
add
cmp
xchg
aam
push
lods
dec
add
mov
cmpb
dec
jb
arpl
push
mov
call
add
push
fimuls
ss
jo
mov
sbb
push
stos
scas
push
pop
push
xchg
stos
pop
cwtl
add
sbb
pop
add
insl
repz
popa
stc
shlb
adc
jbe
insb
jnp
in
test
lods
fisubrl
jp
push
xor
mov
or
hlt
mov
movsl
xchg
outsb
lret
add
sarb
cwtl
std
hlt
enter
sbb
aam
push
je
push
mov
fildll
div
inc
std
pop
cmp
das
adc
dec
pop
sub
ret
pop
adc
xor
inc
movsb
in
nop
cmc
lret
pop
sbb
insb
lds
stos
sarb
inc
nop
inc
mov
fcompl
shl
out
daa
xchg
sbb
mov
mov
lock
push
fbld
lret
mov
arpl
das
out
das
movsl
push
jl
movsl
cltd
mov
shrb
adc
ds
int3
sbb
ffreep
mov
pop
adc
cmpsb
xchg
in
into
repnz
inc
pop
in
mov
adc
mov
scas
lahf
mov
mov
outsb
mov
jbe
aam
data16
out
push
sbb
sub
insb
rclb
jbe
pop
add
sbb
in
bound
jp
pop
sbb
dec
cmp
jge
jle
ja
jl
daa
inc
incl
outsb
xor
push
cmp
pop
push
daa
bswap
out
sub
mov
sbbl
pop
fisttpl
jp
push
pop
loopne
cmpsl
movntps
cmp
dec
out
cld
cmc
mov
add
push
data16
xor
or
mov
pop
js
pop
mov
cmp
insl
imul
fiaddl
sub
pop
mov
and
dec
out
fnstenv
cs
adcb
jmp
jecxz
inc
and
rcrl
cmpsb
push
pop
xchg
and
xchg
mov
test
orl
inc
popa
or
mov
or
mov
enter
daa
fistpl
shlb
in
mov
and
leave
jno
and
add
mov
je
cld
sbbl
fsubrs
mov
add
into
fldl
out
ret
add
adc
lock
das
push
sbb
cmp
jo
stc
stos
push
loope
or
in
mov
cmpsl
ds
into
test
ds
test
inc
nop
xor
cmpsb
jb
push
imul
aad
dec
ds
cmp
cmc
mov
aaa
and
outsl
sub
and
aam
mov
mov
addr16
repz
lret
xor
lret
scas
push
mov
add
pop
enter
out
jmp
mov
movb
stc
out
sub
push
inc
jmp
incl
fstpl
test
add
addb
or
repnz
or
dec
jmp
jo
dec
js
cmp
mov
outsb
xchg
mov
sub
inc
pop
push
cld
push
xchg
sub
jle
cmp
sbb
sarb
scas
dec
lahf
cmp
leave
add
cmpsl
sbb
gs
lds
push
mov
add
xchg
and
andl
sub
imul
test
imul
xlat
jmp
push
xchg
or
adc
xor
or
mov
pop
push
fnstcw
adc
xchg
rcr
enter
leave
fdivl
lods
adc
adc
mov
test
sti
dec
in
sub
je
jp
cld
ficoml
dec
and
mov
mov
popf
into
and
cmp
xor
test
or
jb
jns
dec
inc
in
cld
std
loope
sbb
shrb
dec
xor
pushl
in
movsl
jg
jle
push
sarb
les
sub
cmp
cwtl
xchg
outsl
clc
pop
cmp
mov
or
add
xchg
mov
cmp
sti
or
mov
aaa
xchg
mov
dec
cmp
push
inc
scas
mov
dec
xor
mov
jp
outsl
pusha
fsubrl
hlt
fisubrs
mov
mov
fists
lds
cmp
loop
addl
shll
imul
test
add
jns
xchg
pop
ret
sahf
inc
sbb
xor
push
mov
mov
daa
adc
pop
scas
jo
xor
xor
dec
icebp
xchg
adc
push
aad
leave
clc
push
dec
xor
mov
dec
xorl
lret
ret
xor
jns
mov
test
shrl
lods
pop
leave
add
loopne
push
sbb
pop
fcmovne
pusha
loop
fstps
lea
pop
aaa
enter
fisubl
notl
mov
jo
dec
idivb
flds
dec
aam
mov
std
sbb
imulb
aaa
xor
jno
out
loope
movsb
jecxz
inc
mov
movsl
xchg
les
lds
push
sbbb
or
or
mov
pushl
dec
push
daa
out
fistps
lods
lods
shrb
mov
inc
jne
imul
cwtl
loope
jae
fnstsw
xlat
out
stos
daa
cwtl
xchg
pop
add
ja
push
rcrl
pusha
jmp
mov
call
call
aaa
daa
or
xor
jae
push
xor
fnstcw
pop
mov
dec
inc
xchg
mov
mov
popf
jg
sbb
mov
push
add
pop
mov
shlb
shl
dec
jge
cld
repnz
orl
popa
fistpl
cmpsl
jg
or
enter
test
sub
mov
or
cmp
aad
lock
sbb
loop
mov
sub
fcmovne
gs
push
dec
into
hlt
sub
push
rolb
cmc
cmp
inc
fcmovnb
out
pusha
push
cmp
les
mov
jge
imul
sbb
fstpt
mov
out
push
mov
mov
test
mov
jmp
je
hlt
jle
inc
jmp
sbb
jnp
sbb
in
inc
movsl
subl
pop
sahf
fnstsw
xlat
jl
jl
clc
push
pushf
pushf
test
sub
mov
lods
mul
cld
test
pop
pushf
in
dec
or
inc
dec
push
icebp
adc
push
stc
xchg
insl
rcll
sub
pop
lahf
in
pop
dec
pop
mov
mov
aaa
ds
xchg
xchg
jnp
cld
push
sahf
xchg
scas
mov
adc
jb
sbb
push
hlt
xchg
adc
push
mov
cmp
pop
cmp
cmpl
inc
lcall
mov
data16
push
sub
push
iret
mov
pop
addr16
ror
test
cmp
aam
frstor
fdivl
test
cwtl
xchg
shrl
aad
pop
add
lcall
fwait
pop
mov
add
mov
stc
das
xchg
addr16
mov
jg
popf
mov
xchg
xchg
dec
lods
or
mov
bound
cmp
outsb
test
fs
jmp
xchg
mov
or
push
fdivr
outsb
into
lock
aas
xchg
cmp
ret
pop
jae
cmp
outsl
dec
mov
inc
mov
ret
sahf
scas
popf
dec
sbb
aam
imul
cld
sub
sbb
inc
popf
fldcw
fisttps
cmp
mov
dec
loopne
repz
push
sbb
in
dec
or
sub
lds
in
andl
imul
inc
cld
ret
enter
sti
inc
into
sahf
fwait
ss
add
jb
sahf
lcall
ret
adcl
dec
mov
jno
lea
fmull
mov
cmp
repnz
sahf
in
mov
lcall
dec
fldl
enter
cmpsb
mov
pop
or
in
call
lods
shrl
cmp
cmp
sbb
outsb
jbe
xchg
js
dec
jp
negb
iret
pop
das
push
sub
sbb
mov
es
push
js
stc
mov
imul
movsl
or
insb
out
mov
mov
or
add
sub
das
rcrb
adc
outsb
imul
pop
inc
insl
mov
xor
icebp
push
cmp
push
imul
mov
sbb
sahf
mulb
xor
mov
popf
push
sbb
pop
dec
pushf
sub
scas
fsubs
xorl
fwait
cwtl
push
out
rcr
test
jae
decl
mov
or
adc
les
loopne
jecxz
sbb
incb
inc
aam
adc
fildl
add
sarl
daa
and
mov
movl
xchg
mov
rcrl
pop
adc
ds
hlt
pop
jmp
lock
std
cld
push
adc
loope
jnp
sbb
mov
mov
push
loop
inc
pushf
xor
add
lock
mov
add
mov
out
lcall
mov
sarl
pop
sbb
adc
out
inc
ret
jno
into
adc
jnp
insl
adc
vunpckhps
add
out
mov
xor
xchg
sbb
push
or
or
in
xlat
loop
data16
or
mov
jle
fistl
imul
movsl
mov
cli
jnp
int3
out
ss
push
push
and
sub
pop
mov
ret
lock
rclb
jmp
popf
iret
push
and
and
out
dec
rcrl
sub
mov
dec
adc
and
jle
jae
and
inc
or
mov
lods
jne
add
stc
add
pop
cs
cmpsb
orl
out
loope
jl
mov
imul
sub
pusha
dec
dec
push
mov
mov
sub
out
es
inc
sub
push
pop
sbb
mov
addr16
pop
sahf
dec
push
jno
lods
jge
cmp
loope
es
filds
and
cmp
leave
adc
dec
jns
ret
xchg
and
adc
mov
xor
sbb
adc
mov
andb
inc
mov
cmp
xor
int3
shll
pushf
in
inc
or
das
cwtl
push
dec
cmpb
fidivrl
repnz
lret
push
ret
notl
mov
negl
sahf
fs
out
sub
in
xchg
mov
lret
insb
in
inc
fst
rorb
fsubrl
ss
mov
fs
lret
add
lret
dec
dec
loopne
jg
inc
dec
mov
pop
arpl
ficoms
pop
add
insb
jnp
xor
sbb
test
cld
push
push
mov
iret
test
cmpsl
loop
inc
js
xor
les
lahf
mov
cmp
xchg
push
xchg
lods
imul
popf
out
xorl
fwait
outsl
in
xchg
add
pushf
pop
cmp
fistpl
mov
mov
dec
dec
jno
mov
ficoml
push
or
iret
ret
faddl
mov
cvtps2pd
arpl
out
popf
rorb
call
mov
js
mov
pushf
xor
out
inc
cmpsb
outsb
test
push
pop
lret
mov
xorb
cmp
pop
sbb
das
cmp
bound
jp
and
pop
cmpsl
mov
adc
dec
mov
mov
hlt
mov
add
sbb
ljmp
dec
or
imul
out
sti
fldt
into
ret
cs
inc
or
push
ret
stos
cmpsb
mov
enter
in
movsl
dec
jne
addr16
sub
mov
clc
loop
cmp
jl
insb
fldcw
lret
inc
jmp
and
sti
rcrl
add
inc
cmp
mov
fadds
mov
mov
push
push
popa
mov
ljmp
inc
push
xchg
mov
idivb
out
stos
jbe
add
xchg
jle
cmpsb
sub
movsl
outsb
test
addr16
sbb
ja
imul
dec
lcall
pushf
testl
adc
cmpsl
add
fdiv
sbb
push
ja
or
lods
push
mov
ljmp
insl
xchg
mov
out
xchg
lock
jnp
dec
adc
push
cwtl
testb
rorb
fistpll
add
js
push
cmpsl
aad
lods
mov
push
add
cmp
mov
ja
jecxz
jbe
stos
or
jbe
in
push
in
jns
jp
adc
inc
ret
pop
imull
sahf
xchg
sbb
jp
jmp
adc
push
pop
rclb
aas
aam
dec
push
in
jl
out
mov
xor
cmp
lret
pushf
xchg
mov
mov
mov
pop
cmpsb
outsl
cld
adcb
xor
xchg
xchg
and
nop
add
dec
std
popf
in
xor
popl
je
inc
repnz
lcall
rcll
and
mov
or
xor
lret
sub
out
xor
int
lret
push
lcall
mov
sub
and
adc
xchg
xchg
aad
dec
int
jecxz
sub
sub
or
push
dec
xchg
ljmp
ret
and
faddl
inc
push
imul
mov
lret
daa
fcmovne
sarb
add
or
and
xchg
adc
sbb
mov
cltd
adc
jno
or
push
push
add
jae
pop
enter
imul
add
cmpsb
outsb
inc
arpl
rclb
and
lock
inc
rcrb
mov
inc
lds
or
adc
push
dec
loope
ja
movsb
mov
das
das
cli
rclb
push
test
outsb
jns
out
add
js
xor
pop
and
adc
add
adc
jmp
sahf
outsl
fadd
insb
sti
cmc
lret
ljmp
and
shll
iret
pop
aaa
mov
sub
adc
lock
js
fwait
pop
and
not
cld
insb
out
add
popa
loope
adc
mov
pop
xor
push
jg
shlb
push
add
sahf
mov
arpl
mov
mov
jle
mov
sarb
jmp
cmpsb
and
or
lods
popa
ja
ja
out
leave
jbe
cmc
pop
jg
mov
dec
pusha
fsubs
jnp
pop
inc
mov
loop
xor
mov
jo
sub
inc
push
mov
imul
rorb
das
dec
mov
adc
xchg
sub
fcmovne
mov
push
lods
into
mov
pop
hlt
cmp
jmp
je
ss
cmp
int
test
sbb
push
dec
push
out
out
lds
and
add
jo
xchg
jmp
enter
filds
cltd
sub
shll
nop
lcall
mov
xor
cmp
sbb
ja
pop
jl
add
mov
push
push
mov
insb
rclb
int3
cmpsb
pop
les
mov
dec
cmp
nop
cmp
cmp
stc
cli
rorl
out
lret
dec
xchg
and
shll
pop
inc
mov
mov
aas
pusha
les
ljmp
dec
xlat
dec
push
fnstsw
cmp
out
pop
pop
insl
popa
pop
lret
mov
clc
cwtl
test
jno
inc
dec
sti
arpl
mov
arpl
pop
mov
sbb
add
sub
jg
ret
xor
mov
xchg
push
mov
sbb
jb
ljmp
xchg
or
clc
adc
xchg
out
jae
add
and
jnp
mov
scas
or
jecxz
scas
adc
dec
pop
es
push
test
fnstcw
sbb
popa
in
cli
push
fwait
imul
cwtl
aaa
data16
es
cmpsb
cmpsl
das
negb
inc
outsl
mov
adc
test
push
je
xchg
xchg
sub
cs
adc
test
mov
mov
xor
fisttpl
lret
push
mov
rorl
or
mov
jecxz
cmpsl
dec
pop
repnz
pop
add
dec
fcom
jns
pop
addl
and
lahf
xchg
xchg
ret
lahf
sub
aas
test
testb
jb
and
cltd
arpl
rorl
pop
pop
cmp
xor
loop
in
aaa
add
fnstsw
dec
ds
enter
xchg
dec
xlat
sub
int
jmp
or
sbb
scas
shll
repz
fs
or
insl
mov
jl
je
adc
cmp
pop
mov
pop
outsl
ss
jmp
cld
sti
lds
or
imul
es
lods
jmp
inc
ficoml
dec
or
pop
test
xor
popf
inc
ret
bnd
sub
cld
rorl
fisubl
imul
sar
or
mov
or
push
mov
dec
pop
or
pop
outsb
cmpsl
ficomps
jg
jae
mulps
std
mov
addb
adc
in
loopne
mov
test
jo
push
sbb
mov
sbb
fs
sub
aam
out
pop
xor
or
inc
add
pushf
mov
in
fstp
mov
ret
mov
push
lcall
decl
mov
stc
and
int3
in
idivl
sarb
loop
call
sub
icebp
mov
cmp
dec
mov
scas
inc
outsl
scas
js
pop
lret
mov
sahf
cmp
mov
movsb
cmpsl
cwtl
cli
addr16
lret
jno
add
xor
and
push
sbb
cmp
add
xor
loopne
mov
lods
rorl
push
imull
sbb
in
je
add
in
xchg
fwait
push
movsl
cli
dec
jl
inc
inc
xlat
fsts
inc
or
sbb
dec
push
xchg
cmpsb
lret
dec
shll
or
cli
mov
nop
mov
adc
jecxz
int3
add
loop
int
shlb
inc
mov
pusha
pop
dec
sbb
mul
gs
xchg
and
xchg
mov
into
add
popa
add
inc
lret
push
ss
inc
fimuls
or
std
push
xchg
adc
dec
scas
jge
xlat
jbe
push
jb
xchg
fnstcw
scas
movsl
push
lahf
iret
data16
jbe
into
xor
movsb
sarl
lods
movsb
jns
mov
xor
outsb
and
mov
rcl
sub
pop
out
loope
xor
sub
rorl
xchg
dec
test
xor
pop
shlb
imul
add
sub
imul
mov
jb
lods
out
and
mov
lods
ja
push
xor
jns
shr
xchg
mov
inc
aam
xchg
int3
enter
add
arpl
aam
push
or
or
xor
into
push
sub
cmp
sbb
cs
aaa
sti
and
jp
sub
and
mov
shr
push
lea
push
mov
mov
fmuls
addr16
jns
cwtl
pop
and
adcl
ss
mov
adc
loopne
cmp
je
sub
jnp
sbb
and
aaa
jo
inc
push
add
hlt
and
faddl
stos
push
scas
push
or
mov
and
daa
movsb
data16
jmp
movsb
addr16
test
add
pop
xlat
push
test
insb
pop
mov
mov
jl
es
orb
sbb
mov
push
popf
std
xor
insb
ret
stos
jne
jecxz
mov
aaa
scas
xor
shll
push
jecxz
or
stc
popl
mov
outsb
pop
jne
xor
and
bnd
push
jo
dec
mov
rcrb
cmp
jno
and
jno
xchg
mov
iret
jnp
test
mov
hlt
sub
in
or
xchg
add
loope
fadd
pop
or
leave
xchg
std
outsb
outsb
push
mov
mov
iret
pop
in
sahf
xchg
xor
mov
enter
jae
insb
clc
pushf
inc
cwtl
sub
outsb
mov
jg
jl
and
movsl
mov
arpl
sbb
mov
sahf
call
adc
jno
lock
push
xor
mov
lods
cmpsl
lock
inc
xor
push
push
jne
inc
mov
cmpsb
sbb
test
nop
jecxz,pt
call
add
scas
stos
dec
dec
pop
add
out
inc
sti
push
outsb
mov
stos
int
les
lods
push
fmuls
arpl
sbb
dec
fs
mov
fiadds
mov
adc
daa
sbb
stc
dec
sub
mov
sahf
and
imul
daa
movaps
in
add
push
cmpsl
xor
mov
jb
push
jnp
lret
fstpt
mov
les
gs
jb
xlat
inc
test
cmpsb
pushf
mov
imul
cmp
xor
sti
jl
adc
jge
mov
movsb
or
or
mov
xchg
mov
lods
or
lods
pop
xchg
notl
cmpsb
test
int
andl
sub
cmp
ret
rclb
dec
mov
dec
xchg
cmp
es
lock
mov
loop
jno
push
jg
jo
jnp
fucomi
jbe
call
and
add
add
outsl
test
arpl
leave
jns
pop
enter
pushl
cmpsl
mov
cmpb
popa
sub
movb
or
aad
mov
xchg
pop
les
sbb
cmp
xchg
cltd
dec
mov
fs
out
in
lret
jg
pop
dec
out
and
or
xor
mov
daa
shrb
cmp
stc
in
ljmp
hlt
jecxz
imull
or
jne
jg
filds
push
movsl
or
inc
cmc
lods
mov
mov
adc
jnp
out
push
mov
mov
ljmp
mov
ds
imul
arpl
cmpsb
dec
lahf
cmp
mov
inc
je
and
imul
lock
xchg
or
js
pushw
sub
mov
std
push
in
enter
loopne
mov
jns
bound
inc
sub
add
adc
cwtl
in
rclb
mov
push
mov
cli
jecxz
rol
cmp
pop
inc
xor
je
jae
das
jle
leave
addr16
mov
adc
push
cli
sbb
sti
mov
jb
inc
or
push
shrb
xchg
lret
xor
les
movsb
pop
push
push
cld
movsb
mov
lods
in
mov
push
mov
movsl
repnz
mov
aam
adc
fimull
fcmovnu
mov
out
scas
outsl
dec
mov
pusha
adc
cld
dec
xchg
stos
jge
mov
out
add
xor
clc
inc
mov
push
movsl
dec
ja
mov
imul
pop
inc
pop
fiaddl
xchg
mov
out
stos
lds
adc
inc
push
je
bound
cwtl
pop
decl
les
xchg
adc
gs
into
push
or
xchg
xchg
push
jns
jae
sti
cmpsl
inc
fimull
xchg
and
fdivrl
cwtl
ja
cltd
jp
out
push
inc
leave
push
inc
jnp
bound
push
in
xor
mov
inc
popf
imul
jmp
dec
dec
insl
jno
pop
stc
sub
xchg
xchg
add
adc
push
in
pop
sub
push
mov
pop
push
jnp
lods
xor
lods
dec
ret
sbb
int
xchg
imul
iret
xchg
stos
sub
xlat
mov
into
mov
mov
cmp
inc
cwtl
jno
pop
or
jmp
sbb
push
sbbb
rcrl
push
inc
js
ja
mov
out
adc
filds
mov
out
xchg
loope
mov
cmc
cmpsl
push
mov
mov
adc
xlat
cmp
sub
mov
jg
push
mov
mov
mov
sub
xor
scas
lods
jecxz
pop
gs
mov
add
lret
and
pushf
lea
push
push
xor
or
lods
jg
je
inc
xlat
jne
jne
push
ljmp
xchg
mov
fcmovb
mov
jmp
dec
mov
pushf
in
loopne
dec
dec
popa
rolb
loopne
scas
fwait
mov
sub
cmp
aaa
insl
iret
arpl
sar
mov
bound
inc
es
pop
add
sub
aas
mov
cmp
xchg
jo
daa
xchg
je
or
xchg
add
jnp
adc
sahf
mov
int3
addr16
dec
add
movsb
mov
xor
fs
pop
imul
mov
decb
in
or
in
push
or
mov
repz
and
xor
and
adc
scas
sbb
sbbl
pop
sti
idivl
push
sbb
dec
mov
cli
cmc
dec
push
insb
lds
outsl
dec
adc
push
das
xor
pop
mov
roll
cmp
and
cmp
nop
xor
mov
hlt
lret
stos
clc
push
and
xchg
cmpsl
jnp
imul
dec
gs
daa
inc
mov
adc
je
leave
cmp
test
and
add
shlb
xor
int
xor
loopne
daa
icebp
loopne
rorb
mov
xchg
dec
mov
test
stos
fwait
imul
fistps
cld
popa
je
push
mov
push
push
pusha
mov
shrb
mov
pusha
fmuls
repnz
call
int
call
fwait
and
sbb
sub
mov
adc
cmp
adc
gs
pop
pop
lret
sub
lea
push
or
insb
jle
stos
pop
scas
stc
idivl
loop
xor
fwait
sbb
mov
aaa
push
pop
mov
aam
push
scas
xor
jnp
fldt
pushf
mov
mov
test
data16
jb
dec
push
cmp
dec
hlt
mov
xchg
enter
mov
int
out
add
bnd
push
stc
mov
xor
cli
pop
filds
xchg
cmp
sub
cmp
or
pop
rcll
das
mov
sbb
fisubrl
jle
ffree
jns
out
ljmp
rcrb
adc
sbbl
xchg
data16
lods
call
cmpsb
sbb
stos
dec
movsb
sbb
repnz
pop
and
repz
bound
pusha
mov
fistps
pushf
adc
cmpsl
daa
jae
sti
adc
loop,pt
das
pop
loope
cmp
stos
dec
xchg
mov
xchg
arpl
mov
mov
jecxz
jnp
cli
mov
xchg
in
loope
lahf
dec
push
push
and
mov
mov
flds
pop
hlt
adc
jae
test
ret
and
push
je
pop
or
or
in
pop
inc
adc
and
cmpsl
pop
or
push
cmpb
fildll
pop
data16
int3
loop
dec
rcll
in
mov
push
jmp
and
mov
inc
stos
insl
cs
cmp
jne
sbb
sub
push
arpl
mov
js
dec
fisttps
outsb
push
enter
and
jbe
ja
mov
sbb
add
jnp
lds
js
movsl
dec
test
mov
std
sbbl
jle
cmpsl
movsl
leave
pusha
in
push
outsb
arpl
test
rolb
out
pushf
cmp
lods
mov
stc
sub
jbe
push
pop
jae
pop
cmc
mov
popa
lds
mov
repz
fdivl
inc
loope
cmp
xchg
out
movsl
and
push
lahf
test
data16
imul
int
lods
xchg
pop
out
lds
ja
daa
cmp
rcrb
mov
sbb
out
sbbb
lahf
lock
cmp
shlb
adc
movsl
dec
data16
pop
addr16
sbb
and
shufps
mov
push
fisubl
aad
movsl
mov
aas
push
sbb
mov
cltd
cmpsl
add
push
aaa
or
or
lods
push
lds
adc
xchg
repnz
jns
inc
sbb
or
into
xchg
adc
and
ljmp
mov
mov
daa
dec
cmovae
test
or
jmp
push
enter
pushf
mov
iret
movsb
inc
mov
scas
aaa
cmp
out
add
xchg
nop
pop
gs
inc
lahf
in
mov
and
leave
jns
push
out
sub
pop
jo
add
jnp
jmp
xchg
pushf
add
push
push
jnp
push
mov
pop
adc
leave
mov
cmp
cmp
in
adc
lahf
push
mov
adc
ds
cmp
mov
cwtl
js
inc
in
inc
push
mov
or
fcmovnu
insb
jbe
adc
mov
mov
mov
scas
loop
jecxz
jmp
sbb
mov
mov
cltd
jge
push
std
int
js
inc
mov
add
pushl
sarb
fldcw
xchg
push
add
inc
and
clc
pop
jp
jge
cmp
inc
add
aas
pop
aad
imul
lret
jp
mov
pop
hlt
xchg
cmp
sub
mov
jo
jno
out
push
rcrl
mov
fsts
jbe
outsb
cli
adc
or
clc
or
push
in
loop
aam
pop
gs
orl
cld
mov
mov
mov
add
push
imul
movsb
jo
call
clc
push
jns
movsb
xchg
xchg
pushf
jbe
daa
pop
adc
enter
jmp
mov
int
les
xor
mov
mov
pop
das
jne
stc
push
lahf
pop
jo
vpsubd
test
push
addb
pop
xor
and
mov
push
lcall
adc
dec
add
movsb
cmp
mov
jne
out
test
lea
pop
mov
or
push
dec
mulb
ret
adc
cmp
fisttps
sub
wrmsr
jp
cwtl
hlt
std
pop
adc
jnp
ja
adc
or
push
cmp
and
notl
mov
dec
fiadds
cli
xor
lahf
jo
cld
cwtl
vpcmpw
or
insl
mov
decb
ja
adcl
xchg
lcall
jg
test
xlat
mov
mov
fistl
inc
mov
or
andb
imul
push
mov
jmp
or
dec
mov
stos
testb
pusha
in
mov
test
out
jae
enter
cmp
loopne
sbb
dec
and
sub
cmp
xorl
pop
push
push
outsl
add
pop
push
jle,pn
fmulp
jmp
push
nop
add
mov
ret
xchg
push
ret
sub
popa
xchg
mov
xchg
fwait
pop
cltd
mov
sub
and
jb
imul
dec
out
fwait
push
cmpsb
js
rorl
mov
push
iret
lret
mov
sub
int3
in
adc
sbb
mov
jg
fwait
push
test
dec
sub
and
xchg
inc
sahf
loop
adc
xchg
push
dec
jmp
push
rorl
jbe
jne
imul
xor
jne
jnp
hlt
ficoms
out
or
test
test
jge
aas
loop
loopne
dec
movsb
cld
cmp
lahf
sti
sbb
popf
xor
rorl
inc
stc
cmp
xchg
sub
pop
sub
push
jmp
xchg
fildll
shll
test
cmpsb
shll
inc
jno
fsubl
push
mov
xchg
mov
dec
mov
iret
shrb
xchg
push
ret
nop
popa
in
pop
pop
push
push
xchg
mov
xchg
aaa
loope
rclb
andb
sbb
add
sub
iret
or
ret
fsts
aas
push
in
jp
cld
add
jns
and
sbb
push
adc
lea
popa
ror
out
or
xchg
sub
xchg
das
mov
dec
jo
jmp
adc
fimuls
pop
mov
mov
push
into
lods
imul
leave
std
jno
in
cmp
arpl
dec
imul
icebp
jne
test
jp
fmuls
dec
and
out
leave
lods
mov
xchg
sbb
cmpsb
push
sahf
or
add
adc
inc
icebp
mov
lea
shll
out
lcall
mov
test
push
xchg
in
divl
daa
xor
pop
std
pop
popa
cmp
repz
cmp
out
imul
in
xor
push
in
mov
pop
popa
cmp
lock
and
mov
lock
sub
sbb
cmp
inc
frstor
in
adc
arpl
ljmp
add
push
mov
enter
pop
or
scas
fdivrp
fwait
push
jp
jb
push
xchg
push
das
icebp
dec
icebp
int3
out
adc
sbb
ds
jae
xor
and
mov
or
sti
xor
mov
add
mov
jle
stc
loope
add
cmp
xchg
fwait
push
xor
sarb
aad
sbb
inc
pop
dec
mov
lods
adc
cmp
call
flds
pop
popa
fisttps
out
addb
test
cmpsl
lret
pushf
decl
punpckhdq
repz
fdivrl
push
icebp
xor
mov
nop
popf
xchg
sti
fldl
int3
pop
icebp
jge
shlb
push
es
push
push
xchg
mov
jg
sti
push
dec
sti
xchg
jnp
dec
in
jo
lods
std
lock
fidivrl
inc
int
lea
lcall
mov
in
add
andl
insl
adc
cld
add
inc
sbb
sbb
push
xor
mov
test
add
jecxz
jns
jno
and
test
es
push
leave
cmp
cmovnp
cmpb
mov
rcl
repnz
xor
and
dec
jae
mov
mov
xchg
pop
sti
sbb
xchg
in
push
push
and
popl
orps
mov
sti
xor
mov
push
jg
or
sbb
insb
cmp
loopne
pop
cli
dec
addr16
stos
xchg
lock
mov
fldl
xlat
pop
xor
inc
dec
push
pop
push
cmp
int3
adc
and
pop
das
cmc
jns
mov
cmp
xor
cmp
ja
mov
insb
push
call
rep
pushf
xchg
pop
fidivrl
jb
adc
aaa
stos
mov
out
repnz
inc
push
mov
cs
arpl
outsl
pop
push
imul
cmp
xor
and
mov
mov
push
pop
arpl
ret
out
jmp
sbb
fwait
sub
ret
cmc
stc
lods
push
xchg
jl
enter
ret
lcall
lea
mov
add
sbb
aad
fdivrl
stc
pop
push
imul
ret
leave
data16
xor
xchg
in
data16
pop
cld
xchg
mov
out
mov
inc
mov
in
xchg
push
mov
sbb
dec
arpl
jnp
int
mov
out
call
fnstsw
cld
adc
pop
and
pop
sarl
adc
and
cmp
call
sti
scas
xchg
repz
stc
test
xor
arpl
pop
imul
sub
push
lcall
or
cld
aad
lcall
cwtl
or
mov
fidivrs
scas
stc
in
or
and
insb
enter
stc
movsl
or
mov
aad
lods
cltd
jp
or
stos
add
add
cld
ror
idivb
push
popa
pslld
scas
je
mov
inc
jbe
das
add
adc
orb
sub
dec
xchg
incl
ds
jne
or
sub
je
in
lahf
pop
shll
sub
enter
mov
and
lds
or
jg
sub
jmp
mov
cli
sub
pop
add
jns
push
mov
and
cmc
je
xlat
pop
mov
prefetch
jo
push
or
sbb
xchg
aas
addr16
mov
xor
loop
or
aam
cmc
pushf
pusha
outsb
cmp
and
mov
sahf
or
aam
adc
shl
pop
inc
jne
cmp
jnp
nop
dec
jne
push
cmc
aad
sbb
into
push
and
sarl
out
sbbl
in
popa
das
lcall
jne
xchg
fucomi
push
jl,pt
mov
stos
bound
jecxz
insb
jne
lds
mov
mov
pop
les
aad
mov
sbb
imul
mov
ljmp
mov
mov
cmpsl
xchg
mov
lahf
lea
movsb
cmp
insl
jns
mov
pop
pop
inc
fsubrp
fs
mov
pop
xchg
leave
dec
mov
cmpsb
arpl
sub
lret
lcall
fs
inc
add
ja
pusha
jle
out
repnz
in
jl
adc
fnstsw
bound
andl
aaa
les
dec
jnp,pn
xor
gs
adc
jmp
sub
xlat
jle
loop
movsb
push
cmpsl
mov
jg
xchg
inc
mov
ret
aas
shrb
inc
mov
push
mov
pop
jbe
dec
adc
lret
cwtl
loop
cmp
outsl
adc
mov
mov
pop
sub
push
add
mov
or
or
xchg
movsl
and
sbb
dec
mov
out
fnsave
shll
push
fdivrs
sti
cmpsb
dec
push
xor
pop
addb
lds
adc
mov
sbb
xor
xlat
stos
loop
adc
pop
xorl
loope
xor
js
enter
out
ret
lret
adc
xlat
cmp
lds
pop
aam
cmpsb
addl
mov
mov
lret
mov
ja
das
repz
cltd
out
ja
cmp
aad
sahf
stc
xchg
add
jne
cmc
sub
xor
inc
inc
push
sbb
or
push
les
cmc
mov
cmpsb
xchg
push
push
cmp
in
addr16
rcll
imul
add
rorl
lods
dec
lret
mov
loop
jno
add
inc
cmp
mov
pop
cmp
mov
xchg
stos
jp
cmpsl
ss
and
push
mov
add
adc
mov
add
movsb
inc
mov
sti
xor
mov
xchg
ficoml
mov
lods
jecxz
and
mov
mov
mov
lret
mov
dec
lock
icebp
sub
mov
push
test
mov
inc
mov
lret
call
scas
fwait
imul
in
xchg
lods
jo
std
out
or
in
test
dec
dec
inc
fsubs
rcrl
mov
leave
mov
push
pop
insb
inc
push
cmp
lods
outsb
cmpsb
mov
mov
mov
pop
movsb
pop
setl
mov
cmp
lods
aas
in
push
sub
pop
cmp
lcall
mov
outsb
and
dec
cmp
hlt
subl
or
mov
gs
fdivr
add
fs
std
stos
ret
cli
bound
outsb
sub
test
push
xchg
data16
mov
sub
inc
lock
or
sub
xlat
rorb
adcb
test
mov
pop
cmp
rol
loopne
outsl
sbb
or
inc
sahf
enter
int3
xchg
cmp
outsl
repnz
or
daa
ret
inc
int
add
fadds
xchg
test
fistpl
call
jne
repz
es
mov
fistl
mov
or
movsl
lahf
push
outsl
cli
daa
out
mov
or
aam
dec
ds
sbb
fwait
push
call
loope
repz
in
cld
and
xchg
dec
and
adc
jne,pn
lock
sbb
dec
jbe
pop
lock
out
cmp
fdivrl
je
fisttps
push
ret
mov
cmp
jg
push
dec
mov
jmp
push
mov
jne
dec
jns
jmp
xor
pop
or
mov
or
mov
std
aas
add
int3
out
hlt
mov
out
in
inc
test
stos
xchg
outsl
mov
cld
jno
adc
test
cld
cmp
test
loop
repz
cli
sub
push
js
jl
in
iret
xchg
cmp
int3
or
call
movsb
movsl
xor
test
inc
cmpsl
sbb
cld
xchg
clc
pusha
lods
popa
test
pop
sub
or
sub
js
xchg
testb
fldcw
mov
out
inc
lock
or
cmpsl
jb
mov
daa
mov
dec
cmp
loop
mov
mov
enter
jnp
mov
mov
and
xor
xchg
je
xchg
aas
and
icebp
and
int
and
xor
fists
add
out
aaa
aam
scas
pop
and
push
out
push
out
or
jecxz
loope
sub
lock
aam
mov
cmp
mov
adc
cmc
mov
clc
mov
sub
push
mov
inc
fmull
mov
mov
movsb
fdivs
sbbl
push
or
insb
icebp
sbb
imul
aad
fcoml
repnz
imul
pop
jg
dec
add
lds
push
iret
int3
jae
mov
clc
mov
insb
addr16
push
pop
mov
push
and
jns
movb
cmp
nop
adc
jle
dec
test
or
inc
std
stos
les
cltd
sahf
icebp
xor
into
adc
aas
mov
out
js
ljmp
repnz
pop
pop
xor
cltd
popl
dec
pushf
mov
or
push
adc
mov
xor
xchg
adc
adc
cmpsb
inc
pop
push
in
bound
add
push
jecxz
pop
into
or
pop
lret
pusha
int3
mov
divl
fcmove
mov
lods
cmc
jle
jnp
adc
adc
cli
rcrb
cmp
mov
xchg
rcr
mov
mov
push
imul
fcompl
jmp
loopne
int
xchg
push
push
xchg
mov
in
in
and
test
xor
inc
leave
sbb
aaa
lods
xorb
dec
ret
xor
inc
jge
inc
xor
dec
pop
jnp
inc
mov
scas
cmp
mov
dec
mov
fldenv
loope
cmp
mov
loop
push
mov
scas
sbb
roll
and
inc
mov
mov
mov
sbbb
cs
pop
scas
push
hlt
sti
pop
cmp
mov
mov
cmc
out
sbb
cmp
and
cmc
jmp
cmc
dec
mov
inc
mov
popf
inc
ret
sub
pop
sub
and
or
in
push
mov
xchg
mov
sbb
icebp
int
hlt
pusha
add
cs
xor
enter
pop
push
mov
or
jne
mov
mov
pop
cmc
je
lock
xlat
cmp
in
aam
imul
jmp
lock
or
mov
xchg
sbb
dec
rcr
pop
jp
mov
in
xchg
and
ds
stos
push
enter
ja
and
stc
pop
adc
pop
mov
imul
into
ljmp
pushf
and
adc
sub
and
push
pop
test
add
jle
fldl
ljmp
loope
dec
andb
mov
xor
mov
pop
cli
inc
adc
pop
xor
insl
fidivl
mov
or
ds
aad
or
orb
dec
hlt
adcb
and
stc
rclb
mov
stos
test
cmp
jno
cwtl
test
gs
cltd
fdivrs
add
dec
or
sub
cmp
pop
lea
iret
mov
jp
sub
mov
test
int
inc
cmpsl
dec
sbb
sti
sub
adc
xlat
daa
call
push
repz
xor
test
fisttpll
ljmp
cmpsl
sbb
insb
out
pusha
les
loopne
bound
cmp
jnp
dec
pop
outsl
pop
das
pop
insl
out
adc
pop
sub
inc
push
in
inc
js
call
push
ffree
enter
call
mov
push
mov
dec
ret
dec
or
adc
mov
mov
in
mov
adc
mov
inc
jmp
xlat
and
push
pop
push
jno
cmp
add
sub
insl
shll
push
sbb
jge
or
jne
add
push
in
add
pop
adc
cmp
shll
push
push
shlb
popa
jno
mov
pusha
stos
rcl
int
mov
mov
and
stos
icebp
cmc
je
push
out
xchg
out
mov
call
adc
rcrl
stos
dec
testl
ja
pop
fsubrs
add
rcr
stc
test
jp
sbb
dec
push
in
scas
insb
jmp
push
mov
out
pop
std
loope
or
xor
or
subl
mov
pop
insb
sub
sub
add
jecxz
lds
mov
in
sbb
sub
sub
inc
mov
fistl
repz
dec
xor
sbb
sti
jecxz
cmp
mov
push
dec
sbb
fistpll
out
sub
mov
push
mov
push
mov
mov
sub
sbb
jg
xchg
imul
imul
mov
loope
mov
mov
xchg
and
add
mov
push
lcall
js
andb
divb
add
xor
jne
adc
fcoms
negl
jmpw
sbb
imul
in
xchg
mov
xchg
lods
in
push
adc
cmp
loop
std
sub
jge
js
es
call
jno
mov
cmpsl
or
adc
andb
pop
cmp
mov
cmpsb
in
inc
pop
mov
jp
fwait
loopne
iret
fdivrp
push
es
pop
cmp
jo
mov
or
adc
shrl
pop
stos
sbb
cltd
call
adc
jl
in
fsubr
push
movsl
ljmp
pop
push
jecxz
sahf
mov
adc
cmp
test
idivl
mov
jecxz
or
or
xchg
bnd
scas
daa
mov
outsl
nop
out
push
push
test
popa
stc
sub
popa
rol
mov
cmpsl
cmp
fucomip
pop
mov
and
ljmp
add
scas
jecxz
jl
movsl
icebp
ja
adc
gs
adc
push
rcll
mov
bswap
ret
xchg
mov
push
fwait
adc
xchg
sub
outsl
or
lds
lods
adc
stos
and
mov
sti
mov
rorb
mov
ret
jg
cmp
jecxz
xchg
push
cmp
test
xor
mov
aas
repnz
je
sbb
push
mov
fiadds
mov
xchg
jb
xchg
xor
icebp
sti
or
sti
outsb
and
pop
xor
rcrl
mov
cmp
stos
inc
mov
mov
dec
pop
xor
cmp
ror
cmp
add
inc
in
sub
into
ds
leave
mov
cld
movsb
add
bound
pop
mov
mov
outsl
icebp
jb
mov
xor
in
inc
pusha
nop
icebp
mov
adc
jns
sbb
les
mov
adc
xorl
bound
into
inc
fstpl
fwait
mov
pop
cmp
xchg
pop
stos
aad
les
loopne
outsl
push
daa
xchg
daa
push
pop
pop
jmp
shll
cmp
faddl
add
stc
bnd
int
and
lods
int3
orb
and
andb
mov
test
xor
jbe
dec
mov
aam
cmp
xor
xchg
mov
sbb
arpl
pushf
fwait
out
ja
das
push
lcall
xor
sbb
sub
push
cli
rep
subl
addr16
push
push
sti
les
mov
and
addr16
sub
les
lret
insl
fcmovnu
jp
popf
fistpl
aad
xor
mov
loop
push
cmp
adc
adc
shrl
mov
xorb
mov
shl
popf
and
xchg
push
pushf
inc
xchg
mov
adc
push
jecxz
aad
rol
iret
shrl
mov
idivb
inc
fwait
jne
insb
push
and
xor
testb
enter
cmpb
stc
notl
faddl
sti
icebp
push
popf
mov
jo
dec
clc
dec
adcb
stc
sub
mov
inc
pop
rcrl
mov
ss
dec
std
ja
xchg
sub
aad
in
hlt
bt
shll
ss
adc
add
in
repz
mov
add
mov
in
xchg
inc
cmp
dec
add
outsb
push
nop
mov
pop
cwtl
inc
mov
and
jle
inc
jae
fs
mov
daa
std
dec
mov
lods
add
sti
fiaddl
scas
pusha
int3
pop
es
paddq
add
xchg
sbb
push
inc
add
add
rcrl
push
stos
leave
dec
and
dec
out
lds
scas
mov
pop
inc
mov
mov
cmp
cmpl
sarb
and
cmp
popa
jmp
ss
cmp
notb
sbb
clc
cmpxchg
sub
aam
cmp
jb
cmpb
popa
jmp
leave
push
in
out
lcall
pop
test
push
fcoms
sub
ret
iret
mov
stos
mov
inc
jnp
sbb
lret
xor
pop
and
or
add
push
pop
data16
push
in
lock
mov
mov
out
andb
loop
or
dec
jge
xor
out
cmp
cmp
add
imul
xchg
jo
incl
iret
in
outsl
jecxz
jns
ljmp
jb
mov
dec
jl
jmp
and
jns
xlat
mov
push
decb
add
out
push
dec
ss
cli
pop
jl
sub
inc
push
int3
dec
sbb
push
out
insb
pop
xchg
pop
arpl
xchg
call
cmpsl
mov
in
jb
int
pop
aam
pop
rol
cmp
imull
or
adcl
xchg
pusha
and
cmpsb
inc
ret
mov
inc
push
addr16
mov
add
lods
lds
ret
pusha
loopne
dec
mov
loop
xchg
fisttpll
push
hlt
movaps
sub
lea
jb
jg
mov
push
cmp
inc
sub
shll
out
jo
mov
js
jns
jg
cwtl
inc
pushfw
mov
cli
rcrb
inc
ds
sbb
dec
jns
inc
jae
in
insl
dec
cmp
mov
mov
jbe
cmp
and
jmp
sbb
or
jge
mov
pop
daa
xchg
lret
sub
cmp
cmp
xchg
pop
sub
mov
cmpsl
lret
ds
dec
cmp
pushf
mov
jo
fisubrl
roll
pushf
cmp
fsts
jge
repnz
fdivl
std
or
push
cmp
push
cmp
inc
adc
mov
leave
push
sbb
imul
jp
addr16
xchg
js
aas
test
xchg
pushf
jmp
int
test
push
test
push
adc
inc
std
push
in
and
scas
jo
inc
lahf
jno
pushf
das
cli
lods
jge,pn
pop
div
imul
ficompl
cmc
xchg
mov
mov
repnz
test
fildl
aad
xlat
dec
lea
rorb
enter
faddl
loop
fcoms
mov
es
ret
test
xchg
test
inc
in
inc
mov
sbb
mov
xchg
clc
xor
sub
pop
les
loop
adc
in
int
and
or
sti
add
mov
inc
add
push
push
jnp
ret
jbe
jg
add
mov
mov
mov
test
xchg
testl
scas
cli
or
pop
test
add
push
add
cmp
and
sarb
mov
mov
sub
sbb
lods
nop
dec
dec
outsb
xchg
sbb
pop
std
and
push
jmp
mov
mov
repz
out
adc
cmpsl
out
test
jb
sbb
and
ret
cmpsb
fisttpl
fwait
add
cmp
mov
jmp
add
std
jne
cltd
sbb
and
cmc
in
loopne
cmp
imul
test
in
in
inc
mov
mov
add
inc
ds
fisttpl
push
aaa
pop
pop
ds
push
out
cwtl
push
adcb
and
or
mov
dec
ret
mov
mov
pop
ficompl
cmc
test
aaa
jmp
scas
out
mov
fmull
sahf
clc
push
lea
cmp
imul
pusha
lahf
jno
xor
in
mov
mov
or
fs
sub
notb
es
movsl
add
adc
imul
push
lods
jne
cwtl
sti
or
jo
and
inc
mov
push
cmp
cmpsl
cltd
inc
imul
out
jo
nop
xchg
mov
rcl
pushf
sar
and
and
aam
leave
jne
sbb
mov
adc
fdivrl
lahf
punpckhdq
mov
mov
test
ror
in
inc
push
or
mov
mov
mov
aam
mov
fbld
xchg
inc
mov
inc
pop
ja
and
xor
into
jge
jle
xor
out
pop
rorb
jmp
lods
les
or
nop
cmovl
xor
fsubs
mov
pushf
clc
std
call
add
and
cli
mov
mov
pusha
lock
lret
and
push
dec
push
cmpsl
in
cwtl
mov
int3
cmp
inc
ret
fstl
xlat
add
subb
pop
in
std
cmpsl
push
pop
rcll
cltd
pop
and
jnp
fldenv
mov
fildll
mov
imul
cmp
test
ficoml
popa
dec
and
push
sbb
mov
sbb
cwtl
cli
insb
ret
or
scas
rcrl
mov
sbb
sub
int
and
dec
mov
fdivs
push
loopne
lods
xchg
mulb
sbb
xchg
dec
data16
call
stc
std
xor
mov
icebp
pop
jge
jp
mov
and
aam
fisttpll
gs
push
popf
loope
pop
ja
xchg
mov
je
inc
icebp
and
cmp
cwtl
fistpll
or
push
and
rcll
pop
dec
mov
xor
insl
add
movsb
sub
or
add
lds
push
fdivl
dec
shr
sub
sbb
andb
jns
mov
inc
fs
ja
test
and
sub
xor
loope
jge
lahf
sub
or
cs
fildl
inc
sub
pop
sub
xchg
das
or
inc
xor
sbb
sbb
pop
push
lods
in
icebp
enter
dec
div
jecxz
mov
xor
or
cmc
xor
inc
jns
in
out
jecxz
rcrb
outsl
loopne
shll
push
into
push
jb
leave
sbb
push
mov
mov
mov
in
cmpsb
cli
or
mov
repz
ficompl
out
push
and
push
outsb
insb
and
mov
dec
fwait
test
jbe
add
imul
repnz
inc
cltd
jp
fiadds
jb
cmc
or
jb
gs
xchg
stos
cmp
mov
xchg
dec
adc
push
fwait
pop
pop
or
popa
jne
sub
decb
aas
xchg
xor
adc
pop
js
cmc
clc
imul
pop
rclb
sub
push
xchg
das
pop
int3
imul
ret
jg
arpl
mov
xchg
cmpsl
and
clc
xor
ret
jmp
andb
arpl
test
outsl
xor
data16
je
push
sbb
mov
add
inc
jne
in
inc
data16
inc
or
jmp
mov
inc
mov
add
mov
rorl
leave
in
pop
sub
mov
repz
mov
addl
mov
cmp
dec
xchg
xchg
in
pop
sbb
pop
xor
adc
lret
iret
add
andl
dec
negl
arpl
aam
rorb
or
fxam
xchg
imul
ret
adc
dec
notb
inc
mov
lods
mov
stos
cmp
pop
jno
icebp
popfw
xchg
mov
push
jmp
arpl
mov
fs
insb
jae
mov
jbe
cmp
sub
mov
inc
jb
mov
iret
add
test
divl
add
outsl
lock
sbb
aad
lock
xchg
xor
xchg
xor
sbb
je
jbe
fisubrs
andw
mov
cltd
add
or
mov
jl
mov
mov
leave
shlb
call
jecxz
xor
andb
mov
loope
push
add
clc
or
test
stc
stos
into
or
insl
xchg
add
lahf
sbb
pop
lods
out
mov
cmp
cmp
int
out
xor
push
daa
xchg
arpl
mov
jo
dec
adc
fsts
add
fwait
sub
mov
mov
mov
xor
cld
pop
adc
adc
outsl
mov
inc
push
cwtl
jb
xor
mov
imul
in
mov
inc
pop
int3
fimuls
pushf
mov
mov
sbb
xchg
stc
inc
aas
out
iret
dec
movsb
jno
dec
sub
jl
fdivrl
les
call
neg
ja
mov
xchg
cld
add
lcall
subb
stos
outsl
inc
cmp
lahf
enter
adcb
inc
imul
gs
popa
cmc
cmc
roll
ss
or
orb
rcll
shr
mov
lods
lret
mov
cmpsl
pop
call
pop
push
jo
sub
shll
leave
pop
mov
mov
lret
in
icebp
push
loopne
sbb
mov
icebp
inc
xchg
push
ds
std
ret
sub
mov
hlt
or
dec
icebp
push
les
mov
sbb
jnp
push
loop
testb
out
mov
arpl
pusha
sbb
push
dec
mov
mov
loope
adc
pop
add
mov
dec
fists
loopne
push
xor
popa
out
daa
sti
push
pop
aad
push
inc
xchg
stos
iret
repz
and
add
nop
or
and
stos
cmp
fdivs
xchg
aas
sbb
nop
sub
fst
xor
sbb
addr16
scas
in
outsl
inc
pop
lahf
pusha
mov
sarl
adc
shlb
outsl
test
subl
sbb
adc
movsb
es
ret
ret
push
sahf
push
fistpll
shll
movsb
xor
and
scas
push
jns
in
into
imul
fidivl
aam
xor
sub
pushf
aaa
add
mov
repnz
add
cmp
push
outsb
jns
je
cli
jmp
sahf
jno
in
mov
cmp
mov
jne
xchg
push
xchg
sbb
mov
std
fildll
aad
cmp
je
jbe
inc
cmpsl
movsl
ljmp
cmpsl
and
mov
gs
pop
rcl
scas
icebp
jmp
mov
sar
daa
popf
add
push
cmp
leave
test
and
mov
add
pusha
adc
cmp
cmpsb
jno
sub
or
mov
stc
les
mov
push
cmp
fcompl
mov
fsubrs
mov
jecxz
mov
clc
jne
ds
loop
jmp
dec
xor
notl
mov
loop
insb
jl
vcvttsd2si
sbb
mov
add
mov
push
mov
ds
pop
stos
xor
cmp
mov
pop
xchg
sbb
adc
sbb
cs
imul
scas
ffreep
xchg
dec
orb
push
adc
mov
xor
mov
inc
and
sub
inc
adc
jne
push
push
mov
stc
lock
stc
jne
nop
add
jns
or
cld
mov
pop
dec
in
jl
dec
lea
inc
sbb
cmpsl
mov
cmp
int3
loope
out
add
rorl
ret
add
mov
cli
mov
arpl
mov
add
inc
fadd
sub
push
fwait
mov
lods
test
sub
insl
ja
dec
lods
fnsetpm(287
xor
les
mov
out
push
xor
or
icebp
lea
movsb
pop
psubq
aad
imul
movsb
sarl
or
and
icebp
out
test
popa
pop
cmp
mov
in
adc
pop
inc
sarl
mov
push
xchg
mov
jae
repnz
insl
jmp
rcl
sub
jmp
adc
add
loope
fs
in
lahf
subl
mov
stos
xor
jns
inc
cmp
jnp
iret
in
mulb
pop
mov
sbbl
xor
xor
and
loope
push
jecxz
or
pop
xchg
xor
mov
pop
insb
xchg
ret
out
add
push
test
add
jl
fisubl
mov
addl
ficoms
lret
jo
clc
mov
fisubs
adc
sbb
mov
jge
sbb
adc
jae
lret
sbb
or
dec
fisubrl
pushf
add
jns
loop
inc
stc
cltd
lret
or
icebp
addl
roll
aaa
mov
mov
sbb
push
sub
add
pushw
sbb
pop
hlt
sahf
xor
xor
into
cmp
fildl
shll
mov
mov
mov
out
pop
out
mov
push
mov
stos
daa
in
and
stc
sub
dec
sbb
ja
xchg
es
sarb
push
mov
lret
xchg
adc
push
in
lcall
mov
pushl
pop
clc
jp
sbb
fadd
iret
daa
out
outsb
add
jl
dec
clc
cmp
ds
mov
arpl
sbb
push
adc
jno
popa
loope
sbbl
mov
sbb
inc
xchg
mov
xchg
adc
cmp
pop
pushf
js
push
adc
rcr
adc
mov
mov
pop
xchg
or
pushf
popf
data16
pop
stos
pusha
push
sub
xchg
sbb
and
fcmovnbe
enter
idivb
sub
adc
in
jg
or
addr16
in
test
sbb
js
sahf
test
subl
and
lcall
outsl
pop
mov
fldl
pop
hlt
in
dec
lahf
add
add
jp
sub
in
outsb
cwtl
repnz
inc
sti
ja
fistpll
xor
mov
lods
push
fwait
push
sbbl
call
mov
mov
cmc
fwait
mov
xorl
lods
xchg
cmp
sub
arpl
pusha
in
in
xor
ret
add
nop
dec
cli
iret
add
ljmp
jns
mov
pop
add
cmp
push
fsubrl
lret
insl
push
mov
push
xor
mov
roll
add
lock
clc
fnstcw
andb
shlb
outsb
scas
pop
and
sysexit
pushf
adc
or
shlb
std
inc
cmp
imul
adc
mov
je
test
fisubs
cmpsl
jnp
mov
cmp
popf
add
fdivl
pop
mov
xor
lods
into
adc
and
iret
push
fisubl
adc
cli
and
push
js
pop
mov
nop
jo
outsl
push
fiadds
fsubl
aaa
mov
push
orb
add
jne,pn
xchg
fs
jge
mov
lods
ss
pop
inc
daa
iret
mov
mov
ficompl
mov
icebp
mov
pop
jg
lock
push
pop
mov
les
jmp
and
fcmovu
cmp
js
int3
jb
cmp
out
out
dec
int
pusha
jp
enter
sahf
test
push
fisubrs
jecxz
or
cmc
mov
xchg
incl
lea
cwtl
lea
dec
popf
pop
push
pop
lcallw
mov
push
and
ror
add
std
mov
adc
repnz
push
inc
fisubrs
fldenv
add
cmpsl
cs
ja
dec
test
cmp
nop
stos
adc
orl
dec
push
xor
popf
adc
sbb
loop
jl
sub
inc
ret
push
call
cmpsl
inc
inc
popf
dec
call
adc
mov
clc
fsubp
xchg
adc
cwtl
add
push
movsb
shll
arpl
push
sub
shlb
gs
enter
cmpsb
xor
xchg
mov
pusha
mov
xchg
pop
add
shlb
mov
add
out
movsb
test
aaa
ja
imulb
or
and
xor
daa
pop
mov
sbbl
in
je
mov
mov
push
mov
jnp
divl
xchg
adc
movsl
jl
sub
enter
popf
dec
rolb
fwait
sbb
jne
adc
addr16
vmulpd
int
subl
lea
shlb
mov
or
aaa
stc
sbb
jns
pop
scas
lods
sbb
jg
and
stc
xor
enter
inc
mov
and
call
daa
gs
adc
popf
cmp
adc
inc
or
xchg
xor
int
cltd
dec
jl,pt
ds
sub
and
fdivr
jb
out
cmc
std
movsb
sbb
sub
jbe
cld
cwtl
loope
movsb
out
jae
sbb
mov
neg
je
dec
mov
loope
push
in
ds
add
and
ljmp
leave
mov
gs
mov
icebp
test
sbb
outsb
ror
sub
mov
sbb
int3
leave
lss
je
pop
pop
je
pop
xchg
ss
pop
jno
jmp
lods
xor
jno
or
add
mov
mov
es
shlb
xorl
dec
out
pop
rorl
ret
and
in
lds
jns
out
pushf
adc
mov
in
aad
fldenv
nop
push
fbld
mov
pop
add
jmp
cmpsb
inc
test
cmp
cmpsl
sbb
xor
into
adc
push
mov
adc
lcall
mov
pop
cs
xchg
in
jns
xor
iret
into
jae
js
cld
add
mov
or
push
pop
push
jmp
push
nopl
popf
xchg
fnstcw
push
test
movsb
mov
cmp
jbe
sub
cld
jnp
test
adc
jmp
mov
das
or
cmp
lahf
fcmovbe
mov
jne
je
popf
mov
loopne
mov
pop
addr16
push
jmp
sub
aas
sbb
mov
leave
idiv
jg
xchg
adc
mov
adc
into
and
enter
inc
dec
inc
pop
adc
push
ljmp
xchg
push
pop
xor
idiv
sub
inc
pop
mov
es
call
scas
xchg
je
daa
aaa
mov
sub
ret
ljmp
push
xchg
sub
popf
in
out
bound
cmp
dec
test
dec
push
dec
push
lret
push
ss
or
lods
sub
out
xchg
add
ljmp
add
out
mov
push
aaa
push
lcall
and
ljmp
in
pop
lcall
add
insb
loopne
mov
xlat
push
test
mov
jb
cmp
cmp
arpl
cmp
lods
cmp
xor
sti
flds
leave
xchg
shlb
dec
add
outsb
and
or
xlat
jo
out
fisubs
inc
rcr
ret
and
lods
ret
mov
and
mov
out
test
cmp
xor
sbbb
jle
jg
mov
mov
jbe
nop
inc
ret
inc
xchg
pop
into
pop
sbb
jae
sahf
out
insb
out
inc
imul
scas
mov
rorb
mov
ds
pusha
inc
or
mov
lods
mov
hlt
ja
popf
loop
dec
call
testb
jne
sbb
sbb
adc
test
js
loop
mov
mov
fcoml
inc
inc
cmp
les
pop
pop
cld
mov
scas
je
subl
cli
pushf
and
leave
adc
jae
mov
mov
test
mov
sbb
jmp
ja
sub
or
int3
push
fimuls
push
ffree
aam
add
jb
imul
inc
scas
in
mov
dec
std
push
xchg
gs
pop
popa
push
fcomip
jno
lret
ja
lock
loop
nop
lret
or
cs
enter
hlt
jo
out
ljmp
jl
in
and
push
jb
daa
inc
sbb
cltd
repnz
aam
fimull
je
iret
xor
mov
sub
add
gs
pop
bound
adc
dec
into
sbbb
adc
sbb
push
sbb
sbb
cmpl
push
cld
loope,pn
iret
mov
mov
cmp
push
stos
mov
fsubs
out
cli
pop
ja
or
add
cwtl
jmp
out
das
movsl
into
test
cmp
lock
cs
fbld
sbb
mov
adc
inc
mov
std
shlb
mov
pop
mov
dec
cmp
test
test
sub
sub
pop
rorb
outsl
rolb
sbb
and
dec
push
pop
mov
cltd
mov
jl
pop
jo
push
xor
xorb
sbb
popa
loop
ret
or
lahf
xor
mov
call
jae
outsb
or
into
jmp
mov
mov
orl
fmull
inc
loopne,pt
shlb
movsb
and
into
enter
sbb
ds
lds
xor
int
adcb
adc
or
fs
loopne
shll
adcb
rcll
add
test
adc
sub
pop
pushf
lds
iret
cmp
scas
jbe
cmpsl
loop
hlt
push
cmp
es
push
int3
mov
rcrb
push
inc
dec
stos
sbb
cmp
movl
adc
out
xchg
jo,pt
push
lret
lea
mov
popf
inc
pcmpeqw
mov
xchg
mov
gs
loop
popf
sub
clc
sub
fs
test
out
inc
sbb
xor
ljmp
daa
mov
les
jge
xor
xor
call
add
fidivrs
mov
push
in
mov
rcrl
or
ljmp
and
dec
mov
dec
mov
and
stc
dec
int
add
jg
sbb
pop
jl
xor
push
xchg
push
dec
jge
iret
rolb
movsb
callw
je
cmp
gs
jl
sbb
xor
pop
xchg
out
cmc
andl
mov
lret
repz
jo
dec
leave
stos
push
loope
lret
mov
out
jmp
aas
iret
xchg
cmp
jbe
mulb
popa
mov
xchg
clc
push
or
mov
movsl
outsl
dec
mov
jmp
cld
sahf
push
pusha
xor
loope
ja
cmpsb
mov
mov
outsb
jae
stc
jge
iret
sub
cmp
add
ret
mov
dec
int3
lea
pop
ljmp
xchg
inc
add
add
fildl
int3
sub
pop
push
rcr
and
mov
xchg
adc
xchg
mov
jg
cli
imul
jmp
inc
repz
lret
iret
mov
cmpsb
mov
subl
mov
xor
nop
jo
sub
xlat
test
loope
pusha
shll
pop
popa
sub
lret
daa
test
lea
mov
das
in
mov
iret
fstpt
mov
pop
sbb
sub
loope
pop
pop
fistpl
jb
inc
test
repz
dec
inc
bound
in
jne
cmpsl
leave
mov
jecxz
aas
sub
cltd
cli
push
inc
mov
sub
xor
pop
loop
insb
divb
out
jle
cmpsb
test
std
push
xor
mov
nop
std
xchg
lret
mov
jae
inc
jae
lock
stc
gs
pop
mov
cmp
int
aas
adc
cmp
in
jnp
decb
inc
pop
pop
push
and
outsb
sbb
add
or
push
dec
inc
rclb
adc
int
push
sub
pop
jae
movsb
lds
and
pop
mov
xchg
dec
out
jmp
pop
scas
call
xchg
cli
inc
loop
pop
imul
adc
push
dec
test
movsb
jns
outsl
jecxz
jl
xchg
jp
mov
push
mov
ljmp
inc
jl
pop
ds
mov
sub
fcmovnu
test
andb
xchg
push
mov
aam
popa
scas
std
inc
out
sub
adc
shr
mov
rorl
xor
or
adc
inc
fisubs
inc
or
or
pop
mov
cmpsl
ja
or
test
sub
cld
xchg
push
xchg
pop
ja
insb
in
dec
decl
in
jge
lea
repz
inc
and
push
adc
repnz
xor
stc
gs
xor
insl
gs
daa
jge
lret
in
inc
mov
adc
adc
push
adcb
xor
push
and
repz
pop
clc
iret
mov
add
mov
shll
xchg
mov
bnd
push
push
ja
sub
ss
pop
mov
pop
shlb
mov
dec
rcrb
sub
cwtl
xor
and
lea
mov
mov
mov
cmpl
xchg
out
repnz
mov
fmul
mov
or
sarb
in
and
inc
xchg
icebp
sbb
xor
pop
lahf
dec
push
mov
jno
xlat
aam
add
cmp
or
jne
adc
cltd
inc
adc
push
cli
adc
xchg
sub
out
sbb
jbe
dec
sbb
das
loop
pop
sti
jecxz
and
pusha
arpl
push
mov
xor
cmc
movsl
addr16
push
scas
lret
dec
lods
lock
dec
iret
mov
sub
lds
das
lods
mov
mov
fcmovb
scas
insb
cld
dec
jno
cmp
mov
pop
test
lods
rclb
int
shlb
jb
movsb
push
fwait
jecxz
loope
dec
sbb
inc
pop
xor
bound
sbb
mov
aad
add
sahf
insl
push
xchg
lcall
lcall
mov
ret
or
add
inc
imul
shlb
cld
inc
ret
sbb
jne
enter
dec
push
sub
add
xor
iret
lea
in
rclb
jecxz
aad
cmpsb
roll
sub
rcr
push
jle
mov
mov
jo
adc
ds
test
mov
int
inc
dec
mov
lods
call
or
ljmp
jecxz
mov
pop
push
pop
loope
cltd
cmp
xchg
roll
pop
cmpsb
iret
in
std
iret
repz
out
mov
mov
sbb
xor
inc
jge
jne
and
pop
cmp
sbb
shrl
push
add
in
aaa
add
add
aad
inc
and
lcall
xchg
cmp
mov
dec
das
jb
shll
out
add
popf
cld
mov
outsb
mov
fiaddl
jecxz
cmp
xchg
mov
scas
mov
dec
stos
jno
in
daa
pushf
ja
ja
dec
fistl
push
pop
xchg
lock
scas
fmull
hlt
pop
ss
mov
les
ret
cmp
sub
push
cmp
pushf
hlt
sbb
in
outsb
imulb
sbb
cwtl
scas
lret
cltd
leave
jl
pop
je
sarl
mov
scas
fmull
lds
push
push
mov
aam
mov
dec
jmp
dec
mov
ss
stc
aaa
out
adc
js
bound
arpl
add
inc
sbb
loope
mov
inc
clc
push
inc
mov
aaa
and
jbe
xor
sbb
testl
add
push
stc
mov
in
popf
cmpl
push
call
sub
repnz
mov
fidivl
xchg
sbb
add
aaa
imul
rol
repz
lret
add
xorb
cmp
out
arpl
xchg
stc
daa
es
mov
cmpsb
sahf
push
cmp
xor
push
sub
and
ljmp
sti
pusha
testl
arpl
xor
insb
mov
lahf
fdiv
icebp
sahf
out
add
inc
push
ror
mov
rol
popa
adc
in
cs
mov
lret
repz
cmpsl
shrl
pop
jae
into
push
mov
sbb
xor
jnp
aam
cmc
cmp
jg
adc
fstpl
xchg
jecxz
mov
push
stos
lds
xor
fdiv
lcall
dec
xchg
mov
and
outsl
jb
into
loopne
sbbb
iret
mov
lds
jle
pop
mov
mov
pusha
call
and
push
fcomps
sbb
cmp
ja
sbb
and
mov
popa
ficoml
fs
dec
jb
insb
cmp
dec
sub
xor
mov
xor
out
add
sub
icebp
push
ret
xchg
rcrb
pop
test
adc
movsb
push
fisttpll
dec
clc
lock
add
dec
push
pop
mov
imul
inc
lea
pop
rcrb
sub
cmc
pop
mov
fsubrp
add
icebp
fs
pop
push
jl
mov
mov
cmc
pop
fnstcw
out
lahf
test
mov
sbb
push
fidivl
mov
dec
pushf
pop
test
push
sbb
daa
fisubl
mov
cmp
test
fisubl
rolb
jb
xchg
pusha
dec
jae
fnstcw
hlt
gs
js
test
add
ret
push
mov
cmp
out
iret
push
xchg
push
das
loope
cmp
mov
clc
push
leave
nop
mov
fdivrl
xchg
cmp
cmp
shlb
jbe
in
loop
jnp
xchg
inc
enter
adc
mov
sub
or
cltd
inc
lock
pop
sbb
xlat
fistl
cmp
mov
pop
flds
pop
sub
aaa
mov
fucom
in
es
popf
daa
add
lahf
adc
mov
sub
sbb
mov
in
sahf
sbb
test
dec
aas
sbb
adc
clc
fiadds
pushf
inc
jo
lock
movsb
rcr
loop
fnstcw
sbb
inc
rcrb
fcomps
movsl
mov
sarb
call
incb
mov
inc
xor
sub
movsb
shrb
fstl
pushf
out
je
inc
push
push
mov
jle
out
lret
xchg
push
jecxz
inc
loope
or
lds
int3
inc
pop
ja
and
fcomps
mov
hlt
push
jb
lahf
pushf
fs
jae
push
cmp
add
or
test
aam
jl
sbb
sub
jnp
mov
jcxz
cmp
lds
enter
xchg
lret
sub
inc
sbb
jo
repnz
stos
cmp
insl
outsb
sub
jp
xchg
test
hlt
aaa
pop
in
ja
dec
xor
mov
or
je
adc
in
jl
push
repz
pop
push
ficomps
shl
in
xlat
clc
fimuls
or
repnz
pop
clc
push
xor
imul
imul
lods
jg
mov
cmpsl
nop
cmp
mov
aad
cwtl
bound
sbb
jge
rol
pop
jge
mov
xchg
dec
in
sub
out
cmp
lock
cwtl
in
insl
fistps
jl
and
jge
sbb
xor
push
pop
xchg
adc
xor
in
add
out
int
cmp
sbb
dec
fistps
and
lea
dec
rcll
push
stos
or
outsl
stos
mov
out
lds
or
fldcw
add
mov
mov
pop
push
roll
mov
outsl
jno
cmpsl
cmp
jns
jo
jmp
push
lea
xchg
cmpsb
into
xlat
lds
and
stos
lret
fadd
push
out
pop
push
xchg
mov
jmp
and
cmc
pop
insl
xchg
lret
sahf
or
ficompl
cmpb
scas
cmp
out
fisubs
popf
mov
xor
sub
dec
sahf
ljmp
adc
idivl
dec
repnz
lret
push
enter
xchg
outsl
mov
cli
lahf
xor
lret
push
lret
sbb
or
notl
sub
and
adcl
lahf
fcoms
loopne
push
mov
je
iret
repnz
es
addr16
in
shll
xor
pop
sar
or
push
outsl
mov
pop
js
mov
mov
das
dec
rcll
fsubrl
sub
or
sbb
xorb
jns
push
clc
push
ficompl
loop
cs
mov
lret
rorl
bound
ret
addb
mov
cmp
movsb
adc
or
jno
int3
stos
call
sbb
in
mov
cmpsb
mov
jnp
nop
sub
jle
nop
cmp
stos
jge
dec
fsubr
repnz
jle
fs
push
cmpsb
sbb
outsl
jno
test
scas
jb
add
out
jge
pop
xor
les
jo
jmp
jge
ds
test
das
fwait
scas
lods
ret
popa
mov
movsl
push
adc
test
cmpsb
fmul
add
dec
adc
mov
stos
sbb
jg
ds
cmp
lret
in
icebp
sahf
cmp
adc
mov
pop
pop
out
int
sbb
adc
adc
xchg
pop
stos
push
jle
mov
cmc
ja
lock
imull
jb
xor
jnp
div
xor
jns
push
in
push
out
fisubl
ret
xchg
add
xor
repnz
aaa
fildl
aad
imul
inc
xchg
push
xor
pop
sbb
xchg
mov
add
stos
fisttps
out
sbb
and
dec
in
stos
lahf
insb
icebp
sbb
lret
mov
loop
mov
fwait
repz
movsb
fmull
or
inc
aaa
push
jo
cmpsb
sbb
pop
lret
add
out
dec
outsl
and
or
js
xor
sub
sub
jo
sarb
addr16
orl
xchg
ja
xor
and
clc
lods
mov
int3
dec
xchg
adc
push
xchg
mov
daa
ficompl
push
adc
mov
mov
hlt
push
or
ret
rcrl
xchg
pop
or
push
pop
in
pop
mov
mov
lods
nop
in
pop
imulb
mov
daa
je
insb
and
cmp
push
inc
les
cmp
jg
mov
sub
icebp
in
fldt
out
in
or
jnp
mov
add
out
popl
lds
jmp
mov
xchg
sbb
xchg
push
push
lods
arpl
std
stos
mov
mov
icebp
enter
je
pop
xchg
push
xor
push
test
cmpsb
pop
adc
mov
cld
rcll
lock
push
mov
inc
cmp
cmp
sub
aad
pop
sub
sbb
int3
nop
loop
and
push
xor
and
lcall
or
test
mov
push
sarl
lret
out
inc
call
jne
fwait
test
lods
mov
jg
movsb
xor
ret
pop
adc
sahf
fnstsw
movsl
fisttps
test
jnp
loop
lds
lret
scas
mov
sub
mov
aaa
shlb
mov
pushf
and
sbbb
jle
ja
push
movb
out
sbb
jns
out
add
fstpl
xlat
xor
popa
mov
adc
mov
pop
out
dec
dec
xlat
push
fsubrl
scas
pop
hlt
xchg
cwtl
jo
cmp
inc
or
stc
aad
cwtl
sbb
fs
mov
out
mov
push
mov
and
pop
fwait
out
lods
add
mov
lods
shlb
cmovge
in
lea
call
sbb
xchg
adc
in
imul
cs
fstpt
jg
mov
dec
loop
movsb
scas
mov
cmp
add
add
dec
js
and
fdivrs
cmp
mov
sub
adc
cmp
cmp
push
cs
jb
lods
xchg
inc
insb
popf
pop
in
mov
imul
sub
sub
arpl
and
lret
pop
or
sub
call
adc
xchg
lock
and
divb
stos
cld
mov
out
movsb
dec
or
stos
js
xor
hlt
mov
xor
popa
ss
or
pop
test
mov
sbb
jg
outsb
movsb
and
mov
lret
jl
mov
dec
adc
dec
fsubr
sub
loop
dec
dec
repz
out
adc
push
sub
movsl
insl
jge
jp
xlat
push
dec
jp
jae
sub
cmp
rolb
add
iret
add
mov
push
add
xor
scas
mov
xchg
in
sbb
shll
mov
jae
stos
sahf
loop
out
or
jmp
add
in
shlb
mov
fsubr
jns
fnsave
clc
or
jo
lods
loopne
inc
push
pop
stos
cmp
xchg
jle
push
movsb
sbb
and
negb
adc
aam
data16
add
pop
or
adc
test
push
jo
mov
mov
outsl
and
int
xor
std
je
xor
test
lock
sarl
add
push
sbb
adc
std
popa
sahf
mov
push
aaa
sbb
icebp
jno
adc
mov
mov
stc
divl
xor
iret
jl
inc
subl
fisubrl
add
push
pop
pop
hlt
repz
sub
les
inc
add
in
mov
mov
jle
cmpxchg
adcb
ja
or
xor
je
dec
imull
and
mov
jno
dec
int
xchg
xlat
les
cld
jae
inc
jmp
inc
popa
frstor
repz
cmp
dec
lods
jnp
lods
pop
mov
repnz
imul
sbb
and
and
inc
dec
outsb
js
cmp
fs
repnz
adc
loop
jle
fiaddl
pop
int
mov
lret
xor
scas
std
leave
mov
adc
shrl
js
inc
cltd
xchg
fisttpll
clc
mov
inc
jg
rcl
mov
cmp
insb
fnstcw
mov
leave
stos
sub
xchg
test
pop
pop
fimull
leave
in
sbb
loopne
push
lcall
pop
add
jns
inc
mov
inc
in
xor
imul
sub
cltd
mov
dec
enter
mov
add
popa
nop
add
nop
xchg
and
xchg
xor
mov
insl
push
mov
dec
sbb
dec
push
pop
xchg
clc
push
fadds
sahf
ljmp
jbe
add
and
lods
adc
ret
je
jp
push
popf
jnp
lret
push
add
cmc
mov
pop
addr16
and
cmp
cmp
cmpsl
out
adc
jae
dec
dec
inc
in
sbb
mov
fidivrs
sub
sbb
enter
and
inc
bound
cli
fdivrp
dec
sbb
pushf
mov
mov
sti
and
ss
adcb
or
orl
and
lds
cld
out
or
fucomp
test
or
out
daa
lcall
jbe
and
pop
cld
jno
lahf
sbb
push
sahf
sbb
xor
cmp
outsb
xchg
test
pop
int
std
add
test
outsl
pop
pop
inc
or
xor
les
sarl
add
xor
orb
aam
data16
inc
xor
int
into
mov
test
jmp
bound
in
jge
ss
push
sbb
and
mov
push
data16
icebp
sub
adc
pop
and
out
sub
bndstx
lds
insb
push
jns
aam
mov
push
push
push
pop
xor
out
leave
pop
mov
fildll
test
pop
push
call
adc
sahf
sahf
xchg
jmp
test
add
cmp
pop
or
inc
insl
fisttps
cmp
movsl
push
pop
mov
jp
addr16
test
int3
pop
mov
sti
push
push
gs
enter
ja
dec
icebp
push
fisubrs
add
and
cmpb
sub
mov
repnz
es
imull
movsb
or
xchg
jmp
push
sbb
add
pop
push
decl
enter
cltd
inc
mov
push
mov
loopne
sahf
js
push
cmpsl
fstp
sub
or
xchg
dec
fnstcw
push
jb
sarl
sahf
fst
xlat
notb
addr16
push
or
jmp
cmp
inc
push
fcmovbe
sub
gs
cmp
shl
rolb
xor
sbb
insl
inc
and
pop
es
pop
cmp
dec
daa
test
and
pushf
mov
sub
enter
int
mov
push
dec
gs
out
adc
clc
loop
je
ret
out
push
jl
jne
insb
rolb
test
adc
push
cmp
ja
push
push
jae
mov
lods
mov
dec
fildll
iret
mov
mov
xor
out
xchg
sbb
scas
pop
mov
xlat
movsb
mov
aaa
pop
stc
loop
jl
mov
jns
sbb
xor
mov
loop
ret
mov
arpl
pusha
mov
cmc
cmpsb
cmpsl
push
mov
push
lock
sahf
ficomps
int
mov
sub
xchg
sarl
inc
es
mov
hlt
insb
mov
std
hlt
and
lcall
sbb
ljmp
mov
loope
xchg
les
ret
mov
cmp
pop
repz
aam
inc
dec
insl
fstl
push
push
leave
sub
lds
stc
dec
push
clc
add
int
imulb
lahf
and
xchg
outsl
pop
xchg
repnz
sub
out
out
sbb
and
adc
sbb
and
fldl
test
dec
adc
mov
fstps
movsb
mov
pusha
mov
dec
pop
and
lds
pop
pushf
enter
cmp
jmp
pop
xor
dec
xor
notl
mov
mov
mov
mov
pop
push
aam
inc
aas
xchg
shl
mov
mov
lock
push
mov
and
into
sub
subb
and
sbb
es
pop
pop
mov
inc
lds
cmp
and
mov
pusha
mov
addr16
into
jp
shrb
sub
or
sub
out
xchg
sub
lret
add
inc
sbb
loopne
mov
pop
sub
adc
div
lock
jp
ret
sbb
jmp
pushf
jns
add
pop
fsts
push
sub
xchg
sbb
push
cmp
and
sbb
xchg
adc
test
testb
add
cmp
mov
repz
dec
pushf
insl
lret
cmp
xchg
mov
inc
ficomps
test
or
and
adc
cmpsb
mov
pop
and
pop
repz
notl
dec
aas
cmp
dec
mov
jb
fistpl
or
dec
lock
sbb
in
pop
mov
and
adc
xchg
xor
shll
ljmp
pop
pop
mov
sbb
repz
shrb
cmp
adcb
int
mov
in
add
and
addr16
dec
xchg
inc
lods
aas
lahf
sub
mov
lahf
movsl
inc
mov
pop
and
xchg
test
insl
loop
fwait
andl
imulb
adc
mov
ss
jmp
aaa
nop
mov
xchg
aas
aas
push
cwtl
popa
aam
mov
mov
inc
push
out
int
mov
es
lahf
dec
jae
mov
push
lcall
mov
dec
loope
sbb
stos
or
gs
test
cld
mov
sub
cltd
push
sbb
dec
loopne
aad
add
dec
sbb
xor
out
imul
movzwl
or
popa
fwait
mov
pop
pop
mov
xchg
movsb
push
ret
lods
mov
cmp
xlat
pop
jmp
adc
arpl
test
cmp
push
dec
and
dec
fisubrl
hlt
lret
arpl
jp
push
fildl
cld
adc
push
jp
jnp
and
cmpsl
or
jl
adc
inc
insl
sbb
je
cwtl
jp
fwait
int3
in
aam
push
xchg
add
adc
xchg
cmpsl
or
aas
xor
inc
dec
push
insb
xchg
dec
loopne
shlb
push
iret
cmp
sbb
inc
push
int
dec
popa
push
mov
subl
add
sub
push
ret
sub
leave
jg
fisubrs
xor
repz
pusha
call
and
pusha
push
jl
cmp
push
cmpsl
notl
enter
adc
mov
cli
mov
test
bound
pop
dec
jne
inc
jg
jle
andl
stc
jne
addl
dec
int
fists
testb
xchg
iret
mov
mov
into
outsl
add
aam
pop
inc
xchg
pop
mov
sub
mov
mov
cld
frstor
cmp
lret
aas
ljmp
adc
xchg
jns
fimull
xlat
mov
rcrb
outsl
mov
pop
add
roll
cmp
pop
in
sbb
push
pop
loop
mov
sub
inc
xor
push
sub
xor
arpl
inc
loopne
in
sahf
shll
mov
sbb
adc
inc
mov
cli
adc
lods
fidivrl
jns
mov
mov
mov
sub
dec
paddd
movsw
out
pusha
and
pop
lock
pop
push
xor
add
mov
xchg
cmc
pushf
ret
xor
sbb
push
or
dec
and
data16
and
jae
mov
pop
adc
fsubr
movsb
sbb
int3
inc
mov
lods
sbb
or
out
add
andps
sbb
mov
pop
nop
inc
sti
cltd
rcll
dec
mov
and
stc
cmc
sbb
insl
pop
mov
divb
lds
insb
and
mov
xchg
aaa
pusha
sbb
jnp
jo
or
hlt
jle
jno
hlt
test
hlt
aaa
and
lret
dec
fdivs
push
imulb
enter
imul
mov
push
gs
jecxz
adc
stos
add
ret
xor
inc
popl
clc
jb
jecxz
stos
and
sub
mov
mov
xor
imul
sbb
fmull
and
rcrl
and
fcomi
into
pop
int3
icebp
into
pop
dec
mov
dec
aad
cwtl
testb
xchg
xor
jp
cmp
fldl
and
iret
fisttpl
jns
je
clc
adc
jns
jp
fs
stos
push
aas
dec
icebp
lods
fimuls
je
cwtl
sbb
xchg
fcomps
and
int3
cwtl
inc
lret
lds
and
addr16
mov
mulb
xlat
and
or
fiaddl
in
cwtl
push
cmp
rcr
mov
shlb
fdivr
imul
sub
or
xor
xor
in
das
sub
and
and
cmpsl
xchg
sbbl
push
jno
sbb
clc
daa
ret
dec
sbb
push
dec
dec
mov
sbb
fldcw
js
mov
leave
loope
nop
ja
test
mull
mov
movsb
adc
imul
repnz
mov
sbb
cli
test
cmc
add
pushl
adc
mov
jo
jno
test
ljmp
push
insb
and
adc
push
and
xor
lds
arpl
fyl2xp1
and
in
jp
jle
fucomi
lea
clc
add
push
lods
stc
dec
mov
das
xlat
xchg
sub
inc
ds
xchg
xor
lcall
fbld
push
mov
pop
push
mov
insl
stos
outsl
cmp
mov
repz
push
and
dec
sub
pop
repz
jne
cmc
lret
rcl
push
pop
xor
sti
addr16
inc
cltd
sub
pop
inc
adc
push
sbb
push
mov
and
push
sbb
out
ftst
icebp
push
mov
jno
or
mov
jae
mov
js
sbb
jl
iret
xor
test
mov
sahf
xor
stos
mov
xor
int
add
test
sub
test
mov
mov
mov
mov
dec
inc
fstpt
int
lret
popf
mov
lods
stos
cmpsl
pop
adc
jnp
out
push
mov
xchg
mov
shl
push
insl
aaa
loopne
xchg
inc
xor
xchg
nop
jb
dec
mov
push
pop
add
fcoms
dec
lret
cld
mov
mov
les
cmpl
cmp
sahf
mov
jecxz
or
pop
xchg
mov
mulb
fldl
inc
shr
lea
call
ret
fiaddl
mov
xchg
aaa
hlt
lcall
cmp
int
mov
pop
aam
daa
aad
sub
aas
or
mov
lods
stos
mull
out
mov
cmp
jb
xchg
cmp
gs
xor
das
lods
cmp
ret
and
pusha
popa
inc
lahf
mov
xor
ss
loop
push
pop
sti
sub
fs
cli
loope
adc
lret
arpl
cli
cs
les
mov
or
xchg
lea
jp
or
jae
ljmp
add
dec
seta
pop
xor
cmp
ja
loope
cmpsb
mov
add
sub
adc
push
bsf
xor
cmpsb
jae
push
out
insb
mov
imul
sub
clc
xor
inc
jle
sub
push
adc
cld
rorb
sarl
movsl
out
fmul
cmp
pop
fs
or
dec
xor
mov
dec
mov
andb
inc
xor
sub
cmp
outsb
lahf
cli
js
iret
js
push
mov
cmp
xor
mov
xchg
loopne
and
xor
pop
jae,pt
fisubrl
jle
hlt
adc
cmp
test
sar
insb
sub
pushf
jp
push
sbb
lock
adc
xchg
pusha
pop
imul
or
push
xor
lods
stc
mov
lahf
pushf
and
in
repnz
sbb
cwtl
nopl
push
pushf
into
scas
gs
sub
xchg
sub
dec
int
mov
mov
push
shrl
inc
mov
ds
push
xchg
fisttpl
andb
out
pushf
lret
outsl
pop
ljmp
repnz
stos
cltd
cld
pushf
adc
pop
lret
ret
rcl
or
sbb
enter
inc
or
pop
enter
sbb
data16
inc
mov
mov
inc
sbb
xchg
jb
push
andb
cmpsl
clc
pop
fldt
dec
fisttps
or
nop
mov
or
push
les
aaa
mov
and
in
lods
xor
outsb
and
xchg
sub
scas
dec
xchg
stos
mov
push
sub
xlat
lock
cmp
mov
mov
fnsave
cmc
std
fcmovb
inc
in
lret
xchg
pop
and
adc
mov
rcrl
xchg
and
clc
lods
outsl
sbb
push
fwait
fwait
bound
jge
int
push
aas
jle
xchg
ljmp
int
xchg
jmp
add
outsl
popf
push
imul
inc
xchg
lea
jecxz
into
clc
push
cs
pushf
cwtl
data16
mov
es
popf
ret
jbe
gs
arpl
cmp
ret
inc
lcall
iret
mov
outsb
in
mov
mov
aaa
push
or
orb
push
repz
aaa
and
pusha
imul
out
sub
add
xchg
dec
xchg
jg
repnz
jno
in
jle
and
inc
cmp
pop
dec
dec
outsb
dec
xlat
push
inc
or
mov
jmp
les
sbb
pop
inc
xorb
mov
jl
sbb
inc
mov
push
xchg
dec
lods
cltd
shll
add
or
mov
cld
xchg
sti
data16
push
fdiv
adc
fbstp
movsb
inc
mov
sub
mov
dec
jg
lahf
jno
sub
mov
ss
sbb
xchg
inc
sti
jge
xchg
sub
adc
cs
xor
pop
dec
push
fcoms
les
fmull
sub
mov
shrb
call
xchg
mov
stos
outsl
jmp
pcmpgtw
stos
or
fnstenv
mov
push
xchg
push
addr16
pop
ja
lods
or
into
lahf
jle
adc
out
mov
aas
shll
ds
fbld
inc
add
out
xor
ret
xchg
inc
sub
dec
mov
xchg
push
dec
cmpsb
jb
fmuls
leave
mov
or
lods
andl
add
xchg
cmp
push
push
loopne
mov
cmp
cmp
dec
dec
repz
add
ds
jge
cwtl
or
xchg
jne
pop
push
mov
push
dec
clc
shrl
stos
imul
orb
push
imull
adc
fs
xchg
jl
and
in
dec
mov
mov
xor
call
repnz
lahf
jecxz
and
inc
adc
lods
pop
fsubs
push
sbb
mov
pop
popa
sarl
nop
pop
in
pop
or
dec
push
pusha
push
add
addb
ret
sub
rcll
xchg
mov
repz
jb
inc
pop
mov
mov
in
push
and
inc
in
rorl
into
cmp
loop
cmp
jae
iret
imul
mov
xchg
adc
lret
pusha
out
in
lcall
and
insl
mov
incb
pushl
adc
pop
mov
jne
mov
pop
leave
pop
push
mov
mov
rclb
push
dec
xchg
fidivrs
xchg
jge
pop
popf
outsb
sbb
sbb
xlat
outsl
cmpsl
pushf
adc
add
add
xchg
js
sbb
dec
cwtl
xchg
int3
xchg
ja
sti
and
test
lret
add
and
inc
pop
daa
sti
insb
sub
jge
push
sbb
mov
and
jns
cltd
insl
out
adc
xchg
inc
adc
push
sahf
pushf
jae
xchg
xchg
jae
cs
xor
and
out
mov
je
js
dec
mov
into
push
ja
in
movsb
nop
dec
and
push
int
inc
in
jb
push
adc
push
lahf
add
cmp
cmpsb
fsubl
test
test
rclb
push
add
lret
out
addr16
mov
adc
test
xor
lods
fsubl
int3
mov
mov
and
jg
test
fwait
imul
cmpsl
data16
jmp
je
sub
out
and
out
add
stos
sbb
adc
and
xor
adc
xchg
cli
roll
and
arpl
pop
or
lahf
xor
inc
out
jnp
xor
xchg
sub
movsl
mov
xor
or
sbb
loopne
lods
xchg
je
shl
jg
pop
dec
and
jmp
sbb
pop
pop
cmpsl
pusha
xchg
cmp
pop
lahf
xchg
mov
mov
imul
mov
jae
and
and
sub
test
mov
dec
in
push
or
xchg
jae
divb
cmp
dec
test
add
test
xlat
mov
into
sub
ret
and
mov
jecxz
push
adc
aad
inc
les
cld
int3
mov
xchg
mov
sub
daa
shl
sbb
outsb
cmp
fcomps
pushf
cld
lcall
dec
inc
iret
xchg
dec
xchg
data16
iret
push
mov
outsb
xor
fcmovnbe
cmp
inc
mov
xlat
or
cmp
subb
out
lretw
cmpsb
cmp
pop
ret
scas
clc
jnp
sbb
or
lods
ss
xchg
mov
mov
push
add
shrb
and
ss
adc
xor
push
pop
into
push
popa
xchg
stos
sbb
mov
iret
lahf
loop
and
inc
sbb
jns
xchg
mov
fisubrl
adc
jno
push
inc
jmp
sarb
popf
les
add
movsl
out
jbe
scas
scas
roll
sarl
inc
aas
jecxz
shlb
scas
sub
cli
cs
sub
fstl
sub
in
adc
and
std
dec
fisubrs
ljmp
inc
aam
shll
push
cmp
mov
loopne
imul
sbb
adc
aad
sbb
sub
jle
sbb
mov
adc
pop
sub
mov
add
addr16
dec
shlb
mov
dec
jg
add
adc
inc
mov
push
inc
push
shr
cmpl
adc
adc
shlb
sub
call
js
mov
cmpsl
test
jo
mov
mov
cwtl
jnp
stos
andb
data16
in
cli
xchg
dec
xchg
out
and
xchg
sbb
push
iret
dec
dec
and
dec
xor
jae
cmpsl
jo
sub
enter
sbb
scas
lcall
ffree
stos
xchg
adc
xor
mov
outsb
jbe
mov
push
ret
outsl
cltd
rolb
inc
fidivrl
ljmp
inc
das
jl
fwait
add
out
stc
jne
daa
lods
jle
test
jo
inc
mov
mov
pop
dec
push
cwtl
pop
shr
adc
push
jne
push
inc
push
sarl
leave
hlt
mov
ss
in
arpl
outsb
inc
imul
sbb
cwtl
xor
inc
stc
and
scas
dec
xchg
loope
mov
clc
into
xchg
add
mov
sti
packsswb
sub
dec
cld
xor
lea
fidivl
cs
push
inc
jb
mov
or
push
xchg
pop
mov
mov
rclb
lds
and
mov
scas
sbb
mov
sbb
sub
push
jns
push
aam
inc
fstpt
and
cmpb
test
in
test
jno
dec
push
inc
ret
cli
mov
xchg
fsub
pop
pop
cmpsb
imul
jne
mov
mov
mov
icebp
in
shrl
mov
and
mov
mov
pop
mov
mov
inc
aaa
cmp
fbstp
pop
aas
sbbb
adc
lcall
inc
arpl
shr
dec
cmpsl
popa
xchg
pop
outsb
mov
test
leave
pushf
test
leave
mov
int
xchg
setae
pusha
push
aas
sub
sub
fstps
aas
jmp
sub
add
test
sub
lahf
pusha
mov
hlt
pusha
xor
inc
jge
xchg
lahf
mov
mov
out
aam
ljmp
fadd
rolb
gs
sbb
pmullw
daa
in
shr
movsb
push
and
adc
daa
insb
pop
push
push
add
stos
ret
dec
mov
sbb
xorb
mov
dec
sub
les
sub
cmp
sbb
mov
jge
xchg
mov
nop
inc
mov
outsb
fdivrl
pop
dec
sub
jge
fcmovnbe
mov
xor
fistps
mov
cmc
mov
test
dec
cmpsb
and
pop
cli
ret
faddl
jnp
fidivrl
jecxz
ss
add
inc
mov
daa
mov
clc
jns
dec
lea
mov
fwait
pop
cwtl
fstps
sbb
jb
push
sbb
stos
push
inc
popw
fisubrl
mov
xchg
sub
cmpsb
fwait
push
out
enter
mov
jmp
out
adc
jecxz
repnz
jecxz
xlat
inc
dec
inc
xor
cmp
int
mov
and
pop
rorl
pop
fldenv
call
fldcw
lods
popf
imul
jecxz
testl
pop
mov
mov
fcompl
mov
and
jbe
jb
sbb
adc
in
push
fwait
mov
mov
sarb
mov
xchg
dec
mov
aad
or
cmp
push
dec
repz
stos
loop
sbb
in
arpl
sub
andb
lods
cmp
add
mov
or
cmp
inc
sahf
leave
sbb
pop
insb
adc
mov
out
lea
mov
xor
data16
std
cmp
js
fcomip
fisubl
push
mov
dec
jmp
mov
aaa
cltd
fcoms
push
int
cmpsb
cld
and
jle
xchg
mov
push
dec
mov
xchg
shlb
jp
loopne
fstpl
ficoms
sbb
fadds
xor
push
ss
ja
out
jbe
push
loopne
popf
popfw
mov
stc
inc
daa
lahf
movsb
cmp
xor
dec
lock
and
dec
insb
cltd
xchg
adc
push
shl
cltd
mov
js
or
xorb
or
mov
mov
testl
pop
aad
nop
and
push
hlt
notb
ficomps
insl
cld
inc
std
sub
jge
sub
cltd
xchg
jns
jecxz
mov
call
rol
pushf
xor
addb
cmc
es
movl
imull
xlat
mov
ret
popl
sub
in
dec
add
xlat
and
sub
aas
jnp
mov
fidivs
popa
push
mov
push
in
mov
sub
out
cld
in
add
shl
jbe
dec
pop
mov
fildl
fdivrl
fdivr
ljmp
cwtl
sbb
xchg
mov
aam
sbb
fisttpl
popf
call
cli
sar
cmp
cli
fdivr
les
mov
movsl
adc
mov
mov
sub
cmp
rolb
and
xor
in
jnp
sbb
xchg
scas
inc
enter
jns
push
les
mov
int
loopne
cmp
mov
jp
lea
cli
adc
mov
sahf
sbb
sbb
adcl
shlb
lea
pop
test
inc
mov
fsubr
mov
mov
enter
ret
inc
inc
mov
sahf
push
jmp
enter
jge
jl
dec
je
fmul
das
jp
dec
add
push
push
mov
push
xorl
push
imul
xchg
dec
mov
arpl
mov
or
sbb
lds
cli
js
out
push
in
sub
jne
movsb
mov
or
xlat
xor
jns
stc
sub
test
into
and
push
mov
adc
push
jecxz
iret
inc
or
jnp
addr16
lds
bound
pop
or
lock
adc
jns
mov
or
dec
inc
pop
jp
jmp
push
push
les
outsl
add
in
sub
push
notb
rcll
aas
jl
idiv
inc
stos
sbb
mov
movsl
mov
into
adc
or
sbb
js
adc
nopl
rcrl
sbb
push
push
jmp
xchg
addr16
lods
dec
jg
arpl
dec
stos
mov
push
add
mov
shrl
loopne
fwait
pop
add
cmp
std
and
std
mov
xor
int
nop
sarb
bound
jge
jbe
and
insl
nop
mov
in
int3
dec
jle
push
aaa
sub
sub
fsubrs
or
sar
push
into
xchg
ss
mov
and
jge
loop
dec
push
add
push
ss
xchg
xor
push
push
or
aam
mov
xchg
pop
push
xor
pop
out
stos
xchg
jmp
ds
sbb
mov
jno
popl
fdivp
sbb
daa
out
inc
adc
call
mov
inc
test
cli
into
and
mov
fisttpl
hlt
sbb
int
xchg
or
cmp
enter
or
inc
mov
aas
test
mov
hlt
pushf
fists
mov
rcr
sub
hlt
xchg
push
xor
daa
aaa
sub
xor
pop
pusha
xor
test
add
inc
push
pop
ficoms
hlt
inc
cltd
je
push
cwtl
outsb
repz
sub
sub
inc
sbb
imul
fsubp
mov
js
and
cmpsl
fadds
xchg
adcb
mov
pop
mov
jb
mov
and
int3
lret
lods
add
cmp
dec
insb
cwtl
mov
cs
notb
jecxz
push
fstps
lahf
inc
test
push
pop
inc
inc
rorb
out
andb
mov
cmp
or
fmuls
inc
xor
add
insl
mov
loop
sahf
pop
xor
jg
mov
lods
pop
lret
jg
push
add
and
cmp
mov
add
mov
pusha
jae
lcall
mov
ja
ret
rcll
clc
bound
leave
mov
test
gs
inc
pop
fsts
cmp
data16
push
pop
gs
dec
add
js
out
push
dec
sub
inc
or
pop
imul
sub
pop
out
jmp
rorl
je
cld
or
into
push
and
js
xor
adc
rcrb
jb
fdivp
xchg
or
out
push
adc
add
imul
jl
xchg
adc
sbb
lahf
inc
adc
cmp
mov
arpl
fisubl
jne
mov
fstps
pop
or
add
inc
mov
sbb
mov
adc
test
int
out
aam
sbb
or
cmp
adc
pop
sbb
popf
cmp
sub
addb
stc
adc
cli
and
mov
cmpsl
cs
dec
scas
js
push
movl
jbe
lret
dec
push
cltd
ror
jle
in
pop
or
in
pop
jge
enter
xor
nop
xor
aad
pop
adc
leave
dec
pop
fwait
cwtl
push
rorb
cmp
push
push
mov
sub
xor
repnz
xor
adc
and
cmp
inc
mov
mov
mov
aaa
repnz
loope
sahf
mov
xor
mov
bnd
jl
fdivs
fisubrs
gs
mov
cmp
pop
xchg
inc
dec
sub
js
imul
cs
in
arpl
add
jbe
lock
sbb
add
lods
ret
sbb
fisttpll
repnz
call
add
or
lods
sbb
adc
arpl
xchg
add
addr16
cmp
push
add
mov
scas
sarl
scas
pop
cmp
psubsb
sub
xchg
sarb
jno
pop
xchg
adc
pop
or
xor
lea
sub
sub
ljmp
leave
inc
xor
mov
fistpl
push
mov
mov
mov
or
or
jp
cmp
dec
sbb
dec
repnz
xchg
sub
cmpsb
push
and
les
inc
dec
cmpsl
loopne
std
aaa
sarb
cmp
add
push
xor
and
sub
jp
cmc
xchg
pop
mov
xor
xor
sti
rcrl
push
dec
xor
dec
mov
sub
mov
adc
and
out
xchg
aam
popf
xor
test
or
and
push
mov
ret
js
out
adc
mov
jo
ret
test
data16
mov
adc
sbb
mov
adc
ds
push
dec
pop
rcl
iret
cmp
xchg
push
sub
lods
mov
or
or
icebp
mov
nop
pushf
add
xchg
cmc
int3
je
sarl
jnp
push
push
enter
pop
out
daa
push
lock
shr
push
lret
cwtl
out
and
out
adc
xchg
mov
pusha
mov
mov
xor
pop
fidivs
js
xor
les
xor
push
jge
inc
imul
sub
and
fdivs
pop
pusha
xor
add
mov
xchg
inc
pop
and
sbb
imul
insb
xchg
jae
or
or
js
push
xor
movsb
outsl
ljmp
fmulp
sub
bound
rolb
sbb
cmp
sti
xchg
dec
sbb
fisttpl
mov
ror
aam
es
mov
movsl
leave
xchg
icebp
mov
fwait
push
adc
in
cmp
test
loop
dec
jb
inc
cli
bound
subl
mov
jge
xchg
outsb
pop
cmpb
mov
adc
mov
hlt
mov
adc
push
inc
inc
and
jb
adc
jo
xchg
sub
pop
pop
pop
mov
pcmpeqb
xor
lcall
sbb
notl
testl
sub
jno
pushf
mul
std
aam
popa
les
xorl
mov
inc
cmp
inc
mov
push
mov
and
dec
repz
or
test
orl
fs
add
fnstsw
ss
mov
call
outsl
aam
mov
mov
mov
clc
push
push
xorl
enter
push
pusha
fmull
sbb
rolb
lods
mov
push
sub
dec
int3
or
fsubs
repnz
lea
adc
and
movsl
sub
and
out
rcrl
out
outsb
push
outsl
scas
push
jns
mov
push
fcoml
pop
lret
int
mov
mov
sub
es
sahf
js
and
test
jno
pop
sbb
cmp
das
lcall
push
in
nop
sub
jg
nop
mov
fiadds
loopne
test
ljmp
adc
jecxz
cmp
lret
arpl
and
sbb
inc
outsl
scas
jg
pop
xchg
repz
repnz
adc
jae,pn
mov
sbb
movsl
dec
or
inc
fildl
sbb
shlb
negl
scas
sbb
aaa
rorb
bswap
push
leave
cltd
pop
dec
pop
cmp
repz
pop
mov
sub
pop
lret
cmp
out
adc
jb
push
inc
sbb
pop
out
stos
mov
or
cwtl
adc
sbb
test
sub
or
cwtl
bound
movsb
test
dec
pop
dec
and
mov
arpl
or
mov
cmp
pop
sub
jnp
adc
stos
bswap
adcb
rol
jp
out
test
fldt
loopne
testb
dec
push
pop
sbb
push
jecxz
cld
sahf
aaa
in
lret
int
fisttps
mov
sbb
ret
jecxz
add
adcb
cltd
fwait
outsl
movsl
xor
jbe
mov
pushf
enter
jge
pop
jmp
test
and
cltd
in
and
mov
adc
cli
cmp
sbb
js
sub
mov
pop
add
clc
add
fwait
cmpsb
in
int
aad
xorl
dec
jne
or
xchg
lret
mov
int3
and
rcl
jmp
dec
pop
mov
dec
and
aad
dec
mov
mov
iret
mov
pop
std
lret
dec
jle
push
and
mov
nop
inc
mov
sub
add
out
cli
adc
out
and
sbb
xchg
outsb
inc
out
inc
int3
adc
stos
xchg
cwtl
xor
pop
cwtl
mov
or
pop
test
pop
push
idivl
sbb
and
idivl
inc
or
shlb
out
shl
std
ds
xor
adc
scas
fiaddl
fisttpll
lods
jge
push
mov
shrl
sarb
push
stos
dec
pop
dec
enter
insl
pop
or
jmp
xchg
clc
loop
or
pop
and
out
mov
pop
push
or
inc
adc
lret
fidivrs
pop
out
aaa
popa
and
mov
xchg
mov
mov
mov
mov
xchg
ljmp
mov
or
xchg
push
std
and
sbb
xchg
scas
jnp
jb
loop
mov
inc
bswap
rcll
iret
adc
imul
loope
mov
mov
out
cmp
inc
xchg
int
js
dec
and
sub
xchg
sub
jmp
mov
fdivrl
jne
add
fnstcw
popa
xchg
pop
movsb
lcall
repnz
mov
imul
inc
cwtl
pop
or
inc
sbb
ret
jns
in
sub
out
or
pop
scas
mov
xor
lahf
pop
cli
mov
ss
cmp
xlat
aam
mov
push
ja
cld
push
jns
or
dec
jmp
jge
mov
cmpsb
pusha
cmp
shrb
daa
clc
clc
lds
jg
push
sub
cmp
jmp
push
push
dec
pushf
lret
mov
push
dec
jmp
daa
adc
mov
push
xchg
pop
les
cmpsb
fisttps
cmp
add
in
mov
inc
jmp
cmp
and
jge
out
les
vpminsb
mov
iret
mov
or
aas
lods
les
jle
adc
xorl
jbe
shrb
sub
inc
adc
sbb
xor
xchg
and
movsl
sub
add
decl
dec
mov
cwtl
or
icebp
xchg
clc
arpl
mov
fs
test
ja
cmp
ret
jne
insb
add
popf
dec
lcall
push
push
dec
lcall
adc
jae
cs
iret
mov
int3
jno
mov
pop
dec
clc
imul
inc
mov
mov
sub
mov
pop
xchg
push
fcoms
pop
mov
or
push
cmp
push
pop
mov
sbb
pop
fxtract
nop
lcall
shlb
js
popf
xlat
pop
je
aad
cmp
shrb
xlat
mov
push
imull
jbe
repz
das
andl
idiv
inc
popf
inc
fcomps
lods
cltd
out
inc
popf
mov
ret
in
sub
inc
pusha
sarb
fisttpll
cwtl
sbb
cs
addr16
mov
cli
sbb
mov
loope
sbb
lds
sbb
mov
pop
mov
aas
mov
cmpsb
lods
in
cmp
movsbl
das
movsl
repnz
enter
imul
int
imul
jmp
and
add
pusha
xor
into
testb
dec
subl
xchg
lcall
push
push
leave
pop
lret
aad
mov
and
rclb
inc
add
sbb
pop
movsb
sti
jge
bound
jne
ffreep
call
stc
lds
pop
lods
jo
nop
insb
jo
fistps
dec
loopne
outsb
lahf
sbb
icebp
jmp
cmpb
pop
xchg
nop
push
repz
dec
insl
jge
and
push
dec
outsl
cmp
mov
data16
xchg
sbb
movsl
add
jns
push
xchg
add
imul
hlt
daa
aad
jae
fsincos
insb
sahf
push
add
fsubr
inc
push
adc
sub
pop
cmp
in
jle
pop
sbb
dec
pusha
mov
mov
je
mov
jl
cmc
jno
les
add
rep
sub
jl
test
dec
or
dec
cltd
inc
dec
cmp
xchg
shrl
mov
dec
xor
orb
nop
shlb
or
jo
fildll
mov
inc
movsl
mov
sbb
test
jge
push
nop
add
shll
mov
mov
jns
ja
jl
mov
arpl
push
scas
inc
pop
test
je
das
mov
sub
adc
pushf
push
js
jbe
testb
fisttpl
cmc
jnp
bound
adc
sbb
stos
cmp
adc
cmp
xor
push
or
mov
fcomi
mov
sub
jb
sub
enter
stos
adc
add
xchg
into
cmpsb
lods
cmp
mov
je
in
jb
imul
stos
push
pop
xorl
jo
add
daa
or
pusha
push
lgs
scas
push
lods
aad
lret
or
js
dec
or
inc
insb
mov
jecxz
popf
sub
jno
mov
movb
test
jbe
add
lahf
sub
add
shrl
adc
cld
push
in
sbb
cmpsl
roll
es
lock
jl
enter
gs
push
xlat
pop
mov
mov
add
jmp
cmpb
repz
inc
fs
cmc
jne
mov
mov
pop
sub
push
mov
leave
jae
and
lret
loope
push
mov
fnsave
mov
stos
dec
cli
pop
xchg
shr
in
lcall
sub
mov
push
std
cmp
jg
mov
cmpsb
bound
jne
enter
mov
stos
sub
fcoms
pusha
push
sbb
je
push
clc
outsl
or
out
mov
je
scas
or
mov
cmp
leave
je
mov
sbb
loopne
mov
enter
scas
sti
scas
or
xor
cmp
mov
sub
xchg
cmc
pop
push
pop
daa
xor
lahf
ret
hlt
or
jle
and
dec
pushf
pop
mov
inc
and
jge
mov
pop
icebp
mov
in
adc
xor
cmp
adc
mov
mov
nop
sti
sbbl
rcll
test
xchg
adc
outsb
fisttpll
gs
fisttps
cmc
xchg
pushf
repnz
out
mov
outsl
cmpsl
mov
and
in
adc
sub
xor
and
out
stos
shrb
out
int3
cmp
jb
push
push
mov
push
loop
add
adc
fsubrl
pop
imul
or
ljmp
mov
lea
fisubrl
repz
mov
clc
in
popf
and
shll
test
out
clc
adc
addr16
int3
mov
or
jge
js
aaa
sbb
pop
ds
and
test
mov
pop
lock
jecxz
xchg
popa
outsl
lret
jmp
sbb
adc
movsl
inc
pushf
ret
sbb
test
inc
mov
xor
sbb
andb
out
push
ss
in
mov
xchg
push
pop
lock
mov
or
or
sbb
or
ror
mov
outsb
mov
cld
test
or
lahf
mov
test
cmpsl
dec
push
and
cmpsl
mov
sub
and
adc
mov
out
insb
popf
fisubrs
dec
dec
xchg
icebp
loope
and
mov
lock
loop
outsb
inc
insb
fildl
fisubl
lret
and
idivb
add
sub
pop
or
stos
mov
mov
xor
inc
inc
shrb
dec
call
mov
arpl
sti
je
das
jnp
test
shrl
aam
dec
movsb
adc
mov
lea
sahf
xchg
shrl
pop
les
movsl
jg
je
in
loopne
xor
call
xor
sbb
fucomi
inc
fadd
jno
repz
addr16
push
xchg
stc
sbb
push
shlb
cmp
push
xchg
add
mov
lcall
xor
xchg
xchg
pushl
pop
inc
mov
push
push
sbb
shrb
sbb
mov
insb
shr
ljmp
lock
or
mov
shrl
inc
push
mov
ljmp
xor
mov
mov
pop
in
adc
fdivs
ljmp
andl
stos
loope
loope
sub
push
lods
cmc
dec
cwtl
push
mov
jae
adc
ret
mov
and
bound
add
in
jle
pop
add
mov
adc
shll
out
lret
cmp
test
vcvtss2si
dec
adc
cmpsl
mov
dec
pop
xor
lds
aaa
push
ret
mov
sub
mov
pop
in
push
imul
insb
dec
sbb
mov
loopne
dec
dec
jg
sub
testb
addr16
out
js
mov
andl
mov
call
mov
sti
jmp
cmpsl
outsb
inc
push
ja
mov
hlt
mov
cmpsl
push
in
rorb
aad
stos
insb
push
clc
inc
mov
fs
cli
mov
in
xor
into
cwtl
sbb
into
or
mov
in
int
test
or
mov
loope
ret
or
lock
loop
in
movsl
fdivrl
in
stos
jbe
inc
in
adc
mov
cmp
cmp
and
leave
xor
cs
stc
mov
jmp
mov
test
xor
xchg
mov
mov
adc
mov
dec
or
push
lds
iret
adc
mov
pop
dec
dec
xchg
cmpsl
add
roll
push
add
std
dec
dec
cltd
movsb
pushl
insb
push
sub
add
pop
pop
xchg
or
xchg
fcompl
xor
add
xchg
sbb
fdivrl
cltd
or
rorb
lcall
mov
mov
pop
or
dec
into
push
xorl
outsl
xor
bound
out
jo
sti
push
stos
sub
dec
ja
hlt
cmp
jp
loop
clc
lret
dec
loop
pop
aaa
je
mov
ljmp
and
les
ds
mov
add
sbb
or
xor
adc
aas
mov
or
mov
mov
jp
int
pop
aaa
aam
cmpsb
dec
nop
insb
cmp
push
jo
inc
mov
sub
dec
aaa
add
inc
call
fwait
aam
movsl
ja
adc
pop
xchg
mov
shl
jle
cs
int
mov
sub
aad
outsb
push
xor
insl
fld
jmp
leave
jg
loopne
out
cld
pusha
mov
mov
xor
cmp
xor
js
fs
or
ds
dec
fnstenv
xchg
lret
ljmp
jl
inc
das
xchg
xchg
push
cmp
dec
rcl
mov
popf
dec
sub
fcmove
not
jp
mov
dec
mov
pop
fldenv
inc
xchg
or
cmp
call
mov
stc
fcomps
sahf
mov
movsb
xchg
jg
fwait
bound
adcb
rcrl
ss
mov
sub
jge
insl
jo
mov
loop
fs
dec
orl
outsl
push
adc
mov
test
sbb
lret
xchg
movsl
pop
mov
sub
fwait
add
lcall
sub
stc
popf
pop
inc
je
sbb
std
cs
orb
scas
dec
pop
jg
notb
arpl
mov
xlat
mov
pop
mov
sub
add
pushf
cmp
pop
decl
subb
ficoms
mov
xor
sub
lcall
in
xor
lds
test
cmpsb
mov
mov
rclb
xchg
push
aam
movl
fcomps
mov
ret
mov
push
jb
sub
lds
rolb
sbb
push
push
xchg
ljmp
dec
fwait
inc
or
pop
leave
test
pop
dec
pusha
jg
or
das
int3
sti
and
jecxz,pt
jo
dec
loop
outsb
mov
mov
or
add
movsl
fimull
xchg
clc
leave
push
dec
xchg
mov
pushf
imul
sub
insb
icebp
mov
and
dec
imul
movsl
mov
push
xor
dec
in
mov
mov
jmp
int
out
je
in
mov
jecxz
or
jae
imul
leave
xchg
push
jb
inc
pop
mov
ljmp
sarb
es
int3
jae
in
iret
mov
dec
shlb
and
int3
and
xchg
pusha
stos
sub
push
jae
ret
in
hlt
inc
mov
ljmp
xchg
xchg
fisubrs
lcall
test
pinsrw
cmp
fcomp
inc
popf
scas
scas
push
push
sub
cwtl
lret
sti
lods
mov
jnp
lret
scas
ret
imul
mov
pop
adc
out
mov
dec
push
fld
xor
leave
xchg
lret
out
adc
dec
mov
sti
mov
adc
xchg
xchg
mov
mov
mov
aas
fsubr
fisttpll
sub
xchg
bswap
inc
enter
sarb
je
adc
std
sub
mov
adc
std
push
add
sbb
inc
clc
stos
icebp
andb
aas
mov
push
fstpt
cmpsl
gs
js
cmp
adc
mov
aas
mov
or
inc
lock
pop
mov
mov
and
movsb
sub
sahf
loopne
xor
cmp
fsubs
fsubr
movsl
pop
and
or
dec
dec
fndisi(8087
inc
out
roll
xchg
mov
mov
rolb
stos
in
jl
sub
sbb
mov
add
push
call
cmp
negb
insb
bound
js
push
nop
insb
pop
out
daa
or
xchg
sbb
hlt
shrl
push
shl
movsl
mov
sub
ja
repz
mov
ret
fwait
push
test
xor
and
addr16
cmp
jmp
and
repnz
mov
cwtl
pop
cmp
sub
mov
and
ljmp
mov
fisubrl
outsb
sbb
popa
inc
sarb
xchg
inc
jno
jg
cmpsl
pop
fisubs
cmp
pop
sbb
xchg
mov
inc
jns
je
iret
add
add
pop
test
push
and
fisubl
pop
sub
movl
add
dec
andl
mov
and
pop
ja
in
pop
jbe
cmp
int3
and
inc
les
scas
fstl
xor
push
daa
mov
inc
mov
fisubrl
pop
dec
push
and
out
or
dec
dec
mov
xchg
lcall
outsb
add
jecxz
out
shr
cmp
pusha
scas
jnp
repz
shlb
xchg
and
movsb
cmp
push
or
xchg
aam
mov
mov
pop
aam
sbb
cli
and
fcmovb
lock
mov
sbb
andb
mov
cmova
add
jmp
jmp
push
push
jae
mov
faddl
push
cmp
jl
bound
jle
mov
dec
mov
outsb
jle
stc
xor
add
rolb
in
adc
sahf
and
mov
dec
mov
cmc
push
mov
pop
jns
push
lea
iret
stos
mov
div
movsb
sbb
push
or
stos
push
js
or
mov
push
xor
dec
hlt
pop
push
in
or
popf
imul
add
imul
mov
ja
push
push
jmp
and
inc
xlat
mov
pop
mov
sbb
jo
mov
gs
incl
fdivr
ret
imull
jnp
iret
inc
mov
inc
cmpsl
xor
mov
cmc
inc
pop
addb
xchg
cmp
shrd
xchg
fucomip
sbb
pop
test
or
mov
sti
mov
jbe
cs
ja
aas
jle
repz
xchg
push
mov
mov
xchg
lret
push
repnz
es
dec
pop
ja
lock
sub
add
inc
cli
ljmp
sub
or
fadd
dec
into
aam
clc
xchg
push
in
int
aas
pop
insl
mov
in
or
leave
ja
in
fidivl
fs
test
cmpsb
mov
xchg
pushf
push
loope
dec
addr16
test
movsb
fs
cmp
pop
cmp
cmc
lret
loopne
mov
fwait
pop
and
movsb
adc
sarl
stos
in
cmp
into
rol
subb
pop
cwtl
sbb
xchg
mov
mov
dec
test
cmp
movsl
xchg
xchg
sbb
xchg
mov
stc
in
cmp
sbb
adc
imul
outsb
mov
and
adc
and
cwtl
test
addr16
inc
ror
rcrl
pop
cmp
addr16
inc
jge
or
rclb
cltd
dec
mov
sub
add
and
sub
iret
mov
flds
fisubs
and
mov
scas
sub
andl
push
aad
mov
imul
bnd
jmp
shrb
jo
fsts
fcmovb
mov
popa
sbb
jle
dec
jmp
cmp
out
sahf
push
inc
or
addr16
inc
and
rcl
bound
push
es
popa
ret
push
pusha
jge
mov
xchg
in
mov
sarb
mov
mov
int3
add
dec
pop
mov
lea
pop
insb
sub
jg
imul
jns
pop
mov
orl
shl
lret
push
in
adc
pushf
aad
lock
mov
jge
push
push
jnp
adc
mov
or
fisttps
inc
lods
mov
dec
sbb
jb
add
cmc
les
ja
dec
js
mov
pop
inc
pop
inc
mov
jae
test
adc
cmpsb
push
hlt
dec
push
popa
jmp
or
xor
test
xor
outsl
adc
xor
cltd
inc
rorb
adc
mov
jmp
mov
and
push
sahf
pop
in
pop
push
test
inc
sub
sub
or
pop
mov
addb
sbb
sahf
cltd
into
adc
bound
int3
adcl
pop
daa
or
out
add
outsl
mov
loopne
push
adc
dec
mov
repz
sbb
fildl
fstl
sbbl
fisubs
inc
inc
cmc
imul
jbe
loope
fnsave
xor
je
call
mov
in
xchg
dec
mov
repz
mov
scas
js
std
ds
pop
xchg
repnz
test
mov
mov
insl
repz
imulb
cmp
int
adc
jae
fcmovb
in
or
xchg
inc
xlat
ffree
push
or
lahf
out
ja
push
ret
jle
cmp
or
and
mov
in
push
popf
inc
pop
xchg
jge
lods
mov
dec
shll
jb
or
mov
fcomi
ja
mov
out
cmp
or
inc
jl
xor
mov
add
push
aaa
mov
push
addr16
hlt
rcr
or
cld
xor
cmp
cmp
repnz
je
int
xchg
add
sbb
lods
in
mov
fsubl
xchg
in
or
clc
sarl
inc
add
xchg
rcl
bound
sbb
sub
push
or
inc
rcl
mov
mov
mov
mov
imul
and
inc
aas
jno
xorl
insb
push
in
push
sub
adc
pusha
push
loopne
scas
aas
sub
pop
icebp
decb
xchg
sbb
xor
in
mov
out
xor
ljmp
push
hlt
or
stos
push
sub
in
lret
cld
jns
cmpsb
xchg
sub
test
jle
xchg
stc
cmpsl
test
aad
ja
ret
sarb
cmp
loope
pop
xchg
dec
cmp
shl
lea
lock
std
ret
or
aam
jnp
cmp
repz
test
inc
add
sub
mov
divb
shl
repz
or
or
das
sti
inc
xor
enter
mov
pop
xor
mov
mov
cltd
frstor
xchg
sub
xchg
cmp
pop
lock
aad
dec
aas
jno
sbb
and
out
std
leave
cmp
outsl
cmp
xchg
add
sbb
iret
sub
mov
cli
scas
add
or
cmp
jp,pn
xchg
out
es
push
ljmp
ljmp
mov
push
scas
gs
ret
sbb
cmp
cmp
insl
lods
cltd
ljmp
inc
inc
xor
ret
dec
adc
pop
mov
stc
jge
mov
push
mov
or
es
push
mov
dec
sbb
cmp
mov
sbb
push
push
mull
cmp
in
out
jb
push
fisttpll
cmpsl
or
or
test
push
testl
mov
stos
sbb
xor
jbe
inc
xchg
pop
movsl
cmp
pop
add
cld
pop
and
stos
daa
lahf
outsl
jne
jmp
lret
scas
mov
outsb
das
les
and
cli
pusha
int
cmp
stos
push
cmpsl
lock
push
mov
enter
test
mov
jae
es
mov
mov
adc
test
push
scas
cmp
push
pop
mov
mov
xchg
xor
data16
insl
sbb
imul
pop
push
mov
jge
shll
mov
daa
pusha
or
fs
mov
jae
pop
cmpsl
rcll
in
out
in
jg
jp
outsb
loop
or
xchg
loope
dec
add
jp
mov
xchg
not
aam
jns
ficomps
sbb
das
aaa
cmp
outsl
and
add
ret
neg
pop
dec
movsb
or
xor
pop
fwait
pop
mov
lea
cwtl
dec
movl
push
test
imul
mov
and
and
test
push
jo
nop
xor
jne
stos
pop
scas
das
mov
cmp
cmpsl
repz
xorb
movsb
inc
fimuls
jnp
jns
fwait
pop
sub
testb
stos
push
jne
in
dec
jg
sbb
adc
mov
pop
loope
xor
lret
jb
push
insb
sbb
sbb
and
inc
add
int3
mov
bound
pusha
mov
insb
cs
lock
testl
loop
pusha
mov
je
aaa
scas
shrb
daa
in
adc
je
je
jl
mov
push
sub
mov
stc
out
sbb
sti
or
repz
sti
in
inc
ljmp
and
cmpsl
jl
xchg
and
sti
and
hlt
psrad
lret
in
cmpb
test
cmp
adc
ljmp
dec
cltd
push
fcmove
repz
dec
jo
add
xor
push
mov
sahf
orb
mov
cmp
sub
inc
mov
mov
add
test
dec
movb
cmpsl
cli
cmpl
jle
insl
adc
hlt
test
lods
stc
add
outsb
subb
aaa
mov
xchg
cmp
clc
mov
or
mov
rolb
das
and
and
inc
pop
js,pn
pop
lahf
test
inc
xchg
enter
pushf
inc
ret
mov
jne
jle
lods
iret
test
xchg
pop
test
xchg
addb
jge
pusha
int
xor
lods
ret
mulb
sbb
add
xor
push
shlb
fwait
inc
sub
xor
call
mov
subb
xorl
mov
bnd
xor
or
pop
popl
dec
dec
cwtl
sbb
ljmp
bound
imul
aaa
sbb
fidivrs
push
pusha
fstpl
je
xchg
and
in
es
sbb
or
or
sub
jns
jno
loop
test
mov
inc
xor
or
cmp
mov
outsb
mov
shr
or
loop
add
inc
mov
jge
mov
pop
fwait
jg
mov
sbbl
scas
lods
mov
and
mov
and
addb
sub
jg
out
aam
paddb
das
cld
mov
sarb
imul
lcall
mov
inc
mov
cmp
pusha
mov
imul
inc
inc
rolb
scas
sbb
push
push
mov
sti
dec
lock
mov
stos
mov
lock
inc
mov
mov
call
rclb
ret
mov
mov
cmp
add
inc
jns
pop
sti
dec
cmp
jmp
mov
dec
pusha
push
inc
add
pop
sti
jne
data16
mov
fdivp
xor
mov
das
mov
mov
cwtl
rol
cmp
add
ja
or
int3
imulb
mov
scas
test
das
push
xor
ds
push
aad
mov
jg
mov
loopne
mov
fldt
aad
push
mov
aas
dec
aad
jnp
xor
mov
sbb
repz
fstps
pushf
cwtl
sbb
mov
bound
xor
std
sbbb
cmpsl
hlt
int3
mov
add
aas
cmp
dec
inc
pop
je
push
or
adc
jno
and
push
jbe
popf
xor
popa
aam
test
xchg
push
mov
ljmp
ss
adc
lret
movsb
pop
cmp
cmp
dec
outsl
scas
or
imul
push
aas
xchg
cmpsb
mov
sub
jg
pop
dec
mov
adc
stos
aaa
mov
int
adc
push
repnz
adc
mov
repnz
lds
dec
mov
int3
cmp
adc
stos
mov
shlb
fsubr
out
out
push
outsb
cli
sarb
fstpt
cmp
mov
fsub
cmc
and
pop
ljmp
mov
xor
mov
push
outsb
mov
in
ret
ret
rorl
pusha
fsubl
adc
ss
push
repnz
mov
sbb
jae
pop
lds
fisubrl
outsl
subl
in
test
les
adc
cmp
cmp
das
bound
mov
inc
dec
incl
movsl
pop
dec
jno
mov
repnz
sbb
sub
mov
repz
stos
orb
sbb
movhps
out
inc
insb
jne
movsb
add
adc
loopne
neg
add
outsb
int3
mov
cmp
ffreep
xor
mov
inc
dec
xor
lods
jo
fstpt
jae
ds
push
test
sti
sti
int3
mov
mov
int3
jno
push
insb
xor
or
lahf
mov
fistl
cmp
fucomi
in
imul
aad
inc
and
pop
bound
sub
sub
lret
push
sbb
rorb
xor
loopne
insl
shll
icebp
imul
adc
stos
sbb
mov
add
sub
rcrb
roll
sbb
in
jge
jns
jg
into
jmp
int3
rcll
push
pop
sub
sti
rolb
into
sbb
mov
lcall
mov
pop
adc
mov
pushf
and
inc
icebp
cmp
adc
pop
push
cmpsl
mov
arpl
leave
into
cmp
testl
cmp
imul
xchg
push
jb
cltd
mov
mov
rcrb
xchg
jno
xor
fcmovnbe
stos
shrb
clc
mulb
sti
test
or
push
movsb
insl
cmp
sbb
es
jae
push
lds
xor
scas
insb
mov
pusha
lcall
xchg
and
fnstenv
adc
pop
dec
hlt
mov
push
repnz
cltd
shr
icebp
pop
aaa
xchg
add
adc
and
adc
ds
add
mov
insb
outsl
fisttps
test
push
inc
push
lock
xchg
sub
xor
dec
jmp
ds
push
jo
popf
arpl
add
cmc
lods
sbb
mov
fldl
adc
shrl
or
adc
aas
addr16
imul
push
or
xor
add
and
jmp
mov
lret
das
adc
or
imul
adc
pushf
xor
fdivrs
xor
jl
adc
push
in
mov
cli
in
jge
push
push
push
add
fcmovbe
ds
sbb
std
or
jnp
mov
xor
adc
dec
decl
repnz
push
loopne
lock
adc
faddl
jg
fldenv
xchg
push
pop
pop
push
movsl
mov
repz
jmp
inc
pop
add
repnz
es
in
or
sbb
ss
pop
enter
pop
jmp
fiadds
shlb
andl
xor
xor
mov
lds
lock
test
fnstenv
sti
into
fstl
and
ficoms
push
insl
push
push
lock
xor
add
aaa
adc
jns
mov
or
or
incb
xchg
in
xor
add
stos
hlt
pop
fwait
xchg
xchg
out
adc
shl
dec
mulb
xchg
cmpsb
dec
fwait
scas
or
pop
pop
adc
fmull
xor
xor
add
cmp
jno
cmp
insb
sub
jo
xchg
jle
inc
push
inc
push
fld
into
cmpsb
inc
xchg
int3
mov
lcall
adc
jp
fisubrl
fisubrl
xlat
sbb
popa
das
push
mov
test
std
jns
push
jae
nop
adc
add
jl
in
adc
push
mov
ret
cmpsb
lods
dec
mov
data16
jl
roll
loopne
mov
sbb
dec
sbb
jb
icebp
push
xchg
repz
xchg
sub
dec
push
clc
add
mov
call
hlt
inc
imul
sbb
outsb
sarb
pusha
gs
pusha
fwait
daa
adc
push
les
mov
pop
in
leave
or
imul
cmpsb
sbb
mov
dec
scas
rolb
jae
cmp
add
test
fdivrl
and
bound
ds
aam
rclb
stc
sbb
clc
push
dec
fwait
sbbb
xchg
addr16
jae
sub
and
xchg
aaa
sub
fistl
cmp
sub
int3
sti
addr16
sahf
loopne
mov
in
sub
pop
hlt
popa
stc
sub
hlt
syscall
xor
and
js
mov
in
cltd
testl
stos
add
out
fbstp
js
sub
aas
and
xor
sbb
pop
sub
fs
ljmp
lcall
mov
incl
test
mov
fs
mov
lock
loope
pop
xchg
xchg
cmpsl
imul
idiv
sbb
mov
mov
mov
xchg
xchg
adc
cmp
mov
test
icebp
stos
je
push
movsb
dec
mov
daa
rol
out
sahf
or
fucom
sbb
jne
pop
lret
subb
mov
add
les
cmp
ss
or
fisubs
mov
addl
push
sub
push
cld
icebp
inc
adc
pusha
mov
push
enter
pop
outsl
mov
std
xchg
mov
push
inc
call
adc
int3
sbb
rol
cli
sbb
inc
sbb
in
cs
sub
lahf
cmc
xlat
xchg
sub
sbb
fucomp
loopne
call
dec
je
data16
mov
jbe
inc
mov
sub
ja
sbb
andl
stc
push
adc
mov
xor
sbb
repz
inc
jno
jle
in
fisubrs
movsl
mov
test
fdivl
leave
loop
pushf
sbb
add
bound
es
xchg
popf
add
test
sub
aaa
gs
mov
pop
jnp
xor
je
dec
ficoms
pop
dec
hlt
loopne
ds
jg
cmpsb
xchg
insb
fisttpll
mov
in
dec
cmp
jecxz
mov
aas
jns
aam
int
mov
jp
out
inc
dec
mov
lahf
mov
inc
or
jo
jno
nop
call
mov
mov
stc
cmp
adc
and
aas
sti
cmpsb
pusha
add
leave
mov
das
jecxz
stc
adc
adc
or
cmp
out
leave
in
mov
mov
inc
call
jmp
cmpsl
jae
rorb
das
cmp
mov
imulb
sbb
test
shll
test
jecxz
mov
fldt
add
jmp
xlat
outsl
je
xchg
cmp
pusha
addr16
mov
ds
mov
mov
ss
pop
inc
mov
dec
cltd
movsb
cmp
mov
inc
rorb
sti
cmpsl
out
and
mov
xchg
fwait
push
gs
mov
cmp
js
addl
mov
sbb
fwait
sub
shll
gs
mov
mov
mov
sti
push
outsl
and
sub
outsl
cmpsl
cmp
test
push
call
adc
lcall
cwtl
mov
sub
sub
dec
push
mov
cmp
pop
arpl
or
je
js
adc
xchg
cmp
pushf
xchg
cmpsb
scas
cmpl
add
jo
pop
lea
xor
jle,pt
sbb
push
testb
inc
mov
popf
cltd
call
push
cmpb
popa
push
jl
fadds
mov
rorb
xor
lods
je
dec
dec
loopne
xor
mov
loopne
push
sbb
push
inc
mov
add
sbb
sbb
push
idivb
int
mov
sbb
daa
out
bound
xor
push
jo
mov
jnp
xor
mov
lea
fimuls
leave
imul
sub
out
test
add
rcr
and
hlt
fstps
fwait
imul
imul
jl
mov
aam
lcall
xor
call
mov
lock
or
jl
jb
bound
leave
repz
xor
popa
arpl
push
jecxz
ljmp
stos
dec
test
xchg
add
adc
scas
aaa
aas
xchg
repz
sub
shlb
nop
xor
movsl
cli
data16
loopne
xor
cmp
fnstcw
cwtl
lahf
sbb
popf
jg
imul
cmp
xor
outsb
mov
mov
dec
in
pop
push
jge
cld
cmp
sub
dec
push
pushf
mov
jne
cld
jbe
sahf
repnz
pop
sahf
frstor
xor
and
dec
push
sub
mov
ljmp
or
hlt
push
lods
test
xlat
sub
sub
add
negb
loope
in
lea
or
cwtl
pop
push
and
and
sahf
push
pop
stos
ja
xchg
mov
rcll
lock
shll
dec
popf
rcrl
test
and
clts
sahf
lock
outsb
and
adc
cld
insl
inc
lret
testl
push
imul
push
repz
sahf
pop
xchg
test
pop
pop
loopne
pop
dec
mov
aas
push
xor
lods
lret
andb
sbb
mov
dec
and
mov
push
jb
add
std
jmp
lret
xchg
stos
jge
in
stc
enter
rcl
fldl
jge
insb
jns
add
cmp
push
xchg
dec
xchg
or
scas
fucomip
iret
inc
mov
fimull
stos
jo
inc
mov
xchg
orb
notl
add
stos
xchg
je
mov
push
mov
lret
pop
xchg
iret
and
mov
rorl
loope
xchg
or
or
mov
pop
mov
xchg
fldt
cmpsl
add
push
adc
subl
loopne
mov
cmc
inc
or
mov
and
inc
dec
inc
cmp
or
out
mov
jl
dec
sbb
dec
sti
sbb
sbb
int
in
push
pop
xor
stos
jge
popl
cmp
sbb
mov
arpl
es
test
nop
jp
shlb
mov
mov
out
mov
add
bnd
shl
ss
mov
inc
xchg
mov
xchg
sub
add
sbb
adc
and
cmp
sub
lcall
xchg
sbb
cltd
pop
outsl
loopne
add
inc
mov
lea
and
scas
adc
push
mov
iret
negl
pop
sbb
lods
or
in
icebp
or
out
jns
dec
xchg
popf
nop
enter
repz
sbb
stos
pushf
mov
stc
sbb
fnstenv
inc
mov
cmp
loop
fstpl
sub
aam
push
pop
js
shlb
push
pop
mov
repnz
push
pusha
add
addr16
subl
pusha
call
cmp
sti
test
inc
mov
ja
or
sbb
outsb
mull
movsl
and
dec
lret
scas
loope
xchg
inc
add
xorl
xchg
or
icebp
and
inc
rol
cmp
jmp
xchg
fstp
test
cmp
pop
dec
add
inc
push
mov
fisubrs
movsb
cmp
dec
pushf
inc
cmp
pushf
mov
rolb
xchg
adc
or
jmp
xor
mov
jg
and
fnstcw
mov
dec
or
mov
inc
or
inc
ret
adc
dec
sbb
out
test
arpl
aad
push
jnp
cmp
sub
mov
adc
xchg
gs
fnstcw
adc
add
lcall
xchg
jbe
mov
aad
push
xchg
adc
mov
sub
jmp
das
mov
test
jo
ja
cmp
daa
cli
arpl
adc
lods
icebp
mov
cmpsl
dec
mov
pop
cmpsb
scas
xor
xchg
outsb
loop
mov
xchg
cmp
xor
or
mov
arpl
stos
xorb
aad
adc
mov
in
hlt
or
inc
cmp
push
aad
push
or
test
xor
or
mov
xor
mov
ja
dec
std
inc
adc
mov
mov
mov
add
xchg
sbb
lds
into
mov
inc
adc
sub
mov
adc
sbb
cmp
movsb
aaa
mov
push
in
in
clc
pop
pushf
cmp
in
insb
jnp
das
mov
in
movsl
xchg
scas
lea
inc
fisubrl
xor
push
inc
mov
jne
mov
enter
daa
cmpsl
insb
stos
adc
mov
cmc
loopne
xor
rcl
stos
nop
test
int
and
les
enter
mov
xchg
dec
loop
mov
mov
cwtl
sub
out
pop
shl
hlt
gs
add
dec
int3
xorl
add
xchg
mov
jns
push
push
int3
mov
xor
aaa
gs
jecxz
push
movsb
loop
ret
popf
int
add
xchg
std
add
aas
mov
push
push
test
xor
addl
lea
popf
jnp
cmpsb
or
call
popa
xchg
icebp
mov
dec
ss
pop
xor
inc
cld
xchg
xchg
push
cmpsb
mov
popa
pop
inc
xor
cmpsl
aas
lods
xor
mov
fsub
sahf
lcall
cmp
jecxz
push
adcb
xchg
mov
jge
sahf
out
repz
testl
icebp
xlat
out
arpl
cmp
pusha
imul
in
leave
in
cmpsl
popf
stc
cld
dec
cmp
cli
shrb
in
sub
scas
mov
inc
lods
nop
andb
add
pop
add
push
clc
dec
stos
mov
jo
jo
cmp
div
inc
mov
pop
dec
dec
sar
mov
add
dec
rorl
jg
ret
jo
dec
mov
xor
test
idivb
ret
fxch
sbb
sub
mov
inc
add
les
xchg
mov
add
int
xchg
out
popa
xor
cld
mov
sbb
les
repnz
lcall
lret
cmp
hlt
jae
jle
mov
mov
ljmp
or
pop
xor
mov
sub
test
dec
push
hlt
leave
clc
lret
xchg
test
enter
inc
sub
xor
cmc
pop
jno
decb
or
sahf
xchg
ret
out
mov
push
lea
xlat
push
nop
mov
cmpsl
in
leave
sub
cld
les
push
flds
xor
sub
dec
scas
imul
arpl
daa
sbb
lret
data16
and
out
mov
test
lret
stos
jno
es
cmp
cltd
scas
icebp
sarl
scas
mov
out
insb
adc
xor
fistps
rcl
jmp
pop
pop
mov
sbb
jnp
movsl
or
shll
out
nop
cltd
inc
call
mov
clc
or
sbb
pop
pop
jecxz
jmp
test
shl
xchg
dec
call
leave
xor
shrl
sub
cmp
dec
outsb
xorl
pop
subl
mov
insl
jne
into
add
adc
pushf
cltd
inc
mov
ds
js
sahf
ret
lret
adcl
adc
mov
inc
jl
dec
mov
scas
fwait
pop
push
sub
mov
fwait
lea
jecxz
xchg
inc
and
xor
aaa
dec
setge
fisubs
sbb
or
push
mov
push
cli
mov
push
mov
decl
std
mov
and
mov
add
test
loopne
rolb
inc
add
imul
loopne
sub
xchg
add
mov
xor
fcmovb
addb
and
inc
icebp
mov
jno
int
dec
divl
jge
xorb
movsb
push
mov
stc
lds
jmp
or
scas
int
push
xchg
mov
inc
xlat
ret
je
int
adc
mov
or
adc
stc
adcl
sahf
in
mov
es
fdivr
aad
ss
js
xchg
add
cmp
push
jb
pushf
cmp
xchg
push
sub
lahf
das
mov
mov
cmpsl
inc
shll
cmp
imul
fsubl
mov
add
push
fmuls
jp
xor
ret
je
movsl
adc
movsb
rcl
in
sub
stos
bound
xchg
ds
xchg
or
imul
sbb
jge
add
std
push
xchg
das
pop
pushf
adc
je
or
xor
pop
shll
push
scas
mov
inc
xlat
je
lahf
pop
fnstsw
jl
adc
clc
sub
add
daa
out
ds
pop
xchg
std
and
test
mov
insb
aad
in
or
into
fsts
scas
cmpsl
inc
jecxz
pop
jmp
pop
scas
mov
test
orl
pop
iret
insb
lds
stos
xchg
mov
xor
sti
fidivrl
aas
fidivrl
rorl
aas
test
and
idiv
cld
xchg
add
loop
add
fcmovnbe
in
test
out
mov
lock
rcll
push
push
ja
push
mov
mov
rcrb
pop
lret
xchg
adc
test
iret
sub
jb
pop
pslld
mov
lret
dec
or
sbb
adc
adc
xor
pop
xchg
daa
push
dec
jbe
sub
lcall
or
mov
xchg
mov
mov
pushf
dec
jmp
mov
push
or
enter
mov
aas
orb
sbb
je
mov
mov
fdivl
repz
adc
mov
fwait
outsb
push
jno
jb
imul
push
cmp
mov
movsb
cmp
jmp
in
in
jle
sub
cmp
or
sub
lret
clc
mov
out
clts
dec
lods
inc
mov
sbbb
cmpsl
test
rolb
sub
jnp
rclb
test
imul
push
subb
adc
pop
xchg
cmpsb
bound
mov
mov
jl
or
stos
test
sub
sbb
hlt
or
sub
jb
and
add
dec
jle
outsb
scas
movsl
xchg
es
dec
lret
test
rorb
and
push
clc
pop
mov
push
xor
lret
cmp
inc
jns
jge
cmc
lret
mov
mov
push
mov
jp
jge
andb
and
mov
cs
lea
add
loopne
jo
pusha
add
insb
cmp
cmp
lods
mov
rorl
adc
jno
das
mov
aas
and
jp
xor
sarb
jp
ljmp
xchg
adc
mov
pop
into
sub
xchg
icebp
rcl
inc
cmc
insl
sub
sub
insl
clc
mov
stos
cmp
out
push
scas
xchg
jp
or
sbb
mov
mov
xchg
xchg
xchg
cmp
outsb
jae
mov
out
xorb
arpl
cmp
inc
sbb
mov
imul
incb
sub
xchg
cmp
std
pop
movsb
lret
sub
bound
dec
sbb
std
stc
int
sbb
push
ret
std
movsl
ficoml
loopne
mov
shl
adcb
cltd
es
cmp
outsl
enter
gs
pop
adc
mov
push
jmp
lret
mov
insl
movsb
scas
xchg
or
dec
mov
jae
push
jle
les
xchg
scas
sti
sub
jbe
ja
lahf
mov
popf
icebp
cld
out
mov
push
mov
jae
xchg
into
xlat
jmp
or
stc
and
int3
inc
cmc
xchg
dec
xchg
push
xchg
stc
xor
jmp
aas
mov
aad
dec
pop
cmp
push
aaa
scas
jnp
ret
sbb
rcrb
jecxz
inc
push
movsl
mov
inc
mov
test
jp
adc
dec
call
and
nop
xchg
mov
clc
insb
test
pop
aam
inc
push
push
enter
pop
xor
ljmp
adc
mov
xor
and
stc
pop
adc
lods
negl
aas
inc
cmpsl
cmp
cld
mov
push
dec
mov
xchg
nop
or
jb
sbb
cltd
insb
push
out
push
insl
mov
insb
and
adc
rclb
loop
xchg
jg
push
es
popf
out
out
cmp
iret
stos
stc
shlb
loope
int
dec
push
jno
aam
xor
fwait
xchg
ja
xor
mov
ja
sbb
inc
movsb
movsb
mov
lds
mov
outsl
pop
push
bound
orl
lea
pop
pop
insb
mov
hlt
xchg
addb
push
pop
mov
lods
ss
mov
cmp
ret
nop
lret
test
and
mov
loope
or
adc
es
jns
shlb
fwait
in
imul
dec
repz
cmp
setnp
cli
xor
mov
iret
repnz
fidivrs
rclb
lods
shll
es
push
fisttpl
xchg
push
frstor
scas
mov
pop
push
pusha
pop
pop
mov
inc
jo
sbb
inc
test
sbb
lods
dec
inc
mov
jnp
push
icebp
pop
push
test
push
xchg
pop
push
push
call
jp
jmp
xor
fiadds
js
push
mov
push
pop
fsubs
cmp
test
mov
mov
ret
jl
lds
and
sub
adc
mov
shrl
ljmp
bound
xor
test
jb
scas
jno
jne
mov
lock
xchg
fists
mov
cmp
mov
xchg
ret
mull
push
clc
cmpsb
push
mov
mov
inc
jge
xor
jl
lcall
dec
jecxz
jg
adc
and
dec
insb
xor
jb
push
sarl
stos
js
int
cwtl
or
repz
add
jge
and
and
aas
outsb
lahf
orb
sbb
push
lahf
sbb
js
pushf
out
pop
fists
inc
cmp
in
mov
pmaxub
fdivr
pop
out
dec
sub
and
mov
cltd
push
ret
inc
or
loopne
push
lods
or
sbb
cltd
xor
int3
js
adc
out
dec
in
iret
pop
lret
jb
loopne
dec
je
jg
push
pusha
into
inc
movsl
out
ret
mov
adc
mov
lds
adc
ja
rcrb
aad
mov
cmc
lds
sub
push
adc
in
adc
push
fcmovbe
jne
or
in
shr
test
mov
xchg
inc
sub
stos
sub
fprem
pop
pop
mov
jno
and
int
xor
sub
dec
jl
mov
shll
shlb
arpl
adc
cmpsl
lret
sub
push
mov
mov
stos
dec
stos
and
imul
cmp
push
test
imul
scas
loope
ret
jne
in
adc
jp
jae
mov
adc
mov
dec
fmulp
xor
push
jo
cld
andb
adc
jge
ljmp
xor
jo
enter
cs
mov
lods
jns
lds
sbb
pop
push
xchg
and
mov
xchg
lret
fsubs
push
mov
pop
push
jecxz
jb
rclb
cwtl
mov
scas
leave
xor
fs
inc
out
jle
mov
push
loopne
aaa
cmpl
lcall
mov
stos
pop
adc
jmp
dec
and
rorl
push
xor
jl
and
push
out
sbb
rcrb
dec
xchg
cli
inc
add
imul
rol
pop
push
movsb
mov
push
mov
imul
in
das
in
mov
and
jle
ds
mov
push
sub
ret
sbb
xor
mov
jmp
lods
push
push
outsb
cltd
movsb
ffreep
push
shl
into
ds
lods
xor
sbb
je
jo
fisttpl
add
movsl
adc
sub
inc
jb
or
stc
test
or
loop
inc
outsb
mov
push
mov
jg
cs
lds
jno
pop
lahf
jle
testb
xchg
pop
mov
pop
mov
aaa
jge
dec
scas
cmp
mov
aad
jns
in
jl
or
pop
xor
pop
push
pop
xchg
push
add
cltd
ret
add
int
movsl
mov
jae
push
cwtl
mov
stos
std
icebp
bound
sub
out
test
jno
mov
push
les
mov
ficoml
cmp
gs
cwtl
fildll
lret
cltd
xor
cli
arpl
hlt
imul
ret
popf
test
xchg
xor
pop
int
push
add
add
mov
out
mov
dec
pop
dec
xchg
and
out
loope
inc
jp
shll
or
repnz
sbb
subb
jbe
loop
rol
mov
and
mov
out
dec
add
mov
outsb
dec
scas
subl
cmp
pop
mov
dec
xor
cmp
arpl
xchg
stos
or
ret
lret
mov
sahf
arpl
aaa
xchg
js
xchg
push
or
or
out
mov
push
pop
push
std
lea
push
les
pop
pop
xlat
jbe
mov
inc
fcompl
jp
inc
shlb
adc
xor
cmpsl
dec
cwtl
xchg
arpl
mov
add
out
xchg
jae
into
cld
jb
xchg
pop
pop
mov
out
insb
sbb
dec
mov
fwait
dec
pop
aaa
or
add
inc
into
xor
fs
cmc
scas
inc
pop
mov
pop
mov
mov
pop
pop
or
lret
je
inc
iret
daa
xchg
dec
mov
add
push
sbb
loopne
and
dec
sub
inc
pop
xchg
pop
inc
jmp
fistps
sbbl
jl
mov
mov
lret
sub
mov
addl
mov
adc
arpl
add
and
sbb
data16
or
rcll
fildl
inc
enter
cmp
stc
mov
pop
jmp
fisubs
mov
fisttpll
loopne
or
repz
xchg
ret
push
pusha
or
je
jb
jo
cwtl
mov
pop
fcompl
imul
fistl
js
out
data16
test
jnp
adc
sarl
insb
je
pop
shll
fucompp
movsl
or
test
rclb
jne
mov
ja
imul
pop
mov
xlat
mov
cwtl
movsb
push
dec
pop
push
lods
jecxz
call
xchg
aas
mov
enter
sub
push
leave
test
ja
int
or
adc
imul
and
adc
sub
imul
push
stos
lock
add
xorl
pop
jb
stc
std
jg
ja
push
xchg
lds
adcb
in
orb
mov
idiv
adcb
ret
fwait
sti
rcrl
lahf
frstor
sbb
andb
xor
stc
sahf
bound
cmp
std
xor
rcr
out
jae
lock
int3
rolb
es
iret
test
into
sub
lcall
test
xor
jecxz
mov
xchg
pop
pop
or
and
push
das
aad
shll
lea
sbb
mov
data16
inc
sbb
sbb
les
mov
lret
ds
cmp
inc
jge
hlt
mov
out
ds
push
shll
add
xchg
rcll
sub
inc
jecxz
sbb
push
jle
sar
imulb
scas
dec
notl
in
cmp
xor
xorb
shlb
cmp
push
int
xor
xlat
jo
enter
mov
cs
daa
inc
shll
pop
mov
insl
fstpl
outsl
lahf
push
sub
inc
adc
pmuludq
pop
in
in
mov
mov
je
sbb
pop
dec
loopne
mov
jns
add
mov
xor
bound
sbb
popa
xor
enter
loope
imul
xor
aaa
ret
int3
xor
cmp
int
shl
out
mov
insl
lods
xlat
sbb
mov
mov
gs
out
jne
pop
xchg
shlb
sub
ret
pop
fnstcw
insl
push
jnp
mov
dec
in
cmc
aad
dec
dec
mov
xor
jb
dec
test
mov
mov
repz
dec
inc
bound
stc
imul
popa
fld
jmp
mov
push
aad
sub
xor
and
adc
ja
and
push
pop
cmp
addr16
pop
xor
mov
xchg
xlat
jo
in
push
xor
scas
ret
inc
js
push
sub
push
jge
sbb
jno
sub
mov
mov
in
push
lds
mov
jecxz
push
notb
inc
out
mov
addr16
cmp
sahf
stos
or
cmpsb
enter
cmp
push
add
or
sti
mov
lret
into
mov
inc
pusha
dec
cwtd
orl
scas
call
sbb
mov
mov
cmpsl
stos
stc
aaa
adc
flds
frstor
xor
decl
rol
jb
sub
fldt
test
cmp
daa
imul
pop
lcall
popa
sti
ljmp
pop
push
in
mov
mov
jbe
mov
loopne
push
or
add
push
mov
aam
in
scas
push
and
outsl
pop
add
outsl
insb
int
push
pushf
ljmp
sbb
ret
cli
pusha
in
jns
addr16
mov
shlb
inc
out
push
inc
sub
das
arpl
sub
fwait
pushf
jl
lret
mov
mov
mov
and
cmp
sub
xchg
and
orl
aas
inc
scas
adc
es
or
dec
mov
push
aaa
pop
and
stos
ret
addl
push
scas
pop
inc
in
mov
daa
sbb
dec
movsl
pushf
inc
mov
test
mov
push
sub
test
cmpsl
fldt
dec
outsb
cli
adc
stos
addr16
mov
std
xor
fistps
movsl
sub
push
pusha
rcrl
neg
add
inc
insl
mov
lds
xchg
test
jnp
pushf
jo
dec
dec
and
and
jecxz
roll
inc
lret
decb
cltd
mov
out
lahf
lock
jmp
es
or
out
cmpsl
daa
out
add
test
std
and
mov
push
stc
add
lea
xchg
xchg
shr
in
notl
jo
xor
mov
sbb
and
or
cmpsl
mov
or
fstps
movsb
ret
repz
test
mov
jmp
je
popa
pop
sub
hlt
ss
pop
sbb
push
sub
sbb
shr
popa
aad
mov
aas
xor
sub
add
iret
cs
js
or
dec
push
mov
pusha
pop
dec
nop
add
js
fyl2xp1
mov
mov
ja
mov
xchg
add
out
call
repz
movb
pop
or
addr16
roll
idiv
inc
daa
xchg
push
sbb
in
ret
push
inc
mov
jno
cmpsl
out
sbb
push
push
sahf
adc
push
in
or
mov
and
jae
inc
jnp
nop
sbb
sahf
lods
into
test
mov
hlt
int3
stc
sub
lods
xchg
stc
jl
sbb
movsl
ja
or
dec
inc
out
fildl
test
in
stos
sti
addr16
cli
or
lret
les
ds
jg
popf
test
push
aam
push
aam
js
push
push
and
imull
ret
mov
jge
add
lds
aas
out
jp
cmp
ret
adc
inc
js
jle
and
fildl
aaa
sbb
nop
mov
test
sub
leave
jle
orb
mov
mov
inc
pop
sub
sub
and
xor
bound
xor
cmp
jl
inc
cmp
pop
into
insb
mov
daa
enter
mov
inc
test
lods
popf
mov
inc
push
dec
xor
in
dec
cs
in
and
xor
mov
nop
add
icebp
lock
cltd
cltd
or
in
cmpsl
dec
arpl
daa
xor
adc
gs
pop
daa
inc
lea
xchg
dec
pop
out
adc
clc
rol
fcomps
scas
out
loopew
fwait
add
insl
pop
adc
mov
mov
scas
lcall
inc
outsl
xchg
and
pop
sbbl
mov
movsl
dec
lea
pop
jmp
xchg
stos
mov
dec
push
shr
leave
mov
ja
or
pop
je
xor
lcall
sbb
fwait
ret
add
sbb
add
mov
inc
sub
fsubr
int
or
sbb
mov
mov
mov
inc
cld
xchg
jg
inc
jbe
cmp
in
loop
mov
mov
fs
out
testb
mov
inc
cwtl
sbb
cmp
push
push
jmp
in
push
dec
cld
cli
imul
xchg
jl
mov
jno
push
es
or
mov
je
dec
push
mov
add
fwait
into
cmp
mov
insb
xchg
jl
addr16
inc
and
movsb
aas
scas
outsb
push
testl
and
push
ret
inc
daa
dec
xor
push
jnp
cli
test
int
sbb
out
jb
mov
mov
jmp
int3
roll
push
adc
in
or
in
ds
xchg
fwait
sbb
adc
inc
aaa
enter
push
mov
cmpsl
cmp
in
push
mov
les
add
loop
jne
mov
sti
in
cld
sbb
cld
insb
pusha
xchg
adc
insb
xor
mov
sbb
push
in
out
addr16
out
push
cmc
lret
data16
xchg
les
pop
dec
sbb
dec
out
push
xchg
fisubs
in
subl
push
iret
fimuls
lret
les
lret
add
cmpsb
jl
lret
rcll
decb
cli
test
loop
jae
or
inc
cmpsb
adc
xor
cmpsb
dec
pushf
jb
inc
into
xor
add
clc
cs
movsb
add
pop
mov
adc
inc
sbb
loope
add
inc
jmp
hlt
xchg
out
insb
xchg
or
fnstsw
push
hlt
xor
aas
das
xchg
pop
in
and
and
cmpb
aad
popa
jns
push
mov
ret
ret
mov
addr16
inc
mov
mov
sub
shl
jb
and
cmpsl
out
dec
push
mov
popf
call
push
popa
cwtl
xchg
fsub
imulb
loopne
mov
xor
jp
add
pop
jo
push
je
cmp
rolb
scas
bound
add
dec
push
ret
movsb
insb
insb
fs
push
leave
adc
addb
out
cmpsb
mov
test
gs
inc
push
call
or
adc
pop
push
mov
jae
sub
sbb
cld
xchg
add
js
gs
mov
rcll
or
in
push
pusha
out
sub
aad
cwtl
icebp
sbb
repz
xor
popf
mov
addl
enter
loop
mov
sti
xorb
aad
cli
cs
add
inc
adc
repnz
pop
adcb
adc
xchg
es
loop
pop
stos
push
sarb
cmp
adc
cwtl
outsl
jbe,pt
xchg
xchg
add
test
stc
pop
pop
aas
lods
inc
cmpsl
fmul
sbb
add
jbe
mov
stos
xlat
mov
cmp
add
pop
cli
add
push
cmp
sub
mov
ficompl
fistpl
xor
orl
inc
lock
mov
rorl
fbstp
popa
and
mov
sub
cmp
fisttpl
push
xor
mov
mov
test
add
dec
mov
push
bound
cmp
outsl
mov
rorl
mov
cmpsl
js
repz
cli
push
lock
pop
push
mov
mov
or
lret
rcrl
sub
sbb
jnp
jmp
nop
int3
add
cld
jb
jg
jnp
je
in
xchg
lret
in
out
repz
popa
and
imul
ret
push
lret
sub
cs
jle
lock
lods
xchg
lret
push
adc
test
enter
lahf
sub
cmp
int
push
add
mov
mov
pop
outsl
push
and
sub
jns
mov
or
pushf
or
pop
mov
mov
xor
lods
inc
jb
push
imul
add
sbbl
mov
js
cmp
adc
xchg
std
xchg
jle
pop
push
xor
ljmp
lods
xor
pusha
roll
movsb
pop
dec
rolb
jne
cmp
shlb
aaa
out
nop
push
pop
mov
out
mov
test
xor
ret
ja
cmpsl
xchg
push
jne
fistl
loop
xchg
xor
sbb
lds
dec
dec
jno
out
cmpsl
sbb
xchg
xchg
cmpsb
outsl
mov
imul
and
fwait
call
stos
fistps
xchg
xchg
mov
ss
shl
inc
stc
adc
xchg
fsubr
mov
adc
sub
daa
add
aad
jmp
test
bound
out
bound
les
jns
sbb
ret
jl
cld
dec
add
pop
hlt
aad
jo
xlat
shrb
rcll
mov
not
lods
data16
dec
adc
inc
imul
xor
ljmp
loope
add
inc
or
bound
ficoml
fwait
cwtl
mov
jle
cmc
xchg
sub
popa
aam
xchg
lcall
push
dec
ljmp
testb
mov
lahf
js
sahf
pushf
mulb
dec
mov
push
mov
fldl
xchg
lds
cmpsb
mov
int3
and
and
test
jns
push
add
bound
rol
ret
mov
inc
sub
cmp
push
cmp
fbld
mov
cmp
push
enter
sbb
je
insb
imul
or
aas
and
dec
mov
leave
cmc
jl
xchg
fsts
test
cmp
push
adc
sub
inc
fistps
mov
push
cmp
stos
inc
movsl
jg
leave
popa
jnp
data16
insl
cmp
or
xor
mov
imul
cli
or
sbb
push
sub
mov
insl
jecxz
xchg
adc
insb
inc
push
pop
in
fwait
lret
adc
movsb
pop
adc
add
mov
lret
jno
mov
aam
aad
or
inc
push
xchg
inc
jmp
adc
std
sbb
imul
mov
int
repz
or
shlb
cld
push
pop
wrmsr
fisttps
cmp
stc
test
scas
sbb
sbb
mov
push
jmp
adc
rorl
ja
mov
pop
mov
insb
ficoms
mov
dec
mov
lock
fbstp
lods
inc
ja
pop
fldl
inc
push
xor
xchg
mov
xor
test
cmpsl
je
xchg
ss
aas
hlt
cmp
imul
cmp
into
xor
mov
in
sub
movnti
scas
aas
mov
outsl
pop
sub
repnz
inc
pop
sbb
loope
sbb
fstpt
jb
insb
xor
xor
mov
sub
mov
imul
shlb
lods
inc
or
sub
call
nop
xchg
push
xor
cltd
int
mov
leave
push
push
mov
sbb
push
aaa
adc
mov
adc
push
mov
iret
xor
pop
test
shr
mov
loop
rcr
loopne
test
fiaddl
movsl
or
and
mov
test
hlt
leave
jns
flds
pop
pusha
xor
cmp
inc
xchg
mov
xlat
add
cli
stos
jbe
pop
xorb
push
mov
fwait
jae
or
filds
push
js
lcall
mov
idiv
je
mov
lret
rcrl
das
aas
movsl
push
out
notb
sub
sub
cmp
or
ret
pop
jb
pop
pushf
sub
pop
mov
pop
pop
push
xor
insb
lret
dec
fistpll
pop
sub
xchg
sub
mov
bound
int
das
mov
movsb
or
js
pushf
mov
loope
mov
outsl
xchg
mov
shrl
push
sub
out
cmp
cmp
cmp
jne
pop
push
cwtl
mov
aaa
add
stc
pop
mov
xor
xchg
xor
mov
psubusb
pop
and
jmp
sub
aaa
test
mov
adc
sub
in
xchg
sbb
mov
mov
push
sti
adc
mov
nop
adc
xchg
jnp
pushf
je
and
aaa
dec
in
shrl
mov
adc
jb
movsl
mov
pop
xchg
in
or
clc
nop
dec
rep
in
aaa
gs
pop
les
jecxz
sbb
xchg
xor
mov
sarb
pop
gs
xchg
mov
and
xchg
cmp
in
shll
sahf
push
dec
push
mov
cmp
xchg
pusha
stc
repnz
xchg
fdivrl
mov
or
lea
and
pop
mov
sub
fists
mov
das
loopne
mov
scas
sub
inc
loopne
xchg
push
sbb
fs
mov
fs
fsts
arpl
jecxz
scas
sub
sbb
fcmovu
adc
cmpl
jecxz
dec
mov
es
push
pop
mov
mov
mov
cmp
adc
stc
scas
add
xor
test
insb
pop
jecxz
mov
ret
sub
aam
aad
pop
jecxz
jae
xor
mov
arpl
mov
inc
loope
mov
in
shrb
and
or
inc
mov
fidivl
add
xchg
xchg
inc
fbstp
lret
sti
addr16
mov
jb
arpl
cmpsl
lret
cli
loopne
cltd
push
out
mov
adc
jmp
out
das
test
scas
cmp
in
fsubl
or
fs
mov
aas
jbe
jne
sbb
pop
add
and
push
subl
sub
mov
cmpsl
imul
ss
cltd
or
fwait
inc
sbb
fisubrs
add
out
cmp
dec
sub
pop
mov
xchg
or
fisubrs
das
and
movsl
xor
inc
sbb
inc
push
xorl
mov
data16
xchg
inc
push
inc
dec
popf
imull
xor
jmp
pop
int3
inc
out
mov
cmp
cwtl
ret
adc
sub
add
test
sbb
push
mov
ret
imul
xor
cs
xlat
and
mov
mov
call
ret
xchg
and
add
push
cwtl
xchg
dec
pop
cmp
xchg
push
cmp
iret
xchg
sbb
sub
pop
add
mov
sar
je
mov
stos
pop
pop
aad
outsl
pop
dec
adc
stos
jo
push
jb
add
aad
mov
push
mov
fstpl
aaa
fisttpl
scas
js
lds
in
ss
xchg
out
push
xor
and
outsl
lahf
fs
mov
jle
and
scas
mov
nop
pusha
into
xchg
bound
cmpsb
ret
mov
dec
xchg
enter
sbb
adc
jo
pop
xchg
jb
cmp
rolb
inc
jbe
aad
xchg
mov
inc
xchg
lret
push
testb
pushf
mov
xchg
mov
and
inc
ss
inc
lods
push
js
jno
lcall
jb
cmp
cld
out
das
mov
arpl
repz
in
fstpt
xor
aaa
inc
xchg
adc
js
add
jne
arpl
fadd
cmp
inc
mov
cmp
mov
sbb
xor
dec
insl
scas
inc
nop
scas
mov
scas
imul
out
inc
dec
dec
decl
mov
loop
fsub
push
das
xchg
pop
sub
adc
fs
cmp
movd
xchg
push
in
ja
sbb
cmp
test
scas
cwtl
jle
lods
or
cmp
push
aas
xlat
in
cli
ds
nop
dec
push
jmp
or
or
adcl
sahf
jno
test
ja
aas
movsb
xlat
mov
sbb
mov
jmp
push
pop
cmp
adc
dec
movsb
adc
stos
push
bound
mov
popf
and
xor
dec
rcrb
and
sub
imul
adc
insl
inc
pop
push
pop
push
mov
push
cmp
push
sti
inc
lea
psllw
lahf
test
push
dec
fwait
into
pop
xchg
stos
dec
test
repnz
iret
add
cld
cmp
dec
jmp
clc
mov
mov
jns
mov
jl
sarl
aaa
mov
dec
dec
adc
mov
push
movsb
add
je
xchg
out
mov
aad
push
xchg
push
push
sahf
push
sub
or
jmp
int
mov
push
jg
lret
add
sahf
xchg
add
and
test
sbb
push
mov
dec
adc
leave
push
sub
inc
mov
stos
jne
icebp
mov
lret
add
xor
shll
je
xchg
and
and
movsl
jae,pt
bound
mov
adc
scas
sbb
in
mov
imul
mov
pop
mov
add
dec
sbb
repz
pop
jmp
cmp
pop
dec
mov
xor
mov
jg
jno
mov
and
sbb
sub
inc
push
fisttps
aaa
sbb
clc
loop
mov
ss
rcrb
xor
xor
sahf
xor
inc
pop
push
cmpsl
mov
repnz
sub
adcb
sarl
call
inc
inc
scas
insb
jb
repnz
dec
mov
xchg
lods
jae
stos
cs
push
push
loopne
or
sti
repz
add
dec
cwtl
mov
xchg
sbb
jg
ret
cs
and
addb
jge
movl
icebp
cltd
add
adc
fdivl
mov
int3
into
pushf
shlb
ret
pop
adc
sahf
sub
dec
sub
test
mov
pop
pop
mov
push
in
insl
xchg
pop
iret
push
xchg
push
rcll
lcall
mov
dec
xchg
cld
out
cmc
dec
mul
sbb
or
daa
jecxz
jno
ret
lods
lods
and
in
enter
jnp
fcomps
icebp
dec
sbb
mov
mov
stos
and
adc
xor
fxch
jb
lea
xor
jns
xchg
add
clc
mov
das
dec
jg
enter
push
push
mov
mov
fildll
jl
imul
inc
aam
rcrl
lcall
daa
sbbl
jnp
fdivrs
mov
mov
fbstp
int3
jl
ds
dec
inc
fstps
sbb
and
test
negl
xchg
call
add
jbe
imulb
push
mov
sub
scas
movsb
cli
ds
cs
sub
test
sarl
xor
loope
rcrl
stos
out
or
test
shll
movsl
jae
out
loopne
lret
pop
mov
pop
xchg
aaa
loope
xchg
and
data16
cmpsl
xchg
stc
push
addr16
test
cmp
test
sbb
pop
or
push
and
std
sub
out
jns,pn
leave
pop
fs
lea
test
mov
jo
jno
inc
push
and
imul
rolb
outsl
ss
mov
add
add
in
pop
and
inc
push
aam
outsl
data16
dec
add
and
fs
sbb
push
xchg
xchg
mov
loop
jp
in
test
test
add
sbb
push
xchg
sar
sub
pop
pop
mov
sbbb
pop
or
test
cmpsl
jb
push
mov
dec
cmpsl
xchg
aad
scas
or
mov
ja
or
xchg
add
dec
mov
fcompl
inc
push
mov
outsb
mov
iret
mov
in
ret
fwait
push
int
or
cmpsl
push
scas
push
dec
out
pop
ficoml
xor
and
mov
les
rol
loopne
fwait
sub
cmc
outsb
pop
push
pusha
movsl
mov
lahf
sub
clc
mov
imul
xor
xchg
out
xchg
lds
or
mov
loop
push
aas
test
aas
xchg
iret
mov
ljmp
mov
push
inc
cmpsb
out
insl
and
mov
int
aad
jno
ficoml
out
fs
mov
fdivl
stos
push
mov
pop
jae
mov
clc
ss
xor
xor
mov
jo
lcall
mov
lret
sahf
jno
nop
sbb
rorl
insl
mov
ljmp
lods
cmp
iret
nop
push
push
sar
ljmp
inc
push
xchg
rol
adc
int3
outsl
and
sub
in
mov
pop
lcall
into
in
or
loop
popf
in
lea
add
xlat
cmp
es
mov
test
leave
mov
jl,pn
into
lret
lret
xchg
xchg
aad
mov
inc
or
jl
dec
inc
adc
mov
sarl
adc
outsb
and
jo
mov
or
sbb
xor
movsl
pop
ss
xorps
pop
mov
fisubrs
or
popa
jo
imul
iret
and
jb
adc
ds
scas
mov
pop
popa
jno
jecxz
es
cmp
push
adc
xor
movl
in
arpl
lods
xchg
inc
pop
dec
add
mov
nop
add
addr16
mov
xor
push
test
jecxz
jbe
daa
push
sub
out
xchg
aad
mov
lcall
inc
lods
dec
xchg
add
mov
insb
xlat
loopne
or
pop
nop
push
xchg
lds
add
push
jmp
mov
mov
out
fldcw
jg
out
fs
sar
in
pusha
cmc
movsb
pop
dec
hlt
jne
pop
xor
adc
in
sbb
dec
es
inc
add
jecxz
pop
jle
popa
vpabsd
dec
push
push
fcmovnb
or
out
jecxz
adcb
xor
push
jle
mov
sub
add
or
incl
pop
ds
xchg
mov
dec
jns
cli
pop
or
sti
shll
push
or
insb
scas
mov
push
stos
ret
mov
stos
push
in
push
outsl
jns
xchg
pushf
inc
movsl
inc
cmp
mov
call
mov
insb
arpl
xor
notl
popf
dec
stc
xchg
daa
dec
push
push
xchg
fisubrl
out
rclb
mov
test
popa
pusha
pusha
mov
adc
sbb
mov
jne
push
push
mov
cs
inc
loope
repnz
imul
xchg
push
mov
mov
sbb
inc
into
idivb
jmp
mov
dec
sub
mov
rol
mov
gs
or
push
jbe
cld
or
jno
jg
ret
lods
fcomps
mov
xorb
data16
xor
jge
js
dec
xor
jecxz
cmpsb
movsb
aam
push
int3
jbe
bound
xor
and
movsb
rclb
jns
into
push
mov
ror
mov
mov
jne
mov
mov
xchg
lea
and
in
sbb
fisubs
pushl
mov
xor
jae
sahf
pop
orb
add
jae
sbb
jmp
add
jge
mov
push
push
movsl
out
and
pop
mov
or
adc
mov
push
inc
decb
outsb
loopne
xchg
mov
ja
xchg
adc
ja
aad
nop
repz
mov
inc
imul
mov
sbb
jb
sub
divl
mov
cld
jne
mov
stos
xchg
sarl
sti
add
pop
sub
xchg
xorb
sar
push
xor
repnz
into
roll
push
pop
mov
lods
lahf
fstpt
movsb
ss
testl
xchg
mov
stos
rcrb
mov
mov
xchg
imul
or
mov
popa
loopne
aam
xchg
add
or
js
add
mov
inc
out
mov
arpl
clc
add
fcmovbe
notl
rorb
pop
lcall
les
aam
xchg
push
pop
jb
and
negb
jno
cmp
pop
mov
test
push
mov
pop
cmp
in
in
pop
cmp
sahf
xor
js
mov
ljmp
loopne
sub
mov
into
imul
imul
and
dec
sub
add
and
insl
pop
fwait
lcall
int
dec
in
std
jle
adc
ljmp
cmp
cmp
sbb
adc
and
fldl
and
ja
inc
enter
inc
mov
push
out
mov
mov
cld
mov
fwait
jo
cli
pop
rcrl
pop
inc
push
out
das
nop
dec
les
rcr
ljmp
pop
stc
mov
xchg
sub
adc
fistps
je
jmp
and
aaa
adc
dec
xchg
and
fwait
test
dec
jne
jmp
cld
lods
out
pop
push
adc
fcoms
sarl
rclb
and
lret
mov
pusha
lret
outsl
int3
mov
or
shll
push
in
or
mov
sub
mov
jo
das
add
jo
test
sub
mov
pop
ds
lock
mov
push
fcompl
jae
mov
leave
mov
push
cs
jle
sbb
mov
addr16
std
mov
inc
stos
mov
mov
scas
add
sahf
nop
mov
shll
imul
mov
bound
aas
vpaddw
adc
repz
test
xchg
mov
sbb
cmpsb
dec
rorl
cmp
call
je
clc
ljmp
popa
sub
sti
in
imul
fstp
loope
jmp
xchg
lahf
and
jb
sbb
pop
shll
and
mov
mov
hlt
pop
ljmp
xorl
sub
jno
xchg
jmp
jno
and
out
fnstcw
insb
xchg
push
lods
test
sub
dec
mov
inc
or
or
jne
imul
jl
sbb
out
xchg
push
or
mov
push
push
lahf
mov
inc
xchg
pop
gs
out
testl
jo
ja
sbb
or
idiv
imul
js
mov
or
cld
push
adc
xor
dec
jns
jle
test
scas
mov
jmp
push
add
mov
xchg
pop
push
mov
movl
cmp
subb
pop
mov
nop
scas
ja
mov
arpl
data16
in
jle
mov
mov
pop
sbb
shll
mov
dec
pusha
insb
dec
sub
push
jb
lret
adc
rolb
fldl
xrelease
dec
cli
shlb
ljmp
mov
pop
mov
jae
in
pop
dec
xchg
cmp
sbb
jmp
push
iret
rol
sub
mov
inc
xchg
nop
test
cmp
pop
jmp
lock
sub
fld1
inc
sahf
orb
fstp
sub
shr
imul
push
jbe
mov
nop
lock
jb
mov
inc
push
xchg
enter
pop
pop
js
dec
xorb
popf
fistl
test
clc
cli
and
mov
dec
insl
sbb
fwait
divb
mov
or
iret
xchg
mov
into
mov
push
jne
jae
dec
push
inc
push
mov
sub
xorb
push
outsb
gs
sub
xorl
rorb
xor
call
push
fstpt
pop
mov
loope
gs
jb
pop
mov
aam
faddl
punpcklwd
add
jle
or
inc
dec
rcl
push
gs
loop
pusha
or
dec
dec
and
lds
ficoml
sub
outsb
cs
dec
lahf
scas
jecxz
stc
and
jp
shll
sbb
adc
in
stos
inc
loope
loop
xchg
mov
fs
pop
or
fs
aad
push
out
dec
cwtl
jp
arpl
insb
aam
stos
mov
mov
xchg
arpl
je
sarl
add
daa
jecxz
mov
xlat
sub
cmp
shlb
call
mov
dec
js
mov
and
sbb
lock
ss
in
pop
adc
cmp
aad
sub
popf
cmp
jo
pop
div
pop
jle
sbb
insb
push
xchg
daa
mov
or
sbb
or
push
push
clc
lcall
xchg
push
dec
mov
adc
sub
es
pop
pop
mov
xchg
inc
insb
shll
mov
sub
call
inc
inc
or
sahf
addl
loopne
movsb
cmc
add
and
mov
xor
loop
ret
cli
push
fisubs
inc
jmp
inc
cwtl
or
sti
mov
and
repz
rcll
xchg
push
jmp
int3
mov
aam
lcall
push
dec
ret
mov
xor
in
xor
push
daa
jge
fidivrs
lods
cmp
popa
aas
test
ret
dec
cltd
dec
je
or
cwtl
bound
mov
cmp
sub
fs
jo
shll
dec
jnp
test
mov
adc
push
testb
jl
movsl
fst
jmp
and
cs
mov
xlat
test
push
mov
push
push
iret
pop
pop
ret
sub
test
lret
dec
xor
pop
cmpb
and
in
test
std
fdivrs
xchg
or
and
outsl
dec
push
cld
jl
fstpt
fstp
xchg
xchg
imul
rcrb
test
in
adc
mov
stc
int
mov
in
xor
cmpsb
enter
mov
popf
sbb
out
jb
and
pop
xor
mov
push
cltd
xchg
int3
out
call
movsb
xchg
insl
sub
cmp
sub
adc
push
out
sub
mov
jbe
push
loope
push
ds
test
cld
jl
lahf
jecxz
xchg
dec
jecxz
push
sub
les
adc
pushf
fdivr
add
xchg
test
pop
adc
dec
push
mov
mov
fstp
lock
xor
rcrb
data16
bound
mov
je
inc
mov
leave
je
lret
fistpl
out
scas
push
shll
test
jle
loope
mov
push
std
call
mov
shll
aam
decb
jg
jbe
pop
push
inc
scas
xchg
arpl
lods
scas
push
movsb
dec
clc
cs
lods
sub
js
and
xchg
aas
inc
jns
or
sub
test
mov
xchg
lods
int
sbb
frstor
test
aaa
cmp
push
push
nop
js
popa
imul
jl
push
and
sti
jg
pushf
scas
sbb
push
rclb
xchg
sti
outsl
inc
inc
test
mov
mov
push
jge
dec
out
andl
sti
add
dec
inc
sbbl
arpl
sub
rep
incb
gs
and
imul
mov
push
lods
mov
popf
sbb
mov
nop
cmpsl
adc
sbb
pop
ds
test
lock
or
adc
movsb
or
lret
andl
mov
xlat
lea
sti
mov
fcoms
push
sar
cmp
shl
mov
test
push
icebp
gs
lea
push
mov
stos
and
in
or
arpl
aam
xor
cmpsb
in
mov
push
scas
add
jnp
out
mov
add
xor
dec
mov
jmp
pusha
mov
sahf
ss
xchg
inc
into
mov
jo
mov
or
xchg
push
pop
sti
call
cmp
inc
sub
lret
int3
fdiv
addl
pop
mov
andl
ljmp
rorl
in
xchg
jo
js
aas
mov
pop
rcr
inc
mov
popa
lods
push
sti
or
sbb
sbb
xor
lret
push
cli
cmp
jbe
xchg
bswap
xchg
push
rep
push
and
imul
ljmp
loopne
arpl
mov
dec
out
mov
push
jnp
pop
test
dec
push
faddl
add
nop
int
imul
dec
aam
cmpsb
mov
fmul
add
push
jmp
mov
push
icebp
insl
and
and
add
dec
adc
pop
xlat
loopne
ds
ljmp
mov
sub
mov
dec
mov
cltd
and
jmp
cli
test
inc
movsl
mov
mov
stos
jecxz
or
dec
mov
dec
jne
sahf
push
divl
xor
push
xor
jle
aas
pushl
pop
mov
cmpsl
jmp
into
pop
jle
popa
gs
fldcw
test
fbstp
xor
jge
int3
mov
mov
adc
mov
mov
sbb
mov
push
popf
in
sub
and
inc
scas
dec
mov
pop
das
loopne
pop
addr16
xor
jbe
sub
pusha
add
pop
sub
lret
jl
in
repz
push
out
fwait
mov
lock
out
jecxz
outsb
and
mov
clc
pop
notl
xor
cwtl
sub
loop
sub
adc
sub
xchg
or
lret
loop
les
pop
pop
fs
outsb
push
mov
adc
mov
jns
push
or
ljmp
cwtl
stc
sbb
mov
addr16
test
xlat
jae
add
inc
imul
rcll
inc
idivl
jg
push
lock
jno
adc
daa
loopne
jle
dec
pusha
stos
and
or
cmp
add
ss
imul
gs
cli
mov
push
in
jno
mov
popf
scas
and
push
xor
pusha
pop
fdivr
add
adc
push
pop
push
adc
cwtl
jle
cltd
lahf
fbstp
push
adc
push
push
cmc
insb
dec
xor
loop
pavgw
push
je
dec
pop
mov
ret
pop
repnz
mov
mov
mov
lods
mov
pop
inc
push
imul
pop
dec
add
push
movsb
dec
sti
pop
insb
mov
call
cs
mov
jne
stc
js
cmp
loopne
cmp
cs
mov
push
bound
cmpsl
sarb
nop
nop
xchg
data16
out
les
cwtl
dec
push
dec
mov
clc
imul
popa
mov
dec
adc
imul
or
jo
cmp
fldcw
out
sub
xor
adc
int3
pop
jle
andl
dec
insb
push
pop
xlat
cmpsb
js
sahf
add
lahf
jno
dec
loopne
fmull
jno
stc
fnsave
pushf
jge
repnz
cli
jae
pop
movsl
mov
out
and
xor
push
sub
jbe,pn
adc
int3
or
dec
push
pop
or
clc
mov
popa
inc
stc
jg
push
sub
push
cli
leave
es
inc
lret
add
shl
jle
cld
mov
and
inc
push
or
pop
sub
sbb
iret
xchg
cld
mov
jmp
jne
into
jp
ret
pop
xor
sti
decl
cmp
test
sbb
test
jbe
sub
rclb
mov
rcll
shl
add
out
sub
mov
ljmp
cmpsl
repnz
add
cmp
movsl
scas
in
push
repz
addr16
and
aam
stos
stos
mov
inc
dec
mov
rorl
push
sbb
push
cmp
out
push
test
sbb
aam
or
aaa
insl
je
sti
pop
xchg
repz
mov
push
pop
out
test
and
mov
aam
pop
shl
fsubr
sub
aam
jmp
leave
mov
pop
cwtl
sbb
dec
inc
cltd
sbb
sub
pop
lret
fistl
pop
movsl
inc
fs
lods
xchg
orl
or
mov
inc
dec
sbb
ss
jl
sub
pop
xchg
pop
arpl
fwait
in
test
dec
lods
cmp
icebp
sub
cltd
aam
cs
xchg
int3
or
loopne
xchg
fistl
dec
mov
in
clc
cltd
cmp
inc
adc
imul
xchg
push
test
cmp
pop
test
mov
mov
pop
lock
adc
inc
movsl
xor
sub
inc
cmp
mov
pop
loop
adc
gs
insb
mov
mov
out
out
std
out
orl
addr16
sti
in
lret
enter
inc
sbb
cmpsb
dec
fdivl
pusha
movsl
rclb
adc
pop
clc
pop
pusha
inc
cli
test
xor
mov
adc
ja
icebp
or
pop
pop
cltd
cld
pop
std
movsb
inc
lea
xor
jl
dec
mov
nop
sbbb
pop
shlb
cmp
cmp
das
nop
loopne
fistpll
cmp
stos
add
fisttpl
and
bound
fists
iret
mov
dec
push
mov
jno
push
xchg
cmp
cmp
daa
inc
insb
jmp
pop
fldenv
addr16
test
aam
jo
push
inc
loope
in
mov
cmp
mov
rorl
dec
inc
in
popf
cmp
mov
maskmovq
testl
mov
orb
xchg
inc
push
mov
subl
xor
inc
cltd
inc
inc
out
mov
sbb
xchg
mov
mov
add
push
imul
test
sub
shlb
mov
in
clc
shll
scas
xor
rclb
mov
inc
mov
xchg
shrb
pop
lret
push
jg
out
mov
inc
ss
ffreep
stos
dec
lods
sub
push
dec
movsl
dec
jne
sub
lods
fucom
push
ds
test
sbb
or
dec
add
jns
mov
adc
xor
push
cmp
inc
call
xchg
fldenv
push
push
hlt
fldl
ljmp
and
push
std
arpl
mov
lds
icebp
loopne
inc
xchg
shl
sub
or
ret
jl
stos
xchg
mov
stc
in
and
sbb
push
pop
je
mov
dec
dec
mov
mov
fs
inc
scas
jmp
daa
xchg
mov
xchg
dec
fsubl
xor
pushf
or
jnp
add
shlb
add
sbb
insb
add
fcompl
shl
and
fldcw
pusha
cmc
testl
sbb
cmp
lock
mov
flds
xlat
sti
mov
insb
mov
dec
and
dec
daa
lods
jmp
xchg
and
into
shl
mov
fcoml
lahf
shl
sahf
fistpl
mov
xchg
in
jbe
imul
mov
aas
add
nop
jo
std
in
rolb
adc
cmp
ss
sahf
adc
add
dec
cmpsl
jecxz
and
call
push
sbb
loopne
shll
sbb
lret
sbb
cmc
inc
dec
test
add
inc
pop
add
fdivl
adc
rcl
lret
pop
push
mov
out
push
mov
sub
push
xchg
pop
cli
xchg
pop
mov
mov
mov
or
inc
in
movsl
rclb
stos
inc
push
pop
lock
std
inc
repz
jg
in
icebp
mov
imul
lea
loop
sub
stc
sbb
rcrb
fdivrl
inc
imul
xor
movsl
andl
and
bound
test
or
int3
pop
in
pushf
shrb
jge
mov
repz
mov
ja
mov
fstpt
sbb
aam
pop
roll
iret
dec
inc
loop
jns
lods
sbb
les
push
js
lds
adc
or
rorb
xlat
add
fstps
fimuls
jae
stos
sti
mov
cwtl
sbb
xchg
int
pop
das
cli
mov
inc
mov
cmp
sub
outsb
aad
sbb
insl
test
scas
popa
sbb
fs
push
je
imull
pop
pop
cmp
and
push
sbb
adc
icebp
cmp
and
clc
mov
loopne
pop
int3
or
and
pop
fistps
popl
sub
and
notb
in
popf
adc
out
cmpsb
adc
push
inc
inc
lcallw
mov
lret
sbb
dec
jnp
ud2
ss
push
dec
in
fistl
rolb
cs
push
jecxz
add
lret
outsl
daa
imul
fwait
ljmp
push
insl
into
dec
clc
pop
cmp
mov
pushf
xor
inc
in
imul
sarb
cmpl
mov
test
mov
aaa
imul
xchg
aas
outsb
lret
out
ret
pop
add
pop
pop
mov
jbe
cmpsl
xchg
lret
jb
test
daa
inc
fsubrp
cmp
je
sbb
sarl
in
inc
imul
mov
mov
push
pop
aaa
pop
addr16
xchg
dec
add
repnz
fwait
sub
cmp
mov
adc
insl
popa
adc
mov
cmpsb
or
and
enter
hlt
mov
xor
sbb
lret
mov
jle
lods
hlt
inc
dec
test
sahf
lods
movsb
arpl
cmp
test
adc
push
enter
out
outsb
fs
sub
push
xorl
xchg
mov
push
jo
dec
adc
dec
jg
mov
aaa
xor
push
dec
subb
inc
mov
jb
mov
or
lock
add
lds
leave
mov
add
mov
pop
iret
scas
stos
adc
adc
in
xchg
stos
xor
push
sub
pop
push
in
xchg
mov
std
xchg
popa
cmp
rcrl
mov
cld
aad
mov
in
push
movsl
mov
mov
fwait
dec
stc
sarb
lea
cmp
insl
cwtl
hlt
ret
mov
lods
imul
sub
dec
mov
and
xor
iret
orb
ds
mov
sub
cltd
pop
leave
sbb
mov
dec
jne
mov
dec
adc
cmp
addr16
fcomps
mov
ljmp
stc
iret
dec
jbe
mov
movb
scas
cmpsb
and
movsb
jge
jns
mov
int
gs
pop
ja
jg
or
in
or
insb
or
jp
jo
push
jo
aaa
or
repnz
div
test
rcr
dec
mov
sgdtl
cmp
cmp
out
mov
fstpl
xor
jg
fistl
push
jle
dec
xlat
lds
xchg
fsubs
enter
lods
daa
jg
lods
fs
pop
fmul
mov
notb
xor
dec
pop
mov
cmp
data16
les
sub
cmc
ficomps
push
lret
rorl
test
xchg
xchg
xchg
mov
stc
leave
mov
pop
mov
xor
xchg
loopne
sbb
ljmp
cmp
sbb
pushf
sub
mov
jge
loopne
pushf
sub
xor
mov
movsb
inc
daa
sub
ljmp
repz
fdivrs
pop
jnp
xchg
sub
repnz
sbb
or
jg
rcrl
cltd
cmp
popf
sbb
aad
dec
insb
rcrl
daa
sarl
jb
imul
jecxz
adc
jp
dec
jg
ret
cltd
inc
jle
mov
xor
or
imul
hlt
insb
or
mov
scas
cmpsb
bt
sub
popa
dec
inc
loop
in
dec
inc
fisubrl
les
rcl
pop
xorl
mov
push
xchg
out
data16
xchg
lods
mov
clc
ret
inc
dec
or
jecxz
dec
cmp
sbb
dec
and
test
in
mov
hlt
xchg
mov
push
das
subl
sub
in
fs
xchg
lea
or
ret
jmp
mov
push
xchg
dec
inc
shlb
gs
push
pop
lea
insb
push
shlb
mov
out
cmp
inc
sub
in
dec
fcmovb
mov
out
js
jg
movsl
dec
mov
repnz
push
push
mov
or
sbb
jg
mov
into
xchg
sub
aaa
unpcklps
cmp
add
sub
call
sub
or
daa
mov
scas
scas
push
js
aas
int3
xor
sbb
lcall
dec
jns
test
int
inc
ret
push
push
mov
mov
test
or
xor
arpl
push
mov
out
sbb
loop
sti
xor
cmp
addr16
dec
popa
out
xor
imul
jbe
pop
cmpsb
test
add
jl
rcr
lret
cmpsl
sub
adc
xchg
leave
xchg
fcomps
enter
js
es
xchg
pop
int3
ljmp
push
mov
insl
sti
imul
xchg
cmpxchg
iret
sub
xor
aam
popa
movsb
push
insl
rclb
cld
sbb
xchg
add
sti
pop
sbb
dec
jl
pop
lret
inc
test
mov
fs
adc
jae
call
mov
jp
push
jp
lcall
pop
inc
push
dec
lret
push
mov
sar
mov
dec
mov
aas
mov
jl
lahf
test
push
mov
and
sub
or
call
mov
mov
mov
orb
das
daa
aas
daa
mov
clc
sbb
lea
sub
adc
sahf
pop
inc
dec
aam
sarb
fsubs
repnz
sahf
jbe
mov
pop
scas
push
cwtl
jp
scas
lock
std
jl
pop
in
add
mov
outsb
or
xchg
and
mov
cmp
sbb
mov
mov
test
inc
add
leave
mulb
mov
gs
out
pop
jge
or
mov
je
loop
xchg
rcl
fidivrl
add
jb
pop
arpl
jp
dec
push
and
icebp
lea
dec
fists
call
ret
adc
movsb
js
sahf
mov
sti
push
test
addl
adc
mov
pop
adc
iret
push
aaa
lock
sub
aaa
ret
xor
xchg
pop
jnp
repnz
iret
shlb
push
push
xlat
sar
pop
imul
clc
pop
in
imul
xor
cmpsl
call
pop
pop
bound
cmpsb
shlb
inc
sub
lahf
filds
or
and
dec
int3
icebp
or
sti
jnp
lods
xor
inc
loope
lds
inc
enter
dec
inc
mov
fmuls
mov
xchg
loope
pop
js
adc
clc
xor
xor
jecxz
shl
popa
add
mov
test
xchg
mov
aad
int
mov
data16
aaa
lret
decl
jl
push
push
mov
loop
pop
daa
pop
mov
das
jmp
fnstcw
leave
dec
test
mov
push
ljmp
add
out
push
pop
nop
pop
fs
and
sub
fcompl
daa
in
push
orl
jmp
pop
add
les
mov
lds
sbb
xor
pop
and
mov
cmp
pop
mov
add
sbb
aad
mov
std
sub
lds
inc
pop
inc
js
lock
or
dec
cmc
cwtl
mov
sbb
int
cmp
popf
in
dec
out
iret
fldl
pop
out
lock
pushf
adcb
mov
sub
arpl
dec
mov
or
and
xor
out
enter
push
jbe
xchg
pop
dec
push
ret
and
mov
dec
loopne
cwtl
mov
je
xchg
xor
fucomip
pop
mov
test
or
pop
sbb
in
stos
es
jge
jns
ud0
mov
cmp
inc
lcall
add
jns
scas
xor
adc
mov
add
addb
incl
and
mov
mov
shrl
fmull
xchg
sbb
hlt
pmaxsw
in
sti
loop
inc
test
adc
lea
test
repnz
out
jge
jnp
push
fsub
xchg
nop
jns
hlt
ss
into
xor
mov
sub
jo
icebp
faddl
add
hlt
sub
rcr
loop
xchg
cmp
add
mov
add
insl
adc
dec
push
jne
cmpsl
mov
out
sub
fidivrl
mov
xor
rcrl
mov
or
lahf
push
int
xchg
push
adc
add
rorb
repnz
jnp
pusha
mov
loopne
xor
insl
sbb
stos
jg
or
cli
dec
inc
pop
scas
push
jmp
aad
in
ret
stc
add
jae
imull
mov
mov
sbb
cli
mull
sbb
adc
sbb
pop
bound
lret
ret
mov
es
xchg
pop
arpl
cwtl
ljmp
push
lcall
jo
mov
and
and
add
jg
mov
int
aaa
incb
mov
fnsave
or
push
xchg
enter
ss
add
jae
jmp
push
out
pop
scas
mov
mov
jge
pop
shlb
jmp
push
rep
insl
and
mov
imul
pop
pop
inc
subl
xchg
popa
cmp
lret
and
or
fisttpl
adc
xchg
shlb
ja
push
and
insb
pusha
push
push
insb
inc
loopne
xor
je
and
shll
push
add
in
icebp
cmp
outsb
pop
cld
test
xlat
repnz
adc
mov
out
inc
fdivs
push
lcall
cmc
insl
cli
fmuls
mov
push
jecxz
and
ljmp
or
pushl
inc
das
insb
les
xor
stos
stos
scas
push
aam
cmp
mulb
mov
jne
sbb
fstl
jbe
mov
push
daa
lods
add
jp
lds
adc
and
and
xchg
inc
cmp
loopne
mov
lds
bound
sarl
jno
jno
cmc
jp
lods
push
and
daa
loop
cltd
mov
in
add
jp
or
fcomps
outsl
cmp
sbb
mov
mov
push
shll
sub
mov
shlb
inc
mov
lahf
scas
sub
inc
testl
int3
cwtl
pusha
inc
sarl
dec
int
imull
cwtl
and
xchg
daa
mov
repnz
xor
shrl
and
push
jne
sbbb
out
jge
jnp
xor
or
pop
pop
lea
sti
add
mulb
push
sbb
adc
out
xor
mov
or
inc
ljmp
pop
out
inc
mov
mov
xor
subb
imul
stc
or
call
aam
fists
adc
es
add
orb
mov
test
xor
sub
sub
mov
xor
fists
push
xchg
and
add
rep
cwtl
mov
dec
sub
cmp
xchg
lods
iret
outsl
push
jg
clc
loope
and
notb
repnz
cmp
cmc
test
cmp
iret
loopne
iret
adc
mov
imul
stc
inc
je
pushl
mov
in
xchg
xchg
sbb
cmp
jecxz
add
lods
mov
xor
std
shr
xchg
loop
or
mov
insl
or
lock
lds
lret
fidivrl
leave
les
jbe
stos
scas
mov
data16
xchg
lcall
in
jb
sub
test
aam
mov
ja
or
dec
call
lods
bound
mov
mov
fisubrs
jmp
jmp
pop
pop
sbbl
add
jg
or
jle
mov
xchg
pop
or
push
loopne
loopne
dec
inc
in
into
push
jl
out
xlat
mov
dec
xchg
popf
enter
mov
gs
and
sti
xchg
pop
push
insb
test
outsb
loope
push
out
repz
and
push
mov
imul
stc
xchg
jo
aaa
repz
xchg
mov
out
ficomps
stc
or
jg
mov
push
sub
fists
hlt
jae
stos
icebp
xor
push
cmpsb
dec
mov
das
cmp
sets
and
stos
sub
into
or
mov
gs
dec
fsts
push
mov
rcrl
adc
movsb
inc
fistps
fcomi
push
mov
cmp
ss
jp
bsr
mov
fwait
je
lods
stc
jge
movb
inc
pop
inc
cmp
push
rcrl
or
xchg
cmp
and
lds
pop
xor
popf
dec
hlt
lods
add
clc
mov
xor
lea
outsb
sti
push
sub
cmp
jmp
cmp
addr16
fnstcw
aas
mov
rorb
jmp
jecxz
outsb
jecxz
jp
cmp
iret
xchg
sahf
lods
inc
jnp
imul
cmp
push
mov
sub
push
je
sub
nop
xchg
push
stc
hlt
jp
jmp
mov
mov
adc
imul
sti
hlt
fcompl
int
cmp
repnz
call
loop
jl
dec
dec
stos
ficoml
lret
inc
sti
jge
add
lea
popf
push
rorl
mov
cmp
add
jmp
fs
sub
nop
xchg
mov
mov
fisttpl
pop
test
loope
inc
adc
or
pop
scas
or
adc
cmp
hlt
nop
nop
push
push
outsb
xor
jle
sub
mov
adc
mov
gs
mov
scas
lock
add
pusha
pop
mov
add
sub
shlb
mov
imul
add
iret
xchg
fcoml
inc
sub
xlat
dec
call
sbb
repz
sub
sub
sahf
jne
shr
sub
inc
lea
cltd
addr16
lahf
rcll
sub
lds
fdivrl
pusha
mov
aam
add
or
sbb
and
dec
outsb
push
call
jae
sub
sub
xchg
jnp
inc
pop
stos
mov
popa
out
adc
nop
sub
lds
lret
xor
loopne
xchg
sbb
rcll
push
or
imul
push
cld
mov
mov
iret
xor
pop
sbb
adc
daa
call
mov
pop
gs
sub
cmp
inc
mov
test
fidivl
jge
pop
xor
stos
dec
jne
mov
push
jne
addr16
repz
pushf
adcl
push
push
rclb
int3
cmpsb
ret
push
ss
mov
cwtl
sbb
pop
mov
data16
pop
retw
js
fistl
sti
jnp
jge
aas
xlat
add
and
push
repz
std
pop
in
push
xlat
icebp
cmpsb
push
sbb
data16
out
xor
mov
aam
lcall
ret
stos
jno
sbb
daa
lods
insl
pop
lds
add
push
lret
popl
push
mov
jmp
add
push
popf
daa
or
repz
sub
adc
adc
aam
loop
cmc
jmp
mov
inc
popa
add
or
jo
sbb
fdivrp
mov
push
mov
cmp
test
sub
dec
xor
mov
sarl
jl
fldt
scas
outsb
sub
sbb
or
test
mov
dec
xchg
jne
int
pop
mov
or
jp
cmp
mov
in
jp
mov
xor
pop
mov
aad
sub
mov
mov
mov
lds
ds
and
xor
jnp
pop
iret
iret
fnstcw
mov
or
xor
test
lods
fldenv
add
lret
xchg
jg
popa
sub
lret
lods
mov
shl
jbe
addr16
test
cmp
lds
adc
jg
xor
ret
mov
mov
outsl
push
fstps
inc
lcall
add
pop
movsb
mov
jge
or
sbb
lds
and
sub
pushf
add
xchg
scas
ds
lods
and
in
shl
dec
xchg
or
lcall
jp
js
jae
aaa
adc
mov
dec
arpl
push
xlat
sub
sub
pop
jmp
mov
mov
inc
adc
mov
rsqrtps
testb
pushf
stos
jp
cmp
icebp
dec
ss
pop
sub
jecxz
xor
xchg
sbbl
mov
ret
pop
imulb
rorw
fbld
and
shrl
adc
ja
std
cmp
fwait
test
or
sub
fidivs
dec
cmp
sub
movsb
xor
stos
stc
fisttpll
lock
and
test
das
mov
push
enter
cmpsb
sbb
out
xchg
je
and
outsb
pop
cmpsb
call
push
inc
jecxz
xor
ss
repnz
or
or
or
cs
cmp
mov
stc
pop
jg
or
ret
sbb
shrb
mov
mov
cli
setnp
mov
mov
scas
or
push
xchg
push
pop
inc
sub
lret
push
xor
aam
sbb
data16
xchg
pop
into
add
fmull
cmp
rcl
adc
in
jo
mull
imul
cmpsl
pusha
scas
adc
mov
mov
or
xor
sub
jno
jbe
test
jnp
jmp
leave
sub
test
rorl
mov
or
xor
dec
sub
jnp
in
or
dec
les
jle
fidivs
in
cli
pop
sbb
movsl
push
lret
fcmovnbe
lock
in
popf
pop
std
das
sub
ss
icebp
in
in
addr16
xchg
sub
jg
and
cmp
mov
sbb
mov
inc
sub
loopne
xchg
inc
pop
cld
negl
lods
pop
mov
adc
ret
mov
loopne
lods
and
out
or
jmp
clc
inc
lcall
fistl
inc
mov
repz
testb
lcall
scas
inc
into
std
xor
mov
imul
mov
jmp
pop
test
jbe
gs
movsl
sub
loopne
jp
jns
aam
loopne
inc
xchg
and
mov
je
mov
sbb
lds
je
or
sbb
adc
jl
jbe
xchg
mov
lds
cmp
xchg
adc
cmp
jg
sbb
pop
xchg
mov
mov
outsb
scas
hlt
stos
cld
daa
xor
mov
jb
pop
pop
push
mov
arpl
pop
aam
out
out
ret
jmp
push
sbb
test
or
cmp
repnz
movsb
pop
jmp
mov
addl
test
outsb
xor
and
pop
fwait
pusha
rol
and
xor
in
xchg
jmp
repz
dec
sbb
cmp
inc
xor
sub
pop
jnp
lods
in
cltd
or
cli
mov
sub
bound
dec
test
pop
jno
add
data16
xor
xchg
in
fisubrl
aaa
test
sub
or
xchg
pop
lods
sti
outsb
adc
cmp
cmp
orl
cs
lods
push
inc
push
test
push
add
xlat
fisubs
in
push
push
jns
inc
mov
sbb
icebp
movsl
or
mov
std
js
push
jnp
pop
icebp
inc
pop
mov
jmp
fstpl
inc
and
push
rolb
jno
je
pop
dec
adc
aas
std
int
cltd
cmp
cld
pop
cmp
pop
iret
rorl
adc
movsb
aas
inc
sti
mov
arpl
lret
mov
mov
xchg
xchg
jae
dec
push
xchg
loopne
jnp
ds
leave
fwait
push
push
and
pop
and
adc
or
push
sti
imul
fmul
jle
mov
sbb
cmpsl
imul
divb
lods
inc
cmc
pop
pop
xchg
push
dec
dec
inc
iret
fnstsw
push
loopne
das
outsb
loop
fidivl
mov
xchg
hlt
sub
sbb
call
aam
jp
inc
ja
push
lods
adc
in
sbb
cmc
jbe
pop
in
inc
cld
dec
adc
fiadds
mov
and
fucomi
push
add
add
cltd
mov
pop
and
sbb
push
repz
pop
cmp
mov
sub
push
xorl
in
xor
add
bound
scas
cmpsb
hlt
enter
pop
stc
loope
std
sub
and
in
movsb
subb
je
xchg
jecxz
xchg
int3
jno
inc
rclb
mov
sbbb
nop
mov
inc
in
jp
jno
cmpsl
xchg
mov
push
aas
aas
cmp
jg
popf
push
aas
push
jmp
rolb
xchg
sub
idivl
outsb
shrb
push
pusha
ss
pushw
es
push
ret
cli
inc
shlb
mov
shlb
dec
loop
mov
pop
in
dec
es
mov
pop
push
int
inc
data16
xchg
testl
lods
jge
ret
testb
sub
repz
sbb
jne
ret
out
rclb
push
and
mov
fstpt
mov
push
inc
sub
mov
out
insb
add
stos
movsb
icebp
jl
push
callw
cmpsb
in
scas
nop
mov
sbb
jge
repnz
sub
cmp
xchg
dec
lods
insb
adc
mov
pop
sub
movsb
sbb
mov
into
call
movsl
stos
movsl
inc
xchg
pop
push
adc
xchg
add
pop
and
mov
jecxz
fnop
jp
add
fs
andb
call
and
xchg
jmp
xor
lret
adc
inc
cs
stos
mov
sub
sbb
pop
les
scas
inc
out
stos
jg
xchg
popa
jae
jne
insb
cmpsl
aaa
aas
push
add
stc
add
call
iret
das
cmp
sub
cltd
hlt
push
pop
mov
jle
pop
lcall
aam
pop
jl
cli
outsb
lcall
gs
jge
xor
imul
and
mov
xchg
outsb
pusha
rorl
mov
fdivrs
cltd
inc
sbb
mov
xchg
jle
xchg
jb
es
stos
jno
inc
dec
xchg
jb
sbb
pop
psubsb
xchg
mov
mov
lds
jl
mov
inc
sahf
dec
stos
mov
cmp
mov
ret
es
nop
dec
mov
xchg
and
insl
lret
lods
push
data16
or
and
std
sbb
test
shl
mov
jg
xchg
pop
lds
hlt
xchg
mov
jb
loope
push
and
cmpl
jl
lea
adc
and
out
mov
push
add
out
test
pop
dec
leave
test
pop
and
mov
lods
call
xchg
int3
iret
ficoms
pop
bound
xchg
inc
popf
int3
jle
mov
das
xchg
lds
xchg
xchg
cmpsl
ficoml
push
sti
bound
mov
xor
jae
sbb
pusha
xor
iret
jne
ja
lock
in
sub
stos
leave
stos
repz
imull
sbb
roll
and
insb
jmp
inc
push
and
mov
pop
shr
xchg
scas
dec
cmc
insl
imul
clc
fs
push
movsb
jg
scas
inc
pop
imul
xchg
arpl
test
imul
pop
popa
mov
cmpsl
mov
pop
jns
mov
mov
dec
jg
scas
dec
mov
cmp
mov
jb
jns
push
jge
mov
push
out
adc
cmp
call
jmp
out
std
repz
push
outsb
les
cwtl
lods
inc
inc
cmp
pop
js
sub
test
pusha
sub
cmp
imul
outsb
iret
mov
pop
inc
add
int
rcl
mov
pushf
jno
je
or
sti
aas
sbbb
mov
pop
inc
leave
mov
sbb
xlat
loop
push
sbb
jno
loop
lret
cmc
push
jg
lods
xchg
psubd
push
shlb
addr16
cwtl
xor
sub
ficoml
sub
sub
mov
dec
call
or
xchg
mov
aaa
cmp
shlb
sbb
imul
hlt
cmpsb
addb
adc
cwtl
inc
lcall
jbe
data16
sahf
jl
cmp
push
pusha
and
stos
inc
xchg
scas
fbld
pop
movsl
cmpb
adc
inc
out
sub
xor
lret
sbb
out
insb
adc
mov
push
rcr
or
jae
dec
cmp
imul
sbb
sahf
mov
insb
lods
test
sbb
popl
cltd
daa
mov
inc
call
xor
leave
add
enter
jmp
cltd
ret
movsl
adc
cmpsl
pushf
scas
push
sub
orb
jo
in
lret
stc
sub
mov
mov
xchg
inc
shrl
mov
bound
sbb
fcoml
push
xor
call
mov
das
int3
pop
repnz
pop
adc
or
leave
cmpsl
outsb
repz
sub
pop
ficompl
mov
cmp
nop
rsqrtps
mov
adc
mov
lahf
sub
movsl
add
xor
ljmp
push
xor
daa
call
ja
daa
inc
sub
nop
sub
inc
out
pop
mov
mov
int
mov
and
mov
pop
stc
sub
daa
push
hlt
jns
xor
aad
inc
or
pop
and
and
sub
xchg
dec
cmpsl
fs
outsl
xorl
imul
sti
dec
add
lds
aaa
cmpsl
in
adc
dec
jmp
shrl
push
cmpsb
pop
adc
enter
mov
call
mov
add
fisubl
cwtl
mov
popf
sub
mov
loop
xchg
enter
loop
movsl
jns
scas
cmp
popa
push
mov
sbb
mov
lea
bound
idiv
outsb
xchg
cmp
dec
iret
mov
das
add
into
pop
inc
dec
cwtl
ret
mov
lret
jns
mov
insl
ja
repz
ret
mov
and
inc
mov
push
dec
jle
rcr
int
mov
test
dec
mov
mov
shrl
test
int3
fwait
jae
inc
or
sub
lods
pop
mov
cli
xor
mov
fadd
sarl
lret
jbe
mov
push
or
testb
hlt
popf
jns
add
sbb
imul
outsl
outsb
insb
ficoml
movsl
out
nop
push
dec
flds
movsb
fcomps
pop
sbbb
shll
int
and
cwtl
mov
xchg
hlt
or
ret
cmpsl
imul
fistpll
popf
lret
add
sbb
imul
ret
push
pop
testb
addr16
lea
jp
sarl
and
aad
in
js
sarb
xchg
leave
dec
aam
add
call
cmpsb
test
ja
jge
fisubrs
adc
or
pushf
jge
idiv
push
cmp
pushw
xor
dec
pop
sub
cmpsl
int3
xchg
out
add
push
insb
xchg
mov
outsl
mov
or
cld
out
mov
jle
jp
pop
sbb
fsub
jge
mov
inc
iret
cmp
out
jg
popa
sbb
xchg
xor
pop
addr16
js
je
cmp
dec
mov
dec
push
or
push
stos
negl
fld
in
fwait
xor
adc
andl
test
arpl
sub
pop
insb
test
das
clc
mov
idivb
sbb
gs
mov
push
push
and
jg
add
hlt
push
movsl
std
fidivs
add
adc
dec
dec
inc
das
cli
xor
lods
mov
loop
jle
cmp
or
iret
adcl
push
fisubrs
sahf
lea
ret
int3
push
test
movsl
pop
imull
outsb
cmc
mov
xchg
dec
call
fmuls
enter
lret
test
pop
push
ja
xchg
inc
sbb
jns
rclb
fs
inc
and
pop
sub
push
push
cmp
out
stos
cmp
sub
je
orb
mov
pop
mov
aaa
mov
rolb
mov
fwait
pop
jo
out
gs
repz
sbb
divl
push
sbb
jg
pop
mov
fstpl
lock
iret
int
sub
in
mov
sub
mov
or
adc
push
mov
dec
and
inc
inc
push
pop
adc
add
add
sar
lods
mov
xor
fscale
and
push
dec
icebp
pop
into
cmp
rorl
in
xchg
cmp
testl
sahf
cli
repnz
sbb
loop
cli
push
cmp
les
rolb
mov
arpl
push
push
das
arpl
cmp
mov
sbb
xchg
sahf
sub
out
icebp
in
xchg
pushf
fwait
push
fs
sub
or
xorl
sub
movl
aas
pop
cltd
daa
popf
lods
or
jl
repz
enter
stos
sub
jbe
mov
aaa
mov
xor
sub
enter
out
dec
xlat
xor
out
xchg
pop
push
lret
add
out
push
movsl
ficoms
lea
jmp
add
out
test
lcall
insl
pop
inc
inc
and
imul
notl
and
sbb
push
push
ret
ret
sub
rol
xchg
jno
sahf
leave
cltd
mov
and
or
fisttpl
adc
shlb
sbb
fildl
cs
fnsave
lods
stos
movsb
mov
divb
adc
cmp
mov
inc
push
mov
inc
aad
dec
pop
mov
stos
out
sbb
xchg
sbb
jno
leave
int3
int3
leave
testb
jo
add
test
pop
or
int3
cmp
adc
sub
pop
scas
mov
add
movsb
fnstcw
mov
mov
sbb
push
imul
inc
or
shl
adc
push
mov
out
insl
add
sbbl
sbb
popf
in
test
repnz
mov
cmp
mov
daa
or
adc
push
cmp
push
push
out
adc
add
cltd
nop
dec
ja
orl
pop
test
shr
sub
mov
ja
test
fcos
scas
aam
dec
mov
out
popf
lahf
fldenv
mov
sbb
scas
mov
jg
add
lahf
pop
xchg
xchg
shrl
push
lods
nop
in
cmc
shlw
fsubp
in
and
sub
inc
push
outsb
push
arpl
rorb
les
fwait
pop
mov
stos
sbb
fld
pop
or
ror
loop
cmpsb
dec
roll
insl
in
pop
and
test
ffree
ss
sub
dec
mov
xchg
jae
popf
imul
ss
fs
or
cmpl
mov
out
xlat
dec
aas
repz
popa
loope
in
dec
sub
or
mov
mov
cmp
test
mov
jnp
pop
cmpl
pop
push
inc
ss
mov
sbb
arpl
push
js
pop
inc
in
je
xor
orb
xchg
cltd
rcrb
out
push
add
aaa
xor
rclb
jl
dec
repnz
and
mov
sti
nop
mov
sub
add
in
mov
mov
roll
mov
or
sbb
mov
das
lds
or
xchg
jp
mov
cmp
arpl
mov
gs
sub
mov
cli
push
xchg
pop
out
cmp
add
pusha
mov
shrb
lcall
mov
fwait
mov
cmpsl
mov
int3
sub
repnz
jns
mov
rorb
in
scas
sub
aam
ucomiss
cltd
cmpsb
jo
outsb
out
das
mov
dec
lds
pop
mov
ja
push
sub
aaa
ja
xchg
loopne
pop
pop
push
arpl
pop
push
cmp
mov
cmp
fimull
xor
adc
xchg
sub
lret
cltd
cmp
pop
sub
sub
mov
sub
xchg
sub
cmp
push
cs
popa
sbb
rcll
sub
sub
add
roll
es
xchg
shl
jne
adc
push
pop
mov
push
les
xor
pop
hlt
orb
cmp
push
push
insb
fdivr
cmpsl
fbld
in
jmp
ret
push
sarl
test
mov
and
test
pop
rcrb
mov
adc
mov
dec
pop
xchg
mov
outsl
mov
pop
push
jno
repz
stos
ficomps
jmp
and
repnz
out
enter
xchg
outsl
sahf
dec
pop
or
jg
outsl
das
enter
js
ret
adc
mov
inc
pop
stos
jmp
aad
xor
and
xchg
mov
mov
mov
ror
dec
rcl
jg
sahf
repnz
dec
movsb
scas
dec
cmpl
mov
jno
aad
ja
cmc
aas
lahf
ret
mov
enter
repz
mov
push
hlt
ret
std
pop
arpl
cmc
push
leave
hlt
add
mov
ja
or
adc
sub
mov
lods
and
push
cmp
add
fsts
mov
fstps
insb
ja
jge
xchg
xchg
jno
ucomiss
sbb
mov
mov
imul
adc
jmp
cmpsb
inc
push
mov
cmp
cmp
inc
ja
outsl
stos
outsl
xor
lea
and
sarb
lcall
jne
aaa
dec
ss
icebp
rorl
and
sbb
mov
andb
repnz
mul
cmp
cmp
jg
aas
sbb
test
cmc
cmp
pop
mov
mov
xchg
sub
xor
push
inc
mov
push
in
mov
imul
test
mov
adc
mov
or
push
dec
jmp
push
roll
adc
lret
sub
pushf
mov
test
repz
sub
dec
inc
xchg
repnz
dec
or
out
push
cmp
or
or
fldl
xchg
adc
sub
cmp
lods
test
sub
sbb
pop
int
mov
test
pop
stc
mov
xchg
scas
sub
adc
pop
push
jno
or
add
adc
mov
mov
mov
rclb
shrl
mov
xor
add
lret
insb
sbb
shl
sbb
das
aas
and
lahf
out
enter
mov
lds
jl
mov
fcompl
xchg
repnz
jl
mov
xchg
and
ss
insb
pop
sarb
test
xchg
rep
inc
mov
xchg
sbb
loope
mov
cmp
xchg
pop
jecxz
mov
inc
adc
xor
loope
xlat
sbb
sahf
clc
mov
mov
int
xchg
stc
or
mov
addb
pushf
inc
aad
int
pop
sub
adcb
popa
pop
clc
jno
in
or
push
mov
dec
mov
xchg
push
sahf
mov
mov
out
inc
je
push
push
je
jbe
ret
addr16
sbb
loopne
or
fbld
push
aas
addr16
sar
neg
mov
xlat
sti
sahf
mov
and
sub
in
std
push
out
jecxz
das
mov
lods
aas
mov
sub
fdiv
adc
cmp
jo
mov
pushf
xchg
addr16
mov
lcall
les
xchg
adc
adc
add
lds
pop
jo
out
and
sbb
inc
aad
pop
jno
iret
pop
lock
mov
dec
cmp
mov
xchg
cld
out
dec
mov
jb
push
adcl
insl
insl
pop
mov
lret
rolb
cmp
push
into
mov
push
mov
addl
inc
inc
and
dec
out
into
mov
sbb
pop
sub
pop
cltd
out
and
das
jae
and
adc
dec
push
pop
sarl
icebp
fwait
mov
mov
out
data16
mov
add
or
add
mov
sub
push
dec
add
cmpsb
shrb
fimull
xor
lea
sbb
or
add
in
test
repnz
lahf
fsubr
and
cltd
in
loop
in
sbb
outsl
mov
fstpl
mov
add
ss
dec
xchg
ja
fbld
lods
sub
lret
jle
push
clc
dec
jae
sbb
gs
inc
in
and
jbe
xor
ja
jo
cmp
sub
sti
jmp
push
sti
outsl
lods
into
add
push
shll
ds
mov
sub
pop
jno
adc
insb
push
pushf
push
lods
sbb
out
hlt
cmpsl
push
call
adc
divl
sub
adcb
xor
xchg
mov
dec
mov
fs
bound
cltd
lahf
push
test
sar
pop
adc
leave
cmpl
mov
mov
cmp
insb
mov
push
jno
in
add
jecxz
mov
lcall
int
mov
inc
leave
inc
aad
xor
xchg
mov
mov
mov
sbb
std
lahf
mov
sub
dec
sbb
adc
lret
rorb
lret
xchg
test
mov
inc
stos
loope
xchg
jnp
cld
jbe
pop
loope
xchg
js
scas
clc
fimuls
sbb
fsubl
movsb
pop
mov
and
clc
popa
lods
pop
outsb
test
stos
mov
nop
xor
mov
push
inc
cmpsb
mov
nop
mov
cmp
ss
mov
aad
adc
stc
outsb
outsl
fwait
mov
push
adc
rcrb
pop
outsb
xor
jg
add
sbb
jb
mov
cmp
lahf
or
and
mov
inc
sub
sti
pop
push
mov
pop
cltd
lret
push
and
sbb
jle
xchg
rcrb
out
mov
cwtl
inc
push
movsw
pop
adc
insl
xchg
sti
mov
aam
roll
out
pop
xor
jbe
pop
pop
pop
dec
in
mov
add
ljmp
sbbb
imul
xchg
mov
jge
test
and
lea
and
adc
or
push
fldt
sub
xchg
lods
scas
out
mov
inc
bnd
cli
iret
stc
cmc
lahf
repnz
mov
push
pop
int3
lods
jmp
aam
ljmp
nop
pop
jg
xchg
sahf
adc
jo
and
out
mov
outsl
jae
cmp
xchg
nop
pop
and
cwtl
in
test
jle
sbb
imul
and
mov
rol
jecxz
dec
ror
jns
pop
dec
mov
testl
fsts
jb
adc
cmc
loopne
div
ss
jno
iret
lret
cltd
decl
or
sbb
cmp
push
or
incb
ljmp
sub
js
mov
ficoms
cmc
mov
aam
lock
daa
push
dec
sbb
dec
aaa
ror
xchg
dec
pop
packssdw
in
xchg
std
mov
movsl
das
cwtl
adc
mov
or
cmp
mov
scas
dec
imul
mov
imul
imul
mov
popa
rcl
cmpsl
loope
or
mov
cmpsb
orb
jmp
mov
fsubs
and
out
cmpsl
add
mov
jmp
lcall
out
push
and
push
pop
test
js
dec
sti
ds
push
adc
sbb
aaa
adc
out
pop
scas
push
sbb
scas
push
or
cs
push
ds
jge
pop
or
mov
add
mov
lock
jb
and
xchg
mov
subb
repz
xor
adc
testl
mov
xor
mov
out
call
sub
inc
dec
mov
mov
xor
lds
inc
mov
xchg
jbe
mov
cmp
cmp
cmp
int3
mov
jae
clc
pop
mov
xor
call
bound
rcrl
and
cmp
notl
mov
stc
jns
shlb
mov
es
arpl
sbb
add
inc
aam
pusha
fldl
sbb
fdivp
fnsave
jae
mov
xor
pop
mov
inc
mov
cli
outsl
adc
mov
xchg
enter
dec
lock
adc
push
inc
lea
cmp
loope
pop
iret
leave
fs
in
int3
insb
add
xchg
add
call
lret
scas
mov
push
jecxz
out
mov
lds
cmp
lods
fdivr
jle
or
popa
test
stos
dec
mov
sbb
stos
fistpll
xor
push
push
cmpsb
sahf
mov
lock
in
enter
push
icebp
jg
lods
lret
dec
sti
fnsave
sub
mov
fisubrs
xor
repz
add
aam
pop
inc
std
stos
out
testb
jae
jl
je
arpl
mov
ret
lods
xor
clc
or
in
push
push
pop
or
sbb
popf
sub
xlat
pop
out
or
nop
mov
divb
dec
lods
jae
mov
cwtl
jge
imul
jl
or
sbb
aaa
or
movb
loop
repz
inc
dec
lahf
push
add
es
lock
mov
fcompl
mov
jno
fwait
mov
push
mov
xor
inc
leave
mov
popf
aam
roll
insl
xchg
cwtl
cltd
xchg
lahf
push
outsl
jne
and
or
pop
into
pop
inc
imul
mov
lret
clc
xlat
clc
addr16
xor
pop
inc
adc
pop
pop
mov
fstps
fstl
insl
mov
mov
jp
jnp
cmpsb
push
and
fiadds
lea
lret
arpl
iret
ret
pop
push
scas
inc
xchg
stos
andl
add
adc
roll
dec
xchg
ret
mov
mov
in
xchg
add
add
insb
cmpsb
pop
dec
cld
push
jmp
sbb
movsb
fcoml
pop
cli
in
xor
pop
adc
idivl
mov
scas
adc
dec
repz
pushf
lea
js
cmpsb
push
mov
cs
lock
mov
ficompl
xchg
or
pushf
sbb
and
lods
jl
or
or
xchg
les
aad
ffreep
push
push
add
inc
je
ds
mov
mov
movsb
mov
or
pop
xchg
mov
ret
xor
or
add
mov
mov
stc
and
cmc
push
outsb
ficomps
push
orps
ret
or
dec
div
int
or
test
movsb
iret
bnd
cmp
mov
dec
add
sub
into
enter
push
mov
imul
or
cmp
xor
mov
mov
stc
pop
fdivs
jnp
js
stos
pusha
ljmp
mov
jno
cmp
mov
ret
and
jg
xchg
shlb
test
jns
pop
iret
jne
cmp
gs
and
jl
outsb
stos
push
jb
gs
bound
jl
mov
aad
fs
jecxz
repnz
ljmp
frstor
or
test
pop
test
dec
lods
xchg
sbb
fisttps
push
xchg
dec
jp
sbb
push
lret
xchg
cmpsb
sahf
push
jmp
xchg
inc
stos
in
sub
adc
addl
dec
dec
pusha
and
adc
mov
aaa
push
pop
ficoml
inc
jno
ja
loopne
mov
push
xor
pop
sbb
fsubl
sti
xchg
ljmp
ds
mov
ss
push
outsb
pushl
or
insb
dec
and
lock
andl
sbb
sub
outsb
test
mov
mov
xchg
mov
fwait
popa
jo
sbb
sub
cmp
pop
test
ror
inc
ret
arpl
inc
mov
xor
outsb
xchg
orb
test
mov
scas
jle
sub
out
in
xlat
scas
out
push
mov
adc
mov
mov
inc
aas
jmp
add
sbb
sti
mov
mov
fnstenv
pop
push
cmp
xchg
push
jae
inc
arpl
sub
jo
pop
push
inc
pop
cwtl
mov
dec
loop
sub
loop
push
mov
fmul
sbb
jmp
loope
cmp
and
aas
cmpb
dec
test
clc
pop
shl
daa
jno
ja
test
push
jnp
out
cld
sahf
mov
cmpsb
mov
call
xor
jle
jle
sub
cmpsb
pusha
jmp
xchg
nop
xorb
cld
jl
andb
insb
lret
add
aam
outsl
lods
inc
pop
fmull
sub
cmp
sti
mov
inc
adc
and
shlb
mov
popf
shlb
jl
or
cmp
pop
je
inc
cltd
pop
ds
out
in
push
aad
or
inc
adc
or
xchg
xchg
mov
fwait
sub
outsb
subb
inc
push
mov
xorl
cmp
sbb
or
rorb
push
dec
movsl
mov
or
cmp
cs
loope
inc
sub
clc
pop
les
and
cmp
icebp
jmp
movsb
mov
dec
xor
jmp
bound
sbb
icebp
or
adc
movsb
mull
xor
movsl
les
inc
add
cmp
xlat
mov
divl
push
aad
sbb
inc
add
add
out
jb
insl
inc
mov
loopne
push
mov
or
loop
add
pusha
in
mov
or
shl
ret
imul
dec
icebp
movsl
cli
ss
scas
or
addr16
cmp
mov
xor
mov
xor
jae
cmpsl
cld
cld
add
sub
sub
cmp
ljmp
fnsave
in
dec
push
int
dec
jne
mov
loopne
mov
add
out
sbb
ret
or
push
bound
xchg
push
sbb
jmp
xchg
cli
addr16
ret
stc
ljmp
mov
fs
xchg
divl
xor
scas
mov
in
mov
push
call
push
ret
jne
push
fnstenv
pop
aad
or
bound
jecxz
fstps
loop
je
sub
pop
pop
mov
int
fbld
xchg
adc
outsl
dec
sahf
loope
js
pop
test
pop
dec
loop
imul
sarb
sbb
outsl
pop
jp
clc
push
jae
add
out
dec
dec
adc
pop
inc
loop
inc
pop
mov
sbb
xchg
vmovdqu
inc
orl
inc
fisttpll
pop
adc
mov
outsl
mov
jle
imul
push
jns
cmp
xchg
aam
mov
dec
mov
imul
adc
in
aas
xchg
cmp
cmp
adc
jmp
sbb
sbb
loope
push
or
popf
adc
push
add
sti
cmp
push
aam
push
dec
in
jmp
mov
xchg
inc
inc
in
loop
in
lea
enter
mov
dec
cmc
loopne
cltd
js
mov
lock
je
loop
stc
jo
lods
sub
dec
pusha
rorb
aaa
rcrl
mov
imul
adc
dec
popl
or
loop
notl
imul
out
xchg
fs
ja
mov
pop
lcall
inc
lea
xor
fidivs
or
shll
mov
es
sub
test
mov
daa
jo
stc
loop
xchg
inc
fstl
insl
pop
movsl
jns
xlat
mov
fldpi
roll
sti
das
das
std
dec
inc
addb
xor
xor
mov
xlat
call
jno
xor
imul
cmp
lock
adc
lods
cmpsl
stos
mov
ljmp
and
xchg
sbb
mov
sub
sub
fildll
or
rcll
sbb
cltd
and
mov
pop
sbb
mov
fcoms
loopne
xor
out
xchg
inc
add
sbb
iret
fstl
add
movb
insb
or
cmp
fsubrs
fs
add
pop
jns
jno
push
jg
jle
jne
mov
push
xor
mov
inc
into
sub
outsb
and
js
xchg
cmc
sub
add
mov
aas
xorb
push
pushl
cmc
mov
lcall
shlb
push
out
xchg
in
shl
cmc
mov
fs
rorb
or
pop
jns
lret
mov
clc
sub
mov
adcl
subb
adc
inc
mov
lcall
add
or
sbb
mov
add
mov
push
or
fs
xchg
or
test
xor
and
sbb
es
push
nop
cmpsb
insl
sbb
outsb
das
cs
and
xchg
or
jle
mov
andb
mov
push
push
cmp
iret
in
adc
cld
aad
xchg
add
sahf
in
std
out
andb
push
jg
scas
popa
mov
in
sub
sbb
adc
add
jo
xchg
stos
outsl
sbb
mov
or
dec
incl
testb
cli
orl
xchg
and
arpl
xchg
ds
mov
rorb
mov
mov
or
lret
aaa
xchg
mov
mulb
repz
pop
imul
xchg
es
std
test
paddusw
and
loopne
cmpsb
push
cltd
inc
mov
mov
lcall
popf
add
push
rcl
sbb
and
shll
clc
addr16
mov
and
sahf
push
add
pop
arpl
adc
xchg
push
arpl
outsb
mov
push
test
push
ss
js
iret
repz
inc
add
test
mov
mov
pushf
or
pop
dec
insb
mov
sbb
push
push
xchg
sub
pop
mov
mov
std
nop
testb
enter
add
repz
mov
mov
xor
and
mov
dec
pop
mov
xchg
aaa
mov
mov
jbe
aad
push
adc
arpl
xor
movsl
fimull
outsl
rcll
and
jno
in
mov
out
dec
push
mov
aad
push
fadd
sbb
ret
xlat
mov
fdivl
mov
into
inc
cli
ret
addr16
xchg
inc
pop
mov
adc
into
daa
mov
cmp
sub
xor
cmp
es
setl
jg
aaa
in
mov
adc
daa
fcomp
enter
mov
ret
test
scas
mov
lcall
mov
inc
ljmp
stc
sbb
mov
fildl
movsb
mov
sub
mov
loope
inc
inc
dec
or
sbb
pop
rcrb
lret
sarb
add
pop
adc
fsubrp
cmp
xchg
es
mov
sti
arpl
fadds
icebp
or
mov
dec
stos
adcl
mov
inc
mov
dec
xchg
mov
mov
hlt
test
outsb
xchg
push
inc
mov
push
mov
cmpsl
adc
dec
notb
dec
mov
sub
das
adc
mov
mov
ret
and
daa
sbb
or
lods
cld
inc
aam
aad
or
sbb
add
iret
fisubrl
lods
sbb
mov
imul
push
xor
nop
or
add
iret
lea
subl
jb
loopw
cltd
mov
ret
sti
and
sbb
xor
dec
pop
fs
aam
in
add
aas
mov
out
loope
out
and
jecxz
lret
mov
fiadds
mov
shl
fsubs
sbb
repz
adc
popf
mov
lret
mov
stc
out
add
icebp
add
cmp
lret
mov
dec
addr16
and
stos
addl
cs
cmpsl
aas
stc
dec
cmpb
sbb
fisttpll
es
inc
fisubrl
and
loop
mov
shll
adc
out
inc
in
ret
in
mov
aad
and
mov
pushf
shlb
push
dec
outsb
dec
je
jecxz
mov
fadds
loope
loop
orb
cmpsb
mov
add
push
mov
push
and
push
or
pop
clc
mov
in
mov
incb
loopne
sub
fs
mulb
stos
hlt
rorl
jne
ja
or
xchg
add
xor
cmc
cltd
fstl
ljmp
inc
sbb
ljmp
mov
rcrl
out
fcompl
mov
add
mov
mov
ljmp
sbb
mov
adc
jbe
xor
fistpll
popa
dec
xchg
popa
cmp
test
jg
jg
dec
ss
sbb
stos
xchg
movsb
repz
xchg
nop
test
mov
dec
test
fisubrs
jge
push
adc
mov
call
out
add
test
push
lea
scas
sbb
xor
push
xchg
adc
sbb
stos
sub
ffree
and
cmp
mov
xchg
xchg
push
mov
and
hlt
mov
and
std
roll
in
call
xchg
pop
lds
test
pop
cs
pop
loop
ret
lock
fidivrl
arpl
pop
or
call
sbb
mov
icebp
pop
inc
stos
out
testl
je
std
in
jne
push
inc
aad
call
les
inc
sbb
insb
das
sub
arpl
loop
cmp
dec
fwait
mov
push
pop
js
loopw
shr
or
popa
push
push
fs
pushf
popf
add
adc
pop
rorb
jb
push
clc
jne
and
mov
ret
sbb
or
jae
inc
ja
stos
mov
std
cmp
xchg
or
cmp
mov
mov
pop
movsl
mov
and
add
xor
push
add
and
or
and
and
lds
fcompl
cmp
loopne
jb
sub
inc
pop
inc
les
or
iret
push
pop
sahf
mov
imul
mov
or
cmp
add
call
xbegin
jg
addr16
ja
aas
mov
sub
lods
test
mov
iret
dec
push
popa
jno
cmpsb
into
pop
dec
xor
lock
ja
push
test
scas
lds
scas
inc
xchg
ss
arpl
aas
ss
std
xlat
jns
mov
stos
and
mov
xchg
fisubl
push
scas
test
lret
loop
and
sub
pop
add
fsts
mov
stos
sub
cmpsb
mov
or
or
pushf
jae
mov
nop
dec
cwtl
jecxz
mov
fs
push
sub
dec
enter
stc
popf
psadbw
mov
into
mov
dec
inc
or
adc
mov
adc
inc
mov
mov
sbb
loop
or
cmpsl
add
lds
bound
jge
popa
stc
sub
andl
enter
sti
fstpt
xchg
bswap
mov
xchg
in
mov
out
dec
mov
push
mov
pop
mov
rolb
mov
pusha
test
das
sub
lret
ret
and
sub
lcall
jg
loop
jne
mov
daa
jno
lods
push
jnp
jo
addr16
adc
lea
or
mov
or
jne
call
shl
mov
and
movsb
pop
popa
out
loopne
xchg
aas
scas
lcall
xor
inc
jmp
xchg
jae
sbb
imul
push
rcrl
xor
jge
add
ret
add
mov
pop
fsubrl
and
repnz
je
or
pop
inc
scas
jbe
pop
and
dec
lea
rcr
mov
xchg
add
iret
sti
jecxz
dec
outsb
mov
inc
shlb
lahf
pushf
dec
movsl
ljmp
inc
sub
xlat
imul
mov
out
movsl
xchg
add
push
stc
inc
inc
dec
mov
jns
test
ret
mov
ret
add
loopne
es
push
pusha
dec
test
xlat
xchg
sbb
fld
in
mov
push
movsb
mov
int
xchg
adc
test
mov
adcl
push
pop
repnz
sbb
lea
jle
popf
mov
outsb
mov
jmp
cmpsl
dec
out
movb
jb
mov
int3
push
mov
les
or
cmpsl
lods
pop
mov
jbe
ss
sti
mov
jbe
xchg
movsb
sbb
testl
gs
pusha
shrb
out
js
cld
inc
push
ja
or
mov
std
or
xlat
mov
jl
adc
xchg
mov
leave
inc
adc
es
cmp
pop
in
xchg
inc
mov
or
lods
outsl
lcall
insb
sub
jo
int3
cs
std
les
jb
ret
add
add
ficomps
cltd
mov
stos
fdiv
repnz
test
dec
ja
and
sub
loop
iret
leave
shlb
fistpl
leave
testb
dec
fwait
mov
mov
imul
movsb
jge
pop
js
cmp
mov
add
lahf
push
sub
jnp
leave
mov
repz
xlat
je
out
mov
enter
lock
popf
inc
in
inc
sbb
jge
mov
push
add
hlt
rcl
push
pushl
xorl
ja
mov
mov
inc
cmp
xchg
sbb
in
sti
cltd
out
xor
xchg
adc
dec
daa
lock
sbb
call
out
mov
or
icebp
sbb
xor
cmpl
push
mov
xchg
xchg
iret
or
inc
subl
lret
movsl
push
jmp
nop
ss
mov
popf
push
repnz
jbe
and
in
sub
inc
push
jno
ja
cmp
movsl
inc
icebp
dec
inc
push
fsubs
ljmp
les
ret
mov
pop
xor
icebp
es
xabort
loopne
ret
cmpl
lock
test
dec
cmc
sub
and
and
rorl
mov
mov
and
sub
add
mov
cmpsb
sarl
sbb
xchg
fsubrs
pop
adc
inc
mov
int3
test
xorb
in
mov
mov
mov
sbb
adc
mov
shl
pop
aas
cmp
adc
mov
scas
fs
pop
data16
jge
mov
xor
inc
inc
inc
inc
call
pop
sub
arpl
add
cs
faddl
rorl
sbb
pop
mov
loop
call
mov
xor
and
sahf
iret
ret
mov
xchg
mov
xor
sbb
xchg
sbb
stos
mov
pop
lret
and
data16
enter
jnp
adc
addr16
and
adc
cld
jb
ret
and
int
scas
xchg
pop
mov
mov
jmp
sbb
test
outsb
jnp
repnz
sbb
fmuls
pusha
repnz
lods
in
jno
sub
arpl
dec
mov
out
mov
stc
add
std
out
clc
jge
push
pop
xor
dec
xchg
inc
xor
ds
sub
pusha
cltd
sub
mov
pop
inc
xor
into
mov
add
xchg
adc
ficompl
push
cmpsl
dec
and
sub
xor
loope
add
cmp
ret
fcoms
aad
sub
dec
push
addb
fsubs
and
adc
inc
arpl
repnz
lret
sbb
mov
out
lods
test
cmc
cltd
or
stos
lods
push
cmp
add
js
and
pop
add
ret
stos
in
aaa
add
in
es
push
loop
mov
movsb
repnz
jnp
push
and
adc
mov
cmpsb
push
js
arpl
aad
xchg
xchg
insl
inc
mov
cmpsb
sbb
dec
dec
mov
stc
xor
sarb
jb
mov
stos
push
enter
lock
mov
inc
jge
sub
inc
dec
test
rcrl
inc
mov
pushf
rolb
xchg
je
sub
loopne
xchg
sti
pop
cmp
push
movsl
or
fisttpll
cmpsl
sbb
arpl
and
jmp
mov
and
and
adc
and
clts
mov
sbb
mov
mov
ds
mov
dec
rcrl
dec
dec
jge
jecxz
leave
mov
dec
xchg
xchg
mov
out
rcll
or
mov
fdivr
ret
xchg
cld
test
aam
mov
cld
push
add
mov
shll
mov
lahf
jg
mov
sub
push
or
xlat
cmp
les
mov
addr16
mov
xor
push
add
into
sahf
sbbb
xchg
add
xchg
xchg
sbb
push
push
mov
and
inc
pusha
xor
or
daa
movb
fimull
enter
test
and
jno
in
xchg
imul
imul
mov
es
lahf
jmp
or
adcl
jne
addr16
jbe
sub
repz
and
push
pop
and
pop
pop
loopne
jmp
fs
adc
loopne
jne
sahf
aad
lret
roll
andl
push
cs
jne
mov
dec
mov
sub
pop
jmp
mov
out
dec
dec
and
out
sub
mov
mov
or
rcll
mov
push
cltd
push
ss
test
fnstenv
aas
cmpsb
jle
scas
pop
cmp
push
andl
jnp
fistpll
jmp
daa
push
xor
cmp
xor
jnp
adc
cltd
mov
xchg
insl
sbb
or
pop
sbb
or
pop
jge
sahf
sub
test
jmp
mov
test
pop
adc
mov
lods
fldl
push
out
jge
lods
inc
xchg
sahf
jge
les
mov
je
mov
pop
cli
loopne
stos
mov
xor
mov
jne
push
jb
mov
add
ljmp
lea
push
sbb
xchg
adc
movsl
or
inc
loop
or
jmp
add
out
mov
in
insl
cmc
xchg
int
into
xchg
jp
push
dec
push
cmpsl
jo
add
pop
fucomip
ds
jl
dec
in
int
mov
imul
dec
mov
pop
add
rcl
cmp
fisttpl
lret
mov
sbb
sbb
push
fnsave
push
mov
loop
daa
sahf
mov
and
inc
in
mov
and
ret
mov
add
cmp
jg
push
sub
push
popf
movsb
lahf
push
mov
xchg
cmp
mov
sti
scas
inc
adc
test
push
std
push
lret
sbb
out
inc
rclb
and
xchg
or
jb
sti
add
shrb
pop
fstps
mov
mov
data16
push
mov
and
cmp
loopne
cmpb
lods
adc
adc
push
cmpsb
mov
aad
in
inc
mov
test
mov
rcl
movsb
sahf
mov
xchg
mov
lahf
jae
leave
stc
out
ljmp
sbb
int3
gs
insb
jge
divb
push
and
pop
repnz
push
or
or
icebp
daa
ficoms
mov
sbb
pop
jne
inc
aad
loopne
bound
inc
mov
out
sarb
data16
dec
adc
or
or
std
gs
xor
hlt
ds
push
imul
mov
mov
jb
mov
lret
push
adcb
data16
call
mov
xlat
imul
mov
mov
imul
cmp
test
or
cld
fsubs
xlat
cmp
notl
fwait
sub
cwtl
nop
add
loop
rorl
out
and
call
jp
ja
fs
mov
xchg
xchg
xchg
or
fistpl
movsl
sbb
xchg
push
mov
or
push
sub
arpl
jmp
in
ja
cmp
adc
dec
andl
stos
inc
mov
pop
test
ret
xor
cld
shrl
or
mov
ss
xchg
add
jo
mov
clc
stos
addl
lods
in
jp
jge
int
dec
adc
jg
cli
inc
xchg
and
shll
push
cmp
push
int3
in
shr
or
cltd
call
aas
daa
fs
pop
jae
add
sbb
das
and
mov
bound
sbb
call
pushf
dec
and
mov
adc
imul
mov
fistps
ljmp
cld
sub
clc
test
iret
xor
ljmp
mov
and
xchg
enter
and
fcoms
sbb
cwtl
fs
inc
xor
pop
adc
push
pop
sti
std
dec
inc
or
sar
mov
xor
in
imulb
jae
aad
aaa
fsub
mov
cs
sbb
addr16
mov
inc
pop
inc
lock
mov
js
out
add
decb
movsb
shrb
xor
add
lahf
pop
cmpsb
js
dec
mov
sbb
mul
sub
cmp
enter
add
nop
xchg
inc
push
lahf
test
gs
lock
ss
daa
int3
enter
fidivrs
mov
in
ffree
xchg
lods
jle
sbb
rol
mov
mov
popf
arpl
jne
and
popf
add
inc
and
jo
mov
mov
dec
push
les
lret
xchg
mov
push
dec
std
push
sahf
lock
xor
mov
mov
leave
mov
arpl
clc
or
push
pop
fs
js
add
das
add
inc
mov
push
repnz
loope
mov
xchg
xchg
mov
inc
mov
xchg
and
or
stc
lods
sub
or
jle
iret
out
aam
mov
hlt
dec
repnz
mov
imul
cmp
popf
shll
sbbl
push
clc
sub
je
popf
inc
inc
sub
jl
fs
imul
push
je
sub
xchg
into
xchg
jb
xchg
es
mov
xor
pop
cld
adc
jnp
repz
movsl
jo
in
in
push
xor
loopne
daa
sbb
cmpsb
insl
push
cmp
sub
mov
xor
xchg
fisttps
jle
and
nop
hlt
ja
or
or
lcall
bound
hlt
js
and
rcr
mov
cmp
rcll
les
cmpsb
sub
pop
dec
idiv
xchg
mov
cmp
stc
cmp
bound
in
popa
dec
inc
xchg
xchg
mov
cwtl
hlt
and
sar
xor
clc
mov
int
xchg
inc
and
push
mov
stc
mov
pop
int3
ljmp
test
dec
ret
lcall
dec
addr16
sti
cmp
ret
dec
pop
add
repz
mov
lea
nop
add
xor
arpl
dec
into
jl
push
lret
cwtl
testb
adc
ja
ret
mov
inc
cs
adcl
jp
lret
xchg
test
cmp
or
cmpl
pop
scas
nop
push
jmp
pop
sbb
jae
xor
or
xor
cmp
push
sahf
test
sub
sbb
inc
or
push
mov
push
jne
dec
and
adc
int3
outsl
ss
lods
mov
lock
loopne
test
dec
adc
into
std
clc
dec
sahf
mov
xor
hlt
int
adc
pop
inc
fsts
sub
cmp
mov
inc
addr16
mov
stos
data16
xor
or
daa
add
test
loop
test
bound
mov
pop
mov
jb
inc
insb
addr16
inc
push
int
sbb
jecxz
add
adc
fs
mov
neg
push
add
cmpb
iret
pop
dec
sub
xor
out
push
mov
mov
jno
je
cltd
inc
sbb
ljmp
add
add
scas
arpl
dec
jmp
mov
mov
sub
ret
loope
mov
jno
addr16
mov
fs
pushf
cltd
sarl
in
mov
in
jns
fbstp
popa
in
jle
pop
shrb
lcall
cmp
aas
adc
pop
mov
or
sub
sub
imul
jp
sahf
dec
int3
iret
and
jo
ffree
add
cwtl
add
fdivrs
in
popf
push
ret
imull
rolb
ds
xchg
add
inc
fistl
in
jle
dec
fwait
dec
cmpl
sar
es
subl
cs
cmp
fiadds
out
push
enter
add
adc
inc
testl
negl
not
imul
jmp
xchg
icebp
mov
insl
or
je
or
stc
xor
cmp
jg
icebp
inc
mov
and
mov
push
dec
inc
mov
jg
dec
add
mov
mov
push
pusha
push
adc
cmpsb
int
in
inc
inc
mov
dec
or
nop
fdivs
push
in
mov
pop
scas
idivl
fwait
jnp
setnp
pop
jmp
aam
sbb
cmc
mov
mov
pop
cmp
mov
xchg
fnstcw
mov
and
inc
xor
shl
jno
idivl
xchg
bound
push
daa
fnsave
jg
lods
lock
add
cltd
ja
add
jb
add
roll
dec
inc
mov
inc
test
mov
push
xchg
incl
xchg
stos
lods
repnz
and
dec
loope
data16
cwtl
rcl
shll
mov
movb
dec
mull
out
xchg
push
pop
repz
inc
xchg
and
gs
xchg
fisubl
fcmovnbe
or
add
or
dec
add
jnp
jmp
roll
insw
sbb
jle
repz
jge
pusha
xor
mov
lret
popf
mov
dec
add
ss
adc
or
mov
rcr
sub
cwtl
or
sub
js
or
shr
mov
bound
pop
xor
pop
inc
jmp
js
in
cmp
inc
dec
inc
sbb
and
es
inc
mov
ret
cwtl
roll
mov
mov
and
cmpsb
in
pusha
push
pop
and
dec
adc
pop
inc
mov
cltd
test
sub
adc
out
jae
pushl
insl
adcl
dec
divl
out
les
aas
or
xchg
pop
push
inc
xlat
mov
pusha
jge
xlat
mov
in
mov
aaa
movsl
outsb
push
adc
inc
and
jge
mov
sbb
sbb
movsb
pushl
pop
iret
in
xchg
xchg
mov
sahf
xor
xor
xlat
imulb
add
fists
cmp
test
sbb
cmp
cmp
add
mov
or
out
mov
mov
inc
dec
sbb
fldenv
adc
cmp
xchg
add
mov
xchg
pushf
dec
mov
into
pop
adc
and
subl
f2xm1
shrb
lret
pop
fistl
jg,pt
xor
jge
mov
dec
mov
in
mov
jnp
leave
xchg
pop
test
mov
test
xchg
sub
xor
inc
dec
dec
hlt
mov
xor
test
and
outsl
dec
pop
jge
mov
repz
dec
xchg
test
push
adc
cli
mov
out
ljmp
and
stos
leave
daa
aas
out
popa
rcll
hlt
sub
mov
pushf
and
cltd
cmp
push
cmp
rcll
sbb
and
cmpsl
cmp
push
push
xchg
jecxz
inc
push
inc
and
lds
int3
fs
movsl
mov
push
xchg
and
sti
cmpsl
pop
into
cmp
adc
cwtl
push
or
insl
sahf
xchg
push
adc
aas
scas
mov
push
fstpl
fildll
xor
orb
adc
jmp
popl
dec
mov
jae
jns
push
jg
mov
leave
cmpsl
xor
push
dec
jbe
mov
dec
mov
js
outsl
mov
adc
push
imul
xor
cmp
loopne
mov
cs
pause
cmpsl
inc
push
out
adc
cmp
jp
std
popa
stos
lret
pop
xchg
shl
xchg
cmp
push
sub
shrl
cld
add
and
mov
mov
pushl
imul
jl
xor
mov
sahf
pop
leave
jg
ret
mov
pop
push
mov
cmp
dec
adc
into
xor
int3
xor
mov
lock
pop
loopne
fwait
clc
inc
cmp
cmp
push
fsubs
push
pop
xchg
cmp
xchg
add
mov
mov
cmp
inc
loopne
cmc
or
shlb
xchg
push
aaa
push
pop
dec
rcr
mov
push
sbb
rcl
test
pusha
sbb
and
mov
cmp
jae
mov
fisttpll
cmpb
jle
dec
push
pusha
mov
mov
lret
adc
push
sbb
mov
out
jno
call
pop
xchg
outsl
test
cmpsl
push
mov
or
std
in
loope
xor
inc
outsb
lock
ret
inc
hlt
jnp
wrmsr
dec
pusha
or
cmpsb
fucom
icebp
or
lock
push
mov
mov
lcall
stos
jae
xorl
mov
shrb
ret
adc
movsb
jecxz
add
cmp
mov
mov
add
fcomps
mov
add
jne
cmpsb
das
and
sbb
xchg
idivb
arpl
dec
xchg
push
outsl
and
jns
outsb
push
adc
mov
and
clc
pop
sti
repz
xlat
in
adc
sbb
fisubrl
scas
in
xor
adc
mov
xor
push
push
std
imul
xor
out
arpl
stos
scas
loop
testl
lcall
mov
pop
pop
sub
dec
jne
je
cmp
adc
xor
and
hlt
shlb
std
enter
movsl
faddl
in
sbb
adc
cmp
mov
loopne
sbb
cltd
xchg
das
out
cmp
jmp
sub
mov
push
add
mov
add
dec
bswap
inc
dec
inc
out
out
popa
mov
pop
pop
scas
mov
setge
mov
adc
jecxz
test
test
push
pop
sub
dec
mov
dec
jmp
cmp
dec
adc
out
adc
jb
push
jecxz
inc
in
jo
jmp
and
jecxz
xchg
xchg
dec
inc
xor
add
adc
push
mov
les
fnstsw
jecxz
jge
xor
or
mov
jle
mov
lea
fs
mov
adc
mov
clc
xrelease
aam
int3
xor
adc
dec
xchg
sbb
mov
cmp
adc
inc
fbstp
pop
in
mov
ss
jle
loopne
nop
sub
es
outsl
out
mov
or
in
rolb
sbb
mov
int
mov
jmp
lods
jmp
fxch
mov
jnp
daa
insl
mov
int
hlt
insl
in
sahf
adc
lock
pop
std
or
lcall
sub
xlat
add
sbbb
cmp
arpl
xorl
cmpsl
adc
cmp
rcl
pop
mov
adcl
out
inc
ja
fwait
pop
push
outsl
xchg
or
push
negl
dec
xchg
rol
add
add
shlb
mov
xchg
aam
dec
jno
pop
add
pushf
leave
lcall
adc
dec
loopne
inc
pop
cmpsl
ret
arpl
int3
jle
loop
cmp
pusha
lds
out
jb
xchg
cltd
lods
clc
inc
shll
push
mov
rol
mov
outsb
push
repz
es
add
mov
xchg
push
cmpsl
jae
jb
push
pop
mov
cmp
cwtl
sbb
inc
fucomi
gs
mov
inc
hlt
lea
notb
sub
mov
outsl
push
in
pop
cmc
fdivrl
and
cwtl
sbb
adc
mov
sbb
leave
adc
fstpl
roll
scas
pushl
adc
movsb
xlat
mov
dec
lea
mov
movsl
dec
movsl
fdivl
in
movsl
pushf
dec
dec
xlat
bsf
mov
push
insb
cmp
fbstp
jo
test
mov
adc
mov
cli
sbb
mov
rclb
mov
gs
scas
mov
call
inc
add
outsl
mov
cmp
std
test
pop
xorb
mov
hlt
and
in
sbb
addr16
push
inc
aaa
xor
and
mov
ljmp
push
sub
movsl
sub
pushf
outsl
add
fcompl
lahf
icebp
push
nop
pop
iret
fwait
xchg
fdivrs
cmp
push
inc
js
and
add
scas
inc
cmp
gs
test
sbb
adc
mov
and
nop
pop
dec
cmp
ss
add
dec
aaa
fcoms
cmpsb
les
rcll
fwait
outsl
and
mov
cli
add
rcr
stc
pusha
ss
push
mov
mov
into
push
fcomps
out
imul
and
ja
inc
pop
xorb
cmp
hlt
inc
jo
pop
fs
cmpsb
dec
xchg
mov
bnd
lret
in
push
maskmovq
negl
outsb
out
mov
pop
push
pop
popf
mov
outsb
adc
rolb
jns
xor
mov
shlb
add
cmp
and
jno
sub
add
inc
fstl
sbb
lret
pop
fptan
js
sbb
sub
int3
scas
mov
xchg
mov
jl
add
stos
sbb
mov
xorb
jae
cli
adc
shll
adc
mov
stos
test
lcall
repnz
dec
mov
sbb
outsb
or
push
sbb
int3
aad
mov
xor
jmp
cmc
xorl
imul
dec
and
mov
push
data16
cli
aas
imul
pusha
cltd
into
jno
cmpsb
les
dec
inc
pop
fisubl
in
out
test
call
jmp
and
cmc
cmp
sub
mov
pop
add
fwait
mov
leave
int
inc
js
cmp
cmpsb
adc
mov
sub
xor
loop
sarl
xchg
add
mov
and
dec
and
rcrb
pop
jg
pop
cltd
jg
mov
adc
xchg
or
mov
psubsw
fstp
inc
add
dec
push
mov
or
test
cltd
jecxz
fucom
pop
mov
ficoms
rorb
inc
dec
pop
out
orl
bound
jg
add
insl
or
or
adc
mov
and
test
mov
push
add
push
in
pop
fsubl
in
xchg
sub
xor
cmp
pop
sarb
leave
test
jp
addr16
mov
ficoms
add
sbb
notl
loope
cwtl
inc
test
in
xor
or
popf
and
push
adcl
pop
cli
fisubrs
adc
rcrl
inc
or
lret
leave
pushf
into
sti
enter
push
std
mov
or
data16
repz
pop
adc
xor
lods
repz
and
adc
scas
cli
in
cwtl
mov
mov
add
mov
into
mov
mov
mov
enter
or
movsb
or
cwtl
rclb
push
repnz
stos
fisubs
mov
ret
inc
jnp
rcrb
mov
sbb
ffreep
push
pop
cs
sub
pop
mov
in
aam
mov
insl
fmul
add
add
fwait
inc
shll
nop
stos
rcrb
sahf
outsb
dec
xor
sub
stos
xor
push
inc
lahf
cmpb
loopne
outsb
test
je
add
insb
xchg
out
fidivl
fsts
push
mov
push
adc
inc
notl
or
sub
mov
xchg
decl
xor
fcompl
arpl
in
lret
dec
in
in
clc
mov
mov
arpl
ss
add
cmp
fisttpl
and
adc
add
cs
sbb
shll
cld
gs
movsl
inc
in
inc
jne
or
lahf
mov
in
cmp
xchg
xchg
cld
jecxz
fisubs
test
xor
jbe
add
sub
or
sub
and
adc
push
jns
add
or
call
dec
adc
dec
aad
mov
call
movsb
mov
pop
pop
int3
adcl
xchg
xchg
push
rclb
xor
add
xchg
jl
shll
hlt
test
push
test
nop
cwtl
cwtl
cwtl
sub
and
gs
pop
cltd
dec
iret
lret
dec
xor
rcrl
fsts
cltd
sub
sbb
xchg
out
xchg
outsl
cmpl
dec
add
xchg
pop
cmpsl
ja
clc
cmpsl
mov
gs
sbb
hlt
testl
fstps
popf
stos
int3
cmp
inc
pop
jo
lret
incb
insl
mov
or
das
icebp
sbb
push
adc
jecxz
jo
clc
mov
cmp
mov
sahf
out
adc
cmpsl
and
mov
adc
in
mov
insb
sbb
jmp
inc
js
xchg
adc
xchg
fistps
ja
jle
in
sub
mov
test
iret
sbb
push
cli
and
clc
jmp
pop
jecxz
dec
push
xchg
cwtl
outsb
push
inc
popa
cmpsl
or
mov
test
mov
sub
cmp
adc
out
adc
ret
adc
out
jg
push
and
cmp
jne
movsl
imul
mov
cmpsl
sbbb
xor
cmp
jl
repnz
xchg
popf
adc
or
sbb
mov
bound
stc
in
push
sub
movsl
dec
fwait
and
xchg
out
pushf
mov
leave
adc
lea
xchg
addr16
add
in
mov
push
xor
int
mov
jbe
daa
push
and
push
inc
icebp
add
jl
aaa
scas
push
scas
pop
xor
lret
popf
shrb
outsl
pop
andl
xchg
outsb
mov
aas
mov
xor
fstl
mov
adc
xor
pushf
rclb
mov
iret
cmp
sbbb
lea
loop
repnz
cltd
mov
popf
into
sti
add
pop
pop
and
xchg
pushf
pop
mov
xor
sub
cs
or
jo
cli
cmp
pop
ds
sahf
loope
cmpsl
loopne
aaa
fcompl
scas
rcr
jmp
lds
shll
lea
pushf
or
sub
int
adc
xlat
cmc
push
adc
shrl
xlat
subl
mov
ss
stos
aaa
faddl
jmp
repz
bound
mov
out
aam
mov
outsl
leave
mov
sarb
mov
mov
adc
loop
jl
out
jl
dec
xchg
cmp
push
shr
bound
adc
adc
xchg
mov
jo
loop
push
aam
adc
sahf
rorb
lahf
push
dec
pop
mov
xchg
bound
fisttps
pop
mov
sub
dec
lds
and
mov
push
sahf
ds
xor
sub
jno
xor
lods
mul
cmpsb
repz
add
lock
or
or
sbb
cmp
jne
inc
aaa
frstor
xlat
xchg
mov
sub
xor
and
xor
sbb
push
sub
inc
mov
testb
insl
sub
ret
js
fldcw
add
adc
or
mov
xor
mov
outsl
stc
fisttpll
xor
inc
dec
inc
xchg
loop
mov
push
addr16
je
mov
add
inc
ret
push
mov
scas
mov
sbb
pop
lock
imul
inc
in
cmpsb
gs
inc
adc
sub
test
pop
xlat
xchg
cwtl
ja
xor
or
fdivs
popf
mov
nop
arpl
add
or
imul
jb
inc
cmpsl
test
or
pusha
daa
add
je
inc
scas
inc
cli
mov
dec
gs
popf
mov
push
or
pop
ret
dec
add
push
fcmovu
jmp
sub
inc
pop
cwtl
xor
repz
imul
add
ja
xchg
dec
aas
add
enter
les
mov
in
iret
sbb
xor
or
pop
cwtl
sub
inc
insb
lods
mov
imull
or
mov
test
pop
xor
sarb
mov
pop
mov
push
pop
mov
push
ret
mul
fs
test
push
and
adc
loop
push
mov
pop
sti
mov
int3
cltd
pop
cwtl
xor
loop
fistpll
insb
mov
movsb
test
daa
mov
jmp
jp
pop
scas
xor
mov
inc
inc
push
jmp
in
pop
mov
adc
fldl
jmp
sub
or
and
xor
test
and
scas
arpl
add
and
add
dec
fs
imul
fldenv
fiadds
rorl
sbb
shl
pop
inc
lret
std
mov
ret
jp
arpl
push
jno
or
mov
adc
pop
push
movsb
les
sbb
cmp
inc
adc
inc
jns
cli
pop
add
jmp
xchg
xchg
push
adc
sub
sbb
neg
mov
jge
mov
dec
repnz
scas
dec
stos
fwait
mov
mov
sahf
mov
setne
jno
gs
scas
push
push
mov
repz
sbb
mov
cmpsl
lods
or
cmc
push
ja
inc
mov
in
iret
mov
xor
sbbl
and
sar
push
mov
dec
push
mov
mov
aad
cmp
cwtl
pop
out
fmull
push
pop
cmp
pop
divb
fistpl
jecxz
mov
sbb
outsb
inc
mov
or
xorl
aad
ljmp
xchg
cmp
arpl
jp
xor
ljmp
adc
mov
jbe
cmpsb
sub
gs
gs
fcomps
lock
pop
push
movsb
xchg
lret
jne
mov
mov
push
mov
xchg
out
mov
or
adc
xor
push
js
pop
and
fisubrs
jle
xchg
mov
rep
ret
out
push
pusha
js
inc
xor
dec
pusha
push
push
xor
ficompl
cmc
scas
push
js
sahf
mov
pop
inc
mov
mov
push
sbb
fimuls
push
inc
mov
aam
sbb
sbb
pop
adc
gs
mov
int
std
stc
stos
in
and
xlat
mov
fistl
sbb
cmpsb
leave
adc
mov
xor
mov
push
cmp
xor
cmpb
je
or
cltd
mov
fldenv
push
bound
fnstenv
loop
punpckhbw
stos
add
out
adc
mov
sti
test
xor
push
mov
push
xor
popf
ds
jle
or
cld
mov
ficompl
mov
inc
adc
push
sbb
outsb
test
iret
addr16
push
xchg
sbb
in
lret
sbb
or
xchg
leave
insb
pop
cmp
in
mov
fcmovb
out
call
jne
sahf
and
inc
sbb
loop
adc
hlt
shlb
cmovbe
jle
dec
push
pop
jge
xchg
dec
xchg
out
or
mov
imul
xchg
xor
sahf
dec
pop
mov
fnstenv
dec
sub
fisttps
push
and
sbb
mov
xor
popf
xlat
dec
push
inc
push
cmp
pusha
mov
or
jo
sbb
inc
mov
test
lds
icebp
push
inc
mov
mov
adcl
in
fstl
jmp
add
xchg
cltd
sti
inc
shl
loopne
and
mov
lds
fdivl
nop
mov
hlt
aam
adc
pop
inc
xchg
jns
pushw
rclb
idivb
leave
decl
adc
xchg
out
pop
stos
mov
aaa
adc
call
test
int3
lret
sub
adc
icebp
frstor
scas
arpl
mov
jns
je
sub
inc
insl
xchg
scas
addr16
inc
xlat
pop
xchg
xchg
outsb
adc
mov
pop
scas
sbb
enter
and
notl
pusha
std
cmc
add
iret
test
sbb
mov
test
enter
call
push
sti
stos
cmpl
xchg
scas
cltd
xlat
or
hlt
push
negb
pop
in
mov
daa
lock
neg
ds
push
das
aaa
iret
xor
or
inc
add
add
inc
mov
jb
xor
adc
push
mov
or
addr16
dec
imul
cltd
int
or
and
pop
sub
sub
fistpl
add
imul
add
les
and
and
pushf
cmp
xchg
dec
jl
dec
out
outsb
aad
jge
into
and
jl
jmp
das
sbb
mov
xchg
xchg
xor
jmp
popf
xchg
icebp
es
scas
cmp
mov
pop
loop
iret
aam
jbe
mov
inc
pop
cmpsb
add
mov
shr
push
pop
popf
dec
lahf
adc
jns
clc
das
daa
pop
xor
fwait
pop
aad
sub
inc
push
dec
adc
pop
insb
out
lds
std
mov
lret
arpl
sub
mov
orb
out
mov
sbbl
mov
inc
jae
in
cld
rep
lret
mov
frstor
jne
decl
loopne
inc
pop
mull
fabs
clc
mov
divl
scas
cmpb
addr16
lahf
aad
lods
leave
sbb
gs
pop
icebp
dec
outsb
add
xor
dec
xor
cmpsl
mov
cmp
out
cmp
xchg
add
sbb
fsubrl
out
stos
sbb
jns
enter
xchg
xor
lods
lea
outsl
repnz
fs
cmp
mov
dec
clc
shlb
lret
or
pusha
int
push
jecxz
stos
mov
sbb
pop
add
loop
mov
pusha
int3
out
push
outsl
add
mov
ds
in
mov
and
loop
adc
movsl
sbb
popf
cld
ss
cmp
jg
insl
lea
rolb
xchg
sbb
dec
mov
leave
aaa
das
in
mov
xor
nop
xor
sub
adc
scas
repz
movsl
daa
lds
sahf
das
pop
dec
pop
repz
rcr
inc
nop
popa
fwait
mov
pop
fbld
xor
les
decb
popa
sub
add
push
call
cmc
fnsave
lock
int3
mov
xlat
call
cmp
jle
inc
repnz
stos
insb
cmc
lds
mov
aam
add
in
sbb
push
std
and
fidivl
cmp
pop
ljmp
jg
dec
ret
movsb
or
or
add
push
jmp
pop
stos
rcrb
add
push
cmpb
jecxz
or
jns
enter
or
movl
in
imul
out
loop
pop
xlat
cld
lods
adc
add
mov
ficoml
cmp
sub
cmp
in
gs
lcall
sub
dec
adc
add
insb
sbb
frstor
in
ds
das
xchg
pop
push
pop
sub
xchg
in
pop
mov
nop
test
jg
shrl
sbb
ds
xchg
notl
xor
lock
jg
aas
xchg
and
aas
or
inc
and
roll
jb
push
push
jne
cmpsl
sbb
fistl
out
or
or
sub
call
jno
xchg
mov
or
roll
sbb
test
xchg
lds
push
mov
push
xchg
xchg
inc
sbb
cmp
jge
sahf
js
lahf
lcall
sub
pop
add
sub
loope
sub
mov
xchg
push
jae
push
mov
jnp
sub
aas
movsb
and
dec
insb
xor
sbbl
fcmovb
ficomps
mov
je
push
push
notb
sbb
scas
out
gs
ret
les
fisubl
adc
or
pop
cmp
mov
mov
dec
mov
sub
mov
cmc
mov
aad
fwait
sti
insl
xchg
sarl
pop
add
das
push
scas
cmp
xchg
mov
repz
lods
clc
stos
sahf
and
pop
lock
rorb
test
out
data16
mov
mov
mov
sbb
test
push
cwtl
push
pushl
cmc
dec
cmpsl
xor
or
sbb
imul
fdiv
or
mov
mov
adc
mov
dec
xchg
jp
cld
lret
xchg
into
jno
xor
sbbb
or
and
addr16
or
lcall
xchg
aad
loop
sbb
pop
pop
sbb
and
fnstenv
jmp
pushf
pop
mov
sbb
into
test
inc
sub
adc
sbb
inc
xchg
and
ds
loopne
push
int
jmp
stos
loopne
js
sti
inc
xchg
or
adc
outsl
pop
cld
xor
add
inc
jno
dec
scas
hlt
inc
jp
or
aad
sub
or
jbe
cs
lock
mov
dec
jbe
xchg
inc
mov
js
xor
aas
es
add
arpl
push
sahf
or
and
xor
in
in
jmp
dec
push
imul
and
dec
test
shlb
adcb
sub
adc
mov
std
push
sbb
pop
mov
mov
fcomps
jle
pop
or
jl
adc
inc
push
jnp
data16
movsb
pop
cmc
hlt
jnp
lcall
xchg
stos
add
push
nop
in
movb
stos
mov
xchg
out
adc
mov
jg
mov
push
rcll
add
push
and
pop
mov
or
movsb
xchg
push
enter
rol
inc
inc
adc
push
mov
or
jae
gs
repnz
pop
xchg
out
subb
add
lahf
mov
jne
aas
jb
lods
mov
in
sub
add
mov
testb
pop
in
cmp
test
dec
fiaddl
cli
into
jmp
rorb
dec
jns
xchg
jl
dec
dec
inc
test
adc
das
cmc
jae
jle
sub
insb
and
test
test
pop
sbb
lods
into
loop
lret
or
or
daa
arpl
lods
jl
aam
repz
fwait
and
jns
lcall
sub
ja
cltd
pop
xchg
add
movsl
xchg
fucom
xor
mov
sbb
aam
imul
or
addr16
add
sub
inc
bound
xor
jle
add
or
add
inc
mov
cmp
mov
pop
ds
sub
jmp
or
jmp
cmc
cltd
pop
pusha
mov
fwait
test
cmp
xchg
push
add
clc
sahf
add
shlb
dec
icebp
sub
rol
sub
jae
xchg
lods
or
sti
mov
jo
dec
cmc
push
sub
fcom
outsb
mov
mov
aad
aad
hlt
sub
in
pcmpgtb
or
add
adc
dec
xor
sahf
test
add
fiadds
jmp
scas
lret
ss
call
int
xchg
into
jecxz
shrl
loop
lods
mov
cmpsb
lds
div
out
das
xchg
fmuls
jle
nop
std
cmp
orb
adc
sahf
or
xchg
cld
add
repz
mov
cmp
pop
push
cld
inc
mov
cwtl
and
cmc
std
sbb
pop
dec
xchg
xchg
mulb
pop
xor
idivb
sbb
clc
out
cmp
loop
das
inc
fldcw
sub
rcll
xchg
jg
sbb
push
enter
xor
mov
and
mov
jo
daa
sbb
mov
mov
dec
idivb
mov
pop
xor
or
movsb
dec
push
lock
cmpsb
movsl
clc
into
cs
aaa
mov
jo
jl
mov
mov
sbb
gs
das
mov
mov
lret
lret
movsl
xchg
insl
pop
jnp
or
int3
icebp
fwait
xchg
add
add
shl
imulb
shll
lahf
jno
popl
inc
jg
dec
sbb
xchg
xor
pop
mov
jo
les
shlb
and
push
mov
jo
cmc
rcrl
push
inc
pop
pop
add
gs
cli
jmp
test
shrb
push
test
jo
enter
pop
jbe
push
sub
push
stc
test
pop
xor
repnz
das
mov
in
mov
std
mov
pop
jnp
xor
outsb
outsb
xor
jmp
push
cltd
or
movsl
cmpsl
sub
inc
scas
scas
addl
subb
gs
outsl
cld
add
jbe
lahf
test
dec
arpl
jne
push
push
adc
in
in
add
lret
outsl
loop
arpl
aaa
xchg
mov
mov
cmpsb
lods
xor
inc
mov
stos
pop
pop
scas
pop
adc
test
test
mov
test
cmp
enter
push
icebp
pop
es
sbb
call
ds
mov
insl
xchg
xchg
push
mov
out
jp
gs
lock
mov
sub
dec
ljmp
jae
sub
mov
mov
pop
stos
pop
pop
pop
iret
pop
jbe
lods
push
cmp
lock
lds
lahf
outsl
cmp
es
rol
dec
xor
xchg
jecxz
dec
addl
gs
adc
mov
popf
rorb
mov
imul
sub
in
jbe
fstl
cmpsl
add
inc
jae
test
mov
cmp
push
jno
jne
scas
shll
sahf
in
sbb
imul
add
pop
lret
into
push
dec
xchg
add
adc
and
sbb
push
jge
stc
cmpsb
shl
mov
je
ljmp
notl
mov
std
es
lahf
movsb
xchg
and
or
fcmovnu
lret
subl
imul
push
popf
or
and
movsl
nop
imul
movb
scas
jge
pop
xchg
cmp
cli
xor
mov
insb
pop
iret
cmp
nop
or
push
insl
jmp
sahf
ja
jmp
cmpsb
mov
mov
xchg
cs
jmp
push
add
push
fnstenv
ss
lahf
enter
push
dec
repz
sbb
iret
cmp
xor
stos
loopne
push
mov
fsubr
push
fsubl
inc
jb
cld
mov
in
dec
mov
aam
adc
sbb
inc
add
aam
into
xor
or
push
mov
mov
mov
movzbl
jmp
push
in
bound
mov
lcall
add
inc
int
rcll
aad
loope
xchg
dec
push
pop
jl
mov
int
cmp
repnz
mov
je
paddw
popa
lret
mov
repz
clc
xchg
imul
std
cmpsb
xchg
mov
push
ret
pop
aad
push
movsl
popa
mov
and
and
lret
int
out
hlt
sbb
enter
call
sysexit
fildll
cmp
jae
mov
test
cs
push
sbb
ss
sahf
fistpll
das
lea
adc
aas
adc
adc
and
cmp
ss
dec
icebp
pop
xor
dec
leave
xchg
cmp
andl
pop
jbe
pop
push
add
or
in
dec
xchg
subb
insl
pop
xchg
pop
pushf
jbe
xchg
add
aam
xchg
je
or
loope
popf
fstl
mov
lret
in
sub
rcrb
inc
sbb
jp
inc
inc
data16
call
das
xorb
stos
iret
ljmp
xor
sub
loope
mov
scas
push
mov
mov
and
pop
jge
or
mov
ffreep
xor
xchg
inc
cltd
mov
decl
pop
sbb
xor
in
adc
mov
add
mov
loopne
test
inc
push
cmp
cli
imul
fsubl
mov
psubq
decl
jns
fcoms
in
sbb
negb
out
movsl
sbb
outsb
jbe
add
cltd
stos
cmp
adc
cmp
dec
xchg
jo
aaa
inc
int3
call
xchg
push
fs
outsl
lock
clc
dec
push
add
aas
je
sub
adc
mov
sbb
sahf
push
cmp
test
imul
adc
fwait
xchg
out
ja
mov
into
sahf
adc
notb
pop
les
fdivl
xbegin
xchg
into
inc
hlt
js
out
stos
pop
sub
lret
daa
xor
cli
and
and
test
jge,pn
insl
mov
aas
mov
cmp
xchg
add
mov
push
mov
dec
dec
movsb
jg
or
sub
clc
mov
jns
je
loope
fnstsw
mov
xor
mov
mov
jo
jecxz
or
xchg
xor
push
popf
inc
jb
add
pusha
pusha
mov
cmpsl
lret
cmp
mov
mov
fwait
js
add
cmp
mov
test
inc
sub
inc
pop
mov
sub
sub
aam
in
adc
pop
xor
into
pop
aad
jnp
daa
jle
stos
pop
push
lret
and
imul
xchg
adc
dec
insb
insb
ret
jmp
add
mov
add
jno
pop
sti
aad
jl
mov
out
xchg
pop
sub
scas
loop
inc
and
movsl
mov
lret
out
sub
gs
aam
mov
cld
xchg
in
pushf
sahf
xchg
cmp
mov
adc
or
xchg
mov
pop
mov
mov
pop
hlt
orb
pushf
mov
sbb
gs
mov
and
cs
sub
into
lea
or
sbb
dec
dec
xchg
mov
clc
adc
add
gs
mov
das
adc
xchg
push
pop
mov
loop
mov
aam
xchg
mov
or
mov
fcompl
and
aad
leave
xchg
mov
mov
sub
add
jg
mov
fildl
pop
pop
dec
mov
inc
int
les
repnz
aas
int3
cmp
mov
repnz
roll
fisttpl
arpl
test
add
jne
data16
cmc
dec
push
pop
inc
ret
fwait
jno
jno
cmpsl
fists
sub
cmp
out
push
mov
aam
mov
xor
adc
xor
or
fwait
jae
pop
in
inc
insb
loope
std
scas
es
xchg
int
or
xorb
idivb
out
rcrl
xchg
nop
lock
lock
lods
cmp
fldcw
xchg
xor
or
sbb
fnstsw
mov
fs
std
or
cmp
test
movb
fisttpl
push
cld
pushf
ret
sbb
popa
and
cmpsl
or
into
shll
pushf
push
mov
cmp
jl
les
add
outsl
cwtl
outsl
and
add
inc
jle
sbb
and
inc
or
inc
mov
lahf
and
xor
int3
rcrl
cld
cmpb
shlb
call
inc
ds
mov
pop
mov
add
sub
or
or
fwait
aad
testb
sub
lods
or
hlt
mov
adc
loopne
shlb
das
xchg
outsl
fs
insl
push
mov
stos
jae
mov
imul
ret
inc
in
lock
dec
push
sub
mov
dec
stos
out
or
rcrl
ffreep
mov
pop
lahf
mov
cmp
cli
mov
cmpsb
imull
push
and
jge
fldl
pop
xor
dec
cmp
popa
dec
push
and
jne
dec
out
jmp
adcb
sub
enter
shl
pushf
fwait
inc
jbe
bound
pop
xchg
bndldx
adc
int3
adc
jne
or
leave
cmc
xor
nop
pop
pop
jl
dec
jo
dec
int
mov
jns
fcomps
int3
push
dec
rolb
arpl
loop
cmp
cmp
outsl
aas
jmp
xor
add
add
jo
dec
outsl
mov
ljmp
jb
ret
push
xchg
pop
inc
nop
fisubs
xlat
out
and
adc
adc
jge
lret
rorb
pusha
inc
and
rcrb
add
cmpsb
rcr
dec
inc
movsb
fs
dec
shll
fwait
fprem
adc
outsb
dec
jle
mov
mov
rolb
xor
xchg
xchg
in
push
cmp
mov
pop
or
dec
cmc
xor
stos
jle
pop
int
dec
dec
shrl
sbb
jbe
int3
mov
fdivl
mov
push
inc
pop
ljmp
xchg
sarl
fadds
orl
mov
es
fsubp
jge
mov
fwait
dec
bound
arpl
in
push
xchg
push
jp
out
push
rcll
sub
ja
addr16
jmp
xchg
stc
in
sub
and
hlt
mov
faddl
push
xor
ret
call
mov
fsubrs
sub
in
pop
ja
pop
push
pop
in
sahf
fxch
pop
jmp
testb
push
mov
or
cltd
nop
dec
xchg
rcrb
loope
scas
fidivrs
mov
dec
mov
cltd
je
js
push
inc
and
or
mov
int
fstps
test
mov
in
fnsave
lea
push
dec
out
mov
xchg
push
daa
sbb
rorw
test
and
push
in
shl
xor
push
xchg
push
sti
cmp
inc
loopne
lock
js
into
dec
sti
imul
or
xchg
fsubrs
jp
push
test
sub
mov
push
cmc
fidivl
ljmp
or
sbb
aas
inc
movsl
ficoms
sbb
rcl
mov
outsb
xor
out
jno
enter
or
pop
mov
test
cmpsb
rcr
orb
mov
inc
notb
push
aas
jne
mov
js
inc
bnd
mov
or
lcall
and
sbb
in
rcll
lock
add
in
stc
ret
xchg
popa
sar
dec
loop
and
in
cmc
xor
push
fnstcw
sbb
lea
cmc
scas
rcr
ret
jmp
inc
pop
inc
inc
sbb
rcrl
test
ljmp
loop
mov
pushf
into
mov
mov
adc
mov
rcrl
sbb
add
negl
mov
cmpsl
sbb
in
movsb
ja
lret
int3
les
repnz
mov
int3
daa
fiadds
jnp
ljmp
inc
push
xchg
shrb
dec
cmp
or
fists
dec
pop
inc
movsl
pop
in
dec
cmpsb
and
fisttpl
icebp
mov
cs
xor
adc
inc
loop
or
or
movsl
mov
sarl
mov
xchg
sub
sbb
out
mov
unpckhps
push
aaa
cld
das
xchg
pop
jbe
hlt
xor
or
sar
and
xchg
aam
add
lret
cmp
pop
test
fcomps
push
out
inc
pop
daa
ret
bnd
in
int3
push
mov
mov
cld
cmp
and
push
mov
fstp
fdivs
lcall
call
xor
aad
outsb
cli
rorb
testl
outsl
dec
cmp
pop
mov
aaa
mov
cmp
shll
push
adc
nop
clc
lcall
sbb
lret
movsl
inc
jecxz
xor
dec
mov
pop
adc
mov
cli
out
push
and
jl
pop
sub
jno
push
push
rol
es
mov
push
test
sub
pop
jecxz
sbbl
sub
mov
xchg
fimull
push
push
test
sbb
lret
shlb
fidivrl
aaa
mov
and
inc
fisubs
enter
mov
into
add
fisttps
xor
das
pop
push
scas
arpl
mov
rorb
jl
dec
pcmpeqd
or
jecxz
je
mov
dec
shl
xor
jmp
scas
mov
add
daa
adc
adc
popa
rol
lds
leave
cwtl
fwait
and
rol
xchg
sub
cmc
sub
negw
imul
dec
lea
cmp
jmp
xchg
rcrl
out
fwait
mov
out
sub
sar
xor
xchg
cmp
or
nop
cli
sbb
sbbl
xchg
arpl
push
dec
jp
or
mov
xchg
and
jmp
cmp
cmp
push
mov
lret
lods
pusha
dec
mov
jmp
mov
cmp
pop
pop
or
push
cltd
imul
add
lods
movb
mov
jle
push
ret
xor
mov
mov
push
jae
outsb
cmp
mov
loopne
inc
dec
lret
jo
and
jge
ret
mov
cwtl
dec
daa
sbb
mov
lods
xchg
cs
outsl
push
lds
xor
popa
jge
lods
add
cltd
mov
mov
repnz
mov
cltd
inc
mov
push
pushl
or
rcll
aad
sahf
dec
int
es
mov
imul
jb
pop
jp
clc
negb
outsb
imul
jb
sahf
cmc
fdivrl
divl
std
test
pushf
pop
cmpsl
jecxz
ds
mov
sahf
push
test
mov
mov
push
scas
out
rcll
insl
lret
icebp
pop
mov
mov
out
pop
mov
sahf
push
xchg
cmp
jmp
xor
mov
sbb
and
xor
mov
and
out
and
clc
stc
sbb
fildl
call
cltd
push
int3
fisubl
or
shlb
pop
jmp
lcall
aam
cltd
jl
lea
ficoms
enter
divl
push
js
in
repnz
mov
enter
and
scas
cmpsb
push
adc
push
cmc
sbb
xor
or
lock
faddp
in
int3
xchg
dec
shl
ret
xor
loop
and
jecxz
sub
sub
and
sub
push
orl
mov
jno
fwait
xchg
enter
adc
dec
jmp
ljmp
outsl
mov
movsl
cli
mov
test
xor
test
mov
repz
sahf
out
popf
das
fiaddl
push
repnz
cltd
mov
enter
stc
mov
pop
unpckhps
sbb
test
test
push
scas
jno
cmpl
mov
lock
js
push
sahf
xchg
pop
lcall
mov
sbb
or
pop
shlb
xchg
or
adc
adc
mov
cmpsb
or
mov
mov
sarb
in
pusha
pop
mov
into
and
mov
cmp
sbb
fsubrs
jns
inc
mov
dec
push
jg
pop
out
xor
add
pop
jl
cmc
pop
data16
add
aam
mov
jp
pushf
pop
inc
test
cmp
pushl
mov
dec
cli
imulb
bound
adc
pop
mov
rolb
jg
lcall
enter
adc
es
mov
data16
dec
into
xlat
push
dec
data16
imul
insl
fcoml
xchg
xchg
sbb
dec
jns
jge
mov
nop
cmp
lock
push
insb
or
aam
jne
nop
push
ljmp
mov
lret
adc
xchg
pop
fdiv
cmpb
xlat
sbb
jle
push
adc
push
movsl
push
or
fldt
popa
push
pop
into
push
cmp
inc
jae
dec
inc
and
jmp
mov
push
cmp
sub
cmp
inc
rcl
ret
jnp
nop
stc
lods
mov
fdivr
mov
daa
adc
or
mov
or
sub
lcall
and
in
mov
inc
cs
push
pop
ja
je
push
mov
xor
sbb
cli
hlt
pusha
cs
push
pop
addr16
push
dec
loope
hlt
fnsave
imul
fmull
repz
push
inc
sub
rcll
dec
aaa
std
sbb
mov
cmpsl
mov
cmp
cwtl
cmp
or
xchg
adc
sbb
add
imul
pushl
repz
ljmp
mov
xchg
or
in
add
jbe
inc
data16
jmp
mov
push
jmp
xchg
fstps
or
cli
daa
pop
lock
jb
cmp
aad
and
outsb
mov
or
push
mov
sahf
ret
lret
mov
sarl
adc
fdivp
inc
and
js
popf
addr16
aam
sbbb
dec
je
aas
jb
in
lods
roll
push
push
xchg
xor
push
testl
inc
mov
dec
idivb
sub
xor
pop
pushf
sub
lcall
cmp
ret
mov
dec
xchg
roll
iret
pop
cwtl
add
retw
std
daa
jns
mov
pop
xchg
lods
pop
dec
cld
push
jg
dec
test
sbb
jge
jecxz
cmpl
jns
cmp
jb
cmc
shlb
pop
or
lock
movsb
jecxz
out
mov
pop
in
adc
xchg
cmpsl
repnz
out
push
sbb
jg
xchg
cmp
xor
sub
in
mov
jo
jo
cmpsl
out
popf
mov
sub
xchg
pusha
pop
int3
jp
cmpsl
cmc
mov
and
fwait
aad
lcall
or
xchg
ret
call
test
jg
mov
fstl
lds
xor
xchg
sub
and
xor
outsb
xchg
ret
jb
mov
dec
data16
pushf
cmpsb
out
test
test
push
cli
push
pop
testb
mov
scas
xor
xchg
push
mov
mov
dec
sub
and
sub
jo
mov
cli
rol
inc
aaa
mov
jbe
int3
shlb
movsb
sbb
xor
mov
jg
int3
mov
nop
enter
mov
sti
arpl
out
ljmp
mov
dec
test
out
subl
loopne
sub
enter
into
jmp
test
rol
adc
test
stos
adc
add
jbe
inc
notb
dec
fs
inc
jmp
cltd
push
cmp
roll
js,pn
mov
jae
int3
push
jp
icebp
roll
rolb
shl
mov
frstor
xchg
sti
das
cmpsb
mov
cmpsb
aad
gs
or
jg
insb
sbb
push
jg
leave
push
nop
sub
into
and
iret
lret
mov
lret
mov
pop
fcmovnu
lock
add
xchg
roll
je
pusha
jae
int3
inc
sub
adc
push
daa
adc
mov
int
jb
cld
jle
pop
ds
jg
jb
dec
clc
fisttpl
cwtl
aam
mov
data16
or
shll
popf
xchg
inc
mov
pop
mov
imul
pop
sbb
nop
jp
aam
pushf
stos
xchg
inc
fdivl
addl
mov
lcall
fs
in
xor
ljmp
xorl
fwait
ja
cwtl
xor
scas
ret
mov
jmp
data16
inc
mov
pop
xchg
jo
cli
lret
jmp
add
inc
dec
adc
cwtl
mov
ror
jge
js
scas
sbb
cmp
lret
jge
dec
int3
adc
add
out
ljmp
pop
pop
in
add
stos
xchg
fwait
ret
lods
mov
xchg
or
sub
mov
nop
cmp
insl
push
cmovs
hlt
cmp
push
lods
jns
stc
cmp
push
lret
clc
sub
pop
xchg
sarl
push
pop
adc
orl
pushf
push
push
or
mov
xchg
dec
mov
pop
pop
sbb
insl
push
int
mov
dec
sub
xchg
pop
arpl
stos
pop
adc
clc
call
mov
lahf
push
or
shll
daa
cmp
mov
adc
sub
xchg
outsb
fdivs
mov
cmp
jg
cmp
in
sub
jbe
sbb
push
lods
xor
insb
push
cli
or
dec
fs
movsl
pop
cmp
inc
and
enter
mov
xchg
mov
adc
and
insl
dec
lret
inc
ljmp
dec
icebp
jg
jecxz
test
and
sub
pop
std
imul
jb
sub
and
xor
cmpsl
cmp
and
jb
faddl
test
mov
lods
repz
xor
dec
into
xchg
jo
dec
imul
lea
scas
cs
inc
mov
cli
aas
cwtl
jecxz
cmp
xchg
xchg
mov
out
leave
loop
addr16
hlt
pop
les
test
lock
out
or
fdivrl
pop
subl
add
lock
xor
hlt
pop
cmp
xor
push
sub
call
pop
sbb
bound
xchg
cld
loopne
and
dec
cwtl
movsb
repnz
mov
shrl
js
ret
stos
ss
xor
shll
mov
iret
xor
test
sarl
fs
out
out
mov
and
push
jae
imul
jnp
mov
call
sub
mov
mov
lods
popa
push
and
jp
dec
mov
call
mov
sbb
xchg
popf
out
add
sub
pop
jmp
jmp
mov
decb
test
pop
xor
clc
dec
insw
pop
add
stc
in
mov
sbbb
into
push
sub
cwtl
jl
push
mov
leave
push
mov
shll
inc
mov
rorb
ret
scas
in
mov
fimull
push
call
aaa
out
fsubrs
lret
outsl
inc
ja
push
mov
fs
jo
inc
daa
xor
int
sbb
push
in
and
mov
lahf
adc
xor
loope
sub
jae
mov
sbb
lret
divb
clc
add
adc
xor
jns
mov
inc
xchg
loop
das
inc
push
jecxz
mov
or
sbb
inc
add
cmp
insl
dec
fwait
out
adc
lods
and
jns
popf
pop
popf
stos
xchg
add
sbb
in
cmp
fdivrl
and
sbb
and
xchg
imulb
sbb
dec
out
push
aad
jmp
les
les
test
jns
add
mov
cs
mov
jne
xchg
mov
sbb
fiaddl
in
xor
push
lock
mov
fnsave
inc
dec
mov
push
and
dec
dec
inc
pop
xchg
jl
mov
aaa
mov
insl
mov
lods
jle
xchg
or
fcom
mov
repz
loopne
push
inc
or
into
lods
out
sub
push
ret
in
fwait
aas
push
sbb
sub
cwtl
outsb
daa
xchg
jnp
push
push
adc
lret
jecxz
mov
das
xchg
jecxz
popf
push
out
inc
pushf
adc
adc
outsb
or
adc
scas
xchg
mov
sub
popf
xor
sub
push
push
sbb
add
jge
mov
sub
bnd
dec
cltd
arpl
jb
hlt
cmpl
xchg
sahf
rorb
in
lds
jle
fwait
dec
jle
inc
or
fcmovnu
clc
fs
fs
inc
clc
lods
sbb
scas
pop
fdivrs
adc
out
or
add
sbb
or
xchg
sbb
pop
stos
pop
jo
sbb
shlb
nop
push
pushf
int
sahf
xorl
pop
mov
inc
xor
addr16
mov
cmc
out
add
xchg
xor
cld
xor
xchg
es
or
repnz
cmp
push
jge
dec
in
xchg
jg
std
adc
mov
std
jae
loope
xchg
cs
cmpsl
dec
test
sbb
pop
mov
mov
dec
mov
ret
lret
pop
jbe
decb
leave
cltd
inc
cld
or
setg
scas
mov
mull
orb
cmp
add
pusha
fidivrl
sub
lods
sub
mov
mov
xchg
mov
movsb
hlt
push
sbb
pop
std
sbb
fwait
sbb
lret
sub
mov
jns
jmp
jo
lret
sub
cli
xchg
pop
sbb
out
dec
clc
mov
mov
sub
mov
pop
hlt
nop
out
in
and
mov
sub
fwait
cmp
cs
or
or
add
fwait
mulb
jnp
pushf
out
xchg
shlb
pop
cs
pop
jmp
aaa
and
cmc
outsb
adc
push
or
pop
imul
hlt
inc
mov
push
xor
sub
jecxz
mov
jno
pop
ficoms
jge
repnz
mov
or
sub
or
pusha
and
xchg
into
stos
scas
test
lock
push
call
push
cs
mov
sahf
mov
sbb
into
call
jecxz
mov
insl
jp
pushl
mov
ret
push
or
mov
out
int3
daa
lret
xchg
or
jp
int3
add
inc
sahf
lahf
rolb
push
cmpsl
ss
loop
xor
pop
xor
push
pop
mov
push
jno
sub
adc
sub
mov
xor
sub
cltd
sub
jg
add
gs
pop
mov
sbb
sti
mov
dec
nop
mov
jbe
push
mov
push
mov
scas
xor
jno
incb
cmpl
cmc
daa
sti
arpl
in
lock
mov
lods
push
gs
or
mov
in
or
je
int
pop
jg
mov
pop
sub
push
int3
fldpi
imulb
jne
push
xor
jmp
xchg
cmp
mov
mov
in
fsts
or
mov
xlat
jge
inc
js
xchg
int
in
cmp
fimuls
fidivrl
std
sar
shld
push
cmp
lret
enter
stos
mov
sub
scas
push
cwtl
mov
fists
stos
sub
pop
lock
lea
loope
or
rolb
outsl
pop
and
xchg
xchg
push
pop
idiv
popa
int3
insb
pop
into
insl
cmp
or
sbb
cld
inc
mov
outsl
inc
and
cwtl
jae
lock
nop
xchg
sbb
neg
arpl
mov
fdivrp
xchg
jge
and
push
hlt
out
aam
sub
ret
push
mov
xor
fnclex
sub
imul
pop
das
out
nop
xor
push
mov
mov
loopne
je
jne
push
cmp
fstpt
cwtl
and
mov
and
and
not
mov
in
cmpb
str
insl
fldl
jge
inc
lret
or
aas
sbb
push
int
test
test
aam
jecxz
cmp
xchg
in
adc
call
rcll
jae
jne
repnz
lock
in
xchg
sub
push
movsb
sbb
inc
mov
repnz
and
scas
loopne
jae
and
adc
mov
nop
jmp
inc
subl
add
jae
xor
cltd
mov
mov
clc
pop
insb
cmpsb
test
dec
sub
sub
sbb
dec
shlb
add
ss
lcall
xchg
add
sti
imulb
lods
or
push
ret
jns
pop
inc
decb
das
out
je
mov
jl
mov
sub
gs
sbb
js
push
sbb
inc
or
sbb
adc
imul
cltd
dec
divl
loopne
je
stos
or
scas
xor
sahf
dec
add
dec
sbb
pop
ds
and
mov
push
push
sbbb
or
incl
mov
pop
inc
push
adc
pusha
dec
pop
dec
pop
addr16
ja
mov
dec
icebp
in
imull
je
insl
xor
out
enter
cmp
mov
push
xlat
sbbb
add
shll
insb
inc
push
mov
adc
mov
dec
into
sub
test
jle
in
outsb
pop
dec
clc
sub
mov
xchg
pop
test
out
or
dec
xchg
enter
push
sub
sub
shrl
xlat
insb
cli
shll
daa
pushf
insl
jno
cltd
adc
sub
jo
dec
cwtl
scas
aas
xchg
jge
cmpsl
fnstsw
mov
dec
or
movhps
movsl
test
ds
xlat
int3
mov
dec
or
add
ss
mov
mov
adc
xchg
sbb
cmp
add
fdivs
jp
push
jb
xor
shlb
jmp
fistps
stos
loope
xor
cmp
add
sbb
imul
cmp
pop
mov
jae
inc
mov
jg
fbld
js
ss
sti
fidivrs
dec
movsl
mov
dec
out
cmp
jnp
inc
or
jle
imul
out
icebp
test
mov
pop
pop
das
add
fwait
dec
mov
or
arpl
inc
pop
mov
jle
enter
xchg
mov
xor
sub
add
bound
fwait
bound
jne
and
adc
in
lods
cmp
mov
out
insl
mov
fistps
cli
and
fldt
jns
dec
sbb
mov
xor
inc
lock
ljmp
and
xchg
test
addr16
sbb
out
call
mov
add
xlat
jo
mov
inc
push
repz
bswap
sbb
popf
loop
out
dec
sbb
sbb
adc
xchg
and
leave
inc
scas
es
xor
xor
pusha
xor
sbb
mov
mov
pushf
jp
sbb
add
pop
push
push
shl
leave
sbb
in
fsubl
push
push
lea
cmp
xchg
xor
lcall
adc
adc
jp
insl
daa
pop
mov
pop
inc
ds
outsb
adc
mov
and
sub
cmp
push
enter
mov
sub
iret
daa
sub
or
addl
and
mov
adc
je
ds
mov
dec
sub
mov
clc
popa
push
adc
mov
shrl
lods
aaa
gs
mov
cmp
and
dec
and
adc
pop
repnz
push
mov
cwtl
lea
and
or
jge
xchg
xor
push
jl
sub
sub
jne
cld
icebp
sbb
cli
mov
dec
push
fsubrs
cs
inc
jg
push
iret
cmp
cltd
or
sbb
xchg
call
or
xor
sub
mov
or
cli
mov
sbb
mov
dec
jno
dec
dec
pop
clc
jbe
scas
hlt
jp
or
cmp
leave
dec
jg
or
pop
mov
test
pop
int
cmc
mov
push
rcrl
cmpsl
add
test
ret
mov
js
arpl
inc
ret
mov
sti
mov
pop
mov
inc
in
inc
and
out
sbbl
jge
arpl
fidivl
sbb
push
pop
dec
outsl
cld
push
dec
mov
push
aam
and
rorl
sbb
mov
xchg
rorl
and
cwtl
repz
pop
out
sbb
gs
ss
in
stos
sbb
add
stos
fldt
inc
pushf
pushf
dec
pop
xor
and
sub
das
repz
movsb
mov
repz
aam
xor
mov
mov
sbb
outsb
mov
pop
dec
inc
mov
fwait
ds
mov
sub
fwait
jp
loop
cmp
inc
repnz
pop
jae
in
loopne,pn
repz
lds
xchg
dec
sub
loopne
mov
repnz
pop
loop
test
and
cmpsl
cld
cli
jge
mov
mov
or
push
bound
sbbl
ret
sub
adc
push
in
loop
repz
dec
scas
mov
xchg
inc
xor
sub
arpl
insl
shl
mov
and
outsl
cmpsb
test
or
or
or
pop
mov
xchg
pop
jbe
pop
add
jecxz
clc
out
pop
stos
cmp
repz
scas
aas
jb
clc
bound
or
dec
mov
add
in
in
daa
ret
sti
arpl
aaa
rorl
pop
and
jge
in
scas
sub
mov
xor
jo
sbb
addr16
pmulhw
mov
pop
imul
shlb
shrb
or
inc
add
pop
popa
add
push
xor
into
cmp
ljmp
cmp
jmp
dec
pop
add
cmc
sar
pusha
pop
mov
mov
adc
jbe
stos
jb
in
inc
ror
dec
push
popl
pop
aaa
sub
repz
inc
cwtl
add
add
and
dec
dec
das
xlat
arpl
mov
jo
mov
call
loope
stc
in
mov
mov
push
sbb
flds
dec
cmc
inc
cmp
int3
cwtl
jmp
or
mov
xor
adc
mov
or
dec
loope
and
push
mov
mov
mov
dec
ret
dec
add
jne
adc
movsl
xchg
test
push
xchg
lods
push
mov
in
mov
jns
adc
adc
cmp
jle
add
dec
mov
pop
or
mov
inc
out
fs
xchg
mov
ds
daa
loope
lock
and
mov
sbbl
andb
loop
insl
jl
adc
xchg
imul
and
adc
xchg
incb
jecxz
mov
ja
push
cmp
xor
call
xchg
sub
sub
jl
iret
repnz
adc
pop
jnp
cs
test
in
pop
sbb
popa
sbb
enter
dec
lahf
push
mov
les
sbb
pop
mov
cld
cltd
insl
inc
jbe
std
imul
jbe
shll
imulb
lds
or
push
mov
mov
in
xorl
adc
mov
push
andl
popa
mov
gs
and
dec
ds
and
lods
stc
sbb
jg
in
add
xchg
loop
xchg
push
dec
sahf
sbb
push
cs
mov
cld
rcr
cmpsb
mov
pop
mov
push
popf
inc
jb
call
mov
push
add
fucomip
sub
movsl
insl
pop
data16
sbb
mov
sbb
sub
loopne
cltd
bnd
icebp
mov
sbb
daa
jp
lahf
hlt
dec
rdmsr
xchg
into
mov
lret
mov
pop
out
push
push
xor
sbb
mov
ficompl
add
mov
add
jae
mov
ds
aam
jbe
out
movsl
inc
stos
adcl
push
aas
loop
outsb
imul
inc
cmc
mov
add
inc
mov
adc
xchg
repnz
pushf
xor
popf
pop
pop
test
add
into
test
pushf
and
push
jmp
sbb
mov
mov
aas
jmp
push
add
push
lods
mov
jmp
lock
testb
add
push
icebp
lods
mov
jg
and
cmovae
out
sub
mov
dec
adc
dec
dec
bound
int
mov
test
pop
daa
sarl
or
dec
xor
and
mov
push
jmp
xchg
push
addl
icebp
mov
jbe
insb
push
imul
push
mov
jbe
inc
loop
in
loop
fwait
shlb
xchg
lods
lods
out
and
or
push
ret
jp
lds
cmp
inc
shrb
mov
xor
fists
cs
enter
push
jge
mov
sub
filds
xor
movsb
scas
fildl
mov
push
sbb
sbb
cmpsl
test
js
lcall
int3
and
xchg
jmp
shrb
push
xor
or
xor
in
sbb
nop
cmp
pop
sub
mov
pop
inc
jno
and
adc
outsl
das
into
push
imul
shlb
and
adc
sbb
mov
std
outsb
hlt
movsl
cmpl
setbe
lret
iret
sub
xchg
stc
add
mov
pop
mov
cmpsl
out
dec
xor
xor
adc
xchg
inc
es
add
lods
mov
jp
imul
push
cs
call
inc
nop
cs
and
dec
inc
js
cmp
push
fnstcw
xor
out
sti
pop
push
pop
and
dec
inc
pusha
pop
mov
mov
xlat
lahf
dec
jecxz
pop
xchg
dec
fs
fists
stos
jmp
icebp
popf
jnp
inc
cli
cmc
lods
push
cmp
jnp
sbb
jl
push
pop
xchg
jno
sbb
into
pop
nop
jno
aaa
roll
jle
xchg
sbb
mov
das
inc
add
lods
sub
push
jb
xchg
sahf
ss
pusha
jae
test
xor
mov
movsb
xchg
pop
ret
mov
mov
adc
outsb
push
popa
fstpt
and
mov
incb
jp
cmp
adc
lahf
loop
push
mov
push
daa
push
aad
push
imul
xchg
hlt
out
mov
mov
jne
push
inc
sub
test
and
xchg
push
xchg
out
outsl
mov
fstpl
insb
out
popa
jge
out
nop
lods
sbb
and
mov
out
and
dec
mov
mov
inc
imul
testb
out
inc
fcmove
jmp
mov
pop
jae
adc
fucomp
lret
jo
pop
pop
jbe
xchg
ret
mov
pushf
insb
cmp
mov
sbb
cmc
dec
flds
inc
lods
xor
or
aas
popf
shrl
mov
jge
cmp
xchg
sbb
adc
and
in
hlt
mov
push
out
mov
jnp
push
pop
dec
jb
dec
cmc
nop
push
repz
ja
fbstp
mov
dec
jne
jl
push
mov
inc
push
sti
jae
in
inc
test
dec
ret
divb
gs
xchg
or
dec
mov
pop
lock
or
in
mov
mov
jecxz
xor
xchg
xchg
lea
mov
mov
cmp
mul
mov
imul
lock
fcmovnbe
sub
xchg
je
outsb
xor
lret
addr16
aad
sbb
jp
xor
out
add
jne
xor
repnz
lahf
mov
lods
int
mov
inc
adc
mov
stc
add
cmpsb
jle
dec
data16
shlb
xchg
jmp
xchg
cmp
movsl
dec
lret
aaa
repz
imul
jecxz
fs
fmuls
mov
mov
andb
pop
test
mov
jno
enter
adc
mov
sbb
arpl
enter
outsb
stos
loop
data16
mov
cmp
adc
bound
xchg
dec
repz
inc
push
icebp
out
xchg
mov
repz
in
cmp
inc
loop
outsl
lahf
dec
pop
ret
mov
lahf
jg
das
mov
aaa
and
jae
or
rorb
cli
xchg
cli
jmp
pushf
mov
and
push
xchg
test
xchg
add
cmp
outsb
lods
and
xchg
mov
adc
mov
cwtl
testb
aad
insb
or
in
subb
adc
cvtdq2ps
test
sbb
pop
cld
popf
icebp
fdivp
cmp
jo
cmp
pop
out
adc
ss
popf
lret
dec
xchg
out
cwtl
gs
pushf
cltd
movsl
jecxz
stos
nop
or
js
jg
sub
jge
inc
add
stc
dec
xor
xor
push
lcall
xchg
and
sbb
popf
shr
and
xchg
outsb
in
pop
add
in
insl
xor
fbstp
push
les
clc
ds
scas
adc
fmull
xor
pop
int3
push
jp
notb
nop
cmpsl
adc
shrl
out
rcrl
jg
mov
mov
into
pop
pop
loopne
das
jp
inc
ja
addr16
lret
add
inc
jns
xor
sub
data16
xchg
fadds
pop
test
mov
pop
ret
mov
ror
push
xchg
daa
sarb
mov
sti
mov
add
lcall
pop
mov
mov
lret
sahf
inc
pusha
mov
add
adc
push
movaps
xchg
scas
jl
pop
or
cmpsl
dec
pop
pop
int3
push
xorb
cmp
jp
call
or
test
in
sbb
dec
arpl
ss
pop
addb
test
cltd
push
adc
test
mov
mov
pop
lret
mov
testb
and
jl
dec
pop
cmp
mulb
jle
add
test
int
in
dec
fs
cmp
loopne
std
push
pop
icebp
data16
lahf
dec
or
mov
sti
or
pop
or
adc
stc
adc
pop
xchg
int3
pop
inc
push
xor
or
mov
fwait
mov
xchg
sahf
mov
pop
gs
push
mov
outsl
jno
arpl
xchg
xor
adc
add
pop
mov
imul
int3
fbld
dec
pop
xchg
pop
enter
and
lret
loopne
jmp
mov
mov
bound
mov
mov
mov
lods
inc
addr16
rcrl
mov
fldl
mov
sub
push
pop
dec
out
pusha
mov
adc
xchg
data16
fcmove
pop
mov
jmp
arpl
notl
adc
push
lret
sbb
sub
stos
sti
je
mov
in
ljmp
int
jo
test
aam
push
push
leave
dec
addb
jae
add
ret
pop
test
daa
jno
mov
inc
imul
or
dec
out
das
in
pushl
imul
jecxz
cwtl
mov
dec
scas
or
rorl
push
loop
loop
testb
or
ljmp
push
lahf
xchg
xor
movsl
shl
add
fwait
pop
int3
jo
jge
sbb
or
mov
insb
aad
sub
cmp
lock
xchg
fldt
jo
jle,pn
dec
add
sbb
mov
pop
jnp
push
gs
pushf
icebp
jae
or
shr
sub
out
sub
jecxz
andb
inc
aad
sbb
rorb
nop
aaa
in
xlat
xor
inc
mov
push
pop
cmpsl
mov
loop
jle
test
push
jg
pop
jp
roll
sub
pop
xchg
or
sarb
mov
mov
cmp
add
pop
pop
pop
into
out
fs
xchg
xchg
gs
scas
out
test
out
and
nop
and
pop
xor
jl
jle
fcoms
jmp
inc
push
jp
mov
jmp
je
cltd
add
push
push
push
push
cmp
aam
test
xor
pop
mov
mov
mov
sub
and
ljmp
lods
and
mov
rcll
adc
mov
mov
dec
notl
rolb
out
cli
aam
or
aaa
sub
lock
in
hlt
loope
setno
ret
jmp
insb
sbb
cmc
add
fnstcw
in
jo
pop
or
shrb
fmul
pop
pop
pop
lds
mov
sbb
dec
inc
pop
rolb
lret
sahf
xor
and
sub
lods
leave
sbb
push
mov
jg
pushf
les
nop
jle
cmp
xor
mov
dec
inc
and
sbb
or
jno
cmp
loop
lret
or
lock
mov
mov
lcall
xchg
loopne
test
cli
jbe
fistpll
aaa
arpl
pop
popf
mov
push
dec
sbbl
xchg
mov
xchg
movsl
dec
ret
aad
pop
repz
lcall
cmp
jb
mov
ret
xor
addb
insb
push
add
fdivs
push
push
jle
lods
lods
jnp
lret
xor
pop
aad
jmp
pop
xchg
sub
mov
push
mov
mov
cmp
ss
dec
cmp
imul
imul
je
stos
sub
cmp
mov
cs
insl
inc
sbb
cs
es
leave
shrb
mov
mov
popa
les
pushf
ficoml
fcomp
jmp
and
xlat
mov
mov
dec
mov
mov
fxch
inc
popa
jno
xchg
cli
and
and
ret
xorb
ja
fisubrs
shrb
cmp
mov
into
push
jb
les
add
enter
icebp
pusha
jle
xlat
aad
mov
sub
rolb
push
jnp
or
fisubl
in
mov
incb
pop
sbb
sarl
xchg
je
cwtl
inc
movsl
fiaddl
pushf
rcrl
sti
and
shlb
push
lcall
inc
lret
add
dec
jmp
scas
mov
jns
ret
das
cmpsl
or
push
adc
clc
mov
mov
adcl
jae
pop
lret
outsb
mov
xor
adc
mov
or
xchg
push
sti
out
xlat
mov
xlat
add
lods
popa
hlt
test
mov
add
inc
repnz
jp
inc
aas
int
adc
pop
push
xchg
out
pop
jnp
ljmp
add
mov
sti
fbstp
pop
aad
int3
in
push
sub
xlat
xchg
inc
rorb
mov
in
add
bnd
adc
mov
adc
mov
adc
push
daa
push
shrl
jecxz
movsb
push
imul
cwtl
push
lret
mov
das
inc
jne
inc
ret
cmpsl
gs
mov
mov
and
sub
clc
in
pop
lahf
mov
sub
push
xor
fisubrl
movsl
add
lret
fcomp
push
inc
scas
xor
aas
mov
sahf
cmp
cmp
fbld
roll
adc
ficomps
mov
mov
popa
add
loope
aas
imul
into
std
push
jbe
sbb
es
add
dec
popf
xchg
mov
or
scas
gs
jle
or
aam
mov
inc
jg
inc
int
call
dec
fistpll
adc
sub
std
adc
lahf
mov
push
mull
das
jo
mov
lcall
outsb
outsl
ja
add
dec
mov
cmp
aas
aaa
enter
sbb
adc
mov
addr16
or
cmp
rorl
sub
adc
ljmp
jae
outsl
sbb
inc
cs
mov
push
pusha
lea
mov
dec
and
mov
push
jb
xchg
dec
jns
int
and
jns
mov
fstpt
clc
push
decb
fs
sbb
dec
ja
cwtl
lret
xor
in
bound
jns
jle
dec
ljmp
pop
lcall
jns
js
xchg
jl
cmp
es
aad
je
and
loop
lahf
push
push
inc
es
xchg
mov
icebp
enter
jle
jecxz
dec
jmp
mov
pop
push
je
shrb
dec
cmp
sub
stc
lahf
xchg
ret
sbb
das
rcrl
mov
scas
stos
fwait
jg
mov
fdivrs
stos
push
enter
shrb
movsb
pop
or
jge
add
subb
xor
push
aaa
sub
in
test
lods
push
iret
cmp
push
xchg
or
aaa
xlat
dec
lahf
inc
repnz
jo
call
dec
dec
adc
mov
xor
mov
mov
inc
push
mov
mulb
pop
push
out
shlb
cmp
add
ja
in
andl
push
aas
mov
clc
mov
popa
out
test
add
loop
xor
je
mov
lret
mov
insb
xchg
sarl
jnp
stos
pop
lret
push
lret
push
mul
lcall
adc
cmp
xor
daa
lods
aad
dec
dec
xchg
xor
dec
hlt
adc
pop
sub
dec
fnstcw
scas
cltd
shlb
cwtl
aaa
into
ret
out
cmp
and
sti
mov
jmp
xor
fldenv
adc
xchg
sub
out
ss
pop
ret
in
xor
sub
sbb
cltd
lock
xlat
lds
cmpsb
jo
idiv
mov
out
cmc
xchg
ficomps
mov
mov
stos
pop
jmp
cld
cmp
jmp
jb
xchg
test
sar
scas
in
adc
ja
push
inc
dec
int3
pop
stos
mov
mov
xor
adc
mov
jge
push
scas
shrb
repnz
pop
xorl
add
je
push
int3
push
sbb
subl
inc
test
jae
add
sbbb
paddusb
stc
sbb
cmp
stos
subl
dec
mov
sbbl
subb
ss
xor
mov
add
cs
sti
jo
js
cld
dec
sbb
sti
pop
jg
cmp
ja
fstps
test
cmp
mov
movsl
xor
inc
mov
fs
inc
enter
xchg
add
fsubrp
stc
loope
fadds
rcrl
lcall
sarb
cmp
es
daa
xchg
xor
scas
mov
dec
jg
or
xchg
xchg
sub
repz
sbb
clc
clc
dec
adc
sarb
inc
mov
pop
iret
inc
jp
xchg
pop
and
or
clc
pop
lahf
mov
adc
inc
testl
stos
loopne
stos
dec
sub
xor
cmc
loopne
inc
jecxz
push
repz
leave
inc
lock
clc
xlat
cmp
ds
and
jnp
movsl
sub
cltd
std
movsl
push
mov
imul
pop
xor
mov
jbe
inc
addr16
mov
inc
rcrl
push
push
push
lods
outsb
fistl
dec
jbe
sbb
and
aaa
mov
das
rcll
xor
sbb
hlt
loopne
xchg
repnz
mov
data16
xor
imul
aas
jnp
lahf
cmpsb
xor
mov
lds
sub
mov
and
push
jmp
mov
mov
xchg
inc
jl
sub
rorl
mov
ss
and
sbb
sub
xchg
pusha
hlt
test
pop
test
rcl
push
test
lock
js
mov
test
and
adc
jg
sub
xchg
mov
stos
xchg
and
pusha
push
mov
lods
test
push
test
test
aas
or
mov
stos
add
cli
loop
push
out
es
jnp
icebp
lods
xchg
or
leave
in
test
imul
push
leave
pop
addr16
push
xchg
xlat
out
leave
and
lret
inc
and
sbb
test
out
dec
xor
and
push
je
nop
jecxz
movl
gs
xor
mov
mov
aad
clc
pushf
dec
push
cmpsb
sub
push
add
sti
ja
test
adc
or
je
sbbb
shl
popa
fcomi
dec
xor
imul
mov
jnp
cmpsl
ljmp
test
mov
push
and
dec
lahf
adc
movl
mov
mov
mov
push
xchg
fnsave
jne
js
and
jbe
lods
xchg
jo
push
dec
aaa
dec
mov
je
les
sahf
xor
rcll
inc
pop
sub
mov
cltd
pop
sbb
jne
sub
ss
xchg
push
mov
xchg
lret
mov
sub
nop
clc
es
xchg
insb
xchg
out
gs
mov
std
dec
cld
test
lahf
add
stc
and
xlat
jmp
jecxz
xchg
out
test
jl
jb
fdivrl
les
mov
shll
mov
inc
or
mov
cmp
jns
test
mov
push
repz
fstpt
insl
mov
arpl
pop
js
and
jp
sbb
outsb
push
imul
pop
and
push
aad
and
mov
test
fiaddl
pop
js
or
add
cmc
cmpsb
pop
test
jge
in
das
or
mov
xor
out
jg
popa
dec
jge
mov
jno
rcrb
add
int3
sub
sub
mov
popf
xor
cld
sbb
sub
std
jl
lds
inc
xchg
lret
mov
roll
es
outsb
aaa
stc
inc
imul
test
jecxz
in
popa
adc
popa
neg
xor
imul
test
and
mov
fwait
stc
and
mov
or
cli
mov
leave
cmp
test
adcb
xor
jmp
sbb
dec
xchg
xor
push
or
push
mov
mov
mov
fisttpl
push
inc
cltd
adc
leave
icebp
lock
stc
mov
pop
mov
xchg
sahf
sub
sar
jo
scas
add
adc
test
mov
sbb
xlat
mov
ljmp
mov
sti
xorl
mov
cmp
cmp
hlt
pop
lods
adc
pop
inc
pushf
xor
xor
sub
adc
mov
das
inc
das
fwait
sahf
cmp
mov
outsb
push
repz
pop
mov
push
iret
push
decb
adc
mov
pusha
je
hlt
mov
xchg
rcll
nop
push
cld
xchg
mov
shlb
clc
fidivl
outsl
jg
movsb
into
dec
cmp
loope
lret
push
jmp
cld
mov
add
lods
fsubrl
sti
pop
loope
mov
cmc
fcmovu
xor
cmp
in
mov
fxch
dec
adcl
das
xchg
xchg
outsb
movsb
ss
jecxz
jmp
loope
std
mov
push
push
mov
imul
lods
lret
pop
imul
hlt
scas
loopne
xchg
jle
mov
call
cli
aam
pop
xor
or
push
push
dec
push
cltd
jle
scas
into
jl
dec
pop
cmc
push
into
mov
rorb
scas
pusha
iret
inc
andb
testl
mov
cmp
jno
jne
outsl
imul
push
mov
mov
or
adc
mov
push
leave
jns
mov
push
sbb
repnz
je
or
push
mov
sti
stos
nop
sahf
inc
daa
mov
push
movsl
std
out
ret
andb
or
popa
mov
dec
adc
inc
sarb
push
mov
popf
shlb
push
pop
sub
outsl
sub
mov
repnz
pop
push
adc
retw
imul
cmpsl
int
outsb
dec
aad
test
pop
pop
movl
lods
push
test
sub
xchg
push
fadds
or
call
sahf
dec
out
jecxz
adc
jnp
dec
dec
lret
out
dec
mov
scas
scas
movsb
aas
fwait
and
rcll
inc
mov
lock
mov
push
popf
sub
hlt
xchg
xchg
mov
push
xor
pop
popf
sbb
cmpsb
jae
cltd
mov
sub
je
mov
pop
xor
sub
pusha
out
sahf
test
mov
or
add
fldenv
xchg
cmp
les
adc
push
pop
mov
stos
mov
inc
dec
loop
rorb
xor
leave
mov
cmp
ds
push
pop
jle
and
cmp
fsts
xor
xchg
frstor
pop
add
pop
add
mov
shll
sbbb
push
imul
xor
fucomi
scas
adc
daa
outsb
fs
jle
repz
xchg
adc
mov
mov
adc
xchg
pop
or
fisttpll
xor
loope
inc
ljmp
push
jmp
mov
insb
sarb
sbb
pop
xor
ds
fwait
lock
xchg
sahf
push
inc
cmp
es
sbb
xor
cmp
and
push
and
loope
lock
mov
std
je
adc
xor
iret
rorb
loope
xchg
in
mov
aaa
mov
fidivrs
mov
movsb
pop
gs
add
inc
imul
stc
insl
pop
pop
data16
aaa
leave
cs
push
sub
xor
rcrb
dec
movsl
bsf
ret
pusha
mov
mov
inc
or
push
mov
sbb
mov
into
and
add
xor
addl
or
or
jbe
lods
xchg
cmpsb
loopne
imul
mov
sarb
sti
dec
stc
xor
and
cli
js
add
sbbb
in
mov
pop
xchg
hlt
das
ficomps
aas
xchg
daa
add
xchg
ret
mov
xor
gs
cmp
es
xor
sub
dec
or
mov
stos
insb
xlat
push
mov
cs
push
inc
iret
dec
xchg
lahf
jle
sub
push
push
test
mov
int3
jle
divb
or
inc
sub
cmp
and
fs
sub
test
and
lods
cmp
jb
cmpsl
mov
ret
jo
test
dec
push
rorb
ret
inc
enter
mov
adc
cmp
rcll
mov
adcb
pop
orps
test
sub
lods
cwtl
add
add
daa
xor
test
jo
mov
jge
insl
adc
pop
loope
adc
xchg
push
sub
add
mov
stos
pop
inc
xchg
cltd
xor
and
add
and
test
cmp
mov
or
sub
adc
jmp
dec
data16
lods
jno
filds
scas
or
sub
les
movsb
push
pop
inc
mov
pusha
lock
hlt
insl
xchg
dec
push
mov
iret
add
sub
out
call
xlat
loopne
pop
fs
mov
sub
jecxz
mov
adc
adc
push
lahf
push
sub
lret
pop
in
loop
dec
or
in
testb
dec
inc
fisttpl
lds
mov
add
jg
sbb
fcoml
or
test
push
cwtl
mov
sahf
stos
out
inc
mov
jns
adc
movsl
inc
int3
xlat
mov
test
mov
mov
inc
lods
push
push
imul
xor
in
inc
mov
and
call
lock
mov
jl
sub
gs
push
in
cmp
test
xchg
dec
int3
mov
mov
push
fcmove
test
movsb
ror
jmp
imul
sbbl
or
test
sbb
cwtl
lock
lret
or
out
imulb
cli
std
ds
scas
nop
addl
test
or
add
ss
cmc
sbb
pop
je
jno
cmp
sbb
push
cltd
fucomp
inc
mov
add
je
lock
xlat
sub
mov
push
mov
mov
dec
imul
aaa
ljmp
mov
in
or
nop
jb
faddl
add
fnstcw
sbb
bound
xor
movb
dec
add
loopne
adc
sbb
xor
test
pop
mov
out
fs
lret
cmp
xchg
sub
pop
popf
push
test
fwait
call
in
loope
test
bound
jnp
sbb
repz
outsl
xor
mov
jb
xor
ficompl
mov
push
xchg
adc
cmp
mov
xor
inc
jne
rorl
sub
imul
iret
imul
mov
or
push
ss
out
push
xor
pop
cmpsl
repz
push
lret
mov
shrl
clc
ret
add
push
push
push
jne
pop
push
sub
clc
xor
movsl
neg
jg
outsb
aaa
and
js
jg
mov
sbbl
jecxz
mov
inc
lds
mov
in
cmpsl
imul
mov
mov
scas
sar
jg
mov
and
xor
push
sub
sub
mov
and
notl
inc
push
js
cmp
test
cltd
in
mov
jecxz
fists
inc
popf
mov
mov
pop
rcrb
andb
iret
addb
fadds
addl
out
mov
adc
repz
jne
fwait
call
pop
inc
and
xor
out
rcr
out
add
mov
push
pop
inc
sbb
icebp
mov
xchg
xor
mov
xchg
shll
out
cmp
add
imul
ret
insb
fcmovne
adc
iret
pop
push
mov
pop
es
lahf
dec
test
call
sbb
push
dec
dec
iret
pusha
add
add
xchg
xchg
les
push
dec
or
icebp
pop
test
sbb
jg
fbstp
rcrl
imul
sbb
inc
cmp
mov
shlb
inc
inc
int3
subl
loopne
cmpb
insb
mov
call
and
mov
hlt
xchg
pop
outsl
cld
jo
inc
icebp
mov
jae
lret
imul
stc
mov
cmp
stc
add
stos
rolb
xor
or
ss
in
pop
nop
repz
rclb
ret
inc
mov
movsb
xchg
test
inc
imul
pop
xor
cmpb
mov
repz
mov
pushf
and
stc
outsb
daa
add
shl
mov
arpl
dec
out
dec
into
cwtl
xor
xor
dec
insl
fidivrl
roll
test
adc
jle
repz
inc
mov
andb
mov
adc
lods
add
xor
pop
ljmp
xchg
lret
cs
cmc
mov
aam
xchg
jb
and
dec
add
xchg
jecxz
clc
hlt
loop
xchg
shrl
icebp
das
sbb
adc
add
push
es
clc
mov
or
xchg
mov
je
stc
xor
mov
adc
sub
lret
mov
jecxz
xor
xchg
sbb
fnstcw
dec
cwtl
faddl
imul
aas
inc
sbb
inc
sti
sbb
jl
je
and
xor
je
js
adc
mov
icebp
mov
push
sahf
dec
jl
dec
inc
pop
fwait
sub
imul
or
adc
jb
mov
adcl
lods
repz
imul
mov
mov
into
loop
jp
fs
std
inc
ljmp
call
mov
mov
mov
push
inc
cmpl
sbb
int
ja
add
lods
pop
mov
and
cmpsb
jp
jnp
hlt
ret
bound
fwait
mov
mov
pop
inc
in
lret
repz
sub
jg
das
push
mov
jge
scas
ret
push
rcrb
js
jne
mov
jbe
jg
ds
aad
in
dec
cmp
xor
add
sub
mov
adc
xlat
adc
cmc
jbe
xlat
cmpsb
inc
in
shrb
ror
cmp
aam
pop
and
push
jo
in
mov
dec
dec
gs
mov
jle
aad
sbb
scas
fldcw
clc
xor
out
shll
test
and
mov
pop
xlat
roll
fdiv
fdivl
mov
mov
in
out
adc
icebp
and
pop
adc
jl
lds
in
imul
lock
inc
out
ja
in
jne
std
mov
clc
sbb
stos
insb
jge
cmp
mov
loop
inc
enter
cmpsl
cmp
loope
and
mov
mov
stc
add
mov
and
scas
mov
xor
sub
mov
loopne
clc
or
fs
clc
sub
fstl
jns
adc
sbb
ficoml
or
jae
mov
jmp
in
push
mov
adc
xor
mov
cmc
sub
mov
sub
dec
incl
mov
pop
sub
pop
jo
dec
fmul
pushf
push
ss
out
and
rcrb
mov
adc
cmp
dec
fmul
sbb
loope
add
imul
jns
lcall
inc
add
adc
fs
push
jb
fwait
call
pop
or
sbb
in
js
addr16
sbb
sbb
data16
cmp
lods
cli
lcall
repnz
push
or
mov
in
jg
add
jns
mov
in
les
sbbl
ss
or
push
movsl
loopne
jle
aaa
sbb
push
cmp
call
sub
and
lret
mov
xchg
xchg
or
push
aad
xchg
sbb
mov
and
fnstcw
das
mov
add
sbbb
or
imul
fcoml
ret
xchg
mov
mov
nop
jne
pop
fbstp
mov
arpl
cwtl
pop
jg
inc
mov
mov
outsb
xchg
sbb
mov
stc
inc
imull
jnp
inc
cwtl
pop
adc
addr16
pop
mov
adc
test
xchg
pop
sub
pop
cmpsl
aad
xchg
scas
repz
pop
outsb
adc
sbb
sbb
out
sar
lds
jmp
add
imul
pushf
ja
inc
loop
inc
jecxz
pop
cmpsb
scas
arpl
sar
push
out
jg
jmp
aad
out
cwtl
std
pop
jno
sbb
sub
int3
or
xchg
cmc
aad
cmp
xor
xchg
mov
test
imul
cmp
scas
sub
hlt
ss
fimuls
iret
test
call
fstps
jns
iret
outsl
sub
adc
bound
rol
shr
fwait
das
lcall
xor
and
jmp
imul
pop
push
es
xlat
mov
call
int
rcl
and
inc
xor
sti
pop
aam
pushf
out
pop
repnz
and
inc
idivb
jae
or
cmp
add
cmp
and
xor
mov
ret
pop
imulb
sti
push
add
fmuls
enter
and
push
xchg
aaa
inc
or
imul
loopne
adcl
pop
enter
pop
daa
lret
fprem1
mov
jl
sbb
int3
xor
or
data16
loopne
or
and
pop
shlb
mov
and
pop
in
outsl
rolb
mov
and
rorb
mov
dec
stos
cmp
push
das
push
inc
sub
dec
push
mov
cltd
pusha
jbe
sbb
dec
push
lods
add
push
mov
in
and
lret
push
int3
mov
sub
popa
int
mov
inc
setno
push
insl
inc
xorb
scas
shlb
push
mov
sbb
jle
pop
aad
fsub
mov
call
dec
or
xchg
out
and
shl
pop
lahf
add
je
sub
adc
xlat
sub
and
adc
mul
std
aad
mov
idivb
dec
push
aas
xchg
add
fs
pop
inc
push
xchg
stos
ret
xor
enter
cld
enter
dec
sbb
insl
aas
pusha
punpckhwd
mov
sbb
sbb
or
call
sbb
or
iret
and
pop
sbb
pop
and
nop
push
aaa
cmp
cltd
shrb
and
fstpt
and
sbb
pop
inc
inc
mov
repz
xchg
fbld
add
push
or
sub
cmpsl
jg
mov
mov
inc
jmp
aad
mov
in
adc
sbb
icebp
movsl
mov
pop
mov
xor
push
popa
pop
cltd
jo
mov
cmp
je
js
cld
jae
push
xchg
pop
mov
add
fdivl
fsubrl
imul
std
clc
call
ret
push
ja
and
inc
jl
iret
in
stc
xor
shll
aad
xchg
repnz
jge
clc
xchg
cmp
cmp
mov
hlt
ja
in
cld
sbb
popa
add
jne
mov
pop
adc
cmpsb
push
push
inc
nop
movsl
cmpb
add
cmp
call
push
in
dec
leave
divl
mov
outsb
jno
jmp
fnstcw
rol
pop
cld
sub
aad
loopne
addr16
orb
or
std
adc
pop
dec
and
loopne
dec
in
mov
mov
xor
xchg
mov
gs
pop
lret
nop
mov
pop
scas
sbbl
dec
dec
pop
xor
xor
lret
test
and
not
jmp
mov
cmpsl
aad
mov
mov
lods
shrb
add
test
push
stos
movl
js
lret
sbb
dec
xchg
lret
mov
repz
cwtl
repnz
jl
jp
enter
outsl
dec
rorb
sub
iret
lret
stc
add
mov
inc
outsl
inc
cli
jbe
pop
sbb
fld
cmp
pop
gs
fwait
xor
std
into
pop
arpl
cmp
mov
dec
pavgw
mov
cmp
arpl
add
add
mov
cmpsl
inc
xchg
adc
pusha
push
in
sbb
imul
outsl
jl
in
insl
cmpsl
in
adc
push
les
pushf
cmp
hlt
push
xchg
xor
outsb
or
jle
arpl
xor
das
jp
mov
shlb
xor
or
mov
out
idivl
mov
or
stos
repnz
or
stos
lahf
fidivs
cmp
jl
imul
ljmp
ljmp
mov
movsl
add
push
loop
add
cmp
cmpl
enter
adc
dec
mov
in
push
adc
mov
mov
sub
adc
jg
mov
push
lcall
test
jle
test
cli
mov
lcall
lret
call
lcall
xor
push
push
add
and
cmp
xor
bound
clc
pusha
add
fcompl
xchg
nop
cmp
jle
imul
std
sub
dec
hlt
xchg
push
sub
push
sbb
dec
aam
inc
jp
xchg
add
jns
fadd
scas
fiaddl
mov
fs
mov
adc
and
in
push
add
mov
jp
push
and
dec
addr16
lahf
mov
jne
inc
movsl
sub
fistpll
add
or
mov
movsl
adc
mov
sub
loope
xchg
aam
dec
pop
xchg
into
push
mov
in
push
inc
in
sub
inc
testl
mov
xchg
sub
rolb
lcall
popl
ja
and
stc
lcall
cmp
xchg
fldl2e
xor
push
pop
das
shrb
inc
jnp
imul
mov
add
pop
adc
in
mov
pop
pop
jmp
push
leave
pop
popa
or
inc
cmpsl
je
fdivl
pop
inc
int3
and
mov
fwait
mov
mov
sub
incb
mov
fildll
or
xor
xchg
sbb
mov
fsubrs
mov
dec
into
push
movsb
call
bound
xchg
cli
movsb
jg
pop
or
and
insl
adc
xchg
test
fimull
dec
inc
mov
push
cltd
outsl
adc
mov
dec
cmp
cmpsl
dec
inc
enter
sar
adc
and
jno
push
xchg
loope
lods
add
adc
outsb
fisttps
addr16
lahf
xchg
repz
mov
lock
pop
jmp
inc
stos
xor
ljmp
mov
jo
or
cmp
fdivl
testb
push
mov
push
loopne
push
data16
pop
popa
jmp
cmc
cs
push
inc
and
rol
push
int
add
inc
out
cwtd
inc
xchg
lock
das
js
stc
fbstp
movsb
dec
fs
pushf
mov
xchg
ror
test
push
test
ja
inc
jecxz
pop
sbb
aaa
sub
adc
mov
pop
fdivr
sub
lds
pop
push
push
dec
xlat
aas
mov
fadd
lea
bnd
ja
mov
shrb
pop
sbb
push
inc
add
aaa
xor
jecxz
enter
lahf
adc
cmp
ja
testb
jmp
pushf
outsb
xchg
aaa
out
dec
mov
pop
in
mov
push
sbb
aad
pop
fadd
jg
pop
out
in
push
insb
in
les
fisubrl
insb
add
aas
or
push
lea
push
pushf
movsl
jecxz
test
lcall
int3
ss
sbbb
fs
aas
hlt
scas
in
loope
mov
add
sub
inc
iret
sti
jnp
or
dec
out
inc
sub
mov
push
testb
mov
mov
mov
insl
inc
test
pop
xchg
push
adc
xor
add
cltd
lcall
pop
fcoms
push
push
mov
or
sub
pushf
xchg
sub
scas
inc
es
shll
bound
jle
pop
sbb
cmpsb
lods
out
jecxz
aad
mov
mov
cli
test
mov
pop
lahf
inc
pop
add
xor
scas
fwait
maskmovq
cmp
call
clc
bound
add
lds
pop
lahf
push
fldl
icebp
int3
xchg
aam
cli
loop
dec
push
xchg
dec
fdivs
fbld
ret
in
and
or
ja
int
ljmp
and
dec
cmpsl
test
cs
mov
scas
dec
cmp
adc
and
sub
xlat
dec
xor
cmp
xor
arpl
das
xor
adc
out
lcall
out
and
aas
sbb
mov
dec
dec
je
mov
pop
loope
fisubs
leave
mov
adc
dec
pop
inc
dec
pop
repnz
iret
jne
imul
popa
ja
cmc
dec
lret
pop
hlt
rcrl
push
mov
push
roll
test
adcl
add
loopne
test
test
fcmovne
push
xchg
std
pop
mov
sbb
aad
jge
xor
push
ficomps
sub
sub
fcomps
ds
mov
out
mov
mov
jl
cmp
xor
imul
inc
cmpb
cmpsb
jae
out
negl
jb
mov
jp
in
lahf
sub
fcmovb
hlt
stos
mov
int
jle
pop
jb
or
aad
jbe
bound
pushf
sub
sbb
pop
sbb
jbe
idiv
cltd
jo
pop
push
lea
cltd
push
push
leave
seta
cmp
jecxz
outsb
push
loop
fdivl
fisubrs
notl
arpl
loop
and
mov
mov
sbb
pushf
gs
dec
mov
push
stos
insl
rorl
sub
pop
ds
push
mov
mov
add
out
cs
fprem1
daa
pop
mov
insb
lock
cmpsl
cmpsl
lret
fidivrl
jbe
jne
or
dec
ficoms
dec
jo
cmpb
pop
xchg
cmpsb
int3
inc
enter
inc
push
inc
push
decl
out
xchg
out
lea
stos
aam
stc
test
fdivrs
mov
mov
push
in
xorl
ljmp
xor
mov
fcmovu
rcr
mov
out
inc
mov
in
fsubrs
jb
leave
into
pop
icebp
rolb
cmpsl
andl
mov
out
dec
sbb
lea
std
add
sti
scas
rcpps
jge
enter
dec
mov
mov
icebp
fwait
dec
cmp
test
sub
or
push
mov
sbb
xor
jbe
in
xchg
das
ret
ja
int
outsl
xor
inc
loop
cmp
lret
aad
dec
dec
js
jnp
cmpsl
bts
mov
lock
lret
adc
stos
cmp
pop
loop
movsb
int3
enter
dec
mov
mov
jp
jno
rclb
push
dec
push
mov
sbb
and
and
dec
push
divb
stos
ljmp
andnps
adc
or
xor
stos
pop
mulb
dec
push
lcall
into
and
out
push
shrl
or
daa
inc
pop
aaa
jne
mov
rcll
inc
adc
jb
or
xchg
je
jns
negb
or
push
lock
xchg
fdivrl
or
jb
orl
das
mov
ss
out
dec
iret
cwtl
dec
sbb
mov
sub
sub
aaa
push
jbe
popf
out
and
dec
pusha
push
mov
jae
leave
outsb
add
sub
fists
sub
enter
outsl
cs
mov
adc
int3
scas
lcall
jl
xchg
cmp
fldt
loope
adc
fistps
shlb
in
js
dec
push
nop
dec
add
mov
std
xor
dec
test
jge
inc
pop
icebp
divl
sbb
jbe
ret
push
and
das
pop
jbe
xchg
outsb
lret
loope
inc
je
push
out
mov
out
jnp
ljmp
jbe
cmp
mov
xor
arpl
xchg
jle
pusha
dec
test
sub
xor
mov
jmp
out
lods
sbb
testl
mov
sub
js
out
sbb
bound
sbb
mov
add
test
int3
dec
movsb
cmp
jno
dec
jle
dec
adc
xchg
add
ljmp
xor
shlb
incl
fisubrl
pop
jmp
mov
adc
dec
test
out
jne
outsb
fldenv
push
xchg
cs
mov
in
xor
sbb
divl
imulb
xchg
adc
aaa
mov
jmp
aad
pop
cmp
inc
jno
cwtl
cmpsl
or
out
rolb
or
in
mov
out
ja
sbb
jno
lods
mov
stos
or
jecxz
rorl
inc
stos
ss
ljmp
xor
sbb
or
push
mov
ud2
movsb
and
sbb
negb
idivl
adc
inc
ret
add
out
dec
gs
xchg
movl
nop
rolb
dec
pop
lock
sub
push
pushf
lret
iret
push
sub
lret
xor
fidivs
xor
jo
and
xchg
adc
icebp
sbb
enter
sbb
inc
lock
push
push
adc
cmp
jns
add
lret
sbb
inc
leave
sub
imulb
adc
stos
aas
test
movsb
jge
jo
aaa
jne
mov
or
push
pop
adc
push
sbb
push
pop
cwtl
push
and
bound
fs
push
inc
adc
es
insb
jns
outsb
pop
sarl
imul
repz
push
push
les
sti
cmpsl
jae
push
lock
pushf
mov
neg
jb
cld
xchg
sub
push
mulb
gs
lods
jge
fdiv
imul
xchg
pop
fistl
iret
sbb
dec
das
cmpsl
orl
xor
aad
ds
dec
stos
loop
push
into
lods
fcompl
sbb
cs
lcall
stos
push
adc
fprem1
mov
fmuls
mov
jmp
popf
push
repnz
outsb
inc
push
pop
lret
adc
push
push
jge
aas
mov
sub
xchg
xchg
stos
fildl
add
lret
fildll
pusha
dec
pop
push
jl
cltd
mov
mov
fistpll
testb
dec
cmp
push
inc
jl
in
or
add
ret
rorb
sbb
sbb
test
cmp
sahf
sahf
push
rorb
movsl
ret
xor
fxam
repnz
xor
popa
jl
movl
pop
ret
into
pop
xchg
insb
adc
mov
out
pop
cmp
or
jp
dec
arpl
push
or
lret
icebp
fldcw
xlat
rol
dec
je
inc
ds
ret
out
fs
or
fadds
mov
sbb
mov
shl
xor
adc
pop
pop
gs
push
add
scas
mov
ret
xchg
xchg
mov
mov
lods
jnp
push
add
call
rcrb
fwait
stos
out
out
pop
jg
mov
mov
dec
jo
jno
aaa
push
pop
ja
inc
in
push
and
mov
ret
in
std
pop
ret
les
xchg
add
mov
test
sub
xchg
lock
mov
popa
fldenv
xchg
popa
sbb
data16
pop
xor
add
jge
pop
inc
rcll
dec
mov
outsb
jge
jge
cmp
bswap
decl
cs
fstpt
xchg
cmp
addr16
push
dec
iret
pop
push
jle
dec
es
pushf
fmuls
push
xchg
adc
push
loope
cmpb
div
adc
pop
movsb
std
sarb
iret
ret
inc
or
jo
call
pushl
shll
inc
ret
pop
ss
imul
push
dec
or
xchg
inc
jecxz
or
flds
pop
aaa
xor
mov
ret
or
push
dec
mov
xor
dec
clc
jne
lea
les
int3
ret
sahf
cwtl
adc
mov
jae
adc
pop
nop
push
mov
push
dec
sbb
lock
sbb
fldl
mov
pusha
pop
add
add
jb
cmpsl
stc
lahf
push
cli
pop
pop
xchg
xor
fldenv
hlt
jno
mov
out
xor
out
jno
test
sbb
mov
lock
int
push
ss
push
xchg
dec
and
data16
mov
cmp
aaa
test
inc
call
add
add
fs
lea
imul
or
in
mov
pop
rcrb
mov
jno
leave
cmp
stos
adc
xor
movsb
mov
pop
xor
lods
out
repnz
test
test
aam
cmpb
popl
add
dec
fcmove
mov
sub
inc
push
ror
call
add
push
and
nop
xchg
mov
subb
and
xchg
hlt
and
aam
scas
fadds
adc
xlat
sbb
fiadds
bound
pmuludq
adc
call
nop
clc
dec
inc
adc
rorl
mov
sub
movsl
jo
pop
mov
lock
sub
xor
mov
out
mov
testb
pop
dec
mov
jmp
add
lea
inc
pop
out
and
inc
out
lds
lea
ret
ja
lret
pop
cmp
incl
add
mov
ja
adc
bound
cmpsl
iret
std
sbb
dec
mov
push
jns
cli
sbb
sahf
mov
dec
pop
fnstcw
adc
addr16
inc
repz
mul
mov
iret
leave
cmp
sub
cmc
and
out
cmc
inc
mov
sub
std
jae
jb
int3
dec
daa
jecxz
dec
pop
paddb
xchg
test
pushf
shrb
jne
iret
xor
or
mov
pop
or
sub
cs
clc
push
fwait
out
and
cmc
cmpsb
shll
and
adc
xchg
jns
push
jmp
mov
outsl
mov
jecxz
mov
and
inc
shlb
push
fcoms
mov
inc
or
mov
inc
repnz
xor
push
insb
shl
pop
mov
jg
fildl
pop
jecxz
sub
push
push
xchg
scas
rclb
dec
or
popf
ja
loopne
ds
or
sbb
call
out
hlt
js
mov
sbb
int
stc
rdmsr
in
rcr
fdivl
into
je
mov
lock
sbb
or
aas
mov
leave
cmp
mov
loope
cli
aaa
cmp
sbb
jnp
cmovnp
mov
repz
sarl
sbb
dec
fimuls
mov
bsr
pop
in
xchg
xor
outsb
push
leave
pop
ss
and
jae
mov
dec
sbb
push
pushf
xchg
fisttpl
mov
sub
repz
sub
cwtl
aaa
jnp,pn
jl
pop
jnp
stc
dec
inc
fwait
cwtl
insl
push
subb
fldenv
imul
fwait
hlt
cmpsb
cli
ret
ret
test
ds
add
je
cmp
mov
inc
push
mov
push
xchg
pop
addr16
dec
or
cmp
sub
and
pop
or
pop
pop
rorl
xor
inc
jmp
aad
mov
jle
push
test
xlat
rolb
xor
xchg
mov
ds
mov
es
sub
ss
fdivp
mov
mov
inc
test
lcall
shrb
jle
rorl
sub
pop
adc
aad
addr16
adc
mov
jb
push
adc
mov
sahf
vpunpcklqdq
push
test
fnstenv
mov
data16
cmpsb
mov
ficoml
roll
push
inc
sub
cmp
sbb
loope
jb
nop
arpl
cli
pop
adc
ficompl
xor
mov
mov
push
out
sub
mov
mov
jmp
ret
dec
lods
dec
call
movsl
fisubrs
adc
fisttps
pushw
cmc
out
or
jp
jnp
sbb
jp
hlt
xchg
fimull
test
dec
icebp
jne
xchg
sar
lahf
andl
or
outsb
lcall
and
fwait
mov
pop
pop
sti
jecxz
dec
ret
xchg
clc
or
jno
mov
dec
insb
cwtl
es
xchg
les
int
pop
mov
jmp
dec
dec
lahf
dec
add
or
test
push
stos
adc
icebp
call
insb
das
adc
sti
or
lods
inc
add
mov
cli
adc
aam
cs
insb
or
and
pop
adc
xchg
pop
leave
shlb
je
dec
jecxz
or
int
cmp
jecxz
scas
rol
int
mov
xorl
jle
pop
ret
outsb
push
push
inc
adc
adc
cltd
hlt
and
ds
xorb
in
lods
adc
mov
jae
ficompl
mov
pusha
pop
imul
sar
mov
mov
mov
adc
push
fsub
lods
fs
pop
mov
out
iret
ss
xlat
inc
movsb
adc
ret
xlat
sub
aad
or
shrw
adc
loop
jecxz
mov
lock
xor
jno
pop
xchg
fstpt
in
mov
fadds
std
add
cli
psubb
pushf
or
sbb
push
mov
pop
inc
idiv
js
mov
into
jnp
inc
out
je
sub
mov
mov
orb
inc
fwait
pop
add
fimuls
pop
ret
decb
or
pop
dec
bound
mov
ljmp
jg
int3
test
das
test
and
xor
aad
inc
cltd
mov
push
jg
xchg
inc
adc
inc
std
bound
stos
cmp
jecxz
dec
adc
scas
push
push
test
sub
jno
pop
and
adc
dec
pop
lock
fdivr
repnz
pop
xor
push
nop
lret
jb
xchg
orb
cwtl
xor
ficoml
jne
mov
pop
std
jl
outsl
test
adc
add
gs
arpl
cmp
dec
push
jns
mov
sti
mov
sarl
je
and
fstpl
roll
daa
leave
sahf
pop
call
movsl
add
jbe
into
add
jg
inc
nop
mov
aad
jbe
push
dec
pushf
push
add
xor
sbbl
sub
int
std
dec
sbb
xchg
js
dec
or
or
lods
test
js
aam
sahf
movsl
clc
pusha
out
lret
in
jbe
add
fildl
mov
test
mov
loopne
test
inc
sub
inc
inc
push
lcall
mov
addr16
fld
repz
insb
mov
into
scas
les
lods
jge
nop
add
cmp
or
sarb
insl
incl
push
cld
into
jo
lahf
fnstenv
fldenv
jg
sbb
jp
test
lcall
and
mov
adc
mov
jae
sub
pusha
sahf
push
jo
pop
ss
lods
push
subl
or
sub
sbb
stc
out
mov
cltd
mov
ss
rcr
inc
js
dec
fsubr
fsubl
jo
add
dec
push
mov
sub
cltd
lret
pop
xchg
cmpsb
inc
or
xchg
pop
sub
cmp
or
ficoml
add
or
push
inc
ror
sbb
inc
lods
mov
xchg
sbb
rcr
push
popf
pop
aad
lock
cld
or
cmp
outsb
pop
movsl
mov
mov
or
push
in
or
dec
loope
add
movsl
call
push
pop
nop
xlat
into
mov
call
mov
cwtl
popa
in
pop
mov
dec
pop
icebp
and
fidivrs
add
sbb
pop
push
mov
fbstp
decl
lock
pop
jb
xlat
adc
pop
cltd
sbb
jmp
stos
imul
jno
cmp
arpl
dec
mov
jg
push
loop
jecxz
push
ret
fdivl
xor
and
push
xor
xorb
ljmp
pop
mov
lock
notb
push
aam
mov
jo
xor
sub
push
insb
imul
sbb
adc
aad
jnp
das
push
stos
pop
dec
lea
jne
or
adc
sbb
movsb
push
int
mov
fstpl
in
mov
ja
and
dec
mov
pop
lret
sbb
daa
mov
mov
inc
test
fiadds
pop
add
enter
jle
sti
hlt
hlt
pop
inc
cmc
cli
pop
sub
repz
fwait
das
push
jmp
ror
popf
repnz
in
push
shll
in
lahf
cmp
jmp
pop
imul
jmp
dec
jge
inc
jno
and
ss
imul
mov
aad
pop
push
sub
and
lahf
mulps
xchg
dec
lret
dec
xchg
das
mov
add
in
int
inc
cltd
pop
sbb
std
and
xor
cmp
add
mov
fisubs
xchg
xor
fcompl
sub
pop
fwait
fnstenv
fcoms
jecxz
jae
dec
push
lahf
add
xchg
cmpsl
mov
cmp
or
aas
push
adc
xchg
jge
mov
das
mov
pop
xchg
daa
mov
rcrb
xchg
std
sbb
mov
lock
mov
enter
or
jmp
sti
dec
adc
dec
stos
lcall
mov
inc
inc
cwtl
mov
mov
adc
mov
bound
roll
fldcw
mov
stos
rcrb
lods
cmc
dec
xchg
jae
cli
mov
mov
mov
mov
sbb
sbb
mov
inc
xor
out
add
scas
outsl
jno
fdivs
lea
and
cmp
bound
push
dec
mov
jecxz
stc
outsl
mov
mov
popa
shrl
and
mov
imul
out
cld
mov
mov
ud1
mov
xlat
and
sub
fdivl
fcmove
mov
dec
jnp
xchg
sub
inc
dec
stos
mov
mov
leave
and
push
popf
scas
add
or
xlat
icebp
inc
push
movl
adc
sub
ljmp
push
push
in
sub
out
mull
scas
std
inc
cmp
jg
stos
int
js
cltd
aad
dec
push
stos
ljmp
mov
pop
adc
sbb
sub
pushf
jmp
jmp
imul
div
pusha
nop
mov
std
sbb
xor
xor
cld
out
in
loope
insl
jns
mov
aam
js
enter
hlt
ret
stc
or
pop
in
imul
xor
inc
loop
in
push
jae
push
lea
movb
fcompl
mov
dec
mov
mov
xchg
test
xchg
jo
xchg
sbb
jg
stc
cmpl
mov
lods
push
mov
sbb
ljmp
jecxz
call
mov
test
addr16
int
sbb
scas
mov
add
inc
dec
or
inc
jmp
fs
mov
pop
adc
adc
adc
insl
aad
testl
test
js
scas
ljmp
ret
and
mov
jg
sub
ss
popa
call
nop
add
lcall
jne
cli
xchg
lret
xchg
xorl
cld
sub
mov
negl
fnstsw
push
popf
adc
dec
fnstcw
adc
adc
lea
loope
shlb
movsl
sbb
aam
aaa
xchg
adc
popf
push
idivl
and
mov
dec
mov
mov
mov
pop
dec
addr16
push
mov
into
add
flds
mov
pop
insb
icebp
mov
repnz
add
stos
sahf
mov
mov
xorl
in
lds
push
mov
imul
mov
imul
scas
push
lds
dec
xchg
fdivl
sbb
ficompl
scas
out
mov
sbb
js
and
fists
adc
pop
jmp
loop
and
icebp
pushf
xchg
cmpsl
fisubrs
xchg
push
faddl
enter
inc
jg
xor
cmp
shl
rcr
pusha
sbb
cli
mov
ret
jg
push
inc
dec
inc
xchg
out
xchg
ss
xor
ljmp
xchg
push
push
mov
lods
je
mov
mov
fsubrp
sbbl
bound
sub
popf
outsb
push
out
lcall
addr16
adcb
pushf
dec
js
inc
xor
pop
cmp
sahf
sub
subb
jns
into
shll
aad
sbb
or
push
add
imul
shr
mov
pop
or
repnz
xchg
adcb
ja
imul
dec
mov
je
loope
incb
and
rorb
add
push
push
xor
jns
mov
cli
rcll
and
shlb
mulb
aas
mov
in
int
pop
dec
xor
gs
in
jo
xor
push
pop
out
mov
mov
and
and
bound
cld
aaa
and
shlb
pop
loopne
cmp
into
push
sbb
adc
jno
xor
push
sti
int
or
mov
lods
loopne
popa
adc
setne
pop
adc
arpl
int3
inc
dec
pop
decb
cmp
mov
adc
cmpsl
cmp
jp
ljmp
xchg
jecxz
insl
jg
in
sbb
sti
push
je
lds
push
stc
popf
adc
sahf
cmp
stc
push
aaa
mov
test
les
out
shll
sbb
test
int3
cli
aaa
cmp
inc
add
rcll
stos
push
imul
mov
insl
insb
mov
push
movsb
xor
test
xor
pusha
mov
pop
mov
shlb
outsb
xchg
or
mov
lds
out
inc
pop
jnp
and
mov
lock
lods
roll
mov
hlt
enter
stos
pop
push
insb
jle
or
mov
mov
mov
fstl
pop
int3
dec
lods
mov
push
pop
cs
push
inc
jmp
push
into
and
orl
xor
aad
sbb
push
dec
inc
mov
dec
iret
xchg
sti
inc
or
inc
mov
mov
push
outsl
out
add
jl
sahf
in
test
jmp
clc
fisubs
addr16
jmp
cmpsl
xchg
mov
idivb
loop
pop
clc
jbe
adc
adc
xor
or
out
ret
lcall
ror
bound
inc
iret
mov
cli
mov
es
push
jns
mov
stos
ja
mov
adc
xchg
sar
xor
cmc
ret
repnz
imul
stos
sub
lret
push
cmp
out
call
test
roll
rcr
pop
add
inc
lea
push
pop
adc
test
inc
jge
lock
lret
movsl
and
sbb
xchg
xchg
cltd
ljmp
pop
push
call
mov
dec
mov
push
frstor
js
shll
cmp
add
inc
lea
mov
cli
shlb
orb
stos
insb
mov
dec
in
loop
mov
aad
stc
lods
mov
bound
outsl
ljmp
cmp
jmp
pop
into
sbbb
pop
cli
and
sub
pop
adc
fimull
mov
test
outsl
xchg
adc
js
clc
cmp
xchg
outsl
sub
test
pop
outsl
fiaddl
sub
xchg
pop
ds
repz
popf
jecxz
das
push
pop
cmpb
out
and
push
dec
xorl
addl
popw
mov
dec
mov
or
fmul
xorb
imul
stos
jg
fstpt
and
andl
push
xchg
mov
mov
pop
sbb
loopne
xor
add
sub
mov
push
notb
cmp
push
movsl
or
pop
in
xor
sbb
out
shlb
testb
das
push
add
cmp
and
int
mov
cmpsl
ret
or
stos
adc
hlt
sti
lea
fbld
test
jbe
mov
jge
and
aas
and
lods
mov
clc
les
jmp
add
imul
mov
adc
cmp
and
mov
ret
adc
sbb
mov
jge
js
mov
nop
scas
mov
adc
add
mov
cld
push
dec
lods
fistl
cmp
xchg
push
loopne
or
repz
jl
imulb
cmpsl
jne
mov
data16
popa
pusha
mov
movsb
jae
jnp
push
hlt
lods
sbb
jmp
mov
xor
sub
lahf
adc
adc
call
ss
mov
jno
jbe
stos
out
xor
xorl
push
repz
mov
js
push
out
pop
sti
xor
pop
adc
aas
push
gs
and
cmp
mov
push
cld
xchg
outsl
hlt
clc
pop
sbb
inc
and
sub
dec
sub
sub
lods
std
out
cld
sub
jle
repnz
aas
jb
mov
mov
mov
mov
mov
int3
imul
mov
pop
outsl
cltd
out
pusha
dec
popa
mov
mov
inc
jle
sub
les
addr16
insb
pop
out
dec
out
movsl
push
lea
sti
push
das
mov
aas
into
mov
cwtl
repnz
sbb
movsl
inc
dec
push
or
sbb
cmp
test
sbb
and
fcmovne
enter
cmc
cmp
push
xlat
sarb
movsl
inc
mov
sub
cwtl
xchg
add
adc
sbb
enter
repz
mov
jp
cmp
pop
dec
push
call
sub
lods
mov
mov
push
sbb
sub
pop
sub
aaa
movsl
fld
popf
nop
out
or
loop
ja
ret
jo
cltd
push
cmpsb
clc
pop
xor
adcl
int3
aam
jb
add
mov
out
add
sub
sbb
pop
pop
xor
call
xor
jne
test
xchg
lret
inc
xchg
jge
aaa
lock
inc
cli
pop
rcr
pop
lea
dec
dec
arpl
push
push
mov
inc
pop
shrl
mov
push
push
into
mov
fstpl
pop
mov
lret
adc
nop
shlb
mov
js
inc
sub
and
aad
push
or
inc
push
pop
aaa
inc
push
jb
push
jle
test
pushf
push
xchg
xor
adc
cmpsl
xlat
sbb
loopne
add
jp
xlat
int3
mov
dec
push
pop
mov
sub
add
scas
rcll
imul
jp
mov
push
fstl
or
lods
mov
dec
in
aaa
jg
mov
sub
dec
in
cmp
out
jae
cmpsb
fucomi
adc
jae
gs
pop
and
jns
mov
icebp
sbb
aam
adc
ffree
fcoml
xor
fisubs
arpl
xor
dec
into
faddl
mov
adc
into
jb
mov
or
arpl
push
movsl
push
sbb
repz
mov
mov
rcrl
sub
add
mov
sahf
push
add
arpl
pop
insl
mov
sbb
je
sub
insl
iret
ds
xor
stc
ficoms
shll
jb
into
xor
cs
mov
je
mov
sbb
leave
jle
out
int3
cmpsl
data16
cmc
daa
push
bound
fmuls
dec
mov
jns
mov
pop
popf
mov
stos
xchg
test
and
rol
outsl
imul
cltd
and
pop
mov
out
imul
jo
repnz
lcall
and
mov
sbb
std
lret
jecxz
cmpsl
or
xchg
das
xchg
js
sub
shll
loop
inc
movsb
push
scas
lahf
cmp
push
sbb
xlat
xor
inc
adc
aam
lock
add
cmc
jb
pushf
or
inc
movsl
iret
push
enter
jb
pusha
icebp
mov
or
out
lret
xor
fwait
sub
cmp
add
dec
les
push
add
popf
push
add
imul
stc
mov
jge
fisubrl
mov
filds
notb
cltd
stc
push
pavgw
ja
push
cmpl
cltd
stos
pop
es
cmp
out
sub
jmp
cmp
movsb
sbb
sbb
ficoml
push
testb
inc
push
js
aaa
test
popa
jb
in
aas
mov
cmpsb
push
mov
test
add
jns
mov
xor
mov
std
sub
adc
shrl
xlat
or
mov
mov
xchg
fwait
lods
add
mov
push
pop
mov
pop
push
lret
push
xor
cs
leave
cmp
jno
dec
stos
aad
dec
pop
int
jnp
xchg
add
xchg
jae
jp
push
in
push
mov
shlb
movsb
mov
lcall
or
dec
push
stc
outsl
sub
xchg
arpl
lret
ror
call
push
dec
sub
ljmp
call
pop
cli
ret
test
mov
in
mov
adc
popa
mov
test
pop
inc
mov
cmp
ljmp
dec
pop
outsb
inc
cmp
and
pop
mov
sbb
mov
fstpl
cmp
imul
call
xlat
clc
inc
sahf
adc
push
popa
pusha
xor
outsl
inc
cmp
imul
pop
ret
stos
jl
adc
je
aam
cmp
jl
lods
fld
cltd
jle
push
xchg
push
adc
dec
test
mov
lock
ret
xchg
xor
into
lret
pop
dec
dec
jmp
stos
mov
sub
pop
addr16
stos
pop
sbb
pop
jp
scas
inc
mov
mov
push
inc
lret
xchg
ret
ss
les
ljmp
sub
dec
xchg
outsb
pslld
jb
cltd
or
bound
int3
pop
scas
aam
stos
mov
push
mov
arpl
dec
lods
aad
lret
in
hlt
pop
rol
sub
mov
inc
jmp
lcall
push
push
mov
fadds
dec
das
out
push
lfs
mov
lcall
or
xchg
pop
or
ljmp
sub
mov
fwait
sbb
pop
or
adcl
jecxz
cmp
fwait
and
jo
in
lret
ficompl
dec
pop
push
loope
mov
addr16
dec
pop
mov
inc
or
adc
push
test
clc
stc
push
pop
out
xor
sarb
test
lods
sub
test
pop
andb
into
outsl
lcall
xchg
sbb
insb
lea
jno,pt
mov
movups
adc
out
outsb
and
ss
loope
mov
ljmp
into
fwait
adc
ja
rolb
or
push
add
inc
mov
push
pop
xor
xor
add
jl
or
and
sub
pop
cmp
mov
sub
and
into
dec
mov
jge
lret
idivl
mov
dec
add
cli
mov
fnstcw
fucomp
mov
repnz
and
stc
cmpsb
lock
pop
sahf
mov
loop
out
pushl
inc
mov
adc
adc
int3
inc
aam
iret
aad
jns
fidivs
pop
fst
inc
cs
icebp
push
jge
div
and
jno
testb
shll
push
int3
push
icebp
in
dec
and
fnsave
jnp
push
lret
ljmp
inc
push
jge
adc
add
jge
pop
and
pop
or
sbb
push
inc
dec
jg
jae
sub
jle
fmulp
vandnpd
xchg
dec
mov
out
or
repnz
test
push
dec
mov
ffree
scas
cmp
ja
pop
fistl
sub
jb
mov
test
mov
sub
int
cmpsb
push
add
ret
adc
fsubrs
call
leave
cmp
in
pop
xor
sbb
pop
fadd
sahf
lock
sbb
and
mov
push
icebp
adc
cmp
aad
lcall
enter
jecxz
mov
repz
fcomip
pop
dec
dec
dec
push
movl
fsubs
xchg
outsl
fcmovnu
rcrl
cmc
xor
cmp
popa
jmp
add
add
stos
xchg
xor
jg
mov
fcomip
shlb
out
sbb
into
out
mov
lcall
mov
lods
cmp
sbb
movsl
js
fimuls
mov
inc
sbb
roll
outsl
mov
stc
pop
ljmp
les
mov
aad
xchg
test
and
ljmp
xchg
adc
divb
mov
cwtl
lret
push
rcrl
xchg
push
pushf
jns
in
pop
repnz
inc
push
push
lods
xor
outsl
pushf
inc
jmpw
rorb
repnz
call
or
sub
lret
ret
cltd
mov
push
in
loope
add
loope
mov
dec
mull
fwait
leave
lock
inc
jmp
mov
pop
xchg
cwtl
lods
fcoml
xchg
pop
cmp
aad
push
rclb
rcr
cmp
setae
and
lahf
dec
dec
xor
pop
jp
orl
mov
inc
sub
in
cmp
in
and
sbb
pop
ret
aaa
fisttpll
xor
jge
out
nop
jb
inc
pop
lods
mov
cmpsl
mov
adc
sub
push
int
dec
hlt
sub
lcall
dec
lock
dec
cmpsl
ja
pop
pushf
push
insl
int3
test
jae
pushf
mov
mov
mov
jbe
mov
push
loop
push
mov
test
add
das
push
ljmp
pop
aad
pop
into
xor
cld
xchg
jnp
je
shrb
push
decl
orl
inc
dec
mov
fcmovnu
test
inc
sarl
data16
mov
arpl
mov
je
dec
fs
ja
lahf
insl
stos
cmp
or
push
add
inc
aas
sbb
or
pop
sub
lods
sub
adc
int3
xchg
rcll
push
sub
cmp
mov
negb
jb
inc
or
jae
jne
or
xor
out
popa
mov
outsb
mov
cmpsb
int3
lds
clc
nop
push
aas
out
and
pop
xchg
cmc
xchg
mov
ss
push
jbe,pt
cs
jl
daa
imul
insb
xchg
sbb
push
pop
test
sub
pop
adc
andl
mov
xor
test
pop
jne
or
xor
ror
or
ffree
aam
add
jne
mov
xchg
fwait
loope
and
push
out
jl
les
cwtl
fcoms
jae
call
gs
sub
and
test
inc
popf
or
inc
jae
into
push
aaa
int3
inc
bound
popa
mov
jb
in
fstl
divl
and
call
pop
jnp
mov
jno
testl
leave
popf
jg
push
mov
dec
adc
inc
test
dec
push
pop
and
and
mov
bnd
rorl
add
jp
arpl
cmp
mov
jo
fdivs
test
fsubr
fnstenv
adc
shll
mov
sub
dec
jmp
repz
fwait
pop
in
sti
lret
cmc
and
roll
sub
ds
adc
pop
pop
mov
leave
fwait
insl
ds
std
xor
fidivrs
xor
xor
adc
fnstcw
dec
adc
fxam
daa
in
fisttpll
shrl
xchg
xchg
out
sub
add
add
jbe
aad
xor
aas
push
shlb
das
xor
aas
orb
icebp
repz
dec
stc
lods
addr16
cmc
stc
imul
push
push
jl
inc
adc
setae
mov
add
mov
pop
or
push
stc
fidivs
test
sub
sub
in
adc
cmp
sbb
daa
push
enter
mov
mov
xchg
stos
lock
add
fnstcw
add
std
insb
add
or
inc
cs
cltd
int3
and
pop
mov
ljmp
dec
lea
or
and
nop
jle
jecxz
fisttpll
aam
jns
pop
js
fidivl
and
or
adc
mov
mov
xor
mov
pop
fmul
mov
dec
mov
leave
push
push
pop
jp
sbb
inc
out
xor
repnz
xor
or
ds
push
movl
sbb
out
lds
lock
mov
cs
xor
xor
subb
std
ds
testb
je
sbb
and
pop
push
sub
or
dec
adc
or
jo
sbb
inc
add
in
orl
fwait
nop
cmp
in
fwait
cmp
iret
adc
mov
mov
sub
cmc
lret
push
ja
hlt
mov
repz
jecxz
and
dec
push
pop
jns
flds
loopne
pusha
pop
push
clc
jmp
rolb
iret
das
lahf
jmp
mov
imul
adc
mov
push
mov
and
rcrb
add
lock
adc
repz
sub
xchg
pop
sbb
shlb
call
xor
xor
ret
call
sub
js
mov
call
stc
mov
scas
dec
out
mov
xor
loope
inc
push
adcb
outsl
dec
mov
loope
mov
sbb
ror
inc
push
adc
lahf
aaa
and
aas
cpuid
xchg
fsts
inc
lret
inc
into
js
pop
sub
cmp
dec
cmp
mov
leave
mov
mov
stos
mov
jecxz
scas
mov
mov
fidivrs
pusha
mov
fwait
addb
vpshufhw
out
push
ret
cwtl
pusha
aam
xchg
mov
invlpg
mov
js
mov
adc
ja
mov
fs
xor
lock
lds
scas
fs
icebp
push
loopne
xchg
stos
test
cmp
cmp
stc
dec
out
repnz
roll
ljmp
pop
pop
and
push
push
push
fists
or
popf
pop
cli
loopne
xchg
lret
loopne
adc
int
push
xchg
js
xor
cmp
dec
cld
loopne
mov
sub
mov
mov
loop
outsb
pushf
out
test
ja
out
adc
and
lcall
aas
test
dec
mov
outsl
out
xchg
repz
ljmp
inc
rcrl
adc
xor
ret
xchg
sbb
insb
cmp
cs
add
sub
dec
in
or
lcall
xor
add
sub
mov
sbb
fisttpl
std
sahf
jmp
mov
pop
xchg
mov
mov
sub
orb
fimuls
dec
mov
daa
jp
rcrb
mov
sbb
jb
push
mov
aam
sbb
or
xor
jmp
jne
mov
pushf
xchg
pop
fsubl
aaa
mov
pop
xchg
cmp
push
inc
nop
jns
inc
cmpsl
lret
sub
and
mov
jo
mov
aas
insl
jle
mov
mov
mov
pop
mov
mov
outsb
hlt
stc
inc
test
je
int
pop
mov
int
pusha
cltd
ss
dec
push
ret
inc
lret
cmp
or
dec
stc
mov
add
gs
shlb
std
add
push
xchg
xchg
lds
mov
mov
lcall
xchg
std
push
aas
lret
and
inc
jmp
pop
pop
inc
add
jle,pt
rcll
jg
xchg
mov
or
sbb
sahf
mov
nop
btr
xor
out
dec
das
mov
cltd
xchg
repz
pop
mov
cmpsl
sbb
dec
or
jno
adc
mov
and
mov
push
aad
or
add
inc
in
mov
leave
inc
dec
push
add
stc
inc
push
ds
dec
mov
inc
xchg
mov
cli
js
cltd
mov
cs
mov
mov
insb
jecxz
sbb
shrl
jecxz
add
sbb
scas
cli
mov
scas
fimuls
xchg
lahf
pop
int3
in
jae
push
mov
aam
jb
lret
in
loope
stos
icebp
xchg
xor
dec
lods
in
ja
jge
movsb
ds
mov
inc
xor
adc
adc
lcall
mov
push
cmc
dec
and
aad
lret
pop
in
xchg
in
pop
xchg
mov
and
mov
iret
dec
xchg
dec
dec
nop
push
adc
loop
test
or
inc
lahf
daa
sar
in
push
fistl
flds
pop
pop
imul
inc
and
pusha
pop
add
cmp
enter
dec
sub
push
jno
sub
cmp
in
loope
adc
pop
xchg
jge
xchg
aas
jo
aas
xchg
add
adc
jno
and
andb
sub
test
xchg
dec
call
add
jle
ds
push
negl
jo
pushf
xor
clc
popa
push
lret
lock
push
mov
xchg
xchg
dec
and
mov
jnp
or
mov
jbe
push
lret
stos
loop
xchg
inc
repnz
test
sub
icebp
sbb
orl
test
std
pop
xor
insl
xchg
adc
mov
adc
rorb
cmp
iret
sbb
inc
adc
mov
mov
adc
lahf
ror
sub
xchg
mov
icebp
sbb
sub
cmp
jp
cmp
je
push
push
xor
xchg
inc
lahf
das
popa
push
add
cli
das
push
sbb
pop
xor
pop
push
push
mov
fsubrl
xor
inc
std
shlb
inc
dec
mov
add
mov
and
imul
decb
fistl
add
sub
mov
mov
mov
shl
mov
dec
mov
adc
imul
and
and
in
std
pop
or
bound
xor
cmp
add
fdivs
insl
sarb
inc
rcr
pop
ds
push
mov
sub
leave
sbb
scas
or
dec
mov
fdiv
pusha
xchg
cmp
cmp
aas
sbb
mov
out
loope
loopne
mov
xchg
cmp
ljmp
dec
fidivrs
leave
std
jb
push
sub
jecxz
mov
sahf
cwtl
outsb
jmp
in
push
fistpl
out
push
pushf
inc
sbb
out
rcll
stos
fldl2t
sbb
insb
and
inc
add
or
mov
stos
sub
cmp
cmp
rolb
or
xor
push
jle
in
shr
dec
push
mov
js
adc
mov
inc
mov
dec
jno
jb
dec
addr16
call
dec
popa
out
jno
and
jp
xchg
dec
xlat
and
aaa
notb
aas
xchg
jnp
shl
xadd
sarl
ss
inc
lret
std
ret
out
test
bnd
mov
mov
ret
shl
lahf
movl
cltd
push
mov
shl
fidivrs
std
repnz
or
push
out
mov
dec
das
fdivrs
imul
inc
fadd
fcmovnbe
loopne
popa
cmp
mov
loopne
sub
mov
das
imul
mov
ret
sbb
or
jns
and
push
pop
push
into
mov
push
dec
cmp
sbb
in
jb
sbb
dec
cmp
hlt
ljmp
cmpsb
gs
mov
bound
stc
stc
xchg
notl
cld
enter
mov
xchg
lahf
incb
xlat
push
mov
sbb
cmp
lods
dec
stos
xlat
and
jecxz
push
cmp
mov
adcb
adc
repnz
cmp
jmp
call
mov
add
pop
sbb
and
bound
imul
nop
pop
repnz
sar
mov
cmc
xchg
pop
rcrb
outsl
push
outsl
inc
divb
lahf
dec
inc
stos
xchg
insb
arpl
jg
push
in
arpl
pop
lods
test
adc
fisttpll
mov
pop
sub
adc
mov
jnp
pop
daa
popa
cmp
fbstp
pushf
mov
arpl
outsb
inc
push
jns
pushf
pop
jg
hlt
fs
add
scas
ret
push
xchg
repnz
movsl
xor
lret
and
les
int
cmp
cbtw
mov
xor
test
pop
aam
out
lea
pop
sub
test
inc
adc
mov
aad
adc
rcr
movsl
fnstsw
call
mov
test
sub
rcrl
and
sbb
outsb
insl
inc
imul
jmp
jo
outsl
shrb
fwait
sbb
pop
imul
push
filds
cmp
lock
fimull
jb
lcall
sub
testb
push
or
or
xchg
adc
push
adc
push
inc
inc
fs
cs
stos
or
mov
or
insb
test
out
jae
and
arpl
mov
es
mov
sti
inc
pop
aad
cmp
mov
inc
cmp
fs
push
std
fnstcw
adc
movsl
lock
ljmp
dec
jmp
sbb
leave
in
jg
aad
xchg
jl
pop
lock
jne
xchg
pop
jbe
jmp
mov
adc
cltd
sub
dec
adc
es
jp
out
dec
xchg
pop
es
int
lahf
nop
ja
jge
cld
push
and
push
push
xchg
pop
lods
adc
test
cmp
jnp
js
pop
push
lds
pop
icebp
rcrl
inc
sahf
insb
aad
mov
sbbb
incl
outsl
pop
iret
decl
pop
cmp
xchg
mov
stos
push
inc
mov
movsb
or
jl
pop
mov
jb
enter
mov
dec
dec
fwait
gs
mov
arpl
fdivl
dec
xor
test
pop
stos
lcall
xor
xor
push
push
inc
xor
adc
mov
pop
sbb
pop
xor
xchg
aad
adc
mov
jae
in
in
rorb
test
push
sarb
outsl
mov
xlat
cld
gs
jp
shlb
push
add
gs
cltd
or
xor
and
mov
push
jno
sahf
mov
xor
mov
xor
daa
stos
sbb
add
or
push
adc
mov
cli
mov
pop
in
enter
adc
enter
sub
sub
in
cmp
sarl
in
cmp
cmpsl
or
fdivs
scas
shll
dec
mov
pop
popa
cld
mov
aas
sbb
test
xor
mov
shlb
inc
jmp
jle
mov
cmp
sub
mov
aaa
sbb
vmread
sahf
mov
outsb
imul
call
sbb
sbb
pop
and
popf
cmp
mov
jge
testl
xchg
les
xor
or
mov
jge
adc
sub
dec
imul
inc
push
or
xchg
aaa
rolb
ret
jp
in
aad
mov
mov
push
add
stc
dec
popf
pop
pushf
ss
stos
adc
lahf
add
dec
loopne
fisubs
mov
mov
dec
cli
push
outsb
outsb
sub
xchg
sbb
push
dec
jle
adc
out
inc
sti
push
add
loope
pop
aas
cmp
aaa
lret
jg
cmpsb
xchg
nop
les
xchg
cmp
or
rcll
in
sub
insb
loope
xorb
inc
frstor
inc
cwtl
inc
inc
lock
sbb
fmuls
push
cmpsb
popf
pop
cmc
sarl
enter
push
mov
adc
fwait
lods
ss
xchg
push
xchg
push
xchg
notl
cvtps2pi
jns
mull
xorl
xor
xlat
mov
xchg
mov
mov
andb
pop
cmp
repz
aam
add
lret
inc
flds
ret
xchg
push
and
loope
push
mov
push
fbld
sbb
adc
gs
cmpsl
test
dec
xchg
in
inc
imul
push
sub
and
dec
xchg
xchg
or
cmc
outsl
lods
call
inc
xchg
jns
mov
loop
rcll
lret
mov
nop
cmp
mov
into
ss
bound
mov
pop
arpl
int3
mov
in
dec
mov
xchg
xchg
mov
test
adc
jmp
mov
mov
lret
jle
arpl
fldenv
mov
and
std
movsl
adc
xor
pop
jmp
lods
mov
imul
int
call
cmp
divl
cwtl
push
pop
pop
test
stos
in
dec
sbb
sarb
aam
pop
push
cmp
inc
test
mov
scas
push
xchg
and
xchg
mov
mov
loope
in
pop
cmp
xorl
je
sub
sbb
jp
pushf
lret
push
adc
mov
iret
popa
aaa
sahf
dec
fwait
enter
or
aaa
out
mov
daa
xchg
xchg
push
sbb
cli
mov
push
filds
std
mov
mov
and
nop
cs
or
outsb
mov
add
push
push
loopne
arpl
and
in
mov
push
mov
das
pop
add
daa
rclb
movsb
imul
mov
cs
mov
xor
push
mov
push
jae
cmc
rcr
xchg
cmp
mov
pop
in
push
leave
scas
aaa
push
push
jecxz
add
mov
mov
subl
clc
das
sbb
lret
hlt
xor
int3
nop
sahf
xchg
fldenv
les
xchg
cmp
xchg
xchg
lcall
dec
mov
lods
into
mov
fidivrs
push
push
xchg
aaa
jmp
push
icebp
cmp
cmpsb
loope
aas
pop
insl
pop
fwait
inc
ret
or
fisttps
ret
movsb
shrb
xor
jae
test
mov
cmpl
add
cld
pop
cmc
imul
fyl2xp1
mov
xchg
lret
clc
xchg
sbb
lret
xchg
mov
in
mov
rorl
or
fcoms
test
xchg
rcrb
sti
xchg
cmpb
arpl
lret
add
add
xchg
cmp
xchg
xor
popa
xchg
push
leave
cltd
or
imul
inc
test
xchg
outsl
pop
sbb
mov
lret
icebp
pop
js
mov
dec
test
mov
xor
hlt
xor
mov
and
adc
jae
adc
imul
push
loope
xchg
andb
pusha
rorl
push
int
mov
push
mov
nop
pop
sahf
sbb
mov
aad
in
nop
inc
dec
sahf
jg
loope
pop
mov
xor
inc
sub
frstor
int
scas
jge
xlat
in
aas
lcall
fs
ljmp
mov
call
fstpl
jb
mov
sub
stos
xor
stc
adc
aad
ficomps
xor
inc
and
xchg
sbbl
clc
cmp
idivl
push
cmp
inc
sti
sbb
test
add
mov
push
or
sub
and
sub
dec
pop
pcmpeqb
repz
fwait
pop
pop
lahf
jmp
bound
loopne
push
hlt
out
cmp
sbbb
arpl
sub
enter
xchg
mov
xlat
pop
insb
pop
jge
and
sarl
jo
fs
aam
adcb
std
pop
sbb
mov
je
bound
dec
pop
cmp
and
lcall
xchg
imul
jae
mov
sbb
xchg
scas
xchg
cltd
arpl
loop
sbb
lods
mov
cwtl
mov
sub
mov
and
ret
pop
pusha
flds
jmp
inc
arpl
ds
pop
xor
jmp
jbe
call
jge
lods
fsubrs
dec
push
push
adc
out
push
dec
out
stc
cmc
push
insb
in
add
sub
and
nop
cmpsb
clc
or
xchg
push
sub
pop
not
inc
or
in
jns
movsl
cmp
movsb
and
test
dec
mov
sub
and
dec
aad
xchg
or
mov
fs
sub
out
adc
sub
mov
mov
sbb
js
or
cmp
inc
sahf
lcall
clc
aaa
test
aas
movsb
bound
pop
lret
inc
rcll
popa
jne
dec
movsb
call
shr
out
daa
pusha
test
xor
jle
test
into
mov
lods
mov
test
mov
pusha
repnz
jnp
pop
and
aaa
adc
aam
cmc
adc
jl
cld
shll
std
icebp
shrb
stos
test
or
cmc
fiadds
xchg
or
hlt
ret
mov
shll
dec
mov
pop
cs
or
adcb
push
in
sub
loop
xorl
cmp
pusha
dec
mov
cwtl
pop
test
mov
dec
sti
sbb
js
xchg
les
add
nop
iret
mov
cmpsl
repnz
push
jg
jo
outsl
data16
out
rol
fnstcw
cmp
cli
sbb
cmp
mov
mov
jp
rol
adc
push
add
out
adc
data16
or
dec
outsb
out
stos
jp
push
ja
add
mov
jmp
cmp
mov
loope
xor
dec
sahf
loope
les
push
movsb
or
or
insl
fsubrs
int
sbb
nop
mov
jno
sarl
pop
mov
aad
je
in
rcll
add
dec
mov
loope
test
repnz
dec
test
leave
daa
mov
push
loop
enter
loopne
scas
incl
cld
lcall
xchg
jb
push
cmp
and
imul
cmp
dec
push
rcrb
and
adc
or
pop
mov
int3
or
sbb
push
aam
mov
sti
movsl
pop
aas
test
mov
mov
push
cmp
cmp
test
mov
arpl
lods
or
cmp
add
and
popf
aas
pop
daa
or
fnstcw
pop
rcr
mov
dec
mov
call
or
imul
ja
mov
loope
jmp
mov
cli
out
in
jmp
pop
div
sbb
dec
inc
or
popf
mov
push
stos
dec
xchg
arpl
push
sti
sti
dec
sbb
pushf
lret
xlat
pop
inc
fwait
mov
mov
cmp
push
mov
jo
pusha
lahf
lahf
repnz
adc
and
ja
test
in
add
into
fbld
xor
js
xchg
andb
push
int3
or
cli
int
cmp
into
cmpsl
aas
sub
loopne
sub
push
pushf
js
std
aaa
xchg
int
mov
adc
push
jo
jo
xchg
xor
xor
jns
movsb
lods
sbb
jb
pop
fnstcw
enter
or
insb
dec
xchg
push
leave
pop
mulb
adc
in
fdivs
je
es
aas
adc
pop
dec
fwait
lcall
insb
mov
aaa
lahf
int
aam
xchg
xchg
xchg
mov
int3
clc
xchg
and
pusha
xor
ds
pop
or
ss
jnp
addr16
sub
push
sub
push
and
xchg
arpl
mov
mov
aaa
cs
xor
notl
sbbb
test
pop
fimuls
jo
or
cwtl
push
adc
pop
jp
mov
pop
testl
lods
loop
imul
inc
sbb
xchg
sbb
inc
sub
push
xchg
fs
cmpsl
add
lods
enter
sub
bnd
pushf
arpl
insl
sbb
sub
cmp
pop
outsb
pop
jnp
add
addr16
jne
daa
fbld
loope
or
push
pop
or
xlat
inc
mov
cmp
imul
dec
les
fbld
push
les
mov
pop
pop
jns
sti
pushf
adc
adc
jb
mov
xor
xchg
loopne
adc
mov
lods
push
fs
dec
setns
push
test
das
ljmp
pusha
gs
jo
and
xor
mov
adc
and
ret
mov
or
in
inc
movsb
pushf
xchg
push
repz
push
shlb
imul
call
bswap
mov
rolb
push
dec
mov
insl
sub
jp
cmc
insl
sbb
dec
mov
aaa
pop
and
lret
cli
jno,pn
daa
inc
stos
aaa
mov
mov
adc
xlat
adc
movsb
dec
cmp
adc
xchg
movsb
paddq
add
pushf
outsb
sub
sub
sbb
stos
les
jne
je
pushf
repnz
aam
pop
xor
jg
stos
mov
int
add
in
and
loop
negl
sub
jno
les
lods
pop
mov
test
dec
lret
ljmp
dec
xor
notb
lret
lret
push
addr16
bswap
ljmp
test
add
push
scas
dec
push
lock
dec
cmp
cli
mov
mov
mov
add
aaa
jne
push
jbe
adc
adc
add
push
xlat
addr16
push
addr16
js
pop
add
add
add
cmp
sub
adc
mov
cmc
mov
mov
lods
cltd
jns
inc
xchg
mov
xchg
dec
out
test
push
and
test
subb
pop
cmp
std
pop
imul
aam
int3
mov
add
or
mov
inc
out
or
in
nop
ss
xor
iret
pop
fsubrs
std
cwtl
jl
and
mov
ret
ret
jnp
imul
dec
movsl
push
pop
dec
adc
insl
repz
imul
aas
mov
sbb
lea
out
rorl
pop
test
enter
call
movsb
fcmovne
imul
xlat
cwtl
jbe
std
mov
fidivl
clc
divb
gs
repz
ss
jno
repnz
out
faddl
pop
lret
sub
xchg
hlt
in
xor
lods
test
int3
mov
ds
icebp
popa
mov
or
jmp
or
sub
jp
mov
movsl
testl
and
lea
fisttpll
xchg
repz
frstor
sbbb
aas
push
add
mov
mov
cmpb
add
jnp
repnz
stos
dec
sbb
inc
insl
xchg
push
or
fisubl
adc
mov
mov
sub
jo
dec
stos
lret
xchg
inc
pop
lcall
lods
scas
mov
push
fsts
mov
add
lcall
jnp
xlat
adc
rorl
mov
jecxz
add
sbb
in
push
mov
push
jb
xchg
mov
or
and
mov
cmp
jno
mull
push
cld
fs
mov
jbe
inc
mov
push
lcall
mov
loopne
test
cmpsl
cmpsb
mov
sbb
rcl
xchg
adc
outsl
xor
pop
fucom
in
add
nopl
addr16
jb
jns
test
and
cli
or
mov
add
cmp
add
mov
bound
inc
es
jo
cmpsl
fwait
pop
push
in
jns
xlat
adc
std
loop
jbe
dec
js
andl
movsb
xor
movsl
incl
jb
mov
movsl
negl
xchg
testb
leave
lret
sbb
dec
icebp
sub
add
push
push
sbb
leave
push
mov
movsl
into
dec
mov
pop
loope
mov
or
incl
xlat
lcall
jne
add
scas
pop
mov
enter
insb
sub
add
adc
mov
pop
xchg
stc
shl
adc
sub
test
xchg
lods
or
xchg
xor
out
cmp
jge
mov
push
adc
or
mov
mov
test
ljmp
mov
pop
bound
data16
sub
fwait
shl
in
push
push
imul
in
mov
loopne
addb
ret
aad
dec
imul
in
jno
movsb
imul
pop
and
imull
lods
repnz
sub
jmp
adc
sbb
repz
das
lods
out
xchg
push
push
pop
ret
pushf
stos
mov
outsb
iret
cltd
fisubrl
mov
jge
jbe
jmp
mov
push
or
lods
ffree
mov
push
fists
repnz
cwtl
mov
mov
mov
cli
pop
sub
jae
xor
mov
out
mov
cmp
or
and
mov
add
mov
inc
dec
push
mov
sbb
xchg
xchg
out
sub
sub
jg
mov
inc
pop
rcll
or
xor
sub
jmp
rorb
and
jns
mov
mov
mov
mov
and
sbb
or
xchg
lret
inc
inc
or
test
xchg
mov
pusha
sub
cltd
fwait
jle
pusha
cwtl
or
mov
pop
out
addl
xchg
lods
insb
addr16
lret
and
and
clc
pusha
push
add
jo
pop
xor
mov
sbb
pop
jp
cmp
nopl
xor
inc
arpl
pop
adc
fcompp
pusha
pop
pop
push
inc
jo
ja
out
and
xlat
or
cmp
pop
movsb
sbb
hlt
push
mov
lret
mov
inc
pusha
xchg
pop
call
pop
inc
repnz
out
stos
xor
enter
add
dec
fisubs
push
xor
fsubl
pop
sbb
mov
push
iret
fcoms
in
sahf
stos
and
jmp
and
xor
lods
movsb
push
inc
pushf
pop
popf
push
or
dec
adc
in
jns
out
in
pop
mov
pop
insb
push
and
push
or
fadd
sub
sbb
fistpll
out
into
mov
in
popa
inc
das
outsb
in
mov
push
repz
fidivrl
or
push
dec
ret
cmp
pop
notb
hlt
inc
xlat
scas
insb
mov
ja
scas
mov
fdivs
adc
and
pop
pop
sub
adc
inc
sub
int
dec
push
leave
fs
dec
movsb
addr16
xchg
in
int3
cli
stos
popa
dec
push
mov
jo
es
and
and
push
pop
xor
pop
cmp
stc
bound
rorl
mov
les
mov
and
pop
push
lods
push
ror
or
push
roll
iret
mov
jns
mov
aam
add
or
movsb
jl
jp
jne
mov
sub
inc
and
sarb
rcl
addr16
sbb
push
sbb
inc
fisttpll
dec
mov
sarb
sbb
xor
lahf
movsb
ret
pop
loope
orb
mov
stos
bound
icebp
mov
adcb
bound
jo
incb
scas
insl
aad
decb
xor
into
ret
push
popf
cld
push
xchg
pop
adc
aam
xchg
imul
add
addr16
dec
mov
ja
pop
call
inc
jp
pusha
in
dec
movsb
cltd
push
dec
dec
xchg
xchg
mov
jmp
outsl
ret
jne
dec
call
mov
adc
push
rol
lret
shll
cltd
test
lahf
jb
imul
and
fnstsw
dec
or
test
into
push
nop
fstpt
in
lcall
xor
mov
xor
sbb
mov
adc
xchg
mov
jecxz
mov
jp
mov
sahf
shrl
push
repz
pop
and
ja
test
iret
xorb
into
out
or
pushf
je
jl
mov
test
rol
adc
negb
mov
addr16
and
dec
ret
lret
insb
xchg
adc
jecxz
add
or
stc
mov
push
sbb
ret
push
sbb
pop
and
pop
in
sahf
imul
or
jne
out
addr16
xchg
lds
xchg
loopne
or
jae
mov
in
int
movsl
inc
xchg
sbb
rclb
lea
lret
ljmp
lea
pop
in
mov
std
pop
push
jns
mov
ret
outsl
js
mov
js
out
mov
into
mov
jbe
lcall
mov
or
sbb
into
loopne
mov
jecxz
dec
imul
xor
aad
push
lock
adc
jmp
outsl
mov
test
test
adc
and
push
xchg
pop
xchg
or
lea
jno
jbe
cli
xchg
dec
scas
mov
jnp
xchg
pop
mov
pop
lea
out
cmc
pop
cmpsl
and
inc
lods
scas
call
xor
shr
cmc
xor
inc
push
adc
pop
aam
sub
jg
mov
jbe
mov
out
fildll
out
scas
mov
cltd
lret
ret
cmpsb
pushf
sub
stos
test
ja
mov
gs
inc
insb
shrb
arpl
stc
movsb
pop
sbb
mov
fistpll
imul
addr16
pop
insb
adc
sbbl
jecxz
xor
mov
or
lret
cmp
cmp
arpl
mov
data16
les
ds
mov
addr16
push
xchg
dec
lcall
fucomi
dec
mov
pop
mov
dec
out
dec
jnp
cmp
stc
and
test
xchg
jmp
push
sub
scas
sbb
into
jne
mov
out
pop
mov
mov
ds
pop
rcr
inc
mov
dec
cmovnp
ror
ljmp
movsb
sarl
pop
fisttpll
sbb
cmp
or
je
pop
lcall
xor
xor
xchg
test
cmc
xchg
push
das
icebp
sub
cltd
scas
push
ss
in
lret
or
out
mov
fcomp
mov
push
cmp
dec
out
and
sahf
xor
mov
data16
lret
push
pmullw
xchg
ret
addr16
xchg
pop
push
adc
add
xorb
lds
xor
push
push
mov
xor
mov
push
lcall
xchg
cmp
or
clc
pop
dec
mov
inc
pop
push
repnz
add
iret
xor
lcall
mov
adc
repnz
test
aaa
mov
lcall
cmp
dec
jle
subb
adc
and
fmull
popa
push
jnp
cmpl
xor
test
sbb
mov
in
dec
add
mov
cli
jge
fwait
mov
stos
xor
stos
and
xorb
mov
out
data16
jo
ja
mov
sbb
adc
pop
xchg
xchg
pop
loope
lds
es
jnp
pop
lods
push
pop
mov
xor
jnp
sbb
xchg
cmpsb
and
xor
lock
cmp
popa
mov
movsl
in
jecxz
sub
sub
movsl
adcb
lahf
sbbl
sbb
xchg
out
imul
movb
icebp
in
fs
adcb
xchg
jmp
sub
lea
push
lret
lock
popw
jno
inc
dec
adc
adc
mov
sti
fbld
lock
and
ja
stos
div
call
or
lods
sbb
xor
and
mov
mov
loop
loop
mov
cmp
fisubrl
inc
inc
mov
mov
pop
inc
jne
or
cld
out
push
pop
call
movsb
sbb
or
xor
pusha
cmpb
cmp
sbb
pop
or
pusha
xor
ds
cwtl
sub
ret
dec
mov
and
fcomi
outsb
ret
daa
mov
pop
jl
push
dec
test
movl
fcmove
mov
notb
pop
insl
mov
mov
arpl
push
popa
and
cli
mov
test
xchg
out
dec
mov
or
movsb
pop
aam
cwtl
sub
ret
popa
aaa
lods
jmp
dec
mov
cmc
call
or
mov
outsb
filds
test
decl
cltd
push
fcmovnb
jl
jo
lret
and
dec
mov
cmpsl
mov
int
ljmp
inc
xchg
testb
and
stos
sarb
inc
or
sbb
sub
and
fcompl
or
test
mov
fcomp
fdivrs
hlt
aad
cmpl
dec
push
inc
inc
cmpsl
mov
scas
shl
test
sbb
cli
adc
repz
push
cli
xor
xor
js
ss
fdivrs
xlat
lahf
add
in
scas
add
scas
sahf
xchg
lock
aas
xchg
adc
inc
push
sbb
lret
jmp
testl
cli
inc
imul
std
mov
loop
xor
and
xor
inc
rep
stc
cs
in
add
inc
test
or
arpl
imul
jnp
xchg
mov
ds
fcomps
push
mov
jno
ljmp
mov
mov
mov
out
rcl
sti
push
out
xor
mov
aaa
sub
mov
subl
jo
xor
jmp
mov
fsub
xor
hlt
jg
pop
fsubr
xor
outsb
ljmp
std
mov
adc
add
xchg
rcrb
aaa
cmpsb
adc
je
push
pop
mov
cmp
and
jecxz
iret
xorl
stc
mov
cmp
xchg
into
fiaddl
add
mov
int3
xchg
dec
mov
aaa
repz
xor
xlat
call
dec
out
jno
mov
push
jge
lret
repnz
mov
sub
mov
out
mov
test
mov
jle
jo
mov
jbe
call
scas
out
mov
or
mov
xlat
mov
orb
push
data16
mov
mov
jae
mov
adc
mov
rcl
jmp
jge
xchg
je
fisttps
lds
cmp
jge
sbb
add
jecxz
shl
lock
shll
movsb
mov
test
jecxz
jp
xchg
mov
lret
adc
push
lcall
pusha
stos
jg
push
rorl
cmp
or
push
inc
pop
and
jno
or
jg
sub
lret
adc
mov
fwait
push
sti
stos
lea
and
cs
sahf
or
cmp
jne
jno
sbb
sbb
ror
mov
testb
mov
lock
jae
jle
pop
cmpsb
addr16
outsb
call
rcrl
jl
cmp
fstl
dec
mov
fldenv
ret
repnz
addr16
mov
push
pop
push
nop
jb
aad
cmp
or
sub
cmp
push
inc
or
outsb
imul
iret
sub
sbb
pusha
mov
mov
xor
movsb
dec
fnstcw
or
mov
adc
dec
inc
pop
leave
inc
js
xchg
mov
mov
lods
cli
mov
pop
xor
xchg
mov
cmc
mov
data16
and
std
inc
jg
shll
xchg
xchg
mov
lea
lahf
pop
push
mov
cwtl
outsb
push
push
inc
xchg
imul
adc
jnp,pt
test
imul
aaa
cmp
inc
jae
sti
mov
jge
jae
jbe
xlat
rcl
push
movsl
pop
mov
pop
lea
ds
or
in
push
jbe
xchg
sahf
mov
shlb
ret
and
push
js
jae
xor
add
dec
xchg
int3
rcrb
mov
mov
nop
popf
loopne
in
sti
sbbl
outsb
cltd
pop
mov
scas
in
aad
or
repz
pop
insl
orb
mov
jo
add
shll
add
inc
arpl
and
test
test
jg
and
movsl
sbb
cmpsb
mov
lds
push
mov
fsubl
fs
push
dec
and
sbb
iret
push
inc
icebp
sub
and
add
xchg
inc
out
xchg
ret
add
out
xor
push
bound
inc
xchg
daa
dec
jge
add
cmpsb
add
and
mov
iret
loope
in
pushf
push
pop
addr16
xchg
inc
inc
jbe
fcomip
lret
dec
dec
cs
leave
mov
xchg
ret
pop
add
sbb
xor
fisubrl
popa
dec
pop
lahf
adc
imul
test
cmp
dec
es
les
xor
rcrb
add
ficoms
lock
arpl
push
push
call
mov
sbb
int
xchg
mov
push
fs
lods
xchg
push
jl
insb
fmull
pop
inc
sbb
jl
xchg
addr16
sub
scas
jnp
inc
shrl
jle
ret
push
arpl
test
les
fnstenv
lods
in
std
shlb
pop
push
mov
sbb
popf
and
je
dec
add
push
mov
inc
repz
je
inc
xor
push
daa
daa
mov
mov
cmp
jge
push
push
sub
inc
hlt
dec
cmpsl
call
pusha
and
call
loope
dec
into
xchg
fcompl
fwait
ret
inc
sbb
iret
aaa
ror
mov
std
add
insb
ret
adc
mov
sbb
in
loop
push
pop
scas
xchg
lret
dec
mov
fldl
cmpsl
int3
test
add
ret
lock
mov
dec
das
pop
cmp
loope
add
push
in
nop
insb
rsqrtps
sub
lahf
adc
imul
xchg
out
icebp
xchg
push
jl
not
and
add
sub
dec
lret
gs
shlb
lret
stos
sub
aaa
mov
mov
pop
jmp
inc
xchg
dec
call
fucom
sub
inc
mov
xchg
test
out
adcl
inc
scas
jg
jp
aas
xchg
inc
arpl
popa
aaa
out
call
nop
add
mov
std
ret
xchg
rcrl
jbe
insb
inc
jmp
sahf
push
int3
mov
ret
mov
mov
in
cld
lea
out
jle
enter
or
or
std
pop
push
jle
into
xor
test
jl
add
popf
xchg
fdivrp
mov
outsl
ds
jmp
pop
mov
push
xchg
aaa
loope
addr16
imul
pop
pop
inc
pop
frndint
or
push
mov
mov
pop
outsb
push
sahf
xlat
sahf
lahf
test
movsb
clc
pop
mov
rol
out
and
stos
sub
frstor
push
xchg
push
movsb
fnstsw
aas
xlat
sbb
addr16
push
rcl
xchg
add
push
leave
pop
push
adc
js
dec
or
sarl
jmp
mov
mov
lret
xor
pop
push
fcomi
adc
mov
pop
or
jns
mov
insb
jmp
inc
aam
or
mov
in
cmpsb
cltd
jne
jg
xor
sbb
sti
or
iret
inc
push
and
aas
sahf
stc
hlt
dec
cltd
ret
cwtl
jnp
das
in
arpl
inc
fldl
les
pop
mov
mov
lods
pop
gs
sbb
sti
icebp
mov
addr16
jge
mov
cpuid
mov
mov
mov
sar
fdiv
jmp
or
mov
sub
insl
xor
in
stc
nop
inc
daa
adc
ss
adc
mov
push
inc
mov
mov
fnstcw
or
or
jmp
mov
cld
push
jae
jo
dec
cmpsl
mov
mov
roll
in
into
les
mov
jmp
mov
lret
mov
enter
pop
pop
out
mov
popf
out
repz
and
and
sub
popa
std
xor
sub
fisubrl
inc
and
dec
jle
daa
test
aas
icebp
dec
add
jb
xchg
xchg
mov
into
cmp
dec
or
inc
inc
roll
dec
dec
aas
stos
out
add
pop
xor
push
cltd
mov
sub
add
jae
popf
mov
and
ja
scas
add
sbbb
dec
mov
dec
into
sbb
xor
mov
decl
and
mov
add
inc
outsb
push
rcll
push
inc
add
jmp
adc
dec
in
dec
lret
loopne
lcall
repz
pop
test
cmp
cmpsl
lea
in
xchg
push
int
bnd
mov
sub
adc
adc
test
xor
pop
pop
mov
jbe
call
fnsave
push
or
nop
cmova
and
mov
mov
xor
in
jl
ljmp
jecxz
push
push
cltd
and
insb
inc
push
outsl
xorb
jne
pop
mov
jp
pop
lcall
jp
rcrl
aam
aas
mov
gs
cltd
leave
add
mov
mov
adc
shlb
mov
pop
lea
mov
rorb
hlt
ficompl
cmp
push
push
push
fwait
shr
popf
jp
scas
pop
cmp
stc
sarl
loopne
mov
push
imul
mov
and
or
adc
hlt
jne
xchg
add
in
mov
xor
pop
pop
popf
aad
cld
mov
mov
int
add
cmc
and
mov
mov
gs
outsb
pop
fldz
imul
mov
out
sub
cwtl
es
cmp
mov
xor
stc
mov
adc
jnp
dec
xlat
scas
sti
push
adc
mov
fwait
movq
pcmpgtw
mov
dec
push
idivl
loopw
dec
out
mov
push
and
push
pop
lcall
and
leave
int3
jne
mov
fistps
xchg
lcall
jg
push
loop
and
mov
clc
icebp
pop
ret
mov
jne
lods
dec
push
pop
add
push
inc
cmp
fldcw
scas
push
cmp
pop
sbb
mov
or
push
dec
popf
imul
mov
cmp
and
push
xchg
cmp
fisubrs
xchg
cmp
or
ljmp
mov
mov
cmpl
fmull
xchg
jmp
or
mov
and
sbb
das
int3
in
dec
ja
and
add
cmp
adc
pop
or
or
push
sbb
mov
roll
push
add
loopne
pop
cmp
cmp
loope
repnz
dec
mov
xor
dec
imul
push
pop
mov
inc
or
xor
xchg
loope
or
lods
sub
pop
pusha
mov
adc
mov
and
cld
xor
lods
cmp
mov
xchg
rcrb
inc
cli
push
movsb
sub
test
push
pop
ret
xor
dec
pop
adc
adcl
xor
aaa
mov
add
out
cwtl
insb
add
push
movd
push
pop
loopne
push
push
and
lds
push
cld
push
push
sbb
mov
push
fs
push
jecxz
rcrb
data16
sbb
enter
mov
repz
ficoms
cwtl
pop
test
ja
outsb
xlat
push
rcr
leave
inc
cwtl
inc
xchg
pop
test
cmp
lods
jmp
pusha
jp
sub
add
xchg
call
sarl
jmp
xchg
jne
pop
int3
xchg
push
lods
aaa
rcll
jbe
push
inc
or
or
push
cld
push
es
dec
xchg
ss
rcll
mov
pminub
and
int
dec
mov
adc
nop
mov
cmpsl
ljmp
cmp
pop
adc
fsts
pop
data16
frstor
sbb
aad
enter
mov
loopne
stos
pop
repnz
fsubrl
inc
inc
push
lcall
xsaveopt
adc
jmp
xor
add
add
cmp
sub
lahf
repnz
sbb
test
push
and
cmp
out
and
js
shrl
shll
lods
cmp
leave
cwtl
push
xchg
or
adc
xlat
and
xchg
sahf
ljmp
cmpb
fcoms
xor
mov
je
popa
add
iret
mov
or
rcl
rcll
xchg
and
out
pop
and
mov
sbb
loopne
cmc
lods
in
or
push
adc
sub
sub
mov
addb
iret
xor
dec
in
and
inc
mov
in
xchg
inc
es
fdivs
in
pop
imul
or
sbb
shrb
out
gs
add
sbb
imul
and
or
aam
js
cmp
jl
test
mov
jbe
popf
test
inc
fadd
int
scas
xchg
inc
add
and
roll
and
inc
stc
and
push
mov
js
ljmp
or
jmp
push
cmp
xchg
add
inc
sub
jle
scas
jmp
clc
inc
aam
xchg
orl
repnz
sbb
popf
or
negb
je
jo
jo
add
das
mov
or
int
ljmp
push
fucomp
rclb
adc
jg
and
cs
cmp
lret
gs
dec
mov
int
mov
jnp
mulb
shl
mov
push
xchg
sahf
enter
into
push
inc
movhps
testb
lods
jg
roll
mov
cld
dec
sbbl
mov
das
jmpw
sahf
ror
cwtl
push
jge
out
mov
test
xchg
or
ret
std
push
loop
repz
adc
cmp
xchg
mov
cmp
cli
inc
daa
inc
cltd
mov
lret
getsec
cs
jle
inc
or
pop
xlat
dec
aam
addr16
fisubrs
add
out
jecxz
sub
mov
nop
out
shrl
fxch
mov
mulb
jb
jno
add
sub
mov
int
jae
mov
js
loop
jle
push
or
rol
imul
push
es
out
rcrl
loope
stos
addr16
addr16
stos
stos
ss
and
and
cmp
and
sbb
inc
out
mov
das
jp
adc
movsl
movsl
push
adc
bound
push
or
or
movsl
cs
call
add
xchg
mov
inc
xlat
push
shrb
adc
pop
cwtl
ja
cmp
loope
imul
mov
xlat
loopne
mov
cs
push
rorb
mov
daa
jmp
xor
add
mov
repnz
add
adc
add
or
sahf
sbbl
sub
xchg
test
lea
dec
loop
js
pinsrw
int
mov
js
repnz
mov
movsl
pop
test
shrb
add
adc
lret
mov
es
pop
cmpsl
fmuls
mov
dec
adcb
test
roll
mov
xor
cmp
stos
lods
addr16
mov
sbb
ja
cmp
pop
mov
pop
xor
enter
insl
inc
jne
jo
sub
loop
iret
mov
rorl
xlat
nop
lods
out
or
and
js
leave
dec
pop
dec
push
fcoms
sub
pop
push
jnp
insl
adc
notl
test
inc
mov
cs
pop
mov
in
shll
orb
adc
adc
orl
leave
sbb
xor
mov
inc
pop
xchg
mov
popa
dec
lods
jmp
call
dec
lods
shrl
mov
jno
xchg
test
or
sbb
lahf
cld
out
mov
scas
data16
leave
cmp
cmp
mov
lret
loopne
sub
jl
pushf
gs
paddb
sub
mov
push
ss
ret
ljmp
ret
das
out
cmp
adc
addr16
sbbl
jo
fisubrl
pop
inc
in
sbb
push
notl
dec
mov
daa
out
ret
int
roll
and
mov
icebp
out
or
fiadds
inc
jne
mov
repz
xchg
cmp
mov
test
in
fs
lret
cmpsl
scas
and
inc
xor
xlat
es
lock
ret
lods
cld
repz
adc
pusha
and
aaa
mov
lock
clc
xchg
daa
rclb
mov
mov
mov
push
push
shl
jle
push
mov
aad
xor
or
push
jge
das
mov
loope
xchg
push
imul
mov
mov
nop
stos
jne
xchg
mov
push
xor
sub
icebp
mov
test
pushf
xchg
push
push
ljmp
fsubrl
push
shll
loope
xor
and
mov
sarl
mov
fdivrs
jnp
mov
mov
dec
in
int3
ljmp
and
sbb
jl
lds
jge
add
add
js
pushf
sub
lret
js
fsubl
out
adc
or
mov
push
pop
jge
fnstsw
js
repz
jmp
loop
adc
cmp
das
xchg
xlat
test
jmp
sbb
fadd
mov
dec
leave
rcll
and
std
mov
and
mulb
les
cmp
and
test
pop
subb
jne
xchg
test
pop
jo
sub
fisttpll
sbb
push
mov
or
daa
dec
mov
test
mov
gs
mov
shl
or
and
pushf
cmp
sub
loope
lds
orl
arpl
hlt
jbe
loop
push
dec
cld
xchg
lret
insl
sbb
adc
nop
cs
repnz
adc
push
and
sar
les
push
subl
sub
sbb
addr16
ret
out
push
dec
icebp
mov
inc
mov
jle
in
push
inc
data16
push
push
jmp
das
pop
int3
inc
sub
xor
jbe
mov
loop
pop
gs
mov
std
shll
cmc
imul
out
push
in
or
test
adc
pop
ljmp
call
mov
lock
call
mov
iret
inc
popf
sub
push
gs
jp
push
popa
adc
mov
ror
lods
push
sub
bound
loope
loopne
inc
xor
fidivl
mov
or
repnz
movsl
pop
push
dec
je
push
aas
and
push
aam
rclb
pop
pop
out
or
call
and
and
xchg
movsb
mov
dec
mov
cmp
push
rcl
and
repz
fistps
mov
mov
lea
xor
insl
aad
and
pop
scas
or
add
dec
pop
push
outsl
aad
scas
jmp
sbb
sub
or
jae
cmp
icebp
push
dec
mov
mov
add
fnstcw
or
dec
xchg
fsubl
mov
jecxz
movsl
jae
pop
stos
stos
std
in
clc
adc
pop
dec
in
repnz
pop
nop
dec
push
stos
inc
cmp
test
sub
aad
jl
arpl
fnop
lock
rolb
cltd
nop
aam
cmpsl
cmpsb
cmpsl
xor
sbb
mov
shl
cmpsl
div
and
and
pushf
mov
je
ds
packsswb
adc
jecxz
aad
jb
inc
sub
aas
dec
push
test
jbe
inc
cmp
les
jne
mov
lods
cli
adc
sub
push
call
sbb
push
pop
jge
fwait
outsl
out
xlat
rcr
add
loopne
sub
mov
shll
idivb
dec
pop
out
mov
dec
push
jmp
je
xchg
xchg
imull
lods
faddl
das
jo
cmpsl
xchg
pop
inc
movsb
xchg
xor
fistps
es
stos
jnp
push
fs
inc
jmp
xor
dec
xlat
dec
dec
pop
shrl
and
jmp
push
pop
sub
adc
adc
cli
fnsave
lea
aas
push
loope
orl
mov
fwait
push
push
sub
push
test
fmull
inc
ffree
ja
insl
and
fstpl
call
les
mov
push
xor
pop
das
cmp
test
xchg
push
outsb
or
xchg
and
in
sbb
ja
pcmpeqb
fwait
xchg
ficoml
loop
int3
cli
jg
mov
mov
lret
js
mov
lcall
fidivs
cwtl
jcxz
xchg
test
cs
lods
adcb
sub
loopne
arpl
cmp
out
add
push
cld
stos
xorb
cwtl
dec
dec
fnsave
inc
push
lret
pop
xchg
cwtl
ja
xchg
jp
subl
sbb
stc
shll
loope
ror
pop
adc
adc
push
or
xorb
call
ljmp
repnz
popf
cmp
mov
cmpsb
mov
pop
jl
jmp
sbb
cli
mov
test
push
inc
daa
aas
push
outsl
movsl
inc
stos
rcl
add
pop
ds
mov
aas
pop
lret
int
push
lret
stos
jne
ret
inc
lods
sub
jp
cli
pop
fs
or
pop
mov
pop
jae
lds
dec
call
es
lahf
or
repz
xchg
xor
outsl
in
and
dec
pop
mov
outsb
pusha
xchg
xrelease
push
mov
sahf
sub
loopne
lahf
mov
fimull
mov
xchg
jno
lock
dec
pop
push
out
dec
mov
in
aaa
stos
or
cmp
bound
iret
pop
shrb
fsubl
xchg
imul
mov
and
and
xchg
inc
loopne
mov
outsb
mov
add
jl
sbbb
pop
inc
mov
and
sub
mov
adc
mov
adc
or
sbb
cwtl
popf
jns
mov
push
shrl
pop
jb
mov
dec
repz
shl
sub
pop
pop
es
jl
iret
int3
loopne
jmp
cld
scas
lcall
push
sbb
cmp
mov
in
inc
in
add
push
cmc
push
pushl
js
sbb
mov
mov
or
inc
mov
pop
outsl
cmc
xor
lea
lock
in
adc
mov
jge
pop
jle
inc
jge
xor
lahf
stc
fwait
xchg
sahf
add
or
mov
test
sbb
scas
jb
mov
shl
jle
pop
push
fucomp
adcb
stos
mov
das
imul
pop
pusha
ja
dec
cli
mov
pop
sub
out
jge
mov
ds
data16
mov
enter
ss
xlat
lret
dec
inc
xlat
mov
add
js
cli
pop
inc
fimuls
dec
loop
ss
mov
or
jnp
imul
into
push
xchg
push
out
in
inc
and
cmp
inc
mov
in
orb
pop
insl
loop
cmp
out
or
jb
dec
fs
jg
pop
std
subl
int
and
sbb
push
pop
push
in
cmpl
inc
andb
and
lods
imul
or
or
cmc
inc
fidivs
add
sub
mov
sub
les
add
nop
jg
inc
jecxz
sti
std
mov
cmp
add
out
loopne
sbb
or
fnsave
adc
mov
fstl
cmpsb
mov
cld
mov
iret
cmpsb
fs
je
jns
nop
jbe
pop
fwait
and
dec
loope
pop
out
fistps
adc
jle
dec
mov
sbb
jae
and
mov
lret
scas
mov
push
adc
pusha
mov
adc
adc
add
xlat
add
or
mov
cmp
push
and
inc
mov
mov
push
sbb
out
rol
dec
out
push
jo
mov
movsb
bound
sbb
xor
es
add
nop
and
les
ficoms
pop
outsl
iret
arpl
pop
inc
cmpsl
test
add
mov
mov
sbb
fiadds
ret
push
int
add
pop
mov
test
mov
inc
mov
pop
and
sbb
mov
call
sbb
add
xchg
ficomps
int3
movsl
sbb
data16
test
mov
jl
jecxz
imul
std
sub
in
mov
cltd
mov
les
add
sarb
mov
sub
insl
or
add
push
xor
xor
iret
mov
mov
cmpsl
cld
insb
imul
mov
xchg
fisttpll
add
xchg
adc
mov
leave
xchg
std
push
inc
fidivl
jmp
popl
sub
cltd
sti
enter
arpl
imull
cmp
mov
xor
add
fsts
int3
jb
mov
cmp
sub
lea
stos
int
popf
nop
inc
aam
jne
ds
stos
aas
insl
inc
loope
adc
inc
sti
push
enter
scas
pop
push
inc
enter
mov
stc
jl
add
hlt
cmp
dec
cmp
fmul
in
clc
daa
adc
sub
mov
push
push
xchg
loop
imul
out
adcl
push
xchg
cmp
xchg
pop
out
cmc
push
cmpsl
out
adc
ljmp
mov
add
loop
std
stc
out
jae
mov
or
pop
jle
nop
mov
icebp
xchg
lock
aam
jae
mov
orb
pop
jo
lret
sub
mov
add
rcl
jbe
setg
pop
dec
lret
add
mov
push
mov
pop
es
cmp
pop
scas
out
mov
pop
pop
push
outsl
dec
push
jne
add
cli
mov
rcl
xchg
mov
stc
outsl
mov
inc
outsl
add
dec
xor
inc
test
fnstsw
rol
push
jo
mov
addr16
push
jp
scas
jbe
imul
stc
ret
dec
int3
fwait
jb
push
xchg
push
add
cmpl
arpl
mov
mov
mov
pop
xchg
xor
cwtl
or
add
xchg
jne
sbb
mov
mov
adc
loop
pop
mov
adc
xor
das
cmp
mov
mov
pop
cmp
pop
add
cltd
jnp
sahf
cmpsb
outsl
lods
lea
xchg
pop
es
jb,pt
cmpsl
dec
mov
mov
sub
pop
pop
fsubr
test
and
fcmovnbe
mov
jne
jnp
ffreep
xchg
pop
test
push
testl
mov
subl
cmp
sub
mov
sub
vaddss
inc
repnz
and
mov
shl
sbb
into
and
ficompl
push
mov
xchg
sub
sub
adc
mov
mov
fwait
mov
xchg
pushf
les
jno
repz
adc
inc
fstpt
mov
addr16
std
add
mov
loop
push
ja
lahf
or
negl
pop
push
aas
das
jnp
xor
pop
mov
jl
enter
pop
les
mov
push
psadbw
dec
movaps
dec
cmpsl
sbb
or
lock
add
cs
sub
cld
rorb
repnz
cmp
jbe
cmp
arpl
mov
call
stos
cltd
xchg
mov
int
jno
sbbl
scas
mov
xlat
arpl
push
jnp
xchg
fwait
or
push
adc
jb
xchg
pusha
pop
jmp
cmp
mov
push
jmp
pusha
stos
or
lret
jge
dec
mov
and
push
adc
cmp
push
jo
xchg
pop
push
inc
fs
fcoms
sub
out
xor
or
out
imul
cmc
insl
mov
mov
shll
out
xor
inc
or
outsl
inc
xchg
sub
xchg
bound
mov
imul
stos
shrb
insl
movsl
ret
mov
dec
push
bound
adc
mov
repnz
imul
push
xchg
and
cmp
mov
repnz
sub
lret
xchg
into
test
aad
dec
push
push
and
pop
and
dec
fwait
aam
icebp
insl
cli
jae
das
or
dec
fstpl
pop
data16
imul
mov
jecxz
in
test
xlat
loopne
jns
idiv
in
aad
lds
cmp
pop
mov
enter
je
sahf
ds
mov
sub
popf
add
or
sub
sahf
mov
push
sbb
inc
jb
fwait
mov
out
pop
jge
xlat
push
clc
sbb
jmp
fistl
jae
rcrb
scas
xchg
sti
mov
add
sbbb
push
inc
clc
je
loope
cmpsb
lods
xorb
pushf
out
sub
iret
jae
jp
add
pushf
cltd
push
icebp
fs
shll
cmp
jecxz
xchg
lahf
cld
ss
push
scas
js
push
xor
cs
repnz
xchg
sbb
sbbb
cmc
xchg
sub
push
inc
push
pop
or
dec
in
push
mov
out
inc
push
addr16
inc
pusha
xchg
dec
insl
xor
das
jecxz
hlt
pop
dec
ds
mov
les
aas
cwtl
lret
js
iret
adc
daa
inc
add
sub
in
mov
loop
mov
pop
stc
hlt
in
pop
das
loope
mov
lock
cmp
pop
adc
iret
mov
into
es
mov
dec
dec
dec
sarb
inc
push
mov
mov
stos
push
mov
daa
push
cmp
mov
jle
sarl
or
stos
mov
call
mov
xor
dec
push
jo
mov
dec
dec
imul
cltd
andb
mov
mov
jae
addr16
dec
add
jmp
pushfw
dec
or
push
shr
lahf
mov
sarb
inc
mov
shl
sbb
mov
mov
push
jnp
dec
sbbb
xor
mov
ret
push
sbb
mov
jb
mov
in
daa
mov
in
mov
lret
cmp
mov
int
dec
int
lcall
inc
sbb
arpl
dec
ret
mov
mov
push
lret
adc
inc
sub
dec
dec
jae
stos
sub
inc
loopew
jp
ja
fldl
push
or
ds
test
mov
sbb
fisttpll
dec
ljmp
idivb
insl
and
xor
push
fstl
or
adc
lock
adc
xor
push
mov
jo
push
xor
mov
xor
loopne
fdivl
outsb
mov
xor
xchg
mov
sarb
jbe
adc
cld
in
jg
or
and
push
and
stos
fwait
dec
into
jle
mov
adc
cmpsl
sbb
sbb
shlb
or
iret
adc
stos
push
jmp
hlt
pop
sub
xor
mov
imul
fimull
and
adc
das
fnstcw
repnz
or
gs
ret
shlb
add
stos
push
cmp
dec
and
jo
bound
int
pop
mov
sub
aam
stos
js
cmp
jnp
out
pop
dec
lock
push
out
cmp
push
dec
addr16
sbb
push
xchg
cmpsl
inc
cld
les
loop
sub
pop
daa
mov
shlb
cltd
jp
imul
sub
js
cmpsl
jns
xor
aam
mov
xchg
js
sti
pop
jns
inc
inc
lret
jmp
xor
repz
dec
jo
mov
daa
mov
lret
sub
push
push
add
mov
and
sub
test
jge
inc
mov
cmp
sub
fwait
and
mov
out
jb
cmp
stos
movsl
lods
inc
xor
nop
xchg
push
xor
inc
hlt
adc
or
lods
rclb
rcll
out
push
dec
push
add
push
cmpsb
es
jl
out
sti
movsb
push
lret
loop
insl
mov
aas
call
and
cmpb
ljmp
inc
fwait
sbb
mov
rcr
dec
loopne
inc
scas
lods
sbb
js
test
push
movsl
jle
push
jo
das
xchg
add
movsl
movsl
test
ja
gs
pop
loop
dec
xor
cli
jae
pop
ja
scas
jg
cmpl
dec
pop
or
ss
jae
out
lods
sub
mov
adc
ret
cmc
sub
lods
xchg
sbb
add
sbb
cld
jmp
sbb
insb
xchg
cli
scas
xchg
sahf
fdivrl
xor
shlb
pop
pop
mov
jle
jl
xor
sbb
sbb
mov
mov
dec
mov
push
pusha
xor
and
and
dec
dec
and
jns
bound
hlt
into
jge
lock
adc
js
mov
lods
sub
pop
mov
lods
cmp
notl
mov
sub
in
mov
test
shl
ss
clc
or
in
loop
repnz
xchg
std
xor
mov
or
sub
xlat
into
mov
cmp
cwtl
stos
movsb
pushw
mov
inc
popa
push
shrl
imul
popa
pop
xchg
and
aad
inc
jno
mov
inc
mov
rol
scas
xor
jae
hlt
test
mov
subl
sub
loop
jne
cld
xchg
in
add
sub
push
mov
xchg
mov
fldt
stc
movl
cmpsl
orb
dec
inc
scas
inc
push
enter
daa
pop
sbb
shrl
jl
pop
sbb
or
pushf
sbb
fsubrs
test
cli
popa
cmp
stos
push
ds
jecxz
lahf
add
cld
in
inc
adc
push
mov
mov
add
lds
jge
je
mov
mov
xchg
sub
cmpsl
scas
pop
shll
std
push
mov
mov
sub
push
dec
test
push
mov
fsubrs
or
inc
js
mov
sti
push
inc
loop
mov
xchg
les
jns
movsl
and
xchg
mov
sbb
dec
call
jno
inc
outsl
hlt
movsl
mov
pop
sub
jo
imul
jnp
xchg
add
fcomi
fdivs
aam
and
sbb
pop
stc
pop
repz
cli
cmp
xchg
push
sahf
pushf
xchg
data16
daa
fs
pop
dec
repnz
jle
loop
out
imul
jo
sbb
ljmp
bound
lods
mov
insl
in
adc
icebp
jne
pop
mov
lcall
sahf
add
aad
xchg
sub
sbb
cli
xchg
xor
sub
mov
insl
shlb
into
std
jb
mov
push
je
repnz
fwait
stos
jle
jmp
dec
sbb
addr16
dec
add
fidivs
adc
inc
lret
popa
mov
adc
push
fdivrs
jle
lea
fcmovnbe
add
pop
nop
mov
nop
sub
hlt
cmp
xchg
pop
mov
and
out
aaa
sub
dec
xlat
loop
mov
leave
imul
adc
ljmp
adcl
mov
push
push
test
and
jg
sarl
push
or
or
fs
xchg
es
leave
mov
in
shlb
cltd
rcr
mov
std
fdivrl
push
out
mov
jmp
mov
cmpsl
and
add
call
or
inc
fdivl
pop
sbb
jmp
pop
sahf
xor
test
in
lds
xor
pop
jg
test
xor
push
arpl
mov
mov
loop
fwait
xchg
pop
and
push
add
xchg
stos
ret
adcb
mov
jnp
pop
mov
xlat
mov
mov
pop
jge
pop
pushf
jp
mov
adc
scas
jecxz
int
dec
or
add
push
dec
hlt
sub
and
sbb
pop
movsl
cld
and
cmp
in
cmp
test
sbbb
aad
insl
enter
leave
test
jne
or
jmp
fdiv
pop
jecxz
and
stos
push
jl
pushf
push
es
fbstp
adc
pop
dec
or
scas
clc
pop
or
inc
xor
adc
cmpb
fbld
or
ds
dec
into
lods
stos
adc
pushf
inc
ret
andl
mov
mov
aas
pop
jmp
pop
add
imul
mov
inc
mov
push
bound
fstpl
or
push
cltd
repz
inc
int
pop
push
pop
adc
mov
lods
sti
inc
dec
ret
inc
subb
ja
jo
out
fadds
ret
insb
cmpsb
movsl
adc
das
dec
mov
xor
jg
pop
enter
stc
push
iret
pop
push
add
test
outsl
inc
mov
dec
mov
mov
jb
nop
jmp
stos
sbb
pop
daa
mov
stc
jno
filds
pushf
insl
stos
hlt
sbb
stc
insb
out
filds
mov
mov
xor
and
mov
cmp
fiaddl
into
or
mov
add
cmp
les
ret
arpl
dec
jno
jne
or
daa
mov
ds
add
xor
xchg
xlat
daa
cwtl
xchg
loope
mov
and
loopne,pn
mov
inc
daa
mov
ret
mov
fcmovnu
and
xor
sbb
add
and
and
xchg
daa
xchg
scas
mov
fadds
pushf
mov
xor
pop
shl
adc
sub
dec
sarb
test
stos
pop
sahf
add
lods
pop
ret
sub
xchg
push
add
cmp
test
addr16
and
rclb
push
movsb
sub
in
xor
add
mov
cmc
sub
mov
lock
or
aam
sbbl
or
cmp
shrb
dec
int
pusha
sub
clc
lock
jbe
mov
lea
stos
push
ret
push
sti
mov
iret
arpl
daa
ss
xchg
loopne
rcrl
xchg
mov
test
xlat
lds
xlat
cs
xchg
dec
outsl
sbb
jns
mov
pop
mov
mov
fs
dec
negb
test
lds
cmp
adc
cmpb
out
imul
fistpll
and
fisubs
pop
lock
sti
scas
cmp
mov
lea
add
cmp
ret
call
ret
inc
inc
pop
sub
inc
stc
dec
sub
repz
ds
ret
adc
dec
lds
lea
jo
push
mov
stc
movsl
test
or
cs
pushf
sbb
mov
fld
pop
pop
fistps
int
test
pop
pushf
inc
push
pop
sbb
cld
ret
mov
fmuls
shrb
jecxz
aad
cmp
fdivs
mov
ja
cwtl
in
call
sahf
aam
mov
dec
xor
and
add
bound
cmpsb
mov
shrb
repnz
jae
add
jne
cmp
and
fbstp
push
add
mov
js
and
adc
jnp
pop
inc
cwtd
push
bound
mov
sbb
sub
mov
loope
mov
nop
push
mov
sub
sub
xlat
sub
les
out
cmp
pop
jle
addr16
add
mov
das
movsb
cmp
movsl
rcrb
inc
rclb
sbb
jnp
psubq
sahf
inc
and
cltd
sub
and
test
notl
pushf
cmp
aad
adc
push
jge
lahf
cmpsl
mov
jae
clc
push
out
lret
push
cli
das
jno
push
mov
add
sarb
xchg
into
jge
cld
lock
pop
xchg
dec
inc
outsb
pop
pop
dec
popa
fisttpl
popl
sbb
inc
jo
inc
clc
loop
lret
mov
or
les
scas
adc
int
mov
or
rolb
hlt
stc
and
or
cmp
and
shl
add
sbb
mov
xchg
pop
cmp
or
xchg
shll
js
sub
jno
dec
mov
jmp
adc
arpl
sub
inc
mov
pop
out
add
xor
out
faddl
dec
mov
and
pop
clc
outsl
or
mov
mov
sub
sbb
stos
xchg
cmp
repz
test
mov
das
inc
fistps
icebp
cwtl
mov
push
sub
in
bnd
sti
scas
mov
roll
sub
pop
mov
and
xchg
push
lret
sti
imul
inc
or
int
shrl
jmp
imul
and
or
dec
push
pop
addr16
dec
pop
lea
pop
pop
adc
push
inc
enter
jo
loope
je
add
sti
xor
jle,pt
cs
sub
xchg
inc
xor
xchg
popf
xor
mov
dec
popf
inc
lods
popf
call
or
push
cld
xchg
mov
jl
push
cmc
sub
ss
ficomps
int
out
xchg
mov
jne
test
jnp
in
pushf
xchg
stos
pop
or
cmp
sub
aad
pushf
stos
jle
rcll
int3
and
shl
ret
xchg
rorl
xchg
loop
mov
sbb
mov
arpl
aam
js
sti
add
mov
mov
pop
sbb
xchg
or
pop
shlb
mov
ret
lods
fs
js
pop
arpl
ret
cmpsb
cmp
fcoml
sbb
sarl
out
sub
nop
bound
in
adc
mov
mov
test
lahf
inc
loopne
ror
iret
sarb
popa
pop
cmp
repz
pop
addr16
adc
testb
js
pop
in
or
dec
scas
cmp
mov
xchg
or
addr16
popa
subl
std
mov
add
jb
loope
sub
xchg
orl
dec
push
out
lcall
mov
movsl
loopne
in
inc
push
loop
int3
std
in
lret
ds
or
pop
jno
dec
or
outsl
loope
push
push
jae
cmp
dec
push
ljmp
push
cmpl
fildll
fwait
movb
scas
out
rorb
xchg
lods
stos
leave
push
divb
xor
sarb
mov
inc
rol
fsubr
sub
bound
ficomps
test
mov
popf
jnp
add
mov
int
add
push
inc
push
dec
dec
lods
mov
cmp
pop
add
mov
xor
pmaxsw
xchg
mov
outsl
ljmp
notl
xchg
mov
popf
add
insl
sub
aaa
dec
mov
push
push
scas
xchg
dec
pop
pop
add
or
and
push
add
outsb
test
and
dec
xlat
add
or
rorl
and
mov
decl
push
rorl
xchg
es
inc
push
sbb
adc
dec
xor
pop
ja
mov
outsb
fmuls
sar
in
xlat
pop
add
loop
and
and
pop
popf
push
inc
push
xor
jmp
fwait
jbe
aad
je
mov
js
or
mov
dec
idivb
dec
ror
jge
aam
and
data16
popa
sahf
aad
sub
or
popa
dec
adc
aad
insl
pop
shlb
lods
in
pushf
or
pop
add
fdivr
pop
pop
jo
movsb
subl
ret
popl
repnz
inc
decb
add
pop
repnz
push
out
pusha
push
fstl
lahf
add
dec
inc
les
or
jae
hlt
mov
jnp
and
or
or
xor
in
fcompl
addr16
mov
mov
sbbb
pop
ds
fidivrl
repz
cwtl
cmpsb
fldz
int
dec
or
cmpsb
push
jp
xchg
inc
stc
daa
mov
xor
cmpsb
xchg
scas
dec
fnstcw
lcall
inc
sbb
shll
lock
jmp
xchg
adc
fisubrs
frstor
push
pop
insl
mov
mov
psubsb
cs
out
and
push
imul
xchg
int
mov
sub
adc
add
add
mov
add
sbb
cltd
sti
sub
adc
jp
xor
out
imul
push
cmpsb
clc
sbb
lret
fiaddl
mov
data16
mov
das
add
inc
outsb
sarb
cmc
add
outsb
dec
sarb
mov
rol
pop
add
or
push
out
roll
ja
cs
lret
and
lahf
fisttpl
mov
dec
push
ljmp
or
jmp
adc
cmp
out
stos
push
push
sub
icebp
das
in
push
fdivp
mov
icebp
sahf
mov
out
dec
push
ret
sahf
add
jecxz
test
push
popa
test
testl
sti
and
xor
ja
jne
dec
mov
ret
cmpsl
fs
dec
nop
into
xor
out
cmp
cmp
fiadds
lret
clts
sbb
ljmp
out
push
out
xor
jnp
hlt
enter
aaa
fwait
loop
std
out
mov
cmp
mov
cmp
rolb
xchg
mov
xor
adc
outsl
daa
xlat
out
lret
pop
or
mov
scas
mov
imul
ss
push
cs
gs
cltd
aas
int
mov
scas
int
push
hlt
add
lock
push
imul
insb
xchg
pop
sub
push
add
test
cmp
js
ljmp
loope
mov
jmp
out
in
nop
mov
ljmp
test
pushf
cmp
push
xchg
cld
mov
scas
push
push
adc
cld
in
xchg
sub
inc
shrb
mov
xor
sbb
into
ret
test
aam
lods
cmp
xor
pop
shrb
pop
sbb
mov
push
test
in
and
push
les
jmp
jl
pop
mov
pusha
mov
in
rol
dec
jne
push
icebp
outsb
dec
inc
jnp
aas
into
jb
call
mov
fwait
adc
popa
repz
jp
cld
hlt
add
push
into
sbb
fisubrl
mov
movsb
push
and
in
sbb
inc
push
iret
xor
testb
data16
and
sub
jecxz
xor
add
fidivl
cmp
sbb
in
movsb
popf
fbstp
dec
cmp
push
aam
pop
arpl
mov
sub
push
icebp
mov
dec
out
pop
mov
push
lds
mov
cli
jns
jecxz
push
in
sub
mov
dec
jns
sbb
fidivl
mov
sti
dec
aaa
gs
mov
dec
pop
pop
fs
dec
fmuls
mov
test
xorb
sbb
pushf
pop
pop
lcall
test
dec
icebp
outsl
or
lods
popf
repnz
fmuls
push
movsb
ficoms
adc
dec
dec
mov
mov
scas
xchg
push
xlat
push
outsl
scas
mov
test
xchg
pop
push
daa
pushf
les
and
mov
pop
in
jnp
mov
popl
mov
pop
filds
movsl
scas
orl
mov
and
push
enter
lods
jp
stc
divl
xchg
push
mov
or
in
loopne
mov
sbb
jmp
sub
or
push
ljmp
xor
inc
std
enter
mov
pop
loopne
rorb
push
jecxz
xchg
shrb
mov
jle
ds
xorb
loope
jbe
xor
movsl
push
adc
xor
xchg
xchg
cltd
pop
or
cmp
cmpsb
mov
cmp
loop
cmp
mov
ret
nop
clc
test
lods
pop
or
cmpsb
dec
fxch
iret
ja
adc
ss
cwtl
ret
mov
mov
pop
ret
out
or
cltd
addl
mov
push
xlat
test
push
cltd
out
xchg
jl
in
movsl
push
xchg
fldl
nop
stos
inc
out
mov
frstor
movaps
jg
stos
sub
mov
pop
xchg
mov
fildll
lret
xchg
mov
cli
sbb
sahf
push
cltd
stos
ret
xchg
aad
inc
jg
test
adc
ss
jns
loope
loope
je
stos
stos
fldt
out
cmp
fs
ficoms
mov
add
scas
sbb
or
sub
inc
and
dec
xchg
dec
sahf
ljmp
pop
inc
sub
sbb
mov
inc
lea
mov
sbb
pop
cmp
dec
shlb
imul
pop
clc
jo
ss
outsl
imul
mov
jmp
pushf
cld
inc
sti
subl
sbb
adc
int3
xchg
or
popa
in
lahf
insb
sbb
lcall
stos
mov
mov
movsb
xchg
sbb
inc
pop
fwait
in
cmp
popf
adc
pop
pop
mulb
xchg
clc
sbb
cs
xor
sub
fsubrl
pop
lock
xor
xor
and
inc
xchg
fsubrl
scas
mov
js
shll
fstpt
cmc
ret
addb
add
push
outsb
pop
jbe
cs
pop
lods
jg
adc
cmpsl
adc
subb
cmpsl
xor
jecxz
jns
out
sbb
cmpsb
xchg
dec
cmc
out
flds
out
mov
push
sarb
inc
repnz
data16
jb
lods
xor
cmp
js
add
and
mov
popa
push
push
pop
mov
dec
data16
jmp
add
pop
stc
in
or
sub
sub
or
pop
sbb
rcll
pop
fbld
add
sbb
mov
fsubs
inc
shr
addb
scas
lret
inc
cmpl
out
je
arpl
cwtl
adc
xchg
mov
mov
sbbl
fldl
cmp
pop
dec
nop
in
mov
addl
cmpsb
dec
cli
push
xor
popf
sub
imul
sub
mov
les
mov
movsl
sbb
cmp
pushf
push
pop
lret
icebp
push
push
sbb
xchg
popa
jle
cmp
jno
repz
test
in
in
das
repnz
and
sub
xchg
mov
sbb
dec
mov
out
lea
ss
sti
aas
sub
out
cs
jl
adc
cmp
push
sbb
jne
push
fdiv
pop
push
mov
inc
jnp
fstpt
mov
push
scas
leave
lea
jecxz
aaa
or
scas
aaa
mov
push
xchg
repnz
adc
sarb
lcall
outsl
fs
lods
xor
lods
mov
push
push
dec
shrd
cmp
movsb
andb
add
cltd
repz
mov
aas
std
test
mov
lock
adc
movsl
stc
dec
add
add
mov
int
iret
fs
cmpsb
adc
fdivs
addr16
dec
std
adc
out
pop
outsl
jg
push
push
pop
jmp
nop
pop
cmp
sbb
xor
lret
dec
or
xor
mov
jno
adc
xchg
mov
rcll
dec
cli
ret
xor
dec
adc
cld
mov
inc
lret
test
xchg
push
mov
and
cmp
sti
movsb
stos
loop
repnz
push
mov
jg
es
movsb
lret
sub
add
xchg
fnstcw
dec
pop
push
ret
inc
mov
arpl
add
xchg
in
aaa
sub
ficomps
cmp
repnz
ja
jns
nop
inc
call
adc
fisttps
lods
lret
add
iret
insb
jno
adc
sbb
loope
and
xor
cmp
sub
jo
sub
mov
push
cmp
push
mov
add
adc
iret
insl
jns
jecxz
xchg
push
mov
push
sub
xor
movsb
adcl
lcall
repz
stos
jne
mov
xor
add
lds
mov
fwait
and
data16
addr16
divb
push
fisttps
xor
or
or
mov
cmp
sub
mov
sbb
lahf
pop
dec
push
and
jns
sub
mov
jge
scas
cltd
inc
lret
xchg
fwait
insb
jecxz
jp
inc
les
dec
mov
mov
negl
outsb
adc
dec
pop
ret
das
mov
xor
inc
mov
mov
lcall
adc
cwtl
xchg
add
insb
test
add
xchg
pop
jae
push
cmp
mov
or
cwtl
mov
movsb
inc
mov
pop
arpl
lret
aaa
xchg
std
pop
inc
sub
popf
shlb
jge
cmp
clc
inc
inc
ljmp
mov
pop
dec
test
dec
jbe
xor
call
jmp
sub
js
lods
sbb
fwait
sbb
hlt
push
xchg
repnz
es
xchg
jb
mov
push
adc
seto
push
das
push
sub
inc
push
stos
loopne
dec
in
movsl
add
jne
xorps
nop
subb
or
or
xchg
pop
mov
es
mov
mov
cmp
push
mov
jns
and
repnz
into
jle
daa
pop
movsl
leave
ret
clc
adc
push
xor
enter
push
int
fsubp
inc
fs
adc
pop
and
xor
sarb
js
stos
adc
icebp
test
add
adc
int3
cs
push
in
xchg
and
and
fwait
mov
or
mov
int
fistpl
sub
pop
enter
xor
mov
test
mov
inc
mov
adc
inc
daa
dec
scas
push
mov
mov
push
sbb
stos
pop
push
or
int
dec
stos
stc
pushf
sbb
mov
add
shll
mov
dec
outsl
repz
adc
call
fstl
jo
nop
js
into
push
sub
repz
out
js
lahf
int
inc
push
loop
fistpl
xchg
das
pop
xchg
push
xchg
xchg
mov
mov
iret
cltd
lds
xchg
jge
loopne
or
push
ret
rorb
loop
push
adc
lahf
nop
cmpl
mov
mov
in
sub
sahf
jnp
ret
loope
cmpsb
mov
sbbl
lcall
scas
inc
pop
out
notl
idivl
xlat
movsb
xor
out
jmp
add
xor
fchs
jb
andb
inc
loope
or
push
inc
mov
test
fcompl
cmp
loop
mov
mov
adc
ret
xchg
leave
testl
int3
mov
in
movsl
dec
xor
push
push
jo
cmp
lea
andl
sub
cmp
js
inc
lahf
out
decb
push
sbb
jae
push
sub
dec
aaa
push
jae
xor
cmp
testb
ficompl
scas
adc
rorl
mov
push
mov
call
fs
rcrl
xchg
fidivrs
mov
cmp
scas
sbb
les
into
cld
xor
cltd
adc
es
pop
mov
mov
mulb
mov
insl
sub
push
mov
jecxz
out
cmpsl
sub
mov
repnz
cmp
dec
sub
loop
lock
and
das
sbb
sbb
sbb
sub
cmpsb
fsubrs
jne
xchg
scas
jmp
pop
and
pop
fs
mov
arpl
mov
stc
mov
sbbb
loope
mov
xor
out
mov
fsubrp
mov
mov
lret
dec
xor
inc
insb
out
pop
push
hlt
jnp
xchg
pop
lcall
ljmp
call
bound
scas
leave
int3
mov
negb
sbb
add
jg
pop
mov
mov
lods
inc
loop
jo
ror
adc
test
clc
jns
cmp
sbb
sub
cmpsb
mov
lock
xor
mov
add
inc
mov
outsb
dec
loop
fcompl
idiv
out
add
mov
mov
pop
in
mov
adc
push
xchg
pop
in
dec
mov
push
pusha
add
movsb
pop
aad
and
jg
nop
fadd
cmp
pop
xor
js
stos
mov
fidivrs
dec
jp
push
loop
dec
adc
repnz
mov
jne
loope
mov
lods
add
test
xor
lods
movsl
loop
push
cmpsb
cmpl
aaa
out
mov
sub
iret
insl
rclb
mov
pop
mov
inc
xchg
inc
fwait
mov
pusha
pop
or
jp
subl
xor
xor
movd
xchg
mov
sub
test
jno
and
push
in
xor
test
adc
aam
scas
inc
aaa
mov
stc
dec
js
stos
cltd
or
sahf
xor
rep
sub
enter
or
inc
insb
mov
and
mov
mov
jns
stos
sub
push
add
cmpsl
cmp
enter
or
popf
adc
pusha
test
in
sti
call
sub
sub
mov
mov
dec
lods
mov
insl
cmp
jns
iret
orb
dec
sbb
test
testl
ss
add
inc
mov
or
push
pop
fistpl
sarb
in
testb
push
das
mov
mov
loope
sbb
scas
nop
icebp
rolb
xchg
lea
pop
xor
xchg
push
xchg
data16
lcall
icebp
pop
in
mov
mov
out
push
dec
mov
ja
stos
sub
xor
fstpt
insb
xchg
daa
push
lret
ja
lret
rorb
ret
and
inc
in
call
out
mov
cltd
ret
fs
push
cmpb
pop
mov
cmp
xchg
pop
xchg
idiv
fldcw
adc
jb
fnsave
mov
pop
push
xor
cmp
es
or
test
inc
dec
xchg
getsec
cmpb
jne
rclb
insb
xchg
jp
addr16
cmp
call
add
dec
adc
and
adc
inc
in
mov
mov
mov
stos
dec
inc
fmulp
inc
cmp
mov
add
add
push
pop
stc
cmp
xor
movsb
xlat
xor
adc
inc
scas
lock
fstp
sub
mov
sub
mov
inc
je
cmpsb
sub
push
pop
out
test
adc
pushf
push
push
bound
jecxz
or
sar
inc
divl
popa
push
rcl
popa
leave
push
jge
jle
xchg
andb
jmp
enter
in
idivl
mov
lock
subb
adc
jno
pop
cwtl
je
in
pusha
aas
push
mov
cld
lods
stos
cwtl
xchg
repz
rorb
test
ret
or
inc
xchg
cli
cmp
lcall
or
enter
pop
ja
push
sbb
shll
mov
ds
or
lahf
mov
sub
js
dec
mov
jl
push
mov
in
in
mov
cwtd
data16
fnstcw
imul
incb
test
mov
fsub
sub
cmp
insb
mov
or
bound
dec
repnz
filds
jl
sbb
cmc
xchg
inc
dec
jmp
das
jp
push
push
mov
mov
or
mov
adc
jg
cld
xchg
iret
adc
push
repz
inc
fnstenv
and
sbb
sub
enter
inc
or
shr
insl
inc
gs
mov
popa
xchg
adc
fisubrs
mov
xchg
adc
lret
inc
fcmove
sbb
add
out
push
out
mov
jns
int3
lahf
push
mov
pop
xchg
insb
in
sub
in
psubd
cs
mov
int3
arpl
mov
shrl
add
sbb
aaa
lods
imul
xchg
pop
pop
cmpb
test
int3
popf
pushf
xchg
sub
cmc
je
jnp
jo
insb
sbb
push
or
in
movsl
cmp
mov
push
mov
das
pop
lcall
sbb
test
pop
popa
outsl
repnz
aas
mov
cmp
mov
cmp
test
notb
int3
in
aam
and
pusha
ret
mov
xchg
aad
fwait
enter
sbb
jge
mov
push
pop
sbb
enter
aas
loop
stos
push
or
lock
xor
rolb
mov
cli
and
sti
mov
pop
mov
into
cmp
pop
loop
pop
push
icebp
jge
add
dec
add
jg
pop
ret
push
xor
push
cmp
stc
arpl
sbb
push
xchg
or
shl
adc
pop
popa
and
adc
dec
sub
xor
out
daa
std
lret
out
mov
je
scas
repnz
mov
ret
jae
adc
cmp
inc
pop
loopne
dec
bound
cmpsb
movl
aas
fcomi
out
rclb
scas
xlat
push
jecxz
sub
mov
setns
jle
xchg
add
std
lds
fcomi
leave
test
mov
adc
shll
xor
adc
mov
jg
test
mov
outsb
dec
dec
inc
cltd
ror
pop
xor
jnp
push
jbe
ret
and
das
iret
and
mov
orl
jae
mov
jns
hlt
and
fcoms
dec
lret
xchg
mov
push
xchg
jl
mov
push
and
push
or
jae
gs
icebp
jp
sti
cmp
xor
nop
dec
add
stc
movsl
add
or
rorl
push
inc
les
loop
sub
fistpll
jb
sti
jg
jg
mov
das
mov
mov
cmp
dec
xor
lcall
jg
mov
mov
mov
and
mov
lret
mov
jb
ja
loope
aas
mov
push
sub
cmp
add
sub
pop
push
rorb
cmp
xchg
lcall
mov
jns
sbb
sbb
adc
mov
jge
or
stos
mov
int3
mov
xchg
jnp
fcmove
mov
xor
test
mov
dec
pusha
sub
push
sub
sbb
jl
ja
cmc
push
adc
test
insl
out
push
data16
loop
bound
push
xor
ds
pop
jb
leave
mov
into
and
push
add
out
aaa
sub
cs
js
jbe
pop
outsb
xchg
sub
repz
pop
jb
adc
inc
in
dec
cmp
pop
ss
out
pop
push
and
adc
subb
loop
js
xor
sti
lods
and
inc
sub
push
cmp
jg
sbb
pop
mov
shll
cwtl
imull
fld
jle
push
adc
mov
mov
sbb
mov
fwait
inc
daa
xor
gs
mov
adc
nop
cmpsb
dec
jl
mov
mov
add
imul
lahf
fldcw
or
and
sub
imul
jno
repnz
pop
int3
data16
test
and
int3
stos
ds
add
lock
pop
cld
sti
in
sbb
add
add
repnz
push
jmp
sbb
cmpsl
aad
push
pop
lret
test
jno
ja
sbbb
in
jecxz
fbld
pop
out
mov
mov
jle
pushf
push
divb
or
rcr
add
stos
mov
xchg
stos
push
shrl
mov
out
popa
in
stc
scas
inc
mov
push
push
inc
aaa
outsb
sbb
xor
es
rcrb
push
sub
or
cmpsb
jo
jne
popf
and
std
dec
cmp
pop
jp
lret
sub
mov
fidivrs
push
cli
push
stos
pop
jns
adc
cmc
decl
jb
adc
pop
out
movsl
jecxz
fimuls
cld
xchg
or
sub
enter
mov
addb
xor
mov
push
xchg
xchg
insl
sbb
push
loop
inc
jns
jp
mov
and
lret
jo
adc
xchg
pop
cmp
scas
cld
add
mov
sbb
std
lret
dec
scas
push
fwait
mov
aam
sub
test
sarl
std
or
and
jne
dec
cli
mov
aaa
cli
jp
in
call
daa
and
jne
dec
fdivr
mov
ss
sbb
cmpsl
xor
adc
leave
mov
stos
shl
cwtl
inc
inc
cmp
lret
and
xor
push
dec
fnsave
xchg
int
ljmp
mov
imul
mov
stc
ficompl
dec
sbb
mov
out
pop
fdivrs
sub
push
sbb
lret
sbbl
push
fists
lahf
rorl
in
frstor
subb
cli
xchg
pop
sbb
mov
fwait
jmp
fst
mov
fucom
cmp
or
popa
cmp
mov
jbe
test
ret
ds
andb
push
push
add
sub
inc
test
pop
in
fdivl
ret
jp
ret
jbe
push
adc
outsw
cmp
push
hlt
sahf
clc
mov
les
jb
and
bound
scas
jge
out
jge
das
sti
ss
add
movsl
push
sub
fiaddl
lret
mov
je
adc
sub
cmp
cmc
adc
je
sub
arpl
push
test
fiaddl
xor
ss
mov
xor
inc
xchg
cvtdq2ps
mov
fnstenv
mov
mov
mov
mov
test
in
pop
out
xlat
test
lret
inc
or
test
mov
adc
xchg
inc
dec
rcll
hlt
outsb
mov
xchg
mov
ljmp
and
nop
jns
add
fbld
mov
test
fwait
test
mov
sbb
div
xor
mov
enter
movsl
add
mov
jb
and
adc
push
xchg
pop
popf
add
cld
ljmp
push
adc
ja
gs
test
aas
sarl
cwtl
pop
jbe
ret
jae
test
mov
mov
adc
xchg
ljmp
xchg
xchg
and
pop
adc
out
push
cmp
enter
iret
or
lret
sub
aas
dec
shr
lret
push
lcall
frstor
cmpsb
xchg
test
mov
leave
dec
movsl
stos
daa
push
std
xor
and
dec
sarb
cmp
mov
lret
mov
lock
js
enter
or
lret
ret
dec
daa
mov
push
xchg
int3
repnz
arpl
scas
pop
mov
fs
pop
es
cmpsb
push
jle
aaa
icebp
xor
push
lea
mov
sub
sub
popf
xchg
or
movsb
mov
out
lock
lcall
stc
addr16
sbb
into
data16
ret
ror
add
or
ja
xlat
mov
xchg
addr16
shrb
pop
cmpsl
cmp
add
xchg
mov
cld
pop
mov
pop
pop
lods
das
orl
or
fcoml
push
je
cmp
jl
push
push
fnstcw
or
sub
scas
mov
pusha
bound
mov
jl
mov
dec
rcll
add
loopne
and
cmp
or
loopne
and
inc
adc
mov
add
icebp
or
lea
mov
push
jne
std
xor
push
xor
dec
cmp
scas
cmp
dec
adc
pop
mov
add
mov
je
mov
bound
mov
lret
gs
or
jo
dec
and
mov
mov
mov
adc
or
out
cmp
pop
js
pushl
pop
int3
cmc
mov
sub
stos
push
sbb
sbb
lea
bound
pop
popa
sub
adc
jne
push
and
cmp
fisubs
sahf
xlat
imul
fistpll
shlb
out
mov
sbb
push
push
popf
imul
fwait
ret
and
cltd
jne
or
add
xor
dec
adc
out
push
and
test
or
cmpsb
sub
je
mov
mov
or
mov
cwtl
inc
mov
dec
or
pop
int
stc
loope
test
cmp
or
out
rcrl
jns
stos
jl
dec
cmp
popa
ljmp
sbb
aam
and
pop
push
and
test
outsl
aaa
adc
lods
enter
imul
cmp
stos
incb
notl
xor
xchg
jbe
push
orb
inc
mul
dec
pop
mov
add
mov
mov
addl
js
sti
mov
xor
xchg
xchg
push
or
inc
pop
subb
cld
jne
outsb
in
in
jecxz
jae
jnp
repz
or
mov
push
adc
lahf
sti
aaa
lahf
xchg
rcll
popa
roll
push
sub
lret
adc
leave
dec
fisubrs
push
jge
in
lea
les
pop
jp
adc
inc
stos
jle
mov
out
mov
sub
mov
mov
dec
jns
enter
je
test
mov
rcrl
xchg
fldl
rorl
mov
pop
dec
stos
xchg
inc
mov
mov
pop
loopne
jo
stos
popa
sbb
dec
test
aam
mov
into
rcr
jle
adc
xchg
lcall
icebp
sub
loopne
mov
shrb
xchg
sub
jnp
jns
lods
loopne
in
xchg
out
push
or
pop
ds
inc
movl
dec
pusha
dec
pop
int3
leave
ret
adc
push
lcall
daa
inc
sbb
clc
or
add
cmp
test
daa
cld
out
fstpt
pop
mov
dec
arpl
js
jb
call
adc
sub
loop
sub
jnp
mov
adc
popf
and
shll
sarb
dec
insb
xchg
inc
push
hlt
int
xchg
pop
mov
add
sub
stos
jnp
stos
add
imul
lds
lods
jns
aas
mov
mov
pop
sub
cmpsl
stos
adc
xor
outsl
aaa
cmp
push
mov
in
push
mov
gs
xchg
and
inc
and
push
mov
sbb
adc
insl
push
jns
pop
fwait
jb
adc
sbb
ret
fwait
cmp
dec
insl
test
or
fdiv
jmp
adc
xchg
rcr
scas
jecxz
mov
stc
iret
jnp
sbbb
addb
aam
push
xchg
push
ret
jb
sub
fadds
mov
sub
and
int
mov
adc
mov
iret
mov
sbb
pusha
or
popa
and
and
data16
push
jne
jmp
jecxz
mov
push
inc
popa
mov
sub
in
cmp
mulb
test
and
adc
fstps
adc
push
mov
stos
xchg
jnp
filds
fistpll
dec
aad
cmp
push
divps
mov
fisttpl
or
inc
or
divl
mov
aad
cwtl
popa
inc
cs
pop
xor
es
aam
mov
xchg
sahf
mov
daa
ret
push
jmp
aas
add
mov
fdivp
mov
movsb
aas
je
pusha
sbb
cmp
xor
push
int
dec
popa
push
lcall
cmp
lret
push
sbb
mov
movsb
and
mov
mov
mov
das
lock
in
xchg
dec
cmc
imul
mov
dec
test
lcall
mov
fldenv
or
imul
cmpsl
adc
int
jnp
scas
add
sub
or
dec
cmp
lds
inc
push
add
and
xchg
enter
xchg
jnp
cmc
dec
jp
pop
cmp
push
jbe
cwtl
mov
dec
mov
dec
pop
mov
jne
inc
add
jbe
xlat
inc
jg
das
inc
xor
outsl
rolb
xor
in
add
ret
adc
or
cmpsl
xchg
jae
cli
cmp
push
ds
dec
insb
cmpsl
sahf
sbb
jne
add
xchg
js
mov
sub
dec
mov
insl
les
imul
cld
jp
out
pop
enter
mov
mov
inc
add
jmp
and
into
sarb
bound
stos
push
gs
psubsb
and
stos
jae
mov
mov
movsl
dec
loope
push
fs
fldcw
fsts
iret
xorl
push
push
inc
pcmpgtw
push
sarb
xorb
lods
mov
ret
push
repnz
xchg
push
ret
test
add
dec
outsb
pop
ret
rol
adc
inc
es
add
sbb
mov
and
pop
mov
js
mov
cmp
daa
daa
xchg
aam
mov
movsb
fnstsw
xchg
push
shrb
cmp
imul
sti
fstl
out
mov
movl
adc
rcr
adcb
adcb
rclb
fldcw
cmp
inc
inc
push
pushf
adc
dec
pop
leave
inc
notb
lds
xor
pop
popf
stos
sbb
cmp
jae
ret
cmp
mov
or
clc
jne
cli
rcrl
aaa
sub
xlat
mov
pop
mov
mov
popa
xchg
jge
nop
sub
xchg
xor
push
leave
insl
iret
fnstsw
mov
pop
and
js
fldt
mov
lods
insl
mov
inc
jge
sbb
mov
mov
mov
stos
test
loopne
shll
adc
jo
dec
inc
das
gs
cmp
test
adc
sub
cwtl
and
test
jns
or
xchg
test
mov
outsb
aas
sbb
or
jg
stc
pop
or
xchg
into
xchg
xor
ja
shrl
pushf
cltd
mov
adc
xor
popa
xchg
jl
adc
lds
pop
xchg
fistl
cmp
pusha
xor
aaa
flds
rcrl
push
push
notb
in
jno
enter
popf
push
push
xor
rorb
fdivrs
insb
cmpsl
sub
icebp
jne
jp
test
adc
js
ss
enter
sub
mov
push
bound
sbb
aaa
cmpb
inc
div
mov
cmp
mov
cmp
dec
pop
push
lea
add
popa
in
in
pop
cli
xchg
jae
mov
cwtl
mov
and
rol
jae
and
outsb
push
dec
out
lock
out
cmc
inc
xor
pop
lods
inc
sub
sub
or
and
insb
dec
dec
sub
mov
mov
mov
test
xchg
xchg
into
inc
add
pop
sbb
dec
dec
mov
test
mov
cmpsl
out
push
fsubl
push
or
xchg
sbb
push
ss
mov
mov
imul
cmpsb
push
cmp
mov
imul
cmp
mov
or
and
stos
xchg
outsb
pop
mov
and
inc
cltd
push
push
pusha
fdivr
out
mov
dec
mov
cwtl
and
lods
jge
testl
sysret
jo
cltd
or
sub
fwait
xlat
xchg
pop
inc
rcrl
fsubp
jne
fnstenv
push
xchg
cmp
xor
mov
mov
jo
add
rolb
push
mov
cli
test
adc
pop
sarb
imul
mov
xchg
ror
scas
lods
push
pusha
dec
push
jp
fistpll
or
adc
das
pop
sub
imul
xor
push
add
xor
insw
lds
sbb
mov
subb
pop
mov
lods
test
mov
mov
mov
xchg
or
dec
int3
mov
or
and
shlb
mov
jp
aas
paddusw
sbb
mov
iret
dec
orb
pop
mov
jle
mov
jmp
in
cmp
push
xor
mulps
inc
fmull
stos
jb
push
mov
adc
imul
push
mov
stc
les
imul
sub
pop
test
lret
aad
dec
cmc
mov
fs
test
sub
push
pop
fnstsw
adcb
lea
pop
cmp
dec
or
jne
sub
push
stos
or
sbb
sub
pop
inc
xchg
fidivrs
pop
sub
mov
jmp
xorl
pop
pop
cltd
mov
mov
lds
push
or
or
gs
sub
mov
cmp
mov
cmp
sbb
fimuls
aaa
mov
push
jbe
mov
fs
mov
mov
dec
cmc
pop
cmpsl
sbb
addr16
cmp
loope
and
or
xchg
mulb
pop
mov
test
mov
sub
fdivr
xor
or
cmc
mov
sub
push
aad
mov
xchg
pop
ljmp
mulb
jl
xor
inc
push
pop
xchg
in
jp
call
test
ss
pop
mov
clc
sti
mov
xchg
mov
int3
push
and
adc
sub
pop
jns
dec
adc
mov
mov
xor
test
xchg
loopne
sar
jno
push
mov
push
and
adc
mov
xor
push
inc
enter
jo
cmp
stos
loope
das
cmp
jg
cmp
shll
jle
pop
push
in
dec
lret
lret
icebp
cmp
jge
pushf
xchg
lock
loopne
icebp
in
repnz
cs
or
xor
mov
scas
or
repz
sbb
out
movsb
mov
mov
cwtl
cmp
and
mov
ja
fwait
loopne
inc
mov
insb
out
cmp
sbb
call
dec
lret
xor
sahf
clc
ljmp
imul
xchg
xlat
mov
jle
dec
sbb
jo
in
and
mov
cwtl
clc
pusha
cmp
pop
loop
mov
xchg
cltd
sbb
sahf
out
xchg
cmp
and
mov
xchg
jae
stc
and
std
outsb
cmp
xor
pusha
adc
sti
out
push
out
sbb
fcmovnbe
pop
in
data16
mov
cs
sbb
cwtl
faddl
mov
cwtl
nop
stc
add
cmp
pop
jnp,pt
lcall
out
leave
inc
cli
mov
ja
fwait
pop
push
in
outsb
dec
js
sti
sbb
cmp
and
sbb
fcomp
fistl
ljmp
push
fldl
movsl
push
clc
scas
dec
pop
lods
scas
dec
mov
popa
sub
adc
jmp
mov
into
push
push
shrl
adc
mov
cmp
pop
icebp
ret
push
push
lret
mov
sbb
xlat
mov
push
adc
add
jno
sub
pop
mov
jo
mov
push
xchg
mov
mov
cmc
scas
mov
icebp
sub
pop
notl
aaa
dec
out
or
sub
rclb
imul
popf
sub
xor
scas
popf
xchg
jl
add
insl
out
jae
pop
dec
sub
test
adc
dec
addl
negb
stos
es
loop
loop
lahf
mov
lret
xchg
das
fistps
sub
and
or
adc
mov
repz
mov
fisttpl
ffreep
mov
insb
popa
sub
loope
mov
cmc
dec
or
into
cwtl
dec
adc
loop
mov
jmp
sub
fwait
adc
vpaddq
sbb
mov
inc
and
push
mov
nop
push
sti
cmp
xchg
sti
or
fimuls
xor
cmc
push
icebp
subl
loope
sarl
inc
dec
inc
or
xchg
icebp
sahf
rcrb
mov
add
mov
fsubrs
dec
shll
sub
andb
xchg
filds
sbb
jp
mov
lret
dec
cli
dec
xor
cltd
pop
adc
dec
stos
mov
mov
jl
mov
pop
stc
jmp
lahf
xor
insl
std
pop
pop
mov
and
and
pop
mov
sub
arpl
and
sbb
mov
or
rcr
popa
mov
or
mov
std
dec
inc
xor
pop
fimuls
mov
xorps
adc
cmp
scas
out
mov
lcall
pop
xor
cmp
cmp
es
fcmovne
push
push
xlat
sti
out
and
mov
sbb
pop
aad
stc
lods
mov
aas
dec
pop
jae
shl
pusha
cmpsl
push
mov
sahf
imul
fwait
imulb
sbb
dec
outsl
mov
pop
xor
push
outsl
mov
sub
daa
call
sbb
inc
insl
test
add
jnp
repnz
outsb
ss
pusha
in
ret
jae
jmp
jge
adc
or
inc
lds
sbb
arpl
mov
ret
fstpt
adc
fwait
rorl
xchg
jne
jle
mov
lret
out
adc
adc
inc
daa
mov
cmp
mov
push
and
mov
iret
jb
in
xchg
pop
xlat
dec
js
dec
xchg
leave
xor
mov
aad
sahf
incb
push
insb
cmp
test
and
pop
test
jb
cld
enter
imul
dec
lcall
cmp
sbb
mov
test
ret
lahf
fiaddl
popa
outsl
add
cmp
cmpsb
jge
es
mov
je
int
push
pushf
in
push
jb
call
mov
cmp
sahf
pop
fwait
test
in
sub
mov
sub
inc
pop
sub
in
add
add
scas
in
mov
cmpsl
int3
setae
xor
in
mov
add
dec
movsb
popf
dec
mov
sub
outsl
outsl
add
lock
je
pop
cmpsl
cltd
adc
sahf
mov
cmp
pop
mov
add
popf
stos
inc
arpl
xlat
mov
lds
pop
push
pop
jb
shll
pop
sub
mov
inc
cmp
push
push
mov
mov
das
xor
es
rcrl
pop
fnsave
lock
mov
out
movsb
aam
cmp
mov
sbb
push
nop
pusha
xor
inc
and
xchg
xor
les
scas
mov
push
outsb
push
mov
inc
sub
push
inc
pop
sbb
data16
outsb
mov
pop
mov
cmp
mov
and
and
pop
inc
fwait
lods
fwait
sbb
lret
push
sub
ss
jnp
or
sub
jp,pt
mov
test
push
jbe
cwtd
sbb
daa
jae
pop
aam
fildll
call
fst
mov
mov
fisubrs
pop
cmp
pop
int
mov
lds
insl
fistl
jecxz
es
cli
dec
mov
test
mov
push
dec
xchg
sti
mov
popf
or
pushf
pop
mov
inc
xor
out
fldl
outsl
sbb
jmp
dec
xchg
pop
lret
and
fstps
stc
xchg
mov
test
out
jb
jmp
pop
sahf
ret
xor
addr16
xchg
xor
rcr
xchg
jae
xchg
lds
cmpsb
cmpsl
sbb
xor
inc
mov
rorl
cmp
sub
mov
jg
push
adc
dec
mov
movsb
or
push
dec
sbbb
cmp
cmp
fcoms
sub
jns
fstpl
jl
lfs
aaa
mov
mov
mov
lea
icebp
dec
pop
pop
pop
and
xchg
and
out
or
dec
xor
icebp
dec
add
sti
icebp
mov
add
in
push
pop
xchg
dec
lcall
xchg
iret
mov
lds
and
bound
pop
add
rorb
sbb
stc
inc
vmovupd
sti
into
aaa
xchg
sub
jns
jl
cmp
ret
cmpsb
into
iret
cmp
cmp
call
sbb
jo
repz
in
leave
add
cmp
pop
sub
insb
cld
push
movsb
or
cltd
push
push
lret
inc
popf
cld
mov
cmp
xchg
insl
mov
xor
inc
lcall
push
mov
jns
adc
mov
push
out
jp
rclb
mov
xchg
arpl
gs
add
ss
pop
mulb
loope
es
sti
inc
arpl
ja
stc
sub
in
out
jle
jmp
push
sbb
pusha
call
adc
mov
ret
movsl
jne
push
add
js
pop
int3
pop
loop
mov
push
adc
and
mov
adc
cli
inc
add
clc
xchg
sub
gs
ljmp
or
movsb
lock
int3
or
aaa
xchg
sti
sahf
movsl
clc
into
outsb
cmpsb
pop
movsb
aaa
cmc
mov
int
inc
adc
xlat
pop
mov
mov
jmp
jo
mov
inc
dec
dec
dec
sub
dec
ljmp
xchg
insb
cmpsb
cmp
daa
lcall
sub
lret
stc
sbb
ror
cmpsl
lods
popf
repnz
insb
push
push
ds
push
mulb
sbb
lods
insl
push
hlt
jns
imul
xlat
fiaddl
jge
mov
adc
add
cli
lods
push
push
repnz
rorl
add
fildl
inc
and
shrb
mov
jnp
test
aaa
sbb
jbe
pushf
pop
adc
insb
ja
aas
leave
je
cmp
mov
xchg
push
lahf
mov
ja
push
or
sahf
jbe
sub
in
inc
jnp
fwait
insl
fwait
mov
js
ret
test
push
jns
adc
jne
mov
out
inc
or
cmp
sub
js
and
cmp
pop
fisubrl
dec
push
ret
sbb
jg
test
adc
test
addr16
mov
negb
fcompp
fisubl
cmc
cmp
pop
popf
add
ret
jge
jb
xchg
mov
cld
adc
push
push
and
ss
push
cmp
shll
sub
or
adc
mov
mov
push
xorb
es
dec
or
push
adc
scas
mov
fwait
in
jle
push
mov
aam
repz
xor
cmp
add
sub
inc
imul
loopne
jne
int3
cmpsb
cwtl
sub
cmpsb
into
fnstsw
lret
popa
es
daa
mov
divb
ret
addl
loop
add
push
push
add
fbstp
das
sbb
mov
sbb
imul
repnz
faddl
mov
add
daa
hlt
xchg
adc
add
pop
inc
mov
orl
js
sarb
sub
jo
cmp
and
xchg
inc
lcall
xor
jo
les
std
jno
sbb
in
dec
and
gs
lds
lahf
out
sbb
lock
stos
out
jo
cld
sbb
mov
je
or
pop
andb
adc
xchg
or
lahf
xchg
xchg
shr
fnstsw
lock
jmp
out
pushf
into
js
pop
popa
mov
inc
bound
fidivrs
daa
or
add
pop
inc
lods
cli
xor
dec
cmp
mov
les
lock
mulb
ret
pop
stos
xor
movsb
lret
push
xlat
jmp
dec
pop
sbb
push
sub
jno
xor
and
iret
jno
ss
rorl
mov
out
add
pop
addr16
add
and
inc
mov
ficoml
or
out
pop
lcall
movsb
adc
imul
clc
loopne
daa
push
cmc
ror
aam
ret
fisttpll
push
xlat
in
fldl
pop
cld
lds
dec
femms
dec
xor
loope
scas
aaa
loop
jne
subl
sub
pop
movsb
into
mov
and
out
xor
and
add
stos
fdivs
sub
sub
and
xor
ss
sbb
jmp
sub
loope
das
dec
out
testb
sbb
cli
or
fldl
lds
in
in
push
repnz
pop
jae
andl
xchg
ljmp
inc
xor
iret
ret
call
pop
int3
nop
xor
push
clc
je
jno
xchg
test
pop
mov
int
jb
jmp
repnz
fnstenv
mov
shlb
and
scas
nop
aas
lret
scas
dec
dec
gs
mov
ss
cmc
lds
cmp
pop
pop
inc
test
cmpl
in
cmpl
out
push
loopne
push
out
rcl
ljmp
jno
or
mov
dec
xor
shlb
adc
mov
outsb
dec
adc
jl
cmp
sub
xor
sbb
push
mov
sub
insb
pop
test
push
imul
incl
mov
daa
inc
push
jo
adc
loope
sar
dec
sarl
xchg
movsb
popa
jl
adc
ret
aam
mov
es
cwtl
dec
stos
mov
xchg
rcl
sbb
sub
inc
adc
jle
sbb
outsb
lock
jnp
mov
mov
xor
addl
and
xor
add
test
por
aad
hlt
loope
inc
lds
mov
test
jno
loop
jle
xor
adc
rcrb
inc
jbe
mov
js
ja
mov
pop
imul
or
xchg
xchg
cmp
inc
inc
inc
dec
mov
stos
das
in
into
fidivl
mov
fidivl
daa
in
dec
xor
inc
adc
xchg
add
mov
dec
or
push
repz
inc
inc
jecxz
dec
ret
popa
aam
push
aam
xor
pusha
outsb
lds
push
pop
and
inc
data16
jbe
mov
outsb
in
std
repz
aad
mov
out
in
push
clc
and
in
or
jae
aas
fidivs
arpl
and
mov
nop
inc
rep
dec
xchg
jae
push
pusha
sub
xor
stos
push
das
out
int
jge
and
mov
stos
mov
jmp
cmc
xchg
mov
sbb
fwait
ljmp
call
pop
pop
dec
iret
mov
loope
xor
mov
inc
pop
sub
sub
jge
mov
or
aaa
or
outsb
pop
jl
xchg
xor
jg
fimuls
mov
aam
or
lret
aam
andb
imul
and
dec
xor
test
xor
mov
imul
data16
ret
call
inc
and
fwait
xor
out
das
jmp
push
pop
imul
dec
dec
mov
roll
or
hlt
ljmp
adc
mov
stc
xchg
cmpl
cli
popf
xor
mov
mov
inc
js
push
dec
repz
stos
dec
lahf
cs
sbb
add
jb
push
test
add
or
rcll
pop
mov
daa
add
or
addr16
int
cltd
in
pushf
dec
cmp
fstpl
and
pop
jns
int3
pop
icebp
cmp
aas
ret
stc
scas
fcmovnu
fnclex
jge
daa
test
cmpsl
xchg
in
xor
jg
xchg
mov
idivb
or
dec
icebp
sbb
xor
add
int3
add
xlat
out
nop
add
stos
mov
mov
js
ss
aad
push
rclb
sahf
pop
mov
xchg
in
mov
int3
mov
decl
dec
inc
popa
and
adc
mov
dec
out
lods
push
cmpl
decb
push
jecxz
push
mov
mov
jb
jge
cmp
out
push
adcl
pop
dec
or
jb
arpl
rorb
sbb
test
mov
jg
gs
movsl
rcll
mov
shrb
jl
scas
sbb
mov
ja
push
sbb
push
or
lret
mov
out
mov
fdivl
pushf
mov
jge
stc
mov
inc
sti
pusha
int3
incb
mov
cmp
cmp
popa
dec
jl
into
sub
xchg
in
test
or
dec
cmpsl
jmp
xchg
fcoms
repz
cmpsb
xchg
out
mov
push
loop
data16
inc
xchg
and
inc
add
int3
mov
pop
lret
ret
fs
enter
sbb
cld
push
mov
pop
js
test
jb
mov
mov
gs
adc
jbe
loope
lock
jnp
inc
je
push
adc
fidivl
add
popl
pop
xchg
lahf
jp
and
pop
cmp
fwait
lcallw
xor
sbb
ret
cmc
adc
test
movaps
popf
outsb
fidivrl
mov
jle
mov
pusha
sub
repnz
sbb
push
or
jo
sub
mov
mov
rcll
inc
lret
push
jae
out
imul
pushf
jecxz
fbld
fisubrl
pop
in
dec
lcall
ljmp
ret
xchg
cmp
and
mov
jno
mov
fidivs
and
shll
in
push
xchg
fbstp
jo
in
xlat
les
mov
xchg
scas
cmp
push
mov
xor
insb
cmc
xlat
aaa
push
ja
rorb
lods
call
fdivrl
into
idiv
aaa
mov
add
dec
and
cltd
sub
xor
ja
repz
stc
xlat
dec
movsb
xchg
aad
cltd
in
mov
push
jl
jp
out
getsec
mov
insb
mov
test
cmp
cmpsb
push
push
adcb
loop
pop
cli
mov
insb
mov
out
in
pop
ja
repz
mov
pushl
pop
jae
adc
and
notl
jge
xor
mov
bound
ja
lret
fiadds
es
lret
lods
mov
push
mov
push
shlb
jbe
add
stos
inc
mov
popf
les
adc
or
pop
mov
in
push
sbbl
fldl
les
in
ret
pop
and
leave
fdivrs
insb
push
and
cld
out
cmp
nop
sub
adc
sub
jge
push
inc
add
xorps
or
rorl
push
imul
push
inc
fmuls
addr16
mov
mov
pop
out
adc
imul
xlat
outsl
mov
dec
fcompl
adc
push
xchg
mov
xchg
pop
inc
cmpl
mov
jp
add
lret
dec
ret
lea
xor
mov
cld
fs
test
sbb
mov
in
mov
hlt
addl
sub
rol
pusha
inc
loopne
pushf
or
cmpsb
mov
lods
push
insl
adc
mov
dec
mov
dec
je
stc
loope
cwtl
cmp
jo
sarb
xchg
or
sub
xlat
iret
sub
mov
out
mov
push
pop
aas
pop
inc
lret
std
xchg
mov
xor
repnz
sbb
fld1
stos
xchg
into
adc
cmp
in
and
pop
mov
mov
data16
mov
shlb
stos
mov
cmpsb
add
imul
sbb
mov
push
rcl
pushf
sub
push
push
out
xchg
out
dec
fsubrl
imul
cmp
loopne
cmp
imul
repz
dec
xchg
js
into
lret
and
sub
fs
inc
cmc
push
in
pop
adc
in
add
and
in
add
jmp
or
mov
push
cmc
bound
and
movsb
jge
stos
add
push
shll
mov
outsl
xor
repnz
fsubp
inc
pop
cmc
sub
clc
jnp
aad
mov
or
faddl
pop
mov
fistl
aaa
cmpsb
adc
xchg
mov
loop
or
xchg
fistpl
jns
push
lods
aam
stc
clc
sbb
imul
cmp
insb
mov
adc
pop
lods
add
and
dec
cmp
ret
sbb
xlat
cmpsl
inc
xchg
inc
jno
and
pop
push
mov
xchg
and
popa
mov
hlt
inc
filds
loope
and
xchg
add
leave
jmp
adc
jo
mov
add
cmp
das
mov
sahf
lea
xor
stc
cmp
xor
pop
ret
in
inc
push
test
push
inc
xchg
popf
mov
inc
imul
sub
fistpl
scas
sub
fistpll
pop
mov
or
orl
mov
aam
outsl
cmp
push
jmp
outsl
mov
fstl
cmpsb
popf
pop
shl
lret
shll
nop
xor
mov
xchg
icebp
les
sbb
xor
jb
sub
mov
add
adc
cwtl
hlt
dec
mov
add
mov
pop
insb
ret
push
es
xchg
mov
dec
aam
mov
push
rcll
lods
fstpl
ror
mov
out
add
mov
jb
repz
sbb
jo
jns
add
mov
mov
add
mov
and
or
adc
xor
enter
outsl
sub
jo
pop
loopne
jmp
not
add
scas
rcr
inc
jmp
fadds
decl
xchg
mov
mov
test
std
lcall
addb
aas
cmpsb
dec
out
es
or
cmp
mov
fidivs
inc
testb
mov
xchg
jno
pop
sbb
lods
outsb
int3
mov
push
outsb
inc
sbb
dec
mov
stos
mov
xchg
repz
xchg
daa
push
push
sbb
rcll
jmp
testb
push
pop
es
inc
loop
mov
jl
add
fwait
std
xchg
sub
add
ret
test
loopne
lret
mov
in
pop
sub
cli
mov
fsubrs
pop
sbb
jg
pop
jl
ret
and
scas
inc
gs
cli
fisubl
bound
cmpl
push
adc
inc
push
scas
in
lods
jl
pop
push
push
mov
pop
pop
xlat
inc
outsl
js
add
add
inc
fsubl
cmpsl
pushf
dec
or
pusha
in
and
aas
sub
add
movsl
clc
insb
inc
iret
push
mov
leave
pop
and
negb
xchg
inc
out
pop
ficomps
xor
pop
inc
jecxz
shlw
lea
or
or
inc
lods
frstor
mov
jne
bound
cltd
xor
lret
adc
xor
mov
mov
mov
xor
or
adc
je
dec
gs
pusha
clc
fwait
outsl
or
push
push
movsl
pusha
movsl
mov
mov
stos
xchg
xchg
mov
pop
cli
rcr
insl
mov
mov
cmp
adc
cmpsl
out
cmp
cmpsb
pop
lcall
aas
in
push
fisttps
inc
in
mov
add
pop
loopne
inc
and
enter
pop
ja
fiaddl
sbb
out
push
push
in
imul
and
icebp
rorb
mov
shll
sub
hlt
call
dec
sub
aaa
repz
xchg
movl
jl
jg
mov
sub
loope
ja
mov
cmpsl
negb
sbb
dec
js
sub
fsubrp
sbb
or
and
popa
xor
addl
xchg
push
adc
pushf
mov
mov
pushf
push
bound
scas
push
sub
cmp
popa
push
ljmp
mov
push
inc
adc
lea
dec
pop
or
out
fsubp
ja
dec
stc
fwait
jl
stc
xchg
mov
orb
jmp
jg
xor
inc
push
mov
add
ret
cmpsb
pop
jae
jne
inc
hlt
xchg
and
push
or
mov
je
push
imul
add
das
or
sbb
mov
ljmp
scas
int3
jae
add
jno
cmp
inc
inc
call
xchg
dec
imul
mov
mov
push
mov
pop
stos
mov
dec
pop
and
add
mov
xchg
test
adc
ds
jnp
adc
fs
mov
mov
jge
inc
sarb
mov
xchg
push
mov
popa
das
loop
pop
xor
call
ficomps
jne
hlt
xor
pop
sbb
pushf
hlt
cmp
and
mov
dec
mov
lret
andb
mov
mov
pop
mov
jae
add
adcl
add
xabort
idiv
push
pop
mov
in
cmpsb
arpl
sub
cmp
addr16
std
insl
jle
inc
and
cltd
dec
dec
inc
pop
jle
stos
cwtl
shrl
aam
clc
pop
xor
mov
std
sub
cs
scas
push
insb
negl
in
mov
lds
rcl
popa
loop
push
mov
push
dec
pushf
xchg
in
in
add
nop
push
das
xchg
je
int
sbb
loope
sub
dec
mov
test
mov
mov
in
mov
push
fst
stos
jge
mov
rol
xor
xchg
std
cmc
inc
mov
femms
rcl
xchg
inc
jo
loope
pop
sahf
push
cli
call
stos
adc
pop
rorl
rorl
pop
into
cmc
and
push
daa
shr
pop
push
out
stos
fs
jno
xor
cmp
xor
mov
sub
xchg
and
cmp
mov
ljmp
pop
or
adc
sub
add
cmp
push
repz
dec
xchg
jge
sarl
jnp
cld
mov
ror
xor
iret
arpl
mov
adc
or
inc
imul
adc
sahf
cmp
aad
cmpb
xchg
mov
push
lahf
and
mov
sub
jo
popa
fwait
loope
push
add
imul
lods
fldt
or
xor
mov
insb
sarl
loopne
pop
iret
xor
sub
and
mov
mov
ret
add
xchg
pop
pmullw
xchg
push
out
fdivrl
rcr
or
ret
mov
insb
xor
push
sub
sbb
sub
push
pop
mov
lds
dec
mov
lret
sahf
insb
cmp
jmp
sbb
push
incl
ficoms
cli
push
stos
mov
rcrl
push
mov
mov
mov
nop
lcall
fyl2x
push
push
jns
jo
jg
fcomps
rcrb
fdivrs
scas
popf
std
ret
and
inc
add
jg
fdivr
stc
sub
pop
inc
es
popf
in
push
mov
mov
aam
in
test
fbld
ret
fs
or
into
add
sub
scas
and
mov
cmp
lods
push
jle
scas
decb
pushf
into
shlb
sbb
jo
std
or
cld
pop
push
jns
xchg
mov
inc
outsb
incl
cmp
xor
mov
stos
mov
jl
mov
jb
lock
ss
xchg
inc
roll
cmp
enter
push
jb
addr16
fwait
mov
lock
or
ret
out
add
pop
mov
je
mov
out
inc
cmp
repz
pushf
jmp
arpl
push
mov
fmul
lock
xchg
outsb
and
fwait
sub
pop
and
pop
and
daa
add
add
imul
jg
sub
push
cltd
dec
inc
clc
jl
inc
sahf
mov
jge
div
cmpsb
incl
pop
xor
cmp
inc
dec
movsb
add
sbb
int
pop
push
mov
enter
jne
jnp
xchg
cmp
js
sub
fistps
sub
xchg
divb
and
pop
mov
cmp
adc
inc
push
adc
push
gs
mov
mov
or
inc
pop
jb
enter
adc
lock
or
cmpsb
adc
xchg
inc
movsb
rolb
scas
sub
xor
aad
cli
adc
aad
push
lods
adc
fisttpll
adc
mov
push
sahf
mov
push
jp
mov
xchg
testb
inc
pop
bound
pop
test
jbe
fmuls
sub
cwtl
sub
lahf
outsl
test
mov
mov
cmp
xlat
xchg
xor
push
ret
pushf
arpl
lock
push
sbb
shl
rcll
arpl
mov
gs
shlb
xchg
imul
adcl
shrb
ficoms
sar
das
xor
jne
mov
andb
push
ret
mov
add
mov
adcb
ret
dec
pusha
mov
loop
xor
xchg
adc
ja
mov
call
dec
xchg
ja
xor
repnz
mov
cmp
orb
cmpsl
in
inc
ret
rolb
repz
mov
in
adc
sahf
imul
mov
mov
and
fstl
imul
cmp
std
in
in
and
push
inc
js
mov
sbb
push
testb
scas
inc
jmp
lock
ret
ljmp
addl
jp
add
data16
mov
jecxz
xchg
arpl
ret
xchg
xchg
sbb
mov
inc
pop
adc
fs
clc
in
jno
cmpsl
xchg
xchg
pop
push
mov
sti
xchg
xor
jge
pop
stos
fwait
jno
or
sbb
xchg
popf
aas
mov
jae
and
scas
push
jmp
loop
mov
lods
testb
aad
xor
and
inc
call
pop
movsl
negl
xchg
mov
cmp
xchg
repz
mov
xorb
fdiv
cmp
pop
in
jae
jno
ficoml
cmp
mov
push
push
popf
out
leave
mov
xor
rolb
daa
fs
push
stos
stos
mov
cmp
jp
add
call
gs
mov
mov
scas
add
mulb
loopne
incb
adc
jecxz
adc
mov
bound
stc
lret
sti
ss
fsubp
mov
scas
xchg
or
aam
dec
insb
fadds
pop
jns
inc
lret
jne
and
lds
stos
sub
jle
mov
pop
aam
sub
xchg
add
push
daa
or
mov
lock
andb
fnstcw
jmp
mov
pop
sbb
notb
stc
jge
out
pop
in
je
cmpsl
sti
cmp
aad
and
mov
mov
inc
mov
push
pop
ficompl
stos
mov
sbb
dec
sets
sub
mov
dec
cmp
mov
dec
loopne
jle
dec
push
lea
sti
outsb
pop
sub
rcr
mov
std
rorb
call
xorb
popa
lods
jo
packuswb
outsb
jg
jmp
pusha
cmpsb
lods
sub
aaa
mov
mov
inc
dec
mov
xchg
push
add
cmp
faddl
fs
hlt
pop
jp
add
cwtl
pop
pop
adcb
jmp
push
frstor
xchg
shll
int3
imul
notl
lods
jg
stc
lock
sub
imul
and
cmpsl
sbbl
hlt
pop
fxch
sahf
inc
pop
push
nop
or
sub
jae
mov
out
sti
test
rcrl
into
jne,pt
sub
mov
mov
push
roll
insb
lahf
roll
cltd
addl
sub
push
rclb
aaa
sbb
jg
into
mov
les
fcompl
mov
icebp
xchg
fcmovne
sbb
scas
cli
mov
xchg
or
int3
call
cs
fmull
daa
cmp
mov
int
pop
push
subl
pushf
and
cmp
inc
push
and
fwait
pop
or
fdivr
orl
lock
pusha
stc
cmc
sub
dec
jo
jge
rcrl
fcompl
xor
pop
iret
add
xlat
adc
mov
outsb
push
dec
aas
sbb
mov
sbb
or
aaa
pop
adcb
lods
fdivs
fsubrl
add
fmull
add
mov
daa
lods
mov
mov
inc
stos
repz
gs
and
or
jle
xchg
push
movsb
insb
aam
mov
adc
fstpt
js
or
sahf
mov
xor
cs
lods
mov
shrl
sbb
hlt
outsb
jl
rolb
mov
jmp
inc
push
mul
and
imulb
addb
add
mov
or
fs
fiaddl
stos
jno
or
pop
jg
pushf
mov
rorl
xor
mov
lods
imul
addr16
sub
push
popf
xchg
dec
call
cmp
mov
xor
push
mov
cli
and
dec
lret
xchg
aad
mov
aaa
jp
inc
repz
arpl
sti
push
cmp
mov
push
sbbl
pop
xor
push
jae
jbe
xor
int3
fwait
scas
scas
xchg
pop
adcl
out
pushl
in
lea
and
adc
daa
cmpsb
adc
jmp
hlt
inc
in
cli
xchg
xor
cs
idiv
xor
call
dec
inc
ss
test
test
insl
andl
mov
xchg
lods
jg
mov
mov
inc
fisubs
pop
cwtl
jp
push
into
nop
jae
in
hlt
push
add
stos
pop
cmp
sub
nop
paddsb
push
rcrl
not
jnp
test
xchg
cwtl
mov
rol
jne
out
dec
inc
xchg
pusha
xchg
filds
push
cli
icebp
pop
test
in
dec
push
adc
mov
adc
xchg
outsl
ljmp
or
jbe
xchg
insb
and
mov
push
loopne
dec
inc
icebp
pushf
push
sarl
out
lret
xchg
pushf
adcl
dec
into
and
mov
jne
lret
shl
pusha
push
xor
insl
xor
jmp
jns
sbbb
mov
das
xor
rcll
das
cli
pop
test
push
push
rorl
cli
mov
out
ret
rorb
call
fistps
pusha
inc
nop
int
jecxz
bound
clc
fldl
insb
mov
stc
mov
xor
inc
mov
ja
es
and
in
fisubl
jmp
sub
inc
test
push
fisubs
push
jae
pop
bnd
je
int3
loop
stos
outsb
aad
ror
mov
or
rorl
nop
push
stc
inc
sub
test
inc
mov
aas
ss
ja
push
stos
inc
xchg
mov
cwtl
cld
dec
lret
dec
js
push
xchg
adc
pop
jne
bnd
hlt
pop
pop
mov
push
ret
or
iret
out
inc
in
repnz
mov
lods
lret
mov
sbb
sbb
cltd
jecxz
nop
shll
lahf
jbe
jp
xorl
leave
movsb
push
mov
bound
cs
loop
ja,pn
or
xchg
loopne
fsts
push
cmc
mov
jle
sub
and
lahf
add
shll
add
mov
push
mov
sbb
and
push
fwait
adc
fcompl
or
xlat
push
je
lds
or
jb
jb
cli
mulb
ret
sbb
mov
js
nop
inc
adc
mov
xor
mov
dec
ja
shrl
mov
and
subb
jmp
lcall
sub
cwtl
aam
and
cmpsb
stos
pop
inc
rclb
mov
sarl
jle
das
sbb
jge
jo
mov
xchg
pop
filds
or
out
jg
push
cmp
gs
pusha
add
and
jns
push
add
das
xchg
int
or
js
repz
mov
out
dec
push
mov
sub
arpl
insl
fwait
shlb
shl
jns
pop
dec
mov
push
movsb
daa
mov
scas
mov
out
adc
in
rorb
or
lods
mov
xchg
dec
pop
xchg
mov
fildl
mov
int
xchg
mov
mov
imul
jbe
lret
orl
mov
mov
shr
dec
stos
in
pushf
jp
out
mov
cli
test
mov
mov
clc
adc
mov
sub
sub
lods
dec
fwait
or
movsl
mov
out
sub
fwait
and
pushf
das
push
jle
sbb
mov
dec
push
loop
fisttps
xchg
sbb
and
cld
and
popa
mov
fidivl
adc
aas
mov
cmpsl
inc
repnz
mov
mov
push
int
dec
lods
and
adc
ret
lock
ds
push
lret
out
cmp
notb
or
daa
sub
mov
sub
in
mov
arpl
and
push
jecxz
inc
xchg
fwait
icebp
push
outsl
fisttpll
popa
aam
sub
push
xlat
inc
jp
mov
adc
xchg
int
in
test
xchg
push
sahf
sub
sahf
xor
in
ja
lahf
xor
sbb
sub
mov
aas
imull
push
sbb
xchg
movsl
iret
pop
inc
shlb
mov
jnp
and
mov
sbb
repz
imul
imul
inc
out
pushf
xor
dec
jno
inc
popa
cmp
addr16
add
lret
pop
add
add
cmp
xchg
mov
mov
fisttps
jmp
sarl
mov
in
shl
pop
xchg
jbe
roll
inc
push
int
cli
enter
out
cmp
mov
dec
nop
cs
inc
aad
cmp
ret
xor
loop
adc
gs
xor
lods
sbb
std
adc
and
mov
loope
outsl
xchg
add
clc
out
jae
in
push
std
sub
movsb
bound
scas
addr16
pop
jge
or
sub
pop
and
adc
shlb
insl
sbb
dec
xor
jp
and
mov
sub
adc
mov
xor
adc
icebp
pop
mull
pop
cltd
cwtl
imul
pop
xchg
push
mov
divl
add
cmpsb
sbb
pop
or
and
mov
jbe
std
mov
imul
scas
scas
push
jmp
je
out
inc
dec
in
add
xchg
fwait
imul
movsl
imul
sbb
push
and
mov
mov
xchg
xchg
cmc
pop
leave
enter
adc
test
xor
pop
add
ret
adc
imul
pop
mov
adc
sbb
xor
pop
inc
add
jecxz
int3
andb
mov
jle
inc
scas
pusha
cmp
lods
mov
stos
ds
ret
inc
xchg
or
mov
je
push
rclb
or
dec
mov
mov
pusha
gs
or
xchg
je
adc
rclb
push
bound
popa
out
push
mov
dec
adc
ss
sbb
or
jecxz
test
mov
or
jns
xchg
and
dec
inc
sub
fiaddl
lock
mov
add
bound
dec
pop
out
adc
outsb
repnz
jecxz
imul
inc
out
cli
loope
pop
pop
in
adcb
stos
jb
cmp
inc
inc
xchg
test
sbb
jle
popf
jae
pop
inc
and
push
pop
xlat
xor
imul
in
lds
sub
push
push
push
mov
fwait
popf
add
sti
mov
ljmp
push
mov
rorb
pop
lahf
out
neg
bound
sbb
xchg
hlt
fdivl
adc
and
push
jbe
adc
push
in
xchg
cmp
sub
mov
cmp
inc
push
jae
push
aam
pop
pop
hlt
jecxz
jbe
push
dec
dec
mov
imul
out
stc
cltd
in
dec
mov
iret
jbe
cld
insb
fimull
mov
cmp
out
mov
mov
jl
push
or
loopne
inc
inc
les
xlat
test
les
jg
je,pt
pop
shl
pop
pop
inc
mul
add
jecxz
mov
sbb
cwtl
or
mov
xor
pop
insb
fbstp
add
imul
sub
sbb
leave
out
mov
data16
adc
jo
xchg
push
lcall
sarb
leave
cmpw
in
mov
lret
ss
stos
sbb
es
adc
adc
mov
pop
mov
test
fmuls
and
lods
add
inc
pop
insl
test
pop
lret
xor
push
out
in
leave
push
leave
es
mov
jp
jecxz
mov
cld
mov
daa
iret
movl
dec
add
daa
add
aas
or
jmp
mov
idivb
inc
aad
fdivl
jle
in
dec
jle
mov
mov
cmp
jge
sbb
repnz
lea
inc
addr16
andb
jbe
sub
jo
sub
inc
iret
bound
outsb
loope
sub
pop
fisubs
sarl
aaa
fnsave
lret
mov
or
xlat
pop
fldt
dec
jbe
cmpsl
mov
sub
push
into
mov
sub
xor
out
sahf
sbb
pop
lds
inc
mov
xor
sub
into
push
inc
push
cmp
pushf
push
pop
loopne
cld
or
push
stos
jb
fidivrs
sub
jle
mov
push
cmpsl
stos
pop
test
jae
xchg
insl
mov
pop
add
cmp
gs
in
fidivl
xor
adc
jg
jp
fnstsw
xchg
jmp
dec
xchg
dec
loopne
jecxz
pop
adc
pop
outsb
in
sbb
mov
mov
xlat
sub
insb
xor
and
lea
clc
cmp
hlt
imul
add
xchg
jg
mov
dec
outsb
clc
xchg
cmp
or
inc
and
iret
dec
fwait
aas
jge
cwtl
or
push
add
outsb
into
jle
dec
stc
lcall
sbb
mov
gs
scas
cbtw
cmpl
push
jle
xchg
push
or
test
in
xchg
xor
cwtl
or
fiaddl
orl
es
jae
cmp
pop
xchg
outsb
mov
std
mov
movsb
xor
or
dec
rorl
jb
or
ds
sub
adc
inc
call
inc
pop
pushl
mov
mov
dec
mov
cmp
dec
out
mov
add
cwtl
lcall
push
repnz
movsb
mov
jo
add
mov
pop
iret
pop
sbb
hlt
mov
mov
xchg
leave
inc
sbb
lock
sub
inc
rcl
iret
or
fstpt
ja
or
push
xchg
jbe
lret
mov
mov
jmp
cmp
andb
add
cmp
pop
insb
jno
dec
popa
enter
xchg
mov
loopne
fwait
outsb
mov
aam
in
sbb
jecxz
jmp
xlat
xchg
mov
and
movsb
jne
sub
pop
jb
pop
in
icebp
movl
push
cmpb
loopne
orl
mov
mov
and
sbb
iret
jle
sbb
stc
dec
test
sbb
cltd
push
inc
scas
push
repz
xchg
jns
orb
jo
mov
add
pop
cwtl
mov
pop
cmpsb
repz
push
cltd
push
js
inc
pop
jno
cmp
push
dec
and
or
jb
lods
xchg
scas
jmp
inc
icebp
mov
sbbb
stos
dec
into
xchg
adc
xchg
dec
push
jns,pt
sbb
cwtl
pop
test
cwtl
rorl
jmp
inc
sub
ja
hlt
inc
sti
in
pop
add
int
dec
jae
test
shlb
mov
adc
adc
loopne
and
enter
dec
mov
ja
cmc
insl
outsb
iret
cmp
cs
jb
fwait
orl
scas
jl
push
js
mov
add
xchg
leave
or
addr16
push
push
add
push
aaa
lret
pop
mov
push
sbb
dec
pop
iret
jp
int3
lret
mov
andb
lcall
adc
imul
movsl
cmp
inc
jp
pop
loope
sbb
xchg
inc
xchg
inc
into
push
sbb
adc
movsb
fisttpl
xlat
es
mov
jp
pop
sar
lock
mov
fdivs
addr16
jae
sbb
mov
add
sbb
or
jecxz
lea
outsb
fiadds
loop
out
mov
cmp
or
xchg
loope
or
xchg
pop
mov
mov
int3
and
cltd
loopne
jmp
jns
scas
mov
and
mov
lret
xchg
adc
es
shrl
stos
and
js
je
jl
rcrb
mov
jo
jae
jne
adc
push
mov
xchg
mov
jmp
or
subl
imul
outsb
dec
fildll
sub
pop
mov
mov
cmc
xor
adc
jmp
insl
jp
fists
mov
pop
mov
es
das
rclb
push
mov
movsb
fiaddl
pop
sbb
stc
push
add
inc
mov
jb
pop
mov
ss
ds
lcall
in
jecxz
lcall
and
hlt
dec
dec
pop
into
cmp
in
dec
sub
or
popf
imul
mov
pop
fnstsw
or
mov
sarb
sbb
std
outsb
mov
movsb
hlt
mov
lahf
xor
dec
or
sbb
outsl
leave
mov
lods
mov
sti
adc
sub
test
xchg
addr16
sbb
add
jl
scas
add
ror
mov
fdivrs
dec
ret
mov
rcr
fsts
mov
mov
and
mov
adc
xchg
sti
call
aaa
sub
push
ss
std
das
cs
bound
ljmp
mov
cltd
and
sbb
dec
push
dec
sbb
shl
cltd
push
mov
into
or
cmp
aas
or
imul
test
or
sbb
inc
test
clc
push
dec
push
dec
adcb
mov
pop
outsb
rorb
fwait
pop
xor
out
mov
sbb
loop
inc
outsl
adc
pop
or
aas
cmc
cmpsl
movsb
jno
addl
das
jb
add
mov
pop
ret
loopne
push
mov
ja
xchg
ja
cmp
pop
daa
aas
lock
shll
cmpsb
sbb
cmpsb
sub
lret
jg
rcr
adc
push
imul
and
cs
hlt
mov
mov
sti
outsl
mov
insb
mov
andl
hlt
sub
inc
ret
add
in
es
cmp
dec
into
and
shrb
in
gs
out
fidivrs
push
push
xor
insl
fcoml
xchg
mov
lret
int
mov
mov
mov
xchg
or
sub
cmpsb
addr16
lock
in
inc
sahf
outsl
lods
xchg
inc
add
outsl
pop
mov
pop
movsb
out
jp
cli
mov
or
jp
mov
or
inc
pop
mov
lret
xchg
int3
aam
xorl
xlat
xchg
lret
cld
cli
jge
popa
sbb
push
mov
inc
mov
mov
and
in
loope
icebp
inc
xlat
je
pop
mov
popa
dec
inc
xlat
mov
or
or
ss
cmpsl
movsbl
test
sub
xchg
fldcw
add
iret
lret
imul
loop
icebp
sti
jnp
es
pop
sbb
ljmp
xor
push
mov
mov
mov
mov
ret
xor
test
stc
xor
pop
add
sbb
outsl
out
das
pop
xchg
hlt
pmaddwd
sub
nop
add
xchg
cmc
add
dec
mov
mov
int3
jge
lcall
inc
add
xchg
mov
mov
clc
arpl
pop
cmp
sbb
fs
sub
xor
in
pop
cld
sub
mov
inc
and
movsl
mov
pop
icebp
adcb
dec
or
add
popf
lret
pop
lcall
es
xchg
add
cli
jg
std
push
mov
mov
xchg
jmp
insb
push
lods
rorb
push
out
insb
bound
pusha
inc
add
sbb
and
xor
icebp
out
inc
and
inc
pop
ja
dec
lret
dec
or
pop
cltd
repz
test
inc
push
pop
lcall
adc
scas
add
dec
mov
cmp
outsb
jmp
std
out
pop
mov
mov
mov
out
sbb
cmp
std
adc
jbe
xor
sub
add
pop
faddl
xor
les
cwtl
int3
adc
in
ds
pushf
pop
mov
icebp
adc
ja
shlb
pushf
aad
adc
inc
les
sbbl
push
loop
jae
sub
mov
cmp
ficompl
test
mov
xchg
and
add
add
scas
js
inc
push
in
test
adc
lret
popa
jl
sbb
xchg
repnz
add
je
cmp
fwait
hlt
fildll
sbb
sub
lods
jecxz
jg
xchg
mov
rcrl
adc
and
or
or
in
jns
jge
out
stos
jp
insb
xor
mov
subl
cs
jne
add
aam
outsb
mov
mov
jo
mov
fsubrl
inc
jecxz
addr16
lods
inc
dec
fnop
clc
xor
pop
fidivl
in
iret
incl
ret
sbb
icebp
sub
dec
mov
push
mov
ds
mov
imul
mov
rcll
sub
nop
ret
pushf
enter
xchg
push
mov
xor
test
jmp
mov
push
and
or
stos
mov
jnp
outsl
clc
jno
imul
call
scas
mov
xor
push
cmpsl
cmpsl
sub
inc
add
stc
scas
fs
int3
add
out
jg
rcll
negl
in
loopne
jl
std
add
push
pop
scas
insl
imul
ret
out
and
inc
lahf
fwait
or
es
sub
push
add
fadds
xorb
xor
push
xchg
cmp
cli
mov
frstor
mov
bswap
ret
fadds
lret
mov
or
shlb
pop
push
js
jbe
dec
sub
and
adc
xchg
pop
pop
fwait
iret
arpl
mov
xchg
dec
and
mov
inc
mov
jo
mov
and
idivb
shlb
sbb
pop
jno
add
cltd
movsl
sbbl
cmp
mov
pop
mov
hlt
orb
mov
xor
xor
rorl
enter
mov
push
idiv
test
lea
fst
mov
mov
movsl
xor
dec
test
addr16
cmp
cmp
ret
loope
push
xchg
sub
pop
adc
pop
aas
cmp
outsb
es
xorl
xor
push
icebp
mov
ret
pop
sahf
mov
jne
js
add
xlat
frstor
sar
repz
jle
pop
dec
or
jmp
rorb
and
dec
icebp
movsb
dec
mov
rcrb
outsl
aas
mov
jge
adc
outsb
jge
xchg
mov
push
call
jl
push
fs
and
xlat
stos
fcmovb
mov
movsb
in
scas
adc
sub
inc
lret
fiaddl
mov
pop
or
sbb
pop
and
jb,pt
adc
or
pop
sub
inc
cmc
inc
sub
mov
add
repz
mov
dec
or
movsb
rcr
push
add
lret
cli
shll
fcompl
test
add
or
push
daa
imul
aaa
cmp
nop
ss
dec
sub
cmpsb
push
movsl
fcmovu
das
repnz
or
enter
in
ror
and
scas
cmc
push
and
push
ret
data16
xchg
cmp
inc
jmp
push
mov
jbe
test
and
rcrl
fldcw
push
push
xlat
inc
sbb
mov
push
movsl
lods
and
jae
repz
gs
and
inc
push
sub
mov
xchg
mov
push
iret
mov
push
mov
test
sbb
iret
dec
push
adc
dec
pop
pop
adc
lds
pop
into
adc
adc
xchg
pop
stos
push
push
jg
mov
ret
pop
imul
aaa
lock
mov
jae
gs
mov
xchg
xchg
icebp
sahf
or
cwtl
jb
jmp
stos
in
inc
cld
and
push
mov
and
movsl
insb
out
loope
add
in
enter
pop
push
pop
in
xor
int
aad
incb
int3
insl
xchg
mov
jg
insl
loope
out
push
push
adc
ljmp
fisttps
and
push
sbb
mov
cmpsb
gs
and
cmpl
test
mov
adc
pop
cmp
push
imul
outsl
iret
testl
jp
pop
test
cld
lock
jne
dec
js
fnstcw
mov
or
ret
loop
iret
and
xor
sub
mov
pop
aam
jbe
cmp
sub
adc
inc
lea
inc
push
push
push
out
jne
mov
std
movsb
arpl
mov
mov
test
into
das
ja
subb
outsb
repnz
rcrl
mov
sbb
dec
mov
movl
int3
lea
je
out
mov
iret
mov
fcmovbe
add
aas
push
lods
pushf
notl
adc
lcall
mov
or
sbb
sub
mov
adc
rcrl
xlat
ss
je
out
mov
mov
loope
imul
shl
mov
cwtl
dec
int3
js
jle
popaw
mov
dec
cmp
hlt
lahf
mov
xchg
lods
adc
push
out
mov
popa
int3
add
add
fwait
sbb
inc
outsl
stc
test
cmc
and
imul
aaa
ja
push
ret
dec
pop
jl
push
push
push
inc
jns
and
nop
jno
rclb
dec
mov
mov
outsb
js
add
lcall
out
jae
push
push
or
pop
dec
out
dec
add
in
mov
jb
inc
insl
pop
stc
sbb
push
stos
outsb
xlat
mov
mov
aad
je
loopne
and
pop
test
fsts
xor
xchg
cmp
in
lcall
mov
sub
repz
es
ljmp
mov
cwtl
jb,pt
cs
setb
ret
in
mov
into
dec
inc
xor
aaa
dec
and
mov
lock
cwtl
mov
rcr
popa
in
and
adc
out
mov
lods
cmpsb
add
aaa
inc
or
insb
scas
pushl
sahf
and
xor
add
push
in
and
sahf
nop
pop
mov
mov
push
dec
sbb
cwtl
lret
nop
jg,pn
sbb
lea
mov
cmpsb
scas
pop
outsl
jbe
cwtl
push
pop
or
xchg
add
out
jb
call
dec
subb
xlat
jo
ret
cwtl
lea
add
push
mov
push
movsb
aas
and
and
push
sbb
loop
xchg
mov
fwait
sbb
xchg
shrl
ss
lods
in
test
sbb
sti
mov
inc
scas
fisubs
inc
mov
rcl
push
loopne
or
adc
xchg
jge
jp
imul
push
lret
int
insl
into
in
xchg
insl
jo
movl
movl
lcall
fwait
and
ljmp
repz
inc
sarl
pop
icebp
sbb
daa
mov
ret
sub
test
sub
pop
or
jmp
inc
rolb
shll
mov
ja
and
push
pop
test
xchg
jmp
cmp
fdivl
rcl
in
sbb
in
insb
mov
adc
fcmovnbe
mov
jnp
mov
push
cmpsl
mov
dec
add
jo
jo
xchg
mov
mov
lock
cmp
mov
mov
aaa
rol
ret
push
hlt
pop
xchg
test
adc
xor
iret
and
les
push
mov
pop
insb
sub
push
pop
hlt
aaa
imul
cltd
xor
or
mov
lock
xor
and
or
fwait
das
inc
xor
xchg
jo
faddl
imul
aad
in
or
xchg
mov
jl
mov
or
push
mov
mov
jg
push
out
jne
arpl
iret
push
mov
enter
orb
bound
dec
adc
xchg
jg
pop
inc
mov
lock
mov
push
std
mov
insl
stos
je
outsb
jns
ljmp
add
sti
pop
outsl
xor
or
pop
push
popa
lds
nop
pop
scas
in
mov
lds
or
fldl
push
mov
mov
jmp
leave
mov
out
mov
sub
pop
aas
jl
aaa
arpl
pop
jecxz
inc
rorl
dec
dec
cld
popf
xchg
int
sahf
leave
push
fdivrs
mov
push
lods
xchg
mov
cmpsl
or
sbb
int
rcrb
jne
fs
lock
add
adc
in
leave
push
rcrl
xchg
ret
cmp
jne
movl
pop
add
lret
jmp
cmp
pop
dec
mov
jnp
cmp
lret
movsb
mov
mov
pop
aad
sub
push
mov
dec
xchg
mov
sub
mov
mov
sbb
pop
or
cmp
add
pop
adc
cwtl
cltd
aaa
pusha
call
adcb
mov
dec
in
movsb
nop
push
or
lret
shl
cli
jae
sub
pop
cmpsl
dec
dec
lock
or
hlt
xor
push
fiadds
dec
stc
out
mov
pop
mov
push
jns
pop
rorb
test
ret
nop
ja
fnsave
xchg
jecxz
jecxz
jge
int
pop
fwait
rorl
icebp
mov
sub
gs
mov
cmp
inc
inc
mov
mov
ljmp
or
mov
jno
and
cmp
adc
mov
lock
ja
xchg
fimuls
shrl
mov
in
xchg
inc
xorl
push
mov
and
aaa
leave
add
pushf
add
jle
cltd
loope
mov
push
cmpsl
and
mov
jns
scas
or
add
sub
insb
insb
scas
lea
notb
daa
mov
mull
inc
mov
adc
and
movsb
push
cmp
aam
fwait
pop
pop
sahf
cmp
push
dec
jb
insb
sub
jae
lret
mov
ds
ljmp
mov
inc
xchg
and
orl
out
mov
push
clc
add
and
sahf
mov
movsb
xchg
sar
xchg
scas
jle
orl
inc
fwait
movsl
mov
mov
cmp
fs
call
imull
stos
shrb
sbb
mov
sub
add
out
sub
xlat
xchg
in
icebp
es
push
cltd
sbb
sub
int
fidivs
pusha
mov
add
shlb
out
jno
mov
push
cwtl
leave
sbb
sti
test
out
pusha
jl
pop
xor
insb
sub
stc
mov
inc
fsubl
rorl
inc
inc
jb
notl
std
push
rcl
inc
mov
int
jnp
jbe
pop
jae
push
shll
pop
sub
sbb
out
aam
outsl
mov
fwait
into
cmc
ficoml
shll
pushf
das
fisttpl
inc
jle
jl
pusha
mov
jl
es
or
out
in
std
inc
fdivl
pusha
xchg
and
repz
push
mov
test
addr16
adc
je
mov
dec
test
das
bound
dec
gs
sbb
imul
mov
mov
pop
xchg
push
insb
test
pop
pop
or
mov
jnp
adc
std
xor
jmp
popf
dec
sub
pop
pop
pop
sub
mov
xor
lret
jbe
mov
lcall
add
popa
outsb
repnz
sub
ljmp
repnz
arpl
mov
jle
lret
mov
test
stc
cmpsl
int3
out
xor
fninit
imul
in
pop
cmp
mov
sub
jb
inc
mov
lods
add
rorb
inc
les
movsb
int3
adc
outsl
leave
add
addb
inc
cmp
pop
xor
dec
xor
lock
xchg
or
xchg
xor
ja
ljmp
xor
ficoms
cld
movsl
stos
shlb
es
fdivs
mov
pop
jmp
xor
scas
scas
push
ss
test
sub
mov
add
lds
aam
or
aas
jle
adc
cmp
pop
adc
das
popf
fsubr
movsl
xchg
loopne
mov
xchg
int3
mov
cmpsb
inc
int
sarl
jg
xchg
pushf
xor
aam
out
cmpsl
sbb
xchg
mov
sahf
inc
cmp
add
add
ret
leave
mov
xchg
repz
repz
repz
mov
pushf
dec
cmp
or
jne
jbe
pop
jle
test
push
jb
mov
stos
pop
sub
test
or
push
ds
test
mov
cmc
js
hlt
sbb
mov
fdivrs
push
mov
cmp
xor
call
push
adc
xchg
cmp
add
push
pop
into
ficomps
or
jbe
aam
data16
ss
or
push
cmovo
inc
dec
jg
mov
mov
mov
push
push
iret
inc
and
js
shrl
pop
jl
fs
loop
or
jne
test
ficoms
cld
insb
cmp
sub
nop
xchg
sub
orl
fisttps
inc
cmp
repz
fs
sub
enter
push
repnz
cld
push
insl
outsb
cmp
mov
repnz
ficoml
or
pop
push
mov
sbb
stos
into
sbb
or
add
sub
out
mov
pop
jnp
jns
mov
pop
cld
cmpl
lods
dec
cmp
mov
push
shlb
jne
shlb
lods
movsl
cmp
cmpb
out
repnz
sahf
add
sti
adc
push
add
imul
jne
cmp
in
sbb
int
dec
mov
test
dec
fidivrl
adc
in
testl
push
fs
jne
ljmp
mov
jne
add
adcb
fstps
icebp
sti
shlb
data16
cmp
fists
lahf
enter
fnsave
jne
push
lret
inc
insl
mov
test
push
pop
std
repz
ss
add
cmp
dec
push
sub
hlt
xor
jne
mov
out
orb
sub
xor
jo
and
cmp
jecxz
push
xchg
xor
sub
mov
cmp
nopl
xchg
and
pop
inc
ficoml
negl
and
mov
popa
inc
push
mov
fsubl
xor
imulb
mov
jnp
filds
add
xchg
shr
mov
add
cmp
in
add
dec
fcomps
add
ror
dec
dec
in
sub
cs
nop
std
imul
jge
pop
idiv
inc
or
mov
outsb
cmp
sbb
std
test
push
ficoms
jb
mov
mov
sbb
ds
sub
mov
lcall
fisubrs
adc
loopne
mov
repz
push
add
cmpsb
xor
jnp
xor
mov
sub
test
jge
addr16
out
xor
cmpsb
inc
aad
mov
iret
sub
xchg
arpl
in
in
aad
and
ja
dec
sahf
adc
mov
fnstcw
test
movsb
out
adc
pop
mov
in
shll
lea
or
rcr
and
push
ret
adc
stc
xor
stos
pop
inc
xor
mov
mov
inc
hlt
jle
jmp
aad
sti
adc
fdivr
push
dec
cmpsl
add
push
push
xorl
xchg
test
push
mov
mov
insb
add
sub
cmp
cmp
adc
nop
dec
enter
push
xchg
xchg
lods
sub
jge
mov
lods
or
dec
imul
nop
ret
adc
insl
mov
in
jae
mov
hlt
cmp
push
loope
xor
mov
insl
fbld
push
movsl
sbb
push
hlt
cmpb
xchg
xchg
push
int
shr
push
leave
mov
xchg
call
or
mov
inc
push
bound
fildl
inc
push
icebp
int3
pushf
inc
adc
jge
fs
int
pop
mov
sbb
jo
push
lock
adc
movsl
sti
pop
mov
sub
push
ret
test
cmp
pop
lcall
mov
fsub
and
push
push
cli
insl
push
test
frstor
fwait
xor
pop
or
sub
push
dec
ss
enter
xor
add
xchg
loopne
push
cltd
sub
iret
and
mov
das
ljmp
out
dec
push
fs
add
stos
push
add
sarl
jge
divl
inc
sbb
pop
pop
mov
cmovnp
and
dec
sub
mov
daa
shl
outsb
push
mov
xchg
lods
in
push
mov
lods
shll
pop
dec
fxch
clc
in
js
xor
and
adc
add
sub
dec
adc
aad
je
pop
jl
aaa
jp
mov
in
pop
or
sub
push
mov
add
push
movsl
call
mov
ret
fldcw
and
mov
sbb
ret
push
shl
out
enter
loop
dec
cmp
mov
jle
fldz
inc
out
test
add
test
ja
scas
mov
or
fcomip
add
sbb
push
ror
cmp
xchg
sbb
fnsave
dec
leave
imul
mov
iret
dec
insb
rorl
and
xor
and
addr16
lock
push
mov
leave
mov
cmc
mov
xchg
jge
pushf
lahf
xchg
jae
pop
pop
push
pop
adc
outsl
sahf
imul
je
mov
and
mov
mov
ret
movsb
jno
and
lds
add
adc
inc
or
rcr
inc
addr16
add
or
negb
xor
add
insl
daa
lods
mov
das
jb
addb
jg
cmp
inc
jo
iret
ja
adc
jbe
xchg
jl
js
xchg
in
mov
mov
fstps
sti
imul
and
dec
push
xlat
sub
frstor
insb
sub
add
inc
jno
insb
jno
sbb
mov
inc
push
sub
push
cmp
xlat
pop
mov
pop
mov
sub
cmp
and
xlat
ljmp
popf
imul
mov
dec
sub
aas
outsl
push
push
inc
sbb
dec
push
repnz
call
clc
pushf
out
mov
jg
mov
cwtl
std
es
xchg
xorb
add
call
call
mov
aaa
adc
cmp
ficoml
pop
xchg
rcrb
mov
push
addr16
xor
dec
or
ss
mov
sbb
or
rclb
aam
mov
xchg
out
inc
push
jmp
adc
inc
adc
sub
test
das
cmc
pop
add
mov
in
ja
in
int
sbb
out
xchg
mov
xchg
jecxz
call
inc
scas
xchg
mov
ret
or
add
lahf
and
jbe
dec
sbb
adc
sbb
push
test
test
add
test
leave
xchg
icebp
add
aam
dec
add
loopne
dec
out
mov
jno
xchg
dec
lret
adc
or
add
inc
xor
xor
push
xchg
out
or
les
in
inc
sub
xchg
int3
cmp
cmp
xchg
jmp
imul
div
scas
mov
inc
cwtl
dec
orb
das
pusha
dec
stos
lods
sub
xchg
pop
or
fsubrl
rorb
dec
lock
mov
pop
mov
push
cmp
loop
xchg
orl
or
and
jmp
imul
lods
add
dec
sti
lahf
loop
idivb
mov
fcoml
dec
cltd
or
les
xchg
out
inc
insb
mov
gs
dec
or
xchg
push
pop
mov
or
push
jle
mov
mov
cmpsl
int3
mov
mov
in
out
fdivrl
sarb
xor
ss
xor
adc
inc
lret
int3
mov
mov
lret
xchg
xchg
pop
pop
andb
mov
fbstp
jae
sbb
ds
cmc
in
pop
xor
push
cmpsl
shll
call
ss
xor
mov
scas
adc
sub
mov
and
sbbl
inc
push
rorl
test
sub
aam
mov
loop
inc
xlat
enter
pop
pop
test
rorb
dec
js
in
dec
push
imul
outsl
mov
lock
pop
push
mov
inc
jmp
js
sub
mov
enter
mov
std
push
cmpsb
pop
cmpsl
jo
push
je
jb
push
jae
jl
jo
dec
das
jne
dec
lods
dec
pop
adc
mov
mov
icebp
or
ficompl
insl
pop
cmpsb
or
inc
or
scas
sbb
mov
pusha
jl
push
add
je
xchg
mov
xor
daa
sti
mov
movb
cltd
jo
test
mov
xor
fcmovnb
sub
mov
pusha
iret
jg
xor
daa
mov
pop
test
sbb
lods
fnstsw
mov
jno
pusha
out
stc
lcall
fnsave
cmc
xor
sub
xchg
or
insb
ds
pop
std
lcall
lret
dec
mov
pop
push
dec
push
jle
out
mov
lea
popf
jae
sbb
aam
add
jg
xor
push
jne
loopne
pop
cwtl
das
insb
xchg
and
into
mov
xchg
xor
mov
jmp
xor
adc
iret
shll
pop
xor
call
and
loopne
sahf
jmp
xlat
adcb
sub
fsubs
pusha
in
add
cmpsb
les
push
xor
arpl
jno
add
inc
xlat
jle
add
mov
int
sar
mov
xchg
pusha
jle
loope
dec
or
sbb
mov
mov
and
test
and
scas
xorl
outsb
movsb
xor
adc
mov
cmp
lea
mov
lds
and
jecxz
pop
cmc
popf
leave
loop
mov
cli
sub
pushf
incb
cmpsl
cmp
sarl
movsb
adc
int
inc
jl
dec
addr16
int3
ss
pop
jmp
inc
cld
or
pop
iret
push
int
jmp
sub
or
dec
cli
pop
iret
adc
xor
mov
add
sbb
adc
mov
out
mov
adc
xchg
mov
push
xchg
pop
mov
inc
jmp
js
shlb
cmp
dec
sub
outsb
pop
test
inc
in
je
scas
mov
shlb
xor
roll
aad
adc
cld
ds
mov
fdivrs
leave
fisubrs
or
nop
lods
push
mov
dec
loope
scas
nop
jp
mov
push
mov
in
jmp
pop
xorl
cmp
mov
sub
jo
mov
jecxz
shlb
pop
lret
push
xorl
stos
movl
sub
pop
in
lcall
imul
push
jnp
dec
dec
add
out
dec
imul
std
scas
mov
cld
fisubrl
jl
stos
movsb
int3
mov
insb
test
xchg
ss
outsb
inc
sub
mov
xlat
mov
mov
sbb
xchg
mov
inc
scas
hlt
jge
xor
adcb
add
or
lds
fidivs
mov
push
js
cmp
rcll
mov
sbb
mov
movsl
mov
xchg
aam
push
pop
loop
cmp
aaa
adc
push
add
cmc
fiadds
icebp
sbb
xor
xchg
or
lock
sub
or
ret
sub
inc
dec
jb
cmp
nop
pop
jne
jmp
nop
cmp
sub
mov
mov
js
pushf
cld
or
into
jno
xchg
xchg
sar
mov
jnp
ret
jl
test
and
stos
add
xlat
jae
push
mov
mov
jl
and
mov
xlat
xchg
xchg
gs
hlt
adc
fdivl
or
xchg
inc
xorb
cli
fwait
adc
jo,pt
dec
pop
mov
xchg
and
cmp
pop
movsb
pop
inc
pushf
add
xchg
shll
push
cltd
imul
aaa
push
lret
jno
fnsave
rorb
into
repnz
sub
in
mov
fisubrl
mov
loopne
jge
and
add
jg
add
or
mov
mov
bound
inc
inc
jp
xor
inc
call
gs
lret
nop
and
sub
xor
pop
jbe
xlat
push
jno
insl
dec
jge
insl
mov
mov
js
mull
mov
es
push
cmovp
sahf
mov
add
xchg
and
inc
nopl
xchg
insb
ja
add
sbb
inc
popa
stos
les
sub
pop
pushf
add
jo
pop
fs
adc
sub
jge
sbb
adc
inc
jmp
je
push
idivb
fnstsw
dec
xchg
aad
icebp
movsl
xchg
dec
repz
jmp
adc
mov
lods
pusha
dec
sbbb
les
inc
xacquire
inc
xchg
cwtl
or
mov
pop
fildl
hlt
fildl
push
xchg
cmp
push
in
or
bound
aaa
mov
sub
pop
sub
mov
arpl
fwait
xor
frstor
or
lret
jmp
mov
data16
push
push
cmpsl
add
loope
inc
test
jp
out
das
out
xchg
dec
add
pop
fsubrl
cmp
mov
js
int
mov
enter
cmp
pushf
rol
subb
in
test
lock
fstpt
into
xor
push
bound
cmc
popf
shll
out
mov
xlat
and
std
cmpl
icebp
dec
and
jb
outsb
adc
adc
or
lcall
mov
lods
jne
and
lods
daa
sti
jmp
sub
pop
mov
or
test
scas
arpl
sub
addl
sar
and
mov
push
push
out
xchg
dec
or
rol
and
bound
dec
pop
daa
cmp
movsl
fs
pop
xorl
push
dec
mov
add
and
inc
xor
pushf
jmp
insb
fldcw
das
frstor
ja
dec
outsl
dec
out
leave
pop
pop
mov
stos
push
and
pusha
push
insl
and
mov
xchg
insb
mov
and
mov
mov
mov
stos
faddl
cli
dec
test
cmpsl
add
add
fists
iret
and
dec
sub
lcall
xlat
fmuls
push
jmp
push
leave
ja
mov
sbb
pop
push
jnp
int
pusha
leave
mov
ret
faddl
popl
xchg
fadds
jae,pt
push
lods
cmpsl
decb
sub
inc
jno
out
shl
sub
or
shll
test
push
insb
popf
xchg
push
loop
sti
and
cmp
sub
int3
or
daa
fwait
push
mov
pop
adc
lods
adc
mov
popf
mov
xor
sub
sub
daa
fsubrs
fwait
push
insb
fxch
jmp
and
popf
mov
sbb
addr16
cmp
bound
out
insb
sub
push
xchg
mov
scas
cmpsb
in
push
sub
dec
sub
mov
sub
out
sub
cmc
movsb
adc
or
imul
push
mov
sbb
out
mov
repnz
mov
push
push
pop
fildl
pop
and
jmp
js
fidivrl
sbb
test
pusha
cmc
jge
ds
cmp
adc
and
mov
in
dec
or
aad
in
jle
dec
int
rolb
bound
cld
lret
add
jnp
pop
divl
addr16
pop
cvtpi2ps
lea
les
mov
and
out
cmpb
dec
rcrb
push
stos
lods
dec
lahf
xor
sub
out
divb
push
mov
std
sbb
jge
mov
pop
push
adc
ljmp
inc
rolb
xchg
das
leave
pop
push
and
xor
add
jno
dec
xor
aas
inc
leave
popa
sbb
lock
add
enter
push
mov
or
xchg
pop
mov
sbb
jno
jp
and
mov
jae
data16
lret
xchg
inc
aad
add
notl
sbb
stc
jae
fisubrl
jmp
hlt
xchg
inc
sub
cltd
data16
dec
push
mov
sub
or
sub
gs
sub
xchg
lcall
add
cmp
fdivr
ficoml
scas
cmpsl
jl
data16
xchg
mov
lcall
push
push
cmp
popa
cmpb
dec
adc
push
xor
in
pop
push
jbe
push
bnd
mov
mov
inc
mov
ja
in
popf
or
cmpsl
rorl
cwtl
jge
mov
and
inc
lcall
rorb
mov
lcall
xor
in
xor
ja
mov
and
icebp
fildll
and
pop
add
mov
pushf
push
cmp
jecxz
push
jne
sub
sahf
push
sub
mov
sub
xchg
imulb
pop
pop
dec
shlb
dec
imul
jmp
aam
movsl
push
pop
mov
sbb
mov
mov
data16
popf
cmp
push
dec
sbb
bound
or
incl
cmp
xor
or
ret
shufps
pop
cmc
mov
inc
jge
jl
repnz
lcall
cmc
imul
xchg
enter
push
pusha
rolb
inc
imul
dec
jecxz
test
or
jl
fcoms
imul
rol
push
test
inc
jmp
inc
or
call
or
cwtl
xchg
lcall
and
mov
ss
mov
push
xchg
sti
and
jae
pop
movsb
aaa
mov
add
inc
addr16
icebp
loop
movsb
or
scas
std
imul
pop
jge
loopne
mov
pop
fnstsw
sbb
in
inc
jecxz
jae
sbb
sub
arpl
add
stc
inc
cwtl
and
mov
sbb
dec
and
or
dec
sarb
mov
pop
add
xlat
ds
cmp
repz
in
js
xor
add
pop
add
cmp
data16
and
cmpsl
rolb
inc
ret
jmp
lds
in
jp
iret
xchg
cs
cli
cltd
and
pushf
push
pop
push
mov
jp
pop
iret
jbe
aas
push
cmp
cmpsl
int3
lahf
mov
je
inc
hlt
int3
xchg
ljmp
and
or
xchg
in
dec
out
pmaxsw
aad
repz
lret
cmpsl
mov
mov
push
cmp
mov
push
lahf
gs
dec
call
repnz
scas
loope
pusha
fisttpll
cs
fldcw
loopne,pn
xchg
call
loope
cmp
lock
mov
push
sbb
cld
inc
testb
and
jecxz
test
inc
and
cmp
outsb
push
test
lcall
loopne
xor
jo
mov
pop
lods
ljmp
jp
aaa
sbb
pop
mov
cmp
pusha
pop
sar
divb
loop
mov
js
inc
push
pop
mov
mov
push
jne
jnp
cmp
dec
test
aaa
mov
mov
in
inc
or
mov
insb
add
int3
add
cli
nop
scas
arpl
push
inc
inc
imul
jge
jbe
out
in
int3
jae
shrl
mov
nop
enter
aad
shr
pop
test
mov
in
outsb
into
xchg
stos
into
push
rcrb
stos
das
lods
xor
movsl
xchg
jmp
int3
mov
out
pop
mov
clc
push
cmpsb
mov
aas
dec
jmp
loop
stc
mov
popf
sub
scas
and
test
mov
adc
cmpl
jl
lods
sub
jmp
add
jbe
add
jbe
ror
lods
mul
roll
lahf
sbb
cmpsb
mov
push
jo
test
ljmp
fcomps
fimull
mov
pop
inc
cmpsb
push
pop
jp
in
stos
jns
repz
enter
add
mov
inc
xchg
and
cmp
out
and
adc
sbb
inc
mov
jge
sub
cmpsb
in
imul
sbb
push
xchg
cltd
notl
jbe
lret
mov
aaa
jg
push
cmpsl
test
pop
loop
pop
xor
sub
inc
push
or
test
or
rolb
fwait
push
jbe
mov
add
cmp
push
push
cmpsb
jnp
movsl
mov
test
push
push
or
xchg
int
int
or
xchg
add
cmpsl
mov
cmp
xchg
fcom
push
fidivrs
jnp
aad
jo
xchg
leave
out
pop
and
andl
into
iret
addl
jecxz
sub
ja
fs
test
and
xchg
lock
shr
into
jo
stos
mov
sbbl
inc
adc
cmp
aaa
mov
and
lahf
sub
addr16
fdivl
divb
dec
sub
cmc
negb
xlat
fldenv
scas
jge
call
pop
popf
xchg
add
adcl
push
test
xchg
sbb
sahf
push
rolb
gs
out
outsb
imul
xor
adc
pop
insl
pop
mov
pop
stos
push
push
xlat
iret
in
dec
test
lods
out
dec
xchg
fsubl
outsb
jns
add
enter
dec
push
enter
bnd
frstor
scas
cmp
or
mov
cmp
dec
push
sub
push
movsl
or
mov
cmp
das
mov
dec
pop
inc
sbb
cli
outsl
dec
xchg
les
je
nop
lods
aaa
pop
lods
jl
mov
sbb
int
lret
cli
push
hlt
fs
xor
push
lret
mov
sub
leave
add
push
mov
lods
adc
insb
push
mov
insl
mov
xchg
sub
test
xchg
stc
mov
jae
jne
push
fidivl
mov
loopne
and
jecxz
push
stos
popa
aas
xchg
jnp
mov
std
arpl
push
loope
insl
daa
push
xor
add
or
cmp
aas
icebp
add
cwtl
jge
jno
and
mov
pop
sahf
push
cwtl
jecxz
repnz
popa
int3
push
ja
jae
rol
orb
mov
or
or
dec
cmpsb
adc
mov
push
pop
xor
ja
negb
test
xor
fcoml
jnp
leave
cmp
rcll
fdivrs
dec
outsb
push
adc
punpckhbw
mov
push
and
cmpsb
jge
dec
push
or
xor
cmpl
sbb
sub
inc
push
sub
popa
adc
mov
aas
stc
mov
es
pop
adc
pop
adc
sarb
mov
inc
adc
pop
mov
cmp
popf
out
std
fisubl
mov
aas
lcall
bound
in
es
xlat
inc
sub
mov
lea
rol
jne
jno
and
sub
sub
test
shrb
inc
into
test
xchg
mov
in
in
rorl
sub
mulb
xor
sub
icebp
movsb
test
and
leave
mov
fcoml
repz
dec
or
mov
mov
repnz
jge
cli
movsb
les
jb
dec
mov
mov
fdivrs
call
lret
and
mov
jg
js
jae
xchg
cmp
int
sub
mov
jnp
dec
outsl
adc
int
roll
fistpl
in
and
mov
ret
aad
or
fwait
icebp
cwtl
xchg
arpl
nop
cmp
cmpsb
in
cs
iret
nop
fildl
ret
mov
or
xchg
pop
push
roll
xor
jns
xor
jnp
jbe
adc
lods
shrl
dec
insl
mov
sar
leave
lret
loope
cmp
push
popf
adc
xlat
sbb
rol
mov
int
leave
shlb
sbb
push
sub
clc
push
int3
add
out
add
adc
les
push
mov
xchg
cmc
ret
mov
jg
icebp
mov
int3
rclb
sbb
or
daa
repnz
pop
lea
add
rcrb
je
jmp
pop
in
in
movsl
pop
rcrl
loope
in
lock
leave
dec
bnd
fisttpll
jbe
ja
mov
js
xchg
inc
scas
or
sub
fs
lret
rclb
lea
popa
pop
dec
mov
sub
insl
imul
push
aad
ss
lods
or
shll
dec
sarl
mov
xor
sub
add
gs
push
inc
push
jmp
push
cltd
test
and
add
insl
push
push
mov
lcall
dec
cmc
mov
daa
lcall
lahf
out
stos
push
inc
mov
in
lds
in
pop
mov
push
add
mov
ret
movsl
jmp
inc
push
aad
fidivl
in
test
cli
out
lahf
adc
add
sbb
les
jb
dec
clc
add
fwait
mov
fwait
int
mov
test
es
pop
jns
cmp
aas
stc
ja
mov
xchg
pop
dec
lods
push
push
cld
add
scas
inc
pusha
stc
add
leave
xor
mov
mov
or
or
adc
fwait
xor
dec
loop
addb
bound
jo
mov
lea
loope
pusha
jae
cmp
sub
or
fcoms
mov
or
int
jne
sar
mov
and
lret
test
jmp
ss
and
add
arpl
jno
jbe
das
dec
mov
imul
inc
cmp
cmpsl
xorl
test
cmpsb
xchg
aaa
pop
mov
iret
adc
jl
and
imul
push
xor
cmpsl
sub
lock
xchg
add
sbb
addr16
mov
bound
scas
add
xor
sub
nop
push
xor
dec
and
ja
inc
xlat
lds
data16
popf
mov
adc
mov
xchg
pop
mov
jg
add
pusha
sub
ret
mov
stos
dec
es
mov
pop
push
cmpl
jbe
mov
or
stos
dec
in
xor
push
pop
pushf
movsb
sub
enter
mov
push
ret
add
or
lcall
mov
and
fwait
xorl
cmpsl
stos
daa
push
or
in
ljmp
and
jle
jbe
aaa
pop
mov
outsb
adc
and
into
adc
pop
and
xchg
shl
mov
mov
or
pusha
mov
cmpsl
inc
inc
cmp
div
mov
shll
into
or
insl
xchg
mov
jb
jmp
mov
ret
sbb
add
dec
cmp
sbb
mov
test
push
stos
jnp
xor
sbb
xor
xchg
sub
out
adc
or
adc
inc
cmp
inc
adc
mov
push
aad
je
in
inc
mov
mov
iret
rorl
xchg
roll
dec
iret
out
mov
jnp
mov
leave
gs
test
popl
hlt
imul
or
test
cmpsl
pop
xlat
test
scas
xchg
push
into
testb
shll
push
cmp
mov
sbb
xlat
or
inc
popa
cmc
popa
mov
insb
dec
stc
gs
into
mov
stos
xlat
cmp
add
in
inc
icebp
test
xor
cmpsb
out
xor
mov
lea
cs
repnz
cmp
scas
iret
shrl
insb
outsb
or
add
lds
dec
lret
mov
pop
dec
mov
cmp
dec
pop
clc
out
decb
pop
in
cmp
or
lea
rolb
loope
insb
enter
imull
lods
in
mov
aas
adc
dec
cmp
dec
cs
outsb
mov
pushf
dec
and
ljmp
movsl
sarb
dec
inc
sub
cmp
push
and
jbe
add
xor
push
xor
mov
add
inc
jp
pusha
cli
xchg
adc
and
adc
and
iret
loopne
jbe
gs
pop
sbb
and
xchg
xchg
popa
xorl
adc
xlat
popa
mov
mov
jmp
jbe
add
out
ret
pop
dec
or
ret
sarb
imul
mov
lahf
push
or
in
out
cmpsb
aad
or
or
int
or
sub
lea
push
icebp
insl
cli
pop
lcall
add
inc
subb
cmp
xchg
lea
pop
inc
push
mov
and
cli
dec
add
aad
cli
lret
mov
inc
testb
pushf
nop
mov
fwait
xchg
iret
lock
out
popf
or
imul
mov
je
cwtl
mov
xor
or
xchg
stos
iret
mov
scas
mov
cli
sbb
mov
out
add
je
cmp
add
xchg
push
mov
sbb
test
outsb
negb
aam
ds
popf
test
lock
fwait
jg
mov
test
adc
stc
lcall
fidivs
shr
clc
or
pop
aad
inc
or
or
cmp
jne
cs
pop
push
xchg
pop
sahf
loop
cbtw
les
xchg
jbe
xchg
push
xchg
xchg
jg
mov
sti
pop
rolb
jno
jnp
xlat
mov
in
cltd
xor
dec
das
pushf
pop
bound
adc
pop
jbe
idiv
leave
adc
loopne
icebp
repz
cli
loope
in
dec
and
shl
push
inc
jnp
dec
xchg
pop
aam
or
cmp
add
or
and
push
movsl
aaa
push
test
imul
pop
xor
adc
lcall
mov
xchg
mov
push
mov
xlat
sbb
bound
fsqrt
dec
stos
pop
les
sbb
mov
xor
inc
cli
inc
or
roll
dec
adc
push
cmc
sub
mov
sub
in
cs
popa
pop
scas
inc
sbbl
xorb
adc
cmp
adc
xor
icebp
addr16
dec
fstl
and
notl
call
xorl
adc
jp
sub
lods
mov
in
bound
test
outsb
or
sti
mov
xor
push
movsl
adc
les
mov
in
repnz
jae
or
and
push
xor
push
xor
jle
enter
das
aad
push
mov
mov
pop
cmp
jns
or
cli
pop
pop
inc
repnz
punpckhwd
mov
push
std
popf
or
pop
lds
jle
add
lock
xchg
mov
xor
and
xor
aad
cmp
and
insl
add
aas
shll
arpl
sub
loopne
sbb
mov
cmp
hlt
clc
imul
xor
dec
inc
les
repnz
aas
jg
cmp
jmp
dec
and
pusha
out
xchg
aam
fdivrp
mov
fcomps
cmp
mov
mov
dec
call
es
les
mov
fldt
mov
ds
gs
jns
repz
add
movsb
arpl
or
and
lahf
cmpsl
jno
cmpsb
adc
insl
subl
lret
push
sub
lock
lea
nop
jl
outsb
jmp
aas
jne
dec
aad
ret
mov
hlt
add
in
enter
sti
cltd
test
mov
xor
xor
mov
sti
dec
xchg
adc
mov
mov
roll
sbb
push
jne,pt
imul
jbe
xchg
bound
loope
lret
jge
sti
adc
or
cmp
js
cmp
inc
xor
popf
dec
in
push
push
pop
xchg
outsb
dec
pop
test
jg
scas
js
mov
dec
sahf
mov
rcrb
push
insl
and
sub
cmpb
adcb
in
pushf
mov
adc
int
mov
shld
aam
sbb
scas
cwtl
lods
in
ret
add
idivl
xor
enter
cmp
sarl
cmp
in
inc
and
inc
jbe
inc
js
dec
ljmp
or
push
movsb
lods
add
ds
loopne
pop
pop
pushf
fwait
testl
aaa
jne
enter
scas
push
fs
inc
cltd
iret
insb
mov
stc
jb
inc
mov
pop
lcall
mov
fimull
sub
and
and
pop
add
pop
ret
adc
add
addr16
pushf
cmc
xor
fs
rcl
jnp
loop
std
cmp
imul
daa
out
push
test
jb
pop
imul
adc
je
jl
pop
and
aam
pop
scas
movsb
xchg
es
pusha
test
push
dec
sbb
pushf
xchg
sub
out
dec
push
and
inc
cmp
mov
and
inc
mov
repnz
out
arpl
daa
and
std
cmp
cmp
divb
sbb
call
fcompl
inc
loop
aaa
xchg
pop
xchg
xor
faddl
out
add
jno
psubw
call
sub
xor
jne
jl
xchg
jmp
sbb
cmpsl
push
dec
cwtl
out
lods
mov
std
insl
fldcw
stc
or
jg
addr16
mov
xchg
popf
pop
jnp
add
hlt
add
or
repz
mov
out
cwtl
cmpsb
shl
clc
xchg
pop
in
mov
aam
fwait
orb
outsl
pop
push
and
jp
xchg
das
mov
push
xchg
shll
jno
mov
xor
sbb
pop
repnz
ret
out
mov
testb
out
and
and
arpl
in
ror
test
jnp
push
sbb
jle
cli
mov
mov
mov
idivb
lahf
push
pop
sub
xlat
xchg
sbb
enter
mov
inc
add
ret
mov
dec
or
pop
mov
sarl
lcall
test
xor
aas
stos
push
pop
ret
sub
insb
xor
add
int
iret
dec
adc
jno
ss
dec
inc
mov
mov
insl
push
push
jp
enter
jp
push
in
loope
fwait
sti
jb
jge
and
xchg
jno
loopne
jno
call
sbb
aam
sbbb
lret
xor
lds
rorb
dec
pop
popa
xor
ret
dec
cmpsl
cltd
frstor
roll
push
loope
push
out
scas
or
inc
test
adc
ljmp
add
outsl
xor
jb
test
pop
pop
push
mov
and
push
ljmp
mov
sub
pop
data16
clc
subb
popa
les
adc
or
xor
inc
icebp
nop
mov
mov
sbb
push
popa
and
insb
push
out
mov
adc
mov
mov
in
sub
test
shrl
xor
leave
mov
mov
or
pop
mov
fadd
in
leave
sbb
jo
cld
cmp
pop
cmpsb
mov
cmp
or
repz
sbb
rcrw
cmp
ret
stos
ljmp
pop
sbb
sub
movsl
sub
gs
loop
adc
sbb
xchg
or
notb
sub
icebp
mov
pop
inc
test
mov
sub
shrb
daa
xchg
out
loope
or
mov
mov
adc
in
cmp
scas
inc
data16
int
andl
push
loope
push
pop
in
and
stos
mov
lds
jns
hlt
inc
cltd
xor
adc
cltd
push
dec
pop
dec
lcall
imul
cmp
lret
test
in
inc
scas
int
mov
xchg
dec
xor
pop
js
add
inc
out
and
mov
xchg
ret
imul
jl
lahf
out
mov
cld
outsl
push
or
fisttpl
add
dec
shlb
add
jp
sbb
ljmp
sub
xor
pop
cli
dec
jge
cmpsl
jbe
loopw
jnp
pop
push
std
push
in
mov
loop
shl
mov
insb
xchg
stc
data16
lds
fldt
dec
xorb
push
adc
mov
stos
fsts
xlat
enter
xchg
add
dec
push
jae
mov
jle
jns
mov
mov
sbb
cld
mov
xchg
call
lods
push
in
sbb
aas
sbb
les
pop
ds
nop
orb
leave
mov
push
daa
sbb
nop
popf
or
daa
test
cmp
pop
cmp
out
jp
cmp
jmp
stos
cmc
inc
cmpb
lahf
mov
inc
xchg
cmp
arpl
enter
sub
mov
add
xchg
cmp
xor
shl
adc
and
cmp
push
test
out
sub
ljmp
inc
das
es
mov
push
popa
fidivl
repz
jp
jecxz
or
and
inc
xchg
pop
cmp
or
bound
cmp
pop
or
je
jb
adc
loop
ja
mov
mov
out
sbb
mov
mov
cmpsl
push
jmp
stc
cmp
int
push
fdivrs
cmc
inc
icebp
mov
mov
pop
bound
sti
inc
xor
push
das
stos
stos
std
and
pop
in
subb
insl
outsl
cmp
daa
or
into
xchg
mov
mov
orb
xchg
mov
mov
and
scas
jae
aad
outsb
shll
cmp
jg
aas
inc
pop
pop
inc
mov
mov
cs
pop
inc
xchg
mov
fsubs
mov
repnz
push
fwait
inc
icebp
movsb
jmp
loopne
test
or
ja
or
pop
xchg
jg
dec
cltd
mov
add
mov
and
cmp
xchg
sbb
jb
cmp
cmp
imul
dec
fwait
mov
test
addb
add
fwait
fwait
push
pop
inc
dec
add
mov
inc
hlt
jmp
ret
pusha
les
std
rcl
js,pn
nop
cli
cli
pop
xor
pop
outsb
out
dec
daa
or
rol
xchg
movsl
push
sub
imul
insb
pop
dec
insb
xchg
pop
inc
pop
cld
inc
push
mov
xor
sbb
fistps
ret
sbb
adc
call
mov
stos
xlat
and
popa
jns
dec
je
out
mov
mov
test
sbb
mov
xchg
shrb
push
dec
sti
jl
sbb
add
aam
loope
or
data16
pusha
pop
das
mov
push
hlt
and
lahf
inc
negb
insl
imul
mov
test
add
lock
popa
add
movsb
stc
sahf
pop
in
mov
test
lahf
popa
push
dec
insb
and
in
iret
push
or
movsb
daa
addr16
aam
xor
jae
loop
imul
addr16
push
mov
pop
jne
jmp
das
fwait
or
mov
mov
imul
std
and
mov
cwtl
outsl
xchg
sub
dec
or
fbstp
fwait
je
mov
sub
cmp
xor
or
pop
jb
mov
rcl
adc
daa
cmpsl
or
mov
sub
fdiv
sti
call
add
faddl
mov
out
mov
xor
sbb
xorb
sbb
mov
movsb
cmp
xor
sbb
sbb
jmp
mov
addb
cmp
mov
cmp
xlat
mov
jae
les
dec
dec
add
pop
inc
mov
jns
sub
pop
mov
push
inc
pusha
lret
icebp
push
shlb
or
pop
aaa
lcall
adc
mov
daa
stos
cmp
cs
jge
and
imul
lret
fdiv
repz
and
repz
add
fwait
xor
addr16
mov
aas
leave
into
scas
or
jb
xor
scas
aas
js
rcrb
stc
and
out
dec
aaa
fisubrs
dec
sub
jb
subl
inc
jo
adc
test
loope
mov
repz
fwait
aaa
pop
cmc
enter
xor
cli
mov
lahf
outsl
add
call
sub
add
pop
push
pusha
rep
sahf
xor
sti
scas
addr16
lds
scas
dec
mov
aaa
adc
mov
xor
pop
pop
orl
and
mov
inc
and
aaa
push
xchg
ss
adc
xchg
xlat
sub
dec
xor
ror
push
sbb
lock
jnp
int
in
pushf
ret
lock
push
mov
mov
cmp
fcoml
aad
addr16
xchg
pop
incl
rclb
xor
stc
int3
cmpsl
pushf
call
jg
fsubrp
sub
sbbb
cmpl
xlat
cld
shl
imull
cs
into
gs
divl
sub
cmp
ret
cmp
movsl
adc
push
adc
dec
insl
adc
mov
mov
addl
pushf
pop
xor
rorl
mov
clc
mov
push
or
gs
aad
sub
mov
subl
and
push
inc
popf
sbb
inc
adc
pop
imul
out
repz
mov
mov
push
lds
ljmp
pop
negb
fwait
in
mov
jne
inc
popa
mov
stc
mov
pop
push
push
jae
pop
shl
push
pop
pop
xchg
repnz
cmpsl
cmp
pop
sub
test
or
lret
mov
mov
jo
outsb
stc
cltd
push
sbb
or
sub
scas
outsl
mov
xor
push
pop
fwait
xor
ret
jmp
mov
push
lcall
or
outsl
inc
mov
pop
pop
movsl
mov
and
leave
push
pop
push
int3
je
cmp
stos
test
outsl
ss
dec
xor
xor
arpl
sub
scas
popa
mov
pop
fld
lcall
pop
insb
sub
xor
and
pop
sub
cwtl
mov
arpl
ja
mov
ja
das
gs
add
das
pop
or
imull
sti
xor
push
out
xor
mov
xlat
orl
or
dec
in
das
xchg
loope
repnz
out
cmp
das
mov
out
and
outsb
out
xor
lods
pop
clc
and
in
jne
ss
inc
pop
ljmp
sub
push
mov
add
add
fisttpl
loope
test
jmp
or
test
repz
or
cmp
test
push
arpl
clc
push
add
loop
sub
dec
push
test
mov
jbe
pushf
subb
sub
cmpsb
push
sbb
les
mov
pop
in
loope
outsw
xor
test
or
loopne
fsubrs
and
shlb
pushf
jl
jae
aam
fidivl
das
jne
lods
sbb
fbld
aas
inc
repnz
stos
push
insl
and
call
hlt
int
fadd
sbb
pop
scas
dec
cmp
movl
ret
mov
sbbb
hlt
dec
jae
sar
mov
fidivrl
ja
cmpsb
or
lods
mov
adc
push
in
daa
mov
clc
xchg
dec
stos
nop
orb
std
sub
loope
or
rcl
mov
shr
scas
mov
xlat
popa
into
and
mov
xchg
xchg
into
sub
sub
hlt
pop
inc
cmc
inc
mov
sti
das
subb
ret
xchg
xchg
lcall
jg
cmpsl
and
mov
stos
pop
imul
cmpsb
sub
in
mov
fbld
js
ljmp
cmpsb
fld
leave
mov
outsb
or
sbb
push
adc
rorl
sarl
add
mulb
incb
cli
pop
cli
hlt
adc
ficoml
ret
ljmp
mov
sub
pop
mov
lock
cmp
add
in
cmp
iret
mov
pop
jle
arpl
inc
out
aam
ret
and
jecxz
lret
dec
out
stc
fmull
add
aam
cmpsb
jge
cmp
sbb
jmp
dec
stc
pushf
jecxz
iret
mov
icebp
dec
aad
cmpsb
in
stc
stc
cltd
pop
sbb
jo
mov
ret
sub
and
loopne
push
jb
incl
jecxz
das
stos
adc
jge
push
jno
mov
mov
jbe
xchg
out
lahf
sbb
inc
movl
dec
in
adc
mov
mov
icebp
repnz
pextrw
sbb
mov
test
mov
dec
xchg
add
ss
rcr
shlb
mov
sbb
inc
push
inc
sti
imul
jo
add
jge
dec
hlt
pop
scas
fildl
in
jg
xorb
adcb
iret
jmp
push
push
inc
pop
jno
sti
push
pxor
mov
adc
or
popa
adc
mov
or
dec
push
xchg
div
xchg
add
sbb
aam
bound
jo
cmp
jmp
aam
xor
dec
cmp
adcb
lock
jne
add
cmp
inc
sub
cld
lret
xchg
int3
scas
jno
cld
add
mov
iret
adc
add
fcomps
inc
mov
outsb
mov
jl
cld
adcb
dec
pusha
and
lds
jo
sub
jbe
pop
jb
out
fldt
lcall
repz
pop
xlat
jmp
or
gs
imul
pushf
ljmp
cmpsl
popf
pop
mov
sbb
in
adc
push
popf
dec
mov
push
pop
add
ja
cmp
xchg
pop
add
leave
pop
mull
aad
mov
mov
mov
cmp
lahf
mov
xchg
sbb
xchg
je
ja
xchg
stos
push
cmpl
push
lods
add
or
fstpl
jbe
pop
push
ds
push
mov
data16
clc
int3
hlt
push
pmullw
hlt
inc
movsl
lock
repz
stc
fdivrl
jo
dec
outsb
sub
xor
nop
outsl
insl
mov
scas
sahf
mov
push
mov
xor
xor
add
mov
dec
cmpb
jns
inc
mov
loope
insl
pop
loop
pop
clc
sbb
int3
stos
adc
push
loope
mov
cmpsl
mov
lods
ja
jnp
or
movb
out
mov
mov
push
and
pop
stos
int
pushf
jecxz
cwtl
in
leave
addr16
sub
in
shl
cmp
invd
sbb
les
cltd
mull
and
sbb
mov
pop
push
stos
data16
mov
fs
test
pop
notb
fstpt
xlat
nop
lods
inc
scas
jb
inc
inc
gs
mov
imul
aas
test
push
lahf
decl
mov
xchg
adc
pop
push
notl
xor
loopne
int3
jb
test
sub
inc
sub
cltd
pushf
mov
popa
mov
std
push
fidivs
push
out
fcmove
jg
iret
data16
ficomps
push
dec
out
mov
pop
sbb
cld
and
or
add
lock
pop
xchg
scas
jle
fwait
sub
xchg
xor
mov
imul
mov
mov
cmove
add
stos
test
sub
sub
fldl
mov
addr16
rclb
jl
pop
data16
in
popl
shrl
and
lret
cmp
mov
ret
xchg
loope
xchg
mov
cmp
fildl
push
xor
mov
mov
xchg
rclb
mov
cmp
aas
push
add
sub
incb
in
cmp
pop
jno
cmp
adc
and
sub
call
mov
adc
pop
pop
lea
mov
and
arpl
or
or
adc
jbe
add
mov
lock
std
cld
or
push
sbb
fs
aam
dec
inc
inc
add
xor
mov
dec
sbb
sbb
inc
sahf
bnd
adc
adc
adc
and
sub
pop
loop
jg
fs
and
mov
lret
push
test
or
das
and
lods
pop
shr
sbb
jle
ret
pusha
mov
push
dec
leave
mov
outsl
sub
dec
pop
loop
cmpsb
adc
arpl
leave
sub
mov
push
or
cs
imul
xchg
mov
cmpsb
adc
test
push
cmp
dec
js
add
cs
mov
pop
sub
pop
cmp
dec
sub
add
cmp
dec
add
push
sub
xchg
mov
dec
test
push
pop
lahf
mov
mul
ja
sarl
sbb
push
dec
cltd
sub
pusha
mov
pusha
test
outsl
mov
subl
jae
pop
ret
adc
mov
xchg
push
mulb
and
cmp
or
mov
push
add
adc
ret
or
add
and
inc
push
dec
movsb
xchg
fbstp
xor
xchg
jno
and
pop
addr16
xchg
adc
loopne
mov
inc
in
cld
cmp
les
mov
jns
sub
nop
ret
sub
mov
and
cs
xor
sub
arpl
imul
fwait
mov
fldcw
mov
imul
xchg
test
mov
es
cwtl
les
pop
mov
popf
dec
pusha
mov
adc
or
les
mov
dec
jle
divl
ja
pop
adc
jbe
mov
and
insl
mov
mov
popa
aas
jb
sub
inc
and
test
jne
out
pop
or
aaa
adc
repnz
cmpsl
jg
push
mov
sub
mov
push
pop
in
mov
jl
mov
cli
pop
mov
and
mov
fcmovb
mov
add
xchg
inc
push
fs
lret
jp
cld
mov
xor
inc
mov
mov
sti
icebp
bound
jge
mov
cld
icebp
hlt
or
sti
sbb
sub
push
fists
dec
shrb
pop
xchg
ret
retw
jg
inc
adc
mov
test
xor
adc
mov
aaa
adc
ds
sbb
enter
popa
mov
inc
add
ret
mov
add
leave
pushf
in
daa
push
lea
test
push
sub
and
cltd
mov
push
loope
lods
mov
xchg
pop
mov
or
dec
cmp
int3
test
sbb
mov
cmc
je
stos
mov
jns
adcl
jl
xlat
stos
add
lea
dec
and
adc
or
mov
sahf
pop
cmc
and
int3
mov
adc
mov
inc
out
cld
pop
test
aad
push
les
gs
fstp
fists
push
nop
xchg
int
xor
xlat
sub
inc
mov
jnp
mov
lcall
mov
test
popf
ds
out
or
mov
and
ss
adc
or
ja
pop
add
inc
xchg
repz
jp
fmuls
stos
jnp
sub
jo
xchg
xchg
call
sub
push
or
xchg
adc
inc
push
scas
rcrl
adc
push
dec
mov
loop
mov
lret
inc
stos
fcomi
ficompl
jne
out
cltd
xlat
imul
lods
ljmp
andb
mov
mov
aaa
sbb
push
loop
inc
sbb
out
cmp
mov
lcall
pop
test
insl
xchg
dec
int3
movsb
sbb
insl
cmp
stos
push
push
and
mov
aas
or
push
mov
mov
and
adc
mov
cmc
push
dec
xor
aas
rolb
push
jns
es
cmp
xchg
jo
inc
mov
push
clc
xchg
and
sbb
add
aam
gs
xchg
fcomi
mov
roll
mov
idivl
dec
nop
push
jae
faddl
aas
fidivrl
inc
push
mov
and
cmp
bound
sub
cmc
sub
xor
cld
dec
push
dec
aad
mov
pop
aas
jmp
out
cs
into
movsb
push
shrb
cmpsb
stc
lret
loop
push
idiv
mov
fwait
dec
in
fistpll
cmpsb
orl
mul
mov
pop
sbb
sahf
leave
push
insl
sbb
js
lods
and
push
jmp
push
add
imul
mov
repz
inc
std
rcr
nop
push
pop
rcrl
cmp
aad
pop
mov
inc
mov
inc
cld
mov
enter
cs
addr16
mov
push
lahf
mov
sarb
or
cmp
inc
pop
aas
sbb
js
mov
mov
pop
adc
mov
insb
dec
xchg
jb
push
adc
cmp
int3
push
sbb
repnz
cmc
dec
cli
mov
stc
sub
and
aam
dec
sub
in
mov
inc
int3
das
dec
popa
js
mov
adc
jb
ds
xchg
pop
popf
aam
cs
bound
sub
leave
add
sbbb
subb
mov
lahf
loopne
sub
lock
in
lds
mov
jne
pop
cmpsl
cmp
jmp
inc
rclb
dec
add
scas
sbb
inc
mov
dec
movsl
mov
mov
and
jae
cmp
xchg
lea
or
in
mov
and
or
push
sub
xchg
inc
xlat
cmp
cmp
aad
sbb
pop
jno
insb
add
or
xor
repnz
sub
dec
jle
and
fisttps
inc
xchg
jle
inc
mov
in
imull
addr16
sub
into
mov
mov
mov
add
ret
sbb
loopne
test
jmpw
adc
add
loopne
xor
data16
pop
and
mov
lret
cmpb
cmp
mov
je
push
xor
lods
xchg
mov
mov
dec
es
xchg
push
rcl
push
push
roll
sub
mov
dec
pop
mov
out
mov
popa
sbb
jne
mov
imul
pop
outsl
cmp
insb
pop
cmp
leave
subl
arpl
rcr
xorb
push
dec
add
or
add
push
movsb
out
mov
loopne
test
test
add
pop
pushf
sahf
ror
xor
dec
imul
jge
enter
or
and
clc
push
and
dec
lcall
out
xchg
inc
les
std
mov
mov
repnz
cmp
pushf
push
push
cli
jns
mov
add
push
pop
xchg
xchg
push
push
int3
sub
lahf
insl
mov
nop
push
xchg
rcl
add
call
push
fwait
out
out
fbld
in
jb
adc
jb
pop
push
shll
sar
ret
mov
jge
cmp
mov
fnstcw
shr
je
cmpsb
cmp
inc
testl
std
mov
sbb
lahf
push
sub
icebp
adc
scas
es
cmp
jns
int3
xchg
jb
repnz
xchg
loopne
sti
ret
ja
xchg
mov
fdivrs
pop
lds
outsl
adc
lret
sub
hlt
cmpsb
out
xor
push
inc
push
jae
call
push
aam
je
add
scas
jbe
ds
in
push
mov
mov
xchg
pop
pop
addr16
push
mov
pushw
cmpsb
or
cmpsl
lock
cmp
jp
cmc
out
aam
je
fldl
aad
mov
add
rorb
inc
cmpsb
lods
mov
mov
repnz
xor
in
inc
jp
pop
jge
int3
cld
cmpsb
cmp
push
add
push
test
mov
add
aaa
add
popf
pop
repz
and
lock
adc
push
xor
ljmp
int3
ss
sar
add
jmp
xchg
or
daa
pop
frstor
add
into
jb
push
test
xor
pop
dec
lods
in
cmpsb
push
roll
lret
sbb
out
mov
ljmp
sbb
rolb
jge
lret
std
mov
mov
pop
xchg
mov
scas
xchg
scas
mov
mov
dec
adc
push
jmp
in
mov
ret
dec
out
xchg
cli
andb
gs
nop
or
dec
jp
insb
adc
cmp
js
test
xchg
xlat
mov
add
loopne
imul
data16
and
sub
mov
je
and
into
pop
dec
out
clc
mov
nop
ud1
jo
or
out
jae
mov
scas
jle
jae
mov
push
or
shlb
mov
clc
fildll
stc
addps
lcall
mov
adc
stos
jae
sahf
mov
dec
mov
sbb
scas
pop
pop
dec
push
cmp
js
out
out
pop
inc
out
jp
pop
iret
popf
inc
std
jle
mov
ficompl
mov
jge
cs
sbb
jae
xor
ficomps
mov
iret
lea
add
adcl
call
or
adc
mov
mov
push
adc
cld
mov
rclb
in
xchg
cmp
notb
push
jns
jne
and
dec
adc
ljmp
pop
insb
sbb
shlw
and
mov
sub
mov
jmp
xor
pop
pop
aam
jnp
outsb
or
mov
push
sub
pop
inc
mov
hlt
movsl
ficoms
cmpb
xor
call
loop
rcrl
mov
pusha
xchg
or
mov
mov
mov
mov
xchg
dec
jmp
jbe
daa
mov
pop
and
std
movsl
adc
roll
sarb
imul
rcr
sub
add
ror
out
arpl
outsl
imul
mov
stos
call
jo
out
aas
jge
iret
pop
dec
scas
popf
inc
ret
mov
add
and
iret
popf
cmpsl
repnz
out
dec
cmp
sbb
or
loop
adc
jno
fldenv
dec
mov
icebp
subl
sarl
icebp
jne
iret
popa
pop
pop
gs
lds
popa
js
mov
aam
inc
xor
push
sub
push
jecxz
mov
xchg
dec
sti
sub
dec
and
pop
bound
cmp
push
jns
cmpsb
bswap
jge
icebp
adc
sub
outsl
mov
mov
mov
or
mov
pop
nop
push
adc
repz
test
fildll
cmpsl
sbb
or
loopne
lahf
mov
cmp
sub
aad
mov
shlb
dec
jle
push
xchg
bnd
pop
fsubr
test
jb
fistpll
out
iret
out
mov
lret
out
aad
lds
cwtl
push
cwtl
or
imul
dec
daa
stos
mov
cwtl
leave
mov
in
push
pop
sub
xchg
sarb
icebp
stos
jecxz
xchg
or
mov
shll
cs
das
imul
data16
sbb
lea
pop
movsb
lods
sub
je
adc
mul
xchg
lods
scas
sub
push
in
cltd
inc
add
in
fs
std
pop
outsl
enter
outsb
cli
dec
sahf
and
sti
mov
pop
ds
ret
fstps
out
call
iret
pop
sbb
lcall
fwait
jns
xor
mov
arpl
add
cs
mov
pop
bound
ror
or
mov
lods
movsl
xor
test
test
and
mov
lods
shrl
or
jns
fxtract
je
fistps
daa
stc
mov
into
mov
les
aaa
sti
cmp
rolb
lods
inc
sbb
stos
fisubs
mov
and
xor
jae
call
adc
mov
clc
out
leave
sti
scas
loop
clc
adc
jle
adc
mov
cmc
adc
fsubr
lret
dec
rcl
loop
outsb
testb
les
inc
inc
ss
jl
mov
jns
push
sub
sbb
js
xlat
sbb
cs
pop
cmp
push
adc
daa
gs
mov
fnstenv
pushf
mov
pop
lcall
fwait
pop
sbb
test
shll
mov
adcb
mov
pushf
cld
push
cmpsb
insl
mov
adc
adcl
fwait
outsb
and
mov
das
pop
xchg
setns
xor
cmc
jle
add
cmp
fnstenv
es
icebp
inc
cmp
les
insl
dec
pop
push
inc
jp
call
xor
insb
je
test
aaa
call
lret
adc
and
add
or
mov
or
icebp
adc
fldl
mov
cld
cmp
xchg
sub
insb
sti
icebp
mov
adc
fsts
lea
decb
mov
repz
bound
jnp
pop
or
decb
arpl
enter
aaa
test
mov
dec
jle
dec
mov
aam
dec
jno
mov
fmuls
push
lock
int
add
xchg
jne
sahf
push
stc
adc
lods
add
jmp
stos
inc
movb
inc
nop
dec
cmp
sbb
repz
lods
or
divl
xchg
mov
add
sub
lahf
imul
ret
xchg
pop
fsubs
pop
clc
and
jmp
inc
sub
xchg
jmp
js
jle
push
adc
cwtl
push
fs
out
jo
inc
orb
dec
sbb
sub
mov
push
adc
cs
arpl
scas
rcrl
shlb
xor
ds
ret
jle
push
ret
push
testl
dec
data16
sahf
ret
out
sub
sub
mov
xchg
pop
xchg
cmp
in
cmp
jnp,pn
mov
sahf
icebp
imul
sub
lahf
out
imul
jnp
dec
imull
dec
in
int3
cmp
outsb
xchg
sarb
adc
movsb
xor
vxorps
dec
lret
mov
push
push
hlt
mov
mov
push
add
test
mov
xchg
ret
js
jne
sbb
lret
aaa
jl
jne
sbb
add
and
out
push
dec
test
mov
xor
addr16
push
fldl
push
mov
add
inc
mov
and
push
cmp
adc
cmpsl
mov
dec
mov
mov
cmp
rcrl
mov
repz
sbb
jo
lock
dec
mov
outsb
negb
xchg
nop
cld
arpl
aas
push
cmp
add
insl
cmp
mov
in
in
add
cmp
add
mov
sub
in
adc
ret
aas
cmp
aas
int
out
fists
or
testw
inc
jl
add
cmp
test
mov
in
xor
or
and
andl
adc
lcall
test
imul
sarb
dec
test
and
lahf
popa
mov
mov
incl
rcrl
push
scas
inc
or
outsb
adc
xadd
fcomps
lock
pop
cmpsl
ret
sbb
scas
push
in
xlat
test
adc
adc
lods
sbb
inc
in
mov
mov
loop
and
mov
sub
jno
pop
ret
mov
lcall
push
bound
mov
xor
pop
jns
and
jp
shrb
ss
daa
add
mov
and
mov
sar
xchg
cmpsl
dec
fcomi
clc
out
int
fstpl
scas
popa
xchg
shrl
fadd
jmp
xchg
cltd
int3
and
and
fistps
int3
push
and
popl
pusha
loope
fdiv
mov
xchg
adc
mov
mov
dec
xchg
and
es
scas
lods
stc
or
mov
mov
xlat
loopne
or
add
sbb
mov
sub
js
movsb
neg
and
icebp
jns
mov
std
jg
pop
add
add
inc
icebp
lret
je
test
push
dec
mov
inc
dec
inc
out
sbb
mov
test
inc
cltd
xlat
push
icebp
or
xchg
xor
cli
outsb
pop
mov
add
out
xchg
notb
jno
clc
cmp
mov
mov
cwtl
sub
pop
sbb
arpl
enter
xlat
ret
sub
sbb
cmp
ds
and
sbb
jg
fwait
pop
je
jmp
shlb
imul
and
add
xchg
icebp
mov
cmp
add
sub
mov
mov
std
ljmp
adc
pand
lods
or
xor
out
mov
push
jnp
and
or
dec
gs
test
mov
sbb
and
outsl
inc
cwtl
or
jl
dec
fstpt
xchg
adc
popf
sbb
sub
cld
inc
iret
je
mov
out
aas
mov
dec
lods
scas
pop
das
popa
nop
mov
inc
mov
xchg
das
aaa
arpl
in
sub
in
xchg
inc
jge
pop
ficoml
ret
add
sti
and
daa
sbb
out
sub
lds
sbb
sbb
dec
mov
sti
xchg
sti
push
test
pop
lea
jge
dec
js
sbb
mov
adc
mov
aam
mov
aad
xor
dec
add
cmc
cmpsl
mov
cmp
movsb
add
mov
pop
rclb
xor
xchg
ljmp
rorl
push
psubsb
push
or
jnp
mov
mov
add
movsl
sub
mov
or
sti
and
add
push
xlat
dec
jge
arpl
es
arpl
shrb
inc
pop
pop
cmp
gs
sub
cld
sub
stos
rolb
sbbl
xchg
icebp
imul
outsl
movsl
or
loopne
pop
ss
aaa
push
loopne
mov
ljmp
filds
sub
loopne
dec
loopne
lret
jb
jmp
xchg
pop
rcl
jp
pop
inc
jnp
out
loop
repz
scas
sub
icebp
fidivs
test
and
cmpb
out
test
lds
dec
mov
cmp
pop
mov
pop
gs
ljmp
mov
lods
xor
fs
pop
imul
jge
cmp
fldenv
dec
jg
jge
cmp
int3
jle
dec
bound
jmp
inc
fsts
hlt
notl
mov
outsl
xor
push
push
scas
insl
jp
insl
mov
push
sbb
mov
pushf
andb
addr16
dec
mov
andb
fsubp
mov
jp
mull
mov
es
adc
sub
mov
cltd
lods
cld
adc
or
and
gs
jmp
adc
rcl
insb
pop
mov
outsb
shlb
ret
popf
inc
ret
prefetcht1
jg
movsl
pop
push
or
or
mov
sub
add
mov
jmp
push
arpl
cwtl
or
cwtl
mov
sbb
sub
stc
sahf
daa
jns
mov
push
fnstenv
js
dec
inc
lea
xor
push
fwait
jo
ret
xor
hlt
or
pop
push
out
jp
stos
or
stos
test
add
mov
push
repz
adc
mov
mov
sub
mov
loop
cmp
ljmp
roll
fimuls
mov
jg
pop
test
or
sbbb
mov
pop
mov
mov
in
mov
inc
sbb
jg
leave
ss
leave
sahf
sti
ret
jnp
imul
jp
jecxz
test
inc
jb
pop
inc
mov
xor
sbb
adc
iret
cmpsl
insb
mov
push
mov
aaa
sbb
jl
mov
dec
xor
cs
fwait
xchg
jb
inc
mov
push
mov
jns
ljmp
dec
inc
dec
cwtl
mov
cltd
sub
sbbl
jnp
inc
aam
xor
mov
add
ficoms
ljmp
jmp
test
in
out
aas
out
xchg
iret
scas
fnsave
jne
icebp
paddusw
jp
in
or
and
nop
push
xchg
xchg
lret
popf
test
dec
mov
dec
in
imul
int3
push
stos
ret
xor
xor
nop
sub
int3
pop
push
outsb
andl
mov
push
jle
jnp
push
les
movsb
push
cs
mov
movsl
mov
bswap
add
insb
mov
inc
cmp
mov
push
je
push
cmpb
sbb
stos
idivb
lret
cltd
call
sbb
dec
xor
sbb
cltd
subb
push
mov
enter
bound
mov
inc
orl
clc
lods
stos
mov
mov
mov
popf
sti
cmpl
pop
pop
and
add
cmp
jle
movsb
adc
add
xchg
and
xorl
out
cmp
les
and
xor
movsl
std
jbe
imul
inc
enter
nop
inc
aas
mov
roll
sub
fwait
dec
mov
vpinsrw
pusha
mov
jl
sbb
js
push
sti
loop
je
int
movsl
fsubl
xchg
cmp
dec
and
inc
jb
cmc
repnz
imul
loope
mov
cmpsb
je
scas
imul
add
sub
jno
outsb
leave
add
out
sbb
xchg
adc
cmp
adc
pop
andb
ja
sub
xchg
dec
fisubrl
dec
in
pop
mov
cmp
xchg
inc
leave
addb
inc
rorl
inc
mov
pop
loope
push
mov
mov
xor
leave
push
icebp
ret
jbe
dec
lods
ljmp
iret
push
pop
dec
or
mov
xor
lods
std
mov
or
push
cmp
test
in
cmp
pop
mov
jae
pop
bound
nop
leave
leave
mov
lahf
jecxz
xor
ficomps
sti
sub
in
or
arpl
and
incb
aaa
inc
loopne
xchg
mov
mov
jle
movsl
repz
xor
sub
cli
sbb
xchg
add
or
icebp
mov
pop
add
pop
jl
cmpl
lods
and
loope
ljmp
push
testl
or
out
inc
push
and
jle
pop
or
inc
sub
hlt
cmpl
lods
xchg
cmp
and
sub
je
mov
adc
fldt
sbb
sbb
pop
rcr
jl
pop
fdivrs
cwtl
sbb
jno
ret
scas
jns
test
xchg
mov
pop
sub
stos
mov
push
gs
std
ret
lock
xchg
sub
aad
pop
push
cmpb
testb
aad
push
xchg
pop
push
push
sub
push
mov
or
xchg
push
dec
enter
mov
popf
and
ret
bound
pop
inc
jno
push
jle
and
xchg
repnz
ds
clc
test
seto
xor
lret
inc
in
push
into
js
outsl
add
mov
sbb
sub
cmp
sbb
adc
dec
jae
data16
or
inc
lret
fucom
bound
pop
pop
sub
loop
mov
repnz
xchg
add
pushf
jne
add
sar
sbb
xchg
pop
push
and
adc
stos
jp
je
mov
mov
adc
adc
test
jmp
adc
in
js
mov
fs
push
int
sbb
cmp
stos
sub
add
sub
fnsave
xchg
in
insl
jo
in
lcall
inc
pusha
cmp
outsl
xor
js
mov
addr16
fidivs
add
adc
shll
sub
in
daa
movsl
and
hlt
popa
pop
push
mov
std
xchg
add
xor
add
mov
ss
test
jp
inc
mov
gs
sbb
data16
xchg
push
push
pop
inc
int
scas
mov
sar
add
xchg
or
aas
add
jb
xor
cmp
nopl
mov
shll
add
js
test
sbb
jb
shrl
pop
jp
fcmovb
test
pop
inc
jb
frstor
mov
xchg
sub
xlat
out
pop
icebp
test
xchg
adc
leave
idivl
leave
je
cltd
stos
jb
and
jmp
jle
js
icebp
or
out
pop
imul
dec
adc
and
inc
mov
repnz
stc
in
sbb
in
xor
mov
push
and
sar
or
dec
scas
clc
int
xchg
popa
and
dec
adc
adcb
je
adc
clc
dec
jmp
cmpsl
sub
mov
int
fwait
push
out
jecxz
sbb
jl
adc
into
push
scas
test
mov
aaa
fcomps
pop
clts
call
test
push
js
popa
out
or
stc
loop
mov
lahf
mov
xchg
mov
movsb
xchg
sub
mov
mov
stos
push
mov
fucomi
es
push
mov
push
call
lret
dec
aas
lea
mov
outsb
xchg
sbb
adc
xchg
out
test
xlat
add
dec
mov
lods
sbb
add
or
mov
in
cli
aaa
jo
xchg
sub
push
bound
jg
fs
mov
xchg
sub
icebp
xor
movb
mov
addr16
push
adc
push
testb
dec
sbbb
sub
xchg
mov
shrl
sub
out
inc
int
add
rorb
xor
cli
in
dec
adc
loope
mov
sbb
bound
test
sti
push
in
pop
pusha
es
shr
adc
sbb
mov
pop
cmp
sbbl
dec
cmp
xchg
jne
sub
mov
add
push
cmp
pop
or
xchg
or
and
sbb
bound
add
jo
leave
in
mov
xchg
mov
shrb
xorl
imul
add
and
add
repz
xlat
dec
out
cld
jmp
lock
pushf
out
jp
adc
jge
fcompl
and
out
mov
adc
lock
fcoml
jmp
xor
cltd
fsubl
je
jo
mov
fidivl
sarb
dec
mov
sub
xchg
cli
sub
icebp
rcl
mov
addr16
pop
shrd
std
idivl
repz
jbe
ds
ss
mov
je
mov
ja
xor
push
out
and
cltd
jp
stos
mov
cld
jle
out
pop
xor
insb
push
fxch
mov
inc
inc
testb
sub
stos
or
sub
pop
xchg
mov
and
mov
inc
jne
ret
lret
adc
adc
pop
fistl
xor
push
xchg
push
lret
push
test
cmpsl
xchg
lahf
xor
xchg
xchg
fldl
scas
pop
sub
in
push
mov
in
mov
xchg
int
sub
ret
mov
cmp
shlb
test
pop
xor
ja
mov
fsubrl
test
inc
repnz
lret
pop
xor
arpl
xor
push
fsubr
test
xchg
in
add
stos
insl
jmp
popa
aam
add
push
ds
sub
xor
stos
or
xchg
jg
push
clc
ret
sbb
jno
iret
cmp
or
in
dec
cmpsl
test
mov
xor
pop
sbb
mov
push
mov
jbe
sbb
xor
xlat
mov
sarb
jge
enter
shrb
sbb
shl
ds
enter
shrl
into
jo
sbb
jo
pop
aaa
cmp
mov
mov
lock
xor
add
inc
dec
cmp
stos
insl
pop
add
insb
je
popa
movsl
and
cs
fwait
cld
fistpll
pop
das
xor
rorb
lret
mov
into
push
mov
jl
jl
inc
shrb
mov
cmp
xor
cmp
dec
mov
dec
push
sub
mov
adc
xor
cmpsl
call
bound
and
test
fsts
cmp
int3
inc
mov
mov
mov
cmp
dec
mov
std
repz
lret
stos
jmp
cmp
xchg
push
mov
adc
je
xchg
fiadds
cmp
xchg
in
adc
dec
and
fldl
cmp
enter
or
scas
mov
cmp
push
cmp
dec
xor
push
out
sub
repnz
inc
pushf
dec
mov
andb
cmp
stos
stos
mov
adc
mov
mov
push
mov
and
push
push
sbb
mov
test
and
add
mov
mov
in
test
fldl
cs
xchg
add
repnz
ss
adc
cmp
sub
je
mov
cmpsl
mov
aas
in
leave
mov
int
scas
mov
jl
test
push
cmp
xlat
mov
jns
pop
sub
leave
mov
out
sbb
fmuls
and
test
inc
bound
push
ret
mov
out
mov
aaa
aad
mov
loop
inc
sbb
testb
fisubl
lock
std
lods
jno
cs
or
dec
mov
in
push
repz
adc
and
mov
gs
mov
xchg
sub
dec
sub
imul
mov
or
sbb
addr16
popa
into
push
insb
and
enter
adc
push
cmp
in
bound
push
adc
orl
gs
pop
mov
add
lock
push
jg
aas
inc
cli
sarl
insl
jbe
add
pop
jmp
cltd
mov
movsl
xorl
addr16
pop
inc
push
pop
jb
and
lret
stos
push
int
or
mulb
sbb
mov
aam
or
jg
push
fdivl
movsb
push
pop
je
inc
jecxz
sub
adc
iret
and
in
mov
mov
pop
jno
aaa
mov
iret
and
je
loop
fistps
in
pmullw
enter
cmpsb
xchg
mov
mov
nop
leave
push
je
aad
icebp
pushf
pop
popa
xor
cmp
push
lahf
mov
ret
scas
xchg
test
inc
fwait
push
and
loop
push
inc
rolb
popf
or
xor
ljmp
inc
inc
xchg
sub
jnp
add
or
cwtl
inc
lret
stos
shrl
lcall
mov
hlt
mov
mov
xchg
loop
cmp
test
inc
dec
cmp
dec
jae
xchg
rorb
lret
cltd
push
mov
dec
inc
sub
stc
mov
and
lcall
sahf
lods
je
jl
cmp
enter
cmpsb
lea
jge
mov
arpl
dec
addl
push
add
les
mov
or
mov
mov
sbb
mov
emms
pop
andps
or
mov
aam
je
rol
outsl
xchg
mov
icebp
test
les
ljmp
sbb
aad
jmp
shlb
sbb
outsl
out
pop
and
mov
jo
push
xor
cmp
cmp
cld
ret
shrb
lods
and
pushf
pop
insl
adc
in
sbb
and
sahf
mov
sub
outsb
fimull
lret
in
mov
bnd
sbb
dec
or
jns
push
dec
testb
and
jo
and
decb
or
inc
mov
inc
adc
leave
cmpsl
adc
rcrb
sbb
add
jmp
push
pop
les
jae
mov
mov
fsub
hlt
cmp
adc
repnz
jmp
iret
xchg
in
cli
jg
iret
jae
incl
outsb
mov
sbbb
or
scas
sub
xchg
cld
push
push
adc
xchg
jb
sahf
leave
sbb
sub
sbb
mov
mov
divb
pop
pop
push
adc
inc
lcall
xchg
fstps
push
and
cvtps2pi
flds
loopne
pop
inc
stc
pop
das
movsb
sub
inc
ja
dec
dec
test
push
out
negb
or
test
lret
ficoml
idiv
test
pop
pop
imul
out
adc
sti
push
inc
ja
lcall
nop
stc
sarl
shrl
jmp
xchg
movsb
ja
pop
pop
lods
push
cltd
lret
and
leave
jnp
fmulp
das
loopne
xchg
push
sub
nop
mov
movsl
jns
sub
add
mov
dec
add
cmpb
adc
dec
call
mov
cmpsb
sbb
mov
jge
subb
ja
popa
loopne
stos
xor
call
xlat
mov
jnp
jo
xchg
ficompl
jge
ret
fstpl
incl
and
sahf
and
loope
cwtd
push
std
aad
jmp
xchg
xor
jno
push
pop
sbb
es
lahf
aad
imul
pop
repz
mov
mov
push
pusha
push
and
gs
adc
imul
xchg
pushfw
cmp
sub
jl
int3
xchg
add
add
cmp
wrmsr
mov
sub
push
cli
or
subb
cmp
adc
dec
dec
sub
bound
fstpt
mov
push
push
pop
shl
pop
adc
mov
cltd
mov
and
fwait
in
sub
mov
fildll
dec
dec
lods
jp
xor
les
inc
mov
adc
sti
jmp
orl
sub
iret
cmp
out
les
inc
cmpsl
dec
mov
cmpsb
pop
decb
fwait
int
mov
mov
lods
adc
mov
pusha
mov
jmp
into
adc
jp
fldenv
int
lahf
popa
xlat
jae
mov
pop
sub
pop
testl
out
jecxz
out
dec
sbb
mulb
xor
jmp
pop
jbe
jge
adc
popa
fisttpll
add
mov
inc
sub
cmp
jae
jns
les
inc
vpunpcklbw
jnp
pushf
jno
sbb
ret
jmp
lods
arpl
jge
das
lahf
xchg
pop
jo
lcall
push
inc
xchg
ljmp
push
loop
mov
fimull
mov
sub
cwtl
test
xor
dec
cs
stos
or
lahf
push
movsl
sti
push
add
lcall
cmp
jb
xchg
inc
mov
out
push
pop
addr16
push
test
out
push
je
add
scas
ljmp
inc
pop
test
ds
mov
js
jno
sub
lock
dec
push
negb
es
push
mov
int
enter
push
mov
out
orb
cmp
or
mov
jbe
mov
jns
add
xchg
sbb
adc
adc
pop
lret
pop
dec
mov
shlb
jge
push
mov
sbb
xor
mov
rorb
addb
aaa
pop
push
jno
mov
jmp
andl
or
lds
push
imul
aas
ljmp
push
or
add
add
scas
ljmp
int
cmc
je
inc
fldln2
scas
arpl
xchg
mov
jle
jle
add
jnp
sarb
cmpsb
ljmp
xchg
lds
dec
cmp
leave
addr16
xchg
and
int
push
cli
sub
add
test
pop
leave
hlt
push
in
das
jmp
xor
xchg
cmp
push
repz
dec
cmp
out
lret
daa
cmp
in
and
mov
fbstp
loope
jge
xor
in
fs
pop
pop
loope
int
js
push
pop
jge
add
push
push
push
pop
cmp
bound
pop
push
lds
aad
xchg
sbb
das
mov
pop
inc
testb
adcl
xor
ficoml
insb
pop
dec
xlat
mov
call
fstl
imul
lods
sbbl
aad
dec
fwait
sahf
or
lahf
xor
imul
fadd
cwtl
xchg
clc
aam
sbb
fsubl
jnp
lods
mov
popa
cmp
adc
nop
dec
jge
iret
inc
push
je
mov
sbb
adc
xor
or
ret
daa
test
and
push
dec
push
into
cmpsl
shrl
ret
hlt
or
inc
jno
sub
lret
sbb
and
fsubs
outsb
xchg
sbb
aas
adc
add
mov
bound
mov
adc
jae
sbb
shlb
xlat
inc
ret
inc
jle
xchg
cmc
mov
and
je
dec
sub
test
je
mov
mov
pop
inc
xchg
and
pushf
xchg
fsts
xchg
in
or
sbb
js
mov
pop
dec
mov
ret
and
mov
xchg
pop
iret
subl
jns
xor
xor
jae
inc
lahf
or
sub
pop
xchg
lods
mov
add
in
cmp
out
int3
int3
xchg
lret
dec
scas
out
or
cmpsb
test
jnp
cld
lret
mov
imul
push
in
cmp
add
adc
sub
push
xchg
in
rcr
dec
rcrl
jns
rol
sbb
xchg
cmp
mov
adc
filds
lea
push
xchg
cmc
jbe
fldl2e
fwait
add
jge
and
stos
aad
in
in
popf
mov
cmp
les
or
cmc
inc
gs
subl
push
ljmp
test
out
dec
inc
in
push
lock
fildl
aad
push
lahf
xor
xor
push
mov
mov
cmp
xchg
and
notl
push
xor
adc
adc
and
maxps
inc
mov
jmp
jo
loope
rol
dec
lret
scas
stos
sub
jp
cmp
fimull
enter
sbb
mov
das
rolb
mov
lock
mov
sbb
adc
push
jbe
add
lods
fimuls
inc
cmp
cmpsl
adc
xchg
fdivs
mov
gs
jp
int
ret
frstor
jns
mov
inc
pop
mov
mov
xchg
insb
pop
adc
mov
add
sti
aaa
xchg
push
adc
rcrb
sahf
jo
adc
pop
and
cmp
sti
ret
scas
add
imul
adc
or
sub
into
in
repz
test
sbb
pusha
fwait
divl
inc
imul
add
in
cmp
out
or
jl
mov
adc
inc
mov
mov
pushf
dec
ds
les
jmp
sar
rcrl
into
gs
jl
xrelease
pop
pop
rorb
sbb
inc
cli
or
loop
es
rorl
notb
adc
cltd
test
jno
jbe
pop
pushf
xchg
hlt
mov
lds
leave
xor
ljmp
pop
xorl
inc
jle
andl
sub
ret
out
xchg
add
mov
insb
add
adc
jbe
jg
pop
jg
iret
call
sub
aad
leave
pop
dec
xchg
aam
pop
int3
adc
mov
dec
add
mov
and
mov
fnsave
and
repz
jnp
jecxz
sbb
add
cmp
add
icebp
ret
inc
rcrl
std
dec
enter
pop
xchg
cmp
or
add
pop
ljmp
pop
repz
mov
lcall
mov
inc
and
in
sub
fimuls
adc
jle
add
xchg
jmp
push
pop
inc
xchg
jge
sub
cltd
push
ljmp
xchg
push
testb
loope
dec
rcll
pop
in
jns
cmp
pop
aaa
inc
ret
adc
test
jne
out
xor
and
jl
fs
es
cmp
inc
pop
mov
mov
jmp
inc
push
movsb
stos
jl
dec
dec
fisttpll
inc
popa
adc
cwtl
mov
sti
pop
mov
jmp
or
or
sbb
sar
ret
xor
and
sub
mul
mov
cltd
xchg
popf
adc
mov
xchg
je
dec
test
cmp
jne
pop
stc
cwtl
xchg
inc
mov
call
fsubr
inc
mov
insb
sbb
or
adcb
repz
add
pop
push
add
mov
lock
ljmp
syscall
adc
rclb
in
cmpsl
jnp
mov
mov
or
pop
jae
xchg
imul
dec
cmp
sbb
fisubrs
ret
adc
lods
fstp
mov
push
pushf
inc
or
lcall
sbb
pop
in
cld
shlb
pushf
sbb
lcall
hlt
push
dec
gs
adc
pop
inc
xor
rorb
cld
xchg
stos
addr16
sti
test
mov
outsl
adc
mov
adc
ret
and
int3
sbb
mov
movsb
gs
inc
push
rolb
cs
aas
xor
insl
popl
and
movsb
mov
popf
mov
mov
jecxz
in
inc
aad
jp
mov
or
loope
scas
fbstp
push
cmpsb
adc
mov
and
mov
push
mull
push
repnz
rclb
ss
hlt
sub
fld
movsb
pop
enter
stc
bnd
and
inc
fwait
mov
push
popf
mov
mov
mov
sbb
add
scas
bswap
mov
adc
imul
fwait
xor
in
lock
bound
mov
mov
mov
mov
in
mov
cmpl
jae
lea
nop
mov
mov
pop
or
xchg
test
cmp
sbb
imul
repz
hlt
sbb
imul
call
add
adc
sar
xchg
fidivrs
repnz
shl
sub
xor
and
sub
xor
adc
cmp
inc
xchg
scas
push
mov
repnz
pop
add
fadd
mov
adc
stos
shrb
and
or
jge
int
pop
arpl
fdivrp
loopne
es
loop
rolb
mov
icebp
stc
xor
or
repz
shlb
xlat
mov
ja
jne
or
lock
mov
inc
cmpb
push
fnstcw
fdivrl
mov
insl
jge
sahf
sub
popf
mov
adc
lods
rcrb
cmc
adc
daa
mov
cwtl
push
fs
sub
and
fstpl
mov
cmp
xor
cwtl
push
add
pop
xchg
mov
mov
xchg
insb
jo
inc
xor
mov
cmpsb
test
das
pop
stos
sub
bound
scas
scas
in
test
iret
add
dec
inc
in
out
mov
and
outsl
or
cld
jl
mov
pop
lock
mov
roll
xor
cmp
loop
xchg
mov
shlb
sbb
dec
lds
sahf
aas
leave
pop
in
das
add
jnp
loop
aam
pop
xor
mov
jb
mov
xchg
inc
xchg
add
stos
add
dec
std
sub
sub
repnz
cmp
fstpl
push
fistpl
outsb
push
test
adc
mov
das
mov
pusha
fisttpll
stc
leave
es
lea
stos
mov
repnz
cmp
in
cmp
xorl
xchg
jbe
loopne
jae
push
inc
sub
or
pop
lret
mov
out
sbb
mov
jle
cmp
pop
daa
xor
call
rcr
pop
es
adc
inc
icebp
sarb
xor
or
pop
cwtl
pop
push
in
fcom
dec
call
scas
mov
std
sti
fcmovu
mov
mov
lea
test
bound
stc
xor
cmp
mov
mov
push
testb
jecxz
cld
in
popf
popf
insl
les
stc
nop
xor
pop
and
dec
push
hlt
push
push
add
sbb
adc
mov
mov
pop
ret
add
inc
imul
das
lea
mov
je
dec
fldcw
push
push
leave
adc
mov
orw
sbb
insb
or
mov
mov
push
dec
daa
and
jo
clc
insl
sbb
mov
jl
int
push
loope
mull
adc
sub
pop
rolb
scas
inc
mov
movsl
cmc
xchg
stos
jae
ret
or
sbb
mov
inc
decl
sub
adc
adc
dec
inc
cmpsl
jl
insb
lcall
cld
cmc
jne
xchg
jg
scas
sarl
mov
adc
addr16
nop
push
fisubrl
sub
in
hlt
or
mov
std
imul
jge
test
pop
mov
add
js
pop
rcrb
push
and
pop
cld
push
adcl
inc
mov
pop
xor
movl
sahf
cwtl
cld
push
sti
mov
mov
mov
out
inc
mov
int3
out
fstl
negl
out
push
orb
inc
sbb
sbb
ljmp
or
or
mov
rep
inc
aad
sti
add
mull
pop
mov
add
clc
or
dec
cld
imul
sub
sbb
dec
imul
sub
mov
leave
and
mov
jnp
in
rolb
addr16
xor
push
xchg
imul
jno
sub
js
cmc
push
jp
loope
imul
shrw
sarl
loop
insl
jne
or
outsb
icebp
pop
cmp
bound
add
xorb
ret
or
out
cld
shll
lret
or
js
pop
sbb
inc
mov
aad
inc
cld
mov
push
into
out
es
or
mov
mov
icebp
call
or
push
add
out
std
push
int
xchg
loope
xchg
test
aam
mov
fistl
lret
fistps
mov
in
daa
push
add
inc
push
js
test
jo
pop
mov
xor
in
and
mov
and
mov
lahf
mov
xchg
xlat
dec
mov
xor
mov
inc
add
mov
in
mov
and
leave
daa
idiv
push
decb
jge
mov
in
sbb
jno
dec
movsl
jl
mov
jp
cwtl
movsl
mov
imul
dec
xchg
xchg
in
lds
je
or
push
push
or
fs
push
jp
pop
cmp
jns
push
nop
enter
lock
push
and
mov
jg
out
fs
mov
test
cwtl
notb
cmp
jbe
inc
cld
cmpsb
cmpsl
data16
adc
test
mov
in
push
mov
xchg
lods
xchg
lret
mov
pop
inc
jp
push
xlat
dec
xor
sub
insb
dec
test
dec
fsts
pop
ss
jnp
jns
fwait
add
cmp
aam
xchg
jb
mov
lahf
rclb
mov
mov
mov
lock
pop
xor
andb
mov
cmp
dec
sbb
jb
scas
xor
mov
and
inc
loopne
cmp
push
sbb
adc
add
jp
and
inc
inc
xor
out
xrelease
filds
push
jle
dec
adc
jecxz,pt
cmc
int3
int3
sub
inc
fbstp
mov
mov
add
pop
aaa
mov
sub
and
test
mov
dec
pop
sbb
out
test
sub
test
xor
cli
cld
mov
cli
jne
in
jns
mov
jno
mov
addr16
cmp
mov
cmp
shr
push
test
jne
xor
mov
mov
imul
inc
adc
cltd
sti
lret
sub
sub
enter
outsb
sti
decl
push
lret
pop
pop
movd
xlat
arpl
fidivs
sbb
lcall
mov
inc
into
xchg
cmp
clc
push
push
out
sbb
pop
jp
imulb
rcr
push
subb
sub
inc
imul
dec
mov
mov
mov
cmc
mov
aas
ss
add
pop
adc
dec
dec
mov
xchg
inc
jle
mov
add
sub
addr16
push
cmc
ret
sub
or
add
in
sub
pop
push
or
push
cmp
adc
adc
jae
popf
dec
mov
jecxz
shr
aaa
adc
mov
mov
add
in
sahf
rcl
sbb
fs
push
mull
xchg
dec
pop
mov
or
xchg
loopne
fdivr
sbb
andb
pop
jns
sub
jne
ret
adc
hlt
jle
imul
loop
push
adc
mov
inc
add
inc
add
add
xlat
icebp
roll
mov
ja
dec
aas
mov
sti
push
and
pushf
push
loope
ret
ret
imul
test
or
jne
sub
nop
cld
jae
call
add
pushf
sub
stc
stos
dec
pushf
cltd
cmp
push
xor
mov
fs
dec
aam
movsb
jp
push
mov
or
fmull
cmp
adc
cmpsb
inc
push
std
mov
es
xchg
aam
pop
dec
pop
in
sub
pop
mov
ret
push
sbb
add
jecxz
fs
andb
dec
xlat
inc
fmuls
pop
sahf
addr16
jno
and
push
push
and
mov
jae
lret
das
dec
adc
addr16
or
nop
ds
jp
cmp
aaa
adc
aas
int3
jns
je
daa
push
insb
jl
out
sarl
fcomp
mov
clc
dec
pop
std
leave
in
push
ja
mov
aas
push
pop
pop
scas
or
daa
or
and
xchg
mov
dec
std
mov
add
imul
outsl
sahf
cmpsb
sub
je
lods
push
dec
jno
push
les
or
jnp
cmp
mov
xchg
leave
stc
sub
pop
sbb
out
push
daa
adc
mov
mov
adc
in
sub
scas
xchg
hlt
jle
test
imul
push
xor
mov
mov
gs
cmp
arpl
cmp
xor
imul
sbb
hlt
mov
add
outsb
inc
cmp
sarl
xchg
es
mov
loopne
dec
rolb
shlb
push
mov
or
in
sub
icebp
inc
cmp
mov
mov
inc
inc
jl
and
ret
jl
loop
nop
cmp
mov
pop
aad
lods
lds
std
pop
std
and
repz
loope
mov
addr16
cmc
mov
pushl
xchg
je
push
sarl
mov
lcall
jns
dec
sbb
packuswb
pop
fcmovne
jmp
lea
ret
bound
pop
adc
cmpsb
call
jno
repz
adc
mov
adc
aad
sbb
aad
mov
xchg
xchg
lahf
sub
fwait
mov
mulb
cli
out
or
ja
mov
sub
sub
lret
pop
jo
insb
jo
ja
into
mov
lock
gs
xor
fwait
adc
pop
cltd
sub
and
ret
jge
adc
push
mov
or
xchg
push
pop
add
aaa
aad
inc
mov
xor
cmp
cmp
mov
push
lds
inc
fnstsw
cmp
mov
or
xor
fdivl
ds
cmp
pop
mov
cmp
cmpsl
scas
sub
or
je
imul
mov
jg
xorb
inc
imul
adc
test
sub
lods
cld
aaa
adc
out
outsb
sarb
dec
add
imul
cs
call
lds
shlb
das
sub
loope
mov
ret
sbb
cli
orl
popa
inc
out
dec
and
ret
and
jmp
mov
lcall
push
mov
enter
xadd
movsb
cmpsl
mov
and
frstor
lret
xchg
jnp
sub
push
and
leave
dec
xchg
inc
sarl
out
cwtl
pop
mov
int
mov
int3
jmp
mov
fsubrs
movb
fldl
pop
or
bnd
popf
jnp
dec
xchg
shll
mov
add
or
mov
in
loop
aam
shrl
js
mov
mov
push
in
repz
cmpsb
outsl
mov
cmc
or
stc
leave
sbb
dec
sbb
icebp
jo
add
imul
imul
xchg
mov
in
js
sbb
ljmp
mov
push
and
sti
push
mov
cmp
pop
sub
xorb
mov
scas
std
mov
paddq
fidivrs
leave
mov
xchg
movsl
lret
getsec
out
or
ljmp
mov
push
add
inc
mov
pop
test
jo
popf
loop
cmp
iret
repz
inc
xchg
das
call
jmp
pushf
stos
test
push
or
and
sub
pusha
roll
xchg
out
sti
push
push
mov
popa
push
xchg
pop
mov
iret
mov
mov
dec
in
lret
lret
adc
roll
mov
add
std
std
sbb
lcall
mov
pushf
jno
xor
sahf
or
jo
or
jg
xchg
jg
movsl
loope
jl
mov
data16
sub
stc
nop
pop
daa
sub
push
shufps
cmp
aas
cmpsb
sub
xchg
sbb
sbb
xor
sub
mov
loopne
aad
xor
negb
mov
insb
clc
rorl
cmp
fst
pop
mov
aam
jle
pop
xchg
push
iret
fimull
pushf
loop
test
xor
push
leave
sbb
adc
js
mov
xchg
stos
sbb
xchg
jg
shll
in
mov
cli
pop
inc
mov
lock
es
dec
xchg
push
clc
xlat
sti
ret
mov
sbb
mov
ja
cli
mov
lcall
loope
ss
add
in
inc
cmp
stos
out
sarl
pusha
or
stos
sbb
push
cwtl
fistpll
or
sub
sbb
lods
adcb
das
jno
lret
xchg
ja
and
cltd
cmc
loop
pushl
push
fsubrp
fisttps
test
and
ds
std
out
test
xchg
mov
dec
xchg
push
cmp
test
xchg
cmovne
clc
mov
insb
lret
xchg
sbb
jbe
push
clc
mov
call
push
and
or
pop
imul
mov
pop
mov
test
xchg
ja
cmp
mov
push
push
popf
mov
mov
push
mov
xor
das
adcb
jmp
mov
xchg
inc
hlt
cmc
mull
xchg
fidivl
insb
shl
adc
pop
test
andl
movsl
imul
jae
push
xor
jo
push
shll
pop
adc
mov
mov
pushf
jp
mov
mov
pop
or
jg
or
aam
jne
test
mov
jp
sbb
shll
in
testb
push
movsb
test
sub
mov
das
push
mov
insl
or
movsb
fsubrs
pop
pop
cmp
xchg
flds
pop
pop
pop
hlt
adc
jne
lahf
es
into
sub
in
mov
cmp
jae
fstpl
pop
cmpsb
mov
xchg
lret
loop
leave
mov
daa
pop
cld
ljmp
push
jl
pop
pop
inc
adc
mov
push
daa
std
movsb
std
push
xchg
add
jle
xorl
pop
fistps
xor
push
and
xor
out
cli
rclb
seta
notb
imul
fistl
pop
and
sub
add
pop
adc
mov
push
cmpsb
psubd
out
jns
es
test
mov
jbe
lods
xchg
out
fbld
movsb
jge
fcmovu
lds
xchg
outsb
data16
rolb
out
sub
stos
and
pusha
dec
xchg
jle
stos
leave
mov
mov
push
and
test
test
fstl
int3
and
cmc
cmp
mov
jmp
int3
mov
fcoml
jge
dec
lahf
and
aaa
int
add
ret
xor
stos
fdivl
xor
lds
ret
adc
scas
aas
add
mov
mov
outsl
xor
sbb
orb
xchg
xor
repnz
std
into
nop
mov
addl
mov
fistps
mov
pop
ret
cmpsb
lds
mov
or
jg
jge
fs
xor
jmp
push
into
in
testb
and
mov
mov
imull
add
inc
call
mov
mov
scas
popa
das
jbe
cmp
pop
insl
mov
adc
adc
inc
xchg
fcmovbe
jne
and
or
xchg
lock
xor
pusha
inc
lock
ljmp
sahf
pop
cmp
xchg
fwait
cli
mov
adc
push
mov
cmp
push
clc
dec
cwtl
test
sub
les
cmp
cmp
aam
push
pop
mov
mov
push
xor
data16
lds
adc
jmp
jle
lea
sub
xor
jg
xchg
push
test
ret
cmp
ss
push
inc
in
ja
cwtl
test
xchg
inc
shl
shlb
out
add
or
nop
sub
in
xor
lcall
add
das
clc
jae
xchg
mov
addr16
mov
mov
jecxz
bound
int
in
lea
sub
js
call
cmp
push
dec
fsubr
lods
pop
add
lcall
inc
pop
xor
xchg
xchg
fsts
dec
movsl
imul
fwait
repz
aam
dec
and
ret
fcomps
xorl
ja
cmp
inc
sub
adc
and
jmp
test
xchg
add
bound
inc
int
push
andb
enter
insl
lods
insl
lcall
cli
mov
inc
in
jmp
xor
sar
mov
sbb
and
xchg
clc
pop
pop
dec
lret
mov
aaa
leave
fsubrl
fadd
cmp
dec
cmc
fs
sbb
xor
push
jg
adc
mov
or
xchg
out
pop
test
shld
or
mov
sbb
les
fists
cmp
mov
test
loope
sahf
inc
arpl
in
mov
insb
jno
stc
mov
xchg
sbb
or
xchg
jle
lret
jmp
sbb
xchg
fdivrs
mov
ret
xor
fsubp
movsb
jg
cmpsb
pop
aam
cli
sub
xchg
dec
add
ss
jl
addr16
call
lcall
jno
cmc
test
mov
sub
cli
or
lahf
sub
imulb
cmp
pop
mov
cmp
rorb
push
fstps
sbb
jo
inc
pop
jp
scas
xor
push
fisubl
jecxz
incl
and
insl
lods
test
push
aaa
inc
data16
arpl
out
push
out
out
xorb
shrb
push
adc
dec
cmp
inc
sbb
push
out
and
js
jnp
push
xlat
and
or
jbe
sbbl
dec
adc
ficoml
inc
xlat
fbstp
pop
jns
sub
pop
gs
pop
pushf
xor
popa
adc
sub
push
call
xor
add
out
xchg
test
mov
int
pusha
imul
into
in
mov
mov
mov
std
sbb
lret
orl
mov
std
fidivrl
and
add
fs
into
add
push
jne
ljmp
in
and
inc
sbb
hlt
pshufw
inc
xlat
xor
push
cli
mov
adc
push
mov
sub
out
lcall
lret
fidivrs
push
movsb
rcrl
cmp
mov
jp
mov
add
inc
outsl
and
cmp
je
dec
outsb
pushf
fmull
fsubrl
add
mov
push
jge
sbb
xor
inc
les
popf
sbb
push
divb
fldl
inc
mov
repnz
int3
mov
push
push
js
or
inc
sub
es
mov
shrl
clc
mov
or
in
mov
inc
cmp
cltd
xor
repnz
fbstp
cmpsb
aad
mov
flds
pop
dec
mov
adc
mov
call
insb
lret
repnz
jno
xchg
rorb
ds
add
xchg
fisttps
dec
mov
pop
bound
push
xchg
mov
sahf
push
test
mov
jo
or
add
sahf
mov
jmp
mov
inc
or
pop
cs
mov
test
or
add
into
imul
test
or
roll
repnz
std
sbb
push
mov
mov
sbb
pop
inc
add
dec
call
loop
push
or
cmp
fisubrs
das
jge
addr16
ss
sbb
jp
mov
movsb
push
jae
hlt
add
ret
adc
hlt
or
icebp
addr16
pop
cmp
sbbl
loop
mov
sbb
and
imul
hlt
fldcw
aam
sub
pop
lock
mov
ret
rolb
test
xor
push
xor
fwait
add
push
pop
dec
les
in
loop,pn
gs
adc
or
aam
mov
pop
loope
ljmp
mov
addl
inc
imul
rolb
fucomi
std
cmp
icebp
fsub
pushf
jmp
outsl
push
xchg
xlat
push
rclb
xor
push
xor
adc
cmp
loopne
stos
push
add
xchg
xchg
jne
dec
add
mov
popf
ds
inc
jne
pop
aas
daa
out
pop
adc
sub
fadds
lcall
pop
stos
push
jle
cmp
ja
sub
fildll
nop
call
pop
jl
mov
out
mov
xchg
insb
insb
add
sti
or
lret
lods
mov
testl
push
jo
das
mov
and
data16
dec
mov
mov
scas
mov
cmp
in
add
mov
das
dec
in
gs
jmp
sub
bound
lods
mov
pop
movsb
pop
xchg
xchg
add
fisubs
mov
or
mov
mov
push
outsl
pop
and
and
add
test
call
sub
test
stos
roll
mov
jnp
or
in
mov
fdivl
pop
cmp
push
add
mov
xor
jle
or
insb
rep
incl
inc
ror
pop
adc
ror
data16
pop
pop
faddl
popf
out
cltd
aas
les
mov
add
or
ret
and
mov
es
pop
jno
out
mov
or
push
pop
mov
fsubrs
sbb
insl
lret
or
js
hlt
ffreep
cld
lods
sbb
dec
dec
scas
jbe
test
mov
aas
lods
cld
mov
sub
push
fnstsw
sub
cli
movsb
xchg
xchg
rolb
inc
fbstp
cmpsb
das
cmpsl
ficoms
cli
mov
fisubs
repnz
mov
inc
xchg
in
aad
xchg
bound
jnp
adc
lret
pop
xchg
cmp
mov
push
cs
jmp
push
sbb
and
sbb
mov
pusha
jo
cmp
out
sub
cmc
mov
xchg
into
pop
mov
jle
out
repnz
dec
xchg
cltd
loop
pop
xchg
lea
or
mov
out
ds
sub
or
clc
movsl
movsb
inc
cmp
stc
and
inc
mov
in
xor
cli
movsl
adc
in
push
leave
insb
je
push
rcrb
sbb
mov
in
mov
cwtl
icebp
adc
jno
jle
mov
daa
cmp
out
insl
in
loopne
cmp
push
push
sbb
test
into
leave
jne
pop
sub
xchg
xchg
insb
out
sbb
es
cmpsb
loopne
mov
je
lret
inc
outsb
imul
scas
xor
xchg
jge
popa
arpl
fwait
imul
mov
adc
das
jne
bound
or
movsb
loop
dec
xor
ret
and
ljmp
aaa
push
cmp
mov
inc
pop
jmp
cltd
push
jbe
mov
pop
xchg
inc
mov
mov
or
jno
mov
mov
sbb
pop
xchg
mov
cwtl
lcall
fucomip
add
std
fsts
lds
insl
cmpsb
dec
or
mov
loop
out
mov
lods
jno
pop
adcb
xor
pop
movsb
mov
add
mov
pop
xchg
roll
push
cli
sub
mov
dec
add
aam
movsl
sub
mov
test
cmpsb
out
and
jne
adc
jecxz
mov
sbb
inc
lock
or
lret
mov
push
jb
call
xchg
inc
mov
pop
cmp
fnsetpm(287
outsl
pop
enter
and
test
mov
out
pop
mov
int
mov
xlat
stc
sbb
xchg
js
mov
dec
sub
inc
std
jle
xor
xor
fstp
in
mov
xor
push
add
jnp
pop
sbb
jp
stos
adc
nop
push
js
xorl
lock
inc
xchg
jmp
notl
or
xor
dec
mov
insl
arpl
xchg
pop
imul
push
mov
icebp
mov
or
int
push
shl
add
jge
mov
lahf
push
decl
lods
add
push
in
cwtl
dec
mov
dec
test
shrl
add
stc
jne
push
dec
scas
jns
push
popf
xchg
jge
icebp
in
xchg
es
loop
push
cmp
mov
mov
inc
push
into
addr16
rcl
loope
xor
in
xchg
lock
ret
xor
sti
mov
in
jp
clc
sub
dec
jnp
adc
dec
lea
xor
out
cmp
imul
int
pop
lods
sbb
clc
mov
hlt
xor
nop
inc
mov
pop
xor
loop
test
xor
sub
xchg
std
insl
into
outsb
cltd
shll
or
mov
mov
js
jmp
mov
out
in
stos
adc
xorl
in
outsb
push
stos
in
data16
aam
ss
mov
rclb
movsl
adc
jbe
ja
test
and
mov
xchg
imul
pop
mov
je
xchg
lret
mov
cmpsl
push
or
je
mov
and
js
sub
lods
jne
popf
mov
mov
loopne
stos
mov
pop
aam
outsl
mov
pop
les
pusha
or
rclb
rol
jge
xor
gs
imul
jb
adcl
push
add
dec
subl
and
cld
sbb
cs
fst
andl
repnz
rcll
negl
idivb
xchg
test
mov
mov
inc
cmp
cmp
add
xchg
popa
pop
or
lds
pushf
xor
ss
mov
popf
insb
adc
imul
negb
pop
fstp
xor
arpl
pushf
std
push
add
fs
mov
add
jle
jo
ljmp
adc
jmp
jmp
push
inc
xchg
testl
ss
fprem1
shl
in
enter
int3
xchg
inc
cmpsl
jle
xlat
loope
insl
inc
push
xchg
xchg
sbb
xchg
ret
ss
nop
popf
popa
dec
push
mov
cmp
xchg
mov
enter
std
jo
dec
add
out
leave
movsb
cmpsb
or
into
jne
add
nop
inc
fsts
adc
jne
xor
cwtl
in
aas
test
xor
pop
cli
fists
pusha
aaa
adc
lcall
aam
adc
pop
mov
fldl
sti
adc
sarb
mov
rol
sbbl
pop
nop
xor
mov
lds
and
repnz
mov
loope
stc
insl
aas
mov
rol
xor
and
mov
pop
into
fdivl
aam
adc
dec
jmp
mov
or
push
mov
or
das
jl
xor
inc
lcall
push
add
je
rorl
xor
movsb
add
and
movaps
inc
lods
xchg
pop
ja
adc
jle
or
es
pop
js
mov
pushf
pop
mov
arpl
pop
xchg
jo
cmp
movsl
pop
mov
mull
xor
cmp
out
mov
pop
mov
pslld
enter
cmpsl
imul
lock
ret
jmp
stos
sbb
fsts
lret
in
push
stos
or
cmc
or
fprem
test
cld
push
jge
and
pop
jbe
mov
aas
shll
ret
fwait
push
gs
cmc
repz
mov
jg
inc
mov
xchg
out
enter
pop
pop
mov
mov
sbb
pop
sbb
sarl
pop
mov
sub
pop
push
fcoml
hlt
aas
pop
mov
fimuls
ret
or
int
and
sti
and
int3
xchg
or
mov
add
in
add
sub
mov
mov
sub
fistpll
sub
inc
aas
sbb
dec
sbb
adc
stos
jmp
loopne
add
fs
into
mov
jno
lea
testb
xchg
cltd
imul
xchg
mov
jle
pop
dec
stc
cmp
adc
push
lret
test
mov
push
add
sbb
int
scas
and
sub
popl
xor
or
jl
and
mov
fstl
lahf
fxch
mov
xlat
push
adc
cmpsl
pop
sbb
into
mov
cmp
sbb
pop
gs
js
mov
adc
cltd
or
stos
dec
loopne
dec
mov
leave
jmp
test
ljmp
adc
loopne
cld
and
mov
mov
pop
dec
insb
push
mov
and
add
or
dec
jbe
leave
cmp
ds
sbb
popf
jle
and
pop
push
pop
cs
push
dec
mov
pop
dec
add
xor
jno
inc
pop
xor
mov
out
lcall
iret
cmp
inc
add
xchg
push
cmp
les
mov
int
sub
pop
ret
movb
mov
inc
mov
xor
mov
cmpl
pop
iret
mov
rcrb
aam
loope
mov
icebp
inc
andb
adc
mov
xchg
cmpsb
inc
dec
rcl
sbb
jl
pusha
fdiv
adc
xor
lods
jmp
outsb
loop
push
jmp
mov
ljmp
fwait
pop
insb
sbb
movntps
movsl
and
adc
sbb
lods
inc
pop
std
test
mov
arpl
xor
xor
cmp
sub
shl
fcomi
call
sbbl
rclb
daa
jecxz
push
out
lods
mov
sub
cld
push
hlt
sub
push
add
stc
pop
nop
dec
lcall
ds
push
cs
rorl
mov
cmc
xchg
enter
mov
bound
daa
ja
in
mov
xchg
mov
pop
je
adc
lods
gs
rorl
xchg
and
mov
add
lea
mov
adc
js
mov
rclb
sbb
sub
push
inc
sahf
add
dec
insb
add
sbb
cltd
outsb
mov
add
xchg
addr16
mov
jl
add
mov
js
and
mov
loop
repz
cmp
enter
data16
js
setg
xchg
push
mov
pop
sbb
jl
jns
adc
adc
or
aaa
bound
subb
pop
sbb
jo
xchg
mov
xchg
clc
ret
aam
insb
cmpsb
ficompl
ds
jnp
mov
push
inc
cmp
xlat
mov
rcrl
lss
or
inc
jne
icebp
mov
iret
arpl
std
repz
repz
jo
jmp
pushf
les
mov
push
push
mov
out
call
jae
push
push
pop
or
or
mov
ficoms
dec
mov
sub
rcrl
sbb
mov
inc
std
cld
xor
mov
or
imulb
ret
push
cmp
xchg
mov
clc
aad
dec
ret
iret
out
push
mov
mov
jle
iret
stc
pop
inc
loop
roll
sti
ja
insl
inc
rol
cmpl
mov
loopne
jg
add
add
stos
in
xor
jp
mov
mov
lcall
pop
jno
aam
xchg
and
leave
test
add
dec
loopne
dec
pop
je
in
jo
mov
push
mov
jmp
int
insb
inc
cmp
stos
adc
cmc
inc
inc
popa
stos
pop
das
fs
sbb
push
repnz
and
push
out
scas
mov
xor
outsl
xchg
sub
ret
mov
sbb
sbb
or
or
imul
sbb
cld
jp
add
jl
pop
mov
lret
add
scas
inc
in
lahf
fisttpll
sub
test
imul
sbb
sbb
or
aam
inc
add
cmp
imul
js
fcmovne
add
fistpll
shl
out
iret
movl
mov
inc
aas
cs
xchg
cld
lock
aaa
iret
data16
shrl
int
rcll
shll
pop
sarl
dec
mov
xchg
inc
jnp
iret
lods
push
push
sub
and
sub
mov
jne
sbb
mov
add
cmp
ficoms
lods
into
ret
mov
jmp
cmpsb
xor
sbb
out
push
insb
mov
xchg
out
mov
std
or
adc
pop
mov
sub
mov
pop
dec
adc
mov
or
push
hlt
push
add
cmpsb
addb
push
stos
push
inc
mov
cmp
push
jmp
hlt
and
dec
mov
pop
cmp
scas
mov
xor
fsubrl
add
xlat
sbb
jo
and
xchg
in
lea
pop
call
mov
inc
or
xchg
stos
adc
fbstp
out
shlb
jle
dec
push
rol
jnp
in
jno
or
pop
xchg
lahf
nop
lret
call
es
pop
adc
jecxz
daa
ja
ljmp
sbb
xchg
sbbl
xor
call
cmpsl
mov
repz
cltd
addr16
fstl
pop
jns
mov
sub
andb
ja
out
xor
popf
sub
dec
testl
or
adc
adc
out
mov
jnp
mov
pop
add
rclb
loope
jbe
push
and
testb
cmpb
outsl
push
mov
inc
pop
ds
rcl
push
push
xor
xchg
aad
and
mov
cmc
mov
in
ret
jns
xor
std
std
scas
and
xor
subb
mov
xchg
int
hlt
inc
in
inc
inc
mov
adc
adc
shr
shl
mov
ja
bound
rcrb
mov
sbb
push
adc
jmp
dec
mov
mov
and
std
push
inc
gs
inc
sti
pop
das
les
xchg
sbb
and
mov
adc
dec
cmp
sub
push
shl
nop
jp
add
jl
daa
jae
out
or
pop
sti
jle
ds
addr16
lret
cmp
push
mov
mov
insl
scas
stos
in
icebp
jmp
adc
inc
ljmp
mov
mov
cmp
arpl
pop
enter
jl
loope
dec
leave
adc
lahf
mov
push
or
aaa
shlb
jecxz
les
sbb
sub
enter
hlt
repz
divb
test
pop
or
leave
xchg
inc
pushl
cltd
in
hlt
xchg
jle
dec
adc
lods
cmpsl
outsl
push
mov
xchg
or
loope
and
jo
gs
pop
shl
jne
fildl
lcall
dec
lret
mov
es
push
ret
hlt
daa
inc
pop
jmp
fstp
sbb
cs
nop
cmp
cmc
mov
mov
scas
mov
vpcmpeqd
aad
and
sahf
sahf
pop
ret
push
xor
pop
outsb
movsl
mov
add
fsts
dec
jecxz
andl
fisubrl
push
xchg
mov
cmp
push
stos
inc
leave
jns
popf
loop
sarl
or
inc
mov
mov
fstl
xor
pusha
mov
xchg
pop
pop
fwait
movsb
test
test
movsl
or
xor
jl
das
stc
stc
mov
repz
and
lret
mov
sbb
pusha
movb
dec
jne
call
imull
inc
dec
xchg
pop
popa
sub
jae
mov
stc
push
in
adc
fiaddl
test
das
lea
push
dec
out
and
xchg
xchg
fidivrs
mov
inc
imul
pop
icebp
movsl
cld
push
inc
xor
sub
rolb
dec
dec
std
nop
xchg
sub
dec
test
rorl
push
mov
jnp
sbb
and
sarb
ret
rcrl
jmp
ret
cld
ffree
in
setp
push
pop
mov
pop
leave
sbb
jne
xchg
sub
xor
mul
inc
mov
aas
adc
cli
push
cmp
aaa
sti
push
xchg
pop
cld
sbb
test
addr16
adc
xchg
mov
inc
repnz
sbb
icebp
or
or
and
pop
loope
dec
xchg
adc
shrb
and
dec
push
cmp
inc
call
and
mov
movsl
mov
lods
faddp
sub
xchg
loopne
gs
pop
add
popa
ret
mov
adc
lods
fs
ljmp
shr
jae
sub
arpl
jmp
cmc
xor
push
test
out
das
jmp
rcrl
stc
jp
mov
aam
inc
and
jg
or
pushl
push
jle,pn
pop
dec
rcll
loopne
fildl
iret
into
mov
cmc
imul
pop
mov
push
mull
adc
ss
push
in
mov
aad
adc
dec
sub
lds
push
push
aad
out
stos
out
jb
xor
pop
lods
pop
and
jnp
test
push
lods
push
jg
add
xchg
xchg
jno
cmpsb
pop
and
sub
sbb
in
jns
add
jmp
mov
test
pand
and
pop
mov
inc
xor
mov
dec
xor
pusha
dec
xchg
das
pusha
sbb
cmp
mov
push
mov
stc
push
pop
mov
dec
dec
outsb
hlt
aam
int3
leave
xor
dec
mov
xor
mulb
dec
shll
in
scas
mov
fs
mov
mov
data16
fprem1
jg
xchg
ds
jbe
insb
push
in
push
sub
arpl
inc
testb
shlb
bound
lock
mov
pusha
mov
jae
stos
das
jl
and
dec
sub
cmpl
mov
stos
stos
test
stos
aad
sub
ret
lods
loope
mov
hlt
xor
dec
push
cltd
mov
imul
adc
pop
addr16
ds
xor
pop
fisttpl
std
dec
inc
repz
mov
inc
fisubrl
pop
and
inc
pop
cmp
cmp
sti
sti
push
ja
jecxz
loopne
mov
cmpsl
roll
add
aaa
pop
mov
ja
mov
push
push
jae
cmp
xor
ret
dec
xchg
pushf
lds
out
and
mov
pop
loope
mov
fcmovnb
sub
aas
inc
add
fnstcw
mov
shll
push
repnz
dec
int3
andb
pop
xor
and
xor
outsl
xchg
mov
out
ficoml
pop
faddl
and
test
add
sub
loope
push
jp
shlb
jg
ffreep
mov
fists
add
xor
cmpl
xchg
out
popa
xchg
pop
xchg
add
mov
xchg
sub
in
dec
fs
fadds
sub
sub
sbb
sbb
dec
lods
std
mov
test
sbb
inc
or
adc
push
mov
imul
loope
sub
dec
test
jae
clc
pop
jns
add
fisubs
xchg
cltd
ljmp
nop
rorb
pop
push
xchg
into
pop
adc
cmp
add
pop
cmp
ja
int3
in
lahf
std
out
insl
dec
in
cmp
mov
jecxz
add
cmp
adc
pop
ja
xchg
jns
cmpb
push
add
mov
outsb
cmc
cld
pop
cmpl
ror
push
shll
add
movb
xchg
sub
dec
pop
dec
loop
mov
jno
jmp
std
inc
add
mov
or
lds
adc
sub
ljmp
sub
or
cld
icebp
sub
mov
mov
shll
or
mov
push
cs
mov
jg
cwtl
mov
aas
lret
push
in
scas
loopne
mov
inc
fidivrl
adc
adc
insl
scas
and
pop
out
jbe
pop
mov
add
adc
mov
call
movsb
jmp
push
loopne
das
pop
fwait
cmpsb
jo
fdivl
daa
scas
aaa
or
cmp
cmp
movsb
or
imul
in
add
sahf
adc
dec
jl
push
add
lds
cmp
push
mov
xchg
cmp
loopne
mov
xchg
xchg
jge
add
xchg
cmpl
cld
cmp
cltd
insb
out
pop
push
loop
xor
sbb
rorb
and
dec
jg
xchg
je
sbb
hlt
loopne
inc
push
inc
sub
mov
pop
in
fnsave
sub
popa
mov
stos
mov
outsb
mov
movsb
popf
test
mov
rcll
rcrb
inc
rcr
movsb
adc
adc
inc
jp
es
sub
push
mov
or
mov
mov
mov
lds
inc
gs
inc
jo
push
lods
cmp
addr16
xchg
inc
and
inc
and
test
mov
stc
pop
and
outsl
lods
insl
lock
xchg
push
js
mov
dec
xchg
cwtl
dec
dec
mov
lret
jmp
push
stos
cmc
add
xchg
fsubrl
loope
xor
out
lahf
in
ja
shrb
mov
lock
nop
fdivrl
shll
or
cs
popa
push
fistpll
jo
mov
xlat
xlat
push
iret
push
sub
jo
push
sub
aas
adc
jae
aaa
add
int
mov
mov
or
daa
pop
jp
pop
cmp
adc
push
add
mov
aas
cwtl
xchg
repz
cmpsl
lods
outsl
push
roll
popa
orl
cmp
iret
cmpsb
dec
jp
push
pcmpeqb
xor
arpl
jmp
test
stos
lret
push
inc
std
jae
jp
gs
mov
sbbl
sbb
push
pop
cmpsb
inc
push
mov
or
out
and
inc
push
jns
add
sbb
lock
xchg
push
pusha
push
push
sahf
cltd
sub
inc
mov
lcall
popf
dec
les
xchg
jecxz
sub
push
or
sbb
iret
fmull
sbb
jno
divl
repnz
ss
lcall
les
imulb
into
fnstsw
push
and
movsl
dec
push
pop
sbb
nop
cmp
xor
push
lods
mov
jmp
push
cmc
mov
inc
test
fstpt
lret
pop
stos
push
push
lds
adc
outsb
lcall
shll
add
inc
adc
cmp
lods
jle
adc
dec
test
cltd
sbbb
shlb
cmpsb
mov
mov
push
push
mov
insb
stos
push
popa
add
sbb
daa
pusha
pop
mov
ss
jmp
push
inc
jecxz
and
xor
ret
mov
call
fidivrl
dec
mov
sub
cli
fadds
loopne
jne
pop
add
jp
jns
xor
push
add
inc
sahf
and
pop
fildll
pop
mov
jg
jb
mov
add
push
xor
push
and
mov
mov
xchg
mov
sbb
aas
cmpsl
sub
pop
pop
xchg
fs
push
xchg
push
movsb
xchg
jno
lcall
in
repz
cmpsl
add
jae
pop
out
adc
and
ss
mov
loope
push
stc
icebp
movsb
mov
and
sbb
pop
mov
push
add
mov
mov
fimull
push
sbb
add
xchg
fsts
sbb
js
add
mov
fisttpll
dec
xchg
pop
in
test
hlt
andb
je
pop
or
iret
mov
fsts
ds
push
or
pop
popa
orb
sbb
add
popf
inc
imul
pop
sub
cmp
cmp
stos
nop
mov
out
adc
and
fdiv
outsb
scas
fisubl
mov
dec
jp
lret
dec
xchg
cli
lods
adc
sbb
or
cmp
sub
cmp
mov
andb
lret
cltd
out
ret
sbb
mull
xchg
push
cmpsb
and
inc
arpl
mov
sub
sti
push
and
lret
ds
rcll
push
xor
adc
test
mov
mov
dec
in
sbb
call
pop
jp
jno
sbb
dec
cmp
mov
shll
push
mov
adc
fcmovu
cmpsb
in
sbb
loope
adcb
iret
mov
sahf
je
test
xor
add
pop
push
cmpsl
sbb
dec
das
cli
fwait
push
cmp
jbe
adc
jne
mov
sbb
pop
aad
bound
lods
mov
outsl
inc
push
shlb
rcl
pop
sbb
jle
pop
or
int3
scas
mov
jmp
sbb
cmpsl
notb
das
imul
pop
cmpsb
add
adc
push
jecxz
inc
aad
push
push
inc
inc
sub
mov
mov
mov
pusha
test
lock
mov
jne
xor
lods
xchg
pop
iret
and
movsl
mov
test
mov
jnp
mov
mov
pop
ret
lods
mov
inc
adc
stos
fsubrs
mov
pop
pushf
cwtl
roll
dec
mov
cmc
sub
daa
xor
ror
dec
jo
lret
and
cmp
pop
rcrb
je
les
add
fcmovnb
clc
das
xacquire
mov
imul
cmp
jns
push
fcoml
lret
mov
and
xor
push
jp
mov
ss
in
xchg
test
popa
jae
aaa
push
or
and
lret
cld
cwtl
mov
adc
inc
xlat
inc
xchg
out
popf
lahf
mov
enter
jl
stos
add
icebp
cmpsl
and
jb
mov
std
cmp
in
pushf
mov
mov
rclb
lods
lret
mov
lds
jnp
ret
ss
mov
xor
fisubs
pop
inc
mov
pop
cmp
dec
movsb
fldenv
or
xor
sub
rcll
xor
enter
mov
fucomi
iret
daa
mov
cmp
or
jmp
sbb
std
inc
xor
stc
filds
std
lods
push
popf
push
iret
mov
popf
insb
dec
aam
mov
iret
xor
jg
jge
xchg
enter
push
stos
pop
pop
and
or
pop
repz
add
sub
and
jno
mov
mov
movl
ret
ja
dec
push
loope
pushf
cltd
mov
fwait
xor
test
aas
mov
fiaddl
mov
stc
int3
lret
stos
pop
xchg
out
push
ss
xor
pop
je
outsb
cld
pop
fildll
repnz
fisttpl
and
orl
lock
mov
xlat
mov
dec
xor
jae
jo
mov
arpl
icebp
je
adc
imull
mov
push
sbb
pop
add
aaa
inc
ja
sub
mov
frstor
lock
clc
jae
bound
mov
pop
sbb
xor
xor
mov
addb
iret
es
mov
movsb
pushf
jmp
mov
gs
xor
aad
shrl
in
mov
andb
or
loop
mov
inc
int
sub
das
ds
xor
movsb
adc
mov
push
dec
mov
sbb
push
mov
sarl
push
push
lock
enter
or
les
jl
cmp
sub
in
ret
cwtl
out
xchg
cmpsl
sarl
mov
loop
sti
js
arpl
cli
mov
xor
test
fists
adc
xchg
lock
bound
outsl
andb
push
fwait
add
cmpsl
test
call
push
adc
cmp
push
mov
jne
jns
dec
aam
cmc
sbb
add
push
inc
inc
sub
cmp
jg
jmp
push
add
inc
adc
mov
rclb
out
jae
inc
mov
popa
shlb
cwtl
lcall
xor
int3
jns
aaa
push
invd
and
jecxz
cmpsl
inc
insb
dec
cmpsl
out
lods
xchg
xchg
lret
leave
rol
mov
out
inc
idiv
fiaddl
or
sub
shl
lods
cmp
outsb
inc
mov
in
sbb
pop
ljmp
pop
lahf
callw
rorl
jno
pop
inc
mov
movsb
cwtl
dec
push
sub
jp
xchg
or
xor
dec
pop
shlb
in
and
js
inc
xchg
sbb
cmp
jle
lods
sar
lds
dec
mov
jae
fiaddl
sub
test
popa
out
mov
cmp
pop
and
add
mov
jmp
mov
fisubl
xchg
fcomps
inc
into
imul
add
inc
out
js
cmp
lock
std
add
cmc
rclb
mov
in
cmpsb
xor
xchg
ss
js
pop
cmp
lods
add
out
jg
pop
les
xchg
int3
mov
out
jno
mov
loop
sahf
lret
fwait
pop
cmpsl
sub
psrlq
cmc
adc
ljmp
jbe
scas
ds
adc
roll
xchg
cmpsl
xor
inc
inc
ret
mov
js
or
xchg
ds
push
sbb
bound
mov
scas
jle
test
dec
cltd
push
mov
js
stos
or
popa
shlb
mov
push
push
cmp
xor
push
lods
in
pop
xor
and
mov
sub
aas
negl
pop
mov
or
sub
out
outsl
mov
mov
fdivl
inc
mov
cltd
jne
mov
dec
cmpsb
rcrb
adc
inc
test
push
aaa
out
repnz
insl
xor
mov
sbb
es
jo
adc
daa
sub
xchg
sbbl
sub
test
scas
jecxz
jmp
jmp
sbbl
cmpsl
xor
lods
push
push
add
push
inc
mov
ds
adc
jle
cmp
data16
cmp
aam
jle
popa
pop
xchg
adc
outsb
cmpsb
arpl
nop
sbb
mov
mov
jbe
cmp
sub
fsubl
or
mov
adc
inc
out
sub
imul
adc
in
and
or
rolb
outsb
fdivp
push
mov
mov
sbb
sbb
vmread
pop
jbe
or
inc
adc
out
push
jae
sbb
pop
pop
mov
aad
jecxz
mov
aam
nop
dec
xchg
cmc
dec
sub
add
xor
pushf
cmp
lahf
pop
fmulp
jp
inc
fsubrl
lock
cli
jno
aad
lahf
jno
sahf
mov
mov
sbb
imul
int
imul
lahf
jmp
ds
xor
jp
in
jnp
negb
arpl
fimuls
xchg
sub
test
je
cmp
mov
mov
das
movsl
push
dec
outsl
lock
and
pop
iret
and
and
sti
push
les
cld
dec
push
push
loope
popl
xor
cmpsb
xchg
les
xor
pop
outsb
or
lcall
mov
adc
jmp
mov
mov
repz
sbb
or
jno
popf
pop
das
out
xchg
add
and
mov
insl
jbe
fmul
ret
adcl
into
mov
repnz
imul
jle
arpl
push
cli
cmpsb
mov
sub
lock
mov
jmp
jo
sbb
jo
cmp
jnp
mov
aam
pop
daa
or
mov
call
xor
pushf
pop
pop
fldl
stos
incl
insl
cmc
out
push
test
mov
pop
xor
jb
cld
cmp
sub
push
xor
cmpsl
xor
fmull
hlt
jbe
xchg
jb
push
test
cmpsl
movsl
mov
pusha
lret
insb
icebp
inc
lds
and
cmp
insb
add
mov
xchg
call
mov
adc
dec
adc
push
outsb
int3
out
push
add
test
pop
add
pop
fwait
add
inc
adc
sub
push
xor
pop
pop
sbb
in
mov
xchg
pushf
lods
shll
addr16
inc
or
cli
scas
jmp
pcmpgtd
arpl
hlt
push
clc
das
mov
and
jge
jg
and
pop
add
data16
fidivrs
insb
cmp
aas
pop
pop
fmull
mov
andl
mov
xor
mov
imul
pushf
mov
xor
loopne
adc
pop
inc
ficoml
sbb
push
add
pushf
ret
imul
popa
xchg
xor
lcall
mov
iret
testl
sbb
loopne
push
mov
mov
mov
lods
xlat
cwtl
and
std
js
push
test
pop
pop
jmp
cwtl
dec
jno
mov
test
inc
and
sbb
and
inc
pop
sub
imul
add
pop
dec
out
xor
fidivrs
mov
jae
adc
sub
inc
das
mov
rorl
mov
sub
jae
mov
mull
lcall
ret
icebp
add
push
adc
shll
xchg
cmp
cld
adc
pop
jmp
aam
sub
divps
mov
push
sbb
fs
adc
mov
leave
adc
or
xor
xchg
loopne
lods
pusha
or
bound
ficompl
out
push
ud1
fucomip
mov
fldenv
test
das
push
clc
mov
adc
sub
mov
mov
leave
mov
xchg
sgdtl
xor
mov
add
sahf
in
cmpsb
adc
daa
mov
or
out
adc
clc
mov
decl
inc
push
mov
in
cmp
xchg
jg
sub
js
jl
sbb
int
ljmp
xchg
cmpsb
aad
into
cmpsl
ror
xchg
push
xor
stos
rolb
mov
mov
xchg
sub
or
xchg
aad
shll
dec
movsb
addr16
mov
add
dec
lea
and
mov
mov
stc
cmpsb
xor
mov
cwtl
stc
fadd
inc
push
adc
or
jo
lock
fistps
cs
jne
lcall
xor
pop
mov
in
inc
jecxz
cmpsb
sub
lds
mov
push
inc
jle
test
jae
adc
sahf
mov
add
std
inc
dec
into
sbb
inc
xchg
or
pop
adc
decl
out
outsb
dec
mov
insl
cmpsb
fdivrs
out
hlt
lods
movsb
xor
adc
es
mov
ss
xchg
dec
or
dec
push
div
mov
arpl
cmc
addr16
mov
mov
pusha
jne
mov
or
idivl
lods
mov
cltd
or
lret
out
aad
loope
cltd
push
push
inc
test
dec
adc
xchg
gs
push
xchg
pop
inc
xor
leave
xchg
hlt
dec
dec
xor
les
int3
dec
sarb
cltd
xchg
movsl
jmp
test
or
leave
mov
loope
push
cmpsl
cmc
out
lret
adc
out
jmp
mov
out
pop
clc
xchg
pushf
pop
inc
add
pop
cmp
inc
jns
jae
mov
xchg
outsl
fisubrl
mov
or
cmpsl
pop
xor
lahf
push
jnp
sahf
lahf
fstps
cmp
lea
xor
mov
xchg
mov
dec
mov
das
sub
sbb
incb
setnp
cmp
pop
nop
jne
jnp
jg
out
pop
sub
lds
sub
jbe
out
sub
jno
stc
je
cmp
ja
mov
fiaddl
lods
and
adc
sub
pop
pop
lods
adc
jnp
jns
js
jl
sub
mov
rcrl
sub
push
test
in
mov
jno
js
scas
lea
pusha
fnstsw
push
pop
leave
clc
imul
jnp
scas
jae
fisubrs
mov
lret
jle
pop
cmp
mov
in
jle
xchg
jne
pop
leave
mov
fildll
cmp
or
iret
inc
push
shl
les
fsubrl
stos
mov
sbb
jle
lock
adc
push
inc
ss
loope
addr16
subb
enter
loope
or
idiv
out
dec
dec
repnz
fsubl
xor
push
push
or
adc
or
sbb
shlb
inc
push
add
push
sti
js
xchg
and
and
cld
ficoms
adc
jns
sbb
scas
fadd
sbb
and
dec
jl
add
test
or
das
sub
cmc
mov
and
pop
jle
sti
cltd
repnz
rcll
lea
jo
scas
enter
jb
and
in
icebp
movsl
movsb
mov
ficoml
mov
rorl
sar
leave
and
repnz
mov
int
aaa
dec
scas
inc
aas
leave
mov
sub
dec
push
xor
push
out
divl
adc
das
sbbb
in
out
outsb
sbb
jl
arpl
push
popf
lds
mov
jnp
lahf
xor
and
lds
or
add
loopne
xchg
pushf
ljmp
sbb
ficompl
out
cmp
sbb
pop
xchg
out
cltd
lds
orl
dec
mov
in
into
inc
outsb
add
inc
stc
xlat
pusha
mov
in
xlat
mov
insl
or
add
jecxz
std
jb
mov
les
cmp
sbb
pop
mov
cli
mov
lods
xchg
mov
adc
add
out
mov
shl
push
xchg
pop
sbb
push
cmc
loopne
sbb
pop
call
pop
push
push
fidivrl
or
ljmp
sbb
arpl
rcrb
call
xor
negl
xchg
xchg
xor
lods
outsb
leave
xchg
xor
mov
mov
subb
mov
imul
sahf
ja
mov
ret
addl
xor
mov
inc
add
mov
jecxz
std
pop
cmpb
inc
dec
jbe
mov
mov
push
cwtl
jns
das
inc
jae
mov
push
loope
xchg
lods
mov
jge
sub
inc
cmp
cmp
xchg
jle
hlt
or
lret
aas
add
cmpsl
xchg
dec
add
pop
dec
mov
inc
push
test
into
in
or
push
xchg
and
cld
insl
mov
std
cli
lods
negb
test
pop
xchg
call
sbb
testb
xchg
adc
lahf
popf
fmulp
or
in
push
sbb
lods
in
sbb
les
aas
jnp
addb
pushf
aad
xchg
andl
or
adc
xlat
jo
cmp
or
out
jns
enter
lea
jmp
or
jo
cs
cmp
push
imul
inc
or
stc
popa
and
mov
fcompl
add
pusha
jp
cmp
adc
mov
xor
ret
out
sarl
mov
sbb
dec
sub
in
lock
out
arpl
mov
jne
push
adc
aad
dec
stc
insl
out
rolb
xchg
in
mov
enter
out
jg
pop
jnp
ret
mov
lods
add
adc
sub
cmc
sahf
or
sarb
jmp
jmp
cmp
aam
or
xchg
inc
add
jmp
fistpll
or
arpl
imul
scas
inc
xchg
lods
pop
clc
push
and
push
jg
jmp
lcallw
cmp
xor
popa
push
ret
inc
test
adc
out
mov
rcrl
mov
mov
xor
sbb
jle
shll
out
add
jne
sbb
mov
ja
push
fistl
cltd
pop
dec
and
mov
jle
fcoms
mov
xor
addr16
lods
sub
lcall
xchg
dec
lods
sbb
aam
mov
mov
adc
lds
pop
sbb
sahf
sub
negl
lret
push
js
cmp
cmp
test
mov
mov
pop
sbb
and
mov
mov
pop
adc
mov
mov
mov
lret
call
addr16
jns
add
mov
jg
dec
pop
mov
ss
xchg
lret
sub
pop
fs
movsb
sbb
int
sub
jae
mov
inc
lahf
out
add
test
adc
movsl
test
sbb
and
out
in
mov
insb
orl
cmpsb
add
pop
jmp
xchg
push
mov
cli
cmp
pop
jg
add
inc
sbb
test
sbb
mov
jmp
sbb
jle
sbb
xor
sub
mov
pop
pop
in
aaa
push
inc
mov
adc
or
std
jae
jnp
xchg
scas
xor
jle
ficomps
cmp
add
mov
and
dec
ret
add
fistps
inc
push
xor
mov
adc
push
adcb
jnp
push
jle
daa
pop
bound
jecxz
mull
popf
or
filds
test
push
insb
sub
push
insl
dec
in
push
xlat
test
or
sub
ljmp
out
mov
cmp
mov
insl
leave
xchg
sub
push
stc
mov
icebp
mul
negb
xlat
mov
add
sbb
pop
gs
push
data16
shrl
xor
xchg
arpl
sub
sbb
pop
movsb
loopne
aaa
xor
movsb
jg
add
rcrb
lea
lea
add
or
loop
or
adcb
inc
movsl
fsub
jno
adc
pusha
fs
mov
sahf
stc
jno
mov
sbb
loopne
mov
inc
loope
cmp
pop
jne
out
ja
adcb
sbb
sub
sbb
pop
adc
mov
mov
setp
jge
es
hlt
xor
loopne,pn
fbstp
je
xor
sub
sbb
popa
gs
dec
in
and
jmp
ss
mov
mov
push
mov
fs
inc
mov
lret
dec
in
in
jnp
iret
stc
ja
mov
or
push
xchg
mov
pop
in
xor
cli
cld
mov
rclb
mov
mov
and
jle
xchg
test
add
cld
jbe
jp
adc
loope
dec
shl
inc
test
xor
inc
pop
lret
and
mov
mov
mov
repnz
call
and
int
jnp
and
aas
pusha
fcoms
mov
mov
xchg
xor
sub
add
shl
int
lret
and
pop
lret
jmp
sahf
sahf
mov
jl
daa
shrl
lea
mov
mov
gs
das
cmp
push
hlt
pop
fimull
cmpsl
idivl
movsl
fs
popf
sahf
and
jle
scas
sub
cli
fildll
nop
das
push
scas
pextrw
or
sub
call
pop
mov
sbb
mov
push
mov
push
dec
push
push
and
test
mov
pop
movsl
pop
rcl
and
xor
xchg
bnd
add
mov
adc
push
bound
xchg
mov
sub
cwtl
cmp
lret
mov
cmc
rorb
sub
jno
repnz
xor
sub
xorl
in
popf
inc
sbb
leave
mov
push
sbb
and
fldcw
add
fnstenv
inc
pushf
lods
add
psraw
push
scas
mov
jns
loop
rolb
sbb
ficoml
xlat
ljmp
and
iret
jb
fistpll
or
inc
cmp
lret
xor
test
je
sub
inc
cmp
xchg
mov
lahf
sub
push
cmpl
hlt
fnstsw
pushf
scas
xor
or
orl
aas
push
xchg
mov
and
push
add
int3
jb
mov
sub
or
stos
ja
or
mov
jecxz,pt
xchg
lret
add
adc
pop
push
lcall
add
je
iret
imul
insb
and
push
mov
das
pop
inc
aaa
xchg
icebp
in
sub
jo
mov
sub
jle
xchg
sbbl
mov
shrl
cmp
mov
scas
mov
sub
cwtl
jp
mov
push
lcall
jmp
test
cs
aad
cld
cmp
nop
adc
push
cmp
aas
jns
outsb
inc
sbb
sbb
xchg
lods
scas
enter
ss
repz
mov
popa
cmp
jle
rsqrtps
mov
sub
rorl
gs
cs
xor
cltd
xchg
lahf
xchg
int
int3
out
inc
mov
adc
rcrl
insb
adc
push
mov
ret
test
out
xchg
dec
mov
enter
xchg
add
inc
inc
outsl
jns
mov
xrelease
push
adc
outsl
push
cmp
mov
cld
xchg
les
jae
aad
or
mov
inc
mov
push
sub
lock
test
cmp
int
add
mov
jp
sub
adc
xchg
fsubrl
scas
mov
adc
mov
and
movsl
dec
stos
fwait
movl
lods
int
lahf
divl
shrl
scas
sbb
jmp
nop
in
ljmp
sahf
dec
and
in
ror
push
mov
into
mov
add
mov
lret
inc
push
mov
in
out
bndstx
push
cmpb
add
ljmp
push
push
and
jbe
lret
dec
push
mov
sub
adc
jne
adc
ret
sbb
jnp
push
out
jbe
dec
scas
and
jo
dec
lock
mov
push
dec
sbb
adc
mov
cmc
push
lds
ret
outsb
mov
pusha
fwait
mov
in
push
push
dec
int
js
test
addr16
ret
push
aas
lahf
inc
addr16
mov
xor
fiaddl
cmpsb
rcr
pop
inc
data16
leave
sbb
cli
push
out
jecxz
mov
popa
pop
pop
xchg
mov
pop
movsb
jo
and
push
jmp
call
cmp
icebp
push
cmpsl
std
sbb
xor
and
dec
ds
out
int
dec
adc
pusha
and
sbb
pop
shlb
adc
in
cmp
jbe
mov
add
xchg
testb
mov
xor
imul
inc
repnz
add
cmp
test
ret
out
lds
or
adc
andb
mov
mov
loope
jae
jb
sti
scas
int3
cwtl
pop
xchg
sbb
dec
mov
jmp
xchg
xlat
xchg
mov
int
shl
int3
stc
mov
push
incb
scas
pop
xor
xchg
or
scas
aaa
test
cmpsl
cmp
mov
sbb
cltd
add
rcrl
cld
and
insl
imul
cmp
and
lea
inc
roll
pop
jno
rcr
mov
sarl
mov
rorl
pop
arpl
or
and
mov
adc
aad
sbb
inc
pop
daa
mov
pop
pop
fnsave
inc
push
call
and
ret
add
mov
imul
pop
mov
pop
notl
adc
adc
inc
cmp
sti
jae
pop
in
xor
int
cmpl
push
test
mov
pmulhw
and
inc
pusha
ret
xor
idivb
push
arpl
mov
xchg
push
inc
jns
fsts
lret
add
or
mulb
xchg
stos
lahf
jnp
popf
fwait
out
imul
ret
aad
cmp
rorl
cmpsl
push
movsb
jbe
jo
lea
jbe
sbbb
aad
out
mov
in
jnp
cmp
je
pop
insb
int3
sti
fwait
adc
test
cmp
dec
xchg
jge
negl
ret
ja
and
mov
push
mov
mov
enter
cmp
mov
sbb
and
mov
shlb
adc
pop
mull
mov
cld
cmpsl
lea
inc
lret
insl
cwtl
push
push
out
xor
push
xor
lcall
out
incl
push
pop
xor
das
and
jmp
cmp
sbb
sarl
cmp
ja
xor
add
fs
mov
in
xchg
shl
xchg
xor
scas
xchg
mov
mov
aaa
sub
rcll
popf
cli
test
push
outsb
shl
in
loopne
stc
cmp
adc
sbb
test
push
dec
xchg
stos
cmp
jns
sbb
popf
mov
leave
lea
lahf
xchg
dec
fsubrl
push
shll
lds
inc
daa
mov
adc
testb
sbb
cltd
hlt
lcall
pusha
inc
jmp
adc
sub
dec
jg
or
mov
iret
xchg
pop
add
dec
jno
outsb
std
adc
repz
xchg
jecxz
mov
xor
jecxz
dec
xchg
outsb
mov
in
lds
cltd
xchg
sbbb
mov
icebp
shl
sub
push
repz
jns
mov
cmp
add
xchg
push
pop
fnsave
jnp
ret
test
popa
sub
rolb
enter
rolb
xor
aad
incb
in
mov
xor
iret
or
pop
sub
sub
push
aam
and
arpl
pop
popl
cwtl
jns
vmwrite
mov
push
ljmp
iret
repz
stos
xchg
cmp
in
mov
popa
sahf
inc
cli
mov
mov
das
add
ds
adc
sarl
lods
loop
pop
into
xor
jno
aas
push
mov
stc
xchg
jmp
fs
in
in
mov
mov
hlt
push
add
or
imulb
add
xor
inc
jbe
adc
adc
mov
and
dec
call
shl
call
cld
gs
in
pop
andb
test
out
pop
jecxz
pop
add
mov
xor
mov
lret
mov
in
dec
add
dec
pushf
sbb
stc
ds
xchg
or
or
add
shll
inc
or
xlat
dec
cltd
lret
xchg
sub
sbb
xor
fucomp
shll
int
aad
mov
push
pop
loopne
fs
jg
rolb
cld
pop
shrb
mov
sub
push
dec
cmp
in
in
nop
pop
push
testl
repz
mov
or
stos
and
testl
dec
ds
mov
add
adcl
add
dec
adc
pop
cmp
addl
xor
lea
test
sarb
cmp
mov
mov
lret
and
inc
jle
jae
repnz
addl
and
xchg
push
outsb
fisttpl
mov
out
add
push
shr
outsl
scas
call
pop
fisubl
xchg
jl
in
push
stc
daa
scas
push
mov
jmp
ficoml
jns
adc
sbbb
xlat
sub
sahf
out
jg
loope
xor
fisubrs
shl
sahf
xor
dec
scas
dec
cltd
rcrb
mov
movsl
fst
bound
clc
fcmovnbe
add
sar
jle
inc
jecxz
xchg
mov
arpl
sub
pushf
pop
jl
mov
rolb
add
adc
jno
inc
test
adcb
jmp
xchg
das
sbb
das
popa
aam
out
xor
lods
mov
adc
movb
imul
jle
inc
push
sbbb
rol
filds
cwtl
fdivrl
adc
in
jno
ljmp
int3
pop
scas
stos
dec
test
xchg
lock
test
mov
jno
icebp
inc
loopne
lcall
jb
xchg
mov
dec
xor
pop
push
in
cs
mov
bnd
dec
repnz
sub
xor
jae
mov
mov
sub
dec
fs
add
pop
jmp
sarb
cmp
lret
jbe
stos
jl
ljmp
push
out
aad
cmc
add
pop
pop
or
aam
xor
push
cmp
jle
push
xor
add
mov
sub
clc
cltd
stos
loope
xchg
scas
rolb
scas
enter
xchg
fnstsw
les
sbb
in
je
or
rclb
cmp
cmpsb
jns
ljmp
pop
xor
mov
popf
jne,pt
lret
add
movsl
ds
xor
lcall
hlt
orl
ret
xchg
loop
nop
stc
xchg
repnz
mov
in
fisubl
shl
clts
dec
sbb
sahf
cmp
xchg
ds
outsl
inc
or
mov
lods
mov
mov
lods
cmp
jl
push
and
adc
repz
lods
shlb
arpl
call
ret
adc
push
sar
mov
cmp
mov
ds
sbb
inc
jmp
ds
or
ds
jg
pop
fstps
je
push
inc
pop
or
js
hlt
inc
subb
lea
call
scas
out
loope
jo
fadds
push
add
xlat
data16
lds
or
pop
repz
or
or
mov
xor
insb
pop
ret
mov
mov
pop
push
mov
fists
fiaddl
push
cmp
inc
insb
sbb
mov
mov
fstpt
or
call
dec
cwtl
inc
loope
daa
ret
add
cs
or
movsb
mov
mov
add
loope
mov
jle
xchg
and
popa
sbbb
int3
dec
xor
add
or
pusha
pop
xchg
sbb
sahf
pop
mov
imul
mov
jge
lahf
jae
mov
adc
outsb
ljmp
aaa
jecxz
push
xor
sbb
pop
xor
sbb
int
bound
pushf
repnz
jno
lret
icebp
xor
fs
sub
inc
fcompl
arpl
mov
sbb
hlt
iret
js
jbe
mov
out
dec
mov
or
daa
jp
sbb
incl
jl
xchg
icebp
and
adc
inc
repz
mov
and
lods
jg
pop
leave
push
arpl
out
fdivl
in
xlat
imul
sub
mov
dec
sar
das
es
sub
mov
movsb
clc
out
insl
fwait
xor
jecxz
sbb
cmp
test
adc
sbb
jmp
out
xchg
and
in
cld
mov
inc
arpl
jg
adc
loop
mov
arpl
adc
daa
pop
mov
dec
xchg
inc
jecxz
mov
jae
iret
xchg
push
add
push
hlt
mov
sbb
adc
xor
repz
data16
loopne
inc
and
push
mov
jg
inc
daa
bound
cmp
call
stos
sbb
push
mov
pop
lret
lahf
xlat
jno
inc
sbbl
push
adc
gs
push
mov
scas
xor
mov
test
aas
fcompl
xchg
shll
cmp
mov
mov
mov
int3
cmp
pop
mov
sub
push
pop
loopne
rcll
jl
cmpsb
push
orb
xchg
jl
push
or
push
jmp
gs
pop
dec
fidivs
imul
cli
xchg
push
orl
adc
dec
push
stos
push
stos
cltd
insb
mov
jg
andb
add
sbb
das
lret
push
mov
data16
jae
and
pop
sti
xchg
movl
fdivr
sub
mov
mov
ror
repz
lea
cld
incb
xor
bound
pushl
lock
sub
aad
imul
loop
cmp
sub
das
mov
mov
sti
jle
stc
clc
mov
mov
dec
enter
and
inc
aas
dec
pop
add
mov
bound
mov
adc
stos
push
notl
ds
dec
aas
cmp
push
fs
outsl
testl
sbb
pop
xchg
adc
mov
leave
xchg
push
andl
pop
mov
sarl
add
jecxz
sbb
adc
movsl
shlb
sbb
add
mov
xor
or
bound
sub
pop
popa
sub
sub
out
scas
cmp
movsl
adc
mov
int
popa
push
or
cmp
pushf
lcall
scas
dec
bound
movsl
arpl
sub
in
cltd
sbb
add
push
shlb
or
push
push
adc
loopne
xor
mov
loop
je
adc
cmp
push
icebp
ss
imull
stc
shll
adc
movsb
mov
test
cmc
xor
sub
push
xor
push
sbb
or
pop
inc
xchg
mov
adc
adcl
jne
dec
push
dec
xchg
das
pop
mov
xchg
lret
scas
add
mull
divl
add
movsb
mov
push
fsts
xor
sub
xchg
sbb
movsl
ja
jns
ljmp
lods
jp
push
dec
mov
push
fidivrs
jmp
pmulhuw
xor
pop
test
sbb
imul
xor
fildl
mov
push
mov
or
pop
xchg
dec
pushf
aaa
jmp
fcmovnu
fsubl
lcall
stc
je
xorl
shr
push
pop
cmc
inc
leave
pop
test
fs
and
loope
pop
mov
pusha
xchg
cmp
fnstenv
add
sub
or
stc
test
faddl
std
insl
hlt
mov
das
mov
scas
cli
push
es
jg
ficoml
popa
and
stc
mov
lock
aaa
xchg
lcall
fadds
jno
jne
aaa
adc
popl
bound
decl
pop
cltd
sti
xor
sbb
popa
jecxz
lret
ljmp
push
sbb
frstor
xor
inc
mov
pop
sti
ds
add
or
or
dec
test
jne
mov
pop
fbstp
dec
cmpsl
xor
inc
mov
cwtl
mov
cmpsl
add
fwait
pushf
dec
out
and
push
mov
jbe
add
icebp
mov
ljmp
add
sub
cmpsb
scas
pop
jmp
mov
mov
xlat
int3
xchg
pop
push
call
jne
into
hlt
mov
jmp
and
jno
push
pop
xchg
cltd
pop
lahf
or
aas
xchg
inc
sub
sub
sbb
inc
jp
push
arpl
lock
mov
or
cmp
fmulp
xlat
pop
mov
or
orl
dec
xor
fisttpl
int
dec
dec
js
addr16
dec
jecxz
adc
leave
mov
mov
lcall
paddusw
cltd
xor
repz
xchg
mov
call
push
repnz
fistl
lea
dec
inc
test
mov
inc
mov
test
pushf
sub
call
mov
dec
adc
lea
add
xor
mov
mov
cmc
mov
sub
dec
lahf
hlt
lods
and
sahf
aas
jp
xor
shr
dec
sar
mov
sbb
cmp
enter
mov
out
ret
scas
fisttpll
dec
cmp
push
pusha
jecxz
imull
loop
push
push
jle
and
daa
push
and
fucompp
cwtl
jo
cmp
jbe
sbb
sbb
gs
sahf
jns
xchg
inc
mov
scas
jne
not
imul
icebp
mov
aam
scas
sbb
repnz
sub
push
push
pop
and
cmp
out
movsl
and
fstpl
lock
fwait
pop
dec
push
xchg
adc
or
iret
pop
mov
sbb
cli
sub
push
add
bswap
mov
adc
mov
mov
popf
iret
in
cmp
or
or
hlt
sub
popf
cltd
and
and
push
aas
inc
jge
mov
sbb
mov
jge
insl
sbb
mov
jb
lock
fst
pop
cmp
outsl
mov
jne
sbb
imulb
push
xor
pop
push
mov
dec
pop
xor
fadd
js
icebp
jno
pop
xchg
fimull
les
pop
mov
cmpsb
lea
fdivr
shll
call
dec
clc
test
std
nop
lock
sub
mov
and
shr
imul
enter
xchg
mov
lret
mov
clc
out
ficompl
adc
lcall
ljmp
test
fimuls
and
mov
xor
dec
jg
into
and
add
xor
out
into
mov
imul
pop
push
cli
in
cwtl
addr16
and
test
ljmp
mov
fmull
inc
outsl
push
iret
pop
ja
xchg
jge
push
stos
nop
lcall
addb
sbb
pop
mov
lea
push
inc
inc
mov
xor
xchg
movsl
and
pop
sub
sbb
pop
mov
ret
insl
mov
or
adc
call
das
andb
jmp
sub
les
add
out
jne
lahf
insl
push
or
or
lret
pusha
mov
mov
xor
jo
adc
test
in
or
add
repz
adc
mov
inc
adc
xlat
and
scas
jae
loope
aaa
movsb
gs
shr
js
add
in
cli
pop
or
adc
or
cs
mov
outsb
add
fs
mov
xchg
mov
xor
and
mov
xchg
into
xchg
or
and
push
or
inc
hlt
push
dec
mov
ret
hlt
mov
jne
std
mov
mov
in
mov
daa
out
mov
mov
cmp
popf
std
sbb
sbb
repnz
and
cmc
lahf
mov
xchg
out
mov
imul
lods
xlat
outsb
jl
sbb
mov
test
mov
inc
stos
pop
loopne
ja
imul
cmp
pushf
scas
cmp
xbegin
insb
dec
xor
insl
inc
ret
je
clc
cwtl
push
or
aad
mov
dec
jno
sub
out
dec
xor
mov
sahf
popa
cmpsb
lret
jge
add
iret
jp
loope
lods
call
js
xchg
sbb
push
lret
out
lret
test
jae
mov
pop
shll
pop
insb
fmull
daa
dec
pop
arpl
rcrl
call
psllw
jnp
loop
push
fldl
and
fldt
insl
dec
lahf
int3
mov
xor
cmpsb
jmp
add
dec
sub
dec
js
cld
cwtl
pop
sti
lea
mov
sub
lcall
pop
fstl
push
mov
fmuls
inc
shrl
mov
stos
and
test
push
push
lahf
cmpsb
pop
shll
jp
jl
mov
and
nop
xchg
xchg
adc
mov
fwait
outsl
jl
adc
pop
sub
scas
das
lahf
jnp
inc
dec
xchg
xchg
fwait
in
adc
xlat
in
sarl
in
rsm
mov
jmp
cmp
lods
cmp
add
jle
std
ret
out
es
dec
xchg
cmpl
or
repz
lcall
pop
js
shl
xor
jb
pop
sti
es
and
lods
add
aas
add
clc
fiadds
sbb
adc
arpl
xlat
fs
push
cmpb
sti
add
add
sbb
insl
fisubs
icebp
and
fsubrs
jg
dec
outsb
jg
loop
inc
hlt
push
or
adc
mov
fs
cmc
ficomps
test
dec
xor
jg
les
jae
mov
test
arpl
dec
pop
imul
jecxz
jecxz
xor
pop
subb
stc
xor
xchg
ret
scas
xlat
repnz
ficoms
outsb
std
outsb
mov
adc
push
bound
cs
rclb
pusha
pop
pop
flds
sahf
mov
loop
dec
icebp
rorl
into
imulb
out
andb
and
jg
cmp
test
sbb
and
push
jg
imul
push
ljmp
mov
add
inc
cmp
iret
mov
inc
mov
cmpsl
sub
lods
imul
fnstcw
popf
push
mov
adc
sahf
xchg
lret
ja
mov
push
inc
outsl
sub
mov
inc
scas
hlt
les
mov
rol
mov
int3
imul
or
popa
cmpsb
movsl
sbb
in
sarl
dec
out
jle
jns
inc
push
imul
into
jmp
test
pop
mov
out
push
in
push
arpl
lahf
sbb
ret
mov
ljmp
jne
fdivrl
or
mulb
add
mov
fdivrl
icebp
movsl
int3
inc
dec
je
bnd
fucomi
inc
mov
sub
adc
push
or
mov
movsl
lods
add
xlat
fwait
pop
jbe
jne
gs
mov
popf
push
dec
inc
mov
mov
repz
out
repz
jo
cmc
fidivrl
lea
leave
cmpsl
xlat
mov
jns
cmp
push
hlt
adc
lock
xchg
ret
xchg
aas
push
and
xchg
fistl
add
dec
cs
lret
imul
push
hlt
pop
pop
mov
cmp
jp
jmp
pop
adc
dec
pusha
cmc
mov
outsl
and
scas
mov
push
sbb
or
stos
inc
ficompl
popa
jns
add
lahf
dec
movsl
lods
in
push
adc
mov
icebp
jns
xchg
sub
int
push
cli
outsb
fsubl
insb
pop
mov
lea
bound
lock
xor
inc
pushf
lods
xchg
repz
cmp
nop
enter
push
stos
loopne
sub
test
fcoms
jecxz
or
fnstcw
and
ljmp
and
jns
out
push
dec
mov
mov
outsb
mov
fcomps
insl
pop
inc
pop
push
lods
cmp
sbb
sbb
inc
pop
lods
out
aaa
add
stos
mov
leave
insl
fs
or
in
jns
add
fs
call
lds
xchg
adc
sbb
je
sbb
mov
sub
aad
lock
fstpl
mov
jo
inc
jle
jns
ret
jmp
shr
inc
xchg
adcl
xchg
sub
sub
adc
jno
fs
imul
shlb
insb
in
iret
jne
mov
cmpsl
pop
stos
sub
and
mov
add
popa
cs
fstl
inc
sub
addr16
or
ret
push
into
dec
mov
or
sahf
cmp
out
out
mov
repz
mov
repnz
sbb
xor
loope
or
mov
cmp
xchg
mov
jmp
fisubl
mov
inc
sub
jl
add
popf
stos
inc
scas
push
push
cmp
sti
xchg
sbb
daa
notl
rclb
xchg
xorl
pop
xchg
int3
inc
mov
mov
pop
mov
inc
jne
leave
sub
or
out
push
sbb
cld
into
fadds
mov
cli
shlb
cltd
dec
outsb
xchg
aaa
jl
cmpsb
jle
and
notl
es
in
cwtl
mov
push
cmp
shll
mov
arpl
xor
mov
mov
sub
dec
jmp
pusha
add
pop
push
fistps
fdiv
add
or
out
orl
lret
lods
pop
and
rcr
inc
loopne
das
xchg
test
xlat
adc
pop
js
dec
cmp
jecxz
aas
jp
jp
neg
addr16
pop
rolb
cmp
mov
dec
push
xchg
mov
add
stc
mov
inc
adc
xchg
push
dec
cmp
std
and
add
lret
xlat
scas
sub
into
inc
fimuls
dec
data16
xor
cltd
dec
push
xor
inc
mov
xchg
xchg
push
inc
sub
add
jmp
jge
mov
mov
popf
jo
jbe
cmp
dec
sbbb
sub
ss
add
jae
andb
arpl
shlb
pushf
add
jno
sti
cmpsl
pop
inc
or
fnstenv
jl
jle
rcrb
sub
test
sti
into
fnstenv
xchg
mov
push
test
cmp
sbb
inc
mov
sbbb
mov
das
xchg
hlt
xchg
xchg
jbe
and
sbb
sub
lret
into
lahf
leave
adcl
mov
test
fldl
cmp
enter
mov
mov
sub
add
add
cmp
pop
into
push
mov
stc
shll
and
cwtl
or
push
pusha
popl
xchg
mov
lock
push
loopne
icebp
cmp
push
pop
inc
mov
push
push
add
insl
push
xor
pop
mov
mov
sti
mov
fwait
xor
xchg
fidivrl
mov
lods
addb
ds
cmp
dec
bnd
dec
sub
in
mov
gs
mov
sti
mov
mov
idiv
inc
push
sbb
aas
jnp
insl
shll
pop
dec
leave
push
inc
cmp
and
ljmp
lea
das
cmp
ret
addr16
fstl
mov
enter
aas
test
arpl
andl
cmpl
cmp
aaa
xchg
push
mov
shrb
rorb
sbb
push
mov
rcr
cmp
loopne
and
test
jnp
dec
filds
stos
dec
shll
pop
lret
push
mov
and
bnd
movsb
inc
and
movl
xchg
push
cmp
bnd
test
mov
jnp
cmp
inc
ret
cmp
push
bound
je
pop
lock
mov
dec
out
adc
jbe
sar
push
add
add
sti
stos
arpl
ja
mov
push
inc
je
rcl
hlt
std
jmp
je
rcl
out
mov
xchg
aas
outsb
jns
shl
sbb
pop
lret
adc
mov
ss
hlt
stos
scas
orl
sub
pop
inc
sbbb
xchg
xorl
sbb
ret
mov
cmpsl
or
adc
int
pusha
mov
mov
inc
sarb
pusha
xchg
mov
sub
pop
xor
cmp
out
xor
jae
jo
lea
bound
iret
imul
aas
and
cmp
clc
inc
or
adc
xchg
xchg
mov
fisubl
mov
stc
mov
in
dec
add
mov
mov
add
push
ror
xchg
pop
idiv
adc
cmc
pushf
movsl
insl
sub
test
in
popa
add
gs
mov
push
add
push
stos
mov
repnz
sahf
or
sbb
and
movsl
push
jle
adc
xor
jg
xor
ret
jne
hlt
scas
sub
pop
push
mov
cmp
mov
push
jg
cmp
cld
rcrl
push
out
nop
gs
lahf
inc
stos
jo
loop
js
xor
jg
jl
mov
rcrb
dec
int3
sbb
icebp
and
ja
jg
dec
fldcw
repnz
jecxz
mov
adc
lock
mov
cmpsl
sti
pop
xchg
inc
and
movsl
pop
xor
pushf
inc
inc
data16
xchg
sbb
mov
je
inc
mov
cmp
mov
sbb
in
orb
loope
push
adc
add
adc
and
mov
cmp
int
js
cmc
jnp
jne
inc
xor
fistps
insb
arpl
repz
fsts
sbb
push
cwtl
icebp
sub
icebp
jne
sahf
pop
mov
ja
jge
in
push
ret
outsl
adc
pop
pop
and
cmp
xlat
mov
inc
push
and
add
push
scas
push
lcall
lds
sub
adc
out
movsl
and
scas
movsl
mov
inc
jbe
scas
adc
lret
repz
or
xor
scas
mov
sub
dec
cli
mov
push
push
push
scas
inc
rorl
in
push
out
dec
adc
stos
pop
in
fistpl
cmp
lcall
or
lock
pop
loop
mov
mov
mov
addl
sub
ds
sahf
jae
and
fimuls
xchg
push
dec
shlb
nop
cwtl
and
adcb
leave
jbe
nop
jmp
pop
cmp
pop
fistpll
jae
test
cld
xchg
sbb
push
test
lea
mov
out
sub
mov
loopne
lods
inc
ficoms
stos
jbe
mov
xchg
data16
xor
in
ss
xor
push
adc
add
test
mov
lahf
xor
mov
popa
lods
mov
sbb
sbb
rcrb
out
mov
cmp
dec
insb
jl
mov
outsb
mov
mov
stos
mov
dec
shl
sbb
push
mov
xchg
mov
push
jnp
and
pop
or
fcomp
push
daa
jp
add
icebp
cwtl
xchg
add
adc
dec
adc
addl
inc
sub
xchg
xchg
push
mov
daa
push
jecxz
nop
stos
add
dec
in
mull
and
cmp
loop
inc
or
xchg
add
loop
std
xor
bound
push
out
test
test
sub
sub
stos
xchg
add
lahf
or
jmp
cld
imul
xchg
push
rclb
ret
adc
fnstcw
cwtl
popf
test
dec
inc
cwtl
inc
add
cmpsl
jecxz
in
test
mov
sti
fsub
cmp
idiv
idivl
inc
dec
sub
adc
pop
cmpsb
das
ficomps
and
mov
mov
sub
inc
repnz
sub
xchg
ret
inc
push
adc
sub
insl
push
and
xor
and
mov
and
int3
xchg
push
addr16
imull
in
mov
mov
pop
adc
pop
sbb
xchg
mov
push
mov
pop
scas
adc
mov
mov
cmc
and
jno
dec
inc
lahf
adc
cli
xchg
lea
imul
rcr
adc
in
stc
xor
inc
movsb
xor
inc
push
fistpll
adc
dec
cwtl
stc
mov
xor
jnp
repz
in
add
cwtl
stos
dec
ljmp
mov
lea
sub
cld
jb
push
xor
sbb
outsb
es
or
cs
mov
adc
aas
lods
pop
add
xchg
cmp
or
popa
jecxz
rolb
sub
shll
outsb
fidivrl
cltd
push
outsl
dec
stc
sub
and
rorl
inc
mov
das
and
xchg
mov
and
add
out
pop
cmc
stos
sbb
mov
cmp
sub
mov
jmp
jno
shr
jns
aas
sbb
or
fdivrs
pop
push
mov
insb
add
push
dec
mov
popf
daa
movsb
clc
and
sub
mov
sbb
adc
int
test
movsb
jnp
pop
shrb
int
xchg
adc
mov
push
pop
xor
xchg
inc
xlat
mov
ret
add
xor
xchg
in
xor
add
xchg
xchg
adc
add
arpl
iret
lods
dec
push
fcmovnbe
and
sbb
shlb
int
pop
sub
dec
fsub
divb
and
decl
cmp
ss
stos
jmp
in
mov
int3
sbb
push
xchg
or
test
aaa
aad
xor
sub
aam
repz
lock
mov
loope
xchg
stos
ja
jno
and
fisttps
inc
or
xor
mov
les
aad
cmp
xchg
mov
pop
sbb
and
stc
sub
lret
cli
daa
cmp
rcl
sbb
adc
fsubs
loop
data16
and
out
ds
sub
or
data16
add
pusha
jge
mov
or
sbb
ret
dec
mov
add
cmp
fistpll
clc
pusha
hlt
imul
add
stos
test
scas
mov
mov
mov
mov
sub
sbb
pop
aaa
insl
push
mov
pop
xor
mov
push
nop
fsubrs
into
sti
push
jecxz
xchg
pop
out
arpl
enter
adc
rcrb
jbe
mov
pop
hlt
testb
insb
cmp
js
aam
add
mov
jae
mov
inc
xchg
shlb
cwtl
ret
pop
pop
mov
mov
data16
outsb
scas
insl
push
adc
out
mov
test
mov
imul
enter
and
push
lods
inc
sub
push
sbb
or
and
test
pop
mov
je
pmuludq
add
data16
fwait
and
lds
test
movsb
xchg
xchg
cs
bts
mov
add
rcrb
jnp
repnz
out
inc
icebp
mov
add
pop
jle
jge
and
sbb
adc
push
neg
icebp
and
xchg
test
lods
pop
rcl
mov
mov
test
xor
cmp
andl
out
ret
push
frstor
punpckhbw
in
sub
cmp
or
aad
mov
das
lcall
loope
mov
mov
adc
or
stos
adc
ss
add
inc
push
and
sbb
push
in
xor
popa
mov
ret
sbb
stc
insb
mov
sub
pusha
cwtl
xor
cmp
dec
in
jecxz
xor
repz
lret
out
add
dec
add
mov
xchg
int3
sbb
jl
ljmp
das
addl
cmp
or
dec
dec
popa
mov
mov
xchg
mov
filds
sub
dec
or
int3
jle
or
mov
scas
pslld
dec
out
fprem
xchg
mov
jg
das
mov
test
push
push
push
rcrb
sbb
adc
add
sbb
add
jae
jno
jns
lea
lods
lcall
dec
cwtl
ljmp
xchg
in
jo
lret
pop
jne
repnz
incb
dec
jb
push
sub
cwtl
sub
sub
icebp
push
pop
int3
test
into
aaa
enter
pop
cmp
or
lret
mov
and
or
xchg
dec
xorl
aad
mov
pop
mov
outsb
addr16
push
pop
cmp
adc
testb
lret
adc
adc
mov
pop
fs
lret
mov
xchg
icebp
mov
int3
stc
mov
leave
test
data16
inc
cmp
outsl
xor
es
mov
mov
dec
aad
or
xchg
xchg
popa
ret
jne
sub
jge
xor
sub
rcll
push
xchg
dec
in
pop
mov
pop
sub
insl
shrl
mov
inc
fnstsw
out
cld
adc
fisttps
loope
fs
lods
adc
popa
or
cmpsb
pop
addr16
mov
int
mov
xchg
xor
call
push
jecxz
addr16
imul
call
into
sub
mov
in
mov
pop
pop
jge
repz
dec
loopne
fdivrs
iret
push
lods
pop
jno
gs
popf
popa
sti
ret
shl
xchg
and
pop
adc
xor
pop
and
mov
shlb
sub
cwtl
test
jmp
mov
daa
sahf
jmp
test
loopne
fisubrs
aaa
mov
aam
sarb
negb
pop
sti
dec
hlt
pusha
or
push
mov
lods
out
fdivl
popa
inc
sbbl
lret
fmull
jmp
mov
mov
js
icebp
cmpsb
test
mov
or
cmp
popa
cld
push
ffreep
sbb
into
cmp
mov
push
push
dec
ficoms
inc
mov
mov
mov
lcall
into
xchg
into
fcompl
test
mov
gs
std
mov
mov
mov
mov
sbb
jno
dec
fdivrp
fisubrs
rcl
leave
jns
push
mov
fidivrs
roll
push
imul
mov
xchg
or
call
outsb
xorb
jge
repz
ss
cli
lret
nop
inc
ret
stc
rcrl
std
cltd
xchg
es
add
int3
cs
cmp
push
into
rcrb
inc
push
outsb
pushf
imul
dec
push
je
shr
dec
dec
rorb
pusha
scas
xchg
or
std
xchg
or
jne
dec
cmp
push
aas
hlt
es
sbb
ja
leave
pop
jp
lds
andl
pop
fwait
dec
cmp
mov
sbb
nop
xchg
xchg
push
xorl
mov
jecxz
iret
cmp
mov
je
int3
pop
sbb
sub
rcrb
mov
xchg
pusha
inc
dec
rol
dec
ja
int
fnstcw
ds
pop
and
int
fsubrp
adc
push
out
mov
pop
ja
mov
std
jecxz
popa
and
mov
cmp
les
lahf
nop
testb
sarl
sbb
push
je
arpl
lds
orb
mov
dec
or
xchg
push
sub
xchg
mov
insl
mov
stos
xor
fnstcw
ret
outsl
inc
add
xor
mov
lcall
push
aad
out
nop
mov
test
aas
movsb
sbb
or
addl
sbb
pop
jg
inc
lret
mov
jl
xchg
xor
mov
loope
cmpsb
mov
lea
cwtl
negb
aas
data16
out
test
cmp
mov
xchg
popf
sarb
cmpl
sbb
ret
xor
cmp
int3
and
ret
daa
mov
js
aaa
dec
out
dec
popf
iret
into
addr16
insb
and
fs
pop
push
ja
add
mov
int
lcall
nop
xchg
cmp
cmp
pop
xlat
sub
lock
cmp
jae
mov
addl
inc
mov
lret
sbb
ja
ret
int
lods
insb
orl
push
sub
xor
xlat
jp
dec
push
sbb
and
push
test
mov
inc
je
cmp
jmp
dec
pop
bnd
and
loope
scas
cs
test
idivb
push
pop
dec
pop
enter
inc
inc
ffreep
push
mov
inc
mov
push
lds
adc
mov
loopne
fwait
or
xchg
xchg
push
outsl
ss
cmpsl
cmp
xchg
outsl
mov
jmp
stos
and
mov
cwtl
fwait
cmp
ret
cmpb
outsl
mov
sahf
xchg
fs
mov
dec
out
pop
insb
and
cli
and
jo
ds
pushf
fidivrs
lock
pop
jg
into
mov
mov
pop
repz
fcompl
leave
lcall
popa
adc
idivb
adc
dec
lock
pop
aad
dec
inc
sti
mov
dec
test
nop
xorl
add
hlt
jno
mov
testl
dec
adc
dec
inc
adc
or
adc
cmpsb
loopne
lahf
movsl
fistpll
or
mov
mull
mov
adc
lock
push
dec
testl
or
lahf
jecxz
sub
jno
ds
popa
lock
adc
dec
push
sbb
sub
mov
xor
xchg
into
ret
repnz
mov
lods
mov
fmuls
cmpsb
movsb
cmpsb
shlb
cwtl
sbb
dec
movsl
mov
jnp
call
jge
hlt
mov
mov
leave
and
aaa
ja
addr16
push
and
mov
scas
sub
or
inc
out
loop
aaa
xor
mov
rolb
mov
jnp
jne
test
or
mov
xor
das
inc
cmp
adc
jnp
dec
fwait
std
arpl
popf
and
xchg
mov
sbb
stos
sub
imul
cs
fsubrp
push
adc
movsl
enter
mov
push
imul
ljmp
arpl
shll
push
mov
in
jle
imul
jns
clc
and
xor
mov
and
dec
sbb
pop
icebp
sbb
scas
movsb
ss
lret
adc
pcmpeqb
daa
mov
loope
lret
mov
sbb
mov
mov
inc
out
imul
mov
mov
mov
adc
cltd
jge
sahf
fidivrl
mov
call
ja
push
mov
mov
js
push
jb
adc
xchg
test
and
push
mov
ss
mov
mov
mov
dec
ljmp
inc
loop
sub
lock
xorb
js
push
sub
inc
daa
jns
aas
push
mov
inc
ljmp
repnz
cmp
or
cmpsl
fistpll
lock
push
mov
test
inc
xchg
mov
push
pop
cs
jl
lahf
lahf
xor
fs
jge
or
in
xor
add
rol
pop
cmp
sub
mov
mov
cmp
sub
inc
jns
stos
jmp
lea
arpl
lret
push
in
loop
scas
lods
xlat
cmpsb
push
sbb
jbe
sub
in
stos
orb
das
mov
add
les
out
mov
inc
xchg
pusha
hlt
test
and
insl
rorl
lods
sbbb
sub
cmp
cli
sub
scas
addl
inc
lods
mov
inc
dec
pop
jbe
jecxz
inc
bound
fldcw
xor
or
xor
adc
mov
xchg
cwtl
sti
mov
js
loop
or
xor
mov
xchg
add
adcl
std
pop
arpl
sbb
inc
xor
pop
jecxz
jbe
lds
cmp
add
jnp
push
mov
movsb
int3
xchg
or
dec
dec
mov
gs
andb
inc
fbld
cli
sbb
mov
dec
arpl
jle
xchg
push
and
pusha
push
fldl
mov
jnp
out
jns
lret
xchg
pushf
rclb
stc
in
push
pop
mov
push
push
jp
cmp
adc
dec
xchg
lret
pusha
outsl
popf
push
mov
sbb
inc
pop
inc
dec
cltd
inc
mov
iret
pop
fucomp
ret
popf
xlat
dec
dec
sub
push
repz
lret
push
scas
testl
sbb
mov
fwait
add
lcall
int
pop
das
mov
sub
push
xchg
adc
mov
in
outsl
movsb
dec
pop
rcrl
jl
icebp
dec
in
or
jb
dec
gs
cli
inc
fwait
loope
jg
dec
xlat
cs
mov
xchg
arpl
add
mov
mov
out
cmpsb
dec
les
lcall
jmp
xchg
daa
adc
int
sbb
pushf
jg
xlat
xlat
mov
ss
adc
mov
adc
dec
sbb
shrb
loop
jbe
push
rcrl
repnz
out
out
insl
lds
loope
mov
sbb
inc
add
in
push
shll
lock
sbb
loop
outsl
loope
mov
cmc
shrl
or
insl
sti
insb
push
mov
inc
xor
sub
clc
jmp
sub
cld
add
mov
add
ret
dec
mov
jae
shlb
mov
pop
cmp
mov
mov
mov
loope
ret
iret
dec
daa
fcmovnb
mov
in
adc
sub
aaa
adcl
jae
xor
mov
out
cmp
movsl
add
mov
xchg
fcomps
inc
in
test
mov
or
push
adc
xchg
xor
inc
adc
jbe
adc
lcall
mov
movsl
xchg
mov
scas
xor
cmp
fdivs
inc
test
ss
dec
push
enter
jbe
pop
pop
sbb
jnp
add
xchg
inc
adc
aam
or
out
stc
rclb
xor
pop
das
push
jmp
loope
jb
inc
xchg
dec
mov
pusha
aam
lcall
arpl
sub
cli
mov
xor
std
mov
pop
cmp
pusha
inc
inc
out
inc
inc
mov
mov
int3
mov
sbb
mov
add
adc
jbe
outsb
lods
imul
jbe
ljmp
test
imul
sti
daa
aaa
movsl
test
repnz
sub
xor
js
imul
lods
gs
ret
or
pop
mov
adc
xchg
fidivrl
jo
out
fldenv
fimull
stc
add
or
imul
subl
or
mov
jb
ds
rolb
cmpsl
push
mov
jo
jne
hlt
push
ss
divl
rcl
mov
int
adc
sub
push
push
adc
sub
dec
mov
cmp
jnp
push
xlat
aaa
fstl
sti
dec
fmull
in
xchg
cmp
add
lods
cmp
stos
or
mov
xor
incb
xorl
xor
in
cli
leave
mov
sub
repz
dec
dec
addr16
inc
das
iret
add
mov
mov
movsl
mov
mov
xor
test
jle
insb
dec
cmpsb
push
scas
pop
pop
cld
ret
aam
incl
insl
mov
ret
xor
stc
mov
and
pop
add
xchg
mov
or
insb
dec
lods
mov
pop
fs
imul
adc
nop
mov
dec
mul
fcompl
push
enter
adc
shrl
and
or
in
add
in
and
sahf
or
mov
das
cwtl
cmpsl
jno
and
fs
loopne
jo
fdivp
dec
sub
inc
and
mov
insl
inc
xchg
scas
int3
push
pushf
scas
cmp
jg
push
pop
movsl
jne
jmp
leave
stos
mov
dec
or
loopne
rcrl
cmovl
ljmp
mov
into
lock
arpl
jae
out
xchg
mov
cmp
and
test
lods
dec
aaa
inc
cmp
sub
mov
jle
outsl
in
mov
into
outsl
in
mov
add
in
pop
mov
jmp
pop
mov
xchg
dec
fs
bound
in
push
popf
in
mov
inc
es
cmovl
mov
xor
hlt
and
call
jne
or
add
adc
sbb
dec
add
push
jmp
clc
jmp
lods
push
std
inc
push
jmp
aam
xchg
sbb
push
lret
sub
xchg
or
mov
dec
cmp
mov
pop
bnd
sbb
pop
stc
pop
jle
xor
cmp
fldl
add
into
mov
je
arpl
xor
xor
dec
jns
push
lcall
add
jno
jae
xor
mov
add
pop
aam
movsl
test
add
pop
adc
loopne
fs
push
outsl
dec
test
mov
lods
mov
cmp
jmp
hlt
or
add
loope
lds
push
inc
mov
dec
popf
rorb
sbbl
dec
jmp
icebp
dec
loope
pop
push
jo
call
mov
mov
xor
mov
loop
jae
and
dec
jge
or
leave
mov
clc
sbb
mov
mov
add
inc
loop
mov
outsl
xchg
push
or
mov
and
jecxz
int
sub
sbb
dec
sub
push
fildll
lock
cmc
repnz
es
mov
sar
repz
xchg
jmp
fyl2xp1
jo,pt
and
enter
sub
movsl
sbb
mov
clc
cmp
lods
push
lock
inc
popa
jnp
test
lock
inc
add
test
jo
inc
lcall
mov
rcl
nop
movsb
cli
fstpl
in
mov
aas
lods
mov
xor
and
dec
out
push
outsl
mov
cmp
out
cld
or
lret
aam
lret
iret
arpl
lods
pop
xchg
ret
outsl
outsb
pop
ficomps
das
gs
mov
insl
test
or
ljmp
cli
lret
addb
pushf
ret
inc
and
movsb
jnp
xor
add
jle
jmp
out
pop
mov
movsb
repnz
push
and
les
inc
jbe
scas
lahf
mov
xchg
mov
out
sub
adc
sti
xlat
mov
rol
mov
popf
insl
shll
xor
cmp
sbb
leave
xlat
mov
inc
call
pop
enter
test
sbb
sbb
leave
push
pushf
jno
movsb
test
push
xor
and
sbb
mov
jmp
movsb
shll
ja
sbb
mov
xlat
loop
lret
adc
push
pop
bound
jmp
hlt
mov
xlat
mov
cmp
push
fistl
xchg
stos
fcomps
pop
mov
and
test
adc
xchg
add
cmpsb
xor
mov
adc
xchg
nop
test
push
clc
mov
and
adc
and
into
cmp
iret
fs
mov
arpl
add
insb
or
cmp
int3
repnz
sub
push
je
push
xor
cmp
lret
xor
idiv
ret
xchg
ret
xor
mov
cmp
popa
aas
sub
unpckhps
xor
outsl
jnp
and
inc
jp
jae
adc
mov
mov
ficomps
popa
push
or
hlt
ljmp
xchg
push
sbb
jecxz
inc
mov
in
cmp
out
xor
xchg
iret
sbb
out
cmc
pop
fwait
adc
nop
stos
inc
subb
xchg
jle
into
leave
pushf
and
js
ret
mov
jge
mov
rcll
inc
icebp
add
int
push
add
push
nop
push
mov
adc
pop
stos
arpl
shlb
mov
cmp
xchg
jle
cld
fldenv
movsb
scas
fcompl
mov
pop
dec
jge
inc
movsb
inc
fcompl
dec
bswap
lods
sbb
jle
and
orl
iret
mov
dec
je
and
cmp
pop
xor
lret
ret
scas
push
mov
jp
dec
adc
adc
mov
lret
aas
bound
mov
lret
xchg
sarb
hlt
adc
xor
push
aam
or
negb
jae
mov
push
or
les
movsb
adc
sbb
mov
push
xor
lret
xchg
arpl
xchg
in
xor
lret
daa
or
adc
mov
cltd
jae
dec
fadds
lcall
dec
addl
jno
or
fcmove
push
xlat
xor
cmp
popa
or
lahf
clc
fmull
or
mov
shr
int3
and
ds
call
lock
mov
subl
mov
mov
inc
lcall
test
lret
adc
jl
cs
or
lock
mov
dec
xor
push
jnp
pop
popa
call
dec
or
jecxz
add
repz
mov
xchg
int3
jg
lahf
cvtps2pi
and
cmc
in
sub
ja
jnp
ja
inc
ror
ds
popa
ret
dec
pop
out
push
test
imul
mov
add
int
icebp
test
mov
jl
xchg
shlb
mov
xor
dec
push
decl
xchg
dec
int3
mov
mov
xor
sbb
fsts
cwtl
dec
nop
scas
aad
inc
sub
mov
testb
daa
xchg
test
jns
xchg
mov
int
pop
xchg
xor
sbb
xor
scas
xchg
sub
or
les
or
aam
rorw
imul
push
mov
insb
push
divl
dec
add
pop
and
sub
add
divl
dec
idivb
in
adc
sbb
sbb
xchg
movsl
jmp
scas
xchg
jne
jo
out
jg
xchg
and
lods
stc
or
repnz
and
popf
push
and
das
mov
jns
dec
ja
jns
cmp
mov
lea
lret
fsts
cmc
and
inc
out
mov
mov
adc
out
jo
xchg
sahf
rcl
fnstcw
adc
mov
xchg
pop
add
fcmovb
xchg
mov
mov
sbb
push
rcrb
rcll
adc
shl
pushf
sub
lahf
xchg
jo
jnp,pn
ret
xchg
adc
repnz
insl
rolb
add
addr16
jno
inc
clc
fsubl
mov
stos
lcall
and
cwtl
loop
enter
mov
popa
sub
nop
flds
adc
mov
divl
mov
les
jp
or
mov
jmp
lret
adcb
push
adcb
sbb
jae
dec
aaa
xor
fucom
add
inc
nop
inc
or
js
push
jb
or
xchg
jp
and
movsb
ljmp
sub
pop
xor
cwtl
push
jns
or
sbb
mov
mov
xor
xchg
out
sbb
mov
cmp
jno
xchg
fwait
aad
add
fsubl
sub
mov
fimuls
jae
enter
lods
push
test
sub
fiadds
test
add
fimull
pusha
cmpb
push
imul
jo
xchg
xchg
jle
xchg
jae
mov
xchg
insb
cmovno
adc
sarl
mov
adc
xlat
hlt
mov
cmp
icebp
fstl
scas
shll
mov
pop
cmp
fldl
lret
test
sbb
hlt
xchg
aad
sub
clc
add
push
gs
nop
stos
push
mov
dec
outsl
bound
sbb
jmp
sbb
dec
jmp
jno
and
out
nop
jecxz
or
sub
inc
add
lahf
inc
mov
cmp
mov
shlb
dec
xchg
sti
mov
sub
adc
inc
dec
push
dec
sbb
pop
xor
fisubrl
jnp
jns
add
adc
xor
cmp
fs
sar
pop
fsubrp
lcall
aam
jp
mov
xchg
xor
sub
cmpsl
cs
push
lock
mov
adc
js
aad
fmul
pop
dec
shlb
mov
lret
pop
sar
leave
mull
lret
stos
inc
and
and
xchg
in
sbb
xchg
inc
es
xchg
dec
adc
pop
jae
inc
mov
stos
jo
mov
push
mov
jle
mov
stc
repz
gs
ljmp
xor
rcr
jnp
inc
loopne
popa
out
ret
lock
push
fadds
inc
push
cmp
into
push
aaa
fists
add
push
repz
out
mov
mov
std
mov
cmpb
ret
aaa
cmpsl
out
fcomps
sbb
icebp
push
ljmp
es
ret
orb
icebp
adc
ds
jge
xchg
lods
movsb
and
cmc
lret
mov
and
hlt
pop
stc
mov
jge
mov
outsl
jb
dec
cltd
mov
ds
cmp
mov
call
pusha
mov
loope
aam
arpl
and
stos
sti
pop
inc
mov
pusha
leave
and
sub
loope
push
or
mov
add
bound
sbb
sub
aas
sbb
push
loopne
sub
sti
sti
add
adc
xor
icebp
lahf
aad
cld
std
add
mov
and
sub
jge
jbe
ret
mov
xor
inc
test
test
adc
gs
jae
sti
popa
xchg
dec
xchg
sub
insl
push
aas
pop
in
sub
mov
sbb
movsl
lcall
shll
mov
into
repnz
movsb
mov
xor
cmp
lret
iret
push
sub
fs
mov
sbb
lods
push
push
add
dec
inc
add
bound
lcall
add
insb
mov
outsb
push
ja
push
scas
pop
cwtl
lahf
sbb
dec
inc
mov
jmp
jp
xchg
push
mov
push
fstpt
and
in
pop
int
or
inc
adc
push
lds
sub
je
dec
insb
test
xor
and
sbb
mov
lea
ds
iret
mov
les
repz
dec
test
add
inc
stc
movsl
ret
mov
enter
fcomps
cmc
repz
loopne
mov
jmp
rcll
std
pop
push
shlb
lock
or
mov
fistps
dec
iret
icebp
adc
xor
sbb
mov
pop
dec
xchg
dec
jns
stos
pop
push
in
mov
mov
jnp
aaa
xchg
fdivrp
pushf
scas
cmpsl
mov
insl
cmpsl
popa
jne
rcll
inc
mov
inc
daa
pop
iret
ds
dec
pop
f2xm1
mov
roll
ja
mov
loop
mov
mov
in
addb
out
mov
int
cli
jl
mov
fdivrs
inc
xchg
add
adcl
inc
or
jge
mov
data16
in
dec
popf
into
test
ds
adc
push
inc
xchg
jmp
loopne
jp
mov
jmpw
push
pop
leave
repnz
jns
cmp
pusha
mov
jl
xor
sub
scas
inc
cmp
or
jg,pn
fidivrl
pop
test
mov
push
push
ljmp
or
xor
cmc
push
orb
and
mov
dec
fcos
shr
out
in
add
repz
xchg
push
daa
push
mov
pop
xchg
fmuls
test
add
movsb
ret
mov
repz
je
stos
push
cmp
adc
sub
jae
ret
icebp
test
int
mov
stos
ja
and
xlat
jo
scas
or
addl
push
dec
mov
ret
jl
cltd
repnz
push
adc
enter
mov
std
mov
dec
cld
cmp
call
int3
and
pop
dec
push
pop
imul
xor
inc
incl
or
shll
cmp
aam
inc
xchg
jbe
test
add
or
inc
pop
jge
leave
xor
popa
cs
mov
ret
dec
jle
test
jns
mov
pop
xchg
stos
push
inc
pushf
lret
movsb
arpl
or
aam
fdivrl
inc
nop
mov
out
movsb
lods
pop
test
jp
mov
rorb
orb
xorb
push
cld
and
sbb
sbb
push
xor
jae
je
outsl
icebp
rorl
out
jbe
out
cmp
aad
dec
xchg
test
or
divb
add
js
and
mov
div
pop
out
hlt
mov
or
int3
sub
stc
jbe
stc
sub
inc
fnstenv
sbb
pop
dec
outsl
mov
adc
pop
xchg
into
cmpb
stc
mov
xchg
add
imul
mov
lret
aad
dec
rcll
or
dec
xchg
jmp
les
ljmp
out
popl
sub
fs
jb
push
inc
mov
clc
push
lahf
cmovg
sti
xchg
and
lahf
fldt
push
pop
cmp
cli
add
jbe
push
push
mov
das
loope
cmp
in
addr16
jmp
jno
dec
out
fmuls
leave
fsubl
xor
repz
or
mov
mov
and
xchg
pop
mov
or
mov
xor
call
sub
push
sbb
out
inc
ss
jae
sbb
popa
lods
fstpt
inc
into
outsb
movsl
jbe
fcomi
pushf
mov
adc
stos
pop
mov
jne
js
mov
lcall
xor
push
lret
or
xchg
sub
sahf
pop
xlat
or
pop
lea
push
mov
cmp
call
add
sbb
dec
lcall
out
out
push
cmpsl
loop
int3
push
or
out
push
aam
bound
movsb
addw
sahf
into
jne
pop
inc
jp
cmc
andl
jmp
and
dec
adc
daa
cmp
adcl
mov
lds
cmp
int
mov
xor
int
mov
sub
loop
mov
jmp
out
aam
pop
push
mov
push
in
push
adc
in
pop
sub
in
sub
sbb
xchg
or
inc
data16
jbe
mov
std
cmpsb
jbe
add
sahf
out
push
jp
mov
xorb
pop
in
xorb
xlat
cmp
stc
vcvttps2dq
mov
and
out
xlat
sbb
cwtl
stc
jb
mov
loop
test
xor
call
sbb
ret
cli
dec
rol
mov
jns
out
out
push
xlat
enter
out
loop
mov
cltd
push
mov
hlt
pop
insb
js
push
mov
or
jnp
loope
adc
stos
cmp
mov
out
sti
push
jp
lea
repz
cwtl
adc
ja
aam
outsb
jge
push
and
push
dec
in
test
test
xor
mov
scas
or
call
lds
and
pop
rclb
adc
push
test
inc
mov
inc
mov
repnz
or
or
shl
jl
js
insb
dec
xchg
daa
inc
mov
dec
cli
pop
pop
cmp
aaa
repz
push
dec
imul
and
pop
idivl
xchg
imul
or
aam
mov
jmp
push
in
into
insl
hlt
cmp
sarb
mov
shll
inc
push
cs
or
xor
pop
outsl
aad
adc
ja
jmp
sub
fisttps
add
mov
sub
mov
mov
addr16
call
clc
jg
add
lret
hlt
xchg
inc
cmp
scas
jp
push
cmp
lret
test
add
inc
and
orb
pop
popf
in
inc
xchg
push
bound
sub
aaa
xchg
xor
or
dec
sbb
loop
xchg
nop
sub
pop
arpl
or
inc
or
jne
cmp
decb
cmpsb
ret
or
mov
lret
sub
outsb
bound
repnz
sbb
sahf
xchg
jns
inc
cmp
add
and
int3
sbb
mov
mov
and
int3
fnstsw
mov
cmp
into
adc
aad
pop
lret
loopne
jno
fwait
aad
or
pop
push
cmpsl
into
mov
push
nop
jp
popf
fwait
jl,pt
pop
dec
outsl
jg
xor
add
jl
clc
push
loope
in
add
mov
jo
cmp
sbb
aam
sbb
mov
enter
js
cmp
cmp
and
sub
popa
add
ja
cld
pushf
fs
push
or
dec
scas
pop
adc
inc
mov
frstor
jp
xor
inc
addr16
fidivrl
lret
insb
mov
mov
inc
sbb
mov
sti
lea
xor
sarb
xor
jne
mov
add
mov
dec
mov
cmp
jmp
mov
pop
repnz
sbb
lea
or
out
mov
dec
dec
addb
sbb
adc
sti
fstps
lods
xor
sbb
add
mov
insb
leave
mov
leave
outsb
outsl
data16
sbb
pop
lret
lahf
repz
je
jne
insb
nop
enter
xchg
mov
pop
sbb
mov
pop
adc
push
ret
jmp
sahf
or
ljmp
add
das
shrb
mov
xchg
mov
cs
sub
arpl
push
cmpsb
adc
or
je
adc
jne
testb
pop
push
into
shl
aaa
insl
repz
pop
arpl
sub
jmp
push
fwait
mov
sbb
xor
outsb
or
pop
in
stos
inc
cwtl
mov
and
pop
sub
push
stc
mov
outsb
jge
mov
mov
pop
ficoml
daa
push
aas
add
movsl
xchg
in
in
scas
jcxz
ret
ret
shll
aas
lcall
and
and
inc
mov
loop
faddl
cmc
fwait
lock
out
sahf
addb
sbb
pop
jno
std
fdivs
ret
mov
vhsubps
pop
fwait
popf
jb
dec
adc
inc
stos
sbb
pop
push
scas
mov
fisubl
xorl
xor
lock
inc
stos
mov
in
stos
mov
pop
inc
dec
stos
cmpsb
pusha
ds
adc
xchg
daa
inc
mov
jns
mov
push
sub
pop
adc
fstpt
aaa
xchg
shrd
in
ljmp
pop
cmpsb
lret
imul
jne
ljmp
addr16
xlat
xor
and
or
out
push
subb
mov
cwtl
cmc
jl
mov
mov
rcll
xor
mov
shlb
shl
insb
push
inc
cmp
xlat
mov
xor
fs
insl
xor
adc
inc
imul
clc
popa
andb
or
int3
js
xor
out
inc
mov
movsb
sbb
xor
into
cmpsb
jg
mov
mov
mov
sbb
repz
scas
clc
lret
pushf
pop
jns
je
ljmp
pop
scas
dec
popa
cmpsb
iret
cltd
sbb
adc
xchg
aam
xchg
mov
fwait
pop
sbb
push
test
jnp
sub
mov
sub
pop
xor
cltd
js
jns
jmp
ret
jle
mov
pop
fwait
jmp
jp
sahf
bound
push
es
ds
jp
sbb
sub
or
dec
xor
xchg
rorl
push
inc
ja
scas
ds
mov
adc
and
fisubrs
xor
out
inc
sub
cmp
inc
cvtps2pd
mov
cmp
nop
fstp
push
dec
push
pop
cmp
imul
lock
adc
ja
popl
test
cmp
nop
fldl
pop
loope
lock
clc
mov
les
sbb
pop
mov
mov
dec
jecxz
les
jbe
add
lea
xor
push
xchg
add
jnp
mov
sbb
xchg
dec
iret
xchg
and
in
out
sub
xor
adc
and
pop
mov
subb
adc
push
add
pushf
fwait
popf
lret
mov
lea
dec
mov
loopne
mov
test
jne
test
inc
push
sub
lcall
movsb
je
xchg
mov
imul
pop
dec
mov
lcall
shlb
pop
pop
xlat
mov
sarl
adc
mov
adc
pop
dec
dec
or
mov
dec
rorb
pusha
or
addr16
fld
sub
test
or
add
xor
mov
rcrl
aas
inc
lods
mov
fbld
testl
ds
jb
in
shrb
and
pop
stc
test
js
rcll
and
xor
push
cmpsb
mov
pop
and
and
outsl
mov
or
mov
xor
in
test
pop
add
shll
ds
adc
adc
fisttpll
jnp
lods
sbb
aas
fiadds
fisubrl
sub
call
xor
adc
movb
jl
push
stc
dec
push
pop
pop
mov
mov
sub
subb
mov
push
incb
inc
and
dec
push
fcmove
ljmp
mov
inc
aas
and
testl
xchg
push
dec
ror
adc
out
sahf
idivb
into
fwait
mov
sbb
mov
or
pop
xchg
cmpsl
pushf
inc
loop
fs
dec
mov
dec
or
push
insl
xor
fcomps
scas
inc
repz
push
pop
and
cmp
dec
xchg
dec
idivb
xchg
lahf
add
or
xor
jbe
popf
mov
lea
jae
fwait
push
sub
fcoms
popa
adc
inc
outsb
lahf
arpl
adc
add
mov
adc
lcall
leave
mov
ret
dec
mov
mov
mov
cmp
faddl
cltd
sar
in
push
stos
jae
mov
les
sub
iret
xchg
xchg
orl
int3
bound
js
mov
mov
hlt
daa
hlt
sub
mov
push
push
mov
sbb
push
shrb
sbb
icebp
jge
mov
imul
pop
jge
test
ljmp
pop
fisttpll
mov
out
imul
int
sub
fcoms
loope
sub
test
xor
xchg
push
sti
push
test
imul
sub
add
int
loop
cmpsl
sub
aad
jmp
jl
movsb
fidivrl
shll
orb
shlb
push
shl
add
and
jbe
icebp
sbb
add
pop
daa
pop
push
clc
fildl
inc
test
bound
mov
cwtl
cs
jbe
sbb
dec
scas
test
sub
or
shrb
push
inc
and
movsb
sbb
call
fcompl
jecxz
lahf
movl
cwtl
test
and
inc
and
sbb
scas
and
rcl
sub
pop
or
jle
cmc
jb
dec
inc
mov
dec
pushf
xchg
rolb
pop
cmc
pop
dec
mov
outsb
xor
sub
fidivrl
jle
gs
and
loopne
je
fwait
xor
std
add
dec
into
xor
test
sar
or
add
mov
rclb
lret
loop
repnz
imul
js
nop
leave
in
xor
hlt
or
sbbb
and
inc
pop
sbb
out
in
adc
dec
mov
jnp
jg
lret
mov
test
test
insl
cmp
sub
push
push
lret
xor
sbbb
jb
push
mov
bswap
jne
shlb
dec
or
js
iret
aas
push
cmpsl
pop
cli
pop
rcr
sbb
add
jo
lock
xor
sub
and
xor
cmp
push
mov
mov
pop
je
test
push
dec
jnp
mov
and
inc
inc
push
cmp
insl
sub
sti
and
lods
push
xchg
xchg
xor
inc
imul
sbb
adc
pop
pop
mov
or
cwtl
aas
push
out
add
xor
push
inc
jns
push
pop
lods
pop
jl
je
ror
xchg
and
arpl
test
or
in
xor
mov
imul
sub
mov
scas
jl,pt
or
in
loopne
sbb
adc
or
jne
imul
neg
shl
cmpsl
inc
mov
jmp
in
cmp
addl
aam
cwtl
imul
dec
mov
xor
iret
push
add
test
jmp
cld
or
add
cmpsb
outsl
ss
sub
pop
adc
inc
int
sarb
or
push
mov
mov
cmp
pop
add
inc
shl
push
adc
call
adc
icebp
int
sub
adc
inc
and
fisubl
pop
and
in
sub
pop
imul
adc
cld
xor
popf
inc
sub
in
cmp
icebp
push
repnz
push
leave
movsb
icebp
in
xor
lahf
cmp
mov
aad
out
mov
push
and
ret
mov
xchg
imul
cmc
shrb
lea
mov
imul
sahf
mov
mov
lods
scas
cmpsl
push
nop
push
mov
adc
mov
sub
ljmp
dec
dec
into
mov
xchg
das
mov
add
int3
pusha
mov
lea
sbb
test
push
mov
jns
aad
cltd
xchg
and
cmp
sbb
cli
jmp
loop
hlt
sub
sbb
mov
ret
push
sub
cltd
std
mov
mov
cmp
in
shll
sub
xor
nop
fldl
shlb
mov
jb
or
aaa
adc
out
inc
leave
adc
jnp
ror
push
jo
jecxz
pushf
inc
xor
decb
and
testl
outsl
xor
dec
arpl
jge
xor
or
repz
rorl
lods
aaa
jl
lret
sar
cmp
imul
cmc
push
xchg
adc
scas
adc
jae
dec
sbbb
or
inc
sbb
popf
add
xor
add
aad
aas
pop
pop
popa
and
mov
and
lcall
sub
shlb
or
mov
and
sbb
sub
inc
out
mov
add
fsts
iret
cmp
add
sbb
pop
dec
push
and
out
push
rol
dec
sarl
cwtl
xchg
fs
add
in
cmp
aas
subb
and
push
daa
shlb
add
popa
xchg
jnp
inc
clc
dec
fwait
lret
dec
xor
jg
mov
add
sbb
lods
jg
inc
dec
inc
push
mov
daa
in
out
cmp
sub
mov
in
filds
add
mov
adc
mov
inc
inc
dec
pop
sti
sub
cwtl
jb
cmpsl
cltd
sub
adc
push
push
xor
pushf
arpl
dec
pop
cs
ds
cmp
mov
aas
inc
and
cmp
sbb
jae
sbb
jp
or
call
fnstcw
xchg
mov
push
xor
dec
popf
out
es
lahf
inc
rcrb
push
push
xchg
loopne
mov
sbb
dec
enter
out
pop
adc
jle
or
and
loopne
fsubs
shrl
push
ret
rclb
and
add
rcll
jl
sahf
addr16
jne
rcrb
adc
pop
push
ja
shr
jno
aaa
cmpl
test
mov
pop
nop
mov
mov
lret
popf
jg
pop
lds
jb
mov
sbb
mov
mov
jno
lock
ret
hlt
in
mov
fwait
adc
iret
mull
or
sub
js
cmp
sub
ja
aam
or
mov
jp
loop
leave
sbb
push
cmp
or
dec
lret
aad
mov
call
xor
aad
mov
xor
cmp
popa
addr16
dec
or
test
inc
daa
push
shll
insb
movsl
bound
fldenv
ss
push
and
idivl
push
into
rcrb
jmp
rclb
pop
scas
sbb
push
out
and
sar
mov
dec
call
aaa
pop
mov
xchg
pop
adc
aam
jl
packsswb
jnp
sbb
hlt
mov
or
xchg
mov
mov
mov
sahf
mov
int3
sub
test
sbb
jp
in
and
add
add
outsb
hlt
push
dec
in
jns
in
aad
lahf
out
dec
adc
ret
and
adc
out
ret
cmp
pop
xchg
push
mov
lea
lret
lahf
or
and
sbb
aam
mov
lahf
push
mov
into
inc
add
ss
dec
cmp
mov
or
and
scas
xchg
lahf
push
ljmp
stc
popa
shrl
push
jp
pop
daa
mov
adc
mov
jmp
loopne
push
xchg
sbb
dec
imulb
ja
lret
xor
mov
jnp
inc
inc
test
sbb
inc
cmp
nopl
pusha
inc
mov
fdivs
sub
aam
fsubl
andl
jecxz
mov
in
cmp
fnstenv
dec
jno
std
pop
dec
sahf
stos
jbe
add
jle
imul
sub
ja
xchg
push
ret
cld
jne
lret
add
mov
pop
sub
dec
add
or
icebp
aam
loop
xor
sub
rcll
iret
adc
loop
sub
inc
mov
mov
into
pushf
out
add
int3
or
es
jmp
sahf
stc
je
jmp
fsubrl
mov
push
inc
add
dec
adc
rorl
aad
add
cli
fnstsw
push
scas
jne
sub
push
aad
mov
mov
xchg
mov
cmp
jno
mov
mov
mov
cmp
add
loope
scas
call
mov
pop
mov
inc
adc
dec
pop
fdivs
push
pusha
xchg
push
stos
lret
outsb
adc
mov
fidivrl
bound
lret
es
fwait
push
adc
jno
iret
ret
mov
mov
std
outsl
and
add
mov
cmp
out
gs
mov
sub
mov
stos
mov
sub
stc
out
fisttpl
cmpsl
ret
mov
fimuls
aas
movsl
and
mov
aad
or
xchg
ljmp
inc
push
push
das
pop
jg
xor
insb
es
xchg
push
mov
sbb
ja
cmp
fildll
sbb
cmp
jnp
sbb
or
imul
jo
xchg
nop
sub
movsl
push
scas
shr
dec
fiadds
loop
roll
sub
lods
rorl
aad
divl
clc
and
mov
movsl
jecxz
sub
icebp
xchg
add
xchg
push
repz
pop
pop
pop
xor
aaa
cmp
mov
bound
and
iret
dec
mov
lcall
nop
adc
push
cld
stos
cmp
cmp
sbb
xor
sti
pop
test
inc
pop
mov
insb
int3
int3
pop
push
mov
addb
sub
or
push
xchg
bound
cmovnp
inc
repnz
push
lcall
and
sbb
dec
cmp
dec
iret
in
mov
outsb
fldl
cmp
stc
cmpsb
xchg
cmp
aam
cltd
lock
scas
ds
push
jp
jne
loopne
jge
gs
sub
adc
lcall
subb
lcall
cmp
jle
cmp
ret
jbe
xchg
pop
xchg
in
test
mov
mov
test
inc
stc
js
ja
cltd
shrl
push
cmp
add
inc
pop
and
std
pop
mov
mov
dec
mov
shl
lahf
aas
add
in
mov
sbb
inc
in
fidivs
mov
pop
xor
dec
rcr
sbb
mov
repz
xchg
stc
add
pushf
mov
jmp
in
adc
mov
jae
cli
push
mov
movsb
sbb
fcoml
inc
mov
xorl
jnp
mov
repnz
mov
notb
mov
fisttpl
jl
cmc
cmp
push
add
outsb
fdivrs
adc
and
fld
mov
cmp
mov
outsb
ret
push
mov
jl
xchg
scas
mull
mov
out
cli
fcompl
push
cmpsb
pop
nop
stos
mul
lcall
sti
xlat
xchg
js
cmc
adc
orb
inc
je
mov
into
stos
jp
leave
fs
rclb
pop
sub
in
jne
lock
mov
jl
shrb
and
fimuls
js
jbe
aad
scas
movsl
ret
ljmp
mov
add
js
cmp
push
lret
jge
mov
dec
shll
xchg
outsb
ds
or
xor
daa
pop
pop
push
sub
iret
and
popa
push
adc
cmpsl
les
mov
imul
fidivs
sub
daa
repz
lcall
leave
loop
push
lea
jg
mov
inc
scas
ljmp
pop
xchg
pushf
xchg
fwait
push
jp
test
addl
cmpsl
mov
scas
je
jns
mov
xchg
xchg
loope
js
push
test
aas
lret
pop
dec
test
xlat
repz
pop
lret
sbb
dec
push
rcrl
or
repnz
xchg
mov
rcll
jnp
bound
shlb
ror
sbb
mov
push
lods
insb
enter
stos
fdivrs
js
push
icebp
repz
sbb
addr16
inc
pop
dec
in
and
or
mov
test
shrb
fistpll
lahf
or
sub
sub
push
xchg
les
inc
xor
mov
rorl
xor
add
xor
pop
cmp
and
add
mov
aad
nop
into
lods
movsb
cmpsb
jnp
lcall
cltd
or
adcb
or
add
in
jecxz
and
mov
rolb
push
push
mov
inc
or
ret
std
cmp
and
shll
bnd
popa
jb
xlat
icebp
notb
imul
xchg
xchg
adc
xor
lock
mov
test
mov
add
mov
pop
lds
outsl
inc
shll
cltd
andl
movl
push
lahf
inc
adc
xor
mov
pop
leave
out
aas
aaa
mov
mov
push
or
xchg
mov
insl
movsb
mov
adc
jge
fwait
lahf
jae
sbb
mov
sarl
or
imul
enter
insl
int3
mov
ret
ds
sti
shr
and
mov
movsb
cmp
rorl
mov
jne
sub
adc
ja
cmp
lods
jns
daa
in
add
mov
cmp
jmp
out
cmp
test
xor
push
jb
call
or
sub
mov
mov
mov
mov
subb
push
push
pop
cld
lods
cmpsb
pop
push
adc
fldenv
cmp
pop
jmp
or
cmp
cmp
roll
xchg
lret
fdivrl
xchg
negb
inc
mov
jo
les
ret
arpl
or
shr
imul
xchg
inc
incb
and
or
mov
call
iret
or
cltd
pushl
imul
and
mov
lock
add
aam
jno
subb
and
repz
aam
cmp
aaa
add
or
dec
push
fbstp
add
sub
jg
stc
and
aas
xor
and
fwait
rolb
mov
aam
aas
lock
inc
inc
inc
mov
or
in
and
adc
std
jbe
sahf
das
xchg
adc
cmp
rclb
sbb
push
adc
notl
nop
xchg
push
adc
lret
mov
jmp
adc
data16
xlat
popa
mov
popa
sbb
imul
test
jmp
mov
or
sub
xchg
daa
addl
add
fisttps
fiadds
push
jne
int3
jb
add
test
test
inc
decb
cli
fs
pop
sahf
pop
jmp
mov
hlt
and
mov
push
rcll
xchg
test
leave
ds
jg
push
icebp
cmp
push
xor
cmp
mov
add
lret
xchg
into
jg
stos
adcl
xchg
dec
pop
mov
mov
push
ds
mov
push
imul
mov
notl
jl
cmc
cmp
push
stos
push
inc
in
dec
mov
loop
cmc
mov
stos
mov
leave
fisttpll
arpl
or
jb
out
jg
jne
mov
out
dec
cmp
lcall
daa
mov
dec
xchg
out
andb
aaa
inc
je
out
or
bound
divb
xchg
mov
movsl
push
adcb
xchg
pop
cli
sbb
lahf
pop
pop
insl
xor
das
mov
and
fdiv
repz
xor
sub
fwait
bound
xor
jp
push
pop
lret
inc
xchg
mov
into
adc
jb
mov
add
mov
fdiv
pop
rcrb
sbb
insl
inc
pushf
cmpsl
daa
sbb
cmp
mov
mov
sbb
xchg
sub
add
adc
push
stos
insb
repz
lock
cmc
push
mov
sbb
and
lahf
outsl
ret
stos
jnp
iret
xor
mov
xchg
fisubs
or
or
andl
loop
mov
add
dec
jmp
mov
cmp
movsb
add
aaa
pop
test
das
xchg
mov
test
std
cmp
lods
mov
imul
sub
ljmp
iret
mov
mov
xchg
lcall
and
dec
jnp
repz
jno
inc
repnz
imull
outsl
sbb
imul
ja
mov
mov
inc
cltd
negl
lods
push
sub
push
pop
or
sub
cmp
cmp
jmp
pop
popf
or
sub
dec
or
rclb
or
fcoms
jbe
sbb
insl
adc
out
cwtl
test
cmpsb
push
imul
add
aas
cmp
xor
std
adc
add
adc
ret
xor
imul
mov
push
sbb
mov
sub
ljmp
inc
out
lods
cmp
sub
fstps
popa
adc
push
fistl
pop
shl
inc
outsl
adc
sarb
xlat
and
jae
fbld
test
data16
adc
outsb
jmp
addr16
je
add
outsl
adcl
xor
jo
dec
xchg
dec
std
xor
test
add
cmp
pop
iret
pop
dec
dec
shll
stos
les
and
pop
repnz
bound
je
leave
cmc
push
inc
lock
inc
aad
arpl
es
and
scas
sub
pop
pop
mov
jnp
aaa
cwtl
xchg
pusha
pusha
lods
xchg
jl
dec
dec
fwait
shlb
xchg
imul
inc
jne
jns
push
and
leave
das
insl
xchg
mov
cmp
test
xchg
pop
xor
ja
cmp
pop
ret
addl
out
loopne
mov
push
es
xchg
das
jns
sahf
ret
iret
xchg
cld
or
jecxz
rorb
aas
mov
add
les
pop
and
push
mov
fcomp
ds
push
push
mov
dec
xor
inc
inc
add
rcll
xchg
cmpsb
dec
pop
out
and
sub
and
xchg
xor
ds
cmc
aam
add
add
clc
jnp
cmp
repz
mov
dec
ret
insl
cvtps2pd
jecxz
adc
lcall
and
daa
fnstsw
sahf
xchg
insl
mov
in
lds
and
or
mov
addr16
in
imul
sbb
aas
repz
pop
lret
mov
nop
cli
pop
adc
dec
cmc
ret
icebp
mov
inc
push
stos
mov
or
mov
and
in
aam
mov
cmpsl
test
clc
push
mov
xchg
sti
bound
cmp
push
aas
jp
inc
jmp
out
xorl
pusha
gs
xchg
adc
cmpsb
xchg
scas
mov
mov
mov
call
inc
and
adc
mov
rcll
add
iret
mov
mov
pusha
dec
and
lcall
fmulp
stc
and
mov
cld
sbb
or
in
loope
push
stos
test
inc
movl
xchg
xor
sbb
pop
inc
jmp
inc
imul
xlat
lock
mov
addb
sub
insl
das
out
aad
mov
cltd
leave
outsl
mov
les
popf
dec
fidivrs
push
xchg
rcll
inc
fmul
fs
imul
pop
aad
mov
test
test
jg
aam
leave
or
sbb
test
sbb
mov
orl
pop
cmp
pusha
inc
popf
sti
mov
nop
pop
or
jnp
mov
outsl
mov
clc
repz
push
repnz
lret
pop
negb
xchg
add
fstl
lret
push
add
jl
int3
scas
cmpl
push
mov
int
lds
jp
xor
jb
sbb
scas
in
mov
sbb
xlat
outsb
mov
les
xchg
inc
arpl
pop
push
in
mov
shrl
call
add
insl
sub
mov
mov
xchg
push
mov
es
std
in
es
mov
add
xor
std
xorl
mov
add
in
aas
lods
mov
mov
inc
mov
inc
jmp
sbb
inc
dec
scas
adc
fisttpll
adc
mov
notb
in
lea
cmp
sub
out
arpl
sti
adc
out
repz
xor
call
or
cli
push
cmp
fistps
push
fsubr
pop
dec
out
adc
popa
mov
lahf
inc
mov
stc
ja
inc
loop
imull
repnz
sbb
mov
and
and
jb
in
iret
lock
cs
jb
lret
xchg
cld
cmpsl
imul
rol
cmp
lods
adc
lds
add
cmp
mov
sbb
in
and
ss
jl
pop
add
clc
gs
bnd
cltd
imul
jge
shrb
notl
cmpsl
mov
sub
mov
popf
dec
inc
scas
stc
add
arpl
jp
xchg
pushf
sbbl
jge
sub
imul
fstp
js
mov
xchg
mov
dec
stos
daa
inc
lods
xchg
add
xchg
xor
cwtl
xchg
mov
shll
repnz
mov
xor
jo
stos
lahf
cltd
in
mov
mov
sbb
xchg
pop
daa
out
out
aas
dec
sub
add
lret
and
pop
mov
jecxz
sub
or
jb
dec
imul
enter
popf
xor
lea
in
add
enter
pop
mov
mov
mov
pop
gs
loope
jp
jno
pop
out
notl
jp
fsubs
inc
mov
push
fcomip
cwtl
mov
pop
movsl
xchg
lahf
in
adc
mov
dec
cwtl
int
out
mov
ljmp
sahf
pop
xor
scas
jo
popf
cmpsl
inc
push
and
repz
jle
inc
mov
insl
sub
pop
or
xor
rcr
or
insl
cmp
std
jge
pop
push
repnz
orl
decl
adc
out
push
mov
pushf
mov
pop
fimull
imull
push
popa
dec
loope
ja
cmp
pop
jno
xor
mov
stos
pop
mov
sbb
je
stos
fcoml
imul
fs
mov
mov
inc
lcall
mov
dec
and
lahf
ljmp
out
dec
rcrl
xchg
dec
int
push
cmpsl
outsl
xchg
loope
insb
dec
int
pop
jbe
shll
imul
insb
dec
enter
aad
pop
arpl
jno
movsl
pusha
outsl
in
inc
out
insl
iret
fmul
jg
push
inc
mov
notb
xchg
cwtl
mov
xchg
push
ljmp
jns
jmp
sub
push
and
gs
cmpsl
adc
in
fstl
test
cld
cwtl
mov
pusha
add
cmc
mov
fsubrl
mov
ss
std
jp
jns
xlat
inc
xchg
test
jae
mov
xchg
mov
fcomps
mov
ficomps
pop
xchg
cli
sub
mov
mov
jb
stos
or
popf
xor
insb
jecxz
iret
mov
dec
xchg
add
mov
pop
dec
sarl
fdivs
loope
push
adc
jge
xchg
loop
or
jno
sti
add
std
push
sbb
data16
xor
neg
mov
jle
sbb
ss
or
push
dec
insl
cmpsl
mov
adc
mov
mov
mov
fdivl
fwait
mov
and
in
adc
pop
cmp
sysexit
fwait
add
pop
pop
jbe
push
loopne
sbb
jl
xchg
and
mov
stos
sarb
je
dec
sbb
mov
mov
aas
dec
cld
pop
or
test
je
test
insb
jbe
and
pushf
int
or
in
and
punpcklbw
push
mov
lret
mull
sub
cmp
leave
push
pusha
cld
test
ret
mov
mov
movsb
dec
xor
mov
dec
mov
push
insl
push
ja
das
xchg
shll
sbb
sub
out
dec
ficompl
daa
in
test
mov
adc
insb
hlt
cltd
inc
cmp
daa
iret
inc
stos
loope
or
mov
out
fisttpl
push
push
bound
jg
fidivrl
cmp
push
jle
shrl
das
sarb
dec
shl
data16
mov
push
pusha
cmp
mov
pop
scas
or
hlt
xor
inc
mov
mov
hlt
aas
adc
cmpsl
push
in
nop
xchg
mov
daa
out
pop
rcr
movsl
repz
movsl
inc
outsb
push
fs
or
mov
filds
enter
out
insb
fisubrs
fs
mov
dec
movsb
mov
push
cmpsb
les
sub
mov
cwtl
pop
fs
lds
mov
xor
and
push
icebp
xchg
test
je
out
sbb
pop
jmp
push
repz
mov
mov
fdivr
mov
mov
cmp
push
shlb
mov
push
pop
or
or
jecxz
mov
xchg
mov
dec
cmp
mov
adc
repnz
testl
ret
sar
bound
enter
insl
pop
repnz
in
ret
cmc
cmp
ror
leave
stos
push
div
sar
xchg
enter
roll
lock
adc
mov
out
sbb
jnp
test
sbbb
call
scas
inc
mov
pop
push
sub
add
xchg
mov
add
aad
sti
dec
negl
pusha
mov
jne
sbb
outsb
xchg
cmp
mul
xor
or
inc
popf
inc
lcall
loope
int3
or
pop
dec
mov
lret
pop
and
notl
popa
adc
push
roll
jne
sub
in
sbb
movsl
rorb
aad
and
dec
mov
cmp
mov
jno
iret
imul
mov
in
dec
fistps
dec
out
push
push
xchg
and
mov
jbe
sbb
loope
popa
pop
sbb
jb
aad
pop
jg
jg
add
test
push
sub
mov
inc
jecxz
or
dec
pop
mov
rorl
popf
test
cmpsb
fldl
pop
xchg
or
ljmp
aas
inc
adcl
popf
mov
cld
lret
inc
jb
add
fidivrs
daa
das
xchg
push
int3
pop
fwait
lret
leave
or
sti
push
rcrb
jb
jecxz
fbld
sub
call
mov
jno
pushf
push
add
imul
jae
repnz
xor
inc
push
dec
lret
inc
fnstcw
fnstsw
sbb
testl
aaa
mov
dec
movsl
or
sub
push
sbb
das
shrb
nop
in
and
and
cwtl
outsb
fstpt
mov
aam
imul
es
mov
fimuls
pop
lret
adc
or
subb
xor
cmp
rolb
call
adc
sub
sti
mov
repnz
js
sub
jg
lods
insl
and
jg
sub
pop
js
pusha
jbe
testl
push
loope
or
pop
mov
iret
pop
shll
jne
inc
fiadds
jmp
mov
bound
addr16
lods
stos
test
xchg
sub
insb
ss
es
fdiv
into
mov
cmpl
add
orb
roll
subl
mov
push
mov
xchg
sahf
ljmp
adc
inc
lret
add
outsb
pop
mov
xor
clc
mov
movsl
jae
sub
pop
sub
sub
ret
ficoms
mull
jns
xchg
push
push
push
mov
int3
xchg
inc
nop
loopne
aam
into
out
clc
das
or
std
push
cmp
loope
popa
test
clc
lret
aas
sub
mov
dec
and
fistps
out
arpl
add
push
jl
mov
pop
int
dec
inc
mov
xchg
inc
fmul
sbb
push
dec
push
int3
mov
das
dec
jl
out
inc
push
or
scas
dec
bound
mov
dec
mov
adc
sub
cli
imul
push
mov
addl
xchg
out
test
sub
xchg
in
add
dec
push
je
in
adc
addl
cli
jo
jbe
fbld
mov
push
inc
mov
int3
push
lds
mov
sub
fsubrl
daa
fimull
jp
mov
out
push
or
cmpsb
cltd
lret
loop
js
push
stos
and
sbb
addl
and
mov
test
cld
jg
in
pop
push
mov
shll
cltd
scas
xchg
outsl
jg
mov
in
jb
dec
hlt
dec
imull
push
cmp
cmp
and
jg
cltd
jno
mov
aas
cmp
push
in
or
imul
push
sbb
shrl
hlt
out
outsb
jo
lret
cmp
jl
js
dec
ret
or
pop
or
popf
dec
adc
add
iret
clc
fbstp
mov
mov
in
mov
insb
out
and
and
cmp
icebp
dec
fwait
jb
add
mov
or
subl
push
push
cmp
xor
cmp
and
loopne
cmp
push
aaa
push
icebp
xchg
inc
sub
add
lahf
and
adc
cmp
hlt
ret
add
ret
add
xchg
lods
outsl
xor
and
or
xchg
jmp
in
mov
push
jp
icebp
add
mov
cmpsl
ljmp
push
cmp
mov
jle
cmc
fidivl
xchg
xor
movsl
pop
popa
jl
aaa
addr16
and
mov
pop
push
sub
and
mov
fnsave
btc
imul
test
test
sbb
xchg
out
mov
icebp
int3
les
pop
pop
mov
cmp
cmp
and
aas
inc
divb
dec
xchg
imul
xchg
icebp
sbb
idivl
rclb
les
add
pop
xchg
sbb
test
cwtl
idivb
xor
sub
aas
cmp
mov
fidivrs
dec
push
sbb
adc
cld
dec
inc
sub
mov
sub
pop
and
scas
mov
adc
shll
xchg
icebp
mov
push
outsl
mov
cwtl
mov
pushf
nop
xchg
inc
cmp
std
mov
dec
mov
shr
insb
loop
fcmovnbe
mov
mov
or
mov
into
inc
ja
cmp
scas
sub
lods
or
mov
and
pop
cmp
sbb
xchg
and
testb
dec
mov
xchg
ljmp
test
jb
mov
in
insb
pop
add
or
js
xchg
add
mov
xchg
inc
outsb
sub
negl
scas
and
dec
push
cmp
jo
mov
in
xchg
and
into
push
in
shl
add
inc
stos
loop
aaa
mov
mov
and
je
test
xchg
cli
ret
pop
popf
jae
hlt
icebp
mov
mov
addr16
fisubs
xchg
nop
xor
popf
adc
push
in
test
jo
cltd
mov
insb
xchg
or
test
push
les
pop
adc
xchg
mov
jle
rol
pusha
scas
imul
push
test
xchg
inc
movsb
mov
sub
push
adc
out
jecxz
xor
xchg
gs
adc
sub
shlb
das
mov
mov
scas
jns
subb
rcr
in
cs
mov
mov
cld
cmp
sub
add
push
xchg
cli
pop
push
frstor
dec
iret
cmpsb
mov
xor
pop
jge
cmp
outsb
stos
and
aaa
icebp
ljmp
cltd
int3
pop
jo
sub
jnp
rorl
xor
mov
xor
iret
sub
mov
jnp
cmp
cmp
data16
or
dec
inc
push
out
inc
sbb
dec
aas
mov
add
adcb
insb
add
cs
lods
dec
stc
adc
inc
inc
dec
das
push
fisttps
test
pop
cmc
sub
jge
pushf
mov
fnstcw
pop
lods
cmp
mov
mov
mov
push
xor
ja
lds
add
dec
add
jb
cmp
cmp
jnp
fwait
outsb
imul
stc
ret
divb
jne
or
mov
inc
pop
sbb
and
inc
aas
call
xchg
enter
movb
lds
dec
xor
jno
inc
outsl
jbe
js
push
daa
adc
pop
shll
mulb
shlb
add
loope
popf
xchg
adc
mov
shrl
mov
iret
mov
test
repz
in
add
xor
insb
aaa
test
sbb
or
sub
xchg
mov
adc
xor
jl
push
stos
cmpl
pop
repz
mov
out
mov
and
adc
sbb
and
adc
xorb
orl
xchg
popa
in
flds
jb
sub
and
or
fmull
loope
sub
cmp
and
cmpsb
ror
and
rorb
sti
dec
sub
mov
cmpsb
ss
insb
cmp
push
lods
dec
dec
fimuls
pusha
inc
pop
push
ljmp
push
push
mov
xchg
adc
jp
and
push
ficoml
cli
mov
jbe
add
imul
xchg
xchg
aas
dec
dec
lea
sbb
mov
inc
scas
jne
insl
mov
fdivr
jp
xchg
cmpsb
push
sub
push
pusha
mov
scas
lods
inc
or
lret
xor
jo
jno
xchg
or
cmc
gs
push
in
js
xchg
jne
xchg
daa
enter
cmp
pop
leave
cmp
in
push
push
jg
pmuludq
mov
and
shll
lods
sbb
push
int
xchg
push
xchg
daa
dec
ja
or
jmp
dec
test
loop
mov
jb
dec
xchg
mov
add
shr
sub
mov
adc
push
xchg
mov
push
push
flds
xchg
into
fsts
call
icebp
or
adc
pop
ss
rcrb
jne
loopne
xor
fcomi
adc
cmp
es
inc
cmp
mov
lret
icebp
scas
pop
repnz
adc
xchg
fwait
sbb
sub
imul
adc
inc
decl
inc
popf
xchg
call
std
sub
in
push
mov
pop
movb
aad
dec
push
mov
inc
stc
xchg
jno
push
fsub
or
dec
jnp
mov
lret
jb
or
inc
inc
sbb
pop
add
mov
aam
cmp
xchg
mov
xlat
xor
imul
jb
enter
push
xor
popa
adc
aas
pop
jbe
shll
push
mov
das
adc
lret
int
adc
adc
iret
pusha
xchg
jmp
ss
mov
sbb
pop
xor
cmp
mov
sbb
cld
and
scas
scas
dec
test
push
dec
push
imul
jl
and
push
jp
daa
sbb
dec
mov
loopne
mov
mov
cmp
lahf
nop
mov
cltd
aad
pop
sub
jb
mov
push
xchg
imul
xchg
or
movsl
or
mov
ds
cld
aaa
lret
outsb
inc
mov
add
mov
call
fistps
popl
cmp
jmp
stos
insb
outsl
lahf
loop
sbb
or
in
sbb
cmp
pop
mov
inc
hlt
add
cltd
xchg
dec
ss
pop
inc
or
mov
test
jae
xor
mov
pop
repz
test
push
mov
stc
dec
dec
sbb
xchg
enter
sbb
iret
pop
sbb
dec
cmpsl
mov
sbb
and
imul
fsubs
dec
adc
mov
mov
add
bsf
mov
xchg
mov
fcmovnb
mov
into
inc
cli
loope
pop
shll
xorl
lea
es
mov
scas
push
in
and
shll
cmc
fs
pop
ret
dec
cmp
in
cmp
out
xor
push
cmp
mov
xor
add
xor
and
mov
pop
cmc
bound
jne
push
test
inc
and
mov
mull
cmpsl
orl
mov
lret
dec
test
ljmp
push
mov
pop
or
fldcw
push
ja
cmp
outsl
imull
mov
push
fs
in
sub
sti
lods
jmp
xchg
lea
in
incl
add
fisubs
test
cwtl
sbb
rcrl
jmp
and
fucom
les
fs
nop
mov
loopne
lcall
xchg
or
lret
cmp
fstps
mov
lock
fdivs
jbe
test
mov
inc
out
ret
subl
outsl
sbb
cmp
push
adc
sub
push
inc
imul
mov
cmpsb
or
mov
jle
or
pop
imul
imul
or
enter
lds
jns
mov
setp
or
iret
mov
push
lret
dec
stos
pop
ljmp
iret
inc
in
int
jnp
push
lock
sahf
sbb
mov
in
shrb
ror
sbb
arpl
pushf
cmp
cmp
fs
push
and
jecxz
lock
pop
repnz
lock
add
ds
out
pop
inc
inc
jle
inc
shrb
in
and
roll
adc
test
data16
dec
data16
jae
push
dec
sahf
push
add
jb
mov
push
push
out
push
scas
sub
mov
push
cmp
xchg
mov
pop
mov
scas
jns
imul
push
dec
adc
outsb
in
sbbb
sub
shl
test
sub
cmp
fcoml
lcall
xor
roll
xchg
dec
stc
add
adc
sub
sub
mov
dec
cltd
lods
pop
jae
mov
in
mov
rcrl
lea
icebp
sbb
insl
xchg
mov
mov
bound
scas
cmp
mov
sti
inc
arpl
dec
out
push
inc
aam
lds
and
sub
add
mov
lret
idivl
unpckhps
rcrb
and
pop
pop
icebp
icebp
mov
jae
mov
mov
add
jp
imul
clc
addr16
sub
add
adc
test
push
lahf
pop
and
cmp
inc
xchg
adc
leave
scas
int3
sub
out
addb
fwait
popa
mov
hlt
sahf
sbb
pop
mov
lock
or
out
or
arpl
fsubs
gs
lea
pop
push
fwait
out
dec
loopne
into
addl
or
popf
shl
and
xor
mov
inc
xor
push
adc
stos
imul
dec
cmc
leave
sahf
js
jp
sbb
outsl
lret
xchg
repnz
mov
andl
popf
cld
mov
mov
mov
jno
pop
loope
fmuls
or
outsb
or
xchg
cmp
sbb
and
out
mov
push
rorb
and
pop
pop
imul
outsb
xchg
andl
int3
repz
sarb
sbb
sub
adc
push
xchg
add
push
sub
andb
rdpmc
stos
inc
mov
lods
add
push
aaa
aam
loopne
call
stos
dec
push
jmp
jl
jmp
pop
jge
xchg
xchg
in
jno
xor
push
fcomi
sub
dec
cmpl
cmp
mov
jo
inc
mov
sub
test
and
push
mov
sahf
icebp
mov
mov
int
orb
fsub
les
sbb
jp
sahf
faddp
stos
ja
ja
es
repz
cmpsl
xchg
mov
nop
pop
sub
inc
pop
pop
push
mov
cli
jo
loopne
dec
sbb
pop
fs
mov
test
in
fdivp
sub
lahf
push
add
loopne
aas
imul
pop
sbb
movsl
out
xorb
mov
and
inc
or
lret
sbb
test
xchg
daa
pop
testb
imul
jbe
push
sub
mov
rolb
repnz
in
jmp
icebp
das
fdivrl
hlt
fsubs
insb
pop
das
mov
jg
vmovdqa
stos
pushf
mov
mov
add
loope
mov
add
int3
cmpsb
ss
cmp
cs
psubsw
sahf
xor
push
mov
aaa
mov
add
fistpll
outsl
cld
testl
sbb
mov
xchg
sbb
xchg
mov
add
in
sub
scas
cmc
ja
addr16
dec
aas
mov
dec
push
insb
and
aam
push
push
addb
fwait
inc
mulb
inc
push
les
push
outsl
mov
mov
mov
push
cmp
xchg
repnz
repz
pop
std
shr
das
inc
mov
hlt
pushf
outsb
sbb
or
in
mov
mov
jmp
dec
testl
mov
push
inc
dec
push
jo
es
loop
push
out
daa
scas
les
loope
rep
dec
add
jg
xor
insl
fisubrl
mov
push
xchg
sub
mov
xchg
std
dec
fists
dec
jb
pop
clc
xchg
xor
and
outsb
or
sbb
scas
in
das
xchg
out
popa
stos
loopne
adc
stc
fs
xchg
lods
fwait
out
push
leave
mov
sub
mov
or
inc
pusha
je
test
xor
insb
and
fdivs
cmp
or
sarb
nop
test
inc
xchg
mov
dec
clc
xchg
scas
xor
add
xchg
popf
push
pop
rcrb
imul
push
sbb
pushf
sbb
dec
mov
push
shll
ds
sbb
mov
mull
fisttpll
fs
jne
push
cmpsb
out
jmp
xchg
mov
xchg
cmp
mov
out
mov
push
inc
or
dec
add
orb
aas
sub
mov
hlt
shlb
push
lea
jne
sti
push
or
lods
nop
fldenv
daa
std
imull
adc
mov
jmp
fistl
sbb
mov
jne
pop
mov
insl
pop
and
lock
mov
out
adc
xchg
jmp
xor
js
sbbl
pop
into
adc
decb
call
stc
dec
dec
add
repnz
push
cmp
dec
sbb
lret
cltd
push
mov
inc
jmp
xchg
cmp
inc
jle
bound
sbb
loope
mov
jne
sbb
rorl
jmp
je
jmp
fimull
lods
add
std
mov
inc
inc
mov
mov
adc
sbb
aam
mov
ss
dec
lahf
out
push
mov
mov
xchg
leave
push
mov
nop
push
jo
push
xchg
push
fisubrl
mov
fisttpll
cli
adc
dec
or
ffreep
ficoms
repnz
lods
mov
adc
mov
jmp
data16
pop
mov
stos
and
cs
sub
sub
popa
arpl
movsb
inc
jmp
iret
add
clc
push
add
lcall
adc
dec
xchg
cmp
xor
sub
fwait
cmp
roll
pop
adc
call
pop
shrl
add
xchg
fwait
dec
jbe
xor
dec
lea
sub
imul
sbb
push
push
pop
lahf
ss
sub
sub
sub
fsubl
xlat
xor
jnp
lea
lods
movsl
push
popa
daa
cwtl
mov
jp
pop
fsubr
std
test
mov
andl
sub
lock
jp
sub
sbb
cmpsl
loopne
jp
inc
inc
sbb
xchg
jns
pop
daa
popa
outsl
cld
jge
popa
fstpl
insb
ret
cs
clc
cmp
aad
vpmullw
jno
mov
mov
mov
insb
sti
bextr
mov
push
sub
mov
adc
jno
fnstenv
jl
cmpb
iret
mov
movsl
mov
jns
test
pusha
or
push
clc
jo
or
cmp
stc
aam
sbb
dec
sub
into
ret
cmp
dec
push
and
push
push
ss
inc
loope
div
xchg
pusha
push
mov
dec
repz
in
fistl
loop
jge
mov
push
push
pushf
xchg
pusha
jp
and
sbb
hlt
in
data16
negl
sbb
mov
rorl
in
lea
cwtl
pop
xchg
scas
jo
sti
cmp
jmp
pop
das
nop
imul
jmp
cmpsb
out
and
fimull
fdivrs
out
ljmp
push
xchg
jns
imul
aam
hlt
fmul
aaa
add
mov
cmp
sbb
sub
xchg
inc
clc
xor
out
push
test
cmp
setl
and
inc
adcl
jns
fwait
dec
xchg
jge
lods
push
cli
mov
loop
loopne
push
cmpsb
mov
mov
and
inc
cs
jno,pn
bound
repnz
and
dec
ds
cli
lea
ja
add
inc
push
subb
push
in
fdecstp
mov
pop
dec
fidivl
mov
bound
outsl
repz
mov
movsl
cwtl
pushf
test
xor
call
push
and
lret
lret
addr16
jno
sbb
sub
mov
dec
xor
xchg
pop
pop
push
push
mov
jns
int
dec
sbb
iret
dec
add
repz
test
rcll
xorl
push
cs
and
cmp
in
subb
and
fs
push
in
imul
int3
aaa
imul
ds
add
fs
fcompl
add
dec
lret
push
fs
icebp
push
jg
dec
mov
flds
imul
stos
in
xor
pop
push
push
jo
pop
add
sub
add
iret
nop
addr16
mov
mov
dec
pop
pop
repz
and
adc
dec
je
or
insb
in
mov
mov
sbb
cmp
lods
fisubrl
adc
repz
pop
jnp
outsb
popf
sbb
xor
jno
sbb
jmp
mov
xchg
and
pop
bound
dec
jl
push
in
call
sbb
sbb
fstpl
repz
fwait
and
bound
fidivrl
mov
in
aam
cmp
lret
stc
mov
push
adc
inc
and
callw
cmpsb
sbb
jbe
jle
jmp
scas
stos
pushf
cmp
xor
es
pop
sub
add
xor
xor
xor
ljmp
push
sbb
mov
mov
gs
dec
push
push
xchg
in
xor
cs
push
jno
pop
add
stos
insl
xorl
aas
or
xchg
lods
mov
stos
loopne
and
dec
into
fstl
popf
cmpsb
scas
stos
mov
jle
das
mov
cmpsb
aam
test
pop
lret
jg
popf
out
cmp
cmpsb
fdivrs
movb
in
roll
imul
je
leave
int3
repz
rolb
pop
push
push
add
push
fisttps
mov
fdiv
xchg
clc
aam
movsb
aas
mov
jbe
in
mov
es
in
repz
xchg
dec
or
pop
sub
sbb
adc
mov
popf
fimuls
nop
add
lahf
xor
xchg
inc
jecxz
push
mov
lahf
dec
loope
mov
lods
adc
hlt
push
sub
xchg
xchg
pusha
lock
arpl
sbb
cmp
gs
dec
jno
mov
and
or
push
xor
push
sbb
test
insl
mov
push
addr16
inc
mov
dec
daa
inc
mov
pop
mov
dec
dec
in
pop
mov
jp
sub
mov
push
xor
adc
jecxz
nop
int3
mov
fnstcw
jo
adc
imul
mov
arpl
push
ret
sahf
add
movsb
mov
fisubrl
sahf
cltd
fisttps
sbb
push
ljmp
lret
dec
sarb
inc
pusha
hlt
push
cld
xorb
std
push
stos
in
in
call
push
lcall
movsl
pop
inc
scas
mov
out
sub
sbb
stc
rol
mov
gs
mov
sub
es
jae
push
cmpb
xor
xor
push
jl
jg
cli
lods
aad
movsl
loope
push
data16
leave
cmp
cli
mov
cmp
loop
ret
push
mov
lret
xor
or
jb
bound
sub
mov
lods
mov
push
cmp
jae
jno
sub
icebp
sbb
insl
popf
adc
sbb
lods
mov
movsl
call
cli
pushf
xor
xor
ret
rcr
rcrb
mov
xor
in
insb
push
adc
pop
push
and
or
cmp
stos
cmp
push
jle
jbe
popf
pop
mov
cmp
int
out
out
pop
notl
lods
xor
es
into
or
push
js
ja
mov
mov
dec
and
or
push
or
adc
add
ds
outsl
adc
push
sub
ss
sahf
push
insb
add
xor
adcl
repnz
sub
or
inc
addr16
mov
cmp
sub
sbb
fstpl
shl
xchg
adc
sbb
dec
mov
dec
add
fs
faddl
pusha
push
cmp
fxch
imul
incl
je
adc
xlat
cwtl
xor
leave
btc
ja
sbb
ret
xchg
lods
popa
addr16
lods
movsb
cld
ja
mov
cmp
rcrb
and
hlt
jb
aaa
mov
mov
into
fadd
sbb
sbb
arpl
repz
leave
sub
adc
pop
xchg
daa
and
popf
cli
lahf
ljmp
mov
sub
mov
dec
sub
mov
les
sti
imul
mov
sar
repz
dec
pop
push
cmpsl
dec
hlt
xor
cltd
xor
and
fimull
out
data16
adc
jg
and
jle
mov
inc
cmp
push
dec
sub
lea
test
push
gs
jbe
mov
into
iret
xchg
sarb
mov
push
xchg
fdivr
pop
loop
mov
in
movsl
xor
jl
in
or
add
lea
sub
adc
inc
mov
mov
cmpsl
movl
sbbb
pusha
popf
mov
pop
es
ret
cld
ja
sti
clc
xchg
arpl
jle
jae,pt
fucomp
int
stc
popa
or
jns
push
fdivrl
pop
or
push
xor
mov
xor
fwait
int3
pop
loope
mov
pop
mov
dec
and
pop
mov
sbb
cmpsb
push
aam
cld
jno
cmp
int3
inc
nop
pandn
jecxz
mov
xchg
iret
movb
cmp
sub
test
addl
bnd
adc
hlt
add
cli
pop
loop
sbb
inc
mov
into
adc
and
call
loop
xchg
leave
mov
inc
add
mov
mov
cmp
and
pop
insb
out
stos
dec
cmp
lods
jo
and
iret
jle
dec
in
add
testb
setl
iret
jb
xchg
jnp
std
outsl
mov
lea
lea
xlat
fdivr
mov
negl
pop
outsl
push
stos
cmc
inc
push
xchg
out
jo
sub
push
hlt
test
aaa
fs
int3
pminub
faddl
push
adc
fcomps
or
sub
stos
in
shll
mov
mov
std
push
and
add
mov
xchg
or
push
cmp
outsl
aas
scas
xchg
inc
in
cmp
cmp
fistpll
inc
sbb
ret
clc
les
push
in
nop
xor
xchg
xchg
sub
mov
push
adc
popa
cmc
out
sub
gs
add
or
inc
mov
outsl
mov
dec
fisubl
je
jnp
sbb
jbe
pop
and
lods
jl
or
adc
xchg
pop
push
xchg
lock
ss
mov
sbb
dec
out
in
sub
sub
jp
jl
adc
lods
xor
aad
dec
imul
add
push
aam
adc
pop
daa
loopne
mov
leave
aas
pusha
in
inc
not
insb
push
sbb
lea
mov
cmc
leave
add
sti
lret
fcmovnb
jne
jmp
in
lret
scas
mov
and
cltd
push
sbb
cs
pop
rorl
inc
ret
fdivrl
xlat
int3
aam
into
sbbl
xchg
add
jb
enter
and
mov
cmpsb
mov
jl
push
and
or
xor
cmp
jae
movsb
in
mov
mov
adc
and
lea
mov
loopne
lds
cmc
cmp
push
mov
ljmp
outsl
cmp
filds
and
imul
outsl
mov
mov
setns
sub
sti
cmp
shr
mov
cmc
lret
inc
aam
mov
jne
leave
cltd
and
push
imul
inc
push
sub
in
xchg
xlat
popa
call
repnz
cmc
mov
sbb
cltd
push
mov
lcall
mov
inc
dec
inc
ret
push
mov
lret
leave
data16
inc
inc
mov
nop
mov
fiadds
jg
int3
cmp
pusha
test
data16
dec
or
mov
pusha
loopne
xchg
add
mov
add
mull
cli
or
mov
fcomps
sub
pop
icebp
sbbb
pop
test
adc
cmpsl
pop
stos
lods
xchg
push
mov
mov
mov
shl
stc
adc
stos
xlat
je
icebp
loop
das
sahf
hlt
fst
sahf
xsha1
cmpsb
into
push
or
add
jno
sbbl
incb
mov
fstpl
and
sub
stos
call
stc
in
nop
ljmp
jno
mov
loope
sub
and
push
sarb
loopne
arpl
gs
mov
pop
mov
xchg
scas
dec
in
inc
ret
mov
test
or
pop
push
xchg
mov
pop
sub
loope
sub
std
mov
out
ja
movsb
mov
test
xchg
mov
xlat
xchg
sbb
sti
pop
xchg
mov
mov
xor
cmpsb
movsb
or
sub
sub
shr
lds
xor
mov
cmp
loop
sahf
adc
cmp
fsubrl
cltd
popf
mov
mov
pop
daa
add
mov
push
outsb
lret
sbb
dec
ret
dec
pop
or
mov
ret
fsubrl
inc
pop
and
cld
add
pusha
cltd
cld
stos
jp
mov
nop
sub
ss
mov
push
in
push
movsl
pop
inc
aas
fs
ljmp
pop
mov
xor
insb
xlat
js
push
jb
bound
movsl
hlt
mov
add
pop
lahf
iret
shlb
addr16
adc
andb
scas
ljmp
and
xchg
popa
dec
cmp
xor
mov
fnstcw
stos
ja
orl
add
aas
push
jmp
xchg
dec
xchg
shlb
adc
push
xor
push
lods
orl
insl
ds
xor
pop
cmp
push
jns
test
iret
push
stc
adc
mov
andl
repnz
lods
dec
sub
mov
fnstcw
insl
mov
or
and
pop
lods
jae,pt
leave
mov
jae
xorl
lods
sti
dec
xor
test
lods
xor
repz
lock
das
inc
cmp
push
scas
sub
icebp
das
xchg
or
inc
xlat
jle
pop
addb
clc
pop
out
cmp
fnstsw
dec
test
or
adcl
test
popf
sub
cmp
enter
sub
jg
adc
jg
mov
add
or
and
loopne
lods
inc
push
incb
mov
popf
jnp
inc
aam
lods
sub
mov
movsl
shlb
xchg
mov
pushf
add
inc
sbb
lret
xor
or
test
xchg
fsubs
mov
test
repz
daa
push
lahf
inc
xchg
fisttps
subl
sbb
and
mov
mov
lret
arpl
sahf
adc
pop
ret
test
arpl
jg
sbb
jmp
mov
sub
out
or
dec
inc
sbb
add
lods
enter
bnd
lods
adc
call
js
bound
sub
and
jno
push
pop
inc
pop
sarb
lods
pop
push
lds
movsb
imul
outsb
and
rorb
adc
ret
out
sbb
ret
jge
popa
cltd
inc
mov
pop
lcall
mov
test
insb
lods
cmpsl
mov
fcomp
mov
adc
mov
ds
pop
xor
xchg
std
mov
push
mov
xor
mov
fidivrl
cld
sub
in
mov
jno
sub
xchg
lcall
aaa
jae
push
pop
je
into
sbb
jae
dec
push
lods
out
cmp
rorl
out
mov
das
mov
pop
out
and
mov
inc
lahf
fcomp
outsl
std
sbb
jl
xchg
adc
inc
into
lahf
push
mov
in
daa
adc
loop
gs
shlb
adc
mov
nop
sub
add
inc
xor
movsl
and
sub
mov
test
nop
push
xor
clc
dec
inc
or
push
stos
and
xchg
jecxz
testb
shlb
mov
xlat
mov
in
push
push
pop
jecxz
scas
rorb
aaa
jae
pop
jne
mov
mov
cmp
mov
frstor
inc
sahf
jo
inc
pop
dec
adc
ds
mov
jmp
lahf
cmp
je
pop
fildl
jb
pop
inc
pop
inc
pop
js
add
ret
cmc
out
loopne
xchg
int3
aam
mov
ret
inc
cmc
into
sti
ljmp
and
add
sbb
jno
in
cmp
mov
xor
out
enter
shll
mov
ret
mov
sub
sbb
xor
xor
inc
dec
pop
sarb
push
push
mov
push
jle
inc
insl
xchg
in
roll
fdivr
mull
adc
cmpsb
inc
xchg
addb
push
add
es
out
mov
stos
mov
sub
test
mov
jmp
imul
mov
aad
cmp
cmp
jns
lock
push
int3
jae
sbb
push
push
sub
js
int3
ss
or
mov
push
cmpsb
sbb
cmp
cmp
xchg
enter
jnp
ds
std
adc
and
popf
mov
lcall
jge
cmp
in
xchg
je
out
in
xor
je
pop
cs
fistps
mov
cmp
jbe
into
ret
dec
enter
sub
loop
lock
jb
lret
sahf
cmp
ljmp
pushf
dec
mov
jg
stos
imulb
xor
inc
ja
ror
lahf
inc
xchg
jmp
jl
movsb
pusha
pop
out
inc
add
sub
xchg
xchg
xchg
jge
test
cmp
pop
sub
mov
leave
les
jb
mov
subb
push
subl
mov
push
icebp
inc
lock
jge
sbbl
int
and
dec
jp
faddp
movsb
jo
mov
sbb
mov
add
push
fwait
jnp
stos
scas
add
out
shrl
repnz
fmul
jno
mov
pop
mov
cmc
sub
xor
add
or
xor
insl
insb
outsl
mov
cmp
movsl
test
xchg
out
into
or
xchg
jo
sahf
or
cmp
push
out
pop
sub
ja
or
push
push
xchg
and
test
xor
mov
cltd
gs
fst
dec
test
iret
sub
dec
fistps
inc
ds
xor
in
mov
adc
sahf
pop
fmul
jbe
jmp
lret
or
in
xlat
mov
cli
adc
fldt
pop
jmp
inc
push
xor
decb
xchg
fwait
cmpb
loope
sub
pop
pop
lret
fcmovnb
aas
mov
push
sar
rolb
bswap
pushf
fsubp
inc
in
test
xchg
inc
xchg
ret
inc
and
jecxz
mov
bound
sbb
out
xor
mov
std
in
repz
pop
dec
sbb
insb
imul
inc
sbb
sub
pop
push
sti
fstl
dec
fstpl
and
sbb
sbb
gs
daa
mov
mov
dec
mov
imul
dec
loopne
mov
insl
adc
test
sbbl
repnz
mov
jbe
ljmp
xorb
out
jp
leave
movsl
into
movsl
cmp
inc
daa
in
test
testl
inc
dec
arpl
stos
mov
cmp
and
cmpsb
out
fs
mov
adc
jg
cmpsl
xor
test
aam
mov
nop
jno
in
xchg
outsb
xchg
rolb
sbb
divb
cmp
jbe
jb
ja
pop
adc
adcb
push
lcall
pop
dec
inc
jl
add
inc
mov
mov
stos
cltd
xchg
stos
and
push
sub
jle
jle
xor
shlb
sarb
ficoms
sbb
add
jmp
rcll
push
mov
imul
addr16
mov
dec
mov
gs
adc
jns
jae
icebp
in
enter
mov
sub
lods
add
in
and
icebp
xor
sub
aaa
cmp
dec
jecxz
mov
ret
cmpsl
xor
sahf
push
je
or
rcll
xchg
sarb
stos
loopne
ret
pop
xlat
imul
jmp
out
mov
jge
fnstsw
jb
aam
pop
in
push
and
inc
add
ljmp
sbb
mov
call
mov
mov
sti
pop
test
imul
jne
mov
adc
cli
mov
dec
adc
mov
pushf
or
jns
and
adc
adc
popa
or
hlt
or
mov
lds
sub
sub
nop
pop
or
pop
xor
loope
and
std
pop
cmp
jno
adc
test
jns
aas
and
cs
fwait
mov
cmpb
ret
jp
xchg
mov
add
mov
sbb
or
pop
lock
pop
lcall
je,pn
sub
inc
clc
aas
mov
jmp
popf
rcll
mov
and
and
sub
int3
lods
mov
mov
sub
cltd
and
pushf
ds
divb
xor
or
add
sub
jno
out
jo
nop
je
ss
int
dec
xchg
cmp
repz
loope
fistl
mov
add
add
sub
xchg
cmp
cli
xor
ret
out
push
jae
sbb
jmp
dec
fistpl
mov
mov
outsl
sbb
int3
jo
mov
or
shl
pop
imul
rcl
jbe
push
push
rol
xchg
pavgb
arpl
jmp
jnp
sti
sbb
jmp
adc
repnz
je
push
sub
lods
add
jge
pusha
add
pop
xchg
xor
add
mov
ret
dec
cmpsl
mov
scas
or
fcoms
pop
xchg
pop
mov
lcall
xchg
push
mov
pusha
cld
xchg
xor
mov
aam
scas
mov
std
mov
mov
sar
pusha
adc
push
or
shlb
mov
add
pop
and
inc
push
imul
lahf
in
dec
or
rcr
addb
xchg
jnp
mov
jmp
push
mov
pop
cld
pop
cmp
mov
mov
hlt
pushf
add
dec
sub
pop
mov
or
push
nop
add
cmp
and
ljmp
mov
dec
mov
lret
push
mov
out
popa
xor
nop
arpl
icebp
shlb
lods
inc
inc
cltd
sti
out
je
push
aaa
loopne
add
sbb
outsb
out
in
stos
filds
dec
dec
dec
iret
rolb
xor
dec
push
jg
cli
js
bound
sbb
arpl
sar
dec
xor
in
cmc
shrb
cmc
cmc
add
mov
add
test
jb
stc
aas
subl
jmp
test
xchg
ret
nop
mov
orl
iret
pushf
rcrb
lock
mov
movsl
cli
sbb
adc
mov
lret
aas
push
xor
stc
xchg
mov
add
fbld
add
mulb
insl
addr16
jle
cmp
sub
cmpsb
pop
add
cmc
in
test
les
iret
jnp
lods
jmp
cwtl
mov
call
out
cmp
mov
mov
out
sbbl
fcomps
xchg
mov
pop
mov
jbe
push
out
and
sub
mov
out
cmp
je
sub
dec
xor
mov
popf
pop
add
addr16
sbb
cwtl
inc
jp
sub
push
pop
add
ret
cwtl
scas
ret
shrl
shll
mov
and
loope
and
cmp
outsb
addl
repnz
jns
sarl
inc
cmp
out
test
adc
jne
in
mov
push
jge
iret
test
jp
cmpsb
test
mov
pop
insl
nop
fldenv
push
mov
jl
fnstsw
pop
dec
cmp
push
subl
xlat
dec
cwtl
adc
outsb
xlat
push
mov
into
push
sti
sbb
rol
outsl
int3
or
imul
dec
ss
add
repnz
add
iret
jl
pop
cmc
inc
pop
pop
inc
repz
add
mov
dec
add
scas
incl
addb
mov
rcrl
sti
repz
xchg
mov
cs
test
and
ljmp
test
and
mov
sbb
int
comiss
daa
mov
dec
xor
xor
shrb
ret
in
or
sub
clc
out
pop
lret
xchg
sahf
mov
popf
and
sub
dec
xchg
out
rolb
pop
xlat
insb
aas
int
in
ret
pop
jle
outsb
loopne
push
ret
jp
mov
jb
out
lret
jne
fsubl
clc
sbb
push
pop
push
jno
add
cwtl
jp
inc
and
ljmp
pushw
adc
sbb
or
xchg
and
mov
clc
and
pop
pop
call
cmpsl
dec
cmpsl
dec
js
cmp
in
ss
xchg
push
and
bound
clc
mov
xor
pop
pop
fsubr
sub
mov
stc
sub
jmp
inc
mov
aaa
popf
out
enter
lahf
mov
stos
sbbb
adc
cwtl
test
xor
roll
sub
pop
sub
sbb
jnp
fisttps
ja
pop
jmp
xor
loop
scas
mov
adc
test
inc
aam
stos
test
popa
push
mov
dec
hlt
jle
adc
les
add
and
pushl
das
adc
cmpsl
pop
and
out
dec
mov
cli
cltd
je
data16
in
in
daa
stc
jo
inc
push
add
outsb
cld
pushf
xchg
hlt
xchg
fmull
leave
daa
mov
mov
xchg
add
pop
data16
repnz
pusha
les
rcll
fs
pop
mov
cmp
in
inc
xor
mov
jbe
pop
lcall
jnp
lods
adc
and
sbb
dec
sbb
push
rcll
mov
add
and
in
mov
fcoms
mov
ja
xchg
dec
push
int
xor
scas
rcrb
pop
movsb
pop
dec
dec
dec
jge
adc
inc
xor
jp
pop
icebp
rolb
push
nop
jmp
les
arpl
jp
cmpsb
je
int3
push
popa
jp
sub
pushf
int3
push
add
ret
pop
sub
rclb
les
mov
pop
jp
mov
jne
push
dec
hlt
fcomp
add
fsubrs
sub
xchg
sbb
dec
jecxz
jae
test
xchg
int3
and
stc
cmpsl
cltd
or
cs
sti
cwtl
sbbl
xchg
push
negb
mov
int
lcall
jmp
sub
sub
dec
mov
in
cmp
aas
call
lods
mov
shlb
jg
loope
mov
sub
and
push
adc
popf
sbb
xchg
out
dec
sub
jne
dec
inc
adc
add
pop
pop
and
int
adc
rol
add
pop
and
jne
enter
stc
aad
adc
push
mov
jg
mov
jo
outsl
repnz
addr16
data16
lds
push
out
add
cmpl
pop
jmp
mov
scas
repz
add
pop
push
nop
adc
mov
rorl
mov
or
pushf
repnz
out
out
loope
outsb
sub
ss
push
jge
int3
sub
sbb
xorl
int3
loopne
and
int3
push
pop
in
pop
divl
aam
jne
das
stc
and
scas
and
fucomi
push
cltd
mov
xchg
pop
mov
push
js
out
or
fs
jmp
inc
sbb
int3
data16
xchg
add
out
sbb
sbb
xchg
dec
mov
pop
icebp
mov
fwait
mov
jbe
movsbl
imul
jns
push
loopne
loopne
inc
js
push
xchg
and
mov
mov
mov
and
rcrl
sbb
les
les
cli
xlat
ds
cli
xchg
add
dec
mov
xchg
call
movsb
dec
cmp
popf
sub
add
or
push
scas
jae
scas
ljmp
pop
in
stc
fmuls
cltd
push
inc
mov
or
xor
xchg
and
push
mov
push
adc
insb
sarb
add
cwtl
and
ret
and
lret
popf
sbb
and
hlt
mov
pushf
imul
cs
jmp
push
cmc
push
insb
cmp
dec
test
shl
dec
push
xor
sti
push
ja
lret
mov
mov
and
in
fisubrl
mov
sbb
inc
cmpb
cwtl
mov
push
scas
push
cmpsb
add
push
or
imul
or
fmul
lods
sbb
sbb
inc
test
addb
xor
jo
sub
add
sahf
sbb
jnp
outsb
jno
inc
lock
and
push
add
jl
loopne
xor
xchg
out
in
adc
xchg
xor
jle
jp
popl
xor
or
add
imul
and
fucomp
or
sbb
xchg
call
pop
std
andb
xchg
pop
xchg
repnz
sbb
xor
jo
mov
out
mov
nop
rcrb
add
xchg
inc
mov
xor
push
cmp
fisttpll
mov
pop
gs
mov
bound
pop
sbb
mov
in
jnp
rorl
test
arpl
cld
hlt
mov
movsb
mov
push
shl
add
mov
rolb
mov
mov
add
jg
bound
fildl
mov
mov
jecxz
aas
adc
iret
lods
jbe
pop
mov
mov
lcall
loope
inc
test
jmp
sub
xchg
sbb
push
inc
sub
jo
nop
fwait
xor
aam
xchg
inc
add
imull
pop
nop
dec
push
imul
adc
push
push
gs
pop
sub
xor
jl
xchg
cmp
in
lock
pushf
daa
push
push
sbb
adc
inc
cmpsb
mov
push
fs
imull
sub
outsb
loop
push
inc
pop
sub
and
cmp
stos
sbb
xchg
mov
test
mov
jbe
movsb
xchg
cltd
dec
cs
out
push
mov
mov
jns
push
jns
aam
xchg
mov
adc
aad
int3
xchg
pop
in
ja
push
xchg
roll
jmp
jge
fs
push
movsb
sbb
adc
jo
enter
inc
jp
mov
jmp
adc
sbb
xorl
lods
mov
int
divb
xchg
movsl
sti
hlt
mov
jae
push
cmc
push
daa
pop
cmp
xor
mov
cld
push
sbb
aad
cwtl
pop
push
mov
mov
dec
mov
pop
lahf
sub
les
mov
add
sbb
insb
roll
fmul
adcb
jg
mov
and
nop
xchg
jecxz
adc
add
lods
sbb
lret
fucomi
ja
xchg
cmp
lods
mov
sub
out
loopne
repnz
jg
sbb
mov
pxor
inc
mov
in
add
ret
pop
cwtl
je
fs
cmp
mulb
arpl
repz
pusha
lock
pop
pop
in
in
std
pop
mov
pop
iret
in
mov
insl
ret
imul
mov
in
les
aaa
push
adc
xor
cmc
fwait
mov
sub
xor
mov
or
outsl
repnz
into
sbbl
add
iret
mov
fidivs
adc
arpl
jge
jmp
outsb
xlat
aas
lret
les
cmp
inc
mov
inc
push
nop
cwtl
jb
scas
insl
shlb
inc
or
insb
imul
mov
jle
ret
lret
pop
dec
pusha
orl
out
jge
in
cmp
arpl
add
mov
mov
int
clc
jno
jae
imul
unpckhps
adc
jmp
lahf
out
jge
mov
jp
jp
mov
repz
inc
xor
jmp
jbe
xor
pop
mov
and
jp
dec
mov
lcall
inc
lahf
cs
in
into
dec
je
out
je
ljmp
into
insl
hlt
xlat
push
sbb
push
scas
add
ds
loop
popf
popa
xlat
sbb
into
push
cmpsb
or
fwait
pop
in
inc
iret
pop
jecxz
gs
call
mov
call
pop
xchg
push
add
and
std
push
rol
push
cmp
or
xchg
xor
rcrl
cld
fisttpll
ds
shl
push
dec
ret
adc
sbb
or
xorl
pop
test
fs
or
rorb
in
inc
iret
mov
xor
test
pop
mov
jnp
jge
mov
nop
pop
adc
orb
fldenv
mov
stc
push
es
or
pushf
fmull
push
mov
add
pop
stos
sbb
push
jle
cmpsl
xchg
sbb
push
mov
stos
in
cmp
cmpsb
ds
sbb
push
insl
adc
call
mov
decl
sahf
jle
cmpsl
adc
sbb
inc
cwtl
pop
push
adc
insb
mov
aas
aam
mov
andl
jo
or
insl
dec
pop
push
pop
scas
jmp
out
and
jecxz
fcmovnu
jle
mov
push
inc
mov
cmpsb
cmp
imul
orb
mov
in
add
xchg
cmp
inc
cpuid
movsb
loopne
imul
push
add
mov
mov
and
dec
jp
cltd
std
xchg
test
push
jg
xchg
daa
add
jb
jne
in
xor
lahf
das
fs
sbb
test
leave
pusha
inc
push
and
aad
ljmp
mov
xlat
mov
sub
xor
xchg
xor
popa
dec
stc
sbb
cmp
loopne
leave
pop
lock
jae
js
aas
int3
dec
js
sbb
mov
pop
or
and
jnp
push
sbb
and
sbb
shr
scas
xor
mov
inc
lcall
les
test
ret
popf
push
subl
cmpsb
jbe
pop
cmp
mov
and
mov
mov
lcall
adc
test
cmp
popa
cwtl
or
mov
ss
push
in
jnp
sarl
aas
frstor
jno
xchg
inc
lea
loope
enter
in
js
inc
xor
sub
pop
popf
and
movsb
jmp
pop
shlb
mov
push
cmp
and
ja
push
lret
cld
andb
push
in
hlt
scas
jno
jae
shll
push
mov
add
out
test
jno
std
aad
lahf
js
imul
mov
push
inc
jno
ja
dec
es
dec
lret
out
mov
mov
inc
jl
add
xchg
push
insl
dec
enter
sub
mov
mov
mov
push
dec
sbb
mov
push
scas
inc
dec
daa
jmp
or
dec
lods
and
mov
daa
call
sub
imul
mov
cmpl
xlat
aad
shlb
xchg
hlt
push
push
dec
xor
aas
es
icebp
push
add
adc
mov
push
stc
lret
pop
int3
mov
repz
lcall
cmpsb
jbe
dec
mov
jge
add
pop
sahf
loopne
cmp
lods
mov
or
in
fsub
push
cmpsl
cmp
aaa
test
push
pusha
xor
adc
sti
iret
int
jno
aam
or
lock
mov
jns
dec
adc
mov
lret
jo
mov
sbb
inc
popf
dec
js
jmp
fists
cmpsb
adc
add
bound
jae
pop
lods
je
js
add
pusha
mov
xchg
dec
inc
dec
imul
or
push
mov
inc
flds
xor
ret
push
pop
mov
cmp
mov
lods
fdivs
jnp
mov
cmp
inc
jmp
mov
push
xchg
test
ret
sbb
inc
std
pop
pop
inc
mov
and
inc
jg
scas
sub
jl
push
or
inc
cmp
push
sbb
jae
pop
cmp
cmp
inc
aad
jbe
fsubs
int3
push
xor
sub
bnd
jae
add
call
jmp
jecxz
adc
sbb
inc
mov
mov
sub
in
loopne
mov
scas
lahf
fwait
ljmp
mov
sub
lret
ja
add
sub
mov
lds
mov
fsubr
xor
and
pop
xchg
sbb
and
sbb
movsl
xchg
mov
arpl
sti
push
mov
push
les
bound
pop
ret
aam
loopne
cli
mov
lret
sub
sbb
jle
dec
fstp
fldt
adc
push
jno
data16
fs
test
inc
xchg
mov
xchg
xor
sub
add
int3
xor
cmp
dec
addr16
aam
data16
mov
sarl
or
nop
mov
lret
insb
cli
imul
rol
movq
repz
into
mov
mov
mov
dec
mov
jb
fsub
jns
outsb
popa
lock
insl
adc
ficomps
in
movsl
pusha
adc
aad
test
xchg
mov
sub
lahf
je
inc
push
adc
mov
jge
mov
ficoms
aad
xor
pop
decb
adc
push
dec
ja
lods
ja
mov
popa
mov
orl
xor
stc
sti
xor
lds
mov
negb
ficomps
and
xor
cmc
xchg
repz
or
xchg
mov
and
inc
sbb
mov
xchg
daa
enter
mov
xchg
jno
popf
jno
sbb
mov
lcall
mov
jbe
or
mov
xchg
cmpsl
xchg
sbb
test
mov
lret
cld
ror
fdiv
mov
inc
insl
les
xor
jne
xor
stos
scas
fcomi
sahf
dec
and
clc
data16
pop
cmpsb
mov
in
test
pop
data16
lret
enter
je
and
test
jb
jae
adc
lea
add
stc
and
mov
jp
xchg
cmp
daa
outsb
nop
xchg
xchg
jb
push
shl
jo
mov
in
clc
cs
inc
fsubs
punpckldq
push
nop
sbb
jne
adc
cmp
inc
adc
call
lcall
hlt
rcl
inc
mov
mov
add
cmp
gs
dec
xchg
mov
fcmove
insl
sbbl
shrl
add
add
sub
and
fistl
mov
fdiv
popf
jns
and
mov
jno
inc
cmc
in
cmc
push
shl
mov
jae
sbb
dec
cs
jmp
jg
jge
mov
inc
sbb
cmp
rclb
cmpsb
pop
mov
imul
mov
or
es
test
loope
outsl
ljmp
mov
leave
sbb
mov
pop
cld
mov
cmc
insb
aaa
or
das
push
add
cvttps2pi
stos
pop
mov
and
cwtl
std
outsl
jecxz
test
lea
bound
pop
out
push
sbb
mov
jne
dec
mov
jg
lods
jmp
dec
bound
inc
lods
add
mov
jl
insl
sub
push
cmpsl
add
fcomps
in
testl
inc
mov
mov
push
aaa
lcall
and
and
mov
sbb
add
pop
dec
sub
push
in
push
xor
or
dec
xchg
stc
or
xchg
push
scas
jne
jo
out
cmp
inc
xlat
sub
sbb
test
xor
subps
mov
push
ret
pushf
js
or
cmp
mov
dec
cmpb
movsl
jge
sbb
or
fsubs
xchg
mov
pop
or
cmp
fisttpll
dec
xor
xchg
jg
jnp
movsb
fisttps
data16
mov
vminsd
ja
xor
or
adc
or
pop
dec
xchg
jl
rcl
sbbl
mov
sbb
ret
cltd
addr16
sub
faddp
mov
fmuls
push
xchg
pop
push
cwtd
inc
int
push
jle
loopne
imul
clc
jecxz
xchg
aad
aas
jns
movsb
cmpsb
dec
sar
fs
mov
push
fsubrs
jno
sub
pushf
push
clc
fstps
jp
adc
test
js
aas
add
jne
movsl
imul
push
jl
pop
scas
mov
into
ret
dec
or
subl
jns
das
mov
mov
test
faddl
xor
jmp
arpl
rcrb
adcl
nop
and
stc
cld
pushf
jmp
inc
jne
xchg
out
seta
hlt
adc
adcb
mov
lods
lahf
jo
and
inc
js
xor
dec
mov
jl
jno
pusha
dec
adc
sti
xchg
rclb
mov
push
push
sbb
dec
push
int
push
adc
jbe
aas
push
fcmovnb
mov
mov
lods
pop
faddp
orb
test
inc
xor
xchg
in
into
sub
mov
xor
jne
jge
mov
mov
aas
pop
jge
dec
adc
loop
js
fisubs
aas
out
mov
int3
pop
push
das
pop
cmp
in
fs
dec
test
cwtl
std
inc
xchg
or
cmc
loopne
xor
adc
mov
xchg
not
or
push
test
sub
ljmp
iret
jl
xchg
mov
inc
orl
mov
mov
popa
ret
adc
add
inc
jnp
xchg
or
mov
pushf
mov
cs
pushf
out
mov
mov
and
xor
movsl
cmp
push
frstor
inc
repnz
into
sti
jno
pop
fimull
adc
or
cmpsl
and
mov
or
fistpl
cli
bound
pushf
inc
cmp
fistps
ja
lods
mov
insl
call
lahf
mov
xchg
dec
test
xor
mov
insl
aaa
xchg
mov
mov
sbb
and
mov
insb
daa
mov
push
fxch
cmp
push
mov
js
mov
addr16
arpl
sbb
test
test
jp
cmc
lods
shlb
fildll
sarb
mov
scas
test
sub
push
sti
push
mov
mov
pop
sti
je
movsb
dec
into
mov
lahf
mov
dec
sbb
pop
jne
cld
shll
jp
sub
xchg
pop
sbbl
scas
sbb
dec
fs
sbb
icebp
cltd
mov
push
lret
cld
jo
xlat
popf
idivl
dec
pop
pushf
mov
clc
push
les
xor
pop
nop
dec
inc
cmpsl
stc
enter
repnz
jbe
fsts
je
dec
lods
stos
popf
movsl
imul
dec
test
pop
in
add
xlat
test
arpl
movsl
or
mov
push
or
ret
int
cmpsl
shr
xor
pop
sar
in
js
push
cli
pop
repz
pop
and
sub
loope
outsl
pop
push
sub
adc
adc
shrb
add
mov
cmp
and
inc
enter
data16
cmpsb
push
xchg
rol
imul
or
sbb
or
and
dec
and
stc
nop
dec
cmp
dec
cli
mov
push
rcl
outsl
test
cltd
lds
jns
inc
popa
ss
and
aam
xchg
fmuls
jne
cli
inc
mov
stos
push
cmpsb
pop
jp
rorl
xchg
xchg
stos
cmp
int
rcrb
loopne
adc
cli
push
popf
testl
ja
or
push
sbb
fcompl
aas
out
or
cmpsl
mov
mov
sbb
hlt
mov
add
ds
hlt
mov
jg
test
xor
dec
cld
into
sbb
inc
xor
daa
lcall
inc
loopne
sahf
jb
aam
sub
jl
sahf
ret
and
aas
push
cmp
popa
inc
outsb
ljmp
sub
mov
jl
aas
xchg
mov
xor
fnsave
mov
cmc
cwtl
les
out
jmp
lcall
mov
mov
out
mov
stos
cmp
cmpsb
aaa
icebp
sbb
sbb
dec
xchg
cmp
add
rcrb
cmc
rcrb
je
inc
jmp
imul
gs
je
mov
mov
push
lea
mov
orb
shrl
add
int3
stos
inc
push
pushf
aas
jae
pop
mov
pop
inc
push
add
and
and
lods
jg
rcr
loope
xchg
inc
or
insb
orl
dec
mov
testl
pop
xchg
rcl
cmpsl
je
loope
mov
mov
inc
pusha
and
insl
xchg
mov
movsb
mov
xchg
sbb
xchg
ret
in
jp
add
ja
out
fcmovbe
xchg
pop
and
mov
outsb
adc
ret
mov
jne
cmp
pop
add
sub
lret
push
mov
pop
push
mov
je
subb
mov
fistl
dec
in
push
inc
adc
dec
dec
xor
clc
xor
push
cmp
in
loope
lds
lret
movsl
sbb
pusha
mov
mov
inc
adc
fs
cmp
or
inc
add
sbb
xchg
testb
mov
mov
push
jl
and
ds
addr16
popf
or
and
xchg
fwait
xchg
imul
mov
jmp
les
sbb
xchg
fs
or
cmp
roll
das
mov
fs
mov
jp
mov
int
mov
cmp
repz
popl
lea
sti
lods
insb
adcb
in
pop
mov
sbb
leave
push
mov
jl
sbb
jbe
stc
aad
push
out
mov
shll
rcr
mov
sbb
mov
jg
mov
sbb
add
icebp
scas
push
and
add
jbe
adc
mov
and
js
sub
gs
cmp
das
lret
jo
and
cmp
shl
jg
push
pop
add
inc
into
insb
xor
in
push
sub
jae
inc
ret
scas
aas
icebp
fldl
xchg
pop
movsb
sub
or
or
mov
xlat
dec
mov
cwtl
into
sti
daa
out
das
jp
and
adc
push
pop
cmpsb
cmpsl
mov
or
mov
mov
pusha
add
ja
or
outsl
xlat
sub
or
jg
pop
sbb
stos
mov
add
inc
ffreep
mov
aam
cld
mov
test
mov
cmp
jmp
fwait
shlb
in
dec
pop
iret
insb
shl
fcoms
mov
call
in
lahf
xchg
test
sbb
inc
push
xchg
mov
rcrb
enter
push
outsl
xlat
pushf
pavgb
test
mov
fdivs
inc
je
mov
daa
push
adc
jae
inc
aas
aas
icebp
shl
aaa
rcrb
push
xchg
adc
lods
scas
in
pop
xchg
adc
mov
int3
mov
jno
mov
or
sahf
loope
xlat
pusha
cmp
add
jns
mov
mov
idiv
bound
mov
jge
pop
out
lds
jo
push
leave
cltd
fldenv
icebp
mov
lret
cmpsl
out
inc
adc
mov
addl
mov
and
xlat
sub
ficompl
jns
jb
dec
cltd
cmp
ja
push
cld
mov
std
sub
dec
inc
mov
xchg
pop
push
push
in
mov
sub
inc
cs
jae
pop
push
mov
or
add
cwtl
scas
aas
arpl
xchg
mov
daa
in
mov
pushl
and
push
sub
adc
and
lods
mov
out
jno
cmpsb
jno
xchg
cmp
popa
sti
decb
mov
jns
and
and
xchg
xchg
out
inc
filds
mov
pop
jbe
mov
in
jne
xchg
stos
mov
cmp
insb
pop
popa
ret
bound
xchg
das
nop
jns
mov
adc
jno
sub
scas
pusha
outsl
or
mov
filds
dec
clc
adc
jecxz
push
xchg
or
xchg
sahf
decl
jnp
pop
out
fisttpll
or
mov
ja
mov
jge
cmp
movsb
fiaddl
ror
shlb
int
push
xchg
hlt
pop
lods
pop
jns
xor
pusha
cmpsb
daa
test
lahf
es
sti
and
lods
cli
js
and
mov
mov
dec
pop
pop
movsb
outsb
xor
push
push
icebp
das
push
adc
addr16
adc
cmp
fistl
mov
xor
cmp
and
imul
pop
sub
push
in
dec
inc
out
xorl
xlat
fistpl
jb
inc
frstpm(287
jl
dec
jmp
or
jae
insl
mov
cwtl
adc
test
pop
sbb
int3
add
jae
adc
adc
or
icebp
lea
rolb
mov
mov
mov
add
push
push
or
roll
xchg
push
adc
jno
pop
insl
sar
ret
aas
mov
jbe
xorb
fdivrs
ret
cs
fwait
aad
jle
xor
shr
out
pushf
push
sub
xor
and
inc
scas
out
bound
loop
jle
sub
inc
pop
mov
add
hlt
ss
ret
out
pop
adc
or
xchg
ret
mov
push
testb
inc
push
int3
xor
xor
xor
fcoml
in
add
dec
mov
or
push
testb
cmp
js
cmp
arpl
sub
dec
mulb
ss
push
and
es
or
adc
leave
jnp
arpl
lahf
mov
sti
int
lods
fdivrs
push
jb
arpl
repnz
jge
test
in
das
adcb
sub
push
dec
arpl
add
iret
inc
cmp
gs
pop
jae
push
mov
sar
pop
mov
test
lock
add
arpl
mov
in
and
loopne
je
mov
aaa
xchg
lahf
pop
cltd
fnsave
and
stos
imul
sbb
outsb
mov
push
pop
stc
and
stos
sbb
ss
xchg
dec
cwtl
cld
scas
adc
xchg
jg
sub
inc
jns
adc
push
sub
js
dec
jge
jnp
dec
cmc
bnd
cmp
int
je
rclb
rcrl
movsl
sub
aaa
lret
jmp
mov
call
cmp
jo
clc
fcmovnb
loop
xor
repz
mov
push
mov
jmp
jle
and
loop
cmp
dec
xchg
pop
mull
repz
fistpll
mov
mov
iret
adc
daa
mov
xchg
xor
jl
jle
xchg
pushf
add
xchg
jno
add
call
adcl
xor
cmp
fstpl
stos
dec
adc
in
int3
inc
call
sub
push
mov
ds
mov
jmp
jmp
mov
mov
add
or
xor
jge
mov
xor
negl
inc
xor
mov
pushf
dec
lret
jp
xlat
dec
ss
sbbb
test
or
scas
inc
out
cmpsl
cmpsb
cmp
in
stc
inc
mov
fsubrl
adc
mov
and
xchg
xor
rclb
jl
sbbb
daa
loope
push
inc
jmp
add
movsl
stc
inc
add
jbe
jnp
xor
sbb
sti
jns
out
push
movsb
adc
push
pop
push
pop
and
inc
adc
mov
loope
out
mov
mov
push
or
and
std
popf
lcall
jg
cli
lods
mov
sti
pusha
jns
repnz
sarb
add
call
rcrl
and
jle
sub
loopne
mov
popf
call
and
mov
sbb
push
or
dec
jo
aas
stc
jb
inc
xor
mov
out
jmp
cltd
mov
xchg
scas
mov
ret
idiv
adc
ret
in
roll
out
or
mov
jle
enter
xor
daa
and
clc
fidivl
cmp
scas
jbe
cmp
xchg
rol
xchg
icebp
stc
sbb
daa
jns
pop
mov
cli
addr16
pop
das
and
pop
out
jb
mov
imulb
push
je
gs
jae
lods
cmp
call
sbb
pop
push
jno
dec
popf
xor
loop
sbb
inc
xchg
push
std
and
dec
dec
and
xchg
sbb
and
and
loope
in
mov
icebp
je
add
sub
rcrl
in
xchg
push
popa
xchg
orb
push
xchg
adc
cmc
clc
mov
dec
sbb
repz
call
addr16
jno
outsb
sbb
mov
adc
fldl
adc
std
pushf
in
inc
xchg
and
loop
rorl
mov
xor
sub
enter
aaa
mov
push
pop
jae
dec
fdivs
stc
sbb
or
mov
nop
push
lds
and
mov
xor
xlat
pop
fimuls
lret
xchg
repz
es
lret
stos
dec
ja
popa
dec
pushf
dec
les
add
sub
test
xor
cmpsb
lret
sub
pop
cmp
xor
mov
out
loope
inc
fs
mov
mov
icebp
cltd
pop
jns
rclb
add
cmc
mov
push
cwtl
aaa
xlat
add
inc
jmp
std
lods
push
inc
lods
add
mov
out
fld
mov
jmp
outsb
ja
xchg
push
mov
into
movsl
xchg
and
and
lahf
pop
mov
mov
jl
jno
test
pop
mov
adc
dec
movsl
xchg
sbb
xor
sub
pusha
mov
ljmp
shll
nop
scas
cld
pop
or
pop
mov
mov
mov
scas
sbb
call
xor
iret
movsb
push
sbb
ja
sbb
rorb
stos
icebp
xor
aas
cmp
mov
outsl
jmp
jge
xorb
mov
pop
daa
push
push
cmp
mov
mov
das
adc
and
into
cld
int
cs
jge
lret
cmc
leave
mov
test
cld
sahf
cmp
jnp
hlt
imul
cmp
push
adc
insb
xor
inc
out
adc
add
cmpb
repz
add
inc
pop
loope
dec
jp
shrl
lock
push
imul
mov
xchg
add
xchg
or
pop
sbb
lds
outsb
out
lcall
push
arpl
rcll
push
xchg
inc
or
loopne
clc
nop
lcall
xor
lcall
imul
push
imul
push
ljmp
mov
loopne
leave
mov
adc
xor
mov
jbe
fsubr
imul
nop
in
xchg
lds
add
xchg
divb
or
mov
mov
lahf
idiv
mov
jns
push
lahf
ljmp
hlt
inc
aad
in
cs
arpl
cli
call
test
xlat
add
jo
lret
or
lock
fldt
xor
sarb
data16
ljmp
mov
test
mov
dec
dec
lds
push
cmp
int
repz
lods
cwtl
stos
and
cmpsl
nop
es
add
mov
pop
mov
mov
sbb
lahf
rcrl
cmc
mov
mov
adc
jns
pop
pop
mov
iret
xor
xchg
inc
pop
inc
lock
loope
out
jp
sub
lahf
xchg
pop
sub
pop
dec
fisttps
cmp
lea
icebp
jb
mov
jne
cmp
jge
pop
icebp
ret
lcall
xchg
sbb
fidivl
dec
call
pop
stos
jbe
push
pushl
ss
retw
loop
jl
enter
ret
shlb
dec
icebp
mov
mov
aaa
xchg
sub
xlat
pop
add
fsts
pop
jbe
movsb
xchg
push
call
shlb
repz
roll
sub
inc
dec
xlat
jmp
lds
cwtl
out
xor
mov
xchg
sub
in
shrb
loope
xlat
sbb
pop
hlt
in
jmp
rcll
and
adc
fmulp
xchg
sub
in
mov
out
daa
rcrb
aad
repz
repz
icebp
repnz
insb
adc
mov
cltd
push
jl
pop
lock
out
in
xor
and
pop
shll
mov
mov
insl
add
repnz
cmpsb
jo
xchg
jb
xchg
es
jg
fwait
jg
sarb
ret
pushf
mov
or
pop
add
lret
cltd
sub
adc
mov
xchg
push
pmaddwd
jecxz
cs
gs
mov
push
xchg
mov
sti
mov
fsubs
mov
scas
jae
sub
xor
xlat
hlt
inc
out
lcall
xorb
pop
add
js
lds
and
add
in
ja
push
jecxz,pn
cmp
fisttps
ljmp
js
sbbl
inc
rorb
mov
ret
sub
adc
in
push
test
repnz
mov
xor
xchg
aaa
mov
jg
push
fnstcw
jno
or
aam
xor
arpl
adc
and
jecxz
aas
add
pshufw
or
addr16
jno
cli
pop
adc
inc
or
sub
jp
hlt
mov
in
sbb
mov
adc
mov
nop
es
mov
out
sub
pusha
aas
ljmp
arpl
ss
and
push
dec
pop
adc
jbe
add
mov
jno
mov
cmpsl
imulb
roll
scas
out
pusha
adc
ljmp
sti
lds
into
pushf
push
fdivrp
movsl
xlat
ret
xchg
add
cmc
inc
sub
lds
addb
inc
aam
int
pop
stos
cmp
mulb
movsl
loop
ja
adc
clc
push
xchg
out
sbb
out
push
mov
pop
lea
loope
inc
popa
cmpb
clc
icebp
and
inc
xor
lods
jecxz
inc
movsb
je
xchg
push
pop
in
fisttps
int
pop
cmp
jmp
xchg
or
pop
push
les
push
out
dec
sbb
add
mov
clflush
sub
pop
nop
add
lret
xchg
xor
mov
popa
pushf
mov
jbe
repnz
mov
test
lret
pop
and
dec
lds
sti
push
pushf
xchg
sbb
push
xorl
sbb
popa
jae
cmpsl
or
sbb
jecxz
adc
std
leave
rclb
mov
push
stos
dec
mov
fsubrs
cltd
sub
adc
dec
dec
shll
inc
test
pushf
shrb
loop
xor
es
dec
dec
sbb
inc
fdiv
fiaddl
lds
jns
jne
inc
mov
loopne
push
loope
jno
movsl
stc
mov
sub
jg
aad
insl
xchg
insl
dec
rclb
call
idiv
jmp
jmp
pop
and
pop
or
jmp
pop
cmp
push
fisubrl
add
pop
cmc
rcll
jmp
xchg
into
and
enter
sar
movsl
int3
orl
call
outsb
push
dec
inc
jl
xor
pop
mov
cmp
cli
imul
lcall
negl
jle
or
sbb
dec
jle
xor
dec
int3
sbb
mov
mov
sbbl
rcrb
rcrb
and
xorl
loope
rcr
mov
mov
rorb
push
and
idiv
xor
adc
aam
aaa
stos
popa
sub
dec
subl
add
lahf
loopne
or
xor
xchg
xchg
mov
aad
gs
lock
push
ss
cmp
mov
inc
fisttpl
mov
jmp
insl
mov
xchg
aam
push
fstps
cmpsb
es
sbb
aas
lret
adc
nop
jge
dec
push
bound
sub
cmp
mov
xor
sbb
inc
fbld
dec
xchg
add
mov
mov
sub
out
mov
sub
dec
jnp
sbb
jb
push
mov
jae
enter
test
int
ror
pop
out
dec
sub
xchg
int3
dec
and
test
insb
into
and
out
test
push
ljmp
inc
int
pop
fldenv
xchg
jg
ja
movsl
lods
adc
dec
pushf
jle
push
movsl
je
dec
xchg
jne
mov
mov
mov
push
sarb
int3
push
fwait
mov
sarl
mov
jno
pop
rolb
push
ss
sbb
mov
insl
icebp
repz
pushl
bound
inc
js
cmp
orl
adc
sti
push
ret
ds
push
mov
enter
movl
leave
lahf
adc
jnp
mov
bnd
sbb
fisubl
pop
fadds
call
stos
fsubr
loopne
daa
lret
jnp
pop
shrb
repz
cwtl
adc
jbe
nop
call
int3
inc
test
mov
or
fbstp
xchg
mov
and
rclb
ss
add
xchg
or
stos
pop
push
repnz
adc
push
lcall
xchg
mov
dec
push
adc
push
fdivrs
adc
out
jle
inc
or
fwait
mov
cmp
or
int3
mov
out
sti
stos
out
push
lret
mov
lcall
xchg
lock
push
pop
repnz
movsl
dec
pop
icebp
imul
divb
mov
and
orb
out
rcrb
add
jne
xchg
outsb
aad
jmp
mov
aas
gs
push
jecxz
mov
jbe
test
or
inc
jg
popf
outsb
xchg
into
clc
loope
ja
aas
fsubrs
jb
push
adcb
cmc
lret
popa
mov
ret
pop
pop
xor
dec
or
inc
scas
dec
push
arpl
mov
pop
push
dec
xchg
add
movsb
out
in
cmovno
inc
mov
xchg
lock
jmp
pop
jb
mov
in
mov
cltd
mov
enter
std
lret
scas
movsb
dec
add
ds
push
mov
or
scas
mov
loope
out
je
mov
outsl
aam
mov
mov
or
fsubrl
xchg
int3
mov
sub
loop
cmp
xor
sub
sub
test
dec
sub
es
xchg
inc
xchg
data16
cmp
lahf
lret
insb
xchg
xchg
push
mov
mov
lock
outsb
aad
nop
jle,pt
fld
and
xchg
push
xor
jmp
stos
pusha
push
ja
je
jg
sbb
inc
cmp
xchg
icebp
adc
ret
adc
add
adc
pop
stc
jge
packssdw
and
enter
ret
adc
rol
repz
in
test
pop
pop
dec
mov
fisubrs
jmp
lock
jae
and
icebp
cmc
pop
iret
pushf
aas
inc
fldl
push
test
pop
jo
jno
cld
mov
out
loopne
lret
sbb
cmp
sub
jmp
lcall
pop
sbb
lods
bound
jo
jb
push
and
jl
into
clc
or
cld
addr16
data16
popf
mov
dec
cmpsl
and
mov
adc
xor
lret
pop
dec
adc
pusha
int3
leave
mov
and
inc
and
jb
jge
pop
inc
shrb
jbe
insb
cwtl
outsl
aam
test
loope
lods
addr16
and
incl
and
dec
cmp
lcall
xchg
xchg
sarl
lret
sbb
push
cmpsb
ficomps
adc
rcr
jns
or
mov
xchg
and
mov
mov
push
loopne
and
shlb
roll
mov
pop
cmc
pop
jge
mov
cld
xchg
xchg
mov
xlat
das
pop
pop
push
xchg
out
and
stos
jns
push
jmp
data16
pushf
das
cmp
lret
repz
mov
jmp
fcoml
mov
pop
lock
int3
sti
jecxz
push
fstp
mov
push
repnz
cmp
mov
or
jg
gs
inc
sub
push
scas
adc
xchg
pop
cmpsb
push
arpl
xor
xchg
ror
dec
xchg
jmp
add
push
lahf
mov
fprem1
cld
dec
cltd
stc
scas
lods
subl
dec
incb
arpl
push
add
jp
int3
shrb
inc
fsubs
mov
cmpsl
and
adc
jl
jge
and
or
popa
inc
mov
mov
sbb
add
push
in
jbe
and
push
push
and
ljmp
and
sub
out
sbbb
mov
xchg
dec
pop
xchg
int3
mov
cmp
iret
xor
mov
dec
pushf
mov
cmp
dec
and
mov
mov
jmp
mov
lret
push
hlt
fisttpl
adc
push
xor
jl
rclb
iret
enter
xorb
xchg
test
stos
pop
movsl
cld
inc
xchg
lock
outsb
imul
stc
xor
inc
xchg
adc
pop
jecxz
sbbl
mov
test
repnz
push
xchg
int
cmpsb
jg
popf
mov
stos
pop
xorl
lcall
mov
sbb
xchg
add
movhps
test
lret
sbb
push
in
inc
aas
adc
push
test
pushf
jp
loope
mov
adc
jp
mov
jb
jne
inc
xor
mov
dec
pop
jb
bound
cmp
xchg
and
push
pop
insb
negl
in
add
icebp
pop
adc
dec
insb
cmp
sub
pusha
cmp
js
sbb
dec
mov
lret
rorl
cmp
movsb
jg
fld
push
and
xor
or
cmp
xor
and
sbb
xchg
push
inc
xchg
sub
clc
xchg
sub
mov
push
xor
dec
pop
cmpsl
fstpl
inc
gs
pop
jl
jle
lds
mov
outsl
and
pop
add
outsb
or
jp
pop
imul
add
add
iret
cwtl
and
sub
inc
lcall
inc
scas
push
in
adc
push
dec
lahf
ljmp
loope
cli
and
mov
mov
pop
popa
dec
inc
xorb
cmc
adc
sub
mov
clc
ret
add
mov
xchg
xor
call
dec
and
xchg
stos
aam
out
in
mov
and
and
adcl
repnz
xor
mov
int3
je
cmp
cltd
mov
or
add
inc
or
hlt
xchg
loope
shrl
nop
push
push
sub
popa
das
out
lods
fdivrl
es
cmp
insl
inc
jnp
pop
inc
push
std
add
cmpsl
mov
add
addr16
int3
jns
sub
add
shll
cmp
js
imul
and
cmpsb
mov
inc
ja
mov
jb
cmc
ljmp
add
lods
mov
push
jo
in
call
adc
out
push
xchg
loop
push
sub
sbb
hlt
loop
sbb
sub
xor
loop
ret
mov
jbe
jp
dec
pop
dec
not
lahf
testl
std
inc
es
mov
and
fistpl
jae
ficomps
cld
xor
popf
cmc
subl
jmp
xchg
pop
and
ret
jns
shrl
pop
lret
adc
mov
ljmp
mov
pop
lods
outsb
cli
adc
xor
cmp
lock
adc
dec
add
das
push
lds
pop
and
fdivs
or
mov
jmp
pop
sub
leave
and
push
mov
xchg
dec
sub
xchg
andl
data16
jmp
and
fs
cs
mov
or
jnp
mov
ret
in
mov
pop
clc
and
pop
lods
loope
xor
sbbb
inc
dec
adc
mov
out
push
shlb
pop
pusha
dec
push
sub
or
sarb
cmc
stos
adc
sbb
in
xlat
aam
shll
outsl
mul
rcll
add
pop
xchg
cmp
pop
mov
add
sub
ja
cmp
les
icebp
and
sbb
jae
shll
pusha
mov
lret
mov
aam
pop
sbb
push
sbb
xor
pop
pushl
sbb
and
gs
xchg
dec
sbb
aas
adc
das
mov
sub
je
stos
cmp
dec
push
lret
sub
push
imul
cmp
outsl
or
cli
cmp
adc
sub
cmp
outsb
arpl
aam
add
mov
addr16
mov
jb,pt
pop
xor
and
jge
out
pop
mov
mov
dec
pop
es
leave
jmp
fsubr
mov
fistpl
ss
mov
jmp
lds
incl
lock
repnz
inc
pop
jge
cmp
int3
add
popa
adc
loop
pusha
dec
scas
jecxz
push
bound
mov
mov
sbb
icebp
mov
lock
adc
cmp
mov
rolb
mov
push
cmp
sbb
scas
pop
jg
and
mov
xchg
dec
icebp
mov
jge
add
dec
cs
mov
xchg
inc
add
imul
lret
pop
xchg
bound
mov
mov
pushl
fisubrs
mov
sub
je
add
jne
stos
and
pop
xchg
loope
push
sub
daa
push
test
push
jl
sub
aaa
xchg
aam
mov
cmpsl
dec
mov
dec
ret
xor
mov
lea
pop
mov
rcll
fdivs
jno
inc
inc
mov
inc
add
fnstenv
jmp
xor
xchg
xor
push
outsb
inc
and
ret
imul
mov
cmp
cwtl
sub
push
pop
cmc
insb
cmp
inc
popa
out
xlat
fidivs
mov
add
push
ficomps
ss
stc
std
and
mov
out
dec
add
mov
push
pop
push
pop
sbb
rclb
cltd
mov
xchg
push
int
in
and
push
cmpb
jmp
cltd
jae
push
xchg
push
jp
mov
jno
scas
mov
cmp
add
call
mulb
pop
jg
sbb
dec
mov
and
jl
ljmp
dec
ss
cs
mov
addr16
inc
jne
push
repnz
add
pop
aam
jo
popf
ja
popf
cltd
mov
lea
inc
push
inc
gs
mov
call
outsb
roll
cmpsb
enter
sub
push
js
int3
ja
cmpsl
sub
ret
or
scas
cli
mov
lea
in
or
sbb
js
cld
cmp
pop
dec
and
inc
in
xor
sub
push
repnz
lcall
sbb
push
xchg
rcrl
push
add
add
xchg
movsb
mov
jbe
sbb
xchg
push
pop
fiaddl
inc
push
jge
sarb
sbb
mov
aam
and
and
orl
fs
mov
loopne
sbb
dec
in
fwait
add
add
mov
loope
ret
lret
dec
dec
fwait
xchg
xor
dec
in
gs
shlb
and
or
movsb
pop
leave
mov
fs
cli
sub
fdivs
pop
fnsave
mov
addr16
hlt
test
cmp
mov
cmp
adc
xchg
adc
jle
out
jo
jmp
mov
and
jmp
pop
cli
mov
popf
add
xchg
testb
daa
mov
rcr
into
dec
pop
mov
push
stos
jecxz
test
jo
adc
daa
int3
mov
mov
push
push
xchg
add
jae
adc
sub
aad
insb
push
and
sbb
pop
loope
jmp
jle
mov
sahf
mov
mov
push
out
sub
jne
pop
sub
push
push
lahf
xor
loope
scas
test
je
adc
mulb
insb
push
loope
movsl
std
push
repnz
sbb
xor
orb
mov
in
cmp
scas
push
fs
lock
pop
mov
mov
repz
nop
lahf
add
ffree
inc
rcl
stc
icebp
dec
add
push
int3
jg
push
push
addb
lods
mov
lods
pop
inc
lea
add
inc
sub
cld
std
or
ljmp
jno
in
push
pop
and
add
out
adc
xchg
jge
pop
push
pop
xor
and
jb
mov
xchg
push
fdivl
mov
sub
xchg
push
bound
clc
jecxz
aas
stc
sub
dec
icebp
hlt
sbb
sub
call
addl
cmp
mov
pop
call
pop
sub
pop
mov
mov
and
pusha
mov
stos
mov
out
arpl
mov
mov
sbb
jno
mov
push
lds
xor
sbb
fs
aad
scas
jl
imul
mov
dec
xor
push
lods
jmp
xchg
mov
ret
jge
andl
fucomip
fnstcw
cmpsl
jae
gs
cmp
push
adc
jl
mov
mov
and
sbb
xchg
hlt
mov
xchg
add
sbb
add
sbb
mov
or
xlat
xor
adc
cmp
outsb
das
aaa
xchg
aas
stos
add
cmc
fdivl
push
out
jae
ret
sbb
push
pop
jnp
adc
dec
push
adc
dec
addr16
and
xchg
test
enter
sbb
inc
xchg
push
rolb
je
pop
shlb
add
xlat
jge
andb
sbb
pop
mov
pop
sub
xor
movsl
call
lea
int
push
insb
xchg
dec
daa
and
mov
pop
or
cmp
or
cmp
mov
mov
rorb
lret
inc
je
jl
pop
lret
push
jno
inc
bound
data16
in
cmpsl
or
in
mov
xchg
add
xor
fwait
cmpsl
inc
mov
fldt
or
imul
rcr
push
fwait
dec
repz
inc
add
mov
mov
insl
fnstcw
inc
scas
jg
fldl
mov
shr
xlat
mov
push
xchg
xorl
pop
jp
aaa
inc
out
subb
pop
pop
cmp
adc
pop
jl
inc
adc
loop
cmpsl
rclb
je
fmull
push
sbb
pop
or
shll
cli
mov
es
xor
jl
pop
mov
or
aad
je
sbb
sub
rorl
push
xchg
cltd
dec
jb
in
js
xor
stos
pop
inc
addl
push
popa
mov
dec
mov
jno
int3
push
jge
xor
push
adcb
xorl
pop
lock
cmc
adc
sub
imul
or
sub
inc
xchg
pop
xor
cli
jg
mov
push
sbb
or
pop
ss
sahf
xchg
mov
aas
or
sbb
and
adc
lods
out
jmp
ret
xchg
out
xlat
dec
imulb
outsb
sub
in
jl
inc
pop
jmp
adc
fwait
inc
mov
aaa
pop
or
outsl
xor
cmp
or
xor
hlt
xor
js
aam
inc
call
add
rorb
pop
in
rcll
fdivr
jb
pop
mov
dec
adc
sbb
xchg
dec
pop
mov
xor
rcrb
jbe
filds
fsub
leave
pushf
cmp
xchg
lock
cmpsl
or
jo
les
ja
ja
mov
push
jmp
pop
add
mov
inc
out
mov
adc
pushf
dec
cwtl
jno
sub
js
or
jmp
mov
ss
cltd
js
adc
pop
cmp
movsb
and
repz
test
mov
inc
jns
xchg
jo
aas
jg,pn
fucomip
test
lret
test
mov
repz
sub
fs
sub
out
ja
adc
repz
or
roll
adc
arpl
sbb
lret
or
adc
imul
xchg
xor
mov
xor
ficoml
mov
inc
jne
lock
rorb
mov
test
lret
push
sbb
out
aad
mov
or
mov
aad
shl
sbb
stos
pop
jmp
cmpsl
mov
es
jle
mov
test
int
and
adc
mov
and
incl
mov
int3
push
sub
xchg
add
mov
mov
popa
rcll
dec
movb
jne
hlt
xor
andl
mov
jmp
xorl
pop
or
jne
mov
jbe
mov
mov
ffreep
mov
enter
adc
sahf
inc
repnz
lods
imul
pop
ss
test
mov
sub
loop
divl
je
mov
insl
and
lds
mov
jge
enter
in
and
dec
or
pushf
loope
or
cmp
mov
inc
mov
imul
push
or
imul
cmc
jg
movsb
sub
adc
mov
lret
push
aam
je
test
xor
add
sbb
pop
or
inc
jae
add
shrl
jle
shlb
push
lret
cwtl
pop
add
fdivrl
mov
add
loope
cmp
subl
push
sbb
pop
js
rcrl
mov
test
aas
mov
jmp
jmp
icebp
sbb
and
jns
lcall
or
adc
cmc
inc
test
lcall
mov
orl
jo
pop
xor
cmp
sub
bound
adc
push
in
lcall
imul
and
push
dec
cmpb
mov
dec
pusha
cmp
adc
movsb
jbe
test
push
mov
adc
mov
shll
sub
mov
icebp
push
cli
icebp
rcrb
xchg
fwait
add
mov
or
sbb
sarb
aaa
cmpsb
xchg
pop
dec
adcb
pop
cmc
jbe
pop
inc
bswap
xor
jb
or
scas
cmp
cmpsb
adcb
sub
neg
xchg
sub
mov
adc
mov
push
test
sub
pop
dec
push
fcom
pop
sub
insl
jo
cmp
mov
mov
insb
jne
mov
add
movsb
jne
adc
std
subl
cmp
or
xorb
sahf
mov
shll
and
das
movsl
aas
insb
rorb
les
nop
pop
mov
pop
fnstsw
cmc
mov
adc
cs
inc
lret
ja
mov
subl
push
lea
lods
xlat
outsl
mov
sbb
mov
ret
push
nop
dec
sbb
and
icebp
cwtl
pop
xlat
inc
dec
in
jne
orb
push
sub
int
cmpsb
mov
pop
js
push
fld
mov
xchg
jle
fadds
add
pop
push
shll
jb
lret
push
xor
jl
or
xchg
cmpsl
mov
mov
lods
push
pop
push
dec
lahf
popa
pop
shll
push
or
pop
js
fldenv
sub
push
iret
cmp
dec
xchg
or
push
xchg
xlat
mov
jne
sub
sahf
xlat
out
std
ret
hlt
aaa
xor
mov
jns
sub
aas
out
in
shrl
out
xchg
stos
fisubl
jno
inc
mov
adcb
aad
sbb
mov
jnp
mov
mov
push
out
not
std
and
sbb
sahf
mov
jge
das
repz
mov
outsb
loopne
mov
xor
push
mov
or
mov
sbb
inc
push
mov
sub
sub
hlt
sbb
clc
mov
jp
sbb
cmp
mov
out
mov
xor
out
cmp
flds
mov
movsb
push
inc
shlb
jl
jb
aas
or
inc
cmpsl
lds
nop
in
add
into
sbb
mov
mov
xchg
nop
dec
imul
jp
aas
sub
cmp
dec
out
jno
in
pop
test
xor
pushl
outsl
push
in
cmp
and
shrb
push
fadds
jo
add
popf
mov
inc
cmpsb
cwtl
mov
sub
std
and
mov
scas
jae
dec
testl
test
and
xchg
jmp
mov
sahf
inc
aaa
and
mov
jge
fldt
xchg
dec
stc
adc
cltd
stc
mov
mov
ja
fbstp
scas
lcall
fnstenv
jb
es
notb
inc
and
int3
repnz
mov
aam
scas
movsl
push
adc
fsubp
loopne
push
sbb
xor
inc
mov
sub
pushf
adc
into
out
push
dec
mov
movsb
and
lret
adc
cld
fidivrs
push
jo
or
dec
enter
out
jl
xchg
sub
jns
sub
push
les
ret
imul
mov
mov
fldcw
add
cmp
sbb
pop
das
ret
push
movd
aaa
ljmp
cmc
das
push
pop
sub
mov
xchg
rol
push
jo
dec
fucomip
mov
sub
mov
mov
leave
out
loope
mov
lahf
jno
xchg
cmp
aam
jp
mov
jmp
add
sbb
call
ja
outsb
cmpsl
sbb
scas
aaa
js
aaa
cmp
lret
sub
lret
xor
int3
sbb
push
fstl
xor
in
sub
repnz
dec
repnz
arpl
pop
out
stos
pop
or
enter
push
xlat
mov
xchg
and
mull
sbb
aas
inc
insl
lea
xchg
iret
mov
jo
sti
jl
sbb
xor
test
jg
mov
xchg
sbb
mov
rcrb
repz
shlb
add
add
inc
push
pop
bound
aad
sbb
movsl
bound
cmp
daa
jbe
sbb
push
inc
in
loopne
notb
cwtl
mov
test
xor
sti
les
xchg
cs
andb
daa
sbb
sub
sbb
jbe
mov
pop
adc
inc
enter
aad
push
add
clc
test
ss
jecxz
mov
jbe
push
jae
and
clc
add
cmpb
call
mov
push
adc
mov
xor
cld
inc
push
mov
fucomip
push
scas
fimuls
inc
dec
cmpsl
mov
scas
out
dec
daa
xchg
in
lret
dec
mov
mov
pop
test
enter
in
mov
sub
mov
fwait
adc
int
sbb
fwait
lods
roll
pop
and
std
int3
jnp
mov
or
daa
fnstcw
mov
jne
mov
in
jno
pop
loopne
lods
sarb
cmp
mov
push
les
pop
fisubs
push
mov
out
jbe
les
inc
push
pop
and
add
loopne
mov
aas
or
aaa
mov
daa
and
dec
push
xchg
cwtl
pop
enter
inc
xchg
mov
fs
loope
pop
sub
pop
sub
sbb
cmp
mov
call
ljmp
fdivrp
int3
aam
xchg
mov
movsl
jo
enter
insl
fsubl
sub
rcr
and
push
push
js
out
movsl
jb
pusha
cmpsb
sbb
xchg
push
popa
pop
cmc
das
fimuls
push
or
mov
jb
loopne
sbb
jae
data16
fwait
nop
testb
test
les
insb
test
roll
dec
or
mov
cmp
sbb
mov
leave
hlt
scas
rorb
jo
ret
sbb
ljmp
pop
mov
dec
not
push
imul
push
shr
adc
sbbb
sub
sti
movb
sub
in
add
push
mov
jne
cltd
bnd
push
sbb
iret
icebp
cltd
xor
fldenv
mov
jnp
jg
lods
push
out
repz
movsl
nop
jg
xchg
sbb
xchg
mov
adc
popf
sub
add
pop
jo
xchg
pop
sbb
jle
pusha
aaa
mov
xchg
or
insl
test
adc
mov
sbb
aas
int
das
mov
mov
or
jbe
mov
decl
gs
pop
pop
aam
clc
ret
mov
jb
fstps
pushf
rcl
push
add
scas
xchg
movsl
xor
ds
jne
test
jmp
inc
fwait
mov
inc
adc
sub
inc
xlat
mov
es
dec
xchg
ret
aad
jbe
ss
push
sti
ljmp
insl
loop
clc
fldt
jns
test
out
daa
inc
sahf
adc
or
inc
and
add
push
pop
sbb
int
je
popa
into
in
or
pop
ret
mov
sub
pop
mov
ret
push
cmp
xchg
mov
mov
sub
cmp
sub
sub
dec
xchg
sbbl
lahf
mov
xchg
andb
xchg
inc
xor
pop
popf
mov
push
test
jns
or
xlat
dec
mov
mov
pop
jbe
lock
mov
out
mov
bound
out
xor
lret
repz
hlt
je
sub
push
ljmp
push
js
cmc
andl
popa
add
loope
rorl
jg
stc
fists
mov
ret
andl
pop
imul
or
test
mov
movsb
cmpsl
les
jbe
mov
fstps
dec
out
fcoms
movsl
push
jmp
lahf
ljmp
cmpsb
push
sbb
scas
pop
pushf
jne
cmp
sbb
sub
imul
inc
in
ret
push
nop
js
push
in
mov
dec
push
inc
mov
push
adc
pop
call
int3
pop
gs
mov
cmp
jg
and
xchg
or
jno
sbb
inc
ss
pop
dec
test
add
fwait
inc
repz
in
dec
callw
mov
repnz
inc
or
and
add
cmp
cmpsl
pusha
jecxz
xor
mov
or
fiadds
push
addr16
mov
or
in
inc
in
and
or
add
sub
xchg
jb
push
adc
mov
mov
adcl
mov
in
insb
lods
or
pop
aas
movsb
pop
jnp
ja
cmp
add
xchg
mov
out
add
std
divl
aad
or
xor
lret
xor
inc
cmp
in
in
stos
xor
rcll
dec
mov
shll
repnz
ljmp
dec
cmp
cmc
andl
fs
jl
add
das
daa
les
movsl
pop
mov
enter
sub
in
sbb
outsb
sbb
das
xor
lahf
dec
xor
pop
sbb
add
call
es
mov
ret
inc
pop
adc
cs
rolb
dec
outsb
dec
mov
hlt
or
jmp
fninit
fsts
pop
mov
dec
cwtl
insb
xchg
pop
or
mov
in
adc
push
pop
test
ficompl
xor
mov
lds
and
arpl
and
pop
leave
clc
pop
cmp
push
add
cmp
lods
pop
int
add
addr16
push
adcl
jp
into
jno
xlat
in
mov
mov
inc
scas
lods
jae
sub
pop
daa
inc
adc
aaa
and
ror
dec
cmpsb
xor
and
pushf
lock
out
adc
mov
jmp
jae
pop
in
and
dec
movd
mov
fistpl
xchg
mov
lret
mov
pop
mov
es
mov
bound
fisubrl
arpl
or
testb
ja
sub
std
cmc
rorb
mov
push
mov
xchg
pushf
jmp
jno
test
je
sti
iret
iret
mov
pop
imull
scas
mov
and
roll
push
int3
pusha
adc
xchg
xchg
xchg
inc
lret
insl
int
popf
sbb
int
push
and
cs
repz
les
dec
pop
or
adc
cmp
gs
dec
jl
sbb
in
jp
jne
jnp
scas
inc
aad
lods
andb
addb
cmpsl
mov
in
fisubrl
jp
int
xchg
in
lcall
test
jne
mov
cmp
cmp
repz
mov
rcll
movsb
mov
test
aaa
xchg
stos
jb
sub
shlb
lea
xchg
push
sub
mov
leave
in
lret
fs
xchg
neg
and
and
test
push
fwait
movsb
pop
jns
or
repz
aam
psubusb
shrl
push
loop
inc
pop
xchg
jmp
jp
shl
jecxz
fdivrs
aam
mov
addr16
into
or
ds
mov
lods
in
dec
inc
jo
loopne
add
lahf
sbb
inc
ret
and
lahf
nopl
push
dec
out
bswap
jae
xor
push
icebp
push
dec
sub
inc
int3
xor
adc
push
in
cld
mov
adc
jmp
jne
inc
mov
mov
das
test
dec
sub
and
jns
cmpsl
outsb
xor
rcr
dec
imul
iret
lret
add
adc
mov
lds
jl
add
ret
popa
pop
fcmovu
xor
mov
cmp
in
dec
loope
out
cmc
or
stos
scas
test
js
mov
lock
rclb
jmp
push
sub
jb
into
in
and
mov
cmpsb
dec
cmp
es
sbb
dec
ror
inc
mul
daa
aam
mov
xchg
test
cmp
arpl
xchg
std
mov
push
dec
icebp
adc
jge
shl
test
jb
std
cmp
adc
outsl
jle
or
idivb
negb
popl
sub
lods
das
mov
push
add
cmp
fcom
repz
cs
sbb
push
pusha
jg
jge
sub
sub
push
popa
jb
xchg
pop
stc
aas
insl
mov
cmp
daa
je
jo
rolb
in
push
sar
push
pop
adc
mulb
push
xchg
test
pop
or
pop
std
mov
sbb
jae
rclb
adc
dec
mov
and
sub
sub
cmp
inc
cld
mov
js
in
sub
call
jno
movsbl
inc
xchg
call
jb
mov
xchg
cli
mull
pop
xchg
adc
mov
test
shlb
mov
adc
or
xor
pop
or
pusha
pop
inc
pop
xor
jp
lds
jl
sti
sahf
push
cmpsb
pop
movb
out
inc
ja
jmp
int
cmpb
mov
add
aas
rcl
int3
or
adc
adc
cli
ret
pop
pop
in
xchg
or
inc
mov
lock
repnz
aad
mov
xor
pushf
xor
push
push
loope
popf
in
push
mov
add
je
cmpsb
jns
addr16
ljmp
int3
mov
ficompl
mov
mov
mov
testb
jno
push
and
add
and
or
mov
fadd
shrb
rorl
clc
pop
vcmpsd
lret
call
enter
mov
cli
or
cltd
in
mov
mov
xor
mov
rolb
je
adc
lods
sbb
xchg
dec
xchg
cmp
lds
jne
lret
dec
pop
mov
cmp
inc
out
pop
or
movsl
out
xor
aad
push
sar
inc
outsb
sub
rclb
rcr
or
in
ss
test
push
clc
insl
iret
xrelease
mov
cmpl
pop
sbb
stos
cli
hlt
fsubrp
cmp
sarb
insl
pop
cld
rcll
pop
gs
mov
push
fbstp
xchg
mov
push
pop
inc
xlat
in
sbb
push
sub
shlb
mov
ficomps
or
cld
test
outsb
lcall
bound
xor
cmp
pop
cmpsl
add
adc
sbb
mov
inc
pop
inc
cmp
jne
repz
jl
adc
xchg
dec
dec
cmp
adc
cmp
arpl
cmpsl
nop
sub
xchg
push
rorl
les
ret
cmpsl
push
cmp
xchg
push
cmp
es
jne
aam
xlat
cli
aam
push
hlt
movsl
movsb
pop
xchg
xchg
je
dec
repnz
adc
sub
and
dec
pop
cmp
call
ljmp
cmpsl
mov
into
xchg
movsb
lods
jg
cltd
mov
into
fisubs
xchg
add
xchg
fiadds
gs
cltd
jns
add
sub
loop
jmp
mov
push
push
outsl
or
arpl
dec
stc
lods
daa
xchg
push
inc
cmp
push
fwait
orb
stos
add
outsl
dec
pop
sti
sbb
ds
rorb
or
mov
cmpl
xor
imul
popf
ret
lea
cmpsb
icebp
cmp
rorl
xchg
mov
xor
xchg
mov
decb
ss
out
xchg
dec
dec
mov
loop
xor
ljmp
push
fdivrs
dec
mov
mov
xlat
xchg
xchg
jp
sahf
push
or
push
mov
jne
sub
inc
mov
fisubl
push
and
mov
stc
push
inc
das
xchg
mov
andb
inc
dec
shll
inc
push
out
sahf
lcall
jo
mov
add
lods
pop
ljmp
push
addr16
jmp
or
ror
add
pop
push
shr
pop
and
outsb
pushf
fnstenv
jl
mov
lcall
btr
test
fstps
inc
inc
shrl
and
xchg
icebp
sub
sub
xor
jno
push
jl
data16
fwait
or
outsl
or
std
aaa
rol
fsubs
push
mov
fcom
jg
orl
lahf
xor
popl
testb
ret
jmp
mov
pop
jb
push
xchg
ja
push
mov
clc
clc
jno
je
adc
int
jo
loope
xor
mov
pop
cltd
push
mov
bound
aas
sub
sub
sti
pop
sub
mulps
outsb
iret
shrb
mov
and
fldenv
xor
daa
and
jl
mov
fcompl
ret
fdivrp
sub
cmp
pop
enter
mov
xchg
jge
fs
cmp
testl
pusha
sarl
clc
in
and
out
pop
jb
or
mov
lcall
fstpt
mov
push
jmp
mov
xor
popa
fldcw
stos
mov
ucomiss
add
adc
mov
movsb
repnz
mulb
push
sbb
popa
jmp
mov
pop
repz
fdivp
fistps
lock
fdivs
lods
adc
jnp
mov
xchg
loopne
iret
adc
subb
add
popf
sub
cmp
shl
lahf
mov
and
and
stos
mov
mov
lcall
mov
add
jno
ret
out
test
mov
dec
in
sub
stc
push
pop
xchg
in
push
jo
negl
pop
out
dec
std
test
push
mov
mov
jg
fiaddl
fldenv
cmp
filds
cmp
xchg
outsl
mull
mov
push
pop
cs
ss
jecxz
std
inc
pop
mov
sub
jno
subb
outsb
push
mov
push
jmp
scas
push
jne
int3
adc
mov
int3
dec
jl
pop
divl
jne
cmp
jb
dec
fldenv
mov
sub
inc
or
outsl
inc
sub
or
push
loopne
stos
jo
fidivl
sbb
ljmp
iret
enter
cmpsl
cld
xor
xchg
xlat
xorb
icebp
int3
fsubp
lret
xor
xlat
jle
lea
mov
lret
xlat
and
sti
xor
pop
lcall
jle
cmp
push
jb
dec
mov
pushf
rolb
pop
in
out
mov
cmpsb
loop
dec
pop
inc
lcall
cltd
movsb
daa
out
dec
nop
push
addb
pushf
subb
push
lahf
push
insb
into
add
fsubrl
sbb
push
je
aam
pop
jb
cmp
loop
lahf
inc
test
push
pop
std
fistpll
sub
jp
jp
pusha
add
adc
jg
cmpb
sub
adc
pop
addr16
and
enter
mov
sbb
and
push
in
pop
bound
imul
std
xchg
mov
cs
mov
out
cmp
push
push
in
xlat
outsb
inc
and
pop
xchg
arpl
push
lds
and
int
fisubs
out
out
test
test
xor
cmpsb
and
mov
inc
clc
fnstcw
cs
iret
cltd
aam
fwait
mov
pop
mov
incb
daa
jl
fnstenv
sahf
xchg
jns
or
jmp
sub
lret
cmc
aas
into
push
pop
std
push
aam
int3
out
cmp
cmp
xchg
and
test
add
xor
sub
shrb
loopne
jg
out
xorl
push
mov
in
cmp
xchg
ljmp
xchg
jge
push
mov
lahf
dec
pop
inc
lds
mov
je
inc
fucom
les
sub
cmp
das
cmp
sbb
mov
lds
pusha
shrb
jl
push
or
sbb
fmull
fiaddl
sub
jns
fcomps
loopne
outsb
push
and
jb
jbe
mov
pop
mov
pop
idiv
into
jmpw
insb
cld
xor
ja
inc
sbb
xchg
popa
ds
adc
fmull
out
sbb
sbb
adc
or
idiv
jecxz
popf
pop
jg
jg
fs
jne
mov
mov
hlt
outsl
dec
jnp
dec
xchg
loop
xchg
lock
aas
sbb
icebp
and
mov
sub
jae
stc
mov
jecxz
mov
pop
jg
ss
sub
shrb
call
sbb
js
cmc
jecxz
pop
mov
std
pop
stc
pop
pusha
jmp
cmp
loop
sbb
cmc
insb
mov
adc
push
inc
inc
mov
or
mov
mov
rcr
mov
inc
xchg
call
mov
cmp
adc
mov
clc
push
xchg
call
xor
call
lret
nop
fstps
pusha
xor
push
repz
std
test
int
ret
aas
jmp
nop
ja
int3
mov
push
call
shll
mov
push
ds
call
mov
mov
cmpb
pop
jmp
xchg
out
cld
inc
call
enter
sub
aad
cmp
cmp
adc
mov
jecxz
pop
cwtl
daa
mov
jp
stos
add
adc
repz
shlb
jmp
popa
adc
sub
movl
add
negl
mov
out
sub
add
sub
and
sub
mov
out
mov
adc
jg
cld
insl
test
inc
jae
fidivrl
mov
ret
add
pop
test
xchg
popa
jnp
xchg
out
cmp
jmp
add
xor
daa
sub
popf
out
cmp
ds
cltd
sbb
or
outsb
adc
fisubrl
inc
mov
movb
icebp
sti
ret
filds
xchg
xor
push
mov
cmp
inc
dec
test
push
out
faddl
xlat
xor
xchg
out
inc
sub
lret
shufps
stos
fadds
movsb
mov
xor
es
or
in
adc
pusha
shrl
mov
xchg
sbb
or
sub
or
sbb
test
mov
out
adc
shlb
inc
mov
aam
lret
pop
jb
push
sub
cwtl
lods
adc
andl
add
xchg
pop
mov
std
ljmp
cwtl
jge
jno
iret
call
sub
dec
sbb
lret
imul
pop
repz
jbe
cmp
cmp
filds
je
cmc
lea
inc
test
outsb
adc
pop
jle
mov
xchg
or
and
imul
xchg
das
pop
add
pop
movsl
jb
sub
adc
call
cmp
push
mov
push
movsl
xchg
pushf
and
add
jns
pop
inc
or
insl
push
pop
push
jno
dec
loop
inc
push
mov
pop
mov
inc
das
pushf
mov
data16
mov
cmp
out
dec
jmp
fistl
cwtl
loopne
xor
push
cmc
mov
mov
mov
push
call
out
fnstsw
add
test
xlat
test
es
cmc
sub
add
add
leave
jp
add
or
loop
jne
mulb
sbb
popf
mov
ja
mov
xchg
xchg
add
je
mov
pop
pop
ret
xchg
and
or
pop
xchg
xchg
movsb
or
add
mov
cmp
cltd
mov
insb
fldt
add
out
rcrb
xchg
push
sub
xlat
jle
inc
je
jge
shrb
fwait
dec
mov
fwait
repnz
mov
dec
cltd
and
dec
mov
sahf
dec
add
mov
pop
fsubr
lods
and
jp
fstl
lahf
mov
push
pop
test
fisubs
pop
lods
cmp
hlt
and
xchg
lahf
incl
test
sbb
inc
mov
jo
loopne
dec
shrb
divb
jbe
movsb
movsb
cld
lahf
fstp
mov
cli
shl
popa
loopne
jg
inc
jecxz
cmp
push
bound
in
inc
mov
and
pop
pop
and
call
inc
and
clc
out
dec
lods
daa
and
pop
xor
test
dec
cmp
ss
test
push
sub
mov
scas
fstpl
push
aaa
jp
mov
and
sbb
sub
mov
or
push
rcpps
inc
mov
mov
cs
mov
mov
dec
bound
cwtl
testb
fs
popa
lods
push
shlb
or
aam
or
aaa
inc
xchg
sub
lcall
imul
sbb
and
repz
in
jmp
cmpsl
sub
xchg
mov
sti
push
inc
or
lods
cmpsl
push
sbb
gs
sbb
push
ljmp
sti
call
loop
dec
popf
in
jo
data16
push
mov
mov
lea
mov
or
xchg
sbb
in
bound
lahf
data16
subl
es
icebp
outsl
lea
adc
jg
jg
sub
adc
sbb
mov
mov
filds
inc
mov
les
mov
loopne
mov
mov
sbbl
push
or
rcll
addb
stc
repz
dec
xchg
jmp
fildl
jmp
out
push
lcall
mov
pop
mov
and
mov
icebp
or
add
sti
jg
imul
mov
push
aaa
pop
out
test
sbb
aaa
cmpsl
inc
mov
jno
inc
sti
jge
xchg
shlb
fnsave
data16
jbe
xchg
push
add
push
add
mov
and
mov
jg
out
rclb
pop
mov
loope
sbb
or
mov
or
jbe
out
push
cli
mov
imul
mov
in
mov
xor
fucomip
aad
outsl
jl
mov
sub
ss
cmp
mov
lea
inc
mov
xor
xchg
mov
adc
or
xchg
xchg
sbb
iret
cmpsb
cmp
repz
jae
stos
cmp
fstps
cltd
mov
cmp
lock
or
xchg
mov
cmp
imul
lcall
clc
scas
pop
mov
adc
xchg
into
outsb
push
ljmp
inc
repnz
ja
leave
or
fildll
pop
push
sar
repz
out
fwait
lret
sbb
lahf
outsb
and
push
loope
pushf
and
dec
adc
ljmp
pop
mov
jae
add
leave
push
outsl
xchg
push
or
mov
sub
adc
or
push
pop
movsl
aaa
lds
int
and
cmp
dec
int3
scas
fbstp
jg
sub
inc
repnz
cmpb
daa
sbb
jmp
outsb
gs
inc
icebp
lds
xchg
pop
jg
xorb
sti
and
test
inc
dec
jno
cmp
and
pop
pop
int3
pushf
aam
stos
push
out
div
jmp
xchg
lds
je
imul
xchg
repnz
dec
addl
out
adc
mov
dec
ret
imul
bound
cmpsl
ja
fwait
or
inc
fucomp
jge
jb
jmp
xchg
xchg
xchg
test
and
and
dec
ret
cmp
aaa
repz
lret
pop
inc
inc
cmc
test
xor
test
add
ret
and
icebp
stos
mov
mov
push
push
pop
push
cmp
inc
scas
mov
dec
mov
jne
xchg
sub
mov
push
inc
popa
lret
sahf
fisubrs
sbb
mov
xor
push
movsl
push
push
mov
jnp,pt
rcr
cmp
out
mov
mov
jb
nop
cmpb
cmp
jp
fstpl
sub
out
loopne
test
js
outsb
cmpsl
scas
adc
xor
fstpt
les
cmpsb
arpl
hlt
shlb
data16
out
aad
or
or
push
adc
cltd
test
addr16
mov
lahf
adcl
and
scas
out
idivb
scas
aam
xchg
push
adc
push
aas
lret
inc
and
sub
mov
sub
stos
ss
push
mov
clc
mov
xchg
insb
push
jo
or
dec
clc
aas
incb
sbb
test
jno
popf
pusha
lret
push
push
sbb
ss
scas
sub
lret
mov
jno
movsl
push
cmpsl
mov
scas
out
fs
jmp
dec
jecxz
inc
ds
mov
xchg
fcmovnu
push
adc
pop
mov
arpl
dec
outsl
data16
movsb
in
sbb
dec
aad
js
fsubrs
popf
mov
mov
mov
es
sbb
jge
dec
push
dec
fcmovu
pop
add
inc
pop
fcmovnu
add
mov
enter
mov
pop
xchg
aaa
loope
xor
mov
dec
scas
mov
pop
fwait
xchg
cs
xchg
scas
pop
bound
jl
fadds
es
lret
push
push
aas
movsl
jno
je
mov
or
xchg
insb
hlt
or
mov
aam
xchg
mov
or
fsubs
mov
mov
das
lcall
imul
or
pop
push
out
or
ja
push
push
sub
sbb
dec
dec
mov
lcall
and
popf
mov
aad
xor
movsl
stos
xchg
xchg
push
pop
add
int3
inc
addr16
push
adc
mov
jb
sbb
and
ss
push
or
pushf
mov
sub
jbe
shlb
pcmpgtd
sbbl
insl
and
lahf
or
pcmpeqw
cmp
dec
jg
mov
pop
jno
cmpsl
popf
sub
jnp
xchg
and
lods
xchg
aam
and
dec
and
fs
test
mov
popf
or
clc
fdivp
mov
sub
imul
cmp
mov
dec
add
jmp
ss
or
out
daa
ret
cmpsb
xchg
fiaddl
mov
jge
mov
fmulp
das
jne
mov
inc
xor
in
sub
outsb
aas
shlb
jmp
jb
and
lahf
pop
and
sbb
es
xchg
cmp
sbb
dec
lahf
sub
add
ret
inc
cmpsb
andl
call
add
mov
rcll
pop
aaa
or
ret
test
xchg
sbb
shr
cvtdq2ps
jg
xlat
out
push
mov
repz
jno
mov
mov
pop
or
mov
cmp
jle
push
lcall
rorl
push
mov
jb
stos
sbb
xchg
movb
push
inc
sbb
loope
repnz
fadds
inc
xor
ss
inc
xchg
loope
jp
pop
cli
xorl
cltd
jle
call
leave
add
shl
and
jb
or
adc
xchg
add
mov
nop
mov
imul
lock
and
in
leave
cld
cmpsb
cltd
scas
pop
adc
dec
mov
icebp
mov
inc
push
xchg
pop
lret
insb
fdivrs
jge
popf
mov
stos
xor
sub
sbb
mov
insl
or
mov
push
out
add
cmp
cmpsb
in
jae
dec
push
or
xchg
aam
adc
mov
cld
adc
test
adc
js
and
push
jmp
mov
scas
mov
ret
outsl
mov
push
dec
jnp
and
mov
rol
fsubrl
jmp
dec
mov
adc
mov
call
or
or
mov
pop
pop
cld
sar
sub
fcoml
sub
int3
imul
mov
or
mov
jmp
add
pop
lea
mov
sub
push
add
stos
cmp
enter
stos
cmp
add
shlb
jno
in
mov
xor
imul
repz
add
sbb
fwait
adc
test
aas
rcrl
dec
mov
in
std
fistl
xchg
popa
into
push
popf
ficoms
mov
inc
test
sub
jp
push
cld
xor
je
jle
add
mull
sub
xchg
mov
xor
inc
and
and
int3
sarl
jg
fs
pushf
test
adc
mov
push
gs
inc
pop
push
icebp
pop
mov
jmp
xchg
mov
mov
add
pop
pop
cmpsl
dec
out
add
mov
mov
jnp
std
xor
xor
adcl
ds
mov
push
adc
push
and
aaa
loop
jo
cmp
push
mov
inc
xor
xchg
xchg
mov
ja
mov
shl
sbb
mov
sbb
les
pusha
into
fsub
adc
pusha
xor
test
pop
push
adc
lods
fwait
jne
push
filds
sbb
out
xor
sub
and
lahf
lcall
or
jno
jbe
mov
add
sbb
inc
sbb
xchg
cmp
iret
adc
jl
jl
mov
data16
pop
mov
je
push
cmp
outsb
call
iret
outsb
inc
es
sbb
dec
mov
enter
and
insb
sbb
repz
cmp
and
dec
xor
lea
push
push
outsl
or
movsb
dec
mov
daa
push
divb
jge
pop
adc
push
subb
bound
repnz
sub
fisttpl
jecxz
jnp
loopne
sub
push
mov
jns
xor
inc
jg
mov
jne
out
jecxz
out
mov
stc
and
add
test
sti
dec
or
mov
jo
push
js
out
jmp
scas
iret
dec
add
push
push
push
lahf
adc
sbb
mov
arpl
add
cmp
mov
adc
xor
cmp
stc
jno
mov
mov
push
inc
comiss
mov
leave
xchg
hlt
out
stc
pop
sbb
cmp
std
push
js
repz
popf
mov
loope
fwait
mov
pushf
push
mov
inc
jnp
push
stos
jae
out
xchg
bnd
lods
adc
lret
xchg
mov
mov
jl
ljmp
into
sahf
lods
xchg
inc
xorb
mov
jb
lds
push
cmp
loope
test
repnz
dec
xlat
adc
fldl
jecxz
push
sub
xor
fisubs
dec
imul
pop
movsl
sti
and
and
pop
stos
mov
jae
dec
dec
xorb
je
imul
lock
or
or
push
mov
cwtl
out
repz
jge
es
sub
nop
push
ds
nop
mov
add
jnp
add
inc
scas
and
or
rolb
daa
mov
mov
stos
jo
in
arpl
inc
push
or
adc
imul
inc
pusha
pop
jmp
adc
clc
mov
rcrb
cmc
mov
and
jae
xchg
mov
push
jge
cmpsb
gs
push
mov
inc
mov
out
idivb
rol
ficompl
sub
add
push
ja
cwtl
jecxz
cltd
mov
adc
sbb
fsub
imul
loope
pop
mov
xor
jne
sbb
mov
dec
rcll
inc
insb
jge
mov
test
mov
test
or
jg
push
sbb
xorb
popa
les
dec
pop
imul
gs
cli
ret
and
and
jae
scas
pop
insl
add
divb
dec
out
inc
cmp
arpl
pop
xor
ffreep
push
repz
push
push
or
das
push
or
or
data16
in
sub
sub
jo
popf
fisttps
outsl
movsl
mov
jp
mov
sub
shrl
xlat
pop
and
mov
es
dec
xchg
ljmp
and
jae
jl
aaa
cmpsl
xchg
cli
cli
shll
push
jmp
daa
pushf
cwtl
dec
sarl
pop
outsb
mov
stos
lock
push
mov
pushf
shrl
mov
icebp
std
loop
mov
mov
xor
jmp
out
add
mov
ja
dec
inc
loopne
lods
xchg
ficoms
jb
push
cwtl
or
sub
scas
adc
and
jg
les
cmp
out
call
addl
lock
xchg
iret
loop
inc
ret
das
mov
je
inc
imul
repnz
inc
xchg
iret
add
inc
mov
xor
sub
and
es
and
repnz
pop
movsb
fiadds
mov
mov
pop
push
jp
clc
pop
cmp
inc
sahf
add
xchg
dec
xchg
sub
jns
fs
mov
xchg
mov
popa
inc
xchg
call
xchg
sti
jae
outsl
add
sub
popa
cmp
ds
fsubrs
mov
dec
mov
mov
js
cmp
sbb
sbb
pop
push
ds
sub
cmp
cmc
add
push
or
mov
sub
push
jmp
rol
insl
in
movsb
stos
test
xorl
sub
orl
xchg
inc
xchg
fwait
cmc
push
jl
add
jns
xchg
frstor
js
mov
aaa
dec
lret
in
mov
lret
fwait
push
lods
push
popa
pop
sub
ljmp
hlt
int3
adc
jo
jp
cwtl
sbb
and
repnz
shll
sarb
scas
test
adc
nop
push
lcall
and
addr16
ds
cmpsb
sub
xor
stos
mov
add
adc
xor
add
cltd
or
ret
imul
cmp
aas
pop
xchg
xor
ja
lods
pop
ror
sbb
dec
push
sub
stc
bound
mov
cmovnp
sarl
aas
std
nop
push
jg
cs
push
cmpsb
arpl
ss
test
shl
mov
cmp
xchg
fsubr
push
jb
cmp
leave
inc
adc
jle
mov
cwtl
or
sub
out
cmc
lret
js
lods
push
into
inc
daa
not
es
insl
lods
lods
ja
loope
mov
sti
ljmp
mov
xor
push
icebp
int3
push
imul
mov
pop
adc
jge
inc
adc
xor
cmp
dec
aad
dec
test
sbb
cmp
push
je
leave
iret
mov
adc
mov
ja
enter
mov
das
and
and
ja
out
int
mov
loope
sub
xor
loope
test
jbe
pop
cmp
xor
test
push
pop
fsubrs
imul
adc
sbb
add
add
imul
xor
add
pop
xchg
loopne
mov
fucomi
adc
sbb
or
mov
add
xor
jl
pop
pop
mov
testb
scas
lcall
jbe
pusha
cs
fnstcw
xchg
loop
scas
nop
add
pop
imul
lods
ljmp
dec
imul
ds
rcrl
mov
adc
jmp
xchg
dec
adcb
dec
aam
mov
pusha
jo
lock
adcb
sub
and
adc
aaa
xchg
lock
xor
push
lahf
inc
jp
xlat
and
jp
push
or
test
pop
lods
in
rep
push
jge
data16
rcrb
and
add
aad
jl
xchg
sbb
orl
mov
test
icebp
adc
fstpl
test
jnp
push
push
push
ret
inc
leave
lret
pop
push
sbb
jns
sub
mov
or
loop
stos
inc
fmull
psrad
jne
cld
dec
push
rdmsr
and
ret
mov
pop
sub
lea
and
mov
mov
cwtl
sbb
movsl
out
xchg
pop
clc
jo
das
daa
sub
icebp
jl
sbb
rep
pop
mov
pop
mov
cld
cmpb
cmp
insl
adc
cmp
xchg
hlt
mov
push
add
add
movsl
inc
movsl
dec
add
test
ret
int3
dec
scas
ds
lcall
inc
loope
shl
out
push
arpl
sub
imul
sub
mov
loop
pop
cmp
sti
enter
xchg
dec
sbb
mov
push
mov
fcmove
outsb
and
mov
push
xchg
xchg
out
and
jbe
andb
mov
dec
add
lds
xchg
add
pushf
nop
pop
xor
mov
ja
mov
std
dec
jnp
pop
cmp
and
outsb
cltd
inc
cmpsl
push
or
inc
std
lret
mov
mov
mov
movsb
movsb
mov
sti
sbb
fstpt
sub
cld
jne
mov
mov
mov
dec
inc
lret
sbb
bnd
andl
mov
adc
mov
pop
das
cmpsl
and
inc
mov
pop
xor
mov
or
int
cwtl
pop
ret
mov
jne
xor
push
mov
loopne
hlt
pop
inc
jecxz
ror
xor
insl
jnp
xchg
mov
decb
or
push
mov
daa
and
xchg
mov
mov
mov
mov
stc
jmp
mov
loopne
push
pop
push
hlt
lret
mov
mov
in
jmp
or
cld
push
sub
jmp
stos
das
icebp
jo
aas
orb
inc
aad
add
int
push
and
cltd
adc
std
inc
pop
mov
insl
popa
push
or
addl
ss
mov
aas
leave
xchg
or
xor
pop
repz
repz
sub
or
movsl
and
jbe
mov
xlat
stc
lcall
mov
imul
push
stos
jle
ret
andb
fdivp
out
stos
push
enter
repz
in
popf
adc
repnz
sarb
jnp
roll
stos
in
paddd
rolb
scas
mov
shl
imul
movsb
mul
repnz
inc
hlt
jl
mov
or
xorb
icebp
mov
adc
inc
cmp
push
pusha
xor
xchg
dec
mov
mov
vpcmpeqd
jge
fs
aam
and
dec
sub
nop
js
icebp
loope
int3
and
dec
inc
ret
lods
dec
pop
dec
icebp
adc
xor
bound
loope
mov
scas
mov
sbb
dec
mov
insb
add
mov
jmp
dec
mov
xor
cmpsl
mov
mov
dec
stos
nop
out
int3
cmpsl
push
stos
cwtl
lods
hlt
inc
pusha
addr16
js
xchg
loop
push
sub
sub
lea
and
clc
mov
push
mov
and
inc
cmovo
lods
outsl
pusha
sbb
cmpsl
jns
aam
push
stc
mov
jmp
mov
mov
arpl
int
sbb
test
xor
fidivs
cmc
scas
push
inc
cmp
notb
xchg
inc
cmp
fadd
xchg
add
or
xchg
arpl
dec
sbb
inc
mov
inc
fldl
sub
push
pop
xchg
call
icebp
or
scas
pop
scas
js
sbb
btc
xchg
sub
adc
add
scas
popa
sub
test
or
dec
scas
push
stos
cmp
or
popa
into
mov
jge
fiaddl
push
ret
pop
sbb
addb
sub
jae
lret
mov
cmpsl
movsl
sbb
int
dec
and
xchg
btr
xchg
jne
fwait
and
dec
mov
not
pop
pop
and
lret
pop
mov
or
xchg
fidivs
dec
jo
add
xor
stos
out
ljmp
sbbb
mov
loop
popf
loop
daa
int3
or
jecxz
fwait
add
mov
or
xor
jge
sub
jp
ss
mov
inc
lea
rcrl
lock
jns
dec
inc
pop
out
std
notl
adc
dec
sbb
leave
ja
cmp
inc
dec
xchg
push
and
fsts
mov
push
push
jle
cmpsb
or
adc
jecxz
mov
adc
mov
lock
cmp
scas
sbb
adc
jge
cmp
add
ficompl
or
push
movsb
syscall
mov
lea
outsl
or
and
outsb
call
mov
lcall
insb
xchg
add
add
sbb
adc
sub
xor
enter
cmp
mov
add
ret
push
test
mov
sub
inc
or
jl
xor
mov
pusha
cli
xchg
out
sahf
mov
lods
fmul
or
aam
fwait
popa
xchg
inc
js
dec
sahf
aas
dec
mov
ljmp
test
xor
fidivrs
jno
lea
cmp
daa
lcall
sbb
lods
aam
adc
mov
jg
gs
popa
lret
add
or
xor
push
adc
mov
add
setbe
jae
cs
movsl
dec
add
cmpl
jl
aam
inc
push
fsts
xor
pop
jmp
sarl
sbb
inc
ret
sbb
push
mov
shrl
in
addb
rolb
push
clc
jle
cmp
mov
into
mov
faddl
inc
mov
inc
push
jl
or
ret
sbb
les
push
mov
nop
push
push
cwtl
dec
jno
enter
xchg
stc
sub
dec
adc
mov
or
pop
dec
icebp
iret
ficoms
loope
add
mov
out
adc
dec
cwtl
adc
popa
ja
xor
popf
cmpsb
inc
mov
scas
jne
js
xlat
lret
js
mov
mov
mov
mulb
int3
push
int3
subl
arpl
mov
daa
or
mov
aam
inc
movsl
xor
inc
mov
into
stos
outsb
out
idivl
cmc
push
in
icebp
push
daa
sbb
jbe
leave
out
push
mov
cmp
inc
mov
in
clc
or
sbb
pavgb
call
rcrb
and
mov
push
mov
mov
inc
js
nop
cmpb
add
and
icebp
js
out
dec
leave
dec
sub
jge
addr16
in
fbld
pop
pop
nop
nop
lea
push
pushf
daa
fs
lret
mov
dec
pop
add
push
fldcw
dec
shl
shr
lret
in
jecxz
enter
xchg
pop
hlt
popa
dec
pop
inc
inc
loope
pop
or
stos
outsb
mov
data16
xchg
pushf
test
pop
cmp
pop
add
adc
int
push
adc
std
outsl
dec
jmp
jb
shrb
xchg
or
inc
sbb
popf
lret
mov
pop
hlt
in
in
inc
popa
lcall
sub
push
push
call
inc
jnp
xchg
jno
mov
mov
scas
icebp
push
sahf
cs
inc
mov
mov
in
dec
loope
in
add
xchg
push
fs
push
in
jge
mov
fcomps
fstl
mov
sub
pop
push
jno
jmp
lods
fs
and
jnp
cmpsb
gs
loope
notb
sti
or
push
ds
inc
cmc
loopne
inc
aam
stc
test
or
inc
push
sbb
sti
repz
mov
aaa
mov
inc
aaa
xchg
sti
inc
xchg
daa
xchg
cmp
cmp
xchg
insl
movsl
add
jnp
cmc
shr
push
pop
movb
aaa
jnp
xchg
adcl
pushf
out
mov
dec
add
rorb
jae
xchg
mov
in
clc
ret
xlat
sti
xor
mov
jmp
insl
outsb
cmpl
push
mov
rcrb
inc
or
mov
das
push
push
xchg
int3
xchg
shrb
mov
std
mov
js
pop
movsl
and
ss
test
or
push
xor
add
popa
jg
or
xchg
pop
clc
inc
into
mov
pop
call
jnp
jbe
sbb
in
or
push
xor
add
clc
add
adc
dec
movsl
sti
inc
nop
lahf
movsb
mov
outsl
popa
dec
sbb
out
repnz
xchg
dec
repnz
jmp
stc
push
jo
mov
add
jg
lret
push
jg
cmpsl
fidivl
cmpsl
ja
jbe
lock
in
push
xchg
call
andb
lds
push
enter
mov
and
hlt
xchg
pusha
pushf
daa
out
leave
orb
fcomp
and
pop
cmpsl
invd
mov
pushf
insl
inc
pop
movsl
test
mov
mov
iret
jmp
and
mov
and
sti
dec
adc
mov
and
ljmp
aaa
xor
pop
jp
jo
adc
dec
xor
call
int
ljmp
add
pop
icebp
mov
cmpsb
and
mov
sti
jp
divb
clc
push
jmp
push
pop
mov
shrl
movsb
mov
ljmp
sub
lret
repz
lret
mov
lods
and
mov
mov
sti
lahf
push
mov
stos
cli
sub
mov
add
fwait
repnz
mov
mov
mov
sti
pop
xchg
xchg
push
and
fimuls
mov
int3
cmp
xor
scas
xor
enter
xor
inc
mov
push
popf
xchg
adc
mov
and
sbb
sub
mov
or
push
testb
mov
call
lods
xchg
inc
lods
sbb
pop
faddl
fucom
arpl
or
jge
mov
pusha
fldenv
mov
dec
out
jae
sub
dec
dec
test
cli
lcall
scas
fldt
ljmp
aas
cmp
or
sub
or
cmc
dec
lret
test
mov
add
inc
xchg
outsb
loope
test
insb
bnd
ret
mov
lcall
stc
mov
scas
cmc
push
in
popf
lods
pushf
pusha
insl
mov
sbb
outsl
lds
ja
add
mov
js
aas
push
inc
or
loope
ror
insb
inc
sub
shr
stc
add
or
mov
mov
pop
out
addr16
jns
daa
cmp
mov
leave
cmp
mov
cmp
jl
adc
jecxz
lods
cltd
jge
in
xchg
sbb
xchg
sbb
xor
pop
or
xor
mov
rolb
xor
jo
scas
push
outsb
xchg
in
sub
fbstp
jns
ud2
and
add
inc
stos
mov
push
push
inc
inc
cmpl
aam
jge
test
stos
cltd
jmp
push
fldt
pop
inc
add
xor
mov
push
imul
pop
out
in
jb
std
push
and
out
in
jbe
jbe
lds
aam
and
rclb
ljmp
test
enter
inc
cwtl
icebp
pop
pop
std
out
fisubl
aas
inc
std
xor
mov
mov
xlat
xchg
es
cld
ljmp
aad
ja
daa
loopne
adc
mov
and
shlb
test
lea
add
outsb
xchg
adc
lret
xor
outsl
mov
jp
lcall
stos
pop
ret
js
pushf
nop
pop
mov
bound
pop
lods
fistpll
sub
adc
orb
cld
cmc
sub
clc
int
stos
ljmp
mov
xor
cmp
xchg
push
mov
jle
ss
lahf
jmp
push
es
mov
push
push
pop
ds
inc
in
repnz
fcoms
out
jb
js
xchg
sti
jo
sub
jge
stos
jp
and
sbb
das
xchg
in
jne
fs
jmp
aam
jmp
leave
lds
gs
test
jbe
repz
int3
sub
je
dec
incl
jecxz
add
and
cmp
pop
and
stos
mov
jmp
jno
call
xchg
fnstcw
stos
push
aad
cmp
rolb
aaa
loopne
outsl
aad
sub
jg
addr16
cmp
mov
fldenv
mov
mov
sbb
jmp
aad
and
xor
stc
insb
ret
mov
mov
sahf
mov
sbb
push
cmp
dec
xor
xor
hlt
xchg
out
adc
call
push
jecxz
dec
lods
mov
dec
xchg
ja
add
push
sbb
lock
xchg
lods
inc
cmp
adc
jo
std
sbb
push
jbe
test
cmp
nop
pop
xchg
mov
sub
ret
jb
sub
test
insb
out
fucom
in
rcll
insb
xchg
push
cmp
std
xor
enter
and
inc
fistps
lret
push
push
sbb
cmpsb
nop
popa
cltd
xor
mov
mov
xlat
and
pop
jno
adc
mov
std
sti
xchg
jl
add
sub
ja
xor
mov
inc
jecxz
xlat
jmp
dec
pop
lret
push
mov
mov
jo
cs
scas
xor
sub
sahf
scas
lcall
or
cmp
dec
push
enter
mov
fsub
shlb
xchg
mov
add
push
jno
sarl
xor
pop
sbb
imul
test
je
iret
push
push
sahf
pusha
fcmovbe
ret
adc
xchg
mov
adc
cmp
out
test
loope
mulb
jmp
in
cmp
icebp
adc
lret
fwait
js
jl
mov
pop
fmuls
xchg
leave
push
scas
popa
sarb
negb
dec
sub
loopne
sub
popl
sbbl
ret
jb
ret
ret
add
mov
ljmp
sub
pop
adc
mov
rolb
and
jmp
adc
into
outsl
leave
cmp
nop
cmpsb
xor
iret
dec
xor
fmul
inc
inc
or
repz
xlat
push
stc
not
mov
inc
sbb
mov
insl
mov
jge
sub
jno
jb
js
sbb
add
scas
test
out
cmpsb
shrl
mov
gs
out
and
shlb
mov
sbb
movsb
mov
shll
cmp
and
xchg
fimuls
add
and
nop
add
push
jl
cltd
jns
dec
pop
mov
push
call
sbb
jecxz
mov
inc
filds
dec
push
and
mov
mov
xor
movsl
lods
lock
or
sub
aad
loop
movsb
test
call
xor
in
test
xchg
mov
popf
call
sbb
test
dec
cld
adc
pop
loop
imul
dec
mov
aaa
push
or
loop
push
aaa
ret
inc
cmp
add
fcmovb
pusha
in
ret
pop
adc
pop
lea
or
push
mov
push
xchg
out
gs
adc
movsl
cmp
clc
mov
popf
loope
mov
jg
cmpsl
jmp
dec
cs
dec
mov
dec
fimuls
enter
and
mov
adc
jmp
lret
or
cltd
mov
ficoml
dec
xchg
data16
jns
in
jge
push
lods
dec
mov
jns
addl
xchg
leave
jb
xchg
xlat
xchg
cli
or
adcb
push
ret
lods
or
movsl
xchg
enter
sub
inc
aam
xchg
aas
hlt
leave
cmpb
lcall
pop
mov
cli
mov
stc
out
outsl
iret
aaa
jb
pop
or
lods
xorl
xchg
jmp
cmpsb
int
popf
cmpsb
dec
into
dec
cmp
leave
psrad
mov
clc
or
lds
fsts
mov
aam
push
ds
xchg
cmp
les
cltd
scas
xchg
or
mov
cmp
push
std
call
mov
aas
loopne
scas
cmp
jecxz
push
hlt
mov
lods
ficompl
cmc
fs
jbe
test
push
mov
dec
je
mov
fistpll
shll
push
stc
cwtl
andb
sbb
push
jg
xor
pushf
and
mov
jns
lcall
in
test
jg
pop
inc
das
mov
inc
int3
popa
jnp
fisubs
adc
add
insb
outsb
pop
xchg
sub
hlt
mov
in
loope
jno,pn
leave
sbb
mov
icebp
dec
rcll
cmpsl
scas
shl
cmp
sbb
out
hlt
dec
and
loopne
lcall
push
sbb
repnz
push
or
mov
rorb
lret
ret
and
ds
mov
test
mov
outsb
push
mov
push
ja
std
in
in
xchg
cltd
aad
ja
fcmovu
mov
add
adc
jnp
arpl
sub
or
pop
mov
dec
ja
mov
outsl
test
sahf
fisubs
fcmovnbe
lcall
ljmp
aas
xor
cmp
inc
out
ret
inc
sbb
shlb
fists
xchg
xor
popf
aad
xchg
das
adc
mov
adc
xor
icebp
or
jb
mov
int
mov
adc
dec
leave
sar
loop
pop
cld
aad
ss
sahf
outsb
dec
adc
int
lret
adc
mov
movsl
or
push
jle
xchg
fidivs
mov
mov
fiadds
clc
sub
push
xchg
inc
and
xor
ret
mov
and
aaa
cltd
xor
in
in
lods
lret
insb
inc
mov
leave
rcrl
xor
or
scas
icebp
out
sti
add
xchg
sbb
and
icebp
and
add
adc
test
push
adc
fs
mov
lcall
stos
pop
les
inc
xor
xchg
mov
xor
pop
fdiv
arpl
in
fsubl
fs
sbb
pushf
adc
lds
add
mov
ja
xor
or
daa
mov
lcall
shrl
xor
stos
enter
xor
dec
push
ret
or
cli
aam
mov
mov
cld
mov
xor
jl
imul
stos
add
mov
fbld
mov
or
fldl
int
outsb
outsl
dec
cmp
jl
imul
adc
push
in
mov
mov
out
jmp
cmp
fidivrs
dec
sub
mov
faddl
mov
push
mov
or
xchg
es
out
jno
ret
xchg
mov
push
loopne
insl
xor
rdtsc
pop
in
sub
push
sub
or
xor
jl
scas
xor
lock
push
test
jae
outsb
lret
mov
ror
ret
loop
mov
or
xor
cmpsl
jg
into
mov
imull
jl
jecxz
scas
leave
fisttps
out
aas
dec
fstpt
fstps
sti
cmp
cwtl
int3
inc
data16
outsl
sahf
loopne
mov
rorl
inc
pushf
pop
mov
dec
stos
add
andb
les
jnp
test
and
out
xor
jnp
aad
sub
mov
adc
inc
mov
pop
add
mov
scas
adc
add
push
les
fwait
sub
xchg
jo
aam
test
mov
push
and
ljmp
fcmovnu
inc
sub
int
pusha
stc
mov
popa
inc
fidivrl
mov
mov
inc
dec
fs
cmp
xchg
adc
int
add
jmp
inc
cmp
fisttpl
pop
or
pushf
mov
test
cmp
add
ret
pop
loop
inc
mov
xorb
xchg
cmp
data16
xor
imulb
pop
pop
mov
xchg
fs
lahf
je
and
ljmp
push
mov
push
dec
xor
addr16
lret
or
scas
popf
jecxz
mov
lahf
mov
int3
mov
pop
mov
fsubl
add
cmp
jg
inc
out
xor
push
scas
outsl
dec
out
xor
stos
sub
and
jl
push
clc
cmp
push
jo
scas
aaa
pop
pop
sbb
xchg
in
in
mov
push
out
mov
or
cmpsl
jp
das
push
jmp
lret
and
xor
jl
inc
cmp
inc
mov
lahf
adc
dec
pusha
aam
cmpsb
lcall
cwtl
mov
dec
mov
pusha
xchg
pop
or
mov
imul
sub
pushf
js
inc
cmpl
sub
adc
inc
dec
lds
nop
int
xchg
sbb
xor
mov
icebp
add
mov
imul
and
xchg
gs
out
dec
hlt
mov
add
leave
mov
adc
enter
jo
je
mov
mov
and
or
idiv
mov
jmp
out
jno
mov
insb
mov
out
lret
mov
jbe
push
jecxz
out
push
pinsrw
sub
call
and
int
cwtl
xor
mov
push
fldl
cmpsb
sbb
sahf
out
and
nop
data16
les
mov
lahf
pop
ret
icebp
fwait
js
adcl
cmc
inc
dec
mov
test
out
dec
or
pop
imul
shll
xchg
jl
sub
enter
into
shrl
cmp
sarb
movsl
insb
adc
lcall
inc
std
push
xchg
jnp
or
loope
mov
pushf
mov
fiaddl
pushf
pop
cltd
gs
xor
pop
mov
mov
jbe
xorb
pop
pop
cmp
pop
cmp
sub
mov
clc
scas
xchg
sub
or
outsb
and
sbb
cmp
mov
push
cmpb
or
ret
js
xchg
xchg
ret
pop
push
roll
adcl
push
lods
xchg
js
or
dec
add
adc
repnz
data16
mov
in
sbb
inc
mov
add
gs
dec
ljmp
out
out
lahf
pop
cwtl
out
cmp
adc
dec
cs
lret
jne
xchg
lret
jge,pt
adc
jge
mov
mov
das
aam
mov
pop
stos
or
imul
add
pusha
in
imul
push
mov
out
scas
sarb
jle
cmovnp
mov
mov
hlt
js
xchg
mov
rcr
jmp
xchg
pop
in
movsb
scas
xlat
inc
cmp
mov
in
or
nop
in
inc
sub
or
lods
std
test
dec
imul
inc
pop
lds
push
dec
ja
cmpsl
xchg
push
icebp
inc
mov
pop
push
jl
sti
push
pop
fcomps
pop
and
inc
das
xor
mov
fstpl
mov
nop
in
addr16
mov
pop
xlat
in
out
mov
std
jmp
sarb
in
jge
pop
or
scas
roll
gs
insl
rorl
hlt
ret
jno
mov
adc
scas
xor
out
inc
push
mov
dec
mov
lcall
xor
popa
mov
sbb
bound
out
sahf
add
insb
add
inc
loope
in
out
pop
enter
loopne
mov
cs
mov
cmp
dec
and
push
xor
add
ret
push
daa
adc
mov
sbb
cld
sbb
mov
icebp
call
cmpsl
and
in
aaa
sbb
outsl
push
dec
sbb
add
sbb
jno
cmovns
shlb
mov
cltd
cs
rolb
push
adc
addr16
loop
pop
fcompl
fisubrs
adc
into
das
ljmp
das
imul
ja
ret
sub
and
pushf
sbb
dec
dec
lds
mov
rcrl
sti
mov
sub
ljmp
pop
js
inc
fists
sub
addr16
jae
shll
lcall
popa
popa
mov
js
dec
not
stos
sbb
cmpsb
in
out
xor
fwait
push
out
pop
ret
popf
and
ss
jb
push
aam
out
xor
sarb
jecxz
lretw
ljmp
jmp
addr16
lods
inc
inc
cmp
shlb
pop
jae
ja
adc
cmpsl
repz
pop
test
loope
popa
div
out
pop
xor
test
push
sub
pop
cld
and
or
pop
mov
int
mov
adc
mov
xor
push
mov
imul
lret
lock
and
shlb
inc
aam
push
test
test
clc
inc
popa
push
les
sbb
mov
push
incl
jnp
pop
int
sbb
jge
cwtl
movsb
mov
repz
dec
lods
mov
cmp
mov
mov
in
cmp
cli
aaa
xorb
into
pop
movsb
mov
scas
xchg
xchg
mov
lea
adc
out
pop
pop
xor
pop
cmpsl
cmc
orl
sub
sbb
dec
pop
push
or
fisttps
jmp
es
int3
jle
mov
xor
std
ss
jo
push
mov
lock
inc
sbb
sub
cwtl
push
jb
ret
jp
xlat
js
les
sbb
add
push
addr16
or
imul
and
and
mov
adc
pop
in
adc
aad
mov
mov
dec
inc
mov
mov
adc
jl
aaa
dec
test
ja
pop
int3
ret
and
loop
push
jno
sub
push
pop
shrb
jo
cs
test
orb
pop
or
xchg
cwtl
or
flds
mov
push
inc
addl
mov
jecxz
pusha
mov
or
outsl
xchg
les
mov
xchg
lods
mov
xor
push
mov
nop
cltd
sbbl
ret
xchg
mov
xor
pop
in
fs
add
inc
stos
mov
sahf
and
xorb
xor
fiadds
mov
xchg
lret
js
sub
push
aad
or
or
add
lds
icebp
cltd
aam
mov
cmc
addl
mov
dec
inc
push
mov
arpl
insl
or
adc
jg
cmp
xchg
mov
or
cmp
incl
sbb
sbb
test
sbb
and
loop
mov
into
aaa
popf
or
fldl
popf
ljmp
lahf
push
pop
add
dec
dec
jmp
dec
mov
dec
in
push
adc
into
fldenv
lods
out
lret
and
push
cld
fcmovbe
cs
movsl
cmp
mov
out
in
ja
push
dec
xor
xorl
lcall
mov
mov
stos
xor
push
xchg
test
mov
outsl
fmull
dec
xchg
sbb
push
pop
in
movsb
movl
push
out
jle
jmp
jne
adc
mov
imul
movsb
loopne
in
jl
cwtl
sub
inc
movsl
cli
cli
mov
push
repz
adc
push
jbe
lea
jmp
testb
iret
mov
in
or
aad
outsb
jle
adc
imul
es
push
lods
roll
iret
add
shrl
repnz
mov
test
incl
adc
negb
repnz
scas
jno
dec
mov
xchg
xchg
repnz
jmp
xchg
mov
movsl
call
cld
movsb
repnz
je
loop
ficompl
dec
inc
pop
inc
push
nop
imul
jecxz
xchg
jp
xor
and
stc
jecxz
bound
push
xor
mov
ss
mov
sti
sub
dec
loop
das
outsl
pusha
xor
out
into
mov
test
sbb
or
jl
out
pop
and
cwtl
or
movsl
movsl
scas
lahf
movsb
or
add
popw
nop
lahf
push
sub
add
sahf
mov
std
rclb
mov
xor
push
jg
cmp
dec
mov
test
inc
or
sub
jbe
push
push
cmp
repz
or
shlb
in
loope
ficomps
or
and
sbb
mov
jns
stc
pop
mov
mov
and
xchg
mov
mov
popf
sub
push
es
add
or
xor
mov
adc
lods
push
sbb
lret
xorl
xchg
sbb
dec
out
popa
repz
out
and
outsl
push
insl
in
scas
pop
push
mov
sbb
int
pop
cmc
lods
xchg
inc
adc
mov
out
lret
stos
inc
out
xchg
les
bound
mov
ret
jnp
lock
push
mov
jle
jg
out
imul
lcall
sbb
jns
xor
int3
adc
mov
dec
xchg
lcall
mov
xor
scas
add
ret
xchg
ljmp
aam
pop
fisubrl
pop
js
mulps
mov
push
lds
xchg
add
shll
cwtl
lods
add
outsb
insb
sub
adcl
sbb
sub
insl
cmp
inc
ror
xchg
bound
jl
outsb
cmp
inc
fs
mov
aam
adc
cwtl
add
push
mov
shll
push
fwait
xor
jp
mov
fisttpll
sbb
mov
ret
adc
inc
xchg
xchg
sub
jo
pop
pop
aaa
stos
push
add
cmc
sub
lock
sbb
cmpsb
sub
lods
sbb
xchg
xor
fwait
push
jb
pusha
inc
add
cmp
inc
jp
lods
popa
and
into
mov
pop
xchg
insl
adc
mov
mov
adc
add
repnz
test
ja
or
sarl
pop
cmp
sub
push
adc
inc
cmp
mov
cli
sbb
int
xor
rcrb
iret
and
in
loop
push
pusha
arpl
jmp
jecxz
sahf
adc
pop
inc
adc
dec
lock
or
pusha
fsubrs
mov
ljmp
cmc
sti
jmp
repnz
cmp
mov
sub
adc
sub
dec
xor
hlt
jg
es
mov
stos
outsl
sub
mov
mov
sahf
aaa
es
test
daa
dec
es
out
popf
ret
mov
flds
inc
ret
mov
sbb
out
push
mov
daa
stc
push
pushf
push
mov
cld
aam
iret
outsb
clc
and
mov
imul
pop
mov
mov
cmpsl
nop
sbb
popf
push
aaa
push
xchg
add
jp
or
pop
dec
not
fcmovb
push
fs
mov
out
cli
xlat
cld
sub
ja
stc
mov
popf
cmpsl
std
out
mov
xchg
push
cmp
sub
adc
lock
xchg
in
adc
int3
ret
mov
add
out
jecxz
stos
frstor
fsubl
and
dec
subb
sub
push
push
std
ficoms
fistps
fwait
xchg
aaa
cmp
cmpsb
xchg
push
xlat
or
dec
mov
fimuls
inc
fcmovu
iret
bound
roll
push
jmp
ret
imul
arpl
loop
int3
xorb
xor
pop
lcall
xor
add
cmp
scas
cmp
cmp
or
mov
test
std
mov
xor
add
jno
cmpsl
xabort
jl
sub
mov
cwtl
cmpsl
sbb
jno
pop
inc
in
ljmp
ret
add
and
je
inc
and
jmp
leave
fs
sbb
cmpsb
cmp
test
jae
dec
xorl
repz
jmp
fstps
clc
fidivl
popa
sbb
pop
dec
inc
mov
movsl
inc
pusha
das
sub
mov
or
stc
sub
fcoms
pop
sbb
pop
xor
mov
push
jo
xor
ret
jnp
mov
out
orl
sbb
add
xchg
mov
hlt
mov
jo
sbb
pop
imul
mov
cs
mov
mov
sbb
push
sub
mov
inc
mov
sub
mov
sbb
ss
cmc
cmp
vpacksswb
test
cld
pushf
mov
jns,pn
adc
mov
jmp
fmulp
call
lds
shlb
int
and
dec
bound
cmp
cmp
shlb
inc
push
mov
out
cld
mov
out
aam
into
dec
cld
mov
push
push
jmp
push
in
lock
cwtl
out
inc
cmp
sbb
loop
or
shlb
jmp
lock
negl
imul
leave
lea
lret
sub
mov
sahf
fucomp
xchg
push
movl
sbb
adc
dec
push
and
sbb
hlt
jno
rolb
subb
lock
xchg
xor
xor
orl
nopl
push
and
mov
xchg
cmp
fmulp
jl
sti
call
rcr
push
push
mov
out
repz
es
push
sub
js
ret
lods
xchg
or
inc
adcb
lea
ljmp
repnz
mov
lock
mov
test
mov
ficompl
jbe
cmp
fidivs
cmp
shrl
and
inc
pop
xor
pop
mov
adc
in
jmp
jmp
int
lds
and
xchg
xor
jo
pmulhw
out
ljmp
mov
cmpsl
dec
pop
cmpb
mov
mov
push
adc
addb
insb
incb
push
in
add
push
sub
xor
push
ljmp
jp
add
cltd
push
xor
mov
mov
inc
cmp
sub
jo
stos
xchg
mov
jns
add
push
ret
sbb
push
inc
cwtl
test
jge
cmp
stos
out
imul
dec
jmp
daa
push
dec
mov
aas
mov
sub
jp
fs
sbb
cwtl
push
mov
test
stc
xor
pop
ret
movsl
push
gs
xchg
and
cmp
and
les
cmc
xchg
mov
mov
pop
jecxz
sub
rcrl
or
cld
xor
hlt
push
and
mov
pop
addr16
inc
mov
out
stos
sbb
in
xor
pop
int3
push
cmp
mov
inc
xor
ja
fnstcw
xchg
mov
push
jne
cli
cmp
fmull
mov
nop
pop
adc
lret
or
push
mov
mov
outsb
test
jne
sbb
jne
pusha
jl
rclb
fwait
add
out
out
call
sahf
sub
mov
shll
jl
and
inc
test
ret
inc
sbb
add
mov
cmp
xchg
pop
pusha
sub
ss
sbbl
imul
inc
cmpl
cmc
mov
ret
push
movsb
sub
pop
adc
jns
fisttps
dec
sub
mov
sub
push
push
inc
or
push
push
push
dec
test
pop
sub
jbe,pn
sub
outsl
sbb
popf
loope
sti
ljmp
sub
shlb
and
push
rolb
xchg
lcall
dec
jp
loopne
das
test
lods
push
mov
dec
aas
push
xchg
add
or
xchg
inc
aam
sbb
arpl
lcall
les
std
mov
nop
pop
sbb
mov
scas
std
shlb
pop
cmp
cmp
cs
or
xor
sub
mov
lahf
pop
jmp
mov
adc
dec
jge
push
sbb
js
gs
sub
sub
lahf
mov
pop
cmp
je
arpl
cmp
jecxz
jo
orl
xlat
out
pop
iret
mov
in
fwait
in
mov
cs
addr16
and
mov
inc
adc
inc
add
push
xchg
fbstp
mov
scas
jno
leave
shrb
adc
sbb
mov
jbe
mov
jne
jge
push
mov
outsl
or
xchg
lock
and
test
icebp
add
push
inc
sbb
into
push
cli
jecxz
and
and
test
cld
pop
ljmp
cmp
std
inc
cs
mov
data16
or
mov
xchg
in
idivb
adc
movsl
pusha
arpl
shlb
xchg
jecxz
adc
cld
pop
push
fsts
mov
dec
ret
hlt
hlt
inc
push
pop
sub
scas
divl
sub
notl
ja
icebp
test
fiaddl
mov
in
cmpsl
inc
jbe
sub
cli
and
inc
or
xchg
test
test
jl
in
jne
ds
pop
sub
sarl
and
pop
mov
sub
loop
mov
xchg
inc
xchg
mov
push
les
fidivrs
out
es
push
nop
repnz
aad
ljmp
xchg
mov
lods
add
fdivr
mov
imul
outsl
or
add
bound
or
shlb
scas
bound
out
inc
add
add
insl
xor
sub
mov
lret
add
cmp
sarb
dec
xchg
call
es
mov
and
add
pop
test
movsl
gs
jb
pop
mov
push
add
jg
gs
or
cld
xchg
mov
arpl
cmpsl
movsl
cmp
jne
insl
cltd
adc
cltd
jb
pop
leave
push
pop
cmp
int
pusha
inc
mov
mov
ljmp
fnstcw
mov
ljmp
jb
aas
idivl
sub
repz
and
pop
push
jo
ja
loop
mov
adc
jge
lods
pop
dec
sub
sub
inc
mov
test
pop
sbb
inc
cld
adc
push
jae
scas
inc
aaa
jge
or
ror
cmp
add
lods
sub
sub
loopne
gs
ret
outsb
jl
fisubs
cmp
or
jns
fldt
or
popa
fsubrl
cmc
pop
dec
sbb
inc
pop
mov
dec
cmp
pop
stos
cmp
push
sub
into
je
fildl
pop
incl
xchg
sub
clc
xor
das
xchg
jge
in
adc
cmpsb
xchg
push
mov
clc
pop
test
dec
insb
fadd
jne
inc
bound
loop
icebp
enter
hlt
popf
and
sti
stos
inc
jmp
subl
hlt
adc
into
sar
emms
mov
sub
xor
push
lock
mull
mov
iret
xchg
lahf
mov
cwtl
dec
stos
xchg
ja
orb
and
pop
mov
rcll
adc
aad
cmc
pushf
loop
scas
inc
mov
and
or
nop
pop
stos
lret
and
fs
ret
push
into
decb
outsb
mov
cmp
movsl
mov
pop
dec
sbb
hlt
pop
sub
icebp
and
push
jmp
adc
dec
sub
adc
jb
xor
iret
add
lods
divl
repz
adc
add
sbb
ljmp
insl
scas
push
cmp
mov
clc
jne
pop
cmpsl
mov
incl
dec
push
loopne
or
ds
push
enter
mov
pop
adc
mov
push
cltd
mov
in
or
dec
xchg
adc
push
mov
mov
inc
adc
cmc
in
idivl
icebp
or
or
cld
sbb
jo
mov
add
out
or
lods
cmpsb
add
sti
dec
add
mov
cmpl
in
out
sbb
sbb
mov
xchg
inc
inc
xor
stos
mov
xlat
and
orl
mov
add
push
es
lcall
repnz
jne
sbb
cmp
sahf
and
jmp
sbb
dec
repz
insl
bound
dec
push
push
mov
das
mov
xlat
pushf
mov
stos
test
pop
dec
imul
sahf
clc
mov
pushf
pop
sbb
lock
popf
cmp
adc
and
popa
mov
jnp
imul
xchg
push
cmp
neg
sbb
mov
loope
scas
xlat
out
fsubrl
out
xchg
sub
inc
stc
ret
lods
sub
cwtl
cld
notb
in
cmpsl
sbb
inc
push
ret
ret
jp
inc
cmp
in
add
xchg
mov
fsub
dec
dec
dec
adc
jmp
xor
std
stc
das
ret
jl
jne
or
sbbl
sub
mov
cmp
sbb
add
xchg
fsts
inc
cmc
xchg
sbb
or
lods
and
lods
fldcw
lds
shll
call
push
dec
or
push
jb
clc
sbb
mov
fisubl
in
mov
nop
inc
mov
adc
add
aaa
ret
jbe
lcall
add
push
cs
mov
mov
xchg
sbb
push
cltd
pop
jmp
inc
hlt
loope
call
lock
popa
push
xchg
fcomip
cli
xchg
mov
lock
or
mov
add
bound
cs
roll
mov
add
cmc
fsubrs
xchg
add
push
pslld
pop
and
fcoms
scas
loope
and
fildl
cmp
mov
mov
loopne
push
xlat
push
push
sbb
mov
pminub
cmp
aam
cli
mov
mov
test
inc
outsl
filds
lods
mov
xchg
mov
cmp
jmp
xlat
adc
adc
cmp
sub
es
push
sub
sbb
jge
mov
cli
add
stos
dec
add
adc
fcoml
mov
mov
in
inc
push
push
imul
or
js
sti
xchg
sub
cmp
fidivs
test
int3
mov
icebp
out
int3
or
xchg
jmp
out
in
cmpl
movl
popf
cld
sarl
and
in
mov
mov
test
push
jle
addr16
ret
imul
js
sbb
adc
sbb
sbb
gs
ljmp
pop
add
outsl
fmuls
loop
rcrl
jb
sbb
popa
stc
pushf
ret
aaa
cltd
push
mov
rol
leave
insl
and
mov
mov
cs
sti
jne
lret
jge
cmp
sbb
mov
test
jno
xchg
dec
or
cmp
mov
test
inc
fisttpll
popa
mov
fucom
lahf
xchg
int
lcall
jno
repnz
add
aaa
xchg
dec
pop
repnz
add
push
dec
es
lock
mov
adc
mov
xchg
inc
in
dec
adc
add
vpmullw
in
cmp
inc
out
add
sub
aaa
mov
adc
std
lods
fstps
pop
inc
imul
xlat
imul
ja
cmp
stos
pop
or
pop
add
clc
and
xor
call
sub
popf
jecxz
sahf
out
in
push
or
mov
pop
lock
add
mov
cmp
or
sub
mov
mov
xchg
into
inc
xlat
adc
lahf
in
mov
loope
es
nop
les
jne
inc
nop
stos
sub
jg
mov
fstl
lret
bound
lods
jo
mov
adc
movsb
cs
dec
mov
jmp
add
in
cli
push
pop
inc
orb
lds
jnp
aad
pop
xor
js
fnstenv
aam
add
jecxz
popa
jnp
data16
test
mov
xchg
dec
out
sbb
std
leave
pop
int
add
in
adc
fwait
adc
cwtl
out
xchg
in
push
add
pop
mov
test
lret
cmp
test
lods
movsb
lods
dec
pop
stos
and
das
adc
orb
or
push
fcmovb
add
or
jmp
lahf
out
jbe
hlt
div
int
popa
inc
push
push
sti
dec
in
aas
sub
in
add
rclb
test
dec
mov
nop
add
loope
loopne
data16
add
dec
jp
popf
xchg
pop
xchg
mov
rclb
pop
aam
push
fildl
inc
adc
mov
dec
ret
pextrw
add
push
aaa
pop
mov
pop
mov
iret
das
cmpsb
sbb
jo
jecxz
xchg
das
sub
cli
dec
mov
xor
sbb
mov
lahf
mov
dec
movsb
stos
mov
pop
test
sbb
jge
int3
add
lcall
shrb
push
mov
mov
dec
xchg
cmp
add
pop
std
in
sub
xchg
dec
sub
xchg
int
icebp
cmp
xor
pop
pop
fstpl
ret
xor
test
ret
in
aad
data16
sbb
cmp
in
dec
leave
shrb
addr16
push
mov
sbb
leave
and
aam
sub
daa
or
inc
mov
inc
inc
ds
rclb
icebp
test
mov
mov
xchg
push
imul
lahf
pop
add
adc
loopne
outsl
in
cmp
adc
adc
fs
inc
mov
sub
xchg
push
sub
andl
push
fmul
push
test
push
shll
decl
mov
mov
lea
and
mov
adc
notb
out
insb
push
jnp
sbb
xor
mov
pop
sarb
arpl
popf
cmp
test
jae
pusha
js
adc
mov
inc
cmp
filds
lahf
push
cmc
mov
notl
stos
or
xor
mov
mov
mov
xor
cli
mov
cs
outsb
jo
roll
lahf
pop
or
xstore-rng
cmpsl
add
adc
or
and
dec
lahf
ljmp
movsb
loope
mov
inc
lahf
iret
loope
out
xchg
gs
lds
stos
jb
cmc
das
fwait
leave
and
lock
insb
rcll
scas
rorb
mov
aas
aas
mov
sbb
popa
mov
mov
call
int
and
push
sete
lods
icebp
add
stos
mov
sbb
jne
adc
enter
imul
lds
repnz
inc
pop
je
sbb
cwtl
xor
cs
rcrb
js
cld
cmp
ret
cmp
dec
mov
cmc
lock
out
inc
or
mov
enter
push
scas
xchg
lods
cmc
cmp
jmp
cmp
adc
outsl
scas
lahf
adc
cs
mov
stc
pop
lahf
les
or
sbb
sub
fwait
int
stos
les
adc
sbb
scas
cli
dec
sti
xchg
push
lahf
out
in
sub
ret
imul
and
je
lods
ret
sub
bound
rorb
jmp
push
pusha
inc
jae
das
ret
pop
outsb
push
scas
jo
cmpsl
fildl
pop
mov
lret
mov
xchg
scas
enter
out
imul
mov
mov
inc
lods
imul
es
ds
or
mov
iret
cmp
sbb
cwtl
sahf
arpl
stc
jmp
sbb
push
xchg
hlt
add
pop
fwait
push
ss
enter
jnp
sub
int3
pop
or
inc
pop
outsb
cmp
daa
mov
negl
push
mov
cwtl
icebp
lods
inc
inc
cmp
xor
mov
lahf
xchg
sahf
sub
or
push
and
cmpsb
lret
cmp
cmp
push
out
ds
test
in
lods
xor
push
xchg
xchg
int
lahf
adc
rorb
imul
imul
aas
repnz
dec
divb
inc
lods
daa
mov
pop
sbb
test
sub
andb
xchg
xchg
mov
cmp
insb
je
cmpsl
stos
les
pop
jmp
or
mov
or
scas
popl
in
aad
out
es
pop
xchg
mov
popa
or
add
adc
pop
loope
adc
mov
mov
movsb
xor
mov
fdivl
mov
in
mov
or
sbb
push
int
inc
fsubrl
ja
dec
add
ret
cmpsb
imul
pop
imul
mov
cmpl
mov
push
dec
insb
cmp
les
pop
les
jge
push
push
add
jecxz
cmp
jae
out
mov
lock
in
push
das
fdivl
fstl
call
mov
imul
mov
dec
xor
leave
and
loopne
push
hlt
or
mov
sub
or
pop
nop
addr16
and
jae
stos
inc
xor
xor
inc
lds
in
xchg
roll
and
fmull
lahf
sub
dec
push
imul
and
cmpsb
iret
cwtl
sub
jo
repnz
pusha
cmp
clc
adc
push
cmp
or
sti
hlt
pop
and
lret
cmp
inc
jnp
movsl
enter
push
int
ja
lahf
lods
mov
scas
jnp
mov
adc
sub
movsb
inc
pop
mov
repz
lahf
pop
sbb
mov
cmp
mov
mov
sub
insb
imul
add
pusha
push
mov
stos
xor
pop
in
loope
jno
mov
and
mov
mov
out
ror
dec
jp
xchg
xchg
stos
sub
mov
les
mov
xor
lcall
loope
icebp
push
sbb
lods
xchg
lods
out
sbb
clc
pop
jmp
mov
shll
jbe
bound
sub
inc
incl
test
and
push
lea
xchg
mov
jns
push
mov
rcrl
icebp
inc
nop
pop
call
jp
movsl
lcall
js
xlat
push
mov
inc
sub
jno
cmpsb
dec
pop
mov
jae
out
dec
ja
push
or
js
stos
and
or
leave
sbb
ds
ret
lahf
inc
jg
in
sbb
cmp
orb
lock
outsl
add
sti
xchg
loope
fcomps
cmp
loope
cmp
popf
sbb
sub
ret
mov
mov
aad
xchg
mov
call
xor
mov
pop
arpl
fwait
and
out
sbb
ljmp
pop
pop
add
fstpl
inc
cmp
sbbl
xchg
cmpsl
das
add
push
pop
int3
shlb
jo
add
cmc
scas
outsl
test
jo
movsb
lret
mov
jecxz
jp
aas
add
pop
mov
aaa
aam
adc
xor
fisubl
shll
arpl
pop
clc
sub
cwtl
in
pop
inc
mov
add
mov
repnz
adc
insl
fstpt
out
dec
jne
mov
lea
jbe
mov
std
inc
and
jmp
pop
or
adc
push
dec
ds
and
cmp
lock
mov
adc
add
mov
mov
ja
repz
jo
cmpsl
in
popl
leave
mov
add
sub
sbb
pop
pop
shrb
je
cmp
ljmp
inc
dec
adc
mov
cli
pop
rcr
shll
adc
and
sub
push
dec
mov
testl
mov
out
arpl
xlat
insl
or
mov
pop
popl
ret
and
or
or
inc
mov
or
mov
push
pop
repz
jle
sub
mov
pop
push
sahf
mov
mov
xor
cmc
xor
cmp
pushf
call
mov
push
je
pop
xor
cmp
incl
insl
push
sub
dec
mov
jmp
lds
shlb
aad
jecxz
push
daa
push
cltd
movsb
lret
mov
test
mov
fwait
mov
pop
pop
jnp
push
rorb
ret
repz
fistps
jb
push
sub
inc
sti
mov
imul
push
repz
sub
ss
jns
aad
ret
ds
inc
xor
icebp
gs
or
lret
imul
or
test
lret
js
ds
sbb
cmp
sbb
jne
and
sahf
inc
mov
sbb
dec
loopne
jp
pop
sbb
ds
lea
cmp
js
inc
add
add
mov
aas
xchg
jp
and
call
dec
pop
push
mov
jmp
xor
sbb
inc
pop
sbb
dec
movsl
rclb
push
cmpb
shr
push
in
cmp
and
imul
cld
ds
xchg
and
data16
mov
pop
sbb
aad
fs
sarb
jae
push
xor
push
dec
cmp
mov
stc
fwait
stc
jbe
cli
out
iret
jne
jnp
and
push
add
cmp
mov
aas
fucomip
fdivs
mov
add
shll
mov
nop
add
pushf
hlt
sub
xor
repz
lock
fwait
cltd
and
jl
and
adc
inc
or
dec
fisttps
fsts
push
and
push
in
jnp
dec
cmp
cmc
pop
mov
pop
jns
adc
mov
pusha
sbb
push
inc
pop
addl
pushf
inc
jns
rcrl
lock
lcall
int
outsl
filds
jnp
out
push
cmpsb
pslld
xchg
je
movsl
test
jmp
mov
xor
stc
sbb
xchg
cli
mov
sub
mov
cmpb
fsub
add
xor
pop
inc
dec
push
enter
cli
in
add
mov
adc
or
push
mov
mov
jbe
je
jle
push
test
stos
movsl
cs
fldenv
and
cli
stc
cwtl
sub
cmc
stos
aaa
repz
or
push
jbe
data16
mov
sub
mov
cwtl
loope
clc
lods
cmpsb
cmp
and
cmp
adc
push
jo
outsb
testl
lret
and
dec
jp
xchg
adc
and
xchg
lods
xor
push
adc
pop
pop
inc
das
jp
es
popa
sbbl
shrb
icebp
into
int
daa
stos
pop
sbb
sbb
stos
iret
jbe
or
icebp
pop
stos
xor
testl
dec
rcl
mov
roll
aaa
flds
xor
pop
mov
xor
xor
out
in
or
out
neg
pop
mov
sarb
cmc
sub
lods
dec
dec
hlt
cmpsb
and
stos
enter
sub
sbb
sbbl
lods
test
pop
sbb
mov
sub
les
mov
mov
ds
enter
sbb
xor
adc
xlat
add
xchg
pushf
mov
orb
adc
hlt
mov
jmp
ss
add
and
lds
popf
lock
js
call
in
sub
shlb
mov
cwtl
les
push
outsl
scas
insb
shll
lcall
jp
and
in
nop
repz
mov
sar
loopne
adc
repnz
and
inc
dec
cmc
lret
mov
imul
mov
sub
leave
repz
cmp
outsb
push
rorb
stc
inc
and
ret
mov
hlt
mov
loop
and
cmp
dec
sbb
mov
fisubrs
fbstp
lea
stos
enter
cltd
test
cmp
dec
mov
or
addl
pop
fstpt
sahf
lahf
test
lods
and
repnz
adc
jns
push
dec
data16
mov
stc
mov
pop
cltd
cld
pop
mov
int3
sarl
popa
mov
aam
jne
xchg
mov
xchg
xor
icebp
push
mov
aam
fstps
rcl
fildll
add
pop
mov
repnz
pop
ja
dec
xchg
lea
addr16
hlt
xchg
ret
lret
cmc
pop
mov
mov
lret
addr16
lods
imul
int3
dec
in
movsb
and
call
enter
test
dec
pop
pop
test
mov
shrl
shlb
iret
paddsw
loopne
jnp,pt
mov
cmp
xchg
sbb
mov
push
inc
stos
mov
xor
stos
leave
sahf
jg
lret
jne
jmp
ret
cmpsb
and
dec
mov
fsubl
sub
mov
add
and
in
xor
insl
cwtl
jmp
sbb
jl
lret
es
fldcw
sub
xor
icebp
ret
or
jb
jmp
inc
loop
loopne
decl
xchg
mov
jp
jnp
sbb
sub
push
iret
cltd
adcb
xor
dec
into
movsb
jecxz
rorb
nop
mov
roll
cmp
and
adcb
out
dec
xchg
ret
cmpsb
push
and
inc
add
push
std
adc
decl
adc
sub
xor
add
push
cli
nop
mov
jmp
pusha
inc
dec
in
and
cs
xchg
jmp
lds
mov
dec
iret
cmp
test
pop
jnp
je
das
adc
sbb
dec
lcall
cmpsl
inc
aad
scas
xor
loope
cld
mov
xlat
push
hlt
insl
js
rcrl
adc
fidivrs
ds
mov
sub
imul
inc
popf
adc
push
ficompl
stc
subl
jne
lret
xchg
fiadds
or
jb
adc
add
in
gs
add
sub
scas
sbb
cmp
hlt
and
mov
cmp
nop
mov
inc
popf
fists
sbb
lea
sub
fs
adc
or
mov
sbb
scas
mov
out
ja
and
xchg
gs
out
nop
pop
xchg
cmp
inc
bts
xchg
cwtl
dec
cmc
scas
pop
aaa
int3
dec
filds
mov
sbb
pop
push
or
cli
dec
iret
fmulp
test
push
ror
out
lock
push
imul
mov
adc
mov
inc
xchg
jecxz
sbb
mov
push
xchg
inc
cs
inc
test
divb
cmove
xchg
int
xor
jne
xchg
mov
push
sti
lock
imul
cmp
adc
cwtl
popa
dec
int
xlat
cmp
pusha
xor
sbb
enter
jnp
das
ret
mov
adc
movl
fnstenv
push
or
pop
gs
icebp
mov
mov
add
xor
call
loope
sarl
mov
cmc
sti
cmp
mov
into
in
mov
test
pop
arpl
mov
xchg
int
aas
insl
imul
adc
addl
repnz
pop
xor
cld
cli
inc
mov
sbb
push
cwtl
inc
aas
jb
in
fldenv
cmp
mov
aad
inc
sub
jns
mov
aaa
stos
mov
lret
sub
in
adc
in
and
pop
jecxz
stos
das
xor
pop
jmp
pop
popa
aam
scas
pop
leave
adc
lret
jl
xchg
add
loopne
cltd
incb
aad
aaa
imul
repz
popa
ljmp
js
dec
sbb
push
pop
insl
mov
in
or
lret
xorb
loop
mov
movl
ja
or
inc
fimull
jo
test
out
jmp
add
pop
inc
cwtl
inc
daa
sbb
xlat
aad
xchg
inc
adc
fdivrl
pop
xchg
add
or
shll
shlb
leave
scas
inc
ror
aaa
popl
aas
repz
ss
inc
test
movsl
subb
adc
xlat
sub
pop
sti
cmp
ret
outsb
jl
and
aam
and
rcr
repz
jbe
push
gs
jg
jmp
sti
ja
aas
andl
add
ja
adc
jno
lret
cmpsl
lods
stos
sti
jne
fadds
lds
xchg
repz
les
xor
movsb
lcall
lcall
in
cli
jns
and
repnz
jbe
jns
test
neg
push
lea
xorb
movsl
out
outsl
out
out
outsl
dec
or
adc
mov
fwait
and
int3
pop
iret
jmp
enter
pop
jmp
mov
test
lea
add
push
sub
mov
psubusw
shrl
sbb
vmovdqa
mov
mov
into
fstp
push
fadd
rcrb
cltd
push
adc
and
pop
xchg
das
adc
imul
ljmp
cs
jnp
xor
insl
jmp
dec
sub
fdivrl
jecxz
movsl
popa
punpckhdq
xchg
cmp
mov
aas
insb
or
push
loope
addr16
mov
mov
fisubs
enter
jecxz
gs
sub
adc
or
sbb
push
aad
out
daa
les
or
inc
or
incb
mov
lcall
push
inc
aaa
inc
sarl
cmpsb
sub
imul
imul
sub
push
gs
mov
fstpt
xchg
or
jbe
xchg
jge
in
leave
and
and
repz
das
jmp
sbb
or
xchg
inc
fisubrs
out
fildl
test
jne
scas
mov
repnz
ds
xor
fstp
inc
inc
roll
mov
cmp
mov
push
mov
fwait
cwtl
add
dec
loope
das
cmp
mov
ret
push
pop
push
sbb
popa
cmp
sbb
add
dec
in
in
hlt
dec
sub
mov
or
shll
lds
add
mov
jne
jecxz
push
hlt
xchg
bound
sbb
ja
xor
or
mov
jmp
inc
test
fstpt
mov
inc
arpl
xor
push
push
jbe
enter
test
shll
pop
mov
roll
repnz
jb
arpl
cmp
xchg
or
add
cmp
lret
push
pop
inc
fs
inc
jns
cltd
dec
inc
mov
fcmovb
add
fcoml
repnz
in
add
icebp
and
repz
int3
mov
xor
dec
lods
inc
in
xchg
mov
aas
or
cmpsl
sbb
push
pop
shl
les
cmp
pusha
insb
test
mov
les
jae
addr16
mov
repnz
inc
jo
mov
aas
icebp
jle
mov
xlat
pop
xor
imul
sbb
or
fwait
std
lods
jae
fnstenv
dec
dec
repnz
pop
les
adc
mov
test
pop
cs
scas
mov
decl
gs
movsb
mov
pop
mov
loop,pt
sub
jl
fs
bound
lock
ja
mov
jne
cwtl
iret
imul
add
aad
cmpsl
adc
lea
lcall
shrb
and
inc
bound
test
lea
cld
aad
or
sbb
mov
rcrl
out
rcr
pop
and
push
pop
xchg
ret
ljmp
sub
pop
adc
aad
test
cmp
mov
pushf
pop
cmp
push
mov
adc
sub
mov
cmp
lahf
jl
lods
xchg
enter
jmp
sahf
jmp
mov
pop
cld
ljmp
xor
dec
cmp
add
jl
cmp
and
fldt
pop
sbb
iret
push
loopne
fldl
mov
add
int
fidivs
push
pop
outsl
sbb
les
sbb
repz
jmp
cld
add
adc
fs
dec
in
mov
in
push
sbb
mov
or
pop
shrl
in
pop
shrl
pop
push
addr16
inc
cmp
neg
sub
xchg
push
xchg
das
and
int
adc
push
dec
fwait
mov
or
ret
push
push
pop
mov
xor
aaa
in
stc
imul
mov
mov
lret
imul
sbb
pop
fsubrs
sbb
pop
pop
loope
pop
sub
xor
fwait
inc
push
cmp
pusha
shlb
notb
push
sub
or
inc
push
jo
aad
adc
xor
sub
pusha
icebp
addr16
jno
mov
aas
int
popl
xor
cmp
mov
push
fildll
mov
int3
mov
cmp
dec
add
call
jne
clc
fstps
orl
cwtl
popf
sbb
cwtl
cmp
mov
ljmp
call
inc
mov
arpl
adc
mov
lds
pop
pop
pop
mov
xor
adc
ds
mov
inc
sbb
adc
stos
jnp
int
insb
imul
xchg
les
mov
add
test
mov
and
ret
mov
icebp
adc
in
stc
sub
movsb
jecxz
call
push
and
push
dec
pusha
mov
insb
xchg
add
stc
xchg
inc
xor
rorl
in
inc
test
out
bound
gs
jne
lret
fwait
sub
mov
fnstsw
sub
outsb
shlb
adc
aaa
inc
sub
cmp
jge
pop
xor
pop
lea
jmp
jb
sahf
sub
push
and
mov
loop
sub
adc
int3
je
lahf
xchg
cmpsb
xor
add
aad
je
lcall
je
mov
shl
mov
jg
rolb
ds
lahf
lds
pop
rcrl
jno
aad
aas
mov
addr16
add
loope
inc
notl
sub
xor
lahf
mov
cwtl
jecxz
test
xrelease
jno
test
shll
xor
push
add
jge
std
fsubrl
jge
shll
test
mov
mov
push
add
xor
lcall
dec
jg
adc
inc
pop
adcl
inc
lock
lods
bound
mov
mov
lahf
mov
add
fwait
mov
jecxz
out
jmp
add
stos
lock
cmc
xchg
aad
sbb
cmpsl
data16
nop
imulb
cmpsb
xchg
popf
outsl
add
cmpsb
sbbb
xchg
xchg
ljmp
fisubs
lahf
jb
lock
out
pop
sbb
mov
lahf
push
mov
lret
mov
pop
hlt
xchg
popa
es
fdiv
mov
cmpl
test
insl
xchg
pop
xor
or
xchg
sti
ja
pop
mov
push
stc
push
jns
das
lock
jle
mov
fs
out
cwtl
popf
mov
shlb
pop
push
dec
xor
test
arpl
data16
shl
xchg
add
js
adc
mov
bound
push
or
outsb
pop
insl
ffree
mov
sub
jmp
xchg
jbe
fildll
xchg
xlat
push
or
xchg
test
jecxz
mov
shl
stc
test
pop
stos
push
mov
jmp
inc
icebp
std
dec
mov
in
or
cmp
pop
cwtl
inc
divl
outsb
mov
sbbb
stos
lahf
xchg
or
or
xor
movsl
xchg
jp
xorl
xor
push
into
lods
aam
ss
pop
inc
lods
lock
xor
cmpsb
push
pop
ret
mov
iret
xchg
fistps
fs
ret
mov
push
dec
imul
mov
stc
inc
cltd
cmpsl
movsl
mov
scas
nop
and
cmc
in
mov
ja
cmpsb
jbe
sbb
mov
cmpsl
in
bound
test
test
xchg
out
mov
test
loopne
sub
fs
imul
or
adc
add
sbb
arpl
scas
xchg
cmpb
in
pop
dec
xchg
sbb
loop
xor
and
fistpll
pop
sub
sbb
mov
sub
mov
out
push
clc
repz
mov
daa
adcb
loope
sbb
sbb
int3
imul
int
daa
jmp
inc
push
aaa
and
pop
insb
outsl
xor
subb
adc
inc
jle
fwait
lahf
aam
mov
xchg
fistpl
pop
mov
adc
lea
loope
pop
cmpb
int3
mov
and
mov
mov
enter
rclb
pop
mov
pop
arpl
push
jno
sbb
aad
in
je
pop
jne
pop
test
mov
ret
and
sti
imul
aad
ficomps
es
add
sub
aad
mov
pushf
mov
cs
rclb
xchg
repnz
mov
pmaxub
push
lock
hlt
aaa
popa
sub
fwait
into
dec
andb
in
pop
sub
in
dec
jno
in
andl
mov
mov
cmp
int
rcrl
inc
aad
sub
hlt
pop
lret
fimuls
lock
pop
shl
iret
sti
mov
out
and
cmpsb
clc
mov
orb
in
imul
xchg
sti
inc
fisubrl
cmp
dec
out
adc
shll
fists
mov
cmp
pop
mov
mov
mov
push
xchg
and
inc
mov
jno
fists
or
icebp
or
adc
int
stos
ret
pop
mov
mov
nop
cwtl
mov
icebp
adc
scas
xchg
sbb
push
arpl
mov
adc
sub
cmp
addl
imul
lea
lods
call
mov
xor
pop
add
jecxz
or
inc
dec
cmpsl
aas
mov
fwait
inc
sub
and
push
cli
std
loopne
sub
mov
lret
stc
sbb
je
sub
arpl
adc
jno
lahf
out
lahf
sub
ljmp
push
and
push
push
das
in
std
hlt
jns
mov
and
pop
add
add
mov
int
movsb
scas
cmp
mov
and
dec
movsb
mov
fcoml
punpckhbw
xchg
ret
aad
xchg
incb
sub
aaa
mov
inc
cli
jp
push
cmpb
ret
int3
testb
push
jl
and
sarb
push
xor
fmulp
or
dec
sahf
mull
push
addr16
loop
add
sub
les
mov
das
sub
imul
mov
jmp
arpl
sbb
adc
xchg
dec
jne
aas
jp
or
lods
cs
jmp
filds
fs
test
add
call
xor
jns
lcall
mov
cmpsb
inc
mov
in
cmp
addb
negl
in
int
inc
cmp
pop
cmpsb
jp
push
push
ja
leave
inc
je
ss
dec
mov
jno
add
xchg
aaa
dec
dec
cmc
add
dec
pop
xlat
push
or
pop
in
rolb
clc
pop
jne
jbe
dec
mov
add
cmp
jle
les
movsb
rorl
add
pop
imul
push
popf
dec
call
fstp
add
sysenter
lea
rcrb
or
mov
dec
fisubrs
sbb
mov
mov
movsb
sub
mov
insb
push
test
imul
daa
push
iret
mov
lahf
sub
into
test
aaa
jp
jnp
and
xor
sbbb
fdivrl
sbb
dec
scas
jno
cmp
nopl
mov
das
int
and
push
notl
ficomps
ret
push
mov
in
sbb
sbb
sbb
add
push
push
mov
int
xchg
mov
loop
add
into
shrl
dec
bound
or
sahf
or
cmp
lret
push
jmp
mov
jge
push
imul
shll
dec
rcrl
adc
push
jnp
inc
push
mov
ficompl
jp
xor
cmp
dec
adcl
loop
push
jmp
mov
bound
mov
mov
lahf
xchg
jg
sar
pop
mov
add
or
dec
jb,pn
adc
cltd
dec
add
pushf
loopne
push
mov
xor
and
xor
daa
out
adc
cmp
jl
popf
mov
jno
repnz
inc
sar
pop
xchg
push
add
inc
adc
push
pushf
jle
mov
adc
das
mov
or
inc
xor
inc
call
stos
add
jl
shrl
push
sbb
mov
nop
dec
xor
in
lahf
fisubl
mov
sbb
lcall
in
adc
addr16
pop
lods
mov
dec
lret
stos
dec
insb
lods
mov
add
pop
jno
pop
fbstp
add
mov
sub
xchg
jb
cmp
add
sti
idivl
std
push
mov
mov
jno
iret
das
negb
sub
inc
xchg
dec
bound
aad
xchg
rolb
xor
andb
loope
dec
push
punpckhwd
or
push
mov
rorl
mov
sub
inc
dec
ds
out
jmp
pop
jg
inc
xchg
mov
jp
push
imul
sarb
cld
push
test
pushf
lods
lret
dec
movl
xchg
test
xor
int
push
inc
das
push
jnp
movsb
push
iret
mov
sub
js
leave
mov
imul
pop
push
repz
daa
lods
or
mov
sub
xchg
mov
push
arpl
jmp
cld
orl
jae
not
std
sbb
jg
loope
add
jge
xchg
inc
jnp
in
pop
cltd
mov
jno
and
fs
andl
or
mov
dec
jle
push
gs
push
scas
sarb
pushf
in
js
sub
icebp
inc
inc
dec
push
mov
into
imul
push
sti
jl
out
in
dec
mov
clc
negb
popa
adc
or
fidivrl
hlt
add
addr16
sar
movsb
std
inc
aas
dec
add
es
cmp
and
mov
je
test
out
xor
clc
je
mov
mov
int3
mov
jmp
xlat
push
pop
jecxz
cltd
mov
pop
cmc
shl
loop
sbb
flds
mov
push
clc
lock
push
dec
sub
ret
push
cmp
lods
mov
mov
mov
dec
scas
gs
push
cmp
adc
cmp
insb
jg
add
push
jnp
aaa
adc
stos
sbb
in
sarb
stc
adc
bound
jmp
mov
test
popa
rorb
add
cmp
sub
inc
loopne
fwait
inc
xor
pop
mov
ja
fldcw
push
stos
filds
mov
dec
mov
stos
out
sub
das
scas
pop
lret
cmp
and
dec
sti
add
jp
cmp
push
mov
fists
mov
cmp
jb
lret
xchg
xlat
cmp
sbb
fwait
sbb
sub
adc
mov
mov
cld
sarl
add
shrb
push
add
lds
out
lds
inc
mov
and
pop
push
outsb
das
sub
hlt
jmp
xor
xorl
decl
push
shlb
lods
mov
dec
insl
out
int
arpl
or
push
mov
jns
mov
xchg
ja
daa
xor
mov
movsb
sti
xor
cmc
out
enter
mov
or
fwait
ljmp
ret
into
mov
push
mov
out
loopne
mov
inc
enter
and
xor
lods
xchg
inc
push
sub
mov
mov
test
pop
fisubs
sbb
mov
sub
xlat
loope
filds
or
cld
fnstenv
push
les
mov
xor
mov
adc
imul
dec
icebp
mov
or
dec
mov
jb
movsb
cltd
test
andl
and
orl
sbb
jl
sbb
daa
imul
inc
ss
mov
enter
test
gs
bound
jns
dec
mov
pop
xlat
add
rolb
sbb
cmpsl
insl
pushf
ret
mov
mov
fidivrl
push
mov
repz
mov
test
mov
stc
cmp
movsl
ja
push
mov
pop
daa
mov
repz
or
mov
cltd
xor
pop
out
shll
xchg
divb
or
or
stos
imul
and
gs
pushf
cmpsl
cmpl
test
fisubl
or
stc
mov
mov
gs
addr16
adc
shll
dec
cld
xor
insb
mov
addb
xchg
xor
enter
jge
cmp
cmp
inc
enter
sbb
fstpl
mov
mov
ds
mov
pop
out
scas
gs
mov
inc
arpl
sub
mov
mov
fucom
movsl
cld
lods
push
ds
gs
and
loop,pn
jmp
add
adc
mov
pop
dec
mov
inc
sbb
mov
pop
negl
push
ss
loopne
jle
lahf
stos
inc
push
cmp
hlt
imul
outsl
lea
aaa
push
jmp
fimuls
or
sub
ds
test
popf
lods
adc
cld
inc
dec
movsl
sbb
mov
xor
inc
mov
imul
enter
adc
fldt
push
sbb
or
lods
js
aad
addr16
pop
cmpsl
dec
jo
lea
out
das
jl
adc
push
ja
jo
xchg
icebp
out
push
and
pusha
shrb
pop
arpl
das
mov
pop
pop
add
pop
push
mov
or
add
jnp
outsl
outsb
jmp
cmpsb
xchg
inc
add
mov
mov
dec
cmp
lock
test
hlt
push
xchg
movsb
xor
jb
xor
xchg
in
sub
mov
push
sar
pop
nop
add
shlb
hlt
addb
or
loop
arpl
fsts
ljmp
and
cli
inc
insl
mov
sbb
sti
adc
fidivs
mov
rcr
pop
push
pop
arpl
std
push
sbb
cmc
test
xchg
ja
xlat
xchg
stos
mov
out
adc
sahf
negb
mov
popa
lock
xlat
icebp
or
into
or
insl
repz
mov
movsb
ja
inc
adc
arpl
mov
rol
xor
push
shlb
loop
and
pop
in
cwtl
cmp
int
pop
shrl
incl
movsb
push
push
pop
mov
add
repz
sbb
push
out
pop
lods
mov
dec
loopne
adcl
flds
iretw
scas
jp
inc
dec
mov
push
adc
push
cmp
outsb
pop
xchg
fabs
lcall
notl
pop
and
bound
adc
push
icebp
jg
pop
mov
mov
daa
push
aaa
or
test
add
lods
repnz
das
sarb
push
test
repz
in
push
fsts
pop
popf
call
pop
test
popa
shll
mov
into
push
pop
jecxz
mov
loope
xorl
sub
gs
jbe
stos
or
mov
dec
mov
dec
mov
insl
aad
scas
xor
jbe
pop
in
jae
icebp
test
push
mov
fcmovb
fnstenv
mov
adc
jne
pop
cmp
push
mov
add
cmc
leave
stc
inc
jne
pop
lcall
push
in
jmp
inc
mov
add
and
je
mov
cmp
lret
push
mov
cmpsl
cld
mov
out
fistl
cltd
jg
mov
mov
mov
je
mov
clc
hlt
cmp
pop
adc
xchg
xchg
int
mov
sbb
sarb
sub
ds
insl
packsswb
jns
dec
je
in
xor
pop
sbb
inc
pop
jg
mov
mov
pop
xor
jecxz
jecxz
test
out
jnp
sub
mov
in
leave
dec
mov
push
xchg
test
les
mov
out
leave
jecxz
inc
lahf
je
test
sub
pushf
lcall
gs
loope
imul
ja
dec
and
pushf
ja
daa
push
pushf
insl
and
or
and
adcl
popa
sub
gs
pop
out
cwtl
cmp
lcall
test
jae
mov
or
ficompl
sub
jge
adc
mov
fisttps
push
pusha
sbb
inc
pop
test
mov
out
sub
sbb
mov
inc
gs
sub
rorl
pop
ds
mov
mov
add
pop
int
divb
inc
adc
push
lret
add
xlat
and
and
daa
loopne
pop
cmpsl
pop
jae
lock
pop
adc
daa
into
jp
clc
xchg
nop
scas
shll
or
inc
lea
xchg
repnz
mov
pop
xchg
clc
sbb
pop
inc
test
pop
cli
push
mov
adc
inc
les
adc
fucomi
mov
shl
stos
mov
mov
dec
pop
popf
out
push
or
mov
dec
dec
add
sarb
mov
std
cmp
notb
push
scas
sbb
inc
inc
mov
ret
call
dec
jae
notl
mov
sbb
pop
loopne
shll
imul
leave
or
xor
pop
lock
mov
mov
out
jecxz
and
fmull
adc
xchg
adc
and
inc
js
mov
push
out
jb
iret
hlt
fs
sub
push
mov
add
dec
add
je,pt
insb
adcb
xor
stos
repnz
adc
cld
pop
jne
dec
push
cmc
sbb
or
hlt
and
adc
dec
sub
adc
int
lods
lcall
mov
cli
adc
fimull
xchg
cmc
cmpsb
lock
paddd
shrl
pop
negb
movsl
sub
push
cmp
adc
cmp
xor
mov
mov
fisubrl
inc
sbb
mov
insl
or
add
cmp
adc
add
pop
adc
loop
es
jecxz
icebp
loope
movsl
and
in
int3
mov
fcmovnb
cmp
aaa
push
ds
test
adc
mov
mov
adc
push
pop
jge
jmp
mov
repnz
cmpsb
push
subl
leave
lcall
push
or
and
popa
mov
ret
jbe
int
out
xchg
and
roll
adcb
scas
lcall
addr16
enter
sti
push
pop
xor
dec
pop
notl
adcl
sbb
push
int
mov
int
js
inc
xchg
scas
imul
push
jp
rolb
sub
enter
enter
movsl
out
mov
ja
outsl
lcall
push
addr16
jae
dec
mov
imul
pop
or
xchg
xlat
lds
sbb
pop
popa
mov
int
test
cwtl
aas
jge
leave
mov
roll
cli
and
xor
movsb
sarb
mov
or
ss
movsb
cmp
sbb
push
or
out
rcr
xchg
shl
cltd
xchg
movsb
imull
sahf
jl
les
add
fidivrs
xchg
stos
mov
add
sub
les
pushf
or
mov
mov
push
stos
loop
std
xor
add
jb
cltd
or
or
dec
call
mov
dec
jg
idivb
scas
adcb
mov
mov
dec
popa
xchg
fmuls
fsubr
pusha
push
lock
xchg
mov
mov
leave
dec
ss
and
pop
loopne
lcall
add
aad
jecxz
jo
iret
sub
jl
xor
andl
dec
cmp
sub
pop
test
fmull
and
mov
mov
js
addb
sbb
pop
movsl
in
cltd
in
dec
cltd
mov
cmp
dec
adc
mov
cli
dec
movsb
add
iret
das
add
dec
shll
mov
xchg
xor
push
mov
inc
out
pop
shll
cmc
mov
mov
or
sub
mov
xchg
push
je
neg
sarl
mov
push
inc
fdivs
ret
leave
xchg
push
sbb
cmp
out
inc
rcrl
stc
pusha
and
xchg
ja
nop
push
xorl
push
ffreep
push
movsb
push
mov
rcrl
sub
cmp
repnz
and
xchg
mov
cwtl
mov
jb
xor
dec
or
add
roll
mov
icebp
dec
enter
inc
jbe
fnstcw
int3
lcall
cltd
sbbl
dec
icebp
mov
ja
lock
arpl
insl
push
push
repnz
popa
adc
ds
pop
mov
fs
and
mov
mov
test
pushf
xchg
cs
mov
out
test
hlt
test
adc
jp
shlb
or
dec
ret
xorl
xchg
and
pushf
es
loopne
jecxz
adc
hlt
cmp
fidivrl
or
rcrb
adc
pop
adc
cmp
jecxz
mov
pop
pop
jle
sub
test
xlat
mov
sub
jp
outsb
sbb
or
shlb
pop
outsl
xlat
inc
mov
and
decb
lahf
jle
ret
xchg
cmp
je
push
dec
roll
inc
fwait
addb
or
ljmp
or
adc
imul
or
xchg
cmp
mov
push
dec
sub
mov
outsb
lods
out
dec
push
adc
mov
push
mov
mov
push
jns
add
je
enter
test
sub
jl
outsl
add
sbb
mov
gs
sub
outsl
pop
mov
xor
in
and
push
leave
mov
push
shll
mov
ja
enter
xchg
repnz
add
pop
sub
mov
inc
lock
adc
imul
jp
jl
hlt
dec
cmp
mov
cs
xchg
dec
or
jae
mov
jne
xor
les
stos
mov
repnz
cli
pop
xchg
cld
notb
pop
mov
jbe
push
dec
push
mov
pop
movsl
mov
cwtl
fcmovbe
push
lret
pop
in
push
es
ret
pushf
push
int
or
ret
mov
les
aam
pop
mov
push
mov
gs
cli
adc
dec
lods
jp
mov
outsw
fsubrl
test
jbe
adc
pop
loope
inc
jo
fucomi
sbb
movsl
push
add
ja
stos
pop
mov
push
sti
mov
xor
xor
bound
cmp
addl
inc
pushf
sbb
scas
popf
shr
xchg
pop
lds
insl
clc
or
int3
sbb
lahf
insb
mov
sbb
sti
ds
lea
negl
add
call
mov
and
shll
xor
jg
pop
lahf
pop
ja
adc
jb
push
pop
repz
jnp
and
and
xchg
bound
rcl
movsb
jmp
stos
adc
cmc
lods
xchg
pop
cmp
rolb
mov
and
jne
fs
xchg
mov
push
leave
addr16
push
ss
jae
fsts
int3
jp
jbe
add
dec
mov
sub
lods
add
mov
jle
rclb
shr
lods
push
dec
ljmp
lock
jge
inc
imulb
lods
or
xor
mov
adc
rcl
jl
es
jge
lahf
cwtl
dec
or
push
aaa
enter
mov
jbe
mov
push
dec
mov
jnp
imul
popf
test
in
addr16
jp
xlat
mov
rolb
andl
push
cmovae
lods
sub
icebp
sahf
rorb
push
gs
ss
sbb
pop
dec
adc
mov
mov
jne
rorl
imul
fsubrl
nop
sbb
add
push
es
adc
dec
adc
push
jmp
sbb
daa
push
clc
push
xor
xchg
push
loopne
xorl
jge
sbb
rclb
outsl
push
xchg
dec
push
std
fucomip
ret
ja
pop
and
clc
dec
scas
out
iret
push
enter
dec
arpl
jl
incl
popl
sbbw
add
sbb
hlt
and
jge
mov
jo
fdivr
mov
push
divb
push
inc
xor
in
xchg
mov
push
and
shll
mov
cmp
pusha
mov
jecxz
push
jg
mov
lret
pop
mov
jno
inc
testb
test
mov
fcmovnbe
into
mov
stos
cs
jecxz
js
scas
xchg
loopne
scas
jns
sahf
fsubrl
fsub
lahf
pop
fildll
lret
and
lcall
shll
jecxz
ss
les
arpl
jge
mov
adc
pop
sti
mov
sub
add
dec
rolb
and
cmp
xor
leave
mov
int
sbb
mov
jg
inc
std
ljmp
cld
jp
fstl
out
mov
or
bound
cs
ja
mov
and
lds
stc
push
out
fldt
daa
xor
in
pop
lods
pop
insl
pop
push
xor
dec
sarl
push
dec
add
mov
lods
lret
dec
aaa
gs
popa
loopne
push
push
fmul
and
mov
push
neg
out
xor
outsl
mov
paddusb
jl
mov
sbb
out
iret
push
xchg
sbb
adc
xor
mov
lock
lahf
or
mov
pop
pushf
mov
adc
cmp
or
cmp
insb
jmp
mov
fstl
cltd
popa
fsubs
sub
pop
mov
mov
add
fcoms
cmc
push
and
lea
cmp
loopne
mov
mov
ja
xchg
loop
clc
dec
nop
jnp
cltd
daa
mov
pop
push
pushf
adc
cmp
adc
iret
lods
in
adc
sbb
lea
xor
movsl
aas
out
xor
or
pop
cltd
xor
inc
mov
stc
xchg
xor
pop
or
adc
or
cmp
cltd
ss
push
adc
mov
out
cmp
ljmp
repz
push
lahf
movsb
pop
xchg
test
mov
push
repz
shrb
out
adc
push
add
cmc
jmp
pushf
pop
outsl
sbb
imul
fnstsw
xchg
pop
in
popa
xchg
sahf
pop
dec
iret
cltd
aad
bound
push
faddl
pop
pop
dec
dec
sub
xchg
int3
or
fst
cmp
cmc
xchg
jno
mov
dec
pop
or
sbb
fmuls
fs
mov
sahf
dec
dec
lret
test
or
dec
out
dec
pop
ljmp
cli
fadds
int3
sub
cmp
ljmp
xchg
lcall
inc
iret
rcrb
cld
push
fcmove
subb
and
test
push
mov
cmp
test
pop
cmp
loop
rclb
stc
or
dec
pop
or
sub
cs
jecxz
jne
cmpsl
cmp
or
popa
push
inc
adc
cmpsb
mov
mov
mov
push
and
pop
and
jge
mull
add
int
popf
xor
test
cmc
or
fdivrl
add
xor
leave
sbb
sbb
test
xchg
mov
movsb
pop
cs
fisubrl
lea
stos
lds
inc
jp
lret
ror
dec
dec
push
mov
out
lods
dec
scas
scas
jae
cmp
mov
test
mov
lock
jmp
push
xchg
sbb
mov
jae
addr16
fsubs
ja
subb
jo
imul
imul
lcall
inc
out
jo
xlat
in
loope
push
test
xor
in
dec
adc
xchg
mov
fidivrs
lods
mov
fwait
enter
xchg
fxam
stos
or
stos
mov
es
mov
pop
inc
roll
push
scas
lea
mov
add
into
flds
sbb
add
test
inc
cli
jb
shlb
clc
cld
call
xlat
sub
scas
loopne
dec
out
dec
lret
nop
inc
movsb
in
mov
in
rcrb
jne
push
out
jp
sbb
mov
cli
fnstcw
or
mov
stos
mov
jecxz
fsubrs
outsl
mov
mov
mov
ret
mov
sub
scas
cmp
andl
or
push
popa
cltd
inc
cmp
pop
popl
pop
dec
mov
in
xor
cltd
mov
sbb
fwait
cmp
in
nop
lcall
and
aas
pop
lret
inc
scas
rcl
push
clc
popf
dec
add
pop
pop
or
add
inc
cld
lods
push
jns
pop
push
or
cli
hlt
xor
adc
sub
stc
bound
insb
sbb
test
shrl
inc
cmp
cmp
iret
push
test
push
push
bound
int
sub
cmp
and
dec
jae
fucomip
jb
fcompl
std
cs
mov
dec
test
dec
int
mov
mov
sub
cltd
sub
scas
mov
add
arpl
dec
adc
cmpsb
mov
xchg
mov
fbld
ljmp
rcll
fisttpll
lret
pop
lods
negl
mov
jg
inc
pop
jbe
adc
jp
push
mov
in
das
lock
dec
in
mov
sbb
pusha
xor
loope
and
in
cmpb
lret
mov
xchg
mov
rorl
and
sub
inc
loop
cmpsl
ds
and
lea
pushf
shlb
hlt
popf
gs
push
push
mov
out
stos
mov
add
push
faddp
xor
jp
scas
sbb
add
cmp
loopne
cmp
fs
punpcklbw
xchg
xchg
lret
iret
popf
cmpsl
ja
dec
test
lock
inc
js
cmp
insb
ret
pop
jg
testl
pop
jno
cltd
mov
push
and
aaa
and
icebp
push
test
or
js
push
sbb
pop
sbb
adc
aad
sbb
popf
and
xchg
mov
pop
pop
cmc
cmpsl
cmpl
aad
pushl
and
lret
leave
repz
push
loopne
insb
call
lock
mov
cld
push
push
adc
test
enter
inc
sarb
xchg
cmp
pop
fs
mov
cmpsb
push
sub
sbb
add
scas
dec
ds
xor
sbbl
push
lcall
imul
mov
adc
dec
fisttpl
mov
mov
jne
xor
inc
sbb
xor
jne
sub
adc
push
adc
jge
xchg
movb
and
jnp
ret
mov
and
mov
ret
imul
clc
lds
add
mov
cmp
pop
or
in
fcmovu
mov
std
lcall
test
mov
mov
scas
add
int
lcall
sbb
and
mov
test
jb
repnz
pop
mov
mov
inc
in
or
sbb
sbb
insb
pop
aas
int3
mov
jge
jo
sub
mov
leave
lds
or
and
jge
push
lds
icebp
mov
lea
mov
xchg
in
je
test
pusha
scas
cmp
pop
mov
mov
lahf
icebp
sub
in
repnz
lods
jno
inc
xchg
mov
lahf
add
fisttps
mov
lock
in
sarb
negl
add
pushf
sbb
jno
leave
addl
test
mov
pop
pop
sbb
lahf
xchg
jge
imul
iret
sahf
popa
dec
mov
sbb
js,pt
cmp
pop
ljmp
or
nop
inc
jmp
pushf
xor
jmp
inc
fsubs
mov
mov
rorb
mov
icebp
insb
pusha
ret
fildl
or
rcrb
push
ja
mov
sbb
push
pop
sub
sbb
in
aas
and
cmpl
and
bound
std
ret
push
les
ficomps
dec
nop
loopne
add
fldl
lret
ret
repnz
cld
das
jns
jp
pop
sub
sub
pop
inc
adcb
cmpsl
cmp
out
or
insl
dec
jnp
inc
sub
loop
out
sub
inc
test
addr16
push
adc
out
xor
movb
push
sbb
sbb
lret
pusha
aas
push
mov
in
fistps
adc
js
leave
mov
or
pop
pop
bound
fsts
mov
daa
xor
fsts
mov
icebp
out
adc
test
mov
inc
das
xchg
mov
jl
pushf
push
outsl
mov
popf
lods
xchg
cld
ljmp
lret
call
in
xchg
rcrl
inc
inc
inc
fistpll
dec
shrl
lret
push
icebp
jb
dec
loop
jnp
fldt
mov
push
lcall
movsb
jge
push
rclb
fcompl
jmp
movsb
stos
jns
mov
popa
pop
das
rcr
in
sub
push
ds
sbb
or
inc
inc
js
push
cmp
out
xchg
jl
cmpsb
xchg
stos
mov
and
out
and
mov
dec
js
xor
pop
outsb
and
das
scas
sbb
in
sub
xchg
aam
xor
and
push
inc
popa
test
and
mov
ffreep
dec
mov
call
jb
pop
mov
lods
pop
push
mov
add
fdivrl
icebp
lods
imul
cmp
test
adc
fwait
push
jecxz
or
mov
sbb
movl
les
or
push
in
pop
andb
fbld
insl
adcl
adcl
push
xor
icebp
cmp
cli
push
in
push
mov
notb
xchg
xor
xchg
mov
mov
scas
xorl
cld
cld
fsubr
int3
test
scas
fistpl
outsl
push
and
jb
cmp
push
xor
xor
mov
adc
ss
sub
lea
ret
loop
jno
popf
dec
push
stc
pop
call
sub
dec
mov
mov
dec
pusha
ljmp
ror
xchg
mov
cmp
lods
push
inc
and
xchg
inc
lock
or
mov
pop
jns,pn
bound
sub
iret
sbb
fisttps
lock
enter
int3
arpl
mov
ret
and
mov
jecxz
incb
imul
or
pop
addr16
and
cmp
shl
stos
loopne
aas
sbb
pop
lahf
xor
imul
jge
fs
xor
lret
jmp
mov
imul
test
aad
out
std
push
push
icebp
pop
jl
jmp
or
fdivrs
fiaddl
mov
lock
fldt
jle
dec
mov
int
lcall
pop
int
je
hlt
gs
mov
jmp
pushf
mov
dec
cmp
dec
mov
lahf
or
ret
mov
ja
xchg
adc
aaa
outsl
cmc
mov
sbb
ret
fcoml
test
inc
xchg
and
push
repz
xor
add
sbb
gs
add
sub
ds
mov
and
fldcw
xchg
stos
or
pop
mov
mov
dec
sub
adc
pop
std
push
dec
ret
xchg
push
xchg
push
xchg
out
or
xchg
add
xchg
lods
add
gs
xchg
cwtl
xchg
lcall
mov
cmc
out
stos
gs
pushf
and
loopne
mov
mov
arpl
xor
nop
push
dec
push
in
jg
jno
xor
lahf
and
outsl
sub
cmpsb
cli
xor
leave
paddq
insl
xchg
push
jae
in
mov
mov
jl
jp
outsb
inc
add
mov
inc
sub
mov
lahf
out
pop
push
mov
in
push
pop
xchg
pop
mov
jge
ret
mov
pop
outsl
cmp
push
sub
add
pusha
mov
cs
inc
pop
mov
mov
sub
add
xchg
sti
bswap
imul
pushf
mov
jo
clc
sbb
dec
push
mov
xor
stos
jmp
jge
jnp
sbb
outsl
mov
xlat
fisttps
mov
pop
lea
inc
dec
cmp
in
aaa
std
ja
and
mov
arpl
and
cmp
in
push
mov
rorl
repz
push
mov
repnz
dec
clc
std
scas
fs
xchg
lahf
movsb
jno
cmp
and
stc
std
pop
cli
outsb
and
or
xor
jle
mov
loop
xor
and
dec
cmpsl
pop
jae
and
enter
iret
pop
cmp
mov
inc
mov
jmp
hlt
mov
sub
xchg
sbb
mov
divl
lret
aas
sub
ret
iret
dec
loope
rol
nop
xchg
out
pop
sub
adc
mov
xor
cs
add
into
and
dec
xchg
addb
push
add
hlt
xchg
sub
mov
mov
test
inc
out
push
je
leave
push
stos
pop
adcl
and
jge
js
cld
lods
aas
or
push
gs
das
stc
cmpsb
push
lods
cs
push
fnstcw
mov
out
pop
adc
imul
pushf
ss
outsb
mov
stc
mov
add
pop
inc
icebp
sti
xchg
jge
sbb
loop
cwtl
loop
enter
adc
push
sub
psrlw
jg
sbb
out
push
sete
ficoms
sub
daa
out
add
int3
cwtl
dec
xchg
xchg
ret
imul
dec
xchg
mov
lcall
sub
sti
inc
pop
cmp
sub
xchg
jb
out
sbb
jnp
std
cmp
test
dec
ret
ret
and
sbb
mov
cmpsb
xchg
stos
xchg
mov
lcall
test
xor
imul
jnp
sub
incb
scas
xlat
lock
sbb
xchg
es
xlat
cmp
jne
mov
inc
fwait
inc
mov
nop
fs
mov
test
ret
sarl
test
add
fwait
and
or
cmp
testb
dec
xchg
fstps
data16
cli
mov
jne
pushf
cmp
ja
insl
test
dec
shlb
mov
mov
pop
add
js
push
and
mov
or
pop
xchg
mov
test
int
out
add
pop
or
testl
ficomps
pushf
insb
ljmp
mov
pusha
cmpsl
push
in
jp
jne
js
gs
pop
adc
sti
fst
aas
test
mov
mov
inc
out
and
cli
lahf
jle
pop
pusha
push
pop
addl
in
fcmovnb
int3
mov
and
clc
push
orb
std
scas
xchg
mov
scas
push
scas
stc
inc
adc
mov
push
rclb
scas
inc
ljmp
fisttpl
stos
inc
mov
int3
int
mov
jb
jl
add
cli
cltd
sti
cltd
testb
mov
jl
ret
stos
outsb
sub
adc
sub
xor
dec
xchg
mov
jg
test
je
outsb
fistl
addb
mov
pop
and
mov
and
pop
adc
pop
and
lcall
lea
adc
shrl
mov
insb
int
pop
leave
sub
jge
push
fstl
mov
mov
jns
popf
outsb
in
ja
sbb
jns
jl
mov
movsl
into
xchg
push
std
lods
or
jno
add
cwtl
cltd
mov
hlt
in
scas
dec
insb
fidivl
test
xchg
test
test
out
pop
movsb
push
cmp
mov
and
outsb
rcrb
call
andb
dec
and
adc
jg
sbb
popa
and
aad
cmpsl
cmpsb
stos
xchg
sbb
out
aaa
pop
dec
xchg
std
xchg
lret
and
jnp
xchg
inc
lret
dec
mov
outsl
dec
call
leave
shl
hlt
push
shlb
xor
pop
xor
mov
mov
cmpl
lret
es
sbb
into
sbb
lods
inc
xchg
xchg
add
push
pop
jge
lret
mov
and
xlat
mov
push
sub
jae
sbb
test
fistpll
dec
dec
call
fs
and
popf
into
and
xchg
inc
call
jns
mov
xor
cwtl
sbb
or
sbb
fstl
jle
mov
mov
iret
clc
cmp
pusha
ja
es
bound
subl
fs
negl
rclb
cwtl
mov
jae
lea
sbbl
addl
les
adc
lret
aad
into
and
test
cmp
mov
dec
cli
xchg
daa
rorb
dec
dec
nop
outsl
or
jne
popf
inc
xor
stos
jmp
adc
cmp
cli
pusha
inc
mov
insl
es
inc
cwtl
mov
mov
xchg
jb
pop
das
pushf
ss
fwait
rcr
shrb
or
or
mov
sbb
pop
inc
aad
inc
leave
mov
dec
mov
gs
mov
push
mov
inc
push
test
sub
ret
stc
in
xchg
mov
fisttpl
stos
loop
fildll
sub
sahf
xchg
test
xlat
add
push
xchg
es
adc
test
cmp
iret
xchg
into
out
sti
loop
push
rclb
aam
inc
pop
and
and
sub
push
or
cmc
pop
xlat
pop
enter
es
adc
test
inc
faddl
push
movsb
xchg
jl
lret
sbb
push
adc
mov
iret
xchg
lahf
cs
sbb
lods
inc
sub
shlb
aam
gs
push
and
sub
and
push
add
lahf
lods
lret
bound
push
sahf
or
sub
push
dec
jp
xchg
xor
stos
outsb
jo
xor
popa
fldl
bound
lahf
daa
mov
out
btc
lds
dec
mov
icebp
mov
push
cmpsb
inc
std
sti
out
dec
adc
mov
dec
fwait
inc
mov
mov
decl
mov
push
mov
lret
push
pop
rclb
mov
mov
addr16
pop
fcompl
cmp
popa
inc
pop
shlb
mov
sbb
push
test
sbb
mov
pop
psubsb
jno
xchg
pop
shrl
out
notl
movsl
inc
into
fwait
xchg
sub
stos
sub
call
and
or
adc
sbb
bound
stos
les
addr16
aas
mov
sarb
cmp
sti
mov
mov
xor
dec
xchg
sbb
pushf
outsl
xor
jp
or
andb
pushf
dec
cmp
inc
into
fstps
and
cld
ljmp
pop
jmp
sbb
mov
sub
ficoml
imul
cmpsl
idivb
ljmp
pushl
mov
pushf
mov
dec
ficompl
stos
lods
in
not
adc
inc
pop
insl
les
mov
fdivr
sub
xchg
fnstsw
insl
leavew
jo
roll
insb
sub
push
add
iret
pop
push
push
loope
nop
adc
aad
scas
xchg
cmp
or
sub
add
mov
jae
and
jno
xor
lods
add
sbb
add
shll
xchg
or
clc
and
icebp
mov
lahf
lcall
sbb
std
lahf
or
or
popa
scas
test
outsl
and
insb
cli
movsl
fiadds
cmpsb
ss
enter
dec
inc
lock
out
cmc
filds
add
mov
push
mov
pop
dec
cmp
or
mov
bound
inc
stc
lods
mov
xor
push
pop
cwtl
sub
ja
jne
sbb
xchg
sub
push
push
sub
sbb
stc
sub
addr16
rcr
xchg
xchg
xchg
addr16
mov
dec
ret
push
mov
repnz
xchg
mov
inc
fcoml
fstpl
mov
xchg
es
js
andb
add
xor
out
pop
data16
daa
scas
clc
pop
and
xor
mov
dec
stos
jnp
cwtl
ret
daa
dec
int3
scas
jl
imul
xchg
jg
add
faddp
data16
mov
sbb
repnz
jns
mov
mov
enter
sub
pusha
add
data16
mov
cmpsb
pop
gs
icebp
mov
jge
pop
dec
les
cmp
sub
add
pop
or
ja
cmc
into
out
xor
pop
xor
xor
mov
repnz
jne
mov
dec
pop
pop
insb
jnp
and
xchg
pop
dec
stos
leave
cmp
adc
cmpsb
repz
mov
scas
pushf
or
es
xchg
lret
orl
sub
icebp
adc
pop
int
dec
repz
aaa
hlt
sbb
lods
jae
push
dec
add
repz
dec
dec
inc
mov
cmpb
rcll
out
pop
daa
xlat
dec
inc
andl
xchg
adcb
clc
enter
outsb
test
cs
imul
sbb
test
jne
pop
pop
mov
sbb
xchg
mov
lea
in
xchg
dec
lds
inc
insb
pop
or
aas
mov
add
cmp
mov
jne
cmp
cmpsb
popf
cmc
mov
inc
xor
fmulp
test
repnz
mov
les
push
pop
dec
push
dec
sub
sti
sbb
push
jmp
and
dec
jbe
aas
inc
xchg
mov
xor
adc
je
push
repnz
sub
enter
xlat
jle
mov
adc
jbe
clc
jb
das
push
add
clc
mov
adc
pop
cmp
faddl
iret
stos
push
cmp
scas
shrb
mov
add
adc
arpl
lahf
movsb
push
gs
rorl
ret
push
aaa
pop
or
fstps
stos
add
aas
mov
or
jno
push
imul
add
pop
adc
dec
mov
cmpsl
cmp
jb
rcrl
fdivrp
cmp
aas
inc
inc
icebp
ljmp
jno
jbe
jp
ja
andb
mov
xor
stos
mov
in
pop
out
xor
int3
cli
jl
outsl
push
shlb
xchg
or
xlat
add
and
push
loope
adc
or
add
or
add
push
imul
add
bound
pop
out
mov
clc
js
add
into
xchg
mov
cmp
cmpsb
test
test
call
js
in
fdivrs
sar
mov
xor
add
xlat
xor
fisubrs
xchg
adc
fmull
jb
test
imul
lret
mov
mov
out
xor
or
scas
push
shr
pop
dec
jl
outsl
sarb
cltd
insb
clc
scas
in
sub
xlat
je
mov
mov
loope
sbb
dec
andb
jnp
xor
xchg
and
sahf
jno
sub
in
and
sarl
cmp
sub
loopne
es
xor
je
sbb
and
lcall
repnz
jnp
cmp
negb
jle
xor
ret
loope
je
push
adc
int
sub
lock
in
ret
dec
testb
jae
mov
pushw
inc
mov
or
fucomp
sar
movsb
les
es
jmp
mov
fisttpll
jns
pop
lds
and
inc
pop
imul
push
fs
nop
add
push
mov
loope
sbb
push
lea
push
ljmp
xchg
jl
mov
push
stc
sahf
rcr
or
das
aad
and
addr16
add
pop
pop
and
lret
xchg
lds
mov
mov
dec
cmp
les
ret
xor
jnp
cmp
pushf
or
lret
ret
mov
fwait
xor
subl
adc
adc
xchg
add
inc
cmp
in
pop
aad
stos
xor
mov
mov
lret
rcr
out
cltd
lock
sbb
shrl
test
dec
js
lods
loopne
xor
mov
sbb
mov
pop
xchg
aas
push
icebp
pushl
test
shrl
std
push
pop
shrb
leave
scas
int3
outsb
aaa
cmp
aas
sbb
sub
jo
fdiv
insb
dec
pop
cli
lock
ja
pop
fldl
pop
test
dec
in
dec
daa
pop
subb
out
mov
cmpsb
or
dec
movsl
pop
fnsave
jno
cmc
xchg
aad
sub
pusha
enter
jle
xchg
or
rcrb
sbb
sbb
call
xorb
dec
push
mov
movsl
test
mov
icebp
imul
mov
cmp
dec
xchg
cmp
dec
dec
lea
flds
push
fsubs
push
imul
adc
aas
and
divl
and
ss
data16
cmp
aad
mov
and
ja
aaa
jecxz
test
cmp
push
arpl
mov
cmp
add
stos
cmp
cld
and
imulb
and
std
push
imul
adc
das
dec
je
aas
mov
es
lods
add
sahf
hlt
inc
sbb
inc
mov
push
mov
xchg
xor
sti
je
mov
lret
das
lds
nop
daa
mov
and
push
bound
insb
aam
xchg
jae
std
arpl
xor
push
and
dec
das
cwtl
bound
dec
inc
stos
adc
addr16
push
in
test
fs
cmp
insb
mov
and
js
lcall
lret
imul
lods
test
mov
in
adc
loope
ds
push
sbb
repz
into
insl
cltd
das
sub
mov
pushf
ret
call
imul
shrl
sti
ror
arpl
imul
xor
mov
icebp
stos
fwait
mull
dec
jecxz
stos
scas
sub
shlb
add
pop
jecxz
jns
shl
xchg
leave
mov
xchg
sbbl
sub
mov
icebp
pop
movsl
mov
adc
in
and
loope
sub
xor
and
push
pop
jmp
and
push
data16
int3
pop
scas
cmp
and
cltd
sahf
sub
mov
mov
inc
jbe
imulb
iret
scas
arpl
cmpsl
adc
mov
sub
sbb
repz
jne
aaa
rcll
ja
mov
push
mov
mov
dec
jbe
cmpsl
push
push
es
outsb
pop
jns
xchg
stc
adc
sbb
xor
repz
int3
daa
cltd
and
sahf
adc
leave
push
pop
movlps
jno
rol
in
pop
sbb
cwtl
inc
popa
add
in
popa
js
outsl
pop
mov
cltd
push
mov
sahf
mov
or
in
sbbb
movsl
pop
lock
pop
add
stc
inc
imul
leave
or
dec
in
into
fsubrs
lahf
sbb
jg
push
sub
push
aad
es
cs
sbbb
cs
sbb
fisubrs
out
add
mov
jecxz
xor
xor
mov
cld
dec
or
pop
or
cmp
xchg
or
out
repz
pop
out
addr16
movsb
lds
jno
sar
mov
outsb
xlat
adc
inc
jg
xchg
jo
sbb
lahf
lcall
imul
push
orl
pop
loope
out
cltd
and
shr
mov
loop
cmp
outsl
xor
stos
xor
popf
mov
or
pop
xor
sahf
in
and
out
lret
movsl
add
xor
cli
mov
add
cmpsb
pop
mov
loopne
mov
sti
aam
popa
add
dec
xchg
arpl
xor
push
pop
sbb
fsub
dec
rcrl
stc
das
xor
inc
std
xlat
faddl
xchg
mov
int3
out
mov
inc
roll
sbb
mov
leave
mov
sbb
sbb
inc
repnz
cmp
vcvttps2dq
push
push
mov
push
test
jbe
mov
fwait
adc
dec
pop
or
leave
dec
sub
roll
add
and
aas
sub
xchg
mov
test
and
gs
cli
jne
hlt
mulb
and
ja
pop
xchg
imul
sbb
movsl
xlat
push
or
xchg
addr16
sti
jg
in
in
jle
data16
mov
iret
sub
pop
push
mov
hlt
jnp
lea
or
mov
mov
mov
or
in
sbb
inc
add
push
and
repnz
stos
int3
and
mov
xchg
rcrb
mov
pop
mov
mov
or
jb
fsubs
in
mov
outsl
pop
addr16
out
jge
out
adc
inc
das
or
andl
jns
push
test
inc
lret
sti
inc
and
add
cmp
cld
aas
call
adc
outsl
mov
xor
and
std
jp
push
mov
push
popf
loop
shrb
ret
pop
sub
mov
dec
or
out
dec
jno
add
adc
iret
dec
adc
faddl
add
data16
mov
pop
dec
xchg
outsl
push
and
inc
in
and
cmp
jl
rorb
adc
out
lds
dec
push
mov
daa
mov
ficoml
pop
mov
movd
xor
outsb
daa
loopne
aam
jae
daa
dec
sbb
adcl
out
push
cld
roll
or
jge
jl
mov
cltd
iret
es
ds
jecxz
or
xchg
jmp
mov
jbe
xchg
ret
xchg
popf
arpl
outsb
mov
sub
add
or
inc
cmpsl
mov
cmpsb
push
stos
inc
dec
orb
mov
mov
sbb
pushf
out
adc
add
aad
inc
movsl
pop
inc
jg
cmp
imul
scas
inc
inc
in
outsl
cwtl
or
das
pop
pop
jg
cmp
cmc
dec
mov
mov
lahf
test
icebp
xchg
ja
mov
shlb
xor
jb
sub
out
cmc
out
pushf
adc
fwait
mov
push
push
ljmp
mov
inc
das
mov
sti
mov
push
jp
adc
loopne
ucomiss
mov
push
shlb
jl
pop
add
pinsrw
and
cs
into
inc
pop
push
sti
push
cmp
adc
jbe
mov
rolb
jne
lahf
test
shlb
sbb
jo
cwtl
jae
dec
scas
jne
add
pushf
mov
fstps
dec
ss
orl
rcll
dec
jo
pop
into
movsb
dec
test
test
fnsave
dec
and
cmc
cli
hlt
in
add
mov
shlb
mov
pop
out
ja
xor
sub
les
movsb
imul
xor
sub
popa
sar
mov
shll
mov
sub
mov
mov
aam
xor
sub
dec
fimuls
sub
push
mov
mov
leave
sub
adc
add
mov
in
inc
xchg
jg
inc
dec
js
adc
cld
adc
add
int
ds
inc
inc
push
jnp
outsb
and
jle
lahf
rorb
lahf
dec
xor
pop
or
repnz
or
nop
pop
lods
cmp
addb
lcall
js
repz
jns
into
push
jp
mov
or
je
pop
cmpsb
pushf
add
dec
ret
push
mov
add
pop
sbb
rcrl
popf
js,pn
mov
out
and
lods
sub
add
push
inc
push
out
pop
xchg
into
into
adc
iret
sub
ret
shll
insl
jge
cmp
test
lret
inc
les
movsb
in
je
push
aas
add
add
sbb
mov
sub
lea
add
adc
dec
and
gs
dec
jmp
fdivrs
int
or
dec
lock
xchg
aam
sub
xchg
jne
dec
rcr
shl
mov
xchg
shl
ficomps
ljmp
aad
or
pop
nop
mov
and
cmpsb
fmull
outsl
data16
out
inc
dec
push
repz
arpl
fldt
icebp
mov
pop
jle
into
int3
pop
sub
imul
jecxz
cmp
loop
sbb
jp
add
lcall
push
in
popf
dec
jne
dec
stc
lds
push
loopne
pop
imulb
popf
movsb
icebp
out
cmp
lds
cli
mov
in
popf
scas
fucomi
outsl
xchg
popf
data16
das
out
js
fisubl
mov
mov
ret
pop
setb
xor
imul
std
sub
cmc
daa
sarl
mov
aam
dec
daa
lret
pop
loope
ret
jnp
fiadds
in
cmp
inc
add
sub
jb
inc
pop
ret
sbb
jnp
cli
and
dec
push
jbe
out
iret
fldt
push
scas
pop
adc
jmp
push
add
mov
insl
or
into
les
and
adcb
jmp
sbb
push
push
fiadds
push
insl
mov
jne
xchg
outsb
jne
es
aas
xor
hlt
fisttpll
rcr
sbb
pop
adc
cs
push
mov
and
mov
mov
fsubrp
icebp
fstl
es
roll
fnstenv
mov
mov
sahf
pop
fstpt
stos
xor
rcl
repnz
cmpsl
jne
icebp
imul
psraw
push
mov
repz
adc
sarb
test
lods
ljmp
mov
pop
cwtl
test
notb
sub
jns
call
outsb
loop
mov
and
mov
mov
cld
sbb
mov
and
idivl
cmp
lock
lds
jmp
sub
cmc
push
movsl
mov
sbb
out
sbb
sub
shrb
adc
push
push
aad
insl
gs
hlt
mov
incl
test
adc
in
clc
cmp
mov
mov
into
pop
mov
pop
sbb
jl
lock
xor
xlat
daa
pop
or
stos
fcoms
enter
jno
pand
lcall
insl
sub
dec
test
hlt
mov
and
inc
je
mov
jp
cmp
inc
xor
into
orb
push
int3
or
test
push
cli
adcb
jo
icebp
ret
shrb
je
xchg
fdivl
lods
rclb
mov
sbb
lcall
adc
rolb
cmc
or
mov
outsl
cld
push
mov
mov
orl
aam
ja
mov
clc
and
jmpw
out
loopne
mov
inc
outsl
adc
shrb
lea
pop
aam
hlt
and
dec
mov
mov
lret
cmp
and
push
std
sahf
push
push
inc
mov
popa
lods
sub
and
fstpt
rcl
out
and
hlt
add
cltd
outsl
or
pop
mov
bnd
cwtl
adc
dec
int
jge
push
jbe
add
mov
push
mov
dec
mov
pop
repz
icebp
movsl
sbb
jbe
and
jg
jmp
adc
pop
xor
jo
pop
nop
dec
out
cmpsl
add
ffreep
cmp
aas
mov
add
adc
mov
mov
sub
xor
arpl
pop
lcall
add
es
fisttpll
cmp
cmp
arpl
pextrw
push
push
movsb
cli
mov
sahf
cmpl
add
leave
pop
js
test
aaa
je
scas
imul
sti
test
and
pop
lea
mov
mov
cmpps
repz
mov
mov
push
fstpl
pop
jecxz
jg
jnp
ret
xor
in
sbb
sahf
jo
mov
xchg
mov
cmpsb
sub
lcall
scas
cmp
movsl
fisttps
push
or
rcrb
inc
xchg
lcall
bound
bound
shlb
xor
jnp
popf
dec
mov
inc
inc
inc
mov
jge
adc
mov
rcrl
push
xor
rcl
lods
xor
ret
pop
or
in
rol
jp
rorb
aam
mov
test
add
sahf
jb
mov
movsb
aam
negb
ret
cmp
inc
mov
sub
add
add
int3
loopne
hlt
sahf
mov
and
ret
jnp
mov
insl
mov
cmc
mov
dec
sbb
inc
test
scas
sub
fisubs
jae
lcall
stc
and
push
jle
mov
sbb
jg
std
jmp
and
scas
sub
inc
in
loope
pop
in
test
fwait
mov
jecxz
js
setno
shrb
lock
xchg
mov
push
adc
insl
cli
xchg
xchg
xchg
mov
and
mov
mov
xor
popa
mov
xchg
popa
xor
add
lret
insb
push
scas
and
icebp
mov
xchg
pop
rorl
vmovhps
cmc
sti
jmp
lret
sbb
fidivrs
in
fbstp
jno
push
sub
roll
bound
sahf
daa
or
addr16
test
cmc
fwait
cli
loopne
pushf
push
and
xchg
jl
cmpsb
lea
pop
pop
mov
xor
dec
aas
xor
mov
mov
and
lds
sbb
jb
orl
pop
cmpsl
ffreep
jge
xchg
pop
cs
mov
pop
je
fcmovb
andb
mov
gs
jecxz,pt
mov
js
sbb
into
or
sub
pop
mov
mov
in
pop
jbe
jecxz
das
pop
clc
and
mov
cmpsb
xor
aad
add
add
daa
xchg
and
scas
lcall
insl
add
mov
push
repnz
fdivs
int
jmp
insl
mov
mov
inc
inc
mov
sub
iret
fimull
jae
inc
inc
mov
dec
adc
push
push
and
in
stos
dec
into
jns
std
fstps
in
sub
int
pop
add
lahf
inc
sbb
push
xor
dec
push
iret
cltd
mov
mov
jg
in
andl
aad
movsl
and
fisubrl
push
loop
add
mov
sbb
xchg
filds
fs
aam
sarb
flds
xor
sub
mov
add
sbb
call
cltd
imul
pop
daa
fcmovne
sarl
inc
push
ljmp
sub
subl
imul
mov
test
incb
mov
in
cli
jg
mov
pop
ret
xlat
push
adc
dec
mov
push
pop
xchg
and
xor
cld
jle
test
mov
pop
adc
rcrl
scas
clc
cmp
mov
add
xchg
jmp
into
xor
shlb
pusha
dec
loopne
rol
jmp
push
pop
cmp
jae
inc
in
cmp
sub
sub
rorl
data16
int
inc
pop
mov
mov
sbb
ja
jo
rolb
dec
adc
mov
fidivrs
iret
pop
mov
movsb
mov
js
jae
arpl
mov
jo
sbb
lcall
roll
xlat
stc
addl
cmpsb
sub
es
fisttpll
inc
div
movsl
or
dec
mov
test
sub
stos
mov
xchg
mov
mov
lcall
xor
inc
cmp
adc
xchg
sbb
test
pop
in
pop
sbb
loopne
int
xchg
inc
cmpsb
sar
inc
mov
cmp
mov
jnp
push
in
stos
sub
out
imul
loope
jns
pop
into
lret
sbb
dec
popa
cwtl
or
cmpsl
jbe
pop
rep
and
pop
xchg
aas
jne
xchg
popa
test
daa
mov
lcall
ja
sub
jle
andb
test
cmp
inc
popa
bound
sub
popl
fildll
sbb
js
mov
jecxz
lcall
add
into
xchg
fimuls
xchg
imul
jmp
cmpsb
mov
mov
or
cbtw
mov
xor
cmp
adc
inc
pop
lcall
ret
push
jno
sahf
outsl
mov
lods
mov
add
scas
and
inc
dec
jge
adc
nop
fldcw
pop
push
mov
cmp
stos
outsb
outsl
dec
xchg
movsb
idivl
scas
xor
rorb
sbb
sbb
jmp
mov
dec
pop
or
or
imul
shrb
pop
data16
lea
ret
daa
inc
adc
ja
in
divl
dec
push
sub
je
or
fisttpll
or
popa
sahf
clc
adc
mov
lock
dec
mov
mov
add
and
std
jg
or
movsl
mov
jae
dec
xchg
cs
sub
or
aam
insb
mov
rcrb
fdiv
push
outsb
in
cmpsl
out
mov
stc
mov
lret
push
nop
add
add
sbb
nop
daa
dec
mov
enter
inc
add
testb
ret
mov
insb
dec
and
rolb
outsb
mov
pushl
aad
data16
xor
xor
ficompl
sub
adc
xchg
hlt
and
fs
dec
cmpsb
add
jnp
rcr
inc
mov
sbb
cmp
push
rorl
or
cmpsl
imul
xchg
push
push
cwtl
into
push
pushl
dec
cmp
call
std
push
xchg
imul
movsl
loop
xchg
imul
insb
pop
push
sbb
lods
pusha
test
negl
lds
sarb
insl
cltd
iret
add
and
jo
cmpsb
cli
test
pop
lcall
mov
sub
movntq
in
push
lea
cmc
fs
sahf
jne
loop
nop
jnp
xor
arpl
xor
daa
into
sbb
aad
int
pop
mov
out
addr16
das
pop
dec
mov
cmpsl
in
xlat
fdivrl
je
inc
testl
lds
xlat
jge
dec
in
mov
fsubr
cwtl
inc
shl
iret
xorb
fidivl
cli
or
fsubr
push
lods
sbb
dec
xchg
pushf
test
inc
xchg
daa
mov
cmp
addr16
jle
dec
adc
das
push
loop
inc
and
cltd
jecxz
xor
arpl
pop
jns
stc
scas
scas
mov
sbb
inc
xor
hlt
push
pop
xor
mov
push
push
mov
adc
hlt
dec
push
or
cmp
add
adc
movhlps
out
clc
ss
jae
inc
xchg
in
in
sti
jge
inc
daa
in
cmp
stos
and
xchg
push
fisubrl
out
and
pop
jg
sbb
xor
xchg
jl
hlt
mov
std
cmp
jmp
aaa
ret
out
imul
ds
sarb
mov
pop
lret
xchg
movsl
gs
push
mov
xchg
mov
or
scas
sub
xchg
cs
mov
sbb
std
adc
inc
jne
inc
loopne
sbb
inc
int
sbb
add
cs
jl
xchg
enter
shll
cmc
ficomps
dec
jnp
sub
repnz
jge
cmp
ljmp
pop
rcrb
push
dec
mov
popf
mov
xlat
push
xchg
ljmp
inc
insb
mov
and
les
das
inc
in
xor
and
add
sbb
inc
jbe
and
and
mov
test
dec
iret
xchg
mov
les
imul
cmpsb
cmp
push
xchg
sbb
sbb
mov
push
xor
mov
es
std
sarl
pop
xchg
mulb
cmc
pop
scas
adc
movsb
pop
cmp
inc
mov
add
adc
in
in
cs
lahf
ret
push
mov
xor
sub
mov
adc
mov
out
mov
push
pop
pop
mov
inc
xor
lock
out
xchg
push
or
and
adc
and
adc
sub
mov
sub
mov
out
sbb
add
xchg
shlb
push
pop
sbb
mov
push
sahf
repz
mov
dec
push
movsl
pusha
lods
nop
ljmp
pop
cld
and
enter
adc
ljmp
vmovaps
jno
or
cmp
je
pop
lret
cmp
mov
sub
icebp
adc
dec
pop
xor
adc
ret
and
stos
lea
lea
nop
mov
call
bound
xchg
inc
xor
decb
xor
xor
xchg
jae
lcall
popf
inc
divb
or
fisttpll
inc
inc
mov
jp
mov
adc
mov
lret
or
mov
ss
es
enter
mov
loopne
xchg
mov
in
ret
cld
inc
push
pop
test
push
mov
lock
mov
or
outsb
les
subl
outsb
push
cmc
into
push
xor
les
xchg
sub
mov
fisubl
daa
push
mov
ficoms
mov
xor
cltd
or
hlt
into
popa
fdecstp
adc
stos
push
repnz
pop
add
out
push
lock
mov
sti
sbb
sbb
or
push
outsb
push
dec
mov
std
jl
sbb
movsb
loope
mov
push
movsb
repnz
xor
pop
fwait
cltd
fsubrs
lret
jmp
loop
dec
mov
xor
lahf
aaa
nop
subb
ffreep
lret
mov
test
adc
xor
in
xchg
xchg
insb
addr16
mov
xchg
aaa
ljmp
pop
rcrb
leave
gs
into
fisubrl
pushf
std
pushf
in
in
mov
orb
dec
mov
clc
out
xchg
fwait
add
xor
mov
jl
cmpsb
lods
xchg
repz
mov
jns
push
cmpsb
shr
loop
pop
test
lea
imul
inc
pop
lret
js
push
in
aam
jb
xor
add
mov
aad
dec
sub
fcoml
pop
sarl
mov
pop
aad
push
lret
rcr
or
xlat
mov
inc
cmp
jge
jbe
cltd
loopw
out
jne
test
sub
push
mov
xchg
jb
pop
pop
cmp
js
xchg
pop
fistpll
sub
and
out
pop
es
jo
cvtps2pd
and
cli
leave
sbb
or
mov
jb
rorb
or
push
cwtl
jle
adc
lea
fldt
jg
jg
shrb
push
xor
xor
mov
and
in
arpl
jb
ds
xchg
inc
mov
adc
and
clc
push
test
xchg
pop
out
jne
cmp
lods
jmp
or
fdivl
mov
sub
mov
in
or
xchg
scas
iretw
mov
mov
jae
or
jle
mov
cltd
bswap
ja
pop
sahf
push
scas
add
fs
popa
ret
mov
popf
loope
loope
test
mov
das
testl
bound
int3
jp
and
inc
xchg
test
add
lock
out
xlat
jne
inc
ret
es
cli
jle
pop
and
hlt
ljmp
or
mov
mov
stos
pop
inc
xchg
inc
lcall
fwait
adc
dec
movsl
cmp
in
pop
ljmp
repz
stc
xchg
xchg
out
push
in
rcll
pop
mov
pop
rcrl
or
leave
fidivrs
out
push
mov
jp
aam
aaa
lock
pop
out
into
push
mov
cwtl
adc
dec
jno
call
inc
sbb
inc
in
sub
mov
mov
push
scas
mov
fldcw
cs
push
cmp
or
ds
push
lods
mov
and
pushf
cmc
popa
faddl
or
cmc
stos
insb
enter
sbb
xlat
cmp
popa
test
mov
mov
roll
xlat
into
adc
hlt
pop
push
add
leave
and
adc
sbbl
mov
int
pop
loop
shll
push
movsl
dec
sahf
mov
std
fnsave
mov
fsubrl
je
jmp
cmpsb
mov
dec
lcall
mov
popf
out
mov
push
and
pop
inc
inc
dec
orl
cmp
fwait
xor
mov
mov
lea
movsl
cmpxchg
pushf
lahf
adc
test
stc
dec
adc
mov
pushf
mov
adc
test
mov
or
jge
loop
leave
and
clc
inc
push
jecxz
push
inc
test
add
fwait
lea
daa
cmpsb
jae
jecxz
pop
jg
out
mov
enter
mov
push
std
iret
test
stos
mov
lods
shlb
cmp
cmpsl
ds
jle
jb
subl
push
dec
push
mov
rcll
daa
xor
mov
mov
in
add
insl
frstor
aam
or
mov
cmpsl
dec
push
push
arpl
or
movsl
push
and
sub
fld
int3
or
add
fcompl
mov
and
sahf
xchg
or
dec
les
push
or
mov
popa
cmp
xchg
idiv
fsubrl
adc
jmp
icebp
add
mov
sub
jne
leave
mov
fucomip
or
pop
or
iret
adc
dec
fistl
ret
xorl
cmp
sti
fs
pop
and
insb
les
mov
repnz
addr16
repnz
jb
es
mov
mov
lock
stos
fxtract
imul
bswap
or
jo
outsl
imulb
ds
mov
xor
and
sahf
and
mov
pop
mov
js
sbb
jno
push
adc
ds
imull
push
outsl
stos
adc
inc
lods
divb
dec
bound
jo
push
lcall
push
in
call
inc
jne
ss
imul
icebp
fwait
int
jns
sets
jo
and
xchg
enter
mov
stc
sub
icebp
test
test
pop
cmp
enter
or
leave
fists
test
mov
adc
jecxz
push
pop
addr16
cld
movsl
and
inc
dec
movsl
adc
rorl
lret
mov
roll
enter
out
out
fs
inc
mov
xchg
dec
das
dec
sahf
jl
int
aaa
outsl
js
mov
cmp
shll
jns
in
aaa
xchg
aas
jp
push
arpl
sub
mov
inc
imul
xchg
jge
pop
test
add
mov
xchg
inc
mov
pusha
xchg
pop
mov
popf
js
sti
mov
and
dec
jecxz
add
and
test
mov
clc
ret
sti
cs
and
aam
nop
adc
and
adc
stos
lods
xchg
cld
call
fildl
xor
sub
rcrb
jae,pn
add
pushf
dec
inc
jmp
mov
pop
pushf
insl
insl
inc
sbb
int3
and
mov
sbb
insb
or
xor
fs
or
pop
mov
popa
and
mov
jl
adc
loop
mov
xchg
mov
xchg
inc
rorb
mov
imul
add
ss
cmc
or
in
outsb
jno
mov
or
cmp
inc
in
sub
pop
cmp
dec
push
sub
fwait
xor
mov
sbb
jae
inc
lods
sub
push
inc
adc
dec
xchg
and
ds
mov
fucomi
inc
jbe
mov
lock
cmpsl
dec
sti
clc
stos
mov
sbb
pop
movsl
cmpsb
xchg
bound
leave
lcall
add
sbb
fistpll
clc
push
aam
ficomps
insl
pop
mov
js
sbb
imul
push
pushf
aas
xchg
mov
inc
dec
mov
call
mov
psllw
mov
mov
fnstenv
lcall
dec
pop
fists
mov
dec
xor
xchg
push
add
pop
lods
cli
cmp
sarl
ret
fldlg2
add
gs
pop
cmp
test
pop
mov
loope
sarb
mov
outsb
leave
sub
mov
cmpsb
shlb
shlb
int
or
scas
inc
rcrb
xchg
mov
jo
shl
ret
out
ljmp
iret
loop
scas
xchg
leave
or
push
and
iret
lock
cmp
lahf
push
sbb
xchg
jne
and
xchg
and
int
inc
sbbl
aas
loopne
cmpb
dec
lock
mov
sbb
test
lahf
mov
ljmp
loop
xchg
mov
into
aaa
rcrb
notb
add
jno
add
mov
push
add
bound
fldt
mov
adc
daa
lods
movsl
fs
stos
out
psubsw
adc
leave
out
cmc
sub
adc
outsl
insl
jmp
fists
sub
mov
xor
dec
outsb
xchg
cmp
lods
jo
xchg
out
fwait
inc
movsb
es
mov
icebp
repnz
mov
or
mov
push
mov
pop
mov
loopne
negl
int
into
and
arpl
mov
jb
fidivrl
mov
mov
stos
push
rorl
ffree
or
xlat
push
jb
adc
mov
sub
out
sbb
add
inc
jmp
adc
lcall
addb
in
pop
cmp
movaps
rcll
fidivl
cmpsb
xor
mov
or
and
xor
pop
js
in
and
lods
sbb
je
ja
mov
mov
or
mov
ljmp
int3
filds
push
and
aaa
add
push
fsub
pop
movsb
imul
lea
or
dec
pushf
and
seto
jg
daa
std
shl
cli
inc
inc
in
or
jo
fsubrl
mov
push
sub
loope
addr16
pop
popf
in
test
dec
mov
push
shrb
ja
insl
lock
sub
lahf
out
repz
dec
fbstp
into
movsl
rolb
in
or
repz
cwtl
jmp
mov
fdivs
or
stos
pop
adc
sub
xchg
or
push
int3
sub
imul
dec
jno
push
aad
mov
lds
pop
sub
push
mov
add
jno
inc
loope
adc
lret
push
int3
leave
mov
loope
or
jge
fnstenv
aaa
mov
xlat
jmp
xchg
xor
in
fadds
xchg
movsl
dec
jle
mov
ja
gs
jl
pop
jl
int3
xor
and
nop
faddl
mov
jg,pt
mov
roll
adc
mov
mov
xor
mov
push
popf
inc
jmp
loope
insb
stos
adc
fdivrl
mov
xor
pop
xor
shll
stos
sub
stc
test
aaa
imul
and
push
mov
xor
cmp
adc
mov
shll
pop
loopne
sbb
xchg
loope
dec
andl
scas
mov
xor
mov
inc
shrl
mov
mov
inc
loop
sub
mov
sub
xchg
jne
int
lods
inc
fidivrl
dec
cmp
cmp
xchg
ja
push
jae
lret
cmp
mov
pushf
jp
setb
sbb
test
mov
sub
lcall
fidivl
pop
in
mov
mov
movsb
cmpsl
or
add
jmp
pushf
dec
jge
dec
negl
and
adc
push
fadd
mov
stos
push
xchg
inc
in
push
sbb
push
cmp
enter
xor
loope
xchg
movsl
sub
mov
clc
xchg
inc
mov
mov
aaa
incl
lret
mulb
movsb
lods
fisttpll
xchg
cltd
out
add
add
sub
not
ja
cld
inc
ja
push
sbb
sbb
js
cmpsl
inc
cmp
push
fstl
pushf
outsl
shrb
xchg
jno
ja
sub
stos
xchg
leave
inc
pop
push
sbb
out
test
cltd
repz
push
add
sbb
inc
jg
xor
jp
jp
pop
fiadds
test
push
mov
bound
xor
daa
mov
sub
xor
xor
sbb
fidivrl
and
and
xor
divl
in
enter
inc
or
add
inc
push
je
shlb
xchg
mov
fwait
jp
push
lock
push
mov
stos
xchg
xchg
test
sbb
fadds
daa
sub
pop
jmp
ljmp
les
add
sti
mov
movl
mov
sbb
cltd
pop
jno
dec
fiadds
loope
push
sbb
xchg
xor
cmp
dec
xchg
shll
mov
js
rcrl
cmp
daa
fildl
test
mov
in
mov
repz
adc
ret
inc
enter
pop
xor
enter
je
push
cmp
les
xor
lret
sbb
lock
in
rclb
insl
pop
mov
stos
in
or
rorb
repnz
inc
cltd
xchg
loopne
jbe
je
ret
aas
cmc
pop
cli
jnp
out
or
and
mov
cmpsl
mov
mov
adc
addb
or
mov
loop
and
xchg
test
mov
sub
mov
iret
ss
incb
aas
int3
movsl
adc
jo
cmpsl
loopne
orl
sahf
cmp
cmp
xorb
rcrb
inc
sub
and
repz
fcoml
mov
and
mov
int3
aam
pop
sub
in
push
dec
mov
stc
cmp
xchg
jne
cmpsl
fbld
push
xchg
test
pop
adc
dec
hlt
push
lahf
and
sarb
add
repz
out
arpl
xchg
lcall
ss
add
data16
sti
inc
test
mov
pop
stos
cmp
xor
js
or
add
jbe
aaa
clc
add
or
adc
dec
mov
ljmp
dec
pop
jne
jno
sbb
mov
into
pop
and
and
sub
push
mov
leave
xlat
insb
pop
lret
or
popa
sub
les
lds
inc
sub
stos
cs
or
cmp
pusha
lods
cwtl
bound
inc
xor
loopne
pop
sub
in
mov
pop
sub
movsb
pop
lret
and
sbb
dec
push
pop
xchg
pushf
xchg
repz
inc
pop
shl
fistps
push
mov
dec
lahf
mov
ret
add
add
lods
imul
or
add
in
bound
mov
mov
mov
test
pop
xchg
in
add
mov
sub
jmp
and
jae
pop
into
out
or
rcl
jbe
jl
das
add
arpl
and
sahf
add
fdiv
fistpll
push
mov
push
stc
pop
mov
mov
stos
scas
pop
push
outsl
dec
loope
sbb
aam
push
lods
lahf
jno
repnz
outsl
stos
cmp
in
loopne
sbb
xchg
icebp
sbb
pop
jecxz
lock
sahf
xchg
mov
jo
push
mov
cmp
sub
and
repnz
or
gs
rcr
add
das
or
fwait
leave
mov
and
or
jg
bound
dec
scas
pop
sbb
rorb
mov
popa
pop
addr16
scas
into
addr16
mov
xchg
xchg
xchg
or
adc
and
pusha
ljmp
std
mov
xor
inc
add
or
loopne
sub
test
push
xchg
int
shrl
mov
out
ljmp
xchg
jne
adc
fnstsw
inc
add
mov
or
mull
out
xor
inc
int
es
stos
sbb
jecxz,pn
sub
xor
adc
add
clc
mov
inc
pop
push
stos
mov
dec
push
dec
push
in
pop
psllq
adc
in
lds
adc
ret
test
lea
mov
in
cmp
sub
jo
mov
sbb
mov
dec
jnp
pop
adc
gs
clc
lods
imul
repnz
push
pop
push
ret
insb
cli
lods
mov
sub
std
adc
dec
pushf
mov
cmp
fs
rcl
stc
dec
stos
sbb
sbb
sbb
sbb
ss
xlat
push
dec
mov
pop
div
pop
fcmovb
mov
aas
cwtl
mov
out
push
lds
and
lods
addps
outsl
in
inc
cs
dec
rclb
testl
push
dec
adc
fmull
ficomps
out
stos
aad
cmp
icebp
dec
xlat
daa
insl
popa
add
dec
xchg
pop
enter
je
pop
mov
aam
arpl
cltd
or
push
jb
sarb
pop
fcoms
lds
cmp
jae
pop
and
xchg
sahf
iret
bound
int
push
scas
dec
clc
std
and
popa
out
fnstsw
insl
shrl
std
mov
pop
idivb
pop
xor
fcmovne
xchg
incl
add
mov
daa
pushf
push
sub
sbb
push
xchg
lods
sub
pop
pop
or
daa
push
mov
enter
enter
loop
push
imul
mov
leave
repnz
or
bound
stos
cltd
jns
xchg
and
cmpsl
in
cmc
hlt
mov
das
push
rcll
inc
mov
lock
xor
sub
in
divl
jle
sbb
sti
mov
in
repnz
pop
xlat
aaa
fdivrs
sub
loope
inc
stc
cli
jnp
mov
outsb
pusha
push
dec
inc
jecxz
mov
mov
fs
rcll
pop
sar
pop
pushf
aas
mov
jl
subb
fwait
cld
mov
fwait
and
xchg
dec
jg
inc
mov
inc
test
mov
orl
stos
inc
addl
outsl
pop
das
jmp
cmp
daa
mov
xor
arpl
rorb
sar
push
popa
lret
cwtl
xor
popf
cwtl
ljmp
loope
mov
adc
push
gs
mov
push
lret
in
es
in
lock
in
aas
sbb
push
adc
rolb
mov
xor
sahf
or
xchg
cwtl
shll
xchg
jge
push
mov
mov
push
add
stos
mov
hlt
mov
js
jno
add
mov
push
pop
insl
ljmp
lods
sub
sarl
mov
fucomp
data16
enter
out
mov
and
jecxz
cld
in
xor
mov
insl
jne
test
int3
iret
mov
sub
cmp
int3
jnp
push
mov
sti
les
add
shrl
cmp
mov
addb
pop
jmp
add
push
clc
call
xor
add
daa
rcrl
push
loopne
push
inc
adc
test
ss
adcb
stos
push
pop
out
or
add
pop
js
lret
dec
in
loop
das
mov
popf
sti
ret
mov
push
fldcw
lahf
clc
scas
mov
into
lcall
push
mov
xchg
in
cmpsl
pusha
add
add
arpl
dec
pop
mov
loop
js
jae
aad
adc
into
mov
mov
push
xchg
iret
daa
and
dec
sti
jle
dec
fnstsw
out
xchg
arpl
push
xchg
jp
rorl
cmp
mov
sbb
jge
jmp
cmpsl
pop
pop
jmp
mov
and
lcall
xor
fstpt
mov
adc
sahf
push
pop
arpl
int3
mov
movsb
imul
sarl
pop
push
sub
xor
addr16
mov
test
idiv
xor
sub
jae
nop
lods
test
cld
out
fildl
pushf
in
fwait
sub
lods
mov
scas
mov
xchg
xchg
xor
or
nop
ss
scas
xor
lock
fisttpl
xlat
push
jo
aam
mov
pop
pop
nop
lret
fs
cmp
scas
les
dec
pop
or
rcl
mov
jecxz
mov
jne
xchg
jecxz
mov
xchg
iret
cmp
dec
pop
test
push
push
fsubrs
or
outsl
jmp
addb
inc
mov
mov
xchg
fisubs
cmpsb
imul
push
sbb
xchg
mov
pop
jg
adc
pop
cmpsb
and
cmp
fimuls
jg
add
xor
idivl
add
and
push
js
xchg
sub
mov
inc
inc
test
xchg
pop
mov
adc
dec
imul
add
lret
arpl
aaa
sub
dec
cmp
les
mov
mov
aam
or
stos
or
cld
sub
push
adc
aam
jo
mov
shll
mov
mov
sbb
aam
rcrb
jp
popa
loop
sbb
jecxz
dec
and
movsb
hlt
int3
or
shr
and
cltd
loop
add
mov
in
adc
fcoml
ja
jbe
shlb
jns
fildl
fwait
inc
jnp
push
mov
push
jo
add
dec
mov
xchg
aaa
push
sbb
sti
sub
cli
xchg
fwait
lds
adc
or
enter
fcoms
sbb
or
jge
mov
leave
jge
push
mov
lret
fs
lret
enter
and
sbb
leave
sbb
in
pop
movsl
test
pop
aaa
lods
xrelease
popf
and
dec
sub
out
inc
imul
sbbb
push
scas
pop
mov
sub
jnp
jl
cmp
sbbb
adc
mov
stos
clc
cmp
jbe
scas
adc
xchg
in
xchg
push
sub
loope
cmp
mov
dec
or
and
sub
lret
cli
dec
nop
mov
insl
push
test
xchg
shlb
push
mov
mov
mov
xor
cmp
sub
popf
movsb
inc
sub
jb
or
filds
adc
cs
dec
stc
add
jl
pop
mov
pusha
cld
sbb
in
jecxz
jnp
and
iret
je
xor
mov
pop
subb
fwait
sub
sbb
shll
jp
inc
pop
cmp
gs
adc
jae
mov
adc
stos
jmp
testl
and
push
adc
sbb
pop
push
or
popa
loop
orb
jle
repnz
lock
pop
jmp
push
jge
inc
jo
cmp
mov
je
lret
adc
inc
loope
mov
sbb
es
push
movl
into
movsb
xor
insb
push
fwait
xor
sbb
cmpsl
mov
ror
or
repz
pop
xchg
insb
js
int3
sub
insl
mov
dec
jg
stos
insb
into
lahf
push
pop
sub
call
scas
push
outsb
and
push
aaa
shrb
arpl
imul
stos
outsb
decb
cwtl
xchg
iret
cmp
cwtl
std
outsb
xchg
or
jg
clc
cmc
fcoms
out
mov
pop
repnz
stos
addr16
mov
orl
xchg
outsb
xchg
jae
jnp
push
xor
sub
sbb
cmpsl
mov
aam
cmpsl
jns
mov
inc
lahf
lods
mov
fs
add
push
repnz
add
mov
add
add
enter
xor
aas
add
dec
rclb
cmp
xchg
mov
inc
mov
mov
push
mov
stc
testb
inc
push
mov
imul
jp
ljmp
mov
arpl
xlat
fdivl
int3
pushf
adc
mov
and
xchg
mov
sti
lods
sbb
movsb
ret
push
js
pop
hlt
sbb
jmp
xorl
jl
cltd
out
dec
dec
jns
mov
cli
sub
movsl
mov
ss
daa
and
icebp
test
inc
sub
imul
fimull
cmp
xlat
ret
fcomip
sar
movsb
loopne
iret
push
jae
sub
mov
aaa
mov
pusha
movsb
test
pop
and
lods
sub
mov
adc
push
icebp
sub
cltd
or
pop
pop
movsl
cmp
xor
in
shlb
jnp
push
cmp
pop
jl
imul
adc
push
sbb
fistps
or
push
push
iret
xor
or
add
inc
nop
fisttps
stos
xchg
lods
mov
mov
lock
pop
out
out
mov
dec
add
pop
daa
lahf
jno
jle
mov
mov
movsl
push
jae
stc
ror
fcoml
add
mov
movsb
jne
repz
xor
pop
mov
jns
es
mov
div
mov
ss
into
cmc
xchg
decl
fstl
push
pop
lahf
int3
ljmp
aaa
add
negb
xchg
popf
lds
inc
in
inc
add
ret
cmc
mov
pop
nop
push
jns
jne
les
pop
xchg
jo
cmc
js
out
adc
fimull
rclb
test
mov
imul
sub
adc
ja
push
lret
jno
cmc
or
push
cmp
inc
fisubrs
xlat
mov
mov
jno
cmp
pushf
lds
pop
andb
xchg
mov
jo
fs
and
outsl
xchg
mov
out
mov
imul
fcoml
add
es
xor
mov
mov
xor
mov
dec
cwtl
bswap
movsl
nop
aad
dec
fisubl
data16
ret
pushf
scas
inc
or
sarl
xchg
xorl
mov
jl
mov
je
mov
push
add
mov
les
add
popa
dec
in
pop
iret
inc
push
xchg
push
stos
icebp
dec
das
pop
jl
xchg
leave
xchg
scas
enter
aas
cmp
pop
nop
cmpsl
mov
imul
call
add
loop
push
jp
push
mov
dec
scas
loope
lods
dec
xor
sub
pop
inc
loope
cli
adc
or
xchg
ret
scas
fmul
loope
daa
insl
add
pop
fldenv
dec
cwtl
pop
in
imul
gs
or
or
mov
outsb
pop
movsl
mov
roll
inc
pusha
scas
mov
cmpsl
mov
ftst
scas
inc
dec
mov
das
notb
mov
popf
sub
lret
mov
imul
dec
aam
bound
int
xor
push
xor
jmp
mov
ljmp
add
lods
mov
pop
shl
pop
dec
int3
cmpsb
stos
test
leave
cmpsl
popa
push
pop
imul
into
je
mov
arpl
and
sbb
aaa
sub
imull
fs
fists
xlat
cmp
fmul
lret
cwtl
imul
mov
into
stos
mov
bound
pushf
out
lock
repz
adc
mov
enter
jmp
and
add
scas
jp
cmp
dec
leave
sahf
adc
sub
jo
jae
adc
jo
inc
popf
add
loop
sub
stc
aad
xchg
ret
je
imul
int
popf
mov
popf
and
fs
ds
mov
in
subb
pop
addr16
mov
outsl
mov
pop
inc
aad
cmp
movsb
js
sub
mov
lods
icebp
push
xor
rolb
sbb
mov
negl
cmp
mov
sbb
aad
decb
movsb
insb
arpl
or
pop
jecxz
lods
clc
dec
xchg
movsl
push
sbb
leave
pop
inc
fisubl
cmp
dec
add
call
movsl
ss
sub
addr16
push
sub
xchg
aaa
insb
jo
xor
inc
push
fimull
sahf
mov
insl
lahf
add
sub
push
cli
stc
adc
cmc
cli
sub
imul
fimuls
xor
nop
lret
jge
push
cmp
clc
andb
test
push
add
dec
sahf
insb
pop
xor
aaa
mov
mov
inc
cmp
mov
adc
icebp
jge
stos
int
std
jae
pop
inc
lods
loopne
cs
sti
inc
mov
mov
xor
push
jecxz
aad
pop
fs
aad
and
gs
and
mov
inc
adc
lcall
jecxz
sub
out
sahf
test
cmpsb
in
adc
or
xlat
ds
scas
jno
dec
out
ret
adc
sub
andb
jne
lret
dec
repnz
dec
or
test
in
sub
pop
push
in
jno
jmp
incl
adc
xor
dec
or
sbbl
sub
cmp
push
in
sub
sarb
fcomi
popa
rcrb
jae
mov
inc
sarb
rcl
aas
fmull
xchg
mov
mov
xor
stos
gs
jno
aad
movsb
inc
arpl
mov
nop
lahf
mov
lahf
in
inc
stos
je
pop
mov
cmp
sbb
adc
xor
imulb
adcb
or
pusha
sbb
mov
xor
jne
icebp
pop
aaa
push
dec
mov
sub
stos
mov
push
enter
pop
pop
dec
in
jno
xlat
jo
mov
gs
push
sub
lahf
pop
mov
dec
push
inc
jo
lcall
mov
clc
lods
stos
sub
loop
sub
mov
pop
pop
insb
adc
add
fmuls
loope
lea
addr16
push
fstl
into
ljmp
shrb
into
dec
jno
ss
ss
jge
rcl
data16
mov
cmpsl
nop
pop
clc
ffreep
mov
sahf
rclb
cmp
sbb
mov
imul
daa
test
into
xor
test
fwait
sbb
and
sbb
push
shlb
xor
mov
push
sub
cmp
mov
sbb
test
pop
mov
xchg
cmc
inc
add
xor
loopne
sub
jl
pop
stos
inc
inc
bnd
mov
pusha
rorb
in
and
mov
jne
pushf
dec
sarl
lret
mov
sbb
jb
cmp
mov
ret
mov
insl
lds
xor
das
mov
int
sahf
jp
pop
sbb
mov
outsl
sub
leave
in
das
outsb
xor
hlt
psubusb
xchg
push
data16
dec
daa
movl
push
xchg
and
fcos
insb
adc
imul
push
mov
and
add
and
pop
push
je
lret
test
inc
pop
adc
outsl
adc
mov
outsb
dec
cmc
fcmove
ficoms
and
adc
mov
pushl
jg
mov
pop
jle
in
mov
or
clc
ret
cmp
fnstenv
call
mov
in
fisttpll
mov
cld
aas
ret
js
mov
add
out
sub
jnp
ds
ljmp
dec
cmpsl
push
add
lods
adc
sub
lret
fisttpl
les
in
gs
cmp
in
xor
sub
out
push
cmp
xor
pop
mov
int
xlat
popf
js
mov
fmull
push
and
outsb
pop
mov
inc
fdiv
push
cltd
js
push
dec
or
bnd
mov
icebp
scas
xchg
lods
sub
out
je
push
jle,pt
mov
call
dec
ficoms
cmp
cmp
jb
inc
pop
jp
sbbl
push
push
mov
mov
repz
jns
cmp
add
cmpb
adc
sub
dec
lahf
loop
outsb
mov
in
shr
iret
and
mov
add
divb
cmpsl
jp
aad
jl
fcmovnb
sbb
sub
xor
sbb
dec
int
outsb
scas
lods
stc
leave
pushf
lahf
sub
imul
inc
jbe
std
imul
or
ljmp
or
pop
aas
adc
adcb
les
xchg
xchg
sahf
hlt
pop
clc
push
pop
jnp
jmp
pop
jbe
test
repnz
test
fldenv
sub
add
popa
pushf
jmp
std
pushf
cltd
mov
cmp
push
and
mov
dec
xchg
jle
test
mov
cmp
gs
scas
mov
filds
lea
xlat
bound
mov
call
lds
inc
dec
hlt
rorb
push
and
mov
repnz
cld
int3
mov
ljmp
inc
inc
cmp
lock
push
cltd
jge
repz
lds
xchg
out
imul
pop
sbb
repz
sbb
lods
mov
stos
and
sarl
aam
jp
lods
jne
loop
addl
jb
mov
sub
jne
or
pop
adc
lret
lds
stos
jb
test
es
lcall
fcmovne
gs
cmpsb
adc
aas
add
sub
xor
shl
repz
mov
test
stos
lods
pop
mov
jecxz
push
ja
cmpsb
push
in
sub
cmpsb
add
ret
inc
dec
xor
ret
adcl
in
or
pop
push
jp
dec
out
cmp
cmpb
negl
movsb
xor
js
cltd
push
push
inc
int3
imull
mov
cld
cwtl
movsb
cltd
or
xlat
lods
outsb
insl
mov
mov
sbbl
mov
imul
imul
inc
or
mov
sahf
out
test
mov
in
jno
cmp
jge
sarl
icebp
xchg
add
hlt
xchg
lea
mov
aaa
int3
cmp
in
movsb
pop
cld
cmp
aas
adc
shll
mov
repnz
mov
fldl
or
inc
inc
test
repnz
imul
xchg
xchg
call
jl
cmc
and
jge
jle
pop
mov
mov
lods
mov
add
sub
xor
push
mov
jnp
xor
or
pop
fimuls
outsb
push
inc
jg
push
fldl
daa
push
xchg
xchg
add
pop
sahf
jb
jns
sar
jle
mov
int
in
out
mov
test
aad
or
inc
cmp
loope
test
xor
xchg
cmp
iret
out
mov
inc
cltd
and
mov
xor
shll
jmp
fisttpll
sub
std
stos
andb
mov
push
dec
aad
les
jb
sbb
inc
clc
or
push
pop
daa
add
pop
adc
xchg
rcll
and
adc
mov
cs
lods
lret
sbb
mov
in
mov
xchg
popa
push
mov
mov
sub
dec
lret
jbe
xchg
pop
dec
sub
cmp
adc
pop
lahf
dec
add
setb
pop
jle
xchg
stos
push
test
jg
aas
mov
mov
in
inc
xor
sbbb
xchg
pop
and
popf
or
push
jmp
mov
cmpsb
out
and
pop
pop
xchg
aam
ja
pop
cld
add
pop
jae
mov
popf
imul
or
mov
mov
pop
sub
lods
test
push
insl
int3
call
xchg
je
and
sub
subl
mov
jmp
and
pusha
pop
sbb
push
inc
stos
and
jnp
sub
or
xchg
mov
mov
flds
mov
into
into
lods
add
cltd
in
cmp
test
xor
xor
jns
pop
leave
cmp
clc
dec
mov
scas
cmp
adc
add
pop
dec
mov
pop
lret
addr16
dec
stos
pop
xchg
out
mov
jge
mov
les
les
mov
mov
orl
add
jae
aaa
fwait
jb
push
aam
push
xor
push
jae
pop
mov
insb
xchg
push
push
int3
inc
mov
subb
sahf
fcmovb
idivb
aaa
imul
ss
inc
test
sbb
mov
pop
arpl
shlb
sub
test
mov
xchg
iret
jmp
ficomps
hlt
mov
cmc
mov
inc
add
inc
sahf
jecxz
ret
into
jg
sti
inc
dec
sub
xor
stos
inc
jnp
lea
adc
jmp
subl
fucomip
xchg
push
inc
iret
sub
movsl
in
jne
sbb
xlat
dec
movsb
and
sub
jbe
push
pop
in
xchg
cmpsb
ret
cmp
cmp
or
lods
xor
loopne
cmove
xor
or
mov
jp
aam
ret
xchg
xchg
shrl
rcll
add
cwtl
test
mov
xor
pop
xor
mov
lods
hlt
ss
pop
decl
int
dec
lea
jle
insb
adc
mov
pop
sbb
mov
adc
repz
shrb
sub
jne
xor
mov
out
out
outsl
jg
je
ret
mov
jno
push
cli
or
sar
sti
imul
push
lcall
ljmp
ret
pop
enter
add
pushf
mov
stos
fildl
inc
andl
ret
repz
imul
inc
xchg
gs
adc
packsswb
test
adc
pop
ret
dec
and
daa
inc
push
pushf
lock
and
imul
les
int
push
push
in
jl
rcll
les
jg
sbb
aad
pop
pop
call
dec
jmp
pop
xchg
cmp
lcall
cmpsl
leave
sub
ret
adc
test
adc
lea
and
cli
sahf
mov
dec
mov
mov
ficoms
jae
inc
lds
push
xchg
repnz
jecxz
pop
push
rcrb
and
sbb
mov
incb
inc
cltd
out
movsb
loop
in
jb
adc
lret
adc
sub
lcall
jno
test
das
fstl
or
les
popa
sub
cmpsl
hlt
insb
sbb
push
repz
repnz
ret
dec
movsl
dec
and
inc
popa
cmpsb
or
push
je
add
imull
push
mov
bound
xor
outsb
dec
inc
push
mov
scas
inc
xor
mov
mov
sbb
loop
xlat
inc
sti
popf
test
sbb
mov
add
mov
mov
mov
sahf
push
sbb
hlt
xchg
push
pushf
or
scas
stos
mov
sub
ljmp
inc
imul
popa
lahf
in
test
or
mov
add
or
movb
push
sub
enter
dec
sub
pop
in
xchg
inc
int
jge
pop
dec
mov
sbb
je
jb,pn
add
fucomp
jno
pop
repnz
xchg
call
mov
inc
sbb
sub
push
in
mov
mov
repnz
push
lea
testb
ja
inc
mov
lcall
mov
scas
mov
int3
sub
daa
mov
xor
je
jbe
jb
stos
ret
fdivl
rolb
xchg
jns
mov
xchg
mov
pop
test
outsb
ds
cs
iret
add
fildll
cmpsb
cmp
jecxz
ret
push
sbb
outsb
add
arpl
repz
lcall
add
push
pop
push
and
adc
mov
dec
xor
outsl
mov
mov
daa
mov
mulb
mov
pop
test
outsb
hlt
adc
inc
xlat
cmpsl
nop
jno
in
push
mov
xor
add
jb
int
in
jge
pushf
push
mov
mov
sub
adc
rol
shll
pop
cmc
imul
ror
jnp
adc
orb
push
sbb
push
push
xorb
sub
dec
sbb
pop
cmp
stos
mov
js
xchg
popl
popf
rorl
repnz
sub
dec
fisubrs
into
popa
add
test
push
addr16
jne
in
lock
jbe
mov
jge
xor
cmp
fisubl
stos
ja
mov
jns
mov
and
daa
sbb
ss
loop
shll
pusha
adc
rcrl
push
jmp
stos
pop
and
xlat
lds
inc
adc
cli
pop
or
mov
inc
je
mov
dec
and
inc
das
fadds
or
cmp
cmp
xlat
lock
sti
ds
mov
mov
sub
push
sahf
ret
sub
sbb
cmp
loop
ds
shll
cmpsb
aas
in
mov
mov
sub
sbb
out
mov
xlat
sbb
loopne
nop
and
xor
sarb
mov
jge
pop
mov
jg
std
inc
xchg
fadd
mov
daa
aad
xor
pop
lods
mov
inc
dec
mov
das
push
adc
loop
sti
add
cmpsb
fsubrs
xchg
cs
fdiv
add
cmp
fnstsw
in
shll
popf
sahf
push
int
nop
xchg
imul
lea
xlat
sbb
lcall
or
sub
inc
jne
cmpl
push
jne
inc
cmc
jl
dec
or
movsl
dec
wbinvd
ja
popf
adc
gs
outsl
cltd
jbe
stc
cmp
or
insb
dec
cmp
pop
xor
out
cmp
test
xchg
jae
test
jp
mov
std
scas
jecxz
push
lret
xor
repnz
movsb
out
test
push
xor
add
iret
adc
fld
scas
mov
sbb
insb
push
insl
jmp
mov
rclb
imul
subb
dec
inc
pushf
call
daa
movsl
lock
iret
lock
adc
pop
mov
push
sbb
addr16
iret
mov
int
push
cli
mov
fwait
cmp
push
mov
xchg
xor
push
dec
mov
inc
sbb
fbld
ss
nop
or
shr
pop
xor
jae
jb
ret
jecxz
mov
push
jbe
inc
pop
jbe
ja
lods
xchg
int3
pop
imul
fs
jle
push
jg
adc
dec
dec
aad
nop
ret
adc
dec
aad
pop
and
aam
jge
out
scas
xor
sbb
clc
add
cmp
inc
mulb
es
cwtl
xor
mov
mov
je
sub
cwtl
push
fadd
cltd
mov
or
dec
lret
adcl
repnz
das
dec
lahf
mov
xchg
sub
test
inc
in
in
out
repnz
adc
hlt
test
aad
or
scas
lock
adc
sbb
cmp
jns
lcall
cmp
jl
hlt
pop
mov
fldl
jno
pop
jns
sub
dec
pop
out
pop
test
jg
fadds
imul
repz
std
sbb
fcompl
mov
cld
fwait
adc
and
shl
jae
lret
aad
xchg
pop
sub
mov
loope
fchs
mov
add
fidivrl
fstpl
arpl
cmp
push
cmp
stos
and
inc
pop
ret
rcll
pop
in
inc
dec
jb
loop
js
mov
outsl
dec
lods
mov
xor
mov
fisubl
test
xchg
push
iret
fisttps
push
xchg
xchg
cwtl
add
cs
xorl
das
mov
loop
imul
jbe
jge
insb
sub
les
mov
xchg
icebp
and
mov
pushf
cmpsb
movl
mov
repz
sarl
insl
gs
les
mov
push
aad
shrl
jne
mov
pop
popf
movsl
stc
out
movsb
push
mov
mov
xor
rol
mov
or
and
jo
jbe
mov
adc
add
mov
mov
std
aas
xor
add
loop
mov
aam
orb
jp
fisubrl
sub
cmp
in
cmp
xchg
xchg
lea
or
jno
iret
add
test
sbb
mov
push
jns
jnp
stc
call
and
daa
dec
sbb
pop
jecxz
push
xorb
push
add
push
push
sbb
push
sbbb
lcall
out
loop
imul
dec
into
movsb
ss
add
cmpsb
lret
cmpsb
sub
lahf
xor
mov
pop
dec
iret
bound
imul
or
outsl
enter
sbb
mov
pop
roll
out
sbb
fcomip
add
mov
inc
pop
leave
inc
sbb
pop
inc
pop
mov
notb
and
fwait
xchg
xchg
pop
jp
jp
cmp
push
inc
pop
movsl
sbb
das
sbb
std
rolb
mov
std
arpl
pop
sub
jge
enter
cs
lea
sub
pop
out
outsb
js
jns
je
std
mov
pushf
xor
dec
stos
xor
fisttpl
push
fmul
adc
imul
in
cmovne
faddl
cmp
ret
inc
out
pop
sub
mov
sbb
xchg
adc
inc
jl
nop
pop
sub
and
pop
fdivs
mov
mov
and
out
push
pop
and
cwtl
jg
rorl
hlt
jne
push
dec
lock
mov
insb
aad
cmpsb
cmp
pop
adc
and
cmpsb
in
ret
dec
cmp
jmp
xor
pop
push
pop
jnp
divl
xchg
lods
xlat
pop
imul
dec
addb
xchg
jae
vpcomub
aam
sub
ret
jae
cmp
das
mov
imul
xor
or
and
mov
out
cwtl
int3
sub
test
jmp
add
out
xlat
jecxz
push
xor
dec
mov
inc
into
push
cmp
and
int3
aaa
pop
lcall
pop
inc
les
arpl
push
sub
push
rorb
andl
into
test
adc
add
lds
mov
ror
push
cmpsb
and
ss
sub
dec
and
fwait
dec
addr16
sbb
adc
das
jns
call
pop
cmpsl
or
addr16
fwait
mov
pushf
scas
dec
out
aaa
inc
dec
xchg
xchg
fimull
or
imul
or
mov
fmuls
cmp
cld
mov
xchg
xchg
cmp
cmp
push
jl
inc
xchg
fs
loop
pop
mov
mov
ss
ljmp
addl
movsb
sub
aad
leave
adc
push
adc
or
cmpsl
add
push
ds
add
leave
jmp
stos
mov
or
adc
clc
pop
cld
aas
into
push
movsb
inc
lret
popf
inc
fstpl
scas
sbb
inc
outsl
out
sbb
fisubrs
icebp
ret
jecxz
arpl
sbb
lahf
and
sbb
pop
dec
jp
xchg
jge
mov
adc
xchg
sti
dec
and
jae
repz
push
mov
push
std
mov
pop
mov
ret
scas
adc
push
push
push
std
loopne
pop
add
in
call
je
push
pushf
xor
adc
out
mov
push
fidivs
add
mov
push
jno
jbe
ds
push
xor
sbb
jge
sub
fwait
or
fists
cmpsb
in
pushf
stos
sbb
icebp
inc
sbb
jb
pop
out
cli
leave
or
sarb
jno
lds
mov
lret
sbbb
pop
nop
ret
jmp
dec
and
push
cmp
pop
jecxz
and
add
ljmp
cmp
sub
es
mov
xor
cld
add
nop
repnz
push
xchg
ss
jns
out
or
mov
mov
inc
daa
add
sub
add
adc
cli
movq
mov
sbb
pusha
icebp
lahf
cmp
mov
cld
and
mov
rclb
test
mov
pop
push
jno
jg
xchg
inc
and
loope
adc
daa
and
adc
das
xchg
add
sub
stos
pushf
movsl
dec
lret
jmp
dec
xchg
enter
ja
push
jns
andl
aam
js
sub
mov
or
ficompl
fdiv
jns
jo
or
insb
int
add
adc
sti
repnz
outsl
jnp
aaa
pop
add
pusha
sbb
mov
fs
pop
loop
jb
sub
jg
xor
les
xor
outsb
push
push
mov
xor
je
jmp
cli
mov
repnz
sbb
into
lods
xchg
outsb
adcb
jo
dec
cltd
dec
cmc
or
push
imul
lahf
push
or
gs
jns
insl
shrb
imul
fsubl
xchg
repnz
ret
mov
xchg
sub
push
cltd
add
mov
jae
sahf
push
xchg
movsb
popa
enter
pop
out
cs
das
lret
mov
xlat
ss
xor
popa
push
jno
test
mov
push
xor
pop
popf
xchg
mov
or
sbb
mov
int3
sbb
lods
adc
scas
cmp
xor
imul
jg
push
rcl
cltd
xor
mov
mov
popl
and
mov
inc
jae
mov
cmp
mov
ret
xor
mov
lret
gs
sub
jl
in
cli
jo
in
adc
dec
cmp
addb
xor
mov
push
gs
jns
and
fcoms
mov
adc
mov
xchg
ret
addr16
pop
jl
adc
fstpt
mov
sub
stos
adc
or
ud1
mov
js
mov
push
insl
xor
lret
cmp
sbb
arpl
cmp
clc
mov
dec
jge
inc
pop
xchg
je
sbb
lcall
sub
cwtl
data16
int3
pop
and
rcll
mov
movsl
or
aaa
stos
xchg
std
mov
shll
fwait
mov
movsb
mov
dec
addb
mov
sub
xchg
test
pop
in
mov
fstps
out
std
push
sbb
push
notb
dec
into
pop
enter
in
pushf
xchg
sarl
dec
and
leave
lahf
jmp
pop
mov
fisttpll
test
clc
mov
lret
pop
test
jb
sub
int3
popa
sub
mov
mov
in
fxam
lods
lret
sbb
shlb
mov
ja
xchg
mov
mov
cmp
jg
sbb
insl
sub
loop
daa
dec
mul
dec
bound
mov
sbb
in
jmp
lret
test
jnp
test
cmpsl
sahf
sbb
lret
or
pushf
push
cmp
jno
mov
mov
popa
insl
mov
cmp
cmpsl
jo
cmc
test
pop
jmp
aaa
arpl
pop
sti
xor
xor
or
fstpl
xor
jg
sub
jle
mov
jae
mov
pop
adc
mov
addb
jmp
add
je
popa
jnp
das
aad
lret
outsb
lahf
lret
test
fdiv
mov
fisttpll
nop
out
xor
jae
clc
pop
add
mov
popf
out
loope
push
insl
mov
dec
mov
mov
int3
ret
notl
pop
cmp
aas
enter
mov
xchg
outsb
mov
hlt
jns
dec
push
mov
mov
je
repz
std
push
sub
or
xchg
and
dec
test
push
insl
push
rcrl
dec
jno
insl
xor
icebp
pushf
push
ret
sub
xchg
mov
and
pusha
dec
mov
bound
and
adcl
jno
cmp
xchg
ret
or
mov
fsubs
sti
fwait
sub
xor
add
stc
mov
inc
inc
mov
mov
sahf
cmp
dec
jne
sar
es
mov
cld
xor
addr16
addb
aad
in
pop
mov
in
jbe
cwtl
push
iret
xor
fnstsw
mov
push
jmp
sbb
sub
popf
lods
scas
xchg
and
hlt
aad
lds
xlat
xchg
cmc
je
ja
outsb
inc
lea
clc
fucomp
popf
arpl
add
sub
pop
xchg
shrd
xchg
sbb
sub
enter
mov
inc
push
sub
and
loop
add
out
jne
mov
stc
test
gs
mov
into
dec
outsb
cmp
aam
push
adc
sbb
or
adc
cs
or
pop
pop
int
das
xchg
fdivrs
mov
dec
test
pushf
icebp
inc
int3
add
loopne
test
jle
bound
lods
mov
shll
jns
sbb
mov
and
into
imul
shll
in
dec
jle
popf
cmc
cmp
fmul
fiaddl
mov
repz
in
mov
cmp
aad
sub
nop
test
xchg
mov
movsb
int3
pusha
aas
add
mov
iret
xor
or
lcall
fwait
in
daa
sbb
mov
pop
ds
push
test
mov
out
jle
pop
and
add
push
jmp
out
dec
mov
outsb
xchg
repnz
sub
adc
jnp
orb
adc
push
in
cmp
lock
mov
mov
xor
inc
inc
jecxz
mov
ret
xchg
and
lods
int3
and
sub
jg
cltd
inc
add
outsl
je
or
shll
cmp
daa
gs
fcomip
xchg
mov
in
or
mov
and
mov
jmp
lods
iret
dec
push
inc
in
jmp
mov
add
fidivrs
push
popf
mov
mov
inc
adc
mov
xchg
and
inc
mov
mov
loope
insb
call
ficoms
cmpsl
inc
rolb
and
mov
adc
out
pop
or
mov
mov
pop
test
mov
nop
rcrb
mov
xchg
ss
mov
movsl
and
call
mov
mov
in
repnz
loope
or
das
xor
push
xchg
dec
stos
jl
test
idivl
push
add
sub
rcr
out
ret
aaa
jle
cmp
cmpsb
fidivrl
js
xor
sub
add
inc
mov
idiv
lret
out
cmp
xor
xchg
movsl
rcrb
orb
xor
pop
into
cld
mov
pop
push
xor
xchg
sbb
or
inc
aam
xor
aad
pop
in
mov
neg
cmp
popf
adc
sahf
cltd
adc
fdivl
es
xchg
inc
adc
jecxz
pop
xchg
mov
ud1
cmp
xchg
push
sub
mov
mov
jb
insb
xchg
mov
test
xchg
inc
lods
sarl
sub
loope
push
out
pop
fcoml
jnp
stos
mov
jnp
pusha
mov
sbb
push
add
fwait
and
int
es
fildll
roll
or
jle
pop
inc
movsl
sbb
addl
mov
loop,pn
and
sahf
fdivl
outsl
pop
cwtl
jge
mulb
jg
mov
aaa
in
pop
push
ficomps
and
jbe
aaa
jmp
add
lods
mov
inc
loope
jmp
jle
js
enter
sub
mov
dec
test
lds
mov
cmp
push
and
loope
mov
sbb
imul
inc
sbbb
jmp
movswl
xchg
xchg
cli
sahf
cmp
ret
jb
pop
movsb
lcall
mov
in
rcll
test
mov
call
ljmp
inc
inc
xor
and
sub
pop
dec
popl
out
pop
inc
and
scas
ret
and
dec
mov
mov
adc
test
xchg
adc
jecxz
outsb
jmp
les
push
imul
cltd
add
rcl
dec
cwtl
cmp
cltd
push
cmpsb
push
mov
or
adc
mov
adc
pop
sbbb
mov
pop
mov
push
outsl
xchg
fstps
mov
sub
add
lds
push
roll
lods
cmc
adc
test
popf
dec
ds
arpl
fdiv
hlt
cld
icebp
push
mov
and
in
adcb
out
sub
xlat
mov
pop
fidivrs
insb
rol
jmp
lret
int3
sub
imul
cmovl
xor
imul
jle
jae
sbb
scas
dec
aam
cmp
shrb
mov
rorb
cmpsb
sahf
loopne
movsl
mov
mov
jo
fildll
repnz
arpl
mov
jmp
inc
xchg
adc
push
mov
cwtl
push
js
repnz
rcr
mov
push
movsb
pushw
fwait
test
outsl
sub
and
jb
fiadds
mov
or
jmp
ret
sbb
les
dec
mov
dec
test
mov
lods
enter
test
cmp
rolb
icebp
push
pop
mov
xchg
notl
stos
mov
or
loopne
xor
icebp
jge
fsubrl
fisttpl
ljmp
fcmovnbe
cli
es
push
jno
fidivs
pop
lret
test
aam
cmp
in
mov
push
add
mov
iret
pushf
cmpsl
inc
inc
scas
cmpsl
mov
mov
or
sub
data16
arpl
clc
mov
pop
push
test
mov
stos
mov
jne
in
and
loopne
cmp
ret
sbb
and
test
insl
fidivrs
je
int
fs
rorl
in
lods
pop
and
addr16
cmp
jno
sub
inc
push
fwait
repnz
lret
xor
fbstp
imulb
jns
inc
mov
dec
movsb
cli
loop
lock
inc
mov
rorb
clc
and
push
xor
lods
sub
mov
aas
xor
ret
int3
adc
das
ja
adc
leave
fcom
es
mov
lods
ss
dec
lea
loopne
fbld
fbstp
push
pop
jmp
jecxz
notb
jne
push
outsl
sbb
sbb
sahf
sbbl
cs
scas
xor
mov
mov
dec
mov
push
sbb
mov
out
aaa
mulb
push
cmp
ds
sbb
xor
in
enter
lcall
imul
jns
xchg
es
test
in
das
jne
adcl
icebp
adcl
mov
xchg
mov
repnz
and
aaa
test
cli
in
sub
push
add
cmc
ds
lock
xchg
rolb
jno
inc
jb
jecxz
add
in
repz
inc
arpl
cld
xchg
jnp
dec
jb
jp
add
xor
jge
inc
xchg
out
mov
fs
push
jg
push
or
push
test
cli
aam
mov
aad
dec
fiaddl
scas
xor
in
shl
aaa
pop
mov
loopne
mov
or
jb
movsl
sub
or
les
pop
lock
cld
push
mov
call
cli
mov
call
mov
lret
ljmp
adc
or
push
sbb
inc
pop
cmpl
ljmp
cmp
jae
pushf
stos
lods
stos
fbld
push
cmp
sub
push
xor
in
xchg
mov
je
cwtl
xchg
out
enter
lcall
add
pushf
and
mov
loope
cmpsl
xlat
fmuls
lret
adc
sub
je
jl
cs
imul
inc
xchg
xor
lods
jnp
call
sbb
mul
jo
jae
push
in
mov
popf
jg
pop
add
aad
sub
jne
insl
dec
mov
mov
addb
popf
cltd
push
sbbw
mov
scas
shll
sbb
mov
jno
dec
push
push
ds
or
adc
mov
scas
outsl
mov
pop
pop
cld
fstl
or
jge
cmp
lds
sub
mov
inc
jo
pushf
cld
fsubrl
psubw
sub
lahf
add
cli
sbb
jbe
inc
adc
stos
dec
xchg
lea
ss
mov
cmp
outsl
int3
ret
enter
dec
fcmove
push
stos
jmp
lret
sbb
scas
stc
mov
arpl
mov
scas
cmp
mov
ds
pop
adc
add
push
aam
xor
lret
in
xor
mov
or
mov
mov
adc
jnp
push
jge
dec
pop
jns
jae
xor
pop
aas
mov
or
mov
adcb
lahf
bound
push
negb
sub
scas
jae
fadds
pop
dec
imul
add
call
or
aad
popf
sti
daa
loope
push
pusha
inc
popa
mov
movsl
sbb
test
jns
push
xor
lret
jb
aas
mov
das
sub
mov
repnz
sub
mov
xor
imul
shr
ret
cli
push
jne
or
mov
jae
sub
mov
add
jae
or
sbb
adc
movsl
lock
fcomps
mov
xchg
push
jne
dec
pop
and
push
popf
and
push
inc
sbb
sbb
inc
xor
or
mov
push
popf
jo
xor
bound
hlt
cmpl
test
icebp
inc
pop
stos
call
jno
jmp
sub
and
or
sbb
inc
sub
cmp
jo
jbe
sarl
inc
clc
pop
out
sub
jnp
call
mov
xor
xor
nop
orb
mov
clc
xor
repnz
mov
mov
add
loop
sbb
mov
cmpsb
test
jne
shrl
jmp
fdivs
xor
mov
orb
ljmp
or
fistps
sbb
mov
ss
push
js
test
lcall
sarb
hlt
loopne
repz
jle
pop
addr16
ljmp
mov
cmp
movsb
and
test
cmp
inc
pop
inc
mov
jns
insb
lcall
subl
mov
or
xchg
lcall
aad
test
fldenv
lea
mov
dec
jo
imul
outsb
inc
in
in
stc
or
and
xchg
iret
jmp
mov
out
mov
stos
mov
adc
jmp
xchg
pop
pop
inc
cmp
subl
inc
rcl
test
jg
daa
ficomps
sub
push
push
cmpl
jne
push
pop
test
mov
sub
repnz
xor
lea
pop
bound
lahf
mov
or
rclb
sbb
or
mov
scas
bound
out
outsl
loope
in
test
incb
jbe
inc
sbb
fstps
jl
loopne
rcrb
lods
adc
movsl
movsl
outsb
bound
sbb
cld
pop
cmp
stos
out
sub
popa
leave
pop
scas
cwtl
or
in
sbb
loope
aad
les
pop
int3
aaa
ds
sbb
sbb
fdivrs
jge
mov
mov
push
inc
jbe
int
rcll
sub
mov
ror
adc
sub
pop
insl
jmp
and
push
adc
popa
cmp
or
lock
sub
divl
or
aad
jo
cmp
xor
imull
or
sbb
mov
cmp
int3
in
cwtl
iret
pop
das
loop
out
add
xor
or
leave
sub
pop
xchg
jp
movsb
or
nop
xchg
mov
imul
subb
in
cmc
icebp
sbbb
in
fst
mov
add
es
dec
cli
push
lret
dec
push
es
xchg
lds
or
mov
push
pusha
inc
insb
mov
enter
call
arpl
out
les
xchg
jp
int3
les
aam
lods
pop
mov
fsubl
mov
lahf
inc
je
cwtl
add
mull
ret
mov
loop
lods
mull
sub
bound
ret
push
lea
movsl
imul
enterw
in
inc
dec
jae
adc
cld
push
int
jg
in
xor
inc
ret
mov
xchg
mov
int3
push
pop
nop
and
pushf
add
daa
aam
outsb
sbb
xchg
inc
sbb
lret
rolb
std
orb
arpl
ret
push
adc
aam
fcmovu
mov
push
push
sbb
cmp
mov
adc
add
adc
cltd
in
jmp
cmpl
int3
rclb
in
add
in
and
adcl
add
movsb
int
popa
and
imul
push
movsl
jle
mov
xor
por
cld
stos
inc
mov
and
jns
icebp
jmp
pushl
and
mov
inc
xchg
cmp
in
mov
hlt
sub
adc
inc
fwait
push
push
imul
test
mov
cmp
sub
sbb
push
jecxz
shrb
repnz
in
push
mov
fmulp
in
movsb
push
add
push
sub
xchg
mov
mov
dec
sahf
jb
mov
mov
jb
movsl
jp
daa
std
gs
and
push
sti
or
das
lret
repz
and
sub
xor
mov
jle
sbb
movsl
into
and
and
mov
dec
decb
adc
and
popf
sarl
in
aaa
xor
lcall
js
xor
aaa
and
mov
mov
add
dec
add
cwtl
pop
test
mov
js
imul
push
out
mov
mov
je
dec
mov
push
pop
std
and
in
hlt
mov
jecxz
cmp
ret
add
fisubrs
or
inc
aas
inc
xor
int
in
mov
in
in
sub
jno
stc
mov
cwtl
cld
jbe
dec
jb
sub
cli
fidivs
fistpl
leave
adc
inc
and
sbb
adc
inc
jb
clc
pusha
hlt
cmc
fidivrl
push
jo
nop
in
out
add
imulb
repnz
out
sub
or
mov
hlt
mov
cmp
out
mov
and
movsb
push
rcr
mov
rclb
mov
aam
cmc
arpl
lods
sub
enter
divb
dec
nop
sub
rorl
jb
test
daa
fimuls
pop
jae
xor
ret
fisttps
fidivl
sub
mov
scas
add
inc
xchg
insl
cmp
mov
jp,pn
xchg
ret
dec
adc
push
int3
jns
dec
outsl
imul
and
iret
mov
add
std
in
push
mov
mov
add
int
pop
pushf
xchg
or
sub
shrb
pop
cmp
divb
mov
into
mov
push
out
imul
xchg
xlat
lock
data16
xor
and
add
pop
fxch
jmp
or
insl
jge
mov
and
push
fcomp
push
pop
fstpt
ss
test
imul
jmp
outsb
pop
push
test
testl
dec
dec
mov
sbb
call
mov
jae
stc
cs
mov
fwait
mov
lcall
or
xorl
fwait
push
or
leave
sub
push
sbb
lock
jle
popa
push
repz
cli
mov
hlt
sarl
and
add
pop
xchg
pop
mov
fidivs
mov
jnp
adc
inc
or
scas
dec
ffreep
lods
inc
popf
in
mov
pop
ret
adc
or
ret
insl
loop
dec
addb
xor
inc
aad
jbe
hlt
push
loope
xlat
testb
dec
push
jl
jae
arpl
mov
daa
scas
out
loop
aad
or
scas
outsb
add
lcall
fisubrl
sub
in
add
cmp
in
fsts
ljmp
aaa
mov
lcall
dec
neg
mov
mov
mov
idivb
sub
in
test
xchg
lods
adc
orl
dec
aaa
cmp
fnstsw
addr16
xor
in
sarl
lahf
or
adc
mov
mov
call
ret
in
push
pop
nop
gs
rolb
ja
xchg
cmp
outsb
push
out
dec
inc
lock
std
mov
les
xchg
jnp
std
fs
nop
sbb
int
mov
push
jnp
pop
adc
push
ja
fadd
loope
test
cmpsl
jae
dec
mov
xor
fwait
dec
rcrb
mov
bound
hlt
inc
pop
mov
cmp
push
cli
add
ja
stc
ljmp
cmpsl
lret
out
or
mov
sub
xchg
jbe
and
bnd
push
dec
push
cmpb
scas
add
out
pusha
xchg
and
das
stos
mov
push
xor
dec
fwait
mov
adc
mov
sbb
push
dec
js
cmc
xor
test
adc
arpl
ret
sysret
sbb
push
loop
mov
shrd
iret
movsb
adc
out
jle
add
fadds
add
adc
inc
dec
add
out
icebp
rolb
cld
and
aaa
mov
notl
adc
add
jge
lahf
mov
cmp
xor
rclb
sbb
test
movsb
repnz
add
cmc
int3
or
jb
adc
xor
add
adc
ret
loop
mov
movsb
notl
mov
int3
adc
xor
insl
mov
stos
int3
scas
inc
repnz
insl
mov
jmp
cmp
xlat
aas
aas
pop
push
repz
xchg
push
rcr
jge
ret
lahf
movsb
xor
nop
xor
mov
or
pop
sub
push
and
cs
es
stos
pop
xor
jae
adc
fsubs
fsubl
push
jl
movsb
lds
mov
andl
leave
rclb
push
and
loop
and
lcall
and
xorl
rcl
andb
popf
pop
mov
divb
test
xchg
mov
cmpsb
jge
push
mov
std
fadd
pop
push
pushf
bound
adc
faddl
xor
cmp
movsl
je
cltd
cmpsb
mov
add
or
mov
xor
mov
xchg
adc
mov
push
leave
xchg
cmp
pop
pop
xor
inc
clc
in
and
inc
je
jl
adc
mov
aaa
lcall
aad
push
jg
nop
fmul
cmp
inc
add
std
xchg
js
adc
and
xor
clc
add
in
cmp
inc
mov
inc
pop
dec
pop
mov
lock
mov
pop
pop
push
pop
jns
loopw
outsl
mov
push
insb
xchg
mov
sub
inc
loop
pushf
push
sub
stos
aaa
stos
mov
jns,pn
iret
ljmp
int
fildl
cmp
std
repz
xchg
clc
dec
xchg
loopnew
shll
out
fdivp
adcb
lcall
pop
bsr
scas
test
push
lock
cmc
hlt
mov
push
adc
adc
test
cmp
pop
enter
les
mov
pusha
movsl
push
inc
ret
cmp
decl
and
and
xchg
lods
push
popa
xlat
ljmp
popa
jo
test
adc
sbb
jg
sbb
imul
or
iret
mov
pop
push
imul
pop
mov
fistl
bnd
sbb
es
pop
lcall
repnz
aam
cs
out
movsl
cltd
dec
sbb
loop
inc
jno
fsubrs
jo
and
push
daa
xchg
sub
mov
xor
outsb
sbb
imulb
xchg
pop
pop
gs
sbb
sub
rorl
loop
jb
cmp
xlat
mov
dec
pmaxsw
das
mov
dec
add
cmpsl
lcall
lret
ss
add
call
loop
popa
mov
leave
je
add
out
dec
inc
in
das
jl
in
movsl
cli
loopne
lret
xlat
inc
inc
jno
xor
pop
arpl
std
mov
mov
sbb
dec
sub
sarl
repz
mov
roll
inc
dec
out
mov
xor
movsb
roll
dec
shlb
aas
cmp
cmp
lcall
rcrl
jle
repnz
push
cmp
jb
ret
inc
sub
dec
mov
dec
out
mov
jmp
in
jle
sbb
mov
icebp
cwtl
outsb
jns
movsl
mul
jae
imul
fmull
mov
cmp
incl
ljmp
pop
sbb
jo
pop
pusha
shll
shrl
and
sbbb
push
rclb
mov
lea
loop
xchg
fildll
pop
pushf
clc
inc
sbb
cmc
jne
int
mov
cmpb
out
sub
pop
sub
enter
fwait
inc
aam
inc
mov
dec
xchg
loopne
sub
xor
lods
mov
jmp
mov
leave
sahf
jle
fs
sbb
pusha
enter
movsb
std
and
pop
nop
push
jae
jg
sbb
pop
iret
mov
out
popf
test
dec
sub
aas
pop
inc
in
fsubp
out
pop
jo
mov
push
sbb
xchg
insb
ficomps
insb
les
popa
mov
ds
adc
xchg
cmc
lahf
das
cs
ss
out
xor
decl
scas
lea
es
pmulhw
xorl
decb
subl
xchg
out
add
jns
hlt
mov
pop
sub
iret
and
icebp
xchg
push
loopne
stos
xchg
mov
gs
push
outsl
inc
imul
mov
movsl
cmpsl
mov
jae
loope
ficompl
add
adc
lock
mov
cld
test
cmpb
rorl
add
hlt
stos
aas
test
pop
mov
dec
lock
fwait
pusha
jecxz
je
cli
adc
adc
addr16
cmc
in
in
rcll
jne
dec
pop
mov
repz
in
mov
fdivs
les
fucomip
outsb
fildll
sub
std
mov
mov
dec
sub
pop
jl
push
test
lock
test
call
jmp
popa
and
popf
mov
sub
mov
mov
sub
scas
lock
mov
movl
imul
jne
inc
pop
jae
ds
adc
add
lods
xchg
pop
in
jno
xchg
fsubl
jp
sbb
test
mov
aam
lret
test
inc
jne
call
sbb
xor
insl
lahf
mov
lcall
rol
jle
insb
mov
rsm
sub
sti
xchg
mov
mov
cmp
loopne
in
xchg
dec
mov
xchg
flds
je
bound
sarl
push
xor
pop
shll
push
cmpsl
call
xchg
mov
call
lods
sahf
enter
sbb
in
andl
fimull
test
inc
and
sti
aam
mov
inc
adc
movsb
loopne
js
fcmovnb
cld
leave
jnp
mov
aam
outsl
cltd
leave
lea
call
or
insl
push
push
je
mov
cmp
and
and
and
inc
sub
mov
idivl
cli
outsl
das
and
mov
inc
imulb
add
mov
cmc
movsl
mov
add
imul
or
repnz
leave
mov
dec
ds
push
ss
iret
sbb
jae
daa
aaa
pop
mov
addr16
cmpsb
adc
std
mov
repnz
mov
cmp
fildll
lds
aam
fs
mov
push
pop
xchg
mov
add
test
adc
dec
jle
or
loopne
mov
mov
imull
es
pop
jnp
inc
fs
xchg
ret
mov
sbb
cwtl
mov
cli
test
and
cmp
mov
xor
arpl
inc
lcall
jo
adc
enter
cmp
out
stc
jb
shl
mov
jge
mov
scas
aam
stos
int
fucomp
mov
sarb
jle
cld
inc
dec
ds
mov
sub
push
push
scas
pop
repz
bound
cmp
sbb
xor
mov
push
adc
jg
loope
dec
ror
into
cmpsl
add
cli
xchg
inc
cld
push
fadds
push
mov
or
and
test
xchg
xchg
xchg
jae
and
and
cmp
adc
pop
sbb
push
push
out
insl
shlb
lahf
rcll
test
mov
dec
push
or
sub
adcl
mov
cltd
push
sar
or
scas
and
cmp
insb
je
pop
sub
xor
inc
and
cltd
ljmp
fldl
das
fcompl
andb
dec
das
pop
push
push
cmc
lea
rcll
jmp
in
jecxz
int
les
and
popf
arpl
pushf
inc
mov
mov
mov
jbe
pop
lds
cmpsb
add
push
xchg
orb
icebp
xor
ror
mov
jne
movsb
xlat
ds
je
fisubs
adc
pop
outsb
out
in
std
xor
add
push
pop
or
mov
xor
add
lret
jnp
xchg
adc
mov
or
jno
imul
and
mov
add
cmp
shrl
push
int3
mull
dec
pop
test
sub
adc
xor
inc
mov
jg
add
js
mov
loopne
pop
ss
lcall
cmpsb
shll
xor
mov
loopne
cli
inc
mov
lcall
jnp
add
nop
shlb
ss
inc
jnp
out
jp
jecxz
fwait
rolb
xchg
cltd
pusha
js
int3
dec
and
inc
bound
mov
and
fs
adc
insb
aaa
push
ds
bound
hlt
adc
pop
repz
push
and
mulb
lods
mov
dec
xor
sub
data16
pop
lret
or
cs
js
inc
mov
fwait
and
shlb
mov
inc
or
push
jle
dec
sbb
or
pop
pop
mov
pop
mov
lret
xchg
cmp
pusha
jmp
and
dec
dec
adc
in
mov
fcomps
lods
pop
test
xchg
shrl
mov
push
jg
pop
sub
rorl
pop
lock
lds
jo
mov
int3
sub
scas
das
push
jp
sub
adc
ficompl
and
xor
mov
inc
cmpsb
jno
mov
inc
xchg
mov
or
cmp
pusha
inc
push
outsb
cmp
mov
mov
fnstenv
or
add
mov
or
shrb
out
mov
xchg
outsl
vminps
outsb
insb
jne
mov
addr16
data16
adcb
lcall
mov
mov
add
pushf
sbb
adc
js
mov
pop
dec
xor
push
outsl
cmpsb
cmpsb
movsl
scas
mov
outsl
pop
lods
out
cltd
cmc
xor
mov
or
xchg
pop
arpl
jo
stc
lock
mov
inc
and
popfw
mov
fcom
ss
sbb
sub
std
mov
icebp
aam
sub
sbb
add
sti
xchg
jbe
mov
sub
xchg
shrb
cwtl
pop
mov
cltd
mov
and
xchg
mov
push
lds
mov
mov
inc
jne
jmp
push
ret
jmp
std
push
cmp
aad
adc
push
xchg
lahf
ret
mov
jle
cmp
sub
and
xor
mov
jb
imul
push
xchg
out
mov
nop
mov
jb
call
das
sub
mov
adc
icebp
pop
ret
xor
push
movsl
out
ja
outsb
mov
push
xlat
test
dec
out
jp
mov
je
inc
fidivrl
or
or
lret
inc
and
jne
adc
inc
int3
jne
mov
aas
or
movl
movsb
jge
loop
shll
jbe
adc
push
and
out
mov
dec
leave
push
pop
je
loopne
and
push
pop
fstl
lods
stos
outsb
xor
mov
jns
cltd
sub
push
mov
mov
lcall
add
sub
pop
inc
in
mov
push
mov
ljmp
das
insb
jbe
cmovbe
dec
iret
hlt
mov
mov
jbe
add
pusha
or
fisttps
sbb
andl
inc
insl
or
in
mov
lret
movb
ds
mov
mov
jo
jae
xchg
popf
add
out
sbb
das
jge
or
xor
push
test
int
add
sbb
lret
stos
push
or
stc
and
xor
fdivrs
pusha
les
and
popf
xor
or
iret
fwait
push
or
daa
mov
xlat
test
jo
adc
loopne
lcall
sbb
and
push
out
pop
shlb
test
outsb
addr16
push
jbe
push
jne
lds
sbb
dec
xchg
and
mov
mov
stc
mov
les
push
and
cli
nop
sbb
push
in
push
leave
sub
or
mov
mov
into
jl
test
ret
sbb
mov
cmp
shlb
pop
xor
cmp
add
lock
hlt
and
or
fnstsw
dec
ss
sub
jbe
loopne
xchg
mov
and
sub
rcll
adc
loop
aad
dec
push
jnp
gs
xor
jmp
pop
out
push
add
aad
imul
sub
xchg
lods
dec
lods
jb
shrl
or
jle
test
jnp
jae
lea
jnp
fisttpl
xchg
xor
jl
push
jbe
testb
dec
sbb
popf
xchg
mov
push
and
dec
jns
adc
mov
pop
ret
mov
inc
mov
push
mov
mov
mov
add
vmwrite
test
mov
ds
aam
fisubs
pop
pushf
or
push
cs
ds
aam
loopne
mov
inc
ja
adc
ret
cmp
mov
leave
sub
les
jne
int
cmp
out
addb
shlb
es
pop
sbb
inc
or
cmp
mov
cmc
bound
xchg
jmp
data16
and
jno
and
adc
mov
xchg
lahf
pop
fwait
les
loop
dec
sub
add
insl
icebp
fwait
stc
mov
mov
mov
pop
loopne
nop
lcall
icebp
fdivrl
cmp
xchg
adc
sbb
sub
and
in
cmpsb
movsb
jo
jne
add
repnz
fstps
popf
mov
or
jg
leave
mov
ret
in
sbbl
push
pusha
loop
jns
int
xor
sbb
outsb
lret
sahf
cmp
mov
xor
cmp
mov
fstpt
orb
adc
sub
dec
sub
notl
mov
rcrl
jne
rcll
xor
xchg
mov
pop
inc
outsb
or
xchg
jno
push
and
lds
rcll
in
popa
cmp
inc
add
mov
push
imul
mov
push
cltd
or
sbb
dec
out
bound
pop
xlat
mov
push
push
sub
xchg
int
push
fbstp
cltd
inc
xor
ffree
pop
xlat
shlb
push
xlat
jbe
jge
dec
fimuls
inc
xchg
outsb
hlt
imul
xor
dec
sub
pop
push
fcoml
mov
test
pop
test
pop
push
and
scas
daa
mov
repz
in
adc
cmp
push
scas
mov
orb
xor
jne
insb
lcall
fnsave
push
mov
add
push
ja
in
daa
inc
mov
inc
call
idivl
inc
xor
and
popa
xchg
mov
xchg
cmp
jl
pop
push
inc
xor
cs
fs
mov
lods
pop
xchg
in
sbb
mov
inc
dec
cli
shlb
arpl
mov
enter
push
sbb
adc
insl
mov
cltd
sub
lret
stos
in
push
cli
xor
testb
cwtl
mov
and
pop
dec
mov
fnstenv
in
xchg
popf
xor
outsl
cmp
inc
pop
fs
inc
mov
inc
dec
add
imul
pop
repz
jge
shrl
ds
cmp
mov
fistpll
jge
pop
xchg
lahf
out
mov
inc
inc
ret
sub
icebp
outsb
fisttpll
mov
out
stos
subb
push
in
inc
sbb
iret
cmc
imul
dec
inc
repz
mov
loopne
cmp
add
jl
pop
loope
das
shrl
xor
imul
lret
call
test
inc
xor
jbe
arpl
xor
iret
sub
repz
iret
rcrb
and
loopne
int3
sub
leave
mov
xchg
jno
sbb
out
fdivp
aaa
iret
popa
dec
in
jecxz
idivl
fwait
add
addr16
and
inc
test
push
cmp
stos
sarb
adcb
mov
sub
xor
pop
les
pop
add
mov
push
mov
xchg
lahf
mov
cmp
leave
add
out
rol
and
popf
jbe
imul
push
cmpsb
mov
dec
gs
jle
pop
jno
and
nop
and
loope
mov
mov
lods
in
outsb
mov
jmp
sub
mov
or
mov
xor
dec
pop
aad
mov
mov
pop
mov
dec
push
dec
mov
adc
clc
cmp
sub
mov
push
sbb
jecxz
xlat
jp
dec
fwait
mov
pop
mov
adc
pop
pop
out
test
shlb
loope
test
add
out
por
push
cmp
sub
add
cmp
insl
mov
jle
imul
scas
das
lock
pop
ja
sub
mov
jle
dec
pop
inc
jo
fistpll
adc
jg
sbb
das
fistpl
pop
int
inc
pop
mov
xlat
mov
sbb
lahf
movsl
dec
int
aad
in
sub
cwtl
ds
jne
sbb
push
jge
or
je
rol
adc
adc
sbb
jne
pcmpeqw
iret
pop
pop
xor
jo
scas
jns
xor
int
sub
pushf
sti
loopne
enter
inc
shlb
fistpl
push
scas
test
clc
scas
inc
mov
shll
js
add
mov
daa
je
dec
push
in
mov
imul
loope
dec
divl
sbb
bnd
mov
xlat
or
fdiv
sub
fs
loop
mov
fwait
dec
and
arpl
scas
xchg
enter
add
pop
pop
xor
cld
mov
dec
pop
sbb
inc
xlat
mov
repnz
or
mov
jno
push
or
adc
and
adc
push
lret
sub
or
je
cwtl
jbe
pop
push
rol
stc
rclb
out
push
jg
fstpl
in
aas
inc
test
mov
xchg
jne
cmp
inc
in
iret
xlat
xchg
sbb
push
mov
repz
lahf
xchg
jo
scas
addr16
scas
xor
inc
inc
outsl
add
mov
lret
in
mov
jle
jl
sub
negb
daa
out
add
inc
cmp
mov
scas
sub
out
pop
adc
jnp
imul
or
call
gs
push
or
cmpsl
inc
inc
push
xor
into
and
adc
mov
in
cltd
fs
or
shll
dec
mov
aaa
or
nop
xchg
jp
mov
pop
sub
lock
jl
bound
dec
pop
add
dec
fadd
xchg
les
mov
cmp
pop
movsb
push
cld
pop
mov
cmc
pop
addr16
xchg
aaa
or
push
fsubrs
mov
jp
test
outsl
test
jl
jl
fwait
inc
mov
rep
out
test
sub
xor
data16
sub
push
mov
mov
push
into
xchg
push
mov
pop
mov
jg
and
jp
ret
rorl
mov
ret
gs
movsl
js
xchg
shr
pop
inc
jp
shrl
add
or
or
dec
mov
sti
mov
mov
xor
pushf
and
push
dec
xchg
push
sarl
call
push
push
sub
dec
or
adcl
inc
orb
xchg
sarb
mov
data16
call
orb
or
cmpsl
sub
rcrb
ja
insb
xchg
add
sbb
shll
loope
stc
and
inc
popf
lock
cmpsl
incl
out
pop
mov
cmp
stc
repnz
mov
shl
mov
mov
addr16
push
arpl
mov
cld
pushf
push
jl
or
push
mov
jne
jb
int3
mov
fwait
cmovae
and
subb
xor
and
mov
out
mov
fs
idiv
mov
pop
mov
inc
cmp
call
xchg
push
sbb
jns
pushf
dec
rdtsc
nop
fwait
push
and
and
imul
dec
jns
dec
pop
push
leave
jmp
and
mov
cmc
mov
xchg
repz
jge
out
adcl
mov
jecxz
iret
and
in
lea
pop
adc
pop
mov
jle
or
mov
movsl
push
xchg
pop
push
xchg
jmp
outsl
inc
sub
and
sbb
cli
mov
jp
xchg
mov
inc
popa
aas
dec
sbb
mov
jo
stos
loopne
cmp
jne
rcll
mov
rcrb
cltd
push
push
lret
jge
pop
das
fidivrs
add
jl
xchg
pop
lods
clc
pop
fistl
mov
xor
mov
lret
addr16
mov
in
xor
xchg
push
sti
dec
jo
sti
test
iret
stc
xor
and
pop
dec
popa
insb
loop
vcvtdq2ps
mov
or
push
push
jbe
movsb
jge
pusha
add
push
jo
prefetcht2
sbbl
sub
cmp
aas
lahf
xor
jo
jge
or
inc
into
dec
aam
add
scas
cwtl
sti
push
imul
loope
cmp
fcmovnb
shrl
or
int3
outsb
inc
and
rclb
stos
mov
pop
test
add
les
or
loop
mov
dec
ret
inc
jae
jl
daa
outsb
adcl
lret
push
mov
mov
xchg
ja
mov
outsl
fucomi
push
or
iret
inc
and
xchg
out
adc
mov
stc
pop
cmpsl
lret
in
inc
das
inc
mov
jmp
fscale
inc
leave
push
cmpl
fldt
jae
sub
inc
fsubrl
lcall
cmp
push
in
insb
inc
lods
jecxz
sub
rorb
out
ja
out
pop
fldl
fildll
outsb
xor
lods
mov
or
mov
int
shl
les
sbb
hlt
lahf
or
decb
icebp
push
push
mov
dec
dec
mov
mov
jp
mov
pop
jg
mov
scas
popl
stc
sbbb
stc
mov
adc
out
inc
cld
lahf
lret
pushf
add
mov
mov
dec
xchg
jnp
ja
push
repz
jmp
cwtl
jg
into
pop
fistl
js
js
jmp
cmp
add
mov
sub
jmp
repnz
add
mov
loop
adc
or
xchg
stos
push
imul
xchg
sub
scas
mov
iret
iret
imul
dec
or
movl
sarl
in
nop
out
sub
arpl
inc
scas
mov
ja
dec
imul
lahf
sub
mov
jmp
mov
jg
pop
ret
sub
and
es
push
movsb
loope
bnd
out
xchg
or
jae
mov
push
jmp
sahf
shll
ds
mov
and
and
and
pop
cld
xor
scas
mov
fisubs
mov
inc
in
adc
pop
or
bound
inc
dec
sbb
push
or
xlat
lods
pusha
sbb
jb
call
jb
imul
mov
cmpsb
dec
aam
repz
out
mov
stos
jbe
stos
in
ljmp
out
mov
xchg
push
stos
in
lods
lds
jge
xchg
in
inc
mov
pop
or
sbb
lret
sbb
enter
inc
fldl
pop
dec
rcll
adcb
ret
fistl
mov
cmpb
shr
mov
loop
push
mov
sub
lods
adc
and
sahf
dec
mov
jne
push
lret
cmp
imul
add
into
adc
popf
out
push
out
dec
call
fildl
inc
sbb
pop
popa
popf
cltd
mov
aam
leave
mul
aam
lock
jno
push
cmpsl
in
or
rcll
addl
insb
push
mov
xchg
loope
pop
outsl
lock
lods
jle
dec
jmp
test
dec
push
mov
jb
mov
push
fiaddl
imul
jns
mov
pop
adc
fs
pop
movsl
mov
data16
fnstcw
test
loop
fldt
mov
sub
xor
mov
dec
xor
inc
inc
push
cmp
lcall
daa
jne
out
inc
xchg
ret
sub
aaa
inc
in
cmp
nop
cmpsb
xchg
mov
dec
addb
push
or
lahf
xchg
incb
cli
sbb
sbb
adc
xchg
or
mov
push
subb
mov
inc
lods
in
sahf
fsubrs
inc
out
lods
cmp
pop
rcr
and
jnp
js
dec
jle
stc
rcrb
mov
push
dec
addl
shlb
push
push
icebp
std
cmp
mov
push
sbb
sbb
outsl
cmc
cwtl
ds
push
mov
je
pop
inc
mov
dec
add
jno
cmp
jp
insb
mov
lahf
mov
mov
aam
outsl
shlb
pop
ss
stc
inc
das
xor
arpl
sarl
rorl
gs
adc
test
mov
in
mov
stc
sub
mov
sub
pop
jp
hlt
and
lahf
out
in
mov
andb
sarb
sbb
sbb
cltd
push
outsb
shr
inc
mov
rorb
lock
adc
call
sub
pop
imul
lds
xor
mov
push
rol
hlt
repz
ss
nop
pop
fstpt
jge
sub
cs
addr16
mov
add
in
pop
and
add
add
jnp
pop
xor
cmp
xor
sbb
jg
aaa
mov
lds
lods
out
jmp
add
jo
jne
scas
add
sub
in
add
push
popa
jge
loopne
or
lcall
inc
push
pop
pop
sbb
mov
enter
scas
jbe
jg
testb
rcl
and
jmp
and
out
mov
lret
pop
sub
mov
cmpsl
out
xchg
shrb
call
mov
mov
xchg
or
sub
vmwrite
sbb
xchg
test
add
add
mov
xchg
or
test
testl
stc
dec
iret
popa
ret
or
push
subl
std
jno
sarl
pop
stc
popf
jae
mov
sbb
add
test
xchg
gs
icebp
push
pop
rolb
mov
std
stos
jl
mov
mov
cmp
sti
dec
lahf
lds
mov
cld
pop
dec
jb
push
mov
movsb
adc
in
adc
stos
jns
iret
rolb
popa
clc
mov
into
enter
das
in
push
or
out
mov
xchg
dec
mov
cmp
shlb
aam
jge
mov
aas
cmc
sub
add
fs
xor
mov
das
adc
sbb
outsb
inc
stc
rolb
ja
icebp
mov
sub
jmp
ljmp
adc
jg
mov
pop
cmp
aad
sbb
and
movsb
cmpps
mov
cmpsl
adc
sub
popf
push
mov
push
in
pop
mov
loop
ret
add
and
cmp
add
js
jge
mov
mov
movsb
lods
dec
push
ljmp
lock
loop
jmp
xchg
stos
lcall
bound
mov
push
inc
add
and
mov
jge
mov
daa
std
pop
mov
testb
sub
call
adc
push
nop
out
adc
std
xorb
sbb
in
ss
mov
jno
adcb
mov
jge
sbbl
lock
scas
pop
mov
mov
arpl
and
rorl
adc
fiadds
mov
or
pop
push
sbb
loop
ret
push
mov
insb
and
mov
mov
lds
sbb
iret
jg
add
loopne
pop
or
pop
xor
mov
push
test
pop
mov
cmp
mov
sub
icebp
adc
movsb
dec
cmpsb
sub
mov
gs
into
jae
icebp
addr16
repz
xchg
sbb
xor
adc
or
lods
popf
adc
inc
jge
mov
ds
sbb
sub
outsl
pop
scas
mov
rcll
bound
ss
shrl
movsb
xchg
cmp
pop
xchg
sti
xlat
xor
mov
je
add
mov
iret
mov
out
cmp
pop
mov
cmp
dec
mov
sbb
movsl
add
lret
pop
notb
addr16
inc
mov
push
mov
inc
dec
rcl
das
mov
sti
loope
jne
jp
in
mov
decl
adc
push
sbb
addb
or
call
addb
xor
dec
rcl
jbe
ljmp
mov
fcmovnu
stos
sbb
sbb
mov
xchg
mov
sub
fistpll
add
repnz
in
mov
cli
dec
and
or
push
mov
dec
jbe
inc
push
sbb
pop
movb
xor
xchg
cwtl
icebp
les
or
loope
aas
cmpsl
hlt
add
cmc
imul
jecxz
cwtl
dec
xorl
mov
mov
jae
add
pop
xor
fcompl
outsl
andb
scas
mov
gs
outsl
lods
call
mov
cmp
add
jo
addl
daa
pop
mov
fdivrs
mov
faddl
or
adc
loopne
and
and
sub
rcrl
aad
in
jo
cmp
shr
dec
mov
repnz
pop
lock
mov
adc
mov
mov
push
dec
push
push
fwait
ja
arpl
xchg
add
xchg
js
mov
jge
icebp
dec
push
add
and
ret
leave
std
fisttps
mov
popf
push
divl
aaa
adc
movb
mov
lods
addl
adc
push
stc
mov
adc
int3
adc
push
clc
call
pop
mov
push
dec
or
xor
xor
inc
sar
push
or
jg
jl
mov
daa
mov
cmp
xchg
fwait
scas
repnz
shl
jge
repz
mov
xlat
testl
sub
outsl
out
dec
mov
add
mov
stos
dec
push
rclb
arpl
cld
xor
movsb
mov
insl
test
pop
pop
test
arpl
mov
in
add
jmp
iret
jnp
push
mov
pusha
jle
sbb
test
idivl
fwait
push
and
fldenv
out
push
jl
inc
sbb
xchg
jns
clc
pop
fisttpl
xchg
dec
xchg
fistl
sbb
int3
pop
sbb
mov
imul
in
sub
jmp
lret
jno
mov
jns
sbbl
cmpsb
inc
push
and
xchg
loop
cltd
or
stos
adc
es
dec
ja
nop
mov
pop
enter
cmp
lahf
movsb
fbld
jns
or
xor
int3
jae
pop
xor
sbb
in
ret
out
daa
jno
out
mov
adc
repz
mov
pop
ficomps
add
icebp
movsb
pop
call
hlt
jne
xchg
fcmovne
pop
mov
insb
push
push
mov
in
pusha
push
mov
sahf
sti
scas
nopl
scas
jne
dec
adc
pop
loop
push
mov
xchg
inc
dec
shlb
cltd
jecxz
js
mov
dec
je
bound
xchg
sbb
jmp
sbb
or
adc
pushf
inc
fsts
xlat
fs
in
dec
add
and
sub
cmp
in
sub
jmp
js
dec
jb
dec
and
cmpsb
hlt
mov
xor
dec
dec
adc
mov
add
test
lea
mov
cmpsb
popf
or
adcb
sti
cs
fs
inc
cmp
mov
inc
sub
inc
into
lret
jle
push
xlat
hlt
jmp
xchg
lock
cwtl
cmc
mov
sbb
loope
pop
stos
jae
xor
jg
push
les
jecxz
mul
sub
mov
jns
les
mov
mov
mov
cmp
mov
fwait
pop
pop
arpl
call
push
icebp
dec
mov
mov
in
fisubs
jp
jne
pop
fs
mov
scas
fldenv
imul
lods
mov
dec
fnstsw
cmp
or
cmc
rcrb
sahf
cmp
mov
hlt
push
jbe
sub
leave
shll
sub
sub
pop
out
insl
mov
mov
add
push
mov
sarl
inc
rcr
sbb
xor
push
push
out
aad
das
ss
rclb
adc
sbb
lret
shr
and
data16
and
insl
cltd
push
cltd
pop
push
mov
xchg
lods
xchg
outsl
faddp
xorb
cmp
mov
aam
dec
jae
jg
lods
adc
xor
xchg
iret
pop
jg
repz
sbb
mov
bound
sub
shrl
xchg
es
insl
pop
cmp
sti
xor
clc
cmpsb
pop
sbb
dec
push
enter
add
xlat
jecxz
mov
popa
popa
inc
push
and
jae
and
jp
push
push
add
out
cmp
inc
add
imul
jl
shr
inc
cmp
or
cltd
xlat
jnp
and
jecxz
lods
lds
push
cmpsl
jnp
mov
and
pop
or
jns
insb
adc
mov
cmp
int3
shr
mov
push
mov
scas
xchg
es
cwtl
dec
inc
cmova
jle
frstor
xor
mov
mov
jl
ficomps
cmpsl
mov
stc
fstl
in
and
test
mov
adc
stos
std
dec
vpunpckldq
push
daa
insb
loope
inc
mov
out
fcomip
fcmovnbe
sbb
pop
jo
mov
test
int3
sub
sbb
enter
dec
jp
lea
pop
lds
add
test
inc
dec
and
push
popl
xchg
pop
adc
fpatan
xlat
inc
pop
add
repz
xlat
inc
or
mov
sub
mov
sbb
int
out
lods
outsl
in
push
adc
xor
adc
popl
mov
in
out
xchg
adcb
sbb
in
aaa
into
jbe
pop
int
push
mov
cltd
mov
cmp
jno
mov
adc
insl
pop
in
jmp
jmp
pop
std
test
jge
xor
fsubrs
lods
lock
dec
shlb
jbe
lcall
adc
mov
insl
ret
jg
pop
fwait
test
and
sub
or
push
or
call
push
ss
push
movsl
mov
lret
imul
and
inc
dec
and
pop
mov
mov
fdivs
jmp
and
and
xchg
and
mov
adc
fsubr
fsubrs
mov
test
mov
mov
outsl
push
ja
jle
cmp
loop
test
shl
or
push
xchg
inc
xchg
cmp
or
mov
xchg
pop
out
sub
jbe
mov
out
movsb
lock
int
jb
push
add
stc
pop
mov
lods
sbb
xor
ja
not
mov
subb
or
or
jge
ss
ds
mov
test
xor
xor
and
aad
pop
pop
popf
mov
int3
or
jb
stos
nop
testb
es
sti
inc
popf
clc
lcall
xchg
mov
mov
aaa
pop
lods
jae
and
pop
shrd
jo
sub
cmpsl
les
hlt
sbb
daa
mov
loope
orb
sub
mov
out
mov
stc
ret
sbb
xchg
scas
les
fcoml
aaa
cmp
neg
mov
sbb
or
cmp
idiv
push
flds
bound
mov
xchg
jae
push
daa
stc
adcb
push
mov
int
gs
jnp
sbb
mov
cmp
hlt
shrb
outsb
fwait
ret
aas
out
and
dec
pop
xchg
push
fiaddl
mov
inc
xchg
dec
cmpl
shll
cmpsl
and
loope
fldt
js
pop
dec
int
jns
push
mov
cmp
or
aaa
push
jne
push
sbbb
sub
test
outsb
stc
imul
aad
cmp
pop
pop
sbb
jno
mov
iret
popf
cmp
mov
cmpsl
movsl
dec
frstor
add
fs
fwait
pop
aad
test
mov
loop
sahf
sub
out
mov
push
test
dec
ljmp
sahf
push
cli
cmpsl
inc
or
repnz
es
dec
mov
cmp
cmpsb
mov
jle
pop
jae
add
outsb
inc
std
mov
arpl
jmp
iret
and
jo
mov
cmpsb
loop
push
pop
cmp
mov
mov
push
es
pushf
or
sbb
out
xorl
es
fwait
dec
lea
push
mov
nop
mov
xchg
les
or
and
dec
xchg
std
lahf
mov
movsl
mov
cld
push
mov
cmp
mov
test
std
fs
fpatan
mov
aaa
jo
daa
leave
adc
sbb
jb
jnp
testb
xlat
push
push
xchg
sub
mov
pop
outsb
lock
push
sti
cltd
sub
pop
int
leave
jb
sub
push
and
xchg
push
sahf
adc
inc
aaa
mov
mov
jg
lods
jl
adc
cli
stc
sub
les
nop
shll
adcb
in
jo
push
mov
cmp
ret
lods
adc
into
cmp
shll
insl
shll
ja
mov
xor
xchg
xchg
adc
mov
dec
xchg
xor
sbb
cli
jp
sub
mov
clc
fmull
mov
xor
xchg
mov
shl
dec
or
incb
jmp
or
jge
mov
dec
mov
mov
popf
sub
mov
adc
pushf
sbb
scas
inc
jbe
push
pop
aam
adc
xor
mov
adc
lret
rcll
push
lcall
mov
mov
or
or
mov
shlb
mov
mov
std
jo
or
inc
mov
mov
mov
insb
adc
ds
xor
mov
jge
inc
adc
mov
inc
std
aam
cltd
mov
popa
cmp
pop
scas
sub
lahf
lahf
xchg
mov
or
movsl
push
inc
flds
out
je
cltd
cmc
into
frstor
push
andb
mov
cltd
jmp
jb
ja
push
stos
inc
leave
pusha
push
ret
data16
repz
jnp
shll
sbb
sbb
test
push
shrb
dec
rcll
mov
mov
arpl
fwait
sub
adc
cli
int3
mov
pop
or
mov
hlt
insl
out
jno
lret
jmp
mov
add
cmp
ror
daa
jnp
aaa
or
pop
outsl
fs
mov
xor
rorl
aad
xchg
mov
and
enter
cmp
lret
mov
jmp
jns
add
in
sbbb
popa
test
aas
aam
dec
enter
ja
rcrb
insl
jno
aaa
ret
repz
test
aad
sbb
inc
shlb
in
push
lds
sub
cmpsl
mov
jne
out
jmp
mov
rclb
jb
inc
dec
mov
fsts
xor
jmp
nop
mov
add
mov
punpckhdq
fwait
sub
pusha
mov
or
loopne
cltd
movsl
mov
xlat
inc
insl
pushf
test
add
iret
or
push
push
sbb
jbe
std
popf
pop
and
jns
pushf
pusha
add
and
lcall
test
cmpsb
cmp
aaa
jns
movsl
pushl
ficompl
mov
cmp
and
icebp
imul
in
int3
push
sbbl
sub
testl
mov
dec
roll
cmp
pop
jecxz
mov
xchg
ljmp
sbb
inc
mov
jg
pop
add
loope
insl
sbb
push
inc
push
inc
jmp
and
fs
xchg
divb
jl
scas
jle
xchg
cltd
stc
lret
lods
mov
clc
and
ss
jmp
mov
cmpsl
mov
test
jge
mov
fisubl
mov
mov
add
add
divl
or
stos
xchg
std
adc
and
xchg
mov
loope
push
pushf
test
adc
add
xor
mov
cmpl
test
or
ja
in
inc
ljmp
sub
jo
ficomps
pop
in
sbb
insl
pop
fwait
je
lret
mov
out
add
sbb
mov
pop
add
popf
loope,pt
sahf
insb
loopne
cmp
xchg
mov
push
xchg
out
jne
lods
cmc
and
fcompl
out
add
inc
pop
jecxz
hlt
pop
pusha
test
setne
in
negl
xchg
ss
adc
mov
in
out
xchg
imul
mov
add
inc
repnz
scas
cmp
mov
loop
mov
mov
fdiv
movsb
mov
lahf
popf
sbb
lcall
test
pop
clc
lahf
and
inc
es
adc
inc
std
cltd
adc
sbb
mov
sbb
test
loope
fcompl
pop
mov
inc
loop
call
adc
push
emms
xor
rolb
add
jge
fbstp
pop
rcr
pop
jo
imul
clc
adc
aas
mov
inc
ret
iret
mov
imul
daa
cmpsl
addl
std
addr16
cmp
in
lahf
fmull
xorl
shll
push
jo
dec
insb
mov
lahf
jae
ret
iret
or
jae
fisttpll
rcll
xor
jnp
popa
xchg
push
jb
jg
mov
out
fs
lods
loop
push
mov
adc
push
lock
mov
shlb
mov
mov
or
cmp
cmpsb
pop
fcoms
mov
jl,pn
ret
mov
filds
pop
sarb
test
in
jle
pop
sub
add
xchg
cmc
bound
addl
inc
xor
lea
bnd
mov
jl
shrb
mov
sub
sbb
vpmulhw
out
cmp
sbb
adc
test
mov
movsb
jmp
pop
in
lret
and
ret
pop
push
out
movb
sub
or
arpl
pop
xchg
sbb
sbb
repz
xchg
add
fisttpll
cmp
jmp
cwtl
inc
dec
adc
add
je
jbe
imul
pop
shrb
dec
and
jp
cmp
nop
stc
sbb
xchg
je
aad
movsb
xlat
insl
mov
dec
adcb
adc
lret
cmp
adc
add
std
lock
jb
dec
ret
rcr
sub
shl
xchg
adc
fs
into
jmp
clc
cmc
inc
push
push
test
cmp
cwtl
push
pop
dec
inc
mov
or
pushf
mov
push
and
ja
gs
inc
pop
adc
adc
je
stos
and
in
mov
movsl
xchg
rcrl
lret
fmulp
iret
outsb
mov
jno
in
ljmp
push
xchg
fbld
int3
imul
fdivl
xchg
lahf
cmp
lcall
movsb
push
pop
mov
out
push
movhps
fsubl
leave
std
faddl
lds
or
cli
roll
xchg
sub
push
iret
sbb
jl
lret
pop
adc
out
push
push
aad
sbb
das
movsb
cmp
lret
addl
pushf
jle
jl
cmp
call
mov
pop
pop
push
inc
scas
mov
or
lds
stc
pop
inc
rorb
jg
int3
enter
push
sub
repz
dec
cld
xor
loope
fwait
aaa
rorb
push
sbb
dec
imul
hlt
or
sbb
pusha
push
jecxz
cmp
push
inc
rcrb
roll
roll
adc
pop
dec
test
shrb
pop
lock
lock
push
add
push
orb
mov
test
out
outsb
loope
cmpb
cld
dec
jmp
icebp
test
add
jecxz
ret
mov
fstp
xlat
repnz
shl
mov
movzwl
jnp
xchg
lods
shll
stos
rorl
pusha
mov
call
lcall
ja
sar
scas
fdivrl
and
mov
pushf
pop
mov
das
stos
cmp
pop
mov
pop
sbb
sbb
ret
sti
in
dec
and
inc
sbb
call
enter
pop
cmpsb
mov
jge
jecxz
fnstenv
ret
mov
xor
lahf
mov
in
aad
popa
push
and
loop
mov
fs
mov
rorb
mov
pusha
sbb
aaa
mov
popa
subl
ficompl
jno
sub
pop
inc
add
lret
pop
mov
movsl
das
movsb
cmpsb
mov
mov
lods
or
lret
mov
inc
jae
mov
addr16
repnz
call
adc
push
mov
sub
jmp
jecxz
cmp
jae
sarb
xor
add
push
int
xor
sub
fdiv
inc
mov
iret
or
lcall
in
cmpl
cli
stos
jmp
roll
jbe
rolb
dec
cmc
mov
sub
sub
mov
jns
in
test
test
cmp
add
iret
loope
fstpt
pop
int3
mov
aaa
rorl
mov
sarl
cmpb
pusha
cmp
jae
roll
loop
mov
xchg
int
cmp
leave
or
push
adc
jmp
jge
push
mov
mov
or
aad
dec
fildll
hlt
stc
and
std
mov
inc
sbbb
jns
push
mov
dec
cmc
outsb
push
adc
mov
decb
std
cmc
outsl
mov
jbe
mov
lock
mov
mov
dec
jns
cli
iret
jns
push
sub
sub
stos
cltd
mov
jge
sahf
mov
cmp
divl
imul
jo
outsl
cmpsb
jecxz
vpsubsw
dec
dec
pop
test
xchg
fnstenv
jbe
xor
cli
movsl
lret
dec
sbb
ljmp
add
dec
cmp
mov
jbe
xchg
ret
xor
add
and
dec
jno
xor
es
aas
and
arpl
outsl
jmp
sti
popa
xor
jmp
ret
addb
pop
jae
imul
push
lea
jbe
pop
cmp
inc
xchg
adc
cmpsl
push
mov
push
jbe
mov
ljmp
push
mov
inc
imull
sub
push
or
adc
stc
loopne
in
imul
add
mov
testl
ret
int3
adc
loope
inc
cltd
sbb
mov
stc
les
xchg
out
inc
dec
icebp
dec
jo
inc
add
movsb
and
cmp
jge
and
mov
lret
outsb
in
xor
xor
xchg
leave
fstpt
mov
clc
fsubl
sub
lahf
jo
mov
mov
test
nop
sub
out
ror
loopne
add
add
fwait
test
imul
jecxz
clc
xor
or
fcomps
jp
cmpsl
pushf
push
dec
inc
dec
push
stos
movsb
xchg
push
jp
or
xor
lahf
inc
out
inc
loop
int3
shld
mov
mull
pop
scas
lock
lods
repz
clc
repnz
inc
pop
leave
pop
dec
mov
cltd
aam
in
mov
adc
fcmove
or
ljmp
ss
lcall
dec
punpckldq
xor
fisubs
cmp
xor
push
imul
sbbb
mov
punpckhdq
jns
cld
sub
out
sbb
lods
mov
ret
mov
adc
mov
inc
dec
cmp
mov
ljmp
adc
dec
movsl
pop
dec
inc
xor
stos
add
pushf
xor
xor
shll
adc
xlat
dec
cmp
lret
arpl
loopne
sti
cwtl
mov
pop
cmc
push
mov
mov
mov
mov
dec
jge
je
cli
js
in
lds
addb
in
cpuid
out
add
and
stc
dec
stos
jecxz
xchg
mov
and
jg
add
mov
xchg
ljmp
inc
adc
mov
sub
shll
repz
sub
add
fs
mov
add
adc
sbb
and
jns
insb
lods
gs
cmp
cmp
inc
jge
xor
push
test
push
xchg
neg
cld
pop
lea
cltd
outsb
testb
gs
ret
xor
jecxz
aam
xor
jnp
test
cmp
add
lds
test
pop
jo
in
pop
or
cmp
jge
scas
leave
rcrb
mov
lea
out
cmpsl
orl
jno
sahf
pop
repz
gs
movsl
outsl
mov
fs
enter
hlt
mov
dec
int3
jl
int
arpl
loope
fstps
jge
cmp
jmp
jp
cmpsl
test
int3
add
fisubs
push
fsubl
pop
pop
fdivrs
jb
add
adc
mov
xchg
jge
out
popf
imul
pop
jge
cmp
push
shlb
rorb
push
cli
pushl
inc
ds
cmpsb
bound
jle
outsl
sbb
mov
es
xor
movsb
mov
push
mov
pop
mov
nop
push
push
adc
scas
fnstcw
jb
sbb
sahf
or
cwtl
mov
jo
jmp
je
dec
lods
adc
or
insb
jae
mov
inc
mov
aam
inc
popf
lods
cmp
mull
fiaddl
stc
xor
outsl
adc
js
ds
insl
cmpsl
pop
gs
mov
es
stc
cmp
mov
jns
pop
mov
sbb
xor
adc
sbb
dec
add
mov
pop
jb
sahf
or
inc
fldt
push
leave
mov
xor
jnp
xor
and
push
push
jns
addr16
push
insl
ja
lds
sbb
push
mov
mov
lea
mov
push
insb
in
pop
push
je
or
andb
adc
inc
mov
adc
jmp
data16
sub
adc
sub
js
or
and
dec
aad
pop
push
or
sub
shlb
es
adc
fsubrl
jne
mov
stc
lret
adc
adc
cmpsl
inc
xchg
mov
push
ret
repz
inc
sbb
or
adc
int
mov
or
loop
out
clc
ret
and
xor
xchg
dec
sbb
mov
bnd
aad
in
daa
jne
or
adc
cld
pop
jmp
jge
movsb
mov
adc
testl
ss
lret
push
cmpsb
cwtl
mov
xchg
sbb
cmp
dec
cmp
repnz
fwait
aad
lcall
mov
xchg
xor
outsb
jno
shrl
and
cld
sub
test
test
gs
mov
ss
jg
add
push
xchg
sti
xor
shll
mov
nop
sbb
adc
cmp
fidivl
icebp
mov
stos
lods
jl
aam
adc
inc
push
loopne
test
mov
cwtl
clc
insl
cmp
and
mov
or
push
push
sbb
lcall
leave
sbb
or
sbb
jae
movhps
lahf
ficoml
arpl
frstor
or
xchg
std
jge
daa
xor
jle
cmpsb
cld
movsb
lods
sbb
mov
insl
ret
push
pop
and
lods
xchg
sbb
repnz
int3
stc
jecxz
dec
cmp
cs
lea
jmp
fisubrl
out
adc
insl
inc
cs
je
push
cltd
dec
das
das
cmp
sahf
push
out
xor
shlb
cmc
jne
xor
mov
pop
movsb
mov
fsubs
mov
test
int3
sbb
sub
clc
int3
outsb
push
or
or
sub
and
sti
fisttpl
loop
dec
lahf
push
mov
xor
lock
add
add
leave
outsb
jecxz
mov
bnd
movsl
xchg
push
dec
das
cmpsl
mov
jnp
stc
sbb
mov
aaa
shll
xchg
mov
xor
jp
jae
sbb
orl
popa
orl
fidivs
and
leave
jle
lret
pop
fidivrl
sbb
mov
jmp
das
rcr
dec
ds
out
inc
xchg
mov
scas
or
adc
popf
in
vandpd
fwait
or
or
dec
out
mov
push
push
les
cmpsl
push
pop
cld
shrb
sarb
mov
push
rolb
mov
and
xchg
adc
dec
aas
jne
cmpsl
nop
mov
rorl
sub
jmp
push
aad
push
movsb
xchg
fcoms
adc
add
in
out
lret
jb
mov
push
lret
loope
test
cmp
or
jecxz
gs
xchg
inc
xchg
mov
mov
lcall
dec
pop
out
xchg
addr16
inc
lret
repz
jne
mov
push
xchg
lds
pusha
and
pop
pop
cmp
inc
sbb
add
out
mov
jns
add
es
popfw
jbe
stos
shr
add
cmp
xchg
fs
sub
fs
std
push
push
xlat
out
push
fstpl
sub
ljmp
jb
mov
nop
sbbl
pop
or
das
and
sarl
lret
cmp
stos
push
mov
adc
or
mov
xor
in
mov
add
inc
dec
movsl
push
mov
adc
and
je
loop
xor
push
jb
fdivrs
jecxz
cld
mov
jge
popl
popl
scas
es
mov
popa
repz
lods
fwait
jae
sbb
in
mov
nop
test
loop
hlt
jecxz
mov
sbb
push
push
mov
sub
imul
mov
decb
mov
adc
and
jns
fcomps
fsubrp
xor
xchg
push
push
repnz
in
add
inc
aas
data16
fmull
cwtl
bound
scas
xchg
push
adc
pushf
sbb
sahf
jmp
addb
iret
inc
dec
jno
nop
dec
fsubrl
les
addb
sub
mov
pop
mov
and
adc
jp
inc
xchg
cmp
ds
mov
shrb
adc
jl
cmp
rclb
mov
push
cli
ret
out
popf
popf
ljmp
mov
pushf
cmpsl
lret
lods
std
add
push
cmp
mov
lcall
xchg
push
insb
jl
into
adc
addr16
cmp
push
jbe
cmp
add
pop
jecxz
je
mov
lods
inc
and
inc
cli
add
mov
gs
mov
sbb
xor
cmpb
add
adc
pop
fmulp
leave
in
sbb
pop
mov
jge
les
mov
clc
mov
push
fsubp
mov
pop
xor
xchg
pushf
js
adc
aam
ficompl
xor
sbb
pop
or
outsl
pop
push
cmp
jo
xchg
xor
movsl
and
cmp
pop
pop
push
icebp
shll
test
and
mov
call
adc
sub
aaa
aas
adc
and
int
sbb
add
pushl
outsl
mov
lea
movsb
in
adc
add
cmp
movsl
mov
cmp
sahf
cmp
sbb
pop
xchg
je
dec
stos
and
pop
sub
ja
stos
insb
add
mov
push
push
cltd
or
std
sbb
addl
cmp
movsl
test
add
clc
jge
in
sub
decl
sbb
aam
pop
enter
adc
mov
stos
faddl
ljmp
pop
add
fwait
mov
or
and
sub
push
mov
aad
jecxz
add
pop
dec
push
ffree
out
lcall
mov
cs
arpl
xchg
xchg
xchg
loop
leave
mov
inc
sbb
outsl
loop
sbb
push
lret
clc
sahf
push
test
push
xchg
cmp
fucomip
call
xchg
hlt
xlat
and
mov
sarl
ds
insl
push
xchg
in
sub
jge
or
pushw
shlb
add
jne
testb
sub
push
jmp
xor
dec
xor
sub
ja
call
jns
and
cltd
mov
inc
inc
pushf
cmp
lods
xor
lcall
mov
inc
push
fst
ljmp
inc
movsb
mov
ljmpw
imul
mov
outsl
shll
call
mov
imul
xchg
das
push
pop
mov
iret
push
dec
mov
or
adc
jnp
in
imul
push
dec
push
push
popa
sbb
fstpt
add
push
mov
cmpsb
fisubs
adc
and
mov
mov
cmpsb
add
mov
or
stc
daa
ret
popf
pop
imul
pushw
imul
add
lret
jp
dec
pop
cmp
bound
adc
xchg
xor
add
js
xchg
sbb
inc
pop
daa
mov
add
jb
ficoml
movsb
xor
dec
outsb
push
mov
notb
mov
cmp
inc
adcl
push
daa
loop
imul
hlt
push
nop
adc
idivl
lcall
xlat
stos
std
pushl
xchg
adc
movsl
rorb
mov
clc
jbe
sti
fst
test
mov
xor
mov
inc
add
ss
and
in
cmc
js
test
imull
push
xchg
ja
mov
jno
out
test
mov
mov
push
push
push
add
inc
jl
int3
and
stc
mov
ds
fwait
rclb
out
les
sbb
inc
in
sub
fucompp
jl
or
mov
sbb
ffreep
xchg
adc
mov
test
dec
mov
lods
sbb
or
jmp
or
pop
lea
adc
cmp
push
rcr
push
jg
ljmp
cmp
push
aad
and
test
sub
insb
pop
jge
jns
test
inc
ljmp
inc
inc
repz
mov
push
pop
cmp
arpl
int
pop
fisubrs
pop
outsl
dec
insl
hlt
cld
push
dec
fidivl
mov
dec
fcompl
xchg
insb
lcall
fldl
xchg
mov
xor
repnz
or
adc
xchg
dec
iret
inc
jl
fcompl
dec
and
adc
lods
inc
out
mov
lods
out
stos
pusha
rol
lea
pop
mov
in
insl
or
xchg
loop
mov
xchg
scas
push
or
jbe
sbb
inc
idivl
sbb
sarl
icebp
and
lods
out
and
imul
jb,pn
mov
mov
dec
jg
cmp
add
dec
cmp
jl
pop
cmc
mov
inc
push
ja
mov
lds
and
pop
addr16
add
push
aad
adcb
mov
cld
shlb
sub
scas
push
sbb
rorl
jo
bound
cmp
add
sub
xchg
cmp
cmp
aam
test
or
dec
fisubs
push
and
push
mov
add
mov
push
or
addb
or
ret
mov
adc
into
cmp
pop
out
add
add
aas
jmp
add
pop
jg
aad
sbbb
pop
dec
ja
and
stos
cwtl
jb
pop
shr
out
push
es
fcom
mov
cld
aad
jl
add
in
pop
sub
ljmp
popa
lods
push
insb
mov
add
pop
sbb
lcall
cmpsl
leave
lahf
subl
inc
inc
cmp
fcomip
adc
clc
mov
fcoml
popf
add
lcall
xor
sub
pop
cli
or
pop
cli
arpl
xor
test
insl
sarb
shlb
xor
sub
push
push
or
ja
ss
int
pop
jo
outsl
lcall
repz
mov
xlat
jg
jne
ljmp
sbb
dec
sbb
mov
xchg
sub
inc
out
dec
sarl
jne
in
imul
mov
and
in
cmc
sub
adc
sbb
xchg
dec
cltd
cmp
cmpsl
in
pop
je
dec
clc
cmp
dec
dec
scas
dec
ss
adc
in
xchg
push
pop
test
dec
xor
daa
pushf
data16
sbb
push
mov
imul
cmc
add
xchg
jb
sub
fcompl
sbb
sbb
in
sbb
arpl
sti
jne
sub
je
loope
int
std
and
add
fistpl
cwtl
push
mov
xchg
jb
sub
flds
insb
pushf
cmpsl
jg
dec
cltd
xchg
add
push
das
call
test
push
sub
push
cs
jp
pop
jae
je
jne
and
inc
mov
cmc
jg
sub
aad
xor
jmp
mov
xchg
decb
inc
xor
pop
cmpsb
mov
je
push
xchg
xchg
xchg
cltd
sbb
loopne
jnp
test
ja
pusha
pop
repz
inc
popf
jns
mov
adc
out
push
push
nop
pop
mov
int
sbb
push
incb
int
adc
hlt
push
mov
dec
loop
jle
mov
xchg
movsl
sbb
iret
mov
outsb
and
sub
and
rorl
push
or
daa
int3
sub
mov
je
insb
pop
sbb
into
xorl
loopnew
idiv
test
repz
data16
popf
js
daa
or
xadd
ds
lret
inc
enter
jo
add
cli
xor
jmp
stos
adc
ja
or
push
cwtl
push
gs
cmpl
fstpt
fs
lahf
in
les
pop
orl
sub
pop
loope
in
jns
test
in
aam
nop
xor
jmp
mov
jne
add
divb
into
adc
push
sub
and
sub
ret
aad
xchg
mov
outsb
das
repz
dec
jns
push
enter
mov
mov
or
xchg
jecxz
lods
ds
imul
loop
repz
pop
or
adc
mov
and
es
enter
mov
in
jnp
je
mov
ficoms
cs
test
psubw
mov
add
mulb
sbb
mov
fbld
jnp
lahf
fists
mov
in
cmp
lock
mov
loope
test
xlat
icebp
lds
fdivrl
pop
cmp
jp
adc
or
sub
pop
and
pop
mov
jmp
inc
cwtl
xlat
cmp
mov
fstl
dec
xor
sbb
ja
or
pop
push
mov
push
mov
dec
testb
jb
shlb
rcll
in
add
inc
cmovo
mov
add
inc
cmpb
sub
push
xchg
jp
sbb
push
lods
jns
pop
push
adc
inc
pop
jns
int3
dec
inc
xor
leave
xor
rorb
adc
icebp
mov
mov
jne
ret
add
sbb
jnp
gs
and
lret
add
jb
ds
or
outsl
sbb
pop
lcall
outsl
pop
lret
push
and
xlat
mov
fidivrl
push
inc
sub
sbb
out
push
sub
push
xlat
stos
leave
mov
pop
add
sub
mov
rcll
push
mov
mov
daa
sbb
xor
push
scas
add
arpl
mov
cmp
mov
push
ljmp
outsb
xchg
push
cs
and
push
push
jno
push
or
xchg
je
and
out
add
daa
push
sub
sbb
mov
loope
jmp
in
gs
fdivl
push
lret
cmp
cmp
fs
dec
icebp
pop
idivb
in
jecxz
xor
stos
mov
xchg
add
gs
stos
push
xchg
add
cmc
mov
enter
mov
sti
mov
inc
loop
popa
xchg
pusha
xchg
iret
in
aam
lods
pop
ljmp
mov
inc
dec
cmp
cmp
sub
cmp
mov
lcall
sub
in
mov
arpl
or
xchg
stos
push
hlt
aas
jmp
add
push
shrl
dec
dec
fwait
call
mov
adc
adc
xchg
lods
dec
out
dec
fdivrs
push
shl
adc
loop
sub
fisttps
xor
lcall
pextrw
dec
xor
test
xor
mulb
push
mov
xchg
add
test
sbb
mov
xor
fs
int
cmp
je
jns
mov
arpl
fst
fmull
enter
mov
mov
shlb
or
jo
adcl
stos
in
test
fwait
test
and
sbb
hlt
mov
or
xor
adc
add
xchg
scas
inc
mov
or
pop
xor
dec
loopne
ds
mov
xor
leave
and
pushf
sti
scas
push
mov
aas
mov
stos
dec
test
sbb
add
push
cltd
xor
mov
lods
fs
int
out
mov
out
jnp
add
xchg
or
and
aas
clc
lea
int
aaa
inc
gs
xchg
and
fdivrp
aad
ror
mov
pop
scas
adc
stos
cmp
lahf
out
int
push
pushf
push
repz
int
iret
sub
in
and
and
push
test
ds
int3
push
in
clc
sub
lahf
xchg
fmull
leave
dec
or
bound
add
cmp
icebp
ljmp
divb
rorl
shl
jecxz
subb
js
sbb
xchg
clc
mov
xchg
and
lods
rolb
jne
mov
push
push
push
movsb
clc
int
movsb
mov
cmp
pop
sti
js
mov
bound
ja
jbe
xchg
clc
cli
add
rcr
shll
jle
push
sub
ja
push
bound
mov
insb
stos
xchg
sbb
ja
aaa
dec
cli
cltd
mov
jp
hlt
mov
jecxz
push
addb
push
gs
pusha
cmp
push
cmp
aaa
loopne
out
je
faddl
lahf
sbb
jns
shll
ljmp
sbb
push
sub
mov
test
lock
inc
test
pop
push
push
inc
pop
add
or
lock
cmpb
repnz
repnz
and
jp
and
ljmp
ss
adc
aad
iret
lret
jae
jno
sub
pop
imul
adcl
js
adc
fisubrs
and
lods
ljmp
dec
sti
loope
dec
and
lcall
pop
inc
mov
imulb
add
xchg
cwtl
add
jo
xor
lea
popf
add
pushf
movsl
xor
pop
adc
push
test
gs
bound
push
lods
mov
mov
mov
leave
lock
test
xchg
lods
arpl
test
mov
mov
or
movsb
xlat
aad
pop
adc
xchg
je
cmp
xor
mov
jg
sbb
pop
lods
push
mov
fnsave
out
dec
adc
test
mov
pop
or
jae
pusha
mov
xor
kandnb
seto
mov
xor
das
mov
ficoml
out
lods
or
xchg
scas
pushf
sahf
and
sbb
fwait
jp
aad
dec
adc
imul
je
mov
cmp
nop
jecxz
or
repnz
js
jns
js
shlb
dec
mov
adc
jbe
adc
negl
outsl
adc
rclb
mov
stos
add
gs
cmp
push
push
xchg
xor
repz
cmpsb
sub
push
ja
fs
cmpb
sti
sbb
enter
repz
cmp
dec
test
fwait
lock
mov
fcomps
rorb
imul
and
jnp
mov
push
in
insw
jne
roll
cmp
pop
jbe
or
pusha
nop
and
sbb
stos
adc
fst
cmp
aam
fcoml
sub
loope
fisubrl
inc
repz
xchg
mov
cmpsl
mov
mov
outsl
lea
sub
sbb
or
add
pusha
cmpb
movb
inc
inc
push
in
xor
mov
sub
or
inc
hlt
in
xchg
mov
addl
jo
adc
push
sti
xchg
bound
or
fimull
dec
xchg
clc
cmp
fbstp
inc
mov
push
scas
mov
mov
out
jecxz
loopne
add
ds
pop
cmp
mov
mov
pop
shlb
outsb
rorb
inc
aad
dec
mulb
lods
je
insb
pop
enter
mov
repz
imul
jmp
dec
jb
out
into
and
stc
cwtl
enter
fsubrl
test
lds
xchg
jnp
fisubs
pop
and
sub
add
adc
aaa
outsl
inc
dec
out
jmp
jl
pop
scas
cmp
inc
lret
imul
xchg
pop
ljmp
jl
cs
outsl
adc
dec
icebp
xchg
xlat
lret
pop
jbe
or
cmp
add
jmp
lret
pop
aas
xchg
pop
cmp
repnz
xchg
fdiv
ja
in
in
jnp
mov
and
sti
rcrb
sbb
sub
pop
sub
add
cmpsl
lret
push
scas
cmp
sbbb
std
repnz
jg
mov
ror
popa
mov
arpl
dec
adc
sti
movsb
push
xor
push
sbb
add
xlat
outsb
les
dec
dec
push
pop
mov
add
ss
ret
lods
movsb
jo
xor
dec
fmulp
movsb
ret
adc
mov
inc
pusha
outsl
sub
xor
ret
add
dec
xor
push
call
or
punpcklwd
jbe
in
cmp
mov
lods
mov
mov
adc
ret
or
add
lods
jns
out
lcall
fsubr
insb
cltd
cld
fwait
dec
cmpsl
inc
mov
fs
aaa
out
mov
mov
sub
mov
aam
ret
pop
jo
add
iret
jmp
dec
leave
sahf
cmp
out
add
jb
enter
aam
xchg
arpl
int
jp
mov
cwtl
arpl
xor
lods
and
pop
inc
cli
xchg
mov
ds
pop
add
or
loop
daa
scas
mov
pop
pushf
xchg
shll
hlt
dec
scas
gs
add
mov
push
xor
lds
aaa
or
pusha
xor
outsb
push
hlt
sub
filds
dec
add
jno
frstor
jp
sub
inc
faddl
scas
sbb
or
mov
dec
or
aad
shrl
xor
pop
xchg
cmpl
int3
xchg
jl
cmp
fnstenv
inc
fcomps
mov
ja
loope
jne
and
mov
and
enter
mov
iret
mov
bound
in
out
pop
lret
dec
cltd
jno
lcall
jbe
sub
fdivp
data16
adc
nop
outsl
repnz
bound
push
lcall
fsubl
cs
hlt
cmp
mov
test
fisubl
mov
aad
xor
aad
or
insl
lds
jle
imul
mov
dec
cld
loop
inc
mov
testl
xor
sti
je
xor
lock
stc
rsqrtps
ds
mov
mov
jae
and
or
jecxz
icebp
jne
jg
cmp
ja
dec
adc
xchg
sti
scas
dec
sbb
cmc
insl
insl
jae
jg
mov
enter
out
mov
push
sbb
push
js,pn
jp
sub
stos
inc
jbe
in
scas
icebp
loop
push
adc
and
outsl
lret
imul
cmp
stos
push
add
cld
mov
adc
xchg
add
into
mov
inc
addl
mov
jmp
data16
inc
mov
add
insl
sub
popa
xchg
add
in
andb
pop
or
or
add
mov
cmp
mov
aad
xlat
shrl
and
mov
mov
inc
imulb
js
in
or
inc
inc
mov
ja
inc
daa
lea
popa
iret
fisttps
lock
or
movsl
dec
jb
test
lods
hlt
dec
les
adc
inc
cli
and
mov
lcall
gs
and
xor
jae
mov
jo
por
pop
loope
decb
pop
mov
dec
mov
mov
mov
aad
cmc
cs
sub
in
dec
insl
pop
xor
out
sub
movsb
pop
es
repz
int
cmp
or
aam
adc
jl
aad
cmp
sbb
cwtl
cmpsb
xchg
dec
or
push
push
inc
and
cmp
cmpsl
cmpsb
push
add
clc
xor
pop
jl
leave
movsl
repz
cmp
idivb
pop
daa
shll
xchg
xor
push
add
sub
gs
or
iret
arpl
pop
pop
xor
cmpb
inc
fadds
mov
imul
jb
jbe
cmp
mov
dec
lds
enter
cmc
add
push
inc
and
cmp
das
add
ficompl
and
xor
add
data16
int3
iret
mov
mov
and
js
leave
lds
xlat
xor
ljmp
inc
inc
testb
fcom
pop
mov
dec
sub
insb
push
push
pusha
xchg
fldcw
data16
data16
push
fsubl
push
or
in
lods
inc
push
add
pop
shl
sbb
lods
push
and
add
testl
std
push
cmp
imul
out
jb
cmpsb
push
or
sub
std
pop
xchg
outsl
mov
out
js
jb
or
movsb
je
adc
rorl
dec
pop
into
jno
xchg
aaa
push
jmp
cltd
dec
leave
jle
xor
jg
arpl
xor
xor
ret
sbb
out
mov
pop
sbb
push
and
test
pushf
xchg
in
adc
sbbl
out
jge
dec
fs
lret
xchg
pop
and
push
je
inc
sbb
xor
test
push
mov
fisttpl
int3
push
iret
jg
mov
jns
add
scas
mov
add
lea
pop
push
in
inc
ret
add
repnz
lcall
dec
mwait
call
popf
repz
pusha
push
aas
insb
jle
imul
loop
adc
mov
sbb
sar
dec
insb
push
push
xchg
fadd
ljmp
cmpsb
jbe
bnd
cmp
lock
mov
out
push
pop
out
sbb
push
repnz
mov
aam
jb
xor
and
es
jns
shr
movsb
js
out
into
xor
pop
jno
add
pop
cmp
ds
int3
popa
sub
and
pop
icebp
lds
push
lret
adc
add
pusha
mov
insl
pushf
imul
sub
shll
aad
repz
lret
ss
insb
cmpsb
dec
dec
lcall
or
movsl
test
sahf
add
cs
mov
cs
lock
add
fcoml
jmp
push
mov
cmovae
in
push
rcl
mov
pop
pop
inc
inc
sbb
lret
aas
mov
fistl
out
cs
js
sbb
or
idiv
xchg
ja
lret
sbb
insb
fimuls
inc
xor
enter
push
int3
adc
stos
jl
repz
sub
mov
andb
fs
popf
cltd
jmp
mov
sub
add
mov
mov
xlat
jg
pop
aas
lds
inc
fcoms
jg
pop
jecxz
lret
cmpsl
test
frstpm(287
pop
lahf
stos
into
xor
xchg
or
xchg
nop
or
jmp
adc
scas
lret
jno
icebp
test
adc
ja
mov
shlb
hlt
lahf
cmp
cwtl
lcall
stc
jns
lods
pop
push
je
iret
mov
sub
jo
pop
pusha
gs
pop
cmpsb
sbb
popa
ffreep
aas
js
or
mov
clc
stos
into
inc
repz
popa
pop
clc
adc
sti
push
out
and
mov
and
cmp
mov
xor
cmpsl
and
rcl
das
shrl
jo
test
mov
cmc
test
fcoms
lret
das
or
das
or
daa
and
rclb
out
test
lret
fisubrs
mov
xchg
sbb
mov
pop
lcall
inc
mov
lds
sub
and
clc
scas
test
popa
dec
nop
repz
ss
ret
mov
push
jb
inc
aad
ret
inc
sbb
inc
inc
in
pushf
mov
aad
push
test
pop
into
jle
fdivp
sub
xchg
fisttpl
pushf
jno
sub
push
sub
push
mov
jno
xchg
roll
inc
in
push
das
dec
xchg
mov
inc
ljmp
into
lcall
inc
pop
int3
cs
dec
xor
adc
cmp
orl
xor
mov
fildl
loopne
pextrw
cmp
loope
sub
jnp
jb
sti
sbb
daa
aaa
imul
pop
inc
add
iret
int
arpl
cli
dec
mov
addr16
and
iret
pop
sub
and
data16
ljmp
and
lods
cld
dec
mov
cs
pushf
add
adc
pop
stos
adc
lret
and
pop
in
inc
fstps
lcall
call
push
mov
push
repz
mov
sbb
jnp
dec
lahf
adc
or
cmp
mov
aad
movb
repz
in
gs
sbb
jge
xor
je
cwtl
and
sbb
stos
xchg
push
sub
xor
xor
pop
mov
xor
mov
sbb
or
popf
jmp
popa
cwtl
cld
insb
sarl
mov
xor
pop
inc
cli
fnsave
push
fimull
cmc
jno
pop
sti
inc
scas
xchg
in
sub
or
or
or
jecxz
scas
or
sbb
std
dec
ds
cwtl
aaa
xchg
jp
and
outsl
sbb
rol
aad
dec
xor
cld
in
popa
and
mov
mov
stos
fbstp
dec
dec
in
cmpsb
xor
pop
xor
sbb
jmp
mov
xor
leave
lcall
arpl
js,pn
mov
inc
adc
aaa
xchg
push
sub
sbb
paddb
sub
push
adc
inc
js
sub
xchg
ds
jl
sbb
fmull
addr16
push
push
sbb
in
dec
adc
pop
pusha
sarb
icebp
add
cli
fmuls
cmpsl
jns
test
dec
inc
stos
rsqrtps
sti
xor
sbb
gs
inc
andb
pusha
mov
stc
jge
jo
js
push
popa
jp
mov
dec
jg
das
ljmp
fsub
popa
loope
push
daa
loope
push
ficomps
or
pop
rorb
test
and
mov
mov
enter
fwait
fs
repnz
movsb
cmp
dec
shlb
inc
ja
sub
and
aam
scas
jo
push
out
dec
jle
ss
jmp
les
pop
gs
fimuls
mov
test
insb
test
xchg
ja
cmp
jns
or
cmp
mov
xor
cmc
int
fcomp
fisttpl
ja
fistpl
addr16
and
mov
mov
insl
lods
std
xchg
cmpsl
cmp
and
sbb
inc
push
arpl
test
cmpsb
inc
adc
cmp
push
xchg
adc
mov
and
xor
sbb
pop
inc
mov
and
aam
sbb
pop
cs
iret
and
flds
jp
xor
inc
sbb
fmuls
int
arpl
arpl
aad
or
dec
xchg
xchg
lods
aam
imul
or
push
shl
jne
and
sahf
add
pop
cmp
insl
pop
mov
jbe
push
add
hlt
loop
aaa
pop
inc
insb
out
call
ss
test
fldcw
mov
movsl
pop
call
pop
clc
leave
cs
adc
push
mov
cmp
cmp
rorl
loopne
jmp
pop
ds
cmp
and
xor
rorb
lods
cmp
cmc
mov
fstp
lods
movsl
aas
into
pop
dec
pop
ljmp
sbb
sti
cmp
scas
xor
push
mov
fistps
je
push
scas
and
je
stc
push
jbe
xor
add
cmpsb
or
aad
sub
addl
jo
dec
dec
lods
call
push
adc
loopne
jecxz
dec
adc
xchg
mov
jecxz
jp
jecxz
test
push
mov
loope
je
jmp
mov
loopne,pn
dec
xchg
adc
ror
jbe
lret
inc
jge
stc
inc
pop
mov
xor
jmp
mov
test
outsb
mov
jl
cmpsl
cmp
or
daa
cltd
leave
les
mov
cmp
mov
movl
xchg
es
jae
mov
push
rorl
aad
cmp
inc
inc
sbb
mov
scas
cmpsb
lea
sub
daa
pop
aas
rcrl
repnz
adc
mov
jae
inc
cmp
and
loope
loope
mov
sub
jl
lret
push
xchg
les
jle
xchg
mov
leave
mov
push
pop
loop
rclb
mov
push
sub
sbb
push
mov
cmp
jg
or
int
sbb
push
pushf
int
pop
xchg
and
popa
sub
rclb
sarl
cmp
mov
push
mov
rcrb
insl
jb
fmuls
xor
rol
sbb
leave
and
cmc
addr16
xorl
in
xor
xchg
movsb
je
out
loop
rorl
adc
shl
test
jb
add
out
mov
push
pop
push
push
sbb
imul
add
dec
push
aas
cmp
js
leave
movntq
out
or
call
loop
and
pop
dec
dec
cmc
mov
push
mov
scas
push
enter
dec
sti
call
sub
add
test
arpl
pop
arpl
in
int3
test
ret
or
inc
mov
dec
loope
stos
cmp
xchg
rclb
pop
pushf
stc
cmp
adc
out
loop
or
or
jb
cltd
mov
or
mov
xchg
jmp
call
add
xchg
lock
pop
or
ret
stos
mov
adc
mov
ss
or
and
mov
ljmp
sbb
push
xchg
adc
cmp
and
mov
sub
lds
testb
jne
and
inc
arpl
cmp
ss
jle
test
mov
or
cmp
insl
iret
inc
jo
xchg
fidivrs
adc
and
out
mov
test
test
or
lods
leave
aam
test
cmpsb
or
ja
dec
mov
push
mov
dec
scas
dec
cli
pop
mov
jnp
stc
stos
stos
cwtl
cmc
aaa
mov
into
out
mov
pushf
xchg
inc
sbb
xchg
xlat
mov
push
call
test
pushf
incl
xor
pop
cmc
xchg
scas
ds
cmp
and
pop
and
pop
ret
xchg
shr
testb
mov
and
add
jae
into
jb
mov
push
repz
pusha
repz
imul
aam
xor
test
fwait
xor
scas
bound
clc
cmp
push
sub
mov
mov
out
sbb
xor
lock
pop
xchg
movsl
sbb
push
lods
cmc
mov
xor
dec
fs
mov
mov
jge
pop
adc
ljmp
pop
dec
sbb
pop
das
jnp
xchg
outsl
cmp
mov
lods
repnz
and
insl
movsl
neg
imul
mov
shl
or
mov
mov
push
js
in
mov
pushf
loop
add
xor
int3
mov
jl
mov
xor
out
hlt
xor
push
pop
adc
leave
sahf
shrl
cmp
jge
lahf
arpl
jb
ds
or
and
inc
add
movsl
pop
mov
or
or
add
or
outsb
lahf
jns
cmpsb
sbb
icebp
adc
push
gs
sbb
jb
cmp
cmc
aam
or
xchg
mov
xchg
stos
xlat
sub
hlt
sbb
cltd
push
cmc
shll
mul
outsb
pushl
or
insl
daa
or
shrb
fisubrl
dec
sub
in
cmp
ficompl
pop
or
fs
cld
xor
cwtl
icebp
add
xor
xor
cmc
jle
movsb
pop
mov
pop
cmp
adc
pusha
mov
sub
movsl
enter
sbb
mov
xchg
mov
push
jne
push
ja
xchg
push
xor
daa
mov
sbb
mov
call
xor
aam
jns
mov
fildll
cld
sbb
and
ss
into
lock
xchg
ja
fistl
xor
pop
sub
lahf
das
sub
push
out
xor
push
lds
dec
int3
jge,pt
push
push
ljmp
sub
dec
jmp
stos
dec
clc
mov
lods
jae
jecxz
push
xor
cmc
add
sbb
cmpsb
je
mov
loop
into
in
mov
int
xchg
mov
inc
mov
test
sbb
lea
pusha
sbb
daa
hlt
addl
iret
in
aad
dec
xchg
out
jno
ret
add
insl
sbb
insb
std
pop
and
jle
inc
mov
imul
mov
int
in
sub
pop
sbb
jae
mov
mov
rcrb
mov
hlt
sbb
dec
stos
bound
out
push
pop
add
fdivrl
mov
fs
adc
jo
cmp
add
pop
dec
stos
sbb
pop
lret
sub
popf
sbb
jp
pop
sub
jo
cli
jge
aas
ljmp
mov
popf
lret
push
xchg
mov
add
fcomps
stos
push
ret
jp
rolb
push
sahf
sub
clc
inc
pop
xor
pop
into
xor
std
and
add
xlat
xchg
arpl
jns
je
aas
mov
dec
loope
mov
lret
ficoms
lea
jbe
mov
fidivs
sbb
stos
pop
and
mov
mov
jno
dec
fldt
xchg
out
pop
div
sub
loopne
mov
hlt
cmpsl
jo
cwtl
mov
int3
jl
addr16
xlat
jb
rcrl
mov
sti
mov
test
mov
es
stos
enter
push
push
push
cltd
xchg
out
xchg
inc
lret
cmp
insb
repz
inc
iret
shr
lahf
pop
dec
cmp
out
aaa
icebp
popf
test
mov
hlt
test
pause
fldt
addr16
ret
sbb
imul
stos
aas
lea
mov
roll
repz
std
ret
sub
xor
adc
fbld
cmp
les
lahf
jae
mov
sub
xchg
jne
aas
lock
sub
xchg
aas
icebp
dec
hlt
lds
mov
repz
and
cli
xchg
and
and
or
cmp
xor
leave
call
and
mov
scas
lods
jno
or
pop
or
es
cmp
xchg
jo
push
sub
popa
cmpsb
aad
stc
shrb
lods
xchg
mov
pop
inc
sub
mov
inc
in
xchg
clc
test
filds
cmp
fiadds
je
mov
pop
sbb
mov
xor
and
push
cmp
sbb
data16
test
dec
lret
or
pop
imul
outsb
out
lret
adc
and
adc
inc
mov
push
jmp
popf
and
shr
mov
inc
mov
or
int3
inc
imul
push
xchg
sub
sbb
push
scas
and
cmp
jno
incl
xchg
xor
sub
sub
mov
mov
pusha
jecxz
cli
dec
sub
hlt
dec
insb
iret
fistpll
out
and
int3
lea
daa
mov
das
sub
rolb
int3
fstl
ja
rcll
mov
mov
sbb
dec
and
shll
mov
rcrb
add
cmpl
insb
push
in
or
daa
xchg
int
xchg
sahf
in
test
xor
fdivrl
arpl
addr16
push
jb
add
mov
negb
repnz
mov
mov
lret
push
cli
jnp
pop
jo
jmp
jge
jp
jns
inc
xor
xor
nop
xor
int
imul
fimull
jne
das
pusha
clc
insl
jg
ficomps
mov
pop
push
jecxz
sub
into
pop
push
cmc
xor
movsb
dec
lods
repz
clc
push
and
lods
dec
xor
adc
add
push
and
dec
inc
sahf
jmp
xor
ljmp
push
jge
jecxz
cmc
in
and
pop
std
adc
xor
jle
and
lds
jae
xor
inc
add
adc
rcrb
negb
fldl
pushf
and
aam
fcompl
lret
jo
add
mov
mov
into
cmp
pop
mov
mov
ljmp
inc
aam
divb
xchg
ss
mov
xor
dec
pop
sbb
loope
push
xchg
jp
clc
outsb
dec
xchg
loop
incb
pop
data16
ss
xchg
xor
sar
imul
test
pushf
loope
cmp
int3
xchg
add
sub
movsl
aad
in
xor
in
push
add
mov
loopne
fst
cltd
aaa
aad
pop
out
lahf
pop
xlat
mov
mov
scas
icebp
rcrb
int
add
out
nop
cmp
and
adc
add
lock
xor
into
pop
in
mov
es
outsb
loop
int3
inc
daa
sub
into
lods
lea
sub
popa
inc
dec
mov
test
jecxz
movsl
xor
imul
pop
inc
scas
dec
negl
mov
jns
cmp
repnz
cmp
mov
push
shrl
inc
test
xchg
push
lods
mov
or
cmp
stos
in
inc
aam
push
in
and
xor
rcrl
popa
jmp
lods
adc
adc
movsl
push
imul
icebp
sbb
sbbl
out
data16
roll
fwait
cli
push
scas
out
xor
addl
movsb
scas
jne
clc
pop
jmp
andb
push
pop
xchg
into
arpl
nop
inc
dec
das
out
mov
or
fwait
dec
pop
leave
jp
lods
filds
xchg
test
adc
pop
xor
out
arpl
cmpsl
jecxz
inc
pop
int3
loopne
mov
push
adc
or
jmp
sub
adc
jle
cmc
push
mov
xlat
xorb
in
popf
clc
push
imul
aas
arpl
out
jnp
stos
or
shlb
neg
cli
sub
cmp
xor
mov
jbe
cmp
xorb
push
or
fcmovnu
push
pop
stos
mov
nop
sub
cmp
test
pop
into
icebp
mov
sub
test
mov
cmpsb
rolb
jp
fidivrl
sbb
add
mov
add
icebp
mov
test
mov
movsb
and
insb
add
xorl
pop
stos
and
outsl
ja
je
mov
int3
cmove
andl
dec
test
pop
mov
add
mov
pop
adc
pop
cmpsl
test
inc
fs
sbb
and
ficoml
lret
xchg
push
jle
push
and
mov
mov
and
mov
mov
imul
jp
mov
gs
lea
xchg
popf
add
lahf
jo
dec
repnz
pop
jle
in
pusha
stc
mov
adcb
pusha
test
ret
aas
pop
sti
iret
mov
shrl
mov
jp
cli
scas
jnp
mov
mov
ret
jae
outsb
or
add
adc
cld
shrl
into
lds
adc
xchg
adc
jmp
mov
jp
ljmp
pusha
std
mov
rcrl
movsl
pop
fmuls
faddl
dec
pop
int3
cmpl
orl
xor
sbb
xor
stos
mov
sbb
nop
ljmp
sahf
test
lods
cmp
mov
cli
inc
iret
jmp
pop
rolb
aad
pusha
or
add
outsl
sub
add
fistpl
dec
hlt
iret
push
push
cmp
xchg
adc
fcompl
xor
aad
and
out
fldl
insl
xor
js
mov
mov
movb
mov
js
mov
inc
dec
add
push
inc
cmp
jno
and
cwtl
pop
ret
pusha
xor
and
rorl
add
xchg
rcrl
and
popa
jbe
sbbb
ret
and
adc
push
int
sbb
mov
jge
test
cli
sub
testl
je
inc
ret
xor
xchg
out
sbb
push
jmp
xchg
test
negb
cmpsl
adc
cmp
push
push
adc
pop
pop
dec
aaa
aad
fucom
std
sbb
imulb
test
inc
arpl
aaa
jno
roll
loope
xchg
or
mov
std
sub
lock
mov
xor
xor
testl
cmp
push
add
add
aaa
dec
mov
ficoms
mov
scas
mov
cmpsb
add
mov
pushf
cs
js
jmp
pop
fistps
stos
repz
mov
lock
push
lret
mov
subb
stos
stc
popa
pop
xchg
xor
jg
inc
and
in
lcall
lods
rcll
pusha
adc
test
cmc
inc
xor
imul
inc
inc
jbe
rorb
in
into
clc
adc
fwait
mov
adcl
fwait
push
ret
jmp
cwtl
mov
push
sbb
xchg
jecxz
cli
enter
inc
notb
movsb
cmpb
ror
push
xor
sbb
sbb
xor
pop
jg
imul
xor
push
ret
and
or
dec
push
es
loopne
enter
mov
lods
ds
mov
insb
ret
pop
mov
and
fidivrl
xchg
mov
add
stc
es
cs
jo
inc
cld
pop
adc
push
inc
xor
ss
push
test
dec
mov
out
bound
clc
cmc
shl
bnd
add
xchg
mov
xor
sbb
xchg
lret
out
fcomp
mov
cwtl
push
nop
sbb
scas
xor
roll
sub
loopne
inc
inc
fldenv
out
dec
jo
and
and
jno
xchg
imul
out
fildll
adc
mov
or
mov
out
insb
jmp
dec
xchg
jne
int3
ljmp
xchg
dec
stos
sub
in
adc
cmp
mov
jbe
ret
adc
test
mov
ds
iret
bnd
xchg
inc
scas
dec
jno
pushf
mov
std
mov
push
outsb
imul
add
pop
fnsave
sarb
push
ja
push
xor
repnz
mov
sbb
lcall
add
data16
stos
outsb
mov
jecxz
cmp
test
cmp
loop
adcb
icebp
or
test
inc
test
push
sbb
mov
imul
ret
xor
adc
dec
or
mov
mov
push
xchg
or
push
and
sarb
out
pushf
jecxz
enter
cmp
testl
and
fdivs
jp
dec
aas
insb
inc
sbb
arpl
jecxz
push
sub
and
sbb
sub
mov
sahf
cmp
cmp
xor
inc
lret
call
add
fnsave
dec
jmp
push
loopne
std
mov
inc
js
mov
push
jg
and
jl
pop
sti
mov
imul
mov
ret
adc
lods
popf
in
jge
xchg
insl
sti
enter
xchg
ljmp
cmp
js
dec
out
andl
inc
cmp
xchg
xchg
xor
loope
and
ljmp
out
mov
enter
mov
divl
inc
mov
aam
push
adc
sbb
pop
inc
adc
fcoms
fsubr
cmc
mov
rorl
stos
aam
jae
mov
cmpsb
sar
mov
icebp
adc
and
xchg
xor
rolb
push
ret
outsb
aam
fisttpl
sbb
cs
les
push
hlt
pop
pop
lods
dec
scas
or
xor
nop
mov
xchg
and
mov
arpl
mov
aam
xchg
ja
ss
jg
imul
dec
leave
sub
xor
mov
mov
into
push
or
and
rorb
cmc
and
inc
dec
and
repnz
jne
adc
sbbl
push
insl
mov
in
div
push
ror
outsl
cmp
pop
out
rclb
lea
adc
or
cs
cmpsl
cmc
icebp
jmp
ljmp
adc
int3
xlat
data16
sahf
pop
jae
lret
aam
xor
leave
ret
loopne
inc
push
lods
pusha
dec
je
insb
std
mov
js
hlt
xorl
inc
and
fmulp
mov
cmpsl
divl
cltd
lcall
pop
fidivs
or
or
xor
shll
ret
adc
mov
pop
fldl
push
aad
jl
sbb
jno
jae
mov
lock
sub
out
jno
rorb
fwait
mov
pusha
push
and
mov
dec
inc
adc
dec
push
mov
mov
xchg
es
jns
mov
outsl
test
jb
enter
icebp
repnz
or
or
xor
mov
push
push
cmp
aad
mov
dec
and
jno
mov
repnz
incl
jl
adc
cmp
out
sbb
lods
arpl
dec
push
pop
cwtl
divb
pop
add
or
mov
imul
push
cmp
jle
push
pop
jnp
lcall
push
repnz
ret
fsts
push
and
push
push
outsl
pop
jmp
xor
outsb
es
sub
push
enter
mov
mov
adc
xor
lods
shlb
jb
lret
xor
push
outsb
xchg
lea
test
mov
mov
cmpl
adc
fcomps
cltd
and
or
pop
mov
in
cmp
test
add
mov
jmp
call
scas
into
fisttps
cmp
mov
int
or
dec
or
shlb
add
pop
clc
psllq
sub
fs
je
mov
sbb
or
xchg
mov
mov
aas
add
add
mov
cwtl
pop
or
mov
inc
adc
leave
movsb
or
movsb
scas
clc
mov
sbb
xor
lea
rcl
mov
push
xchg
ret
shlb
fsubl
orl
sub
xor
mov
rcr
rcl
setp
ret
pop
repnz
or
cmp
aaa
ror
jae
jnp
in
push
daa
mull
int
lock
jns
mov
push
pop
in
push
popa
mov
xchg
push
test
or
push
push
lds
adc
add
push
inc
es
adc
js
mov
rorb
ja
and
mov
sub
js
loop
inc
dec
inc
das
add
adc
sub
je
fneni(8087
dec
ss
mov
sbb
xchg
fimull
pusha
cmpsl
popa
mov
or
neg
pushf
jb
fisttpll
push
cmp
sbb
inc
std
out
push
popf
punpckhwd
or
stos
mov
dec
sahf
sbbl
adc
sub
cmp
decl
popf
cmp
dec
daa
cmc
mov
mov
stos
inc
pop
dec
sub
rcr
rdtsc
dec
std
adcl
ss
scas
lahf
test
inc
mov
jae
jno
xorb
mov
scas
mov
sub
out
sub
out
in
sub
push
aam
jnp
mov
into
movsl
mov
mov
ficomps
adcl
or
fsubs
add
mov
mov
mov
add
hlt
or
lret
shlb
pop
xchg
xor
xlat
outsl
repz
clc
sub
rcl
xor
jp
je
xor
mov
mov
int
add
xchg
mov
mov
or
cltd
mov
lods
sub
adc
out
stos
adc
les
popa
or
cld
and
add
pop
mov
mov
arpl
outsb
add
call
mov
filds
sbb
xor
jo
fidivs
adc
and
fucom
cmpsl
in
push
add
daa
jmp
and
or
jl
inc
mov
cs
rcrb
pop
outsb
adc
mov
mov
push
aam
and
jne
cmp
retw
lahf
lret
int
mov
in
loopne
xor
and
clc
pusha
hlt
dec
ficoml
jnp
dec
sbb
in
test
int
repnz
movsl
xor
mov
mov
scas
test
scas
cli
adc
cmpsl
xchg
sub
sub
pop
and
int3
push
lods
sahf
and
dec
adc
andb
jne
xchg
lret
pop
shll
pop
ret
test
out
jmp
pop
out
mov
data16
xchg
popf
imul
nop
pop
push
inc
mov
loop
out
adc
push
aam
and
inc
lock
mov
es
xchg
xor
jns
fnstsw
pop
in
jmp
or
popf
movaps
jnp
fdivs
pop
mov
dec
xor
adcb
ret
or
out
js
sub
fadd
mov
cmpsb
test
mov
rcll
mov
lods
adc
mov
mov
jnp
iret
stos
clc
sti
jg
mov
mov
push
pop
repz
or
addl
mov
mov
mov
mov
pop
jae
push
sti
mov
loop
jno
bound
daa
loop
jno
mov
negb
sbb
out
mov
fimuls
push
popf
push
dec
call
xor
repnz
mov
aam
mov
pushf
lcall
lock
push
ficoms
xchg
outsl
bound
test
jmp
sbb
out
sbb
lods
pop
shll
inc
fists
add
adc
outsb
mov
aam
add
subl
mov
mov
movl
mov
gs
sbb
mov
fnstsw
out
adc
mov
cmpsl
push
mov
fsubr
dec
mov
lret
add
test
js
lahf
rorb
jl
into
or
xor
int
outsl
jmp
xchg
or
push
pop
rcrb
push
stos
data16
ret
or
mov
xor
icebp
pop
fists
inc
inc
cmpsl
movsl
shrb
bound
fcoml
mov
sti
pop
fstpl
sbb
inc
xchg
sarl
adc
sbb
inc
nop
pop
add
scas
insl
sbb
jb
lsl
ss
lods
int
into
andl
add
orps
pmaxub
popa
dec
pop
fs
sub
add
jae
push
pop
adc
pusha
daa
lret
xor
aad
ljmp
jecxz
out
add
dec
stos
or
and
shlb
pop
fistl
xor
add
xchg
ret
scas
add
pop
int3
or
in
pushf
loope
jbe
or
out
fwait
mov
dec
xchg
pop
sbb
cltd
xor
ficoml
mov
adc
jecxz
aad
mov
mov
mov
cmpl
mov
mov
in
ds
adc
inc
cld
faddl
pop
cmc
xchg
lea
imul
inc
add
jb
or
xchg
add
fnstenv
xchg
sub
cmc
mov
dec
jge
jne
sahf
popa
add
push
adc
movlps
pop
push
popf
push
or
je
xor
sub
jp
mov
fwait
pop
mov
bound
arpl
iret
mov
loopne
mov
ret
jnp
mov
rcl
push
adc
es
out
leave
mov
xor
iret
inc
xchg
nop
imul
push
fdivrp
movsb
sbb
sbb
out
dec
cmpsb
inc
or
fcompl
pushf
mov
pop
sub
inc
in
jo
push
xor
push
push
leave
mov
andb
decb
and
sub
pop
push
lods
and
mov
or
es
adc
test
push
andl
fstpl
testb
addb
nop
scas
jne
jo
in
inc
fldt
push
dec
outsb
jno
cmpsb
or
add
gs
movsb
cmp
nop
xor
mov
ficomps
pop
add
mov
mov
and
pop
mov
xchg
mov
push
inc
push
jg
push
test
out
test
mov
je
fwait
aas
iret
mov
dec
iret
das
in
in
push
cltd
adc
sbb
fucom
mov
sahf
push
inc
in
cmp
jae
addb
dec
inc
cmpb
shlb
ret
lock
imul
sahf
addl
fisubrl
imul
imul
add
daa
movsb
xchg
rorl
xor
add
rcrl
sub
ds
or
mov
fsub
mov
inc
pop
mov
pushf
ja
and
xchg
cmp
pop
cmpsl
jbe
push
shr
or
subl
nop
adc
jno
mov
iret
es
fiadds
mov
mov
in
cmp
sbb
insb
je
and
repz
and
cmp
popf
mov
cmp
xchg
xor
stos
add
cltd
dec
cmp
fsub
adc
push
sub
jl
into
pop
sti
ficoml
pop
inc
cmc
xchg
push
inc
lahf
jg
add
pop
mov
push
add
lock
mov
sbb
lock
sub
popf
inc
nop
add
adc
test
into
out
in
enter
mov
push
fnstsw
fwait
or
js
addr16
rcrl
outsl
inc
cmp
subl
xrelease
dec
jae
lret
sub
xchg
cmc
jnp
iret
push
adc
call
xlat
and
xchg
test
out
add
ret
out
outsl
sub
popa
push
sub
pop
mov
enter
ret
loopne
cmp
sbb
loopne
pop
lcall
insl
repnz
dec
add
dec
pop
adc
stos
rcr
stos
jge
dec
xor
lea
lret
inc
inc
cmp
xor
dec
in
inc
sbbl
subb
xchg
repz
dec
pop
out
lods
or
push
jbe
pop
sub
mov
cmp
jg
repz
insb
orl
push
out
sbb
jno
lcall
and
pop
rcrb
push
cld
in
outsb
sbb
aad
pop
popf
xchg
enter
inc
das
mov
fistpl
jbe
adc
je
push
adc
mov
dec
sub
lahf
mov
mov
out
adc
out
aaa
cli
xchg
cs
loop
xchg
je
dec
std
pop
sub
jl
and
inc
and
adc
xor
jecxz
mov
iret
lahf
gs
pusha
out
push
movl
cs
xlat
lret
or
xor
ds
rorl
loop
gs
or
jmp
stos
mov
xor
es
mov
cmp
test
sbb
notl
repz
popf
arpl
outsl
xor
ret
popw
push
sbb
pop
cmp
in
dec
mov
sbb
in
icebp
xor
cmpsl
aam
xchg
je
inc
les
int
adc
jns
cmp
jae
loopne
jge
mov
jmp
fwait
in
ficompl
inc
lcall
ss
nop
sub
out
jmp
mov
movsl
out
stos
lds
sub
in
dec
fwait
push
cmc
daa
inc
add
adc
xchg
inc
pop
sarl
imul
add
mov
push
incl
add
add
xor
fdivp
xlat
add
inc
inc
shrb
mov
in
repz
enter
xor
stos
movsl
jmp
push
cli
push
push
push
outsb
pop
push
add
iret
push
adc
mov
jmp
popf
push
and
fcmovbe
dec
lret
inc
shlb
sub
enter
mov
icebp
jo
loopne,pt
lods
pop
mov
in
mov
sahf
mov
icebp
xor
inc
shrb
pop
fsubs
mov
filds
or
cmp
bound
dec
ljmp
jne
mov
testl
jno
je
push
mov
mov
test
xchg
pop
adc
and
test
outsl
cmpsl
popl
or
or
xchg
pop
xchg
cmpsb
test
or
xchg
sahf
sub
dec
mov
sti
das
or
mov
xor
add
mov
jnp
outsl
xor
sbb
insb
lret
fs
pop
sahf
repnz
gs
push
data16
xor
jb
mov
jg
ljmp
pushw
xor
jb
dec
cmpsb
das
mov
mov
out
mov
or
enter
lods
insb
roll
jmp
popa
cmp
imul
xchg
mov
sub
lcall
cmpsl
add
lahf
jne
hlt
movb
fcoml
and
outsl
loopne
xchg
mov
mov
xor
push
mov
pop
pop
push
popa
lods
dec
xor
cmp
mov
sbb
into
and
xchg
fs
mov
sbb
push
dec
pop
lods
ljmp
mov
cwtl
push
sbb
pop
jecxz
test
sub
fwait
mov
dec
aam
and
jle
xchg
push
xlat
jns
push
jg
cld
mov
aaa
sub
xor
mov
inc
jb
stc
xor
xlat
testl
les
fistpl
mov
pop
pop
call
punpckhwd
sub
js
jo
aas
add
push
sbb
mov
mov
imul
lret
sbb
outsl
lds
loopne
lock
int
dec
dec
in
sti
add
sub
sbb
ret
shlb
fstps
fwait
mov
insb
xor
sarb
adc
jae
and
fcmovne
cwtl
shl
jno
push
inc
das
test
inc
inc
in
mov
sahf
call
xchg
imul
aad
fnstcw
sbb
data16
stos
das
sti
fidivl
movsl
stos
icebp
jb
pop
repz
call
fcompl
fldcw
incl
out
imul
gs
psubusw
add
iret
leave
leave
mov
add
sub
es
or
jg
mov
aam
lcall
pop
lret
sub
mov
andb
cmp
add
adc
insl
gs
dec
std
jb
movl
inc
cld
int3
outsl
sub
gs
inc
je
inc
inc
push
sbbl
imul
icebp
mov
sahf
adc
push
aam
dec
arpl
stc
jae
push
pop
pop
jno
lret
pop
sub
in
fmull
cmp
mov
add
xor
cltd
xchg
xor
pop
xor
cmpsl
jne
loopne
fwait
sub
sub
hlt
ret
icebp
sti
aaa
mov
mov
dec
pop
and
xlat
dec
mov
enter
jnp
imul
push
lahf
inc
inc
addr16
xchg
mov
fists
sbb
neg
pop
pop
fdivrl
mov
pop
cmc
cli
lret
inc
cmpsb
fdecstp
in
aas
mov
pop
iret
push
sbb
fstl
imul
pop
xor
inc
sub
ret
pop
inc
mov
and
inc
jae
je
in
mov
call
ret
jle
fwait
push
add
jbe
outsl
push
cli
mov
pop
fs
pushf
sub
idivb
or
cmp
pop
orl
adc
mov
les
mov
adc
lds
dec
loop
hlt
sbb
repnz
adc
and
pop
inc
mov
into
jns
and
cmp
aaa
add
mov
jecxz
fsts
arpl
and
out
dec
push
lret
popa
out
cmpsl
pop
cmp
scas
sbb
xor
inc
xchg
dec
roll
lahf
and
push
cmp
xchg
or
stos
sub
cmpsl
mov
das
fiaddl
xchg
mov
pushf
mov
dec
xchg
pop
adc
aad
mov
enter
call
loope
cltd
fldcw
jno
arpl
mov
inc
imulb
clc
mov
add
and
mov
push
xchg
dec
sbb
mov
dec
dec
hlt
aad
cmc
mov
aaa
enter
dec
push
and
sbb
and
mov
sahf
aas
dec
cwtl
push
inc
push
lahf
jge
pushf
mov
mov
test
push
ss
dec
mov
push
push
test
mov
popf
arpl
outsl
in
jno
fwait
scas
mov
push
testb
jp
xchg
stos
sub
dec
pop
sub
ljmp
fstps
jge
lret
cltd
sbb
rclb
dec
dec
test
popf
test
adc
sbb
js
outsb
mov
sub
jnp
jne
nop
enter
mov
xchg
mov
movsb
fnsave
xchg
inc
out
js
inc
ds
xchg
sti
inc
cmp
or
push
xchg
cld
mov
pop
cmp
add
sbb
loopne
add
xchg
inc
lret
jp
jnp
add
sahf
mov
and
push
enter
aad
in
in
jle
push
mov
jno
lods
iret
pop
outsb
inc
mov
test
xchg
inc
paddsb
lods
sub
xchg
outsl
int
lods
add
xchg
test
and
int3
pop
insb
stc
mov
mov
addr16
xchg
sarl
cmc
test
inc
mov
call
pop
mov
mov
repz
mov
popa
pushl
sti
lcall
push
pop
pop
aaa
shll
mov
pop
lds
pop
add
pop
dec
sub
hlt
push
fldt
lret
add
add
loopne
mov
je
push
loope
fsts
es
inc
lods
adc
mov
fisttpl
adc
push
pop
daa
into
scas
pop
outsb
adcl
sbb
fdivp
std
mov
ret
les
shrb
adc
rcl
pop
cltd
mov
orl
divl
in
insl
mov
cmp
sbb
outsl
or
mov
dec
xor
outsl
loop
insb
lock
faddl
fwait
adc
jae
stc
adc
sub
mov
ja
imul
rolb
jp
jmp
std
add
pop
sub
xchg
xchg
cmp
dec
outsl
xor
and
sbb
movsl
mov
mov
rcr
scas
xor
imulb
mov
jnp
sub
cmpsb
mov
mov
mov
push
movsl
sbb
out
push
cmp
data16
nop
inc
ja
lods
testl
ret
jb
es
aas
cmc
daa
ret
lods
jns
gs
imul
leave
sbb
scas
add
out
fisttps
mov
jbe
push
push
rorl
mov
and
xor
mov
cs
push
xchg
imul
adc
aas
fcom
mov
inc
pop
movsb
out
fisubrl
cs
je
mov
dec
mov
mov
bound
cmp
jns
jbe
das
loopne
mov
imul
ret
or
in
mov
dec
add
mov
stc
push
mov
pop
leave
pushf
mov
stos
enter
fsubl
adc
push
insb
mov
jecxz
bound
xlat
mov
lret
shl
iret
das
jno
ja
mov
mov
aad
cmp
mov
sahf
shr
mov
xor
add
shll
mov
and
pop
outsl
pop
inc
fistl
arpl
fistpll
xor
or
xor
cmp
xchg
das
xchg
push
andb
or
stos
adc
push
pusha
and
and
adc
js
add
cli
push
and
inc
push
mov
rcll
ja
addb
jnp
scas
jl
inc
lcall
mov
lock
fcomps
icebp
lea
aam
pop
add
loope
sub
sbb
les
sbb
jbe
pop
push
adc
repnz
dec
push
test
pop
daa
iret
stos
push
jp
insb
das
mov
mov
test
imul
insb
xchg
xor
lods
shlb
cmp
movsb
push
enter
stos
aad
jge
push
stc
jg
xor
dec
push
lods
mov
mov
xor
sarb
outsb
sub
loop
add
mov
stc
movsl
xchg
mov
sub
mov
mov
mov
cwtl
sarl
sbb
add
lret
adc
repnz
hlt
push
addb
hlt
inc
jmp
js
scas
je
je
ds
push
daa
adc
mov
xchg
or
cld
mov
add
push
mov
xchg
pop
lods
xchg
cwtl
dec
sbb
inc
stos
adc
or
cmp
in
test
fidivrl
jno
mov
mov
push
inc
jno
into
or
add
addr16
and
jmp
enter
xlat
gs
fs
lods
push
outsb
stos
movsl
mov
lock
mov
jmp
inc
mov
sbb
in
fidivrs
pusha
cmp
testb
ja
into
les
sarl
cwtl
lcall
mov
or
roll
or
mov
add
inc
mov
leave
xlat
repnz
or
sub
pop
ljmp
test
xlat
xchg
adc
adc
sbb
xchg
insl
push
xchg
movsb
test
xchg
mov
enter
sub
mov
adc
pushf
mov
mov
pop
or
mov
in
jge
inc
dec
mov
adc
pusha
je
stc
xlat
jno
dec
ret
lahf
and
fcompl
sti
imulb
jge
adc
push
rcrl
sub
fs
pushf
xchg
sub
push
or
insl
testb
sahf
mov
addb
loope
shll
imul
mov
lods
mov
std
mov
cwtl
lret
pop
pop
ds
or
out
cltd
and
xor
stos
jecxz
push
push
cmp
js
in
ja
mov
test
jmp
scas
and
jns
sub
inc
pop
lret
mov
lahf
xor
sbb
jne
sbb
jmp
mov
jl
xlat
mov
sarl
sbbb
sbb
lds
jbe
test
xor
aas
mov
fisttpll
ja
xor
cs
insb
pop
pushf
mov
mov
std
mov
lret
and
mov
push
cmpsl
and
cltd
call
xlat
cld
add
mov
cmpsl
adcl
pop
lcall
inc
jne
mov
outsl
das
mov
es
sarl
test
jo
in
pop
sub
sub
and
pop
adc
enter
push
lret
push
pushf
jo
in
mov
test
jle
push
test
pop
idivb
push
and
jne
into
pop
pop
imul
andb
call
sti
in
jo
fldl
mov
jmp
shlb
in
testl
rorl
adc
and
sarl
sub
cmc
mov
leave
mov
sti
and
cli
mov
xchg
push
cld
jne
xchg
mov
cld
orb
push
popa
pop
pop
mov
in
clc
mov
pop
sub
les
jne
aad
daa
inc
push
sub
data16
push
mov
into
mov
push
xchg
xlat
push
jbe
or
insb
push
adc
jnp
fdivrs
in
imul
pop
xchg
xchg
pop
xchg
sub
mov
xorl
outsb
mov
or
cwtl
mov
or
xchg
je
xchg
scas
rol
lods
jo
clc
movb
ljmp
insl
out
or
leave
inc
adc
push
adc
je
outsl
lahf
xchg
pusha
nop
pop
ss
mov
pushf
fidivl
push
aas
stos
sbb
stos
mov
inc
jae
iret
jo
and
xor
ret
out
roll
jp
insb
pop
sti
xchg
jbe
cmp
xor
mov
inc
jge
xor
sbb
and
mov
sub
mov
in
pop
notl
pop
mov
stos
jo
dec
cmp
out
pop
cwtl
dec
jp
xlat
pushf
xchg
cmp
fsubrl
xchg
lock
pop
cmpsb
test
or
cmc
jp
loopne
sti
fbld
mov
cwtl
in
aaa
push
cmp
rcrb
xor
fisubs
mov
dec
outsb
nop
loope
dec
dec
sbbb
shl
in
push
jge
pop
mov
xchg
mov
test
sbb
lods
shll
xchg
lods
and
jne
inc
inc
dec
fsts
dec
add
and
js
mov
mov
cmp
and
xlat
xchg
or
xlat
and
ljmp
sbb
pop
mov
nop
out
mov
jl
mov
call
jb
stos
push
cmc
jbe
jns
movsb
shl
add
inc
fstpt
pop
push
pop
pop
sbb
data16
popl
sbb
mov
icebp
mov
cmp
mov
lret
mov
xlat
popa
pop
jmp
push
push
inc
fists
shrb
mov
lea
cli
call
jno
lret
dec
incl
mov
push
iret
cmp
pop
pusha
stos
jle
lret
xchg
xchg
jg
scas
arpl
mov
jns
cmp
pushf
sbb
sbb
add
fadds
orb
fcomps
pop
push
movsl
xchg
cmp
mov
push
push
ss
push
jo
test
mov
fisttpl
and
and
or
int
xor
or
pop
inc
stc
out
lret
jns
jno
scas
outsl
ret
add
enter
popa
pop
adc
dec
iret
test
icebp
jno
mov
fnstsw
pop
out
in
sub
cmp
inc
int
inc
imul
test
pop
sub
mov
pop
gs
ret
mov
push
push
cli
mov
adc
fdiv
dec
jno
dec
nop
cmp
adc
pop
xchg
dec
mov
sbb
xchg
xor
es
mov
in
out
mov
dec
adc
jecxz
scas
xor
lea
mov
repnz
pop
push
lahf
ds
pushaw
in
scas
jno
dec
andb
mov
lods
xchg
mov
inc
idivb
hlt
popf
mov
add
add
lods
jo
jmp
fwait
icebp
enter
imul
jbe
cwtl
mov
std
cmpsb
inc
aad
mov
jae
pop
and
push
sbb
shlb
sub
jb
pop
rcll
int
or
xchg
xor
scas
cs
mov
fsubl
jmp
inc
push
int3
jns
push
xor
xor
adc
or
idivb
sahf
sub
push
jb
jp
sti
inc
mov
ror
repz
shll
je
lret
incl
insl
cmp
push
lahf
xor
fsubrl
pop
movsl
js
add
idivb
jbe
in
pop
sub
dec
shlb
dec
pop
fdivrs
jecxz
ret
cmpsb
iret
mov
xchg
xchg
xchg
jb
sbb
add
lock
pop
push
xor
dec
loopne
repz
mov
sbb
sub
sbb
dec
push
test
or
sbb
dec
loopne
ret
test
pop
fists
jns
xchg
pop
jbe
aas
mov
jns
pop
sub
inc
mov
xchg
or
xchg
orb
stc
rol
add
les
bound
jno
lods
sbb
pop
dec
or
das
stos
inc
stos
outsb
sub
add
cmp
stos
in
mulb
push
mov
sbb
or
adc
mov
mov
jecxz
xchg
daa
jo
outsb
frstor
loope
add
int3
insb
lcall
jns
popf
shl
pop
imul
adc
mov
mov
mov
repz
stc
pop
mov
cmp
lret
fwait
pop
jle
and
sbb
adc
mov
and
scas
mov
arpl
jns
pop
xor
callw
push
adc
arpl
jmp
mov
jp
mov
mov
jmp
je
loopne
clc
jmp
cmp
push
mov
mov
xchg
add
xchg
lea
mov
aas
imul
mov
lods
mov
enter
or
pop
dec
inc
mov
mov
es
jecxz
inc
cwtl
mov
iret
adc
or
es
sbb
cwtl
mov
cmpsl
dec
stc
fsub
adc
fcomps
sub
test
filds
cmp
scas
insl
and
pop
scas
adc
pushf
nop
aas
movsl
pop
lret
bound
xchg
sub
popf
mov
gs
ljmp
push
sbb
shrl
mov
mov
mov
ja
fwait
sbb
push
xchg
cmp
loopne
out
adc
pop
mov
add
mov
stos
xor
mov
or
shlb
push
in
pushl
inc
outsl
cwtl
adc
mov
sti
and
sbb
lahf
outsb
in
and
loop
sub
imul
enter
pushf
dec
xor
adc
dec
jo
sbb
jecxz
out
test
xchg
push
pop
dec
mov
nop
and
les
mov
inc
enter
sub
sbb
pop
movsl
out
inc
dec
pop
inc
sbb
adc
test
pop
insb
imul
das
xchg
xor
repz
aas
dec
xchg
xchg
push
push
adc
mov
cmp
ret
cltd
outsb
or
cmpsl
lcall
sbb
shrl
addr16
arpl
aad
aaa
and
add
jg
incl
popa
jl
add
in
les
in
ljmp
incb
add
jmp
sbb
or
inc
nop
push
loop
int3
cmp
xor
and
pop
aad
sub
sti
jl
add
lea
lock
rcrl
rolb
xchg
ret
rcll
mov
fistl
sub
jp
adc
adc
leave
jp
in
les
xchg
aas
and
pusha
xchg
add
movsl
or
pop
inc
jbe
pop
loope
cmp
je
inc
inc
mov
pop
call
push
fidivrs
jno
stc
icebp
jl
fiadds
cmp
aas
xchg
mov
lock
inc
dec
repnz
dec
int3
lds
dec
jp
and
gs
test
jmp
add
adc
call
push
inc
cmp
add
fadds
xchg
outsb
xor
mov
and
and
mov
jae
ljmp
jbe
das
movsb
cmp
push
shlb
xor
or
push
icebp
sti
popa
and
or
or
jae
aam
stos
and
loop
sub
popa
xchg
or
xchg
aaa
repnz
or
es
nop
icebp
pop
call
sbb
ds
in
ja
mov
inc
mov
jae
gs
pop
aam
add
add
or
jmp
dec
jns
lods
dec
or
xlat
aas
inc
cwtl
sbb
jno
outsl
loope
jge
cs
nop
test
lea
and
jns
adc
adc
mov
xchg
mov
push
or
dec
arpl
lret
scas
data16
sbb
test
ret
pop
and
add
aas
or
dec
in
das
cmp
hlt
jne
es
sbb
add
movsb
add
jmp
in
adc
int
mov
sub
testb
cmp
test
xorl
xor
jnp
cltd
aad
push
clc
stos
dec
sarb
paddusw
iret
and
mov
aas
js,pn
pop
jp
cltd
test
fidivrs
pushf
cmp
inc
jmp
xchg
mov
test
inc
movsb
xor
xchg
inc
xchg
mov
addr16
jbe
ds
movsb
in
dec
stos
push
mov
lock
jo
je
cs
fdivs
fsubs
ror
add
dec
stc
mov
xor
cmp
mov
fs
insl
std
and
or
push
xchg
adc
cmp
sahf
cmp
inc
movsl
std
xchg
sbb
gs
cmpsl
mov
push
push
push
icebp
es
lret
jecxz
mov
or
or
jl
xchg
mov
cwtl
sub
arpl
and
sbb
jmp
inc
pop
repz
lea
and
lret
jg
or
das
jecxz
inc
in
lret
mov
xlat
sbb
xchg
dec
mov
xor
ljmp
mov
push
push
jl
mov
xchg
xchg
ds
rcrl
test
xor
mov
addr16
fisttpl
icebp
add
jle
jb,pn
sub
sub
cmpsl
sub
iret
mov
push
xlat
imul
add
jecxz
push
inc
inc
inc
sub
sbb
pushf
mov
in
repnz
push
add
sbb
or
mov
dec
lret
jb
and
push
les
inc
aam
or
les
daa
lahf
mov
push
pop
sbb
loopne
dec
aas
push
and
loop
mov
adc
lret
mov
shl
mov
mov
ret
pop
outsl
push
mov
lea
lcall
in
loope
mov
xchg
popf
mov
clc
repz
push
mov
sub
cmp
push
adc
ret
push
imul
or
aam
sbb
sub
stc
stc
outsb
cmp
js
fs
fdivrs
push
ret
add
push
int3
mov
jmp
inc
out
and
inc
sbb
mov
rolb
jno
ret
aam
fcmovu
fcoml
xor
sub
mov
push
adc
pop
cmpw
push
xchg
sti
xor
adc
inc
outsb
lea
mov
push
lret
cmp
mov
or
clc
sbb
mov
adc
fs
pop
inc
arpl
jmp
jl
shlb
and
push
xor
loopne
or
jl
in
popa
cld
dec
mov
xor
push
push
adc
add
xor
jno
sbb
jl
gs
and
mov
orl
and
loopne
jbe
gs
popf
fcompl
fdivr
dec
cli
rcrb
lods
mov
sub
shll
in
hlt
into
enter
sub
xchg
xor
push
mov
add
loop
sbb
push
ljmp
jnp
imul
fildll
mov
jge
jl
dec
inc
push
outsb
jmp
rorb
lcall
shl
or
cmpl
test
lock
outsb
pop
jnp
pop
pop
js
out
sub
or
js
inc
inc
sub
out
adc
and
sub
sbb
popa
pop
add
movsl
xchg
divb
jge
pop
arpl
jns
in
sbb
mov
add
pop
cmp
jmp
enter
fldpi
mov
xchg
mov
test
mov
dec
lret
test
js
sub
aas
in
test
daa
aad
mov
cmc
xabort
cmp
js
inc
fistpll
je
jg
aad
js
popf
mov
fisttps
mov
pop
mov
lock
test
mov
fcompl
out
das
jne
test
inc
sub
pop
insl
or
add
mov
adc
mov
call
push
pushl
loopne
addr16
out
je
fisubrl
add
dec
movsl
and
inc
stos
loopne
out
out
movsb
popf
sbb
and
scas
mov
cmp
dec
arpl
sbb
inc
sbb
jge
pop
jae
xchg
bound
insb
imul
mov
inc
adc
fcompl
push
push
jo
lea
lods
out
faddl
movzbl
push
pushf
fs
sbb
insb
out
sbb
sub
cmp
and
sbb
in
mov
dec
sahf
test
adc
cmpsb
jmp
shl
xchg
mov
jle
adc
int3
jo
mov
jl
sub
or
rcl
int3
mov
jnp
jecxz
mov
pop
pop
aad
inc
call
imul
pop
mov
dec
mov
sub
lods
mov
pushf
aad
mov
daa
push
in
jnp
aad
out
sbb
scas
cld
push
dec
test
xor
pop
inc
push
sbb
xor
popa
push
cld
gs
cld
jns
repz
mov
out
ret
mov
adc
icebp
or
add
mov
xor
cmpsl
test
out
mov
flds
pop
sbb
push
or
jb
cmp
pop
mov
pop
mov
jl
inc
call
or
into
inc
cmc
push
mov
or
adc
adcl
add
pop
push
adc
mov
pop
mov
mov
pop
adc
xor
inc
xor
divb
sbb
aad
notl
xor
pushf
add
and
mov
inc
dec
imul
and
jecxz
fucomi
fists
cmp
jb
adc
sbb
jmp
sbb
lds
int
mov
bound
ficompl
push
iret
mov
jnp
sbb
cmp
inc
mov
lods
mov
add
dec
add
cmp
mov
jl
or
pop
sub
adc
aaa
cs
test
jl
sarb
xchg
or
lea
or
xchg
imul
sbb
inc
aam
mov
in
mov
scas
xor
int3
inc
out
inc
lcall
fcoms
sbb
stos
xchg
outsl
lret
fisttps
pop
aam
fwait
cmpsl
add
out
sbb
pop
scas
and
repnz
decl
jne
aaa
inc
inc
in
push
mov
iret
sbb
pop
xor
cmp
pop
sbb
mov
call
jb
xor
cmp
jmp
insl
pop
icebp
xor
adc
imull
mov
rcrb
inc
cli
aaa
hlt
adc
xchg
or
out
xchg
mov
sub
ds
test
leave
cmp
ss
shrb
test
mov
pop
jns
mov
and
cmpsl
jmp
xchg
add
sbb
sbb
sub
xchg
jo
or
dec
xchg
push
and
mov
inc
xor
mov
push
fsts
loop
jmp
ja
movsb
xchg
or
lret
mov
mov
mov
and
int3
lods
push
xor
xor
jb
in
fisubrs
js
and
aas
das
pusha
sbb
mov
popl
pop
sbb
push
or
fldenv
outsl
clc
jo
xchg
loop
in
dec
pop
fmull
fucomi
test
jge
dec
in
push
dec
aad
pop
xor
inc
mov
mov
hlt
cli
push
outsl
or
and
push
xchg
jl
sti
mov
jbe
pop
mov
enter
lock
mov
dec
sbbb
xor
mov
fadds
lcall
aas
push
adc
mov
xchg
sbb
pop
add
les
scas
pop
hlt
or
aam
fnsave
fwait
sbbl
cwtl
cwtl
sub
push
outsl
roll
sbb
iret
mov
fistpl
mov
xchg
fwait
pushf
push
idivb
movsl
cmp
sub
std
aaa
or
sub
out
into
xlat
jbe
out
rol
xchg
loope
gs
or
mov
cmp
pop
dec
push
icebp
std
adc
and
mov
jnp
iret
call
mov
cmp
fisubrs
push
xchg
dec
mov
mov
push
jecxz
inc
adc
add
js
sub
ss
xlat
cmp
lahf
repz
jl
bound
scas
and
stos
js
loop
stos
into
push
or
and
aaa
outsb
jae
push
lret
fistl
sub
jae
mov
dec
mov
enter
jae
push
jns
fsubl
and
mov
and
adc
jo
fldt
mov
adc
or
movsb
fidivrl
sbb
fistpll
mov
mov
cmp
imul
xlat
sub
xor
popf
mov
ret
xchg
jbe
pop
xor
pop
xchg
push
sbb
add
xor
or
lds
xchg
xchg
inc
cmpsb
stc
das
push
xchg
popa
pop
out
div
jae
rcrb
mov
mov
js
leave
dec
pop
rclb
rorl
fwait
sub
movsb
jb
or
add
mov
rclb
call
and
pop
cmp
mov
in
popf
ds
daa
addr16
cwtl
mov
aam
js
push
outsl
fdivl
pop
xchg
imul
xor
es
fst
into
out
out
xchg
cbtw
xchg
or
fimull
testb
mov
xchg
lret
jle
push
dec
mov
push
scas
addl
mov
enter
ljmp
xchg
mov
and
or
push
enter
movsb
pop
xchg
mov
jno
and
cmp
mov
mov
ret
mov
aam
and
clc
sahf
or
enter
ret
es
cltd
adc
nop
fistpll
and
loop
or
imul
push
mov
loopne
mov
mov
or
lods
mov
xchg
mov
jle
mov
xchg
fstps
adc
and
mov
lcall
inc
adc
inc
lds
inc
shlb
dec
xchg
mov
sbb
fsubrs
and
sti
fmuls
ficoml
jno
or
mov
movsl
daa
in
xchg
cmp
out
cmp
inc
xchg
add
les
in
cltd
ljmp
add
leave
mov
mov
mov
push
sub
lods
in
adc
shl
pop
xlat
dec
xor
sub
mov
inc
inc
pusha
add
inc
sub
inc
fucom
cmc
sahf
jl
inc
dec
in
in
ds
movsb
decl
dec
and
sub
add
pop
pop
push
cmpsb
mov
stos
mov
je
popa
or
push
adc
into
xchg
sahf
cmp
aam
aas
je
dec
xor
call
aaa
shlb
push
scas
sub
mov
cmp
add
imul
sub
mov
hlt
xchg
cmp
mov
or
lret
push
mov
jg
jmp
jne
xchg
mov
mov
cmp
repnz
clc
stos
mov
jle
jg
pop
dec
jns
into
adc
mov
imul
fwait
jae
rcrb
arpl
movsb
js
cmc
dec
xchg
imul
nopl
fisubl
add
push
data16
dec
gs
mov
movsb
stos
int3
shl
mov
stos
dec
out
cmp
dec
xor
and
and
arpl
movsb
out
xor
cmp
cmp
paddusb
sarl
imul
outsb
xor
call
lret
jl
leave
pop
fbstp
xor
pushf
rorl
mov
insb
in
fwait
movsl
call
out
imul
in
test
inc
pop
pop
fistps
mov
fsubs
or
jl
jno
dec
pop
cmp
std
cmp
jae
jo
pop
mov
loop
adc
repz
jmp
pop
repz
out
xchg
mov
cmp
jmp
test
loop
xchg
lods
push
sub
push
adcb
ret
lcall
fldl
ret
std
cmp
fwait
sbb
pop
push
xor
sub
dec
and
sub
or
test
inc
adc
lea
jg
movsb
and
sub
mov
xor
insl
xor
mov
fldcw
lods
cmp
dec
mov
mov
push
jp
or
push
clc
add
mov
cltd
xor
imul
jge
push
cmp
jo
jbe
add
inc
mov
sub
xor
push
adc
xchg
in
mov
addr16
jb
stos
mov
sti
enter
sbb
or
daa
imul
mov
fwait
cmp
xchg
pop
outsb
clc
xor
roll
jns
fsts
xor
lahf
daa
pusha
mov
jno
fdivp
lret
dec
ljmp
xor
or
call
pop
call
lret
jo
sti
scas
das
insl
ljmp
pop
int
dec
test
ret
imul
cmp
jp
rcr
cmp
cmpsl
push
cmpsl
xchg
push
sbb
push
lea
cltd
mov
xchg
pop
clc
jge
es
mov
cmp
aas
lcall
sarb
ds
test
std
pop
pop
mov
add
adc
in
shrl
test
std
mov
out
mov
sar
insb
dec
lea
lret
mov
adc
mov
fsubs
cltd
out
xor
pushf
dec
movsl
hlt
dec
mov
dec
pusha
push
jnp
xor
inc
ret
xor
pop
jle
sub
jb
xor
popa
mov
jbe
pop
stos
xchg
fwait
inc
add
in
or
roll
into
jl
inc
cmp
mov
mov
mov
cmpsl
js
imul
scas
fnsave
addr16
xchg
add
adc
lahf
leave
int3
dec
es
sub
in
inc
stc
adc
adcl
pop
push
in
fmuls
xor
iret
ret
or
cmp
repnz
or
push
in
movsb
jl
dec
fsubrl
scas
cmpsb
js
pop
das
stc
sahf
ret
push
cli
jne
outsl
in
xor
pop
loope
mov
inc
das
dec
dec
pop
mov
jno
or
jb
mov
dec
jge
sub
mov
sub
jo
push
push
int
iret
mov
cmp
pop
xchg
jl
pop
mov
mul
fistpll
dec
pusha
pop
mov
adc
lods
cmp
lahf
rcll
clc
lock
and
sti
jp
xor
hlt
xor
std
mov
out
ficoms
into
cmp
push
sub
mov
out
dec
and
jo
jmp
in
std
shll
or
dec
pop
mov
xor
int
cmp
inc
and
xlat
xchg
and
mov
inc
imul
push
push
clc
xor
xchg
cmpsl
adc
jbe
pop
mov
divb
insl
test
out
fdiv
add
das
inc
hlt
sahf
mov
test
pop
jl
scas
insb
lea
xor
imul
cld
lahf
sub
mov
and
inc
in
cmp
popf
jnp
xchg
jno
push
pop
push
js
inc
mov
xlat
adc
push
cmp
xor
xor
xchg
mov
xor
icebp
rcpps
jp,pt
ss
inc
call
lods
push
lods
aad
fiaddl
imul
mov
add
sbbl
jg
pop
dec
jne
aaa
mov
jecxz
stos
ret
mov
adc
stc
outsb
and
inc
call
fiadds
sub
daa
cmpb
push
fstpl
addr16
in
rolb
mov
hlt
sub
adc
mov
mov
xchg
push
sbb
test
sub
sbbl
mov
xchg
sub
or
dec
das
and
mov
and
pop
inc
ret
iret
pusha
push
sahf
cmc
daa
or
cmp
mov
adc
xchg
jg
addl
push
and
subb
mov
lret
imul
outsl
sar
insl
mov
jg
lods
sti
pop
insb
lret
out
inc
shll
cmp
into
mov
stos
aam
jmp
inc
pop
inc
arpl
cmp
test
inc
cmpsb
stos
cmpsb
mov
fmull
cs
or
rcr
js
pop
xchg
mov
add
insl
push
shrl
cmp
push
out
nop
mov
mov
jnp
mov
in
cmp
mov
popa
xlat
or
hlt
nop
push
test
adc
ljmp
test
jb
movb
cwtl
sub
shl
pop
xchg
scas
clc
pop
xchg
jmp
js
jp
inc
or
popa
cld
sbb
rolb
or
ja
enter
pop
out
stos
cs
add
sub
mov
sbb
inc
dec
cli
xchg
or
fidivrs
xchg
fisubs
add
out
inc
mov
and
and
enter
les
xor
mov
ret
push
xchg
xor
ja
inc
inc
addr16
fcoml
ljmp
add
add
jl
stos
rcrl
jmp
std
and
fs
ficoms
movsb
inc
shlb
inc
lret
add
jmp
mov
xor
mov
loopne
cmp
iret
ljmp
sahf
xchg
mov
inc
xchg
into
sbb
dec
jg
movsb
cmpsb
xor
in
jne
fnstcw
mov
stos
jns
and
stc
mov
popf
adc
test
and
xor
add
sti
hlt
or
and
and
out
pop
cmp
or
clc
in
add
jecxz
jp
int3
lret
icebp
xchg
and
jecxz
mov
pusha
out
cmp
mov
popf
inc
add
jecxz
rcrb
and
cmp
or
fs
in
jb
cmp
and
or
loop
fistl
and
xor
rdpmc
mov
xchg
loopw
mov
add
jbe
stc
mov
imul
push
scas
and
data16
sub
push
mov
fs
mov
int
je
mov
inc
std
ficomps
inc
pop
inc
mov
cs
mov
enter
pop
pusha
lds
jne
or
mov
sbb
arpl
in
mov
ljmp
push
lds
mov
push
fwait
adc
addr16
popa
jns
xor
movsb
movsl
out
fcmovu
out
ss
fs
mov
push
pop
loopne
cmp
rcrl
fbstp
fwait
or
jmp
scas
jno
cmp
das
mov
and
popa
and
fwait
xchg
inc
mov
mov
inc
lret
push
lret
in
inc
add
jbe
mov
pop
ljmp
lret
in
dec
insb
loop
sbbl
repnz
icebp
jbe
or
repnz
pop
aaa
mov
sbb
imul
pop
pop
mov
or
cmp
jns
mov
pop
and
mov
pop
jns
xor
repnz
add
aaa
stos
push
arpl
adc
push
inc
mov
fists
incb
mov
and
or
jl
xchg
push
sub
xor
ja
push
push
gs
roll
movsl
fwait
push
mov
lcall
adc
test
roll
or
adc
subb
or
mov
iret
adc
mov
movl
loope
mov
xchg
add
inc
xchg
incb
push
mov
stos
popf
pop
aad
mov
inc
sbb
pop
push
inc
ficompl
cmc
pop
ss
lret
dec
xchg
fwait
adc
clc
pop
imul
mov
out
adcb
cmp
testl
fildll
push
sub
fstps
push
jns
int3
aaa
mov
scas
push
xchg
mov
push
cmp
pop
sbb
mov
pop
rorl
nop
add
insb
mov
or
rclb
adc
inc
push
popf
adc
adc
xchg
pop
cmp
xor
mov
jb
and
je
sbbl
lods
add
in
outsb
aas
jmp
add
enter
hlt
les
mov
addr16
mov
int
leave
pop
xchg
cmp
int
std
push
les
mov
test
lods
pop
stos
push
cmpsl
mov
sub
ja
jmp
dec
or
jge
mov
jbe
jns
pop
sbb
mov
cmp
push
mov
mov
vmovaps
xchg
sub
mov
or
jno
and
add
and
jle
xor
xchg
adc
mov
pop
jb
fcmovu
negl
or
aas
or
mov
sbb
cwtl
dec
lds
outsl
jnp
or
xorl
pop
fmuls
mov
daa
loope
mov
gs
out
cmp
inc
mov
lds
repnz
mov
xor
cmpsl
cmpsl
mov
cmc
loop
xchg
data16
inc
rclb
mov
cmp
pop
push
lods
call
enter
lock
dec
sub
cmp
sub
cltd
and
lds
sti
xchg
pop
xchg
xorl
sub
adc
movsb
sahf
mov
cmp
in
jecxz
fs
pop
xor
stos
stos
jle
mov
enter
xchg
jae
pop
insb
adc
push
xlat
andb
push
rclb
jb
int3
jg
movsb
sbb
jg
xchg
arpl
inc
inc
add
fiaddl
sbb
popa
scas
lret
jge
ficomps
xor
jbe
iret
gs
mov
push
xor
aad
xchg
mov
cli
in
ds
jp
push
in
out
push
fs
fnstenv
jno
in
xor
lods
lret
sub
and
call
push
das
dec
xor
bound
push
pop
arpl
dec
or
int3
mov
xchg
adc
xchg
and
xadd
xlat
adc
lea
ss
pop
or
imul
test
mov
popf
ss
jo
push
int
ds
scas
mov
cltd
and
clc
bswap
lods
outsb
cmpsl
inc
adc
movsl
loopne
cmpsl
dec
lret
mov
inc
add
xor
pop
jo
push
int3
sub
cs
inc
push
or
adc
mov
xchg
iret
mov
adcb
pop
push
fwait
xor
jmp
das
mov
in
out
dec
or
or
test
cmp
sub
pop
fwait
rcll
cmp
adc
xor
jmp
loop
mov
ss
roll
insb
xchg
xchg
xchg
or
add
or
movsb
jb
push
jnp
sub
arpl
repz
loope
stos
imul
sbb
add
pop
push
cmp
sbb
insb
xlat
movsb
lret
xlat
pushf
pop
gs
loop
daa
and
sbb
into
inc
and
call
push
mov
out
jge
xor
gs
insl
jnp
adcl
jbe
adcl
hlt
xor
and
int
adc
out
js
push
dec
data16
jne
shrb
jb
jp
cltd
movsl
popa
pop
add
outsl
mov
mov
inc
loopne
outsb
jecxz
xchg
push
cmp
and
mov
jl
lds
pop
lret
insl
in
addl
inc
xchg
or
and
lds
fidivs
inc
jmp
hlt
sub
test
and
ja
jno
mov
mov
mov
js
rorb
push
scas
hlt
out
cmpsb
mov
mov
in
mov
xchg
andl
mov
inc
fnstsw
mov
faddl
mov
cld
dec
lods
adc
sub
lahf
lods
adc
aaa
xchg
jg
xchg
mov
in
mov
dec
xchg
repnz
ljmp
xor
pop
inc
adc
leave
sub
jnp
jle
dec
sub
mov
adc
push
ficompl
push
into
loopne
lock
sbb
inc
cmpb
jg
jmp
or
add
pop
daa
xor
adc
or
sub
sbb
pop
scas
pop
jne
lods
test
outsb
xchg
cmpb
out
sub
jle
dec
outsl
das
mov
in
jle
dec
cmp
movsl
xor
inc
negl
pop
in
adc
xchg
pop
pop
jecxz
mov
jecxz
inc
ret
mov
cmp
fistpl
imul
movsb
and
xor
out
sub
loopne
repnz
pop
ret
push
testb
cmp
xor
into
dec
push
sub
orb
or
stos
das
bound
stos
push
arpl
dec
mov
jp
xchg
pop
test
jp
add
adc
xlat
cld
cmp
xor
mov
adc
call
xor
adc
loop
xor
mov
add
pop
cli
mov
sbb
cmp
xchg
andb
out
add
std
sub
xchg
inc
enter
mov
loope
sbb
in
dec
pop
das
jge
lret
popf
cmpsb
xchg
repz
out
and
jb
cli
sarb
out
add
inc
fcomps
stc
lret
das
mov
mov
jg
push
arpl
pop
stos
ss
xchg
jo
addr16
sti
fcmovnbe
jo
outsb
mov
mov
leave
sbb
pop
push
mov
fisttpll
mov
cmovl
pop
lods
iret
out
pop
xor
add
add
sub
lods
in
or
push
dec
jno
xlat
push
sub
aam
pop
push
out
inc
je
pop
dec
leave
and
xor
pushf
fidivl
jl
xchg
sub
std
aam
cmc
dec
or
lret
aas
xor
adc
xchg
dec
lcall
dec
mov
out
iret
leave
xchg
fbstp
lods
loop
adc
pushf
mov
sbb
sbb
xor
dec
into
sub
xor
shrb
xchg
cs
add
movsl
fstpt
add
cmpsl
pop
pop
notb
test
cmp
es
outsb
jae
mov
sub
xor
add
sahf
outsb
mov
imul
je
inc
jno
shlb
jns
jp
pop
aas
cwtl
lock
jb
push
pop
fistps
adcl
jl
push
sub
imul
push
mull
lods
xor
std
and
cwtl
outsb
loop
arpl
pushf
inc
xchg
pop
sub
je
xor
push
jmp
push
test
mov
lret
push
jbe
jg
repz
xchg
ljmp
mov
loop
mov
loopne
xor
add
es
jecxz
mov
dec
inc
xchg
out
and
mov
mov
mov
popf
mov
xor
fimull
jbe
ficoms
jb
pop
jl
xor
xchg
in
test
bound
xor
loopne
push
data16
pop
fsts
in
daa
and
mov
sub
xor
sarb
cltd
xchg
mov
mov
cs
fucomi
rcll
jmp
dec
adc
push
bound
xor
lock
iret
lods
sbb
push
mov
jb
pop
cmpsl
out
jl
mov
add
mov
add
loope
ror
xor
test
fwait
jb
out
sub
popf
sub
push
mov
pop
fcmovnb
xchg
lea
sbb
les
into
xchg
mov
in
xor
fnstsw
sahf
xchg
rolb
aas
std
fcompl
sub
jg
adc
iret
test
jg
test
mov
cwtl
stc
out
inc
lea
ror
pop
ret
and
pop
nop
jl
ret
xchg
fwait
dec
dec
mov
data16
pop
mov
rcll
mov
dec
cltd
popf
pop
movsb
test
jmp
xchg
pop
jmp
pop
std
jecxz
inc
mov
ret
lahf
pop
mov
lret
dec
fcmove
negl
jge
outsl
clc
stos
insl
sti
jge
mov
rclb
aas
dec
or
test
cltd
je
fneni(8087
xor
cmp
adc
xchg
imulb
fists
mov
popa
and
addr16
shrb
dec
jno
xor
stos
je
aam
stos
push
pushl
push
cmp
sub
lret
int3
addl
pop
mov
je
or
bound
rcll
cmp
inc
sub
jecxz
pushl
xchg
jp
ja
mov
add
mov
jl
inc
scas
insl
imull
jb
orl
repnz
xlat
mov
inc
mov
xchg
addb
dec
sub
out
repz
pop
vmovdqa
add
inc
xchg
pushf
imul
sub
lods
lods
push
lods
add
mov
inc
sbb
xor
je
or
cmpsl
icebp
rcr
cli
jae
push
push
mov
test
cmp
rcrb
push
xchg
push
loope
sbb
popa
dec
sti
lea
or
mov
in
int
fistl
pop
dec
jmp
inc
cmp
shr
dec
sahf
scas
xchg
add
mov
and
leave
mov
fs
test
in
data16
dec
cwtl
icebp
xor
lods
push
mov
add
mov
push
fidivl
add
ds
lods
ficoml
push
lea
push
mov
nop
icebp
or
push
fisttpll
sahf
mov
pop
fisttpl
dec
mov
lea
push
shrl
and
pop
cs
enter
xchg
ret
jmp
rcrl
lods
mov
jp
jp
aam
ret
inc
adc
xchg
sarb
xor
cmp
test
pop
pop
lds
ret
int
sahf
mov
lods
cmpsl
xchg
mov
xchg
imul
add
fsts
or
sahf
lods
lea
push
cmp
mov
dec
push
sbbb
pop
int
shlb
pusha
fcmovnbe
adc
xchg
sub
push
loope
subb
stos
cmc
lods
sub
ss
xor
or
push
inc
and
pushf
stc
sarl
sbb
mov
push
xchg
sbb
icebp
xchg
add
divb
jo
inc
jp
and
call
mov
dec
jmp
addr16
mov
mov
popf
mov
fsubp
push
push
in
not
dec
and
mov
xchg
mov
jl
in
fnstcw
xlat
lock
test
mov
dec
ljmp
xchg
xor
outsb
hlt
or
cmp
out
call
jg
cmp
dec
popa
push
mov
xor
scas
flds
fistpl
cmp
cwtl
arpl
scas
push
hlt
mov
cli
dec
mov
dec
mov
in
out
adc
lret
mov
in
arpl
sti
jo
jle
sbb
jmp
sub
mov
ss
push
daa
bound
xor
mov
stos
cmpsb
cmp
xchg
pusha
xlat
and
dec
nop
test
mov
movsl
sbb
cli
pop
or
add
cmc
inc
mov
push
sbb
mov
subb
mov
je
and
cli
stos
and
push
pop
xchg
adc
adc
clc
xchg
or
arpl
xchg
sbb
nop
xchg
popf
les
xchg
lods
das
push
aaa
flds
test
in
fnstsw
push
push
pop
xchg
sbb
cld
sete
inc
andb
and
sbb
out
jnp
outsl
mov
xchg
adc
mov
sbb
push
seto
sbb
or
inc
add
xor
and
pusha
xor
stos
imul
sarb
call
roll
push
inc
loop
cmp
cmp
ror
das
popa
push
ss
xchg
mov
pop
dec
daa
enter
sbb
scas
cmpsl
push
ret
mov
sub
mov
xchg
jp
jle
jge
lcall
fnstenv
aam
insl
xchg
adc
test
js
cmp
or
mov
inc
mov
mov
sub
clc
jae
aam
xor
rcll
fsubrl
push
je
inc
addl
xchg
cmp
clc
sti
xchg
dec
xor
add
pop
sarb
les
int3
in
aas
cs
rcr
xchg
sub
roll
or
jg
sub
mov
adc
pop
mov
adc
fsts
test
imul
and
mov
mov
shrl
mov
cmp
int3
les
lea
repnz
pop
je
xchg
and
insb
sbb
imul
outsl
dec
xchg
sub
test
orb
lret
scas
mov
xor
outsl
nop
sbb
fbstp
stos
out
cmp
mov
test
gs
cmp
jae
out
jb
inc
paddb
fwait
movsb
mov
ret
lock
mov
pop
enterw
ret
push
xor
xor
popa
sbb
pop
imul
cmpsb
dec
mov
je
dec
push
mov
test
push
dec
jb
mov
lods
stos
cld
push
adc
xor
repnz
sbb
xchg
enter
cmpsl
daa
les
adc
sahf
test
mov
pop
loopne
pop
sbb
dec
fwait
sbb
mov
mov
mov
shr
mov
push
or
xchg
popa
inc
addr16
and
fnstsw
adc
pop
sbb
enter
jbe
pusha
push
jne
sbb
mov
ds
and
pop
lret
sub
mov
lock
sub
jp
jl
sub
into
aam
cmp
stc
jecxz
xchg
fcmovbe
jno
xchg
rcrl
fmull
insl
ss
aas
frstpm(287
in
subb
mull
dec
arpl
xlat
push
repnz
mov
or
pop
and
mov
mov
fisttps
push
shlb
addr16
insb
stos
mov
xor
test
push
xchg
xchg
mov
adc
sbb
and
push
imul
in
pop
xlat
sahf
cmc
out
xchg
lock
sti
lcall
imul
fnsave
test
add
add
je
adc
sarb
jno
push
cmp
iret
movsb
stos
sbb
jecxz
sbbb
pop
sbb
xor
mov
pop
adc
pusha
pop
mov
cmp
push
data16
repnz
jmp
pop
movsl
dec
int3
imul
jne
icebp
mov
mov
push
pop
cmp
xchg
sbb
dec
jl
xchg
pushf
pop
push
int
std
in
js
pop
in
fimuls
push
jb
movsb
mov
and
insl
jnp
pop
xor
push
adcl
pop
das
push
movsb
add
jle
cld
push
sbb
jecxz
push
cmp
cmp
and
or
cmpsb
aas
add
imul
adc
aad
dec
lods
push
arpl
and
mov
adc
test
stc
arpl
test
cmp
ljmp
xorl
sbb
mov
mov
movsl
mov
out
mov
sti
leave
sub
and
fnstcw
jge
jg
inc
xchg
jne
pop
out
and
mov
cmpsl
add
mov
lret
negl
xchg
adc
dec
dec
popf
cmp
lods
fwait
int
popf
xor
rcl
call
sbb
add
xchg
aaa
repz
out
aad
and
pop
sub
and
or
scas
lret
rolb
movsb
es
fdivs
aas
push
push
lcall
jge
int
or
sti
out
adc
out
sbb
test
bound
iret
fcomps
aam
mov
push
call
out
cmovge
mov
and
or
jnp
outsb
out
jmp
scas
sub
data16
xor
jp
push
jge
pop
in
enter
sbb
mov
mov
jae
lret
inc
mov
cltd
sbb
push
push
pop
out
cmpsl
or
pop
hlt
rclb
mov
pop
push
and
pop
sub
loopne
sub
push
push
mov
sub
mov
dec
aam
sub
sahf
or
mov
and
jp
outsb
jl
pop
cmpsl
or
popf
mov
cmp
jns,pn
jne
push
jnp
in
pop
mov
les
jge
jl
inc
mov
lahf
out
es
ljmp
lret
test
mov
xchg
mov
out
jae
inc
mov
lret
fs
mov
mov
shll
or
lods
leave
int3
aam
xor
xor
sub
sbb
shr
fiaddl
cmp
andl
lods
cwtl
push
out
andl
push
outsl
js
mov
dec
inc
dec
lods
f2xm1
adc
push
inc
jp
std
push
xchg
imul
xor
push
cmp
sub
dec
xchg
outsb
jp
shll
xor
mov
sub
movsl
fimull
sbb
cmpsl
cmp
sbb
movsb
mov
fsubl
mov
xor
fimuls
outsb
mov
jb
or
xchg
mov
jmp
cmpl
stos
popf
addr16
add
jbe
ret
into
sbb
cmpsb
insb
jb
mov
sbb
das
and
imul
sbb
jo
or
dec
lods
lret
mov
mov
jo
popa
scas
pusha
repnz
xchg
push
mov
sbb
or
leave
dec
dec
and
fldt
adc
shll
add
into
cld
mov
sahf
or
jns
jo
push
loop
adc
jne
mov
cmc
insl
push
lea
mov
or
fcomps
sub
gs
pop
sub
or
cmpsl
cmp
shrb
ds
shlb
sarl
mov
leave
add
sub
jnp
add
jb
sub
pop
aam
inc
int3
mov
arpl
lods
in
and
cwtl
dec
insl
imul
adc
ret
mov
pop
divl
add
add
out
push
out
mov
repz
sti
jl
or
xchg
push
add
fildll
mov
icebp
jns
mov
push
xchg
mov
les
push
sahf
xor
push
roll
pushf
inc
insb
ficoml
jne
aad
mov
addr16
cld
cmpl
je
push
mov
inc
push
or
fsts
xchg
rorl
syscall
pop
mov
or
sbb
and
test
adc
dec
popf
movsb
aas
xor
sbb
shrb
xchg
xchg
sbb
int3
inc
loope
loopne
add
rcll
test
negl
popf
jne
jp
xchg
cs
and
mov
into
iret
mov
int3
inc
lret
jb
std
bnd
frstor
in
cmpsl
mov
xlat
mov
divl
roll
cmp
shrl
lret
xchg
dec
xchg
jge
aad
lods
jb
jle
std
dec
mov
sahf
pop
mov
mov
lock
mov
in
mov
fwait
cli
in
imul
push
sub
jle
shrl
xchg
cmpsb
fists
fdiv
dec
fisubl
aas
pop
sbb
bound
adc
push
pop
dec
cmp
or
add
inc
add
xchg
push
push
inc
fsubrl
fsts
flds
aas
xchg
push
pop
dec
and
mov
jno
xchg
cmp
cmp
inc
mov
jb
mov
lods
das
out
jmp
repnz
or
or
xor
lahf
cli
xchg
jnp
mov
inc
loop
fwait
daa
adc
ss
ss
jp
push
idivl
sub
negb
push
fwait
je
sbb
cwtl
mov
pop
enter
fdivl
sbb
aam
push
imul
ret
mov
arpl
sbb
fwait
mov
enter
jnp
dec
push
xor
fwait
sbb
inc
mov
stos
scas
push
push
fildll
test
ljmp
icebp
repnz
xchg
jmp
or
inc
daa
std
xchg
call
add
dec
aad
xchg
mov
aaa
jno
incl
or
in
pop
mov
xor
sahf
mov
pop
mov
xor
xchg
or
cmp
outsb
sarl
imul
and
inc
pop
aad
mov
jo
shrl
xor
out
cmp
xchg
jp
lods
bound
pop
mov
js
stos
dec
dec
pop
dec
xor
or
lock
enter
mov
ret
mov
mov
int3
fisubs
mov
pop
pop
shrb
xchg
shll
lea
lds
loopne
mov
imul
and
pusha
cld
shlb
cld
xor
pop
cltd
sub
rcr
addl
les
dec
adc
dec
arpl
pop
and
adc
mov
sub
push
adc
and
test
inc
mov
push
insl
mov
ret
add
ljmp
pop
lcall
mov
loop
out
xor
jae
mov
and
fnsave
pushf
mov
in
sbb
pusha
data16
jo
and
and
inc
cmp
mov
aad
inc
sub
sahf
mov
pusha
mov
incb
in
int3
movsl
ljmp
lret
inc
cltd
aas
mov
sbb
addr16
pop
and
sbb
push
inc
lcall
inc
and
dec
push
orl
inc
je
push
mov
ret
adc
js
xchg
and
adc
cs
jo
fsubrl
pop
xchg
or
jns
or
add
adc
mov
rcll
pop
or
insl
xchg
xor
pop
movsl
pop
jp
addr16
mov
pop
mov
orb
dec
enter
js
mov
add
mov
cvtps2pd
out
cmp
stc
inc
mov
push
add
rorb
pop
loop
mov
push
lahf
movzwl
gs
mov
int3
stos
nop
push
xor
mov
les
outsl
add
das
arpl
xor
cltd
xor
out
add
adc
aaa
xchg
adcl
int3
pop
imul
jns
test
add
or
je
dec
mov
add
rcll
mov
push
push
lret
sub
jl
bound
fcomps
bound
fstp
jmp
cmp
push
mov
inc
lret
pop
cmp
mov
inc
jnp
mov
add
div
popa
hlt
jl
popf
ss
popf
leave
addr16
xchg
call
and
jle
adc
das
stos
shrl
pop
data16
push
int3
pop
sub
pop
cltd
lods
loopne
adc
or
and
push
pop
cmp
mov
in
xor
xchg
and
rclb
cmc
jnp
aam
out
ret
test
inc
inc
ret
aaa
shlb
or
js
xor
pusha
icebp
out
fcoms
push
push
movsl
loopne
into
std
cmc
mov
jg
mov
rcll
ja
mov
ds
sbb
xor
add
cld
jbe
test
push
repz
cs
dec
jo
jbe
sbb
xchg
nop
in
mov
cltd
mov
rcr
scas
pop
push
sub
mov
cs
sbb
rolb
pop
cmp
dec
shrb
aas
mov
jecxz
fwait
or
xchg
pop
daa
sub
andl
out
stos
inc
imul
inc
mov
fstpl
push
sbb
jp
sbb
and
push
addr16
jg
inc
aam
outsb
jmp
fwait
out
jle
lahf
aad
pop
mov
test
mov
dec
cmpb
mov
cwtl
pushw
enter
jmp
cmp
sub
es
or
fistps
lret
into
push
pop
call
nop
sub
icebp
mov
and
jb
jne
xchg
or
add
add
xor
jp
rorl
fsubrs
push
add
aad
pop
add
jno
sub
push
cmp
mov
loop
mov
aas
push
xchg
leave
push
testl
or
stc
in
pushf
aad
inc
push
push
pop
lds
and
enter
test
add
xor
mov
fdivs
mov
push
subb
loop
mov
pop
jmp
popf
xor
aam
rcrl
adc
jbe
pop
int
unpcklps
outsl
mov
push
lds
out
inc
popa
fneni(8087
pushf
pop
ss
movsl
popa
dec
dec
jmp
ds
inc
std
negb
js
or
idiv
int
mov
cmpsb
mov
mov
das
negb
aaa
ret
xchg
sahf
loope
test
scas
inc
push
cmp
add
test
out
pop
mov
pop
sbbl
or
repz
mov
es
hlt
sbb
cltd
mov
arpl
push
aaa
nop
fidivrs
dec
cmpb
fbld
ficomps
mov
cmpsl
iret
fcmove
dec
push
sti
icebp
and
outsb
mov
cmp
jecxz
fadds
mov
add
sbb
and
arpl
inc
or
xor
pop
adc
jns
inc
std
imul
mov
xchg
movsl
push
jno
fcoml
mov
or
or
fisttpll
xor
adc
dec
pop
shlb
push
xor
sbb
mov
xchg
inc
dec
insb
pop
mov
rcr
jecxz
jae
xchg
dec
xor
cmp
mov
xchg
loope
outsl
rclb
mov
adc
mov
jno
inc
movsl
je
popa
inc
ja
pop
xchg
pushf
mov
mov
cld
and
pop
testb
xor
xor
jb
push
pop
cmpsb
pop
push
jno
sbb
test
push
inc
orl
adc
push
cli
into
inc
jmp
jae
adc
sub
sub
fsubs
aam
inc
cmpsl
scas
adc
mov
aaa
add
mov
bound
out
ja
lcall
pop
xlat
adc
mov
cli
arpl
jp
gs
mov
pop
and
jnp
loopne
push
sbb
adc
out
push
xor
jmp
jmp
sti
cmp
into
ljmp
cmpsl
push
jnp
fldcw
mov
cld
mov
imul
mov
fbstp
andl
test
sbb
out
jmp
aaa
imulb
jmp
push
sub
xor
lahf
rcll
inc
and
dec
test
cmp
push
ja
test
cmp
jb
adc
and
add
push
mov
aas
cmp
loopne
sub
imul
jo
cmp
xor
or
scas
pop
popa
or
push
cmp
lret
ret
cli
push
lcall
jge
movsb
pusha
fwait
mov
mov
fisubrl
pop
pop
dec
iret
lcall
test
adc
push
push
jecxz
stc
add
inc
dec
mov
in
repnz
add
inc
pushf
push
cwtl
dec
popf
jbe
xchg
test
cmp
dec
sub
and
cmp
sti
and
cmc
push
pop
xor
insb
mov
jae
fidivrl
fimull
adc
repnz
cmpb
jle
fstpt
pop
mov
xchg
stos
ljmp
sbb
mov
cmpsb
jle
jns
push
pop
out
add
sahf
mov
in
cmp
fildl
adc
pop
dec
sub
arpl
mov
test
out
in
ja
and
data16
ret
or
push
stos
shll
pop
jmp
test
and
xor
or
fwait
pop
int3
pop
imul
dec
xor
pop
mov
ljmp
cld
loop
scas
mov
hlt
inc
fsts
out
imul
and
sub
cwtl
pushf
mov
cmpsb
or
sbb
mov
push
test
dec
outsl
inc
sarl
mov
int
stos
aaa
mov
int3
mov
pop
pop
inc
adc
aas
arpl
xor
shlb
adc
loop
pop
sub
data16
je
add
test
test
addb
ljmp
and
dec
cmpsb
push
rorb
into
mov
pop
div
pop
cmp
out
lcall
adc
fldl
adcb
fwait
push
mov
sub
out
test
pop
dec
cwtl
xchg
jle
fxch
clc
loopne
mov
mov
mov
lock
hlt
push
push
into
ret
aad
push
gs
jnp
push
cmpsb
scas
loope
jmp
rcll
sahf
cmpsb
or
rclb
mov
out
jo
iret
sahf
adc
xchg
dec
push
sbb
or
data16
mov
jne
lock
or
lods
mov
hlt
sub
push
lods
mov
sti
xchg
push
call
out
inc
repz
xrelease
int
pop
push
sub
mov
pop
push
inc
out
pop
test
outsb
stos
dec
ud0
or
pop
idiv
mov
and
xchg
repz
xchg
xchg
push
sbb
imul
mov
pop
loope
cmp
cltd
xchg
pop
cltd
insl
push
adc
and
aam
movsl
adc
mov
mov
mov
dec
cmp
adc
icebp
les
inc
dec
lds
dec
sub
jle
out
lahf
icebp
add
fwait
cmc
lret
sub
mov
and
mov
xorb
dec
fisttps
std
dec
out
dec
es
cmp
ja
subb
sbb
sbb
fimull
mov
ficomps
cltd
add
mov
imul
cmpb
sbb
mov
cmp
in
push
lods
push
out
mov
sub
cmpsb
push
adc
mov
ss
adc
cmp
and
or
dec
push
je
je
xchg
loop
mov
xlat
xor
adcl
daa
xor
or
xchg
sbbb
in
imul
sub
scas
pop
push
jne
xchg
push
sbb
cmpsl
aam
cmc
pop
inc
sti
ud1
push
pop
int3
xchg
cmp
stos
push
jne
out
out
sti
cmpsl
cmp
in
cmp
inc
mov
or
push
shlb
mov
jl
lcall
leave
sbb
into
and
sti
inc
and
movsl
cld
sti
add
cmp
inc
pop
hlt
inc
scas
and
xchg
mov
and
imul
push
inc
or
push
fstps
push
pop
mov
shr
and
push
loopne
sahf
roll
pop
test
mov
adc
int3
cli
ffree
lahf
test
ja
push
notb
les
das
int3
aam
cmp
dec
cmpsl
test
pop
repz
cmp
ljmp
movsl
scas
loope
pop
jns
sti
stos
dec
sub
jg
std
xchg
xor
mov
stos
inc
adc
stc
out
popa
pop
lret
sbb
sub
mov
mov
movsl
mov
push
cmp
mov
mov
pop
xchg
lods
ret
push
xchg
mov
push
cmc
aas
adc
mov
inc
mov
xor
test
jno
jno
inc
sbb
and
pop
lret
sub
mov
jb
in
and
or
ss
arpl
mov
jle
pop
fwait
sub
mulb
and
push
inc
mov
lea
ret
outsb
hlt
dec
xchg
ret
lcall
out
jecxz
lock
xchg
repz
dec
insl
mov
xor
mov
fldt
out
pop
xchg
jp
xchg
lods
xchg
loopne
push
xor
sbb
shll
repz
shrl
aad
fs
and
hlt
ljmp
fdivl
insl
das
sbb
dec
cmp
fldl
ficoms
sbb
aam
push
cmp
inc
sahf
popf
test
or
bnd
aad
stc
push
mov
bound
bound
push
outsb
pusha
sbb
rcrb
jne
std
popf
icebp
jmp
xchg
lahf
add
cs
mov
aad
mov
insb
pop
xchg
jne
in
xor
and
sti
ljmp
push
je
cltd
sub
xchg
add
xchg
ret
pop
jecxz
inc
les
in
test
arpl
add
stos
add
adc
lods
arpl
adc
mov
mov
mov
lock
jns
imul
push
movsl
imul
sbb
and
aad
fimull
shlb
or
dec
dec
cmp
fmull
push
push
sbb
jp
lods
lock
mov
jb
push
push
das
dec
adc
stc
xchg
mov
popf
mov
and
cli
les
aam
sbb
aaa
mov
ds
aad
ljmp
or
jle
or
inc
fdivs
xchg
dec
mov
aaa
leave
stos
xor
movsl
dec
out
movsb
pop
scas
mov
mov
add
inc
dec
dec
mov
cmpsl
fistpll
pop
pop
mov
and
test
push
mov
cmp
fwait
add
push
jno
iret
dec
es
shr
jmp
loope
popa
mov
shlb
inc
sub
adc
aam
xor
jle
inc
lret
enter
push
and
bswap
mov
inc
sbb
mov
push
fs
leave
ret
lea
lock
ja
mov
add
cmpsb
out
mov
adc
add
or
stc
push
jl
pushf
insl
xchg
push
lret
inc
dec
lcall
inc
lret
addr16
add
mov
dec
mov
outsl
inc
mov
mov
or
sbb
scas
xchg
jno
and
mov
adc
stc
ja
test
cwtl
lods
ja
or
stos
in
pop
fsubs
xor
cmpsb
pop
sub
addl
aam
ret
cs
test
les
lods
push
jb
mov
inc
dec
scas
into
pop
sub
int3
stos
loop
jecxz
fdivr
ret
or
pop
dec
enter
bound
or
adc
scas
sbb
js
push
jno
repnz
pslld
mov
cmc
negb
in
xchg
idivb
cld
mov
or
or
test
sbb
pop
pop
sbb
fidivl
or
dec
daa
xlat
dec
iret
enter
jb
data16
insb
xchg
push
xchg
xchg
call
in
int
push
mov
js
fcomi
mov
jnp
xchg
subl
push
inc
lods
or
cwtl
sbb
cmp
jg
add
dec
js
adc
rcrb
scas
or
xor
iret
sbb
lea
pand
inc
and
or
adc
in
pop
pop
inc
int
inc
inc
sbb
xchg
and
out
movsb
jb
cmpb
or
rolb
shl
shlb
and
mov
lods
xor
lcall
sbb
cmpsb
mov
rcrl
push
sbb
in
push
mov
mov
das
les
push
inc
adc
sub
int3
push
cmpsb
pop
shll
pop
clc
push
movsb
scas
std
pop
fs
jp
pop
int3
mov
pop
mov
addr16
sub
cmpsl
adc
push
hlt
mov
jmp
xor
push
scas
xchg
or
and
push
out
inc
scas
sbb
cmp
inc
jge
loopne
ret
fwait
in
out
inc
test
sub
mov
hlt
adc
mov
or
cmpsb
test
sub
dec
sbb
dec
and
sub
pop
es
int
fsubr
mov
negb
jle
ficoml
inc
cmpsl
shll
cmp
popf
mov
pop
sbb
out
ret
jmp
loopne
cmpsb
sbb
push
lea
pop
cmc
jne
xor
testb
xchg
or
xchg
lahf
cld
and
arpl
xor
in
out
jne
and
push
jmp
fsubrs
xor
test
or
dec
dec
push
outsb
daa
bnd
xchg
or
cmp
pop
mov
adc
mov
je
xor
shlb
mov
pushf
cmp
mov
lret
lcall
addr16
dec
inc
add
mov
push
adc
adc
dec
sub
iret
ja
add
les
pop
xchg
insb
mov
gs
cmp
ds
xchg
adc
aad
mov
out
or
xor
or
aas
imul
movsl
test
dec
test
xor
insl
inc
push
xchg
mov
dec
push
xor
ret
pop
sbb
push
add
rcrb
inc
je
xchg
insl
das
jmp
nop
pushf
sbb
inc
push
cltd
push
dec
es
popf
lret
push
popf
xor
arpl
test
imul
mov
cmp
sbb
pop
dec
fstl
cmp
mov
fistpl
aaa
jo
sbb
les
cmc
mov
mov
dec
push
pusha
test
mov
sub
das
inc
pop
or
xchg
mov
test
sarb
push
xor
pop
xchg
inc
mov
movsb
xchg
or
adc
sub
leave
mov
mov
inc
xchg
mov
jae
mov
imul
addr16
les
jne
call
lods
shlb
jnp
lds
cltd
ljmp
das
iret
xchg
cmp
and
in
ret
push
xlat
popf
idiv
push
in
push
in
popa
dec
dec
cmc
pop
iret
sub
fsubr
sbb
cwtl
out
ret
iret
mov
jno
cmp
sbbb
xor
push
js
cwtl
aad
xchg
ret
gs
mov
sbb
push
pop
mov
lret
stos
pop
cli
add
stos
aad
dec
sub
add
scas
bound
xchg
add
scas
arpl
leave
mov
cmp
int
xchg
jg
dec
shlb
repz
js
push
inc
sub
sahf
mov
out
flds
add
add
mov
cli
push
mov
lds
mov
push
xchg
cmp
xlat
std
cmpsl
shll
loopne
inc
shlb
lods
mov
mov
scas
outsl
add
pop
mov
jle
jae
out
jnp
xchg
xchg
test
xchg
out
and
insb
arpl
pop
dec
dec
clc
mov
mov
sbb
pop
cwtl
cmc
add
ds
lret
cmp
jns
lret
dec
cmc
cwtl
jecxz
lret
mov
jnp
jge
outsl
insb
stos
pop
xor
test
gs
mov
dec
adc
or
pop
into
mov
xchg
pop
dec
pusha
scas
mov
jp
test
test
jbe
ss
sarl
popf
inc
adc
sbb
outsb
shl
xchg
into
jl
or
xchg
aas
out
xlat
dec
and
adc
fcoml
or
negb
lret
ljmp
push
xchg
inc
fs
jg
arpl
sti
xor
loopne
dec
bound
repnz
repz
fldt
and
mov
repz
mov
adcl
jmp
mov
bound
movsl
fldl2t
xchg
lods
dec
mov
rclb
inc
dec
lock
mov
icebp
sbbl
inc
adc
loop
arpl
pop
sbb
aas
add
sbb
lds
stos
adc
or
in
sbb
jmp
rorl
and
repnz
pop
mov
push
fildll
test
add
iret
mov
and
pop
mov
mov
adc
nop
arpl
pop
arpl
lds
and
loopne
mov
div
jecxz
mov
xor
frstor
sbb
cmp
cmc
fsubp
cmc
lock
mov
lahf
pop
sbb
test
ret
push
dec
fsubr
jge
rorl
xchg
dec
push
jg
xchg
dec
sti
rol
mov
sub
or
or
mov
ja
enter
sub
fldenv
iret
cmpsb
cmp
mov
ret
cli
jb
imul
jbe
mov
cmp
aad
stc
in
sbb
or
enter
pop
xor
ss
sarb
out
inc
sub
and
xor
mov
into
stc
lods
int3
ljmp
push
test
add
pop
clc
xchg
loop
addr16
jns
or
and
jne
testl
jno
cmp
pop
sbb
add
pop
and
jo
xchg
xchg
adc
test
mov
iret
jl
cmp
cli
jb
pop
and
sbb
mov
mov
outsb
bound
push
inc
or
sbb
mov
bts
sahf
sti
ljmp
add
sar
gs
scas
inc
gs
xor
shlb
xor
xchg
out
and
jno
cmp
xchg
cwtl
mov
and
sub
sar
hlt
add
mov
inc
je
clc
or
xor
adc
hlt
cld
push
lea
pop
movl
out
xlat
sub
sub
lret
or
jbe
loop
lock
mov
cmp
sbb
sbb
mov
push
xchg
jns
jae
aad
push
pushf
into
inc
dec
loopne
je
jg
fisttpl
xchg
push
shlb
add
movl
add
jno
lret
add
lods
push
jb
lret
push
inc
push
inc
fnstsw
aam
out
lcall
aad
push
fcoms
jns
lds
pop
jnp
dec
xor
ficompl
jno
notl
and
pop
popf
and
into
arpl
scas
cltd
not
outsl
sub
or
push
jge
repnz
xchg
or
mov
ljmp
mov
mov
xchg
and
add
jecxz
out
and
xchg
jo
adc
pop
adc
pushf
int
scas
sbb
pop
add
inc
cmp
sub
shl
sub
loope
or
push
mov
in
mov
pop
pop
test
ret
and
stos
fimuls
mov
push
rol
xchg
imul
shlb
lret
into
cmpl
xorb
xor
jl
pop
test
ljmp
mov
cmp
adc
lret
mov
sbb
test
sbb
psubsb
outsb
int3
push
jmp
push
mov
pushl
mov
jnp
and
mov
addr16
stos
push
or
mov
pusha
pop
pop
test
xchg
jp
js
cli
mov
fistpl
call
or
push
xchg
adc
add
sbb
push
pop
jmp
imul
loope
int
int
stos
inc
and
fadds
add
lret
clc
sbb
mov
rolb
sahf
popf
mov
mov
mov
adc
xor
shrb
hlt
pop
adc
rolb
sbb
and
scas
bound
out
jge
adc
mov
push
mov
sahf
inc
movsb
repnz
in
push
xchg
or
push
xor
mov
jae
repz
mov
pushf
test
mov
imul
lea
mov
dec
out
int3
loopne
mov
data16
dec
and
or
sub
cmpsb
lret
mov
lcall
mov
das
mov
lcall
in
mov
hlt
dec
fildl
cltd
iret
shl
pop
xor
inc
lock
adc
mov
mov
cltd
jae
adc
in
lods
repnz
mov
lods
sub
int
pop
mov
movsb
dec
mov
movsl
rcr
sahf
cmp
test
or
les
call
loope
push
xchg
and
mov
push
repz
jp
jmp
ja
and
inc
mov
fstpt
sub
shll
sahf
pusha
data16
iret
jge
add
rcr
dec
pop
add
jb
xchg
std
push
add
scas
lret
dec
in
movsl
nop
in
add
leave
inc
lock
or
not
add
in
lea
push
xchg
xor
push
inc
pop
sub
pop
xchg
push
add
cmp
pop
adc
cmc
std
mov
mov
adc
les
movsl
sub
aaa
test
and
mov
sbb
inc
mov
cmp
jmp
pop
outsb
cmpsb
clc
lcall
aad
movsl
lahf
mov
arpl
enter
fcomi
enter
xchg
mov
scas
mov
jmp
fbld
arpl
movsb
add
rorl
mov
leave
bound
push
fcomps
adc
fwait
and
inc
test
insb
inc
idivl
ret
stos
mov
mov
xor
inc
and
add
mov
fucomip
andl
xchg
inc
out
adc
fmulp
rcrl
les
std
int
sub
xchg
pop
data16
jns
insl
int3
jp
dec
nop
mov
movsb
jl
jl
loop
dec
cmp
cmp
mov
or
mov
scas
mov
or
xchg
pop
ljmp
int
loope
add
cmp
mov
pop
sarb
fidivrl
ret
sub
addr16
mov
leave
push
scas
xor
xor
scas
jp
mov
mov
das
cmp
sbb
mov
sub
mov
js
sub
or
std
mov
fcompl
cmc
ret
ljmp
jne
in
and
fwait
adc
outsb
push
cmp
aas
dec
jmp
insl
into
divl
in
fcompl
xchg
icebp
ljmp
mov
xor
push
lcall
fisttpll
lods
and
out
xchg
fmuls
imul
sti
sub
mov
stos
add
sbb
push
mov
cmp
stos
mov
dec
pop
xchg
inc
les
adc
sbb
jae
stc
popa
stc
mov
mov
scas
das
nop
lret
aas
scas
sbb
and
ret
add
inc
fbld
sub
leave
lods
push
dec
or
xchg
fcmovnb
mov
mov
aam
jae
gs
repz
aad
xchg
cmc
int
inc
and
or
cld
in
sbb
xor
or
ret
js
push
les
mov
sub
imul
sub
pop
push
dec
out
test
imul
mov
inc
adc
es
rorb
lret
xchg
loop
hlt
insl
pop
adc
pop
out
jp
stos
pop
mov
xchg
jae
push
mov
out
push
sub
mov
orl
rol
sti
pop
mov
pop
pop
and
inc
cs
jmp
mov
out
imull
pop
inc
loope
jae
ret
std
mov
xor
add
lret
inc
je
and
xchg
adc
jl
sub
mov
fwait
dec
push
dec
sbb
int3
int
ss
inc
jle
lods
arpl
iret
or
test
aad
xor
mov
lret
jbe
bound
in
mov
dec
imul
dec
inc
test
or
xchg
push
int3
dec
repz
jae
push
dec
cs
jo
bound
mov
mov
cltd
push
push
xchg
rcll
lock
adc
ss
adc
fistpl
add
xchg
lock
jo
pop
cmpsl
sub
push
xor
push
pop
or
je
cmp
pop
mov
in
les
xchg
pusha
aam
jmp
push
dec
mov
jmp
icebp
inc
sarl
sbb
pop
pushf
int
rcrb
jns
push
idiv
rorb
sarb
jmp
addr16
jle
jmp
lods
mul
cltd
add
jecxz
xchg
adc
cmp
lds
js
es
outsb
repz
push
mov
add
scas
push
jmp
data16
pop
stos
stos
cmpsl
pop
test
jmp
pop
mov
inc
movsl
xor
xchg
gs
mov
out
pop
xchg
scas
shr
sub
cmp
pop
test
iret
sbbl
add
dec
push
pushf
jno
xorl
dec
sbb
adc
rcrb
cmp
clc
cmp
and
adc
mulb
addr16
adc
ljmp
fidivrl
or
fisubs
negb
js
mov
xor
mov
mov
cmp
movl
mov
cmp
inc
sub
dec
pop
and
sar
leave
sbb
mov
add
mov
mov
adc
popa
sbb
int3
push
mov
mov
shl
adc
lock
cltd
push
push
mov
add
cmp
xor
in
xchg
inc
push
notl
sbb
mov
rcr
inc
enter
stos
inc
jge
mov
addr16
mov
ret
jae
lret
test
cmp
jnp
divb
fdivrs
jmp
xchg
call
sti
dec
rclb
lds
aas
mov
cltd
popa
negl
mov
ss
xchg
xor
and
pop
sbb
stos
adc
add
jb
and
pushf
and
orb
push
incl
inc
aas
sub
adc
bound
mov
pandn
or
adc
inc
int
cmp
inc
in
fcomps
insl
mov
fwait
lods
cmp
test
mov
sti
loop
nop
push
pushf
pop
and
mov
testl
test
mov
jno
popa
push
mov
dec
cltd
sbb
push
or
inc
cmp
cli
pushf
xchg
rcrb
xchg
adc
mov
iret
lock
sbb
ret
or
xchg
clc
xor
mov
test
xchg
pusha
mov
xchg
cmp
divb
lret
js
push
and
loopne
ret
cmp
call
or
icebp
and
lcall
int3
mov
xchg
jmp
rcrl
lea
out
ficoms
cwtl
adc
stos
xchg
popa
dec
loop
aad
pop
cmp
sub
scas
jle
xchg
dec
push
out
jno
push
push
jle
sub
add
add
push
imul
ss
mov
in
pop
or
shlb
cmpsl
mov
cmc
jno
xor
push
sbb
jp
fwait
in
int
loop
jne
jp
mov
jnp
mov
push
jecxz
jne
repz
push
cmpsl
popa
mov
data16
movsb
cli
pop
push
lods
lahf
xchg
das
cmc
lods
jnp
testb
add
jge
out
js
fcoml
jno
ljmp
cmc
mov
push
sub
sahf
lds
xor
frstor
xor
popf
inc
das
lods
ds
sub
rol
out
pop
insb
and
pop
dec
test
push
mov
test
cld
or
dec
mov
push
aas
lcall
test
and
in
xor
xor
sub
cmp
inc
adc
rclb
mov
aad
jb
pop
dec
js
pop
push
and
cld
dec
mov
lcall
dec
fsubrp
xor
jo
js
sbb
jbe
sbb
pushf
mov
cmpsb
or
imul
xchg
jo
mov
mov
outsl
jge
mov
mov
ljmp
push
adc
adc
pop
cmp
out
jne
sbb
push
outsl
ss
dec
xor
pop
adc
call
cltd
mov
cli
aaa
ret
ds
adc
push
pusha
push
add
movsl
popa
mov
pop
stos
sub
mov
mov
aaa
in
dec
adc
lcall
xorb
mov
add
adc
das
inc
stos
pop
cmp
inc
sbb
mov
bound
mov
iret
cwtl
or
pop
jne
scas
mov
rol
and
enter
adc
dec
add
fidivrl
test
testb
adc
pop
sti
pop
aad
adc
pop
sub
out
sub
repz
sti
scas
sub
pop
push
divl
mov
pop
je
and
adc
jae
jnp
jmp
push
outsl
test
popa
rcrl
add
insl
mov
fisttpl
popa
cmc
ja
pusha
push
mov
mov
lods
addr16
push
test
fwait
push
xor
inc
add
dec
jle
aas
pop
popf
out
in
push
xor
sbb
lcall
jmp
push
or
imul
dec
cmpsb
push
lock
gs
ds
lods
mov
mov
add
addr16
test
push
and
test
mov
addr16
xor
jo
sbb
outsl
adc
push
insb
jl
or
sbb
pop
ja
xchg
xchg
push
jl
adc
jmp
movb
aaa
sbb
imul
xor
jl
jp
sarb
xchg
jo
or
cmp
loopne
cmp
mov
push
cmpsl
inc
or
sbb
adc
jle
jle
xor
jmp
sbb
push
lods
push
mov
dec
scas
dec
leave
push
and
cmp
fcmovnbe
orl
jle
pop
ljmp
cmp
ret
ss
icebp
and
fbstp
pop
inc
insb
pop
lods
cmpsl
lods
testb
push
lds
fnstcw
notb
or
inc
lahf
jge
xor
leave
push
sbb
inc
cwtl
adc
sub
cwtl
xlat
call
mov
in
pop
test
add
push
sti
xor
mov
cmpsl
addl
cmp
mov
jmp
jp
mov
test
mov
and
aam
shrb
loope
sbb
adc
mov
out
add
mov
fsts
ja
and
lods
rorl
and
mov
push
test
inc
xchg
sub
pop
je
push
pop
add
jbe
sbbl
ret
int3
scas
adc
pop
mov
orb
aaa
lahf
push
sbb
xchg
inc
sarl
mov
sbb
push
push
mov
cwtl
mov
mov
cmpsl
out
or
into
push
mov
icebp
pop
mov
subb
cli
data16
mov
jns
inc
dec
stos
mov
pusha
insb
or
jge
jmp
xchg
stos
mov
fbld
rcrb
xchg
dec
push
jg
adc
mov
dec
push
test
cmp
incb
ss
mov
add
push
inc
repnz
cld
sub
cmpsl
add
cwtl
fidivrl
daa
push
movsb
mov
and
loope
ret
in
lds
xor
jle
repz
in
hlt
out
mov
jecxz
mov
fwait
xchg
xchg
shrb
add
repnz
adc
out
mov
imul
mov
in
sub
aad
call
into
cld
mov
gs
mov
shrb
out
cld
loope
mov
pop
lahf
out
xchg
inc
pop
mov
cmp
adc
pop
in
mov
jle
mov
xchg
sub
fcmovnu
adc
movsl
jmp
mov
jbe
sbb
jb
xchg
and
add
fdivl
mov
jnp
out
jo
mov
mov
lea
xor
arpl
push
mov
xor
sysenter
scas
mov
lcall
inc
das
fisubs
push
mov
lods
mov
push
and
mov
mov
data16
sub
ljmp
outsl
xchg
or
inc
mov
dec
movsb
cmp
pop
cmp
and
test
dec
dec
aad
jb
repnz
int
shll
scas
insl
inc
popf
dec
inc
and
es
ljmp
dec
dec
xchg
test
xchg
mov
mov
call
mov
push
aam
xor
test
inc
push
pop
jge
fs
xor
ficoml
call
test
mov
lds
adc
cwtl
push
xor
popa
lret
push
sub
dec
push
movsl
dec
and
cmp
cmp
lret
mov
dec
ljmp
stos
in
mov
andl
cmpsl
sahf
jl
call
xor
jp
pop
test
ss
sbb
jb
push
mov
das
push
xlat
and
pushf
jb
push
lret
add
push
daa
mov
in
add
movsl
cmp
sarl
into
add
pop
mov
xor
test
jle
jno
fwait
push
mov
pop
cmp
dec
cmp
inc
negl
imul
pop
jnp
lret
aad
mov
in
outsl
int3
mov
aam
loop
cmpb
out
loopne
sbb
out
popf
aam
jl
mov
xchg
in
clc
imul
adc
pusha
fcoml
inc
mov
fsubrs
into
jne
dec
cs
nopl
add
shrl
and
sub
adc
and
mov
rcrl
lods
fyl2x
pushf
mov
sbb
lret
scas
mov
lahf
push
push
rclb
int3
cmp
in
sbb
dec
and
cmc
pop
mov
sbb
xor
mov
mov
fldl
in
fwait
inc
in
sub
lret
mov
pushf
negl
cli
adc
ljmp
pop
dec
sub
ror
ljmp
cmp
and
jne
adc
xchg
fstps
stc
or
mov
sbb
cwtl
xor
aaa
sar
test
dec
mov
cmp
jo
jns
sbb
repnz
xchg
insb
push
testb
adc
ret
xchg
add
jle
xchg
shll
lock
xor
lock
cmp
lret
fwait
das
xchg
mov
cmpsb
incl
adc
push
into
inc
sub
addl
jp
adc
fadd
dec
xchg
and
dec
pusha
repz
movsb
jge
inc
scas
sbb
mov
rorb
imul
and
mov
inc
sbb
test
xor
insb
pop
mov
inc
loope
cwtl
and
inc
xor
inc
sbb
dec
test
jbe
add
cltd
les
pop
lret
and
lahf
dec
call
lret
gs
daa
pop
das
in
adc
inc
or
sti
add
int3
out
aas
icebp
push
test
push
cltd
adc
xchg
pop
notb
icebp
call
push
aad
imul
push
sbb
mov
mov
xchg
and
lret
xchg
pop
testb
nop
xorl
fildll
inc
xchg
addr16
and
test
lcall
repz
pop
stc
cmc
lock
testl
insb
in
inc
out
fimull
jmp
mov
ja
cwtl
rclb
mov
jp
mov
xor
fstpt
push
leave
out
pop
add
push
mov
clc
adc
mov
aam
roll
push
shrl
add
in
mov
mov
inc
or
fstl
jae
in
dec
call
aaa
dec
mov
stc
pop
mov
xor
add
andb
xor
and
cmp
add
lods
and
adc
stos
sub
dec
rcr
cwtl
sub
sbb
fidivl
xor
inc
dec
in
push
mov
mov
push
xor
xor
adc
mov
js
icebp
sarl
int3
fidivl
out
fadd
pop
xor
enter
sahf
pop
adc
scas
in
sbb
jbe
mov
clc
aaa
pop
mov
xor
sbb
jl
push
aas
jecxz
mov
cltd
mov
mov
pop
in
shrl
jmp
jp
push
decb
sbb
push
xchg
repnz
imul
push
push
out
push
outsl
adc
xlat
lret
mov
xchg
mov
rolb
sahf
mov
int
inc
jae
jns
and
mov
test
cwtl
enter
nop
icebp
pop
fisttpll
push
and
push
sahf
out
sbb
in
cmp
or
inc
lret
outsl
ror
or
cmpsb
adc
fcomps
adc
push
ds
pop
push
rcr
hlt
cmpsb
adc
inc
and
mov
and
mov
fmul
push
adc
cltd
add
or
adcb
cmp
jnp
fidivs
mov
hlt
pop
out
mov
jb
or
sub
jno
cmpsb
out
sub
notb
push
push
mov
sti
dec
mov
mov
mov
aam
jp
scas
cmpsl
jno
mov
mov
shrl
in
stc
bound
arpl
es
sbb
sub
je
pushf
jmp
xor
in
xor
imul
jbe
das
cmp
xchg
aam
out
or
adc
inc
pop
mov
insb
sahf
les
sub
iret
inc
cltd
push
popf
mov
mov
sub
and
jmp
fcmovu
cmpsl
addr16
cmpsb
mov
mov
lahf
xorb
insl
jp
sbb
and
or
xchg
or
push
mov
mov
test
cmpsl
sbb
cwtl
jo
aaa
repnz
movsb
fisubl
enter
ret
mov
dec
jg
sti
or
adc
sub
ljmp
or
loopne
out
mov
lods
add
scas
jne
mov
and
add
push
mov
mov
stc
leave
stc
into
loop
mov
mov
int3
scas
repz
dec
into
stos
xorb
jno
fs
push
push
icebp
xlat
jo
repnz
stos
stos
add
sti
ret
push
fimull
mov
outsb
fwait
and
mov
lea
dec
inc
lcall
into
push
mov
sub
or
sbb
in
out
pusha
mov
ljmp
sti
in
sub
adc
push
jnp
xor
ja
and
add
lcall
cltd
inc
push
sti
fmulp
xchg
inc
dec
jno
jns
push
mov
push
aad
addl
jo
mov
dec
ficoms
adc
jb
call
out
mov
loop
sahf
lds
inc
icebp
sahf
ds
push
jne
loope
pop
test
xor
mov
in
mov
jle
cmp
dec
js
or
clc
or
jge
and
add
pop
cmpb
hlt
lods
xchg
xchg
lods
inc
push
mov
fdivr
cmpsl
dec
cmpl
mov
sbb
inc
bound
mov
sub
fs
in
fs
loope
xchg
push
movsl
call
sahf
in
fcoml
dec
jnp
xchg
mov
fbld
adc
sti
std
jle
adc
push
out
mov
adc
test
pop
ljmp
stc
aas
gs
xchg
ffreep
ss
pop
sbb
push
movsl
in
cmp
clc
gs
mov
lret
mov
dec
bound
jl
mov
and
mov
jb
xchg
adc
clc
ss
fistl
or
test
cli
ret
out
adc
sbb
jae
out
and
cmp
inc
sub
out
je
mov
pop
mov
sysret
mov
inc
xchg
les
jbe
or
js
mov
push
leave
inc
pop
pop
das
sbbb
repnz
push
and
pop
int
jo
addb
sub
xor
arpl
inc
lcall
stc
fbstp
das
inc
mov
push
lds
mov
adc
daa
push
loopne
out
loopne
loope
sbb
push
and
shl
call
cmc
movsl
notb
jge
sub
add
fsubr
pop
mov
movsb
int3
mov
mov
push
adc
testb
in
loop
mov
fdivrl
fisttpl
lahf
jp
xchg
int
push
imul
int
mov
inc
xor
insl
hlt
movsb
faddl
push
add
pop
insl
stos
sub
les
inc
popf
add
shlb
int3
aam
rorb
std
into
daa
fistps
add
lds
jge
in
mov
jp
insb
les
xchg
mov
jo
fcmove
pop
sbb
rclb
and
xor
int3
xor
lea
inc
jbe
cli
imul
mov
daa
add
pop
pusha
sbb
fildl
out
dec
loop
pop
lods
mov
lret
idivl
test
movsl
jecxz
push
test
add
jp
pop
jmp
les
jge
add
xor
pushf
xchg
in
int3
sbb
sbb
cmc
jle
push
jge
sub
sarb
bound
or
mov
imull
and
repnz
jns
dec
mov
fidivrl
sub
dec
daa
and
dec
mov
in
mov
repnz
fistps
stos
insl
mov
in
mov
mov
mov
ja
dec
lcall
in
sub
dec
adc
mov
pop
cmovns
cmp
lock
xor
jmp
push
add
xchg
movsl
jecxz
and
sbb
orl
jg
inc
ret
cmp
xchg
pop
inc
ds
insl
dec
cwtl
fildl
lds
xor
mov
stos
and
divl
sub
int
mov
mov
outsb
dec
inc
test
push
pop
add
js
repnz
rcl
xchg
cwtd
testb
mov
outsl
inc
insb
xor
lea
add
aaa
inc
push
push
lret
mov
dec
or
push
test
dec
testl
inc
inc
shrb
and
cli
cmp
pop
xor
xchg
pusha
push
and
inc
sbb
arpl
jbe
mov
sub
pop
cmp
inc
test
push
pop
dec
and
mov
inc
lods
les
enter
cmpsl
pop
xor
call
mov
mov
int
add
lret
push
fsubrp
push
roll
fwait
stos
outsl
xchg
xchg
adc
mov
movsl
les
aad
pushf
in
ret
and
mov
mov
jns
cmc
mov
std
jl
setbe
sub
and
add
orb
push
pushf
test
les
lea
hlt
cmpsl
outsb
lret
mov
or
arpl
shll
lret
fcom
inc
cmpsl
inc
vmovaps
xchg
and
sti
pop
imul
incb
jne
cmp
roll
dec
mov
sbb
adc
int3
mov
or
insb
dec
mov
jnp
stc
dec
dec
stos
aas
sbb
inc
hlt
sub
rep
bound
fidivrl
out
mov
cmp
gs
jl
mov
nop
jp
mov
es
or
sbb
cmpsl
sbb
xchg
in
push
ds
inc
inc
pop
sbb
xchg
lods
adc
push
mov
sub
das
ret
xor
jae
inc
test
add
fucomip
xchg
pusha
mov
jp
int3
lret
ss
cmp
xchg
inc
adc
sub
lret
hlt
cli
daa
je
sub
and
mov
mov
lret
loopne
lret
scas
mov
pop
mov
sub
sbb
add
cwtl
out
push
test
popf
in
loop
pop
shl
inc
vandnps
push
fildll
out
xchg
sbb
icebp
jnp
inc
lret
movsl
push
shlb
scas
sarb
bound
push
dec
mov
pop
rol
subb
jg
sbb
and
dec
pusha
pop
xchg
jge
es
sub
add
icebp
jmp
mov
lret
outsl
adc
dec
test
and
fst
mov
lcall
das
cli
outsl
lods
cmp
lods
es
or
jno
lods
xchg
xchg
loopne
or
insl
xor
xchg
arpl
xchg
loop
and
aas
in
rorb
iret
mov
mov
lods
push
xor
mov
les
addr16
loopne
repnz
mov
push
sub
inc
ss
xchg
xchg
mov
pushf
shrb
cmp
add
mov
je
mov
dec
dec
out
and
fdivrl
loope
xchg
lea
aam
and
repz
subb
aam
jns
jl
movsl
std
inc
cmp
arpl
in
dec
shll
sbb
popa
xor
data16
lahf
mov
sbb
out
gs
ret
fldt
inc
addb
xchg
data16
out
inc
push
shr
test
push
cli
fmuls
sarb
sahf
xchg
mov
mov
push
inc
xchg
rcll
fs
sub
pop
scas
mov
call
jecxz
push
add
mov
sbb
test
fldln2
ss
vpunpcklqdq
mov
and
jno
inc
scas
inc
inc
pop
jns
jbe
xor
mov
bound
cld
stc
jns
test
rorb
dec
loope
pop
jns
inc
dec
out
mov
adc
jne
ljmp
loop
xor
or
outsb
leave
xor
stos
push
push
sti
mov
call
dec
imul
adc
ljmp
add
ljmp
mov
jle
jecxz
cmpsb
add
lds
ss
sub
add
add
or
aam
jae
or
jle
cmp
cmp
pop
push
mov
js
sarb
mov
nop
xor
ljmp
push
in
push
xchg
pusha
inc
ds
add
js
sar
fwait
gs
add
xor
jmp
mov
shrb
sub
push
xchg
mov
popa
loope
lds
out
pop
mov
cs
jmp
ljmp
adc
dec
pop
cmp
shrb
mov
pop
xchg
inc
test
pop
sbb
clc
xor
push
jl
adc
add
or
and
push
push
and
add
or
negb
push
pop
mov
inc
mov
inc
fdivl
loope
adcl
bound
in
rcrl
inc
adc
push
hlt
mov
div
cmp
in
jecxz
mov
stos
lret
test
push
lods
lea
insb
cmpsl
sbb
addb
mov
push
jp
mov
xchg
inc
repz
fldt
je
daa
inc
std
jne
or
and
ss
in
sub
dec
js
test
dec
add
xchg
lret
jne
push
jmp
rep
mov
push
int3
add
cwtl
xchg
leave
pop
insl
add
jecxz
sbb
mov
in
cmc
stos
mov
xor
inc
lds
out
fdivs
push
jecxz
test
out
sahf
loop
lcall
mov
outsb
aaa
or
jecxz
mov
je
or
lods
cmp
pop
mov
dec
pop
pop
push
mov
neg
leave
fldcw
ret
popa
mov
push
shll
shl
cmpsl
xor
enter
cmpsl
jmp
push
loop
mov
lock
hlt
cld
jge
popa
push
lret
mov
mov
jmp
adc
or
dec
in
mov
lret
xchg
push
mov
lds
ljmp
sub
insb
mov
sub
nop
cs
sbb
or
ret
and
sub
lret
mov
add
mov
mov
inc
int
sbb
jecxz
repz
inc
xor
jno
mov
in
mov
cmp
stos
push
xchg
jno
sbb
ljmp
add
ss
stc
xchg
movsl
es
iret
ds
xchg
bound
cli
dec
daa
addr16
fistps
and
nop
mov
daa
in
cmpsb
xchg
dec
adc
fildl
dec
or
icebp
jg
cmp
push
mov
push
lock
add
inc
fsubl
cli
inc
mov
sbb
sbb
push
call
stc
pop
mov
inc
dec
jmp
insl
cli
mov
add
xchg
jge
xor
add
insl
in
mov
cwtl
xcrypt-cbc
cmpsl
adc
dec
push
or
leave
or
enter
ljmp
ljmp
sub
in
cmp
jmp
or
pop
data16
in
roll
adc
jge
into
push
aas
lret
cmc
repz
mov
push
sub
push
jle
mov
lret
mov
out
movsl
cmp
les
pushf
xchg
out
sar
lds
in
test
mov
or
xor
mov
aad
mov
cmp
inc
shr
adcl
cmp
push
mov
repnz
and
adc
inc
clc
mov
sar
adc
sub
and
push
movsb
pop
movsl
xor
scas
or
adcl
aad
idivb
fstl
aam
push
ljmp
jp
mov
xchg
xchg
popf
and
cmp
xor
dec
lret
ret
shl
popf
scas
or
ss
movsl
cmp
dec
insb
ss
mov
leave
sahf
mov
rcl
arpl
scas
bound
push
xchg
adc
pop
jp
das
push
push
xor
cs
out
push
pop
and
mov
xor
xchg
mov
jle
into
mov
add
insl
xor
xor
inc
mov
jl
jp
mov
lods
inc
fs
inc
test
orl
jmp
daa
xchg
mov
std
mov
ljmp
pop
aas
lcall
pop
movsl
data16
dec
push
cmpl
mov
stos
stos
push
jle
rorb
and
dec
mov
mov
add
jno
addr16
sahf
js
mov
dec
cltd
push
push
dec
adc
movl
jns
push
ds
pop
iret
popa
jo
rorl
jge
push
out
fcoml
gs
xor
push
dec
push
sbb
jmp
sbb
cmp
jo
inc
in
repnz
stos
repz
addr16
pop
xchg
lcall
outsl
and
in
pushf
dec
ret
out
cmp
dec
imul
out
adc
inc
enter
adc
xchg
mov
xchg
xlat
into
add
rcll
pushf
xor
xor
adc
dec
shl
xchg
popf
std
fnsave
or
xchg
jno
lahf
fs
scas
and
cmp
inc
mov
sub
inc
data16
es
out
mov
add
mov
push
sub
push
popf
dec
mov
or
adc
repnz
bound
pop
sbb
lret
into
aaa
ret
cmp
sub
daa
xor
jno
xchg
test
push
mov
xor
shl
xchg
fstps
jns
cmp
push
aad
ljmp
mov
mov
add
mov
lahf
xchg
icebp
jae
xor
scas
sub
divl
js
out
jmp
adc
sub
outsl
jge
jbe
je
dec
sbb
sbb
aad
pop
or
or
mov
sub
ficomps
iret
add
and
jae
jno
dec
orb
xlat
leave
push
int3
push
and
jae
nop
aad
pop
stos
mov
lea
loope
fbld
mov
and
dec
imul
jns
adc
and
pop
daa
arpl
imul
dec
inc
and
add
test
pop
sub
jg
xor
pop
sub
andl
jno
inc
adc
insb
or
in
aaa
in
xchg
enter
push
inc
dec
xor
popa
dec
test
push
add
or
add
sbb
fists
rcll
mov
popa
insl
in
dec
cmp
xchg
bound
xlat
pop
xor
lcall
aaa
sub
pushf
scas
jmp
loope
push
stc
andl
sbb
add
fidivs
mov
rorb
ljmp
xlat
out
lret
test
movsb
incl
mov
mov
xlat
andb
shrl
mov
xchg
je
sbb
push
ss
pop
xchg
xor
sub
adc
daa
daa
add
mov
pop
fsubrl
and
lock
lcall
pop
sub
add
out
cwtl
add
mov
test
sbb
sti
jo
orl
jp
mov
pop
mov
xlat
jl
mov
out
pop
test
mov
push
test
popa
inc
loop
cli
push
pop
mov
rolb
mov
cmp
ud2
cmp
mov
jo
mov
xchg
idivb
mov
out
dec
fcoml
inc
fsubr
mov
mov
insb
xchg
push
jae
scas
sub
outsl
notl
inc
xchg
shlb
dec
xchg
add
push
sbb
gs
pop
lds
scas
pop
push
mov
addr16
out
or
jb
hlt
sbb
cwtl
test
loopne
sbb
imul
mov
cs
sub
jae
outsl
jae
into
mov
or
int
outsb
mov
mov
or
les
mov
sbb
and
jbe
inc
test
ljmp
fsqrt
cld
dec
addr16
xor
sbb
popf
inc
fcomps
and
jmp
in
movsl
or
mov
insl
and
jl
mov
adc
mov
mov
inc
lods
dec
pop
ret
or
pop
mov
push
filds
popl
lcall
mov
cltd
mov
repz
imul
cld
fucomi
dec
ss
sbb
cld
test
mov
notl
sub
out
xor
xchg
xchg
adc
jnp
mov
add
adc
sub
iret
add
sbb
fiadds
mov
imul
mov
popf
pusha
aad
adc
int
jle
lcall
popa
cld
or
jmp
jmp
nop
shrb
fldcw
scas
xchg
fstps
cmp
cmp
cmp
orl
outsb
fistpll
adc
add
gs
and
sbb
pop
pop
cmp
dec
push
and
nop
sub
xor
outsb
rclb
faddl
mov
sub
and
aaa
pop
lds
test
repz
jnp
leave
rcll
inc
add
add
or
and
outsl
adc
push
nop
jmp
rcll
jg
mov
xorl
adc
subb
scas
mov
push
cli
gs
sbbb
dec
push
fnstsw
adc
xor
sbb
mov
std
rcrb
or
lea
pop
pop
lods
dec
ja
mov
insl
push
xor
or
xor
negl
pop
adc
xlat
in
adc
push
or
cwtl
jno
nop
ja
push
int
cmp
xor
les
xchg
mov
lea
cmp
jmp
push
js
and
insl
outsb
test
pop
dec
into
adc
ret
mov
add
mov
rorl
arpl
imul
adc
in
sbbl
jne
and
push
inc
push
mov
or
nop
and
dec
add
mov
xchg
dec
out
xchg
inc
repz
and
loopne
clc
pop
sub
or
aad
fdivs
stos
dec
ret
sbb
inc
push
popf
sbb
pop
lock
mov
xchg
int
mov
stos
cmp
add
test
push
fstl
test
or
inc
sarl
inc
cld
jns
cmpsb
fnstsw
cld
mov
or
push
mov
rcl
lock
fstpl
inc
cmp
ljmp
push
aas
stc
bound
cmp
fdivr
or
mov
shll
call
and
xchg
cmp
fstpt
inc
mov
jg
leave
or
cli
and
mov
insl
push
shr
dec
out
push
flds
mov
xchg
pop
jns
mov
push
push
mov
xchg
or
into
lds
add
lret
adc
jnp
inc
cltd
adc
cmp
ficomps
mov
pusha
repnz
cpuid
push
daa
dec
inc
pop
loopne
inc
scas
sbb
pop
cmp
loope
push
pop
adc
adc
in
das
fisubrs
xor
push
imul
faddl
add
nop
bound
and
sbb
sahf
push
mov
insl
in
pop
into
mov
xchg
mov
jae
cwtl
and
xor
repnz
mov
push
pushf
adc
cmc
jp
ret
jne
int
imul
mov
mov
mov
std
mov
sti
mov
movsb
mov
js
push
hlt
out
leave
ret
mov
sahf
inc
sbb
sbb
ljmp
dec
cmp
cmp
pop
add
inc
adc
movsl
cmp
add
adc
cld
cmpsl
loope
pop
inc
add
inc
das
cmc
pop
dec
mov
mov
adc
push
jb
int3
scas
aad
cltd
mov
sbb
fnstcw
mov
push
xchg
or
add
hlt
xor
orb
mov
add
mov
test
xchg
mov
shl
ret
test
pop
dec
sub
std
stc
mov
dec
dec
in
sbb
pop
sbb
xchg
sub
sahf
dec
sti
mov
push
inc
sub
jbe
out
outsb
faddl
cmp
inc
sti
xchg
mov
cmp
mov
cld
lret
testb
sub
into
mov
push
sbb
jecxz
outsl
dec
mov
push
fs
arpl
cmp
andl
adc
data16
js
mov
jae
stos
jns
shrb
ret
pop
xor
pop
pop
sbb
mov
dec
ljmp
jae
sub
out
xchg
add
lds
sub
ja
jecxz
hlt
mov
sub
xorl
loopne
loope
and
pop
xchg
ret
xlat
mov
ja
jnp
push
cmp
xchg
add
rorl
in
xchg
or
mov
push
stc
pushl
arpl
adc
sbb
adc
scas
out
les
xchg
shl
out
mov
sub
mov
mov
inc
or
insb
jmp
fadds
or
pop
aad
aaa
jbe
push
popf
popl
jecxz
cmp
out
push
in
jl
nop
add
xchg
cmp
nop
push
sub
je,pn
dec
sub
push
mull
ja
sub
push
cmp
dec
mov
gs
mov
jns
push
lahf
jl
aad
roll
cmp
add
mov
imul
and
pop
push
lods
cmpsl
add
out
dec
test
repz
cmp
dec
sbb
mov
mov
adc
cmp
dec
rcll
popa
xchg
adc
leave
mov
int3
fdivrs
das
lods
sbb
xorl
pop
addr16
cwtl
adc
pop
addb
test
mov
clc
jge
cmpsl
inc
and
add
movsl
sub
in
cmp
mov
stc
sbb
push
adcb
jne
inc
lret
or
mov
jle
mov
pop
push
cmp
movsb
xchg
pop
je
sbb
jae
inc
cli
fists
jb
fstpl
hlt
lcall
dec
cwtl
les
xor
pop
lret
sahf
stos
adc
sbb
pop
jg
push
into
cwtl
rolb
faddl
sub
test
andb
add
fucomi
stc
fadd
cld
cs
push
icebp
je
addb
pop
fbld
scas
inc
cmpsl
leave
inc
lock
sbb
bound
popa
or
cli
in
fldcw
xlat
aad
and
orb
sbb
push
sbb
cmpsb
sub
xchg
sti
jmp
shl
dec
mov
cmpl
int
xchg
shrb
sbb
mov
jne
ror
mov
es
pop
rcl
mov
sub
loop
inc
es
and
jno
add
and
int3
scas
xlat
add
lcall
sub
shl
xchg
andl
add
cmp
outsb
jne
lcall
data16
xchg
mov
pop
mov
mov
lock
add
cmp
fs
hlt
sbb
fdivl
push
cmp
pop
test
cmp
push
lods
adc
ja
icebp
xor
sbb
aas
fldcw
inc
daa
or
xchg
jne
lret
mov
sbb
pushf
mov
jne
mov
add
lods
inc
sub
test
loop
loop
cmpsl
lods
movsl
fistps
sbb
imul
and
enter
fcmovnb
stos
sub
outsb
addr16
scas
jb
inc
outsb
scas
aam
stos
ret
inc
lea
cmpsb
cld
mov
adc
mov
pop
pop
sbb
push
add
inc
xor
inc
bound
lahf
xchg
pop
shr
sub
cmc
add
jl
and
loopne
pushf
dec
ret
xchg
mov
fwait
lret
push
xor
xchg
dec
mull
add
push
mov
adc
std
mov
adc
js
bound
dec
aaa
push
pop
aaa
std
cmc
dec
lea
outsb
pop
pop
push
sahf
sahf
leave
xchg
rorb
enter
into
fcoms
fcomp
xchg
aam
in
test
fcos
adc
int
jge
mov
mov
xor
push
or
call
push
or
insl
xor
aad
imul
iret
sub
mov
xchg
enter
movsl
mov
jbe
xor
or
lcall
mov
daa
push
adc
mov
int3
lret
mov
scas
mov
pop
push
adc
xlat
xor
test
jg
sbb
jne
cmp
fldl
lods
mov
rcll
pushf
cltd
mov
adc
or
ja
xchg
test
in
loopne
add
pop
adcl
stc
add
sub
das
out
inc
cs
xchg
cli
sub
sahf
notl
in
dec
mov
cmp
stos
dec
popa
lods
fsubl
int
enter
cltd
mov
popa
cltd
pop
stc
pop
push
orl
or
mov
movsb
sub
je
fstpt
jg
jl
cltd
sub
sub
sbb
fcmovnb
test
mov
jnp
pop
out
push
fiadds
pushf
lea
cmc
xchg
inc
jg
push
clc
mov
ds
pause
mov
mov
adc
or
push
xor
insl
fstpl
daa
iret
shll
and
test
dec
dec
mov
lock
stc
scas
push
popf
aam
aas
pop
ds
shr
filds
iret
pop
fdivp
rcll
mov
push
xor
sbbl
add
ret
or
addr16
fwait
push
push
xchg
sti
out
ljmp
in
lret
out
jae
fldl
lods
ret
mov
leave
adc
movsb
mov
notl
aaa
pop
sbb
ret
jecxz
roll
mov
or
lahf
sbb
push
out
mov
push
js
pop
or
mov
mov
pop
pop
mov
hlt
lods
hlt
int3
inc
and
push
pop
roll
jp
or
repz
mov
push
jcxz
xorl
ret
cmpl
stos
pusha
cmp
mov
sbb
je
sub
or
clc
iret
outsl
cmp
pusha
scas
push
in
push
mov
movsb
mov
lods
sub
mov
cmpsl
aaa
gs
fldenv
loope
leave
xor
push
or
aaa
mov
iret
jbe
lcall
shll
xchg
movsl
pop
add
sub
fs
test
xchg
out
add
push
push
cmpsb
mov
enter
jns
pop
pusha
cmp
pushf
mov
inc
insb
lahf
mov
mov
push
jbe
orl
in
mov
in
sbb
andb
lea
fdivrs
jl
inc
negl
out
sub
lds
imul
call
mov
push
fldt
cmp
or
int
mov
pop
dec
jl
subl
sub
repnz
and
jmp
pop
imul
add
xor
pop
adc
cmp
inc
neg
jb
testb
push
imul
mov
lret
mov
hlt
outsl
jne
mov
or
jp
or
pop
xor
pusha
pop
mov
popa
mov
adc
or
popf
jmp
icebp
jae
clc
aaa
sub
inc
loopne
call
mov
lods
shrb
mov
insl
shr
dec
mov
lock
xor
mov
std
mov
movsb
scas
fsts
shr
jno
sub
jp
adc
lcall
les
inc
push
jbe
sahf
lds
es
dec
testl
daa
ja
out
add
clc
mov
add
int
out
fisttps
or
push
xchg
ss
test
jg
xchg
arpl
jecxz
mov
mulb
ljmp
mov
mov
push
cmpsl
iret
insl
imull
outsb
aaa
sbb
je
insb
mov
cmp
pop
push
les
in
mov
and
mov
mov
cltd
popa
fcoml
xor
mov
pop
adc
pusha
dec
xchg
daa
aad
enter
xorb
repnz
inc
push
div
and
mov
add
shl
cmp
mov
std
repnz
jge
sti
test
scas
sub
js
pusha
aas
push
push
ljmp
stos
sub
xchg
cmpsb
xchg
cs
out
push
xchg
inc
outsl
inc
sbb
popf
mov
aaa
popf
data16
dec
scas
stc
lea
and
frstor
xor
sbb
ljmp
inc
pushf
and
push
xchg
adc
fptan
sahf
mov
add
fs
mov
mov
or
push
addb
jbe
jp
pop
push
js
mov
add
icebp
cmp
int3
cld
xor
jnp
push
pop
pusha
adcb
mov
push
enter
adc
and
push
jge
dec
pop
aas
bound
cli
jge
gs
cmp
mov
mov
clc
jb
sbb
popa
fcomp
or
ds
lret
or
inc
movsl
mov
add
sub
fcomp
mov
xchg
subl
add
inc
daa
lds
mov
dec
das
cmc
ja
xor
adc
mov
mov
xchg
iret
out
push
aam
pop
rolb
data16
loopne
jne
sysenter
mov
xor
dec
daa
and
and
test
add
mov
xor
sarl
stc
push
mov
and
lcall
jb
or
test
popl
sub
iret
shl
cmpsb
loope
je
sbb
fcompl
daa
repz
fs
sbb
jl
and
cmp
jmp
cmpsb
adc
je
mov
loope
xchg
movsb
test
push
lock
daa
add
jmp
mov
xor
ret
push
mov
loop
pop
les
fwait
lahf
inc
bound
sarb
add
mov
pop
adc
push
pop
adc
mov
sub
test
pop
mov
adc
test
mov
mov
pop
mov
out
leave
mov
xchg
pusha
sahf
mov
out
dec
ficoms
in
mov
mov
enter
dec
xor
mov
push
and
loopne
push
jmp
mov
xchg
jae
mov
test
ja
push
imul
pop
lret
repnz
mov
push
push
movsb
lods
push
push
xchg
xor
and
loopne
mov
xor
xor
xor
sbb
dec
ret
cmp
data16
in
pop
and
mov
pandn
adc
pop
pop
sub
or
mov
sbb
cvtps2pd
shlb
mov
inc
push
stc
pop
rorl
call
lds
stc
jge
arpl
push
addr16
sbb
lcall
inc
in
jnp
xchg
into
jns
cmp
mov
test
adc
cli
push
and
xorb
cmpsb
add
mov
pop
enter
in
mov
and
lahf
xor
mov
shlb
mov
dec
daa
aam
jns
push
jbe
inc
inc
dec
and
subb
xor
mov
scas
lds
mov
cs
xchg
rolb
jl
fldl
fistpll
addr16
and
outsb
lods
leave
xchg
popf
in
mov
aam
mov
lock
not
pushf
sbb
pop
xchg
and
fs
mov
mov
addr16
cmc
test
cs
sti
xor
out
pop
stos
inc
popf
rep
cmp
imul
movsb
push
rclb
cs
and
fdivrs
or
cmp
ds
insw
adc
push
inc
cmpb
xchg
cmp
pop
inc
fwait
xor
adc
push
cltd
mov
cmp
stos
add
in
pop
pop
cmp
sbb
xor
adc
arpl
cltd
push
cli
mov
and
add
int3
ret
add
rcl
daa
xor
scas
or
in
test
or
dec
xchg
das
mov
jge
mov
inc
xchg
and
aaa
add
dec
in
lods
push
lock
test
cwtl
cmp
fidivs
into
sbb
clc
cmp
es
cwtl
rclb
cmc
inc
lahf
push
ljmp
cmpsb
mov
mov
push
push
push
dec
add
or
cld
outsl
or
clc
sub
push
lret
sbb
jne
test
stos
inc
popf
rorl
push
inc
jp,pn
lods
push
mov
lock
cmpsl
popf
imul
aad
mov
ds
aas
inc
leave
stos
out
imulb
jno
cmp
loopne
cmp
popf
jns
mov
jmp
test
outsl
ret
adc
xchg
inc
int3
adc
ds
inc
adc
sti
sti
bound
sbb
fstpt
mov
dec
dec
mov
ret
adc
ss
sbb
stc
xor
inc
push
push
outsb
sub
out
orl
push
mov
mov
pop
xor
cmovns
dec
addb
xchg
jmp
imul
out
movsb
in
fcmovnu
repz
push
fisubl
mov
add
add
adc
cmp
cld
lock
sbb
jns
decl
jmp
pop
pop
push
orl
jne
hlt
gs
in
xchg
inc
and
cmpb
bound
int3
jb
push
cmp
jmp
push
sbb
add
and
cwtl
int
out
push
mov
jns
jmp
into
aas
loope
and
xchg
inc
stos
pushf
sub
adc
bound
jp
mov
dec
mov
dec
add
ret
aad
jmp
push
iret
jne
or
jae
in
imul
xchg
or
cmpl
into
xchg
jmp
in
inc
ffree
inc
or
test
mov
push
ds
mov
shll
xchg
rclb
mov
adc
mov
cmc
lock
clc
xchg
scas
sbbl
lock
les
daa
or
mov
cmc
add
cmpsl
xchg
mov
mov
lret
in
add
and
jmp
xor
pop
and
sub
jmp
mov
cltd
es
inc
jle
and
leave
xor
xchg
dec
push
out
in
and
cmp
lods
in
cwtl
insl
rorl
dec
daa
mov
xlat
scas
and
and
shr
xor
inc
jns
pushf
sub
js
daa
xor
add
adc
pop
pop
int3
mov
out
insl
adc
xor
mov
mov
sti
clc
pusha
mov
popa
xlat
das
jo
in
sub
sbbb
adc
add
inc
imul
inc
pop
es
mov
add
pushf
je
sub
or
lea
cmp
inc
repz
xor
jp
cltd
xor
pop
dec
jb
lret
jmp
push
lods
dec
fistl
rcll
js
adc
sbb
pusha
lcall
pushf
subl
lahf
cmp
xchg
mov
pushf
inc
pop
scas
add
aam
cmp
jno
js
nop
mov
mov
pop
xchg
jl
pop
cmc
jns
sbbb
rolb
stos
addr16
jnp
sahf
inc
pop
inc
xchg
fildl
xor
push
out
xchg
aam
loope
cmc
jno
popa
paddsb
mov
cmpsb
mov
mov
bound
xor
sub
scas
push
das
push
push
cli
repz
adc
xor
jmp
stc
sbb
lea
jl
movsl
sub
aad
adc
inc
stc
adc
mov
dec
mov
testb
xchg
in
cmp
cmpsl
pop
xor
and
aaa
scas
in
ret
std
add
je
imul
dec
mov
xchg
out
sub
fsts
or
xchg
stos
fwait
das
inc
cmp
cltd
and
arpl
pusha
cli
testl
int3
mov
fs
inc
dec
xor
les
inc
dec
into
mov
push
cmp
mov
xchg
sub
push
outsl
pop
xchg
notl
sub
jl
or
divl
fstpl
cmp
lea
sahf
sti
inc
sbb
lea
nop
mov
das
sbb
sbb
fbstp
aam
adc
popf
sbb
dec
out
pop
and
adcl
fidivs
inc
and
lock
mov
loopne
mov
mov
dec
push
lahf
mov
fisubrs
push
lret
or
pop
shll
mov
cltd
push
orl
cmp
pop
ret
int
jbe
cmpsb
mov
push
pop
xchg
jbe
jecxz
scas
ljmp
testb
xchg
add
mov
pushf
push
fs
cmp
sti
dec
xchg
inc
lds
and
pop
das
sahf
mov
out
stc
mov
xchg
xor
jo
jbe
mov
nop
enter
mov
jb
ret
cmp
push
mov
mov
xor
adc
cmp
push
mov
in
movsl
fldt
scas
enter
fucomip
es
dec
dec
mov
test
xchg
call
inc
inc
loop
pop
pop
mov
jno
inc
out
xchg
out
inc
mov
add
mov
movsl
mov
mov
sub
fsubrl
ss
sti
jno
iret
mov
pop
lret
cli
clc
and
dec
int
rorb
push
xor
lret
mov
outsb
inc
rcrb
insl
dec
sub
hlt
fadd
xchg
mov
xor
mov
or
push
adcl
imul
ss
xchg
fbstp
sbb
pop
push
jo
sbb
pop
jae
enter
aad
cmp
pop
adc
add
leave
outsl
cmpsb
push
lcall
push
cmp
pop
mov
adc
xor
inc
mov
aad
xchg
or
iret
sti
icebp
or
push
fdivr
test
out
fldcw
xor
xor
add
int3
xchg
inc
xlat
stc
out
push
rorb
jle
fisubrs
pusha
add
cmpsb
bound
dec
test
loopne
jb
pop
and
dec
or
add
leave
mov
pop
ss
icebp
in
inc
add
and
data16
cmc
imul
mov
sbb
xchg
and
jecxz
mov
insb
xchg
sbb
sub
lock
loopne
cwtl
lret
xor
or
push
mov
dec
in
mov
lcall
movsl
lret
daa
mov
sti
inc
and
repz
cltd
mov
mov
testb
fwait
push
sub
pusha
inc
aas
stos
test
arpl
adc
or
stos
inc
pause
or
mov
faddl
mov
test
push
add
add
sbb
out
cwtl
andl
inc
movsl
into
das
lea
add
je
dec
or
add
out
mov
sub
stc
idivb
cltd
stc
test
jle
fstpt
ljmp
hlt
or
jno
sbb
pop
mov
xlat
push
push
xchg
in
dec
insl
lcall
xchg
inc
and
test
jmp
or
pop
insb
ss
jo
or
xor
dec
subl
gs
push
mov
cmp
enter
es
outsl
jb
mov
test
mov
jge
xchg
test
mov
fs
cmpsl
mov
mov
cmc
mov
cltd
push
sub
sub
and
mov
or
iret
fwait
mov
fisubrs
sub
bound
cltd
aam
cmp
nop
insb
cmp
iret
enter
xor
and
rolb
dec
setb
xor
in
mov
aas
dec
imul
fistps
repnz
jno
and
mov
mov
xchg
repnz
xchg
mov
push
or
out
and
sbb
mov
jnp
popf
cmp
pop
cmc
xor
sub
arpl
fldenv
lea
jno
mov
dec
ljmp
add
xchg
xchg
mov
rcll
lea
insb
mov
fsubs
cwtl
imul
in
sbb
sbb
push
pop
pushl
mov
scas
jg
in
les
push
adc
adc
es
rol
outsl
pop
rolb
jmp
popa
xor
mov
adc
out
aas
scas
shl
jge
mov
pop
mov
movsl
jbe
lods
cmp
dec
add
push
add
xchg
or
mov
mov
xchg
xchg
jae
adcl
push
lods
hlt
inc
jns
inc
sahf
or
sbb
bound
ret
lods
daa
pop
xorl
jge
adc
lcall
jmp
mov
lahf
mov
shr
inc
ljmp
sbb
and
xchg
dec
xor
add
out
push
mov
cmp
int
fwait
repz
or
push
clc
add
push
ja
and
ret
mov
mov
push
cmp
adc
inc
fucomip
mov
in
mov
mov
cmp
repz
dec
mul
mov
inc
pop
popf
ror
jb
add
in
imul
push
xchg
adc
jmp
dec
add
jecxz
mov
orb
or
inc
js
pop
dec
adc
dec
mov
xlat
xchg
enter
imul
fwait
pop
int
leave
jno
dec
jnp
hlt
lret
push
fisubs
sub
mov
add
push
add
std
adc
mov
cwtl
add
inc
adc
outsb
cmp
and
enter
jmp
aam
in
test
sbb
in
repnz
push
leave
lret
fidivrl
mov
dec
decb
push
aas
push
cmc
addl
insb
mov
dec
push
and
lahf
lods
jmp
mov
mov
les
loop
rclb
imul
mov
add
js
inc
jmp
inc
mov
or
dec
enter
negb
mov
out
test
sbb
cmpl
cltd
scas
stos
js
cmp
add
or
ds
mov
pop
cli
xchg
out
sbb
pop
imul
js
xchg
inc
roll
mov
or
sbb
mul
dec
and
testl
arpl
mov
ja
sbb
int3
lock
arpl
mov
scas
mov
push
jle
lahf
adc
imulb
data16
je
xchg
out
jp
pushf
jl
dec
rorb
sub
std
lret
add
mov
add
xchg
rcl
jne
incl
movsl
fwait
dec
push
sbb
cmp
out
mov
push
jb
push
enter
mov
inc
lods
js
arpl
mov
fisttps
cli
sbb
ds
loop
loope
mov
enter
fidivrs
mov
nop
jb
fcomi
cmp
cwtl
jp
negb
add
push
mov
femms
cltd
pop
testl
nop
loopne
fldt
sahf
dec
and
lahf
adc
pop
sti
dec
ds
into
mov
add
mov
xchg
sbb
jecxz
aas
popf
mov
cmpb
stos
lods
test
sbb
adc
bnd
mov
adc
fcompl
scas
push
jb
push
and
jle
leave
mov
xchg
dec
xor
iret
pop
add
gs
or
jno
shlb
leave
jno
inc
jle
xor
and
js
adc
xchg
or
neg
xor
sbb
pop
cmp
jmp
inc
add
mov
bndstx
sub
jmp
push
lahf
mov
mov
negl
xor
dec
mov
hlt
cwtl
mov
loop
fwait
adc
mov
shll
sub
ret
icebp
jae
lock
push
movsl
mov
sbb
ds
hlt
pop
dec
sbb
fistl
push
aad
movsl
jns
jno
jo
cld
inc
push
add
outsb
iret
aas
adc
call
lcall
push
repnz
mov
mov
xor
lods
jo
adc
shl
insb
aam
shlb
jle
aaa
in
mov
jge
faddp
nop
loop
or
mov
pop
mov
dec
movb
jecxz
dec
or
cmpsl
jno
xchg
cltd
shlb
lahf
xchg
rorb
cli
mov
xchg
repz
rolb
inc
mov
ds
jge
movsl
push
ret
jo
cmp
in
or
roll
out
jle
pop
je
out
jo
cwtl
in
call
lcall
pop
test
or
jbe
loopne
mov
ds
popa
fcmove
in
dec
bound
cmp
xchg
scas
stos
xor
idiv
in
xchg
fsubrp
jno
xchg
add
cmp
sbb
addl
pop
xchg
into
cmp
aas
movsb
inc
loopne
rorl
xchg
addr16
sbb
ficoms
dec
lods
push
pop
mov
inc
cmc
subl
and
mov
cmp
dec
xchg
mov
add
mov
out
outsl
fidivs
xchg
and
loope
test
cmpsl
or
xor
jb
not
pop
adc
jb
jle
popf
dec
xchg
aaa
test
imul
mov
pop
in
daa
push
push
bound
outsl
ja
pop
adc
xor
addr16
in
and
icebp
hlt
sbb
cmp
pop
dec
dec
sbb
popw
pop
mulb
jo
push
jne
xchg
push
lcall
mov
mov
xchg
sub
out
pop
pop
mov
and
xlat
loopne
shr
xchg
movsl
push
rorl
fisttps
ffreep
lcall
push
pop
bound
je
xchg
scas
dec
data16
dec
mov
js
pop
push
pop
cld
sbb
adc
sub
and
clc
mov
sub
int
xor
inc
leave
or
dec
jl
mov
jae
pusha
mov
pop
scas
xlat
lahf
xchg
movsl
xor
push
adc
cmp
or
ss
addr16
in
pop
popa
cmp
xlat
in
and
popa
push
pusha
cltd
pop
pop
aaa
fisubs
out
mov
adc
in
jmp
push
ret
sub
or
lahf
lret
into
mov
cmp
mov
sub
pusha
and
sub
cmpsb
test
xchg
ret
jno
xchg
subb
gs
xor
in
mov
sbb
addb
sti
mov
cmpsl
and
mov
cwtl
pop
and
mov
out
leave
fisubrl
add
fisttps
push
add
stos
jb
pop
inc
iret
sahf
mov
faddl
inc
shlb
jle
sbb
sbb
ljmp
and
push
scas
inc
lds
mov
lods
loop
stc
xchg
xor
cmp
jge
adc
outsl
push
into
mov
int3
insl
addr16
ret
int3
clc
mov
divb
decl
std
nop
xor
lahf
and
in
push
xchg
pushf
sarb
dec
or
std
inc
push
xor
andl
push
hlt
fcmovb
pop
mov
loope
ret
mov
or
incb
loop
mov
push
pop
pop
pop
repnz
dec
data16
mov
hlt
pop
das
fstl
add
add
xor
dec
sub
mov
dec
push
jmp
cld
mov
repnz
aas
jecxz
mov
int
test
mov
and
popf
addr16
xchg
in
xchg
mov
fdivl
dec
ja
push
mov
mov
jmp
mov
ljmp
mov
lea
cmp
sub
xor
push
pop
add
ljmp
pop
sbb
ret
inc
and
int
push
cmp
lock
push
fwait
adc
jns
dec
lds
sub
icebp
sbb
out
jmp
xacquire
mov
insl
push
daa
movsl
cmp
jg
cmp
inc
push
xlat
cmp
int3
inc
jcxz
not
cmpl
or
push
sbb
ds
int
xchg
lock
flds
mov
ss
movsl
test
pop
inc
lods
sub
xchg
adc
outsb
movsb
in
lock
rolb
jno
and
dec
into
sub
daa
repz
jle
subb
mov
lock
in
jbe
push
rclb
movsb
dec
imul
jno
push
mov
mov
mov
sbbb
clc
xorl
pop
pop
pusha
stos
insl
xor
rcrl
data16
xchg
and
insb
mov
dec
iret
and
push
mov
mov
or
into
cmp
lods
xor
aas
es
aam
cld
lret
sbb
adcl
inc
subl
int
bound
push
inc
cmp
mov
scas
popa
or
lods
stos
in
fdivrl
cmc
int
dec
xchg
and
adc
and
jae
jnp
cmpsl
adc
nop
or
mov
dec
roll
out
into
test
sbb
dec
cmc
mov
jle
xchg
inc
scas
inc
imul
or
or
fisttps
leave
push
mov
pop
call
mov
lcall
jno
or
int3
pop
sub
pop
enter
mov
arpl
push
sbb
rcr
mov
enter
or
and
pop
mov
or
outsb
sbb
call
andl
inc
clc
andb
cs
mov
mov
mov
pop
and
adc
gs
data16
mov
loop
sbb
cmp
data16
sub
mov
hlt
loop
sub
or
popa
mov
test
jno
lret
push
jbe
mov
insb
scas
int
sub
pop
cs
add
in
stos
dec
mov
mov
ss
xchg
push
fs
push
sbb
imul
repnz
stos
sarl
outsl
insb
pop
frstor
adc
sub
cld
push
add
cld
adc
jnp
mov
xor
mov
and
cwtl
lds
xor
sub
add
fadds
or
fwait
push
pushw
in
je
jnp
ja
sbb
fcompl
inc
xor
scas
outsl
loop
sub
adc
push
lcall
int3
out
jb
mov
pusha
or
outsl
nop
push
or
fsubl
ficoms
push
stc
popf
out
xchg
push
or
and
xor
out
pop
pop
int3
mov
or
fists
cmp
insb
aas
sbb
mov
push
das
ret
push
jbe
psraw
sbb
mov
inc
adc
xorl
int3
pop
sbb
xchg
outsl
iret
inc
jnp
fstps
dec
dec
inc
ret
inc
adc
mov
pop
mov
ljmp
or
dec
jno
sbb
add
push
adc
ficoms
mov
adc
js
xor
rclb
stos
inc
addr16
push
orl
outsb
and
sahf
repnz
and
fsubl
test
fwait
adc
clc
test
mov
fnstenv
int3
push
lock
inc
cs
sub
imul
lcall
cld
sbb
mov
mov
idivb
jne
sub
add
and
xchg
mov
mov
mov
sbb
or
jnp
pop
pop
cld
in
or
stos
or
rcll
cmp
pop
sub
sbb
xchg
call
mov
add
xchg
insl
icebp
sub
adc
sti
push
outsl
mov
pop
pop
cwtl
fucomi
jp
cmpb
xchg
mov
aaa
int3
and
xor
xchg
push
fistpll
mov
push
mov
fisttpl
cwtl
push
mov
add
into
shlb
jmp
cmp
dec
add
rorb
stos
jnp
jb
mov
or
dec
and
data16
pop
inc
mov
or
cmp
xchg
mov
cmpb
lea
push
jo
pop
sbb
je
add
adc
decl
sbb
sub
sub
lret
xchg
test
adc
std
xchg
push
dec
or
mov
mov
ljmp
outsb
adc
xor
lock
mov
sti
adc
cmp
daa
fildl
repz
mov
out
xchg
add
mov
mov
imul
xchg
mov
fcmovnu
push
cld
jnp
ja
ret
xlat
mov
mov
push
add
mov
outsb
add
pop
test
push
xchg
mov
sbb
loope
bound
je
jle
pop
push
cmp
jbe
in
jle
push
dec
fistpl
int
rorl
lret
cmpsl
jae
movb
cmc
fiaddl
mov
hlt
pop
addr16
xlat
mov
cs
pop
scas
xlat
jg
sbb
in
push
js
mov
jnp
mov
test
push
jne
cmp
pushf
cmp
mov
xlat
ss
xor
lahf
or
mov
loopne
popa
mov
int3
cmp
jns
push
mov
sbb
pop
ss
clc
imul
jmp
in
sub
shlb
lock
fs
repz
jp
nop
push
lock
hlt
in
mov
call
mov
adc
ror
adc
out
push
jle
in
push
mov
out
mov
push
fnstsw
cld
testl
and
idivl
enter
mov
rol
shrb
mov
pop
sub
jle
pop
shrl
aam
daa
mov
and
pop
push
pop
push
or
mov
adc
int3
pop
push
pop
mov
pop
cmp
nop
flds
pusha
lret
jae
scas
pop
push
cltd
inc
add
in
out
stos
clc
or
cmpsb
cmp
cmp
cltd
add
mov
mull
adc
cmc
jno
adc
xor
sub
jp
int
sub
mov
repnz
pop
ret
pop
xchg
cmp
jb
lcall
push
cmp
lds
jbe
jl
ror
lea
adc
cltd
cli
pop
das
fwait
lahf
push
enter
outsb
mov
iret
push
jbe
fwait
adc
xor
mov
hlt
mov
dec
jmp
aam
pop
dec
or
dec
pop
cmp
fprem
pusha
loopne
loop
std
pop
mov
loop
adc
rcrl
dec
pop
jg
imul
mov
cltd
jno
sbb
testl
fld1
inc
imul
shl
scas
xor
incb
in
icebp
mov
cld
int
mov
lock
in
scas
testl
pop
fistps
pushf
icebp
pop
inc
cmpsl
cs
bswap
add
out
test
popa
cmpsb
xor
cmp
lret
mov
test
dec
stos
ficomps
fcmovnbe
daa
or
lock
fdivrl
mov
mov
mov
xlat
es
ficompl
add
adc
push
sti
sub
subb
sahf
xor
pop
cmp
stos
jbe
js
xchg
xor
inc
pop
cmp
bound
inc
push
and
mov
or
xchg
sahf
and
inc
add
xorl
and
out
fdivrl
sub
mov
xor
outsl
fadd
stc
inc
mov
adc
pushw
cmpsb
insl
shrb
lahf
jae
imul
fs
mov
or
es
jle
in
test
xchg
dec
push
or
sbb
mov
jl
xor
mov
sbb
add
scas
jmp
jecxz
inc
lahf
clc
test
xchg
add
xchg
push
push
test
pop
mov
fwait
cmp
fs
fdivrl
mov
stc
cmp
add
imul
das
ljmp
xchg
xor
cld
dec
adc
out
xchg
fldl
fstps
jp
data16
aad
fdivs
clc
inc
dec
cmpsb
jns
daa
mov
sbb
cmp
lcall
sti
movaps
or
fninit
cmpsl
adcl
adc
push
iret
mov
pusha
lret
jge
push
aaa
mov
rorl
arpl
or
pop
dec
sahf
or
int
jecxz
jle
sarb
cs
aaa
adc
adcb
idivl
sub
inc
popf
addr16
push
cmp
testb
int3
push
xor
mov
inc
out
fldl
push
sarl
movsb
iret
mov
sub
pop
mov
scas
inc
jbe
loop
clc
or
push
sub
jge
or
sbb
sbb
lcall
or
je
inc
lea
hlt
pop
push
xor
pop
xor
dec
ja
insb
fsubrs
pop
mov
into
ret
cltd
loopne
repz
aas
popa
repz
push
xchg
push
ret
leave
sub
pusha
mov
enter
or
sub
xchg
repnz
cmc
mov
in
jge
pop
orl
shlb
fucomip
jb
pusha
sbb
addr16
lcall
and
pop
add
ja
mov
insb
inc
add
or
nop
fidivl
adc
mov
jmp
rcr
push
cmpsb
and
out
mov
les
xor
outsb
inc
mov
iret
mov
push
cwtd
sub
xor
es
shl
aad
or
mov
cmp
mov
les
popf
and
stos
sub
stos
adc
mov
push
ret
imul
xchg
mov
jo
add
sub
mov
add
inc
testl
xchg
daa
icebp
fnstsw
rcll
sbb
es
shrl
sti
in
xor
pop
test
mov
jb
fs
popa
outsb
xchg
outsb
cmpsb
test
outsb
push
sub
jmp
shll
movsl
jae
ss
add
lcall
fidivs
jg
shlb
into
aad
sbbb
adc
pop
out
fcompl
adc
int
incl
xchg
mov
loopne
stc
int
ret
jno
bt
mov
ss
sub
and
push
xor
enter
add
dec
lock
es
and
in
mov
mov
mov
stos
add
in
push
add
mov
pushf
mov
mov
lahf
jg
lods
jb
clc
jb
test
cmp
lahf
sbb
dec
or
push
fldcw
xchg
sub
in
xor
sub
ret
xor
cmp
sbb
xor
leave
stos
insb
xchg
ljmp
dec
add
mov
test
pop
mov
sub
pusha
sbb
sub
mov
adc
je
sub
push
sub
shrb
xchg
dec
pop
push
shlb
nop
in
outsl
xlat
shll
mov
xor
dec
mov
jns
ss
imul
jp
sub
stc
int
ds
cltd
mov
outsb
test
nop
scas
popa
fsts
sbb
cmp
jmp
out
daa
cmp
out
add
adc
movsb
pusha
lahf
inc
lret
xchg
sti
outsb
add
add
mov
push
out
xchg
test
pop
int3
xchg
add
xor
add
cmp
loopne
jp
imul
sti
xor
xchg
test
stos
mov
loopne
push
fidivrl
cmp
cmpl
movl
daa
or
pop
lock
sbb
je
push
aas
add
xor
add
lock
xchg
ret
pushf
gs
xor
shrd
repnz
in
adcb
or
subb
jno
add
fcoml
mov
jb
pop
cld
xchg
test
hlt
in
mov
or
cmp
idivb
movsb
dec
cli
mov
das
aaa
icebp
adc
xchg
mulb
imul
js
lea
pop
lods
xchg
inc
and
pusha
push
gs
and
js
adc
mov
mov
outsb
xor
testb
dec
jle
shll
mov
pop
ret
out
out
push
std
pusha
popa
out
lds
adc
xor
mov
push
inc
push
add
or
push
pop
pop
push
and
fdivs
sbb
mov
scas
mov
outsl
cmp
push
aas
xchg
cmc
sub
insl
jno
xchg
inc
outsl
rcrb
pop
mov
push
sub
rcr
ror
insb
call
add
lcall
fcoms
add
lret
and
xor
push
cmp
cmpsb
jns
or
and
imul
mov
addr16
popl
xor
lret
push
xor
std
mov
sti
ficomps
mov
dec
cwtl
dec
aaa
xlat
test
scas
or
jnp
add
mov
push
ss
push
fucomip
inc
jbe
sbb
popf
jnp
mov
shlb
jnp
mov
mov
imul
push
inc
dec
xchg
nop
mov
sub
inc
sbb
subl
xchg
xor
or
pop
adcb
sbb
mov
jg
shll
incl
jmp
loopne
mov
add
ss
cmp
pop
dec
or
daa
or
rcll
dec
or
mov
cs
sbb
mov
mov
dec
aad
ljmp
ljmp
push
test
jl
push
ficompl
jae
scas
in
jg
pop
xorb
insl
sub
xor
mov
jns
in
test
aam
jecxz
adc
push
ss
stos
inc
push
in
ja
mov
and
and
enter
inc
push
pop
push
mov
les
adc
push
adc
jg
sahf
es
push
mov
dec
ja
jg
pushf
sti
cmpsb
pop
or
lock
call
mov
les
ljmp
cmpsl
stos
pop
stc
imul
pop
cli
popa
pop
sbb
int
xor
fs
arpl
lea
cmpl
push
ficomps
lds
mov
jne
add
and
pop
lcall
repz
xchg
adc
gs
stc
push
andl
add
arpl
mov
enter
push
nop
icebp
test
cmp
xchg
jae
add
in
inc
dec
rol
addr16
push
icebp
out
sub
test
jecxz
vcomisd
cmpsl
test
add
sti
outsl
jmp
cmp
xchg
aaa
cmp
pop
xchg
shrl
icebp
leave
jae
dec
lahf
cltd
das
pop
xor
mov
fwait
jae
adc
xchg
cmpb
roll
into
neg
and
cmp
add
sbb
arpl
rcll
gs
es
sbb
pop
lods
int
mov
test
cmpsl
ss
mov
pop
inc
xchg
es
fdivrl
dec
mov
dec
jecxz
in
add
jae
xchg
roll
pop
filds
inc
inc
push
cmp
inc
jmp
and
lds
jmp
cmp
jecxz
jg
mov
imul
jp
sbb
cmc
movsb
sbb
cltd
pop
dec
stc
mov
sbb
inc
inc
stos
xorl
mov
in
repnz
jno
hlt
and
movsb
cmp
loop
aas
dec
jb
sub
push
dec
and
shrb
cltd
sub
out
mov
sub
out
out
arpl
lods
cmpsl
lcall
imul
pop
in
xchg
movsl
add
pusha
or
inc
andb
xlat
lods
mov
rcr
xchg
mov
dec
pusha
mov
pop
mov
adc
lea
jnp
les
inc
dec
adc
rolb
dec
pop
clc
jb
mov
xor
jb
pop
sub
jg
sub
xor
xchg
cmp
out
pop
jle
mov
adc
jp
add
xor
pop
inc
sahf
mov
jmp
xor
add
call
sbb
push
lock
mov
in
outsl
shlb
gs
and
hlt
fnstenv
mov
or
ret
jne
arpl
fs
rol
lret
sub
aad
into
lahf
lea
std
push
shl
loope
cmp
inc
lock
mov
insb
sub
cmp
or
aas
push
or
outsl
xor
mov
pop
and
mov
pop
shl
xchg
xchg
orb
out
jge
xlat
or
or
loopne
bound
sub
lcall
loop
cmc
mov
lahf
lcall
out
fwait
push
popa
inc
enter
data16
out
clc
and
or
enter
adc
out
test
enter
repz
or
xchg
pop
jle
into
sbb
cmp
das
push
call
test
cs
je
int
rorl
flds
and
test
scas
pushf
xlat
int3
inc
test
in
jbe
xor
dec
push
call
or
jne
repz
mov
add
inc
repz
fcomp
cmp
mov
dec
pop
lock
cmp
adc
stc
ret
lret
mov
lahf
sbb
push
cmpsl
adc
hlt
popf
pop
mov
movsb
push
mov
push
movb
sub
mov
addl
push
int
inc
xchg
pop
push
jl
mov
sbb
movsl
mov
bound
mov
call
adc
cmp
in
ret
and
aaa
sub
add
sbb
ds
insw
xor
mov
mov
cmpsl
cmpsl
push
roll
test
mov
aad
pop
jle
xor
cmc
push
mov
push
xchg
pop
sub
movl
inc
mov
orb
add
gs
cmp
cmp
xchg
push
leave
inc
adc
jp
aas
pop
mov
insl
push
xchg
leave
pop
pshufw
in
and
mov
lret
pusha
pop
mov
and
lret
out
fsubl
cmpl
stc
xor
iret
lcall
dec
xor
sub
loope
or
fdivl
push
rolb
adc
pop
daa
cmp
dec
mov
mov
andb
cli
lds
dec
adc
pop
push
pop
sbb
mov
push
mov
jbe
add
mov
data16
sti
and
jecxz
jne
jnp
lcall
mov
das
mov
cmp
lahf
mov
call
cltd
inc
aad
jmp
pop
out
adc
fstp
pop
pop
test
outsb
int
and
lret
dec
jle
and
xchg
pop
stos
out
rcrl
xor
daa
dec
push
mov
fsubrs
xchg
fisttpl
mov
mov
mov
push
cmp
and
xor
sbb
mov
in
cltd
jg
fsubs
and
jne
dec
xchg
inc
mov
enter
mov
pop
fsubrl
loopne
push
cli
mov
ret
sbb
fwait
les
mov
sub
in
push
lcall
push
jp
xor
movsb
scas
sahf
jnp
mov
add
gs
scas
rcll
repnz
lret
adc
lds
xchg
jl
xchg
add
sbb
jecxz
insb
mov
loopne
inc
dec
js
cmp
dec
js
lcall
and
sub
push
scas
in
sub
jb
sub
pop
pop
nop
dec
es
cmp
add
mov
xlat
jnp
aaa
inc
inc
scas
fsubrs
shlb
jg
sbb
mov
xchg
sub
loope
std
add
adc
andl
dec
repnz
shlb
cmp
rcrl
jo
mov
das
pop
xchg
shll
add
mov
xor
push
test
and
mov
adcl
mov
fdivr
push
out
cmp
jns
aad
or
sub
stos
pop
pop
adc
loop
fmull
dec
jmp
add
mov
jmp
add
cwtl
sub
loope
pop
or
jo
jns
pop
addr16
js
jle
cmpsb
jmp
jl
xchg
mov
fcom
push
imul
sahf
hlt
jmp
cmpsb
das
rcrb
lcall
cmp
mov
xchg
lret
icebp
xor
mov
dec
push
jmp
les
mov
xor
stos
fidivl
push
enter
in
mov
pop
cld
dec
iret
pop
lret
push
mov
popa
nop
sahf
cwtl
scas
mov
or
iret
aaa
les
loop
lcall
mov
jns
xchg
or
nop
push
into
xor
mov
shl
xchg
imul
hlt
rcrb
sub
mov
adc
ljmp
das
sahf
sar
bnd
push
mov
adc
or
in
ffree
lock
sti
fmuls
cli
loop
cmp
gs
cli
sbb
push
jge
pusha
pop
cmp
xchg
insb
lret
movsb
mov
pop
pop
fwait
mov
mov
mov
ja
jnp
pop
adc
std
cmp
int
test
sub
sbb
lahf
adc
lods
cmp
push
sub
xchg
cs
cli
or
out
adc
fnsave
cmp
mov
pop
sarb
scas
push
xor
pop
js
rcll
sub
ret
rcr
fs
fwait
out
mov
cmp
popa
pop
es
stos
in
xlat
icebp
xor
lea
repz
test
cmpsl
js
int3
scas
mov
lahf
outsb
das
jl
and
insb
loop
dec
notl
xor
cmpb
clc
fsubrs
push
xchg
push
push
lods
mov
fldenv
adc
xchg
lret
fwait
mov
jg
jb
pop
mov
adc
mov
pop
dec
fmull
sbb
cmpsb
movsb
cld
push
repz
adc
sub
int
bound
cmc
loopne
aad
pop
nop
pop
repnz
rcll
xor
mov
jp
inc
jo
dec
hlt
inc
mov
icebp
push
int3
loopne
popa
jno
pop
sarb
ds
loope
rol
xlat
stos
xchg
scas
aam
adc
int
xor
cmp
and
mov
dec
jbe
int3
xor
push
jnp
daa
mov
inc
mov
test
fadds
xchg
and
addr16
jne
cmc
stos
adc
adc
mov
dec
test
fwait
sbbb
test
push
imul
popa
mov
sbb
mov
fistpl
add
rcll
sarl
cmpsb
mov
bound
cld
clc
mov
cmpsl
inc
lahf
adc
mov
xor
push
jns
pusha
mov
test
push
and
imul
popf
inc
xchg
les
sbbb
fs
fstpl
call
fwait
cmp
sub
out
inc
out
push
data16
adc
shr
ljmp
shlb
daa
or
sub
cmp
push
add
inc
shlb
call
inc
int
shr
sbb
jno
fisubrl
test
ret
cmp
push
push
addr16
loop
xlat
out
add
mov
mov
push
insl
push
xchg
cmc
das
or
cmp
lds
mov
scas
imul
cwtl
xchg
xor
cwtl
jge
jl
pop
inc
pop
mov
sahf
push
les
mov
into
add
mov
mov
and
mov
push
adc
mov
decl
clc
aad
fadd
pop
sbbl
mov
rorl
cli
testl
aad
in
sub
ds
xor
int
daa
out
lret
pop
enter
sbb
in
or
jle
cltd
mov
dec
fucom
xchg
vxorps
pop
inc
xchg
mov
sbb
inc
push
xor
inc
je
lods
int3
pop
or
sub
pop
lds
cwtl
imul
adc
mov
jne
fildll
dec
repz
es
pop
dec
mov
aaa
out
mov
mov
jae
sahf
or
fdivrp
leave
stos
rol
cmp
pop
pop
adc
popa
xchg
ret
fistpll
sahf
in
aad
scas
mov
cld
and
nop
mov
jecxz
or
fucom
cmp
cwtl
in
jnp
xorb
psadbw
inc
and
lds
pop
enter
mov
movsb
loop
and
aam
fucom
test
jo
xchg
jg
stos
lahf
cld
negl
dec
fimull
cwtl
fisubs
push
dec
stc
enter
int
jle
pop
mov
dec
adc
and
inc
arpl
cmc
sahf
or
xchg
xor
jno
lods
loopne
lods
sbb
ror
out
faddl
js
sti
inc
jno
xchg
popf
push
in
dec
mov
inc
dec
lcall
fimull
out
pop
xor
mov
scas
adc
in
pop
mov
xchg
mov
pop
cmp
stc
xchg
push
inc
out
add
jmp
cli
repz
arpl
cmc
loopne
inc
nop
sub
jbe
cmp
mov
shll
out
add
mov
inc
stos
sbb
cmpsl
ljmp
cmpsb
push
and
mov
mov
out
test
es
and
scas
sbb
sbb
cmpsl
jmp
popa
xchg
or
fildll
push
adcl
mov
sbb
xor
dec
mov
jne
into
xor
cmpsb
adc
add
dec
add
movsb
mov
enter
jmp
mov
mov
movsb
push
adc
cmp
mov
cmp
inc
out
insl
inc
leave
adc
loope
lret
mov
cmpsl
je
rcll
inc
in
out
lock
mov
enter
lea
in
sbb
push
cwtl
inc
fsubl
movb
xchg
jle
shlb
cmc
bndstx
and
test
addl
adc
or
or
mov
imul
pushf
cmp
dec
mov
sbb
fisttps
fwait
push
inc
std
mov
add
lret
inc
cmp
scas
ds
push
dec
xchg
xchg
movsl
fnsave
ljmp
cltd
pusha
mov
jmp
mov
sub
lret
jg
repz
sub
xorb
pop
nop
adc
xchg
xchg
fnstcw
out
mov
cwtl
scas
adcl
mov
inc
in
mov
push
pop
imul
decb
mov
test
scas
mov
inc
ds
sti
stc
pop
imul
dec
add
sahf
mov
enter
xchg
cmp
cli
out
iret
cmp
lret
stos
loopne
lret
popf
add
divb
les
mov
dec
push
ret
call
inc
jge
shrl
aad
or
pop
bnd
sbb
bound
push
inc
inc
sub
mov
inc
xchg
xor
jns
sbb
sbb
pop
imul
sub
shr
out
daa
popf
stos
fcoml
xchg
adc
dec
lahf
sbb
pop
push
xchg
inc
mov
jnp
clc
dec
mov
mov
rclb
in
xchg
pop
loopne
mov
xchg
popf
divl
insl
fadd
clc
loopne
mov
iret
inc
mov
add
js
leave
sahf
pop
imul
ficompl
jle
sub
sub
sarl
or
daa
adc
popa
repz
or
mov
aas
sbb
out
mov
jne
dec
outsl
jnp
add
mov
add
mov
or
imul
in
lcall
dec
adc
fstp
or
andl
out
js
jno
std
xchg
mov
sbb
sbbl
popa
and
inc
adc
sbb
call
add
push
sbb
jae
sbb
fldcw
push
jecxz
lock
leave
inc
push
mov
repz
mov
adc
lds
push
cmp
test
rcl
leave
inc
nop
repz
push
push
xorl
cmc
xchg
mov
stc
fwait
pushf
inc
stc
lret
ljmp
push
pop
fdivl
shlb
subb
pop
pop
rolb
outsl
out
fcoml
jp
jmp
xor
subb
test
stos
or
popa
sbb
or
xchg
jle
sbb
mov
popa
lock
push
repnz
ja
pop
xchg
movsl
in
subb
daa
pushf
fsubp
jmp
outsb
inc
in
inc
loope
scas
repz
imul
lods
cli
in
aad
dec
aad
cmp
sbb
stos
sbb
pop
add
imul
dec
sub
mov
push
into
das
aad
inc
cmpsl
cmc
mov
inc
fisttpll
push
or
jp
cs
bound
orl
lds
rcrl
fwait
xor
pop
and
add
cmpb
cmp
push
pop
outsb
mov
dec
dec
into
cli
cmpsl
push
push
pop
xchg
test
cmp
pop
mov
mov
xchg
jae
pop
data16
sti
mov
xor
mov
stos
mov
std
cli
mov
loope
or
insb
mov
sti
cmp
lret
cwtl
mov
and
xchg
fwait
cmp
lock
bound
shll
dec
es
mov
repz
push
push
inc
push
pop
pushf
mov
and
xor
cmp
mov
mov
iret
dec
les
imul
inc
hlt
imul
out
push
fsubs
push
sub
jle
gs
sahf
mov
fists
jo
mov
ret
and
cmpsb
iret
xor
jl
pop
or
outsl
dec
lods
data16
adc
sub
ficompl
bound
fldt
mov
push
popf
bnd
int3
sbb
sub
jle
fisttpll
cmc
arpl
pusha
and
sbb
and
repz
rcr
xacquire
dec
inc
in
loope
dec
fists
data16
xchg
push
lret
fcomip
sub
out
xorb
or
cmp
xchg
les
sub
insb
xor
xor
cltd
insl
pop
stos
jle
sbb
das
pop
aaa
xchg
push
mov
lahf
and
adc
xadd
mov
sbb
push
adc
es
xchg
mov
and
jl
scas
push
xor
clc
jle
fs
mov
clc
xor
call
into
mov
adc
movsb
sub
jg
shll
in
icebp
dec
lea
push
sub
and
jmp
mov
push
popf
fisubl
popf
adc
mov
popf
add
inc
push
jle
insb
jo
stos
aas
icebp
dec
jl
jo
sbb
jno
je
jl
jmp
popf
insb
ret
ljmp
ljmp
dec
or
push
inc
shlb
pop
popa
ljmp
cld
fwait
rcrl
push
sarl
add
mov
push
push
and
push
cltd
add
add
das
test
add
jge
dec
jg
push
hlt
add
out
arpl
dec
sub
in
push
mov
jg
and
ss
jp
stos
or
mov
mov
pop
fcmovnbe
callw
js
adc
imul
mov
sub
gs
aad
bound
jg
faddl
xor
das
add
in
and
addb
in
sub
push
xor
xor
xchg
fistl
insb
lods
mov
push
je
mov
inc
dec
mov
and
rorb
rcrl
mov
push
das
xchg
orl
fcmovbe
cmp
addb
roll
dec
lods
cwtl
xchg
gs
push
adc
ja
fld
inc
jle
inc
adcb
dec
shrb
mov
or
orb
add
dec
cld
inc
xlat
pop
fnstsw
push
cmpsl
push
dec
loope
gs
sarl
mov
xchg
xchg
push
stc
lret
cwtl
shlb
xlat
cwtl
mov
andl
pop
push
jbe
sub
out
repz
dec
sub
add
loopne
test
in
leave
bswap
or
or
mov
fucom
add
outsb
movb
imul
decl
mov
cli
lods
or
icebp
addr16
push
adc
or
stos
xor
arpl
scas
inc
out
or
mov
cmpsb
loopne
cmp
orl
pop
stos
mov
test
dec
loope
xor
cltd
rcll
scas
imul
imul
cmpsl
imulb
dec
lods
mov
fistpll
leave
stc
mov
ror
rorl
jg
dec
xor
call
mov
lcall
fnstsw
repz
fst
cmpsb
call
icebp
hlt
andl
mulb
and
mov
adcl
cmp
push
sbb
push
and
pop
ljmp
inc
fdivrp
inc
inc
mov
mov
xchg
ret
or
addr16
push
pushl
ficompl
mov
clc
cmpsl
outsl
mov
and
testl
fiadds
cs
push
loopne
inc
fwait
pushf
int3
mov
test
or
and
cli
pop
daa
into
fdivl
push
rclb
cmp
nop
lea
addb
push
in
pop
cmpsl
mov
mov
bound
and
add
rcrl
gs
and
pop
insl
cmp
int
push
mov
mov
int
dec
sbb
out
mov
sbb
push
xchg
aad
call
mov
mov
jae
mov
push
jae
cmpsl
sbb
fimuls
cs
or
xlat
cmc
jno
sti
xchg
cmp
movsl
mov
imul
jno
das
xchg
jmp
xchg
inc
mov
cmp
stos
sub
xchg
jmp
and
jge
sub
jo
fcompl
lods
lock
sarl
shrl
xchg
cmp
adc
jns
add
push
dec
std
daa
cmp
xchg
fldl
inc
pop
sbb
pop
mov
fs
aaa
ds
test
jo
pop
lods
cmp
outsb
adc
mov
mov
mov
movsl
aas
fwait
inc
in
rcl
pop
cmpsb
fmuls
pop
sub
fimull
fwait
or
sbbb
push
pop
fwait
jl
aam
enter
lret
sub
pop
push
and
icebp
xchg
dec
xlat
adc
pushf
push
push
mov
mov
cmp
cli
adc
rcll
mov
imul
iret
xor
inc
sbb
adc
jae
jmp
fisubrs
inc
fwait
mov
sbb
add
cld
mov
and
adc
or
push
xchg
out
mov
gs
mov
cmp
inc
xchg
out
out
mov
jns
push
mov
ficoms
repz
hlt
jbe
adc
cmp
dec
hlt
aas
and
sub
xchg
or
sbb
and
in
sti
fldt
filds
xor
addr16
fsubrl
stc
push
pop
pop
and
cmc
and
js
hlt
loopne
pop
push
out
repz
jb
fsubrl
inc
push
add
mov
add
into
sbb
addb
cld
push
lcall
sahf
push
lret
or
aaa
lock
mov
jno
bound
cmc
icebp
add
xchg
dec
push
fsubl
insb
lcall
xor
push
movsb
mov
aaa
cmp
ja
imulb
ljmp
cmpsb
jae,pn
mov
in
sbb
repz
cmpsl
testb
xchg
push
fidivs
out
jbe
push
std
testl
mov
je
mov
xor
ret
jnp
stc
cmp
dec
pop
mov
arpl
mov
push
mov
xor
shl
popa
or
push
mull
pop
dec
sub
cltd
xor
push
lret
int
popf
rcl
push
arpl
fcmove
cmp
fistl
push
push
stos
in
fistpll
test
fwait
pop
mov
add
test
xchg
scas
inc
add
sub
xchg
insb
aam
lahf
mov
mov
dec
xchg
popf
pop
lds
cmc
xor
or
inc
test
outsl
mov
outsb
dec
push
jno
pop
je
jmp
inc
lods
fwait
lahf
mov
jno
push
mov
inc
outsb
hlt
jmp
push
or
mov
jnp
sbb
mov
mov
push
push
das
stos
mov
add
movsl
mov
xor
loope
push
jns
add
inc
sbb
add
cmp
test
fcomip
movsl
sub
pop
sbb
mov
ret
mov
xor
dec
or
lock
add
pusha
sbb
cli
pushl
xor
ret
out
fidivrs
sbb
aas
xorl
outsb
enter
mov
push
decl
aaa
outsb
hlt
push
fiadds
adc
ror
inc
movsl
sub
and
test
fildll
leave
pop
icebp
jb
aad
lods
cmp
xlat
cmp
xchg
mov
mulb
add
pop
pop
cmpsb
lds
negl
bound
ja
lods
sbb
ret
fs
test
push
dec
cmp
ja
rorb
js
jno
mov
jp
aaa
aas
shlb
cli
fcmovbe
pop
lcall
push
rcrb
sub
cli
inc
pop
jle
sub
ret
mov
lea
add
stos
xor
or
hlt
iret
pop
int3
pop
pusha
mov
aad
in
fisubrl
je
jge
rcrb
xchg
jno
cmpsl
scas
pop
jl
lods
push
lods
mov
mov
out
cmc
shlb
push
mov
mov
mov
inc
insb
push
sub
sub
xor
mov
pushl
jbe
gs
push
pop
incb
in
cmc
mov
push
loopne
adc
or
jle
movsb
sub
stos
adc
loopne
mov
mov
fwait
jno
scas
ret
div
fwait
aad
jle
cmp
mov
daa
cltd
and
stc
adc
mov
push
lock
aad
pusha
imul
pop
cmp
mov
jbe
inc
inc
movsb
inc
jns
add
movsl
fisubrl
daa
insb
into
mov
mov
push
sbb
lret
mov
sbb
ffreep
mov
dec
ret
sbb
mov
inc
movsl
sahf
sbb
push
lret
cmp
xor
insb
push
int3
shll
adc
outsb
pop
mov
sbb
push
dec
lds
and
aaa
leave
xor
fwait
push
or
movsb
pop
shlb
sub
sbb
sbbb
pop
dec
mov
dec
ftst
pusha
jl
out
and
invd
sbb
sbb
imul
inc
pop
jp
xchg
mov
fnstsw
shlb
xchg
mov
add
or
xor
xchg
xor
cmpsb
mov
in
cltd
in
in
mov
data16
enter
in
out
sbb
cmp
fstpt
test
and
mov
mov
fldt
sahf
or
inc
daa
sti
in
mul
ljmp
shl
push
cmpsl
aas
in
sbb
mov
mov
push
mov
mov
xlat
xchg
ljmp
or
popf
xlat
xor
rcrl
sbb
sub
jo
lods
addb
out
pop
sub
shll
cmpl
push
dec
ret
mov
xchg
enter
fwait
or
mov
mov
ljmp
and
lcall
xchg
sub
test
repnz
stc
addr16
data16
int
insb
mov
push
add
sub
mov
or
lock
dec
cwtl
xchg
pop
in
test
lock
repz
and
xchg
jmp
jmp
loopne
jno
inc
sti
push
out
pusha
xchg
pop
imul
mov
add
cmp
xor
sub
mulb
sbb
xlat
jne
jg
lret
mov
int3
sti
outsl
sbb
fnsave
dec
jae
sub
fstl
sarb
xchg
mov
jns
mov
mov
xlat
jge
sbb
std
inc
popa
and
dec
and
shr
fidivrs
xchg
pop
dec
sbb
loopne
or
movsl
cmp
sbb
xchg
cli
out
cli
cmp
jmp
adc
pop
push
addl
pop
loopne
mov
imul
mov
push
in
aad
adcl
sti
mov
aas
js
push
call
es
jp
sub
ljmp
out
sub
nop
in
sahf
xchg
pop
ljmp
and
adc
aaa
or
lds
daa
push
mov
ljmp
div
out
jo
les
inc
sub
rcll
jge
sahf
mov
ret
inc
ja
adc
shrl
xchg
aas
fcmovbe
fisubl
mov
movsl
xchg
adc
mov
shl
jo
xor
sub
xor
adc
sbb
out
xchg
mov
push
fistpl
xor
mov
sub
and
push
int
cmpsl
push
push
push
testb
adc
arpl
scas
mov
mov
fsubr
fs
imul
hlt
push
mov
pop
cmp
enter
ds
mov
je
mul
mov
xor
mov
jnp
push
or
mov
sahf
arpl
je
insl
fcomip
gs
add
lcall
sub
sahf
movsl
dec
xlat
or
mov
add
or
lahf
fstps
mov
mov
cwtl
push
pop
arpl
jb
ja
xor
xchg
add
pop
dec
xchg
ret
jle
and
jmp
jo
add
add
gs
and
sbb
adc
inc
lods
pop
in
pop
xor
aad
adc
dec
mov
shl
test
mov
push
dec
adc
sbb
fcmovnb
or
adc
push
or
mov
mov
xchg
pop
adc
call
out
xchg
cmp
push
push
cmp
stos
mov
and
fbld
xor
mov
jne
lret
sahf
mov
fcoms
xchg
imul
xor
mov
pop
push
cmpsl
mov
jmp
outsb
jl
jecxz
sbb
enter
add
call
enter
or
pop
cmp
test
filds
cmp
sbb
cld
jnp
pop
sbb
pop
add
pop
faddl
mov
inc
orb
inc
popf
lods
push
outsb
lret
xor
stos
inc
xchg
mov
addl
push
lret
cmp
into
sbb
dec
xor
lcall
cli
out
inc
sbb
rcll
loopne
jbe
in
or
lods
lods
cmp
adc
push
jg
inc
xchg
mov
dec
shl
fildl
adc
sbb
xchg
jp
jl
xorl
mov
stos
outsb
inc
xor
in
xchg
mov
jbe
movsl
jp
adc
out
dec
sub
shl
cmp
movsb
push
sbb
mov
mov
dec
push
das
and
mov
dec
ficompl
bound
leave
fidivs
mov
or
in
loop
fiaddl
fisttpll
xor
jg
ds
dec
add
xchg
mov
mov
mov
js
shll
dec
push
hlt
push
dec
sahf
lahf
dec
inc
cmpsl
icebp
loope
sahf
adc
jle
fimull
ss
inc
mov
ja
test
mov
inc
inc
adc
cli
sub
shl
mov
push
sub
cmpsl
add
int
call
ret
mov
mov
jl
jo
sahf
lods
rcrb
pusha
repz
notl
or
popa
popa
test
jg
pop
adc
dec
or
addl
sbb
mov
psraw
divl
xchg
repnz
push
add
or
push
inc
pop
sub
dec
test
push
cli
ret
mov
int3
insl
mov
movl
mov
lret
or
loop
rorb
mov
add
push
shr
idivl
je
lea
fildl
jb
repnz
cmp
jecxz
leave
sub
imul
adc
or
xchg
dec
push
shrb
js
out
stos
adc
pusha
xchg
jmp
dec
testl
dec
das
in
insb
mov
sbb
mov
leave
popf
mov
loopne
xchg
insl
and
or
mov
cmpsl
mov
ljmp
divl
push
out
mov
cwtl
sbb
inc
mov
pop
mov
xchg
movsl
mov
pusha
jg,pn
xchg
inc
sarl
cltd
and
jne
fistpl
mov
jge
jmp
add
inc
push
loop
mov
fwait
jmp
fwait
mov
xlat
jmp
sbb
out
and
data16
cmpsl
cmpsl
mov
cmp
les
adc
or
jmp
push
cmc
mov
xchg
das
leave
and
pushl
dec
ret
in
lock
mov
fidivs
cld
vandps
imul
psubsw
sahf
and
pop
rcrb
dec
std
pop
fwait
mov
iret
outsl
je
mov
xor
jns
xchg
jg
xor
mov
sub
inc
int3
xlat
mov
stos
pop
push
sub
fwait
mov
rclb
jmp
mov
xchg
mov
jl
je
adc
sub
in
pop
test
or
bswap
jnp
leave
jl
js
mov
push
icebp
dec
cwtl
leave
or
sub
setb
popa
jae
jl
pop
jns
and
push
js
cs
fsubr
js
scas
call
push
sbb
xor
aaa
pop
jp
mov
lock
jno
jmp
mov
cwtl
mov
gs
pop
sbb
mov
test
insb
mov
pop
mov
add
push
ss
mov
mov
fidivl
jmp
lds
xor
cmpsl
cmp
scas
xorb
loop
pop
jmp
shrb
iret
rclb
out
nop
imul
mov
leave
stos
call
mov
push
aas
into
shlb
sub
insb
imul
sub
and
daa
mov
inc
sub
adc
xchg
rorl
jns
mov
fildll
mov
adc
mov
lahf
push
jmp
in
mov
insl
ss
shrl
scas
mov
fldl
aaa
cmpsb
mov
mov
nopl
cld
push
xchg
jp
jbe
std
adc
adc
mov
cwtl
pop
cli
or
outsl
mov
push
subl
mov
mov
jl
xchg
lret
nop
sub
stos
fs
pop
sarb
adc
rcr
dec
sbbl
sub
sbb
pushf
aad
mov
call
jp
aaa
std
mov
in
test
add
dec
iret
cwtl
xor
leave
or
mov
movsl
cmp
js
cvtps2pi
sub
mov
push
mov
ret
cmc
ret
xor
out
shrl
pop
sub
shll
mov
mov
int
jecxz
dec
or
dec
sub
das
sub
cli
pop
popf
lds
adc
adc
lock
in
mov
ret
or
aas
cmpb
sar
mov
ror
cmc
outsb
inc
cmp
inc
mov
es
xor
out
sbb
jb
imul
xor
aaa
adc
subl
sbb
repz
jecxz
std
rcrl
fucomip
xchg
jo
or
mov
mov
mov
sub
sar
test
xchg
mov
jg
dec
and
dec
cmp
fs
std
arpl
sbb
test
je
scas
fisttpl
push
dec
sub
push
jg
inc
dec
mov
add
lods
mov
lea
ljmp
mov
adc
rcll
icebp
mov
mov
ljmp
ret
rorl
mov
cmpsb
rolb
out
mov
sub
fistps
sub
ljmp
int3
pushf
ret
stc
inc
push
mov
xchg
add
or
inc
pusha
mov
mov
pop
fldcw
jp
fisubrl
mov
aad
les
mov
ljmp
in
dec
cmpb
out
jmp
push
aam
gs
cmp
adc
out
mov
pop
bound
push
push
sbb
or
xchg
popf
loop
pop
mov
ljmp
imul
shr
lahf
clc
fistps
cmpsb
pusha
push
fnstenv
and
ret
xor
and
sbb
and
cld
dec
add
dec
pop
xlat
inc
leave
in
notl
mov
test
into
mov
lea
mov
lret
pop
fstl
mov
push
dec
movsl
adc
jno,pn
cmp
bound
xchg
inc
push
fisubrl
adc
add
pop
adc
add
dec
stos
ucomiss
lea
lcall
add
mov
adc
inc
xor
push
movsb
or
adc
andl
sub
jg
mov
pop
lret
cmp
es
aad
mov
xor
push
bound
bound
mov
insl
in
shr
push
leave
sbb
pop
popf
pop
pop
or
cs
add
xchg
scas
mov
mov
pop
shlb
test
mov
mov
stc
push
orl
push
fistpl
xlat
pop
outsb
pop
lds
pop
and
pop
push
test
mov
jo
enter
mov
jg
xchg
inc
ss
sbb
lret
addr16
xor
loope
xchg
and
dec
mov
lods
loopne
dec
cs
nop
sub
mov
aas
std
bound
pop
push
sub
cli
jp
ljmp
sub
cli
mov
cld
mov
cmovnp
imul
out
xchg
xchg
or
movsl
cmp
and
adc
cltd
jmp
push
sub
stos
push
xchg
outsl
gs
fsubrl
or
inc
test
mov
mov
nop
push
mov
pop
or
pop
mov
mov
xchg
rolb
mov
notb
lret
lods
or
push
adc
popf
lods
into
insl
inc
and
jecxz
stos
pusha
sbb
repnz
test
das
nop
leave
divl
jecxz
mov
addl
in
sahf
jae
sbbb
mov
mov
shrb
inc
idiv
lahf
jne
push
adc
lods
push
das
adc
imul
das
lret
push
jns
xor
leave
rcrl
stc
push
nop
jns
mov
imul
fcmovnb
mull
ret
outsl
jmp
stos
sahf
xlat
push
ficoms
cmp
ljmp
out
mov
sub
push
loope
push
insb
push
call
scas
into
adc
inc
xor
jp
cmp
push
aas
adc
fmuls
fildll
incl
pop
pop
jne
cmp
test
dec
pop
mov
repnz
jns
add
in
andl
xorl
cltd
cwtl
test
push
jecxz
dec
push
mov
out
lds
cli
loope
fucomi
iret
ljmp
icebp
jge
data16
inc
out
pop
inc
xchg
data16
jae
addb
or
dec
jmp
xchg
add
inc
lods
mov
or
mov
mov
jmp
testl
pushf
mov
mov
das
pop
scas
xor
add
jmp
mov
pop
mov
lds
test
cltd
addl
orb
aas
in
arpl
jo
push
aad
lret
fmull
adc
mov
sub
mov
pop
in
jp
push
loopne
lods
aad
lahf
fsubp
popf
xor
loop
inc
rcr
std
gs
test
outsb
out
iret
cli
sbb
inc
lods
sahf
inc
jge
aaa
iret
pop
pop
pushf
adc
pop
cmp
repnz
xor
enter
outsl
pusha
mov
pop
and
dec
push
add
jg
xor
and
shlb
pop
cmp
cwtl
les
pushf
and
or
cmp
not
dec
fcomps
hlt
in
je
push
test
mov
aaa
bound
in
adc
outsl
jmp
and
test
shl
cs
jecxz
pop
inc
xor
xchg
cli
xchg
jge
mov
xor
xlat
ljmp
adc
scas
adc
sbb
ds
cmp
pushw
lahf
jge
out
popa
popf
cmpl
xchg
jne
repnz
jle
xchg
add
aaa
xchg
negb
test
or
out
sub
jnp
pop
rol
inc
add
cs
xor
jmp
negl
pop
lock
push
add
dec
popf
mov
dec
popf
push
sbb
lahf
icebp
xchg
sub
jge
cmp
inc
sahf
test
add
xchg
pop
insb
dec
xchg
adc
mov
cmp
mov
test
fcmovb
jno
mov
fildl
les
popf
xchg
loop
loope
cmp
pop
inc
adc
pop
or
xlat
repz
stc
or
dec
sub
sbb
outsb
mov
jg
push
cmpsl
loopne
mov
push
jl
dec
pop
jmp
xor
int
push
sub
mov
jg
out
mov
fsubrl
mov
shrb
popf
and
aaa
cli
jno
cmp
icebp
pushf
mov
pop
outsl
addr16
nop
cld
jecxz
jbe
cli
daa
and
ficomps
mov
les
push
imul
outsb
stos
mov
shlb
inc
mov
sbb
fs
fcmovbe
mov
cmp
sub
test
jae
test
and
mov
call
in
adc
mov
adc
cwtl
rolb
flds
push
cmp
adc
and
ret
loope
dec
sub
sbb
dec
pusha
fldl
mov
jne
in
mov
or
ds
dec
jae
xchg
mov
les
cwtd
nop
icebp
lods
fucomp
and
sbb
sub
sbb
cwtl
dec
js
xchg
add
jo
cwtl
jmp
test
sbb
adc
pushf
mov
aam
sbb
cmpsb
gs
and
nop
mov
add
jle
fsubrs
jbe
lret
sub
insl
ljmp
add
xchg
dec
jge
xchg
in
add
mov
lret
shrb
fdivs
xor
and
leave
pushf
sarl
test
push
inc
subb
outsb
lods
adc
aaa
fiadds
popa
pop
inc
xchg
imul
ljmp
xchg
adc
mov
or
subb
testb
mov
cli
enter
test
jae
push
lret
call
out
inc
sti
adc
fcmovnb
push
mov
xchg
iret
test
ds
repnz
pop
out
mov
lock
xchg
mov
sub
out
jne
addr16
mov
cmpsb
in
xor
add
shrl
sahf
jbe
dec
lret
pop
jns
jb
inc
sbb
adc
repnz
xor
add
fdivrp
sub
or
andl
xchg
enter
movsb
popf
cld
arpl
xor
arpl
push
push
mov
leave
enter
push
xor
aam
cmp
das
mov
ror
or
sbb
xchg
or
les
add
fnstenv
sti
sbb
ret
ret
jno
fmulp
loope
inc
not
insb
js
inc
insl
pop
out
jns
out
in
xchg
ret
cmp
loopne
or
xchg
mov
xchg
xchg
jge
inc
lock
stos
repz
adc
loopne
and
shll
inc
add
outsl
xor
push
mov
fsubl
negb
xor
ja
shl
and
sbb
lea
test
pop
sub
popf
cmp
sub
and
hlt
mov
add
push
jne
lret
sub
inc
or
enter
push
nop
push
push
nop
arpl
pusha
push
out
and
ss
imul
flds
int3
lods
rep
lods
sbb
cmp
ljmp
repnz
jnp
pop
mov
push
pusha
shrl
sub
decb
ljmp
cltd
test
shll
test
mov
push
stos
lock
negb
pop
cmp
out
push
cs
outsb
cmp
mov
or
loop
mov
xor
insl
lods
add
scas
xchg
mov
cs
leave
insb
cmp
adc
jecxz
add
adc
or
jge
lahf
dec
fistpl
mov
sbb
push
dec
mov
icebp
sub
sub
jp
sub
xor
cli
in
mov
xor
push
es
aam
pop
cmp
add
mov
stos
mov
movsb
std
push
jb
aad
or
push
adc
push
jl
pop
fstpt
pushf
push
mov
pop
or
cmc
loop
stc
aas
jne
jmp
testl
push
ret
in
out
pop
ret
je
mov
test
pop
or
inc
js
mov
negb
pop
pop
cmp
sbb
jg
js
sbb
inc
xchg
dec
adc
jle
sbb
aaa
mov
cwtl
adc
mov
dec
nop
mov
push
add
insl
mov
adc
rcl
js
je
in
pop
and
dec
insl
cmp
pop
xchg
pop
fwait
stc
arpl
adc
add
clc
inc
imul
jle
pop
nop
out
mov
mov
mov
cmp
mov
gs
cmp
pop
rorb
dec
xchg
adc
sti
ds
dec
popa
out
mov
int3
mov
pop
dec
clc
sarb
push
xor
xlat
dec
push
sub
pop
mov
lcall
dec
cltd
xor
push
imul
pop
sub
adc
int3
roll
sbb
decw
imul
imul
ljmp
dec
pop
add
and
jns
jmp
jle
and
hlt
orb
shll
std
imul
and
aas
ss
mov
fs
push
mov
mov
xor
lcall
jnp
dec
cs
xor
rcll
in
mov
or
mov
fistl
adc
sub
stc
xchg
shrb
xlat
mov
enter
sbb
das
pusha
das
and
cmp
dec
outsl
jnp
adc
dec
mov
into
mov
gs
sbb
mov
mov
nop
or
cltd
fstp
push
popa
rcr
cs
xchg
jnp
test
outsl
or
inc
pop
test
lock
icebp
shl
dec
xor
inc
jo
sub
int3
cmpsl
nop
dec
push
in
cwtl
xchg
test
xor
mov
movsl
adc
std
and
cmp
mov
pushf
dec
xor
aam
enter
mov
pop
out
test
or
sbb
xlat
out
cltd
data16
or
cmp
and
cwtl
jmp
push
out
dec
in
inc
outsb
or
mov
aas
bound
jno
cmc
rolb
popa
loopne
inc
test
sub
popa
call
repz
js
frstor
jge
imul
inc
dec
ljmp
pop
push
pop
push
push
ret
and
rol
add
pop
jno
das
insb
mov
les
jae
pop
and
movsb
or
or
push
sbb
mov
jle
repnz
jp
sbb
cmp
add
inc
push
bound
pop
pop
sbb
aas
xchg
inc
arpl
orl
and
mov
andl
scas
icebp
mov
setle
into
jle
outsb
ljmp
pop
jp
push
iret
repz
js
out
lahf
sbb
out
jp
loopne
fsubrl
mov
enter
cli
xchg
ss
push
jne
mov
mov
negb
adc
les
mov
inc
or
jmp
mov
sbbl
lahf
jae
inc
pop
sbb
sti
fisubrl
mov
adc
inc
loop
xlat
cmp
jns
xor
add
std
dec
add
mov
jmp
shrl
lcall
ja
mov
mov
movsb
mov
sahf
mov
pusha
mov
xchg
ror
int3
push
pop
pop
iret
sub
ja
xor
imul
xor
mov
cmc
pop
mov
int3
push
inc
add
sub
lds
push
pop
mov
ret
pavgb
adc
mov
movsb
lds
icebp
mov
in
inc
andl
mov
popa
pop
jmp
outsb
or
mov
je
cmpsl
cmp
cmp
mov
mov
mov
push
in
loope
mov
popa
mov
aas
popa
jo
rcl
inc
or
pop
adc
or
repnz
mov
lock
cmp
scas
cmp
adc
add
xchg
mov
aaa
adcb
mov
jp
lods
dec
cmpsl
add
insb
and
xor
cmp
mov
cmp
orl
jne
jl
popa
push
mov
icebp
ror
decb
xchg
shrb
pop
das
xor
stos
bound
cmp
and
adc
push
sti
data16
jb
in
enter
pop
cmp
test
pop
orl
add
push
fstpl
movl
imul
rcr
mov
push
jb
inc
dec
fsubrl
jae
rcr
mov
fsubr
scas
push
repz
mov
pusha
fldcw
sub
jg
add
call
fs
sbb
sub
mov
test
xor
push
popf
ffree
imulb
xor
inc
sti
sbb
add
and
xchg
inc
sar
cmp
lret
adc
fmull
les
lret
mov
sbb
jae
xchg
add
aas
or
xchg
fsubrs
mov
pop
add
push
scas
insb
dec
xlat
and
out
jno
nop
xor
out
mov
adc
cmpl
sub
mov
jnp
xchg
int3
pop
loop
mov
movsl
xor
xchg
push
dec
push
cmc
arpl
xlat
push
cmp
rcrb
dec
mov
notl
mov
shll
iret
jbe
insl
rorb
sub
xor
dec
sbb
mov
mov
cmp
xor
int3
mov
popf
fcmovb
in
nop
jecxz
add
mov
add
stos
sub
adc
shll
inc
imul
mov
sbb
ja
repz
insb
lahf
lods
leave
enter
xchg
rcll
repnz
out
jnp
adc
sahf
scas
adc
add
adc
adc
jmp
clc
or
lcall
aam
in
sub
push
in
jae
or
test
mov
jno
inc
sbb
mov
clc
outsl
out
push
lods
mov
cmp
hlt
mov
dec
jg
mov
into
xorl
lods
sub
adc
rolb
jo
orl
cmp
shlb
pop
push
mov
lcall
gs
pop
push
add
stos
add
sbb
pop
test
sub
rcll
cs
test
jg
mov
pop
cltd
xor
sbb
lahf
push
pushf
cwtl
or
mov
push
xchg
sarb
inc
insb
jp
adc
inc
xchg
das
out
mov
lahf
in
sbb
scas
mov
fwait
dec
jge
fdivrs
lods
mov
cmpsl
sub
mov
add
aam
push
fistl
arpl
ds
lds
insb
sub
mov
mov
pop
xchg
lods
jnp
pop
enter
inc
add
or
repnz
sub
xchg
pop
cld
xchg
cwtl
movsb
lea
push
ja
cmpsl
jns
negb
jecxz
adc
in
adc
jmp
popa
enter
negl
lret
xor
xor
stos
mov
mov
dec
sbb
hlt
int3
xor
mov
mov
pushf
jo
shlb
add
mov
repnz
and
dec
inc
in
icebp
outsb
addr16
aaa
mov
adc
arpl
ds
inc
lcall
aaa
mov
sub
or
lret
mov
popa
aad
xchg
mov
lret
in
dec
fildll
cmp
imul
les
subb
inc
lds
adcb
nop
lret
push
cld
dec
jl
mov
movsl
out
jns
adc
aad
inc
sbb
les
iretw
mov
jmp
pop
fsubrl
int3
fwait
sub
pushf
mov
jmp
adc
fwait
mov
fiadds
or
test
ja
sahf
je
mov
pushf
in
pop
sbb
rorb
and
dec
dec
mov
pushl
into
cwtl
pop
mov
xor
xor
bound
mov
jecxz
lret
mov
cmpsb
mov
xchg
inc
jmp
mov
adc
ja
dec
pop
lea
sub
notl
test
aad
call
mov
adc
movsb
cmp
jl
fdivs
xchg
rep
repz
jge
stos
paddusw
push
push
push
and
pushf
sti
jnp
add
in
pop
xchg
movsb
push
cltd
push
sbb
aas
push
adc
jne
lahf
pop
sub
and
jae
pop
cmp
int3
push
testb
jae
scas
cs
and
repz
and
mov
shr
test
shll
test
pushf
arpl
sub
inc
mov
push
add
adc
int3
and
dec
dec
jnp
cld
xchg
int3
dec
pop
imul
imul
adc
add
and
fdivr
lods
jae
adc
sbb
pusha
dec
or
aam
shrb
pop
mov
frstor
adc
sub
not
stos
fstpt
cmpsl
cmpsl
leave
jmp
scas
mov
lahf
add
enter
sbb
popf
outsl
inc
shrb
push
inc
loopne
mov
inc
stos
stc
jle
int
inc
rorl
add
mov
xchg
push
jae
aad
adc
gs
sar
pop
scas
dec
mov
nop
sahf
out
insl
mov
ja
dec
sub
jbe
out
or
add
push
out
lds
mov
popa
jns
add
jecxz
push
out
xchg
test
sub
aas
adc
push
int
test
add
jb
pop
push
pop
movsb
stos
sub
mov
test
dec
aaa
icebp
sbb
cwtl
aas
adc
outsl
negb
jno
aas
test
jbe
mov
orb
fcmovnb
push
mov
inc
je
test
add
mov
test
stos
imul
fmull
mov
push
jmp
test
push
add
mov
and
sti
xchg
pop
mov
rdpmc
mov
jae
push
dec
and
cmp
popf
ret
mov
cmp
mov
ss
fsub
in
add
cs
or
cld
data16
fsubrs
fisttps
sarb
ss
and
dec
dec
js
push
arpl
xchg
repz
jle
mov
jecxz
xor
xor
xor
inc
mov
ja
mov
cmc
cmp
jmp
lds
mov
sub
mov
xor
push
dec
test
mov
cwtl
aas
jmp
icebp
hlt
push
push
mov
movsl
dec
push
add
fcompl
das
adc
lock
out
shrl
shl
sub
pop
pop
and
mov
rcrl
pop
or
mov
push
inc
push
sbb
mov
fistps
sub
jne
fyl2x
cmp
rorb
mov
pop
add
loope
iret
and
sbb
iret
push
fwait
jns
test
mov
insl
adcb
and
test
int
out
sbb
ret
shll
cmp
sbb
shrl
add
mov
rol
or
adc
fs
xchg
rolb
inc
arpl
outsb
insb
mov
push
sub
mov
xlat
xchg
cwtl
repnz
sub
xchg
cld
or
loop
xor
es
pop
out
or
std
faddp
or
aam
nop
test
clc
icebp
icebp
dec
xlat
cmp
cmpsl
test
scas
mov
push
inc
or
xchg
outsl
test
pop
cld
cli
add
jns
stos
dec
and
xor
enter
xchg
inc
dec
jns
mov
hlt
cmp
add
ja
pop
cmp
int3
test
imul
imul
out
dec
mov
pusha
jns
arpl
mov
loope
jmp
sub
ret
mov
outsl
popa
pop
add
into
adc
jge
jne
mov
cltd
mov
fildl
fstl
ds
xor
push
divb
mov
or
add
in
cmp
repz
xchg
or
push
inc
inc
mov
sub
inc
cltd
adc
jnp
fwait
xlat
fwait
xor
push
mov
jmp
ror
sub
shlb
jecxz
movsb
mov
jmp
cmp
addl
out
out
or
ja
push
inc
imul
out
sbb
and
add
sub
jp
insl
push
inc
push
arpl
mov
sbb
mov
leave
insb
add
pop
call
loopne
addr16
mov
push
inc
lret
fidivrl
lods
sbbl
sbb
shlb
aaa
pop
cwtl
adc
or
mov
cmpsl
pop
mov
xchg
inc
sub
fnstenv
dec
add
push
xor
stos
pop
push
loop
jl
std
and
jp
stc
jns
jg
aam
or
mov
adc
fsubrs
and
or
dec
add
cld
push
shll
scas
xchg
popf
in
std
mov
sbb
insl
inc
or
int3
jge
dec
lock
jo
cmp
xchg
dec
push
inc
fsubl
movsb
sbb
jle
out
adc
inc
mov
std
xlat
xchg
jp
repz
aam
inc
dec
xchg
sub
enter
adc
mov
inc
sub
pop
sbb
sbb
push
push
jno
xor
mov
sub
inc
std
sub
jae
imul
mov
notl
adc
sbb
add
xlat
push
aaa
insb
sbb
aaa
and
push
or
icebp
decb
int
vaddsubps
xor
scas
add
fwait
xlat
jae
mov
into
test
popf
ret
adc
and
lock
mov
aaa
mov
jbe
ret
push
sbb
xchg
inc
loop
jne
data16
mov
push
ret
mov
and
xor
mov
call
jbe
sbb
xchg
sti
fnsetpm(287
mov
dec
frstor
cltd
rorl
clc
lea
inc
sahf
shll
jmp
add
mov
repz
xchg
push
arpl
mov
ror
add
stc
xchg
adc
push
scas
mov
mov
into
add
sub
push
imul
pop
bound
push
daa
fsub
arpl
ror
fs
es
push
xor
xchg
ss
pop
jl
jl
sub
les
xor
push
lret
inc
cmp
mov
jnp
aaa
or
cmc
xchg
insl
mov
xchg
andb
lcall
jle
cmpsl
leave
mov
ss
hlt
xchg
push
inc
inc
pop
mov
sbb
inc
cmp
dec
xchg
push
inc
dec
cmp
loop
add
fdivl
xchg
mov
or
jb
faddl
push
lods
out
mov
push
imul
out
testb
cld
mov
xor
sbb
sbb
mov
mov
and
cmpsb
cli
popa
mov
jg
sbb
popa
es
push
pop
insb
aam
aad
mov
loop
cmp
dec
mov
push
shrl
les
icebp
test
mov
pop
mov
mov
xor
shrl
dec
jge
cmp
outsl
fldenv
cld
mov
rorl
cmp
lods
ret
repz
fs
mov
push
lcall
call
inc
and
add
mov
and
adc
lea
mov
xlat
or
xor
dec
adc
cli
push
or
sub
sub
call
push
test
mov
adc
sbb
xor
mov
cmp
shlb
inc
dec
pushl
and
mov
loopne
xlat
adc
sub
mov
xchg
shrl
aas
inc
es
jae
mov
xchg
xor
pushf
fcoml
mov
jmp
ljmp
sub
jge
out
andb
sub
inc
dec
lds
xchg
scas
into
icebp
push
insl
mov
sbb
cmpsb
jmp
fbstp
jmp
out
dec
inc
dec
imul
push
pop
ret
jae
ret
cmp
add
lock
cwtl
pop
cmpb
loope
out
mov
dec
xchg
mov
movsl
and
or
or
add
aaa
xchg
mov
insb
rorb
inc
xrelease
adc
jb
sub
sub
sbbl
stos
inc
aam
mov
mov
push
and
cltd
xor
lret
sbb
imul
out
inc
mov
or
bound
cmp
adc
cmp
or
push
mov
add
stos
push
sub
mov
adc
leave
loope
repz
sub
inc
xchg
and
pop
mov
mov
fwait
pop
inc
jge
pop
mov
or
dec
pop
andb
cmpsl
jns
push
inc
jle
loop
push
sbb
bound
cmp
xor
and
inc
mov
leave
lods
and
or
ret
pop
sti
jb
stos
fidivrs
pop
or
push
pop
push
je
cmpsl
fbstp
xchg
lahf
inc
cmc
in
jae
sti
jb
cmp
outsb
outsb
xor
js
ds
mov
xorb
pop
cmp
loope
and
mov
inc
xlat
test
dec
dec
in
scas
adc
adc
loopne
sub
scas
mov
adc
adc
xchg
add
jo
push
adc
testb
int
pop
push
sarb
movsb
adc
adc
hlt
mov
cmp
jnp
popa
imul
pushf
ss
or
ret
sub
cltd
negb
cmp
mov
pop
and
or
sti
push
cld
jns
mov
aad
add
js
sbb
negb
sub
mov
add
sub
or
sub
push
rsqrtps
fnstenv
test
testb
leave
in
xlat
dec
nop
xor
out
xor
ficompl
dec
xchg
adc
loop
jmp
xchg
mov
xor
add
mov
lds
fldenv
mov
ret
push
dec
add
std
aas
cmp
xchg
fnstsw
ss
leave
das
cmp
test
cli
outsb
jne
sahf
dec
es
dec
ret
clc
cmpsb
pop
adc
pushf
push
jg
jl
cmpsl
popa
push
xchg
cmpsb
mov
dec
dec
out
loope
loop
cmpsb
nop
dec
int3
push
movsb
xor
loop
outsl
scas
jl
sub
ret
pushf
cmpsb
sbbw
leave
imul
mov
or
dec
addb
aad
push
add
inc
sbbb
push
cli
loopne
sub
push
call
push
lahf
out
mov
sub
pop
and
ja
jp
sahf
popa
jecxz
push
jl
cs
sbb
dec
and
xchg
ret
rcrb
jecxz
aaa
sbb
jl
into
outsb
push
test
ljmp
lcall
sbb
dec
jne
cmp
inc
cmp
ja
sbb
mov
mov
cmp
ficoms
mov
dec
jecxz
and
data16
or
rorb
xchg
mov
into
out
clc
pusha
xchg
insl
rol
insl
mov
and
shlb
push
mov
lret
cmp
mov
je
push
dec
clc
repz
sarb
out
push
lock
xchg
addb
adc
fadds
rclb
stos
imul
mov
xor
sbb
imul
imul
outsl
repz
lock
xor
leave
in
add
xor
mov
push
ror
xor
pop
mov
xchg
lods
ret
dec
sbb
loope
lods
hlt
cli
out
xchg
repnz
enter
js
xor
jns
gs
inc
dec
shrl
aaa
push
sub
adc
pop
xor
jb
lock
inc
push
mov
cmp
dec
xchg
mov
shlb
xchg
xchg
sahf
sbb
pop
outsb
rcrb
mov
dec
int
pusha
shrl
in
repnz
ss
adc
mov
in
or
in
fs
mov
es
mov
inc
xor
mov
push
sbb
rcr
mov
mov
insb
ss
scas
outsl
xchg
mov
push
mov
xchg
adc
out
lds
or
or
mov
or
out
mov
icebp
dec
pop
cwtl
test
scas
push
xor
out
aad
jbe
mov
pop
push
xor
add
push
push
sbbl
ss
xchg
leave
jecxz
daa
out
sub
lods
xor
adc
xchg
int3
lods
and
loope
pop
and
aam
push
hlt
sub
mov
xchg
mov
pop
jg
mov
imul
aad
xor
insl
stos
and
aad
push
xor
aas
pusha
mov
fs
in
out
mov
addr16
inc
lds
adc
push
jne
je
mov
and
test
push
push
push
ret
add
frstor
out
or
push
mov
ljmp
dec
mov
inc
sbb
dec
shlb
es
fwait
jae
stos
or
ret
pushf
push
push
xchg
mov
sub
dec
out
inc
push
mov
in
jl
pop
insl
leave
jmp
xor
bound
cmpsl
cmp
mov
pop
lods
loop
xchg
sbb
repz
jmp
movsb
outsl
stos
test
jno
mov
and
mulps
and
cmpsl
xchg
aam
int3
fidivs
ret
xchg
pop
and
test
rol
and
outsb
rorb
add
xchg
inc
stos
nop
lods
mov
mov
adc
sbb
or
rcl
rcl
loope
scas
sub
xchg
fistpll
mov
jno
cmp
push
adc
mov
push
loope
cmpsl
jo
loope
mov
cmp
inc
mov
lock
lea
sub
sub
sub
out
inc
in
xchg
cld
mov
and
js
pop
xchg
adc
inc
test
xchg
push
or
xor
out
movsb
les
xchg
outsb
lcall
scas
lods
lds
andb
and
orl
jae
aas
jp
add
push
mov
loop
fisttps
mov
std
sub
pop
lahf
je
mov
or
ljmp
testl
fldl
or
mov
stc
inc
sbb
mull
xor
negb
cltd
adc
mov
mov
inc
jge
jle
xchg
xlat
dec
fwait
cmp
add
rolb
or
cmp
add
or
mov
jno
sbb
in
sub
repz
out
add
push
inc
iret
addb
mov
cmp
xor
lea
int3
rcll
and
inc
insl
xlat
stos
mov
or
adc
mov
sbb
xchg
cmp
jne
sbb
js
lret
std
cmp
push
mov
inc
stos
or
pop
jp
fstpl
cmc
cmp
ret
xchg
loopne
pop
xor
lret
in
mov
stc
sub
or
mov
inc
stc
pusha
pop
ret
mov
movsl
cmp
ss
mov
pop
imul
cmpsl
loop
ret
dec
in
sbb
shlb
mov
ffreep
xchg
repnz
ret
adc
jns
mov
pop
rorb
vmread
js
xor
loopne
loopne
and
dec
dec
cmp
popf
or
std
push
and
xchg
outsl
sub
mov
loope
mov
mov
cmpsb
mov
xchg
bound
fucomi
fwait
dec
cmp
push
push
call
mov
lods
dec
fs
jb
out
mov
pop
in
jmp
jne,pn
and
pop
jb
push
daa
cmp
xchg
out
jp
aas
add
sbb
mov
inc
mov
sbb
popf
scas
inc
sub
or
das
pushf
lods
add
and
pop
push
sub
in
incb
mov
and
cmpb
shrb
outsl
jmp
pop
jge
movsl
jae
add
out
data16
fbld
int3
xor
inc
insl
inc
lods
jge
aaa
arpl
mov
jle
xor
inc
stos
jmp
sbb
lods
jl
xorb
fxch
mov
add
dec
mov
loopne
xor
mov
outsb
fisubrl
dec
jmp
call
push
lret
jnp
add
xchg
in
cmpsb
sarb
arpl
cmp
jnp
inc
xchg
mov
mov
push
ja
add
pop
push
jbe
ret
scas
dec
jle
icebp
imul
mov
jecxz
jmp
shl
mov
shrl
sub
jp
je
or
pop
movsl
push
xor
lcall
push
cmp
mov
mov
cmp
pushl
std
push
movsb
in
or
push
and
insl
std
xor
in
in
adc
mov
jg
and
out
xor
out
lods
cmp
test
ljmp
inc
jg
pop
adc
fnsave
ljmp
sub
adc
aaa
pop
js
outsb
sahf
out
leave
xchg
rcl
ja
cltd
sti
and
jmp
push
inc
addb
out
pop
fistpll
punpcklwd
in
scas
xchg
inc
fwait
and
mov
push
dec
cmp
mov
pop
into
lgs
sbb
out
add
divl
jo
pop
pop
daa
mov
jl
loope
orb
out
cmp
mov
int
pop
lret
lcall
test
pushf
cmp
sbb
inc
call
negl
jns
jo
aaa
xchg
sbb
in
or
lcall
mov
jo
cmc
adc
mov
push
sub
jb
add
sbbl
mov
lock
jns
jmp
movsl
loopne
add
add
and
cmove
fs
xlat
je
in
shl
cmp
insl
pop
lahf
xchg
subl
loope
shlb
out
frstor
fcoms
jle
fcomi
pop
lahf
add
sub
int3
popa
jns
xchg
mov
pusha
fdivrl
or
fists
inc
sub
adc
lods
cmp
lds
movhps
loopne
fdivs
call
js
sbb
lds
mulb
das
xchg
mov
xchg
xchg
icebp
test
fstpt
in
pop
shll
addr16
mov
push
in
roll
fcomps
xor
dec
fadd
lret
out
push
and
nop
repnz
notb
addr16
xchg
jmp
aad
and
adc
dec
sbb
mov
test
mov
hlt
int3
seto
pop
icebp
clc
test
xor
cmp
into
test
inc
and
xorl
push
jmp
out
add
jge
jnp
scas
sbb
repz
arpl
jbe
icebp
and
dec
add
xor
shl
push
jl
fdivs
jne
jmp
daa
call
into
or
fildl
scas
mov
cmp
aaa
xchg
rol
inc
fsubl
enter
xlat
sub
fs
and
ret
xchg
adc
add
jns
daa
bound
jecxz
lahf
popf
add
movsb
xchg
out
fistpll
pop
aad
adc
iret
add
pop
mov
inc
inc
ja
mov
add
call
sahf
insb
cmpsb
fcoml
outsb
outsb
and
shr
call
push
cmp
mov
psubusb
testb
mov
pusha
jno
idivl
and
jmp
adc
daa
mov
insb
mov
sbb
xor
das
sbb
lret
insb
mov
clc
iret
mov
addr16
xchg
jbe
xor
stos
or
push
stos
add
pop
dec
or
mov
mov
ss
addb
subb
scas
loope
and
ja
inc
xchg
shl
sub
les
in
xlat
mov
enter
inc
mov
fsubrl
pusha
jns
lahf
cmp
movsl
pop
fidivrs
pop
mov
xor
jns
mov
push
lods
inc
adc
sub
aad
push
into
orb
cmpl
inc
xchg
icebp
leave
out
aas
dec
into
jb
imull
adc
in
fists
pusha
mov
lock
push
inc
mov
jae
aad
sbb
and
decl
repz
or
in
cmp
push
mov
mov
popf
dec
inc
inc
mov
inc
sbb
data16
repz
mov
repnz
out
scas
inc
out
jl
test
fwait
sub
mov
sub
incl
sbb
idivb
mov
sbb
sbb
xor
push
jnp
lcall
xchg
xor
jmp
xbegin
and
fsubr
cmpsl
xlat
push
and
mov
sbb
aaa
mov
xchg
inc
rcrb
dec
out
mov
popf
push
shl
roll
lahf
in
in
fbstp
call
xor
outsb
mov
popa
shlb
jbe
dec
jge
or
cmpsb
jae
ja
mov
adc
mov
jle
inc
pop
cmc
mov
and
mov
cmp
aam
mov
in
xchg
xor
es
cmpsl
clc
jp
jb
mul
inc
fmull
jae
outsl
cmpsl
jno
into
pop
scas
ret
scas
cmp
pop
enter
nop
movsb
mov
popa
pop
and
adc
add
andb
pop
insb
gs
stc
repnz
test
jg
clc
nop
xchg
cmc
sbb
xlat
ret
mov
xchg
inc
mov
cmp
pushf
popf
pop
addb
jae
stos
jmp
sub
and
loop
and
repnz
lahf
adcb
xor
call
popa
mov
mov
push
mov
in
mov
lcall
movsl
xchg
lahf
adc
dec
fs
jp
in
push
sti
fmull
jno
mov
sbb
int
arpl
cmp
pusha
dec
push
test
adc
pop
scas
mov
inc
fnsetpm(287
xchg
or
push
add
insb
ret
fs
daa
mov
sbb
lods
xchg
cmp
fistpll
cmovnp
adc
nop
out
pop
sub
cltd
pop
cmpsb
aas
sar
movsl
push
loope
dec
ljmp
in
aad
xor
mov
subl
jmp
sub
scas
push
sbb
push
pop
and
cmp
icebp
imul
ljmp
jns
jns
test
xchg
mov
scas
in
mov
push
aad
mov
call
or
cli
dec
imul
add
and
cmpsl
in
cld
sahf
aad
jp
xor
mov
add
cmp
lds
mov
jae
lret
jp
mov
mov
inc
stos
xchg
pop
inc
mov
cltd
in
inc
dec
add
lea
mov
test
fwait
cmovge
adc
out
cltd
push
pop
mov
test
sbb
cli
ss
in
popf
xor
adc
dec
pop
sub
mov
jnp
movsb
mov
cmp
fs
or
mov
sub
cmp
adc
cld
lahf
or
push
dec
lahf
shll
andl
mov
shr
outsb
push
and
arpl
sbb
jo
inc
dec
sub
pop
pop
aad
and
pop
popa
je
mov
pop
jp
pusha
aam
inc
aam
push
pop
add
repnz
cmp
xor
ja
aaa
pop
cli
push
imul
and
arpl
ret
sub
imul
add
and
xlat
and
push
sarb
sbb
mov
test
push
fs
popa
cmp
sbb
test
sub
jecxz
lods
aad
aaa
sub
xchg
jecxz
fimuls
cmpsl
idiv
repnz
out
fdivr
dec
pop
mov
sbb
mov
loop
subb
mov
rol
lcall
data16
sahf
in
sub
sbb
cli
les
mov
xchg
jae
outsl
jp
rcr
xchg
stc
bound
das
ret
jno
hlt
jge
inc
mov
pop
and
andl
test
pop
adc
adc
sbb
mov
or
outsl
pop
or
fnstenv
popa
adc
adc
fdivr
in
daa
mov
xor
cmp
repz
pushf
ss
fnstcw
fs
repz
mov
fcompl
mov
test
xchg
mov
inc
dec
call
lods
and
sub
and
cltd
lock
add
sub
jbe
pop
shlb
js
cmp
stos
mov
dec
les
cli
dec
je
aaa
and
mov
stos
loope
add
xchg
sub
sbb
repz
cmpsb
andl
pop
jg
mov
fstpl
adc
adc
not
bnd
test
push
inc
cmp
push
addr16
xor
shrb
adc
loop
jae
jae
mov
dec
lcall
adc
scas
lret
adc
stos
addr16
scas
mov
imul
push
cltd
push
mov
mov
pop
mov
fucomp
or
lock
or
stos
das
xchg
fcoml
ljmp
jnp
int
daa
imul
cld
arpl
dec
mov
pop
inc
rorl
scas
sub
incl
mov
mov
fisubs
in
dec
mov
push
push
and
sbb
inc
xchg
dec
in
pop
cmp
fldcw
push
mov
icebp
mov
adc
cmp
add
loopne
or
xchg
jo
mov
jb
aad
jns
xor
mov
lock
loop
dec
jmp
pop
and
push
sahf
pop
aaa
insl
cmp
jno
icebp
aam
aaa
cmpsl
xor
lods
out
fistl
loopne
dec
outsl
pop
cmp
pop
sub
and
mov
jno
mov
xchg
mov
jae,pt
gs
test
lock
sbb
push
lret
fwait
jl
and
sub
pop
mov
lods
add
adc
cmc
sub
jbe
jge
imul
mov
popa
xchg
call
nop
sub
pop
push
mov
mov
mov
pop
insb
jno
dec
inc
sub
mov
insl
cmc
ret
shrl
pop
out
mov
mov
push
xor
sbb
lods
mov
sub
leave
add
inc
enter
jnp
inc
ljmp
jae
mov
and
inc
push
orl
xchg
push
ljmp
popf
sbb
test
cmpsb
sbb
adc
inc
decb
roll
mov
xchg
push
mov
fcmovnbe
dec
mov
int
lret
leave
xchg
mov
pop
rcrl
out
into
jns
cld
and
jl
lds
outsl
lods
add
xor
mov
cmpsb
push
inc
adc
ds
sub
mov
ja
ret
test
pop
jmp
pop
pop
sub
cmp
cli
push
add
jle
inc
mov
sbb
sbb
inc
inc
mov
cmpsl
sbb
fbstp
and
roll
dec
mov
out
loope
push
sub
xchg
mov
lods
inc
sbb
adc
sahf
pusha
cmc
sbb
fmuls
das
sbb
mov
pop
sub
fistps
cli
or
lret
scas
aam
or
rolb
scas
cwtl
add
xchg
bound
xchg
jo
xchg
mov
scas
cmp
stos
jb
adc
lret
pmulhuw
adc
xchg
pop
sub
icebp
mov
je
stos
mov
ror
pop
shrl
mov
inc
cli
sub
out
mov
out
dec
mov
fwait
test
sub
push
xchg
dec
bound
repnz
sarb
js
gs
mov
stc
mov
cli
loop
sti
stc
imul
mov
pusha
lret
insl
inc
push
sbb
jnp
sbb
mov
pop
or
sbb
mov
arpl
sbb
jg
cmp
sub
xchg
mov
push
std
inc
popf
jbe
jb
mov
cld
jmp
aad
insb
int
enter
movb
movsl
addr16
jge
jnp
fcomip
mov
adc
xor
scas
cmc
mov
subb
sbb
mov
jbe
mov
cmp
sbb
in
nop
mov
out
sbb
rorl
push
mov
insl
xchg
js
out
ljmp
mov
jno
test
or
cmpsb
aad
outsb
or
push
sarl
je
lods
lret
int
in
lea
mov
aam
add
outsl
push
aas
dec
stc
sbb
movl
xor
xor
mov
shll
data16
cwtl
in
insl
jecxz
ret
sub
or
inc
jbe
push
mov
sti
jns
sahf
or
sbb
imulb
ljmp
mov
mov
and
mov
push
ss
outsb
hlt
scas
into
call
sub
adc
bound
push
les
cmp
mov
fisttpll
repz
xor
mov
and
in
mov
sub
push
sahf
jge
xchg
sbb
xchg
pop
dec
mov
je
lds
cmc
into
sbb
jecxz
pusha
lock
sub
pop
push
push
out
and
fs
icebp
shrb
fistl
mov
mov
sbb
scas
pusha
test
mov
stc
jl
lret
inc
popa
mov
jle
mov
rclb
or
roll
loop
stos
es
sub
shlb
movsb
js
nop
push
xor
mov
jbe
das
inc
pop
xchg
fwait
stos
or
or
fwait
cmp
ss
inc
movsb
sbb
stc
dec
ret
adc
mov
xor
push
or
fs
lret
fcompl
repnz
adc
rcrb
in
inc
popa
push
and
jl
or
mov
out
gs
popf
and
fwait
ds
ds
out
and
xchg
push
pop
inc
cmp
sbb
bound
aad
repz
mov
inc
inc
lods
cmp
stc
and
push
in
dec
adc
cmp
dec
std
push
push
lret
jb
ss
mov
call
mov
and
loop
lahf
and
popa
mov
mov
pop
subb
fistpll
mov
fimull
fldenv
aaa
mov
jbe
out
adc
inc
add
add
jg
adc
and
xchg
fmull
cs
inc
negl
shrb
in
shll
xchg
cltd
lahf
shlb
shl
bound
mov
push
push
fmull
xor
sti
sbb
scas
mov
into
jb
dec
jp
neg
pop
cmp
inc
xor
sub
push
xor
sub
jp
add
mov
jmp
movsl
fs
cmp
jl
insb
mov
setge
lret
adc
aad
dec
dec
test
rcl
inc
dec
pop
jl
cmp
sub
xor
dec
inc
outsb
cmpsb
dec
aad
mov
dec
and
scas
or
adc
xor
push
and
inc
adc
data16
into
push
and
push
mov
in
push
inc
jne
cs
mov
xor
inc
mov
fistl
mov
push
gs
clc
xchg
imul
jmp
lret
or
or
and
mov
insl
dec
and
movsb
push
xorb
ret
fcmovne
out
stc
std
aaa
xchg
test
in
adc
mov
mov
sarl
test
cld
mov
in
cmp
and
lcall
repz
or
aas
inc
or
lea
js
sti
out
sahf
into
lcall
xchg
mov
adc
mov
cmp
test
cmp
mov
ret
lds
xchg
or
add
cli
cmp
rorl
and
and
stos
repz
cli
pop
out
mov
add
xchg
mov
in
xchg
pop
leave
and
xchg
nop
mov
xchg
jecxz
and
cwtl
dec
ret
mov
add
xchg
mov
cli
xchg
jno
mov
test
adc
cld
or
test
imul
fwait
test
mov
sti
xor
dec
rcr
sub
mov
inc
insl
sub
popf
outsl
lcall
fmuls
fldl
and
addl
outsl
cmp
pop
push
push
mull
stc
mov
lods
sbb
sahf
xchg
dec
insb
movsl
test
jmp
pop
enter
test
ds
jns
jno
inc
xchg
push
stos
sub
fwait
nop
les
sbb
xchg
xlat
movsl
popf
scas
shlb
push
cmpsl
lret
mov
xor
add
ds
mov
out
movsb
outsl
fdivs
mov
les
jmp
lods
leave
mov
stc
daa
insl
scas
mov
sarl
pop
jge
stos
dec
adc
fstl
addr16
add
dec
add
mov
mov
jmp
mov
jg
push
add
scas
pop
subb
les
ljmp
xor
sbb
sub
popl
jbe
cli
fidivrs
cmp
ret
xchg
sub
mov
leave
add
sub
arpl
mov
mov
sbb
dec
or
out
in
iret
mov
jmp
pop
shlb
sub
je
out
jae
adc
aad
pop
xchg
xlat
pop
xchg
test
and
sbbb
sub
iret
lcall
adc
cmp
cmp
scas
aad
outsl
mov
inc
in
pop
jle
or
sub
test
xor
shl
jge
sbb
push
mov
pusha
dec
inc
jnp
xor
scas
cld
lret
inc
pop
adc
repnz
orb
and
scas
rol
xchg
dec
in
inc
in
hlt
stos
or
lods
fnstenv
clc
lea
adc
cmc
jbe
pop
adc
cmp
push
pop
mov
divl
data16
std
out
jp
mov
cmp
cmp
xchg
mov
jne
out
adc
inc
fistpl
bound
jmp
mov
outsb
sbb
popf
out
inc
leave
enter
mov
inc
push
movsl
ret
rclb
movsl
push
mov
sbb
stc
stos
xor
push
lods
jno
loop
pop
pop
sub
out
clc
pop
imul
adc
scas
pusha
arpl
sbb
xor
stos
dec
xor
sbb
jmp
dec
iret
cmp
je
xor
inc
pushf
mov
sub
dec
mov
sbb
cmp
xorl
sub
mov
fcompl
arpl
xchg
in
and
loop
lds
jge
and
andb
scas
pop
loop
mov
lods
loopne
inc
push
clc
orb
adc
jne
testl
push
divb
shr
fidivrs
daa
xor
push
clc
mov
in
add
lds
mov
cmc
in
sahf
jne
jp
xor
mov
push
inc
cmp
xor
rcrb
rorb
sbb
jne
test
loop
mov
test
mov
cld
mov
push
xor
ss
jge
lcall
rclb
aad
shrl
push
push
retw
ret
pop
repnz
mov
cld
outsb
jecxz
outsb
sub
add
out
into
stos
mov
mov
sub
jne
mov
sbb
cmp
lock
inc
int3
in
rorl
ror
js
ret
sub
pop
lods
mov
ds
mov
pop
lahf
adc
popf
adc
push
mov
cmc
xchg
inc
fs
cltd
lods
int
fwait
shl
inc
xchg
lea
mov
repz
push
inc
jecxz
lret
fnstenv
mov
insl
outsb
dec
dec
lds
arpl
lock
jp
xchg
out
enter
test
gs
dec
add
inc
and
xor
sbb
js
and
out
jle
loopne
add
movsb
std
mov
nop
call
and
xchg
shll
loop
jmp
jmp
scas
nop
sub
dec
push
inc
lea
stc
ja
dec
push
push
fld
dec
jecxz
hlt
rcll
call
lret
push
leave
arpl
sub
roll
dec
push
push
mov
sbb
inc
pop
xlat
jecxz
loopne
icebp
xchg
mov
inc
icebp
pusha
xor
enter
sbb
jg
shll
cmp
push
add
shl
mull
cmpsl
repz
jns
dec
test
push
xchg
dec
jl
or
mov
leave
insl
mov
arpl
mov
data16
stc
mov
jmp
iret
fisttpl
scas
int
testb
pusha
xor
push
mov
fdivs
shrl
mov
aas
daa
dec
or
mov
stos
pop
std
les
push
ja
jns
ficompl
xchg
and
fcompl
out
cmpsb
push
push
jne
push
and
lcall
mov
pop
loope
loope
pusha
pop
mov
scas
ret
aam
pop
lret
xor
xchg
dec
into
cmp
sbb
out
jno
loope
lahf
in
decl
mov
jno
push
in
insl
lods
push
icebp
push
int
mov
cmpsb
mov
dec
les
fiadds
or
cmp
lcall
jecxz
cli
mov
jb
or
jle
xchg
jecxz
add
inc
cmp
int
fsubs
push
xor
inc
inc
aaa
divl
pop
push
popl
shlb
inc
or
xchg
pop
jecxz
ret
inc
sbb
insb
cmp
inc
mov
add
add
ds
imul
pusha
or
mov
jg
add
sbb
push
inc
mov
in
jne
dec
cs
adcb
mov
shrb
inc
cmp
pop
fisttpl
lea
ror
sti
in
jbe
sub
inc
xchg
ljmp
sub
inc
dec
xchg
loop
push
fcmove
ljmp
loop
aas
popf
fdivrs
adc
in
push
gs
xor
test
pushf
add
sarb
dec
stos
lods
decb
cmp
aas
xchg
push
xlat
or
adc
ror
pop
dec
xor
lret
xor
cmp
xor
in
xor
cmpsb
insl
mov
adc
out
cld
cltd
or
negl
rcll
xorl
jo
stos
mov
sbb
call
jo
incl
test
fmuls
stc
lahf
add
aad
push
lcall
popf
lret
icebp
and
clc
mov
ss
outsb
data16
inc
das
add
aad
xor
ja,pn
sub
mov
lret
mov
mov
clc
jmp
pop
inc
jmp
in
adc
out
stos
shrl
xchg
mov
jp
lods
mov
and
js
cld
shlb
pop
xchg
jb
and
pop
fisttpll
in
push
dec
push
push
jae
push
stc
or
call
mov
pop
repnz
fiadds
mov
fbstp
sbb
je
in
mov
lcall
in
bound
test
test
push
jle
fcoms
loop
pop
adc
add
dec
enter
adc
jl
push
sbb
ljmp
lahf
or
out
mov
inc
mov
sbb
mov
mov
inc
push
inc
pop
mov
sar
inc
mov
push
cltd
cmp
mov
std
push
pop
mov
bnd
push
push
js
inc
test
adc
fcomi
mov
mov
pop
enter
pop
dec
push
fidivl
jmp
aad
dec
aaa
sti
sbb
repnz
in
push
mov
lret
nop
add
pop
lcall
mov
scas
push
adc
sahf
fdivl
dec
lret
jp
fwait
lods
fnstsw
or
ret
notb
scas
cltd
adc
fisubl
push
sbbl
mov
jmp
and
mov
jb
cmp
sbb
dec
mov
mov
and
xchg
fucomip
inc
or
inc
popf
lret
pop
cmpsb
ret
add
shlb
xchg
lahf
push
and
push
cmp
into
lahf
mov
mov
cmp
jmp
mov
sahf
adcl
jmp
jmp
ja
pop
sub
sub
xchg
lret
mulb
inc
call
pusha
shlb
in
loope
data16
or
push
mov
cmovne
fcomi
shll
gs
pop
sub
sbb
sbb
jmp
mov
scas
add
icebp
stos
popa
js
jno
jg
rcll
addr16
mov
hlt
xchg
cld
add
mov
xor
jecxz
aaa
sbb
in
icebp
adcb
jg,pt
jge
inc
add
push
iret
lock
cmp
dec
in
out
mov
push
xor
lea
push
mov
pop
std
bound
mov
push
in
add
or
cld
cld
sbb
aad
pop
lock
lds
jg
faddl
jbe
loopne
test
imul
adc
out
and
mov
mov
js
push
mov
outsb
mov
pop
add
sub
bound
xchg
and
fnsave
jg
stos
sbb
xor
mov
mov
outsb
mov
dec
out
sahf
dec
leave
inc
jne
cltd
adc
popa
ret
mov
cmp
loope
out
push
pop
mov
push
iret
pusha
addr16
inc
mov
mov
jne
iret
pop
mov
sub
pushf
sbb
mov
pushf
adc
adc
fisttpll
popf
jge
and
xchg
pop
addl
xchg
sahf
nop
push
pushf
xor
insb
fwait
mov
jae
mov
arpl
or
inc
shr
divw
repnz
push
imul
outsl
dec
lods
jmp
add
inc
rcr
aad
repz
out
mov
fistl
push
or
xchg
insl
cmc
xchg
pop
sbb
arpl
inc
fldenv
lcall
dec
mov
mov
addr16
rol
add
jno
cmp
push
mov
fwait
or
mov
mov
pop
jecxz
xlat
test
pop
loope
xor
sbb
pop
adc
pusha
pmuludq
and
incb
push
dec
fdivs
xchg
mov
icebp
xchg
pop
dec
not
sti
int
xor
dec
jecxz
sbb
gs
ljmp
ss
sbb
iret
dec
sub
mov
push
jne
enter
mov
clc
ja
es
xchg
jno
push
pop
xchg
add
repnz
cmpsb
mov
aaa
stos
cmc
sbb
xchg
lods
pop
je
or
jge
and
std
jo
adc
jecxz
addr16
clc
daa
mov
loop
ret
mov
leave
outsl
adc
cmc
add
cmp
or
jns
jecxz
pop
cld
sbb
add
adc
xor
je
push
cmp
stc
jecxz
int
scas
inc
mov
popf
movl
or
cwtl
inc
or
mov
mov
cmp
push
mov
rcll
lds
mov
rcl
popa
mov
jle
mov
xor
xor
pop
cmp
fidivrs
jp
ret
cmp
aaa
mov
adc
imul
repz
cmpsl
std
aam
jle
imul
mov
adc
rcrb
adc
jg
mov
loop
jbe
int
and
lcall
iret
repnz
cli
repnz
mov
inc
call
mov
inc
adc
cmp
inc
popf
dec
sub
test
aas
mov
leave
sbbb
add
inc
cmc
scas
mov
scas
jmp
mov
xor
into
test
xorl
mov
inc
xor
push
outsl
sub
lds
nop
lret
popl
into
adc
ljmp
inc
dec
mov
fnsave
mov
xchg
lcall
jp
roll
xor
shll
into
push
or
and
int3
cmc
pop
and
push
mov
xor
jge
movsl
jge
loop
movsl
jmp
push
faddl
aam
shl
xchg
aas
inc
or
and
add
cmpsl
popf
cmpsl
lods
push
mov
add
mov
jmp
push
data16
inc
out
sub
dec
das
sbb
sti
ljmp
push
or
subb
mov
ljmp
pop
or
scas
jg
mov
xchg
lock
dec
ljmp
out
cmp
mov
aad
ja
lea
xchg
jo
mov
mov
adc
sub
sbb
and
inc
push
insl
std
lods
test
je
lahf
dec
cmp
adc
movsb
adc
push
aas
sbb
cli
push
in
jge
push
jns
imul
adc
mov
movsb
mov
jg
pop
imulb
enter
dec
or
test
sbb
dec
or
xchg
outsl
xchg
push
or
test
in
add
std
lds
sbb
in
out
jnp
lea
xor
lods
es
outsl
scas
hlt
fwait
inc
mov
lea
addl
adc
jle
in
scas
lds
call
xchg
mov
popf
lret
jo
je
loope
rcl
fildll
inc
fwait
sbb
or
jne
jns
or
daa
hlt
pop
xchg
and
fdivr
out
jae
and
mov
mov
and
jg
adc
xor
mov
xchg
rorb
loopne
adc
jb
shrb
inc
loopne
xor
mov
sbb
lods
out
sbb
mov
jl
inc
repz
aas
outsl
or
jmp
mov
in
fmul
jae
sbb
repnz
shl
mov
cld
mov
sub
cmp
dec
cmp
or
jns
sti
adc
mov
data16
cmp
lret
int3
out
pushf
inc
arpl
insb
fisubrl
xchg
xlat
icebp
lods
bnd
test
sbbl
mov
scas
push
mov
xchg
shll
lods
cmp
pmovmskb
mov
divb
daa
push
inc
jns
dec
xchg
jp
xchg
das
jle
movsl
mov
fnstcw
enter
dec
pop
bound
stos
lcall
push
js
inc
xor
movsb
inc
pushf
xor
aam
add
jnp
arpl
repz
mov
dec
hlt
pop
push
in
lea
push
jmp
loopne
mov
hlt
xorb
cmc
hlt
call
icebp
in
jecxz
xor
and
push
addr16
push
imul
icebp
outsb
popa
xchg
and
insb
test
pusha
dec
ds
adc
aad
and
cwtl
mov
repnz
sar
stc
gs
mov
cmp
sbb
shll
ja
push
jp
fsts
lods
jmp
fcomps
pop
pop
sub
cmp
sbb
lar
movsl
dec
mov
pop
pop
and
mull
fildl
cmp
faddl
add
sub
cmpsb
xchg
sbb
les
popf
divb
into
dec
insl
push
and
mov
xchg
mov
std
jns
sbb
gs
mov
adc
or
or
jecxz
hlt
test
int
ror
sti
pushf
mov
mov
repnz
jo
subb
mov
mov
add
push
push
outsl
cmp
jmp
unpckhps
pop
cmp
sti
cld
movl
icebp
adcl
popa
in
mov
gs
lret
repz
idivb
push
rcll
ljmp
xchg
pop
outsl
out
or
sbb
jbe
xchg
cmp
jmp
iret
xor
in
xor
ja
sbb
dec
arpl
test
mov
aas
adc
in
int
and
adc
cmp
xor
xor
pop
add
or
pop
lret
xor
scas
jecxz
sbb
outsl
jbe
int
lock
ss
mov
rcll
scas
cmp
jne
ljmp
fisubs
push
test
ret
adc
sub
jl
adc
mov
in
outsl
pop
xchg
push
push
sbb
mov
cltd
cs
movsl
push
mov
repz
mov
popa
insb
sbb
and
mov
mov
or
mov
inc
cmp
inc
int3
ljmp
orl
shlb
in
cmp
stc
push
add
mov
mov
imul
stos
in
hlt
xor
outsb
cmpsb
xor
sub
hlt
jno
out
shlb
fsubr
xor
adc
subps
aad
bnd
sbb
and
pop
nop
stos
insb
ficompl
jmp
fisttpll
push
scas
adc
es
insl
mov
xchg
or
push
daa
inc
xor
xor
push
nop
mov
cmc
mov
mov
nop
mov
jmp
sbb
push
subb
inc
jmp
cld
xchg
cmpl
clc
adc
and
push
cmp
repnz
add
mov
inc
mov
cmp
adcl
pop
dec
jmp
test
jno
nop
sbb
jl
add
fchs
xchg
data16
ror
scas
out
or
rcl
inc
cmc
mov
pop
sub
inc
lods
lods
jmp
inc
test
stc
stos
adc
jb
mov
lahf
lods
mov
xor
inc
and
int
mov
sub
das
add
xchg
bound
es
jne
daa
mov
flds
mov
insb
pop
cmp
mov
mov
add
inc
pusha
mov
int3
lret
mov
popl
xor
adc
mov
int
sub
mov
inc
jno
sub
mov
loope
movsl
fimuls
pop
cltd
lods
ds
fmuls
int
and
int
decb
xchg
push
jno
push
insl
fwait
or
mov
mov
push
sub
ret
adc
xchg
ljmp
mov
out
fistpll
es
lret
mov
xchg
outsb
or
sub
adc
mov
dec
sbb
and
mov
sub
xor
mov
and
adc
repnz
aaa
je
int3
jae
fsubrl
repz
mov
clc
fdivr
and
and
cmp
cmp
push
ljmp
sbb
insl
aas
xor
mov
pop
dec
sbb
negl
sarb
push
jmp
mov
inc
les
subl
fisttpl
cmpl
mov
pop
test
bound
testb
pop
sbb
sub
push
mov
xor
push
sbbl
mov
aam
aam
lea
xchg
cmp
fiadds
ficoml
mov
add
fidivs
inc
pop
imul
pop
or
jnp
out
psubd
jle
stc
inc
pop
mov
adc
pop
cmc
aad
push
pop
jp
mov
testl
jno
xchg
jbe
pop
and
pop
jns
or
and
loop
push
out
cs
sub
int3
push
mov
mov
cltd
not
repz
pop
pop
sahf
shrl
adc
pop
ds
sar
cmp
ret
cmp
sub
jno
xchg
pop
push
lret
jle
cmpsl
sub
ljmp
stos
mov
test
loopne
pop
sbb
xchg
and
push
jnp
dec
xchg
xchg
ret
xchg
xor
stos
out
rorb
and
fimuls
loope
jg
mov
dec
js
pop
xlat
and
mov
lods
icebp
sub
sub
jns
clc
loope
je
lret
movsb
cwtl
ja
inc
in
jl
jle
fcmovb
ljmp
cmc
lcall
jne
in
lds
mov
scas
push
and
rolb
shl
xchg
pop
iret
xchg
pop
lods
popf
jl
sub
mov
filds
xchg
mov
xchg
mov
dec
scas
in
xchg
jo
int
pminub
mov
fxch
pop
jge
sub
test
dec
inc
pusha
daa
into
loope
push
pop
sahf
cmpsb
xchg
mov
xor
sarl
push
movsb
mov
fsubs
dec
mov
pop
mov
idiv
pop
xchg
dec
ret
into
movl
inc
jno
mov
notb
fdivs
jbe
push
sbbb
fsubl
ret
mov
int
enter
push
push
arpl
shlb
cmc
mov
into
call
nop
loop
lea
or
adc
in
mov
mov
shr
xchg
push
es
in
scas
mov
arpl
cmpsb
ficoms
rcll
pushf
jle
fstps
adcb
mov
out
adc
sti
roll
mov
adc
pop
mov
into
and
mov
jge
scas
push
cld
lret
xchg
mov
or
mov
adc
scas
ret
xchg
enter
lret
jae
jo
mov
dec
xchg
add
adc
ljmp
pop
xchg
das
mov
cmp
sub
addl
js
aad
dec
test
mov
jmp
scas
jge
sbb
sahf
inc
cmpsl
not
adc
js
fwait
add
stc
popa
pop
inc
es
mov
dec
mov
fstpt
stos
dec
dec
test
mov
scas
xchg
xchg
cmp
roll
movq
jae
repz
cmp
bound
sub
clc
cld
pop
imul
push
loopne,pt
xchg
inc
jp
out
add
mov
xlat
or
nop
fmull
adc
pusha
sti
loopne
arpl
or
lcall
repz
lods
jge
loope
sbbb
mov
jnp
pusha
xchg
mov
jmp
pusha
sub
mov
mov
fsts
pusha
es
aad
lods
mov
mov
cmp
lock
imull
inc
cmpsb
adc
and
loope
lret
loopne
and
icebp
add
cmp
stc
mov
inc
add
fstpl
in
lret
data16
fstl
inc
les
add
int3
pop
and
pop
push
xor
lods
xlat
dec
mov
je
pop
test
dec
sti
push
idivb
test
fistps
push
add
xor
jecxz
std
pop
mov
out
jae
adc
cmp
dec
mov
mov
add
sub
movsb
insl
out
push
mov
xchg
test
mov
pusha
mov
sub
enter
sub
and
pop
loopne
lods
push
outsb
mov
push
xchg
stos
mull
scas
incb
call
sti
cmp
add
aaa
and
hlt
cli
jle
pop
inc
loopne
addb
repnz
jg
mov
in
pop
xstore-rng
cmpsl
add
mov
icebp
push
into
xchg
fstl
cmp
inc
decb
or
push
xchg
rcl
and
sbb
pop
loop
nop
nopl
insb
push
mov
rcr
cmp
xchg
jecxz
mov
sbb
sti
std
inc
pop
push
js
cmp
cmp
popa
cmp
inc
adc
sarb
movsl
and
cmp
cmp
adc
mov
cli
push
mov
popa
pop
pop
mov
sbb
and
mov
faddp
mov
push
subb
push
xchg
cmpsl
adc
test
inc
cwtl
sub
mov
pop
jecxz
sub
test
mov
xchg
pop
mull
setle
jno
fcoms
pop
mov
hlt
push
ljmp
popa
dec
pop
mov
les
sbb
fidivrs
ljmp
cmc
jmp
out
push
xchg
int
sbb
jp
in
cmp
cmp
lods
sbb
jnp
stc
imul
mov
mov
jne
sbb
push
out
jg
mov
std
mov
icebp
xchg
je
push
cld
sbb
push
mov
dec
cmp
cwtd
stc
and
mov
mov
jge
xlat
inc
sbbl
cld
fdiv
sarb
add
pop
mov
sarb
dec
mov
sti
pop
stos
lock
sub
mov
or
rcll
ss
pop
pushf
sbb
out
push
sbb
shlb
repz
je
xor
pop
mov
or
adc
fcomip
mov
mov
sbb
push
in
insb
lcall
mov
xor
xchg
xchg
push
push
in
or
sub
mov
out
out
xchg
cmp
cwtl
pusha
in
lds
pop
mov
mov
jl
jle
mov
mov
and
out
fmul
push
jecxz
mov
or
subb
xchg
ss
hlt
sbb
pop
xchg
ljmp
fiaddl
lods
aad
jg
cwtl
aam
push
cmovnp
cli
adc
cmpsb
push
andb
in
dec
sbb
mov
pushl
mov
push
pop
cmp
out
mov
xor
mov
pop
mov
divb
xor
out
pop
lds
fdivr
jmp
adc
rolb
inc
jge
imul
lods
shlb
xchg
mov
idivl
cmpsb
in
adc
push
sub
xchg
ja
arpl
cmpsb
and
in
clc
add
call
dec
push
addr16
inc
cmp
movsb
enter
pop
or
hlt
pop
xchg
jne
mov
jns
and
or
or
rorb
clc
notl
out
mov
dec
lods
add
or
xorl
mov
rcll
divb
jo
daa
cmp
xor
jae
sub
xchg
or
dec
xchg
xchg
mov
test
xchg
cmp
pop
aaa
fwait
dec
pop
add
or
cwtl
xchg
daa
in
js
bound
mov
lods
bnd
addb
daa
mov
pop
dec
add
jg
xchg
jne
ljmp
push
fadds
ljmp
aas
imul
pop
jecxz
in
adc
mov
loop
push
inc
loop
mov
inc
push
sarl
mov
mov
mov
mov
cld
sub
nop
pop
pop
mov
mov
daa
loop
aaa
inc
out
or
ret
xor
cmpsb
ret
inc
xchg
xchg
ja
into
clc
or
xchg
loopne
ds
ljmp
mov
sarb
jg
popf
mov
mov
idiv
movsl
adcl
loope
jno
sub
pop
push
lret
push
sahf
outsl
mov
inc
movsl
inc
pop
out
mov
and
jno
xor
xchg
sbbl
and
xchg
int
movsb
insb
fcmovne
sub
push
and
jge
push
call
or
cs
fidivrs
test
jp
sbb
sbb
mov
push
int
ss
push
cltd
mov
pop
dec
push
dec
mov
aas
popa
or
dec
sub
mov
ret
push
mov
sbb
mov
dec
inc
mov
in
cmp
push
cmpsl
insl
jle
mov
aad
adc
sbb
pop
pop
cmp
dec
xchg
and
xchg
rcrb
add
clc
push
add
pop
xchg
sub
xchg
add
jp
or
and
cli
ljmp
inc
les
xchg
inc
in
bound
adc
mov
jno
mov
movl
pop
cmp
mov
es
fs
aas
xchg
or
pusha
push
sarb
mov
ja
loop
jecxz
cmp
loope
stc
sbb
push
add
lahf
pop
stc
adc
aas
cmpsl
xchg
mov
push
loop
xlat
mov
shl
and
bound
mov
fdivrs
in
inc
and
enter
mov
inc
ds
js
fimull
into
adc
or
and
lock
repz
and
pandn
daa
in
mov
sysexit
lods
data16
jnp
or
jmp
pop
in
cmp
cmp
mov
loop
pop
xor
in
lods
sub
dec
inc
cmc
cmp
dec
mov
push
mov
push
fcoms
test
mov
dec
insb
sbb
add
add
testl
jp
xchg
movb
mov
sub
push
mov
cld
pop
cwtl
jns
imul
mov
inc
push
mov
adc
add
in
idivb
jbe
xchg
int3
mov
xchg
enter
ja
push
pop
dec
das
cmp
inc
jne
xor
and
mov
mov
aas
js
jle
movsl
lret
test
testl
lret
ficompl
pop
icebp
ljmp
lahf
mov
xor
mov
lods
sub
test
cmpl
ljmp
flds
mov
out
dec
loope
inc
arpl
or
xlat
push
imul
inc
lret
dec
or
popa
xchg
mov
push
jno
pop
test
outsl
scas
rcr
cltd
test
mov
out
outsb
pusha
sbb
sbb
cmp
mov
ja
faddl
or
or
cmp
push
test
cmp
pop
sbb
pop
idivl
inc
nop
xchg
loopne
sahf
std
xchg
inc
inc
int3
test
movb
iret
or
aaa
or
jo
fcoms
jns
and
popf
jo
adc
fsubl
jmp
loope
ret
mov
ljmp
sbb
movsl
cs
fstl
test
cmp
sub
daa
adc
cwtl
std
lock
negl
imul
ljmp
in
sub
aam
jmp
call
adc
cltd
stos
pop
insb
rcl
pushl
ret
test
push
sbb
sub
int
pushf
pop
scas
push
es
jb
jno
stos
les
jl
pop
orl
out
sub
loop
icebp
jns
vprotw
push
gs
pop
int
pop
aad
mov
pop
push
jge
xchg
xchg
inc
pushf
fdivrl
das
jnp
push
pushf
cmp
push
xchg
jle
lea
mov
xor
cltd
add
sbb
mov
mov
ret
mov
or
ficomps
sub
or
xor
sbb
push
sbb
and
nop
jge
dec
and
mov
dec
popa
mov
inc
ds
pop
push
gs
jb
and
sbb
mov
mov
mov
cmp
mov
or
in
push
dec
bound
jae
push
xchg
fs
ds
stos
adc
fistpll
xlat
dec
dec
push
or
icebp
add
pop
dec
sub
dec
lahf
std
fcompl
sub
mov
and
adc
fbld
mov
cmp
in
out
fwait
adc
enter
es
push
lcall
mov
aad
pop
pushf
push
bound
push
jge
adc
iret
mov
xchg
add
in
loope
jns
mov
popf
pusha
xor
cltd
jp
sub
xchg
inc
cwtl
aas
jle
clc
cmp
ds
cmp
xor
pusha
call
test
cmp
cwtl
and
xchg
push
lret
xor
pop
xor
xchg
ja
xchg
lods
or
fmuls
insl
adc
push
or
dec
cwtl
scas
mov
loopne
cmp
bound
pop
test
sub
jbe
xchg
adc
sbb
inc
in
das
aad
aad
fbld
push
sbb
aad
xchg
das
fmuls
divl
xlat
fnstsw
sarl
loope
mov
repz
lods
xchg
insb
das
pop
lods
pop
mov
std
xchg
fnstcw
pop
add
mov
sbb
mov
adc
pop
xchg
out
dec
inc
sub
into
pop
pop
idivb
mov
mov
mov
jle
subl
mov
js
icebp
add
mov
mov
cmp
popa
xor
into
or
aaa
test
cmc
stc
pusha
lret
mov
ja
movsl
int3
xor
in
mov
cmpb
mov
pop
mov
mov
pop
icebp
jg
jbe
dec
lea
or
ret
inc
fwait
pop
in
and
in
jno
dec
xor
imul
repz
pop
mov
in
popf
mov
adc
dec
jno
stos
inc
and
out
mov
or
xchg
aad
xor
imul
stos
sbb
cmp
pop
jmp
adc
stos
jmp
sbb
das
test
ret
lret
push
std
xchg
adc
outsl
mov
sub
pop
sbb
int
subl
inc
mov
das
testb
xchg
jcxz
imul
movsl
adc
cmp
lock
imul
pop
dec
lret
aaa
cs
idivb
cwtl
cmp
push
imul
rorl
push
ss
xor
sahf
stos
xchg
stos
into
popf
add
add
or
push
add
mov
loopne
test
idiv
rcl
push
mov
js
xchg
outsb
lds
sub
ljmp
jle
cmp
push
lret
and
jo
mov
cmp
jp
imul
jmp
mov
mov
pop
roll
hlt
dec
adc
dec
lret
mov
les
dec
out
mov
punpckhbw
in
sti
addb
jae
jo
scas
icebp
sbbl
hlt
js
or
jnp
shrl
pushf
and
test
mov
adc
xchg
jae
stos
and
notl
cltd
test
xlat
pop
xor
addb
aad
test
pop
loopne
and
xchg
or
gs
mov
mov
jbe
fisubs
sub
pusha
pop
xchg
mov
lcall
mov
xor
jb
and
roll
call
xor
mov
test
daa
xor
cmpsb
jne
xchg
cltd
fcmovbe
adc
dec
add
incl
daa
cmc
xchg
add
lds
cmp
sub
and
pop
aas
pop
sub
loop
inc
mov
data16
dec
mov
jp
ljmp
sbb
pop
into
ja
xchg
popa
ret
fbstp
push
adc
xor
enter
xlat
lods
xchg
pop
add
dec
imul
fs
stos
xchg
gs
inc
mov
cmp
add
lcall
into
sub
lods
pop
and
repnz
sarb
loop
xor
out
push
dec
inc
fsubl
or
dec
sbb
fdivs
out
adc
aas
xchg
aad
flds
mov
fildll
rcrb
shlb
outsb
paddusb
cmp
lcall
bound
mov
xchg
push
xchg
cmpsb
dec
inc
or
xorl
xchg
out
sub
fadd
mov
sahf
mov
ret
cmc
es
jno
loop
xchg
dec
jno
loopne
call
sub
sbb
or
dec
mov
pop
rclb
outsl
sbbb
dec
sbb
mov
daa
insl
cwtl
sarl
int3
mov
ss
jp
cmp
xchg
mov
in
hlt
shll
jp
adc
mov
insl
pop
idiv
sub
imul
inc
xchg
lcall
and
test
out
dec
lcall
decl
test
jae
mov
xchg
rorl
repz
sub
ss
outsl
jne
ljmp
stos
jle
mov
cmp
add
popa
loope
mov
aam
xchg
or
fsubl
repnz
xchg
inc
dec
ret
fcompl
and
das
adc
enter
adc
out
sub
out
sub
inc
sbb
ret
ljmp
clc
fsubs
les
lds
jne
fcoml
jno
iret
fdivs
leave
das
imul
sub
aaa
pop
jne
jl
jns
push
sar
mov
int3
xor
pop
in
push
ret
pop
adc
dec
out
rcrb
sbb
daa
jb
lret
push
xchg
js
mov
dec
inc
mov
pop
leave
loop
mov
mov
popf
imul
mov
lds
xchg
imul
pop
sbb
sub
iret
aad
mov
leave
dec
in
inc
pop
xchg
inc
xchg
and
movsb
mov
aad
call
hlt
lock
jbe
mov
mov
leave
adc
dec
or
xchg
mov
jle
out
dec
roll
push
out
scas
sub
sbb
ret
adc
cmp
inc
mov
cli
xchg
pop
sub
sbbb
testb
into
cmp
mov
xchg
push
jecxz
data16
push
repnz
je
negl
cwtl
in
aas
cmc
sbb
xchg
hlt
leave
into
dec
lcall
outsl
out
rcrb
ret
xor
sub
std
adc
sub
push
inc
pop
ret
cmp
cmpsl
ja
movsl
push
into
movsb
mov
repz
sbb
in
scas
aad
xor
add
adc
adc
inc
out
dec
and
movsl
mov
or
lods
pop
mov
notb
push
xchg
outsl
or
mov
pushf
push
xchg
divl
pop
mov
or
into
into
fimuls
pop
aad
fnstsw
ror
nop
sbb
nop
ja
add
test
in
add
inc
mov
arpl
xlat
jae
cli
dec
add
jg
push
xor
leave
std
neg
mov
jns
mov
imul
clc
outsb
xlat
jo
or
jmp
mov
aas
pop
testl
xchg
subl
imul
add
nop
ret
stc
loopne
and
mov
insb
scas
rorb
xor
fildl
push
lret
mov
rol
cld
inc
push
cmp
push
jns
shrb
mov
ljmp
push
jl
mov
ljmp
push
in
mov
pop
aam
pop
mov
and
sub
hlt
scas
mov
xchg
test
cmp
push
inc
sar
lock
xor
addb
jo
das
push
test
mov
mov
lds
stos
in
sub
xor
ds
cmp
jl
dec
mov
bound
gs
jnp
sahf
bound
stos
and
push
cld
insl
pushf
adc
jnp
scas
cltd
xchg
leave
imulb
lock
fsubs
inc
test
inc
xchg
lods
push
mulb
xchg
mov
pop
cmp
push
push
js
pop
test
dec
pushf
pusha
add
stc
mov
xchg
fsubrl
or
andb
jl
pop
inc
lds
or
push
cs
loop
xchg
push
inc
adc
sub
test
jp
out
out
cmp
dec
sbbl
mov
daa
clc
adc
pop
xchg
fcomi
pop
arpl
cmp
inc
or
lcall
inc
push
mov
adc
fistl
shlb
ret
mov
mov
repnz
sub
mov
lret
mov
or
fdivrl
inc
cmp
ss
daa
pop
popa
jbe
clc
dec
loopne
aad
out
imul
jnp
inc
mov
test
imul
aam
pop
mov
bound
cmp
in
sti
loope
enter
xchg
or
jo
jne
ds
fcoml
jg
mov
mov
imul
and
and
cmp
out
xor
lret
mov
push
clc
cwtl
xor
fcoms
sbbl
popf
adc
fmuls
fldenv
jae
ljmp
int
jae
arpl
mov
das
push
repnz
enter
je
addl
jg
mov
int3
insl
ja
movsb
out
xor
push
jmp
call
sti
bound
mov
test
les
add
jnp
ds
pop
sbb
shll
xchg
cmp
stos
ljmp
adc
jmp
fs
ret
inc
xchg
outsb
cwtl
sub
lret
add
in
sub
stc
push
sbb
pop
jmp
rcll
fstps
push
daa
test
and
mov
movb
inc
mov
jl
dec
shl
psubsw
jns
mov
test
and
insl
cld
jo
mov
lret
stos
sahf
mov
adc
dec
add
cmp
jne
loopne
mov
add
mov
adc
stos
xchg
shll
iret
sar
add
lcall
cltd
pop
dec
xchg
xchg
in
mov
mov
dec
push
xor
hlt
movsb
ds
test
out
push
rorb
xchg
addr16
xchg
inc
cld
fcomps
insl
jle
dec
push
xor
inc
xchg
xchg
mov
in
movsb
and
xor
mov
mov
jmp
or
cmpsb
mov
rep
and
pop
sub
scas
jge
stc
push
adc
and
mov
loop
add
stos
orb
int
jo
gs
mov
adc
push
enter
lea
jg
int
adc
mov
jp
int
mov
or
add
fsubrl
outsl
sub
xlat
lds
pop
dec
mov
negb
push
divb
inc
sbb
rcrb
push
xchg
cmp
rorl
test
sub
or
repz
sub
mov
popa
mov
pop
inc
adc
aas
cmpsb
pushf
mov
lea
ficompl
push
jae
pop
icebp
cwtl
pushf
cmpsl
repnz
cmp
nop
or
ret
or
es
xor
xchg
and
fs
outsb
push
or
add
sbb
sub
cmpsl
pushf
inc
cmp
dec
and
adc
std
sub
jecxz
fsubrs
push
push
aaa
leave
jp
stc
popf
sti
inc
xchg
push
pop
les
jp
mov
mov
push
mov
ret
push
mov
loopne
subl
into
push
jle
ror
movsb
pop
cmpsb
in
push
jb
push
pushf
pop
loopne
jge
cmpsb
inc
cmpsl
movsl
pop
sti
clc
mov
test
mov
mov
pop
or
imul
mov
es
or
mov
dec
jle
xchg
dec
sarb
fcomps
fucomi
cli
jb
loopne
sti
das
push
gs
xor
je
je
inc
in
sub
xor
fs
push
iret
clc
xlat
pusha
push
je
insl
std
mov
bound
addr16
out
lret
mov
pop
cmp
lret
adc
xchg
loope
or
fists
mov
cmp
into
jge
or
clc
push
or
stc
into
sbb
sub
sbb
xchg
pop
scas
rorb
dec
faddl
fstpl
lds
daa
stos
hlt
mov
push
add
ret
sub
out
rcrl
ljmp
test
aas
inc
xor
insb
xchg
fs
testb
xchg
jg
inc
popa
xchg
scas
fistpl
adc
mov
mov
es
sbb
jmp
or
cld
fldl
loopne
adc
dec
loope
add
mov
inc
repnz
cltd
add
cmpsl
stc
ljmp
ss
divb
add
repnz
adc
jl
das
mov
aad
add
push
stc
mov
lret
sub
pop
pop
push
rclb
ljmp
popf
push
test
insl
rolb
cmp
rcll
insl
aaa
cmpb
mov
loop
or
add
int
rcrl
or
fwait
jl
rcrb
cmp
les
cltd
je
xor
aad
pop
aam
subl
outsl
pop
sub
roll
jb
out
pop
adc
push
pushf
into
xor
pop
mov
xchg
cmp
lock
cmp
iret
mov
or
mov
jbe
cwtl
orb
cmp
bound
andl
mov
loopne
repz
sbb
addr16
bound
bound
ja
mov
cmpl
mov
imul
idiv
adcl
lcall
ret
mov
in
mov
fimuls
mov
mov
lahf
jecxz
mov
aaa
cltd
shlb
xor
mov
cltd
sbb
dec
push
lret
cmp
imull
jl
xorb
mov
lods
clc
xacquire
decb
lods
mov
fisubl
popa
inc
push
in
adc
popf
jns
jmp
repnz
or
scas
popf
push
sbb
cld
push
inc
outsb
int
inc
ss
lret
loop
xchg
andl
pusha
mov
xor
icebp
cltd
or
loope
mov
loope
nop
jl
divl
xor
xlat
pushf
mov
sbb
shlb
adc
inc
adc
dec
ja
mov
xchg
addb
es
mov
jle
fnstsw
js
pushf
stos
xchg
js
mov
in
push
fdivs
dec
mov
data16
xor
inc
call
xor
lods
jae
pop
stos
lds
dec
push
sbb
sbb
xlat
add
sub
dec
jb
aam
mov
mov
cld
jecxz
sub
dec
inc
sub
aam
pop
xor
jns
lcall
lret
sbb
push
pushf
fcoms
or
pop
shrl
repnz
push
shl
scas
xor
daa
out
cmp
mov
inc
cmpsb
test
xor
mov
int
scas
and
mov
cmp
je
outsl
stos
dec
sbb
add
cwtl
ljmp
popf
scas
addr16
push
fimull
mov
or
jae
xchg
sub
jb
scas
lds
dec
sarl
mov
and
push
sub
xor
std
cmp
insl
xor
xchg
lret
gs
hlt
insl
and
lock
js
add
mov
pmulhuw
xchg
inc
mov
jle
cmp
xor
mov
fxch
dec
je
inc
leave
sahf
push
mov
cld
clc
ds
fcmovnb
clc
xchg
loopne
cwtl
inc
enter
xor
adc
inc
cwtl
xchg
push
mov
xchg
adc
lock
push
sub
sub
xor
inc
or
adc
dec
xchg
lret
dec
push
ja
out
sahf
das
push
sbb
lret
pop
dec
push
adcb
mov
std
xor
js
cmpsb
or
xchg
xor
repz
push
xorb
xchg
out
js,pt
scas
ffreep
jl
cs
rcrb
cmp
stc
mov
mov
jmp
mov
int3
cltd
inc
mov
ljmp
add
xchg
stc
aaa
rcr
jecxz,pt
shl
jns
repz
cmp
sbb
push
int
sub
pop
repnz
loop
dec
cs
push
adc
mov
mov
lods
mov
jle
out
sbb
jge
movsl
repz
pop
sub
pop
dec
lret
call
loop
jne
popf
pop
cld
mov
lret
out
mov
out
int3
jno
xchg
jb
out
repz
shrl
outsb
shr
les
out
xlat
and
xlat
fistpl
or
mov
xchg
ret
cld
mov
mov
popf
data16
ja
cmpl
sub
shll
pop
xorb
test
inc
or
int
jmp
pop
sub
cmp
push
sbb
repz
and
lds
mov
inc
inc
int
addl
pop
inc
push
loopne
push
push
xchg
fsubl
pop
pop
xchg
notl
pusha
movsl
or
bound
mov
rcll
sub
or
sti
cltd
movsl
jp
aad
dec
cmpsb
inc
add
or
and
xchg
mov
jno
adc
shlb
les
jle
mov
fcoms
repz
sbb
xchg
les
shlb
out
dec
stos
daa
and
mov
cmp
ret
out
mov
xchg
xchg
fwait
shrl
fidivrl
inc
mov
lahf
pusha
mov
and
pop
pop
adc
stos
test
mov
stc
aas
pop
jecxz
xchg
jmp
push
les
fcomi
adc
ja
mov
ret
aam
sbb
and
insb
inc
cmp
push
in
ret
clc
insl
sub
xchg
mov
cmp
dec
mull
dec
imull
decb
outsb
push
lds
dec
add
xlat
sub
mov
dec
or
push
mov
icebp
sub
pop
mov
iretw
ss
fisttps
jae
jle
pusha
sub
call
jl
cmp
hlt
fiaddl
or
push
dec
in
insl
cmpsl
sub
cmp
mov
subl
xor
mov
int3
call
add
aam
in
jecxz
jg
and
ffreep
xchg
pop
mov
pop
pusha
xchg
ds
test
mov
xchg
ret
sbb
loop
out
in
cli
fstpt
push
add
push
fs
in
or
addr16
and
pop
cmpsl
adc
bnd
xor
cltd
add
mov
lds
add
std
popa
test
repz
loop
lods
fsubl
jle
imul
sub
or
stc
aam
mov
jbe
das
pop
outsl
int3
or
sub
xorl
js
jae
mov
xlat
fstpt
dec
add
cli
pop
bswap
movsb
push
pop
jns
xchg
mov
jno
push
cltd
jae
repnz
mov
movsb
cmp
mov
inc
lret
cmp
cmp
or
dec
pop
jmp
mov
pop
sbb
popf
je
add
jo
xchg
or
hlt
clc
out
jecxz
push
push
in
dec
mov
stos
testb
mov
sub
xlat
roll
adc
pop
ret
cwtl
dec
popa
sbb
sub
push
cmp
aad
inc
jns
stos
fsubrl
dec
push
add
mov
xchg
jb
or
ja
sbb
xchg
aaa
shrl
jne
push
or
sbbl
mov
sub
into
mov
sarb
pop
inc
flds
dec
mov
cmp
frstor
mov
jbe
push
cli
int
int
cmp
inc
xor
inc
je
mov
je
push
sbb
and
ljmp
ljmp
movsl
mov
jno
sbb
adc
xor
std
or
pop
nop
xor
jo
imul
ljmp
mov
cli
xchg
rcl
mov
xchg
shr
in
gs
adc
fistpl
pop
gs
dec
loopne
mov
das
lods
divl
inc
add
add
adc
xchg
add
in
mov
jns
lods
push
sub
outsb
out
sbb
and
decb
lock
jecxz
notb
in
cmp
inc
jno
aaa
loopne
adc
adc
jb,pn
mov
push
lock
mov
insl
fildl
adc
xor
push
mov
push
sbb
add
pop
cltd
out
pop
mov
jno
test
or
push
adc
or
mov
shlb
adc
jns
and
mov
add
push
aas
daa
std
ret
icebp
mov
dec
js
inc
movsb
lods
jmp
call
scas
in
test
dec
in
jbe
cmp
mov
nop
pop
icebp
aaa
inc
fucomip
mov
xchg
lods
xbegin
mov
pop
enter
rcl
jo
lock
and
enter
repz
push
cmp
enter
pushf
out
jno
push
jg
cwtl
pushf
or
and
sbb
cmp
popf
xchg
push
sbb
mov
adc
adcb
and
gs
movsb
imul
cmp
mov
jge
mov
inc
xor
insl
sub
pop
mov
inc
xor
lea
cmp
push
sub
jne
lock
xor
mov
jnp
and
xchg
inc
test
fcompl
inc
jmp
addr16
popa
adcl
or
lods
lret
add
mov
dec
xchg
push
es
stc
leave
es
and
dec
idivb
dec
pushf
adc
pop
mov
mov
shl
mov
dec
adc
mov
bound
jae
loopne
repz
push
pop
lds
enter
inc
mov
jno
jno
jmp
ljmp
mov
pop
jecxz
mov
mov
icebp
mov
pop
out
in
fbld
push
xor
int3
out
or
dec
jle
push
xchg
pop
enter
movsl
push
pop
fistpll
loop
xchg
pusha
mov
pop
lret
hlt
push
fs
adc
jmp
ret
push
in
fbstp
nop
movsl
inc
aas
and
cmp
lods
or
jne
mov
or
clc
lods
push
testl
int
fildl
or
mov
mov
ds
shrl
hlt
rcrb
std
loop
ret
jno
fisubrs
or
mov
stc
mov
lahf
pop
cmp
push
mov
fsubr
cmp
loop
repz
sub
out
int3
adc
xchg
lret
jmp
aam
sti
roll
loop
sub
imul
inc
cmp
push
divb
inc
xchg
jb
negb
adc
cmp
mov
dec
imul
sbb
push
fucomip
add
retw
out
and
sub
mov
ds
mov
out
cwtl
xchg
jmp
bnd
fwait
lds
push
in
jnp
rclb
je
push
sbb
movsl
add
mov
ds
inc
mov
stos
xor
lock
adc
lcall
xor
add
enter
loop
and
jnp
test
std
inc
push
ss
fmulp
stos
sarb
inc
xchg
pop
add
pop
out
pusha
imul
jp
daa
int
adcb
je
lock
outsb
sbb
dec
add
daa
psubd
inc
cmc
pop
bound
test
xchg
daa
mov
cmp
xor
scas
les
ss
daa
inc
std
xchg
cwtl
add
jo
pop
faddp
push
iret
bound
adc
dec
add
test
gs
or
in
notb
xor
jp
mov
leave
push
sti
push
loopne
aad
aad
mov
push
sarl
rcrl
pop
xchg
mov
mov
in
push
cmp
popf
jb
aaa
xchg
jbe
ja
aad
imul
sub
in
mov
outsl
int3
stos
jle
orl
xor
aad
and
mov
sub
xchg
outsb
ljmp
or
repz
rcl
sub
cmp
mov
dec
mov
mov
pop
call
xchg
cmp
sahf
cmpsb
jmp
sahf
pop
mov
mov
aam
add
shlb
xchg
xor
out
iret
mov
mov
push
or
rorl
xchg
sub
mov
mov
mov
pop
push
lret
jg
lock
arpl
out
fisttpl
scas
and
lahf
add
push
inc
out
or
leave
repz
cli
ja
pop
lea
test
test
jb
mov
rcrb
jne
push
out
mov
add
xchg
sysexit
setns
mov
lock
shl
xor
sub
insb
pusha
in
jae
adc
sti
dec
xlat
leave
sub
cmp
int
mov
sub
add
pushf
iret
pop
push
push
lret
call
aaa
push
mov
es
jo
shl
adc
add
jmp
and
and
mov
sbb
pop
xchg
xor
and
cmp
mov
xchg
pop
lret
cltd
dec
inc
xor
xchg
sbb
cld
pop
ja
mov
pop
loopne
dec
flds
mov
mov
cmp
mov
out
push
scas
lahf
pop
arpl
or
mov
or
test
lds
and
or
or
mov
mov
sub
sub
push
ljmp
lds
std
push
cmp
mov
iret
pop
iret
mov
jnp
dec
popa
xorb
or
je
push
out
scas
mov
jmp
dec
jne
aam
in
mov
and
shll
sarl
ss
push
repnz
aas
pop
adc
inc
jmp
push
mov
rcr
das
sbb
push
sub
mov
mov
xlat
mov
xlat
in
jbe
subl
sub
outsl
aaa
dec
lods
mov
push
stos
jo
adc
data16
outsb
insl
xchg
ss
fmuls
mov
mov
xor
pop
jg
fnclex
lcall
pop
dec
jne
xor
and
pop
movsb
imull
sbbb
push
sub
icebp
cmp
adc
cmc
mov
or
mov
sbbb
dec
push
rcll
jmp
insb
mov
adc
mov
push
out
inc
das
push
inc
push
jge
xchg
inc
xchg
mov
icebp
xor
movsl
das
xor
add
int3
mov
aam
ja
push
mov
imul
sbb
push
dec
int
inc
cmpsb
pop
sub
push
mov
sub
mov
inc
outsb
insb
ror
insl
testl
imul
push
xor
or
cmp
xor
sti
in
pop
add
jp
cmp
dec
push
xor
shrl
xchg
repnz
ljmp
outsb
es
push
dec
xchg
loope
dec
lret
dec
loop
cmp
mov
aad
pop
ljmp
into
loop
push
inc
ret
cmpsl
mov
cwtl
jge
push
test
jp
lods
mov
mov
and
inc
sbb
dec
pop
push
push
xchg
movsb
mov
push
insb
fs
cmp
add
pop
roll
or
bound
or
fisttps
ljmp
dec
dec
or
aam
cmc
out
bound
outsl
xchg
andl
rcll
cmpsl
cmp
inc
pushf
mov
pop
lock
xor
push
dec
stos
push
mov
fdivp
jl
out
js
sahf
sub
jmp
cmp
fucomi
test
adc
add
daa
scas
in
popa
xor
mov
mov
and
mov
fistl
fs
sbb
pop
add
jno
stos
es
sub
pusha
mov
stos
lods
jmp
or
inc
mov
mov
adc
push
xor
jbe
into
fs
call
mov
out
fisttpl
push
mov
stos
outsl
testb
mov
xchg
arpl
cmc
stc
cmpb
mov
js
xchg
and
test
lods
and
sub
mull
inc
mov
loop
sub
in
dec
adc
mov
ret
lret
pop
sbb
ljmp
outsl
jp
call
sbb
ffreep
or
fldcw
cltd
mov
data16
xor
mov
out
push
je
pop
stos
pop
push
jle
dec
add
sbb
or
enter
dec
mov
mov
xor
mov
lahf
aas
dec
scas
mov
neg
pusha
ss
push
mov
jae
std
clc
sbbl
movsl
scas
andl
jmp
sahf
xor
or
or
mov
test
inc
push
push
lret
aad
sbb
adc
jl
faddl
push
cmp
mov
xchg
pop
dec
xor
iret
into
push
jecxz
dec
aas
pop
jne
xor
adc
cwtl
or
pusha
rolb
push
push
ja
std
push
mov
cmp
out
dec
jmp
nop
hlt
lock
pop
iret
shlb
popf
and
jge
jae
pop
xchg
mov
imul
xor
pusha
das
mov
adc
and
or
out
adc
mov
in
xchg
jns
ret
lret
shrb
insb
add
stos
cs
mov
mov
cs
pop
aad
jo
in
pop
jge
add
push
mov
mov
outsb
cmp
pop
or
fisttpll
call
lret
add
or
cmpsl
cmp
inc
sahf
pop
clc
in
jmp
mov
pop
das
pop
inc
or
aaa
rcl
or
or
fisubl
icebp
mov
sti
in
dec
mov
jmp
or
pushf
int
outsb
popa
stc
mov
add
adc
jne
mov
lods
daa
inc
adc
pushf
insl
daa
dec
xor
xchg
add
pop
ret
call
fwait
xchg
test
pop
mov
push
shll
cmp
ljmp
jmp
mov
repnz
cwtl
ja
pop
push
jmp
ljmp
gs
xlat
sub
das
dec
addl
xchg
push
push
loopne
fistl
jnp
aas
adc
sub
add
fs
inc
add
addl
test
cmp
add
popa
lret
dec
sbb
pop
pop
pop
subl
test
clc
int
mov
dec
push
inc
icebp
pop
cwtl
push
aas
pop
add
mov
das
or
ret
and
xchg
jmp
pop
xchg
push
mov
jecxz
ds
shll
shrl
xchg
pop
ljmp
inc
iret
popf
dec
vpshaw
in
mov
out
dec
inc
rcll
scas
jmp
iret
in
cld
loop
xchg
adc
or
lcall
jge
inc
cmp
dec
mov
lret
xor
daa
or
scas
pop
jge
and
inc
sbbl
lods
cli
inc
mov
or
fldenv
lock
sub
add
push
insb
mov
pusha
cmpsl
lods
sbb
sbb
xor
out
int
iret
push
stc
pusha
loope
sub
push
jp
cmc
mov
mov
subb
mov
fistpll
arpl
pop
call
jne
int3
jge
in
sbb
iret
js
imul
aam
hlt
cltd
int
hlt
push
aam
mov
sarl
clc
mov
icebp
fdivrl
jo
push
fsub
movsl
mov
and
cmpsl
cmp
popf
mov
xchg
lcall
loope
mov
in
pop
sbb
pop
out
sub
sub
sbb
mov
fcmovu
xchg
in
mov
popa
mov
dec
and
inc
and
push
mov
iret
sbb
add
fcmovu
sub
and
lock
xor
mov
out
xchg
jb
add
bnd
dec
test
sbb
or
lcall
cltd
sbb
out
jns
into
mov
stos
push
sub
pop
stos
mov
jo
mov
or
lret
adc
int
mov
shr
cmpsl
xchg
das
dec
fiadds
jg
mov
mul
pop
jbe
mov
clc
mov
and
adc
enter
lods
hlt
and
jno
mov
and
jmp
jns
lods
ljmp
test
xchg
fwait
xor
mov
or
xlat
in
popa
out
fidivrs
cmc
and
mov
cmpsl
sub
or
inc
hlt
xor
xchg
das
scas
adc
lcall
add
mov
and
gs
mov
fdivrl
int3
ljmp
addr16
cwtd
pop
cs
mov
dec
out
jno
jg
inc
pop
lret
rclb
adc
jl
push
movsl
in
jo
sub
or
mov
mov
add
jecxz
mov
xor
adc
add
sbb
pop
ss
mov
mov
cmp
loope
xchg
adc
xchg
das
loopne,pn
sbb
ret
js
or
mov
movsb
push
push
push
push
and
cmpsb
add
mov
and
jmp
mov
push
lods
lcall
into
xchg
sub
out
xchg
fs
add
pop
shll
stos
jp
ja
aam
mov
mov
pushf
loope
jo
fucomip
leave
push
mov
subb
test
dec
push
adc
fstps
das
lds
fwait
sub
jne
pop
pop
aas
popf
movsb
and
das
call
popf
pop
sbb
push
ss
sti
xchg
push
ret
and
inc
sub
aas
add
xchg
aaa
lods
jbe
xchg
les
push
mov
cmpsb
mov
cmp
aad
cs
push
aaa
mov
sub
pop
sarl
lods
scas
iret
popa
aaa
je
dec
popf
stos
mov
fisubl
jge
fidivl
cmp
int3
xor
sbb
fsubs
in
xor
sbb
jo
add
out
and
lods
andl
jmp
ljmp
dec
xor
sub
mov
jecxz
idivl
gs
rcll
mov
aad
aaa
jl
mov
in
mov
mov
push
out
in
xchg
sub
sbb
mov
mov
fwait
rcll
mov
fistl
and
pushf
add
daa
popa
cmp
out
bsr
int
inc
arpl
xchg
mov
rol
pushf
mov
in
or
push
ja
add
out
jl
dec
and
mov
movsl
cmp
mov
pop
mov
lcall
out
mov
test
shrl
ds
aas
fistpl
cmc
in
into
jo
xor
bound
fisttpl
inc
lret
jnp
lods
rcll
dec
xor
inc
inc
test
stc
sub
lahf
inc
aas
dec
cmc
jne
adc
cltd
orl
jnp
mov
jnp
insb
xlat
outsb
rcrb
ss
pushf
call
fmulp
jns
lock
and
movb
xor
fidivl
sbb
jb
pop
jno
jmp
fistpl
jno
or
dec
pop
adc
sbb
arpl
sbbl
stos
stc
outsl
std
mov
xchg
xor
dec
push
xor
sub
add
cs
rorl
sbb
test
fldt
push
adc
rorb
sbb
lods
enter
mov
scas
dec
xchg
dec
sub
add
jmp
jne
jg
dec
xchg
jecxz
or
dec
data16
add
xchg
xorl
arpl
ja
dec
lahf
adc
inc
cmc
test
sub
pop
int
pop
cmp
push
and
bound
fwait
icebp
xchg
loop
mov
cmp
xchg
push
test
mov
jnp
push
leave
outsb
ja
sbb
cmpsl
and
outsl
pop
push
ljmp
jl
mov
and
sub
and
clc
jb
test
pop
repnz
jg
out
inc
jg
inc
mov
aad
leave
lahf
jns
xchg
mov
pop
addr16
mov
clc
and
ja
test
push
pushf
lods
in
and
rcrb
jle
add
inc
mov
std
cmp
shr
lea
cmp
frstor
xchg
jno
sbb
shlb
nop
mov
ret
loopne
dec
xor
fstp
mov
mov
shrl
cmp
pop
ss
mov
fs
ja
sbb
mov
pop
jecxz
xchg
ret
mov
pop
sbb
hlt
cmp
mov
mov
xor
sbb
cs
aaa
pop
mov
xor
fwait
out
xor
dec
lret
pop
mov
imul
lea
cmp
into
inc
push
mov
in
imul
xchg
xor
movsl
out
fs
ror
daa
outsw
aas
int
mov
ret
jns
or
or
leave
jg
mov
add
aaa
push
and
xlat
lcall
sbb
sti
in
push
dec
mov
orl
xchg
and
push
pop
mov
adc
xor
repnz
xchg
sbb
and
shll
nop
sub
mov
lock
and
lret
mov
out
je
aam
xchg
repnz
in
aaa
call
dec
rorl
dec
inc
or
and
dec
in
mov
jle
enter
jnp
pop
popf
sub
nop
lcall
cmc
fbstp
cmpsb
and
inc
dec
xchg
xor
sub
jnp
scas
sub
cmp
hlt
sub
xchg
sbb
clc
pop
jg
mov
inc
test
adc
into
dec
or
inc
insl
adc
inc
outsb
xchg
jnp
mov
sub
cmp
or
cmp
xchg
cld
sub
xor
stos
jecxz
jmp
mov
rcrl
lahf
inc
or
inc
out
cmp
cmp
cltd
adc
repz
lret
icebp
push
shll
sub
xchg
add
aaa
das
test
andl
push
in
inc
dec
jb
insb
push
aad
push
sbb
or
sub
and
stc
mov
adc
jl
pop
stc
push
fwait
sub
les
push
cmp
std
dec
mov
adc
sti
or
push
out
jne
xlat
nop
mov
dec
aas
jecxz
rclb
xchg
icebp
cmp
mov
clc
add
and
mov
fdivp
ja
ds
test
mov
mov
xchg
cwtl
mov
lods
jmp
and
and
sub
pushf
mov
dec
mov
xor
icebp
ret
mov
movsb
imul
sbb
xchg
scas
fbld
push
pusha
pop
inc
dec
inc
cs
sub
jmp
mov
xorb
cmp
nop
jge
push
cmp
lea
lret
cld
stos
shll
mov
xor
lds
add
imul
popl
stos
rcl
jno
pop
mov
dec
call
stos
xor
and
scas
ret
loopne
ret
xchg
push
and
icebp
fsubr
inc
fsubp
pop
aam
lods
sub
pop
mov
dec
sub
dec
mov
pop
cmp
mov
cmp
lahf
add
dec
or
out
push
push
frstor
xchg
out
std
call
int3
rcr
stc
mov
aas
sbb
xsave
imul
in
inc
daa
sarl
fnstcw
sbb
mov
cmp
and
pop
pop
fcomps
subb
xchg
push
adc
fidivrs
pop
je
popa
or
jecxz
sbb
pop
aad
adc
leave
dec
xchg
lds
xor
jge
sbb
out
xchg
mov
push
sahf
jne
inc
jo
test
cmpl
test
in
or
push
xor
push
xorl
pop
sbb
aad
jnp
loopne
mov
clc
mov
aad
xlat
cltd
fists
fcomps
stos
sti
xor
jle
jmp
shrl
stc
and
jmp
push
imul
cmp
jno
add
jo
jnp
lahf
xchg
testl
repnz
pop
pusha
xchg
incl
and
push
mov
ficompl
dec
cmpsl
lcall
push
not
cwtl
fmulp
fnstsw
cwtl
lret
movsb
jmp
dec
dec
mov
sbb
add
std
imul
xchg
mov
adc
rcrb
xchg
je
lods
mov
inc
js
inc
inc
pusha
ret
stos
inc
rcr
adc
stos
ljmp
fcmovbe
xchg
mov
in
rcl
int
loopw
lock
das
jnp
enter
inc
and
sub
pop
cmp
rclb
push
push
sahf
js
xchg
call
xchg
out
leave
pop
xchg
int
cltd
loop
sarb
push
int
in
in
cmp
hlt
pop
push
jle
and
dec
mov
xchg
jp
adcl
clc
push
test
subl
xor
adc
or
xor
in
or
mov
push
fdivrs
pop
and
push
inc
insb
in
or
mov
negb
push
cld
in
cmp
fmul
bound
fiaddl
or
inc
sbbb
or
dec
cmpsb
add
cmp
pop
xor
out
repnz
cltd
popa
aas
inc
pop
repnz
loope
mov
fsub
lods
jg
push
ror
or
pop
std
bound
int
mov
xchg
pop
dec
insl
inc
hlt
test
or
cmpsl
pop
adc
cmpsb
jecxz
or
vpaddusw
rclb
ja
hlt
jae
or
out
lods
xchg
popa
nop
sbb
and
jae
or
out
mov
subl
or
mov
mov
or
add
pop
andb
inc
test
ret
push
mov
adc
out
daa
stos
clc
mov
mov
mov
jmp
scas
repnz
daa
mov
jecxz
imul
mov
sbb
aam
cld
adc
jl
aam
and
cmc
test
das
mov
popf
sbb
insb
fcmovnu
fidivs
aam
cmp
mov
popf
sbb
mov
mov
mov
je
sar
fstpl
mov
adc
movsb
xchg
pop
pusha
cltd
lods
xchg
push
and
or
or
sbb
repnz
lds
mov
movsb
scas
in
clc
pop
push
arpl
inc
mov
scas
add
lcall
hlt
lcall
ja
xor
insb
jp
fwait
lahf
sbb
scas
pop
out
loop
mov
pop
inc
fcompp
adc
int
inc
mov
jnp
inc
hlt
xor
mov
movsl
je
adc
inc
rcl
paddw
shl
fsubl
sbb
lea
or
in
pop
jge
xorl
das
mov
icebp
xchg
inc
mov
mov
and
repz
rcll
lret
and
add
sub
push
test
pop
cmp
dec
sub
pop
add
pop
push
rdpmc
fistpl
loope
and
mov
jg
pop
aaa
outsl
filds
out
adc
jle
adc
test
rcrl
into
cmp
add
fiaddl
pop
ljmp
lock
test
fdivs
pop
xor
wrmsr
mov
pop
add
push
enter
adc
icebp
aas
mov
xchg
mov
fsubs
xchg
in
shlb
push
inc
dec
inc
xor
lret
movsb
sub
jg
outsb
mov
and
jmp
repz
ja
ret
add
jecxz
mov
and
jb
mov
push
dec
sub
cltd
add
or
fimull
or
pop
push
loope
adc
daa
into
hlt
cmp
push
das
bswap
aad
dec
adc
or
push
sti
or
add
add
stos
sbb
mov
pop
lret
mov
jnp
das
jnp
leave
hlt
addl
push
jg
ds
fwait
lahf
pusha
and
sub
mov
outsl
jp
xorb
and
jnp
push
enter
mov
sbb
sbb
mov
sbb
sub
int3
jge
enter
movsb
sbb
mov
scas
lcall
rclb
les
in
mov
xchg
iret
ss
movsb
jo
cmp
xchg
pusha
cmp
adc
lods
adc
mov
inc
andb
or
cmp
ja
lods
and
shr
xor
adc
sub
cld
jmp
fisubs
or
mov
lods
add
xchg
cmpsl
icebp
out
pop
mov
lcall
lock
jmp
sbbb
aam
cmpsb
add
xchg
je
gs
shlb
lahf
loope
add
push
imul
insl
mov
ljmp
fs
neg
dec
loopne
fdivrp
arpl
inc
mov
cmp
push
inc
xchg
push
jg
bound
leave
or
pop
add
pop
inc
xor
fldenv
mov
fstps
push
push
arpl
adc
cmp
loopne
or
dec
arpl
daa
mov
loopne
push
loop
mov
sahf
outsl
push
inc
push
jno
hlt
dec
adcb
push
or
xchg
into
arpl
loope
sti
das
mov
out
pop
stc
and
mov
jbe
popa
push
lcall
pop
sbb
xor
sbb
mov
mov
ret
inc
lods
sub
repz
std
push
pop
cld
mov
dec
shlb
jle
fadd
push
jg
pop
adc
and
xor
mov
in
iret
cwtl
testb
push
mov
sbb
sub
xchg
ret
negb
mov
jge
jnp
push
js
lcall
push
push
pop
jbe
mov
and
int
in
or
and
std
js
xchg
jg
out
dec
jae
cmp
add
add
out
icebp
lods
sbb
xchg
dec
mov
sub
shll
sub
lret
mov
lods
mov
test
mov
inc
push
lahf
inc
inc
inc
push
fisttps
dec
adc
setns
xor
jo
or
cmp
out
nop
push
jns
push
sbb
or
andb
fisubrl
sbb
sub
cmp
sbb
shll
loop
xor
push
cmp
cli
dec
lods
fwait
repnz
nopl
jne
clc
adc
jb
mov
jns
cmp
imull
xor
in
mov
xor
js
fidivs
ds
jbe
push
jb
adcb
pop
out
lods
sbb
cli
jl
scas
pusha
pop
lea
stc
cltd
cmp
ret
mov
push
lret
pop
add
cli
jnp
mov
cmp
ds
cld
mov
out
add
cmpsb
xlat
mov
mov
xlat
stos
mov
mov
mov
pop
push
loope
or
xchg
dec
add
xchg
push
adc
and
sub
mov
adc
dec
pop
cld
fdivs
xchg
inc
js
jo
jmp
and
xchg
loopne
jecxz
outsb
in
jno,pt
xchg
cmp
stos
cmp
xor
int
dec
mov
mov
int3
xor
and
loopne
cmp
and
xchg
imul
cmpsb
and
sub
adc
in
leave
sub
xchg
rorb
pop
push
push
std
adc
add
sub
sti
adc
xor
mov
or
ret
xchg
sub
aas
jg
mov
mov
xorl
bound
adc
mov
int3
sub
cmpsb
push
cmp
lahf
cltd
mov
fldln2
inc
lods
cmp
loop
adc
pushl
xor
int
xor
add
push
loope
push
sub
bound
scas
push
gs
ljmp
xchg
in
icebp
test
and
xchg
mov
adc
xchg
mov
jmp
lods
push
fildl
mov
mov
mov
dec
test
add
sbbb
push
add
mov
sub
add
jmp
xchg
stos
xor
icebp
hlt
pop
add
cmp
scas
push
jge
ficomps
lahf
mov
mov
aaa
sbb
dec
mov
dec
jno
insb
lahf
nop
imul
shlb
push
out
and
jb
mov
add
movsb
xor
mov
cs
mov
mov
dec
pop
dec
cmp
clc
gs
stos
push
and
data16
pop
pop
inc
cmp
mov
pop
cmpsl
cmp
sub
leave
xor
inc
clc
pop
inc
push
jae
bound
xchg
cmp
inc
stos
jp
dec
push
xchg
scas
arpl
add
inc
fdivr
cmp
mov
add
cmc
push
loope
jae
je
sub
inc
icebp
push
cmpsb
sub
cmp
sbb
ret
cld
mov
rcrl
jmp
mov
sub
sti
xchg
or
dec
aaa
mov
mov
inc
xchg
sub
inc
cmc
dec
fcoms
pop
dec
int
pushf
or
xchg
or
addb
movsl
pop
dec
sahf
cmpl
stc
stos
sbb
or
inc
push
mov
pop
pop
mov
nop
push
repz
dec
push
aas
rorl
dec
push
adc
gs
or
out
rorb
pop
dec
mov
cwtl
sbbl
nop
pusha
cld
dec
ss
sarb
add
push
pushf
sti
and
pushf
add
pop
daa
in
mov
sbb
push
mov
lods
jo
and
mov
inc
add
lret
es
jnp
mov
popf
out
jne
pop
xor
jg
fwait
imul
sub
mov
xchg
fldt
fisubs
push
add
flds
cmc
push
or
rcll
mov
jne
shl
xchg
fldl
pop
int3
push
jne
xchg
jae
dec
mov
dec
lods
mov
clc
lret
push
adc
mov
and
xchg
xchg
nop
push
pop
inc
repz
xor
inc
pop
rcl
lret
js
rcrb
mov
adc
pop
scas
popf
mov
xchg
and
dec
mov
cltd
dec
sbb
push
imul
and
hlt
cmp
push
inc
jg
in
xor
cmp
out
clc
rol
inc
test
cmp
cwtl
sub
pushf
mov
scas
fsubrl
pop
out
mov
inc
dec
not
xchg
push
and
inc
jo
loope
rcrb
adc
scas
bound
and
data16
mov
stos
ficomps
loope
cmp
inc
jg
push
jns
mov
mov
and
jecxz
lods
jae
fldt
mov
test
jns
or
stc
loop
push
lcall
int
and
lea
popa
cmp
xor
push
and
imul
inc
cld
mov
push
push
dec
inc
imul
or
adc
out
lods
mov
test
mov
add
mov
popf
int3
inc
push
lret
cmp
xor
cmp
push
and
push
loopne
insb
das
faddl
jbe
outsl
jg
cltd
mov
cmp
pushf
jnp
sarl
mov
shll
mov
or
mov
shl
inc
jmp
cmpsl
and
cmp
fstps
xchg
cli
add
sub
lcall
lds
ret
dec
leave
in
inc
push
mov
or
and
mov
push
mov
mov
mov
cld
jne
push
mov
push
repnz
sti
out
imul
daa
jmp
or
or
mov
adc
inc
dec
cmp
loopne
inc
lods
cs
roll
jl
ret
pop
xchg
xchg
push
xor
pusha
sbb
subl
and
lret
xor
mov
in
popf
mov
cs
add
add
pop
loop
mov
lock
jle
in
pop
dec
lahf
xor
xchg
mov
or
xchg
cmc
jl
pop
pop
mov
inc
and
fisubrl
mov
sbb
mov
dec
xor
fidivl
push
jnp
mov
pushf
outsb
mov
add
imul
gs
and
mov
mov
push
mov
out
xor
test
lret
dec
adc
xchg
cmp
loopne
cmpsb
xor
js
add
mov
outsl
sbb
lret
mov
mov
out
sbbb
cmpb
add
cld
mov
xor
pop
inc
stos
mov
inc
jno
dec
sub
jge
push
divb
cmpsb
loopne
jl
inc
or
popf
shll
ja
push
insb
in
mov
mov
dec
dec
xchg
jg
test
mov
inc
fincstp
sub
aam
cmpsb
loope
and
call
fcompl
fnstsw
sub
std
add
push
out
sbb
cmc
adc
push
sti
mov
test
mov
stc
stos
mov
aaa
xor
cmp
addr16
enter
fldenv
xor
cs
inc
push
jne
mov
outsb
lds
in
movsl
mov
jb
push
pop
out
and
pop
mov
shrb
pop
jmp
cld
inc
push
mov
int
cmp
and
stos
lds
cmpsb
adc
cmp
adc
in
rolb
cmp
das
or
cmp
aas
insb
in
fidivrl
push
hlt
jecxz
mov
mov
push
es
sub
xorl
xor
or
push
rclb
aaa
sub
lods
decb
or
je
ss
cmp
push
xchg
pop
pop
fimuls
cli
fisttpll
sub
divb
adc
dec
outsb
dec
lock
jp
push
fisubs
stos
mov
lret
jg
out
clc
stos
ss
mov
inc
ficompl
jp
mov
or
xchg
add
inc
sub
adc
aaa
jbe
mov
int
and
insb
push
sub
jp
dec
cmp
test
cmp
ljmp
pop
imul
add
sub
inc
pushf
leave
xor
push
cmp
and
cltd
js
leave
sbb
mov
mov
je
mov
test
mov
push
jnp
dec
insb
popf
lahf
roll
call
pop
cmp
pop
int
and
in
int
push
xchg
mov
les
outsb
xorb
mov
jns
inc
pusha
inc
mov
nop
sbb
and
mov
jne
mov
cmp
inc
add
mov
ds
gs
cltd
push
neg
or
mov
mov
sbbl
stos
xchg
insb
adc
mov
jp
jl
popf
jmp
test
mov
insl
stos
pop
stc
cld
into
addl
and
xchg
aas
push
popf
adc
aad
rcrl
enter
xchg
in
clc
pop
in
out
add
jb
daa
lock
pop
addr16
or
inc
sbb
jecxz
jae
imul
cmp
xor
dec
jns
lea
pop
insl
setp
mov
leave
int3
repz
hlt
mov
cmp
dec
fiadds
imul
ror
dec
mov
jecxz
dec
cmpsb
push
cwtl
repnz
cwtl
sub
out
lods
sahf
mov
sbb
into
cli
mov
stos
rcrb
pop
and
pop
and
aad
xor
mov
mov
mov
cmp
aaa
arpl
dec
jno
cmp
mov
mov
xchg
jno
xor
stos
daa
int
add
test
or
mov
pop
adc
in
call
mov
cmp
inc
add
stos
push
inc
push
stos
call
call
gs
lcall
inc
mov
insb
lcall
insl
sbb
out
mov
lea
rcrl
cli
icebp
push
orb
popf
mov
jno
aam
fsubrl
clc
mov
call
mov
mov
push
mov
push
lds
cli
lods
mov
pop
aas
stos
and
testb
inc
mov
mov
and
loop
add
xchg
adc
nop
mov
call
into
pop
jp
or
or
clc
mov
fnstenv
pop
test
or
faddl
add
sub
pusha
xor
cltd
int
adc
test
in
mov
out
dec
dec
jbe
xchg
inc
out
cmc
loope
dec
jle
bound
push
mov
repz
js
adc
adc
scas
xor
sbb
mov
sub
jmp
sbb
in
das
cmpsl
cs
jns
es
shlb
jb
jmp
mov
aad
or
mov
jae
scas
mov
lds
sbb
add
sbb
adcb
sbb
int
mov
iret
xchg
lds
pop
arpl
pop
xlat
lods
adc
sub
dec
mov
pushf
insl
xchg
sahf
push
out
mull
adc
cmp
es
xchg
xchg
cmc
sbb
cmp
and
scas
push
sti
pop
sub
mov
pop
shll
xchg
imul
das
xchg
fucomp
jne
dec
test
mov
nop
jnp
dec
cmp
push
lahf
out
mov
add
rolb
out
rorb
push
cwtl
mov
pop
push
mov
push
sahf
mov
inc
lock
pop
xchg
mov
cmp
int
inc
mov
mov
pop
subl
sub
xlat
mov
adc
or
mov
jnp
test
pushf
jmp
dec
js
xor
jge
sbb
cmp
stc
sbb
and
inc
or
repnz
fdivrs
xchg
rsm
sbb
hlt
xchg
pop
add
push
push
add
add
rcl
aad
cs
and
insl
xor
xor
xor
lock
cs
pop
addl
or
jo
sub
or
in
orl
push
popf
cli
pusha
das
mov
jne
adcb
push
xchg
or
ds
inc
loopne
and
push
jbe
mov
pop
pop
mov
out
dec
insl
subb
sbb
and
or
inc
in
stos
divb
or
pop
pop
and
int3
cltd
xor
or
das
inc
sbb
fldt
dec
adc
pop
mov
lods
gs
loopne
mov
mov
stc
xor
sub
data16
and
lds
je
arpl
pop
mov
mov
push
inc
mov
in
sbb
and
mov
mov
sbb
loopne
ss
jl
jb
adc
mov
test
aam
sahf
aaa
je
popa
jle
add
add
mov
pop
in
dec
push
sub
les
ret
mov
xchg
xor
mov
sub
push
sahf
dec
cltd
cli
rclb
imul
movsl
in
push
xchg
xchg
lock
or
mov
pop
xchg
mov
and
push
pop
cmpsl
or
es
fsub
rclb
cmp
jne
mov
push
jp
xor
xchg
rcr
aaa
and
sub
das
pop
push
int3
mov
cmp
add
or
sti
rorb
add
push
mov
dec
push
fsub
in
adc
or
bound
adc
mov
xchg
inc
movsl
cs
dec
or
lock
push
jae
push
sub
sub
repz
aam
add
add
or
gs
cmp
aad
aam
shrb
out
out
call
xor
push
mov
shrb
push
mov
mov
vcvtpd2psy
fwait
mov
in
enter
sub
pop
push
cmp
scas
mov
mov
insl
fistpl
mov
push
jmp
push
adc
call
in
jle
outsb
push
test
rcr
pusha
gs
aam
rclb
pop
pcmpgtb
loope
dec
lds
fistpl
adc
inc
je
cmp
sub
scas
push
ds
xor
push
pop
push
xchg
sbb
ljmp
outsb
mov
add
cmpsb
fs
mov
repz
jbe
mulb
jns
jp
repnz
mov
mov
xor
xchg
stos
imul
sub
or
lods
pop
cli
mov
sti
pop
mov
jg
mov
sti
clc
mov
or
mov
popa
cmc
lcall
xor
xor
mov
cmc
jb
or
and
imul
pop
mov
and
sbb
leave
in
gs
lock
movsb
mov
adc
pop
xchg
mov
sar
dec
stos
scas
xchg
outsl
inc
daa
out
test
cmp
adc
ja
jb
call
mov
mov
aam
adc
push
xor
ljmp
movsb
jno
ds
sub
fs
mov
and
ret
cmp
xor
pop
fdivr
out
jb
movsl
mov
mov
pop
mov
movl
xchg
or
inc
jbe
mov
pusha
incl
repz
sub
dec
pusha
push
jb
shll
lcall
nop
mov
leave
pop
xchg
mov
inc
jbe
orb
movsb
ja
fisubrs
scas
add
pop
xchg
fstpl
dec
mov
enter
lods
sub
sub
cmpsl
jae
insb
pushl
jle
or
aas
nop
or
and
hlt
mov
in
test
sub
loope
and
popa
pop
mov
imul
pop
nop
sub
popa
push
outsb
sub
or
add
out
enter
cs
pop
pop
sahf
jl
dec
mov
cmp
in
lock
das
pop
push
mov
clc
adc
jg
mov
faddp
adc
xor
in
ljmp
das
pop
sbb
outsb
xchg
inc
lret
inc
rcrb
cmc
adcl
loop
pusha
insl
mov
ret
insb
lods
dec
xlat
testl
sub
rorl
sub
loopne
and
sub
rclb
fwait
je
in
pusha
mov
sti
shlb
sub
movsl
aam
lahf
inc
sahf
or
aad
arpl
jecxz
cwtl
mov
int
adc
mov
lcall
in
xor
jecxz
test
in
outsb
cmp
add
loope
jb
mov
add
xchg
sbb
mov
std
sub
mov
inc
aas
push
pop
inc
mov
sbb
iret
xchg
std
cs
add
rorl
int
xor
pop
push
test
or
push
into
lods
xor
dec
mov
daa
ret
mov
xchg
sti
scas
pop
pop
aas
xchg
pop
aad
daa
insb
leave
xor
sub
jmp
push
mov
daa
mov
xchg
outsl
push
jmp
cmpsb
cmpsb
aad
std
jbe
neg
outsl
arpl
and
fwait
cmpsl
fs
mov
lret
mov
xor
ds
push
fldenv
lret
pop
xor
xlat
cmp
cmp
outsl
jae
in
sbb
jmp
rorl
adc
xor
lcall
mov
jmp
pop
adc
rclb
test
enter
pop
add
ljmp
pop
jno
mov
cmp
add
jp
fstps
icebp
or
bound
push
fistpl
jno
jp
sti
sti
movsl
cmc
xchg
push
loop
ds
add
lea
xchg
aaa
adc
add
xlat
mov
jp
xchg
cmc
bound
scas
or
orl
frstor
aam
movsl
jle
jecxz
xorb
cmp
rorb
add
cmc
scas
jl
pop
shrl
adc
mov
mov
mov
arpl
outsb
in
shll
jnp
mov
out
ret
pop
push
cmp
pushf
jb
dec
mov
mov
repz
repz
daa
vcvtsi2sd
or
sub
sbb
cmc
and
call
adc
in
mov
in
stc
fdivrl
lods
xchg
out
aam
add
sbb
mov
xchg
inc
inc
iret
pusha
inc
push
sbb
lock
xor
mov
lret
loope
lds
lea
bndstx
push
popa
sbb
jno
ret
dec
and
pop
mov
fsts
cmc
dec
bnd
or
test
mov
lds
fildl
cli
lcall
adc
in
and
add
and
or
mov
dec
sbb
int3
xchg
xchg
mulb
mov
movsl
cmp
and
test
sbb
and
leave
out
mov
add
daa
adc
xchg
sbb
pop
setb
mov
pop
mov
and
mov
shll
sysexit
call
lahf
mov
adc
addr16
xorl
cmp
or
jmp
aaa
mov
dec
dec
clc
xchg
movsl
test
jns
jo
shlb
loop
or
sbb
push
jmp
jecxz
dec
push
xchg
pop
lods
leave
or
mov
fimuls
andb
insb
ja
std
pushf
imull
pavgb
pop
aad
push
js
popf
in
push
push
shll
push
scas
add
arpl
sahf
and
jge
clc
mov
push
adcb
adc
rorl
sbb
jb
fwait
dec
cmp
push
sbb
cmp
adc
roll
mulb
push
xchg
test
popa
bound
sbb
or
add
ljmp
sti
sahf
popf
mov
or
ror
out
test
into
xchg
insl
push
test
jb
push
lea
xchg
imul
or
cli
sub
fmull
lahf
in
inc
sub
test
std
mov
ret
xor
sbb
lods
push
fwait
sarb
and
push
bound
fldln2
int
ss
ljmp
leave
sbb
jp
fs
mov
cmp
and
push
insl
mov
sub
insl
in
fstpt
imul
jae
fdivl
xchg
mov
lret
mov
jb
xor
or
sti
sbb
test
lcall
dec
data16
xchg
add
nop
negb
sti
sti
imul
pop
test
cwtl
push
push
mov
sbb
mov
rcrl
mov
inc
xchg
sub
loope
pop
or
test
push
sub
add
mov
fcmovnu
push
aaa
cmp
xor
jns
and
leave
lock
cmp
rclb
imul
or
dec
dec
push
ret
inc
iret
pop
lods
push
or
dec
arpl
xchg
sub
mov
or
cmc
mov
dec
fwait
bound
sub
push
inc
rcrb
test
dec
ss
pop
xor
insb
pop
idiv
hlt
mov
insb
popf
cli
push
jp
fmuls
sbb
adc
xchg
xchg
adc
adc
sbb
ljmp
mov
imul
adc
jo
dec
and
pop
test
data16
inc
and
sti
pop
iret
data16
fsubs
jmp
adc
cld
and
hlt
leave
fs
imul
jp
out
sahf
shll
subl
jne
sub
mov
scas
dec
leave
test
cmpsb
test
ficoms
in
iret
pushw
sbb
pop
push
js
adc
sub
cli
pop
lcall
fcmovu
fsubr
outsb
lock
sub
pop
mov
decb
cmp
pop
repz
dec
insl
xlat
filds
lret
shll
roll
lods
in
addb
dec
mov
dec
stos
lods
pop
nop
jb
sub
adcl
push
dec
mov
rcl
movsl
mov
cld
loope
add
lea
test
inc
in
out
push
inc
test
inc
cmp
inc
pop
in
ds
shlb
loopne
fidivrl
and
fldcw
sahf
pop
jg
bound
dec
fucom
cmp
inc
hlt
inc
xchg
das
or
test
call
insb
and
jg
cld
insb
cmp
loop
daa
sbb
imul
adc
mov
dec
lods
xchg
or
in
jmp
les
out
bound
lcall
dec
sbb
scas
push
or
cmp
push
lods
divl
jp
mov
push
push
pop
inc
xor
mov
inc
jno
movsl
push
push
mov
sbb
lea
push
loope
jns
xchg
jecxz
jns
testb
mov
insb
xchg
push
jo
fistl
lods
repz
lock
imul
imul
xor
mov
cmp
aam
mov
xchg
lea
mov
cmp
in
and
fildll
and
je
sbb
ret
and
or
hlt
imulb
jns
insb
sub
sahf
cli
enter
nop
push
int3
fsubl
imul
xchg
mov
fisubl
push
andb
xor
add
adc
out
xchg
xor
jge
imul
mov
ss
movsl
cmp
mov
sub
pop
inc
iret
inc
sarl
sub
popa
inc
cltd
xor
inc
lea
sbb
aas
pop
sub
dec
outsl
aas
inc
enter
mov
jmp
seto
jnp
mov
sbb
clc
xor
stos
adc
clc
rolb
lret
sub
lock
and
cmp
jne
inc
mov
pushf
jg
in
pushf
add
push
faddp
into
in
inc
push
push
lret
xchg
mov
mov
js
ljmp
jnp
lret
mov
pop
mov
movsb
les
hlt
mov
insl
ljmp
mov
mov
cmp
push
xor
pushf
jle
aas
xchg
push
shll
mull
xchg
dec
xchg
in
dec
pop
inc
inc
repnz
lods
icebp
mov
shll
cmp
jg
push
shrb
loopne
sub
test
jb
push
out
dec
scas
out
or
test
sarb
mov
loop
xlat
pop
sbb
xchg
and
mov
and
clc
shlb
jb
and
out
push
nop
adc
xchg
sbb
nop
repnz
aam
scas
dec
jg
or
sbb
xor
lea
jno
xor
inc
mov
jb
cmp
adc
cs
jmp
adc
scas
xor
pushf
loopne
add
aad
adc
clc
jnp
jge
outsl
ljmp
cmp
ja
into
and
mov
adc
scas
aam
arpl
inc
adc
sbb
sbb
shl
cmp
in
pop
mov
aas
les
mov
push
pop
addb
add
mov
xor
mov
add
sub
lds
push
add
mov
inc
or
mov
in
test
xchg
cmc
push
jb
dec
inc
and
push
gs
xor
xor
imul
ljmp
out
les
std
pop
dec
in
imul
sbb
and
inc
pop
jl
or
dec
sarb
sub
je
ret
jp
call
das
inc
push
arpl
mov
subl
incl
rclb
cmc
ljmp
bnd
pop
testl
movsl
loop
xor
rolb
push
aas
lcall
ret
inc
jns
pop
icebp
pushl
fistpl
mov
or
stos
pop
mov
pop
lahf
pop
xchg
test
testl
sub
cltd
lea
xchg
pop
and
push
cmp
bndstx
repz
inc
adc
ficoms
scas
enter
sbb
movsb
lea
movsb
mov
aas
mov
xor
adc
test
inc
scas
pusha
sub
cmpsb
or
cmp
fidivrs
mov
sub
mov
push
repz
shlb
and
and
pop
inc
daa
push
add
cmpsl
es
cmpsb
sbb
dec
movsl
mov
mov
or
ret
outsb
and
xchg
repnz
jo
xorb
das
je
xchg
dec
cwtl
mov
inc
test
sbb
pop
stc
test
stos
fstp
dec
stos
scas
fidivrs
iret
test
out
push
aas
icebp
pop
or
mov
cld
jge
fidivrs
lret
sub
jmp
add
or
lock
add
jmp
dec
sub
xchg
cmp
add
pop
rcrb
ror
movsl
js
mov
jae
fwait
sub
shl
cs
negl
jmp
fucomip
dec
xchg
cmc
xchg
mov
addl
cmp
lret
mov
lds
xchg
pop
movsb
shr
dec
add
push
push
dec
jae
shll
sbb
push
adc
dec
jp
mov
cmp
insb
jmp
sbb
and
test
pop
inc
cmp
andb
xchg
mov
pop
mov
sbb
pop
mov
aad
fdivrs
in
push
int
mov
and
jmp
mov
pop
sbb
add
sbb
dec
aas
pop
orl
cmp
int
push
out
dec
sub
xor
in
xor
pop
jmp
out
lods
and
or
mov
push
mov
mov
push
dec
lret
mov
mov
fs
ror
mov
loop
es
decb
aas
inc
sarl
jg
lahf
or
ljmp
cmp
mov
fmuls
hlt
sub
mov
gs
ds
jl
jg
ss
jl
lret
rorl
mov
mov
test
adc
jbe
je
adc
xor
dec
loope
pop
mull
adc
in
ss
jnp
hlt
inc
jle
enter
in
add
push
push
movsb
lods
lods
test
mov
cmpsl
pop
push
aaa
jg
pop
sbbl
shrb
lds
or
and
ljmp
dec
xchg
inc
xor
lods
adc
gs
cmp
dec
jg
xchg
pop
lret
adc
ds
inc
mov
cmp
jg
adc
fwait
inc
adc
mov
imul
mov
je
ficompl
mov
cs
dec
inc
aam
push
add
xchg
repz
add
jecxz
add
aam
sti
mov
xabort
ljmp
test
idivl
or
jecxz
xor
loop
adc
sti
cmpsb
gs
std
jae
mov
mov
and
sbb
add
shrb
in
push
mov
outsl
fmul
sbb
jle
xchg
clc
decl
jecxz
addb
sbb
in
jg
pop
in
mov
lret
push
lahf
push
inc
nop
popa
aam
daa
iret
inc
jmp
pop
dec
or
pusha
mov
sub
adc
out
pop
fwait
inc
movsb
push
out
inc
inc
fstl
pop
test
sub
pop
xchg
mov
push
iret
jnp
push
pop
sub
adc
repz
sub
mov
std
pop
push
aaa
or
and
fadds
inc
and
loop
cwtl
and
lahf
cld
lret
in
mov
cmp
rcrb
dec
pushf
cmpsl
adc
jne
mov
je
repnz
notb
mov
insb
cmpsl
lcall
mov
movsl
dec
mov
repz
jl
lcall
or
inc
je
or
or
std
nop
sub
cmp
bound
sub
or
jae
addr16
xor
pop
and
jnp
adc
sahf
or
inc
xchg
smsw
inc
adc
popf
insb
mull
jne
push
arpl
arpl
jb
push
mov
dec
data16
mov
or
mov
push
jnp
xchg
pop
mov
mov
fbstp
jecxz
pushf
cmp
mov
dec
pop
cltd
mov
cmp
imul
mov
adc
ljmp
push
roll
loope
xlat
xor
loope
jnp
roll
std
rcrb
jp
mov
popf
outsb
push
push
mov
loope
adc
add
adc
adc
lods
jbe
scas
leave
outsb
inc
inc
add
pop
out
loopne
pusha
cld
pop
adc
push
sub
pop
mov
sbb
pop
repnz
bound
sbb
cmc
mov
int
jb
stos
std
loop
push
ret
and
inc
inc
sbb
mov
mov
add
je
aam
push
js
cmp
mov
fdivl
sarb
sub
and
and
out
pop
mov
xorb
or
push
call
jecxz
subb
jecxz
sub
jle
jbe,pt
loope
lret
pop
mov
bnd
sbb
fmul
cmpsb
push
mov
xlat
sbb
fnstenv
call
cmpsl
sub
adc
inc
inc
dec
cwtl
into
xlat
lahf
push
pushf
jecxz
outsl
jno
push
jno
cmp
test
popf
push
jno
loope
mov
push
in
add
call
mov
xchg
mov
pop
dec
jne
out
mov
jnp
add
inc
es
test
sub
mov
icebp
mov
cmp
sbb
jmp
mov
sub
fbld
adc
jge
dec
inc
andb
jne
xor
aad
ficoms
nop
das
dec
jb
out
sbb
push
imulb
out
pop
mov
or
sbb
and
iret
sub
dec
orl
cmc
pushf
imul
int3
es
sub
mov
jmp
jbe
dec
push
add
bound
sub
loopne
mov
pop
push
jmp
push
mov
test
fdivs
jp
in
and
fidivs
insb
mov
pop
imul
and
jmp
fs
test
loop
and
hlt
inc
push
sbb
lret
adc
lds
adcl
js
ret
movsl
inc
out
xchg
xor
jmp
jns
or
sbb
cwtl
shl
push
cmp
lock
aaa
addr16
sub
sti
push
mov
jmp
frstor
pop
xchg
lea
inc
adc
vpshlw
add
and
jp
sub
mov
adc
flds
mov
mov
ds
push
bound
xchg
mov
scas
cltd
sarl
loope
mov
lds
push
and
je
xchg
add
insl
dec
mov
std
stos
aad
xchg
pop
sub
lcall
pop
mov
rorb
in
add
hlt
fmull
shl
nop
stos
lea
dec
and
xchg
dec
pop
jo
sub
sbb
mov
pop
jmp
ficoms
dec
scas
fsubrl
scas
inc
ja
push
adc
and
dec
jg
xchg
mov
jns
push
lods
and
icebp
inc
lahf
mov
sbb
inc
push
pushw
lods
cmpsl
adc
jmp
lret
dec
dec
out
and
js
dec
fdivrl
jmp
pop
fsubs
sarl
adc
push
pop
test
stos
mov
cmpsl
ret
dec
xor
std
and
xor
out
ret
stos
sub
inc
bnd
inc
xor
pop
xchg
insb
adc
mov
aad
nop
je
fcomps
adc
adc
push
pushf
aam
out
dec
sahf
sbb
ds
pop
shl
push
loope
mov
call
pop
mov
dec
adc
loop
out
mov
mov
mov
bound
lods
mov
xchg
aas
es
sub
cmpsb
jp
push
dec
jne
out
ljmp
xchg
mov
push
cmc
sub
hlt
nop
pushf
cmp
pop
xchg
cli
mov
cld
pop
cld
or
into
ss
push
movsb
cmc
pop
sbb
jp
ret
imul
pop
mov
stos
decl
dec
cs
outsb
in
and
mov
fisttpll
arpl
sbb
add
xchg
pop
mov
xchg
fisubrs
in
dec
loop
push
push
ja
xchg
cld
pop
and
sbb
repnz
push
lret
cmp
hlt
clc
xchg
mov
leave
push
cmp
out
and
jle
out
adc
cmp
push
fwait
xor
dec
fcom
loop
bound
sahf
pop
mov
sub
enter
cli
push
mov
nop
data16
push
sbb
movsl
or
aam
pop
pop
push
lahf
mov
fistpl
dec
in
adc
hlt
insb
rcll
mov
popa
jp
xchg
xchg
push
bound
xchg
xorl
xor
push
jg
ss
mov
add
out
xchg
in
ror
shlb
leave
repnz
loopne
cwtl
je
jnp
insb
xchg
sub
mov
adcb
lahf
test
addr16
dec
jg
inc
insb
outsl
jb
xchg
call
mov
mov
cmp
dec
jne
repnz
arpl
adc
shll
dec
adc
add
rol
sbb
cmp
mov
jp
sbb
sbb
aas
sti
les
sub
pop
or
jae
mov
ds
lods
out
sub
inc
js
inc
mov
mov
pop
or
orl
hlt
push
mov
xchg
mov
test
lods
fistpll
cld
insb
int3
icebp
push
leave
popf
repz
sub
inc
push
add
lds
dec
loop
lcall
and
inc
push
xor
repnz
mov
cmp
sub
scas
xchg
pop
out
sbb
push
xchg
jp
popa
pushf
int
cmp
mov
and
jns
cmpsl
addr16
sub
jnp
mov
jb
push
cmp
add
aas
add
fsubrl
push
add
xchg
jae
lods
mov
les
out
jecxz
je
fmull
in
sub
stc
mov
jnp
jo
jg
mov
bound
sub
and
pushf
es
in
sub
cmp
mov
fwait
inc
xchg
int3
mov
sub
dec
lock
push
push
imul
loopne
int3
test
loope
loop
dec
loopne
enter
je
call
or
jmp
and
adc
push
lds
xchg
mov
jo
or
mov
dec
or
mov
sar
mov
inc
mov
test
repnz
inc
repz
sub
add
cwtl
cmp
mov
sarl
imul
fildll
sub
xor
sahf
dec
out
in
and
mov
xchg
push
mov
mov
and
cwtl
aam
fsts
and
jecxz
fdivl
fdivrp
les
sbb
in
mov
mov
lahf
xchg
mov
adc
stc
mov
and
mov
ror
or
sub
cltd
paddusw
iret
cli
in
popf
and
inc
ja
cmp
mov
adc
repnz
inc
sbb
pop
insl
mov
out
out
and
xchg
stos
arpl
cld
arpl
cmp
js
insl
fadds
lods
xchg
inc
ljmp
push
insb
pop
int
scas
cli
cmp
test
call
negl
pop
pop
inc
mov
outsl
mov
xchg
dec
xchg
cmp
jb
cmp
lods
popa
pushf
xor
mov
paddusw
arpl
sbb
jp
or
lret
xor
dec
add
xlat
addr16
xor
pop
push
xor
mov
ja
in
dec
sub
movsl
js
in
xor
icebp
das
mov
adc
inc
push
sbb
scas
mov
jecxz
adc
inc
fdivrs
adc
fcomip
lret
inc
adc
inc
stc
and
or
jl
cmp
push
and
stos
repz
push
xor
jns
add
or
dec
leave
mov
dec
lds
xor
mov
and
cli
dec
test
sub
outsl
xor
nop
xor
fs
js
aaa
pop
xchg
ds
adc
push
cs
mov
in
out
sti
xchg
stos
sub
std
xor
adc
dec
or
stos
gs
clc
mov
stos
jbe
mov
xor
or
andb
sahf
pop
nop
add
shll
mov
inc
fimull
push
test
add
adc
jnp
sub
xchg
data16
dec
test
fisubl
push
data16
jnp,pt
pop
mov
jl
stos
xchg
or
mov
ja
repz
in
or
out
lds
scas
inc
andb
xor
in
add
jg
inc
and
dec
xchg
lcall
lcall
stos
pop
jg
pop
push
and
lret
out
or
aaa
jl
mov
push
call
dec
aam
mov
jne
push
or
push
nop
ficoms
cmp
pop
fsubl
adc
cmp
pusha
jne
fcmovnbe
xchg
in
outsb
je
sub
dec
cltd
inc
repz
cmc
or
sub
mov
scas
int3
dec
mov
mov
push
cmp
std
loopne
mov
orb
jmp
scas
pop
fwait
pop
js
lret
add
aad
jmp
mov
aam
add
adc
lret
les
xor
in
sbb
mov
sbb
or
xchg
in
jle
clc
push
shll
inc
ret
int3
push
imul
subl
dec
jg
or
inc
xchg
adc
mov
or
imul
xchg
add
mov
pop
cs
dec
nop
popa
push
mov
fimuls
cmp
scas
test
add
std
prefetch
or
pushf
and
fs
adc
pushf
fisubrl
add
dec
cwtl
scas
fnstsw
loop
lds
out
aam
or
fists
dec
adc
fildll
lcall
shr
test
cmp
roll
addr16
pop
and
cmpb
inc
xor
inc
dec
loopw
stc
jb
inc
jmp
stos
add
jno
icebp
bnd
das
pop
jno
in
xor
pop
into
jecxz
pusha
test
sbb
adc
test
or
lock
out
pop
rol
push
jg
sbb
push
mov
cmpsl
mov
push
popa
mov
add
add
push
xchg
mov
sarb
add
push
sub
mov
imul
test
clc
addr16
aaa
or
aam
dec
cmp
mov
test
popa
inc
test
or
sbb
roll
mov
inc
jp
xchg
pop
dec
shlb
inc
lock
setnp
mov
adc
push
push
jecxz
pushf
lcall
sar
jg
pop
jg
or
shll
xchg
popa
popa
scas
adc
ljmp
dec
or
rorl
in
inc
dec
rorb
push
add
mov
std
stos
call
gs
js
ss
mov
jo
aam
dec
lcall
incb
pop
pop
adc
dec
jno
cmp
jno
push
bound
out
inc
jg
push
loop
mov
mov
imul
test
add
sub
shll
loopne
jns
clc
cmpl
pop
mov
cli
int3
loope
mov
mov
dec
xchg
pop
mov
mov
les
mov
push
jno
jbe
jnp
int3
dec
cwtl
test
adc
in
fdivrs
mov
inc
xorl
adc
add
inc
popa
je
xchg
pop
mov
and
lret
imul
lods
sub
dec
sub
mov
in
sub
enter
xchg
push
mov
xor
jp
dec
scas
js
push
popa
xor
divl
imul
mov
ljmp
incl
loope
sbb
cmpsb
push
sarb
sti
jmp
iret
movups
sbb
sbb
cmpsb
stos
gs
adc
ret
shl
dec
shlb
icebp
sahf
xchg
add
jge
inc
push
je
xchg
adc
test
sbb
imul
xor
data16
jmp
shlb
cmp
xchg
into
arpl
sub
jge
sub
push
lcall
subl
lcall
ss
dec
or
outsb
pop
lcall
lret
mov
push
jmp
jno
aaa
xor
xchg
xorb
jae
out
jns
jo
shll
out
xchg
popa
sub
int3
cmpsb
pop
mov
cmpsl
xchg
pusha
mov
ss
lret
das
sti
mov
xchg
sub
push
push
add
leave
sti
scas
xchg
jg
jecxz
mov
push
addl
jl
in
pop
jo
loop
cmp
inc
rorl
add
xor
aas
insb
add
dec
iret
lds
fwait
subl
test
pusha
popa
adc
cwtl
out
add
mov
sbb
adc
jg
mov
mov
xchg
add
out
push
pop
mov
xorl
cmp
jae
mov
nop
stc
ss
dec
pop
xor
jne
adc
cmpsb
mov
cmp
mov
lahf
cmpb
out
xchg
inc
popa
cmp
enter
fsubs
cs
pushf
and
lahf
testl
inc
xor
sub
mov
pop
fidivrs
push
pop
mov
pop
stos
imul
rorl
mov
lds
lea
rcl
adc
inc
js
dec
das
inc
aas
adc
push
rolb
pushf
mov
int
data16
out
sub
inc
pop
lahf
dec
xchg
outsl
jns
mov
shrl
jmp
cmp
xor
pushf
pop
or
js
aaa
cs
sbb
pop
cli
inc
lods
or
xor
and
js
in
adc
imul
test
fsubr
das
sbb
inc
dec
repnz
sub
add
ljmp
lods
mov
inc
adc
int3
inc
pusha
stos
jno
jge
jp
pop
push
jmp
test
or
jmp
sub
add
sbb
mov
rcl
inc
bound
cmpsl
insl
into
roll
imul
mov
cmp
inc
stos
out
loopne
xchg
push
mov
ret
jnp
rorl
int
stos
and
repnz
jb
out
sar
mov
ljmp
enter
pop
xchg
aas
out
or
xchg
xchg
idivl
ds
sub
and
mov
daa
sub
push
pop
mov
andb
pop
mov
rolb
fwait
and
xchg
test
mov
xchg
stos
in
dec
cmp
cmc
add
sarl
aaa
or
or
fldenv
mov
jns
es
xor
mov
daa
adc
shll
pop
in
or
dec
rorb
out
es
stos
in
mov
cmp
sub
mov
and
mov
shlb
push
xchg
pop
push
ret
mov
addr16
lods
cmp
inc
sub
mov
add
rcl
sub
sbb
cmpb
lea
adc
mov
mov
pop
icebp
inc
lret
sbb
pop
mov
test
xor
push
std
dec
xorl
mov
mov
jns
fstpt
sbb
rcrb
icebp
sub
fidivrs
sbb
cwtl
cmp
mov
or
jmp
sahf
es
es
cmp
sbb
push
cli
jae
je
ficomps
testl
jns
outsb
pop
daa
sbb
jmp
adc
adc
and
jne
push
dec
jb
fiadds
addl
in
addr16
in
dec
fnstenv
inc
and
add
jno
mov
adc
ss
fldl
out
jb
xor
gs
add
sbb
mov
jns
aam
mov
jp
sub
and
loope
cmp
pop
cmp
mov
sub
cmp
mull
and
sub
and
mov
cmp
mov
rorl
lahf
ret
imul
xchg
cli
std
cmp
ficoms
cli
mov
jg
dec
sub
cmp
xor
jns
push
stos
in
icebp
in
repz
adc
pop
sarb
fnstcw
push
mov
adcl
std
inc
in
push
in
int3
rclb
adc
dec
sub
mov
mov
enter
movsl
mov
popf
lahf
push
stos
xchg
mov
jno
rcrl
popl
cli
adc
pop
sbb
adc
cmp
and
outsb
ljmp
decb
mov
daa
cmp
outsb
add
scas
insb
sub
jle
cmp
add
cmp
fs
xchg
mov
cmp
jge
push
bound
push
test
mov
mov
pop
jb
push
int3
add
xor
and
xadd
outsl
jno
shll
out
mov
mov
test
xchg
repnz
push
in
int3
push
mov
mov
pop
outsb
mov
les
ret
mov
jl
xor
and
xor
push
mov
test
imull
add
jmp
call
mov
push
out
aam
in
xchg
push
int3
int3
leave
mov
subl
bound
mov
sbb
add
test
push
adc
or
push
in
cmpsb
les
cld
popf
sbb
xorl
mov
inc
pop
es
adc
lret
aad
dec
dec
mov
dec
fiadds
lock
push
mov
testb
dec
add
cmpsb
adc
out
lahf
jl
repz
shlb
cmpsb
ficomps
repnz
mov
xchg
sub
sbb
cmp
int3
mov
adcb
pop
shlb
loopne
jo
fmul
es
bound
inc
or
push
mov
ljmp
addl
test
xchg
or
cmpsb
cmp
sarl
or
mov
jns
sub
and
arpl
xchg
jecxz
push
lods
sub
mov
xchg
inc
jbe
popf
je
dec
xchg
into
mov
je
out
or
mov
fnstsw
inc
cmc
add
stc
mov
fnstsw
cmp
data16
test
daa
sub
decl
fidivrl
iret
mov
and
push
mov
push
jmp
and
scas
cmp
les
fwait
jae
ljmp
in
int3
cmp
les
cmpsl
sub
test
and
sub
and
adc
pop
dec
xor
stc
sub
pop
rorl
sbb
aas
out
inc
mov
push
repnz
repnz
sbb
cmp
xlat
int3
dec
or
addr16
inc
jb
xchg
cmpsl
into
lcall
in
sti
xchg
pop
dec
push
les
les
dec
scas
push
out
mov
adc
sbb
fildll
repnz
dec
cmc
inc
mov
mov
ja
aad
xor
mov
stos
fimuls
ss
sbbb
repnz
ljmp
mov
dec
push
add
icebp
sar
ds
adc
test
popl
lret
cltd
cmpsl
cli
pop
dec
add
stos
cwtl
jb
xchg
mov
add
jecxz
test
mov
pop
imul
mov
jo
push
jl
mov
movsb
aam
xchg
insb
fiadds
and
ljmpw
sub
jmp
repnz
push
cmp
add
in
mov
and
jo
add
fsubp
rclb
jo
dec
movsb
mov
mov
push
enter
or
lods
cmp
js
in
out
xchg
punpcklwd
std
ds
fwait
push
lcall
out
out
pop
gs
in
repz
and
aas
mov
or
xchg
shl
sub
pop
add
or
sub
ret
jbe
jnp
or
sahf
mov
test
add
mov
jae
inc
dec
mov
add
repz
scas
xchg
das
clc
lahf
cmc
cmp
insl
aam
enter
dec
add
mov
mov
mov
xchg
fcomps
xchg
mov
sbb
loopne
subb
out
and
mov
xor
and
sbb
cmp
aad
pop
sbb
dec
xchg
push
and
add
xchg
pop
mov
aas
pop
push
push
ret
stos
into
fnsave
leave
cli
mov
pop
lds
fcom
out
int
mov
lret
xor
push
inc
iret
ret
jmp
inc
or
inc
sahf
insl
popa
clc
jge
xor
or
inc
push
and
mov
scas
mov
xor
or
mov
out
aas
mov
in
aad
aaa
cltd
dec
pop
adc
aam
sar
popa
outsl
in
ss
cld
fildll
adc
sbb
in
ljmp
lcall
or
push
add
xor
mov
pop
pop
push
or
ja
mov
add
mov
mov
fimull
and
xor
aaa
xchg
sbb
push
inc
xor
bound
pop
enter
fcoml
adc
mov
loope
xchg
sub
dec
clc
inc
mov
fidivl
es
add
xchg
sahf
test
ret
rorb
lods
int3
and
jbe
adc
les
cs
or
loopne
mov
and
test
adc
lods
jg
loope
mov
lock
int3
pop
clc
or
xor
jno
fimuls
xchg
hlt
lea
fmull
fisubl
and
inc
cmp
fnsave
mov
emms
movsb
std
test
and
pop
imul
or
fistl
ffreep
fcmovu
mull
int3
sbbl
adc
and
xor
xlat
rolb
xchg
mov
imul
and
or
outsb
repz
add
out
xchg
sti
jo
xor
subl
cmp
enter
cmp
std
mov
fstps
sbb
sbb
pop
inc
adc
inc
cmpsl
jmp
inc
xor
inc
data16
dec
in
or
das
nop
subb
test
jae
and
adc
xlat
outsb
repnz
lret
in
mov
gs
fdiv
gs
jp
sbb
mov
jle
lcall
rorb
add
je
jno
ja
mov
push
sub
pop
subb
sbb
dec
js
xor
lahf
in
popf
stos
or
sbb
popf
and
adc
in
or
cmp
cmp
fwait
mov
cmp
iret
mov
push
ss
aas
and
mov
arpl
out
icebp
jno
fidivrs
cmp
cmp
ss
mov
es
cmpsl
pop
repz
popf
fwait
iret
fs
xchg
pushf
dec
bound
mov
imul
mov
pusha
mov
lods
adc
and
mov
clc
mov
sti
jnp
ficoms
cmp
sub
outsb
sub
fmul
shr
inc
or
test
xchg
and
insb
adc
xchg
repnz
mov
xchg
loop,pn
cmp
jge
int
mov
jns
mov
cmc
pop
repz
push
xor
lods
mov
test
jnp
jl
testl
stc
adc
mov
lds
dec
inc
adc
adc
jmp
in
and
jg
or
sub
es
repnz
cld
jno
mov
mov
mov
xor
fwait
inc
pusha
gs
inc
xchg
sub
dec
popf
sub
lds
push
and
jl
mov
addr16
pop
loope
stos
mov
movb
pop
aam
sbb
add
ds
in
add
mov
pop
jnp
sub
leave
inc
xor
fbld
fsts
es
aaa
orl
mov
sahf
add
outsl
fildl
or
aas
loopne
loop
test
dec
jb
inc
adc
daa
push
inc
fsubrl
repnz
sub
xchg
dec
jne
mov
sbb
lcall
fs
cmp
push
in
jle
lock
mov
mov
sub
sub
daa
lahf
ss
in
push
add
push
push
lods
dec
mov
mov
data16
data16
adc
sbb
pop
les
sub
pop
aas
jp
add
ljmp
add
or
es
call
pop
setp
das
xor
xor
sub
repz
repz
xchg
or
mov
or
pop
cmovns
xor
adcb
pusha
push
mov
adc
negb
in
ficomps
jb
mov
cmp
jb
mov
jge
or
push
xchg
ret
xor
dec
adc
sbb
or
lods
dec
dec
repnz
je
jge
adc
cmp
xchg
fs
dec
push
jno
out
jns
out
int3
lock
outsl
or
mov
pushf
jmp
popf
inc
mov
jo
xor
sahf
pop
or
ljmp
and
xor
adc
pop
and
jno
fnstcw
jnp
pushf
mov
adc
mov
imul
je
inc
lods
shlb
xorb
inc
sbb
in
in
sbb
cmc
je
mov
sub
arpl
popf
sbb
jnp
pop
sub
insb
push
imul
fwait
xlat
mov
and
pushf
loope
dec
mov
xchg
enter
dec
adc
xor
lret
add
xor
adc
pop
fdiv
mov
popa
push
xor
cli
dec
pop
cmc
add
and
stos
lret
mov
dec
subl
xchg
icebp
sahf
or
or
xchg
xchg
sbbb
sbb
stos
push
test
jbe
jmp
out
subb
push
dec
mov
shll
mov
jg
test
cmp
dec
clc
inc
sub
xchg
and
js,pt
adc
or
adc
jmp
pop
movsb
das
jg
mov
cmp
outsb
add
sbb
aaa
mov
jmp
stc
mov
or
leave
or
sbb
jb
xchg
xor
mov
cli
push
lods
movsb
mov
mov
push
adc
in
aas
lret
sub
push
cwtl
mov
inc
in
pop
and
xor
dec
sbb
mov
inc
sub
lods
jp
mov
lock
jo
xor
fbstp
ret
xor
aas
jae
adc
jge
push
jb
jns
test
fsubrl
movsl
sbb
sbb
push
xchg
mov
jl
cmpsb
lods
push
fidivrl
adc
inc
daa
push
jl
and
sbb
test
flds
popa
gs
pusha
fidivrl
ja
aad
rorb
inc
push
sub
jmp
xchg
cmp
pushf
adcb
enter
inc
jecxz
mov
scas
hlt
ret
out
sub
and
pop
cwtl
mov
adc
jbe
loope
add
outsl
test
lock
inc
addl
pop
test
leave
movsl
jmp
push
sti
inc
fsts
mov
test
stc
leave
pushf
pop
ret
mov
cmpb
hlt
lahf
fnsave
movb
dec
loop
dec
mov
ljmp
ljmp
pusha
sahf
pusha
jp
push
cmpsl
xchg
imul
test
pushl
sti
aam
push
lret
lods
push
idivb
lds
into
lock
cmp
imul
push
lods
push
sbb
pop
mov
cld
popf
jmp
jne
aas
out
xor
adc
and
pop
fnstcw
scas
mov
sbb
and
mov
or
lods
mov
mov
inc
or
jne
jo
lea
lret
out
in
std
and
and
xchg
gs
lds
test
outsl
popa
fstpt
xchg
push
jmp
lret
pushl
push
les
inc
ljmp
outsb
hlt
pop
cmp
mov
in
mov
push
mov
mov
jl
lods
jae
mov
pop
mov
xchg
cmpsb
jns
inc
addr16
sbb
imul
mov
enter
aas
in
sub
jmp
dec
sahf
or
hlt
xor
cmp
xlat
mov
cltd
inc
jnp
inc
xchg
ss
stos
cli
inc
js
aaa
cld
mov
lret
fistpl
jns
scas
lcall
xchg
rcrl
mov
and
or
add
cmpsl
popf
aaa
loope
mov
cmp
ljmp
movsb
xchg
test
dec
clc
ljmp
fldt
inc
sbb
and
or
mov
jne
dec
mov
popa
iret
lods
in
ret
push
mov
push
sti
cmp
std
out
push
add
hlt
cli
outsl
add
mov
jl
sub
and
mov
xor
sbb
in
push
adc
pushf
pop
repnz
mov
iret
jge
adc
movsl
pop
daa
jae
push
pop
leave
jle
mov
jb
mov
jbe
pop
fiaddl
mov
jne
lods
int3
dec
mov
inc
les
andl
aaa
lret
imul
jae
xor
test
jge
call
push
cwtl
xor
sbb
and
xchg
push
mov
inc
jb
mov
dec
adc
cli
nop
push
loopne
jnp
jae
pop
sbb
add
mov
mov
ja
mov
lock
and
loope
mov
rcrl
push
out
data16
inc
ror
leavew
test
stos
mov
xchg
cmp
cwtl
inc
data16
mov
or
adc
or
test
push
pushl
call
movsb
cmp
mov
pop
jge
dec
add
add
push
jg
and
stc
sbb
xorl
int3
movsl
inc
xchg
pop
andl
andl
jmp
fs
xchg
pop
push
into
push
jmp
mov
mov
dec
idivb
add
sahf
popa
lret
push
jns
imul
mov
xchg
sti
aaa
jno
pop
stos
roll
push
mov
lret
mov
cld
ss
jl
movsl
popf
or
adc
sub
inc
shrl
mov
mov
xlat
pop
cltd
mov
push
mov
lahf
push
cmp
aam
loopne
adc
or
gs
iret
and
inc
push
js
push
mov
and
das
inc
mov
or
or
dec
test
pusha
jmp
dec
add
cmp
dec
adc
insl
test
push
inc
cmp
cs
push
jo
shlb
imul
test
cmp
fcmovbe
ds
push
pop
sti
repz
push
mov
cmp
or
mov
into
imul
sahf
add
sub
int
rcl
mov
cmpsb
inc
dec
or
adc
shr
ret
add
cmp
insl
push
jnp
push
pop
ja
mov
cli
ja
lret
push
in
scas
push
icebp
icebp
in
and
add
out
jno
sub
rcrl
lock
sahf
in
roll
outsl
ds
ljmp
fistl
jg
mov
dec
rol
repz
mov
xchg
lahf
enter
adc
addl
icebp
mov
jmp
xchg
outsl
xor
addr16
popl
out
loopne
insb
xchg
cmc
add
and
sub
xchg
mov
popa
jp
lahf
and
inc
pop
sub
mov
jp
pop
lds
pop
fwait
and
into
and
lea
jmp
pop
mov
pop
incl
incl
icebp
add
add
leave
in
stos
inc
jl
sub
outsl
jno
lds
nop
mov
jle
lret
xor
pop
iret
mov
pop
dec
mov
mov
mov
mov
daa
push
xor
cmp
push
pop
dec
jb
in
lcall
shll
dec
test
lock
mov
mov
test
lahf
les
lahf
enter
insb
andb
mov
pop
cmp
sbb
scas
sub
adc
out
out
pop
adcb
sahf
enter
jb
lcall
ret
pop
push
mov
imul
lahf
or
dec
or
ss
adc
jmp
aad
loopne
add
in
je
sbb
mov
es
xchg
outsl
shl
sub
dec
cli
pop
mov
sub
cmp
push
xchg
scas
mov
in
and
xchg
or
fs
pop
jno
daa
or
shll
jnp
mov
imul
notl
ret
push
adc
arpl
add
ret
sbb
dec
mov
and
pop
out
or
pusha
sbb
or
jge
shr
lods
cld
sub
inc
aas
mov
lods
stos
pop
or
pusha
test
add
jnp
mov
pop
hlt
aam
jns
sarb
lahf
pop
lock
dec
in
add
pminsw
hlt
fiadds
clc
cltd
inc
ss
cmp
cmp
je
xchg
or
fisubrl
shl
jnp
mov
mov
gs
out
das
cmp
into
mov
test
mov
add
push
out
test
pop
xchg
or
xor
cvtpi2ps
mov
mov
subb
stos
xchg
jg
movsl
mov
mov
push
mov
lods
cmc
push
mov
idivl
push
mov
rclb
jae
out
jnp
mov
fadd
sub
es
push
lcall
push
xchg
push
or
repnz
sbb
add
mov
mov
lods
inc
clc
das
movsb
push
push
aam
or
push
bound
fucomi
movsl
and
inc
xchg
ja
xor
shll
cmp
inc
or
cs
fbld
dec
lret
pop
test
sti
sub
dec
mov
imul
pop
paddsb
repz
insb
daa
push
jecxz
xchg
mov
stos
pop
adc
int3
xchg
int3
outsb
cmp
pop
xchg
sub
in
push
pop
push
push
sbb
push
inc
push
pop
cmp
and
call
dec
rclb
push
jg
adc
mul
xchg
loope
out
inc
jne
movsb
jb
into
insb
adc
cli
xor
pop
add
out
bnd
dec
add
mov
out
movsl
gs
mov
test
in
daa
stos
sbb
cmpsl
jne
sbb
add
scas
mov
push
mov
sbb
push
jg
fstl
or
es
lcall
inc
and
xchg
xchg
call
outsl
es
fwait
xchg
aas
je
add
sub
cwtl
mov
xchg
test
xchg
inc
hlt
pop
mov
or
or
cmp
pushw
jg
pop
jle
imul
ljmp
dec
hlt
mov
adcl
or
call
fsubrs
cmp
mov
mov
scas
pop
fwait
mov
mov
jb
mov
mov
repnz
rolb
mov
xor
jnp
and
dec
jb
out
mov
push
dec
mov
mov
xor
int3
pxor
mov
roll
and
dec
mov
push
icebp
xchg
ss
imul
adc
cld
cmp
aam
outsb
outsb
bound
sbb
lea
or
fsubl
adcb
scas
mov
jo
sub
fdivrs
out
sbb
and
sbbb
xchg
ljmp
nop
icebp
scas
out
mov
imul
pop
jne
mov
mov
ja
iret
in
dec
cld
xor
or
dec
ret
jp
cmpsl
jle
sub
icebp
pop
push
popf
jnp
add
les
daa
repnz
pop
fwait
jbe
jne
jmp
push
and
push
cli
jecxz
mov
mov
jg
cmc
jne
dec
scas
push
inc
cmpsb
sbb
fs
roll
leave
loopne
mov
and
stos
push
std
dec
xor
sub
mov
pop
pop
int
outsl
movsl
and
sbb
push
lret
adc
daa
enter
or
adc
and
lock
daa
adc
lock
cld
clc
and
xlat
icebp
rcr
push
xor
sbb
adc
inc
mov
js
and
or
enter
push
cld
mov
scas
and
sub
inc
shrd
mov
xlat
sbb
mov
jb
fildll
mov
stos
dec
sub
dec
add
in
aas
ret
in
pop
iret
push
icebp
jb
shlb
aam
xchg
stos
pop
push
mov
or
data16
loopne
js
das
scas
negb
push
jne
or
push
xor
iret
enter
inc
cwtl
jle
lret
mov
push
pop
push
mov
or
pop
subl
mov
movsl
hlt
push
sar
sub
lods
bound
test
adc
xchg
push
inc
pusha
cmpsb
lds
mov
push
inc
pop
add
int3
daa
push
xchg
xchg
mov
subl
xchg
jbe
pop
jl
es
push
or
jno
shl
cmpsl
xchg
das
std
jns
inc
out
mov
pop
fs
cmpsb
jno
icebp
push
insb
das
sbb
pusha
push
mov
lcall
rclb
xchg
popf
mov
inc
push
shr
jecxz
daa
ret
cs
aam
cmp
test
lds
movsl
subb
in
mov
incb
push
push
rcrb
xor
andb
jl
sbb
cld
enter
xlat
in
cmc
lock
cmp
or
shrb
xchg
jmp
adcb
pop
cmp
mov
lea
scas
mov
fwait
mov
inc
shrl
jae
mov
mov
loopne
stos
add
mov
xchg
xor
xor
faddp
mov
cmp
int
adc
dec
imul
jp
xchg
jno
and
and
mov
mov
dec
gs
in
test
mov
jns
lock
aaa
push
in
lret
nop
or
cmpb
gs
ljmp
in
idivl
iret
jae
or
arpl
out
adc
popa
andb
inc
mov
inc
outsb
push
les
cmp
cmp
jl
push
xchg
fdiv
xchg
jmp
sbb
pop
lret
lahf
sbb
adc
sbb
push
xor
xor
cmp
push
sbb
jl
inc
xchg
mov
lods
mov
dec
push
lahf
push
sub
jecxz
stos
jg
push
outsl
mov
dec
outsb
rorb
inc
out
in
dec
xacquire
mov
sbb
mov
dec
decb
dec
fcomps
in
dec
orl
lahf
aad
ja
addr16
dec
dec
outsl
rcr
movsl
mov
mov
mov
mov
lcall
mov
or
outsl
je
loop
imul
xorb
fwait
add
push
les
es
insl
jl
xor
pop
fsubr
lds
pushf
sub
test
pop
ret
testb
mov
cltd
xor
inc
cld
lret
mov
pop
lret
sbb
add
insb
xchg
inc
imul
loop
or
push
in
xor
mov
xchg
adc
stos
push
xchg
jo
xchg
and
xor
pop
mov
jo
lock
push
mov
daa
sti
hlt
iret
or
rolb
or
pusha
cmp
xor
push
sbb
pop
cmp
xor
lock
das
sbb
jg
cwtl
jg
push
fcmovnu
xlat
jle
pop
fmuls
clc
jge
test
push
data16
fnstsw
popf
lock
lret
stos
icebp
push
lock
in
xor
movsl
sbb
cmp
jbe
nop
rorl
cmp
loop
mov
mov
jae,pn
ss
push
sahf
add
push
sbb
pop
xor
in
clc
insb
aaa
das
pushf
in
add
repz
es
fs
call
inc
pusha
or
pushf
pop
cmc
rol
jo
add
jp
les
jge
mov
nop
xchg
dec
and
mov
rcr
adc
adc
lds
mov
dec
ds
mov
push
add
mov
adc
popf
push
pop
sahf
mov
test
stos
xchg
sti
jmp
inc
adc
shll
addr16
push
bound
sub
sbb
mov
pop
fidivrs
xchg
lods
lds
int3
aad
dec
pop
cmp
xor
mov
lret
nop
xchg
aaa
pop
xchg
sbb
push
dec
dec
ret
pop
jne
into
add
jae
test
pop
js
cmp
pcmpgtb
icebp
dec
dec
push
xor
cmpl
movsl
mov
in
cwtl
les
lods
out
mov
xor
dec
jmp
stc
imul
repnz
insb
aaa
bound
mov
sbb
pop
fcmovnbe
inc
movsb
xor
cli
mov
push
mov
add
sub
insb
fs
xor
shll
lret
lods
push
and
mov
mov
or
inc
arpl
incb
vmwrite
movsl
pop
lods
enter
adc
push
scas
pop
cltd
sbb
in
popa
sbb
pop
and
push
mov
xchg
shrl
movsb
loop
cmp
pop
mov
arpl
lock
repz
in
and
mov
movsl
push
inc
aas
icebp
adc
dec
sti
fldl
sbb
pop
xchg
xor
inc
dec
mov
inc
push
pop
dec
xchg
in
or
int
sbb
mov
mov
repz
stos
inc
test
cli
dec
arpl
lods
gs
cli
push
sub
mov
fsts
ss
mov
in
repz
test
rcl
notb
mov
inc
loope
pop
in
adc
lods
insl
rcll
push
clc
jne
ds
adc
pop
imul
insb
add
jp
fdivrp
dec
adc
mov
orl
inc
in
shlb
stos
jp
movsl
out
xchg
sub
arpl
push
inc
dec
movsb
repnz
xchg
arpl
sub
inc
jne
adc
int
scas
movl
hlt
jg
subb
icebp
sbb
adc
sub
cwtl
inc
xchg
out
mull
push
ljmp
nop
push
push
mov
loop
mov
cld
in
xor
pop
or
clc
push
clc
loopne
adc
scas
pop
push
iret
xchg
in
xacquire
fadd
dec
jnp
dec
and
mov
jnp
push
ret
rcrl
rcr
or
out
push
into
movsb
sti
mov
std
inc
sbb
or
sbb
je
shlb
aad
nop
and
pop
mov
mov
and
loopne
lret
pusha
mov
lahf
popa
int
pop
ja
les
jne
sahf
lret
adc
addr16
add
cmp
sbb
mov
outsb
cmp
insl
shl
fistpll
dec
cmp
pop
insb
aaa
inc
fdivrs
mov
out
fdiv
loopne
repz
sbb
inc
xor
imul
pop
mov
inc
dec
jle
int
fincstp
inc
rorl
fwait
hlt
pushf
dec
call
fs
ja
and
movsb
repnz
pop
popf
loopne
push
xchg
sbbl
inc
xor
push
idiv
idivl
and
rorb
sbb
mov
dec
leave
vphaddbw
and
xchg
sub
fucom
adc
pop
mov
dec
xor
jecxz
adc
sbb
lea
test
dec
loopne
inc
adc
push
iret
movb
imul
addl
movsb
into
cmp
sub
fisubs
mov
mov
and
xchg
data16
mov
jno
rcll
out
xchg
and
jl
int3
test
add
push
pop
clc
into
ss
mov
sbb
cmp
cs
test
inc
cmp
or
inc
push
scas
outsl
enter
pop
xchg
ds
add
pop
mov
pop
inc
lods
dec
mov
mov
out
add
add
sahf
les
add
push
dec
jb
dec
rorb
add
rclb
scas
cmpb
sub
and
loop
push
or
test
lea
add
pushf
cmp
mov
xor
cmc
lock
and
fistpl
and
mov
or
push
out
and
inc
popf
mov
or
push
sbb
and
jns
ds
dec
fadds
rcll
sbb
inc
sbbl
or
jb
bswap
lea
pop
mov
or
repnz
mov
push
add
or
pop
inc
imull
into
out
inc
sub
mov
jne
mov
or
xlat
stc
sbb
dec
mov
sbb
and
loope
or
dec
in
jae
sub
or
dec
out
sub
push
xchg
xchg
out
lahf
jge
xor
inc
lahf
lea
and
arpl
cmp
adc
jnp
aam
pop
pushl
mov
add
jae
adc
int3
push
mov
jne,pt
mov
push
aas
imul
sti
mov
sub
out
in
test
daa
or
aad
inc
clc
cmpsb
mov
scas
jnp
ja
in
idivl
push
in
es
movsl
jno
pop
test
ss
pushf
ds
push
stos
cmp
arpl
jae
bound
cmp
jl
outsl
shlb
cmpsb
cwtl
mov
add
and
outsb
leave
ret
pop
xchg
inc
les
incb
cmp
lahf
movsb
xor
insb
cmp
pcmpeqd
mov
sbb
arpl
outsb
ret
adc
xor
subb
cwtl
inc
adc
daa
test
enter
mov
mov
jecxz
test
mov
repz
jb
mov
test
int
xor
mov
and
cld
pop
xchg
xchg
sub
jnp
dec
mov
mov
lods
jo
pop
bnd
mov
mov
cmp
shlb
push
mull
fstl
nop
mov
test
or
movsl
nop
out
outsb
pop
inc
imul
in
cmp
add
into
cltd
jg
icebp
sbb
pop
lret
repnz
movsb
jo
sbb
mov
or
inc
inc
nop
addr16
mov
call
pop
addr16
repz
sbb
test
loop
xchg
xchg
sbb
inc
std
or
fucomi
mov
add
test
pop
adc
nop
and
xor
test
jne
jnp
mov
lds
mov
push
lcall
neg
aas
or
cmpsl
pop
repz
popa
les
sub
outsl
outsb
dec
ds
data16
sbb
xchg
insb
and
ja
jg
add
insb
inc
xor
xchg
and
add
lds
pop
or
mov
mov
fldenv
xchg
sbb
scas
jg
jmp
and
mov
lds
fadds
add
mov
call
add
pop
es
jo
push
cmp
dec
xchg
push
and
in
sti
mov
push
je,pt
pop
jecxz
adc
push
cmc
cmpsl
shl
jb
jae
and
sub
adcb
rclb
push
push
mov
jg
fidivrs
nop
push
cmpb
fucomi
or
sub
insb
push
mov
aas
iret
jecxz
xchg
cmpsb
ret
clc
pop
push
mov
and
mov
pop
inc
mov
in
das
fadd
data16
cmp
in
xor
push
dec
mov
push
mov
cmp
stos
call
fbld
cmpsb
pop
shll
dec
mov
dec
dec
dec
cld
fimuls
push
data16
mov
jle
cmpsb
adc
jmp
scas
aam
adc
fs
lea
sti
movb
mov
inc
pop
xor
orb
ja
and
dec
xor
mov
into
jns
mov
lahf
pop
dec
jns
repnz
stos
pop
lahf
jne
sub
or
push
lods
roll
push
cmp
cmp
rclb
stos
xchg
push
jb
and
mov
ret
lcall
pushf
imul
mov
push
sub
iret
xor
je
fs
testl
in
outsl
push
mov
cwtl
aam
pop
sub
sti
cmp
jg
scas
je
xchg
aam
sub
ds
jmp
insb
jo
popf
cltd
mov
in
js
subb
hlt
add
pop
je
arpl
sbb
push
push
add
pop
cmp
out
jg
movsl
aas
dec
push
mov
lahf
fcompl
push
rcl
imul
or
test
int
int3
addl
fwait
cmp
or
or
imul
pop
inc
aad
test
mov
aad
xchg
cs
add
popf
sahf
push
jne
rcr
hlt
lret
push
loope
rorl
add
xchg
dec
enter
push
aad
mov
daa
pop
hlt
adc
mov
in
lahf
or
xchg
jbe
loopne
arpl
outsb
or
repnz
lret
std
pop
mov
lret
adc
xor
mov
cmpsb
test
add
dec
cmp
insl
mov
arpl
xor
ljmp
xchg
arpl
mov
mov
cli
in
sub
pop
mov
and
in
and
shrb
jnp
aam
inc
mov
push
cmp
jb
mov
das
fidivrl
and
divl
xor
inc
xorb
aas
push
out
inc
dec
pop
ret
lret
out
mov
xchg
jno
frstor
lahf
or
mov
fs
hlt
mov
shr
pop
das
insb
lret
mov
divb
add
pusha
es
mov
out
sub
sahf
call
sbb
scas
jb
das
cmp
mov
sub
mov
cld
add
push
cli
inc
loop
xchg
outsl
inc
dec
insb
aaa
lret
pop
pop
ljmp
mov
dec
aam
mov
orb
jbe
push
addb
adc
inc
cmp
xchg
scas
not
sbbb
rcrw
fwait
test
adc
sub
sti
pop
testb
mov
push
cmpsb
jnp
iret
mov
or
xchg
sbb
insb
add
or
sbb
jae
mov
cmp
sbb
or
cmp
mov
mov
mov
jo
mov
sub
dec
jbe
hlt
jl
xchg
sbb
orl
roll
pop
sub
dec
xor
sbb
stos
fistpll
dec
xchg
inc
outsl
loop
add
mov
vmwrite
fstp
jne
loope
dec
out
outsl
shrl
cmp
push
add
in
mov
or
sub
jne
sub
jmp
sbb
rclb
call
negl
loopne
cli
pop
mov
dec
cmp
mov
adc
ja
xchg
jnp
addl
test
jae
xor
mov
lds
stos
aad
outsl
mov
sbb
popa
aad
out
jns
pop
or
mov
adc
mov
sub
inc
push
mov
adc
ret
stc
gs
stos
xchg
add
push
insl
inc
cmp
mov
mov
imul
push
jl
jmp
popa
mov
fwait
lds
xor
je
push
add
icebp
bound
pop
jne
daa
inc
inc
out
mov
int3
outsb
leave
or
sub
mov
add
js
clc
jg
push
push
sbb
fs
or
outsl
pusha
stos
adcb
sub
dec
ret
call
scas
mov
sbb
call
jmp
scas
enter
mov
comiss
in
sbb
jbe
cmp
je
lret
cmpl
mov
call
and
insb
cs
inc
out
out
data16
jbe
jno
cltd
stos
push
rclb
in
repz
pop
push
push
loop
inc
xchg
divl
mov
mov
push
and
pushf
mov
aam
fwait
mov
icebp
inc
cld
jecxz
xbegin
mov
cmp
pop
out
out
lods
and
popf
out
mov
stos
jmp
es
or
out
inc
in
es
outsb
mov
lea
popa
and
movb
loopne
cmp
out
xchg
imul
mov
adc
cmp
pop
scas
orb
dec
stos
cld
int3
adc
insb
popf
cli
outsl
shll
push
mov
dec
out
and
xchg
loopne
pop
mov
inc
bswap
mov
xor
jbe
in
cmp
push
jecxz
aas
nop
rolb
sbb
pop
hlt
mov
movsl
cmp
cmp
pushf
in
mov
xor
cwtl
add
mov
add
xchg
xchg
data16
enter
stos
enter
mov
mov
lea
mov
adc
dec
jo
xchg
xchg
outsb
add
in
loopne
hlt
sub
ret
out
lds
push
out
into
in
jnp
outsl
das
arpl
lcall
test
ret
inc
insb
popa
sarl
inc
in
insl
xchg
sub
fdivrs
fldcw
mov
imul
fdivs
fisubl
and
inc
sbb
pop
push
pop
jae
sub
sub
fwait
pushf
iret
xchg
sti
mov
mulb
bnd
jae
mov
or
lcall
xor
fcom
and
fdiv
or
clc
push
jge
pop
nop
or
sbb
scas
inc
mov
xchg
xchg
divb
iret
mov
dec
push
popf
scas
xchg
ficomps
leave
cmp
push
lahf
push
pop
pop
mov
ds
jbe
bound
gs
data16
mov
test
jl
in
jbe
or
rcrb
xor
push
call
shr
xchg
pop
hlt
pop
call
xchg
int3
xchg
into
call
xlat
jl
sub
push
lret
cmp
sub
bound
dec
xchg
or
push
inc
mov
xchg
fsubrl
data16
aas
repz
movb
and
cmc
lcall
ss
stos
pop
mov
add
sbb
sbb
int3
xchg
xor
mov
je
push
pop
and
push
sarl
out
mov
and
or
call
xchg
push
jo
pop
or
out
cmp
cmp
fildll
out
xchg
sbb
mov
jnp
repz
sub
cwtl
adc
jle
aad
les
lods
ljmp
adc
cmpb
rcll
sub
push
dec
adc
xchg
add
adc
sub
js
or
mov
cmp
mov
xchg
imul
mov
mov
mov
mov
xchg
or
sahf
pop
arpl
inc
push
daa
push
mov
das
or
shlb
hlt
push
andb
and
mov
loop
pop
fldl
inc
adc
clc
sti
enter
dec
xchg
lret
aad
data16
cmpsb
idivb
cltd
cmpsb
lcall
iret
inc
rol
push
pop
adc
aam
add
inc
xor
mov
sbb
push
pop
xchg
outsl
adcb
out
mov
inc
push
cmpsb
in
xchg
jo
imul
and
clts
fdivrl
mov
scas
pop
popf
sarb
or
loope
das
dec
mov
nop
movsl
xchg
inc
idivl
clc
jge
arpl
stos
cmp
mov
adc
adc
mov
imul
mov
pop
cmc
out
adc
jmp
mov
mov
pop
sbb
and
jge
sbb
movsb
int3
sahf
gs
addb
pop
push
jmp
rolb
subb
sub
es
and
mov
add
test
movsl
iret
pop
xchg
lods
and
adc
jmp
xchg
or
inc
fnsave
jae
aad
sub
call
push
lahf
sub
or
pop
cmp
dec
pop
bnd
xor
xor
std
jns
sbb
movl
sbbb
imul
iret
insb
subl
fsubrs
pop
cmpsl
jae
cltd
mov
inc
xor
fists
mov
or
call
orb
ret
pmulhw
xor
cwtl
dec
jecxz
in
sub
imul
out
push
pop
shll
mov
mov
mov
test
mov
addr16
inc
leave
mov
sahf
rcll
aas
daa
pop
aam
pop
mov
mov
sub
je
cmp
mov
sbb
loope
cli
xchg
pop
rcll
cltd
and
loopne
imul
or
cmp
xchg
cltd
lods
mov
add
sbb
test
fcoml
mov
xor
pop
ljmp
jnp
pop
addl
xlat
icebp
push
sti
jnp
xchg
sbb
mov
pop
push
aad
rcrb
repnz
push
sub
fbstp
addr16
lcall
mov
incl
icebp
hlt
sub
jnp
cmpsb
pusha
xchg
loopne
cwtl
shlb
jno
cmpsl
subb
mov
outsl
inc
scas
shl
mov
dec
pop
sbb
mov
sbb
cmp
add
push
std
mov
imul
xor
sbb
pop
dec
pop
mov
in
xor
push
lcall
pop
lret
mov
jo
xor
in
push
adc
add
or
out
popa
mov
dec
arpl
les
outsb
and
lahf
stc
aas
jmp
xlat
jns
sbb
jns
and
push
or
dec
clc
shl
or
lods
fistpl
mull
xchg
mov
cs
inc
cmp
mov
pop
mov
aad
in
cmp
xor
mov
sbb
divb
bound
sbb
fwait
xchg
add
ss
mov
cwtl
mov
and
jb
dec
sbb
mov
sub
enter
ficomps
ds
pop
cmc
add
cltd
xchg
push
jo,pt
mov
add
jns
xchg
push
jnp
test
add
icebp
shld
addr16
ja
xor
popa
push
dec
xor
je
sti
jmp
or
push
shlb
mov
cld
dec
mov
dec
hlt
sti
mov
push
fdivr
inc
or
dec
aaa
in
fsts
leave
add
stos
mov
out
aaa
test
stos
shr
in
jo
fxch
mov
adc
and
push
cmp
xchg
push
cli
cmp
repnz
stc
cmp
cmp
call
adc
mov
push
test
insl
jae
jbe
shr
mov
popa
pop
jp
add
dec
inc
les
lahf
test
scas
fists
mov
push
mov
sbb
mov
in
ret
imul
notb
rolb
rcr
icebp
or
hlt
mov
out
adc
stos
cmp
xchg
gs
in
sbb
cmp
push
cmc
sbb
mov
mov
dec
out
xchg
ljmp
in
add
xchg
mov
jl
mov
jg
xchg
and
mov
and
push
jge
sub
clc
push
xor
xor
push
push
lcall
mov
hlt
xchg
xchg
jnp
mov
outsl
push
arpl
adc
mov
ljmp
pop
mov
movsl
sbbl
dec
xchg
repnz
es
sbb
jl
jge
lret
push
popf
rorb
pop
mov
js
mov
add
loop
fcmovnb
mov
cltd
add
adc
movsb
cld
test
push
lcall
imul
fndisi(8087
lret
cwtl
test
jle
lock
jecxz
subb
jnp
jae
es
imul
mov
mov
movsb
cwtl
xchg
popf
adcl
ret
push
or
pop
and
sub
and
outsb
sub
sbb
pslld
xchg
lret
mov
lcall
jns
inc
xor
out
dec
cmp
scas
dec
adc
xor
je
dec
push
or
dec
repz
pop
andl
dec
fsubrl
shlb
push
mov
xor
js
sub
jb
push
pop
or
jge
sub
jp
xchg
or
push
cmpb
sar
das
test
pop
and
mov
push
mov
imul
push
std
fcomip
jmp
fs
mov
jae
sub
shlb
pop
je
lret
inc
outsb
fcmove
mov
xchg
dec
push
push
sarl
sarb
mov
xor
adc
jae
add
sarl
das
add
lock
aad
mov
mov
andb
sbb
pop
in
ds
repnz
outsb
xchg
cmp
shll
hlt
insl
sub
push
test
jp
repz
call
lods
pop
lods
mov
adcb
mov
push
mov
call
push
mov
jae
outsl
or
xchg
push
or
repz
addl
add
pusha
adc
setbe
or
mov
rorl
mov
arpl
movsb
xchg
shlb
dec
mov
mov
rcr
xchg
adc
sbb
aas
inc
testl
std
mov
in
push
sbb
pushf
sbb
out
ljmp
push
dec
std
lods
enter
cmp
sub
add
push
pop
dec
orl
sbb
add
inc
ds
imul
addr16
add
inc
pop
xor
fucomi
lea
mov
mov
mov
push
cltd
cltd
rep
mov
aad
aam
data16
mov
in
ja
imul
out
inc
aad
mov
movd
test
out
cmp
xchg
in
adc
jns
lcall
and
adc
dec
fmull
fistpl
ljmp
jmp
jbe
andl
jbe
xor
sbb
insl
add
adc
test
stc
clc
or
pop
mov
lock
mov
xchg
aad
push
movsl
lret
test
pop
sbb
lret
xor
out
andb
nop
push
cmpsl
xor
xchg
call
sbb
in
lea
jae
mov
inc
pop
in
lods
mov
xchg
xor
and
push
pop
loopne
lahf
xor
mov
lods
adc
lods
jo
mov
add
mov
imul
xchg
lock
add
xchg
mov
xchg
pop
pop
jne
xchg
push
pop
nop
enter
xor
jne
mov
xor
loope
push
fcoml
sub
jns
sarb
cmp
and
les
in
xchg
xlat
inc
add
add
jb
outsb
shrb
subb
loop
decl
lcall
xor
mov
xlat
xchg
inc
lcall
int
xor
outsl
push
scas
adc
xchg
loope
mov
mov
push
dec
inc
out
pop
fcmovu
out
xor
or
outsl
mull
pop
cld
and
sbb
jbe
inc
jl
mov
std
sbb
add
lods
xchg
sarl
xchg
int3
adc
mov
dec
shl
movsl
lret
loopne
cmp
sbb
mov
lock
fnsave
mov
lods
loopne
push
push
xor
js
rclb
mov
iret
pusha
lcall
cmp
push
cli
push
push
pop
repnz
mov
les
imul
stc
or
xchg
adc
mov
mov
jne
xlat
arpl
and
data16
pusha
and
jmp
orb
and
jmp
jg
mov
mov
adc
add
jmpw
cmp
xlat
xchg
mov
inc
es
rolb
in
in
out
add
pop
fs
fldcw
jne
push
outsb
xor
and
repnz
popa
std
ret
add
insl
iret
rcll
or
lcall
sbb
push
mov
mov
ret
mov
je
sbb
inc
xor
dec
dec
in
cmp
outsl
mov
mov
out
jecxz
xchg
cmp
pop
mov
and
inc
sub
fimuls
nop
movsb
and
add
andb
add
les
scas
dec
or
sub
cmp
data16
cld
xchg
popa
or
rclb
or
xchg
leave
incb
mov
push
inc
jecxz
add
lods
jo
jmp
fadds
jle
cmp
jl
sbb
sbb
rolb
loopne
dec
fdivl
push
mov
add
mov
dec
jae
sub
shll
lods
cmp
inc
cmp
aaa
dec
push
jns
xlat
fidivrs
dec
lret
data16
leave
ret
mov
pop
bound
rolb
sub
in
xchg
movsb
push
and
into
add
clc
std
int3
jne
pop
mov
ljmp
out
xor
movsl
mov
inc
dec
push
xchg
in
loope
jecxz
pop
mov
mov
ss
mov
scas
insb
imul
in
aas
das
dec
mov
pushf
fs
inc
aaa
nop
or
jge
jmp
aam
rclb
out
ljmp
or
sbb
or
lcall
mov
rclb
jle
hlt
push
inc
jmp
dec
pop
hlt
and
xchg
test
imulb
gs
test
sbb
hlt
push
lret
out
lods
rorl
xchg
nop
inc
fwait
lds
mov
imul
sbb
or
aaa
aad
insb
lret
adc
mov
lock
sub
mov
pusha
aaa
push
jmp
stos
xlat
int
ds
cld
in
lods
lret
add
push
add
imul
and
decl
rol
imul
repnz
add
and
call
int
dec
push
rcll
cltd
or
and
iret
sub
aad
push
push
xor
in
repz
push
jmp
jecxz
jle
sbb
adc
lods
js
push
stos
hlt
mov
pop
lods
ret
fcompl
pop
popf
test
xchg
mov
ss
xor
outsl
pop
out
sub
ljmp
cmp
ret
shl
push
data16
rcrl
aam
test
in
xchg
cld
jno
mov
xor
cmp
stos
imul
and
and
and
push
xchg
inc
insb
cltd
xor
outsb
xor
nop
int3
adc
xchg
cmp
movl
outsl
out
inc
xchg
arpl
leave
jns
repnz
int
rcrb
mov
or
aas
xor
push
sub
les
lock
xchg
fwait
repnz
insl
xchg
adc
jae
cmp
pop
leave
mov
stos
mov
jbe
jns
popl
inc
cmpsb
cmp
xchg
out
mov
add
and
mov
imul
jo
cmp
outsl
in
outsb
jno
sub
push
adc
movsl
pop
pop
mov
mov
daa
xor
push
mov
sub
aam
pop
daa
mov
popf
leave
push
mov
das
mov
shll
inc
push
mov
loop
test
shlb
mov
cmc
push
insb
pushf
ja
xchg
lret
inc
jle
clc
mov
or
mov
mov
ljmp
cmp
sbb
insb
mov
cmp
inc
mov
mov
sbb
movups
shlb
lods
adc
lret
lahf
xlat
xor
iret
call
jge
sbb
data16
mov
lcall
mov
divb
ret
mov
jne
jo
adc
mov
testl
xor
in
cmp
xor
push
lods
sbbb
sbb
jp
outsb
xchg
out
icebp
cwtl
sbb
mov
cmp
insb
jne
xor
mov
and
and
inc
push
xchg
icebp
mov
xchg
call
ja
or
push
pop
pop
and
jne
mov
push
in
sbb
ret
shll
insb
mov
push
pop
js
lods
cwtl
stc
sbbl
cmpsb
xor
sti
mov
xchg
in
push
adcb
in
cmp
cmp
add
cmp
xchg
neg
jbe,pt
cld
dec
lret
aaa
out
ret
out
mov
repz
cli
lahf
push
ja
lds
sbb
test
sbbl
or
cld
aaa
sub
leave
push
add
mov
jmp
aas
mov
ja
mov
aaa
xor
cmp
and
icebp
bt
loopne
push
jle
jecxz
ljmp
sbb
xlat
lret
ffreep
aaa
xchg
xor
or
jl
or
xchg
adc
cmp
repnz
adc
inc
push
xchg
popf
decb
fwait
mov
adc
inc
lret
dec
xchg
lcall
test
jg
sub
fldcw
int3
sub
xchg
mov
jns
xorl
mov
xor
rcrb
xchg
fsub
out
and
cmp
data16
ret
push
mov
pop
lcall
sbb
xor
inc
cmp
movsl
pop
data16
js
insb
inc
ret
loop
outsl
xchg
int3
or
adc
sub
mov
aas
mov
lahf
or
jnp
icebp
jmp
pop
pusha
sub
les
rcr
ds
je
mov
or
push
es
inc
xchg
jbe
hlt
xor
lret
ret
cmpsb
and
jno
mov
jnp
lds
ret
mov
jl
in
add
mov
xor
inc
ss
jne
cmpsb
add
pop
or
and
jmp
fsubrp
pop
mov
push
pusha
pop
sub
xchg
rcrl
insb
push
jmp
push
aad
inc
mov
imul
out
dec
pop
shrl
ret
mov
mov
jecxz
and
aam
add
mov
adc
clc
xor
dec
insb
dec
sbb
or
shl
scas
pop
fsubs
insl
pop
dec
or
mov
mov
xlat
cli
pushf
jo
sub
or
es
or
insl
xchg
test
dec
mov
cmp
int3
mov
xchg
out
arpl
add
sub
pop
imul
xchg
push
and
arpl
and
addl
sarb
es
or
call
stc
xchg
push
in
xchg
mov
dec
mov
xchg
ret
xchg
pop
or
push
inc
pop
pop
stos
jns
inc
sub
mulb
ljmp
call
add
fnstsw
dec
jae
jge
mov
or
into
adc
in
test
xchg
mov
arpl
iret
push
daa
mov
movsb
pop
mov
jge
sbb
push
mov
push
shll
imul
lods
mov
test
std
insl
inc
sbb
call
mov
mov
dec
push
or
movsl
dec
mov
cmp
mov
sbbb
dec
xor
mov
push
mov
mov
dec
dec
push
ret
out
lret
out
movsl
and
arpl
add
scas
dec
popa
cli
mov
xor
in
sbb
xorb
leave
jne
je
popf
inc
xor
sbb
cld
pusha
mov
sub
jb
jno
inc
xor
out
inc
xchg
inc
les
push
lods
jbe
fs
ds
inc
cmp
jbe
add
pusha
jmp
xchg
pusha
jae
mul
cld
fiaddl
divb
pop
jb
cmp
cmpb
mov
inc
out
mov
dec
jne
test
or
js
adc
or
in
and
loope
shrb
pop
aad
js
cmp
push
push
push
mov
movsb
pop
push
pop
pop
int
stos
cmp
test
pop
mov
push
call
outsl
aaa
cmp
jle
loope
fildll
insl
jmp
adc
scas
ja
cld
or
lret
xor
cmp
cmp
fstps
dec
push
cmpsl
mov
repz
ds
pop
dec
xor
pop
ds
das
dec
dec
cmpsb
push
jo
pop
dec
and
lea
shlb
popa
dec
addr16
test
cmp
rclb
push
mov
inc
repz
mov
call
sbb
bound
fidivrs
mov
add
daa
push
jo
sbb
xchg
sub
cmc
hlt
shll
jns
mov
jno
iret
lea
cmp
add
jecxz
dec
arpl
adc
pushf
add
and
cmc
xor
pop
jne
cmp
xor
sub
push
jo
and
mov
lret
push
idiv
loope
mov
pusha
insb
or
push
adc
cs
repnz
dec
sub
loope
in
into
aam
push
xchg
sbb
push
pop
xchg
lret
test
movsb
rorl
dec
inc
dec
repnz
addr16
mov
ds
sub
jbe
subl
adc
ds
jno
sbb
in
sbb
jae
ret
repnz
mov
cld
in
inc
add
jmp
mov
mov
js
push
add
out
dec
rcll
xor
or
mov
xor
jo
nop
add
fldt
adc
aaa
bound
loope
cmc
lret
adcl
enter
rolb
je
lds
jno
xchg
in
sti
into
test
arpl
cmp
xchg
aam
and
fldenv
daa
xchg
gs
dec
rcrb
lods
subl
mov
je
stos
mov
arpl
repnz
mov
and
push
das
xchg
out
std
xchg
mov
and
out
cwtl
stc
inc
divb
imul
and
sbb
repz
sbbb
lds
std
iret
call
fwait
or
pop
in
repz
sub
cmp
sub
popa
and
adc
jnp
incb
js
sbb
adc
daa
adc
ret
out
jnp
jae
pop
js
pop
mov
cs
mov
sbb
daa
aad
xor
in
push
jo
ja
inc
shll
call
dec
mov
addb
shlb
out
cmp
jne
and
and
rcr
mov
xor
aam
popf
push
rcl
or
or
cmp
sbb
aam
mov
mov
mov
insl
cmp
push
cmpl
sbbb
lods
nop
ret
fimuls
shr
xor
jmp
lret
repnz
out
jae
scas
or
mov
jl
ljmp
arpl
lret
scas
mov
adc
lds
movsb
inc
sub
mov
ret
addr16
dec
push
lods
arpl
xchg
dec
popa
cmc
xlat
test
mov
cmc
mov
jae
jg
sub
push
ja
fisubs
jae
push
dec
xchg
stos
rcll
arpl
push
icebp
rcrl
in
aam
out
inc
lds
pushf
sti
sbb
popl
lods
adc
and
insb
mov
int
xor
and
decl
repz
fdiv
arpl
in
out
lahf
jg,pn
fimuls
psllw
inc
loop
sub
std
and
out
hlt
ror
jb
bound
mov
fwait
mov
lcall
es
mov
jge
and
lret
jle
cld
and
mov
mov
xor
adc
xchg
mov
sub
jne
mov
das
sub
push
add
jne
xrelease
pop
sbb
pop
mov
mov
jge
ret
out
cs
mov
jb
pop
mov
loop
lret
mov
jmp
sub
inc
push
stos
cmpsl
xchg
test
push
loopne
adc
jmp
lret
js
test
pushf
aaa
aas
icebp
mov
jmp
pop
or
adc
push
and
cltd
mov
xor
cmp
cwtl
movsl
mov
xor
mov
cltd
push
test
lea
test
or
mov
pop
pop
cmp
xchg
pop
cmp
pushf
daa
mov
les
pushf
xlat
mov
mov
cmpsb
insb
push
popa
nop
ljmp
fsts
mov
push
loope
bound
sbb
sar
cmp
loopne
or
xchg
sub
dec
loopne
dec
cmp
push
sub
outsl
or
arpl
cmpb
je
sbb
addb
int3
or
out
mov
dec
cmp
push
xlat
xlat
sub
dec
push
sbb
iret
das
cmpsb
adc
out
bnd
jmp
lcall
adc
rclb
jp
out
xor
jle
ret
dec
jb
mov
xor
push
inc
ret
dec
hlt
jl
mov
add
and
xorl
bnd
mov
sahf
mov
sub
hlt
add
xchg
mov
lock
shr
lock
xchg
aad
jl
cmp
sbb
and
push
scas
pop
lret
jmp
push
sahf
or
or
or
out
push
iret
xchg
dec
push
xor
repz
cwtl
and
lret
arpl
push
xor
ds
jl
mov
xor
imul
pop
push
cltd
shl
push
nop
push
out
jb
dec
neg
jmp
sub
loope
loop
mov
adc
cmp
jecxz
fidivrs
stos
xchg
insb
imul
xchg
mov
sti
dec
push
xor
ljmp
cmpsl
fwait
dec
xchg
push
mov
xor
add
mov
daa
sti
bound
push
and
sub
add
repnz
jne
mov
push
movsl
or
imul
mov
push
add
mov
enter
ret
pop
cmp
mov
lods
xor
mov
shl
sbb
cmp
jb
je
frstor
xchg
mov
je
and
ljmp
test
leave
pop
les
cs
aam
sahf
xor
inc
shll
cs
aam
nop
add
adc
push
push
and
ret
imul
push
xor
pop
outsb
add
mov
and
cmp
cs
incb
dec
dec
outsl
cmp
sbb
cld
sbb
inc
cmpsl
aam
ljmp
orl
aam
dec
scas
xorb
fmull
rorl
mul
ljmp
cld
mov
adc
cmp
sub
or
mov
xor
cmp
movsb
repnz
or
pop
push
in
jp
push
imul
int3
add
adc
orb
mov
aaa
dec
mov
imul
addl
insb
push
incl
cs
shrl
push
bnd
cmp
ja
pop
lods
jb
aaa
cmp
bound
cmp
bound
push
popa
push
insl
sbb
les
and
mov
adc
data16
imul
adc
sbb
lea
notl
lahf
adc
push
mov
push
add
jne
cmpsb
imul
jle
cmp
inc
lret
adc
inc
cmp
out
xor
fisttpl
pop
cmc
fwait
adc
xor
sbb
pop
push
dec
add
mov
in
jno
pop
inc
and
aas
fdivs
gs
lock
enter
stos
popa
xor
sub
scas
inc
je
jbe
xchg
add
mov
dec
mov
fmuls
jl
add
outsl
les
jo
xchg
inc
xor
and
push
and
inc
xchg
or
xor
and
pusha
xchg
ss
cld
adc
mov
cmp
cmpb
inc
loope
sbb
mov
xchg
mov
jl
sub
rclb
in
dec
push
jne
inc
mov
mov
mov
adcl
cmc
pop
pop
dec
into
mov
aaa
pop
pop
stc
gs
in
cmpsl
inc
inc
shll
loop
adc
loop
cs
lahf
mov
xchg
rol
lea
pop
and
clc
inc
ret
or
int3
inc
addr16
stc
lcall
in
icebp
xlat
mov
lds
and
pop
inc
ss
dec
idivl
cmp
jge
aaa
dec
jo
lock
cmpsb
xchg
loop
dec
lock
pop
push
push
mov
pop
clc
lcall
std
ljmp
adc
in
and
lea
arpl
jge
mov
jbe
sahf
or
test
rolb
loopne
xchg
sub
dec
adc
jmp
insb
pop
fcmovne
xchg
lods
adc
adc
push
mov
dec
mov
jl
xor
imul
jge
pop
leave
mov
aaa
jns
mov
mov
cmpsl
ja
pop
xchg
lahf
push
incb
hlt
iret
fbld
sbb
jmp
out
shl
xchg
mov
lcall
dec
shrl
iret
cwtl
mov
mov
and
sub
rcr
lret
jae
dec
jns
in
jne
inc
xchg
pop
insb
xchg
in
dec
iret
aam
fsub
jnp
std
mul
not
subl
addr16
fs
add
outsl
mov
pop
or
pop
lret
push
or
lock
stc
mov
test
push
aaa
adc
daa
push
push
hlt
dec
and
mov
test
loopne
ja
jmp
jp
fst
adc
test
fs
scas
sbb
inc
into
xchg
into
pop
call
data16
push
sub
jno
in
call
adc
shlb
xor
adc
lods
sub
dec
jb
leave
jl
xlat
xor
xchg
mov
mov
ret
aaa
sbbl
pushf
mov
push
cli
clc
jo
adcl
pop
in
ret
jl
push
icebp
cmp
add
inc
icebp
ret
jne
inc
fstpt
mov
push
in
add
sbb
arpl
ficompl
std
jl
cltd
shr
sarl
xchg
and
dec
and
fnstcw
mov
mov
loope
fisubrl
cltd
mov
jb
nop
sub
mov
popa
sbb
push
faddl
cld
or
movsb
int3
movb
js
dec
pop
stos
cmpsb
and
lea
xlat
loopne
add
xchg
pop
std
sbb
loopne
lods
adc
add
sbb
repz
popa
mov
xor
pushf
adc
mov
aaa
loopne
pushf
push
or
test
inc
cmpsb
push
aaa
fmulp
lahf
push
rcll
cmp
popf
fs
adc
mov
mov
in
popf
lock
push
and
mov
fwait
shlb
xchg
outsl
add
adc
jge
cmp
test
js
or
dec
mov
fcoms
mov
fidivs
cmp
sbb
push
int3
jl
loope
xchg
xor
fyl2x
test
dec
leave
rcrl
sub
jne
cltd
cmp
push
sbb
adc
pop
mov
daa
push
or
fcompl
inc
sbb
ficompl
and
xlat
inc
ja
jle
cli
pop
cmp
mov
adcb
xchg
stc
xchg
push
mov
nop
add
cmp
repz
pusha
popa
imul
jg
or
dec
cmp
sub
lret
mov
lret
int3
loope
dec
insl
or
enter
ds
ds
aad
int3
es
ret
or
and
lcall
mov
shr
or
push
outsb
insb
pop
jmp
sub
sbb
or
lcall
stc
pop
mov
jmp
rorl
je
out
imul
clc
mov
popf
les
je
xchg
jge
test
out
inc
lret
into
adc
mov
pop
xchg
imul
and
sbb
incb
jo
movsl
stc
inc
adcb
shlb
outsb
ret
push
mov
sub
call
shl
push
insl
orl
sub
xchg
movsb
dec
mov
push
pop
mov
and
jp
test
and
mov
mov
xchg
ficomps
cmpsl
push
sub
xchg
sti
cmp
mov
lods
mov
add
popa
repnz
loop
pop
jbe
scas
aas
stc
shlb
out
push
pop
testb
or
pop
xchg
aam
xor
fldpi
cmp
adc
fmul
xchg
adc
mov
dec
pop
adc
test
xchg
mov
jbe
xor
sbb
push
xchg
das
loope
outsl
push
mov
xlat
mov
sbb
inc
int3
std
xor
cwtl
sbb
mov
xchg
testb
jecxz
in
dec
sar
pop
jae
rcrb
cmp
xchg
cmpsb
mov
cmp
std
loop
aas
scas
shrb
lds
std
les
push
shlb
cmp
hlt
push
push
js
mov
ds
push
mov
ss
jle
js
sub
inc
jb
pop
leave
out
cltd
adc
push
adc
mov
xor
int3
ret
sbb
fwait
rolb
cmp
dec
sbb
sarl
ret
jb
movsl
enter
repnz
sbb
jl
sub
push
pop
into
mov
push
sub
enter
cmp
mov
ja
pop
mov
test
test
ret
lds
in
cmc
xchg
add
repnz
sub
ret
push
ret
push
lods
push
adc
pop
dec
mov
add
add
push
loopne
pop
mov
js
jne
repz
test
scas
js
cmp
mov
xchg
lret
or
ret
inc
lods
pop
inc
sti
pop
or
roll
andl
ss
pop
sbbb
mov
sbb
cld
mov
add
add
adc
cmp
je
jno
mov
mov
pop
ret
ret
jbe
sub
xchg
cmp
mov
cmc
pop
test
dec
inc
filds
mov
adc
js
dec
dec
and
cltd
outsl
cmp
mov
into
js
fxch
cltd
popa
outsb
cli
pop
in
repz
mov
inc
add
sbb
lret
aam
push
xchg
mov
fmuls
pop
add
lea
sub
jp
lret
or
daa
movsb
dec
cmp
stc
sbb
out
popl
pop
push
outsl
arpl
dec
imul
movsl
jo
or
in
or
push
dec
mov
enter
rcrb
test
add
arpl
jmp
pop
loopne
sbb
dec
mov
push
add
sub
dec
xchg
push
sub
aad
dec
fdivr
jl
add
push
mov
movsl
pop
adc
rcrb
pop
test
enter
inc
or
pushf
pop
in
aam
or
ret
cmp
add
test
push
imul
inc
call
inc
mov
fbstp
cmp
xor
cmp
and
add
pushl
test
mov
jge
insl
jp
lea
pop
cmp
fsubrs
fwait
std
mov
outsl
xor
pop
addr16
pop
cmp
xchg
mov
push
lods
bound
dec
push
xchg
das
cmpsl
sub
adc
adc
add
sub
mov
mov
mov
xchg
mov
mov
pop
cmp
lahf
push
sbb
lcall
aam
sub
adc
dec
mov
xchg
sub
mov
sub
cmp
les
push
or
pop
jne
test
xorb
imul
shll
imul
mov
ret
sbb
cmp
das
adc
mov
mov
shll
pop
arpl
pushf
popa
out
lahf
dec
pop
push
ficomps
xchg
fldenv
lahf
movl
inc
jle
inc
imul
jne
loop
fwait
stc
inc
xchg
stos
addr16
sbb
rcrb
xchg
fisttpll
rcrl
inc
or
popf
outsl
inc
shrl
cmp
push
cmp
int
cmp
pop
mov
inc
push
sub
xor
rolb
pusha
test
inc
cmp
mov
or
mov
pop
dec
in
cmp
popa
inc
cmp
lret
test
test
and
test
ss
shrl
xchg
in
lods
push
lahf
fstl
cmp
mov
arpl
mov
add
js
push
pushf
or
aaa
addr16
push
sar
fnstcw
ret
push
lods
ss
mov
inc
sbb
sbb
mov
in
sub
dec
rcll
mov
add
xchg
ds
out
jnp
bound
sbb
cltd
and
fisubrl
es
mov
mov
inc
cmp
dec
push
xor
jnp
int3
or
push
sub
leave
mov
mov
fwait
mov
fnsave
mov
pushf
pop
pop
adc
sub
insb
fistpll
insb
scas
lahf
shlb
inc
incl
loop
je
test
in
cmp
cmpsl
adc
cmpsl
mov
mov
stos
ss
mov
daa
lea
test
jp
fimull
inc
jl
push
and
mulb
notb
adc
pop
sub
mov
push
insl
add
mov
nop
jnp
sbb
mov
jbe
scas
cli
sbb
sbb
shl
jns
sub
or
mov
inc
mov
sbb
sub
push
xchg
cmp
lret
cmc
xchg
rorb
xchg
mov
inc
push
call
push
jmp
jnp
pop
add
aas
fwait
and
adc
icebp
cwtl
out
pop
xor
jge
scas
ja
repnz
or
pushf
xor
out
aas
mov
jmp
add
xor
and
xor
loope
mov
mov
ja
adc
mov
cmc
and
xchg
clc
pop
dec
add
fsubp
and
jo
fldenv
xchg
fiadds
fstl
mov
sti
or
std
fmull
divl
sar
mov
insl
dec
pushf
sbb
data16
mov
mov
and
sbb
mov
imul
ds
mov
lahf
lods
jg
popf
insb
call
inc
adc
pop
hlt
push
mov
adc
sub
inc
mov
hlt
insb
pop
mov
xor
dec
mov
stc
in
sti
or
sub
cmp
xchg
fld
lret
sbb
movsb
pop
stos
pop
fidivrl
out
xor
add
filds
push
ljmp
mov
or
lods
mov
xor
and
sub
xchg
pop
shl
or
and
jae
jecxz
repz
dec
xor
pop
mov
leave
inc
mov
mov
or
iret
ficoml
fdivrs
xlat
lahf
cmp
outsb
mov
divl
mov
adc
jle
xchg
and
push
mov
faddl
orb
push
data16
pop
xchg
sbb
or
ret
mov
insb
dec
mov
fs
scas
cmpsb
sbb
das
mov
mov
jl
orb
lods
mov
fistpll
sub
movsl
movsl
popa
dec
pop
cmpsl
clc
iret
jb
pop
xchg
iret
mov
push
dec
in
jle
lods
nop
push
les
shrl
lods
test
popa
adc
loop
fbstp
mov
fs
push
ja
stc
cmp
popf
xor
xor
cmp
andps
insb
out
mov
pop
xor
push
and
and
add
mov
test
mov
lret
movsl
jnp
int3
scas
mov
push
int
lret
cmp
push
sahf
mov
sbbb
iret
das
cwtl
imul
cmpxchg
popa
add
scas
daa
dec
rorb
out
cmp
lods
mov
inc
dec
repz
in
mov
les
rcrb
sahf
subl
inc
leave
lret
out
pop
lcall
mov
movsl
daa
dec
pop
xchg
pop
xor
in
pop
dec
pop
mov
add
icebp
xchg
mov
inc
outsb
js
and
mov
push
loopne
sbb
dec
cs
insl
mov
stos
mov
xor
cmp
add
xchg
mov
mulb
cld
adc
aas
sub
hlt
mov
mov
lods
push
movsb
sub
mov
jl
or
stos
gs
add
aam
mov
pop
and
add
inc
sub
out
or
imul
pop
sub
or
in
cmc
fcmovnu
popf
adc
xchg
arpl
sbb
insl
sub
in
push
enter
loopne
leave
dec
add
xor
push
data16
xchg
inc
loopne
dec
cltd
jo
cmp
insl
dec
xchg
scas
test
pop
sub
fwait
cmp
popa
xor
mov
aas
or
movsl
adc
pop
add
jl
insb
lods
into
sub
lcall
xchg
pop
js
pop
cmp
dec
or
pop
inc
mov
push
fcompl
jmp
ss
mov
and
push
sti
or
sub
repz
in
sub
sahf
fdivs
rolb
push
sub
fcmove
ds
in
cmp
lods
cmpsb
andl
or
ja
adc
mull
das
leave
decb
aas
jne
xchg
fwait
rcrl
lret
dec
cmp
mov
in
test
adc
mov
repnz
mov
mov
cmp
cwtl
scas
dec
sub
addr16
imul
orl
ror
cmp
shl
sbb
cwtl
mov
cmp
testl
mov
push
adc
stos
sub
subb
outsl
out
iret
loope
sbb
fildll
cmpsb
add
mov
jmp
sub
or
cmp
xchg
leave
call
cmpsb
pop
dec
sub
insl
rolb
xchg
or
and
xchg
sub
or
push
lret
out
scas
add
mov
pop
push
and
add
les
xor
mov
mov
dec
inc
stc
ss
lds
call
and
pop
sahf
push
jmp
inc
rorl
push
mov
into
testb
sbb
dec
das
repz
inc
xor
adc
dec
mov
inc
mov
lods
mov
cmpsb
mulb
fsubrl
xchg
and
sbb
dec
addr16
loop
or
mov
fsubrp
ja
nop
xchg
pop
leave
das
inc
ss
insl
sbb
push
mov
pop
adc
adc
jmp
pop
das
repnz
lods
pop
sub
test
ret
mov
dec
sbb
or
scas
jle
test
aam
loop
mov
inc
cli
sbb
or
andb
scas
daa
mov
dec
and
sbb
cmpsb
push
iret
loope
idivl
jmp
lret
std
jl
mov
adc
or
mov
subl
pop
mov
xchg
fisubs
and
ret
aaa
test
and
sahf
xchg
shrb
sahf
push
icebp
jae
push
repz
pop
sub
popf
in
jbe
jo
sbb
test
pop
out
fnstenv
int
cmp
dec
mov
jb
pop
cmc
sub
jmp
mov
jnp
xchg
mov
fwait
enter
cli
pop
adc
shll
pop
xor
shll
xor
and
cmpb
fldenv
mov
jle
mov
outsb
inc
mov
mov
sub
mov
xor
hlt
sub
fucomp
and
and
in
aam
pop
jge
imul
xchg
outsl
pop
hlt
cwtl
cwtl
jb
push
jge
movsl
cmp
xlat
mov
out
test
cltd
sbb
jg
inc
jne
cmp
mov
fidivl
ds
pause
mov
ss
sbb
gs
inc
jmp
mov
sbb
dec
insl
outsb
rdtsc
sub
adc
in
cmp
rorl
push
out
sbb
sar
std
cs
sub
push
or
adc
loop
cltd
or
in
cli
xchg
test
ret
sbb
mov
lahf
or
imul
or
adcl
js
lahf
sub
shrl
ds
stos
daa
lret
jecxz
xchg
out
pop
test
call
dec
jl
cmpsb
and
adc
and
inc
decw
sahf
aas
data16
fildll
cmpsb
xor
mov
lcall
and
loope
push
and
arpl
push
cmpsl
jle
iret
call
aas
aam
xor
mov
mov
lret
lods
mov
imul
enter
add
and
repnz
cmp
out
ja
pop
out
enter
cmpsl
pop
test
fidivrs
aad
mov
xor
in
test
dec
mov
pop
inc
pop
imulb
in
mov
fistpl
mov
add
mov
mov
push
stc
cmp
les
mov
mov
inc
fldl
out
mov
fs
out
imul
mov
pop
push
bound
add
jg
lahf
fisubl
mov
xchg
mov
xchg
xchg
pusha
and
xor
jb
pop
and
cmp
xchg
cmpsl
dec
rclb
aad
insl
xor
sbb
xor
sub
sub
sti
out
sbb
and
add
mov
and
mov
int
add
fidivrs
sbb
mov
and
lret
sti
pop
xor
cwtl
fs
or
or
fwait
iret
push
push
ret
andb
adc
enter
in
push
mov
pop
ficoml
sub
stc
jns
or
gs
cmp
push
stos
mov
fwait
xor
aas
and
je
mov
test
cmp
mov
jbe
sub
xor
or
jecxz
dec
sub
pop
cmpsb
jns
jae
adc
mov
cmpsl
mov
jno
popa
lret
or
cmp
pop
movsb
popa
or
add
imul
dec
jo
insb
mov
out
pusha
lret
lods
lahf
lret
or
ret
movsl
push
and
cli
iret
enter
adc
mov
adc
sub
lret
ret
in
and
xchg
iret
sub
cmp
cmpsl
sahf
add
pop
jno
mov
dec
jb
cld
in
cmpsl
repz
mov
into
push
stc
fists
pop
add
inc
out
inc
mov
mov
mov
je
xor
in
push
jae
mov
xor
pop
inc
xchg
add
mov
mov
outsb
rol
push
adc
pusha
adc
mov
sub
lcall
xlat
scas
adc
gs
popf
xor
cmp
cmp
inc
lea
dec
imul
xchg
inc
sbb
movsb
rcrb
mov
xchg
or
xchg
and
je
into
mov
mov
scas
int
icebp
inc
xchg
icebp
sub
mov
add
cli
mov
push
mov
mov
inc
popf
pop
leave
aaa
cli
hlt
sub
mov
test
leave
xchg
enter
pusha
out
hlt
xor
xor
jge
in
sub
adc
sbb
dec
in
fnstsw
out
out
lds
ret
jo
inc
clc
adc
pop
cli
out
sub
xor
into
jle
jb
repz
push
sbbb
dec
mov
popf
push
mov
push
push
divl
stos
cmp
fsts
icebp
movsb
dec
aad
les
jno
movsb
dec
out
pusha
lods
sub
test
subl
xor
popa
and
stos
or
in
add
movsb
mov
imul
pop
out
mov
dec
es
mov
out
xchg
sub
push
adc
mov
popf
or
iret
rcr
fwait
lret
pop
lret
xor
cmp
adc
mov
and
push
sbb
add
sbb
icebp
les
pop
test
pop
cmc
insl
dec
sahf
cmc
in
aas
mov
push
adc
shlb
in
jo
jno
fcoml
repz
cmpsb
xchg
lcall
out
loope
fsub
dec
push
mull
shl
mov
jnp
jbe
or
cld
xor
sarb
cli
outsl
adc
sbb
mov
push
sub
je
cmp
pop
out
and
mov
das
ljmp
cwtl
or
fucom
sub
lods
adc
stc
jb
and
inc
cli
ret
mov
clc
push
stos
mov
shl
push
bound
and
push
cmpsl
in
add
aas
mov
and
popa
mov
std
sbbl
nop
mov
psubusb
ja
pop
mov
mov
sbb
inc
data16
out
jb
sbb
in
out
inc
adc
les
and
mov
cmp
sbb
std
fwait
jns
mov
xchg
pop
sbb
lods
jo
jno
cmp
and
jnp
pop
add
jle
idivl
dec
jle
dec
mov
and
mov
pop
leave
inc
je
pop
sub
mov
popf
out
xlat
cmp
in
lock
pop
ds
mov
inc
aas
xor
dec
ret
jmp
jmp
jno
mov
in
outsl
stos
inc
xchg
jmp
fisttpl
shlb
dec
and
inc
movsl
ja
sub
add
lock
jl
add
xchg
cwtl
xor
add
xchg
adc
cmc
mov
out
mov
pop
mov
sbb
and
sbb
jge
mov
inc
push
add
femms
adc
js
clc
push
fistpll
adc
outsb
push
jns
add
cli
les
hlt
jnp
dec
xor
pop
sub
int
repnz
cld
push
xor
cwtl
clc
mov
adcb
popf
xchg
cmc
adc
pmaxub
adcl
leave
shll
xchg
fstl
adc
pop
push
push
lods
push
sbb
pop
cmp
stos
leave
call
fisttps
xchg
data16
cmp
mov
ret
sahf
xlat
jecxz
cmp
sub
mov
sbb
pop
inc
xchg
out
xor
mov
mov
fwait
mov
xchg
out
pop
mov
inc
push
mov
pop
or
xchg
inc
jle
add
cmpsl
jno
xchg
aaa
arpl
imul
inc
xchg
mov
sbb
mov
jno
rorl
fnstenv
insl
pop
sbb
dec
jl
xchg
in
fistpll
insl
sbb
test
dec
or
dec
int
xor
sub
sbb
mov
dec
cmp
mov
test
xchg
js
subl
inc
sbb
xor
pop
out
call
xchg
fimull
dec
xchg
sub
out
gs
mov
dec
stos
push
imul
or
pop
cld
xchg
push
loopne
pop
push
lret
lods
xor
inc
add
arpl
stc
daa
movl
rsqrtps
and
cmpsb
xlat
ret
in
cmp
hlt
loope
xchg
cmp
ror
xchg
lods
fists
jbe
ja
outsb
sub
out
test
cli
addr16
in
bound
daa
ret
pushf
add
and
aaa
out
inc
insb
xchg
pop
ds
fcmovnu
pop
addr16
or
mov
cwtl
dec
outsl
cmp
addr16
mov
or
fcmovu
xor
mov
push
enter
mov
idiv
hlt
push
mov
nop
scas
push
add
dec
cmpsl
mov
rol
ret
lock
lahf
das
mov
std
adc
nop
inc
pop
mov
mov
mov
xor
sub
inc
mov
stos
stos
loopne
pop
clc
push
sbb
sbb
xor
lret
pop
adc
push
jmp
xchg
cmp
hlt
movsb
and
sbb
add
and
in
adc
sub
and
xchg
adc
out
testl
sbb
or
mov
inc
push
xor
mov
or
lock
shrl
lea
enter
dec
mov
jnp
pop
outsl
sbb
pop
cs
lea
xlat
cld
popf
push
in
es
aad
inc
and
into
ret
mov
loop
push
stos
jb
sbb
int3
jae
push
out
pop
push
sbb
fcoml
mov
mov
sbbb
cmp
inc
mov
repnz
outsl
inc
scas
lahf
cmp
push
lahf
cmpsl
add
fcomps
jg
push
sbb
xchg
pop
lcall
loop
mov
jb
aad
jnp
int
sbb
inc
ret
popa
testl
int3
cmpl
insb
mov
shll
enter
inc
call
in
outsb
fdiv
push
lods
aas
inc
lods
mov
mov
jbe
cld
out
inc
sarl
cltd
out
dec
ret
or
shl
inc
leave
pop
inc
repnz
popa
leave
inc
jno
inc
cmp
add
cli
ja
jne
add
adc
lcall
fidivl
into
push
outsl
pop
pop
mov
dec
sti
sarl
inc
pop
sub
pop
push
stc
aaa
shll
cmp
jnp
test
out
pop
inc
sahf
negl
xchg
sahf
push
bound
dec
xor
lret
aas
dec
lods
dec
or
insb
in
mov
and
pop
hlt
push
sub
insb
in
mov
adc
xchg
pop
sub
inc
xchg
push
jno
xor
inc
popf
decl
add
add
scas
cmp
mov
mov
cmp
mov
push
mov
ljmp
es
sbb
fiadds
popa
or
mov
mov
xor
add
testl
xor
fcoms
xor
imul
and
xor
mov
push
mov
pop
fcom
ss
test
pop
pop
idivl
sub
aad
push
iret
not
repnz
jbe
jae
lods
test
fwait
sub
xchg
adc
lcall
fs
es
inc
cltd
pop
fdivrs
add
frstpm(287
push
rcrb
sti
mov
hlt
sub
dec
sub
test
adc
dec
lret
and
nop
xchg
shrb
mov
xchg
cmp
mov
bswap
dec
sub
lcall
xchg
cmp
std
push
negb
lods
cmpsb
dec
lcall
lock
mov
sbb
movsl
test
ss
push
stc
add
lods
into
adc
aas
push
xchg
dec
push
not
out
jo
mov
mov
xor
xchg
cmp
js
divl
bswap
or
rolb
jae
sub
mov
xor
inc
aad
std
sbb
pusha
mov
fldt
into
aas
in
mov
dec
cltd
sub
arpl
xor
xor
pop
add
and
daa
push
add
shrl
psadbw
mov
mov
sub
inc
sbb
mov
mov
sub
hlt
and
lods
shll
in
cmp
in
lock
mov
mov
mov
stos
out
test
inc
or
xchg
push
sbb
cli
aam
sbb
mov
cmp
cmp
mov
fcoms
hlt
out
push
pusha
add
rcll
dec
addl
jb
jbe,pn
or
iret
sub
cmp
dec
clc
cmp
aad
js
xchg
lods
mov
hlt
pop
js
push
sti
push
and
xchg
cmp
int
lds
cwtl
inc
out
sbb
bound
jnp
int
dec
add
ret
xor
adc
xor
jg
aam
push
cmpb
int3
mov
xor
pop
les
leave
pop
loop
mov
out
sbb
shlb
cwtl
in
and
outsl
ljmp
js
xchg
and
dec
xor
icebp
pop
mov
push
test
test
mov
push
mov
mov
dec
adc
fwait
inc
je
js
dec
lret
sbb
div
hlt
mov
loope
and
or
lods
inc
orl
jno
sub
call
into
outsl
dec
out
push
jg
fwait
test
jle
iret
push
sbbb
sbb
cmp
dec
mov
push
adc
cmp
cmp
aam
fcompl
rcll
mov
dec
js
jecxz
scas
dec
fidivrs
enter
or
jmp
adc
xor
push
jp
cltd
out
adc
mov
mov
adc
pusha
clc
test
xchg
sub
out
out
adc
jg
repnz
arpl
jnp
lods
lods
jae
incl
cmp
aam
sub
mov
into
jbe
cli
popf
pop
js
adc
cmp
mov
cmpsl
xchg
shr
mov
popf
iret
out
cmp
xor
outsb
fimuls
dec
mov
bound
fwait
and
das
xchg
sub
sarl
dec
ret
mov
mov
jbe
in
insb
clc
push
mov
mov
movsl
cmc
adc
push
jno
int3
movsb
nop
mov
cmp
dec
lock
or
and
insl
push
mov
in
negl
pop
scas
lahf
in
mov
and
add
sub
jl
lcall
dec
test
fs
mov
imul
dec
js
xchg
mov
or
dec
push
aaa
cmp
push
imul
jns
add
in
cmp
push
clc
cs
fs
decb
or
pop
xchg
jl
clc
ds
push
push
and
cmp
cltd
mov
data16
sahf
jb
test
lds
in
xchg
jns
xchg
imulb
repz
daa
push
push
sub
aas
and
sbb
xor
add
adc
inc
cld
stos
sub
inc
mov
adc
dec
inc
jle
pusha
adc
jmp
inc
bound
cmpsb
inc
popf
dec
popa
jecxz
mov
pop
test
or
fistl
lea
mov
inc
sbb
pop
std
xor
and
scas
cmc
popa
mov
jns
movsl
adc
pop
loope
in
sbb
mov
or
jg
cmc
mov
cs
push
outsl
mov
hlt
jne
cmpsl
xchg
icebp
xchg
cmc
ret
cmp
push
add
xchg
ds
jbe
outsb
and
gs
pop
mov
xchg
scas
add
jecxz,pt
stc
pop
sti
shll
xchg
pop
jg
cmp
loopne
test
sub
push
mov
jb
mov
jb
cmp
or
pop
push
inc
and
push
scas
ficoms
out
shl
jl
in
jns
pop
rep
jo
lcall
xchg
xchg
sub
or
mov
sub
pop
mov
cmp
cmp
push
xlat
loop
lock
nop
mov
fs
orl
aam
mov
add
out
and
fucomip
jns
cmp
inc
xor
and
sub
mov
xor
mov
sarb
outsb
jne
mov
into
push
jo
insl
lds
cmp
rep
inc
sbb
or
movsb
dec
fldl
push
mov
aaa
push
mov
cmp
test
bound
pop
ja
cld
mov
xlat
and
adc
je
mov
pop
pop
insb
les
mov
fwait
daa
je
adc
mov
push
scas
pop
aad
lods
mov
iret
inc
sub
lret
inc
sbb
pop
dec
dec
imul
testl
mov
adcl
add
mov
mov
cs
add
and
inc
jns
adcb
jg
jo
xor
jecxz
popf
addb
shlb
imul
inc
pop
cltd
push
inc
mov
repz
fistl
sbb
mov
insl
shlb
imul
mov
or
das
inc
push
or
leave
jbe
shrl
fists
test
jb
pop
and
mov
cmpsb
pushf
rcrl
fistl
push
push
out
aam
add
pop
das
in
xchg
push
mov
pop
pop
xchg
push
ds
icebp
gs
dec
psubq
adc
push
sbb
pop
and
jb
or
subb
lods
fiadds
scas
shrb
adc
push
imul
in
mov
data16
jmp
scas
addb
push
push
pop
xor
insl
pop
add
and
pop
ss
and
xor
incb
repnz
add
lea
sub
cld
fsts
cmp
add
movsl
ljmp
ja
mov
pop
ficoms
int
mov
cs
call
mov
push
sbb
pop
pop
mov
push
jmp
add
iret
outsb
pusha
add
leave
bound
add
xorl
testb
cld
inc
jp
dec
popf
dec
mov
out
in
pusha
aam
cli
cmpsl
jb
cltd
jg
daa
adc
dec
into
add
inc
mov
repz
cmp
pop
pop
movsb
divb
mov
shl
ljmp
dec
sbb
mov
push
int
xchg
pusha
mov
cltd
insl
outsl
adc
pop
pop
push
push
das
shl
cs
dec
and
adc
cmp
fcoms
mov
jno
or
jg
cmp
pop
xchg
repz
in
bound
rorl
jmp
and
call
cmp
xchg
test
pop
sbb
scas
adc
jbe
and
push
sbb
jne
mov
sub
ror
dec
xchg
rcr
adc
sub
or
xor
pop
mov
out
mov
incl
adc
adc
jo
cmpsl
shr
xor
dec
xor
jmp
int
inc
ja
cmp
xlat
sbb
gs
ja
push
dec
push
adc
test
cmpsl
or
mov
cmp
mov
test
popf
push
push
pop
call
dec
test
out
push
add
in
sbb
mov
xchg
lea
fldl
pop
pushl
dec
push
testb
mov
hlt
jno
enter
inc
xchg
fmull
mov
pop
addb
mov
mov
mov
nop
add
lock
loop
jg
xchg
imul
faddl
or
shrb
sub
cltd
ds
lock
aam
add
dec
pushf
out
xor
xchg
sub
mov
cmova
pop
int
dec
sti
and
sti
sbb
addr16
add
imul
pop
clc
cmp
flds
ja
stos
lds
push
jno
inc
xchg
fistpll
cmp
out
cmpb
loop
ret
fidivrs
aaa
xchg
pop
sub
orb
fstps
mov
mov
lock
test
pop
cmpsl
jg
test
push
repz
sar
sub
jp
cmp
mov
sahf
mov
lea
inc
int3
xor
jns
adcb
fwait
lds
clc
pop
int3
mov
aad
push
sbb
jle
cmp
js
aaa
rolb
mov
xchg
and
cmp
lret
jae
ljmp
inc
push
mov
rcrl
daa
xor
sti
call
mov
pushf
into
push
sbb
pop
std
imul
in
stos
loop
pop
lcall
xchg
loopne
sub
push
push
cmpb
rclb
pop
mov
pop
decl
jnp
lods
mov
jmp
adc
push
ror
push
pop
es
cli
inc
out
sbb
fwait
xchg
mov
fstpl
mov
es
push
mov
fistpl
push
outsb
rorl
mov
jo
scas
dec
rcr
es
stos
pushl
loopne
xchg
or
jno
pop
push
pop
sahf
jb
mov
sub
sbb
jo
fiadds
into
in
enter
das
stc
push
pop
adc
fucomip
sbb
fstl
mov
scas
pushf
divb
out
popa
iret
jbe
sub
clc
pop
jg
hlt
pop
test
push
pop
adc
jae
stos
ret
cmpsb
mov
add
mov
insl
scas
popf
dec
xor
lods
test
pop
mov
sub
cmp
mov
lock
out
mov
xor
or
jl
push
jg
rcr
jns
pop
sbb
mov
jbe
ja
jbe
jae
jp
imul
xchg
mov
xorl
lret
or
mov
or
inc
in
cmpsl
roll
lret
insb
jmp
addr16
ret
push
daa
scas
jns,pt
in
xchg
pop
cmp
dec
mov
inc
je
xchg
jle
aaa
jmp
mov
pop
push
xchg
mov
sbb
sub
nop
adc
mov
jge
bnd
mov
subl
std
test
pop
repnz
pop
insb
sahf
sub
push
mov
leave
loopne
add
lock
sub
aad
retw
xchg
das
inc
lods
into
std
sbb
jnp
cli
jmp
repnz
xorl
stc
push
mov
cmc
adc
xlat
fwait
pop
scas
enter
rcrl
arpl
mull
inc
subl
inc
sbb
scas
faddl
jge
arpl
and
push
decl
lds
popf
out
clc
test
cwtl
divl
sbb
mov
cli
test
into
gs
sbbb
mov
cmpsl
mov
mov
push
insb
loop
mov
sar
movsl
xor
xchg
push
enter
mov
icebp
aam
leave
mov
lret
test
shll
and
movsl
ss
xchg
xor
xchg
sub
pop
sbb
inc
fnstcw
fs
jb
inc
lds
fbstp
iret
adc
or
ret
push
decl
dec
movl
xchg
js
decb
jecxz
adc
ftst
test
mov
or
sti
pop
das
cld
mov
mov
sbb
fdivs
insl
and
add
sub
sub
adc
and
add
fiadds
into
popf
jg
fiadds
add
aad
insl
xor
mov
pop
fsts
in
cmp
pop
xor
push
and
test
stc
mov
add
dec
mov
popa
dec
jne
cmc
pushf
movsb
push
and
mov
aad
idivb
xchg
mov
data16
add
out
iret
add
iret
xchg
cmp
imul
mov
popa
imul
test
outsb
jecxz
ret
jae
cmc
jnp
mov
mov
jmp
jae
mov
dec
ret
loop
ds
pop
jp
mov
call
lcall
dec
add
xchg
inc
sbb
lahf
dec
sbb
xchg
lret
add
dec
je
mov
dec
loopne
mov
scas
inc
in
insl
int3
stc
mov
ss
dec
out
adc
adc
add
fisttps
dec
repz
inc
adc
lock
shll
ffreep
dec
mov
pop
sub
imul
sbb
fldcw
xchg
push
pop
xchg
movsl
movsl
push
icebp
xlat
xchg
adc
pop
mov
mov
push
sbb
mov
lahf
or
jp
pop
xchg
pop
mov
call
cs
fnstsw
add
enter
rcrb
fmuls
mov
sti
pop
sbb
sub
sub
mov
imul
out
and
mov
jge
inc
add
jbe
dec
adc
mov
addb
push
adc
and
inc
dec
add
rorl
dec
xor
out
les
jl
mov
fcompl
hlt
test
and
sub
add
pop
addr16
cli
test
push
mov
xor
pushf
mov
ljmp
pop
sbb
add
xchg
pop
jmp
mov
scas
or
jge
push
inc
call
jbe
jge
fwait
jbe
xor
pop
movsb
cmp
addr16
pop
or
cwtl
lds
cmpsl
out
xor
enter
nop
mov
or
stos
mov
fisubs
dec
inc
sti
adc
and
sbb
call
nop
or
insb
cmc
imul
mov
push
adc
mov
and
loop
aas
stc
and
repnz
adc
pop
pop
or
adc
or
dec
jno
rcll
pop
arpl
out
mov
dec
mov
add
push
or
xorl
and
xchg
and
lret
shrb
push
icebp
mov
daa
ret
iret
outsb
fdivrs
clc
js
mov
cmpsl
xchg
movsb
stos
out
fmull
inc
test
push
push
pop
push
iret
and
js
cmp
dec
pop
mov
jns
loopne
cmp
cmp
cmp
push
int3
ds
jns
cmp
pop
xor
repz
aam
out
ss
test
pusha
test
xchg
cmp
adc
push
jo
push
or
enter
mov
xor
addr16
test
cmc
push
inc
inc
adc
test
and
mov
je
mov
bound
mov
aaa
loope
ja
mov
inc
test
rcl
hlt
or
cltd
sbb
test
inc
mov
dec
and
jne
adc
call
fsubrl
push
xchg
and
aaa
or
sub
push
loopne
sub
dec
push
je
mov
mov
cmp
jle
sub
push
and
sbb
imul
cmp
push
lods
dec
pop
jg
xchg
mov
push
add
xorl
lcall
cmpb
xor
es
add
cmpsl
mov
xchg
xchg
loop
jne
dec
push
movsb
or
xor
xchg
pop
mov
sbb
adc
hlt
mov
push
dec
add
in
xor
xor
in
xchg
mov
fisttpll
inc
stc
or
jg
xchg
data16
out
addb
jmp
sub
outsl
pop
inc
dec
enter
xchg
pop
aad
xchg
inc
ljmp
call
test
dec
stos
jge
mov
and
stos
xor
ror
in
je
imull
icebp
or
pop
mov
mov
sub
adc
les
push
test
push
std
imul
sbb
outsb
jmp
fucomi
out
rcll
out
push
sub
mov
imul
shrl
xor
mov
decl
ret
fists
or
test
lea
and
outsb
cltd
dec
or
sub
movsb
mov
ret
dec
lea
push
fsubl
enter
hlt
cmp
mov
jg
mov
jo
cli
cmp
sbb
sub
sbb
adc
leave
fsubl
in
mov
loope
dec
cwtl
rorb
and
mov
inc
adc
mov
mov
mov
xor
add
sbb
add
xchg
subb
in
test
or
xor
push
out
incb
test
mov
sub
jl
or
pop
mov
mov
cmp
adc
shlb
scas
inc
rclb
add
mov
mov
pop
scas
inc
inc
or
dec
loopne
or
push
jge
mov
pop
fldt
shrl
mov
lods
mov
fs
xchg
popf
lea
cs
jmp
xchg
pop
rolb
ljmp
call
sub
cmp
jmp
push
ret
movsb
outsl
xchg
push
jbe
pop
jg
not
inc
sub
adc
cmp
scas
or
lea
jno
add
xchg
and
cmp
add
or
daa
js
in
gs
mov
adc
jmp
addb
mov
inc
jmp
icebp
or
stos
fldenv
scas
push
insl
or
stos
xchg
mov
shlb
jge
nop
inc
fisttps
lea
and
jp
fwait
shll
xchg
add
add
adc
lea
mov
mov
repz
add
into
jne
xor
ret
inc
cmp
pop
pop
mov
xchg
pop
and
push
cs
mov
lods
push
mov
xor
push
aas
cmp
stos
or
rol
lret
enter
cmp
std
and
and
sub
lahf
inc
xchg
les
call
es
and
fcompl
xor
mov
jo
pop
fistpl
or
and
std
add
scas
mov
push
ljmp
cmp
mov
add
inc
insl
pushf
loopne
std
bound
mov
mov
in
pop
mov
xor
cmp
fs
shrb
hlt
cwtl
pop
cld
adc
jbe
enter
jo
pop
sti
iret
pusha
arpl
adc
in
sti
xor
outsb
aaa
sbb
mov
sti
ret
dec
or
jbe
sbb
cwtl
sti
clc
cmc
test
out
idiv
mov
add
pop
ret
jg
sti
int3
icebp
ret
jnp
jg
xor
xor
pop
cltd
ja
gs
pop
cmp
cmp
push
and
ret
mov
test
fildll
mov
test
mov
sbb
aas
sbb
and
dec
push
mov
es
mov
test
je
and
aam
movl
xchg
mov
mov
mov
push
ret
xor
push
cmpsb
jns
xlat
es
mov
add
mov
gs
cmp
fiaddl
pop
ror
sub
mov
jae
push
outsl
xor
pop
insl
push
lea
cltd
mov
ja
xor
sub
add
insb
mov
cld
add
push
push
xor
mov
jo
iret
aas
ljmp
aam
call
sbb
pop
mov
push
push
insb
cmpsl
test
jp
sub
pop
icebp
fldenv
fs
lods
mov
mov
into
pushf
inc
xchg
popa
call
cmp
adc
popl
push
flds
pushw
out
ljmp
xchg
adc
lret
mov
or
jo
mov
cmp
adc
dec
adc
adc
pop
jmp
sub
arpl
and
inc
jno
pop
pop
lahf
or
cmp
or
cmp
jmp
or
lret
xchg
fwait
scas
mov
or
sub
cmc
sbb
cmpsl
or
push
dec
test
loopne
cmp
push
pop
add
mov
xlat
jp
add
jo
push
pop
add
cs
mov
xchg
sub
jb
inc
arpl
mov
and
or
loopne
cwtl
mov
nop
push
pop
inc
pusha
jmp
loopne
sub
in
pushf
xchg
add
rorb
xor
push
mov
rcll
outsb
popf
push
daa
dec
in
push
adc
insb
xchg
xor
sub
pop
mov
xor
add
lahf
cli
data16
pop
movsl
add
xchg
cmpsl
push
mov
xchg
and
mov
dec
xor
test
movsl
inc
push
xchg
ljmp
div
fdivrs
mov
in
fxch
or
stc
fimuls
inc
sahf
jo
jae
dec
testb
pop
imul
int
insl
add
mov
xor
enter
cmp
or
rcr
xor
mov
stos
mov
add
enter
or
cltd
cmc
mov
mov
ss
or
loope
pop
add
or
andl
mov
xor
mov
dec
ret
xlat
sbb
pop
xor
cli
dec
pop
pop
inc
inc
call
cmp
in
push
stos
xchg
out
out
cmp
cmp
and
and
rcrl
ja
fwait
cmp
mov
iret
push
stos
out
mov
mov
add
jne
insb
sub
mov
daa
inc
dec
dec
scas
cmp
je
pop
inc
add
fistpll
xor
ja
push
test
push
adc
ret
adc
inc
and
xor
and
xor
fcomps
sub
pop
adc
add
jg
jmp
push
rorl
fdivp
inc
in
cmpsb
cmp
std
or
fs
or
test
out
and
dec
cmp
add
data16
push
int
add
push
arpl
or
and
aas
push
mov
pop
cmp
pop
pop
into
xor
inc
xchg
test
test
push
mov
or
add
movsl
mov
jge
pop
les
push
mov
dec
pop
test
addr16
or
sub
dec
pop
add
jg
stc
idiv
pop
rcll
push
and
push
lock
stos
out
sarl
in
pop
test
xchg
sbb
cld
test
push
or
pop
push
dec
sbb
mov
and
pop
and
push
ja
pushw
mov
shll
adc
dec
fldt
movsb
jge
push
mov
in
push
or
fdiv
gs
scas
push
rcrb
jbe
fwait
add
cmp
dec
push
cld
dec
inc
jmp
movsb
mov
outsb
pop
mov
dec
out
cmc
out
scas
dec
pop
ret
cmp
dec
test
pop
aaa
test
and
loopne
loope
fs
sbb
mov
cmp
adc
xchg
negl
jge
and
jmp
bound
repnz
adc
jecxz
not
jge
xchg
xchg
mov
adc
iret
xor
pop
cmc
lea
adc
and
xchg
jb
out
jo
gs
outsl
add
adc
mov
push
shr
push
pop
jnp
bound
aas
xchg
jb
lods
mov
sahf
scas
shrl
test
mov
loope,pt
inc
sub
enter
and
popa
lods
repz
daa
fucom
outsl
daa
xlat
mov
add
mov
pusha
sti
adc
pop
pop
mov
sub
mov
out
mov
pop
lock
push
mov
xchg
call
xlat
xchg
pop
sarl
sarl
xor
sbb
cmp
stos
push
jae
xor
cmp
cmp
shr
cli
fldt
out
rclb
xlat
xchg
out
ljmp
repnz
movsb
xchg
pop
xor
pop
adcl
dec
xchg
add
test
xor
jns
and
cmp
je
mov
xor
fstl
hlt
movsb
pop
sbb
push
mov
int3
push
mov
xor
popf
mov
nop
movsb
push
add
hlt
psubusw
add
push
sub
mov
imul
cmp
aam
push
xorl
add
or
cmp
xchg
push
lret
mov
dec
leave
nop
push
rcrl
mov
sbb
in
cmpb
mov
lds
int3
mov
sub
xor
inc
sub
mov
adc
cmp
mov
inc
dec
out
sbb
add
mov
das
mov
insl
push
cld
inc
shrb
cmp
sbb
rolb
jmp
stc
push
mov
inc
pop
jl
add
roll
adc
add
pop
push
mov
aas
mov
sarb
arpl
and
pop
dec
sbb
stos
js
stos
mov
sbb
push
into
ljmp
pusha
arpl
push
int3
sub
push
test
lcall
loope
scas
cmp
and
pop
insl
xor
add
lods
in
loope
imul
sub
sbb
stos
cmpsl
sti
lahf
pusha
jle
mov
cmc
enter
add
jl
inc
sbb
jl
jb
nop
push
pop
jne
jno
popa
xor
pop
fimull
in
jne
push
jmp
sbb
sbb
xor
fbstp
xchg
mov
ja
xchg
ljmp
mov
cmp
in
dec
cmpsl
repnz
xor
sub
addb
add
movsb
add
mov
and
enter
cmpsb
test
stos
dec
dec
lcall
fistpll
loop
push
fdivl
mov
push
out
sbb
xchg
jo
into
mov
gs
inc
sbb
les
test
loopw
mov
sub
rcr
std
lahf
mov
mov
xchg
aaa
dec
enter
and
sti
ret
add
aaa
sub
adc
sbbb
popf
dec
and
dec
xorb
inc
jbe
pushw
dec
add
ljmp
jg
cmp
pop
out
sub
mov
inc
fwait
and
push
pop
inc
fbstp
lcall
je
iret
movsl
jns
repnz
push
sar
dec
pushf
insb
xor
inc
sub
xchg
scas
bound
push
mov
gs
pop
push
xlat
adc
ret
sarl
dec
push
lods
and
or
push
arpl
inc
or
jo
xchg
mov
mov
and
inc
pop
shll
repnz
popf
xchg
jo
dec
xchg
cmp
push
or
push
xchg
cmp
mov
jecxz
dec
sub
bnd
sub
fsts
cmpsl
bound
loope
cmp
cld
sub
xchg
mov
pop
dec
repnz
lcall
mov
loopne
adc
aam
mov
arpl
out
hlt
sub
mov
test
ds
add
mov
mov
std
fildll
dec
outsb
mov
dec
push
jb
out
mov
and
sbb
mov
or
fiadds
cli
test
fucomi
in
xor
fcompl
lahf
repnz
inc
ss
push
and
xchg
daa
imul
lcall
repnz
je
sub
shlb
pop
sarb
push
stos
or
lods
ficoml
lcall
fldcw
mov
call
pushf
jb,pn
mov
dec
decb
inc
stos
movsl
mov
push
in
cmp
in
add
sub
add
ja
adc
or
bound
out
nop
xlat
and
ret
icebp
decl
push
or
out
test
dec
lea
pop
rclb
sub
xor
subb
fdiv
inc
fwait
hlt
test
cmpsl
jne
fcmovbe
aam
pop
pusha
fiadds
xchg
imul
test
fwait
cltd
cmc
xchg
adc
jns
sahf
jle
pop
inc
icebp
frstor
lahf
imul
decl
cltd
stos
inc
sbb
inc
inc
aaa
rclb
fisubrl
inc
jmp
pop
daa
xchg
mov
and
not
pop
adc
scas
cmp
inc
popf
sbbb
cmpsb
add
xor
add
adc
cld
je
fmulp
and
sahf
daa
mov
mov
jge
push
jle
mov
ljmp
xor
in
repnz
adc
into
and
sub
scas
popa
or
test
nop
fs
aam
adc
fstl
call
mov
addr16
push
sub
daa
out
imul
mov
pop
fistpl
insb
lds
jb
jp
divb
lods
aad
movsl
inc
xchg
scas
push
mov
aas
fs
rcr
push
fnstsw
xor
sbb
inc
mov
sub
jns
mov
mov
cltd
lock
in
lret
in
cltd
adc
jno
test
adc
or
sbb
cwtl
movsb
push
pop
xchg
loopne
std
add
ljmp
test
imul
mov
lods
and
bound
xor
out
fadds
lods
pop
pop
dec
sbb
and
mov
pop
andl
jno
fdivrp
enter
test
xchg
and
sub
push
lods
xchg
jno
or
add
add
mov
or
and
test
jbe
sbb
inc
add
rcrl
and
xor
jbe
aad
mov
cwtl
lds
cmc
xchg
arpl
in
sbb
xor
arpl
lods
sti
aad
jmp
jl
pop
cmp
inc
jb
aam
fs
mulb
fidivl
std
xor
cmpsb
mov
xchg
mov
fcomps
mov
xchg
push
adc
sbb
inc
xor
aaa
enter
popa
es
xor
lock
cmpsb
or
pushf
shll
cmpsb
xchg
jne
jg
and
scas
adcl
shlb
add
xchg
lahf
xor
xor
xor
xchg
push
sahf
add
jmp
shlb
subb
mov
lds
cmp
sbbl
xchg
loope
fnstcw
adc
clc
in
mov
inc
popf
mov
lret
jmp
or
mov
ret
test
sbb
leave
push
jecxz
mov
jmp
jmp
pop
shll
subb
jl
dec
push
lcall
ds
jo
cmp
fidivrs
shll
inc
mov
clc
popf
stos
push
cmp
out
cmp
jb
fistl
pushl
inc
call
aas
or
scas
cmp
les
dec
lods
pop
popa
mov
fcompl
shr
adc
mov
push
push
cwtl
andl
inc
xchg
test
xor
mov
pop
adc
data16
in
push
test
jmp
enter
and
or
xor
lret
sbb
lahf
cmovle
mov
test
push
mov
jno
or
push
push
jo
movsl
pop
adc
lret
loop
and
lods
jl
scas
xor
outsb
orl
test
pop
xorl
int
faddl
aas
fdivrs
inc
sbb
add
xor
fdivs
adc
arpl
add
sub
push
stos
pop
mov
mov
cs
bound
adc
aad
into
or
sbb
out
and
fcmove
push
stos
fisubrl
movl
push
adcb
out
sti
test
ljmp
push
scas
ud1
add
outsb
or
sti
rclb
xchg
mov
leave
subl
int3
div
je
inc
or
test
jo
add
pop
out
cmp
inc
and
pop
stos
enter
cltd
imul
aad
pop
in
xchg
adc
insb
xchg
rcr
rcll
mov
jmp
mov
stc
test
or
or
mov
jmp
inc
scas
mul
or
les
or
or
mov
je
inc
mov
jb
shr
mov
in
hlt
ret
repnz
push
call
insl
ss
std
imul
xlat
or
insl
inc
and
jo
xor
mov
jbe
pop
mov
hlt
dec
iret
add
jge
test
bound
mov
jecxz
cmpsb
sub
lods
sbb
orb
orl
add
xchg
sarb
outsb
push
aad
jne
mov
push
pop
or
addr16
add
iret
sbb
lcall
aad
xor
icebp
jnp
or
mov
or
arpl
pop
in
movsl
sbb
out
sbb
pop
dec
pop
sub
pop
and
sub
jle
xor
and
mov
mov
mov
jns
adcl
stos
shl
xor
stos
out
xor
ss
pop
ja
loop
mov
xchg
js
loopne
push
jb
dec
and
mov
fbstp
pushf
daa
bound
adc
push
out
xchg
jno
pop
mov
push
pop
push
shlb
out
insl
imul
mov
mov
popf
scas
mov
dec
and
shl
aaa
mov
add
inc
or
inc
mov
out
inc
mov
fistpl
popa
stos
pusha
xchg
xor
push
push
dec
add
cmpsb
ss
out
jbe
jae
out
push
add
lds
jmp
mov
test
push
dec
ret
call
push
jbe
push
dec
test
mov
lock
push
in
inc
or
adc
xchg
inc
xchg
xchg
popa
es
and
fiaddl
cltd
ret
pop
or
xchg
push
dec
and
inc
mov
jle,pt
mov
jne
scas
rorb
mov
jns
add
int
inc
add
xor
test
dec
inc
fstpt
add
adc
fucomp
cmpsb
mov
xchg
test
iret
addr16
outsb
fmulp
adc
nop
out
mov
lods
stc
ja
rcll
je
mov
add
adc
outsb
pop
lods
dec
fldcw
mov
fwait
sbbb
sub
mov
divl
sbb
jbe
not
add
or
push
sub
outsb
jmp
mov
hlt
pop
iret
std
sbb
test
add
cld
dec
fsubl
inc
js
jmp
aam
fisttps
negb
out
and
aam
push
rclb
in
addr16
aas
pop
adc
addb
int
mov
int
jg
test
pop
aaa
sub
gs
pop
negl
sub
xlat
ljmp
push
sbbb
in
or
call
xchg
stc
leave
or
popf
push
jmp
mov
cwtl
sbb
sahf
cmp
push
jnp
mov
imul
push
xor
add
sarl
ffreep
xchg
pop
and
mov
arpl
xor
inc
mov
sbb
sbb
mov
and
loope
scas
mov
xchg
inc
inc
cmp
ja
pop
insb
jb
stos
insl
movsl
pop
jns
fstl
push
sub
xor
sub
testl
jle
dec
sbb
jl
cmp
jns
push
mov
lret
and
dec
inc
xchg
clc
sbb
dec
aas
inc
lcall
outsl
mov
icebp
fisubrl
les
push
aad
lahf
fsubrp
adc
ja
clc
cmpsb
inc
and
mov
cmp
mov
mov
fimull
push
xchg
es
call
subb
cmp
jg
inc
test
and
sub
or
and
xchg
adc
xor
cmpsb
call
daa
mov
out
inc
adc
fidivl
add
iret
loopne
inc
xchg
lods
ja
in
jmp
xchg
test
aam
mov
sbb
or
ja
push
jecxz
cmpsl
in
add
jle
je
outsl
roll
jge
and
or
adc
test
loopne
push
pushf
pop
sbb
mov
leave
add
inc
sahf
sub
das
fs
or
and
test
cmpsl
lahf
insl
mov
push
repz
pop
jecxz
xchg
cmp
movsl
mov
iret
cmp
lahf
cmp
loop
mov
sub
int
jmp
xor
notl
xchg
mov
dec
mov
std
outsl
dec
fs
faddp
fistps
push
outsl
out
int
sbb
gs
lcall
aas
ret
aaa
dec
enter
jne
cmp
dec
jl
call
mov
fs
incl
mov
repnz
cmp
loop
sbb
xor
call
jnp
out
xor
fstpt
in
adc
div
mov
lods
cmc
andl
mov
add
mov
mov
lcall
popf
jmp
fadd
cwtl
lods
in
incb
les
js
dec
ret
pop
jnp
or
mov
push
aad
mov
dec
push
mov
push
xchg
xchg
gs
jp
pop
pusha
fimuls
push
stc
dec
leave
mov
aam
jb
in
mov
gs
mov
imul
adc
out
push
lods
or
das
das
arpl
inc
scas
sub
dec
sub
mov
popa
imul
cmpsl
lea
int
sbb
stos
gs
sub
loope
push
cwtl
sbb
push
cltd
mov
sbb
popf
ss
dec
dec
arpl
mov
pushl
iret
adc
and
inc
push
clc
into
cld
push
lds
nop
clc
sub
or
or
clc
stos
add
sbb
jecxz
mov
std
lods
outsb
dec
pop
repnz
pop
dec
outsb
jle
mov
cmp
inc
outsb
push
gs
pop
jnp
adc
add
or
ficomps
mov
sub
fistl
pop
pop
mov
xor
shlb
jae
aaa
or
adc
rol
cmp
test
sti
mov
ljmp
kmovb
mov
rcrb
pop
mov
jo
ds
out
jbe
outsb
cmp
pop
pop
sbb
inc
dec
fistl
sbb
mov
xor
xchg
jl
std
xchg
mov
pop
pop
clc
jmp
in
push
int3
adc
cmc
decl
cmp
popf
mov
cmpsb
lea
inc
xchg
inc
je
int3
movntq
mov
lret
mov
inc
sbb
popa
jle
ret
loopne
jae
loop
test
jle
pop
daa
insl
and
or
mov
jg
test
in
jmp
mov
insb
jno
push
dec
fcom
out
mov
mov
pop
in
mov
push
lods
push
lds
jp
enter
jns
xchg
lock
xchg
mov
repz
mov
negl
std
lcall
js
loop
clc
mov
and
mov
clc
jb
ja
std
stos
fcmovbe
adc
jge
std
test
icebp
cs
lods
jp
lods
mov
sti
push
nop
jns
jnp
insb
add
cmp
stc
fldl2t
pop
imul
dec
andb
adc
or
out
jmp
push
mov
int3
dec
xchg
or
jge
adc
add
xchg
mov
adc
aad
adc
push
jle
rorl
pop
jnp
and
fsts
cmpsl
leave
lret
hlt
mov
loopne
int
mov
sub
xchg
cmpsl
nop
push
test
dec
push
pushf
adc
test
adc
jl
xor
fcmovnbe
out
jl
pop
mov
cmpsb
notb
sbb
in
push
xchg
pop
xor
jo
cmp
dec
imulb
sbb
or
test
sti
into
cmp
addr16
pop
sub
cmp
stos
xchg
pop
or
or
xor
adc
sub
xor
or
pop
pop
adc
sbb
mov
mov
adc
sub
and
out
iret
stos
imul
mov
dec
cmc
test
add
inc
cmpsb
xor
pushf
aam
insl
mov
xchg
mov
or
sbb
jnp
and
add
movsl
mov
sbb
lret
int3
das
mov
cmp
ret
cmpl
jae
ljmp
xorl
pusha
sub
data16
fldenv
push
pop
std
adc
mov
cli
jne
test
jae
mov
jp
mov
dec
cli
or
xor
imul
dec
push
jge
insl
add
xor
rcr
mov
push
jmp
and
out
mov
cmp
int3
in
xor
sbb
nop
push
in
test
sub
sbb
outsb
and
in
jge
adcb
clc
fimuls
rcrb
lret
sete
dec
push
xor
mov
fidivs
lahf
cltd
lock
xlat
xchg
xchg
adcb
push
sub
jns
mov
xorl
adc
clc
jo
in
sbb
test
pop
bnd
rclb
jecxz
int3
ja
test
loope
mov
subl
call
cmpsb
sbb
xchg
jp
scas
fstpt
enter
inc
movsl
cmp
pop
pushf
cli
jo
xor
xchg
outsl
and
xchg
or
push
mov
mov
scas
mov
and
fimull
dec
in
ljmp
or
fadds
mov
out
pop
pop
mov
fsubrs
clc
xlat
xchg
popl
mov
jb
out
pushf
test
mov
scas
jp
call
pop
ljmp
lret
xlat
outsl
xchg
hlt
idivb
cmpsl
shlb
aad
mov
pop
inc
adc
sub
fldenv
mov
test
xor
jne
cmc
enter
xchg
push
ss
loope,pt
lock
fcompl
loopne
in
lods
mov
and
jo
data16
out
enter
adc
mov
stos
std
mov
les
fldl
sub
out
sbb
stc
jecxz
mov
fxch
out
xchg
sub
call
sbb
pushf
ds
mov
daa
mov
insb
add
lds
adc
mov
cmpsl
sub
out
scas
inc
xlat
mov
test
and
fists
mov
sti
imul
and
mov
cld
mov
xchg
outsb
ljmp
adc
imul
pop
int
enter
out
nop
subb
fldcw
dec
inc
outsb
insl
and
xorb
retw
ds
rcrb
sbb
clc
sbb
dec
jnp
or
and
push
les
mov
leave
lds
insb
pop
test
aad
insl
fiaddl
test
rorb
pushf
cmp
in
imul
and
js
gs
fistpl
iret
cmpsl
lahf
jnp
test
inc
andl
negl
fsubs
sbb
jmp
shrb
scas
stos
call
js
xorl
xor
mov
push
lock
imul
jmp
inc
jle
push
xor
inc
mov
adc
inc
dec
out
mov
xor
aaa
stos
lock
add
jmp
outsb
sti
repz
sub
stc
aad
sbb
call
inc
xlat
mov
lods
add
mov
pop
negl
loopne
std
dec
divb
sub
outsb
int
mov
lahf
loopne
aad
push
lret
jne
mov
cmp
test
push
or
mov
lds
ja
or
dec
sahf
sarl
mov
add
mov
arpl
jecxz
cs
and
adc
fisubrl
fdivl
andb
add
xchg
in
add
dec
mov
ds
bndstx
cmp
add
inc
fdivl
or
shr
rolb
gs
rclb
in
jns
pop
mov
lods
cmp
xor
pop
insb
fidivrs
enter
cltd
fldt
sbb
dec
inc
jne
in
mov
mov
imul
and
dec
dec
in
in
mov
test
test
rcll
aad
lds
ret
add
xor
movsb
clc
in
icebp
stos
addb
aam
xchg
pop
pop
pop
mov
add
in
jb
xchg
mov
subb
xchg
pop
pusha
sbb
pop
xchg
stos
ljmp
add
mov
cltd
test
imul
adc
fistpl
sbbl
pop
cltd
jae
hlt
ljmp
idivb
cmp
jle
bound
or
pop
mov
inc
or
pminsw
and
pop
mov
jnp
faddl
add
cmpsb
mov
mov
sbb
divb
push
push
or
sub
sbb
stos
add
ljmp
and
ds
jns
cmpsl
cmp
jecxz
xchg
stos
push
inc
cmp
mov
insb
xchg
push
sbb
inc
sbb
rolb
nop
dec
enter
dec
scas
push
fldt
jecxz
inc
aaa
dec
nop
push
sbb
mov
mov
mov
nop
add
sti
mov
xchg
clc
clc
dec
sbb
inc
and
jecxz
insb
test
into
testb
push
cmp
lods
pop
pop
sub
repz
or
or
cmc
adc
mov
add
sbb
add
bound
les
add
nop
roll
jne
add
or
jnp
adcb
xor
jl
pop
xchg
int
lock
ss
test
lret
and
pop
test
int3
inc
test
cld
lods
or
faddl
lret
inc
mov
insl
pop
insl
lods
shll
inc
dec
popa
push
mov
stos
push
sti
loope
mov
imul
out
adc
xchg
push
or
cmp
xchg
fdiv
je
std
pop
or
fstps
cld
insb
inc
in
jmp
mov
sbb
lea
test
in
mov
cmp
xchg
fcmovnbe
push
push
dec
push
push
hlt
pop
or
mov
push
int3
sbb
int
in
inc
fmuls
sbbl
jg
sbb
inc
ret
imul
pop
in
cld
sub
inc
push
pop
in
inc
push
in
lret
and
sbb
mov
xor
in
mov
sbb
adc
ss
imul
das
sti
xor
jle
mov
push
lret
add
ret
push
cmp
inc
pop
leave
scas
mov
or
or
inc
mov
clc
inc
sub
sub
mov
cmp
push
jb
pushf
mov
subl
leave
sahf
nop
icebp
stos
push
jno
inc
add
je
mov
adc
cmp
mov
bound
sbbb
add
movsb
xchg
push
data16
jns
sbb
add
and
mov
scas
adc
loopne
push
test
jle
push
pop
sbb
out
stos
jle
lret
rcll
jnp
aaa
in
pop
mov
push
repz
jbe
vmread
mov
xor
inc
sarb
and
shll
addb
cmp
push
pop
push
ds
mov
mov
push
cs
test
fdivrl
lds
push
inc
jno
fs
mov
sbb
xor
leave
in
int
add
mov
push
lahf
in
loope
div
lret
or
pop
mov
push
pop
pusha
jae
rorl
xchg
sub
fisttps
adc
and
and
subb
sub
xorb
or
clc
pop
daa
sbb
cmc
fdivrs
mov
sub
iret
jo
jbe
fsubrs
loopne
icebp
dec
mov
enter
fistps
mov
mov
loopne
jp
inc
dec
mov
roll
out
loope
loope
xchg
jae
and
fsubs
or
stos
jns
mov
jo
pop
imul
mov
push
inc
je
fnstenv
shlb
xor
dec
jno
les
xor
push
aas
rcrl
sbb
inc
mov
adc
sub
mov
and
mov
mov
mov
enter
outsb
pusha
movsb
xor
or
not
leave
cltd
sub
scas
jmp
xchg
xor
mov
jo
jne
pop
iret
lea
adc
jbe
les
push
push
cltd
xchg
and
pop
orl
cmp
mov
jl
xchg
insl
xchg
scas
pop
mov
jmp
dec
mov
stos
jecxz
repnz
or
loope
sub
lcall
ficoml
in
fistps
lret
xchg
hlt
pop
sbb
adc
idivb
les
vmovss
cld
inc
std
stos
stos
adcl
adc
jle
lds
or
in
movsb
adc
ret
movsb
mov
mov
cld
pop
fistps
les
and
xchg
sub
lret
imul
push
out
test
jb
dec
fucom
das
mov
in
iret
push
fucomi
inc
insb
leave
rorb
fldt
orb
inc
and
mov
mov
loopne
inc
mov
mov
fcompl
popl
shll
bound
cmp
and
repz
sahf
pop
pop
std
mov
in
dec
add
xchg
bound
pop
add
leave
push
xchg
xor
sahf
iret
rcll
into
lods
sub
out
out
push
pop
js
ja
gs
xor
rol
jmp
dec
inc
cmc
dec
xlat
repnz
xor
lret
fcomps
pop
addr16
jle
ljmp
out
push
add
push
dec
mov
repnz
cld
mov
or
out
fstps
jbe
jb
aas
and
scas
inc
mov
mov
loop
stos
hlt
mov
addr16
bound
xor
or
cmp
xlat
push
xorl
dec
stc
or
outsb
xor
push
mov
and
imul
push
mov
cmp
push
push
or
pushf
fisubrs
push
or
and
mov
shll
mov
outsl
mov
mov
fists
pop
adcl
jb
cmp
mov
jns
popa
mov
fs
dec
sub
ret
ficompl
rclb
pop
dec
dec
scas
sub
lods
push
cmp
adc
test
bound
xchg
jae
stos
gs
dec
popf
fdivrs
faddl
sbb
daa
or
repz
fldcw
sarb
jp
fwait
leave
add
jecxz
pushf
mov
call
jp
pop
mov
imul
fwait
sub
int3
testl
in
sbb
test
out
pop
out
hlt
mov
sbb
xchg
or
arpl
loope
lret
pop
lds
jne
sub
stos
cltd
mov
aaa
pop
cmp
jo
mov
jnp
das
inc
and
jbe
mov
rcll
std
rcll
jae
sub
ljmp
sti
add
pop
mov
mov
sub
lds
jno
adc
stos
xchg
lcall
xor
sub
add
jge
xchg
push
jmp
stc
ds
dec
adc
test
dec
dec
add
pinsrw
cmp
sbb
mov
inc
adc
sub
pavgb
icebp
inc
inc
std
adc
repz
jnp
movsl
push
cmp
mov
mov
xor
push
push
xchg
bound
dec
cmpsb
mov
pushf
insl
sbb
mov
sbb
push
sub
int3
mov
arpl
daa
inc
cmp
xchg
enter
fnstsw
stos
cs
push
cs
sti
imul
pusha
jno
ret
popf
jbe
hlt
outsl
out
test
in
xchg
pop
inc
jle
and
ljmp
mov
shl
mov
loopne
xchg
dec
lock
sub
xor
add
sub
in
sahf
ficomps
cld
push
mov
mov
sahf
scas
ja
sub
ja
in
mov
jo
dec
out
aas
in
jecxz
inc
sub
lods
test
sbb
mov
and
lods
jecxz
xor
outsl
mul
and
lods
rorb
push
jne
lods
inc
dec
mov
adc
lods
leave
outsb
adc
mov
jno
lock
jno
or
lods
and
cmp
mov
jge
inc
mov
dec
js
addr16
test
scas
sub
xchg
fsubrl
jnp
push
push
or
stos
adc
nop
jecxz
cmpsl
mov
jne
xchg
mov
jmp
inc
test
shrl
sub
cmp
mov
clc
test
hlt
js
and
lret
in
inc
cmpsb
inc
cmp
push
add
pop
mov
rolb
daa
aad
jbe
jbe
shrb
add
jge
les
ds
aas
inc
mov
aas
mov
xor
test
je
bound
iret
sbb
or
fadds
dec
loop
dec
xor
xor
scas
or
xchg
test
xor
arpl
imul
pusha
hlt
adc
push
adc
aas
out
mov
nop
adc
aaa
shl
jbe
jno
test
in
adc
mov
rorl
gs
xor
subb
dec
imul
ret
push
pop
loop
je
adc
adc
int
cmp
js
mov
rclb
sub
ficoms
mov
adcl
inc
pusha
jl
jb
mov
inc
or
test
cmpsb
cmp
imul
push
std
stos
fsubrl
bound
nop
into
hlt
pop
cmp
test
pop
daa
pop
lret
std
mov
std
daa
xor
cmp
stos
shrl
data16
dec
xchg
js
adc
or
in
or
into
gs
xor
out
sbb
leave
mov
lret
mov
inc
sub
icebp
ja
push
inc
inc
aad
xor
hlt
call
shll
fnstcw
pop
mov
cmpsb
inc
iret
in
add
fwait
in
testl
sbb
test
sub
mov
enter
pusha
jp
lcall
into
pop
ljmp
add
mov
loop
and
rol
stos
ret
mov
int3
mov
jno
xchg
pushf
mull
fstp
outsb
lock
xchg
andb
dec
adc
mov
ror
xor
outsb
xchg
push
mov
mov
jae
movsb
and
pushf
pusha
addl
fiadds
cmc
dec
push
sub
stc
es
jbe
xchg
jmp
lcall
adc
add
iret
dec
adc
adc
insl
mov
sub
ret
sbb
cld
xor
in
sti
jmp
fwait
icebp
aaa
pop
int
mov
outsb
insb
xor
xchg
cmp
cmc
out
fiaddl
adc
pop
jge
adc
xor
into
push
sahf
adc
mov
pop
popf
stos
ret
xor
jmp
loop
mov
inc
mov
imul
fwait
lods
cmp
das
lods
push
xor
lea
xchg
lret
cwtl
sbb
adc
inc
cmp
orl
nop
or
out
outsl
mov
jns
or
cmp
dec
jb
push
insl
or
test
mov
mov
lods
dec
sbb
fimull
cmp
inc
xor
repnz
adc
int3
cmpsb
mov
enter
mov
push
ret
jbe
mov
test
jne
clc
jbe
sbb
rorl
fistps
scas
and
imul
push
subl
icebp
test
mov
enter
mov
in
or
loope
movsl
stc
jo
jge
jle
mov
push
mov
popf
inc
out
mov
cmp
pop
xor
or
loopne
mov
fisttps
lahf
xchg
mov
jp
lock
mov
shrl
dec
mov
add
loop
xchg
jmp
popa
out
in
xchg
fnstcw
jne
adc
and
mov
mov
jmp
ljmp
pop
and
js
or
jnp
sub
into
xlat
pop
fadds
xchg
pop
mov
sub
mov
pop
lss
mov
pop
jb
mov
bound
into
dec
mov
aad
pop
jne
adc
cmp
shll
pop
cltd
cmpsl
mov
sahf
jecxz
jle
or
xor
sub
in
std
fsubl
xor
icebp
lahf
push
std
sti
add
sbb
cmp
xchg
mov
dec
dec
shlb
push
adc
or
fucomp
call
sbb
mov
gs
mov
mov
gs
push
dec
fldenv
lahf
cmpsl
xchg
sbb
sbb
jbe
loop
stos
xor
sub
xor
enter
out
and
xchg
dec
or
jge
adc
sub
sahf
pop
test
icebp
add
sub
aas
inc
or
cmp
pop
jp
dec
inc
xor
inc
inc
into
and
mov
mov
cmpsb
dec
int3
adc
fisubs
stos
insb
outsb
push
ja
fstl
leave
in
pop
repz
pop
inc
scas
lock
jae
pop
add
sbb
aas
je
xlat
and
cmc
cmp
or
xchg
jecxz
fsubrl
inc
mov
jle
mov
push
in
jmp
ja
dec
fdivr
adc
and
sbb
add
mov
iret
js
lock
cmp
adc
imul
lea
and
addr16
ficoms
mov
js
mov
in
mov
repnz
inc
nop
and
popf
dec
push
repz
add
pushf
shll
pop
out
push
mov
ret
loopne
mov
fcompl
daa
cmp
hlt
loopne
jb
je
test
pop
or
adc
cli
sbb
lret
das
cmp
mov
or
dec
iret
gs
stos
popa
daa
adcb
inc
test
lret
cs
push
fidivs
lcall
lea
test
push
pop
sub
xchg
sub
xchg
mov
jae
pushf
stos
cli
push
add
into
mov
cwtl
mov
in
ret
xor
outsl
push
mov
loopne
mov
sbb
daa
cmp
or
das
push
and
mov
cli
dec
js
mov
adc
test
fildll
push
jmp
xchg
mov
aam
jns
push
push
aad
or
mov
cmp
daa
cmp
mov
pop
data16
mov
ss
pop
push
js
or
dec
cmp
jno,pn
jl
out
push
dec
in
andb
clc
mov
repnz
jnp
int3
aam
stc
imul
and
rcrl
lock
adc
mov
xor
xor
push
inc
dec
xchg
lret
push
stos
je
out
pop
dec
push
std
add
or
xchg
or
add
push
nop
scas
out
dec
and
jle
lahf
hlt
inc
pop
jp
je
xchg
adc
xchg
dec
pop
cld
fwait
inc
test
jae
cmp
aas
fdivrl
enter
xorl
and
outsl
push
arpl
cmp
test
inc
mov
inc
cmpb
mov
mov
add
mov
scas
jae
mov
insl
xor
out
movsl
fs
test
pop
loopne,pn
lcall
sbb
inc
testb
mov
out
fwait
int
adc
jb
repz
inc
adc
mov
jmp
lock
xor
ffreep
out
cmpsl
push
sub
inc
addr16
ljmp
arpl
cli
notb
es
sbb
sub
out
bound
sub
imul
out
push
xor
sbbb
or
or
lods
push
add
imul
test
in
mov
pop
pusha
lds
pop
movsl
sbbb
add
jb
and
test
cmp
data16
mov
inc
mov
or
sbb
paddd
pop
fisttps
sub
mov
inc
fidivs
mov
shrl
push
cmp
leave
loopne
lds
pop
dec
pop
mov
inc
sbb
mov
pop
add
pop
mov
mov
call
scas
xchg
cmpw
sbb
and
add
inc
mov
mov
outsl
adc
sbb
out
dec
and
mov
push
out
dec
stos
mov
mov
popf
jo
popf
in
sub
sbb
ja
fadds
cmp
xor
push
pop
cld
enter
and
mov
push
inc
jecxz
rclb
push
imul
loope
add
jg
cld
inc
outsb
cmp
lcall
mov
or
stos
jle
out
std
pusha
fldt
sub
jb
addb
ret
dec
push
push
or
push
and
sub
push
jno
or
xchg
pop
gs
popa
jne
out
aaa
add
lods
adc
fidivrl
or
xchg
xor
push
adc
andb
rcrb
bnd
inc
aas
or
pushl
shl
fmull
and
mov
jno
stc
in
cmpsl
stos
xchg
push
fdivl
or
add
dec
aad
mov
jle
cmp
cs
mov
adc
push
lods
mov
enter
out
movsb
cwtl
in
push
outsb
or
insb
mov
xor
clc
rclb
sbb
sbb
xor
das
inc
add
jmp
dec
clc
mov
add
xchg
stos
std
cld
ljmp
ficompl
lret
jbe
lea
cmpsb
cmp
xchg
dec
aas
addr16
inc
mov
stos
cltd
popf
push
out
mov
ljmp
hlt
int3
mov
out
xor
das
fwait
shl
les
pushf
dec
xchg
ja
cmpsl
push
mov
imul
leave
movsl
ja
jns
pop
out
dec
daa
rol
jg
pop
fs
push
push
cmc
sti
lods
jle
xor
or
push
popf
ds
pop
lock
clc
out
mov
mov
inc
cmpsb
aad
jp
leave
xchg
dec
push
movsl
lock
hlt
lret
or
or
jb
dec
test
fnstenv
sahf
sub
adc
pushf
outsl
les
sbb
and
inc
mov
stos
addb
mov
cli
cli
shr
sbb
jle
cltd
mov
mov
out
out
inc
sbb
sub
in
or
xor
mov
fimuls
xchg
sub
pusha
jb
xor
imul
data16
inc
cli
imul
call
or
mov
frstor
sbb
cs
sahf
sub
gs
cld
cmp
mov
rclb
dec
fmulp
testl
in
test
mov
imul
lods
nop
jg
std
out
mov
inc
fwait
cmp
test
xchg
xchg
ja
aas
lret
mov
addb
jae
push
pop
shlb
aaa
ja
mov
das
mov
cltd
idiv
add
jne
cmpsl
and
js
ja
int
mov
dec
inc
in
push
dec
pop
movsl
pop
cmp
push
lret
cs
ficompl
sub
jo
sbb
pop
xor
xlat
fwait
je
mov
test
int
orl
enter
jae
xchg
mov
pushf
ret
lds
push
nop
mov
adc
dec
test
xchg
mov
or
mov
imul
xor
adc
repnz
adc
add
lret
call
xor
sbb
mov
ret
or
test
popf
pop
cltd
and
fmul
adc
mov
inc
fucom
lea
in
jle
lods
loopne
fists
lods
xor
loop
jbe
or
jno
sbb
pushf
pushf
push
inc
cmpb
lahf
inc
pop
push
inc
adcb
push
repz
arpl
cli
iret
mov
add
pop
mov
pop
cwtl
xor
sub
dec
test
push
pop
fsubrs
enter
aas
bound
or
fwait
xchg
cmp
int
add
dec
jmp
push
add
cli
add
std
or
mov
aam
mov
sub
mov
jle
insb
or
jecxz
rcrl
mov
pop
and
inc
sbb
cmp
insb
dec
popf
mov
repnz
adcb
insb
cmp
mov
mov
or
insl
scas
loopne
xlat
adcb
lcall
push
inc
int3
or
inc
xchg
repz
das
cmp
fucomip
mov
imul
rcll
and
inc
out
xchg
cmp
inc
add
and
mov
inc
push
out
push
aad
loopne
xchg
cmp
andl
inc
mov
mov
aas
out
adc
inc
adc
xchg
fnsave
dec
or
pushf
xchg
jo
dec
mov
lock
aad
jns
enter
and
pop
adc
xchg
imulb
or
mov
stc
inc
aad
outsl
sarb
lret
dec
jl
mov
or
repnz
call
push
jmp
movsl
push
adcl
aad
push
or
dec
or
cmc
mov
movsb
pushf
jbe
push
mov
fadd
lds
je
push
inc
xchg
sub
out
sub
jbe
lret
fcmovbe
ljmp
mov
inc
leave
sub
mov
push
sbbl
jne
push
les
int3
push
xchg
mov
sub
ljmp
cmpsl
sbb
in
decb
xor
dec
adc
mov
inc
xchg
mov
jle
cld
push
dec
or
addb
cmp
sarb
mov
mul
push
movl
mov
jnp
dec
in
and
fildll
call
roll
and
sbb
dec
push
rcrl
cmp
aas
push
pop
sbb
mov
popf
cs
enter
out
or
int
mov
inc
xlat
push
or
mov
inc
bound
fsubp
inc
cs
insl
pushf
outsb
outsl
push
dec
xchg
mov
pop
and
cmc
movsb
out
xor
das
jg
pop
pop
test
lea
andl
in
stos
adc
icebp
fwait
ds
or
pop
stos
ljmpw
lret
inc
sbb
pop
add
ret
and
mov
mov
mov
movsl
mov
shrl
stos
push
hlt
andl
sbb
push
test
ds
das
sbb
jmp
sub
xchg
idivl
mov
mov
clc
mov
xchg
jns
jge
test
xchg
out
js
push
sbbl
sbb
and
cmp
les
push
fmull
rorl
inc
js
jg
fdivrl
xor
inc
mov
mov
ss
xchg
add
push
pop
and
std
and
or
cs
xlat
ljmp
jl
iret
mov
mov
movb
mov
jp
xchg
mov
movsl
into
jb
sub
je
push
fmulp
test
pop
and
icebp
dec
or
cmp
inc
lock
jg
inc
les
push
shl
sarl
pop
int3
ffreep
ss
lea
mov
mov
mov
lods
xor
imul
imul
push
xor
dec
das
fdivs
jo
loope
mov
sbb
adc
mov
mov
and
lahf
or
imul
push
mov
mov
dec
inc
cmp
test
daa
fdivs
fidivrl
popa
cmp
jmp
cmp
sbb
lret
mov
mov
int3
fmul
enter
sub
aam
call
std
mov
mov
cmc
shlb
jl,pn
lea
aas
rorb
lahf
dec
adc
pushf
arpl
loope
out
in
sub
jnp
daa
cs
mov
sar
shrl
mov
jl
leave
inc
aad
loopne
ret
call
sub
sub
fcompl
aaa
in
in
nop/reserved
ss
xchg
sbb
rolb
pop
adc
mov
insl
sarl
xchg
mov
xor
pushl
rcll
cmpsl
ljmp
mov
sub
rep
push
rol
insl
inc
cmpsl
jno
fimuls
stc
mov
inc
lods
sub
in
jb
add
dec
mov
sub
daa
test
or
movsl
gs
test
and
aas
jl
jmp
mov
movsb
pusha
mov
jmp
or
cmp
lcall
xchg
scas
lcall
shll
sbb
push
cmp
cli
shrl
jns
mov
jns
enter
ret
stc
cwtl
iret
mov
pop
mov
inc
filds
rcl
push
mov
and
loope
mov
arpl
push
dec
sub
xchg
fs
scas
jnp
aas
jne
popl
daa
jbe
xchg
mov
cs
in
mov
cmpsb
movsb
lds
xchg
jns
pop
push
mov
cld
push
xchg
xlat
xchg
mov
dec
xchg
add
add
xor
pop
scas
ds
cmp
jmp
push
pop
mov
push
fdivs
das
pop
push
test
jg
bound
or
add
inc
jae
inc
and
inc
sti
or
xchg
ja
push
mov
dec
arpl
inc
add
call
xlat
mov
xchg
jnp
fistpll
add
setne
mov
jnp
sti
loop
arpl
ss
mov
loope
xchg
push
scas
lods
ror
gs
xor
ret
mov
dec
mov
sub
cltd
push
iret
stos
addl
in
scas
xchg
mov
sub
push
lahf
cmp
sub
push
xchg
xchg
and
push
icebp
lods
add
or
or
cmp
add
mov
pop
cmpsb
int
jle
fdivrl
add
leave
scas
shll
rorb
int
rolb
aaa
js
dec
aaa
lret
sub
sub
xlat
repz
fcmovnb
push
xchg
mov
jle
inc
test
pop
or
dec
and
test
sbb
das
and
sbb
xlat
adc
dec
bound
stc
mov
sbb
mov
repnz
test
dec
test
movsb
pop
push
aad
cmp
pop
loope
sti
push
pop
push
push
outsl
ffreep
cmc
inc
jg
xchg
loopne
push
ja
mov
fdivs
data16
add
and
xchg
mov
mov
dec
mov
test
dec
loope
jle
mov
adc
mov
pop
ret
adc
cmp
dec
inc
rcll
pop
ficompl
lods
aad
add
lock
scas
add
sti
loopne
push
xor
rcl
jmp
cmp
call
scas
inc
mov
or
mov
pop
aam
xchg
movsb
push
out
pop
cld
mov
inc
sub
loope
mov
mov
mov
jae
fsubr
lcall
dec
pop
test
push
js
mov
scas
mov
shr
pop
pop
or
jp
rep
cmp
aad
sbb
adc
nop
in
dec
fsubr
pop
jo
sar
inc
xor
mov
repz
cmc
push
xchg
mov
inc
cmp
pop
jmp
or
xor
add
sbb
push
and
cltd
cmp
test
movb
mov
mov
in
je
sti
adc
add
sub
rcrl
test
loop
popaw
fstpl
into
test
mov
mov
arpl
push
or
mov
xchg
dec
ds
aaa
xor
pop
enter
pushf
xor
inc
test
insb
cmp
sub
jmp
xor
loopne
pop
dec
push
arpl
daa
mov
lds
int3
mov
cmp
adc
aam
push
xchg
xchg
popf
fs
outsb
sub
mov
push
push
mov
inc
jle
sarb
subb
xchg
loope
cs
mov
mov
adc
dec
mov
and
repnz
xor
mov
sahf
jg
sub
stos
mov
call
pop
fwait
mov
gs
mov
cmc
inc
push
or
cmp
nop
test
lods
bnd
pusha
xchg
pop
stos
adc
and
lret
lods
cs
dec
or
out
xchg
xchg
enter
andl
push
xchg
xchg
xor
rol
and
mov
jge
push
and
mov
test
push
ja
inc
mov
fcmovne
lds
movsl
lock
mov
jg
ss
sbb
inc
add
add
jg
push
push
insb
repnz
dec
imul
lods
adc
filds
shll
sbb
fdivrl
mov
cmp
lds
loopne
inc
xchg
mov
sub
xchg
sub
repz
icebp
dec
cmp
mov
int3
xchg
jno
out
mov
mov
push
adc
mov
cwtl
inc
push
and
mov
push
push
xor
add
enter
js
mov
daa
ret
cmp
cs
stc
dec
xchg
jb
or
mov
mov
jecxz
xlat
lcall
lret
lret
dec
mov
rolb
test
mov
fcoms
std
inc
cmpsl
sub
cld
cld
notl
xchg
icebp
sub
fcoms
sbb
or
jae
inc
xlat
fadds
int
shlb
fxch
sbb
je
aas
sbb
mov
lcall
lahf
testb
mov
dec
ss
fistpll
sbb
jb
xchg
cmp
jo
xchg
mov
popf
mov
insb
movsl
aas
inc
pusha
and
lea
dec
add
jns
cmp
cmc
imull
scas
cmc
leavew
xorb
sub
push
and
cmpl
xchg
or
sbbb
mov
scas
jp
imul
or
xchg
xor
sbb
imul
repz
addl
pushf
push
aas
xlat
lret
leave
popa
aad
out
jno
lea
fmul
pop
jge
ja
lret
add
and
and
pushl
adc
arpl
out
cmpsl
mov
jnp
cmp
hlt
inc
fidivrs
pop
fs
mov
push
adc
pushf
imul
cmp
rorb
clc
or
sahf
push
cmpb
xchg
push
sar
or
pop
fisttpl
jmp
aaa
lock
pushf
sti
jb
cmpsb
andl
mov
lds
adc
push
mov
dec
pop
and
pop
mov
sar
cmp
xor
bnd
leave
ss
or
cmpsl
add
cmp
enter
inc
in
jle
int3
lahf
mov
ret
and
cltd
out
aaa
fst
je
imul
loopne
inc
fwait
inc
sarl
notl
and
jo
adc
xchg
leave
leave
push
xor
pop
pop
in
push
ss
xchg
adc
in
sahf
ret
inc
addr16
xor
decb
jl
jns
lahf
sahf
pop
repz
data16
enter
jae
inc
pop
lahf
mov
push
push
hlt
pop
repz
xor
push
inc
dec
sbb
test
cmp
subl
aam
cs
cmp
std
xchg
jle
ds
add
jg
mov
push
dec
aaa
sbb
dec
daa
jl
jmp
insb
loopne
imul
pop
div
test
push
dec
inc
cmpb
hlt
mov
loop
cmpsb
push
mov
push
adc
imul
push
mov
pop
jmp
xor
dec
xor
hlt
dec
xor
mov
pop
adc
push
or
mov
jnp
jp
enter
mov
test
or
jp
xor
and
fildll
sahf
addr16
adc
or
cmpl
negb
adc
rclb
pushf
push
push
mov
loopne
mov
idivl
sub
mov
lods
ss
pop
in
lea
test
lea
and
std
jb
addr16
subl
or
add
call
and
dec
cmp
test
cwtl
and
xchg
add
loop
pop
stos
xor
sbb
mov
adc
je
jbe
cmpsb
pop
and
mov
mov
test
push
loop
xchg
cwtl
ret
mov
add
add
cmpsl
insb
or
adc
xor
add
int
mov
out
adc
loope
push
sbb
push
lea
mov
es
dec
push
fs
fdivrl
fcompl
dec
in
lods
mov
adc
repnz
std
or
popf
pushf
push
stos
xchg
dec
out
cmpb
idiv
aad
das
xchg
adc
repnz
je
push
imul
or
fwait
les
add
lock
dec
cmp
dec
popf
daa
test
sbb
sub
mov
out
cmp
and
sbb
lods
jno
add
test
mov
loopne
test
nop
mov
or
sbb
js
and
ja
and
or
jnp
or
push
scas
adc
and
aad
cmp
jb
add
cmp
ret
add
lret
sub
pop
add
pop
xchg
sub
pop
inc
push
loopne
jle
pop
js
cmp
fdivrp
bound
in
cmpl
jns
mov
sbb
ljmp
mov
sub
pushf
lea
fidivrl
cli
and
or
mov
out
fists
js
popa
ficomps
adc
sbb
mov
ss
and
addr16
out
sub
les
push
push
inc
daa
out
les
add
cmp
test
sbb
out
mov
aam
mov
cmpsl
filds
or
out
mov
in
mov
test
dec
movsb
fwait
push
lret
sub
enter
cltd
pop
xchg
inc
dec
push
cmp
push
xor
mov
add
push
xor
mov
push
or
aam
repz
xor
ss
inc
addr16
sbb
lahf
aas
xchg
xorb
lock
dec
dec
fsubrp
xchg
fcompl
sahf
sbb
and
lock
rorl
sti
dec
cwtl
push
scas
sahf
int3
jno
mov
movsl
dec
or
cmp
cmp
loope
and
jnp
cmp
sbb
dec
ljmp
notl
push
sub
sbb
in
imul
inc
ljmp
pop
inc
stc
mov
adcl
jecxz
mov
dec
mov
push
pop
aam
pop
push
in
sarl
popa
popa
movsb
push
cmp
inc
push
mov
sub
dec
sub
sub
mov
cs
cmp
mov
mov
mov
mov
and
xchg
and
idiv
sub
mov
mov
aas
insl
les
xchg
push
fwait
push
in
inc
int3
ret
and
jge
jns
jbe
int
mov
mov
xor
loopne
jle
leave
add
and
push
add
dec
pop
jae
repnz
sahf
movsb
int
daa
lret
mov
dec
adc
repz
dec
ffree
push
lods
mov
jp
xlat
add
out
xchg
leave
cwtl
mov
jbe
add
clc
xchg
out
outsl
cltd
shlb
sbb
aam
pop
enter
xchg
movsl
cmpb
stos
popf
inc
stos
mov
or
sub
inc
gs
mov
xlat
xchg
xor
fdivs
jg
push
data16
test
dec
add
dec
call
xlat
hlt
adc
xchg
adc
sbb
loopne
cmpb
and
inc
fwait
mov
fsubrp
push
test
lea
addr16
imul
imul
jl
push
arpl
rorb
outsl
aam
das
or
add
xchg
lods
adc
fadds
and
adcl
xchg
jle
insl
fwait
dec
pop
jg
dec
pop
out
jmp
xor
daa
outsb
jne
add
push
xor
jae
mov
push
sub
dec
insb
sahf
jle
xor
jbe
in
jge
jle
cwtl
stos
mov
or
jp
ret
ds
les
adc
dec
push
pop
dec
and
xchg
lret
mov
in
ret
fmulp
mov
and
mov
mov
push
imul
xchg
pusha
dec
pop
hlt
or
mov
xchg
mov
std
cmp
jle
adc
xchg
xchg
mov
sbb
sahf
mov
out
jecxz
push
sub
sub
jge
orl
mov
shlb
or
pop
stos
pop
mov
fidivrs
pop
adc
push
shlb
scas
stos
nop
jg
test
sti
test
and
and
lcall
add
les
pop
movsb
ljmp
sub
or
cs
dec
sbb
mov
lods
movsb
mov
jg
adc
inc
in
xlat
mov
loope
imul
push
std
xor
or
dec
cmp
xchg
or
xchg
psubd
and
pop
inc
mov
or
sub
xor
fs
data16
cmp
lock
std
cmp
lahf
xchg
jo
repnz
test
leave
mov
adcl
xor
jne
xchg
cmc
pop
mov
adc
ljmp
pop
jl
test
fistpll
lock
out
cld
mov
adc
xor
jmp
add
test
mov
rcrb
add
adc
or
dec
xchg
test
mul
clc
pop
or
insl
cli
or
je
lock
into
stc
outsl
add
jge
xor
fdivs
jg
out
dec
outsl
mov
jge
sbb
mov
pushf
mov
add
std
xchg
xlat
out
shrb
and
and
stos
push
test
xchg
push
sti
sti
gs
outsb
addl
cmp
jb
inc
fisttpll
add
jle
sti
dec
pop
push
fnsave
inc
popf
imul
in
pop
repz
stos
mov
ljmp
cmpsl
xor
xor
mov
out
out
mov
ficoml
push
lds
insb
lods
cmp
out
rcrb
shl
mov
mov
xor
mov
xor
dec
cmp
mov
idivb
adc
outsl
lret
ficoml
jbe
data16
ret
dec
lods
xor
push
xor
mov
pop
bound
cmpsl
shr
xor
mov
xchg
jmp
fidivrl
or
out
cwtl
les
xchg
xor
dec
push
xchg
in
sahf
cmpsl
mov
test
movsb
cmp
int
pop
es
stc
and
cmp
xor
jno,pt
pop
loop
mov
pop
in
dec
ja
int3
jb
rcrb
adc
xor
xor
jb
mov
lcall
repz
faddl
outsl
nop
aaa
imul
jmp
mov
inc
sbb
sbb
sbb
out
cmp
enter
loopne
xlat
repz
jae
add
add
mov
out
dec
movsb
dec
mov
aaa
mov
bound
or
fwait
out
jns
adc
adc
mov
mov
cli
jg
shrl
mov
hlt
jge
in
push
je
in
arpl
in
rclb
push
into
out
mov
and
push
or
cltd
out
cld
icebp
lods
inc
xor
inc
out
xlat
imul
int
dec
test
movsb
and
jecxz
sarb
inc
in
mov
stos
pushf
dec
orb
arpl
sbb
icebp
in
adc
xchg
push
adc
shl
hlt
xchg
in
leave
xor
pop
insb
lahf
fwait
inc
ret
shlb
out
int
jmp
aad
and
mov
les
lcall
rcrl
xor
mov
jp
dec
mov
xchg
add
loope
js
jae
icebp
mov
cmp
nop
mov
icebp
mov
cmpsl
pop
insb
xchg
fsubr
add
ds
xchg
dec
mov
and
mov
ss
pop
je
cwtl
lcall
sub
add
xchg
lods
and
fs
jns
sbb
add
inc
sbb
in
lret
test
pop
in
sbb
imul
stos
pop
fcomps
pop
and
mov
xchg
aaa
negb
cmpsb
push
pop
add
ds
sub
notl
mov
xchg
icebp
xor
inc
test
jo
jno
pop
mov
cwtl
rcll
into
xchg
js
cmp
pop
and
and
fcmovu
imul
mov
and
in
popf
mov
ja
push
shlb
lds
mov
inc
adc
cmp
sti
sbb
jne
mov
js
lahf
ret
pop
aas
push
mov
ret
out
lods
popa
hlt
data16
pop
xor
pop
sub
sub
xor
aam
push
out
hlt
jno
js
dec
push
mov
dec
sub
cmp
lcall
out
cld
lea
and
cmc
jbe
mov
mov
or
pop
lret
ror
mov
sbb
xchg
ds
stos
cmc
push
into
shlb
sbb
pop
in
movsl
jo
scas
das
mov
test
test
lea
adc
xchg
test
cmp
icebp
bswap
pop
insb
in
movsb
jp
pushf
xchg
ret
sub
mov
dec
ljmp
mov
cli
xchg
mov
test
fwait
add
shlb
mov
ficompl
das
mov
mov
mov
mov
fadds
or
fs
xor
inc
mov
int3
into
or
lods
jmp
sbb
fisubl
xchg
fcoml
xchg
mov
pop
arpl
jbe
in
cmp
leave
movsb
in
push
sub
imul
sahf
or
lock
ljmp
imull
add
popf
pop
roll
ficoms
push
jo
pop
add
aad
and
rorb
sbb
xchg
lds
xchg
dec
and
xchg
es
xchg
lods
dec
out
xchg
push
push
sub
ja
mov
and
sbb
inc
push
in
jnp
loope
in
je
xchg
push
xchg
pop
sbb
imul
into
loop
dec
in
jae
sbb
mov
enter
jne
mov
sub
and
ss
mov
sbb
mov
mov
jne
add
push
repnz
adc
rcrl
xor
jecxz
add
xor
dec
mov
mov
or
in
in
mov
lret
ss
xchg
xor
ret
jl
adc
shll
mov
pop
mov
jl
ret
aam
aad
pop
xchg
mov
imul
dec
out
je
lret
lds
scas
inc
je
ret
push
dec
ja
mov
daa
call
aas
cmp
testb
addb
stos
push
mov
mov
rolb
push
mov
decl
xchg
dec
lcall
push
movsb
loopne
cmp
bound
loope
cmp
imul
movsl
pop
and
int
push
mov
xchg
xchg
cmp
test
in
adc
imul
fcomip
and
es
test
out
das
mov
jp
jo
jge
xchg
jg
or
push
push
push
mov
jae
xor
sar
or
xchg
mov
jmp
pop
mov
fiaddl
mov
xchg
scas
xor
push
jns
lret
mov
push
and
xchg
pop
insl
adc
int3
popf
push
add
scas
out
ret
jge
stos
push
rdtsc
jo
push
ja
mov
cwtl
mov
jbe
push
mov
gs
xor
imul
mov
mov
sub
inc
in
xchg
clc
dec
push
pop
aaa
pop
ds
and
cld
fcomps
gs
jns
js
inc
mov
ficoml
outsl
jg
pop
and
mov
mov
push
push
xor
movsl
lods
xchg
jo
adc
ret
das
pop
movsb
push
repnz
fildll
aaa
sbb
sub
cs
test
push
hlt
cmp
mov
push
cli
sub
popa
lods
or
mov
push
or
pop
mov
loop
cltd
scas
and
mov
mulb
cmp
mov
adc
test
rcl
shlb
movsl
int3
fs
add
loopne
data16
mov
sbb
xlat
sub
imul
cmp
hlt
xor
xchg
sbb
add
or
int
ds
sti
fidivrl
loopne
ds
call
icebp
scas
mov
adc
mov
cmp
xchg
push
out
or
xor
jmp
and
jne
paddsw
sarb
xor
sub
repnz
inc
shll
xchg
shlb
scas
lcall
out
inc
fists
add
js
mov
inc
fs
orl
jmp
cmp
jp
adc
adc
icebp
jl
fcoms
jo
sub
lcall
jmp
cld
cld
push
push
pushf
mov
mov
mov
in
out
dec
jae
lock
add
push
scas
decl
jmp
sub
iret
lcall
cwtl
stos
outsb
inc
fbld
xor
hlt
jle
inc
xchg
mov
leave
pusha
stos
ficompl
out
cmp
inc
repnz
dec
mov
out
and
cmp
mov
pop
popa
aam
movsl
out
test
adc
mov
lcall
jo
inc
insl
pushf
cmp
xlat
aaa
negb
pushf
xchg
nop
divl
jb
jns
mov
mov
xor
cmp
mov
addl
inc
push
aaa
cmc
dec
pop
and
xchg
ret
push
popa
scas
repz
and
ret
jnp
dec
jmp
ficomps
adc
ficompl
pop
cld
dec
pop
push
sub
push
popf
loopne
add
pop
in
xor
sbb
add
imul
ficompl
mov
sbb
pop
bound
mov
sbb
add
cwtl
xor
mov
js
jp
cmpsl
and
mov
or
nop
mov
in
xor
inc
lds
jbe
clc
mov
mov
dec
cs
pop
push
repnz
cwtl
mov
dec
dec
lret
xor
push
insl
sbb
imul
sub
int3
cmp
xor
and
cwtl
nop
gs
fdivl
xchg
shlb
xchg
lret
inc
mov
xor
std
xor
push
adc
aam
pop
leave
push
inc
xor
sub
xor
push
jnp
jmp
fdivl
push
nop
push
popa
or
lcall
sub
ja
in
jmp
test
pop
out
out
test
jo
xchg
ds
repz
out
loopne
in
push
jbe
les
add
imul
aam
fcoms
cs
std
pop
fwait
sub
sub
inc
cmp
fsubl
fldenv
add
sub
jle
and
sbb
dec
aas
lock
or
nop
jg
std
or
loopnew
ret
jl
int
shrl
out
push
lahf
mov
sbb
push
pop
or
or
arpl
pop
imull
or
js
rcll
das
and
sahf
xor
sub
movsl
fnsave
xor
in
xchg
mov
and
push
pop
fs
hlt
mov
cmp
ds
je
loopne
jg
jl
inc
test
inc
and
pop
pop
pop
pop
mov
pop
xchg
adc
xorb
rcrb
xchg
jmp
add
test
ja
lods
shll
scas
mov
push
mov
in
dec
jg
imul
inc
in
cmp
ret
ss
sub
call
mov
jl
jmp
jbe
xlat
mov
mov
adc
push
push
dec
cmp
or
lahf
imul
xor
add
xor
mov
ficoms
xor
xor
cmp
mov
cmp
arpl
lcall
dec
ja
sbb
adc
lds
or
cmpl
mov
ja
cmpsl
loop
test
lods
pop
sti
icebp
lcall
pop
push
adc
cmp
mov
movsl
lret
lea
inc
popf
loopne
dec
cmp
lret
sbb
add
cmp
inc
sbb
iret
test
popl
push
push
daa
dec
sub
jne
imul
cli
test
sub
mov
inc
inc
mov
or
jl
ds
sbb
cli
in
inc
cmp
pushl
fists
mov
loop
ja
xor
rorl
add
repnz
stos
dec
lahf
inc
pop
scas
mov
fwait
sarb
decl
xchg
mov
push
sti
sahf
jp
in
iret
or
lahf
test
dec
mov
inc
pushf
out
sarb
xchg
jecxz
leave
xlat
outsl
out
push
add
lahf
mov
jns
add
fnstenv
jp
pop
jecxz
fs
jge
hlt
jnp
xchg
push
and
cmp
sahf
scas
sub
xor
outsl
subb
dec
iret
outsl
lods
insl
sbb
rorl
imul
and
cmp
lcall
push
addr16
add
outsl
dec
sahf
test
sbb
push
sbb
pop
cwtl
es
sub
cmp
cmpb
xchg
ret
fs
adc
stos
mov
or
sub
mov
inc
leave
inc
pop
cmp
out
inc
popf
mov
sub
js
lahf
mov
inc
sub
cld
mov
lea
pop
mov
je
test
imul
cs
nop
dec
sbb
mov
sbb
push
imul
ret
inc
cmpsl
adc
xor
sub
add
or
repnz
jp
stos
scas
mov
enter
pop
insl
and
addl
fldenv
inc
insl
inc
sbb
sbb
jecxz
and
pop
mov
js
mov
lock
xorl
mov
cli
sub
int
jne
jl
dec
dec
cmpsb
scas
pushf
xor
insl
das
fimuls
in
adc
adc
add
aad
jno
jne
les
test
mov
imul
inc
push
jle
sub
call
test
mov
sbb
and
or
pusha
push
imul
fldt
stos
enter
push
pop
sub
icebp
add
ret
inc
mov
cmp
mov
icebp
jb
cltd
pop
repnz
movsb
call
cld
sbb
lea
std
mov
xchg
leave
addr16
xchg
mov
imull
dec
add
xchg
cltd
adc
mov
mov
out
fwait
in
fdivl
subb
loopne
hlt
mov
loopne
or
dec
jns
add
cwtl
mov
cwtl
into
sbb
inc
lcall
dec
arpl
sbb
mov
mov
hlt
pop
sub
mov
je
pop
mov
movsb
stos
inc
sahf
das
mov
sub
out
sahf
mov
loop
jmp
dec
in
push
push
clc
jecxz
sub
repz
pop
sbb
mov
add
adc
into
cli
rclb
sbb
xchg
ja
lret
sub
mov
ds
ja
cmp
push
sahf
xor
mov
mov
push
adc
push
pop
ret
pop
mov
cwtl
imul
push
mov
call
or
aam
leave
in
test
fdivs
lret
arpl
aaa
or
sub
ds
adc
add
scas
jae
loopne
arpl
mov
popa
mov
pop
jb
pop
pop
test
insl
xchg
enter
or
mov
xchg
fcoml
cmp
xlat
mov
mov
jae
fwait
lret
xchg
in
insb
fisubrl
inc
sbb
add
mov
sar
test
enter
je
adc
mov
scas
mov
dec
jle
je
hlt
in
push
sub
or
and
inc
rolb
sub
inc
enter
clc
xor
ds
cmp
arpl
fisubrs
mov
inc
mov
and
mov
adc
test
addr16
ret
inc
add
out
loopne
xchg
xorl
xorl
mov
rcrb
stos
mov
repnz
dec
out
mov
push
mov
push
test
push
imul
insb
xor
stos
add
sub
das
adc
push
mov
push
ljmp
jmp
cmp
insb
gs
into
cmp
add
sub
push
daa
fldl
add
mov
mov
jmp
xchg
fcomp
cwtl
fbstp
pop
mov
add
cmp
fsubp
fimull
jno
cmpsl
je
pop
aas
push
inc
aaa
enter
sub
add
xchg
pop
dec
ret
fistl
xchg
clc
xchg
xlat
cli
xlat
adcb
and
pop
call
jmp
adc
dec
pop
jge
cmp
mov
roll
stos
pop
push
int3
mov
call
adc
mov
add
fsubrl
pushf
lret
aam
lea
arpl
jl
xchg
or
xchg
and
out
into
mov
and
dec
clc
push
pusha
or
rcll
repz
sbbb
test
sbb
movsl
push
out
pop
mov
aad
mov
mov
aaa
insb
xorl
int3
push
xchg
ljmp
push
test
mov
lcall
out
mov
mov
pop
outsb
push
test
stos
loopne
fcoml
mov
shlb
test
pop
inc
lds
and
cmp
jne
push
les
flds
dec
loope
dec
xorl
pop
rcr
js
popf
sarl
popf
shlb
push
add
jb
dec
and
inc
xor
push
add
push
cmp
repz
movsl
imul
pop
push
sbb
xchg
movsl
pushf
push
mov
sarl
addr16
ret
popa
and
sub
mov
cmp
mov
adc
mov
aaa
pop
enter
orb
mov
push
js
mov
cmp
or
sub
int3
adc
inc
das
jp
hlt
sub
fimuls
outsb
lods
lahf
dec
jp
jg
enter
cld
jbe
fld
push
cli
lods
mov
cld
pop
int3
vrsqrtps
sbb
mov
rorb
fadds
adc
mov
pushf
push
lahf
adc
push
sub
andb
mov
addr16
lcall
jge
ljmp
pop
test
push
mov
in
movsl
sti
cmc
adc
jge
or
nop
xchg
popa
ss
mov
aas
cmpsb
add
lock
int3
sub
fs
xchg
push
xchg
inc
inc
push
jecxz
mov
mov
fidivrs
jle
xor
imul
mov
and
pop
dec
add
sbb
sub
sub
cmpsb
mov
cmpsb
push
push
mov
push
jmp
xchg
adc
xor
sub
mov
xchg
aaa
mov
mov
in
test
and
mov
inc
xchg
and
inc
push
sub
xchg
fstp
ret
in
mov
fistl
dec
arpl
cmovae
in
sub
stos
gs
popa
pop
in
inc
fucom
add
and
push
jne
jmp
movl
jge
hlt
sbbl
out
sub
sbb
daa
loope
pop
pop
jne
cmpsb
dec
mov
sbb
mov
std
adc
sub
rcrl
fsubrl
mov
cs
sub
fucomp
mov
popl
or
iret
push
imul
jns
ror
lock
stos
lret
mov
xor
mov
es
xor
jae
divl
push
repz
mov
xchg
pop
jl
out
add
xchg
fstpl
inc
or
lret
in
xchg
clc
xor
pop
sahf
aaa
incb
aad
sub
xchg
cmp
pop
ds
imul
jb
pushf
dec
add
fsubrl
jmp
pop
sub
sub
rolb
jg
and
sub
and
jbe
call
sahf
cmp
jmp
push
adc
xchg
adc
adc
cmpxchg8b
leave
xchg
aam
iret
lds
mov
inc
out
sbb
fnsave
or
and
in
jle
sahf
aaa
mov
mov
adc
ret
sub
pop
lea
mov
popa
pushl
pusha
add
sbb
pop
dec
jp
and
jno
xor
mov
add
in
push
sbb
inc
jle
add
sub
leave
out
xchg
pusha
cmp
in
popf
arpl
xor
stc
pop
ficoml
dec
mov
and
stos
xchg
sub
xor
je
pop
neg
push
loop
fldt
push
and
insl
dec
sbb
pop
fnstenv
xor
ficoml
pop
mov
push
xor
inc
out
ljmp
xchg
in
add
cs
jp
pop
scas
data16
aas
mov
cmpsb
stos
fidivl
mov
mov
dec
push
jbe
xchg
in
test
or
loope
adc
sbb
and
fwait
xchg
dec
cltd
cld
jno
stc
add
test
adc
test
xchg
inc
and
dec
pop
fsub
dec
sub
je
outsl
xlat
jecxz
test
es
add
jb
sahf
repnz
fisttpll
mov
sbb
add
dec
or
and
les
movsb
ljmp
addr16
xor
push
lds
leave
sbb
cmp
push
stc
imulb
jmp
pusha
pop
mov
jge
xor
jbe
rep
and
xchg
mov
mov
jmp
test
and
add
test
ret
in
xor
add
int3
std
add
int
les
clc
scas
int3
shlb
push
gs
inc
pop
pop
dec
movsb
push
and
icebp
mov
jbe
or
movsb
lock
sarb
mov
push
lods
loopne
paddw
jns,pt
add
mov
xchg
cmp
push
les
notb
sbb
push
ret
ljmp
test
stc
repz
iret
cmp
push
or
mov
sbb
inc
adc
mov
mov
mov
loope
push
mov
popf
mov
gs
xchg
lods
inc
xchg
and
xor
pop
in
fistpl
scas
jb
pop
pop
adcb
outsl
sahf
xchg
ss
test
jb
pop
push
push
aaa
shlb
outsl
pop
add
movl
cmp
jne
out
lret
xchg
je
movsb
cmp
mov
mov
and
stos
mov
dec
test
mov
popa
daa
sub
in
loop
jne
repz
fdivrs
arpl
sub
cmp
push
rorl
inc
stc
fwait
mov
sub
test
xor
xor
push
push
ja
xchg
loop
sub
dec
mov
fildl
mov
cli
mov
or
loop
pop
dec
lock
jnp
push
mov
sub
push
adc
iret
sbb
adc
sbb
shlb
dec
in
shlb
pop
mov
cmp
cmpsb
jg
lea
mov
test
adc
xchg
in
imul
adcb
ret
jmp
fcoml
push
lret
jo
xchg
idivb
inc
mov
adc
mov
sbb
xchg
out
gs
int3
sbb
add
and
test
outsl
mov
rcll
cltd
push
cmpl
jle
es
mov
ja
mov
push
mov
lock
mov
and
or
mov
jnp
jnp
mov
cmp
mov
mov
in
js
pusha
mov
and
sbb
test
loop
adc
pusha
inc
sahf
divl
and
in
adc
xor
fdivr
bound
jl
pop
mov
out
jle
jecxz
sub
pop
pop
in
inc
mov
popf
mov
insl
fldlg2
and
mov
pop
fsubs
mov
push
int3
aad
sub
icebp
fldl
loop
sbb
add
jns
ljmp
mov
pusha
imul
insb
cmovle
loopne
mov
inc
xchg
inc
aad
jecxz,pn
mov
adc
les
mull
adc
sub
mov
shrl
sub
fisttps
test
pop
iret
jl
into
iret
push
adc
fidivl
mov
mov
push
rorl
sbb
jecxz
loope
xchg
js,pn
insb
scas
das
jbe
mov
cmpsb
fstpt
jnp
jle
mov
icebp
and
out
xor
push
out
inc
insb
ja
pop
add
enter
fists
mov
adcb
cwtl
and
stc
xchg
out
std
push
mov
fsts
stos
je
add
jl
dec
dec
xchg
outsb
movsb
lcall
inc
cli
jg
stc
in
std
xchg
jmp
fwait
inc
xchg
inc
repnz
inc
jbe
add
jbe
mov
stc
decb
outsl
sarb
insl
mov
shl
mov
push
xchg
pop
pusha
adc
xchg
fs
inc
fwait
jne
ja
pop
stc
stos
or
lahf
inc
ret
mov
cmc
xchg
addl
inc
inc
testb
lods
repz
aas
add
mov
nop
sub
sub
add
jmp
cli
mov
jle
jo
jo
add
jg
adcb
addb
lea
and
in
mov
mov
mov
add
push
lahf
loope
xor
xchg
push
movsl
in
inc
mov
mov
mov
mov
fs
cs
sbb
scas
and
pop
movb
fwait
loop
lcall
int
cmpsl
hlt
sbb
cld
jle
inc
or
mov
mov
aas
xor
stos
movsl
les
enter
das
scas
mov
fildl
test
mov
sub
mov
pop
jp
sbb
int3
cld
insb
adc
add
xor
lret
push
outsl
out
je
js
movlps
hlt
dec
stos
mov
inc
ds
sub
mov
mov
mov
fdivl
popa
insb
sub
into
xchg
adc
stos
aad
aaa
push
cld
mov
lret
mov
cmpsl
adc
jle
dec
jl
xor
jae
ja
xchg
xor
sbb
fisubrl
push
pop
push
mov
rcrl
jne
pop
xchg
or
pop
das
int
lea
and
lret
xor
sub
test
mov
mov
mov
std
or
xchg
sbb
rcrl
or
mov
mov
cld
xor
lret
shrl
jb
mov
pop
pop
cmc
dec
push
mov
pop
mov
push
in
mov
mov
movl
icebp
aas
sbb
bound
jecxz
sub
fcmove
mov
out
mov
outsl
or
sub
stos
dec
icebp
sbb
add
inc
sub
addr16
cwtl
sbb
push
lock
sbb
std
rclb
insl
mov
and
jg
pusha
icebp
lret
xor
add
push
mov
lock
enter
roll
into
add
lea
and
cmp
rol
add
cwtl
mov
mov
dec
mov
mov
dec
in
add
xchg
jmp
out
mov
clc
pop
icebp
pop
mov
aad
pop
and
sub
mov
aad
pmaxub
ja
xchg
ss
popa
cmp
mov
push
sub
pop
rcll
xchg
mov
cmc
lea
push
loop
push
outsl
push
cmp
push
aad
es
mov
je
push
pushf
mov
mov
test
xchg
out
test
in
in
fldcw
sbb
inc
sarb
push
lock
push
cmp
cld
inc
push
outsl
cld
mov
je
push
push
and
dec
sbb
enter
mov
or
mov
xchg
cli
movsb
xchg
icebp
ret
flds
or
mov
in
dec
inc
cmp
push
sbb
mov
stos
stos
sbb
adc
ror
push
daa
hlt
dec
or
testb
sbb
inc
ret
enter
dec
sahf
sahf
dec
fistl
out
leave
ret
cwtl
sbb
mov
loop
inc
movsb
stos
sbb
ljmp
sbb
test
rorb
dec
scas
outsb
sub
arpl
xchg
rcrl
mov
stos
pop
adc
fldenv
xchg
popf
stc
inc
repnz
in
pop
sub
icebp
xchg
add
pop
movsb
xor
stos
loopne
mov
xor
xor
push
loope
jge
sub
insb
or
cli
inc
dec
test
lret
test
popa
mov
pop
sbbb
testl
lahf
push
dec
xchg
or
push
popf
sub
scas
dec
push
inc
and
bound
loopne
in
mov
sbb
fisttps
mov
adc
cld
mov
add
xor
xchg
jb
shll
aaa
addl
pop
cmp
popa
stc
cmc
les
leave
sub
int
jg
push
cwtl
mov
push
push
shll
mov
jb
mov
add
add
stc
cli
inc
cmp
daa
jb
in
add
enter
icebp
adc
cmpl
mov
pop
cmp
dec
mov
xor
push
xor
jge
pushf
dec
mov
sbb
cmpsb
fisttps
stc
xor
sbb
mov
test
jns
push
addr16
push
and
lock
or
mov
pop
mov
test
out
out
sbb
ss
pop
mov
mov
sti
jne
sub
popa
out
in
sub
and
lret
xchg
int3
mov
mov
or
es
daa
jno
cmp
sbb
shll
xchg
mov
test
test
hlt
xor
dec
pop
add
sbb
jmp
xor
hlt
dec
repz
add
xor
mov
sarb
movsb
into
subl
insl
jbe
fisubrl
ret
out
mov
and
push
cmp
sub
gs
push
outsl
sub
insb
bound
stos
adc
mov
cmp
fwait
ret
sbb
sbb
jnp
clc
dec
les
adc
cld
dec
pop
jp
inc
mov
push
jae
inc
push
fildll
jbe
insl
idivb
xchg
cltd
pop
lock
jecxz
inc
mov
jl
das
test
inc
xor
jo
div
sbb
pop
popf
test
push
icebp
dec
xchg
pop
mov
lret
xchg
fidivs
add
add
ljmp
fs
fidivrl
pop
call
rcr
jge
lahf
mov
in
clc
lret
adc
lds
inc
test
jo
dec
hlt
or
add
mov
aam
aam
insl
jae
lret
mov
mov
inc
lret
addr16
xor
cmc
aas
ret
outsl
jmp
or
cwtl
scas
jecxz
sub
xlat
add
scas
pop
std
leave
push
pop
lea
inc
push
cmp
inc
sbb
aad
xchg
std
jg
popf
movsl
add
xor
mov
leave
es
lcall
adc
xor
jmp
xchg
cltd
ret
bound
ds
xchg
jo
rclb
les
out
mov
push
cltd
mov
mov
int
add
enter
in
sarb
push
cwtl
mov
cmp
sbb
iret
dec
sub
xchg
mov
int3
mov
sbbl
sbb
pop
sbb
push
int3
in
adc
jmp
ds
jnp
stc
sbb
cmp
into
adc
cmp
cmp
pop
imull
adc
cli
je
loopne
pop
push
cmpb
test
xchg
out
mov
xchg
sbb
pop
hlt
or
mov
fidivl
out
pop
notl
inc
mov
ficompl
add
mov
arpl
mov
jg
das
pop
jle
push
and
push
cmpsb
add
push
push
mov
mov
cmpsl
test
movb
mov
or
clc
loopne
inc
cmp
loope
pop
adc
iret
popf
sbb
clc
inc
inc
jmp
xor
cs
pop
inc
dec
push
xor
popf
leave
push
cmc
push
and
popa
push
outsl
lock
repnz
sbb
outsl
out
jns
push
xchg
repnz
inc
pop
mov
inc
sahf
sub
adc
out
jb
clc
or
mov
mov
aad
fs
cmc
sbb
dec
cs
push
sbb
into
dec
test
push
out
or
stc
lods
push
scas
popf
scas
dec
ljmp
test
push
insb
dec
xchg
das
jne
mov
test
xchg
jo
jae
repnz
mov
testl
imul
sarb
out
cs
bound
inc
mov
mov
fucomip
out
dec
rorl
sbb
bound
aad
mov
in
fidivs
rcll
mov
je
pop
mov
scas
jge
in
adc
loope
xchg
je
inc
fxtract
push
stc
sub
lds
bound
adc
and
pushf
pop
inc
int
leave
jl
jns
insl
dec
es
jge
push
sub
cli
push
sbb
movsl
pop
in
shl
andl
dec
rclb
xchg
xlat
inc
pop
mov
mov
xor
and
adc
sub
mov
int3
out
pusha
push
pop
in
mov
pop
jns
inc
add
mov
cli
pop
getsec
aam
repnz
repz
or
imul
inc
lahf
xor
add
mov
lock
inc
je
mov
mov
fnstsw
testl
adcl
jge
loopne
mov
mov
fstps
pop
push
add
stos
js
and
test
sbb
andb
cmp
inc
mov
xor
rcrb
adc
inc
adc
mov
iret
push
mov
mov
fsts
rorl
or
or
loop
popa
pop
popa
xchg
mov
cs
cmp
add
aam
ret
ret
es
nop
cmp
adc
inc
add
lock
mov
daa
sub
sbb
divb
adc
pop
lret
loop
lods
or
mov
mov
sbb
int3
ds
mov
fwait
sub
icebp
mov
xor
mov
sbb
inc
or
aam
std
mov
sahf
icebp
inc
cld
mov
dec
adc
xor
and
sub
in
ror
outsl
inc
mov
sub
insl
mov
iret
inc
div
cmp
setg
jnp
sbb
ret
iret
jecxz
rorb
xchg
sub
inc
fwait
test
loopne
push
xchg
cmpsb
dec
push
xchg
jae
dec
jg
mov
push
test
aam
in
jle
mov
int
lret
scas
call
sbb
test
mov
jae
add
in
cmp
lock
int
mov
sbb
push
sbb
push
pop
dec
out
rcll
xchg
and
data16
jbe
cmp
cmp
pop
and
daa
dec
and
sbb
pop
mov
sbb
cltd
jb
pop
cld
jp
mov
std
mov
movsb
pop
sarb
fisttpll
into
test
dec
scas
jne
ss
adc
mov
int
popa
sbb
jne
and
or
xor
lcall
pop
out
clc
arpl
mull
pushf
fnstenv
inc
mov
out
add
rorb
in
enter
iret
cltd
shlb
dec
lret
and
mov
jbe
jmp
adc
dec
sbb
jp
cmp
jne
push
mov
ss
cwtl
sub
mov
shr
pop
inc
movsl
mov
and
enter
jl
sub
enter
sub
sbb
pop
cli
imul
les
das
mov
sbb
jb
mov
push
pop
or
add
in
sti
dec
repz
cwtl
call
loope
loopne
jbe
jle
jae
mov
pop
aas
ss
jnp
mov
cli
xor
push
es
or
cmp
aaa
xor
sub
enter
xchg
cmc
ret
insl
inc
xchg
out
sbb
lahf
and
cmp
ds
int
jmp
loopne
sbb
into
test
test
repz
adc
xchg
jb
pop
inc
clc
rcr
pusha
cmp
shlb
dec
dec
cmpsl
push
dec
or
inc
testl
shlb
pop
jo
test
in
inc
gs
hlt
rclb
mov
inc
push
mov
push
xor
cmc
or
adc
push
sbb
push
sbb
push
pop
lods
out
mov
mov
sbb
cli
sarl
in
mov
scas
push
stc
std
imul
sub
popa
out
xor
loopne
sbb
push
stc
sti
fldcw
loop
pop
xchg
bound
cs
test
and
push
adc
pop
cmp
imul
ret
dec
fldcw
jno
inc
mov
push
cmp
cmpsb
mov
scas
sbb
and
jbe
test
or
je
insb
push
data16
and
xchg
lret
js
mov
push
push
clc
adc
adc
cwtl
js
loop
iret
mov
sbb
adc
sub
imul
jecxz
fistl
ja
fisttps
leave
xlat
fst
mov
arpl
stos
movsl
fstpl
push
mov
mov
pop
cmp
cld
cmp
xchg
xchg
andb
les
add
stos
mov
mov
mov
sub
add
push
xorl
jl
je
bound
pop
cltd
jnp
cs
insb
xchg
mov
dec
popf
mov
jl
loopne
cltd
dec
sarb
pop
and
add
mov
out
inc
pusha
sbbl
stc
push
sub
outsb
cmp
mov
fdivp
sub
adc
sub
mov
insl
xor
pop
les
js
add
dec
cwtl
add
shlb
aaa
jge
sbb
xor
push
add
pop
jb
sti
ljmp
mov
sbb
xchg
insl
cmp
fmuls
fcmovnbe
mov
leave
push
sbb
icebp
push
pop
and
clc
hlt
xchg
xor
push
fisttps
lea
loop
lods
mov
je
lods
jg
jl
jg
push
mov
cmp
cmpsl
jb
ss
adcl
hlt
or
and
xor
pop
ret
in
enter
pop
ret
andb
pop
mov
adc
adc
test
xchg
inc
ljmp
imul
xchg
int
mov
jp
mov
or
mov
and
and
or
lret
push
outsl
inc
rcll
dec
sub
in
adc
jge
leave
mov
sub
adc
push
aam
sbb
mov
xbegin
fs
cs
mov
movsb
lret
add
sbb
mov
xchg
cli
ljmp
aaa
ret
mov
mov
sti
push
pop
fisttpll
loope
cmp
dec
in
add
cli
push
ljmp
jle
insb
jmp
mov
add
push
and
push
adc
dec
push
mov
sub
add
insl
xchg
adc
faddl
out
xor
mov
loopne
add
push
add
cmp
push
faddl
dec
pop
cmp
insb
imul
adc
test
sub
pop
mov
sti
outsl
inc
lds
mov
repz
pop
push
sbb
shrb
sbb
push
cltd
jo
adc
mov
jecxz
mov
lret
mov
enter
jo
mov
int3
dec
sub
in
je
adc
inc
movsb
add
rclb
cmp
lods
mov
sbbb
test
into
ret
ret
add
inc
jns
xchg
cmp
test
adc
mov
leave
or
adc
fs
test
iret
out
cli
inc
or
or
ja
jnp
les
add
dec
cmp
push
mov
or
cmp
or
jl
dec
hlt
hlt
push
mov
inc
sub
repz
pop
in
cmp
or
mov
dec
push
sbb
outsl
nop
xorb
cmpsl
jo
mov
ds
sbb
jg
jns
ja
into
lods
push
adc
mov
mov
movsb
int3
daa
fimuls
pop
jnp
in
shrb
imul
fstpt
insl
push
stc
hlt
ja
mov
js
sahf
cmpsb
cmp
in
push
andb
push
jo
hlt
roll
cmp
daa
enter
jae
xor
int3
data16
scas
adc
jecxz
in
rcrb
aas
lcall
push
mov
mov
fs
lret
mov
adc
aas
int
or
stos
dec
add
mov
xor
xor
imul
pop
sbbl
out
iret
dec
push
pop
mov
mov
fdivs
jne
and
jecxz
adc
xor
daa
lods
fidivrl
cli
xchg
xchg
sbb
cmp
sbb
or
stos
sti
mov
mov
cltd
popa
cmp
ss
jmp
mov
jmp
and
cmp
mov
fistl
out
or
push
cmpsl
imul
fcoml
in
iret
pop
ds
xor
adc
mov
mov
fcomp
sarb
ret
jno
cmp
stos
jb
scas
xor
pop
jle
out
inc
addl
inc
es
jl
mov
lret
jae
lods
jb
sub
fadd
movsb
inc
mov
mov
int
addr16
ja
or
test
mov
xchg
in
mov
jbe
mov
push
pop
sbb
cmp
jns
mov
push
imul
cld
into
lcall
sub
lods
test
xchg
fs
add
xchg
and
mov
out
xchg
mov
ret
out
push
out
xchg
push
sbb
push
es
test
cli
push
mov
inc
jmp
sbb
ja
cld
in
shll
cltd
add
fisubs
sub
push
loopne
pop
gs
movsb
xor
adc
or
daa
jge
mov
pushf
cwtl
jcxz
sub
or
lds
pop
dec
and
ljmp
pop
mov
adc
sbb
iret
mov
cmpsb
mov
dec
outsb
stos
mov
cwtl
or
mov
push
inc
cltd
leave
stc
mov
incb
adc
loopne
test
lea
testl
push
dec
outsb
arpl
ja
ret
mov
and
ret
iret
xor
xchg
jmp
ror
xchg
xchg
insl
mov
shr
sbb
xchg
cmp
dec
jne
jmp
cmp
cli
sub
or
pop
cmc
cld
test
cmc
dec
jb
sbb
dec
dec
mov
jne
aad
fs
das
jae
mov
out
dec
lods
pop
out
dec
mov
das
or
lahf
jo
mov
jle
repz
push
int3
packuswb
mov
or
xchg
cli
into
dec
inc
cmpsb
jnp
iret
xor
mov
mov
data16
push
or
aam
jae
xor
fs
dec
roll
sub
pop
pop
cmp
add
mov
xorl
dec
jmp
ret
mov
mov
das
or
and
insl
add
outsb
jae
jg
sbb
xor
push
pop
in
lock
push
fs
popa
int
aad
lret
push
rcrl
or
inc
pop
xchg
lea
inc
push
les
jo
pusha
inc
shrb
push
aaa
and
fs
jae
jns
fisttpl
arpl
leave
arpl
pop
outsb
mov
icebp
pop
insl
int
and
out
je
or
xchg
shrb
push
xor
mov
jns
cmc
pop
or
popl
adc
push
lret
jo
mov
jmp
jo
inc
je
pop
pop
pop
aas
sahf
jp
ja
addr16
sub
das
sub
xor
insl
ficoms
lret
shlb
jg
out
das
jle
cs
fistpll
sbb
std
cli
repz
adc
inc
cli
jnp
or
mov
mov
hlt
xor
sarb
gs
jno
jmp
scas
xor
mov
mov
pop
push
jge
xchg
push
push
mov
outsb
clc
cmpsl
je
mul
fmuls
ss
mov
imul
mov
jae
jae
jnp
in
insl
cmp
aad
add
xchg
aam
addl
and
test
cmp
cmp
cmpsb
lret
dec
xchg
push
mov
adc
ret
sahf
pop
or
adc
mov
add
out
mov
cmp
and
outsb
btc
sub
nop
push
sti
xchg
pop
cs
push
mov
or
cmp
xchg
std
out
cmc
mov
icebp
sbb
pop
xlat
xor
mov
ja
cmp
shll
jae
mov
bound
mov
rcll
xor
mov
popl
pop
aam
jl
scas
ret
stos
lods
int
call
sbb
arpl
xor
dec
xchg
pop
int
icebp
sbb
push
sbb
jns
scas
int
or
lsl
xchg
cltd
push
arpl
adc
call
lret
out
repz
mov
jbe
les
jo
add
mov
push
pop
xor
bt
fprem1
out
dec
xchg
mov
lock
daa
adc
sub
sbbb
insl
fdivrs
scas
jno
shlb
pop
sbb
lret
ret
mov
mov
jg
lods
hlt
adc
mov
xchg
or
push
push
cltd
in
daa
clc
clc
lahf
mov
test
loopne
ja
fsubl
mov
dec
fadds
add
and
out
mov
and
inc
sub
je
into
stos
scas
pop
xor
mov
dec
pop
mov
sbb
push
add
movsb
test
dec
add
cmp
les
out
cmp
push
mov
in
scas
mov
mov
dec
and
sahf
frndint
out
xacquire
fnsave
jmp
jbe
icebp
arpl
mov
bound
or
mov
adc
cmp
dec
out
xor
bound
imul
pop
ljmp
sbb
cmpsb
icebp
push
push
add
mov
push
cltd
popf
ja
cld
lret
stos
sbb
insb
mov
insl
xchg
rol
push
mov
repz
mov
fimull
fiaddl
aam
lret
loopne
cmpsl
mov
pop
hlt
sub
jo
pop
inc
call
fisttpll
lock
decb
aas
scas
adcl
nop
fwait
or
xchg
push
push
js
loope
repnz
pop
inc
mov
out
fwait
dec
xor
jno
jns
dec
add
xchg
pop
dec
jl
mov
pop
adc
imul
int3
mov
adc
dec
lds
inc
clc
frstor
sbb
mov
jmp
and
add
push
addl
push
jbe
pop
popa
jns
sti
adc
lods
gs
sbb
mov
mov
imul
outsb
loopne
cli
and
or
daa
fadds
mov
xor
pop
xor
adc
push
mov
loope
outsl
xchg
inc
mov
xchg
ret
sub
jl
inc
call
arpl
sub
jnp
adc
push
iret
pop
fadd
stos
sub
hlt
push
xor
mov
lea
ljmp
cmpsb
loop
xor
rcll
xchg
adc
xor
push
push
xchg
or
stos
nop
jmp
shrl
arpl
push
adc
imul
jmp
push
adc
xchg
cmp
inc
xor
dec
mov
lret
jmp
or
mov
into
mov
sbb
and
xchg
hlt
xchg
lea
or
mov
xchg
add
je
pop
ret
mov
add
scas
jne
popa
mov
pop
fs
cmpsb
dec
xor
sbb
inc
xchg
add
jl
gs
mov
scas
adc
cwtl
int3
pop
mov
pop
je
mov
push
dec
cmp
imul
lea
push
mov
sbb
inc
jne
rcll
aam
sarl
orl
cld
and
aas
addl
ss
lret
jge
cmp
mov
jb
fdiv
add
popf
adc
or
xchg
imul
lret
or
add
incb
and
clc
or
scas
mov
mov
add
adc
std
stos
xlat
dec
fbstp
movsl
push
ja
xlat
lock
dec
stos
fsubl
jecxz
xor
outsl
jmp
subb
mov
mov
push
out
push
jb
sahf
cmp
sbb
cmpb
and
loopne,pt
push
js
pop
scas
xchg
pop
xor
ficoms
xchg
push
sbb
fisubs
mov
adc
rcll
imul
pop
das
xor
inc
mov
fmuls
sub
jmp
int
pushf
je
add
aam
xchg
imul
and
jo
jo
lock
out
cmp
sub
xchg
pushf
enter
jl
in
int3
inc
mov
outsb
jmp
sub
jo
cmp
dec
cld
xor
adc
loope
jb
pop
std
push
sti
add
xchg
mov
lock
pushl
fcompl
adc
cmc
push
xor
scas
cmpsl
in
jmp
pop
nop
pop
push
xor
sbb
pop
movsl
push
push
imul
jg
fistps
imulb
in
in
pop
lahf
ljmp
xchg
dec
test
leave
loopne
div
jno
fimull
adc
xchg
cmp
gs
and
mov
cmpsb
dec
aas
int3
mov
scas
movsb
jo
push
lds
or
pop
mov
mov
les
pop
arpl
dec
inc
loope
xchg
dec
pop
push
mov
test
xor
push
sbb
cmc
lret
cmp
in
inc
shlb
jbe
xlat
movsb
popf
mulb
in
dec
outsb
lahf
test
pushf
arpl
rcll
iret
dec
xchg
cmpsl
cmp
call
and
and
sbb
pushf
xor
push
mov
movsb
in
test
sub
jns
rcrb
rcr
scas
pop
cld
dec
data16
stos
xchg
stos
mov
cmp
test
insb
repz
int
fstps
push
or
cmpsb
sbb
sub
movsb
fs
lahf
push
push
sub
lret
jecxz
mov
mov
jecxz
push
inc
shlb
mov
mov
xchg
insb
mov
jmp
or
es
pop
mov
out
mov
xchg
adc
jb
dec
nop
aam
jae
rcrl
out
xchg
add
movsb
out
outsl
cmp
in
loopne
add
cltd
pop
push
xor
testl
popf
shr
mov
and
mov
scas
push
mov
int3
es
icebp
mov
aam
jo
inc
subb
imul
jl
adc
mov
mov
shll
jb
inc
hlt
mov
in
inc
repnz
aaa
mov
nop
inc
xor
pop
popa
inc
adc
jno
jns
push
in
pop
int3
fwait
lahf
inc
ja
in
roll
dec
cmp
sbb
into
out
xchg
lock
and
push
dec
xchg
mov
xchg
scas
fwait
jl,pt
insb
out
or
rolb
cmp
adcb
sbb
and
cmp
pop
mov
xchg
js
pop
sub
push
or
xor
insb
roll
or
aas
jne
jbe
movsb
mov
sti
dec
pop
jns
in
jl
lea
je
mov
frstor
jae
and
nop
push
push
data16
inc
test
cmp
xor
jl
pop
push
dec
cltd
mov
repnz
iret
cmp
dec
test
dec
and
mov
push
lahf
daa
mov
fistpl
pop
and
pushf
out
pop
pop
mov
ds
mov
lahf
cmp
dec
leave
lds
jae
lret
or
gs
ret
xlat
cld
add
jo
mov
imul
in
sub
or
push
vpacksswb
bound
and
out
cmp
pop
xor
mov
clc
mov
dec
test
ret
or
push
mov
pop
stc
add
rolb
sub
loop
inc
movsl
js
fwait
sbb
push
mov
add
inc
sub
jmp
cmc
pop
fs
mov
jae
add
pop
adc
jp
cld
and
fsts
lea
loope
int
xchg
scas
cmpsl
or
add
xchg
sub
mov
pop
xchg
leave
jecxz
rorb
stos
shll
add
xchg
jg
pop
jmp
nop
fs
adc
das
cmp
add
xchg
shl
and
cmp
cmpsl
js
mov
stos
jle
push
cltd
icebp
inc
lret
mov
cmpsb
xchg
mov
push
in
fstps
pushf
test
iret
out
xchg
jp
cmp
jge
test
ret
jp
cmpsb
stos
fidivs
inc
out
in
push
fsubr
je
or
xchg
push
jl
adc
rcrb
test
mov
pop
jno
cmp
add
mov
sub
leave
dec
fwait
sbb
inc
push
dec
dec
pop
add
xchg
test
insl
mov
sub
dec
lods
call
add
add
push
dec
push
mov
mov
fidivl
loopne
cmp
mov
fiaddl
push
test
xchg
mov
subb
mov
outsb
mov
dec
pop
push
cs
fst
add
push
mov
fimuls
xor
fld
mov
mov
rclb
popf
push
das
jg
mov
inc
dec
fistps
mov
cli
adc
xchg
add
or
test
movsl
enter
movsl
and
loop
sbb
iret
popf
push
cs
loopne
stos
jno
mov
pop
xchg
stos
mov
lcall
and
repz
lods
ds
jns
xchg
sbb
cmp
dec
mov
jmp
sar
sub
xlat
push
mov
mov
and
insl
int3
in
cs
aam
jle
imul
xacquire
ds
dec
stos
add
dec
loop
sub
xor
out
xchg
adc
popa
push
es
outsb
ljmp
popa
push
sub
icebp
add
xchg
std
pop
mov
dec
pop
adc
fwait
inc
clc
cs
cmpsl
or
mov
sub
sub
shl
pop
push
lock
pop
cmp
push
or
test
js
pop
mov
scas
cmp
inc
add
mov
inc
rcrb
in
or
into
or
lcall
incl
cmp
mov
sub
sbb
add
test
addr16
add
rep
mov
inc
mov
sti
xchg
nop
cmc
push
jns
test
loope
dec
jne
shrb
xor
bound
repnz
add
jae
or
inc
jnp
call
cmpb
cmpsl
lock
xchg
cmp
mov
mov
pop
loope
out
pop
cmp
in
push
cmp
fidivrs
jb
and
xlat
mov
lcall
cld
fs
lock
mov
mov
push
js
xor
sub
sti
sbb
fwait
inc
push
jmp
test
cmp
aam
ret
gs
mov
data16
lahf
cmc
cwtl
mov
jne
jecxz
cmp
cmp
or
fstp
stc
js
cmp
mov
sarl
sarb
cmc
adc
jmp
nop
vxorpd
lcall
mov
pop
imul
jae
mov
push
push
out
inc
sub
xchg
dec
aad
lea
cmc
xchg
mov
and
mov
xor
mov
in
mov
pop
dec
cmp
fiadds
cltd
in
cltd
adc
sarl
add
fldt
jne
div
stos
push
lret
jmp
jnp
ror
imul
and
loope
popa
jae
and
call
test
sahf
repnz
in
test
adc
push
push
lock
movsb
xchg
pop
push
nop
jno
cmp
jl
mov
add
data16
pop
mov
push
sub
enter
inc
push
bound
cmp
cwtl
inc
or
jns
nop
push
movsl
push
adc
inc
fildl
and
fwait
dec
jge
movsl
movsl
cmp
cltd
mov
pop
inc
or
jno
xchg
int
xchg
or
xchg
and
push
pop
sbb
pusha
pop
pop
jo
into
mov
aam
xor
fwait
lret
xor
mov
fst
add
int3
out
iret
jle
cs
outsl
shrb
push
push
int
inc
push
mov
lods
and
sbb
push
or
fmul
fimuls
push
add
mov
add
es
adc
addr16
sub
lds
mov
mov
test
xchg
inc
cwtl
aad
notb
mov
jb
shll
adc
mov
enter
outsb
push
fstps
leave
insl
push
pop
and
movsb
das
adc
imul
pop
or
jae
ljmp
push
or
test
adc
jnp
mov
xor
gs
pop
mov
scas
lcall
ja
cmp
add
flds
out
cltd
jb
loop,pn
imul
rep
test
mov
adc
push
lea
xchg
mov
lea
and
cmp
dec
sbb
push
mov
ljmp
or
lret
lea
adc
je
xchg
cwtl
mov
jo
imul
cmp
std
sub
je
es
iret
adc
push
sbb
fcomps
mov
stos
call
rolb
shll
hlt
sbb
daa
add
mov
mov
and
mov
adc
fwait
pop
mov
fwait
icebp
xchg
lret
fbld
popa
ja
mov
out
addr16
add
jecxz
rolb
xorb
adc
fidivrl
lcall
mov
stos
pop
lea
sub
and
sbb
aaa
les
into
cmp
mov
ret
cli
nop
xchg
sti
cmovae
fstpt
and
cmp
ficoms
daa
mov
cli
iret
fildl
jo
adc
test
mov
fdivl
dec
ljmp
cmp
outsb
dec
scas
jmp
jge
testb
pop
push
hlt
pop
xchg
pop
mov
ret
push
mov
sub
add
pop
stc
fstl
lret
or
fisttpll
or
es
int
inc
popf
shlb
push
sub
ret
lock
aad
push
sub
fs
hlt
add
and
inc
in
sub
mov
cmp
sbb
cmp
push
fldl
cli
pop
ljmp
out
arpl
adc
push
sbb
mull
sub
jge
mov
mov
inc
out
push
call
mov
sbb
sarb
aaa
fadd
jo
adc
fildl
pop
cwtl
sub
pop
cmpsb
jge
jnp
jae
out
and
lods
add
mov
nop
cmp
lahf
sbb
xchg
fistpl
sbb
adcl
xchg
sbb
cmpsb
sbb
sub
sub
imul
addr16
jle
lret
inc
testb
xchg
jl
loope
mov
iret
jae
add
shll
add
dec
sti
out
aaa
mov
sbb
xchg
scas
ljmp
out
addr16
lods
fdivs
xchg
xchg
rorl
sti
dec
shrl
jmp
out
jmp
fdivrl
pop
adcb
push
ds
push
xlat
nop
dec
fucom
scas
es
xadd
add
sbb
mov
push
and
test
xor
inc
jg
lahf
push
jmp
adc
jp,pt
xchg
xchg
fldt
je
pop
fcompl
movsl
lcall
adc
mov
or
adc
aas
mov
cmc
push
ds
xor
push
loopne
xor
inc
pop
mov
test
aad
push
stc
xlat
cwtl
pop
jne
jb
clc
push
sahf
and
xchg
xor
lret
sub
in
call
es
mov
addr16
cmp
jno
and
jle
mov
dec
pop
int
mov
insl
push
jnp
icebp
jecxz
or
jb
push
jge
push
ret
sarl
mov
dec
mov
cmp
dec
ja
add
jmp
orb
dec
pop
lcall
fimuls
or
stos
daa
add
pop
ljmp
aam
arpl
dec
push
xor
adc
div
lds
inc
lret
negb
ret
in
aam
mov
data16
jae
mov
mov
insl
inc
dec
or
enter
cld
mov
cmp
pusha
and
push
cmp
pop
mov
jne
jmp
sub
cmpb
jnp
notb
cs
push
call
add
out
jg
cmp
mov
sbb
mov
cli
icebp
pop
push
ds
aas
addl
mov
mov
icebp
push
mov
mov
pop
push
loop
fistpl
testl
stos
data16
or
and
xor
shl
in
fdivrl
bound
push
orb
mov
scas
test
xchg
call
ffreep
sub
push
movsb
repz
out
jecxz
cmp
mov
aas
cli
repz
fwait
popa
pop
movsb
add
shl
ficoml
movsb
rcrb
cmp
lock
fldl
ret
aaa
dec
push
nop
andb
jno
xchg
mov
add
mov
iret
jl
push
movsb
dec
outsb
mov
push
inc
mov
push
adc
loop
add
cmp
jnp
les
je
scas
push
sbbl
sub
push
cwtl
ror
mov
xor
ret
sub
stc
push
lds
aad
addl
cmp
cmp
pop
inc
les
push
fnstsw
push
mov
sub
in
sahf
test
xor
inc
adc
push
pushf
ds
mov
shrb
xchg
jae
dec
cmc
es
rolb
inc
gs
inc
mov
std
xor
inc
jb
enter
and
std
mov
mov
pop
test
movnti
fwait
jbe
pop
into
out
adc
aas
fisttpl
sbb
pop
xor
mov
push
jnp
dec
adc
mov
aaa
xchg
cld
pop
cmpsl
mov
std
repnz
jo
aam
aad
stos
pop
add
sbb
cmp
sarb
pop
cmp
in
aaa
xor
shl
xchg
int3
xor
adc
dec
sub
xor
dec
and
repnz
mov
pop
cmpsl
jne
je
jno
inc
xchg
push
clc
adc
out
pop
leave
call
lcall
testb
subl
pop
push
lahf
pushf
fistl
lods
add
mov
mov
sub
sbb
add
pop
scas
lahf
xchg
frstor
imul
subb
pop
jge
pop
xor
cmp
scas
sub
ss
lret
mov
fdivrl
sub
push
inc
js,pt
int3
jnp
xchg
mov
add
sub
mov
add
roll
subb
push
std
mov
add
clc
test
push
mov
mov
rorb
add
and
sub
jne
mov
pop
mov
inc
sbb
xlat
inc
shrb
scas
xor
and
cmpb
ja
fsub
nop
inc
pop
sub
enter
sbb
inc
mov
sbb
and
mov
push
jp
fldt
lret
sub
or
divb
dec
jo
cld
or
add
pop
pop
out
inc
and
scas
out
mov
jns
mov
mov
test
ljmp
jns
mov
decb
call
push
jecxz
pop
outsl
rcll
inc
jge
in
fucomip
pop
es
sbb
dec
pop
in
mov
mov
je
add
xchg
aaa
ret
jb
ja
add
inc
lret
sub
sarb
mov
notb
adc
dec
pop
pop
jge
mov
into
jae
jbe
icebp
sub
jbe
adc
dec
mov
cltd
std
cmpb
jo
sub
inc
std
sub
mov
hlt
mov
push
push
lea
popa
xor
aad
dec
shr
mov
dec
gs
ret
inc
adc
notb
or
cli
rcl
bound
dec
push
jge
out
vfmsub213sd
sub
enter
mov
mov
push
ds
cmp
out
sub
jbe
mov
sbb
xor
fdiv
jmp
cld
xchg
cli
bound
in
fs
jmp
or
loope
pop
pop
testl
int3
cmp
int
movsl
mov
lcall
mov
sahf
sbbb
push
sub
shll
xor
add
bound
mov
mov
or
xor
insb
jne
test
mov
fisubrl
xchg
movl
outsb
cmc
xor
rol
loop
or
sub
popa
sub
test
xchg
sahf
mov
imull
movsl
mov
pop
jecxz
cld
jb
sub
std
daa
subl
push
test
add
sbb
adc
jno
mov
aam
in
stos
outsb
loope
mov
enter
dec
push
push
clc
popa
or
sub
cltd
sbb
inc
xlat
cmp
ja
push
es
push
pop
test
movsb
sub
inc
loope
iret
je
or
in
and
mov
cld
mov
imul
add
jl
sbb
dec
pusha
int
sarl
xor
out
dec
lret
mov
stos
movsb
mov
jmp
fmull
ret
pushf
insb
and
jge
mov
mov
xchg
mov
adc
out
and
scas
dec
push
lret
ja
inc
fstpl
pop
lods
mov
cs
cmp
sbb
out
sub
aas
shll
mov
inc
sti
fistpl
inc
ss
inc
lods
enter
imull
xchg
sub
jg
cmp
xchg
xchg
jnp
loop
iret
imull
pop
dec
cs
push
repnz
jb
pop
sti
xor
pop
scas
rclb
lret
ret
add
or
int
movsb
ret
sub
mov
out
enter
aaa
mov
jg
or
lea
xor
push
setnp
pop
sub
and
int
aam
xchg
daa
ficompl
xlat
adc
xchg
fidivl
xchg
out
sub
xchg
xor
adc
scas
loope
das
movsb
cs
dec
cs
cltd
fsubrl
pop
ljmp
xor
pushf
adc
xor
mov
fists
test
outsb
testb
jae
jp
aas
fdivl
aaa
scas
orb
cwtl
push
xchg
js
out
add
lds
popa
or
adc
pop
cmc
jl
lret
loope
cmpsl
mov
cltd
cmp
sbb
shll
ss
add
pop
shlb
mov
repz
xchg
push
shl
adc
ja
xor
mov
add
popa
mov
dec
cmpsl
cmp
xor
mov
in
dec
or
jno
mov
lcall
mov
jae
jge
fcoms
outsb
mov
and
or
loop
fsubl
out
pop
pop
add
xchg
cld
adc
loope
xor
sahf
scas
pop
ret
cmp
imul
lahf
adc
mov
cld
pop
adc
cmpsb
fcompl
sub
sarb
cltd
mov
idivl
dec
mov
hlt
add
fwait
std
popa
les
ljmp
ljmp
xchg
lcall
in
mov
mov
add
and
cmp
dec
push
nop
push
dec
mov
cmp
insb
push
imul
mov
push
push
mov
lds
les
jecxz
dec
adc
in
inc
cmc
mov
loope
mov
jne
push
ret
pop
sub
dec
push
cld
mov
jne
adc
dec
ret
shrl
iret
push
sbb
xchg
lret
pop
in
mov
jg
push
fwait
pop
jl
inc
mov
push
xor
sti
andl
xchg
aas
gs
movsb
outsl
in
xor
and
add
sarl
rclb
jmp
dec
xorb
mov
outsb
push
adc
dec
add
icebp
lods
std
pop
clc
cmpb
fimuls
xchg
and
or
push
pop
jg
mov
and
lahf
ss
cld
les
cmp
je
data16
xchg
pop
pop
xor
sbb
js
push
imul
outsb
stc
mov
jge
bound
cmp
sub
lret
movsb
adc
sub
imull
mov
ljmp
cwtl
sti
or
addr16
dec
fwait
xchg
ret
ficoml
push
shlb
int3
call
jne
shll
enter
addb
jno
jmp
pop
pop
rcrb
dec
sbbb
fimuls
jno
mov
cmpsb
cs
int3
and
mov
mov
aam
xorb
jecxz
or
pop
jge
jne
mov
daa
sbb
adc
rorb
loopne
in
adc
jmp
ss
push
and
mov
jne
or
cmp
push
sub
ljmp
pop
pop
flds
mov
add
or
inc
cwtl
test
movsb
insb
sbb
pop
hlt
adc
rcrb
dec
gs
dec
mov
dec
xchg
adc
push
pushf
push
faddl
mov
push
push
bound
popa
fmull
mov
jne
push
aaa
lea
mov
outsl
inc
mov
jg
cmp
xchg
enter
les
inc
pushf
xlat
gs
pop
into
scas
inc
int3
clc
push
mov
mov
adc
popa
mov
imul
jle
fsub
jae
cltd
jecxz
das
or
cmpsb
mov
mov
jbe
loop
imul
test
and
fcomps
out
imul
xor
fwait
sbb
aas
cmp
push
rcrl
hlt
or
mov
hlt
xor
or
jno
movsb
inc
imul
pop
mov
fwait
and
xor
lods
imul
push
insl
scas
jmp
add
mov
jne
data16
push
test
out
cltd
pop
rclb
popf
movsb
adc
lds
push
movsl
cmp
inc
movsl
mov
inc
insl
xor
xor
xor
push
lods
aad
lock
cld
jmp
xor
scas
shll
xor
and
inc
xchg
pop
leave
dec
xchg
or
insb
mov
aam
sub
ljmp
jg
aaa
bound
pop
imul
inc
jbe
aad
mov
inc
mov
jb
shll
cltd
or
in
mov
xor
lds
bound
mov
xor
jnp
mov
pop
inc
sub
cs
stos
cmpl
xor
lods
inc
mov
pop
int
jle
loope
cmpsl
sbb
pop
and
lahf
sbb
xor
call
fcoms
jne
enter
push
pop
das
and
sub
ds
int3
in
jp
mov
dec
inc
les
xchg
in
sbb
pop
xor
push
pushf
pusha
and
std
or
imul
push
xchg
pop
sub
xchg
stc
mov
out
sub
arpl
adc
mov
and
loope
jbe
mov
push
sbb
xchg
sub
ficomps
leave
pusha
loop
mov
hlt
loope
inc
sub
rcrl
push
pop
mov
loop
add
popa
ret
ja
fs
cmc
out
nop
pop
mov
roll
test
xchg
test
sub
push
or
jp
cmp
xchg
jo
mov
repnz
inc
pushl
mov
mov
es
add
in
mov
sbb
subb
push
xor
add
sub
pop
mov
test
pop
add
out
out
movsl
fnstcw
ss
add
jle
mov
dec
push
adc
mov
idivl
sti
dec
aam
lea
inc
popa
cmp
jne
pushf
jae
shl
fnstsw
inc
pop
gs
arpl
lea
mov
mov
mov
mov
in
inc
lds
sub
shrb
lods
into
inc
aas
sbb
pop
mov
jns
int
push
push
xor
hlt
push
in
pop
ret
mov
int
lret
repz
and
mov
xchg
sub
and
loopne
stc
sbb
mov
pop
cmpsl
insl
arpl
sbb
shr
mov
jae
inc
pop
push
movsb
lret
ds
arpl
inc
jmp
cmpsb
in
cld
imul
pop
stos
pop
dec
les
loopne
jge
adc
dec
loope
mov
xchg
jle
push
mov
mov
fwait
xor
ds
ss
xor
sbb
dec
test
jne
lret
add
jg
loop
inc
pop
sbb
cmpsb
das
jmp
push
sub
mov
adc
or
pop
test
ret
push
lods
xchg
nop
pop
aad
lcall
push
push
mov
scas
jl
ds
mov
std
leave
or
fildl
sub
popa
pushf
jmp
mov
adc
push
pushf
icebp
mov
sbb
mov
test
fildll
mov
repnz
aam
ss
push
fldcw
fnsave
jnp
pop
push
or
mov
push
outsb
stos
test
in
pop
push
mov
loopne
cmpsl
out
xor
cmp
cwtl
leave
push
and
inc
mov
and
shr
mov
mov
fs
ret
xchg
cmp
daa
jmp
mov
insl
cmp
push
sub
test
adc
xchg
mov
out
jo
es
fcompl
mov
mov
inc
int3
push
aas
cmp
les
pop
jo
xor
inc
lods
dec
dec
repnz
push
mov
push
xchg
testl
test
lods
into
cmc
adc
lcall
dec
negl
sub
push
sbb
sbbl
lds
lock
and
cmc
ljmp
lret
cmp
int3
xor
ror
jl
imul
notb
outsb
xor
jecxz
mov
je
std
xchg
xor
shll
out
loop
ljmp
jb
out
pop
test
enter
dec
das
mov
shrl
adc
lods
ds
movsl
push
or
dec
inc
inc
jno
int3
pusha
cmpsl
and
pop
mov
popa
pop
xor
push
jmp
out
outsb
push
jnp
outsl
out
mov
ljmp
divl
mov
sub
iret
hlt
dec
mov
aad
xchg
mov
or
mov
int
mov
iret
and
jp
das
subl
fneni(8087
leave
ficomps
xchg
sub
in
enter
inc
addr16
das
adc
aas
shlb
or
test
adc
jge
daa
xor
or
adc
es
sbb
je
mov
popf
outsl
iret
add
das
xor
mul
and
fwait
mov
je
sub
loope
mov
fidivrs
mov
stc
popf
scas
push
pushf
dec
loop
adc
mov
shlb
mov
bound
push
inc
push
push
in
mov
xor
rorb
sub
jg
je
ret
test
mov
push
jmp
and
vcvttsd2si
imul
inc
idivl
mov
jo
rcr
xchg
cmpsl
test
jno
es
test
mov
rclb
dec
mov
xchg
or
jg
and
sarl
lods
adc
adc
xor
or
lret
shrl
xor
add
hlt
mov
iret
dec
gs
out
jb
push
dec
xchg
or
out
pop
jo
cmp
inc
inc
jbe
out
pop
cmpsb
add
cli
mov
or
ss
insl
fldenv
cltd
aam
adc
fwait
pop
addr16
jbe
pop
es
rclb
add
lcall
dec
inc
mov
mov
adc
leave
std
push
out
pop
enter
ljmp
leave
jns
mov
cwtl
fwait
cltd
pop
push
jg
stos
shlb
cmp
add
and
dec
cwtl
jae
push
daa
mov
pop
arpl
or
and
orb
leave
iret
dec
pusha
and
test
lock
ret
fisubrs
iret
aaa
xor
inc
in
icebp
sbb
or
mov
pavgb
out
popa
mov
inc
mov
out
xchg
loopne
fsubp
xchg
es
lock
cs
sbb
std
xchg
jnp
mov
push
fisttps
or
stc
ficompl
stos
es
adc
subb
push
pop
cmp
js
push
push
stc
sub
xor
es
cmp
fucomip
jno
fsubrs
or
or
fldt
addb
sahf
into
and
or
jecxz
ret
orl
jl
lret
pop
test
push
add
enter
mov
xchg
or
loop
mov
push
mov
test
adc
dec
or
jns
dec
mov
lret
pop
inc
cmpsb
dec
movsl
push
nop
ja
fsubrs
sub
cmp
mov
bound
adc
arpl
mov
js
add
xchg
out
push
fisttpll
sub
pushf
rolb
enter
push
jle
outsl
insl
stc
cmpsl
mov
mov
and
pop
lods
mov
fidivrs
sti
xchg
push
test
imul
xchg
notb
mov
mov
mov
xor
inc
loop,pt
test
stos
pop
push
dec
fxch
jl
dec
mov
shr
ljmp
xchg
mov
sbb
rcrb
add
mov
shlb
pop
mov
adc
xor
sub
icebp
and
pop
sbb
enter
mov
fsubs
int3
ret
dec
insl
dec
imul
push
pop
pushf
mov
sub
arpl
push
xchg
xor
xchg
cmp
loop
mov
pop
cmc
inc
into
and
mov
daa
sbbl
xchg
es
cmc
xchg
hlt
push
cmpsb
or
cwtl
or
dec
popf
jp
mov
xor
mov
fmull
jg
ja
call
adcb
push
add
sub
dec
cmp
in
movsl
loopne
pop
sub
gs
iret
sbb
dec
ja
lods
dec
scas
daa
in
or
addr16
fincstp
lds
pop
inc
sbb
jl
cmpsb
inc
js
cmp
jnp
dec
pop
testl
or
sbb
mov
call
test
adc
jne
pop
je
andnps
or
mov
out
or
lea
jb
adc
lret
cmp
push
scas
pop
aad
xor
mov
ja
cmpl
fisttpl
sbb
pusha
scas
jnp
mov
cltd
pop
stos
mov
sbb
and
inc
and
popa
enter
mov
mov
mov
ljmp
bound
inc
cmp
push
imul
daa
cmc
sbb
je
sub
fistl
mov
sub
mov
mov
insb
cmp
inc
xor
adc
add
push
sub
push
clc
cmp
or
in
js
lahf
dec
cmc
mov
cmp
incb
sub
cmp
dec
jp
lods
xchg
loop
pop
stos
sbb
add
adc
lds
call
lahf
in
sahf
out
dec
lods
aam
sub
sahf
fists
xor
fxch
lahf
push
in
xor
and
sub
into
jl
sub
xchg
push
mov
lds
fmulp
aas
adc
jp
shll
jnp
lahf
fs
movsb
mov
les
inc
adc
out
movsb
loopne
mov
mov
cli
call
insb
jecxz
xchg
imull
addb
mov
ss
sbb
push
cmpsb
clc
pop
xchg
jge
jl
push
xchg
int
incb
xlat
push
imul
sti
test
out
mov
subb
pop
mov
mov
lds
cs
je
inc
dec
ds
adc
rorb
pop
mov
inc
pop
adc
and
cmc
inc
sbb
cmc
dec
ficompl
and
or
and
fdivrl
or
data16
mov
es
es
xor
scas
aas
loop
sub
roll
popl
jo
test
pop
push
mov
sbb
jle
neg
xor
stos
aaa
mov
jp
jp
sbb
mov
notb
mov
shld
les
adc
push
push
fs
mov
cmpl
inc
xor
jno
std
and
jns
mov
rcrb
adc
inc
and
inc
sub
pop
out
addl
pop
das
and
and
in
add
cmpsb
icebp
cltd
adc
sub
cmpsw
mov
fistpll
aas
aas
icebp
or
fadd
clc
jg
std
lret
dec
or
out
mov
pop
enter
xchg
xor
shl
leave
dec
ret
js
leave
call
mov
jp
push
mov
adc
mov
cli
testl
lcall
jb
or
cmpb
ret
insl
xchg
xchg
inc
cmp
mov
dec
xchg
shlb
sbb
outsb
aad
xchg
or
cld
loope
xor
into
loopne
pop
js
mov
push
int
inc
fmuls
std
int
outsb
inc
inc
jle
xchg
int3
jmp
jg
fstl
pop
xor
in
xchg
cmp
pop
xor
sub
pop
cs
add
mov
push
or
cltd
jae
mov
aaa
insb
add
fstpl
call
pop
cli
lods
insl
mov
sti
nop
lret
sbb
xchg
xor
lret
dec
mov
mov
adc
lcall
push
jle
das
or
dec
sub
stos
loope
aam
adc
and
adc
mov
pop
cmc
lahf
dec
call
lret
faddl
mov
les
sub
xchg
add
jno
gs
cmpsb
orl
jl
mov
add
xchg
xchg
in
icebp
and
lods
mov
inc
es
jg
std
mov
push
leave
faddl
sti
daa
mov
js
jns
les
xchg
lods
outsl
sub
push
ja
in
mov
es
mov
jo
cltd
xchg
or
mov
sti
js
insb
mov
int
adcb
ljmp
out
jl
mov
sbb
js
out
and
push
xchg
pop
adc
jno
push
push
cmpb
and
xor
fisubs
pop
repz
sbb
mov
jo
inc
mov
xlat
and
push
repnz
rclb
inc
mov
add
mov
lock
loope
jb
addl
outsb
jle
push
lret
lret
mov
movsb
and
inc
mov
sub
adc
out
in
mov
adc
movsb
mov
mov
push
movsb
sub
mov
loope
xor
daa
repz
or
dec
test
adcl
pop
jbe
aam
cltd
pop
je
rorb
xchg
aad
cmp
shl
arpl
outsb
pop
inc
lret
movsb
shrb
and
pop
mov
jne
adc
in
or
cli
cmpsb
push
in
mov
stc
inc
ds
push
inc
xchg
xor
mov
sbb
pusha
mov
add
mov
xchg
in
jle
testl
push
cld
fstps
fldenv
cmp
pop
outsb
push
lahf
rorb
push
mov
xor
stos
or
adc
sub
jge
cld
push
pop
jbe
das
push
aam
push
sarb
push
fldenv
insb
imul
outsb
stos
inc
pop
les
std
fisttps
fcmovb
repnz
push
dec
mov
loop
or
pop
lahf
mov
js
fldcw
subb
push
xor
out
fstpl
cwtl
sbb
in
xchg
std
sub
popa
stos
das
test
inc
adc
ljmp
add
push
mov
dec
in
in
dec
fiadds
cmp
adc
test
out
pop
adc
pop
std
fstp
push
cmp
nop
sbb
mov
enter
pop
fildll
xlat
fstps
mov
mov
add
jmp
push
dec
shld
mov
cld
popf
fstl
ret
mov
leave
sub
mov
mov
pop
fimull
mov
pop
data16
nop
das
and
sbb
fdivl
sbb
mov
fiadds
sbb
cmp
dec
pop
mov
cmpsb
into
mov
and
ret
rcrl
mov
clc
pop
outsl
and
dec
and
into
mov
fcmovu
sbb
jbe
popf
addr16
inc
inc
test
sub
subl
sub
lea
dec
in
in
int3
testl
pop
or
sub
inc
gs
fcmove
xchg
clc
cmp
repz
clc
xchg
xor
outsb
outsb
adc
or
test
cmc
sbb
lods
push
lret
test
mov
sub
daa
cwtl
imull
popf
leave
pop
idivb
nop
sbb
repz
pusha
dec
sti
push
dec
cmpsb
and
sbb
xlat
hlt
xor
adc
filds
push
cli
mov
jo
pushf
and
xchg
scas
push
js
fiaddl
lds
into
add
and
popf
lds
mov
mov
dec
mov
imul
test
jae
mov
lock
sbb
xor
sub
xor
hlt
leave
les
lret
cltd
cwtl
inc
lods
lods
add
cs
cmp
mov
xlat
and
fisttpll
jae
int3
jns
loope
pop
inc
in
sbb
mov
or
jle
inc
dec
sbb
hlt
push
popf
loopne
pop
jle
in
xchg
idivb
sub
pop
daa
sbb
or
xor
call
adc
mov
stc
cwtl
ror
data16
shll
clc
cmp
or
pop
cmpsb
xchg
outsl
add
mov
fwait
lcall
mov
les
push
xchg
xchg
or
mov
adc
adc
pop
jg
daa
sub
push
imul
lods
cmpsl
and
push
aad
je
sbb
push
mov
leave
pop
test
cs
jns
rolb
adc
xchg
pop
mov
mov
aas
cmpsl
lock
in
jo
insb
testb
ret
mov
add
push
movsl
push
call
jmp
call
pop
pop
ss
repz
mov
cmp
loop
sbb
fcom
lods
fwait
mov
dec
push
fstpt
cmp
jo
mov
jl
sub
xchg
pop
pop
or
inc
cmp
xchg
xchg
mov
or
hlt
nop
cmpxchg
jbe
ljmp
adc
arpl
mov
xor
lcall
jle
mov
aad
sbb
ja
push
push
daa
int
movsb
ret
shr
push
cmpsb
jne
shll
xor
lcall
in
lods
dec
cmc
fwait
call
stc
fldenv
inc
adc
bound
push
or
clc
push
into
mov
sbb
adc
xchg
sub
inc
mov
fnstsw
xchg
fadds
xchg
enter
dec
repz
fnstenv
dec
int
lret
in
inc
push
xchg
lret
xchg
fstpt
inc
xor
shll
adc
jns
in
push
sbb
xchg
lret
shl
inc
mov
mov
inc
sub
pop
cltd
test
push
lea
stos
adc
test
jbe
or
push
out
sub
pusha
js
aad
ret
rolb
sbb
add
shll
xorl
lret
scas
mov
popf
xor
and
lea
add
adc
inc
enter
inc
push
sbb
push
movl
nop
loope
dec
enter
loop
es
inc
lds
dec
or
jae
sub
imul
sub
mov
ja
test
add
ja
sbbb
outsb
xchg
repz
inc
xchg
push
push
orb
mov
dec
std
ds
adc
mov
rcrl
test
jmp
xor
or
mov
lds
add
aad
add
mov
mov
sbb
je
mov
shlb
mov
push
shufps
stc
imul
cmp
les
cmpsl
and
xor
divb
pop
mov
mov
ja
roll
imul
outsb
jecxz
and
int
mov
int
dec
lods
ret
inc
push
inc
scas
mov
xor
or
jp
js
idivb
out
jns
push
jnp
pop
mov
xor
pop
les
xor
test
dec
dec
mov
mov
and
cmp
sbb
dec
rorl
xor
leave
mov
icebp
cmp
jmp
and
aaa
and
test
and
sbb
push
test
iret
out
fstpl
pop
jnp
mov
mov
sahf
fiaddl
push
call
jecxz
jne
repnz
and
icebp
test
mov
pushf
out
leave
ret
mov
cmp
iret
aam
icebp
sti
and
bsr
in
dec
cwtl
pop
stos
xlat
scas
shlb
fwait
leave
outsb
xor
negl
mov
mov
inc
sbb
sarl
dec
or
aaa
fs
sbb
cmp
je
movsl
imul
pusha
daa
xchg
pop
outsb
leave
xor
push
not
mov
jns
xchg
sbb
push
std
mov
fimuls
inc
cmp
aas
out
sbb
xchg
push
add
push
sbb
jne
rcl
je
int3
lahf
scas
lea
pop
enter
mov
sub
mov
cmc
jp
dec
daa
lods
or
mov
fsubl
dec
mov
mov
lahf
or
add
fistpll
in
jecxz
in
xor
ror
sub
aam
xor
inc
adc
daa
cmp
rcl
mov
jns
pop
xchg
fwait
adc
dec
push
cmp
das
bound
cmp
iret
mov
dec
and
inc
sbb
lods
in
mov
cmpl
lods
xchg
mov
scas
lods
xlat
movsl
sahf
sub
std
xchg
mov
jae
cwtl
repz
dec
pop
je
or
pop
dec
lods
pop
push
mov
dec
jg
jne
and
push
sbb
push
cmp
das
push
dec
mov
mov
cld
idiv
mov
mov
cmp
jmp
aad
es
pop
mov
dec
out
insb
sbb
fldcw
ja
inc
or
jne
xchg
and
jbe
jne
cmpsb
xchg
test
jne
push
jp
lahf
cmp
inc
mov
rorb
xadd
mov
std
ljmp
cli
mov
add
test
mov
cwtl
gs
ret
mov
aam
or
inc
daa
jge
push
cld
jmp
push
stos
cs
outsb
in
xor
popa
push
add
push
mov
xor
mov
cmp
jae
add
rclb
add
arpl
jecxz
push
test
xchg
test
jne
lock
pop
ret
fiaddl
loope
mov
sub
add
or
js
inc
xor
pop
icebp
cmp
mov
adc
arpl
outsb
ljmp
mov
mov
inc
cmp
test
sbb
pop
push
dec
adc
inc
imul
or
adcb
aad
sbb
push
fsubs
xchg
out
iret
mov
adc
test
sahf
push
add
popa
aam
push
add
pusha
xchg
sbb
les
jge
out
rolb
pop
inc
fisubrs
mov
adc
jg
fwait
xchg
pop
js
in
pop
bound
fnstsw
sub
fdivl
decl
push
repnz
scas
bound
out
scas
clc
sub
int
xchg
mov
sarb
push
cmpb
addr16
icebp
mov
addr16
jno
pop
adc
push
xor
sub
repnz
lret
sub
add
push
sbb
mov
push
test
shll
mov
xchg
test
pusha
add
push
pushf
aaa
jnp
mov
lock
fcompl
push
pop
adc
sbb
int
cltd
sub
xchg
cmpsl
and
dec
stos
xor
mov
shll
cwtl
and
push
cmp
jmp
dec
lock
sbb
lods
popa
lcall
movsl
sbb
sbb
aaa
jp
sub
std
push
pop
sahf
addl
xor
testb
xchg
jmp
xor
add
in
pushl
aad
pushf
orl
inc
mov
adc
pop
hlt
add
push
cli
inc
xchg
push
xchg
xor
and
icebp
lods
sub
sahf
add
loope
incl
cmp
or
enter
loopne
fldcw
movsb
dec
inc
pop
inc
lret
shr
shll
sarl
sub
scas
and
scas
cld
fistpll
cld
cs
jge
test
adc
cwtl
push
mov
inc
inc
dec
adc
js
adc
sbb
inc
outsl
mov
int
jp
test
jge
in
pop
dec
mov
out
sub
stos
loop
clc
push
sub
pop
test
add
sub
fnsave
enter
fsubrl
mov
mov
push
rol
dec
pop
leave
andnps
ljmp
icebp
push
add
adc
scas
or
push
pop
or
arpl
cmpsb
aaa
and
xchg
cwtl
or
mov
dec
fidivs
into
sub
add
adc
imul
mov
outsl
out
stos
or
cli
push
test
mov
xor
mov
cmpsb
ret
cli
out
mov
sub
mov
xor
test
les
push
adc
out
fmuls
loope
push
dec
rorl
test
call
mov
cmp
mov
imul
es
icebp
rcrb
sbb
mov
cld
xor
insb
jp
mov
fwait
ds
jg
rcll
dec
push
or
daa
leave
cmc
ljmp
jg
xor
sub
test
dec
leave
or
sub
or
adc
pop
pushf
enter
stos
aam
lret
loop
cs
jmp
imul
inc
sub
xchg
mov
adc
dec
sub
outsl
push
lea
in
sbbb
inc
push
fadd
repz
adc
pusha
push
mov
mov
mov
xchg
sbb
push
ljmp
add
in
andl
jp
movsl
xor
or
pop
subb
jle
shrb
std
ljmp
sub
push
or
pop
inc
mov
sbb
sub
sub
imul
mov
shl
cli
mov
imul
pop
pop
sti
cwtl
insl
inc
xchg
mov
rorb
icebp
add
xchg
pop
outsb
gs
aad
pop
loop
xor
pop
mov
in
in
xor
aas
dec
je
repz
or
xlat
mov
and
nop
cmpsl
dec
insl
icebp
sbb
testl
popa
imul
adc
mov
into
shrb
mov
rclb
cmp
std
int3
push
dec
leave
dec
dec
xchg
inc
inc
dec
das
rorb
push
scas
shlb
mov
adcb
out
xorb
test
jno
jne
insl
sub
xor
sub
fistps
fisubl
sub
and
xchg
xlat
push
cmpb
mov
idivb
iret
fldl
rcl
aam
xor
lea
enter
dec
sti
lcall
mov
pusha
mov
adc
fwait
cmp
jl
call
inc
pusha
push
xchg
mov
add
gs
mov
pop
mov
arpl
cmc
hlt
jg
jae
fincstp
jbe
xchg
sub
mov
in
push
mov
lret
adc
pop
adc
sub
mov
mov
pusha
cmp
outsl
daa
les
and
xor
push
and
or
iret
mov
orb
fsincos
dec
incl
jns
dec
mov
insb
ret
jnp
daa
cld
jo
or
gs
xchg
jns
out
sub
loope
and
pop
add
cltd
loop
fstpt
popa
ss
add
lods
outsb
adc
pop
fiadds
jns
ljmp
add
cmp
sar
fidivs
push
cmpsl
sbb
sarl
loop
sbbl
pushf
or
jecxz
jge
mov
or
mov
lcall
mov
leave
inc
std
add
aas
and
and
in
xor
ja
fbstp
inc
or
push
mov
cmpsb
stos
fcmovnbe
movsb
shlb
scas
inc
push
aas
mov
jbe
mov
push
pop
add
mov
sbb
out
cmpsl
sbb
inc
in
sti
es
mov
and
in
inc
adc
pushf
mov
pop
xor
add
inc
jecxz
mov
lea
xchg
jb
insb
in
xor
data16
fs
imul
inc
sub
stos
rcrb
call
or
test
mov
pushf
orb
or
push
clc
sub
lcall
sbb
inc
push
pop
pop
shlb
mov
cmp
insb
aad
add
mov
mov
mov
inc
or
push
leave
and
lods
jne
cmp
insl
lret
or
cmc
mov
repnz
push
movsl
call
pop
fldl
inc
scas
dec
push
stos
movsb
out
and
arpl
push
sbb
xlat
cmp
popf
cmp
loop
push
mov
fsubs
out
xchg
insl
cmc
mov
mov
stos
orl
insb
imul
xchg
or
mov
dec
add
loope
movsb
mov
pop
test
sbbl
xor
data16
sub
push
push
adc
mov
jnp
data16
sub
push
lret
jb
enter
in
dec
mov
xor
fstpt
xchg
dec
xchg
pop
loopne
mov
xor
out
jmp
jae
shrb
fwait
shl
push
loope
cmp
out
lcall
mov
inc
pop
call
popf
mov
xchg
insb
jge
add
ficoml
adc
mov
pop
inc
roll
pop
cwtl
and
pop
inc
in
sub
push
add
jl
jne
in
cld
xchg
cmp
mov
mov
or
mov
es
cld
cmp
mov
out
jecxz
std
cmpsb
fwait
out
pushf
or
add
lods
xchg
and
dec
nop
bound
movd
jge
add
push
lret
push
insb
push
sbb
loope
sar
adc
je
lret
mov
cmp
pop
jns
push
ret
mov
pusha
js
stos
out
sbb
add
and
xchg
flds
in
sbb
adc
clc
or
in
inc
sahf
in
mov
mull
addr16
fwait
pop
fwait
repnz
sahf
sub
cltd
xor
dec
mov
into
mov
sbb
mov
das
sub
gs
fisubrs
mov
adc
xchg
jmp
loop
mov
push
pop
xchg
or
lock
push
sbb
es
outsb
adc
stc
popf
mov
push
push
call
ja
out
mov
movsl
cwtl
arpl
leave
int3
loopne
mov
cmp
mov
sub
inc
or
adc
movsl
pop
mov
pop
je
pop
and
fbld
adc
mov
das
fimuls
and
imull
xchg
or
das
out
mov
int3
xorb
xchg
bound
or
dec
jne
jmp
mov
fcoms
push
inc
mov
inc
test
jle
jl
test
cmc
mov
test
dec
mov
mov
js
xchg
sub
dec
lock
sti
dec
push
repz
notl
mov
imul
push
inc
xchg
pop
fdivr
hlt
loop
and
insb
inc
nop
mov
popa
xchg
and
data16
adc
fildl
push
adc
lcall
les
push
jmp
or
andl
mov
or
das
mov
mov
lds
pop
test
jo
mov
test
mov
pushf
jo
cmp
mov
std
inc
in
pop
push
mov
scas
addr16
mov
sarb
mov
arpl
mov
popa
out
lods
inc
or
mov
je
dec
xchg
or
loop
out
jg
xchg
or
cmpsl
lods
mov
fcmovbe
pop
mov
dec
pop
scas
pop
aas
addr16
or
cmp
sahf
outsl
fwait
xor
aaa
xlat
loope
jp
inc
leave
in
cmp
repnz
mov
fidivl
jge
ds
xchg
int
jge
and
and
cmp
mov
cmp
sarb
leave
les
mov
inc
cli
or
jmp
xchg
rcll
popa
fcomps
cld
inc
popl
sub
mov
sub
jae
scas
xchg
or
sti
adc
mov
adc
sbb
mov
es
xor
or
mov
xor
cld
int
pop
mov
mov
xchg
mov
mov
xchg
cmpsb
jnp
fists
jmp
jp
pop
pushf
dec
lahf
and
dec
or
fisubrs
shlb
fisubl
shll
andb
jns
stc
out
jne
lahf
cltd
movsl
cmp
imul
cmp
pop
pusha
mov
adc
cltd
mov
pushl
fmul
cs
daa
jno
clc
dec
je
hlt
xchg
cli
mov
and
int
jno
or
mov
mov
cmp
insb
cmp
shlb
sti
testb
mov
adc
out
lea
mov
pop
or
xchg
ror
xor
push
add
repz
outsl
and
fdivl
fdivrl
jne
les
std
test
xor
or
cld
add
popf
or
scas
int3
test
test
mov
and
dec
or
aam
fmul
clc
lret
add
or
push
pop
xor
imul
and
and
das
imul
cs
push
pop
jae
je
out
cmp
jecxz
inc
sub
dec
and
test
mov
or
js
sub
sub
into
stos
xor
les
pop
xchg
pop
cwtl
add
aaa
fucomi
popa
inc
pusha
ret
aaa
or
pushf
movsb
enter
push
subb
push
out
out
pushf
mov
inc
sbb
inc
mov
and
cmpsl
js
add
pop
ja
outsb
and
pop
ds
mov
les
test
rorb
and
cmp
mov
je
imul
mov
ror
das
cmpsl
xor
sarl
out
push
sub
jo
mov
rcrl
jnp
imul
call
iret
dec
sahf
jp
cmp
xchg
dec
stos
cmpsb
orb
lret
or
movsl
insb
stos
in
leave
in
mov
cwtl
lods
andl
insl
out
mov
sahf
pop
pop
je
scas
dec
mov
push
pop
jl
mov
or
sbb
dec
dec
cmpsb
mov
stos
inc
jecxz
mov
test
mov
lds
sti
cmp
loopne
xchg
mov
add
repnz
loopne
and
and
mov
dec
mov
outsl
or
push
xor
jp
stos
aas
jg
push
adc
mov
mov
push
pop
scas
lahf
inc
mov
push
inc
dec
sbb
scas
rclb
mov
mov
imul
inc
cmp
jae
adc
aad
xlat
pop
pop
mov
mov
mov
ret
fldl
cs
shll
sub
jecxz
es
das
inc
push
push
xchg
repz
outsb
push
cmpsl
stos
out
mov
into
add
jo
jl
adc
loope
iret
mov
mov
in
pop
or
lea
xchg
mov
xchg
and
sub
ds
arpl
das
dec
jecxz
sbb
jecxz
imul
lret
mov
xchg
mov
movsl
loopne
mov
movsl
in
sub
pop
jmp
inc
sti
mov
ret
and
mov
pop
jns
lds
mov
js
insl
pushf
or
lea
ss
xor
aas
jo
mov
outsl
push
jne
xchg
sahf
sbb
mov
jno
xor
cmp
outsb
inc
notl
inc
sub
xchg
mov
int3
dec
push
hlt
jbe
out
mov
adc
add
rorb
movswl
xor
aaa
out
push
adc
push
sub
xchg
das
cmp
dec
mov
adc
push
add
inc
jae
pop
xchg
dec
repnz
aam
jns
and
aad
push
fmuls
lods
daa
fldt
mov
jo
mov
inc
mov
idivb
or
push
cmp
stos
xor
leave
cltd
stc
mov
lods
fildl
sub
gs
loopne
cmpl
fs
mov
mov
sbbl
insl
daa
jl
push
lcall
sbb
in
or
inc
std
aas
rcrl
ret
jp
xor
icebp
sub
repz
dec
daa
shlb
outsb
mov
mov
xchg
pop
in
sti
jne
lea
scas
jne
fs
in
sahf
repz
cmovns
push
stc
call
mov
in
mov
inc
dec
movsb
add
shl
cmp
pop
nop
xor
fdivrl
xchg
adcb
dec
mov
mov
es
mov
fimull
call
test
push
mov
xchg
insb
add
dec
jl
lcall
sbb
pop
push
das
notl
sbb
sub
shlb
rol
xchg
test
xchg
mov
jno
pop
bound
add
in
ljmp
repz
or
mov
movmskps
xor
jno
fwait
push
fwait
push
lret
lds
push
mov
xchg
inc
rorl
lret
addr16
xor
push
subl
rcr
dec
adc
and
test
add
fs
sbb
lret
xchg
sbb
pop
sub
and
arpl
adc
js
sbb
sbb
aas
mov
or
xor
inc
jp
enter
pusha
and
sub
pop
cmpsb
cmp
xchg
or
pushf
push
repnz
rorb
jo
and
aaa
add
int
mov
les
sub
subb
xchg
test
je
jae
mov
dec
xor
mov
cmp
rcll
or
clc
adc
push
mov
pop
divb
jmp
mov
popf
cmp
or
push
cmpsl
or
movsb
pop
orb
push
xor
das
sub
js
pop
outsb
mov
adc
test
mov
mov
imul
dec
pusha
call
out
out
rcrl
es
lret
addr16
cmp
push
cli
dec
xor
in
xor
call
fnsave
subl
stos
imul
xchg
out
icebp
xchg
leave
mov
xchg
pop
or
and
cmc
mov
stc
mov
out
mov
jge
lods
pop
xchg
call
arpl
cmpsl
in
rolb
push
les
movsl
ja
add
mov
fwait
js
rolb
sbb
lods
jmp
shrb
clc
sub
xor
ficoml
out
xor
sbb
add
xchg
sub
adc
mov
xor
stos
mov
pop
jg
daa
ja
pushf
sbb
cmpsb
shrl
pop
hlt
push
ljmp
sbb
jmp
or
inc
sub
cmp
inc
negb
jns
gs
ret
or
mov
mov
jne
xor
in
dec
mov
or
leave
pop
pop
or
sub
xor
sbb
cmp
sbb
jo
inc
addr16
cwtl
fiaddl
cwtl
addr16
jnp
movsl
mov
icebp
xlat
push
scas
lods
lret
push
push
add
loope
aam
cmp
enter
dec
movb
or
inc
orl
sub
dec
lock
push
je
cli
push
xchg
repz
cvtps2pi
push
movsb
icebp
cmc
scas
repz
imul
arpl
mov
roll
push
sarb
jb
adc
sub
xchg
jmp
inc
stos
test
popa
mov
jo
cmpsl
inc
ja
jbe
xchg
xor
fs
adc
jbe
arpl
sbb
daa
icebp
sbb
dec
mov
xor
sbb
leave
lods
loope
jo
notl
ja
pop
cltd
jmp
pop
mov
cmp
add
mov
repz
mov
ja
cwtl
sub
stc
or
outsb
dec
dec
mov
pusha
pop
adc
outsl
push
fcomps
xchg
stc
inc
mov
push
sbb
xchg
sub
dec
mov
mov
mov
nop
sahf
sbb
xchg
cld
adc
in
je
orl
mov
push
add
fmuls
ds
adc
mov
sahf
pop
sub
pop
jl
cmp
add
je
out
xor
jle
out
std
imul
hlt
dec
sbb
and
mov
and
subb
and
mov
xchg
xor
in
and
push
pop
sub
push
call
mov
sub
rcr
sbb
lods
jp
cli
icebp
cltd
stc
sbb
pushl
shll
jbe
mov
insb
roll
pushf
xchg
jle
mov
pop
mov
hlt
mov
and
das
js
cvttps2pi
cs
adc
ds
int3
push
mov
call
dec
sub
lods
or
repnz
mov
xor
or
mov
inc
test
lock
xchg
mov
xchg
mov
pop
dec
jge
pause
dec
leave
jg
cmc
hlt
call
and
aad
test
adc
jb
xlat
mov
iret
call
insl
jecxz
push
fsts
dec
mov
xor
inc
and
push
stos
jg
jns
mov
rcll
dec
mov
or
cs
ret
jle
pop
add
bound
sbb
mov
ret
sbb
test
cmc
adc
stos
prefetcht1
ret
adc
sbb
jg
push
loopne
inc
mov
fisttpll
in
sbb
push
jp
out
loopne
jae
or
repnz
into
lock
cmp
ja
insb
sub
mov
xor
in
imul
popa
xlat
lods
or
cs
mov
xchg
fs
push
sub
outsl
add
imul
cmp
push
movsb
and
in
stos
and
shl
in
sbb
lods
jge
clc
and
popa
dec
daa
mov
cli
dec
cvtps2pi
dec
jl
mov
and
pop
jbe
enter
cmp
xchg
sbb
or
xor
adcl
pop
pop
jo
sbb
aad
out
mov
data16
mov
xor
test
out
pop
xor
scas
pop
xchg
sub
fldcw
mov
jbe
dec
ret
hlt
adc
adc
sahf
jne
xchg
dec
addl
pop
adc
mov
inc
hlt
stos
iret
push
cmp
or
loopne
roll
insb
cmp
adc
cmpb
cmpsb
xchg
loope
pop
mov
aam
xchg
loop
pop
aaa
enter
or
jl
push
pop
xlat
fsubrp
scas
push
aad
sbb
add
jnp
fdiv
pop
mov
test
fcmovne
lock
push
adc
and
pop
dec
pop
mov
sub
xchg
orl
inc
push
addr16
pop
je
push
dec
leave
lds
jbe
in
lock
shl
add
dec
outsb
mov
push
das
mov
xchg
call
out
xor
test
ficoml
js
jns
push
mov
add
cmpl
push
mov
popa
hlt
cld
sbb
ds
mov
jge
in
dec
sbb
mov
cmp
bound
or
push
scas
xor
or
inc
loopne
or
xor
addr16
out
sbb
pop
cmc
aad
dec
mov
mov
mov
int3
mov
fcomps
cmp
and
daa
cmp
xchg
sub
and
sub
jge
outsb
inc
dec
ja
std
pop
loope
add
xchg
shlb
stos
out
cmpsl
jne
sbb
ds
aad
mov
aaa
in
jnp
fcomp
mov
dec
std
push
pop
loope
mov
in
in
pop
orl
repz
push
xchg
loop
arpl
push
movsb
xor
cmc
xchg
sbb
cmp
out
sub
mov
out
in
in
stos
mov
loopne
push
loope
insb
push
jne
je
jnp
sub
mov
rcl
push
jl
add
lret
mov
call
inc
push
in
mov
imul
int3
test
fldt
mov
push
das
jno,pn
icebp
insb
sarb
add
push
inc
add
popf
adc
adc
adc
and
push
jmp
sbb
cmpsl
jo
lret
test
sub
or
stos
sbbl
push
ficoms
jnp
in
call
and
cmp
movsb
mov
in
int
mov
sbb
cmpsl
jb
imul
add
push
aam
sarl
lock
mov
insb
jbe
mov
and
dec
stc
pushf
push
xlat
xor
xor
insb
shrl
ja
cmc
cmc
dec
pusha
sbb
inc
data16
mov
pop
ror
xchg
add
test
fcos
push
xchg
mov
jg
and
inc
lods
mov
lret
into
aas
mov
xor
ljmp
outsb
fidivrl
stc
enter
add
jg
pop
jle
xchg
jmp
bound
out
ljmp
fsubs
jle
pop
aas
lock
lea
divb
out
loopne
mov
dec
jg
repz
sbb
inc
scas
mov
arpl
lods
inc
push
jge
rol
adc
daa
or
add
xor
push
xchg
mov
es
sti
aad
orb
test
push
movsl
testl
sbb
pusha
divb
in
imul
add
iret
xor
insb
arpl
jne
mov
scas
mov
jnp
stos
ss
iret
mov
cld
or
and
jmp
pop
xchg
cmp
lcall
stos
lods
std
repnz
pop
stos
lods
jb
pop
push
scas
pop
and
push
sub
rol
adc
incl
je
daa
shll
dec
aad
inc
outsb
sbb
cmp
xor
jge
adc
push
cmpb
data16
jge
cli
cs
pop
fwait
push
adc
add
ds
xor
push
jecxz
mov
jbe
sub
sub
push
adc
daa
stos
int
pop
mov
adc
lods
loop
movsl
xchg
xorl
dec
test
jnp
repz
xor
inc
push
sub
in
push
aaa
sbb
push
cmp
push
mov
mov
out
jmp
jne
shlb
pop
bound
lret
cmpsl
xchg
fs
js
es
rcll
jl
xor
jmp
bound
icebp
je
jl
jno
aaa
pop
adc
adc
push
outsl
mov
xor
dec
xchg
in
jae
mov
movsl
shl
fcoms
jb
scas
add
xchg
mov
lds
lock
test
js
push
and
add
jle
sub
dec
mov
push
shrl
xor
jecxz
pop
jae
dec
shrb
xchg
xchg
fdivs
mov
jnp
cmp
fiaddl
sahf
sub
or
scas
repz
movsl
and
imul
sbb
push
mov
xchg
test
insl
xchg
into
imul
loope
jne
lods
ret
scas
fadds
out
add
inc
aad
or
mov
and
imul
or
push
loopne
repz
and
xor
fs
out
cmp
mov
push
jno
inc
cltd
andb
das
inc
jg
pop
out
mov
jmp
sbb
test
or
push
daa
inc
sub
mov
jne
je
pop
dec
adcl
inc
lds
movsl
aaa
inc
sub
fcmove
add
lock
ret
imul
jno
scas
and
fimull
cmp
pop
shl
xchg
pop
jmp
sbb
fisttpll
jno
dec
mov
dec
and
push
mov
mov
push
and
jp
add
std
sbb
imul
icebp
xchg
fprem1
push
jb
icebp
fcmovnb
pusha
cli
or
lods
ficoml
rcr
movsl
popa
aas
fdiv
popa
flds
insb
insl
or
sbbl
dec
cmp
mov
loop
xchg
mov
lret
dec
inc
roll
push
and
sub
mov
es
imul
pop
mov
movsb
jne
jg
xchg
leave
insl
fs
call
pop
push
jge
xor
pop
sti
into
jb
leave
andl
cmp
sub
test
xorb
rclb
cli
inc
daa
adc
inc
dec
add
cmp
pusha
ss
loope
push
dec
fsubrl
adc
int3
pop
inc
push
shrb
or
jb
cmp
xlat
subl
shrb
cmpsb
mov
sub
inc
push
sbb
fwait
xor
fcmovne
test
push
cmpsl
es
sbb
sahf
stc
out
jbe
adc
cmp
dec
clc
ret
das
push
cmp
sti
in
fwait
out
inc
movsl
stc
leave
inc
mov
or
mov
cwtl
mov
outsl
pop
loope
pop
pusha
mov
incl
outsl
push
mov
xchg
xchg
vmovapd
mov
movsl
das
inc
arpl
adc
push
mov
cmp
in
sub
fldt
enter
mov
sub
pusha
clc
inc
mov
ds
adc
outsb
sbb
aas
mov
cmc
clc
pop
and
mov
mov
adc
pop
sbb
sub
sub
rcrl
dec
gs
lcall
out
sbb
hlt
pop
shrl
inc
dec
rcll
fscale
or
push
jo
dec
cld
jbe
mov
lods
enter
dec
dec
push
inc
cld
sar
push
pop
dec
fimuls
mov
popa
inc
clc
jae
inc
adcl
adc
add
out
jmp
adc
iret
stc
mov
jno
out
dec
les
lcall
pop
sarb
add
pusha
mov
jle
push
inc
test
mov
and
inc
push
adc
shlb
jne
out
inc
and
cmpsl
push
in
cmpsb
popa
pusha
xlat
sti
addr16
adc
clc
in
mov
arpl
xchg
in
jecxz
sub
mov
outsb
inc
sub
daa
outsb
mov
jo
adcb
test
sbb
in
adc
in
ds
cs
xor
mov
addb
test
cmp
ficomps
inc
mov
pop
cmp
cmc
popf
add
ud2
subl
int3
xor
fsin
dec
sbb
mull
pop
jl
or
imul
push
sbb
cwtl
pop
or
or
popa
inc
or
outsb
adc
xchg
and
lret
inc
shlb
mov
aas
gs
cmp
fdivl
adc
iret
inc
sub
mov
stos
std
xchg
pop
jle
push
enter
sahf
jbe
add
iret
shlb
xchg
cmpsl
bound
call
pusha
aaa
fcmove
into
test
sbb
ds
sub
pop
mov
pop
nop
roll
fsubrl
aas
es
call
push
pop
loopw
jl
outsb
xchg
sub
lds
pop
mov
dec
cmovno
pop
mov
pusha
cmp
int
dec
pop
xor
or
push
je
je
rcl
add
push
pop
mov
mov
mov
mov
addr16
fidivrs
mov
out
mov
xor
scas
sbb
jb
loope
pop
out
or
sahf
lret
pop
aam
jp
test
das
lock
sbb
xchg
jne
test
and
pop
fisttps
and
insb
push
inc
scas
mov
sbb
ss
sbb
hlt
enter
int3
jns
je
mov
mov
xchg
addr16
pop
insl
loope
movsb
push
pop
lock
std
jle
jb
xchg
push
in
aas
int3
pop
pop
push
dec
negl
push
sub
outsl
xchg
idivl
out
and
fimull
pop
xcrypt-cfb
cmpsl
cmpsb
test
in
push
pop
mov
jbe
push
and
sub
mov
lods
enter
inc
pop
sub
cmp
mov
lds
fwait
scas
push
push
test
cltd
sti
mov
cmc
mov
mov
xchg
leave
in
ds
fld1
xor
mov
add
hlt
lcall
add
mov
mov
sub
pop
sbb
ja
adc
jno
xchg
pop
jo
imul
cmp
pop
dec
out
add
or
repz
lods
inc
fbstp
push
xchg
adc
lods
arpl
loopne
out
sub
pop
lods
addb
das
and
outsl
xor
push
push
aad
lret
jae
mov
insb
xor
fwait
int3
adc
jae
mov
fs
jb
out
mov
imul
inc
pop
ss
xor
out
fisubrs
insl
insl
lret
lds
ljmp
push
imul
or
into
je
adc
popf
mov
push
push
es
or
xchg
and
lret
add
mov
sub
sub
test
add
dec
dec
cmp
jne
icebp
imul
test
mov
cli
arpl
mov
jecxz
fstl
mov
jl
in
in
pop
sbb
push
out
bound
or
in
cmp
fs
push
xchg
mov
dec
in
mov
push
mov
aam
daa
push
pop
dec
pop
lret
cmp
sbb
and
dec
mov
pop
mov
cmp
lock
cli
cmc
sti
testb
lcall
xchg
pop
adc
leave
xchg
cmp
lret
jb
fnstsw
sbb
mov
cmp
mov
mov
movsb
jg
rorl
sbb
push
jle
sbb
movsb
scas
pop
xchg
fildl
repnz
sbb
test
sub
out
pop
or
rcll
pop
jecxz
outsl
roll
loop
bound
les
movsb
adc
sub
mov
lods
js
sbb
add
add
sub
dec
pop
sub
fs
mov
sbb
lcall
pop
cmp
fistps
xlat
inc
inc
push
xor
xchg
sub
or
sub
dec
les
pop
push
lret
lea
jp
mov
or
pushf
mov
lds
mov
cmpsl
pop
mov
pushf
dec
lea
dec
mov
push
les
test
in
insl
in
mov
cmp
cmp
inc
sub
dec
push
jne
pop
push
in
orb
xchg
pushf
ret
mov
sub
jns
jp
in
cmp
dec
mov
data16
mov
enter
fmull
dec
int
mov
mov
inc
and
lcall
or
or
nop
ja
sbb
out
in
push
pushf
mov
cmpsb
adc
pop
or
pop
add
cwtl
xor
xlat
out
dec
sti
mov
cmp
and
jl
xchg
jmp
ret
fildll
pop
push
jmp
pop
jg
adc
out
adc
and
jge
scas
ret
fbstp
mov
sub
and
dec
push
xchg
sub
scas
mov
mov
or
sub
into
xchg
cmc
imul
jle
arpl
data16
ret
xor
and
jb
add
aad
add
push
les
pop
mov
mov
mov
cmp
ret
test
and
scas
mov
push
mov
xchg
dec
mov
inc
cmp
bound
aas
adc
pushf
faddp
jnp
ret
and
sti
jno
je
jmp
xchg
dec
fmuls
jo
and
mov
dec
jecxz
mov
aas
sti
sub
out
shll
cmp
data16
addl
outsl
jmp
dec
xchg
loop
ljmp
scas
rcl
mov
pop
nop
imul
pop
jge
sbb
ret
ret
sahf
push
rcrl
mov
dec
js
pop
adc
adc
aaa
adc
mov
iret
mov
pop
shll
and
jp
inc
pop
fsubp
pop
shrl
pop
cmp
test
mov
push
sbb
sbb
cmp
testl
jne
or
add
jg
cmc
jbe
mov
ret
lret
mov
inc
pusha
ftst
lods
into
add
aas
rorl
cltd
cmpsb
and
inc
dec
scas
jecxz
mov
jecxz
add
mov
cltd
mov
outsb
pushf
mov
into
idivl
inc
jne
xchg
sub
repz
sbb
fldt
sbb
add
outsb
jp
inc
clc
stos
add
and
jne
add
mov
ljmp
mov
mov
xchg
stc
jg
rcrl
sub
fistpll
xchg
sbb
mov
push
adc
in
scas
test
adc
push
mov
pop
fadd
stos
sar
lods
test
xor
xor
fimuls
xchg
sbb
in
add
sbb
dec
pop
jl
push
add
pop
jb
inc
ret
fwait
sub
mov
cltd
xor
dec
notw
mov
mov
pop
mov
mov
jp
daa
sub
iret
cmp
mulb
mov
push
lret
fwait
push
inc
sub
enter
mov
lret
push
sub
mov
push
sbb
arpl
jae
sub
jmp
outsl
mov
shl
jmp
mov
jbe
mov
xor
or
inc
xchg
int3
inc
imul
sub
pop
dec
and
es
adc
jne
sbb
push
push
ret
sbb
xchg
jns
lock
and
movsb
sbb
cmp
ret
or
mov
inc
sahf
xchg
iret
xorl
mov
push
or
cs
div
int3
sbb
daa
add
lods
xor
out
out
dec
cmpl
push
fdivl
adcl
dec
or
aaa
ja
xor
adc
in
and
loopne
inc
mov
dec
hlt
ss
mov
adc
sbb
in
sahf
push
or
xor
loop
mov
xor
in
push
aad
mov
std
jmp
into
xor
lcall
outsb
insl
fdiv
jg
ss
daa
mov
add
sbb
jo
mov
outsl
loop
scas
cmp
mov
adc
mov
mov
jg
fwait
mov
rolb
dec
add
test
and
leave
push
imul
mov
std
add
mov
mov
gs
stc
dec
popf
addr16
push
and
mov
jae
pop
sahf
ficomps
xor
ja
in
mov
push
inc
jg
fimull
imul
imul
inc
inc
dec
in
pop
or
inc
clc
sbb
sbb
and
jnp
sub
je
sbb
dec
mov
das
data16
sahf
pop
sub
mov
cld
mov
mov
lea
jp
outsb
nop
or
sahf
pop
call
push
mov
and
push
stc
mov
popa
test
stc
movsb
arpl
lock
das
pop
adc
cmp
adc
inc
cmpsl
push
cmp
icebp
addl
shr
xor
scas
mov
mov
leave
xor
jo
inc
mov
insb
and
pop
scas
add
daa
push
shrl
test
and
dec
ss
into
jl
adc
mov
ss
in
insb
mov
lock
popl
and
sarl
mov
jg
add
cmp
or
xchg
insb
pushf
les
jp
push
in
lahf
outsb
or
cli
fdivrl
xchg
sub
mov
fwait
jo
dec
jb
idivb
push
stc
mov
push
adc
jge
inc
ret
jle
cmpsb
popa
pop
inc
cmp
cmpsl
lock
xor
icebp
js
push
jno
push
mov
insl
jl
xchg
jle
add
jo
es
loopne
iret
addl
push
lcall
adc
inc
mov
xchg
add
xchg
fwait
jb
js
rcll
pop
scas
in
int
movsl
cmp
outsl
mov
sti
ret
fsubr
or
push
mov
mov
clc
ret
sub
pop
jecxz
cmp
sub
cmp
js
ss
dec
stos
push
sub
stc
inc
and
cmp
imul
adc
dec
cmp
fs
push
add
jne
add
int
jmp
lods
roll
rolb
jg
pop
pop
jg
test
mov
aam
sahf
xor
repz
in
das
in
gs
lcall
xchg
jno
cmp
xchg
stc
pop
mov
fcompl
test
or
lods
lea
outsl
sub
adc
mov
cs
push
jae
imul
adc
mov
lods
mov
sub
cmpsl
mov
mov
adc
and
movb
inc
mov
push
dec
hlt
sub
mov
in
jge
mov
bound
sub
mov
mov
add
xor
sbb
jmp
adc
jecxz
std
outsb
insl
push
pop
adc
outsb
sbb
mov
jle
inc
rclb
scas
xchg
stos
cmp
nop
jecxz
fsubs
clc
jp
jmp
xor
out
call
push
fistpl
fidivrl
mov
gs
rcll
jno
mov
in
cwtl
out
mov
out
sbb
call
pop
sub
ret
ss
pop
mov
fsubrs
xchg
sub
out
rcrb
or
sti
or
mov
jbe
jae
and
scas
xor
or
xor
imul
mov
testb
movsb
xor
dec
jo
lea
into
inc
mov
popf
data16
dec
push
lods
and
and
mov
movsl
adc
xchg
sub
roll
insl
push
mov
lds
push
pop
jns
adc
movsl
push
jge
mov
add
cmp
ret
cmpsl
jno
movsb
push
addl
adc
lods
jecxz
xchg
and
xlat
jbe
adcl
xchg
xchg
pop
dec
xlat
pusha
push
add
fsts
fldl
sub
and
icebp
mov
pop
and
push
add
cmp
shrb
int
and
mov
cld
movsb
and
movl
fistpll
pusha
mov
lret
sub
sub
jle,pn
insb
sbb
jp
vpopcntq
add
cmp
pop
add
cwtl
xor
push
aam
xlat
cmp
and
and
mov
xor
mov
movsb
or
lahf
fwait
js
mov
xchg
jp
ret
stos
adc
mov
ja
enter
lcall
js
mov
xchg
das
xchg
in
sub
shl
jp
dec
push
or
cmp
or
mov
insb
mov
scas
xorb
aaa
sub
xchg
push
fstl
or
jge
cmp
movsl
shr
sub
gs
cmp
mov
sub
imul
sub
pop
mov
bound
pop
daa
fwait
push
call
add
jae
leave
hlt
enter
push
xor
mov
dec
mov
jnp
xor
xchg
lea
cmp
dec
sbb
mov
ss
movsl
or
fs
fisubl
sbb
and
dec
out
cmp
rolb
mov
and
stos
adc
inc
mov
pop
mov
stc
popa
xchg
lcall
add
addb
jno
test
jmp
mov
inc
stos
pop
pop
test
lods
out
mov
sbb
out
cltd
pusha
jno
or
pop
popa
push
push
lods
sbbb
mov
mov
mov
inc
loop
and
bound
adc
push
lret
fimuls
lock
or
lds
adc
mov
mov
add
mov
sub
shlb
xor
sub
adc
nop
mov
dec
stc
ror
mov
dec
sub
jle
jns
nop
push
loopne
pusha
ret
push
pop
fdivrp
insb
cmpsb
movl
mov
mov
or
xchg
jo
pushf
movsl
push
adc
xchg
outsb
lds
jnp
orl
mov
bound
int
ljmp
sbb
ljmp
jp
mov
xchg
adc
mov
ret
jo
mov
lea
push
inc
adc
push
push
lds
mov
cs
xor
xchg
adc
cli
push
stc
mov
push
les
cmp
push
shlb
in
loope
std
fisubs
outsl
sbb
cs
adc
enter
inc
pop
mov
dec
cmp
popf
movsl
mov
iret
hlt
lock
fsubs
shl
mov
mov
cmpsl
cmc
push
fs
mov
fwait
adc
cltd
test
and
mov
fsts
sbb
dec
adc
pop
inc
outsl
imulb
adcl
sbb
scas
and
mov
pop
jmp
loop
cmc
out
jmp
mov
dec
or
jle
aaa
shlb
test
pop
mov
lods
sub
dec
xchg
in
inc
push
push
pop
xchg
popf
repnz
fadd
fwait
mov
jl
imul
lds
das
cmpsl
mov
push
mov
cmp
je
adc
pop
enter
dec
xchg
xchg
inc
int3
iret
pop
shll
mov
es
mov
dec
mov
add
add
cmp
lds
cmpsl
out
lret
cmp
ret
push
mov
ret
sbb
dec
in
jno
dec
lock
inc
stos
lcall
fwait
xor
movsl
clc
fstpt
push
cmp
jmp
inc
mov
sbb
faddl
test
insl
in
test
and
int3
pop
popa
sub
in
sub
fidivl
pushf
add
jns
pop
inc
cmc
xlat
xor
popf
sarl
cmp
and
bnd
aam
jns
jl
gs
sub
scas
dec
sbb
stos
hlt
aas
inc
cmp
inc
xchg
xchg
gs
into
push
adc
dec
mov
inc
int
mov
pushf
mov
sbb
mov
push
fcoml
ret
dec
sbb
cld
mov
push
es
out
jne
mov
repz
xchg
mov
jecxz
addr16
rclb
pop
insl
xor
cmp
sbb
sub
dec
xor
mov
shll
add
fcompl
je
popa
add
rolb
dec
loope
mov
lret
mov
xorb
or
or
xor
and
xchg
xchg
sub
in
push
add
and
enter
cmp
xor
fdivrl
inc
sarl
mov
add
xchg
adc
lret
loop
ret
sbb
push
dec
xchg
ja
mov
sbb
cltd
fwait
or
ljmp
dec
out
add
mov
ss
mov
pop
adc
pop
mov
popf
hlt
fidivl
loopne
je
decl
pand
mov
out
fs
aad
add
movsl
mov
sub
push
cltd
loopne
push
stc
push
test
outsb
pusha
adc
in
addr16
adcb
fs
push
adc
mov
js
loope
daa
je
loopne
ret
cli
or
dec
sub
cmp
pop
fcoms
mov
jne
repnz
lcall
shrd
mov
sbbl
dec
test
push
repz
outsb
sub
test
lock
push
push
adc
das
sahf
pop
hlt
xchg
xchg
stos
rolb
dec
mov
out
mov
arpl
addr16
lock
loope
xchg
add
jecxz
in
out
rol
sub
loop
jge
frstor
adc
fwait
cmpsb
push
sbb
fwait
popf
sbb
and
dec
cmpsl
xchg
jmp
lock
shl
adc
xchg
mov
out
scas
cmp
gs
aaa
lds
push
cld
stos
xlat
hlt
repz
pop
mov
add
imul
scas
sbb
psrlw
sub
test
xchg
mov
je
stos
mov
fisubs
test
clc
cmp
fs
and
adc
xor
xor
mov
cmp
faddl
mov
insl
mov
leave
xor
jle
lock
jnp
or
or
sub
inc
sbb
loope
sub
cmp
mov
xchg
or
mov
inc
sbb
and
adc
sbb
push
mov
idivb
add
push
lods
out
scas
sahf
pop
das
jb
xchg
insb
ja
lods
dec
cmp
jl
mov
pop
insl
fucomp
sbb
std
mov
mov
mov
mov
ss
stc
xchg
scas
sub
push
mov
mov
inc
stos
sarb
ja
ret
div
dec
repz
cmp
xor
fidivrs
pop
fisubl
push
adcl
xchg
rolb
bound
scas
dec
cmp
sub
or
and
loopne
sbb
icebp
mov
test
inc
pop
lods
xlat
lcall
jecxz
jno
orl
dec
xor
dec
lea
mov
imul
ja
jno
idiv
mov
xor
sbb
push
xor
mov
push
cmp
sahf
xor
aaa
xor
xchg
andb
hlt
or
pop
test
xor
adc
dec
ret
mov
dec
xchg
push
fisttpll
aad
cs
repz
bnd
mov
cmp
flds
out
mov
xor
jl
fists
push
rcll
stos
cmp
aam
int
je
cmp
inc
call
sbb
add
aas
ficomps
or
push
divl
aaa
adc
jo
mov
pop
push
xor
lods
adc
cmp
pusha
sbb
sub
sbb
rcrb
lods
push
or
inc
sarl
xlat
js
std
pop
aaa
shr
aaa
popf
mov
nop
sbb
xchg
rcll
test
loope
call
lahf
rorb
out
ret
ljmp
xchg
popf
xor
inc
dec
mov
and
out
jnp
push
pop
dec
das
into
and
cmp
mov
xor
pop
test
push
mov
push
cli
jle
test
push
jg
mull
in
mov
loope
ret
fucomip
lcall
cmp
and
sbb
add
inc
fldenv
sbb
mov
sub
hlt
mov
test
cmc
pop
dec
xor
addl
jmp
insb
insl
shlb
sbb
cltd
xor
adc
mov
cli
aam
cmp
int3
jmp
fcomps
inc
and
sub
cmp
pop
sub
push
cmp
and
out
int3
pusha
adc
sbb
shll
jae
incl
pop
sbb
push
jnp
mov
dec
out
call
pop
in
dec
jb
and
or
cmc
lods
mov
outsb
jg
cmp
sub
dec
imul
lods
push
je
dec
outsb
xchg
lock
xchg
cwtl
sub
add
pop
int
sub
ja
xchg
outsl
mov
mov
cmc
icebp
and
push
sti
divl
nop
jne
mov
mov
cmp
pop
subb
pop
dec
call
mov
in
push
xchg
sbb
mov
out
mov
cmpsb
sub
insb
sbb
fstpl
inc
or
daa
inc
cmp
and
les
cmpsl
add
call
inc
mov
fimuls
test
shll
mov
push
jae
cmpsb
sub
dec
pop
arpl
gs
nop
jne
pop
imul
add
sub
add
daa
pop
mov
leave
fisttpll
les
stos
test
xor
sub
rcll
insb
and
cltd
in
add
mov
or
mov
in
sbb
push
cs
xchg
xchg
addr16
dec
stc
xor
mov
daa
jmp
out
cmc
dec
jp
inc
arpl
or
aad
ljmp
ljmp
and
test
insb
mov
movsl
xchg
aas
aam
sub
or
xchg
ds
jbe
mov
add
dec
pusha
dec
mov
push
push
push
shlb
scas
cmpsl
out
add
aaa
in
push
mov
sbb
mov
xchg
push
xchg
push
mov
cld
sarb
cmp
icebp
mov
sbb
outsb
push
sbb
into
adc
jbe
pusha
ljmp
add
aad
add
lret
clc
pop
xor
push
and
mov
je
in
push
shrl
loope
pop
lods
cmp
subl
mov
scas
push
js
stos
int
fs
jecxz
mov
jle
mov
cmpsb
cmp
pusha
insl
jmp
out
mov
ds
and
adc
xchg
nop
adc
call
mov
push
push
sbb
jnp
add
ljmp
int
ljmp
sub
cmp
xor
mov
inc
bound
xlat
xor
cmp
imul
mov
mov
std
pop
cmp
ret
push
sahf
mov
lret
sbb
and
ret
into
adc
stos
sub
mov
lods
pop
movsb
ret
dec
lds
jp
mov
lods
xchg
jb
cmc
jge
aam
xor
inc
jno
xchg
call
inc
inc
or
out
mov
pop
nop
and
imul
jo
shrb
scas
addr16
insb
jp
mov
add
mov
inc
lds
iret
popf
mov
andl
ret
call
fcmovbe
dec
mov
divl
or
jl
mov
sahf
xchg
inc
mov
mov
dec
stos
clc
insb
push
adc
sub
mov
and
and
push
adc
repnz
ficomps
push
fildll
sub
movnti
repz
pop
nop
or
mov
mov
pop
sbb
std
jb
lods
fs
negb
sbb
inc
out
mov
rorl
pop
es
rcr
data16
cs
jecxz
cltd
and
sbb
in
aad
mov
das
fstps
cwtl
pop
outsb
aam
imul
test
inc
or
ret
cmc
jmp
aas
and
xor
adc
mov
lret
xchg
scas
mov
ja
scas
out
xchg
xchg
adc
imul
or
out
mov
or
xchg
fs
jmp
aad
pop
jmp
aam
cli
lds
push
jns
jo
adc
popf
pop
cmp
dec
fwait
mov
fucomi
sbb
add
fadd
outsl
or
ds
push
repnz
sub
mov
jo
vpaddq
xchg
xor
cld
mov
outsb
popf
dec
cld
mov
and
pop
fs
cmp
jae
jb
fwait
push
push
out
xchg
test
fsubs
in
sbbb
outsb
push
dec
mov
add
pop
aas
cmp
lods
aad
mov
scas
gs
sub
adc
jmp
leave
mov
data16
jmp
mov
xchg
xor
cli
cmp
push
movsl
or
cmp
daa
jnp
into
jl
adc
push
xor
cmp
or
jp
stos
nop
cmp
mov
test
out
xor
jmp
sbb
ljmp
pop
xchg
cwtl
movsb
push
cmp
lret
or
daa
inc
pop
mov
adc
std
and
jno
cmp
inc
mov
pushf
stc
cmp
sbb
and
xor
ja
insb
icebp
push
es
repz
inc
scas
out
push
pop
inc
popf
push
or
int3
push
pop
dec
in
mov
sub
add
js
sti
outsb
loop
popf
loop
lahf
xor
push
ljmp
cmpsl
pusha
mov
push
sub
fcoml
sub
mov
mov
movsb
sbb
outsb
pop
adc
mov
inc
roll
daa
arpl
aaa
and
sub
icebp
cwtl
mov
lret
ljmp
pushf
push
jnp
lret
out
mov
loop
mov
lods
inc
xor
push
pop
fstps
pop
outsl
dec
jp
pop
loopne
out
xchg
pop
push
xchg
add
nop
dec
incb
mov
jmp
nop
jno
subl
add
sub
scas
cwtl
imul
sub
pop
pop
adc
or
sub
push
dec
push
mov
push
in
repnz
and
adc
xor
sub
mov
mov
rorl
adc
sbb
imul
ja
fistpl
mov
push
xchg
pop
out
std
pushf
jecxz
std
iret
jbe
inc
repz
push
push
xchg
das
arpl
or
xchg
nop
fimuls
push
aad
aam
aad
xchg
push
scas
jae
sub
mov
cmp
pop
or
negl
lret
sbbl
dec
adc
mov
rcrb
pop
stos
pop
xor
adc
sbb
cmp
bound
sub
or
cli
sarb
imull
xchg
mov
out
dec
mov
aaa
mov
xchg
xchg
jnp
mov
fdivl
test
dec
jb
sahf
pusha
and
es
ss
sbb
ss
mov
and
mov
jg
movsb
fucomip
sub
loope
in
imul
sbb
jae
fisubrs
stos
push
adc
jg
mov
pop
stc
test
dec
dec
mov
xchg
cmp
sub
mov
and
lock
loopne
dec
sahf
cltd
lahf
xor
push
test
ss
sbb
mov
lea
fstpl
sub
add
xor
pop
lock
in
test
inc
xorb
stos
into
mov
popf
xchg
lret
pushf
loope
daa
or
test
push
fldt
stos
outsl
xor
mov
jecxz
into
popa
or
neg
add
dec
adc
test
fnstenv
scas
mov
pop
add
push
fistpl
xchg
out
cmp
inc
and
lea
loopne
shl
test
mov
push
xor
lahf
repnz
and
in
lcall
ret
push
adc
ss
test
cmp
outsl
inc
sub
jl
xchg
sar
les
xor
mov
cmpsb
movsl
mov
enter
mov
xchg
push
int3
push
shlb
inc
adc
push
push
lea
les
push
in
shld
jae
cmp
dec
mov
push
and
push
xlat
test
sub
push
mov
xchg
dec
leave
and
xor
mov
jecxz
jae
int3
std
repnz
xor
inc
fdivl
or
fs
in
fiaddl
fldl
nop
into
test
mov
push
push
xchg
mov
cld
inc
push
adc
iret
push
ret
and
and
lods
iret
mov
xor
mov
test
iret
inc
inc
mov
aas
cwtl
vandnps
fwait
lods
shll
lods
and
dec
nop
decl
push
je
sbb
inc
pop
subb
xor
into
arpl
jmp
mov
add
cmp
push
lods
push
test
sti
fimull
mov
ja
scas
test
jg
std
mov
add
test
sbb
sbb
add
hlt
sarb
fsub
pop
sarl
iret
rcr
fdivl
jle
fistl
ret
push
sbb
in
mov
addr16
push
or
adc
clc
xchg
test
pop
cmpsb
push
mov
pop
sahf
cvtdq2ps
dec
or
add
les
pop
enter
jae
xchg
jle
mov
mov
iret
outsl
sahf
sbb
mov
mov
and
imul
lahf
mov
dec
imul
inc
cmp
cltd
sti
cli
sub
test
aas
imul
jmp
scas
std
jg
xchg
sti
cmp
aam
mov
das
jnp
adc
jno
rclb
int3
pop
mov
cltd
jmp
das
sub
out
in
or
pop
mov
pop
imul
inc
lcall
dec
cli
fs
addr16
cmp
ja
jg
mov
sub
inc
inc
je
arpl
dec
mov
push
daa
out
add
cli
mov
aas
mov
in
loope
mov
pop
testl
adc
mov
or
sbb
in
leave
cmc
xchg
sub
inc
sti
cs
adc
fldt
insl
pop
aam
cmp
mov
or
push
mov
leave
roll
mov
call
scas
in
inc
cmpsl
push
cmpsl
dec
addr16
xchg
fstpl
stos
pop
pusha
sbb
mov
mov
fwait
adc
in
addr16
in
pop
cli
pop
mov
push
add
lods
xchg
or
cmp
out
lds
add
pop
mov
in
stc
pop
ljmp
pop
push
lods
or
dec
iret
cmp
mov
icebp
es
icebp
lock
cmpsl
mov
dec
std
stos
gs
push
sbb
mov
mov
lret
pushf
xchg
out
incl
adc
cmp
std
xchg
jge
sbb
jl
jns
cwtl
mov
ret
loopne
fsts
mov
add
mov
loope
ss
sbb
xor
mov
ds
data16
add
xor
loopne
es
stos
decb
mov
mov
cmp
scas
pop
mov
xchg
mov
imull
pushf
int3
hlt
clc
mov
mov
dec
nop
push
adcl
lret
out
cmpb
into
inc
in
mov
gs
inc
dec
push
je
mov
dec
adc
pop
rcrl
mov
fstl
push
ljmp
or
loopne
out
subl
mov
pop
and
dec
aam
std
mov
repnz
inc
mov
dec
fldt
cmpsb
leave
sbbb
push
daa
lea
enter
lahf
pop
repz
cmp
mov
mov
imul
outsb
and
fldcw
sub
fiadds
jbe
rcll
cmp
pop
jl
inc
ret
mov
ss
aas
jmp
shlb
xchg
pop
sbb
roll
lret
leave
xlat
pop
xchg
into
gs
aas
stos
shlb
lcall
sbb
push
push
daa
sbb
je
sti
adc
sbb
jge
imul
in
push
xlat
dec
fldl
push
xchg
and
cmp
ffree
mov
push
cwtl
icebp
mov
push
dec
sub
jns
fisubrl
decl
out
push
fldenv
lcall
mov
shrl
ret
xor
outsl
dec
sub
xchg
xchg
lcall
scas
std
aam
push
dec
and
ljmp
fdiv
add
mov
scas
and
sub
xor
lods
out
jg
js
xchg
gs
adc
outsb
cmp
lahf
decb
dec
and
popf
and
sub
xchg
sub
loopne
mov
sbb
mov
dec
ds
jg
cmp
mov
in
lds
enter
jno
popf
xor
int
dec
xchg
rcl
xor
sub
cmp
jae
cli
sub
fistl
jo
xchg
inc
lds
scas
dec
call
lahf
mov
pop
out
ljmp
sub
pop
subl
movsl
or
out
or
in
jae
test
lahf
iret
and
xor
and
push
cmp
and
mov
fiaddl
sub
pop
pop
push
sbb
dec
lea
inc
jl
jecxz
iret
and
and
dec
loop
cltd
pop
call
mov
iret
jp
daa
loope
pushf
pop
pop
dec
mov
pop
push
out
dec
pop
jle
jg
hlt
cmove
ja
fdivs
das
repnz
jno
testb
cwtl
mov
ret
xor
xchg
pop
test
and
dec
cmp
push
inc
add
into
mov
stc
fstl
test
out
jne
imul
dec
mov
add
adc
addb
addr16
pop
fdivrs
andnps
orb
jle
ret
dec
jmp
xchg
cmpsl
popl
test
call
mov
jae
mov
stos
jae
pop
xchg
call
xchg
sub
sub
negb
adc
jle
sbb
dec
pop
xchg
push
inc
mov
shrl
cld
aaa
int
xchg
loopne
lcall
mov
fs
dec
popf
fldt
mov
push
push
inc
add
enter
out
jmp
dec
cmpsl
cmp
mov
jmp
pinsrw
sbb
sbb
push
inc
cmc
push
or
add
orl
pushf
mov
ret
sbb
mov
leave
arpl
mov
out
in
cmp
add
sub
mov
add
xor
loop
adc
mov
fsubrs
jnp
xchg
fdivs
nop
in
rcll
pop
mov
dec
cld
out
xchg
pop
push
jae
push
xorb
movsl
scas
movsl
rclb
sbb
pusha
fistps
repz
lahf
inc
mov
leave
outsb
lea
xchg
inc
sbb
adc
cs
add
jnp
addl
sub
movb
xor
push
stos
xchg
inc
test
mov
xor
stos
xor
out
enter
sbb
fcmovne
cmpsl
das
repnz
inc
mov
xchg
inc
aam
jo
rol
rcrb
shlb
stos
push
bound
out
lret
pop
les
mov
ds
jb
jne
add
mov
outsl
xchg
jno
pop
sbb
cmpsl
mov
test
sbb
jno
mov
mov
int
fsub
sub
lret
xchg
mov
cmp
mov
mov
arpl
or
setle
inc
adc
xor
sahf
frstor
sti
rolb
repnz
push
jbe
sub
cld
xor
jmp
imul
aam
mov
stc
mov
xchg
inc
xchg
in
adc
push
add
lods
push
outsb
add
sahf
or
movsb
mov
push
xchg
out
in
mov
mov
xor
sub
adc
insl
cmp
popf
mul
fbstp
ret
adc
mov
cmpsb
and
imul
pop
xor
sbb
pop
add
int
sti
jecxz
ds
cmp
add
sub
add
or
jne
in
push
rolb
fdivl
mov
lea
adc
outsb
inc
sbb
je
pusha
mov
fcomps
sbb
mov
sub
adc
test
xchg
add
sbb
mov
mov
mov
mov
push
cmp
push
jge
add
and
mov
fnstenv
shrb
rolb
pusha
cvttps2pi
ja
add
dec
andb
push
mov
sbb
add
or
inc
das
lcall
push
sbb
xchg
jle
sub
jae
adc
ja
lahf
jp
lcall
fdivs
je
inc
pop
cli
mov
arpl
mov
xchg
adc
scas
das
popa
negl
std
aam
andl
stos
dec
pushf
jne
mov
push
inc
mov
inc
mov
push
pop
test
std
xchg
sbb
add
dec
cwtl
xchg
adc
adcb
repnz
inc
dec
mov
enter
push
lea
stc
mov
jecxz
sbb
pop
pusha
cmp
mov
ja,pn
cmp
fcomps
push
or
popa
mov
sub
xor
or
fiaddl
add
jecxz
in
dec
aas
pop
xor
fidivrs
mov
mov
pusha
out
lds
test
push
rorb
lds
cmp
decb
fiadds
adc
out
mov
das
mov
inc
std
or
push
mov
ljmp
into
movsb
xor
jb
xlat
lds
in
imul
xchg
int3
dec
out
fistpl
out
jecxz
fldcw
aam
sbb
mov
sub
ret
xchg
ja
negb
mov
adc
iret
ss
out
cmp
dec
out
jae
ret
rcll
dec
or
lds
cmc
mov
fwait
cmc
push
push
inc
rcrl
lods
or
fcompl
fidivs
jbe
jecxz
dec
cld
push
mov
ficoms
inc
outsl
inc
fsts
or
inc
in
add
test
inc
sub
fcompl
inc
ja
pop
flds
test
cmp
loopne
ss
leavew
mov
mov
mov
pop
pop
in
dec
mov
ljmp
mov
dec
add
sbb
in
test
xchg
xchg
cmpsb
roll
test
mov
pop
int
add
adc
pusha
or
sahf
stos
mov
xlat
jbe
das
jle
adc
shl
stc
adc
xor
mov
push
inc
push
cmp
pop
cmpl
sub
inc
jg
aaa
out
cltd
pop
rorl
push
stos
or
sub
mov
mov
negb
rol
dec
sbbb
mov
sbb
dec
addr16
and
in
jae
leave
pop
test
aaa
pop
xor
adc
test
das
jns
fwait
and
cmc
mov
mov
iret
mov
arpl
sbb
mov
mov
pop
pop
sbb
inc
int3
negl
fdivrs
lds
mov
mov
data16
inc
and
pop
aad
sbbl
add
aas
int3
bound
gs
xchg
aaa
adc
cmp
mov
push
testb
and
outsl
outsb
or
ret
jg
dec
jmp
in
adc
mov
sub
mov
mov
pop
in
and
mov
sub
xor
pop
jb
imul
in
pusha
and
imul
cltd
les
pop
clc
dec
mov
andb
bound
dec
imul
sub
dec
xor
push
movsb
repnz
mov
mov
lcallw
fsubrs
leave
shll
xor
leave
push
negb
inc
jmp
mov
jecxz
mov
ret
sub
push
cs
xor
pop
mov
iret
jge
cltd
xchg
push
pop
cmpsl
sub
mov
xor
push
icebp
out
ret
outsl
and
or
inc
lret
xchg
inc
pop
rorb
arpl
bswap
push
xlat
mov
stc
dec
inc
inc
cli
cmp
daa
out
inc
xlat
sarl
fisttpl
ds
inc
jns
adc
stos
xchg
popf
cmpsl
push
pop
in
clc
jge
lds
xchg
stos
dec
mov
stc
mov
push
repnz
idiv
mov
pop
mov
mov
cmpsl
sti
cwtl
repz
sbb
push
stc
clc
pop
in
lds
lret
jae
into
and
cltd
xor
cmc
inc
mov
xor
pop
jle
insb
aam
adc
dec
mov
es
sbb
mov
cmp
xor
std
out
mov
scas
push
or
mov
fstpl
out
xor
shlb
iret
xchg
xchg
sub
sbb
sti
incl
mov
shrb
xchg
mov
fsubs
int
jne
inc
test
add
enter
cltd
int3
incb
xchg
jnp
shlb
or
adc
cmp
in
in
orl
mov
lret
rcrb
mulb
pop
pushf
sbb
add
push
sbb
and
imul
loop
dec
jb
xchg
jp
popa
sbb
ret
xchg
ss
pop
and
lock
adc
arpl
inc
xchg
or
or
mov
inc
push
jge
mov
pop
clc
add
iret
jnp
sbb
lock
mov
mov
xchg
or
sti
adc
data16
fldt
fnstsw
jo
jmp
mov
mov
mov
andl
and
jns
push
cwtl
and
add
cwtl
and
imul
dec
testl
js
jb
adcb
push
jp
dec
sbb
pop
adc
dec
add
ss
pop
jecxz
adc
mov
xor
inc
sbbb
mov
stc
and
pop
mov
push
jge
adc
fdivrs
mov
xchg
pushf
outsl
mov
xchg
repz
push
fdivp
push
js
lahf
mov
sbb
cld
add
dec
lahf
sbb
dec
mov
test
int3
jge
pop
mov
arpl
xchg
cltd
sub
mov
call
lcall
push
daa
test
testb
jno
push
jmp
in
in
pop
sbb
ret
sub
xor
push
mov
lea
jbe
sub
and
jge
cmp
fildl
sub
xchg
ja
test
push
cmpsb
cmovne
fstps
call
xchg
pusha
push
push
lahf
jns
hlt
and
mov
lret
enter
inc
cmp
sub
pop
sub
std
mov
in
mov
mov
xchg
js
fidivl
clc
pop
cli
mov
repz
pop
push
popa
andl
cmc
idivb
notl
jno
sub
sarl
aas
shlb
jb
add
dec
inc
pop
mov
and
jo
das
rcrl
sbb
or
xlat
pop
aaa
mov
nop
jge
sbb
cmc
and
shr
lret
mov
pop
out
add
adc
sbb
repz
jae
push
or
mov
lods
fs
jns
aaa
push
inc
into
push
fdivrs
xchg
out
mov
pop
lahf
jl
jecxz
test
in
outsb
or
loope
jnp
sub
es
pop
andl
mov
mov
leave
insb
pop
aas
out
aam
in
testb
mov
or
inc
inc
cmpb
daa
dec
add
mov
js
pop
cld
in
add
adc
aas
pop
inc
jl
or
inc
popf
push
stc
aas
in
and
sub
data16
xchg
repz
dec
movsl
cmpsl
cwtl
movsl
dec
cmpsl
cmpsb
add
inc
pop
movsl
fists
ljmp
fstps
pusha
out
xor
psubb
push
outsb
insb
rcll
divb
fnsave
adc
cmpsl
decl
jns
mov
imul
jmp
xor
jae
arpl
sbb
lahf
cld
imul
in
scas
cmc
dec
or
dec
mov
stc
push
dec
push
xchg
and
xor
aam
popa
sbb
popa
data16
mov
adc
lcall
pop
mov
repnz
gs
mov
mov
sahf
dec
adc
stos
push
and
inc
mov
mov
repnz
mov
mov
icebp
cmc
pop
add
inc
and
sub
std
ficoml
pushf
sahf
inc
lock
push
push
jmp
and
mov
mov
montmul
cmpsb
lds
cli
out
xor
lcall
das
pop
out
movsl
mov
xchg
push
mov
in
push
push
mov
jle
jg
mov
xchg
loopne
cltd
repz
out
xchg
inc
mov
mov
mov
jmp
jae
imul
fwait
test
mov
mov
pop
jbe
je
mov
daa
push
testl
scas
aaa
aad
dec
pop
rcrb
jae
pop
xchg
cmpb
scas
outsl
adc
enter
inc
or
mov
adc
jl
adc
jo
and
mov
sub
in
loope
imul
inc
inc
add
and
push
nop
jg
jecxz
xchg
push
insl
cmpsl
repnz
sbb
mov
push
gs
shlb
dec
mov
jns
cmp
mov
mov
mov
inc
xchg
arpl
fstps
add
into
fcmovbe
adc
imul
dec
inc
lods
jno
sbb
jbe
cld
testb
dec
cmp
xchg
sbb
jbe
roll
imul
mov
int3
jmp
jno
ret
leave
negb
jns
iret
add
adc
dec
add
jl
adc
ror
int
loop
les
push
lock
push
inc
and
jmp
lods
adc
lahf
cmp
int
sbb
pop
push
paddd
cltd
xchg
call
adc
pop
mov
mov
int3
cmp
push
push
pop
das
in
popf
sub
mov
imul
jbe
cltd
out
lea
jne
xor
jb
sub
call
push
push
xor
xchg
push
xchg
push
mov
xor
lcall
adc
fcompl
or
mov
xor
lcall
sub
inc
mov
add
push
mov
jns
sub
add
mov
push
jle
lds
pop
xchg
insb
aad
xor
xchg
cmp
stc
sub
pop
xor
mov
adc
inc
pop
pand
and
sti
shrl
popa
enter
test
sub
loope
xchg
and
cmp
in
ss
loop
shll
fadds
lahf
push
imul
pop
push
lods
mov
aam
in
in
mov
pop
shrb
add
pop
xor
fldl
orl
ret
sub
sbb
mov
cmp
pop
sub
adc
outsb
cmp
push
sbb
popf
xor
adc
popf
adc
icebp
dec
cwtl
push
inc
dec
add
or
cwtl
hlt
and
sarb
outsb
ficoms
fldcw
stos
ss
call
cmpsl
aas
mov
arpl
hlt
add
movsb
popa
outsb
orl
stos
mov
sbb
addr16
outsb
fcoms
std
dec
push
sub
pop
inc
xor
push
cwtl
and
shll
insl
rcl
xchg
sub
xchg
mov
inc
sbb
xor
dec
jb
sub
ret
insb
imul
add
aam
fsubs
add
mov
sbb
or
roll
mov
and
jo
cltd
aam
sub
shrl
sub
pusha
sub
orl
aaa
outsb
push
cmp
test
ret
and
aad
push
xchg
icebp
xchg
stos
or
into
into
jecxz
gs
ds
adc
out
test
js
enter
jecxz
cmc
mov
fcomi
fdivrs
xor
adc
dec
sub
adc
cmpsl
in
sbb
scas
jmp
sbb
adc
adc
ror
rcrl
jne
test
test
add
or
pop
stc
lret
sub
xchg
xchg
fbld
adc
cmp
xchg
repz
nop
jmp
outsl
inc
fs
lods
adc
out
mov
lret
fistl
cld
adc
pop
sub
pushf
cmp
inc
add
inc
js
sahf
cmp
fstpl
mov
scas
in
push
loopne
inc
enter
mov
pushf
jl
aam
xchg
pop
adc
rorl
aad
cmp
sub
lods
push
jmp
gs
ds
and
xor
mov
adc
fstps
mov
addr16
pop
sbb
std
pop
rorb
stc
filds
pop
sbb
adc
out
or
dec
rorb
cmpsl
push
mov
imul
ud0
fidivl
icebp
pop
push
icebp
push
mov
xchg
insb
pop
arpl
sbb
jnp
or
pop
idivl
aam
ljmp
or
dec
mov
xchg
jecxz
jle
push
pop
dec
test
lods
mov
sti
adc
add
sub
insb
mov
or
xor
enter
pop
stos
inc
add
in
ficompl
push
dec
insl
pop
push
mov
xchg
repnz
push
or
loopne,pt
pop
cmpsb
insb
cmp
pop
or
lret
ja
pop
pop
test
pop
or
sahf
xor
add
js
outsb
in
jmp
jmp
mov
enter
fwait
std
adc
pop
addr16
out
and
lds
mov
pop
wrmsr
into
inc
mov
sbb
loop
and
jl
ss
xchg
test
and
jbe
andb
or
cmp
inc
mov
inc
and
stc
lock
in
mov
dec
aas
sub
add
lcall
dec
sbb
and
bound
jbe
out
cwtl
xchg
mov
jne
or
jbe
mov
cmpsb
iret
mov
cmp
push
adc
imul
notl
popf
cmp
add
shrl
fsubp
pop
push
push
in
push
fcom
pop
repnz
inc
dec
mov
mov
push
mov
cmpsb
rorb
dec
mov
jle
jp
pop
cmpl
lods
enter
mov
scas
pop
popa
pop
mov
push
cmp
push
imul
pop
aam
enter
pop
bound
add
je,pt
fistl
loopne
fdivl
xchg
jno
lods
pop
push
dec
lcall
mov
ret
loop
xor
lcall
das
inc
popf
sub
lods
imul
jge
pushl
aad
xchg
lret
xchg
ljmp
andl
movsb
inc
pop
and
adc
fwait
ror
inc
sbb
dec
mov
ds
fiaddl
pop
mov
shl
call
jmp
fwait
and
cmp
int
mov
and
add
orb
xor
daa
mov
dec
aaa
aas
inc
inc
dec
std
clc
aad
mov
ret
pusha
data16
pop
sti
xchg
arpl
movsl
cli
stos
pop
cmp
or
mov
xchg
mov
xchg
mov
push
xchg
or
cmp
outsl
inc
jno
shlb
fdivl
aas
xor
mov
push
push
and
or
mov
movsl
fisttps
pop
xchg
xor
popf
mov
mov
rorl
xorb
mov
scas
lods
sbb
lds
shrb
shlb
push
xor
sbb
out
mov
enter
jmp
loope
testb
add
pusha
jge
in
add
dec
dec
dec
push
or
sbb
movsb
sub
mov
push
cmpsb
arpl
fs
out
add
mov
inc
rol
adcb
aad
insb
adc
inc
in
mov
hlt
adc
cmpsl
ljmp
int3
ss
jbe
in
jnp
sub
int
cli
xchg
test
shrb
pusha
add
cmpsb
fs
imul
cmp
mov
adc
xchg
inc
and
out
cmp
xchg
gs
lods
lret
mov
jo
pop
cmpsl
mov
sti
imul
cld
popf
outsb
arpl
into
or
sub
int3
out
inc
mov
adc
mov
jmp
rep
cmp
fcom
jecxz
push
mov
inc
pusha
inc
push
pop
ss
into
dec
adc
sub
push
cmp
jnp
jmp
pop
jecxz
lret
fiaddl
mov
push
test
cld
sbb
mov
clc
and
add
fidivl
jl
iret
jle
dec
push
std
mul
cmp
enter
sbb
jmp
in
sub
stos
pop
pop
adc
cmp
pop
jo
movsl
xor
inc
call
jmp
rcr
xchg
repz
cmp
inc
mov
daa
push
add
andb
test
and
leave
adc
imul
dec
lcall
sbb
cmpsl
add
mov
or
shl
push
sbb
mov
xchg
xchg
call
movsb
insl
fistl
pop
cmp
ret
testl
inc
and
and
fwait
jl
sub
push
jo
testl
mov
mov
add
ja
xor
xchg
add
jge
movl
mov
js
fs
push
and
dec
jns
sub
dec
icebp
jae
push
xchg
push
xchg
inc
xor
and
movsl
sti
jecxz
jle
inc
cmp
fstpt
sti
pop
mov
and
pop
es
loop
sbb
pop
push
mov
data16
push
int3
xchg
into
lods
dec
fsub
ss
fsubr
push
adc
inc
push
out
xchg
cmpsb
mov
adc
adc
icebp
scas
cmpl
mov
push
sbb
ljmp
fcomp
push
jne
sbb
jg
fisttpll
sub
and
call
or
mov
and
add
jo
inc
xchg
push
ljmp
mov
mov
mov
cwtl
fs
test
and
dec
ret
lds
sbb
cmp
jmp
mov
xorl
mov
ds
push
shl
pop
push
mov
test
dec
movsl
enter
xor
inc
inc
xlat
inc
les
insb
push
mov
mov
mov
mov
adc
pop
orb
leave
rclb
adc
ds
into
jecxz
push
fs
jnp
xchg
pop
ds
cmc
jno
test
outsb
pop
sahf
test
push
loop
lods
test
daa
test
push
js
add
data16
xor
lcall
ss
ret
out
in
test
pop
ja
pop
popa
fsqrt
iret
mov
dec
cs
xchg
cmp
mov
flds
pop
push
test
pusha
xor
pop
std
das
imul
mov
sbb
stc
jne
mov
xor
pushf
cmp
das
mov
jns
sbb
or
test
dec
mov
sub
xor
lods
or
pop
pop
add
add
cmp
mov
cmp
ja
cwtl
cwtl
xor
lcall
push
jbe
mov
pop
loopne
lret
fistpll
push
imul
mov
mov
aam
fwait
xchg
repnz
jnp
mov
in
jge
xchg
lcall
mov
inc
lock
mov
adc
mov
dec
repz
adc
inc
pop
push
sbb
imul
jns
faddl
mov
sbb
push
adc
cmp
fiaddl
shlb
and
inc
mov
sub
cwtl
insb
pop
sbb
sub
and
loopne
mov
xor
push
inc
imul
cmp
out
pop
add
xchg
inc
call
data16
jmp
lock
and
fcos
adc
mov
fucomi
mov
jnp
cli
sub
sub
insl
mov
aas
xchg
divl
push
inc
div
ret
in
dec
aad
js
loopne
popf
enter
jecxz
rcll
xchg
dec
jg
xchg
stos
dec
sahf
pop
ds
inc
leave
enter
ljmp
loop
inc
jge
push
ficoml
inc
sarb
push
add
jl
xchg
jle
inc
sub
adc
cli
xchg
fbstp
repnz
xor
adc
sbb
inc
push
mov
push
sti
push
es
mov
add
sbb
cmpsb
adc
ljmp
jge
sub
and
jecxz
subl
adc
sbb
frstor
adc
cmp
or
mov
jecxz
adc
cmp
hlt
cmp
xor
divb
sbb
cmpsb
dec
es
loopne
enter
in
clc
dec
lret
inc
xor
inc
imul
sbb
ljmp
out
test
lods
jb
repz
and
push
stos
inc
and
cmp
jmp
xor
scas
adc
int
xor
mov
pop
mov
xchg
cmp
or
dec
iret
mov
mov
mov
es
inc
aaa
add
cs
popf
xchg
dec
shlb
push
icebp
mov
or
pop
data16
cmp
and
popa
jmp
aam
repz
test
test
movsb
pop
insb
cmp
push
aaa
and
adc
out
imul
daa
lea
test
push
pop
mov
stos
inc
or
jl
mov
gs
mov
fisttps
adc
xlat
rolb
ss
xor
aam
ja
scas
inc
repnz
enter
lahf
jo
rorl
push
testl
mov
outsb
fwait
sub
lods
pop
jg
inc
or
mov
cmc
clc
mov
mov
mov
popf
pop
dec
loop
inc
xchg
clc
aad
je
mov
jmp
mov
and
fcmovnbe
jl
dec
test
test
xor
sbbl
fldenv
xchg
and
int
sub
mov
inc
das
and
push
fists
addr16
push
xchg
ljmp
xchg
in
int
inc
xchg
lahf
add
sbb
or
jns
xchg
je
dec
cmpsb
std
mov
or
rcrl
fildll
adc
scas
mov
ficompl
fwait
ja
add
sub
and
ret
enter
xor
mov
fsubr
xchg
mov
push
pusha
cs
and
lcall
call
pop
lret
and
cmp
add
xchg
test
aad
sbb
out
fwait
dec
popf
dec
ret
scas
mov
aaa
xchg
lods
leave
lods
adc
mov
dec
loope
repz
xchg
sarl
cmp
aad
add
or
ficompl
in
jecxz
or
adc
sbb
sbb
in
pop
gs
fstps
adc
add
mov
lcall
xor
js
push
aaa
lret
lahf
mov
pop
mov
pushf
test
cmp
cmpsb
sbbl
push
mov
xchg
jns
rcrl
add
js
mov
sarl
out
stos
cmp
inc
xchg
pop
xor
inc
addl
sti
lock
addr16
in
popf
std
push
outsl
mov
adc
jge
gs
cli
cltd
pop
sbb
pusha
into
mov
arpl
jnp
test
add
and
hlt
inc
int3
nop
add
mov
jl
andl
mov
int
das
sbb
dec
data16
sbb
jne
jg
into
sbb
jae
jge
cltd
lods
movsl
jb
or
imul
dec
out
mov
push
pop
lret
mov
rcrl
aas
shrl
std
mov
and
insl
outsb
sub
push
cmp
data16
pop
ljmp
pop
cmp
cmp
das
icebp
sub
dec
cmp
dec
fcmovne
pusha
sub
dec
ds
xchg
imulb
jno
add
jo
lahf
dec
mov
mov
push
js
loopne
enter
sarl
mov
jns
push
divl
xor
in
xchg
push
pop
pop
mov
adcb
inc
xor
mov
cli
and
lahf
lcall
rol
pop
xor
mov
daa
jmp
shlb
ficoms
mov
into
imul
ds
call
inc
call
dec
insl
cmp
mov
out
adc
cmp
add
hlt
loop
sub
inc
in
arpl
lods
jnp
adc
hlt
jecxz
imul
clc
ret
popf
mov
xor
xor
ffree
into
or
dec
mov
test
insl
jle
fsubrp
xchg
repz
jb,pn
scas
jecxz
pop
fmull
ja
js
mov
and
adc
mov
jns
add
lea
cmpsb
pop
ja
in
pushf
js
imul
sbb
popa
cmc
scas
mov
mov
insb
aam
sub
aas
jmp
out
cmpb
fwait
pop
imul
loopne
fcmovnbe
fidivl
cld
xor
bound
imul
sbb
icebp
mov
lret
push
xchg
subb
test
out
jnp
adc
and
mov
sarb
adc
mov
dec
push
dec
pop
jg
inc
or
mov
jo
or
pop
stos
out
xchg
std
test
push
mov
stos
aas
aaa
push
rcll
insb
das
or
in
out
neg
cmp
shlb
adc
stos
mov
sub
lahf
or
sbb
int3
cmp
xchg
sti
sbb
lret
mov
adc
je
or
sub
sbb
and
xchg
pop
cltd
imull
out
inc
add
imul
inc
push
mov
sbb
sbb
pop
aad
pushf
sti
inc
inc
and
xor
inc
pop
jle
add
jb
cmpsb
push
fisttps
test
rorb
mov
loopne
sub
push
jge
arpl
pop
es
or
jbe
jl
ds
mov
cli
push
int
xor
les
cli
mulb
arpl
rclb
inc
mov
outsb
push
and
or
insb
nop
cmp
sbb
out
push
jnp
pop
rol
les
push
out
mov
sbb
popa
jae
movsl
test
ror
adc
pop
std
aaa
lds
cmp
cmpb
aam
das
cwtl
call
test
lret
xchg
sbb
lret
fistl
dec
inc
sbb
mov
int
push
jb
push
lret
pop
adc
lahf
add
jl
addr16
xchg
xor
push
popf
or
cmpsb
fidivrl
lret
mov
xchg
xor
mov
movb
andl
fimull
imul
inc
addb
cld
out
adc
push
fdiv
jle
cmp
add
popf
or
aaa
push
push
xchg
fs
test
rcrl
add
cli
sub
cmp
push
icebp
in
cmpsl
sbb
loop
dec
xor
jne
imul
cli
xchg
mov
dec
clc
and
hlt
arpl
fs
pop
and
jne
dec
jb
outsb
stos
cmp
mov
and
sbb
pushf
sahf
dec
repnz
cwtl
and
imul
sbb
mov
pusha
add
sahf
mov
int3
push
inc
or
or
or
sbb
das
jecxz
lea
imul
xor
jg
cwtl
movsb
imul
loop
pop
popf
aam
sub
lods
add
ss
sbb
xchg
fldcw
adc
stos
jb
dec
aam
mov
pop
imulb
out
and
jg
jp
ds
fnstenv
inc
scas
jo
xchg
push
mov
mov
cmp
mov
sub
cmc
pop
cmp
jecxz
and
xchg
lahf
adc
add
and
sti
fldcw
mov
hlt
and
jo
insl
or
hlt
lods
jl
jb
lds
push
inc
in
xchg
xchg
xchg
sarb
call
rcl
inc
std
aas
loop
add
inc
pcmpgtd
mov
cmc
mov
jl
mov
imul
adc
dec
jno
repnz
xchg
or
jl
push
lock
mov
outsb
adcb
push
xchg
call
and
loop
dec
jge
or
xor
mov
cs
sub
outsl
xchg
test
push
flds
dec
iret
sub
aad
xchg
data16
lcall
xchg
push
xchg
sub
xchg
popf
test
mov
and
xor
pop
pop
jle
xor
and
loope
aas
add
stos
cmp
dec
push
sub
sbb
add
repz
pop
cltd
push
addr16
mov
cmpb
mov
mov
aad
dec
jno
lret
xchg
fwait
leave
mov
js
jbe
xor
ret
in
loope
insb
rorl
and
mov
sbb
in
fdivs
adc
incl
pop
int
imul
and
sbb
in
dec
fmuls
sub
cmp
sbbl
icebp
mov
xchg
lahf
sub
inc
mov
mov
jns
fstpl
mov
clc
adc
xchg
lds
inc
pop
and
aad
addr16
roll
push
lods
imul
jno
inc
in
lea
iret
aam
inc
mov
mov
loope
pop
cmp
mov
mov
dec
out
xchg
das
nop
mov
add
adc
cmp
fcoms
push
pop
mov
xchg
jecxz
cmp
lods
lods
sti
mov
mov
je,pn
or
cmp
cld
push
or
xor
js
pop
inc
xor
and
cmp
cmpsl
mov
inc
mov
push
dec
pop
repnz
mov
add
iret
call
jmp
push
fbstp
and
push
out
push
xor
lret
inc
insb
aam
sti
jb
jge
aas
sub
gs
add
mov
mov
pop
mov
daa
push
ret
pop
mov
lahf
in
inc
mov
sub
jb
xchg
cmc
push
lret
addps
out
lods
rcrl
leave
nop
mov
jp
pop
dec
inc
adc
pop
or
fsubrl
jno
push
push
jg
xchg
cmp
push
dec
lret
cmpsl
push
jg
js
sub
outsl
pop
imul
stos
push
jo
jecxz
adc
push
cmp
aad
imul
aam
lea
pop
std
jae
cmp
xor
pushf
call
loopne
or
lcall
les
shrb
cwtl
insl
cmc
test
js
sti
fnstcw
int
ret
and
sbb
xor
or
and
sub
leave
cwtl
inc
arpl
adc
jbe
sbb
ret
les
mov
jp
cmp
hlt
dec
mov
testb
jle
iret
push
mov
in
mov
dec
ja
test
fmuls
xchg
jne
rolb
out
sbb
xchg
lock
setae
aaa
inc
sub
jle
mov
test
xor
cmc
rcll
pop
inc
fdivl
add
mov
scas
mov
pop
xor
add
dec
repnz
adc
fldcw
in
mov
mov
xor
shrl
out
nop
inc
cmp
xorl
push
pop
pop
es
aas
aas
xchg
jmp
jae
inc
sbb
xchg
sub
aas
mov
mov
mov
in
jl
int3
push
std
test
and
jne
adc
mov
shll
lcall
or
in
cli
or
std
sbb
lret
dec
add
cmp
fidivrs
mov
or
mov
ja
cmp
es
jno
test
or
cmp
xchg
sub
sub
push
je
cmp
sti
stc
pop
sub
and
cmp
ret
enter
in
idivl
mov
xchg
cwtl
mov
and
xchg
jmp
inc
imul
test
jg
loope
fmull
cmc
iret
jo
sbb
push
cwtl
dec
pop
xchg
hlt
stos
jge
mov
cs
orl
das
addr16
push
xchg
lret
inc
add
orl
xchg
jg
sahf
inc
dec
add
mov
je
stos
repz
adc
fdiv
sub
addr16
aad
sub
inc
inc
dec
xor
xor
aas
xchg
out
int
push
clc
sbb
mov
push
xchg
inc
mov
dec
or
push
hlt
aaa
mov
mov
sbb
add
xchg
ret
shrb
sbb
and
aaa
pop
xchg
sub
or
mov
stc
inc
nop
mov
repnz
pop
ret
or
mov
mov
mov
mov
outsb
test
jg
jo
add
rcrb
shrl
cli
sbb
out
scas
pop
mov
out
sub
push
outsb
fwait
cmp
inc
int
shrl
pop
jl
add
add
mov
enter
fldl
mov
arpl
call
mov
out
or
pop
scas
iret
aam
and
jl
adc
cmovge
je
or
add
cmp
ret
frstor
scas
mov
lcall
outsb
insl
and
movsl
fiadds
inc
movsl
sub
inc
fwait
xor
out
push
fimuls
mov
mov
mov
pop
push
xor
hlt
xor
push
aam
push
sbb
inc
notb
add
xchg
dec
pop
ja
mov
paddsw
aas
push
jle
repz
cmp
cmpsb
mov
mov
inc
cmp
lahf
ds
cmpsl
or
call
pop
loope
inc
xchg
repz
xor
sub
test
xchg
pop
inc
dec
or
cmp
int3
hlt
or
imul
xchg
out
dec
testb
hlt
xchg
repz
js
pop
sbb
adc
fwait
inc
bound
xor
je
out
sub
pop
daa
pop
adc
pop
mov
add
mov
cmpsb
lahf
imull
orps
outsl
ljmp
bound
shll
push
data16
mov
outsb
adc
adcb
sahf
or
dec
jge
dec
adc
stos
jne
lods
int
lods
repz
inc
sarb
fldenv
mov
decb
loopne
mov
and
shll
push
mov
pop
ficoml
or
aaa
rcll
sbb
int3
ret
mov
mov
stos
cmp
mov
push
cmp
sbbb
scas
or
or
mov
sbb
ja
aad
es
sbb
sbb
add
cmp
out
cwtl
fistps
jno
jle
outsb
add
cli
mov
and
loop
shlb
movsl
push
push
mov
stc
inc
xchg
xor
test
xor
fidivrl
push
sub
in
push
filds
mov
cmp
pop
adc
add
clc
popf
paddsb
scas
popa
adc
test
insl
mov
cmp
pop
xor
and
xor
rcrl
scas
or
aad
dec
jmp
mov
jge
cmp
stos
rcr
inc
mov
int3
sbb
mov
lods
test
shl
stos
jp
or
fcmove
and
es
add
sahf
pop
xchg
sub
mov
into
add
add
stos
jecxz
mov
mov
fs
push
aas
and
into
cmpsb
lock
dec
xor
adc
addr16
push
loop
dec
xchg
stos
jge
fwait
out
jecxz
adc
rolb
xor
adc
adc
data16
shlb
popf
cmp
xchg
cmp
adc
dec
in
xchg
dec
bnd
xor
jle
shrl
add
or
mov
mov
mov
add
mov
call
fsubr
add
enter
test
and
mov
out
call
into
mov
push
xchg
push
jae
jne
in
ret
shl
pop
movsb
push
add
sbb
dec
cmp
inc
mov
mov
or
mov
jns
xor
data16
mov
ret
mov
pop
dec
mov
mov
ss
pop
xor
out
fistpll
movsl
sub
inc
das
mul
pusha
gs
mov
ret
mov
test
js
xchg
xchg
pop
cmp
sbb
sbb
xorl
jae
lods
cmc
mov
adcl
jo
div
movsl
cmp
adc
mov
in
jge
mov
dec
icebp
out
inc
mov
jmp
mov
roll
sbb
pusha
jecxz
aaa
insl
lret
mov
sbb
cmpb
sub
mov
negl
mov
ja
cmp
imul
lds
sub
push
mov
mov
in
xchg
fbld
pusha
sahf
fucomi
add
roll
sub
loop
shr
mov
out
push
pop
test
jecxz
cmp
mov
mov
stos
jmp
ja
fisttpll
pop
test
pushf
jae
repz
xchg
or
xor
testb
dec
xor
iret
rorl
in
push
sti
push
xchg
stos
movsl
inc
pushf
push
dec
pop
std
or
dec
les
pop
fldenv
add
mov
mov
mov
ficoml
inc
fbstp
inc
ljmp
test
call
mov
adc
cmp
loopne
ja
inc
shrl
mov
sbb
fsub
ljmp
add
xor
cltd
and
inc
addb
popf
jmp
jl
push
xchg
arpl
jbe
test
push
jae
sbb
cmpsb
lret
sub
test
ds
cli
in
std
sub
xor
inc
cmpsl
jecxz
fs
jae
cmpsl
fcomps
push
xor
insb
sub
mov
mov
repnz
fiadds
leave
inc
push
pop
movsb
shlb
jne
pusha
push
xchg
push
addr16
test
xchg
cltd
sub
inc
xchg
sub
inc
adc
jmp
in
sub
fs
fldl
push
add
or
mov
jg
hlt
sub
cmp
clc
mov
stos
daa
lds
shr
fcoml
adc
add
test
adc
inc
je
shrb
lods
push
in
rorb
mov
jnp
addr16
xor
push
adc
adc
lret
sub
jmp
dec
adc
gs
cmpb
and
inc
or
jle
stos
cmp
jg
fcoms
mulb
lcall
mov
push
lret
imul
push
test
inc
dec
push
out
pop
push
pop
or
inc
into
sbb
mov
cmpsl
push
cli
loopne
inc
jmp
add
test
popf
add
shll
call
ljmp
push
adc
lahf
sub
dec
stc
fildl
fst
orb
push
adc
jl
push
mov
iret
dec
jg
jp
ret
inc
cmpl
in
test
and
mov
cmp
les
mov
mov
mov
push
push
sbb
mov
ret
push
div
jecxz
push
mov
scas
cmp
fistps
jae
mov
and
cld
out
jno
movb
mov
inc
mov
in
xchg
xor
pop
notb
mov
add
and
in
sbb
fmul
or
lcall
lea
lods
dec
mov
adc
push
adcl
lret
jne
push
insl
mov
xor
inc
fwait
mov
mov
adc
cmc
out
jl
fs
insl
dec
ret
jp
mov
cmp
jo
pop
stos
stos
pop
test
pop
int
push
mov
test
mov
popa
sbb
lcall
daa
rclb
dec
out
test
add
stos
cwtl
ret
sub
xor
cmpb
adc
inc
mov
adc
xchg
xchg
xlat
in
fidivs
lea
add
xchg
lret
iret
loop
icebp
scas
icebp
iret
sbbb
xchg
outsb
xor
cld
xchg
cld
and
leave
clc
push
jmp
aam
dec
mov
movsl
outsl
std
ret
fisttpl
push
mov
xchg
mov
sbb
xchg
lahf
aam
imul
lock
cmpsb
pop
push
jecxz
out
fldt
cmpsl
aad
xor
or
pop
aaa
aam
scas
popf
cmp
repz
inc
insl
fsubrp
repz
rcrb
xor
sbb
shll
pop
imul
mov
xchg
out
xor
es
lret
loop
cld
mov
inc
mov
dec
lret
test
rcrb
ljmp
add
cmp
sub
aam
stc
movsl
sbb
inc
addb
repz
das
ljmp
mov
jbe
les
je
sub
das
out
or
fwait
in
or
and
and
adc
cld
add
aas
ret
repnz
or
mov
icebp
xchg
lds
inc
pop
xor
push
cwtl
pop
sbb
push
xchg
dec
pop
mov
mov
mov
movsl
mov
sar
sub
pop
and
lock
jp
sub
fwait
jbe
lcall
sbb
inc
test
mov
cmc
xchg
int3
or
call
push
hlt
cmpsl
sub
scas
fdiv
and
or
xchg
pushf
push
jbe
mov
neg
stos
xchg
mov
inc
imull
notb
mov
xchg
add
cmp
pop
adc
pop
aaa
hlt
cmpsb
outsb
sti
notb
scas
push
and
outsb
jb
mov
es
dec
dec
adc
shl
push
pop
ficoms
xor
add
inc
add
mov
dec
or
das
add
sarl
ss
mov
dec
pop
aam
and
adc
dec
hlt
or
addl
cmp
or
jle
pop
jae
jp
stos
jle
mov
mov
mov
jns
fcoml
inc
xchg
shll
sub
fstl
sbb
icebp
icebp
mov
and
inc
inc
addr16
aad
out
jl
or
rclb
push
xor
dec
out
cmc
push
lods
pop
mov
push
shl
cmp
mov
or
stc
cwtl
mov
cmovne
cltd
es
stos
std
or
js
mov
push
pop
fadds
sbb
mov
out
pop
xchg
and
mov
xor
inc
pop
test
sub
cmp
outsl
mov
lds
pusha
decb
rcr
imul
mov
inc
repnz
mov
push
popa
pop
mov
cli
fistpll
cmpsb
cltd
or
out
jle
sbb
call
pop
sbb
test
fdivs
pop
test
cmp
mov
ret
int
test
mov
push
inc
loopne
outsl
adc
sbb
or
or
push
add
rcl
sbb
shrl
lock
jae
gs
add
pop
xchg
jb
xor
push
std
lret
icebp
test
adc
cwtl
cmpsb
add
gs
sbb
repnz
pop
mov
add
fs
jo
scas
mov
xchg
dec
out
mov
or
push
mov
fnsaves
loop
cld
push
daa
mov
xor
xchg
sub
add
sub
push
inc
or
aaa
mov
jnp
sbb
sbb
les
enter
mov
and
icebp
out
out
cli
fcoms
ss
dec
mov
fcmovnb
daa
mov
mov
pop
xchg
mov
data16
mov
ss
cs
xchg
jns
fbld
jbe
fs
xor
dec
cmp
faddl
mov
pop
jo
aaa
push
stc
movsb
cld
gs
scas
inc
ss
in
data16
and
andl
xor
and
pop
add
push
pop
push
aaa
shlb
das
les
push
nop
and
push
or
lock
push
mov
ja
cmp
and
fs
iret
push
pop
mov
inc
out
and
xchg
mov
outsb
push
lock
imull
push
rcrb
xchg
sub
inc
in
inc
mov
sub
pusha
decb
iret
push
add
inc
jle
sti
mov
cltd
or
imul
mov
lock
inc
inc
and
xor
daa
rorl
xchg
pop
or
fistl
fs
dec
and
mov
int3
movsl
mov
js
push
jmp
push
inc
lahf
negb
enter
sub
push
xchg
popf
inc
mov
inc
repz
lods
out
pop
mov
loope
mov
mov
xchg
push
inc
xchg
jp
push
test
mov
pop
add
mov
out
push
fisttps
xor
pop
cmp
popf
mov
mov
mov
adc
jle
aaa
lods
sbbl
and
leave
les
dec
jge
int3
jge
ficoms
inc
popf
inc
adc
fnstsw
sti
sbb
xchg
nop
movsb
dec
push
mov
mov
subl
sub
or
xchg
popf
push
scas
inc
xlat
outsb
jp
bt
ja,pt
pop
xorl
jmp
out
in
jp
bound
sbb
cs
or
loopne
and
jge
ret
int
mov
jecxz
rolb
outsb
xchg
cli
xlat
or
cmp
sbb
cmc
jno
mov
loopne
mov
imul
add
push
adc
loop
stos
aaa
icebp
repz
hlt
in
lahf
sub
pop
imul
jne
mov
mov
fsts
insb
mov
cld
stos
xchg
cmpl
lds
push
or
rcrb
data16
lea
inc
pop
jne
mov
xor
xchg
pop
sbb
stos
push
mov
mov
pop
sbb
push
ss
nop
cli
pop
pop
jecxz
mov
push
rorl
mov
inc
pushf
or
out
inc
into
inc
sub
sbb
movsb
lcall
outsb
cmpsl
mov
ja
pusha
push
add
dec
mov
test
mov
orb
xor
jne
ret
mov
shll
push
neg
mov
hlt
ficoml
adc
mov
movsb
push
adc
lahf
push
call
stos
add
push
call
and
addb
fdivrs
mov
xlat
and
add
cwtl
pop
mov
cwtl
lods
popa
add
aaa
push
push
mov
or
adc
lods
popa
xor
mov
bound
cmp
movsl
mov
mov
pusha
mov
lods
shlb
movsb
lret
gs
mov
test
adc
popa
aam
aas
mov
arpl
sbb
cmp
rcl
xor
in
or
and
push
adc
daa
out
lret
sbb
orl
jge
jb
bound
push
adc
dec
out
adc
cmp
loop
call
dec
mov
rcr
and
mov
xor
push
or
popf
pop
xor
out
pop
sbb
mov
and
cmp
lock
pop
addl
xchg
pop
mov
cmp
push
cmp
cmc
data16
cwtl
inc
add
jecxz
in
inc
test
or
cs
inc
add
push
dec
and
test
mov
cmc
push
test
mov
mov
sub
sarl
in
aam
lock
push
dec
xchg
jbe
test
data16
push
stos
mov
sub
lcall
stc
inc
into
ds
sub
or
fsubrs
movsb
daa
inc
sub
ljmp
dec
arpl
psraw
sarl
xor
xchg
dec
or
sub
hlt
pop
out
pop
sahf
xchg
ljmp
loopne
sub
andb
fmul
and
sub
mov
dec
loope
addr16
aad
scas
cmp
aad
call
out
inc
cmp
inc
inc
mov
mov
xchg
into
xor
call
cmp
and
insb
test
jno
xor
inc
push
mov
arpl
xor
rcrb
adc
loopne
insl
and
jb
lods
out
mov
fwait
rep
pop
xor
int
mov
imul
xchg
push
jp
push
lret
out
dec
mov
or
imul
dec
arpl
jge
mov
loopne
rclb
shll
mov
push
sub
dec
push
cmpsl
xor
icebp
and
cwtl
cmc
pop
das
jp
je
aad
push
pushf
mov
bound
or
pop
sub
lcall
stos
pop
xchg
sub
out
push
or
inc
fidivrs
pop
adc
mulb
or
push
cmp
jb
sahf
cmp
rorb
and
icebp
aaa
mov
dec
sti
cld
lcall
fisubl
dec
pop
xchg
push
jbe
jae
lret
add
inc
mov
xor
jecxz
popa
pop
dec
test
sub
jge
lods
fcmovu
dec
outsb
fdivr
sub
in
movsl
je
mov
sbb
leave
pop
mov
out
push
stos
enter
sar
mov
enter
mov
test
jge
jo
sbb
sahf
mov
xchg
xchg
mov
and
rol
cltd
cwtl
jle
dec
ds
fldenv
sbb
push
fwait
dec
bound
pop
cmp
cmp
mov
not
cmpb
inc
jbe
daa
scas
sbb
jmp
sub
shr
icebp
loop
leave
enter
push
dec
int3
push
aaa
add
mov
jbe
cwtl
mov
adc
cltd
insb
test
cmc
iret
sbb
sub
test
je
pushf
and
daa
xorl
cli
push
cs
ret
or
out
push
lahf
dec
pop
mov
xor
jmp
lret
sahf
push
in
mov
in
pop
leave
xor
sub
shll
ret
insb
and
dec
pop
fsubrl
int
sub
dec
mov
mov
pop
icebp
inc
test
jae
mov
notb
inc
add
pushf
and
in
dec
lret
cmp
mov
mov
aam
dec
pop
mov
mov
xchg
or
outsb
into
inc
mov
fstps
repz
mov
add
stos
mov
cmp
mov
pop
int
mov
push
leave
jmp
addb
lock
dec
test
repz
fwait
les
jne
jg
cmp
aad
and
push
shlb
daa
es
fstl
ffreep
out
pop
cs
jl
mov
out
push
bound
mov
lock
sbbl
sbb
mov
enter
push
aaa
mov
lea
pop
pushf
and
ljmp
ja
mov
or
lret
stos
fisttpl
sti
cmpsl
fistpl
in
loopne
mov
jns
mov
pop
pushf
pusha
scas
mov
push
sub
adc
mov
inc
movsl
mov
mov
dec
cmp
mov
mov
mov
xor
repz
push
mov
mov
mov
pop
repz
popl
inc
mov
dec
sti
sub
push
fcomip
int3
dec
lds
pusha
dec
call
push
js
xchg
dec
xor
shrl
cmp
mov
xchg
es
cmpl
sub
lock
mov
pop
pop
in
xor
in
add
fsubrs
out
pop
cld
and
inc
pop
data16
sahf
iret
test
jmp
jb
inc
and
mov
mov
cli
setbe
outsb
popf
and
stos
xchg
je
xchg
repz
dec
cmp
dec
into
mov
or
es
dec
popa
jmp
jg
pop
fisubs
and
mov
loopne
icebp
movsl
pop
repz
add
je
push
and
ret
stc
push
jmp
pop
lods
pushf
mov
cmpsb
arpl
ret
je
test
adc
cmp
test
clc
inc
xchg
cmpsl
sbb
jmp
sti
or
adc
outsb
pop
inc
sbb
jmp
fucomip
test
xchg
mov
dec
in
lea
and
pop
and
jg
jle
cs
int3
mov
inc
xchg
pusha
call
sbb
dec
and
jns
iret
xor
fistps
push
mov
rorb
out
cmp
ja
cwtl
mov
xchg
inc
lahf
inc
imul
cmc
mov
jb
loopne
sbb
mov
repnz
neg
pop
jb
cmpsl
jmp
lret
aaa
sbb
and
pusha
mov
and
mov
jo
sub
adc
es
les
lahf
mov
sbb
sbb
movsl
xchg
ja
or
cwtl
mov
pop
dec
push
jg
lea
xchg
cmp
dec
mov
aaa
in
hlt
mov
pop
pop
lahf
and
sbb
insl
mov
fdivrl
cmp
push
fdivl
enter
sub
jle
mov
test
lcall
xchg
push
adc
jae
sbb
cmpsb
rcrb
sar
mov
sbb
adc
sbb
xchg
daa
dec
mov
out
sahf
and
cmpsl
dec
sub
push
aas
xchg
pop
in
addr16
or
add
test
jl
dec
and
cmp
mov
push
fcomps
pop
scas
and
xchg
daa
sbb
fmull
push
in
push
ficompl
loope
inc
cmc
aas
js
dec
inc
lds
cltd
cmc
lods
and
push
int3
dec
out
and
inc
cmpsb
cli
mov
in
push
std
xor
sbb
int
dec
sbb
mov
sbb
push
cmp
out
pop
sahf
xchg
popa
mov
sbb
pop
fcom
sub
nop
inc
jl
inc
sbb
adcl
ljmp
pusha
test
loopne
inc
xor
rclb
ljmp
sti
pop
lock
aaa
mov
add
push
mov
out
ffree
int
outsb
mov
sti
ja
scas
mov
repnz
cmp
cmp
aad
sar
jmp
loop
mov
negl
jecxz
das
test
enter
cmpsl
push
mov
imul
ja
pop
and
mov
cmp
pop
sbb
pop
dec
pushl
mov
bound
stos
enter
adc
lds
pop
push
xchg
jg
out
xchg
movsl
and
dec
into
sbb
jno
pop
test
daa
mov
loopne
xor
test
add
xchg
add
loop
dec
call
incb
ret
jo,pt
mov
movsb
inc
add
inc
jmp
adc
sahf
xor
push
inc
mov
add
cmpsb
iret
hlt
mov
push
popf
cmpsb
test
jg
jno
jl
mov
outsl
ss
das
fdivs
mov
cmp
jae
movsl
push
add
lret
aaa
movsb
xchg
mov
adc
mov
xor
and
sbb
jle
loop
testl
rol
inc
adc
out
jo
adc
out
mov
div
sti
inc
push
add
std
aas
leave
sub
mov
std
fwait
arpl
push
sbb
pop
aaa
scas
and
jo
push
jp
sets
cmp
loope
xor
xchg
pop
movsb
add
or
xchg
dec
aad
jp
push
out
inc
pop
imul
daa
mov
in
inc
push
stos
loopne
adc
adc
inc
mov
inc
dec
pop
mov
jo
cmpsw
data16
xor
in
push
jo
call
movsl
dec
cmp
push
mov
lcall
add
fwait
ds
cmp
sarb
adc
ret
pop
jmp
sub
jb
sbb
ja
push
lods
add
push
daa
dec
inc
rolb
ret
aam
aaa
mov
aam
ja
add
dec
xor
test
insl
sub
push
daa
jo
lahf
push
adc
jge
je
scas
sbb
data16
jg
and
mov
mov
add
jle
cmp
shll
pop
xor
cmpsb
out
int
cmpsb
pusha
pusha
int3
ret
call
call
cld
icebp
cmp
xchg
rolb
fldl
js
jns
sub
out
pop
loopne
and
cltd
cmpsl
mov
iret
in
je
inc
xchg
ret
jg
subb
scas
mov
stos
sahf
xchg
pop
inc
mov
adc
stos
adc
js
push
stc
push
cwtl
fidivl
gs
fst
mov
and
ds
jge
and
je
or
sbb
push
pop
dec
jno
loope
insb
popa
mov
jl
push
mov
inc
add
push
loop
test
jns
jo
scas
inc
js
sbb
sahf
push
sbb
mov
insl
ds
dec
inc
xchg
adcb
xlat
mov
test
xchg
mulb
push
sub
add
rolb
cmp
cmpb
movsl
jl
loop
xor
push
jb
out
fistps
and
mov
xchg
lods
mov
icebp
add
add
mov
outsb
int3
lods
mov
pop
dec
out
fadds
imul
mov
cli
lea
lock
loope
jp
fwait
sarl
xchg
addr16
sar
into
movsl
pop
sub
lods
or
rcll
lret
dec
add
std
in
dec
test
xor
mov
pop
lods
push
in
repnz
and
rcrl
dec
cli
sbb
ja
jecxz
int
pop
shr
les
jae
stos
inc
push
repnz
leave
or
aam
sbb
testb
push
dec
repz
adc
push
bound
ffreep
jge
sahf
and
rol
test
add
sub
jno
lods
stos
rolb
sbb
movsl
jnp
jle
dec
es
in
int
cs
dec
jp
mov
rcrl
iret
mov
and
scas
lods
into
jl
pop
cmp
lock
fidivrs
cmp
decl
sub
fs
add
in
divl
sbb
fs
call
call
cmp
mov
xor
mov
mov
int
mov
add
adc
mov
iret
fsubrs
xchg
adc
ss
pop
in
jp
insb
cmp
or
mov
and
dec
imul
stos
or
test
out
popa
xor
mov
subb
mov
gs
pop
ficoms
jle
lods
in
sbb
hlt
arpl
imul
mov
aas
adc
xchg
pop
arpl
xchg
aaa
dec
cmp
in
cmp
push
or
mov
inc
xchg
jo
sahf
das
cmp
fnstcw
sub
mov
dec
mov
loopne
ret
cwtl
repnz
rolb
subb
inc
or
mov
sub
repz
or
push
push
fldenv
jge
pop
jp
mov
xchg
cmpsl
es
lock
test
jp
test
lahf
fisttpl
in
faddl
call
sub
cli
mov
xchg
adc
negl
mov
xchg
add
jecxz,pn
stos
add
arpl
insl
mov
xlat
mov
push
pusha
pop
or
aaa
and
repnz
das
and
repz
pop
arpl
jg
or
xlat
fstl
cmpsb
ret
adc
mov
ds
test
scas
pushf
cmp
shrl
das
or
jnp
ja
out
sbb
push
mov
lret
fildll
fsubl
push
jae
mulb
add
dec
xor
shl
or
ja
ror
or
rclb
xchg
adc
lret
movsb
pop
mov
les
lods
xlat
sbb
lods
xlat
adcl
sbb
addl
mov
mov
ja
push
push
or
ret
and
adcb
inc
dec
scas
xor
xchg
lds
lahf
mov
inc
xchg
pop
xchg
insl
mov
push
test
jae
lcall
or
sbb
cmpsb
lcall
push
or
jg
repz
jecxz
mov
pop
in
jo
mov
inc
movsl
in
sbb
lret
adc
out
sub
jle
sub
ja
inc
loope
mov
push
lock
shlb
stos
sub
aad
jb
rclb
adc
popa
mov
pop
out
es
fsubrl
fiaddl
adc
ret
test
inc
iret
mov
lcall
push
push
push
inc
cli
je
arpl
fiadds
inc
inc
stos
mov
fbld
cmp
fstl
into
shr
jnp
adc
add
xor
jne
je
divb
insl
loop
in
sub
out
jae
cwtl
add
xchg
push
pushf
ja
mov
or
xchg
pop
insb
gs
mov
pop
cmp
pop
mov
mov
cmc
xchg
pop
sub
sahf
stc
orb
fstpt
xor
mov
sub
jmp
add
jb
mov
dec
jo
mov
daa
rclb
fdivl
mov
inc
lcall
inc
push
cmpsb
sub
mov
cmp
ljmp
in
or
outsb
sbb
cmp
cmpb
xor
insl
cltd
ss
outsb
repnz
arpl
stc
and
std
xchg
sub
outsl
or
sub
int
mov
or
leave
repnz
xor
test
std
add
mov
lea
out
pop
inc
add
or
sar
push
add
jb
loope
sub
pop
xchg
xchg
daa
cmpsb
pop
push
loopne
cmp
in
xor
cmpsb
fs
mov
sub
mov
je
mov
fwait
sarb
add
cmp
xor
mov
mov
pop
adc
loopne
sbb
inc
jae
xchg
int
inc
in
adc
addl
mov
push
arpl
or
mov
testb
faddp
cmp
repz
cltd
add
das
push
gs
cmp
mov
xchg
test
mov
in
xchg
into
mov
jl
out
lods
repnz
ret
test
adc
out
mov
cmp
mov
mov
pop
adc
leave
movsb
jae
mov
xchg
imul
dec
scas
xor
or
sub
dec
push
clc
jne
jg
add
push
es
pop
or
push
addr16
push
add
repz
add
jno
dec
inc
outsb
outsb
outsb
pop
pushf
sti
push
xor
add
sar
lock
ficoms
mov
xchg
daa
mov
mov
adc
jecxz
and
sbb
jo
lret
cmp
lret
arpl
dec
mov
verr
cmc
push
outsb
mov
mov
gs
push
or
iret
icebp
mov
scas
adc
addb
jae,pt
mov
rclb
out
jp
mov
jb
std
xchg
jnp
shl
int3
cwtl
popf
adc
loop
sahf
daa
sbb
mov
xor
inc
add
fimull
inc
mov
das
or
inc
bound
fistpl
inc
out
pop
xchg
or
jl
call
fmul
push
sbb
xchg
xchg
sbb
sti
frstor
pop
js
jne
cmpsl
cmp
subl
addr16
fidivs
and
mov
into
mov
adc
jno
aad
mov
repnz
cli
scas
in
xchg
es
pop
sub
insl
mov
push
pop
jecxz
clc
enter
mov
and
sub
xorb
and
pop
mov
fwait
push
mov
jb
gs
sub
pop
fists
xor
xor
les
jg
popa
fidivrl
shrl
push
aad
sbb
mov
pop
bndldx
pop
jno
mov
push
mov
pop
inc
xchg
bound
test
xchg
cmp
test
dec
sub
rolb
cmpsb
cltd
jbe
adc
into
jecxz
flds
mov
xor
int
inc
fcmovbe
fstpt
rcrl
popf
push
push
in
add
mov
push
sbb
add
inc
int
in
out
jb
cltd
xlat
inc
inc
dec
pop
icebp
push
cwtl
cwtl
mov
aas
dec
in
sbb
ffree
inc
aaa
fmulp
dec
inc
and
iret
in
xor
cmc
inc
jno
push
add
adc
xchg
repz
inc
insb
sub
mov
fcom
xchg
lcall
inc
setg
inc
hlt
xchg
mov
xchg
and
add
les
rcrb
xchg
dec
cmp
bound
icebp
dec
es
mov
aam
mov
pop
adc
mov
or
shrb
cmp
and
sub
add
outsb
out
mov
pop
adc
mov
xchg
frstor
ret
jle
out
ret
xor
adc
shl
out
aas
icebp
subl
fidivl
aas
ds
out
test
jge
pop
movsb
sub
adc
xchg
sub
lea
sub
xchg
sub
call
xchg
mov
lea
ret
fadds
mov
mov
mov
popa
mov
cmp
cmp
mov
add
in
js
mov
aam
gs
inc
xchg
fdivrs
pop
mov
cmp
cmp
out
mov
xlat
scas
xlat
insb
mov
mov
inc
in
dec
subb
mov
std
imul
pop
scas
sbb
push
ret
ljmp
xchg
imul
lds
ss
ds
mov
loope
es
iret
jmp
xor
sub
adc
dec
cwtl
adc
je
popl
sbb
jmp
dec
gs
clc
push
js
xlat
sub
ret
adc
nop
int3
push
scas
notl
or
je
sbb
outsb
push
cmp
jg
sti
lcall
inc
out
inc
sbb
push
scas
and
ja
cmp
and
mov
and
lods
dec
inc
leave
and
daa
ret
push
mov
xchg
xlat
cli
dec
in
les
jb
faddp
and
lods
out
mov
sub
mov
mov
mov
pop
out
or
sub
mov
lods
sbbb
inc
inc
jae
add
lahf
pop
xchg
lds
clc
cwtl
popa
das
sub
adc
inc
jne
pusha
xor
add
test
inc
sub
mov
jns
push
jge
stc
lcall
adc
popl
adc
pop
ret
nop
sarl
push
sbb
and
stc
lds
dec
dec
mov
sbb
mov
cmpb
jmp
ret
xchg
jns
xlat
jecxz
rolb
mov
stos
sti
cmp
add
or
addb
mov
mov
mov
scas
aaa
insl
xlat
clc
jmp
std
push
or
cli
lea
mov
mov
inc
movsb
jecxz
mov
imul
sahf
cltd
sbb
ret
push
or
outsb
inc
sbb
cmp
inc
pop
dec
xchg
xchg
pop
aas
jge
les
mov
enter
inc
pop
das
lods
add
sub
fisttpl
loopne
jnp
imul
ja
loop
flds
inc
dec
fstps
imul
push
das
sub
cmp
rcrb
push
xor
mov
dec
push
lods
xchg
jl
and
mov
test
shlb
insl
push
mov
mov
inc
ds
mov
cmp
pushf
gs
mov
jecxz
test
sahf
daa
dec
mov
hlt
pushl
jns
sbb
nop
jns
clc
cs
cmpsl
sti
pop
or
xor
mov
cmpsb
outsl
push
inc
ljmp
cmp
xor
push
jnp
push
loope
push
adc
outsb
bound
xlat
and
mov
sbb
dec
jno,pt
int3
xchg
push
imul
pop
seta
cmovno
cli
cmp
sbbl
mov
imul
mov
sub
in
ljmp
loopne
xchg
pop
icebp
mov
xor
outsl
ds
pop
fmull
int3
or
sub
add
lock
in
int3
out
sub
hlt
add
mov
std
pop
mov
sarb
jle
fwait
sbb
test
jno
jp
push
jno
jg
sub
jmp
jne
inc
xor
xchg
mov
mov
ljmp
and
mov
adc
fucomip
pop
subl
in
sbb
mov
ds
fadds
xor
sub
popl
mov
mov
sbb
clc
push
fldt
imul
out
in
daa
mov
mov
cmp
xor
add
mov
mov
mov
sbb
lods
leave
mov
das
lret
jo
les
scas
insl
subl
mov
pop
insb
insl
mov
xchg
shr
xor
mov
aad
cli
inc
cmc
xchg
dec
push
jl
arpl
jne
xchg
aaa
jbe
mov
rol
add
mov
push
xchg
mov
xor
pop
xor
pop
test
das
push
scas
arpl
mul
lods
cmp
or
sub
push
mov
dec
mov
repnz
clc
cli
xchg
jecxz
addl
xor
push
mov
pop
test
adc
mov
adc
shrl
add
call
jo
xchg
test
push
pop
dec
jp
jne
andb
inc
sbb
or
repz
xor
out
sub
rolb
pop
ds
cmp
std
movsb
in
and
add
lock
stc
scas
idivb
jge
xlat
jmp
xlat
mov
out
fildl
shr
inc
or
mov
dec
lods
and
push
scas
orb
mov
test
mov
jno
sti
mov
and
jns
into
sbb
dec
pop
sub
cmp
fs
mov
aaa
sub
pop
jae
int
mov
lock
xchg
sahf
hlt
xor
pop
rcrl
inc
jne
xor
push
movsl
les
imul
shll
lahf
xor
daa
enter
and
cwtl
ret
into
test
mov
call
adc
add
pop
clc
mov
arpl
std
push
ror
and
add
cwtl
std
inc
cmp
ret
popf
aaa
jne,pn
pop
aad
jne
and
pmaxsw
ret
jmp
and
fwait
call
adc
lock
std
into
sub
loopne
adc
xchg
xchg
stos
jg
push
or
or
inc
pop
pop
rorl
dec
mulb
cmp
xlat
mov
sub
jbe
cmc
enter
movsl
sahf
and
xor
in
add
mov
popf
in
dec
push
cmp
mov
into
test
pop
movsl
fcoms
faddl
inc
cmpsb
xlat
add
xor
adc
adc
xchg
pop
mov
or
dec
xchg
lods
mov
enter
daa
push
lahf
jle
mov
in
sbb
mov
sub
jne
fcmovnb
xor
pop
pop
dec
call
sbb
pusha
jbe
das
clc
fisubrl
xlat
pop
pop
aas
mov
sarb
add
xor
jmp
inc
sub
iret
fwait
pop
sub
dec
dec
pop
movsl
test
fcompl
pop
jno
lret
test
xor
xchg
es
and
lret
aad
ffreep
jno
pop
test
pop
cmp
xchg
mov
outsb
or
stos
in
cmp
shlb
jo
and
aam
ja
pop
out
fsubp
add
push
adc
dec
dec
mov
ret
xlat
add
adc
xor
popa
inc
add
fwait
test
pop
pusha
push
fwait
int3
add
ljmp
sahf
mov
test
sub
pop
hlt
fidivrs
js
icebp
lcall
aad
icebp
stc
out
pop
pushf
rcr
sub
sub
scas
mov
xor
adc
cmpsb
cli
test
or
jb
ror
xor
clc
mov
sub
mov
int
lcall
inc
leave
fisttpll
push
jl
stos
shrb
aam
fucomi
sub
into
pop
lds
sbb
inc
scas
cmpsb
out
iret
mov
jae
mov
add
sbb
stos
fstpl
outsl
cmp
fnstcw
push
inc
push
jmp
loope
rep
xchg
sbb
jle
xchg
stc
xchg
fwait
scas
sarl
push
cmp
negb
es
cltd
dec
lods
imul
in
push
adcb
int3
ss
fldenv
cwtl
inc
je
test
ficomps
test
filds
js
sub
jmp
data16
pcmpeqb
sbbb
add
and
or
push
gs
sbb
mov
stos
jmp
cmp
mov
ja
fwait
push
jnp
push
or
adc
xor
pop
jne
add
adc
bound
jo
or
int3
dec
jecxz
mov
jle
xchg
das
sub
mov
adc
cmp
inc
aaa
scas
push
mov
out
jge
test
inc
push
xchg
dec
std
mov
xor
js
daa
sahf
mul
lods
add
lods
jb
imul
outsb
sbb
jns
jle
and
fsubrs
repz
aas
rcrb
adc
dec
xor
hlt
jp
out
inc
imul
mov
divl
imul
cmp
outsb
movsb
xchg
push
insb
xor
xchg
cmp
test
inc
sbb
or
shrl
gs
dec
out
mov
jecxz
xchg
pop
in
aad
out
mov
jl
adc
sahf
cltd
or
cmp
in
inc
mov
and
in
stc
adc
xchg
pop
sub
addr16
sub
cli
mov
test
loop
insb
push
in
stos
sbb
inc
fisubrs
xchg
mov
pop
fbstp
and
and
in
add
and
dec
mov
jnp
push
sahf
mov
or
xchg
cmp
dec
movsl
call
push
sub
cmp
loopne
aaa
push
aaa
and
pop
and
jae
aam
and
hlt
gs
test
call
mov
mov
leave
adc
clc
lods
pop
mov
and
pop
mov
or
imul
aad
jns
gs
fidivl
loope
ret
aas
inc
icebp
xchg
mov
jns
push
and
sahf
aas
pop
jb
fstpt
or
and
push
mov
pusha
scas
ret
mov
fisubs
jle
sbb
adc
xchg
or
mov
ret
imul
cld
xor
cwtl
mov
lahf
rorl
ret
ss
dec
jbe
daa
xor
jo
push
add
inc
addb
inc
pop
test
mov
mov
dec
push
or
repz
xchg
stc
insb
lock
shlb
dec
mov
insl
inc
fcomi
iret
push
or
xchg
cmp
lret
and
inc
mov
mov
jb
mov
gs
sub
dec
cli
fwait
out
jae
mov
fsubs
inc
lret
int3
push
aaa
ja
cld
and
js
and
dec
sti
xor
and
xchg
arpl
sahf
aad
sub
scas
pusha
push
lret
lret
fimull
push
mov
rorl
mov
addr16
adc
sbb
push
cld
mov
adc
fcmovu
push
and
loop
stos
pextrw
jae
sbb
xor
pop
cmpsb
sub
inc
sti
ret
jg
dec
sbb
xchg
jne
fwait
stc
outsb
bound
js
ljmp
mov
dec
mov
in
or
jl
lea
adc
dec
insl
or
xchg
mov
dec
rcll
adc
lods
pop
lret
jl
int3
out
add
and
cwtl
nop
mov
rcll
dec
cmp
filds
scas
and
adcl
jp
cmp
jl
inc
dec
adc
div
rcrb
or
js
mov
sbb
xor
lcall
pushf
xchg
scas
jmp
push
xor
lcall
push
scas
aad
inc
mov
dec
cmp
add
lret
jp
dec
sbb
stc
arpl
fs
mov
cmp
faddl
or
lahf
sti
aad
ljmp
test
rorb
sub
mov
jmp
inc
bound
push
mov
mov
icebp
imul
repz
and
mov
lret
pushf
sub
push
jne
es
jl
loop
imul
aam
and
dec
cmp
cltd
in
in
mov
cmpsl
fnstenv
mov
mov
lahf
jb
fs
fistpll
stc
sarb
mov
jecxz
sbb
loope
push
or
push
punpckhwd
push
imul
test
adc
add
cmp
in
iret
push
cmp
xor
xchg
or
sbb
cli
vpsllq
shr
pop
xrelease
pusha
pusha
adc
adc
insb
int
jns
lods
notb
test
insb
int3
insb
add
push
push
dec
loopne
out
outsl
fcoml
push
shrb
mov
lret
push
stos
gs
mov
in
xor
popa
cmp
adc
jns
outsb
faddl
and
push
inc
ss
js
inc
inc
lea
inc
fcmovbe
iret
jecxz
ret
jle
mov
scas
adc
adc
xor
test
push
push
or
jne
adc
test
or
adc
or
jmp
xchg
push
push
and
cmovl
adc
andl
shrl
xchg
lods
out
dec
mov
add
shll
movsb
fimuls
cwtl
xor
inc
jo
add
adc
add
aam
inc
popl
sbb
inc
fwait
or
movsl
dec
mov
insl
adc
sbb
sarb
cmp
lcall
pop
scas
push
arpl
jae
inc
leave
adc
pop
lods
mov
add
pop
adc
mov
xorb
and
insl
jg
jae
popa
push
cmp
pusha
test
cmp
scas
xlat
jmp
ffree
xor
or
push
loop
xor
inc
setno
clc
fstpl
int3
mov
mov
movsl
call
cmp
cmp
out
pop
clc
imul
sub
mov
out
jb
cli
inc
outsb
mov
push
push
mov
out
sub
lahf
add
inc
lret
sub
pop
orl
add
pop
aas
xchg
add
and
push
out
rol
xchg
adc
iret
sub
xchg
lds
sti
jmp
jmp
adc
pop
push
inc
lds
rcll
mov
ds
cmpsl
jmp
cmp
test
xor
xchg
iret
fsubrl
clc
sbb
ljmp
dec
sub
xchg
or
xchg
and
cltd
mov
inc
popf
pop
enter
jae
push
in
add
ret
enter
pop
jno
inc
push
dec
lods
imul
xor
stos
call
cld
lret
push
out
in
call
pop
jbe
aas
cmc
add
lds
outsb
fwait
and
xchg
into
cmp
cltd
iret
sub
rorl
int3
cmp
scas
jae
lahf
or
scas
cld
daa
inc
mov
mov
adc
mov
push
xchg
sub
loope
sbb
out
mov
adc
pop
xchg
mov
push
dec
movsb
pop
push
xchg
cmp
adc
dec
scas
mov
leave
ss
dec
imul
add
sub
mov
cmp
cmp
push
adc
mov
xor
addr16
jbe
jbe
in
pop
int
xchg
sbb
dec
jns
call
mov
adc
mov
sub
repz
adc
jp
sbb
pop
inc
jmp
xchg
cmp
mov
add
jo
and
lods
fsubl
pusha
mov
adc
push
popf
sub
adcl
inc
lcall
data16
fsts
adc
pop
fistps
sti
jbe
enter
bnd
cmp
dec
loop
loopne
sbb
orl
mov
repnz
les
mov
movsl
xchg
fstpl
xchg
scas
push
and
or
pop
push
mov
push
cmp
shlb
icebp
in
lea
dec
push
imul
push
arpl
out
add
mov
cmp
adc
inc
insl
jne
test
in
dec
sub
push
scas
ljmp
add
jge
hlt
popa
dec
leave
jmp
mov
out
fistl
cs
stos
jo
std
push
push
sbb
in
and
or
shlb
or
jne
sub
out
out
aaa
imul
and
push
dec
pop
in
inc
cmp
and
inc
mov
aas
leave
or
or
mov
stos
pop
insb
mov
add
inc
sbb
mov
shlb
add
aad
mov
std
cmp
andb
pop
repnz
mov
sbb
inc
mov
lods
aam
mov
adc
aam
jo
xchg
dec
loope
xchg
mov
jge
jb
xor
cmpl
loope
cmpsl
push
sbb
jb
pop
mov
jne
push
lock
rcl
dec
fwait
dec
insl
dec
jb
movsl
mov
addr16
cmpsb
mov
jne
ds
lret
cmp
dec
shll
or
add
xor
pop
dec
cwtl
inc
leave
xchg
ret
sub
or
fidivl
test
shlb
pop
jae
aaa
or
cli
xor
fistpll
cmp
xchg
stc
in
rcl
sbb
fnstcw
xor
mov
sub
xchg
or
lcall
popa
ret
sub
out
bound
jae
orl
mov
in
inc
xchg
or
inc
xchg
mov
sarl
cmp
add
jp
mov
loope
test
cli
dec
stos
adc
repnz
mov
loopne
inc
fstl
mov
dec
imul
push
cmp
xchg
pusha
cmpl
fistpl
xchg
iret
jnp
shll
push
mov
mov
ja
sub
pop
add
ret
adc
pushf
dec
cmp
push
mov
jae
int
notl
xchg
incb
fistpl
add
lret
cmpsb
mov
ds
xchg
clc
xlat
nop
or
js
int3
lahf
sbb
xchg
cli
adc
imul
es
xchg
jnp
sub
stc
pop
pop
rcrl
insb
cmp
xchg
ss
ret
xor
lds
pop
pop
or
or
js
scas
cmp
inc
repz
shrb
cmp
pusha
cmp
test
and
repz
xor
cmp
jg
into
dec
scas
outsl
dec
sub
adc
sarl
movsl
mov
shll
bound
push
fdivr
lods
adc
out
xorb
in
sub
test
inc
add
int
pop
stos
subl
test
addb
push
lds
aam
pop
mov
sub
and
pop
decl
fmull
fs
add
mov
mov
stc
mov
mov
lods
inc
call
mov
jo
addb
dec
mov
mov
sbb
sahf
rorb
push
fst
mov
sbb
nop
sub
xor
push
pop
lods
pop
ret
ret
jns
push
ret
lds
adc
fisubrs
cmpb
adc
orb
cs
xor
into
push
push
mov
inc
xchg
fsubrl
pushf
jge
daa
dec
add
adc
or
daa
out
test
cwtl
sbbb
arpl
ds
cmc
xchg
xchg
nop
repz
mov
imul
push
jno
sub
cmp
pop
stos
out
inc
out
shl
pusha
and
pop
mov
fcmovnbe
aam
iret
das
bound
pcmpgtb
fwait
fs
out
iret
mov
lods
adc
inc
push
xchg
or
add
and
ret
xchg
add
sub
pop
fwait
push
out
jecxz
adc
push
xorl
lods
aad
jmp
add
mov
sub
and
xor
xor
lea
add
adc
sub
je
pop
pop
xor
or
mov
and
je
sbb
loopne
movsb
stos
pop
mov
xchg
fistl
popa
jae
cltd
stos
je
xor
mov
push
insl
push
pusha
xchg
in
cs
rcl
inc
subl
enter
jns
lock
rclb
push
fisubrs
cmp
mov
ds
and
mov
mov
icebp
pop
mov
cmp
flds
xor
stos
out
mov
xor
sbb
ret
xlat
fs
or
ja
jbe
adc
mov
or
mov
std
bound
test
xchg
fs
idivb
addr16
lcall
test
pop
xor
dec
cltd
xchg
sahf
addr16
pop
cmp
in
pushf
push
adc
test
fwait
adc
popf
mov
push
rclb
cmp
into
dec
repz
add
xor
scas
jp
mov
cmp
xchg
xchg
xchg
jl
shrl
ja
into
scas
out
push
pusha
test
rorl
test
xlat
call
fs
fnsave
inc
shll
inc
in
sub
and
hlt
sbb
pop
pop
xchg
filds
xchg
subb
hlt
mov
mov
loop
lock
and
ret
iret
or
inc
lods
repz
mov
lods
xor
and
push
js
or
pop
add
push
outsl
incl
inc
jecxz
movsb
inc
cmp
stos
das
xchg
arpl
adc
out
push
loope
or
xchg
xchg
mov
add
cmp
outsb
mov
in
push
aaa
mov
or
mov
add
sub
mov
call
mov
testb
adc
push
ja
popa
rorb
mulb
outsl
push
orb
inc
jg
in
push
nop
push
xor
pushl
pop
push
mov
push
push
sbb
jmp
daa
lds
xchg
nop
mov
cmp
push
nop
xor
xchg
add
es
enter
or
ljmp
in
lcall
cmp
aaa
inc
or
sub
push
shlb
movsl
ds
pusha
jnp
mov
add
addr16
and
cmp
xor
cmp
cmp
and
adcl
pushf
and
and
leave
outsl
dec
cmpsb
xor
dec
jae
inc
les
dec
xchg
sub
xor
pop
rep
adc
xchg
jle
iret
rolb
rcrb
outsl
mov
stos
add
fiaddl
rcrb
js,pt
movsl
addr16
cwtl
fisubrs
imul
bound
inc
xorl
repz
lock
sub
xlat
aad
pop
cmc
inc
jp
push
cmp
mov
out
mov
lret
ljmp
sub
dec
xchg
test
sub
dec
mov
out
outsl
in
outsb
loop
jp
mov
cs
inc
cmpsb
test
push
or
sbb
js
cmp
clc
add
cmp
jo
jne
filds
cs
sbb
cmp
mov
bound
mov
daa
pop
fisubrs
pushf
xchg
xor
pop
iret
outsl
dec
jae
mov
je
mov
xor
mov
ret
test
jmp
test
jmp
sbb
lods
movsl
mov
pop
sub
push
jmp
testl
cli
test
xor
jl
xor
and
dec
push
cmp
scas
cmp
or
and
push
jo
lea
add
push
adc
adc
lock
sbb
dec
jmp
mov
test
roll
push
pop
jmp
lock
fisubs
or
dec
adc
stos
clc
pop
lsl
popf
ficompl
ljmp
mov
lock
cmc
mov
ss
repz
mov
push
mov
cmp
cmp
mov
in
imul
in
outsb
int3
in
dec
mov
mov
fiadds
shl
lock
and
in
dec
leave
xchg
ret
xchg
add
dec
out
xor
js
data16
outsl
push
pushl
icebp
jo
push
jmp
pop
arpl
xor
pushf
jae
sub
cwtl
das
cmp
sub
and
imul
hlt
adc
dec
lds
xchg
insl
lock
cld
xor
clc
pop
stc
gs
cmp
add
in
jns
pop
into
mov
sbb
lods
into
imul
icebp
jbe
xchg
gs
push
sbb
fmuls
push
shlb
add
cli
out
sub
movsb
scas
jo
adc
xor
sbb
sub
sbb
dec
jle
fbstp
pushf
dec
cs
xchg
xor
xchg
addl
in
mov
or
push
push
fiaddl
dec
aam
stc
jmp
mov
push
and
mov
aad
sti
jmp
mov
insb
mov
dec
inc
mov
adc
cltd
sbb
jge
sub
push
rcl
adc
jge
xor
sbb
lock
sbb
in
imul
call
add
lahf
sub
add
je
std
cltd
cld
mov
lret
dec
je
lods
push
std
dec
mov
adcb
daa
je
in
pop
add
jne
push
sbbb
popa
fwait
or
push
repnz
imul
je
iret
sub
pop
cmp
jmp
and
and
sbb
hlt
mov
lds
push
pusha
adc
sub
xor
mov
enter
sub
pop
stos
inc
in
leave
rcll
stos
xchg
and
mov
mov
js
xor
pop
add
mov
stos
push
mov
lcall
inc
cmp
dec
mov
mov
add
icebp
dec
adc
mov
orl
jb
test
insb
fistps
cmp
xchg
mov
xor
sbb
movsl
dec
xor
dec
jno
and
dec
xor
xor
push
repnz
sbb
or
fcoml
scas
clc
insl
mov
inc
insl
lahf
aam
push
clc
loope
xchg
fmul
push
or
shr
cmp
loope
push
adc
movsl
pop
cmp
lods
xchg
jge
negl
popf
cmp
inc
cmpsb
jge
ret
cmp
cmp
hlt
xchg
dec
dec
test
subl
arpl
movsl
fsubrs
mov
or
inc
adc
xchg
aas
inc
fmuls
and
mov
xor
fwait
in
ror
in
xor
xlat
pop
and
adc
popa
xlat
mov
fwait
pop
inc
paddb
insl
mov
imul
xchg
jae
aaa
push
xchg
push
test
shr
push
sbb
test
cmp
out
adc
mov
push
adc
daa
dec
ss
in
int3
push
sub
das
xorb
push
clc
insb
in
leave
cmc
sbb
push
and
lret
inc
sbb
loop
rcll
mov
js
daa
test
inc
sbb
push
outsl
mov
mov
jbe
out
xchg
pop
mov
and
rcrl
stc
cltd
xor
add
mov
cld
fsubrl
loopne
outsl
movaps
sbb
sub
popf
stos
pop
imul
pop
enter
test
mull
pop
int
pop
int
icebp
jnp
xchg
data16
test
divb
jge
ja
cmp
mov
aas
scas
sbb
stos
in
addr16
pop
mov
imul
xlat
sub
sub
lock
inc
das
ret
idivb
mov
rclb
inc
das
outsl
cmpsl
dec
mov
adc
orb
mov
cwtl
idivb
out
mov
push
pop
sbb
jp
sti
leave
das
into
test
xor
jecxz
call
insb
insl
adc
xchg
ret
cs
or
bound
jae
inc
cs
ret
ret
das
mov
fbstp
sbb
inc
pusha
cmp
mov
movsb
xchg
dec
test
movb
xchg
pop
in
int3
push
outsl
mov
mov
ss
jb
mulb
jp
lret
pmaxub
or
add
inc
xchg
inc
mov
lcall
dec
push
inc
aad
pop
cmp
dec
pop
arpl
inc
lds
jns
cmp
addr16
xor
xchg
mov
mov
mov
or
cmpsb
cmc
dec
add
es
xchg
mov
rolb
add
pusha
mov
push
pop
mov
add
in
imul
jns
dec
mov
stos
dec
popf
cmp
dec
icebp
mov
mov
mov
mov
mov
xchg
dec
inc
je
mov
scas
xchg
lcall
mov
aam
xchg
pop
and
popf
mov
sub
cmp
jnp
and
mov
push
pop
jb
ret
aaa
flds
adc
mov
fsubl
cwtl
stos
aaa
add
fnstsw
rcrl
jecxz
push
and
sbb
and
pop
cmpl
in
and
mov
xchg
push
shl
lahf
repnz
push
pop
push
cs
xor
pop
fadds
and
push
or
imulb
sbb
loope
inc
mov
jb
xor
push
stos
fnstcw
mov
dec
shlb
loope
fisttpll
mov
cmpsb
and
jne
pop
call
js
xor
lock
cmp
rorl
pop
mov
sub
cltd
test
sub
out
adcl
pusha
les
loope
mov
inc
jns
out
outsb
lods
adc
call
push
cli
sub
hlt
loope
aas
fs
pop
mov
icebp
mov
pop
icebp
mov
inc
aaa
xchg
pop
scas
imul
sbb
adc
loopne
int
push
mov
adc
decb
in
mov
rol
mov
jg
int
loop
movsl
mov
jmp
cli
das
jno
sub
add
out
out
pop
push
pop
fimuls
movntps
sub
sbb
mov
xchg
cli
pop
inc
or
jo
adcb
dec
pop
add
inc
bound
test
shlb
add
pop
aad
push
or
and
mov
push
xchg
adc
and
lods
mov
and
xor
cld
lret
pop
out
sub
mov
stc
sub
aas
dec
mov
scas
mov
adc
jmp
insb
push
dec
repz
out
aas
popf
mov
shll
jecxz
movsl
rcl
out
js
sub
dec
mov
mov
mov
cmpl
or
push
push
stc
inc
fidivrl
rorb
fldt
add
mov
repz
rorb
mov
out
daa
std
in
lcall
push
cmc
inc
inc
shlb
cli
inc
decb
jge
nop
mov
lock
mov
lret
xchg
adc
gs
xchg
test
or
stos
push
inc
int3
fcom
mov
pop
or
cmp
aaa
mov
push
gs
fldl
outsl
xchg
mov
test
pop
imul
fiaddl
xchg
jb
or
sub
mov
ds
enter
mov
jle
mov
mov
inc
scas
jecxz
sbb
ret
mov
xchg
dec
add
roll
mov
cmpsb
push
ja
stc
rcrl
in
mov
fildll
jp
out
mov
shrl
shlb
pop
je
popa
lcall
xorb
mov
fldcw
fs
cld
cli
xchg
pop
std
cmp
fidivs
dec
call
push
pushf
cmp
int3
jnp
lahf
dec
mov
out
sub
pop
roll
and
icebp
loope
decl
imul
testl
push
mov
test
aas
gs
sbb
mov
in
adc
in
dec
rcrl
loope
jbe
xlat
cwtl
ficoml
mov
jp
outsl
out
or
lods
into
add
or
sub
pop
fnstcw
lods
imul
dec
ret
push
sbb
sub
and
pop
lods
out
filds
inc
rcll
pushl
fsubr
pop
dec
jmp
out
leave
test
mov
test
jle
and
mov
jp
cmpb
xchg
aam
das
shll
ret
stc
and
shll
inc
daa
dec
test
aaa
cmp
add
inc
push
enter
jl
iret
sbbl
in
ss
sbb
ja
mov
dec
xor
jmp
cmp
add
outsl
cltd
pop
sub
jmp
cmc
out
iret
loopew
pop
xchg
test
arpl
mov
pushf
inc
in
nop
int
out
xor
adc
clc
cmc
mov
sbb
adc
lea
pusha
in
out
fdivrp
fldt
or
sbb
xor
test
sbb
loopne
es
push
mov
sub
jmp
dec
xchg
mov
repz
mov
gs
ljmp
jg
jnp
sub
xchg
out
xchg
icebp
fcmove
push
pop
push
mov
fisttps
sub
dec
or
and
mov
rorb
jnp
push
sub
in
movsl
out
mov
lcall
push
jo
hlt
pop
lods
stc
sar
arpl
adc
notb
and
cmp
inc
nop
aas
fldt
into
xlat
or
cwtl
enter
xchg
sbb
mov
xchg
test
daa
push
icebp
cltd
xchg
mov
cmp
lret
xchg
or
int3
xchg
pop
lret
mov
cwtl
push
inc
aaa
out
push
jno
bound
jb
mov
sbb
into
add
insl
shlb
insb
or
inc
ds
ficomps
andb
pop
loop
cmp
scas
cmp
lret
xlat
imul
add
cmp
icebp
or
leave
jnp
xorl
fcomps
pop
push
movsl
or
loopne
fwait
push
roll
pop
mov
mov
push
outsl
call
cs
mov
repz
and
aad
xor
imul
ljmp
mov
fs
adc
scas
ret
mov
sub
mov
pop
jb
cs
je
cltd
inc
sarl
ret
mov
jo
fs
clc
pushf
lea
sbb
and
cmp
mov
cmpsb
add
xchg
jne
pusha
popf
and
stos
sub
mov
dec
hlt
sub
and
lods
inc
cmp
into
orb
jmp
pushf
rclb
push
cmp
ja
or
insl
lret
pop
add
out
fcomi
or
fwait
in
xchg
and
fnsave
jg
dec
fldl2t
sbb
inc
cmp
int
cmpsb
pop
xchg
jo
in
lcall
divb
scas
fs
sbb
jl
lahf
xchg
adc
loope
aaa
ret
lods
outsl
xchg
incb
enter
push
cli
mov
dec
push
cmp
mov
stos
test
imul
xchg
in
mov
or
ss
test
repnz
jnp
adc
jecxz
test
mov
or
mov
inc
iret
jns
aad
movsb
out
push
mov
push
outsb
sub
pop
jne
lea
xchg
mov
stos
dec
adc
movsl
pop
cmp
pop
test
and
sbb
loope
leave
jl
mov
ds
sbb
cltd
mov
xor
into
jo
mov
jmp
lods
scas
je
jp
sub
sbb
sahf
add
jl
sbb
lods
inc
mov
fsubrs
push
lods
adc
ljmp
jg
jnp
or
dec
sub
jne
mov
xlat
xchg
mov
xchg
cs
out
and
xchg
dec
ljmp
cwtl
xchg
sti
mov
sarb
pusha
repz
push
stc
jae
dec
fadd
mov
push
lret
xlat
fsts
cmp
mov
push
dec
jnp
inc
mov
mov
ljmp
jno
scas
aad
and
jns
inc
mov
imul
and
test
ja
rcll
in
mov
inc
movsb
fisubs
jl
mov
jle
clc
add
add
mov
enter
or
ja
rcr
xchg
stos
inc
sub
jo
cli
sub
pop
mov
xor
test
inc
scas
xchg
mov
cmp
lret
pop
mov
cld
ljmp
popf
dec
and
sbb
pop
xchg
adc
or
or
xor
lods
dec
push
mov
outsb
mov
xchg
mov
jnp
mov
jl
inc
daa
in
mov
stos
dec
mov
lds
dec
jecxz
xchg
fidivrl
dec
int3
sti
stos
add
inc
adc
repnz
mov
pusha
mul
pop
iret
mov
jb
add
andb
test
adc
div
cmp
cmp
dec
lds
aaa
sbb
xchg
clc
stos
ret
daa
add
outsl
mov
movsl
pushf
cmp
adc
jle
daa
sbb
and
scas
fmul
jo
and
popa
jmp
push
nop
fstpt
sub
pusha
dec
in
imul
cld
mov
fiadds
movsb
push
mov
mov
lcall
xor
mov
js
or
repnz
les
dec
push
and
cmp
stos
daa
push
inc
sbb
push
jno
popf
popf
inc
fwait
mov
sbb
adc
or
jne
mov
stos
xchg
sub
lret
pop
or
jge
or
sbb
adc
lea
jmp
pop
rorb
lret
lret
mov
xor
inc
inc
push
orb
jne
push
test
dec
scas
outsl
divb
jl
xor
enter
sub
dec
jmp
pop
adc
scas
in
sub
in
sub
pop
pop
sbb
cmp
fnstsw
jo
mov
dec
out
xor
mov
pop
xchg
pop
add
inc
xchg
sub
lds
push
dec
jb
aam
cli
sbb
into
cmp
outsb
mov
mov
xchg
sbb
mov
mov
les
sti
mov
ret
add
loopne
movsb
outsl
movsb
cmc
jnp
fmull
lock
outsl
mov
inc
sub
mov
or
loop
sahf
pop
shlb
cmpsb
mov
pop
pop
aad
addr16
push
pop
mov
inc
outsb
mov
mov
jl
test
fnsave
data16
shlb
mov
mov
jg
pop
xchg
dec
fsubl
push
divb
push
loop
or
cmc
jnp
movsl
into
sbb
rcll
xor
fsubl
xor
fildl
cmp
pop
insl
lcall
jge
or
aam
xchg
mov
insb
jnp
pop
nop
cmc
push
fsubrl
call
push
test
pop
sbb
jae
enter
data16
mov
push
pusha
aaa
dec
aas
test
push
fsubrs
fisubl
inc
mov
fistl
in
mov
int
and
in
cmpsl
dec
gs
das
das
pop
cmpsl
aas
mov
addr16
fisttpl
xchg
jae
clc
sbb
sbb
hlt
inc
dec
leave
inc
mov
sbb
cwtl
sub
add
inc
cmp
inc
jb
mov
mov
xchg
decb
out
mov
sub
jl
shll
and
mov
insb
mov
mov
mov
imul
push
loop
xor
cwtl
fisubrl
icebp
xchg
imul
ljmp
stc
mov
notb
xchg
stos
out
mov
mov
nop
mov
pushw
dec
jne
xchg
test
sub
inc
xchg
int
jb
repz
pop
iret
mov
and
xchg
das
test
add
add
push
loope
test
push
lret
and
mov
push
lret
iret
call
aam
cmc
movsl
push
adc
test
loop
xlat
mov
subb
xchg
daa
mov
jp
add
push
enter
push
push
pop
adc
mov
push
lahf
adc
dec
sti
sub
xor
push
outsl
xor
das
sub
and
in
lock
cmp
jns
pop
in
icebp
mul
push
nop
repz
mov
xchg
lcall
mov
xor
outsl
dec
pop
insl
shll
cwtl
scas
mov
gs
ja
in
inc
adc
cwtl
in
fidivrs
mov
sahf
test
lcall
dec
jge
mov
cs
sbb
ja
jnp
in
lahf
xchg
xchg
fnstsw
mov
fwait
sbb
movsb
sahf
ja
and
ja
mov
sbb
call
rol
mov
xchg
aas
push
jmp
test
sbb
testb
nop
iret
test
fwait
call
mov
cmpsb
pop
inc
mov
stc
scas
jp
pop
xlat
dec
xchg
mov
or
lcall
adc
seto
mov
sti
das
test
in
adc
ret
adc
add
mov
cld
cmpsb
pop
xor
loopne
jl
cmp
lret
movsb
adc
into
in
push
loope
xor
dec
in
mov
and
jge
shlb
sbb
push
rcrl
add
fnclex
movl
std
aad
popf
jae
sti
push
sub
lahf
xchg
testb
ret
aam
add
sbb
aad
jmp
adc
in
js
jno
cmp
scas
pop
out
ljmp
or
pusha
ds
lret
lahf
fists
mov
ret
mov
inc
out
jb
ds
scas
lea
mov
lret
push
in
stc
cs
jmp
rcll
dec
adc
sub
enter
fsubl
fcoml
subb
sbb
lods
jp
ss
xchg
xlat
es
xchg
shll
pop
scas
outsl
mov
dec
sub
daa
inc
call
or
cltd
sbb
mov
xchg
mov
sahf
jp
int3
mov
sbb
xchg
rclb
jecxz
aam
inc
mov
sub
dec
add
sbb
pop
pop
clc
add
cmp
push
in
popa
fwait
out
fnstcw
loope
aad
or
aam
scas
nop
cmp
xchg
jecxz
sbb
cld
aam
and
push
dec
ds
mov
andl
hlt
int3
xchg
jbe
ds
jmp
mov
sbb
or
adc
outsl
push
and
and
mov
mov
mov
loopne
adcl
push
lret
pushf
out
loope
pop
in
pop
jns
push
pop
inc
mov
mov
sahf
test
int3
pop
lods
pop
and
js
add
mov
pop
mov
xchg
pop
fistps
adc
aam
loope
mov
cld
add
sbb
icebp
shlb
outsb
outsb
sub
jg
shll
mov
shll
decb
shlb
mov
test
ljmp
repnz
jns
push
rorl
adc
lret
adc
xor
clc
loopne
mov
lea
lods
push
sub
les
pop
xchg
mov
je
aaa
popf
jno
add
mov
sbb
call
mov
add
stos
jo
mov
mov
dec
cmc
sub
dec
icebp
xchg
push
xchg
ret
push
and
int3
lcall
repnz
xor
pushf
and
mov
inc
inc
mov
bound
xor
popa
mov
and
ret
xchg
pusha
add
insb
sub
fsubrs
out
cmp
pop
dec
cmp
mov
les
imul
ffree
dec
pop
insb
leave
and
divb
cmpsb
cmp
aaa
lret
mov
mov
paddusw
push
es
ja
dec
mov
fadd
cli
outsb
mov
sub
mov
sub
mov
outsb
out
jle
mov
jns
push
jb
and
xlat
inc
stos
cmp
mov
hlt
sti
pop
outsl
dec
pop
movsl
lds
mov
mov
xor
outsb
xor
iret
jae
xor
roll
fcoms
add
or
jmp
xchg
nop
gs
adc
rcl
cmpsl
xlat
bound
xor
ja
sbb
jecxz
mov
pop
cmp
ror
test
test
xchg
imul
jmp
stos
lods
sahf
jp
fs
movsl
scas
and
mov
dec
rcrb
test
and
les
or
ja
hlt
sub
and
dec
pop
jmp
pop
push
lret
fbstp
fdivrl
inc
xlat
add
mov
aaa
push
jne
push
xchg
fisubs
xchg
mov
sub
add
cmpsb
mov
addr16
les
popa
idivb
fisubl
jno
cmp
mov
out
int3
call
fldt
stc
add
sbb
push
jb
push
lds
jnp
insl
cmp
out
clc
push
in
iret
add
cmpsb
or
pop
outsb
ljmp
pushf
mov
into
pusha
cmp
fisttpll
les
or
scas
add
test
mov
mov
xor
jo
and
jnp
mov
mov
sub
add
bound
cmpsl
sbb
fucom
push
int3
xchg
enter
pop
aaa
shrl
loopne
sub
dec
pushf
lods
pop
sub
sub
mov
cmp
shlb
cmc
inc
test
stos
test
mov
and
cmp
push
xlat
pop
mov
pop
jmp
ss
mov
movsl
push
movsb
fcomp
dec
mov
push
faddl
sbb
into
inc
xchg
idivl
cmp
adc
mov
jb
inc
xchg
mov
fs
pusha
inc
gs
xchg
xor
sub
adc
or
call
shr
and
cltd
jge
xorb
test
jno
jbe
rcrl
addb
mov
mov
jne
adc
pop
push
mov
jne
shr
test
mov
mull
add
sub
push
push
jl
dec
lret
adc
repnz
xor
cmc
pop
inc
lock
mov
ror
rorl
hlt
data16
xlat
dec
inc
insb
push
xchg
rcrl
xchg
xor
dec
push
xor
das
mov
adc
pusha
out
or
loop
lcall
or
sti
mov
mov
outsl
sbb
jge
leave
loope
mov
imul
cmc
gs
mov
pop
loope
loop
cmpsl
shll
inc
outsb
pop
pusha
pop
and
movsl
idiv
pop
sahf
fsts
mov
jnp
fsubs
in
cmp
jns
mov
sub
lds
insb
hlt
leave
cmpsb
inc
push
test
mov
clc
xchg
imul
inc
rclb
repnz
mov
vmovupd
xlat
add
pushl
data16
pop
push
fwait
enter
inc
lcall
fildl
test
int
mov
fucomip
rol
lcall
jg,pn
and
push
js
loopne
sbb
nop
outsb
out
pop
cmp
mov
lcall
mov
mov
xchg
aam
mov
std
jb
mov
or
adc
jo
mov
bound
xor
jnp
add
xor
adc
cld
push
push
jge
lcall
daa
stos
mov
inc
push
ret
push
data16
push
mov
addb
pop
cmp
pop
dec
stos
and
rcrl
fcomps
dec
xor
dec
sbb
mov
xchg
xchg
and
mov
add
les
or
jnp
push
pushf
dec
sub
mov
mov
cmpsb
sbb
xorl
pop
push
add
cmp
les
sbb
pop
cmp
inc
xchg
mov
push
out
mov
lock
psubsw
sbb
and
dec
ficoml
xchg
mov
into
stos
adcb
int3
fcom
push
ffree
rolb
push
sbb
lea
paddb
pop
push
xor
xchg
imul
ret
fistps
jae
add
faddl
mov
ror
outsl
arpl
insl
xchg
cmc
mov
gs
sbb
in
jl
add
xchg
xor
jb
adc
outsb
jnp
rorl
inc
jmp
mov
shrl
jp
or
test
mul
pop
jp
iret
push
push
mov
dec
xor
movsb
lret
inc
daa
mov
cmp
daa
insl
lret
mov
imul
xor
sbb
xchg
insl
sub
cmp
out
push
dec
jg
xchg
pop
aas
jbe
sub
mov
shlb
adc
ja
sbb
imul
in
or
ds
popf
les
pop
and
in
add
pop
add
adc
push
and
lods
js
insb
xor
iret
mov
lock
or
xchg
stos
repnz
aas
rcll
cmp
mov
sarl
clc
test
xor
popf
jbe
ffree
push
xchg
outsb
sti
shll
lods
sbb
aaa
aas
push
mov
ljmp
aam
adc
test
cmp
mov
enter
push
xor
lcall
int3
xchg
xor
mov
dec
add
mov
fcomip
pop
cltd
sti
pop
pop
push
stos
dec
je
fs
jg
or
cmpb
out
ret
xchg
pop
divb
aaa
dec
mov
and
push
out
push
jne
lcall
mov
imul
dec
fimuls
mov
sub
addl
add
push
mov
mov
fcoms
cmpb
dec
push
rcrb
stc
xchg
and
arpl
and
ret
dec
push
xor
mov
push
mov
lods
sbb
lods
js
mov
push
nop
xor
gs
add
jle
dec
stos
push
or
jae
lret
sub
lds
out
push
aas
rorb
test
pop
test
or
imul
mov
adc
pop
inc
cmp
jne
das
nop
cmp
sbb
movsl
jle
push
das
sub
or
push
xor
cmp
shll
pushf
pop
jo
aad
pop
fwait
xor
cmp
dec
je
in
stos
pop
push
outsl
dec
pop
fwait
mov
iret
inc
les
fnstsw
and
loop
and
jbe
outsb
pop
rolb
cli
jp
push
adc
dec
push
hlt
loop
out
and
or
mov
inc
popa
aaa
inc
sti
aam
test
cmp
dec
shl
mov
stos
aam
mov
and
sbb
push
dec
push
shl
cmp
mov
xchg
rcll
sbb
popl
fidivs
inc
aad
cltd
inc
subl
jo
test
int3
mov
arpl
mov
outsl
lahf
xchg
jmp
xchg
xchg
push
test
pop
push
and
pop
sbb
xor
lods
xchg
js
inc
aad
adc
sbb
test
aam
or
sbb
insb
gs
jbe
sub
xor
add
sub
icebp
mov
ds
ss
dec
push
inc
stos
sbb
sahf
or
jmp
push
aaa
call
clc
mov
into
int3
sub
push
push
cmp
pop
mov
jl
icebp
dec
pop
adc
xchg
rol
cmp
lret
ss
sub
pop
sbb
lods
mov
adc
aaa
mov
outsb
sarl
sbb
cmp
cmp
push
dec
mov
push
inc
leave
jne
push
push
outsl
incl
mov
fnstenv
push
inc
pop
mov
fwait
sar
and
imul
mov
insb
jle
cwtl
jnp
sub
mov
xor
addr16
pop
dec
insl
cmpsl
or
loopne
pop
out
push
insl
mov
pop
out
pusha
rcrl
iret
ror
add
inc
gs
or
movsl
mov
dec
aam
jnp
enter
xor
jo
pusha
mov
inc
xor
cmp
fmuls
out
mov
and
xorl
xor
das
andl
cmp
jmp
rolb
mov
lahf
cmp
pop
push
mov
push
hlt
loop
pop
shl
push
push
xchg
xchg
rcrb
fistpl
clc
test
icebp
add
stos
cli
sub
in
orl
cmpsb
dec
push
mov
icebp
inc
pop
cmpsl
jo
ljmp
mov
test
lret
mov
dec
leave
subl
push
mov
fidivrs
xor
aad
je
ds
inc
aaa
lds
sahf
pop
sbb
call
es
outsl
in
sub
push
fcoms
scas
cs
les
xor
dec
test
shl
int
pusha
ss
and
jne
push
leave
mov
pusha
sbb
dec
jge
cmpl
jecxz
and
jle
sub
ss
mov
lods
insb
push
stc
sbb
faddl
sbb
outsb
jmp
leave
add
leave
dec
pop
shl
or
jb
daa
dec
xchg
dec
jecxz
sub
or
cmp
xor
popa
lcall
lds
mov
sbb
dec
loope
rcl
adc
ret
pop
stos
mov
xchg
jne
sbb
adcb
test
ret
pop
lret
cmp
sub
cmc
test
mov
or
add
add
fldenv
das
xchg
adcl
stc
xor
and
pop
mov
sbb
sbb
mov
lods
in
les
outsl
lods
sub
xchg
enter
cmp
pop
and
aam
xor
pushl
mov
push
mov
lcall
and
add
sub
movsb
sbb
pop
dec
lret
mov
je
addr16
jl
sbbl
sbb
pop
sbb
push
outsb
push
rorl
ss
mov
or
pop
outsb
pop
inc
pushf
push
shll
pop
mov
popf
or
in
xor
out
xchg
jnp
loopne
dec
adc
cmp
cmp
mov
mov
idivb
jo
in
in
lock
jmp
mov
je
and
orb
enter
cli
lds
sbbb
cmp
daa
inc
pop
mov
xchg
pushf
jno
in
mov
ljmp
xchg
adc
dec
mov
jle
fdivl
out
and
imul
adc
out
movsb
xchg
into
call
out
xor
push
inc
pop
movsb
inc
pop
inc
pop
cmpsl
ja
rcll
dec
mov
cmpsl
push
jle
ret
loope
mov
cmp
fnsave
in
adc
dec
xchg
or
xor
outsb
mov
and
jl
icebp
out
lds
outsl
adc
push
adc
clc
jmp
int3
xor
outsb
inc
or
mov
dec
shrb
fisubrs
pop
divl
in
mov
fsubrs
pop
xchg
sbb
clc
dec
aad
mov
inc
jb
mov
roll
fists
mov
imul
push
lea
mov
sub
es
adc
je
or
add
ds
xor
scas
cld
sti
pop
mov
add
ror
cmp
and
sub
jae,pt
stc
inc
xor
cld
pop
push
shll
loop
sub
lock
popa
int
mov
in
jno
xor
lcall
fbstp
pop
into
lock
add
out
aad
aad
cmp
jbe
mov
mov
dec
pushf
cmpl
loope
test
clc
pop
arpl
pand
or
lock
jbe
repnz
lods
sub
cmpsl
jecxz
cmpsl
dec
dec
loope
js
xchg
dec
cmp
out
xchg
jb
test
test
lea
stos
sbb
ret
xchg
outsl
add
jmp
cmpsb
testl
insb
mov
push
int
cmpsl
jns
or
or
cltd
outsb
cmpsb
sbb
mov
add
jg
test
xchg
aad
push
and
push
mov
mov
dec
adc
pop
mov
add
inc
leave
pop
xchg
xlat
sub
xchg
sbb
inc
rcr
jns
xchg
aam
jnp
mov
aad
mov
sub
iret
icebp
xchg
jno
sub
inc
stos
arpl
pop
sub
lods
xor
orb
aas
ret
cmp
mov
and
xchg
pop
sub
inc
nop
fdivrl
mov
scas
inc
mov
mov
sbb
sbb
sbb
in
xchg
vpcmov
cmp
add
insl
or
je
xor
outsl
bound
pop
in
repz
dec
div
pop
jmp
push
lods
push
cmpl
loop
adc
xchg
cmp
fistl
dec
fs
mov
rcl
inc
dec
cmp
das
pop
shrb
inc
or
add
bound
pop
add
pop
inc
sub
mov
dec
adc
or
insb
mov
stos
pushf
es
subl
aad
stos
iret
push
loope
inc
roll
stos
cli
xlat
popa
je
lds
mov
daa
add
pushf
xchg
rcrb
je
loopne
test
pushf
jmp
xchg
jae
loope
sti
xlat
test
fsubl
xchg
lret
stc
push
push
xchg
bound
jle
std
mov
add
add
cmpl
call
popf
mov
add
bound
pop
dec
push
push
push
out
mov
rclb
inc
fisubrs
mov
lahf
icebp
and
gs
fisubs
scas
rolb
inc
je
adc
ret
mov
mov
cmp
pop
scas
xor
adcw
loop
mov
mov
pop
lret
fstps
xchg
mov
dec
mov
pop
incl
jecxz
xor
dec
lret
aaa
mov
lock
out
jecxz
xlat
lock
popf
pushf
add
into
out
dec
push
pop
sbb
fistpl
push
jecxz
xor
jb
cmc
pop
test
jl
jbe
loop
mov
mov
je
dec
cltd
jecxz
mov
pop
aad
or
in
sub
fidivl
sub
cmp
dec
mov
jns
xchg
mov
test
jg
add
popa
push
jg
aad
pop
xor
test
and
jp
icebp
lret
mov
and
imul
pushf
jae
loop
ljmp
xor
cmp
fwait
or
sarl
cmp
mov
test
icebp
adc
xchg
pop
insl
fwait
popa
insb
dec
mov
jne
jno
addb
jecxz
mov
push
imul
lds
cmp
sub
dec
jp
jmp
fcmovu
jmp
mov
pop
and
in
outsb
xchg
inc
add
stos
repz
push
popl
arpl
push
inc
clc
xchg
inc
test
call
mov
cmpsb
fwait
je
mov
nop
shl
xor
dec
sub
cmp
mov
in
cmp
movsb
popa
mov
cmp
sbb
jnp
or
fcompl
sub
mov
fwait
jp
inc
or
sub
call
adc
sub
ret
cmpsb
mov
out
js
dec
je
outsl
clc
out
insl
lds
cmpl
pop
lods
test
push
and
filds
and
mov
shl
inc
test
dec
scas
int3
xchg
push
xor
cmpb
push
cmp
mov
mov
cmp
add
sub
xorb
icebp
jecxz
movsb
push
push
mov
mov
mov
mov
repz
cmpb
int3
movsl
jecxz
jecxz
repz
out
sub
pop
inc
in
lea
sub
mov
aad
xor
stos
pop
xorl
push
mov
mov
xor
push
adc
push
mov
push
outsl
mov
aaa
sub
adc
icebp
fildll
fists
ds
in
inc
pop
mov
and
push
sbb
xchg
dec
movsl
sub
adc
dec
mov
cmp
outsb
add
repnz
roll
out
inc
popf
xchg
popf
leave
mov
push
mov
rclb
pushf
repz
cmp
xor
push
push
es
into
in
stos
repz
mov
addl
sbb
or
inc
je
jmp
or
xchg
addl
in
hlt
xchg
xchg
jo
stc
pop
mov
add
dec
mov
mov
popf
or
mov
daa
lahf
push
jp
and
repz
jbe
ret
out
repz
repz
sub
loope
pop
out
xor
fistpl
call
dec
dec
sbb
pusha
mov
js
in
daa
int
xor
sarl
dec
push
sbbl
imul
xchg
pop
jns
addr16
pop
or
in
xchg
cwtl
mov
cmp
test
aaa
or
pop
sub
cli
leave
sahf
cli
cltd
nop
and
aad
mov
jp
sahf
jb
lahf
pop
cmp
cmp
mov
jl
mov
and
mov
inc
int3
and
imul
sub
pop
or
inc
filds
fwait
pop
andb
sbb
inc
inc
inc
adc
stos
aas
cmp
adc
jmp
push
xchg
aas
data16
mov
adc
ret
sub
xor
xchg
push
inc
jb
outsl
add
jecxz
lret
repnz
loop
or
movsb
adcl
fimull
add
add
repz
and
lahf
xchg
xchg
xchg
movsb
rolb
mov
pop
push
fs
dec
xchg
inc
fs
jns
pushf
es
cmpsb
fiaddl
sub
and
cmp
mov
shlb
mov
jne
arpl
in
data16
inc
inc
roll
cmpsb
jmp
gs
rolb
dec
shlb
fsubp
jno
mov
lods
and
cld
jne
cs
sub
insl
hlt
and
test
popf
out
mov
push
ja
ret
lret
and
xor
push
jle
call
and
xorl
jno
insb
cmpsl
mov
and
ss
xor
jno
xchg
push
jmp
jnp
xor
pop
pusha
lret
imul
or
sub
je
pop
insb
xchg
in
xchg
adc
sub
mov
fwait
insl
test
aad
das
imul
xor
inc
xor
mov
out
in
lock
jne
dec
jmp
sbb
dec
lods
shl
pop
jge
insb
pop
mov
mov
xchg
inc
nop
push
outsl
fisubrs
incb
push
repnz
fsubs
test
out
je
adc
mov
or
push
pop
dec
dec
xlat
daa
and
mov
mov
ss
out
arpl
into
mov
push
test
inc
mov
mov
lret
jb
out
sub
pop
test
mov
fimull
bound
es
and
js
imul
fs
pop
mull
adc
cwtl
add
lods
mov
enter
fildll
xor
mov
mov
fisttpl
sbb
out
mov
pop
lods
cmpsl
adc
pushw
pop
je
mov
and
mov
and
pop
fucomip
inc
push
dec
push
sbb
mov
arpl
dec
push
and
adc
pop
test
jle
mov
sub
neg
cli
loopne
pusha
dec
jmp
pop
pop
mov
inc
xchg
push
dec
mov
xor
dec
out
mov
divb
xchg
sub
adc
aad
pop
insb
sub
hlt
fisttpll
lods
and
dec
xor
cmc
mov
add
loop
and
mov
push
gs
aad
sbb
add
push
xchg
jp
test
stos
xchg
and
xchg
mov
xor
xchg
nop
nop
xor
xchg
ja
out
sbb
fisttps
inc
in
in
and
lahf
shrb
xchg
fiaddl
mov
or
shll
adc
push
cmp
in
jle
out
cmpsb
mov
mov
and
arpl
adc
test
fldcw
pop
cltd
sbb
lret
cmpsl
mov
arpl
cmpsl
mov
pop
mov
jg
mov
arpl
psubusb
add
xor
call
out
push
jbe
mov
xchg
gs
sub
test
and
xor
cmpsl
push
imul
push
test
xor
clc
fistps
jo
lahf
shr
mov
scas
xor
adc
xor
lret
ffree
lock
clc
leave
int3
orb
mov
mov
jne
pop
mov
jae
inc
inc
lods
movsl
add
jl
sbb
cmpsb
daa
add
andb
xchg
dec
xchg
pop
lret
cmpsl
repnz
repz
in
sbb
adc
aas
aaa
mov
es
jb
sbb
push
js
mov
fwait
and
std
push
jp
xor
test
mov
loop
inc
jb
xchg
inc
sub
shr
sub
pop
imul
mov
lahf
adc
xor
sbb
jnp
xchg
sbb
ljmp
sar
outsl
xchg
jmp
dec
sbb
loope
pop
out
das
and
jo
test
lods
inc
subb
mov
xchg
push
mov
adc
sub
push
mov
cmc
ficoms
or
lret
pop
insb
cmp
xchg
adc
fisttpl
pop
ficompl
xchg
pop
test
aaa
fsubrl
bound
data16
jnp
or
and
push
shrb
add
xor
xor
js
inc
and
aad
inc
rorl
and
mov
or
mov
lret
ffree
les
mov
je
inc
out
fdivrs
jmp
hlt
sbb
test
inc
sub
add
mov
jg
push
sti
in
jbe
into
icebp
xor
xchg
cmp
mov
das
fidivs
and
dec
xchg
mov
jbe
out
adc
mov
sub
movsb
mov
cwtl
jecxz
jno
fs
les
and
out
inc
pop
fnstcw
xchg
std
jg
xchg
repz
adc
lret
mov
gs
aam
ds
mov
pusha
push
insl
ret
sub
scas
stc
ss
rcrl
mov
push
push
js
sbb
dec
enter
inc
add
adc
xor
fistpl
sub
fwait
sub
mov
ljmp
xchg
and
movsl
mov
pop
pop
cmp
lock
js
imul
xor
cmp
pop
sbb
leave
add
sbb
mov
mov
mov
movsb
arpl
jp
pop
jne
aaa
cmp
add
jle
das
sbb
mov
and
lret
bound
xchg
bound
mov
mov
jnp
daa
mov
jnp
sbb
mov
jb
in
push
fs
bnd
out
into
js
mov
push
sbb
es
fnstenv
xchg
mov
ljmp
mov
je
gs
xlat
jae
cmp
jne
stc
xchg
dec
outsb
sahf
lods
mov
test
minps
cwtl
ret
mov
push
fmull
stos
push
popa
adc
and
mov
sti
xsave
push
pop
push
ja
push
jno
pop
outsb
loop
pop
fwait
xchg
jmp
and
and
icebp
mov
insb
and
dec
push
iret
xor
cmp
mov
dec
enter
dec
leave
jns
pop
repz
scas
scas
loopne
jmp
mov
fwait
outsl
movsl
mov
repnz
lods
push
jae
subb
outsb
lcall
sub
adc
ljmp
pop
shlb
je
orb
adc
je
pusha
lahf
jnp
cmp
jbe
mov
popf
lret
out
nop
fisubs
pop
popf
ror
push
and
pop
out
es
mov
stc
and
xchg
pop
sbb
in
jmp
in
movsb
or
inc
cmp
stc
mov
ret
leave
sub
sbb
lar
int3
pop
lods
lds
das
aad
pop
cmp
push
ficoml
jmp
dec
cmp
jle
adc
cmp
addr16
pop
jno
jmp
out
movsl
or
jne
and
stc
in
adc
adc
mov
aas
gs
dec
pusha
cmp
adcb
or
popa
jmp
das
cltd
xor
cmp
jle
sbb
leave
push
call
mov
cs
dec
push
pop
call
mov
in
aaa
mov
add
cmpsl
nop
sbb
lds
cmc
loopne
stos
cmp
loope
and
or
aam
enter
rorb
lret
lahf
mov
fldenv
mov
cmp
dec
stc
cmpsb
in
xchg
pop
lret
mov
jbe
mov
movsl
mov
pop
call
sub
std
xchg
outsb
dec
pushf
fwait
jmp
inc
mov
aad
mov
mov
fwait
test
adc
lret
shll
mov
xor
fadds
pop
nop
push
mov
loop
dec
cmp
mov
push
icebp
or
dec
cmpsl
je
sahf
repz
scas
cmp
dec
pusha
cs
xor
popa
mov
dec
test
in
popf
adc
dec
ficoms
jmp
adc
fwait
jge
loop
ja
push
stos
cmp
icebp
jl
sub
ss
xchg
int3
repz
pop
shl
lret
pop
mov
inc
pop
or
roll
jnp
dec
pop
pop
dec
out
pop
cmpsb
repz
mov
inc
imul
ljmp
into
jg
mov
ret
mov
push
add
pop
gs
mov
in
aam
hlt
and
xchg
lds
cs
or
mov
mov
stos
cmpsb
je
mov
push
pop
mov
fdivrl
inc
adc
xchg
rolb
xlat
call
pop
sub
lea
shrl
out
jp
jo
fdivr
das
xor
cmp
xor
add
add
inc
les
mov
cmc
movsb
xchg
sub
into
or
xor
iret
mov
sarl
js
outsb
sbb
mov
data16
or
int3
lods
cmpsl
jne
cld
xchg
inc
xchg
test
jne,pt
xor
lahf
in
jns
shr
xlat
shrb
pop
sub
ss
cmp
call
jp
push
dec
dec
mov
adc
mov
sarb
dec
repnz
push
fwait
mov
test
out
jp
in
mov
ror
mov
jae
mov
jnp
mov
add
mov
push
inc
pop
cmp
push
sarl
shl
movl
xlat
ljmp
lahf
loope
mulb
scas
pop
repz
int
mov
mov
mov
mov
mov
jp
mov
jl
jmp
push
cltd
fcomps
cmc
popa
lods
lcall
movsl
and
adc
mov
push
and
aad
inc
mov
mov
call
adc
mov
sbb
sub
cmp
push
jne
jbe
jg
in
fidivrl
jno
call
loop
dec
sbb
sbb
ret
mov
divl
addl
fwait
mov
jb,pt
mov
or
popa
jne
mov
xchg
fbstp
lds
arpl
pop
xor
sub
imul
in
mov
rorb
iret
dec
aas
sbbl
popf
insb
ss
insb
std
sub
cli
in
fsubrl
addr16
and
sti
push
icebp
js
or
jg
sti
pushf
and
movsl
xor
sbb
ret
dec
lret
sub
inc
jp
leave
cmpsl
dec
fs
adc
and
aaa
xchg
sbb
insl
sub
inc
or
lcall
shlb
insb
xor
push
inc
adc
fistpll
rcl
test
mov
jne
add
fimull
js
dec
fcom
mov
aas
jg
inc
ret
leave
or
mov
out
addps
mov
adc
fists
adc
cmc
jl
test
push
daa
mov
pop
lcall
inc
jp
ljmp
sbb
das
fstpl
les
hlt
inc
pushf
imul
ja
cmpsb
jmp
loopne
lfs
icebp
jge
push
stc
push
js
insb
push
mov
inc
dec
aas
xchg
dec
cmpsl
js
fwait
pushf
fidivrl
mov
cld
xor
int3
dec
pop
mov
fucom
sub
adc
adc
fwait
data16
imulb
inc
mov
sahf
push
repz
pop
mov
sub
and
xchg
lret
sub
sub
xchg
jle
xor
jle
lods
cmp
sahf
jmp
dec
jp
cltd
and
fcoms
push
bound
test
cmpsb
sbb
fsubrl
adc
mov
add
push
mov
and
xchg
aam
iret
mov
pop
xor
fs
or
xor
das
dec
arpl
jp
inc
scas
idivl
and
pop
mov
shll
pop
push
vrangepd
data16
push
xchg
or
rorl
mov
dec
gs
xlat
push
mov
pop
or
ds
cmp
xor
ss
mov
lods
mov
fsubl
sbbl
insl
fnsave
jl
pop
sub
mov
jno
hlt
outsl
jmp
icebp
mov
cmpsb
cli
addr16
aaa
mov
adc
fistl
pop
mov
mov
or
js
sbb
imul
push
cwtl
gs
and
rcrl
xchg
outsl
js
sarl
jge
pop
insl
insl
out
repz
jns
mov
jns
inc
xlat
idivb
daa
pop
inc
push
xor
stos
sbb
ret
or
xor
out
inc
mov
xchg
sarb
rcll
je
xor
pop
mov
das
sarb
movl
dec
mov
mov
pop
imul
add
fstpl
in
iret
push
pop
xlat
mov
outsl
dec
imul
pop
pop
mov
add
int
gs
and
rcl
xor
dec
adc
and
popa
push
pusha
jbe
dec
aam
in
in
iret
cmp
cs
rcrl
addl
jg
cmpl
mov
xlat
pop
cs
xchg
sbb
out
scas
int3
fiaddl
mov
xchg
popf
jns
mov
mov
lcall
mov
rcrb
xlat
sti
dec
cmove
inc
cwtl
cltd
test
push
stos
add
push
fisubl
je
jnp
shll
loope
lret
mov
inc
out
xchg
inc
push
sti
dec
icebp
das
sbb
roll
mov
lcall
shl
das
cwtl
xchg
in
xor
cli
repnz
mov
daa
push
mov
bound
adc
imul
push
ljmp
fbstp
pusha
xor
and
add
dec
subb
jb
inc
push
sarb
out
jmp
push
mov
jge
mov
cmpsl
insl
test
notl
fidivrs
push
push
or
push
icebp
scas
test
stos
dec
lret
stos
aad
scas
andl
divl
ljmp
in
dec
movsb
fcoms
shl
sbb
popa
aad
outsb
aas
daa
mov
add
xlat
je
cs
lock
push
cmpl
mov
xchg
rcrl
std
pop
or
inc
popa
lea
or
in
mov
jg
jmp
mov
cmp
loope
jo
int3
pusha
lods
xorb
jle
mov
cmp
es
aaa
aam
mov
pop
insb
and
std
std
xchg
lea
sub
daa
movsb
or
lock
mov
fwait
leave
test
xor
setnp
imull
xchg
jl
pop
aam
nop
mov
aad
push
xor
push
pop
sub
pop
sarl
mov
or
dec
push
movsl
adc
decb
jle
mov
sbb
jmp
add
cmp
jl
jg
xchg
xor
iret
xchg
jne
adc
mov
xlat
fists
lods
fs
inc
push
stos
imul
ret
cmp
cwtl
xor
call
sbbb
fildll
and
aas
andb
dec
mov
scas
cmp
out
and
mov
inc
mov
mov
out
data16
cmp
scas
fcmovnu
add
pop
cmc
out
and
roll
jmp
pop
fsubp
adc
adc
packsswb
push
clc
or
daa
popf
sar
mov
pusha
inc
js
lods
mov
ljmp
out
notl
icebp
int3
mov
faddp
mov
stos
pop
jno
sahf
shl
int
jnp
or
repnz
sbb
mov
sub
fwait
insl
cmp
jae
pop
xchg
add
jle
sbb
add
inc
jb
jl
xor
cltd
jo
movl
dec
lahf
ds
pop
cltd
je
jne
aaa
test
cmp
test
insb
dec
xchg
xor
push
xlat
add
fcoms
mov
mov
cltd
sub
mov
test
pop
xchg
jb
in
adc
dec
add
xchg
shl
jge
pop
adc
and
movzwl
dec
frstor
pop
daa
fwait
sahf
insl
sbb
into
push
js
mov
rcl
in
in
clc
loope
icebp
mov
push
jbe
unpckhps
pop
sub
roll
sbb
hlt
mov
push
or
add
pop
inc
push
mov
not
mov
rcrl
xchg
imul
sub
sub
jno
dec
mov
call
mov
notb
mov
stos
mov
sti
lret
xchg
sbb
adc
cmp
ds
loopne
inc
cmp
insb
mov
adc
jns
push
jp
ss
popf
pop
sub
mov
sub
cmpsl
scas
dec
shll
jge
inc
pop
cmp
ret
enter
stos
push
hlt
cmpsb
add
jo
adc
adc
nop
stos
xor
push
xchg
ret
loop
mov
and
rorb
or
andl
mov
xor
push
and
push
in
jp
mov
adc
test
sti
out
imul
lds
cmpsl
sub
int3
add
mov
ds
mov
inc
leave
pushf
jle
ret
sbb
dec
testl
xchg
cmpsl
leave
cmc
dec
scas
bndstx
push
js
movsb
aam
mov
out
stos
sub
mov
sbbl
inc
or
fcoml
sbb
mov
loope
pop
mov
pop
jg
prefetcht0
dec
les
pop
roll
pop
jmp
sar
test
pop
imul
mov
fistps
pop
mov
jmp
mov
dec
cmp
xchg
adc
adc
jnp
into
sub
fistpll
mov
pop
insl
int
push
mov
out
fucomp
pop
and
sbb
cld
fisubl
adc
adc
or
bts
pop
and
mov
in
jecxz
cmp
fisubl
xor
xchg
mov
push
test
clc
fstp
pop
out
mov
add
inc
cmpsl
mov
andb
std
fdivrl
enter
fsts
nop
mov
jg
jge
jl
sbb
iret
mulb
jmp
push
lods
int
in
out
pusha
js
xor
dec
mov
mov
jnp
out
loop
bts
icebp
repz
xchg
jg
sarb
sbb
or
push
jmp
push
inc
mov
cmp
loope
push
pop
insb
mov
loopne
and
lods
daa
push
rolb
jle
fdivrl
sbb
mov
push
jg
stc
add
into
jle
adc
inc
dec
addl
mov
cltd
stos
repz
out
nop
jo
mov
cmp
daa
jb
jg
leave
nop
rorl
mov
pusha
sbb
dec
push
push
lret
add
mov
mov
aaa
mov
adc
xchg
cwtl
insl
xchg
mov
lds
je
adc
cwtl
add
push
pop
push
jecxz
mov
pop
jbe
mov
icebp
push
pop
out
repnz
jnp
out
push
lahf
fadds
inc
adc
inc
xchg
ret
pop
xchg
pop
jns
add
xor
ja
push
mov
imul
sbb
push
out
pop
dec
sahf
scas
dec
jecxz
and
mov
and
xchg
lcall
lock
imul
outsl
int
andl
movsl
push
mov
mov
test
dec
pop
pop
push
sahf
aad
jg
or
mov
insb
add
xlat
dec
sub
inc
daa
or
xchg
lret
sbb
popf
das
std
ds
cmp
push
jne
jns
pop
pop
imull
pop
adc
nop
mov
sbb
jno
push
mov
inc
scas
pop
adc
dec
mov
sub
dec
dec
add
xor
sbb
lea
sub
push
das
test
pop
out
fmuls
pop
and
push
push
pop
fs
cli
jae
aad
mull
sub
rclb
inc
mov
icebp
adc
lret
rclb
inc
lcall
add
push
je
sub
fcompl
and
das
sub
jl
nop
movsb
dec
mov
imul
lock
jle
out
stos
pop
or
rorb
imul
cmp
subl
fildl
jle
and
sbb
dec
mov
jg
push
in
lds
arpl
jns
sahf
fidivrl
pop
clc
add
push
je
ja
jecxz
mov
clc
nop
xor
scas
push
mov
fxch
in
pop
pop
or
in
mov
cli
add
dec
hlt
aas
cli
jle
arpl
stos
jl
rcrb
ljmp
lods
insl
je
xchg
mov
movsb
xchg
mov
push
pop
mov
sbb
sbb
adc
repz
cmpsb
mov
ja
aad
hlt
jle
rcr
and
mov
cmp
in
push
mov
adc
pop
xchg
sbb
xchg
out
push
ret
add
cmp
repz
inc
loopne
xchg
fneni(8087
mov
repz
and
lahf
imul
add
xchg
popf
mov
ret
pop
mov
push
or
sti
cltd
loope
outsl
je
or
repz
pop
aas
call
inc
sbb
push
jmp
mov
inc
ss
ja
js
rol
inc
mov
rcl
stos
in
lds
gs
and
sub
adc
mov
cld
or
std
pop
clc
shlb
pop
in
leave
mov
jne
fcmovnbe
scas
xchg
in
sub
int3
mov
sub
into
xor
test
clc
je
xor
cltd
sahf
pop
cld
pusha
ss
push
xor
or
or
ret
popa
push
xchg
mov
or
rcll
ss
sar
das
dec
test
or
sub
into
or
inc
popf
xchg
cmp
loope
xorb
frstor
inc
fisubrs
clc
inc
add
mov
push
popf
add
leave
mov
inc
pcmpeqw
shlb
push
in
rcrb
dec
fildll
pop
outsb
cmp
add
pop
sbb
dec
mov
sbb
sar
mov
sbb
sbb
inc
mov
cmp
andb
test
sbb
jecxz
push
in
mov
add
xor
repz
sbb
ficoml
xor
popf
cli
jne
inc
inc
bound
push
push
mov
push
mov
add
mov
xor
or
arpl
and
or
sbb
jmp
mov
jge
iret
fildll
fwait
int
adc
pop
ret
mov
mov
sub
push
adc
dec
aam
mov
stos
hlt
ficoms
ss
into
jmp
data16
dec
inc
inc
cmp
repz
imul
pushf
ss
sub
int3
add
xchg
and
xor
out
sub
shl
cmpsb
push
jae
mov
arpl
lea
inc
sarb
mov
jg
push
imul
mov
push
mov
or
mov
rolb
fnstenv
push
mov
insl
add
add
mov
adc
lock
sbb
jno
lret
xchg
mov
lret
imul
notl
push
adc
ds
scas
or
lods
loop
xor
js
daa
loopne
in
pop
xchg
mov
adc
shl
out
and
lret
daa
jmp
testb
fldt
out
xchg
xchg
and
jmp
xchg
sub
repnz
inc
inc
xchg
xchg
sub
sbb
adc
fdivrp
aam
aad
nop
push
sub
adc
mov
mov
imull
pcmpgtd
fiaddl
rorb
je
push
sbb
aam
sbb
sbb
dec
or
in
xor
sbbl
jmp
enter
in
or
mov
sub
xchg
rep
rol
or
and
fsts
iret
fiaddl
push
xorl
nop
lahf
arpl
jp
adc
jge
xchg
iret
insb
mov
fcomi
negl
dec
sbb
sbb
aad
xchg
ffreep
aad
into
sub
mov
mov
int
sti
push
and
enter
sbb
rcrb
push
inc
dec
sbb
sbbb
mov
pop
sub
mov
jbe
and
push
fucom
jbe
xor
insb
rorl
jne
mov
aaa
inc
gs
push
fsub
and
insb
cmpsl
mov
mov
call
in
stos
outsl
mov
fwait
data16
lcall
xchg
mov
xor
fs
cmp
pusha
add
cltd
ds
int3
jne
pop
xchg
mov
pushf
cmp
mov
into
dec
jb
xor
pop
es
jns
lcall
rcl
fstl
xchg
out
iret
xchg
mov
push
adc
and
out
jne
test
cmpsl
cs
add
out
and
push
mov
rol
hlt
or
enter
mov
lcall
pusha
push
stc
jae
mov
cmp
movsb
scas
xchg
jo
cmc
aaa
aad
jg
mov
outsl
inc
aad
dec
test
jp
out
repnz
or
lahf
fmul
and
cmc
cmp
lea
out
adc
arpl
hlt
xor
xchg
cmp
mov
mov
sbb
xchg
fadds
mov
not
arpl
imul
jne
into
leave
shrl
sub
mov
push
adc
mov
adc
adc
les
xchg
mov
xlat
lcall
movsb
data16
inc
dec
out
movsb
negb
out
mov
jmp
outsb
sti
cmp
jecxz
in
clc
push
lds
lods
sbb
pusha
xor
out
add
dec
jg
push
out
js
ss
sub
add
and
xchg
mov
pop
adc
dec
push
je
lea
les
pushf
adc
sub
out
jnp
sahf
rcrb
divl
mov
fdivl
shlb
dec
adc
xchg
jns
cmp
mov
or
mov
stc
repnz
cmp
or
into
adc
add
ljmp
mov
add
mov
inc
test
fwait
stc
mov
mov
sbb
push
aas
dec
jnp
jae
into
xor
fisttps
adc
out
add
add
sub
ds
aad
jecxz
adc
cwtl
rcl
jge
cltd
in
rclb
add
add
adcl
hlt
scas
cmp
mov
fildll
pop
jg
cmp
inc
add
cli
sbb
inc
dec
daa
sub
daa
out
aas
out
or
shrl
adcb
push
lahf
mov
je
mov
jne
lods
aaa
cmp
sbb
jmp
jo
push
sub
flds
scas
push
inc
fs
rcll
out
push
ret
ljmp
sub
xchg
pusha
xchg
arpl
sub
test
pop
dec
stos
cmpsl
in
mov
cmp
jae
sahf
pop
lret
in
testb
pop
cli
into
jb
popa
stos
mov
pop
inc
ja
mov
imul
cmp
pop
push
enter
jne
roll
mov
sub
mov
outsl
js
test
add
add
and
pop
fildll
sbb
jns
push
daa
in
cltd
insl
hlt
test
push
mov
into
lahf
adc
into
push
xchg
setp
pop
lods
cmp
jl
inc
leave
adc
jno
and
mov
pop
into
jle
fbld
stc
hlt
push
cs
mov
jnp
fisubrs
push
adc
scas
adc
sub
or
fdivrl
mov
aad
adc
inc
lock
ficoms
call
dec
sub
xchg
and
fbld
or
pop
nop
test
into
pop
inc
pop
lcall
cwtl
sarb
into
leave
mov
sbb
jmp
inc
xchg
lret
inc
push
inc
mov
push
orl
jns
cmp
shrb
mov
daa
mov
cli
shll
lods
sub
push
pop
mov
lods
mov
jne
dec
lods
lods
sbb
mov
fildl
loopne
or
cmp
xor
adc
mov
test
push
sub
std
outsb
cmp
mov
popf
cmp
mov
jno
int3
mov
adc
orb
xchg
cmp
andb
shr
iret
sbb
pop
in
mov
jl
and
fidivrs
xor
ret
sub
add
add
das
fistpll
fdivs
cmp
test
in
lret
push
test
movsl
push
ret
cmc
int3
imulb
push
push
push
scas
loopne
cld
lods
lret
scas
xor
cmp
fstps
loope
mov
adc
adcl
ja
movsb
pop
out
cmpsb
push
xchg
mov
leave
clc
mov
jnp
popf
sahf
xchg
clc
xchg
sub
cs
pop
fs
icebp
scas
nop
jmp
repz
pusha
arpl
sub
cmp
fsts
scas
sbb
lock
and
xchg
fldcw
les
jecxz
xchg
outsb
leave
das
filds
xchg
mov
jno
push
jmp
cmc
jle
in
mov
jb
push
or
jo
xchg
jp
fbstp
or
lods
popf
inc
inc
rcl
fsubp
jnp
push
dec
fwait
inc
ja
cs
in
fwait
hlt
ja
xor
es
add
add
mov
sbb
arpl
pushf
int
adc
sub
sbb
sbb
xor
fstps
cmp
add
push
test
and
test
push
insl
pushf
adc
mov
leave
daa
mov
icebp
lock
cmp
ret
sub
jbe
clc
xlat
pop
cmp
orb
ss
xchg
xchg
movsb
inc
pop
add
cs
outsl
ret
dec
xchg
ljmp
fsubrp
es
outsb
rcr
inc
mov
mov
add
adc
sbb
mov
xlat
xchg
adc
mov
lea
mov
pop
dec
adc
mov
inc
xchg
add
test
jmp
loopne
divb
outsb
push
cs
mov
inc
cmpsb
jmp
lods
adc
in
outsl
push
bnd
push
push
loop
jb
divl
test
jp
aam
push
int
shll
imul
shl
jecxz
mov
enter
jns
clc
ret
test
ljmp
pop
or
fidivrl
xor
int3
fistpl
push
lock
lods
jmp
dec
and
fnsave
jno
dec
xchg
stos
or
sarb
fwait
xor
jo
mov
adc
fcmovnb
in
pop
gs
les
sbb
add
xor
sbb
movsl
cmc
int
dec
push
cmpsb
and
mov
cmp
cmp
loope
mov
loopne
adc
loopne
jb
sub
add
adc
repz
and
loope
imul
sbb
push
xchg
xchg
add
inc
pop
mov
jge
icebp
inc
cs
addr16
adc
test
or
dec
fs
mov
jle
sbb
mov
and
xorb
sahf
ss
sub
lret
lcall
sbb
sbb
std
add
mov
mov
mov
pop
xchg
out
repz
xchg
push
mov
loop,pt
int
pusha
mov
data16
aas
repnz
aam
adc
mov
rolb
insb
imul
test
or
or
stc
cmp
jge
pandn
fs
pop
mov
insb
clc
mov
sti
mov
repnz
pop
into
imul
mov
js
lds
xchg
test
sbb
mov
mov
call
cwtl
mov
add
js
xchg
pop
outsl
push
sub
ret
push
fs
cmpsl
rcl
out
mov
out
fcomps
sahf
and
in
push
aam
xchg
mov
pop
sbb
lods
cli
sti
pop
xor
in
cmp
add
jmp
sti
xor
lea
test
pop
or
mov
stc
bound
out
push
pop
sbb
leave
pop
mov
jmp
lods
cld
icebp
dec
cmp
and
mov
mov
in
xor
divb
or
mov
pop
mov
or
pop
cmp
mov
cltd
and
dec
push
scas
popa
pop
rcrl
adc
jb
dec
and
pop
inc
cmp
clc
pop
add
mov
sbb
shrb
xchg
loope
cmp
xchg
pop
sbb
push
fnsave
dec
lea
adc
repz
bound
rorl
sar
rol
dec
pop
ljmp
test
fisubrs
xor
mov
push
fs
mov
data16
sbb
out
test
adc
scas
stos
in
addl
push
sbb
add
cmpsl
sbb
mov
xchg
cmp
int
xchg
lea
int
push
dec
mov
stos
movsb
je
inc
repz
add
lods
ss
sub
stos
jmp
push
ljmp
mov
imul
les
scas
pop
sub
xor
cli
pop
or
or
mov
xor
cmpl
cwtl
pop
cmpsl
adc
inc
mov
mov
pusha
ds
pushf
nop
inc
sub
cmp
jo
xchg
adc
sub
cmpsl
pop
pop
push
mov
out
sahf
lods
aaa
pop
int3
mov
xchg
xor
push
xchg
jle
pop
stos
loop
lds
and
int
xlat
sub
pop
mov
shll
in
addl
stc
adc
daa
cld
cmp
jne
push
jmp
push
sbb
ret
push
jnp
jp
loop
fisttps
pushf
add
or
mov
addr16
rorb
in
test
pop
hlt
mov
push
addr16
or
out
and
mov
mov
pushf
pushf
ret
insl
ljmp
mov
movsl
bound
cmpsb
adc
cmp
sub
test
std
mov
sub
dec
cmc
out
outsb
jmp
clc
stos
arpl
clc
in
mov
sti
fs
cmpl
cli
pop
xor
repnz
out
jg
sub
jle
jbe
outsl
mov
jae
fists
mov
push
leave
imulb
repnz
andl
mov
insl
lret
fidivl
xchg
lretw
fs
xchg
pop
xchg
pop
imul
stc
xor
ljmp
xor
loopne
loop
jns
test
ret
addr16
dec
push
dec
shll
mov
out
and
test
cmpsb
xchg
out
or
xor
into
pop
test
mov
mov
sarb
fcoms
ja
sbb
xchg
push
sbb
push
inc
xchg
lods
push
shr
stc
rcl
lds
sub
cwtl
inc
xchg
push
xchg
mov
cmpl
mov
xor
clc
jnp
sbb
mov
jmp
and
push
adc
mov
mov
jbe
test
mov
lock
add
movsb
lds
lods
insb
mov
jne
mov
xor
mov
mov
cli
mov
dec
call
xchg
lods
xchg
pushl
jnp
and
jns
fdivl
jg
xchg
pusha
jns
mov
cltd
aad
rcrl
inc
fwait
lret
bound
les
mov
mov
aam
xor
pop
sub
jmp
pusha
aam
std
test
pop
sti
cmp
frstor
and
mov
popa
outsl
cwtl
jo
lahf
push
das
aad
mov
adc
ds
mov
mov
aas
out
cs
fcoms
push
in
aaa
lret
lret
jecxz
jle
lds
or
mov
cmpb
jl
pop
jae
cmpl
clc
imul
sarl
pop
movsl
or
dec
cmpsb
cwtl
lcall
mov
mov
jb
mov
mov
pop
pop
outsl
xor
fcompl
jge
mov
jge
or
xor
mov
xchg
sti
out
in
lods
nop
mov
cli
jl
add
jmp
adc
add
xchg
add
and
rcll
dec
or
fsubl
lcall
shll
lea
inc
inc
movb
ja,pt
mov
mov
xor
fcomip
mov
ds
fdivrp
popa
scas
sub
jno
aam
jle
and
mov
jne
push
lcall
xlat
addr16
mov
mov
inc
in
out
inc
dec
aaa
incl
pop
ret
cmp
inc
add
push
jb
outsb
out
and
loopne
outsl
cmpsb
loop
add
cmpsl
test
jnp
call
inc
add
mov
aas
rcl
lret
xor
lods
or
and
jne
cli
loopne
jae
fstps
adc
hlt
test
aas
arpl
mov
xchg
dec
dec
xchg
fistps
ficoml
pop
fisubl
add
in
fsubrs
add
xor
add
pop
sbb
sub
fisttpll
mov
lcall
pop
mov
dec
ljmp
jnp
xchg
jae
push
bound
inc
adc
rorb
aad
cld
cmp
in
mov
xlat
ret
mov
xchg
outsb
loop
ret
stos
mov
movsl
xchg
mov
enter
and
inc
xor
xor
test
mov
insb
incb
jbe
push
outsl
jae
mov
call
jo
fs
xlat
loopne
sub
lock
adc
daa
cmpsl
add
sub
popa
fstl
mov
adc
adc
push
mov
sbb
adc
fisubrs
hlt
repz
fisttps
sub
push
outsb
or
ds
mov
stc
push
in
sub
cmp
in
js
jmp
clc
mov
insl
aad
dec
mov
jnp
dec
xchg
data16
adcb
and
inc
jo
repz
mov
sub
inc
push
or
sub
ljmp
imul
icebp
and
xor
xor
ds
mov
ljmp
push
pop
imul
popf
in
lea
xor
mov
jne
cmpsb
and
adc
cmc
stos
fmuls
pop
sbb
sub
xchg
mov
orl
xchg
pushf
ja
dec
fcompl
popa
fistpl
inc
aas
inc
loopne
jns
dec
pcmpgtb
dec
in
xor
ljmp
dec
push
mov
pop
lret
sbb
push
fimull
push
jns,pt
test
pop
cltd
inc
sti
dec
mov
dec
sub
dec
and
jle
pop
dec
loopne
dec
jecxz
and
mov
pop
outsl
jg
lret
mov
xchg
xchg
das
test
mov
pop
mov
mov
xchg
and
xor
xchg
xchg
das
stc
dec
add
into
bound
frstor
cmp
add
or
dec
push
push
ret
adc
push
mov
subb
cmp
inc
movsl
or
arpl
jne
cld
stc
pop
in
and
add
add
add
jge
std
mov
js
xchg
push
cmp
jns
mov
push
adc
fimull
mov
test
shrl
or
gs
sti
insl
mov
mov
pop
adc
xchg
jg
mov
test
xor
xor
ret
leave
fidivl
mov
movsb
pushf
es
mov
mov
lea
pop
ret
jecxz
adc
cmp
sbb
and
faddl
mov
fimuls
jle
stos
imul
cmp
jl
add
addr16
ljmp
adc
jbe
fisubrs
xchg
push
test
add
sub
cli
jge
mov
cwtl
cmp
push
lock
xchg
fcmovu
xor
pop
push
adc
mov
xchg
adc
dec
divl
sbb
daa
outsl
dec
mov
or
sarb
mov
push
in
sbb
pop
push
out
sbb
nop
lock
lret
cmp
in
xlat
xchg
mov
xchg
add
mov
cs
adc
imul
push
xor
popa
loope
rcll
aad
icebp
fwait
sub
mov
and
pop
cmpb
aas
add
or
in
pusha
orb
adc
mov
cli
adc
test
xor
pop
add
mov
jmp
movsl
or
hlt
test
movsb
repnz
int3
fdivl
gs
mov
xchg
cmp
inc
and
adc
in
or
add
ljmp
sub
test
jbe
sbb
jmp
scas
adc
into
pop
xchg
sub
add
pop
mov
jl
xor
adc
in
rol
shlb
notb
adc
mov
test
cmp
jae
in
push
add
xchg
cmpsl
aas
pop
jno
sub
mov
add
mov
push
xlat
pop
rclb
daa
sbb
loop
nop
js
jecxz
cwtl
inc
cs
inc
xchg
add
xlat
xchg
xor
mov
push
mov
xor
leave
and
dec
leave
lahf
sub
xchg
add
inc
sbb
cmpsl
pop
sbb
fistl
cltd
push
mov
cmp
pop
lds
xchg
pop
xor
testb
fldenv
mov
lock
scas
lock
iret
or
test
dec
cmpsl
inc
cwtl
aad
loopne
dec
jecxz
xor
and
inc
sub
jle
jge
jb
xlat
lret
scas
jno
jb
mov
mov
push
packsswb
sub
cmp
xchg
add
xor
cmp
mov
out
xchg
ds
sub
xchg
rorl
hlt
aas
fucomp
fdivp
inc
push
fwait
insl
mov
icebp
mov
jle
jle
sbb
cmpb
and
int
dec
pop
mov
jo
mov
das
loope
mov
push
and
fists
mov
mov
into
insb
sti
mov
lods
add
mov
rcr
push
or
mov
dec
pop
icebp
adc
pop
adc
push
mov
adc
cs
test
jecxz
xor
js
cs
call
sbb
movsl
push
decb
pop
mov
icebp
mov
fsub
call
dec
mov
sub
pop
mov
pop
scas
jp
add
mov
push
shlb
stc
lods
jno
mov
lahf
xor
call
inc
pop
addr16
push
mov
outsb
adc
aam
xor
add
sarb
jle
lret
sub
push
mov
lahf
pusha
stos
scas
lock
push
sub
adc
inc
pop
jnp
loope
arpl
lahf
frstor
adc
std
or
fnstcw
addr16
xchg
mov
jecxz
and
add
scas
and
xor
push
popf
popa
cmp
adc
stc
sbb
adc
es
lock
sub
xlat
idivl
dec
sahf
mov
lret
xor
ret
sub
mov
jbe
push
fcmovnu
clc
aas
subl
push
xlat
push
mov
dec
insl
push
repnz
inc
or
hlt
jg
mov
mov
dec
adc
fs
jl
in
cmp
xchg
test
cmp
or
lret
sahf
cmp
scas
cs
cmp
xchg
inc
push
mov
lds
cmp
pop
push
pusha
sbb
xor
daa
add
aad
pushf
fwait
sti
jb
jmp
rorb
pop
cmp
dec
mov
jge
int
push
mov
sahf
mov
cld
xor
out
mov
inc
adc
push
adc
xchg
je
dec
scas
dec
sbb
aam
xor
push
pop
cmp
and
push
inc
xor
adc
sub
push
or
clc
pop
jno
clc
mov
in
loopne
cwtl
push
xchg
nop
pusha
mov
cmp
sahf
outsl
xchg
rol
loope
movsb
in
xor
jne
jnp
push
cmpl
push
jge
stos
stos
and
add
xchg
push
mov
sti
cmpl
pop
and
xchg
xlat
push
mov
test
inc
iret
xor
pop
xor
cmpsl
int
xchg
inc
inc
and
out
in
aaa
push
outsl
jns
sbb
adc
jge
movsl
or
fs
cwtl
mov
push
aad
mov
push
add
push
dec
adc
dec
iret
mov
inc
and
repz
scas
inc
stc
in
push
ss
out
lds
lret
stos
sub
pop
mov
imull
test
or
xlat
add
sub
push
pop
inc
xchg
push
decl
negl
dec
cmc
shlb
xlat
int
adc
dec
push
enter
loope
es
popa
jbe
enter
popf
mov
jp
adc
jne
enter
dec
ficompl
add
add
add
popa
add
mov
cmp
cli
push
outsl
jnp
adc
jge
cltd
sub
in
testb
xor
test
cli
push
rcr
out
or
cwtl
sti
stos
jge
loop
das
or
fwait
sbb
cli
ljmp
fcompl
stos
mov
lcall
cmp
pop
xor
or
pop
push
and
xor
adc
jae
pop
das
mov
jmp
mov
sahf
test
jmp
pop
lret
addr16
cmpsl
sbb
inc
inc
sbb
cld
xchg
sbb
adc
xchg
je
adc
mov
loopne
sti
or
outsl
je
mov
test
fidivs
rclb
jnp
fbstp
mov
repz
jecxz
sub
inc
lret
in
jnp
mov
and
mov
sub
movsl
xchg
scas
xor
loope
nop
push
dec
and
pop
loopne
fbstp
dec
or
loopne
imul
mov
inc
add
out
stc
dec
dec
mov
addr16
repz
fwait
adc
push
pop
pushl
pop
inc
loop
add
push
dec
out
inc
mov
xor
scas
cmp
lahf
lods
sbbl
mov
dec
mov
sbb
dec
sbb
fildl
fstps
dec
jecxz
dec
shlb
cs
repnz
mov
xchg
inc
in
dec
push
roll
mov
je
inc
aad
jp
sbb
test
xor
xchg
sub
roll
xchg
xchg
popa
cmp
clc
enter
imull
js
or
push
out
hlt
push
pop
in
push
xor
jle
rol
lds
fisttps
and
xlat
nop
add
sbb
adc
fs
mov
sti
cmp
hlt
jb
mov
fisttps
paddq
and
insb
les
loopne
scas
repnz
or
inc
jl
js
std
dec
mov
stos
enter
pop
aas
addr16
adc
fildl
sbb
mov
and
int
popa
shrl
mov
test
imul
and
lds
pop
cltd
in
push
pop
mov
daa
test
mov
ljmp
fists
sub
nop
sub
sub
fdivl
cltd
pop
jns
lock
push
sub
and
test
add
dec
adc
movl
jne
gs
sarb
lret
xorb
add
cld
sarb
in
out
mov
jmp
mov
shrb
dec
xor
outsb
rolb
in
sbb
or
popa
addr16
loopne
lcall
repnz
adc
scas
xor
lock
fdivrs
mov
xchg
or
xlat
pop
or
pop
std
pop
js
dec
shrb
or
mov
call
mov
aad
push
xor
arpl
push
jle
fcoms
lret
cmc
js
push
add
pop
aaa
dec
insl
mov
repnz
dec
push
ficompl
inc
mov
fs
mov
sbb
push
hlt
jle
scas
sbb
loopne
addr16
int3
xchg
and
cmp
inc
mov
xchg
movsb
sub
loope
sahf
sti
inc
mov
and
cmc
pusha
int
mov
pop
movaps
inc
xchg
add
push
fwait
je
cld
repz
mov
outsb
sub
test
or
loope
sbb
jne
mov
push
pop
sbb
mov
jecxz
push
pop
sarb
pop
jne
outsl
daa
jb
or
hlt
outsb
pop
cmp
xlat
sub
pop
pop
int3
aad
scas
imul
xchg
movsl
sub
sbb
mov
popa
adc
mov
test
or
add
movsl
in
clc
rorl
lods
test
and
xor
mov
mov
inc
repz
cli
jge
dec
cmp
cld
outsl
dec
push
mov
pop
sub
lcall
pop
xchg
fcmovne
shll
movsb
adc
lahf
rclb
shl
inc
adc
es
jno
adc
pop
fidivl
int
cmc
out
or
test
fwait
jo
sbb
test
fdivr
fimull
xor
xlat
out
xchg
dec
test
jg
push
sbb
mov
outsl
push
add
lock
dec
pop
xchg
iret
inc
mov
sub
loopne
cli
inc
es
pop
shl
outsb
jg
mov
daa
xor
add
mov
movb
lods
loopne
fisttps
sub
and
cmp
mov
or
inc
push
neg
shlb
push
mov
jns
ret
jnp
or
sbb
mov
pop
rcrl
fcoms
scas
icebp
icebp
iret
sbb
gs
int3
lret
and
add
push
dec
sub
xor
lods
std
push
xchg
das
aaa
xchg
mov
fsubrs
and
inc
inc
lock
fsubl
outsb
dec
in
fstl
testb
pop
pop
je
sarb
cmp
xlat
out
fdivs
out
out
xor
ja
out
mov
pop
mov
aaa
sub
inc
mov
inc
or
push
mov
into
jecxz
pop
and
push
jmp
int3
inc
push
sub
push
hlt
incl
les
mov
xchg
into
lcall
lret
lea
mov
or
aam
add
cld
pop
jae
add
xchg
out
test
loop
adc
sub
loop
xchg
push
or
mov
xchg
lock
divps
mov
cmc
xor
mov
jno
xchg
sbb
mov
aas
popa
xchg
ret
aam
pop
and
cmpsl
hlt
cmp
rcr
sub
jae
or
add
add
roll
and
mov
sbb
lret
dec
xchg
mov
jl
das
les
push
fsubrs
popfw
pop
leave
xchg
fldenv
push
fistl
jmp
adc
push
mov
mov
mov
movsb
pusha
cmp
int3
inc
mov
xchg
loopne
icebp
insl
push
enter
mov
xchg
shr
pushf
push
imul
movsl
repnz
outsl
out
mov
mov
jecxz
and
imul
stos
adc
jp
mov
or
jecxz
add
scas
ss
inc
arpl
into
xchg
cmova
pop
orb
mov
mov
and
inc
add
test
xchg
sub
xchg
into
push
add
pop
adc
out
add
push
mov
shll
in
cld
jno
inc
xor
mov
mov
pop
iret
notl
out
ja
push
cmp
mov
jmp
inc
fidivrl
pop
decl
lret
sbb
or
shlb
fcmovbe
shll
add
push
shlb
adc
jmp
out
cwtl
cmp
cmp
jmp
test
and
fiaddl
cmp
lock
outsl
push
outsl
gs
mov
push
mov
sarl
ret
add
mov
cmpsl
aas
arpl
mov
adc
ss
dec
nop
pop
testl
loopne
inc
xchg
pop
jbe
mov
push
pop
in
dec
jg
in
cmp
je
es
dec
daa
roll
inc
lcall
lret
das
arpl
ret
pop
xchg
aas
movb
aaa
addb
ljmp
adc
lahf
daa
js
mov
adc
cld
call
mov
adc
add
movsb
pop
shl
mov
ja
mov
int3
xor
jl
stos
mov
andb
ljmp
hlt
pop
dec
xchg
hlt
push
andl
jno
push
mov
adc
mov
data16
inc
ficoms
aam
loope
jmp
jg
fsubl
stos
fadds
add
lcall
rolb
test
xchg
fldl
push
scas
ljmp
cmp
daa
je
test
push
mov
dec
adc
sbb
xchg
xor
mov
dec
shll
cmp
or
idivb
lcall
cmp
pop
jne
adc
aas
jecxz
dec
or
dec
ss
popf
and
jmp
xchg
jge
jg
mov
sub
outsl
idivl
loope
out
xchg
mov
dec
vmaxpd
std
xchg
lret
imul
xor
js
pop
xlat
push
adcb
add
cltd
dec
inc
lcall
dec
or
sbb
inc
mov
push
and
ss
jp
sub
mov
sub
mov
cwtl
inc
lods
mov
es
xchg
dec
insb
adc
mov
cwtl
jmp
add
and
mov
cs
pop
pop
or
xor
shrb
imul
in
cmpsb
sarl
movsl
sahf
add
imul
jbe
mov
pushf
les
movsb
adc
into
or
xchg
xchg
ficoml
pop
mov
or
mov
mov
adc
scas
pop
sbb
jl
cmp
lds
arpl
out
jge
pop
sti
imul
cmp
pop
dec
pop
in
loope
and
addl
fidivl
movsl
push
adc
add
hlt
std
xchg
and
shrl
sbb
insl
add
sub
pushf
adc
lahf
cmp
das
pushf
xor
iret
mov
pop
push
jmp
jb
jnp
ljmp
adc
pop
add
push
jbe
mov
or
and
xor
call
push
cs
into
xchg
jp
imul
mov
popa
sub
jmp
dec
fiaddl
xchg
pusha
cmp
pop
test
aad
ret
add
push
test
cmpl
dec
test
clc
dec
mov
call
and
mov
loopne
xchg
and
add
mov
into
pop
push
pop
hlt
out
xchg
push
jnp
mov
inc
jmp
out
mov
jge
lret
mov
inc
sti
ffreep
fdivl
xchg
test
and
fcomps
jno
cmpsb
mov
pushf
mov
xchg
xchg
push
jno
bound
ja
xchg
inc
lahf
das
je
cmp
xor
pcmpeqw
pop
aad
mov
mov
repnz
xchg
nop
ljmp
in
insb
cmp
push
cmpsl
outsb
inc
push
sbb
and
cld
xor
and
adc
inc
add
ficoms
bound
pop
arpl
mov
pop
dec
js
mov
cltd
mov
cmp
lds
and
cmpsb
push
adc
sub
js
aaa
or
sbb
and
adc
fwait
sbb
pop
in
mov
and
add
addr16
mov
jge
dec
cmp
and
notl
push
cmc
add
out
std
cmp
fucom
jae,pn
push
mov
xor
push
leave
bound
jg
movsl
cmpl
es
out
in
xchg
cmc
aas
popa
inc
enter
nop
sbb
scas
loopne
cmc
mov
test
cmc
dec
mov
pop
cmp
sarb
jne
sub
scas
add
inc
and
cmpsl
add
jl
inc
outsl
and
sub
lods
aam
push
shrd
jns
cmp
pop
sub
xchg
sar
int3
scas
ljmp
xchg
xchg
jmp
xchg
js
mov
cmp
shlb
ficompl
jge
xchg
addb
sbb
test
cmc
or
mov
xchg
push
test
mov
lods
popf
cli
sub
popf
shrl
arpl
and
sysexit
lcall
fwait
test
sbb
pop
lcall
sub
inc
pop
inc
mov
push
pop
xor
xor
pop
push
jle
pop
or
rcrl
mov
stos
sub
mov
lock
pop
push
insb
les
repz
imul
or
adcl
ret
test
pusha
adc
leave
lock
jns
adc
jmp
cmc
out
fistpll
mov
pop
lahf
xor
mov
test
lcall
xlat
jb
pusha
or
stc
push
cmp
into
xor
mov
in
in
adc
jns
pop
repz
cltd
and
lahf
xlat
scas
ffree
push
shlb
das
jae
movsb
sub
filds
pushf
pushf
fmul
rcll
or
mov
mov
or
xchg
addb
xchg
push
adc
dec
enter
xchg
bound
mov
adcl
shrb
sbb
jp
mov
fidivs
sbb
add
mov
mov
aam
mov
push
adcl
xor
push
int
push
test
and
or
add
call
fcomip
xchg
mov
xchg
dec
adc
loopne
sub
sti
sub
add
ljmp
bound
mov
pusha
mov
or
ds
mov
xor
stc
dec
fiadds
sub
es
inc
push
rorb
jecxz
mov
mov
jbe
je
mov
jo
jb
cmp
out
add
jnp
dec
popa
scas
xor
jge
jnp
xchg
xchg
data16
mov
inc
cmp
out
fwait
les
in
jmp
inc
outsl
int3
lods
cld
jge
cmp
test
stos
adc
scas
inc
jle
dec
ror
or
dec
sahf
mov
scas
orb
push
fldl
inc
les
inc
outsl
fwait
push
sub
or
sti
xchg
ficomps
dec
mov
addr16
jmp
imul
fcoml
iret
push
insb
sbb
pop
jge
pusha
and
jp
pop
mov
mov
xchg
mov
daa
xchg
push
sbb
and
lret
xchg
movsl
lea
or
mov
sub
out
mov
ss
imull
mov
cwtl
mov
js
pop
test
nop
insb
shlb
jne
adc
mov
push
push
cs
movsb
jp
jl
iret
mov
push
jo
out
out
xor
mov
mov
push
nop
imull
lcall
lcall
test
or
loope
pop
or
cmpsl
shrb
loop
xchg
outsl
cmc
inc
jp
inc
adc
and
sbb
cld
fildl
fists
pop
xchg
mov
mov
add
sbb
ret
mov
or
mov
push
push
cmc
jne
and
xchg
cmpsl
or
hlt
xsaveopt
lret
ja
push
and
stc
popa
and
jle
stos
imull
add
fmulp
ds
dec
cli
mov
cmpb
mov
adc
xlat
test
mov
andl
in
or
add
add
lret
jecxz
adc
mov
lock
aaa
or
mov
jg
loope
stos
mov
mov
cld
fiadds
mov
in
int3
adc
cmp
lret
xchg
xorb
inc
lret
pop
leave
out
push
push
adc
in
jge
pop
insl
lock
lret
lcall
int
rcrl
or
mov
cmp
dec
adc
out
pop
xchg
inc
add
xchg
push
sti
shrl
pop
sbb
dec
je
out
mov
ds
mov
cmpsl
inc
xor
loopne
inc
jecxz
inc
test
pop
sub
fxch
icebp
outsb
adc
or
pop
fmull
addr16
jnp
idiv
mov
sbb
stos
jno
dec
and
jns
shlb
inc
out
sbb
add
lods
add
outsb
test
mov
lock
ja
sub
shll
pushf
fisubl
push
mov
mov
add
cmp
pop
lret
insb
ljmp
jp
std
loope
push
mov
pop
jns
fcoms
popf
pop
pop
mov
mov
sbb
push
stc
iret
nop
jmp
repnz
and
pusha
pop
or
es
push
jle
ficoms
xchg
lahf
jge
jge
push
cmpsl
sub
pop
cmp
je
dec
add
icebp
pop
push
fdivr
insb
jae
mov
out
lahf
or
mov
sbb
mov
rolb
mov
cmp
jg
aaa
fisubrl
fxtract
push
cmpb
ds
ljmp
fcomps
mov
or
jno
cmp
pop
push
xchg
and
fwait
popf
pop
les
xor
mov
dec
mov
or
aaa
pop
fs
push
sbb
or
adc
and
push
cmpsb
leave
mov
xor
jbe
cs
dec
sbb
push
add
cmp
mov
lcall
iret
sub
addr16
cld
loopne
xchg
loope
inc
or
stc
ret
or
dec
xchg
fucomp
ja
imul
pop
sub
adc
jno
lgs
bound
cmp
rclb
addr16
and
js
pop
in
fldl2t
out
xchg
out
shlb
xchg
negl
mov
or
insb
mov
dec
push
mov
das
icebp
dec
arpl
sbb
enter
scas
xlat
ss
hlt
addl
push
dec
and
lock
mov
and
mov
dec
jmp
add
adc
jle
iret
sbb
adc
lcall
repz
data16
insl
test
in
js
push
loop
push
rol
pop
dec
rclb
mov
xlat
add
test
rolb
dec
testb
xchg
mov
adc
js
insb
addw
movsl
pop
int3
in
dec
ret
ds
das
loopne
cmpsb
pop
loopne
jne
jp
fidivl
cs
push
mov
or
iret
pop
sub
inc
and
test
jns
gs
imul
int
mov
out
add
nop
cs
out
ficoml
lcall
adc
xor
push
sbb
imul
fidivrs
jp
mov
pop
insb
cmc
lcall
fiaddl
inc
test
mov
dec
inc
shlb
loop
pop
cli
loop
push
and
jle
xor
fs
pop
out
mov
hlt
addl
popf
outsl
cmp
mov
in
cmp
cmc
pushf
mov
test
repz
idivb
jbe
lcall
cmp
sub
mov
lods
xchg
loope
pop
aam
mov
mov
cmp
mov
in
mov
pop
leave
popa
nop
es
test
jae
jo
test
test
mov
dec
add
sbbb
in
cmp
mov
mov
fdivr
mov
sahf
ss
nop
fmulp
jb
sub
jecxz
push
jp
data16
cltd
mov
movsb
jae
mov
jp
movsb
fnstsw
pop
push
mov
aad
mov
stos
mov
xorl
add
adc
push
or
mov
mov
xrstors
ja
mov
xor
mov
sbb
and
push
mov
and
rcrb
dec
jb
int3
je
mov
pop
xor
outsl
out
mov
adc
mov
and
test
and
in
and
icebp
mov
imul
int
sar
cld
stos
fs
jne
sbb
and
mov
std
enter
xor
mov
push
lock
out
std
push
sbb
xor
add
lret
xchg
in
scas
pop
push
in
les
push
int3
sub
andl
xor
scas
dec
ret
push
out
push
sbb
mov
aad
call
jbe
jnp
mov
out
sub
mov
je
addr16
sbb
cmp
outsl
in
fcoms
ljmp
mov
xchg
adc
add
stos
cs
lret
mov
add
sbb
orl
pop
sbb
push
ja
mov
out
shlb
jmp
cs
jecxz
dec
mov
fistps
xor
xchg
movsl
sbb
test
outsl
aam
outsl
fstps
adc
mov
sti
push
sbb
mov
dec
push
pop
xchg
shl
int
jne
adc
jbe
sub
shr
nop
push
into
mov
aas
fidivrl
mov
movsl
or
xorl
or
xor
in
mov
lret
adc
cmp
shr
nop
repz
imul
adc
mov
hlt
pop
xchg
imul
cmp
inc
sbb
sbb
inc
fisttps
pop
nop
mov
xor
xchg
scas
fsubs
mov
fisubl
mov
push
pop
lock
mov
roll
movsl
mov
fs
int3
or
test
roll
dec
mov
mov
pop
enter
popa
enter
adc
xchg
push
fsts
lods
in
fimuls
movsl
mov
add
dec
mov
mov
fxch
mov
xor
lret
les
bound
jb
mov
xor
pop
stos
test
mov
mov
mov
cs
ret
pop
jns
ja
dec
push
fnsave
imul
dec
out
inc
adc
pushf
leave
or
inc
fiaddl
adc
sub
xor
insb
aam
sub
jne
pusha
pop
mov
jmp
loope
pop
dec
daa
dec
mov
out
jb,pt
lahf
imulb
inc
pop
das
push
jmp
mov
sbb
fbld
sbb
out
push
orl
bswap
stc
inc
mov
into
cmp
cmp
movsb
mov
xchg
xor
insb
repz
cmp
jecxz
jno
inc
cmc
ljmp
loope
cmpsb
hlt
add
adc
sub
inc
mov
add
or
mov
jle
imul
sbb
xchg
sub
jo
rcrb
sbb
andl
sub
and
mov
push
and
into
xchg
out
pushl
pop
icebp
leave
lret
not
pusha
jno
test
sbb
fstl
jae
push
sub
pop
int
add
dec
ret
sub
inc
fisubrs
or
lods
std
mov
stos
sub
dec
mov
dec
outsl
push
pop
jmp
lea
lahf
add
mov
rcll
mov
or
jle
push
pop
mov
popf
push
mov
outsl
repnz
mov
jp
movl
xchg
pop
mov
mov
cmc
dec
in
shr
cs
dec
mov
iret
in
and
lret
jno
rcrl
mov
fwait
subl
push
inc
pop
movl
push
mov
lea
jg
dec
cmp
inc
aam
repz
or
call
push
fldcw
cmp
nop
or
add
mov
xor
pop
popf
jmp
cmp
jle
orl
mov
les
push
addl
rcrb
add
push
jae
fdivrs
push
jp
pop
nop
pop
cltd
test
xchg
pop
sahf
jge
es
dec
loopne
aas
cmp
dec
lock
out
adc
dec
lock
pop
pop
ret
sub
xchg
cmp
xchg
cmp
out
inc
scas
pop
sbb
rcrl
jmp
sarb
insb
sub
jne
sbb
fldenv
push
loope
inc
pop
jb
notb
mov
adc
int3
rorb
in
dec
aad
xor
xchg
repz
mov
lods
mov
addr16
shrl
xchg
outsb
loopne
or
adc
nop
mov
push
hlt
or
inc
or
pop
shlb
loopne
jbe
jo
inc
inc
movsl
jl
in
jno
push
jns
jle
aaa
rorl
aas
or
test
pop
aaa
cmp
pop
cmpsb
divps
or
jb
dec
pop
and
jo
gs
adc
je
out
jbe
pop
scas
mov
movsl
xchg
sbb
daa
in
adc
cmp
out
adc
lret
test
aad
ds
jle
or
pop
cs
mov
out
mov
shlb
push
cli
push
pop
sub
or
mov
jle
sub
popf
mov
bound
repnz
xchg
inc
pop
nop
sbb
push
jno
or
sbb
fwait
pusha
and
sub
into
repz
rorb
movsl
or
movsl
es
push
popf
add
mov
mov
xrelease
inc
out
adc
ret
fcmovbe
std
dec
push
or
test
jbe
adc
xor
mov
or
cmp
jmp
adc
pop
pusha
outsb
jne
outsl
dec
xchg
mov
pop
cmp
cmpsb
inc
mov
mov
in
pop
aas
inc
and
mov
subb
sub
pusha
lahf
xchg
xchg
cmc
lods
repz
sti
sub
jle
sub
sbb
lods
jmp
pop
scas
out
les
jmp
aam
sbb
lret
cmpsl
out
scas
cmpsb
dec
inc
or
int3
stc
insl
push
pop
cwtl
je
leave
cmpsl
jge
cmpsl
adc
fistl
int3
add
test
outsl
repz
cwtl
sub
ds
outsb
mov
dec
mov
adc
std
lock
sbb
xor
add
sbb
mov
mov
pushf
sbb
ljmp
repnz
stc
cmp
jns
xchg
push
clc
test
lds
int
shrl
cld
iret
movsb
push
fidivl
dec
imul
pop
mov
gs
lret
sbb
test
cmpsb
imul
cmpsb
hlt
sub
daa
jo
fbstp
mov
fistl
loope
sbb
inc
push
int3
and
jae
pop
inc
push
xchg
cmp
pop
jle
lcall
leave
ret
icebp
lods
fcomps
je
pop
and
cwtl
gs
bound
cmp
std
pop
pusha
sub
or
lea
sbb
fdivs
fiadds
adcb
lahf
out
leave
out
mov
cmpsb
xor
daa
cli
pop
and
push
les
mov
xor
test
movsb
mov
sbb
mov
iret
stos
xor
aaa
stc
pop
popf
paddb
jae
cmp
in
dec
sbb
add
adc
aas
inc
jg
daa
gs
xchg
xchg
dec
out
iret
rorb
mov
lret
adc
in
sbb
insb
jbe
mov
mov
sbb
adc
rcrl
mov
in
sub
push
sti
pushf
and
pop
jle
mov
add
aad
sar
ficompl
loope
jo
mov
mov
or
push
xor
cmc
ror
inc
js
sbb
or
pop
add
test
aaa
jo
pop
cmovne
lahf
dec
insl
sub
jmp
fstp
dec
clc
data16
push
ss
sub
inc
std
pop
sbb
decl
daa
xchg
adc
or
and
jb
mov
movsl
push
cltd
aaa
mov
data16
imul
cmp
sub
push
jp
test
fisttpl
outsb
scas
aas
iret
and
inc
cmp
xor
adc
sub
inc
sbb
in
mov
scas
xchg
sub
repz
clc
pop
cmp
fwait
cmp
add
out
mov
out
jl
js
fnsave
popa
inc
dec
stos
xchg
mov
xlat
sahf
shlb
inc
add
mov
repnz
je
cmp
arpl
pop
ret
idivl
mov
xor
xor
jge
fmuls
pop
jge
push
pop
lret
out
repnz
scas
sbb
inc
push
jb
xor
das
push
push
test
mull
cmp
adc
pusha
inc
loope
outsb
push
cmp
in
dec
dec
repnz
inc
fucom
outsl
sarl
sub
in
mov
or
stos
jb
in
pop
aaa
sub
test
cmc
push
mov
addr16
jecxz
in
sbb
orl
xchg
and
pop
xchg
lahf
shrb
adc
out
push
push
nop
addb
call
push
xor
gs
pop
lret
pop
add
loope
mul
and
notb
testl
inc
leave
mov
hlt
call
and
cmp
sub
ret
mov
push
xor
jge
inc
add
jne
mov
push
test
jno
and
jg
pop
and
or
push
cli
faddl
cltd
inc
lret
fistpl
das
dec
xor
addb
pop
cmp
xchg
mov
cmp
push
pop
xor
push
mov
mov
pop
ss
lods
pushf
in
loopne
xor
jbe
cmpsb
dec
sbb
cmp
xchg
lret
out
adcl
inc
lods
pop
jl
mov
das
jae
adcl
mov
cmpsl
adc
or
in
lahf
sti
mov
mov
lret
jne
cmp
insb
cli
xor
push
jl
xchg
icebp
pushf
mov
push
lret
enter
mov
add
inc
in
js
push
inc
inc
adc
pusha
loop
repnz
xchg
imulb
sbb
xchg
stos
idivl
repz
das
jl
dec
mov
inc
inc
inc
addb
sub
jl
jg
add
and
rcl
daa
jp
and
arpl
mov
sbb
sub
mov
ljmp
push
cmp
cmp
loope
fimull
bound
xchg
jne
push
pusha
pop
pop
js
into
in
insb
fs
push
lret
jl
rol
push
shll
sbb
test
pop
mov
lea
xchg
hlt
test
dec
fidivs
pop
je
test
and
push
addl
xor
sahf
and
add
das
test
cltd
pop
sbb
frstor
rcrl
roll
ljmp
mov
insb
cmp
lahf
add
adc
lods
jg
sbb
jp
out
mov
xchg
data16
repnz
push
in
lahf
in
insb
int
pop
cmp
mov
outsl
and
add
xchg
jecxz
aas
xchg
cmp
je
sarb
test
test
pop
test
clc
mov
adc
movsb
jo
sahf
add
leave
xor
xor
insb
mov
pop
lcall
mov
xor
into
mov
in
pusha
cmpsb
in
sbb
mov
shll
icebp
aas
push
cmc
add
adc
mov
cs
sub
lock
xor
mov
shrd
shll
cmp
mov
rcrl
fisubs
pop
mov
jg
add
add
jmp
inc
push
js
inc
push
dec
xlat
add
jge
mov
pop
repnz
xchg
push
enter
in
ljmp
sub
cmp
mov
nop
xor
insb
mov
jge
popf
loopne
movsb
or
stc
cmpb
aas
mov
scas
push
dec
xchg
push
call
xor
mov
movlps
jo
xor
in
add
jbe
sbb
lret
lods
xchg
xchg
pop
cwtl
xor
loop
mov
mov
add
lahf
movsb
mov
fistl
push
dec
push
push
mov
inc
fbld
sub
std
sarl
out
movsl
or
rolb
mov
arpl
je,pn
cmc
loope
fidivrs
xor
lods
cmpl
call
les
sub
es
sub
sub
jno
mov
xchg
mov
inc
add
xchg
push
or
dec
pop
or
mov
fistpll
mov
out
int3
mov
ret
cmc
mov
push
lea
mov
out
cmp
popa
inc
xchg
popf
mov
ja
popf
arpl
call
xor
cwtl
inc
aad
jo
dec
aad
ja
imulb
jmp
push
dec
ret
data16
orl
scas
push
mov
lock
jb
or
add
xchg
push
clc
popa
pop
sbb
xchg
lahf
push
push
inc
inc
adc
cmpl
jne
mov
xor
add
out
out
test
cli
arpl
cltd
push
adc
add
jb
adc
sbb
xor
js
in
sub
mov
fists
mov
and
lods
ja
out
int3
test
mov
push
enter
pop
push
jge
add
lds
stos
aam
pop
dec
ret
inc
push
pop
xchg
dec
icebp
test
cmp
push
fistps
mov
add
testb
aad
jns
jl
or
xchg
in
imul
xchg
dec
and
xchg
scas
sub
stos
jmp
or
ds
outsl
pushf
lods
sub
mov
dec
aas
mov
xchg
mov
pop
pop
cmp
push
into
push
or
fwait
xchg
jbe
gs
xor
cs
sub
cwtl
lea
ss
pop
inc
sub
jp
ficompl
xchg
inc
jp
mov
mov
dec
enter
sbb
sub
pop
add
adc
add
xchg
mov
mov
in
mov
out
push
dec
nop
out
out
add
int
jnp
popa
adcb
lods
sbb
mov
fwait
dec
test
mov
mov
jns
sbb
mov
das
push
call
jne
mov
rcr
lcall
pushf
push
test
xor
mov
cmpsb
mov
aam
lcall
pushf
icebp
loop
xchg
and
mov
pop
inc
stos
xor
jb
fldt
xchg
popa
lods
cmp
test
mov
fisttpll
movsb
push
jg
je
orl
mov
cmp
add
inc
sub
js
pop
cmp
pop
loopne
jl
adc
out
add
sub
mov
ljmp
adc
pop
leave
pop
cmp
mov
push
adc
adc
arpl
cmp
fsin
mov
sub
insl
mov
repnz
jle
pop
aas
mov
pop
insl
adc
imul
and
xchg
filds
jge
pop
pop
addl
popa
jbe
leave
icebp
jno
push
ja
add
mov
cli
mov
xchg
fsubp
and
ficoml
out
lret
jle
pop
inc
pop
mov
cwtl
pop
imul
fucomp
outsb
mov
fld
int3
mov
dec
call
inc
or
push
mov
adc
xor
mov
jmp
jae
std
mov
test
push
push
stos
fisubrl
dec
in
ret
fwait
jge
xchg
dec
cld
in
sbb
dec
pop
in
jg
mov
fcompl
cli
jl
xchg
popa
mov
popa
inc
xchg
call
pop
fldenv
flds
nop
and
je
mov
je
movsl
sahf
pop
int3
sbb
mov
into
test
ret
mov
das
outsb
shrl
rcr
pop
arpl
fnstenv
mov
mov
inc
sbb
jg
bound
mov
loopne
jg
sbb
mov
pop
cmpsb
xor
lods
pop
dec
or
jnp
cmpb
push
xchg
mov
pop
adc
push
xor
and
cmp
and
mull
push
cmp
or
fnstcw
ficompl
sbb
popa
test
sahf
je
out
rcrb
imul
add
inc
pcmpeqb
mov
xchg
xchg
xlat
rol
shll
cld
pop
int3
les
xchg
stos
in
adc
imull
outsb
negb
mov
lods
xor
imul
stos
ljmp
sbb
call
jne
enter
mov
rorb
push
popa
iret
sub
mov
loopne
push
xlat
pop
jbe
xchg
into
mov
push
inc
xor
call
push
cmpsb
andb
mov
sub
xchg
xor
aas
les
xlat
jge
sub
sbb
jbe
rolb
and
mov
pushf
inc
in
and
jge
shll
popa
stc
mov
lahf
hlt
xchg
insl
dec
pop
push
sub
push
xchg
std
or
into
cld
movsb
jl
rclb
mov
enter
rcll
mov
je
cltd
movsb
push
fyl2xp1
cli
xchg
mov
and
imul
jp
dec
sahf
add
mov
adc
test
stos
sub
sbbb
fnstcw
je
fadds
fadd
cmp
outsb
sbb
insb
pop
sub
adc
aam
push
and
gs
outsl
aaa
fucomp
jb
sbb
ficoml
jo
mov
cmpsl
sbb
push
ja
aas
mov
dec
xor
loopne
inc
mov
ds
roll
aam
xor
xlat
dec
cmp
cld
es
scas
push
sarl
push
sbb
fadds
hlt
and
fwait
mov
xchg
mov
dec
push
test
cmpsb
mov
fsubrl
push
jl
shlb
push
lret
or
scas
mov
mov
scas
jb
xlat
aas
daa
add
daa
sbb
cmpsb
imul
xchg
jle
test
lcall
xchg
mov
mov
out
ret
sub
adc
add
or
pop
jge
lret
fwait
sbb
movsb
std
xchg
mov
mov
repz
jg
sub
xchg
jnp
mov
cmp
in
rorb
pop
ret
imul
adc
dec
inc
and
insl
push
pop
negl
dec
and
negl
push
inc
mov
stos
lret
mov
out
enter
andl
outsl
inc
nop
mov
pop
inc
pop
sbb
ljmp
mov
cmpsl
mov
xchg
leave
and
clc
sbb
lods
sbb
fidivs
shl
sub
repz
sub
outsb
mov
mov
pushf
sub
jl
jecxz
nop
fs
mov
jge
jb
lret
push
outsb
xchg
and
jmp
mov
lds
dec
add
int3
dec
mull
movsb
pop
adcb
testl
imul
xor
or
sarl
lods
xorl
mov
mov
push
adc
push
std
pop
or
cmp
fmul
mov
popa
shrb
idivl
dec
inc
lods
adc
xor
insb
xor
xchg
stc
lea
into
push
mov
cmp
shlb
fistps
rorl
fldenv
add
scas
jl
inc
cmp
das
mov
imul
pop
lret
aad
int
dec
vmread
mov
pop
xchg
int3
xchg
push
ror
aad
sub
jg
or
mov
lods
add
push
out
mov
dec
in
lds
imul
fimuls
test
ljmp
adcb
or
sub
lods
inc
fdivrp
mov
xchg
mov
mov
push
ljmp
int3
popa
test
sbb
or
mov
daa
cmp
int3
push
sarl
fdivl
adc
imul
cmp
cwtl
js
and
insl
and
fld1
xorb
je
bound
repnz
fnstcw
cmp
notl
push
loop
mov
aas
popa
jnp
sti
cmpsl
rcrb
push
jmp
js
fisubrl
mov
cmc
scas
xchg
dec
bound
nop
pop
or
xor
adc
push
inc
lods
mov
push
outsl
jecxz
jno
push
pop
jno
cld
addl
and
xor
sub
pop
dec
and
aad
xor
jno
int
sbb
imul
pusha
jnp
stc
js
inc
xor
sbb
inc
lcall
mov
jno
pop
shlb
or
iret
int
out
insb
add
push
adc
repz
dec
cmp
sub
rcrb
test
and
jecxz
xchg
mov
add
xor
push
sar
xor
xchg
sub
sub
adc
les
ds
outsl
inc
int3
inc
mov
jnp
sbb
mov
pop
shlb
ret
test
push
shrb
mov
insl
outsl
push
nop
and
mov
movsl
ds
outsl
jle
imul
mov
add
and
fnstenv
mov
pop
out
dec
outsb
sub
mov
sbb
pop
std
jmp
pop
shrb
pop
cmp
cmp
mov
addb
lea
pop
pop
cmpsb
push
xchg
or
icebp
sbb
and
fnstenv
js
sub
cmpsl
xchg
xchg
or
daa
cmp
jae
xchg
inc
arpl
repnz
and
xchg
test
mov
jg
shld
ja
sarl
push
iret
inc
es
and
hlt
xchg
dec
pop
cmpsl
ret
adc
xchg
dec
ficompl
jb
test
loopne
pop
adcb
sbb
adc
or
stos
cwtl
shll
stos
aas
pop
and
jo
stos
xor
popf
int3
inc
rolb
fdivl
mov
or
or
sub
mov
jbe
fcmove
jmp
xchg
xchg
scas
xchg
sub
add
or
sbb
and
sub
decl
mov
jge
inc
dec
pop
dec
or
push
push
iret
xchg
pop
and
iret
ja
sahf
and
jo
sbb
or
push
push
jae
pop
call
cmp
mov
dec
fists
cld
inc
imul
sbb
xchg
xor
xchg
insb
push
jns
adc
stos
dec
fs
pop
mov
mov
outsl
or
sbb
mov
xchg
loop
push
je
sub
or
cwtl
das
js
rep
out
fcomps
jge
out
sub
pop
inc
popa
aad
xchg
or
in
imul
push
adc
les
cli
lods
xchg
fistpl
and
loope
daa
mov
lret
dec
dec
jmp
push
push
mov
cltd
mov
clc
pop
shll
xor
lds
sub
lds
add
push
pop
push
add
fstpl
popf
and
imul
xchg
test
rcrl
outsb
inc
xor
bound
add
xchg
or
mov
test
lcall
pop
cmpsl
dec
dec
adc
xchg
xchg
cmp
jge
ljmp
cmp
fmuls
ficomps
pushf
mov
adcl
movsb
cmp
stos
xor
js
cmp
jae
jg
adc
lret
ret
cmpsl
gs
push
xchg
cmpsb
lahf
jg
fcmovbe
and
add
xlat
movsl
aad
pop
add
inc
or
pop
clc
adc
mov
das
int3
out
dec
ret
rolb
pop
rdmsr
or
scas
leave
popf
and
sub
jns
mov
cs
aaa
test
jp
adc
leave
ret
pop
pop
mov
cmpsl
push
lahf
fwait
loop
sub
sub
lds
jb
inc
sbb
movsb
xchg
mov
ror
fmull
call
mov
fstps
inc
jecxz
lods
add
xor
nop
rorb
shrl
movsb
bound
sbb
mov
xchg
mov
or
out
ret
mov
cmp
int
xchg
jbe
cmp
sbb
adc
test
les
ds
into
jns
xchg
aaa
inc
pop
and
outsl
fwait
or
fbstp
loope
rolb
pop
test
xlat
and
mov
stos
cltd
jo
cwtl
in
pop
hlt
sbb
arpl
pop
xchg
jb
xchg
jbe
adc
push
test
mov
jb
fistps
mov
scas
int3
inc
pop
das
push
xchg
mov
mov
out
or
xlat
mov
jo
lods
or
stos
xchg
xorb
pushf
and
mov
or
jle
add
mov
sub
cmp
mov
jnp
fsubs
cmp
and
mov
xor
js
pop
adc
inc
in
mov
fiadds
nop
cmp
out
push
lea
xchg
add
jle
jl
pop
xchg
mov
xlat
push
lret
out
or
sub
out
mov
mov
sub
test
push
aam
adc
xchg
cmpsb
mov
adc
inc
jmp
adc
shl
mov
dec
ret
das
imul
pop
mov
shlb
xchg
popf
fwait
sarb
xor
int
adc
ljmp
sbb
das
xchg
jno
adc
insl
mov
sbb
sbb
inc
sarl
sar
into
addr16
rcrb
cmpsb
mov
jno
push
dec
inc
pop
push
dec
sub
sahf
out
or
ret
xchg
add
popf
fnsave
sbb
andb
mov
xor
iret
sbb
sqrtps
add
cmp
xor
push
das
nop
dec
jb
pusha
push
fwait
inc
rcrl
lret
lcall
bound
mov
pusha
inc
gs
xchg
pshufw
aam
insl
out
pop
movlps
sbb
xchg
iret
jl
xor
pop
lds
lock
loop
sub
movsl
mov
jne
inc
movsb
cmpsb
cmp
push
dec
out
mov
shrl
push
sbb
repz
dec
fisubl
lock
pop
mov
push
inc
and
adc
rcl
sub
pop
std
xchg
lds
xchg
cmpsb
cmp
push
inc
inc
in
xor
adc
jecxz
rcrb
cwtl
inc
int
sub
bound
lods
int
mov
sub
fld
aas
adc
and
cltd
mov
add
dec
jne
leave
btl
jmp
movsl
es
js
mov
push
or
lcall
stos
pop
jp
and
sub
inc
mov
push
or
std
push
bswap
add
jmp
mov
sbb
cmp
rcr
jge
out
cmovae
cmp
insl
aad
scas
nop
in
icebp
aad
imul
rorb
cmpsl
popa
push
sub
inc
sbbl
inc
call
rolb
out
xchg
jle
add
ss
loop
incl
sub
push
dec
std
movsb
dec
fwait
cs
xchg
xchg
lods
mov
loopne
adc
push
cmp
fidivs
repz
aas
test
cmp
sub
add
int
inc
pop
rclb
stos
mov
cmp
xor
sbbl
jbe
mov
or
add
sbb
aam
outsb
ficoml
or
push
lods
lds
dec
jne
jns
push
xadd
cmp
call
adc
divl
and
inc
xor
inc
sub
mov
jno
pop
scas
ljmp
fcompl
xchg
int3
mov
pop
ljmp
movsl
aad
inc
push
push
sbb
addr16
jmp
aam
xchg
scas
ds
aad
pushf
sbb
push
dec
xlat
jle
and
add
push
pop
sbb
and
push
rcll
sahf
add
aam
xchg
push
sbb
mov
pop
adc
adc
push
aaa
loopne
pop
fs
cmpb
out
jmp
jle
call
sub
mov
sqrtps
mov
jae
inc
std
outsl
cmp
and
je
lds
xor
ja
out
fimull
cmp
mov
mov
lret
in
xchg
adc
mov
xchg
sbb
mov
jae
and
outsl
int
jl
jmp
xor
push
lcall
push
cs
popf
lret
jnp
lcall
and
outsl
icebp
or
pushf
ret
ffreep
cmpsl
sub
jmp
xor
incl
addr16
mov
loopne
insb
mov
fidivrs
mov
and
sbb
ja
popf
cmpsb
jo
jns
repz
pop
inc
jo
cmp
inc
loope
pop
adc
add
lret
fs
xchg
cmpsb
aaa
popa
fdivl
xchg
sbb
imul
aam
xlat
adc
mov
xor
pop
push
dec
fsubrp
xlat
jp
cld
push
divl
xor
jnp
fstl
dec
int
push
xor
icebp
movsl
lret
xor
or
add
ret
mov
outsl
add
rorl
jae
test
test
mov
jmp
xchg
or
mov
arpl
into
or
repnz
addr16
or
pop
jl
mov
call
ret
or
cmp
xlat
adc
xor
mov
imul
jbe
and
loope
stc
inc
ret
pop
pop
inc
iret
stos
push
fs
repz
sub
xchg
jg
out
mov
insl
xchg
fsts
inc
mov
pop
into
jg
jmp
jecxz
inc
das
pop
sub
inc
jo
mov
jge
sahf
outsl
xchg
popa
xchg
std
cli
sub
int3
xchg
push
cld
imul
es
xor
lcall
arpl
cmpsb
ds
pop
jne
xchg
cld
and
xchg
sti
xchg
insb
xor
out
inc
stos
movsl
adc
xchg
inc
rolb
insl
nop
neg
insl
xor
jnp
bound
filds
ljmp
pop
or
and
in
xor
cs
xchg
push
notb
vcmpsd
pop
cmc
fdivrs
cmp
fmull
popa
xchg
push
jp
dec
in
movsb
push
call
and
cmp
push
sbb
mov
icebp
pop
ret
mov
cmp
int
fildll
or
jecxz
sbb
cmc
adc
cs
pop
mov
jno
cmpsl
imul
mov
jge
ja
rcr
mov
movsb
frstor
js
das
jle
jns
les
mov
in
test
xchg
sbb
sub
shrl
cli
stc
cs
xor
lock
mov
int3
lea
sbb
in
les
fcmovb
mov
imul
push
jg
lcall
lahf
clc
popa
hlt
iret
into
adcl
into
sbb
ffreep
leave
cld
cmp
lods
insl
es
lock
push
xchg
pop
inc
arpl
xchg
push
and
out
add
push
cld
cmp
pop
xlat
mov
rcl
addb
jmp
scas
sub
divl
jp
lods
xchg
shrl
push
jecxz
fwait
add
mov
xchg
mov
data16
xchg
push
imul
mov
and
jmp
addb
in
mov
cld
push
fldcw
js
adc
scas
jmp
jnp
lods
outsb
mov
jnp
cli
cmp
cmp
negl
add
in
sbb
les
incl
lret
rorb
jg
xorb
push
jbe
mov
push
add
mov
mov
xor
jle
insb
imulb
xor
fldln2
mov
xor
hlt
mov
xor
ss
sbb
push
sbb
les
aad
and
jg
jecxz
ror
mov
aam
enter
test
sbb
and
fisttps
adc
mov
ds
lret
mov
or
cld
mov
or
pusha
sbb
push
mov
out
and
out
jns
sbb
out
outsl
ja
jo
sarb
add
mov
out
lods
insb
xchg
xchg
sbb
sub
inc
cld
aaa
lcall
outsl
imul
out
add
fisubrl
xor
jmp
push
pop
leave
cli
stos
xchg
sbb
mov
das
add
call
push
sub
or
sbb
xchg
aam
xchg
popa
loopne
pop
fnstsw
adc
scas
idiv
jne
lcall
ret
rol
into
gs
inc
pop
popf
out
jne
jns
scas
in
mov
in
pusha
mov
mov
mov
sbb
lret
mov
inc
fs
out
cmp
sbb
mov
mov
inc
xchg
cli
pop
jns
mov
cmpsl
sar
sub
cli
inc
mov
add
sti
or
mov
mov
mov
pop
mov
js
and
imul
ja
insb
sti
in
je
into
add
lods
pop
mov
pop
loop
sub
xchg
out
cld
push
mull
insb
jge
jb
mov
jo
and
ret
and
mov
cld
das
or
push
push
sti
jnp
les
movb
out
xchg
shlb
push
push
dec
aaa
and
xor
mov
mov
in
mov
lea
or
shlb
iret
fcomi
dec
and
sti
inc
repz
insb
jo
sub
clc
popa
icebp
repnz
subl
adc
adc
ljmp
test
mov
sti
sub
dec
mov
aad
scas
leave
sbb
popf
stos
pushf
loop
sti
pop
push
inc
dec
lret
arpl
imul
push
repz
inc
out
mul
cmpsb
mov
test
iret
cltd
bound
int3
bound
xchg
popf
pop
jb
call
iret
add
jecxz
cli
jge
xor
addb
pop
pusha
js
sbb
push
sub
lock
fisttps
nop
mov
lock
lds
cmp
js
inc
dec
les
push
gs
jbe
lcall
sar
mov
inc
mov
or
fwait
jl
loop
pop
mov
push
mov
out
and
aad
adc
cmp
mov
mov
xor
or
pop
pusha
int3
arpl
pop
jo
call
daa
mov
mov
sub
test
xchg
movsl
clc
aas
aam
stos
or
lods
lcall
dec
push
mov
enter
pop
dec
ja
icebp
lcall
dec
sbb
jae
lds
add
push
jne
insb
test
ret
loopne
fdivp
sbb
cmp
dec
test
inc
iret
enter
popa
mov
dec
xor
cltd
mov
out
enter
sub
xchg
pushf
push
lea
cld
push
andb
or
xlat
sahf
cmp
jp
mov
add
movsl
ret
movsb
ret
fimull
lods
mov
stos
movsl
add
mov
les
jns
push
int3
inc
adc
mov
fyl2x
xor
rcll
mov
push
aaa
or
pop
aas
in
pop
fiadds
aam
inc
fs
cltd
sahf
in
pavgw
shll
sub
out
sbb
ret
adc
fists
pop
ffreep
js
add
inc
lret
leave
int3
sub
cwtl
jp
ljmpw
xchg
lahf
xorb
and
push
icebp
loopne
lock
jno
ljmp
imul
adc
inc
sahf
adc
sbb
add
bound
insl
insb
add
xchg
adc
push
xchg
sahf
ficoml
cmp
push
loopne
loopne
fcompl
das
out
sbb
jge
aam
mov
push
add
dec
cli
inc
frstor
es
jle
or
pop
mov
aam
arpl
test
ja
jecxz
push
xorb
mov
push
or
lods
sub
jne
xor
mov
ja,pt
movsb
adc
pop
and
jg
inc
repz
xchg
loopne
mov
and
mov
jnp
loope
outsb
jnp
dec
popa
ds
mov
inc
jb
jns
sbb
dec
fldl
push
jno
stc
addr16
fs
in
mull
outsb
in
lea
popf
jae
sbb
pusha
inc
mov
arpl
adc
mov
or
push
nop
mov
lock
mov
rcll
repz
fistl
rol
mov
jnp
ss
push
jae
jecxz
test
jp
xchg
in
mov
in
add
jne
icebp
mov
lret
and
addb
insb
sti
imul
sub
push
imul
inc
pop
dec
push
pop
adc
sub
sub
xor
stc
addr16
test
setns
adc
int3
sarl
lods
dec
in
push
xor
push
inc
daa
arpl
pop
nop
ret
fdiv
mov
aas
fucom
jb
and
jno
mov
stos
xor
ja
cmc
inc
sub
push
repnz
mov
sti
or
test
and
sti
loop
mov
clc
hlt
mov
call
pop
mov
dec
cmc
push
xchg
stos
fdivr
arpl
mov
stc
adc
jmp
outsl
sub
ret
push
add
pop
mov
pop
cli
into
mov
mulb
dec
inc
lock
ds
and
cmp
sub
adc
sti
shll
out
int3
dec
std
not
lahf
fstps
loopne
sub
mov
test
xchg
push
push
out
adc
lcall
adc
mov
fistpll
rorb
jb
push
andb
cmc
sub
pop
xor
mov
inc
pusha
mov
mov
sub
pushf
xchg
push
mov
hlt
xchg
cmpsl
adc
test
xchg
outsl
or
mov
dec
adcl
aas
rcrl
in
fidivrs
or
or
mov
lods
sbb
imul
push
push
xor
dec
addr16
xchg
sarl
icebp
inc
loope
lods
inc
adc
sahf
lahf
mov
lret
daa
pop
mov
and
nop
mov
or
sub
mov
test
iret
lret
push
inc
sub
out
xchg
inc
pop
sbb
aam
push
cmp
stos
mov
leave
movsb
ja
mov
push
loop
mov
cmpsl
push
insb
das
lods
xor
mov
insl
pop
imul
xor
jo
icebp
sub
mov
repz
sahf
mov
sarl
xchg
mov
add
mov
in
stos
lds
into
pop
pushf
cmp
lahf
out
add
mov
dec
xor
call
push
adc
in
sbb
dec
shll
cmp
cmp
mov
dec
add
or
idivb
adc
sbb
pop
and
jno
das
sub
adc
adcl
aas
pop
fsts
mov
xchg
sbb
cmpsl
neg
push
dec
bound
mov
pop
jbe
pop
fdivl
push
std
cld
inc
cwtl
jbe
mov
daa
and
cmp
jno
mov
push
lea
mov
movsl
add
nop
mov
xchg
subl
ret
sahf
push
pop
jne
inc
fldl
fildll
push
out
out
in
or
mov
cmpsl
inc
sub
sti
lock
and
xchg
sbb
rep
js
pusha
dec
dec
add
ret
push
lock
pop
sub
sbb
cmp
sub
push
mov
sbbb
nop
movsb
cmp
mov
mov
xchg
test
adc
xor
push
rolb
mov
xor
gs
bound
dec
adc
jmp
add
fisttps
out
movsb
ret
adc
aas
push
mov
aas
call
xchg
pop
push
inc
in
daa
int
stc
fwait
dec
clc
rcrl
jbe
lods
imul
das
adc
jecxz
pop
movsb
stc
mov
jg
mov
sti
xchg
jg
ljmp
mov
add
mov
js
aam
out
xchg
sub
int
mov
loopne
fs
les
jbe
fmuls
cmp
sub
add
mov
inc
out
xchg
stc
clc
cmp
addb
sbb
jecxz
adc
shrl
daa
xchg
cmp
xor
lret
and
fmull
test
int
dec
push
aad
jp
push
les
ficomps
add
int
movsb
mov
icebp
out
fisubs
dec
pop
cmp
lods
pop
scas
fisubl
test
cmpl
das
mov
mov
daa
xchg
shr
push
push
outsb
test
lea
mov
jecxz
aas
in
clc
mov
daa
xor
nop
mov
add
xor
adc
jl
jo
mov
dec
stos
notb
pop
pusha
scas
xchg
aad
lods
xchg
idivb
xchg
and
fwait
sub
mov
sub
loope
pop
jb
mov
movsl
adc
xchg
lahf
in
dec
out
daa
push
cmp
addr16
jl
ret
push
and
xor
mov
and
sbb
xchg
mov
inc
mov
push
push
shll
inc
push
out
pop
fisttpll
xchg
mov
xlat
pop
scas
cmp
mov
pop
mov
adc
inc
pop
inc
inc
or
jae
addl
mov
mov
outsb
shl
rol
pop
push
lock
jns
enter
notb
xchg
stos
cmp
adc
sbb
sahf
das
pop
rorb
loope
jne
ficoms
lds
jge
push
outsl
add
test
push
mov
jmp
into
popa
mov
fstps
cmpsl
lahf
nop
pop
inc
icebp
mov
test
fucomp
movb
fistpll
xchg
fists
nop
jno
loopne
aaa
aad
xor
adc
mov
mov
movsl
mov
lds
jne
je
mov
icebp
sub
mov
mov
lock
mov
fisubs
adc
mov
dec
push
mov
lea
aas
mov
xorl
mov
arpl
ja
or
lret
fadds
jb
inc
jecxz
xchg
mov
or
int3
dec
push
add
push
dec
inc
sub
pusha
jecxz
icebp
cs
shrb
jo
sti
pop
jns
js
xchg
push
add
dec
adc
cmpsb
or
push
inc
ds
xor
test
incl
aad
in
cmpsl
outsb
cmpsb
push
jle
push
inc
rcrb
or
push
inc
cmc
mov
sbb
dec
mov
add
sub
in
div
sbb
mov
xchg
dec
fs
sbb
stos
mov
jo
int
cmp
popa
in
jnp
rep
pop
pop
or
dec
addr16
mov
fsubr
and
scas
cmp
je
in
idivb
xorb
cmp
and
test
cwtl
sub
cli
pop
aas
pop
fnstenv
or
add
mov
stos
enter
jns
pusha
sahf
test
out
pop
loop
popf
mov
and
xchg
orl
insl
ret
dec
loope
sbb
inc
inc
cli
jmp
outsl
sahf
mov
and
xlat
pop
js
jo
fiadds
sbb
jne
loope
xor
inc
sub
jns
fdivrl
and
es
outsb
dec
mov
xchg
lock
pop
in
add
rorb
add
push
adcl
fsts
jg
outsb
pop
aas
jge
or
xor
mov
shr
rep
jg
test
fisubs
lcall
sbb
in
test
jg
incl
cli
xchg
ljmp
ficomps
cmp
ljmp
xchg
lock
jp
arpl
repnz
aaa
xlat
insl
js
mov
adcl
jno
mov
mov
loope
sub
shrl
fimull
push
mov
cmp
ljmp
and
outsb
sub
clc
cmp
leave
push
jno
mov
lea
xchg
inc
stos
jne
sti
mov
pop
sub
or
jl
dec
dec
aaa
mov
and
push
lds
or
xor
and
and
xchg
daa
add
push
test
pcmpgtw
add
fcoml
sahf
adc
mov
icebp
mov
pushf
test
inc
mov
or
jne
fcomi
int
into
pop
pop
cltd
cwtl
popf
add
rol
inc
aad
sti
jecxz
jbe
mov
data16
lret
mov
jne
xchg
inc
fstl
outsl
pop
stc
dec
push
inc
mov
out
mov
push
mov
inc
or
xor
in
loopne
sbb
xor
xor
into
inc
sbb
add
rolb
rcl
test
jmp
add
xchg
adcb
push
mov
pop
inc
jp
or
mov
sahf
pop
and
movsb
mov
or
lahf
mov
jnp
jo
jmp
sti
movsb
xor
ret
loope
mov
jp
mov
mov
dec
js
sub
int3
sub
push
int
jl
mov
into
and
xor
mov
lcall
sbb
xor
and
sub
stos
xor
sbb
sbb
sub
xchg
mov
repnz
jb
jno
cmp
or
mov
fcmovu
and
stc
movsl
pop
sub
mov
lds
mov
add
add
and
adc
int3
stc
fs
xchg
dec
add
mov
movsb
and
iret
xchg
out
popa
xchg
test
adc
mov
xchg
pop
adc
in
out
jo
jnp
pushf
or
pop
and
pop
jmp
das
es
adcb
push
adc
daa
je
push
in
mov
mov
ljmp
adc
pop
push
dec
jmp
popl
jns
mov
lods
movsb
jb
fcmovne
mov
fs
inc
sbb
bound
xor
fst
cmpsb
mov
mov
mov
stos
lods
xor
cmp
and
pop
jl
xchg
mov
pop
xorb
leave
dec
mov
in
lret
pop
mov
hlt
pop
jp
jecxz
push
into
push
pop
cmp
lret
andl
stos
mov
or
mov
sbb
jno
fcomp
push
pop
mov
inc
and
in
stos
sub
insb
adc
ret
jg
mov
xchg
andb
mov
test
test
stc
scas
in
mov
jnp
fstps
fsubl
loop
jns
push
mov
sub
add
mov
stos
test
shll
out
xchg
outsl
test
mov
jns
inc
mov
mov
lret
jge
fnsave
jp
xchg
imul
push
mov
inc
aas
fbld
sar
add
add
pop
pop
pop
leave
jmp
rcr
bound
prefetch
lea
insl
cmp
cmp
call
xchg
fidivrl
or
xor
movsl
js
add
push
fidivl
mov
rcl
inc
xchg
adc
dec
push
mov
pop
pop
mov
stos
adc
ret
repnz
dec
stos
aas
inc
xchg
jns
movsb
jne
dec
cmpl
and
sti
jp
arpl
inc
fsts
cmp
xor
leave
mov
loopne
mov
rorb
mov
rcrb
nop
mov
test
iret
adc
mov
pop
call
mov
mov
sub
push
sbb
mov
sbb
pop
jp
fnstenv
mov
icebp
sbb
loop
cmp
pop
mov
lcall
cli
dec
mov
push
insb
in
mov
iret
shlb
add
mov
repnz
popa
in
pusha
rorb
lds
das
int
push
cwtl
jo
sbb
and
xor
cmp
mov
sbb
clc
add
sub
scas
or
enter
std
loope
adc
jmp
in
test
outsb
jae
enter
xlat
pop
imul
aam
cli
xchg
mov
ss
jnp
fs
jnp
dec
repnz
jae
cli
lret
dec
mov
add
insl
pusha
and
and
lret
addr16
xchg
fistps
lods
push
mov
adc
push
movsb
je
push
sahf
push
push
inc
outsl
fdiv
js
pop
insl
insl
jmp
out
int3
jecxz
pop
push
ficoml
push
gs
push
test
aad
in
incl
js
pop
fidivl
add
jo
inc
push
std
mov
jge
sub
cmp
push
iret
movsl
sti
inc
jae
and
in
xor
scas
scas
out
mov
mov
cmpl
inc
cmp
fisubrl
in
je
sbb
insb
jmp
out
arpl
mov
or
mov
addl
cmp
mov
into
jle
leave
inc
sbb
cmp
jns
sub
jp
rcrl
daa
and
rcrb
jl
push
shrb
fwait
mov
sahf
xchg
pop
pop
and
enter
fldcw
negl
add
repz
inc
test
loop
in
aaa
mov
push
jmp
xor
push
mov
add
push
aas
xchg
les
decl
leave
enter
pop
mov
into
inc
push
mov
roll
jno
mov
sbb
imul
stc
mov
pusha
out
jb
rcrb
pop
jecxz
movsl
shrb
ds
inc
dec
ret
mov
adc
xor
mov
jge
mov
lret
sbb
cmp
stc
mov
cmpsb
lea
push
jbe
add
enter
stos
or
xchg
cmpsb
mov
outsl
int
sahf
push
mov
jae
mov
cltd
fsubs
and
dec
movsl
fld1
rcrl
loop
mov
mov
fidivl
pushf
cmp
repnz
cmp
test
daa
cld
mov
mov
xchg
jbe
xchg
fsubp
daa
sub
cmc
filds
mov
inc
lcall
stos
loope
mov
arpl
xor
cmp
roll
or
or
jecxz
xor
inc
lret
dec
negb
pop
jo
push
subb
out
pop
jo
popf
jbe
daa
cmp
push
push
sub
loopne
add
dec
adc
idivl
sahf
fisubrl
cmpsl
jecxz
dec
fwait
sbb
mov
daa
jmp
cli
lods
aad
jl
cmpl
js
push
mov
dec
insl
les
fldenv
daa
sbb
sbb
ja
outsl
rorb
out
outsb
xor
jp
into
and
aaa
add
rolb
ss
in
dec
or
push
dec
mov
xchg
imul
xchg
cmp
push
push
out
mov
out
cmp
lcall
adc
scas
testb
xchg
imul
and
call
out
imulb
das
sub
adc
sub
xchg
push
scas
jge
fsubr
rorl
out
cwtl
sub
xchg
xor
cli
es
lods
ds
cs
push
call
sub
pop
sbb
and
adc
xor
mov
das
lods
mov
std
mov
stos
lods
aaa
xchg
icebp
loopne
sub
mov
jb
mov
cmp
pop
push
sarl
xor
dec
out
xor
sbb
push
mov
push
lods
sub
in
loope
psubw
xor
xor
xlat
jno
loopne
jmp
inc
fcompl
pop
dec
cmc
test
out
or
loopne
mov
test
sub
xor
cmp
ljmp
enter
mov
rorl
cld
push
test
jnp
shrl
outsl
shl
stc
lcall
test
out
lods
xchg
push
sti
or
or
adc
lods
mov
mov
in
and
sbb
lret
ret
out
repnz
in
and
cmp
pop
fimull
fnstsw
lea
call
push
aam
mov
out
adc
test
mov
sub
je
sub
jmp
jecxz
mov
sub
mov
adc
inc
jb
les
push
imul
mov
insl
push
stos
cmp
pop
add
jbe
cmpsl
bound
fcmovb
fisubs
int
cmp
jl
outsl
sahf
je
lret
repnz
cld
int
pushf
aaa
pop
cmpsb
loop
lods
push
enter
fnstcw
sbb
xor
out
jg
sub
mov
test
pushf
sub
cmpsb
push
or
mov
or
pop
insl
sub
jp
lret
push
pop
sarl
fsubr
or
cmpsl
std
pop
ja
push
shrl
fnstenv
dec
lret
rclb
lahf
xchg
xor
sahf
pop
xchg
mov
lods
out
dec
mov
or
shrb
pop
out
sub
stc
aas
pop
pusha
or
push
sub
and
pop
mov
xchg
in
jmp
jl
inc
or
fs
or
ljmp
push
jnp
or
or
and
add
sub
test
xor
aas
or
js
push
imul
out
inc
gs
out
addb
jno
mov
mov
ficoml
push
dec
test
in
xor
addr16
add
into
inc
jp
mov
xor
cmpsl
jo
bound
jg
lods
push
sub
lds
xchg
dec
sbb
mov
data16
scas
add
adc
idivb
mov
inc
inc
jno
sub
xor
and
xor
sub
out
mov
pop
leave
pop
pop
sub
lock
sbbl
notl
xor
fcomip
jne
mov
int
ja
inc
xchg
xchg
clc
adc
popf
jne
repnz
cmpsl
stc
and
sub
xchg
add
loopne
addl
gs
loop
mov
fsts
xchg
lock
orb
mov
jno
mov
test
mov
je
xchg
push
jno
in
jl
adc
add
setg
mov
jmp
fldenv
inc
test
daa
fistpll
lret
mov
xorl
inc
and
jmp
pop
jno
add
stos
ret
cmp
int3
das
sbb
add
pop
mov
jo
jns
push
les
inc
push
jp
and
cmp
stc
add
xor
jne
or
loope
xchg
push
popf
pmulhuw
movsb
imul
mov
std
fildll
orb
add
popf
adc
inc
gs
sub
pop
pop
int3
dec
mov
jp
fimull
xchg
negl
pusha
out
syscall
loopnew
pop
sub
movsb
fldt
or
data16
ret
add
jmp
jle
adcb
test
cmp
push
adc
mov
add
shrb
pop
push
fsts
lret
push
mov
pusha
mov
in
push
mov
sub
push
mov
adc
adc
adc
inc
or
pop
or
xor
mov
aad
xchg
or
icebp
popa
imul
sbb
daa
sbb
adc
push
dec
xchg
ror
fsubl
add
call
fwait
cmpb
cmp
add
pop
adc
popa
ja
sahf
sarl
lahf
xchg
add
add
mov
out
pop
dec
inc
jp
add
mov
mov
inc
test
push
repnz
or
sti
nop
mov
cmpsl
cli
jno
pushw
jp
push
iret
jo
in
iret
add
inc
or
in
fnstenv
test
outsb
icebp
cmp
into
xchg
shll
mov
sbb
push
xchg
out
test
daa
aam
stos
push
mov
lock
mov
mov
idiv
lret
jecxz
std
adc
test
and
das
aam
outsl
leave
xchg
cmp
mov
mov
mov
push
adc
push
dec
push
push
aas
pop
out
lahf
cmpb
push
or
loopne,pt
xchg
fs
hlt
fcomps
pop
push
or
movsb
clc
daa
lret
adc
mov
or
cs
mov
xchg
lods
inc
lods
ret
mov
int3
inc
or
dec
or
push
inc
ficompl
out
cmpsb
dec
pop
arpl
stc
jl
in
and
lock
sub
leave
test
lds
cli
dec
filds
pop
loopne
setl
mov
inc
arpl
call
and
divb
jl
push
lahf
repz
mov
jp
mov
add
dec
push
es
popa
mov
inc
gs
or
call
lds
adc
lahf
test
outsb
in
cld
xor
mov
mov
mov
lahf
aad
test
cmp
stos
lcall
xor
push
sahf
loop
adc
jmp
mov
adc
inc
xorb
packssdw
jmp
cwtl
ret
ja
cli
pop
out
inc
and
mov
lret
mov
in
jno
push
and
add
and
mov
je
and
bound
rorb
add
insl
testl
sbb
imul
mov
test
inc
test
add
jae
pop
or
mov
cwtl
mov
inc
int
fnstenv
std
pushf
icebp
mov
rcrb
fdivrp
sub
sub
inc
xor
aaa
and
jl
mov
adc
pop
sahf
je
jae
mov
jnp
xor
mov
out
les
fnsave
adc
gs
movsl
cmp
sub
popa
fnstsw
js
jle
dec
nop
out
fmull
pop
adc
scas
push
or
mov
lods
pop
cmp
xchg
push
in
adc
rcr
sahf
scas
pop
setp
cmpb
clc
popl
xchg
xchg
add
icebp
loopne
cmp
stc
mov
mov
xor
adc
inc
test
jb
pop
cmp
dec
repnz
jno
and
out
rcrl
mov
scas
in
jp
sub
mov
mov
xchg
imulb
dec
push
movsl
imul
xchg
or
test
cli
inc
sti
aam
scas
arpl
push
jbe
xchg
inc
mov
outsb
xlat
sbb
daa
hlt
inc
daa
enter
sub
movsb
pop
inc
and
popa
divl
cmc
xor
into
das
add
adc
scas
or
mov
lock
lahf
mov
dec
sbb
dec
test
cmpsl
iret
or
test
dec
jecxz
jne
in
mov
push
sub
pop
std
dec
jne
or
sbb
ljmp
push
xlat
js
push
insl
xchg
or
xor
xor
imul
pop
in
popfw
mov
xor
rolb
and
lcall
cli
xchg
repz
mov
pop
aam
adc
testl
mov
add
sub
addr16
rcll
outsb
xor
inc
inc
inc
cld
sbb
lea
mov
jg
roll
mov
repnz
xchg
cltd
mov
lcall
jbe
and
ret
push
jg
int
repnz
aas
pusha
lcall
out
sbb
push
adc
in
sub
push
jb
xchg
icebp
or
addr16
mov
stc
sub
mov
test
pop
jnp
mov
push
jecxz
mov
cmp
lret
cmp
cs
es
mov
inc
wbinvd
mov
into
popf
loop
in
inc
push
pop
loopne
mov
pop
test
push
jo
push
scas
xor
xor
adc
lods
add
pusha
aaa
fcomip
sbb
push
lock
jo
jecxz
mov
sbb
xchg
std
inc
cmpl
rorl
fbld
repz
lock
pop
sahf
lret
xchg
addr16
xor
ret
ljmp
fwait
cmc
xlat
loop
push
clc
ficomps
in
ret
add
xor
jbe
cmp
imul
sub
test
paddusb
je
pop
je
int
mov
push
mov
das
push
jnp
inc
mov
loopne
dec
sub
popf
dec
or
lahf
mov
subb
mov
cltd
push
dec
dec
aas
aas
dec
movsl
clc
jle
loopne
add
mov
fbld
cmc
cli
push
mov
sarl
push
rclb
adc
gs
or
adc
or
xchg
fcoms
ret
fdivrs
and
and
je
pop
xchg
stos
lcall
mov
add
aas
or
xor
adc
sahf
adcl
push
stos
xlat
lret
sub
loop
or
std
push
addr16
nop
xchg
push
xor
adc
or
lock
lods
mov
dec
shufps
push
mov
mov
inc
pop
mov
sahf
leave
out
insb
out
stos
repnz
pushf
push
sbb
dec
lods
sub
pusha
dec
push
jmp
mov
and
pusha
cmp
sub
mov
push
adc
mov
out
cmp
addb
inc
mov
xchg
sub
mov
and
pop
lcall
retw
adc
mov
pop
push
shrb
cmp
push
lods
aam
sbb
xorb
aad
pushf
dec
js,pn
into
popf
pop
mov
pop
jp
in
pusha
out
fdivrl
and
fsubr
enter
mov
sti
popf
dec
leave
push
out
inc
in
out
daa
pop
stos
bound
mov
cmp
subl
pop
add
inc
out
xor
mov
adc
xchg
outsb
sub
bound
ret
cs
mov
cld
ds
mov
daa
dec
jns
and
ficoml
ljmp
sbb
sbb
fs
rorl
jno
sbb
cmp
mov
push
jecxz
and
frstor
push
out
cmp
add
inc
iret
inc
dec
sbbb
dec
dec
adcb
dec
inc
mov
popf
cmpsb
mov
jp
inc
jne
xorb
jmp
mov
cltd
push
test
clc
and
add
jmp
js
pop
stos
dec
mov
sub
cli
or
xorl
imul
loop
fwait
jmp
in
pop
dec
and
lahf
mov
mov
fists
mov
stos
test
scas
ret
and
xchg
jb
cmc
sbb
sub
xor
ret
adc
notb
lret
sub
sbb
scas
loope
mov
subb
div
sahf
les
mov
jno
jecxz
ret
inc
cmp
out
je
scas
ret
pop
cltd
dec
faddp
negl
leave
das
push
push
jg
fidivrs
xor
test
call
mov
push
xor
xorb
orb
lods
add
inc
jl
cmp
std
icebp
shlb
sbb
adc
out
pushf
scas
push
test
pop
jns
xor
mov
push
pop
cmp
shlb
pop
fcmove
xor
push
xchg
subl
cmp
addb
cli
lea
inc
dec
imul
push
cltd
xor
cmpsl
lret
in
jnp
lcall
adc
xor
adc
jns
lds
push
inc
push
sahf
pop
add
lea
lret
out
xor
mov
ss
mov
movsb
and
in
fs
dec
xchg
hlt
aas
sbbl
in
inc
mov
adc
push
cmp
mov
push
rcrl
xor
stos
push
add
mov
rolb
mov
push
push
rcl
sub
mov
push
js
inc
inc
add
rolb
gs
jne
ret
jmp
add
in
add
icebp
and
cmp
cmc
pop
test
in
lcall
push
scas
stos
adc
cwtl
lods
dec
sub
mov
popf
pop
popf
in
loop
jns
sub
pop
inc
lret
jno
shlb
inc
ss
or
lret
fsubr
or
sbb
xor
jl
xchg
mov
pop
shlb
xlat
testl
mov
loop,pt
cmp
mov
sbb
push
loopne
pop
push
sbb
jmp
jl
xchg
sbb
inc
jns
sarb
inc
pop
out
pushf
insb
sarb
cmp
ffree
pop
or
stc
test
or
mov
lea
cmp
add
outsb
push
iret
inc
in
jmp
popa
adc
sahf
jle
pushf
cmp
pop
or
mov
dec
pop
adc
push
loop
mov
jae
in
sbb
in
mov
sub
pop
fistpll
out
sub
push
jno
test
lahf
add
fwait
cli
or
cmp
xor
mov
testb
mov
test
cmp
inc
jb,pt
xor
adc
and
jg
mov
add
and
push
repz
negb
call
gs
mov
fucom
xor
addr16
sbb
sub
lock
repnz
cwtl
add
adc
inc
je
popa
push
dec
cmp
rclb
fsubr
xor
cmp
icebp
sub
lods
lret
push
xor
rorl
mov
inc
jae
out
stc
aas
fdivs
std
iret
ficoms
dec
das
lcall
add
push
push
das
jle
sub
and
jl
fcoms
and
popf
and
das
mov
xchg
inc
mov
sbb
jecxz
cmp
cwtl
es
jb
loop
sub
cwtl
repz
cmp
jns
ror
shlb
mov
es
sbb
mov
dec
sub
dec
cmpsl
arpl
inc
inc
sbb
or
sti
rclb
es
jecxz
out
push
test
int
stos
aad
nop
mov
or
jbe
add
pusha
test
xchg
and
xor
popf
psubw
xor
mov
shll
shll
inc
add
rcrl
sub
adc
ss
cli
cmc
jle
mov
std
jae
add
out
or
lret
and
mov
push
out
sti
rcll
stos
mov
pushf
stos
mov
dec
sub
inc
shlb
push
mov
or
xchg
outsl
push
dec
int
shlb
dec
pop
push
ljmp
lret
mov
mov
ret
fxch
mov
push
mov
pop
shll
lock
rorl
xor
out
add
xor
out
mov
lea
js
and
mov
or
enter
inc
push
xchg
mov
sub
rclb
lret
push
pop
js
xor
ss
outsl
scas
aam
out
cmp
dec
sbb
inc
iret
xchg
jl
push
mov
sahf
sbb
mov
xchg
imul
dec
pushf
push
pop
jae
insl
pusha
jnp
jnp
dec
inc
ljmp
jp
fwait
sbb
aam
dec
fs
rolb
jg
sub
sbb
xchg
lahf
cltd
addr16
out
push
mov
rorl
bound
or
add
pop
pop
push
sbb
dec
fnstcw
in
lcall
out
xor
call
test
fcoml
cmp
es
lahf
dec
jl
mov
fistpl
fwait
in
sbb
inc
fnstsw
jmp
std
push
pop
sbb
mov
scas
je
cmc
xor
notl
add
popa
out
sahf
pop
sbb
add
iret
xlat
inc
fldt
enter
mov
int
or
stos
mov
jl
icebp
xchg
cld
cmp
or
ret
xchg
int
xor
or
mov
rorl
cmp
test
jno
or
jmp
dec
jnp
adc
arpl
int3
int3
stc
out
jae
dec
mov
rorl
lock
pop
ret
scas
imul
lods
orb
aad
and
fldenv
jecxz
cwtl
mov
sti
xlat
lds
mov
add
ljmp
lahf
gs
or
adc
sbb
iret
dec
lret
stos
xchg
out
jnp
leave
sbb
sbb
jp
mov
mov
int3
out
xor
push
cmp
mov
and
dec
jb
push
mov
fwait
push
jle
or
jae
mov
sbb
into
push
jns
or
xchg
add
int
jl
xor
xor
xor
fbld
and
loopne
enter
bound
cmp
push
xor
push
ja
dec
insb
pusha
pop
in
dec
fildl
enter
add
jle
add
loope
lods
push
pushf
aas
cli
mov
or
lret
mov
pusha
fwait
in
out
mov
cmpsl
jne
movsb
ror
out
pushf
aad
xchg
orb
or
sti
imul
push
jbe
insb
xchg
daa
aad
push
mov
in
fildl
inc
pop
mov
inc
lods
dec
out
fcomps
or
pushf
jge
or
mov
pop
add
addb
divb
mov
in
dec
push
out
cli
and
hlt
dec
in
mov
xor
pop
or
mov
stos
leave
ror
mov
fstp
jae
mov
or
fwait
outsl
push
ljmp
int
push
add
lock
xchg
mov
xor
out
aaa
jle
push
call
add
or
sahf
js
inc
sbb
movsl
push
mov
push
int3
mov
mov
les
stc
xchg
rcl
ss
loop
xor
dec
loopne
inc
sub
cmp
mov
jbe
fsts
xor
push
and
addr16
fisttpll
mov
xchg
stos
fchs
sbb
std
out
dec
cli
mov
lcall
jns
loope
mov
popa
pop
and
inc
sbb
pop
insl
mov
or
push
lods
pop
loopne
ficoml
enter
mov
add
aad
data16
insb
outsb
xchg
dec
sti
mov
insl
inc
das
insl
paddd
insl
pop
roll
or
mov
pop
pop
pop
push
mov
aaa
in
xstore-rng
cmpsl
push
pop
fs
ss
sbb
out
cmp
ljmp
aad
push
inc
push
pusha
jl
or
bound
mov
test
xchg
ljmp
jecxz
cmpsb
xchg
mov
fcoms
jno
adc
gs
mov
fwait
xchg
or
sub
shl
repnz
push
cli
cmpl
dec
fldcw
xchg
adc
fcomps
jb
sbb
mov
pop
push
iret
jb
test
negb
das
dec
lods
jg
ss
into
addr16
fwait
roll
in
call
xchg
cmpb
hlt
jle
jmp
out
jo
or
pop
mov
mov
lret
nop
arpl
lods
rcrb
mov
das
sub
das
loopne
popa
data16
aaa
icebp
inc
and
lea
lea
push
dec
sub
xor
jo
cmp
int3
cli
jb
xor
adc
push
cli
popa
pop
mov
popa
add
fimuls
dec
daa
mov
mov
fucomp
scas
out
addr16
inc
jecxz
insl
cmp
xor
sbb
loop
pop
cmp
cmp
mov
mov
add
or
xor
jb
and
movsb
icebp
sbb
inc
and
pushf
sub
mov
or
jge
movsl
insl
out
mov
rolb
sub
dec
mov
mov
testb
pop
enter
adc
add
mov
jo
stos
pop
mov
cmp
fsubl
ret
je
leave
dec
or
aad
push
xchg
jp
fsubr
sbb
inc
sti
dec
lahf
addb
pusha
push
dec
push
jg
in
push
mov
arpl
dec
and
enter
repz
mov
loope
sti
stos
mov
add
std
inc
das
mov
mov
inc
loope
mulb
popa
cmp
jl
aaa
cwtl
xor
jne
inc
sahf
sbb
pop
cmp
addr16
jnp
stc
xchg
inc
addr16
lea
jmp
mov
dec
jle
out
add
sub
jb
jns
js
vpunpckhqdq
mov
xor
into
cmp
arpl
test
lret
sub
cmp
lcall
push
mov
push
xchg
and
jne
in
pop
pushf
mov
sarl
sbb
inc
pusha
ret
dec
scas
cltd
push
je
rcrl
notb
or
inc
test
mov
cmpsb
into
adc
adc
jge
popa
push
xor
mov
mov
in
pop
xor
mov
scas
pushf
mov
lods
test
gs
bound
or
push
jbe
and
or
cmpsb
mov
xchg
add
jo
nop
jp
jecxz
xchg
and
shll
sub
mov
into
xor
aad
jo
xor
lock
ficoms
rolb
jbe,pn
es
in
xchg
adc
push
adc
jmp
push
jge
jae
pop
push
test
sub
ret
pop
sbb
divl
clc
enter
aad
xor
sar
push
cmp
adc
mov
lret
flds
mov
ljmp
les
sub
mov
aad
enter
push
int3
and
or
mulb
dec
inc
adcl
xor
out
xchg
mov
sub
lea
in
cmp
out
mov
imul
push
fmul
iret
xor
mov
orl
inc
xor
in
lret
movb
inc
rorb
out
stos
sub
ljmp
mov
out
ret
sti
fs
jmp
xchg
jecxz
dec
or
test
xor
mov
dec
int
hlt
or
adc
pop
into
iret
xchg
shl
scas
dec
cmp
lcall
sbb
mov
or
adc
cmp
ret
or
mov
addr16
sti
cmp
lahf
bound
addb
fwait
lds
gs
dec
mov
xor
cmpsl
mov
cmp
jbe
jecxz
mov
jnp
scas
cld
outsb
pop
xor
sbb
fwait
adc
dec
loope
aad
cs
sbb
add
out
in
fisubrl
push
mov
push
add
sahf
sub
pop
out
xor
cmp
adc
xor
inc
jle
test
xor
or
loopne
in
icebp
mov
fwait
clc
testb
aaa
push
insb
pusha
fadds
add
mov
daa
je
push
rcrl
sbb
rcll
mov
sub
movsb
sbb
and
add
add
jbe
xchg
sub
xor
iret
cld
aam
in
pop
stos
dec
sahf
fcomip
fcmovnb
jne
mov
into
cmpsl
mov
arpl
or
inc
xor
es
mov
sub
add
dec
fwait
push
sub
aas
adc
iret
dec
adc
jae
add
dec
mov
and
lahf
adc
xor
js
inc
xor
ret
imul
pop
icebp
add
nop
rorb
mov
and
xchg
push
xlat
xor
mov
aad
inc
jle
js
pop
xchg
scas
lds
pop
xchg
insb
dec
sbb
in
outsb
sbb
mov
fucomip
jne
pushf
inc
xor
addb
aaa
adcb
cmp
mov
mov
add
xor
xor
fdivp
pop
push
xor
add
cwtl
mov
icebp
test
shlb
enter
pop
mov
pushf
and
out
es
hlt
ljmp
insl
cmc
addr16
xor
inc
sbb
xlat
lock
cmpsb
testb
or
vmaxpd
cld
ds
insl
dec
insb
and
cmc
xor
aam
xchg
push
and
sbb
or
and
aad
adc
fbld
pusha
xor
dec
cmp
int
push
fisubl
mov
pop
pusha
add
ret
loop
xchg
call
jmp
aaa
jbe
test
dec
pop
sub
loopne
call
fdivrl
push
push
in
fistpll
nop
mov
inc
xor
jne
xor
stos
jle
dec
insb
lods
or
cmp
stos
test
mov
dec
imul
cmc
arpl
mov
test
cmc
leave
cwtl
xchg
rcll
pop
and
xor
jmp
xchg
mov
xor
mov
push
sub
int
dec
jo
roll
dec
gs
jge
addb
push
cmp
mov
lea
pop
jnp
mov
adc
test
mov
fadds
push
add
repz
ficoml
outsl
ret
cmp
stos
adc
mov
out
inc
inc
sub
jae
pop
xchg
and
arpl
xchg
movb
push
add
jb
imul
xor
popf
jnp
repnz
leave
pop
jl
clc
jbe
add
scas
gs
jl
in
jl
lods
out
lret
div
mov
out
xor
outsl
and
jge
iret
jne,pt
ret
in
adc
or
or
jl
xchg
popf
dec
call
repz
jge
into
int
test
jecxz
cmc
stc
add
rcll
ja
aas
dec
out
mov
sub
adc
xchg
popf
subb
dec
out
sbbl
lcall
push
xor
mov
dec
mov
lea
lcall
or
jne
gs
mov
inc
nop
cmp
lock
push
shlb
icebp
outsb
repnz
cmp
bsf
push
sbb
idiv
pop
dec
arpl
in
lahf
jl
and
jns
ljmp
jge
stc
cli
dec
mov
imull
sub
cltd
ficoml
pusha
into
sbb
cmp
dec
dec
movsb
imul
into
mov
clc
inc
add
repz
mov
sbb
es
cmp
enter
shrl
insl
jbe
pop
aam
mov
xchg
imul
sub
bound
xchg
jl
and
leave
xorb
xor
test
gs
stos
es
cmc
pop
dec
cmpsb
loop
mov
mov
cmp
mov
ret
test
popf
mov
loop
insb
out
jno
xor
ffree
dec
mov
mov
push
inc
rcrl
lods
out
ljmp
push
jnp
ret
add
dec
xor
imul
jnp
movsb
test
test
pop
jo
adc
mov
clc
inc
xchg
xor
mov
xchg
pop
sbb
stos
icebp
dec
pop
mov
or
lret
ss
out
pop
cmp
and
leave
fsubrl
sub
xor
imul
xor
sub
cld
sub
push
pushf
cmp
push
xor
mov
inc
push
pop
or
mov
add
inc
sbb
mov
adc
cltd
xchg
arpl
lods
pushf
je
imul
mov
shll
bound
les
sahf
shrb
pushl
xchg
das
mov
sub
out
mov
jae
daa
rcr
or
in
jp
aad
lock
andl
push
mov
or
xor
gs
mov
pop
mov
sbb
sbb
lcall
shlb
mov
nop
roll
mov
mov
dec
adc
push
pop
ljmp
test
bound
and
testb
test
adc
arpl
fidivs
test
ficoms
sbb
das
in
ja
dec
and
imul
mov
popa
adc
mov
push
adc
jecxz
scas
push
hlt
out
lahf
xor
mov
jb
adc
stos
add
mov
cltd
mov
cmp
inc
stc
aaa
xor
aam
jle
and
xor
or
mov
pop
xchg
pop
cld
js
and
and
cmpsl
out
sarl
inc
adcb
xchg
jge
mov
bnd
je
shll
lock
sbb
insl
cmp
or
push
in
jecxz
in
outsb
icebp
sbb
and
mov
pop
dec
pop
jne
pop
rcll
mov
and
inc
fbld
pop
loopnew
add
cli
xor
or
out
jno
fs
sub
sbbb
push
xchg
cwtl
es
cmc
popa
sahf
jno
lahf
scas
sahf
sbb
mov
inc
mov
xor
mov
mov
jns
cmp
ret
out
inc
push
mov
div
xor
rcr
or
pop
pop
adc
je
data16
outsb
scas
cld
jl
in
ficoms
aas
mov
mov
dec
jb
ljmp
or
add
ljmp
xor
sbb
jl
pop
orl
ja
mulb
push
sub
nop
mov
xchg
jle
imul
fstpl
mov
push
and
cwtl
mov
add
fdiv
mov
pop
jp
rolb
jg
cmpsl
and
mov
xlat
push
dec
inc
and
rcrl
stc
int3
in
fcomi
cmp
scas
adc
mov
imul
dec
out
sbb
fmull
je
jl
pushf
xchg
push
shr
int
cmpsl
test
mov
movsb
cmpb
in
ljmp
call
mov
jge
lahf
cmp
popa
and
mov
adc
inc
mov
icebp
jp
and
mov
and
cli
repnz
xchg
sub
xor
test
mov
insl
jo
aam
lock
adc
jge
popa
ret
pop
sbb
iret
dec
xor
mov
or
push
outsb
and
fmul
sbb
testb
pop
add
pop
push
dec
push
or
test
out
inc
mov
sti
daa
rcrb
pop
pop
data16
roll
and
out
inc
int
movsb
xchg
push
mov
adc
mov
scas
fwait
sbb
add
cmc
adc
ret
pop
pop
pushf
inc
adc
mov
mov
loopne
loop
xor
lea
jnp
mov
sub
inc
int
sub
jo
and
rcr
or
mov
hlt
sbb
int3
ljmp
popf
sub
mov
jae
les
and
int
xor
out
push
mov
shll
mov
lods
aam
repnz
dec
sub
pop
rcrl
bound
out
test
sub
inc
fdivl
add
push
xchg
push
mov
cltd
or
and
test
add
sbb
xor
cmpsl
or
lock
pop
movsb
pop
cmpsl
jno
test
mov
fs
fdiv
mov
in
adc
push
fs
xor
mov
fnsave
out
jmp
adc
push
popa
or
pusha
leave
jb
in
ret
dec
xchg
inc
lods
xor
mov
add
scas
lock
push
pop
stos
add
ret
repz
cmp
out
imul
push
shlb
mov
aaa
sbb
lods
incl
pop
in
bound
jmp
push
imul
inc
stc
imul
lcall
jmp
push
idiv
pop
mov
mov
out
pop
stos
push
lret
mov
lock
fcmovu
fdivl
mov
xchg
cwtl
fwait
int3
push
fisttpl
jns
adc
xor
or
arpl
mov
fidivrs
loope
cltd
daa
into
jbe
cltd
inc
in
mov
xor
outsb
mov
jb
sbb
xchg
cltd
mov
or
add
outsb
add
adc
jg
push
mov
sub
or
testl
jmp
push
stos
jnp
mov
pop
jne
adc
inc
mov
add
mov
jmp
dec
xchg
rorl
cmpsb
ret
repz
divl
xchg
pop
or
jge
jmp
sub
jg
icebp
movsb
mov
mov
inc
ret
sar
dec
aas
ss
adc
mov
lret
mov
push
in
and
jl
push
gs
jns
outsl
xchg
xor
out
jo
adc
sbb
add
pop
fcmovnb
mov
adcb
out
jecxz
data16
mov
sub
or
subl
sub
push
mov
xor
mov
pushf
push
aam
js
js
add
les
push
pusha
test
ss
lds
mov
call
mov
iret
mov
hlt
dec
jl
lret
pushf
ljmp
ret
xchg
dec
inc
fsts
and
pop
data16
leave
inc
iret
iret
pop
ret
ds
lea
mov
repz
stos
stos
imul
pusha
xor
pushf
mov
aas
cli
cmp
mov
jne
mov
adc
add
jno
add
fcmovbe
push
dec
int
notb
mov
dec
jo
es
insl
or
xchg
jo
sub
mov
cmp
mov
outsb
mov
inc
lods
addl
lahf
jmp
jle
xlat
cltd
fbstp
mov
loopne
lea
adc
ja
fld1
test
lahf
xor
loopne
lahf
and
loop
divl
mov
inc
in
je
fildl
adc
xor
xlat
dec
aas
dec
push
in
pushf
shll
or
test
mov
or
xchg
adc
dec
insl
mov
popl
sbb
jge
and
loop
ret
test
dec
mov
mov
sub
cmpsb
cmp
fisttpll
adc
xor
or
fpatan
mov
xchg
jae
push
or
sub
add
aaa
cmp
test
inc
ffree
sub
scas
xchg
sahf
xchg
push
popf
cs
imul
cld
and
mov
and
loop
cmc
loop
test
shl
mov
sub
addr16
fisttpll
popf
pop
or
insb
mov
mov
mov
ret
inc
mov
aaa
sbb
popa
imul
call
lock
and
xchg
fcomps
sti
jge
js
jg
int
and
sbb
insb
fisubrl
jg
je
xchg
mov
ret
push
cmpxchg
and
dec
in
pop
pop
dec
cmc
sbb
mov
cmp
sbb
test
mov
mov
sbb
and
les
and
test
mov
gs
insb
dec
pop
push
fcoms
sub
push
andb
stos
xchg
xor
jecxz
cmp
add
mov
lods
loopne
mov
inc
xchg
scas
fsincos
sbb
push
sbb
or
aad
sub
outsl
enter
xchg
push
aad
sub
leave
jb
ss
fcmovnu
int
sbb
pusha
and
psubsw
scas
lret
test
cmp
jno
xor
pop
mov
jbe
pop
stos
fcomps
insl
xchg
test
inc
addb
sub
psubq
lret
test
xchg
pop
lret
inc
lock
int
xor
push
sbb
and
outsb
rcr
mov
rcrb
in
dec
fstps
dec
insb
add
pop
inc
pop
mov
popf
sbb
aam
cltd
lret
xchg
in
cmp
dec
in
xchg
add
imul
test
xor
pushf
imul
repz
setno
push
lret
add
pop
mov
adc
add
imul
jecxz
dec
jecxz
imul
jns
pop
fdivrp
hlt
out
cmp
inc
sarl
mov
ret
jbe
push
aas
xor
popa
imul
mov
add
icebp
xor
popa
add
cmp
rcl
adc
jmp
sbb
cmp
jo
inc
inc
movsl
sub
scas
cmpsb
xchg
fcomi
mov
mov
sub
sbb
popa
mov
pop
lods
xor
cmc
dec
hlt
and
dec
inc
push
test
fimull
aam
push
lret
pop
int3
insb
sub
jno
out
ret
and
sbb
jnp
sbb
ret
test
or
push
cmp
mov
push
jo
shll
xor
sbb
sarl
jmp
imul
inc
mov
jecxz
jg
leave
int3
push
cltd
sbb
push
es
rorb
mov
shll
pop
adc
dec
aaa
mov
fst
sbb
mov
notb
push
jb
dec
xchg
ret
pop
push
sbb
lcall
push
insl
movsb
jo
mov
jp
loopne
inc
jecxz
int3
fstpt
dec
inc
xchg
jmp
mov
subl
out
je
mov
leave
jmp
xor
or
xchg
sahf
and
ja
xlat
out
mov
jge
dec
enter
mov
je
push
lods
out
cwtl
xchg
stc
adc
lahf
shrb
ss
dec
pop
clc
mov
mov
jmp
inc
push
and
pop
fmuls
mov
dec
in
mov
inc
cmp
adc
cmp
out
jo
pop
mov
cmp
outsl
mov
je
rcll
out
arpl
mov
test
cs
jnp
pop
cmpsl
out
dec
xor
fs
mov
pusha
out
inc
lcall
xor
sahf
daa
cmpsb
clc
subl
in
lret
jo
mov
notl
imul
inc
or
dec
movsb
out
jne
dec
cmp
add
mov
test
enter
xchg
insl
ss
mov
xchg
call
and
adc
loop
dec
stc
daa
sbb
movsb
xlat
jb
cmp
cs
rorb
jg
jne
das
cmpsb
push
imul
pop
adc
mov
lds
xchg
sbb
repnz
je
push
es
mov
rorb
loope
fbld
std
lret
loop
dec
in
xchg
lret
lahf
aam
stc
test
push
dec
insb
jg
popf
roll
and
mov
mov
int3
shrb
pop
mov
adc
mov
sbb
int
xor
repnz
push
mov
sub
add
pop
push
mov
fidivrl
inc
ds
call
cmp
dec
xchg
cmc
sub
loopne
cmpb
fs
pop
stos
fmull
cmp
pop
ljmp
inc
sub
mov
in
push
stc
and
rcrb
out
cmp
adc
data16
push
jmp
leave
repnz
faddl
jb
add
jno
xchg
mov
xor
cmp
rorb
iret
xchg
mov
dec
push
inc
out
sub
jp
jmp
loopne
push
fs
enter
aad
sbb
or
cmpb
xorl
jne
jge
xor
mov
mov
add
and
inc
fiadds
ret
inc
xchg
dec
or
loope
lods
fwait
in
test
ror
jb
mov
mov
sub
imul
cmpsb
xchg
decl
add
mov
sarb
fbld
mov
push
mov
scas
mov
xchg
in
push
mov
fwait
movsb
mov
rorl
push
mov
rcll
loope
pop
cmpsl
inc
mov
dec
pop
dec
cmp
cmp
mov
xor
insb
adc
pop
dec
mov
inc
jmp
or
mov
dec
lods
inc
mov
loopne
mov
je
inc
dec
xchg
aad
aaa
pop
cld
and
push
xchg
aaa
push
imul
mov
xchg
mov
jg
inc
lcall
cli
add
mov
rolb
stos
stc
lock
cmovno
repz
stos
or
push
icebp
ret
mov
add
and
test
mov
leave
dec
pop
arpl
ds
xor
popl
mov
stos
pop
pusha
test
pusha
int
mov
cmp
cltd
leave
push
ds
sbb
push
adc
mov
add
and
ret
stc
lds
ljmp
sub
aad
push
cmp
sarb
mov
sub
in
and
push
mov
or
in
pushl
in
clc
cmp
lds
jmp
or
xchg
dec
loope
mull
test
inc
out
pusha
cmpsl
sbb
fwait
mov
cwtl
fstpl
sub
out
shl
adc
loop
sahf
js
sub
popa
mov
push
negl
jae
mov
pop
adc
pushf
hlt
dec
sti
sub
jp
sub
or
mov
and
add
dec
xlat
fistps
fs
add
push
out
jmp
inc
or
aam
lahf
mov
int3
mov
pop
cmp
lds
test
lea
stc
xchg
dec
sbb
inc
xor
cwtl
and
sbb
fidivrl
stc
lret
mov
mov
scas
mov
popf
mov
in
cmp
mov
dec
bound
mov
cmpsb
adc
test
pushf
test
das
aam
in
dec
xor
hlt
push
cmc
iret
xchg
insb
mov
clc
ret
sub
cmp
stos
or
mov
int3
jbe
scas
in
mov
inc
or
sub
push
frstor
das
push
inc
js
test
push
or
hlt
stc
jge
clc
or
mov
scas
or
loopne
rorl
sti
mov
sar
jnp
xchg
sub
ror
pop
push
inc
mov
xchg
push
pop
sbb
fmull
mov
daa
lds
jp
push
mov
mov
roll
sbb
fnstsw
sub
in
inc
mov
push
jne
aaa
stc
in
sbb
std
js
sub
pop
mov
sub
jo
dec
int
jnp
rorb
add
mov
loopne
mov
js
shrl
xor
movsb
pop
cmp
insl
pop
cmp
ja
fwait
clc
jg
test
in
jg
mov
dec
cwtl
daa
imul
mov
pop
mov
sbb
mov
repz
dec
push
arpl
lock
add
popf
dec
jge
xchg
insb
outsb
sti
out
data16
cmp
std
push
mov
pusha
lods
xchg
fdivs
jns
pop
or
sbb
pop
xor
lcall
xor
incl
fsubl
cmp
in
mov
mov
adc
mov
scas
push
pop
icebp
inc
adc
jno
jae
inc
movsb
rcrl
jns
inc
jns
push
dec
cmp
fisubrs
mov
cli
adc
stos
test
insb
and
inc
mov
mov
sahf
sbb
cmp
je
imul
pop
push
clc
mov
aam
pop
cld
mov
mov
push
xchg
stc
and
dec
adc
rcl
js
test
in
xor
adc
fistps
push
mull
pop
add
adc
xchg
ds
push
gs
sbb
es
jns
lahf
stos
xchg
fld
mov
add
rcrb
ja
jne
ret
xchg
xor
push
or
std
movsl
mov
mov
cmpsl
movsb
fnstsw
insb
xlat
ffreep
and
sbb
scas
cmc
fcomps
daa
or
addr16
xchg
adc
loop
mov
into
int3
enter
dec
cmpsl
xor
int
scas
and
push
mov
fildll
rorb
xchg
mov
sub
inc
jecxz
subl
mov
sbbl
xchg
push
lret
and
jb
sub
mov
xor
loopne
mov
test
cmp
xchg
pushf
jne
xor
jecxz
xor
leave
push
mov
pop
pop
xchg
test
loop
out
xchg
testb
fbld
xor
push
mov
cmc
rcrb
pop
sub
cmp
imul
adc
lods
pushf
jl
insl
push
lock
push
xor
ja
dec
jo
in
lods
scas
mov
or
and
sbb
loop
xchg
xchg
fwait
mov
hlt
in
xor
mov
sbb
fisubrs
outsb
shlb
adc
mov
test
repnz
inc
lock
mov
sbb
aas
in
mov
adc
lahf
fstl
out
push
dec
mov
icebp
subb
scas
sbb
jle
fimuls
xchg
mov
jae
dec
sub
test
in
jmp
push
inc
outsl
mov
ja
test
movsb
sub
inc
push
add
mov
js
inc
inc
mov
mov
adc
fadd
scas
out
lods
or
jnp
adc
jb
push
xlat
dec
push
clc
insb
js
cli
dec
inc
xchg
ret
push
orb
test
push
loope
lret
mov
frstor
sahf
out
xor
mov
hlt
push
add
leave
adcl
add
insb
cmp
rcll
mov
fmul
sbb
sbb
mov
cmp
inc
lret
sub
mov
add
inc
insl
push
adc
fisttpl
aam
fs
and
out
gs
jmp
or
pop
lods
aas
jbe
cld
inc
popa
xchg
add
out
xchg
jae
fstps
and
mov
pop
lods
add
xor
js
scas
sbb
inc
dec
xor
sti
mov
pop
insl
sub
mov
xchg
js
fwait
leave
mov
xchg
out
jecxz
dec
jne
rolb
dec
pop
mov
lret
jb
mov
sub
test
fsts
cmp
mov
sti
and
mov
imul
adc
lods
out
xchg
push
pop
icebp
mov
loop
mov
or
and
cmp
lret
dec
adc
mov
loop
fdivl
mov
xor
aad
sbb
rorb
sub
pop
jmp
fs
mov
clc
sub
mov
push
push
fsubl
push
orb
lahf
add
test
enter
cld
pop
jo
cmpsl
push
jnp
dec
shrb
ja
mov
addr16
mov
fisubs
test
rcrb
or
sub
lret
cs
sbb
cmpsb
pop
dec
mov
cmpsb
addr16
ja
jg
mov
fistpll
adc
outsl
loopne
push
cmp
int
and
sbb
loopne
popa
repnz
sahf
and
xchg
pop
imul
and
out
jne
mov
test
add
pop
movsb
and
das
roll
sub
mov
bound
mov
jl
sub
mov
xor
outsb
imul
xchg
pop
rclb
jmp
push
cmp
test
lock
cld
aas
pop
jl
dec
mov
xor
pop
imul
push
loop
sbb
arpl
out
imul
pop
insl
mov
clc
aam
inc
push
movsl
ficoml
sahf
jmp
and
cwtl
fmul
dec
dec
ret
xor
dec
pop
xchg
mov
push
in
cmp
jo
adc
xor
sti
xchg
fistpll
scas
lahf
pop
sub
std
xor
jne
je
pop
aad
imul
shrl
bound
fidivl
push
mov
mov
pop
mov
and
gs
repz
inc
lret
std
cmp
adc
in
fwait
mov
mov
movsl
jecxz
lcall
mov
mov
push
aas
sbb
mov
push
push
add
xor
les
inc
pop
and
dec
push
ja
mov
mov
push
xlat
push
jmp
cwtl
out
repz
and
push
ss
out
mov
sbb
mov
push
ljmp
pop
das
add
out
subl
pop
addr16
fistpll
cmp
in
adc
lods
lcall
adc
pop
into
push
aad
imul
lahf
lret
fstps
xchg
scas
fcompl
xor
mov
and
pop
sbb
popa
lahf
dec
push
fs
call
jnp
iret
sub
inc
inc
mov
xor
dec
adc
xor
inc
lret
or
dec
push
outsb
dec
int
pop
sahf
mov
sarl
and
push
pop
add
push
mov
dec
xchg
gs
mov
adc
lret
scas
and
mov
outsl
mov
std
mov
cli
outsb
mov
pop
js
inc
call
mov
add
je
and
or
insl
inc
or
mov
sub
test
scas
sbb
cld
inc
cs
or
push
jl
nop
jmp
insl
andb
inc
rcll
sub
repz
cmp
jp
lahf
sbb
or
not
cmpsl
jg
or
mov
cli
pop
pop
fisubs
icebp
mov
les
jno
call
mov
leave
test
sub
push
fstpt
mov
and
lret
test
jmp
lahf
sbb
daa
push
lcall
lea
pop
nop
or
pop
pop
cmp
outsl
jle
xlat
icebp
pushf
daa
mov
cmp
stos
fs
lods
and
push
add
rsm
cmpsl
push
inc
dec
ds
into
cltd
mov
les
aam
cmp
dec
dec
shrl
xor
pushf
xlat
push
jns
pushf
pop
loope
inc
add
insl
xchg
sbb
pop
popa
xchg
enter
lret
xchg
dec
popa
out
push
ja
mov
pop
xchg
shrb
into
mov
dec
xor
jns
cltd
stos
loope
aaa
test
int3
add
xchg
sub
sub
cmc
test
jae
add
jmp
xchg
cwtl
sahf
pop
movsl
push
pop
dec
cmp
add
push
rclb
push
and
adc
and
sub
lock
sub
iret
xor
xchg
add
or
push
aas
mov
lea
divl
dec
scas
and
mov
dec
sub
hlt
int3
sti
test
andb
test
xchg
xchg
leave
pusha
mov
cmp
adc
push
mov
loop
add
dec
in
out
mov
xor
test
in
arpl
sub
cld
inc
imul
js
mov
dec
cld
mov
pop
mov
inc
popf
stos
lds
movsb
jl
insl
insl
stos
orb
push
hlt
cmpsl
fcmovnbe
xor
and
jecxz
inc
out
mov
imul
xor
fcoms
inc
mov
or
mov
stc
out
jmp
adc
gs
xchg
test
popa
dec
fdivrs
scas
mov
movsb
push
nop
loop
cs
pop
imul
adc
movsb
int
push
jb
jo
loop
lea
out
negl
test
add
bound
nop
shlb
pop
nop
inc
sub
pop
add
call
dec
inc
or
data16
addb
or
icebp
orb
jne
outsl
and
dec
add
mov
mov
cmpsl
cli
dec
adc
enter
fs
into
pop
inc
jecxz
xlat
or
lcall
add
mov
push
sahf
or
mov
sub
and
jb
loope
mov
mov
loopne
cmp
push
sbb
cmp
cwtl
pop
add
test
xchg
bound
and
sub
jg
imul
test
jno
jb
jae
mov
mov
push
or
add
test
je
adc
push
adc
xchg
push
pop
add
sbb
mov
pop
subb
fimuls
or
add
into
xchg
testl
xor
add
mov
js
xchg
das
les
adc
das
clc
or
add
mov
mov
icebp
sub
insl
jl
out
jp
sbb
xchg
mov
or
cmpb
xor
js
xrelease
dec
sub
sbbb
inc
xchg
aas
jne
push
mov
enter
popf
and
scas
pusha
cmc
shr
xor
fwait
pop
mov
push
jge
mov
mov
cmc
adcb
ds
cltd
pop
hlt
not
pop
popa
outsl
mull
push
ret
aas
test
pop
incl
adc
mov
je
mov
maskmovdqu
cld
lods
xchg
sbb
std
addr16
xchg
hlt
out
add
push
cwtl
popa
pushf
mov
or
negb
movsb
sbb
lods
ljmp
shlb
jno
mov
clc
mov
add
sbb
and
xchg
add
jge
jbe
in
push
aad
cmc
add
scas
aad
cmpl
push
cmp
daa
fs
scas
mov
sbb
mov
mov
outsb
aaa
mov
xchg
push
mov
mov
sub
inc
gs
mov
xchg
sub
mov
mov
lock
mov
jecxz
xor
imul
jg
dec
mov
decl
and
enter
cltd
push
lods
mov
loop
and
lds
sub
push
dec
lcall
adc
jno
outsl
xchg
push
jns
jge
test
bnd
or
or
xor
fiaddl
jbe
ljmp
pop
lods
jg
sub
nop
adc
push
shll
xchg
subb
stos
fisttpll
sbb
sub
test
out
aas
test
push
dec
jb
lcall
sbb
inc
push
push
inc
loopne
and
mov
enter
add
or
mov
mov
imul
cli
gs
daa
repz
cmp
xlat
aaa
inc
add
test
leave
mov
add
test
scas
sbb
arpl
enter
repnz
les
xchg
test
sarl
xchg
mov
test
std
pop
mov
cld
out
mov
and
mov
pop
out
and
jne
dec
das
stc
pop
fistpl
push
cli
subb
jmp
inc
fstps
lahf
jecxz
xorl
ficomps
loop
xor
xor
into
mov
dec
pushf
push
clc
mov
adc
push
fs
in
add
pop
notl
sub
hlt
cmp
and
cmp
mov
or
lods
inc
pop
xchg
mov
mov
shl
adc
push
mov
cwtl
lcall
mov
and
outsl
das
clc
pushf
in
mov
xchg
jl
out
add
rorl
repz
leave
mov
or
pop
js
pop
lds
cmp
mov
out
cld
and
or
jo
mov
dec
mov
and
mov
adc
ror
mov
xchg
rcl
pushl
sub
or
sbb
dec
and
and
into
cltd
int3
mov
push
or
int3
jae
out
data16
xor
out
movsb
push
sub
xchg
enter
inc
enter
and
add
out
jo
mov
cmpsb
fyl2x
into
adc
mov
aas
xchg
mov
sbb
aad
sahf
mov
in
pop
call
push
cmp
lods
push
scas
mov
mov
pop
aad
jno
test
add
sbb
fiaddl
movsb
add
sbb
adc
test
stos
dec
jge
xchg
jno
jnp
imul
mov
jbe
lods
sub
repz
hlt
lods
jo
pop
jns
loopne
nop
in
inc
ljmp
push
mul
out
inc
jmp
cmpsl
lret
clc
cmpb
mov
jecxz
inc
out
xchg
dec
outsb
sarb
adc
adc
inc
lcall
movsb
addr16
push
ficoms
pop
sbb
cltd
xchg
dec
mov
adc
mov
push
mov
and
arpl
lret
out
lds
mov
add
sub
jno
inc
and
insl
dec
add
mov
call
sti
pop
and
int3
mull
jne
mov
push
arpl
repnz
aam
xchg
loopne
rorl
and
pop
mov
fdivrp
ficoml
sub
xor
push
jns
test
pop
mov
or
push
jg
notl
data16
hlt
in
mov
test
repz
sub
sbb
pop
ja
icebp
out
adcl
jl
add
and
lds
cltd
add
lods
mov
data16
push
cmp
pop
add
loop
push
push
sub
lock
andb
dec
lods
xchg
into
out
int3
test
arpl
mov
sbb
mov
ret
roll
les
jno
push
clc
shl
mov
mov
inc
in
aaa
and
and
or
shll
cmp
xlat
int
int3
out
rcrl
push
jbe
nop
and
mov
out
mov
dec
ret
sbb
mov
jmp
pop
subl
pop
or
sub
les
sbb
xor
adc
pushf
mov
aaa
lret
push
fsubrs
sarb
mov
pop
lret
jg
cmp
cli
lret
ss
scas
dec
test
pop
sti
add
mov
add
sti
enter
mov
repnz
mov
or
mov
test
test
jns
negb
cmp
jle
and
cltd
mov
test
push
popa
mov
jae
stos
pop
rclb
lret
out
fwait
adc
roll
add
shll
pop
sti
cmp
addr16
push
fldcw
ljmp
mov
adc
js
xor
mov
jae
jmp
fnstcw
out
mov
mov
ret
pop
andl
aaa
bound
mov
add
dec
cmp
popa
or
fimull
mov
and
mov
fiadds
insb
in
adc
mov
stos
cmp
popa
mov
push
adc
roll
or
xor
enter
pop
add
add
daa
push
xor
cmpsl
adc
cli
add
cmp
push
mov
in
fs
aas
cwtl
repnz
lret
xorl
sub
pushf
icebp
cmp
pop
sbb
aam
cmpsb
ret
mov
mov
repz
ret
fnstcw
push
ds
fisubrs
add
dec
mov
cmp
jno
xor
mov
test
dec
mov
sbb
lret
sbb
mov
pusha
ror
clc
daa
testb
fidivrs
dec
jp
or
mov
nop
rolb
cmp
pusha
andb
movl
inc
xchg
movsl
mov
push
aad
stos
stos
das
xor
adc
pop
jbe
xchg
mov
icebp
fdivr
jne
xchg
idivb
insl
jecxz
inc
cld
arpl
jmp
outsb
push
add
cmp
sbb
lods
popf
cmp
jmp
jge
inc
xor
inc
nop
mov
inc
movsb
pusha
das
pop
stos
mov
into
fs
xchg
pop
std
inc
push
in
adc
inc
popa
fstpl
nop
xchg
or
mov
inc
mov
imul
call
sub
outsb
lret
addl
insl
mov
lea
dec
dec
add
es
or
mov
push
fisttps
shr
lods
inc
cmp
imul
lods
jmp
in
outsl
pop
test
mov
cli
and
xor
inc
xchg
jecxz
fwait
arpl
dec
loopne
fdiv
jne
inc
cwtl
scas
xchg
add
or
xlat
mov
mov
cmp
inc
in
stos
xchg
jg
aas
out
pushf
push
lret
sbb
mov
mov
fisubl
mov
mov
imul
es
mov
jge
or
mov
imul
inc
pushf
shl
roll
mov
lods
jae
jo
mov
xor
test
mov
out
stc
lods
popf
jmp
cmc
pop
loope
push
xchg
push
loopne
and
sbb
jo
adc
sbbl
bound
or
jecxz
dec
mov
xor
fistpll
xorl
out
repz
rclb
fcoms
fcomip
and
int
mov
int
sub
insl
xchg
jns
mov
sbb
push
mov
cmp
push
js
push
fwait
imul
movsb
inc
ss
or
std
pop
iret
inc
rorb
call
mov
movsl
and
pop
stos
mov
cmpsb
test
inc
sub
mov
mov
std
push
add
jge
aas
xor
subl
imul
adc
mov
xor
pop
inc
ljmp
xchg
pop
aaa
insb
or
pop
and
pop
and
sahf
add
mov
inc
dec
std
sarl
mov
fsubl
dec
jge
shll
mov
lock
fisttpl
rol
mov
add
rolb
sti
mov
ja
and
cltd
xor
stos
jo
cmp
aas
xchg
or
or
adc
repz
aas
or
hlt
gs
call
lret
add
add
jmp
lds
xchg
rcrb
out
cmp
in
xchg
mov
in
mov
mov
ds
aas
shl
enter
stos
popf
cmp
adc
flds
jmp
mov
cs
inc
aad
adc
xor
repz
jmp
rcll
orb
data16
lcall
sarl
cmp
dec
sbb
pusha
sub
rcl
inc
dec
xor
adc
imul
adc
loope
adc
int3
cmp
push
into
pop
fbstp
stos
mov
int3
pop
mov
orl
add
jne
sbb
mov
mov
mov
cwtl
lahf
mov
loope,pt
add
hlt
out
int3
idivl
xchg
xchg
rorb
stc
xchg
jb
jo
popa
mov
mov
les
gs
jae
xor
xchg
sbb
mov
xlat
inc
loope
test
inc
mov
ja
jns
inc
sub
test
cmp
jnp
push
and
pop
shr
xor
sbb
push
hlt
pop
roll
mov
ja
test
outsb
fwait
outsb
gs
dec
fmulp
and
fistl
sbb
xlat
push
jecxz
fs
mov
aam
pop
fadd
stc
jns
xor
lcall
test
inc
and
or
aad
pushf
fnstenv
sub
inc
mov
sarl
mov
push
fs
mov
and
sbb
push
fisubrs
xchg
ss
mov
xchg
mov
rcll
cltd
jb
fistpll
fisttpl
mulb
adc
add
fcoml
lret
sbb
mov
xchg
inc
inc
fdivs
test
xchg
jbe
repnz
fistpll
sbb
nop
adc
lcall
out
std
cmp
mov
push
cmpsl
mov
sbb
loope
xchg
cli
shrb
mov
ds
in
xor
or
and
push
pushf
call
rol
mov
adc
fwait
popa
add
fwait
inc
pop
push
test
mov
or
fistps
mov
sti
mov
aaa
aam
rcr
xchg
cli
push
sarb
mov
dec
cli
out
ret
mov
out
std
int
aam
xchg
dec
repnz
pop
outsl
push
rorb
jp
mov
repnz
xchg
xor
faddl
and
divl
inc
jl
sub
in
test
ss
scas
fcomi
mov
pop
std
ret
inc
or
fisttpll
jge
lret
xchg
add
xchg
xchg
bound
mov
and
frstor
outsl
push
incl
sbb
pop
fsubr
adc
mov
jo
pop
sbb
push
imul
in
xchg
cmp
push
xor
fdivrl
pop
mov
jecxz
sbb
out
ljmp
lahf
adc
pop
or
add
mov
push
xchg
mov
push
inc
fcmovb
xchg
adc
fs
out
sub
scas
test
pop
imul
dec
adc
sub
adc
jo
lahf
pop
push
repz
add
daa
push
xchg
jp
and
stc
mov
fsubs
adc
mov
xor
sub
les
std
adc
xor
and
test
mov
pop
sub
mov
stc
data16
adc
sub
cmp
dec
push
mov
jg
mov
jne
sarl
push
pushf
push
sbb
cld
mov
outsb
test
push
stc
or
out
dec
cmp
dec
daa
stc
push
stos
enter
addr16
lret
jns
lret
cmp
inc
ret
mov
fisubrs
inc
jle
movsl
add
data16
add
out
sbb
fisubl
test
mov
insb
lods
sub
and
xor
cwtl
flds
push
mov
jle
dec
call
jo
jle
loopne
mov
xor
insl
lock
shlb
add
bound
adc
sti
inc
xchg
insb
fucom
xchg
ljmp
xor
or
cltd
les
ficomps
mov
jbe
xor
in
push
scas
sbbl
cmp
pop
pusha
inc
repnz
inc
movsb
stc
jno
enter
int3
rorb
rorb
xchg
xchg
mov
nop
imul
sti
pusha
push
outsb
loop
pop
into
sub
daa
inc
addr16
je
xor
out
out
mov
mov
mov
hlt
leave
nop
and
loop
ret
lods
adc
jo
mov
push
push
out
test
hlt
mov
mov
imulb
lea
nop
pop
int3
sbb
aad
icebp
nop
lods
jne
inc
insl
fisttps
push
stc
cmp
cmp
push
icebp
ficompl
std
push
jb
dec
dec
lock
fdivrs
insb
rcll
imul
sbb
loopne
sub
adc
pop
add
daa
sahf
jg
scas
in
enter
enter
or
adcl
mov
aas
in
jmp
dec
jnp
jecxz
or
dec
add
popw
cld
push
or
std
mov
lret
test
adc
int3
mov
or
sbb
shlb
aas
pop
test
jmp
jns
mov
loope
mov
xorl
ret
lods
mov
mov
in
xor
jbe
ficomps
popa
out
add
and
sbbb
sub
dec
inc
cmp
jne
fucomip
adc
pop
push
pop
dec
sti
dec
dec
cmpsl
orl
xor
aas
xor
into
push
adc
dec
mov
lods
mov
add
and
movsb
adc
push
add
mov
or
fs
xchg
in
ret
repnz
xchg
rcrb
idivb
pop
pop
mov
enter
pop
add
xor
movsb
xchg
into
punpckhbw
je
pop
push
add
outsl
out
subb
divl
dec
cld
adc
andb
mov
sub
inc
jl
xchg
jg
lods
lcall
cwtl
jb
and
push
aaa
jae
pop
adc
sbb
stos
cmp
cmpsl
jp
adc
jb
divl
fisubs
jnp
xchg
shll
popa
aam
mov
or
pushf
lea
dec
adc
and
cmc
adc
cmpsl
subb
jo
fidivs
sub
movl
das
popf
inc
cwtl
push
or
movsl
pop
add
cmp
ret
mov
jae
push
xorl
jnp
aas
jbe
pop
xor
insb
adc
roll
into
test
test
movsl
mov
sahf
nop
in
aas
lcall
fistpll
into
stc
mov
lret
lahf
inc
xchg
test
push
loope
dec
sub
inc
outsb
add
cmc
out
adc
repnz
and
stos
filds
cmp
dec
fnsave
mov
lahf
jp
dec
out
dec
jb
call
inc
pop
xor
stc
jns
adc
in
scas
sbb
call
int3
jns
aas
inc
or
negl
jne
inc
and
fs
mov
dec
xorl
mov
lret
cmc
or
cmp
aas
fildl
fidivrl
adc
mov
push
push
mov
jg
jns
pop
mov
xor
cmp
xchg
adc
sbb
int3
add
dec
jnp
jge
xor
sub
jbe
sub
lcall
aaa
push
cmp
rcll
js
sub
push
lret
fistpl
add
iret
push
mov
and
addr16
cs
into
sbbb
and
adcl
arpl
inc
mov
dec
enter
push
shll
mov
mov
jge
pushf
das
cmp
aad
jo
fildll
into
mov
mov
rorb
repnz
lds
inc
orb
xor
lret
test
cmp
je
shrl
dec
pop
outsb
fdivrl
dec
hlt
into
out
jl
mov
mov
jg
or
inc
fistpll
inc
psrlq
out
cmpsl
lods
das
cld
mov
push
inc
xchg
push
out
sub
jecxz
pmuludq
jns
cmc
jl
in
mov
and
dec
fidivrl
roll
pusha
into
adc
fucom
pop
fs
jp
mov
or
xchg
lcall
testb
add
lock
arpl
loope
out
inc
xchg
cltd
loopne
adc
add
mov
or
clc
mov
or
pop
mov
mov
in
fidivrs
cld
add
lret
add
insl
movsb
loop
lret
adc
inc
das
cli
lock
lds
ret
ffree
sbb
adc
push
insl
cltd
dec
fadd
jne
fidivl
scas
mov
cmp
bnd
cmp
and
std
jg
cmovge
ret
cmc
jmp
pop
mov
xchg
inc
push
inc
cmp
adc
push
test
in
call
pop
cmpsb
sub
pop
cmc
or
push
loop
jle
xor
xchg
xor
cmpl
stc
pop
xchg
push
repnz
enter
or
cmc
daa
inc
xchg
pop
addr16
push
incl
xor
repz
test
xor
test
popf
and
add
cmp
add
inc
add
daa
sbb
fistps
aaa
pop
jno
inc
pop
cmp
push
lock
les
xchg
jge
fdiv
sbb
pop
stc
aaa
mov
add
mov
sbb
add
cmpsb
daa
pop
pop
sub
mov
or
adcl
cmp
mov
push
int
pop
cs
loopne
cmpsb
lea
mov
pop
es
icebp
mov
add
gs
lds
arpl
hlt
dec
test
xchg
adc
inc
add
xlat
dec
insb
fbstp
adc
xorl
pop
push
xchg
mov
gs
add
jge
push
fcomp
or
outsb
mov
xorl
lods
icebp
sbb
ror
leave
ss
xchg
std
scas
movsl
rcl
or
push
arpl
negl
pop
push
mov
mov
cmp
stos
xchg
ljmp
cld
les
mov
pop
jmp
je
mov
test
sub
xchg
outsl
pop
dec
sub
adc
jge
movsb
adc
jbe
xchg
dec
aad
dec
out
mull
cmpsl
jne
jge
decl
sbb
mov
cmp
mov
mov
mov
lcall
mov
inc
out
or
add
jbe
inc
les
xchg
jmp
test
mov
pop
cld
sti
out
sarb
mov
test
out
inc
xchg
xor
xchg
pop
and
inc
stos
shlb
xchg
fdivs
mov
daa
lahf
sub
xchg
add
mov
xor
aad
xchg
push
cwtl
dec
enter
out
dec
rcr
or
ja
pop
jmp
pop
xor
std
test
sti
push
aam
dec
inc
add
enter
je
mov
ret
ja
icebp
jne
out
mov
scas
scas
in
test
adc
sbb
mov
mov
ljmp
cmp
push
xor
or
sti
orb
adc
jno
cmp
out
jle
mov
or
inc
int3
ss
push
dec
add
mov
test
push
je
iret
popa
inc
push
mov
sbb
xlat
ja
fstl
repz
loopne
cmp
std
imul
into
pop
pop
aad
adc
sbb
fs
mov
inc
aam
mov
xchg
icebp
jmp
push
stos
jo
and
fisttpll
out
and
inc
ret
push
popf
adc
mov
sbb
decl
jne
mov
mov
insb
pop
cli
add
inc
arpl
mov
adc
pop
enter
lods
xchg
jge
test
pusha
or
pushf
push
inc
int
inc
mov
in
jae
rorb
or
and
mov
lret
or
enter
rolb
xchg
pushf
mov
jne
sbb
js
inc
sbb
stc
push
dec
mov
hlt
inc
push
inc
lahf
mov
sbb
add
pop
jge
jle
mov
in
pop
dec
or
xor
popa
jae
mov
xchg
in
and
mov
sub
xchg
adc
movsb
hlt
lcall
call
icebp
out
cli
outsb
cmp
out
enter
and
xchg
push
jmp
xor
nop
fsts
nop
lods
jp
rorl
adc
in
dec
push
mov
std
in
or
adc
jb
into
mov
fwait
daa
xor
jae
rcrl
dec
repz
pop
pop
fsubl
pop
in
notl
push
lret
add
loop
xlat
mov
lret
pop
mov
pop
jl
mov
jmpw
lods
cmp
ret
xor
test
aaa
adc
cmp
loope
jbe
cli
testl
xchg
mov
mov
mov
push
std
mov
mov
imul
push
shrb
int3
push
clc
lock
sbb
mov
mov
mov
repnz
pop
aaa
inc
pop
imul
dec
sbb
xor
mov
pop
pop
lret
incl
mov
jne
push
xor
scas
cwtl
jne
int3
xlat
repnz
sbb
inc
repz
stos
cltd
scas
sub
cwtl
pusha
mov
dec
rcll
jge
adc
mov
and
fnstenv
pushf
push
xchg
movsl
fiaddl
out
iret
daa
jl
incl
les
cmp
adc
pop
and
sub
mov
mov
adc
out
pop
ror
pushf
mov
and
push
cmc
sti
xchg
mov
divl
jle
rolb
out
or
stos
lret
mov
fistpll
arpl
jmp
jnp
xor
flds
push
lret
push
test
jl
dec
xchg
mov
in
xchg
js
cmp
fimuls
and
cmc
pushf
mov
sub
push
dec
add
pop
or
or
jge
mov
pop
add
jp
push
xchg
clc
les
fs
iret
inc
push
inc
dec
adc
or
mov
pop
pop
push
bound
inc
shll
sbb
pop
rcll
sub
bound
pusha
je
leave
sub
inc
push
dec
sub
out
sub
dec
adc
fistpl
and
vmovddup
in
and
add
jns
sbb
arpl
xacquire
and
and
fisubrl
rorb
sbb
mov
inc
mov
add
and
mov
jp
call
pop
stc
adc
lcall
stc
leave
pop
sahf
sahf
sub
inc
pop
andl
in
les
insl
jp
add
xchg
scas
pop
push
out
rcrb
fistl
pop
mov
sbb
imul
clc
addr16
arpl
or
mov
arpl
add
dec
sub
xchg
outsb
jne
loopne
scas
shlb
popa
push
sti
clc
inc
inc
xor
mov
xor
adc
mov
dec
pop
pop
out
cld
inc
push
sbb
xlat
sbb
push
dec
push
pop
inc
adc
mov
stos
pop
sub
addr16
popf
or
mov
test
lock
jg
xor
ds
cmp
out
test
add
cmp
inc
cld
xchg
xchg
jne
cld
push
movsl
cmp
sub
cltd
dec
data16
imul
rcll
jge
adc
inc
scas
or
jae
rorb
mov
popa
enter
xchg
add
ja
cmpsb
dec
inc
repz
mov
scas
xchg
stos
cmpsb
loope
das
les
nop
and
sbb
fmuls
out
xchg
pop
js
ljmp
ljmp
mov
out
aam
xlat
push
jge
xor
jge
mov
in
mov
fdivl
xchg
inc
inc
adc
sbb
cmp
sub
jp
clc
xor
mov
add
lds
test
iret
aad
es
aad
mov
cmp
xor
sub
aam
xor
jo
jns
cltd
frstor
outsl
pop
mov
push
int3
add
xor
movsl
cmp
jns
cmp
sti
je
icebp
sub
sub
stos
cmp
scas
xchg
push
jne
setp
adc
add
popf
cmp
divb
ja
in
cmpsb
scas
int3
fs
psubusb
int3
std
sub
in
iret
jo
lods
sub
dec
aas
ljmp
push
mov
cli
xchg
int
dec
clc
sbb
dec
icebp
dec
insb
add
aaa
in
push
andb
xorb
lea
nop
sub
jno
in
stos
xor
mov
push
js
dec
addr16
ret
add
xor
dec
xchg
test
dec
pop
stos
jmp
in
push
inc
fidivrl
sbb
xor
adc
xchg
push
addr16
mov
enter
push
xchg
loop
movsl
shl
setns
pop
cmp
outsl
insl
mov
aas
stc
ss
pop
lods
dec
lret
mov
mov
add
and
data16
aad
mov
imul
enter
pop
rcr
pushf
mov
pusha
mov
dec
shll
jle
xor
in
loop
pop
adc
cmp
ret
adc
sbb
push
mov
push
stos
out
dec
test
cwtl
or
cmp
mov
push
dec
push
xchg
lcall
icebp
lods
fsubl
leave
xor
push
push
test
mov
inc
sbb
inc
bound
adc
mov
inc
sub
mov
push
push
xor
sbb
in
xor
dec
xor
adcb
imul
nop
push
sub
inc
lcall
jne
jbe
cwtl
mov
in
xor
pushf
xchg
imul
out
iret
mov
leave
dec
out
shll
pop
test
xchg
add
jb
das
call
jns
pop
dec
dec
mov
das
adc
sbb
ljmp
lcall
add
cmp
mov
adc
cmp
lods
lea
adc
repnz
mov
sub
dec
jbe
lret
push
dec
js
jle
andl
pop
out
lcall
lret
mov
andnps
pushf
psubq
adc
outsl
fimuls
pop
pop
jge
je
add
lods
ret
movsl
adc
lret
pop
inc
inc
lea
mov
push
inc
sub
pop
mov
sub
or
gs
repnz
jne
and
or
push
xchg
jl
xor
add
movb
stos
outsl
scas
or
js
lock
int
imul
inc
scas
cli
cmp
adc
xchg
imul
sti
and
cmc
mov
inc
call
dec
pop
out
rorl
mov
add
scas
add
inc
pop
push
pop
popf
xor
dec
incl
hlt
sti
mov
pop
adc
jne
pop
popa
scas
std
test
daa
push
push
popa
mov
cwtl
mov
cmpl
fdivl
lcall
loope,pn
es
push
sbb
xchg
imul
pop
imulb
add
bound
mov
xor
add
adc
lcall
mov
movl
sahf
xor
stos
cmp
pop
pop
popa
out
cmc
loope
inc
cmp
lret
cmp
adc
add
leave
cmpsl
insl
sbbb
idivb
test
jb
jns
xchg
mov
xchg
test
outsl
jle
xchg
push
xor
movsl
and
sub
scas
and
scas
xchg
mov
pop
movsl
mov
daa
inc
sbb
inc
xchg
in
hlt
loopne
inc
je
inc
call
mov
xchg
add
test
sub
inc
shll
in
daa
pop
cli
xchg
cmp
add
pop
push
shl
mov
sub
pop
push
add
ror
push
pop
pushf
cmp
iret
ficompl
clc
lahf
dec
idivl
mov
cmp
push
or
mov
and
pop
pop
fnstenv
push
idivb
loop
rcll
mov
loop
mov
fldl
je
es
jbe
or
movsb
sub
dec
ljmp
sbb
aad
scas
or
sub
jp
mov
loop
imul
inc
andl
repz
out
lcall
iret
dec
sbb
or
mov
cmp
and
sub
mov
in
dec
movsb
leave
stos
lret
cltd
cmp
loopne
mov
les
je
and
test
mov
dec
xchg
or
test
negl
ret
testl
cld
adc
rep
mov
inc
push
xchg
mov
mov
movsl
pop
rep
loop
xchg
xor
insb
pop
stos
imul
xchg
push
sub
sbb
sub
add
gs
sbb
pop
mov
xchg
jnp
add
mov
adc
cmc
adc
sub
pop
cltd
and
jp
sub
pop
cld
dec
cmpsl
cmpsb
mov
add
lret
sahf
add
movsb
or
fldcw
fsubr
xor
sarl
sbb
popf
arpl
jmp
push
pop
stc
out
sub
sub
mov
push
cmp
jl
mov
imul
clc
enter
mov
mov
mov
adc
neg
sub
rcrb
clc
outsl
out
cltd
sub
sub
mov
mov
out
add
out
movsb
gs
jns
test
sahf
lret
push
out
rolb
js
cmc
lret
int3
dec
jecxz
ljmp
mov
or
xchg
mov
insb
mov
xchg
push
jae
pop
shll
ss
xor
fimull
in
imulb
mov
sbb
ja
popf
imul
push
add
movsl
adc
nop
pop
lea
jg
cli
push
mov
mov
movsb
dec
push
lret
mov
mov
ja
ljmp
inc
inc
xor
sbb
sbb
movsl
and
in
outsb
jae
sbb
popf
and
or
cmp
test
fstpl
xchg
push
cmp
adc
das
sti
dec
in
inc
fisttps
in
out
in
cmp
ljmp
jl
sarl
sbb
sub
pop
push
loope
sbb
out
leave
fwait
shll
inc
in
js
sub
jbe
or
lods
rol
cmp
jbe
mov
test
jns
dec
ja
test
aas
scas
scas
pop
jge
pusha
sub
and
ret
push
sbb
jg
call
std
lods
fdivl
mov
test
mulb
pop
adc
mov
daa
mov
push
jns
shll
pop
adc
pop
sub
scas
bound
xlat
into
push
outsb
aaa
jb
mov
cld
test
leavew
out
jp
mov
xorb
fistpl
xor
clc
or
sbb
push
test
data16
clc
push
loop
xor
pop
xchg
pop
mov
insb
mov
mov
ss
enter
aad
out
fbstp
xchg
xlat
add
sbb
popf
ja
sub
xorl
pop
push
js
test
xchg
jae
pusha
stos
fs
dec
cmp
bound
enter
cmc
popf
mov
xchg
mov
jno
stos
clc
xchg
pop
jp
xor
cmp
cmpsl
cmp
and
aam
out
shrb
adc
in
cmp
xchg
scas
mov
mov
cmp
imul
mov
jle
js
lahf
ss
jle
dec
mov
push
lcall
add
adc
push
dec
or
in
movsl
xchg
or
xchg
push
stos
or
sub
jmp
sarb
insl
out
mov
push
inc
or
shl
das
pusha
sub
or
and
dec
aam
push
and
sar
mov
cwtl
lret
lcall
mov
lock
sub
mov
jns
adc
xor
sbb
in
sbb
adc
icebp
fnstcw
lods
int3
aam
imul
xor
lock
call
rorb
scas
lea
add
in
cltd
sbb
ret
cmpsl
xorl
cld
outsl
cmpsb
das
sbb
mov
mov
adc
out
cwtl
daa
jge
cli
adc
dec
mov
or
loopne
mov
cld
fidivrl
lods
movsb
addr16
add
xchg
hlt
int
ret
mov
mov
out
in
out
mov
dec
mov
xchg
push
cmp
out
aas
sti
ja
mov
stos
push
insl
imull
rcrl
lods
mov
int
insb
not
outsb
sbb
dec
lock
jno
adc
xlat
cmpsl
lds
mov
outsl
or
sahf
dec
mov
loope
stc
or
icebp
mov
imul
pop
leave
push
cmp
lds
fsubs
loope
pop
aad
mov
enter
fiadds
sbb
mov
into
das
imul
es
js
mov
andl
psubusb
sti
lahf
xchg
sbb
fcomps
aaa
std
test
or
jo
leave
js
inc
jno
sbb
push
out
dec
mov
scas
sub
les
sub
sbbl
or
dec
repz
pop
inc
jb
outsb
pop
inc
dec
push
rcll
cmp
push
fidivrl
lea
mov
adc
jae
adc
pop
jecxz
and
inc
adc
jl
pop
mov
fcoml
xor
inc
sahf
dec
jmp
inc
int
arpl
lock
movsl
cmpsl
mov
test
xchg
jnp
popf
lods
sbb
jbe
testl
jb
lds
push
jle
mov
push
fisttpl
shlb
sub
aam
lods
cld
sti
stos
cmp
cmpb
sub
movsb
dec
jnp
mov
leave
xchg
mov
xchg
and
pop
pop
sub
enter
mov
inc
int3
je
inc
shl
mov
movsb
fsub
adc
bound
int
leave
xlat
jb
mov
sub
daa
pop
mov
das
es
mov
pop
aaa
mov
mov
or
ja
xor
push
inc
or
mov
or
pop
add
cs
das
xchg
pop
dec
mov
pusha
loopne
lock
xchg
pop
add
xchg
mov
sarb
in
inc
out
adc
mov
pop
pop
test
inc
cmp
sbb
pop
or
dec
cmp
lock
popf
cltd
and
lahf
mov
sub
jb
lock
mov
cmp
dec
sbb
cmp
cwtl
dec
push
hlt
shll
pop
mov
sub
pop
mov
pop
es
push
adc
popf
mov
or
and
rcrl
loop
int
mov
jo
fists
add
push
popl
adc
or
mov
mov
mov
mov
adc
push
fdivrs
and
or
lock
jae
adc
rcl
pusha
rolb
lock
pusha
insl
inc
or
movsb
add
push
adc
jo
dec
fsubr
mov
dec
pusha
mov
loope
mov
xchg
pushf
and
fstps
stos
mov
cmp
mov
inc
mov
mov
iret
xchg
pop
mov
pop
mov
dec
add
mov
lahf
jmp
mov
jecxz
idivl
clc
sub
lret
imull
mov
jne
mov
dec
popa
std
add
inc
popa
xor
in
mov
xchg
call
int
movsb
jmp
sub
pop
rcrb
jge
mov
add
xor
xor
repnz
popa
push
dec
rcrl
stc
rorl
mov
lock
data16
jae
in
insb
call
pop
hlt
push
cmp
testb
pop
cmp
repnz
mov
adc
jne
fnstsw
or
test
inc
lock
push
inc
das
cmpsb
or
add
lds
flds
push
mov
in
sub
mov
mov
lcall
pop
insl
mov
xchg
in
mov
adc
xchg
gs
add
fwait
jl
push
cli
xchg
jns
mov
out
outsl
add
orb
sbb
jno
mov
js
mov
imul
cmpsl
push
into
out
jle
stc
test
cmp
cld
add
leave
pop
pushf
cmp
push
lea
icebp
adc
ret
aaa
mov
ss
mov
fdiv
mov
paddusb
lea
sbb
add
mov
sub
test
std
mov
cltd
out
pop
and
xor
ss
das
xlat
shrl
add
mov
mov
gs
mov
aas
cmc
push
iret
fidivl
lcall
push
xchg
sbbl
or
cmp
add
add
js
aad
adc
cwtl
jno
cmp
xor
push
mov
or
test
sbb
aam
and
out
or
dec
loope
mov
btc
imul
sub
clc
addr16
aad
cmc
xor
pop
lret
xchg
fdivr
or
mov
and
push
jp
out
cmc
sub
push
sbb
add
or
mov
mov
movsb
mov
push
pop
inc
inc
mov
aad
dec
pop
mov
fimuls
test
js
or
and
jle
lahf
nop
mov
insl
and
sub
addr16
push
mov
loopne
and
jae
es
xchg
and
cmpsl
xchg
sub
cmpb
fs
cmp
inc
lds
cmp
xchg
lds
loop
add
xor
cmp
incb
ffreep
xchg
inc
push
push
in
inc
and
rolb
fiadds
sub
js,pt
cmpsl
mov
sub
push
ljmp
out
lea
jecxz
rcrb
cmp
cld
mov
or
fs
mov
or
sub
fwait
inc
cmp
and
mov
push
lods
mov
ss
scas
sub
ret
mov
jno
fistpll
lret
xchg
xchg
jle
cmpsl
cs
push
and
pop
ss
iret
sub
repnz
pop
mov
into
xchg
inc
iret
xlat
mov
xor
cmpsb
btrl
and
movsb
leave
and
lea
sbb
js,pn
aas
adc
lock
or
leave
mull
or
add
sbb
lret
adc
pop
add
push
or
nop
insb
pop
in
orl
sbb
add
and
jle
adc
gs
int
cmp
imul
imul
jno
scas
cmpsl
nop
lahf
ja
imul
jno
sbb
ret
hlt
out
push
xor
push
inc
pop
inc
sub
orl
xor
cli
lock
jge
jo
inc
dec
shrl
pop
hlt
cld
cmp
mov
or
fs
clc
testb
lds
push
adc
cmc
scas
jmp
xor
dec
xor
mov
loope
int
xchg
cmp
add
inc
mov
and
push
std
sub
call
mov
fcmovne
mov
int
sbbb
in
push
jmp
sub
xor
adcl
mov
push
cmc
lods
sbbl
jb
mull
movsl
andl
mov
in
jecxz
mov
cmpsb
and
add
inc
in
or
ds
inc
call
dec
mov
cmp
fdivrl
out
add
bound
mov
pop
icebp
data16
add
fisubl
pop
and
inc
je
and
jbe
inc
shrl
rolb
adc
fldt
add
out
pop
xor
adc
aam
pop
rolb
adc
sahf
pop
jle
dec
jb
inc
mov
mov
xchg
orl
inc
addr16
iret
jne
ljmp
mov
mov
mov
je
push
push
into
out
xor
pop
dec
and
mov
mov
xchg
inc
pop
xor
mov
shll
sar
mov
iret
ret
cmp
imul
int
push
dec
push
dec
push
sbb
lcall
movsl
or
and
cli
js
fstpl
mov
leave
cmpsb
loop
lock
add
add
lcall
dec
pop
inc
mov
mov
in
aam
fcomi
lock
call
in
mov
xor
and
inc
repnz
mov
aam
test
incl
push
mov
adc
push
add
jmp
xor
push
das
push
out
hlt
inc
push
sub
mov
sbb
loopne
repz
in
push
pop
add
push
outsb
xor
mov
cmp
testb
pop
push
testb
jecxz
das
cmp
jb
dec
or
xor
pop
stos
pop
hlt
nop
orb
rcl
bound
xchg
enter
xchg
jae
xor
mov
pop
push
xor
jge
addb
out
orl
orl
xor
sub
push
cs
mov
mov
xchg
nop
imul
adc
psrlw
pop
hlt
cmp
jmp
push
insb
imul
popf
cmc
add
xor
aaa
jl
lcall
cmpl
or
nopl
sbb
sbb
jbe
cmc
push
js
jmp
add
add
jns
ljmp
dec
adc
mov
mov
jmp
int
and
test
nop
test
push
dec
xchg
jge
call
jecxz
jb
xchg
mov
fs
mov
cli
pop
or
inc
outsl
pop
push
and
cmc
xchg
lea
sub
push
cs
imul
cmc
es
push
imul
or
inc
dec
cmp
sarl
in
dec
dec
repz
ret
data16
xchg
lods
aad
xor
mov
add
xor
xchg
cmpb
outsb
jbe
xchg
jne
push
xor
sbb
cmp
jmp
or
sub
sub
xor
adcb
rol
fistps
hlt
push
mov
xchg
cmpl
je
mov
insb
mov
pop
loope
add
jmp
idivl
leave
cmp
movsb
jne
mov
hlt
mov
cmc
and
jg
lret
push
push
mov
jp
lcall
sahf
push
or
stos
jb
add
sub
rclb
stc
mov
jp
cwtl
js
inc
ror
xchg
shll
push
ljmp
out
aad
movsb
dec
lods
adc
test
xor
add
je
xor
fstps
sub
xor
xor
sbb
int3
fisttpl
jg
mov
xor
inc
dec
enter
inc
push
add
push
mov
test
and
sub
gs
mov
push
cmc
xchg
stc
mov
push
push
cmp
gs
js
mov
xchg
adc
bound
fcmovnu
ja
push
out
gs
jecxz
ret
pushf
sub
sbb
pop
movl
jle
mov
fisttpll
mov
push
xchg
out
mov
pop
xchg
adc
sbb
sti
xlat
and
rep
sbb
cmp
jne
or
add
fisubrl
fisubs
incb
out
cmp
cmpsb
mov
inc
add
jl
add
sahf
sbb
rcrl
jno
test
inc
push
ljmp
adc
rol
subb
add
bound
or
mov
xchg
arpl
jnp
cmp
popa
cmp
mov
push
adc
adcb
pop
push
pop
mov
roll
aam
les
push
inc
fsubrp
scas
aad
out
xchg
pop
jl
sbb
js
dec
jg
jae,pn
jp
rcl
add
inc
mov
gs
in
pop
dec
call
sbb
lea
and
fwait
sbb
aam
int
adc
xchg
push
iret
lock
fs
insb
iret
cmp
and
cltd
sbbl
sub
xchg
xorb
int
cmp
out
pusha
incl
add
test
add
or
push
mov
mov
mov
add
scas
cwtl
sbb
hlt
aas
dec
pop
cmp
lea
fucomi
and
push
or
es
and
imul
or
repz
sbb
jmp
aad
in
mov
push
addb
mov
adc
push
or
lods
mov
mov
jg
jno
or
das
outsb
out
movsl
pop
or
adc
shl
enter
outsl
mov
aas
jecxz
enter
in
sbb
shll
xchg
sub
mov
out
es
sub
adcl
es
fsubs
mov
pushf
cmp
daa
out
shll
lods
jge
sub
ljmp
shrl
mov
jae
add
inc
scas
cmp
sbb
ret
dec
or
sub
or
sbb
cltd
push
adc
call
push
shlb
xchg
dec
sbbl
sbb
mov
popf
std
push
mov
cmpsb
je
lcall
or
mov
xchg
sahf
sbb
adc
subb
mov
or
jp
inc
and
ljmpw
cmc
sub
mov
or
jb
xchg
push
test
fnstenv
push
xchg
ja
add
xchg
rolb
int3
inc
imul
insl
adc
test
outsb
push
pop
outsl
popf
sub
pcmpgtb
inc
cmpsl
je
pop
pop
fsubr
popf
pop
in
pop
pop
mov
xchg
dec
pop
shrl
sti
lcall
iret
jle
ret
div
and
and
inc
movsb
pushl
cmpsl
or
gs
outsl
bound
loope
lahf
push
xchg
fs
aad
sbb
add
xchg
lods
jl
adc
sbb
push
and
push
in
cmp
lock
fmull
sbb
sti
dec
test
data16
cmc
xor
das
lods
pop
lods
or
sbb
rcl
and
sub
flds
adc
sub
shll
rep
inc
jecxz
outsb
xchg
lods
popa
adc
lea
push
adc
add
inc
incb
orb
adc
or
mov
cltd
in
add
lock
sbb
pop
xor
mov
pop
es
std
ljmp
fcmovb
lahf
mov
fstpt
nop
sub
xor
or
mov
insb
inc
orb
jg
and
xchg
push
add
sarb
xchg
mov
shl
mov
lock
lahf
mov
push
xchg
pop
jge
inc
fcomip
mov
mov
push
push
loope,pn
mov
out
xor
mov
cmp
psrlq
dec
dec
jno
insb
pop
ja
or
mov
dec
dec
rcl
bound
mov
clc
sahf
popl
testl
mov
loopne
pop
push
insl
jmp
movsb
or
call
and
jne
sub
cli
add
je
jmp
mov
sbb
or
and
jbe
data16
incb
xor
cmp
cmp
adc
lret
mov
sub
out
jp
push
shll
ficoml
jg
and
adc
and
and
dec
push
lods
aad
mov
test
adc
repz
xchg
shll
push
push
addr16
sti
or
cmp
push
mov
push
aam
pop
in
ja
pop
test
movsl
hlt
push
sahf
pop
xor
jl
int3
mov
mov
ret
int3
hlt
ret
pop
fcmovu
hlt
push
fsubl
lret
sub
fnstcw
mov
xchg
icebp
adc
push
fwait
add
or
shll
rcrl
loop
jno
push
cli
ss
or
and
sub
adc
in
lret
push
lret
mov
jmp
jb
sub
fidivs
and
mov
dec
xchg
mov
push
xor
shll
mov
adc
mov
std
fdivrs
push
pop
xchg
cmpl
stos
fimull
cwtl
jbe
cmpsl
hlt
mov
pushf
int3
mov
jne
iret
adc
xchg
pop
cltd
or
xchg
sahf
xor
aas
mov
es
fsts
cmp
daa
mov
pop
fdivrl
dec
add
dec
enter
xor
test
aas
addr16
shll
cmpl
and
jecxz
js
cmp
repnz
sti
jbe
or
mov
cli
dec
add
xor
xchg
test
add
insl
shrb
dec
call
or
xchg
mov
insl
lea
xchg
sbb
neg
iret
test
ret
sbb
jl
xor
lods
pop
addr16
fstpt
lret
sbb
test
inc
mov
push
dec
pop
adc
push
dec
rcrl
push
mov
or
push
xchg
pop
mov
out
pop
cmc
jmp
cmpsb
mov
movsb
int3
cmp
inc
pusha
xor
pop
rolb
ds
add
adc
inc
xor
xor
jecxz
and
frstor
fnsave
cmc
jnp
fsts
stos
ja
and
test
pusha
sbb
inc
fidivrs
sub
repz
fstl
mov
cmp
ljmp
movsl
imul
dec
sub
stos
bound
cmc
jbe
jmp
sbb
add
cmpsb
vpsrld
adc
and
push
hlt
rcrb
and
push
sahf
fst
mov
mov
sbb
mov
and
mov
mov
mov
movsl
dec
or
adc
jle
jg
mov
cmp
popa
ds
jle
cwtl
jae
add
test
dec
inc
mov
jb
or
or
mov
pop
mov
cmp
xlat
std
es
jle
lods
inc
xchg
mov
insl
pop
push
sub
sbb
sub
sti
test
imull
sub
jno
and
cmc
call
test
pop
seta
movsb
mov
mov
fwait
mov
xchg
mov
iret
arpl
xchg
jae
pop
daa
pop
ja
xlat
aam
repnz
js
cmpsb
lret
jo
repz
jge
fildll
jmp
fimuls
lea
in
in
mov
shrb
aam
sub
xchg
sub
aas
adc
aas
add
sub
cs
mov
add
inc
mov
inc
lcall
fcoml
xorl
xor
and
or
fistl
leave
popf
outsl
negl
ds
mov
mov
push
nop
jmp
pop
je
in
pop
add
sub
or
dec
icebp
add
cltd
xchg
mov
xor
mov
lret
sarb
jnp
push
outsb
jne
cltd
andl
daa
xchg
in
sub
xlat
or
or
dec
and
jbe
adc
xchg
lock
jmp
sub
xor
adc
push
loope
cmpl
lds
cmpsb
movsl
jle
lea
into
pop
in
cmpb
sbb
xor
adc
add
mov
jo
or
arpl
inc
dec
push
fidivl
pop
insl
dec
nop
fisubs
mov
xor
lods
aam
mov
dec
dec
or
xor
cmp
lahf
hlt
loop
es
dec
popf
fldt
mov
gs
call
or
jns
rorl
ja
in
mov
lret
mov
insl
pop
enter
iret
mov
fisttpl
insl
das
push
push
add
add
sbb
cli
out
or
xchg
or
gs
fcomps
daa
xchg
sbb
mul
pop
jmp
jmp
or
enter
jb
mov
push
decl
cld
push
pop
mov
test
das
jmp
adc
bound
xchg
stos
fs
lock
push
in
push
jl
or
or
ret
cmp
mov
push
jno
and
cmp
xchg
bound
addr16
or
stos
push
mov
shlb
xchg
subl
inc
cmp
rcrl
test
rcrb
insl
dec
mov
repnz
inc
mov
or
xor
cmpsb
pop
fimuls
adc
mov
sbbb
insl
fsub
mov
xorl
and
xor
sbb
jl
andw
cltd
sub
pcmpeqd
lret
add
sbb
cli
xor
adc
mov
fucomip
pop
outsl
xchg
xchg
jns
sub
or
jnp
fistl
orb
in
pop
fisubrs
xor
aam
push
pop
repnz
mov
and
stc
ret
repz
dec
or
mov
in
ret
stos
dec
push
cmp
pushf
jp
enter
jle
ds
negb
das
shlb
cmp
sbb
jo
pop
lods
dec
mov
xor
jno
aad
add
and
subb
pushf
and
test
mov
aas
call
mov
fwait
cmp
in
jecxz
faddp
pushf
lahf
push
std
mov
decb
jns
xchg
adcb
xchg
mov
test
jbe
ja
outsb
sub
cli
fisubrs
mov
test
add
mov
pop
lcall
jge
inc
jmp
pop
or
inc
adc
movsb
pop
test
cmp
and
data16
add
aaa
and
test
xchg
cmpb
and
xchg
mov
mov
paddusb
push
mov
dec
fwait
lret
adc
jge
and
aas
shll
mov
add
fbld
mov
inc
adc
lods
sbb
js
dec
adc
and
dec
mov
movsl
in
scas
mov
dec
push
xchg
push
int3
xchg
scas
or
jne
push
rcrb
mov
nop
ret
add
out
fistps
in
or
cmpsb
test
push
fwait
cmc
stc
add
push
mov
push
xchg
jns
lcall
xchg
push
or
pop
in
fiadds
jb
add
cmp
js
inc
mov
filds
and
mov
mov
sahf
imul
stos
sbb
and
clc
in
lahf
xchg
ljmp
aaa
mov
lcall
or
push
xor
insb
lods
or
and
inc
insb
popf
adcb
enter
pop
dec
xchg
jo
xor
inc
imul
addr16
inc
dec
adc
es
mov
mov
sbb
jl
mov
inc
clc
xor
inc
sbbb
xlat
mov
cwtl
lret
sub
push
fsubrl
sub
push
mov
fst
xchg
jmp
xor
fstpl
or
jne
shrb
loop
jo
pop
xchg
hlt
jne
and
repnz
or
push
jo
les
fwait
lret
test
sbb
test
dec
pop
dec
xor
mov
rol
add
aas
ret
pop
push
sti
in
xchg
aad
mov
add
xorb
cmpsb
cs
mov
xchg
mov
nop
fidivrl
and
jno,pt
fiaddl
popa
xchg
jb
sahf
add
jno
xchg
aaa
xor
addr16
xor
mov
add
enter
loopne
aad
ret
jno
inc
push
xchg
jns
add
adcb
or
rep
cmpsl
imul
mov
mov
sbb
mov
xchg
inc
ret
inc
mov
ret
add
xor
cmp
imul
inc
mov
mov
inc
mov
jne
cwtl
cltd
adc
dec
cltd
xlat
ret
lea
mov
ja
out
fistpll
outsb
inc
test
add
dec
dec
fs
xchg
xchg
and
jg
addr16
dec
cmp
dec
adc
inc
outsb
insb
push
inc
test
push
fadds
pusha
cmp
in
cltd
mov
mov
ss
dec
cmp
cld
jb
movsb
lock
nop
cmp
mov
pop
jns
mov
jp
andl
mov
dec
xor
outsb
inc
aam
ss
pusha
andl
in
jns
les
push
dec
xor
fidivl
je
adc
cmpsb
inc
cmp
pop
xlat
lods
mov
dec
adc
pop
mov
adc
sub
je
cs
leave
mov
test
push
adc
iret
lods
iret
and
sbb
stc
xchg
cmp
js
out
cmp
jno
jmp
cmc
ret
fisubrl
loopne
or
je
mov
ja
adc
pop
nop
sbb
sub
cmpsb
or
adc
jns
in
ss
cwtl
push
xlat
cmp
cltd
fwait
mov
xchg
jne
loopne
xor
mov
lods
or
jb
imul
repz
aas
inc
ss
outsl
inc
es
fidivl
cmc
bound
mov
stos
xchg
fs
inc
pop
ror
jo
stc
inc
mov
pop
jo
subl
dec
fsubl
addr16
adc
and
and
pop
xchg
mov
sar
repnz
push
cmp
cmp
lahf
and
push
cld
aam
rolb
add
jnp
sub
xchg
mov
xchg
sbb
sub
in
addr16
stos
push
cmp
add
jl
xchg
cmpsb
ficoms
ss
shrb
lods
mov
sub
dec
arpl
hlt
dec
xchg
xor
popa
sarb
in
cli
adcb
pusha
lea
push
pop
in
jne
lahf
xor
inc
push
or
loope
dec
data16
mov
sbb
dec
push
sub
adc
fcmovb
scas
outsl
inc
sbb
in
mov
fwait
adc
jp
sub
mov
es
or
push
scas
jp
xchg
insl
andl
int
stos
add
sbb
fucomip
cld
sar
push
fs
frstpm(287
test
mov
push
sbb
nop
cmc
jge
fimuls
loopne
sbb
out
cmpsl
push
mov
les
out
lret
inc
fsubrp
call
push
mov
mov
and
orb
inc
lea
mov
lods
push
mov
inc
aaa
sub
mov
cmpsl
insb
pop
loop
stos
enter
loop
xchg
in
dec
add
mov
lcall
sbb
fbld
lret
lahf
xchg
jb
popf
sub
cld
dec
push
pop
rorb
xchg
ret
push
or
subb
outsl
dec
xor
inc
xchg
in
jbe
icebp
mov
or
mov
cli
nop
mov
cwtl
fs
lea
mov
push
and
jl
add
mov
movsb
jne
sarl
repnz
scas
inc
stc
push
mov
sbb
in
push
stos
and
cmpsb
xorl
adcb
mov
jno
xchg
dec
cmpsb
mov
dec
pop
int3
and
mov
push
mov
repz
test
int
dec
xchg
or
int3
faddl
movl
mov
cwtl
das
pop
pop
mov
or
add
add
push
dec
sub
ljmpw
test
nop
lahf
pop
mov
nop
ficomps
cmp
pushf
ja,pn
jbe
sub
rolb
stos
lds
dec
movsl
mov
mov
or
mov
sbb
mov
xchg
pop
add
int3
inc
sbb
fcom
mov
pop
jmp
and
nop
shlb
ljmp
popa
jno
adc
xor
cmpsl
orl
stc
xchg
call
pushf
outsl
xchg
push
dec
pusha
daa
sub
jmp
enter
popl
mov
test
dec
adc
sar
loope
fsts
xchg
cmp
dec
lret
notl
in
inc
fcoms
dec
addl
enter
insl
sub
jae
or
cmpsb
dec
jo
loope
xor
and
mov
fadd
sbb
dec
xlat
or
repz
mov
inc
cmpsb
and
scas
fistl
fnstcw
sub
ss
lds
cmp
test
cwtl
adc
xchg
sbb
xor
sbb
clc
insb
ja
les
inc
popf
lret
in
ja
stos
mov
jecxz
jno
cmp
test
sbb
aad
rcll
mov
ja
mov
cmpsb
or
cmpsl
out
mov
sub
daa
adc
mov
dec
pop
or
imul
in
aam
leave
inc
lock
mov
lods
icebp
jmp
push
jb
popf
mov
xor
nop
lds
movsl
pop
cmpsl
mov
sub
mov
inc
pop
rcrb
repz
jp
xchg
rclb
enter
inc
test
sub
hlt
add
xor
and
sbb
mov
loop
mov
xor
and
adc
fwait
mov
js
scas
sbb
adc
pop
pop
cmp
enter
divl
push
and
push
lret
mov
mov
test
fsubrs
sub
lods
sub
loop
jle
add
mov
sbb
push
mov
inc
addb
aam
xor
cmp
sub
xor
add
fsts
iretw
or
xor
lock
lods
jnp
cmp
sub
jbe
xor
test
daa
sub
pop
jle
pop
inc
aas
mov
mov
mov
adc
lods
clc
cmp
jp
stos
sbbl
adc
dec
jle
mov
test
ds
xchg
mov
pop
movsb
mov
add
cld
shl
loopne
xor
in
or
sub
cmc
lahf
push
pop
push
lahf
mov
jg
adc
loope
cli
rcl
jb
add
mov
xchg
stos
push
mov
mov
inc
add
cltd
jo
fcmovnbe
test
aaa
xor
pop
ljmp
push
notl
sbbb
xchg
in
jae
adc
or
add
das
enter
les
sub
pop
push
push
lock
scas
in
test
fisubrl
out
lods
xlat
xor
mov
jbe
cmp
xor
or
adc
sarb
ret
sub
pop
cmp
pop
shll
adc
jne
popf
sub
test
pop
cmpb
fsubl
out
sti
iret
sbb
push
mov
inc
lods
je
stos
mov
mov
mov
mov
sbb
cmp
rcrl
insb
xor
and
adc
mov
sbb
jnp
leave
xor
dec
or
cmp
shll
int
les
cltd
int3
jecxz
mov
or
jge
int3
aad
xorl
push
xorb
out
and
shll
pop
sbb
in
in
lea
rolb
and
push
xchg
adc
xchg
pop
xchg
jg
dec
pusha
sub
mov
imul
push
cmc
pop
jbe
addb
lahf
cmp
sti
fstpt
jg
jo
movsb
xchg
test
sub
inc
cltd
aaa
pushf
fs
mov
sbb
shlb
shlb
insb
cmpsl
cltd
ljmp
ja
mov
lret
dec
add
insl
push
call
xor
xchg
mov
rolb
insl
outsl
mov
sbb
cmpsl
inc
popa
adc
mov
and
jg
sbb
mov
enter
cli
push
std
or
ret
mov
aas
jb
pop
mov
sub
lret
in
push
ja
arpl
repnz
or
lahf
sarl
data16
cltd
or
subb
out
fdivs
or
mov
adc
lea
movsl
xor
push
sbb
pop
aad
cmp
fnstcw
movb
bound
cltd
imul
pop
inc
fmulp
push
hlt
mov
adc
xchg
iret
inc
iret
mov
arpl
fdivrl
xchg
imul
jg
lods
lods
push
inc
mov
std
sub
xor
fsts
pop
scas
lods
inc
mov
mov
out
dec
aaa
mov
xchg
and
jne
xor
xchg
shlb
dec
mov
in
movsl
data16
cltd
sbb
fcmovnb
out
xor
xchg
push
jmp
cmc
lret
vandps
push
fmull
loope
push
leave
xchg
mov
dec
fnstsw
mov
push
pop
testl
xor
mov
scas
mov
pop
pop
into
loope
and
aas
imul
cmc
pop
loopne
jg
push
shll
es
fldt
imul
jo
ss
mov
push
cltd
mov
in
fcmovu
xlat
add
lock
pop
mov
sub
loope
push
sar
and
sub
ss
xor
inc
movsb
sub
nop
enter
or
xchg
int
and
mov
jecxz
cmpsb
jge
mov
mov
jnp
repz
inc
es
push
dec
dec
das
js
jb
inc
into
and
cmp
aaa
sbb
rclb
sub
arpl
xchg
in
lcall
or
mov
dec
xor
xchg
fidivrl
lods
cwtl
xor
push
in
or
ret
pop
js
mov
fwait
test
fmull
inc
insl
and
dec
cli
bound
and
lret
add
sub
fs
sbb
mov
jae
xor
and
xchg
mov
mov
repz
mov
mov
fcmovne
mov
cmp
pop
and
cmp
out
mov
lds
adc
test
fisubs
cld
jg
mov
test
jbe
cmp
ja
pusha
mov
dec
in
push
pop
and
cli
cmp
clc
adc
and
daa
xor
xorl
test
lahf
push
ja
push
xchg
int
stos
mov
adc
ljmp
rol
pop
push
mov
or
mov
xor
xchg
xor
ret
test
xchg
push
lea
lahf
nop
dec
into
cli
jle
cmp
mov
pop
mov
arpl
xorl
test
pushf
lea
jmp
jo
adc
sub
mov
push
adc
xchg
test
jge
test
cmp
xchg
push
mov
enter
out
popf
je
lcall
jp
jo
fistpll
lock
xor
cli
xchg
cmpsb
rcrb
and
xchg
adc
lret
lea
add
in
mov
rcl
stos
dec
daa
jo
push
incb
sub
nop
mov
sub
inc
lret
arpl
add
pop
scas
ja
dec
push
xchg
xchg
push
clc
fdivs
jl
out
fdivrl
adc
add
xchg
fsubp
mov
jbe
rdmsr
mov
pop
jecxz
fldenv
xlat
notl
ljmp
and
mov
shlb
pop
mov
jno
or
mov
jge
inc
idivl
rcrl
or
mov
arpl
xchg
inc
adc
bound
cmp
outsl
pop
pusha
or
adc
test
jge
sbb
ret
sub
out
add
lcall
pushf
xlat
xor
ljmp
bound
lahf
sbb
xchg
adc
dec
fiaddl
enter
push
fnstsw
fwait
das
cld
ja
xchg
ljmp
int
test
pop
add
nop
jg
out
ds
jg
mov
cs
outsb
dec
add
jmp
dec
pop
bound
push
out
imul
jmp
cmpsl
jb
add
jae
mov
lahf
cltd
aas
mov
cmp
ja
cmpsl
mov
and
loope
adc
jle
aad
icebp
xor
xlat
popa
push
and
mov
ja
jle
fwait
sbbb
xchg
ret
cmc
lcall
das
mov
jae
jns
xor
ljmp
jo
ss
sbb
outsl
mov
xor
fdiv
push
pusha
movsb
mov
xchg
int3
cmp
addl
movb
pop
shlb
int3
insl
adc
sub
mov
sub
adc
mov
cmpsl
test
in
dec
cs
xor
xlat
pop
cwtl
dec
cmp
push
add
inc
xor
aaa
repnz
sbb
sub
neg
xchg
jno
popa
enter
lret
outsl
inc
dec
lds
sub
push
insl
sbb
adc
fisubl
mulb
push
jmp
sbbb
sbb
dec
inc
call
fsubs
lret
daa
xchg
mov
adc
fildl
fdivl
jns
push
rclb
sbb
adc
insb
dec
mov
fcompl
or
and
xchg
jae
pop
in
jns
or
daa
lods
xchg
dec
loop,pn
push
fcom
and
xor
xor
adc
testb
in
popl
jle
test
fists
push
fwait
jb
xor
out
outsl
xor
mov
aas
cmp
push
pop
xor
jg
cmp
imul
sahf
sbbl
push
out
shlb
nop
jb
pop
pushf
sub
inc
push
adc
mov
push
lods
xor
xchg
test
stos
leave
subb
cmp
mov
and
lret
clc
mov
mul
rclb
xor
je
xor
pop
pop
mov
les
int
mov
orl
and
sub
xor
shll
adc
and
hlt
jle
insb
enter
mov
int3
rcrb
fs
xchg
test
cmp
and
sahf
lds
cmpsb
test
loope
shrl
subb
add
dec
jnp
jle
mov
je
popl
cmc
xchg
sti
sahf
imul
loopne
lods
xor
fwait
cmp
mov
xor
iret
jnp
icebp
icebp
leave
cmpsl
pextrw
stos
push
imul
rolb
pushf
cltd
sti
xor
pusha
pop
pop
cmp
cmp
pop
xor
push
mov
mov
lock
dec
out
lds
cld
and
jg
loopne
push
mov
sbb
cs
jge
cmpb
and
inc
mov
push
push
ret
xor
outsb
jne
mov
push
sbb
jno
stc
xor
addb
inc
mov
int
mov
pop
sti
cld
decl
rcr
pop
pop
pop
ret
inc
js
fwait
xor
sub
insl
lcall
inc
jge
jne
fisttpl
in
sub
out
fcomps
lahf
sub
push
mov
daa
jo
sub
mov
je
mov
pusha
fucomp
jb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
mov
aaa
push
orl
rcl
mov
in
adc
negb
xor
test
test
mov
inc
adc
push
data16
add
and
lcall
pop
add
add
inc
dec
adcb
mov
mov
add
mov
xchg
sti
push
and
icebp
shll
mov
cli
jbe
testl
and
repz
lret
sahf
popa
fwait
jb
scas
sbb
or
jge
jo
or
in
mov
lret
test
add
mov
sub
sbb
jno
lods
insb
inc
push
xor
xchg
xchg
lock
mov
popa
fcmovnbe
lods
in
push
ror
inc
sbbb
xchg
addr16
push
cmpsb
rorb
cli
adc
sbb
test
or
mov
in
mov
fiaddl
insl
sbb
or
stc
sub
iret
or
shr
test
int
push
push
dec
add
or
clc
mov
scas
fsubrs
les
scas
adcb
pop
jl
add
mov
faddl
inc
test
decb
cmp
not
in
xor
xorl
arpl
jae
ja
popa
insb
loope
adc
andb
lahf
mov
add
rolb
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jl
mov
add
