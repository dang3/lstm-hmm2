xor
add
mov
neg
movzwl
rcr
not
cmp
je
neg
xor
cmp
jae
lea
not
and
lea
lea
mov
neg
lea
xor
xor
mov
popl
mov
lea
cmp
jne
xor
shr
neg
lea
mov
shr
xor
not
not
shr
push
push
call
xor
cmp
jne
not
lea
xchg
and
mov
not
lea
not
ror
mov
and
xchg
shl
cmp
jne
lea
mov
mov
mov
not
ror
adc
xor
xor
xor
mov
cmp
jne
add
add
xchg
not
mov
mov
lea
xchg
rcr
xor
decl
jne
cmp
jne
mov
lea
lea
lea
add
mov
xor
xchg
xor
xor
mov
neg
cmp
jae
xor
mov
mov
rol
shr
add
lea
ret
lea
adc
mov
lea
cmp
jne
xor
lea
xor
mov
lea
xor
lea
mov
mov
mov
not
xor
cmp
jne
adc
mov
xor
mov
rcl
mov
mov
and
neg
adc
add
lea
mov
cmp
jae
xor
not
add
push
lea
and
not
xor
shl
cmp
jne
pushl
lea
add
movzbl
xor
cmp
jne
mov
mov
xor
rcl
adc
xor
rcl
cmp
jne
push
mov
sub
pusha
xchg
not
mov
push
mov
cmp
jne
mov
mov
xchg
mov
adc
mov
mov
adc
adc
shl
cmp
jne
adc
lea
push
push
pushl
pushl
call
xchg
adc
adc
lea
mov
cmp
jae
shrl
xor
adc
mov
mov
rcr
shr
mov
mov
mov
rcl
adc
xor
adc
xor
push
cmp
jne
xor
adc
adc
mov
mov
mov
add
mov
rol
or
je
and
cmp
jne
xor
xor
not
xor
xor
lea
xor
mov
rcl
pop
rcl
xor
cmp
je
cmp
jne
rol
movl
not
mov
not
movl
ror
mov
lea
mov
shl
cmp
jae
xor
not
rol
mov
lea
lea
mov
xor
call
add
not
cmp
jae
mov
lea
not
shr
mov
cmp
jne
rcr
mov
mov
mov
neg
xor
mov
xchg
adc
shr
lea
mov
mov
mov
not
lea
popa
call
call
xor
ror
mov
mov
mov
ror
xor
xor
shl
xor
rcr
mov
add
ror
neg
cmp
jne
lea
ror
rol
xor
neg
shl
not
mov
mov
xor
cmp
jne
xor
mov
sub
rcr
xor
lea
cmp
jae
mov
mov
lea
cmp
jne
xlat
push
jae
filds
pop
aad
jb
hlt
adc
inc
jae
bound
sti
pop
xchg
cmp
fidivrs
push
xor
scas
repz
xchg
and
push
xor
push
test
fdivs
cmpsb
xchg
mov
test
pop
sub
xchg
int3
pop
jae
test
pop
rcrb
gs
push
fisubs
push
test
jg
sbb
push
mov
add
pop
push
xchg
pop
pop
in
mov
jae
jnp
es
push
dec
add
ja
movsb
mov
fidivl
sbb
jl
push
pushf
bound
cs
push
mov
xor
aaa
jnp
repz
push
push
hlt
test
imul
push
xor
adc
add
sub
pop
mov
scas
clc
cs
mov
xchg
sbb
mov
dec
push
push
and
add
jno
out
push
jo
cli
fidivs
int
aaa
jg
xor
cltd
or
shl
stos
push
push
out
mov
shlb
jg
xchg
es
mov
outsb
fidivs
push
sub
movsb
icebp
xor
arpl
pop
pop
inc
mov
fwait
pop
push
push
jae
and
jnp
push
sub
lea
insb
sbb
push
lock
adc
sbb
push
inc
pop
push
stos
push
mov
add
mov
test
xor
fisubs
dec
push
cmp
add
inc
imul
in
lea
insb
sbb
fimuls
mov
add
pop
push
push
jae
test
push
mov
dec
push
dec
pop
jp
clc
lods
test
pop
mov
insb
sbb
fdivrp
add
adc
lock
adc
clc
push
notb
mov
or
push
cli
push
or
movsb
sub
cmp
jmp
and
mov
adc
sti
stos
test
or
xchg
pop
push
enter
repz
lret
pop
rolb
jbe
daa
push
ret
or
or
outsb
and
mov
js
mov
mov
fists
xchg
jo
add
fldz
mov
aam
jo
mov
jmp
mov
testb
lock
repnz
sbb
pop
sti
mov
das
sbb
mov
or
je
xchg
aaa
mov
repz
jp
insl
aaa
xchg
mov
sti
mov
mov
push
das
or
fldenv
pop
outsb
jo
push
cmp
testb
jb
clc
mov
stc
sbb
daa
add
jns
add
clc
dec
in
push
stos
fs
add
mov
sbbl
shrl
sbb
xchg
add
dec
nop
decl
pop
adc
add
or
jbe
dec
rcr
pop
in
or
pop
pop
ds
popa
and
xor
push
sti
pushl
xor
sti
mov
dec
enter
sti
mov
adc
outsb
sbb
cmp
jno
les
insl
xchg
roll
jmp
les
mov
push
pop
outsb
es
dec
mov
sbb
push
mov
push
sti
decl
js
stc
and
jo
xor
jns
jg
or
add
mov
inc
mov
call
jae
and
dec
lods
fbld
fwait
cmp
xchg
paddsb
mov
ret
rcr
clc
les
jb
mov
jp
mov
or
adcb
or
mov
push
xchg
mov
jae
pop
pop
add
flds
pop
jns
jg
fistpll
popf
adc
jae
fisttps
cwtl
adc
jae
and
int3
xchg
pop
jnp
add
add
pop
jle
test
jae
sub
int3
xchg
mov
rep
cmc
add
js
xchg
hlt
or
stos
lods
fldt
add
negb
inc
stc
mov
scas
add
mov
push
hlt
or
pop
repz
dec
fnstcw
ljmp
rorl
mov
xor
int
fnstenv
out
push
xchg
int3
jns
stos
jae
pop
xchg
mov
mov
flds
pop
dec
push
mov
or
fldenv
xorl
std
xorl
out
add
dec
jecxz
xlat
flds
pop
enter
mov
sbb
inc
mov
push
pop
enter
mov
lea
sti
pop
or
fisttps
dec
scas
mov
jae
cmpsb
xchg
adc
scas
add
or
push
sbb
or
push
clc
rorl
movsb
fiaddl
and
jno
lods
lock
repz
lods
in
out
cmp
jns
sub
std
inc
jo
lea
stc
mov
test
pop
cmp
lcall
pop
pop
mov
in
dec
xchg
cmp
push
addr16
sarl
cwtl
insl
icebp
jo
mov
cmpsb
test
data16
fsub
pop
inc
out
nop
push
mov
add
push
sti
clc
mov
loope
mov
das
repz
enter
mov
push
ljmp
repz
xchg
outsb
push
rcrl
xchg
mov
sti
mov
fnstcw
mov
loope
mov
fnstenv
dec
addb
int3
out
arpl
jo
lods
jo
cmpb
jle
jb
loop
xlat
mov
xchg
stc
mov
xchg
repz
jo
mov
clc
xchg
push
dec
repnz
clc
leave
mov
xchg
mov
push
add
mov
lahf
sub
or
pop
jo
sahf
fldcw
clc
sbb
mov
or
fistpl
aam
mov
outsb
xor
ret
push
jmp
push
cld
addl
mov
mov
insl
mov
cli
nop
sub
mov
jae
xor
push
icebp
sbb
push
xchg
in
push
hlt
cmp
cmp
repz
pop
in
cmp
mov
mov
mov
pop
sarl
sub
mov
xor
lea
js
cwtl
data16
mov
pop
cli
mov
scas
das
cwtl
out
aaa
mov
test
cmp
es
pop
mov
es
gs
lods
mov
jp
data16
xchg
lret
shr
cmp
and
mov
ret
call
xchg
push
dec
test
jb
in
ret
imul
scas
mov
insb
out
movsb
jb
and
les
jbe
mov
repz
sbb
ss
xchg
call
fbld
shll
and
or
test
cmpsb
jnp
and
xchg
pop
and
sub
cmpsb
cmp
jmp
sbb
test
sbb
clc
ja
adc
shl
xchg
sub
adc
shrb
push
jmp
and
fildll
xor
jg
inc
sti
fstps
adc
mov
ss
mov
popf
out
addr16
or
sbb
cwtl
clc
icebp
cmp
orl
cmp
jns
dec
insl
out
jo
dec
inc
push
push
es
addr16
lret
pop
ret
fimull
or
movsl
out
or
mov
xchg
loop
fwait
nop
fcmovu
mov
fmull
pop
shl
ret
xchg
push
jno
sbb
data16
mov
dec
ret
or
jmp
adc
jns
or
repnz
hlt
cmp
mov
ret
jnp
or
cwtl
mov
xor
imul
cmpsb
fdivrl
shr
adc
inc
js
xchg
shl
push
xor
and
push
jo
add
cwtl
rorb
nop
sbb
fnstcw
popl
in
inc
push
cld
xchg
cmovp
mov
roll
xchg
loop
pop
mov
sub
jmp
or
rclb
mov
mov
adc
jle
iret
xchg
jo
lar
data16
call
cwtl
les
mov
out
sbb
repz
mov
stos
adcb
cld
mov
xlat
insl
jo
sbb
shrl
cmpsb
cmp
cmp
adc
sub
fistpll
fstpt
stc
xchg
push
call
iret
xor
xlat
fmull
mov
ja
repz
ret
shr
fs
imul
insl
inc
mov
lods
adcb
add
cli
mov
ja
pusha
js
mov
pushf
clc
dec
adc
in
xorb
icebp
xor
stc
popf
movsb
jge
xchg
subl
xchg
ret
insl
mov
jbe
jnp
lods
stos
icebp
adc
fistl
lods
mov
lods
pop
jl
and
in
mov
jge
insl
pop
divb
jge
jp
lcall
pop
pop
adc
or
sti
push
inc
mov
push
adc
mov
push
inc
jns
cmpb
in
mov
fiaddl
add
dec
jb
add
inc
pusha
into
sbb
loopne
ss
lahf
int3
shlb
or
mov
rcr
and
lds
mov
pop
stos
pop
pop
pop
scas
and
test
rorl
adc
int3
js
mov
scas
lods
lret
in
daa
pop
imulb
sub
inc
shrl
xchg
sbb
loopne
scas
data16
or
imul
fcompl
mov
adc
pop
sub
clc
cmp
pop
out
adc
daa
fisubrl
pop
adc
sbbl
movsl
or
push
pop
test
push
in
adcb
cld
inc
dec
pop
andl
js
movsb
cli
out
cmp
sub
push
stos
xchg
jp
js
ljmp
arpl
sub
div
lods
sbb
mov
scas
mov
push
lods
xchg
mov
jmp
movsb
movsl
mov
sub
jge
push
test
mov
mov
cmpsb
inc
andb
xchg
adc
xlat
mov
hlt
ss
out
jge
mov
sub
cmp
mov
xorb
push
fsub
fwait
mov
int
lock
lcall
icebp
subb
cmpsb
jnp
or
pop
adc
and
pushf
test
jp
inc
ds
in
add
mov
pop
adc
out
int3
or
add
cmpsb
pop
mov
arpl
sub
mov
push
pop
and
cwtl
shl
push
xchg
mov
fs
push
fwait
mov
jo
jge
jo
jecxz
adc
adc
loopne
cmpsl
sub
mov
icebp
mov
sbb
mov
ds
cltd
clc
xor
fpatan
cmpsl
mov
orl
test
mov
jns
rcl
mov
or
in
push
mov
mull
les
cmpsl
pandn
nop
fldenv
outsb
jbe
jno
cmp
outsl
ret
repnz
sub
stos
addl
popf
jae
sbb
push
jp
adc
push
nop
nop
cmpsl
mov
pop
lret
sub
negl
xchg
pavgb
movsb
xchg
movsb
mov
sub
inc
jmp
sbb
rorb
push
or
or
lret
push
mov
mov
push
lock
and
cmpsl
loopne
jo
pop
fidivs
les
sbb
ja
cmpsb
xlat
out
push
repnz
dec
ds
xor
adc
roll
xchg
mov
fisubs
sub
fmull
fildll
pop
mov
lea
mov
jb
jo
pop
movsb
mov
fs
nop
sub
xchg
dec
ja
xchg
sbb
sub
je
jle
add
jecxz
mov
push
repnz
inc
mov
dec
add
bswap
mov
mov
jl
mov
dec
cmp
int
or
in
push
insb
lock
cmp
inc
mov
push
fsubl
jl
sub
test
sbb
addl
cs
push
or
or
cmp
daa
ret
js
outsb
xchg
test
jb
shlb
mov
out
rolb
push
imul
push
xor
xchg
into
leave
cwtl
xchg
pop
cltd
repnz
movsl
inc
fwait
repz
loope
outsl
repz
xchg
cmpl
fistpll
pop
ret
inc
lock
xchg
push
mov
pop
stos
pop
and
inc
jle
decl
cmova
sub
dec
fimull
addr16
jnp
mov
mov
jnp
mov
sub
data16
ud1
cmp
lret
inc
and
lcall
aad
outsb
xlat
aas
aad
jne
inc
add
movq
add
cs
dec
test
cld
mov
int3
jmp
gs
rorl
mov
stc
mov
add
xor
std
pop
push
rcll
mov
sub
pop
jl
mov
xchg
xchg
mov
cmc
dec
push
aam
adc
jns
mov
add
dec
add
adc
pushf
push
fdivrp
mov
incl
jns
and
ljmp
iret
cltd
mov
push
add
cmpsb
adc
sub
pop
rclb
cwtl
inc
std
xchg
outsb
fcomps
xor
mov
decl
lea
sub
out
repz
insb
jg
mov
sub
rcr
jne
xchg
xlat
cmp
xor
gs
jge
xlat
push
aas
jbe
popf
add
mov
int3
push
fists
mov
sub
xchg
xchg
xchg
stos
das
out
push
adc
mov
jb
dec
test
out
jbe
out
pop
lret
dec
stos
insl
ds
scas
add
rcrb
adc
mov
cmc
std
decl
adc
mov
icebp
lea
shll
xchg
aas
sbb
cmp
je
stc
push
mov
fldl
pop
rcll
jecxz
incl
inc
push
add
xor
cmpsb
xchg
pop
fildl
sbb
addr16
inc
dec
es
or
stos
sub
mov
sahf
xchg
jp
xchg
mov
out
push
jl
stc
push
ror
nop
xchg
sub
push
fdiv
fsubp
leave
cld
lods
insl
jns
int
shll
mov
ret
inc
ja
into
arpl
jnp
cmp
mov
stos
xlat
ret
mov
fildll
stc
fildl
fs
or
xchg
inc
push
add
pop
jns
mov
mov
sbb
mov
xchg
cmp
jl
aaa
in
sub
inc
imul
notl
sub
cmp
and
mov
lods
jmp
out
ja
push
movsl
mov
std
int
mov
or
inc
mull
xor
aas
push
xor
sub
movsl
je
in
iret
fsubs
lods
lock
pop
test
into
rclb
push
daa
repz
adc
into
das
lcall
sbb
in
or
rolb
jo
inc
fcmovu
repnz
pop
mov
mov
jl
add
into
scas
insl
in
icebp
mov
xor
ljmp
cmp
push
int3
push
aaa
sbb
addps
scas
xchg
testb
fmul
add
xchg
movsb
cld
jecxz
mov
or
pusha
dec
cltd
mov
fildll
call
popf
movb
push
rclb
rcl
xlat
addr16
or
mov
sar
sub
loop
add
shll
mov
mov
test
test
jmp
pop
test
mov
mov
inc
outsb
fwait
scas
sahf
out
jp
pop
shlb
ja
or
xor
ja
mov
aaa
mov
inc
hlt
add
rcr
mov
es
xchg
clc
dec
pop
std
mov
stc
pushf
js
andl
je
inc
or
fidivl
mov
mov
or
push
pop
cmp
push
add
jbe
mov
fistpll
adc
mov
sub
xor
pushf
pop
clc
xchg
loope
rclb
xchg
dec
xor
test
xor
push
sub
inc
and
jbe
dec
add
dec
mov
stos
rorb
dec
push
shrb
int3
stos
xchg
outsb
jae
jnp
in
je
pop
movsl
cmp
push
cld
gs
bound
jo
or
dec
fnstcw
in
mov
mov
xchg
xchg
rorl
pop
inc
movsl
xorl
push
vphaddbw
and
repz
or
fstpt
ljmp
repz
fidivrs
adc
stos
sar
push
mov
mov
imul
lods
testl
lea
inc
push
cmpl
mov
pop
add
jo
jo
stc
clc
enter
jl
mov
pop
mov
scas
imul
out
mov
repz
jne
dec
sbb
stos
jl
pop
cltd
cwtl
hlt
pop
js
jns
fldt
pop
fwait
mov
cltd
jno
inc
xor
push
lods
fbstp
cmpsl
fsts
jno
jae
jp
mov
xchg
xchg
clc
dec
sbbl
add
fisubrs
sub
add
mov
jae
push
in
stc
mov
movsl
sahf
call
add
pop
jbe
daa
ds
lods
cltd
ret
ret
movsl
adc
test
fst
mov
ret
and
test
pop
mov
test
andl
movsl
dec
xlat
inc
jg
loope
mov
fisttps
in
inc
or
lahf
pop
jecxz
mov
aam
jbe
test
push
popa
mov
push
jne
jl
fisttpl
push
outsb
insb
sbb
aaa
pop
fisttps
inc
out
mov
cmp
push
je
negb
dec
arpl
xor
iret
pop
mov
push
push
sbb
stos
adc
mov
into
scas
mov
jl
or
pop
push
inc
mov
xor
jg
xor
hlt
sahf
add
dec
pop
cmp
movsb
push
mov
adc
in
push
enter
clc
jb
popa
adc
push
or
hlt
ret
ffree
shrb
xchg
int3
mov
push
test
sti
lret
adc
jne
cli
add
bnd
pushf
ds
fadds
lods
push
divl
insb
outsb
jbe
xchg
lret
push
enter
sbb
mov
pop
stc
or
xlat
xor
mov
arpl
movsb
add
xchg
outsl
push
cmp
sarb
into
inc
adc
mov
mov
iret
jae
fldcw
ret
jecxz
rorl
push
sub
xchg
or
jp
dec
les
stos
leave
movsb
movsb
dec
imul
dec
jo
shll
pusha
out
cld
adc
ds
xor
inc
incl
xchg
inc
test
insb
lret
mov
ret
rep
adc
or
pop
jg
jns
adc
sbb
mov
jecxz
pop
fwait
jno
dec
lret
add
shrb
xchg
lods
rclb
sub
outsl
sti
fidivl
pop
test
call
fisubs
mov
fstpl
mov
sbb
push
xlat
cli
cmpsb
shlb
pusha
scas
push
je
iret
fstpt
rorb
sti
repnz
imul
popf
jnp
or
lock
mov
jbe
push
sub
sub
lret
mov
dec
pusha
setae
fs
sbb
inc
mov
pop
shl
sbb
mov
fadds
dec
push
xchg
xor
inc
push
sub
hlt
sbb
xchg
sti
xchg
es
xchg
push
andl
mov
cmp
fdivrs
lock
scas
mov
out
popa
mov
mov
mull
repz
mov
fdivr
int3
sub
lods
lock
out
lret
addb
sbb
ja
adc
xchg
mov
mov
cwtl
test
cmpsl
xchg
cmp
fs
push
mov
inc
inc
sti
xor
pop
pop
outsb
scas
nop
dec
lea
xlat
and
inc
aam
enter
push
or
xchg
lea
xchg
gs
jns
ret
cltd
insl
sub
cmpsl
sub
test
sti
shrl
inc
stos
push
test
idiv
pop
add
repz
mov
and
std
add
cmp
in
xlat
ds
jmp
or
pop
test
add
sub
std
xor
out
std
pop
cld
and
cli
jo
mov
pusha
mov
adc
test
add
mov
add
lock
pop
sub
jnp
lock
cli
sub
call
test
pop
jbe
add
dec
bound
adcl
test
aaa
xchg
pop
movsl
fstpt
xchg
rcrb
add
mov
xchg
inc
dec
sbb
inc
incb
xchg
add
dec
push
pop
out
ret
inc
push
ljmp
and
lahf
add
add
mov
idivl
es
in
and
jle,pn
mov
mov
lds
sub
stos
