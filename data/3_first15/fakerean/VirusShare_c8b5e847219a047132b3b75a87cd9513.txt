sbb
add
mov
aaa
jle
and
jl
push
in
loop
xchg
mov
push
cmp
cmc
pop
pop
pop
or
testl
push
in
mov
xchg
xlat
and
loopne
test
in
xchg
call
mov
js
xlat
and
stc
shrl
cmpsb
movsb
sbb
xor
xchg
out
js
ljmp
sbb
enter
sti
sti
insb
mov
outsb
lcall
jg
mov
xchg
and
mov
outsl
or
adc
pop
push
stos
lods
adc
push
fs
aad
dec
xchg
cmp
cmpsb
movsl
andl
dec
inc
lds
sahf
xchg
popa
subb
sar
rcrl
dec
xchg
xchg
ret
scas
push
out
and
pop
xlat
xchg
add
insl
sub
loop
into
xchg
inc
push
movsb
stc
outsb
jl
fisubs
pusha
jae
mov
rcrb
testb
pop
lret
inc
ret
repz
cmpsb
iret
into
sub
cli
icebp
lods
or
test
mov
dec
mov
mov
push
sarb
push
incb
sub
addr16
cs
outsb
jbe
loope
and
mov
pop
xchg
faddl
jl
cmc
leave
cmp
rcll
mov
pop
rcr
arpl
das
repz
adc
inc
testb
enter
enter
xlat
jbe
lret
and
pop
pop
jno
daa
out
mov
jb
jecxz
or
lods
aas
jne
icebp
pop
push
outsl
stos
push
mov
fdivr
nop
nop
pop
fmuls
call
lods
or
mov
jp
rcll
and
sub
adc
sti
arpl
sub
movsb
mov
pop
shrb
xor
fcoms
and
jle
jle
push
xor
cmp
cmp
sub
mov
scas
mov
jns
loope
ss
dec
xchg
jns
dec
push
aam
xchg
sub
loope
movsb
rorb
lds
xchg
fstpl
xor
cmp
pop
daa
outsb
xchg
mov
push
mov
imul
inc
sbb
xchg
mov
test
and
test
mov
movsb
push
fldl
dec
push
sbb
fucom
pop
in
jge
in
clc
negb
jns
jmp
sub
lds
or
cmc
out
jl
push
mov
jno
push
dec
arpl
mov
mov
movsl
fs
and
dec
mov
fadds
jp
mov
pop
jbe
int
jb
xabort
add
lret
adc
mov
jge
adc
decl
sbb
push
add
nop
lcall
push
mov
ss
push
or
sbb
fdivs
popfw
mov
lcall
std
movsb
mov
in
sub
xlat
fistpl
sbb
cmp
mov
lcall
ljmp
inc
push
and
jecxz
addr16
sti
bound
leave
dec
cld
fistl
jl,pn
push
pop
ficomps
or
jb
jb
pop
sub
sub
pop
mov
sbb
addr16
jns
je
jle
mov
adc
and
pop
jae
icebp
int3
les
repnz
loope
inc
xor
xor
es
in
in
xor
jmp
fs
addr16
add
jae
dec
das
mov
repnz
mov
jecxz
sahf
fisttpl
shl
cmp
mov
mov
pop
jne
cli
in
cli
lcall
inc
or
imul
ja
lock
aam
pop
mov
mov
movsl
add
add
mov
outsb
mov
out
push
scas
mov
jecxz
jle
xor
jp
mov
push
dec
dec
push
dec
aas
outsb
mov
cmpsb
rcll
pop
xor
stos
xor
mov
ficoml
bound
aaa
push
das
jmp
icebp
dec
stos
out
sbb
out
outsb
dec
dec
cmpsl
cmp
pop
fmuls
loopne
jle
loope
or
inc
pop
pop
ljmp
pop
xor
cmp
js
sub
stos
mov
in
cmp
jge
jle
inc
mov
pop
ret
cld
adc
mov
adc
int
cmpl
push
enter
or
adc
stos
cmp
pop
push
insb
push
jecxz
scas
add
imul
mov
lock
adc
mov
jo
lahf
mov
sti
sub
jle
mov
popaw
xor
repnz
orb
pop
lods
out
add
dec
ljmp
ffree
js
movsl
xorb
shlb
cwtl
testb
sub
or
push
jp
sbb
aas
insl
cld
sbb
sbb
xor
jo
push
mov
fwait
add
pop
cmc
mov
lds
decb
shl
lret
mov
icebp
out
xchg
cmp
stc
jecxz
and
xchg
pushf
stc
jmp
dec
or
lock
and
and
adc
cmpsl
push
andl
xor
js
pusha
adc
cmp
adc
jne
and
dec
or
pop
push
push
push
lret
lahf
jae
lock
and
inc
ja
mov
out
bound
or
dec
push
cmp
add
daa
icebp
mov
push
fistpll
mov
js
sbb
mov
adc
mov
mov
inc
ret
test
rcrl
arpl
shr
mov
pop
lock
lea
rclb
sbbl
jne
shlb
movsl
inc
mov
inc
jp
pop
cwtl
pop
or
movsb
ret
cmpsl
mov
imul
ret
lock
mov
gs
popa
lock
mov
aad
adc
adc
mov
mov
sti
js
and
loope
lret
enter
pop
mov
mov
mov
cmpxchg
push
jl
jbe
adc
dec
rcll
mov
gs
sbb
cmp
pop
call
bound
xlat
insl
mov
mov
lea
js
outsl
xchg
jo
sbb
ret
popa
jno
mov
ds
mov
mov
mov
xchg
das
into
add
fcoml
ja
xchg
out
inc
pusha
imulb
ljmp
pop
sbbl
sbbb
or
push
and
jbe
fldenv
fiadds
pop
testl
aas
inc
xlat
scas
ljmp
in
jae
jno
das
xchg
cmp
mov
inc
je
fldenv
fucom
cmp
sbb
inc
cld
ljmp
lcall
mov
xchg
xlat
cmpsb
stos
cs
jo
pop
jge
or
movsl
in
mov
and
imul
push
jge
outsl
stos
imul
jge
jns
shrb
jbe
imul
pop
lahf
out
jbe
push
cmp
jmp
dec
in
loop
mov
add
dec
sub
dec
stos
jns
lret
push
std
or
rcr
iret
sbb
cmp
mov
pop
jb
dec
je
cmpb
es
ljmp
rorl
mov
mov
int3
scas
jae
mov
call
sbb
mov
pop
pushf
mov
lock
js
sbb
mov
jmp
add
mov
ss
jg
sbb
jb
call
push
jp
ja
xor
xor
dec
or
dec
orb
push
or
xor
xchg
nop
fistpll
in
pop
add
movsb
mov
mov
aas
inc
pop
arpl
mov
stos
je
imul
imul
xor
lret
mov
add
mov
jbe,pt
cli
mov
and
xchg
xchg
push
dec
fdivrs
inc
aaa
push
push
jne
mov
stos
fsubr
dec
je
pop
popf
cmp
fcoms
mov
dec
mov
lock
xor
daa
cmp
cmpsb
xchg
dec
sbb
clc
insl
movsl
nop
scas
xchg
inc
bound
test
sub
add
fwait
xorb
std
pop
stos
fldl
inc
aas
sbb
sbb
jge
jae
xchg
jp
mov
shlb
adc
int
cmp
ja
sub
loop
mov
cmp
jg
push
add
nop
sub
inc
push
test
add
outsl
jo
jmp
xchg
lahf
cmc
ss
sub
and
cmp
sbb
lret
jne
or
and
aas
cmp
cmp
mov
inc
fistpll
mov
sbb
mov
add
call
cmp
cwtl
mov
dec
push
shll
dec
cld
cmp
sub
aaa
mov
lods
push
push
mov
mov
insb
in
dec
adc
mov
icebp
pop
dec
hlt
or
repz
sub
pop
add
xlat
out
test
push
jb
cmp
popfw
jns
shll
xchg
mov
and
stc
fldenv
addl
insb
jb
dec
prefetch
add
popf
mov
inc
mov
fldenv
ret
in
sbb
dec
lods
mov
jnp
out
ret
popf
sbb
xchg
out
ftst
repz
in
mov
push
stos
and
jle
sbb
and
mov
inc
mov
dec
in
in
out
mov
inc
loop
imul
fdivrs
push
repnz
lds
rcrl
dec
int3
mov
xor
xchg
and
pop
xor
jmp
dec
lret
mov
loop
insl
xor
les
push
lea
or
mov
lret
enter
sbb
out
out
mov
jl
add
mov
mov
inc
cwtl
or
pop
lretw
cs
mov
sub
push
iret
mov
and
in
mov
movsl
sbb
pop
add
enter
push
push
jmp
mov
mov
cwtl
arpl
mov
scas
add
inc
ss
sarl
addl
clc
jae
fidivrs
scas
jns
negb
adc
cmp
xor
push
hlt
xchg
fstl
mov
sub
daa
stc
bound
dec
adc
sub
push
xor
jno
inc
xchg
mov
insl
mov
addr16
loopne
cmp
mov
inc
cmp
fisubrl
sahf
fcoml
push
out
pop
imul
movsl
pop
fisttps
int3
je
and
cmpb
call
mov
cmc
add
pop
xchg
sub
mov
popa
push
push
leave
pop
pop
and
je
cmp
stos
out
sbb
fidivs
and
jno
xlat
xor
pop
fsubp
xchg
pushf
scas
loop
mov
in
push
pushf
mov
mov
mov
into
mov
lret
dec
insb
pop
or
dec
adc
sbb
pop
mov
out
sbb
cmp
aad
scas
jecxz
pushf
mov
sbb
aaa
inc
test
lock
jne
sbb
dec
je
jmp
nop
ja
and
jnp
mov
xchg
pop
int
adc
sbb
jge
insb
jb
js
inc
scas
cmc
or
xchg
nop
movsb
inc
push
cltd
fimull
lea
jg
lods
pop
loop
inc
jno
loope
mov
andb
mov
jno
dec
push
aaa
cs
push
push
mov
sti
add
inc
push
push
cs
ds
pop
jns
inc
push
push
mov
inc
inc
push
add
sbb
pop
fmulp
lcall
sub
cmp
pop
jb
stc
outsl
push
or
scas
push
roll
data16
inc
jb
pop
jbe
sbb
bound
sbb
inc
jg
stos
sbb
push
xchg
sub
call
rcr
mov
or
in
jle
iret
lahf
pop
sub
mov
movsb
sub
and
pop
paddb
cltd
popf
fxch
outsl
cltd
mov
lods
mov
cld
pushf
in
repz
xchg
add
data16
xchg
dec
add
mov
hlt
out
mov
push
adc
fisubrs
gs
pusha
push
dec
mov
sbb
mov
data16
mov
mov
aam
pusha
lret
adc
and
in
in
fldt
mov
iret
or
movsl
in
pop
push
jg
js
rcll
mov
out
or
test
cld
sbbb
loop
or
out
out
jae
sbb
out
inc
dec
jecxz
adc
outsl
imul
mov
cmp
nop
adc
out
ds
mov
int
mov
repnz
xchg
mov
xor
or
and
push
repnz
and
mov
mov
jmp
dec
or
out
aam
daa
dec
or
fxch
xchg
lret
adc
pop
in
dec
cmp
loop
mov
out
push
je
jnp
mov
aam
sub
gs
fldl
loop
cli
fucomip
and
lds
pushf
push
scas
push
clc
inc
int
inc
fadd
imul
repz
orb
or
pop
sub
popf
adc
aas
std
jmp
adc
or
pop
jle
dec
aaa
std
add
rcll
imul
add
fcmovne
loop
lods
fwait
cmc
incl
push
shrl
iret
mov
ret
movsl
js
pushl
stos
mov
pop
imul
rolb
cmp
sbb
enter
roll
add
or
fdiv
mov
mov
js
decl
lcall
jb
in
mov
aam
out
sbb
xchg
push
test
add
mov
push
jmp
inc
adc
dec
repnz
nop
mov
popa
loopne
popf
jnp
pop
sbb
xor
in
fsubrl
movsl
jne
add
imul
adc
ret
loopne
mov
inc
lods
lods
enter
dec
addb
and
and
int3
cmp
leave
dec
mov
mov
and
mov
test
or
mov
call
mov
and
scas
out
fcompl
xchg
insb
pop
imul
adc
notl
pushf
neg
mov
aas
xchg
jecxz
fs
cmpsb
cmc
pop
rcr
sbb
jnp
or
nop
inc
leave
call
iret
sub
in
sarb
imul
pop
repnz
mov
ljmp
mov
ret
or
push
test
jb
movsl
cld
jae
out
dec
pop
or
mov
mov
adc
mov
xchg
in
add
jmp
fcompl
mov
pushf
testb
jnp
inc
jg
testb
jne
push
enter
pop
add
cwtl
xor
push
repnz
sti
dec
test
jmp
arpl
std
mov
insl
or
mov
mov
cmp
mov
leave
fdivl
add
push
dec
gs
mov
mov
mov
in
sub
shl
roll
fdivrs
out
mov
push
adc
outsl
cmp
dec
lahf
ljmp
popa
jl
in
push
jbe
mov
mov
rolb
stos
roll
or
jmp
cmpsb
or
stos
clc
mov
xor
cld
mov
in
out
inc
mov
inc
mov
mov
mov
push
dec
inc
test
fwait
ja
fwait
stos
stos
mov
jno
add
in
and
and
movb
nop
fsubs
adc
push
enter
arpl
shlb
mov
and
imul
mov
push
popa
jbe
jmp
xor
sahf
push
jo
ds
mov
rolb
imul
nop
mov
out
ss
jp
adc
aas
ficoml
xchg
je
dec
shrb
cmpsl
sbb
mov
jne
idivb
xorb
xlat
mov
fstl
pop
sbb
rcll
jp
cmc
movl
mov
push
nop
jp
test
test
cmpl
clc
lds
jnp
sarl
mov
sahf
push
std
insb
adc
jl
shr
ja
mov
stc
cmp
add
pop
mull
xor
pop
dec
sti
clc
arpl
jo
push
add
jmp
add
sbb
pop
push
bound
sub
cmp
dec
mov
out
stos
movsl
xchg
loope
sahf
fiaddl
lea
ret
xor
cmp
sbb
jmp
jecxz
int3
bound
int3
in
nop
mov
iret
icebp
and
orl
push
enter
xor
loopne
insl
mov
cmc
lahf
cmp
and
mov
fidivrl
aad
jmp
mov
inc
and
in
out
mov
std
js
lcall
and
and
hlt
lret
lahf
add
push
cmp
stc
int
in
pop
loopne
jecxz
mov
bound
iret
add
jle
push
adc
or
xchg
mov
pop
rcll
addl
adc
imul
addl
ret
rclb
mov
test
outsb
or
xor
xchg
inc
mov
sub
arpl
sbb
scas
int3
or
fdivs
xor
push
addr16
cmp
xchg
cmp
leave
inc
fsubl
mov
mov
rcrb
xor
mov
test
imul
xchg
add
adc
inc
dec
cmp
imul
ficompl
fisubrs
add
mov
ret
dec
inc
test
cmc
jne
mov
sub
fiaddl
lahf
fnstsw
xchg
push
fs
aaa
roll
pop
xchg
cmp
add
test
popf
sub
loop
test
mov
loope
push
mov
addb
or
cli
insb
scas
pop
mov
hlt
daa
pop
mov
daa
fbld
adc
add
scas
sbb
adc
fistl
mov
mov
pop
lods
cmp
pop
fmull
adc
add
out
test
xchg
je
lock
aam
shlb
das
test
cmp
mov
out
sub
mov
mov
aam
je
xchg
pop
in
aas
mov
mov
sub
or
pop
in
sub
jne
lret
mov
mov
and
mov
add
loope
clc
cmp
push
lock
loopne
xchg
mov
push
mov
lods
scas
fs
sbb
add
adc
shr
test
or
add
sbb
loop
jb
jns
rcll
adc
out
aad
loop
add
es
cltd
imul
cwtl
push
mov
push
insb
jmp
daa
into
ffreep
inc
mov
js
scas
mov
add
xor
rorb
repnz
rorl
gs
lods
adc
add
mov
loopne
insl
add
int3
pusha
xchg
push
mov
ret
cmp
sub
cmc
and
pop
scas
outsb
and
shlb
pop
add
inc
fnstcw
loopne
mov
nop
sub
sbb
sbb
enter
rcll
cmc
enter
xchg
jne
push
push
sbb
ss
sbb
mov
cmp
sbb
call
ss
aas
xchg
leave
add
rolb
mov
int3
pop
negb
and
inc
dec
push
jnp
push
test
mov
mov
push
jnp
sbb
call
fisubl
lods
and
int
and
xchg
jmp
fneni(8087
imul
pop
loopne
sub
les
ljmp
ds
dec
iret
push
pop
dec
lahf
adc
or
insl
mov
sbb
xchg
pop
cmp
dec
and
xor
xlat
push
stos
xchg
cs
mov
lret
mov
std
pop
in
cmp
cld
loop
xchg
adc
mov
int3
push
sbb
mov
fcoml
negb
pop
jo
test
jnp
pop
iret
movsl
mov
in
leave
pop
sbb
and
shlb
push
roll
inc
jle
icebp
jle
push
in
mov
jne
jge
cltd
jmp
arpl
mov
pop
pop
popf
enter
adc
cmpl
loope
stos
mov
push
mov
jo
sub
iret
test
mov
mov
leave
sub
xchg
jne
adc
movsb
addr16
jg
adc
lods
aad
cs
mov
inc
jae
xchg
js
mov
mov
outsb
data16
shrl
dec
test
or
dec
pop
mov
into
or
daa
mov
fs
mov
mov
test
call
repnz
lods
dec
das
flds
orl
mov
xor
insb
mov
fbstp
or
adc
push
jl
and
repnz
test
jnp
adc
shlb
ret
in
ss
iret
mov
lahf
cmp
jae
jno
cmp
jno
and
jb
jmp
jmp
sbb
lcall
inc
add
cwtl
dec
lcall
or
xor
or
add
scas
shrl
add
stos
faddl
repnz
rorb
push
jp
iret
cld
repnz
push
icebp
rcrb
jb
cmc
rclb
fcompl
mov
aas
and
arpl
inc
sbb
cmc
out
inc
jp
ljmp
mov
mov
test
mov
adc
icebp
divl
cmpsb
je
xchg
lahf
aas
inc
dec
cmpb
clc
pop
jns
aaa
imull
push
push
aam
aam
push
push
decb
push
xor
jae
gs
push
insb
push
test
int
xor
pop
fs
xchg
arpl
ss
arpl
sbb
sbb
popf
std
shlb
jmp
pop
push
sbb
gs
push
clc
cmp
popf
push
inc
insl
jne
add
xchg
popa
imul
test
sub
fwait
pop
stos
lods
enter
daa
imul
lds
pop
pushf
flds
mov
rcr
aad
or
mov
out
nop
aad
and
pop
mov
jmp
sti
lea
push
lahf
mov
mov
mov
pop
mov
pop
out
lret
dec
clc
clc
cwtl
mov
and
cmp
roll
push
mov
test
jne
adc
or
nop
sbb
leave
pop
xchg
cmc
xor
out
xor
jae
mov
dec
pop
mov
int3
mov
fimull
add
fs
fwait
mov
sti
xchg
push
mov
ret
adc
movsl
or
and
es
push
pop
fists
push
jno
push
fdivs
mov
int3
imul
dec
xchg
inc
idivl
lahf
mov
mov
cmp
cmpsl
cmp
xchg
mov
lea
imul
lods
fsubrl
out
mov
lods
add
faddl
mov
imul
pop
sti
hlt
adc
ljmp
lahf
enter
mov
fwait
or
fiadds
int
enter
enter
in
adc
pop
movl
fmulp
out
push
out
sub
pop
fmuls
stos
cli
adc
mov
inc
xchg
cmp
mov
fmull
sub
cmp
out
arpl
mov
xchg
shlb
cmp
mov
add
ret
sub
lods
stos
sub
cli
and
inc
mov
stos
cwtl
in
and
int
mov
sub
js
xor
sub
rorl
mov
cld
jo
out
mov
test
leave
sahf
ret
mov
dec
jne
or
mov
movsl
pop
add
mov
lcall
sub
ss
pop
call
std
mov
es
push
xor
mov
xor
push
outsl
rcrl
cwtl
fnsave
icebp
mov
popa
sub
push
cmp
fwait
push
xchg
stos
dec
push
push
insb
mov
pop
scas
xchg
jmp
enter
enter
mov
arpl
stc
cmp
xor
ret
shlb
sahf
pop
and
push
arpl
sbb
jle
popa
enter
push
cmp
in
mov
lcall
stos
cmp
loop
lods
mov
fstpl
xor
out
and
and
adc
adc
imull
in
push
jle
imul
stos
pop
cmpsl
outsl
cmp
in
inc
inc
idivl
or
ljmp
push
ror
push
cltd
jb
xor
out
or
xor
shll
cmp
adc
jae
sbb
push
jecxz
jno
cmp
inc
adc
adc
test
pusha
subb
dec
clc
sbb
cmpsl
push
enter
repnz
sub
test
mov
dec
test
sti
inc
cli
js
mov
cmp
test
out
test
int3
pop
dec
sbb
sbb
sbbb
int
notl
popf
sbb
inc
jg
dec
int
or
fiadds
push
lret
rcr
mov
hlt
clc
mov
ss
jbe
fadds
test
pop
inc
cli
lea
inc
out
adc
mov
xchg
push
adcb
fwait
jo
out
ljmp
mov
daa
inc
cmp
test
mov
imul
cld
push
pop
add
jae
sti
mov
xchg
mov
mov
arpl
cmp
and
in
sub
test
sub
and
pop
cmp
push
or
pop
jge
sbb
movsl
sub
je
add
mov
cmp
inc
mov
pushf
dec
ret
ficoms
sahf
std
add
and
xor
sbb
xorb
popf
sub
fsubrs
jne
stos
adc
sub
imulb
push
add
dec
adc
push
mov
fcmovnbe
sbb
cltd
dec
popl
push
add
call
adc
pop
inc
arpl
addb
mov
outsl
xchg
add
add
addr16
repnz
in
or
xchg
xchg
and
cmp
jecxz
dec
in
out
push
xor
aad
fxch
nop
fcompl
sarl
daa
mov
xchg
pop
stos
dec
orb
mov
adc
or
push
sbb
inc
add
add
outsb
pop
out
sbb
inc
scas
insb
sub
cmp
add
mov
test
mov
jo
jecxz
push
inc
jns
push
lea
inc
in
ljmp
lods
or
dec
xor
xlat
xchg
push
mov
ljmp
inc
int
push
inc
rol
sahf
pushl
xchg
fs
push
jp
pop
stos
or
cltd
call
dec
loopne
mov
dec
mov
outsl
cltd
xchg
lcall
pop
rclb
xchg
and
int3
insb
insl
pushf
jmp
cmpsl
sti
pop
mov
xchg
fwait
dec
scas
jbe
sbbl
jnp
push
xor
xlat
mov
mov
sarl
test
cmpsb
push
rolb
mov
mov
mov
sbb
add
jnp
lds
cmp
lret
pusha
pop
out
in
jle
jl
nop
inc
int
test
dec
sbb
dec
mov
subb
jns
mov
pop
cmp
mov
cmpsl
and
stos
push
pop
and
inc
xchg
jnp
or
mov
inc
sub
or
clc
adc
push
xor
xchg
xor
bound
repz
shll
xlat
aas
add
pop
adc
sub
enter
fcmovbe
insb
adc
jg
push
dec
mov
repnz
pop
fs
cmp
xor
push
imull
imul
lods
movsl
xlat
icebp
icebp
andl
or
enter
push
dec
pop
loopne
pop
lcall
xchg
movsb
xchg
lret
popa
ja
jmp
add
mov
xorb
cmp
and
mov
test
xchg
mov
push
fwait
lods
cmp
dec
xchg
notl
imul
mov
arpl
dec
pop
fstl
pushf
jb
xchg
adc
jne
loope
sahf
sbb
ljmp
or
stos
pshufw
mov
cmp
pop
dec
cmp
sbb
in
dec
ficomps
cmp
movsb
insl
stc
stos
out
stos
jbe
sbb
in
int3
jo
jmp
aad
jp
mov
subb
ja
out
ret
mov
ss
in
ss
lahf
mov
mov
out
xor
lock
cmpb
lret
mov
jge
sbb
inc
jns
and
rcrl
push
mov
mov
dec
ret
gs
xchg
push
sbb
or
dec
cli
std
out
sub
dec
mov
stos
lea
mov
in
ds
mov
xchg
daa
out
jnp
ret
mov
inc
sub
bound
mov
hlt
xchg
adc
addr16
jo
or
mov
mov
dec
inc
or
fwait
mov
test
cmpl
test
loop
pop
fisubs
dec
push
lret
mov
dec
loopne
in
adc
sbb
mov
xor
imul
and
fidivl
outsl
sub
dec
xchg
xor
and
vmaxsd
xchg
dec
pop
stc
xchg
sbb
push
gs
inc
movsl
insb
push
mov
push
lods
pop
sahf
and
ss
jns
out
mov
stos
pop
gs
lea
mov
adc
lahf
movsl
lods
and
add
sbb
repz
adc
out
cmp
lea
or
aad
imul
push
xlat
add
lds
xchg
jo
into
cmp
adcl
xor
and
adc
jns
pop
inc
dec
mov
loop
and
cwtl
pop
xor
in
push
stos
out
push
aaa
dec
outsl
cmpsl
push
jb
and
inc
loope
xchg
repz
dec
enter
dec
inc
inc
xlat
pop
cmp
add
pushf
adc
jnp
lods
repz
pop
dec
out
sub
pop
xchg
aam
aas
mov
inc
ljmp
jp
xor
pop
imul
jno
dec
mov
fiaddl
xchg
inc
rorb
push
in
mov
and
es
aas
hlt
data16
leave
pop
shrb
rcll
adc
add
mov
sbb
sub
mov
dec
je
mov
jno
loop
mov
mov
loop
fmull
push
iret
popf
fistpll
sub
movsb
xchg
inc
mov
mov
sub
push
add
icebp
add
push
pop
jg
orl
cvtdq2ps
cwtl
jmp
inc
enter
adc
idivb
ja
clc
les
lret
pop
adc
xor
cld
loopne
push
mov
push
pop
pusha
push
test
out
ret
push
divl
push
shrb
bound
dec
iret
cmp
mov
or
adc
xor
shll
int
and
mov
adc
int
das
push
xlat
cmpsb
jnp
ficoml
mov
cmp
pop
orb
dec
cld
rcll
push
rorb
dec
add
sbb
je
add
or
fstpt
lods
idiv
aas
xchg
jle
xor
or
or
scas
mov
pop
test
popa
cmc
sti
add
xor
ss
adc
mov
fwait
cmp
daa
mov
lcall
sub
or
sub
cmp
cmp
loop
jl
sbb
jno
into
adc
inc
and
in
and
or
mov
movsb
or
shrl
sub
ja
scas
adc
aam
inc
ljmp
cmp
ljmp
stc
dec
pusha
add
rolb
adc
pop
pop
cmp
sub
inc
sahf
dec
mov
sub
mov
cld
mov
imul
out
cmpsl
mov
xchg
or
mov
aaa
jo
jge
loopew
in
fcomps
test
jb
sub
jbe
cs
aas
cmp
push
or
test
in
pop
fwait
push
sub
outsl
shll
icebp
pop
rclb
xor
xchg
sbb
mov
sub
xor
sub
push
movsl
subl
pop
pop
xchg
shlb
sbb
ljmp
dec
mov
loopne
dec
add
sahf
test
mov
inc
xor
sbb
les
cmp
mov
repnz
adc
mov
xchg
jnp
mov
mov
lahf
idivl
and
andl
xor
dec
ret
xor
sti
sbb
cmp
jmp
cmp
movsb
lahf
inc
sahf
dec
cwtl
ja
mov
push
sub
das
push
cmpsb
add
fmuls
pop
loope
sbbl
aas
dec
aad
jmp
sahf
lret
and
cmp
cli
push
out
dec
sahf
imul
ret
cmp
xchg
push
mov
sahf
pop
in
jae
or
xlat
fstps
rcrb
in
mov
push
mov
dec
or
cltd
test
insb
mov
cmp
arpl
jg
arpl
push
mov
cmp
pop
add
and
ret
push
mov
xchg
rcl
push
fwait
dec
cwtl
xchg
in
xchg
mov
sub
jns
push
out
xchg
mov
ret
lea
inc
sbb
loopne
outsb
pop
inc
fs
or
mov
pushf
arpl
adc
inc
lahf
pop
in
icebp
scas
testb
frstor
lea
in
loop
fistpl
adc
mov
out
lcall
jno
mov
mov
popa
lcall
movsl
mov
das
lret
mov
push
icebp
or
sbb
outsb
adc
es
repz
xor
dec
es
daa
push
push
lahf
rol
jmp
push
clc
dec
lahf
mov
xchg
and
mov
add
or
leave
mov
pop
sarb
adc
rcrb
sbb
pop
mov
push
xor
or
out
ret
pop
test
mov
jns
ffree
add
dec
cltd
mov
push
icebp
jbe
clc
sub
iret
sbb
mov
push
ret
fisttps
cmp
ljmp
fsubp
add
mov
insb
in
cmp
xor
and
sub
inc
mov
test
jae
push
jo
mov
lods
mov
mov
mov
adc
jl
xor
xchg
lahf
test
and
sbb
jecxz
xchg
sub
xchg
inc
arpl
ds
jmp
loop
sbb
in
mov
xor
push
cmp
cmp
cmpsl
sbb
lret
or
push
dec
ret
dec
je
out
mov
pop
mov
inc
hlt
lcall
mul
hlt
nop
pop
imul
xor
mov
mov
pop
sbb
js
es
fwait
and
and
add
pop
test
mov
pop
mull
mov
fbld
out
fdivl
or
sub
mov
add
lods
mov
push
pop
xor
xor
sub
ret
mov
clc
test
jo
xchg
fdivrl
and
dec
jmp
and
fwait
cltd
sub
push
mov
mov
add
cmp
mov
pop
sub
roll
int
repnz
outsb
sub
icebp
jl
dec
dec
fwait
xchg
xchg
mov
dec
std
push
jp
outsl
lahf
xor
icebp
xor
jb
lahf
shlb
bound
jb
jg
lahf
outsl
lods
sub
mov
cmp
dec
insb
fstpl
xchg
loop
pop
lahf
es
je
add
fists
xchg
xchg
cld
pop
pmaddwd
mov
fisubrs
cmc
in
push
mov
mov
int3
es
cmpsb
lret
lds
cmp
ja
pop
es
mov
sbb
xchg
arpl
sahf
repnz
data16
mov
xchg
adc
push
jns
sub
dec
fnstcw
sub
iret
clc
cmpb
pop
out
cs
repnz
hlt
and
cwtl
mov
cltd
jge,pn
repnz
movsl
roll
inc
outsl
jle
testl
popf
lods
std
jle
jae
dec
jo
jns
push
jp
ficomps
aas
sub
cmp
jbe
inc
jo
and
movsb
adc
jmp
pop
lahf
out
aam
inc
mov
inc
lahf
subl
and
xchg
mov
subps
xor
xchg
les
xchg
push
push
mov
arpl
push
outsl
test
loope
aad
and
in
mov
jo
cmp
jle
lret
mov
add
inc
and
ds
sub
mov
inc
push
test
scas
xlat
xorl
std
enter
sbb
les
jl
pop
cmp
popa
lods
mov
test
xchg
adc
inc
pop
in
mov
dec
jecxz
pop
sub
pop
mull
ja
and
push
pop
jne
nop
sub
lret
jo
flds
add
nop
dec
aas
ss
scas
loope
nop
loopne
divl
adc
lret
cli
fwait
and
or
xchg
xor
mov
fwait
out
add
sbb
dec
mov
sbb
pop
push
int3
in
aaa
fildl
jge
cmp
mov
in
mov
xor
pusha
mov
sbb
mov
adc
jp
out
sarb
leave
push
popa
dec
das
mov
xchg
cli
cltd
mull
or
popa
push
sub
mov
mov
loope
push
sahf
sub
or
aam
dec
lcall
and
in
lock
cmc
sub
jno
cmpl
add
xor
jne
adc
jge
clc
loopne
movsl
lods
mov
xor
cld
mov
cltd
xlat
jo
jl
xor
test
xlat
fildll
pop
mov
mov
out
outsb
push
push
pop
fdivrs
cmp
inc
mov
icebp
pusha
mov
cs
mov
pop
mov
push
mov
mov
or
loope
xchg
imul
adc
cmp
dec
dec
add
lods
in
ficoml
lcall
and
and
adc
pop
popf
out
lret
jbe
dec
aad
xor
mov
mov
mov
xor
and
scas
cmpsl
mov
das
mov
cmp
mov
pop
scas
movsb
sub
xchg
cmc
lahf
filds
xor
jecxz
pop
lock
mov
jb
xchg
adcb
ficompl
mov
daa
sbb
mov
xchg
adcl
shlb
mov
pushf
aaa
out
lret
push
mov
mov
inc
mov
into
repnz
inc
add
nop
push
les
add
xchg
test
clc
jns
icebp
mov
adc
notb
arpl
js
fistps
or
jno
test
shll
sbb
push
dec
and
jne
cmp
fnstsw
fwait
adcl
and
mov
pusha
xchg
scas
inc
mov
and
xchg
xor
movsl
sbb
cli
inc
outsb
shll
sbb
lock
cld
xchg
icebp
mov
jae
or
test
notl
dec
push
scas
lret
pop
loop
pusha
sti
jnp
push
and
adc
jg
stos
in
pusha
jno
ja
dec
add
xlat
add
mov
lock
inc
jo
mov
into
pop
push
inc
push
inc
sub
dec
add
mov
lea
inc
dec
stos
push
xchg
fistpll
mov
insb
xchg
bound
aas
inc
fsubrl
sub
and
mov
cmp
pop
or
push
inc
cwtl
sbb
jnp
fldenv
sahf
nop
stos
push
int3
icebp
imul
orl
mov
mov
mov
jl
inc
push
ret
aam
pop
add
or
dec
sbb
mov
and
sub
inc
andl
ret
mov
jmp
cwtl
or
dec
test
repnz
je
jle
into
out
mov
clc
mov
lret
add
xlat
and
je
xor
mov
cmp
xor
mov
mov
and
xor
outsl
fs
and
setne
movsb
int
xor
dec
push
jae
outsl
xchg
or
add
adc
pop
test
loopne
and
repnz
shll
pop
mov
lods
popa
xchg
call
mov
adc
xchg
jns
stc
cmpl
or
jmp
or
adc
orl
pusha
nop
cmp
ret
rolb
inc
clc
mov
xor
aad
icebp
or
clc
mov
push
mov
fistps
arpl
ljmp
stos
mov
inc
ficompl
sub
mov
mov
stos
and
push
push
repnz
and
pop
std
fistpll
mov
and
std
mov
sub
mov
mov
inc
lahf
cmpsb
inc
push
js
sbb
mov
pop
mov
outsb
int3
stc
dec
jb
jecxz
call
sarl
je
sbb
or
fcompl
pop
push
mov
inc
ds
ror
outsl
inc
or
in
and
hlt
gs
sub
add
lret
mov
loop
in
mov
fwait
mov
lds
mov
out
std
pop
iret
push
subb
push
test
adcw
fwait
sub
inc
push
cmpsl
sbb
inc
xchg
add
fsubrs
iret
rorb
outsb
ljmp
jmp
das
jl
shrb
fidivs
mov
jge
xlat
pop
cmp
mov
jbe
mov
fnstsw
lcall
fsubrs
es
cld
dec
imul
mov
pop
mov
mov
je,pt
push
xor
stos
jo
fstl
fsubrl
ret
insl
adc
aas
lret
cwtl
lods
lret
add
setbe
jnp
call
dec
xor
pop
mov
push
into
xchg
sbb
lahf
inc
outsb
mov
jnp
inc
cltd
outsb
mov
dec
xor
sbb
push
lods
outsb
xor
or
xor
fs
pop
cltd
fsubl
jecxz
rcrb
mov
lods
aam
sub
shrb
inc
mov
xchg
pop
xor
sbb
pop
jl
aas
fxch
pop
call
adc
outsl
mov
or
add
pop
jo
cmc
fiaddl
or
ret
test
in
jb
cmp
pop
cwtl
into
add
inc
bound
mov
add
loopne
rolb
cmp
arpl
mov
jmp
jnp
lret
and
push
cwtl
mov
aad
mov
jne
or
sbb
insl
mov
push
xor
loop
imul
lea
sub
pop
int3
jnp
inc
pop
sub
jg
add
flds
in
push
pop
pop
cmp
gs
and
mov
stos
mov
push
pop
lds
shll
jge
mov
jl
pop
mov
ror
pusha
cwtl
inc
xchg
loop
or
xor
hlt
ficoml
add
xchg
mov
add
ja
data16
lret
ds
lahf
xor
xor
les
pop
mov
cltd
mov
adc
rorl
xor
fcmovnbe
scas
xchg
insb
pop
icebp
subb
enter
or
sbb
dec
fmuls
jbe
mov
stos
jp
adc
cld
push
rcl
sti
mov
xchg
nop
cmp
jl
scas
jg
das
mov
add
aaa
jo
mov
mov
dec
in
jecxz
push
mov
pop
xor
push
xchg
add
adc
lods
xor
loope
jmp
outsb
fstpt
xchg
jnp
enter
fidivrl
adc
in
dec
faddp
pop
or
fucomi
mov
enter
js
mov
sbb
dec
pushl
scas
mov
shl
stos
lods
xchg
cli
cmp
andb
mov
pushf
xchg
shll
push
mov
dec
addr16
std
mov
js
inc
sbb
adcl
dec
pop
mov
push
jnp
jecxz
ljmp
add
push
cld
adc
and
push
sub
cwtl
pop
push
add
push
xchg
daa
mov
addb
ret
mov
ljmp
in
push
ja
mov
cmp
sub
outsb
js
aaa
push
fadds
xchg
mov
cmp
loope
sub
push
fcomps
out
fcomp
mov
mov
xor
adc
cmp
leave
gs
xor
cs
rolb
inc
aad
aad
dec
int3
scas
dec
cwtl
and
mov
or
or
lods
out
push
clc
mov
fisubrs
sub
jo
mov
dec
arpl
mov
inc
mov
addl
sub
cmp
xchg
fimull
jb
xor
or
add
and
cmp
cmp
xchg
adc
xor
push
mov
stc
sarl
cmc
dec
test
adc
loopne
jnp
inc
hlt
pop
xlat
in
imul
inc
cmpsl
les
stc
inc
icebp
test
xchg
movsb
int
sub
cmpsl
call
scas
js
jle
sub
cmc
jge
cmpsb
ret
xor
cwtl
jbe
pop
cwtl
sbbb
mov
lret
data16
into
cmpsl
inc
divb
cmp
mov
lds
mov
fsub
cmpsl
test
fs
push
outsl
push
pushf
movsl
fimuls
aad
push
std
push
xor
dec
outsb
mov
cmc
mov
repz
sti
dec
addr16
or
and
cmpsb
push
jmp
andb
outsl
and
sahf
arpl
xor
iret
jbe
inc
jae
dec
xchg
repnz
mov
xchg
test
sbb
test
add
rcrl
sbb
cmpsb
psrlw
or
xor
sbb
repz
jno
jle
mov
inc
ret
lahf
add
shll
repz
cmpsb
and
jmp
shll
inc
movsl
xor
std
adc
ljmp
add
imull
sbb
cld
inc
mov
mov
sub
xchg
and
clc
mov
mov
or
cld
mov
or
gs
shl
daa
test
jnp
loopne
sub
std
mov
clc
dec
icebp
cmp
jle
fsubl
scas
adc
push
sbb
xchg
jbe
sub
mov
mov
loop
int3
push
fildll
lahf
adc
mov
ja
add
sub
out
xchg
xor
mov
fstpl
lret
in
outsb
pop
sar
ds
xchg
mov
adc
pop
mov
or
pop
jecxz
lret
sti
pop
jbe
mov
ja
mov
mov
and
popa
fistl
cwtl
jo
dec
xchg
shll
repz
setp
and
adc
sbb
inc
or
fsts
faddl
mov
shrb
inc
mov
or
cmp
xor
mov
pop
int3
inc
lods
mov
sbb
mov
es
xchg
push
cmp
cld
jecxz
into
cmpsl
cmp
into
js
lcall
push
dec
ret
xchg
mov
xchg
sub
cmpsl
xchg
jl
mull
cmpsb
js
popf
add
dec
and
fidivrl
dec
add
arpl
test
ret
jmp
aam
pop
fsub
dec
mov
xchg
roll
sti
xchg
pop
cmp
mov
or
lret
fsubr
dec
push
adc
sbb
jae
jns
bound
or
aam
mov
scas
adc
scas
loop
cmp
mov
ljmp
adc
ds
insb
hlt
dec
sbb
jae
mov
ljmp
and
cmp
ds
movsl
dec
xorl
pop
movsl
inc
clc
aaa
bound
pop
test
push
addr16
sbb
int3
mov
lret
mov
mov
fadds
pusha
fwait
sbb
mov
sub
mov
int3
jne
push
lds
adc
and
cmpsl
lock
lcall
fwait
inc
inc
mov
or
jmp
mov
xor
pushf
sbb
test
js
sti
loopne
push
jnp
xchg
imul
mov
cmp
into
daa
lret
mov
and
gs
jns
sbb
adc
mov
cmp
shll
push
hlt
outsb
cld
test
mov
mov
cmp
or
mov
adc
scas
pop
iret
mov
pusha
pop
icebp
inc
das
iret
mov
and
leave
mov
xor
hlt
pushf
test
xchg
mov
pop
ljmp
cld
push
and
inc
push
ja
cmp
into
mov
aad
das
js
aaa
imul
fnstsw
dec
sub
push
adc
scas
aam
push
sbb
cmpsb
jae
idivl
ret
pushf
push
sub
dec
and
or
mov
das
out
mov
mov
lahf
xor
inc
outsb
fsub
sbb
ljmp
jp
and
push
pop
add
iret
sarl
hlt
std
pop
aam
ss
inc
pusha
sbb
pop
pop
pop
push
bound
test
loopne
js
pop
push
cmp
xor
test
pusha
push
cld
stos
icebp
dec
sub
movsl
push
dec
mov
ud2
jae
cmpsl
jbe
add
ljmp
fimull
xor
jb
cmpsl
rcrl
pop
shr
xor
inc
pop
push
push
loop
sarl
pop
into
and
add
and
in
inc
fists
ret
int
outsl
imul
pop
popa
dec
sub
mov
lcall
mov
pop
call
in
les
loope
jb
pop
sub
out
cwtl
sub
bound
sub
enter
sub
mov
xorl
lret
out
and
mov
or
cmp
cmp
jg
pop
xchg
insb
mov
cmc
xchg
mov
and
jbe
loop
outsb
mov
mov
inc
jnp
add
sub
sub
jecxz
or
imul
push
enter
xor
jg
dec
jns
mov
dec
cmp
int3
inc
inc
mov
xor
dec
jbe
and
fsubs
stos
fsubs
push
or
loopne
movsl
cmc
push
into
dec
movsb
push
mov
xchg
test
cmp
das
adc
mov
lds
or
push
inc
mov
rolb
pop
push
xor
cmp
fidivrs
sahf
push
lcall
xlat
pop
add
out
fcompl
test
ja
in
sub
xchg
in
in
mov
out
sub
cltd
loopne
fwait
addr16
je
inc
fsubl
sub
mov
repz
jae
push
cmpsb
fcmove
gs
adc
jo
adc
les
push
sub
lret
iret
add
mov
mov
mov
or
out
mov
cmp
and
imul
pop
into
fistpll
or
dec
sahf
arpl
jecxz
into
push
jnp
test
jo
notl
mov
cmpl
adc
shrl
imul
imul
add
jb
call
stc
or
jno
xchg
imul
test
jb
sub
rolb
inc
cmp
push
fwait
mov
sub
hlt
and
adc
cmp
mov
das
insl
mov
call
fstpl
sub
ljmp
leave
jae
rorl
or
jl
jae
dec
add
popf
sbbl
adc
jo
in
outsb
das
or
cmp
fistpl
xchg
pop
mull
shrl
or
and
sub
fsts
push
scas
and
daa
jae
mov
cmp
cmpsb
add
arpl
mov
xchg
push
insb
out
and
and
cmp
cmpb
push
or
es
popf
cmc
repnz
lods
mov
sub
popl
enter
sbb
xchg
pop
push
push
nop
sub
mov
arpl
jmp
push
scas
add
jnp
sub
inc
xor
sub
and
fdivrs
scas
pushf
mov
mov
icebp
stos
adc
repnz
popf
das
push
mov
mov
test
xchg
out
adc
pop
popf
in
fisttpl
popf
jne
adcb
adc
rorl
cmp
mov
mov
add
les
xchg
enter
fmulp
outsb
or
loop
lock
insl
dec
cmp
stos
rorb
ja
push
inc
aaa
and
iret
ss
lds
loop
jge
and
dec
mov
fwait
cltd
clc
adc
push
inc
ficoml
lods
xchg
pusha
mov
push
push
int
sbb
out
dec
ds
push
test
adc
orl
push
sbb
das
xor
adcl
out
pop
jae
enter
jae
std
adc
xchg
fisubrl
cmpsb
adc
add
sbb
push
loopne
ja
jg
in
cmp
por
pop
pop
fisttps
es
cmp
adc
xor
mov
inc
repz
in
pop
inc
call
pusha
pop
es
push
sub
push
dec
jbe
addr16
cmpsl
or
mov
stos
and
mul
jge
std
pop
arpl
lcall
cli
mov
dec
imulb
add
cmc
xchg
push
arpl
cli
and
addr16
dec
rolb
pop
lret
jecxz
cmp
mov
push
fs
dec
lret
popf
shl
mov
xlat
pop
lret
push
dec
fisubl
adc
cli
mov
mov
add
push
inc
pushf
xchg
in
push
es
mov
xchg
mov
cmpl
push
dec
inc
cmp
cld
jmp
testl
adcb
xor
hlt
mov
sti
jne
or
jae
loop
push
aaa
cmp
cmpsb
in
jl
sbb
add
mov
test
xor
jns
xchg
sbb
push
leave
mov
fsubrs
incb
xchg
test
repz
sub
push
aad
cwtl
in
sbb
je
push
push
mov
mov
outsl
jbe
cmp
popf
dec
push
enter
push
xchg
inc
gs
popf
mov
push
addl
inc
stos
lock
dec
jl
mov
ljmp
lds
lds
loop
cmc
test
enter
ficompl
loop
push
fisttpl
pusha
cmp
push
sub
sti
rcrl
jmp
or
adc
popf
les
jae
pop
pop
stc
jle
jns
jae
retw
popf
cli
mov
insb
dec
sbb
push
imul
inc
or
mov
out
xchg
test
mov
pop
arpl
cmc
in
ds
fs
into
out
scas
mov
mov
cwtl
int
dec
out
sarb
test
or
pop
adc
fldt
push
movsb
dec
int3
in
and
sub
xchg
lods
jecxz
cltd
popf
flds
push
sub
xchg
das
mov
fsub
adc
test
push
int3
orb
lahf
pop
pop
incb
sti
ffreep
xor
cmpl
xchg
pop
mov
loopne
cmp
stc
sub
sub
sarb
loopne
push
pop
inc
addl
add
cwtl
jns
push
mov
inc
adc
mov
adc
jb
mov
paddsb
dec
jnp
outsb
adc
adc
dec
jmp
and
and
adcb
inc
push
idivl
cmp
pop
mov
dec
aad
popf
ret
fmull
push
xor
adc
push
xchg
scas
clc
int
mov
adc
pop
push
xlat
add
cmc
jecxz
int
test
and
lods
or
loopne
testl
lret
fs
mov
inc
sub
dec
sbb
pop
xchg
fnstcw
faddl
cli
loope
test
pop
adcb
hlt
or
or
fwait
jae
int
outsl
pop
mov
pop
ficompl
xchg
mulb
inc
leave
shlb
dec
or
or
int
cld
xchg
add
or
gs
xchg
xchg
lds
mov
xchg
insl
jns
in
daa
dec
hlt
add
jmp
push
jmp
insl
sub
sub
jb
lods
mov
test
mov
out
fwait
lcall
push
cmp
in
push
inc
mov
cmp
std
xchg
mov
xchg
imulb
sub
insb
inc
cltd
xor
cmp
test
cwtl
add
adc
test
and
or
add
enter
cltd
jge
mov
cmp
ljmp
and
dec
xchg
xchg
sahf
les
daa
je
dec
les
dec
aam
imul
mov
testl
icebp
or
cmp
hlt
in
xchg
ret
fadd
outsl
inc
cli
dec
push
xchg
js
inc
or
hlt
and
aad
cld
sahf
sete
pop
inc
fcompl
sbb
daa
arpl
add
mov
xchg
cmp
jle
sbb
es
jnp
mov
aad
movnti
cmp
cmpsb
pusha
lcall
shll
dec
fs
faddl
lods
imulb
scas
or
xorl
mov
rcrb
mov
iret
jno
inc
cmp
mov
or
lods
inc
aam
lock
push
jno
jae
and
in
out
dec
popf
sub
mov
push
or
xchg
adc
mov
repnz
fstpl
out
jne
cmc
int3
sub
and
add
xchg
mov
lods
daa
or
or
sbb
add
insl
dec
jnp
lods
cmp
mov
xor
aaa
pop
mov
xor
lock
adc
insl
jg
jne
inc
jns
call
cmpsb
xor
push
repnz
fs
push
shll
inc
es
in
adc
jmp
pop
jle
int
adc
movaps
mov
xchg
rorl
jle
aaa
imul
mov
in
sub
lret
addr16
data16
movsl
cmpsb
movsb
inc
and
hlt
mov
lds
sbb
lea
rorb
inc
jns
mov
xchg
cmpl
mov
aaa
lods
cmpl
dec
add
push
sbb
push
cli
jmp
push
inc
shrb
jb
hlt
xlat
xchg
leave
pop
or
sti
sub
ficoms
es
sub
mov
sub
mov
icebp
aas
sub
fdivrl
add
cmp
push
pusha
adc
jmp
mov
fisubrl
sbb
adc
les
jb
in
cmp
inc
inc
pop
push
or
pusha
gs
cmpsl
pushf
mov
lcall
jno
push
push
pop
lahf
test
pop
sbb
insb
data16
push
icebp
outsl
jae
xor
addr16
int3
or
push
insl
jae
adc
cmp
fisubrl
cmp
mov
in
stc
fnstsw
ror
xchg
cmp
and
in
ret
dec
out
mov
fnstenv
sub
add
mov
shll
sub
lds
popa
xlat
mov
mov
push
pop
in
add
iret
push
and
ljmp
cwtl
or
and
mov
sub
push
in
inc
mov
aaa
mov
mov
aad
filds
imul
aad
mov
pop
and
jmp
add
clc
fwait
mov
fsubl
sub
fwait
push
sbb
repnz
outsb
dec
dec
inc
adc
in
mov
dec
pop
sub
out
adc
adc
outsb
pop
inc
das
in
fidivrl
cmpl
xor
rcr
mov
xchg
popf
inc
pop
jmp
test
mov
cmp
repnz
mov
je
cmpsb
popl
xchg
xchg
cld
cmp
pop
jns
shlb
js
shl
push
scas
insl
ret
scas
test
ret
mov
and
adc
mov
pop
cmp
nop
add
jecxz
xor
popf
int3
sub
or
mov
inc
jnp
arpl
fisubrs
or
jmp
sbb
les
mov
push
xor
jo
rclb
add
cltd
sub
orl
and
xor
and
xchg
aas
push
xor
cmp
iret
xchg
scas
xor
outsb
das
add
jo
orl
call
inc
dec
cmpsb
mov
or
sahf
pop
ret
outsl
sbb
out
lahf
ficoms
movsb
mov
jmp
out
aad
xchg
arpl
dec
dec
daa
pop
sub
jle
pop
cmpsl
loopne
mov
push
fstpt
inc
faddl
mov
jle
inc
mov
push
dec
icebp
add
pushf
cltd
dec
mov
ret
mov
cltd
fldt
sti
pop
pop
lods
icebp
push
pop
in
push
mov
sahf
cmp
sub
leave
lcall
jno
ja
jle
je
jne
aam
adc
sub
add
scas
icebp
out
into
or
lods
das
or
ja
ja
inc
cltd
cmp
mov
leave
popf
fidivrs
and
dec
inc
mov
and
neg
sbb
push
fisubl
xorl
push
push
outsb
xor
jns
shrl
out
pusha
inc
jns
data16
sbb
pop
ret
or
adc
mov
clc
or
int
sbb
cs
or
aaa
xchg
xchg
ds
pop
dec
nop
xchg
jp
dec
lods
dec
cmp
ficoms
mov
sbb
sub
adcl
and
dec
push
std
sarb
out
push
pop
push
dec
and
popa
mov
lahf
mov
arpl
gs
mov
cwtd
jle
in
xchg
xor
imul
loopne
inc
cmp
xchg
sbb
or
gs
jae
push
std
push
mov
cwtl
cs
lds
xchg
xchg
dec
sub
stc
cmp
sti
mov
iret
fsubr
add
dec
lock
sti
int
xchg
hlt
mov
xor
or
outsb
repz
jle
and
jl
mov
jp
mov
jecxz
and
in
or
gs
sbb
xor
jg
pop
dec
faddl
test
cld
aad
fistpl
cmc
and
out
ljmp
pop
shr
or
rcrb
cmc
cmc
dec
mov
pop
mov
push
scas
in
int
call
pop
scas
cmc
add
and
stos
mov
inc
loop
cmp
in
dec
imul
in
or
mov
mov
stos
sub
sub
fidivrs
loope
cs
sbbl
out
mov
and
push
pop
sbb
mov
bsf
rorb
add
sahf
pop
test
and
shrb
punpckldq
lret
mov
jle
mov
lds
test
sbb
cmpsl
dec
faddl
rcr
lock
push
pop
into
imul
popf
in
fstps
aas
fbstp
mov
fstl
divl
outsl
pmulhw
push
stos
aaa
jne
adc
sub
mov
and
icebp
fisubs
sbb
inc
ljmp
stc
xor
mov
xor
inc
add
ljmp
mov
out
inc
clc
inc
mov
rolb
lods
or
movsb
loop
movsb
push
xchg
test
or
xchg
out
stc
mov
xchg
adc
xchg
pop
in
mov
loop
stos
cmp
cmc
imul
push
inc
js
push
push
or
xorl
dec
xchg
repnz
ss
xchg
jge
inc
xchg
mov
hlt
or
gs
out
incl
and
lea
lds
pop
enter
inc
add
cmp
and
xor
pushf
lock
repz
insl
mov
int
cmp
in
jae
adc
rcl
aaa
hlt
cmp
jecxz
xchg
mov
sbb
push
cld
mov
mov
push
insb
fwait
mov
push
bound
rclb
jle
dec
out
jo
cmpsl
in
enter
das
add
pusha
jno
mov
add
sbb
outsl
inc
dec
sbb
mov
mov
adc
pop
shr
outsl
inc
fistpll
xchg
gs
and
pop
sbb
scas
cs
movsl
and
jmp
sbb
test
js
jnp
popf
jp
rcrl
jb
daa
xor
addr16
xor
fistpl
xchg
sbb
lock
jle
imul
pushf
ret
cmp
pop
fsub
int3
cmp
aam
in
mov
pop
jae
loope
loopne
addb
jmp
enter
mov
sbb
lea
push
xchg
fcom
mov
pop
mov
sti
xlat
pop
push
adc
shlb
fimuls
cmc
shll
sub
fstps
mov
js
mov
daa
ret
out
xor
jg
mov
testl
or
stos
hlt
out
inc
test
jbe
pop
or
ret
and
mov
sub
push
mov
enter
fsubrl
xor
rclb
pop
xchg
or
sti
jae,pn
inc
adc
lret
cld
aad
pop
add
mov
push
adc
into
cmpsl
sub
inc
subl
mov
dec
add
inc
daa
xor
mov
pop
aaa
cmp
cmp
es
dec
mov
mov
or
rol
add
xor
jb
imul
push
inc
mov
inc
pop
jp
stc
bndstx
push
shll
fbld
stos
or
and
add
bound
or
movsb
les
adc
pusha
mov
repnz
mov
and
imul
fidivrl
or
add
dec
fcmovu
and
jl
mov
mov
orb
movsl
in
cmpsl
mov
mov
xorb
mov
cmpsb
enter
mov
stos
scas
mov
fdivl
pop
jmp
aaa
in
popf
ja
jl
lahf
nop
scas
sbb
pop
jl
jle
orl
add
mov
mov
mov
adc
ja
cmp
movsl
push
in
andl
cmp
lea
ret
aaa
pop
jno
loope
mov
dec
sti
cmp
or
jge
divb
mov
inc
fidivl
and
leave
jnp
xor
ds
loop
ret
ret
inc
cmc
aas
adc
mov
jp
cmc
pop
je
faddl
decb
daa
out
mov
scas
fistpl
pop
pop
adc
push
cmp
mov
jecxz
stc
popf
sub
mov
add
xchg
mov
fwait
or
push
sub
lea
or
dec
scas
cmp
icebp
push
xor
pop
xchg
mov
fbstp
pusha
mov
jne
popa
in
lea
in
fsubrs
fbld
in
cld
jmp
and
loope
pop
push
icebp
adc
arpl
jg
dec
pop
add
aas
or
lock
clc
aas
pop
out
jae
cmp
cmp
aad
cld
mov
push
jle
push
push
dec
aad
pop
mov
and
testb
push
mov
jns
xchg
dec
xor
sbb
stos
out
mov
ds
mov
xor
mov
fstpl
cltd
mov
popa
ljmp
inc
mov
dec
sub
hlt
pop
sbb
jg
cmpsb
sbb
fistps
cs
sub
daa
sub
push
fwait
lods
xchg
push
fs
fldt
cltd
add
mov
push
jmp
dec
push
adc
jno
xchg
mov
cmpsl
push
call
xchg
sub
inc
push
sbb
scas
fwait
movsl
out
pop
das
in
push
and
xor
cs
imul
daa
mov
xchg
mov
jnp
cltd
dec
cmp
out
pop
testl
mov
mov
and
xor
mov
mov
and
flds
insl
int3
aaa
mov
stc
xchg
jmp
sbb
jg
pop
jecxz
mov
lret
and
adc
or
test
jno
aam
cmpl
lret
jns
or
pop
cmpsl
iret
into
rcll
out
mov
push
jmp
popf
call
pop
hlt
sbb
testl
shlb
jns
addr16
mov
pop
or
fnstsw
inc
imul
push
dec
mov
js
jae
cmpsl
cs
sahf
int
dec
ret
xchg
push
sbb
pop
leave
add
in
rcll
mov
dec
or
xchg
or
xor
insb
pop
int
xor
insl
add
sub
loope
rorl
add
sub
xorl
lock
xchg
test
fbstp
loop
dec
imul
xchg
fcmovu
jne
xor
mov
dec
rclb
inc
addr16
mov
lahf
push
imul
sub
fdivs
inc
js
mov
xchg
cmp
in
pop
mov
mov
mov
movsb
add
ljmp
cmc
pop
lret
jle
xor
sub
xlat
xor
inc
mov
adc
mov
daa
pop
mov
out
fmull
cmp
inc
jo
fcoml
xchg
stos
loope
push
dec
bound
add
xchg
and
sub
fbld
lds
jb
lahf
pushf
sbb
adc
stos
iret
jne
imul
out
lea
imul
push
inc
cmp
stc
xchg
test
lcall
xchg
cltd
sbb
jno
xorb
rcl
xchg
add
mov
lcall
add
mov
cli
fbstp
add
loop
jmp
mov
imul
stos
sbb
aas
push
push
cmpsl
in
repnz
repnz
inc
movsb
adc
pop
lea
rorl
mov
mov
jmp
cmp
mov
xor
inc
ja
mov
in
inc
test
sbb
pop
dec
mov
outsb
fwait
and
cmp
cs
mov
mov
mov
dec
loopne
mov
dec
cmpsb
sub
sbb
xor
or
lods
in
outsl
js
sbb
add
aaa
js
pop
les
jmp
push
subb
addb
nop
ss
test
push
clc
xchg
push
aad
call
lret
cmpsb
or
dec
mov
sbb
insb
mov
xor
xor
das
jmp
hlt
mov
xchg
mov
repnz
push
jmp
cmp
pop
pop
data16
dec
mov
mov
xor
inc
data16
cmc
imul
mov
lea
mov
gs
ror
push
mov
les
mov
jno
push
push
xchg
sbb
add
std
ljmp
negb
cmpsl
imul
add
cld
jmp
jl
test
daa
cmp
jne
cmp
hlt
and
xor
pop
fisttpll
pop
inc
mov
and
lahf
pop
rcll
push
les
lds
scas
xor
or
ffreep
mov
cmpsb
adcb
or
dec
mov
call
in
cmpsb
sbb
daa
out
popa
mov
mov
jo
movsl
jnp
pop
add
idiv
pop
gs
push
fdivl
pushf
sub
les
sub
jecxz
mov
es
or
lea
mov
imul
jae
stos
ja
xchg
fnstenv
mov
dec
loopne
ss
leave
aaa
sub
aaa
jae
fcomps
and
mov
sub
stc
leave
mov
sbb
or
leave
aaa
outsl
iretw
sub
in
stos
add
sbb
ds
subb
fstpl
cli
scas
call
xchg
test
jp
add
or
insl
popf
call
sbb
jns
jbe
dec
iret
shlb
push
jb
dec
aas
cmp
int3
movsb
jbe
roll
mov
jmp
pop
sbb
aas
fs
xchg
jb
fdivr
mov
fisttpl
dec
orl
or
sub
mov
xchg
jp
clc
cli
cmp
mulb
lahf
pop
insl
push
cmpb
lret
rolb
aad
repnz
pop
sub
repz
cmpsb
add
icebp
jl
sti
xor
jecxz
clc
repz
sahf
lea
push
das
mov
mov
cmp
cmp
out
sbb
adc
push
in
cmpsb
cmp
leave
push
call
mov
mov
cltd
and
test
mov
lcall
jnp
ret
add
loop
pushf
and
rcll
fcmovnbe
inc
shl
xor
jmp
inc
jmp
sti
dec
mov
addr16
mov
sbb
stc
popf
mov
mov
outsl
stc
mov
fsub
shlb
cmpsb
in
test
cmpsb
mov
arpl
add
xor
jg
loopne
xchg
jp
xor
fdivrl
lea
in
pop
js
stc
sbb
stos
mov
gs
adc
push
test
outsl
insl
shll
xchg
js
aad
or
adc
adc
cmovae
sub
ja
xchg
jmp
add
in
and
xor
stos
rclb
call
notl
ljmp
pop
in
and
dec
push
push
sbb
repz
loopne
xchg
sub
sti
imul
inc
mov
adc
in
mov
add
cmpl
les
lods
xor
xlat
push
je
xchg
adc
test
fwait
and
xor
mov
dec
das
ret
insb
and
dec
cmp
xchg
mov
push
pop
cmpsb
cwtl
into
jl
sbb
cmpsl
and
xchg
jb
test
mov
mov
dec
and
xchg
je
sbb
cmp
nop
mov
inc
in
cmpsb
lds
lds
xchg
movsl
iret
outsl
cs
pop
fs
and
in
push
scas
in
mov
call
fmul
cmc
les
fstl
lcall
xor
jae
adc
cmpsl
out
fcmovnb
ja
xchg
sbb
lret
push
xchg
jecxz
cwtl
fadds
test
inc
fnstenv
mov
inc
dec
iret
mov
nop
push
movsb
or
xchg
mov
jmp
insl
imul
into
pop
mov
or
sub
jp
lods
rcrl
inc
inc
mov
xor
push
leave
loopne
jno
jp
insb
stc
cld
push
and
stos
mov
sub
insb
mov
xor
and
movsb
cmpsb
cs
in
movsl
fistl
cwtl
xchg
xor
std
sub
and
loopne
aas
xlat
in
mov
aaa
dec
aam
shlb
or
mov
xor
pop
cld
pop
int3
adc
in
out
int3
loope
scas
sbb
bound
mov
int
push
imul
arpl
out
stos
pop
adc
push
frndint
movsb
inc
push
outsb
insl
aas
jnp
sbb
and
mov
ja
std
ret
xchg
lods
mov
in
insl
in
mov
das
stos
ds
xchg
icebp
or
push
mov
out
jmp
out
pusha
xor
mov
stos
bound
out
mov
mov
fsubr
cmp
and
imulb
repnz
sub
sar
mov
outsl
and
push
in
add
or
hlt
iret
popa
call
mov
or
pop
inc
mov
imul
int
cs
cs
insl
or
mov
xchg
xor
dec
out
push
fmuls
or
xor
daa
add
ret
cmp
out
sbb
inc
push
sbb
scas
cmc
mov
test
hlt
add
shlb
or
sbb
lods
jnp
cmp
mov
dec
pop
cli
loopne
inc
xchg
mov
mov
lcall
mov
pmaxsw
xchg
pusha
pop
sbb
insl
lret
dec
inc
and
adc
call
push
les
into
out
or
pushf
fwait
push
das
pop
pusha
cmp
pop
lock
or
hlt
pusha
imul
push
fists
dec
jg
jne
adc
inc
or
popa
dec
mov
ljmp
stc
xchg
imul
in
jno
imulb
in
test
outsl
outsl
push
shl
and
push
xchg
and
or
sbb
cld
add
das
add
enter
mov
and
stos
xchg
popf
sub
sbb
and
inc
stc
dec
cmp
add
sahf
adcb
or
sub
jno
mov
fwait
cmp
std
rolb
in
movsl
test
pop
mov
sub
std
imul
pushf
fmul
in
pop
stc
inc
lods
or
test
push
xchg
mov
enter
incl
out
shlb
mov
push
sub
cmpsl
adc
mov
push
je
push
inc
xchg
nop
sub
data16
hlt
addr16
pop
cmpsl
ja
es
lods
leave
add
scas
or
push
xchg
push
pop
pushf
scas
fdivl
jne
in
pop
test
add
pop
add
mov
push
push
xchg
mov
push
mov
xlat
mov
movsl
gs
pusha
dec
xchg
push
lods
mov
orb
pop
repz
pop
pop
in
ret
rorb
jo
mov
repz
adc
fmul
adc
les
sub
xor
rcrl
cmc
pop
jmp
pop
push
shlb
mov
repz
in
pop
inc
out
stos
dec
push
or
inc
dec
sbb
pop
call
mov
xchg
lds
and
rcr
pop
jae
cmc
lcall
jns
addb
imull
fdivrl
clc
push
adc
jecxz
pop
or
bound
pop
les
mov
inc
sbb
jmp
jo
jnp
ss
push
mov
rclb
mov
dec
ficompl
aaa
test
iret
rol
xchg
inc
push
lret
jmp
jge
out
and
subl
stos
sbb
adc
jl
aad
sub
lret
jecxz
push
cmpsl
inc
adc
or
daa
js
xor
lahf
inc
pop
mov
jp
out
pusha
test
pop
sbb
imul
test
test
das
aaa
or
aaa
in
ret
push
push
in
jnp
ret
je
xchg
inc
ficompl
aad
test
add
outsb
repz
and
dec
ret
and
shrl
testb
mov
shlb
fwait
ss
xor
mov
jge
inc
out
jmp
mov
xchg
je
mov
test
cmp
bound
push
xlat
outsl
xchg
in
or
insb
cmpsb
aas
and
or
mov
pop
pop
scas
adcl
mov
mov
imul
jnp
xor
jbe
out
fwait
lret
daa
and
daa
and
cmp
ljmp
daa
hlt
xor
dec
push
ja
in
insl
push
push
pop
push
scas
mov
push
mov
xor
leave
xchg
dec
adc
sbbb
out
js
mov
jge
lock
fstl
data16
lret
mov
sahf
data16
mov
out
stc
cmpsl
or
push
clc
jmp
dec
xchg
inc
ret
pop
cmp
cmp
xchg
pop
add
call
stos
jb,pt
daa
push
xchg
pop
add
pop
pop
dec
inc
xchg
push
cmpl
xchg
jb
push
jecxz
and
aas
push
pop
jmp
pop
mov
pop
das
sub
addr16
jl
testb
jmp
cmp
and
inc
sbb
or
add
mov
xchg
dec
roll
xor
aad
adc
lea
adc
fdivrp
sub
xchg
jp
out
ljmp
scas
lret
mov
std
pop
in
out
xchg
outsb
pop
xorl
jae
addr16
sub
ja
push
loope
push
in
and
xchg
sahf
cmpsl
inc
push
pop
add
cmpsl
lock
js
rolb
adc
jg
les
or
pusha
cmp
test
xor
lea
jge
in
dec
dec
sbb
jae
sbb
cmpsb
xchg
ss
pop
push
aas
leave
xchg
sbb
sti
fsubs
cmpb
jge
out
enter
test
sub
mov
mov
sbb
icebp
sub
aas
cmc
push
rcrl
inc
xchg
rcll
jp
iret
add
shll
pop
scas
adc
aas
xchg
shrl
mov
cmpsl
jae
add
pop
fistps
push
xchg
sbb
mov
stos
add
lret
sub
sarb
add
jns
xchg
loop
ja
push
adc
xlat
inc
adc
imul
and
out
mulb
popf
adc
adc
xchg
cmp
bound
sbb
adc
push
dec
aam
out
subl
sti
loop
ljmp
scas
xor
movsl
and
mov
ds
cld
into
imul
lock
xchg
sbb
out
xor
push
stos
repz
cmp
pop
push
sarl
test
or
push
sub
jae
iret
xor
pop
push
aas
dec
add
mov
sbb
out
or
xorb
sbb
pushf
jge
pop
mov
insl
jae
out
push
inc
lea
es
sarb
mov
cld
cmc
idivb
pop
push
arpl
xlat
addl
dec
insl
mov
xor
pop
adc
rcll
push
jge
dec
pop
aad
xchg
cmp
push
lods
pop
jnp
out
and
xor
addr16
pop
cmp
sbb
inc
repnz
sub
mov
sbb
mov
out
out
data16
outsl
jp
xchg
pop
movsb
pop
mov
aam
push
add
pop
iret
movsb
adc
mov
mov
push
insb
fprem
push
insb
bound
sbb
cmp
sub
cmp
scas
test
fcoms
xlat
aad
cmp
pop
enter
dec
and
insb
xchg
mov
sub
lds
andl
inc
push
dec
ss
push
jg
add
test
jae
mov
stc
loop
sub
mov
xrelease
cmp
addr16
sbb
testl
push
push
outsl
fdivrl
inc
outsb
rorb
call
pop
xor
shlb
pop
inc
xchg
add
icebp
mov
enter
addr16
lods
repz
movsbl
cld
push
dec
mov
mov
cltd
orl
int
and
pop
scas
dec
dec
test
add
es
clc
shl
push
cmp
push
mov
daa
movsb
add
call
xor
lret
mov
xor
mov
test
push
dec
pop
data16
hlt
push
lea
jbe
add
inc
push
fbld
popa
or
mov
in
mov
mov
loope
mov
and
push
fimuls
cmp
inc
push
sti
add
jb
xchg
movsb
fsts
push
cmp
repnz
adc
bound
mov
cli
popf
mov
movsb
testl
xchg
repnz
xchg
push
mov
lods
js
test
mov
cmpsb
insb
sti
cmp
pand
pop
mov
mov
xor
dec
mov
imul
pusha
in
leave
push
and
sarb
cltd
mov
xor
incb
xlat
mov
pop
sub
popf
push
bound
popa
movsl
xchg
or
inc
cli
sarl
mov
popf
add
adcb
xchg
je
ficomps
push
mov
ret
pop
sahf
test
xchg
adc
sbb
adc
and
fimuls
xchg
adc
into
jno
andb
je
sbb
les
repnz
cmp
sub
ret
adcl
sbb
push
sub
out
mov
cwtl
hlt
adc
sti
sub
or
cmpsb
dec
mov
and
dec
or
cmc
das
and
jg
mov
insb
cltd
pop
lea
inc
sbb
jl
push
sub
mov
scas
adc
rcll
out
fisttps
scas
iret
out
pop
add
xor
flds
jg
scas
rcrl
stc
mov
adc
popf
mov
out
inc
je
aad
outsl
adc
repz
insl
add
mov
int3
test
fdivs
sti
mov
push
xor
int3
or
lock
lods
ficomps
arpl
inc
jnp
imul
sub
cmp
jne
jmp
in
adc
pop
fimull
sbb
lret
mov
dec
lcall
mov
jno
xor
cmp
fistpl
fs
push
ret
fwait
addr16
lods
jno
lods
ficoml
jae
dec
and
mov
and
fisttps
movsb
dec
sbb
and
nop
test
lahf
mov
jne
or
xor
addr16
inc
jecxz
xor
fisttpl
push
xor
fs
push
add
test
stos
sub
or
push
stos
pop
mov
adc
mov
mov
imul
sub
test
pop
imul
sahf
add
and
adc
test
es
aas
lahf
std
sbb
push
popa
test
test
cli
lret
stc
mov
mov
inc
call
out
movsl
leave
aam
xchg
cmp
adc
icebp
mov
lods
fisubrl
into
imul
adc
inc
fcmove
int3
mov
insl
jle
and
push
lcall
or
addr16
or
leave
push
iret
testl
sbb
push
cmp
arpl
push
jecxz
jnp
fldt
pop
lea
xorb
in
push
mov
rcrl
push
sarl
jmp
adcl
repz
repnz
lret
andb
push
in
mov
adc
xchg
jp
ja
adc
fstpl
pushf
stc
test
mov
push
mull
mov
bound
cmp
add
ljmp
jns
push
mov
mov
mov
rorl
mov
fisttpl
int3
add
sbb
inc
sahf
push
stos
cs
dec
jno
pop
push
dec
subb
adc
inc
xor
sub
xchg
and
mov
add
inc
roll
pcmpeqw
or
lret
cmp
jo
stc
lret
lcall
mov
bound
sub
out
scas
mov
dec
fwait
out
push
mov
xor
std
push
stos
into
push
push
clc
jae
jecxz
testb
inc
mov
scas
and
xchg
push
test
clc
pop
dec
rol
and
lds
popf
das
push
mov
mov
xlat
ja
cmp
cs
pop
and
into
insb
int3
inc
nop
jmp
je
jne
inc
cwtl
cld
shl
cmp
call
lods
cmp
mov
mov
xor
popa
movsb
xlat
sub
xchg
js
dec
pop
fmull
adc
scas
xchg
push
stos
mov
out
and
aaa
jg
fidivs
cmpb
cmp
and
ja
and
rclb
push
test
roll
cmpsl
jmp
push
add
push
or
outsl
and
and
loopne
push
stc
jnp
arpl
std
push
test
bound
shrl
adc
jmp
imul
sbb
jle
hlt
pop
aaa
shr
inc
dec
and
push
cltd
rclb
movsl
sub
push
jle
loope
fbld
push
out
cmc
mov
rcrl
stos
aam
push
cmp
jnp
inc
sub
fs
dec
jecxz
ret
fwait
add
jle
mov
imul
xchg
test
cwtl
repz
sub
push
mov
sub
sbb
xorb
jmp
dec
iret
jae
cld
lret
mul
sti
imul
aaa
mov
hlt
lea
es
js
dec
pop
mov
sbb
push
loope
dec
xchg
mov
outsl
adc
add
mov
imul
cmovle
add
mov
xchg
mov
popa
lret
rclb
ljmp
rorl
jb
std
mov
test
pusha
shrl
dec
dec
fcmovnu
ss
repz
imul
mov
add
clc
divb
stc
repz
push
adcb
dec
sub
repz
sar
fadds
cwtl
cmp
sbb
xchg
cmpsb
cld
xor
cmp
mov
dec
push
aad
add
jo
jo
and
xor
mov
stc
lods
sbb
and
inc
incb
jne
insb
push
insl
lds
inc
into
aam
xchg
inc
punpckldq
jnp
nop
les
mov
dec
in
cmp
mov
xchg
dec
sub
inc
or
cltd
shlb
push
sub
pop
push
push
lahf
daa
adc
add
pop
push
out
mov
addr16
aad
adc
mov
je
or
xchg
jg
aaa
clc
insl
dec
sub
icebp
jmp
iret
lret
fcmovne
xchg
cmp
and
fidivl
mov
lods
add
das
adc
adc
rorl
mov
fcom
mov
bound
xlat
inc
bound
es
xchg
dec
int
push
adc
leave
sbb
setge
enter
invd
loop
bound
dec
cmc
sbb
push
mov
dec
mov
mov
cld
movsl
jno
sub
test
insb
lock
dec
sbb
or
xorl
push
jns
lds
xchg
mov
push
sbb
popf
and
push
arpl
push
jno
lods
sbb
cmp
aad
jg
xor
imull
movsb
enter
aam
dec
inc
fcmovbe
js
imul
inc
xchg
and
push
sbb
sahf
fmulp
test
lods
cmp
subb
jno
iret
cmpsl
xorb
bound
mov
nop
lahf
stos
mov
xchg
cmp
or
lahf
lds
or
cmp
cs
ja
push
xor
sub
dec
das
adc
in
push
ljmp
imul
jecxz
jg
bound
dec
inc
jne
js
jnp
daa
mov
jne
xlat
xor
and
cmp
in
xor
movsl
pushl
hlt
outsl
cli
mov
mov
adc
xchg
vcvtps2dq
dec
xchg
jmp
inc
adc
stc
lahf
rcrl
cmp
cmc
mov
lock
cwtl
mov
andb
jmp
mov
dec
arpl
ret
adc
imul
ljmp
mov
sbb
pushf
and
mov
cmp
pop
add
int
rorl
test
or
sub
in
jne
fucomp
aad
cmpsb
sar
cmp
shl
test
xchg
in
jnp
jno
test
xor
clc
dec
lahf
xchg
dec
enter
dec
dec
sti
pop
xchg
pop
cld
dec
rol
mov
test
xchg
jg
cwtl
loop
mov
mov
arpl
testl
mov
inc
popf
pop
cmp
adc
fmuls
sbb
and
jmp
adc
icebp
dec
adcb
jno
arpl
fcoml
push
iret
mov
xchg
mov
inc
push
inc
adcl
jb
cmp
cmc
cmp
lahf
pop
das
sub
sub
mov
test
outsl
and
jno
or
scas
dec
test
inc
mov
lret
xchg
pusha
int3
nop
add
pop
int
fwait
pop
sbb
test
outsb
cmp
push
loope
lret
jbe
mov
lods
fcoml
xor
in
imul
fldt
mov
adc
mov
scas
jl
or
call
mull
scas
sub
daa
sahf
jmp
rolb
repnz
mov
daa
int3
xchg
stos
push
fldl
test
aaa
sub
cmp
xor
out
das
scas
in
daa
mov
nop
adc
out
lret
add
stc
cld
sub
subl
adc
jmp
out
or
cmp
adc
dec
in
adcb
and
or
pop
push
mov
lret
sbb
cmp
lcall
into
xor
inc
repz
sbb
pop
in
push
iret
lods
sarb
add
mov
bound
daa
adc
mov
or
sahf
out
lret
mov
mov
outsb
ror
mov
push
push
push
cmpsl
insb
test
rolb
add
andl
mov
pop
les
cmp
push
fstpt
mov
jg
insl
push
push
adc
inc
fwait
loop
push
call
mov
xor
ficomps
rorl
jne
mov
push
aaa
jo
pop
je
inc
push
cmp
and
mov
mov
ljmp
in
or
sti
hlt
push
pop
adc
aaa
stos
jnp
data16
mov
loopne
smsw
mov
add
dec
inc
out
incl
xchg
movsl
cltd
pause
cmp
mov
stos
add
sarb
dec
sub
jle
dec
push
and
aad
or
xor
mov
jno
mov
loopne
jb
stos
jg
aad
mov
je
sarl
pop
sahf
scas
lods
es
adc
xchg
out
pusha
cmpsl
mov
ret
inc
sbb
mov
jbe
aad
es
mov
mov
imul
add
dec
jno,pn
add
push
jno
push
scas
rorb
rorb
pop
cs
sbb
out
xor
daa
lods
fsubl
add
mov
scas
mov
aad
and
pop
push
fdivs
sbb
hlt
or
mov
rcrb
jg
fists
adc
push
loope
xchg
loope
inc
or
lret
addl
adc
imul
js
test
jae
test
add
jnp
mov
dec
in
lcall
imul
push
vsqrtpd
or
es
jbe
cmp
fcmovu
out
loopne
call
push
fwait
adc
lods
pushf
or
push
lock
fwait
pusha
mov
test
inc
inc
iret
add
clc
ret
out
aaa
dec
out
popf
popa
adc
fdivrs
dec
leave
ud1
fstpl
in
inc
aas
lds
push
stc
cmp
adc
rolb
add
mov
and
aad
cmpsb
aad
aas
cld
out
push
and
loopne
filds
aas
cmc
in
ljmp
rcr
and
xor
mov
mov
jge
jge
sbb
ja
inc
or
jno
pusha
jne
inc
inc
xor
dec
andl
mov
ret
ret
aas
push
bound
test
mov
add
insb
lea
inc
nop
lock
mov
add
xor
repz
in
lret
inc
and
ret
stc
cli
xchg
xchg
xchg
and
je
dec
xchg
outsb
adcl
ret
mov
pushf
js
in
leave
inc
nop
push
jmp
arpl
mov
add
imul
stos
adc
aas
jle
test
push
pop
cmc
sbbl
shlb
dec
jmp
mov
sub
idivl
xlat
loop
pusha
clc
loopne
cwtl
push
push
out
loopne
fs
add
and
fs
sbb
add
out
add
mov
xor
mov
aam
jns
sub
mov
add
imul
outsl
pop
repnz
inc
fistpll
jle
sbb
inc
mov
inc
jae
mov
lods
das
xor
insl
and
mov
stos
pop
dec
dec
sbb
in
xor
arpl
add
sub
mov
sbb
mov
ss
ljmp
sub
dec
frstor
pop
aas
mov
mov
pop
in
sub
outsb
insl
pop
xchg
mov
scas
repz
mov
out
or
mov
cmc
push
popa
inc
stc
pop
or
scas
ds
jne
nop
and
sarl
and
ror
xor
imul
mov
nop
je
pop
ret
and
mov
or
cli
jl
xchg
in
add
dec
les
mov
clc
jb
add
xor
lcall
int
inc
cmp
cwtl
cmp
mov
sbb
mov
xlat
mov
push
push
dec
ss
jns
into
cmp
push
inc
ret
imul
mov
or
adc
js
mov
cmp
jl
sbb
pop
pusha
push
pop
and
in
inc
iret
iret
mov
das
pop
and
cmp
pop
pop
push
xor
cli
cmp
pop
scas
jns
ss
sbb
jbe
cmp
or
insl
sbb
xchg
aas
ljmp
bound
xor
fldcw
fcomi
mov
stos
fsubs
pop
mov
add
and
bound
push
pop
xchg
push
mov
jne
lcall
mov
in
in
jle
in
jo
and
rolb
xor
gs
sub
xchg
loopne
stos
cld
push
cwtl
push
lret
xchg
or
add
into
and
mov
rcr
mov
enter
mov
mov
lret
lods
lods
arpl
adc
cmpsb
sti
stos
xor
fimuls
mov
imul
fidivs
out
jecxz
or
movsb
push
fnstcw
or
out
fimull
add
push
or
cltd
adc
add
rcrb
pop
mov
insb
pushf
cwtl
sar
dec
ficomps
adc
sub
nop
fimuls
fistpll
sahf
fidivs
ror
mov
imul
pop
in
lea
aaa
sarl
xor
cmp
stos
subb
mov
das
pop
push
xchg
add
and
das
pop
test
jb
mov
hlt
stos
fnsave
xchg
and
xchg
push
mov
test
enter
or
xchg
fistpll
sbb
mov
sub
jmp
pushf
push
pop
mov
aas
pusha
loopne
push
icebp
fisttpll
iret
orb
pop
aad
lods
add
rclb
arpl
fldl
xor
jo
sbb
ret
movsb
aam
jno
movsb
jo
call
insl
jb,pn
sub
cwtl
dec
xchg
cltd
dec
mov
pusha
xchg
mov
mov
arpl
mov
cwtl
push
nop
jns
iret
lds
add
pushf
out
jecxz
rorb
or
sub
nop
clc
mov
mov
rdpmc
std
lods
lock
pop
out
sub
rcll
rcrl
mov
pop
mov
sbb
sub
mov
add
nop
lret
hlt
dec
dec
or
mov
movsl
loopne
inc
push
int
outsl
rol
fcmove
lock
imul
pop
call
sbb
clc
fscale
xchg
shrb
fnsave
xchg
mov
ja
fdivs
lret
jge
and
jbe
mov
pushf
mov
xor
clc
clc
add
icebp
cmp
pop
sbbb
cltd
inc
testb
lds
xlat
inc
sbb
or
sar
dec
mov
jae
fstpl
lods
repnz
out
sbb
fistpll
sbb
lcall
mov
stos
adc
jl
sarl
lods
insb
sub
push
loop
loope
xchg
mov
imull
or
jg
adc
adc
fcomps
negl
dec
movsl
push
lahf
or
insb
xchg
movsl
subb
add
push
ja
pop
ljmp
pop
xchg
dec
adc
jb
test
sarl
aas
leave
pop
ss
jae
mov
push
fst
lods
dec
push
mov
xor
into
imul
jecxz
mov
jge
testb
dec
push
jne
bound
and
fwait
out
xchg
movsb
push
sbb
pop
inc
pusha
mov
and
jmp
or
insb
stc
out
cld
and
push
mov
pop
cs
pop
pop
mov
pop
xchg
fists
jp
in
add
pop
push
or
data16
es
mov
bound
out
das
pop
fucomip
mov
sub
xchg
shlw
lcall
rcll
pop
bound
in
push
jg
push
sbb
adc
sbb
popa
pop
pop
push
push
lock
sarl
loopne
cmp
push
or
adc
pop
push
movsb
sbb
aas
out
aaa
cmp
cmc
jge
and
xorl
int3
insb
lahf
sbb
in
lods
movsb
incl
stos
and
addps
cmp
ss
fisttpll
sbb
add
dec
push
cmp
adc
notl
je
pop
fsubs
movsl
mov
adc
pusha
mov
pop
cmp
in
dec
filds
mov
sbb
push
outsb
or
xchg
sub
adc
sti
std
mov
es
push
mov
mov
out
sbb
inc
clc
push
daa
clc
xchg
sub
in
fsts
xor
mov
fsts
push
insb
std
hlt
push
out
ja
adc
incb
fldenv
sbb
mov
imul
aaa
sbb
pop
or
xor
inc
push
mov
testl
jecxz
repnz
xor
add
jbe
test
xor
ss
adc
xor
add
gs
mov
imul
inc
cs
sbbb
test
sti
lahf
scas
ds
add
sbb
sbb
jnp
and
pop
int
pop
jbe
pop
test
inc
sub
mov
out
adc
or
aas
pop
cmpsl
repnz
mov
lret
mov
pop
and
pop
scas
hlt
and
jns
ds
jecxz
insb
cli
mov
sbb
ja
jge
mov
xlat
xlat
enter
pushf
jmp
sbb
add
call
add
iret
pop
cmpsb
movb
xor
jg
loope
inc
std
clc
rclb
rol
or
xor
mov
cmpsl
xor
push
dec
insb
xlat
jg
xor
push
shrb
add
shrb
pop
or
push
xchg
jp
mov
outsl
lods
mov
sub
mov
lret
addl
insl
add
cmp
add
les
jno
push
test
inc
lahf
cmp
push
add
gs
lcall
push
jns
or
sbb
xchg
insb
push
mov
sbb
mov
aaa
lods
mov
bound
mov
dec
pushf
data16
sbb
xchg
fisubs
dec
mov
out
sahf
shl
into
js
or
cwtl
xchg
ljmp
mov
fdivs
jno
aam
adc
roll
jp
push
inc
mov
inc
jle
jno
xor
jmp
push
cmpsl
cs
movsl
dec
fxch
xchg
dec
addl
mov
jne
cmp
shll
add
mov
dec
movsl
inc
or
inc
cmp
je
sbb
xchg
stos
not
adc
movsb
sbb
xchg
das
lret
mov
ret
sub
cwtl
add
out
popa
dec
pop
pop
and
movsl
cwtl
cmp
outsb
cli
xor
fcmove
test
cltd
push
cmpsb
inc
movsl
out
jmp
pusha
cmp
xchg
cmp
ficompl
nop
xchg
pop
fcmovnu
push
adc
daa
repz
inc
mov
out
iret
pop
inc
adcl
pop
push
push
add
imul
inc
cli
add
mov
sub
pop
jmp
push
cmp
movsl
cmp
insb
out
pop
add
in
mov
cmp
pushf
pshufw
adc
into
cmp
xchg
jp
test
xchg
inc
bound
movsb
dec
push
mov
iret
and
pop
pminub
aaa
outsb
leave
rcrl
fisubs
sahf
out
pop
mov
sub
ss
incb
and
xor
add
int
es
cltd
xor
andb
fistl
dec
lock
aaa
dec
xchg
insb
gs
insb
stos
lds
mov
cltd
xor
nop
mov
push
mov
cmp
xor
mov
rorl
mov
daa
aaa
imul
jg
fldl
jns
outsl
mov
leave
aam
jae
enter
mov
jbe
loope
cmp
cmc
sbb
sbb
sti
mov
push
hlt
fldl
add
mov
arpl
jl
jl
mov
lret
sbb
dec
mov
sbb
pop
mov
push
or
xchg
mov
mov
in
out
ficomps
add
mov
aam
jae
mov
push
sbb
je
aam
dec
lretw
or
pushf
loopne
or
push
adc
mov
mov
in
or
push
jo
push
or
loopne
stos
cmp
push
or
jne
xor
push
popa
or
pop
xchg
jg
pop
sbb
push
xchg
das
mov
out
dec
fiadds
popf
pop
mov
pushf
dec
addr16
cli
mov
cmp
push
fs
sbb
cmpsb
lds
xor
inc
dec
imul
lock
shll
fninit
adc
adcl
cmp
rcr
out
stos
and
cmp
sub
popa
stos
push
lret
je
jne
cmp
les
xchg
les
xchg
popa
ds
shlb
inc
push
push
jo
into
jne
fdiv
mov
dec
cmpsb
add
lret
mov
lods
les
fstpl
shrb
lahf
jo
mov
pop
loop
pop
sbb
aas
movsb
xor
or
hlt
mov
push
adc
add
sbb
mov
xchg
xchg
sbb
int
jge
inc
aaa
mov
rep
dec
ds
clc
imull
aam
call
xor
pop
imul
push
out
dec
push
mov
sub
dec
add
insl
arpl
pop
scas
ret
inc
test
pushf
mov
pop
jg
jmp
xchg
adc
xor
sbb
dec
jno
xor
push
lods
mov
lahf
cld
xor
cmp
movsb
ja
mov
and
xchg
push
cmp
push
daa
aad
jnp
mov
negl
dec
hlt
call
int3
fidivl
jb
mov
pop
or
jmp
push
push
jae
scas
negb
cmpsb
outsb
xor
rcrb
sub
inc
jbe
and
or
fdivrl
adc
into
dec
loopne
faddp
dec
mov
sub
dec
push
lahf
roll
loop
jno
scas
cmpsb
push
push
jmp
les
loop
cmp
clc
fisttpl
mov
sbb
push
pop
orl
leave
mov
inc
sahf
lds
faddp
ds
insb
nop
dec
lods
in
out
jle
sbb
add
mov
inc
jo
cli
in
sbb
adc
or
cwtl
and
xchg
cld
push
cmpsb
insl
mov
loop
mov
sbb
sub
xlat
pop
cltd
mov
rcrl
mov
ss
ficoms
cmp
pop
lds
jecxz
push
in
cwtl
bound
push
dec
gs
pop
pop
xor
dec
add
jecxz
push
jge
push
inc
loop
and
int3
scas
sub
lret
mov
adc
invd
lock
lods
lds
lds
std
or
and
or
and
mov
sbb
mov
inc
lock
and
pop
in
in
or
push
sub
xchg
pop
or
loope
cmp
test
movsl
mov
dec
test
dec
xor
repz
out
pusha
jle
cmp
inc
mov
push
sub
out
fisubl
es
test
fildl
out
jnp
cmpb
push
imul
add
mov
dec
mov
mov
in
lret
jns
xlat
push
inc
out
pop
sub
sbb
sbb
and
mov
popa
mov
mov
out
jmp
pop
cli
and
or
js
outsb
test
aaa
out
sbb
sysenter
sbb
es
inc
stos
cmp
daa
or
rorb
xchg
push
mov
roll
mov
and
cld
pusha
daa
repnz
pop
jbe
sarl
in
fs
mov
arpl
ds
std
dec
inc
jnp
sbb
pop
mov
in
mov
jno
and
cmp
aad
andb
and
push
xor
mov
and
cmp
mov
jb
out
fstpl
adc
xor
mov
inc
push
push
jg
out
loopne
mov
and
pop
ret
push
mov
lret
jns
fnstsw
adc
insb
sub
call
outsb
mov
loop
sbb
cld
lcall
mov
rcrb
and
flds
fstps
mov
add
mov
mov
ds
sbb
je
jp
shrl
inc
mov
inc
jne
or
xor
add
or
dec
sub
pop
mov
cs
stos
les
sbb
sbb
int
jns
sub
and
cmc
dec
mov
scas
stos
sub
fucomp
add
idivb
shlb
daa
fdiv
icebp
and
ret
lods
mov
scas
cld
es
inc
rorb
lea
pop
rcrb
std
mull
aad
es
cmp
fisubl
sub
inc
dec
and
adc
inc
inc
enter
xor
popa
movsl
jmp
popf
push
and
daa
adcl
test
out
adc
jae
cmp
dec
daa
pop
jmp
push
xchg
add
inc
push
stos
add
pop
addr16
addb
sub
into
daa
in
or
jne
add
arpl
movsl
js
popa
mov
sbbb
fistl
nop
jmp
xchg
xchg
xchg
cmp
inc
es
push
lds
test
inc
xor
xor
decl
inc
adc
fnstcw
adc
fsts
pop
adc
test
stos
testb
push
push
fxch
call
cmp
jb
jb
imul
and
test
inc
push
and
js
add
or
arpl
dec
mov
test
enter
jecxz
mov
push
dec
sub
xchg
test
movsl
and
xchg
outsb
fnsave
outsl
jo
add
xor
mov
fmull
das
cmp
int3
xchg
xchg
loope
popf
dec
push
fs
lret
dec
aaa
xor
xchg
aam
mov
js
cmp
inc
and
jne
or
fnstenv
lock
xchg
adc
adc
dec
outsb
pushf
daa
shlb
adc
sahf
xchg
bnd
pusha
push
arpl
es
nop
in
lds
cltd
jbe
jecxz
jb
in
sbb
test
pop
mov
cmp
mov
inc
cs
test
mov
sub
xchg
inc
xchg
adc
mov
push
stc
push
mov
sti
fcompl
lret
sbb
ret
mov
jns
jg
sahf
fnstsw
mov
xchg
addr16
lds
push
cs
sbb
pushf
or
cmp
push
rolb
cmp
movsb
fsubrl
xchg
mov
outsl
pop
jg
je
ret
dec
lret
into
ljmp
clc
mov
inc
es
jne
add
push
adc
int3
addr16
movsb
add
ja
aas
xchg
dec
loope
gs
or
and
orl
xchg
dec
or
or
or
pop
mov
insl
inc
and
jecxz
stos
or
inc
add
daa
std
shlb
rol
loop
xchg
push
sahf
flds
in
xchg
cwtl
test
fimull
pop
js
lock
jl
cs
into
sub
xlat
cld
ret
or
inc
addb
cld
fcomps
lcall
xchg
mov
pushf
addl
adc
jge
lea
fistps
sarl
clc
clc
jae
or
aaa
push
les
cmp
adc
lahf
sahf
cmp
mov
dec
mov
mov
and
mov
lock
sbb
push
inc
adc
aad
mov
xor
pop
or
ljmp
dec
sub
and
pop
les
jne
sbb
imul
fistps
mov
sub
adc
outsl
xor
movsl
jnp
lock
stc
pop
pop
pop
inc
xchg
mov
jnp
push
cmp
stos
nop
cli
and
repz
pop
inc
imul
or
in
repz
lret
sti
addr16
or
xlat
fdivp
add
xor
dec
add
outsl
in
xchg
pop
sbb
pop
mov
pop
and
test
push
shlb
cmp
and
pop
push
sbb
sbb
rol
mov
sbb
out
add
xor
nop
pop
lcall
adc
sub
push
mov
call
out
xchg
push
pop
jg
aaa
dec
mov
arpl
cmp
aad
les
mov
nop
push
cmp
push
leave
daa
insb
and
shr
and
add
jno
aas
fistps
pop
adc
clc
mov
je
decl
add
into
sbb
jecxz
sub
lock
decb
and
xchg
mov
cmp
mov
mov
push
sub
into
xchg
dec
pop
lock
cmp
mov
in
add
pop
and
mov
cmpl
cmc
lea
inc
out
inc
test
xor
ljmp
adc
push
es
mov
fildl
fwait
or
enter
pop
ss
xchg
test
or
jg
es
lret
imul
push
out
inc
mov
mov
lahf
and
das
pop
cltd
sub
mov
aam
roll
pop
bound
dec
in
test
mov
mov
iret
repz
xorl
inc
daa
inc
push
shll
in
mov
fisubrs
fmuls
mov
cmpsb
shll
inc
aaa
mov
lods
pusha
call
sbb
es
shrl
jmp
cs
push
inc
xchg
inc
add
jb
mov
pop
add
xor
mov
pop
lods
push
test
jne
incb
sbb
sub
jae
mov
mov
dec
pop
cmp
pop
mov
mov
mov
fisubs
std
insb
clc
jae
add
imul
sbbl
xchg
cwtl
xchg
scas
lods
nop
in
push
adc
pop
mov
pushf
mov
out
mov
decl
leave
mov
scas
out
ret
fdivrs
cld
or
in
je
xor
pusha
loopne
bound
pop
dec
jno
fxch
cmp
in
scas
dec
push
xor
push
in
sbb
int
jo
fcoms
inc
lock
les
repnz
and
fwait
aas
lods
add
jge
imul
repz
or
ljmp
into
inc
sahf
icebp
jo
or
sbb
shlb
adc
iret
xor
push
pop
lods
outsl
out
sbb
cld
or
mov
ret
ret
xchg
inc
js
push
mov
les
pop
psubw
and
fmul
add
mov
mov
cmp
loope
pushf
push
add
xchg
gs
xchg
jo
fstps
cmc
cmp
shlb
out
lds
stc
dec
cmpsl
dec
push
fistps
inc
sub
nop
into
mov
fxch
push
in
outsl
test
xor
sahf
sub
add
loopne
test
inc
add
or
push
ja
rclb
addr16
pop
mov
push
pop
insb
mov
sbb
adc
shl
inc
mov
call
data16
jle
pop
scas
out
jecxz
fmuls
add
pop
push
jge
mov
mov
out
jp
xchg
or
inc
repz
pop
lods
arpl
ss
into
xchg
or
or
idivl
out
pop
dec
outsb
jmp
shrl
jbe
addr16
hlt
sub
mov
imul
sbb
adc
and
int
xchg
sub
hlt
imul
mov
addw
jne
fisttpl
lret
cli
adc
xchg
in
fs
xchg
cld
shrb
mov
dec
mov
sbb
rcrb
lds
idivl
sub
test
icebp
mov
rorl
or
into
fwait
leave
lret
cwtl
xor
cmc
inc
ss
mov
out
jl
pushf
movsb
sbb
inc
mov
in
sub
imul
gs
jb
xor
data16
inc
nop
pop
add
or
popa
pop
rcrl
loop
jne
pop
fbstp
push
or
lcall
push
hlt
cmc
xor
fsubrs
inc
ret
mov
jbe
jl
xorl
int3
inc
stos
xor
and
and
push
sbb
addr16
jg
xchg
out
out
rolb
inc
cmp
leave
cltd
pop
ja
xor
jg
int3
pop
loopne
fucomp
in
test
loop
hlt
pop
hlt
mov
lods
out
push
cs
rclb
rol
call
cmpsl
out
mov
lea
lods
test
and
aam
xlat
jg
pop
lea
adc
adc
mov
and
push
jle
decb
xchg
mov
cmc
aaa
into
xorb
xchg
pop
fcoms
sbb
cld
jns
out
jecxz
out
int
mov
pop
orl
out
les
sub
insb
mov
add
push
fwait
pusha
mov
cmp
xor
out
outsl
fisubrs
into
and
and
hlt
adc
cli
and
mov
inc
hlt
js
fnsave
xchg
push
cs
push
int3
inc
cli
cwtl
sub
or
xchg
ljmp
repnz
adc
adc
cmpsb
sub
inc
xchg
jle
test
xlat
and
pop
fldt
xlat
ljmp
xor
lcall
mov
pushf
das
in
and
mov
and
xor
aam
pop
fistpl
xor
pop
push
leave
pop
aam
mov
lods
movsb
push
xchg
and
push
push
movl
sbb
xchg
jp
int
stos
mov
pop
outsb
outsl
xor
insl
ret
test
mov
mov
test
fnstenv
jl
jbe
imul
sbb
aaa
ds
mov
in
test
adc
inc
daa
mov
push
fcoml
popa
je
hlt
mov
shl
bnd
mov
xor
int
and
int
int3
mov
mov
push
popa
aad
inc
sbb
dec
xchg
pop
sti
xchg
dec
add
jecxz
int
dec
test
dec
inc
or
inc
sub
sbb
test
inc
inc
mov
cmp
mov
add
pop
sub
dec
pop
pusha
data16
dec
imul
lods
mov
jnp
gs
cmp
sub
addr16
fwait
rolb
cmpsl
xchg
xchg
cmp
cmp
out
lcall
or
rol
aad
fisttpll
int
mov
in
lds
rcrl
aam
lcall
repz
sahf
add
dec
ja
add
rolb
int
cmpsl
xchg
sub
fcoml
mov
dec
xor
sti
mov
and
mov
fdivrs
inc
cwtl
mov
xor
push
out
jae
mov
jne
sub
and
ljmp
push
ret
aad
push
and
fistl
sbb
into
pop
mov
and
icebp
adc
add
cmc
js
shlb
or
pushf
scas
cwtl
xchg
popf
test
fldl
ret
cmpsb
mov
mov
cmpsb
and
and
sub
or
pusha
pop
adc
lcall
cmpsb
orl
jb
jg
lret
jge
flds
into
inc
fcmovbe
outsb
jle
dec
dec
shrb
dec
xorl
dec
lods
push
adc
gs
sbb
movsl
movsb
cmp
fwait
or
push
xchg
and
or
je
inc
stos
test
repnz
xchg
mov
and
jae
ljmp
dec
xchg
push
outsb
ja
mov
mov
imul
pop
xchg
sub
and
lret
hlt
inc
lretw
fadds
lock
xchg
ret
or
dec
and
inc
mov
mov
das
push
cmp
aam
inc
push
jp
adc
in
in
xor
int3
dec
imull
sbb
adc
sub
aam
sub
lea
mov
sbb
aas
movsl
sahf
push
pushf
sub
sub
or
push
je
jo
addr16
paddq
imul
ret
daa
movsb
inc
filds
xchg
mov
aad
or
in
enter
enter
icebp
inc
orb
js
in
dec
inc
imul
bound
bound
add
mov
bound
repnz
pop
inc
bound
inc
shll
call
insb
mov
insl
jnp
cmp
jecxz
sub
inc
pop
and
insl
imul
nop
and
pop
jb
sbb
cwtl
xlat
aaa
dec
aam
leave
pop
bound
mov
sarl
sub
cld
rcrb
sti
movsb
gs
mov
jmp
aam
loope
insb
cli
xor
mov
cmp
iret
andl
and
cmp
fistpl
sub
push
pusha
ud0
dec
fcoms
or
cltd
or
and
ret
cmpsl
or
aas
stos
aam
cs
aaa
inc
sbb
inc
or
roll
push
mov
sub
or
bound
lret
pop
inc
mov
or
call
sbb
mov
mov
pop
cs
ja
lret
mov
arpl
fidivrs
cmpsb
mov
jmp
push
push
push
gs
aas
sub
rorb
cmp
outsb
stos
or
push
dec
mov
data16
xor
push
xchg
sbb
mov
fcoms
sub
sbb
or
lea
push
push
movsl
push
out
cmc
mov
sub
fidivrs
sub
popf
jl
cs
lea
int
in
xchg
andb
fwait
sub
and
mov
inc
jno
xor
enter
outsl
jge
cmp
cwtl
out
rorb
mov
lock
jno
data16
push
test
or
sub
mov
cmpl
push
mov
xchg
std
pop
aaa
enter
xchg
mov
mov
adc
ret
sbb
frstor
loop
call
jle
loope
ficompl
fcoml
dec
nop
stos
and
adc
or
mov
jnp
adc
int
das
xor
dec
xchg
dec
jle
and
dec
xor
inc
jg
xor
mov
pop
mov
sub
add
shlb
and
adc
dec
cmpsl
push
pop
xchg
ffreep
xchg
sbb
push
pop
dec
cmp
jae
and
pop
push
cmpsl
sbb
into
push
js
add
add
push
add
clc
popa
push
addl
lea
inc
dec
sbb
sub
cmp
fcmovnb
adc
xor
sub
fists
lcall
jns
or
or
pop
fistpll
shrl
jl
mov
sbb
rclb
insb
mov
cli
in
adc
push
xchg
xlat
call
popf
sub
sarl
inc
inc
dec
jbe
fstl
xchg
mov
sarl
push
mov
inc
fldenv
or
cltd
jno
fildll
in
aaa
addr16
and
cmp
call
ja
aam
arpl
mov
xor
mov
gs
and
bound
aad
xor
aad
cmpsl
lcall
jnp
xchg
insl
imul
nop
aad
mov
mov
sbb
jle
lret
fdivrp
mov
or
out
mov
mov
jbe
imul
sbb
mov
mov
into
test
mov
scas
mov
es
push
es
es
iret
and
arpl
pop
imul
fs
jl
push
arpl
sbb
mov
fidivrl
jl
aas
insl
push
mov
cld
mull
pop
mov
cmp
xorw
aad
jae
add
bound
mov
sub
mov
xor
out
pop
mov
pop
fwait
icebp
xlat
and
das
iret
dec
out
and
xchg
cmc
mov
lock
ret
enter
push
push
dec
xor
popf
lods
cltd
and
je
sub
dec
rolb
xchg
pop
jns
dec
or
aad
nop
aam
aaa
mov
sbb
and
and
mov
repz
mov
insb
ret
lret
in
test
cli
add
ret
adc
loope
loopne
addr16
fimull
ja
or
lcall
pop
adc
dec
mov
insl
ljmp
rclb
leave
pop
mov
adc
in
out
lret
aaa
cmpsl
xchg
mov
ljmp
mov
lcall
jne
ja
fidivrl
mov
hlt
add
or
mov
pop
push
loop
pop
popf
sub
mov
out
sub
cli
mov
inc
js
repz
ss
cli
xchg
das
bound
ds
xlat
test
and
pusha
loope
nop
enter
mov
mov
push
aad
pop
xor
fs
popf
pop
jnp
insl
std
dec
sahf
lods
jle
xor
pusha
outsl
xor
push
sahf
insl
cmp
dec
orb
and
xchg
push
xor
jp
adc
lret
or
das
or
pop
dec
sbb
stos
add
sub
adc
xor
loope
push
cmp
out
fstl
pmuludq
and
cld
jp
push
add
mov
xchg
mov
mov
cmpl
test
daa
cmp
stos
idiv
adc
loope
fidivrl
push
fmul
popf
push
xor
inc
mov
jp
push
cwtl
notl
push
xor
mov
inc
or
cmc
push
or
hlt
cmpsb
pushf
dec
movsb
push
and
dec
push
ja
jo
je
dec
jecxz
cld
push
xchg
cmp
fdivrp
xchg
xchg
and
stos
cld
fwait
sbb
mov
pop
out
adc
mov
fnsave
xchg
and
loopne
jle
sbb
pop
push
lret
cmp
lahf
jg
lcall
fwait
add
jbe
sbb
and
in
xor
adc
repnz
dec
pop
subb
or
out
mov
and
jl
xchg
in
add
icebp
in
repz
imulb
jb
pop
adc
cmpl
cwtl
and
jge
jp
lea
sbb
aad
imul
xchg
pop
mov
lret
pop
jp
enter
or
mov
pusha
push
push
push
push
or
pop
sbbb
push
int
cs
aam
pop
dec
movsb
xor
pushf
aad
imul
xchg
mov
outsb
adcb
jbe
es
imul
add
cs
adc
cmp
xor
cltd
jp
loop
mov
cmp
call
lds
ret
inc
int3
xor
jmp
in
imul
aaa
dec
ss
jb,pn
loop
dec
fsubp
addl
pop
pop
imul
sbb
mov
push
cmpsl
adc
sub
pop
out
outsb
ret
add
dec
cmpb
fldlg2
nop
cltd
push
mov
cwtl
and
cmp
dec
jae
sub
pop
inc
adc
shlb
mov
sahf
or
inc
jbe
cwtl
lock
xor
jecxz
jo
xor
sub
sub
jle
push
cmp
arpl
std
mov
mov
loopne
js
adc
in
aam
xchg
mov
scas
inc
jl
enter
push
dec
mov
pushf
jp
cwtl
sarb
testl
pop
mov
dec
sub
rclb
into
ljmp
repz
push
push
push
ja
sub
sbb
insb
arpl
xchg
jle
mov
scas
lds
sub
mov
or
mov
jle
out
pop
imul
aaa
xor
push
inc
outsl
xchg
xor
inc
and
inc
mov
and
pop
cmpsb
inc
pop
mov
inc
or
in
push
shrd
shr
and
xor
inc
mov
dec
push
xor
pop
ljmp
xchg
stos
dec
jnp
test
xor
dec
jae
ret
sahf
scas
cmpsl
test
addb
pop
add
hlt
push
xchg
insl
pop
inc
add
scas
aaa
pop
mov
jo
mov
inc
sbb
movsl
cli
sbb
fadd
aam
mov
loope
inc
mov
xchg
xchg
imul
call
dec
icebp
and
cmpsb
fidivrs
repnz
mov
xor
jo
pop
outsl
adc
rorl
add
outsl
ljmp
popa
and
xor
fldl
scas
pop
cmp
pop
push
sub
and
mov
arpl
mov
pop
sub
dec
dec
dec
adc
hlt
cmc
cmpsb
testb
sub
lock
sbb
test
test
push
int3
fmull
xchg
call
fdivl
push
push
cmp
hlt
test
sbb
xlat
dec
xor
jge
js
adc
mov
jns
movsb
or
mov
test
sti
mov
push
xlat
movsb
in
and
std
mov
nop
sbb
push
push
or
xchg
sahf
or
or
scas
and
fisubs
jg
mov
add
inc
ret
mov
into
jne
sub
pop
enter
sub
adc
in
outsb
insl
adc
and
dec
je
cmp
adc
inc
cmpb
mov
sub
arpl
pop
sti
mov
push
int3
lock
or
loop
mov
cmpb
faddl
ret
mov
sub
sbb
imul
nop
cltd
inc
sub
mov
dec
sub
out
das
loopne
fs
outsl
jp
insl
xor
inc
add
cli
sub
lock
or
aam
inc
adc
and
in
and
pop
add
or
in
iret
and
shll
jb
adc
fxam
ja,pt
out
jbe
adc
mov
ds
inc
push
cmp
fs
imulb
addr16
xor
dec
push
lock
hlt
js
pushf
gs
loope
arpl
adc
cmp
je
leave
nop
cld
xor
data16
push
jb
sbb
cmp
sub
mov
mov
pusha
repz
cmp
in
xchg
cmp
outsl
push
int
sub
dec
jmp
jle
ret
dec
idivl
jo
adc
andl
sbb
mov
sahf
aad
jle
adc
lock
pop
or
inc
xlat
imul
dec
mov
enter
es
jmp
pushf
pop
out
jne
out
arpl
sbb
das
mov
ret
jmp
popf
pop
sub
push
loopne
sub
cmpsb
adcl
fadd
and
push
scas
int3
mov
jle
cmpb
ja
xlat
adcb
pusha
ljmp
mov
sti
negl
inc
mov
pop
mov
mov
mov
mov
inc
stos
jmp
pop
pushf
test
enter
add
sbb
scas
jecxz
pusha
push
aas
xor
imul
mov
and
lds
lods
sbb
iret
mov
push
data16
call
imul
icebp
int3
sub
inc
pop
push
sti
jecxz
std
arpl
int3
movsl
push
aas
fcmovbe
jmp
lcall
inc
mov
lret
or
dec
xchg
bswap
in
jmp
loope
outsl
inc
scas
into
movsb
adc
pushf
es
mov
rclb
imul
icebp
scas
dec
or
jge
jns
xor
mov
and
fidivs
inc
push
jb
pop
mov
cltd
pop
addr16
hlt
fildl
insb
loopne
ss
xchg
jnp
popf
testb
adc
sub
iret
xor
pop
fdivrl
inc
cmp
cltd
xchg
ds
aaa
repnz
lret
sub
mov
pop
movsl
mov
inc
aam
cli
pop
imul
cmp
or
fs
roll
test
or
and
push
data16
ret
and
clc
daa
stc
imul
int3
imul
xchg
push
xor
in
dec
je
xlat
mov
mov
sub
flds
ficomps
es
fldcw
cmp
jecxz
icebp
out
xchg
sub
daa
dec
jae
in
repz
out
call
inc
mov
sub
adc
aaa
idivl
push
hlt
add
cltd
arpl
je
mov
jae
cli
pop
inc
shlb
faddp
fwait
sbb
inc
xor
cmp
outsb
lods
cmpsl
dec
fmull
mov
cmp
mov
lock
lock
leave
imull
fs
insl
hlt
fstpt
mov
pop
dec
insb
repnz
fisttps
imul
call
lret
adc
fiadds
sarb
jecxz
jnp
adc
xchg
icebp
clc
sbb
outsl
mov
scas
mov
pop
add
inc
test
pop
lods
mov
dec
mov
sub
add
sti
pop
add
aas
inc
insl
push
push
add
hlt
adc
pop
lret
ror
push
cltd
lahf
mov
mov
ja
push
rcrb
jl
mov
outsb
pop
and
out
mov
push
sub
fs
pop
jo
addr16
sbb
popf
mov
stos
mov
push
adc
or
add
lahf
outsb
cmc
mov
movb
dec
les
or
clc
or
adc
jns
lods
clc
mov
jno
jmp
or
ret
cltd
xor
adc
rolw
cmp
sbb
iret
lret
stos
mov
push
mov
mov
mov
mov
and
movl
xchg
mov
mov
aaa
mov
fidivs
loopne
data16
xorb
push
je
push
pop
arpl
mov
dec
xchg
sbb
sbb
mov
xor
push
inc
cld
dec
cltd
sahf
cmp
ds
jecxz
xchg
xchg
sarb
clc
addr16
popf
push
dec
sbb
xor
push
and
lahf
adc
inc
repz
mov
hlt
push
mov
sahf
jmp
cmp
mov
frstor
dec
lods
mov
leave
repnz
popa
mov
inc
popf
aam
xor
sub
loope
mov
push
rcll
sub
dec
mov
mov
inc
rcll
lret
mov
dec
call
fwait
jne
push
jnp
jge
lds
icebp
sub
push
sti
push
scas
push
cvtdq2ps
xchg
popf
lock
sbb
cmp
push
and
pop
clc
out
clc
jne
xor
mov
das
std
jp
mov
test
xchg
xor
adc
test
xor
addr16
iret
aam
loope
mov
cmp
sbb
std
jl
push
inc
mov
xor
xor
test
dec
dec
sahf
xor
jae
leave
in
int
xchg
and
into
sbb
push
into
lock
iret
cld
xor
aam
negb
dec
sbb
scas
cmpsb
mov
jbe
pop
leave
iret
ds
xor
inc
mov
leave
daa
xor
or
lret
fimull
mov
in
and
push
push
in
imul
sub
stos
push
cmova
dec
dec
mov
push
mov
xchg
jo
divl
jge
in
xchg
jmp
dec
jge
jns
add
fadd
sbb
pop
ds
cmc
lods
adc
xor
iret
pop
ret
sbb
mov
jp
jbe
mov
call
cmp
xchg
mov
pop
mov
xlat
aaa
mov
add
add
imulb
call
push
sti
xor
xchg
test
mov
clc
push
mov
sbb
adc
out
inc
mov
repnz
xchg
cli
mov
xor
push
je
inc
leave
outsb
xchg
pop
mov
adc
fdivr
test
popf
rorl
pop
mov
lcall
fildll
mov
call
push
dec
jns
rclb
mov
sahf
push
xorb
les
mov
sbb
mov
shrl
fwait
ljmp
jns
jle
pushf
lods
cmp
dec
insb
in
jmp
imul
in
add
push
enter
scas
shrl
out
mov
mov
push
or
test
pop
mov
shlb
pop
dec
mov
mov
decl
test
dec
cmp
fs
and
loop
or
add
in
loopne
ja
inc
and
pop
inc
xchg
cmp
xor
rdmsr
adc
sub
mov
jne
insb
jno
ret
loop
jae
mov
je
inc
sbb
enter
sub
movhps
dec
sbb
arpl
jb
pusha
push
pop
xor
xor
push
add
cmp
ret
lock
fs
pop
in
xchg
add
pop
inc
ljmp
insl
addr16
mov
jnp
outsb
add
sti
aaa
xchg
pop
shl
call
imul
pop
mov
ret
xchg
out
inc
pcmpgtd
cwtl
xor
daa
sbb
sub
sub
in
mov
nop
pop
inc
push
dec
sub
test
and
sbb
sub
sbb
popf
mov
imul
add
or
push
stos
pusha
gs
mov
mov
loope
and
xor
dec
in
lds
mov
adc
sbb
fstps
enter
lods
mov
add
enter
or
addl
push
jb
faddl
out
cltd
data16
pop
cltd
sub
xchg
in
popa
and
xchg
mov
repnz
aaa
or
push
push
sahf
les
mov
sub
add
test
jmp
push
pushf
sub
insl
cmp
out
ret
push
aam
adcl
adcl
mov
mov
fsubrs
cmp
mov
push
lds
xchg
and
xor
xchg
imul
push
sub
mov
mov
in
iret
loope
popa
sarb
add
scas
data16
mov
dec
push
dec
mov
mov
add
inc
in
cs
sbb
ljmp
cmp
inc
push
fildll
adc
add
dec
frstor
push
adc
ds
inc
fbld
sbb
js
les
inc
or
xor
dec
scas
adc
bound
leave
xchg
aam
push
xchg
flds
xchg
xchg
xor
push
in
mov
mov
push
dec
xchg
jns
add
inc
xlat
daa
push
movsb
add
jmp
imul
mov
aam
sti
jmp
push
jnp
or
cmp
or
or
or
in
sub
mov
mov
fidivrl
cli
in
adc
mov
fisttps
daa
movsl
int
push
popf
cmc
inc
push
cltd
in
and
or
insb
add
test
nop
fdivl
ret
nop
aaa
dec
mov
outsl
xor
mov
mov
outsl
pop
jo
ficompl
cwtl
iret
pop
addb
mov
fsts
add
inc
inc
loop
mov
mov
ja
test
cld
ds
xor
leave
mov
scas
lahf
bound
lods
dec
in
and
mov
hlt
xchg
loope
pop
inc
mov
ljmp
daa
das
jno
xor
add
push
cmp
mov
lahf
ja
xchg
vpcomq
lea
push
lods
sbb
inc
loop
fidivl
sbb
insb
lret
sub
idiv
in
or
repnz
sub
lods
xor
jno
cmp
les
in
das
fdivrl
push
repz
lcall
fdivrl
pop
xor
xor
stos
test
xchg
sarl
jp
jmp
jg
pop
jne
mov
adc
adcl
inc
jp
xor
jo
aad
bound
sarb
and
imul
jle
add
loope
push
cmp
insb
mov
fs
outsl
jns
cmp
dec
es
xlat
jmp
shrl
adc
adc
adc
mov
insb
data16
roll
movsb
jne
aaa
add
mov
dec
cmp
arpl
rclb
cmp
pop
fidivrl
jbe
inc
fsubl
adc
xor
mov
icebp
jbe
pop
movq
mov
mov
fdivs
testl
les
push
jb
xchg
xor
subb
jmp
loope
xchg
dec
jnp
xor
cmp
data16
call
push
xlat
imul
mov
inc
mov
xchg
stos
cmpsl
sti
insb
pop
adc
push
in
nop
inc
jb
xchg
mov
add
notb
cwtl
xchg
cmpl
or
dec
xor
cmp
adc
das
dec
packssdw
pop
nop
cmp
test
addr16
or
out
xor
mov
mov
lcall
movsl
pusha
fcom
in
scas
ljmp
sbb
push
mov
rcrb
push
outsl
shlb
mov
movsl
mov
pop
or
add
ds
jbe
xchg
loop
adc
dec
cmp
or
les
mov
mov
ret
cli
dec
mov
dec
and
aas
push
inc
test
lds
in
add
pushf
sahf
inc
or
sub
fwait
sbb
dec
add
pop
out
mov
lods
mov
mov
out
int3
sar
sbb
dec
fwait
pop
insb
pop
dec
sub
xor
fbld
push
mov
in
mov
mov
dec
lret
adc
pop
lds
stos
movsl
sbb
xor
pop
inc
mov
sub
add
ret
pop
aas
cmc
hlt
xor
je
cmp
cmp
mov
jns
mov
sbb
mov
jecxz
rcr
inc
lret
pop
inc
push
test
add
int3
addr16
ljmp
div
jb
hlt
mov
or
push
xorl
jne
jns
sbb
pop
mov
sbb
sbb
pusha
icebp
pop
xor
add
jne
pop
shrb
mov
mov
push
jnp
push
out
adc
pop
repz
and
test
int3
sti
xor
pop
inc
movd
orb
pop
push
mov
jo
push
loop
pop
insb
sbb
das
pop
push
dec
iret
sub
rcrl
aam
push
call
fsts
push
popa
or
fucomp
xor
xchg
mov
insb
out
movsb
and
xchg
fimull
sbbl
inc
sahf
xor
cwtl
jne
jp
lret
push
aad
pop
sub
jle
testb
pop
in
dec
jp
shll
shlb
jg
bound
adc
cld
loopne
stos
imull
in
fs
pop
ret
adc
pushf
sub
jne
movsl
sbb
cmp
not
xor
xchg
lret
inc
inc
jg
into
ja
lret
ror
jb
loop
jmp
movsb
cmpsl
jno
xor
mov
shll
adc
xor
js
insl
sbb
xchg
adc
xchg
mov
jl
push
insl
push
adc
mov
cwtl
add
or
xchg
andl
mov
or
inc
jno
fs
or
pushf
aad
ffree
stos
mov
push
push
aad
inc
inc
dec
sub
sub
and
jns
jecxz
xlat
cs
in
push
fisubrs
ret
sub
mov
jnp
lea
fadd
dec
push
dec
clc
scas
inc
lret
movsb
push
adc
insl
stos
pop
out
cmp
js
cltd
arpl
pop
out
mov
fstl
xor
jns
mov
sti
fwait
ret
adc
xor
insb
add
mov
int
jmp
int3
cmpl
mov
mov
jp
or
fstps
scas
cmpsl
push
pusha
clc
es
push
jae
sar
arpl
es
xorl
pop
mov
xor
cmp
cltd
fcmovbe
test
mov
sahf
inc
cltd
mov
push
pop
cmc
add
andl
je
cwtl
lea
dec
pop
mov
pop
bound
jl
mov
nop
or
stc
jo
inc
dec
icebp
loop
lds
push
daa
pop
dec
enter
jb
mov
push
mov
dec
enter
jbe
add
pop
sub
pop
dec
cmpl
sub
adc
adc
inc
dec
in
mov
test
insl
loop
shr
bound
or
xchg
les
xor
faddl
icebp
and
mov
fwait
out
jno
xor
dec
mov
mov
loop
jge
outsl
pusha
lock
int
shrb
sahf
xor
mov
add
pop
lods
shrb
push
mov
jno
in
push
pop
aad
cmp
push
mov
leave
sbb
ja
mov
mov
lahf
test
das
xor
int3
in
filds
sahf
dec
aaa
mov
push
andb
sbb
adc
fwait
jmp
inc
add
lret
ljmp
pop
push
and
lods
xor
xchg
int3
jo
sbb
cmp
sub
sub
enter
mov
daa
mov
dec
arpl
mov
sub
das
lds
iret
fimuls
out
sub
pop
std
cmp
jg
xor
cmp
ljmp
sbb
lods
xchg
xlat
mov
jne
movsl
or
test
imul
cmp
cmpsb
xor
cmpsb
ret
mov
adcl
lea
or
push
inc
push
addl
add
mov
bound
cs
jle
jg
push
sbb
arpl
inc
loop
pop
popa
mov
or
cmp
jmp
mov
stos
dec
stos
cmp
mov
xor
leave
fld
in
dec
pusha
dec
mov
sub
test
sub
push
adcb
inc
cmc
cmp
pop
enter
cwtl
sbb
dec
popf
mov
dec
and
ja
mov
in
cmp
mov
imul
adc
out
mov
fildll
pusha
in
fiaddl
ljmp
push
fisubrl
mov
mov
mov
test
jo
adc
and
lahf
push
xor
rorb
fcmovu
mov
leave
pop
or
dec
lahf
sub
sub
jbe
inc
dec
mov
in
sub
cmp
sbb
cmpsl
add
scas
adc
push
mov
push
notb
cmp
jmp
paddsw
ss
inc
push
into
jo
imul
mov
mov
imul
movsb
dec
mov
sub
xor
pop
mov
test
cmpsl
adc
lods
aas
push
jbe
fs
sub
pop
pop
pop
fstpt
clc
repz
mov
out
jo
push
out
and
add
jl
jl
test
mov
iret
mov
out
adc
aaa
add
lahf
pop
mov
push
js
mov
mov
jb
inc
xor
popl
mov
cmp
daa
cmp
xor
mov
aaa
dec
fbstp
mov
cmp
cmp
mov
imul
loope
inc
sub
mov
sbb
mov
scas
call
stc
aad
cmpsl
jo
dec
out
sbb
out
movsb
or
scas
and
clc
in
mov
cli
push
mov
and
dec
push
mov
cmp
dec
sub
fnstcw
nop
pop
out
sbb
jae
cmp
js
rclb
lods
xchg
test
xchg
test
push
imul
pop
mov
loope
bound
sub
mov
mov
loope
jne
adc
aas
popl
mov
cmpsb
addr16
movl
loop
mov
lock
add
jno
orl
xchg
pop
add
push
cmp
xchg
add
xchg
add
mov
loop
mov
mov
test
testb
pop
mov
push
adc
jb
outsl
mov
outsb
inc
xchg
dec
mov
jecxz
xchg
push
fucompp
outsl
js
addr16
icebp
fldcw
aad
ror
cli
mov
movsb
adc
mov
cld
and
iret
dec
test
mov
dec
inc
out
fsub
xor
push
jle
push
pop
aad
pop
sbb
cs
in
mov
orb
sbb
jmp
stc
push
es
xor
xor
adc
mov
clc
sti
es
mov
lds
je
insl
mov
stos
out
daa
cltd
jns
add
adc
pushf
sbb
and
jb
mov
sub
imul
shlb
jns
loop
rcr
dec
and
pmaxsw
fdiv
pop
or
inc
mov
scas
sub
jbe
into
xor
in
dec
push
hlt
xor
mov
push
bound
loope
fidivs
data16
lcall
daa
dec
push
mull
hlt
fsubl
jb
loope
je
in
shrl
inc
mov
arpl
adc
mov
adc
clc
clc
cmp
mov
fcoms
out
push
dec
addr16
or
mov
adc
testb
aas
out
scas
xor
adc
loop
fnstsw
or
mov
test
xchg
jb
icebp
fimuls
adc
daa
imul
data16
fwait
cmp
shll
push
jle
in
cmp
test
sbb
adc
scas
jmp
test
ja
mov
mov
mov
pop
xchg
movsl
scas
sub
jmp
sbb
push
pop
stc
adc
jno
in
jge
sbb
ds
test
das
inc
jb
add
inc
jne
mov
nop
and
dec
je
out
cld
ljmp
xchg
cmp
repz
push
inc
xor
dec
xor
xchg
test
mov
nop
jge
movsb
popa
inc
pop
pop
stc
xchg
sub
fmul
test
movsl
hlt
or
push
inc
add
popa
xchg
mov
div
cld
fistpll
push
pop
mov
jmp
sbb
in
jno
push
mull
push
sub
pop
mov
jle
and
dec
pop
pop
and
arpl
mov
cmp
test
jo
fstl
or
scas
scas
mov
pop
nop
cmc
repz
add
test
xchg
and
xchg
inc
pop
test
inc
jno
shrl
in
stos
lods
sub
ds
push
cld
jle
ds
mov
xlat
aas
mov
lea
ror
sub
clc
ja
jo
adc
lea
mov
pusha
lret
adc
or
xchg
shrl
jmp
sahf
pop
test
mov
bound
mov
pop
xchg
int3
jecxz
mov
jge
mov
inc
inc
enter
mov
jne
pop
mov
scas
sbb
mov
xchg
sub
maxps
aaa
jmp
imul
icebp
das
pop
jnp
andl
mov
in
in
jle
insb
xor
xchg
popa
jp
loopne
inc
push
mov
sub
lea
add
jge
mov
lock
pusha
hlt
push
jmp
fimull
shrb
pop
sahf
cmp
sahf
or
in
pop
sbb
test
imulb
inc
or
pop
cmpsb
or
loopne
popa
or
inc
iret
lahf
dec
and
mov
pop
sub
inc
or
xor
das
add
call
ret
adc
test
std
pop
xchg
xchg
mov
push
arpl
mov
imul
dec
test
adcl
adc
sub
dec
divl
je
aad
xchg
mov
fcmovu
shrb
lahf
jo
jae
mov
mov
cmpsl
pushf
cmp
fisubrl
xor
nop
jnp
mov
jg
jl
in
jnp
outsb
cmp
les
rorl
mov
sbb
xchg
out
xor
inc
sub
in
insb
dec
mov
mov
dec
movsb
add
popa
mov
jb
aaa
in
mov
and
lods
ljmp
scas
cmc
pop
mov
xor
std
sbb
pusha
in
push
and
and
call
mov
inc
sbb
icebp
xchg
mov
xchg
push
lods
outsl
lret
pop
add
or
sub
mov
push
add
cmpsb
cmp
mov
shrl
icebp
pushf
or
add
add
lods
jne
push
sbb
fs
stc
outsb
mov
or
sub
lods
lock
dec
stc
scas
mov
jb
cmpsl
shl
sub
lret
cmp
out
push
xor
inc
pop
loopne
jecxz
mov
cli
xor
adc
lret
lret
cmp
das
stos
add
andl
sbb
popf
add
lea
sbb
jo
push
mov
mov
mov
push
fists
xchg
adcl
sbb
dec
outsl
ja
mov
in
lods
xchg
pop
mov
pop
nop
xchg
out
sarb
nop
sahf
mov
adcb
pop
scas
int
sbb
xor
xchg
or
mov
or
push
in
xor
xchg
clc
out
ret
fidivl
iret
push
aad
sub
bound
std
push
popa
mov
xchg
ret
pop
fisttpll
inc
out
mov
data16
arpl
or
ret
mov
pop
out
enter
pop
jns
sub
or
insb
test
push
sub
mov
lods
mov
mov
push
cmp
xlat
aam
push
xchg
mov
jno
sub
mov
rcrl
cs
out
out
out
mov
mov
mov
and
pop
add
push
out
cmp
xor
inc
lds
daa
and
xchg
jne
inc
or
xor
jb
cmp
je,pt
xor
das
cmc
pop
enter
pop
sbb
out
sub
pop
cwtl
mov
xlat
pop
fsts
je
stos
adc
add
mov
mov
mov
pushf
addr16
stos
or
xor
lret
push
push
push
push
push
test
inc
inc
jge
or
and
sbb
in
adc
imul
ja
pop
inc
stos
ss
int3
cmp
inc
pusha
xor
gs
cmpsb
push
push
sub
sub
fdivl
pop
mov
daa
hlt
jo
jecxz
ret
mov
xor
rolb
rolb
outsb
call
jno
scas
lds
push
fstps
mov
lahf
xchg
push
xor
rcr
stos
les
leave
into
jne
xchg
es
sti
std
fistps
test
sub
sub
cmpsl
call
inc
daa
mov
jb
rcl
leave
cmp
sub
xchg
ds
mov
pop
jp
mov
pusha
clc
sbb
or
pop
or
adc
sbb
mov
aad
sub
adc
insb
sbb
andl
or
push
mov
mov
es
rol
cmp
jo
and
push
out
inc
mov
jnp
fs
mov
sub
scas
pop
fldt
xorb
pop
cli
or
and
pop
push
andl
dec
mov
pop
stc
ljmp
mov
es
mov
rorb
sbb
xor
sub
out
ljmp
pop
decb
push
daa
cmp
inc
fwait
test
ret
stos
pop
xchg
jmp
and
pop
lea
outsl
xorb
outsb
push
sbb
xchg
mov
dec
push
push
mov
jge
data16
mov
adc
mov
je
xchg
mov
iret
mov
mov
mov
data16
test
and
in
push
sti
int3
out
cwtl
mov
jmp
jns
shrl
mov
les
nop
cmpsl
test
mov
push
mov
cmp
jne
pushf
xor
mov
popf
les
aad
out
mov
repnz
fiadds
jmp
add
jmp
lret
rcll
pop
cmp
loop
mov
cmp
fidivrs
das
add
jmp
fistl
rclb
je
adc
daa
or
sbb
shlb
dec
jmp
sub
pop
inc
sub
jp
jl
jbe
xchg
adc
mov
cli
pop
pop
xchg
scas
jne
addr16
jnp
push
push
idivb
fdivrs
or
mov
mov
das
out
mov
add
mov
jnp
push
mov
filds
in
rcrl
psubusb
or
push
hlt
repnz
inc
test
fstps
adc
jmp
bound
jecxz
xchg
int3
movsl
popa
jnp
call
cmc
in
jns
jae
sti
ja
popf
xchg
jmp
jae
arpl
cmp
add
cld
dec
pop
movsb
mov
and
mov
ds
cmc
fucom
test
daa
sub
in
jge
add
out
cltd
into
jmp
push
es
mov
mov
stos
ficoms
js
inc
lcall
cmpsl
mov
push
mov
rorb
inc
ja
mov
push
push
imul
add
xchg
add
mov
pop
mov
cmp
cmp
aaa
and
leave
fimull
push
enter
cli
mov
pop
fadds
in
sbb
inc
xchg
cmp
dec
jmp
inc
xor
dec
push
ss
jnp
inc
js
mov
or
movsb
fistl
stos
js
loop
fwait
jb
cli
pop
pop
dec
mov
pop
jg
xchg
sbbb
jb
or
mov
data16
dec
push
int3
pop
adc
mov
inc
or
cmp
add
mov
ret
loop
dec
mov
cltd
ja
arpl
out
das
cmp
insl
adc
idivl
nop
std
cmpsl
dec
lea
dec
mov
nop
pop
daa
loope
mov
adc
mov
mov
lods
mov
fldln2
push
roll
xchg
mov
ret
pop
mov
mov
insb
mov
cmp
std
add
sbb
mov
pop
xlat
or
pop
push
sub
pop
ljmp
ja
imull
and
shl
pop
cmp
movsb
add
ret
fisubrs
and
adc
ffree
jno
pop
mov
jg
test
xor
mov
popf
xor
mov
outsb
mov
pop
jp
xchg
and
jp
push
lea
stos
and
inc
fmuls
das
mov
inc
cli
jmp
cmp
in
cs
aam
push
ljmp
jmp
rorb
cwtl
push
sarl
and
pop
aas
or
mov
das
sub
inc
cmp
or
notl
out
inc
jno
or
cltd
mov
dec
adc
mov
ficomps
arpl
jle
imul
sub
icebp
shlb
mov
test
ja
adc
push
dec
sub
dec
sub
sub
shrd
sub
data16
fnstenv
push
popf
push
pop
gs
aaa
ss
idivl
mov
enter
pop
push
mov
loop
addb
jnp
xor
cmpsl
inc
lcall
cmp
scas
xor
or
push
lea
mov
mov
lret
fxch
cmp
jns
mov
subl
ret
xchg
dec
je
enter
mov
sbb
enter
jge
jp
jg
and
arpl
sbb
add
pusha
sub
dec
sbb
push
jb
test
add
xor
or
repz
add
mov
insb
lods
cli
insb
fimull
stc
pop
dec
mov
stos
stos
inc
mov
jns
sub
outsl
and
shll
inc
adc
js
int
add
adc
adc
or
fdivs
int3
dec
in
jae
test
into
push
iret
fmuls
stos
test
and
dec
int
jge
test
cmp
and
test
sbb
ja
scas
jg
and
int
fistl
and
jmp
mov
movl
adc
or
out
ljmp
add
mov
ret
ds
lret
shll
ret
pop
sbb
out
nop
and
ds
call
fstpt
pushf
mov
outsb
pop
jae
jecxz
mov
mov
xchg
cmc
pop
and
and
sbb
les
jae
and
mov
cld
fnstsw
push
or
and
orb
mov
ja
dec
xor
xchg
popf
sbb
insb
test
cld
dec
cmpsb
xchg
decl
adc
mov
rcr
testl
sbb
icebp
ja
aad
enter
or
adcb
rclb
jb
push
mov
cmp
add
add
stos
lds
adc
xor
jl
je
fcompl
push
ds
das
dec
stc
in
nop
lret
adc
rcl
mov
mov
xor
xor
push
jne
mov
out
mov
sub
fs
mov
rcrl
outsb
cli
mov
mov
mov
xor
out
sbb
lods
cmp
cmp
xor
idiv
add
mov
xor
mov
rcr
lea
hlt
outsl
mov
mov
or
lds
dec
out
and
mov
arpl
sub
xchg
data16
pushf
in
test
push
cli
push
dec
and
ss
hlt
pop
scas
adc
cmp
jecxz
jnp
sbb
mov
adc
rcr
cmp
sbb
arpl
push
inc
inc
rsm
out
add
xchg
cli
jb
sbb
sub
mov
jns
push
cmpsb
dec
mov
jbe
movsl
stos
dec
xchg
inc
or
and
sbb
sbb
shll
int
movsl
mov
je
in
dec
mov
scas
or
dec
out
loope
or
or
pusha
leave
out
rcrb
inc
dec
pop
imul
or
mov
fstps
pop
mov
add
inc
sbb
mov
dec
fs
stc
stc
rcr
push
fbld
leave
hlt
adc
push
mov
stos
mov
mov
push
loope
and
insb
dec
push
fwait
jmp
sahf
mov
push
js
jno
iret
lock
clc
nop
xchg
mov
push
daa
cmp
mov
jle
imul
ljmp
outsb
adc
sub
cld
imul
or
scas
mov
pop
push
push
mov
mov
lock
push
sbb
xor
ret
lcall
dec
fisubrs
and
xor
pop
lcall
lret
push
and
divb
sahf
jnp
push
cwtl
out
fildll
jnp
adc
pop
fs
std
xchg
or
dec
xchg
or
adc
nop
neg
call
xor
sti
loope
repnz
dec
mov
sub
and
ret
loop
nop
dec
mov
ficoms
std
push
rcll
sbb
les
adc
das
movsl
xor
lds
loop
sub
in
mov
repnz
add
push
ljmp
fsubrs
mov
adc
add
hlt
xchg
pop
add
cwtl
aaa
scas
movsl
imul
aas
pop
mov
leave
inc
mov
das
jmp
sub
repz
cmp
movsb
idivb
add
int3
add
in
xchg
dec
lea
aaa
mov
clc
push
inc
in
adc
leave
and
ficoms
in
dec
xor
mov
xor
or
push
mov
leave
mov
jb
push
mov
or
lret
sub
stos
add
mov
pause
fdiv
insb
cwtl
ljmp
lahf
jae
into
mov
or
and
test
add
movsl
add
lcall
add
imul
mov
and
sub
orb
pop
fiaddl
shl
decl
sbb
pop
int
xchg
jo
stc
adc
ret
scas
and
mov
jbe
in
adc
add
add
dec
pop
xchg
cs
add
push
imul
mov
fisubrl
stos
jb
lea
mov
or
jb
adc
mov
out
xchg
adc
imul
stos
sbb
push
lds
stos
pop
dec
jge
lock
and
popf
xor
mov
mov
lea
mov
mov
inc
push
jbe
jmp
sbb
mov
sbb
cmpsb
mov
cmp
mov
sub
mov
ficoms
adc
and
pop
xor
sbb
push
mov
data16
inc
btc
sbb
cwtl
xchg
dec
xor
insb
fdivp
leave
loop
cmpsl
jo
pop
xchg
xor
pop
popf
int
mov
enter
cmp
xor
cwtl
arpl
ret
lahf
inc
scas
fisttps
sarb
add
fstp
cmp
cmpsl
lret
into
adc
jl
add
push
je
loop
and
mov
pop
in
les
imulb
adc
fadd
div
iret
push
fistl
sbb
sub
xchg
mov
cld
pop
xorl
ss
dec
xchg
int
cmp
sar
leave
imul
cmp
pusha
icebp
mov
outsb
fcompl
pusha
jno
sbb
add
xor
push
xor
lahf
or
xor
orb
pop
xor
bound
sbb
lock
add
mov
js
xor
pushf
in
push
mov
fcompl
jle
jl
ljmp
dec
adc
jecxz
jae
iret
pushl
out
ss
mov
sbb
lret
lock
mov
pop
pop
or
dec
inc
sub
stc
mov
mov
clc
ljmp
push
dec
push
mov
ret
mulb
mov
push
cmp
aam
push
sub
js
cmp
mov
mov
add
imul
fidivl
sub
das
enter
lods
out
adc
mov
dec
xchg
pop
aam
adc
fsts
mov
int3
dec
dec
inc
xchg
enter
adc
test
dec
out
mov
fldt
xchg
pop
mov
faddl
mov
or
pop
js
scas
push
andb
lret
movsl
in
inc
addr16
jle
and
xor
dec
mov
lock
std
test
jle
xorl
xor
mov
fidivs
push
jae
xlat
jg
cmp
push
psubw
add
sbb
jnp
push
and
add
dec
mov
mov
aas
mov
fsubrs
sub
pop
or
shlb
and
loope
rorb
stos
or
pusha
and
pop
mov
cld
sbb
sbb
fsubrs
sbb
leave
scas
sub
int3
les
push
out
xchg
adc
dec
fsts
lret
jne
inc
arpl
pop
or
jg
sti
pusha
stos
push
fstpt
cld
ret
add
outsb
or
cmp
divl
mov
addb
lods
xchg
popf
mov
jmp
xor
shlb
sbb
push
push
mov
dec
add
js
jg
cli
xchg
dec
mov
xchg
fsubrp
mov
cmp
xchg
pop
or
stc
outsw
jne
fcomi
xchg
fistpl
imul
xchg
add
push
and
arpl
das
sub
into
sbb
push
rcll
out
push
fmul
push
loope
xor
aas
int
outsb
aam
mov
cmp
fimuls
xor
sbb
push
sub
mov
sbb
fdivr
ds
jl
adc
sub
jns
or
imulb
mov
cli
and
sub
cmp
call
mov
inc
or
mov
sub
xor
loop
adc
pusha
push
mov
xor
jle
mov
sbb
out
fdivl
jo
xor
add
jo
lcall
sbb
mov
jmp
fcompl
push
mov
fdiv
or
cmp
mov
fisttpl
imull
jge
cli
pop
sub
outsl
iret
add
in
xor
jb
lcall
dec
das
xchg
pushf
cmp
sub
xor
je
mov
out
push
lods
cmpb
repnz
adc
cmp
nop
pop
jge
imul
sub
insb
ret
jae
loop
lret
mov
scas
pop
mov
in
mov
cs
mov
sub
aad
push
je
jecxz
lods
vlddqu
in
add
pop
icebp
pop
loop
mov
push
sbb
pop
jbe
sub
and
xor
cmpsb
es
orl
jae
rclb
pop
ret
ror
xchg
sub
sub
stos
mov
jbe
mov
push
or
cli
pop
mov
pop
test
ds
lods
out
pop
cmp
jmp
inc
inc
lret
push
arpl
orb
jns
mull
lods
roll
push
addl
aas
clc
mov
push
movsl
or
call
cmp
lcall
or
mov
daa
into
push
push
cmc
mulb
test
in
jle
test
ds
push
cwtl
cmpsb
jge
xchg
aaa
adc
mov
or
stos
mov
inc
push
xor
les
mov
out
push
xor
push
add
jp
int
lea
das
orl
test
jne
push
xor
inc
imul
out
outsb
test
mov
inc
sub
inc
jns
and
call
sub
dec
add
push
dec
inc
aas
cmp
sub
mov
sub
cmc
xchg
and
inc
popa
outsb
cmp
popa
movsb
or
cmpsl
adcb
imul
jae
jp
roll
pop
sub
jecxz
push
sti
fisttpll
mov
hlt
cmp
daa
jmp
popf
cmpsl
mov
xor
push
push
xchg
jmp
pop
icebp
mov
and
sbb
jecxz
test
pop
push
push
int
test
push
jnp
adc
pushl
movsb
push
ja
js
testl
jbe
mov
or
movaps
std
shrb
shlb
fistl
data16
insl
push
mov
dec
or
mov
push
push
add
mov
fidivl
adc
xor
daa
les
lcall
jg
sbb
push
scas
test
mov
mov
stc
in
add
sarl
cmp
and
cmp
sbb
xchg
das
xor
inc
lret
jge
ror
dec
sub
shrb
sbb
idiv
mov
sti
aaa
rclb
scas
imul
sbb
adc
iret
or
dec
dec
sub
pop
clc
push
scas
mov
leave
andl
mov
ret
aad
cwtl
scas
and
xlat
sub
shll
xor
dec
dec
adc
add
mov
push
icebp
adc
rcrl
adc
sub
loopne
les
iret
insb
inc
mov
cwtl
mov
test
push
cmp
cltd
inc
jge
xchg
ror
cmp
jb
xchg
ljmp
xchg
mov
dec
sbb
cmpsb
mov
cmpsb
mov
enter
js
test
xchg
dec
clc
xlat
inc
sbb
adc
repz
or
mov
in
and
jae
sbb
pop
out
ds
gs
xchg
adc
shll
cmp
enter
imul
jle
dec
cmp
jmp
push
xchg
or
mov
or
xor
xor
rcll
aaa
fstl
lods
ret
or
rcl
rorb
rorl
or
sub
cmc
adc
repz
insl
aad
fdivs
push
imul
jne
arpl
mov
bound
dec
call
lods
stos
in
sahf
nop
out
in
inc
pop
sbb
in
adcb
ret
pop
arpl
dec
or
movsl
imul
stos
je
cwtl
roll
hlt
out
push
push
ret
sub
or
mov
scas
adc
ret
stos
call
fwait
and
in
xor
lret
mov
fiaddl
clc
mov
cltd
add
add
and
mov
jae
cmpsb
mov
int
inc
ficoml
pop
xor
mov
in
push
cmp
jle
shrb
mov
stc
jecxz
je
repz
cwtl
out
and
add
cmpsl
adc
mov
in
jnp
mov
ret
xchg
sahf
mov
ds
pop
push
ror
nop
sbb
mov
xchg
adc
repnz
icebp
dec
cmp
shll
sbb
sbb
insb
sti
loopne
lret
ret
push
dec
jne
push
or
gs
lahf
mov
out
pop
lods
ficompl
dec
cmp
fsubl
inc
jle
xor
xor
leave
push
push
shlb
xchg
mov
mov
pop
pop
shll
xor
push
adc
aaa
add
sbb
pushf
test
loopne
aad
xor
mov
xor
loope
stos
adc
sahf
dec
jb
push
xor
lods
and
stc
cltd
imul
mov
mov
loop
jecxz
sub
es
aaa
mov
xor
add
cmpsb
inc
or
nop
ficomps
and
xor
jb
lcall
fstpt
loop
in
inc
push
xchg
mov
imul
inc
les
fxch
sbb
add
data16
push
scas
adc
es
dec
push
out
leave
jbe
test
xchg
loop
fs
addr16
pop
mov
fsts
pop
sub
inc
sbb
sti
shrb
shr
mov
out
cmp
pop
fisttpll
fldt
lret
mov
test
sub
fwait
mov
pop
scas
add
xchg
dec
aas
sub
sarl
dec
sub
cs
push
lret
outsl
insb
pusha
add
rorb
test
mov
addr16
mov
int
lock
rorb
dec
add
sbb
mov
test
and
test
inc
mov
cmp
sbbb
add
test
jp
cld
aam
fldenv
dec
sub
sbb
fimull
insb
push
add
adc
inc
sbb
mov
aaa
push
mov
loope
shrb
pop
push
inc
cli
fdivrs
nop
push
jno
daa
push
movsl
or
rcrb
fndisi(8087
fcos
add
pop
imul
inc
rorl
stc
jp
jge
arpl
lock
idiv
repnz
lods
std
jne
outsb
cli
aaa
push
dec
inc
adc
cs
in
xchg
idivb
mov
and
mov
aaa
stos
cmpsb
in
scas
inc
push
test
push
sbb
movsl
adc
aam
je
into
imul
out
dec
inc
dec
scas
jbe
lret
push
out
stos
stc
int
xchg
dec
cmpsl
je
mov
lods
insb
mov
test
and
shll
mov
mov
lods
jge
mov
out
rcrl
in
fisubrs
dec
mov
adc
gs
fmull
mov
movsb
outsb
popf
pop
or
ds
push
daa
mov
jle
aam
pop
bsf
mov
jmp
incb
in
repnz
push
pop
popa
repnz
sahf
dec
mov
inc
popf
dec
popa
inc
aaa
push
test
dec
xchg
adc
xor
enter
jp
cltd
pusha
sbb
scas
in
push
mov
ja
xchg
out
pop
pop
and
or
hlt
fcomps
adc
sub
insb
cmp
fbstp
add
xchg
jnp
jne
push
lock
fs
xchg
pop
mov
push
mov
shlb
outsb
pushf
ds
jl
jmp
xchg
xchg
lret
inc
and
sub
aas
jbe
cmpsl
pop
in
sub
out
push
cmp
push
or
jp
nop
test
testb
pop
hlt
gs
stos
pop
or
sti
jecxz
cmp
imul
or
jmp
cmp
lods
or
repz
xchg
add
jno
xor
jge
inc
daa
test
jnp
mov
inc
cltd
fs
sbb
sbb
sub
ja
xor
jp
data16
aas
cmpsl
cmp
stc
jbe
enter
jl
adc
mov
out
jge
in
out
xchg
pop
adc
jmp
mov
addr16
neg
pop
xlat
jo
pop
in
add
adc
fsubl
mov
shll
nop
adc
jbe
push
stc
sbb
pop
sub
mov
ja
push
pop
sbb
push
jle
cli
jp
pop
movsl
mov
push
and
mov
mov
sub
mov
ja
fs
popa
pop
mov
pop
sar
push
mov
divb
mov
and
paddusb
push
inc
repnz
mov
ds
bound
pop
fdivs
pop
sbb
es
dec
push
dec
jp
lcall
mov
or
add
mov
leave
push
or
arpl
jp
dec
inc
adc
push
stos
cmovae
jnp
sahf
arpl
lret
ljmp
shll
push
dec
xor
pop
xlat
test
outsb
cmp
js
add
subb
adc
mov
or
fistpl
scas
ljmp
fs
stos
sbb
cld
outsb
ret
adc
shlb
fidivrs
and
fiaddl
loopne
jne
inc
and
insl
out
mov
js
mov
adc
or
xchg
and
fadd
jge
push
xor
bound
jno
or
hlt
incb
sbb
shrb
dec
sbb
xchg
cmp
ja
pop
out
adcb
mov
dec
imul
test
repnz
scas
ret
mov
jo
out
sbb
dec
xchg
pop
insl
cmpsb
sub
or
loope
aad
push
sub
jnp
xchg
pusha
scas
push
shll
pop
sub
inc
iret
addb
adc
iret
mov
aad
pop
aas
and
add
add
jns
insl
or
test
add
cwtl
shl
loope
sub
aaa
lret
movhps
dec
addb
sbb
xor
in
pushf
or
jl
test
push
or
addb
adc
rolb
clc
fadds
cmc
xlat
mov
out
fwait
test
loopne
xor
mov
cmp
xchg
popf
sbb
int3
dec
pushf
pop
leave
sarb
stc
cli
leave
loopne
pop
testl
fstl
clc
rcll
movsb
flds
jle,pt
mov
inc
out
xchg
mov
loop
test
orl
bound
int
jbe
divl
push
push
gs
adc
rcl
loop
cmp
aad
scas
pushf
fdivrp
popa
mov
jp
popf
dec
push
pop
dec
pop
inc
fsts
fs
lcall
push
jecxz
ds
mov
fucomi
pop
scas
jno
aas
sub
test
lahf
mov
push
ljmp
lret
gs
inc
test
pop
mov
leave
pop
inc
out
arpl
push
int
stos
xchg
cs
dec
mov
paddusw
movsl
inc
clc
xor
insl
filds
js
jmp
rcll
out
stos
jno
sti
dec
fildll
mov
cli
dec
push
jmp
inc
pop
sub
dec
mov
test
shlb
or
sub
mov
mov
mov
subb
lods
inc
gs
xor
or
push
jp
cld
ret
movsl
cmp
cmp
and
stc
push
pushl
jae
push
aas
lods
and
dec
inc
js
dec
enter
jb
dec
mov
jno
adc
sahf
aaa
rcrl
mov
hlt
jge
je
adc
in
xchg
sbb
nop
lock
mov
jecxz
jo
test
jnp
sbbl
jae
decb
jns
add
shlb
hlt
xchg
aaa
push
xchg
xchg
xchg
sub
std
arpl
push
pop
lret
daa
mov
mov
pop
inc
jge
pop
sub
inc
sbb
lods
jae
add
loope
add
jbe
test
lds
ds
jbe
cltd
jo
jge
enter
sahf
pop
pop
repnz
popa
or
or
push
ja
loopne
pusha
adc
div
ljmp
repnz
jg
cltd
jns
push
int3
and
push
or
cmp
jmp
mov
ret
cmp
ljmp
insl
cs
adc
ja
in
add
push
cmpsl
fwait
or
mov
cmp
out
data16
jnp
mov
xlat
xor
push
ja
mov
mov
jg
adcb
jae
xlat
loope
out
in
xchg
mov
jecxz
sbb
std
out
mov
mov
mov
lock
cmp
lcall
jmp
icebp
call
pop
addr16
dec
test
je
mov
lock
jo
push
xor
es
lock
sub
push
jae
loop
or
sbb
or
inc
in
sbb
jo
fstps
out
adc
adc
pop
push
jns
pop
lcall
add
aaa
lods
add
jge
es
fidivrl
pop
jno
sub
jns
in
aad
cld
lods
je
mov
ds
cmp
push
dec
movsl
jo
jp
adc
mov
push
dec
ret
mov
or
lcall
lods
adcl
push
lcall
sti
aas
jns
sub
fs
add
jge
iret
pop
mov
setp
outsl
and
inc
pushf
les
movsb
popf
push
pop
lret
add
inc
inc
outsl
btsl
mov
inc
mov
in
adc
mov
mov
sbb
mov
inc
aam
lock
mov
jp
mov
jge
das
dec
add
pop
out
mov
pop
jno
adc
lock
repnz
ds
dec
in
pop
xchg
inc
add
rcrl
es
inc
mov
fs
scas
sub
jae
sub
sbb
sub
fcmovb
inc
xlat
ja
scas
adc
hlt
adc
pop
mov
push
test
and
add
add
and
lods
sub
lret
enter
add
shll
cwtl
jg
cmpsl
divb
sbb
loopne
mov
aam
mov
sub
out
sbb
loop
xor
jae
pop
fst
lahf
stc
mov
psllq
inc
cmp
mov
mov
or
daa
sbb
push
xchg
and
pop
mov
aas
popa
fnsave
cmp
in
lea
dec
jbe
mov
mov
cltd
fcoms
mov
cwtl
push
mov
mov
popa
dec
loop
push
ss
addb
pop
nop
sub
mov
add
movswl
xlat
into
aaa
mov
adc
mov
dec
and
sarl
mov
faddl
mov
lahf
mov
inc
jp
mov
jge
push
fs
jle
jmp
arpl
stos
je
test
or
stos
dec
aad
scas
mov
lcall
cmpsl
mov
scas
xor
gs
mov
stos
int3
and
pop
mov
scas
out
mov
ja
jp
xchg
fadds
and
inc
mov
fwait
mov
test
xchg
dec
fdivr
or
sub
out
and
pop
cmp
in
aaa
push
jno
je
imul
aas
in
xchg
popf
imul
sahf
jge
or
stos
pop
jns
subl
gs
notl
jb
pop
cmpsb
xor
mov
aad
testb
je
test
sarb
jne
push
movsb
shrl
test
insl
fdivs
lret
sbb
lcall
xchg
dec
out
int3
cltd
xor
and
and
sarb
mov
insb
lret
out
add
adc
inc
mov
or
or
clc
push
inc
enter
rorb
je
jge
stos
jns
leave
and
or
or
pop
xchg
jns
jno
ret
lret
dec
arpl
test
xor
xorb
sub
xchg
sub
testb
add
mov
push
aas
pop
mov
push
out
mov
mov
sti
cs
mov
jmp
mov
and
fistpl
fwait
jae
mov
shrl
lcall
sbb
stos
and
sahf
and
jecxz
mov
jne
lock
movsl
xor
push
mov
xchg
in
dec
push
ss
add
jl
lods
daa
into
add
daa
mov
pop
scas
lock
test
mov
sbb
mov
ret
inc
pcmpgtw
jb
mov
insb
xchg
push
popf
cmp
in
ja
pop
xchg
inc
xchg
ret
sbb
add
fsubrs
lret
nop
sar
movlps
shll
mov
jo
push
sar
and
mov
push
mov
test
aas
jo
imul
data16
pop
mov
jb
mov
push
sbb
mov
adc
aad
pop
push
jae
in
jecxz
stos
jp
push
mov
in
mov
cli
xchg
push
pop
popa
sbb
mov
stos
jmp
mov
cs
scas
sbb
pushf
in
adc
mov
mov
and
in
push
cmp
jns
sti
adc
pop
and
mov
repz
in
dec
ffreep
jle
mov
fbld
enter
mov
cli
data16
adc
in
stos
cmp
movsl
notl
frstor
test
jb
out
sbbb
adc
pop
out
pop
adc
mov
xchg
push
jbe
cli
dec
cmc
arpl
movsb
cltd
test
jp
or
or
mov
enter
adc
push
cmp
or
sub
mov
test
push
fwait
push
mov
scas
sbb
and
jo
negl
pop
mov
cwtl
loope
les
cwtl
sbb
or
cld
mov
std
shlb
cltd
test
dec
iret
es
xor
sarb
xor
xchg
rorb
mov
ret
sbb
stos
pop
xor
inc
dec
iret
fadds
jae
mov
dec
cmc
xor
mov
adc
pop
push
loop
adc
mov
mov
in
sbb
inc
or
rcrl
ss
repnz
lock
xchg
jb
outsb
push
push
test
cmp
sub
jmp
out
loopne
jns
pop
pop
in
cmp
adc
xor
pop
jecxz
push
pusha
repz
jle
ret
movsl
adc
les
xor
adc
ret
fdivrl
sahf
fimuls
xchg
pop
pop
and
xchg
mov
pushl
pushf
ljmp
sub
jecxz
int3
popa
cmp
xchg
sub
push
pushf
mov
sub
adc
arpl
call
iret
mov
cmp
dec
jle
in
stos
daa
fstpl
mov
inc
pushf
pop
dec
or
push
fstl
fnstsw
jno
add
fstps
sbb
jle
jb
pop
sbb
rcrl
dec
and
push
mov
dec
xor
arpl
ret
pop
ja
sub
pop
lcall
mov
dec
lret
popa
ret
add
pop
push
negb
dec
add
adc
jne
mov
sbb
mov
stos
cmc
jmp
lret
out
add
xchg
dec
jge
pop
out
sar
xchg
and
and
sub
movb
test
mov
cld
in
dec
sbb
sub
dec
stos
insl
call
lret
aas
mov
aaa
mov
hlt
mov
div
sub
and
outsl
add
mov
push
aam
jg
mov
push
int3
rcrl
lahf
sbb
xchg
das
int3
jl
or
add
inc
imulb
mov
cmpsw
jbe
sbb
lahf
xorb
pop
or
mov
int
pop
jmp
or
push
imul
cmp
fcmovnu
in
jmp
xchg
adc
adc
fwait
xchg
aaa
cmpb
sarl
lret
adc
cmpl
jne
xor
ds
neg
outsb
cmp
in
add
mov
rorl
loope
orl
mov
inc
mov
scas
mov
jnp
jle
ljmp
popa
int3
sbb
push
mov
and
or
pop
cmpsb
push
mov
std
mov
enter
sbb
sbb
cmp
ficoms
push
lock
mov
fidivrl
icebp
pop
cmc
sbb
lock
hlt
subb
mov
out
arpl
out
andl
loope
xor
mov
mov
mov
fists
jmp
iret
inc
pop
sahf
or
pop
cs
dec
sbb
mov
popw
lock
jl
in
orl
push
or
adc
sbb
and
jmp
xor
sbb
mov
and
add
gs
pop
iret
fcomps
int
jno
adc
scas
jle
int3
jl
inc
insl
xchg
cltd
xorb
int
xchg
cmpl
mov
cmpsb
movsb
stos
add
mov
fistps
fdivr
aad
adc
fisttpl
aad
or
ja
dec
jb
jmp
and
ret
cmp
ret
cli
push
jne
rolb
mov
cli
gs
dec
lock
add
popa
icebp
pop
xor
sarb
in
jl
sub
les
cmp
rclb
mov
cmp
std
push
test
cwtl
adcl
xor
gs
jecxz
sbb
call
loop
inc
and
mov
sar
pusha
fisttps
or
into
inc
pop
in
inc
xchg
push
push
mov
ds
lea
sub
icebp
pop
mov
inc
test
pop
jns
jns
pop
pop
add
adc
pop
dec
xorb
pop
mov
repnz
and
mov
into
test
sub
or
and
out
jo
mov
imul
push
xchg
mov
mov
push
sahf
push
xor
add
lret
repnz
pop
pop
imul
mov
cmpsl
mov
outsb
jle
fisttpll
push
je
ror
cmp
std
cltd
orl
sbb
loopne
mov
lcall
ljmp
jb
leave
aad
pop
xchg
pop
sub
xor
sahf
and
pop
mov
lock
or
jl
push
dec
lret
add
sub
and
aam
cmp
int
and
test
in
jg
cmpsl
aam
pmulhw
and
sub
cmpsb
gs
push
or
mov
jecxz
movsb
mov
orps
sub
adc
mov
and
push
pop
or
shll
pushf
sbb
pusha
out
ret
dec
dec
jns
pop
pop
push
sti
xor
sbb
test
pop
or
leave
add
outsb
insb
inc
push
cmpsl
movsb
mov
leave
out
mov
mov
aaa
dec
inc
push
cmp
pop
or
pop
pop
pop
test
insb
test
insb
or
movb
inc
js
mov
dec
scas
es
xor
out
jge
cmp
fistps
ret
dec
aaa
jae
or
push
cmc
in
sahf
leave
sbb
sahf
js
or
inc
sub
xor
mov
inc
out
mov
out
dec
out
ds
pop
mov
cltd
imul
and
mov
xor
push
dec
mov
jge
cld
dec
lret
adc
mov
fwait
xchg
jge
dec
aam
mov
dec
aad
and
mov
sahf
aaa
push
xchg
int
call
arpl
lahf
lock
shr
aas
test
cs
imul
xchg
sbb
arpl
outsl
or
push
and
ss
mov
in
push
xor
jmp
popf
mov
jo
dec
fwait
sbb
pusha
mov
shlb
fwait
lock
out
jmp
sti
push
fisubrl
addr16
inc
mov
jmp
mov
dec
mov
push
adc
mov
jae
xchg
lcall
jecxz
cmp
repz
pop
fs
mov
push
mov
add
adc
push
aas
out
sbb
addr16
cwtl
leave
inc
sub
cmpsl
je
push
jo
mov
jno
xor
cmp
sbb
xchg
cmp
nop
push
xchg
mov
mov
sti
add
je
xor
adc
lds
dec
sbb
sub
scas
fistpl
mov
faddl
xchg
fdivrs
pop
fwait
xchg
lds
bound
xor
mov
daa
andl
outsb
cltd
push
fwait
sub
aaa
add
or
shl
pop
cld
mov
jbe
ds
ds
lds
ljmp
adc
and
test
in
aaa
in
cmpsl
cmpsl
mov
xchg
cli
mov
fldt
xor
push
mov
sbb
lahf
cmp
adc
sub
xor
gs
add
or
stos
jo
repz
adc
jmp
mov
sbb
add
jnp
dec
imul
adc
rorl
movsl
fsubrs
loop
aam
mov
popf
cmp
push
jnp
pop
lret
dec
jne
pop
shlb
in
jne
push
rcr
mov
int
insl
fistpll
rorb
movl
or
jnp
push
out
adc
mov
add
push
dec
cmp
bound
xor
lea
xor
les
lcall
leave
mov
sti
imul
adc
loope
in
fs
mov
lahf
je
pop
xchg
add
xor
dec
je
xor
jno
or
stc
cwtl
in
or
add
daa
movsb
rcll
fs
fmuls
aad
mov
xor
in
lahf
out
nop
jb
imul
jp
je
hlt
hlt
shlb
addl
add
and
shlb
dec
adc
add
ds
cmp
xchg
mov
bound
popa
mov
xchg
push
add
sub
dec
pop
andb
dec
leave
outsl
clc
jae
sub
mov
xchg
cmpsl
pop
pop
push
push
jg
addr16
xorl
fsubl
push
sbb
sub
add
gs
jb
fs
push
lret
aam
xchg
mov
call
pop
lea
fs
ja
inc
clc
leave
icebp
in
ret
jle
dec
ja
adc
insb
inc
jg
inc
gs
nop
hlt
push
push
sub
push
lods
stos
mov
and
cltd
xchg
bound
mov
xlat
pop
pusha
xorl
inc
push
aas
sub
and
fisubrs
cmp
jp
outsl
cmpsl
pushl
pop
ret
inc
cmp
jo
loopne
scas
dec
lret
inc
mov
inc
cmc
sti
adc
gs
mov
sar
jnp
mov
dec
bound
daa
push
pop
lret
or
xor
clc
cltd
push
nop
jno
movl
mov
arpl
or
loope
xor
dec
fcoml
jp
shlb
jne
add
gs
pop
push
fildl
mov
push
sub
insl
mov
sub
fistl
push
cmp
int
push
sbb
jb
mov
call
sbb
into
imull
popa
mov
cmc
push
jg
movb
sbb
int
adc
je
int3
push
xor
xor
shlb
jo
sub
clc
and
fistps
jmp
mov
movsb
adc
cmpsb
cli
mov
imul
lea
sbb
rorb
dec
outsl
inc
push
shrb
pop
stc
out
and
clc
enter
test
out
cmc
ja
jge
xlat
pop
mov
push
cmc
es
xor
aaa
dec
xor
andb
jp
es
push
mov
lock
pushf
ds
mov
sbb
mov
inc
nop
mov
adc
fsubr
out
mov
adc
adc
add
mov
bound
sub
mov
adc
sub
roll
xchg
mov
test
push
mov
adc
add
pop
sti
pop
inc
push
jg
adcb
rorb
imul
or
xchg
xor
push
push
sub
push
std
ja
in
addr16
mov
popf
in
mov
ja,pt
loopne
xor
aad
movsl
or
fidivrl
shll
cmp
sub
adc
in
inc
in
lea
aam
or
mov
push
lock
push
jnp
xchg
pop
cmc
inc
mov
es
hlt
testl
jnp,pt
scas
jb
gs
cmp
sub
movsb
xchg
aam
imul
ret
fildl
jmp
jns
dec
inc
sbb
loop
mov
xlat
in
pusha
js
jecxz
testb
f2xm1
xorl
pop
sahf
iret
mov
jp
in
sub
or
jo
insl
and
movsb
int3
lods
inc
dec
and
lea
xchg
xchg
pop
xor
push
mov
pop
call
adc
mov
pop
int
mov
sbb
or
mov
fwait
cwtl
jo
xchg
pop
xor
push
leave
rorb
loop
pop
ret
es
add
in
aad
repnz
pop
in
jp
into
loop
rorb
sub
sbb
xor
iret
jecxz
mov
repnz
mov
xlat
inc
fwait
pop
call
xor
adc
add
inc
push
inc
jmp
fs
rorb
xchg
adc
xor
dec
push
cwtl
enter
scas
mov
push
lods
pushf
dec
out
adc
in
les
movsb
in
pushf
xor
mov
int3
cmp
sbbl
test
sarb
cmpsb
or
fidivrs
pop
add
nop
data16
mov
xor
imul
sub
dec
cwtl
data16
lods
fnstenv
lahf
imul
sbb
dec
cmp
sbb
js
pop
scas
mov
jbe
jmp
aam
movl
andb
jae
sbb
pop
addb
xor
mov
mov
or
divl
jo
outsb
mov
stc
xchg
adc
sti
insl
mov
push
cmpsl
mov
adc
dec
fwait
pop
dec
inc
mov
mov
add
sahf
or
je
repnz
popa
scas
and
pusha
jecxz
lcall
stos
mov
mov
inc
lock
dec
ljmp
mov
xchg
rcrb
ret
pop
push
test
ja
dec
add
out
shlb
and
fidivl
xor
mov
push
jns
mov
add
jbe
xchg
mov
ljmp
outsb
int3
out
leave
dec
xchg
sbb
jns
leave
scas
data16
and
test
ret
or
mov
aad
aaa
jmp
arpl
lret
push
cmp
xor
xchg
aaa
dec
cmc
cmp
mov
adc
cld
popa
test
xor
iret
popf
xchg
push
pop
sub
jecxz
scas
insl
inc
mov
cmc
sbb
inc
and
lret
fisubl
push
es
add
cmp
mov
jg
adc
rclb
test
andb
aam
jno
mov
leave
daa
pusha
push
jae
push
loop
push
aad
out
std
adc
sbb
out
and
test
test
repz
jge
fcompl
aas
adc
push
jmp
mov
sub
pop
push
cltd
mov
lods
jge
mov
and
ljmp
inc
push
mov
into
clc
xchg
out
adc
pushf
cmp
dec
xor
xchg
inc
cmc
insb
jle
xchg
adc
mov
dec
pop
cmp
pop
sti
aas
xchg
add
rorl
jb
mov
pop
cmpsl
cltd
adc
xorb
pop
imul
in
imul
movsl
push
jecxz
loope
leave
and
les
pusha
into
add
mov
mov
cmp
jl
clc
push
mov
mov
into
xor
insb
test
xchg
cltd
in
jo
push
cs
call
lods
shlb
nop
inc
xchg
push
push
test
mov
adc
mov
repnz
gs
cld
out
sub
adc
jl
scas
mov
mov
adc
call
and
jbe
xor
jle
dec
or
shlb
jb
outsl
ljmp
cwtl
stos
mov
dec
mov
loopne
mov
pop
ja
adc
or
pushf
adc
push
aam
fs
mov
shrb
sub
mov
cmp
push
fwait
push
sub
or
cli
divb
arpl
sbb
lahf
fldt
add
lret
sub
inc
lret
scas
push
cwtl
aad
out
outsl
aas
and
xchg
add
add
daa
sub
stos
adc
inc
flds
iret
testb
mov
cmp
dec
adc
fprem1
lcall
mov
cmp
push
cmpsb
dec
sbb
adc
cld
insb
mov
mull
pop
cmp
xor
faddl
dec
cmp
push
pop
cld
jmp
push
dec
xrelease
xchg
jg
mov
ljmp
into
xchg
lret
in
orl
jle
cmp
aad
dec
mov
jge
in
dec
adc
int
popa
movsb
xor
jl
push
mov
and
and
mov
add
cmpsl
in
inc
sub
pop
cld
sbb
rorb
add
or
dec
jnp
movsl
mov
cmc
cmp
jg
inc
inc
jb
inc
adc
xchg
loope
je
fs
sbb
adc
cs
sbb
filds
mov
out
fwait
xchg
inc
jl
insl
fldcw
push
iret
lret
lds
sub
aas
repnz
mov
push
push
ret
push
xchg
adc
aaa
inc
stos
ds
daa
pop
and
repz
repnz
push
jg
mov
mov
or
xor
pushf
imul
pop
imul
xor
in
test
sbb
popf
mov
jg
daa
ret
mov
sub
and
pop
jae
pop
in
fildll
push
or
sub
cmp
mull
sbb
stos
nop
xor
iret
mov
orb
and
repz
jbe
into
call
test
inc
inc
stc
xchg
aas
mov
sahf
mov
lahf
clc
xchg
push
loop
sbbl
insb
push
push
fstpt
test
jg
mov
jo
imul
mov
sti
cmp
cli
mov
ret
adc
add
aad
add
je
adc
mov
mov
loopne
ss
stc
sbb
or
xchg
pusha
movb
mov
dec
jle
jmp
pop
push
mov
cmovnp
push
sub
inc
neg
fld
push
cmp
adc
push
add
fnsave
jl
pop
aas
aam
ss
mov
and
sub
mov
fsqrt
lahf
adc
or
xor
std
jecxz
fistl
xlat
xchg
lret
hlt
lods
push
int3
mov
aam
inc
and
in
dec
mov
sub
ret
jb
int3
sti
and
mov
loop
mov
sub
imul
and
push
aam
nop
cmp
mov
xchg
test
mov
cmp
pushf
xchg
out
mov
xor
sub
jge
mov
sti
cltd
icebp
pop
mov
push
jno
ds
lods
dec
insb
stos
adc
cmp
cmpsl
jbe
adc
stc
data16
or
push
jl
jmp
je
mov
call
lock
push
mov
xor
xor
jbe
pop
push
mull
xor
es
sarl
pushf
xchg
inc
loop
stos
or
pop
inc
repnz
insb
push
lcall
inc
outsb
jae
mov
sub
push
mov
mov
add
push
mov
stos
ds
lcall
or
push
shrl
push
mov
mov
pop
or
sub
mov
fs
adc
ds
or
fcompl
lods
push
push
jg
lret
and
jg
ret
fiaddl
int3
sbb
xchg
pop
jnp,pn
test
or
pop
scas
enter
sti
out
fbld
mov
mov
divb
xchg
xchg
xor
hlt
scas
nop
subb
aaa
cmp
push
fmull
and
adc
inc
cmp
pop
mov
mov
jbe
jge
enter
mov
lahf
lods
pop
adc
out
sub
mov
jae
jbe
je
fldenv
std
mov
test
cmp
xor
adc
fisubrl
je
ja
cmp
stos
pop
inc
jg
lcall
hlt
lods
or
scas
aad
loopne
or
sbb
lcall
pushf
mov
scas
add
shll
jne
pop
cmp
fdivrs
xchg
iret
cmp
jmp
movl
mov
adc
and
roll
jb
jns
xor
dec
or
inc
mov
adc
ljmp
xchg
lret
cmp
cmp
jle
or
sbb
pop
in
rolb
jo
fisubrl
cmp
sub
lods
jne
inc
lcall
xlat
add
cmp
imul
jmp
cmp
jae
adc
stos
imul
mov
mov
cwtl
shlb
jmp
dec
xor
sub
and
jle
cmc
lods
sti
jnp
outsb
std
jo
dec
loopne
push
inc
in
and
dec
ror
dec
lahf
or
leave
hlt
out
mov
frstor
sbb
movsb
faddl
or
scas
and
cmovns
add
sbb
ds
pop
dec
in
negb
sbb
std
jge
mov
arpl
mov
daa
sarl
stos
inc
mov
push
bswap
sbb
outsb
inc
push
push
out
lcall
adc
pop
mov
jmp
aam
adc
xor
mov
mov
or
mov
and
pop
orb
xlat
repnz
insl
mov
lods
add
dec
in
cs
dec
xchg
scas
cwtl
and
and
jmp
jmp
sub
and
xchg
enter
cmp
hlt
jg
cwtl
lock
jmp
icebp
jle
cmp
jg
push
loopne
clc
or
sbb
pushf
cli
add
or
push
push
sbb
ja
loope
cmp
rorl
popa
inc
jp
adc
sub
outsb
mov
ret
sahf
add
mov
ljmp
mov
jmp
xchg
push
dec
add
pop
inc
pop
adc
adc
jge
movb
xor
mov
push
jge
mov
jne
sub
push
mov
mov
mov
adc
test
bound
push
xchg
or
mov
xlat
xchg
jl
xlat
daa
pop
mov
out
into
lahf
sbb
mov
fisttpl
imul
in
fstl
lock
fwait
add
sbb
fstps
cmp
in
sahf
and
ja
adc
or
sahf
int
adc
push
inc
adc
mov
clc
inc
mov
and
mov
and
jle
mov
sbbl
adc
jae
cmp
dec
mov
sub
and
pop
dec
jl
lds
dec
cltd
enter
xchg
mov
sub
xlat
imul
sub
pop
mov
cvttps2pi
push
add
mov
int
dec
push
xchg
mov
clc
cs
sub
mov
mov
pushf
lods
push
addb
sub
out
mov
mov
fcmove
adc
mov
xor
test
sbb
cmp
xchg
test
xchg
leave
out
test
sub
sub
adc
test
test
dec
adcl
push
sub
sub
mov
push
mov
rcl
or
clc
ljmp
sub
lcall
pop
dec
push
pop
cli
stc
mov
and
lret
fidivrl
daa
out
sub
mov
push
mov
enter
adc
cmpsb
out
adc
icebp
hlt
stos
mov
je
pushf
sub
xchg
add
sti
insb
push
orl
cmp
icebp
movsl
ljmp
dec
sub
adc
jl
out
out
sub
and
idivb
pop
lret
jns
push
dec
clc
and
mov
lea
cmpsb
in
xor
stos
imul
push
aaa
imul
sub
inc
dec
add
sbb
adc
jbe
inc
das
adc
dec
dec
imul
shll
outsb
repnz
dec
mov
inc
jg
dec
xchg
mov
outsl
adc
mov
repnz
sbb
inc
fmull
and
mov
adc
or
xchg
mov
movsb
in
jmp
adc
stos
adc
test
mov
fs
es
xor
shlb
int3
push
rorl
scas
jmp
shld
rol
jnp
outsb
ds
pop
mov
outsl
mov
scas
mov
mov
and
repz
mov
ret
lcall
jg
mov
out
pop
add
inc
dec
into
hlt
jb
daa
jle
push
mov
sbb
outsl
xor
rclb
cltd
cmp
xor
jmp
pop
lret
cmp
stos
ja
outsl
in
movsl
mov
insb
push
push
or
mov
mov
inc
jno
pop
and
xlat
mov
lock
mov
test
dec
daa
daa
icebp
sub
adc
pop
fdivl
sub
jb
cmpsb
push
test
test
leave
cmpsl
aam
testl
mov
ret
and
jb
pop
aam
in
jno
addb
push
lods
sbb
push
mov
inc
lods
ss
jbe
push
add
mulb
sub
or
lds
add
fistps
cs
and
pop
cmp
rclb
inc
jnp
lds
add
mov
jo
mov
imul
xor
inc
dec
mov
rcll
sub
and
mov
or
pop
das
push
cmp
sub
fcompl
xor
movsb
and
mov
push
mov
sarb
jg
push
cmp
lock
xchg
out
adc
movsl
cld
push
daa
fstl
sarl
loop
xor
inc
jb
xor
mov
jnp
iret
push
sbb
inc
shl
cmp
xor
pusha
std
shl
xor
lcall
adc
das
dec
xor
mov
mov
push
pop
mov
or
mov
push
push
and
or
inc
das
sbb
shrl
jl
sub
push
out
dec
push
fcompl
ret
xlat
into
ficomps
mov
ret
mov
xchg
add
cld
into
and
sar
sub
adc
pop
fdivrs
loopne
stos
fisubrs
out
xor
sar
inc
arpl
mov
xlat
inc
repnz
push
and
jle
int
loopne
mov
mov
mov
push
popa
loop
sub
jns
cmp
es
or
sub
sbb
add
lcall
ss
mov
dec
lds
movl
push
subl
inc
es
pop
scas
jbe
inc
popf
inc
jbe
arpl
test
dec
cltd
pop
pop
inc
addl
cmc
push
loop
ret
pop
jne
dec
cmp
clc
push
pop
xor
std
jl
fsubrl
sub
push
push
fcmovb
jp
fiaddl
andl
cmp
push
sub
por
jge
push
hlt
push
push
lcall
or
movsl
les
out
sarb
sub
repnz
das
clc
ror
icebp
mov
sub
xor
mov
jge,pt
mov
imul
ja
pop
mov
dec
pop
push
xchg
xchg
jbe
loope
scas
and
orb
jo
fabs
test
dec
or
lods
mov
dec
add
adc
notl
fs
adc
xchg
or
cli
adc
shll
cs
popl
shrl
cmp
mov
inc
xchg
out
adc
clc
xlat
pop
movsl
test
arpl
push
stos
fimuls
inc
mov
pop
lods
dec
cs
mov
jge
jecxz
jno
call
add
xchg
fcmovu
loop
xor
dec
sub
outsl
mov
xchg
or
js
stc
fs
pop
pusha
call
inc
cmpsb
imul
mov
and
pop
cmp
arpl
aad
clc
cmp
mov
inc
stos
lock
shlb
stos
jge
xchg
xor
inc
xor
jmp
and
repz
mov
add
cmp
stos
add
mov
pop
or
test
dec
lea
mov
jmp
nop
sbb
lock
jl
jbe
dec
movsl
pop
dec
add
push
sub
jb
mov
xor
ljmp
adc
fwait
and
push
push
scas
repz
add
in
mov
jbe
out
lods
repz
movsb
loopne
mov
push
cmpsl
inc
xor
addr16
icebp
loope
into
test
fdiv
lahf
adcb
pop
jnp
mov
push
out
outsl
jns
or
pusha
mov
addl
scas
stos
dec
mov
aad
inc
pop
in
loopne
and
adc
mov
xorl
lds
testl
mov
clc
js
les
cmp
mov
jae
test
in
cmc
lods
sub
loope
and
cmp
js
orl
in
xchg
mov
xchg
mov
or
repnz
jecxz
jb
mov
xchg
repnz
add
popa
shll
or
pop
mov
xchg
mov
ds
push
mov
or
push
jg
inc
movsl
jle
rclb
xchg
inc
mov
inc
and
jb
lahf
repnz
or
js
outsl
loope
outsb
repnz
pop
out
fmuls
jmp
jnp
pop
jns
push
movsl
xchg
outsb
es
jo
sbb
sub
cmpsb
and
iret
stos
xlat
xchg
dec
ds
int3
mov
adc
shrb
cmp
and
int3
sub
sub
push
sti
mov
adc
subb
ret
je
aam
aas
pop
mov
and
dec
mov
dec
mov
jne
cmp
inc
pop
shl
jne
cli
pushf
mov
mov
popa
or
addr16
daa
mov
mov
xor
call
negb
fiadds
in
mov
and
push
insl
loopne
lahf
inc
xchg
shlb
mov
lods
movsb
sub
jnp
sbb
jmp
cwtl
jnp
outsb
ds
inc
dec
jns
addr16
xor
cmpsb
decb
xchg
mov
xchg
push
add
sbb
jno
sub
mov
andl
dec
mov
mov
push
sub
into
jb
pop
xchg
mov
stos
test
lcall
std
hlt
outsl
inc
sub
pushf
sbb
xor
stc
fisubrl
insb
xchg
jb
jge
push
inc
sbb
fcompl
aad
loope
xor
cltd
jg
jle
push
fcompl
fisubrs
sahf
ret
add
shrb
or
ja
ja
xor
mov
divb
shlb
test
sub
xchg
outsl
loope
das
lret
and
pop
mov
aas
sub
outsb
icebp
shlb
sbb
insb
pop
stos
sub
adc
push
into
mov
test
sbb
nop
mov
data16
fidivrs
inc
add
scas
adc
in
pop
popf
xor
addr16
push
inc
mov
nop
xchg
ljmp
enter
repnz
push
movsl
outsb
or
mov
mov
cld
sub
jle
pushf
jo
xchg
push
int3
adc
xor
sub
xor
int
sahf
in
mov
xchg
mov
aad
and
ja
push
xor
imul
xlat
mov
sbb
hlt
inc
lods
jmp
out
popa
mov
push
adc
push
pushf
ret
mov
push
mov
add
jnp
add
cmp
imul
push
bound
xor
sahf
cmp
mov
dec
lea
cs
andb
faddl
push
das
mov
mov
mov
sub
adc
ret
dec
test
ja
outsl
fdivl
jno
cmp
push
pop
fcmovb
adc
mov
inc
out
pop
sahf
cmp
jne
ret
and
or
mov
or
pop
movb
pop
push
jg
adc
movsb
lcall
pop
das
cs
sbb
outsb
aad
ficoml
mov
xchg
cmp
or
loop
add
jno
addr16
inc
push
push
ret
ja
dec
adc
sbb
mov
lea
adc
data16
adc
cmc
jp
mov
cmc
xchg
lcall
jge
addl
lea
xchg
loop
or
xchg
pusha
dec
cwtl
loopne
call
sbb
mov
lods
mov
pop
cmc
insb
lret
mov
lahf
test
js
jb
xchg
out
push
sarb
mov
push
loopne
inc
cmp
xlat
or
daa
push
call
jmp
fisubs
in
and
push
pop
in
pop
dec
fnstcw
or
in
insl
jb
bound
inc
dec
into
insl
add
xchg
and
outsl
pusha
cmpsl
or
popf
push
out
stos
dec
pusha
add
mov
mov
xchg
sarb
pop
jbe
ret
xlat
cli
sbb
mov
xor
fdivrs
mov
sbb
fdivr
mov
ficoms
xchg
into
mov
xchg
cmp
adc
jle
jb
test
into
and
or
pop
negb
dec
aas
push
lret
ja
jne
shlb
test
stos
outsb
mov
in
mov
and
and
add
push
cwtl
cmp
sarl
popf
ret
fstpl
sarl
mov
ds
cwtl
mov
cltd
cli
cmp
inc
outsl
mov
and
add
es
or
push
jb
outsl
iret
add
sbb
xchg
sub
lcall
sahf
jg
arpl
cmp
aaa
movsl
mov
and
pop
adc
cmpsl
jb
mov
sti
in
pcmpgtd
cmp
jmp
pusha
fwait
or
inc
ss
loop
pop
inc
jecxz
ljmp
push
xor
test
mov
mov
daa
sbb
bound
fmul
fisubrl
xor
mov
sub
mov
push
cli
and
sbb
js
out
adc
repnz
sub
mov
lock
imul
push
icebp
jnp
nop
stos
and
sbb
jecxz
jmp
lds
adc
cmp
xchg
xorb
jge
jbe
xorl
out
push
sub
xlat
fimull
stos
or
add
sbb
fldenv
fsubrl
xchg
lods
jbe
pushf
adc
in
cmp
cmp
mov
test
insb
insb
sarb
mov
mov
adc
jge
xchg
sub
xchg
jp
loopne
dec
xor
or
xor
lea
push
pop
lahf
incl
call
cld
inc
and
leave
and
adc
lea
jb
ljmp
std
lods
repnz
aas
mov
mov
sbbb
mov
nop
xor
push
sbb
outsb
lcall
int3
ljmp
jae
mov
test
cmc
dec
mov
in
aad
sub
cs
seto
cmp
lahf
ficoms
lahf
out
inc
sub
xlat
and
sbbb
xor
sbbl
lret
dec
pop
mov
push
mov
mov
adc
dec
aas
xchg
test
lcall
movsb
test
xchg
shlb
push
outsb
rorl
adc
inc
jmp
add
lods
sbbb
add
push
div
daa
xor
cltd
repz
cwtl
popa
leave
cmp
insl
sbb
jo
dec
call
and
xor
mov
es
popf
mov
xchg
cmpsl
insb
out
and
jl
mov
in
out
pusha
and
je
das
push
ss
lahf
sbbl
or
call
iret
je
push
int
popa
lret
mov
aam
or
xlat
add
push
cwtl
xchg
sub
movb
inc
push
adc
pop
xor
call
cmpsb
loope
jl
ror
mov
fs
mov
inc
shr
mov
adc
lcall
ss
gs
loope
cli
jo
pushf
in
xchg
sbb
aad
pop
cmp
in
mov
mov
jmp
fdivrl
mov
pop
inc
in
or
stos
add
loopne
mulb
hlt
jl
pushf
push
cmp
sbbl
mov
xchg
inc
mov
add
push
inc
cwtl
rorl
sub
pushf
js
fcomps
adc
dec
inc
mov
sub
aam
xchg
sbb
test
insl
arpl
mov
into
jno
xlat
sub
lods
les
dec
dec
xor
inc
cbtw
sub
pop
mov
shlb
add
es
cli
or
out
inc
mov
and
mov
clc
arpl
sub
push
jge
shr
addl
lods
push
cmp
adc
sbb
push
dec
mov
lea
mov
xchg
ja
repz
je
mov
mov
das
jns
mov
mov
inc
push
movsb
and
inc
cmp
mov
rcr
cmp
xchg
or
xchg
pop
or
mov
cmp
adc
scas
ljmp
sbbl
es
fdivr
jae
push
dec
mov
les
mov
fimull
std
mov
rcll
nop
pusha
xchg
std
fdivl
in
xchg
dec
mov
stc
pushf
out
fdivs
fdivr
or
xchg
je
ljmp
and
xor
xor
xorl
stc
scas
dec
dec
insl
popf
test
gs
xor
ret
sub
mov
push
dec
sub
jmp
lea
push
mov
mov
shlb
je
cmp
bound
dec
stos
or
xchg
add
or
mov
or
mov
push
rorl
pop
add
mov
jb
mov
jne
adc
mov
imul
enter
pop
daa
mov
stos
and
mov
test
adc
rolb
push
add
and
push
cmpsb
pop
subb
testb
push
scas
xchg
loopne
sub
sbb
pop
mov
je
lret
pminsw
insl
rcl
adc
dec
movsl
pop
cld
loope
pushf
ret
out
and
or
lock
daa
pop
sub
pop
ljmp
fs
addr16
cmpsb
dec
xor
lods
pop
ret
mov
aam
insb
xlat
pop
cmc
scas
sti
addr16
mov
lods
imul
in
xchg
jle
adc
mov
adc
cmc
and
lahf
mov
fldenv
fwait
or
out
mov
lods
cmpsl
mov
dec
nop
rcrl
idivb
jl
lret
sub
fstps
add
jnp
movsl
or
add
pushf
xchg
xchg
sub
jns
aad
sbb
push
test
inc
fcmovnu
cmp
pop
lock
nop
sub
lret
shrl
fsubrs
push
call
xchg
data16
sbb
movsb
shlb
pushf
sbb
psubsb
inc
push
mov
xchg
jecxz
push
mov
int3
jns
add
hlt
mov
xchg
pusha
adc
rcll
push
or
xor
mov
in
push
or
sub
ret
cs
mov
ffreep
nop
fstl
pop
pop
shrb
loop
shll
push
and
sub
movb
mul
imul
dec
mov
loop
insl
fildl
push
loopne
mov
ds
inc
xchg
mov
les
sbb
fnsave
jecxz
sub
pop
adc
mov
icebp
inc
fiaddl
loop
cmpsb
aaa
pop
add
xor
lret
ljmp
mov
adc
fstpt
and
in
pusha
aam
xor
dec
std
sub
in
mov
jnp
fisttpl
fsubl
cmpsl
sbb
dec
pop
sti
addr16
xor
pop
cmpsl
jp
lods
mov
iret
fsubrl
loop
or
bound
pop
push
mov
jl
mov
dec
xchg
insb
in
shl
mov
jmp
push
popf
cltd
das
outsb
xchg
sti
push
int
jo
jo
aad
imulb
pop
xchg
mov
push
pop
xchg
pop
sub
mov
dec
enter
xor
fidivrs
add
rol
sbb
inc
cli
xor
in
test
cmp
xchg
and
add
inc
and
cmpsl
sbb
jbe
and
cld
loopne
std
rcr
imul
fimuls
adc
ljmp
out
inc
adc
pop
dec
or
inc
js
mov
pop
xchg
inc
clc
js
xchg
in
jbe
or
xlat
xor
inc
repz
scas
das
inc
push
test
hlt
xor
int
insl
mov
aas
mov
mov
arpl
pop
or
std
test
test
or
mov
push
or
loop
fldl
sub
cmp
fisttpl
aas
popa
cli
int
out
xlat
es
add
in
jmp
mov
sub
cmpsl
ds
loopne
les
or
mov
loop
daa
push
adc
out
inc
dec
jecxz
xchg
ds
xchg
dec
int
add
adc
and
fsts
sub
and
push
jne
cwtl
push
xor
push
lods
rcll
lcall
mov
mov
or
dec
jle
pop
lea
imul
adc
jmp
int
mov
push
inc
sub
sub
mov
push
push
and
out
in
jns
sub
add
pop
bound
adc
bound
jl
sub
roll
adc
mov
inc
push
sti
stos
push
pop
nop
sbb
pop
lahf
pusha
ret
clc
imul
sbb
mov
cs
fwait
sbb
cli
fwait
push
imul
mov
sbb
mov
int3
jp
cvtps2pi
xchg
lret
mov
add
in
sbb
subl
ds
or
sub
call
jno
mov
pop
xor
push
and
shl
sub
shrl
out
imul
aam
pop
sub
jne
push
loop
fdecstp
cmpsl
lcall
sbb
dec
jne
mov
stc
stc
pop
sub
mov
out
shlb
daa
stos
sbb
pop
es
and
sub
stos
pop
dec
inc
inc
clc
jecxz
jecxz
dec
push
addr16
out
add
insl
jmp
jg
mov
mov
out
xchg
lods
push
mov
stc
add
popf
popa
sub
push
xor
or
in
sub
lret
push
sbb
fadd
addr16
xchg
imul
add
mov
psubsb
xchg
mov
cmpsb
into
lahf
cmp
dec
pushl
adc
insl
mov
xchg
leave
imul
adc
insl
pop
adc
mov
addb
xlat
mov
test
sbb
push
ror
ds
mov
xchg
add
or
sbb
les
xchg
xor
daa
shr
xchg
mov
dec
lods
lcall
add
test
mov
sbb
xor
je
fldcw
sbb
pusha
shrb
inc
aaa
int
cltd
pop
repnz
xor
xchg
out
fbld
fwait
clc
imul
sbb
add
pop
sub
adc
hlt
lret
shl
outsl
fsub
pop
jmp
mov
iret
sub
les
push
ret
cmc
movsb
jmp
jnp
loope
push
pop
jae
jecxz
in
add
jmp
sub
adc
cld
je
int
cmpsl
popa
push
xchg
sbb
adc
add
adc
int
jle
jecxz
pop
mov
mov
outsb
add
cli
repnz
lret
jge
jae
push
jmp
lea
jle
bound
push
jns
jle
bswap
dec
lock
sbb
push
sub
sti
in
dec
not
xchg
mov
ss
adc
or
sub
cmc
fwait
aaa
repz
sbb
mov
sbb
pop
sbb
jno
sbb
iret
cs
sub
dec
aaa
mov
xlat
inc
mov
orl
sub
pushf
mov
xchg
test
mov
cmp
and
fdivs
scas
cmpsb
data16
pop
pushf
jmp
xchg
sub
nop
mov
mov
add
inc
das
jmp
adc
fsubl
jecxz
out
push
mov
shrb
push
inc
push
imul
add
xchg
lahf
stos
mov
mov
insl
mov
xor
adc
adc
cmp
dec
scas
scas
sbb
jo
sub
loope
imul
in
jb
aam
mov
mov
lea
pushf
mov
addr16
ret
imul
call
std
xor
or
xchg
lret
loop
xchg
cmpl
jne
scas
out
sbbb
clc
push
jle
push
push
sub
xchg
xchg
and
push
xchg
mov
adc
leave
outsl
mov
push
stc
push
dec
or
jne
enter
ja
gs
inc
jg
mov
sub
lcall
ljmp
stos
movsb
ljmp
xchg
popf
pop
add
mov
inc
jle
push
mov
add
or
sbb
scas
sbb
popf
hlt
gs
inc
push
paddusw
sahf
cmpsb
repz
sti
nop
xchg
pusha
cmpsb
pop
rcll
pop
fstpl
test
popa
test
jns
cli
sahf
pop
push
cmpsl
lcall
mov
inc
mov
cmpsl
add
mov
icebp
sub
pop
scas
jae
cs
dec
je
jg
shr
aas
rcl
push
push
mov
dec
mov
fcmovbe
jl
add
fisubs
push
push
push
je
insl
outsl
jp
cmp
dec
sub
inc
std
pushf
and
lea
pop
cmpsb
push
and
loope
lea
lahf
int
add
push
pop
enter
sbb
pop
xchg
loope
out
bound
lods
or
push
mov
dec
scas
push
fmuls
call
in
loope
cmp
scas
add
or
jns
pop
stos
icebp
mov
test
out
pop
add
ds
add
stos
sahf
pop
xor
mov
mov
arpl
data16
adc
mov
push
and
and
mov
add
insl
adc
rcll
int3
pop
push
dec
xor
cmc
and
adc
sub
fsubrp
hlt
lret
mov
push
imul
mov
das
loope
mov
lods
push
add
imul
sbb
pusha
push
jmp
ds
jle
aaa
jecxz
sahf
xchg
mov
daa
jg
xor
push
loopne
inc
adc
notb
out
sub
arpl
bound
jbe
push
fstpt
dec
adc
jmp
pop
std
lret
js
sbb
xchg
jae
inc
xchg
mov
ss
bndldx
push
jns
mov
js
add
out
aaa
jmp
shlb
int
pusha
pop
cmp
movsb
mov
int
add
xor
mov
pop
out
fdivrs
ja
ds
mov
mov
add
cmp
bound
push
test
or
xor
cwtl
push
mov
pusha
into
dec
cmp
and
test
jbe
pop
lods
mov
popf
lds
push
inc
repz
rcrl
add
sahf
mov
mov
pop
jle
fdivrs
mov
repnz
imul
cli
sarb
test
pop
cmc
pop
push
orl
pop
outsb
insl
int
movsl
jnp
jl
ds
sahf
and
loopne
jp
xor
cmp
xchg
pop
mov
in
gs
mov
leave
test
aam
add
in
jg
xlat
xor
iret
sbb
test
sub
mov
incl
mov
sub
dec
xor
xchg
adc
pop
inc
jmp
into
out
sbb
cwtl
sub
xor
cmp
fucomp
xchg
jmp
bound
sbb
or
out
mov
repnz
and
loope
divl
loope
fs
repnz
outsl
scas
into
in
imul
mov
test
xchg
int
cmp
pop
and
bound
push
pop
jmp
in
cmp
add
movsb
fwait
xchg
sahf
in
cmpsl
or
sub
aas
shrl
push
fisubrl
imul
jecxz
fsubr
inc
xor
enter
pop
pop
inc
insl
mov
cld
sbb
and
call
inc
lods
adc
sbb
sub
mov
scas
sbb
loope
out
arpl
pushf
xor
data16
adcb
add
test
scas
sbb
mov
leave
data16
mov
adc
inc
mov
daa
mov
mov
sbb
dec
xchg
sbb
mov
ja
cmpsl
pop
lods
iret
clc
xor
loopne
shl
dec
fildl
xor
jmp
mov
sub
clc
icebp
bound
clc
mov
roll
ficomps
xorb
mov
imul
mov
cwtl
mov
ret
push
out
mov
push
xchg
loopne
mov
pop
add
sbb
frstor
mov
push
pop
and
cmp
stc
xor
stc
jp
sub
jno
xchg
adc
adc
push
sbb
pop
ss
repz
in
jnp
aas
movsl
and
push
fs
xor
mov
imul
dec
mov
xchg
imul
cmp
cmp
rcll
xlat
inc
int
sbb
in
mov
sub
push
push
adc
mov
push
mov
adc
leave
add
pop
jl
inc
mov
js
clc
enter
jl
inc
lock
mov
xchg
xorl
pop
addr16
mov
push
xchg
ror
xor
mov
mov
push
pop
cmp
pop
in
xchg
mov
jmp
lcall
test
and
xlat
ljmp
push
je
js
dec
dec
aad
cmp
inc
stc
add
sub
je
inc
jmp
je
mov
jb
in
pushf
dec
or
mov
rolb
icebp
movsb
cmp
movsl
inc
pop
into
bound
imul
pop
and
mov
pminsw
jb
pop
in
xchg
xchg
jo
lahf
repz
dec
xchg
cmp
xchg
xor
nop
and
lret
push
xchg
sbb
hlt
mov
adc
enter
cmpsl
add
test
cmp
rcll
in
mov
xorb
lahf
enter
jecxz
out
fcmovnbe
xor
in
jmp
pop
inc
jp
enter
sti
aad
out
inc
push
mov
push
jp
stc
mov
adc
push
stc
andb
add
pop
mov
mov
inc
dec
xchg
scas
out
cmpsl
mov
cmpsl
push
xchg
sahf
lock
push
and
dec
rcl
cmp
lcall
mov
pop
cmp
ss
sbb
and
xorb
shll
and
inc
push
cmc
out
enter
cmp
in
jno
or
ss
outsl
sub
mov
loopne
mov
push
lret
into
aam
negb
cmpsb
and
pop
imul
pop
pop
sti
iret
mov
mov
sbb
dec
inc
pushf
loop
rorl
cltd
fwait
lods
mov
sub
or
movsb
jg
mov
adc
jmp
jl
xor
lcall
xchg
enter
sbb
pop
into
std
shl
xor
cwtl
and
dec
pop
ss
pop
ds
and
adc
stc
test
fists
enter
pop
outsl
lret
push
inc
test
add
sub
xchg
xchg
push
rol
dec
push
popa
push
sarl
into
dec
popf
jns
sbb
or
lds
in
fwait
mov
repz
int
je
ret
inc
mov
pop
push
hlt
andl
rorl
cmp
pop
ja
inc
xor
push
xor
xor
push
addl
scas
mov
sbb
jns
xchg
int
xchg
push
pop
cmp
sbb
dec
movsl
and
push
and
pop
ds
xor
push
ja
and
aaa
pop
mov
notl
pop
xor
call
mov
cli
jmp
inc
inc
inc
gs
sub
cmp
mov
cmp
sbb
adc
jecxz
aad
xchg
ljmp
adc
jb
enter
push
inc
scas
and
shrb
add
arpl
std
clc
aaa
push
in
popa
data16
add
cwtl
cmpsb
int3
or
cmpsb
test
xchg
push
iret
ljmp
sub
mov
adc
adc
jle
xchg
lret
add
in
pop
add
ss
mov
enter
pop
loopne
jmp
mov
ljmp
sub
test
sahf
subb
mul
in
sbb
mov
gs
movb
loopne
mov
and
jge
ljmp
leave
leave
pop
icebp
ret
cs
gs
xor
jp
sub
ja
ljmp
out
jnp
or
cmpsb
mov
aam
mov
out
push
in
cmp
fwait
loope
ljmp
aas
leave
rorl
outsl
std
pop
int
jne
shll
icebp
test
test
inc
test
es
push
lcall
lret
push
xchg
adc
mov
inc
test
pop
int3
sub
jnp
xchg
cmpsb
out
mov
aas
ljmp
jg
or
imul
push
jnp
out
mov
lahf
iret
rclb
sbb
test
and
push
outsb
sarl
addr16
pop
fistps
out
push
aaa
jae
and
adcb
std
mov
push
mov
jle
iret
xchg
mov
dec
mov
fldcw
out
xchg
inc
cltd
xchg
jge
dec
lods
bound
push
popa
je
push
hlt
in
mov
cwtl
lods
inc
push
repnz
clc
adc
cmp
ror
pop
fdivrp
push
cmpsb
pop
xor
push
inc
mov
ja
in
pop
adc
inc
shrl
mov
data16
xchg
or
cmp
arpl
es
push
stos
xchg
orl
inc
pushf
dec
loopne
jl
and
cs
pusha
int3
inc
imulb
sbb
and
inc
leave
ja
or
xor
sbb
sub
in
push
xor
mov
lods
inc
fsubrs
dec
adc
and
xor
mov
jecxz
rcll
sbb
mov
pusha
test
sub
loope
mov
mov
cmp
cmp
sbb
insb
sub
rcr
adc
sub
jb
or
jg
mov
add
pop
xor
xor
loop
xchg
mov
sahf
cmp
pop
int3
push
dec
in
dec
insb
aas
cmp
sbb
inc
popa
into
mov
pop
bound
sbb
mov
xchg
mov
into
sbb
repnz
and
arpl
in
shl
hlt
pop
mov
js
loop
push
adc
cmp
cwtl
jecxz
mov
rcl
sub
jge
push
movsl
nop
adc
mov
imul
outsl
jle
je
inc
leave
push
insl
fisttpl
jge
xchg
ljmp
lea
push
or
arpl
xchg
push
mov
mov
sub
cli
mov
inc
negb
mov
rcr
jl
flds
nop
in
ret
into
adc
mov
outsb
push
test
jnp
pop
mov
mov
cmp
mov
ds
and
and
lahf
dec
aad
push
insl
lret
test
pop
xlat
mov
insb
popa
inc
xor
jmp
mov
sbb
lret
sahf
cmp
jg
sbbb
lret
push
orb
xchg
movsl
cwtl
jae
iret
mov
add
in
outsb
icebp
xchg
push
lea
rolb
ss
mov
sbb
les
inc
jnp
sti
jae
test
mov
das
into
push
clc
clc
rolb
ljmp
inc
inc
stos
bound
push
cmpsb
adc
mov
jns
and
cmp
bound
xor
or
jno
test
inc
gs
mov
insb
jmp
cmp
mov
lods
jp
stc
jno
stc
popa
cmp
xchg
sub
push
jl
dec
xchg
and
mov
xor
jle
adc
push
xor
xor
inc
xchg
aad
mov
je
pop
test
lret
push
popa
cs
sbb
cmp
arpl
dec
std
inc
jle
push
imul
scas
cld
add
iret
stos
cmp
cmpsl
les
pop
xor
fdivrs
stos
loope
mov
cmpsl
inc
or
inc
mov
and
call
stc
rcr
repz
sbb
push
sbb
dec
mov
jb
ja
mov
pop
inc
jae
push
in
in
inc
adc
iret
jns
js
push
mov
and
inc
add
and
fadd
outsl
fmull
sbb
mov
xchg
cmp
in
jno
hlt
cli
mov
leave
test
push
pop
push
cmpsb
cmpsl
mov
orl
fdiv
fdivl
xchg
ret
xchg
sarb
inc
sub
sbb
cmp
or
mov
out
push
dec
mov
push
lds
aaa
rcrb
rcrl
je
mov
lret
dec
insb
repnz
xor
jp
adc
cli
sub
jle
outsl
lahf
pop
jne
mov
dec
cmp
xchg
mov
test
in
mov
cmc
mov
leave
cmpsb
gs
popf
pop
int3
or
xor
out
lahf
bound
pop
cwtl
mov
repz
sbb
pop
out
mov
pop
push
sbb
loope
je
sub
ret
sub
jno
in
xor
xchg
movsb
aad
push
xor
cmp
lods
sbb
pop
adc
cmp
cld
dec
adc
xlat
rclb
jecxz
leave
sub
mov
inc
push
or
rclb
sbb
jbe
mov
or
push
xchg
scas
or
xchg
ss
and
jno
popf
ror
fbstp
andb
adc
jge
pushf
pop
xchg
das
add
sbb
movsl
stc
jp
sub
or
jbe
xchg
jae
mov
sub
fdivs
fcmovbe
jmp
adc
xor
add
adc
sbb
enter
lret
cmp
icebp
sub
imul
mov
lret
mov
in
adc
pusha
pusha
mov
push
seta
mov
cwtl
cmp
nop
ret
dec
jne
cmpsb
in
leave
addb
jg
mov
pop
mov
movsb
or
stos
mov
sbb
mov
shll
xchg
es
xor
adc
stc
dec
insb
sub
add
scas
xchg
jo
or
inc
xor
jb
cmp
adc
jno
in
mov
lock
es
cwtl
xor
xor
add
mov
hlt
sbb
sbb
jmp
in
shll
mov
aad
mov
pop
jl
int3
pop
cld
dec
dec
iret
xor
mov
or
dec
std
mov
icebp
or
outsb
add
and
shld
lcall
pop
iret
rorb
sbb
adc
push
mov
jb
cmp
or
inc
and
sub
stos
add
cltd
pop
jl
xor
pop
sub
and
lret
cmpl
movsl
fldl
lds
or
fsubrs
lods
add
test
rol
addr16
mov
cwtl
xchg
mov
xchg
and
sbb
xchg
or
out
adc
xchg
pop
jne
mov
mov
lret
inc
cwtl
ret
xor
pop
fxam
adc
adc
sbb
inc
lods
fidivl
cmp
mov
dec
rcrb
jno
push
insb
lock
add
xchg
xor
outsl
fimull
xor
aaa
cmp
test
xor
stc
lods
in
into
sub
addr16
lcall
out
es
adc
movsl
jmp
enter
sub
rep
cmp
and
dec
fwait
in
rcll
push
push
push
jns
fwait
pop
xor
les
cltd
fldcw
or
arpl
rcrb
jl
pop
ljmp
imul
sbb
cmp
test
push
repz
fisttpl
iret
sub
and
das
outsb
int
fistpl
xor
cmp
fists
sbb
fidivrl
push
pop
fldenv
jg
cs
iret
jp
insb
fxch
mov
int3
imul
xchg
xchg
inc
mov
ret
lds
hlt
mov
push
in
jnp
loopne
add
mov
xor
or
aas
jnp
push
ds
lods
rorb
mov
jg
cltd
and
test
cltd
fisubs
fidivrl
cld
mov
adc
scas
clc
sub
cmpsl
cld
divb
mov
and
repnz
push
mov
movsl
pop
inc
in
adc
clc
push
shll
jbe
and
push
mov
jo
or
cmpsb
sti
push
out
fiaddl
dec
cli
mov
loopne
pop
addr16
test
mov
mov
mov
mov
scas
mov
xor
adc
stos
iret
add
lret
adc
addr16
or
pop
pushf
vfnmaddss
movsl
mov
lds
push
lcall
arpl
fwait
xor
sub
in
icebp
test
xor
dec
push
outsl
mulb
xchg
rclb
faddp
add
xor
inc
xchg
daa
lods
fistl
xor
dec
clc
outsb
pusha
or
cltd
or
inc
fcmovbe
sbb
cmpsw
add
and
push
dec
lds
push
es
sbb
pusha
or
lods
mov
loope
mov
mov
mov
idivb
sbb
loop
push
insl
lea
cmp
xchg
rclb
jb
pop
ja
inc
subb
dec
pop
pop
mov
fistpll
xchg
cmp
inc
insb
js
dec
push
pop
lcall
out
test
lahf
and
aas
lock
jmp
lret
sub
fst
jb
mov
and
ret
in
insb
iret
test
inc
or
aad
shl
adcb
sbb
push
mov
lock
cld
cmpsl
stos
xlat
jae
int
movsb
sbb
xchg
sbbl
clc
pop
lahf
mov
fadds
pop
add
fmull
pop
dec
inc
std
pop
jb
mov
jb
mov
call
fwait
enter
mov
xlat
fsubs
xor
and
xchg
push
loope
repz
fwait
cmc
sbb
clc
dec
xchg
je
pop
add
jno
add
pop
imul
imul
mov
pop
push
mov
fstpt
pop
mov
inc
jb
insl
jg
mov
test
push
fistpl
adc
and
pop
sbb
dec
jo
xor
dec
push
push
insl
call
rcrb
xchg
add
fldenv
icebp
int
comiss
adc
iret
inc
sub
int3
jne
mov
jg
ret
cli
jle
mov
cwtl
js
xor
push
push
pop
enter
ss
mov
sbb
andb
notb
hlt
adc
lock
or
pop
add
sbb
pop
mov
dec
data16
fmul
cmp
dec
enter
stos
popf
jb
add
ja
pop
arpl
jnp
imul
dec
push
mov
inc
in
mov
cs
fst
stos
out
lods
push
mov
pop
sbb
dec
adc
cld
icebp
dec
movsl
fisubrl
push
lea
call
and
in
push
mov
outsb
into
mov
inc
sbb
xchg
push
hlt
push
repnz
add
jge
mov
cwtl
mov
stos
inc
je
inc
pop
pop
rol
mov
dec
stc
enter
int
fistpl
insb
jl
add
xchg
push
add
loop
inc
hlt
in
push
packsswb
mov
mov
adc
cwtl
mov
push
rcrl
add
mov
insb
dec
aas
jge
das
push
and
cmp
call
mov
enter
jmp
or
dec
fwait
dec
ret
jnp
pop
lods
call
aad
push
xor
fwait
or
sub
into
ss
test
fwait
leave
mov
jb
push
ljmp
icebp
adc
test
pop
in
pcmpeqw
inc
les
ret
cmc
lods
mov
pop
sbb
xlat
sub
mov
iret
dec
gs
loop
xor
or
xor
adc
push
push
daa
out
ret
ss
cmp
add
mov
xchg
lcall
stos
pop
jns
mov
js
lret
or
in
adc
es
loope
sub
jmp
ja
outsl
outsl
cmp
or
inc
ljmp
scas
cli
push
in
cmpsl
inc
pushf
imul
sub
in
jmp
fisubrl
push
cmp
xor
or
push
adc
nop
pop
sub
jge
cmp
aaa
jmp
and
inc
jnp
cmp
je
xor
clc
jp
es
sub
movsl
xchg
xchg
loope
in
sbb
out
loop
testb
repz
xlat
push
aad
xor
mov
aaa
adc
ret
imul
add
mov
or
sub
ds
jno
mov
in
add
bound
out
cmpsl
inc
mov
stos
test
adc
sub
xor
ret
mov
movsl
adc
cmp
adc
outsl
je
xchg
in
sbb
dec
repnz
test
xchg
add
sbb
sub
pop
push
xchg
jecxz
mov
jge
mov
mov
push
std
xor
and
sbb
jg
sar
fldl
out
sub
sub
xchg
pop
stos
fdivrs
xchg
jb
jo
xchg
jb
cmp
add
divb
int
loop
fnsave
jnp
xor
mov
sti
sbb
inc
or
pop
jns
jmp
push
cmp
jge
repz
gs
inc
xor
dec
inc
je
dec
dec
test
inc
lret
dec
ja
pop
ret
dec
sti
and
cmp
adcb
mov
ljmp
call
fwait
adc
jns
jp
xchg
jle
jb
xchg
lahf
push
inc
pop
orb
dec
lds
sbb
mov
xor
add
sub
les
movsl
fidivs
mov
test
rcrb
lods
in
mov
pop
enter
xchg
dec
popa
push
inc
sub
or
and
out
pop
out
jne
rclb
mov
push
fs
mov
or
in
in
xchg
inc
jns
sbb
push
sub
lea
loop
in
jecxz
and
test
imul
cmp
mov
xchg
popa
and
data16
loop
cmp
shr
push
pop
jne
mov
sbb
lret
insb
xor
xor
mov
pop
testl
clc
jns
inc
fs
movsl
js
sub
packuswb
scas
xchg
and
ficoms
lea
mov
rcr
inc
scas
sub
xor
add
or
jp
jno
stos
jb
or
std
xchg
rorb
fildll
cmp
repnz
mov
dec
fdivr
lahf
fiadds
fsubrp
imul
mov
ss
imul
push
jl
or
ja
cltd
xchg
inc
imul
movsb
jnp
xor
xchg
icebp
cmp
call
jbe
ds
push
mov
test
jle
cmpsb
lock
ja
int
add
add
xlat
adc
pop
outsl
push
adc
gs
cli
loopne
mov
xchg
jg
inc
fcoml
inc
daa
fildl
push
dec
cmp
in
sbb
xor
stos
mov
jb
aas
jnp
bound
movsb
pop
in
push
add
mov
ds
xlat
or
int3
cmp
ja,pt
push
or
std
std
stos
in
fldl
push
pop
push
jne
push
les
or
jae
dec
in
lock
test
sbb
mov
mov
dec
sub
jno
or
mov
aas
shl
lods
cmc
jp
jno
jbe
pop
test
mov
dec
jb
fdivs
mov
xor
sub
daa
mov
jl
mov
cmp
es
subb
notl
test
pop
out
jbe
test
popf
sub
cmp
adc
add
pop
fxch
fisubrl
mov
pushw
jae
cmp
push
sub
push
cwtl
pop
push
jl
ss
nop
fldcw
pop
lahf
inc
add
lock
push
adc
push
cli
push
sbb
or
js
arpl
fcomps
push
fs
out
loopne
cmpl
iret
pop
xchg
push
int3
nop
mov
ret
jecxz
enter
movsl
loope
icebp
out
add
add
jp
stos
cmc
jnp
adc
mov
imul
cmpsl
aad
inc
sbb
jle
adc
rorb
negl
call
ret
mov
lcall
movq
pop
ds
xchg
lret
insb
ss
mov
ffreep
jnp
jp
out
stc
add
inc
jmp
cmp
shufps
xchg
popf
les
xor
aaa
ds
lods
jecxz
mov
add
mov
add
fwait
mov
fs
pop
fists
or
negl
jb
lret
mov
das
xchg
sub
test
push
insl
fists
icebp
dec
cmp
inc
push
xchg
arpl
cmp
pop
xchg
mov
xchg
popf
jno
ret
add
cmpsl
mov
add
fdivs
out
shll
insl
sarl
int
mov
fwait
aam
in
loope
mov
xchg
imul
scas
xor
jns
stc
add
lea
fstl
inc
out
in
loope
fwait
jge
aas
test
mov
push
es
fs
loopne
cmp
out
sbb
loopne
pop
inc
data16
outsb
and
jbe
mov
pop
pushf
aam
test
pop
fsubs
outsl
mov
jg
lock
push
xchg
enter
loop
in
and
mov
push
test
and
das
pop
fisttpll
pop
sbb
and
adc
add
push
add
dec
mov
in
inc
les
cmp
dec
push
pop
or
mov
loop
or
adc
fisubrl
mov
stos
adc
out
xor
inc
adc
bound
add
fmuls
scas
insl
push
movsb
into
pop
dec
sahf
mov
mov
cltd
jno
addb
cs
inc
movsb
jnp
mov
or
fwait
add
or
or
mov
stos
xsha256
cmpsb
xchg
cmp
adc
mull
jo
mov
pop
test
gs
and
sbb
jmp
imul
data16
jns
in
mov
add
and
xor
mov
mov
outsl
fcmovu
sub
dec
es
xchg
adc
out
lret
mov
cmpsb
pop
adc
aas
mov
xchg
pop
push
sbb
push
dec
mov
sub
cltd
jge
sub
mov
xchg
pop
cmp
cmp
shrl
in
xchg
xorl
jo
out
mov
add
jns
inc
lcall
rcll
pop
or
dec
lea
jns
fidivrs
insl
cld
fs
inc
lods
inc
lock
jmp
lahf
sbb
or
cltd
xor
mov
mov
aad
sbb
and
sub
lret
jge
push
inc
outsl
sbb
out
mov
ret
jge
dec
push
loopne
hlt
stos
ss
mov
xchg
insb
mov
add
sub
mov
ja
add
inc
ds
mov
add
pop
jmp
sub
shrl
fldt
ljmp
mov
jns
mov
and
iret
xor
pop
fwait
push
idivb
sbb
sbb
lods
daa
in
mov
inc
call
adc
shlb
jnp
scas
rcr
sbb
adc
cmp
or
stos
push
popa
mov
sub
jne
jne
mov
aam
leave
enter
outsl
fcmovnu
push
gs
xor
fidivrs
nop
mov
mov
bound
or
repnz
cmpsb
push
clc
fs
out
arpl
popa
outsb
out
in
jle
nop
pop
in
pop
js
mov
add
cli
mov
inc
and
les
in
sub
imul
aaa
mov
cmpsl
negl
fdivrs
mov
or
xor
mov
hlt
gs
mov
mov
jb
and
xor
lret
into
lea
pushf
mov
adc
mov
xlat
mov
mov
inc
nop
cs
icebp
lock
pop
or
mov
mov
dec
mov
pop
adc
xchg
xchg
jecxz
or
inc
mov
clc
mov
jg
movsb
shll
in
mov
mov
jl
fucom
add
lret
ret
pop
aam
pop
jbe
out
in
aad
push
jne
push
pop
arpl
inc
bound
or
pop
jb
popf
dec
push
aam
fmul
call
jo
xchg
sbb
mov
lcall
movsl
sub
pop
ret
pop
divb
scas
adc
lcall
stc
shll
pop
xor
inc
mov
cmpsl
test
jecxz
sub
repz
popf
in
and
jno
clc
add
adc
cmp
aas
shlb
and
outsb
cmp
testb
xorl
sahf
fsubrs
int
push
mulb
and
in
aad
mov
test
and
cmp
xlat
je
push
das
mov
arpl
inc
push
test
pop
mulb
dec
sahf
inc
fstp
adc
jnp
rclb
add
jbe
orps
fisttpl
adc
push
mov
sahf
cmp
cmp
fwait
jmp
lret
mov
ret
ffree
pop
xchg
pop
or
push
rorl
jle
add
mov
fsub
add
mov
dec
js
fcomps
push
pop
out
mov
xchg
in
sbb
das
mov
mov
repnz
loope
jg
cmp
sahf
mov
jmp
lock
push
stos
sbb
pop
jmp
sbbl
mov
into
movsb
pop
or
testb
repz
pop
shrb
jno
xchg
mov
cld
mov
faddp
fwait
mov
fnstcw
popa
mov
cmc
jae
xor
sarl
aam
fists
and
xor
gs
push
pop
stc
movsl
pop
jns
notb
mov
and
dec
and
dec
sub
cwtl
adc
stos
mov
or
cmp
or
dec
lds
xor
mov
pushf
mov
or
mov
mov
inc
mov
dec
in
std
fldt
out
je
pop
addr16
mov
js
mov
mov
jnp
push
pop
faddl
mov
adc
jae
pop
lret
fiaddl
out
fisttpll
xor
jecxz
mov
stos
scas
data16
push
aad
das
add
jp
loopne
pop
bound
ljmp
jmp
cmc
or
int3
inc
adc
imul
mov
pop
fwait
out
into
xor
lret
aad
out
aas
mov
call
movsl
xor
and
push
negl
daa
dec
leave
hlt
cmp
test
movsb
sbb
imul
insb
push
div
ss
pop
sbb
pop
inc
xor
push
repz
loope
sbb
outsb
arpl
and
jnp
mov
jbe
push
xchg
fsubrl
lcall
xor
cwtl
int
jae
mov
pop
repnz
das
jne
xchg
scas
cmp
in
sub
jne
dec
out
test
dec
sub
and
lcall
adc
mov
lods
fiadds
xchg
lahf
xchg
imul
sbb
rcrl
rcrb
icebp
pop
iret
test
test
popa
stc
adc
int3
pop
adc
in
xchg
nop
adc
lods
inc
inc
ffree
mov
inc
jo
cmp
insl
sub
bound
ss
and
pop
cwtl
lea
push
sub
and
xorl
aam
iret
lea
loopne
xchg
les
dec
mov
ljmp
nop
pop
cmp
ffree
jmp
jae
add
sbb
mov
dec
sbb
je
loop
addr16
or
sahf
sarb
mov
and
sbb
dec
cmpsb
movsl
int
or
pop
cmp
jl
mov
adc
pop
jmp
mov
clc
pop
clc
subb
in
xchg
jae
cmp
fidivl
test
mov
outsl
pusha
inc
shlb
sbb
sub
jl
repnz
mov
rorl
jmp
fsubl
sub
in
lods
jmp
xor
cmp
mov
add
adc
insl
loopne
mov
push
ret
cmp
sahf
and
dec
xor
shrb
or
jbe
je
cmp
inc
aam
cmp
std
mov
cmp
scas
xchg
or
cmp
and
push
lcall
xor
pop
testb
mov
aad
cmpsl
mov
mov
xor
push
jb
adc
int
or
xor
nop
daa
pop
xor
repnz
cs
xchg
jb
fwait
adc
jle
lock
xchg
push
loop
leave
loop
fists
add
cmpsb
je
xchg
add
and
out
jns
cli
aad
cmp
jmp
stos
js
xchg
inc
xchg
arpl
rclb
pushf
and
push
cmp
cmovl
dec
or
jnp
cmpb
mov
std
push
shlb
movsl
out
mov
scas
jb
jg
call
pop
adc
loopne
cmpsl
int3
movb
mov
sarb
pushf
lret
sub
fimuls
push
movsl
mov
dec
enter
dec
xchg
fs
test
leave
enter
adc
out
pop
pxor
mov
popf
push
ljmp
push
rcr
xchg
push
arpl
stos
or
incb
xchg
add
std
inc
lahf
nop
sahf
pop
xor
cld
inc
test
jno
lahf
iret
and
lahf
ss
loop
mov
in
inc
ljmp
fldlg2
xor
adc
add
idivl
inc
add
or
jl
push
leave
mov
xchg
pop
fs
and
lods
xchg
shrb
fsubs
scas
je
cmpsb
adc
enter
jne
sbb
popf
and
lcall
inc
mov
test
in
rclw
popa
sahf
std
mov
jns
cmp
add
sbb
imul
dec
sub
jno
jge
cmp
xchg
orb
int3
cmp
sbb
daa
cmc
test
out
and
movsl
lock
mov
mov
pop
clc
data16
add
pop
in
pop
pop
push
icebp
pop
sub
sbb
ret
addb
fcomps
sbb
lea
pop
shll
mov
mov
lahf
lcall
pop
hlt
aaa
nop
pushf
jb
adc
sbb
and
xor
imull
lds
jne
imul
mov
pop
dec
out
sub
scas
pop
dec
mov
mov
loope
jp
lods
aas
jnp
jmp
lods
jb
insb
xlat
jle
cs
mov
clc
xchg
in
xor
jne
sarb
out
loopne
dec
and
cli
pop
js
shlb
sbb
mov
je
loop
push
jp
aas
popa
jecxz
repnz
adc
clc
and
aas
mov
adc
hlt
inc
stos
and
ljmp
repnz
cli
in
cmpl
sbb
xchg
jnp
jp
and
ret
xor
je
jl
cmp
sbb
out
insb
xchg
movsl
jle
mov
or
jmp
push
js
jg,pt
mov
mov
lods
push
push
shl
jb,pt
sub
sahf
jne
insl
sub
mov
rorb
inc
ror
push
negl
shl
fwait
test
hlt
push
xchg
push
mov
pop
xor
adc
push
test
mov
cmpsb
and
inc
push
imul
add
adc
adcb
ljmp
pop
leave
and
mov
daa
int3
js
es
sub
repnz
mov
push
out
aaa
mov
rclb
add
std
lods
jns
mov
lods
mov
inc
lcall
ret
jo
sbb
ljmp
ret
sbb
cmc
fimull
add
aam
gs
shrl
dec
rol
clc
cli
out
dec
xchg
int3
data16
fs
push
sub
mov
outsl
pop
pand
mov
test
jb
jl
inc
stos
pop
cmp
into
jge
cmp
push
push
add
fs
push
shl
add
aaa
jmp
mov
pop
or
stc
insl
inc
mov
xorb
xchg
mov
fsub
push
insb
testb
je
jg
cli
mov
in
xchg
inc
add
or
out
movsl
dec
push
inc
or
jno
mov
or
lds
fwait
lea
mov
out
or
jns
sub
popa
dec
mov
test
add
pop
fcmovu
lahf
xor
inc
decb
sub
jecxz
cmpsl
mov
nop
pop
ja
xlat
imull
rcr
or
inc
je
dec
jge
int
mov
outsb
sbb
lds
lods
jo
cwtl
mov
imul
ja
fcmovnu
xchg
fsubl
iret
sahf
adc
int
mov
add
movsl
mov
mov
rclb
in
cli
mov
dec
adcb
add
mov
fistpll
cli
ja
cs
fdivrs
stos
popa
mov
push
sbb
mov
add
pop
ret
inc
addr16
mov
dec
lods
es
cwtl
lods
ja
or
fadds
pop
sub
or
cmp
shll
fwait
and
jmp
add
cs
push
iret
lock
jmp
push
sar
sti
xchg
or
or
pop
das
test
cs
mov
fdivr
ds
dec
enter
test
mov
mov
lret
jg
pop
jge
jle
xchg
or
pop
sti
out
stos
int3
inc
pop
cmp
inc
rolb
xor
and
rcrl
mov
leave
gs
xchg
adc
rcr
shr
mov
shrb
sub
xor
scas
into
leave
loopne
sbb
and
dec
pop
icebp
pop
ret
dec
mov
rolb
outsb
add
loop
insl
mov
ljmp
clc
clc
mov
sbb
jno
fdivs
mov
push
lds
aad
jle
orb
inc
cmp
sbb
dec
pop
pusha
jecxz
jbe
in
cmp
and
mov
sarb
mov
pop
and
pop
mov
cwtl
sub
es
push
jnp
cli
xor
or
inc
sahf
and
ljmp
sbb
cmc
sub
adcb
jl
into
sti
addr16
idivb
ret
idiv
out
sub
push
and
stc
leave
adc
test
cltd
sub
test
ss
mov
inc
mov
mov
lock
leave
or
ret
lods
pop
push
mov
popf
mov
imulb
cpuid
jae
xchg
adc
enter
imul
xchg
test
mov
mov
lret
and
pop
pop
xchg
xchg
clc
in
add
test
test
loopne
stos
xor
lea
and
rorb
xchg
les
push
or
movsl
xchg
mov
mov
add
jb
bound
dec
jge
dec
lods
pushf
mov
mov
fildl
pop
adc
outsb
cld
jae
mov
cmc
inc
into
dec
xlat
out
inc
add
loop
mov
xor
jecxz
dec
fs
fsubl
pop
dec
cmp
icebp
push
in
sbb
and
shlb
cmp
into
inc
and
test
stos
orb
mov
subb
add
insl
push
xor
out
jne
pop
les
and
dec
adc
push
test
gs
jb
inc
shrd
mov
xor
push
decl
out
push
mov
sbb
insb
aas
or
jo
decl
fnstsw
jno
ja
xchg
stc
ud0
sldt
cmp
ja
sub
push
sub
xchg
ret
int3
cmp
std
mov
xchg
dec
cmp
pushf
push
lock
in
jmp
push
mov
loopne
fldl
roll
sbb
inc
mov
push
inc
test
jns
cmp
pop
jg
cmpsl
iret
cmc
mov
aad
popf
add
rcll
mov
sbb
loopne,pn
pop
add
scas
sub
dec
push
xchg
into
inc
call
xor
cmpsl
pusha
cld
xor
adc
cmp
cmp
stos
pusha
leave
ficoms
jnp
or
outsb
mov
push
fs
les
sbb
mov
push
insb
sbb
xor
sub
xorl
out
inc
loopne
icebp
lods
outsl
test
dec
and
ja
jb
and
mov
dec
sarb
fwait
out
mov
xor
pop
iret
sarl
rcll
inc
cmp
mov
cmp
fcmovnbe
fdivl
pop
test
mov
js
xor
int3
cwtl
adc
and
lods
movsb
or
popf
push
push
test
xchg
or
repz
mov
popa
add
jp
mov
mov
arpl
loopne
loop
scas
sbb
sub
fisubrl
test
add
rolb
dec
and
mov
imul
out
inc
imul
ja
inc
je
xor
dec
mov
jnp
lods
ret
cltd
in
arpl
lcall
dec
mov
mov
xchg
push
push
loope
cmpsb
jns
stc
xor
inc
jbe
hlt
xchg
lock
popa
cmc
call
in
and
fsubr
inc
outsb
mov
jno
mull
out
shll
xor
mov
xor
mov
cltd
xchg
pop
lret
dec
adc
aas
arpl
jle
xchg
movsb
mov
jbe
mov
jg
into
inc
mov
sbb
push
ss
or
repnz
lret
or
and
cmpsb
fisubl
icebp
fnstenv
popf
add
or
loop
pop
xchg
in
pop
mov
push
das
sahf
and
lahf
insb
sti
je
dec
sti
dec
in
xor
lds
inc
sub
popf
adc
sahf
add
sbb
loopne
mov
dec
sti
dec
cli
and
mov
mov
sti
fucomp
arpl
mov
es
dec
and
adc
out
call
loop
repnz
add
mov
mov
ror
aas
or
cs
adc
pusha
push
test
movsl
pop
fwait
inc
sbb
sarl
inc
cmp
fsubp
xor
hlt
mov
std
stos
jmp
movsb
mov
xlat
fisubs
ja
data16
mov
lea
jl
jg
xchg
sub
inc
add
sub
shr
push
std
mov
jne
xchg
xor
insl
test
pop
dec
out
incl
mov
sbb
sbb
in
clc
xor
and
je
xchg
ret
das
repz
jle
testb
cmp
cltd
bswap
movsb
adc
mov
out
test
or
scas
divl
cltd
imul
int
mov
fcom
sbb
pushf
push
cwtl
nop
fidivs
sub
inc
jecxz
outsb
lods
push
or
mov
outsb
pop
nop
lods
push
lea
int
lcall
xor
dec
adc
cmp
inc
test
dec
leave
lock
ljmpw
pmaxub
loopne
fdivs
sbb
mov
adc
fisubs
fistpll
jle
sub
loopne
inc
adc
icebp
cltd
lds
push
rcl
fstpl
rcr
in
jbe
into
jmp
and
shrl
and
xchg
in
mov
jae
lret
adc
adc
push
mov
les
test
cld
cmp
or
loope
insb
mov
and
jnp
adc
mov
jle
out
xor
int3
push
sub
push
mov
xchg
scas
lcall
dec
mov
sbb
push
fcomip
pop
nop
mov
pusha
sbb
add
aas
fisubrs
jb,pn
push
xchg
or
and
cmp
sbb
jg
jne
jno
cwtl
lahf
push
adc
push
mov
pop
inc
cmc
xor
pop
pusha
inc
mov
mov
mov
jae
push
mov
test
mov
adc
lock
sub
xchg
xor
addb
pop
loope
nop
cmpsb
adc
in
daa
push
xchg
ss
loopne
fs
fsub
lods
mov
test
jae
pushf
test
pushf
push
inc
out
bound
in
rep
pop
icebp
or
and
xor
lret
xchg
test
cli
dec
cmp
out
sub
mov
adc
ss
or
pop
lock
cmc
cli
lods
lock
pushf
inc
pop
or
shlb
sub
dec
pop
mov
shlb
cmpsl
rclb
add
lahf
mov
orl
xor
out
insl
jb
scas
int
popf
mov
out
repnz
movsb
js
sbb
xchg
out
adc
adc
scas
cmpsb
cltd
les
lock
jecxz
repz
jbe
scas
je
fsts
sub
and
mov
jb
test
mov
das
test
leave
and
or
cmpsb
pop
mov
jns
test
add
xor
rorb
lods
inc
xchg
push
xlat
and
movsl
mov
popa
mov
jb
cmp
add
xor
pop
push
fistl
orb
sub
xlat
sub
pop
ficoms
xchg
das
ret
xchg
add
scas
lods
jb
popa
sbb
sub
push
test
xchg
outsl
in
outsl
and
dec
repnz
xor
mov
jge
scas
sbb
inc
lods
loop
inc
mov
mov
mov
adcb
repz
cmpsb
mov
lahf
jmp
sub
mov
je
mov
cmpsb
fwait
aas
sub
cmc
sti
imul
add
and
jo
cli
jl
repnz
addr16
push
cltd
inc
imul
cltd
adc
into
jns
insb
push
notb
cmp
pop
inc
xchg
bound
push
mov
pop
sbb
aaa
nop
sbb
lahf
inc
pop
stos
inc
data16
cmp
adc
or
xor
sarl
int
push
mov
fwait
lock
mov
jmp
or
hlt
jg
fiadds
mov
lcall
idiv
icebp
push
mov
dec
lret
fdivrs
inc
rcl
dec
xchg
aaa
sub
mov
mov
dec
cmp
push
test
icebp
jne
xor
dec
lods
adc
xchg
faddp
call
push
int
pop
mov
push
or
js
cwtl
push
jle
es
xchg
xchg
cmpsl
nop
lret
push
add
lahf
push
in
jecxz
or
mov
dec
loop
mov
dec
dec
dec
imul
cmpsl
fcompl
sub
xor
lret
pop
xor
push
jge
jl
or
mov
adc
je
mov
cli
lret
popf
cli
xchg
jae
out
and
fisubs
mov
jo
call
jne
pop
jle
std
jmp
dec
mov
cs
popl
jmp
outsb
in
adc
xor
clc
pop
sub
mov
arpl
pop
cmpsl
sub
sbb
es
mull
jge
inc
xchg
dec
xlat
xchg
ds
test
cld
xchg
sub
scas
pop
mov
rep
insl
mov
dec
sbb
rorl
or
stos
sbbl
sub
imul
and
sbb
scas
add
jae
pushf
call
test
mov
loope
pushf
je
and
push
test
in
sub
mov
cmp
sbb
lcall
outsl
bnd
push
ficomps
bound
out
inc
sti
jmp
or
lret
test
rorb
js
mov
icebp
push
mov
insl
addr16
xor
loope
xor
xor
and
stos
fcomip
pop
sub
mov
ret
lret
cmp
data16
sbb
add
cld
and
xchg
inc
movsb
add
pop
sbb
cltd
xchg
insl
dec
aas
xchg
jo
xchg
repnz
out
imul
ret
ljmp
repnz
xchg
adc
cli
aaa
xchg
pop
sahf
fcompl
inc
xchg
jecxz
lea
pop
dec
jae
repnz
pop
sub
iret
mov
sub
or
jne
add
fidivl
loope
mov
int
sbb
cli
mov
cwtl
adc
jmp
out
jmp
test
pop
mov
sbb
cmpb
mov
lock
mov
arpl
dec
pusha
pop
jno
lahf
fcom
hlt
inc
or
aam
sub
jb
mov
fxam
lds
adc
push
test
and
pop
repz
aad
mov
mul
insl
sahf
scas
pushf
mov
out
outsl
cmp
mov
jo
stos
jae
mov
jbe
xchg
sbb
les
cli
mov
sub
push
sbb
push
mov
lcall
frstor
xchg
jecxz
cmp
loopne
cmp
es
or
adc
sub
in
mov
xchg
ljmp
jnp
jecxz
jo
sarb
mov
push
pusha
outsb
cmp
mov
push
test
pushf
lods
fisttpl
lods
sti
add
ret
mov
mov
int3
test
outsl
cmp
lret
mov
test
cmp
mov
in
or
leave
mov
loope
je
mov
outsb
bound
or
add
arpl
enter
leave
outsb
repz
jns
repnz
xor
lahf
mov
mov
mov
out
push
lret
cld
push
add
cmp
out
repz
mov
pop
jno
jno
cmp
nop
sti
cltd
dec
sub
cld
imul
cmp
std
int
stc
or
and
jmp
cwtl
or
cmp
aad
pop
jns
cs
xchg
lea
or
inc
jmp
mov
or
stos
cli
std
lea
lods
rorl
into
inc
movsb
lods
adc
int
xor
pop
xor
leave
xchg
mov
int3
mov
test
out
or
pop
mov
lea
mov
je
mov
fsubl
xchg
push
ror
push
imul
push
sysenter
daa
loop
sbb
in
sbb
das
nop
outsl
xor
cmp
add
ss
push
out
push
pop
out
mov
adc
pop
stos
out
in
pop
arpl
mov
sub
pop
lods
loop
xchg
mov
xchg
push
add
lahf
push
adc
test
or
xor
movsb
pop
mov
dec
mov
jle
lods
jmp
xor
xchg
leave
push
jl
dec
cmp
hlt
ja
jmp
ja
daa
jb
rcrl
fwait
ds
adc
pop
gs
adc
mov
mov
pop
call
std
push
jne
lahf
push
mov
cmp
dec
fisubl
lahf
xor
into
cli
push
mov
xchg
xchg
inc
iret
outsl
ret
scas
fisubrl
push
adc
adc
mov
dec
mov
push
cli
js
into
sub
adc
pop
sbbb
ret
test
stc
les
in
jns
bound
sti
sub
lcall
mov
pop
cs
in
loop
sub
pop
je
les
jo
dec
xchg
mov
int
inc
int
testb
mov
jle
cld
sub
sbb
jmp
xchg
xchg
fwait
into
cmp
dec
std
mov
out
adc
ss
fdivrl
out
imul
mov
pop
setle
cmpb
add
neg
push
popf
movsl
nop
sub
inc
pop
push
push
rolb
in
clc
push
decb
inc
push
addr16
push
add
sbb
notl
out
xor
jecxz
jle
mov
fcmove
repnz
xor
pushf
cmpsb
outsl
xor
mov
cmpsl
push
lret
inc
js
pop
aas
sub
stc
pop
xlat
push
lock
scas
inc
xchg
shlb
das
jecxz
mov
and
push
neg
roll
pusha
scas
movsb
mov
dec
push
enter
daa
xchg
ja
test
pop
jo
out
out
icebp
rolb
fbld
nop
mov
add
lock
or
or
daa
push
push
hlt
sbb
mov
addr16
out
jbe
enter
xor
xor
pop
movsb
adcl
pop
jae
add
outsb
orb
das
jp
jle
js
call
leave
dec
test
imul
rorb
mov
push
or
xchg
fcompl
in
add
in
loop
and
xor
fs
or
insb
push
jne
leave
mov
push
ss
aam
add
aam
popa
dec
push
dec
mov
jle
jge
int3
pop
cmp
scas
dec
mov
aad
xor
inc
and
repnz
shl
and
out
inc
out
jo
push
rcr
cltd
jl
pushf
jl
xchg
subl
loopne
add
dec
mov
adc
inc
fwait
inc
rcll
adc
mov
mov
xor
and
insb
lock
push
lcall
mov
fcoms
dec
mov
jb
fldl
les
iret
cli
mov
in
in
push
pop
jns
jge
mov
and
xchg
loopne
fsubs
sbb
xchg
and
sbb
pop
jp
je
cmpsl
xchg
mov
loop
jmp
pop
test
or
push
jge
add
imull
push
fisubrl
bound
dec
dec
mov
js
bound
mov
popf
push
out
push
jae
cld
push
push
out
call
jecxz
lahf
jge
mov
repnz
stos
cwtl
in
mov
mov
adc
daa
mov
out
andb
push
loope
sub
ja
pop
dec
and
mov
aas
dec
and
dec
adc
cs
ret
or
push
aas
out
lds
push
scas
ljmp
jl
xbegin
cmp
mov
cltd
jbe
dec
repz
xchg
mov
enter
icebp
push
pusha
out
cld
add
les
cwtl
add
jp
mov
sub
mov
or
xorl
add
cmp
fwait
pusha
sub
sub
aad
divb
push
cmp
pop
mov
lahf
outsb
in
dec
sbb
pop
out
adc
add
adc
jecxz
and
lods
pop
and
ljmp
or
xchg
orb
and
gs
andb
add
shl
cs
gs
imul
jecxz
sbb
cmp
xchg
jb,pn
xchg
pop
fs
test
data16
inc
shll
push
notb
sti
loop
ds
rorl
cmp
lock
add
iret
out
sub
mov
sub
jmp
out
aaa
adc
or
subb
es
or
jle
adc
adc
loopne
xchg
pop
ja
ret
fdivs
es
out
ja
xchg
mov
aas
in
jp
fwait
cli
pop
pop
loopne
lea
repnz
push
rorl
mov
shll
dec
adc
cmpsb
inc
adc
pushf
pop
mov
push
ret
movsl
sbb
ljmp
xchg
add
into
push
out
push
fmul
lahf
std
mov
test
sbb
jecxz
dec
repnz
mov
mov
add
push
mov
push
pushf
popf
loop
aad
ret
push
addr16
mov
test
imul
mov
dec
mov
xchg
int3
inc
mov
and
jmp
leave
mov
imul
adc
test
push
mov
push
shl
in
std
mov
mov
jae
mov
sbb
das
pop
stos
call
fnstsw
push
fcomip
pop
fs
inc
out
ret
aad
shll
scas
loope
xchg
inc
mov
add
test
sub
addl
int3
fiadds
mov
xor
xchg
adc
js
or
xor
lcall
test
and
in
mov
int
popa
adc
stc
or
fildll
adc
imul
and
mov
loopne
fs
and
and
cwtl
add
in
dec
push
insb
and
pop
inc
and
into
loopne
jl
leave
dec
mov
lret
shll
xor
cltd
adc
inc
push
lods
mov
scas
mov
or
mov
add
syscall
xchg
je
pop
sbb
jnp
or
inc
push
int3
test
jo
insl
push
mov
es
lcall
mov
adc
leave
sub
out
push
sarl
pop
xchg
cmpsl
xchg
push
jge
sub
clc
fsts
cmpsl
cli
sbb
ja
pop
lods
lods
in
xor
stc
push
insl
add
in
movsb
in
and
cltd
fwait
jns,pn
cwtl
xchg
sbb
mov
push
cmp
jnp
jg
mov
out
cli
stos
mov
xchg
fdivrl
mov
xchg
mov
push
sub
cwtl
push
lock
mov
cmp
inc
fisubrs
shlb
in
push
mov
lret
mov
in
arpl
mov
lods
aam
mov
push
xor
push
or
or
pusha
lods
push
loope
mov
sub
aam
imull
in
sbb
sub
test
jl
xlat
push
or
adc
divb
jo
sahf
iret
jns
loop
mov
mov
sub
jae
out
adc
add
adcl
xor
rolb
mov
pop
xor
lea
jl
dec
cmp
mov
and
out
pop
sahf
cmpsb
in
mov
adc
adc
ss
mov
cmpsl
jb
div
clc
and
inc
int3
push
push
subps
int
test
sub
and
mov
sbb
mov
or
inc
decl
pushf
jg
test
push
in
inc
mov
lods
pop
cmpsl
fimuls
mov
and
cli
stc
mov
test
insl
sbb
stos
jge
xor
notb
fnsave
mov
and
fistpll
adc
and
cld
mov
dec
testl
out
cmp
dec
cltd
pop
inc
pop
pop
aam
ret
lock
jmp
ds
repz
cmp
gs
sub
call
pop
negb
mov
add
push
in
es
scas
popa
sub
dec
mov
stos
dec
dec
in
or
loopne
fs
push
test
shlb
jae
pop
shrb
stos
mov
rcrb
mov
loop
stos
das
jns
fldl2t
dec
and
xor
cld
xchg
aam
stos
add
dec
clc
lcall
lret
mov
movsl
sub
or
jp
push
sahf
inc
xor
shlb
xor
subl
mov
lock
sbb
cltd
lods
pop
or
clc
mov
std
jnp
rolb
push
mov
xchg
popa
notb
sbb
jns
mov
test
mov
adc
rolb
outsb
sub
or
and
movsl
dec
imul
fnsave
mov
leave
shr
sahf
sbb
push
mov
cltd
shr
xor
lret
in
pop
negl
in
in
mov
mov
and
in
shrb
hlt
fadd
das
or
push
cmp
pop
addl
xchg
sub
hlt
les
and
add
dec
fildl
adc
pop
lods
daa
adcl
adc
sbb
mov
push
jo
out
or
inc
loopne
mov
das
add
scas
jge
enter
jg
aas
xor
jns
push
aam
repz
popa
addr16
push
cmp
lds
inc
std
iret
enterw
inc
je
aam
outsb
lahf
loopne
out
mov
movsl
pop
out
pop
or
xchg
out
push
push
aam
push
stc
or
fimuls
mov
push
clts
mov
xchg
xchg
bound
aaa
adc
jge
clc
iret
rcrb
push
sub
pop
xchg
xor
test
int3
aas
or
mov
int3
lods
mov
jns
jmp
inc
push
loop
or
stos
mov
ja
icebp
jmp
add
jge
jns
jbe
inc
sub
cmp
ds
mov
das
jnp
jns
fwait
fwait
mov
mov
in
test
in
push
mov
scas
imul
xchg
pop
push
mov
push
jmp
ljmp
outsl
mov
cld
popa
out
or
icebp
out
mov
pop
mov
hlt
xor
negl
push
sub
scas
into
lods
fidivrl
enter
jle
int
or
push
cmp
push
aad
divb
decl
jmp
jb
jbe
mov
out
dec
pop
sbb
lret
inc
and
call
cs
in
sub
pop
lret
int3
pop
or
mov
mov
dec
and
dec
imul
cmp
jg
adc
lds
mov
pop
and
or
xlat
mov
pop
insb
sahf
fwait
sub
lret
in
push
fcomps
stos
mov
xor
xor
insl
in
and
xor
out
cld
fadds
jne
push
test
mov
push
cltd
imul
push
mov
imulb
iret
adc
loop
shrb
push
mov
xor
push
cmpsl
out
out
test
cmp
es
out
and
mov
imul
dec
sbb
pop
and
js
sub
in
js
gs
sub
gs
jne
aad
xorb
in
xchg
adc
xchg
sub
insb
insl
pushf
into
data16
jns
scas
mov
pop
jno
daa
jbe
and
inc
fidivs
xor
push
stos
pop
stos
sbb
cmc
frstor
iret
mov
push
popa
pop
xchg
xor
outsl
scas
adc
adc
jge
cmp
pop
lahf
pusha
sahf
ljmp
in
cmp
aas
inc
pop
sbb
jns
rcrb
pushf
mov
inc
scas
fstps
and
mov
xor
inc
push
in
int3
sub
push
out
fistps
or
out
mov
imull
inc
popf
push
jb
cwtl
pushf
or
push
jb
push
ret
lret
cmpsb
jbe
pop
fnstsw
test
inc
nop
xlat
xchg
jne
outsl
mov
mov
cmp
mov
scas
adc
xor
loop
cld
mov
ret
xchg
fsubs
push
mov
mov
jmp
or
clc
add
ret
jns
sbb
xchg
lcall
insl
mov
dec
addb
xchg
dec
cmpb
jmp
sahf
jns
cs
lahf
dec
cmp
jl
xchg
enter
sbb
push
int3
jbe
sub
ret
and
sub
nop
mov
mov
movb
aad
sbb
sub
xorl
add
sbb
and
jo
clc
push
pop
test
scas
jp
scas
std
aaa
mov
mov
pop
decl
test
test
sub
mov
lock
fistpl
and
shrb
mov
jp
lret
pop
inc
lea
mov
jae
xchg
push
and
add
and
or
mov
sahf
push
mov
jge
dec
inc
pop
sub
xchg
xor
cmp
lods
pop
push
pop
adc
pop
ljmp
lcall
in
mov
xor
fldl
addr16
xor
mov
pop
ret
or
aaa
imul
xor
cmpsb
popf
mov
adc
xchg
test
dec
jecxz
push
test
inc
lret
inc
ficoml
shrl
cmp
jp
push
add
jmp
cli
cmp
jns
add
int
jns
call
imul
fsubs
jo
sbb
outsb
lea
ret
dec
in
sub
call
or
test
sbb
mov
shll
mov
inc
rep
imul
jge
mov
loopne
cmpsb
fs
aas
not
and
sub
jne
jmp
inc
mov
paddsb
shl
ja
cmp
push
hlt
add
decl
test
repz
mov
js
rclw
lcall
test
decb
or
or
pushf
xor
inc
ficompl
mov
push
fs
push
shlb
add
push
adc
adc
mov
movsb
dec
mov
jle
inc
arpl
icebp
popf
inc
cltd
sbb
jle
cmp
repnz
sub
mov
fidivs
push
adc
xchg
push
cmp
push
or
sbbl
sub
xchg
iret
roll
std
rolb
dec
pop
sbb
xor
imul
sbb
push
pop
es
push
jbe
jmp
mov
fisttpll
inc
inc
in
loop
jp
shrl
es
lahf
leave
movsl
adc
dec
add
aam
dec
inc
adc
xor
add
jl
mov
insl
jge
xchg
inc
push
mov
xchg
jae
fs
neg
sub
jne
push
outsl
and
test
idivl
jp
and
xor
cmpsl
sahf
mov
outsl
dec
xor
scas
add
sub
mov
int
and
adc
dec
fcmovbe
hlt
adc
shl
xchg
enter
xchg
imul
mov
xorl
gs
aas
add
sub
bound
sub
mov
lods
out
xor
out
sbb
cmp
jo
sbb
andl
aas
jp
jge
aam
mov
std
xor
xor
xor
dec
negl
pop
pop
mov
xchg
jae
aas
push
int
daa
dec
gs
stos
js
test
jecxz
or
cwtl
outsl
mov
xchg
negl
mov
addl
or
or
jg
scas
addb
jmp
xchg
jge
xor
inc
xchg
or
inc
adc
aad
xor
int
mov
insl
lea
leave
mov
int3
push
and
push
pop
or
add
jg
xchg
fnstsw
xor
lret
push
sub
loopne
sub
jno
push
enter
outsb
fwait
jne
or
push
or
fildl
dec
jne
lret
mov
sub
cld
jnp
pavgb
mov
push
subl
mov
hlt
lea
mov
lock
pop
jo
pop
or
scas
ljmp
push
das
add
test
mov
push
sub
cmp
data16
pushf
aad
je
push
ret
jae
cmp
repnz
cmp
sbb
cmp
mov
push
add
mov
mov
pop
jo
dec
mov
repnz
jg
out
nop
mov
test
push
xchg
cmp
push
mov
repnz
push
mov
or
xor
mov
sbb
aas
js
dec
ret
jl
jne
mov
jg
loopne
arpl
jae
inc
dec
lret
sbb
in
call
mov
mov
push
jnp
sub
jge
jae
mov
xor
adc
dec
js
in
ret
icebp
call
mov
inc
orb
adc
cmp
sti
sbb
rcll
inc
aam
pop
mov
cmpsl
pop
add
mov
cmpsl
fs
fldcw
xor
mov
inc
mov
lock
lods
lahf
rcrb
adc
rep
stos
jp
dec
mov
fbld
mov
dec
outsl
inc
pop
dec
jbe
cli
xchg
jmp
sub
mov
iret
sbb
subb
out
jmp
arpl
int
fsub
jp
sbb
fisttps
inc
mov
push
xchg
push
sub
mov
dec
and
sub
test
xchg
mov
lahf
mov
sbb
into
in
incb
cmpsb
out
faddl
dec
dec
cli
push
dec
addr16
push
add
cmp
test
pop
loop
orb
push
pusha
insb
out
fldt
push
das
out
xor
ret
mov
cmp
jb
out
out
das
iret
ret
inc
shlb
into
cwtl
ss
or
mov
call
iret
mov
sbb
mov
add
cmp
xchg
xor
mov
and
stos
arpl
push
int
jbe
mov
mov
push
mov
je
scas
movsl
cli
movsl
jo
cmp
add
outsl
rcl
stc
rorb
stos
push
popf
shr
std
ss
jb
add
xor
scas
pop
cmp
movsl
mov
jns
jecxz
xor
mov
xor
clc
push
pop
cli
or
movsb
dec
in
mov
bound
sub
inc
pop
test
pop
sbb
or
xor
sub
inc
in
cmp
jnp
dec
ds
or
lea
cwtl
sahf
popf
pop
xchg
lret
mov
sub
clc
adc
test
and
cmp
adc
inc
cmc
xchg
mov
fstp
sbb
push
sbb
inc
mov
pop
push
push
mov
lock
sub
inc
sub
lds
popf
lods
xlat
call
jl
hlt
ror
fnstcw
ret
cmpsb
mov
into
data16
arpl
cmpsl
ljmp
xchg
jb
sahf
cmc
pop
dec
dec
jg
sbb
add
cli
sub
lods
shrb
sub
dec
insb
sbb
mov
sbb
inc
xchg
mov
test
bound
sbb
je
es
adc
mov
jge
mov
insb
mov
repnz
dec
sub
fnstenv
or
inc
or
xchg
aas
lret
cmp
push
movzbl
fdivl
clc
mov
lcall
push
ss
lret
lcall
ss
dec
imulb
jmp
rclb
sbb
pop
sbb
mull
xchg
ja
das
hlt
mov
dec
imul
and
xchg
lods
das
cmp
dec
ss
pop
fmull
repz
test
and
pop
add
cli
pushf
xchg
sbb
sbb
loope
xchg
mov
sub
aaa
cmp
mov
add
mov
mov
push
xor
lods
xchg
lret
arpl
push
mov
adc
inc
or
in
jg
popf
aad
mov
mov
fiadds
cmpsl
dec
incl
mov
test
mov
mov
dec
sub
mov
fstl
pop
fscale
loop
aaa
cmp
xchg
fadds
int
les
mov
gs
rcl
lret
jae
sbb
std
cmpl
mov
mov
test
test
int
cmp
inc
cli
xor
jno
pop
xchg
or
mov
cmp
movsb
pop
roll
stos
sbb
roll
or
xor
stos
dec
mov
clc
mov
adc
jnp
or
sbb
movsb
cld
dec
add
sub
into
in
mov
repnz
jno
mov
stc
sbb
dec
xchg
mov
clc
add
mov
les
mov
lds
dec
or
pop
xor
scas
sub
dec
xchg
push
mov
cld
cmc
pop
pop
mov
or
pop
pop
ret
add
outsl
dec
lcall
mov
and
aad
lcall
mov
arpl
movsb
jmp
stos
push
enter
mov
adc
mov
cmp
scas
xlat
sbb
mov
lock
mov
jnp
mov
ret
lock
rcrl
jecxz
fs
addr16
nop
pop
push
cmp
xchg
aad
mov
push
ret
mov
xor
roll
outsb
jne
enter
cmpsb
ret
mov
ret
inc
adcl
or
pushf
or
sar
adc
xor
insb
jne
xchg
les
xchg
and
cmpsb
lock
neg
or
test
stos
scas
pop
mov
cld
mov
icebp
adc
xchg
cmp
fidivrs
cmp
dec
lret
cmp
xor
cld
mov
lods
leave
rolb
stos
pop
or
sub
and
sub
pop
addr16
in
mov
push
push
leave
pop
mov
jbe
pop
inc
jb
mov
mov
loopne
stos
or
das
mov
rorl
sub
popf
js
rorb
pop
and
flds
mov
add
movb
cmp
sub
or
cmp
dec
lcall
test
mov
fcoml
or
leave
jo
cmpsb
or
jge
mov
out
sbb
adc
enter
and
xchg
add
shll
insl
in
jp
pop
pop
out
add
mov
push
sbb
je
mov
sub
call
lret
mov
mov
inc
das
or
cwtl
xlat
insl
int
cmp
testb
lods
sbb
es
shlb
fwait
mov
loop
xchg
mov
lock
push
lret
dec
mov
push
inc
out
rcl
sbb
add
js
pop
dec
test
lcall
pop
cmp
scas
add
stos
clc
xchg
cmp
jmp
call
scas
cmp
test
int
pop
ret
fcmovbe
or
jg
fcoms
add
sar
mov
or
push
jno
mov
inc
xchg
jp
addb
aas
es
imull
cmpsl
dec
push
int
push
xchg
stos
xchg
shll
fmul
jmp
pop
leave
movsl
jg
mov
imul
int
mov
iret
test
enter
push
add
in
negl
scas
call
inc
in
ljmp
lds
jns
icebp
sahf
outsl
lods
push
sarb
sti
dec
adc
mov
lahf
inc
test
fisubrs
xchg
lcall
sub
outsb
pop
mov
movsb
or
cmp
jmp
mov
mov
sahf
rcll
mov
push
or
js
scas
iret
push
lahf
scas
sub
inc
fstpt
popf
pop
int
and
lods
fists
adc
mov
sub
cmpsl
mov
icebp
sbb
repz
jmp
sub
jno
mov
cltd
mov
shr
imul
dec
inc
jae
stos
dec
and
pop
dec
push
test
pop
push
insb
push
arpl
sub
push
lcall
pop
int
inc
push
pop
repz
push
xor
dec
bound
fsts
pop
insl
xchg
push
dec
ja
dec
and
jl
mov
cli
push
pop
insl
mov
adc
and
sub
inc
push
in
int
dec
push
testl
xchg
or
mov
ret
ss
dec
mov
out
xchg
and
xchg
cs
sbb
sbb
inc
mov
and
scas
jb
xor
dec
jnp
sbb
push
das
jns
inc
clc
push
jns
inc
sub
inc
or
sub
jecxz
cmp
or
inc
ja
lods
daa
test
bound
pop
add
pop
fwait
lret
jb
enter
jecxz
mov
mov
into
call
pop
aad
stos
dec
mov
pushf
xor
pop
xor
pop
loopne
mov
adc
sbb
addr16
repnz
and
mov
bound
mov
jno
pop
xor
gs
xchg
push
int3
sbb
xor
adc
movsb
add
and
in
jg
dec
add
push
scas
fiadds
int3
jnp
lcall
nop
scas
pop
cmpsb
les
sbb
mov
sti
lea
xor
ds
rorl
aam
in
push
and
xor
jae
sbb
mov
mov
and
push
push
movsl
push
dec
fdiv
or
push
dec
mov
lods
jmp
sbb
call
mov
sar
push
scas
in
nop
dec
lret
adc
stos
stos
and
lret
loop
add
cmp
pusha
cmp
insl
out
shlb
inc
push
das
sarl
scas
out
and
add
push
lcall
mov
adc
xor
sub
mov
push
out
fisttpl
mov
es
cmp
xchg
repnz
and
fisubrs
and
adc
arpl
xchg
xchg
xchg
ds
xor
xchg
subl
xchg
rorb
jp
es
adc
mov
or
gs
arpl
jbe
add
adc
call
out
rolb
nop
add
loopne
push
mov
into
pop
or
popa
das
jge
pusha
sub
xlat
jl
aaa
out
jecxz
stos
clc
lods
dec
pop
xor
pusha
in
andw
mov
push
outsl
and
cmpsl
mov
int
lds
leave
xchg
mov
mov
or
subl
add
jbe
sbb
mov
push
mov
mov
or
lods
xchg
lahf
scas
xor
and
or
loop
aaa
loope
addb
mov
aaa
mov
bndldx
lcall
sub
push
push
icebp
dec
sub
outsl
in
pusha
sbb
mov
scas
cwtl
pushf
sub
fstl
mov
in
xchg
es
and
call
mov
lret
and
add
jo
add
dec
imul
aas
sbb
sub
pop
push
push
mov
add
cmp
sub
inc
scas
mov
pop
push
dec
call
leave
clc
jg
xor
or
mov
fs
mov
pop
pop
sub
notl
sbb
sbb
popa
out
mov
add
pop
add
stc
push
jl
rorb
mov
adc
and
sbb
es
mov
push
js
aad
outsb
bound
sub
dec
xor
enter
cmp
mov
pop
cmpsb
xor
fiaddl
je
lock
paddusb
leave
jb
sbb
cmp
mov
mov
fstpt
pop
dec
add
lock
cmp
sub
fists
lret
and
sbb
xlat
icebp
fs
inc
pop
xorb
aaa
cmp
xchg
insb
test
fstpl
mov
adc
mov
hlt
fadd
dec
mov
mov
loopne
loopne
xchg
mov
ret
decb
out
into
icebp
dec
xor
push
mov
jl
push
or
int3
mov
fsubrp
xor
pop
jle
xlat
push
mov
sbb
mov
js
mov
cmp
pop
out
mov
sbbl
es
push
dec
test
pop
mov
mov
xchg
push
in
mov
call
fdiv
icebp
subl
cli
jo
outsl
sub
mov
jbe
sbb
mov
ss
mov
in
lret
js
mul
repz
das
out
mov
outsl
add
inc
shl
xlat
xchg
outsl
into
rorl
roll
daa
test
call
in
xor
sbb
int
add
ds
dec
xor
jae
mov
int
mov
jb
aas
lock
and
push
fnstsw
add
adc
push
mov
pop
push
xchg
sbb
out
cmp
into
mov
mov
imul
or
pminub
mov
out
jecxz
into
testb
insl
add
xchg
and
insl
es
int
jae
xchg
pushf
add
insl
fistpll
mov
repz
and
int3
add
and
push
bnd
mov
xchg
and
jo
jno
mov
dec
and
ja
xor
inc
dec
push
cwtl
out
dec
add
sub
mov
cmp
push
xchg
rcl
xor
sbb
div
xchg
hlt
mov
and
inc
dec
adc
or
ret
ds
add
and
je
mov
mov
add
cld
fisubrl
push
push
mov
sbb
jp
pusha
pop
fnstsw
jbe
pop
insl
dec
sub
lea
jns
jg
adc
and
icebp
push
pop
inc
sbb
outsb
mov
lret
add
stos
inc
rcrl
xor
aas
rcll
adc
pop
subl
cmp
in
mov
es
loop
sub
adc
call
sbb
cmc
aam
push
cmp
xor
dec
ret
adcb
adc
cmpsl
push
cmpsb
ds
adc
jae
and
pop
hlt
cwtl
test
scas
stos
gs
cwtl
jmp
xchg
shll
in
add
stc
cs
mov
pop
into
pop
dec
lahf
push
notb
std
push
jp
lcall
pop
add
inc
leave
sbb
or
jmp
pop
ljmp
cltd
mov
cli
dec
push
or
leave
rorl
lds
mov
sub
addr16
xor
lea
jecxz
lock
in
hlt
fstl
arpl
jns
sub
repz
icebp
xchg
cmp
pop
repz
dec
mov
testl
movsb
sub
popa
aaa
adc
jb
sub
daa
movsb
xor
inc
cmp
mov
pushf
sbb
pop
adcb
dec
sti
jmp
xchg
out
stos
es
mov
ljmp
imul
cmp
dec
rcrb
sbb
mov
push
cld
movsb
mov
fdivp
aas
xor
lret
stos
cmp
in
dec
xchg
idivl
mov
out
inc
dec
sbb
inc
in
or
mov
enter
insl
xor
or
xchg
pop
mov
cwtl
scas
push
cmp
xlat
aad
cmpb
xor
adc
popf
fmulp
sub
cltd
dec
push
fists
cld
add
cmpsb
and
imul
lods
adc
lock
jo
mov
shl
push
idiv
pop
mull
mov
imul
lock
xlat
outsb
fcomps
rorl
cli
pmulhuw
sbb
sub
lds
pop
sbb
fstpt
cmp
mov
lret
leave
add
push
fsubrl
gs
add
sahf
mov
insl
jecxz
clc
stc
int3
imul
or
aaa
aas
sbb
out
in
pop
out
sub
int3
add
dec
sbb
jl
lods
xchg
call
pop
mov
shr
xchg
imul
fwait
xchg
and
or
movsb
lret
lods
cmp
cld
mov
lcall
mov
lds
xchg
mov
mov
lods
js
xor
xchg
daa
cli
in
inc
int
adc
ret
das
cmp
out
pusha
out
push
andl
test
outsb
mov
push
rcrl
in
roll
imul
fnstsw
ficompl
js
hlt
cmp
mov
cmp
mov
jl
mov
xor
repnz
leave
cmp
fbstp
daa
enterw
adcb
push
sbbl
test
mov
and
cwtl
js
lret
es
pop
cmp
sbb
cmovl
negl
addr16
rorl
or
pop
inc
std
arpl
aas
test
nop
call
ljmp
jnp
mov
mov
hlt
aad
sub
ficoms
push
sbb
mov
gs
jns
mov
dec
or
add
inc
scas
mov
push
inc
inc
mov
ret
xor
mov
imul
dec
lret
mov
and
gs
jmp
std
mov
mov
sub
cmp
sbb
shll
sbb
mov
addb
out
push
xor
fucomp
les
cmp
stos
and
rolb
rcrb
inc
pop
push
pop
xor
ud2
lret
mov
adc
test
sarb
xor
push
dec
xor
push
cmp
ljmp
sbb
mov
loopne
dec
fwait
lret
xor
xchg
ljmp
int
lock
shlb
leave
mov
addr16
cmovbe
icebp
mov
movsb
push
fucomp
data16
cmp
dec
outsl
xchg
xor
or
icebp
xor
xchg
xor
or
cmpsb
ljmp
fsubrs
adc
in
loop
push
cmp
push
inc
fwait
mov
hlt
mov
inc
imul
filds
mov
pop
dec
fistps
outsl
inc
sbb
outsb
shll
cwtl
adc
loop
in
gs
in
jmp
xlat
cmc
in
xchg
cmp
fsts
inc
jo
xor
fadds
jg
test
mov
adc
test
push
in
repnz
mov
or
lret
adc
in
lret
dec
add
arpl
add
rcl
mov
pop
loope
cld
rolb
mov
fcmove
loop
push
loope
adc
dec
or
lcall
int
scas
pop
and
negb
or
and
xor
flds
jmp
pusha
shlb
sahf
cld
adc
outsl
insb
stc
cmp
jmp
roll
das
cmp
fsts
fdivrs
push
sbb
dec
mov
xor
mov
movsl
dec
aad
lret
xor
adc
mov
pop
rcrl
mov
dec
or
jns
push
mov
loop
cmp
loopne
lret
in
jp
ss
cli
cmp
pop
dec
add
lahf
aaa
ljmp
cltd
dec
xor
fisubl
repz
in
sbb
inc
adc
add
sbb
popf
xorl
xchg
sbb
sarb
fdivrs
into
ret
sbb
cmp
fstl
ss
fstps
rcrl
hlt
fsub
push
outsl
inc
jmp
mov
adc
fisubrs
cmp
sbb
and
mov
or
icebp
decl
dec
mov
movl
and
pop
stos
aad
mov
out
aas
aas
xor
fmulp
cmp
jb
rcrb
fildll
add
test
into
lods
mov
cmp
lods
push
inc
fildll
jp
hlt
xchg
cmc
add
sub
insl
xor
and
fnsave
sub
shrl
jle
add
rcrl
pop
xor
pushf
cmpl
out
and
dec
fists
xor
ficompl
mov
mov
push
mov
mov
pop
add
sbb
mov
xchg
cmp
arpl
call
out
and
mov
mov
loop
sub
cmp
or
out
lods
pop
push
sub
rclb
jne
rolb
xor
in
rorl
loop
inc
cmp
adc
mov
push
orl
mov
add
push
cmp
pinsrw
cmp
ret
sbb
push
cmpsl
adc
xlat
xchg
cmp
fdivs
mov
shrb
inc
popf
cmp
fistpl
add
scas
push
xchg
fcompl
push
push
aas
nopl
lret
into
aam
inc
lahf
enter
add
pop
cmp
and
imul
sbb
std
repnz
outsl
dec
adc
pop
mov
repnz
test
daa
divl
jbe
lcall
push
mov
sub
mov
clc
outsb
data16
jl
mov
clc
addb
fisubl
movsl
mov
xor
push
pushf
fs
mov
push
addr16
mov
mov
mov
mov
cmp
stos
cld
aam
jl
sub
xor
push
cltd
call
xchg
jno
push
lahf
cmp
pop
insl
je
jl
dec
sbb
mov
xor
jb
push
mov
fnsave
popf
int
jge
mov
mov
inc
nop
push
push
fidivl
aaa
jle
mov
ja
jno
dec
dec
int3
cmp
cmp
mov
repz
push
xchg
mov
aaa
out
mov
fnsave
sbb
push
ss
btrl
stos
cmp
and
sbb
mov
sbb
daa
daa
xor
cld
or
add
or
insl
cld
mov
sahf
mov
imulb
xor
cld
or
sub
pop
mov
jmp
push
mov
mov
xor
incb
jae
aam
fildl
jne
xchg
stos
repnz
js
mov
cmpsl
aam
inc
xchg
xchg
pop
push
inc
or
mov
inc
push
xor
pop
sbb
fwait
ret
aad
imul
dec
dec
daa
pushf
in
lea
in
and
clc
repnz
add
sub
aam
ds
jmp
push
leave
push
pop
rcll
iret
and
adc
aam
jbe
shr
sti
sarl
test
sub
call
jbe
jne
es
cmp
sbb
xchg
cmp
pop
repnz
dec
xor
mov
idivl
lock
add
lods
rorl
mov
out
mov
popa
test
stos
push
jno
lods
mov
cmpl
sahf
xchg
pop
push
jge
sahf
roll
ret
outsb
lret
inc
and
sbb
rolb
dec
loop
inc
lahf
push
and
adc
daa
aaa
mov
rorl
xchg
lcall
cmc
mov
outsl
test
cld
push
popf
xor
cmp
les
mov
js
mov
or
xchg
cmp
dec
les
add
lds
inc
out
movsb
xor
push
out
push
fistl
or
jae
movb
xor
or
cwtl
icebp
xchg
fdivrs
adc
pop
shll
mov
das
in
scas
lahf
or
cmp
push
jle
pushw
mov
iret
pop
fdivr
into
pop
leave
inc
popf
decl
enter
aas
cmp
xchg
outsb
sbb
aad
push
xchg
push
xchg
loope
jg
pop
sub
scas
jl
mov
test
pop
rorl
sub
xchg
xchg
lcall
push
orb
pushf
and
push
push
sti
test
fwait
out
int
xchg
sahf
sahf
xchg
mov
or
pop
and
cmp
jb
push
movsl
cmp
dec
mov
and
pop
mov
xchg
in
imul
xor
fadds
mov
and
les
or
call
sub
repz
in
popf
mov
cwtl
push
fisttpll
xchg
pusha
push
nop
dec
xchg
mov
jo
shr
and
data16
scas
mov
sbb
outsb
mov
out
shl
pushf
test
sub
js,pn
fsts
hlt
les
sbb
sti
or
dec
ret
jns
dec
mov
notl
xchg
push
jl
jbe
mov
stos
adc
jmp
les
shrl
xor
stos
pop
xor
push
mov
and
dec
inc
push
jb
rcll
mov
or
pop
cmpsl
add
dec
pop
mov
push
in
scas
mov
fsubl
pusha
scas
fnstenv
push
cmpsl
cmp
xchg
cld
cmp
inc
sbb
mov
call
push
inc
or
fimull
les
xor
push
mov
imul
xchg
inc
and
scas
mov
cltd
sub
pop
sub
mov
or
xchg
push
mov
sbb
mov
addb
movsb
jns
mov
xor
mov
addl
push
fistl
inc
mov
addr16
arpl
mov
jne
ja
sbb
jl
cmp
ficoml
pop
fidivrl
xlat
lret
and
xor
xchg
addb
cmp
lea
push
loop
xor
outsb
cmc
push
ret
sbb
xchg
cmc
cmpsb
fldcw
dec
dec
mov
xor
mov
push
dec
add
pop
movsl
scas
das
popa
xor
xchg
sbb
pop
ljmp
fdivl
scas
and
xlat
test
inc
movsl
or
rcr
push
and
sub
pop
mov
sar
adc
fdivp
lods
inc
stos
call
adc
inc
jbe
aaa
xor
leave
test
sbb
pop
jne
call
test
icebp
lahf
jmp
xor
dec
mov
and
inc
lods
ficoml
data16
mov
jns
jae
div
stc
jp
mov
and
mov
iret
icebp
stc
loop
das
gs
test
push
sub
gs
lock
mov
pop
mov
stos
cwtl
lea
sub
mov
movl
mov
mov
mov
pop
pop
ljmp
movsl
fidivs
jb
test
fcomip
fnclex
push
sub
adc
pop
jge
enter
ss
cs
xor
and
cmpb
xor
addr16
xor
xor
or
jg
or
xor
shll
mov
loop
push
scas
sub
test
adc
inc
in
adc
shll
clc
sahf
mov
xor
dec
xor
ss
push
repnz
sub
jl
rcl
fwait
or
or
jno
cmp
sub
sub
push
loop
mov
cmpl
push
cwtl
outsl
mov
andl
aad
xor
mov
xchg
and
int
hlt
scas
jmp
lret
dec
call
cld
ja
xor
mov
sub
cmpsl
ss
pop
call
jae
mov
sub
lea
aas
pop
andb
dec
imulb
jno
xchg
dec
dec
sbb
ds
js
and
mov
xchg
inc
mov
cmp
dec
mov
lcall
xchg
rorb
adc
jg
mov
call
inc
pop
ja
jo
add
and
xor
int3
mov
mov
dec
add
dec
xchg
nop
adc
aad
sub
shll
out
fdivr
dec
roll
sbb
push
sarl
xor
push
mov
ds
insl
dec
xchg
movsl
or
xchg
xor
xchg
dec
addr16
jmp
out
adc
iret
inc
jbe
jle
ljmp
aas
xchg
xadd
stc
movsl
pop
mov
push
les
pop
add
mov
lcall
xchg
push
fildl
inc
sarb
pop
pushf
adc
and
or
test
ljmp
xor
mov
cmpsb
or
xor
je
out
jnp
mov
xor
sub
cli
mov
pop
dec
sarb
mov
dec
jns
dec
ret
test
test
mov
sbb
mov
lret
add
repnz
push
lcall
mov
aas
scas
xchg
cwtl
push
and
lahf
and
movsl
scas
push
pop
out
or
push
jbe
pop
xchg
outsb
jnp
cltd
or
loopne
xchg
xchg
fcoml
or
push
or
push
cmp
or
jbe
sub
pop
icebp
mov
mov
rcll
inc
test
dec
rcrl
subl
xchg
leave
fiadds
jno
mov
cmp
mov
test
fs
or
add
cmpb
loop
cmpsb
fs
in
pop
iret
jmp
fildl
imul
mov
clc
sarb
bound
and
push
lods
dec
xchg
rorl
aam
inc
outsb
scas
mov
mov
pop
cltd
lcall
lods
insb
call
jle
sbb
push
mov
sbb
ljmp
mov
into
testl
in
push
dec
push
and
lea
add
pop
push
jnp
repz
fcompl
dec
pop
mov
and
repnz
bswap
or
mov
addr16
inc
cmp
das
jns
gs
add
lock
xor
jecxz
mov
jo
shrl
bound
loopne
dec
dec
xor
mov
loope
cmpsb
into
adc
out
sub
test
or
mov
aam
lahf
sbb
cmp
scas
out
adc
jae
xchg
inc
adc
idivb
das
mov
jnp
cwtl
das
jecxz
icebp
xchg
enter
int3
inc
outsb
ret
into
aam
inc
sbb
or
lock
sub
loope
leave
lock
pop
ja
ds
inc
add
xor
mov
lret
call
sbb
add
hlt
mov
sub
xor
push
push
add
ror
loop
fisubs
imul
fistpl
fsts
div
lods
push
mov
add
jp
xorb
cmpsl
les
lret
fimull
icebp
std
mov
jge
fistl
fwait
ja,pn
arpl
xor
and
jo
jecxz
jb
cld
mov
stc
xorl
aas
cs
test
cltd
call
jns
movsb
or
or
test
sbb
stos
and
insl
shr
rcl
xor
dec
push
xchg
enter
ljmp
in
mov
pop
mov
mov
cmp
arpl
xchg
sbb
mov
add
dec
ljmp
out
adc
test
insb
inc
lret
mov
test
dec
in
xchg
jg
or
scas
lret
imul
xchg
pusha
xor
jl
sbb
enter
mov
int
adc
test
mov
sub
and
mov
dec
pop
pop
and
dec
xchg
lahf
movsl
push
inc
leave
addb
aaa
ret
pop
loopne
aaa
add
out
test
mov
mov
pop
sub
and
pop
cltd
or
mov
add
dec
mov
iret
inc
sahf
cmp
pop
mov
outsl
int3
test
mov
sbb
jle
dec
addb
call
mov
fdivrs
test
mov
testb
addr16
mov
cwtl
xor
sbb
dec
addb
jne
daa
pop
jmp
inc
inc
and
popf
shrl
and
cmp
icebp
add
ret
mov
pop
faddl
jge
out
jae
ss
fistpl
ss
daa
stc
mov
jb
inc
xchg
clc
into
add
or
adc
xchg
push
lea
mov
add
leave
push
jb
leave
fdivrp
test
outsb
gs
pop
loopne
jns
test
xor
imul
pop
adc
popa
push
xor
mov
pop
fisubrs
outsb
inc
mov
or
imul
repnz
cmp
andb
mov
mov
test
sbb
repnz
out
mov
shlb
xor
jl
or
push
xorl
jns
lret
sbb
test
rcrb
add
repz
aas
test
scas
or
loope
sbb
dec
jg
sub
mov
mov
mov
shrb
push
mov
jmp
xchg
sbb
push
les
push
ljmp
push
mov
lret
sub
pop
in
push
hlt
lcall
add
mov
movsl
lds
mov
ss
sub
ret
sysret
cmp
push
les
xor
loope
xchg
loope
xchg
movsl
add
dec
adc
shll
sbb
add
aad
xchg
mov
xor
aaa
mov
jno
test
ds
or
out
push
sub
iret
ljmp
pop
xchg
add
mov
jb
xor
popf
lcall
and
loope,pt
jecxz
push
aam
loopne
das
psubsw
out
jbe
jb
cmpsl
inc
inc
mov
sbb
js
or
cmp
sbb
xchg
aam
ss
sbb
loop
pushf
sar
js
lods
inc
pop
xor
out
pop
xchg
cmp
push
imul
jnp
sahf
lret
imull
sbbl
inc
loopne
sarb
and
hlt
sbb
mov
push
sub
loop
jecxz
and
das
push
xchg
popa
inc
and
xchg
push
jns
pop
lea
jle
dec
insl
fildll
nop
add
mov
jmp
nop
je
lea
fldl
cwtl
mov
dec
scas
xlat
and
je
jmp
adc
and
cltd
push
into
sbb
adc
clc
cmp
cmpl
fwait
lds
push
mov
add
mov
inc
xchg
cli
bound
mov
inc
mov
add
iret
sbb
dec
fldcw
mov
inc
push
aad
ljmp
pushf
pop
je
mov
pop
loopne
fisubrs
cmp
xchg
in
sub
fcomps
cmp
push
stos
rorb
ficomps
mov
int3
adc
push
push
and
icebp
rcrl
lcall
or
sub
pop
sub
or
xor
out
inc
sub
mov
es
mov
movsl
cld
jl
orl
cwtl
push
pushf
xlat
push
in
fnsave
lods
dec
aam
hlt
cmp
mov
sti
add
mov
mov
and
sbb
xchg
mov
icebp
stc
imul
pop
xor
cli
fadd
mov
push
dec
jae
sahf
cmp
test
sub
push
or
cwtd
pushf
pop
cli
push
lock
leave
dec
mov
push
cmpsb
lods
nop
ljmp
stc
sbbb
mov
lret
lret
aas
xor
out
inc
test
cmpsl
stos
sbb
fdivrl
test
adc
scas
outsb
jne
imul
inc
orl
outsl
loop
lods
mov
ljmp
pusha
xlat
movsl
dec
mov
filds
mov
test
rolb
rcrb
dec
mov
pushf
or
mov
pop
mov
and
and
sti
lcall
mov
mov
pop
dec
lods
jb
xor
fsqrt
in
and
ret
sbb
cmc
push
adc
xchg
cmc
fwait
imul
inc
es
xor
aas
icebp
mov
cld
ret
dec
inc
dec
sbbl
outsb
mov
sbb
mov
mov
lea
lret
mov
aam
mov
push
lods
xchg
sub
jne
jmp
adc
jae
push
ret
mov
add
jbe
pop
pop
iret
sarb
jp
or
lcall
xchg
scas
or
add
cmp
xor
xchg
cwtl
jecxz
xchg
insb
imul
jbe
xchg
jp
jecxz
adc
xchg
in
shlb
das
loopne
push
aas
aad
pop
jbe
pop
and
in
cmp
out
push
roll
test
int
dec
out
jmp
pop
pop
icebp
idivl
adc
fcoms
scas
cmp
fstpt
xor
xor
pop
scas
lock
cmp
dec
pop
or
lock
cltd
aas
push
jne
mov
rol
cwtl
sub
into
xor
cmp
stc
das
mov
dec
mov
pop
or
and
scas
add
cwtl
stc
inc
xchg
ficomps
and
adcl
xor
pop
and
push
dec
mov
addr16
out
testb
sti
imul
pusha
jmp
shll
sub
sub
add
int3
ror
adc
nop
loop
mov
imul
xor
or
int
fwait
dec
popa
in
adc
cmc
xlat
das
add
push
inc
out
lock
adc
push
push
lret
mov
js
xor
jbe
push
pop
and
mov
push
lret
pushf
push
mov
jbe
in
mov
in
sub
xchg
cmp
xchg
out
jns
mov
cmpb
testb
add
insb
outsb
pop
repz
cmp
fwait
cmp
or
ljmp
dec
dec
loopne
pusha
inc
movsb
icebp
fstpt
rclb
sbb
lods
add
pop
cmc
cli
scas
and
lds
mov
iret
jo
divb
dec
fmull
insl
bound
sahf
sub
loop
out
adc
push
sbb
js
notl
sbb
dec
jo
xor
sbb
jb
popf
in
lcall
pop
add
popa
daa
and
xlat
dec
rolb
cmc
xor
out
fdivrl
adc
inc
sub
cmp
gs
or
gs
ffree
xchg
and
xchg
mov
frstor
or
or
dec
lock
sub
inc
dec
and
mov
leave
jno
pop
push
inc
subb
sti
roll
cmp
sbb
mov
inc
out
xchg
hlt
push
mov
sub
and
add
ret
and
inc
bound
and
jle
pushf
push
push
pop
popf
sub
jp
add
pusha
pop
addr16
push
cmp
dec
call
stc
pushf
dec
add
addr16
inc
inc
dec
and
or
mov
push
cmp
sbb
sti
dec
mov
push
ffree
scas
cmc
xchg
pop
imul
sub
sbb
push
xchg
andb
fidivl
and
fs
repz
add
sbb
subb
jg
push
cmp
and
outsl
repnz
in
js
sahf
lret
pop
mov
dec
rcll
jecxz
test
jg
push
xor
and
gs
fldcw
mov
xchg
mov
test
dec
pop
push
sub
add
dec
mov
and
adc
or
xchg
push
movl
mov
std
pushf
daa
cmp
jmp
jne
addl
dec
xor
aad
or
sti
dec
jecxz
xchg
cmp
sub
mov
or
cltd
ljmp
sbb
mov
lea
lds
mov
xchg
add
jo
sub
loope
imul
pop
and
test
leave
push
add
loop
into
imul
mov
sahf
mov
pop
lahf
pop
lret
push
loop
insb
xchg
jne
pop
add
mov
imul
repz
outsl
es
repnz
fnstcw
push
notb
dec
push
cmp
je
xchg
dec
adc
pop
add
outsl
std
inc
jae
xchg
sbb
hlt
jl
xchg
or
push
cli
pop
lds
insb
pop
das
cmp
cmpb
out
hlt
jl
scas
cwtl
rolb
enter
pushf
pusha
fimull
mov
cld
mov
jmp
push
mov
xor
enter
add
in
test
mov
mov
std
mov
flds
psllw
popf
jno
dec
aas
jno
adc
js
jnp
mov
dec
scas
hlt
call
js
sub
xor
test
dec
or
popa
pop
xor
dec
jmp
lcall
pop
insb
dec
mov
arpl
lea
sub
pop
dec
push
out
es
sub
cmpsl
sbb
imul
jbe
sub
fistpl
push
sub
mov
fsubl
scas
dec
jae
imul
pop
pop
xchg
pop
pop
mov
mov
sbb
aad
mov
inc
pop
xor
psubusw
sub
jo
scas
shr
repnz
clc
adc
pop
cmpsb
mov
aaa
xor
data16
pop
mov
movsl
iret
xor
ja
add
dec
push
fwait
adc
js
movl
mov
lods
xorb
cmp
into
stc
add
jecxz
imul
jle
or
in
repz
jge
or
out
repnz
je
lahf
mov
repnz
rclb
int3
cmpsb
dec
sub
test
add
gs
mov
xchg
jb
jo
cmp
mov
movsl
and
punpckhwd
pop
scas
ja
dec
sahf
pop
sbb
push
add
lds
outsb
mov
or
sub
stos
sub
adc
sbb
mov
aaa
jp
cmp
xor
xor
scas
jnp
mov
sbb
enter
cmp
cmp
push
sbb
adc
jle
ljmp
mov
inc
mov
sbb
mov
stos
push
outsl
or
stos
sub
push
inc
push
dec
lods
adc
shll
sub
xchg
ret
test
hlt
inc
in
repnz
repz
adc
loope
mov
mov
mov
xor
int
in
cld
cwtl
flds
faddl
out
repz
fildll
jbe
or
mov
pop
fisubrs
or
mov
fistl
xchg
stos
dec
fbld
mov
fwait
data16
inc
faddl
xchg
fstpl
out
mov
push
mov
dec
sbb
sub
sub
addr16
push
rcrb
or
clc
fldenv
sbb
js
lods
push
pop
stos
movsb
in
inc
push
inc
xchg
mov
inc
jmp
je
in
mov
pop
push
loopne
rol
test
mov
xchg
dec
jo
sub
jl
daa
xlat
andl
movsb
jge
cmp
mov
jl
sti
cmp
xchg
pop
sub
mov
test
out
inc
mov
or
pop
sub
shlb
jnp
test
pop
ficoml
cmp
stos
sbb
xchg
loopne
push
mov
adc
mov
xor
call
cmp
inc
test
ja
insl
fistl
or
jb
mov
xchg
jae
xlat
into
mov
in
jl
stos
imul
sti
cltd
sbb
adc
and
mov
pop
cmc
pop
out
ljmp
jo
add
addb
and
nop
ss
mov
add
jg
cmp
or
mov
mov
mov
push
pop
int
gs
sbb
jmp
add
std
pusha
test
mov
xor
cltd
int
adcl
push
push
and
insb
mov
popa
subl
mov
out
fs
mov
jb
pop
xor
sbb
cmp
mov
outsl
xchg
lds
mov
aam
aas
scas
adc
mov
mov
pop
sbb
sub
xor
mov
es
ds
add
rcll
mov
add
fwait
mov
loopne
inc
ljmp
stc
repz
rcrb
pinsrw
sub
fildll
mov
loopne
push
mov
sub
dec
fisttpll
divb
lea
outsl
mov
jbe
loope
test
je
jo
sbb
xchg
and
notl
mov
leave
sub
cwtl
js
lea
loop
jbe
mov
loope
mov
daa
mov
add
cmpl
jle
nopl
sarl
test
jbe
bound
mov
and
mov
adc
movsb
in
jo
mull
mov
adc
leave
or
rcl
xchg
push
fstps
js
loopne
cmp
es
xchg
adc
push
std
enter
jbe
es
hlt
mov
iret
dec
xor
cmp
xchg
sbb
mov
sub
add
imul
movsl
aam
jg
loop
mov
inc
fimuls
insl
out
cmp
mov
into
das
sub
cmp
pop
mov
push
jb
pop
pusha
shrb
mov
decb
mov
fisubrs
push
inc
xor
pop
lret
loopne
test
or
xor
es
jne
daa
shlb
lcall
and
push
rorb
xchg
fmull
dec
add
push
adc
sbb
negb
or
cmpsb
lea
mov
mov
add
sbb
sbb
popa
sub
cmpsb
sub
dec
shrl
ror
iret
xlat
mov
sbb
in
add
les
xadd
iret
mov
inc
rclb
xor
add
aam
xor
or
jecxz
push
and
enter
std
jnp
and
mov
push
or
mull
pop
pop
shlb
pop
mov
in
arpl
popf
ret
sbb
cmp
jae
out
mov
ss
pop
jnp
ret
mov
or
test
fisubl
loopne
lods
js
fmul
cmc
nop
and
cmp
enter
xlat
add
cli
mov
cmpsb
gs
push
and
xor
call
outsb
insb
mov
lcall
fcoml
shr
aad
mov
or
mov
ja
jmp
sbb
mov
mov
xchg
push
dec
jg
stc
rorl
or
les
testl
and
icebp
in
xor
mov
lahf
aaa
jns
jae
outsl
ds
in
adc
mov
in
pop
icebp
cwtl
pop
movsl
sbb
in
int
push
xlat
xchg
pop
push
add
inc
shlb
ret
clc
jg,pn
inc
pop
cmp
scas
xchg
mov
add
sti
mov
mov
xchg
fildl
mov
push
mov
ss
sub
cmpsl
mov
jns
cmc
add
jle
cmp
cli
popa
push
dec
cmp
mov
mov
push
arpl
out
cli
cmp
mov
loopne
pusha
pop
lahf
sbb
add
movsl
data16
push
mov
fbld
addl
out
outsl
das
stos
inc
jmp
pop
jp
test
rcl
mov
cmp
cmp
mov
cmpl
or
daa
cmp
loop
xlat
pusha
mov
lcall
fimuls
in
dec
leave
outsb
or
mov
sahf
sahf
insl
cmp
push
rcll
add
pop
loope
loope
ja
inc
mov
mov
mov
outsl
cwtl
sub
jbe
pop
xor
subb
push
mov
stos
outsl
dec
js
daa
pop
mov
sbb
lahf
push
xchg
cmpsl
rcl
loopne
enter
push
ds
movsl
mov
sub
mov
ret
aad
pop
aad
mov
jnp
adc
pop
lahf
mov
sbb
cmp
cmp
xchg
and
mov
lret
sti
xor
mov
mov
and
sbb
xchg
xchg
test
cmc
sbb
mov
sub
lock
icebp
iret
push
fiadds
cmp
pop
push
add
imul
imul
cmpsb
in
lcall
call
jne
sbb
idivb
loopne
fcomps
aam
cltd
popa
push
shrl
popf
cld
out
push
imul
clc
aaa
push
lahf
add
not
push
adc
clc
mov
or
add
mov
fmuls
sbb
call
adc
daa
push
test
vrcpps
hlt
jmp
dec
push
test
out
cmp
and
cld
out
ds
cmp
cltd
fistl
xchg
and
inc
sub
sub
jge
pop
orl
cs
add
mov
adc
sti
push
xchg
or
mov
rcr
pop
sbb
push
aam
sub
sti
loope
and
inc
mov
inc
test
imul
and
les
fsub
push
idivl
mov
cltd
or
push
and
inc
in
pop
xchg
xor
adc
and
jp
add
nop
xor
jb
cs
dec
dec
xlat
sbb
push
and
sti
lcall
mov
and
sub
sub
enter
push
ffreep
pushf
sub
push
popa
rolb
and
hlt
repnz
pop
jl
xlat
movaps
dec
push
arpl
fistpl
lods
sub
and
sub
xchg
dec
imul
ja
xchg
idivl
test
xchg
mov
jl
or
bswap
mov
sbb
sti
lret
pop
rcrl
and
jp
xchg
out
pop
and
stos
sbb
leave
add
mov
mov
dec
mov
pop
je
loope
hlt
loopne
xchg
into
mov
jae
sub
adc
insl
daa
ss
cmp
and
lcall
incb
loop
sub
lds
aam
sbb
clc
jae
or
jo
add
fwait
int
push
out
pop
push
dec
nop
pushf
mov
mov
cmc
jae
sbb
ds
out
add
je
inc
jmp
ds
pop
cmp
js
imul
jnp
pop
enter
arpl
or
cmp
or
hlt
jg
lahf
mov
dec
popf
pop
lds
fmul
out
or
add
out
push
call
mov
test
xlat
fcmovbe
inc
arpl
test
das
movsl
jmp
ffreep
dec
jns
push
js
push
dec
jle
sub
call
lods
add
ret
int3
jge
xchg
lea
push
mov
xor
xchg
xchg
jp
jb
jl
fwait
nop
xchg
sti
cs
sub
aas
dec
lds
test
mov
mov
insl
nop
lds
jae
dec
mov
jl
pop
push
dec
pop
pop
out
inc
loopne
mov
adc
or
insl
and
cwtl
aad
xor
leave
mov
popf
sub
lock
inc
movsb
dec
mov
outsl
and
xor
dec
xchg
mov
sbb
and
repz
mov
mov
aad
cld
bound
fstpt
cltd
in
push
adc
sub
insl
outsl
jnp
jmp
mov
dec
push
je
push
add
xchg
mov
inc
mov
jl
movsl
xchg
adc
adc
cs
add
mov
and
xor
je
xchg
cld
xor
mov
add
imull
orl
idiv
xchg
inc
push
cmp
cmp
inc
ror
stos
cmp
repz
iret
xor
int3
add
ffree
jnp
out
add
in
adc
push
push
ja
mov
out
dec
ret
gs
nop
lret
xchg
int3
cmp
roll
add
sbb
popf
shlb
in
iret
popa
xchg
cwtl
cmp
cs
ljmp
pop
or
push
or
out
dec
and
mov
xchg
mov
addr16
popa
enter
pop
and
cmp
xor
cltd
insb
vcvtpd2ps
mov
lcall
orb
pop
subb
jge
mov
inc
jb
clc
pop
insb
xor
out
mov
out
call
sbb
xchg
cs
push
ja
les
js
add
imul
adc
fstpl
leave
xchg
addr16
pop
mov
push
xor
jae
mov
ret
and
adc
mov
mov
orl
rorl
hlt
or
lahf
or
movb
std
pop
sub
sbb
dec
outsb
mov
and
or
in
xchg
sub
mov
addr16
cmp
addr16
fmuls
es
imul
ja
fnstcw
jmp
out
or
xchg
into
int
sbb
cmp
push
dec
dec
xchg
cmp
sbb
mov
repnz
stos
xor
inc
pop
pop
inc
and
and
mov
sti
lds
out
sub
inc
dec
ret
icebp
decb
cmpsl
adc
cwtl
pop
outsb
sbb
or
imul
andl
leave
scas
and
xor
mov
mov
xchg
ss
daa
jle
pop
bound
insb
rolb
cmp
repnz
jmp
pop
pop
lods
inc
icebp
addr16
cld
or
or
in
mov
and
and
mov
fcmovnb
idivl
and
mov
and
mov
stos
pop
mov
out
mov
and
push
pop
imul
out
add
lcall
out
push
adc
sahf
xchg
aad
mov
repz
mov
sbb
sub
js
jmp
mov
pop
xor
sbb
mov
inc
repnz
fwait
shl
ja
adcl
std
xchg
mov
sub
push
daa
xor
orb
lcall
hlt
and
fwait
or
loope
xchg
inc
push
fs
sbb
add
sahf
mov
loope
mov
xor
cmp
in
inc
cmpsb
jl
push
sub
jne
or
dec
jns
in
les
dec
lret
test
add
xchg
hlt
jns
test
repz
fstpt
sbb
out
into
jecxz
outsl
daa
out
addr16
lcall
outsb
jae
loope
jmp
sub
sub
mov
and
sub
movl
mov
repnz
add
ljmp
push
scas
lcall
lds
loope
pop
push
enter
push
mov
push
cmp
and
sub
mov
or
adc
cltd
mov
stos
pop
jo
shr
cmpsb
push
add
fadd
fdivrl
ljmp
out
nop
sahf
mov
ljmp
push
and
inc
pop
sarb
pusha
mov
je
popa
pop
or
jmp
js
fwait
cwtl
int
cmp
cwtl
jl
fwait
dec
adc
lock
aad
pop
pop
sbb
add
push
in
jnp
mov
jnp
ljmp
dec
pop
xchg
jb
sub
jo
jbe
inc
lds
add
or
and
daa
xor
stc
sbb
mov
add
clc
adc
mov
js
push
mov
adc
test
out
mov
imul
dec
jp
sbb
mov
shll
test
call
push
jmp
or
leave
in
lock
jne
xor
push
in
jge
jae
aam
in
jmp
lods
fucompp
subl
fisttps
popa
nop
hlt
pop
or
lock
lret
mov
and
insb
sbb
mov
imul
clts
sbb
enter
xchg
dec
sbb
aam
push
fsubl
fistl
jno
stos
jp
pop
fsubrs
jns
mov
fisubrl
fldl
cmp
sub
ss
dec
mov
popf
xor
mov
ret
dec
dec
stc
push
lods
lcall
push
std
and
addr16
push
pop
xchg
aam
out
test
mov
add
mov
xor
inc
mov
clc
clc
in
cmp
jmp
pop
sbb
scas
fbstp
mov
test
loop
sub
sub
popf
jmp
xor
mov
lret
jnp
lods
out
mov
cmc
add
daa
addl
imul
xchg
inc
ja
jbe
push
inc
sub
sbbb
pop
loop,pt
or
aam
mov
movsb
leave
mov
push
movsl
sbb
es
jmp
mov
sbb
jge
push
lods
push
mov
lcall
sub
inc
imul
push
in
int3
pop
aam
jo
daa
daa
lret
and
pop
cltd
sbb
jbe
or
inc
hlt
mov
insl
mov
das
jecxz
stos
stos
ja
shlb
xchg
outsb
movb
fstl
pop
fcoml
shl
or
xchg
test
fwait
ret
sbb
rorl
adc
mov
and
pushf
ds
inc
inc
sbb
push
pushf
scas
movsb
je
mov
frstor
in
sbb
out
fildl
ror
ss
inc
and
rorb
es
push
lock
cmp
mov
ret
aad
notl
cmc
outsb
or
fwait
dec
inc
cmc
js
xchg
pushf
leave
mov
or
mov
mov
xchg
xchg
lea
sub
test
movsb
mov
add
pop
adc
stc
lock
or
add
xlat
ret
cmp
inc
push
adc
add
xchg
out
cmpsl
xlat
pop
jnp
sbb
outsb
fcomip
mov
into
scas
jno
jnp,pn
scas
idivl
insb
mov
adc
sti
cmp
xchg
in
sub
loope
xorb
bound
ret
and
int3
mov
test
popf
ljmp
cmp
xor
ljmp
movsb
jns
jp
loope
outsb
scas
cli
fcoml
jmp
sub
iret
repz
adc
fsubrl
cltd
mov
icebp
mov
pop
sbb
push
aas
push
inc
rcrl
jl
sbb
lods
or
pop
push
jno
cs
pop
jmp
pusha
jne
mov
dec
test
stos
mov
push
dec
inc
jmp
push
and
loop
cwtl
aam
movsl
jmp
movhlps
clc
testw
mov
pop
shr
andb
xchg
das
fwait
daa
cmp
popf
add
xor
mov
and
dec
jg
jmp
pusha
mov
adc
orb
popf
neg
jns
jno
jnp
sbb
clc
test
sbb
adc
cmpsl
xchg
loop
push
push
sbb
mov
cmpsb
cmp
mov
mov
ret
add
repz
and
mov
outsb
daa
enter
push
stc
push
aas
push
adc
popf
sbb
and
fmuls
lcall
xor
jo
aas
sbb
adc
test
es
shrb
jmp
jae
repnz
dec
aas
lret
fwait
cmpsb
pusha
push
jg
cmc
leave
or
cs
lcall
fstpt
xlat
mov
mov
nopl
mov
cmp
test
mov
and
test
sbb
dec
xor
xchg
test
imul
clc
fs
mov
rolb
or
or
ffree
stos
into
scas
call
xor
push
dec
mov
push
mov
push
adc
out
sbb
mov
insl
jmp
gs
nop
out
mov
jne
mov
lods
pop
jnp
test
fadds
or
leave
xchg
imul
or
dec
push
sub
cli
lock
out
rorl
push
xor
xchg
fimuls
push
dec
stos
call
or
loope
pop
mov
xchg
stc
gs
sub
and
push
mov
pop
pop
jnp
pushf
int
call
subb
xor
mov
in
test
sbb
adc
je
inc
pop
lods
adc
jecxz
jno
lcall
cmp
sbb
popf
rolb
mov
xor
fs
call
mov
incb
stos
roll
dec
aas
sub
add
push
sbb
dec
jno
lret
fs
mov
xchg
pop
hlt
cmp
xor
mov
dec
dec
pusha
loop
push
arpl
mov
scas
loope
pop
loope,pt
inc
loop
stos
cli
dec
test
insl
push
inc
jg
nop
inc
xor
fs
aam
inc
mov
cld
or
fists
sbb
cmp
sub
cld
imulb
xchg
test
arpl
xchg
fnstsw
data16
sbbb
xchg
loope
sbb
data16
pusha
sub
xlat
in
dec
add
enter
ret
shlb
mov
stos
mov
je
fcompl
jo
call
xor
ljmp
and
test
push
xchg
repnz
out
pushf
or
faddp
add
push
push
and
xchg
xor
ljmp
das
rorl
mov
call
jo
push
push
pop
shlb
icebp
sti
dec
out
outsb
push
adcl
dec
sbbb
mov
loopne
lcall
mov
aaa
sub
mov
xchg
faddp
cmp
mov
sbb
mul
jg
repnz
jmp
fnsave
mov
iret
sbb
adc
and
sbb
fcmovnu
adc
andb
cmpsl
fwait
pop
inc
mov
pop
xchg
pop
repnz
and
xchg
test
into
stos
enter
pop
test
movsb
mov
movsb
je
cmp
xor
imul
mov
loopne
jno
ljmp
gs
cmp
inc
push
sbb
sbb
fwait
jb
and
aaa
cmpb
lods
out
dec
push
insl
ljmp
cmpsb
pushf
or
aam
push
arpl
and
push
push
aad
test
incl
push
mov
popf
imul
lret
xchg
and
fidivrs
aam
mov
push
push
sbb
ljmp
mov
repnz
mov
lock
cmc
subl
mov
dec
add
repnz
push
xchg
subl
and
scas
ficomps
mov
ror
lods
push
scas
push
pop
inc
ficompl
sbb
shlb
push
mov
hlt
or
mov
not
cmc
nop
dec
adc
cmpsl
inc
lods
or
lret
cli
push
loope
test
in
mov
or
sbb
aam
sbb
popf
sti
xchg
and
daa
nop
adc
cmpsb
je
inc
pop
dec
lods
cmp
add
jle
adc
pop
addl
push
cmpsl
outsl
lods
inc
ljmp
sbb
ret
ret
stos
sub
stc
and
lods
fdiv
jno
pop
push
mov
shll
dec
fisttpl
mov
xlat
push
mov
xchg
add
add
push
test
jmp
shrb
xchg
inc
int3
inc
testl
inc
add
xor
sub
shl
jae
pop
cld
fstl
std
push
out
jns
stos
push
sbbl
in
sub
andb
daa
lock
bound
into
dec
out
xchg
xchg
sub
inc
fcoms
cld
push
mov
push
mov
ret
push
mov
or
test
mov
or
dec
jns
mov
xor
lock
fwait
inc
fs
fists
test
sbb
and
xchg
ja
xlat
jno
xchg
out
ret
adc
push
adc
push
fmuls
out
or
lock
ret
loopne
push
sub
push
xor
adc
ds
out
std
movsb
mov
in
pusha
inc
cmp
in
int3
cltd
add
orb
std
into
xor
dec
je
out
or
cmp
popa
cmpl
inc
stos
iret
bound
sbb
xor
lret
loope
repz
inc
bound
lods
or
xchg
int
adc
xchg
bound
aas
sbb
lods
add
mov
popf
xor
push
stos
outsb
and
add
movsb
nop
and
sub
mov
xchg
mov
mov
imul
sbb
scas
dec
in
mov
jne
mov
aad
jp
insl
ja
jmp
aam
mov
loop
jmp
cltd
ret
mov
stc
xor
mov
mov
dec
dec
mov
aas
mov
inc
sti
rclb
cmp
mov
out
out
popa
or
in
arpl
push
push
jge
adc
test
stc
mov
ret
add
sub
pop
mov
dec
ret
in
mov
pusha
sub
ret
sub
rorb
popa
lock
subb
sti
stos
in
dec
in
stc
jns
sub
inc
cmp
inc
mov
pop
mov
adc
scas
stos
mov
add
dec
inc
sbb
jle
add
aam
mov
addr16
in
push
mov
orb
jg
adc
add
shrl
adc
xorl
sahf
sbb
jb
sub
cmp
xor
dec
nop
sub
iret
mov
sub
cld
lea
xchg
pop
stos
aam
mov
xchg
push
dec
sarb
cmp
outsl
lods
jle
sahf
shl
pop
dec
jnp
js
lret
add
dec
ja
dec
ss
leave
cmp
fs
sub
mov
mov
hlt
and
push
add
mov
cmpl
repnz
cmp
adc
fmull
mov
push
pusha
test
out
add
mov
addr16
jecxz
sbb
test
xor
cmp
out
outsb
xchg
pop
dec
mov
repnz
scas
xor
mov
jge
cmpb
shl
std
xlat
jp
fs
jp
fldenv
in
sbb
xor
mov
push
xorb
cmpsb
adc
add
sahf
mov
jecxz
mov
add
add
xsavec
sti
loop
in
adc
push
mov
push
sub
ja
jns
xlat
hlt
ja
dec
inc
aad
or
pop
ss
fs
jg
add
or
push
mov
es
je
dec
add
addr16
xorb
in
into
mov
add
and
insl
test
xor
and
cmp
sub
andl
inc
es
mov
nop
test
lret
adc
mov
dec
mov
ss
mov
sub
je
fnstcw
xchg
pop
mov
iret
pop
push
push
out
sbb
jno
clc
inc
ljmp
or
inc
shl
cmp
out
frstor
insb
call
test
enter
in
movsb
mov
andb
mov
push
xor
int
aad
pop
sbb
jae
sub
cmpb
les
jmp
shrb
xchg
les
imul
or
incb
fadds
push
xor
jp
dec
sub
and
dec
movsb
fimuls
lods
lods
inc
sbb
lock
fsubrl
add
scas
test
add
adc
or
loop
mov
daa
mov
and
ror
hlt
cmp
hlt
icebp
mov
pop
or
mov
xor
in
sbb
mov
call
dec
inc
mull
fisubl
rcll
adc
jnp
ljmp
gs
push
push
jl
popf
cs
pop
pop
pop
cmp
xor
jge
mov
ret
xchg
jge
imull
cmpsl
mov
popa
jmp
cld
sub
mov
jb
inc
shrl
les
adc
add
int
sbb
mov
jo
cmp
push
mov
das
mov
pop
js
gs
jae
xchg
inc
jo
jbe
xor
sbb
aas
mov
in
mov
sbb
lret
adc
out
pop
ret
rcrl
inc
mov
hlt
mov
lods
lock
cmpsb
push
add
negb
and
push
xor
mov
clc
xchg
hlt
mov
testb
cmp
outsb
aam
loopne
xchg
sbb
insb
push
and
je
scas
dec
fxch
pop
cmp
out
lods
movsb
cld
xor
rorb
ja
sbb
fsub
mov
in
ret
pushf
or
sbb
sbb
add
aaa
fs
inc
and
loope
mov
mov
mov
nop
or
sub
test
idiv
aad
arpl
cmp
inc
inc
popa
xchg
out
ja
cmp
lods
addl
loopne
rcrl
cmp
push
xchg
neg
xchg
xor
addb
add
xchg
loopne
sbbl
sub
xor
and
jno
and
sbb
jb
jnp
hlt
icebp
clc
cmp
in
mov
popa
popf
xchg
mov
fsubl
push
pop
dec
and
shlb
cmpb
push
ds
pop
and
cmpsb
cmc
in
adc
xlat
fidivrs
or
out
jg
int3
cmp
sub
daa
pop
repz
out
insb
cmp
cmp
out
aad
mov
subb
ja
xor
xor
inc
push
int
les
mov
in
xchg
testb
dec
sub
mov
xchg
xchg
aad
adc
cmc
push
imul
push
out
jno
roll
push
jp
fistpll
jne
mov
fadds
leave
or
inc
jns
cmp
inc
cmp
sbb
pcmpgtw
ljmp
outsl
add
pusha
fs
push
or
pop
orb
insb
data16
decl
imul
push
pop
adc
and
mov
cmc
movsl
sbbb
out
aas
test
call
push
mov
xchg
mov
mov
icebp
andl
inc
lret
dec
mov
fcompl
out
inc
std
push
push
in
arpl
shll
mov
sub
and
ja
pop
push
mov
lcall
lret
nop
add
ljmp
mov
xchg
jmp
mov
xor
addr16
xchg
pusha
notl
push
arpl
jge
outsb
mov
pop
jmp
hlt
repz
test
inc
mov
pop
arpl
mulb
mov
mov
sub
cmpsl
xorb
push
fistpll
mov
rcrb
ja
mov
adc
les
cli
xchg
shlb
xor
pop
add
mov
insl
cwtl
clc
mov
ret
aaa
out
das
out
inc
mov
out
push
in
mov
stc
aam
mov
bound
mov
lret
test
push
out
repz
mov
push
sub
sub
cmp
sarl
js
lahf
ret
lret
mov
sub
out
fisubs
aas
push
push
adc
movsb
cltd
xchg
shlb
pop
pop
fisubl
std
arpl
ss
lea
notb
sub
sar
loopne
jecxz
fldenv
lret
mov
inc
pop
pop
dec
xchg
aad
das
imul
cmc
aad
dec
lret
mov
int
sbb
push
dec
mov
mov
dec
xchg
fwait
int3
andl
cmp
cmp
cld
inc
int
push
or
aaa
das
cmp
and
add
xorl
mov
mov
jo
js
pusha
sub
lea
cmpsl
adc
fiadds
xchg
gs
mov
push
mov
inc
sub
xchg
dec
jl
shll
or
aaa
in
or
in
dec
aam
push
lods
pushf
pop
mov
hlt
lret
fwait
movsb
cmp
push
pop
xor
rorl
cmp
cmp
mov
out
cmp
jl
stc
push
or
pop
lret
or
dec
mov
push
das
in
jp
insb
test
test
xlat
push
mov
and
jo
jbe
pop
iret
outsb
loopne
add
enter
sbb
jp
adc
add
sub
in
push
pop
mov
push
mov
or
and
mov
or
into
fldl2t
jno
or
sbb
mov
and
adc
cmp
leave
aas
rcrb
decl
or
les
sti
adc
es
dec
inc
loopne
pop
lods
jno
andb
mov
cmp
inc
sbb
sub
or
ja
addr16
push
dec
cld
mov
insb
gs
mov
iret
test
pop
imul
ret
add
push
xchg
loop
mov
mov
sbb
fsubl
ficoml
iret
push
aaa
ss
mov
sbb
inc
aad
dec
sbb
cmp
mov
fsqrt
xor
sbb
push
xchg
xor
dec
incb
sub
dec
or
inc
xchg
pop
pushf
mov
push
pcmpeqb
xchg
jnp
dec
cmp
mov
ret
jp
cs
stos
ja
dec
jmp
rcll
pop
pop
mov
cmc
dec
push
mov
and
and
xor
and
stos
sub
hlt
and
xor
lahf
mov
add
jecxz
sub
adc
or
and
jo
sbb
cmp
pop
xlat
adc
or
or
xchg
ss
cwtl
scas
adc
popf
ss
jnp
xchg
cmpsl
or
dec
loopne
and
sbb
mov
cmp
das
pusha
shll
cmpsb
inc
add
sarl
jmp
mov
dec
loop
sub
lahf
xchg
test
dec
dec
add
sti
and
cmc
and
and
xchg
faddl
rorl
lahf
lahf
mov
ret
sub
xchg
xor
adc
jl
lahf
das
jnp
lret
cmp
lea
outsl
clc
xchg
jl
lods
push
push
sub
and
mov
or
daa
mov
and
cmp
int
xor
in
jg
int
test
mov
cmpb
xor
adc
or
das
jmp
jae
mov
aad
or
jne
jge
rcll
mov
in
andb
pop
mov
call
sub
and
cltd
mov
dec
jbe
pop
lret
pop
sub
jb
imul
mov
popa
push
xor
stos
xchg
pop
ret
ss
jns
sar
sub
rorl
mov
test
pop
push
sarl
lahf
dec
sub
mov
sub
js
or
xor
adc
mov
xchg
pusha
add
leave
test
fistps
push
std
pop
push
stos
mov
iret
xor
loope
lret
add
inc
repz
sbb
cmp
mov
sbb
sbb
mov
add
scas
ret
push
xor
add
scas
test
shll
inc
call
cmpb
sub
lahf
clc
push
leave
les
inc
sbb
ficoml
mov
fimull
adc
push
lret
sahf
stc
repz
jb
pushf
sbb
or
or
xlat
pop
stc
sub
xchg
sbb
les
mov
push
or
jne
jae
sbb
cmp
jmp
add
mov
mov
inc
test
mov
push
sub
mov
int3
pop
jns
in
or
or
mov
or
push
addb
rcrb
sti
inc
call
xchg
arpl
into
jo
aaa
jnp
fchs
daa
aam
sub
cmp
aaa
add
ljmp
int
enter
mov
mov
sahf
fnstcw
sbb
out
mov
jo
mov
adc
pop
scas
add
fnstenv
sub
sbb
inc
and
sbb
loope
xchg
xchg
dec
lods
in
inc
pushf
push
pop
ffreep
adc
add
and
mov
std
fcmovnb
mov
pusha
jl
sarl
jecxz
push
sbb
mov
add
and
scas
adc
mov
jg
mov
movsl
jl
jb
jae
pop
lods
aaa
sbb
pop
sbb
loop
insl
test
in
cwtl
fisubrl
sbb
fsub
or
in
inc
sti
jp
dec
jl
test
or
and
outsl
sub
mov
push
or
cwtl
mov
dec
stc
pop
ja
pop
push
std
dec
pop
imul
mov
or
mov
loopne
sahf
pop
sbb
loopne
pop
aaa
push
push
or
adc
mov
inc
fwait
vmovups
adc
hlt
mov
in
sub
jge
mov
clc
add
inc
sub
sarb
sub
fcmovbe
mov
and
pop
shl
out
inc
mov
and
jge
pop
add
lea
xor
xchg
call
pop
in
sub
jmp
lret
mov
lods
pop
mov
lahf
loope
sahf
cmp
cmpsl
and
scas
add
fistpl
dec
push
out
lret
imul
lods
ror
mov
ret
sbb
cld
sbb
xchg
mov
int3
inc
jle
rcrb
cli
clc
mov
in
jne
xchg
mov
cli
in
cs
sbb
mov
orl
sbb
or
out
data16
inc
in
test
mov
mov
push
pop
push
mov
cmp
bound
std
and
outsl
or
jbe
fs
adc
lea
scas
mov
test
cld
cwtl
inc
ret
push
rcrl
xor
cli
out
push
xor
xor
cmp
test
stc
sarb
pusha
lods
jl
push
rcl
cmp
mov
lds
cmp
xchg
outsb
lret
push
shl
dec
je
mov
adc
filds
bound
push
xorb
jno
add
dec
shl
and
int
and
xor
gs
pop
es
inc
cli
aas
cltd
int
push
sub
add
popf
out
cs
xchg
icebp
sbb
loop
nop
mov
mov
fcoml
mov
loopnew
and
loopne
add
ret
bound
pop
sub
repnz
sbbl
aam
cmpsl
mov
rcll
pop
push
fmull
gs
aas
cmp
icebp
mov
xchg
pop
icebp
mov
pop
popa
bswap
xor
mov
cmpsb
xorl
fcomps
mov
sub
or
ja
pop
mov
push
mov
jns
adc
jno
arpl
or
adc
inc
sbb
xchg
cmpb
mov
aas
mov
pextrw
pushf
loop
jno
dec
subl
add
movsl
cmpsl
movsl
in
je
fs
jl
mov
data16
jg
and
inc
inc
push
fldenv
or
mov
push
pusha
ds
lahf
fcomps
xchg
nop
sub
add
xchg
push
imul
xchg
lods
pop
xchg
xchg
jno
jmp
adc
insb
fucomip
jl
mov
add
test
jp
jg
or
testb
pop
addb
outsl
xor
and
add
fwait
test
mov
ja
sub
mov
stc
fnstenv
lock
dec
sbb
cmp
push
sahf
fnstsw
addr16
lds
pop
pop
mov
icebp
insb
nop
rcr
ds
mov
ficomps
aad
add
cmp
popa
invd
cld
ret
sbb
pop
push
int3
pop
adc
mulb
stos
mov
cltd
scas
jmp
mov
not
fmull
pop
push
jo
push
cmp
pop
inc
cmc
jnp
mov
testb
dec
xor
adc
add
dec
xor
pop
dec
in
xchg
dec
mov
jl
std
jb
dec
icebp
movsl
es
inc
rorl
ljmp
cs
aam
jge
nop
das
and
bound
pop
sub
ficoms
inc
push
sbb
es
xor
adc
xlat
repz
and
fs
sti
pushf
mov
add
into
or
orl
dec
adc
inc
push
js
aaa
adc
inc
jp
sahf
mov
jecxz
cmp
movsb
mov
adc
repz
fmul
adc
add
call
pop
mov
hlt
and
loop
nop
adc
pop
das
call
push
xlat
inc
lcall
pop
into
testl
jne
incl
jl
jle
inc
out
cmp
daa
mov
dec
push
ffree
pop
dec
cmp
sbb
jge
fdiv
sub
jno
cltd
adc
fwait
popl
push
cmp
mov
jp
dec
rclb
push
insb
test
xor
ss
out
ja
int
inc
andl
into
mov
lret
out
add
mov
and
test
movsl
mov
cld
pop
add
test
ljmp
lea
dec
je
scas
adc
cmp
inc
push
sub
sbb
aad
push
push
or
add
push
pop
mov
push
sub
lcall
hlt
adc
mov
adc
aas
push
cli
mov
pop
nop
dec
scas
das
dec
cmp
mov
adc
mov
fisubrs
xchg
in
aam
xchg
pop
xchg
ret
sbb
xlat
mov
push
pop
movsb
movsb
dec
lea
mov
lock
sahf
adc
and
fmul
arpl
add
roll
loope
xchg
mov
fbstp
lahf
fsubs
adc
jl
push
pop
inc
je
and
push
xchg
push
lea
and
data16
push
xchg
lods
sti
sub
out
out
pop
jnp
out
sub
incb
mov
hlt
cli
loop
pop
ljmp
xor
jb
mov
mov
mov
add
mov
hlt
mov
into
and
or
sub
mov
adc
gs
insb
outsb
adc
adc
mov
movsl
mov
ja
test
mov
rcr
mov
mov
jns
inc
lret
imul
add
push
dec
out
sar
cltd
push
mov
inc
popa
sub
add
sahf
outsb
and
fiadds
add
pop
arpl
xchg
cwtl
pop
xchg
mov
pushf
dec
les
sub
mov
data16
mov
out
bound
dec
pushf
je
xor
add
pop
scas
add
scas
push
inc
mov
mov
aam
xor
pushf
dec
xchg
jns
mov
gs
lcall
frstor
sbb
adc
fimuls
cmp
ss
repz
or
add
data16
mov
nop
and
fistps
xchg
into
add
icebp
mov
rcrl
jl
mov
dec
lret
mov
mov
js
aad
les
xchg
in
cs
adc
loope
jmp
je
push
mov
xchg
jg
mov
push
les
inc
mov
daa
movsl
mov
daa
and
push
xor
out
cmpsb
jb
or
fwait
sbb
popf
cld
imul
jecxz
mov
int3
mov
adc
xchg
and
mov
seta
setnp
dec
fwait
es
push
inc
add
xor
ret
dec
dec
pop
js
add
and
mov
xchg
jae
inc
stos
insl
jge
push
add
dec
test
cmpsl
xchg
and
dec
sub
xchg
iret
mov
mov
pop
mov
mov
or
enter
std
test
loope
jo
mov
rcrl
dec
jmp
jge
dec
dec
jne
mov
and
sub
sbb
push
jmp
cmc
std
inc
ret
mov
xor
leave
les
cmp
loope
test
pop
repnz
jnp
push
jmp
test
sarb
outsl
shrb
mov
push
lret
out
ret
add
sub
imul
inc
push
popa
mov
dec
jp
cs
popf
bound
mov
sbb
jnp
adc
int3
mov
xchg
jo
or
ss
adc
in
xchg
data16
fnstcw
lret
xlat
cwtl
push
jbe
push
lds
xchg
test
push
idivb
push
lcall
dec
xor
gs
xor
jp
fs
out
out
sbbl
faddp
ret
lds
inc
test
cmp
dec
pop
pusha
sub
and
in
xor
std
sub
cmpsb
pushfw
push
fwait
xlat
vhaddpd
sub
and
mov
outsl
xchg
pop
inc
repnz
inc
inc
fisttpll
popf
xchg
pop
imul
push
and
decl
test
cmpsb
adcb
push
xchg
out
mov
pushf
hlt
sarl
lock
das
fwait
mov
cmp
repnz
fs
or
jnp
scas
sbb
pop
mov
ror
movsb
in
jne
fdiv
mov
sarl
cmp
or
sub
and
cmp
test
loop
mov
pop
mov
nop
imul
xchg
jno
pop
adc
pusha
dec
nop
dec
sbb
push
in
data16
mov
mov
mov
std
mov
push
mov
sbb
iret
les
mov
xchg
cld
out
aad
pop
lcall
negb
in
fcompl
scas
inc
pop
or
dec
dec
jbe
hlt
jmp
dec
imulb
adc
sbb
decb
cmpsb
test
mov
push
fistl
xor
pop
jl
imul
mov
mov
stc
xchg
mov
rolb
lret
pop
mov
mov
or
mov
add
outsl
je
xorb
clc
xchg
add
cmp
dec
lret
mov
das
scas
pop
jb
loopne
cmpsb
and
adc
mov
cmpsb
mov
cmc
out
arpl
adc
loope
mov
add
cwtl
in
out
leave
ja
daa
adc
divb
leave
pushf
add
lods
jne
mov
pop
xchg
mov
xchg
jl
adc
and
pop
lret
test
mov
pop
popf
pusha
es
aaa
push
or
sbb
lret
push
std
sbb
pop
movl
lea
jle
cmp
and
mov
jmp
xor
fstpl
sbb
cli
leave
add
sbb
call
xor
cmp
pop
fsubr
jbe
or
in
or
mov
test
fsubrl
ja
mov
arpl
pop
jmp
pop
xor
and
mov
cmp
outsl
or
jae
sub
fsincos
jne
int3
mov
add
sub
cmpsl
cmpsl
mov
clc
mov
out
call
mov
lods
xorb
mov
sub
mov
leave
je
and
in
fidivl
scas
frstor
lock
outsb
pop
xor
data16
mov
sub
sbb
dec
fidivl
pop
dec
repz
imul
mov
xchg
shll
inc
mov
testb
push
push
sub
addr16
stos
xchg
movl
rcrl
fisubrs
cmc
repz
mulb
mov
lret
dec
jle
ja
jne
push
scas
cmpsl
pop
clc
xor
dec
movsl
mov
xchg
imul
sbb
es
int3
mov
or
mov
int
out
pop
arpl
fldl
add
mov
outsl
mov
fcmovb
hlt
and
test
push
lret
xlat
adc
pop
lcall
cmpsb
jb
repnz
adc
stos
mov
mov
adc
in
imul
jb
xor
dec
jl
fs
clc
mov
sbb
xor
mov
dec
xchg
jg
mov
fld
adcb
imul
adcl
shll
xchg
mov
outsb
mov
pop
gs
mov
popa
fwait
sbb
jp
sbb
dec
lret
daa
aam
sub
ja
testl
or
mov
shrl
in
xor
je
xchg
andl
xchg
mov
nop
lahf
push
cli
repnz
sub
stc
lret
movsb
test
movsb
push
inc
loope
sub
test
mov
addr16
mov
sub
xchg
es
xchg
cmp
and
icebp
pop
popf
rcrl
mov
js
mov
out
and
add
repz
mov
adc
or
cmp
and
and
in
jp
push
es
cmpsb
sub
inc
mov
cmp
stos
imul
xor
in
xchg
cmp
je
cmpl
mov
mov
test
xchg
mov
sbb
push
mov
icebp
sub
adc
ss
inc
fsubp
popl
sub
and
lds
ret
push
jno
enter
cmc
ljmp
negl
outsb
cmpsl
dec
sbb
call
std
add
inc
cmp
jl
leave
cmp
mov
rcll
fildl
mov
stos
add
push
mov
pop
push
in
cmp
sbb
mov
int
push
dec
inc
or
test
jecxz
fldl
push
pusha
cmp
dec
loop
loope
xchg
push
inc
xor
adc
ljmp
add
call
xchg
in
push
shrl
test
mov
mov
jl
sbb
xor
call
loopne
lods
clc
and
aas
cs
dec
ss
dec
jno
mov
clc
dec
and
jge
mov
sbb
pop
or
adc
mov
and
cmpsl
cmc
xor
shr
lods
iret
mov
iret
cld
jb
xchg
adc
adc
mov
mov
clc
cltd
push
leave
mov
lret
push
jecxz
repz
xchg
jecxz
mov
cmp
dec
sub
jp
jae
or
sub
daa
mov
aas
jbe
cmp
jl
lods
stos
fimuls
ror
enter
aas
or
push
int3
ja
push
arpl
mov
mov
inc
out
les
jle
or
inc
nop
dec
pop
jge
dec
fldcw
jb
lock
pop
add
rolb
fbld
fsubl
fisubl
xchg
jp
sti
push
mov
out
loope
popl
mov
pop
inc
jae
xor
in
jmp
sub
dec
push
hlt
push
inc
or
sbb
cmpsb
mov
mov
sub
jle
xchg
inc
daa
clc
lahf
nop
outsb
stos
add
mov
push
add
inc
xchg
xor
push
cmpsb
imul
or
mov
inc
mov
movsb
xchg
pusha
push
fscale
pop
xor
xor
mov
adc
ret
push
out
inc
or
andb
hlt
subb
xchg
dec
xchg
cs
stos
lock
add
cmp
ja
add
mov
lock
cmpsb
imul
lods
mov
or
call
ret
shl
add
repz
addb
push
aad
xchg
jo
stc
inc
inc
inc
int
addr16
shll
mov
adc
xchg
mov
jns
xchg
inc
roll
fs
dec
sbb
mov
sub
roll
ds
insl
ss
push
mov
lret
cli
fsubl
mov
rorb
inc
sub
addr16
fwait
xchg
aas
pop
dec
mov
daa
mov
and
fiadds
loop
push
mov
sub
xor
call
mov
out
push
pop
dec
in
les
mov
mov
add
pop
xchg
repnz
jg
lret
mov
xor
mov
js
jbe
leave
loopne
push
jg
sub
jno
inc
int3
push
call
lods
aad
cmp
insb
xchg
dec
cmpsb
inc
mov
sub
lahf
xchg
data16
adc
pop
clc
mov
lcall
bound
stc
xlat
sbb
sti
cmp
in
nop
mov
push
mov
outsl
stos
sarl
cmp
insl
and
jne
dec
mov
mov
push
movsb
pop
pop
xor
add
add
insl
mov
mov
call
mov
scas
cld
push
dec
in
and
lock
and
cld
lods
xchg
js
cmpsb
scas
push
mov
insb
sbb
pop
mov
movb
adc
lret
jne
jne
loope
sbb
cltd
pop
push
push
push
push
adc
pop
push
sub
xchg
jnp
imul
das
call
cmpsl
adc
lret
scas
scas
mov
push
jae
rclb
push
xor
add
push
enter
xchg
stos
testb
sub
mov
mov
sub
and
add
fs
pop
and
xorb
sarb
inc
fwait
popl
into
dec
mov
mov
lea
jecxz
cmp
testl
into
loop
mov
scas
mov
sbb
pop
ret
mov
add
sub
pop
cmp
mov
sub
jle
mov
sbbb
or
je
push
imul
sub
sti
xor
mov
push
dec
push
sub
lea
popa
aas
ret
mov
sti
cmpsb
push
insl
sbb
xorb
ds
negb
sbb
ss
pusha
push
rclb
pop
cmp
push
fucomp
iret
xlat
xor
mov
sahf
push
xchg
rorl
outsb
jb
test
jmp
mov
into
and
pushf
in
jg
jmp
int3
xchg
or
add
icebp
mov
cmp
add
cmpsl
les
jg
jno
loop
cltd
jl
lea
shll
lds
lea
push
mov
xchg
mov
add
and
mov
out
sub
lods
dec
cmpsb
call
arpl
shr
adc
out
pop
mov
and
testb
data16
std
test
cmc
sbb
dec
sbb
add
lods
test
inc
out
xor
cmp
push
inc
jl
fadd
fcomi
push
push
jecxz
adc
and
es
mov
add
push
cs
mov
adc
in
sub
or
gs
adc
orl
mov
sbb
pop
pop
mov
push
mov
mov
roll
out
dec
inc
cmp
dec
nop
lea
and
dec
sti
mov
add
in
mov
repnz
lds
insl
sub
jne
mov
push
inc
mov
inc
cwtl
int
sub
pop
stc
mov
pop
aad
hlt
cmp
test
jne
jnp
and
and
mov
and
inc
outsl
dec
inc
xchg
xchg
mov
je
ds
push
sbb
in
mov
mov
mov
in
sub
int
add
test
stos
fbld
imul
sub
and
test
test
xlat
test
arpl
sbb
mov
jne
add
daa
stc
call
insl
ja
cmp
push
movsl
sbb
loope
cwtl
fwait
cmpsb
pop
inc
inc
adc
pop
inc
dec
and
fsubrp
incl
iret
in
or
movswl
lds
mov
adc
sbb
mov
shl
sbb
xor
fidivs
xor
ret
fs
in
lret
dec
mov
xchg
leave
sub
movsl
jl
jle
loope
enter
fistl
jae
inc
ror
or
imul
popa
sbb
in
mov
pop
push
mov
repnz
inc
in
xchg
xchg
lcall
sbb
cld
push
sbb
imul
test
popa
mov
add
int3
jl
jge
adc
int3
repz
scas
mov
mov
mov
orb
movsl
ret
xchg
add
sub
lods
test
rdmsr
pushf
or
std
popf
pushf
je
cltd
imull
adc
roll
aam
out
jl
mov
and
cmpsl
iret
cmp
not
lods
das
jecxz
rorb
stos
in
push
and
les
in
pop
mov
les
ret
push
xor
mov
xor
fs
add
dec
in
std
lahf
shlb
xlat
mov
jnp
daa
clc
or
cmp
adc
sbb
cli
xchg
pop
cmp
cli
ficomps
iret
adc
hlt
js,pn
inc
xchg
sub
pop
jae
pop
clc
movsb
arpl
aaa
rclb
into
lds
jne
xor
in
mov
jnp
jns
sub
inc
sbb
add
sub
jmp
ds
imul
or
push
lock
jo
mov
out
fcomp
fsubr
cmpsl
dec
rcrl
mov
daa
pop
xchg
inc
dec
and
pop
dec
pop
sbb
pop
daa
test
mov
mov
mov
pop
dec
clc
push
inc
outsb
or
adc
or
pop
jge
cwtl
dec
cmp
and
call
negl
fwait
scas
sub
sub
jno
out
dec
pushf
daa
repz
push
test
jne
cld
andl
rolb
clc
aad
iret
in
cli
jge
mov
notb
cltd
aaa
xor
insl
push
add
rorl
in
jmp
or
mov
jp
lods
push
dec
push
ret
push
rolb
mov
xorl
in
scas
divl
pop
dec
jns
rorl
pop
aas
inc
std
xor
mov
mov
sub
jle
enter
push
scas
or
push
cmp
mov
and
insl
lret
sarl
push
int3
lea
sub
shr
or
mov
jae
clc
sub
data16
pop
xchg
clc
inc
sbb
dec
ss
int
and
jns
sub
scas
or
lret
mov
and
pop
dec
jns
jge
jle
xchg
push
stos
inc
push
mov
push
imul
adc
mov
adc
lcall
push
jno
and
rcrb
leave
mov
cmp
xor
xchg
cmovb
aaa
cmp
push
dec
popf
outsb
into
inc
data16
outsb
sbb
push
lahf
ds
or
loopne
aam
lea
mov
pop
mov
push
mov
dec
outsl
cmp
mov
orl
nop
adc
dec
dec
inc
arpl
cmp
popf
rclb
jge
outsl
jo
pop
sbb
xlat
scas
sub
mov
cmp
aas
imul
out
mov
pop
add
popa
dec
xlat
add
sarb
mov
sbb
sahf
adc
call
cmpsb
mov
sbb
andl
sarl
pop
sub
mov
lods
out
loope
jnp
out
sbb
sbb
hlt
pop
out
rcrl
dec
lahf
cmp
and
ss
or
adc
das
sahf
xorb
rcrl
or
mov
in
hlt
lock
fcoml
or
jnp
in
repz
ds
mov
cmp
xchg
mov
add
xchg
ds
xchg
leave
shll
xor
in
dec
lods
sbb
inc
ja
cmp
mov
fsubrp
lods
jl
cmp
scas
mov
jno
aam
jno
mov
jbe
mov
lods
mov
or
dec
xor
fs
and
mov
inc
jge
adcl
test
push
aad
and
inc
movb
mov
icebp
lcall
jge
test
clc
push
mov
aas
or
cmpb
loopne
gs
lock
adc
mov
jns
sbb
or
cmpsl
iret
sub
in
or
push
pop
push
loop
mov
lock
dec
push
pop
xchg
jg
or
fistpl
fcom
shld
sbb
lods
push
dec
sti
popf
push
data16
sbb
and
jmp
adc
jl
cmp
out
sub
pop
jbe
mov
inc
cwtl
sub
pop
cmp
cwtl
add
shlb
subb
xchg
xchg
mov
out
arpl
mov
xor
outsb
cmp
adc
add
pop
popa
push
xchg
into
jo
imul
push
lock
ret
in
punpckhdq
rorb
repz
les
movsb
dec
mov
in
and
bound
push
int3
xchg
lods
or
nop
push
lods
jo
sub
mov
inc
pushf
cmpsb
mov
push
cmp
push
xor
lret
cli
or
pop
incl
xchg
repnz
xor
push
sub
fs
test
inc
and
push
mov
lds
jp
pop
inc
dec
in
frstor
out
and
xchg
inc
and
insb
and
aam
add
ljmp
mov
jl
sbb
xchg
dec
bsf
push
int
in
mov
ljmp
and
call
mov
xor
pop
adcl
xchg
add
ret
jnp
dec
inc
add
push
mov
jge
add
pop
sub
cmp
mov
scas
cs
out
aas
jno
dec
cmpsb
and
jno
nop
cmovns
test
scas
jnp
les
fsubrl
push
mov
or
and
mov
or
xor
push
std
idiv
cmp
sub
cmp
lock
outsb
lock
mov
mov
sub
and
or
jle
xchg
xor
push
mov
dec
add
jmp
loop
sbb
mov
mov
loope
clc
outsl
push
bound
ds
in
fdivs
imul
popa
in
fnstenv
or
out
dec
mov
dec
push
mov
in
adc
ja
daa
sarl
roll
pop
mov
push
movsb
outsl
push
cmpl
leave
scas
icebp
test
stos
stc
pop
loope
xchg
xchg
mov
js
fucomp
sbb
sahf
sub
xor
mov
jg
lods
add
stos
enter
jne
mov
loopne
mov
ficompl
mov
mov
repnz
leave
xor
mov
cmp
sub
xchg
leave
or
add
mov
cmp
cmc
push
mov
sbb
inc
stc
lds
add
xchg
dec
in
xchg
and
clc
sbb
add
mov
pop
and
stos
push
nop
mov
stos
sub
es
lahf
mov
out
iret
mov
sub
hlt
adc
add
les
cmp
lret
fisttpl
rolb
adc
fmull
jb
xor
or
cmp
int3
push
jo
out
mov
out
xchg
mov
and
repnz
push
mull
sub
push
mov
and
andl
add
lea
subb
movsb
test
and
lret
jg
andl
test
xchg
mov
xchg
xchg
mov
jecxz
xchg
repnz
jns
fcomps
shll
xchg
xchg
outsb
xor
mov
lahf
push
mov
rolb
xchg
sbb
mov
outsl
lahf
xor
mov
lea
cmp
mov
movsb
scas
fimull
mov
lea
aas
push
cmpsb
repnz
mov
and
pop
shrb
sub
push
stc
dec
pop
hlt
dec
push
int
fwait
xor
pop
push
insb
pop
orl
xchg
push
mov
xchg
mov
add
push
adc
mov
cwtl
stos
daa
lock
lcall
sbb
fcompl
jb
aam
inc
movsb
imul
pop
ds
jecxz
xor
mov
rolb
sub
mov
sbb
mov
shl
lods
cmp
out
xchg
inc
push
mov
and
push
add
dec
xchg
pop
repz
inc
orl
add
hlt
je
int
scas
mov
ljmp
mov
inc
jp
jnp
ljmp
and
xchg
lret
adc
lds
push
cltd
xor
mov
mov
movsb
mov
sti
fsubr
loop
jl
cld
sub
ret
fmul
into
mov
inc
mov
not
lret
pop
inc
push
jne
jne
loope
mov
push
xor
daa
mov
xchg
insl
xchg
sub
or
aaa
adc
icebp
sti
cli
out
fwait
cli
cld
jge
jmp
add
fisubl
addr16
xchg
push
rorb
add
lret
ja
jns
faddl
jge
mov
aaa
data16
xchg
jecxz
lods
pop
cld
push
mov
cmp
cmpsb
mov
pop
lds
fcoms
jp
mov
insb
stos
scas
movsl
aaa
insb
rclb
inc
and
xor
or
lret
repnz
sub
sbb
out
mov
sbb
and
stos
mov
mov
hlt
jg
loope
rcrb
ljmp
loope
sbb
push
mov
pop
imul
mov
inc
xchg
ret
sbb
stos
push
xchg
sbb
sub
call
mov
push
pushw
and
cwtl
pop
and
test
jl
mov
icebp
sbb
jp
pop
cmpl
and
jle
mov
mov
push
daa
movsl
notl
mov
xchg
jecxz
push
divl
loopne
mov
aad
imul
pop
dec
mov
jp
aam
cmp
push
cld
pop
adc
leave
outsb
cmpsb
add
outsb
adc
or
pop
sub
or
test
xor
iret
lcall
push
js
add
mov
cmp
mov
push
dec
add
sbbb
dec
lods
jae
pop
negl
int3
cs
mov
jae
pushf
stc
stc
mov
inc
push
test
push
mov
das
mov
xor
sbb
and
xchg
aas
arpl
dec
jns
mov
stos
fimuls
mov
daa
add
das
in
cwtl
sub
inc
rorl
repz
xor
jmp
xor
fsubrs
jb
xor
test
das
and
jmp
mov
lods
ret
bound
and
mov
mov
cmp
xchg
pusha
movsb
test
lods
jl
mov
cmp
icebp
inc
fisttpl
jae
ret
lcall
aas
lret
mov
adc
cmp
inc
inc
mov
arpl
rol
pop
out
clc
ret
adc
nop
dec
out
and
jmp
mov
aaa
cwtl
fisubs
scas
outsb
inc
jo
pop
sub
mov
sbb
rcrl
cmp
dec
xchg
data16
inc
jne
pop
out
inc
fidivl
lret
add
out
mulb
popa
jb
fisubl
cmpsb
jbe
mov
rolb
scas
adc
inc
cmc
sbb
addr16
mov
seta
add
inc
mov
repz
add
or
and
aad
repz
jae
cmp
popa
add
call
test
dec
fcoml
ror
mov
xchg
or
xchg
leave
jmp
fdivrl
and
lret
pop
divl
or
xchg
dec
rclb
ret
jo
popf
popf
or
pop
jns
mov
xchg
jp
sub
je
mov
inc
push
push
lahf
incb
mov
testl
fadd
stos
mov
push
add
jle
mov
jb
mov
jnp
loope,pt
sbb
and
inc
pop
xchg
and
stc
arpl
inc
cmp
pop
pop
push
jg
bound
fisubrs
lahf
jl
cmpsl
jno
pop
fsubrs
push
mov
add
outsb
pop
sub
test
aad
mov
pop
add
lret
jo
cmp
push
push
xchg
leave
shr
pop
inc
inc
movups
xchg
pop
cmpsb
in
mov
adc
xlat
jle
leave
mov
add
jb
xor
popa
cmc
xor
pop
mov
xchg
push
adc
popf
shll
out
ror
xor
mov
sub
in
and
test
dec
xchg
insb
shll
sbb
mov
pushf
test
lock
pop
pushf
or
pop
xor
mov
push
sbb
mov
mov
mov
out
out
fucomp
aaa
stos
cli
and
cmp
mov
inc
std
xchg
xchg
dec
push
dec
cmpsb
loopne
cmp
fs
mov
mov
roll
adc
insl
out
dec
xlat
xor
aad
jae
stos
and
xor
jl
or
nop
cmpsl
aam
loop
sub
adc
shll
fdivrl
adc
mov
mov
pop
movsb
rcr
hlt
sbb
je
stos
sub
pusha
dec
sbb
xchg
add
jne
data16
hlt
das
bound
xor
movsl
in
mov
mov
mov
loopne
mov
pop
jnp
orb
xchg
mov
xchg
and
mov
pop
cmp
dec
inc
xor
xchg
ffree
inc
loope
dec
pusha
out
mov
mov
inc
sar
test
xchg
lcall
mov
aas
xchg
and
xchg
inc
in
ljmp
call
out
cs
mov
insl
mov
sbb
mov
mov
jmp
popa
mov
cmpsb
outsl
cltd
scas
adc
addb
sbb
ljmp
pop
sbb
jno
std
loopne
lock
mov
ja
sahf
push
cmp
imul
mov
in
pushf
jae
jle
mov
pop
jo
scas
arpl
mov
popa
sub
mov
inc
es
lock
push
fdivs
xor
jge
jo
popa
adc
stos
pop
mov
gs
cmc
mov
and
dec
xor
out
gs
test
mov
xor
mov
add
bnd
add
sub
test
popf
mov
pop
dec
andl
mov
test
pop
fsts
adc
clc
push
loope
popf
dec
mov
aaa
push
mov
push
aas
jecxz
sahf
adc
fisubs
scas
xor
push
push
mov
loopne
pop
sahf
fs
jle
insl
inc
std
mov
dec
stos
fcoml
popa
xor
scas
inc
add
sbb
sbb
sub
xlat
cmp
push
jle
inc
push
daa
orb
sub
mov
mov
mov
jo
push
ret
and
ror
mov
lea
mov
fdivl
jo
push
mov
in
pop
cmp
xchg
jae
xchg
jns
push
and
inc
repz
cld
mov
fucom
inc
jecxz
cmp
lods
imul
mov
jbe
push
sub
mov
pop
sub
test
pusha
imul
jl
cs
nop
mov
cmpsb
fcomp
cltd
sub
sbb
jmp
adc
and
sub
call
xchg
popf
xor
subb
call
jbe
fcomps
or
nop
sub
push
lea
cli
int
lcall
shll
xchg
imul
cmpl
fstpt
out
mov
jg
sub
js
adc
mov
ss
mov
xlat
xchg
push
inc
leave
sub
test
jecxz
adc
sti
inc
pop
or
or
and
shl
testb
sub
pop
sub
pop
inc
xor
jbe
sbb
mov
fimuls
test
mov
pop
cmp
test
push
stc
shlb
lahf
mov
out
mov
xlat
scas
jae
mov
in
mov
addr16
inc
dec
loop
movsb
icebp
mov
push
xchg
pushf
mov
into
clc
ljmp
jp
in
jbe
adc
jmp
fiadds
rcrb
pop
sub
test
jb
negb
subl
mov
cmp
test
pop
and
inc
pop
mov
sub
mov
leave
inc
shr
aad
mov
inc
jno
xor
jne
sbb
push
and
aad
imul
push
mov
in
daa
ret
mov
xchg
xor
jns
mov
pop
f2xm1
sub
and
negl
mov
push
sub
mov
stos
loopne
scas
jle
xchg
sub
push
fadds
inc
mov
outsl
sbb
shr
popa
xor
or
fldl
push
sbb
pop
or
jmp
push
rcrl
pop
push
outsb
pop
mov
or
out
movsb
add
int
pop
jne
jmp
jmp
sahf
jg
incl
jo
jecxz
out
jle
pop
mov
jbe
jns
fdivl
stos
pop
sbb
lods
mov
stc
push
mov
xchg
mov
or
aaa
rcll
push
mov
sbb
xchg
pop
mov
lods
push
inc
jge
xchg
lahf
pusha
pextrw
sbb
out
cmp
xchg
repnz
mov
std
add
jmp
jo
inc
push
pop
sbb
mov
inc
loop
mov
insb
push
int
and
and
lahf
push
push
loopne
xor
xor
jmp
xchg
sbb
rolb
jo
sbb
jg
xchg
xchg
mov
cld
jl
mov
sti
sub
sub
loope
push
mov
cmpsl
inc
xor
lds
sarb
cmp
mov
jmp
cmp
out
push
xchg
ss
jnp
pop
fstps
icebp
sbb
out
dec
or
std
arpl
cltd
xchg
mov
cmc
xchg
stc
sbb
insl
ret
xor
das
mov
pop
push
push
testb
dec
ja
mov
add
dec
loopne
loop
icebp
lret
mov
cmp
mov
sbb
add
push
pop
shl
mov
mov
pop
ss
je
add
cmc
add
leave
push
jb
dec
mov
ret
hlt
in
or
pop
jp
scas
repnz
imul
ret
add
data16
jmp
mov
and
rorb
cmpb
dec
sbb
cmc
mov
aas
jge
xchg
cs
and
sbb
or
fisttps
mov
adc
or
push
mov
lock
inc
mov
movsl
mov
xchg
addr16
or
sbb
lods
mov
add
or
clc
inc
lods
or
add
sbb
icebp
cmp
fisttpl
inc
mov
cld
out
fisubrl
movsb
subl
fistl
jnp
sti
sbb
mov
stos
adc
scas
add
daa
loopew
push
sti
add
into
stos
mov
mov
cld
idivb
sbb
lret
pushf
mov
js
stos
imul
outsb
clc
inc
daa
iret
xchg
pop
icebp
sarb
sbb
mov
mov
mov
dec
int3
or
outsb
and
sbb
jp
xor
push
sbb
and
das
mov
xchg
imul
jne
push
cld
pop
popf
add
xorb
mov
push
cld
adc
sbb
jno
push
repnz
lcall
xor
sub
popa
test
jl
cmp
test
xor
mov
pop
sti
mov
repz
imull
mov
in
push
iret
pop
pop
cmpsb
adcb
or
in
loope
or
inc
insl
mov
out
jo
hlt
and
aad
seta
aad
jo
imul
xor
sbb
pop
inc
ret
inc
push
rorl
or
xchg
cmpsb
or
lcall
imul
ror
aad
and
pop
lret
add
cmp
stc
xchg
add
aaa
xor
push
insb
loop
sti
pop
xchg
mov
jno
je
or
dec
or
mov
jge
add
aad
out
das
cmpl
xlat
jb
les
cmpsb
aam
fsubrl
mov
repz
repnz
sbb
and
js
in
mov
dec
sbb
push
mov
inc
jg
into
mov
mov
fisubl
jbe
pop
sub
std
arpl
enter
aad
cmp
mov
jecxz
xor
arpl
mov
sti
dec
dec
sub
mov
ficompl
shl
loope
inc
jle
ss
xchg
imul
stc
jmp
jo
dec
mov
sbb
shll
adc
fcomp
adc
pop
rorb
mov
fadd
insl
imul
jbe
mov
jns
jnp
adc
cmp
cmpb
notl
ljmp
ljmp
in
cmp
icebp
push
pop
xchg
xchg
cmc
dec
mov
adc
mov
inc
add
ljmp
inc
test
push
rcrl
push
mov
pop
jo
adc
hlt
cmp
push
out
sahf
add
shrb
sub
push
mov
daa
pop
push
aam
mov
push
jb
ds
ljmp
push
inc
xor
xchg
roll
fisubs
pop
arpl
push
mov
not
mov
sbb
mov
lock
dec
jmp
pop
inc
inc
movsb
mov
dec
movsl
cmp
repnz
enter
lret
mov
lds
mov
fsubrs
mov
pop
jo
fsts
and
add
test
shrl
add
xchg
shrl
mov
outsb
lock
lcall
insl
in
sti
in
push
jb
fistpll
lds
dec
and
and
jp
sub
cmp
shll
xor
mov
xor
popa
test
fnstcw
add
inc
add
out
mov
ret
ljmp
xchg
scas
push
xchg
add
inc
rorl
xor
sub
out
cmp
data16
lds
or
les
testb
call
inc
lock
ficoms
fiaddl
clc
nop
pushl
movsb
xor
movsb
push
in
push
jno
xor
movsb
call
push
jecxz
scas
inc
sub
or
dec
xlat
repnz
les
aas
mov
lea
mov
cmp
pop
pop
mov
out
movsl
fldl
mov
jge
lds
icebp
push
push
inc
mov
test
mov
add
shrb
into
fucomi
ret
push
add
mov
or
mov
mov
enter
dec
push
pushf
adc
sbb
fbld
iret
cmpsl
xchg
xchg
lods
cld
out
repz
scas
in
imul
stos
data16
cmp
inc
push
push
int
cmp
jg
lret
pop
jo
mov
xchg
fwait
mov
add
imul
rcrl
cmc
push
stos
stos
pop
sbb
call
push
inc
add
sub
pop
repz
add
push
das
adc
push
push
repz
pop
dec
cltd
sub
pop
mov
push
ret
dec
mov
add
and
cmpsb
stos
jp
xchg
jle
or
inc
ljmp
lock
sti
inc
sbb
movsb
cli
sbb
out
dec
je
mov
out
leave
or
int3
pop
fildl
cmp
and
mov
or
xchg
fiadds
jne
test
add
loop
ficompl
adc
cmp
daa
icebp
data16
jmp
lea
ffreep
daa
jecxz
fnstenv
sarl
mov
xor
or
rcr
sub
sbb
insb
lea
adc
mov
mov
ret
hlt
mov
or
add
pop
add
out
aam
fsubrs
pop
mov
imul
cltd
xchg
sahf
jg
ret
and
repz
pusha
mov
adc
mov
jmp
inc
dec
scas
xor
in
cmp
ficoms
sti
rorb
stos
gs
xchg
inc
xchg
aam
mov
mov
nop
int3
inc
les
pop
mov
pop
and
push
inc
mov
sti
loope
repnz
or
pop
jae
sbb
sarb
push
movsl
push
out
in
int3
xchg
pop
mov
insb
insb
push
mov
push
loop
mov
pop
sub
jno
pop
push
out
add
ljmp
int
repz
orl
inc
dec
stc
movsb
inc
test
push
int3
addr16
jns
movsl
xchg
cmc
shl
outsb
and
ljmp
daa
xlat
mov
movsb
nop
and
sbb
xchg
and
sti
sbb
jmp
cmp
inc
es
pop
cmc
xchg
and
daa
sti
add
sub
xor
and
inc
and
ret
cmp
mov
scas
fsts
loop
adc
in
xchg
and
jne
adc
cld
pop
icebp
nop
jmp
loope
stos
pop
movsb
popf
cmp
lods
inc
fmul
sub
inc
inc
bound
push
cwtl
sarl
add
stos
xor
xchg
loop
cmp
ds
cmp
sub
mov
jl
pop
mov
cmpsb
out
icebp
jo
lret
shl
adc
cwtl
xor
pop
adcb
pop
jo
hlt
pop
inc
xchg
pop
dec
ss
mov
and
mov
pop
leave
inc
clc
add
idivb
sub
jmp
mov
dec
mov
or
add
lods
orps
in
or
cmpsb
jle
jo
iret
iretw
in
sbb
pop
shll
push
cmp
xchg
and
sub
pop
mov
inc
mov
jmp
std
push
and
mov
dec
in
fucompp
xor
in
xchg
icebp
rorl
fidivrl
cs
fs
cmc
sti
popa
pop
add
in
imul
ds
insl
add
loopne
mov
movsl
or
inc
sub
xchg
clc
pop
das
xchg
data16
and
insb
jp
push
out
cmpsl
add
push
scas
fwait
and
push
cli
xor
pushf
sbb
push
addb
push
andl
push
cs
jmp
sbb
pop
ret
rorl
incl
inc
push
stos
jns
cmp
cmp
fistpl
lcall
jle
lock
or
inc
mov
or
sbb
repz
cmp
mov
fstps
dec
bound
adc
dec
nop
jbe
aad
aaa
xor
push
testb
bound
pop
mov
sbb
out
lahf
clc
rolb
in
mov
outsb
js
xlat
sbb
mov
imul
ss
aaa
pop
xchg
jmp
in
rol
xchg
push
add
test
fbld
clc
test
sub
add
push
ja
mov
imul
push
negl
push
add
cs
call
sub
or
jg
enter
pop
push
iret
imul
or
xchg
in
pop
adc
mov
sbb
shll
insb
in
sub
loope
lea
popa
mov
push
pop
mov
cmc
decb
add
mov
dec
ss
pop
scas
and
out
movsl
dec
pushf
nop
and
mov
push
mov
js
int3
sbb
lods
mov
fwait
jbe
sub
jns
stos
lods
jns
jmp
dec
out
jno
mov
sub
xlat
sbb
and
subb
xchg
pop
ja
push
cmp
fidivrl
pop
mov
popa
aad
int
mov
out
je
xchg
jp
addr16
jmp
enter
jmp
cmp
cmp
mov
add
mov
mov
movsb
hlt
jae
fisubrs
fucom
idivb
div
xchg
cmp
test
lock
mov
cmp
mov
lret
xor
outsl
scas
inc
push
cmpsl
xchg
shr
jp
ficoms
std
pop
or
mov
mov
test
bound
mov
mov
sar
enter
stc
pop
arpl
iret
fucomp
pusha
cwtl
shll
jno
jle
inc
push
sti
rcrl
cltd
jl
dec
jno
fidivs
es
push
cltd
test
test
cs
insl
or
sub
cmp
mov
cmp
mov
inc
fs
popf
lods
mov
sub
and
dec
adc
lods
je
pop
loope
jne
lret
cmp
cli
loop
repz
inc
pusha
lret
sbb
sbb
in
pop
mov
mov
mov
call
push
jge
dec
adc
jb
rcrb
notl
loop
push
mov
ja
xor
addl
or
sbb
int
aad
sahf
xchg
leave
mov
call
aad
cld
subb
popf
repz
rcrl
and
scas
adc
int3
mov
jnp
lods
fwait
sub
mov
xchg
int3
mov
fisubrl
test
rorb
ljmp
rolb
fisubrs
adc
sub
cld
stc
or
cmp
mov
jb
imul
inc
jns
mov
lret
sbbl
test
sti
daa
sbb
test
cmp
repnz
scas
cmp
xor
dec
or
pushf
push
push
scas
push
or
inc
xchg
xchg
fadds
lret
push
jp
stc
sub
add
out
enter
pop
pushf
negb
testb
or
orb
push
mov
popf
push
mov
cmpsb
adc
mov
sbb
xor
push
ret
inc
outsl
pop
sbb
mov
ret
repnz
out
xor
mov
fdivrl
jae
xchg
jl
mov
lea
scas
mov
por
rorb
sti
mov
xchg
xor
sti
les
cwtl
mov
and
and
mov
mov
fists
xor
cld
cmovbe
jl
sti
xor
xchg
xchg
sub
outsl
rcr
mov
pushf
mov
outsl
xlat
sub
loop
rcl
and
lock
das
sti
add
ds
dec
inc
popf
cmp
xchg
cli
push
sub
divl
insb
cmpsl
mov
push
push
orl
movsb
sub
imul
daa
idivl
xor
push
shll
pop
mov
xor
xchg
mov
xchg
pushf
sbb
sti
mov
or
lea
inc
icebp
repnz
lods
xchg
js
loope,pn
pop
push
sahf
inc
pop
xchg
in
xchg
or
lea
sbb
mov
rcll
push
insb
xchg
sahf
repnz
or
cmp
add
je
call
imul
aas
adc
mov
xor
nop
push
and
sbb
int
adc
mov
divb
xchg
cmp
push
mov
pop
jnp
cld
ljmp
inc
or
fmuls
clc
cmp
xlat
and
sub
mov
and
xor
and
call
loopne
out
jg
jecxz
adc
mov
jno
add
pop
outsb
shll
xchg
aad
fnsave
add
xchg
or
ss
faddl
jl
sbb
adc
push
jo
mov
xor
mov
fstps
fiadds
sbb
lock
jnp
mov
in
xlat
cmpsl
out
xchg
outsl
incb
add
inc
in
mov
das
pushf
sbbb
dec
fcoms
test
inc
dec
mull
inc
cmp
movsl
push
mov
orb
stos
enter
in
mov
jo
daa
pop
test
jl
lds
call
jle
or
movsb
movsb
out
mov
jp
cmp
repz
jmp
lods
jle
inc
movsl
imulb
push
push
sub
mov
add
mov
xchg
out
xor
call
ret
xor
mov
out
add
or
dec
pop
fcoml
hlt
iret
loop
push
jg
bound
sbb
ja
jl
push
push
sbb
mov
loopne
rorl
cmpsl
loop
cwtl
rcl
mov
dec
xor
gs
mov
lcall
cmpsl
mov
out
mov
xor
int3
mov
add
jno
push
mov
xchg
adc
inc
jg
mov
addr16
push
aas
xor
mov
sahf
jg
in
sbbl
lock
ss
loop
mov
negb
mov
roll
jbe
mov
push
stos
dec
leave
pop
int
loop
xor
test
ret
in
dec
mov
mov
mov
addr16
lcall
mov
dec
jle
insb
outsb
mov
mull
test
pop
xchg
mov
push
nop
outsl
shlb
push
and
lods
rcll
cmp
mov
or
lds
sbb
cmp
mov
mov
mov
mov
negb
or
xchg
xchg
add
inc
jmp
jmp
sbb
push
stos
dec
cmp
pusha
or
es
inc
xchg
popa
mov
out
fildl
lret
xor
pop
inc
jne
popa
cmc
jbe
adc
pop
mov
jbe
xlat
mov
jmp
sbb
mov
scas
rol
enter
loop
ficoml
sbb
in
mov
mov
jne
pop
pop
movsb
sub
sbb
addl
int
int
mov
cmp
jg
adcb
xor
popa
xchg
repz
sti
lock
sbb
jbe
loope
inc
mov
dec
pop
or
loopne
or
cmp
out
cltd
xchg
inc
dec
imul
loop
push
adc
dec
pop
out
push
lahf
jne
cmpsb
inc
xchg
mov
repnz
aas
mov
lea
mov
dec
les
adc
xchg
jmp
gs
cmp
orl
lods
test
mov
pushf
rolb
rcr
jge
aaa
and
fisubl
xlat
inc
lods
mov
loopne
loope
inc
mov
push
stc
jg
ret
leave
orb
sbb
jmp
stos
jecxz
add
in
pop
in
mov
xorl
bound
mov
push
add
mov
ret
call
or
lods
pop
test
add
or
mov
les
int3
cmp
iret
mov
int
cmp
jecxz
ret
pop
aam
mov
ret
ljmp
lahf
lret
jmp
in
sub
cmp
adc
cli
pop
or
imul
outsb
mov
jb
roll
addb
pop
add
sbb
jns
jmp
loopnew
out
jl
adc
sub
sbbl
je
mov
fwait
dec
xor
test
std
jge
gs
mov
cmp
xor
or
popa
in
inc
lods
push
loop
lods
push
sbb
add
push
fiaddl
jmp
xchg
lret
cmp
fmuls
dec
push
notb
mov
clc
jle
int
pusha
rclb
mov
fucomip
mov
test
push
testb
dec
add
shrl
sub
sbbl
cmp
cmp
xor
xor
icebp
outsb
std
push
sbb
jns
or
enter
xchg
jmp
loope
jmp
cltd
mov
xchg
mov
cmp
test
mov
xor
sbb
xor
addb
xchg
ficoml
cli
mov
sbb
cmpsb
outsl
push
clc
cli
jmp
xor
push
loope
cltd
filds
push
inc
push
jg
sti
int
pop
and
or
lds
sub
add
jo
push
stos
cli
mov
ret
enter
inc
add
mov
ret
adc
dec
dec
cmpsb
repnz
push
jmp
inc
out
leave
test
inc
mov
xchg
cmp
xchg
inc
sbb
sbb
mov
cmpsb
lcall
cmp
xchg
mov
pop
and
cmp
in
mov
jno
mov
xchg
ficomps
test
inc
pop
xchg
inc
inc
ret
or
int3
jle
inc
aad
or
dec
xchg
aaa
lods
mov
jb
clc
cli
adc
or
rolb
lahf
mov
mov
test
cs
int
inc
or
je
mov
insl
pop
addb
pushf
sub
mov
test
add
inc
xchg
mov
pusha
xchg
jns
inc
inc
repz
lods
pop
das
mov
mov
mov
mov
pop
dec
sti
jnp
cmpsb
stos
mov
sbb
adc
dec
ja
mov
hlt
cwtl
ljmp
loopne
movb
mov
add
jae
lahf
stos
scas
dec
loop
mov
imul
mov
fsubs
mov
outsl
xor
cmp
inc
adc
mov
fsub
lock
sbb
mov
cmp
sbbb
pop
mov
iret
fldcw
inc
cmc
mov
in
clc
pop
lret
jl
call
mov
rcrb
sahf
mov
scas
sub
fists
shr
dec
loope
fld
and
jno
jp
iret
add
scas
jmp
or
stos
or
and
aam
aam
sbb
test
adc
push
sub
push
xor
fmull
add
ret
arpl
int3
std
insl
inc
fs
lds
mov
fs
or
ss
push
fsubrs
inc
sub
cmp
and
sbb
daa
pop
xor
ss
insb
jns
lret
bound
jge
sbb
mov
or
pop
cmp
and
adc
dec
dec
or
jge
loopne
push
lock
lea
bound
stos
inc
cmp
lret
test
mov
stc
adc
cmp
pushf
rclb
xchg
insl
pop
lcall
ljmp
adc
test
mov
dec
or
xor
xor
out
jb
push
xchg
jle
pop
test
and
mov
xorl
ja
dec
add
jmp
data16
lea
loopne
or
mov
jae
jmp
or
push
mov
jne
shll
sub
sbb
es
pop
sarl
xchg
aaa
lock
bound
adc
sti
movsb
loop
stos
out
mov
xchg
xor
sub
sub
inc
je
roll
cmc
push
insl
xor
clc
nop
mov
pusha
or
xor
mov
sbb
xor
nop
mov
mov
movb
imul
shll
jbe
pop
sub
fistl
iret
mov
mov
sub
xchg
inc
shlb
ja
jns
and
or
stos
sbb
jge
scas
mov
sbb
xor
aam
xchg
adc
sbb
fwait
addl
adc
lea
sub
popf
call
leave
push
adc
xchg
cmp
in
mov
loope
jle
dec
test
cmpsb
ds
xchg
or
adc
inc
mov
daa
rclb
lret
lods
mov
out
mov
mov
lret
inc
push
sti
jno
mov
movntps
icebp
pop
push
lods
cltd
xchg
sub
ljmp
cmpsb
cld
pop
and
ret
xchg
test
push
lods
inc
sbb
lds
xchg
xchg
add
insl
pop
ja
cmp
sub
lods
dec
int
movsl
adc
popa
je
pop
insl
mov
pop
xlat
stc
les
add
ret
adc
mov
jae
ds
leave
aad
aad
mov
sub
test
out
jle
pop
idivl
scas
push
push
inc
ret
imul
jb
stos
lds
shlb
dec
ss
loope
popa
lods
adc
daa
clc
std
or
inc
sarl
ror
sti
int3
sbb
xchg
jnp
loopne
shrb
cmp
inc
pop
out
inc
lret
cmp
dec
ret
scas
nop
out
adc
test
in
lods
sub
adc
jb
test
mov
pop
sbb
lods
inc
movsl
inc
into
xchg
mov
inc
mov
test
pop
mov
mov
test
sarb
fidivrl
cmp
rorb
adc
mov
aaa
ss
add
dec
lahf
jb
sbb
dec
and
scas
imul
in
arpl
mov
into
repz
ss
in
in
roll
lock
or
shll
subl
pop
xor
mov
jle
add
mov
jae
ja
ret
push
das
pop
or
mov
mov
mov
inc
lret
test
adc
push
xchg
cs
lods
sbb
sbb
sbb
lods
cmp
dec
cs
les
pop
inc
push
xor
mov
imul
setbe
cs
or
pop
aad
dec
jb
scas
fsubl
xchg
call
xor
xchg
lret
xor
adc
mov
scas
movsb
mov
dec
or
mov
jns
pop
in
int
mov
lret
inc
out
bound
pusha
iret
jge
jp
mov
rcrl
ss
mov
push
outsl
push
fbstp
clc
push
ds
push
ror
mov
sbb
sarb
mov
inc
iret
imul
jnp
inc
loope
je
dec
inc
or
popa
pop
inc
and
sbbb
mov
scas
sar
lods
mov
mov
or
mov
insb
movsl
fnstenv
scas
mov
ret
push
sbb
gs
jne
movsb
add
lods
push
mov
xor
hlt
movsl
fistps
int3
pushf
add
mov
jo
std
cmpsl
xlat
cltd
or
sbb
adc
mov
jb
xor
data16
add
rclb
sbb
aaa
and
xor
xchg
iret
in
adc
inc
xchg
mov
fnsave
movsb
enter
push
lea
insb
adc
adc
jp
push
add
cmp
xchg
sarl
dec
jecxz
sbb
pop
lret
in
rcrl
sbb
xchg
aad
sub
pop
mov
lods
scas
xchg
push
sbb
adc
repz
mov
lods
adc
dec
mov
xor
mov
out
int
popa
jp
fs
cmc
cli
repz
in
stc
jns
fimuls
inc
mov
cwtl
sbb
push
and
fstpt
mov
ror
jnp
xor
stc
cli
pop
mov
jnp
xor
add
and
or
mov
inc
pushf
daa
cmp
push
xchg
adcl
outsb
dec
mov
pop
outsb
mov
pop
add
mov
lret
push
js
dec
std
mov
xchg
xor
loope
cmp
mov
psubq
add
jecxz
in
sub
pop
push
rcl
sub
test
xor
fadds
mov
dec
dec
xchg
adc
scas
mov
stos
sub
or
add
sbb
shr
add
add
fpatan
cs
and
pushf
mov
punpcklbw
out
lret
hlt
rclb
loope
lea
and
lcall
add
insb
dec
and
add
sub
xor
out
lods
aam
cmc
xor
repnz
repz
in
sub
mov
ljmp
push
dec
pushf
mov
cwtl
add
push
cmc
sahf
mov
lea
cmp
mov
sbb
adc
ret
cmp
aam
fisubrs
mov
cmp
fs
in
sbb
xchg
rcr
push
and
push
lods
jecxz
mov
jns
outsb
ja
push
ss
stc
dec
or
dec
dec
ss
adc
cltd
hlt
inc
xchg
dec
mov
sahf
cmp
mov
cmpsl
movsb
in
cltd
sbb
leave
sub
into
mov
sbb
push
xchg
jmp
add
cmp
push
out
mov
cmp
test
cmp
sahf
cmp
leave
jns
pop
maxps
out
mov
push
mov
sbb
cmp
xor
popa
cmc
pop
mov
sbb
mov
stos
adc
les
jle
mov
mulb
mov
sbb
insb
idivl
imul
add
lret
insb
jg
adc
outsb
mov
mov
fdivrs
scas
mov
int3
je
sti
lahf
maskmovq
idivl
addb
cltd
repnz
mov
fcmovbe
mov
mov
out
pop
mov
xor
xchg
sub
push
adc
inc
pop
aaa
mov
out
pop
jnp
push
mov
xor
shll
sarl
jnp
xchg
push
pop
pop
xchg
pushf
xorb
andb
call
iret
mov
inc
adc
jg
push
daa
std
mov
mov
scas
int3
mov
cmpsl
out
ds
inc
sbb
sarl
mov
inc
stos
movl
sub
std
lgs
cmp
sbbb
fcoml
dec
pop
jbe
hlt
fiadds
pop
dec
mov
or
sti
stos
mov
pop
iret
push
rorl
mov
add
nop
mov
pop
dec
fsubp
sbb
dec
pop
pop
fldcw
jo
xchg
loopne
movsb
inc
jo
aad
mov
daa
cmp
push
int3
test
mov
dec
clc
sub
mov
push
sti
adc
push
mov
mov
pop
ss
dec
in
movsb
fwait
cmc
lcall
xchg
inc
push
pop
ds
popf
ds
add
cmp
lret
dec
fcoms
push
mov
clc
ret
inc
xchg
fsubrs
mov
push
fs
and
fists
rclb
andl
in
stos
and
dec
and
sub
mov
dec
pop
ja
mov
out
or
jbe
lods
pusha
pop
jnp
mov
shll
or
xchg
lds
nop
push
fmull
xchg
push
nop
sub
sarl
imul
mov
hlt
sbb
rorl
mov
jnp
push
mov
sarl
pusha
dec
cld
mov
jns
mov
jbe
pop
xor
cs
or
cmp
pusha
cmpsl
cmp
cmpsb
imul
ss
pop
jmp
test
pop
ljmp
mov
les
push
pop
sahf
mov
into
add
push
xlat
sti
dec
mov
je
sbb
pop
pushf
jle
lods
and
mov
xor
mov
jo
push
scas
inc
cli
nop
fbstp
rorl
outsb
dec
outsl
aas
mov
into
jnp
pop
mov
les
xchg
mov
fcomi
mov
popa
inc
imul
fs
jge
test
xchg
test
mov
adc
push
roll
aas
fmull
int
xor
test
lcall
mov
sbb
arpl
mov
mov
sbb
fistps
sub
inc
adc
repnz
int3
push
sbb
sti
push
mov
push
or
xor
es
pop
xchg
sti
lds
dec
imul
sar
addb
dec
add
mov
jb
in
mov
test
add
cld
cmpsb
add
das
es
pusha
ljmp
scas
inc
popf
bound
aas
pop
mov
dec
sub
in
or
xor
xchg
movsl
pop
push
push
cmpsl
inc
cmp
xor
xchg
pop
lods
sub
rcl
mov
cltd
lds
pushf
sbbl
testb
cld
addb
add
mov
jo
push
push
test
sbb
sub
in
insb
and
rclb
out
iret
enter
xchg
mov
out
scas
adc
inc
hlt
imul
inc
out
repz
test
or
xor
or
int3
outsb
mov
inc
inc
ds
pop
push
ds
xchg
shlb
je
in
repnz
adc
cmp
aaa
inc
add
dec
sub
and
xor
lds
dec
loopne
mov
addl
pop
xchg
gs
out
push
movsl
jp
cltd
subl
mov
fadd
iret
mov
xor
aaa
xor
or
repnz
ret
imul
and
cwtl
push
push
xchg
xchg
jo
xchg
frstor
inc
aam
sbb
jbe
cmp
test
jle
fistps
and
dec
data16
mov
aaa
mov
cmp
mov
push
call
mov
stos
sbb
lcall
fsubrl
fdivr
mov
sbb
leave
adc
lcall
xchg
addr16
mov
mov
pusha
push
popa
mov
mov
xor
pop
cmp
jbe
push
push
pop
ds
ljmp
rcrb
loope
clc
xor
dec
mov
sbb
stc
mov
xchg
xchg
cmpsb
aad
inc
cmpsl
push
gs
jae
xor
xchg
dec
sbb
mov
mov
push
mov
js
in
loope
outsl
loopne
fistl
repnz
jmp
cld
cmp
iret
ja
sbb
sbb
or
adc
push
test
shll
arpl
iret
loope
and
insb
and
cmpsl
fwait
ljmp
sub
bound
mov
fcoms
push
push
cmp
iret
rcll
pop
xlat
xchg
xor
sub
nop
stos
add
jge
cmp
test
adc
jmp
push
mov
pop
clc
divl
push
out
fdivrs
fs
jo
jecxz
mov
es
nop
fstpl
adc
notl
mov
shlb
xchg
sarl
jnp
mov
sub
out
lea
clc
mov
cli
inc
repz
insl
outsl
popf
mov
mov
or
movsl
sbb
cmp
or
cmp
test
mov
rcrb
mov
adc
fs
mov
shlb
in
push
test
leave
dec
popa
cli
push
cmp
dec
push
popa
loope
testl
jb
addr16
es
pop
pop
mov
cmp
cltd
cmp
pop
imul
mov
jg
or
test
adc
jns
fwait
mov
leave
sbb
pop
sbb
mov
cltd
mov
mov
int
mov
adc
notl
inc
leave
int3
nop
lods
dec
loopne
sbb
ret
mov
stos
or
int3
std
add
jne
sbb
add
out
scas
sub
loopne
sarb
jmp
aas
pop
lods
out
cmp
int3
or
mov
lods
in
cmp
stos
push
or
cmp
arpl
out
mov
andb
int3
out
xchg
jg
into
pop
jmp
pop
and
inc
cmp
subb
adc
cmpsb
filds
fldcw
fimuls
mov
loop
xchg
xorb
hlt
sti
iret
nop
scas
mov
arpl
pop
insl
mov
pop
sbb
fbld
pop
and
mov
testl
or
jmp
jae
outsl
outsb
mov
cld
mov
lahf
jo
jae
fcomip
add
cltd
fisttps
adc
popf
jno
sub
sbb
test
push
cmc
test
pop
mov
inc
mov
pop
sbb
loopne
popf
push
mov
cs
jb
mov
test
adc
test
push
cmpsl
call
es
loope
clc
jbe
test
xchg
fnstsw
push
icebp
scas
add
push
fadds
inc
adc
sbb
push
ss
xchg
jb
inc
in
scas
cmpsl
iret
movb
inc
xchg
inc
add
dec
cltd
data16
jl
xchg
js
pop
es
pusha
enter
xor
cltd
sub
add
adc
jle
test
jb
mov
inc
jbe
bound
cmp
xor
push
imul
mov
out
push
nop
pop
or
sbb
ret
jae
sub
insl
cld
mov
in
adc
loopne
push
imul
cli
cwtl
popf
or
aaa
push
xor
inc
scas
mov
mov
pushf
mov
lret
mov
fdiv
push
lret
mov
negb
xor
jl
cld
arpl
aaa
jno
xor
inc
pop
ja
adc
test
gs
in
daa
ficomps
pop
jp
repnz
stc
mov
and
mov
lods
pop
nop
xor
xor
push
pop
cmp
jae
lods
das
mov
sti
or
inc
lret
mov
pop
mov
jns
out
je
dec
cli
push
inc
mov
jnp
jge
inc
aaa
and
sbb
ljmp
pop
or
push
sbb
test
cwtl
cmp
inc
aad
mov
rclb
or
pusha
mov
xchg
dec
adc
mov
aas
and
xlat
xor
loope
cmp
popf
pop
stos
mov
pop
mov
sbbb
add
les
fs
mov
push
cltd
pop
loopne
jl
fistpll
gs
out
je
xor
mov
int3
subl
push
xchg
sub
sbb
sbb
fcoml
xchg
fcmovne
iret
loop
jbe
adcb
mov
fiadds
insb
cltd
xor
mov
es
inc
cmp
fists
scas
stc
aas
pusha
std
dec
mov
popf
mov
lods
jnp
inc
cmp
dec
or
jge
mov
pop
pop
std
push
push
test
js
jg
sbb
in
mov
push
ss
jl
inc
fidivs
lds
aam
repnz
sbb
mov
mov
data16
pop
sbbb
loopne
add
stos
pop
fstpt
and
and
pusha
out
xor
stc
ret
adc
jp
jmp
mov
adc
push
sub
insb
or
int3
jmp
xor
sub
mov
hlt
arpl
scas
stos
pop
lret
push
jbe
out
cmc
subl
cmc
jns
mull
xchg
jnp
enter
dec
add
pop
sbb
outsl
xchg
mov
cwtl
sbb
pop
loope
adc
insl
sti
xchg
stos
push
mov
push
cmp
repnz
xchg
xchg
inc
pushl
call
and
sbbb
sahf
pop
mov
adc
iret
jb
das
mov
icebp
adc
adc
ret
push
insl
aam
loop
test
aam
jge
jb
cmp
loope
lods
mov
mov
push
jnp
mov
popa
lret
pop
cmpsl
fnstsw
jbe
adc
add
and
dec
sbb
add
sbb
scas
or
fidivrl
mov
jle
xor
subl
pop
fldenv
outsb
loop
push
jl
orb
jo
jne
pushf
fidivrs
test
mov
mov
jnp
add
sub
inc
pop
repz
adc
decl
ds
mull
push
cltd
popf
enter
sub
jecxz
pop
gs
adc
addr16
sarl
lea
stos
pop
cmp
xchg
pop
out
inc
imul
lds
dec
cmovne
stos
xor
lods
outsb
test
ljmp
sti
rcrl
xchg
cmp
and
rol
xchg
jae
add
push
cmpb
mov
dec
ja
add
fnstsw
add
cwtl
dec
cmp
push
iret
add
js
mov
cmpb
out
sbb
or
pop
movsb
push
xchg
fisttpll
mov
decb
test
cmp
dec
gs
sti
loop
mov
mov
test
rclb
mov
in
aam
push
in
in
jl
mov
xchg
mov
pop
pop
cltd
fldt
pop
icebp
fdivr
bound
cld
sbb
xor
and
xor
cmpb
mov
cmp
sub
jno
sti
jne
lret
and
push
mov
jp
pop
out
movsl
mov
orb
mov
xchg
sahf
int3
ljmp
insb
shrb
sub
pop
sub
ficomps
mov
jg
xor
sti
sbb
cld
arpl
sbbb
inc
xchg
sbb
sarl
jb
lods
jmp
xchg
xor
cltd
jae
mov
mov
imul
outsl
mov
lock
mov
cmc
jmp
or
enter
cli
lcall
dec
sub
xor
popf
push
xor
xor
or
cmp
jmp
insl
adc
mov
repz
test
outsl
ljmp
test
adc
dec
loope
inc
in
test
fwait
repz
xchg
mov
in
pop
xchg
add
flds
cmp
inc
clc
fidivrs
push
movsb
sbb
or
bnd
mov
imul
jae
pop
sbb
mov
inc
push
test
adc
mov
test
jno
cltd
subb
mov
mov
nop
popa
loope
loope
sbb
call
sbb
jecxz
sbb
lea
negl
xchg
xlat
insl
out
xchg
test
mov
enter
scas
jae
cmp
lret
dec
jmp
cwtl
xorb
movsb
push
or
inc
js
sbb
addr16
icebp
jae
lcall
dec
sbb
mov
ja
cmp
sbb
mov
inc
inc
decl
popf
mov
rcrl
cli
mov
loopne
dec
jae
leave
insl
sahf
mov
xor
mov
js
pop
dec
xor
cmp
hlt
mov
cmpsl
mov
pop
pop
jg
add
int3
jle
movb
jns
daa
aas
inc
sbb
push
sub
push
mov
testb
jnp
dec
imul
pop
mov
jg
bound
lahf
mov
in
xchg
pop
mov
jmp
jmp
in
nop
jecxz
shrl
sahf
das
testb
mov
mov
js
push
jle
arpl
imul
adc
pop
clc
cmp
mov
in
lahf
daa
add
test
dec
enter
test
push
jp
dec
add
cmp
cmp
sbb
sub
fistl
cmpb
into
hlt
daa
mov
mov
sahf
and
adcl
sbb
pusha
out
das
fnstenv
xchg
addl
xchg
aas
outsl
sbb
push
mov
push
pop
or
mov
sub
add
jbe
xchg
or
mov
cli
sbb
mov
stc
inc
jb
popf
jo
sarb
repz
inc
mov
and
fdiv
mov
leave
into
fs
popf
mov
xchg
leave
mov
aaa
xor
or
lret
sbb
jp
mov
cwtl
bound
lahf
adc
xlat
popf
xor
and
dec
inc
xchg
jmp
sbb
decl
cmp
fwait
cmpsl
cli
mov
arpl
daa
mov
call
pushf
test
lods
insl
pop
cmp
test
shr
fsubl
test
jo
adc
movsl
fldenv
mov
scas
outsb
out
ret
or
push
dec
mov
outsb
pop
push
or
pop
sbb
fcmovnbe
add
ss
roll
adc
jae
scas
pop
jecxz
jbe
cmp
gs
sub
popf
cmp
jmp
or
inc
mov
shl
cmpsl
arpl
mov
sub
or
jge
aam
and
fucomp
pop
and
and
outsl
insb
sahf
push
xor
mov
mov
pop
inc
xchg
out
adc
test
mov
mov
push
sub
jle
lcall
hlt
cmpl
inc
sub
ret
movsb
cld
shr
cltd
xlat
mov
hlt
xchg
mov
fwait
into
jle
dec
mov
dec
cmp
dec
sarl
dec
xor
push
sbb
push
inc
mov
je
popf
popf
std
pushf
add
lcall
lahf
jne
cltd
sti
popa
nop
xor
xchg
les
cmp
or
movsl
push
mov
sbb
dec
inc
testl
divl
xchg
out
in
xchg
inc
test
xchg
mov
rcrl
pop
out
addr16
adc
lea
fdiv
mov
cmpsl
fcmovu
inc
insl
adc
cmpb
popa
pop
out
add
sahf
jge
mov
addr16
inc
jbe
js
sbb
in
sbb
lock
adc
mov
pop
cmc
lret
push
mov
loope
in
cld
cltd
mov
out
and
inc
test
scas
stc
sub
out
and
mov
jp
scas
hlt
in
in
rclb
aas
xchg
push
adc
iret
pop
mov
outsl
aam
push
leave
xchg
rcll
push
movsb
mov
mov
and
dec
rol
test
pop
add
mov
int3
or
popf
cmc
push
push
xor
cmp
stc
sub
popf
jmp
or
lret
ja
jb
mov
shl
adc
lds
cli
cltd
or
xchg
xor
pop
fdivr
fldenv
test
out
sub
in
xchg
push
add
push
lods
mov
mov
adc
movsb
arpl
daa
int
cmpsb
stos
or
mov
sub
sbb
pushf
dec
xor
cs
lods
cmc
pop
pop
lds
repnz
push
mov
cwtl
mov
and
js
andl
int
adc
rcrl
mov
sbb
loopne
jne
arpl
inc
adc
xchg
mov
jecxz
insb
cmp
in
int
cmp
repz
mov
cmp
fiadds
sbb
insb
cmp
scas
and
mov
pop
add
inc
adc
jae
test
add
dec
addr16
dec
hlt
inc
cmc
push
pop
rorl
ss
pop
add
or
push
sbb
or
mov
int
inc
sub
int
push
inc
xorb
jmp
xchg
pusha
es
ja
push
bound
mov
jo
adc
or
cwtl
jno
push
pop
cmpsb
orb
pop
xor
sub
add
push
cli
int
cmp
add
insl
nopl
repnz
inc
cld
xlat
rclb
filds
xor
mov
pop
and
in
into
xchg
scas
repnz
jns
mov
push
cmp
mov
mov
lock
icebp
inc
dec
xchg
dec
icebp
jns
mov
out
mov
nop
fsubrs
test
decl
mov
cmp
aam
adc
pop
ds
loopne
cmp
adc
pop
stos
push
pop
cs
lock
xchg
movsb
test
out
into
lods
loope
jb
insl
ds
shl
and
cltd
in
add
test
inc
xor
clc
adc
pushf
lret
cld
dec
int3
sbb
popa
stc
clc
movsb
pop
jp
mov
cmpsb
sub
neg
pop
les
lret
push
incb
xchg
xor
call
sbb
stc
clc
cmp
push
loop
pop
pop
cmp
sub
jne
jp
in
jge
in
aam
xor
fidivrl
cli
ds
sbb
fucom
xchg
mov
cmp
outsl
push
cmpsl
pop
or
insl
xchg
mov
add
cmpsb
leave
or
jae
jecxz
in
ret
fisubrl
pop
jne
scas
push
lea
fisubrs
ja
mov
dec
cmp
adc
into
cmp
and
lock
lret
push
push
scas
aam
inc
enter
or
scas
pop
push
in
xchg
cmc
push
int3
aad
mov
bound
loop
jns
in
flds
cmpsb
faddl
in
or
push
loopne
pop
xbegin
and
sbb
inc
fidivrl
movsb
sub
mov
and
inc
jae
adc
fs
jno
aas
adc
cmp
jne
fwait
sahf
sbb
push
js
dec
mov
cmp
lret
cmp
in
arpl
bound
mov
sbb
imul
repz
mov
ja
lods
inc
inc
push
cld
push
outsb
dec
cmovb
ds
stc
sbbb
ds
cmp
int3
mov
sub
jge
test
test
add
arpl
neg
cmpsl
popf
sub
in
aas
ds
or
mov
pop
mov
push
out
push
mov
pop
xor
lds
aam
aad
ret
mov
pushf
add
rorl
push
adcl
mov
sbb
mov
push
adc
xchg
ja
insb
out
shrl
addr16
insb
lods
inc
mov
test
pop
pushf
rcl
pop
mov
fwait
dec
mov
scas
lret
xor
mov
scas
jmp
xor
or
outsl
cwtl
arpl
decl
loope
or
lahf
adc
bound
push
outsb
pop
xchg
cmp
lds
sbb
nop
xchg
sub
xchg
rcrb
push
cwtl
in
xorl
dec
adc
in
stos
push
xor
sub
ret
adc
push
pop
out
aad
xchg
js
mov
adc
and
rcrl
add
loop
lock
rcl
in
loop
dec
ret
shl
faddl
outsb
outsl
fwait
mov
push
in
loopne
push
fs
xchg
roll
fdivrl
aam
and
and
lea
mov
ret
inc
inc
fcomp
ds
xchg
sbb
stos
xchg
push
jns
mov
lock
and
mov
push
imul
mov
mov
imul
cmp
pop
repnz
mov
push
test
mul
push
dec
xchg
add
mov
push
cmpsb
jecxz
xor
call
mov
jns
jae
adcl
jge
adc
jae
add
dec
aaa
imul
fstps
jne
loop
filds
filds
add
icebp
mov
mov
mov
xchg
sbb
xchg
ret
dec
das
mov
orb
call
add
mov
ret
std
mov
mov
loope
sub
inc
addb
sbb
in
inc
cli
push
sbb
jno
xchg
scas
cmp
mov
sbb
cmp
hlt
jp
cmp
sub
test
in
fistps
xor
pusha
cmpl
cwtl
ja
jne
jnp
mov
pop
adcl
jmp
pop
mov
mov
push
insl
jo
in
mov
inc
inc
jl
aas
out
xor
mov
inc
xchg
lcall
cld
js
std
cmp
sbb
aam
clc
test
xchg
xchg
add
jae
aaa
push
and
rorb
mov
out
push
out
push
in
fadds
xchg
dec
std
stc
sbb
jl
cmp
lahf
push
pop
scas
fwait
leave
or
push
xor
sbb
nop
inc
nop
mov
testl
mov
stc
mov
loope
mov
and
pop
xchg
dec
fisttpll
loope
stos
hlt
inc
ljmp
mov
and
stc
and
cli
popf
xchg
or
xchg
sbb
test
repnz
test
jl
fmull
pusha
lods
jl
mov
jp
pop
ret
repz
xor
pusha
cmp
outsl
jp
mov
sub
pop
push
pop
mov
push
xchg
pushf
out
rcl
leave
ret
fildll
sub
mov
or
fcoml
mov
cmp
ss
pop
sub
pop
xorb
ss
lea
lods
cmp
jno
jecxz
mov
imul
orb
lods
ret
and
bound
mov
inc
xchg
arpl
jne
cmp
jle
repz
and
add
xor
xchg
idivb
clc
int3
flds
das
imul
nop
and
aaa
scas
loopne
fidivs
aas
lret
xor
mov
sbb
sbb
mov
inc
mov
cwtl
cmp
sbb
aaa
xorl
pop
sbb
pop
loop
aam
aam
cs
sbb
xchg
lret
and
scas
cli
mov
lds
push
int3
add
xor
shrb
or
aas
insl
add
and
jo
cltd
or
ficompl
in
fistpl
or
dec
pop
xchg
outsb
pop
and
in
adc
lret
pushf
in
sbb
repz
jo
js
sbb
and
loopne
sub
pop
add
pop
inc
mov
jbe
xor
roll
mov
mov
jle
ret
jmp
mov
add
aas
shlb
rcr
test
movsb
stc
mov
lds
mov
dec
add
jno
jle
ljmp
aad
iret
mov
shrb
mov
inc
test
mov
shlb
mov
or
bound
push
inc
inc
lock
sub
mov
jl
lods
jp
cmpsl
aaa
pop
inc
mov
sbb
mov
clc
hlt
push
push
incb
aas
pop
mov
imul
mov
add
outsl
test
xchg
aad
mov
or
lret
add
std
imul
int
adc
rcrb
shrl
push
pop
jnp
std
cmp
fwait
pop
pop
pop
stos
mov
xor
lret
into
cmc
daa
and
loope
jbe
xor
ljmp
inc
push
xchg
divl
fnstenv
push
cmp
push
addr16
add
fwait
pusha
test
movsl
xor
push
repnz
inc
xor
cltd
dec
out
ret
mov
mov
lea
sub
mov
mov
lret
inc
xor
call
adc
cld
or
mov
test
sub
add
je
push
imul
sbb
pop
or
rolb
in
mov
add
pusha
aas
aas
jbe
and
mov
nop
lcall
and
pop
mov
inc
mov
inc
and
sahf
mov
push
cmp
mov
xchg
pop
cmp
pushf
adc
adc
xor
inc
add
xchg
xchg
sahf
jns
mov
and
aad
dec
je
popf
mov
out
push
or
mov
push
xchg
sub
shrb
jbe
enter
push
xchg
pop
cmpsb
popl
cmpsb
xchg
lahf
pop
stos
and
shrb
sbb
mov
data16
call
popf
addr16
orl
mov
xchg
sbb
ss
jnp
test
jns
test
data16
popa
adc
cmp
xchg
scas
fidivl
in
ja
rolb
in
dec
enter
ljmp
pushf
cli
mov
add
stos
jg
fidivrl
nop
fcoml
std
inc
cmp
in
cld
fimull
inc
bswap
pop
cli
jecxz
stos
dec
jmp
mov
add
je
mull
push
pushf
pusha
shl
push
adc
scas
xchg
loop
cmp
ficomps
add
or
mov
pop
cli
aas
xor
jp
dec
cmp
mov
cwtl
add
push
pusha
or
pop
sar
shrb
sub
aaa
xor
cltd
aaa
outsb
int
or
mov
sub
xor
xchg
pop
xchg
aaa
pop
pusha
and
mov
push
fiaddl
xchg
add
or
scas
in
fbstp
lock
xor
jg
adc
out
lret
cmp
movsl
sbb
or
mov
ja
int3
setne
pop
xor
pushf
dec
test
pop
sbb
mov
sti
add
repz
sub
fsubrs
enter
imul
testl
sahf
and
pop
jg
mov
shlb
jmp
or
sub
pop
pop
adc
nop
pusha
mov
pop
jp
push
aaa
mov
push
push
push
daa
popf
int3
push
mov
dec
xchg
roll
and
inc
mov
pop
push
test
sbb
fstpt
mov
xchg
mov
pusha
or
mov
bound
inc
jmp
ds
xchg
push
push
jle
stos
or
lret
scas
adc
adc
movsb
test
icebp
mov
inc
mov
lods
sbbb
shll
adc
push
mov
idiv
sub
data16
and
outsb
rcll
push
jp
rcrl
jg
xor
sub
lret
push
pminsw
jae
xchg
inc
pop
outsb
inc
sub
pusha
js
inc
push
andb
rcll
not
fisubrs
sahf
rcl
lret
movsl
pop
mov
gs
dec
lahf
mov
or
in
xchg
das
int
loop
lcall
cwtl
xchg
mov
sub
add
dec
mov
fcompl
clc
inc
and
fstpl
ljmp
in
push
out
ficoms
scas
inc
out
inc
sbb
cmp
gs
jg
popf
xlat
nop
xor
mov
xchg
inc
dec
inc
sbb
mov
push
lock
jnp
cmp
push
loope
popa
cmp
push
dec
push
jecxz
mov
mov
mov
xchg
cld
cld
fsubrs
jp
push
add
outsb
out
mov
adc
in
sub
clc
movsl
xor
mov
ret
ret
enter
and
pop
push
lods
inc
sub
add
xor
pop
in
xor
pop
push
mov
iret
cmp
jecxz
jle
cmc
pop
movsl
bound
fistps
lock
mov
inc
movsb
fucomi
dec
pop
stos
roll
mov
push
dec
out
enter
and
fs
icebp
js
pop
jo
jp
adc
or
in
mov
mov
cmp
cmp
aam
push
xchg
pmaddwd
clc
cmp
or
mov
out
xorb
andb
bound
mov
jle
inc
fwait
sar
sbb
cwtl
add
repnz
xor
or
mov
mov
mov
add
xor
es
test
in
test
shrb
sbb
mov
pop
std
pushf
adc
jbe
and
add
outsl
add
lock
cmpsb
leave
ret
aam
icebp
cmp
or
repz
movsb
arpl
lret
mov
xchg
lcall
add
aas
xchg
aaa
inc
mov
jbe
mov
stc
or
cmp
add
pop
push
or
mov
push
dec
inc
jge
ffreep
daa
sbb
or
lahf
or
adc
cmp
lods
mov
and
mov
cld
dec
lods
or
mov
out
cmp
out
idivb
xchg
rcrl
xchg
insl
loopne
fs
mov
sub
or
aam
add
xor
enter
clc
adc
push
int3
imul
lock
xchg
ds
inc
pop
sbb
sbb
in
imul
xchg
cmp
jnp
imul
ja
ljmp
stc
pop
sbb
push
mov
or
jo
xchg
shlb
daa
xchg
test
sbb
push
xor
cli
push
and
cli
mov
fxch
jae
cmp
xor
jnp
xor
sbbb
xor
shrl
add
pop
pop
lcall
sti
jp
mov
out
cmp
mov
xchg
movsb
xlat
arpl
movl
ja
cld
or
iret
jb
popa
xor
jae
rolb
fmuls
push
dec
outsl
xchg
test
cld
xor
imul
or
inc
in
sub
push
lock
cmc
push
mov
inc
orb
mov
dec
sti
sbb
xchg
adc
push
sahf
pop
icebp
inc
add
pop
cs
adc
xorl
fistps
scas
sub
xchg
jle
inc
dec
enter
and
pop
aas
mov
in
daa
push
xor
inc
popf
aam
mov
out
pushf
push
cli
cwtl
mov
jecxz
sti
sbb
mov
jmp
jmp
adc
mov
ds
or
sbb
clc
mov
jp
mov
pop
jp
fst
rcrb
jbe
test
mov
sub
icebp
mov
loope
mov
lcall
mov
stos
push
and
nop
dec
xchg
fistl
jnp
js
aas
mov
jns
dec
cmc
xor
mov
icebp
bound
fxch
adc
inc
dec
add
push
mov
aam
jl
cli
sbb
mov
push
out
inc
pop
jnp
dec
xchg
inc
lock
jbe
loopne
pusha
popa
sbb
inc
scas
adc
push
icebp
mov
out
jno
je
sbb
jo
pop
scas
lods
mov
loope
cmp
andb
lret
and
push
or
xchg
in
xor
imul
inc
sbb
fwait
lods
out
push
add
sub
mov
push
ret
and
addr16
out
sbb
dec
cwtl
jl
idivl
push
andb
mov
pop
cld
leave
xor
sti
shll
jb
rclb
sub
add
jle
mov
inc
pop
ret
data16
jge
xor
into
xor
insb
lret
push
mov
cltd
movsl
sub
shrl
leave
inc
mov
mov
and
pop
in
add
push
repnz
fdiv
mov
push
fistl
xchg
test
push
add
mov
sub
inc
mov
inc
out
push
stos
sarl
add
mov
das
mov
loop
ret
sti
jl
inc
jnp
xchg
in
and
mov
pusha
orb
push
sarl
data16
mov
sbb
cmc
dec
adc
jns
sar
movsl
rorl
repz
cld
pop
imul
repz
inc
mov
xchg
loope
jnp
xchg
int3
jns
mov
dec
js
test
mov
dec
mov
mov
aas
or
testl
or
sbb
push
jmp
and
xchg
rol
leave
icebp
lret
aaa
pop
jb
and
cltd
mov
shll
rcl
out
cmp
push
push
mov
lock
sbb
pusha
cmp
sbb
push
xor
sbb
mov
ret
mov
repnz
loop,pt
mov
mov
or
inc
ljmp
daa
cmp
mov
decl
dec
loope
or
cmc
fnsave
insb
sarb
xchg
push
adc
pop
and
pop
scas
sub
sbb
adc
mov
add
dec
pop
cmpsl
out
jnp
jbe
out
or
xchg
push
sahf
lahf
sbb
in
xlat
inc
fsubrs
mov
sbb
das
cmp
mov
and
push
adc
xor
push
mov
cmp
rep
out
cmp
repnz
jbe
dec
sub
pop
std
fistpl
jmp
testl
cli
ud2
push
andl
cs
xlat
add
fs
jae
aas
jmp
dec
cmpsl
test
pop
enter
loopne
scas
arpl
les
jecxz
cld
imul
sub
fdivr
cmp
add
inc
xchg
lods
jl
dec
cmp
mov
insl
cwtl
fcom
xchg
aad
and
push
xchg
mov
mov
mov
mov
inc
cmp
outsl
loopne
jbe
and
mov
xchg
fcoms
insl
es
mov
xchg
out
stc
inc
cmp
pop
xchg
in
ja
repnz
push
arpl
aad
push
push
cmp
pop
sahf
subl
aam
cmp
adc
mov
nop
fadds
xchg
jg
and
orb
sub
jnp
lret
les
ret
ljmp
outsb
xchg
movl
lea
mov
rclb
jmp
daa
lret
pop
stos
sub
mov
mull
lret
add
mov
test
cmp
inc
lahf
int3
imul
xor
and
out
jl
sub
inc
repnz
push
rep
or
lock
out
dec
pop
mov
push
cmpb
cld
jne
mov
dec
xchg
cmovo
das
mov
mov
pop
sbb
sub
test
mov
sub
mov
in
cld
rorb
es
jb
or
sub
insb
xchg
mov
jb,pt
lods
jno
cmp
sbb
inc
jnp
cmp
mov
cltd
cmc
push
or
xorb
pop
orl
call
sub
xchg
lea
push
test
sbb
jo
xor
mov
test
shll
lret
je
sbb
dec
cld
mov
bound
add
arpl
cmpsl
fstp
xor
leave
push
ja
icebp
fisttpll
and
mov
mov
in
in
out
sub
add
mov
jmp
sbb
ss
loope
ljmp
fbstp
sti
mov
jns
push
loopne
fcompl
in
xchg
xor
stos
shl
jmp
push
idivb
repz
jle
fildl
lods
ret
daa
push
cld
cmpsb
das
mov
mov
xor
mov
movsl
cmpl
and
mov
outsl
aad
adc
cmp
inc
jp
loopne
cmpsl
jmpw
jae
mov
push
stos
fisubrs
test
cmp
popf
popf
push
and
daa
test
sbb
pop
xchg
push
push
in
add
jae
sti
inc
jnp
out
sbb
sbbb
and
xlat
sbb
mov
mov
pop
or
jg
push
push
inc
sbb
out
jmp
into
ret
rorl
mov
and
addb
dec
cs
jo
in
lods
sbb
lret
data16
lret
lret
aas
loop
jle
sbb
pop
lcall
addr16
les
xchg
pop
cmp
cmp
lods
ds
xor
fidivs
dec
bound
cmp
popa
push
lods
stos
in
rol
pusha
ljmp
adc
mov
sub
jp
in
mov
sti
mov
jo
sub
into
movsl
jo
cmp
test
and
jae
xor
and
ficomps
sub
or
sub
xchg
lods
xor
ret
mov
repz
imul
sti
adcb
lods
inc
add
daa
sub
ss
imulb
rcrl
scas
out
mov
ja
popa
aad
inc
lock
push
incl
inc
mov
mov
cmp
cmp
cmp
jmp
enter
stc
lea
jmp
and
aaa
sub
cli
dec
loopne
inc
fmul
fisubrl
inc
add
adc
ljmp
sbb
ret
cli
mov
pop
test
or
in
mov
jge
fwait
pop
scas
cmp
mov
fsts
and
fwait
sub
cld
sbb
cmpsb
adcb
dec
or
cmp
cmc
xchg
lret
in
iret
sub
mov
das
pop
pop
movsl
sub
test
push
push
push
nop
adc
dec
int
outsl
mov
out
adc
pop
dec
jae
in
xchg
mov
ljmp
adc
mov
hlt
mov
stc
xor
lods
cli
jle
sub
jae
imul
fiadds
and
mov
mov
mov
dec
cmp
dec
push
jns
les
bound
xor
jo
int3
loopne
sub
or
or
cmpsb
loop
sbb
pop
test
mov
test
dec
push
adc
sbb
mov
cltd
jg
sti
cld
sub
fidivs
xor
jg
mov
ja
sbb
sub
fstl
int3
out
pop
shrb
mov
imul
cmc
dec
out
cmp
push
xchg
xor
mov
push
shll
cmp
inc
mov
addr16
cwtl
arpl
sarb
lret
insb
popa
mov
or
adc
jo
push
sbb
subb
and
sub
lret
or
stos
aam
das
inc
data16
loope
mov
and
les
pop
es
pop
sub
sti
xor
lds
pushf
icebp
mov
or
xor
sahf
push
xor
mov
lds
addb
and
mov
ja
or
in
sub
ret
jo
adc
sbb
je
pop
adc
pop
loopne
dec
ss
pop
aas
out
xlat
fnstcw
mov
mov
enter
popa
and
jae
lods
pop
sbb
push
aam
mov
insl
out
xchg
stos
xchg
push
mov
jno
pop
pop
lcall
notb
inc
cmp
pusha
std
xor
sbb
in
in
and
movsl
les
or
xor
xlat
lods
es
mov
repz
not
inc
push
lock
movsl
mov
repnz
inc
and
roll
dec
ret
in
add
ds
mov
shr
mov
sub
fldl
push
sbb
test
sub
pop
jnp
pop
pop
cltd
fldl
mov
and
jae
ret
inc
xchg
sarb
dec
or
xor
push
adc
fisttpll
pop
xlat
imull
mov
dec
push
jcxz
das
mov
dec
int
lock
outsb
sbb
out
xor
daa
int
popf
cmp
or
arpl
hlt
aaa
stos
mov
loop
cmc
cmp
push
enter
test
in
cli
sbb
mov
sub
mov
inc
mov
lret
mov
ja
clc
imul
mov
aam
xlat
rorl
scas
adc
pop
js
mov
sbbb
daa
js
jo
xchg
fs
cmpsl
ja
por
pop
mov
xor
sub
mov
inc
fistpll
sub
pop
mov
xchg
push
mov
js
out
add
sbb
daa
shll
pop
cvttps2pi
addr16
cli
push
mov
and
push
xor
ficoml
jbe
xor
stos
pop
pop
pop
fisttpl
test
shld
xchg
inc
cmp
adc
inc
cs
jge
push
push
or
pusha
push
mov
pop
jp
jne
pop
xor
ja
fcmovnu
mov
enter
int
fstpt
arpl
mov
mov
js
imul
in
loopne
cmp
movsb
and
enter
iret
daa
add
push
fnstenv
outsb
movsb
sub
cmc
or
pop
jp
mov
xchg
pop
sub
testl
jae
loop
divb
iret
mov
or
sahf
add
cmp
lock
lds
mov
fs
mov
cld
jns
mov
loope
inc
pop
xor
rep
lcall
xchg
cmp
sbb
sbb
push
add
out
pushf
fchs
cmpsl
out
inc
mov
or
icebp
fs
das
leave
sub
jecxz
xchg
nop
mov
decb
xor
mov
aad
jns
jno
movsl
xchg
insl
cmp
loope
mov
push
gs
pop
cmp
pop
sti
enter
ret
or
mov
xor
shll
pop
pop
jge
call
mov
pop
enter
imul
cmp
push
jo
movsl
ret
push
imul
fldcw
aas
xor
nop
jmp
loope
popa
and
test
pop
jecxz
pusha
sahf
sub
mov
insl
jp
pop
popa
addr16
and
or
inc
and
repz
cmp
daa
adc
rcl
pop
stos
push
das
imul
cmpsl
push
rorl
fwait
pop
lock
out
adc
not
and
sahf
and
pop
fcoml
repz
sarb
dec
fcoml
test
sub
mov
sti
rorl
push
ret
test
sbb
inc
cwtl
ss
pop
inc
and
add
insl
ror
jmp
pushl
loop
test
popa
inc
lea
sbb
jp
js
lcall
add
cmpsl
scas
stos
mov
sub
aas
mov
loopne
sti
mov
aaa
hlt
pop
and
and
dec
jmp
or
inc
js
push
add
adc
das
cmp
stos
dec
sub
adc
jno
js
aad
add
xchg
and
dec
lret
ljmp
fs
inc
add
jo
aas
in
into
adc
dec
movsl
dec
sbb
adc
xor
iret
adc
jg
out
push
fdivrp
es
push
xchg
mov
movsl
arpl
mov
rcrl
pop
jne
add
aad
je
int
int3
int3
pop
add
pop
pop
cs
cmp
cld
dec
test
fwait
jp
sub
xchg
xchg
and
mov
cmpsl
adc
test
test
inc
sub
xorb
stos
mov
icebp
test
xchg
inc
and
inc
pop
ja
add
cmpsl
push
push
rcll
cmp
sti
cld
push
cmpsb
pop
xlat
or
pop
add
insl
dec
or
sbb
add
and
insb
jo
lea
cmc
aad
test
outsb
jge
ja
adc
jl
adc
and
jno
dec
stos
xor
pop
push
jl
ret
fstl
mov
adc
mov
dec
cltd
cmp
xor
test
imul
cmp
push
and
push
in
les
clc
shr
sub
xchg
shrl
inc
outsb
fs
cld
lods
pop
sub
in
andl
cli
jnp
xor
inc
mov
in
mov
lcall
mov
cwtl
sbb
scas
mov
adc
cmp
cmp
mov
and
xchg
cmp
pop
addb
ret
mov
icebp
mov
gs
out
fildll
xlat
pop
scas
loopne
clc
cmp
xor
dec
fyl2x
sub
addb
je
lcall
subl
inc
push
cmp
or
ret
into
lcall
rcr
inc
ret
sub
pop
or
in
sar
fmuls
ss
jg
push
jmp
push
push
sub
dec
and
lock
insb
popa
lock
xchg
sub
ss
cmovae
enter
sub
dec
test
lods
repz
push
inc
out
cwtl
rcr
jnp
jp
andb
pusha
fbstp
sub
xlat
xor
je,pt
popf
cmp
aas
mov
sub
sbb
sbb
inc
xchg
cld
pop
fxch
test
pop
sbb
mov
cmp
repz
in
cmpl
mov
fisttps
mov
call
sahf
pusha
mov
popf
repnz
inc
rolb
pop
sub
jbe
mov
lea
ljmp
sbb
jecxz
mov
mov
xor
push
sub
int3
dec
ret
out
mov
test
and
pop
or
mov
lcall
bound
aad
imul
push
xor
xchg
xchg
cmc
cwtl
icebp
pop
leave
jne
cmp
sbb
lods
mov
push
incb
pop
test
pop
jns
in
sub
lea
push
cmp
mov
mov
outsb
pop
pop
aam
stos
sbbl
add
loopne
ret
mov
inc
inc
mov
aam
add
adc
adc
mov
jle
mov
sub
add
push
bound
mov
cmpsb
cmp
jecxz
andl
pop
stos
movsb
out
jb
daa
xchg
pop
mov
mov
xchg
mov
sahf
and
adc
out
test
imul
push
lcall
add
mov
sahf
cli
loope
add
cmp
push
jne
sti
and
mov
int
aad
mov
not
xchg
cmc
xor
push
jmp
mov
and
jns
mov
and
mov
pop
mov
loope
sbb
and
test
test
ss
cmpsb
movsb
mov
shl
mov
xor
cmp
int
push
cmp
mov
jmp
mov
jne
add
mov
aad
xchg
scas
repnz
inc
popa
hlt
loope
xchg
ret
pop
or
shll
arpl
inc
or
je
pusha
fistps
rcrl
inc
xchg
or
sarl
and
clc
xchg
test
sub
sbb
jle
rol
jmp
aam
cli
repz
das
xlat
nop
jbe
subl
dec
jmp
mov
mov
push
adc
repz
cltd
cmp
and
sbb
int3
andl
scas
sbbb
sbb
xchg
stc
jle
cmp
xlat
nop
push
es
andl
xorb
dec
pushfw
dec
rcrb
or
mov
xor
mov
in
inc
mov
loop
into
sarl
aad
xor
inc
call
jecxz
adc
je
outsb
arpl
fwait
cli
je
pop
inc
jne
mov
daa
or
jge
clc
mov
cmp
rclb
add
xchg
fdivrs
cmp
int
or
push
outsl
dec
cli
sub
xchg
stos
push
jecxz
inc
fmuls
sub
test
rcr
mov
mov
xchg
ficoms
fisubl
xchg
dec
inc
mov
inc
les
shll
dec
inc
sbb
scas
pop
daa
mov
mov
or
jl
shlb
int
cs
test
shrb
ja
inc
test
dec
pop
stos
xor
dec
xchg
and
mov
outsb
xchg
pop
aam
into
jne
adc
pop
jg
xchg
xchg
mov
sti
cld
les
pop
or
push
push
fs
les
repnz
fwait
jnp
mov
ret
lea
lret
sub
mov
mov
jp
add
mov
inc
aaa
cmp
inc
addr16
pop
je
popf
or
inc
loopne
stos
divb
and
lds
icebp
aaa
xor
cmpsb
je
repz
jmp
mov
daa
sbb
cmpsl
les
jae
mov
outsl
mov
nop
scas
jmp
xchg
mov
mov
lea
and
pop
mov
test
mov
pop
and
dec
push
push
outsl
lds
adc
or
loop
mov
and
jbe
shrb
addr16
pop
push
push
mov
scas
add
mul
sbb
cmp
bound
cmp
mov
pop
repz
dec
daa
sbb
aas
pop
xchg
popf
icebp
cli
fdivrl
push
das
ss
dec
pushf
gs
imul
rol
or
outsb
fiadds
dec
subb
test
pushf
out
mov
jns
or
ja
int
xchg
jnp
testb
or
push
cli
cltd
jnp
aas
iret
inc
test
setp
lret
xlat
xchg
sbb
and
mov
gs
rorl
je
scas
dec
dec
sub
mov
es
ja
mov
dec
push
mov
popaw
jecxz
and
fimull
xor
add
lret
das
stc
fs
mov
sub
cmp
adc
cmp
sub
jge
cmp
mov
jg
std
mov
mov
sbb
sahf
out
fwait
add
cmp
push
push
incl
sbbb
mov
ja
div
insl
adc
jne
bound
push
sbb
sub
push
or
inc
sarl
addb
pop
sti
outsl
jno
dec
rcll
in
aaa
sbb
faddl
rolb
xchg
adc
cld
pop
jae
dec
push
mov
movsb
xchg
xor
rep
mov
outsb
int3
out
jne
adc
pop
pop
stc
fidivl
xchg
test
leave
rcrb
add
je
leave
push
mov
xor
imul
jno
push
sbb
in
arpl
es
mov
in
inc
in
pushf
outsb
or
mov
mov
pop
loope
push
mov
js
imul
mov
movsb
orl
push
mov
mov
cmp
mov
mov
inc
pop
add
pop
outsl
or
into
bound
dec
mov
fs
jb
pushf
xchg
inc
lds
pop
xchg
push
mov
data16
icebp
mov
out
sub
std
add
test
movsl
imul
mov
pop
imul
ret
dec
out
add
xchg
inc
ret
push
push
xchg
and
popf
jle
sbb
xlat
fistps
ljmp
inc
xor
mov
lret
test
mov
cmp
add
add
mov
fisttpl
cmp
les
stos
les
lds
push
mov
adc
add
shll
inc
xchg
lods
jg
daa
nop
imul
repz
popa
mov
int3
and
xchg
pop
cmp
outsb
push
or
xor
jg
leave
cmp
dec
scas
inc
push
scas
mov
or
jecxz
rcrl
fwait
pop
rorl
call
movsl
dec
repz
fstl
mov
xchg
loopne
incl
jl
lcall
int
mov
bound
or
mov
mov
fwait
test
xchg
ljmp
xchg
xchg
jbe
cmp
out
jns
jno
out
test
dec
jns
out
sub
mov
mov
cmpsb
sbb
inc
hlt
test
mov
or
mov
jmp
pop
ret
aas
push
pop
sub
and
xchg
insl
pop
inc
mov
outsb
add
daa
or
cmp
sub
out
stos
or
inc
hlt
pusha
xor
stc
fidivrs
insb
jmp
frstor
pop
fcmovbe
orl
in
push
daa
mov
pop
dec
cmp
out
mov
add
push
xchg
ret
mov
loopne
xchg
dec
stos
imul
addb
mov
out
into
add
das
inc
push
inc
lahf
fs
dec
insl
lcall
add
cmc
or
int
push
inc
mov
sbb
lcall
loop
sti
jle
cmp
mov
popa
xor
shr
xor
fs
std
inc
mov
imul
xchg
scas
jle
and
ret
nop
movsb
test
xor
jecxz
arpl
cli
add
cli
mov
lods
jno
jp
cmp
cmc
cmp
imul
lods
lret
mov
mov
enter
sbb
cltd
aam
loop
movsb
add
push
inc
add
aam
cltd
leave
push
insl
inc
cmpsl
loop
inc
mov
add
andb
jne
and
fistpl
adc
push
dec
int
jno
leave
int3
adc
cmp
sub
xchg
and
inc
test
inc
inc
jmp
out
pushf
mov
mov
shlb
dec
mov
fiadds
push
adc
rorl
xchg
cwtl
jp
mov
imul
cmc
inc
aam
mov
mov
cmc
mov
push
sti
xor
and
sbb
push
xor
imul
test
jl
lds
xor
adc
dec
call
mov
sub
data16
mov
sti
pop
push
pop
out
mov
daa
jo
lods
stc
shr
mov
orb
xchg
inc
pop
lret
jmp
push
mov
mov
iret
push
xorl
popf
stos
fdivrl
mov
add
cmp
mov
stos
in
jo
pop
iret
cmp
push
jo
xor
and
jb
stos
jnp
sbb
mov
in
and
sbbl
subb
add
xchg
lock
sub
ret
dec
pop
idiv
mov
inc
jmp
or
enter
mov
movsb
add
sbb
js
out
iret
lahf
pop
loopne
test
enter
into
jae
stos
xor
cmp
pop
push
jbe
dec
lcall
fisubs
or
test
xchg
aad
stos
imul
and
mov
jp
fwait
adc
jno
rol
in
pop
jge
mov
dec
ljmp
pop
xor
sub
int
insb
lds
mov
mov
dec
loop
jne
shr
scas
jl
inc
data16
gs
jns
lods
cltd
gs
in
push
dec
mov
push
lahf
pushl
negl
pop
pop
popa
mov
xchg
in
or
aad
mov
push
mov
xchg
push
xor
stos
lock
inc
fst
mov
js
popa
lahf
add
adc
and
xchg
clc
xor
pop
sub
dec
test
xchg
mov
adc
cwtl
xor
push
out
lret
subl
pop
pop
aaa
mov
aaa
rolb
inc
xor
lahf
pop
cld
ret
ljmp
jg
movsb
and
je
decb
add
jl
jb
cmp
mov
sub
inc
cmp
or
jp
lods
lds
push
mov
sub
mov
fistl
add
icebp
jno
nop
mov
subl
cmpsl
inc
push
call
jb
sub
or
push
and
mov
mov
int
jae
xor
pop
das
pusha
push
mov
push
gs
fstps
dec
loop
stos
adc
cmpsl
cmp
lds
fdivrs
fcoms
add
xlat
adc
out
mov
cli
in
cwtl
inc
dec
les
sub
test
inc
movsb
add
and
cmp
ljmp
adc
sbb
fisubrl
movb
jp
adc
or
pop
jl
icebp
adc
subb
addl
jbe
in
lret
rorb
subb
mov
xchg
jecxz
cs
mov
fstpt
fwait
dec
dec
addl
jno
dec
and
sbb
hlt
add
pop
push
aas
push
cmpsl
aaa
sub
sahf
in
mov
lret
js
mov
cmp
or
and
xor
mov
or
inc
add
jmp
cld
daa
mov
cwtl
or
ret
or
fisubs
outsl
rol
imul
std
adc
and
pop
dec
int
mov
xchg
sbb
rclb
cmpsb
sub
and
cltd
movsb
sahf
and
adc
sarl
in
mov
pop
andb
aaa
and
sub
sbb
repz
add
je
ja
jp
and
jl
push
fists
mulb
dec
hlt
in
mov
adc
clc
jae
ret
pop
push
enter
pop
shrl
pop
or
mov
insl
mov
faddl
jge
or
dec
mov
aad
cmp
or
imul
or
bound
outsb
mov
inc
shlb
mov
adc
lods
mov
out
scas
outsb
or
dec
jb
mov
mov
inc
xlat
cmpsl
scas
mov
subl
jno
jg
mov
pop
pop
jo
fnstenv
icebp
fcompl
lds
outsl
mov
cmp
sub
stos
pop
pop
xor
xchg
ret
jl
ret
push
loopne
jo
sub
sbb
ss
popa
or
test
test
sbb
or
push
das
in
int
xchg
xlat
call
call
dec
pop
mov
pop
shr
xchg
lret
push
ret
mov
jl
ds
sahf
jnp
insl
cmp
pop
xor
lcall
addl
sbb
dec
jnp
out
or
push
jl
es
out
orb
cld
and
mulb
dec
clc
adc
or
loop
mov
or
dec
xor
mov
adcb
fdivrl
dec
push
push
pop
mov
xor
ja
ret
pop
rol
and
std
jge
rorl
cmpsl
mov
push
mov
sbb
das
int
sub
in
xchg
xchg
imul
inc
mov
invd
stos
notb
testb
popf
mov
movsb
in
shll
fidivl
lds
push
xlat
push
dec
dec
jb
daa
mov
pop
lea
mov
test
xchg
outsb
inc
push
arpl
js
sbb
cmc
pop
outsb
stos
aas
das
mov
shlb
jno
add
xchg
ljmp
popa
mov
idivl
addr16
mov
aad
add
in
cmp
fistl
aas
repz
out
pop
adc
push
jp
ret
out
inc
rcll
push
stos
lods
mov
pop
pushf
xor
push
dec
inc
inc
pop
push
pushf
ret
clc
fstp
jne
clc
cmc
push
pop
orb
cmpsb
outsb
mov
ljmp
cmp
xor
cmp
push
fimull
or
mov
pusha
ljmp
rorb
xchg
pop
lea
repz
add
mov
inc
mov
and
pushf
cmp
or
out
jg
faddl
mov
popl
iret
pop
sbb
out
pusha
lods
mov
loope
sub
ds
and
jp
add
fiaddl
mov
cmp
dec
mov
sarl
lahf
and
pop
and
push
aad
incb
push
xchg
cmp
shrb
imul
jnp
scas
fwait
xchg
pushf
das
adc
xchg
cld
sbb
push
or
dec
push
shlb
sub
scas
push
in
cli
shrl
inc
xchg
mov
jne
iret
xchg
movsb
out
pop
sbb
in
jns
out
out
flds
inc
xor
lea
mov
adc
add
pop
lahf
and
push
test
ret
pop
scas
aad
mov
mov
dec
cmp
jle
jns
popfw
insl
fimull
scas
into
fcompl
dec
sub
js
adc
loop
and
lods
mov
mov
push
insb
test
loopne
cmpsl
cwtl
xchg
or
jno
popf
ss
mov
push
and
cmpsl
hlt
ljmp
jle
lea
mov
mov
pop
loop
sub
pop
adc
push
mov
mov
jbe
out
data16
xchg
or
inc
cli
cmpsb
sti
pop
or
clc
sub
gs
lahf
ret
and
mov
inc
push
ret
dec
ss
mov
lea
pop
into
xchg
push
sub
xor
pop
lea
andl
mov
cmp
xchg
or
pop
in
test
repnz
push
mov
jp
sbb
ja
stos
pop
aad
stos
sbb
scas
dec
push
mov
inc
in
movsl
fdivl
shl
or
mov
dec
jmp
jo
dec
popa
ljmp
fildll
xchg
cld
decb
into
nop
push
dec
xchg
mov
pop
or
enter
jp
inc
pop
jns
add
hlt
inc
push
ja
shlb
mov
and
rorl
out
and
pop
fsts
sbb
mov
adc
jmp
pop
sahf
ret
lcall
mov
add
les
sti
sbb
ljmp
lcall
sbb
jbe
mov
outsb
jo
xor
jns
in
mov
sbbl
add
bound
inc
cmpsb
add
sarl
das
hlt
bound
lods
adc
push
lcall
mov
sbb
popf
adc
pusha
dec
push
jp
jne
pop
icebp
push
sub
ljmp
fdivrl
xchg
mov
mov
call
subb
decb
push
mov
out
xor
xor
out
loopw
pop
lods
xchg
clc
or
xor
pop
enter
mov
cmp
test
repz
add
sub
or
fsubl
fistl
loop
cs
bound
adc
test
sbb
je
mov
push
imul
scas
adc
push
mov
sub
xchg
adc
addr16
test
or
push
sub
inc
mov
mov
lock
outsl
call
scas
js
inc
out
loopne
mov
mov
push
insb
jae
sbb
in
sub
out
iret
xor
mov
fs
or
repnz
pop
stos
inc
add
iret
dec
decb
sbb
js
sbb
lods
addr16
movsl
cmpsl
add
dec
or
jbe
icebp
mov
lahf
insb
sbbl
out
repz
inc
mov
sbb
loope
xchg
adc
jg
or
pusha
mov
push
pop
mov
fidivs
loope
pop
lahf
push
xchg
mov
xchg
mov
inc
or
std
cmovo
adc
fsubrl
mov
cmc
ja
aam
call
packuswb
dec
and
xchg
loope
pushf
cmp
jns
sub
and
xor
ret
sub
push
jne
lods
push
and
pushf
cmpsb
jno
mov
adc
test
push
vpmaxub
cmp
inc
pop
jmp
aad
push
mov
fildll
pop
adc
sbbb
cwtl
cmc
arpl
cmp
xor
icebp
push
fbstp
jae
cmp
mov
outsb
out
repz
leave
out
xchg
mov
or
sbb
lea
mov
call
push
sub
and
data16
stos
xor
sub
sti
pop
ror
cmc
out
pop
mov
sub
sbb
std
dec
gs
inc
pop
jbe
push
mov
and
or
lea
xchg
int3
in
dec
insl
xlat
popa
add
and
scas
repnz
push
lods
push
xor
out
lock
pop
sbb
xchg
lcall
cli
push
xor
dec
stos
imul
sbb
or
out
mov
cs
push
lds
fsubrl
cmp
jo
pop
ret
pop
inc
mov
inc
or
add
mov
adc
ret
out
je
int
fmuls
dec
inc
pop
and
popf
es
and
out
adc
push
mov
lcall
pop
leave
xor
mov
push
mov
scas
xor
scas
sub
mov
pop
push
xchg
testl
push
inc
pushf
mov
xor
push
ret
pop
fildll
xchg
int
jae
cmpsb
or
lock
dec
rcrb
into
scas
add
ja
lahf
mov
and
cmp
jo
ja
mov
fdivr
fldl
push
out
insb
add
in
pop
and
or
out
xchg
jb
and
xchg
jne
mov
aaa
pushf
adc
rcll
shr
shll
movsb
adc
push
mov
mulps
fildll
subb
and
iret
cmp
add
cmpsb
sahf
out
in
pop
mov
inc
out
fwait
movsb
mov
js
push
cmc
shrl
pop
push
aas
xchg
mov
mov
out
into
shll
movsb
xchg
lock
mov
and
adc
dec
imull
test
xchg
pop
pop
mov
ret
sbb
jg
cld
in
dec
mov
imull
ja
fcmovnbe
lret
jecxz
pop
push
cmp
jbe
xchg
scas
push
mov
lods
int
mov
mov
sbbb
lcall
cmp
cwtl
jae
xchg
cld
iret
lahf
pop
stos
xchg
mov
cmpsl
adc
jns
aad
or
shll
adc
ds
adc
cmp
sbb
xlat
scas
adc
fisubrs
cmp
je
jo
inc
adc
repz
fstl
mov
inc
bound
scas
cli
xchg
nop
xchg
jmp
dec
stos
jbe
sub
sbb
push
pop
js
sub
add
pop
jmp
mov
call
xor
sti
repz
inc
daa
mov
negb
ds
lcall
xchg
lea
andl
sub
cmpsb
aad
cmc
and
mov
stos
out
cmp
cmpsb
mov
jmp
cmp
sbb
out
repz
xchg
dec
jbe
or
mov
in
das
jnp
imul
stc
lcall
xchg
cmpsb
insb
push
into
pop
mov
inc
test
xchg
adc
lret
jle
sahf
hlt
das
shrl
jo
aam
mov
sbb
add
aam
daa
shlb
push
cmp
shlb
and
xor
out
mov
jg
sbb
mov
cli
pushf
popf
mov
aad
ret
dec
js
fadd
jo
xchg
fsubl
adc
mov
mov
or
mov
pop
cltd
imull
imul
mov
out
mov
sbb
sti
decl
mov
int3
addr16
push
mov
inc
lahf
fiadds
add
cmp
ss
inc
pop
stc
mov
repz
fs
in
mov
in
fnstcw
inc
test
les
or
adc
or
pop
loope
leave
mov
gs
xchg
sub
int3
pusha
in
mov
or
jbe
pop
lock
stc
loopne
lods
outsl
jo
arpl
pop
adc
movsl
aaa
scas
xchg
add
ret
xor
out
mov
in
fs
cmpsb
ret
out
ss
add
in
mov
arpl
test
inc
xor
loope
pop
shrl
pop
inc
xorl
and
pop
xchg
mov
sub
adc
pop
repnz
jnp
adc
pop
dec
adc
in
sub
movsl
xorb
or
sub
or
testl
dec
pop
and
or
pop
mov
pop
and
or
mov
or
lahf
movsb
repnz
aas
sub
add
fwait
mov
cmc
subb
test
imul
xchg
sbb
repz
push
pushf
push
and
push
inc
or
jg
mov
mov
imul
adc
inc
mov
mov
int3
lds
daa
cmp
cld
loope
daa
adc
xchg
sti
dec
xor
stos
jl
lret
pop
divl
dec
mov
inc
mov
inc
lods
cld
sbb
int3
loopne
mov
sbb
mov
out
test
inc
jmp
mov
sub
dec
sbb
adc
cmp
mov
imul
push
add
in
pop
dec
iret
jecxz
xorb
mov
lods
stc
stc
mov
aad
push
loopne
jmp
push
dec
jle
js
out
lret
sbb
xor
insb
cmpsb
in
sbb
fwait
lea
aaa
cmpsl
inc
push
out
int
pop
xchg
mov
pusha
ret
add
add
lea
gs
cld
pop
je
push
loopne
jne
sbb
mov
fimull
sti
imul
mov
xchg
out
push
lahf
enter
add
push
aad
popa
dec
mov
das
clc
sub
sub
popf
fstps
push
mov
addl
dec
scas
mov
xor
in
add
outsl
je
jbe
xchg
shrl
add
fnstcw
mov
sti
xchg
adc
outsl
lret
adc
cmp
je
scas
pop
fadds
and
inc
mov
fsubs
cmp
sbb
mov
push
sarb
repz
adc
inc
lods
pop
mov
jecxz
dec
mov
ret
inc
hlt
lahf
ss
and
sti
jo
ss
xchg
jg
out
aad
out
cmp
subl
or
imul
push
adc
ds
mov
push
notb
dec
mov
fsubrl
push
cmp
cmp
pop
add
mov
lods
cwtl
xlat
adc
imul
je
leave
pop
add
jns
out
mov
cmp
mov
push
inc
push
add
outsb
aad
cmpsl
ud1
sti
and
jle
jecxz
xchg
enter
aam
mov
aaa
push
loope
into
inc
mov
imul
out
push
xlat
push
out
rcll
and
xor
call
int3
das
fdivs
jmp
loopne
and
fcmovnb
mov
inc
dec
push
jle
push
mov
sbb
jae
stc
pop
dec
xor
push
sub
and
incl
testl
test
leave
lods
dec
xchg
call
out
or
sub
in
jbe
adc
xor
pop
jl
xchg
jp
jnp
sub
mov
pop
xorb
xchg
bound
and
js
sub
ret
mov
fisttpll
loop
fcomps
rcrb
ds
jns
cmp
push
rclb
out
xor
and
add
bound
cmp
xor
xchg
js
and
jno
daa
lahf
arpl
push
aam
sbb
test
fists
lea
repz
shll
mov
jo
pmaddwd
push
ss
sbb
je
and
inc
mov
jp
pushf
cli
jg
inc
and
into
orb
jns
aam
xlat
inc
xchg
scas
out
adc
mov
xor
add
sub
pushf
or
cwtl
leave
pop
movsb
pop
imul
psllq
and
aad
add
mov
mov
fwait
lods
adc
enter
cmpsl
mov
inc
pop
cltd
sarb
lahf
scas
mov
aam
cmp
xorl
and
ret
push
xchg
rclb
inc
jmp
jp
fsubrs
lcall
xor
fistpll
pop
inc
test
movsb
jmp
imul
sbb
rcrb
dec
pop
and
dec
mov
lods
movd
test
pop
push
leave
or
cmc
cmpsl
out
or
push
lcall
jge
fs
leave
xchg
pop
aad
mov
pop
movl
pop
dec
mov
out
mov
call
insb
pop
mov
scas
das
jmp
imul
out
subl
jns
pop
sbb
dec
adc
les
clc
pop
jbe,pt
popa
xor
negb
gs
cmpsb
call
movsl
pop
pop
ljmp
inc
not
xor
addr16
aaa
dec
popf
pop
test
imul
loop
mov
sarb
and
cmp
xchg
fistpl
push
pop
jne
lock
add
outsl
in
lret
mov
fimuls
lds
xchg
aaa
pop
cmpsl
sar
aad
pop
jnp
dec
inc
add
popf
jg
pop
mov
js
sahf
fcomps
je
movb
pop
shll
dec
mov
jecxz
enter
dec
mov
push
adc
jmp
and
dec
scas
and
lods
push
push
jmp
cwtl
lahf
push
xchg
adc
inc
js
test
es
cmp
add
fwait
sub
aaa
cmpsb
cmpsb
inc
repz
int3
cmp
mov
mov
xor
mov
idivb
scas
in
dec
mov
pop
xchg
jae
add
add
enter
push
mov
sbb
dec
dec
clc
jns
call
pop
jno
fldt
divl
ret
dec
inc
mov
inc
xor
daa
pop
mov
fcoml
xlat
mov
add
push
xlat
mov
test
xchg
pop
call
mov
test
and
scas
jmp
sahf
pop
pop
into
mov
ret
mov
adc
insl
mov
jmp
xchg
popa
jo
mov
push
push
pop
or
cmp
and
loopne
aam
cld
test
push
das
jle
xor
pop
ss
pop
jmp
sysret
lahf
in
push
mov
add
and
hlt
push
mov
in
xchg
or
mov
mov
mov
sbb
mov
ss
cmp
clc
inc
sar
sbb
xchg
cmp
pop
add
or
pop
mov
loop
sbb
mov
es
test
pop
or
in
cmp
pop
dec
cwtl
pop
lret
pop
faddl
mov
fistpll
xor
mov
leave
and
push
lahf
lea
fs
imul
cmp
pop
cmp
dec
cmp
fadd
sub
stos
ja
xor
or
fidivl
inc
outsb
out
push
xchg
inc
fwait
cmp
addr16
aaa
sub
xchg
push
cmp
aas
mov
xor
pop
mov
mov
mov
jae
filds
xchg
adc
or
into
jecxz
sub
mov
mov
pop
xor
jmp
in
inc
daa
sub
and
and
inc
mov
sbb
pop
lods
call
call
mov
xor
clc
test
pop
dec
sahf
xchg
fisttpl
fsts
jl
inc
adc
out
out
sbb
stc
dec
push
dec
push
mov
mov
cmc
popf
into
push
xchg
gs
testb
push
fildl
das
xorl
jns
adc
pop
aam
and
out
lcall
xchg
aad
sub
mov
jo
pushf
lret
aam
fisubl
lahf
jnp
cmp
inc
imul
jmp
xchg
imul
mov
bound
push
xor
mov
cwtl
push
xchg
xchg
cmp
xor
aaa
test
ds
loopne
cld
jecxz
xchg
fs
or
outsl
jb
hlt
push
mov
sti
adc
stos
mov
jmp
fcoms
mov
inc
pop
lods
aam
or
dec
pop
int
mov
sub
loop
and
cmp
pop
mov
inc
scas
movsl
pop
sub
push
push
cmp
sti
std
push
lds
into
divl
jne
movsl
adc
mov
or
sub
xchg
leave
cwtl
lcall
scas
aaa
sub
jl
hlt
xchg
enter
pop
lods
loopne
inc
adc
fisttps
dec
test
fcomp
mov
xchg
aam
mov
jne
test
push
pop
cmp
sbb
into
xchg
mov
inc
cltd
test
sahf
mov
fidivrs
cs
aad
xor
or
sub
mov
cmp
mov
jne
scas
lea
jne
mov
push
inc
test
aam
data16
mov
stos
or
hlt
sbb
add
arpl
jo
sbb
dec
jle
lds
bnd
in
ja
xchg
bound
mov
arpl
push
stos
clc
or
int3
add
lahf
outsb
sarl
xchg
lret
mov
mov
mov
imul
dec
sbb
shrl
ret
xchg
cmp
insb
adc
xor
or
xor
mov
pop
outsl
push
lea
hlt
movl
es
push
push
adc
inc
jns,pt
lret
stc
cmpsb
fnstenv
cld
mov
hlt
imul
imul
dec
xchg
loope
inc
inc
test
xchg
cmpsl
pop
les
push
cli
mov
mov
aas
xor
outsl
fisubrs
mulb
in
cli
adc
adc
jg
mov
stc
push
inc
dec
xor
lods
mov
xlat
pushf
sub
push
sbbl
icebp
lods
lock
enter
fistl
and
aas
ret
lret
pop
push
cmp
mov
test
inc
aad
or
mull
sub
or
or
int3
notl
ds
in
rorl
add
imul
ret
xchg
mov
stos
dec
mov
nopl
pop
movsl
pop
pop
jbe
lea
outsl
shr
xchg
push
cmp
addb
mov
cwtl
subb
mov
out
cmp
mov
sti
or
cld
andb
test
or
sub
jecxz
cmp
push
cwtl
fcmovnbe
rdmsr
mov
subl
xchg
or
mov
out
jne
inc
or
jo
std
add
dec
add
cmpsl
aas
xor
subl
rorl
dec
arpl
rclb
inc
and
mov
adc
lret
ds
adc
jne
lds
movsb
jmp
dec
inc
sub
clc
cs
jp
cli
popf
xor
shr
loope
out
mov
lods
ljmp
scas
insb
fldt
aaa
sbb
iret
inc
push
xchg
or
rcrl
imul
test
pop
cmpsb
xchg
push
xor
add
xchg
add
iret
stos
loope
push
or
mov
adc
mov
loopne
aaa
scas
xchg
sub
pop
mov
add
adc
pop
js
gs
xchg
inc
faddl
cmp
sub
inc
clc
das
addr16
sbb
sbb
push
lods
xchg
add
imulb
mov
mov
fimuls
mov
and
mov
test
sbb
or
dec
outsl
cmp
movsl
pop
data16
xchg
int
mov
xchg
or
gs
cltd
fs
lcall
jmp
add
mov
push
arpl
test
mov
nop
imul
gs
icebp
push
orl
mov
mov
iret
xchg
inc
push
cmp
div
lret
inc
push
mov
gs
aaa
test
and
mov
xlat
pushf
xor
inc
lods
bound
inc
dec
and
mov
inc
stc
push
jb
and
or
rcrl
leave
cltd
xor
mov
adc
push
mulb
sub
add
mov
rorl
out
out
jno
pop
fcoms
jecxz
xor
push
ja
sub
cmp
adc
xor
or
xchg
aas
cmp
mov
rolb
mov
push
imul
xchg
pop
sbb
cmc
sub
xchg
inc
repz
out
mov
leave
jmp
sbb
push
ja
mov
mov
mov
aas
mov
jl
adc
lret
test
inc
fmuls
xor
dec
int3
add
and
lcall
lea
arpl
mov
les
and
popf
and
push
push
mov
sbb
repz
leave
int
xchg
push
or
inc
dec
xchg
ds
or
int
ss
jno
sub
leave
mov
sub
xchg
popf
mov
ja
lret
test
cmp
ljmp
jecxz
mov
lods
sub
xor
out
sbb
mov
cmp
jbe
sahf
in
icebp
or
int
mov
hlt
scas
mov
insb
jp
mov
es
sub
or
stos
or
push
imul
call
add
xor
cmp
mov
jge
or
repnz
xlat
mov
lret
mov
inc
fistpl
or
test
push
xor
push
jbe
push
stos
jg
pop
dec
cmp
mov
fldt
andb
loopne
cmp
mov
sub
jo
lcall
arpl
push
test
mov
pusha
stos
xchg
push
jae
fadd
das
and
out
xchg
je
cmpsb
add
sub
mov
adc
cmp
cmp
pushf
inc
mov
sahf
or
out
stos
pushf
subl
jmp
adc
xchg
fbstp
pop
insl
mov
loope
xchg
cwtl
outsb
jne
orb
loopne
mov
cs
mov
dec
add
adc
or
pop
add
mov
imul
and
xlat
jb
cmp
mov
outsl
adc
loopne
ja
fdivrl
add
mov
jle
fbstp
fdivs
test
into
xchg
jno
lret
ret
add
sub
push
cmp
lahf
xchg
jo
adc
emms
push
push
or
sbb
out
jg
pop
fistl
call
cltd
repz
cmp
push
mov
out
mov
mov
sbb
mov
mov
dec
aas
mov
lock
and
out
or
jg
xchg
cld
pusha
xchg
scas
imul
test
out
mov
xchg
ljmp
rcll
pop
or
cld
popa
sub
cmc
add
add
into
test
cld
repnz
push
fdivs
jb
or
dec
jnp
iret
mov
popa
jns
insl
dec
or
sti
xor
jmp
and
stos
inc
icebp
add
mov
sbb
ds
add
fsubrl
ret
fdiv
mov
pushf
mov
stos
push
out
test
jbe
inc
dec
add
and
mov
testb
jecxz
mov
dec
fnsave
test
sbb
ret
jne
ds
in
inc
aaa
repz
int
inc
fucom
jbe
pop
push
push
js
sti
aas
mov
sbb
sbbb
xchg
lds
rorb
sub
cli
push
dec
daa
or
in
cmp
sbb
cli
cmpsl
repnz
in
sub
out
cmp
in
orl
popa
jno
jo
stos
bound
push
dec
shlb
in
test
pop
aam
push
jno
adc
push
cmp
mov
and
jne
mov
pushf
aaa
je
pop
in
push
pop
jg
push
jge
loope
cmc
adc
sahf
wrmsr
rolb
je
setnp
pop
shrb
in
lret
sub
add
xor
popa
push
scas
daa
fs
or
adc
mov
jns
jnp
inc
cmp
xor
inc
push
xchg
push
into
ret
mov
lods
sbb
cmp
adc
repnz
data16
push
mov
das
fs
mov
inc
lret
mov
popf
insb
or
pop
add
mov
sub
lods
fistpll
mov
xor
lret
fwait
das
xchg
pop
cmp
das
into
pop
pushf
lahf
cli
pop
push
test
xor
jecxz
adc
fisubrl
dec
push
inc
push
inc
das
std
arpl
aam
mov
icebp
dec
or
pop
aam
or
push
fcmovnb
cmp
inc
add
dec
and
aaa
sub
loopne
push
push
mov
sbb
lods
mov
jle
sub
sti
pop
inc
ds
add
mov
nop
and
push
xchg
xchg
lock
cmp
cli
das
mov
rcl
add
call
imull
or
mov
int3
sub
fnsave
aas
scas
in
data16
sbb
push
push
ror
adc
into
push
bound
fldl
adc
fnstcw
adc
mov
leave
pop
pmuludq
loop
sbb
jecxz
test
jmp
in
sub
xchg
test
and
lcall
mov
notl
flds
jmp
cmpb
insl
cmp
xchg
xor
inc
fisubrs
in
shll
test
add
inc
sbb
mov
inc
outsb
push
pop
xor
pop
roll
sahf
in
cmp
or
repnz
aas
test
iret
sub
jp
repz
int3
stc
push
imul
push
fistl
out
icebp
out
push
fcomps
jmp
xchg
cwtl
pusha
add
or
bound
fwait
push
sub
mov
dec
mov
push
or
xchg
sub
and
aad
inc
push
pop
into
or
std
dec
or
insb
xlat
push
sets
inc
in
outsb
js
cmp
mov
adc
ja
push
sbb
inc
je
dec
add
outsl
ljmp
cmpsl
inc
jge
add
arpl
xor
or
rol
add
std
sahf
xchg
out
lcall
push
scas
pop
jnp
xchg
mov
out
push
fistl
loop
mov
repnz
or
and
aas
dec
stc
ds
pop
and
adc
mov
mov
jg
pusha
pop
jle
and
or
cmp
daa
nop
gs
cmpsb
cld
adc
jge
aaa
mov
scas
lcall
nop
lock
leave
shrb
pop
sbb
and
stos
test
cmp
jmp
jb
cli
ds
rcrl
mov
pusha
add
mov
int3
repz
pop
popl
ficoms
xchg
jg
fwait
pusha
rcrb
sbb
xchg
cmpsl
mov
mov
pop
ss
push
daa
mov
lods
dec
mov
in
adc
xchg
insl
lods
cmp
add
fmuls
or
jno
and
add
adc
cwtl
dec
mov
or
xchg
es
or
in
leave
pop
mov
cli
sahf
jle
mov
pop
cmp
fcomi
lock
cwtl
sub
jecxz
loopne
sarl
lods
inc
daa
or
adc
andl
jnp
add
mov
push
dec
lahf
enter
push
pop
sub
mov
xlat
sarb
imul
mov
jne
or
hlt
cmc
andb
jbe
dec
in
pop
mov
and
xor
outsb
nop
add
jle
pushf
int3
popa
adc
ss
ds
out
ret
dec
lods
sti
xlat
sahf
push
adc
pop
xchg
add
push
ss
mov
mov
sti
sbb
or
xchg
push
rorb
sbb
pop
xor
mov
sub
inc
dec
mov
in
imul
cmp
addl
cmpsb
outsb
add
stos
sub
push
in
push
popf
les
jp
jmp
out
push
sahf
pop
mov
mov
jg
inc
cmp
add
xor
fs
mov
sub
jae
ret
cmc
loopne
je
pop
lret
mov
xchg
adc
fcmove
sbb
cltd
filds
sti
jmp
jb
in
js
pop
cmp
shll
push
push
bound
call
hlt
and
pop
mov
xchg
add
les
inc
stc
fisubrs
adc
into
ja
lahf
inc
bound
cli
outsb
scas
pop
sub
aas
push
in
rcl
lods
mov
in
adc
aaa
cli
sahf
scas
movsl
into
xor
scas
mov
test
xor
movsb
enter
mov
dec
xor
dec
cmp
jg
dec
out
push
stos
gs
jg
and
jbe
inc
insb
sub
sbb
dec
jg
pop
add
mov
es
roll
sbb
push
ss
ss
sub
dec
inc
sti
repnz
cmpsl
inc
mov
popf
adc
rcrl
inc
int
jp
push
fwait
pop
jge
shll
mov
stos
mov
nop
mov
fs
mov
inc
mov
test
out
inc
pop
iret
fstpl
fnstcw
jg
jecxz
lcall
dec
ja
ret
xor
in
rclb
and
mov
mov
mov
fs
aaa
lods
fidivrs
scas
jmp
sbb
sbb
sbb
inc
imul
jge
movsb
pop
mov
inc
add
and
mov
and
inc
aas
lret
lods
mov
dec
dec
out
xchg
pop
hlt
jne
imul
insb
adc
js
in
mov
dec
cmpsb
daa
pop
arpl
outsl
cmp
mull
das
nop
mov
xchg
lret
inc
je
frstor
and
aam
pusha
adc
leave
test
lahf
sti
xchg
dec
pop
pop
mov
jmp
lods
jmp
and
imulb
stos
sub
jo
adc
outsb
pop
fsts
fcmovbe
jbe
mov
cmpsl
jmp
ret
stos
push
sarl
jle
inc
add
push
sbb
ret
or
jns
shlb
jo
jp
rcll
dec
jg
dec
adc
iret
jnp
mov
leave
in
mov
push
shlb
mov
dec
lea
je
ds
iret
mov
pushf
cmpb
movsl
jecxz
xchg
xor
int
cld
pop
insl
sbb
or
aad
movsl
push
popa
and
pop
inc
inc
fstpl
fbstp
mov
imul
lcall
int3
add
daa
movsb
xlat
gs
add
mov
xchg
loope
and
sub
sub
dec
dec
pop
and
sbb
cvtdq2ps
std
or
mov
xchg
mov
adc
pop
xchg
and
mov
lret
ljmp
mov
mov
jmp
in
fs
adc
cltd
imul
or
xor
std
jnp
dec
cmp
adc
jno
fucomp
lahf
aas
sahf
enter
mov
push
sub
rol
push
das
dec
mov
cltd
jmp
scas
js
push
rcrl
in
pushf
lock
lods
adc
insl
mov
sbb
cmpsb
lret
pop
mov
mov
notb
mov
cwtl
pushl
out
push
sbb
lahf
cmc
fwait
inc
cwtl
fisubrs
mov
hlt
and
or
dec
pop
cltd
addr16
bound
jmp
cli
push
adc
dec
add
cmpsb
jnp
and
test
fwait
xchg
rorl
pushf
pusha
arpl
fsubp
outsl
cmp
loope
cmp
push
sub
movsb
das
addr16
jne
pop
pop
sub
and
stc
testl
in
inc
in
fcmovnu
and
jge
jle
mov
cmp
stos
mov
xor
mov
inc
mov
push
push
test
add
cmc
mov
xchg
in
xchg
jo
scas
xchg
pop
lcall
je
hlt
inc
sub
adc
shll
adc
mov
ficoms
aas
adc
gs
adc
push
rcll
dec
pop
rol
push
rolb
pop
or
std
pusha
movsb
lea
cld
lret
fdivs
pop
outsl
imul
scas
push
lock
mov
jmp
in
push
mov
or
dec
add
scas
mov
call
gs
call
test
push
inc
jne
push
outsb
add
cltd
or
int3
fldt
pop
loope
or
popf
loopne
sbb
rep
stc
push
testl
enter
rorb
shl
gs
pop
imul
mov
in
xchg
adc
ljmp
or
out
push
push
dec
in
or
sub
aam
lods
test
clc
loopne
inc
int
jnp
xchg
sub
xor
pop
in
shr
pop
icebp
inc
inc
or
pop
lea
push
sbb
and
in
mov
pop
fistpl
xchg
mov
sarl
fiadds
push
sub
and
and
aam
mov
fs
movsl
cmpsl
mulb
loop
and
fists
cmp
mov
fmulp
add
fistl
jl
or
pop
jmp
fsubl
enter
shlb
aam
andps
push
fsubl
popa
or
rcrb
add
adc
xchg
out
data16
sub
test
popa
jmp
and
and
data16
push
or
mov
mov
aaa
and
mov
int
xor
lods
xchg
movsl
jnp
xchg
pushf
test
mov
xchg
lret
push
loope
test
xchg
add
xchg
fwait
xor
enter
jno
stc
mov
dec
arpl
mov
push
mov
cmp
sub
push
inc
or
rolb
push
and
jns
jp
dec
vhsubps
roll
neg
addl
popf
imul
shrl
dec
pop
js
fbld
enter
popa
xor
pop
ja
pop
sbb
or
jo
jl
fidivs
jg
dec
sbb
cltd
aam
sbb
push
add
mov
inc
cmp
insl
inc
jmp
pop
mov
mov
jno
cmp
lock
mov
mov
hlt
jle
xor
lahf
in
cmp
cmp
adc
stos
push
xchg
dec
mov
lds
mov
clc
repnz
adc
cmp
sub
lods
insl
adc
daa
cltd
xor
sub
shrl
jae
aam
hlt
sahf
dec
mov
out
xor
jne
lret
add
shl
ljmp
repz
int
xlat
lret
in
pop
std
std
int
push
cltd
adc
or
jp
push
into
push
sub
dec
jge
mov
mov
test
gs
movsb
sub
jl
mov
stc
jns
lea
das
fnstsw
lret
ror
mov
out
and
xchg
jb
mov
fprem1
or
add
cmpsl
xor
imul
addb
add
jno
dec
mov
std
push
dec
out
pushf
xor
jbe
inc
jg
add
dec
je
and
add
inc
or
iret
movsl
add
addb
rcrl
and
mov
and
pusha
push
test
out
mov
mov
repz
cli
xchg
ja
xchg
insb
fcomps
lcall
mov
lods
push
ja
cltd
inc
add
bound
push
inc
sub
aaa
es
shlb
out
jmp
pusha
jnp
sub
sub
pop
lods
insl
loope
mov
add
sbb
dec
outsb
mov
ret
jl
subl
aaa
add
mov
test
and
insb
inc
es
pushf
in
js
arpl
vfnmsub132ps
es
push
divl
add
jp
int3
sub
fsubr
dec
dec
fsub
ljmp
dec
movsb
pop
add
movsl
cmp
lahf
and
dec
cmp
jg
in
daa
jns
push
or
push
out
mov
push
in
paddb
push
fwait
mov
in
sbbb
pop
test
cmp
andl
add
lods
mov
adc
das
mov
dec
sbb
fdivrp
mov
pop
sbb
ja
mov
pushf
outsb
shrb
jge
scas
mov
and
sub
rclb
mov
cmp
push
jbe
leave
push
add
pop
cs
test
pop
mov
icebp
jp
daa
clc
ljmp
add
dec
xchg
mov
fcompl
pop
lcall
aad
loope
cmp
push
sbb
fwait
test
movntq
sbb
test
imul
test
aad
xor
pop
jbe
mov
sbb
lcall
les
pop
pminub
jbe
jp
dec
pusha
repnz
sub
jae
mov
inc
ror
jnp
lahf
shrl
push
adc
jne
mov
hlt
xor
popa
mov
sub
popf
mov
add
mov
cmp
pop
jb
out
aad
add
sbb
add
add
imul
jl
xchg
sub
adc
test
repz
jb
addb
and
xlat
push
sbb
pop
inc
mov
or
adcb
syscall
sub
xchg
stos
lock
push
jne
hlt
push
cmp
cwtl
and
sbb
test
dec
sub
adc
rorb
mov
icebp
mov
mov
aaa
in
lods
int
push
dec
into
adc
inc
shr
jle
outsl
adc
adc
lods
pop
lahf
mov
rorb
xor
out
cmp
sub
xchg
jb
scas
xchg
mov
jg
add
mov
imull
inc
lods
in
jnp
icebp
sbb
daa
fs
xchg
xchg
push
fs
mov
xchg
pop
push
inc
shrl
dec
adc
test
sahf
fs
popa
fistps
xchg
leave
loope
es
jl
je
xlat
dec
jle
sbb
push
xchg
cwtl
inc
lods
add
jl
fwait
imul
stc
mov
popa
jl
mov
xlat
jp
push
call
fs
jb
sub
mov
push
push
jle
mov
push
mov
sbb
out
outsl
repnz
cmpsl
stos
int
mov
fdivrs
xor
dec
out
inc
shl
fcoml
mov
int
pop
dec
sub
and
inc
push
movsb
or
push
sub
addr16
add
dec
push
ja
pop
into
fldl
faddp
out
mov
xchg
fs
popf
aam
fsts
lea
push
jne
push
mov
mov
and
enter
mov
leave
sarl
pop
adc
cli
test
gs
mov
rcl
out
jne
jle
jb
lcall
nop
pop
lods
xchg
andb
mov
cmp
pushf
leave
stos
mov
cwtl
adc
adc
aam
inc
pop
mov
movsl
push
cmpsl
mov
push
adc
leave
lock
xchg
pop
xorl
cs
adc
cltd
sbb
repz
pop
or
flds
dec
clc
outsl
sti
ret
repz
jnp
pop
out
rcl
aaa
pop
dec
scas
mov
mov
ficompl
and
push
icebp
sti
adc
mov
xchg
sbb
push
cmp
cwtl
cmp
cmc
out
or
jmp
push
pop
rol
mov
repz
jg
cmp
js
bnd
aaa
loopne
xlat
mov
pop
movb
adc
test
test
imul
fs
jb
push
fs
xor
cmp
popa
mov
inc
jnp
push
loop
iret
push
add
cmp
test
cmpsl
cs
dec
mov
sbb
xor
test
das
aam
stos
iret
bound
mov
xor
in
pop
out
push
dec
pop
ret
cmp
jle
aam
jnp
insl
add
adc
movb
outsb
mov
into
dec
fsubp
mov
inc
sbb
xor
in
pop
cmpsl
push
insl
jp
enter
mov
cwtl
mov
adc
jp
pop
mov
mov
mov
fsubl
push
cmp
or
adc
xchg
sub
adc
pop
stc
stc
cltd
jp
outsb
mov
xchg
sahf
js
push
aas
mov
aam
jmp
pop
adc
lods
gs
test
lcall
mov
data16
cltd
fidivl
jo
mov
mov
mov
push
cmp
shll
sbb
jns
xchg
sbb
sub
out
and
sub
mov
das
pop
mov
hlt
stc
lea
pcmpeqb
jle
fisubrl
leave
inc
xchg
jns
push
push
sub
call
bound
push
xor
insb
sub
and
dec
test
jg
stc
gs
xlat
push
sbb
dec
imul
pop
dec
cld
and
mov
aam
fsubrl
mov
fst
add
clc
leave
dec
in
dec
scas
cs
neg
repz
adc
aam
push
sti
jmp
fidivrl
clc
dec
mov
mov
sub
imull
mov
xchg
repz
inc
mov
in
mov
sbb
cltd
jne
ja
dec
cmp
in
xchg
inc
lahf
rcl
aad
sbb
and
sbb
push
cmp
mov
dec
jo
outsb
xlat
ret
mov
je
pop
jle
mov
mov
and
aaa
and
dec
cmp
ret
cli
addr16
pop
cs
or
mov
inc
subb
inc
into
fwait
pop
mov
inc
aam
mov
aaa
das
int3
jo
dec
aad
mov
in
jl
dec
and
inc
hlt
fcmovnb
shll
fs
mov
in
mov
clc
fidivl
jo
sub
bnd
pop
clc
inc
int
les
add
rcrl
dec
fidivl
dec
outsl
mov
mov
sub
jnp
xor
xor
inc
sarl
jle
adc
loopne
mov
in
inc
cli
jmp
sbb
addr16
stc
xchg
hlt
and
push
push
jno
fsubs
imul
int3
loopne
in
movsl
notl
xor
lret
jno
pop
in
mov
lret
inc
pop
push
pop
jne
jge
xchg
sbb
inc
inc
rclb
jns
lods
xchg
sbb
pop
mov
sbb
mov
jo
ljmp
push
lods
dec
jp
imul
ja
mov
aam
mov
in
sahf
test
or
cmp
pop
int3
inc
push
jmp
jnp
scas
into
cwtl
movsb
cwtl
xchg
add
and
or
outsl
xchg
in
adc
jo
mov
inc
and
dec
mov
mov
push
out
sub
ja
fnstcw
and
xchg
cmc
dec
jecxz
lods
aad
adc
mov
adc
gs
dec
add
fwait
sbb
insl
push
or
cmp
adc
lods
outsl
jbe
xor
sbb
dec
mov
int3
addr16
push
mov
xchg
xor
cli
add
cmc
repnz
fisttps
and
lahf
rcll
imul
andb
dec
divb
shl
add
inc
outsb
jns
xor
dec
inc
loopne
xchg
loop
adc
mov
mov
xor
inc
add
mov
fadd
stos
dec
xchg
push
inc
jo
inc
enter
cmp
stos
pop
inc
push
data16
push
loop
lret
pop
push
mov
dec
or
xor
inc
pop
call
push
xor
mov
andl
stos
xor
or
test
sub
xor
and
dec
stos
jmp
orps
fcmovnu
xchg
ror
out
jo
cmp
adc
jno
xchg
lea
inc
arpl
and
test
dec
mov
sti
outsl
test
push
imul
sub
jg
insb
dec
sub
daa
cmp
fcompl
pop
inc
mov
dec
gs
sahf
stos
rolb
outsl
adc
lock
adc
jp
jne
inc
scas
inc
inc
aam
test
jl
xchg
fildl
pop
ds
add
cmc
loop
mov
stc
add
or
mov
xor
out
negl
test
test
insl
dec
sbb
fbld
mov
inc
rcl
jl
xor
pop
push
inc
push
cmpl
ffree
mov
out
cmp
pop
imul
iret
fwait
ret
adc
sbb
and
dec
test
add
mov
mov
push
adc
insb
mov
fsubp
cmpsb
fdivrs
js
jns
ret
mov
fcomip
cmpsb
frstor
inc
xchg
adc
mov
sbb
jp
aad
fisubl
insl
fidivs
cli
or
sbb
fisubl
push
daa
push
cld
sbb
rcll
outsb
xchg
cs
cmp
pop
mov
movsb
mov
dec
les
jns
jmp
in
cmp
adc
aas
jbe
sbb
jne
test
xorb
jg
or
fwait
mov
adc
mov
scas
dec
dec
mov
sbb
cltd
and
cmp
inc
push
dec
lods
or
imul
or
xor
jae
in
lods
xchg
mov
xor
icebp
rorb
sub
mov
lods
mov
push
imul
fcoml
das
xchg
cltd
call
xor
mov
and
out
mov
inc
inc
lahf
push
dec
dec
pusha
mov
mov
push
sti
out
addr16
mov
cmc
jl
imul
lcall
and
xchg
mov
outsl
scas
mov
pop
adc
fadd
adc
outsl
in
enter
testl
or
push
mov
mov
mov
sub
mov
aam
push
inc
sub
mov
xchg
and
adc
aad
or
jmp
adc
jno
aam
jno
enter
cs
in
mov
lods
pop
pop
ss
jb
mov
jne
popf
aad
or
mov
shll
mov
gs
mov
jo
dec
mov
fwait
lcall
sahf
dec
repz
mov
jmp
cld
xor
jae
pop
push
and
mov
add
scas
dec
into
rcrl
test
mov
mov
clc
das
pop
cmp
jmp
inc
add
fs
add
filds
sub
clc
mov
adc
jecxz
fstl
mov
aas
aam
rcl
xchg
xor
jmp
repz
lds
test
ret
insb
out
pop
out
pop
jmp
xchg
cmp
add
repz
enter
sub
xor
icebp
mov
std
es
adc
cmpb
dec
roll
mov
addr16
pop
xor
popa
jno
mov
outsl
fdivl
xor
stos
push
lahf
jb
stos
outsl
int
cli
push
adc
ror
cltd
popl
xchg
icebp
rclb
cmp
sti
mov
inc
dec
sbbb
fs
mov
lahf
mov
call
adc
testl
adc
or
es
int3
and
pop
es
push
push
fsubrs
cld
cmp
ficoml
mov
movl
adc
mov
daa
push
pop
xor
nop
inc
roll
in
mov
xchg
stos
int
and
cmc
imul
mov
and
xor
and
push
and
jecxz
ss
xorl
negb
lds
leave
jns
fsubl
sahf
push
push
repz
or
pop
test
and
sbb
test
ret
ds
mov
jnp
mov
test
xor
aaa
gs
inc
pop
fisubrl
push
stos
sbb
mov
mov
dec
mov
mov
sub
cmp
xor
ljmp
push
inc
lahf
shll
inc
xor
arpl
push
and
loop
sahf
mov
jbe
mov
sub
mov
adc
out
sahf
push
add
mov
sub
call
cli
lahf
leave
bound
jns
divb
cld
lahf
jg
repnz
ljmp
in
and
inc
dec
jecxz
cmp
pop
push
and
cltd
mov
push
lock
leave
lcall
lahf
stos
sti
add
mov
jecxz
test
dec
push
ss
mov
jmp
pop
xor
inc
sbb
leave
into
mov
push
mov
jns
lret
push
loop
pushf
mov
mov
inc
jge
mov
inc
aam
mov
lret
jne
dec
xchg
cmp
loop
arpl
sub
or
lcall
lock
dec
lods
insl
add
xchg
movsb
sbb
xchg
cld
xchg
sub
imul
or
and
mov
aam
dec
lcall
pop
dec
test
mov
ss
mov
push
repz
daa
lock
xlat
popf
dec
xchg
lahf
inc
test
jmp
xchg
pop
adc
in
fwait
out
ret
je
in
or
inc
inc
sarl
pop
out
mov
mov
fidivrl
gs
dec
xchg
sub
stc
fs
and
and
lcall
push
inc
imul
push
push
pop
mov
cmp
test
push
scas
add
test
mov
jbe
les
addb
es
sub
sahf
clc
cld
outsl
dec
push
lret
pop
dec
jp
divb
int
arpl
jne
xlat
sub
clc
rcrl
mov
add
leave
mov
les
pushf
jmp
or
sub
jl
cs
sahf
xchg
ss
xor
pop
mov
outsb
cmp
xor
mov
mov
insl
add
jno
out
sub
in
mov
ret
aas
cmpsl
or
hlt
mul
in
ds
mov
pop
ret
xor
hlt
popa
pushf
inc
pop
and
ja
push
sbb
cltd
bound
loope
inc
fcmovu
add
pop
fsubrl
jnp
sbb
pop
and
in
xchg
xor
negb
lds
or
les
lods
xor
xchg
dec
xor
cmp
xchg
stos
mov
mov
out
mov
cbtw
fcomps
sbb
dec
inc
ss
add
aas
push
adc
bound
lahf
adc
mov
add
inc
cmp
mov
cs
xchg
pop
cld
mov
xchg
int
pop
pop
and
pop
push
adc
mov
xchg
lods
out
adc
jne
sbb
scas
dec
es
and
push
push
inc
fstpl
insl
mov
jge
mov
sub
aas
shl
jmp
pop
dec
xor
dec
int
inc
in
mov
sarl
pop
inc
xchg
cmpsl
fiaddl
arpl
add
and
sahf
arpl
lret
out
cwtl
std
outsb
inc
ss
mov
sarb
mov
sarl
in
lcall
addr16
outsl
andl
mov
cld
insl
xchg
cs
jb
mov
cmp
mov
dec
push
testl
add
mov
pop
daa
pusha
xlat
fcoml
or
pushf
mov
sti
mov
pop
mov
push
pushf
popa
repz
out
mov
lods
mov
out
loopne
dec
add
inc
insb
lahf
rcrb
sti
xchg
mov
sub
int3
mov
mov
dec
mov
shrb
in
andb
dec
cli
push
dec
aas
mov
dec
fmull
cmp
clc
add
leave
aam
mov
repnz
scas
cmp
and
pop
aam
fsubs
push
xchg
into
fcom
push
popa
ret
jns
das
mov
dec
js
and
lahf
push
mov
std
int
cmpsb
jg
mov
push
iret
loopne
sub
das
jg
loopne
add
dec
jb,pn
cmp
lods
xor
mov
push
xchg
leave
aaa
fimuls
test
es
jne
aam
pop
xchg
in
test
push
js
pop
fidivrl
outsl
pop
fcoms
shlb
jno
add
dec
xchg
fdivl
iret
ja
ds
int
ds
rcrl
imull
call
pop
mov
fmuls
jno
jae
out
fdivl
dec
mov
dec
andl
cld
push
fs
loop
mov
andb
sbb
cmpsb
xchg
andb
sti
mov
mov
mov
mov
xchg
inc
xchg
lock
icebp
rorb
push
scas
sbb
ret
jbe
push
dec
lcall
scas
push
movsl
sbb
dec
and
lea
lods
cs
inc
mov
jmp
out
pusha
add
popl
test
mov
sbb
adc
add
adc
jo
mov
pop
push
xor
xchg
mov
js
bnd
and
sbb
fdivs
shll
inc
cmpsb
push
insb
or
mov
sub
outsl
jb
pop
mov
sub
mov
sti
and
sub
adc
pushf
mov
das
fnstenv
jb
into
repz
mov
ds
fisttps
lret
mov
stos
or
dec
mov
xchg
pop
pop
mov
sti
dec
stos
sbb
mov
jge
movsb
mov
int3
aaa
and
inc
pop
pop
xor
xor
mov
sub
jno
int
adc
stos
sbb
stos
xor
sbb
bnd
mov
add
aas
sbb
ja
pop
mov
cmpsl
pushf
or
inc
icebp
mov
into
shll
outsl
stos
mov
je
mov
loope
or
and
dec
inc
test
lds
push
fmull
call
dec
cmpsl
push
ret
addl
mov
jl
js
lock
pusha
insl
dec
loopne
pop
push
cld
jmp
mov
test
inc
leave
test
fcoml
sbb
sub
sub
test
int
outsb
sbb
bsr
mov
mov
orb
and
stc
test
es
imul
call
or
shl
pop
sbb
ljmp
pusha
push
mov
fistl
mov
jp
dec
inc
nop
mov
daa
inc
mov
mov
mov
in
pushf
mov
mull
push
mov
jno
fnstenv
pop
mov
out
clc
ja
sub
ret
popa
xchg
imul
cld
addr16
add
ret
lcall
xor
sub
fisubrs
mov
adcl
push
and
cmp
jl
enter
jmp
cli
cltd
jecxz
mov
sbb
lods
xchg
pushf
adc
sbbb
test
insb
mov
enter
add
mov
call
repnz
mov
imul
imul
ret
pop
mov
sahf
mov
das
add
sbb
arpl
pop
in
ror
in
mov
mov
cltd
pop
and
lret
mov
or
jo
mov
lahf
mov
xor
nop
das
sbb
mov
out
in
mov
add
gs
xchg
mov
shrl
jno
pusha
stos
push
in
dec
xchg
adcb
pop
daa
jne
fnstsw
loope
ss
int3
mov
sub
mov
imul
outsl
stos
mov
dec
push
mov
mov
loopne
js
std
cmpl
ficoml
rep
mov
movsl
or
dec
imul
sub
lcall
jnp
not
aas
cli
cmp
xchg
jnp
mov
push
adc
inc
ja
int3
add
jp
xor
call
fs
pushf
dec
mov
mov
shlb
dec
pop
xchg
rcr
das
push
aam
cwtl
dec
repz
cli
jno
cld
dec
xchg
es
or
pop
gs
stos
fmull
sub
enter
fnstcw
cltd
popa
xchg
dec
ret
mov
es
jnp
icebp
stos
outsb
pop
scas
jb
cmp
cmc
sub
adc
movsl
adc
push
inc
insl
out
fcomip
lret
testb
loope
mov
pop
adc
fsubp
test
mov
rcrl
mov
outsb
outsl
inc
inc
mov
ficoml
push
cmpsb
loop
pushf
jbe
scas
add
mov
add
ret
jle
popf
push
test
rolb
lret
adc
fdivl
push
mov
fwait
cwtl
int3
mov
mov
push
xchg
push
lret
sbbb
dec
cld
mov
test
jno
dec
push
icebp
cmpsl
jl
pushf
dec
cmp
push
inc
push
je
cmp
xchg
xor
push
pop
out
sub
push
mov
mov
outsb
jne
test
lea
xchg
mov
scas
addl
mov
fisubs
pop
sub
sub
push
imul
mov
cmp
fistl
pop
xor
dec
xor
pop
cmp
jp
addr16
jp
cmp
inc
inc
dec
push
loop
sbb
leave
nop
sbb
js
adc
sbb
push
popf
enter
lock
loopne
and
mov
enter
test
aaa
nop
push
js
and
movsb
lahf
sub
fcoms
orl
fdivl
into
fldt
nop
out
dec
add
xor
mov
inc
fmuls
std
std
movaps
adc
cmp
hlt
lahf
ret
push
lock
stos
movsl
pop
mov
xchg
dec
ret
mov
mov
out
push
adc
mov
sub
push
xchg
sub
xlat
sbb
inc
mov
int
inc
dec
clc
adc
shrl
fst
aad
jne
add
sbb
dec
stos
mov
ret
lcall
notb
mov
pop
das
mov
pop
xor
sub
mov
scas
imul
cmp
ss
lret
sarb
insl
test
pop
repz
ljmp
daa
cli
out
std
dec
out
cmc
push
sbb
lahf
sub
in
adc
aam
iret
out
and
in
test
pop
sti
xor
ss
jmp
sub
loopne
insl
and
xchg
lcall
lods
sub
aaa
dec
bound
or
or
push
or
mov
xchg
xor
mov
push
adcl
or
jb
rclb
movsb
dec
sub
push
and
and
je
add
fcmove
daa
push
jecxz
jl
mov
mov
adc
mov
jmp
lods
pop
adc
lcall
or
add
cltd
mov
out
mov
test
stos
popf
lds
mov
test
dec
xchg
push
xchg
divl
jmp
or
out
sub
inc
jg
les
xor
stos
lret
mov
xchg
ds
and
cltd
and
push
pop
cmpsb
icebp
mov
popf
or
jae
sahf
aaa
and
push
mov
mov
cmp
js
pushf
cmp
int3
adc
pushf
or
test
in
push
push
nop
lahf
and
pop
xor
mov
sub
push
out
push
popf
in
sub
nop
and
and
shlb
enter
pop
inc
daa
ret
ret
loope
mov
aad
xchg
xor
xor
adc
adc
dec
rcrl
test
outsb
movsb
sbb
mov
and
adc
fsubl
lret
xor
jge
out
adc
rcr
push
in
jmp
mov
cwtl
ljmp
aad
jecxz
rcrl
into
xlat
rorl
scas
test
dec
mov
rolb
ljmp
mov
leave
xor
bnd
add
ror
popa
sbb
pop
sub
test
cmp
jae
push
pop
pop
pusha
inc
ss
lret
dec
insb
aaa
inc
lret
pop
out
jns
adc
shlb
cmp
xor
cmp
xchg
pop
jecxz
xor
dec
add
mov
int3
jge
cmpsb
lock
nop
int3
adc
nop
lret
cmp
fstp
les
xchg
sub
jge
fdiv
mov
ret
sub
test
xchg
jp
jne
stos
call
xchg
lahf
pop
fsubrs
mov
testb
pop
mov
adc
sbb
cs
dec
add
and
insl
lock
xor
sbb
mov
ficomps
xor
or
lret
js
add
lahf
lock
xchg
pop
mov
mov
mov
inc
daa
sub
adc
mov
sub
scas
sub
push
sbb
fsts
sbb
adc
mov
bound
add
cmpsl
jmp
enter
sbb
jecxz
out
test
or
leave
adc
or
pusha
stc
sti
ficomps
stos
ret
push
cld
push
or
std
scas
adc
outsb
fisttpll
inc
jb
sub
mov
inc
movsb
sub
mov
and
push
pop
ret
ja
outsl
sub
pop
or
nop
loop
jmp
fwait
in
les
inc
mov
andl
lods
jo
push
mov
xchg
out
push
cmp
jb
aas
inc
lds
aad
ret
inc
loop
inc
jbe
pop
cmp
jbe
insb
fnstcw
push
inc
and
mov
or
ljmp
rcrb
lret
lea
out
jge
fisttpll
or
fwait
mov
add
ljmp
xor
nop
cmp
ljmp
rorl
fwait
inc
jb
shlb
inc
xchg
scas
cmp
push
mov
xor
test
mov
arpl
jo
jge
mov
nop
push
mov
cmp
sub
sbb
fstl
cmp
or
mov
repz
in
or
xchg
clc
mov
lds
xchg
in
out
pop
cli
and
push
pop
pop
cltd
lret
pop
mov
stos
and
shrl
addr16
pop
leave
fdivs
aas
incb
cmp
shl
dec
jns
iret
and
int3
daa
mov
jmp
out
and
call
into
das
mov
adc
add
xor
sahf
insb
insb
pop
mov
cltd
jge
mov
push
mov
push
inc
or
mov
cmc
scas
movb
scas
loop
add
addl
into
ds
sub
lcall
xchg
aam
jae
clc
stos
pop
or
jne
dec
mov
test
cmpsl
fisubrl
ljmp
stos
and
sbb
inc
test
icebp
out
adc
lds
xlat
or
vpcmpgtd
pop
out
rol
scas
sbb
pop
xor
inc
rcrl
push
hlt
push
sbb
data16
fcmovbe
in
fs
push
mov
icebp
xor
jle
lods
add
inc
int3
mov
xlat
imul
lret
repz
pop
sbb
call
dec
xor
inc
pop
cmc
jp
cli
in
push
xor
js
addl
inc
lcall
jb
mov
mov
add
push
clc
test
sbb
cmpsl
stos
loop
jae
out
test
stos
mov
pop
lods
hlt
add
xchg
pop
cmp
out
xchg
inc
sub
jo
shlb
add
sub
jno
pusha
rolb
js
enter
stos
lret
lcall
in
dec
sub
xor
xchg
test
movsl
push
imul
push
mov
pusha
stos
rorl
push
sahf
popa
ret
adc
or
outsb
and
in
inc
imul
in
shlb
pop
add
dec
fwait
push
int3
add
xor
inc
xor
jge
mov
cmpsl
pop
dec
lret
sbb
cmp
mov
add
push
jo
jb
adc
push
mov
jb
cmpsb
mov
xor
les
mov
add
mov
lahf
rorl
test
idivb
pop
xor
fs
js
adc
cmpsb
mov
push
iret
les
mov
ds
fstpt
xchg
insb
pusha
insl
xchg
cmp
arpl
inc
into
jge
mov
divb
nop
sbb
loopne
stos
std
sub
loop
mov
adc
sahf
lock
mov
or
ficoms
popa
mov
stos
sahf
mov
scas
out
fdivrl
xchg
testb
in
cmpsl
push
fldt
dec
imul
mov
out
adc
jl
cmpsl
int
xor
sahf
fsubrs
enter
lods
daa
aad
mov
int
jmp
cmc
std
xchg
loop
mov
add
pop
aad
fbstp
mov
push
lret
addps
ja
stos
jae
and
in
gs
das
rcrb
dec
int3
pop
into
push
jmp
add
xorl
out
sarb
sbb
mov
inc
daa
rcrb
sub
pop
aam
das
jns
or
inc
mov
mov
outsl
adc
push
xchg
or
jo
push
je
test
repz
lret
jbe
dec
jmp
and
adc
hlt
stos
add
cmc
xor
test
leave
mov
add
inc
jge
xor
push
sub
aad
ja
cmc
dec
xor
push
push
imul
iret
fxch
popf
inc
push
ljmp
xchg
mov
std
push
cmc
lods
sarb
hlt
dec
jecxz
xor
and
or
jnp
or
cmpsb
scas
adc
xchg
out
sub
dec
sbb
adc
mov
cld
push
cmp
xor
pop
aas
add
sub
mov
repnz
das
pop
sbb
push
xlat
clc
pushf
cltd
rolb
jecxz
mov
bound
lcall
and
xchg
jmp
inc
iret
mov
sbbb
jns
and
inc
dec
mov
mov
mov
jl
xchg
es
jge
pop
xor
adc
xor
repnz
dec
inc
push
stos
xchg
dec
fnstsw
dec
dec
mov
push
inc
loop
xor
femms
pop
mov
xlat
imul
ds
add
or
ljmp
add
inc
mov
mov
movsb
jge
out
mov
icebp
cld
and
xchg
dec
scas
dec
arpl
out
sub
leave
add
mov
add
lock
push
in
pop
icebp
mov
jge
push
sbb
divb
fwait
outsl
shl
mov
imul
cmp
stc
shrb
ds
inc
jbe
xor
in
add
rsm
push
xor
out
out
fidivl
add
aad
fwait
push
xchg
ret
add
divl
dec
stc
mov
and
push
arpl
pop
js
mov
lods
ja
and
adc
mov
movsb
adc
add
xchg
clc
sbb
push
test
inc
test
fadds
dec
pop
mov
inc
mov
xchg
mov
mov
cld
clc
sub
sbb
mov
or
lock
incb
add
insb
pop
iret
cmp
xor
lret
in
scas
in
and
shrb
in
lret
dec
xchg
out
lods
rcl
xchg
sbb
push
inc
loope
out
scas
jge
push
lods
out
sub
or
bound
in
sbb
push
sti
lds
adc
pop
pop
push
outsb
jecxz
inc
leave
cmpsl
hlt
jns
out
pusha
outsl
xchg
iret
mov
shll
pop
sub
icebp
mov
jp
cmpsl
arpl
neg
inc
shll
test
xchg
adc
add
pop
add
xor
pusha
dec
xor
ja
icebp
loopne
into
sub
out
sbb
mov
stos
jnp
jl
dec
loop
jmp
push
jmp
push
jmp
jecxz
or
mov
and
mov
cmp
popw
es
bound
jbe
mov
and
xchg
out
cmp
fs
pop
mov
into
sahf
push
clc
int3
jne
or
pop
imul
jne
add
jl
jns
and
and
dec
xor
mov
cmp
pushf
lods
xchg
dec
jle
scas
les
mulb
insl
cmp
mov
mov
roll
inc
mov
fisttpll
mov
dec
dec
inc
cld
xchg
inc
jp
testb
loop
add
fiadds
out
les
and
jle
mov
fldcw
pop
popa
aad
in
or
inc
dec
fdivl
repz
cli
sub
and
xor
sbb
dec
pop
jle
sbb
shrb
stos
inc
dec
imul
into
cmp
inc
ds
icebp
hlt
lods
and
mov
pop
shll
sub
mov
bound
and
xlat
dec
into
or
push
and
xchg
sbb
fisubrl
adc
lahf
rorl
mov
pop
mov
pushf
in
clc
fs
popf
fldenv
pop
rcll
mov
std
test
mov
imul
jbe
inc
jp
rclb
pop
js
dec
mov
or
and
xchg
adc
rcll
push
mov
lods
adc
scas
ja
pop
cmp
daa
pop
arpl
pop
and
inc
loopne
fmuls
and
sub
push
cmp
xor
jnp
leave
or
in
iret
negb
fwait
pop
pop
pop
outsl
jno
test
enter
daa
cs
and
inc
mov
test
loop
imul
call
push
cmp
mov
sbb
in
jl
lret
inc
mov
push
sbb
add
or
inc
mov
mov
icebp
adcb
fnstenv
rclb
ret
cld
pusha
ss
test
xor
sarb
ss
dec
adc
sub
cli
sti
mov
sbb
jne
sahf
enter
out
pop
gs
push
out
inc
push
dec
jp
push
negl
dec
arpl
cmp
movsb
fcomps
inc
ret
int
addl
sbb
rcrb
pop
jecxz
pop
add
adc
cmp
push
les
cmpb
jg
mov
xchg
lock
xchg
jnp
les
adc
mov
xchg
out
pop
mov
ffreep
rorb
and
sub
jg
outsl
jne
std
adc
and
test
popf
sbb
mov
jbe
scas
push
fisubrl
xor
fildll
les
or
sbb
repz
push
pop
movsb
addl
mov
push
gs
mov
aad
mov
mov
add
enter
int3
pushf
pop
and
fnstenv
arpl
pusha
stc
adc
adc
jbe
shl
fs
hlt
jo
imul
cmp
mov
jl
lret
loope
loopne
mov
cmp
int3
jne
jnp
push
out
fistl
adc
insl
add
in
mov
xchg
roll
xor
cwtl
mov
pop
lcall
push
fidivrs
je
cmc
and
sti
push
notl
inc
es
xchg
or
jg
jge
test
loop
lods
xor
sbb
xor
in
xlat
cmpb
mov
aad
jecxz
inc
sbb
mov
insl
lock
icebp
xchg
adc
leave
je
cmp
mov
inc
jp,pn
mov
js
xchg
mov
or
pop
xor
jno
inc
sbb
fisubs
jge
jl
push
xor
jae
jp
fwait
add
in
repnz
and
into
cmc
ret
mov
out
sub
and
add
cmp
fstl
sbbl
cs
movsb
das
icebp
das
add
pop
sbb
jo
ljmp
shl
inc
and
push
rcr
fwait
pop
sub
mov
loope
das
pop
sbb
shrb
sbb
sbb
mov
fnstsw
repz
xchg
add
and
out
negb
push
aas
dec
add
push
cld
xchg
shl
sbb
in
in
bound
icebp
fwait
movsl
repnz
pop
lahf
mov
pop
popa
dec
or
push
loopne
out
jo
repnz
bound
xchg
cmp
cs
out
ljmp
sub
jne
jl
movsb
xorl
repz
inc
sbb
das
mov
cmp
cli
inc
mov
and
lret
pusha
lret
out
inc
cld
and
push
push
in
shl
imul
sub
cmp
outsb
lods
sub
add
jg
add
cmp
add
sub
push
cli
xchg
mov
push
cwtl
dec
jb
jo
pushf
movsl
sbb
push
iret
pop
mov
adc
pop
mov
pop
lret
fcmovb
and
repnz
jg
test
cmp
mov
jl
push
jle
mov
pop
movsl
fwait
push
dec
arpl
lods
jp
ss
xor
notb
add
gs
or
pop
xchg
or
fidivl
fdivl
in
and
sub
scas
xchg
inc
movsl
fisttpl
mov
ja
cli
push
lahf
adc
pop
imul
sub
lods
hlt
mov
xor
cltd
mov
test
add
ljmp
ret
ja
pop
sub
stos
sbb
mov
loopne
outsl
mov
xchg
pop
sbb
insl
or
fdivl
mov
shlb
cmpsl
int3
sub
sbb
mov
pop
xor
pop
xchg
arpl
and
adc
mov
sub
jecxz
cmpsl
outsb
pop
out
loop,pt
sub
mov
icebp
js
or
sub
js
mov
or
sbb
mov
jns
xchg
xchg
and
mov
dec
ffreep
mov
cmp
pop
mov
mov
ds
in
mov
pushl
popa
incb
or
out
andl
mov
push
shlb
lock
ret
les
push
out
or
rcrl
lret
das
mov
lcall
mov
jo
mov
lea
jnp
push
jo
in
sub
and
loope
outsb
mov
stc
adc
fucom
imull
lret
xor
add
fistl
adcl
push
incb
dec
cli
cmc
js
jecxz
sbb
cmp
dec
xchg
push
repz
call
sub
fidivrl
test
add
fists
add
ficomps
js
xlat
outsl
shlb
mov
aad
jecxz
icebp
add
xchg
jo
adc
stc
lds
in
xchg
xlat
inc
and
mov
push
dec
js
mov
adc
jmp
push
popa
or
loop
movsb
mov
orl
mov
cli
mov
and
negb
and
cld
scas
insl
dec
mov
repnz
das
outsb
mov
test
outsl
push
inc
leave
mov
jno
sub
pop
pop
jmp
repz
xchg
aas
jb
pop
add
sbb
add
int
lods
and
dec
setne
add
shrb
sahf
daa
sbb
xchg
mov
mov
sbb
icebp
inc
mov
sbb
mov
dec
rolb
mov
fcmovnbe
shl
mov
mov
fsubs
test
mov
push
lret
cmp
cli
movsl
lea
incl
mov
imul
xchg
fsubr
lods
sarb
pop
bound
xor
pushf
add
int
jns
adcb
int
scas
and
sbb
cltd
test
jmp
dec
jmp
add
and
jae
test
cmp
and
sbb
cmp
jbe
aas
xlat
ja
movsl
inc
test
mov
popf
mov
mov
imul
push
inc
mov
lds
cmc
or
sbb
push
leave
jle
cltd
sbb
imul
jmp
mov
in
or
nop
movsl
jle
mov
ja
add
andb
aad
sub
push
out
ljmp
xor
adc
xchg
jp
push
in
sahf
push
add
in
loope
idivb
and
mov
stos
push
lahf
xor
xchg
sti
lods
out
xchg
xor
jne
dec
xchg
lea
jle
inc
push
jo
lcall
popl
xor
into
dec
cmp
not
loope
mov
cmpsl
fcomip
loopne
mov
mov
scas
push
xor
in
addl
leave
inc
outsb
sbb
jae
mov
adc
sub
cwtl
pop
iret
fstl
cwtl
movsb
mov
mov
imul
xor
aam
xor
dec
imul
cs
das
jge
sub
mov
mov
or
add
js
xchg
push
adc
pop
sti
sbb
cld
adc
mov
enter
adc
jbe
or
mov
pop
inc
sub
cli
inc
cmpb
adc
aad
cmp
xor
repnz
push
adc
push
pop
loop
and
dec
cmp
lret
scas
loop
xchg
popf
inc
repnz
pop
xchg
nop
dec
movsb
out
pop
in
aam
andb
push
pop
ds
or
sahf
or
outsb
jp
push
mov
lock
imul
xchg
cmp
stos
add
xchg
mov
data16
dec
xor
outsl
add
incb
cli
mov
bound
test
outsb
add
sbb
aas
lahf
mov
inc
jae
stos
mov
mov
inc
jns
and
or
push
jbe
add
push
aad
cmc
mov
mov
and
shlb
lcall
fisttps
mov
push
jmp
outsb
pop
xor
xchg
out
xchg
icebp
cmp
xor
mov
cmc
pushf
popa
push
lock
xchg
add
jne
cli
rolb
mov
jns
mov
pop
dec
ret
jns
jbe
out
pop
sbb
nop
in
mov
sbb
xchg
sbb
dec
imul
mov
inc
lods
cli
cs
cmpsl
rorl
inc
push
mov
stos
out
or
pop
sbb
jecxz
lahf
inc
and
or
lock
arpl
mov
popf
push
repz
sub
dec
mov
xchg
push
xor
xchg
sub
cmp
inc
pavgw
imul
stc
insb
mov
or
cmp
lock
rcrl
cmp
cmp
int3
sbb
mov
movsl
xor
outsl
sahf
jno
pushf
popa
lods
pop
out
mov
cli
fcomp
sub
fnstsw
push
mov
icebp
pop
xor
psubusb
cmp
adc
inc
data16
fs
mov
in
mov
in
cmc
inc
push
popf
mov
sbb
popf
push
jp
stos
mov
iret
imul
loopne
push
clc
dec
jae
aas
lcall
adc
les
test
add
cmp
dec
mov
enter
xchg
mov
mov
jb
and
mov
mov
rcrb
sub
testb
or
sub
push
xchg
fidivs
push
cmp
and
clc
shl
loop
add
and
test
loope
shl
pop
push
dec
sbb
inc
dec
mov
lods
mov
loope
imul
pop
jae
out
out
inc
or
in
test
add
mov
jne
data16
xchg
inc
jg
sub
cltd
jg
inc
or
cmp
loope
loope
or
out
adc
scas
sub
pop
jmp
mov
sub
jnp
cs
iret
jbe
xor
aam
call
lret
ds
xchg
std
pop
mov
popf
jmp
call
push
cld
lods
mov
xchg
mov
mov
scas
ljmp
cli
and
inc
xor
sbb
dec
ss
jo
pop
clc
xchg
loop
arpl
push
xor
loop
in
es
pop
add
test
cmp
and
adc
imul
mov
clc
and
cli
jmp
les
out
push
mov
jmp
xchg
jae
mov
sti
dec
jae
ss
xor
push
fwait
in
shrl
ljmp
pop
repnz
in
aas
pushf
sub
pop
mov
aad
xchg
loopne
mov
adc
dec
dec
add
movsl
negb
jbe
xchg
sub
lcall
sub
fdivr
clc
outsb
inc
inc
cmc
pop
xor
mov
sub
lock
fucomp
sub
lea
test
lea
cwtl
aaa
push
mov
in
lea
xor
arpl
insb
push
pop
cmpsl
push
and
sbb
mov
test
dec
xchg
dec
into
insb
fisubrs
mov
cli
add
ret
aad
aaa
loop
rolb
out
loope
pushf
lea
loopne
mov
jp
xchg
xchg
adc
in
mov
daa
sti
sbb
pop
and
sti
jae
xchg
das
les
add
iret
pop
adc
cltd
adc
repnz
sbb
mov
orb
mov
xor
nop
lret
insb
adc
paddw
nop
fistps
and
or
imulb
adc
jle
pop
addb
push
nop
mov
pushf
sub
test
repnz
push
and
xor
mov
dec
sub
leave
mov
pop
stc
ljmp
inc
dec
aaa
imul
fistl
cmc
jecxz
aam
cmp
sub
int3
or
jnp
in
cmp
out
dec
je
hlt
push
sbb
lret
rclb
mov
cmp
mov
add
inc
imul
add
dec
inc
dec
mov
xchg
or
xlat
xchg
xor
ret
test
std
cld
icebp
adc
js
xor
add
jecxz
les
mov
pop
mov
fdivs
mov
stos
lret
adc
lock
jns
repz
cmc
fdivrp
mov
sbb
or
test
mov
test
subb
sbb
lret
mov
cmp
jns
or
cmp
out
jnp
call
aad
insl
jge
cmp
aad
sub
dec
cmp
xchg
xlat
pop
mov
mov
cwtl
mov
or
int3
imul
repz
cmc
rcrb
adc
lret
lds
inc
cmovs
mov
adc
int
jnp
sub
out
data16
shl
pop
fwait
mov
push
mov
and
out
jnp
test
pop
in
pop
call
cmp
dec
lret
sti
adc
push
scas
mov
movsb
push
mul
leave
pusha
add
cld
stc
lret
jmp
sbb
push
mov
fmull
rcll
sbb
stos
dec
pop
loopne
or
xchg
jbe
pop
jg
cmp
inc
inc
push
cmpsb
mov
cmp
dec
call
dec
cmpsl
push
int
jbe
in
jbe
jp
jl
xchg
std
adc
imul
adcl
xor
dec
stc
pop
scas
mov
pop
cmpsl
adc
xchg
mov
sbb
dec
xchg
es
mov
cmpsb
sbb
and
jae
dec
lahf
inc
fcomps
xor
mov
push
out
inc
test
mov
scas
roll
test
dec
orb
js
repnz
scas
cmp
inc
add
and
inc
xchg
jge
ljmp
push
cmpsl
fdivl
mov
fwait
sub
hlt
outsl
shlb
inc
push
movsb
mov
push
push
mov
addb
repnz
sub
jno
fxch
aam
xor
mov
arpl
jmp
sarl
hlt
in
jnp
xor
das
bound
mov
xor
push
jne
pop
insl
pop
xor
loopne
sub
dec
incl
int
mov
clc
or
mov
fiaddl
push
ret
mov
mull
stos
adc
pushf
push
push
bound
lcall
adc
adc
call
push
je
pop
mov
adc
inc
add
inc
mov
push
pop
cmp
xchg
adc
pusha
pcmpgtw
add
rcrb
lods
add
imulb
sub
lds
lods
push
cmp
out
ss
xchg
stos
lahf
test
je
jge
lret
sub
or
fcoms
or
jecxz
js
fs
daa
mov
cli
mov
or
xor
movsb
and
xchg
sbb
fidivs
or
mov
pop
lcall
insl
cmp
xchg
add
mov
mov
aam
pop
jns
les
aad
sbb
sub
scas
or
je
cmpsb
in
xchg
data16
mov
cmpsb
mov
test
data16
dec
sarl
in
push
or
jl
ret
mov
sbb
lea
je
or
std
xchg
jne
inc
pop
or
xor
vfrczsd
and
mov
icebp
cli
nop
aaa
mov
and
pop
inc
aam
jno
movsb
fisubl
mov
cs
pushf
fwait
popw
cmpb
push
and
lods
pushf
pop
pushf
fadd
push
pusha
jp
pop
mov
mov
iret
ljmp
and
out
outsl
nop
sbbb
fcmovu
xchg
lods
push
test
loop
stos
sub
mov
insl
sub
rcll
fiadds
imul
and
insb
sbb
pusha
mov
mov
inc
inc
dec
int3
xchg
cmp
test
add
out
cmpsb
cmp
mov
jns
xor
push
dec
push
dec
add
iret
mov
lea
dec
mov
or
test
ss
mov
mov
bound
inc
dec
rcll
clc
shll
sbb
jns
jne
sub
add
dec
jb
pop
mov
scas
cmpsl
inc
or
xor
lea
sar
daa
xchg
xchg
ret
pushf
sbb
dec
cmp
mov
sbb
mov
sbb
stos
out
and
mov
cld
xor
scas
nop
in
call
dec
push
movsl
call
je
std
shll
ror
jge
sti
outsl
add
mov
push
xor
xchg
stos
cmp
lret
test
out
ljmp
cmp
lea
jecxz
sub
sub
pop
mov
aas
jecxz
test
jno
in
adc
sbb
insl
push
loope
push
aad
les
in
mov
sub
test
dec
adc
stos
in
and
xor
add
subl
push
pop
sti
outsb
inc
movsl
adc
in
xchg
insb
push
inc
sbb
aam
mov
inc
sbb
inc
push
mov
push
and
push
inc
insl
lods
pop
cmp
and
mov
dec
push
fwait
inc
dec
jge
cltd
stos
jmp
jge
hlt
aam
je
aam
or
ljmp
faddl
shll
imul
dec
sbb
add
jp
cmp
adc
rcl
push
push
push
insl
icebp
dec
loopne
loop
lods
pop
dec
cmp
inc
xor
popf
inc
pop
push
mov
inc
rorb
pop
mov
ds
out
addr16
cmp
add
mov
arpl
imul
ja
popa
dec
fldenv
pop
iret
push
movsl
inc
sbb
pusha
pop
hlt
pop
faddl
adc
mov
test
ljmp
stc
dec
xchg
int
cmpsb
mov
idivb
fists
fs
cmp
jmp
mov
cmp
std
cltd
in
outsb
les
leave
ljmp
arpl
stos
push
js
mov
add
sbb
push
adc
mov
cmc
jbe
out
mov
mov
bound
int3
test
push
and
aaa
fwait
incl
mov
jl
and
cmp
shll
andl
shr
dec
cs
and
xchg
mov
sub
or
adc
scas
aaa
mov
lret
sub
out
xor
ss
xchg
outsb
loopne
bound
mov
cmpsl
repz
jg
in
add
js
push
cli
dec
fadd
mov
aaa
sbb
xchg
mov
mov
pushf
pop
movsl
mov
dec
add
jle
pop
scas
in
mov
xlat
fiadds
xchg
and
gs
mov
sub
push
xchg
repz
xor
push
call
outsl
mov
sbb
jp
movb
add
mov
and
sti
mov
movsb
push
pop
or
pop
sbb
popf
gs
inc
mov
mov
in
inc
inc
pusha
fldenv
dec
sti
jno
inc
jnp
fisubs
cli
arpl
in
jg
imul
aaa
jae
out
sahf
sub
pop
or
jno
sahf
stos
fmulp
mov
push
push
in
mov
inc
arpl
cwtl
pop
or
xchg
xor
bound
inc
cmp
inc
in
mov
setne
add
setge
test
gs
scas
inc
movsb
cmp
pusha
pop
cld
lea
pop
test
fdivrl
fs
pusha
popf
out
add
int
in
sub
xlat
pusha
xor
ja
dec
js
adc
xchg
lret
lret
arpl
js
pushf
jge
das
pop
pusha
add
clc
lods
lahf
ds
adc
and
stos
stos
sub
ja
sahf
cwtl
xchg
cld
ja
shrd
or
fnstsw
arpl
sahf
inc
and
xchg
or
jecxz
dec
xchg
ljmp
stos
fucomi
add
push
lret
mov
sti
mov
in
mov
loopne
pop
jg
jecxz
push
adc
arpl
sub
pop
or
mov
in
aas
dec
hlt
and
mov
mov
xor
repz
cmp
and
test
jle
ret
stos
add
scas
cmp
or
mov
pop
gs
mov
cmp
and
xor
xchg
std
lcall
mov
aad
test
lea
mov
xchg
cmp
loopne
mov
xor
sub
std
inc
inc
cli
gs
sbb
loopne
dec
mov
aaa
pop
cmp
mov
xchg
lock
jne
push
scas
enter
rep
mov
push
jnp
shrl
pop
orl
stos
add
stos
push
sbb
test
sahf
lods
pop
divb
pop
push
insl
xchg
xchg
jae
push
out
insb
leave
jbe
push
jne
sub
dec
dec
mov
cmp
cmp
sbb
in
hlt
int
leave
sbbl
xchg
lea
movsl
xchg
mov
arpl
xchg
push
sub
orl
insb
pop
sbbl
sbb
and
jl
lahf
shll
insl
movsl
ret
mov
inc
mov
adc
add
stos
mov
push
ret
cmc
pop
pop
lret
push
addr16
stos
mov
insl
in
sbb
data16
sbb
jl
bnd
jns
xor
adc
xchg
jmpw
mov
cltd
outsl
lods
xchg
lahf
sar
adc
dec
popa
inc
in
mov
mov
mov
push
sbb
push
adc
mov
xchg
repz
dec
add
push
lahf
push
mov
jecxz
loopne
jbe
push
cmp
push
cld
sarb
cmp
mov
xor
fwait
lret
cmc
inc
push
cmp
imulb
sub
fwait
lcall
lahf
xchg
arpl
stc
out
push
rolb
loopne
lock
paddw
jecxz
or
das
into
cmp
push
dec
mov
stos
add
push
jecxz
imul
lret
or
sub
cmp
lods
es
push
adc
xor
or
push
pop
shrb
bound
xor
ret
adc
shll
jmp
daa
pop
std
outsb
enter
mov
push
dec
jecxz
cs
in
adc
mov
andl
je
jge
mov
mov
dec
bound
les
dec
test
adc
cmpsl
mov
mov
pop
ss
vpinsrw
cmp
mov
pusha
ja
imul
or
loop
dec
pslld
pop
push
int3
jne
xor
fwait
retw
sahf
pusha
out
bound
aad
rcrl
dec
pushf
rcrl
adc
clc
or
stos
aaa
fldenv
and
pop
sub
mov
jg
cmc
jge
mov
ds
das
and
subl
inc
sub
dec
sub
or
paddw
inc
xchg
adc
and
sbb
lock
and
stos
loop
jge
mov
nop
daa
jecxz
fisubl
movsl
arpl
cmpsl
stc
mov
daa
jns
sbb
lods
or
xchg
data16
cmp
inc
xchg
js
pop
aas
fsubrp
cld
pushf
mov
or
jo
pop
dec
mov
push
sbb
les
notl
jnp
mov
mov
jl
test
mov
fcmovb
push
cmp
sahf
lods
lods
mov
sub
stos
fnsave
fs
sti
or
push
inc
xchg
pop
in
and
imulb
inc
xor
out
std
jns
es
mov
dec
xor
out
lds
jae
int
rclb
aas
or
hlt
js
jo
rcll
mov
into
adc
dec
adc
leave
adc
shll
and
push
add
imul
aas
adc
mov
push
mov
js
inc
push
cmp
and
adc
dec
shll
stc
ss
xchg
arpl
xor
push
stos
mov
add
fdivl
inc
enter
cmp
sub
sti
fsubrp
dec
cmp
outsl
addl
movl
adc
jg
in
stc
xor
inc
sub
and
scas
stos
lea
mov
fwait
push
or
sti
pusha
jecxz
xchg
adc
nop
and
je
and
mov
enter
ss
cmp
icebp
inc
mov
inc
rcll
or
aaa
ror
call
fmulp
pop
outsb
sbb
cmp
aad
fs
push
ret
faddl
out
push
inc
add
pop
pop
icebp
shrb
scas
jl
lahf
or
int
pop
aad
adc
cmp
mov
hlt
sbb
aaa
out
idiv
push
enter
fldcw
fisttpl
jg
sbb
nop
cmpsl
dec
cli
stos
data16
ret
lret
xor
jb
inc
mov
int
inc
push
shl
mov
repz
mov
xchg
ds
inc
dec
adc
je
icebp
mov
xor
push
lahf
mov
fucomi
test
data16
test
vaddss
int3
imul
and
add
in
bound
aas
les
aad
xorl
add
mov
mov
popf
sarb
out
test
pop
mov
jp
orb
push
loop
addr16
push
jecxz
mov
and
add
and
mov
adc
rcrl
mov
aam
jae
jb
leave
test
dec
dec
jge
add
test
mov
scas
mov
fisttpl
in
adc
mov
icebp
sbb
inc
ret
sub
addr16
shll
sub
mov
jge
dec
in
adc
jo
adcl
or
cmpsl
xor
push
addb
jmp
inc
in
xchg
lods
fistpll
adc
test
sbb
or
xchg
xchg
into
cmp
pop
test
je
sbb
sbb
push
push
push
push
lds
jne
pop
mov
dec
orl
popf
adc
adc
scas
inc
push
inc
into
cmpsl
mov
jecxz
bound
jg
push
jge
xchg
int
cmp
data16
int
popf
es
mov
lods
sub
int3
cmp
add
mulb
xor
fidivrl
mov
out
popf
mov
jg
pop
clc
pop
out
add
jg
or
inc
xchg
adc
add
sub
fldl
adc
cmpsb
aaa
xor
repnz
ja
outsl
push
mov
lods
sub
mov
cmp
mull
mov
mov
ret
mov
pusha
jno
xchg
mov
inc
mov
pop
push
pop
clc
data16
enter
dec
pop
loop
in
lds
inc
iret
mov
push
sbb
movsb
xor
outsl
mov
or
and
adc
imul
xor
bound
pop
jle
xchg
push
lods
int3
lcall
xchg
inc
scas
pop
call
jbe
or
or
fbstp
push
mov
mov
stos
clc
loop
sub
call
jb
mov
xor
mov
lret
mov
sbb
push
out
lock
mov
aad
mov
sahf
mov
jmp
sbb
popl
fwait
neg
js
daa
fiadds
insl
insl
sub
out
pop
clc
mov
mov
and
mov
xor
stos
bound
push
cmp
in
lret
lcall
rolb
das
aad
dec
pop
jb
rorb
mov
jecxz
xor
std
pop
in
pushf
gs
movsb
mov
dec
jp
sahf
in
jmp
dec
adc
nop
leave
jg
push
neg
icebp
in
and
mov
push
pop
roll
jg
stos
insl
jb
outsb
pop
bsr
jg
insl
icebp
jbe
xor
inc
ror
rcrb
mov
jl
nop
enter
dec
cmp
xchg
inc
iret
pop
aad
fwait
nop
call
xlat
cmpb
inc
xchg
jbe
ficompl
sub
subl
sub
fisttpll
lods
aas
push
lret
out
int3
aam
movl
lock
rcll
cmp
es
lret
dec
orl
bound
push
mov
mov
push
stc
dec
test
test
inc
outsl
push
inc
test
rclb
jecxz
outsl
loope
lea
lcall
inc
sbb
lock
ss
iret
rcll
xor
pop
jecxz
aad
jmp
inc
hlt
in
xor
mov
adc
mov
jge
lea
pop
out
int
lcall
lea
les
dec
pop
and
sahf
mov
scas
pop
rorb
dec
or
imul
mov
adc
out
fdivs
dec
js
push
jb
jl
inc
lods
pop
xorb
ljmp
mov
jmp
push
jne
in
adc
bound
enter
stos
xchg
mov
cmc
adc
xchg
dec
sbb
scas
lods
and
mov
nop
stc
add
inc
push
sbb
cmpsb
sub
add
sbb
lret
cmpsl
pmuludq
mov
pop
push
lret
fnstsw
repnz
jns
lret
mov
inc
mov
mov
and
sbb
jl
or
cmp
inc
cmp
insb
xchg
cmp
shll
mov
mov
mov
lret
push
add
lahf
adc
inc
pop
dec
ffree
insl
add
or
mov
addr16
jmp
test
xchg
data16
fsubl
xchg
or
sub
imul
or
outsb
mov
push
les
sub
cld
in
sbb
loop
fldl
decl
daa
mov
add
add
cmp
mov
fstps
dec
rol
dec
pop
cmpl
scas
roll
aas
lods
pop
jecxz
mov
pop
sub
leave
lods
xchg
adc
inc
inc
jno
loopne
popf
push
jg
jo
jnp
lahf
mov
pop
mov
sbb
loop
scas
in
xchg
sbbb
insl
dec
rcll
jl
xor
test
xchg
and
or
pop
pop
xchg
ret
popa
jmp
mov
out
cmpsb
mov
pop
mov
pop
loope
pop
push
mov
cli
cltd
and
xor
add
int3
ror
mov
stc
nop
lcall
sub
xor
inc
out
orb
das
loop
push
sahf
cmp
shrl
in
das
pop
rcll
inc
mov
rcll
mov
idivl
pop
les
jne
insl
cmp
jno
lahf
out
dec
xchg
in
lret
nop
mov
mov
retw
std
and
add
and
out
daa
or
repz
mov
and
jl
aas
sahf
pop
inc
add
push
add
in
sbb
cmp
sbbb
int
dec
nop
push
inc
insl
sarb
lods
stc
pusha
out
xor
xor
and
xor
cs
daa
aad
mov
push
jp
loop
xchg
jb
clc
sahf
or
les
push
xor
mov
sbb
stc
insl
pop
xor
adc
hlt
in
add
xchg
and
mov
leave
xchg
lret
jae
push
in
mov
push
mov
jp
fmuls
mov
sbb
scas
and
es
fs
mov
out
test
pop
in
aas
mov
add
lret
adc
into
add
cmp
in
frstor
into
push
leave
xchg
hlt
cld
test
push
into
mov
movsl
mov
xchg
cmp
insl
sbb
or
cld
and
push
cmpsl
or
xchg
xchg
or
icebp
dec
sbbl
int3
aas
cltd
lret
dec
mov
add
pop
mov
out
jb
push
pop
adc
lahf
in
jno
adc
or
jb
inc
xchg
icebp
mov
cmp
dec
mov
pop
out
lret
aad
or
int3
and
test
mov
shlb
dec
pop
inc
sub
xor
push
out
rolb
add
add
or
jecxz
ds
ret
jnp
cltd
fs
sbb
shll
sbb
les
sub
xor
sbb
mov
sbb
cwtl
pusha
xchg
dec
jl
cmp
das
aaa
das
or
mov
xchg
ficomps
jo
popa
mov
add
push
pop
repnz
mov
fsubp
jp
or
sbb
mov
rcrl
cwtl
pop
xchg
lret
cmp
pop
imul
int
shlb
and
mov
ror
pop
dec
xor
cmpsb
ss
sub
mov
cs
mov
mov
dec
add
cli
movsl
mov
aam
testl
and
or
leave
cmp
das
push
pop
lods
bts
mov
xchg
xor
sbb
cmp
sbb
inc
cmpsl
jecxz
push
push
adc
adc
rorb
sbb
jle
test
push
xchg
dec
outsl
xchg
out
movsw
jmp
dec
xlat
mov
push
je
mov
cld
popf
jg
pop
outsl
sbb
add
fnsave
popf
sbb
stc
icebp
ds
sbb
je
adc
sbb
mov
xor
mov
or
mov
out
inc
shrb
hlt
xchg
add
mov
fmuls
jl
ja
dec
pushf
jg
jae
push
mov
imul
pop
pop
cmc
cmc
and
inc
adc
daa
lods
cld
jl
sbb
mov
jge
jmp
mov
fnstcw
outsl
cld
outsb
scas
inc
pop
sbb
xchg
mov
sbbl
and
ds
ljmp
shlb
push
and
adc
imul
in
sub
mov
hlt
popw
mov
sbb
lcall
pop
mov
test
movsb
cmp
out
xchg
in
push
push
test
test
pop
enter
das
imul
test
ja
loopne
loop
test
sub
dec
pop
mov
push
sbb
lea
sub
push
mov
inc
jne
sti
rorl
mov
jp
jmp
or
jge
mov
jl
in
cmp
iret
shrl
jle
dec
aad
or
hlt
test
or
daa
sbb
push
mov
and
sbb
mov
push
aaa
iret
gs
sub
in
xor
maxps
fs
cmp
sbb
ja
bnd
dec
push
int3
jb
icebp
shrl
xchg
hlt
pop
or
dec
cmp
jbe
inc
in
mov
push
adc
jge
xchg
rorl
add
mov
lds
stos
cmp
lods
xor
int3
lcall
cld
adc
xchg
sub
neg
jno
clc
rorw
cmp
xchg
jmp
inc
cmp
cld
les
scas
xchg
and
insl
and
bound
dec
and
outsb
and
or
test
loope
pushf
notb
and
push
mov
xor
mov
int3
call
add
lahf
js
ss
xor
je
jmp
sbb
pop
pop
cmc
dec
or
jno
test
jnp
dec
shl
out
imul
mov
push
jb
call
mov
jmp
adc
xchg
testl
add
loopne
jae
ss
or
cmp
sub
or
rolb
push
sub
ret
push
xchg
cwtl
aas
jg
mov
xorl
sub
add
mov
inc
pop
imul
mov
shrl
pop
push
in
add
imul
jl
jb
pop
pop
or
sbb
movsl
mov
cmp
mov
add
addr16
mov
cmpsl
int
adc
loopne
in
pop
outsl
imul
pop
aam
jb
imul
jg
cmp
mov
ds
mov
inc
push
jmp
and
lods
cmp
inc
cs
cli
jecxz
aaa
pop
dec
push
fwait
jae
fld
movsb
cltd
cmp
ficoml
dec
test
ja
popf
add
push
aad
fnstcw
inc
fcoml
lahf
mov
xchg
inc
dec
loop
in
in
push
mov
mov
int3
gs
sbb
xchg
push
dec
dec
aad
adc
cld
mov
cmp
enter
ja
push
jns
in
inc
scas
mov
hlt
adc
xor
adc
imul
adc
cmp
das
repnz
and
lds
in
mov
or
dec
sarb
hlt
push
fwait
nop
addr16
pushf
mov
or
std
frstor
pop
arpl
jecxz
xchg
sarb
sub
mov
pop
popa
inc
xchg
or
test
or
ljmp
xchg
xchg
addr16
add
lea
mov
clc
sub
mov
iret
xorb
dec
push
sub
mov
idivb
sub
sbb
add
xor
jmp
lcall
jg
cmc
xchg
mov
mov
mov
fldenv
jnp
jo
sahf
jecxz
xchg
fdivr
arpl
aas
pop
mov
push
push
cwtl
push
pop
in
mov
nop
and
shr
popa
dec
decl
lods
fs
mov
mov
and
sub
jnp
xor
add
adc
fisttpll
into
rolb
lcall
mov
cmp
xlat
roll
nop
jmp
inc
popf
in
ja
stos
xchg
and
mov
jg
pop
xchg
jecxz
mov
xchg
divb
cmp
sti
or
jno
pop
out
pop
jmp
shll
or
or
pop
and
and
mov
aad
cmc
je
mov
push
xor
rcl
jl
add
and
sti
cmp
xor
test
and
adc
in
mov
inc
stos
cld
sbb
lahf
setae
leave
popf
mov
mov
iret
pop
cmp
popf
and
fidivrl
and
bound
ss
mov
pusha
mov
mov
fstpl
sub
sbb
dec
testb
or
pop
or
ss
dec
inc
adc
outsl
popa
pop
push
out
fdivrs
cmpsb
mov
mov
xchg
mov
int3
scas
lea
mov
xlat
ljmp
fdiv
sbb
cli
inc
rolb
clc
fdivl
inc
mov
fsubrl
dec
inc
cmp
add
dec
cld
jnp
pop
dec
push
ret
xchg
fcomps
test
or
cld
jg
testl
decl
dec
addl
ret
mov
inc
aaa
mov
push
mov
cmp
rcrl
or
lea
pop
adc
mov
jns
jp
cwtl
in
inc
and
cmpxchg
jge
inc
out
pop
inc
cmp
pop
andb
mov
lret
pop
icebp
jecxz
sbb
sub
or
or
xchg
lret
in
test
and
cltd
xor
inc
dec
enter
jne
js
clc
out
pop
sub
mov
pop
push
enter
sbb
adc
push
push
push
outsb
and
in
xor
setl
sbb
lahf
sub
call
addr16
dec
pop
xchg
cmovs
iret
xchg
pop
imul
pusha
xorl
jae
outsl
shrb
movsb
pop
aad
fwait
rorl
rol
sbb
inc
movsb
pop
push
aaa
pop
icebp
stos
clc
mov
mov
pop
adc
sub
fisttpll
gs
sahf
mov
inc
xchg
xchg
and
or
pop
dec
ret
cli
ret
outsb
cmpsl
aad
xchg
in
xor
in
lret
sub
mov
cli
adc
xchg
cmpsl
mov
std
cmp
pop
cld
call
leave
je
fwait
cmpb
sarb
shlb
loopne
mov
ljmp
inc
out
mov
shrb
lcall
jns
cmp
add
lea
or
add
out
mov
dec
add
sqrtps
xlat
movl
mov
pop
and
sbb
pop
test
andb
mov
xchg
and
sub
push
or
cmp
daa
ja
jp
cmp
or
jg
mov
clc
and
imul
cmpl
mov
ret
mov
adcb
fadds
fistpll
gs
mov
mov
push
jnp
cvttps2pi
xchg
test
in
ja
mov
ret
test
sub
sub
into
subb
jne
push
xchg
sbb
or
pop
adc
pop
add
sti
cli
aaa
cs
xor
test
adc
adc
mov
cvttps2pi
sub
outsb
imul
fwait
imulb
icebp
cld
aad
or
jecxz
lcall
pop
es
repz
lds
mov
jns
js
adc
ja
push
jns
inc
ljmp
stos
les
test
enter
xor
incb
xor
ss
out
dec
divb
adc
pop
sbb
ret
mov
push
add
jns
fidivs
mov
add
xchg
adc
sbb
mov
das
mov
sub
mov
pop
imul
pop
xchg
or
clc
into
loop
cmpsl
cs
mov
xlat
pop
push
inc
jnp
sub
movsl
or
out
imul
mov
push
popf
jns
notl
jge
mov
sub
sub
lcall
sbb
daa
bound
jo
mov
clc
sbb
loopne
mov
xor
push
test
cwtl
fcmovnb
add
and
lret
and
mov
ror
mov
sub
cmpsl
mov
movsl
insb
addr16
inc
int3
push
adcb
lods
adc
jl
mov
inc
popf
sbbb
mov
mov
adc
or
and
push
xor
aaa
mov
add
mov
rcrb
ds
fidivrl
sub
out
xchg
jae
cltd
push
lds
gs
jecxz
adc
jl
loopne
fldl
jo
rcll
stos
test
or
xchg
jae
cltd
nop
ss
sub
cmp
xor
loope
push
mov
jg
or
add
pop
pop
fs
xlat
jo
icebp
inc
mov
daa
cld
icebp
ret
icebp
or
outsb
lods
outsl
adc
mov
pop
cmc
mov
mov
addr16
nop
xor
mov
loope
sarb
dec
jns
push
mov
movsl
cmpsb
repnz
test
xlat
sub
test
fsubrl
scas
outsb
das
clc
jl
jb
or
lods
inc
rorl
aam
andb
add
call
fmuls
repz
rcr
stos
cmp
jle
mov
mov
dec
or
mov
cwtl
cld
or
negb
xchg
xlat
int
fisubs
mov
or
in
or
icebp
jp
mov
mov
repnz
mov
add
cmpsb
fdivl
pushf
lods
aaa
cmp
es
call
mov
cmp
rcll
add
lret
loop
xchg
jb
mov
sbb
xchg
movsb
stc
stos
cmp
xchg
add
mov
fnsave
mov
jp
ljmp
cmpsl
and
and
test
mov
stos
aaa
cld
aas
or
imul
adc
adc
lret
dec
sti
shll
sbb
push
sub
inc
cmpsl
aaa
rcl
rcr
jbe
pop
in
test
inc
lods
fucomip
clc
add
outsb
or
and
add
loopne
and
inc
sub
in
addr16
aam
dec
mov
sbb
inc
mov
pop
aaa
sbb
inc
push
ljmp
mov
jae
cmp
xlat
xchg
fwait
mov
jl
mov
xor
loop
xchg
mov
dec
notl
sbb
stc
aad
fadds
lods
cmp
into
adc
and
xor
inc
cmp
insl
cwtl
cli
xchg
out
dec
cmpsl
addr16
ret
call
sbb
out
push
insl
adc
lahf
in
add
insb
test
adc
in
test
pop
inc
or
mov
ret
test
cli
sub
xor
rol
out
add
and
pop
imul
out
xchg
mov
stos
dec
rcl
aaa
and
ror
push
pop
pusha
scas
inc
in
pop
jns
insb
and
ss
cmp
jo
xchg
jae
hlt
push
mov
fld
insl
mov
les
icebp
push
inc
fiaddl
pop
mov
pop
fstpt
push
pusha
in
pop
mov
insl
aam
cli
xor
mov
jb
jno
faddp
enter
cltd
pushf
test
xchg
sub
mov
push
out
sbb
fwait
sbb
aaa
and
sti
mov
jg
fucomip
divb
int
pushf
pop
or
sbb
addr16
popa
lods
data16
cltd
xor
iret
cmp
leave
pop
jnp
mov
pop
mov
iret
sub
jnp
sahf
lahf
outsb
inc
sub
or
call
shld
sub
test
xchg
jnp
jecxz
add
cmp
es
inc
jmp
dec
cmp
sub
lods
fwait
arpl
mov
mov
adc
pop
sbb
cmpsl
loope
std
sub
mov
subb
mov
xor
push
cmp
arpl
dec
jo
frstor
pop
dec
int3
mov
sbb
test
mov
subl
jle
push
dec
out
inc
sbb
mov
insl
adc
or
aaa
pop
scas
pop
mov
xchg
frndint
jno
fnstenv
test
xchg
cmpsb
mov
dec
sbb
add
cltd
xchg
popl
lds
adc
sti
xor
int
aad
aaa
or
mov
sub
in
in
sub
scas
decb
in
repnz
repnz
and
cmc
dec
shlb
jb
push
and
cmp
out
mov
inc
lock
nop
xor
ja
lea
cmp
negl
sbb
push
sar
add
jne
loopne
fcoms
aam
add
repz
lahf
lock
mov
in
int3
mov
lret
mov
pop
dec
fildll
adc
hlt
mov
or
jecxz
into
sbb
loop
mov
aaa
mov
mov
jae
in
outsb
xchg
jge
jle
sub
enter
fs
in
mov
cmpsl
call
pop
lret
daa
cmpsb
adc
jp
xor
jge
cwtl
int3
mov
inc
popf
jge
and
iret
or
push
ds
sbb
dec
mov
xchg
inc
ja
or
pop
insb
ret
das
in
pushf
pop
aad
and
push
push
int
repz
test
or
jnp
jecxz
test
dec
cmp
fwait
jb
lahf
out
nop
ret
mov
icebp
jno
sub
loopne
adc
dec
mov
test
pop
mov
add
jge
jecxz
xor
nop
cld
add
call
cmp
aas
mov
ljmp
lods
in
push
xchg
cmpsb
jecxz
outsb
pop
xor
hlt
xor
xchg
insl
adc
mov
adc
pushf
negb
outsl
xchg
push
push
aaa
leave
lret
sbb
xor
into
pop
scas
push
movl
cmp
bound
pushf
sub
mov
out
and
push
sahf
lcall
outsb
push
insb
loop
xchg
dec
or
insb
lcall
dec
adc
rorb
xor
inc
test
popf
push
pop
push
lods
sar
xchg
pop
inc
sbb
mov
push
jo
bound
xor
pop
test
xchg
add
mov
dec
push
add
dec
push
or
enter
mov
jecxz
imul
mov
xchg
xchg
das
cltd
rorb
pop
sbb
sub
fnsave
shl
jle
inc
jae
push
hlt
xchg
add
sbb
popf
dec
sub
ror
loope
push
mull
inc
dec
popf
aam
popf
repnz
cmc
lahf
popa
data16
push
rclb
or
cmp
and
scas
lods
jne
mov
fdivr
xlat
lock
daa
fsubp
hlt
addl
push
and
sbb
dec
jge
out
addl
imul
pusha
mov
fs
rclb
mov
cmpsb
pop
pushf
jo
lods
push
jge
cltd
enter
sbb
xchg
sahf
sbb
gs
dec
pop
adc
or
add
mov
push
add
cmpb
shr
pop
cltd
or
sbb
adc
pop
lea
shll
cmpsl
push
inc
mov
or
mov
push
sub
ds
adc
das
pop
popa
pop
or
push
push
inc
fmuls
sbb
iret
xor
sbb
popf
pop
cmpsl
sahf
int
icebp
lcall
jo
pop
mov
sbb
daa
pop
out
cmp
lea
push
test
and
sub
add
sbb
mov
jnp
mov
rcr
addr16
daa
mov
ljmp
sahf
inc
mov
adc
add
lcall
dec
xor
jge
or
bound
into
jecxz,pt
mov
and
bswap
movsb
mov
or
in
sbb
daa
and
das
dec
std
pop
pop
or
sti
adc
add
decl
aam
arpl
mov
jmp
sbb
dec
pop
push
rcl
test
scas
xor
jmp
and
push
hlt
push
jle
add
ja
pop
xchg
fisubrl
inc
cmp
es
fists
mov
shll
cltd
sbbl
cmpsl
xor
mull
jae
call
push
dec
insl
outsb
jecxz
xchg
dec
add
leave
out
sub
add
inc
inc
cld
inc
jecxz
or
or
and
push
add
lock
or
jle
mov
mov
ss
cmp
push
jle
clc
inc
mov
push
inc
pop
mov
pop
dec
loop
adc
inc
les
sahf
pop
test
out
icebp
add
lock
ret
sti
ds
out
and
pop
test
in
add
dec
nop
cld
or
or
mov
cmp
jo
add
push
nop
jecxz
out
mov
imul
sub
lret
insb
lcall
dec
adc
shlb
bound
push
xchg
mov
loop
cmc
ret
inc
pop
outsb
or
pop
pop
lods
dec
cld
adc
aaa
pushf
sub
ljmp
mov
psubb
mov
adc
push
and
popa
adc
gs
cmp
in
cmp
fcompl
lods
cwtl
inc
aam
add
loopne
push
pop
cld
xlat
dec
je
add
and
stos
mov
xor
sbb
sbb
lds
pusha
pop
push
jecxz
fcoms
mov
pop
leave
inc
rcrb
fistpl
decl
stos
xorb
fisubrs
mov
push
or
ss
ret
sub
aad
and
fisubs
fs
int3
sahf
cmpb
mov
fwait
data16
insl
xor
push
dec
mov
leave
lds
xlat
or
mov
outsl
jno
pop
xor
mov
aaa
push
nop
out
lods
pop
and
sti
repz
adc
push
invd
faddl
shl
test
sbb
xor
call
repz
test
fisubrl
xchg
in
xor
cmpl
std
iret
ss
std
test
mov
sub
jae
pop
adc
test
pop
cwtl
mov
fidivrs
and
repnz
sahf
cs
addr16
push
out
jge
hlt
movsb
iret
nop
cmc
sub
outsl
scas
repz
jbe
xchg
test
adc
mov
sti
icebp
fcompl
lret
adc
stc
test
arpl
adc
fcomip
aas
cltd
sub
pop
js
int3
iret
mov
pop
jno
popf
xor
roll
mov
int
pop
jg
or
repnz
addl
lret
lock
push
adc
jg
dec
jae
inc
cmp
lock
add
ja
dec
aam
scas
lret
out
mov
movd
xchg
and
adc
sbb
sti
mov
mov
ss
sahf
sarl
xchg
sti
xchg
jno
add
push
rcrl
fwait
jp
cltd
mov
je
out
and
test
lds
fs
dec
pop
fmul
imul
mov
jnp
jmp
in
cmp
loop
mov
fistl
fldcw
and
ficomps
loope
into
ljmp
divl
rcrl
mov
lods
xchg
sti
negb
dec
es
js
lock
std
jle
fwait
jnp
sbb
int
mov
inc
sub
and
dec
cmp
orl
aad
sti
lea
jns
mov
jno
aad
and
enter
mov
loopne
jl
cmp
mov
mov
mov
into
add
lahf
outsb
jbe
ljmp
sti
daa
jg
pusha
adc
int
es
sub
sbb
jle
rol
pushf
xchg
test
movsb
stos
out
mov
dec
xor
fwait
push
pop
or
jns
ja
sub
mov
sbb
pusha
ljmp
std
aam
leave
cmp
add
xchg
ficoms
pop
nop
arpl
dec
mov
xchg
out
sbb
aaa
jmp
ret
adc
inc
cmp
in
sbb
ljmp
inc
push
fdivr
jo
pop
jb
lods
pop
sub
dec
sbb
and
int
pusha
movsl
jp
push
dec
or
or
or
test
push
out
das
jbe
stos
xchg
test
jnp
aaa
dec
mov
lcall
mov
data16
cli
and
nop
daa
cld
and
sub
jle
xchg
pop
sub
in
out
ja
faddl
imul
mov
pop
call
fwait
mov
pop
pop
gs
add
mov
js
sbb
popf
add
movl
punpcklbw
sub
test
neg
and
push
push
pop
stc
or
test
fstp
jecxz
out
jg
mov
xchg
fldenv
rcll
out
test
cwtl
leave
imul
adc
popa
lcall
dec
inc
pop
dec
leave
dec
je
cmc
mov
mov
hlt
mov
test
gs
mov
or
pop
xor
adc
aad
orl
sarb
fsubrl
hlt
icebp
dec
xchg
ficomps
mov
cmp
push
dec
mov
add
test
dec
testb
sarl
aad
xchg
shrl
xor
fcmovu
xor
add
inc
pop
rcll
sbb
sub
ret
pop
mov
divl
xlat
ret
push
in
loopne
jmp
pushf
ljmp
rcrl
fisubl
push
js
or
fdivrp
jmp
inc
and
in
push
addr16
push
adc
and
add
stos
sbb
aaa
insb
or
out
icebp
pop
idivl
and
imul
in
mov
push
push
or
aad
adc
inc
or
pop
testb
rorl
cli
loopne
add
adc
xor
sti
faddl
push
pop
lret
jle
adc
cwtl
out
xchg
daa
xchg
xchg
aaa
mov
aaa
mov
mov
gs
sti
outsb
push
add
shlb
mov
cmpsb
hlt
cmpsl
dec
xchg
in
inc
adcb
jmp
and
mov
leave
repz
or
lea
ss
add
arpl
add
movsl
loop
repnz
add
inc
fstpt
add
inc
jp
dec
xor
cmp
push
repz
ds
pop
fcoms
adc
aad
add
push
xor
sbb
in
addl
jle
shr
cmp
movsb
sarl
mov
shrb
xchg
ret
push
adc
mov
xchg
sqrtps
xchg
popa
jp
mov
jl
dec
test
push
pop
and
insb
mov
bound
xor
jbe
sub
jnp
rcl
sub
sbb
popa
aas
movsb
imul
inc
xchg
fs
pop
pop
push
and
mov
mov
jle
repnz
dec
or
popa
mov
hlt
fidivs
adc
shl
ret
xor
mov
lods
dec
mov
pop
and
mov
mov
movsl
shl
mov
jmp
mov
jb
lds
insl
bnd
addb
adc
jnp
pusha
pusha
mov
adc
xchg
fmuls
sbb
mov
and
pushf
int3
repnz
push
testb
adc
or
dec
orl
ficoms
sarb
outsb
addb
mov
stos
or
or
jg,pt
shl
orl
movb
in
in
out
sub
xchg
popf
mov
loopne
loope
mov
and
or
mov
dec
daa
lret
ret
jbe
fwait
jnp
jmp
stos
stc
lret
arpl
pop
sbb
jno
adc
ret
aad
inc
aas
repnz
pop
xor
in
dec
in
jno
roll
mov
mov
shlb
sbb
xor
iret
xorl
pop
xchg
imulb
jnp
xchg
ljmp
out
test
xchg
mov
hlt
and
rep
push
outsb
mov
in
iret
mov
xchg
xchg
xor
lahf
stos
test
push
xlat
pop
bound
lds
sub
add
dec
ss
add
dec
arpl
cmp
pop
pushf
jno
mov
out
jle
stos
insl
aas
out
xchg
xor
fcmovnb
imull
jbe
js
std
xchg
mov
mov
mov
data16
xchg
and
cmp
inc
xchg
arpl
arpl
ljmp
and
ljmp
icebp
xor
adc
icebp
lds
fidivs
nop
and
add
sub
iret
pop
pop
pop
mov
xchg
adc
pushf
cmp
js
lock
test
clc
je
dec
pop
mov
std
cmp
add
add
in
and
loopne
jle
inc
inc
mov
push
cmp
pop
and
xchg
fwait
das
int
sar
add
add
subb
repnz
push
js
or
mov
add
cmpsb
out
leave
out
pusha
mov
movb
xor
adc
test
lcall
mov
shlb
orl
lock
ret
les
mov
fistps
daa
and
jns
test
addl
lcall
dec
lds
loope
mov
bound
xchg
call
and
loope
sub
mov
jae
stc
cmpsb
mov
mov
inc
pop
rcrb
and
push
adc
or
fldl
ds
dec
jp
mov
pop
dec
adc
add
fists
lret
pop
aaa
pop
and
xlat
cmp
test
test
pop
lret
loope
mov
cmp
shrl
cmp
cs
push
aam
lret
cwtl
fidivl
ljmp
cmpsl
les
inc
jg
cltd
adc
adc
aad
shlb
xchg
iret
les
data16
pop
ret
and
into
jmp
lea
mov
loopne
dec
cmpsw
fimuls
xlat
and
mov
nop
out
mov
fs
adc
movsb
jp
cmp
pop
mov
push
xchg
stc
sub
mov
enter
xor
pop
fs
jne
mov
nop
sub
shl
xchg
push
or
mov
or
test
lock
sar
mov
mov
and
jl
in
sbb
mov
or
jl
sar
mov
sarl
sbb
lahf
sub
call
sbb
sar
sub
je
loopne
stc
sbb
mov
add
shl
addr16
mov
add
shlb
test
ret
cmpl
fldl
cltd
push
lret
mov
hlt
mov
add
push
xchg
pop
push
jl
mov
push
js
rcrl
imul
add
or
xor
outsl
loop
sbb
imul
add
loop
mov
inc
cmp
aas
adc
mov
mov
int
pop
test
out
adc
daa
adc
cs
inc
in
sbb
inc
adcl
push
jmp
add
sbb
popf
cmp
xorl
pop
jmp
mov
ja
cmc
add
push
xor
mov
sbb
sub
inc
jecxz
sbb
jecxz
mov
pop
in
pop
mov
negb
xor
es
jl
cltd
pop
xor
in
outsl
mov
jne
ds
push
ja
cmpsl
cwtl
adc
int3
iret
lcall
repnz
es
mov
jp
pop
mov
repz
out
pusha
out
ret
mull
test
fbstp
cli
in
es
xchg
in
out
aas
icebp
mov
inc
lret
imul
jg
hlt
add
test
inc
in
repz
mov
jl
fstpt
dec
push
dec
sbb
ds
shrl
cs
das
xchg
pushf
push
imull
int
inc
ficoms
aaa
sbb
out
out
mov
xor
popa
and
pop
adc
inc
dec
aas
test
or
push
popa
cmpsl
sub
lahf
lcall
addr16
or
pop
mov
adc
js
pop
aad
stc
sub
push
and
inc
sahf
ja
nop
fnstsw
scas
mov
xchg
mov
xchg
fdivrl
aaa
call
mov
dec
and
fcompl
dec
jmp
push
mov
mov
push
aas
inc
repnz
pusha
adc
lds
inc
clc
mov
enter
mov
imul
roll
ss
or
push
adc
jo
ja
or
add
sbb
pop
inc
dec
scas
sub
addr16
xchg
ljmp
sti
inc
jbe
stc
or
test
mov
mov
enter
leave
in
and
in
mov
cmp
dec
lods
scas
pop
sub
jo
mov
mov
repnz
call
add
mov
clc
fcmovnbe
xor
stos
aas
pop
sbb
into
dec
push
cltd
inc
or
sbbb
stos
push
hlt
push
adc
stos
data16
mov
push
das
aam
call
sbb
lds
push
ljmp
cmp
ljmp
lahf
aad
es
mov
sub
inc
push
sti
daa
push
cmp
std
pop
inc
shr
pop
cwtl
lods
cmp
fdivl
push
jbe
push
dec
xchg
push
iret
test
dec
ljmp
xchg
popf
js
jne
dec
aam
push
xor
sti
jne
les
mov
rclb
push
daa
and
adc
out
xchg
pop
fsts
pop
jnp
jp
aad
xor
pop
in
dec
inc
pop
pop
pop
sti
xor
xchg
loop
imul
xchg
rorl
adc
and
bound
jns
hlt
mov
xor
xchg
out
jns
pop
dec
dec
stos
inc
fistps
mov
out
xor
repz
adc
in
jo
fcomps
push
or
in
in
outsb
cmp
ljmp
ss
nop
add
push
mov
sub
pop
xchg
das
faddl
lea
adc
daa
mov
and
arpl
orb
jmp
dec
add
cmp
sbb
and
cmp
jg
lcall
inc
mov
movsb
mov
xchg
sbb
xor
gs
sub
mov
inc
sbb
out
icebp
mulb
fs
idivb
popa
in
push
xchg
mov
sbb
inc
or
xchg
xchg
fwait
out
mov
pop
in
jbe
lods
movsl
icebp
push
ljmp
mov
lock
sarb
jns
jnp
cmp
xchg
or
pop
pop
ljmp
rcr
adcl
arpl
sbb
pop
lods
and
jl
orb
pop
mov
stc
or
inc
adc
movsb
lds
aaa
rorl
and
mull
xor
rcrl
sbbl
testb
push
js
mov
sbb
psubsw
in
jg
xor
push
pop
clc
in
fsub
andl
or
aaa
jle
rcll
mov
stc
data16
pop
cld
pop
pop
scas
pop
shrl
adc
test
sub
mov
xchg
mov
test
pop
mov
lods
mov
sbbl
outsl
dec
aas
outsl
mov
ss
cld
loope
scas
notl
pushf
fmull
jp
xor
cmpsb
lret
cwtl
xchg
xchg
icebp
mov
push
sbb
pop
iret
sbb
sbb
pop
sbb
mov
push
ds
mov
push
add
and
fistpll
mov
cli
jmp
lock
iret
cmpsb
dec
ret
xor
xor
inc
adc
mov
xchg
cs
sti
popa
cmp
mov
ss
leave
test
shlb
jbe
pusha
icebp
out
sub
xchg
movsl
rclb
jecxz
ds
fcmovnu
or
sub
sahf
das
movsl
pop
push
mov
hlt
add
mov
and
in
jmp
hlt
pop
or
cli
out
cwtl
dec
jb
test
adc
popa
mov
scas
fs
int3
xchg
inc
pop
lcall
push
push
movsb
and
jo
test
outsl
xchg
in
aad
cmp
fnstenv
cwtl
pop
jg
stc
cmpsb
and
out
fs
in
mov
xchg
pop
and
and
push
cmpsb
mov
cmp
cltd
fcomi
add
les
sub
mov
sub
xor
mov
daa
inc
divl
outsb
add
adc
pop
pop
pushf
mov
in
push
cli
gs
cli
pop
jmp
loopne
push
and
push
or
in
inc
rorb
clc
jge
mov
sub
or
add
xchg
or
scas
jae
idivb
inc
repnz
xchg
sti
push
push
push
inc
bound
mov
and
fisttpll
xor
xchg
shrl
jmp
jg
fwait
cld
arpl
add
adc
icebp
mov
cltd
fisubrs
pop
xor
rorb
mul
imul
push
mov
cmpsl
cmpsb
xchg
fstpt
xchg
mov
pop
shll
inc
test
stos
loope
pop
xlat
pop
cs
push
jmp
pop
icebp
cwtl
push
aaa
pop
jecxz
fsubl
mov
js
dec
outsb
js
mov
and
das
stos
fistps
lcall
lods
pop
push
jo
aas
pushf
push
mov
sahf
xor
test
out
shl
xor
push
inc
push
scas
outsl
dec
ret
call
rorl
jae
jbe
push
pop
insl
xchg
cmp
mov
and
and
pop
arpl
inc
jb
insb
xchg
xchg
popa
push
or
mov
stos
aam
lock
clc
mov
imul
lds
xor
jno
sbb
repnz
push
adc
and
in
mov
mov
test
push
aaa
ret
pushf
cld
test
enter
add
popa
mov
dec
add
jmp
jbe
fisubrs
inc
mov
fisubrs
fisubs
pop
push
inc
xchg
mov
jb
cmp
mov
sub
mov
sbb
sbbb
jg
es
jnp
inc
addr16
fcoms
mov
out
push
push
movsb
fwait
movsl
xchg
loop
fs
ja
divb
add
lods
out
call
and
dec
jb,pt
jae
js
xchg
addr16
xchg
mov
xor
test
pop
imul
sub
push
lock
dec
dec
in
xor
mov
jno
nop
in
pop
cmp
sarl
jecxz
cmp
dec
scas
fdivr
jg
adc
xor
in
cmp
cmpsb
ds
jb
ja
scas
mov
sbb
adc
stc
adc
pop
lea
jmp
xchg
xor
adc
insb
and
cli
push
aam
xor
xor
or
stos
mov
sbb
sti
cmp
sub
aaa
add
xor
jns
imul
aad
or
xchg
push
jp
mov
and
fwait
pop
mov
push
mulb
fs
mov
lahf
sbb
ljmp
jnp
movsb
mov
push
mov
mov
mov
js
pop
mov
cmc
sub
xlat
icebp
push
gs
lahf
pop
jnp
mov
push
adc
imul
ret
sub
dec
pop
lcall
test
xor
adc
cmp
cltd
mov
aam
fiaddl
rcr
outsb
stos
out
test
adc
pop
hlt
decb
add
out
aad
iret
jge
adc
loop
stc
clc
pushf
mov
dec
pushf
out
mov
cld
xlat
inc
int
fwait
rcl
shlb
bound
xor
jbe
jae
mov
in
add
idivl
je
dec
inc
test
xchg
cmpsb
cmp
hlt
pop
roll
and
insl
mov
fsubl
dec
sub
or
mov
sub
mov
xchg
jnp
push
jp
push
and
xor
mov
mov
sbb
or
flds
mov
int
cmp
jle
fwait
xchg
dec
mov
popf
jns
pop
rcll
adc
call
cmpsl
data16
les
ljmp
sbb
jmp
push
popa
and
sahf
sub
jnp
popf
cltd
adc
out
mov
repz
pop
jo
inc
sbb
xchg
mov
and
insb
fsubs
fcmovbe
mov
sub
clc
loop
cmpsb
testl
cwtl
dec
sub
ret
pop
and
xor
scas
mov
add
jle
dec
in
jno
inc
js
stos
lahf
hlt
xor
imul
roll
shlb
int
pop
gs
adc
mov
in
mov
cmp
movsl
outsb
add
xchg
scas
add
icebp
stos
xlat
frstor
sub
addr16
or
xor
lods
or
stos
and
mov
es
adc
in
xchg
or
daa
std
mov
mov
fmul
sahf
rcrb
jle
pop
test
ljmp
dec
ret
sub
mov
sahf
std
mov
inc
mov
jo
daa
loopne
jbe
lds
mov
add
pop
jecxz
cmpsl
cltd
jge
xlat
mov
sub
sahf
mov
out
adc
jne
fdivr
in
in
into
js
mov
fldlg2
pop
cmp
inc
pop
orb
lea
in
or
pop
imul
sub
jae
adc
inc
jge
sbb
test
push
mov
and
xchg
mov
xchg
rcrl
add
aam
adc
dec
push
xchg
and
xor
pop
je
lock
jns
cmp
add
imul
jl
nop
fsubp
cmp
pop
ljmp
sub
in
scas
and
or
repnz
lods
cmp
push
inc
lret
pop
jno
imull
push
scas
cwtl
jae
mov
mov
cltd
adc
insl
fisubrs
sub
icebp
lret
mov
subl
pop
cmp
testl
call
xchg
add
sub
or
ds
out
sub
xor
xor
js
ja
aas
push
popf
push
loope
pop
inc
fs
mov
cmp
or
fcmovu
and
out
flds
mov
cmc
xlat
sub
and
jo
adc
bound
sti
sbb
pop
popl
addb
inc
notb
add
mov
mov
loopne
dec
data16
fisttpll
cmp
cmc
lcall
xor
iret
arpl
gs
sub
pop
pop
sub
mov
scas
loop
xchg
out
pop
xchg
mov
movsl
insb
ffreep
pusha
rorb
xchg
jl
dec
mov
cmp
fwait
jp
int3
ds
or
jmp
and
fidivrs
mov
rep
sbb
aam
pop
jne
add
pop
imul
test
leave
jmp
xor
loop
inc
mov
ret
pop
fwait
in
bound
xorb
dec
mov
fcmovu
sbb
pop
xchg
pushf
std
push
sete
cmc
and
or
jbe
inc
pop
push
mov
add
in
call
pop
jp
les
pop
mov
jmp
les
pusha
test
lods
das
arpl
push
sbb
dec
sahf
jno
mov
mov
jmp
sub
hlt
sub
jecxz
add
mov
out
jae
sub
add
dec
sar
fcoms
push
jae
je
test
js
pop
lods
call
loopne
shll
dec
ja
xor
ror
dec
movsl
mov
mov
xor
and
sub
jmp
gs
mov
sti
std
into
mov
addr16
inc
xor
subl
stos
add
sub
mov
dec
movsb
repz
mov
mov
jle
clc
into
rcrl
push
in
sbb
pop
pusha
clc
orb
mov
mov
aas
arpl
adc
icebp
or
nop
cli
call
mov
or
pop
cmp
insl
out
or
incl
and
mov
in
cli
mov
mov
sti
adc
push
aaa
cmp
lods
fidivl
sti
mov
lcall
imul
hlt
sbb
and
enter
jne
sub
lret
popf
es
lods
fcoml
subl
ficoms
mov
push
cmp
jb
ret
inc
push
push
lcall
jbe
mov
push
xchg
jae
sti
pop
mov
shlb
lock
mov
test
add
xor
jbe
sarl
mov
xchg
movsl
cmp
cmpsb
imul
dec
inc
inc
cmp
fwait
mov
mov
in
rcll
cs
pushf
fsubp
mov
inc
int3
lret
or
sarb
adc
insb
mov
fadd
pop
mov
jle
sub
mov
cmp
popf
es
mull
incb
jne
ret
daa
pop
out
in
outsl
hlt
dec
fsubrp
popf
imul
jl
and
stos
cmc
test
jge
mov
icebp
sahf
mov
int3
out
pop
imul
inc
jge
lea
cmc
in
sub
es
in
mov
cmp
inc
add
test
fsub
inc
jo
cmp
das
lea
sub
push
dec
lds
nop
xchg
lods
fcoms
jp
dec
xor
test
mov
mov
std
lods
adc
lock
shlb
sbb
scas
out
mov
outsl
mov
or
fidivrl
jnp
dec
sub
imul
mov
jp
push
add
jge
push
test
test
fdivs
shl
push
cmp
cltd
sbb
mov
or
cmc
outsl
and
jno
mov
scas
repnz
add
push
mov
mov
divb
mov
lretw
sbb
outsb
mov
test
and
ds
enter
inc
adc
and
lods
push
adc
mov
stos
sub
adc
or
in
lods
ss
cwtl
fcmovnu
xchg
in
fadds
pusha
cmp
insl
sbb
sub
jecxz
pop
sbb
sub
lock
adc
ja
lock
cs
mov
fstpl
outsl
aad
add
fmuls
stc
notb
adcl
clc
mov
sub
lds
cmp
cmp
mov
mov
sbb
jae
sbb
insl
adc
sahf
fstpl
popa
out
andb
ret
sub
pop
fdiv
loop
jmp
jno
imulb
inc
imul
divb
fs
bnd
mov
cwtl
pop
dec
or
data16
fs
test
jge
cmc
and
cmpsb
test
mov
xchg
mov
xor
push
or
dec
xchg
and
lcall
push
loopne
and
push
ret
aaa
jbe
push
aad
cmp
jmp
xlat
mov
mov
add
jl
push
and
in
jnp
iret
push
pop
popf
orl
push
mov
or
lret
jno
adc
fnstsw
leave
or
jecxz
test
sbb
cmpsb
mov
xchg
add
pop
shl
jle
sub
jo
cmp
inc
cld
out
pushf
aam
std
mov
leave
inc
adc
mov
jne
lea
lods
pusha
jecxz
mov
sti
pop
fs
les
rcrb
les
in
sbbl
pop
ljmp
je
pop
xchg
imul
push
fwait
pop
in
insl
addr16
pop
xchg
imul
fistl
ror
fdivr
movsl
or
enter
fnstsw
mov
xchg
jno
sub
mov
push
mov
or
dec
aas
adc
cwtl
fistpll
adcl
cmp
mov
lret
loope
rcl
cltd
ficoms
mov
jle
repnz
adc
add
cli
mov
mov
mov
mov
ja
cld
outsb
mov
test
enter
cltd
mov
jbe
outsl
stc
dec
addl
incb
stos
cld
inc
jno
inc
push
xchg
cmp
jns
mov
mov
cs
mov
movntq
inc
ds
in
push
rorl
sti
stos
ret
gs
dec
or
push
inc
jmp
cmovs
pop
cmp
mov
test
dec
inc
fisttps
inc
sbb
sub
fdivp
push
jae
ds
nop
stc
ret
into
das
jbe
out
push
fstl
dec
mov
adc
jecxz
data16
sub
ljmp
mov
sbb
push
and
not
cmpsb
xor
mov
sbb
sbb
add
mov
jle
jo
int3
int3
loopne,pn
mov
roll
push
test
jne
dec
dec
sub
mov
push
add
testb
les
outsl
iret
push
ljmp
pop
pop
mov
add
xchg
pop
add
push
jmp
into
push
orb
mov
outsb
add
aaa
push
cmc
test
fcmovnu
push
pop
add
dec
sub
int3
stos
ss
jmp
aaa
cli
lods
dec
dec
aam
loop
xor
lock
lret
add
out
shll
aaa
gs
pextrw
mov
addr16
outsl
iret
cmpl
xchg
jl
mov
sti
aam
mov
ret
xchg
leave
clc
dec
lock
rcrl
gs
jp
and
lret
roll
xor
mov
loop
mov
cmc
imull
mov
test
inc
fcompl
mov
jmp
xchg
and
shl
sbb
inc
and
xchg
add
testb
inc
fwait
sub
xchg
loopne
ljmp
mov
fbld
xchg
mov
pop
mul
lea
cli
int
decl
pop
ja
das
inc
mov
pop
jecxz
push
movsb
sub
jno
rorl
loop
scas
or
xchg
pop
rol
imul
pushf
push
and
xlat
push
ds
dec
sub
bound
shlb
push
cwtl
fcoml
adc
inc
mov
xor
sub
outsb
mov
cmp
mov
lds
repnz
xchg
setns
mov
jns
sub
push
fdivrs
nop
mov
xchg
jne
sbb
insl
xor
ret
lods
jle
inc
inc
fsubrl
and
testl
data16
int
xor
outsb
pop
rcrb
inc
in
cli
mov
push
ret
test
sub
in
cmp
enter
rcl
push
and
fcoml
fildll
sahf
leave
mov
dec
mov
mov
rcl
cld
loope
or
fnstenv
pop
sbb
inc
xor
mov
pop
cld
aaa
xlat
xchg
mov
fidivs
cltd
inc
aad
add
jg
push
cmp
dec
lahf
insb
lea
xor
lcall
outsb
pop
imul
stc
jg
out
cmp
add
push
push
das
mov
dec
xor
cmpsl
add
add
ja
cmpsl
xchg
cmpsl
ljmp
add
jo
mov
mov
xor
repz
in
cmp
add
lret
pop
std
sbb
cmpsb
jmp
push
lret
sub
push
ficoms
stc
inc
sub
inc
adc
scas
into
sub
insl
push
out
inc
sbb
cld
or
or
pop
sbb
pop
sub
mov
jmp
aas
lret
movsl
add
cltd
and
jmp
push
xor
loopne
cld
inc
sub
cmp
mov
jo
add
or
mov
jmp
add
out
xchg
rol
xchg
imul
pusha
jno
and
pusha
ljmp
movsb
dec
dec
pushf
outsl
mov
lret
push
popf
adc
push
or
inc
loop
mov
push
fs
pop
testl
jecxz
dec
out
pop
hlt
iret
cmp
mov
xchg
or
pushf
aaa
inc
jb
addr16
cmc
in
sahf
daa
jb
les
lds
mov
sub
mov
or
insl
imul
loop
or
cwtd
rolb
pop
out
mov
dec
push
sub
xchg
cltd
ds
lahf
out
lahf
and
nop
jbe
mov
mov
outsb
pop
ja
les
arpl
ss
dec
inc
push
sub
aam
jp
pop
adc
sub
sti
add
cmpb
sti
jle
xchg
mov
sub
int3
fldcw
jmp
test
lea
subb
fs
mov
jbe
mov
std
sbb
lds
sbb
dec
jne
add
lds
cmpsl
rol
sahf
mov
jg
xchg
jp
cmp
loop
ret
sbb
shll
xor
xor
push
sub
mov
loop
call
data16
repnz
stc
fisubrl
jmp
dec
sub
dec
inc
enter
pop
ja
mov
add
insl
fistpll
xor
jae
mov
pop
pop
pushf
cmp
sub
or
aam
addb
rclb
and
pop
push
test
xor
mov
fsubrs
adc
dec
pop
test
inc
add
sub
jne
sbb
cmpl
cmp
mov
push
sbb
adc
leave
mov
and
sbb
jb
jnp
mov
stc
mov
std
mov
mov
jbe
shll
pop
sub
push
fs
mov
lock
adc
jl
test
out
adc
cmc
add
and
inc
test
dec
ss
js
or
loope
mov
ja
pop
cmc
jp
in
push
sub
xor
mov
repnz
idivl
insb
pop
repz
movl
mov
adc
inc
dec
leave
cmp
lret
pop
sahf
leave
pop
jae
push
ja
scas
das
push
ret
mov
cmp
popa
lahf
add
movsl
pop
pop
dec
xor
out
xor
inc
movsb
fcom
adc
shll
inc
pop
jno
and
fadd
fidivl
imul
cmc
xchg
shll
mov
mov
fs
adc
jecxz
es
stc
sbb
inc
push
fidivl
loope
pop
ds
rclb
xor
insl
inc
popf
icebp
je
sbb
dec
rclb
aaa
push
mov
pop
int3
jb
inc
xor
lcall
dec
jae
aas
in
aam
fldl
push
popa
and
sub
pop
sub
add
ret
test
js
or
mov
cltd
insl
lock
es
into
cmp
movsl
outsb
and
lahf
add
mov
mov
xor
and
movsl
dec
lds
inc
fstps
adc
push
mov
divb
mov
sahf
push
mov
mov
jp
std
fldl
jnp
mov
sub
cmc
mov
fsubrl
push
lds
add
add
push
and
sub
sub
mov
jo
push
pop
mov
or
push
jl
push
popf
push
repnz
fwait
mov
adc
dec
adc
stos
lods
test
xor
aad
rorl
mov
or
ret
fstpt
movsb
push
lret
dec
flds
cmp
es
ljmp
push
fisttpll
mov
ljmp
cmpsl
sarl
shrl
fidivrs
mov
aad
aaa
test
fwait
gs
lcall
cltd
cmp
ficompl
decb
in
xchg
fldt
call
and
mov
pop
notb
dec
or
mov
adc
inc
mov
xchg
xor
loop
ret
push
icebp
jle
gs
lods
daa
or
pop
or
inc
mov
cmp
cltd
cli
sti
adc
jl
or
sub
dec
xchg
andb
xor
push
cmp
xchg
addl
loope
ljmp
sahf
xor
add
lds
test
pushl
scas
icebp
data16
cli
stos
adc
sti
mov
rolb
cmp
push
jecxz
aam
movsb
mov
cmp
or
out
pop
lock
cmp
outsb
fstpt
cmpb
out
sub
call
xor
mov
xor
adc
or
out
xchg
ds
mov
jns
loopne
insb
leave
dec
sahf
movsb
pop
std
dec
jge
mov
pusha
pushf
pop
addr16
mov
ds
test
xor
jbe
fisubs
icebp
push
mov
stc
xchg
xchg
cltd
adc
mov
pusha
mov
lds
jl,pn
pop
inc
and
incb
cwtl
xchg
fs
loopne
nop
or
sti
adc
mov
call
aas
scas
pop
dec
dec
lahf
dec
hlt
leave
xchg
movups
fisubrs
xor
cmpsb
je
hlt
jnp
scas
pop
int
movsl
pop
push
lret
push
xor
stos
mov
add
adc
leave
popa
shl
xchg
stos
mov
mov
push
xchg
mov
test
fbld
das
add
sbb
rcll
adc
mov
jnp
call
jne
push
subb
add
mov
shlb
imul
lret
sar
cltd
push
jb
sub
scas
inc
push
or
aas
lret
lods
lcall
and
call
cld
ss
in
mov
loop
in
push
push
nop
addb
in
adc
mov
inc
imul
cmp
xchg
lods
fs
xor
and
les
xchg
and
dec
or
sbb
xor
inc
sub
sbb
xchg
sarb
inc
and
ds
fcomps
jb
push
ret
lea
es
test
lret
pushf
sbb
popf
pushf
pushf
mov
mov
bound
sbb
mov
dec
mov
jg
mov
mov
xchg
test
icebp
mov
pop
lret
sti
jp
xchg
xchg
mov
rol
divb
jns
mov
pop
cmc
sahf
fstpt
cmp
lea
and
les
or
ja
daa
gs
xchg
mov
cltd
pop
sbb
ss
push
addr16
mov
jle
shlb
ret
lret
fistpl
ret
xor
xor
inc
repz
jmp
pop
ss
aaa
movsb
out
test
mov
mov
fidivrl
loopne
leave
push
push
cmp
adc
cwtl
movsl
les
mov
jp
inc
push
jmp
repnz
fsubrl
stc
cmp
dec
aas
mov
mov
lea
jne
or
pop
xchg
movsb
fnsave
aaa
inc
jae
into
daa
or
mov
imul
pop
repz
stc
outsb
lret
mov
rorb
aam
stc
insb
xor
mov
in
push
xor
int
sub
dec
int3
xor
aas
xchg
add
pop
pop
mov
push
repz
mov
sbb
or
jmp
and
dec
or
pop
add
movsl
test
and
dec
pop
or
push
jnp
mov
push
xor
xlat
sbb
pop
cmp
cld
add
fisubrl
dec
cmc
mov
jae
sbb
test
push
dec
pop
pop
sarl
arpl
inc
lcall
xor
stc
push
adc
in
mov
xchg
or
and
cli
pushf
loopne
push
mov
jnp
adc
dec
xor
insb
pop
mov
aad
aam
in
mov
bound
and
int3
mov
mov
dec
frndint
sti
mov
stos
cld
dec
or
mov
inc
cmp
adc
xor
dec
call
ret
inc
iret
lea
gs
mov
test
je
mov
gs
mov
mov
adc
stos
adc
movb
fstps
xor
loop
nop
lret
jb
inc
sbb
popa
dec
test
sub
jg
insb
lock
hlt
sbb
adc
pop
xor
orl
in
pop
mov
movsl
pop
jb
inc
das
js
mulb
mov
jae
dec
cmpsl
stc
pushf
adc
mov
clc
and
lahf
cmp
inc
into
dec
add
mov
popf
je
sub
ljmp
and
aas
mov
popa
bound
inc
push
into
repnz
popa
movsl
movsl
and
mov
inc
mov
fs
adc
push
dec
leave
stos
pop
jmp
mov
jl,pt
inc
mov
mov
push
adc
cmp
shlb
push
pop
jnp
sub
adc
push
repnz
iret
mov
loope
push
iret
jae
rcrb
mov
or
scas
jne
dec
pop
insl
inc
das
sti
mov
push
das
mov
mov
xor
inc
cwtl
xor
cli
dec
icebp
xchg
pop
lock
nop
fdivrp
pop
test
or
addl
scas
sub
xchg
sub
sti
push
jae
flds
subb
mov
jnp
cmp
orb
popf
pusha
fnstsw
fstps
dec
cmc
xchg
inc
pop
ja
push
jmp
pop
inc
xchg
loope
xchg
push
and
lods
sbb
inc
pusha
and
nop
jbe
fistpll
movsb
mov
pop
das
adc
rorb
add
cmpl
add
mov
nop
scas
jecxz
pop
and
cmpsb
stc
mov
ljmp
sahf
cmp
es
xchg
xor
stos
sub
rorl
dec
aas
mov
jb
icebp
or
cmpsl
je
xor
clc
mulb
xchg
inc
leave
gs
inc
pop
or
xchg
add
movsl
addr16
insl
mull
adc
scas
es
pop
add
mov
mov
outsb
mov
adc
mov
gs
ret
mov
xchg
mov
rolb
aas
xor
cld
fs
fdivl
repz
mov
shll
add
fistpl
pop
lods
cwtl
adc
movsl
cmpsb
adc
fsub
dec
shrl
fs
stc
jg
sahf
or
sbb
pop
in
mov
xchg
pop
mov
jnp
lods
cwtl
dec
clc
js
cld
inc
xor
imul
lcall
pushf
push
mov
shll
into
or
clc
push
in
add
adc
or
movsl
xor
xorl
imul
pusha
push
addr16
inc
scas
stos
cmp
or
xor
xchg
xchg
sub
stc
mov
inc
push
lds
xchg
pushf
out
sub
inc
pop
or
cmpsl
push
jnp
fsts
push
push
push
in
imul
pop
mov
out
hlt
cmp
xlat
rcll
jo
jne
pop
std
into
and
sbb
leave
test
sbb
adc
int3
inc
ss
lahf
lret
mov
add
dec
jne
mov
scas
outsl
scas
inc
xchg
cmpsl
rcll
mov
addr16
stos
shl
sub
out
push
daa
inc
pop
mov
pop
xchg
out
cmp
cmp
leave
mov
or
add
int3
call
inc
leave
call
mov
fdivrp
ss
xchg
mov
shrl
or
and
mov
mov
mov
nop
cli
sti
mov
push
mov
rcr
lods
lahf
hlt
inc
add
xchg
rcr
jl
stc
xchg
mov
out
in
imul
cltd
sbb
insb
xor
adc
jne
fisttpll
lods
rcll
pop
outsl
and
push
out
mov
jae
fs
dec
push
ds
xchg
fs
cli
jae
ljmp
sbb
sbb
pop
scas
movsl
ret
jnp
mov
loopne
movsl
ret
inc
jp
jb
or
xbegin
sti
gs
sub
xchg
aas
into
push
sub
jmp
test
add
stos
xor
cmp
sub
fnsave
mov
roll
das
mov
mov
dec
jle
mov
push
ljmp
xchg
cmp
shll
or
xchg
shll
shl
fdivr
jle
scas
in
adc
xor
repnz
fsubs
outsb
dec
jl
in
les
mov
jg
imul
jb
sti
xchg
or
push
ss
cmpsb
in
add
les
cmp
fstpt
mov
inc
lret
test
js
dec
sbbb
test
out
xchg
imul
das
xchg
pop
lret
pop
enter
fwait
xor
push
jle
lret
ja
and
dec
fwait
loopne
jg
insb
iret
fbld
jbe
adc
mov
sarl
cld
insl
jle
jae
shll
fsub
push
push
mov
mov
call
test
test
ficoml
popa
or
aaa
mov
ljmp
cltd
test
shll
jo
out
in
push
pop
jns
xchg
pop
cli
jo
out
push
leave
pop
insl
aad
pushf
iret
mov
dec
jno
or
nopl
sbb
out
adc
loopne
mov
xor
xchg
cmp
mov
lea
test
cmpsb
test
jecxz
pop
sub
inc
pop
lea
xor
jecxz
clc
inc
xchg
sub
pop
push
std
xorl
lods
inc
dec
mov
les
inc
push
je
or
popf
sbb
dec
cmp
or
rcr
pop
cmpsb
fmull
cltd
out
or
xlat
icebp
aad
sbb
ficompl
sub
cmp
mov
inc
cli
pop
sub
aam
stc
and
fdivrl
test
ljmp
sub
popa
push
push
imul
jno
jp
or
sub
repz
in
bswap
sbb
leave
fbstp
sub
or
jmp
mov
jg
mov
dec
cli
add
mov
mov
jmp
rcrl
xlat
push
pop
cmp
add
mov
dec
adc
ds
sub
push
jbe
das
out
sbb
loop
xchg
repnz
push
xor
inc
loope
clc
int3
addb
cwtl
sub
dec
daa
or
lret
fstpl
addr16
or
int3
cmp
cmp
xchg
dec
pop
mov
jns
cmp
mov
add
inc
outsb
loopne
mov
xchg
sub
and
leave
test
fidivrl
into
push
test
dec
or
sub
sahf
rcrb
mov
and
sbb
push
and
xor
push
imul
mov
lcall
enter
dec
pop
mov
rcl
fdivrp
pop
int3
adcl
and
jp
add
and
mov
inc
cltd
sbb
jae
dec
sbb
insb
insl
add
arpl
push
aaa
pop
adc
lods
aaa
or
dec
fidivrs
xlat
xchg
cmp
pop
clc
mov
int3
pop
jae
loope
jnp
pop
mov
jl
mov
cmpsl
call
mov
test
inc
sahf
sub
fsub
jg
movb
add
pop
add
cltd
ljmp
popa
movswl
sbb
push
fisubrl
in
and
pop
xchg
in
stos
jecxz
leave
fwait
pop
bound
mov
call
ss
pop
mov
inc
iret
sub
mov
lock
imul
mov
sbb
insb
fxch
push
das
adc
inc
sub
pushf
adc
and
stc
lret
stos
push
mov
push
jp
add
pop
inc
push
and
jb
addl
test
mov
jp
in
sbb
add
mov
xor
std
rcrl
or
into
push
enter
add
mov
sbb
jbe
adc
push
jne
das
stc
mov
mov
and
and
rcr
and
arpl
mov
pop
cwtl
cmp
add
add
ss
jl
dec
rclb
and
xor
push
adc
push
push
sbb
xchg
cli
ret
je
sbb
imul
xorb
mov
fnstcw
xor
and
mov
cmp
or
xchg
and
adc
dec
sbb
ljmp
cmpb
stos
aad
shl
add
pop
bound
in
mov
clc
loop
mov
test
or
mov
aam
lods
pop
inc
or
testb
mov
int3
es
idivl
xorl
mov
cmp
cwtl
sbb
mov
sub
lahf
cmp
mov
leave
mov
ljmp
add
mov
out
push
mov
fcmovne
jo
in
lret
xchg
jbe
out
aad
jg
mov
push
cmc
aas
iret
sbb
iret
push
xor
aaa
inc
sub
sub
xchg
mov
rclb
loop
mov
cmpsl
dec
adc
add
out
lret
lock
fs
push
dec
fistpl
push
add
or
aad
jge
mov
out
lea
cmp
mov
or
ljmp
les
movb
jae
rcl
mov
dec
xor
jne
push
or
or
push
popa
rclb
jmp
push
enter
dec
into
repz
scas
lods
aam
test
js
fstpt
dec
mov
icebp
addb
fistps
pop
mov
push
sub
insl
sbb
rcl
shll
xlat
addr16
cwtl
cmp
out
out
shrl
stos
jns
dec
cltd
pop
gs
jnp
sar
pop
fcmove
cmp
shll
scas
mov
xor
pop
rcrb
imull
xor
pop
aaa
bound
dec
bound
mov
rcr
fdivl
fiaddl
mov
or
pop
or
ret
push
push
shl
and
negb
addr16
nop
lcall
sub
lahf
leave
xor
xlat
push
fildll
cmc
cli
rcll
ja
add
fs
inc
lock
xor
sub
cmp
jmp
inc
sbb
aad
test
out
shlb
scas
jbe
bound
je
inc
rcrb
out
pop
aaa
dec
std
in
xor
jecxz
jp
push
cwtl
pop
jl
repnz
in
cmp
adc
bswap
ret
test
movsl
adc
mov
jle
mov
xchg
aas
xor
mov
aad
jmp
inc
push
or
in
loop
jmp
dec
cltd
stos
cltd
push
addr16
out
mov
jle
mov
out
inc
fistpll
cmp
or
or
add
sub
movsb
adc
xor
filds
add
pop
push
jne
pushf
add
and
or
testb
fcmovb
add
pop
jb
mov
repz
adc
sub
test
xchg
pop
inc
xor
cmp
fnstcw
push
mov
sarb
mov
mov
pop
mov
dec
sbb
xor
or
add
in
jecxz
cmpb
push
jbe
sub
jb
mov
out
cmp
sbb
jno
rcl
jp
out
and
div
adc
jns
stc
inc
sarl
aaa
mov
into
push
mov
stos
pop
ret
popf
xchg
lret
or
ret
push
repz
ror
dec
fistl
pop
xor
and
ret
dec
mov
cmpsb
adc
in
push
cmpsl
xor
mov
dec
ljmp
lret
call
cmp
loope
xchg
cmp
sbb
fdivr
add
push
mov
and
mov
out
jae
cmpsl
lret
and
jns
jle
les
cld
outsb
out
jge
into
dec
push
adc
mov
cmpl
add
shrb
aaa
gs
xchg
cltd
mov
xor
scas
sub
mov
dec
pop
sbb
sbb
or
xor
fdiv
sub
sarl
sub
push
test
aad
add
roll
jecxz
rorl
lret
or
xchg
shlb
mov
xchg
dec
sbb
mov
popf
add
int
pop
pushf
mov
cmp
popa
jmp
mov
pop
pop
hlt
cmp
mov
int3
mov
add
hlt
cmc
outsb
loop
pop
and
sbb
xor
addr16
mov
and
jo
jo
scas
test
cmpsl
js
jo
stos
mov
loop
mov
sub
jno
movsl
enter
inc
push
loope
roll
lcall
outsb
jno
xchg
sbb
adc
jns
insl
mov
add
pop
rclb
cmp
mov
and
js
dec
shrl
movsb
addr16
sti
aas
dec
test
popa
dec
insl
ret
lret
push
dec
iret
sahf
pusha
add
xchg
leave
out
or
jg
dec
inc
jmp
add
dec
jb
push
dec
xchg
add
ds
fnstsw
icebp
lahf
pop
sbb
xor
xchg
cmp
xchg
int3
pop
mov
pop
mov
inc
sub
sbb
call
xchg
hlt
ljmp
and
jl
xchg
sub
mov
mov
mov
add
mov
arpl
mov
add
out
insl
mov
and
stos
adc
or
aas
movsl
jns
int
out
push
mov
inc
push
stos
dec
mov
and
daa
out
mov
pusha
icebp
pop
jge
ja
adc
mov
je
cld
cwtl
sbb
pop
cmp
push
xchg
outsb
adc
lret
enter
inc
add
lea
and
fwait
hlt
mov
imul
inc
cmp
jmp
lock
test
ja
out
pop
cmp
sarb
shlb
adc
pop
sub
or
pop
push
test
or
lea
cmpsb
sub
inc
fisttps
ret
adc
jno
xlat
inc
jbe
mov
sahf
fcompl
xchg
xor
xchg
push
test
mov
jbe
ljmp
sti
xchg
repz
jae
inc
jl
lcall
pop
sub
insb
loopne
fists
push
adc
notl
xchg
arpl
cld
fstpt
mov
pop
inc
lods
pusha
sbbb
in
into
pop
and
dec
pop
in
dec
jae
inc
mov
mov
rorb
jb
cld
pop
in
imul
mov
xor
sub
jno
shl
add
pop
xchg
mov
mov
push
in
dec
test
cmp
icebp
jne
mov
aaa
push
fs
cmp
hlt
or
lcall
or
push
push
jo
mov
outsb
push
pop
jg
cmpsb
inc
lds
lock
lock
or
jle
loope
mov
mov
movsb
test
mov
mov
dec
dec
pop
xor
je
xor
cltd
xchg
hlt
mov
loope
xor
xchg
ljmp
add
xor
decl
popa
add
inc
cltd
mov
xchg
rcrb
xor
arpl
pop
xchg
out
rolb
fisttps
xchg
add
cmpsl
mov
into
jl
add
movsl
std
pop
fcmovnu
pop
sbb
adc
mov
rorb
jg
and
out
inc
nop
adcl
pcmpeqw
into
mov
scas
lea
mov
push
mov
fdivrl
jmp
mov
lea
movsb
jns
imul
xor
jge
pop
stc
into
sub
pop
inc
inc
loop
lds
pop
shlb
cmp
dec
add
cs
mov
or
in
pop
sub
pusha
add
pop
ds
sub
lds
int3
nop
dec
xchg
rcll
mov
cld
jmp
cmp
push
pop
fucomip
mov
lcall
mov
mov
sub
fmulp
dec
clc
mov
add
push
rcrl
call
mov
cmp
in
iret
scas
and
bound
loopne
or
inc
jg
xor
jecxz
jecxz
push
inc
idiv
inc
mov
cmpsb
jg
sbb
sbb
xor
xlat
jne
dec
mov
rcrl
push
mov
sub
rclb
and
shl
mov
add
mov
xor
ficompl
pop
pop
rcll
mov
outsl
call
sbb
sub
xchg
dec
mov
sbb
xchg
cmp
push
or
sub
int3
ds
jns
sub
mov
lock
ja
adc
dec
sub
imul
mov
arpl
mov
sti
test
sbb
ds
push
lcall
cmpsl
orb
sbb
cwtl
sahf
mov
xchg
pop
sarb
add
mov
xor
jg
frstor
aas
mov
popa
jmp
orb
mov
mov
pop
pop
pop
addb
out
sub
in
adc
andl
pop
mov
gs
aas
inc
leave
test
push
xchg
jae
out
fwait
lahf
in
pop
push
mov
lods
sub
xor
push
pop
mov
adc
movsl
ret
cs
xor
or
jae
push
dec
je
or
sub
jno
out
xor
xlat
push
sbb
fsts
and
shrb
xchg
sahf
scas
daa
insb
dec
xchg
adc
call
insb
or
sub
jmp
cmp
insb
sub
xchg
fildl
mov
or
mov
mov
mov
pop
scas
adc
push
loopne
cmp
dec
sub
jg
adc
cld
gs
and
pop
and
mov
stos
jne
push
xchg
and
push
jle
fwait
mov
sbb
fildll
lods
fstpt
xlat
mov
aad
push
shl
dec
addr16
xchg
fdivrl
out
xlat
aaa
push
daa
lods
inc
mov
lds
sub
jb
jp
ds
push
bound
jnp
les
jo
sbb
sub
push
xchg
rorb
fs
in
xcrypt-cbc
cmpsl
adc
fsubrl
xor
inc
addb
jns
cmc
push
loop
sub
lea
push
jno
scas
pop
das
pusha
sbb
scas
test
es
sbb
loopne
pop
push
sahf
sub
pop
adc
dec
dec
or
jmp
and
lret
ds
es
lcall
fidivl
push
adc
insb
xor
mov
das
dec
dec
rolb
imul
shr
pop
xchg
or
aaa
adc
test
repnz
sub
mov
sar
xchg
fadds
jbe
xchg
dec
dec
jnp
jae
in
mov
outsl
lea
cwtl
mov
push
push
fdivs
outsl
jmp
fisubrs
sub
inc
push
ljmp
call
pop
mov
push
cmp
sub
sbb
add
push
dec
cmpsb
pop
add
scas
mov
test
cli
and
int
call
cltd
gs
sbb
sbb
int3
sbb
ja
fldl
ret
cmp
ss
lret
inc
xchg
fistl
add
sub
xor
adc
subl
pop
test
mov
mov
imull
dec
test
pusha
sub
icebp
dec
es
push
pop
lods
movsl
rcl
sbb
jae
push
lods
mov
loope
xor
mov
or
aas
enter
fstpl
mov
cmp
aaa
sahf
jno
dec
cli
push
mov
cmp
push
aas
xor
dec
ret
pop
hlt
fisttps
jo
adc
xchg
orl
jge
or
cld
push
lea
adcl
loopne
loopne
jo
cmp
mov
lahf
mov
sahf
xchg
pop
mov
stos
cmp
sbb
dec
sahf
ficoms
loop
cwtl
dec
fldl
std
lcall
sti
mov
mov
dec
mov
jp
dec
add
mov
lret
sbbb
pop
push
pusha
jnp
fxch
mov
out
hlt
fadds
xor
dec
xlat
inc
inc
in
mov
outsl
in
sti
cs
pop
mov
lcall
cmc
adc
sub
ljmp
jnp
ficompl
inc
negb
fldt
sahf
std
mov
pop
sub
or
outsb
adc
idivl
push
andl
xchg
pop
adc
ss
out
call
mov
dec
push
fwait
sarb
fnstenv
jl
fmul
stos
cmpb
inc
xchg
rcr
repnz
add
inc
test
mov
sub
pushf
mov
stc
je
mov
xchg
adc
xor
movsb
in
xor
mov
jne
call
orl
pop
sbb
out
mov
push
mov
popf
movsb
es
pop
mov
lret
ss
imul
pop
xlat
lock
out
jecxz
xchg
shl
push
hlt
nop
cmp
and
movsb
test
xor
cltd
cmp
sti
and
xchg
and
testb
jnp
jge
pop
jg
xor
dec
sahf
jne
add
outsl
daa
es
outsl
xchg
shrl
aaa
sbb
xchg
sub
cmp
aas
add
pop
inc
or
add
insb
or
inc
ja
imul
movsb
lds
mov
call
and
sbb
out
and
xor
xor
mov
cmp
cmc
jmp
and
rorl
sbb
adc
mov
mov
test
in
jge
or
xor
jg
mov
jg
jg
ret
pusha
inc
inc
jg
movsb
loopne
and
sbb
adc
gs
pop
cmc
jne
in
outsl
lods
and
sbb
shlb
mov
cmp
adc
outsb
mov
sbb
cmp
dec
rcrb
dec
decb
iret
add
xor
pop
cltd
rol
hlt
push
ljmp
xchg
or
imul
inc
mov
ret
pop
mov
aad
push
mov
loope
loope
jo
mov
inc
iret
jecxz
inc
cmc
or
icebp
repz
adc
es
push
fsubr
mov
or
jb
add
fnstsw
cmc
shlb
and
in
out
jo
ret
ret
push
cmp
cmpb
mov
loop
loopne
sub
out
lock
idivl
and
gs
push
in
ret
inc
aam
mov
std
int
adc
stc
pop
popf
mov
rorl
fisubl
outsb
movsb
movsl
mov
test
inc
push
cld
dec
test
fistpll
ret
push
push
sub
rorb
lret
repnz
mov
add
popf
push
mov
push
gs
leave
or
mov
subb
push
mov
jno
loopne
adc
lods
cli
fwait
push
ds
push
push
adc
mov
xor
mov
add
pop
push
push
popf
js
stos
cmp
pop
adc
je
sti
jno
stos
push
jno
push
and
inc
loope
rol
movsl
data16
xor
pop
cli
inc
in
je
inc
jl
mov
cwtl
inc
sbb
out
enter
push
sbb
sub
push
icebp
dec
dec
xchg
lock
push
fmull
loop
test
jo
test
bound
push
fmull
mov
add
stos
jno
lret
scas
mov
push
add
pop
pop
dec
mov
call
push
data16
and
sbb
out
dec
rdmsr
mov
xchg
jl
es
or
fsubs
mov
add
cmp
adcb
lret
sub
mov
sub
loope
or
pop
imul
insl
cmp
and
movsb
mov
cld
sub
jo
je
add
ret
insl
add
mov
push
xor
and
mov
movsb
xchg
jb
jg
pop
testb
xor
dec
cs
inc
adc
jg
xchg
cmp
cmp
mov
cmp
sahf
insl
dec
or
loopne
mov
xchg
mov
cmp
xor
and
mov
outsl
cmpsb
aas
jae
cmp
outsb
lods
ss
xchg
cmpsl
enter
ss
leave
and
aaa
pushf
push
repnz
test
and
and
pop
xchg
lods
cli
cmp
lea
and
lret
push
xchg
test
jl
pushl
adc
call
pop
mov
push
rolb
push
fwait
imul
and
cwtl
pop
call
fisttpl
mov
inc
sub
enter
jae
xor
lret
sbbb
jns
mov
jnp
int
aaa
pop
adc
cmpsl
add
into
ljmp
pop
jmp
cli
jle
sub
cmpsb
dec
mov
add
pop
add
in
lock
mov
out
mov
xchg
push
push
clc
pop
push
int3
push
dec
dec
pop
xor
into
or
push
mov
rcrl
xor
mov
pop
and
xor
push
pushf
add
out
mov
pop
mov
int3
jge
les
cmp
dec
jp
sub
iret
sub
cmp
pop
sbbl
or
in
mov
inc
pushl
test
cmc
je
mov
pushf
cmc
push
jne
cltd
out
push
sbb
bound
aaa
sub
jb
mov
push
fs
fildll
mov
pop
push
jge
out
jb
das
daa
cs
xchg
xor
xchg
pop
inc
inc
dec
xchg
adc
das
jmp
stos
pop
xor
pop
movsb
inc
mov
dec
and
repnz
add
inc
xchg
push
mov
out
int
sub
dec
aaa
xor
cmp
iret
stos
mov
push
lea
dec
dec
je
call
mov
test
push
cld
insb
lea
mov
mov
fcoms
add
push
mov
imul
cmp
jge
bound
icebp
add
mov
lret
icebp
mov
inc
clc
dec
xchg
or
pop
adc
xor
sbb
bound
imul
leave
mov
mul
in
cmc
dec
add
cmp
cmpl
call
jp
into
mov
sub
xchg
or
rcrb
jae
push
mull
mov
neg
or
or
movsl
das
cmp
std
in
sbb
loope
adc
or
mov
xchg
fadd
andl
inc
push
sub
fnstsw
loope
sbbl
aas
hlt
xor
mov
xlat
push
sub
jo
nop
mov
ljmp
mov
stos
xchg
adc
lods
inc
jns
std
daa
push
push
xor
sub
xor
xor
mov
movsl
inc
sbb
aas
stc
and
ret
pop
imul
in
pop
mov
in
mov
roll
pop
mov
sub
and
jb
xor
pusha
movd
pop
jns
stc
repz
gs
insb
push
test
mov
mov
xchg
daa
cmp
and
and
mov
pop
jne
enter
mov
jecxz
mov
pop
push
and
push
aas
adc
repz
ja
inc
out
xchg
movsb
imul
add
inc
fwait
shll
jle
sub
dec
push
sub
fcompl
cmp
and
mulb
repnz
adc
pop
or
arpl
int3
lret
sarl
popa
push
sbbl
adc
shll
leave
jb
subl
xlat
sbb
push
stos
xor
sub
pop
cs
adcl
push
pop
dec
jns
mov
or
pop
jmp
int
lret
sub
fs
push
sbbl
sub
fidivl
lret
repnz
sbb
lret
push
cmp
push
add
imul
and
shrl
cld
pop
setno
test
lahf
lahf
lds
enter
stos
pop
xchg
mov
xchg
jnp
push
adc
ja
mov
inc
jle
ds
pushf
and
adc
jae
loop
ds
pmaxsw
fcoml
inc
add
and
lock
push
push
and
sbb
fisubl
movsb
lret
lret
roll
pop
push
outsb
mov
dec
jp
stos
sbb
in
sbb
cmp
in
lods
and
inc
xchg
and
popa
imul
cmp
les
scas
ret
jae
ljmp
jge
xchg
out
push
rolb
mov
jl
aad
push
push
fisttpl
lcall
roll
imul
int
mov
pop
cmpsl
push
sbb
adc
je
leave
les
das
push
push
dec
adc
mov
aas
adc
stos
xor
mov
subb
sub
cmpsb
in
xchg
ljmp
ds
jae
xor
dec
adc
rcrb
sub
pop
sub
sbb
and
sub
cmpsl
adc
lods
pop
jo
in
test
or
push
sub
push
add
repnz
insb
cmp
jbe
inc
mov
test
xor
mov
pop
bound
mov
stc
shlb
cmpb
jl
lahf
lea
add
adc
cmpsl
inc
lcall
pop
lea
cmpsb
xor
lret
push
cmp
pop
inc
pop
push
mov
push
dec
mov
jmp
je
lods
lcall
mov
test
adc
outsb
ret
jb
divl
push
shrb
outsl
mov
mov
daa
pop
pop
ret
test
jmp
cmp
dec
jnp
push
sub
cmp
es
addl
xchg
js
out
pop
xlat
addr16
and
fisubs
inc
cwtl
addl
cs
ds
ret
testb
mov
aam
jne
lods
add
mov
jb
mov
scas
jg
inc
mov
xchg
mov
and
push
daa
push
fildl
sbb
fdivr
mov
sti
sbb
jp
stc
sarb
xor
mov
call
inc
jge
xchg
rcr
fmuls
jge
call
addr16
imul
in
stos
imul
incl
add
and
and
ds
mov
sub
in
iret
jbe,pn
dec
aam
or
lret
jae
sbb
outsl
ret
popa
test
aas
sub
cmp
add
cmp
push
jb
repnz
cmp
pusha
mov
sahf
mov
lock
in
testl
js
movl
inc
mov
rcr
rorl
gs
hlt
dec
xchg
sub
out
mov
popf
cmp
bound
jmp
outsb
out
clc
rorb
add
in
or
inc
fwait
add
mov
js
lret
imul
mov
das
fcmovb
sbb
add
push
pop
add
out
cwtl
sbb
outsb
icebp
jmp
scas
popa
addr16
xchg
sbb
mov
mov
jle
push
sub
cmp
mov
test
cld
imul
icebp
mov
stos
jmp
sti
xchg
jnp
xchg
sub
repz
mov
add
jge,pt
int3
daa
pop
popf
pop
mov
mov
mov
pop
adc
add
call
xlat
enter
add
xor
mov
xchg
cmc
mov
insb
iret
add
and
add
add
imul
rep
push
cmp
push
cwtl
mov
out
cmc
shll
sub
add
dec
sbb
mov
in
aas
adc
in
sub
pop
loop
cmpsb
pop
std
add
pop
nop
xchg
bound
or
test
add
fiadds
adc
rorb
inc
aas
or
mov
mov
stos
addr16
adc
and
outsl
jecxz
in
in
or
mov
shrl
cmp
mov
jnp
in
xchg
je
mov
sub
lea
ljmp
fisubrl
stos
sub
jne
inc
movsl
loope
inc
add
test
addl
loop
jg
out
daa
mov
pop
movsl
dec
mov
cmpsb
mov
mov
mov
sub
xchg
mov
das
fildl
loopne
jp
idiv
es
inc
mov
cmp
out
xchg
mov
loop
rdtsc
pop
xor
dec
jl
int3
inc
mov
ret
sub
mov
popa
mov
mov
mov
pop
dec
js
aaa
mov
or
lock
jle
cmp
pop
dec
cld
add
push
sub
outsl
test
xchg
std
xchg
stc
add
dec
out
or
cwtl
movsb
mov
mov
add
push
dec
insl
mov
xchg
out
cltd
add
orl
jo
fidivrs
or
pop
sbb
mov
cli
repz
aad
sub
lea
movsb
jp
add
call
call
lret
int3
push
push
mov
int
jns
in
xor
jecxz
in
lcall
xor
push
sbb
lods
dec
loopne
jge
xor
sub
inc
inc
sub
pushf
push
inc
mov
xor
push
pop
movsb
add
iret
sbb
xchg
adc
adc
inc
push
jbe
cmp
out
repz
cmpb
push
mov
mov
or
jl
push
ljmp
mov
aad
sbb
aaa
lea
push
jge
iret
in
ret
loop
mov
gs
leave
fisubrl
mov
pop
outsb
stos
iret
ret
mov
out
out
xchg
dec
mov
bnd
push
mov
inc
out
sbb
sub
mov
lret
outsl
pop
mov
inc
stos
in
clc
xor
sahf
pop
add
sbb
ret
fs
pop
lahf
jae
push
cmpsl
shrl
sbb
call
mov
pop
cmp
or
fsubrp
mov
aad
or
and
jnp
cmpsb
aam
mulb
add
mov
test
movsl
cltd
aas
pop
stos
int
cmp
dec
pop
adc
and
dec
ljmp
outsb
jbe
push
sbb
outsb
dec
aas
shlb
aam
popf
pop
cmpb
fstps
inc
cli
sbb
bnd
pushf
pop
lea
subb
fisubs
iret
xchg
loope
add
das
ss
out
mov
cmp
pop
sub
fmulp
xchg
rorb
or
xchg
scas
sbb
mov
mov
pop
mov
push
lds
out
mov
xchg
not
loopne
push
dec
test
inc
or
adc
cwtl
popf
mov
mov
or
imul
out
cwtl
jnp
push
xor
gs
sbb
daa
cmpsl
jae
push
push
xor
and
jno
cmp
inc
mov
adc
popf
out
popf
rol
test
mov
pop
pop
sub
pop
test
insb
insl
dec
pop
vandps
iret
imul
popf
sbb
jno
sub
sub
or
call
sahf
fwait
loop
insl
pop
pcmpgtw
aaa
sub
das
dec
pop
mov
inc
loope
sub
jae
ret
lret
pop
stos
jecxz
mov
pop
test
push
dec
adc
icebp
loope
pop
cmp
shll
push
sar
mov
insb
sbb
inc
xchg
pop
repnz
aad
js
rorl
xchg
pop
pop
mov
cmpsl
mov
xchg
pop
test
pop
divb
ja
daa
xchg
adc
xchg
or
mov
pop
out
adcb
dec
out
mov
mov
ljmp
inc
movsb
and
mov
sbb
cmpsb
dec
loope
xor
dec
lret
sbb
jne
jbe
sub
daa
mov
cmp
inc
mov
lock
mov
lock
ret
movsb
jp
ret
push
stos
sti
jno
stos
jmp
mov
mov
loop
inc
push
ficompl
dec
sub
std
iret
lods
addl
jecxz
push
test
leave
dec
pop
stos
jno
pop
sbb
cs
mov
inc
inc
inc
outsb
ds
in
push
dec
xrelease
or
and
pushf
mov
xlat
pushf
es
cmpsl
testl
ljmp
popa
xchg
mov
push
stos
pop
div
hlt
dec
fisubrl
xchg
das
and
stos
push
clc
repz
imul
inc
cmp
dec
pop
stc
push
lcall
inc
rcr
je
inc
out
lods
xor
call
jl
outsb
iret
jae
inc
pop
call
xchg
and
push
xchg
dec
or
push
out
mov
cwtl
movsl
stc
add
fwait
xchg
inc
and
push
xchg
jg
jo
filds
inc
sub
test
sub
rcrl
and
divb
cwtl
sahf
lret
rcl
inc
sbb
inc
mov
sub
mov
cmc
jae
test
push
lods
xchg
ss
sar
mov
adc
les
in
mov
xchg
mov
pop
mov
sarl
inc
push
lds
inc
push
in
add
push
stc
jae
jmp
cmpsl
or
xor
jae
sub
mov
jns
inc
je
and
jg
mov
jo
push
into
lds
divb
add
cmpsb
decb
insl
negb
inc
add
xor
push
lods
bound
or
cli
jb
sub
mov
dec
pop
data16
stc
jl
push
adc
cld
sub
dec
shr
inc
aad
mov
mov
add
lcall
jno
data16
stos
mov
xor
imul
adc
xchg
rcl
jge
movsl
clc
dec
jns
push
out
ret
or
mov
inc
pop
cmp
ja
nop
repnz
inc
sbb
testb
cld
dec
stos
jmp
mov
inc
repnz
inc
cwtl
ficomps
or
push
loop
aad
andl
xor
sbb
insl
hlt
mov
mov
sbb
inc
fst
xchg
pop
movsb
or
faddl
scas
rolb
and
xlat
mov
shlb
inc
mov
mov
pushl
xor
dec
add
mov
dec
sub
xor
ss
les
stos
dec
pop
stos
test
imul
push
adc
xorb
addr16
inc
mov
call
lahf
ror
xchg
aad
repz
or
pop
inc
cmp
mov
sarl
enter
xchg
imul
xor
pop
jo,pt
mov
sub
test
data16
leave
sbb
mov
hlt
xchg
enter
mov
imul
jg
loopne
pop
stc
push
out
outsb
pushf
xchg
push
lds
dec
mov
and
xchg
in
hlt
mov
aaa
imul
sbb
popa
shlb
aaa
jnp
xor
iret
mov
lods
cltd
dec
fiadds
mov
dec
es
pop
inc
int
dec
jbe
dec
pop
dec
mov
push
dec
jle
fmuls
in
loop
in
xor
int3
mov
mov
in
and
jmp
and
jg
in
cmp
xlat
or
lods
dec
scas
jo
inc
jmp
out
xchg
or
decb
pusha
adc
test
dec
adc
inc
ret
rcrl
sahf
xchg
and
je
sbb
mov
xor
lods
or
adc
dec
inc
lret
movsl
aam
sbb
pop
aad
jge
out
clc
jo
cmp
mov
add
or
xchg
mov
sub
push
rorl
cmp
mov
push
mov
adc
inc
daa
jmp
mov
sbb
sbb
cmc
lods
inc
xchg
cmpsl
sub
cmpb
pop
dec
mov
push
cmp
sub
jg
push
in
addr16
ja
or
xor
fldt
les
stos
test
adc
lret
stos
pusha
sub
lock
dec
shll
cmp
push
fisubs
mov
pop
cwtl
dec
pop
mov
sarl
mov
arpl
dec
and
outsl
sub
xor
mov
aas
sub
jg
daa
js
inc
mov
pop
fsin
ret
fwait
mov
imul
mov
jmp
fmulp
push
insl
enter
test
aam
cltd
hlt
shrb
push
aaa
jge
pop
or
and
dec
jns
outsb
das
or
into
cmp
jle
inc
shrl
imul
xchg
push
add
shll
push
js
std
insb
add
out
fiadds
lock
sbb
icebp
and
es
mov
bound
add
insb
push
pop
shll
push
and
lret
repnz
mov
or
pop
push
ljmp
nop
push
sub
sbb
cmpsl
inc
xchg
mov
out
rclb
outsl
pushf
sbb
movl
mov
sub
push
push
jbe
add
cmp
xchg
mov
sbbl
aam
daa
in
push
cmp
adc
push
or
lods
and
mov
js
inc
rcr
mov
arpl
inc
jb
fildl
shl
xor
adc
lods
cmp
push
enter
xorl
enter
shrb
sbb
je
es
idivb
xchg
sub
or
and
mov
scas
pop
adcl
data16
popa
push
adc
loope
dec
stc
jl
mov
loop
lds
inc
sub
call
js
outsl
sti
imull
mov
push
fdivrp
adc
or
popa
loope
dec
adc
das
shlb
jle
test
xor
jo
in
pop
xchg
cs
add
loope
repz
sbb
mov
sub
call
lret
add
decl
mov
cmpsb
iret
or
jo
fstp
xor
mov
out
int
mov
push
into
add
mov
sub
or
rcrl
addr16
jp
arpl
inc
mov
push
sbb
inc
fiaddl
lock
test
scas
cmpsl
mov
out
adc
in
inc
into
mov
out
fwait
dec
int
push
inc
ret
push
lret
pop
int
xor
add
in
mov
popa
lahf
test
dec
sub
pop
jecxz
mov
pop
push
sar
outsb
jmp
mov
push
fiadds
sbb
xchg
filds
mov
adc
faddl
pop
and
nop
popa
loope
daa
fiadds
das
outsl
cwtl
mov
pusha
lea
dec
inc
outsl
pusha
popa
imul
jecxz
lods
jnp
push
sub
lea
flds
xor
xchg
in
lock
dec
push
push
and
xor
into
insb
cmp
cwtl
test
ret
decb
pop
mov
shld
jecxz
shlb
jbe
sub
int
mov
rcll
jge
test
and
aad
fsubrl
xor
xchg
clc
adc
js
ret
xchg
mov
lods
insb
not
scas
adc
inc
xchg
sub
stos
nop
sub
nop
adc
push
stc
inc
ds
cltd
lods
fnstenv
and
movsb
hlt
sbb
ds
ffree
mov
mov
push
scas
sub
fmulp
mov
dec
mov
sub
dec
popa
adc
pop
in
pop
test
loopne
sahf
data16
mov
fs
mov
or
ja
pop
daa
cmp
and
gs
pop
int
push
sti
mov
push
mov
mov
dec
mov
push
subl
les
pusha
cltd
dec
push
jp
adc
pop
lock
or
aam
xchg
dec
cmp
adc
cmp
lahf
mov
inc
cmpsb
jge
mov
ss
dec
and
shl
js
inc
sub
fstpl
outsl
adc
sahf
stc
cmp
push
sbb
sarl
loope
outsb
cmp
mov
dec
and
inc
sti
mov
dec
xchg
xor
cmpsl
mov
lcall
arpl
mov
cs
ss
xor
and
add
jb
popa
jp
and
adc
inc
leave
jmp
xor
test
lret
adc
daa
ljmp
scas
inc
lret
jle
push
aam
fwait
sbbb
into
in
std
pop
aas
pop
xchg
and
sub
int3
cmp
and
mov
push
mull
mov
fbld
es
sub
subl
or
movsl
mov
mov
sub
daa
andps
sub
or
xlat
xchg
mov
sbb
cmp
inc
loop
mov
popf
or
popf
jb
cld
mov
in
push
cmpb
push
sarb
cmpsl
xchg
adc
lret
push
add
bound
vaddps
dec
je
fwait
push
pusha
mov
xchg
pusha
add
mov
mov
push
leave
int
push
mov
pop
lock
sub
cmp
inc
test
lock
aas
add
sahf
mov
add
xor
imul
mov
insb
leave
cmp
in
lods
or
pop
out
and
sub
mov
cmp
pop
xchg
out
repnz
cmp
pop
test
inc
addr16
cli
js
shrb
leave
pushf
cwtl
call
cmp
cmp
clc
rclb
mov
notl
ljmp
adc
cmp
sbb
dec
jle
pusha
out
loope
or
jge
daa
cmpsl
mov
out
dec
xchg
push
mov
scas
loopne
je
push
dec
jge
adcb
stc
push
lods
mov
arpl
xchg
cmp
addr16
pop
out
adc
in
pop
scas
inc
cmp
cmpsb
stos
fdiv
loope
stc
out
cmp
insb
cli
sbb
int
push
dec
lock
push
xchg
ljmp
cmp
sarl
pop
and
test
mov
xchg
lods
sub
mov
pop
or
xor
stos
add
loope
sti
stos
je
xchg
mov
cmp
pop
das
inc
adc
leave
pop
loopne
sti
leave
inc
xchg
adc
mov
push
sti
inc
incb
sub
lret
cmp
add
dec
sbb
das
mov
push
sbb
adc
sbb
insl
mov
out
out
mov
pop
push
mov
sub
sar
cmp
pushf
add
shlb
push
cmpsl
decb
push
mov
mov
daa
xor
push
lcall
inc
in
cltd
out
push
mov
inc
daa
xor
adc
xor
jg
mov
das
mov
mov
jo
fwait
scas
lock
or
sbb
push
and
xor
loopne
stc
or
cmp
jp,pn
je
pop
lcall
scas
add
fstl
sbb
sbb
cmpsl
xchg
mov
xchg
sbb
push
dec
test
fsubrl
loop
int3
add
push
push
sbbl
or
and
push
and
inc
cmpsb
add
and
pop
sbb
iret
stc
vpmacssdd
lret
ss
sub
fdivrp
cwtl
cmpsl
jmp
xchg
lock
ror
je
fsubl
lahf
sub
fcmovnu
cmc
mov
mov
js
pop
shll
sti
je
movsb
mov
push
xor
mov
fdivrs
leave
mov
imul
add
adc
mov
xchg
jo
out
jp
inc
push
bound
subb
sub
mov
inc
fiadds
mov
inc
cmc
mov
lret
add
adc
push
sub
pop
jne
es
fcoml
hlt
push
subl
out
testb
cmp
inc
sbb
lgs
scas
cmp
inc
push
xor
ss
sbb
xor
xchg
out
es
iret
mov
pop
jl
sub
pop
out
rorl
popf
mov
lahf
outsb
std
mov
xchg
pop
or
pop
add
jnp
icebp
call
mov
arpl
or
mov
cmc
xor
xchg
xchg
insb
out
jge
shlb
scas
ret
xchg
rorl
or
and
cmp
insb
mov
mov
data16
out
das
ret
push
dec
enter
fwait
mov
out
test
repnz
pop
loope
jl
aam
xor
add
pop
lcall
xlat
fst
andl
push
push
leave
adc
lea
xchg
leave
sbb
incl
jbe
adc
push
ficoml
pop
stos
pop
lahf
test
inc
dec
jg
pop
mov
add
mov
out
rcrl
js
cmp
dec
dec
sbb
jmp
int3
cli
in
js
in
cmp
frstor
out
inc
cltd
push
jge
data16
pop
jo
aas
imul
mov
inc
push
and
sarl
cmp
pop
sub
adc
bound
sub
stos
or
fmuls
jo
pop
push
xchg
scas
jecxz
das
cmp
xchg
mov
sarb
mov
jge
bound
mov
dec
scas
adc
dec
adc
mov
inc
sub
cmp
sbb
push
mov
je
sti
or
jmp
in
xor
fcomi
testb
add
add
leave
add
dec
push
mov
sub
inc
ja
inc
cmp
dec
pushf
sub
add
pop
lods
jo
adc
loope
fwait
or
test
lea
dec
enter
or
jp
jmp
cli
cs
pop
sti
jge
mov
or
imul
add
inc
push
popf
cmp
lahf
or
subb
mov
dec
daa
aas
mov
inc
inc
sbb
xchg
lret
sub
repz
popa
jle
popf
rorb
cmpsl
int
int3
sahf
repnz
fmuls
mov
pop
push
ss
jo
fwait
out
clc
sbb
fisubs
pop
pop
jl
or
xchg
or
jae
pop
mov
xchg
mov
mov
sbb
subb
cmc
outsb
xor
xor
sbb
mov
or
jle
ss
aam
push
dec
lret
mov
aas
push
movsl
add
sbb
sti
stc
or
jge
testb
pop
dec
jo
inc
test
sub
push
ret
mov
aas
jae
out
adc
vpslld
mov
cmp
cmp
mov
jle
out
rol
out
int
ss
jp
or
xor
stos
mov
cwtl
sub
jp
xchg
cmc
adc
inc
sub
dec
cmp
and
sti
add
std
xor
jbe
push
ror
test
inc
and
sbb
fbld
mov
lret
pushf
ficoms
push
lea
pushf
jns
iret
and
push
cmc
sub
cmpsb
sbb
ss
mov
shrl
subb
jge
aas
mov
cmp
mov
or
enter
insb
or
mov
lds
pop
inc
dec
inc
outsl
sub
fidivs
sbb
fmull
pusha
and
lret
pushf
adc
jmp
mov
pop
pop
xchg
push
mov
push
cmpsb
mov
cmp
mov
outsb
enter
xchg
movsl
adcl
dec
fisubrl
add
xor
mov
xor
and
and
xchg
push
movsb
mov
add
daa
pusha
mov
test
je
add
shll
sub
es
ljmp
push
jmp
lods
insl
cwtl
pop
insb
out
push
test
xorl
xlat
xchg
push
out
and
ja
aaa
js
icebp
jo
jp
aaa
mov
jmp
pushf
scas
cltd
in
inc
xchg
cs
xor
jg
dec
cmp
out
lds
fistpl
mov
out
aaa
or
fs
out
js
insb
mov
pop
pop
lods
scas
pusha
icebp
mov
and
stos
and
lea
sbb
push
or
bound
sahf
mov
push
inc
xlat
fiadds
insb
sbb
adc
sub
push
jae
ss
push
sbb
testl
je
ss
bound
enter
pop
adc
adc
cmp
loopne
movsb
ss
push
mov
xchg
gs
out
test
mov
insb
cmp
jecxz
stc
mov
out
xor
bound
jle
scas
sbb
nop
sub
jns
idivl
mov
mov
int
bound
fcmovnbe
sti
sahf
pop
pushf
jbe
dec
cmp
test
xor
jge
sbb
popa
sbb
in
xor
cmp
pop
ret
je
mov
push
pop
lret
mov
popf
mov
sub
or
fistpll
call
or
test
xor
jle
cmp
stc
aad
xor
xor
mov
test
stos
push
jecxz
call
or
repnz
lea
shl
out
mov
add
nop
outsb
and
dec
xor
xor
sub
push
aam
xlat
sub
cmpsb
push
negb
int
int
dec
inc
pop
push
pushw
add
jle
popf
sbb
call
inc
test
clc
pusha
fldenv
cmp
mov
in
mov
sub
dec
fldl
in
mov
pop
cld
push
sub
push
mov
jno
lods
and
movl
pop
adc
jne
in
sbb
lcall
cmp
mov
mov
leave
push
imul
sbb
add
in
mov
push
out
mov
insb
push
jl
push
sbb
addr16
fcompl
or
orb
pop
or
sbb
adc
push
aas
scas
fidivs
shrl
add
insb
es
sbb
sbb
repnz
mov
int3
jae
pop
fs
jae
adc
mov
mov
divb
imul
jb
jae
fs
in
shl
lods
or
cmpsl
int
icebp
xor
pop
or
mov
or
test
fstpl
rcrb
mov
popa
into
adc
jo
xchg
arpl
mov
push
dec
push
testb
sub
cmpsl
push
fmull
lcall
pop
aad
pop
aad
pop
mov
cmc
cmovp
add
sbb
aaa
xchg
mov
jmp
cmp
lret
pop
clc
mov
xchg
jno
jo
add
xchg
adc
mov
jle
repz
lcall
movsb
adcb
in
adc
insb
dec
pop
push
or
pop
mov
xor
lret
xchg
mov
flds
pusha
dec
clc
daa
fucomp
fcomps
test
or
push
mov
stc
sub
ss
loope
pop
clc
in
in
xor
pop
fwait
pushf
add
outsl
mov
lret
cmp
ret
mov
loope
nop
fwait
sub
leave
fstl
scas
push
and
adc
cmpl
dec
xor
inc
lods
test
sahf
mov
push
xchg
xchg
adc
fld1
sahf
js
mov
jne
mov
sbb
push
fldt
mov
fadd
fdivp
test
popf
bound
rol
cmpsb
or
push
or
inc
cmc
sub
test
mov
mov
das
arpl
les
sub
add
aad
sahf
stos
addl
jecxz
mov
in
imul
in
inc
std
stos
xor
and
repz
pop
sbb
pop
cmp
pop
leave
push
ja
daa
out
fwait
push
jp
inc
test
push
btc
jb
faddl
jne
stos
insb
mov
cld
je
pop
lock
mov
imulb
popa
sbb
sar
stos
push
cmp
call
cld
sub
sub
dec
cmp
je
out
repz
scas
jno
or
cmp
sbb
ret
aam
pop
hlt
dec
and
mov
mov
mov
jg
cmpb
lea
jl
cmp
inc
loop
arpl
cmp
add
cmc
pop
rcll
jne
adc
frstor
or
adc
or
adc
out
sbb
repz
in
fnstcw
add
test
into
add
outsl
jle
daa
mov
ret
test
gs
sub
je
mov
imul
pop
or
xlat
ja
negb
pop
jbe
aam
adc
aad
sbb
fs
mov
dec
push
cwtl
mov
mov
pop
pusha
xchg
pop
pusha
sub
push
mov
sbb
push
xchg
cmp
lcall
inc
sbb
jle
es
cmp
add
scas
lock
insb
outsl
inc
lock
mov
adc
pop
mov
xchg
mov
sub
out
and
pop
arpl
or
add
xor
mov
inc
mov
or
andl
adc
inc
jae
adc
mov
cmpl
test
inc
cmc
sbb
mov
hlt
ss
cmp
fists
push
jnp
dec
je
ficoms
cmc
fs
fidivrs
mov
adcb
out
xor
fnstcw
dec
and
clc
jge
rcl
mov
mov
and
and
push
xchg
or
imul
push
or
add
insb
and
scas
out
xor
test
cmp
mov
mov
js
jns
sbb
test
sahf
xchg
lret
pop
and
jno
out
movsb
push
push
dec
cmp
stos
cli
imul
jb
imul
sti
cmp
sahf
insb
sub
mov
push
adc
pop
loop
lahf
orl
xchg
pop
iret
mov
pcmpgtw
loope
loope
inc
sbb
in
adc
mov
cmp
adcl
sbb
xchg
popf
jecxz
inc
movl
mov
adc
xor
enter
les
shl
in
ss
mov
scas
push
mov
xor
xchg
sub
loop
mov
scas
leave
js
xlat
pop
lods
fimuls
fildll
mov
cmp
dec
inc
mov
cwtl
cmp
decl
dec
sub
xor
adc
stos
cmpsb
mov
xor
das
mov
push
neg
adc
aaa
test
std
cmc
adc
lret
aaa
dec
push
and
das
rcr
pop
push
xor
loope
fsubrp
inc
bound
cmp
xorl
jnp
or
or
sbb
xor
xor
dec
popl
subl
sbbl
je
adc
ror
vmwrite
mov
and
ret
mov
es
shlb
dec
arpl
in
pop
aas
jbe
mov
stos
jb
sub
lret
mov
mov
add
cmp
clc
jg
loop
mov
ds
ret
fdiv
add
xchg
test
mov
jne
stos
and
test
xchg
fisubrs
sti
test
sub
pop
inc
push
adc
movsl
vpshlq
in
ds
xor
inc
dec
adc
sti
xchg
pop
jns
pop
sbb
ret
dec
int
xor
in
mov
cmp
adc
jg
push
rolb
xlat
sub
pop
xor
ss
add
clc
ds
inc
sub
repz
inc
xor
pop
mov
lret
popa
imul
in
dec
xor
imul
cltd
jne
jns
pusha
xchg
xor
or
ja
nop
enter
shlb
mov
sbbb
hlt
loop
out
das
xor
mov
dec
leave
fnstenv
stc
in
ss
loopne
push
into
jae
or
sbb
fists
scas
dec
lcall
inc
fiadds
push
jo
xor
pop
mov
inc
push
test
mov
lcall
or
test
sbb
cld
mov
mov
xchg
cli
push
mov
sub
ljmp
and
roll
loope
shl
gs
mov
push
or
xor
testb
scas
sbb
lea
mov
inc
adc
stos
xchg
xor
imul
push
movsl
ret
cmpsb
out
pop
push
ljmp
and
xchg
je
fimull
push
push
pop
adc
pop
cmpb
shll
mov
or
xor
or
push
jno
ja
lahf
xor
push
hlt
dec
pusha
cmpsb
push
or
es
and
inc
pop
std
into
push
inc
clc
js
jl
mov
call
sbb
xchg
add
add
and
shrl
cmc
pop
aaa
inc
shll
das
repz
pop
pop
pop
je
cmpsb
pop
jne
push
in
inc
stos
ds
jg
test
mov
aaa
loop
fprem
jns
popa
mov
jae
sub
imul
out
xor
addb
sub
sti
jb
or
mov
out
dec
push
incl
sbb
test
sahf
out
mov
xor
cli
dec
fiadds
mov
aad
jmp
cltd
jno
enter
pushf
inc
stc
push
cmp
mov
dec
pop
lock
xchg
or
and
cli
pop
jg
mov
and
jmp
out
add
mov
inc
test
imul
lock
aaa
pop
popf
inc
and
jge
pop
fptan
xchg
scas
push
jmp
mov
mov
fs
cmp
sub
cmp
sub
or
mov
ret
sub
ret
subb
bound
sub
or
push
sub
dec
pop
fbld
dec
add
ss
jl
cwtl
leave
sub
xchg
arpl
or
vhaddps
jle
adc
ret
and
cmp
rcrb
dec
cmc
pop
out
ret
adc
jae
sub
addb
pop
cs
or
lret
jbe
test
bound
pop
into
mov
lea
jns
insb
ffreep
mov
add
jge
mov
inc
aaa
or
push
mov
movsl
mov
cld
mov
mov
test
push
cmc
outsl
xchg
leave
popf
xor
and
jmp
pop
insl
mov
push
jmp
adc
gs
sbb
push
pop
decb
xchg
ficompl
jle
int3
cmpsb
jl
mov
fwait
cmp
cld
bound
cmp
pushf
arpl
push
push
mov
bound
aaa
dec
ss
xchg
data16
stc
mov
jl
jns
add
stc
lods
mov
push
popl
ucomiss
pusha
pop
int3
mov
scas
lds
nop
add
dec
and
out
repnz
scas
jle
loope
call
xlat
dec
mov
push
pop
adc
stos
jecxz
xorl
aam
dec
out
iret
push
push
roll
pop
lock
pop
mov
fsubl
scas
lcall
cs
bnd
iret
jo
popf
jae
cmp
lods
in
mov
ss
enter
into
hlt
cmp
fs
and
repz
pop
mov
enter
stos
les
or
cmp
sub
or
push
shlb
mov
imul
or
in
cli
add
cmp
and
inc
int3
dec
adc
in
push
dec
cmp
cmp
xchg
jecxz
or
loop
stos
inc
push
dec
ret
sub
or
dec
loope
add
repz
test
clc
sbb
test
fcmovnu
mov
inc
fwait
sbb
add
sbb
in
adc
push
cmp
leave
mov
mov
je
pop
xor
out
out
pushf
mov
je
pushf
rcrb
mov
aam
pushf
xor
lahf
dec
jmp
bound
jl
mov
mov
mov
lahf
arpl
mov
sbb
mov
loopne
mov
in
mov
xor
sub
les
mov
lahf
adc
imul
dec
lahf
int3
xor
mov
cld
outsb
add
cmpsl
fistpl
lods
xchg
popa
js
gs
pushf
mov
gs
and
xchg
je
shrl
pop
fadds
shrd
sub
fnsave
hlt
cmpsb
jmp
cld
icebp
aam
cltd
repz
xorl
test
mov
imul
sub
xlat
loop
push
daa
mov
pop
adc
fucom
or
repnz
add
push
xchg
and
dec
sbb
push
jecxz
xor
ret
addr16
enter
dec
mov
paddd
sbb
push
loop
in
rcr
cmc
add
jle
in
or
in
xchg
sbb
lds
and
dec
dec
push
mov
pop
repz
sub
fst
sbb
loopne
clc
xorb
movsb
inc
jae
cltd
add
mov
jae
inc
push
mov
in
mov
testb
orb
add
popf
and
push
xor
mov
push
mov
pushf
sbb
inc
add
pop
negl
out
lahf
test
mov
je
call
cmpsl
daa
dec
pusha
rcr
adc
pop
imul
nop
insl
jle
add
push
mov
imul
push
movsl
dec
mov
mov
ret
lret
xlat
mov
xchg
cmp
dec
mov
mov
les
and
and
addr16
imul
lock
clc
cmpsl
push
dec
lods
dec
addr16
inc
sti
inc
adc
aas
or
rorb
jmp
movsl
jp
fsubrp
hlt
clc
mov
repz
mov
pop
dec
xor
sub
jbe
sbb
push
pop
iret
dec
mov
insl
scas
mov
mov
jge
inc
mov
dec
add
test
cmpsl
stc
mov
xor
push
mov
addl
cltd
in
shll
inc
leave
mov
mov
in
mov
push
movl
add
xchg
mov
and
jecxz
sbb
stos
hlt
and
icebp
test
jg
divb
outsb
pop
jb
mov
xor
leave
xlat
data16
xchg
add
xchg
rcrb
add
or
cmpsb
cmp
fildl
fcom
in
pop
in
stos
mov
add
cmp
enter
dec
cli
mov
inc
mov
cmc
divb
dec
repnz
out
jmp
enter
adcb
inc
push
insb
lea
xor
and
outsb
sbb
out
test
xchg
fcoml
mov
mov
dec
mov
sti
and
les
bound
out
pop
push
into
int
sbb
scas
sahf
es
pop
lods
push
fdivrl
lods
jo
jge
pop
imull
ds
or
mov
pusha
pop
sub
or
aas
stc
cltd
cmp
and
jg
ja
add
jl
add
pop
aaa
out
int
sub
xor
ja
hlt
xor
pop
daa
and
fsubrp
outsb
std
cmp
adc
pop
clc
pop
xchg
bound
loope
sub
stos
outsb
rcll
xor
jno
cld
cld
aaa
or
scas
push
sub
fistps
cmp
dec
fisubs
mov
mov
lret
inc
cmp
adc
dec
loopne
dec
sahf
cltd
data16
mov
mov
test
cmpsl
fcom
and
mov
icebp
cmp
or
and
xor
outsb
movsb
mov
aaa
stos
sbb
push
test
out
rclb
xor
fiaddl
jno
lock
rcrl
jne
xor
shr
fldenv
div
xlat
lods
jns
adc
sbb
mov
push
int
ds
pop
sub
lods
scas
pop
out
or
mov
push
data16
dec
pop
ficomps
std
push
in
jnp
stos
and
addr16
stc
push
data16
add
adc
xchg
outsb
ja
sub
add
popa
lods
inc
jo
je
push
popf
sub
dec
ret
inc
out
mov
fnstenv
cmpsl
stos
sbb
mov
xor
iret
jno
jnp
insb
rol
or
rclb
sub
mov
in
dec
jl
enter
mov
out
sbb
mov
jge
rcll
sahf
push
rclb
adc
pop
add
ficoms
arpl
cmpsb
jo
sbb
outsl
xor
inc
aam
cmp
xlat
cli
push
xchg
mov
mov
mov
and
in
mov
inc
push
mov
jmp
mov
pusha
lods
push
rcrb
std
cmpsl
insb
cwtl
sti
inc
movsl
fnstcw
mov
rolb
into
in
cmpsb
jle
test
das
xorl
adc
jne
xchg
or
cmpsb
aas
in
fildl
fadds
fnsave
fs
pop
push
stc
inc
jle
dec
test
repnz
out
or
inc
add
out
mov
into
pop
loope
pop
pop
fistpll
ja
sbb
jp
in
lea
rolb
pop
ljmp
bound
cmpl
inc
cmp
xor
push
ja
mov
pop
fidivl
xchg
call
movsl
xrelease
cmp
test
lods
inc
xchg
adc
sbb
pop
aam
adc
add
fists
xlat
bound
sub
les
jo
xchg
adc
add
movsl
push
cli
test
ja
rorl
adc
pop
jb
add
jg
iret
jbe
cmp
sbb
das
jne
and
out
into
aaa
jg
outsb
dec
addr16
aas
idivl
jbe
sbb
push
ret
add
push
arpl
xchg
pusha
mov
ret
pop
mov
push
push
push
iret
js
mov
cmp
repnz
xchg
jmp
inc
xchg
adc
rorl
cmp
stos
sbb
addr16
and
pop
add
dec
les
lea
xchg
lcall
or
mov
inc
repnz
divb
into
enter
mov
cli
inc
or
sub
jno
inc
sarb
pop
jb
loopne
or
cmc
ret
movups
fsts
call
pusha
xor
in
adc
sub
and
sub
popf
and
jae
cli
jo
in
xchg
jns
mov
adc
fucomi
popf
adc
sbb
jle
or
and
mov
loop
adc
jae
and
xchg
sahf
push
sar
into
jbe
orl
or
lock
sti
loop
push
sbb
jno
into
repz
push
sub
fucomi
pop
xlat
mov
jg
adc
sbb
jne
add
xor
adc
xchg
rcrb
or
xor
rolb
xor
sbb
xor
aas
ds
pop
push
ljmp
mov
in
cmp
les
mull
and
stos
mov
mov
push
or
lcall
push
push
insb
fidivrl
inc
out
and
enter
rcr
arpl
cmpsb
sbb
test
push
cmp
jno
fs
fbld
xor
mov
mov
rdtsc
nop
ljmp
aaa
mov
leave
jbe
scas
jge
mov
mov
adc
dec
movsb
out
and
dec
adc
cld
xchg
jo
aam
mov
rcr
fnstsw
mov
push
in
lods
xchg
mov
mov
lods
mov
sub
mov
push
arpl
mov
rcrb
fsubrl
add
add
push
enter
cmp
xor
push
rcrb
xlat
sub
imul
sbb
aas
std
arpl
jns
dec
adc
pushf
xor
imul
xlat
adc
pop
aas
and
fs
lds
lea
icebp
add
jb
lea
shll
jmp
jl
call
icebp
clc
push
push
out
popf
inc
pop
ret
cld
stos
sbb
sub
mov
in
cmp
out
test
pop
repz
leave
xchg
aas
aam
dec
das
sbb
popf
mov
pop
mov
cli
int
xchg
mov
or
jnp
fbstp
addr16
enter
xchg
test
mov
out
les
xor
pop
outsl
in
jo
jp
pop
adc
shll
xor
test
xor
fcoms
cld
lret
mov
cmpl
insb
dec
sbb
sub
into
sbb
sti
fmul
fcomps
jo
test
sub
and
mov
xchg
int
dec
push
pop
inc
outsl
lds
add
and
rep
mov
inc
xchg
push
pop
inc
jmp
dec
push
dec
repnz
out
xor
mov
jmp
cwtl
xor
aad
mov
rcll
enter
push
jecxz
vunpckhps
mov
roll
mov
push
popf
pop
fidivs
in
push
pop
lret
std
cwtl
and
dec
mov
xorb
in
xchg
or
cmp
pop
lret
pop
faddp
imul
movsl
negl
aad
xchg
or
cmpsl
mov
std
sbb
in
push
inc
call
mov
jns
inc
aas
mov
popf
lods
stc
push
jns
fimull
add
mov
inc
into
ror
mov
lret
fcomps
lahf
insb
addb
lods
nop
repnz
add
push
ljmp
hlt
loopne
pop
aad
xor
sti
sub
addr16
lret
add
mov
add
mov
fdivrl
into
xchg
mov
jo
pop
jae
push
ss
nop
cwtl
gs
mov
popa
outsl
repz
mov
loop
mov
nop
and
fxch
jbe
ss
adc
inc
jae
sbb
call
lret
cmp
xchg
jmp
pop
ss
push
shl
add
fsubrs
pop
or
ud2
xor
pop
mov
mov
mov
adc
std
fnsave
mov
cltd
adc
jge
push
sbb
into
sub
push
or
test
orl
sbb
jns
ss
inc
mov
daa
dec
stc
lock
lret
cmp
push
push
sar
popa
cmp
mov
dec
popa
xor
cwtl
adc
inc
or
enter
lahf
xor
mov
sbb
gs
fldcw
or
test
cmp
xor
sbb
adc
inc
dec
ret
mov
out
leave
mov
fnstsw
ret
orb
adc
jb
movl
add
mov
dec
shrb
sbb
and
pop
lcall
xchg
or
ss
or
adc
jo
call
cmpsb
bswap
cmpsb
aaa
jae
pop
or
lods
enter
fiaddl
xchg
lods
push
mov
xchg
cmp
pushf
ds
push
mov
popf
stc
cli
mov
sahf
xor
cmp
in
push
pop
out
lock
or
add
ds
inc
subl
xor
int
std
mov
stc
mov
mov
call
mov
cmc
popf
inc
les
roll
xor
stc
and
aaa
pop
les
ret
inc
addr16
je
clc
leave
idivl
jo
clc
out
popf
inc
hlt
and
xchg
ja
and
mov
inc
mov
adc
adcb
mov
or
insb
xchg
icebp
pop
in
repnz
dec
xor
mov
inc
xchg
push
test
adc
movsb
rcl
imul
stc
sbb
mov
std
mov
lds
inc
shll
ret
xchg
aas
xlat
test
sarb
in
fs
pop
jle
mov
imul
pop
xchg
nop
insl
int
jne
mov
pop
push
das
mov
fldt
out
xchg
stos
stos
mov
add
or
mov
mov
in
sbb
adc
or
mov
cmc
andl
mov
inc
loopne
aaa
cmp
imul
imul
fcomip
inc
repnz
lret
mov
outsl
xor
adc
js
test
mov
out
out
or
jl
pop
roll
addr16
jae
shlb
or
xlat
and
les
inc
sbb
scas
in
xchg
roll
lahf
pop
fadds
jp
mov
leave
sbb
addl
cmp
movsb
andb
sbb
fbstp
jg
lods
sub
bound
sbb
ret
arpl
jmp
aas
ja
roll
cmp
nop
imul
jg
jge
fstpl
bswap
or
aad
inc
loop
inc
repnz
mov
int
xor
and
xchg
add
add
pushf
sahf
imul
in
es
mov
pop
lods
or
pop
pop
pop
mov
mov
loop
in
lret
pushf
cmpsl
out
out
cmpsb
out
subb
push
prefetch
fwait
mov
imul
clc
repnz
jnp
push
loop
mov
push
xor
mov
movaps
test
mov
es
xor
ret
pop
sahf
insl
or
in
push
lds
sub
std
push
pop
jns
ja,pn
jns
mov
xchg
cltd
pop
das
jne
int
aam
xor
es
mov
xor
pushf
out
iret
out
rorb
and
stc
lock
mov
nop
stos
outsl
mov
out
push
add
add
push
mov
mov
enter
mov
test
icebp
mov
fsub
sbb
cmp
cld
cmc
lret
iret
movsb
loopne
adc
mov
fists
jne
mov
jp
scas
in
xchg
xchg
adc
and
inc
imul
inc
cmc
jb
pushf
sbb
xchg
imul
add
rcl
decl
mov
jns
dec
or
cli
pop
mov
jb
dec
lock
push
jbe
idivb
mov
test
sbb
fcmovnu
dec
adc
sub
mov
iret
jnp
int3
lock
inc
jp
ret
mul
aas
sub
push
add
das
sub
or
xor
xorl
gs
mov
mov
negb
outsl
enter
pop
out
sbb
pushf
out
icebp
mov
stc
lods
jp
jb
icebp
or
shlb
mov
fnsave
mov
lahf
lds
sbb
mov
popf
pusha
xchg
stos
or
cltd
es
aaa
lret
test
jmp
push
hlt
jp
loope
inc
jne
scas
add
jmp
cld
lret
or
xor
and
out
daa
inc
mov
lods
sbb
adc
movl
jnp
jnp
rolb
xor
fnstcw
mov
pop
mov
jbe
pop
cmp
sub
xor
sub
xor
push
fnsave
sbb
or
sub
out
or
pop
push
adc
addl
rcrl
lret
notl
ds
sub
mov
or
into
add
mov
adc
int3
and
xor
pop
cmp
insl
and
test
sbbb
flds
dec
pusha
push
xchg
jbe
mov
and
cltd
sub
and
in
dec
adc
sbb
test
std
fwait
daa
inc
out
ljmp
cmp
push
mov
scas
dec
divl
cmpsb
jl
adc
jmp
pop
push
fcoms
jb
stos
and
push
sbb
cmp
aad
and
inc
loopne
push
xchg
test
xchg
pop
in
in
mov
add
ja
ret
sbb
push
aad
decb
fcoml
insl
push
xor
test
jae
mov
mov
push
jnp
stc
or
sarb
test
in
repnz
xlat
jns
clc
fisttps
cltd
pop
add
and
and
mov
xchg
cmc
push
aas
mov
test
mov
cmp
shlb
je
cmp
and
lret
testl
dec
pop
dec
push
xchg
xchg
and
popf
pop
xchg
mov
lods
xchg
subl
iret
jnp
push
outsl
mov
shlb
adc
sbb
inc
xchg
ljmp
xor
mov
inc
inc
pop
rolb
cmp
xchg
fsubrl
pop
dec
inc
xor
cmp
clc
test
in
cmpsb
sbb
data16
and
adc
xor
test
jae
insb
into
jl
push
repz
pusha
imul
iret
or
and
add
pop
xchg
dec
or
icebp
dec
mov
or
icebp
fisttpll
in
arpl
loop
faddl
xchg
and
hlt
aas
nop
cmpsb
adc
pop
outsl
cs
cmc
dec
daa
xchg
sbb
insb
push
jbe
scas
dec
xchg
js
ja
xchg
and
stc
out
cmp
and
insl
mov
mov
cltd
out
fidivrl
lock
lods
bound
mov
and
sbb
dec
jp
jge
inc
push
sarl
subps
mov
dec
mov
es
sbb
shrl
push
mov
test
imul
scas
add
inc
mov
pop
adc
out
int3
shlb
aam
test
es
push
pushf
mov
sbb
lret
lock
mov
and
mov
ret
and
scas
shrb
adc
mov
stos
push
cltd
in
push
rcrl
hlt
pop
stos
imul
cs
hlt
add
or
jmp
sbb
enter
or
add
daa
aas
adc
jmp
mov
fstpt
incw
sti
loopne
or
mov
aas
daa
mov
jnp
stos
std
mov
pop
sub
adc
fildll
sub
mov
test
cmp
or
repnz
push
in
and
cwtl
lds
push
pop
fidivs
dec
xchg
mov
pop
cmp
ss
outsb
sub
cltd
adc
xchg
js
dec
jno
mov
add
sbb
pop
stos
mov
rcl
dec
daa
aad
leave
push
test
jp
inc
cld
mov
loop
enter
adc
pop
mov
mov
mov
jbe
push
inc
in
xlat
pop
xchg
xchg
jo
dec
cmpsb
sbb
xchg
mov
xchg
ss
arpl
shl
lahf
aam
xor
and
mov
stos
mov
sbb
popf
cmp
push
mov
xor
cmc
xor
xchg
nop
and
in
cmp
daa
adc
mov
push
mov
sub
dec
mov
imul
add
adc
sbb
sahf
stc
cmp
jnp
movsl
mov
cmp
leave
xchg
xor
insl
sti
and
cwtl
nop
sbb
clc
add
popa
lahf
xchg
popf
divb
dec
or
push
adc
in
sti
enter
sbb
push
aam
jae
sub
cmp
xor
in
ficomps
inc
push
push
aas
dec
addr16
in
xor
sub
add
sub
push
xlat
xor
cld
xchg
pusha
mov
das
enter
cmpsb
in
rorl
pop
xchg
xorb
jo
insl
jge
or
outsb
test
pop
inc
xchg
sti
pop
stos
das
hlt
in
xchg
cwtl
push
mov
xor
xchg
inc
xchg
mov
jecxz
inc
push
fld
and
jmp
je
pop
imul
adc
mov
lret
push
jb
cwtl
aam
mov
out
or
pop
fsub
mov
aad
and
mov
cwtl
cmp
xchg
pushf
and
fcomp
mov
fistpl
jmp
dec
mov
sbb
mov
lahf
ljmp
cli
sbb
sbb
aaa
push
and
mov
pop
clc
mov
shlb
popl
mov
shrb
mov
xchg
pop
clc
xchg
ret
jecxz
out
lahf
ljmp
inc
and
mov
dec
and
pusha
jae
shrl
cmp
push
xchg
bound
fidivs
loop
idivb
insl
adc
sahf
mov
test
mov
loopne
xchg
jge
push
jns
bound
loopne
neg
inc
ret
mov
fdivr
and
scas
push
mov
push
lods
mov
inc
hlt
push
jo
fidivs
push
pop
push
loope
pop
adc
jne
push
ja
xorb
fidivs
lock
or
imul
mov
xchg
push
push
aad
repz
jmp
jae
ja
dec
je
sbb
lea
fstpl
into
out
adc
cmp
mov
dec
cmp
jae
adc
lahf
loop
das
xchg
dec
stos
cwtl
adc
xor
push
setae
repz
aaa
sub
loope
mov
aaa
jne
push
inc
ficomps
xchg
and
insl
test
sub
cmpsb
sbb
cmpb
mov
cld
mov
mov
mov
es
sarb
mov
push
mov
and
ss
jle
xor
mov
aaa
pop
or
scas
lods
and
cmp
arpl
sub
out
jnp
inc
mov
mov
xchg
lahf
and
testl
pop
or
push
jle
dec
mov
mov
add
mov
punpcklbw
je
and
jmp
mov
xchg
stos
or
lret
fcomi
in
mov
mov
dec
add
and
pop
cmp
addr16
fbstp
test
aas
aas
sbb
cmp
imul
movb
insb
ret
in
outsb
fidivrl
xor
hlt
out
bswap
enter
call
inc
int
call
movsl
sbb
jns
rcrl
popf
lahf
xorl
popa
push
cmp
stc
imul
cli
mov
push
aaa
std
add
out
jge
and
or
and
and
pushf
je
aad
movsb
mov
mov
stos
pop
dec
int3
negl
in
pop
cmp
aam
rcrl
pop
jmp
push
stc
push
adc
inc
gs
test
insb
add
mov
ja
decb
setae
adc
aas
pushl
sti
aas
or
dec
enter
jmp
xor
mov
cmp
mov
sarb
scas
pop
sub
or
cli
cmp
push
je
call
test
pop
mov
outsl
add
data16
mov
mov
jnp
arpl
mov
add
or
add
es
jns
sarl
mov
jl
adc
pop
xor
mov
fcompl
cmp
in
scas
mov
xchg
jnp
mov
int3
cmpsl
mov
xchg
cmpsl
out
xchg
jp
jnp
gs
in
cmpsl
add
jmp
xor
mov
dec
sub
stos
jle
inc
daa
sub
scas
push
push
dec
add
cmp
mov
out
mov
xchg
scas
test
jmp
rcrl
out
cwtl
cmpsb
inc
movd
rorb
adc
rcr
in
cld
stos
out
mov
jns
push
sub
test
dec
cmp
leave
int
subl
sub
ds
jmp
or
mov
imul
inc
mov
fmull
imul
pop
push
aad
lock
sbb
sbb
dec
stos
sbb
arpl
cmpsl
decl
test
iret
ss
mov
cmp
nop
arpl
cmp
xor
xchg
or
cs
ret
and
ljmp
sub
fs
mov
cs
scas
mov
aam
fdivl
insb
pushf
or
insb
adc
mov
sarl
stos
arpl
dec
cld
testb
lret
scas
gs
negl
dec
pop
mov
cmp
mov
adc
subl
xchg
lret
push
jmp
sbb
mov
dec
sub
jecxz
mov
push
popa
mov
popa
push
jnp
imul
dec
aad
rcr
cmp
add
fcmovbe
pop
ret
mov
jp
adc
push
daa
xchg
jno
and
mov
scas
daa
repnz
in
sub
enter
stos
lods
int3
std
jno
sub
jg
dec
inc
sub
inc
pop
inc
inc
cmp
test
push
adc
cmp
clc
rcrb
and
jle
cwtl
pop
rclb
pop
sub
jecxz
fcoms
or
lock
mov
xor
inc
mov
ljmp
adc
sbb
push
and
clc
insl
loop
jno
push
test
outsb
pop
outsb
ss
dec
aaa
aaa
mov
cld
inc
xor
mov
cmp
jmp
int
shr
push
push
inc
mov
aas
sar
negb
sbb
imull
xchg
sahf
inc
push
adc
test
xchg
mov
or
pop
sub
inc
hlt
imul
mov
icebp
pop
loop
addl
call
adc
adc
das
adc
pop
gs
shlb
test
jle
stc
xor
jle
add
test
lahf
dec
out
xlat
push
xor
mov
scas
aas
adc
enter
fnstenv
push
cmp
mov
push
xor
add
shlb
sbb
lods
fisubrs
inc
stc
imul
jbe
out
dec
add
lahf
fdivrl
cmp
push
dec
xor
mov
jne
mov
jl
mov
mov
imulb
jae
into
xchg
sub
xor
lret
sbb
test
ja
inc
mov
lods
mov
sbb
add
cmp
stc
sbb
imul
add
sbb
ja
lock
es
or
and
stos
and
jns
cmc
xor
pop
sub
mov
xor
xor
pop
movsl
stos
test
arpl
inc
sub
xchg
loop
push
xor
sub
mov
sub
shl
fdivl
arpl
lds
sarl
pop
enter
mov
cli
stos
push
xchg
inc
in
sub
loop
out
js
xor
pushf
xorl
lcall
subb
and
lahf
mov
lds
mov
gs
mov
ret
sub
pop
and
cld
push
add
scas
imul
adc
fadd
lea
pop
mov
pop
or
fiadds
cmp
pop
or
inc
scas
ret
movsl
add
ljmp
cmpsb
nop
mov
push
cmpsl
xchg
adc
aas
jg
test
inc
test
bndldx
pop
js
hlt
cmp
ror
mov
sub
mov
sbb
add
das
test
and
push
or
aas
das
adc
aad
inc
xor
stos
mov
int
test
test
fdivs
mov
loope
sub
jne
and
push
lods
jnp
std
add
push
jns
sub
lea
mov
mov
dec
dec
repnz
cld
xor
pop
or
add
add
je
iret
inc
lds
ret
push
or
inc
test
add
dec
jo
fbld
mov
fwait
xor
outsl
xchg
pop
jns
lret
xor
mov
js
mov
lret
out
jg
fidivrl
loope
enter
jbe
stc
jp
mov
mov
fcoms
or
movsl
ret
aad
sbb
cmc
lods
je
fistpl
in
push
addr16
sub
mov
test
ss
fcmovb
sub
jle
fwait
dec
or
adcb
mov
orl
and
inc
rorb
mov
arpl
mov
push
insb
push
cmp
adc
sti
pushf
outsb
in
xor
cmpsl
or
clc
mov
decb
push
iret
mov
popa
xor
fisttps
mov
pop
mov
mov
fdivl
lahf
std
je
sub
jg
jmp
xor
mov
sbb
test
pop
aam
mov
ret
js
mov
test
push
jg
pop
jae
push
mov
pop
mov
mov
or
sub
adc
mov
push
xor
push
cmp
std
jno
sbb
xor
les
in
push
pop
leave
mov
mov
cmp
dec
push
orl
lahf
jae
adc
int3
in
lods
mov
xor
std
iret
sahf
test
cs
adc
or
enter
loopne
inc
mov
out
int
stc
mov
cmpsl
dec
mov
pusha
cwtl
jb
pusha
lods
or
cmp
andl
sub
andb
lea
adc
bound
pop
testl
adc
cmpsl
mov
fldl
sbb
push
je
cmp
jbe
and
xor
push
icebp
sub
push
xchg
adc
les
testb
aas
pop
mov
cmp
add
inc
inc
cmp
ret
push
sbb
fwait
push
inc
add
lods
imul
je
stos
loope
xlat
aaa
sub
xchg
sbb
movsb
pop
mov
aas
mov
addb
xchg
fidivrs
or
and
pop
add
and
sbb
rcrb
cld
or
inc
or
fistpll
iret
stc
movsb
dec
roll
loop
pop
mov
jge
mov
lcall
mov
fdivr
xchg
mov
xchg
daa
movsl
sub
rclb
jb
shrl
je
jmp
or
cmp
clc
shrl
add
out
push
rorl
adc
shlb
xchg
rorl
jbe
les
pop
in
jle
cltd
dec
addr16
sbb
push
mov
dec
mov
push
add
mov
pop
int3
and
mov
jmp
clc
clc
xor
jb
int3
das
inc
jl
iret
data16
sub
jnp
in
in
dec
cmp
das
and
mov
data16
mov
inc
inc
xor
daa
mov
pop
mov
aam
sahf
xor
xor
mov
insb
wrmsr
mov
add
mov
dec
loopne
push
jge
inc
test
flds
ds
mov
imul
cld
je
add
outsb
testb
mov
jl
imul
xchg
sbb
data16
lds
das
dec
dec
xor
scas
mov
icebp
or
xchg
es
and
push
push
inc
cmp
repnz
sub
sarl
mov
pop
and
cld
or
cltd
and
mov
je
enter
or
roll
shl
enter
lods
jg
cli
mov
inc
js
in
and
imulb
inc
ret
xchg
and
mov
cmpsl
sbb
mov
fwait
jle
out
fs
mov
adc
inc
jae
iret
bound
mov
push
stc
bound
cmpsl
dec
or
popf
push
push
xor
rcll
push
xchg
mov
bound
pushf
and
imul
jge
aad
insl
push
ss
jne
fucom
scas
gs
jnp
mov
int
in
adc
push
sub
daa
icebp
outsl
adc
pop
push
dec
inc
mov
lret
mov
test
rcll
clc
lock
xchg
mov
mov
jecxz
jb
sti
mov
xchg
xlat
das
mov
shll
push
mov
fs
cltd
push
mov
movsb
cld
movsb
lods
dec
add
out
cmp
pop
jne
mov
or
or
mov
orb
cld
cltd
xchg
ss
cwtl
mov
repz
or
jb
scas
sahf
dec
mov
rolb
pcmpgtw
xchg
or
sub
stos
fisttpl
jno
repz
fldcw
xor
cmpsb
les
inc
add
pop
icebp
jl
out
xchg
sbb
xchg
push
push
das
imul
outsl
outsb
add
sub
sarb
mov
pop
mov
jmp
inc
aam
push
dec
adcb
and
jp
fsubs
jbe
sbb
jne
imul
xchg
adc
xchg
add
divb
in
dec
mov
xchg
nop
push
fidivrs
and
inc
inc
or
jo
mov
cld
inc
shrl
push
cmp
xchg
insb
cli
test
add
push
pusha
aas
pop
push
rcll
pop
in
or
sub
pop
xchg
inc
popa
and
inc
inc
pop
cld
and
adc
ljmp
mov
cmpsb
add
notl
push
dec
mov
pop
push
loop
mov
hlt
cmpsb
xchg
or
fimull
xor
imul
pusha
jb
fimuls
mov
popl
popf
jge
inc
dec
ljmp
sti
test
nop
addl
mov
or
enter
pop
mov
sbb
cmp
adc
icebp
movsl
imul
push
cmp
out
ds
xor
fildll
pop
xchg
filds
push
mov
fnsave
les
lret
ss
push
sub
and
inc
dec
mov
add
pop
adc
shrl
repz
jae
cmp
mov
loope
roll
push
cltd
leave
mov
lar
cmp
outsb
push
test
cmp
outsb
xor
imul
push
icebp
dec
or
pusha
negb
sub
fsubrs
add
test
inc
mov
dec
jne
dec
adc
lods
pop
jge
sub
adc
sbb
or
outsb
push
xchg
xchg
incb
pushf
and
push
sbb
lret
pop
cmp
std
pop
xor
popa
add
jo
xor
mov
lea
mov
imul
inc
test
arpl
mov
mov
scas
mov
movups
shrb
mov
push
or
dec
dec
mov
push
sbb
push
mov
push
bound
cmp
in
push
pusha
pop
jbe
and
cwtl
insb
mov
outsb
aaa
xchg
jle
inc
mov
add
mov
mov
fcmove
inc
mov
xchg
stc
es
dec
add
call
insb
loopne
adc
shrl
jle
in
jmp
xchg
or
dec
mov
jno
sbb
xchg
cmp
mov
dec
stos
xchg
sbb
adc
or
adc
repnz
cmp
arpl
dec
jecxz
leave
mov
and
pop
mov
mov
inc
sbb
jae
xchg
stos
cltd
pop
das
push
push
lret
les
and
test
inc
mov
pop
jecxz
and
test
xchg
xchg
jb
sbb
repnz
dec
pop
cmp
xor
push
notl
jb
cmpsb
data16
enter
xchg
xor
fisubrl
mov
jecxz
fs
leave
and
sar
movsb
lock
add
mov
popa
jle
sarl
mov
or
loope
outsb
insl
xchg
and
leave
and
add
fmuls
mulb
add
inc
insl
dec
clc
in
test
mov
imul
jmp
aad
repnz
xchg
push
mov
enter
xor
mov
call
dec
xlat
int3
lahf
mov
or
xlat
sbbl
sub
pop
inc
add
and
pop
or
cwtl
insl
xchg
inc
cmp
push
fcoml
mov
outsl
shr
add
push
dec
test
dec
inc
insb
enter
mov
jp
sub
push
sub
or
or
int
cmp
jbe
cmpsl
out
jg
dec
xchg
mov
push
inc
pop
pop
addr16
push
inc
xchg
sbb
mov
pop
jp
push
mov
scas
fstpt
push
xchg
push
cli
mov
inc
jecxz
xor
ret
insl
sub
add
push
jg
mov
add
xor
xor
lods
fwait
lret
std
repnz
add
pop
mov
outsl
or
mov
cmp
mov
pop
int
or
mov
ja
push
xchg
cmp
push
mov
lea
leave
insl
loope
dec
outsb
pop
inc
xor
push
fstpl
fwait
popa
ljmp
out
sbb
xchg
pushl
test
sub
lret
jg
lock
push
ljmpw
gs
or
xchg
cmp
add
xchg
aad
lds
mov
xchg
push
clc
mov
loopne
and
test
mov
hlt
mov
pop
push
test
test
aas
xchg
xor
test
jle
add
scas
lret
push
cltd
push
add
dec
add
jge
inc
repnz
ret
nop
add
fisubl
jnp
push
push
or
mov
decl
xchg
icebp
mov
jbe
les
movsl
ss
sbb
fsub
and
add
cwtl
jns
push
repnz
mov
sub
in
ljmp
sub
imul
test
mov
popa
test
pop
fidivs
cmc
cld
jge
je
aaa
in
add
cmc
in
cmp
es
xor
adc
push
push
add
and
push
cmc
lods
push
push
ss
popa
mov
add
adc
ror
fs
mov
cmp
xorl
mov
cmpsb
mov
movsb
pop
xabort
xchg
add
filds
pop
dec
cmp
imul
mov
loopne
movsl
cmp
push
xorl
jnp
fistpl
ret
fs
fdivp
aas
xlat
cmp
xchg
adc
push
dec
mov
sarb
inc
cli
or
sub
inc
or
inc
push
cs
sbb
mov
mov
roll
xor
rcll
and
and
jnp
sub
les
imul
outsl
repnz
int
adc
jns
rolb
call
cmp
inc
test
stos
push
xchg
lahf
loope
movsb
data16
stc
mov
xchg
fisubrs
out
sbb
cmp
jo
lcall
and
mov
cmp
mov
dec
inc
pusha
or
add
insb
push
fildll
int3
popf
xchg
cmp
mov
add
push
and
lcall
mov
negb
mov
adc
mov
add
push
test
nop
fisttpl
imul
push
and
or
jne
xlat
xor
xchg
out
notb
aaa
fldt
cmpsl
push
xchg
add
icebp
and
or
mov
sub
mov
divb
jmp
sub
cmp
sti
xchg
lock
sbb
ds
dec
pop
and
aas
jb
cmpsl
loopne
xorb
loop
outsl
repnz
mov
scas
cmp
stc
cmp
je
push
mov
fwait
cli
pop
pop
jmp
cli
xchg
rol
xor
and
adc
jno
or
pop
mov
mov
jg
pushf
pop
add
addb
mov
pop
aam
mov
dec
sbb
adc
jb
mov
sub
ss
fstps
push
mov
pop
jg
lods
imul
daa
cmp
movsl
insl
aad
push
scas
bound
pop
data16
mov
fdivrs
cmpsb
lock
push
inc
lods
adc
push
sub
add
or
mov
jno
pop
loope
inc
mov
mov
mov
jno
pop
mov
cld
arpl
xor
test
rorb
inc
fnstcw
push
pop
xor
in
xor
jnp
add
call
fstl
or
xor
cmp
or
push
loop
ret
stos
mov
mov
leave
mov
and
enter
imul
add
ja
insl
test
cmpsl
pop
pusha
imul
sub
mov
pop
or
mov
or
pop
jge
stos
out
out
mov
cmp
fldenv
gs
shlb
inc
push
cmp
into
sbb
mov
sbb
or
mov
push
mov
jecxz
mov
mov
int3
xlat
jbe
lret
and
dec
out
idivl
fistl
adc
repnz
out
adc
inc
add
add
add
xchg
je
rol
pop
dec
jle
pop
and
sbb
data16
jnp
mov
lahf
fs
adc
or
gs
dec
into
lock
popf
fldln2
and
push
in
push
mov
pushf
aaa
aam
sahf
lds
push
arpl
lods
out
loope
pop
in
or
fsubs
cmp
mov
or
sub
cli
outsl
pop
cmp
stos
out
in
push
or
dec
sti
mov
or
movsb
test
xor
adc
add
and
mov
mov
leave
sbb
sbb
cmp
notl
xor
lods
cld
pop
in
stc
cld
add
fcomi
sbb
nop
dec
es
shll
add
push
adc
xlat
outsl
stos
mov
jmp
sub
jp
or
jg
insl
fidivs
lods
jge
and
ror
push
add
sti
outsb
mov
into
pop
test
rclb
cmp
sub
sbb
das
sub
inc
cmpsb
roll
aam
movsb
sub
mov
rorl
sub
inc
ss
jo
enter
out
cld
mov
push
push
xchg
filds
insb
jb
pminub
rcll
lods
mov
mov
cmp
push
mov
sbb
jmp
add
or
jg
xor
pop
pop
jns
call
arpl
sbb
or
cmpxchg
sbb
dec
cmc
mov
jbe
call
rol
jno
and
shrb
jecxz
xchg
or
xchg
xor
jge
insb
xchg
sbb
add
add
adc
mov
test
enter
pop
ljmp
cmpsl
push
xchg
cmp
out
xchg
mov
pop
jae
inc
push
adc
into
ror
pop
std
es
or
fnstsw
and
add
inc
or
adc
mov
dec
int3
leave
out
cmp
or
scas
nop
pop
cmp
in
push
sbb
scas
jae
add
cld
std
icebp
xchg
addl
mov
push
loope
push
and
and
mov
mov
jmpw
dec
push
mull
add
push
sbb
sti
popf
bound
aad
mov
shll
outsb
jae
popa
fmuls
stos
add
mov
adc
mov
xchg
push
aaa
jecxz
lds
cmp
mov
jmp
xchg
mov
or
jo
lea
enterw
loop
inc
call
push
cli
aaa
repz
jns
pop
xchg
test
pop
mov
das
imul
dec
popf
mov
shl
sbb
xchg
mov
and
push
cmp
mov
cmp
sub
das
loope
xlat
sub
frstor
fidivrl
xchg
fsubrs
xchg
test
jb
or
pop
sub
jge
cmp
cltd
ljmp
fldenv
in
pop
std
cmp
ds
ljmp
push
jg
icebp
or
push
nop
les
std
fldcw
and
xor
int3
fucom
addr16
insl
pop
cwtl
in
leave
mov
pop
xor
cmp
repz
mov
icebp
xchg
mov
jmp
add
cltd
xor
inc
lret
fistpl
mov
dec
jnp
sbb
xor
div
stos
je
pop
je
lds
out
seto
add
inc
pop
fimuls
push
sbb
xor
arpl
into
or
or
push
add
push
pop
mov
scas
imul
pop
les
xor
imul
pop
fwait
je
ret
and
aam
mov
add
mov
mov
ljmp
popa
push
jmp
jmp
push
pop
mov
mov
mov
pop
fwait
mov
and
sub
cmp
gs
add
xor
or
dec
lds
push
icebp
xor
inc
add
leave
cld
cmpsb
xor
imul
jecxz
clc
pushf
leave
or
push
mov
push
jne
dec
push
loop
lea
add
ficomps
push
pop
movsl
int3
scas
lods
inc
push
mov
loope
jg
loop
inc
addr16
jb
daa
popf
or
fldcw
sub
cmpl
push
cmpsl
xor
xchg
push
dec
fs
adc
mov
dec
cmc
das
push
inc
ret
std
cmp
jbe
inc
aas
jle
cmp
std
inc
jbe
mov
mov
lods
xor
and
lea
cmp
test
xorb
lea
and
sbb
xchg
mov
jle
add
and
mov
je
lret
je
mov
gs
mov
xchg
scas
mov
lds
pusha
ljmp
push
sbb
pop
xor
imul
fnstenv
mov
cmp
xlat
stos
inc
sti
sahf
push
lock
ret
aam
mov
fwait
xchg
imul
ret
lea
fistps
jae
rcll
adc
jno
lods
insl
out
cmpsb
push
movb
inc
je
ret
loope
add
nop
pop
shl
sbb
fists
jae
inc
xlat
inc
sub
fs
jbe
out
int3
aas
xchg
jmp
mov
pop
loope
sbb
push
push
icebp
pop
add
addb
pop
scas
scas
out
shl
lods
pop
nop
aad
push
jg
or
insb
data16
push
sub
js
jmp
ret
push
insl
popa
mov
cmp
jb
test
sar
int
mov
imul
cmp
xor
test
fsubrp
sub
mov
enter
insb
adc
mov
aas
pushf
pop
imul
outsb
add
scas
xchg
test
ja
inc
sub
mov
and
stc
andl
imul
cmc
or
es
or
lret
inc
lea
sbbl
sbb
or
cmp
mov
mov
in
roll
add
inc
into
imull
cltd
dec
adc
sub
popa
sub
xor
sar
in
out
jmp
imul
xchg
shrb
js
push
sub
xchg
xchg
test
pop
std
fdivl
pushf
jg
sub
sub
je
mov
cmp
adc
imul
dec
mov
negb
or
jo
sbb
call
rclb
xchg
or
cmp
ss
lea
jge
rcrl
notl
imul
jge
lahf
jne
rcll
push
push
push
ss
push
cmp
icebp
mov
jbe
js
out
arpl
scas
inc
popa
frstor
and
ds
jae
pop
add
data16
inc
pusha
es
je
in
cmp
into
xor
sub
pop
fcompl
dec
sub
cmp
push
addr16
iret
mov
dec
push
push
sbb
dec
sahf
addb
adc
mov
dec
dec
pop
aam
stos
push
add
pusha
fwait
push
adc
adcb
lea
sbb
xchg
mov
fs
push
sti
sbb
movsb
mov
or
out
dec
xchg
sbb
addr16
jmp
cmp
adc
enter
ffreep
inc
sub
pop
daa
inc
mov
jmp
cmp
jns
and
push
pop
mov
pop
xchg
in
hlt
adc
test
sbb
psubsb
jo
push
pop
xchg
pop
cmp
inc
xchg
in
les
mov
jge
jb
xor
fildl
cmp
subb
sarb
jmp
sahf
insl
mov
xor
jge
leave
xor
pop
shrb
sbb
popa
cmp
mov
daa
cs
pop
loope
cltd
pop
adc
lcall
imul
xor
dec
mov
out
fwait
cmpsb
mov
xor
ja
xchg
lds
dec
mov
bound
mov
jno
fs
cmpsl
stos
xchg
push
out
cmpsl
mov
les
mov
cwtl
mov
fmull
lcall
lock
repz
mov
xor
test
popa
out
sbb
lds
sub
les
pop
inc
lds
lods
push
rcl
push
add
sti
mov
push
ja
ljmp
andl
pop
mov
mov
xor
mov
popa
rorb
es
sbb
shll
cmp
or
or
xor
and
xchg
add
rcr
test
enter
xchg
pop
push
dec
aaa
xor
inc
inc
and
pop
and
dec
adc
out
xor
sbb
andb
jecxz
mov
lods
adc
cmc
in
shr
stos
sbb
pop
cmp
lods
lods
fmull
loop
inc
sbb
and
jns
or
hlt
cmpsb
xchg
jo
ds
and
int
ds
sub
ljmp
sub
test
sbb
aas
ljmp
cmpsl
fldt
cmp
outsb
push
xor
fidivrl
testb
add
inc
pusha
xchg
mov
imul
ljmp
jle
addr16
cs
fiadds
cmc
adcl
dec
push
gs
lahf
out
orb
pop
mov
lock
or
pop
mov
sub
mov
xlat
xchg
pop
jne
jns
xchg
sub
xchg
cmp
dec
xchg
std
fwait
adc
cmpsb
push
rcl
fldenv
xchg
cs
out
dec
xchg
dec
dec
pop
pop
lods
imul
xor
divb
rcrl
adc
cs
cmp
repz
push
dec
ja
cmp
xlat
mov
cmp
lods
fdivrp
iret
add
xor
sbb
sarl
aaa
out
lcall
fildll
in
movsb
xchg
and
xchg
mov
popl
jae
pop
pop
sbb
rorl
mov
pop
adc
lock
sub
shrl
imul
or
mov
sub
cmp
push
cmc
sbb
push
scas
mov
inc
jge
lds
aaa
out
dec
cltd
cmp
pop
jne
sar
sub
inc
in
and
insb
cwtl
in
pop
scas
sub
jp
jae
cli
mov
in
inc
mov
sub
das
dec
push
out
icebp
inc
dec
cmpsl
addr16
es
pop
js
push
cmpsb
loope
pop
jge
inc
outsl
cltd
hlt
bound
aaa
call
imul
push
addr16
popf
push
mov
stc
xor
xor
test
data16
fisttpl
je
xor
or
xor
daa
push
mov
into
rcrb
cltd
fisubrs
lahf
lret
out
push
sbb
andb
xchg
insb
int
jge
pop
xchg
mov
add
mov
mov
and
dec
shl
pop
jmp
fmuls
mov
sbb
and
shl
jmp
add
jmp
fistl
xlat
shr
icebp
rcll
leave
sbb
shl
loop
push
or
aas
jns
push
or
movsb
pop
lret
lret
sub
cltd
ss
ja
arpl
jo
pop
ds
push
outsl
sbb
xchg
repnz
popa
loop
shrb
gs
xchg
stos
or
lret
lahf
jmp
addb
lret
iret
in
push
jge
inc
mul
xchg
dec
mov
imul
inc
aas
sbb
add
out
lcall
pop
inc
sarl
orl
lods
jg
mov
sub
push
ret
push
mov
gs
lahf
inc
sbb
xor
dec
fisttpll
mov
insl
fimull
int3
cwtl
jns
mov
mov
in
shrl
sub
test
mov
jge
push
addr16
cmp
repnz
cld
xchg
out
mov
les
xor
and
jge
test
mov
mov
sub
out
test
adcb
xor
xor
fimull
cmp
mov
or
and
inc
fwait
pop
cmp
test
daa
fldt
cmpsl
fwait
mov
mov
push
adc
inc
push
cmp
xchg
dec
push
mov
lcall
add
fsubrs
imul
nop
xor
pop
mov
movb
push
jl
imul
pop
jnp
mov
mov
push
shl
push
addl
out
mov
inc
dec
ss
les
push
nop
lds
xor
xor
call
dec
push
fnstenv
adc
add
adc
outsl
out
lahf
in
jnp
add
icebp
jo
xchg
leave
mov
and
xchg
xor
fdivs
mov
inc
or
xchg
pop
insb
and
sub
adc
jns
icebp
mov
mov
lea
mov
aam
inc
adc
lds
xlat
mov
lahf
scas
cmp
inc
dec
mov
cs
shlb
sbb
pop
fmull
pop
xchg
cwtl
inc
push
ljmp
xor
push
jge
jns
xchg
add
push
pop
sarb
lcall
dec
cmp
into
xor
jns
xor
push
fs
jmp
je
jnp
insb
mulb
ret
aad
in
int
pop
lock
cs
negl
rorl
ja
jmp
cmp
in
or
stos
test
push
jmp
xchg
pop
pop
cmp
cmc
push
inc
ret
cmp
mov
out
adc
jmp
mov
dec
in
cmpsl
pop
pop
mov
icebp
mov
lcall
xor
in
enter
xor
xor
inc
ljmp
push
test
inc
pop
je
jl
mov
sbb
jbe
mov
insb
cmp
pop
xlat
jbe
add
pop
lods
inc
pop
adc
pop
ljmp
push
lds
jae
mov
cs
inc
adc
push
sub
pop
daa
inc
pop
popf
nop
push
fcoms
nop
stc
pop
jbe
in
lahf
aaa
pushf
and
or
clc
loope
lock
addl
pop
mov
repnz
loopne
test
pop
cmp
ds
add
xchg
push
cmp
dec
xorl
mov
mov
or
adc
sub
or
int
xor
adc
mov
shrb
sub
dec
push
pop
mov
and
push
xchg
mov
mov
xchg
cmp
push
sub
imul
shrb
add
lahf
fstl
cmc
mov
ficoms
dec
shlb
mov
loope
mov
mov
lcall
mov
inc
std
std
jne
dec
add
cmp
dec
fmull
das
inc
pop
movsb
movsb
clc
iret
xchg
xlat
pop
mov
xor
aas
fistps
mov
divb
mov
push
cld
adc
push
cld
sub
or
clc
lods
ret
imul
std
icebp
popa
cmp
pop
imull
push
imul
fucomp
ret
loop
test
cmp
inc
clc
cld
xchg
sbb
xorl
negl
leave
je
lahf
sub
mov
fwait
pop
xchg
push
pop
bound
mov
push
aas
test
dec
movsb
mov
cmpsb
lea
das
and
call
add
mov
inc
and
xchg
sub
jns
dec
sbb
hlt
jmp
fcompl
dec
imul
or
pop
insl
sti
icebp
repnz
adc
push
out
dec
pop
repz
scas
sbb
mov
jmp
lahf
outsb
jge
test
add
fnstcw
add
nop
stc
inc
test
push
push
pop
movsl
rcrb
pop
or
lods
lcall
mov
arpl
adc
dec
rcrb
push
call
lea
jnp
push
pop
fwait
ljmp
aam
lea
xor
les
add
decb
jno
fcomi
sub
aad
sub
lock
mov
or
fmul
popf
mov
or
sub
fisttpll
popa
sub
jae
mov
mov
imul
jbe
push
es
and
mov
mov
sbbl
ja
jl,pt
push
adc
adc
push
cmpxchg
icebp
divl
or
insb
xor
sub
pop
jo
cmpsb
sbb
decb
repz
cmp
fdivs
gs
adc
or
stos
je
ljmp
call
adc
pop
insl
or
ret
popl
filds
jmp
scas
push
inc
and
and
in
testb
and
mov
cmp
add
sbb
ss
movsb
dec
xchg
idivb
test
mov
insl
inc
jmp
sbb
mov
sub
roll
shl
mov
fs
pop
ret
enter
jecxz
sbb
jmp
sbb
xchg
dec
scas
sub
xor
cltd
outsb
addl
repz
push
mov
arpl
incl
mov
inc
cmpsl
out
xchg
cmpsl
popa
jg
xchg
xor
and
andl
lods
hlt
jne
in
mov
lret
aad
xchg
insb
iret
ss
in
xor
leave
lret
mov
cmp
shll
xor
hlt
insb
push
repnz
xchg
sarb
push
popa
les
cwtl
lcall
lcall
mov
sarl
fdivs
jle
divl
aas
std
sti
sahf
mov
mov
sbb
imul
ret
add
rolb
mov
in
fsubrs
aad
mov
fwait
xor
push
je
and
cmove
dec
into
cmp
nop
int3
adc
out
or
dec
loop
push
dec
add
adc
jmp
or
or
mov
sub
sbb
lcall
xor
mov
out
xchg
mov
mov
cli
fcoms
shlb
cmpsl
dec
hlt
stc
cmp
dec
cmpsl
shl
call
pop
fwait
imul
sbb
push
hlt
add
xor
test
cli
cmp
mov
jmp
pop
sbb
push
xor
cwtl
add
push
dec
and
push
sub
xor
cmpsl
add
iret
cmp
loopne
leave
and
cs
jnp
aaa
xor
xor
adc
repz
sbb
push
push
cltd
sub
push
pop
pop
fldcw
negl
cmp
pop
bound
or
pop
fisttps
cmpsl
jmp
push
cltd
sbb
and
xlat
sub
inc
pop
fistpl
sub
jnp
pop
add
ljmp
aad
in
sub
cmp
xchg
pop
jg
dec
jle
and
insb
mov
dec
pop
in
push
xchg
jecxz
mov
inc
and
fcomip
iret
add
hlt
iret
in
sarl
sbb
std
dec
cltd
loopne
push
aas
fsubl
push
pop
pop
call
push
xlat
loope
lea
popa
pop
pop
xchg
sub
inc
sbb
mov
in
les
cs
fdivr
cmp
push
jb
push
jnp
les
je
dec
push
loopne
dec
popa
cmc
jo
or
sub
in
mov
jecxz
jl
popa
std
test
in
mov
push
iret
pop
add
dec
fdivrl
inc
pusha
test
add
dec
test
rol
or
cs
into
xor
lret
not
clc
adc
mov
inc
leave
xor
jnp
lret
push
enter
sub
cmp
sub
inc
add
shlb
js
insb
adcb
sbb
arpl
mov
ret
test
fs
maskmovq
testl
mov
jae
popa
jge
shll
je
pop
dec
cmc
jnp
lock
fs
push
rdpmc
mov
fidivrl
and
stc
add
adc
xchg
inc
lds
mov
jl
clc
test
movb
cmp
in
mov
out
les
loope
out
pop
lret
mov
dec
xchg
inc
scas
lret
push
inc
sti
cld
imul
mov
nop
mov
out
mov
mov
out
xchg
xchg
or
cli
lock
insl
jg
repz
bound
movsb
jecxz
lods
and
xor
out
mov
push
and
and
fdivrs
xor
loopne
inc
mov
mov
out
add
mov
inc
cmp
js
lret
or
pop
je
push
mov
ficoms
test
cmc
pusha
in
out
mov
shr
inc
sub
aad
xchg
xchg
adc
jge
and
xor
cltd
mov
int
pushf
mov
inc
in
mov
mov
pop
dec
imul
lret
stos
mov
lret
push
ds
addr16
movsl
pop
fs
inc
rcrl
aas
mov
jmp
sub
imul
fwait
xlat
sbbb
in
cs
outsb
inc
out
stc
xchg
cli
stos
popa
xor
or
dec
jb
cwtl
into
pusha
pop
jbe
lods
loop
sbbb
push
mov
xchg
jnp
jmp
xor
mov
xor
push
fs
adc
gs
lock
jnp
aas
inc
test
push
sub
sub
pop
int
leave
loopne
lcall
and
shlb
pop
dec
inc
or
icebp
je
loope
sar
popf
les
jne
xor
loope
sarb
jle
cld
movsl
call
jp
clc
jmp
jnp
mov
xor
gs
cld
pushl
daa
dec
imul
je
jp
stc
orb
stos
bound
daa
jge
je
popf
nop
cmpsl
jnp
adc
or
inc
jbe
xor
adc
adc
jno
leave
repnz
cmp
adc
xchg
outsb
adc
adc
xchg
sbb
mov
inc
xchg
lea
ljmp
inc
mov
in
xchg
jnp
xchg
add
dec
mov
or
xlat
aam
inc
mov
mov
call
add
push
push
leave
int3
test
cltd
dec
xchg
mov
ljmp
or
xor
xorl
dec
pushf
cwtl
andb
inc
and
mov
xor
hlt
lock
test
mov
lret
movsl
mov
divl
stc
ss
sub
shlb
clc
add
sti
cmc
das
out
xor
int
mov
pop
pushf
sahf
cld
xor
mov
and
mov
js
and
scas
std
push
push
test
mov
jg
mov
clc
jno
std
push
pop
sti
mov
imul
loope
cld
out
sti
xor
mov
insb
incb
dec
sub
js
sub
push
divl
rolb
in
pop
sub
test
xchg
cmp
test
push
mov
in
or
scas
rcl
scas
ret
xlat
sub
xchg
xor
add
in
jo
pop
and
out
insl
mov
in
or
mov
stos
mov
pop
fadds
sub
cmp
imul
loop
add
add
into
and
or
add
pop
lret
sbb
lret
std
js
push
mov
add
sub
push
pushf
pop
mov
and
jnp
jecxz
lret
xor
xchg
xor
mov
in
into
mov
pop
das
push
flds
ret
xorl
xorl
mov
fnsave
mov
repnz
fbstp
adc
push
mov
in
adc
addl
cmpsb
cmpsl
pusha
es
dec
hlt
mov
xor
scas
mov
adc
or
push
mov
in
stos
push
mov
mov
cmpsl
insb
sbb
sarb
roll
dec
stc
push
subb
sub
cmp
fidivrl
fsts
sbb
inc
add
sbb
subl
js
into
xor
insb
inc
mov
sti
sbb
popa
dec
or
loopne
xchg
cmp
push
cld
fwait
or
xor
ljmp
cltd
jnp
loop
pop
daa
xlat
aad
nop
cltd
push
or
mov
sub
lret
adc
cld
jae
mov
lret
gs
xchg
jns
pop
push
pop
push
cmp
dec
xchg
test
inc
out
adc
mov
jp
out
jno
adc
push
push
mov
push
scas
repz
ffreep
les
cmp
movsl
fstpl
rorb
mov
je
pop
stc
dec
mov
inc
cmpsb
test
sbbb
in
stos
adc
push
jecxz,pn
pop
or
cmc
repnz
mov
subb
dec
and
jmp
xchg
sbb
jp
call
jg
or
and
mov
inc
mov
je
or
inc
or
in
fidivrs
lret
repz
push
inc
inc
or
les
testb
fnstcw
dec
adcb
cmp
in
mov
xchg
ret
or
pop
mov
mov
loope
ss
aam
jp
dec
mov
inc
sbb
mov
rolb
mov
sbb
outsb
lcall
xchg
lea
stos
inc
jns
xchg
adc
mov
or
sbb
xor
jns
mov
inc
mov
mov
stos
lods
mov
xor
mov
mov
sbb
jge
pop
jecxz
xor
sbb
stos
or
push
cmpsl
out
stc
insl
pop
loope
iret
jle
int
xchg
repz
idivl
jbe
and
jb
les
add
inc
imul
rcl
fldcw
imul
fmull
xor
jp
test
sbb
mov
dec
mov
lahf
pop
out
and
add
dec
jecxz
mov
add
daa
aas
outsb
fldcw
mov
dec
pop
scas
loopne
adc
cmpsb
mov
lret
or
adc
mov
loope
sarb
out
pop
cmc
fwait
arpl
pop
mov
insl
adc
add
test
mov
cmc
add
das
fcoml
repnz
mov
lahf
aas
outsl
dec
out
push
sub
jbe
fwait
push
cmp
orl
mov
sti
cmc
inc
push
in
or
lods
cmp
mov
push
and
mov
loop
ret
push
push
inc
adc
xor
jmp
fists
sbb
jp
sbb
xlat
adc
sbb
mov
bound
fs
sbb
mov
stos
gs
outsl
cmp
xlat
or
je
mov
mov
test
in
das
adc
adc
sub
and
push
mov
mov
std
cmp
add
pop
repz
sti
stc
repz
mov
mov
inc
cmp
out
jmp
outsl
roll
imul
and
ss
das
cmpl
dec
jp
jae
jbe
cwtl
jp
sti
dec
movsl
movsb
pop
jo
adc
leave
mov
leave
xor
or
mov
sub
test
gs
or
sahf
dec
neg
rcrb
popf
jmp
jb
das
push
aaa
scas
jecxz
add
mov
lret
pop
stc
iret
out
sbb
jmp
ret
sbb
jae
jge
in
xor
fnstcw
mov
mov
test
push
sub
mov
xorl
in
data16
incb
adc
pop
sub
xchg
pop
daa
mov
notl
lods
cmp
mov
fdiv
adc
in
jne
scas
test
ss
mov
adcb
js
push
jno
movsl
hlt
lods
adc
pop
cwtl
neg
jmp
rorl
fdivrs
jns
insl
dec
and
enter
mov
cltd
fisttps
int3
dec
ja
jne
jp
mov
cli
in
add
add
dec
mov
pop
sub
pop
xor
ja
pop
arpl
push
sub
decb
mov
mov
xor
sbb
jp
pusha
sub
std
sti
mov
gs
fldcw
inc
xchg
in
je
insb
cmp
push
fisubrl
sub
mov
mov
sub
mov
or
mov
jnp
lret
cmp
xor
test
rclb
fucomp
jl
pop
inc
out
push
shll
cwtl
xor
jp
mov
ret
out
push
popf
push
sahf
inc
je
call
idivb
push
push
imul
jmp
lcall
ljmp
and
imul
je
jo
mov
inc
dec
adc
pushf
cmp
xor
inc
push
gs
data16
or
jp
push
std
pop
shl
add
push
subl
cmpsb
add
scas
std
iret
cmp
sub
mov
mov
ret
int3
es
xchg
scas
pushf
mov
stos
xchg
test
mov
lods
in
or
cmp
sbb
and
push
aas
pop
push
mov
jl
adc
rcll
mov
leave
adc
jecxz
and
es
rorb
mov
mov
mov
jae
les
fiadds
xor
ja
add
pushf
into
pop
loope
cld
jp
loop
lds
repz
icebp
test
add
pop
mov
push
sbb
sar
push
jae
mov
add
mov
jle
insl
imul
mov
push
mov
push
pop
inc
cmp
aas
sub
mov
cmpsl
or
arpl
cltd
push
sbb
and
push
jo
gs
sbb
and
ret
sub
push
ret
stc
jbe
mov
enter
add
adcb
ljmp
dec
inc
into
xchg
jbe
lea
lods
add
into
jnp
nop
dec
js
outsb
xor
mov
ds
xchg
enter
aaa
stc
into
ja
insb
scas
hlt
xchg
mov
test
in
mov
fdivs
les
adcl
sub
xor
mov
mov
repz
xchg
sub
enter
jne
call
cmpsl
loope
aas
lods
je
push
lcall
data16
pop
rcll
push
dec
dec
fldenv
bound
dec
test
aad
jns
in
fdivl
sahf
cld
mov
int
or
sub
dec
jae
lds
jge
push
sub
cmpsb
push
xchg
pop
pop
or
xor
mov
jb
lock
add
pop
push
test
andl
ret
sbb
test
cmp
lret
jo
roll
cmpsl
adc
sbb
or
jl
rcll
push
ficomps
inc
int
jne
push
fs
sub
ds
adc
xor
roll
aam
jne
xchg
push
xor
or
icebp
mov
cmp
mov
jge
je
insb
mov
cmc
jns
xchg
mov
lods
and
add
iret
sbb
xchg
and
cmp
jnp
xchg
lret
cld
cmp
nop
pop
inc
xor
mov
scas
leave
loopne
mov
hlt
jns
cmp
xchg
dec
imulb
repz
lahf
dec
imul
xchg
pop
ljmp
sub
sahf
imul
mov
dec
push
sub
push
adc
imul
dec
addr16
mov
pop
xchg
mov
ret
mov
inc
sar
loopne
cmpsl
test
outsl
pop
and
test
xlat
adc
dec
sbb
add
pop
repnz
dec
jnp
mov
leave
icebp
adc
dec
lahf
or
lret
cmp
cmpsl
icebp
adc
ss
mov
push
push
sbb
jl
jl
lcall
js
and
or
inc
mov
rclb
adc
mov
adcb
repz
sbb
je
jns
insl
sbb
add
cmpsb
outsw
xor
cmpsb
jnp
jae
jg
popf
dec
mov
cltd
cmp
call
ret
xor
popa
and
scas
pop
mov
js
out
pushf
jnp
xor
adc
ret
sub
jb
push
imul
push
aam
dec
jns
in
mov
out
mov
sbb
xor
outsl
or
inc
adc
jle
sub
jns
dec
aad
inc
sbb
std
mov
cmp
mov
loopne
aad
test
add
mov
sbb
push
add
sbb
popa
mov
cld
in
fcomps
xchg
and
sub
aaa
inc
ljmp
rcll
test
jg
lea
in
popf
xchg
xchg
adc
lock
add
ss
data16
mov
js
jecxz
pop
icebp
outsl
rcr
xchg
pop
stc
in
clc
lret
dec
adcl
xor
pop
lock
pop
incb
pop
lahf
lods
sbb
xchg
jecxz,pn
xor
lock
loope
push
push
cmpsb
mov
inc
sbb
aas
pop
sub
adc
sahf
mov
xor
push
mov
scas
std
cmp
add
and
xchg
and
sbb
cs
and
push
and
sub
rclb
sbb
push
fildl
fiadds
fwait
aas
dec
mov
xor
enter
push
lahf
xchg
lods
xchg
jbe
push
adc
dec
xor
fstl
bound
add
insl
mov
in
nop
xchg
push
and
jmp
cld
fnsave
sbb
ret
mov
gs
lods
lcall
nop
in
lods
ret
sub
dec
pop
pop
pop
ficompl
push
mov
push
or
mov
push
dec
push
push
inc
inc
lods
mov
xchg
pop
scas
jge
mov
mov
imul
xchg
cmp
outsl
adc
xlat
shrl
stc
mov
xchg
int
xorl
mov
jno
inc
push
add
jle
xor
sbb
xchg
inc
into
bound
adc
jno
add
adc
fidivl
push
sub
inc
sub
stos
xchg
in
dec
pop
popf
jg
or
or
lcall
cmpsb
mov
mov
repz
jmp
mov
test
cmp
out
push
aam
push
lea
outsb
lcall
in
inc
or
and
movsl
aas
inc
pop
adc
pop
xor
int3
sbb
fs
sbbb
mov
pop
div
sbb
or
mov
addr16
loop
dec
jmp
push
int3
inc
test
mov
sti
pop
js
cmpsb
fwait
pusha
jl
or
outsb
cmp
add
andb
lahf
jae
lret
pop
xchg
test
dec
and
pusha
cld
add
mov
stos
mov
fiaddl
mov
mov
pop
cltd
mov
add
xchg
add
mov
mov
inc
mov
and
xor
sbb
into
andb
sub
adc
stos
fisttpll
add
sarl
add
or
clc
cmc
jb
and
add
cmp
imul
lret
or
pop
stos
jbe
cmp
in
pop
aas
sub
les
mov
sub
stc
sbb
add
sub
xorb
lret
loop
lds
ds
cli
or
jb
jns
xchg
inc
out
call
in
aaa
xchg
pop
fisubs
pop
dec
in
add
mov
loope
int
inc
xorb
das
popf
cmp
pop
rcrb
adc
mov
into
xor
jl
xor
idivb
jmp
movsl
pop
push
pop
lret
dec
lcall
loope
xchg
sbb
sub
jg
mov
xor
imul
sbb
icebp
fsubrp
xchg
lcall
mov
cs
jbe
ds
dec
inc
fcoms
cld
stc
rolb
xor
mov
aad
shlb
insb
sub
sbb
mov
cmp
jle
out
jmp
ljmp
clc
ret
jp
repnz
add
cmp
or
or
daa
out
xor
pop
lret
mov
lcall
dec
dec
cmp
out
cmp
jl
fidivl
mov
push
imul
xchg
js
pop
shll
addl
outsl
fmul
bound
lcall
push
cmp
or
ret
jmp
daa
push
adc
jbe
jmp
addr16
test
sti
inc
sbb
cmp
daa
jnp
inc
loope
clc
jne
fdivr
and
xor
mov
fiaddl
mov
jo
out
stc
stos
pop
mov
fcomps
loopne
lcall
or
or
fisttpl
jg
loopne
fwait
into
dec
pop
mov
push
and
adc
pushf
adc
jns
xchg
gs
mov
pushf
loop
push
mov
mov
or
shlb
sbb
cmpl
ljmp
cmp
pop
fidivs
in
xor
aam
pop
pop
pop
test
push
or
ret
decb
xor
mov
movsl
dec
or
lock
out
jnp
stc
enter
int
jno
mov
lods
std
stos
aaa
and
enter
inc
mov
out
xchg
sbb
imul
es
out
mov
call
xor
les
imul
imulb
mov
gs
cli
xchg
lar
push
mov
and
out
lahf
xchg
in
push
sub
mov
adc
ret
xchg
jbe
mov
gs
mov
shll
dec
or
xchg
divb
jmp
jg
pop
mov
test
add
mov
cli
inc
mov
pop
xchg
jae
adc
push
cli
pop
fmull
int3
xchg
xor
sub
and
push
arpl
or
dec
dec
xchg
dec
push
pop
mov
arpl
mov
lcall
out
scas
aad
and
jmp
out
lret
fdivrl
add
add
mov
dec
jecxz
or
rorb
cmp
nop
add
mov
mov
adc
lea
push
push
or
sub
lods
and
popl
in
xor
fcmove
fnstenv
loope
add
jge
or
sbb
in
adc
dec
sbb
cli
and
out
cmc
dec
scas
xor
aad
loopne
les
push
push
xor
pushf
push
lahf
addr16
fwait
test
dec
imulb
mov
stos
clc
mov
jecxz
adc
xor
mov
fwait
xchg
mov
gs
mov
aad
jbe
es
push
in
testb
mov
cmpb
push
and
pop
and
lods
xchg
mov
push
testb
and
cmovge
xor
pop
adc
dec
inc
mov
jb
fs
in
or
jl
and
add
ja
and
mov
imul
or
mov
xlat
mov
add
fldt
or
and
pop
movsl
lret
adc
data16
mov
aas
cmpsb
in
cmp
mov
pop
mov
int
mov
sti
mov
fs
and
fcompl
cltd
pop
repnz
sub
mov
pop
jns
push
add
adc
mov
js
jb
sub
hlt
loope
ror
and
pop
xlat
xor
sti
pop
in
cmc
fimuls
mov
mov
in
sbb
pop
cmp
mov
jle
push
and
psadbw
dec
push
sahf
xchg
mov
popa
sbb
xor
adc
in
push
sti
stos
pop
inc
jmp
sbb
test
add
mul
popf
pop
fwait
and
push
fmulp
es
pop
orb
sbb
sub
arpl
cmpsl
popa
xorl
lcall
xchg
pop
push
mov
or
pop
nop
bound
stc
adc
jnp
cmp
lods
test
push
std
icebp
stos
mov
std
mull
pop
in
ss
jae
adc
push
add
imul
mov
in
inc
xlat
data16
pop
shll
push
fsubrl
lods
jno
test
test
xchg
mov
gs
adc
push
jne
std
sbb
xchg
sub
jae
iret
dec
inc
cmc
mov
cs
inc
in
lods
cwtl
loopne
push
pop
fimull
push
push
popf
push
jp
repz
xor
sbb
out
lret
ljmp
dec
std
cmpl
mov
outsl
dec
call
add
inc
mov
and
subl
lock
sbb
push
mov
ljmp
xlat
xchg
lret
rolb
xor
or
mov
stc
inc
fdivr
not
adc
popf
and
xor
inc
shlb
push
scas
pop
stc
cmpsl
in
jnp
fisubl
ds
xor
sbb
cltd
dec
jbe
aam
insb
sbb
andb
inc
loop
in
popf
mov
xor
repz
push
popa
jl
in
jmp
fldt
and
push
lea
repz
aas
jmp
or
loopne
leave
cmc
ja
xchg
add
mov
imul
and
ss
xor
and
mov
adcl
adc
call
movsl
add
lret
rcrb
mov
pop
es
xlat
clc
and
mov
adc
sub
test
inc
int3
dec
stos
mov
jge
mov
rorb
scas
adc
inc
pushf
cmp
mov
int3
js
xchg
testb
push
fcmovu
loop
adc
bound
es
test
mov
jmp
xor
test
mov
bound
jecxz
inc
cmpsb
pop
mov
scas
jp
enter
fsubrl
and
or
lea
popa
mov
int3
sbb
std
loop
cmpsl
jo
jns
ja
bound
ss
push
dec
imul
mov
cs
push
sbb
loopne
xchg
jg
aaa
xchg
adc
jnp
cld
fadds
dec
negl
and
icebp
mov
pop
sahf
in
jg
shrl
stos
movsl
mov
in
adc
std
push
sbb
pop
arpl
les
xor
xor
rcrb
xchg
sahf
fnstenv
lahf
adc
mov
pop
sub
dec
ja
daa
movl
xchg
sub
out
pop
imul
jg
xchg
sbbl
arpl
popa
sbb
jp
push
popl
mov
cmp
mov
movsl
cmc
js
adc
test
or
xor
xchg
mov
xlat
lahf
jne
call
in
jae
in
in
jl
ja
jae
or
call
ret
pop
jno
lret
cld
mov
dec
inc
jns
outsb
xchg
jge
loopne
cs
jge
js
test
lods
add
test
mov
or
xor
pop
in
scas
pushf
popf
insb
filds
xor
sub
faddl
xor
cwtl
cmp
rcll
mov
loop
jae
hlt
icebp
lds
sahf
orl
push
shrl
mov
decb
dec
push
inc
dec
add
pop
loope
sti
push
mov
pop
add
scas
mov
cwtl
stos
inc
push
fs
push
in
imul
daa
ret
add
es
xlat
push
cld
mov
lods
push
mov
pop
dec
aaa
jg
or
add
sub
pop
mov
pop
or
pushf
sub
testb
push
sub
lahf
fcoml
xchg
push
sti
mov
repz
ja
aaa
jp
in
sub
inc
movsl
hlt
loopw
push
iret
outsl
out
rorb
loopne
stos
xor
lock
or
dec
pop
shrl
push
lea
iret
jae
popa
mov
out
pop
jne
cmp
dec
clc
stos
mov
add
packssdw
mov
daa
mov
out
sbb
hlt
sbb
pop
jg
out
jmp
mov
orl
dec
adc
push
andb
mov
and
xlat
cmp
cmp
mov
adcl
add
lea
push
fildl
pop
ja
push
xor
mov
jmp
repz
and
push
xor
pop
push
je
cmp
xor
push
inc
adc
and
lret
jecxz
pop
inc
lods
adc
icebp
fcomps
call
push
js
out
jne
movsl
and
and
das
xchg
loop
dec
add
cmp
imul
pop
xchg
push
ret
test
cmpsl
sub
sbb
int
insb
lods
dec
ror
sbb
pushf
loopne
sahf
data16
cmc
mov
cld
out
jg
ljmp
addr16
xchg
imul
jae
xchg
das
mov
sbb
mov
clc
into
and
or
mov
or
into
lods
fwait
icebp
add
lock
lods
pop
ficomps
nop
hlt
sbb
mov
movsl
or
xchg
insl
mov
xlat
dec
mov
and
push
rcrl
push
movsb
jge
addr16
xchg
xchg
push
push
stos
mov
jmp
adc
and
jns
adc
ret
sti
movsb
xchg
scas
mov
xchg
and
fisubl
std
fs
inc
leave
arpl
testb
std
pop
or
mov
repz
leave
loopne
push
int
rcrl
inc
mov
out
pop
sub
pop
in
scas
jb
or
scas
cmp
gs
or
jnp
pop
dec
loopne
out
out
insb
daa
fstl
push
mov
andl
cmpsl
fcompl
mov
jecxz
cmc
pushf
loopne
push
push
repz
adc
movsb
cmp
ljmp
push
xor
ljmp
pop
movl
ficoms
mov
lret
mov
jecxz
mov
inc
add
into
inc
lret
dec
ret
movsl
push
push
sbb
into
sub
jmp
xchg
xor
ds
lods
std
push
xchg
dec
outsb
scas
xchg
into
mov
shll
push
js
xor
jmp
data16
pop
data16
ficomps
dec
jecxz
pop
adc
enter
hlt
add
inc
add
mov
pop
cwtl
cmp
inc
dec
mov
jge
cmp
sub
xchg
out
fs
repz
pop
std
out
call
cli
bnd
lret
xchg
dec
and
dec
pop
mov
pop
cmpsb
fs
stos
push
xchg
addr16
jg
add
mov
lods
or
sub
mov
aam
enter
mov
test
xchg
adc
push
mulb
push
adc
in
jge
jmp
push
scas
mov
push
andw
or
outsl
inc
pop
ds
into
mov
push
ret
xchg
xor
shlb
pop
jle
push
xchg
cmp
pop
out
push
add
mov
xor
std
mov
shl
push
jnp
stos
jg
out
out
in
lods
mov
sbb
add
int3
loopne
push
dec
jge
test
cld
or
inc
add
push
push
mov
push
or
or
sub
cmpsl
xor
cmpb
in
push
add
cmpsb
xlat
xchg
movsb
lods
sahf
xor
mov
sub
add
in
adc
lcall
mov
aam
pop
ds
jnp
mov
cli
movsl
and
pop
xchg
jle
cwtl
xchg
fcmovu
std
repz
xor
nop
sub
clc
push
mov
and
leave
pop
jg
ds
jge
mov
add
ss
mov
ja
lock
subl
mov
clc
loopne
std
out
add
loopne
in
lds
nop
mov
xchg
sbb
push
ret
mov
xchg
movzwl
dec
rcl
lcall
mov
xchg
or
movsb
sub
mov
jno
lds
aaa
clc
scas
jne
sbb
cwtl
test
xchg
push
icebp
fdivrl
or
cmp
test
ret
fsubl
scas
lods
jns
dec
out
push
mov
movsl
mov
cmpb
cmp
add
or
enter
or
mov
xor
jb
jecxz
cmpsb
movsl
jl
jp
sbb
sub
adc
cs
mov
or
mov
jl
repnz
jbe
mov
fwait
shll
inc
mov
lahf
pushf
daa
sub
push
mov
rcrb
inc
inc
rclb
jbe
es
aam
rcr
sbb
lea
push
outsb
insl
adc
int3
cs
inc
push
jbe
mov
xor
or
int
pop
jae
bound
xor
mov
lods
push
sbbb
push
pop
iret
jne
jbe
adc
mov
cmp
dec
add
js
sub
pop
inc
imul
adc
pop
adc
mov
mov
mov
pop
imul
cltd
dec
dec
and
jge,pt
add
pop
popf
mov
lret
inc
pop
cmp
dec
mov
and
gs
fadds
sub
cmpsb
in
xor
pushf
mov
cwtl
scas
mov
pop
es
shlb
xor
dec
fildll
mov
in
sub
mov
jge
test
ss
das
lea
arpl
dec
test
jne
or
and
sbb
sub
adc
rolb
loop
leave
push
std
leave
jp
cli
cmp
cmpsl
notl
dec
fidivrs
add
cmp
xchg
insb
les
xor
cwtl
xchg
addr16
popf
scas
test
mov
mov
outsb
push
ficoml
jnp
cli
inc
inc
orb
jnp
lods
sbb
cmp
pop
adc
dec
mov
mov
cltd
mov
adc
inc
cmp
jno
sub
pop
in
mov
or
xor
cltd
out
add
xchg
ss
out
xchg
imul
cmpsl
es
xchg
js
xchg
push
xchg
pop
jae
test
xor
push
push
pop
std
scas
xchg
popa
xchg
mov
lods
xchg
jne
cmp
loope
pop
push
sbb
and
ret
rcl
add
mov
lods
sub
shlb
pop
add
imul
mov
cmp
pop
inc
push
push
cwtl
in
jno
daa
mov
inc
cmp
test
popa
mov
sub
mov
and
lahf
out
xchg
jge,pt
sbb
mov
push
int3
pop
and
ret
movsl
cmp
aad
lahf
pop
and
rol
xchg
mov
fldenv
xor
pop
rcll
inc
mov
add
nop
pop
dec
pop
inc
or
jg
fistpll
int3
push
daa
dec
popf
scas
iret
push
pusha
insb
imul
dec
shl
test
or
cmp
in
arpl
test
outsb
mov
pop
sub
scas
std
jg
and
or
pop
shll
lds
imul
orl
cmpsb
mov
inc
cmp
mov
push
dec
pop
arpl
cmpsb
cs
lds
cltd
and
sbb
mov
and
int
mov
sti
pop
add
jbe
scas
mov
stos
cmp
push
std
pop
adc
jl
aas
push
inc
sub
orb
inc
mov
xorb
lret
stos
push
lcall
out
add
cld
andl
loopne
mov
fcmovb
xchg
mov
lcall
dec
sbb
push
and
or
ds
adc
sbb
sti
lds
nop
out
stos
pop
or
and
popa
fistl
cli
ret
xrelease
outsb
fsubrl
or
jle
fstp
mov
repnz
cmp
shll
push
mov
push
xor
test
push
das
imul
cmp
in
js
add
jne
outsl
fstpl
mov
movsl
lcall
sub
nop
cmp
xlat
mov
sbb
arpl
xchg
ljmp
call
fwait
adc
jmp
mov
out
jns
or
gs
pop
add
into
inc
jns
fisttpl
jmp
jp
dec
jb
add
out
xchg
shll
adc
pushw
mov
into
stos
inc
test
ds
sbb
push
ljmp
fcom
nop
xchg
xchg
and
sub
pop
mov
xchg
inc
push
pop
loopne
xor
add
pop
jge
or
push
lods
or
imul
mov
add
mov
lret
lret
sti
jmp
pop
jecxz
test
mov
mov
xlat
xorb
cmp
fadds
imul
cwtl
fcmovnbe
jnp
test
popa
mov
lods
int
popa
and
mov
mov
push
sub
add
mov
xchg
push
stos
push
mov
and
inc
jl
sbb
jns
ja
inc
fsts
fdivrp
pop
gs
enter
out
sub
cmp
iret
enter
adc
lcall
add
add
lret
jbe
mov
mov
sub
mov
cmp
jb
insb
popa
lret
or
jmp
or
xlat
aam
push
xchg
pop
aas
fisubl
inc
out
stos
mov
xchg
lret
cltd
jecxz
nop
push
xchg
aad
dec
das
loopne
cmp
xchg
push
test
push
mov
adc
bound
aad
subl
hlt
adc
and
xchg
pop
jb
mov
movsl
pop
fstp
jecxz
inc
adc
mov
test
mov
lds
and
ret
push
sbb
clts
decl
mov
mov
cmpsb
inc
cmpb
mov
push
iret
sbb
out
sub
popf
ret
lret
sar
sarb
jecxz
xor
jle
out
dec
adc
push
insl
insb
add
mov
aam
inc
pop
push
cltd
icebp
popf
out
fldcw
adc
jle
pop
inc
in
incl
test
dec
fucomp
rep
aas
xchg
mov
jmp
repnz
into
cmpsb
pop
addl
cwtl
push
pop
pop
mov
in
data16
sbb
adc
pop
xor
jo
clc
rcll
cli
rclb
push
and
cmp
sbbb
inc
push
add
out
outsl
lret
add
test
mov
mov
nop
mov
inc
stos
mov
mov
fildl
adc
add
movsb
pusha
xchg
mov
sbb
rcl
xor
and
leave
mov
js
outsl
inc
mov
jp
xor
cmp
sahf
xchg
cld
adc
push
imul
or
sbbb
fimuls
mov
int
stos
scas
rcl
pop
pop
mov
inc
fidivs
dec
mov
jmp
ret
adc
testl
arpl
pop
jae
sub
sbb
or
push
adc
jb
int3
dec
popf
or
nop
xchg
testl
addl
inc
push
loop
aam
and
cmc
ficoms
popf
cs
out
inc
iret
je
jae
jle
xchg
cmp
xchg
add
cld
fists
ljmp
push
lds
ljmp
pop
dec
dec
cmpsb
sub
sti
fldenv
cmpsl
xor
shll
xchg
mov
call
sub
addb
repz
decl
ffree
pop
dec
lret
inc
outsb
call
inc
lcall
or
outsb
rolb
ss
iret
cwtl
adc
pop
sub
jb
stos
js
jne
jbe
mov
movsb
js
lahf
hlt
mov
adc
xor
pop
cmovne
test
xor
push
lret
add
out
daa
stos
pop
jecxz
repnz
mov
push
popf
insb
push
xchg
aaa
jmp
insb
out
aaa
adc
mov
adcl
cld
aad
adc
scas
rorl
in
sbb
mov
inc
stos
divb
mov
and
fwait
mov
pop
mov
push
pcmpgtw
shlb
jle
inc
orl
xchg
dec
mov
push
shll
or
pop
ftst
sub
test
cmpsl
mov
in
push
mov
in
or
xchg
sti
decb
out
mov
lds
insb
les
xchg
seta
mov
cs
in
mov
lods
dec
pusha
mov
and
in
popa
cmp
mov
inc
xchg
test
lret
lret
push
dec
pop
cltd
xchg
push
inc
adc
in
push
jbe
cmp
mov
icebp
push
jns
inc
inc
es
icebp
aam
sub
fdivrs
xchg
scas
sub
movb
scas
movsl
jno
js
pusha
push
je
mov
in
dec
ror
dec
mov
fisubs
repnz
jmp
testl
xorb
imul
fstps
ret
push
push
sub
aad
pop
out
push
mov
sbb
mov
ffreep
push
xchg
mov
cmp
jg
push
mov
jle
xchg
cltd
mov
push
fdivrp
stos
aad
mov
enter
and
int
push
mov
adc
inc
xor
std
pop
int3
pusha
pop
into
jecxz
pop
andl
ljmp
ja
mov
xchg
arpl
lahf
arpl
xor
mov
jmp
lds
sbb
fs
bnd
xchg
xchg
mov
outsl
negl
popf
sub
insb
inc
arpl
mov
add
push
or
mov
mov
jge
stos
in
add
lea
mov
icebp
stos
mov
sbb
add
cwtl
icebp
add
ficoms
scas
jp
arpl
adc
cmp
test
push
lret
xor
call
movsl
jne
cli
aas
xchg
or
pop
mov
and
push
jno
dec
xor
int
js
and
adc
subb
nop
out
ss
in
cld
loop
pop
std
mov
pop
fwait
shrl
dec
push
push
gs
les
iret
push
dec
repz
iret
gs
out
jo
ds
and
mov
sbb
lods
loope
arpl
sahf
dec
fldenv
and
jp
bound
sbb
pop
adc
fldenv
adc
test
es
fld
jp
and
daa
inc
jle
xchg
xor
icebp
fisubrl
adc
xchg
xor
leave
inc
faddl
ret
push
ds
jno
daa
jns
inc
push
or
insl
std
jle
ljmp
in
add
mov
sti
les
jno
xchg
or
inc
loop
or
push
pop
dec
cld
add
in
push
cs
push
dec
cmpsl
jp
mov
mov
and
pushf
or
fs
pop
push
sbb
das
inc
stc
decb
test
fcmovbe
movsb
sbb
fmull
orl
mov
or
addr16
jnp,pn
out
call
jbe
sub
dec
pop
out
fdivl
sti
xchg
xlat
xchg
xor
lcall
or
inc
inc
push
cli
mov
or
sbb
mov
scas
inc
stc
mov
inc
push
xchg
mov
fidivrl
xor
xchg
adc
pop
jg
mov
imul
roll
dec
push
mov
sbb
mov
adc
cmp
mov
dec
pop
push
push
jne
inc
jmp
andl
and
unpcklps
xchg
lods
mov
xchg
add
out
jmp
push
lret
imul
mov
mov
daa
xor
in
shlb
adc
sarb
inc
and
inc
xchg
sarb
adc
pop
out
data16
cmp
test
ds
mov
rol
push
sbb
sahf
add
inc
push
dec
gs
xlat
and
mov
pop
or
push
aaa
fisttps
clc
jg
or
fsts
xchg
fxch
fbld
and
inc
rclb
loope
push
sub
cli
cmp
sbb
xchg
arpl
inc
sbb
jle
fidivrs
rorb
es
adc
cmp
push
test
mov
dec
sahf
dec
test
imul
les
test
sbb
ss
dec
rorb
ds
je
pop
or
sbb
loope
ror
mov
dec
fildll
xchg
inc
orl
inc
sti
stos
hlt
pop
add
lods
jmp
adc
dec
xchg
sbb
shr
mov
add
inc
iret
jnp
cmp
test
sti
stos
jge
mov
fwait
cli
mov
stc
arpl
mov
dec
xor
test
xor
mov
nop
or
xor
cmp
andb
push
ficoms
or
sarl
cmpsb
pusha
inc
insl
mov
out
xor
and
jae
jmp
ret
cs
cmp
es
mov
loopne
mov
lahf
daa
push
adc
mov
sbb
jne
mov
mov
lods
ss
test
jnp
xchg
xchg
inc
lock
xchg
cmpsl
fbstp
repz
dec
out
xor
jg
loopne
shr
push
popa
call
je
enter
idivb
or
repnz
push
popf
adcb
mov
and
packuswb
push
repz
rcrl
and
inc
out
ret
mov
nop
rol
int
xlat
aad
sbb
xchg
pop
pop
rcrb
jg
sub
dec
shrl
add
pop
xchg
ss
jle
out
rcr
fistps
xchg
push
nop
imul
aaa
jp
sub
cmp
and
dec
xchg
sub
xor
push
cmp
xchg
pop
xchg
fldl
scas
pop
nop
leave
mov
loopne
mov
jmp
sbb
mov
adc
ss
cmp
dec
xchg
js
add
les
lods
testb
mov
add
aam
out
lock
xchg
sbb
sbb
pushf
xchg
aas
fsub
add
out
lods
xchg
add
push
sbb
lcall
dec
js
fsubs
mov
xor
repz
jle
cmpb
pop
addr16
cli
sti
pop
mov
xchg
push
xchg
rorl
adc
cmp
outsb
mov
sub
add
push
push
mov
pop
xor
sub
sub
orl
rcrb
mov
imul
xor
cmpsb
push
inc
inc
test
xchg
lock
and
cmc
push
outsl
push
xchg
lock
jp
out
daa
xor
inc
andb
add
hlt
push
push
les
mov
sahf
out
jp
dec
mov
pop
ja
adc
int3
xor
js
sbb
mov
lock
sbb
cmp
icebp
pop
jo
sub
call
xor
mov
lds
dec
std
mov
push
sbb
mov
test
popa
outsb
int
cmc
sbb
js
dec
jns
add
jge
scas
clc
pop
psubusw
mov
dec
pop
cmp
outsl
xchg
mov
out
sub
popf
sbb
test
and
js
out
jge
mov
inc
xor
imul
pop
cmp
jne
out
inc
ret
jge
jne
adc
loopne,pt
lock
mov
mov
cmp
xchg
adc
int
ja
lcall
inc
pop
scas
sub
xor
subb
cwtl
mov
pushf
aam
or
dec
mov
and
in
push
jns
enter
jno
lahf
mov
addr16
or
addr16
dec
iret
or
imul
movsl
cli
lods
cltd
mov
orps
dec
ljmp
or
mov
ljmp
dec
rcrl
jbe
inc
inc
fdivl
repz
lea
fadd
call
inc
adc
sub
lock
xchg
dec
and
cltd
fisttpll
scas
xchg
push
mov
lods
or
dec
cmc
jge
shlb
mov
shl
or
popl
xchg
daa
inc
iret
add
jb
bnd
inc
in
pop
xchg
cwtl
mov
xor
es
pusha
mov
xchg
lods
pop
jecxz
pop
mov
inc
test
jns
dec
push
mov
sbb
sti
sub
lock
mov
add
clc
hlt
loope
sbb
je
mov
out
jae
mov
lcall
sbb
movsl
mov
pop
jl
cmc
fcompl
call
and
mov
pop
xor
inc
in
cmp
sbb
and
push
lret
mov
pop
adc
inc
ljmp
push
dec
push
xor
jne
sbb
mov
jnp
jne
fists
adc
sbb
fs
push
push
xlat
test
mov
push
inc
movntq
fnstenv
xchg
xor
push
xchg
sbb
pop
ljmp
push
stos
xor
jns
cmpb
mov
je
cmpsb
test
shll
mov
scas
mull
ret
int3
or
orb
mov
fidivrl
ret
imul
pusha
pop
sbb
pop
push
jecxz
pop
dec
jg
push
push
push
lcall
jne
inc
ja
shll
out
rcrl
lock
rolb
mov
push
insl
pusha
jmp
xor
pop
sub
cmp
inc
nop
xchg
push
popf
enter
pop
dec
xor
fnstcw
in
aad
int3
mov
pop
stc
mov
pop
or
sbb
sbb
sbb
push
div
adcb
rcll
jp
xchg
xorb
and
xor
pop
jecxz
mov
lds
jno
xchg
das
mov
fcomps
ret
lods
add
sub
xchg
pop
es
inc
pop
int3
imul
test
adc
inc
cmp
cmc
push
out
mov
aad
xchg
pop
lahf
cmp
mov
dec
push
and
and
jo
sub
inc
pop
daa
pusha
bound
add
loop
mov
or
pop
pop
icebp
insb
pop
jl
mov
push
pusha
cmp
data16
mov
cmp
pop
popl
cmp
jnp
mov
push
xchg
xor
pusha
stos
iret
add
xchg
mov
push
jg
mov
and
sbb
mov
aad
popf
fcoml
inc
xor
addl
jb
dec
lcall
xchg
hlt
lds
jns
out
xor
mov
push
fsubrl
push
push
jnp
push
call
fisttpll
mov
mov
rcrl
push
jmp
aam
or
sbb
cld
hlt
ret
mov
add
push
push
popa
add
nop
adc
test
jmp
ds
bound
cmp
mov
ljmp
sub
pop
dec
cmpb
sub
xor
mov
mov
jmp
adc
jnp
call
popa
inc
loopne
mov
in
xor
ja
mov
xor
sarb
jne
ss
xchg
mov
sub
jb
clc
in
aam
sbb
pop
orl
jmp
jbe
or
push
sub
ficomps
and
and
in
jo
lods
mov
aam
out
dec
mov
jo
jnp
data16
and
ret
pop
or
aas
cmp
not
xlat
or
push
aaa
jae
sbb
xor
rorb
cs
sbb
xor
mov
in
add
adc
xchg
fdivl
sub
adc
adc
jae
cmp
xchg
adc
cmc
cmpsl
shl
pop
fidivs
push
xchg
jmp
pop
sbb
sahf
in
pop
das
sub
repnz
shr
scas
nop
shll
movl
xchg
mov
cld
mov
gs
int
adcl
add
sub
sbbb
push
xchg
or
out
test
cltd
mov
add
aaa
ljmp
add
cmp
mov
enter
loopne
stos
stos
sbbb
insb
outsl
sbb
inc
stos
pusha
cmpsl
xchg
inc
pusha
adc
jle
xor
xor
ja
xchg
aam
aaa
or
nop
jnp
jb
pop
dec
je
inc
rcrb
xchg
pop
ret
iret
stc
cmp
addr16
cmp
mov
js
mov
insb
mov
stos
inc
shl
pop
jg
mov
xor
into
fs
bound
inc
sbb
adcb
shll
test
test
movsl
lret
xor
mov
add
stc
das
cld
addr16
push
shrb
in
mov
xor
pushf
clc
cwtl
ds
jae
stos
xor
push
mov
jmp
mov
jns
lcall
sbb
cmp
lret
and
xlat
mov
ljmp
addr16
sbb
clc
in
lock
iret
mov
adc
bound
adc
inc
lret
fbld
mov
jp
pop
dec
jecxz
call
cmp
jmp
xchg
jae
xchg
scas
orps
xchg
dec
cmp
ret
movsl
popa
add
inc
inc
xor
xchg
mov
push
addr16
mov
lret
fstpt
fbstp
pop
mov
mov
cmc
mov
shll
add
gs
cmp
push
sub
push
mov
xor
iret
push
das
jp
fdiv
jbe
inc
into
movl
pop
andb
icebp
sub
cmp
mov
adc
lds
fwait
lcall
fcmovnbe
out
imul
mov
add
sub
iret
fmuls
or
mov
pop
popf
in
hlt
and
jbe
adc
loope
aas
jb
jle
xor
lret
cld
repnz
or
jmp
mov
shll
sahf
adc
repnz
inc
add
gs
push
lods
lods
repz
pop
jno
xorl
or
sbb
xlat
mull
or
in
mov
mov
inc
hlt
or
pushf
push
push
sbb
dec
push
sbb
cmc
out
and
imul
daa
popl
adc
pushf
arpl
repz
stc
subb
pop
aas
mov
or
sbb
cltd
out
sbb
mov
sub
imull
xchg
jae
dec
xchg
cmc
adc
mov
test
leave
pushl
in
fwait
push
lods
mov
mov
lahf
push
jbe
xor
pop
xchg
imul
out
mov
or
push
leave
cwtl
or
loopne
sub
push
ljmp
aaa
inc
fmuls
mov
fisttpl
xor
stc
adc
cmpsb
loopne
out
or
sbb
sub
jns
jp
pop
ss
adc
ret
push
xchg
xchg
std
cs
imul
sbb
lcall
inc
mov
and
sbb
pusha
or
scas
jns
inc
std
mov
lcall
xchg
lods
push
out
jmp
dec
fisubrs
stos
mov
push
push
jbe
mov
pushf
loop
lea
push
cmpsb
mov
loope
ret
jge
mov
xor
out
sbb
aas
mov
ss
daa
test
jne
stos
and
pmulhw
insl
and
and
adc
jle
push
push
addr16
add
pop
iret
shrb
mov
xchg
mov
mov
adc
dec
stos
push
xchg
adc
icebp
jp
cmp
and
fstps
xchg
jg
inc
sarb
test
aas
repz
sbb
mov
ficompl
mov
pushf
dec
insl
jno
aad
jbe
or
addr16
xorl
stc
data16
in
in
jmp
add
mov
jmp
and
std
dec
lret
stos
or
mov
pop
lret
insb
fsubl
lods
xchg
test
cld
mov
adc
or
mov
into
arpl
scas
leave
inc
test
rolb
daa
mov
jbe
mov
mov
adc
insb
dec
sbb
dec
sbb
in
repnz
pop
and
and
jecxz
xor
in
xchg
mov
out
mov
mov
sub
sbbl
sub
mov
dec
inc
jge
pop
test
jle
ret
call
loopne
cmpsl
or
fcoml
adc
int3
pop
jmp
pcmpeqb
repnz
jbe
sarb
pushf
push
pop
icebp
cmp
rclb
push
xchg
inc
sbb
mov
test
lea
das
push
movsl
mov
push
push
dec
lahf
xchg
andl
and
imul
mov
gs
vpand
push
faddl
xor
outsb
cmpsl
jge
and
xor
andl
ds
cmpsb
test
in
and
stc
icebp
xchg
test
popa
sbb
sub
loop
sub
lds
arpl
lods
imul
xchg
sub
lock
xor
sbb
sub
jl
sti
jne
mov
xchg
and
loopne
cmp
inc
xor
test
and
es
in
and
aaa
test
cli
pop
sbb
sbbb
sub
aaa
ret
xchg
push
push
dec
shrl
gs
dec
je
movsl
cld
xor
dec
or
xor
das
add
aas
lock
cmpsw
sbb
xchg
insl
loopne
pop
hlt
ror
popf
rol
xor
dec
mov
mov
je
pop
push
shl
add
mov
push
dec
xchg
leave
rolb
mov
add
jmp
stos
jnp
call
lahf
enter
jp
inc
pop
fstps
mov
hlt
mov
lods
adc
cli
mov
jl
and
rdmsr
pop
pop
ficoml
push
inc
add
lock
sbb
jb
inc
mov
or
mov
pushl
int3
inc
or
xchg
push
sahf
fnstcw
stc
pop
mov
add
xchg
loope
jge
sbb
dec
cmp
outsl
xchg
adc
in
or
sbb
or
cmp
sub
mov
jbe
pop
cmp
sti
sbb
shrb
out
cli
or
mov
jb
leave
or
int3
fadd
mov
das
add
das
or
push
shll
mov
aaa
pop
cli
fildl
outsb
into
jmp
add
sub
push
mov
add
out
pop
or
xchg
mov
or
adc
jmp
stos
push
adc
or
ficomps
push
bound
mov
nop
sub
pop
aam
add
push
mov
mov
push
jo
adc
mov
pop
mov
pop
sbb
sbb
adc
push
jp
push
sub
add
sbb
sar
mov
add
pop
arpl
push
add
mov
dec
je
jae
or
shlb
aaa
clc
xor
das
pop
adc
fmull
int3
fsubrp
mov
or
movsb
repnz
mov
add
add
jl
dec
or
or
adc
push
in
in
arpl
sar
pushf
cli
jne
add
fimuls
mov
insl
js
and
movsl
mov
cs
sub
cmpsl
test
sub
std
or
cld
sub
push
inc
mov
mov
sbb
mov
add
xor
mov
mov
scas
jl
ja
dec
push
movsl
in
into
popa
push
jecxz
push
clc
adc
pop
lea
call
inc
dec
inc
dec
imul
inc
flds
hlt
cmp
gs
jp
sbb
fdivrl
xchg
je
cmp
sbb
cltd
cmpsb
loope
sbb
jno
sbb
mov
dec
data16
inc
xor
lret
xor
and
mov
repz
xchg
in
mov
jmp
leave
hlt
jnp
shrl
shl
and
pusha
and
mov
mulb
cld
stc
stos
mov
xlat
pop
call
sbb
xchg
cmp
push
fistl
xor
xorb
push
dec
adc
addr16
push
dec
dec
sbb
pop
mov
dec
dec
subl
sub
sbb
cmp
lea
dec
int
push
push
cmpsb
fs
xor
jl
lahf
dec
push
jg
pop
sti
out
jne
inc
into
cmpsl
add
out
or
xor
mov
sub
mov
jbe
pop
or
mov
push
cmpsb
dec
mov
and
dec
mov
out
push
jl
lret
loopne,pn
cmc
out
push
jno
and
aam
pop
sbb
xor
push
sarb
mov
movsl
or
sub
adc
push
pop
scas
add
cmpl
push
imul
xchg
and
sbb
adc
arpl
mov
mov
sub
xor
daa
ret
outsb
push
fistpl
adcl
cmc
or
and
mov
pop
mov
push
push
rcrl
xor
es
test
aaa
out
arpl
inc
jno
and
into
dec
test
daa
mov
cmpsb
inc
push
sbb
mov
sub
xchg
add
in
sub
mov
adc
push
fists
inc
rcll
jle
dec
xor
mov
fiadds
and
push
mov
add
push
jl
mov
inc
pop
std
jno
mov
xchg
jbe
sbb
pop
push
ret
mov
mov
andb
out
inc
and
mov
push
mov
vpcomb
add
and
insl
sbb
popf
ja
imul
sub
jno
arpl
xchg
test
pop
in
xor
pushl
lods
movsb
xor
ss
add
adc
dec
or
xor
cmp
in
sahf
lds
sbb
mov
cwtl
push
lds
inc
mov
or
add
or
cltd
mov
sub
rcll
fst
fldl
daa
cld
js
insl
mov
inc
inc
pop
cltd
mov
int3
xor
add
mov
and
aaa
std
idivl
int3
jbe
mov
stc
mov
mov
rcr
dec
dec
pop
cmp
pop
mov
sbb
stc
add
fstpt
xor
cmpsl
mov
xor
pusha
jae
sbb
xor
stos
mov
lahf
ret
ficomps
pop
mov
sti
dec
and
jecxz
xchg
mov
xchg
les
jp
dec
xchg
movsb
mov
or
pop
xchg
int3
jge
ret
add
decl
cli
jp
push
sub
scas
jne
out
mov
pop
pushf
add
xor
movsb
cmp
shr
lods
cmc
xor
xchg
sahf
sub
aas
inc
sbb
les
fwait
adc
jb
daa
push
es
jl
pop
pop
pusha
mov
mov
outsl
fs
xor
mov
sub
pushf
bound
popf
aas
dec
insb
daa
xchg
cmp
sub
dec
out
sbb
iret
lret
insb
rorb
push
xlat
aad
inc
cld
negb
sahf
into
adc
inc
nop
enter
adc
divl
xchg
push
cmp
cmp
dec
mov
xor
inc
lds
inc
jecxz
mov
cwtl
fsubrs
cmp
xor
xchg
dec
sbb
sbb
pop
cs
test
cs
mov
loopne
scas
mov
cwtl
sub
lcall
cmp
insl
push
or
movsl
lods
dec
lods
je
cmp
inc
mov
or
repz
lock
xor
pop
push
xchg
pop
pushf
scas
inc
adc
mov
pop
repnz
insb
mov
and
lds
popa
jbe
xor
dec
test
fnstsw
dec
xlat
and
dec
call
fs
pop
mov
mov
dec
pop
repz
mov
cmpsb
sti
xor
jae
scas
xchg
adc
pop
lcall
jns
int
cmp
add
xor
mov
out
negl
insb
mov
sbb
xchg
mov
loop
fsubrl
inc
inc
xchg
add
xchg
loop
lahf
add
inc
rorl
dec
and
clc
in
pop
dec
je
jge
out
mov
xor
test
xchg
jo
fstpl
push
mov
xor
xchg
xchg
push
or
mov
and
sbb
ljmp
fisubrs
cltd
addr16
repz
dec
xchg
pop
mov
lods
or
cs
pop
gs
or
mov
popf
sub
rorb
cmpsb
fwait
sbb
jae
sahf
sbb
mov
aad
sti
out
xor
cmp
ja
repnz
jb
dec
and
rcrl
outsb
xchg
daa
push
xor
or
hlt
sub
mov
movsl
xor
ret
jge
xorl
push
data16
inc
mov
pop
mov
outsl
fidivs
xchg
push
gs
jae
shlb
aas
out
cmp
jb
inc
cmp
inc
test
mov
movsb
push
rclb
loop
into
inc
idivl
adc
pop
adc
adc
ror
pusha
mov
inc
adc
cmpsl
push
loopne
xchg
out
out
loop
adc
add
xchg
pop
or
push
lcall
leave
sarb
rorl
lds
mull
xlat
cmpsl
inc
pop
push
inc
xlat
mov
push
daa
inc
pop
jl
mov
mov
adc
das
inc
inc
sub
jp
mov
and
sti
int3
mov
in
sbb
in
adc
fisubl
cmp
imul
jle
and
imul
stos
into
pop
enter
out
lret
and
ret
test
sub
push
in
mov
mov
jae
adc
stc
cmpb
mov
push
lods
mov
lods
outsb
pop
mov
out
rclb
outsl
js
pop
mov
sbb
lcall
xchg
pop
sar
sbb
test
mov
push
lea
sbb
sub
inc
xchg
xor
push
adc
mov
or
xlat
push
outsb
andb
les
fcomip
insb
sbb
jmp
and
inc
sbb
mov
enter
xor
dec
sub
dec
inc
inc
cmp
pop
shr
or
push
fidivrl
stos
push
pop
imul
ficompl
fstpt
into
and
push
gs
xchg
mov
jl
push
fs
icebp
stos
jbe
stos
xchg
setne
jp
andl
dec
jle
add
ja
sub
xchg
mov
cli
shlb
xchg
mov
mov
adc
and
and
push
iret
sub
rcrl
push
pop
sbb
jno
lret
lahf
push
jg
mov
xchg
cwtl
or
pop
testl
cltd
and
cs
cmpb
push
push
shl
pop
adc
sub
xor
dec
shll
scas
add
repz
pop
mov
mov
enter
jg
mov
or
cmp
mov
push
ds
sarl
jno
rorl
imul
lea
inc
mov
out
out
push
mov
pop
inc
jmp
add
sub
jns
movb
cmpsb
and
adc
sub
mov
jge
aaa
mov
je
sub
inc
in
outsb
add
rcrb
les
fs
jno
xchg
jecxz
inc
sarl
fisubl
ss
je
dec
pop
dec
and
scas
stos
push
outsb
mov
cmc
out
inc
pushf
daa
add
out
push
cld
nop
loope
mov
dec
insb
in
pop
xchg
js
ret
sub
out
clc
mov
inc
and
jecxz
stos
xor
lcall
and
sub
sub
jle
int
pop
sbb
mov
insl
icebp
sbb
cltd
in
jge
iret
loop
mov
add
or
insl
sbb
insl
inc
das
mov
daa
sbbb
mov
mov
mov
or
aaa
fidivrs
mov
fisubrs
pop
inc
rclb
xlat
cmp
xchg
fcmovb
stos
mov
add
fwait
pop
mov
data16
mov
test
popf
fwait
in
ret
jge
ret
jae
jb
outsl
out
orl
mov
out
mov
pop
sar
fildl
or
ljmp
pop
jae
inc
push
xor
insl
icebp
inc
push
sbb
shrb
push
in
xchg
fsubs
je
movd
add
in
and
push
dec
inc
and
mov
or
push
test
ljmp
repnz
es
jae
xchg
scas
xor
sub
lret
insb
inc
mov
jl
jmp
mov
lcall
cmpsb
clc
cmpb
mov
cmp
sahf
mov
lcall
push
jmp
fnsave
xor
adc
dec
cmp
rorb
inc
popf
lret
push
inc
cmp
pop
push
pushl
pop
shlb
les
mov
into
cld
xor
xor
lcall
movsl
icebp
je
loopne
nop
pusha
mov
and
clc
loopne
punpcklwd
push
imulb
push
cmp
rorl
push
mov
add
cmp
and
sahf
jecxz
sbb
fcoms
gs
dec
push
and
loope
pop
add
insl
adc
mov
mov
push
lret
sahf
icebp
and
xor
les
pusha
mov
lret
jg
mov
iret
outsl
insb
add
mov
cmp
mov
sbb
mov
notb
clc
fildll
stc
flds
pusha
xor
or
aam
pop
push
jle
mov
and
push
out
bound
inc
fs
shrl
fiaddl
lcall
dec
mov
sub
enter
mov
inc
in
adc
call
enter
lcall
xchg
aad
mov
cmp
mov
cmp
xlat
and
inc
mov
xchg
mov
xchg
push
repnz
repz
jmp
jp
sub
in
mov
sti
scas
or
jmp
mov
aaa
dec
pop
lret
movsl
aaa
scas
dec
dec
inc
pop
jne
push
xchg
lock
imulb
sbbl
inc
xchg
testb
xor
aas
fcompl
push
jb
loope
dec
jle
mov
inc
icebp
dec
adc
inc
repz
sub
icebp
push
or
mov
and
add
xor
mov
xchg
cmp
xor
inc
test
mov
nop
and
out
repnz
and
addr16
xchg
add
push
xchg
imul
mov
cld
xor
pop
in
hlt
mov
ja
movsb
sbbb
sub
inc
std
insl
sub
mov
test
leave
stos
or
mov
and
pop
xchg
aam
fdiv
sub
push
in
into
out
mov
push
jmp
and
repnz
mov
mov
dec
loop
in
das
bound
xchg
sahf
cmp
mov
inc
cmpl
into
fsubrp
mov
pop
inc
fisttpll
fwait
insb
pop
outsl
loopne
inc
jl
push
iret
sbb
fidivs
sub
and
dec
sarl
jg
lret
adc
pushf
pop
mov
mov
scas
fdivl
pop
inc
dec
out
jl
adc
or
in
pop
hlt
arpl
xor
cmp
cmp
xchg
popf
push
xlat
xchg
or
add
jbe
sub
jle
ret
xchg
push
jl
xchg
and
jg
push
aad
pop
loop
jl
push
or
arpl
call
or
lahf
aas
pop
insl
es
mov
mulb
mov
cmp
test
adc
jg
fdivl
je
pop
imul
mov
popf
inc
inc
xor
ret
mov
sub
sub
sbb
repnz
aaa
jle
push
in
or
ficoms
push
cmp
movsl
imul
movsb
mov
imul
pop
dec
mov
les
cwtl
lea
jno
and
test
push
xor
sub
or
adc
xchg
mov
and
sub
movl
fs
sub
cmpsl
sbb
push
inc
jg
push
dec
mov
sbb
lds
jnp
rolb
jmp
adc
cmpsl
lahf
sbb
pop
mov
xchg
lods
xchg
pop
int3
or
sub
lret
xchg
in
sbb
mov
movsb
lods
sub
mov
out
enter
add
xor
ds
jno
sbb
test
aad
push
xchg
mov
sub
bound
js
mov
push
loopne
js
test
scas
daa
jnp
cmp
cltd
std
stos
das
push
mov
dec
xor
adc
pop
enter
lods
push
test
insl
xchg
mov
xchg
nop/reserved
pop
xor
pop
in
jno
dec
mov
cmc
jle
mov
mov
mov
je
das
fiaddl
cmpsb
pop
sbb
popa
mov
lret
and
test
jle
push
lds
not
xchg
xchg
mov
into
movsl
daa
sbb
clc
ds
or
jno
xchg
sarl
pop
jl
iret
ljmp
mov
es
test
in
pop
sub
cmp
sahf
ret
rorb
les
pop
add
popa
out
in
dec
icebp
aad
bound
push
mov
je
jbe
cmp
aad
push
roll
push
dec
dec
push
inc
sub
cmpsb
mov
push
pop
js
add
push
test
les
adc
adc
jnp
sub
sahf
bound
push
pusha
adc
fldt
nop
sti
push
add
and
jmp
inc
stc
pop
icebp
jne
test
dec
add
jle
data16
addl
jg
inc
push
lret
inc
enter
paddb
jmp
dec
xchg
dec
fisttpl
dec
in
hlt
ja
call
fmul
iret
mov
sub
gs
dec
insl
xchg
in
sub
test
into
es
push
sbb
jg
or
out
inc
jns
sub
cmp
repnz
roll
or
dec
int3
cmc
cmp
frstor
sbb
dec
mov
pop
fsubr
fadds
pop
and
scas
mov
fildll
lds
int3
out
repz
nop
pop
out
movsb
ljmp
fxch
xchg
imul
inc
jnp
or
clc
rolb
mov
jl
inc
imulb
repz
dec
lret
fisubrs
repz
xchg
fidivl
data16
decb
xor
gs
adc
pop
mov
loope
sbb
lods
jno
jae
pop
cmpsl
pop
xlat
imul
xchg
lret
mov
jbe
add
ss
ja
xchg
sub
push
xchg
hlt
push
cmp
cmpsl
cld
imull
mov
jae
nop
mov
into
xlat
clc
in
jb
pop
push
or
or
ja
mov
movsb
hlt
arpl
test
ja
loop
popa
pop
je,pt
lods
or
xlat
cmp
push
fs
dec
daa
adc
aas
mov
int
add
lret
fsubrl
insb
mov
mov
lahf
std
mov
mov
fdivp
iret
andb
movsl
sbb
inc
int3
xor
ret
mov
push
sbb
pop
out
mov
lds
mov
dec
sahf
pop
cld
daa
aad
fidivl
xlat
push
fucomp
cmp
mov
push
mov
dec
lods
rcll
xor
xchg
and
and
aas
outsb
pop
popa
data16
sahf
vpackssdw
mov
fcompl
jne
fiadds
mov
push
mov
push
ds
nop
mov
mov
iret
push
push
xchg
inc
das
xlat
js
test
scas
popl
mov
jmp
add
sbb
inc
mov
jbe
mov
add
push
mov
js
or
sbb
mov
lret
jo
lods
xchg
xor
push
leave
mov
sti
pop
test
mov
std
add
add
outsl
inc
push
xor
mov
in
jb
sbb
mov
sub
dec
icebp
aam
pushf
cmpsb
stos
push
sub
leave
jp
test
das
test
outsl
std
inc
nop
clc
mov
jae
and
stos
push
test
and
or
sub
xchg
add
cmp
push
mov
lods
mov
call
cmp
pop
lds
test
and
sub
in
in
pushf
dec
mov
add
mov
insb
pop
xchg
lret
pop
jnp
xor
xor
enter
jb
mov
sub
xchg
push
add
push
jo
into
pop
call
mov
out
and
pop
in
jg
xchg
stc
lahf
sahf
mov
fcos
mov
dec
roll
loopne
pusha
aad
in
daa
jno
sub
adc
mov
pop
xor
mov
aam
xchg
cltd
cmp
jecxz
rol
pop
ret
in
cmp
int
or
jbe
push
fbstp
cmpb
pop
and
dec
lods
roll
lds
fnstcw
in
pushf
cmp
bound
add
push
imul
sbb
mov
dec
push
mov
xchg
and
test
dec
scas
add
pop
daa
les
xor
push
xchg
pushf
and
dec
in
popl
mov
add
imull
dec
inc
push
xchg
clc
test
dec
shl
push
shld
ret
loop
push
mov
mov
lock
pop
subb
mov
lcall
scas
push
lock
lock
push
xchg
mov
pop
inc
cli
nop
lret
xchg
dec
pop
jmp
stc
lods
mov
cmpsb
icebp
inc
pop
rcrl
mov
or
lds
jmp
mov
cs
inc
mov
iret
loopne
sahf
popf
mov
insb
out
sub
xchg
cmp
testl
dec
std
sub
push
adc
push
shlb
test
test
push
cs
shll
in
popf
out
std
nop
xchg
stos
aas
hlt
pop
loopne
stc
xchg
shrl
dec
scas
inc
std
shlb
xchg
je
fidivs
fsts
mov
aas
dec
ffree
int
scas
bound
sbbb
stc
mov
scas
add
sahf
out
and
mov
popa
push
ja
lods
dec
adc
mov
sbb
imul
jl
pop
fldl
inc
mov
addb
xor
ja,pt
jae
fwait
jo
xchg
cmp
lock
int
fldl
pop
add
in
xchg
pushf
mov
imul
mov
aas
add
aaa
adc
roll
dec
lcall
ljmp
add
adc
popa
and
push
je
jmp
and
movsb
mov
dec
out
inc
cmp
fdiv
mov
sub
jecxz
sbb
int3
push
push
and
movsl
sbb
lret
inc
ret
addr16
out
aas
mov
cli
push
subb
inc
cltd
stc
in
inc
cmc
mov
andb
orl
shlb
icebp
cmpsl
xchg
aaa
or
dec
sbb
popa
shll
jb
je
sti
nop
outsb
mov
dec
add
cmp
cmp
xlat
jae
test
mov
adc
dec
fidivrl
pop
aad
scas
or
add
mov
sbb
in
out
add
mov
iret
pop
daa
inc
mov
sub
fneni(8087
mov
xchg
pop
xchg
cmp
sbb
imul
pushf
xor
inc
out
sbb
js
cmc
out
jae
roll
das
aad
and
int3
mov
jle
xchg
aad
xor
fwait
dec
es
mov
dec
and
mov
stc
push
aas
sbb
lods
mov
in
jg
cmp
sub
popa
jne
inc
mov
inc
sbb
test
xchg
stos
cmp
inc
or
lods
jle
fsubl
push
xchg
mov
imul
jle
cltd
jae
jnp
std
es
sub
fs
mov
mov
out
cmp
sub
push
dec
pop
cmp
movsl
xor
sahf
sahf
sub
cli
push
movsb
inc
scas
ja
loopne
jle
into
cmp
dec
mov
cmpsb
aaa
inc
je
jmp
or
mov
xor
aas
xchg
addr16
mov
dec
xchg
push
jo
jne
dec
sub
mov
mov
sub
test
or
push
stos
sbb
pop
pop
pop
test
jle
mov
mov
bound
sub
mov
cmp
ret
or
sub
add
push
lea
pop
mov
sbb
mov
iret
sub
cltd
pop
xchg
sbb
scas
test
rcr
add
jmp
arpl
xor
pop
fnstenv
pop
mov
add
std
or
and
sub
in
scas
cmp
jae
jecxz
dec
iret
cli
mov
call
call
and
pop
cmpsl
xor
hlt
cmp
inc
push
adc
repnz
xchg
scas
or
movsb
and
outsb
cmp
popf
pop
add
aam
sarl
out
jge
push
adc
je
xchg
fstpt
push
ja
lcall
loope
xor
iret
dec
scas
fdivrl
incl
sub
xor
sti
loope
pop
jo
mov
aad
test
pop
mov
arpl
inc
xchg
test
sarb
inc
dec
pop
adc
push
xor
rorb
es
xor
add
add
aad
stc
inc
xchg
and
sbb
movb
jmp
or
pop
add
int3
out
in
es
sub
push
add
cmc
iret
dec
pop
cli
aam
xor
mov
pop
in
cmpsl
gs
movsl
aaa
mov
xor
mov
mov
rorb
mov
push
xchg
cmp
mov
jmp
push
ljmp
and
jo
xchg
call
jb
leave
mov
or
in
jmp
add
pop
add
pop
mov
xchg
lahf
pop
sub
in
jns
int
mov
stos
fs
out
cmp
into
ljmp
enter
xchg
xchg
mul
pop
adc
push
sbb
outsb
sbb
cltd
xor
ret
test
jnp
mov
test
lods
inc
psrld
sub
pop
and
dec
dec
or
inc
push
jno
fcomps
dec
stos
sbb
adc
push
pop
cmp
pop
or
test
mov
popf
pop
push
mov
fildll
scas
pop
enter
pushf
cmp
adc
sub
movsb
push
push
iret
jo
lods
imul
jns
xor
ja
fistpll
inc
out
mov
rcrb
daa
ss
pop
push
imul
aam
sbb
xchg
sub
pop
stc
leave
jge
gs
fmull
cwtl
add
mov
das
xlat
and
inc
add
ja
cmp
ficompl
cltd
aam
out
or
test
and
gs
je
cltd
sbb
inc
out
cli
sbb
int3
inc
lock
push
jge
ret
jl
scas
xchg
negl
inc
cltd
sbb
ljmp
cmp
jg
xor
idivb
pop
mov
sbb
stos
pop
sbb
jns
pop
adc
jecxz
outsl
iret
fimuls
outsb
adc
push
mov
das
mov
sbb
sub
mov
fistps
movb
fcompl
push
sbb
inc
cmpsb
scas
addr16
loope,pn
sbb
mov
das
loopne
nop
loope
mov
ret
stc
cmc
rcrb
dec
inc
xor
add
popf
mov
jb
pop
stos
inc
jae
lcall
arpl
fcmovb
cld
xor
push
imul
pusha
lods
pop
mov
xor
mov
into
or
imul
mov
add
mov
test
jb
add
sahf
inc
pop
aas
testl
cltd
push
call
xor
pop
ds
mov
pop
imull
mov
loop
cmp
adcl
outsb
insl
push
enter
pop
pop
jb
lods
dec
xchg
add
ds
shr
jo
jp
cmp
les
sub
dec
jnp
test
dec
mov
mov
xchg
xchg
add
inc
sub
jno
or
pop
jo
imul
mov
ret
movsb
mov
inc
and
out
pop
pushf
cmp
arpl
test
or
popf
jne
or
int
lods
rorl
cmc
pushf
cmp
fwait
inc
std
loope
mov
fnsave
loop
jmp
outsb
mov
xchg
pop
or
mov
adc
push
push
mov
rol
ret
stc
xor
lock
hlt
fsts
mov
xchg
inc
push
andb
xchg
pop
mov
inc
pop
inc
mov
cmp
push
sub
jecxz
outsl
adc
lods
shlb
push
cmp
cmp
xchg
sbb
inc
stos
fisubl
aas
lds
dec
xor
call
dec
bound
test
repnz
dec
mov
shrb
push
pop
stos
lds
xchg
out
lcall
push
mov
xlat
in
push
jno
jno
jle
adc
xor
outsb
stos
cwtl
clc
inc
sub
data16
push
lods
pop
xchg
dec
sub
xchg
ljmp
jb
and
scas
and
iret
jb
stos
cltd
and
push
mov
mov
stos
jg
sti
or
dec
dec
arpl
pop
call
iret
cmp
mov
mov
aad
out
ds
loope
add
jno
inc
sbb
inc
test
push
and
andl
sub
push
lcall
jae
pop
cld
dec
sti
movsb
adc
dec
or
out
lods
fwait
or
mov
mov
scas
in
aad
ja
in
les
test
sbb
mov
xlat
mov
jne
cltd
pop
xor
cmpsb
out
or
lock
dec
xor
mov
es
les
dec
inc
mov
jns
add
pop
xchg
push
mov
inc
call
cmpsl
shlb
les
lahf
sbb
mov
bound
sbb
sbb
xchg
dec
cmc
mov
nop
push
sbb
mov
pop
inc
and
sbb
test
test
dec
cmpl
ret
mov
loope
inc
mov
inc
mov
das
sarl
sub
push
stos
mov
scas
pop
mov
push
mov
add
adc
std
add
je
pop
das
and
sub
xchg
shrl
ficoms
ss
add
pop
cltd
cmp
fwait
lds
sbb
leave
dec
jno
std
test
movl
pop
pop
popf
sbb
mov
cmp
jl
jbe,pn
cmp
mov
mov
orl
rcrl
pushf
lret
pop
sbb
jb
popf
lcall
sbb
ret
jb
push
pop
lahf
mov
cmpsb
sbb
mov
push
dec
int3
pop
pusha
pop
jns
movl
inc
sbb
push
cmp
cmp
push
out
push
mov
sbb
and
aaa
lock
addb
out
movb
jmp
lods
push
push
xor
sub
adc
mov
fidivrs
dec
sub
js
int3
aam
dec
rcll
cmp
adc
js
mov
stos
add
out
mov
sub
roll
cmpsb
gs
loopne
sbb
aas
pop
idiv
push
sub
popf
les
push
mov
jae
out
out
lret
je
call
bound
jg
lds
iret
mov
bound
push
adc
adc
cmp
scas
cmp
or
jle,pt
xor
aam
out
xchg
xor
jb
stos
sbb
xor
out
jnp
xor
mov
pop
ret
lea
jae
add
push
and
ror
mov
sbbb
sbb
cmc
cld
mov
outsl
jmp
mov
fistpl
adc
dec
aas
rol
adc
popf
es
sbb
add
mov
dec
mov
cs
jecxz
fsubs
out
ss
fcomp
insb
jnp
adc
fmulp
int3
cmp
mov
dec
ret
xlat
mov
shrb
das
mov
fwait
out
das
outsl
les
shrb
inc
xor
jmp
push
imul
xor
daa
jb
loope
leave
xor
out
cli
or
sub
dec
test
jno
lea
jne
stc
cld
roll
mov
sub
inc
sub
mov
out
idivb
sbb
cmc
stc
cmpl
sub
sub
push
out
cmpsb
fwait
pop
inc
fidivl
mov
pop
dec
pop
mov
aaa
sbbb
inc
sub
ljmp
scas
adc
stos
push
lea
mov
lods
and
repz
test
stos
lret
popa
sub
mov
scas
icebp
xchg
cmp
dec
push
jno
xchg
mov
scas
dec
lret
jecxz
pop
addr16
cs
test
add
mov
or
rep
fdivl
stos
es
mov
ret
das
push
or
jg
stos
mov
push
bound
push
mov
and
jne
scas
nop
mov
cld
daa
stos
faddl
ficoms
xchg
sub
push
gs
fidivrl
push
inc
insb
cmpsl
sub
push
and
mov
sbb
lret
fdivs
push
pop
je
pop
cmp
stos
in
inc
xor
inc
movsb
add
fistl
in
add
sub
sub
iret
jns
inc
arpl
shr
inc
rolb
repz
or
adc
xor
ss
fwait
ds
inc
jg
jns
sbb
mov
mov
into
mov
push
inc
or
jb
ficompl
insl
movsb
jmp
in
mov
mov
lods
adc
int3
add
frstor
imul
outsb
imul
imul
jl
loope
icebp
and
jecxz
loopne
sub
mov
jge
ds
push
mov
push
test
jne
push
int3
jno
sub
add
je
cmp
cmp
xchg
mov
icebp
insb
fistpl
imul
pop
out
or
ja
sub
inc
add
push
cmpsl
fnstcw
xchg
lock
inc
push
ret
std
outsl
and
leave
fldl
clc
jg
lds
mov
push
fmull
pop
add
into
sti
or
mov
sbb
daa
mov
adc
mulb
rorl
lds
xlat
add
lock
ret
add
mov
pusha
sub
loop
cltd
shlb
jno
int3
lret
cmp
dec
stc
xchg
jg
ja
lea
lods
arpl
mov
xchg
cmp
scas
scas
pop
icebp
inc
je
sub
std
pop
ss
inc
cmp
es
mov
cmp
sbb
fsubl
iret
faddl
dec
ljmp
or
mov
jmp
in
int
fisttpl
test
pop
pop
or
xchg
ret
test
popf
test
jp
jl
imul
xchg
cli
xchg
sarl
push
cmp
in
iret
lods
push
dec
push
je
jae
jnp
into
xchg
test
imul
insl
or
jg
mov
mov
add
popa
es
movsl
outsl
movsl
dec
dec
cli
clc
test
fsubl
out
mov
testl
pop
pop
mov
scas
mov
ds
pop
mov
xchg
jle
js
inc
and
stc
movsl
or
decl
xchg
jne
sub
mov
and
js
sub
leave
stc
fucomi
xchg
jl
mov
push
aad
pop
jle
arpl
fwait
mov
cmpb
mov
dec
lahf
sahf
or
test
xchg
lcall
repz
and
testl
mov
cltd
mov
into
jnp
dec
ret
push
dec
add
lret
pop
jno
mov
inc
hlt
mov
xchg
aad
iret
pop
jne
jle
faddl
shl
testb
dec
lcall
outsl
ss
mov
jle
adc
adc
or
aas
xor
mov
add
orb
scas
mov
scas
inc
insl
push
das
pushf
cli
sub
dec
push
xor
adc
test
divl
jbe
testl
movsl
cmpsl
push
nop
xchg
in
out
icebp
fs
dec
sti
fdivr
les
rcrb
push
mulb
div
rol
or
mov
sbb
in
xchg
mov
sbb
std
cmp
popf
jns
push
sahf
cmp
test
jne
int
pop
add
adc
xchg
test
hlt
in
push
sub
mov
aad
adc
scas
pop
mov
push
push
jnp
push
fists
push
stc
pop
push
xchg
notb
jb
push
shrb
lret
negb
inc
adc
push
aaa
imul
push
addr16
jns
les
sub
mov
sahf
pop
add
js
sbb
pop
aaa
jg
shr
mov
sbb
mov
and
inc
mov
push
mov
inc
push
xchg
push
jl
push
jne
pop
ds
lahf
cltd
mov
mov
and
pop
js
xor
imul
loopne
jnp
push
in
push
xchg
pop
mov
cmp
jbe
push
call
or
mov
aad
test
sbb
xorb
scas
inc
push
push
bsf
std
jbe
dec
cs
xor
lret
dec
insb
mov
push
lahf
jno
bound
and
add
jne
xlat
dec
lock
in
dec
scas
dec
int
mov
and
aaa
sub
jne
sub
fidivrl
mov
push
sahf
aas
push
xor
into
ret
fs
gs
jmp
in
pop
mov
ja
pop
pop
cmp
inc
rcrl
movl
stos
ljmp
lods
jl
jmp
cmpsl
out
mov
mov
ffree
andl
or
jmp
add
in
xor
fwait
aas
and
jo
xchg
pushf
mov
or
mov
inc
nop
outsb
test
fldcw
inc
add
insl
xchg
mov
sbb
lahf
or
jmp
or
jae
rcrb
xchg
push
cld
out
pop
cmp
push
test
mov
sub
pop
add
add
xchg
in
int
ds
add
loopne
sbb
sbb
adc
mov
arpl
mov
cs
xlat
xor
jmp
mov
popa
cli
pop
xor
mov
negb
push
lds
js
and
jbe
mov
std
sub
push
imulb
inc
fwait
pusha
sub
lcall
in
jae
mov
loop
xorb
mov
jmp
dec
jbe
aas
shl
adc
adc
scas
inc
inc
gs
jge
lret
fnstsw
arpl
js
jnp
add
in
sbb
daa
cmp
int
cmp
jg
shlb
ja
jbe
nop
add
lcall
push
inc
mov
mov
mov
sub
mov
gs
mov
mov
testb
into
pop
jns
xor
mov
pop
stc
and
push
push
repz
push
mov
popa
out
or
lea
adc
lods
in
cmp
add
and
ss
xchg
pop
cmpsb
jns
stos
xor
mov
mov
outsb
xchg
sbb
xchg
fwait
and
xor
mov
xor
popa
inc
int3
rolb
xlat
dec
adc
or
lods
mov
sbb
mov
insb
gs
dec
je
test
imul
outsl
sbb
or
dec
cmc
fucomip
pop
mov
dec
jb
mov
sbb
adc
sub
cs
or
imul
dec
fwait
mov
inc
xchg
xorl
test
inc
jbe
in
cmpsl
int
mov
pop
stos
pusha
xor
movl
ljmp
add
aad
test
ret
or
aaa
lds
lahf
mov
mov
dec
movsl
bound
test
sarl
mov
sub
fcoml
repz
mov
xchg
test
jle
out
cwtl
aas
jbe
sahf
fisubs
iret
cmpsl
cmp
lods
xor
jae
pop
add
lds
sub
ret
idivl
iret
push
aaa
or
jg
inc
mov
jp
popa
popa
bound
sub
cmp
mov
dec
mov
hlt
imul
mov
ret
add
out
in
mov
push
sub
out
nop
mov
ds
rorl
cli
das
jb
fcompl
js
jge
xor
jns
push
lret
add
or
jp
pusha
mov
mov
xchg
xchg
orl
and
push
jnp
or
ja
push
push
cld
imul
scas
aam
ret
outsl
or
notl
push
dec
rcl
jle
repz
lret
fwait
inc
pushf
int3
test
mov
cli
fadds
test
fnstenv
loopne
es
fildl
repnz
inc
or
add
mov
xchg
int
arpl
aam
rorl
iret
dec
jnp
and
ffreep
ds
pop
mov
gs
mov
test
xor
stc
insb
push
loop
scas
lret
pop
stos
aad
push
popf
fstpt
mov
aaa
push
cmpl
outsl
xchg
or
std
je
mov
in
sub
cmp
cmpsl
scas
push
mov
stos
and
or
add
imul
xor
out
adc
or
jmp
cld
mov
sub
xor
stc
addb
fmulp
mov
out
lret
mov
test
add
addr16
cli
cmc
repz
dec
in
mulb
fcomi
pop
call
or
mov
outsb
out
and
pop
add
in
lods
aad
in
inc
adc
mov
or
addr16
clc
or
add
in
adc
push
pop
and
xlat
mov
xchg
mov
dec
xchg
sbb
adc
cmpsb
cmp
mov
xor
mull
mov
pop
mov
std
dec
inc
addr16
add
jmp
icebp
fistl
test
mov
add
push
jb
fistl
jecxz
mov
push
roll
sub
cwtl
shlb
test
out
fmulp
repz
xchg
sbb
mov
push
aad
out
daa
pop
mov
into
stos
xor
dec
xchg
inc
add
je
pop
inc
shl
aaa
pusha
inc
pushf
or
xchg
pusha
mov
dec
loop
mov
mov
mov
pop
popa
xchg
jbe
mov
push
orl
daa
push
pushf
js
xor
addr16
cmp
rorb
sbb
mov
cmp
sub
inc
jnp
nop
mov
sub
push
cli
and
add
pop
xor
mov
in
inc
loop
xchg
int
shlb
mov
int3
inc
ja
mov
sub
mov
ret
pop
out
add
stc
mov
push
push
and
push
inc
push
call
cmp
rol
lods
or
jb
scas
xor
bound
scas
cmc
sbb
lret
adc
inc
mov
sbb
ret
mov
lds
daa
mov
outsl
xor
call
shll
pop
ss
hlt
das
pop
push
xchg
mov
rol
psubusw
xchg
sbb
mov
push
and
inc
add
dec
pop
dec
or
mov
fmul
js
repnz
test
mov
scas
notb
xor
sbb
test
xor
rcll
mov
rclb
pusha
push
fmull
add
sarl
arpl
or
inc
xchg
xlat
add
shr
cwtl
pop
jo
lods
test
dec
pop
add
cmp
inc
jns
in
pop
popa
sbb
pop
dec
pop
xchg
aam
lods
lahf
pop
das
out
outsb
les
xchg
xchg
mov
and
ss
mov
dec
pop
out
adc
cmp
leave
add
pop
cmc
loop
loopne
mov
lret
std
lock
dec
cmp
xchg
mov
sbb
jb
jno
add
in
fldcw
cli
pop
push
dec
hlt
repnz
cli
cmpsb
pop
pop
popa
inc
shr
inc
daa
fmul
fadd
pop
adc
icebp
jl
sub
ds
outsl
add
jb
mov
lret
scas
lods
hlt
sahf
fsubs
dec
sub
aad
idiv
push
shll
lret
xchg
jp
out
mov
and
or
lcall
cwtl
xchg
jnp
mov
test
fstpl
sbb
mov
es
stos
addr16
push
test
dec
cmpsl
fcoms
cmp
jp
in
adc
scas
cmp
add
daa
and
repz
adc
xchg
imul
out
mov
es
daa
in
or
jnp
sub
std
inc
and
aaa
popf
xchg
rcll
xor
push
dec
enter
xchg
das
hlt
adc
mov
dec
popa
mov
jl
lds
fs
add
sbb
test
xchg
inc
pusha
negl
cmpsb
pop
test
rclb
lahf
push
bound
in
mov
ret
in
xchg
push
and
sbb
or
lock
add
jge
outsl
dec
scas
inc
lret
adc
movsl
popf
ja
adc
jno
adc
or
movsl
loop
enter
in
xchg
imul
sbbb
sub
js
std
mov
test
or
xor
adc
xchg
pop
cmp
inc
sbb
lock
into
nop
dec
dec
aas
add
and
enter
gs
xchg
data16
sub
xor
cmpsb
mov
test
repz
lret
jno
in
aaa
jnp
popa
and
mov
push
xor
jbe
inc
mov
mov
ljmp
pop
out
xlat
jns
ja
mov
jl
adcb
and
dec
jge
add
stc
adc
xchg
dec
and
pop
xchg
aam
adc
and
mov
xchg
add
orb
testl
dec
ret
and
mov
add
in
add
popa
sub
jecxz
inc
lret
push
fisubl
rorb
jle
xor
xchg
push
ljmp
pop
push
push
jmp
pop
int
inc
cltd
add
pop
fcmovnb
mov
xlat
xchg
js
std
mov
push
cmp
adc
jge
inc
xor
inc
aam
mov
add
xchg
push
daa
sbb
xchg
mov
in
sub
dec
jl
popf
push
mov
aas
sahf
jo
popf
and
push
stc
mov
add
xchg
push
xchg
pop
adc
mov
push
push
aaa
mov
dec
icebp
imul
push
in
xor
mov
adc
lds
xchg
leave
jb
mov
xchg
add
pusha
mov
push
sub
jno
gs
mull
inc
mov
inc
add
stc
push
rol
mov
xor
mov
std
outsb
mov
xchg
adc
outsl
and
jmp
dec
mov
iret
add
adc
or
lahf
xor
dec
out
lods
mov
dec
add
sbbl
cmp
fidivrl
add
adc
ss
mov
enter
mov
stc
dec
inc
adc
mov
inc
jbe
mov
ds
add
call
notl
stc
cmp
fcoms
cltd
cmp
jne
mov
jmp
sub
dec
fwait
mov
popa
movsl
cmovg
xchg
movsl
jg
lds
xor
mov
clc
cmp
iret
sbb
xchg
nop
mov
xorl
dec
xlat
sub
lds
push
mov
push
jnp
insb
je
and
jecxz
mov
sarl
pop
imul
lcall
xchg
enter
vdivpd
push
fwait
cltd
fcomp
mov
pop
sub
ficoml
orb
fstl
sbb
js
cmp
sbb
add
sahf
sub
pop
adc
shl
inc
cmp
inc
or
or
sub
daa
ret
aad
adc
xchg
lret
dec
daa
js
in
cltd
sbb
fs
dec
and
cmp
cwtl
aad
dec
push
xor
daa
pop
hlt
lods
sub
cmp
mov
pop
data16
int3
fisttpl
je
dec
mov
inc
ss
lret
mov
enter
jbe
and
hlt
int3
in
pop
and
jge
add
shr
je
pop
add
in
jmp
shrl
xor
scas
into
aam
outsb
xchg
dec
aad
decl
inc
xor
sbb
add
adc
cs
nop
adc
test
in
jmp
lea
cmp
fistpll
and
mov
gs
pushf
inc
fadd
in
mov
push
pushf
mov
andl
inc
seto
test
test
test
cmp
adc
call
pop
xlat
rolb
lods
loop
outsl
and
or
cmp
std
jno
cmp
inc
insw
push
mov
adc
cmovbe
push
ja
stos
mov
bound
and
add
mov
repnz
push
lds
xchg
pop
lcall
fisubrl
and
outsl
mov
pop
pop
ljmp
leave
jl
stc
mov
and
in
xchg
mov
push
movsl
stos
imul
pop
cmp
aas
outsl
or
fwait
sbb
cmpsb
mov
jecxz
out
dec
xor
pop
or
xchg
xchg
push
push
adc
or
pop
xchg
aam
mov
mov
pusha
inc
or
lret
pop
add
jno
xchg
das
and
xor
fisubl
test
inc
mov
jae
jne
test
jmp
rolb
mov
cwtl
pop
or
imul
int3
add
jnp
lods
test
sub
ljmp
and
loop
sbb
xchg
mov
les
mov
mov
iret
adc
lods
fs
les
data16
mov
jge
jl
cmc
mov
adc
enter
cmp
push
dec
aas
test
sbbb
mov
pop
ret
jl
enter
mov
outsb
in
stc
in
repnz
stos
daa
sub
mov
jp
lods
sub
into
push
les
nop
xchg
orb
cmp
jmp
inc
sub
lahf
lock
pop
sti
adc
push
test
pop
xchg
aam
xor
push
xor
pusha
imul
repz
ja
loopne
cmp
sub
lret
jb
lods
or
in
rcl
sub
jnp
xor
push
add
out
mov
ret
repz
push
or
jg
xor
mov
pop
in
mov
inc
sbb
jae
fsubrs
std
and
add
ja
fs
in
mov
jbe
pop
pop
inc
and
cmp
jae
and
pop
icebp
mov
out
ffreep
or
fidivrl
push
adc
jne
cwtl
adc
pop
cmp
in
sub
int3
sub
lcall
cld
pusha
bound
scas
cmp
xchg
div
mov
inc
push
dec
popf
divb
imul
cmp
inc
fsubs
inc
sbbl
push
int
xchg
xchg
jns
loopne
add
mov
add
ror
pop
xchg
test
push
subb
rclb
sti
loope
push
pushf
movsl
movsl
pop
cltd
pop
lcall
pop
fs
dec
cmpl
popa
sbb
roll
outsl
popf
mov
dec
pushf
mov
mov
xchg
cmpsb
rsqrtps
fwait
jl
inc
lret
imul
ror
je
xchg
lcall
dec
bound
xchg
push
pop
fwait
or
imul
push
mov
xchg
aaa
cmp
nop
dec
inc
push
clc
jge
adc
jo
iret
ret
mov
xchg
add
and
clc
scas
mov
stc
mov
insb
dec
cs
adc
fwait
pop
xlat
fildl
push
pop
fst
movsl
fdivrs
mov
xor
cmp
enter
lock
fstpl
mov
xchg
push
rcll
imul
sub
shll
stos
jb
in
pusha
lcall
mov
fwait
add
fnstenv
sbb
outsl
mov
cwtl
pop
mov
sbb
mov
xor
xchg
stos
cld
pop
push
jo
and
int3
and
outsb
adc
pop
mov
jg
lret
cmp
mov
sub
pusha
outsl
enter
iret
inc
jge
popa
add
mov
arpl
sbb
aas
xor
fadd
jae
adc
push
sbb
mov
push
dec
in
pop
mov
imul
mov
testl
insb
lahf
pushf
push
stos
sbb
cmp
test
xor
jb
fildl
cmp
adc
or
sbb
sbb
sub
jns
je
jno
sti
loopne
mov
jae
int3
lods
adc
mov
sbbb
popa
repz
addr16
clc
xchg
clc
xor
in
ret
jns
push
add
es
sub
sbb
push
add
lods
add
cmp
xchg
fisubrs
pop
lea
or
out
sub
cmp
es
pop
inc
push
push
and
mov
in
push
rorb
jnp
out
jle
and
add
inc
inc
es
sahf
iret
fldt
cltd
mov
mov
jnp
adc
or
mov
adc
pop
cwtl
outsb
xor
sub
inc
push
add
pop
outsl
mov
out
scas
adc
je
js
fdiv
sub
notl
int
cwtl
xchg
cmp
jns
popf
test
aaa
inc
aas
push
pusha
cs
push
pop
adc
push
mov
xbegin
repz
jo
dec
dec
arpl
imul
mov
fadds
push
lcall
push
cli
decl
inc
iret
cmp
fwait
push
adcb
int3
mov
dec
bound
incl
xlat
rcr
sub
notl
outsb
lahf
out
mov
push
popa
aad
xor
icebp
push
jb
cmp
addr16
fs
scas
out
adc
ds
sub
test
pop
sti
xor
cmpsl
cmp
andl
dec
push
sti
jbe
jbe
test
mov
test
insb
and
daa
les
xchg
xor
js
movsb
adc
js
scas
xor
and
dec
jg
push
push
loopne
stos
or
lahf
adc
cmp
jmp
pusha
add
fldcw
xchg
add
push
sub
clc
push
insb
outsl
stos
pop
push
ret
in
pop
pop
jno
mov
sub
sti
jne
sub
fwait
jl
pop
in
fisubl
mov
adc
mov
or
lods
loope
xchg
inc
cs
jl
cmp
pop
jmp
je
xor
mov
lret
fisubrs
ja
repz
into
sub
out
mov
loope
jno
pop
add
mov
or
pushf
gs
gs
repnz
adcl
test
and
roll
std
les
pop
outsl
cld
jle
sub
in
jecxz
jae
push
lahf
xchg
cmc
add
add
jns
sbb
sbb
mov
add
lods
jno
and
mov
mov
add
sbb
cmpsl
mov
mov
test
cmc
add
jno
push
fidivrs
xchg
jle
adcl
mov
adc
cmc
or
ficoms
icebp
aad
loopne
cmpsb
push
ret
sub
shr
or
inc
mov
inc
mov
cli
jae
and
and
pusha
test
insl
cmpsb
popa
repz
gs
fsincos
ret
out
jo
cmp
dec
rcr
lds
or
test
push
scas
iret
or
inc
test
push
pop
sahf
jne
loop
bound
xor
daa
pop
ret
ljmp
sub
test
inc
inc
dec
loope
arpl
and
adc
dec
push
aam
cmp
xchg
sbb
push
jne
sub
int
bound
sub
mov
cwtl
in
movsl
rcrl
cs
mov
mov
pop
jne
ljmp
push
or
je
adc
clc
and
add
int
push
push
imul
cltd
xchg
mov
cmpsb
aad
xlat
pop
mov
cli
sbb
mov
rorb
cmp
adcb
mov
aad
shr
adc
adc
rcr
jl
jge
xchg
in
pusha
lahf
add
inc
push
imul
inc
sbb
pop
in
shlb
mov
pop
outsb
lods
xchg
push
mov
adc
cli
sub
cwtl
xor
into
js
ljmp
mov
and
pop
into
mov
shlb
mov
daa
mov
jne
adc
sar
fiadds
mov
fadds
stos
mov
fwait
mov
mov
notl
jno
xor
cs
mov
jnp
test
dec
stc
scas
aad
loop
and
sub
psubsw
dec
mov
fnstsw
cmp
push
push
ss
push
movsb
dec
cltd
scas
inc
ja
clc
mov
or
pop
sbb
or
shrb
xor
in
pop
push
popa
in
xor
fwait
das
jecxz
sbb
sbb
xchg
cmp
arpl
inc
push
out
ljmp
aad
idiv
push
push
test
xchg
xchg
roll
shlb
inc
fisubl
xchg
sbbl
scas
into
mov
adcb
inc
les
sbb
aad
adc
in
mov
data16
fidivrs
sarl
icebp
push
sub
push
loope
jl
in
mov
jmp
push
insb
push
popf
lret
sbb
pop
imul
cld
cs
fs
jp
fiadds
jno
cltd
push
mov
ret
mov
pop
cmp
add
test
jne
lret
inc
jg
lcall
jb
mov
jne
enter
mov
adc
xor
push
scas
out
push
pushf
wrmsr
push
dec
push
jle
sub
jno
cmc
jns
fmul
fcmovne
les
dec
cmp
mov
sahf
push
cmp
mov
iret
fstps
arpl
and
xchg
sub
fnsave
gs
dec
ds
inc
inc
mov
jge
mov
movsl
push
mov
jo
mov
inc
or
adc
push
pop
loopne
roll
es
jp
in
scas
test
je
xchg
add
pop
and
cld
pop
add
loopne
push
push
jo
cmp
testl
aad
cltd
insl
loope
xor
xchg
aas
mov
outsl
shlb
scas
mov
int
push
mov
sarb
xchg
jae
dec
sub
mov
cld
in
adc
xor
dec
xor
scas
push
xor
cltd
cmp
dec
jbe
gs
sahf
xor
mov
mov
jp
cmp
rcll
or
fadd
outsl
cmp
test
xchg
and
push
mov
imul
fcom
shlb
fistpll
push
hlt
mov
fidivrl
add
jo
mov
in
jae
ret
dec
in
cs
es
adc
push
mov
in
aam
mov
clc
mov
inc
adc
out
pop
mov
int
add
out
xchg
addr16
xchg
movsl
mov
inc
inc
jmp
aam
sbb
pop
fnsave
cld
pop
ss
in
insl
lods
or
or
sbb
ja
pop
scas
add
stos
sub
sahf
fs
iret
ja
mov
andl
insl
xchg
xor
xor
loop
gs
sahf
inc
dec
xchg
out
shlb
rcrb
test
pop
pop
ret
mov
and
lret
pop
test
cmc
cltd
xchg
xchg
cld
in
sub
in
rorb
insb
push
ret
movb
lods
xchg
push
scas
pop
imul
mov
test
andb
aad
cwtl
pop
xor
pop
lods
add
cmpsl
ret
scas
xchg
out
and
xchg
mov
in
xchg
insl
bound
enter
and
dec
rclb
cmp
push
push
and
sbbb
sbb
or
and
mov
mov
shrb
jb
push
jge
jne
inc
ss
push
mov
js
sbb
xor
sbb
mov
aaa
pop
es
out
xchg
icebp
mov
fcompl
mov
pop
push
pop
cmc
push
inc
cli
iret
lret
sub
mov
dec
xchg
sbb
mov
or
in
push
pop
inc
ljmp
cmc
xchg
jne
mov
pop
add
jns
adc
or
scas
and
stos
xor
rol
push
leave
push
pop
test
xchg
xchg
mov
aad
pusha
mov
add
jo
cmp
cli
or
lods
mov
jle
add
mov
jb
xlat
pop
enter
loope
addr16
push
mov
xchg
inc
test
outsb
clc
or
push
addr16
jg
mov
nop
pop
push
mov
testl
aad
movb
stos
test
xchg
xchg
jno
imul
xorl
jne
sub
push
jns
sahf
inc
aad
xor
aam
mov
fwait
mov
ficomps
xchg
sub
int
icebp
mov
lcall
cmp
push
lcall
push
dec
jb
sbb
mov
jg
dec
sbbb
push
int
push
in
dec
and
loop
std
or
mov
dec
inc
mov
mull
jbe
xor
stos
xlat
push
lods
dec
or
pushf
mov
sti
and
loope
lods
das
mov
dec
in
add
cmp
cs
lret
push
and
sub
movsb
fsubs
jb
and
into
pop
out
cmp
jno
ljmp
cmp
push
jl
sub
rcrl
rol
cmpsb
jle
scas
push
aaa
mov
leave
xor
jnp
jnp
sahf
cmc
outsl
mov
xchg
xchg
je
push
push
dec
xorb
fcomip
ret
imul
imul
es
mov
or
cmc
cli
ss
ret
leave
int3
dec
push
xor
lds
test
or
and
pop
inc
pop
and
inc
sahf
int
cli
addr16
mov
clc
xor
imulb
lcall
mov
out
sbb
out
fdivs
pop
stos
and
mov
fdivl
repnz
std
iret
loop
mov
add
test
int3
add
in
call
jp
lret
lahf
lahf
nop
stc
clc
and
mov
js
sbb
push
icebp
test
xchg
cltd
add
inc
cltd
insb
cmpsl
sbb
movsl
shl
mov
mov
aad
pop
mov
in
cltd
inc
mov
or
divl
and
stc
inc
xchg
pop
arpl
mov
popa
sbb
mov
into
push
jp
movsb
loop
negb
lods
jg
sbb
lret
or
xchg
iret
jcxz
pop
push
outsl
push
push
outsb
adc
sub
mov
add
flds
fcomi
leave
das
les
stos
adc
pusha
out
sahf
cmpl
sub
repz
sbb
mov
sbb
inc
cmpb
faddl
movsl
mov
push
and
mov
fidivrl
test
lcall
pop
inc
jnp
repz
cmp
and
xchg
insl
ja
jb
xor
adc
mov
aaa
mov
jbe
sub
in
or
mov
xor
jo
add
inc
ffree
fadds
popa
aas
fiaddl
mov
ja
arpl
lds
pop
pushf
es
ret
add
ficompl
mov
loopne
fnsave
jp
cmpsb
add
outsl
movsb
mov
dec
out
insb
outsl
add
jp
es
adc
mov
xor
or
les
mov
bound
push
cltd
aad
xchg
test
mov
mov
daa
hlt
outsb
popf
mov
adc
sbb
pop
faddl
push
pusha
mov
xor
add
lahf
mov
pop
inc
cld
pusha
jp
inc
enter
push
xchg
inc
pop
pop
mov
mov
imul
cmp
push
or
xchg
daa
pop
fwait
inc
or
lea
sahf
xor
xcrypt-cfb
cmpsl
in
adc
mov
out
mov
into
lods
mov
cld
aaa
lds
in
or
nop
adc
and
xchg
insb
movsl
notb
fiaddl
sbb
out
hlt
loope
xor
and
push
push
stos
test
and
lods
test
pop
imul
aam
adc
mov
push
movsb
adc
mov
jecxz
push
sbb
int
mov
ss
lods
sub
cltd
loope
popa
rolb
stos
mov
nop
cltd
xchg
xchg
rcr
repnz
push
je
in
pusha
fldt
cmp
rcrb
mov
sbb
xchg
sub
sub
push
mov
adc
data16
push
out
push
ror
xchg
dec
sub
int3
cltd
aaa
sub
jle
cmp
cwtl
pop
mov
shl
mov
fcomps
mov
mov
add
jg
out
jle
push
call
jns
les
jmp
sub
repnz
pop
insl
pushf
sti
pop
arpl
test
push
push
sbb
jo
jns
icebp
inc
push
or
sbb
lock
fcompp
daa
and
pop
adc
lock
cld
jl
adc
shll
jae
mov
inc
int3
jbe
sbb
cmc
in
lret
cmp
adc
ljmp
into
sub
mov
ret
clc
out
mov
jl
cwtl
jns
sbb
insb
lahf
cwtl
xchg
sub
sbb
jne
jns
aaa
lahf
addr16
cmc
loopne
test
das
or
lret
out
xchg
outsb
outsl
test
out
loopne
out
in
fistpll
aad
mov
clc
ljmp
add
fbstp
or
fisttpl
xor
mov
jbe
aaa
data16
bound
or
rorl
xchg
mov
cmp
in
push
lods
xchg
jl
cli
test
cld
insb
call
cld
addr16
shl
pop
pusha
add
or
adc
sub
test
test
mov
aad
loopne
inc
sub
das
xchg
out
stos
cltd
pushf
sbb
ds
jb
xor
gs
ret
dec
jbe
mov
ror
and
testb
shll
adc
adc
and
add
push
pop
and
mov
daa
inc
pusha
mov
repz
and
jl
xor
jbe
dec
lahf
ja
or
pop
aas
mov
popa
mov
dec
ljmp
shlb
jno
cmpsl
shrl
sbb
pop
or
cmpsl
stc
jmp
test
pop
jl
scas
push
iret
or
insl
clc
fsubs
scas
jno
cmp
dec
xchg
pusha
xchg
push
lret
jg
movsl
hlt
repz
lods
ret
outsb
mov
mov
xchg
jmp
lods
in
das
ret
sub
pusha
lock
inc
sarb
push
xor
push
lds
sar
mov
cmp
xor
pop
ss
lea
cmp
cli
adc
aam
cmovns
add
dec
xchg
cmpsb
nop
mov
sahf
pop
cmp
pushw
pop
push
fisubl
jbe
popa
mov
stos
adc
sahf
dec
repz
add
push
or
orl
sbb
lock
push
jne
in
cs
mov
pusha
pop
cmp
lcall
adc
outsl
or
insl
push
and
pop
hlt
lret
jecxz
mov
xchg
arpl
jnp
pop
loopne
pushf
loop
push
xor
jo
lods
ja
lds
dec
enter
sub
sti
mov
mov
pop
lods
mov
adc
test
xor
xor
popa
ja
ljmp
jg
jb
lock
pushf
cs
fmull
or
push
sub
fdivrl
cbtw
movsl
ljmp
out
fstpl
xchg
xor
iret
cmp
ret
js
jno
jo
fsubrl
mov
jno
popf
fsubp
aam
shrl
fsts
mov
fsubs
stc
cmc
jns
nop
adcl
jo
add
outsb
mov
mov
sbb
cmc
test
lods
cmpsb
dec
jl
mov
dec
sub
sub
jns
inc
or
arpl
cmp
jnp
sbb
sbb
insl
jbe
leave
mov
popf
je
jl
and
loopne
movsl
mov
insl
jge
or
int
out
fstps
pop
icebp
mov
das
rcll
xor
add
xor
jp
add
jae
incl
mov
push
mov
push
ret
mov
cmp
movsb
pushl
mov
leave
cs
scas
paddw
stc
pop
outsb
sub
jns
sbb
lock
std
in
push
mov
pusha
push
addl
mov
repz
bound
dec
pop
jmp
mov
push
movsl
aam
es
lcall
pushf
pop
daa
mov
xor
lcall
sahf
je
and
cmc
arpl
iret
jmp
mov
and
lods
jmp
shll
and
or
sbb
sbb
push
imul
int3
inc
jle
cmp
fsubrs
test
aam
sub
int3
adc
out
xchg
add
js
divl
mov
movsl
ss
push
adc
fwait
cli
cmpsl
and
xchg
scas
jno
ret
fwait
mov
dec
mov
adc
faddp
out
pavgw
mov
inc
popa
movsb
inc
mov
push
and
push
dec
adc
fdivrp
xor
or
inc
sub
fildl
std
ret
aad
mov
cs
js
jge
jno
pushf
fisttps
neg
repz
movsl
push
mov
into
addr16
dec
fcmovnbe
xor
mov
cmp
jge
xchg
data16
add
pushf
sub
data16
icebp
les
lcall
push
mov
ret
subl
int3
adc
push
lret
fisttps
imul
mov
xchg
push
push
add
cmp
and
idivl
mov
je
dec
inc
mov
rcll
loope
cmp
mov
xor
jno
notb
mov
imul
mov
call
loope
jns
sti
out
dec
pop
test
cmp
lahf
mov
in
std
jne
out
lret
stc
arpl
loope
sti
es
cmp
xor
jns
loope
adc
add
lret
pusha
dec
cwtl
rcrb
cmpsb
or
popf
cli
mov
call
cli
push
cli
mov
jno
fsubl
fistpl
pop
test
psubusb
or
flds
int
fs
cld
std
ds
and
sub
mov
jle
push
gs
xor
je
aas
push
fsubrp
add
inc
xchg
and
push
loop
cmp
test
xchg
inc
rolb
jge
out
loope
and
out
ss
aad
xor
sti
adcl
sti
pop
jae
inc
test
xchg
lods
shl
imul
adc
fs
mov
xchg
adc
xchg
or
xor
aas
ds
cmp
or
xchg
dec
xchg
push
lcall
add
xchg
mov
push
je
or
arpl
inc
shlb
inc
cmp
adcl
call
clc
push
lea
jno
aas
js
cltd
mov
dec
and
pop
int3
fisttpl
pop
lret
mov
fstps
fwait
jp
pop
in
fs
mov
rcr
call
pop
inc
xchg
ss
cld
mov
adc
shlb
pop
sahf
xor
push
mov
push
icebp
imul
add
xor
push
cmp
arpl
pop
insb
add
mov
aam
rolb
xor
mov
hlt
xorb
xchg
shlb
lahf
and
stos
movsl
push
std
ljmp
sti
or
cmpsl
scas
or
fwait
inc
mov
ficomps
testb
lock
push
fwait
xchg
movsb
dec
mov
pop
in
scas
aaa
cmpsb
stc
jnp
mov
mov
sbb
jle
cmc
jne
insl
lret
sbbb
push
lock
lea
notl
sbb
xchg
popf
scas
movsl
in
mov
pushf
stos
bound
and
mov
icebp
mov
cmc
or
fucomp
in
or
lds
lds
repnz
inc
dec
jmp
mov
xor
hlt
fwait
mov
das
push
dec
xchg
or
movsl
lret
xor
and
les
xchg
pop
or
xchg
jmp
jp
ficomps
jmp
movsl
imul
xlat
cmc
icebp
xchg
lahf
test
lock
push
push
sub
adc
add
inc
scas
insl
repnz
pop
xor
push
push
ja
and
mov
in
gs
jnp
adc
adc
push
push
inc
addr16
push
add
ss
jmp
aaa
fs
movsl
in
sbb
iret
push
movsl
es
leave
cmpsb
adc
sbb
sub
mov
pop
lcall
xor
daa
inc
add
rorb
in
or
sub
xlat
repnz
ret
out
or
mov
mov
jg
add
daa
ficomps
push
out
xchg
pusha
loop
lds
sub
daa
stos
xchg
lds
jl
in
shrl
cwtl
dec
movsb
daa
inc
stc
jmp
jbe
loopne
repnz
daa
mov
subb
add
mov
repz
movl
jbe
arpl
popa
mov
mov
sti
roll
xchg
popf
adc
mov
ljmp
adc
jne
mov
inc
xor
mov
shll
sbb
push
lahf
pop
lea
sahf
addl
js
jle
sub
mov
mov
mov
sbb
dec
xor
int3
cs
mov
in
dec
xor
mov
dec
mov
pop
xchg
rcrl
lahf
cli
or
subl
cltd
inc
cmp
addl
daa
lret
cs
ljmp
cmc
lret
add
popa
sti
jnp
dec
inc
or
jl
dec
cmp
int3
fs
xorl
insb
push
dec
push
mov
sahf
sbb
and
out
xchg
mov
outsb
sahf
shl
pop
mov
insl
popa
mov
cld
mov
or
and
add
xchg
adc
cmp
ss
call
cmpb
xchg
push
pop
mull
stos
jbe
cltd
loop
jg
pop
mov
lret
mov
sub
mov
outsb
cld
mov
mov
push
add
fs
jg
cmp
nop
inc
push
or
ljmp
imul
sbb
cli
push
ret
pop
lea
sti
test
or
jmp
les
xor
lcall
repnz
xor
sbb
stos
sub
mov
dec
push
sub
mov
push
sbb
sub
jb
ret
stos
scas
add
bound
imulb
lret
pop
fsubrs
xor
outsl
sti
sbb
mov
dec
es
cmp
cld
jge
lahf
mov
les
out
pusha
jecxz
mov
mov
mov
or
fnsave
lahf
sahf
insb
or
jne
sarl
pop
aam
pop
addr16
int3
repz
adc
mov
mov
inc
pop
xchg
outsb
pop
imul
push
movsb
into
movaps
add
and
or
or
dec
test
lods
cmp
and
mov
sbb
adc
push
pop
icebp
mov
out
leave
sbb
cmp
push
lret
and
cmp
adc
jb
negb
jne
add
push
addr16
cmp
inc
in
ds
stos
inc
lea
data16
outsl
andl
js
dec
xor
std
loope
xor
rolb
test
mov
insl
push
lcall
repnz
and
popa
sbb
and
das
imul
std
mov
or
cmc
pushl
stc
aaa
or
inc
sub
mov
pop
gs
cmpsb
shll
and
mov
icebp
mov
scas
push
popf
pusha
sbb
sahf
inc
sbb
movsb
push
rorl
adc
daa
push
xchg
xlat
ss
les
jp
iret
repnz
sub
lahf
mov
subb
iret
jp
xlat
pop
pop
sub
adc
sub
imul
icebp
repz
pusha
pop
in
xor
or
inc
mov
dec
lret
fstpt
shrl
cmc
or
lods
xor
mov
fs
cmp
arpl
or
jg
mov
or
pop
inc
xchg
je
cmp
into
push
mov
andb
inc
fsubrl
and
outsl
stos
sub
and
sahf
test
cmpsb
and
cld
call
adc
mov
dec
add
scas
mov
cld
jmp
into
pop
pop
push
jp
push
mov
xchg
sbb
aas
or
jg
mov
or
shrl
inc
xor
outsb
cmp
push
test
lret
mov
repnz
ficoms
nop
fisttpl
es
push
mul
shrl
mov
fcoml
pop
cmp
cvtdq2ps
adc
in
icebp
dec
mov
ret
dec
jno
dec
mov
mov
adc
jmp
inc
and
mov
lods
or
roll
ficoms
ja
inc
push
mov
mov
sbb
movsb
loope
push
and
loop
sub
jo
sti
xchg
aaa
cmpsb
cmp
mov
and
push
pop
lcall
mov
lret
mov
and
cmp
push
adc
mov
mov
pop
add
adc
dec
icebp
inc
xor
pop
xchg
test
push
pop
ja
xchg
shll
pop
test
jns
add
outsb
adcl
sub
aaa
test
or
out
add
das
inc
or
or
pop
iret
das
cld
inc
mov
fsubr
sbb
sarb
ja
rcll
mov
arpl
scas
add
cmp
push
and
jbe
test
adc
pop
sub
or
mov
repnz
pop
mulb
scas
lea
decl
pop
aaa
or
cs
mov
xchg
jecxz
repnz
add
in
imul
loope
cmpsb
mov
sub
inc
adc
arpl
test
jg
sti
dec
xor
mov
cltd
push
jle
lods
in
leave
xchg
jne
jno
dec
and
jno
jl
cmp
add
xchg
dec
icebp
pusha
or
push
loope
out
xchg
adc
fwait
jo
repnz
insl
cmpsb
nop
pop
mov
adc
sbb
std
sub
mov
add
add
adc
push
ljmp
mov
lret
and
das
in
or
repnz
push
cmp
push
add
inc
jmp
mov
cmp
leave
loopne
xorb
inc
into
js
dec
jmp
ljmp
pusha
mov
shl
jbe
fnstenv
jae
push
jo
dec
xchg
cmpsl
jo
outsl
mov
addr16
cmp
fldenv
push
cmpsb
insb
call
jbe
mov
sub
stos
fiaddl
push
xor
and
and
fucom
add
add
pop
popf
xor
test
cmpsl
xchg
inc
mov
lahf
shl
call
and
fsubrl
stos
sub
scas
fstpt
push
call
add
and
test
or
sbb
or
lahf
xchg
lahf
aad
mov
jmp
push
fs
aaa
or
sbb
mov
push
in
lahf
pop
jnp
movsl
dec
daa
imulb
mov
xor
cmpsb
dec
pop
push
mov
jp
dec
pop
mov
fldln2
sbb
mov
dec
sub
xor
mov
push
mov
adc
aam
loope
loope
and
push
and
shl
adc
pop
std
inc
or
dec
and
in
lods
xchg
dec
lea
or
out
ror
popa
sbb
jle
insl
sbb
jp
lret
std
sub
scas
popa
out
sbb
mov
and
call
mov
imul
sub
xor
in
lea
mov
shlb
cmp
dec
sbb
jg
adc
hlt
aad
in
inc
aas
mov
xchg
jns
jecxz
std
cmp
dec
lahf
lahf
divb
sti
lret
xchg
sbb
rcrb
iret
das
daa
lret
imul
sti
clc
mov
in
shll
mov
outsl
bswap
dec
dec
sub
shlb
out
mov
or
repz
test
movsb
xor
movsl
sbb
and
mov
xor
xchg
js
jmp
mov
adc
int3
mov
pusha
sbb
add
mov
fs
pop
test
adc
rcll
jge
imul
loopne
pop
sti
adc
pusha
inc
inc
arpl
loope
ret
enter
int3
popa
cmp
out
adc
fcomp
ljmp
lods
mov
icebp
or
pop
jmp
fs
sub
push
mov
addr16
push
and
cmpsl
fidivl
cwtl
aad
lods
test
jne
mov
push
or
cmp
enter
addr16
push
iret
xor
push
cmpsl
xor
sub
pop
in
js
out
inc
in
loopne
aaa
mov
shlb
jp
inc
leave
xor
daa
psllq
pop
add
xor
xchg
repz
gs
in
nop
repz
push
or
mov
fsts
in
pusha
and
add
xchg
push
cmc
fildl
mov
pop
fwait
ljmp
xor
adc
mov
adc
dec
sub
addr16
sub
aam
mov
lcall
mov
pushf
push
mov
dec
or
imul
lcall
jo
or
inc
pop
outsb
in
fnstcw
out
rolb
dec
adc
inc
imul
movsl
push
xchg
cmp
jecxz
xchg
dec
jb
mov
sbbb
in
sbb
mov
jb
pop
and
sub
mov
int3
test
mov
sub
jnp
mov
fs
in
or
jno
insl
mov
es
push
mov
mov
scas
pushl
jge
fs
jmp
mov
or
sbb
pop
add
push
or
sub
dec
cld
shl
ret
nop
or
jmp
or
mov
mov
mov
mov
or
add
adc
in
cmp
call
jae
mov
cmovg
loopne
and
jmp
and
push
push
aam
mov
push
dec
mov
or
jmp
mov
fildl
pop
loopne
pusha
stos
out
pop
imul
fwait
clc
aas
sbb
xor
dec
inc
in
int3
outsb
fstp
cltd
popa
sbb
or
mov
and
inc
les
data16
lds
movsl
fmul
sbb
lods
fadd
add
jl
jae
notb
ljmp
push
mov
cld
stos
leave
xor
mov
in
call
xor
mov
out
mov
or
jecxz
mov
xchg
mov
pop
mov
test
mov
push
xor
dec
fstps
lods
fstpt
imul
push
bound
jnp
fidivrs
pause
jb
movsb
mov
dec
sbb
sub
push
cld
int3
push
push
xor
insl
adc
or
pop
sti
push
in
xchg
mov
push
into
and
mov
stc
xor
shll
mov
jo
xor
pop
inc
sbb
add
cmpsl
jno
aad
add
sti
dec
push
mov
pop
xor
pop
dec
scas
pop
lret
adcl
mov
pop
adc
lock
shlb
jmp
aad
mov
mov
mov
out
lods
push
ja
xor
jle
xchg
and
cmpsb
jae
sti
xchg
sti
mov
lods
and
sahf
and
cwtl
loope
cmp
push
jno
xchg
adc
stc
ficoml
xchg
nop
pop
sub
inc
jge
dec
adc
cmp
sbb
jge
sub
les
xchg
hlt
stc
xchg
and
fisubrs
or
leave
sub
jb
ss
sbb
cmp
xchg
lods
sub
jnp
push
leave
sahf
xchg
add
outsl
xor
push
xor
mov
sbb
push
and
stos
fsubrs
sbb
loope
aaa
jp
popa
mov
cmp
dec
call
or
jbe
push
loopne
mov
push
pop
push
mov
in
or
cmpsb
or
mov
mov
jge
jne
sub
test
add
mov
outsb
pushf
lcall
out
sbb
mov
xor
add
add
jmp
xlat
jbe
cmp
xor
sub
fcoms
lds
aas
ret
lods
shlb
push
add
loope
ljmp
popf
push
jns
lcall
insl
call
mov
loopne
je
or
inc
push
mov
adc
mov
jl
fbstp
out
mov
jge
or
add
bound
pusha
and
or
sub
xchg
test
pop
lcall
test
or
js
and
scas
mov
add
in
imul
fnsave
jbe
aas
adc
stos
or
testl
and
jnp
fs
cwtl
aas
out
push
shll
out
test
mov
add
sahf
daa
into
push
mov
mull
ljmp
pop
int3
fstl
xchg
enter
rclb
gs
icebp
xor
lret
mov
gs
test
mov
lock
add
in
pop
or
not
es
xchg
push
xchg
testl
adc
icebp
pop
jae
mov
or
pop
xor
mov
shr
pop
mov
push
mov
pushf
xor
fisubl
or
aam
xor
pop
mov
aam
mov
or
pusha
xchg
xor
in
movb
sahf
inc
pop
mov
add
xor
jae
imul
inc
jecxz
inc
inc
pushl
insl
jb
or
test
xchg
mov
sti
push
shll
dec
sbb
cmp
lret
mov
gs
mov
xchg
or
sub
push
mov
int3
xchg
push
add
push
movsb
sbb
push
fwait
jno
cmc
in
loope
cmp
inc
ja
cmp
ss
push
mov
jbe
in
push
int3
or
loop
cwtl
xor
adc
mov
push
fs
pop
lds
cmp
daa
repz
insl
lahf
mov
call
xchg
sbb
sbb
jno
fnsave
adc
scas
dec
pop
hlt
mov
or
subb
shll
lock
push
je
rcrl
mov
fstpl
imul
or
pop
outsl
int
pop
xor
jo
or
cmpsl
cmpsb
jle
dec
xchg
out
aam
sbb
loopne
jb
jecxz
lock
inc
xchg
stc
xchg
frstor
add
std
scas
fcomps
call
cmp
jne
mov
into
js
mov
mov
les
call
lea
push
scas
mov
pop
test
in
sahf
fwait
fs
jb
push
testb
stc
add
idivl
ret
cli
sub
xor
push
adc
mov
cmpsb
pop
popf
hlt
xor
addr16
fwait
ret
or
icebp
xlat
adc
aas
push
and
lret
jle
dec
bound
out
lcall
and
fildl
negl
int3
or
sbb
ret
decl
divb
xchg
fs
jmp
rorb
test
lret
push
cwtl
out
jle
pop
scas
xchg
inc
mov
sub
sub
and
and
mov
adc
in
into
data16
mov
push
pop
clc
movsb
inc
cmp
dec
mov
loope
addr16
dec
les
xor
cmp
or
dec
xor
sub
out
arpl
jmp
gs
push
sbb
shl
xor
ret
and
pop
in
mov
jp
dec
cmp
fisttpl
hlt
push
fimull
sub
cmc
loop
nopl
popf
fisttpll
pop
shll
jecxz
jae
inc
xor
push
daa
jns
push
in
dec
loop
mov
in
mov
adcl
ficoml
inc
repnz
cwtl
jo
test
sbb
sti
jae
std
scas
add
push
out
push
pop
inc
inc
sbb
test
bound
pop
adc
aaa
push
sbb
loope
mov
mov
jns
jl
addl
fdivs
imul
or
outsb
mov
pop
inc
arpl
mov
dec
test
jg
icebp
and
xlat
and
and
jo
push
pop
cwtl
rcrl
adc
leave
mov
pop
ret
xchg
jp
jg
mov
or
idivb
jge
rcl
dec
jg
loop
mov
rorl
jmp
pop
stc
mov
dec
push
and
xchg
pushf
ds
jecxz
sub
sub
insb
mov
adc
and
icebp
cmp
rcrl
adc
loop
test
mov
mov
leave
std
aas
out
rol
sbb
inc
xchg
xchg
loop
lds
fbld
scas
mov
mov
pusha
fstpl
pop
adc
dec
pop
incl
aad
jno
pop
fst
mov
popf
das
and
xchg
xchg
sbb
loopne
daa
add
push
push
push
jnp
cmp
out
xchg
xchg
fidivs
add
or
or
imul
rcll
cmp
enter
xchg
jl
inc
mov
in
jge
addb
imul
jg
fistps
and
in
pop
loope
leave
cli
push
shll
sub
and
and
sbb
rcll
and
mov
enter
daa
mov
repnz
les
adc
stc
cmp
inc
jmp
in
clc
lret
scas
out
lret
outsb
rcll
inc
sub
test
nop
cmp
and
insb
sub
into
sub
lret
loopne
cmpsl
repz
xchg
les
movsb
cmp
and
gs
jno
jg
roll
loopne
add
xchg
aas
lock
push
aad
dec
scas
sahf
add
inc
aam
or
outsb
xor
cmpsl
loope
xchg
pop
xchg
test
jmp
fidivrl
aad
xor
mov
or
xor
jp
sub
sbb
inc
aaa
sbb
fmulp
sbbl
sub
pop
inc
std
out
add
movb
mov
jmp
jg
stos
test
aad
inc
in
sub
push
test
inc
cmc
leave
out
xor
mov
mov
jp
mov
out
mov
stc
arpl
inc
cmp
xchg
movsl
mov
inc
mov
test
mov
and
out
mov
jb
adc
ds
and
test
xchg
mov
ss
into
imul
stos
dec
mov
gs
daa
xchg
je
lcall
icebp
jp
and
dec
dec
enter
pop
or
movsb
outsl
push
out
pop
dec
jo
cmp
ljmp
lss
mov
jmp
jb
int
jne
mov
jg
push
jbe
ficoms
mov
xchg
pop
mov
xlat
and
jp
push
stc
adcl
sbb
pop
clc
mov
in
js
adc
das
sbb
das
popf
adc
xor
inc
lea
imul
or
icebp
cmp
push
ss
cmpsb
pmaxub
popa
shll
outsl
lods
std
inc
popf
stc
mov
test
mov
pushf
int3
pop
test
xchg
inc
mov
mov
mov
jmp
cltd
dec
push
ja
sub
into
loopne
subb
push
mov
ja
sub
aas
xchg
enter
mov
xor
xor
xor
pusha
test
imul
pop
test
xor
push
int
xchg
jl
fimuls
cmc
inc
sub
xchg
rorl
adc
inc
cmp
mov
dec
sub
xlat
mov
inc
iret
scas
cld
aas
pcmpgtb
out
cmc
mov
fsubl
push
sbb
sbb
add
sub
xor
mov
inc
sbb
jne
inc
aad
adc
popa
std
xchg
jmp
arpl
loop
and
push
mov
mov
xlat
and
jg
mov
jecxz
test
mov
in
xorl
cmp
shrl
xchg
xchg
fdivl
add
in
fdivr
negl
lret
call
adc
lds
inc
mov
scas
push
or
add
loop
pop
insb
dec
sub
je
or
sahf
imul
pop
mov
jl
mov
and
mov
int3
lods
cmp
loop
and
adc
add
lods
push
loopne
clc
add
out
inc
adc
sahf
addr16
cmpsb
mov
jge
jmp
cmp
jae
lock
out
imul
mov
sbb
pushf
and
add
ficoms
adc
repz
jle
daa
js
and
clc
fdecstp
lods
xchg
lahf
sub
adc
fstpt
adc
jle
jecxz
dec
xchg
daa
imul
mov
je
inc
push
cli
xorb
pop
sahf
stc
xor
jmp
leave
popa
xchg
jmp
imulb
cmp
xchg
cli
lods
jle
leave
popa
dec
cmpxchg
shlb
pop
rcrb
roll
mov
test
sti
popf
std
push
xchg
gs
gs
ss
sub
addr16
pushf
popa
aam
js
bound
test
cmp
mov
shll
pop
cmp
xchg
xchg
mov
dec
sbb
shrb
les
aas
dec
outsl
push
pop
mov
fcmovb
addr16
stos
and
sbb
mov
and
mov
notl
fs
xor
xchg
fimuls
push
mov
jge
xchg
insl
cmpsl
int
push
roll
or
push
adc
pop
jg
inc
or
in
daa
pop
cmp
pop
insb
loope
xor
add
mov
hlt
mov
cmp
movl
nop
ljmp
mov
fs
ljmp
mov
test
fucomip
ja
rorl
jae
movsl
push
mov
jno
mov
sbb
cs
testb
push
dec
xor
scas
jno
jne
dec
push
fisubrs
cmp
xor
sbb
and
cmp
push
nop
mov
xchg
lea
mov
sub
filds
jno
ja
ret
bound
enter
movsb
aam
jnp
in
push
dec
in
pop
jae
xchg
pop
cmpl
xchg
adc
xchg
roll
pusha
shl
stc
jecxz
jge
lock
aam
fidivs
sahf
pop
inc
stos
jmp
das
inc
ffreep
adc
in
mov
sbb
out
pop
lret
enter
push
sub
xor
jge
pop
push
add
clc
pushf
fimull
mov
jno
fcompl
sbb
dec
dec
sbb
stos
push
mov
jl
cmc
mov
inc
jmp
xlat
mov
sub
xor
push
out
iret
icebp
movsl
mov
mov
add
and
repnz
nop
mov
xor
gs
jne
push
dec
add
leave
adc
mov
ret
pop
ss
sub
push
inc
push
imul
pusha
dec
cmp
fsts
dec
mov
dec
pop
xchg
outsb
jbe
push
add
iret
pop
loop
jne
ljmp
jg
outsl
fstpl
adc
loop
jbe
fldcw
push
push
cmpsl
test
mov
sbb
je
adc
or
inc
dec
mov
mov
movsl
push
push
mov
inc
imul
push
sbb
das
jge
or
pop
mov
sbbb
dec
push
jmp
ja
adc
outsl
push
pop
out
orl
les
insl
data16
inc
fstp
addr16
sti
mov
pop
jnp
mov
sbb
test
test
out
push
sbb
push
out
push
sub
push
pop
and
ret
xchg
add
inc
rcrb
add
mov
dec
cmp
xchg
add
adc
filds
rcrb
xor
pop
jle
rorl
jmp
pop
orb
push
out
jp
out
add
flds
push
pop
xchg
insl
dec
push
cmp
mov
in
mov
add
fistpll
shll
jl
in
test
pop
ret
ljmp
outsb
sub
sbb
xchg
bound
xor
aam
fiaddl
xchg
or
pop
incl
mov
add
sbbl
jge
ja
sub
orl
mov
mov
push
sarl
aam
test
shlb
push
gs
dec
fisubrl
addr16
call
clc
cmp
pop
mov
aas
xor
cmp
rcrl
xor
and
jecxz
cmc
nop
mov
jl
sub
jne
mov
adc
cmp
pop
ljmp
cli
cmp
ss
imul
jae
call
popf
push
sub
pusha
mov
pushf
shll
dec
push
sahf
xor
and
mov
pop
int3
ret
insb
sbb
fucomip
dec
mov
mov
pop
gs
fists
cli
adc
mov
ficompl
push
iret
dec
mov
inc
sbb
jno
sbb
or
ror
push
pop
pop
outsl
arpl
pusha
lahf
add
jmp
sbb
add
push
adc
mov
push
xchg
mov
sbb
andl
push
lock
pop
cmpsl
sbb
add
jbe
xchg
pop
push
nop
xchg
inc
nop
push
xchg
ja
xchg
or
xor
inc
inc
pshufw
icebp
add
or
mov
sti
leave
dec
sbb
out
les
movsb
jns
and
cmp
scas
sub
lret
aaa
out
in
ret
or
jecxz
inc
xchg
test
mov
dec
push
fs
jb
shlb
ja
mov
movsb
addl
or
jb
fstps
cld
mov
jg
fists
dec
fnstcw
lods
mov
out
pop
ss
icebp
fsubrp
sbb
inc
and
lahf
scas
cmp
inc
in
inc
cmpsb
jmp
and
test
sahf
scas
adc
dec
xor
les
jo
push
jge
aam
cmc
pop
mov
in
mov
rcl
sbb
jmp
jnp
jbe
cmpl
pop
or
jbe
dec
push
lea
or
xor
js
inc
mov
aam
sub
popa
addr16
iret
rclb
push
or
fstpt
lcall
dec
cmp
jo
push
dec
hlt
xor
xchg
jmp
cmp
xorl
ficompl
cmp
inc
inc
cmp
aas
popf
mov
sahf
cmpsb
sbb
pop
adc
inc
cmpsb
mov
lcall
sub
cmp
push
test
fcoml
call
mov
inc
cmpsb
orl
fdivr
xchg
adc
fisttpll
push
fcomp
xchg
or
mov
sti
xor
rcrb
cwtl
test
jne
iret
add
fcoms
mov
lret
mov
pushf
mov
sub
int3
fmulp
je
and
pop
nop
sti
popa
mov
jno
int3
rolb
cmp
imul
ret
jbe
adc
hlt
adc
cmp
push
or
add
dec
lea
cmpsb
cmc
test
stos
jecxz
das
test
fimull
loop
mov
xchg
fld
jmp
mull
add
pop
inc
dec
and
cmp
lcall
pop
pop
loop
pop
repz
dec
cwtl
dec
or
movsl
pop
pushl
or
jae
data16
jg
mov
and
adc
inc
sbb
in
imul
xchg
push
gs
inc
je
pop
lock
pop
mov
sti
jg
std
test
ficomps
es
xor
fwait
jae
mov
xchg
push
outsl
fidivs
ret
fdivrl
push
xchg
dec
ljmp
das
hlt
inc
xor
add
in
jns
lods
fisubrl
sbb
out
out
push
sub
push
push
fidivs
pop
adc
ret
clc
xchg
int
or
out
shrb
cmp
fildl
xchg
es
pop
jns
fs
push
scas
xor
mov
adc
push
mov
mov
fildll
jmp
cld
xor
mov
and
jg
leave
xor
push
int3
test
push
shr
jl
jecxz
and
xor
push
dec
movsb
cmpsb
inc
push
js
pop
outsl
xorl
test
inc
push
cmp
pop
in
mov
push
out
int3
rorb
pushf
push
dec
lahf
push
rcl
mov
xor
mov
pop
sub
mov
mov
mov
and
enter
pop
jbe
nop
les
loopne
clc
sub
sti
pop
xor
mov
fstpt
or
in
sub
inc
adc
push
or
dec
sarl
mov
cwtl
xchg
xchg
pop
mov
mov
or
mov
xor
push
les
sbb
ret
cli
dec
push
ror
cmpsl
data16
popa
lahf
aam
repnz
js
jb
and
or
lcall
ja
jle
dec
cmp
pop
pop
cwtl
ret
pop
neg
pop
push
xor
mov
ret
push
pop
enter
pop
mov
pushl
mov
popf
leave
mov
adc
dec
lods
mov
push
mov
dec
pop
mov
mov
call
jnp
adc
sahf
cmovne
jp
into
pop
or
mov
push
inc
add
pop
in
call
jno
lods
push
test
jp
bound
cmp
ror
imul
jne
cmp
push
and
xchg
cli
ret
out
stos
xchg
je
push
inc
xor
xorb
push
xchg
rcr
dec
push
repz
lods
jp
imul
xchg
mov
jno
sub
jp
push
aas
and
add
sub
push
test
aam
dec
pop
or
cmc
mov
out
stos
mov
dec
les
sbb
pop
inc
arpl
les
call
push
out
ret
mov
mov
and
push
out
push
sub
data16
aad
popa
frstor
xor
enter
mov
jecxz
ret
bswap
int
lret
das
imul
and
cmc
push
inc
repnz
cli
aaa
int
and
inc
daa
or
test
pop
lcall
push
xchg
fldt
push
in
sub
out
enter
enter
or
jbe
lcall
pusha
loope
fsubrs
nop
into
cmp
popf
cwtl
push
aaa
inc
and
xchg
test
call
ljmp
and
out
xor
int3
mov
xor
push
fwait
mov
sbb
lods
dec
sbb
in
xchg
jns
cmp
das
add
mov
sbb
imul
pop
xor
and
xchg
push
cmp
pop
sti
or
cli
int
jl
cmpsl
cmpsb
mov
push
sti
ds
cmp
mov
inc
adc
clc
lds
xor
mov
mov
inc
dec
lds
int
mov
mov
or
fimuls
adc
or
pushf
mov
sahf
xor
aaa
xchg
int
stc
dec
bound
mov
neg
jnp
rclb
or
scas
hlt
inc
lods
mov
loopne
mov
rcrb
les
sub
push
ljmp
add
clc
bound
cmp
pushf
mov
or
lock
xor
pop
sub
out
jno
inc
sbb
mov
jnp
ja
dec
adc
call
pop
push
stc
xlat
mov
xchg
pop
lret
pop
out
mov
xchg
and
mov
xor
aam
lahf
movsl
push
int3
movsl
shl
iret
sub
xchg
pop
pop
sub
mov
xchg
repz
xchg
jl
mov
fsubrs
sti
test
lea
adc
push
nop
mov
inc
fidivl
jmp
les
push
inc
or
pusha
int3
imul
imul
push
out
ret
in
pop
dec
ja
pushf
or
jecxz
jg
imull
jno
or
sub
jbe
or
imul
pop
scas
data16
hlt
aam
push
cmp
lcall
mov
pop
dec
scas
sub
mov
enter
mov
lods
icebp
adc
movsb
test
mov
dec
fadds
cmp
mov
xchg
ret
dec
adc
hlt
xchg
inc
xchg
mov
mov
clc
inc
lret
xchg
test
pop
adc
enter
mov
sbb
mov
rorl
add
sub
out
xchg
aaa
push
enter
mov
ds
lods
xchg
xchg
xchg
pushf
int3
mov
push
lea
bnd
jo
negl
push
je
or
cmpsl
xchg
sub
dec
push
out
lea
inc
inc
leave
inc
dec
pusha
or
ljmp
xchg
in
iret
jl
jmp
fneni(8087
xchg
jl
push
iret
cmp
aam
xchg
bound
inc
sub
icebp
inc
orb
cmp
stc
fdiv
inc
cmp
push
shrl
movsl
mov
jecxz
pop
inc
pushf
fisttps
mov
add
loope
sbb
aad
fcomps
cmp
pop
mov
popf
push
fdivl
jno
or
fcoms
mov
jno
and
xor
adc
add
gs
sti
push
test
sub
xor
adc
test
mov
insb
icebp
cmp
hlt
dec
in
or
arpl
sub
push
jb
mov
sub
lret
mov
cmpl
imul
loope
mov
adc
shlb
or
repz
add
ss
stos
leave
xchg
inc
pop
call
inc
sbb
sub
leave
cmp
je
popf
in
test
add
cmpsl
push
jo
out
or
sti
mov
mov
icebp
popf
or
dec
pop
pop
mov
outsb
insl
rcr
xchg
jmp
loope
data16
mov
sub
loopne
popf
and
ror
daa
pop
push
push
out
shl
sbb
lcall
stos
lds
inc
and
cs
in
lahf
mov
sbb
daa
fadds
je
or
scas
xchg
or
and
int3
nop
push
sub
addr16
lea
lea
xchg
jnp
pop
mov
xchg
call
inc
or
sub
in
aam
icebp
mov
push
stos
mov
das
mov
pop
xor
or
cmpsb
bound
sub
sub
dec
sarb
out
add
pop
cmpsl
mov
sbb
lret
push
ret
add
mov
adc
push
adc
add
dec
mov
xchg
bound
fildll
sub
or
jns
jnp
sar
jecxz
jne
xlat
or
mov
mov
cmp
scas
xor
jecxz
cwtl
mov
jle
inc
push
outsb
fs
mov
ja
rcrl
std
mov
arpl
test
xchg
xchg
mov
roll
mov
fbstp
sbb
xor
jle
movsl
add
xchg
lea
mov
push
sbb
inc
mov
movsb
add
add
lds
test
jmp
clc
iret
mov
cmp
cmp
outsl
loopne
punpckhwd
imul
cmpsb
lds
adc
and
adc
shr
xchg
loop
scas
loope
inc
cmpsb
stc
sbb
cmpsb
bound
fnstenv
es
ja
cmp
jge
push
add
sub
rcr
sbb
dec
push
cmp
icebp
pop
and
inc
fistpll
or
add
data16
jns
imul
fldenv
imul
mov
xchg
and
insb
fwait
cmp
and
xlat
jg
jne
xor
mov
xchg
mov
xchg
sbb
cmp
js
cli
fistps
or
adc
lds
push
adc
sbb
ss
mov
and
test
mov
in
cmp
faddp
sub
loop
ss
ret
dec
jb
popa
mov
xor
scas
shr
or
jg
mov
adc
jle
pop
out
lahf
push
cmpsl
lret
jno
scas
push
insb
int3
gs
xor
ret
iret
mul
pop
push
adc
je
ja
fidivl
insl
stc
insl
das
and
jns
inc
mov
xchg
pushf
or
jae
test
pop
inc
dec
dec
mov
jl
lods
dec
bound
fstpl
fwait
lock
cmc
jle
idivb
in
add
fwait
push
xor
test
icebp
clc
fstp
test
mov
es
outsb
les
rclb
lds
lods
add
push
ljmp
inc
xchg
in
movsb
loope
cltd
addr16
mov
addr16
cmpl
mov
popf
test
push
cmp
arpl
xor
test
cmp
push
es
pop
jecxz
int3
std
push
lods
sbb
jns
mov
fisubrs
negl
jp,pn
or
mov
jp
mov
mov
xor
stc
movsb
imul
push
jl
shl
lcall
mov
sub
add
sub
xchg
xchg
adc
leave
cmp
push
loopne
into
sbb
ja
mov
xor
rolb
rorb
leave
pop
and
icebp
mov
inc
das
add
and
and
and
lcall
sub
in
mov
enter
push
cltd
jo
sub
popa
add
insb
movsl
fimull
mov
adc
push
sti
jmp
pop
sarb
pop
imul
into
popfw
test
mov
pop
int3
xchg
mov
or
das
shrl
lahf
push
mov
sbb
movsb
jmp
sbb
sub
hlt
sub
mov
mov
cltd
ds
into
or
icebp
or
mov
push
std
cmpsb
inc
push
jnp
mov
xchg
xchg
jnp
int
pop
sub
or
mov
push
scas
popf
mov
mov
pusha
jno
rol
jne
aas
cmpsl
mov
mov
test
shr
add
add
cs
sti
outsb
jns
popf
cld
push
push
mov
scas
or
arpl
inc
lea
lcall
ljmp
add
inc
loopne
sbb
cmpsb
fcoml
pop
adc
xor
push
push
loopne
faddl
xchg
mov
ss
jle
stos
fwait
jno
push
outsb
cmp
xor
lret
aaa
lea
and
lcall
in
adc
shll
arpl
push
xlat
xor
cltd
shrb
push
sub
or
inc
mov
and
mov
add
sbb
dec
xchg
and
inc
adc
mov
pop
cs
add
xlat
je
lret
std
pop
int
lahf
enter
out
mov
loop
test
push
pushf
mov
testl
or
add
xor
es
xor
jp
push
mov
mov
xchg
xchg
pop
dec
or
xchg
sti
jo
sub
ja
outsl
lods
lods
adc
mov
div
mov
add
imul
inc
xchg
pop
and
pop
sub
xor
or
sub
inc
add
clc
cmpsl
fwait
arpl
jg
push
jno
imul
dec
mov
mov
mov
jne
cltd
shll
push
test
jge
and
repz
enter
mov
je
fsubs
into
filds
hlt
scas
ret
pop
cmpsb
mov
negb
iret
rolb
subb
cmpsb
pusha
adc
lods
xchg
or
adc
test
popa
sub
fcoml
mov
loope
jo
mov
sbb
lahf
out
rcl
push
jae
das
mov
or
sbb
mov
pop
clc
mov
mov
cwtl
call
and
jle
cmc
push
pop
fistl
pop
cmp
xor
dec
aas
mov
mov
pop
jne
sti
lret
cltd
data16
jp
inc
enter
stos
push
adc
lret
xlat
outsl
repnz
outsl
testl
fadd
shll
mov
jge
sbb
jl
cmp
cmp
cmpsb
push
pavgb
pusha
cld
cmpsb
add
lods
push
cmp
das
shrl
ret
mov
call
sub
test
pop
fnsave
push
leave
and
cmc
lods
iret
cmp
dec
sub
push
cmpsb
stc
cmp
xor
jb
xchg
jp
mov
inc
pop
cmpb
out
fstpt
and
pushf
add
mov
dec
pop
cmpl
xchg
in
push
xchg
dec
imul
frstor
int
hlt
imul
push
ret
icebp
adc
inc
out
push
scas
xchg
mov
mov
aas
adc
das
cmc
push
add
ret
and
icebp
cld
fsubrs
sub
mov
mov
xchg
stc
movsl
scas
aam
push
pop
mov
and
rolb
or
sbb
inc
xor
pop
cltd
mov
cmp
cltd
add
movsl
sarl
mov
jnp
ss
xorb
adc
sahf
arpl
loop
push
jmp
mov
jl
push
or
mov
enter
cld
int
bound
orb
fisttpll
and
fs
stos
pxor
ja
ret
pop
add
leave
or
std
cmp
sub
pop
fs
aad
cmp
inc
repnz
cmpsb
inc
xor
cld
cmp
xchg
sahf
in
ret
out
ficomps
icebp
inc
push
sbb
test
pop
les
mov
xor
jbe
mov
loopne
ja
mov
or
xchg
inc
and
outsb
daa
fdivr
stos
aam
xor
xor
int
push
or
mov
sub
add
sub
int3
adc
fisttps
adcl
test
xor
jp
mov
pop
adc
test
dec
lods
les
xor
cs
cmp
pop
lret
mov
xor
das
and
ja
sbb
pusha
mov
adc
add
inc
mov
shrl
in
push
mov
push
sarl
dec
leave
sbb
ljmp
push
aad
dec
fadds
adc
mov
cmpsb
mov
push
cmp
mov
fnsave
aam
sbb
push
ja
and
test
dec
mov
sahf
fsts
orl
and
and
les
pop
pushf
movsb
andl
jnp
cmpsl
pushf
insl
xor
in
push
scas
lods
inc
maskmovq
xchg
xchg
add
inc
mov
xorl
ja
cmpsb
or
cwtl
dec
push
cmp
xchg
andb
cld
out
push
cmp
icebp
xchg
pop
pop
movsb
enter
dec
xlat
mov
jb
leave
xchg
out
xchg
test
or
cmp
dec
loop
test
dec
fsubl
ret
mov
dec
into
sub
lahf
ret
sbb
cmp
ss
or
clc
scas
push
pop
pop
repz
aad
xor
inc
push
sub
or
xchg
inc
sysexit
out
or
jbe
stos
sbb
arpl
test
cli
and
clc
lret
fdivr
sbb
push
pop
pop
loopne
mov
add
mov
mov
popa
loop
cmc
sub
fnstsw
add
or
cmpsb
mov
sub
fwait
push
ret
je
pushf
ret
xorb
jle
jge
int
imul
sub
mov
movsl
loopne
jl
cmpsl
pop
mov
dec
outsl
xor
adcb
or
jmp
cmc
aaa
jo
push
in
xchg
mov
int
push
add
lods
mov
mov
fwait
push
inc
xchg
adc
hlt
or
ja
sbb
lods
addb
int
or
bound
pop
nop
mov
insb
insl
incb
and
imul
add
out
out
fwait
out
mov
insb
hlt
andb
js
icebp
xchg
xchg
insb
sbb
xchg
jnp
push
lock
xchg
inc
sbb
mov
sub
mov
add
xchg
daa
in
cmpsb
shlb
mov
imul
inc
sub
fldenv
jbe
mov
inc
adc
in
add
inc
loopne
andb
push
cmp
jge
push
xchg
push
outsl
shll
imul
movb
push
mov
cmpsl
adc
push
mov
imul
inc
jb
and
xor
mov
mov
vpunpckhqdq
or
push
jmp
dec
dec
ljmp
jbe,pt
roll
mov
pop
sbbb
dec
push
shl
icebp
cmc
mov
dec
pop
add
mov
enter
add
stos
ss
test
mov
mov
mov
outsb
outsl
cmp
mov
out
push
and
pop
jle
push
add
pop
jne
or
pop
js
nop
imul
ljmp
sahf
push
adc
xor
cwtl
jecxz
xchg
adc
jmp
lods
sbb
popl
mov
test
fistpl
mov
imul
bound
lods
jmp
fldenv
aas
gs
pop
sbb
xchg
push
jecxz
jnp
js
jnp
stos
in
into
pop
rcl
push
mov
jle
call
data16
push
pop
ss
test
lret
dec
push
push
push
jns
fidivrl
add
jbe
jae
es
rolb
push
stos
pop
lcall
push
push
pop
cld
hlt
mov
aam
jbe
cmp
mov
push
pop
ror
sti
loop
paddb
lock
mov
data16
jae
sahf
pop
pushf
cmp
push
je
je
inc
push
cpuid
jnp
ljmp
fidivrl
dec
pop
out
stc
out
or
jns
repz
inc
mov
mov
xchg
rcrl
lcall
adc
clc
push
sub
cs
push
lret
in
loope
pop
mov
xchg
scas
push
jecxz
jo
jns
inc
xchg
add
and
insb
push
and
je
adc
daa
mov
jle
scas
cmp
inc
pop
aaa
loop
mov
inc
mov
lahf
xlat
xchg
mov
addr16
aaa
test
cltd
js
fs
dec
in
pop
frstpm(287
push
mov
mov
aam
adc
mov
shll
add
nop
iret
scas
mov
or
popf
lods
scas
jmp
fucomp
clc
lcall
jmp
xchg
push
or
jmp
addr16
in
pop
mov
mov
pop
cli
outsl
leave
jecxz
lret
fiaddl
test
aad
lock
inc
push
sbb
ja
pop
pop
rol
int3
in
jecxz
add
jmp
xchg
repnz
shll
lahf
pop
fcmovu
out
pop
imul
out
clc
int3
add
mov
inc
mov
fldl
aam
mov
clc
pop
stc
mov
push
cmp
lods
ret
xor
test
add
mov
mov
xchg
pop
roll
das
add
enter
cmp
rorl
popa
fstps
dec
scas
subl
aam
add
jno
xlat
stos
lods
aaa
aaa
outsl
xor
or
popf
adc
scas
xor
es
and
inc
jae
inc
les
mov
cmp
and
sti
and
sbb
shl
inc
iret
das
fcomi
cmp
sub
jbe
mov
xor
mov
xchg
js
adc
lock
scas
mov
bound
daa
ds
xchg
cli
loope
inc
aas
inc
das
xor
push
cmp
pushl
cmp
aad
inc
addb
dec
rcr
subl
jmp
aad
sbb
or
gs
orl
jno
aaa
fistpll
cli
adc
inc
pop
xchg
cmc
sub
lods
or
push
push
mov
mov
addr16
test
jp
xor
repz
outsb
imul
leave
jne
jmp
sti
fstps
rcrl
xor
push
mov
xor
repnz
pushf
jle
daa
cmp
cs
mov
or
mov
aam
sbb
pop
fnsave
cmp
mov
adc
repz
push
jg
xchg
ficoml
jge
push
mov
inc
xchg
jb
jns
xor
int3
icebp
push
cmp
nop
dec
nop
cltd
icebp
add
xchg
adc
stos
orb
insl
sbb
mov
sbbl
cmp
test
cli
int3
rcrb
inc
iret
or
jge
sbb
jmp
xor
add
stc
jecxz
sti
xchg
mov
pop
cmpsb
inc
jbe,pn
test
xor
sarl
hlt
xchg
jne
add
sub
push
push
lods
sbb
mov
pop
adc
aad
lcall
dec
dec
mov
int3
lods
mov
pusha
jle
into
mov
xchg
ss
mov
cmpsl
lds
inc
mov
es
mov
jp
xchg
sarb
cld
lock
mov
ret
fwait
inc
sahf
repnz
sub
mov
mov
scas
xchg
test
enter
inc
adc
aas
ret
scas
mov
push
sbb
jg
pop
and
adc
nop
es
out
adc
imul
in
imul
xor
xorb
jne
pop
inc
push
scas
pop
mov
in
xor
movsl
mov
aaa
jns
clc
xor
mov
pop
xchg
xchg
adc
and
test
pusha
rol
pop
push
lods
xor
lret
sub
sbb
add
ret
or
js
out
add
popa
es
cli
cmp
loope
cltd
fdivrl
mov
dec
mov
sbb
shlb
mov
pop
jo
sub
sub
mov
repnz
cltd
xor
mov
sarb
mov
popf
jns
sbb
add
or
out
lock
dec
ret
fcompl
movsw
mov
mov
inc
push
aaa
push
sub
sub
lods
stc
test
pushf
sbb
test
inc
mov
adc
sub
mov
push
sub
movsb
stos
add
outsb
and
lret
jl
loope
fists
rcl
dec
xor
fisubrl
rorb
cmp
sub
mov
sti
push
std
rolb
sub
mov
idivb
aas
mov
in
repz
mov
mov
dec
dec
or
inc
mov
adc
ja
sub
frstor
sti
cmp
xor
ret
push
push
ja
jne
push
cmpsl
xchg
ds
inc
dec
loopne
mov
int
aad
mov
jecxz
cs
cli
icebp
add
xchg
ret
aad
mov
sbb
pop
repnz
and
fldenv
testb
data16
mov
fistps
int
xchg
loope
xor
xor
scas
rolb
mov
iret
add
insl
das
mov
shrb
out
mov
int
shlb
stc
add
xor
in
js
mov
and
insl
ret
mov
imul
aaa
add
lods
push
cmpl
pop
repnz
adc
jno
add
adc
lods
or
sub
adc
popa
sub
inc
rcrb
push
mov
lods
xchg
or
dec
loope
and
addl
aas
daa
sbb
into
scas
repnz
std
cmp
popa
cmp
xorl
icebp
push
in
mov
dec
jne
jnp
scas
pop
lock
repz
adc
in
or
enter
mov
repz
push
mov
ja
dec
scas
lret
sbb
pop
pop
push
pusha
aaa
add
into
test
inc
mov
cmp
mov
jno
test
ficoml
inc
xor
sub
std
jo
vphaddwd
or
pop
fcomps
xchg
popa
cmp
push
int3
test
jno
xor
sahf
mov
cmp
xchg
push
push
push
fwait
jb
cmpsl
test
outsb
xor
in
test
mov
or
testl
loop
inc
cmp
mov
sbb
lock
cltd
cwtl
mov
out
ljmp
push
mov
daa
dec
in
adc
add
andl
sub
rorl
call
sbb
bound
out
dec
add
xlat
add
out
aaa
std
mov
loopne
jmp
xchg
xchg
pop
mov
mov
lret
movsl
out
inc
insb
das
jmp
dec
hlt
test
mov
mov
inc
std
pop
into
rcrb
dec
test
mov
jbe
pop
je
xor
jno
inc
mov
push
rolb
in
pop
shrl
outsb
or
int3
dec
push
lret
jp
movsl
ret
pop
out
cltd
aad
inc
mov
mov
xor
idiv
arpl
mov
pop
push
cltd
adc
sbbb
xchg
jns
push
mov
subb
insb
jno
xor
sub
shll
jbe
and
mov
enter
jl
in
mov
aam
lret
outsb
mov
fwait
imul
pop
imul
pop
shrb
pusha
mov
push
ret
gs
call
sbb
test
aaa
add
cmpsb
cmp
stos
inc
insb
mov
addr16
mov
jle
push
fucomp
inc
mov
or
jge
aas
in
and
repz
call
inc
out
orl
xchg
sysret
leave
movsl
add
fs
movsb
in
and
sub
xor
je
dec
pusha
testb
pushl
ss
daa
in
inc
push
cmpsb
adc
loop
outsl
mov
inc
pusha
notb
lret
mov
lods
cmpsb
lahf
gs
inc
cmpsb
test
outsb
xor
push
aas
mov
in
mov
xchg
inc
mov
dec
mov
or
sub
fsubl
mov
mov
ret
dec
push
push
jmp
push
in
jmp
mov
es
cmc
jmp
popf
or
and
sbb
movsl
scas
dec
clc
stos
cmp
adc
insb
add
mov
outsb
fidivrl
xchg
pop
scas
fistl
sub
or
sub
dec
dec
test
push
mov
lods
loopne
xorps
negl
xchg
dec
sbb
in
iret
nop
in
ret
jecxz
sub
popa
lock
dec
pop
outsl
les
loop
insl
jnp
xor
xchg
mov
out
xor
lods
xchg
les
mov
frstor
sahf
in
or
fwait
adc
mov
imul
repz
in
in
or
pop
xlat
ret
mov
data16
stos
xchg
jns
fwait
or
add
lcall
sbb
jae
sbb
and
push
jl
scas
cwtl
jp
xchg
xor
xor
arpl
cld
push
sbb
cmc
xchg
adc
cli
push
xchg
lahf
inc
mov
das
mov
jbe
cld
in
xchg
cmpsb
mov
rorb
dec
jecxz
in
movntps
jg
fimuls
xor
add
xchg
xor
out
xor
lods
out
cmp
or
out
adcl
pop
sahf
mov
inc
mov
pop
push
sbb
sbb
add
orb
xchg
jno
cmc
xchg
push
push
mov
pushf
push
insl
adc
ret
in
push
rcrb
scas
outsl
adc
push
mov
fsubl
in
adc
mov
jno
fdivrs
inc
test
jnp
xor
pusha
pusha
orl
mov
cwtl
sbb
or
mov
dec
enter
fldt
inc
fs
xor
imul
jmp
cwtl
pushf
outsl
aam
jp
cli
lret
leave
shrb
in
push
in
fistpll
dec
pop
cmp
clc
sub
sahf
mov
movsb
pushf
iret
iret
mov
push
add
pop
clc
cld
jl
adc
sub
dec
xchg
adc
dec
stc
xchg
movsl
pop
ret
ljmp
mov
out
mov
cmc
fistpl
xchg
subl
mov
push
add
inc
test
jmp
f2xm1
inc
xor
vmptrld
in
fwait
pop
ja
fstpt
mull
xchg
cmp
jae
sub
xchg
lcall
ss
dec
jo
xor
jmp
sarb
outsl
pop
jmp
outsl
aam
rcl
addl
push
lods
sub
cmpsl
jmp
xchg
pop
fwait
add
inc
sbb
es
jge
xchg
inc
xor
les
les
inc
inc
ds
rcrl
or
add
push
jl
adc
lret
daa
fists
xor
dec
nop
jge
clc
push
in
iret
dec
lret
daa
adc
pop
pop
clc
fcomip
test
push
cmp
leave
mov
push
cmp
jbe
sbb
and
icebp
test
fnstsw
adc
icebp
mov
daa
push
pop
ret
dec
xchg
aad
pop
mov
test
jbe
sub
clc
mov
testb
movsl
jl
sbb
out
dec
out
add
cli
aas
stos
fisubl
push
lods
xchg
xor
sub
fs
push
aaa
sbb
dec
adc
adc
cmpsb
hlt
cmp
or
pop
fidivrs
in
and
sbb
mov
adc
std
mov
pop
leave
jecxz
mov
sub
fs
jb
sti
hlt
add
push
ja
insb
add
cmp
aad
jecxz
cmc
or
mov
dec
jmp
mov
mov
testb
daa
andl
shlb
mov
movsl
mov
test
xchg
jns
dec
push
or
push
pop
push
cmp
fiadds
ret
ret
stos
inc
ret
leave
push
lcall
lret
xchg
push
inc
mov
ficoml
arpl
push
fdivl
xchg
pop
inc
call
pop
es
cltd
add
ret
jmp
into
or
sub
pop
mov
dec
in
inc
cmp
and
in
push
test
lds
sub
ljmp
add
orb
insb
xchg
jl
and
inc
add
and
mov
xor
push
mov
pusha
push
mov
mov
dec
test
test
loope
jne
and
shr
jo
mov
and
sahf
fnstenv
les
dec
mov
or
xchg
xor
push
cmpsb
pop
and
into
sub
mov
arpl
sbb
push
add
inc
xchg
push
ljmp
dec
mov
and
jle
movsl
adcb
shlb
daa
into
and
or
int
sbb
xchg
jge
xor
jne
xor
mov
lret
mov
je
sub
push
test
mov
cmpsl
inc
test
push
and
push
fbstp
fstpt
addr16
or
ds
ds
pop
and
das
shrl
subb
insb
xor
inc
outsb
adc
add
xchg
xlat
push
insl
clc
into
notl
shlb
push
and
in
inc
lea
sti
rorb
rclb
push
pusha
std
push
adc
sub
mov
mov
decb
es
sbb
lret
mov
pop
repz
xor
adc
decl
rolb
inc
cmp
in
into
fsubrp
into
mov
cmpsb
xor
cmp
cs
mov
test
or
mov
imul
shr
arpl
or
scas
int3
mov
test
in
push
fcomps
jne
dec
or
cmpsb
xchg
mov
jno
movsb
movsl
cwtl
jnp
sbb
lock
out
pop
lahf
xchg
pop
cmp
lea
pusha
add
pop
dec
out
cmp
push
mov
adc
mov
sub
das
loopne
cltd
movsb
pushf
mov
scas
nop
ja
icebp
daa
sub
lds
pusha
dec
inc
icebp
adc
aas
in
test
js
fdivrl
in
in
arpl
jbe
lock
mov
and
add
push
xchg
and
and
mov
out
aam
dec
inc
mov
jo
dec
lock
jo
lret
pop
mov
enter
push
mov
or
jg
pop
pop
addl
push
cmp
sub
loopne
mov
mov
stos
adcb
fwait
mov
inc
xlat
cmpsl
xorl
stos
test
add
scas
mov
out
stos
out
sub
and
fiadds
mov
rolb
push
ss
and
movsb
jno
je
repz
into
pushf
jnp
in
mov
cmp
mov
inc
cmp
or
xchg
xor
xchg
ret
mov
stos
add
xchg
aam
mov
cmpsb
add
subb
xor
or
jl
jp
cmp
orb
leave
xchg
jae
xchg
cs
xchg
add
bnd
addr16
push
push
inc
into
cmpsb
mov
stos
aaa
std
mov
sbb
loopne
int3
fidivs
mov
je
mov
test
pushf
push
sub
stos
dec
lods
mov
xchg
add
fs
wrmsr
sub
loope
loope
stos
das
sahf
mov
xor
sub
jg
push
and
lret
out
sbbb
adc
aaa
scas
sub
and
push
and
xor
dec
push
rcrl
mov
mov
sahf
push
sbb
add
aas
lahf
add
cwtl
pop
jecxz
pushf
dec
cmpsl
test
sbb
adcl
sbb
dec
shl
xor
dec
mov
mov
push
mov
cmp
arpl
fwait
popf
mov
cmc
mov
xor
rcll
push
insb
stos
pop
fwait
insl
lods
cmc
and
loope
aam
add
sub
mov
jecxz
fldl
js
sub
mov
inc
jmp
aam
loopne
pusha
xor
js
add
xchg
das
popf
adc
mov
adc
stos
les
cmpsb
jno
xchg
sub
xor
jecxz
jne
imul
pop
scas
add
mov
cli
addr16
xor
jmp
out
test
inc
decb
popf
rol
ljmp
or
imul
add
or
pop
push
xchg
int
bnd
pop
outsb
mov
and
or
mov
jle
stc
pop
cmp
les
mov
cmp
shufps
jp
cmp
pop
orl
add
sbb
out
and
loope
popl
out
pop
sub
push
pop
inc
into
cmpsl
imul
test
xorl
xor
adc
ret
xchg
mov
mov
jmp
sti
xchg
mov
mov
cmp
loopne
lods
popf
sbb
sub
mov
or
imul
jecxz
shll
mov
mov
aas
out
lahf
insb
stc
sbb
mov
add
lea
popa
mov
lcall
sbb
fwait
data16
push
int3
jno
fs
pop
mov
cmp
faddp
mov
fwait
aas
je
adc
adc
imul
jmp
lret
or
xchg
cmp
fadds
frstor
in
addr16
imul
xrelease
test
add
daa
pop
xorb
push
daa
aaa
stos
or
add
xor
jg
add
in
std
in
hlt
mov
leave
push
adc
fisubl
imul
add
xor
inc
xchg
lea
jmp
mov
jmp
ljmp
popa
push
xor
mov
aam
testl
mov
lds
pop
sub
sub
jnp
in
jmp
int3
sbb
mov
lds
jns,pt
jb
sub
nop
sahf
sub
jecxz
int3
orb
dec
out
jno
fs
mov
cmc
fmull
pop
xchg
pop
insb
cs
or
or
xchg
jno
lds
rcll
cmp
add
push
mov
movsb
jo
ds
xchg
icebp
subl
push
sbb
inc
jae
jns
popf
dec
shrl
fwait
test
push
jnp
push
sbb
xchg
inc
push
push
icebp
xlat
ret
inc
mov
add
pop
and
adc
fstpt
in
movsl
xchg
mov
mov
add
dec
inc
fsubr
mov
ret
mov
nop
sti
fsts
push
imul
es
xchg
icebp
fldenv
jl
out
movsb
inc
pop
jp
ds
xlat
lods
pop
imul
in
dec
int3
inc
pop
and
xor
and
push
scas
jmp
mov
js
adc
int3
push
pop
pop
shll
mov
je
jns
ret
testb
lds
js
xor
dec
mov
sahf
mov
neg
pop
or
mov
daa
dec
pop
or
mov
idivb
add
testb
sbb
in
test
dec
pushf
inc
push
xor
sub
sub
or
or
jge
pop
cmp
ljmp
cli
pop
or
lods
das
mov
sbb
dec
jge
popf
bound
imul
out
ss
adc
inc
movsb
std
in
jae
enter
fdivr
fdivr
add
xor
popf
inc
fnstsw
jb
push
cltd
pop
xchg
mov
pop
cs
std
dec
jge
jae
outsl
in
clc
jnp
push
cld
test
cmpsb
ljmp
mov
sub
xchg
mov
movl
outsb
gs
dec
nop
lock
jb
jbe,pt
bound
push
leave
fistpl
mov
or
push
lods
and
adc
add
pop
stos
shlb
sbb
fstl
out
aas
sbb
push
xchg
popf
pop
out
xchg
xchg
xchg
inc
sbb
jns
cmc
lock
xchg
dec
xchg
dec
add
shrb
mov
js
adc
cli
fildll
add
std
ret
or
insl
sbb
lea
cs
sbb
cmpsb
shll
lods
in
jae
fidivl
popa
sbb
pop
jge
in
test
iret
call
and
je
jp
jb
icebp
add
mov
add
paddsb
sub
mov
cmp
cmp
inc
sub
ljmp
mov
stos
sbb
mov
push
jg
sbb
mov
gs
out
movsb
in
imul
out
insl
cli
inc
and
push
mov
fucomi
sbb
aam
repz
icebp
fidivrl
shr
jns
jp
mov
ja
test
out
or
jecxz
xchg
and
push
ljmp
lods
outsl
xor
lea
mov
fs
es
es
cli
pushf
addr16
fcoms
adc
int3
sbb
add
push
dec
xlat
outsb
arpl
stc
inc
push
out
imul
cmp
mov
hlt
sbb
cmc
or
mov
jne
jns
pop
loop
imul
not
add
aas
inc
pushf
ds
cmpb
sub
mov
stos
mov
mov
jl
mov
jnp
scas
bound
pop
inc
jge
push
push
das
mov
or
jecxz
cld
stos
sub
insl
jno
addr16
cld
xchg
inc
sub
jns
xor
pop
sbb
fstps
mov
cmpsb
xor
incl
xchg
jecxz
inc
adc
or
ret
and
xor
sub
sbb
gs
push
jg
mov
inc
or
ljmp
repz
iret
dec
and
mov
arpl
rolb
fisttps
push
cli
mov
adc
dec
jae
and
jae
idivl
sub
jmp
lods
pop
mov
stc
mov
nop
fisubl
call
iret
fldenv
jp,pn
jnp
es
mov
jne
xchg
jnp
jg
out
mov
ret
fstpt
loopne
stos
add
mov
xor
mov
add
mov
lds
mov
xchg
sti
in
outsb
cmpsl
mov
lret
sub
imul
sub
or
mov
xor
in
inc
pop
or
pop
sbb
sbb
out
out
jnp
rcrl
cltd
and
pop
inc
push
fwait
xchg
icebp
dec
sub
add
dec
dec
bound
sbb
sti
sbbb
adc
inc
enter
cwtl
pop
loopne
mov
adc
pop
mul
jmp
fs
cmpsl
gs
xchg
ljmp
filds
sub
sti
cli
push
sub
lret
add
jg
or
cli
and
in
mov
sti
pop
insb
sbb
jmp
lahf
movsl
test
inc
in
jns
sbb
xchg
addr16
ror
call
icebp
movsl
jge
rorb
fsubs
cmp
dec
xor
adc
mov
xor
lcall
jno
add
aas
push
out
adc
in
loope
inc
or
les
popa
add
testl
aas
mov
div
adc
data16
jmp
sub
inc
insb
cmp
sub
adc
notl
leave
cmp
mov
inc
fldenv
mov
into
sahf
add
jno
dec
leave
xchg
cmp
test
add
je
cmp
aad
lret
sbb
xchg
jbe
pop
lcall
mov
gs
push
jp
xchg
mov
mov
ss
and
cltd
lcall
movsl
add
outsb
loopne
xchg
jo
ss
sbb
cli
scas
dec
mov
dec
orb
lret
pop
mov
or
js
insl
lods
icebp
cmp
mov
or
xchg
and
pop
xchg
fidivl
jle,pn
dec
push
std
pop
mov
lret
jle
ret
add
cmp
add
jne
mov
push
pop
cmpsb
repz
into
inc
jbe
imul
icebp
lock
inc
add
ret
mov
mov
xor
jbe
push
out
aaa
mull
rorl
cwtl
popa
cli
out
and
nop
mov
aas
cld
jl
ret
fnstsw
xchg
nop
mov
jp
sub
or
dec
and
insb
push
insl
icebp
add
jno
jb
jo
mov
add
js
jae
push
fdivl
call
test
leave
imul
pop
dec
in
cwtl
mov
ja,pn
sbb
and
and
add
mov
pop
pop
jecxz
inc
xor
or
pop
out
cld
pushf
addl
mov
and
movsl
xchg
js
push
lods
cmpsl
insb
mov
arpl
xor
cmpxchg
shrb
inc
fistps
xchg
fs
insl
xchg
sbb
adc
mov
pop
int3
mov
es
shl
bound
pop
or
ljmp
push
rcrl
cmp
sub
out
mov
push
xchg
std
or
pop
and
jmp
enter
add
and
decb
repz
icebp
sbb
rcr
cmp
scas
int3
movl
xchg
sahf
sub
dec
adc
dec
jae
stos
jno
mov
push
idivb
insl
mov
add
xor
mov
popa
gs
adc
xor
loope
jns
insb
ror
gs
lahf
mov
fcmovne
ds
inc
sub
outsb
insb
push
hlt
test
in
add
dec
cmc
arpl
jl
cmpb
ja
sub
jl
lods
scas
dec
fxtract
ret
sbb
xchg
repnz
or
pop
inc
imul
stc
xchg
push
and
stos
jne
xchg
aas
xorb
clc
nop
out
cmp
jp
dec
call
lcall
mov
aam
je
mov
fisubrs
jnp
mov
filds
jecxz
jp
out
mov
push
or
in
in
pop
into
sub
movsb
in
mov
les
pop
xchg
test
incb
push
ja
fcmove
jg
clc
shl
les
test
jmp
mov
cwtl
push
jg
cmp
orl
rcll
je
lret
repnz
test
and
cli
cmp
or
fldenv
fucom
inc
mov
add
aas
push
lods
js
imul
es
bound
pop
push
sbb
sub
sub
cmpsb
insb
xchg
sub
jle
popa
dec
adc
addr16
or
das
xchg
cmpsl
dec
jp
push
addr16
icebp
mov
les
cmpsb
inc
push
js
or
lahf
pusha
pop
pop
inc
test
xchg
pushw
mov
loop
xchg
push
jge
pop
xchg
mov
js
cmp
into
mov
cltd
sbb
stc
aad
lret
sbbb
je
aas
imul
mulb
out
das
cmp
inc
scas
les
inc
push
sub
or
mov
roll
mov
add
les
adc
pop
add
ret
imul
mov
xlat
nop
out
lret
add
push
sub
cld
loope
outsb
in
dec
roll
cwtl
mull
sbb
bound
mov
lret
mov
test
push
sti
int
scas
loopne
mov
enter
fxch
xchg
stos
fldt
movsb
pusha
nop
adc
xor
mov
in
dec
loope
push
imul
xchg
or
inc
inc
out
pop
inc
cmp
xchg
sbb
xchg
jmp
mov
cmp
xchg
add
jae
mov
pushf
dec
push
out
add
addr16
in
mov
or
hlt
push
mov
sub
fnstsw
fs
inc
les
cmc
or
test
or
push
cmp
mov
imul
dec
out
and
add
stc
lahf
jge
push
jecxz
mov
pusha
cmp
inc
aas
aad
inc
pop
dec
add
cmp
stos
inc
repnz
and
repnz
xor
adc
into
aad
sub
inc
aaa
xor
and
bound
rcll
negb
or
dec
movsl
sarb
inc
es
aaa
rcrl
das
loop
dec
shl
or
mov
xchg
rcrb
out
rolb
stc
xchg
add
cltd
xor
xor
jae
pop
fcompl
pop
out
xor
shll
xchg
ficoml
sub
test
hlt
out
lock
mov
aad
dec
sbb
and
push
mov
test
push
add
loopne
aaa
lds
call
daa
dec
pop
nop
cmp
mov
cmp
ljmp
inc
xor
jl
vpunpcklwd
stos
fisubl
sbb
sub
in
mov
cmp
cmpsl
nop
jmp
sbb
sti
jo
jo
fucom
push
sbb
xor
lret
xor
int3
mov
pop
cmp
mov
xchg
pop
mov
int
loopne
mov
inc
lcall
sbb
fisubrl
mov
pop
popa
mov
inc
scas
adc
call
and
xchg
dec
push
mov
aas
add
xor
push
cmp
cmp
je
cmp
jge
push
rcrl
sahf
sbb
mov
add
push
pop
jge
cmp
dec
loopne
push
ffree
add
cmp
ret
pop
popa
jg
mov
fs
push
mov
sub
xchg
outsl
push
outsb
inc
xchg
push
dec
fisttps
add
mov
xchg
in
inc
push
inc
sub
add
or
pop
jge
mov
jo
es
dec
mov
js
pop
cmp
sti
sti
out
mov
int
sub
and
cld
mov
xchg
aas
lahf
push
ljmp
imul
and
mov
mov
ljmp
sbb
pop
fsts
adc
int3
push
pop
xor
push
jno
ljmp
rcrl
and
js
dec
and
adc
aaa
xor
cmpsl
or
jne
xchg
test
test
or
loope
push
push
aaa
imul
fdivl
push
notb
in
orl
jmp
loop
int3
rorb
test
push
call
jp
dec
mov
pop
dec
mov
arpl
and
xor
hlt
lret
add
stos
xchg
sub
mov
arpl
jb
in
jecxz
xor
dec
add
int
jne
mov
add
xorb
nop
fdivs
jp
das
js
push
lds
push
dec
dec
jbe
sbb
mov
pop
jbe
aas
sbb
into
pop
sub
xchg
sub
mov
adc
add
mov
outsl
mov
mov
repz
and
mov
cmp
mov
mov
insl
xchg
inc
lahf
cmpsl
es
push
mov
js
ret
mov
jp
ret
sarb
xchg
sarb
adc
mov
lahf
push
repnz
rolb
lods
enter
iret
jg
lods
or
mov
insb
ljmp
fmuls
mov
stc
xchg
dec
inc
fs
cld
dec
add
inc
popa
sbb
and
les
push
mov
leave
push
xchg
into
push
pop
jae
mov
cli
mov
std
add
sti
push
lahf
daa
pop
dec
cmp
ljmp
sbbl
sub
push
test
and
and
data16
js
pop
adc
in
mov
xchg
push
or
popf
mov
push
stos
add
dec
xchg
shrb
push
das
mov
into
push
lods
std
jl
push
adc
adc
das
orb
pop
add
mov
mov
jmp
add
aam
fs
xchg
sub
je
je
sbb
stc
and
lock
cmp
ret
jg
push
sbb
je
mov
or
xor
gs
push
stc
loopne
daa
cmpb
test
xchg
sbb
dec
mov
sbb
or
jecxz
jl
cwtl
sub
xchg
mov
sahf
lods
test
jne
jns
ja
xchg
adc
sbb
sbb
test
cmc
in
pop
and
ss
and
dec
inc
pop
add
or
jg
pop
out
or
divb
inc
mov
adc
dec
xchg
mov
arpl
fsts
lret
jmp
push
ret
fld
loope
add
aad
scas
inc
push
xlat
jbe
mov
xlat
mov
cmp
rcrl
mov
enter
mov
mov
and
adcw
xchg
or
mov
iret
mov
push
je
cmp
push
dec
dec
js
pop
or
xor
repz
sbb
cmp
dec
sub
or
adc
xchg
sti
and
bound
adc
inc
lret
adc
or
stos
and
push
faddp
mov
adc
popa
dec
inc
sbb
dec
loopne
dec
arpl
mov
ss
movsb
test
cltd
jae
or
fildl
xor
ret
mov
pop
xor
outsb
call
and
mov
ret
sub
outsl
jecxz
and
movsb
push
out
std
mov
sbb
loope
sub
movl
outsl
sbb
sbb
xor
sbb
pop
jle
pusha
aaa
int3
mov
pop
inc
jae
les
jmp
subl
cltd
push
xor
sarl
xlat
and
stc
fdivl
and
mov
int3
hlt
iret
ja
popf
lods
aad
cmpsl
pop
cmpsb
cld
arpl
jbe,pn
mov
sti
inc
xchg
cmp
xchg
or
insb
jg
jl
jo
or
jl
insl
inc
je
pop
cld
cmpsl
sbb
fs
or
loope
in
cwtl
rcrb
fnstcw
fs
movsb
in
dec
aad
pop
scas
daa
xchg
lock
fdivl
popf
hlt
sub
pop
mov
add
mov
push
fnstenv
cmp
fcomps
sti
std
push
pop
stc
lds
cmc
and
jbe
test
out
cmp
loope
sub
mov
or
pop
mov
js
xchg
loope
int
addl
sub
mov
jns
xor
adc
shl
mov
clc
lods
xchg
hlt
or
push
test
and
push
ret
int
mov
std
out
fadds
imul
int
xor
fstpt
mov
mov
adc
mov
cmpb
shll
cmpsl
insl
enter
daa
test
pushf
lods
pop
mov
movsl
enter
jae
cmp
incb
rorb
scas
ret
lock
pop
hlt
inc
adc
cmp
push
mov
cmp
daa
mov
sub
xor
add
testl
or
loope
popa
repz
cld
iret
pop
add
adc
push
jecxz
sti
std
addb
dec
pop
inc
js
iret
out
dec
shl
lods
jb
inc
subl
das
adc
jb
pop
jle
mov
leave
cmp
in
shll
inc
dec
sbb
xor
or
imul
negl
mov
mov
or
icebp
inc
cmp
push
push
outsl
mov
imul
je
ja
mov
stos
cmovns
mov
sub
jge
dec
inc
mov
inc
divb
inc
fnstcw
rolb
lea
in
xchg
lods
pop
or
rcrl
idivb
sbb
aam
mov
cmpsb
dec
rcll
aad
daa
push
or
cs
sub
mov
lds
lea
pushf
bound
mov
pop
in
jbe
xchg
xor
push
stos
ja
mov
push
pop
inc
loopne
and
sbb
and
dec
mov
dec
insb
pop
dec
cmp
loop
mov
adc
sub
out
call
call
pop
add
sbb
xchg
gs
popa
insl
mov
loope
mov
cli
xchg
inc
ret
mov
gs
mov
mov
mov
xor
pop
cs
addb
dec
xchg
iret
sbbb
push
iret
leave
xchg
push
call
cmpsl
xchg
add
jne
in
mov
int
mov
scas
sub
mov
sub
mov
es
mov
mov
mov
and
daa
sbb
inc
les
insl
sbb
dec
movsb
addr16
or
pop
xor
xchg
inc
sbb
loop
add
lret
jecxz
xor
into
dec
shlb
movsl
ljmp
in
jbe
push
inc
test
fistpll
or
dec
add
scas
dec
fldenv
repz
mov
sbb
inc
push
and
mov
cltd
mov
sbb
dec
xchg
stc
ja
dec
xchg
std
es
shlb
aaa
sbb
dec
or
and
mov
icebp
add
pop
sbb
mov
cli
ljmp
inc
xchg
mov
jns
pop
mov
mov
sub
mov
loopne
mov
lcall
out
cli
andl
cmpsl
pusha
xchg
push
js
mov
into
fucom
cmp
xor
pop
mov
sbb
test
pop
test
jae
pop
js
cmpsl
nop
insb
rol
rcrl
mov
mov
xor
iret
add
into
adc
jecxz
and
gs
repnz
fs
adc
cmp
or
cld
cmc
jecxz
popf
add
pop
add
and
push
or
push
out
idivl
imul
add
ret
xchg
inc
xchg
jg
addr16
test
lret
jne
mov
xchg
pop
clc
mov
push
arpl
aad
xor
mov
pop
mov
ret
test
add
jge
pop
push
or
and
ficomps
xchg
jnp
cmovge
negb
mov
testl
jb
movsl
pop
mov
sub
or
mov
rorb
mov
fsts
adc
xor
sti
sub
jg
mov
jo
roll
fstps
mov
and
xlat
mov
rcrl
jge
mov
sbb
mov
push
daa
leave
jne
mov
dec
pop
fiaddl
aad
cmp
xlat
cmp
ret
inc
and
test
dec
in
gs
xchg
mov
repnz
sbb
or
sub
and
push
fldl
sarb
shll
adc
adc
xchg
mov
pusha
mov
mov
fnstsw
ja
mov
xor
lock
inc
filds
out
inc
nop
cli
mov
or
xor
mov
scas
nop
pop
aaa
sti
mov
mov
add
xor
push
inc
xlat
jg
pop
fmul
gs
enter
andb
pusha
add
push
and
out
cwtl
int
fcoms
pop
shll
in
mov
inc
decl
xlat
jnp
pop
sbb
push
insb
fs
in
inc
xchg
repnz
dec
sbb
mov
xchg
cs
imul
ret
dec
inc
push
xchg
mov
ret
nop
dec
lahf
adc
and
dec
mov
imul
in
scas
sbb
jo
icebp
test
mov
cmc
int3
jb
push
adc
fwait
imul
ss
mov
mov
jg
mov
dec
lods
or
mov
or
outsl
jle
pop
mov
and
cmp
negl
mov
icebp
loopne
ret
bound
mov
sbb
xchg
pushf
sbb
lcall
daa
mov
in
test
pop
fs
cmpsl
jns
fst
outsl
data16
mov
and
jecxz
lahf
iret
mov
jbe
fcompl
ja
ret
pop
sbb
pusha
cmp
aam
add
jg
pop
jp
lods
sti
and
int
movsl
insl
enter
inc
cli
mov
push
adc
dec
test
sub
pop
lods
daa
dec
push
push
jb
aam
scas
ret
jb
and
mov
lcall
jne
jno
rolb
mov
das
add
push
andb
xchg
popa
out
stos
add
mov
xchg
sub
pop
xchg
dec
mov
push
push
gs
pop
into
int3
xor
fsubl
stos
sub
mov
pop
jb
sbb
aas
popa
pusha
jb
cmc
jbe
and
andl
enter
sub
pop
and
imul
cli
inc
shlb
pop
jb
jb
push
jl
stos
pop
repnz
icebp
jle
fcomps
loope
xor
pop
or
and
rcll
xor
aam
in
add
test
or
mov
cmc
pop
lods
xlat
std
pop
das
sti
jp
test
xchg
mov
or
cli
gs
cmp
mov
xchg
fwait
test
cmp
lcall
mov
ret
cld
jns
jo
inc
and
add
and
cmc
inc
or
mov
jne
adc
stos
scas
sub
out
or
and
mov
fmull
fucomi
cmc
jb
mov
in
mov
pop
cmp
or
enter
cmpsb
lods
xor
dec
or
xor
outsl
cld
push
dec
pop
push
push
dec
mov
out
or
mov
sbb
and
cs
mov
jg
pop
sbb
adc
pop
pop
pop
lcall
sub
add
dec
push
mov
sbb
and
das
xor
je
lret
leave
idivl
stos
dec
push
jp
add
aam
xor
aad
mov
jecxz
dec
into
hlt
inc
or
stos
lahf
std
or
ret
into
jno
data16
es
into
mov
lahf
icebp
cmp
dec
leave
int
cmpsb
leave
pop
inc
inc
popf
cmp
out
xchg
mov
or
cmc
fwait
cmp
add
pop
cmpsb
dec
add
shr
jne
test
daa
lea
or
and
xor
xchg
mov
push
lret
jl
pop
loope
std
ja
mov
mov
outsl
sub
push
dec
data16
outsl
addb
push
in
sub
repnz
adc
in
mov
add
imul
dec
pop
add
shrb
xchg
push
mov
jns
movsl
pop
pop
nop
mov
add
xchg
cmp
jmp
add
stos
dec
lock
js
push
lock
test
sbb
fildl
jecxz
pop
std
dec
xchg
sbb
pop
or
pop
in
jge
add
fmuls
cmp
out
mov
pop
ss
mov
or
jae
mov
loope
aaa
mov
popa
adc
push
hlt
and
popa
mov
test
test
inc
repnz
in
jl
sbb
or
cld
ljmp
or
xlat
ror
nop
and
and
pop
dec
stc
mov
pop
icebp
cwtl
sub
arpl
mov
ja
dec
mov
cs
xchg
in
jno
jo
in
stos
push
cmc
push
pusha
aad
lock
cmpsl
leave
fdivrs
xchg
test
sub
fldt
or
nop
jmp
lea
cli
inc
clc
in
dec
ljmp
push
decl
ficoms
movsb
and
add
cltd
fidivs
ret
adc
out
mov
push
push
mov
mov
ja
cwtl
aad
push
popa
cli
ja
lea
push
pop
faddl
lds
cmp
push
mov
lea
sub
mov
lock
mov
data16
nop
push
or
fnsave
or
cmpl
inc
cmp
lods
scas
mov
mov
mov
data16
les
shrb
cmp
dec
and
jb
jmp
jp
pusha
test
adc
sub
add
mov
cltd
loop
mov
push
movsb
jmp
sub
insb
das
mov
mov
cmp
lret
add
mov
push
repz
lcall
pop
scas
mov
out
pushf
mov
lea
sbb
xor
loopne
mov
fidivs
mov
mov
adc
outsb
sub
jg
and
cmp
jo
pop
cwtl
pop
add
add
sub
push
fsubrs
jbe
mov
ja
sarb
je
sub
addr16
lea
inc
outsb
cs
js
inc
roll
rcll
add
dec
pushf
mov
int
jno
ret
insb
jmp
jmp
add
xchg
mov
mov
inc
fs
jbe
nop
fisttps
mov
xlat
inc
jmp
ficompl
push
subb
jg
lock
xor
lea
insl
outsl
inc
int3
add
lret
pop
aad
pop
jmp
repnz
rorb
pushw
shlb
fwait
lahf
sbb
pop
lock
cld
jle
test
out
pop
cmp
fs
push
shrb
ja
out
sahf
lcall
movsl
faddl
xchg
lds
scas
sub
inc
mov
push
cmp
and
adc
popa
fs
push
sub
arpl
sub
xchg
xchg
in
fists
mov
ret
push
mov
pop
cmp
mov
mov
adc
and
cmp
fistps
popa
imul
int3
mov
jmp
jne
stos
cmp
xchg
jl
loop
push
xchg
lcall
shrb
mov
push
inc
lods
sbb
jecxz
pop
filds
add
fsts
push
sbb
scas
mov
and
adc
int
cmpsl
lahf
seto
jge
push
pusha
movsl
push
mov
rolb
callw
lret
xor
or
std
push
dec
mov
jmp
mov
loop
mov
adc
sahf
push
or
dec
pop
xchg
and
push
adc
popa
rorl
xchg
out
ret
data16
in
sahf
xchg
inc
xlat
sarb
imull
sub
out
cs
mov
mov
out
fldl
sub
js,pt
fidivrs
jge
enter
test
lds
cwtl
pop
or
push
imul
jae
or
rcrl
push
sti
mov
ss
mov
aad
xor
cmp
sub
and
inc
sub
lds
je
lods
inc
inc
inc
and
test
dec
jl
dec
into
and
jbe
jno
adc
adc
inc
cmp
sub
push
cli
inc
add
lods
jmp
in
lret
mov
jle
jnp
daa
aaa
fisubrs
jbe
call
xor
push
mov
cmc
mov
mov
sub
cmpb
inc
dec
sahf
mov
xchg
push
daa
fdivrs
outsl
push
xchg
adc
add
loope
mov
aad
popa
jp
sub
es
dec
js
push
es
xchg
mov
into
mov
jb
imul
xor
fmull
jne
push
pushf
adc
push
jbe
jbe
sub
in
icebp
fs
idivl
inc
pop
push
jg
jle
mov
mov
or
in
or
dec
mov
fwait
mov
mov
sbbb
cmp
test
mov
dec
out
jl
xchg
cld
jnp
inc
sbb
fcmovu
out
test
dec
jns
decl
xchg
pop
sbb
sahf
add
mov
mov
add
and
cltd
jb
movsb
sub
test
xchg
je
test
iret
int3
jg
enter
xor
push
jne
inc
mov
xor
les
imul
fisubrs
aad
insl
and
fistps
arpl
or
lret
mov
sub
xchg
or
xchg
lds
mov
fildll
push
mov
mov
lret
sbb
jne
cli
ds
shll
stos
enter
ja
mov
mov
cmc
adc
sub
xor
iret
inc
enter
pusha
imul
andl
add
cmp
mov
call
jae
aad
insb
dec
pop
sbb
sub
cli
ja
or
mov
sbb
mov
insl
mov
adc
test
stos
std
mov
mov
xor
and
inc
ljmp
fsubr
cmp
push
mov
mov
xor
jbe
in
inc
jno
nop
pop
inc
cmpsb
push
insl
cmp
sub
fs
je
gs
or
xchg
fucom
xchg
out
ljmp
mov
push
adc
aas
push
xor
mov
lock
jb
sbb
dec
fldcw
jae
mov
jns
mov
jns
loop
mov
mov
insl
or
mov
sbb
imul
or
push
mov
clc
cmp
lods
ret
jns
dec
and
cld
mov
mov
pop
shlb
ja
and
pop
sbb
push
pop
jmp
in
iret
lret
cltd
cld
stos
push
jle
push
inc
lcall
xchg
mov
sub
push
das
jo
nop
mov
out
shrb
mov
sbb
outsl
jmp
dec
or
in
xchg
outsl
mov
por
adc
and
cmp
ss
iret
xor
xor
insl
pop
and
daa
arpl
scas
stc
xchg
pop
mov
sub
rclb
aas
enter
add
add
or
repz
into
lock
fbstp
pcmpeqd
inc
je
in
fisubrs
pop
repz
aaa
cwtl
cmp
pop
cli
popa
push
loope
mov
sub
push
aas
in
jbe
ja
xor
ss
lods
aaa
jmp
cmp
and
cwtl
pusha
sub
pop
adc
repnz
lods
jns
movsl
mov
shrb
fstp
dec
sahf
push
xchg
mov
jmp
imul
les
jbe
call
lcall
push
decb
fwait
pop
pop
sub
sti
loopne
pushf
shlb
jl
fbstp
xchg
fwait
sub
cld
lock
or
imul
data16
adc
iret
lods
xor
cmp
jp
jo
mov
inc
xor
and
and
stos
xor
add
push
xchg
mov
cltd
cmp
jmp
aas
call
scas
test
ret
ja,pn
mov
adc
jae
hlt
neg
cld
imul
inc
incl
fcoms
and
test
test
fisubl
fbstp
or
jne
dec
mov
popa
pop
test
andl
outsb
jae
fstpl
cmpsl
sti
push
adc
mov
pop
mov
xor
jg
movsl
shll
sbb
xor
mov
repz
call
jae
fcompl
icebp
movsb
xlat
not
push
test
das
scas
aas
pop
fisttpll
push
dec
pushw
inc
sbb
out
fcmove
push
outsl
adc
sahf
xor
test
ror
cltd
ja
in
mov
cmpl
mov
jne
int3
cld
mov
subl
fpatan
pusha
loopne
pop
push
stos
sub
push
in
and
jnp
push
inc
imul
dec
xorl
mov
lods
jmp
xchg
dec
and
loop
sub
dec
test
add
xchg
xchg
or
or
into
xchg
fs
mov
add
cltd
pushl
js
ror
dec
cli
mov
pop
push
cmp
jns,pt
push
loope
inc
pop
ror
icebp
icebp
and
lret
sub
mov
out
pop
int
cli
push
xchg
ret
and
out
cli
xor
fdivl
push
dec
and
mov
adc
jp
xchg
movsl
nop
es
jo
sbb
xchg
std
mov
pop
int3
mov
mov
mov
add
fisttpll
adc
xchg
jns
stos
das
out
xchg
push
outsb
push
and
jbe
sub
lock
dec
test
jge
mov
xor
or
inc
jns
cs
lock
inc
aas
stos
sbb
dec
lods
adc
or
jb
enter
cmp
jb
adcb
mov
jle
push
int
dec
and
aam
and
sub
pop
and
fnstsw
dec
int
into
xor
inc
popa
xchg
push
xchg
push
shrl
repz
mov
stos
lret
mov
pop
fsub
or
or
cs
lods
sbb
loopne
cmp
xchg
mov
jmp
fwait
jmp
dec
popf
mov
push
popf
sbb
or
jmp
or
loop
xchg
cmp
mov
cmpsb
in
out
mov
in
loopne
push
and
fildll
mov
ljmp
jbe
push
ljmp
push
hlt
iret
sub
outsl
pusha
xchg
pusha
clc
ret
dec
mov
lds
movsb
pop
sbb
pop
xchg
movsl
movsl
adc
fistl
fists
or
fldl
sub
pop
sbb
ds
pushf
repnz
dec
pop
pop
bnd
sub
leavew
xor
test
mov
sub
ljmp
cld
adc
or
lcall
cmp
push
lcall
jne
scas
ss
pop
pop
addb
ret
mov
push
inc
xchg
rorl
fwait
push
add
in
popa
xchg
mov
and
mov
xchg
cmp
push
flds
jmp
jo
fs
int3
sti
push
das
jl
lcall
jmp
inc
cwtl
mov
mov
std
std
adc
loop
icebp
add
out
mov
cs
out
jecxz
dec
call
and
ljmp
in
inc
jne
mov
int3
les
in
insb
jae
jmp
les
mov
push
ret
and
push
adc
mov
mov
cwtl
jg
fistps
rorb
std
jae
sub
lods
xchg
and
es
ds
in
mov
cmp
nop
dec
sub
pop
ds
add
out
test
mov
jbe
pusha
out
and
movsb
pushf
aad
jl
push
pusha
lcall
push
lods
jg
cmpsb
aam
addr16
and
imul
sub
adc
inc
push
push
jnp
js
dec
in
or
aaa
jno
mov
sub
out
push
push
test
adcb
fcmovne
gs
sahf
jle
leave
inc
shl
dec
mov
lret
test
sahf
int
mov
jno
mov
pop
push
adc
mov
jo
test
pop
jne
lret
vmovupd
inc
inc
addr16
repnz
pop
lods
icebp
cmp
xlat
dec
cld
dec
jecxz
stos
sbb
outsb
cmp
ret
inc
dec
jp
inc
jp
sub
sbb
ficomps
adc
popa
mov
xchg
aas
add
pop
inc
mov
fsts
jle
jbe
ret
sbb
sbb
test
mov
mov
loopne
mov
adc
jns
pop
lcall
lock
data16
dec
shll
add
dec
cmpsb
subl
jae
loop
cli
cmp
sbb
add
mov
std
outsb
add
xor
outsl
and
ljmp
and
push
xchg
cmp
xor
pop
pop
add
add
sti
jp
test
scas
inc
push
arpl
or
lcall
push
ds
insb
test
mov
push
aad
push
mov
outsl
sub
mov
jl
inc
push
scas
jbe
lahf
cld
mov
jmp
inc
xchg
pop
cmpsb
adc
push
jl
sbb
or
test
add
in
add
pop
dec
xor
out
mov
and
dec
pop
loopne
movsl
arpl
dec
mov
jl
popf
aad
jle
lods
adc
and
xchg
and
mov
in
pop
add
out
pushf
pop
jmp
mov
lock
sar
ffreep
cmpsb
sub
fidivl
or
ficomps
cmp
aas
push
and
pop
cmp
imul
inc
subl
lds
jns
sbb
mov
push
sub
jle
jl
dec
in
xlat
push
mov
repz
insb
xor
and
test
lret
rcl
inc
cltd
insl
rclb
sahf
and
add
pop
into
lods
fldt
adc
aas
bound
ds
sub
sub
push
dec
cwtl
sub
bound
pop
pop
jg
out
in
mov
cwtl
mov
fsts
repz
fldcw
js
das
clc
mov
jno
push
pop
sbb
sbb
clc
sarl
xchg
lcall
jmp
test
enter
mov
fcomi
xchg
enter
or
dec
dec
jne
dec
cld
cli
mov
mov
xchg
adc
fwait
cmp
cwtl
jp
mov
mov
ds
imul
cmpsl
cmp
stos
and
xchg
test
push
adc
jb
mov
sbb
or
or
shlb
add
aam
daa
push
movsb
rcrb
or
sarl
ljmp
cmp
or
loop
add
sbb
mov
rcrl
xchg
sahf
jecxz
fisubs
mov
push
in
lods
rcrl
movb
pusha
sti
cld
pop
dec
popa
out
ret
or
cwtl
and
ljmp
lcall
sti
ret
xor
iret
mov
stc
xchg
dec
in
and
sbb
xor
add
clc
aam
pop
in
fs
mov
add
setno
sub
mov
test
mov
rolb
stos
mov
or
push
xchg
xchg
add
lcall
xchg
mov
cwtl
fstpt
push
fists
dec
pushw
lods
sahf
dec
inc
icebp
xor
lods
xor
push
jle,pn
mov
push
jns
or
aad
and
and
dec
cmc
cwtl
mov
scas
test
or
lods
test
cmc
scas
jle
push
cmp
jg
and
mov
pop
mov
lret
adc
aaa
incl
mov
rcl
mov
push
testb
inc
cmp
mov
and
iret
test
sub
dec
fstps
cli
subb
pushf
lcall
push
aas
ds
xor
aad
fmull
cmp
push
lods
lds
jmp
sbb
loop
rcll
popa
fimull
jo
mov
add
add
adc
idivb
add
movsl
pop
fimuls
test
lret
lahf
dec
mov
pop
mov
out
pop
sub
mov
adcl
mov
cmc
cld
call
mov
pop
addl
call
in
sub
imul
lahf
idivb
iret
insb
pop
mov
pop
jnp
push
push
rolb
popf
dec
adc
fs
test
adc
cltd
dec
shrb
push
jae
mov
sbb
jg
push
push
dec
or
sub
arpl
andl
mov
push
in
shrb
inc
mov
mov
cmp
push
cmp
je
test
les
jae
lcall
fs
sbb
aam
adc
adc
inc
cmp
cmp
popa
sub
dec
insb
dec
inc
push
icebp
int
scas
mov
push
jl
mov
andb
scas
add
push
popf
popa
adc
sub
arpl
ret
sbb
icebp
xor
fs
adc
push
mov
inc
push
or
jns
and
add
and
or
cld
fwait
test
lcall
data16
push
mov
cwtl
test
xchg
xchg
cmp
cmp
int3
roll
and
add
repnz
inc
xchg
xchg
test
lcall
add
lock
add
cld
xorb
cmp
adc
sub
xchg
mov
cs
mov
andl
test
andb
inc
or
mov
mov
loopne
pop
repnz
lcall
lea
pusha
mov
test
jo
mov
jnp
js
mov
outsl
xchg
pushf
test
pop
cmp
popa
or
pop
je
leave
or
xor
inc
outsb
jo
pop
jnp
push
dec
popf
arpl
loop
int
or
stc
into
rcr
push
cmp
std
and
xchg
pop
add
add
sbb
xor
stos
icebp
outsb
or
adc
outsl
xor
dec
pop
and
js
mov
test
adc
mov
movsl
cmp
pop
scas
add
mov
dec
and
adc
int3
mov
ja
cmpsb
cmpsb
mov
mov
xchg
clc
jp
lock
pop
jl
and
and
imul
adc
pop
repz
leave
hlt
mov
pusha
pop
les
add
cli
mov
mov
dec
xchg
in
xchg
idivb
fs
xchg
mov
mov
lods
std
cmp
insb
subl
jae
jo
push
inc
stc
and
inc
sub
push
jno
or
jbe
mov
sbbb
ja
xor
push
jns
ficoml
aaa
adc
jge
mov
push
lods
gs
nop
dec
pop
jp
jg
mov
lock
imulb
cwtl
lods
adcl
gs
and
pcmpeqb
push
fdivs
cmp
add
cs
aad
or
jmp
pushf
popl
inc
jl
xchg
jecxz
clc
mov
ljmp
cltd
pusha
insl
fists
pop
push
loope
test
inc
sbb
lret
jg
jns
cmp
loope
lea
jmp
mov
movsb
icebp
or
dec
adc
call
cld
cwtl
sub
pop
lahf
insb
aad
pop
inc
sbb
dec
popf
popf
and
adc
ja
pop
adc
jmp
adc
mov
call
dec
add
and
jae
out
xor
cli
sti
je
add
xchg
add
push
stos
mov
push
lret
out
xor
fsts
cmp
xchg
rclb
mov
gs
out
icebp
hlt
cld
cli
adc
test
ret
add
lock
push
mov
outsb
lcall
push
and
dec
in
inc
aad
adc
std
aam
cmc
cld
and
push
inc
fwait
iret
inc
dec
cmp
mov
jg
mov
movsl
aaa
dec
mov
out
cwtl
xchg
push
scas
push
shl
sub
sub
dec
ud2
jmp
cmp
pop
aas
push
imulb
hlt
aam
push
push
ljmp
jmp
movnti
or
in
mov
sarl
inc
mov
insb
cli
ss
fstps
test
mov
sbb
cmp
xor
cmp
xor
cmc
dec
lret
pop
aam
out
mov
adc
enter
and
xor
xor
cs
fs
dec
pop
mov
cmc
les
inc
and
gs
mov
test
mov
inc
outsb
jle
dec
or
in
pusha
adc
ret
lods
and
mov
mov
mov
sti
rcr
jle
push
in
xchg
jmp
add
jecxz
dec
lret
pop
decb
inc
mov
aad
stc
lock
sub
jmp
push
cmp
es
fwait
lods
leave
xlat
push
sbb
div
in
pop
xor
int
xor
call
popf
xchg
add
into
es
fs
sti
arpl
xchg
pop
xchg
pop
shrl
mov
arpl
sbb
sbb
push
add
xor
jecxz
arpl
fdivrs
xchg
divb
dec
out
pop
inc
mov
cmc
pop
loopne
test
cli
cmpsb
sti
push
mov
out
loope
lods
stc
pop
cld
insb
push
ljmp
enter
pusha
stc
ficompl
or
in
mov
lcall
add
xchg
les
pop
scas
mov
or
cmc
fldenv
or
adc
scas
xchg
faddp
add
enter
imul
mov
ja
fwait
mov
xor
sbb
test
pop
arpl
out
lds
jp
xor
mov
jecxz
jecxz
repz
fldt
mov
int3
adc
leave
loope
sbb
mov
adc
sbb
arpl
mov
inc
adc
gs
enter
sub
xchg
cmp
pushf
mov
popf
idivl
leave
push
add
push
fildll
dec
aaa
insl
jbe
inc
dec
pop
push
out
mov
std
xchg
cmp
and
loopne
ret
mov
push
pop
test
daa
adc
pop
leave
xchg
fiadds
lds
inc
lds
and
or
test
xchg
lcall
jmp
sbb
loope
scas
test
and
das
sub
jp
notl
loope
lcall
cmc
mov
das
mov
arpl
pop
call
cmpsb
jle
mov
icebp
dec
out
stos
and
and
test
push
cli
or
push
push
push
adcb
es
cltd
mov
into
dec
mov
lods
pop
inc
push
jmp
shll
ja
cmp
fdivr
sub
mov
test
jp
sub
dec
popa
pop
mov
sub
rorb
xor
aaa
mov
mov
xchg
sbb
int3
sbb
sti
mov
int3
dec
in
cld
in
cltd
xor
orl
aaa
dec
pop
inc
mov
mov
or
stc
vmulps
popf
sub
lret
xchg
iret
ret
xor
aad
in
jae
scas
leave
mov
xchg
ss
cmpsl
mov
fcoml
rcr
sarb
mov
stos
push
add
rclb
sub
cli
out
mov
lahf
inc
gs
nop
mov
sti
mov
popa
sbb
or
mov
and
or
fsubrp
jmp
outsb
adc
xor
cmp
shlb
pop
and
lret
mov
scas
loope
std
dec
jle
xchg
aad
xor
ret
jae
ljmp
push
movsl
cltd
push
lock
pop
fs
mull
inc
lock
jmp
inc
cmpsl
dec
cmp
dec
adc
cld
out
jnp
sub
dec
sbb
or
rcl
jnp
data16
lods
in
mov
or
or
dec
mov
xor
xor
sub
stos
add
sbb
dec
xchg
lds
std
sbb
mov
adc
scas
mov
mov
mov
testl
sahf
jg
inc
pop
xchg
push
adc
mov
sub
inc
addr16
ffreep
int3
iret
dec
fisubrl
push
nop
outsb
xor
test
pop
xchg
fmuls
mov
sub
fsubs
loope
jl
or
cmp
pop
xor
xchg
ja
inc
clc
and
std
pop
mov
nop
mov
ffree
push
das
pop
stos
out
jp
pushf
push
sub
rorb
fs
int
out
test
insb
push
dec
adc
lret
mov
xor
xor
mov
adc
je
mov
xor
es
cmp
movsb
mov
jno
popf
add
xor
xlat
test
pop
leave
fcmovbe
mov
ss
hlt
pop
mov
js
je
cmp
jne
int3
pop
fs
mov
push
icebp
push
or
icebp
lret
pop
js
push
pusha
movsb
and
mov
or
xor
cltd
fldl
push
or
add
push
dec
cld
jns
loope
lret
sarb
push
ds
and
add
xor
or
out
xchg
stos
inc
in
insl
sti
insl
fmul
loope
imul
push
in
jp
je
pop
ret
mov
adc
inc
imul
movsb
cmp
sbb
repnz
and
por
xchg
add
test
add
dec
cmp
shlb
mov
imul
xor
bound
rcr
cld
push
push
loop
std
cld
lcall
outsl
in
jge
adc
in
mov
ljmp
sub
jne
and
push
out
adc
dec
leave
and
inc
cmp
pop
mov
add
sub
dec
pshufw
and
dec
incl
push
adc
pop
pop
fnstsw
popa
sub
push
cmp
mov
roll
es
sub
popa
dec
imul
test
pushf
or
das
mov
jmp
fs
leave
out
mov
jl
xchg
stos
out
adc
push
dec
or
scas
imull
in
lods
arpl
pop
jmp
dec
dec
cmpb
inc
sbb
fst
fwait
adc
add
cmp
icebp
imul
mov
sub
insl
fisubs
push
outsl
jp
cmp
mov
inc
movsb
push
test
xchg
test
mov
sub
pushf
cmp
cmc
xor
int3
dec
xchg
sbb
and
cmp
aas
imul
dec
inc
xchg
mov
scas
imul
test
cmpsl
cltd
aam
scas
adc
push
jecxz
pop
push
and
cmc
sub
test
in
jge
pop
xchg
pop
fistl
js
in
pop
fisubrs
aam
adc
pop
fs
mov
cs
cmp
mov
push
push
jle
lds
jnp
lods
push
inc
jl
lds
rolb
jge
decb
push
add
push
out
sbb
pop
dec
sbb
pop
sahf
mov
test
cmp
xor
in
in
aaa
jle
inc
cli
mov
cmp
dec
pop
mov
insl
orb
add
cld
and
sti
in
or
mov
mov
loop
loop
sbb
mov
jne
orb
loope
rorb
or
scas
sbb
dec
pusha
jae
dec
jl
sub
sbb
adc
pop
mov
mov
in
test
xchg
mov
jbe
pop
mov
push
xor
cli
xor
sbb
jmp
pop
xor
cmpsb
jmp
dec
mov
mov
adc
add
cmp
pop
out
fyl2xp1
pop
xchg
sbb
faddl
mov
enter
xor
sbb
xorl
push
je
ret
or
mov
loopne
cld
xor
clc
cmp
out
dec
push
jge
dec
add
xchg
sar
inc
aam
testl
sub
adcb
iret
adc
in
lds
mov
inc
aam
mov
push
lods
or
mov
jmp
adc
jg
jle
lods
jl
insl
in
mov
cmp
mov
jecxz
shl
lret
mov
cmp
std
sarl
mov
inc
std
es
pushl
xor
ss
ljmp
push
mov
movsb
or
jae
xorb
loope
repz
cmpb
xor
push
outsl
jg
add
js
cmp
mov
xchg
xchg
cmp
jne
inc
imull
or
sub
mov
iret
loop
out
adcl
out
xchg
iret
jmp
das
hlt
leave
pop
and
lods
mov
int3
jge
mov
mov
jo
iret
jg
xchg
sbb
and
inc
xor
les
sbb
bound
add
mov
xchg
bound
ljmp
ror
movsl
loopne
gs
xorl
iret
es
push
xchg
scas
dec
imul
enter
jns
popa
rorl
inc
push
insb
insb
sub
fisubs
or
sbb
faddl
cmp
leave
js
filds
fxch
mov
fisttpll
lret
and
xchg
movsb
insb
fistpl
aas
xchg
jbe
mov
dec
jnp
iret
push
ss
cmp
ss
lcall
xchg
dec
xor
sahf
int
inc
loop
imul
adc
adc
push
mov
xchg
jo
sub
mov
aad
test
stos
and
ftst
and
xor
xchg
or
fcmovne
dec
xor
popa
sbb
sahf
orb
das
cmp
or
lods
jle
adc
push
pop
fiadds
ret
sahf
data16
or
lahf
and
mov
ror
cld
ljmp
xchg
add
ljmp
cwtl
jecxz
mov
xor
test
fstpl
stos
fidivrs
shlb
xchg
in
fucomi
dec
stos
test
scas
nop
inc
cli
js
lds
insl
fldenv
insb
dec
and
add
outsl
int
add
jne
pop
mov
mov
add
cltd
ljmp
adc
rorl
pop
loopne
jp
push
out
mov
pop
bound
jbe
dec
cs
int3
inc
add
ja
and
lods
push
sahf
stc
inc
dec
scas
jbe
push
icebp
test
pop
in
icebp
push
pop
dec
push
sahf
cmpsb
fst
xor
lea
mov
dec
xor
insb
dec
mov
imul
sub
or
cmp
in
push
mov
mov
icebp
ljmp
push
inc
js
mov
dec
je
shll
ja
cmpsb
dec
sbb
mov
cmp
sar
xchg
flds
in
mov
inc
ret
and
outsl
pusha
addr16
cli
xchg
inc
mov
sbb
cmovg
mov
add
addr16
push
mov
pusha
adc
jl
or
cmp
movsl
lea
in
jle
cmpsb
pusha
int3
jmp
int
ja
pop
sbb
popa
lods
lret
jg
rorl
lret
addb
adc
mov
mov
ffreep
xor
iret
push
mulb
rorb
mov
rcr
sbb
fadd
or
mov
mov
sbb
jns
or
pop
les
and
push
push
ficoms
je
sub
xchg
pop
lsl
push
jne
mov
add
mov
dec
addr16
pop
xchg
sbb
adc
cmp
gs
adc
fbld
sbb
fsub
je
jae
lea
out
imul
testb
dec
jmp
bound
xor
pushw
je
inc
mov
enter
sub
pop
adc
xchg
cli
mov
nop
pusha
xchg
inc
push
push
add
sbb
mov
ffree
dec
xchg
sahf
jbe
cli
in
jnp
stc
mov
xchg
mov
xchg
sbb
jmp
imul
lcall
inc
jno
outsb
je,pn
dec
xchg
dec
jns
and
push
cmp
mov
scas
les
in
mov
loopne
repnz
sub
cmpsl
and
push
scas
xchg
pop
and
xor
push
lahf
cmc
adc
aad
jmp
ss
in
dec
push
fwait
adc
jne
cltd
pop
add
or
pop
xchg
adc
cld
in
adc
stc
pop
jl
jl
fsts
loopne
nop
sti
xor
sahf
sub
xchg
js
outsb
inc
push
add
adc
shrb
push
sti
rorb
rcrb
insb
mov
dec
bnd
jmp
mov
mov
push
int3
ja
lcall
add
dec
je
sbb
push
inc
repnz
popf
jmp
int
jecxz
xchg
sub
pop
negl
outsb
or
popf
inc
addr16
test
and
fstl
xchg
in
stc
popa
scas
jnp
add
xlat
cmp
insb
dec
mov
ss
jmp
loope
sub
push
ret
shll
lds
push
outsb
movsl
inc
in
jge
xor
jg
sbb
mov
dec
mov
lods
mov
in
dec
push
push
xor
jbe
sub
imul
out
jle
xor
mov
mov
stc
test
mov
fnstenv
lret
mov
lock
or
loopne
xor
dec
inc
addr16
or
sbb
scas
rcll
sti
aam
leave
scas
push
decb
sub
lock
leave
aad
push
pop
dec
push
push
xchg
daa
fmuls
in
sub
aam
mov
mov
lret
ss
fnstsw
es
pop
lock
lea
sbb
inc
clc
mov
cmp
in
std
arpl
dec
sbbb
lret
fists
data16
cmp
dec
cmp
jmp
dec
sub
mov
mov
pop
outsb
cmp
mov
push
loope
jmp
lock
add
dec
cs
stos
add
mov
xchg
out
push
pop
xchg
add
add
mov
mov
pop
dec
mov
jp
or
ss
stos
shlb
in
or
mov
push
repz
ret
or
xchg
mov
cs
pop
cmp
insl
nop
scas
insb
les
call
clc
out
bound
mov
jecxz
dec
mov
adc
inc
fcoms
or
repnz
adc
imul
shrb
test
dec
mov
test
iret
adc
add
faddl
stos
add
test
mov
mov
jbe
adc
insl
fnsave
aaa
mov
lock
arpl
divb
rcr
hlt
cmp
cmc
mov
or
cmpl
inc
xor
out
sarl
and
les
sub
and
adc
inc
out
ja
adcb
adc
lock
cmp
fidivl
or
shrl
jle
gs
inc
clc
adc
in
adcb
mov
fisubs
pop
dec
cmp
mov
cmp
test
cmc
and
out
adc
cmp
pop
dec
push
pop
and
pop
cmp
xchg
mov
adc
jnp
pop
xor
stc
inc
inc
push
cmp
and
and
mov
sbbl
inc
xor
xchg
mov
xchg
xor
arpl
xchg
daa
lahf
xor
pop
int3
rcrl
ss
inc
add
test
iret
and
xlat
mov
cmpb
std
xchg
jecxz
dec
pop
push
mov
andb
mov
incl
xchg
xchg
inc
repz
shll
adc
ret
test
mov
mov
mov
out
ljmp
ljmp
jb
sbb
xchg
jmp
rclb
cmpsl
sbb
test
ret
push
stos
ss
rorl
mov
stc
mov
sbb
sbb
inc
int3
test
test
sar
out
pop
lret
push
repz
jmp
mov
add
outsl
std
enter
pop
cmp
imull
ror
int
stos
cs
mov
addr16
ss
adc
test
ret
jae
into
aam
or
inc
xor
push
adc
add
or
mov
cld
xor
mov
pop
cmpsb
jg
mov
adc
test
cmpsb
adc
stc
pop
scas
push
pop
dec
add
loopne
repnz
daa
sbb
rcrl
int3
imul
in
and
ret
and
xchg
out
sbb
stc
sub
mov
mov
leave
es
testb
gs
fstpt
lds
mov
outsb
sbb
xor
fcomps
out
aam
add
js
stos
add
int
sub
bound
fcompl
xchg
jg
xchg
repz
xchg
int3
fsubr
cmp
jp
xor
pop
pop
xchg
sbb
mov
in
cmp
clc
insb
cmpsb
jl
xor
cld
xchg
es
aas
add
xchg
addl
adc
mov
xor
adc
adc
jecxz
cmpsl
and
and
hlt
ljmp
mov
inc
sub
push
ja
sub
sub
mov
pop
call
add
adc
daa
add
iret
sbb
popa
popa
cmovge
pop
sbb
aas
ret
or
pop
imul
xor
lea
mov
push
mov
cmp
jl
rcrl
jg
lahf
aas
mull
xor
xor
invd
lret
mov
mov
leave
cwtl
loopne
jns
icebp
lods
lock
xchg
inc
jl
das
pop
mov
cmpsb
arpl
mov
add
and
cmovno
das
push
rorb
sub
lahf
ja
push
sub
js
sub
xchg
jae
fucomi
dec
add
out
pop
roll
sbb
cmpsb
mov
and
outsl
cli
testb
fs
sti
pop
mov
mov
int3
leave
loope
jecxz
jb
add
pushf
fwait
les
dec
sub
inc
jge
push
pop
leave
xchg
bound
sti
hlt
cld
sub
pop
hlt
data16
jnp
rolb
dec
xchg
mov
pop
mov
xchg
xchg
jl
xchg
xor
imul
xor
testb
icebp
rorl
lods
loop
lea
arpl
inc
mov
insb
mov
cmp
test
scas
mov
jnp
fs
aas
push
mov
cmpsl
hlt
mov
out
movsb
sbb
mov
sti
cmp
lcall
xor
dec
cltd
push
mov
cs
pop
jb
ret
cwtl
ret
adc
pop
notl
xor
mov
or
or
mov
rcrl
mov
rclb
outsb
mov
pop
pop
mov
in
sbb
or
shlb
cmpsl
fisttps
mov
jmp
and
pop
ljmp
sub
xlat
or
jp
xlat
popa
test
mov
inc
dec
mov
xchg
flds
popa
das
dec
sub
cmc
fucomp
mov
aad
xchg
pop
sbb
adc
xchg
leave
cmp
jl
sbb
test
shrb
mov
in
hlt
out
xchg
add
push
ja
add
subl
pop
jl
mov
mov
data16
xchg
cld
aas
inc
adc
add
das
push
gs
pop
mov
gs
or
mov
pushf
jbe
mov
jo
xor
sarb
sub
add
xor
mov
ret
lods
add
mov
sbb
inc
mov
call
sub
adc
lea
xchg
loop
shll
jecxz
lret
sub
test
sub
enter
mov
imul
movsb
push
ror
and
push
sub
orb
mov
sub
rorb
sti
scas
adc
dec
add
mov
aaa
sarb
inc
mov
fistpl
sub
cmp
popa
mov
adc
mov
xlat
not
jb
dec
mov
addl
jge
out
mov
icebp
jmp
adc
stos
stos
sub
mov
in
fs
and
mov
adc
lds
in
pop
inc
cmp
and
int
and
xchg
ss
fwait
cmp
roll
or
cmp
sbb
pushf
stc
xor
loop
sar
xchg
cltd
cld
mov
enter
mov
xchg
cmp
ret
out
jecxz
outsb
cltd
and
jne
mov
mov
jmp
loope
cmp
xorl
ja
ds
sbb
mov
aaa
push
push
test
jnp
mov
repnz
lret
ds
shlb
and
or
sub
pop
pop
insl
xchg
xor
pop
fcom
daa
mov
test
pop
jno
out
test
cmp
scas
adc
push
ret
sub
xchg
push
jmp
and
mov
cltd
es
sti
test
push
pop
loop
push
nop
mov
xor
push
jp
out
add
adc
mov
pop
push
push
cld
shlb
dec
push
xlat
ss
ds
cmp
cmp
mov
pop
dec
loope
mov
cltd
adc
xchg
mov
imul
je
jg
xor
and
aad
repz
push
iret
pop
in
test
lcall
jg
test
and
cmp
fldl
sub
movb
push
mov
imulb
dec
jae
rcr
popf
jns
shlb
add
sbbl
pop
sub
sahf
mov
xchg
jg
insl
jl
add
jl
inc
sarb
loope
int
push
adc
adc
add
cwtl
inc
jg
push
fistpll
xchg
lock
xor
icebp
mov
and
sahf
push
sub
pop
push
mov
clc
mov
insl
mov
pop
ret
in
adc
clc
int3
int
cltd
inc
stos
mov
cmp
into
es
sbb
ret
cmp
push
sahf
out
lahf
mov
ret
push
std
loope
sub
dec
ljmp
jnp
push
mov
xchg
flds
in
rcrl
jmp
int3
xor
aam
mov
scas
pop
inc
mov
sbb
int
inc
sar
mov
inc
imul
repz
cmp
xchg
lret
insl
push
sub
mov
and
pop
sar
pop
bound
stc
jg
mov
aad
ja
push
ds
dec
sarb
jge
mov
or
popa
sbbb
dec
sbb
dec
xchg
std
push
pop
outsb
inc
aas
jge
jno
dec
sub
push
or
jbe
mov
jne
or
mov
pop
lock
mov
gs
loopne
jl
lods
enter
inc
lcall
sbb
cmpsl
sti
nop
imul
jp
lahf
sbb
adc
stos
cmpsl
sub
push
in
fstl
jns
mov
mov
ss
lret
jns
sbb
add
and
je
cmpsb
in
adc
or
insl
fcoms
fistpll
dec
mov
sbb
lahf
cmp
loopne
mov
xchg
sub
scas
lds
stc
mov
ljmp
add
pop
roll
cmpsl
sbb
jp
push
push
adc
sbb
out
gs
loop
and
cmp
jae
out
mov
sahf
xor
add
add
mov
gs
iret
popf
enter
dec
xchg
insl
rcl
roll
jnp
sub
xor
sub
movsl
mov
xor
xchg
adc
js
imul
jmp
imul
lcall
ss
ds
pop
stos
xchg
push
xchg
add
aaa
push
out
dec
negb
xor
push
pop
inc
inc
xchg
setl
loop
sbb
test
lods
jmp
and
cmp
lds
bound
inc
hlt
mov
in
loope
mov
push
push
inc
aad
bound
xor
dec
sub
dec
sbb
dec
daa
sarb
jge
push
push
sub
loopne
mov
mov
insb
lds
pop
add
xor
cmp
sbb
push
push
xchg
adc
scas
jmp
adc
roll
call
in
jno
aas
push
xorl
lcall
rorb
mov
in
lcall
push
ret
rolb
sub
xor
addl
mov
pop
xchg
mov
pop
adc
mov
jge
call
push
call
out
jbe
add
mov
pusha
lods
pop
call
mov
subb
fwait
adc
xor
xor
pop
fsts
scas
popa
cmp
dec
jmp
int
test
jecxz
outsb
incb
loopne
pop
mov
fisubrs
fsubrl
out
sub
iret
and
cmc
add
mov
push
xchg
jo
cli
icebp
pop
mov
pop
mov
sub
and
pop
loope
nop
pusha
jo
and
or
inc
ret
negl
hlt
xor
pusha
adc
fstpt
lret
adc
mov
mov
test
or
pop
cmpsb
cmp
enter
pop
out
ret
add
imul
lods
and
popa
push
mov
out
push
fimuls
imull
mov
aam
xchg
jne
adc
fs
subb
nop
popf
gs
inc
mov
inc
mov
call
nop
jg
mov
or
aaa
xchg
sbb
shlb
pop
loope
dec
mov
fmull
push
sub
nop
or
sub
cmpl
stos
idivl
ret
ficoms
out
xlat
push
or
fidivrl
xlat
or
jge
xchg
arpl
sbb
add
adc
gs
mov
cmp
mov
int
push
jmp
add
pop
add
scas
cli
pop
mov
data16
incb
add
imul
mov
mov
xchg
pop
add
push
mov
les
out
cmp
mov
mov
push
jp
add
pop
adc
add
push
ret
les
mov
dec
ds
loope
cmp
push
cmp
inc
jno
add
out
jbe
or
call
insl
inc
xchg
call
aas
fnstenv
clc
mov
repz
xchg
adc
movsb
pop
sbb
ret
mov
negl
outsl
inc
lret
or
shrl
lock
subl
setbe
icebp
cld
ja
jae
sbb
hlt
repz
add
test
or
and
push
shlb
sub
push
and
test
push
xchg
mov
mov
mov
rorb
in
lea
push
rcr
xchg
and
pop
or
ljmp
push
push
scas
push
fwait
mov
sahf
xor
add
test
cltd
clc
ret
xchg
pop
push
int
cli
loopne
xchg
cmp
jbe
add
mov
test
dec
out
in
or
pushf
lcall
clc
inc
jle
jge
cmpsl
es
ljmp
mov
pop
fdivs
popf
imul
pop
dec
fs
addl
lahf
mov
mov
ja
ljmp
rcl
jmp
mov
sbb
inc
sbb
repz
ljmp
hlt
jp
mov
adc
adc
lods
and
cmp
sbb
push
arpl
mov
cmp
add
cli
loope
mov
inc
inc
mov
cltd
sub
scas
cltd
inc
adc
mov
movsl
out
in
mov
mov
cltd
mov
and
push
fsubl
in
mov
dec
adc
jle
pusha
push
das
mov
mov
cli
inc
stos
cs
ljmp
imul
js
ljmp
cli
mov
sbb
repz
ds
ljmp
xchg
mov
push
stos
mov
fcompl
jge
sub
mov
push
popl
and
sarl
insl
xor
push
inc
push
mov
fcom
dec
inc
aaa
addl
lahf
push
subl
lock
mov
loope
push
pop
mov
or
jge
nop
xlat
dec
xchg
fildll
sub
xchg
cmc
les
repnz
jg
or
jbe
loop
push
and
pusha
fistps
outsl
lods
adc
clc
pop
mov
mov
cli
mov
xor
mov
or
pop
adc
ds
aaa
popf
and
xor
cmp
out
cs
mov
or
aad
jb
pop
jecxz
adc
cltd
iret
or
stos
je
and
jns
mov
and
mov
das
cmp
inc
repz
adc
dec
jbe
mov
int
adc
and
adc
negb
push
pop
test
or
cmp
in
aaa
push
jl
idiv
adc
inc
fs
in
dec
add
test
pop
iret
mov
sub
adc
inc
mov
mov
lods
scas
outsb
pop
out
adc
test
les
lds
mov
mov
cwtl
cmp
repz
roll
ljmp
mov
jno
insb
pop
js
test
adc
pop
and
enter
icebp
add
jb
sbb
orl
dec
hlt
inc
sbb
test
mov
test
lock
inc
adc
jns
mov
sbb
mov
xchg
xchg
sbb
jo
dec
hlt
mov
mov
stc
xor
pop
test
sbb
sbbb
gs
call
out
sbb
clc
cmp
cmp
push
lret
jmp
in
push
insb
mov
jae
and
imul
or
dec
fadds
pushf
rcll
xchg
mov
pop
xchg
scas
or
shr
cmp
test
add
sbb
jecxz
movsb
xchg
pop
imul
ljmp
mov
dec
call
andb
rorb
jo,pt
cli
lods
sbb
xchg
sub
orl
lods
inc
cli
shll
test
movsb
xor
dec
cmp
ja
xchg
dec
popa
add
mov
adc
xor
arpl
fistpll
lret
dec
pop
xchg
xor
pop
jae
cli
fisubrs
mov
dec
xor
in
jmp
out
adc
inc
iret
adc
pop
mov
sbb
repnz
int3
mov
add
jl
jb
sbb
push
xchg
add
lret
cli
mov
mov
cmp
lods
mov
dec
in
sbb
stos
in
movsb
jmp
mov
xchg
ret
sbb
pop
roll
iret
or
mov
lret
add
fiaddl
into
jge
pop
mov
clc
rorb
and
loopne
pop
jp
cli
jmp
inc
xchg
fimull
gs
cmp
mov
jmp
xchg
jne
inc
push
pop
cli
dec
add
lret
mov
jbe
ss
test
inc
dec
pop
jmp
aas
orb
push
subb
nop
xchg
dec
je
loope
in
sbb
shlb
cmovno
xchg
xchg
xchg
mov
adcb
mov
push
lret
js
leave
inc
lock
push
std
push
mov
lds
ja
aas
mov
sub
mov
sti
push
insl
push
fcompl
mov
in
fbstp
push
lcall
push
mov
shll
lods
sarl
test
outsl
xchg
leave
outsl
insb
add
popa
jmp
gs
mov
xchg
dec
test
dec
in
aas
sbb
aaa
xor
imul
or
test
sarb
or
add
sub
adc
movups
add
es
or
lods
or
dec
das
jo
jp
push
mov
hlt
sub
inc
lret
mov
mov
push
rclb
jb
int3
lret
js
lods
stc
stos
adc
aas
pushf
push
ss
dec
add
test
push
out
jb
notb
imull
push
mov
orb
lock
js
fstpl
jmp
sub
xchg
jg
test
stos
sbb
jmp
and
inc
jle
jecxz
and
fistpl
ficompl
lahf
cmp
adc
adc
push
popf
lock
mov
pop
add
roll
inc
shrl
mov
inc
sub
cmp
fistpl
addr16
push
sbb
adc
shrb
jns
cli
push
call
popa
aad
lods
cli
mov
mov
out
aad
sbb
pop
sub
inc
inc
stc
sub
outsl
add
popa
adc
adc
cld
push
js
nop
test
sub
das
or
or
or
or
pop
push
push
mov
inc
mov
fnstsw
mov
xchg
cmc
ret
test
jmp
push
outsl
mov
lcall
test
jge
push
lea
fidivl
jge
fisubs
in
sbb
in
jo
rorb
jne
xchg
xchg
cli
push
ljmp
outsb
inc
push
test
xlat
jmp
int3
add
xchg
arpl
aam
and
sbb
fbld
in
rorl
inc
das
es
jmp
adc
cmp
pop
lods
add
sti
daa
hlt
pop
cmp
ret
lret
cmp
dec
xchg
jns
jg
cmpsb
inc
mov
in
aam
push
shrl
adc
fldcw
dec
add
mov
jle
fwait
test
ja
pop
movsb
push
test
fwait
les
pop
aam
test
sarl
das
dec
pushf
popa
mov
mov
cmp
pop
mov
cmp
pop
cwtl
jo
push
add
adc
fidivrs
cmpsb
hlt
fidivl
adc
and
inc
ljmp
add
ficoml
dec
jo
mov
and
movsl
mov
or
pop
lds
mov
inc
xchg
int
cli
cmp
imul
mov
popf
cli
sbb
jl
test
or
pand
rorb
lea
fdivrp
icebp
mov
xor
pop
fnsave
in
in
mov
test
sbb
dec
sbb
xor
cwtl
push
std
mov
xor
pop
fdivr
push
ret
outsl
add
xchg
mov
sbb
push
jp
dec
inc
cmp
and
inc
rorl
dec
and
icebp
xchg
cmp
mov
cmp
xor
stc
sub
imul
sub
xor
xchg
daa
aaa
or
sahf
in
push
adc
push
gs
cli
inc
out
push
test
sbb
fmull
in
dec
lahf
xor
pop
cmc
add
sub
mov
fistpl
adc
flds
inc
ja
mov
jg
push
ljmp
cmp
iret
ds
ss
fmull
adcb
popa
sbb
popa
or
xor
lahf
popa
jo
out
mov
add
stos
popa
push
or
add
inc
inc
lea
lcall
sbb
dec
mov
inc
inc
imul
jle
inc
push
inc
scas
gs
or
sub
mov
push
cmp
cmpsl
adc
mov
in
shl
sub
ds
mov
inc
fisttpll
mov
and
mov
mov
rorb
add
cwtl
mov
dec
aaa
xchg
test
push
std
jnp
push
loopne
pop
out
icebp
fistpll
js
push
scas
ja
dec
int
xor
sbb
cmpsb
fistl
nop
sbb
xchg
xor
and
ja
pop
sub
das
push
aad
ljmp
and
repz
rorb
sbbl
inc
push
xchg
sarl
jge
mov
sub
xchg
sub
push
mov
and
inc
loop
sub
sbb
les
imul
inc
fsts
or
sub
cmp
insl
xor
dec
out
icebp
scas
pushf
jecxz
jb
jb
mov
inc
movsl
stos
insl
push
testl
pop
inc
pop
or
mov
sarl
pop
mov
test
dec
adc
cmpsb
mov
add
ds
out
cmp
insb
cld
jae
push
loope
dec
jno
nop
sbb
mov
fisubl
push
push
out
scas
rclb
notb
icebp
mov
das
in
push
je
add
dec
sub
mov
ret
lret
outsb
push
dec
mov
xchg
sar
inc
mov
inc
popf
mov
mov
sti
lahf
add
iret
aaa
adc
dec
add
std
in
iret
gs
sbb
adc
mov
std
dec
sub
sub
push
popf
mov
xchg
imul
or
add
add
aaa
out
cmp
inc
aaa
pusha
adc
insl
fildll
sarl
jle
imul
js
xchg
in
mov
xchg
mov
sbb
or
push
pop
mulb
icebp
dec
dec
push
xor
scas
lret
ret
inc
sub
add
dec
stos
add
cli
and
jae
mov
dec
jns
out
or
ror
into
cwtl
in
cmp
dec
mov
adc
sub
roll
pop
push
insb
mov
lea
f2xm1
jbe
push
fbld
xchg
rcrl
leave
push
inc
ljmp
adc
xchg
sbb
shrd
sti
xchg
je
scas
je
ficoms
movsl
shlb
les
dec
shrl
iret
icebp
xor
outsb
xor
outsl
xlat
stos
jbe
lcall
ror
enter
rclb
test
cltd
testb
pop
push
jo
inc
sub
push
xchg
jnp
mov
pop
or
cltd
mov
sbb
stos
and
stos
test
jge
push
arpl
xor
xchg
mov
stos
jmp
ja
add
jns
mov
xchg
mov
out
nop
mov
mov
ret
cld
into
jo
int
xorl
daa
cmp
adc
xor
pop
addb
sbb
push
and
mov
pushf
sbb
adc
sub
mov
sub
enter
repz
das
or
into
pusha
add
test
daa
adc
adc
inc
addr16
and
rclb
or
mov
in
xor
lcall
enter
paddq
je
push
or
mov
sbb
pop
jbe
andb
out
adc
scas
and
aas
cmp
enter
cmc
mov
movb
dec
xchg
test
xchg
inc
fadd
xor
daa
xchg
or
fnsave
mov
sbb
mov
jmp
cs
or
fistpl
or
lahf
or
mov
xor
gs
bound
push
je
push
mov
push
xlat
js
add
out
sar
mov
lock
inc
xor
into
mov
push
insb
push
mov
xor
rcrl
fcmovu
xchg
mov
imul
jecxz
sbb
and
pop
mov
xchg
js
int3
inc
jbe
cmp
inc
pop
test
ljmp
hlt
mov
xchg
xor
scas
ss
add
lahf
xchg
sub
mov
icebp
les
stc
push
jp
xorl
cs
cmpsb
cltd
in
ss
pushf
sahf
gs
insb
sar
lea
out
xor
pop
mov
pop
fcom
stc
js
out
ret
das
mov
dec
xchg
mov
pop
push
insb
lcall
sbb
movsl
fistl
ljmp
add
dec
push
outsb
addps
icebp
out
stos
popf
outsl
sub
pcmpeqw
icebp
mov
mov
lods
add
leave
fcomp
shl
out
fsubl
push
jbe
leave
sub
popa
dec
inc
aas
sahf
cli
mov
mov
mov
imul
pusha
sub
mov
loope
outsl
adc
sub
mov
retw
inc
pop
or
and
adc
mov
push
pop
inc
int
add
decl
insl
xrelease
push
push
lret
cmpsl
bound
aam
pop
cmpsl
jmp
test
or
cld
stos
mov
pop
add
jmp
jo
sbb
out
repz
lcall
div
lock
dec
rolb
mov
hlt
add
pushf
scas
insl
stc
adc
divl
cltd
dec
rclb
loopne
cmp
icebp
push
mov
and
adc
and
and
cs
xchg
cltd
dec
punpckhbw
in
add
fisttpl
adc
loope
mov
or
push
xchg
mov
sub
cwtl
add
fnstcw
and
or
mov
mov
sti
jo
pushl
sub
add
in
jmp
mov
and
inc
cli
pop
xor
outsl
push
sub
mov
and
jecxz
repz
cmp
cs
popa
cmp
insl
or
inc
mov
mov
ljmp
ljmp
fs
pop
cmp
and
jecxz
mov
or
inc
cmp
jl
pop
mov
dec
or
dec
xchg
mov
pop
and
in
stos
sub
sub
sbb
lods
mov
sbb
ja
sbb
push
lock
or
cmp
shlb
inc
sbb
mov
fdivs
adc
adc
lret
fnsave
pop
aas
jne
add
cmp
inc
outsl
lds
lods
scas
or
sti
inc
jl
pop
xchg
inc
jbe
popf
jae
xor
cli
mov
or
cmp
rolb
jnp
mov
daa
test
cli
mov
xchg
mov
push
xor
shlb
xor
cli
divl
out
mov
mov
idiv
shl
sub
jmp
je
aam
push
pop
loop
popf
dec
hlt
sub
pop
pushf
pop
popf
popa
cmp
mov
cmp
out
adc
cmp
jg,pt
scas
sub
insl
int3
sub
pop
sub
jmp
dec
mov
cmp
mov
pop
in
test
mov
outsb
adc
dec
pop
adc
inc
adc
add
xchg
jle
xchg
ret
mov
daa
sub
sbb
or
mov
ror
lea
xchg
jecxz
mov
cmc
movsb
cmpsb
mov
cmpsl
cmp
lahf
mov
pop
mov
pop
mov
fiaddl
mov
pusha
shlb
vmwrite
push
push
imul
lret
out
cmpb
jle
push
and
push
mov
pop
shrb
inc
xchg
jo
cmp
or
sub
fcoml
nop
mov
scas
mov
cwtl
dec
je
mov
jns
add
adc
nop
sub
imul
test
and
orl
pop
mov
ss
cmpsl
cmp
stos
flds
fadd
pop
mov
cwtl
xchg
mov
popf
inc
lds
in
mov
lock
fisubl
inc
or
fists
xchg
bound
cmpsb
mov
cs
xchg
fwait
push
mov
mov
push
out
fst
dec
aam
fucomi
mov
jae
inc
mov
aaa
sbb
pop
movb
mov
lock
pop
push
xchg
cmp
movsb
and
sti
fs
push
movsl
mov
jg
xchg
dec
cs
xchg
stc
jo
mov
sub
test
adc
xor
out
mov
cmpsb
xchg
adc
cld
out
and
loope
jge
stos
ja
xor
imul
jnp
xchg
and
lods
dec
push
ja
loopne
sub
and
sub
ss
out
sub
popf
pop
clc
jae
lret
mov
pop
cmp
dec
in
cmp
ret
xchg
dec
ljmp
mov
in
loopne
sub
int3
push
cld
test
imul
push
sti
mov
aas
test
add
dec
frstor
fstpt
push
mov
push
test
xor
pop
aaa
pop
jno
mov
lret
test
sub
js
push
outsl
sub
pusha
cld
pop
jae
mov
loop
xchg
dec
push
lret
xor
push
xlat
push
cmp
xlat
sub
clc
divb
jmp
sbb
cmpsl
or
sub
aad
ss
loopne
aaa
pop
inc
mov
jmp
imul
les
out
jle
cmp
mov
and
xor
lods
mull
sub
repnz
scas
mov
xor
jae
push
mov
aaa
shrl
jl
pop
cmpsb
aas
dec
aam
and
dec
or
jmp
xchg
loope
mov
dec
cmpsl
test
les
cmp
xchg
xchg
stos
inc
cmp
cmp
xor
jo
mov
xor
movsl
shr
mov
jecxz
or
mov
sub
int3
sarl
mov
mov
out
lfs
dec
leave
push
addl
inc
or
pop
add
dec
add
mov
ret
or
mov
sbb
not
fimull
cmp
sbb
push
jp
mov
ds
mov
mov
inc
add
cmp
stc
dec
shl
stc
in
sub
pop
jae
mov
mov
aam
mov
fnstcw
or
pop
std
test
inc
xchg
insb
pop
mov
daa
mov
rolb
add
shll
push
mov
jbe
cli
sub
pop
jp
jb
push
mov
repz
pop
fidivs
fisttps
or
xor
aaa
repz
fxch
pushf
outsl
scas
enter
inc
das
cmpsl
adc
stos
push
cli
adc
sarl
adc
or
test
divb
inc
test
pop
inc
push
out
mov
mov
cmp
jge
jecxz
mov
fists
arpl
dec
loope
push
inc
push
inc
fs
mov
mov
xlat
je
subb
xchg
or
repz
stos
adc
insb
push
mov
in
lods
xchg
push
movsl
dec
sbb
insl
add
call
mov
adc
push
inc
mov
popf
and
rcl
jae
subb
mov
insl
icebp
mov
sub
mov
add
mov
in
fidivl
or
push
xchg
mov
and
sub
push
frstor
sbb
xchg
je
add
mov
ljmp
fldcw
add
loop
es
mov
or
mov
orb
cltd
xchg
fstps
addr16
in
mov
jb
dec
stos
stos
repz
jbe
loop
dec
mov
out
mov
mov
adc
cmp
int
push
mov
mov
push
push
xor
int
mov
push
insl
dec
mov
xor
and
cmpsl
jmp
fwait
dec
arpl
lock
mov
dec
jg
jbe
pop
sbb
cltd
dec
loopne
adc
sbb
enter
fucom
lret
adc
fcomps
xchg
jns
repnz
push
xchg
std
rolb
cwtl
addl
shlb
scas
cmc
mov
sbb
xchg
repnz
pop
sub
test
add
adc
fdivs
add
gs
xorl
sti
fmull
dec
jo
insb
lods
inc
out
dec
xor
movsb
xchg
adc
popl
push
sub
movsb
pushf
jno
movsb
cmpsb
xlat
mov
jle
xchg
add
out
repnz
mov
pop
inc
add
je
sti
xchg
adc
jo
and
and
lret
cltd
scas
xor
mov
push
pop
pop
idivl
pushf
inc
fcompl
fisubrl
mov
cmp
ror
adc
out
pop
jns
mov
ret
test
mov
pop
push
or
in
fidivl
fadds
and
sub
jne
popl
adc
push
sbb
cmp
loopne
lods
sub
mov
aas
iret
dec
orb
cmp
sarl
jp
mov
arpl
mov
and
xor
fxch
push
fwait
mov
lods
push
pop
std
lahf
jg
adc
sahf
clc
addr16
insb
push
and
sti
cmp
jl
iret
pop
mov
gs
pop
stos
mov
daa
jo
add
inc
in
jecxz
xor
std
pop
cmp
push
add
lods
sub
jo
aaa
cli
insl
out
cmp
adc
and
pop
mov
sbb
pop
cmc
sbb
imul
jge
push
sahf
pop
pop
filds
imul
or
sbb
lods
jo
sti
sub
add
repnz
movsl
xor
and
in
stos
in
leave
test
mov
je
cltd
inc
push
stos
or
push
ret
inc
js
pop
shrb
sbb
scas
in
outsl
fcmovnbe
jecxz
xchg
fisubrs
jno
mov
lock
adc
xchg
int
push
pop
xchg
cli
iret
into
shrb
loope
mov
rep
lds
sahf
loopne
aas
test
mov
mov
outsb
add
and
lret
cwtl
cwtl
dec
das
clc
push
jmp
test
pop
xor
jne
push
xchg
subb
jg
xor
movsb
push
sbbl
mov
xchg
clc
and
push
rorl
mov
enter
aad
push
jb
or
mov
cmp
sub
jg
jne
aaa
push
jo
lods
adc
add
fwait
jo
cmp
ret
adc
js
xlat
mov
mov
inc
push
xchg
mov
es
sub
dec
testl
add
ror
adc
dec
xor
clc
cli
push
scas
mov
incl
es
or
dec
jge
add
jg
jae
rcll
scas
jge
mov
add
mov
ret
sti
das
in
jnp
iret
or
gs
das
ficomps
xchg
mov
add
mov
test
and
sbb
rcl
pop
int3
jnp
cmp
fwait
lahf
out
idivb
xorl
push
dec
adc
cwtl
or
mov
jbe
setle
addb
xchg
dec
mov
pop
mov
dec
push
xor
ss
pusha
test
lds
sbb
sub
out
leave
sbb
mov
mov
xchg
ja
pop
out
scas
test
jb
in
jecxz
sub
loopne
cmp
push
cwtl
mov
push
fistpl
sub
andb
mov
sbbl
xchg
mov
lahf
dec
jne
add
sti
adc
push
xchg
adc
jno
out
sbb
pop
out
dec
or
pop
sbb
test
push
push
fs
adc
sbb
int3
jbe
ret
sub
jno
test
or
ffreep
shrb
enter
scas
lret
or
mov
cmc
div
sub
shl
push
add
out
out
popf
add
out
cwtl
loop
sbb
pop
sti
inc
icebp
loopew
push
push
idivl
fdivl
mov
fildll
mul
add
or
sbb
out
xchg
iretw
sub
rorb
mov
divl
test
xchg
sbbb
je
cmp
sub
cld
repnz
lret
or
pop
lret
mov
mov
pop
rcrb
ret
pop
inc
sbb
aad
jo
aad
mov
add
push
out
cmp
cmp
js
and
and
out
xchg
xorl
movsl
stc
std
fidivrl
push
addr16
mov
int3
mov
rorl
fcoms
push
std
je
popa
stc
and
add
dec
mov
popa
cwtl
cmp
scas
mov
cmp
xchg
mov
sub
clc
fmul
sbb
mov
pop
inc
push
cli
push
insb
inc
xor
lret
push
sbb
jmp
mov
mov
xchg
insb
pop
pop
call
xor
inc
insb
push
bound
fsub
test
mov
pusha
jl
movsb
out
arpl
ljmp
cmp
adc
rcll
and
xchg
mov
fisubrs
push
adc
jae
lret
mov
cld
inc
pop
cmpsb
mov
add
jns
lahf
jo
add
sbb
dec
test
cmp
cmp
push
enter
je
gs
das
fs
int3
mov
adc
nop
mov
xchg
ret
jge
lret
cmp
mov
pop
pop
jmp
inc
test
mov
int
jnp
insl
sti
mov
mov
ds
int
popa
sbb
inc
add
idiv
adc
add
sahf
fldlg2
ja
push
lahf
andw
mov
andb
test
aas
pop
or
pop
mov
inc
mov
sub
xchg
aas
mov
hlt
fst
popf
loop
and
ja
push
mov
sub
jge
dec
inc
and
xchg
out
scas
mov
xchg
pop
ret
pushf
std
xchg
fidivrs
or
addr16
in
arpl
pop
jnp
xor
imull
sub
mov
sub
je
js
and
ljmp
and
ja
push
jne
jmp
xchg
push
loopne
and
lahf
test
dec
jecxz
mov
pop
sbb
bound
ljmp
loopne
ret
push
sub
insl
rcl
out
sub
idivb
add
dec
xchg
inc
dec
fbld
mov
nop
icebp
sti
data16
cltd
add
and
in
gs
fbstp
or
adcb
pop
mov
imulb
push
scas
clc
out
lds
and
xor
xor
cwtl
xchg
pop
ret
loope
inc
prefetch
pop
leave
stos
adc
loope
cmp
push
add
push
push
add
test
inc
cmc
dec
xchg
daa
loope
jne
jecxz
cwtl
ja
scas
mov
mov
out
mov
jbe
mov
jno
enter
fs
mov
cmp
jle
testl
mov
data16
mov
inc
jo
mov
sahf
and
add
cmp
push
test
dec
jnp
xor
loopne
arpl
sbb
adc
loope
sbb
in
xor
sub
les
data16
arpl
es
rcrb
ret
or
xchg
imul
test
inc
sahf
insb
int3
in
inc
imul
arpl
outsb
loop
sbb
jle
popf
rcrb
xchg
int3
cmp
pop
ret
outsl
sub
inc
push
cltd
ret
xchg
pop
sub
push
idivb
jb
dec
shll
or
xchg
hlt
adc
adc
add
fs
mov
xchg
add
xchg
fsts
test
mov
xchg
mov
dec
jge
mov
bound
call
xor
jnp
jnp
movsb
mov
pushf
and
xor
cmp
sub
fstpt
js
test
mov
je
ljmp
in
cmpsb
and
outsl
mov
xorb
mov
inc
jle
push
mov
sbb
lods
xchg
xchg
cmp
sti
bound
or
push
mov
out
dec
daa
inc
repz
mov
popa
sbb
pop
imul
cmp
mov
mov
mov
jp
mov
push
jnp
sbb
pop
flds
fidivrl
add
sbb
dec
in
or
or
loope
andl
add
aas
push
rorb
jo
cmpsl
cs
sbb
inc
das
cmc
or
imul
cmpsl
ficompl
or
xchg
cmp
xchg
cmpsb
cs
jg
ss
cs
pop
arpl
inc
fwait
sub
rcrb
xor
pop
jae
sub
or
loope
mov
insb
push
in
aad
jp
cwtl
xor
mov
insb
adc
and
and
or
push
sub
or
jmp
insb
cs
aaa
and
mov
mov
jb
mov
inc
xor
sub
jb
sbb
fiaddl
into
pop
adc
fisubs
inc
jnp
imul
xchg
adc
xor
jl
jae
jle
cmpsl
pop
iret
pop
mov
loope
subb
xchg
shr
filds
sub
sbb
fprem1
mov
and
push
test
repz
sbb
push
lret
xchg
push
ret
loope
adc
dec
mov
addr16
push
sub
dec
sbb
mov
jmp
cld
pop
repz
fisttpl
shll
ret
aad
addl
or
mov
add
popf
mov
xor
xor
jnp
adc
xchg
jecxz,pn
insl
xor
mov
dec
inc
mov
push
xchg
in
pop
into
sbb
test
cs
mov
ss
xchg
lahf
or
inc
in
sub
fwait
ss
or
mov
jge
mov
out
insb
test
shr
imul
inc
cmpb
clc
mov
incb
push
addl
int
aad
lods
out
dec
call
push
imul
loopne
dec
add
aaa
sbb
scas
stos
repnz
jo
sarl
mov
mov
inc
ret
test
frstor
call
and
xor
add
fldt
les
add
dec
mov
xchg
shrl
xchg
gs
nop
popf
dec
mov
lods
icebp
inc
dec
jecxz
ficoms
jmp
loopne
cmpsb
or
mov
lret
fstl
cmp
scas
xchg
icebp
cmp
push
notb
xchg
fsubs
dec
repz
out
pop
jmp
mov
mov
cmc
andb
jb
sub
dec
add
repnz
out
stos
stos
sub
dec
xchg
pop
cmp
inc
jbe
popf
mov
popf
adc
inc
lcall
pop
insb
std
popa
sub
stc
jg
or
ret
ret
test
dec
cmp
sub
in
ret
enter
sbb
sbb
cli
aas
xlat
add
mov
push
push
cmp
pop
xchg
lret
les
inc
das
pop
xchg
aas
dec
jae
movsb
cmpb
push
lret
lds
pusha
lods
mov
daa
ds
gs
addr16
adc
pusha
cmp
mov
rorl
or
nop
or
push
enter
pop
xor
sbb
jle
mov
mov
add
add
fwait
push
sti
ja
adc
xchg
lret
lret
mov
sahf
inc
addb
and
pop
dec
mov
jns
push
or
pusha
test
inc
sub
sub
cmp
pop
jmp
and
pop
jmp
inc
inc
xchg
je
lahf
arpl
jle
loope
icebp
sbb
shl
push
mov
shrl
cmpsb
popf
jp
pop
clc
dec
mov
movb
std
mov
repnz
and
leave
outsb
add
enter
mov
push
fs
pop
sbb
icebp
outsl
inc
lcall
mov
fnstsw
hlt
ja
aaa
jg
loop
stos
aam
sahf
out
jmp
inc
bound
or
std
ja
sub
test
jp
shlb
mov
rcrb
pop
mov
dec
mov
movsl
mov
xor
dec
cs
inc
dec
inc
cs
xchg
add
cmp
mov
pop
jbe
dec
loop
lcall
arpl
jns
aaa
aam
ret
inc
xchg
out
sub
mov
fsubrl
mov
or
cmp
out
pop
inc
enter
xchg
les
sbb
aas
pop
and
xchg
push
mov
cmp
ficoml
xchg
pop
mov
xor
cld
add
jns
jmp
daa
jmp
sbb
int3
stos
ret
inc
xor
mov
lret
add
outsl
outsl
push
leave
push
insb
or
adc
sahf
lret
xchg
sub
nop
inc
jbe
and
lods
mov
jge
lret
push
mov
lods
mov
jle
testb
outsb
lock
imul
pop
add
pop
pushf
add
fwait
lods
repz
adc
cmp
incl
push
add
xlat
out
sub
call
xor
push
clc
data16
rolb
or
lds
add
mov
cmpsb
push
movsb
xchg
movsb
aad
push
cmp
orl
push
adc
mov
mov
mov
cld
dec
inc
xor
xchg
sbb
xchg
and
movb
insl
jne
adc
shlb
inc
movsb
imulb
jle
subb
push
pop
outsl
lret
into
pop
ja
movsb
dec
add
lahf
and
sbb
add
adc
sub
pop
rcrl
xchg
cmpsl
movsl
sbb
aad
sbb
sbb
test
add
out
out
jmp
cmp
pop
or
mov
jecxz
imul
push
sub
fildl
lahf
sub
jge
test
pop
aad
leave
movsl
ret
xchg
adc
xchg
mov
mov
or
mov
shlb
push
test
adc
pusha
cmp
mov
dec
jne
mov
inc
sub
int
gs
test
xchg
rcrl
movsl
xchg
xchg
lcall
bound
push
or
push
xor
movb
pushf
mov
fnstenv
aad
or
fisttpl
test
lahf
mov
stos
cmpsb
jecxz
ja
lods
pop
push
sub
jl
add
shl
pop
into
fadd
adc
int3
xor
ret
cmpsb
ds
rcll
push
sbb
sbb
xchg
pop
je
cmp
pop
sti
lods
dec
nop
pop
mov
mov
bound
cmp
inc
add
inc
ds
outsl
sub
mov
int
adc
les
jae
pushw
lret
inc
leave
adc
inc
je
enter
sbb
ret
mov
dec
roll
dec
and
push
ror
cwtl
xlat
mov
push
loope
pop
cmp
sbb
dec
fwait
out
mov
int
sbb
in
mov
xor
sahf
insl
xlat
and
fldcw
inc
mov
cmc
shll
leave
mov
mov
jmp
pop
xorl
mov
xchg
mov
call
ret
rol
scas
dec
sbb
add
mov
in
sbb
movsb
and
and
dec
fisubrs
mov
adc
rorl
orb
add
xor
addr16
test
movsl
std
cli
sub
jmp
mov
das
js
loope
daa
pop
xor
lods
xchg
pop
and
data16
mov
inc
aad
push
fstl
shrl
inc
out
popa
and
iret
jae
js
shlb
xchg
inc
fcomi
jp
or
fisubrs
stc
mov
jne
push
push
xchg
sub
pop
fisubs
fsubs
or
pop
cmp
insb
pop
add
jle
sbb
jge
mov
movsl
dec
mov
cli
pop
in
jp
sbb
ljmp
pop
dec
jb
pop
pusha
sub
sbb
xor
outsb
iret
sub
xor
fs
and
divl
inc
js
bound
push
mov
jg
rcrl
adc
pop
js
inc
mov
mov
mov
adc
and
mov
dec
pop
dec
pop
clc
test
jl
out
xchg
outsb
je
jmp
sbb
push
in
aad
cmp
and
inc
adc
fs
xchg
cmp
inc
mov
adc
pusha
mov
lods
adc
mov
je
xor
incb
orb
jae
imul
inc
or
cmp
negb
add
test
jg
and
repnz
packsswb
adc
aad
add
lret
mov
push
iret
sub
xor
add
sar
mov
xchg
adc
test
add
fdivrs
push
inc
leave
movsl
mov
fs
filds
xlat
rcrb
stc
xchg
push
arpl
jge
mov
repz
push
or
popa
inc
call
cltd
cmp
add
jge
mov
js
cmp
outsl
stc
sbb
dec
adc
idivb
loop
or
cli
cmp
pop
xor
dec
mov
pop
lock
sahf
dec
test
cli
pop
pushf
sub
ss
pusha
mov
sbb
xlat
test
out
sbb
xor
cltd
mov
or
jle
adc
push
shr
inc
int
and
rol
push
insl
shlb
sbb
push
push
jp
fistpll
insl
mov
and
fnstenv
mov
lea
adc
out
mov
sahf
cwtl
sahf
push
ret
sahf
or
mov
mov
xor
cmp
sti
mov
cs
out
xor
inc
leave
mov
stc
push
adc
movsb
cltd
mov
in
jge
mov
cmp
sub
inc
sar
jae
js
adc
sub
sbb
cmpsl
shll
int3
mov
imul
popf
pop
xor
repnz
inc
lret
sbb
mov
test
aad
nop
imul
cmp
push
addr16
jle
push
and
imul
xor
cmp
inc
xor
pop
xchg
xchg
jl
mov
mov
push
or
addr16
jae
or
and
xchg
cmp
sbb
push
dec
mov
fstpl
pop
jl
std
outsl
int3
test
mov
cmp
add
xchg
sahf
sbb
ret
loope
pop
xor
dec
js
data16
in
imul
std
ja
sbb
lret
sti
fs
test
imul
sub
pop
pop
call
mov
xchg
mov
fmul
aaa
dec
sub
jnp
inc
jnp
leave
sub
je
or
js
sbbb
jl
into
xchg
fldenv
fdivs
sub
cmpsl
hlt
add
inc
dec
and
dec
movsl
loopne
mov
mov
ljmp
idivl
push
or
shl
out
add
xchg
in
pop
outsb
ja
fldt
mov
xchg
jb
nop
imul
lds
jp
outsl
mov
xchg
jne
xchg
pop
imul
popf
pop
fimuls
ljmp
sub
sbb
data16
ja
and
aas
movsl
inc
cli
xor
sbb
repnz
jp
fiaddl
jle
sub
pop
ror
mov
jmp
movsl
repz
pop
int
xor
out
sub
dec
xchg
adc
rclb
xor
xchg
loop
jecxz
mov
cwtl
incb
inc
and
rcrl
stc
sub
mov
sub
mov
sahf
mov
lahf
xlat
jg
movsb
sbb
nop
fisubrl
and
scas
inc
mov
adc
daa
daa
xchg
adc
sbb
movsb
lds
fnstenv
pop
pushf
mov
aad
fldcw
pop
cld
and
int3
stc
xchg
add
xorl
mov
out
mov
cld
sub
sub
cmp
icebp
bound
out
shrb
data16
subl
lods
mov
mov
bnd
ljmp
inc
je
mov
mov
mov
jmp
mov
cmpb
jbe
xchg
sub
inc
hlt
insl
aaa
in
sub
cmp
scas
test
ss
push
cmp
adc
test
inc
xor
cli
push
das
pop
ret
fs
and
xchg
inc
out
repz
adc
and
lahf
pop
cltd
stos
je
jno
outsb
push
sub
ds
jae
mov
adc
push
pop
pop
cmp
enter
push
mov
incl
imul
lcall
mov
loop
dec
add
imul
jbe
data16
and
je
cmp
jbe
xchg
xchg
cmpsb
jae
in
fdivp
aaa
stos
mov
jmp
jmp
es
mov
repz
aam
cmp
add
int
cmp
lahf
pop
andl
loop
mov
jo
popf
movsl
repz
insb
popf
add
cmc
push
in
mov
icebp
sbb
mov
out
and
call
adcb
decl
or
inc
add
cltd
nop
pop
not
rolb
pushf
pop
mov
inc
fwait
mov
sbb
jp
stc
mull
nop
mov
cs
cmp
outsl
cmp
inc
mov
cmpsl
mov
dec
sti
and
dec
sbb
jge
push
pop
test
in
sub
inc
cmp
push
sub
push
cmp
icebp
es
adc
mov
adc
dec
sub
xchg
jecxz
jmp
push
jae
xchg
subb
lahf
xchg
lods
cmp
test
pop
xor
or
pop
add
or
outsb
mov
fs
xchg
jp
shrb
bound
pop
push
std
push
mov
shrl
fadd
cs
xor
inc
call
out
subb
and
movsl
bound
mov
ja
das
ja
outsl
and
sub
test
inc
je
mov
add
lock
ljmp
xchg
add
insl
inc
jl
loop
popf
and
jnp
andl
mov
mov
jle
les
mov
push
xor
pop
popa
outsl
scas
add
ret
pusha
xor
enter
lock
mov
fxch
xor
sbb
cli
lcall
sti
cmpsb
leave
loopne
rcll
or
negb
push
sub
fsubrl
sbb
push
loope
cs
sbb
add
out
adcl
lock
dec
mov
adc
xchg
ss
loopne
in
mov
mov
or
mov
mov
pop
mov
pushf
aas
xor
dec
sarl
inc
rcll
lock
aas
pushf
fcomip
std
mov
adc
or
xchg
mov
mov
stos
insb
inc
out
aam
add
das
in
xchg
loopne
lods
fstl
in
enter
adc
jg
cmc
push
sti
scas
cmp
fmull
gs
lods
cmp
fisttpll
mov
data16
fisttpll
jbe
sbb
mov
sub
fisttpl
inc
or
fwait
xchg
jl
add
in
je
mov
jg
dec
sti
lds
mov
push
lods
rorb
pushf
add
ljmp
ja
mov
movsb
addl
mov
push
mov
xor
xor
cs
lds
cmp
jp
xorl
test
inc
insl
mov
gs
sub
pop
testl
and
fs
movb
in
sub
bound
call
ficompl
push
xchg
pop
jo
dec
fucomi
and
dec
notl
shlb
mov
hlt
jb
fwait
inc
loope
insb
sub
movsb
je
mov
add
inc
xor
pushl
inc
xchg
push
mov
js
or
shll
fcmove
inc
and
shlb
or
push
inc
xor
es
mov
testl
outsb
fisubrs
mov
movsl
mov
sub
ret
push
into
and
jg
inc
in
xchg
gs
popa
or
cli
dec
fwait
xchg
push
ret
mov
xor
loope
fs
cmp
scas
sbb
add
lods
les
sub
dec
mov
mov
mov
in
js
test
popa
xchg
pop
outsl
or
ss
stos
add
imul
out
mov
mov
les
dec
xchg
int3
sub
andl
inc
fldl
lea
push
fcoml
ds
xor
adc
inc
cmpsl
cwtl
and
sarb
lret
xchg
xchg
je
mov
std
jne
mov
mov
push
outsb
mov
xor
lret
leave
xchg
or
xchg
sub
mov
js
adc
jmp
popa
jp
jae
cli
std
loopne
sbb
mov
or
aad
jg
push
testl
pop
imul
sub
jge
cmp
sbb
xor
data16
jbe
les
or
mov
dec
cmc
mov
mov
sahf
xor
mov
pusha
dec
xchg
mov
out
mov
xor
test
adc
sub
mov
sub
scas
push
dec
repnz
or
jne
orl
ljmp
daa
daa
outsb
lahf
or
pop
in
adc
xchg
mov
scas
loop
mov
mov
push
dec
fstpt
xchg
stos
fcomip
ret
test
ja
lea
dec
add
insb
sub
pusha
mov
adc
loope
lock
ds
adc
sub
subl
jb
xchg
mov
lcall
loopne
dec
sarb
mov
fs
cmp
cwtl
cmpsl
dec
and
aam
popf
rolb
jns
loop
dec
sbb
fisttpl
test
push
add
cmp
dec
stos
cmp
jecxz
dec
dec
icebp
adc
repnz
push
pop
enter
fs
mov
movsl
popf
cmp
add
mov
dec
xchg
maxps
cmpl
mov
push
xchg
mov
push
dec
mov
incl
mov
jp
pop
pop
sahf
add
imul
push
or
jge
push
pop
sub
or
sbb
sub
push
inc
cmp
pop
push
xor
adc
mov
mov
sbb
mov
lcall
mov
scas
mov
inc
ss
push
xchg
add
jmp
sub
sbb
mov
push
negl
aaa
orb
inc
xchg
jbe
or
imul
mov
mov
mov
lret
std
jg
inc
xor
test
lock
adc
xor
and
test
mov
insb
fldt
jns
adc
jp
jne
cltd
jne
arpl
lahf
loop
mov
imul
dec
adc
mov
dec
push
std
fsub
icebp
cmp
and
push
inc
and
cmpsl
in
sbb
outsl
rcl
push
adc
sbb
ret
mov
repz
out
mov
xchg
or
test
adc
gs
jmp
aas
fmul
pop
test
pop
mov
sub
insb
mov
aaa
xchg
mov
jp
mov
dec
or
jmp
stos
mov
xlat
and
out
js
mov
popa
pop
adc
jbe,pn
jno
cmp
jae
or
test
push
test
fwait
and
out
cmp
pop
scas
mov
imul
pop
xchg
out
xchg
jg
lret
adc
mov
lods
mov
das
and
xor
scas
and
xchg
lret
pop
out
jno
sub
es
out
sub
xchg
outsl
jo
not
xor
push
icebp
pop
mov
dec
in
mov
and
add
mov
dec
sbb
jl
jb
pop
jne
out
and
adc
cmpsb
xchg
mov
pop
xchg
insb
xor
xor
rolb
mov
ljmp
shrb
cld
imul
stc
dec
jmp
jg
sub
lds
mov
cmpb
push
cmp
add
faddl
outsb
in
outsl
push
popf
xchg
and
jg
std
sub
mov
in
and
xorl
fdivs
aam
loope
add
fwait
out
adc
in
arpl
in
mov
iret
mov
mov
pop
pop
cmp
addr16
mov
dec
cmpsl
inc
mov
jae
xor
cmpb
mov
xchg
sub
jle
rorb
jmp
and
stos
loope
cmpsb
daa
scas
mov
jp
and
imul
aas
or
rorl
call
or
dec
xor
mov
out
cli
pop
ret
in
or
xchg
addr16
xchg
nop
push
fbld
loop
fsts
scas
lea
das
pusha
dec
pop
jbe
fnstenv
fstpl
cmp
and
adc
dec
aaa
sbb
add
inc
dec
mov
fiadds
sarb
adc
pop
mov
mov
mov
sbb
sbb
sub
sub
pop
xchg
and
jbe
loope
aas
dec
cmpsl
sbb
mov
xchg
xchg
sub
pop
arpl
lods
shl
fcomps
insb
addb
push
dec
and
mov
gs
jbe
inc
cmp
popa
fbstp
jb
lds
inc
and
fmul
mov
into
jb
ljmp
inc
das
leave
xchg
add
and
sbb
cmp
aam
gs
and
arpl
shlb
mov
loop
xchg
outsl
mov
adc
push
popa
sub
jmp
push
ret
in
xlat
sbb
mov
xor
sar
fisubl
pop
push
leave
cmc
push
daa
cmpsb
or
mov
lret
shrl
jb
jp
xor
fmul
pop
lret
xchg
or
or
sub
xchg
jno
mov
push
push
push
mov
inc
andb
mov
in
outsb
fisubrs
jne
mov
sahf
cmp
fmull
aam
sahf
out
test
outsb
scas
xor
inc
cmp
add
cmpsb
inc
fwait
aam
arpl
sar
je
aaa
imul
lods
iret
pop
scas
and
cmp
hlt
stos
ret
aas
cmp
fadds
daa
fwait
cli
jne
mov
pop
push
ja
adc
mov
cmpsl
mov
jl
leave
or
push
nop
fimull
jl
inc
xchg
mov
pop
pop
adc
xor
in
cmc
sub
sub
mov
push
jecxz
in
xchg
mov
enter
mov
push
adc
cmc
aam
in
xorb
popf
insb
and
xchg
push
lahf
mov
aaa
sahf
fs
addr16
lds
push
dec
sbb
push
dec
aad
fistps
mov
jge
mov
lock
cltd
xchg
push
jno
sub
adc
or
popf
push
insb
and
inc
lock
or
inc
dec
xor
jns
xor
xor
hlt
lds
clc
push
lds
nopl
sahf
ds
leave
pop
mov
repnz
and
loop
mov
xchg
or
std
pop
lret
inc
adc
mov
lock
xchg
out
out
nop
mov
sub
mov
xor
push
mov
mov
sub
jecxz
mov
mov
out
dec
out
push
mov
xchg
icebp
dec
mov
ret
and
lods
popf
xor
jg
popa
cmpsb
push
lcall
data16
ljmp
and
jne
movsb
xor
dec
insl
lea
pusha
lahf
push
stos
mov
add
add
out
aam
movsb
push
push
cwtl
vphadddq
std
cs
das
add
and
mov
popf
test
dec
dec
or
mov
mov
rcl
mov
ficoml
xchg
pop
inc
in
sub
je
pop
dec
lods
xor
test
add
dec
test
aaa
cmp
out
and
push
ljmp
mov
inc
xchg
hlt
pop
inc
mov
mov
out
or
inc
lods
jo
loope
leave
cld
test
ret
cmp
adc
jbe
mov
pop
sti
inc
pusha
mov
movsl
or
mov
jg
jmp
mov
out
push
bound
lods
inc
test
xchg
xchg
addr16
mov
faddl
cmpsb
in
mov
enter
or
hlt
sub
lcall
insb
push
lods
pop
lods
sub
gs
je
or
ret
push
fimuls
out
mov
push
pusha
inc
mov
std
and
xor
scas
call
bound
je
sub
push
popf
mov
sub
mov
jg
fneni(8087
or
push
sbb
xchg
xchg
lods
lock
call
insb
or
inc
and
jecxz
ljmp
and
cmp
sub
push
sbb
cmp
jecxz
mov
sbb
stos
movsl
mov
sub
test
stc
mov
xor
nop
push
or
sub
outsl
sbb
aas
ret
mov
inc
push
js
or
dec
mov
test
dec
addr16
das
pushf
outsl
mov
push
cmpsb
dec
mov
mov
shrl
mov
add
fcompl
shlb
add
hlt
rcrl
pop
pop
fs
mov
mov
je
jne
in
in
rol
in
add
dec
lds
jnp
enter
mov
fbstp
jge
and
and
push
mov
subb
adc
push
mov
mov
adc
cmp
loope
int3
mov
lcall
fs
jge
aad
mov
xchg
jp
xchg
fwait
int3
jne
mov
ljmp
adc
sub
cmpsb
movsb
pop
cmp
or
insl
xchg
std
push
pop
rol
jno
xor
and
ror
mov
daa
popa
leave
sub
jb
pop
push
push
call
loopne
adc
dec
adc
mov
xchg
aas
imul
pushf
xor
push
nop
cmc
fdivs
sub
xlat
cmp
mov
int3
xchg
or
cmp
mov
hlt
cmc
aam
pop
jle
xchg
out
fsubl
sbb
movsb
push
mov
das
int
cmc
movsb
int
mov
or
lods
aam
fs
and
mov
lds
jmp
mov
icebp
push
imul
in
xchg
mov
jno
xchg
xor
pop
repnz
ds
enter
ret
movsl
mov
aas
ds
das
and
scas
loopne
fwait
das
int3
add
xor
push
pop
sub
dec
insl
add
mov
je
sbb
xor
das
push
pop
movsb
sub
test
cwtl
sub
addr16
inc
push
loopne
add
loope
ret
pop
mov
dec
add
add
dec
pusha
or
dec
das
push
push
add
jp
dec
rcll
sar
loope
cmpsb
subb
cs
adc
add
xlat
subl
inc
push
xchg
or
daa
xor
mov
mov
lcall
roll
dec
pop
adc
push
shl
push
and
and
mov
xor
scas
xor
jnp
inc
test
cmp
add
clc
repz
jbe
loopne
cwtl
jne
ret
add
repnz
daa
jmp
int
adc
sub
mov
in
loopne
and
ret
inc
mov
cmp
stos
gs
mul
inc
or
jbe
scas
jns
mov
cs
cmpsl
rcrl
fs
push
cmc
and
pop
adc
sbb
cmpsb
leave
pop
or
mov
sub
enter
lock
and
sbb
test
fsub
xchg
into
bound
mov
xor
outsl
mov
sbb
xchg
or
pop
push
iret
test
je
fsts
ret
out
cli
or
cmp
sti
out
sbb
inc
inc
test
ljmp
lds
push
push
add
test
lret
pop
lret
stos
jns
adc
sub
jmp
xor
scas
pushf
pop
hlt
lods
dec
vsqrtpd
fdivl
mov
cltd
xlat
sbb
lahf
sbb
sub
arpl
loopne
or
popa
lahf
mov
fdivp
fs
out
inc
aad
test
add
fbld
push
jl
cs
push
imul
outsl
addr16
decb
and
xor
adc
jmp
clc
xor
out
sub
pop
mov
and
xor
jmp
ljmp
mov
ja
std
xchg
pop
repz
lea
and
mov
sti
or
icebp
in
xchg
and
fwait
add
inc
inc
cmp
subl
sbb
dec
xchg
push
pop
pop
xchg
test
sti
sahf
add
jmp
std
mov
mov
popf
leave
and
jecxz
push
addr16
and
inc
arpl
mov
lret
jns
cmp
mov
mov
cld
xor
jle
inc
insl
pop
sub
jg
push
ljmp
cmp
mov
stc
adc
push
jae
fcoml
inc
xor
pop
mov
sbb
cmp
js
out
mov
ljmp
cld
faddl
in
xor
ret
or
insb
fldl
insl
push
push
fwait
jb
das
push
or
cmpsl
mov
aad
test
push
arpl
jmp
xor
add
cld
jp
or
add
jecxz
mov
inc
dec
push
mov
dec
fisubs
das
mov
xor
int
xchg
xchg
ficompl
sbb
pop
jb
adc
inc
pop
sbb
repnz
mov
push
lret
into
pop
pop
cltd
stc
inc
xor
mov
popf
jnp
mov
imul
dec
mov
ja
mov
loopne
shrl
loope
repnz
jne
mov
pop
hlt
sub
sarb
mov
xchg
add
xlat
mov
lods
inc
ja
xchg
sub
xchg
pop
xlat
mov
sti
cmp
sbb
adc
adc
aad
pop
test
push
xchg
dec
xor
sarl
push
push
les
mov
or
jl
addb
xor
and
xchg
arpl
loope
ja
inc
jo
push
jns
popa
cli
int
mov
push
nop
and
movsb
cmc
arpl
sub
mov
repnz
filds
xor
flds
mov
push
call
mov
adc
sbb
push
xor
mov
jp
ja
xchg
mov
enter
pusha
stc
fistl
fnsave
pop
dec
and
pop
bound
push
stc
cli
adc
mov
pop
mov
xchg
adc
cmp
andb
or
sahf
fucomip
out
push
lds
jp
push
sti
rol
adcb
adc
cmc
movsb
add
cmp
je
sahf
pop
std
xor
adc
enter
fnstsw
cmpb
lea
ret
movsb
fistpl
xor
mov
loopne
cmc
out
cmpsl
lret
sbb
ss
sbb
fildl
adc
mov
arpl
repnz
or
aas
das
xchg
cltd
and
ret
lds
add
in
in
xchg
push
or
adc
ret
mov
sbb
sub
xchg
xchg
add
xchg
xchg
mov
xor
lret
dec
repnz
fs
fiadds
xchg
std
mov
xchg
imul
xchg
cmp
xchg
inc
mov
jo,pt
mov
push
aad
ret
movsb
push
mov
dec
xlat
outsb
and
lds
mov
push
repnz
idivl
cli
ljmp
bound
pusha
dec
jno
push
lea
icebp
out
or
inc
adc
fsts
sbb
iret
fwait
dec
sub
loop
es
insb
lret
mov
orw
scas
lret
push
fisttps
adc
popa
movsl
xchg
cs
repnz
push
adc
addr16
push
imul
push
inc
push
jns
into
mov
out
add
inc
add
mov
hlt
adc
xchg
fisttps
mov
je
repnz
out
dec
pushf
adc
lret
outsl
jmp
jmp
jns
pop
decl
mov
out
cmpsb
mov
jg
add
adc
lret
fs
push
or
movsl
xchg
dec
sub
jb
sub
or
mov
in
sub
xchg
jnp
mov
lret
push
das
dec
push
push
clc
dec
or
jle
push
inc
push
push
out
dec
imul
out
push
mov
pop
xor
xchg
cmpsl
inc
lcall
xor
sub
xchg
sbb
jecxz
inc
pop
insl
fisttps
mov
jecxz
subb
push
stos
int
mov
sub
dec
ret
inc
addr16
ss
mov
cmp
rorl
in
pop
pop
pop
jae
data16
fimull
aam
idiv
sub
mov
fcos
dec
stos
enter
das
stos
xor
xor
mov
mov
jb
push
in
popl
jb
or
out
andl
nop
fnstcw
cmp
lea
ja
bound
fsubrs
ficoms
jge
push
inc
mov
jle
jecxz
std
sub
movsl
cmpsl
movsl
bound
lcall
addr16
jno
lods
pushf
xor
jmp
or
push
rcll
or
call
cwtl
sbb
xlat
sub
ljmp
inc
push
gs
nop
shrl
jmp
add
es
imul
out
pop
loopne
mov
or
rcrl
mov
xor
popl
lahf
repz
orb
add
out
movsl
mov
add
lcall
ss
inc
popf
cmp
cmp
orl
or
imul
popf
out
addl
adc
pop
rorb
fdivr
jg
loope
test
and
std
mov
pop
orl
sarb
movsb
scas
or
sub
arpl
fistpll
mov
mov
mov
arpl
not
into
ljmp
aas
inc
out
repz
sbb
popa
fistpll
adc
idivb
in
addr16
inc
andl
mulb
int3
xchg
lcall
and
sub
fdivrp
pop
xchg
arpl
data16
pop
ret
push
call
in
sub
fidivl
push
adc
jl
enter
adcl
sub
fidivs
jae
test
lahf
dec
mov
popa
rorl
pop
mov
pusha
pusha
and
xchg
mov
fsts
mov
test
xchg
cld
out
adc
fdivrl
fimuls
cmp
inc
push
ficomps
cmp
sbb
scas
stos
insb
jae
insl
cmp
in
dec
inc
xor
jae
dec
sub
adc
inc
int3
cmpsl
mov
mov
aas
and
std
adc
xchg
xchg
nop
sti
lock
add
dec
movsb
jl
ret
stos
mov
sub
rclb
repnz
adc
push
dec
xchg
and
and
addb
aas
inc
lds
mov
adc
push
pop
push
inc
pop
into
sbb
add
or
jns
xchg
lahf
jle
mov
lret
shll
cmc
insb
sti
xorb
pop
inc
aad
cmp
xor
sub
sub
or
ss
inc
pop
mov
cmp
cli
aad
out
aam
mov
or
jle
ret
mov
mov
mov
cli
outsl
dec
enter
pushf
inc
es
loope
rorl
adc
imul
xchg
in
push
dec
sbb
enter
jmp
lahf
dec
fldl
icebp
adc
pop
das
lods
and
scas
xlat
inc
push
or
daa
cmp
in
nop
dec
int3
inc
add
mov
and
cmp
sahf
xchg
ljmp
mov
out
push
sub
inc
jp,pt
sbb
inc
dec
insl
xorl
push
lahf
dec
popf
in
sub
cmp
pop
mov
cwtl
xchg
hlt
inc
js
rclb
inc
insb
subl
push
push
add
and
mov
gs
xchg
andb
or
push
sub
push
pop
cmp
jge
jecxz
mov
inc
int3
mov
or
test
test
shlb
mov
sahf
cmp
rol
stos
push
dec
inc
sti
ja
je
cltd
push
jnp
repz
icebp
mov
adc
mov
xchg
outsb
xchg
add
scas
hlt
push
out
into
test
std
cmp
mov
fimull
ds
cmpsb
rcrb
or
dec
imul
add
sahf
xchg
dec
out
mov
iret
sub
push
inc
jecxz
or
pop
pop
idiv
rorb
ror
and
ds
cs
push
push
inc
mov
pop
ds
addb
push
enter
push
cli
push
rcr
bnd
add
sub
sub
add
out
cmpsl
dec
mov
sub
imul
xchg
inc
mov
ja
mov
test
or
int
push
cltd
xchg
out
adc
sahf
inc
aaa
jnp
inc
fstpl
hlt
push
cmpsl
rorb
xchg
xchg
xchg
cmp
sbb
fs
repnz
and
inc
push
stos
lock
ljmp
fsubl
push
and
ljmp
cmp
cmp
dec
mov
in
fidivs
scas
shlb
in
cmp
jbe
es
pop
fs
cltd
outsl
mov
mov
xchg
xor
lret
mov
add
mov
jl
dec
mov
push
es
mov
add
and
pop
jecxz
rorl
dec
ljmp
xchg
jl
clc
xchg
cmp
out
mov
aaa
xchg
inc
cmp
mov
push
out
in
push
fidivs
lds
xor
xchg
inc
inc
sub
test
add
mov
mov
mov
int
adc
pop
mov
sbb
test
add
sbb
jecxz
rcrl
or
fbld
lcall
cli
inc
xchg
enter
stos
ss
dec
push
dec
mov
popf
repz
jg
add
xchg
pop
mov
jb
add
shll
xor
lret
fs
dec
dec
push
aas
imul
fmuls
xchg
pop
push
mov
leave
mov
inc
sub
jge
outsb
jg
xor
sub
aas
call
jecxz
xchg
js
jns
add
or
xchg
mov
test
addl
dec
arpl
mov
imul
pop
fildl
xchg
sub
dec
push
jge
jae
loope
enter
test
test
hlt
je
mov
daa
lods
add
pop
jg
xchg
sbb
mov
popa
fldl
outsb
hlt
mov
les
jno
out
xchg
add
es
arpl
jnp
xchg
mov
pop
sahf
adc
ss
nop
mov
mov
cmpsl
adc
pop
cmp
notl
cmpsb
push
arpl
sub
pop
iret
mov
sub
outsl
loop
xchg
mov
je
pop
jg,pn
jae
cs
cltd
inc
xor
jno
sti
scas
mov
cmpl
in
sahf
mov
loope
jle
pop
cmp
jne
in
sarl
les
mov
rol
push
jmp
or
dec
fdivrl
jge
or
aad
push
mov
sub
push
pop
arpl
cmp
inc
aam
sbb
shll
movsl
adc
imul
lock
sbb
nop
lret
cmp
jbe
xor
pushf
xlat
and
insb
das
mov
or
fwait
outsb
fiaddl
push
xchg
mov
ljmp
adc
filds
sar
push
popf
pushl
movsb
scas
xor
mov
fdivp
push
mov
loope
jb
mov
lret
icebp
imul
mov
jae
insb
daa
ret
push
sarb
jae
mov
ret
or
pop
leave
loopne
ds
mov
imul
aaa
pop
mov
fs
mov
dec
ljmp
or
jo
inc
stos
frstor
shlb
jnp
aas
cli
or
or
stos
int
pushf
add
mov
sub
repnz
popf
cli
popf
cmp
inc
push
stos
arpl
mov
add
add
divb
in
mov
test
cmpb
sub
xor
in
cmp
lods
rcrb
jle
test
ss
fs
das
pop
cmpsb
cmp
les
enter
cwtl
rorl
nop
mov
push
and
pushf
push
cmp
add
flds
pop
fcoms
push
sarl
js
insl
mov
insl
adc
rol
jae
cmp
lock
sbb
dec
subl
psubw
lahf
cmp
dec
add
shrb
test
push
mov
dec
adc
xchg
out
adc
xchg
scas
ss
push
iret
dec
lret
mov
jno
and
and
pop
mov
push
xchg
dec
fs
dec
jg
cwtl
fmull
loopne
push
addl
hlt
ds
icebp
cmp
jo
outsl
fldl
lcall
add
or
sub
cmp
add
or
sarb
lds
xchg
inc
cmp
cwtl
cmp
cld
cmp
je
and
clc
fsub
data16
xchg
jecxz
fwait
aad
lcall
jg
jl
inc
cli
scas
dec
stos
add
inc
push
lock
loope
sub
jo
int
loopne
and
stc
or
fs
jno
test
in
sub
das
addr16
cltd
mov
pop
addr16
mov
or
xchg
idivl
shrl
cli
push
jp
stc
mov
repnz
or
leave
pmaddwd
addb
call
pop
push
fstps
sub
xchg
insl
push
or
sbb
mov
testb
push
mov
push
scas
shrl
aam
test
fwait
or
lea
add
lea
out
mov
pop
fsubrs
arpl
inc
movb
inc
rcl
cmp
sbb
xor
pop
stos
ret
mov
into
movsl
repz
rorl
lret
sub
xor
dec
iret
inc
ljmp
jno
mov
cli
ljmp
in
mov
popa
mov
cld
shll
jbe
ret
or
leave
dec
iret
movsb
lds
pop
lods
or
dec
mov
push
sub
cmp
repnz
push
hlt
test
push
stos
insl
push
fst
lea
sbb
cld
jne
loopne
rorl
mov
pop
xchg
jns
xor
push
dec
pop
inc
mov
sub
and
out
ss
add
sub
int3
outsb
xchg
push
mov
inc
in
lock
aam
mov
fbld
push
sarb
fcoml
xchg
into
jge
nop
mov
das
shl
inc
out
fsubs
fcompl
rolb
lods
xor
or
adc
cmc
rcll
adc
mov
cmp
and
sbb
sbb
jecxz
popa
push
jp
das
gs
add
mov
add
sbb
pop
aas
sahf
bound
mov
int
push
imul
sti
mov
out
lea
inc
sbb
or
xchg
mov
xchg
xchg
mov
mov
incl
icebp
or
shl
sub
fldcw
or
push
sub
scas
cmp
iret
xchg
push
adc
adc
fidivl
push
mov
in
inc
dec
mov
fdiv
mov
mov
sub
fcmovnb
insb
in
jno
cs
mov
pop
sub
int3
push
daa
sbb
jp
mov
bound
stc
sbb
mov
xlat
pop
mov
add
add
lea
lret
jp
repz
xchg
dec
fldt
inc
jg
xchg
mov
sub
jecxz
das
sub
jns
cmp
int3
nop
out
loope
dec
cwtl
xchg
ret
cltd
add
rolb
add
jo
fdivrs
jb
sbb
jmp
js
pop
jecxz
outsb
xlat
ret
jg
loopne
push
lds
lods
icebp
adc
mov
pop
push
inc
dec
and
mov
cmpsl
sub
imul
je
jb
pop
addb
add
daa
adc
add
mov
jmp
lock
or
mov
lcall
inc
addl
xorl
movsb
fisttpll
idivb
mov
pop
inc
arpl
out
std
inc
mov
movsl
movsb
pop
dec
negb
ret
adc
pop
mov
mov
clc
mov
pop
mov
sbb
jmp
sub
jbe
jno
pop
xor
push
inc
lcall
add
cwtl
cli
bound
add
pop
rorb
or
test
push
mov
jnp
sub
jge
pop
cmp
sub
add
xchg
lock
cli
rol
sbbl
mov
loop
stos
push
mov
pop
clc
fisubrs
cmc
jne
stos
and
sub
scas
sbb
test
lret
cli
enter
cmpsb
adc
lcall
das
lret
sti
iret
std
fsubl
iret
test
jle
movsl
pushf
jns
in
push
adc
and
mov
fldl
mov
int3
jbe
call
daa
jg
inc
mov
pop
je
enter
fs
dec
and
mov
sub
imulb
push
jnp
loop
push
adc
lahf
arpl
mov
jns
push
add
inc
data16
mov
mov
mov
mov
mov
test
jmp
xor
sbb
xchg
movsl
aas
sbb
cmp
hlt
in
adc
dec
shrb
cmp
nop
neg
jle
in
stos
push
xor
scas
pop
insb
stc
inc
stos
lods
add
or
ret
jno
dec
inc
lds
movsb
push
mov
popf
push
cli
pmaxsw
repz
fdivp
xchg
out
mov
adc
subb
add
into
fcompl
gs
movsl
push
std
cmp
repnz
cmp
test
mov
inc
arpl
or
push
jae
decb
pop
sub
rcr
dec
outsl
cmp
mov
fs
fsin
rclb
test
xor
inc
dec
sbb
stos
and
stc
hlt
je
sub
jg
xchg
out
sub
push
sbb
or
adc
insl
les
push
sbb
cmc
mov
push
mov
imul
xchg
push
test
std
popf
lcall
jp
add
enter
jge
into
dec
lcallw
lahf
xchg
cmp
mov
push
sub
xlat
stos
pop
gs
adc
jns
mov
cmp
fstps
xchg
jle
ret
or
mov
inc
sub
jno
stc
out
rcrb
jnp
sbb
ja
lea
imul
cs
ljmp
mov
push
adc
fsubs
enter
add
mov
dec
jp
cmp
inc
or
add
movsl
sbb
enter
call
insb
jg
mov
adc
loop
call
fistl
cmp
inc
shr
mov
arpl
jo
popf
xor
cmp
add
fnstcw
cmpl
mov
iret
aaa
lahf
out
mov
cmp
sub
test
pop
xchg
or
mov
push
stos
idivl
nop
inc
loopne
lock
jg
mov
cltd
fwait
cmp
mov
adc
cltd
dec
aam
mov
pop
push
icebp
popf
aad
and
mov
sti
mov
pop
jg
dec
std
dec
cmpsb
filds
das
aaa
push
jae
xor
mov
fldl
aam
insb
xorl
and
mov
dec
mov
in
xor
dec
pop
popf
repz
mov
rolb
jle
xchg
add
mov
mov
into
and
scas
cmp
jp
add
push
ret
ret
mov
std
pushf
iret
xchg
sti
lds
das
add
mov
xchg
mov
mov
fwait
les
sub
sahf
pop
ja
das
add
xor
pop
enter
mov
scas
jg
ja
adc
pop
mov
mov
outsb
andb
movb
pop
or
pop
pop
mov
push
adc
insl
mov
and
lds
lahf
cmp
xor
jnp
ljmp
sbb
add
fimull
xchg
js
imul
mov
data16
cmp
jge
mov
xchg
test
sahf
cmp
cmp
jnp
sarb
popf
cmp
lods
inc
movsl
sub
xor
shl
xchg
daa
andb
or
mov
or
stos
rcll
mov
dec
xor
push
push
fs
fldcw
push
push
xor
cli
fdivr
inc
shll
pop
inc
cld
enter
xchg
jae
push
insb
fwait
call
adc
add
in
push
lahf
sub
mov
outsb
insb
mov
int3
push
rol
cli
pusha
xlat
scas
sahf
jb
nop
xlat
xchg
mov
ja
rorb
or
jno
std
clc
mov
mov
inc
int
mov
push
pop
sub
sbb
scas
cmp
pop
dec
in
mov
mov
aad
sbb
cmp
jle
add
lahf
lret
ja
inc
pushf
mov
test
arpl
dec
mov
sub
lcall
jge
adc
int
test
shlb
push
xor
cmpsb
inc
mov
in
adc
push
in
lahf
dec
xor
stc
lods
push
mov
add
int
fists
or
fwait
mov
xor
lea
inc
pop
mov
push
scas
fadd
roll
cmp
test
scas
push
cmp
orl
push
es
sbb
mov
gs
lock
stos
lods
and
or
mov
or
lea
dec
xchg
lcall
out
loop
mov
pop
cmova
stos
movsl
rcrb
shrl
mov
or
shl
pop
inc
dec
in
push
pop
or
mov
sub
add
push
sub
sub
cmc
scas
gs
dec
push
je
sub
call
dec
pop
pop
push
cli
pop
push
pop
out
lcall
push
jb
dec
jne
push
nop
jb
out
int3
push
mov
mov
cmp
sti
loope
pop
adc
fxch
sbb
mov
lcall
arpl
arpl
cltd
loopne
imul
jle
push
xchg
int3
pop
inc
jno,pn
scas
sub
pop
or
cmpsb
arpl
cli
mov
stos
icebp
test
enter
mov
sarb
adc
mov
es
dec
test
or
arpl
mov
jl
inc
mov
push
bound
aaa
pop
movsb
testl
xor
push
mov
lea
aaa
movsb
cmp
and
pop
inc
lcall
fiaddl
loope
aad
sbb
and
xor
outsb
shll
jbe
dec
sbb
push
and
paddq
fwait
and
add
dec
in
mov
mov
loope
aas
movsl
sub
jo
mov
fisubrl
jb
xchg
or
je
mov
cmp
xor
or
push
lea
xor
fmuls
pop
test
lock
sahf
xchg
lret
mov
push
mov
jne
push
int
pop
in
sub
inc
scas
ret
pop
mov
or
sar
repnz
jg
jae
out
or
cld
add
push
movsb
es
dec
xchg
je
aaa
cmc
sub
add
add
adc
dec
dec
adc
test
xor
bound
pop
adc
push
cmc
sti
jb
mov
inc
popf
test
add
test
sbb
ja
cmp
clc
jl
cmc
jb
add
aam
dec
jmp
adc
scas
sub
pusha
int
mov
cwtl
xchg
sub
daa
cmc
pop
js
pushf
je
nop
pusha
inc
or
add
daa
ljmp
and
lahf
mov
lret
test
ficoms
push
lret
mov
aad
add
pop
stc
subl
push
nop
xlat
fsubrl
xor
or
int
inc
testl
das
movsl
fdivs
orb
lds
inc
pop
xchg
imull
xchg
jl
stc
mov
adc
iret
fwait
sub
fstl
mov
outsb
lcall
cmp
add
or
xor
sbb
unpckhps
cmpsl
dec
inc
add
sbb
and
sbb
xor
dec
mov
add
mov
mov
int3
cmpsb
xchg
xchg
and
pushf
leave
js
testb
push
fdivs
jbe
jge
xor
cld
push
cmp
pop
xor
fdivs
fs
nop
sti
pop
pop
test
mov
orl
cmp
arpl
push
sub
mov
out
xchg
icebp
out
adc
xor
or
inc
fwait
pop
mov
fdivrp
jne
aas
xor
jo
push
pop
pop
xor
jnp
fs
inc
adc
cmpsl
jo
mov
inc
fcomps
in
sub
and
fbstp
push
and
push
mov
xor
sbb
inc
lock
xor
jge
fnstcw
nop
insb
mov
mov
lods
fwait
xchg
xchg
dec
mov
fisttpl
out
out
aaa
pop
jne
iret
adc
sbb
mov
enter
cmpsl
out
lahf
jbe
mov
xor
and
into
pop
hlt
ja
and
or
fildll
ret
pushf
and
clc
imul
and
lret
addr16
adc
pop
inc
gs
mov
xchg
or
repz
scas
lds
inc
jp
stos
jns
sahf
mov
stos
popa
mov
mov
fadds
js
jle
xor
ja
insl
int3
data16
test
stc
or
jns
cmpsl
loop
xchg
push
sub
cld
pop
sbb
movsl
aas
mov
arpl
std
lcall
jb
cmpsl
stos
mov
sbb
sbb
enter
loop
xor
cmp
push
mov
fcoml
mov
push
pop
in
adc
xchg
aas
rorb
loop
jb
in
fwait
push
into
or
std
sub
neg
jo
mov
add
mov
sub
mov
cmc
xchg
adc
mov
adc
cmp
cs
cs
push
std
jnp
mov
jae
mov
fsub
push
mov
sbb
es
or
and
push
jmp
rcl
pop
jecxz
jbe
es
cmpsl
xchg
mov
ret
rol
fldt
insb
mov
push
imul
int
aaa
je
adc
pop
lods
pop
pop
xor
aas
pop
ficoml
shlb
iret
aas
aas
fmuls
in
aas
in
imul
movsb
xchg
lods
push
dec
xor
inc
and
mov
mov
pop
or
mov
rorl
arpl
push
or
lock
movsb
dec
in
xor
inc
ljmp
test
pop
std
in
mov
lods
dec
mov
orb
fdivrp
cmp
dec
jge
adc
sbb
les
adc
sub
push
icebp
sbb
dec
mov
push
lods
adc
push
enter
jae
popa
jne
pop
aam
sub
mov
push
std
or
and
xorl
inc
or
dec
dec
pop
jp
andb
xchg
daa
popa
and
iret
mov
in
pop
cmpsb
xchg
jge
sbb
jecxz
outsb
adc
lods
out
pop
in
ljmp
fsubrs
dec
add
sar
push
repz
mov
mov
test
xchg
dec
adc
insb
sahf
sub
jmp
sub
insl
ret
addb
mov
mov
mov
and
push
fmull
and
adc
pop
inc
pop
ljmp
cmpb
shll
arpl
cmp
inc
daa
xchg
sbb
and
cltd
aas
lock
cltd
cli
xchg
xor
sbb
cld
push
cmpsl
ds
push
pop
pushf
stos
jae
sbb
and
mov
insl
cli
xchg
popf
nop
sbb
or
lods
and
imulb
dec
cmp
or
rclb
fistpll
inc
in
push
push
stos
loopne
popf
icebp
fimuls
enter
cmp
sub
pop
or
push
xor
loopne
scas
add
imull
cwtl
mov
in
inc
pop
or
push
cmp
and
pop
ror
sbbl
ljmp
mov
cmc
mov
aam
mov
pushf
adc
push
cli
pop
sbb
popf
clc
rcll
dec
scas
mov
outsl
fdivrl
rcrl
ds
sahf
decb
mov
pop
cmp
jb
fs
inc
sub
dec
xor
xchg
outsb
and
pop
arpl
movsb
cmp
push
xchg
xchg
popf
mov
cmp
and
movsl
add
mov
lea
cmp
out
push
cmp
push
iret
xlat
dec
xchg
mov
add
repz
lea
mov
sbb
mov
bound
filds
adc
sub
scas
push
sbb
and
ljmp
pop
push
add
add
pop
frstpm(287
push
xchg
mov
or
dec
jle
mov
pop
movsb
xchg
lds
dec
cmpsb
mov
lret
cmp
and
mov
push
xchg
into
test
xchg
jbe
xor
repz
sbb
test
gs
xchg
icebp
lret
movsl
leave
ljmp
cmp
and
dec
fistpl
push
je
int
pop
jno
hlt
ds
and
pusha
pop
jge
pop
ffreep
sub
jo
cmpsl
dec
fsubrp
inc
pop
or
jnp
movsl
sub
sub
xchg
rorb
jne
lods
add
dec
mov
cmp
call
pop
pushf
add
lods
frstor
add
gs
push
movsl
or
cmc
gs
in
out
dec
and
xlat
dec
adc
cmp
test
fwait
aam
jbe
enter
out
mov
hlt
mov
int3
out
pop
test
dec
ss
lods
mov
cmp
jno
and
ret
jle
js
bound
ljmp
jecxz
je
mov
es
cmp
rol
cmp
pushf
neg
fsubs
or
xlat
pushf
aam
push
xor
int3
dec
addr16
sbb
mov
mov
pop
stos
add
arpl
xor
sbb
xor
jbe
xor
push
push
mov
mov
rcll
dec
adc
in
stos
cmpl
add
xor
jmp
nop
or
push
loop
jl
out
sbb
pop
sbb
sbb
rclb
rorb
jno
add
or
inc
arpl
mov
inc
inc
pop
and
xor
sbb
adc
dec
ja
aad
and
or
mov
pop
in
mov
js
jbe
cmc
adc
add
hlt
xor
div
push
push
xor
out
dec
adcb
loopne
add
jecxz
jmp
mov
jecxz
les
loope
or
ljmp
cmpsl
test
sbb
test
cmp
jge
and
mov
loopne
push
sbb
mov
xchg
fidivs
lret
shll
jno
insb
or
push
lahf
lea
push
sub
dec
pop
mov
xchg
rcrl
in
dec
sub
mov
adc
loop
stc
xchg
mov
mov
sub
rolb
test
cmc
cmp
mov
add
sbb
sub
scas
xlat
cmp
xchg
imul
shl
xchg
and
mov
and
int3
push
fisttpll
sub
push
js
xor
sahf
dec
mov
or
push
jecxz
mov
enter
mov
cli
sub
rcl
lea
and
sub
cli
mov
pop
in
jle
xchg
adc
xor
repnz
jmp
int
lock
bound
sub
adc
in
push
enter
icebp
sbb
jmp
and
or
or
jno
mov
sub
dec
icebp
cmp
adc
repnz
push
xor
insl
cli
dec
xlat
fisubrs
adc
mov
add
ret
out
and
repz
nop
cmp
sti
jne
imul
cltd
sub
sub
into
lcall
popf
lahf
add
outsl
xor
outsb
adc
xor
das
sub
xchg
sbb
mov
mov
int3
insb
add
sbbl
arpl
aas
arpl
xchg
inc
mov
pop
dec
xchg
jbe
cmc
xchg
add
outsl
sub
push
es
jecxz
mov
mov
cmpsl
stc
push
mov
inc
push
inc
dec
mov
test
or
jne
jne
adc
inc
ss
out
lods
subl
push
iret
add
and
insb
out
negb
sbb
cli
cmc
add
adc
imul
push
push
push
fwait
and
mov
jge
mov
pop
popa
mov
sarl
inc
repz
jmp
mov
push
cwtl
push
jp
sub
add
orl
pop
inc
jmp
dec
test
sub
adc
in
fnstenv
call
cmp
mov
pop
add
adc
sbb
rcr
xor
xor
add
push
out
movsb
push
call
fcoms
pop
scas
in
sub
push
lcall
mov
fnstsw
movsl
sub
pop
insb
lods
shr
or
repnz
loope
stos
popf
inc
outsb
insb
pop
scas
xchg
adc
outsb
inc
bound
dec
movsl
push
dec
xchg
jae
mov
push
cwtl
lock
adc
sarb
mov
movsl
mov
stos
lret
repnz
inc
hlt
decl
mov
mov
leave
flds
push
or
push
arpl
inc
xchg
xchg
add
lock
cld
push
add
dec
add
xlat
dec
mulb
add
lea
cmpsl
sbb
js
add
xor
cmpb
fldt
mov
loop
mov
mov
inc
jns
pop
xchg
jl
adc
dec
test
fsubs
mov
arpl
mov
rcll
mov
jbe
jp
pop
pop
test
dec
or
sbb
lahf
pop
jmp
cmpsl
insb
loopne
flds
cmpsl
push
mov
dec
scas
fwait
cld
cs
test
mov
inc
sarl
push
xor
mov
mov
fistpll
jae
js
ds
sar
mov
push
outsl
xor
loope
jo
mov
xchg
mov
jle
je
testl
int
push
ret
pop
sahf
orl
fbld
or
scas
call
push
shl
mov
lcall
fcos
sub
adc
lahf
lods
movsl
das
jp
push
rol
adc
divl
jmp
mov
and
divl
mov
xor
cs
sub
or
repnz
cmpsl
sbb
jbe
mov
pusha
hlt
xor
das
or
sub
dec
sbb
adc
mov
icebp
mov
shl
push
pop
jl
jmp
or
adc
ret
and
rolb
fwait
cli
aaa
ss
mov
ss
push
in
arpl
pop
orl
cmp
in
cmpsb
std
outsl
aad
cmpsb
into
pop
insl
push
fs
lods
cmp
outsl
push
inc
ja
push
sbb
lea
pop
adc
adc
mov
inc
test
push
lret
xchg
and
mov
pop
pop
inc
aaa
xchg
lret
cli
das
test
sbb
jnp
push
mov
out
fdiv
mov
leave
in
pop
jmp
in
inc
stos
cmp
mov
dec
cli
sub
ja
fidivs
nop
and
cmp
insb
movsb
iret
mov
out
sbb
pop
es
xchg
or
fwait
sub
pop
int3
xchg
fldlg2
div
movsb
mov
cmp
jnp
ljmp
not
test
rorl
add
jmp
sti
push
sbb
pop
shrl
stc
sub
ret
push
push
and
cmp
cs
scas
scas
mov
hlt
cmp
mov
xchg
rcrl
lods
lret
sbb
xor
cli
ljmp
lods
xor
mov
lcall
into
xlat
or
ror
cmp
cltd
mov
xor
sub
f2xm1
movsl
hlt
push
sti
dec
arpl
in
out
push
shrl
or
sahf
push
aad
dec
frstor
pop
scas
jmp
mov
mov
scas
lea
inc
sbb
sbb
insb
jae
jno
out
dec
mov
ja
sub
sbb
lock
in
xchg
dec
adc
test
cmp
jmp
ja
sub
jne
stos
sbbl
hlt
popf
cli
imull
andb
lret
inc
adc
sbb
roll
mov
adc
or
rcrl
aad
cmp
sub
push
pop
sub
xchg
pop
lods
es
mov
push
arpl
in
shr
xchg
cmc
imul
dec
imul
outsb
mov
imul
lcall
xlat
jle
fisttpl
ret
stc
mov
das
cld
mov
scas
insb
data16
pop
dec
dec
pop
pop
sbb
shr
jecxz
add
roll
lods
cmpb
cmp
aad
xor
inc
jmp
je
add
inc
stc
pushf
sbb
or
leave
shlb
pop
xchg
into
pushf
xchg
shll
dec
add
mov
or
enter
cmpsb
test
mov
push
mov
loop
jmpw
jb
dec
je
mov
pop
jge
and
and
and
mov
jmp
cmp
in
das
out
cmp
cmp
outsl
mov
push
dec
fstps
mov
pusha
dec
mov
inc
test
test
outsl
or
mov
mov
adc
int3
xchg
inc
push
push
cmp
pusha
mov
pop
dec
push
movsl
sub
mov
push
nop
repz
stos
cmc
icebp
push
lods
mov
push
aam
mov
adc
mov
inc
lods
das
les
sbb
pop
filds
test
int3
lret
mov
cltd
add
loop
cs
mov
lret
inc
and
shr
jge
push
call
sti
cmp
pop
push
inc
push
icebp
pop
push
mov
out
jae
test
rcl
pop
sti
xchg
pop
xlat
negb
jo
cltd
mov
adc
inc
sahf
mov
rorb
push
shll
cld
push
into
out
pop
mov
adc
pop
pop
inc
loope
scas
cs
jge
lret
std
stc
add
aam
xchg
leave
mov
cs
mov
outsb
sbbl
xchg
jo
mov
movsb
adc
mov
mov
addr16
test
data16
int
sub
pop
mov
in
jb
lods
fidivl
jg
adc
lea
test
xchg
aam
jp
in
insl
jecxz
rorl
jp
xorb
andb
and
insl
enter
dec
dec
popf
ret
in
mov
add
roll
and
std
or
jno
iret
out
out
sti
test
pop
lods
xor
nop
cltd
sbb
xor
push
and
in
push
loope
call
mov
aam
in
mov
orl
mov
xchg
mov
hlt
mov
mov
outsb
push
sbb
cmp
mov
mov
aad
loope
stos
jmp
mov
ficompl
mov
fwait
pop
xchg
les
data16
inc
dec
xchg
mov
adc
loope
add
mov
mov
inc
setge
shrl
sahf
int
test
or
enter
xchg
lods
sbb
fcmovu
shll
or
cld
jp
pop
leave
iret
fstpl
xor
mov
or
jl
or
fsubrl
mov
inc
pop
cmp
xor
int3
out
fs
nop
jle
mov
es
ss
mov
adc
pop
mov
fisubs
mov
push
mov
dec
and
jge
scas
add
push
fucom
fsubs
cmc
adc
inc
daa
adc
push
cmp
je
mov
fldcw
lea
push
movsb
mov
adc
jmp
push
fisttpll
aad
lock
xchg
nop
push
mov
adc
sub
mov
arpl
adc
jne
sti
cld
lahf
dec
sbb
shlb
stc
cmpsb
pop
loop
out
icebp
mov
xor
in
outsl
push
mov
in
sub
popf
clc
movsb
cmp
rol
lods
mov
and
mov
inc
mov
dec
or
jne
gs
pushf
fcmovb
mov
push
or
enter
or
js
imul
mov
ss
dec
fmull
icebp
mov
shr
shlb
pop
clc
lods
arpl
mov
sub
cmpsb
aas
push
push
sbb
out
leave
lahf
xor
int
mov
jecxz
mov
sbb
mov
xorb
loope
lahf
ja
test
fiadds
ja
inc
out
sbb
and
lret
push
in
dec
push
repnz
push
push
mov
outsl
sarl
dec
sbb
into
imul
je
cmp
pusha
mov
dec
loop
mov
push
and
cmp
scas
xor
mov
hlt
pop
push
xchg
xchg
cmpsb
ljmp
push
mov
pushf
mov
mov
mov
lret
inc
add
sbb
shll
mov
and
std
sbb
imul
nop
aas
fisttpl
les
mov
imul
shrl
mulb
or
popa
jge
mov
fs
cwtl
jp
jae
stos
out
je
add
clc
pusha
add
mov
or
scas
jns
pop
aam
mov
mov
popa
addr16
frstor
negb
jnp
add
sbb
icebp
std
test
incl
stos
cmp
popf
in
mov
aad
and
pop
test
pop
test
cltd
scas
fs
mov
xor
xor
and
and
ja
cltd
add
repnz
int3
cmp
enter
negl
mov
mov
loop
jle
gs
mov
lds
in
xor
cmpsb
rorl
sahf
xor
jg
jg
mov
xor
sarb
insb
ja
or
int
mov
or
pop
pop
pushf
subl
sbb
pushl
movsl
test
loope
fwait
imul
push
ja
adc
dec
orb
jns
mov
jecxz
repnz
hlt
and
xchg
nop
movsl
xchg
add
jo
out
jb
dec
out
xchg
dec
jp
js,pt
addr16
daa
test
xchg
pop
in
std
jae
sbb
dec
arpl
stos
idiv
sbb
dec
dec
je
mov
cmp
dec
push
pop
dec
cli
imul
jp
fwait
push
jns
cmp
imull
xchg
stos
push
mov
jg
or
inc
hlt
xchg
or
nop
test
jnp
int3
xlat
xor
test
aam
pop
out
loop
cmpsb
jae
jmp
lods
aam
xchg
cmp
kandnw
sub
xchg
out
frstor
add
fmuls
gs
inc
cmp
adcl
mov
jno
jge
fdivs
adc
lock
scas
pop
jge
lock
lahf
jmp
mov
aam
fucomi
dec
out
es
mov
mov
sub
cmc
or
pop
mov
loopne
pop
int3
orl
xchg
fldl
pushf
stos
pop
ficoms
dec
and
addb
roll
sub
test
lods
pop
dec
lcall
mov
ljmp
std
push
andb
cmpsl
lds
cmpsl
dec
sbb
fs
push
and
outsb
sahf
dec
push
push
sbb
dec
fbld
insl
push
push
add
jb
shr
xchg
in
test
cmp
mov
adc
adc
add
pop
shl
loope
adc
push
mov
sub
jl
je
mov
and
cwtl
enter
mov
aas
and
dec
hlt
push
lds
negb
lret
jge
inc
stc
ds
loopne
test
fadd
out
sbb
or
pop
cmp
popf
fisttpll
xchg
aas
dec
xor
mov
add
mov
cmpsb
in
sbb
xor
pushf
icebp
pop
push
sbb
pop
call
arpl
repnz
loop
sbb
bound
sub
and
and
mov
push
mov
xchg
push
stos
push
inc
xchg
jl
fwait
pushf
adc
loop
int3
adc
cmp
test
adc
add
sbb
cmp
pop
in
out
push
shll
inc
in
or
fcoms
sbb
add
in
mov
sub
inc
aam
out
jns
loop
cmp
add
repnz
sub
pop
fsubs
lds
cmp
cmp
mov
fwait
mov
dec
pop
xlat
daa
outsb
jno
xchg
jae
pop
push
ret
aam
mov
jnp
adc
loope
rorl
xchg
js
xchg
cmc
movsb
adc
mov
enter
xor
jne
or
rcrl
sub
sbb
pusha
imul
loopne
mov
fbld
pop
ja
lds
cld
lahf
push
xor
in
mov
arpl
repz
in
pop
rcrl
add
dec
jl
mov
dec
push
push
aas
cmp
out
xor
cmp
jmp
adc
aam
sub
stos
jo
fldcw
fs
mov
sbb
fucomip
stc
popf
cli
cmp
flds
in
jnp
pop
fisttpll
arpl
in
xor
je
jno
pop
fisttpll
xchg
sahf
push
loope
rclb
mov
inc
js
pop
lret
sub
pushf
gs
arpl
cmp
xor
add
push
lods
mov
in
out
fs
jne
adc
pop
loopne
mov
xlat
push
sbb
push
xor
jmp
push
aad
jge
fildll
jmp
xor
stc
adc
xchg
add
cld
lock
inc
or
xchg
icebp
sbb
mov
lea
jg
push
adc
cli
test
push
int
cmp
loopne
or
sbb
mov
sub
sub
jo
insl
insb
sbb
inc
push
sbb
mov
imul
imul
mov
jbe
out
mov
movsb
clc
cmp
sub
add
mov
scas
xor
loopne
scas
jno
cmc
shrb
jae
imul
ss
loope
or
hlt
mov
jnp
inc
cltd
popa
pop
jne
rolb
dec
in
push
lahf
jb
test
mov
and
sbb
push
pop
jge
jmp
loop
mov
xor
iret
lods
push
vunpckhpd
and
pusha
pop
add
xor
mov
jns
cld
fwait
inc
in
call
push
shlb
cld
repnz
scas
mov
imul
xchg
dec
hlt
xchg
xchg
int3
loop
mov
gs
jmp
mov
nop
jecxz
cmp
xlat
push
mov
mov
repnz
pop
xor
xor
mov
jae
mov
out
xor
dec
sbb
push
sarl
push
popa
and
loop
inc
lock
xor
mov
jne
and
mov
pop
pop
pop
cmp
push
xchg
jge,pt
pop
outsl
xchg
aam
test
dec
hlt
pop
mov
jbe
not
mov
into
jae
pop
xor
popa
dec
adc
mov
pop
sbb
jb
daa
or
xchg
adc
out
popf
icebp
scas
or
mov
jo
jb
sbb
test
mov
xlat
stc
sbb
test
or
jae
ds
pop
repz
sbb
sbb
ret
addb
movsb
mov
sub
bound
xor
mov
imul
lahf
loop
jns
mulb
xor
xchg
adc
pop
dec
es
sub
sbb
inc
scas
in
addr16
mov
mov
mov
and
loope
mov
cmp
mov
loop
mov
jo,pt
xor
in
lahf
sbb
shlb
fwait
push
jb
in
cld
and
fcoml
ret
xor
rorl
cmp
jge
cmpsb
cmc
jle
mov
pop
push
pop
inc
dec
rorl
bnd
pop
pop
pop
lea
iret
iret
daa
outsl
ret
aam
test
sub
inc
sbb
and
jnp
outsb
fildll
lahf
pop
fimuls
add
pop
ud2
fmuls
sub
sbb
dec
test
mov
popa
in
aam
roll
inc
fisubrs
lcall
jl
xchg
mov
push
pop
pushf
add
fucom
enter
inc
imul
mov
mov
add
imul
ds
mov
dec
dec
popa
push
xchg
cwtl
cwtl
ljmp
jecxz
xchg
dec
lods
lea
inc
fdivrp
pop
notl
je
and
or
repnz
cmp
aas
imul
sbbb
rep
adc
mov
lret
ds
jp
sub
aaa
cs
sbb
adc
arpl
mov
out
add
inc
and
pop
ret
aaa
imul
pop
clc
push
pop
pop
adc
push
mov
pop
push
je
test
pop
mov
mov
mov
pop
test
pushf
movsl
popa
push
pop
sti
fstpt
cltd
mov
scas
pop
mov
cmp
dec
ret
mov
mov
push
mov
or
cli
sbbl
mov
push
dec
flds
repz
jge
cltd
nop
stc
dec
xchg
mov
test
mov
sub
out
mov
js
cmpsl
nop
sub
daa
pop
icebp
sbb
mov
and
jo
cmp
xchg
sti
push
dec
xor
add
cltd
icebp
fwait
and
dec
clc
push
arpl
inc
adc
lcall
and
xor
mov
xor
jbe
loope
scas
xchg
xor
negb
mov
cmp
and
xchg
into
rolb
mov
mov
sbb
jns
enter
pop
dec
in
std
xor
or
shlb
xor
lods
pop
pop
ljmp
decl
int
adc
push
mov
fxch
fsubs
push
dec
mov
gs
inc
aaa
dec
and
mov
cmp
fsubs
js
sub
fisubs
xchg
pop
mov
inc
je
repz
pop
loope
add
and
sti
mov
xchg
popf
push
jae
lods
mov
fwait
imul
sbb
jge
sbb
inc
seto
and
les
sub
stos
sarl
push
push
jge
pop
adc
jns
sub
sarb
or
add
jg
loope
or
sbb
sti
hlt
mov
popa
in
outsl
push
push
icebp
std
pop
mov
xchg
and
mov
insb
test
scas
mov
sub
push
fwait
loope
lods
bound
mov
je
add
pusha
dec
jno
inc
cwtl
notl
jns
ljmp
repz
pop
out
jmp
roll
outsl
inc
in
mov
mov
mov
push
dec
rclb
lds
ret
sub
out
sub
sub
xchg
aad
pop
push
negb
push
adcl
cmp
popf
pop
jp
outsl
and
loop
repnz
lods
mov
stc
pop
out
fxch
adc
pop
jno
daa
or
adc
lods
out
mov
or
mov
mov
repz
xlat
push
mov
lea
sbb
sarl
sahf
cmpb
jae
or
or
test
or
fnsave
add
test
inc
arpl
or
in
inc
jmp
push
push
dec
test
dec
add
insb
or
fsub
jb
mov
mov
movsb
jno
fidivrs
dec
xchg
sti
dec
ret
imul
or
in
and
dec
add
das
clc
test
in
inc
cld
pcmpgtd
and
mov
jg
lds
inc
inc
xor
ret
js
lea
ret
pop
mov
es
mov
xchg
and
clc
sahf
mov
jo
xor
and
fcoml
add
pop
fmuls
andl
pop
add
stos
fldcw
test
jne
je
xchg
dec
xor
push
sub
pop
scas
rorl
fstl
mov
dec
inc
in
test
sbb
mov
stos
dec
mov
in
insl
fadds
xchg
fildll
mov
lods
cmpsl
jo
stc
push
and
ret
push
mov
mov
mov
jo
js
push
fldcw
add
add
cld
cmp
sub
jno
cmp
mov
xchg
mov
adc
mov
xor
adc
dec
lock
and
pusha
xchg
test
ja
xchg
or
inc
adc
add
in
pop
cmc
mov
cmc
popa
and
or
or
jg
cs
int
outsb
xor
dec
lea
pop
cmpsb
add
mov
mov
inc
aas
pop
fdivs
jg
xor
insb
cmpb
mov
icebp
aam
scas
mov
push
cmc
push
mov
ja
in
dec
dec
xor
and
fistps
xchg
dec
xchg
loop
xchg
xchg
repz
into
dec
jmp
loopne
aam
js
jne
lret
hlt
jmp
repnz
push
pop
mov
mov
mov
lret
jbe
out
in
xchg
dec
or
sub
lret
sub
add
jge
adc
jge
lret
mov
ss
jbe
jno
jg
je
rolb
sub
out
cmp
lods
adc
or
inc
fisttpl
into
adc
push
and
inc
lret
or
jp
mov
or
or
add
mov
repnz
adc
das
add
jb
jns
je
insl
add
xchg
imul
movsl
shl
sub
mov
push
js
lods
cld
fisttps
jne
cmp
int
jg
fwait
xor
cmp
aad
mov
or
movsb
nop
jo
outsl
xchg
and
mov
dec
mov
dec
mov
mov
out
lods
mov
push
mov
mov
mov
sahf
imul
in
jo
mov
lcall
data16
dec
mov
jb
loop
mov
gs
repz
fs
sub
je
loopne
ljmp
out
repz
std
popa
mov
aas
ja
sarl
xor
xor
in
and
repz
mov
fdivs
fdivs
dec
jnp
mov
push
mov
rcrl
repnz
push
movsb
ret
into
ficompl
adc
push
fs
add
aam
ret
mov
mov
ror
in
data16
jmp
add
imul
scas
xor
fwait
xchg
cmp
andb
xor
int3
xchg
out
or
xchg
out
xchg
cld
jl
sub
loop
sbb
mov
pop
fmuls
inc
push
repnz
inc
popf
loope
jp
arpl
push
add
sub
lret
pop
or
sti
push
pop
push
cltd
xor
inc
mov
sub
cmp
or
mov
clc
les
shl
incb
jp
ljmp
aas
stc
in
and
inc
aam
and
sub
js
jns
sbb
xchg
imulb
or
push
aas
cs
adc
inc
repnz
sbb
add
add
cwtl
icebp
sbbb
in
add
xor
shl
jg
xor
aaa
mov
adc
or
xchg
and
nop
jnp
lods
mov
or
jp
mov
push
sbb
xchg
test
lahf
add
fs
movsb
or
scas
outsl
xchg
je
movsb
add
sbb
lods
cmpsb
inc
jne
sub
push
lret
outsb
xchg
aaa
push
rorb
xlat
xchg
lods
or
or
stos
jnp
iret
lods
jp
pop
pushf
jp
pusha
shl
inc
add
imul
xchg
aam
add
push
mov
add
ss
push
addr16
ds
aaa
js
test
and
out
mov
cli
jbe
push
icebp
movsb
jae
xor
mov
movsb
push
inc
dec
inc
pop
cli
in
jle
mov
int3
outsl
das
mov
dec
xchg
xchg
pusha
and
add
jns
mov
push
and
mov
or
dec
scas
outsl
mov
insb
into
cmp
arpl
movsl
xchg
or
jae
outsl
mov
pop
roll
stos
xor
hlt
adc
fwait
mov
adc
pop
sbbb
orb
stos
testb
out
scas
test
cmp
ds
scas
mov
adc
movsl
dec
dec
cmp
cmp
xor
sti
movsb
xchg
dec
push
sarl
test
loop
frstor
fldl
lods
jo
cmp
outsl
lds
inc
pop
ret
in
out
push
push
iret
iret
mov
mov
or
adc
jns
inc
lods
add
mov
inc
or
lds
push
or
mov
hlt
stos
jp
cwtl
stc
pop
or
mov
dec
sbb
leave
pusha
int
idivl
call
pop
loope
mov
out
scas
pop
mov
or
icebp
test
je
lmsw
push
clc
iret
rcrl
cld
xchg
lds
and
in
insl
mov
lds
gs
inc
jne
insl
inc
jmp
xor
and
js
dec
lods
pop
jae
mov
subl
sub
adcb
inc
cwtl
dec
mov
fcoms
cmp
ret
and
scas
or
and
sbb
aad
adc
inc
clc
fdivrl
into
shrl
xor
imull
std
movsl
iret
or
or
inc
jmp
mov
call
call
arpl
cs
pop
aad
out
shll
repz
sti
pusha
div
rclb
mov
dec
repnz
sarl
sbb
jnp
addr16
inc
xor
adc
or
lds
je
pop
popa
or
adcl
sub
push
stos
cmp
stos
mov
dec
lods
xchg
cs
fimuls
xchg
sbbb
imul
mov
xchg
cli
ljmp
sbb
jae
mov
sti
leave
stc
pop
mov
mov
lock
test
inc
rcrl
pop
xor
sub
fstps
adc
addl
mov
jo
xor
sub
push
out
cmc
cmp
push
sub
mov
cs
hlt
ss
or
das
loop
jne
or
or
adc
stos
mov
mov
imul
imul
mov
fiaddl
leave
cmp
pop
sub
hlt
nop
lea
lods
mov
cmp
cmp
inc
sbb
xor
add
add
inc
lea
out
adc
xchg
in
adc
jg
fstpl
pop
lcall
cmp
sub
fisubl
mov
cmpsb
inc
lods
outsb
test
aas
clc
fsubrl
rcll
xor
adc
mov
in
xchg
sub
arpl
cmp
in
xchg
xchg
sub
fisubl
jne
push
sbb
cmpsb
fstps
dec
jo
ljmp
mov
rcrb
pop
sbb
dec
adc
lret
mov
mov
mov
or
xchg
lcall
ret
test
movsb
push
adc
cwtl
push
push
pop
imul
mov
sbb
jbe
mov
stos
inc
sub
cmp
mov
mov
pushl
pop
inc
into
dec
mov
jg
cmp
ret
bound
pop
subb
push
xor
or
fs
scas
jl
inc
cld
xchg
sti
mov
sti
lcall
jg
fidivrs
xor
dec
xchg
fisttpl
je
xchg
pop
jns
hlt
xor
add
shrb
imul
into
mov
fnsave
cmp
jb
jp
jg
mov
ror
xchg
sub
inc
sub
pop
out
sub
imul
leave
or
mov
xlat
pop
add
incb
pop
jnp
imul
in
mov
xor
repz
insb
out
insb
adc
push
es
mov
ja
lret
imul
sbbb
jns
pop
mov
cmp
cmpsl
fsubs
cmpsl
test
adc
popa
scas
inc
out
ljmp
idivb
fldl
out
out
xor
jns
bound
lock
lds
scas
sahf
and
pop
mov
mov
or
mov
in
into
fisubrl
loop
mov
adc
add
or
stos
pop
popa
pop
push
out
pushf
sbb
add
popa
flds
xchg
mulb
inc
pop
out
xlat
repz
shll
sub
pop
pop
and
dec
sbb
rcrb
fisttpll
xchg
loop
sbb
std
cwtl
mov
mov
repnz
hlt
inc
xchg
enter
xchg
ret
xor
jae
aaa
dec
mov
int
mov
xchg
sub
pushl
test
lahf
jbe
roll
fisttpll
xor
filds
loope
fsubrl
daa
xchg
push
adc
loop
push
sub
jge
sbb
out
xchg
lcall
test
daa
push
in
mov
fnstsw
lcall
out
in
or
aam
inc
int3
jge
int3
pop
stos
pop
repz
xlat
in
outsl
pop
es
pop
jp
jmp
enter
mov
aaa
and
push
pop
enter
insb
outsl
jge
xchg
lret
pop
mov
sarl
pushf
ret
lcall
int3
roll
dec
xor
push
push
inc
rcrb
cmc
add
cmpsb
daa
lods
and
sbb
adc
fsubl
lahf
push
inc
pop
pop
inc
sbb
cwtl
loope
lea
cmp
xchg
jle
push
cmp
js
adc
out
push
nop
mov
cld
int3
stc
xchg
ficoms
andb
lods
inc
sub
loopne
test
subl
inc
jecxz
cli
mov
push
xor
inc
xor
shlb
aad
std
popa
insl
sub
push
or
jge
push
xor
adc
mul
test
pop
lds
out
data16
and
mov
notl
or
inc
sub
add
push
cld
in
mov
fmuls
aad
scas
mov
pushf
sbb
push
dec
sbb
dec
ret
loope
call
jmp
daa
mov
pop
iret
mov
test
cmp
mov
arpl
xchg
adc
in
sub
pop
mov
sub
js
dec
fs
sub
mov
and
ljmp
lods
mov
call
mov
mov
or
inc
sbb
dec
pop
push
fwait
in
test
inc
testb
jl
test
sub
inc
es
addr16
hlt
push
std
test
jmp
xor
scas
push
xchg
mov
ret
dec
repz
push
faddl
pop
push
adc
jo,pt
movsl
movsl
jo
mov
pop
dec
iret
test
and
nop
cli
sahf
jae
push
push
imull
mov
xor
cmc
and
add
sbb
cltd
mov
xor
outsl
mov
pop
out
push
out
and
sbb
sahf
adc
dec
mov
mov
xchg
jl
and
arpl
sub
and
movsb
jbe
lods
outsb
mov
mov
xchg
adc
jmp
icebp
into
adc
paddsb
and
add
and
sarb
xlat
inc
push
cmp
int
cmp
xchg
orb
mov
mov
jbe
inc
lahf
adc
mov
lea
lahf
pop
imulb
and
rcr
jmp
push
jg
loop
dec
pop
inc
pop
sub
mov
ret
sub
movsl
mov
jmp
mov
gs
arpl
sbb
arpl
rcll
push
in
sbb
iret
js
les
pop
imul
cmp
mov
or
sbb
cmp
jns
cld
out
jne
mov
jno
hlt
jle
add
fcoml
fadds
addr16
inc
xor
in
popa
jl
clc
cwtl
sbb
out
fbstp
or
clc
cmp
push
cwtl
mov
imul
xor
cmpsb
lahf
dec
or
sbb
fstl
xor
pop
pop
xchg
xchg
aaa
ss
decb
test
or
xor
icebp
pop
dec
fcmovnu
fnsave
mov
xchg
push
pop
int3
mov
pop
inc
addl
in
pusha
insb
aam
shlb
dec
push
or
mov
pop
xor
sahf
mov
sbb
lret
xlat
jns
les
xor
out
fwait
ja
std
fldl
cmp
lahf
or
sahf
dec
mov
ret
in
pusha
fs
pop
popf
fcmovb
xor
dec
mov
cmp
shl
push
xchg
pop
push
mov
mov
xor
jg
mov
dec
shlb
sub
sbb
xor
leave
cmp
in
cwtl
not
out
or
pushf
jnp
mov
mov
out
jmp
push
mov
iret
loop
xor
mov
mov
xor
pushf
icebp
jne
sub
mov
js
lret
push
daa
mov
add
jle
dec
gs
jmp
or
js
addr16
lcall
xor
divb
pop
add
fnsave
arpl
inc
jg
pop
jb
stos
or
test
nop
in
inc
and
push
aas
out
lea
shlb
daa
push
loopne
std
pop
dec
pop
cld
adc
sbb
out
or
fcomp
lea
push
rcrl
push
fnstenv
xor
add
jl
add
jnp
mov
fcoml
sahf
shufps
mov
jns
stc
dec
pop
mov
out
movsl
aas
ja
push
push
xchg
insl
pop
imul
movmskps
mov
add
mov
push
stc
pop
and
jne
inc
pushl
inc
and
mov
cmp
xor
xchg
sbb
adc
xchg
push
nop
lahf
scas
es
andl
dec
mov
outsb
ljmp
lahf
and
or
add
lds
adc
lods
mov
pop
ret
adc
and
push
cli
dec
dec
mov
dec
bound
lea
adc
inc
and
and
insb
cmc
pop
xor
into
fxch
dec
sbb
movsb
push
jne
imul
sbb
outsb
dec
aaa
add
mov
pop
addl
repnz
rep
rorl
jno
lods
sub
and
loopne
stos
adc
cmpsb
dec
sbb
or
out
adc
xchg
pop
ret
ret
mov
aad
inc
and
and
lahf
dec
fdivr
mov
push
decl
jmp
xor
push
mov
daa
xor
pop
push
mov
cli
mov
jp
loope
inc
psubd
loop
mov
xchg
aas
bound
pop
or
les
nop
push
mov
mov
pop
sarb
xlat
enter
leave
rcll
push
push
icebp
mov
xchg
pop
pop
cwtl
cmp
mov
popa
pop
lret
and
ror
jge
dec
inc
jecxz,pn
cmc
test
std
xchg
leave
jg
cmp
int3
xchg
adc
xlat
dec
jl
into
jmp
cwtl
stc
scas
popa
push
add
push
call
jo
or
xchg
mov
inc
xchg
push
cmp
mov
jmp
xchg
sbb
leave
pop
outsl
enter
sbb
inc
popf
sub
xchg
stos
sarb
mov
insl
and
cwtl
sarb
fistps
jmp
inc
jne
loope
or
int
aam
scas
sub
pop
or
fcomps
xchg
pop
sub
scas
ret
pop
xchg
pop
xchg
jle
push
in
sbb
sub
jl
faddl
pop
xchg
fadds
mov
call
in
mov
jcxz
push
xchg
mov
sbb
cmp
aas
enter
adc
pop
push
in
movsb
fnstsw
jno
pop
scas
out
mov
mov
inc
inc
jecxz
mov
jb
jbe
sbb
int3
je
and
das
or
adc
test
dec
add
xchg
lret
push
pop
inc
mov
popa
hlt
nop
loopne
push
or
dec
fcomps
fs
lock
push
ds
fs
aad
push
push
sbb
scas
dec
faddp
shlb
popf
jns
fldenv
pop
incl
push
jb
sbb
jg
mov
or
jp
shrb
int3
pushf
cmp
inc
movhps
push
mov
mov
mov
mov
push
icebp
ds
inc
sbb
lret
std
notb
test
and
mov
fdivl
popa
addb
jmp
je
mov
push
cmp
fsubrl
aas
mov
sub
cmp
cmp
ljmp
mov
sbb
jb
mov
sub
fidivl
add
mov
add
sbb
jp
mov
push
and
xchg
mov
push
inc
gs
addr16
shrl
cwtl
jns,pt
pop
shll
mov
das
sbb
xchg
or
pop
lea
xor
cmp
inc
loop
xor
cmp
xchg
fdiv
lods
jge
adc
pop
cmp
inc
lods
in
out
jo
nop
add
lds
insl
les
iret
mov
push
cwtl
adc
mov
popa
aaa
or
xchg
pusha
add
aam
push
shr
adc
aam
in
mov
mov
dec
sub
outsl
int3
shl
daa
insl
or
sbb
dec
std
lea
push
data16
push
cwtl
in
mov
sbb
loopne
or
ja
movsb
jl
icebp
sub
stc
cltd
dec
add
test
clc
mov
pop
pop
call
cmpsl
jmp
push
mov
sub
pop
pop
pop
pop
fdivl
jmp
in
dec
in
jno
jecxz
gs
mov
movsl
pop
fildll
xor
shlb
insl
mov
imul
popa
cmc
loope
aam
dec
hlt
stos
fisttpl
adcb
jns
shll
shl
mov
or
pop
in
sbb
ss
mov
jecxz
pop
cmp
xchg
lea
inc
shrb
scas
lcall
adc
pop
into
add
sub
sub
ja
dec
pop
sbb
cmp
sahf
stos
xchg
xor
iret
sti
ret
das
xor
and
bound
sub
sub
sarb
lods
scas
cli
jbe
dec
in
sbb
int3
xlat
lret
pop
mov
inc
mov
fisttps
xor
and
loopne
ret
push
xchg
xchg
imul
pop
jl
pop
sbb
xchg
inc
pop
jecxz
imul
inc
xor
inc
mov
mov
add
out
rorb
mov
jg
dec
test
push
mov
jne
icebp
inc
jne
test
or
outsl
stos
xor
add
cmp
inc
jnp
mov
out
mov
shrl
mov
aad
pop
pop
or
mov
jo
cmp
mov
push
mov
scas
and
add
cmp
sub
inc
fistps
xchg
xor
scas
push
stc
pop
sbb
adc
mov
lea
ds
add
pop
mov
imul
pop
shrl
lret
and
shlb
fnsave
shrb
xchg
lea
push
cwtl
pop
int3
jecxz
shr
into
mov
movsl
xchg
dec
cltd
outsb
inc
jae
sub
cld
loop
mov
out
xor
mov
inc
pop
cmp
cmpsb
push
jno
cs
sub
mov
cwtl
xchg
adc
out
pop
jb
ja
and
jno
outsl
mov
mov
enter
insb
testl
push
jge
ljmp
lret
test
mov
lds
cwtl
xchg
movsb
adc
dec
or
push
dec
int3
test
pop
data16
sub
movsb
jno
xchg
mov
lock
insl
out
jo
cmp
test
shlb
in
mov
in
ljmp
imul
jns
aaa
inc
mov
pusha
js
mov
subb
cmp
jecxz
adcw
cmp
pop
fcoms
imul
pop
and
in
xchg
das
and
popf
pop
mov
test
push
stos
loop
add
out
rorb
mov
daa
or
test
push
fsubrs
addl
mov
push
sahf
repnz
loope
xor
cmpsb
scas
or
jnp
bts
mov
dec
dec
sub
xchg
shll
lock
adc
lea
pop
pop
push
inc
fimuls
jae
pop
insb
out
cmpsl
bnd
xor
mov
inc
fwait
and
push
adc
arpl
sub
or
pop
and
or
adc
adc
add
sarb
push
dec
inc
repnz
sub
sbb
mov
out
and
lret
push
jmp
repz
mov
mov
scas
cmp
pushf
lea
test
mov
adc
jle
inc
dec
add
fxtract
insb
mov
test
cmp
sbb
jle
jg
clc
dec
cmp
fdivl
daa
movsl
push
es
push
js
push
insb
mov
fst
sti
je
pop
mov
mov
jl
icebp
daa
sub
dec
xchg
repnz
aaa
mov
jnp
addr16
mov
sarb
and
fmull
mov
sti
lods
clc
vcomisd
out
push
jle
dec
inc
sbb
pop
enter
xor
push
and
cs
out
leave
lods
cltd
in
fidivs
es
xchg
pusha
mov
repnz
xchg
xor
movsb
jecxz
sub
in
push
out
and
dec
fsubrl
shr
adcb
rcrb
sub
lret
jp
ljmp
out
mov
test
in
outsb
insb
xchg
and
fnstenv
jg
push
dec
xchg
insb
in
push
xor
mov
jae
pop
jb
icebp
les
shll
jne
add
push
xor
insb
inc
push
add
mov
mov
test
cmp
rdpmc
jle
sbb
xchg
mov
mov
fstpl
xor
scas
inc
mov
pusha
mov
lods
and
iret
cmpsb
cmp
sar
popa
roll
sub
enter
cmpl
out
dec
jno
or
stos
out
cmp
aas
sbb
pop
decl
add
and
loopne
sub
jno
lcall
vmovaps
jp
adc
add
mov
sbb
test
adc
cld
sbb
je
sbb
ja
and
jo
sub
mov
es
mov
dec
in
pop
adc
lock
shlb
insb
or
shl
loop
test
xor
sahf
inc
in
lret
aas
sbb
scas
dec
out
cmp
sub
dec
shlb
repnz
addr16
loop
popa
inc
inc
fdiv
and
ja
xlat
arpl
push
add
popa
lods
sti
lods
adc
pop
movsb
mov
and
xor
mov
sbb
xor
pop
push
rcll
xchg
outsb
cs
test
mov
jno
movsl
sub
dec
scas
jnp
inc
or
call
inc
out
and
in
mov
stc
xor
hlt
sbb
popf
push
or
mov
cmp
cmpsb
loope
sbb
adc
cmpsl
clc
sbb
inc
shrb
dec
mov
fisubl
lcall
adc
jg
les
movsl
cmpsb
cwtl
mov
sub
dec
or
mov
ss
mov
push
mov
sbb
rcll
repnz
jnp
arpl
out
pop
lret
and
lock
sbb
pop
xor
mov
adc
lahf
xor
lcall
jecxz
inc
inc
adcl
outsl
dec
cmpsb
imul
sti
mov
inc
mov
pop
xchg
fadd
pminsw
shrb
loop
fldenv
jecxz
sub
jno
jo
add
rol
push
mov
xor
or
cmp
and
xchg
adc
js
dec
inc
dec
and
mov
sbb
mov
int
push
add
hlt
jb
push
gs
test
arpl
cmp
bound
je
mov
shrb
pop
jl
out
adc
out
mov
ljmp
in
ficoms
mov
stos
lret
sbb
movsl
cmp
inc
xchg
pusha
je
adc
xchg
sub
push
lods
jg
dec
sub
insl
enter
scas
sbb
push
js
xchg
out
mov
rcll
or
rcl
rolb
add
jae
and
jnp
dec
pop
inc
repz
dec
push
xchg
sbb
push
shlb
pop
or
pop
movsb
xor
clc
lods
sbb
aam
leave
jnp
xchg
and
out
mov
mov
iret
adc
sub
pop
ret
jmp
mov
jno
imul
fcompl
add
mov
or
inc
xchg
pop
outsl
mov
xchg
xchg
mov
sahf
lahf
inc
mov
sub
ss
cmp
int
dec
add
pop
mov
adc
cwtl
enter
xor
mov
cli
xor
add
imul
lcall
fidivrl
int3
sbb
cmp
push
inc
arpl
test
sub
lock
loope
and
adc
insb
orb
pop
cwtl
gs
push
jns
clc
mov
xlat
xchg
adc
out
lahf
std
pop
adc
xor
and
adc
lea
push
sub
inc
insl
das
clc
loopne
lcall
in
pop
test
mov
pop
xchg
lahf
clc
pusha
push
sbb
stos
movsb
stos
push
mov
ljmp
popf
dec
movsl
sti
movsl
je
sub
xor
das
jns
pop
cltd
pop
imul
push
jno
mov
leave
repz
leave
xor
leave
les
push
stos
sbb
in
push
dec
mov
sbb
pop
jno
nop
aas
xlat
mov
pop
popf
lcall
loop
jns
and
mov
lahf
mov
sub
ljmp
adc
popf
mov
push
outsb
and
xor
cmp
insb
shll
lods
dec
mov
jge
adc
cmpsb
xchg
xchg
pop
mov
loop
test
mov
imul
lods
enter
pop
inc
pop
sbb
popf
push
or
lods
sar
lods
jne
xchg
int3
int
fnstsw
cmp
lahf
push
xchg
aaa
nop
negb
clc
mov
add
pusha
loop
into
in
jo
push
repz
lods
or
out
ss
jbe
xor
imul
cmp
insl
mov
fs
int3
and
mov
loope
dec
ljmp
in
xchg
or
sub
bound
sbbl
ja
jb
sbb
mov
mov
js
fucomi
adcb
xor
sub
sti
pushf
push
jmp
or
mov
pop
loop
cltd
sbb
dec
add
jp
stos
pusha
mov
cmpb
rcrl
adc
push
mov
dec
lods
arpl
sahf
or
adc
cmc
xchg
sahf
cmp
ret
jp
push
lds
test
sbb
rcrb
mov
cmp
sub
pushf
int3
pop
es
scas
insl
clc
jne
cmp
mov
fildl
jecxz
mov
data16
add
or
cwtl
out
push
out
pop
or
sbb
or
cmp
fiadds
pop
lods
loop
mov
das
pop
pop
je
ss
ljmp
xor
mov
mov
out
mov
lea
mov
bound
out
testl
jecxz
xor
mov
lock
cmp
sbb
pop
jmp
pop
cmpsl
movsl
ss
arpl
lock
test
pusha
test
fstps
cli
jae
jnp
push
push
daa
pusha
ret
cli
pushf
aaa
lock
jg
in
lret
data16
clc
pop
ja
cwtl
icebp
fwait
jns
aas
hlt
iret
add
outsl
add
rorb
fs
cmp
sbb
imul
hlt
mov
jns
mov
sub
fidivrs
mov
dec
ljmp
and
cli
out
sub
pop
inc
arpl
mov
inc
mov
in
popf
and
push
push
or
add
jl
popf
ja
jns
in
mov
xor
ja
in
nop
loopne
test
jecxz
pop
sub
loopne
imul
mov
or
clc
jp
sti
jbe
pushf
loopne
repz
repz
inc
loope
aaa
lret
mov
je
xchg
pop
sub
aam
or
into
loopne
mov
sbb
mov
dec
dec
mov
addr16
fistpll
jb
sub
in
mov
into
inc
or
xchg
fcompp
inc
addr16
dec
xor
cmpsb
jbe
and
add
in
je
or
sbb
dec
jge
jp
mov
lret
pop
inc
jle
sub
repz
inc
cld
ss
mov
mov
sub
adc
enter
bound
add
outsl
cmpsl
jb
sub
addl
xor
sbb
inc
popf
sub
data16
jp
push
cmpsb
adcl
inc
mov
flds
mov
sub
cltd
xchg
push
add
and
popa
jno
mov
mov
test
addr16
xchg
sub
dec
call
jae
test
and
dec
mov
mov
cmp
mov
jno
dec
ss
dec
xchg
in
and
xchg
push
cmp
gs
jge
insl
mov
add
adc
jb
add
push
nop
movsl
mov
add
mov
xchg
lock
lods
sti
adc
xor
repnz
ds
in
lahf
or
push
lods
lahf
fisubs
fstps
or
insl
fisttpl
xchg
out
repnz
pop
adc
data16
call
call
stos
mov
rorb
mov
filds
add
lock
add
mov
pop
aad
adc
mov
outsb
jl
inc
adc
in
jb
fsubrl
std
fs
inc
xchg
out
sar
push
xor
or
push
sbb
jbe
movsb
mov
xchg
add
inc
andb
mov
into
mov
push
xchg
adc
dec
jns
jae,pt
movsl
jecxz
stc
mov
xor
push
mov
mov
add
popa
mov
inc
xor
fcoml
dec
les
inc
xor
push
or
jle
into
repz
iret
or
push
cmpsl
loop
out
or
gs
mov
xchg
pop
in
test
orb
lret
xor
xor
int
sarb
pop
sahf
das
daa
out
add
nop
mov
lret
mov
jmp
inc
scas
and
sub
pop
ss
and
cli
sbb
jp
fs
and
daa
xorb
in
add
pop
sbb
sahf
in
push
ficompl
cmc
inc
mov
loope
ficomps
addr16
pop
sbb
xchg
or
ja
mov
sbb
jae
out
and
imulb
outsl
adc
das
mov
stc
cmp
daa
pop
and
mov
pusha
or
cs
dec
loopne
jnp
jmp
jmp
gs
xor
in
mov
pop
cmc
sbb
out
fisubrs
cmp
enter
popf
repnz
cmp
inc
lds
loope
or
jmp
inc
mov
iret
test
mov
xlat
rcrb
lea
fs
mov
inc
dec
jo
stc
mov
cmp
jmp
fs
dec
push
testl
jnp
test
xchg
arpl
out
and
outsb
fs
or
adc
xor
add
in
popa
icebp
fimull
lcall
push
xor
jno
xor
lock
jo
jmp
repz
cmp
lods
mov
daa
js
cmp
cld
aaa
inc
rclb
jbe
inc
xor
popf
pop
cmp
adc
std
sub
push
cwtl
test
xor
cmp
frstor
inc
ret
nop
mov
sbb
stos
fmulp
lahf
enter
sbb
jl
lahf
jo
sbb
daa
sbb
rol
add
scas
mov
dec
ds
sbb
roll
test
pushl
adc
movups
aad
orb
fcmove
loopne
rcrl
es
xor
setb
or
add
lcall
ljmp
jnp
xor
nop
decl
dec
hlt
faddl
and
fwait
inc
add
mov
push
or
jb
stc
sbb
lahf
scas
sub
mov
sahf
lcall
sbb
bound
out
cmp
arpl
adc
outsb
hlt
xchg
adc
test
cwtl
nop
or
push
out
cmp
cmp
xor
adc
lock
mov
push
inc
testb
cli
dec
pop
loopne
pop
cmp
stos
and
outsl
ret
lods
mov
ret
cmpb
out
leave
mov
out
sub
xor
xor
pop
cld
cmp
xchg
xchg
push
popa
fs
mov
out
xchg
and
nop
cwtl
jb
lcall
imul
push
and
test
push
lret
xor
into
inc
push
xchg
cltd
stos
and
cltd
sbb
lods
dec
cmpsb
lea
push
jge
mov
pop
dec
mov
test
xor
mov
sti
mov
test
jns
mov
adc
mov
pusha
je
lock
fsubs
mov
jg
jns
fadds
mov
sub
into
sub
test
fcompl
dec
fcmovnu
adc
dec
fwait
lds
xchg
push
adc
addr16
ss
pusha
sbb
les
aam
add
ret
pop
push
test
test
not
push
pop
adc
int3
push
adc
cwtl
fnsave
out
mov
dec
adc
add
enter
dec
mov
lods
lret
mov
sbb
cs
pop
xor
mov
lret
push
call
sbb
in
mov
lods
xor
mov
imul
jle
daa
mov
stc
adc
jnp
or
mov
sub
mov
dec
mov
shrb
pop
mov
dec
cltd
mov
sbb
sbb
mov
addl
xchg
aam
mov
cs
test
pop
jns
outsb
lret
fs
jge
mov
xlat
ret
inc
cmc
movsl
mov
mov
std
test
cmp
inc
jp
in
notl
jmp
mov
mov
jo
stos
cld
lea
aaa
insb
mov
adc
lret
adc
pop
movsl
sub
cmp
loope
xchg
in
pushf
lock
cmc
sbb
mov
push
loopne
or
pushf
nop
aas
aam
mov
mul
daa
cli
daa
adc
cwtl
mov
shll
add
add
fistl
adc
inc
inc
les
dec
test
cmpsl
scas
pop
push
mov
cltd
in
jle
sbb
shl
mov
xor
icebp
xor
loope
imul
jne
push
in
cs
jmp
jp
push
jg
pushf
sbb
cmp
outsl
sbb
testb
gs
sub
pop
pop
or
pusha
mov
inc
in
xor
push
pop
loope
jl
ja
fnstsw
rep
fisttpl
cs
xchg
out
paddusw
fsts
pop
jg
popl
pusha
movsl
decw
lods
xchg
fiadds
fstps
sbb
mov
movsl
push
pop
fwait
in
int3
or
xchg
mov
or
daa
pop
frstor
dec
mov
bound
mov
adc
pushf
sub
imul
imul
mov
sbbb
jg
and
add
into
push
sahf
stos
jb
dec
mov
in
cmp
idivb
insl
sbb
jnp
mov
xchg
mov
lods
fs
add
loopne
push
popf
divb
cwtl
clc
popa
mov
push
stos
stos
rolb
insb
pop
mov
aad
xor
inc
sbb
mov
fdivrp
push
pop
cwtl
fcomps
loope
cmpl
pop
icebp
call
loop
addb
pop
movsb
inc
movsl
cli
jo
jb
pop
or
int
cld
pusha
jg
pop
rcrl
js
ja
mov
iret
sbb
and
clc
xchg
scas
push
push
pop
shl
adc
mov
mov
stos
mov
dec
test
in
or
test
push
inc
popf
jne
popf
mov
orl
jge
icebp
clc
mov
push
inc
or
repz
lret
xchg
aaa
or
rolb
scas
sbb
pop
cli
cwtl
addr16
decb
insl
or
ret
sub
inc
inc
lock
push
mov
mov
loope
dec
std
shll
loope
fsubrp
jg
int3
dec
mov
call
leave
lahf
or
inc
outsl
add
fmulp
bound
push
loope
ret
mov
xchg
rorl
movb
fmul
test
arpl
stos
hlt
dec
fisttpl
mov
pop
pop
sbb
arpl
fdivrl
xchg
stos
les
fnstcw
mov
dec
daa
or
mov
mov
pushf
fwait
inc
data16
movnti
sbb
lret
mov
lret
aaa
mov
inc
push
sar
sub
popa
std
inc
push
sub
sbb
enter
sbb
mov
pusha
push
sub
cmc
in
inc
mov
jp
jae
sahf
mov
pop
mov
mov
dec
sub
push
scas
mov
inc
cmp
lcall
jae
fdivs
fdivr
lds
mov
loopne
mov
jmp
sub
jne
fwait
xchg
call
rorl
jl
call
lods
pop
imul
push
xlat
das
pop
std
cmp
fstpl
gs
push
int
nop
push
dec
xorl
mov
and
adc
mov
cmpsl
lret
xor
mov
cli
cmpsb
lahf
psrad
inc
lahf
in
lea
dec
push
popf
aas
or
jo
mov
loopne
in
xor
pop
jnp
or
jns
mov
sub
scas
lahf
rorb
mov
test
mov
inc
add
dec
add
enter
inc
jno
loope
xor
lods
loop
ret
fwait
and
mov
inc
fisubs
cs
stos
xor
repz
xor
in
mov
fucomip
int3
sbb
push
enter
adc
into
mov
xchg
and
scas
pop
or
incl
cwtl
jl
push
push
mov
call
cmp
cmp
jge
inc
xchg
leave
js
xor
test
test
dec
testb
sbb
pop
xor
pop
push
test
dec
xor
sahf
xor
cs
es
xor
adc
adc
ja
jne
cmpb
insb
or
mov
unpcklps
push
ds
cmpb
aam
mov
shlb
xchg
ret
dec
fmuls
mov
or
clc
dec
sub
gs
xor
pop
cmp
out
push
out
xchg
sub
aas
xor
shrb
fcoml
mov
jle
adc
movsl
std
xor
xlat
mov
pop
lea
aaa
jo
sub
sbb
push
xor
push
insl
shlb
data16
mov
fdiv
les
out
addl
adc
mov
jecxz
popa
sub
jae
sbb
mov
jo
adc
sbb
dec
movsb
dec
outsl
insb
nop
jbe
outsb
sub
pusha
lock
insb
adc
clc
outsl
lods
mov
lock
outsb
push
inc
jae
push
std
mov
insl
push
out
pop
std
rclb
push
sub
test
ret
xchg
sub
sbb
std
lock
lods
out
xchg
sub
sub
insl
jne
call
mov
and
cmc
scas
or
test
jge
pop
rcr
dec
push
mov
mov
stos
lods
jmp
inc
add
rorb
or
mov
push
inc
push
cmp
sbb
fisttps
sbb
cmp
rolb
jb
xchg
loop
mov
adc
subb
fwait
cmp
sahf
out
das
inc
ss
aam
xor
ret
xchg
sbb
andb
in
adc
std
pop
leave
mov
popa
notl
push
bound
ljmp
mov
push
insl
loopne
out
and
arpl
xlat
add
xchg
pop
js
cmp
test
je
pop
push
xlat
pop
xor
scas
push
jo
sub
leave
jl
loopne
fbld
rorb
loop
movsb
cmp
lds
mov
jns
and
mov
scas
scas
xchg
lock
xor
and
push
mov
jecxz
adc
sub
sbb
shl
fidivs
hlt
testb
shlb
inc
scas
cmpsl
mov
sbb
xchg
push
jno
lcall
out
mov
push
pop
hlt
loope
lods
sub
and
js
lahf
jbe
or
loope
pop
mov
cmc
mov
xchg
sahf
je
fnstenv
cwtl
imul
pop
and
shrb
add
push
js
jge
sbb
or
outsl
add
inc
bound
imul
shlb
fwait
into
data16
rorl
xchg
rcrl
mov
outsb
leave
mov
sbb
daa
add
mov
and
dec
fsubr
mov
in
inc
sub
push
cltd
ret
dec
add
jae
sbb
mov
push
push
cmp
jg
or
push
jecxz
test
push
sahf
and
out
dec
repnz
sub
movsl
mov
imul
xchg
sbb
rcrb
call
ljmp
jp
mov
je
pop
push
xor
xor
or
int3
push
cwtl
mov
enter
jg
rorb
movsb
jge
and
test
xorb
lock
testl
test
pop
ret
stc
jae
mov
icebp
pusha
add
inc
scas
dec
mov
lods
or
or
ljmp
mov
scas
aad
rolb
or
enter
push
inc
add
cli
iret
shll
popa
mov
jo
pop
loop
cmp
jmp
xchg
xchg
repnz
stos
push
mov
pusha
xor
out
loope
lods
mov
rolb
loopne
mov
and
out
or
mov
and
les
mov
std
ds
adc
pop
inc
rcrb
adc
ds
mov
jmp
inc
test
sbb
dec
out
or
shlb
push
stos
or
adcb
xchg
add
xlat
jl
xlat
in
add
xchg
cld
mov
jns
fcompl
mov
dec
ret
mov
pop
test
mov
sahf
xor
dec
mov
mov
xchg
xor
aaa
insl
sub
mov
jecxz
mov
fwait
ret
and
mov
iret
jne
mov
xchg
mov
mov
loop
sbb
or
insl
lcall
and
or
dec
sub
mov
shrl
arpl
dec
testl
cs
jge
push
ljmp
sub
pop
movsl
scas
addr16
aad
cwtl
mov
push
fidivrs
aaa
and
bound
dec
adc
insb
jp
sti
jno
outsb
jmp
test
and
js
cltd
sahf
inc
pop
inc
mov
sub
pop
push
movsb
clc
mov
jnp
mov
pop
arpl
loopne
rclb
test
sbb
lahf
push
or
inc
cmp
mov
xorb
nop
sbb
std
icebp
clc
shrl
pop
cmp
imul
xor
jbe
stos
test
stc
dec
xchg
fnsave
or
outsb
pop
test
jne
ss
daa
lret
outsb
xchg
xchg
sahf
movsb
pop
xchg
test
stc
rcrl
lock
dec
call
arpl
fninit
lret
std
insl
mov
ret
mov
and
rolb
pop
or
xor
leave
and
sti
stc
movsb
dec
inc
push
aas
sbb
pop
movsb
sub
imul
cmp
sub
and
mov
std
inc
inc
push
or
pop
cmp
mov
ror
mov
cmp
push
ss
aam
and
cmp
cs
fstps
inc
dec
mov
mov
cld
sub
lods
dec
addl
lcall
add
data16
das
pushf
cmp
inc
js
mov
ljmp
xor
push
ds
addl
ficoms
adc
fisubrs
xor
push
pop
sbb
mov
scas
mov
fidivl
nop
mov
push
daa
call
inc
fimuls
mov
adc
pop
bound
cltd
mov
imull
or
ret
enter
hlt
lcall
inc
inc
xchg
push
stc
xor
adc
out
lock
aad
mov
jecxz
mov
aas
imul
cmp
jmp
in
popa
lahf
and
loop
loope
loope
mov
or
and
xchg
addr16
in
mov
sbb
shr
int3
inc
mov
andl
mov
aam
xchg
loopne
daa
ror
or
jmp
andb
and
gs
les
test
jns
push
xor
in
mov
push
pushf
pop
fstl
xlat
in
dec
xchg
add
ljmp
and
icebp
push
rcrb
cmpsb
into
sbb
test
ss
inc
add
inc
in
test
jl
mov
sub
xor
mov
insl
xor
mov
xor
mov
ss
pop
dec
test
call
push
mov
push
pop
arpl
fidivrs
lret
adc
mov
mov
clc
cmp
adc
faddl
ret
dec
test
inc
movsb
nop
xchg
pop
sbb
lcall
or
mov
int3
add
jl
test
xchg
out
insb
or
inc
push
movsb
fldcw
outsb
nop
out
cwtl
mov
xchg
push
push
adc
inc
cmp
xor
cmpb
pop
call
pop
imul
jmp
inc
sub
dec
leave
aam
sub
adc
jmp
adc
dec
pusha
cltd
pop
xor
data16
jmp
std
out
mov
push
dec
insl
inc
cmpsl
lods
sti
int
mov
cmp
ret
lods
ret
iret
pop
pop
bound
lock
pop
fldt
fld1
movsb
call
and
cmp
inc
cmp
push
lods
pop
nop
add
popa
movsl
mov
sbb
lods
in
pop
ret
cli
sub
sbb
outsb
push
jnp
or
inc
add
ret
pusha
mov
dec
std
pop
push
lret
jb
jae
js
popa
hlt
js
pushf
jbe
pusha
in
in
or
loopne
mov
es
int
jns
cvtps2pi
addr16
xor
repz
scas
rcr
or
jl
inc
pop
dec
es
lods
sahf
mov
sbb
pop
stc
pop
fldt
imul
sar
rclb
pop
fs
push
leave
push
adc
push
pushf
lea
jecxz
lret
jo
xchg
cmc
popf
dec
xor
or
and
sbb
xor
xchg
sub
pop
popa
leave
add
test
xlat
jecxz
aam
ret
and
and
cmp
and
loopne
sbb
xchg
jmp
lods
icebp
jmp
call
xchg
and
push
xor
dec
mov
mov
popa
aam
jne
xor
xchg
mov
in
mov
xchg
cmc
pop
xchg
and
add
push
sarl
in
jl
fiaddl
nop
andl
pop
mov
arpl
sub
sbb
lods
mov
pop
inc
jl
and
mov
cltd
setb
cmpsb
fildl
roll
mov
fdivs
xchg
sahf
inc
xor
mov
dec
outsb
popf
std
jno
cmpsl
jg
scas
pop
add
into
sbb
or
fbstp
jb
ret
xchg
cltd
pmaxsw
into
mov
and
jno
aam
ror
cmc
adc
xchg
in
inc
lods
adc
cwtl
xchg
je
push
jmp
push
scas
dec
xchg
xor
mov
sbb
fwait
mov
pop
pop
lahf
mov
imul
test
mov
pop
ret
arpl
jge
add
xor
lret
mov
mov
pop
push
and
jnp
inc
fwait
pop
lds
inc
dec
insl
sub
dec
jb
or
nop
shl
fwait
sbb
and
fmuls
sbb
mov
fldt
xchg
aam
orps
dec
addr16
add
dec
jle
dec
add
jl
test
dec
sbb
pop
mov
shll
movsl
mov
pop
decb
and
div
cld
jge
xor
push
rclb
push
xchg
gs
inc
fwait
cli
inc
jp
and
in
mov
fists
push
ret
stos
mov
aas
mov
pop
ja
data16
sbb
xchg
addr16
or
stos
outsb
inc
adc
imull
mov
hlt
mov
adc
lret
or
lods
out
jnp
mov
int
pop
inc
ret
cmp
imul
out
jo
push
push
jno
xor
es
out
mov
sbbl
sar
adc
mov
or
mov
call
popa
xor
popf
dec
sub
movsb
stos
out
rcll
loopne
ret
xlat
sti
imul
mov
and
mov
cli
dec
mov
test
aas
stos
inc
pop
dec
jbe
daa
es
xor
daa
std
stos
fldt
cli
cmp
out
mov
sbb
pextrw
cmp
and
push
and
popf
xchg
movsl
add
pop
stc
in
and
pop
lahf
icebp
cmc
jo
push
adc
repz
movl
insl
lock
test
and
or
div
js
fwait
cmc
pop
xchg
jb
out
and
lahf
fstl
sahf
je
aas
sub
movsl
pop
aaa
in
adc
adc
outsl
jno,pn
pusha
fistps
xchg
cmp
into
dec
dec
or
cli
jb
shlb
in
ret
cld
jmp
xor
div
test
mov
adc
sbb
or
aas
mov
mov
jp
das
mov
popf
rcll
in
dec
nop
sbb
xor
mov
fucomi
mov
pop
mov
movsb
jne
stc
adc
or
lret
cmp
rcr
dec
push
sbb
cmpsb
push
push
enter
lret
mov
dec
into
mov
aam
mov
inc
fisubl
jle
out
rorb
lret
test
into
dec
mov
icebp
xorl
fidivrs
out
insl
pop
cmp
push
cld
dec
xchg
adc
xlat
sub
and
cs
daa
mov
or
add
xchg
lock
test
test
adc
jbe
xor
mov
xor
pop
adc
call
adc
adc
cmp
lahf
mov
in
outsl
nop
mov
sbb
popa
mov
rcrl
adc
sbb
jno
jl
mov
mov
xor
stc
leave
mov
stos
shlb
pop
rol
cmp
cmp
dec
daa
mov
mov
xchg
cltd
pop
xor
icebp
out
lods
and
adc
sub
pop
mov
inc
test
jle
dec
mov
adc
stos
insl
xor
test
pop
cmpsb
add
xor
dec
je
lock
ret
jl
cltd
shll
mov
loop
lea
or
popf
bound
add
inc
sbb
in
xchg
movsl
cmc
mov
inc
stos
pop
inc
push
mov
sub
scas
arpl
lret
mov
lret
adc
jmp
sbb
repz
xchg
xchg
data16
mov
xchg
jge
imul
xchg
ret
pop
int
leave
popf
sbbl
mov
imul
test
push
inc
aaa
lock
ja
xor
rcll
bound
jb
inc
outsl
mov
das
or
pop
jle
mov
xchg
pop
sahf
push
ds
cs
xlat
jno
fldlg2
in
lret
and
xchg
cmp
loope
mov
mov
push
or
mov
mov
mov
or
xchg
cmp
inc
inc
sbb
ret
mov
loopne
popa
inc
or
int3
cmp
in
cmp
or
scas
int3
mov
xchg
imul
mov
insl
rolb
inc
or
jmp
adc
cmp
sbb
test
call
mov
push
cwtl
je
jno
or
imul
js
mov
xor
push
sub
lea
into
dec
enter
jns
scas
xchg
cmpsb
int3
rcrb
dec
inc
repnz
fidivs
jno
rcrl
xchg
mov
jnp
shll
addr16
inc
jno
dec
sarb
xchg
lods
movsb
xor
push
xlat
mov
js
mov
ljmp
in
push
hlt
dec
mov
mov
std
test
das
ja
mov
shl
cmp
add
ja
pushf
sub
cmpsl
jae
div
and
adc
push
mov
js
push
xchg
mov
lahf
js
mov
or
in
jne
dec
out
or
push
cmp
cli
movsl
and
rcll
pop
adc
jg
cmp
jmp
jne
add
and
dec
sbb
mov
repz
cltd
mov
add
aas
ret
loop
xchg
inc
aaa
pop
and
and
fwait
pop
rclb
scas
lds
dec
cld
daa
out
test
cmpsb
push
daa
les
mov
testl
pop
lods
dec
das
mov
or
fldl
sti
mov
mov
sub
mov
cld
adc
xchg
into
loope
xchg
xchg
mov
jae
xlat
out
cmp
inc
stc
repnz
sahf
in
insb
inc
sti
inc
pop
push
out
mov
xor
iret
add
hlt
sub
ss
mov
or
outsl
pmullw
dec
sub
jbe
lret
clc
js
bound
test
push
cmp
dec
jae
in
and
cmp
and
loop
and
repz
nop
inc
mov
es
insl
mov
out
pop
push
pop
push
inc
push
and
dec
movsl
mov
movsb
ficompl
fstpt
divb
pop
daa
xor
daa
decl
femms
test
mov
lcall
jne
and
lods
cld
jle
shrl
daa
daa
jge
cmp
stos
clc
insb
dec
stos
mov
cmp
add
mov
adc
mov
push
mov
push
sti
les
daa
lret
daa
sub
ljmp
xor
outsl
insb
cmp
mov
sub
outsb
daa
add
pop
ret
jo
push
xchg
test
fsubp
in
test
or
into
pop
xor
sbb
idivl
sbb
imul
fildl
cs
mov
scas
inc
fucom
pop
out
jb
add
aaa
repnz
xchg
out
ja
fs
jnp
or
daa
rcl
orb
push
popa
leave
test
jp
or
int
mov
ja
adc
mov
fdivrs
mov
ret
aam
hlt
sbb
mov
outsb
cmp
xchg
push
fcmovnu
inc
xor
cmp
mov
xchg
pop
orb
dec
ret
lods
cmovle
scas
pop
out
inc
pop
jle
iret
divl
jp
xor
call
scas
xchg
adc
shl
sbb
pop
mov
push
mov
cmp
push
lds
mov
lock
add
test
mov
adc
pop
int
out
cs
hlt
and
push
jecxz
jnp
add
and
pop
mov
jnp
cwtl
cwtl
mov
lock
pop
xchg
mov
daa
and
mov
cmp
jl
pop
cmp
icebp
add
fisubrl
loopne
pop
xor
mov
mov
js
pusha
jo
subl
cs
in
jg
into
std
sbb
int3
and
push
les
iret
jmp
adc
fstpt
pusha
addr16
ja
aam
and
or
cmp
stos
lahf
push
int3
shl
out
jb
add
mov
add
or
shlb
mov
cmpsb
imul
push
mov
lock
ds
fwait
cmp
inc
xor
iret
cmpsb
lea
sbb
movsl
lods
movsl
jp
test
push
mov
dec
pop
aas
cmp
mulb
mov
outsb
xlat
pop
inc
push
inc
xchg
hlt
push
pop
out
repnz
xchg
ucomiss
sub
push
shlb
jns
dec
test
rclb
out
mov
cld
fistl
xchg
push
aam
or
mov
out
xor
push
imul
gs
inc
and
enter
fwait
bt
push
jne
repnz
jo
push
mov
loop
jb
test
sarl
stos
xchg
loope
aad
out
cmpsb
mov
popa
fwait
pop
mov
jmp
scas
inc
mov
mov
fwait
sbb
inc
or
lahf
icebp
fdivl
jle
push
sub
test
xchg
inc
shlb
jo
push
std
sub
das
outsb
lea
in
fwait
loope
sub
xor
or
cmp
add
or
sbb
pop
aad
das
mov
add
mov
sub
rol
negb
xchg
or
ljmp
push
pop
jg
lods
xor
test
gs
push
lods
push
negl
imul
mov
je
xor
sbb
push
popa
or
inc
mov
mov
cmp
fwait
rcll
call
ret
sti
push
pop
inc
test
jbe
imul
rcrb
in
xor
enter
inc
jl
pusha
mov
xlat
jle
iret
mov
inc
jno
push
pop
popa
ret
out
adc
mov
mov
inc
cmp
bound
les
dec
fnstcw
inc
shlb
pop
sbb
mov
push
mov
mov
mov
mov
push
mov
mov
test
nopl
inc
pusha
jecxz
outsb
dec
stos
mov
add
notl
out
cmp
mov
subl
iret
cli
jg
mov
pop
stc
fdivrs
add
lret
jo
sbb
add
roll
or
xchg
and
les
mov
sbb
mov
or
cld
test
jecxz
xor
mov
cmp
xor
pop
movsl
insl
daa
insl
adc
in
jecxz
inc
aad
sbb
dec
xchg
das
sub
lods
add
stos
movsl
popa
sbb
mov
or
arpl
into
xlat
sbb
mov
stc
sti
enter
and
mov
jmp
inc
mov
mov
xor
lret
jne
or
push
insl
btc
cwtl
push
adc
orl
add
movsb
pop
stos
jmp
jp
jne
pushf
mov
outsl
or
cmp
rorb
adc
push
xor
cmp
jnp
aam
das
fadd
fwait
testl
lods
cmc
leave
xchg
dec
push
pop
mov
repz
cmp
push
sub
xchg
inc
int
adc
out
mov
cmpsl
add
popf
repnz
jne
mov
xchg
xchg
push
ret
jbe
repz
dec
mov
or
pushf
and
jg
pop
and
cmp
xor
fadd
fmuls
fstpt
push
and
jb
ja
test
int
cmp
bound
xchg
insl
fldcw
popf
add
movsl
dec
xchg
mov
sbb
rol
push
fcomps
sub
out
nop
xchg
pop
lods
adc
dec
fnstcw
addr16
and
or
jns
repz
in
add
inc
popf
and
neg
pop
shr
fistl
adc
out
out
addr16
arpl
int3
sbb
inc
push
pop
push
adc
lds
movsl
incl
push
push
push
mov
adcb
popf
push
add
inc
push
inc
inc
inc
push
shl
mov
push
push
adc
rcl
in
inc
jge
and
outsl
mov
push
dec
cmp
popf
and
je
or
xor
xchg
int3
dec
rorl
push
lods
mov
mov
in
xchg
ficomps
mov
aad
pop
and
cltd
lcall
call
stc
inc
and
pop
loop
mov
cmc
dec
xor
jge
std
add
push
shll
addr16
mov
add
sti
hlt
and
js
mov
xchg
stos
xchg
sbb
je
repz
push
shll
cmpl
mov
and
mov
push
jmp
mov
jle
jecxz
xchg
adc
sti
clc
xchg
loop
mov
das
jns
and
movsl
and
aaa
repnz
dec
mov
sbb
mov
push
sbb
add
call
and
or
sbb
sub
stc
or
test
xchg
sub
cmpsb
dec
test
adc
mov
sbb
fdivrl
mov
mov
cmp
jnp
adc
fcomp
sbb
lock
pushl
inc
roll
call
ljmp
mov
mov
test
add
inc
add
leave
pushf
fimull
xor
sbb
js
jbe
ds
bound
fisubl
sub
xchg
test
inc
clc
dec
and
and
stos
jne
or
cmp
das
dec
repz
mov
xor
push
fwait
jb
mov
pop
cmc
push
mov
xor
mov
out
cmp
xchg
add
popa
adc
aas
ljmp
mov
jecxz
std
mov
test
cmpsl
inc
sbb
push
sahf
lods
mov
imul
mov
push
pusha
mov
xor
nop
fidivs
outsb
lods
xchg
movsb
push
call
orb
mov
mov
or
push
cmpsb
adc
sti
xor
push
dec
lock
mov
sub
clc
push
push
fstpt
mov
pushf
mov
mov
push
inc
cmp
mov
sub
mov
dec
push
xchg
mov
imul
xor
rol
test
and
add
mov
add
xchg
clc
movsl
cmpsb
xor
pop
or
cmc
loopne
loop
ss
inc
lret
fdivrl
gs
out
push
fcmovne
aad
sbb
mov
sub
sbb
push
popa
mov
ja
jb
mov
sti
or
adc
xor
test
mov
nop
fistpl
push
adc
jecxz
pop
sub
fisubrs
in
in
es
push
jmp
jl
dec
xchg
add
out
push
xlat
arpl
cltd
mov
sbb
add
enter
add
test
adc
add
xchg
sbb
cmp
test
lods
cli
sti
or
fld1
sbb
aad
or
sarl
push
mov
mov
cmp
xor
push
jle
cmp
popa
dec
or
insb
aaa
mov
das
push
das
daa
push
loop
pop
dec
jecxz
lea
sbb
and
mov
xchg
and
bound
in
lds
scas
mov
and
push
pop
jae
jo
pop
add
cmpl
mov
scas
fstp
sub
dec
hlt
mov
scas
mov
mov
andb
xor
stos
xor
out
addr16
rclb
outsl
pop
pop
lsl
xchg
fbld
shrb
mov
movsl
in
adc
scas
cmpl
push
jne
cli
mov
mov
test
test
into
cmpsb
adc
pop
xor
in
inc
jns
push
fimuls
xorl
xchg
mov
mov
sbb
leave
out
mov
adcb
or
jmp
jnp
and
in
add
mov
pop
cmpsb
insl
out
mov
jge
adc
sbb
in
pop
sbb
movsb
mov
sti
fldl
cmpsl
push
push
dec
stc
shufps
adc
andl
adc
das
scas
and
sub
pop
popa
xor
ret
dec
adc
sbb
ret
push
popa
movhps
inc
outsl
pop
pushl
xor
inc
clc
test
mov
adc
xchg
ljmp
or
loopne
rcrl
jge
ret
jg
push
movsl
and
sub
test
sti
test
outsb
push
jo
xchg
jno
push
lods
ret
jb
addr16
jmp
outsl
mov
imull
fld
jl
ja
or
jl
loop
daa
mov
mov
in
jp
call
rorl
inc
popl
xchg
fwait
icebp
lea
bound
enter
sti
cmp
inc
mov
sbb
mov
int3
imul
shlb
mov
push
gs
add
addb
cmp
sub
rcr
fldt
pop
insl
in
cmpsb
lods
push
add
xchg
cltd
orb
in
add
pop
pop
insb
dec
stos
inc
and
and
dec
rcrl
pop
cmp
aad
and
adc
mov
outsb
bound
adc
and
dec
mov
outsl
mov
insl
xor
nop
test
push
jo
xchg
cmp
dec
or
or
arpl
push
sub
movsb
in
mov
push
mov
add
lods
dec
ret
mov
push
out
inc
jmp
xchg
dec
add
or
mov
mov
nop
jecxz
andb
or
lock
xor
outsl
mov
subb
jecxz
sub
int
sbb
test
test
ret
or
ljmp
pop
jmp
mov
push
aas
mov
push
dec
das
jbe
sbb
xchg
and
js
inc
shrl
ret
adc
and
out
xchg
jb
dec
mov
jge
popa
mov
jnp
sub
mov
stos
lahf
popa
xchg
in
dec
cmp
dec
dec
lret
add
sub
mov
mov
cwtl
pop
adc
adc
mov
jmp
in
cwtl
or
or
aaa
aad
pop
sbbb
push
pop
dec
adc
mov
xor
dec
cld
mov
and
mov
iret
cmp
add
jno
cmp
push
mov
pop
addl
cmp
dec
flds
or
rorb
jecxz
cmovo
daa
imul
inc
or
incb
mov
repz
std
imul
add
test
and
dec
cmp
pushf
and
sub
push
fcompl
out
les
mull
hlt
cmpsl
dec
cmc
shl
into
mov
jge
mov
add
jae
cld
mov
outsl
pop
scas
xchg
cwtl
adc
push
dec
mov
es
outsl
dec
movsb
shl
jno
les
test
iret
xor
sub
dec
int
mov
push
jge
imul
std
or
std
fidivl
sub
sahf
sbb
aas
lea
es
lret
mov
outsb
pop
mov
fiadds
mov
or
dec
rol
cmp
repz
push
mov
mov
inc
or
stos
push
mov
push
dec
mov
mov
test
cmp
xchg
movsl
cwtl
aaa
push
pop
cs
inc
xor
jnp
cmpb
call
aad
xor
int3
xor
loop
test
clc
xlat
ds
push
inc
sub
in
cwtl
std
cli
jno
sbbb
cmp
clc
mov
movsb
movsb
popa
inc
xor
pop
push
sbb
jnp
push
or
into
or
in
or
inc
ja
fimull
test
ds
push
shrb
out
leave
popa
mov
mov
into
xchg
in
cmp
add
verw
incl
test
into
xor
enter
movl
pushf
mov
fprem1
inc
mov
cmp
pop
jnp
push
pop
insl
les
iret
inc
lods
movsb
out
pop
das
and
dec
lcall
popa
add
negl
push
dec
pop
add
in
jg
and
lods
rclb
mov
cli
rorb
sub
add
shl
sbb
push
xchg
xchg
clc
xchg
ljmp
xchg
xor
pop
stos
cwtl
aaa
std
push
cmp
mov
jnp
sub
cmp
fwait
cmp
outsl
les
adc
sub
pop
lds
push
sbb
xchg
loopne
jl
mov
mov
or
mov
push
mov
test
xchg
adc
out
test
ret
mov
mov
mov
push
aas
cmpsl
loopne
bts
cli
loope
push
insl
cmp
xor
leave
sub
push
inc
pop
jp
push
insl
std
xchg
pop
push
outsb
lahf
mov
jg
fwait
jg
pop
push
aam
in
test
aam
scas
orl
xchg
shll
popf
fiadds
sti
jge
gs
addr16
shll
scas
aad
out
into
imul
pop
ds
stc
mov
dec
lea
cld
pop
lock
xlat
std
sbb
mov
jae
shlb
jbe
and
sarl
push
es
push
cltd
daa
add
ret
out
jp
scas
ret
sub
imul
dec
pushf
mov
cld
mov
test
xorb
je
lcall
mov
xor
mov
dec
add
push
adc
scas
or
popa
or
decb
jg
lcall
iret
inc
shlb
push
out
inc
mov
lds
hlt
xchg
sub
faddp
in
mov
mov
cmp
dec
arpl
ret
sbb
leave
sti
mov
sbb
cmp
push
je
scas
call
dec
cld
push
pop
lret
cmp
jo
sub
sbbl
xchg
or
jmp
fcomi
mov
loope
mov
ja
sahf
loope
and
sub
scas
cmc
mov
jp
icebp
sub
dec
pusha
outsb
or
roll
scas
mov
xor
js
cmp
cmp
icebp
jle
iret
add
xor
in
adc
in
xchg
not
fdiv
lods
aaa
mov
adc
sarb
nop
mov
ret
lods
popa
mov
xchg
pushf
ds
pop
adc
xchg
cmpsb
cmp
imul
dec
mov
fwait
ret
push
or
xor
dec
jp
aas
inc
enter
dec
out
push
repz
or
push
cmpsb
into
mov
add
mov
imul
iret
or
out
sub
push
fisubl
or
ja
gs
cmpl
bnd
shl
or
sub
and
iret
inc
nop
mov
push
inc
mov
xchg
pop
int
inc
inc
or
outsl
inc
addr16
fldl2t
inc
mov
out
mov
push
xchg
adc
scas
mov
and
sbb
xlat
xor
mov
int3
ret
outsb
rorl
and
xlat
clc
insl
or
xchg
xlat
sub
stos
adc
lret
push
fidivs
or
es
add
jg
ret
fstl
pop
or
cld
aaa
cmp
clc
cltd
push
jb
fistpl
sub
push
scas
push
insl
push
aas
movl
push
int
mov
imul
sub
lods
pop
jno
f2xm1
je
jecxz
or
lret
jg
xor
in
mov
jnp
adc
push
clc
test
dec
outsl
and
sti
lcall
cmc
ss
cmp
mov
test
lret
xor
ret
stos
or
or
xchg
add
data16
mov
lods
mov
ja
testl
dec
sub
push
bound
mov
push
mov
clc
js
ret
hlt
cs
cli
stos
mov
and
pop
push
inc
jno
sub
ja
popf
and
lods
jns
sub
xchg
push
cmc
out
loope
mov
shl
sub
into
loopne
cli
and
testb
subb
lods
in
add
lock
into
sbb
jecxz
imul
and
notb
adc
xchg
mov
aaa
push
aas
inc
dec
adc
pop
jo
aad
lret
add
jp
or
jns
add
lcall
xchg
aam
adc
xor
lret
sbb
cmp
cltd
jo
cmp
popf
out
int3
pop
xchg
or
ljmp
xchg
nop
arpl
call
sbb
inc
sub
jl
jmp
mov
jg
fld
cmp
ss
or
aaa
lea
push
jns
mov
ss
test
mov
or
mov
inc
cltd
mov
sub
pop
jo
dec
cmp
and
sub
or
mov
loop
rcll
mov
mov
pop
lret
mov
lods
pusha
shl
jge
repz
fcmovbe
dec
push
test
mov
fwait
cmpb
cmp
mov
jae
xchg
into
inc
notb
xchg
jnp
adc
cmpsb
fsubrl
push
push
imul
insl
xor
leave
xchg
int
add
push
jl
nop
pop
jg
xor
popf
mov
insl
dec
fisttpl
push
ret
jecxz
dec
push
sbb
dec
std
iret
adc
cld
aad
insl
mov
inc
test
jno
jns
adc
roll
int3
lahf
xor
fsubrs
mov
xor
push
jae
push
mov
mov
sbb
mov
inc
lret
pop
and
jno
xchg
xchg
jb
andb
mov
sub
xor
inc
and
xor
push
sub
call
sub
push
in
fsubrs
sbb
call
push
arpl
fcompl
mov
imul
add
into
clc
shlb
repz
lret
jo
les
pop
popa
test
rorb
stos
mov
pop
test
or
lods
test
and
imul
leave
mov
into
dec
fists
test
arpl
nop
pop
ret
sub
jne
and
add
test
aad
adc
imul
jnp
loop
jo
das
push
mov
fsubr
mov
cmp
sub
inc
movsl
lret
loop
cmc
push
xor
push
jnp
mov
inc
or
jge
cwtl
push
imul
fdivrs
pop
aad
lods
in
sub
mov
aad
leave
aam
and
dec
mov
mov
jecxz
ret
pop
not
loope
test
mov
push
cs
repz
xchg
int3
mov
aam
stc
mov
insb
insb
aaa
sbb
fldcw
mov
add
push
push
xlat
lahf
pop
mov
cli
cmc
mov
call
mov
cli
out
push
xchg
mov
add
shrl
scas
ret
mov
sbb
outsb
rclb
jne
repz
aad
cmp
imul
leave
dec
fstl
popf
lods
ds
xchg
popf
popa
mov
cli
lock
mov
dec
mov
mov
mov
aad
cmovae
outsl
scas
leave
add
fmull
orb
mov
cmp
sbb
cmp
imul
fscale
repnz
cli
jmp
negl
es
sub
push
aas
out
jecxz
mov
lods
imul
xor
fimuls
cmp
and
aas
incl
fdiv
sbb
xor
or
sbb
sub
mov
movsb
cmpsb
dec
cmc
sahf
icebp
js
and
pop
xchg
std
mov
jo
cmc
cmp
in
and
mov
out
enter
lock
mov
inc
mov
imul
popa
ret
cwtl
jbe
and
inc
in
or
pop
push
pop
into
and
add
scas
jne
hlt
jmp
ret
outsb
rcl
xlat
mov
push
cli
ret
dec
jno
xor
scas
adc
stos
movsb
gs
jnp
stc
test
jno
lods
jnp
cmp
jns
lret
mov
aad
pop
in
mov
mov
and
nop
mov
pop
cmp
cs
fsubrs
cmpsb
cld
ds
xor
mov
inc
xor
mov
mov
xor
push
mov
jbe
jmp
lods
inc
and
mov
and
xchg
out
mov
xor
push
data16
jnp
sub
jecxz
int3
or
rcr
js
cltd
push
mov
pop
fsubrl
stos
fcmovnb
out
outsl
pop
fisubl
inc
xchg
jne
adc
iret
sti
cltd
fbld
xor
jmp
leave
cmpsb
pop
mov
outsb
jl
jge
das
loop
test
dec
iret
mov
mov
mov
push
sahf
stos
xor
sbb
in
pop
sbb
rclb
test
mov
gs
xchg
pusha
sti
stos
lock
dec
cwtl
jno
test
mov
push
inc
dec
scas
push
js
clc
inc
inc
pop
pop
sbb
push
cltd
inc
inc
push
insl
iret
inc
fs
arpl
cmp
jns
stos
leave
push
mov
add
popa
mov
or
std
inc
push
xchg
leave
dec
jno
inc
fmuls
sar
jo
jbe
gs
int
repz
divl
adc
movsb
add
in
daa
scas
divl
ret
dec
inc
jmp
and
into
pop
ftst
mov
lahf
lcall
mov
into
adc
cltd
sub
imul
popf
je
cmp
cmc
inc
xchg
mov
sub
sbb
mov
cmpsb
inc
dec
stc
add
fstpl
inc
lahf
popf
ljmp
push
lods
inc
hlt
cmp
imul
stos
out
sub
scas
xor
ret
push
mov
nop
mov
xchg
push
rorb
inc
fbstp
aam
mov
cmp
out
ret
lods
ss
setbe
mov
iret
dec
mov
xchg
js
stos
mov
sbbl
push
fisubl
sub
repz
addl
mov
adc
xor
jl
bswap
adc
dec
fabs
sti
mov
ret
mov
repz
xchg
dec
lret
in
lret
xlat
aas
xchg
rcll
xor
jge
leave
ret
jle
stos
test
cmp
jne
jmp
scas
pop
in
pushf
xor
out
xor
push
pop
fnstenv
cmp
mov
lods
nop
addr16
arpl
cmc
jno
jb
and
cmpsl
jns
enter
insl
adc
test
push
iret
loopne
add
push
jge
repnz
pop
sbb
or
xchg
dec
sahf
popa
mov
pusha
out
movsb
add
pop
push
jbe
int3
cltd
jno
cmp
fimull
loopne
repnz
push
jge
pop
fdivrs
ret
dec
jno
jge
add
movsb
and
test
adc
lea
xlat
pop
mov
into
sub
pop
adcb
xor
fidivs
sub
rcr
cmpsl
ret
xchg
dec
fiaddl
sti
and
cmp
je
mov
pop
lahf
pop
arpl
jae
cmpsb
enter
jo
loopne
xchg
mov
or
aaa
icebp
sub
lock
inc
jnp
js
fldl
or
cmc
es
je
aaa
cld
scas
inc
inc
xor
scas
jb
sub
out
jo
xchg
mov
aas
inc
lods
sar
in
pop
jb
ljmp
shll
pop
and
xor
pusha
sub
cmpl
imul
insb
outsb
sub
sub
dec
ret
pop
out
bound
push
bound
mov
imul
sub
out
pushf
jl
sahf
mov
iret
call
mov
cltd
movb
fsubrs
das
xlat
test
scas
cli
lret
mov
sbb
in
and
lea
mov
push
insb
jp
insb
clc
into
sub
mov
andl
int
aas
add
fucom
ljmp
mov
sbb
xor
les
jns
mov
popa
filds
xchg
jg
mov
loop
or
shl
mov
outsb
mov
dec
stos
jne
cmc
cmp
cmpsl
pop
dec
jbe
addr16
lret
int
pop
add
pushf
jbe
pop
cmp
xor
int
dec
push
ss
outsb
dec
and
push
mov
push
nop
add
loope
xchg
xor
movsl
inc
icebp
lea
add
mov
push
imul
les
mov
sbb
or
add
inc
mov
mov
test
push
xchg
push
in
repnz
sub
loop
lcall
xchg
cltd
nop
add
push
mov
mov
arpl
xchg
xor
and
dec
hlt
xlat
or
std
aad
mov
iret
mov
clc
and
imul
int3
arpl
pop
sub
jae
cmpb
mov
mov
hlt
inc
inc
rcrl
out
ja
dec
dec
xor
xchg
push
dec
clc
dec
stos
mov
addl
push
test
xor
cmc
jg
daa
mov
add
pusha
mov
test
cld
call
pop
lods
aaa
or
rcrl
je
xchg
repz
push
aas
cmp
mov
pop
lahf
sbb
add
mov
and
mov
ds
pushf
jmp
es
cmpb
fldenv
pushf
add
or
xchg
lds
cmp
add
fisubrs
fwait
leave
pusha
stc
or
lods
mov
repnz
lret
test
lods
pusha
dec
mov
push
pop
test
add
add
sahf
sub
popf
in
rolb
daa
dec
pop
cmp
js
aaa
jmp
add
push
out
pop
mov
out
xor
insl
add
mov
jle
andl
mov
stos
je
dec
sbb
loope
shl
push
jp
imul
jmp
add
lea
lret
adc
jmp
pop
rcrl
sub
cmp
mov
scas
daa
sbb
jl
or
dec
mov
cmpsl
lock
mov
into
sti
jle
cwtl
fnstsw
or
stos
mov
dec
sarl
rcr
in
pop
add
repnz
in
ret
ret
arpl
xchg
mov
pop
ljmp
add
int3
sbb
subb
int
jl
dec
cmp
jecxz
push
xchg
xchg
and
mov
lahf
test
dec
push
ret
add
jo
cmp
stc
or
or
xchg
adc
stc
push
std
push
jge
push
inc
xchg
sub
push
add
pop
mov
jbe
in
js
xchg
jle
sbbl
sbb
or
js
push
sbb
xor
mov
dec
jp
cmp
sbb
cs
or
push
add
loop
ljmp
jbe
scas
or
and
sub
je
sub
shrl
or
mov
in
andb
sbb
arpl
xor
leave
mov
fprem
rolb
ds
cmpsb
bound
cmp
sahf
mov
jle
cmp
sbb
ss
dec
jl
jae
mov
std
lods
add
jbe
cmp
adc
sbb
or
movsb
in
push
sub
lods
cmp
mov
dec
cld
fisubs
mov
inc
nop
inc
add
addl
pop
or
xchg
mov
arpl
pop
or
mov
mov
add
aaa
lret
in
pop
and
mov
pushf
out
add
bsf
pop
frstor
cmp
xor
dec
xor
inc
xchg
in
ffree
cmpsl
inc
fwait
mov
xorb
dec
bound
mov
inc
mov
inc
sbb
fisubrl
mov
sbb
lods
inc
inc
in
dec
test
stos
cmp
push
fnstcw
cli
add
cwtl
out
stos
cwtl
pop
xchg
pop
and
in
mov
aam
arpl
imul
das
orl
sar
and
mov
dec
push
push
adc
js
mov
sbb
dec
add
shrb
add
rclb
cmp
mov
dec
aaa
adc
add
push
pop
cli
add
cmpsb
lret
xchg
pop
sahf
sbb
sbb
jno
xchg
dec
cltd
mov
ljmp
int3
pusha
push
fwait
and
push
and
mov
stos
packsswb
push
mov
stos
inc
loop
insb
stos
cmc
jle
xor
out
mov
sbb
mov
push
aad
or
dec
shlb
out
nop
mov
mov
dec
popl
stos
mov
push
adc
icebp
ja
fidivrs
push
inc
pushl
xchg
out
ss
lods
gs
gs
cmc
popa
mov
dec
test
jmp
jnp
fidivrl
addl
jnp
je
ds
aad
add
enter
push
mov
imul
aas
jno
stos
rcr
push
adc
leave
or
ficoms
aad
cltd
lret
xor
jbe
push
cmp
test
xor
lret
lahf
test
hlt
xchg
push
mov
dec
cmp
push
sbb
aaa
pop
push
cmc
repz
jb
and
insb
lods
or
shrl
aas
xchg
std
pop
inc
inc
pop
xchg
adc
and
pop
popa
xchg
mov
fst
pop
pop
cmpsl
scas
push
adc
jno
sub
orb
loop
and
mov
fwait
mov
xchg
sbb
test
data16
cmpsb
shl
mov
lock
shll
repnz
mov
in
or
mov
dec
push
lcall
shlw
dec
and
xchg
push
mov
mov
notl
and
into
xor
fdivrs
xor
rorb
fsubp
testb
inc
fwait
movsb
ret
inc
repnz
out
lret
jmp
add
push
cmp
bound
int
lods
add
xchg
cltd
fdivrp
into
repz
mov
add
or
adc
cmp
test
xchg
scas
cmp
jge
mov
dec
cmp
xor
cmp
fists
in
loope
pop
cli
xor
nop
and
pop
cmpsl
cmp
ds
mov
and
es
and
mov
sbb
aam
and
insb
hlt
stos
mov
xchg
lret
pcmpeqw
mov
call
imulb
mov
pop
ljmp
add
ljmp
xchg
inc
neg
xchg
push
pop
test
add
cmp
aam
mov
js
xor
repnz
jp
les
ss
sbb
jge
mov
and
js
jb
jno
xchg
shlb
pop
push
sub
sbbb
xor
out
mov
jg
sub
add
xchg
mov
lea
les
mov
jnp
test
sbb
repnz
lea
js
fucomip
fwait
dec
cmp
test
sbb
out
inc
mov
jle
fistpl
lods
sarl
and
data16
add
adc
add
mov
cwtl
movsb
jbe
inc
push
inc
jno
inc
in
es
fisubl
mov
add
jne
xor
xor
mov
cmp
cld
repz
and
push
xor
lods
cmp
pop
lods
xchg
xor
push
cmp
jae
cmpsb
arpl
out
fwait
shrb
inc
mov
mov
sbb
fstps
arpl
jl
cli
mov
mov
push
arpl
mov
jno
add
mov
and
jl
addb
shlb
sbb
inc
add
dec
inc
int3
je
adc
mov
and
pusha
aas
pop
mov
xchg
adc
xchg
pop
fsubs
mov
cltd
lcall
rcr
ret
mov
outsl
adc
inc
imul
jo
add
ljmp
mov
mov
scas
scas
cmc
mov
cmp
xorl
jmp
mov
xchg
sbb
cwtl
pop
test
mov
mov
add
insb
add
jns
loopne
pop
lds
cld
mov
and
xchg
notl
es
popf
outsb
dec
sbb
or
sbb
xor
jecxz
addb
and
out
mov
and
sbb
push
xor
or
dec
inc
sbb
inc
aam
cmp
mov
dec
push
fcompl
vpunpcklwd
lea
cmc
inc
mov
mov
pop
shlb
dec
cs
cs
divl
xchg
push
pop
dec
adc
push
sarl
pop
mov
cli
mov
push
mov
shlb
std
aad
aas
inc
addl
mov
je
in
out
out
daa
fiadds
mov
pusha
jno
fnstenv
imul
xor
dec
adcl
mov
xchg
insl
fnstsw
stc
jb
fldcw
inc
sahf
or
sbb
xchg
cmp
outsl
fs
or
or
in
pop
xchg
inc
adc
pushf
push
test
xchg
jg
test
mov
fldt
rol
in
int3
add
push
fcmove
fsub
std
outsl
lcall
imul
popf
rol
loopne
adc
lea
xor
sar
or
pop
or
add
push
loopne
xchg
sub
mov
fcom
add
cmc
subl
pushf
xchg
sbb
push
enter
addr16
fmuls
jecxz
mov
jbe
xchg
push
add
aaa
and
shlb
jns
or
inc
rcr
or
mov
out
push
adc
pop
adc
mov
add
dec
sub
push
lock
lcall
shlb
cmp
loop
add
and
cmp
mul
pop
ss
ljmp
or
pushf
loop
xchg
cmp
adc
daa
insb
dec
adc
shrb
shl
imul
xchg
sti
or
xlat
xor
addl
push
aam
inc
hlt
cmp
into
in
inc
mov
inc
cmpsl
imul
and
fcmovbe
insl
adc
pop
jo
push
xchg
int3
add
clc
inc
lods
icebp
lds
xlat
popf
outsl
sbbb
or
jmp
flds
movsb
adc
ffreep
pop
mov
or
inc
sahf
or
shll
jecxz
jno
mov
pop
inc
mov
out
dec
pusha
fidivs
xchg
loopne
xchg
adc
out
dec
sub
addr16
jecxz
lea
xchg
fldt
sti
push
bswap
xchg
into
rcr
insl
cltd
pusha
clc
hlt
in
icebp
out
insb
inc
adc
xchg
xor
add
andl
cli
xor
cwtl
addr16
adcl
pusha
mov
xchg
pop
popa
sbb
mov
lret
mov
call
mov
or
int3
fsubrs
add
xor
fcoms
test
add
push
insl
mov
push
cmp
nop
ret
movsb
sub
mov
cmp
in
mov
xchg
ljmp
jo
aas
sbb
orb
cmc
mov
out
push
add
sarb
cmp
inc
cs
inc
cmp
xor
imul
imul
sub
test
xor
push
and
xchg
mov
pop
bound
cmp
movsb
imul
push
testl
xor
test
popa
jnp
clc
in
dec
pop
scas
cmp
pop
sub
push
test
mov
hlt
pop
or
in
arpl
jbe
cmpsl
movsl
rorl
ds
dec
js
dec
ficomps
dec
push
in
cmpsl
cltd
mov
jnp
push
clc
push
or
movsb
sub
mov
pop
jne
je
arpl
mov
jle
jecxz
jne
push
inc
std
jmp
ja
and
push
push
jo
dec
lods
push
orl
in
add
cltd
icebp
and
icebp
mov
dec
mov
mov
rep
dec
jmp
cld
jp
xchg
leave
ds
mov
or
fdivrl
sahf
mov
adc
pop
pop
push
jp
mov
jo
sahf
aad
cmp
test
push
ret
lret
cli
sub
cmp
jnp
and
mov
hlt
lret
popa
push
sbb
pop
adc
xchg
jns
jnp
hlt
xchg
sbb
mov
cs
jg
cmpsb
cwtl
lds
inc
out
cld
sbb
and
fisttps
inc
test
aad
iret
mov
inc
jno
sbb
push
rclb
add
sbb
xchg
ficoml
push
outsb
jp
sub
adc
lock
pushf
orb
cld
cwtl
rol
mov
sbb
iret
testl
repnz
pop
mov
pop
dec
add
push
addr16
inc
mov
inc
faddl
cwtl
lods
mov
lcall
xchg
fcomps
cmp
in
mov
iret
fimuls
icebp
cmp
adc
or
jg
push
inc
mov
sbb
ficomps
aad
push
xchg
push
and
cmp
fdivrp
and
mov
daa
adc
push
push
jg
sbb
xchg
gs
int3
or
push
js
lret
pop
out
jmp
outsb
mov
mov
mov
and
push
mov
and
inc
dec
xchg
or
pop
rcr
xchg
testb
scas
cmp
fcmovb
mov
ucomiss
adc
dec
adc
or
sarl
js
push
repz
aam
mov
cmp
aad
stos
dec
aad
insl
jmp
jno
cmp
subb
pusha
cmp
adc
fs
es
push
push
sub
pop
lock
mov
icebp
popa
push
xor
call
cmp
pop
sarb
xchg
aaa
jbe
in
jnp
inc
xchg
xor
jnp
inc
insl
mov
adc
mov
adc
jne
repz
jl
lock
dec
dec
movsl
enter
lods
fsubs
or
or
mov
ret
mov
dec
insl
cmp
xor
xchg
lahf
aaa
mov
cmpsl
adc
push
jo
scas
subb
push
cmp
or
bound
mov
and
pop
mov
mov
sarb
dec
xchg
or
iret
int3
sarl
xchg
stos
out
addl
sti
jnp
aaa
mov
scas
adc
mov
lahf
ffreep
daa
shrl
fiadds
push
xor
jecxz
ficomps
mov
lods
adc
mov
shlb
dec
and
adc
inc
pop
mov
pop
aad
sbbb
pop
cmp
nopl
outsb
jb
mov
adc
dec
inc
cs
and
lret
jp
adc
sub
add
js
int3
sub
insl
scas
call
mov
icebp
aas
and
jge
or
inc
pop
inc
outsb
fildll
repnz
lea
adcl
push
aad
sub
xchg
xchg
mov
push
mov
loopne
pop
xlat
fistpll
mov
loope
mov
cmp
push
stos
daa
ljmp
xchg
xchg
mov
push
push
or
add
mov
jle
int
pop
pop
outsb
cmp
mov
lahf
cmpsl
and
insl
mov
pusha
ja
inc
movsb
popf
jbe
jae
clc
fnstcw
pop
xchg
inc
mov
lret
xor
pop
call
jae
jecxz
mov
gs
cmp
pop
xorl
repz
rorb
inc
mov
xor
push
addr16
repz
sub
aas
mov
xchg
add
test
inc
fcomi
movsl
inc
ja
push
mov
push
push
dec
sbbl
out
jg
stos
or
in
adc
mov
repz
test
enter
mov
js
shll
insl
ret
call
repnz
stos
cmpsb
sbb
inc
adc
dec
lcall
scas
gs
pop
add
jmp
pop
data16
and
into
clc
decl
movsb
icebp
popf
ja
int3
and
adc
aaa
cmpsl
cmp
push
gs
jb
adc
out
test
xor
sbb
movsb
mov
jmp
pop
push
push
movsl
or
imul
lods
test
pop
dec
cmp
andl
jge
xchg
cmp
dec
or
clc
inc
iret
mov
sti
test
fsts
inc
pop
sub
cmpsl
out
push
lahf
stos
gs
inc
jp
popa
cmp
fildll
pusha
int3
or
mov
out
icebp
cmc
popa
outsl
adc
sahf
into
cmp
sbb
push
xchg
subl
xor
dec
or
add
mov
dec
or
add
sbb
inc
insl
sbbb
adc
dec
cld
xlat
fstps
pop
xchg
fldt
dec
mov
xlat
mov
clc
or
in
cli
stc
mov
out
lahf
iret
fdivrs
stc
ficoml
mov
shrb
rcrl
sbb
je
jl
sahf
mov
lret
mov
movsl
push
dec
adc
add
in
test
icebp
stc
mov
jb
cli
cs
add
stc
gs
jp
cld
mov
adc
and
mov
movsl
outsl
fists
das
mov
jg
push
jb
ret
in
jns
addr16
xchg
pop
jecxz
cli
or
push
and
xor
push
adc
sarb
dec
dec
out
pop
out
arpl
imul
je
xor
sbb
dec
mov
cmpl
clc
lret
test
mov
xlat
add
loopne
cmp
sub
pop
xchg
out
movsl
jl
jmp
mov
mov
fcmovnb
sahf
xor
out
dec
mov
aas
and
sbb
into
and
push
pop
outsb
cmp
repnz
addr16
jnp
je
jb
fisttpl
adc
xchg
jno
das
dec
adc
jno
pop
ja
popl
cmp
iret
inc
lret
sti
push
push
push
shll
xor
add
sbb
cmpsl
rol
xor
hlt
jne
dec
push
arpl
xchg
jbe
or
pop
inc
lods
sub
adc
push
xor
and
add
test
or
mov
pop
inc
and
fnstenv
inc
jl
movsb
pop
xchg
nop
jo
push
xor
cmp
int
mov
lods
add
ficompl
dec
inc
sub
sub
sbb
inc
lock
xlat
sbb
loopne
mov
cltd
ret
fxch
clc
aam
icebp
or
jl
pop
and
mov
mov
movsl
or
jmp
or
xchg
adc
popf
or
push
outsl
dec
repnz
push
int
aam
and
and
or
daa
inc
cmp
sbb
popf
jg
negl
jl
daa
inc
icebp
cmpsw
ret
sti
lock
adc
fadds
mov
xor
imul
mov
fnsave
fcmovbe
je
ss
insb
int3
ds
sbb
pushf
gs
ret
xor
cli
lea
inc
in
jb
hlt
cmp
lcall
out
mov
pusha
and
inc
push
pop
popf
repz
js
aam
imul
mov
jno
sbb
cmp
or
mov
mov
and
adc
and
out
iret
cli
or
jp
dec
pop
ds
jmp
mov
stos
xchg
mov
or
les
fwait
arpl
mov
iret
inc
pop
mov
mov
and
in
pop
cmp
or
loopne
push
ds
xchg
adc
fistpll
cmpsb
pop
fwait
adc
in
lret
cmpxchg
enter
arpl
mov
mov
dec
jb
and
orb
fucomi
je
jmp
and
out
cwtl
push
mov
adc
js
pop
inc
mov
bound
xchg
cmp
push
ds
adcb
xor
repnz
fbld
jl
shlb
neg
ljmp
pop
lock
push
sub
adc
ret
je
bound
jle
dec
pop
or
dec
mov
push
movsl
xlat
aaa
movsl
or
arpl
push
dec
ds
mov
push
aam
add
popf
jae
adc
adc
or
stc
inc
cli
push
xor
mov
mov
and
les
mov
lret
sti
faddl
add
bswap
popa
rol
popf
and
pop
jmp
enter
and
push
inc
jo
adc
repz
enter
push
loop
in
inc
push
outsb
cmpsb
sahf
mov
pop
xchg
jo
cmc
inc
push
push
sahf
sub
jb
ss
lock
jecxz
movsl
nop
sbb
xchg
jmp
mov
add
jnp
repnz
in
dec
lods
jno
cmc
test
push
or
stc
test
jo
fstps
mov
cmc
xchg
push
dec
push
pop
ljmp
ret
shr
popf
push
pop
mov
rcl
push
cmpsl
fwait
mov
lds
xor
xchg
inc
jb
and
dec
dec
addr16
shlb
jp
inc
mov
sbb
xchg
push
mov
js
mul
xor
mov
and
inc
in
push
ret
inc
int3
popaw
dec
mov
add
adc
hlt
in
jae
outsl
repnz
jb
and
cmp
pusha
fsubrs
sub
mov
test
pop
ret
xchg
fmul
in
fcmovnb
insl
and
loopne
addb
jbe
xor
push
jb
xchg
pop
or
cmp
sub
stos
rorl
lea
or
mov
leave
out
inc
push
sub
pop
xchg
push
test
inc
loop
addb
in
aas
shrb
test
data16
outsl
fistl
imul
sub
leave
je
cli
cwtl
fnsave
fcoms
lret
movsb
xchg
loopne
scas
xchg
aaa
ss
subl
lods
xlat
mov
or
decl
mov
notb
push
mov
rcl
call
notl
cmp
inc
add
inc
ret
push
in
inc
cmp
jno
insb
xor
add
cmp
cltd
pusha
sub
inc
mov
aam
loope
mov
jb
repnz
ss
out
fisttps
and
ret
mov
popa
pop
push
jge
inc
mov
xlat
mov
std
out
cld
jecxz
cmpsl
jp
jmp
or
in
js
mov
or
adc
in
jmp
adc
dec
in
movsb
lock
mov
xor
mov
lahf
aaa
sarl
dec
sti
xor
sbb
sub
xchg
sbb
mov
cmc
sbbb
adc
in
jp
subb
mov
fadds
xor
mov
loop
decl
add
loop
add
xchg
rorl
aas
push
ret
movsb
xlat
sahf
adc
aas
fdiv
add
jnp
outsb
test
fisttpll
ljmp
inc
pushf
or
dec
add
rorl
inc
outsl
daa
in
in
stc
scas
sahf
stc
and
lds
adc
lock
popf
mov
sub
xchg
add
loopne
int
inc
push
jo
inc
add
adc
mov
loop
cmp
repnz
lock
ss
pop
jle
test
test
popa
addr16
loop
cs
sti
pusha
into
pop
add
jne
mov
jb,pt
es
rol
inc
icebp
outsb
xor
add
mov
out
pop
je
fcoms
pop
fldl
sub
jb
jne
inc
pop
cmp
sbb
cmp
add
add
jp
jmp
push
jno
mov
fistl
rorl
mov
fwait
in
xor
cwtl
push
cwtl
lock
divl
inc
hlt
test
data16
imul
lret
mov
or
mov
ret
mov
mov
mov
adc
notb
xor
and
inc
mov
xor
mov
sbb
lods
jb
sub
adc
aas
xor
push
ja
or
call
cmp
mov
xor
xor
mov
push
mov
hlt
scas
and
fucomip
shrl
and
in
mov
push
movsb
jmp
iret
dec
xchg
test
popf
lret
adc
mov
mov
ret
jle
sbb
cmc
rcll
dec
mov
push
mov
xchg
fisttpl
int3
push
test
and
mov
mov
subb
cwtl
popf
xor
pop
inc
dec
and
and
leave
repz
nop
mov
outsb
repnz
shr
rcrl
pushf
sbb
adc
arpl
lds
pop
cmp
ja
incb
cmp
cmpb
out
cmpsb
adc
cmp
sub
pop
lock
cs
add
mov
fisubs
dec
adc
pusha
loope
sub
das
lret
addr16
push
mov
xor
cmp
test
outsb
testb
xchg
mov
mov
sub
xor
sub
lds
pushl
sti
lret
sbb
sti
mov
xchg
hlt
nop
lahf
fstl
xor
mov
insl
jecxz
mov
rcrb
sahf
cmp
in
hlt
mov
jecxz
mov
outsb
aaa
mov
outsl
es
fmuls
pop
dec
push
inc
test
shl
rorl
adc
imul
xor
pusha
lock
and
das
je
mov
popf
pushf
push
movsl
jecxz
lds
push
repnz
or
jg
int
jmp
cwtl
imul
aam
and
sub
andb
xchg
push
icebp
or
cs
lods
icebp
lock
adc
scas
inc
rcll
inc
sar
clc
push
imul
inc
enter
shll
hlt
nop
sub
lods
add
push
test
shrb
pop
js
add
sub
mov
lret
stos
mull
or
xor
xchg
and
test
cmpsl
addr16
mov
xchg
nop
mov
cmc
xor
adc
pop
subb
mov
mov
imulb
or
or
movsb
jg
mov
sub
mov
or
xchg
out
and
cmc
dec
nop
orl
inc
outsb
sub
mov
faddp
cs
xor
fs
iret
xor
into
je
fldcw
gs
std
pushf
mov
mov
mov
fs
cmp
es
sti
xlat
popf
std
movsb
add
loope
cmc
int3
ficompl
pop
xor
repz
sbb
jge
mov
lret
sub
lahf
jbe
mov
dec
xchg
and
push
mov
or
or
xchg
mov
and
out
movsl
imul
mov
repz
test
lret
in
mov
outsb
addl
cmp
xchg
sbb
stos
add
clc
enter
and
insl
lea
push
outsb
shlb
int3
rcrl
xchg
out
inc
sub
xor
lcall
pop
push
cld
imul
andb
nopl
aad
cmpb
or
sbb
arpl
pop
aad
push
lcall
add
aas
push
clc
fmuls
cmpsb
dec
cmp
shlb
sbb
out
repnz
mov
imul
jp
mov
adc
mov
mov
dec
or
jne
cli
les
add
sbb
jmp
add
dec
add
dec
cmpsb
scas
push
cld
outsl
add
repz
fidivs
push
pop
lods
stos
add
xlat
cmp
xor
or
rcr
xchg
pusha
cmp
xor
jne
adc
adc
adc
xor
imul
mov
movsl
sub
mov
jnp
lock
and
add
adc
sbb
enter
std
xchg
xchg
mov
sub
js
xorl
xor
out
mov
xchg
xchg
and
inc
push
paddsw
lret
and
xor
push
pop
mov
push
inc
cmp
sbb
test
aas
fisubrs
mov
call
jmp
lods
out
xchg
orl
out
into
les
xor
sbb
mov
dec
repz
aam
adc
mov
rcr
cmpl
adc
testl
cmp
mov
sbb
cmpsl
shrb
mov
lods
in
jecxz
outsb
repz
jb
mov
adcl
mov
push
lds
add
mov
mov
adc
mov
int3
ret
mov
outsl
mov
call
jp
cmpsb
xchg
sbb
repz
pop
cli
repnz
jae
mov
or
outsl
xor
jbe
add
in
rcll
sti
loopne
mov
sbb
aam
mov
jns
sub
adc
aad
sbb
sti
test
jne
sbb
fcmovb
insb
shrb
out
or
dec
out
xchg
xchg
dec
lock
les
adc
push
mov
lcall
into
lods
shlb
ds
in
add
inc
aas
mov
stos
dec
ja
in
jmp
push
stos
cmp
sub
lock
xor
push
mov
jae
ficomps
add
jae
ja
mov
fldl
insl
lds
push
cmc
mov
or
pushf
mov
ja
add
mov
cmp
enter
pop
js
out
pusha
or
icebp
sbb
xchg
mov
pop
jo
sarl
mov
jno
mov
in
cmp
inc
popf
pusha
adc
inc
dec
xchg
jnp
lcall
sub
addr16
pop
mov
xchg
push
mov
mov
lods
orb
mov
loop
cmp
mov
arpl
xorb
lahf
clc
into
fadds
test
scas
shl
adc
mov
sti
add
dec
in
xchg
mov
test
add
inc
inc
lea
jbe
mov
push
dec
xor
rcrb
sbb
mov
lahf
out
cmpb
lahf
jl
fs
shl
jns
lds
cmpsb
dec
loop
fdivl
insb
add
xchg
pop
mov
outsb
popf
mov
mov
cmp
enter
inc
mov
mov
insb
cs
fdivl
xor
ja
sbbl
iret
or
scas
xchg
test
daa
push
dec
mov
jns
sti
xor
repnz
push
loopne
add
notl
std
fcmovbe
rorb
inc
int3
mov
ds
fisttps
jecxz
jns
repnz
pop
mov
outsl
into
roll
inc
mov
push
test
mov
cmp
lret
inc
iret
insl
jp
ret
push
adc
or
xor
sub
push
mov
nop
dec
push
cmp
xchg
fs
fcmovnu
push
mov
cmc
sbb
xchg
cmp
jns
call
push
adc
jle
popf
sub
repz
inc
fldcw
mov
lret
outsb
jmp
or
das
in
xor
ja
fsubl
mov
inc
mov
xchg
loopne
xor
je
loope
jmp
jp
lahf
data16
in
mov
push
mov
and
clts
mov
add
test
lods
mov
mov
insb
or
jne
in
xchg
xchg
push
fldt
movsb
dec
cmp
es
test
lcall
aaa
testb
mov
cmc
gs
xchg
shr
movb
sahf
fs
rclb
inc
mov
mov
inc
rcr
insl
addr16
xchg
cmp
jnp
and
adc
dec
jmp
cmp
pop
pop
scas
orb
sub
cmp
repnz
repnz
push
dec
mov
inc
ljmp
int
andb
flds
add
daa
mov
test
xchg
rclb
mov
mov
lret
jmp
mov
imull
xchg
jnp
push
stos
pop
loope
fmulp
out
les
aad
sub
push
aaa
lods
aad
jns
lock
cmc
push
inc
cmpsl
add
in
sbb
int3
adc
ljmp
adc
and
jbe
aaa
andb
ret
iret
shr
inc
in
pop
sahf
add
stc
xchg
push
out
pop
inc
sbb
push
cmp
shrl
and
lods
or
loope
mov
sbb
sub
arpl
lahf
cmp
or
cmp
lea
add
test
addr16
movsb
lret
leave
ljmp
cltd
sbbl
rolb
inc
testb
loope
push
test
xchg
sub
lret
sub
cmc
push
pop
clc
test
negb
mov
add
mov
xor
out
sub
xchg
cs
sbb
mov
ds
mov
fisttps
jnp
dec
std
push
pushf
push
cmp
movsbl
jge
in
sbb
xchg
insl
mov
ds
loop
imul
into
icebp
ret
adc
ret
add
xchg
mov
or
sbb
pop
xchg
testl
push
lahf
inc
mov
xor
fisttpll
fisttpl
adc
leave
sub
repnz
cmc
sti
jle
shll
repz
test
jmp
xor
iret
sbb
rorl
sti
ljmp
movsb
jae
rorb
lret
mov
pop
out
lods
insl
test
testb
add
addr16
movsb
pusha
push
push
push
bound
jmp
mov
or
movsb
jns
add
test
or
mov
xlat
sub
mov
pop
gs
ficoml
adc
aad
jg
cmp
inc
dec
imul
jp
das
lea
call
int
es
repz
fsubl
cmp
ss
into
cmpsb
int
push
lahf
sbb
jae
jle
mov
add
mov
mov
adc
xchg
aas
enter
out
mov
aas
pop
sahf
mov
dec
bound
sub
push
xchg
ljmp
mov
jge
cmp
push
iret
stc
push
pop
cmp
test
insb
xlat
or
fbld
push
addr16
pop
daa
test
aam
cld
xchg
push
xor
negb
les
mov
sub
mov
push
iret
sbb
inc
cld
mov
sarb
in
loope
push
loope
pop
xchg
push
mov
adc
fidivrs
fsubp
cmpsl
jbe
adc
orb
and
mov
adc
adc
adc
cmpsl
mov
dec
les
movsl
adc
jne
in
mov
data16
jo
push
push
xor
int3
ja
add
rcll
repz
mov
dec
in
sbb
xchg
sbb
lea
jns
aad
movsl
cwtl
in
xchg
jnp
mov
fimull
sahf
pop
mov
push
adc
loopne
and
mov
xlat
adc
dec
sahf
es
jecxz
mov
sbb
push
jno
cs
mov
jge
lods
xchg
add
int3
dec
pusha
lods
jge
add
push
mov
sub
hlt
mov
mov
mov
xchg
iret
xchg
dec
dec
and
mov
movsb
test
push
decl
dec
cltd
pop
mov
jae
mov
lds
xchg
iret
dec
jg
js
add
sub
pop
cmp
ret
jle
xor
call
xor
sahf
mov
stc
insl
bound
lock
lret
sub
sbb
mov
cld
mov
push
dec
cmpsb
inc
pop
add
rolb
jp
xlat
sbb
xchg
mov
lods
incb
outsl
adc
jle
imul
push
push
add
int
add
repz
or
fmull
test
popf
sbb
leave
fadd
jo
mov
pop
mov
adc
ljmp
push
sbb
repnz
sahf
rorb
adc
ljmp
sub
lcall
es
test
add
mov
scas
shll
mov
jg
lods
cmpsb
dec
jle
std
push
mov
fld
hlt
or
imul
mov
mov
lds
shrl
dec
aaa
ljmp
xchg
imul
inc
dec
dec
sbb
shr
cwtl
cmp
mov
cld
push
movsb
jae
sub
lods
test
leave
or
or
sub
enter
nop
jnp
insl
popa
jle
mov
movsl
push
mov
dec
xor
popa
es
lret
cmp
push
ret
or
aam
and
lods
xor
push
mov
xor
push
push
pop
sbb
push
add
dec
jae
jbe
jns
fcoml
mov
inc
pop
lods
push
adc
mov
pop
ljmp
testl
inc
scas
dec
daa
push
mov
cld
fs
inc
fwait
arpl
mov
mov
xchg
xor
push
pop
int
inc
mov
fisttpl
vandnps
es
push
idiv
inc
dec
out
scas
push
xor
cltd
icebp
mov
dec
cmpsl
lahf
orl
repnz
sar
stc
xchg
add
xor
mov
rorb
test
or
sub
dec
dec
loope
lock
fucomi
xor
out
push
rol
cwtl
cltd
mov
movsb
adc
clc
push
jbe
lahf
and
sbb
inc
or
push
std
jecxz
adc
jnp
sub
ds
fucomip
push
mov
lds
shl
rorb
pop
aaa
jno
fidivrs
add
andb
in
sbbb
nop
std
fdivs
sti
mov
les
test
test
in
shlb
xorb
push
inc
ljmp
test
push
mov
mov
int3
jp
sub
loopne
adc
cld
and
add
mov
jnp
sarb
jnp
push
sbb
ret
out
xchg
or
jmp
jne
sbb
pop
sub
xchg
push
mov
adc
jo
adc
jno
inc
int3
dec
mulb
adc
or
push
aad
cmp
les
int
movsb
lcall
add
ret
pop
arpl
hlt
sti
mov
jae
push
shrb
adcl
adc
and
lock
mov
inc
mov
inc
nop
inc
ja
jno
arpl
ljmp
mov
xchg
lret
mov
mov
xor
push
in
loopne
jl
push
and
xchg
dec
dec
js
sub
popf
sbb
shrl
movsl
cmpsl
cmp
lahf
mov
xlat
int3
sub
push
lds
shlb
jl
add
push
mov
jno
push
fdivrs
ret
lock
jmp
inc
mov
or
test
enter
lret
dec
pop
mov
out
repnz
movsl
cmp
pusha
sub
addr16
testl
cmp
stc
sub
fsubrs
shr
movsb
mov
in
cwtl
cltd
push
roll
loopne
insl
lcall
pop
xchg
ljmp
ret
popa
rolb
loope
cmp
mov
add
gs
push
fcomps
jnp
jns
sahf
mov
repz
jno
mov
sbb
mov
out
xchg
pusha
pop
cmp
jle
pop
movsb
pop
testb
dec
xorb
push
fstl
lods
test
or
sti
mov
mov
xchg
mov
fldl
js
lods
imul
popa
adc
sarb
add
cmp
stos
mov
cmpsb
hlt
mov
add
rcrl
mov
rorl
insl
test
inc
adcl
std
scas
inc
mov
or
sbb
sbb
shlb
shl
leave
mov
fnstenv
stos
cwtl
fldl
sub
cmp
insb
sbb
decb
and
repz
insb
pop
pop
movsb
inc
ret
scas
xlat
cmc
xor
pop
push
ret
dec
das
dec
dec
push
xchg
mov
stos
aad
lret
xor
mov
cmpsl
or
push
shlb
test
pop
aaa
add
push
xchg
jbe
dec
mov
je
jns
imul
mov
dec
xor
popf
jb
imulb
js
gs
jo
lret
sub
sarb
int3
popf
sbb
sbb
sbbb
sti
divl
mov
fimuls
sbb
int3
jne
insb
dec
add
mov
jl
nopl
xchg
and
scas
loop
clc
xchg
into
xchg
xchg
adc
lcall
jge
fld
push
insl
movsl
adc
arpl
rclb
mov
xlat
fsubrs
mov
mov
les
scas
stc
pop
push
xchg
and
jo
out
inc
pop
jns
sub
sbb
std
inc
scas
mov
cmp
cmp
lcall
scas
call
dec
sbb
cli
outsb
and
jns
cmp
add
insl
cmp
insb
mov
cmpsb
xor
nop
push
mov
pop
sub
testb
cmp
repnz
ljmp
lcall
pop
push
jecxz
add
icebp
aad
sbb
test
cmp
mov
fs
dec
pop
jecxz
icebp
sub
dec
mov
xor
jmp
stos
pop
cmpsl
jmp
or
jp
dec
lea
daa
fiadds
lods
or
cmp
push
sub
jl
xor
leave
jp
inc
fs
leave
push
cltd
cld
dec
dec
mulb
push
add
cs
fcomp
or
pop
pop
inc
ss
cmp
and
jp
fmul
mov
sbb
jg
jmp
ret
sbb
je
cmp
and
movsl
sub
aad
test
movsl
mov
fwait
or
dec
inc
add
loopne
pop
pop
xchg
cmp
fnstsw
mov
add
scas
xor
jl
inc
into
cmp
pushf
or
fwait
int
jp
dec
sti
test
jge
fs
insl
adc
sub
xchg
lcall
lret
iret
dec
and
jne
add
mov
sahf
shrb
mov
lods
dec
popf
push
insb
fsts
xor
mov
xlat
xchg
adc
jae
mov
stos
push
ljmp
divb
mov
aaa
sub
dec
test
push
jecxz
enter
xchg
ret
lcall
lret
xor
pushf
sbb
movsb
adc
cmp
or
pop
and
pusha
cmc
lahf
scas
or
insb
mov
cmp
and
mov
lock
into
sbb
fnstsw
add
es
out
add
mov
pop
test
mov
imulb
cmp
imul
jae
neg
icebp
lcall
popf
mov
and
push
pop
loope
insl
pop
repnz
push
aaa
mov
and
push
aad
jno
xor
xchg
push
xchg
test
aas
sbb
sub
push
push
mov
es
push
xchg
fisubl
dec
daa
ret
mov
ja
add
cmp
cmp
hlt
filds
in
arpl
iret
fsubr
leave
jne
xor
shrb
arpl
leave
sub
aas
ss
leave
inc
and
hlt
push
outsb
mov
adc
mov
push
cmpsl
data16
mov
inc
loop
inc
orb
jo
jae
popa
push
adc
jae
in
es
adc
inc
and
mov
sbb
xor
jns
push
sti
in
imul
jb
scas
imul
mov
mov
cmc
cmpsb
in
pusha
in
push
or
daa
xchg
mov
or
inc
in
mov
ss
push
aam
call
in
cmp
mov
mov
add
jmp
insl
xchg
mulb
fst
adc
lcall
sub
imul
iret
dec
fisttpll
and
push
xlat
push
xor
adc
mov
mov
stos
inc
xchg
scas
cld
adc
cmpsl
gs
fisubl
jge
mov
cld
bound
divb
mulb
dec
pop
mov
sbb
adc
adc
or
insl
shl
cmp
mov
jne
mov
nop
insl
xor
sub
leave
inc
scas
cmp
lea
push
out
fidivl
jb
aas
xor
dec
mov
jl
das
outsb
ja
inc
mov
dec
xchg
sbb
int
pop
push
xchg
sbb
mov
bswap
cmpl
sbb
mov
out
adc
mov
xchg
stos
mov
mov
aas
hlt
lds
sub
mov
mov
mov
jp
stos
xor
push
lret
add
push
outsb
ljmp
lea
inc
pop
dec
lret
push
jno
enter
xchg
dec
rcll
push
fsts
xchg
cmpsb
test
test
data16
out
inc
sbb
xor
push
mov
test
popa
mov
sub
sbb
stos
aaa
rdpmc
mov
fidivs
inc
addb
adc
ret
mov
aas
push
aad
push
inc
daa
sub
add
js
dec
sbbl
leave
mov
sar
adc
or
in
sub
pop
movsb
push
cltd
outsl
notb
mov
pop
popf
sahf
notl
fcompl
inc
ja
in
call
dec
or
and
and
out
out
adc
faddl
cmp
stos
mov
dec
rcrl
inc
mov
mov
mov
adc
jl
mov
outsb
or
fistps
ret
das
pop
dec
and
lods
nop
stos
mov
sbb
iret
jmp
push
sub
or
jge
out
push
xchg
cmpl
mov
xchg
adc
clc
cli
test
mov
stos
jmp
push
lea
data16
xlat
mov
add
or
pop
jecxz
sbb
enter
xchg
mov
push
push
or
int
das
movsl
inc
enter
mov
mov
lds
xlat
cld
cmp
test
mov
lret
out
fcoms
add
cmp
push
mov
sbb
movsb
sub
call
push
shll
cld
fistpll
leave
insb
dec
and
in
cmp
lock
mov
add
lods
mov
inc
das
icebp
xchg
mov
gs
sub
pushw
mov
mov
fsubl
and
cmpsb
jb
dec
daa
lock
xorb
xchg
mov
mov
or
push
popf
mov
push
test
js
mov
std
mov
xchg
imulb
addr16
stc
notb
add
mov
daa
mov
out
lret
fldt
es
mov
lods
lcall
or
add
adc
scas
jmp
or
fucomi
inc
movsb
scas
bound
mov
imul
dec
jns
dec
jg
push
rorb
mov
pop
mov
mov
cwtl
adc
jmp
ror
pusha
add
pop
mov
fldenv
pop
xchg
cmp
pop
xor
inc
xorl
adc
sbbl
pusha
inc
push
je
xchg
xchg
rolb
shrb
test
cli
movsl
pop
in
cwtl
stc
adc
adc
insl
out
pop
int3
dec
fisttpl
xchg
ja
cmp
rcll
fdiv
int3
cmp
jb,pn
aad
insb
push
mov
cli
mov
inc
adc
lret
andl
inc
mov
push
inc
xor
lcall
mov
out
stc
sub
mov
into
push
scas
push
sbb
and
mov
inc
pop
loopne
xchg
fcomip
mulb
jge
aad
mov
xor
add
cs
add
jg
pminub
insl
xor
mov
bnd
mov
test
test
sub
stc
daa
cmp
loop
sahf
out
mov
movsb
loopne
fs
imul
add
mov
cmp
or
arpl
sub
mov
and
sbb
aaa
scas
cmp
out
fdivl
int3
dec
imul
push
inc
iret
mov
int
mov
ljmp
ficompl
out
rcrl
hlt
push
into
fiaddl
lcall
sub
push
and
inc
fadds
inc
mov
sub
adcl
scas
pop
pop
sbb
ja
fs
imul
xor
pop
shll
pop
and
sub
jge
xchg
mov
jbe
leave
sahf
cmpb
std
jae
in
das
mov
push
loop
roll
sub
outsb
sub
pusha
enter
push
insb
cmc
pop
hlt
dec
xor
mov
cmpb
out
aaa
out
and
or
adc
mov
and
jg
out
cmp
pushf
add
sub
imul
xorb
add
dec
jnp
ja
ss
out
sub
lahf
nop
jl
push
inc
popa
gs
xor
dec
in
daa
mov
or
js
std
out
cmp
sbb
daa
jmp
test
sub
jnp
aam
sbb
xor
int
sub
insb
outsl
pop
dec
fsubrs
mov
gs
imul
xor
aad
repz
dec
lock
and
ljmp
ret
cmpsl
mov
fldcw
pop
push
lds
and
inc
adc
jno
cmc
stos
jae
js
loopne
or
icebp
dec
ja
jp
pop
xchg
cmc
mov
loope
rorl
in
sbb
into
pop
imul
push
dec
int3
out
mov
dec
iret
or
std
sub
pop
pop
ljmp
imul
cwtl
mov
mov
xchg
sub
cltd
daa
sbb
pop
pop
cli
push
mov
xor
iret
add
hlt
dec
cmp
lods
jg
mov
mov
dec
dec
push
xchg
call
in
scas
mov
call
ret
dec
pop
rcl
adc
mov
adcb
xchg
arpl
jb
popf
stc
or
sarb
mov
add
mov
dec
pop
pop
ds
mov
mov
and
call
shrl
jp
lret
bound
cmpb
mov
es
aad
dec
jmp
dec
outsb
lock
push
orb
xor
stos
imul
add
ss
xchg
testb
lods
pop
xchg
xchg
andl
lahf
dec
insl
lret
inc
add
imul
and
daa
imul
addr16
xchg
cmp
and
xchg
mov
scas
xchg
or
adc
push
jno
call
pusha
and
out
imul
and
adc
lret
jbe
xchg
and
out
pop
enter
dec
xor
pop
xchg
outsb
xchg
in
cmp
adc
xchg
mov
adc
adc
mov
or
cmp
add
dec
push
mov
mov
pop
xlat
jl
xchg
iret
imul
mov
sbbb
pop
cmp
xchg
repz
rcrb
lret
fstpl
in
xor
bound
or
xlat
flds
aad
mov
or
repz
pop
jns
push
mov
in
fwait
out
subl
mov
mov
hlt
popa
xor
icebp
fbstp
in
push
xchg
xchg
mov
movb
test
outsl
out
add
push
adc
addr16
cli
dec
test
xlat
lds
sbb
sbb
pusha
sbb
push
mov
mov
mov
sbb
or
push
jae
stos
in
cmpsl
pop
ljmp
jo
push
sub
mov
and
cltd
js
dec
cmp
and
imul
shll
ficoml
push
sarl
xchg
inc
xchg
test
pop
loop
xor
cmpb
mov
fcmovu
repz
xchg
lods
mov
es
dec
call
pop
xor
icebp
add
mov
or
arpl
test
pop
cmc
mov
adc
shr
rclb
fwait
sub
add
out
jae
or
sbb
cmpsl
bound
jbe
fldt
jge
mov
inc
push
adc
insl
jmp
lea
mov
in
leave
jle
pushf
into
gs
cs
cmp
test
lret
loop
push
nop
cld
fs
inc
inc
and
std
adc
xor
dec
xlat
adc
push
xchg
cmp
and
movsb
inc
push
hlt
movsb
sbb
cmc
xorb
cmp
push
fcoml
pop
lret
test
js
adc
add
fimull
and
dec
add
ljmp
test
add
in
lds
jmp
xchg
pop
xor
fmuls
push
cmpsl
mov
js
mov
mov
push
int3
xchg
push
mov
lahf
lds
mov
dec
bound
jmp
push
mov
cmpsl
hlt
mov
ret
scas
test
xlat
sbb
pop
pop
cmp
inc
popf
push
mov
xchg
jmp
xchg
mov
adc
cld
mov
stos
inc
adc
xchg
mov
xchg
cmpsb
out
xchg
add
xchg
out
push
mov
push
es
jmp
xchg
lock
cmc
daa
jbe
and
adc
dec
popa
nop
jb
mov
cmc
pop
fstps
sbbb
add
out
pop
mov
pop
mov
jne
push
pop
and
jl
cmp
aad
andb
sbb
sub
add
enter
jns
dec
jae
add
and
ss
into
fdivl
fisubs
je
les
cltd
sbb
rcrb
mov
cmpsb
lea
dec
addr16
int
xor
imul
push
sbb
dec
sbbl
enter
cli
hlt
and
add
and
and
ss
mov
iret
mov
gs
int3
mov
loop
push
xor
sbb
or
stos
bound
mov
mov
sbb
and
jbe
adcb
ret
mov
jno
js
ret
ljmp
and
lods
inc
lea
shl
sahf
and
inc
pop
out
lcall
repz
movsb
adc
aas
mov
xchg
jo
sbb
lds
ja
mov
inc
mov
cmp
in
mov
xlat
outsb
sbb
jmp
loopne
mov
iret
shlb
adc
daa
and
push
sbb
adc
push
std
fbstp
dec
imul
lods
or
popf
or
sub
mov
addr16
fwait
shr
xor
jge
push
adc
iret
sahf
or
out
sbb
es
cmp
or
das
out
xchg
jle
mov
in
push
fcomi
in
sub
pop
data16
mov
ds
xchg
vsqrtpd
test
pop
pop
ja
iret
lahf
in
mov
add
inc
mov
cmp
notl
cltd
mov
jmp
rcll
inc
cmp
popa
movsl
xchg
cmp
jo
pop
es
cmp
aam
pop
mov
gs
negb
pop
xor
push
es
mov
loope
adc
push
sub
or
push
mov
xorb
outsl
sahf
outsb
shr
in
mov
shrb
inc
mov
test
mov
mov
mov
cmpsb
push
mov
stc
sub
push
jno
pop
bound
xor
push
xchg
xor
pop
lahf
adc
aam
push
subb
cwtl
jecxz
add
pop
mov
inc
pushf
add
add
mov
notl
out
add
dec
fldl
jno
push
lcall
mov
and
jge
jl
and
ds
push
add
shll
inc
incl
imul
les
test
cmpb
push
pop
and
mov
inc
insb
push
cmp
loopne
sbb
das
out
das
fsts
mov
jmp
hlt
loopne
xchg
icebp
jecxz
mov
call
dec
xor
inc
test
jae
and
out
outsl
mov
push
xchg
jne
xchg
aad
or
mov
cmpsl
cld
sub
scas
imul
repz
daa
push
pop
lret
lock
mov
and
push
movsb
push
je
push
push
mov
jns
xor
or
or
clc
insb
push
inc
or
xor
sbb
loope
and
mov
mull
push
ret
jle
nop
sub
mov
sub
inc
xchg
xchg
out
adc
jle
inc
jmp
or
add
orl
add
loope
xor
xchg
in
repz
leave
mov
xlat
sub
mov
xchg
ss
push
xor
loop,pn
xchg
jecxz
out
mov
add
mov
cmpsl
xchg
mov
sbb
mov
pop
popf
mov
out
xchg
or
xchg
jns
ret
mov
pop
pop
cmp
ss
xchg
pop
jmp
push
mov
mov
mov
loope
mov
and
ja
repnz
les
sub
sbb
dec
mov
pop
cmp
fldt
lret
pusha
mov
scas
xchg
mov
stc
hlt
js
cltd
xchg
jge
mov
xchg
hlt
leave
or
mov
lret
push
xchg
adcb
lods
sbb
mov
dec
cmp
mov
mov
incl
jecxz
xchg
jp
daa
fbstp
cmpsb
mov
mov
mov
or
popf
or
push
ret
imul
cmp
mov
xor
push
push
ret
mov
mov
sub
xor
pop
fwait
xor
nop
mov
lret
sub
test
movsl
fisubl
orl
cmp
push
dec
call
push
jbe
sbb
fnstsw
push
sub
xor
pop
push
or
sub
or
cmc
inc
push
push
xor
in
xchg
dec
ljmp
fcom
sbb
lahf
mov
push
sahf
push
xchg
and
dec
xor
inc
sbb
les
lods
scas
jmp
push
loope
xor
dec
mov
arpl
sub
mov
imul
enter
ljmp
jb
sbb
insb
jbe
inc
shlb
jmp
pop
pop
es
mov
adc
sahf
mov
mov
xchg
pop
in
cmp
inc
je
and
test
and
mov
xor
out
fsubr
cmp
cmp
lea
sbb
arpl
cmp
push
or
mov
pop
sbbl
xchg
aam
cmp
loopne
dec
movsl
mov
fcoms
sbb
enter
inc
pop
adc
das
fdivs
pop
sub
popf
int
cwtl
inc
jl
xchg
and
jne
insl
int
into
sbb
je
push
pop
push
data16
call
xor
mov
rclb
fdivrl
in
stc
inc
fistpl
or
fsubp
stc
shll
jae
mov
sub
sahf
inc
push
push
jge
jne
sbb
mov
cwtl
sub
mov
insl
jae
shrl
dec
insl
in
pushf
es
loope
mov
fabs
jp
aaa
xor
int3
jmp
mov
int
test
add
dec
mov
mov
adc
add
sub
lahf
xchg
xor
test
out
pop
repz
inc
ficomps
jbe
add
int3
mov
sbb
dec
and
or
lret
inc
icebp
cli
mov
pop
ffreep
jmp
stc
mov
xchg
mov
dec
negb
in
int3
pop
mov
inc
outsl
cmpsl
push
repnz
ret
dec
into
scas
pusha
cmc
pop
repz
or
mov
adc
pop
cmp
add
ds
cmp
dec
mov
rcl
out
fstpl
jbe
jle
in
cmpl
lahf
jmp
fwait
movsb
inc
mov
xchg
imul
xor
mov
sbb
inc
fisttpl
repnz
sbb
pop
and
sub
das
pusha
pop
xchg
mov
lret
jl
add
cli
add
push
js
insb
sub
repz
cld
sbb
jmp
jbe
jl
inc
mov
movhps
push
mov
mov
xlat
frstor
mov
cli
pop
addl
fwait
in
pop
pop
fistpl
aad
fstl
repnz
pop
inc
xor
shrb
nop
dec
cld
pop
adc
mov
push
shll
scas
mov
sarb
xchg
push
and
mov
sub
mov
mov
mov
mov
dec
mulb
sub
xchg
add
jne
sti
push
pushf
ds
xlat
inc
pop
jecxz
pop
dec
or
pop
cmp
addr16
shlb
xchg
push
add
mov
sub
and
mov
cli
push
ljmp
xor
dec
adc
pop
aam
add
iret
adc
in
jl
loopne
push
sub
xor
sub
fdivp
outsl
addr16
jge
xchg
mov
mov
xchg
pop
scas
and
pusha
mov
or
or
sub
cltd
inc
into
add
xor
pop
pop
mov
lea
jns
rol
mov
rol
arpl
pop
jmp
call
cmp
inc
and
adc
add
mov
aaa
das
je
fisubrl
shrb
pop
cmpsl
loope
add
aam
into
push
mov
cmpsl
cmp
adc
mov
outsl
icebp
popa
movhps
lahf
push
mov
sbb
fidivs
sysenter
repz
pop
jle
fimuls
cs
cmc
and
fs
scas
pop
loopne
mov
xchg
or
sbb
sarl
cltd
ja
inc
jmp
js
or
or
cmp
jno
sub
cld
js
fnsave
add
mov
or
test
je
push
imul
nop
sub
inc
fimuls
out
adc
pop
cmp
sub
pop
inc
xlat
add
xor
sub
cmp
sbb
mul
in
cmp
push
cwtl
jp
and
lea
lea
test
mov
add
test
lret
fsubr
mov
iret
fs
shl
das
shll
arpl
mov
add
pushf
mov
pusha
pop
jo
mov
addl
leave
out
test
js
roll
mov
rclb
enter
mov
mov
in
mov
jae
cmp
push
mov
mov
or
push
in
mov
cmp
arpl
daa
mov
fdivs
orb
js
mov
xor
cli
repz
fistps
jne
fdivl
rcrb
xor
push
xchg
icebp
aas
push
repnz
push
or
jnp
sub
lcall
leave
jmp
push
fildl
out
outsl
rcr
outsl
leave
push
into
cli
pop
or
sub
popa
mov
mov
dec
xchg
push
pop
lods
das
in
arpl
mov
int3
mov
mov
fwait
lret
popf
insl
push
sbb
xchg
fs
pop
shll
push
xchg
xor
imul
loopne
out
mov
das
mov
push
mov
xor
dec
or
das
lods
inc
or
pop
jae
mov
je
je
test
fmull
xchg
cs
add
sahf
sbb
inc
mov
hlt
xchg
dec
daa
adc
in
enter
jbe
xchg
cmpl
sub
xchg
aaa
in
es
ja
push
out
mov
xor
inc
dec
sub
fnstenv
push
dec
mov
addr16
pop
cmp
xlat
sbb
into
jmp
ds
xlat
mov
outsb
inc
xchg
mov
pop
jo
mov
in
jge
das
pop
inc
xchg
stos
out
jmp
sub
fs
clc
xor
arpl
stc
scas
adc
adc
cmpsb
jmp
cwtl
cmp
adcb
fucomip
mov
test
jge
jo
cmp
insl
loopne
js
mov
xor
xchg
push
ljmp
fmulp
jge
repnz
pop
outsb
mov
xor
xor
sub
cmp
rcr
data16
mov
repz
and
test
loop
clc
movsl
sub
inc
fs
mov
sub
enter
mov
or
shll
mov
sub
aad
movsl
cs
mov
xor
cmpsb
push
add
xchg
js
lea
iret
mov
xor
out
add
push
pop
enter
push
testb
cmp
mov
mov
addl
mov
sbb
or
or
adc
stos
mov
xchg
add
out
enter
jp
jnp
mov
xchg
pop
push
rcrb
addl
push
mov
and
and
outsb
push
or
and
xchg
or
orl
in
sub
cli
adc
sub
adc
rclb
push
lods
in
xor
cmp
cmpxchg
movsb
cmp
imul
add
cltd
mov
popa
out
adc
jg
add
adc
jg
lds
shr
pusha
ss
cli
cwtl
loopne
addr16
std
leave
in
into
test
push
mov
dec
lcall
cmc
or
int
add
adc
mov
insl
dec
pop
out
and
bnd
insb
xchg
outsl
sbb
pop
aad
repz
cmp
lahf
pop
dec
mov
dec
loope
fcomip
lret
into
leave
iret
rclb
aad
jbe
mov
xchg
mov
lock
testb
int
sahf
lcall
iret
cld
push
jbe
cli
les
fdivr
mov
mov
xor
mov
out
adc
mov
cli
mov
mov
adc
outsl
inc
sub
lods
jno
mov
cld
mov
mov
push
popf
mov
mov
sbb
cmp
push
outsl
jmp
lods
and
xor
movsb
shll
sbb
das
adcb
ret
int3
mov
data16
sbb
push
or
sub
lea
pop
cltd
hlt
stos
sbb
sahf
pop
or
stos
arpl
addb
aaa
pop
cmpsl
mov
sbb
dec
shl
jge
mov
outsl
mov
imul
gs
leave
cld
push
jnp
ss
adcb
addr16
dec
add
in
lods
pop
mull
pop
jne
hlt
lds
xchg
xor
mov
mov
pop
adc
push
dec
arpl
hlt
imul
into
xchg
movsb
pop
mov
mov
and
xlat
jo
lcall
and
mov
lea
in
cmp
push
mov
cmpsl
pop
push
std
std
cmp
pop
mov
rcrb
std
rcrl
push
not
cwtl
mov
sub
push
add
and
add
loope
or
pusha
adc
and
mov
fs
mov
imul
cli
or
adc
xor
mov
fcmovnu
leave
pop
popf
daa
xor
ss
lcall
pop
push
rcl
push
loopne
or
push
xchg
dec
js
and
icebp
das
ret
cmp
cmp
mov
iret
lret
cmpsl
cmp
xor
xor
cmpsl
pop
sbb
out
fld
lock
pop
push
sub
sub
xchg
stos
fcmovne
ret
xlat
mov
es
sbb
ret
mov
imul
testb
sub
outsb
cmpsl
adc
imul
addr16
addr16
fbstp
cmp
cmp
mov
fwait
mov
cmp
jno
or
sbb
in
jle
mov
jnp
fwait
in
subl
movsb
mov
mov
fst
add
dec
mov
pop
jecxz
cmp
loopne
lret
in
mov
xchg
push
fdivr
in
jne
and
sub
rcll
scas
or
add
stc
jb
pusha
in
sbb
fsts
cs
cld
insl
dec
js
inc
push
dec
xchg
daa
pop
inc
or
sahf
mov
xchg
or
inc
inc
lcall
iret
cli
out
cmp
cmpsl
pop
inc
lock
insb
shrb
aas
loopne
xchg
inc
js
pop
popf
sub
fwait
cmpsb
jp
and
mov
ljmp
dec
cmp
push
andl
mov
inc
sti
add
std
xor
js
ja
sti
xchg
lret
mov
cmp
test
or
sub
cwtl
xor
lcall
push
repnz
sbb
mov
jp
mov
adc
xchg
adc
outsl
scas
and
jmp
sbb
cmp
enter
add
out
repnz
sub
repz
mov
repnz
mov
mov
jmp
xchg
mov
add
xor
mov
or
aas
ret
and
pop
adc
repnz
inc
aad
lods
sub
jns
mov
adc
xchg
andb
sbb
int3
lods
lahf
std
pop
mov
push
hlt
pop
loopne
lock
or
sbb
sbb
mov
dec
and
mov
dec
xchg
sub
pop
ret
inc
xor
mov
decb
loop
mov
push
cmp
pusha
push
test
push
lret
sbb
push
mov
data16
mov
or
clc
fsubs
jnp
out
jmp
sub
jno
repnz
add
lcall
jo
push
jecxz
or
lods
adc
adc
popa
frstor
data16
std
cmp
or
inc
sahf
sub
dec
fs
push
ss
push
addl
lods
in
fisttps
es
ja
jno
outsl
sub
outsl
jnp
in
bound
push
or
clc
imul
out
add
call
xchg
jecxz
cmp
jae
pop
pushf
leave
int
and
adc
jo
adc
cmp
xor
out
lcall
adc
mov
scas
sbb
nop
dec
or
add
aam
dec
daa
out
or
sbb
add
sbb
mov
push
popf
ja
or
or
cmp
adc
in
sub
mov
nop
cwtl
mov
jge
repnz
movsl
fisubrl
imul
cwtl
xor
nop
sti
push
sub
pop
cltd
decl
pop
jecxz
sub
mov
cs
sub
sbb
in
pop
dec
in
daa
inc
mov
movsl
and
bound
cmp
push
push
jp
pop
adc
ds
sub
fisubrs
adc
jnp
ret
sarl
aad
icebp
loope
sbb
fcoml
sbb
dec
mov
inc
test
jne
cmp
data16
inc
pop
fsubr
out
mov
popa
imul
jg
nop
out
out
fucomp
scas
or
mov
jo
in
cmpsb
arpl
leave
lock
mov
lret
xor
test
xchg
lahf
jge
mov
pcmpeqw
imul
pop
mov
dec
outsl
test
rcr
pop
cwtl
in
sbb
jo
jmp
in
pop
mov
pop
mov
rcl
or
out
pushf
jg
ss
push
push
inc
jbe
xlat
lahf
dec
add
shrl
add
push
imul
push
in
mov
popa
add
jl
sbb
imul
jb
nop
mov
inc
stc
mov
repnz
lods
sbb
add
ds
shrl
sbb
adc
ss
jnp
outsb
mov
jb
or
loop
adc
int
cmp
stos
js
inc
push
ds
into
and
in
xor
repnz
ja
cs
mov
lret
cmp
dec
fwait
xor
adc
cwtl
pop
push
imul
xlat
push
or
psubq
mov
lock
xor
xor
es
xor
leave
pop
xchg
cmp
pop
call
xor
dec
movsl
add
jmp
push
call
insb
cmpsb
out
sarb
inc
outsb
shlb
xor
dec
shlb
cmp
pop
movsl
dec
lcall
or
negb
insb
notl
clc
aas
nop
sub
mov
lock
push
mov
ds
or
pop
and
shrb
xor
repnz
aaa
xor
cwtl
ja
adc
stc
repnz
js
aad
pop
inc
out
aaa
lcall
mov
cmp
jle
mov
sub
adc
insl
dec
mov
inc
mov
fs
adc
and
roll
pop
dec
mov
movsl
mov
std
sbb
lock
xchg
pop
popa
mov
lods
inc
fwait
inc
jmp
ljmp
xor
in
jl
ret
fucomi
mov
xchg
push
mov
mov
inc
adc
push
inc
icebp
in
fimull
mov
push
inc
rcll
adc
pop
mov
cmp
in
hlt
jp
jns
daa
inc
inc
or
lods
sti
call
fsubrs
push
test
jecxz
add
lcall
xchg
xchg
fdivl
fwait
inc
fldt
es
pop
idivb
xor
test
xchg
stos
fwait
sbb
dec
pop
push
imul
xor
push
ds
mov
push
xchg
mov
pop
ret
dec
arpl
lods
mov
jle
pop
imul
pop
jg
stc
stos
ret
in
jge
dec
or
shl
stos
xchg
lcall
or
lret
push
shll
ret
pusha
fidivrs
sbb
pop
hlt
int3
sbb
xchg
ja
push
jbe
sub
jae
xchg
xchg
mov
jl
mov
cwtl
enter
adc
jge
dec
mov
pop
push
pop
pop
sub
ret
adc
mov
fbstp
rcll
push
add
sbb
rol
movsb
mov
in
jbe
out
mov
and
push
mov
push
jns
xchg
int
or
add
orb
and
and
and
jo
lret
cli
add
xchg
push
dec
add
je
out
mov
inc
push
inc
xchg
fstpt
dec
ret
cmp
mov
subb
subl
or
inc
ret
and
outsl
mov
jp
fidivrs
mov
pop
addb
sar
or
ja
stos
movsl
jo
dec
cwtl
lahf
xchg
cltd
notb
and
and
xlat
add
mov
in
sbb
loopne
cwtl
push
pop
add
into
sbb
lahf
cmp
sub
push
pop
push
sbb
arpl
mov
inc
test
jae
inc
mov
xlat
xchg
jbe
iret
xchg
mov
out
cmpsl
jne
xchg
fwait
sub
push
mov
cmp
scas
test
and
ror
cmp
sbbb
fsubr
dec
jl
adc
inc
lcall
sub
jnp
cmp
inc
sahf
sar
add
addl
into
mov
test
jnp
dec
ret
mov
shr
adc
shrl
dec
int
inc
and
sbb
dec
jmp
insb
sar
daa
stos
pop
pop
push
repz
xchg
shll
pop
scas
mov
nop
rcll
and
dec
xchg
push
xchg
repz
jae
repz
cli
cmc
lds
or
mov
sub
dec
mov
pop
push
in
mov
iret
jge
repnz
shll
insb
adc
or
push
or
cld
pop
cmc
adc
mov
push
pop
data16
loope
stos
subl
sbb
add
push
xchg
data16
pop
xlat
subl
mov
aaa
call
dec
mov
fs
loope
out
cmp
mov
rcr
aad
dec
lea
mov
pop
mov
jb
pop
jmp
stc
test
stos
mov
dec
xchg
sbb
mov
sub
mov
fdivs
and
sarl
fdivl
sti
fwait
js
ja
addb
int3
adc
out
push
out
cmp
in
insb
add
cli
frstor
push
and
adc
pop
pop
or
xor
push
push
lock
dec
dec
sub
sbb
xchg
mov
jl
lret
shrb
lods
je
decb
pop
xchg
push
sub
and
shlb
insb
iret
data16
add
loope
loop
nop
popf
sub
mov
adc
mov
in
loopne
mov
mov
sub
fcompl
aas
popa
dec
lds
je
loop
mov
fdivrl
push
pmaxsw
fldt
mov
insb
mov
pop
mov
dec
inc
aam
out
inc
ret
or
popa
rorl
jmp
outsb
fwait
call
xchg
rcrb
clc
sbb
and
mov
push
xor
add
bound
jmp
test
pop
test
jl
or
push
pusha
cmpsl
jnp
stc
sub
aaa
div
xchg
inc
je
daa
imul
sahf
loop
sbb
sub
sbb
icebp
mov
xor
pop
ficomps
dec
imul
inc
fwait
insl
lods
mov
stos
fsubs
pop
and
add
mov
movsl
or
dec
pop
mov
or
cmp
add
cmp
mov
filds
jecxz
cltd
mov
sub
in
shlb
daa
aam
imul
inc
xchg
fdivrl
xor
pop
mov
sbb
fisubs
fisubs
scas
jecxz
in
pop
insl
mov
xorb
es
lret
jmp
loope
pushf
sub
das
in
push
add
pop
and
mov
jmp
jmp
int3
mov
jns
pop
int
or
scas
stc
adcb
outsb
cmp
sbb
adc
xchg
mov
pop
rol
xchg
xlat
outsl
bound
enter
xlat
xor
mov
gs
fistl
rorb
inc
mov
out
sbb
dec
jmp
inc
mov
cmp
pushf
test
outsb
jae
daa
lea
mov
pop
mov
and
pop
jo
sbb
add
xor
data16
mov
inc
dec
jae
cmp
fwait
icebp
in
jns
rclb
insb
loopne
out
pop
xchg
fwait
mov
pusha
xchg
ror
and
lea
mov
repnz
dec
and
psubd
pop
pop
cmp
dec
inc
xor
push
inc
add
dec
push
dec
fdivl
cmpsb
sbb
xor
add
and
xchg
popa
push
in
add
xchg
jb
jne
mov
ret
popf
sbb
dec
jmp
push
jns
nopl
push
sbb
push
data16
ja
or
sbb
cwtl
jne
dec
pop
ds
xchg
sbb
adc
pusha
xchg
insl
pushf
test
test
inc
in
fisubrl
lock
jecxz
push
push
cwtl
or
push
xchg
and
andl
ja
jae
lea
xrelease
or
push
es
pop
adc
jge
repnz
cli
xor
xchg
pop
pop
push
mov
adc
mov
pop
ficoms
mov
push
mov
imul
lds
sub
push
popf
add
mov
mov
imul
add
mov
insb
es
adc
xor
iret
into
mov
std
or
fs
orb
and
ljmp
sub
pop
add
popf
call
nop
stos
fsubrp
jae
daa
pop
jne
mov
aaa
cmp
popa
scas
mov
les
icebp
out
test
add
add
aaa
or
lret
push
je
fadds
scas
ret
mov
or
decl
and
pop
xor
sbb
cmp
jle
out
inc
sbb
in
sub
add
pop
xchg
ret
mov
test
popf
pop
aas
xchg
bound
pop
sub
or
cwtl
sub
dec
fstps
and
repnz
inc
cwtl
insb
lcall
imul
jmp
pop
in
sbb
xor
xchg
mov
dec
nop
mov
inc
es
xor
fisubrl
push
les
ss
aaa
les
test
push
adc
ffreep
repz
stc
incl
push
mov
fstl
ds
dec
or
push
ficoml
test
loope
rorb
je
test
pop
mov
leave
xchg
call
or
cmp
jae
or
mov
pop
dec
dec
fcmovnb
and
jae
daa
jecxz
cli
aad
movsl
lcall
inc
sub
mov
insl
leave
incl
sub
lea
add
jle
gs
nop
lcall
test
and
lea
movsb
mov
bound
pop
jne
and
mov
xchg
add
outsl
sti
dec
imul
popa
hlt
cmp
cmc
sbb
mov
ret
aas
inc
loopne
in
mov
xor
popa
mov
jecxz
mov
sti
faddl
push
lahf
outsl
clc
stos
fsubl
shll
aad
or
ja
mov
cltd
leave
and
in
xor
int
sbb
pop
out
push
gs
aaa
rcr
mov
outsb
xchg
shrl
pop
mul
inc
test
cmp
jle
js
loopne
push
and
sbbl
iret
push
mov
dec
xchg
lahf
sbb
loopne
dec
xchg
lret
imul
out
daa
aas
mov
mov
mov
mov
rcrb
and
adc
adc
or
push
pop
jae
pop
push
adc
mov
aaa
std
inc
sbb
jle
cld
xchg
shll
cmp
mov
jp
xor
dec
jo
cmp
push
cmp
inc
jns
fisubrl
jbe
sub
imul
add
adc
xchg
divl
mov
pusha
movswl
arpl
hlt
lds
adc
fbstp
daa
cli
inc
sub
pop
rol
mov
add
mov
adc
imul
adc
sar
push
xchg
mov
push
push
dec
fwait
stos
and
cmpsb
sbb
add
mov
test
aad
in
enter
mov
inc
insl
pop
jae
clc
pop
cmpsb
xor
dec
push
adc
adc
push
push
or
sbb
cmp
jg
mov
dec
mov
adc
jb
aas
xor
or
mov
fs
and
pop
rcr
jae
xlat
mov
ret
pop
cmpsl
mov
lcall
adcl
adc
cwtl
add
inc
negl
mov
add
scas
es
push
mov
mov
push
add
pop
sbbb
dec
scas
cmp
sub
mov
fwait
cmc
xchg
mov
or
inc
mov
adc
mov
mov
push
jl
lcall
mov
popf
jecxz
setle
push
pop
xor
pop
cmp
push
scas
sbb
xchg
popf
xor
or
dec
pop
mov
cmc
cmp
je
cmpsl
sti
js
inc
pusha
enter
mov
sbb
sbb
cmpsl
inc
and
gs
clc
sbb
sbb
and
adc
pop
scas
popf
test
inc
xor
loope
jmp
lea
inc
add
push
add
adc
repnz
cmpsb
lods
push
ja
inc
xor
xor
es
xchg
xor
mov
lods
xor
das
mov
add
and
leave
cltd
xor
cld
clc
sub
mov
std
aam
xor
pop
shl
add
xchg
gs
mov
pop
test
inc
aaa
test
jmp
cltd
jg
dec
gs
mov
jae
push
adc
mov
out
in
adc
push
inc
xchg
pop
rcrl
cmp
cmp
mov
in
mov
xchg
pop
dec
adc
sahf
sub
xchg
cmpb
dec
fwait
popf
movsl
pop
sysenter
dec
push
cmp
mov
out
mov
rcr
flds
cs
bound
popf
sub
push
adc
sub
ret
movsb
dec
scas
outsb
mov
mov
and
dec
fs
icebp
dec
xchg
sub
xchg
jnp
push
pusha
push
adc
jno
lods
and
push
out
jae
jb
lods
mov
cli
fistl
imul
fs
sub
xlat
aaa
test
xchg
out
xchg
pop
inc
xor
dec
inc
xor
sbb
push
lds
mov
and
and
in
jnp
pop
cmpsl
push
std
cld
xchg
xor
mov
jns
and
insl
mov
ds
aad
enter
ror
in
push
mov
ja
lock
or
loop
lret
rolb
mov
decl
pop
push
ficomps
pusha
mov
cwtl
aas
aad
jg
aaa
sub
xchg
loopne
xor
xchg
mov
or
mov
and
out
push
push
xor
sub
arpl
and
sub
outsl
in
test
mov
pusha
cmp
xor
mov
mov
pop
jmp
and
ja
xlat
test
mov
and
xchg
ss
testl
jne
cmp
cld
pop
das
into
insl
js
push
sarb
ror
sti
outsl
xor
icebp
mov
inc
pop
es
inc
stos
in
cs
inc
dec
inc
or
fistpl
jnp
sbb
js
add
pop
pop
ljmp
cmp
jmp
cld
pushf
dec
sbb
xor
mov
inc
sub
or
cld
insb
stos
or
mov
aad
jmp
in
scas
stos
cmp
pop
add
repnz
lods
jle
or
lods
or
movl
mov
lahf
pop
mov
mov
sbb
cmpsb
incb
pop
and
sti
xchg
shrb
loopne
inc
xchg
adc
push
inc
std
xlat
lock
mov
cwtl
xchg
cmp
sbbl
dec
lahf
addr16
xor
inc
subl
ljmp
jne
std
add
movsl
mov
cmp
mov
addr16
xchg
push
or
test
mov
lods
fcomps
and
scas
mov
mov
fdivrl
clc
out
jl
iret
pop
stos
mov
fsubrs
jle
aam
test
push
jb
sbbb
xchg
imul
cmp
fcomi
aas
add
mov
add
jb
add
lcall
movsb
xor
fnsave
push
nop
adc
and
and
mov
dec
xor
jb
jno
pop
loop
jmp
popf
jns
mov
jne
pop
sub
xchg
mov
and
inc
stc
aam
cs
ja
add
lret
pop
xor
adc
in
rorb
add
or
shr
dec
in
andl
andb
mov
push
lea
imul
mov
sub
jb
pop
fsubp
shl
adc
hlt
mov
mov
in
daa
mov
pcmpeqd
xchg
lods
lcall
pop
clc
sti
dec
sahf
mov
mov
int3
and
adc
cmp
sbb
adcl
daa
add
sbb
pop
adc
push
out
inc
or
xor
call
xchg
fstpt
loopne
pop
cmpsl
popa
ficompl
push
loopne
xor
cmp
mov
mov
cmpsl
stos
jnp
std
imul
cli
divb
xchg
dec
fmul
sub
popf
xor
cs
daa
mov
mov
jl
cmp
movsb
jmp
xor
pop
jg
leave
and
ds
mov
jo
push
cwtl
leave
mov
push
jmp
out
xlat
push
jnp
adc
xor
jnp
leave
cwtl
xor
mov
sbb
or
mov
jbe
cmp
out
sub
in
pop
mov
dec
mov
addr16
sub
mov
adc
jno
push
xor
pushf
add
cmpsb
call
add
dec
scas
into
shrb
sub
mov
aam
sbb
push
popf
rorl
fsubrl
mov
sub
pop
jle
pop
lds
fdivrs
sbb
inc
mov
movsl
sub
push
pop
mov
rcrl
test
mov
ret
jg
mov
dec
fucom
iret
mov
sti
sbb
aas
mov
lods
sub
cld
mov
xchg
out
lds
movsl
xor
push
sbb
movsl
jo
push
pop
rorb
lret
inc
in
xor
ljmp
add
xor
push
roll
add
xlat
sub
nop
das
pushf
out
inc
aas
and
push
outsb
sub
lea
sbb
jg
call
fwait
mov
lea
inc
xor
das
cmc
jns
arpl
ficoms
xor
cmp
ja
inc
stos
pop
jmp
cmpsl
xchg
in
std
jns
inc
inc
arpl
cmp
cmpl
bound
lock
dec
xchg
jns
or
push
push
adc
jno
daa
cs
cli
xchg
lock
mov
and
int
dec
call
addr16
and
les
rcrb
fsubrp
push
jmp
lea
jp
rolb
lret
adcl
and
cmp
fadd
push
addl
lret
dec
mov
adc
xchg
pop
out
lods
lcall
aad
sub
jge
insb
and
add
cmp
jne
stc
dec
and
dec
cmpl
xor
xor
aas
pop
jmp
push
lods
test
and
loope
ss
out
xchg
lods
pop
nop
mov
inc
mov
mov
sbb
add
repz
sub
add
gs
push
movsb
jno
jne
xchg
mov
dec
cmp
sub
jmp
inc
cs
ret
aad
je
ret
xor
roll
loop
dec
pop
xor
pop
dec
cld
iret
fsts
xchg
inc
aam
pop
jle
jmp
test
repz
cwtl
out
mov
xor
mov
mov
xorl
js
adc
jle
mov
xor
in
pmuludq
inc
jb
test
fs
movsl
movl
lret
jae
repz
ljmp
cmpl
nop
sbb
lds
mov
popa
enter
insl
jle
inc
stos
adc
push
leave
mov
mov
push
dec
mov
pop
int3
cmp
in
hlt
jnp
xchg
addr16
adc
mov
jne
push
add
scas
xchg
sbb
push
fistpll
pushf
repz
mov
ljmp
shl
sbb
int3
dec
cld
push
std
cmpsl
jmp
push
adc
fadds
das
ret
mov
add
cs
popf
aam
mov
push
push
fwait
out
aaa
pop
cli
mov
orb
and
xor
decb
leave
sahf
mov
push
repnz
les
mov
xchg
arpl
sti
or
push
or
or
xor
lods
or
cli
lahf
or
rorl
mov
sbb
cmp
sub
or
sub
inc
sub
mov
dec
mov
jg
cmpsb
mov
dec
lds
adc
adc
fdivrs
push
mov
sbb
aas
popf
adc
sbb
mov
jmp
mov
xchg
andl
xchg
loopne
jle
sbb
sbb
sbb
test
cs
imul
and
dec
enter
dec
test
jo
test
fsubs
scas
sub
push
fs
jbe
sbb
gs
push
aad
outsb
dec
add
cmp
dec
int3
inc
cmp
or
sbb
in
jge
bound
mov
add
jge
jecxz
inc
jno
inc
jae
or
mov
and
cmpb
mov
or
adc
cmp
add
sub
outsb
and
mov
loopne
pop
stc
lods
aaa
decb
cmpsl
and
jp
aaa
mov
rcll
pop
dec
adc
aad
bound
roll
mov
cli
inc
addb
lcall
lods
popf
testb
and
test
dec
fidivrl
jp
movsl
cmc
push
sub
dec
out
inc
test
mov
pop
repz
push
mov
sbb
hlt
inc
dec
xchg
rorl
pop
cmc
mov
push
lea
mov
test
je
test
js
adc
mov
lea
jp
jp
gs
sub
js
cs
adcl
gs
dec
fstl
imul
cmp
loopne
cmp
ds
cmp
mov
enter
push
xchg
loop
adc
add
sub
inc
mov
out
subl
mov
dec
rorl
add
pop
mov
mov
addb
rcll
sub
xorl
push
sbb
aas
inc
aam
pop
data16
test
mov
dec
pop
cli
das
mov
test
jae
mov
xor
mov
lds
sbb
jbe
pop
popf
imul
or
std
cmc
dec
pop
cmp
xor
xchg
addr16
cmpsl
aaa
clc
aaa
xor
lock
lods
data16
mov
into
add
scas
mov
pop
cli
lods
inc
aam
mov
push
fiaddl
lods
fsts
andb
pop
pop
jmp
stos
or
ret
jp
inc
jae
std
lret
cmp
incl
pop
fldz
inc
fldt
pop
ja
fs
jo
pop
xor
pop
mov
sbb
aad
dec
aaa
inc
insb
sbb
int
mov
sbb
fimull
pusha
pop
imul
add
and
pop
add
js
sbb
ret
call
stc
sbb
ljmp
test
jae
cld
xor
imul
mov
xor
push
jbe
xchg
mov
mov
and
and
mov
inc
mov
mov
ss
sahf
mov
or
and
inc
push
lcall
leave
or
adcl
test
inc
push
jle
mov
jne
jecxz
add
out
out
mov
jns
es
addb
les
mov
shll
mov
imul
cmpsb
aam
mov
nop
mov
pop
or
sub
adc
scas
pop
pop
xor
and
mov
lods
insb
xlat
nop
push
mov
popf
fsubrs
repnz
das
nop
dec
pop
adc
rcll
popf
push
lcall
loope
xchg
out
mov
in
test
mov
addl
lahf
fmull
in
out
outsl
out
sbb
imul
lock
pushf
xchg
mov
fldl
dec
ljmp
hlt
lods
pushf
mov
mov
and
xchg
push
jmp
insb
rorb
shrb
stos
sub
shl
ret
adc
shlb
daa
daa
mov
cltd
sbb
cmp
jecxz
cmpsl
push
insl
add
push
sbb
mov
lock
lret
push
mov
scas
insb
int3
movsb
adc
pushf
jo
inc
dec
lock
mov
gs
mov
fisubs
cli
push
shll
mov
mov
icebp
int
mov
mov
and
lret
out
scas
fisubs
lret
aas
int
push
mov
inc
movsb
jb
sub
fs
js
jbe
aas
das
pushf
xchg
jp
push
or
pop
pop
mov
out
ret
pusha
sub
push
in
sbb
mov
pop
and
and
hlt
sub
fildll
loopne
test
fidivrl
je
repnz
pop
jnp
outsb
sub
cld
and
lods
mov
shll
imul
push
lahf
std
xlat
jb
cmp
inc
jl
cltd
out
or
inc
movsl
sbb
clc
inc
bswap
in
adc
mov
sub
adc
data16
adc
sti
adc
mov
cs
enter
vorps
aaa
je
or
test
jge
cmp
pusha
decb
sub
stos
inc
or
add
cwtl
mov
xchg
xor
neg
iret
rcrb
add
or
cmp
jno
pop
iret
jno
inc
push
out
out
enter
addr16
fnstsw
sbb
dec
cmp
pop
clc
out
sub
mov
xor
pop
aam
int
dec
sbb
inc
les
pusha
lods
mov
popa
cmp
insb
scas
out
stos
in
mov
or
jl
stc
movb
jno
and
cltd
outsl
inc
lds
mov
pushl
xlat
fmulp
inc
aam
test
cmp
mov
add
mov
cltd
ret
mov
jecxz
ljmp
jl
push
inc
jns
and
sub
mov
mov
pop
push
ficoml
fnstenv
cmp
mov
adcb
in
and
jl
fldt
push
cmp
xchg
jnp
int
mov
fs
pop
jne
mov
inc
sarl
cmpsl
test
nop
mov
cwtl
inc
negb
shll
mov
dec
fidivl
fstps
adc
push
dec
mov
cmpl
inc
pop
lds
clc
jae
lds
test
xor
adc
push
xchg
imul
stos
xchg
jg
lock
popf
cmp
js
mov
pop
bound
call
lods
cmc
mov
inc
repnz
cwtl
jbe
lea
mov
int
xor
sub
ret
repnz
adc
push
out
movsl
sbb
mov
inc
mov
adc
dec
pop
inc
mov
jle
icebp
jp
cmp
sti
mov
dec
jb
pop
mov
insb
xor
sti
int3
bound
push
xchg
xchg
mov
push
inc
je
sbb
lahf
jne
das
and
dec
adc
push
les
ret
arpl
rorb
and
les
jmp
ljmp
outsb
jo
mov
arpl
jg
insl
dec
rep
push
push
mov
pushfw
and
dec
inc
adc
popa
clc
out
test
dec
cmp
pop
inc
dec
inc
aas
pop
inc
test
push
push
call
shl
movsb
xchg
lds
jecxz
add
sub
mov
jne
negb
lahf
daa
push
fwait
in
je
mov
add
xor
into
xor
jmp
sarl
cltd
in
xchg
pop
addb
push
mov
neg
inc
sbb
dec
sbb
ret
arpl
cs
in
adc
stc
loopne
lar
mov
enter
and
xchg
popf
imul
push
xchg
loopne
jmp
cmc
mov
cwtl
xchg
adc
insl
lea
push
push
stos
or
adc
mov
test
scas
sub
adc
ficoms
inc
pop
dec
jno
adc
lods
gs
cmpsb
insl
mov
stc
sar
aaa
sti
dec
add
push
in
stos
mov
jge
mov
outsl
stos
and
mov
sub
mov
sub
cwtl
lds
inc
sbbl
mov
insl
pop
movb
lcall
sarl
sbb
insb
je
movsl
sarl
popa
insb
add
pop
cmp
out
ret
shlb
movl
sbb
pop
fiadds
bound
dec
dec
mov
je
lahf
mov
xor
into
xor
jbe
push
aam
add
cmc
push
xor
addr16
pushf
int
pop
add
lods
dec
test
aad
into
mull
push
inc
rcrb
jl
jg
xlat
hlt
je
inc
sub
scas
cs
lret
cmp
jle
xorb
or
push
ffree
fadd
fbld
repz
inc
pusha
lds
scas
bound
outsl
add
ret
jne
adc
or
test
sub
fildl
pusha
mov
out
lock
rorb
xor
mov
cmp
les
dec
and
sub
insl
sub
sub
cli
lahf
xor
dec
hlt
inc
cmp
or
int
repz
repnz
scas
and
fs
ficoms
shrl
pop
rorl
push
lods
push
xchg
pop
data16
arpl
sub
daa
add
mov
push
fistps
mov
hlt
and
add
add
push
movsl
test
jle
lret
pushf
loop
dec
add
sar
sbb
insl
and
add
pop
js
and
mov
lret
sbbl
cmpsl
mov
aas
jp
push
lods
adc
fwait
outsb
sbb
mov
jecxz
andb
loopne
pop
mov
push
stos
cwtl
add
subl
adc
fwait
lcall
adc
outsl
push
jns
inc
pop
imul
sbb
adc
repz
pop
sbb
jp
or
mov
dec
xchg
mov
mov
mov
lea
cmpsl
mov
es
popf
fadd
cmp
jecxz
cwtl
hlt
mov
andb
jbe
scas
std
pop
pop
xchg
aam
movsb
inc
push
stos
cmp
cvtps2pi
aad
fsubr
push
ret
inc
je
dec
push
jo
jle
fst
mov
mov
das
jl
adc
cmc
das
cwtl
pop
xor
sbb
mov
data16
into
stos
and
mov
push
pop
imul
mov
jl
dec
xor
nop
dec
in
push
xchg
mov
dec
jle
adc
mov
and
mov
dec
dec
or
mov
jge
cmpsb
ret
cmp
and
clc
ds
xchg
push
sub
shlb
loopne
test
or
pusha
jg
pushf
push
mov
adc
jg
cmpsb
and
mov
out
dec
lret
or
dec
clc
jb
mov
mov
cmp
sub
cmc
lods
inc
lcall
into
mov
or
das
fdivp
nop
sub
cmp
dec
pop
sbb
loopne
push
jae
sub
pop
push
lds
push
arpl
pop
add
push
mov
pop
pop
div
jnp
push
pop
fwait
rcrb
jmp
pop
imul
push
dec
xchg
adc
xchg
dec
xor
push
push
pushf
enter
mov
dec
push
scas
sbb
inc
test
roll
test
sti
jb
xchg
cld
dec
imul
aas
in
test
xor
jae
pop
stos
add
push
leave
jmp
mov
jno
xor
cmp
jae
int3
insl
mov
test
mov
pop
lret
stos
and
inc
arpl
adc
data16
fs
out
mov
or
mov
dec
sub
pop
xchg
insb
and
rclb
bound
inc
arpl
stos
outsb
cmc
mov
lcall
daa
sub
or
das
dec
cmp
cwtl
fstpl
sbb
and
filds
test
mov
lds
movsb
scas
cltd
andl
inc
push
scas
pop
ret
xor
shlb
xchg
xor
mov
or
xor
xchg
sbb
jp
xchg
cmp
imul
add
ret
and
fisttpl
cltd
enter
inc
fistpl
mov
sub
cmp
add
cwtl
aad
fsubrs
dec
pop
rol
xchg
push
test
jno
shl
dec
and
lock
arpl
mov
xchg
js
xchg
mov
push
pop
mov
cmp
inc
inc
sub
aad
jecxz
cmp
mov
sbbb
dec
mov
stos
enter
rcrl
jle
inc
mov
and
stc
push
fbstp
out
push
pop
imulb
pusha
cltd
imul
pop
jbe
cld
dec
out
das
fiaddl
sahf
mov
fwait
das
adc
pop
xor
mov
pop
mov
xchg
ret
je
xchg
mov
xchg
outsb
or
in
fs
xor
mov
cltd
repnz
leave
data16
or
into
xchg
mov
aam
cmpsb
rcll
pinsrw
nop
mov
adc
push
or
adc
sub
test
es
lret
lods
xchg
hlt
and
test
or
adc
orb
adc
rolb
push
xchg
pushf
in
fsubr
inc
push
subb
cld
incb
daa
xor
and
xlat
and
in
inc
and
sub
xor
enter
addr16
jnp
pop
dec
push
lret
mov
sti
inc
notb
out
sbb
inc
ficoms
arpl
mov
push
xchg
pushf
lahf
cmp
cs
push
sbb
stos
outsl
jne
pushf
mov
sub
mov
fdivr
movsl
sub
xchg
pop
aam
dec
xor
aam
mov
scas
dec
lahf
fists
scas
mov
jns
stos
xchg
mov
mov
pop
cmp
jo
mov
mov
add
ja
xchg
scas
push
xlat
or
pop
unpckhps
enter
and
mov
push
and
mov
dec
sarl
shlb
stos
adcb
int3
ss
aad
gs
idivl
and
jbe
cwtl
push
mov
jecxz
test
cwtl
push
mov
lds
jnp
aas
sbb
push
loopne
arpl
clc
cmp
cmp
cmp
inc
fsubp
jns
clc
xchg
mov
data16
mov
rclb
push
popf
mov
fisubrl
sbb
js
ja
xor
std
cli
jecxz
mov
sti
inc
sbb
rcll
je
mov
sub
jne
stos
mov
scas
idivb
fidivl
inc
push
shl
sub
push
movsb
fdivs
andl
xor
scas
or
icebp
mov
mov
aaa
aas
dec
lret
jmp
adc
fucom
ds
pop
insb
jmp
int
in
int
scas
mov
inc
xchg
iret
adc
inc
xchg
shlb
xor
cmovno
aad
and
mov
cltd
or
jne
dec
in
out
repz
in
inc
cld
std
add
and
jb
mov
jle
shl
mov
inc
push
cmpsb
pop
push
xor
xorl
ret
imul
add
mov
mov
inc
push
ds
xchg
xor
shl
xor
filds
lahf
sbb
jmp
or
pop
mov
mov
lahf
lahf
xchg
fisttpl
enter
and
test
subl
jne
jo
stos
mov
or
dec
push
and
fsubrl
stos
sahf
cmp
popf
jmp
mov
ret
insl
inc
fs
xor
popf
aaa
mov
ljmp
jl
into
cmp
lret
scas
xchg
jge
lock
popa
ds
pop
xor
xchg
pop
push
roll
push
cmp
pop
jbe
dec
pop
lods
int
sub
cmpsl
loope
jg
stos
je
pop
adc
cmp
pop
inc
sub
push
ss
test
sar
aaa
mov
xchg
dec
aaa
fsubl
cmpsl
jg
and
icebp
stos
lret
mov
lods
pop
xlat
test
mov
imul
sbb
aaa
test
xchg
int
sub
icebp
test
aad
pop
xchg
cmp
icebp
adc
fidivrs
ret
dec
sbb
into
in
push
dec
dec
push
mov
jge
pop
stos
mov
mov
lahf
and
sub
sti
jl
lcall
js
hlt
jb,pn
cmp
je
push
arpl
mov
push
mov
sahf
lret
ss
jge
sbb
jne
lahf
mov
add
jno
or
mov
imulb
shll
loopne
sbb
rol
pop
bound
mov
ret
mov
fbstp
push
jmp
mov
in
xor
inc
std
daa
jp
or
out
and
out
sub
loope
cmp
inc
or
or
xchg
add
pop
add
jbe
lret
fxch
mov
pop
mov
into
pop
mov
mov
sub
popl
enter
lods
push
xchg
jns
imull
and
idivb
or
dec
jmp
add
data16
lods
sub
adcl
call
adc
int3
sub
ds
pushf
cwtl
cmp
repz
repnz
xlat
addr16
jp
out
test
out
cltd
nop
mov
mov
stos
xlat
daa
push
in
push
sahf
inc
rcr
clc
loopne
iret
xchg
outsl
xchg
and
mov
int3
in
pop
inc
pop
mov
jle
cmp
outsb
xchg
leave
in
mov
rorb
aas
sbb
stc
gs
dec
cmp
repz
movsl
xchg
daa
scas
fmuls
les
push
rdtsc
out
mov
add
and
imul
inc
cmpsw
addr16
icebp
sub
cli
and
push
pop
pop
loope
cmp
decb
pop
es
cmp
pusha
ds
cmc
mov
sub
cmp
ret
stc
out
push
pop
and
cmc
repz
nop
cmpsb
add
pop
push
mov
shlb
nop
arpl
mov
xchg
outsb
push
data16
cmp
rcrl
pushf
jge
dec
inc
aad
mov
dec
test
repz
test
fucomip
nop
ja
outsb
ret
jecxz
xlat
sbb
in
push
mov
inc
sbb
dec
push
into
inc
jmp
pop
adc
or
test
mov
testl
add
sarb
popf
pop
or
movsb
mov
js
js
push
add
inc
jb
inc
lcall
fidivs
fwait
inc
dec
xchg
xchg
fucomi
stc
cmp
inc
or
insb
pop
pop
and
ljmp
cmp
sub
scas
mov
sbb
fs
shrl
xchg
insb
cwtl
cmc
and
add
inc
std
jge
jne
std
add
ljmp
dec
mov
add
fsubrs
sahf
jbe
pop
sbb
mov
mov
fsubrs
add
sbb
xchg
jp
push
jge
dec
jl
imul
dec
mov
pushf
hlt
xchg
xor
and
inc
sbb
mov
pusha
adc
sub
and
push
dec
in
sub
aam
adc
push
adc
fs
int3
xchg
push
pop
pop
or
cmp
sub
inc
arpl
in
cwtl
sub
imul
inc
cmp
mov
movsb
ret
adc
pop
sub
movsb
repnz
clc
jnp
iret
xchg
lret
xchg
dec
adc
adc
outsb
dec
jae
dec
sbb
dec
mov
jo
loopne
cmp
insb
sti
mov
fstpl
pop
and
xchg
cmpsl
or
cli
add
mov
xor
dec
xchg
sub
pop
mov
cmp
xchg
cmp
daa
adc
dec
push
xor
jge
ficoml
cmpsb
lahf
dec
adc
push
out
aas
hlt
sub
mov
inc
scas
inc
mov
call
andb
sub
js
xlat
out
sbb
pop
test
cmpsl
dec
mov
test
js
dec
cmp
pop
call
stc
sbb
enter
mov
cmc
movsl
imul
cmp
sbb
test
adc
inc
int3
js
jno
dec
jbe
jmp
inc
les
dec
stc
mov
das
push
test
push
mov
stos
or
ja
sbb
cmp
in
push
sub
dec
jge
or
jecxz
or
xorl
sbb
pop
sbb
push
mov
mov
xchg
or
loope
cli
dec
push
fiaddl
ficompl
out
adcb
cmp
dec
lods
xor
fs
das
mov
xor
fmulp
jmp
cli
test
sbb
fbstp
stos
and
add
hlt
repz
roll
pushl
jns
push
mov
adc
mov
add
sahf
or
stc
out
xchg
cltd
out
call
xchg
js
or
mov
ret
lods
jle
sbb
xor
jno
jb
inc
and
shlb
xchg
push
std
lea
pushf
cltd
loopne
les
mov
pushf
jbe
mov
inc
inc
imul
cli
mov
xchg
jns
imul
fwait
js
pop
fs
add
jg
insb
push
mov
shrb
fldcw
jnp
int
xor
mov
pop
pop
and
jge
mov
fsubr
cmpb
push
xor
mov
aam
jbe
sub
repnz
and
push
rcrb
pop
lret
call
cmp
jmp
adc
es
ljmp
mov
aam
jecxz
push
mov
loop
in
and
xor
aaa
bound
in
inc
or
inc
aad
aaa
jge
adcb
fldenv
dec
cmc
pop
pusha
out
push
jb
push
int3
pop
movsb
pop
nop
jnp
jp
dec
nop
xchg
cmp
lcall
cmp
lahf
mov
into
stc
mulb
adc
hlt
in
mov
mov
cmp
std
fistpll
push
mov
mov
xor
rclb
aad
xlat
mov
decb
xor
scas
jp
mov
lahf
dec
mov
outsl
gs
arpl
and
je
das
pop
mov
adc
out
lret
mov
mov
ljmp
adc
and
jnp
jp
arpl
fdivs
enter
sub
sub
cmpsl
rolb
pusha
lea
mov
mov
adc
leave
push
add
iret
stos
xchg
insl
inc
out
aaa
fistl
dec
pop
inc
mov
shrb
adc
pop
daa
jo
in
in
movsl
pop
lods
lahf
sub
shlb
mov
popf
lods
ljmp
sub
lods
int
pop
and
scas
lret
fwait
inc
js
in
in
imul
loope
jle
pop
pop
sub
xchg
adc
iret
mov
push
pop
ficomps
dec
push
jmp
out
mov
popa
push
cltd
test
xchg
xchg
sbb
or
mov
adc
add
lods
loopne
xlat
and
xchg
addr16
jb
ljmp
xchg
das
push
divl
sbb
inc
mov
sbb
sub
lret
add
dec
rcll
jmp
cmpsb
lods
push
jmp
movhps
jb
ficomps
movsl
in
call
and
in
and
push
mov
mov
movsb
scas
imul
and
mov
rcrl
adc
fnstcw
out
je
dec
inc
jo
addr16
arpl
jle
call
inc
cwtl
inc
es
rcll
lret
inc
loop
lahf
es
push
ret
or
test
roll
xchg
in
sahf
faddl
andl
lret
sbb
lods
ss
jno
dec
mov
cwtl
fdivrs
lcall
or
rorl
movsb
pop
js
sbb
lret
call
inc
or
outsb
cmc
add
int
insb
out
inc
repz
rcll
push
das
sti
dec
leave
xchg
and
mov
sahf
test
mov
rcll
jp
pop
into
and
insb
lods
leave
push
int3
adc
sbb
ret
xor
fwait
dec
pop
mov
fdivrs
jo
popf
cmp
andl
xor
lahf
icebp
pop
dec
lahf
cs
pop
subb
push
je
xchg
int3
jmp
in
xchg
pushl
pusha
test
pop
or
mov
popf
pusha
lea
pop
push
into
add
gs
dec
push
push
push
mov
addr16
inc
sti
xor
fstps
cs
out
movsb
daa
ret
xor
jp
push
pop
or
mov
mov
and
push
sarl
or
xor
cmpsl
push
cwtl
sbb
mov
or
fwait
push
pushf
test
clc
jg
out
push
out
push
xchg
or
dec
jb
ds
icebp
push
in
out
push
adc
aam
mov
xchg
pop
dec
test
cmc
push
adc
gs
adc
stos
mov
insb
hlt
adc
cwtl
out
inc
arpl
sbb
and
and
call
sub
xor
mov
push
not
pop
and
cli
repnz
daa
in
lock
dec
pop
xor
stos
push
adc
fwait
dec
pop
in
jg
cld
sahf
loopne
lcall
mov
xchg
fildll
in
int
fimuls
mov
out
loopne
inc
push
adc
mov
mov
sbb
inc
jns
es
addr16
dec
sbb
xor
loope
dec
xchg
popf
scas
inc
mov
daa
ret
loopne
sbb
cmpsb
add
ret
push
and
nop
shr
int3
adcb
test
arpl
mov
or
and
mov
jg
icebp
test
xor
orl
jns
lock
inc
cmp
mov
nop
popf
push
adc
lcall
and
fcompl
mov
mov
mov
jns
xchg
je
and
jae
push
inc
push
imul
fs
mov
arpl
or
inc
pop
xchg
push
mov
mov
or
adc
scas
push
xlat
or
aad
push
pop
xor
push
xchg
daa
bound
dec
cvtps2pi
dec
push
sti
xor
inc
subl
lds
iret
fiaddl
mov
jmp
bound
mov
imul
add
jge
push
out
cmp
xorl
pusha
fadds
add
mov
repz
minps
in
inc
jnp
lret
and
es
std
test
test
test
imull
pop
mov
movsl
lods
pop
fdiv
sub
shl
das
jno
jb
loope
aas
sub
test
test
clc
pop
adc
sbb
lods
adc
lods
and
mov
dec
and
jns
scas
xor
push
stos
cmp
jle
xchg
push
in
inc
jmp
mov
xchg
rorb
and
xor
jg
call
dec
xor
setp
aad
push
mov
icebp
dec
mov
stos
pop
and
dec
xchg
sbb
mov
popa
lods
ja
rsm
jle
cmpsb
xchg
jns
xchg
xchg
fnstenv
cmc
into
mov
xchg
inc
cmp
mov
flds
imul
cmpsl
add
push
adc
sahf
push
sbb
gs
adc
and
jns
ffree
dec
cmp
push
and
mov
call
bound
fidivs
jl
jg
je
fdivrl
push
and
fdivr
mov
popf
add
inc
mov
call
dec
std
adc
jns
adc
push
mov
adc
int3
sbb
imul
out
outsb
fildll
scas
cld
push
mov
sti
sbb
adc
sub
rorb
loope
push
gs
in
out
inc
aas
out
cmc
bound
mov
add
lcall
push
pop
mov
cltd
scas
psrlq
jmp
or
lods
mov
xchg
shl
lahf
inc
jecxz
adcb
inc
mov
ror
mov
fwait
xor
inc
out
aam
sub
mov
fs
repz
inc
adc
push
xor
inc
in
fsubl
mov
je
les
orb
adc
cli
mov
cwtl
or
outsl
dec
ror
push
sub
xchg
dec
cmpsl
cmp
dec
fs
es
fcomps
jp
cmp
cmp
repnz
and
jl
mov
add
loop
xchg
es
popf
mov
add
test
add
or
push
adc
push
enter
hlt
subb
lock
out
jmp
addr16
jne,pn
adc
lcall
push
das
sub
sub
test
sbb
sub
sub
shll
or
iret
fucomi
or
movsl
movsb
stos
sbb
test
jne
cli
dec
daa
add
loop
pusha
stos
cmp
jecxz
dec
xchg
shll
rcll
push
sbb
sub
inc
push
bound
test
jp
test
loope
fldcw
nop
inc
mov
sbb
int3
mov
inc
cld
xchg
push
fs
xchg
out
jmp
out
fildl
mov
into
call
cmpb
push
dec
or
fwait
xor
vmovsldup
inc
jl
pop
push
lcall
cmp
xor
rcrl
std
add
shrl
mov
lret
repnz
jno
call
jns
imul
jl
jo
pusha
cmc
insl
jp
out
cmpsb
fs
mov
scas
std
fstl
in
scas
inc
jp
adc
pop
mov
inc
jle
jg
cmp
lock
out
lds
or
dec
sti
loop
push
sbb
sub
lcall
push
in
mov
mov
dec
or
xchg
add
jo
jnp
jg
sub
xlat
aas
or
dec
xchg
jne
imul
dec
xor
add
hlt
mov
iret
or
sarb
int3
xchg
les
sbb
inc
je
or
jmp
xchg
fsubrl
mov
xchg
jne
pop
out
test
jmp
arpl
fadds
xchg
ja
aas
scas
cmpsb
popf
ret
lds
cs
adc
scas
sub
add
cld
fidivrs
xor
mov
shrb
sar
push
jecxz
pop
popf
out
add
push
ds
xorl
or
cmovl
sub
leave
mov
mov
fsubrl
xor
mov
xor
add
aas
dec
int
push
or
gs
stc
rcll
scas
pop
ret
adcl
or
std
xor
movsb
nop
xchg
mov
insb
sub
mov
scas
adcl
lods
call
loop
and
xchg
lds
aaa
mov
call
add
add
arpl
fbstp
or
xchg
mov
test
test
mov
ffreep
loopne
lds
inc
and
in
inc
adc
gs
loop
out
push
pop
lahf
xor
inc
lock
inc
push
lret
ret
mov
int3
add
add
or
rclb
push
fchs
inc
nop
xorb
addr16
sub
inc
lahf
fimull
aaa
push
es
cmp
vcvttpd2dqx
or
sub
pop
cmp
add
pop
xchg
enter
popf
inc
in
cmp
int
movsl
test
iret
adc
das
push
xor
lods
adc
mov
lock
push
stos
push
pop
adc
pushf
aam
jb
push
dec
push
imul
mov
lahf
inc
xor
int3
fwait
push
dec
inc
jb
clc
ret
and
cmp
sub
add
mov
jmp
adc
sbb
sub
into
stc
pop
pop
loope
mov
hlt
pop
cld
ja
add
lds
into
and
sbb
jmp
pushf
xor
xor
insb
js
xchg
div
leave
fwait
cwtl
call
adc
inc
push
and
push
pusha
movl
push
sbbl
or
pop
jmp
aaa
adc
daa
iret
clc
out
or
and
sbb
pop
stos
xchg
jecxz
cmp
and
dec
sti
mov
ret
insl
push
lret
mov
adc
cmpsl
and
mov
ret
pop
mov
pusha
mov
mov
in
and
repnz
scas
jg
in
add
xchg
mov
repnz
sbbb
test
mov
andb
scas
cld
call
popf
outsl
imul
xchg
dec
movsl
aas
gs
pop
jecxz
pop
xor
dec
and
loope
lcall
pop
es
xor
addr16
pop
jbe
adc
add
outsl
jnp
fwait
and
clc
scas
pop
sbb
out
dec
andl
fstps
dec
fstpt
enter
mov
cmc
xor
lock
into
lock
int3
lret
stos
jl
jb
inc
out
jb
cmp
sbb
out
mov
je
std
test
push
xchg
scas
pop
jmp
jns
add
sub
stos
mov
or
sbb
push
in
xchg
fdivrp
jle
jno
les
xor
outsl
add
xchg
orl
fistpll
incl
inc
xor
jns
aas
push
ss
xor
fmuls
jne
sarl
xchg
adc
fnstcw
and
adc
cmp
lcall
jp
test
insl
xchg
mov
stc
xor
in
repnz
icebp
push
test
jge
les
mov
push
mov
push
or
mov
andl
mov
sub
dec
xor
sbb
cmp
cmc
mov
adc
xchg
jge
sbb
xchg
loope
fildl
add
popf
push
fsubrl
ja
test
mov
imulb
cli
repz
js
outsl
adc
xchg
call
mov
shrl
addl
push
shll
and
shrl
out
mov
pop
lret
lea
cmp
into
and
test
sub
mulb
mov
add
es
sub
pop
loopne
xchg
jmp
xchg
cs
mov
sub
or
mov
pop
mov
push
clc
aas
ret
mov
lds
stos
lret
and
dec
cwtl
fdivs
or
mov
repz
sti
sub
repnz
and
sbb
repz
mov
cmpsb
mov
arpl
sbb
add
cwtl
push
dec
add
sub
adc
dec
jmp
pop
out
or
sti
lret
int3
xor
or
pop
inc
sbb
jge
cmc
push
mov
test
adc
mov
sub
xchg
jnp
movsl
or
lret
mov
xlat
push
call
pop
mov
test
sub
sub
push
jecxz
int
pop
push
loope
hlt
xchg
adc
mov
addl
leave
pusha
jb
jmp
dec
dec
mov
fmuls
lahf
xchg
ror
dec
ja
adc
lcall
mov
jne
std
js
mov
les
xor
aad
pusha
mov
and
dec
dec
repnz
fstps
cmpsb
pop
aaa
ret
mov
push
ss
orl
pusha
dec
mov
out
jb
loopne
rorb
cmp
popa
sub
leave
inc
mov
lea
xchg
and
push
sti
mov
dec
cli
pop
hlt
add
mov
xor
and
inc
sarl
cltd
and
jle
insb
arpl
test
faddl
test
mov
fbstp
dec
sbb
push
lahf
popa
push
ljmp
pushf
in
ret
ret
xchg
push
test
jbe
jmp
ljmp
cmc
and
cld
pop
xchg
aad
sbb
call
pop
adc
sub
lahf
push
mov
ret
sbb
rorb
jbe
sub
pop
pop
xlat
std
std
mov
push
lcall
jmp
test
lds
xchg
es
or
push
int
iret
jnp
mov
scas
push
push
mov
aam
add
and
and
pop
sub
sub
push
sub
cmp
inc
adc
sbb
in
push
imul
and
push
jp
or
sub
cli
or
fwait
jge
aaa
imul
mov
lds
sbb
sbb
test
fwait
divl
pop
or
pop
jns
ret
sbb
cmp
dec
popf
xlat
push
pop
xor
mov
push
dec
push
sub
lea
andb
jmp
insl
js
stos
xlat
in
in
push
sbb
inc
popf
movsb
xor
movsl
ljmp
xchg
popf
mov
inc
pop
loopne
pop
mov
add
lds
ja
shlb
stos
subb
stos
fnsave
repz
popa
cmp
add
mov
push
cmp
lods
sbb
xor
je
cli
mov
pop
mov
dec
lcall
push
xchg
repnz
cltd
iret
stos
nop
push
lcall
ret
push
jg
cmc
xor
mov
sub
inc
ss
loopne
imul
loopne
das
out
jae
sub
movsb
sub
sub
or
sub
pop
bound
and
mov
add
adc
inc
sub
in
arpl
push
push
fs
icebp
fildl
cmp
nop
hlt
dec
push
out
rcll
or
lret
ret
fdivs
int3
inc
xor
sbb
and
or
and
pop
cmpsb
addr16
shl
repnz
in
lods
pop
out
mov
pop
stos
test
stos
icebp
test
pop
int3
mov
xor
add
jge
scas
popa
jb
jge
insb
aaa
daa
fdivs
xchg
jns
xchg
sti
pushf
add
fbld
jno
ret
ja
mov
test
insl
jp
divb
ljmp
dec
insl
es
into
pushf
aad
sahf
dec
fdiv
xor
jb
outsl
lods
push
rolb
scas
stc
int3
sub
xor
mov
or
inc
in
lods
loope
rcr
dec
arpl
fxch
pop
pop
mov
std
loop
add
sbb
fcoms
dec
fsts
xchg
addl
xchg
cmpsb
mov
xchg
or
ds
mov
or
cmc
iret
cli
aad
jmp
pusha
mov
pop
pop
jo
loopne
test
cmp
add
dec
sbb
sarb
adc
stc
mov
ljmp
lahf
scas
fcmovbe
ret
dec
shlb
add
enter
jmp
mov
inc
in
ret
movsl
stc
addr16
add
mov
mov
pop
and
iret
movsl
loop
add
jnp
push
pusha
pop
xor
std
xor
add
adc
mov
jbe
icebp
imul
lock
test
out
push
das
fucomp
fwait
dec
xor
cmpsl
cli
mov
test
shll
add
ds
inc
push
enter
leave
adc
sarb
sub
insb
mov
std
iret
arpl
adcl
icebp
es
pop
int3
lds
bnd
adc
or
add
loop
mov
inc
cmpsl
cltd
sbb
rorl
sub
push
or
inc
add
cmp
xorb
add
pop
lock
fwait
lahf
adc
test
test
pop
stos
mov
in
inc
jno
pop
xor
sub
mov
jge
daa
pop
sahf
and
mov
int3
and
pusha
xorb
jg
cmc
cmc
mov
sbb
pop
pop
inc
add
or
pusha
dec
mov
xchg
add
xor
mov
clc
mov
xor
clc
jb
daa
clc
call
push
icebp
bound
jmp
mov
shrl
sub
mov
insb
jo
in
inc
rol
std
pushf
push
sti
mov
in
in
mov
test
daa
popa
jbe
and
in
mov
push
pop
mov
and
adc
lahf
and
push
shrb
jp
pop
stos
fwait
mov
dec
int3
push
pop
add
loopne
outsl
add
ret
adc
pushf
push
mov
lock
lret
push
inc
movsl
xor
popf
jne
std
fidivrl
jp
rcll
int
notl
pusha
loop
scas
pop
cwtl
mov
aad
and
add
mov
hlt
push
ja
fwait
cmp
into
and
add
in
jno
in
mov
jg
cld
sub
xor
xorl
in
ffreep
push
hlt
lea
add
push
push
and
call
add
xchg
mov
mov
sub
das
divl
push
dec
fwait
jg
jbe
push
xchg
adc
imul
sahf
sub
movl
push
mov
jbe
dec
xchg
push
xor
cli
loop
add
test
inc
rcrl
mov
movsb
lock
negb
in
adc
push
fwait
sarb
xchg
jo
or
mov
or
fidivs
lret
clc
and
sub
mov
aad
adc
pushf
mov
push
movsb
jae
mov
sub
mov
cmp
or
cmp
add
icebp
lcall
cld
jae
pop
loopne
pushf
cmp
jns
xchg
in
push
stos
push
repnz
mov
push
loop
adc
jecxz
shl
pop
mov
pop
mov
mov
test
nop
adc
adc
pop
mov
pop
insl
dec
adc
addr16
cmc
and
pusha
mov
pop
lock
into
roll
mov
insb
sub
add
or
aam
sub
imulb
shl
sub
xchg
inc
ret
mov
lret
aad
les
dec
popf
jg
adc
inc
lret
adc
push
js
cmp
gs
outsl
sbb
mov
into
jp
sub
jae
sahf
jg
jno
or
pop
xchg
xor
or
jge
loope
lahf
addr16
adc
pusha
adc
add
aam
push
push
fidivl
xchg
pushf
cmc
les
pop
inc
push
cld
jbe
jecxz
inc
sbb
mov
sub
sbb
mov
ds
jb
fstl
xor
movsl
push
andb
add
pop
push
in
jmp
rclb
push
push
aas
cwtl
add
or
cmp
xchg
shlb
lcall
xor
push
hlt
add
xchg
fwait
lret
ret
aas
sbb
out
adc
fsubl
inc
sub
sti
insb
adc
jg
xlat
mov
scas
pop
pop
ret
loop
shrl
out
gs
test
xor
notb
sbbl
pop
sub
add
js
ror
jecxz
iret
sub
stc
and
daa
orl
mov
jno
test
mov
shr
insb
and
frstor
stos
js
mov
xchg
fstl
jns
add
shl
das
je
mov
add
int
push
scas
in
sub
cwtl
pop
xor
gs
or
out
mov
pop
or
test
int3
gs
cmpb
mov
add
cs
stos
cmp
insb
enter
inc
leave
fcom
in
sub
mov
xchg
sbb
xchg
dec
or
add
jge
cli
sti
ds
pop
xorl
lcall
ds
pop
xchg
pop
sub
sbb
fwait
dec
xchg
dec
cmp
repnz
xchg
dec
fwait
cli
lea
test
repz
call
notl
outsb
bound
cld
sbbl
push
mov
sub
mov
lret
and
ljmp
jl
sbb
lds
call
xor
push
dec
js
push
fsub
dec
shrb
mov
rcll
stos
pop
mov
mov
out
cmp
xor
bound
mov
fdivr
sbb
adc
loop
push
cmpsl
and
pop
xchg
and
mov
hlt
jae
sbb
test
lock
sub
outsl
xlat
xchg
cltd
dec
jecxz
pop
shl
sbb
lcall
das
repz
sti
mov
iret
sub
lods
fstpt
shrb
das
sub
add
idivl
ss
movsb
insb
mov
das
or
data16
lret
pop
push
inc
nop
shr
aad
fldt
sbb
sub
int
ret
jbe
jns
dec
int3
mov
or
lock
sub
xchg
dec
cmpsb
cmp
int3
xchg
sub
fsubrl
pop
mov
push
pop
mov
call
push
push
inc
aam
jns
push
and
cmp
dec
pushf
inc
cmp
xor
sub
xor
imul
lret
dec
pop
or
lahf
mov
dec
fisubrl
leave
es
out
addl
repz
mov
sbb
jb
imul
and
repnz
sbb
and
sbb
push
jge
daa
inc
or
xor
inc
ret
lea
xor
pop
push
aas
shl
lret
and
push
mov
inc
cmp
jae
test
cmpsb
stc
lods
add
sbb
cli
push
test
sti
stc
and
ljmp
testb
adc
ss
mov
fdivs
in
jp
jae
bound
fndisi(8087
sub
or
dec
mov
or
loopne
inc
jbe
cld
int
les
enter
xchg
adc
rcll
loopne
insb
arpl
push
jecxz
sub
fbstp
mov
or
out
in
pop
lea
cmc
push
jle
add
movsl
inc
sub
pop
in
ja
mov
mov
test
mov
fwait
iret
movsb
aaa
mov
jb
lods
lahf
test
or
xchg
mull
test
and
xchg
sub
je
inc
out
in
out
enter
rcrb
imul
test
xchg
lds
pushf
popa
jmp
jnp
sub
pop
out
add
cld
out
add
sub
mov
ss
cmc
jg
divl
jmp
clc
pusha
xor
fld
push
daa
cwtl
cmpsb
xchg
andl
and
imul
shlb
pushf
nop
push
jns
in
sub
repz
iret
andb
jns
lahf
mov
jmp
xor
aad
clc
shrb
mov
mov
or
or
sbb
add
add
loop
loope
ffree
mov
cmp
xchg
dec
xor
pop
jl
or
and
or
sub
inc
fs
dec
push
jae
in
lods
cltd
test
scas
movsb
shl
mov
rcrl
sti
inc
std
sub
cld
mov
and
sbb
fstps
inc
sbb
scas
pop
pop
adc
fsubl
push
sub
xchg
pop
shlb
lcall
lret
lcall
lock
sarb
and
shlb
into
sbb
out
gs
paddd
shll
hlt
fists
jmp
mov
dec
mov
nop
rolb
in
cmpps
mov
leave
xchg
out
enter
out
out
lods
sub
pushf
mov
scas
xchg
lahf
jge
xorl
mov
dec
out
lret
push
pop
ret
icebp
loop
adc
mov
pop
push
mov
pop
mov
mov
loop
addr16
mov
push
add
push
out
sub
push
xor
int
or
arpl
or
pusha
sbb
mov
sbb
cmc
mov
jno
add
xchg
lret
mov
sbb
mov
mov
cmp
xchg
xchg
dec
insl
repnz
sti
mov
cmp
jge
jne
call
jns
cltd
inc
call
or
test
clc
pop
inc
lret
push
clc
gs
jge
mov
push
cmpl
lahf
mov
mov
mov
or
aas
adc
push
cmp
mulb
lock
jbe
and
mov
in
mov
push
and
inc
add
sbb
or
or
add
dec
sub
jnp
scas
stos
es
mov
movsl
aaa
cmc
xchg
push
jge
das
ljmp
aaa
pop
mov
lods
loop
daa
xchg
outsl
arpl
push
pop
xchg
mov
aaa
lret
movsl
jecxz
inc
and
outsl
clc
and
push
outsl
cmpsb
pop
je
ds
aad
add
push
mov
enter
mov
mov
outsb
dec
ret
cmp
pop
jnp
mov
pop
cmc
loope
mov
xor
or
cmp
int3
mov
ficoms
cmpsb
sahf
aam
jnp
daa
xchg
scas
or
aam
mov
add
imul
mov
cmpsl
int3
lcall
xor
push
jnp
push
sti
in
or
mov
fistpll
pop
aaa
pop
call
push
inc
sahf
cs
je
add
sub
rolb
arpl
xchg
xchg
into
mov
adcl
or
push
inc
mov
pop
push
bndstx
rcrl
pop
addb
jp
dec
sub
daa
negl
cmp
jne
pop
int3
daa
popa
mov
cs
cmp
test
jae
adc
fs
das
mov
stc
mov
addr16
or
add
sub
push
orb
rclb
mov
fists
dec
xchg
inc
adc
dec
pop
mov
imul
nop
pusha
cwtl
mov
or
or
jmp
shll
daa
pop
and
stos
stos
insl
jns
cmp
xchg
or
xchg
jmp
std
mov
enter
cmp
sti
mov
and
xchg
adc
rorl
adc
mov
or
mov
ret
mov
or
pop
mov
cmpsb
add
stos
jbe
cmp
iret
pop
aad
jl
cmpsb
aad
repz
dec
adc
movb
mov
cmpsl
mov
icebp
jl
pop
std
daa
adc
leave
cltd
push
in
or
adc
ja
outsl
sbb
sub
xor
faddl
adc
fnstsw
or
jecxz
push
xlat
pop
cwtl
sti
fsub
pop
cmpsl
xchg
popf
cld
or
adc
adc
into
push
mov
and
js
fstpt
add
gs
ret
in
dec
lret
daa
ja
addr16
dec
add
lods
jge
xlat
pusha
push
and
mov
add
mov
pop
aaa
jl
iret
xchg
out
add
popa
out
scas
imul
or
inc
xchg
fstps
push
jge
movsl
lea
sahf
out
mov
xor
inc
dec
popa
ret
jmp
stos
std
adc
lcall
jae
jo
test
stos
les
insb
pop
lret
testl
cmp
xor
sbb
jmp
and
mov
int
fdivrp
xor
roll
push
mov
test
sub
andb
negb
lds
fstpt
ret
or
fldenv
loopne
push
mov
fcmovne
cmp
pop
cmp
scas
adc
lret
push
addl
push
repz
sbb
cmc
cmp
shl
outsl
pop
fidivs
sub
movsb
gs
mov
push
icebp
enter
ds
clc
fs
pop
dec
jg
inc
aam
shrl
movsb
sbb
in
dec
jo
adc
push
movsl
das
in
adc
ds
xchg
xor
or
mov
dec
movsl
cld
pop
mov
loop
mov
fsts
cli
fisubl
mov
pop
push
mov
js
cli
imul
mov
and
xchg
add
aas
incb
inc
adc
scas
loope
cmp
mov
jle
mov
cmpsl
in
cs
inc
lret
outsb
std
and
xor
xor
pop
leave
movsl
push
gs
rolb
ret
out
and
loopne
fdiv
stos
jae
aad
repz
cld
add
adc
ss
xchg
xchg
pop
pmulhw
pop
mov
cwtl
gs
and
jg
mov
jge
xlat
test
xchg
sub
ficompl
add
jmp
fs
inc
mov
ljmp
mov
cmpsb
aad
in
or
das
loope
mov
mov
adc
cli
add
enter
rcl
insb
out
lods
xchg
cmp
push
dec
inc
or
test
mov
fnstcw
dec
shlb
pop
je
ret
mov
dec
dec
mov
sub
test
jmp
xor
lret
addr16
test
int
inc
das
and
mov
mov
sub
add
cltd
inc
sub
xchg
shll
pop
mov
dec
dec
stos
loopne
xor
mov
aam
cwtl
mov
xchg
pop
push
insb
and
adc
enter
insl
ror
push
xchg
scas
icebp
pop
adc
add
push
mov
or
adc
rcrb
aas
pop
mov
sub
cwtl
push
fistpl
cwtl
push
movsl
push
add
pop
sbb
mov
aaa
cs
shll
inc
adc
repz
stos
mov
outsb
in
insb
es
inc
jnp
mov
data16
bound
leave
dec
cltd
pop
call
les
jmp
jp
rcll
call
dec
push
sbb
shll
std
pop
lods
sub
jno
enter
push
ss
push
add
inc
lret
sbb
pop
xchg
fdivs
xchg
add
das
pushf
mov
jae
sub
adc
push
std
nop
shrl
pop
shlb
jae
in
cs
and
shll
rcrb
addr16
jns
sbb
push
adc
push
xchg
fidivrs
mov
enter
jne
inc
out
cs
add
fdivrs
cmpsb
or
xor
rcrl
push
leave
sbb
add
js
mov
add
push
adc
ret
rcll
stos
and
stos
add
dec
xchg
add
mov
shl
int
shll
jae
mov
mov
dec
icebp
aas
rorb
xchg
mov
sub
cmpsl
dec
in
pop
or
arpl
add
push
enter
mov
ss
mov
aam
in
enter
ret
movsl
and
lahf
or
xchg
push
test
and
and
test
and
mov
arpl
jne
or
cmpsl
das
pop
add
notl
mov
jo
insb
imul
jmp
mov
xchg
jg
mov
pushf
cmpb
xor
dec
iret
dec
mov
ss
leave
aam
mov
and
pop
xlat
xchg
sbb
mov
jnp
enter
pop
push
loop
inc
xchg
xor
test
xor
push
mov
int
jo
aad
and
inc
push
push
ret
clc
cmp
adc
mov
lea
in
addr16
movsl
fsubrp
popl
cltd
clc
pop
and
inc
outsl
mov
push
subb
push
lods
mov
dec
sti
jg
sbb
pop
xor
sahf
in
ror
ja
shl
inc
adc
xchg
imul
sub
push
xor
imul
mov
fidivrs
stc
dec
inc
mov
mov
jmp
or
xor
jbe
outsl
hlt
lret
test
pop
hlt
cmp
inc
dec
test
shrb
clc
test
mov
jp
mov
mov
popf
test
xchg
dec
adc
cmp
pop
jl
cmc
sbb
xor
jb
fcos
sbb
lret
bsf
mov
dec
pushf
pop
mov
rcr
lods
dec
sub
inc
push
or
in
mov
in
xchg
inc
stc
outsb
fdivl
scas
lods
popf
push
iret
or
pop
jne
add
cmp
pop
or
sbb
pushf
xor
loope
cld
xchg
cli
dec
inc
ret
ret
pop
cs
dec
push
cmp
mov
dec
sahf
loopne
daa
sbb
mov
xor
pushf
imulb
mov
call
jno
add
jbe
je
lods
loopne
shrl
je
adc
mov
js
in
push
shr
xlat
add
push
cltd
pop
int
movsl
sbb
mov
sbb
fwait
cli
scas
and
xchg
push
xchg
cld
xorl
cmp
pop
add
stos
mov
adc
mov
addl
and
or
xor
xor
jne
sub
fsubs
fs
popf
mov
or
lcall
mov
call
pop
push
jle
dec
push
lret
stos
or
sbb
and
cmp
fcmovb
aad
lods
out
das
lret
sbb
sti
mov
mov
sbb
sbb
lods
lahf
data16
xor
movsb
shl
fucom
xor
jns
mov
sub
mov
pop
sbbb
ficomps
les
or
je
or
inc
enter
pop
daa
popf
jnp
xor
or
leave
inc
mov
scas
ficomps
ss
add
in
jae
test
stos
xor
lds
push
fildll
out
cld
aam
mov
adc
sbbb
fcoms
jp
stos
sahf
std
add
sbb
shll
test
dec
xchg
in
inc
lock
jbe
sbb
or
mov
pop
adc
movsb
cmp
fbld
shlb
test
leave
in
cmp
repnz
imul
and
adc
rclb
or
loopne
push
inc
mov
popf
jae
xchg
mov
mov
shlb
pop
cmpsb
jp
cmp
jne
mov
sbb
adc
aas
loop
pop
mov
sub
mov
cli
inc
mov
sbbb
xchg
fiadds
dec
sub
imul
or
or
mov
movsl
lcall
xor
sub
bswap
pusha
test
data16
insb
dec
loope
cmp
add
adc
adc
cmc
fsubr
or
mov
js
mov
lret
add
imul
sub
push
shlb
cs
sbb
push
inc
shr
iret
or
fisubrl
add
lcall
add
xchg
jle
stc
icebp
stc
pushf
jecxz
xchg
dec
test
aaa
in
jge
fs
movnti
int3
mov
dec
cwtl
rorl
dec
mov
loope
outsl
fsubrs
repz
mov
xlat
imul
popa
xchg
push
xor
aam
in
lock
sbb
jp
jne
rsqrtps
or
icebp
push
mov
daa
pop
jp
add
xchg
or
sar
jo
push
loopne
dec
mov
pop
sub
lods
clc
push
push
mov
jbe
add
mov
test
cwtl
add
sub
add
outsb
out
inc
loop
sbb
push
int3
and
ret
insl
mov
ja
outsb
jp
addl
stc
adc
or
xchg
enter
add
inc
sbb
ror
in
jno
fwait
pop
xor
jno
sbb
pop
sbb
call
pop
dec
leave
negl
pusha
mov
mov
xchg
push
sub
movsbl
repz
fisubl
rcl
jge
mov
je
push
cmpsl
mov
and
out
push
jp
sbb
scas
mov
popf
cmp
les
push
iret
lods
icebp
jg
mov
xor
cmpsb
divl
push
divl
fdivr
fimull
or
mov
push
xchg
insl
add
xchg
hlt
xor
jl
mov
imul
xchg
sbb
lret
adc
cli
pop
jnp
pop
xor
pusha
jge
addl
test
or
stos
fs
aad
mov
out
xchg
icebp
shl
mov
rcll
mov
mov
sbb
xchg
mov
push
cmp
mov
in
push
cmp
add
jno
add
test
cmp
pop
jnp
push
jecxz
pop
vmread
adcl
test
outsl
lret
test
divl
popl
xchg
scas
je
gs
push
jmp
repz
cmp
mov
jnp
lcall
add
dec
mov
bnd
adc
pop
mov
pushf
lock
and
cmp
adc
movsb
dec
icebp
mov
inc
orl
insb
cmp
or
pop
jge
adc
and
mov
jns
aad
mov
adc
repnz
test
lds
mov
push
xchg
jmp
adc
ret
lock
add
les
cmp
ret
add
jmp
cld
jge
std
dec
test
ret
mov
aaa
cmp
xchg
lock
add
push
rcrl
and
fdivrl
mov
fwait
mov
push
inc
adc
fsub
cmpsb
out
inc
push
mov
dec
lret
and
arpl
or
sbb
aam
xlat
sbb
pop
in
arpl
cmpsb
stos
sbb
ret
ss
push
xchg
mov
mov
sub
mov
mov
adc
sbb
mov
sbb
xchg
pop
cwtl
jl
ljmp
call
and
sbb
leave
mov
add
out
shlb
scas
xor
sbb
pop
js
pop
imul
fisubl
lea
das
mov
or
fimuls
scas
dec
jmp
push
mov
mov
or
xchg
ljmp
pop
sub
xor
ljmp
jno
mov
lcall
jp
leave
sar
mov
xor
sbb
aas
push
cltd
loope
repnz
add
dec
add
fimuls
clc
stc
xchg
push
daa
xchg
jnp
aaa
push
xchg
mov
or
popf
pop
xchg
push
es
leave
jnp
mov
xchg
repz
das
sbb
jge
andb
xchg
mov
dec
in
xchg
and
xchg
bound
push
and
aaa
jg
dec
popa
pop
cwtd
mov
dec
iret
jmp
and
pushf
lahf
sbb
stos
fiadds
and
out
scas
cmp
mov
out
repz
inc
push
pop
or
sub
and
inc
or
fnsave
jbe
gs
cmp
arpl
arpl
sbb
cld
add
leave
push
sbb
sub
fs
lret
cmc
or
fldenv
jbe
lahf
push
pop
je
jp
cltd
je
ja
mov
andb
decb
add
in
push
stos
jl
mov
or
in
xchg
imul
gs
ds
imul
mov
mov
dec
clc
imul
xchg
sub
es
or
mov
xchg
sub
mov
sbbl
cmp
and
cmpb
xor
flds
cli
push
add
std
push
mov
pusha
adc
push
jle
push
sub
outsb
mov
test
call
cmp
cmp
dec
inc
sahf
repnz
into
xor
aas
sbb
mov
xor
into
icebp
pop
jo
loope
jg
les
xchg
ljmp
enter
fsts
jmp
inc
xchg
out
mov
pop
fs
cmpsl
movsb
je
dec
scas
jns
xchg
cmp
pop
xor
mov
push
xlat
movl
test
pop
popf
cmp
jnp
mov
mov
or
inc
push
icebp
mov
push
pop
lret
pushw
xchg
jg
jnp
pop
mov
dec
aam
dec
and
sbb
pusha
and
xchg
push
sub
out
xchg
cltd
sahf
mov
adc
and
in
rclb
fimuls
xlat
xchg
cli
in
xlat
mov
pop
ss
adc
mov
loope
cmp
sub
in
push
cltd
jno
xchg
bswap
subb
les
clc
mov
push
outsb
pushf
bound
inc
mov
add
or
daa
add
xchg
cld
cs
repz
and
ja
flds
push
addr16
ss
dec
push
fldl2t
jns
mov
ret
test
jge
xlat
mov
and
aad
add
out
sub
push
mov
xor
adc
cmp
lret
loopne
mov
jns
daa
mov
ret
daa
andl
fisubl
clc
aam
rolb
xchg
jg
jne
sbb
loope
sub
sarl
pop
jl
xchg
ret
rclb
inc
dec
repnz
movsb
jg
pop
aaa
xchg
sbb
mov
lcall
aaa
jle
prefetch
push
sahf
dec
in
jno
call
mov
lock
push
add
add
rorb
jo
ret
ret
mov
cmpsl
leave
test
andb
cmp
adc
in
xchg
cmp
mov
add
repz
out
std
mov
test
shll
stc
cli
jp
mov
and
pop
jmp
lods
push
jb
and
nop
cmc
leave
jecxz
adc
mov
jb
popf
pusha
sbb
dec
sbb
mov
sbb
addr16
icebp
je
mov
jecxz
add
dec
loope
dec
pop
push
mov
test
push
stc
pushf
jmp
adc
and
jmp
roll
lahf
cmpsb
bound
add
xor
or
loope
cmp
dec
cmp
and
outsb
ret
mov
add
jo
scas
rcrb
dec
scas
or
mov
push
mov
mov
test
cmc
sbb
add
pop
mov
shlb
leave
or
sub
cwtl
insl
sub
jle
cmpsl
cmc
xor
cli
lock
shlb
xchg
xchg
and
test
inc
mov
sub
push
sahf
xor
push
inc
sbb
dec
mov
iret
lret
xlat
lods
adc
jmp
addl
sub
inc
adc
inc
sub
cmp
add
lods
int3
or
cmc
pop
lahf
lahf
cmp
popa
sub
or
fsubrs
stos
ljmp
les
out
jae,pt
sbb
test
fcomip
data16
cwtl
leave
inc
out
jecxz
jecxz
in
push
mov
and
and
dec
mov
sbbl
push
clc
pop
insb
int
jl
gs
mov
xchg
xchg
idiv
sub
test
xor
div
jmp
lea
pop
out
aas
scas
sahf
sub
jnp
mov
dec
xor
inc
adc
mov
mov
loope
or
mov
or
lods
add
adc
xor
test
pop
mov
pop
out
jle
cmp
cli
pop
addr16
or
bound
flds
gs
jge
test
xchg
push
xchg
std
repz
repnz
jnp
cmp
dec
mov
cmc
push
cwtl
xchg
repnz
jge
mov
mov
xchg
and
push
mov
test
repnz
lds
xorl
std
push
push
push
mov
test
jb
sti
mov
repnz
jae
push
mov
xchg
lock
dec
add
adc
jmp
lods
pop
inc
mov
push
cli
cmp
sub
pop
cmp
xchg
mov
adc
fstl
dec
inc
fstpt
xchg
fmuls
or
and
lock
xchg
sbb
mov
pushf
lea
push
lret
gs
and
mov
out
push
cwtl
push
scas
or
jg
mov
pushf
xor
inc
mov
les
jnp
xor
or
rclb
shlb
pop
cs
leave
add
mull
shl
dec
js
sarl
push
sub
jo
lods
mov
test
aad
idivb
mov
xor
dec
cmp
shlb
xchg
adc
jne
jno
testl
sub
mov
rolb
jg
pop
cs
fnstsw
lods
int
enter
mov
inc
xor
pop
hlt
mov
dec
fmuls
mov
push
scas
and
gs
pop
ds
jo
xor
stos
scas
jge
inc
mov
sub
cmpsb
cmp
sbbl
pop
stc
and
or
js
pushf
xlat
mull
sub
mov
enter
or
or
call
lods
and
popa
sub
jo
loopne
arpl
cwtl
inc
cli
gs
imul
dec
ret
ja
xor
in
add
and
je
cmpl
js
mov
mov
adc
jbe
jle
adc
push
fwait
add
or
ljmp
lret
and
scas
push
scas
cmc
xchg
push
jne
cld
push
jmp
lahf
mov
icebp
cmp
cmp
adc
orb
fistl
push
cmpsb
pop
cmp
clc
mov
cmp
ss
sti
sti
aam
xchg
movsb
mov
mov
movsl
das
pop
xchg
mov
add
loopne
xor
inc
out
in
out
movsl
inc
in
aaa
out
popf
add
mov
faddl
jo
ret
sbb
and
lods
dec
aaa
xchg
mov
popa
fwait
sub
sarb
and
dec
pop
stc
pop
mov
dec
sbb
add
xor
dec
xor
cs
aad
pop
loop
dec
mov
xor
and
jmp
rol
test
sbb
call
inc
xchg
and
orl
popf
adc
int
adc
mov
out
loopne
jp
xchg
jp
mov
xor
fs
and
fcoml
inc
fstpl
pop
pop
mov
or
movsb
or
imul
adc
push
les
fsubrs
iret
jmp
and
push
mov
cvtdq2ps
mov
leave
stc
inc
xchg
test
mov
nop
outsb
rclb
shll
and
push
stos
jno
add
or
or
jmp
je
mov
popa
jecxz
jns
int
or
cld
xchg
mov
cmp
addl
and
and
fcmovu
mov
popl
xchg
jns
lret
sub
mov
pop
pshufw
sub
mov
clc
shlb
mov
pcmpgtb
xchg
lds
stc
in
popf
sbb
imul
mov
xchg
add
fst
cld
sarl
dec
jl
iret
movsb
mov
sub
pop
cmp
adc
pop
add
ret
pop
lret
inc
fs
pop
add
cmp
outsb
xchg
outsl
aam
enter
cmc
pop
mov
sub
adc
xchg
mov
jo
jns
or
dec
jl
xchg
ljmp
lahf
jnp
orl
or
jne
sub
test
push
mov
dec
sbb
pop
pop
mov
pushl
xlat
xor
push
mov
jno
pop
je
push
test
mov
mov
das
or
ljmp
lret
adc
mov
dec
in
ret
stos
sbb
lods
sub
sbb
int
mov
mov
pusha
jno
in
sarl
sbb
test
sub
std
ja
daa
add
and
adc
imul
loopne
cmc
ret
cli
mov
mov
pop
fwait
call
push
mov
dec
sti
mov
add
cmp
mov
fstps
mov
sbb
inc
out
push
push
nop
adc
repnz
mov
cmpsb
xchg
mov
inc
sub
pop
mov
cmp
pop
mov
and
test
mov
cmova
lret
int3
pop
mov
in
jne
outsl
and
outsl
shr
shrl
ret
xor
xchg
out
test
shlb
inc
xor
pop
ja
dec
xchg
mov
fwait
out
and
and
mov
pop
test
shl
cmpb
sub
outsb
addl
in
lret
movsl
adc
pop
xchg
and
mov
imul
pop
mov
mov
push
push
loopne
push
int3
std
out
push
dec
jecxz
jbe
dec
call
and
dec
fcmovnbe
mov
clc
xor
imul
imul
mov
push
add
ficoms
and
jg
mov
sub
push
or
and
cmp
sti
stc
xorb
out
mov
enter
aas
imul
pop
adc
sbb
mov
xchg
data16
hlt
outsb
fdiv
push
scas
jecxz
mov
cld
xor
loopne
cmp
pop
fcmovu
mov
lds
jmp
ljmp
mov
push
push
mov
setle
mov
and
jl
push
subb
mov
add
fxch
jo
mov
push
and
xchg
loope
pop
loope
in
cld
jl
mov
scas
pop
imul
in
push
out
in
jb
scas
dec
mov
lcall
mov
test
ss
and
in
xlat
adc
and
push
pop
jecxz
sbb
push
jmp
bound
mov
push
jecxz
insl
adc
cmpsl
jmp
or
push
cmp
sbb
xor
ret
iret
xchg
cmp
add
push
and
sbbl
jb
pop
add
mov
and
dec
and
jb
filds
push
and
cmovne
inc
jecxz
cltd
dec
pop
adc
dec
dec
mov
xor
ss
dec
push
ja
test
mov
imulb
shll
int3
sub
inc
mov
mov
xchg
incb
roll
jp
mov
pop
lods
pop
pop
pop
cmc
jmp
push
and
movsb
cmc
jp
movsl
insl
xchg
lock
cmpsb
inc
je
cs
sbb
jno
and
dec
insl
lahf
fldl
sub
xchg
int3
xor
int
pop
enter
dec
or
jo
jmp
sahf
outsl
mov
shll
loopne
push
test
cwtl
mov
add
pop
test
sbb
fsubs
mov
cld
mov
cmpsl
pushf
cs
sarb
and
leave
and
roll
leave
pop
pop
mov
pop
scas
sbb
imul
inc
rol
sbb
adcb
xchg
mov
ret
push
ljmp
and
cmp
pusha
adc
cmpl
xchg
in
shrl
sbb
movsb
xchg
mov
push
mov
jne
jae
std
mov
std
pause
add
aam
xor
add
dec
adc
mov
test
mov
lahf
sti
fstpl
sub
ret
cmp
inc
lret
mov
lods
xchg
cmp
clc
ja
leave
popl
data16
mov
and
in
cld
or
aas
cltd
jmp
add
push
outsl
sahf
stos
sub
shl
lret
ds
lea
dec
push
inc
ret
mov
arpl
int3
test
sbb
inc
xchg
mov
mov
lea
enter
iret
outsl
add
ds
fs
pop
xor
out
jnp
mov
jnp
repz
sbb
sub
neg
push
cmp
or
aad
or
sub
subl
adc
je
lahf
test
addr16
xor
jbe
mov
mov
mov
dec
xor
movsl
push
outsb
push
xor
sti
adc
test
in
xor
sbb
sub
cmc
iret
xchg
mov
jmp
pop
adc
xor
int
adc
ficomps
ljmp
xchg
push
mov
or
in
into
sub
xor
pop
pop
xor
mov
fbld
int
int3
rorl
es
dec
in
add
fwait
in
push
push
inc
lods
adc
mov
insl
xor
repnz
or
dec
shrb
imul
sbbb
xchg
inc
ljmp
test
sub
mov
jecxz
xchg
cmpsb
fnsetpm(287
xchg
dec
outsl
or
les
popf
ror
and
mov
mov
fucomi
xchg
jle
aas
stos
mov
lcall
pop
xor
in
push
cmp
add
push
imul
or
stc
iret
adc
neg
fs
xchg
mov
decb
xchg
push
pushf
aas
dec
push
movsl
dec
test
mov
cmp
fsubrl
pop
push
sub
mov
add
mov
pop
and
pop
stos
out
iret
sub
cwtl
cmpl
int
inc
fnstsw
sub
add
xlat
movsb
or
push
out
dec
push
adc
je
cmpsb
jb,pn
push
sbb
add
cli
add
test
mov
out
sub
xchg
mov
jmp
ja
ss
imul
pusha
xchg
filds
adcb
inc
or
rcrb
sti
mov
mov
sub
rcrl
push
fs
mov
imul
pusha
test
scas
xchg
inc
sbb
aad
mov
sbb
adc
loope
xchg
inc
xor
call
outsl
and
add
mov
movsb
rcl
pop
pusha
xchg
lcall
out
jae
adc
in
cli
arpl
imul
xchg
shll
adc
xchg
lods
cmp
notb
sbb
imul
sub
push
pusha
mov
jnp
imul
cmpsl
js
int3
mov
scas
shlb
popa
inc
or
lea
jb
adc
inc
mov
dec
mov
cmp
jle
sub
mov
das
mov
dec
loop
sbb
jg
jb
jmp
inc
addl
nop
fdivl
or
jb
pop
xchg
add
dec
insl
in
jo
xlat
inc
mov
jp
sbb
jp
pop
mov
xor
in
mov
mov
mov
sbb
mov
fmuls
dec
mov
jbe
enter
sahf
jnp
push
imul
dec
movsl
lret
sbb
outsl
mov
movsb
fs
xchg
mov
stc
fdivs
and
cmp
mov
mov
inc
pushf
push
cwtl
push
arpl
imul
mov
adc
std
sub
push
jne
xor
mov
clc
in
out
mov
pop
sbb
ret
aas
pop
mov
arpl
lcall
in
aaa
sbb
loope
insb
mov
push
in
xchg
xlat
test
cmpb
or
and
push
xor
mov
iret
sub
cmp
test
pop
add
pop
stos
std
cltd
jb
clc
enter
sub
xchg
lods
cwtl
repz
pop
mov
dec
mov
or
loope
stos
lea
or
loopne
into
jne
pop
xchg
fwait
sti
cmp
dec
loope
sub
aam
shrb
add
enter
mov
icebp
pop
cmpsl
add
insl
hlt
loop
cmp
xor
cmp
cmp
mov
cltd
xchg
inc
repnz
jns
and
insl
push
jle
push
jns
std
mov
shl
adc
dec
mov
hlt
cmp
mov
inc
jae
adc
test
pusha
add
jge
mov
loopne
rorb
fs
and
sbb
pop
or
das
add
outsl
aas
scas
or
jp
push
add
or
iret
nop
into
add
arpl
adc
add
xchg
std
mov
gs
imul
dec
pop
mov
mov
loope
shrl
sub
jle
sub
xchg
popf
stos
outsb
cmp
push
push
aaa
dec
xchg
pop
add
mov
add
or
in
clc
pop
cmpsl
xlat
dec
push
test
outsl
cmc
mov
sbb
iret
adc
sbb
xchg
push
divl
xorb
inc
xor
lahf
mov
inc
dec
sbb
in
repz
movsl
arpl
rcr
les
jg
stos
sbb
leave
push
fcmovne
pop
jae
xor
hlt
pusha
mov
sbb
add
push
pop
push
cmp
fcompl
lea
xor
in
mov
in
stos
adc
andl
orb
push
rcrb
imul
shll
cmp
ret
pop
leave
and
loopew
cld
int
pop
jbe
add
mov
sub
loop
inc
imul
outsl
fcomps
xchg
ja
jnp
repnz
das
xchg
cmpb
xorl
clc
aaa
ret
enter
dec
xorl
mov
xchg
call
loopne
outsb
cmp
mov
outsl
iret
or
jne
gs
mov
inc
movsb
sti
jle
shll
shll
pusha
aas
push
and
fwait
dec
cmpsl
pop
ret
jbe
aad
dec
jb
mov
add
loopne
dec
test
scas
out
mov
mov
mov
push
imul
clc
sub
mov
mov
nop
xor
push
mov
pushf
divl
adcb
sub
sub
pop
lods
sub
enter
ljmp
ljmp
xchg
xor
mov
arpl
in
aam
pop
mov
mov
mov
adc
out
push
rol
cwtl
mov
in
std
mov
cmp
cmp
rclb
and
out
push
lods
push
pushf
mov
add
cmp
push
jno
cmpsl
dec
in
mov
and
shl
das
and
test
adc
push
ds
fcmovu
clc
jb
imull
adc
push
jecxz
call
mov
ret
jle
sbbl
add
add
inc
stos
scas
mov
sbb
push
cltd
leave
pop
pop
mov
push
nop
ret
mov
ss
out
bound
mov
ret
mov
mov
sbb
sbb
push
dec
xchg
inc
cmp
jnp
in
jmp
mov
fisttps
add
outsb
xor
mov
lcall
cwtl
iret
outsl
mov
xor
add
jo
setp
inc
jle
push
push
filds
jo
adc
xchg
dec
stos
shl
ds
les
in
imul
sbb
and
and
pushf
mov
pop
ljmp
seta
and
mov
outsb
push
mov
cmp
xchg
and
lea
xchg
sub
xchg
push
popf
or
mov
insl
or
adc
or
jnp
addr16
cmp
dec
add
shlb
push
adc
cmpsl
add
std
and
dec
pop
lods
lods
jmp
add
gs
and
icebp
out
addr16
xchg
add
push
push
loop
mov
repz
mov
fsubrl
out
xchg
or
repz
xchg
mov
dec
pop
arpl
mul
push
jmp
adc
mov
psubw
inc
les
or
out
sub
jbe
pop
lret
xor
xchg
mov
sub
mov
test
repz
adc
pop
push
jbe
mov
mov
inc
adc
repnz
cmpsl
sub
add
aad
jne
or
leave
negl
call
int3
add
lods
fs
mov
flds
insl
push
std
jbe
pusha
popa
mov
sub
cltd
push
mov
pushf
test
and
xor
mov
mov
cmp
les
or
adc
xor
and
mov
lcall
shr
mov
mov
pusha
ja
pusha
sbb
jnp
pop
or
mov
shl
repnz
int3
das
xor
fmulp
xchg
jecxz
and
imul
pushf
jp
test
lahf
mov
push
test
aaa
xor
dec
pop
add
lahf
push
dec
out
add
rcrb
mov
and
adc
add
push
shl
sbb
sbb
jecxz
inc
xor
int
cwtl
dec
rcr
inc
push
xchg
sahf
mov
idiv
or
sbb
mov
arpl
rolb
cmp
add
arpl
jne
dec
call
lds
test
cmpsl
jecxz
mov
and
jns
das
dec
in
push
mov
mov
jecxz
mov
mov
jne
outsl
test
xor
sbb
out
mov
and
jecxz
dec
mull
mov
adc
pop
or
jle
mov
pop
sub
mov
mov
les
mov
movl
mov
fldcw
pop
sub
stos
lcall
lahf
cld
lret
add
in
in
out
fwait
jne
cmp
aam
and
xor
mov
mov
ret
adc
add
lret
cli
ljmp
std
inc
mov
pushf
mov
xor
sbb
shr
jae
xor
mov
xor
dec
movsb
adc
das
mov
out
mov
fmuls
je
aaa
inc
nop
push
call
sbb
jecxz
int3
test
mov
gs
data16
jae
add
test
clc
pop
in
push
imul
ret
sbb
jl
sbb
fs
je
push
add
cwtl
cld
and
xchg
sbb
mov
jnp
daa
xorb
mov
or
adc
stc
rcrl
mov
test
lcall
jb
emms
and
jo
pop
pop
sub
faddp
je
push
icebp
repnz
adc
fmul
lea
mov
ret
movsl
test
aad
stc
jbe
nop
jp
adc
aad
jnp
test
or
jl
cmc
xchg
inc
int
mov
add
mov
stos
popa
xchg
jae
lcall
mov
lods
aas
ljmp
fists
dec
ret
mov
mov
pop
lea
test
add
stos
push
xor
lds
and
push
sahf
and
test
lret
leave
test
mov
add
loopne
cmp
push
iret
xorl
das
xchg
jae
sbb
aaa
shrb
mov
nop
push
popa
mov
popf
jne
mov
xchg
adc
adc
push
sub
inc
out
mov
mov
jecxz
icebp
je
aam
add
pop
fadd
fxch
stos
aam
cmp
push
mov
push
jbe
mov
adc
stos
scas
aam
pop
rcl
mov
sbb
insb
cmp
cmp
cmc
xchg
arpl
adc
outsb
enter
je
out
mov
sbb
xor
inc
cmp
jp
imul
mov
cmp
movsb
data16
cs
sub
dec
addb
mov
ret
xor
jo
cmp
arpl
notl
push
aaa
hlt
xorb
or
in
mov
cmp
js
pop
ja
pop
mov
jbe
cmpsl
rorb
add
ljmp
sub
stos
out
jo
cmp
fcoml
and
mov
push
popa
pop
fimull
push
mov
sbb
dec
jo
out
adc
pop
in
ljmp
mov
sbb
out
inc
js
xchg
icebp
fwait
mov
mov
mov
dec
pop
in
addb
dec
stos
jbe
dec
bound
push
test
clc
aad
js
mov
inc
dec
loope
and
pop
adc
cmp
push
add
dec
aad
rolb
loop
rcrb
push
inc
mov
stos
fdivrl
aaa
aad
rcrl
xchg
xchg
inc
dec
push
dec
mov
lock
adc
test
xor
mov
xlat
mov
fadds
sahf
lcall
ds
sbb
xor
pop
gs
pop
lea
aas
sub
cmp
mov
ja
push
mov
aad
faddl
aas
jne
idivb
sbb
and
mov
inc
cmp
das
push
add
jl
inc
mov
popf
add
xor
mov
mov
mov
or
das
push
xchg
jecxz
and
adc
icebp
xor
mov
jg
jmp
jg
inc
mov
sbb
inc
repz
int
lahf
int3
pop
dec
cmpsl
fs
shlb
pop
cs
xlat
in
jnp
xor
sbb
cmpsb
inc
pop
jl
cmp
jne
and
push
fs
es
cmp
push
sbb
or
sbb
adc
xchg
xchg
mov
pusha
loop
gs
cwtl
and
aad
mov
jb
add
popf
les
das
mov
push
xchg
and
mov
xchg
outsl
mov
or
add
or
cmpsl
dec
cmp
mov
fcomp
pop
adc
bound
xchg
clc
xchg
in
pusha
push
out
std
xchg
mov
push
in
jmp
xor
imul
jo
or
call
jecxz
jb
inc
mov
mov
cltd
push
mov
push
popf
test
xor
out
gs
xchg
xor
jns
popf
aam
inc
inc
xlat
jns
cmp
aad
sbb
xlat
cld
dec
add
mov
addr16
cmp
fisttpll
outsl
mov
movsb
jge
cltd
cmpsl
jp
xchg
xchg
dec
mov
sbb
add
pop
pop
push
and
movsl
outsb
outsb
scas
call
inc
lea
mov
add
imul
push
es
fmuls
lds
clc
fadds
fmul
test
lock
adc
fucomi
inc
jle,pn
lods
shll
addr16
lods
gs
cmp
mov
mov
das
push
scas
pop
mov
jl
pop
hlt
push
lahf
stos
mov
jmp
pop
adc
popf
inc
push
cld
cli
int3
stc
call
repnz
dec
mov
js
xor
sti
cmpsb
das
xor
fcmovnu
add
pop
cmc
int3
adc
rcrb
out
xorb
or
xor
scas
stc
push
jnp
stos
ljmp
jl
enter
stos
js
inc
outsl
push
js
cmp
lods
adc
jl
adc
add
cmc
icebp
add
xchg
nop
pop
inc
out
ja
dec
pop
mov
outsl
in
push
sub
dec
das
push
mov
lcall
mov
insl
mov
scas
mov
int3
out
mulb
xor
add
jge
fwait
cmp
mov
rcrl
ljmp
cmp
xchg
inc
cmp
stos
sbb
ja
xor
faddl
jbe
jp
jb
ljmp
jmp
sub
pusha
je
je
repz
popf
jne
jg
clc
push
lret
xchg
push
pushf
xchg
mov
inc
jae
jmp
mov
pop
sbb
xor
jno
imul
or
adc
lods
negl
pop
or
add
ljmp
in
cs
and
push
lcall
sub
jge
or
pusha
mov
loopne
fistps
mov
icebp
or
aaa
dec
mov
mov
lahf
or
imul
loopne
lods
mov
sarl
arpl
xchg
dec
pop
mov
jo
mov
mov
dec
fsubrl
or
jae
pop
cmp
adc
xchg
dec
outsb
fs
mov
jmp
imul
mov
movl
prefetcht2
cmp
pop
or
mov
lods
icebp
test
mov
mov
sar
cmp
push
idivb
inc
inc
fstl
push
out
gs
fwait
stos
cmp
stos
jl
insb
and
dec
cwtl
mov
mov
lret
cwtl
loope
imul
sub
mov
mov
rorb
xor
pop
pop
xchg
shl
into
ss
add
mov
pop
or
mov
sub
dec
mov
xor
jbe
repnz
dec
ror
or
cmp
cmc
dec
sbb
insl
decl
pop
je
int
ja
hlt
jbe
into
mov
mov
mov
sub
nop
mov
cmp
jae
imul
push
cmp
add
int3
mov
mov
xor
cmp
push
sub
push
or
mov
ja
add
nop
in
add
ss
inc
mov
scas
gs
fbld
subl
xchg
add
in
xchg
sbb
inc
lods
adc
movsl
stos
insb
adc
outsl
loop
stos
insb
movsb
sub
mov
mov
fidivrs
aad
jo
stos
cli
jl
xor
pop
mov
mov
jp
enter
bound
and
pop
or
inc
dec
aas
sbb
sub
and
add
movsb
jmp
inc
sti
pushf
mov
int
in
push
push
rorb
xchg
std
lods
mov
add
aas
movsl
or
imul
ljmp
lea
cwtl
stos
sub
and
sbb
mov
scas
sub
xlat
js
xchg
cmp
inc
ds
out
lret
imul
push
add
sti
sub
xor
mov
cmp
push
call
inc
mov
test
mov
and
sub
sbbl
inc
cmpsb
mov
or
jge
jp
cwtl
addr16
jg
xor
insb
sbb
pusha
ret
dec
ret
or
fwait
pop
rcrb
push
ret
sub
xchg
sbb
sti
fs
mov
cli
mov
leave
xchg
fcmovu
push
test
nop
mov
dec
mov
xchg
push
jecxz
push
xlat
sub
or
sub
dec
pop
mov
and
mov
mov
xchg
pop
stos
and
mov
xlat
leave
popa
pop
test
fwait
inc
ret
xchg
mov
dec
mov
in
in
xchg
flds
pop
jg
iret
fsub
out
insl
jg
out
popa
fisubl
test
mov
es
fiadds
add
sub
inc
loop
lods
or
mov
mov
sub
mov
xchg
jne
stos
mov
divb
xor
jecxz
jg
nop
cmp
pop
pop
xchg
cmp
movsl
daa
test
ljmp
fsubrl
notl
adc
mov
fs
adc
mov
inc
sub
pop
jl
push
add
jo
jo
cs
cmp
cmpsb
les
mov
inc
mov
jge
ljmp
sbb
movsb
and
xlat
mov
push
sub
push
push
cmpsl
outsl
pop
xor
cmpsl
pop
lds
sub
lods
and
aas
xor
xchg
imul
cmpsb
fistpll
xchg
insb
sub
push
jp
loopne
mov
pop
cmp
cmp
shrd
lock
mov
mov
lret
in
mov
xchg
mov
dec
jp
push
adc
jp
sub
cli
push
test
jecxz
xchg
xor
mov
xorb
outsl
outsl
inc
pushf
xchg
xchg
cmc
imul
mov
xchg
inc
in
or
loop
mov
sbb
push
fmul
daa
sbb
ljmp
pop
pop
mov
shrl
lods
fisubs
push
pop
add
pop
test
cs
xor
and
add
mov
insb
mov
mov
fsubrs
push
jns
mov
pop
pop
inc
hlt
daa
loopne
stos
or
mov
xchg
sti
push
fnstcw
daa
cwtl
in
cmpxchg
adc
xchg
arpl
iret
in
scas
add
cmpsl
test
arpl
xchg
mov
lods
int
in
lcall
call
popf
xchg
enter
adc
inc
jae
dec
push
sub
push
mov
pop
xchg
cltd
xor
int3
jno
mov
xor
xchg
pop
enter
mov
fcoms
lcall
push
sbb
sarb
push
jecxz
clc
fisttps
aas
xchg
ret
pushf
add
inc
sbb
loop
mov
xchg
pop
push
outsb
stos
cli
jb
cmpsb
mov
shlb
cmpsb
lods
push
aas
push
lods
pop
cmp
cli
push
test
stos
pop
test
out
jo
addr16
push
xchg
and
jmp
pop
sbb
fistpll
sahf
add
xor
cmp
adc
pushf
pop
sub
andl
pminub
pusha
dec
push
mov
das
push
fstl
pop
xor
push
mov
iret
mov
push
nop
mov
lds
stc
sub
jns
and
pop
mov
xchg
jae
rclb
xchg
js
and
cmp
jns
movsb
sarl
in
xlat
insl
xchg
ja
jae
into
repnz
rcrl
loop
std
in
adc
fs
sub
pop
in
ss
cmp
adc
fucomi
jl
movsb
fnstcw
stc
cmp
imul
sbb
lock
mov
xchg
inc
jge
and
or
inc
mov
xchg
sbb
push
shlb
rcll
pop
sahf
adc
sub
mov
jns
mov
dec
xor
stos
rcll
xchg
xchg
jbe
cmp
int3
ds
mov
sub
aas
mov
std
push
pop
push
pop
ret
jp
inc
das
pop
xchg
mov
mov
clc
jno
cmp
lods
sbb
or
in
dec
movsl
pushf
outsb
cwtl
pop
push
adc
or
xchg
mov
jp
cmp
pusha
dec
mov
sbb
nop
adc
jl
add
ja
xchg
or
or
cmp
adc
mov
cmp
fsubrl
roll
lods
cli
pop
int
inc
in
mov
cmp
or
arpl
addr16
sbb
and
imul
cli
dec
cmpsb
js
subl
mov
jbe
ds
inc
sub
dec
testb
inc
into
clc
cli
xchg
jp
mov
and
cmp
push
mov
mov
mov
sub
mov
sarl
fimuls
pop
outsb
sub
jg
pop
adc
ljmp
pusha
inc
fadd
inc
mov
dec
fisttpll
xchg
mov
ror
mov
jmp
xor
dec
xor
and
add
movsb
xchg
mov
cmc
and
pop
mov
rorb
ja
mov
popf
inc
xchg
mov
lods
xor
adc
lods
cmp
xchg
pusha
shll
pusha
movsb
pusha
inc
cmp
pinsrw
and
and
fbld
movsl
xchg
out
sub
and
scas
mov
dec
push
sub
push
pop
adc
popa
lea
loop
jns
loop
sub
xor
cmpsl
cld
mov
pavgw
cmc
jge
outsl
mov
sbb
stos
mov
idivb
cmp
dec
adc
dec
and
out
out
out
int
adc
push
pop
jne
mov
in
orb
dec
mov
xor
shll
mov
dec
xor
into
jo
aam
adc
cwtl
mov
inc
imul
in
push
out
dec
rclb
imulb
sarl
cltd
imul
mov
subl
jbe
jge
jae
or
ljmp
test
or
mov
stc
aas
es
cmpsb
inc
cltd
inc
pop
data16
jle
mov
jle
mov
add
clc
xchg
loop
jp
aam
movsl
push
cmp
push
repnz
mov
adc
mov
fcoml
push
sub
add
jo
sbb
push
pop
or
sbb
scas
sub
mov
lcall
in
adc
lds
daa
shr
sbb
inc
movsb
and
popa
loopne
imulb
cmpl
sarl
mov
stos
sbb
ss
inc
sub
cmp
mov
push
inc
cmp
js
mov
arpl
out
pushf
into
inc
ret
sub
jno
inc
xchg
ljmp
int3
lods
jp
jne
jnp
mov
sbb
inc
and
lret
rcrl
cmp
loop
push
pushf
repz
cli
cmp
popa
adc
mov
cmp
push
insb
mov
nop
test
or
fs
or
iret
nop
pop
and
pop
sub
adc
mov
dec
in
and
aaa
pop
cmc
call
test
stos
enter
jl
fmulp
xor
xor
inc
test
push
in
sbb
xor
cs
or
arpl
in
adc
dec
clc
or
pop
shl
jmp
fnstenv
pusha
dec
mov
inc
enter
jge
mov
addb
leave
leave
pop
xchg
popa
lahf
and
xchg
aad
les
inc
push
out
push
jb
lock
leave
xor
dec
lahf
out
ret
cltd
stos
adc
cli
jg
cmp
movsb
repnz
sub
sbb
cmpsl
jo
test
stc
and
mov
test
inc
jmp
sarl
push
outsb
idivb
fistps
push
pop
rcrb
cwtl
cli
pusha
sbb
sarl
or
xchg
xchg
cs
mov
cli
jmp
mov
pop
aam
jbe
push
mov
pop
pop
out
rorl
aad
out
mov
xlat
repnz
sbb
pop
frstor
fdiv
xchg
sbb
iret
repnz
fcmovu
push
movsl
lret
jo
xor
jbe
push
xchg
dec
into
cmp
and
in
mov
xchg
lcall
pop
mov
sti
add
outsb
mov
mov
mov
push
mov
jmp
imul
sbb
add
fsubs
sub
negl
inc
mov
push
mov
lock
cmc
shr
mov
cmpsl
addr16
test
test
and
xchg
jae
cmc
jg
add
xchg
jb
dec
mov
lea
in
push
sarl
stos
std
xor
daa
sbb
sub
out
repnz
or
sti
jp
addb
push
out
repnz
xchg
jl
mov
pop
jge
pop
mov
data16
sub
stos
orb
jo
pop
movsl
das
aaa
mov
mov
jne
outsb
xchg
sub
and
in
mov
sub
sub
add
int3
fldt
aad
push
pusha
shlb
add
fisttpll
and
ljmp
cwtl
jge
sub
pop
adc
pcmpeqw
xchg
sub
test
and
in
ds
xlat
gs
pop
jns
rcr
and
sub
jmp
hlt
mov
add
daa
fcompl
and
jecxz
mov
outsl
and
cltd
xchg
fwait
movsb
out
je
pop
inc
adc
cmpsl
idivb
leave
sti
lret
lods
mov
inc
dec
pop
adc
and
xchg
das
test
insb
test
aas
xor
jns
daa
sbbb
ret
test
call
adc
movsl
cld
mov
mov
dec
inc
jmp
cmp
in
inc
push
push
mov
aad
cmp
ljmp
clc
es
mov
jnp
or
cmp
mov
cmpsl
and
dec
cltd
mov
pushf
xchg
mov
hlt
push
cwtl
push
pop
xchg
int3
aaa
xchg
xchg
jecxz
cmpsl
jl
inc
or
push
cltd
jnp
ret
scas
repz
push
sti
test
inc
stos
es
cmc
sbb
ss
or
sarb
inc
pop
push
inc
push
ds
xchg
ret
jne
fcoml
push
jp
and
mov
mov
and
adc
loope
scas
jae
cmp
add
dec
push
clc
jne
arpl
and
push
insb
and
push
mov
or
mov
adc
cmp
roll
inc
xchg
out
cmpsl
push
div
pop
fimuls
js
xchg
dec
or
xlat
int3
mov
pop
fincstp
insl
loope
pop
dec
mov
inc
fldenv
popa
ret
jbe
addr16
sbb
push
inc
sbb
imul
lcall
pop
jb
stc
jne
mov
pushw
jae
mov
dec
in
and
mov
mov
sbb
cld
jae
mov
xchg
pusha
popl
rcpps
dec
inc
out
mov
adc
insl
ret
out
lcall
or
pop
jg
adc
fadds
or
inc
xchg
mov
xor
insl
std
repnz
int
inc
xorl
imul
jmp
lret
xchg
jne
push
into
sub
lret
cld
faddl
lret
add
inc
jp
adcl
pop
lss
scas
inc
cmp
mov
cmp
lahf
fimuls
cli
pop
mov
mov
pushf
sarb
pop
xor
mov
dec
add
and
imul
mov
lock
adc
mov
inc
sub
sti
pop
xchg
rcrb
test
mov
or
jb
movsl
add
mov
lods
cmp
sbb
inc
lret
cmpsb
or
out
out
stos
inc
cli
cmpsb
jmp
push
cwtl
sbb
pop
dec
jbe
scas
sub
div
inc
in
mov
and
xor
or
sbb
adc
adc
sbb
stc
negb
call
push
sbb
cltd
fwait
lods
test
inc
pop
je
sub
movl
stos
repz
cmpsb
sub
jecxz
fcmovnu
mov
cli
test
outsl
scas
mov
inc
jne
loope
out
add
adc
xchg
adc
push
inc
int3
or
das
inc
xor
mov
xchg
adc
pop
lods
jl
pusha
repnz
push
outsl
insb
aam
inc
dec
pop
xchg
inc
pop
xlat
jp
mov
daa
loop
fdivrs
test
icebp
inc
sti
scas
jns
cmc
jle
lock
mov
in
mov
imul
pop
in
hlt
lcall
add
loope
xor
sub
ficomps
test
lock
xchg
imul
movsl
test
dec
call
mov
int3
out
pop
cmpsb
mov
mov
xor
mov
or
xor
mov
adc
filds
add
mov
push
xchg
mov
or
mov
dec
fstpl
push
rcll
xlat
lds
jo
mov
outsb
cmp
std
stc
jo
and
jmp
mov
fistl
in
inc
mov
shll
mov
aas
ficompl
test
call
std
ret
pusha
popa
ljmp
push
scas
aas
jnp
outsl
dec
mov
add
scas
loop
imul
std
div
roll
dec
and
loope
jge
loop
sub
push
dec
or
push
mov
pop
mov
xchg
sbb
add
sbb
and
jns
inc
xlat
mov
mul
aas
cmp
push
das
jb
lds
shll
rol
test
imul
xchg
mov
xchg
sbb
xchg
adc
scas
jns
mov
pusha
and
jae
inc
sbb
xchg
cmp
xchg
scas
imul
push
and
rcr
sub
adc
ja
loope
bnd
into
xor
mov
jle
popl
adc
xor
cmp
stos
pop
lds
ljmp
cmpsb
cmc
or
mov
repnz
int3
push
mov
and
jno
shlb
adc
sub
mov
mov
jne
jne
mov
sbb
pop
lahf
fnstsw
pop
popa
and
lcall
cmpsl
imul
jecxz
nop
mov
push
sbb
or
cmp
cmp
aad
daa
xchg
add
mov
push
jp
jle
pop
push
xor
push
fsubrl
clc
aaa
lods
and
mov
int
jno
lods
add
cmp
push
push
jl
data16
js
in
insb
and
inc
mov
lahf
push
arpl
mov
shrl
aad
test
ficoml
cmp
fsts
add
cmc
jb
in
leave
cmp
cmpsb
push
xchg
in
and
add
push
aad
jmp
in
add
pop
and
out
or
mov
ficomps
sarb
push
rcrl
iret
mov
mov
push
dec
ss
fdivrs
or
jp
jle
dec
frstor
jnp
mov
sub
iret
jno
test
pop
push
std
out
push
pop
nop
jo
fs
adc
xor
xchg
bound
xchg
das
scas
jnp
aad
push
ss
xor
ficomps
mov
push
aad
push
ffree
ds
cmp
jge
dec
leave
int
or
cmpl
je
enter
sti
jp
idivl
jb
add
repnz
pushf
call
subb
rorb
pop
cmp
notl
pop
pop
mov
in
test
pop
into
cmc
jns
adc
mov
sub
int3
lods
fcmovbe
xchg
fists
scas
mov
jg
or
add
mov
repnz
push
out
call
xchg
mov
mov
push
pusha
adc
clc
leave
mov
sub
sub
rcr
in
adc
xor
xor
mov
sti
jbe
shlb
cmp
inc
jno
fistps
mov
stos
mov
jo
insl
leave
mov
cmpsl
add
mov
jb
test
lock
cmp
adc
rcr
mov
sub
or
mov
fldenv
dec
mov
aas
cmp
jge
int3
jmp
int
in
adc
push
lret
and
test
push
add
sub
pop
loope
bound
jb
cmp
sarl
fildl
imul
ficoml
push
fwait
shr
jb
popf
jne
test
scas
data16
push
mov
sbb
mov
leave
cmovne
cmp
scas
lock
jl
pop
fdivl
imul
shlb
cli
jns
cmp
clc
hlt
ret
sbb
fildl
and
and
cli
adc
and
jns
and
sbb
cld
xlat
push
cltd
std
inc
icebp
and
xor
popf
mov
sub
add
xchg
data16
idivb
xor
push
inc
mov
adc
jb
pop
mov
sbb
dec
data16
fwait
imul
sbb
lret
pushf
xlat
mov
mov
jbe
jo,pn
insb
je
loopne
or
addr16
ror
mov
mov
sbb
rcrb
xlat
mov
int3
aaa
mov
out
sbb
mov
add
pusha
pop
inc
push
aas
adc
cli
lret
mov
inc
fbstp
mov
aad
inc
mov
adc
imul
hlt
clc
add
mov
sahf
loopne
ret
inc
mov
addr16
pop
cmp
popf
dec
jb
cwtl
jo
nop
mov
lock
sbb
mov
test
in
lea
mov
out
je
cltd
jne
mov
xchg
mov
loop
gs
leave
sbb
int
imul
scas
xchg
cld
and
lods
and
sbb
test
cmp
imul
push
movsb
mov
and
cmc
rcll
mov
popf
outsb
xor
loopne
imul
lea
or
test
xchg
xchg
dec
dec
lcall
mov
lds
ljmp
jns
dec
lods
les
push
sti
ss
mov
nop
inc
into
mov
mov
clc
int
in
push
lods
xchg
xchg
outsl
loop
pop
add
mov
sbb
pop
push
jns
or
sbb
popf
sbb
sbb
lods
or
pop
xor
std
mov
dec
bound
inc
and
mov
inc
sub
aaa
mov
fimuls
cli
test
mov
mov
push
mov
jp
shll
mov
outsl
clc
mov
test
mov
andl
pushf
cmp
es
jmp
es
xor
aam
jp
push
inc
lcall
xor
xor
add
icebp
insl
mov
xor
mov
mov
dec
adc
mov
mov
jl
bswap
jg,pt
sbbb
fildll
icebp
xchg
xor
xchg
xchg
jns
add
test
dec
repz
xlat
add
sub
adc
pop
sahf
or
sarl
loop
in
xchg
dec
mov
in
pop
sub
add
jg
inc
sahf
mov
mov
cltd
dec
sbb
fists
xor
mov
inc
out
out
dec
cmc
pop
mov
sub
cld
and
shlb
cmp
scas
and
xchg
inc
cmpsl
das
lahf
sbb
mov
subb
test
mov
push
or
jo
arpl
jno
aas
test
jmp
inc
bound
mov
adc
int
cwtl
jo
pop
sbb
popf
int3
xor
pop
jb
cmp
add
jecxz
insl
enter
sub
bound
movsb
pop
or
fisttpl
js
adc
outsb
mov
ljmp
std
aam
mov
inc
pusha
inc
cwtl
arpl
cs
cmpsl
mov
xchg
pop
lods
lret
lds
mov
mov
jne
and
shr
js
cli
mov
and
lret
pop
stc
das
mov
push
xor
adc
pop
lods
adc
inc
cmp
fwait
popf
jne
ds
fs
das
scas
jne
ret
add
mov
fstpt
jb
add
test
cmpsl
jno
pop
or
dec
push
mov
sbb
xchg
inc
xlat
mov
jb
test
clc
fcompl
xchg
fwait
daa
dec
cmc
mov
sbb
mov
xchg
lret
jb
in
popa
pop
je
add
dec
sbb
jmp
insl
sub
sub
push
adc
fsubl
mov
idivb
sub
sahf
in
sti
test
aam
jbe
mov
jbe
repnz
enter
mov
adc
inc
jg
sub
icebp
div
negb
addl
or
test
push
add
test
sbb
cltd
std
jae
iret
out
in
pop
xor
or
push
xchg
push
mov
ret
js
push
psubusb
rep
into
or
xor
gs
arpl
push
sbb
or
mov
xchg
icebp
and
outsb
mov
rclb
cmp
jno
arpl
push
xor
stos
adc
test
adc
sbb
arpl
adc
adc
and
pop
movsb
sbb
mov
jmp
mov
jp
sub
out
jle
es
aas
jns
loopne
mov
inc
sbb
shlb
mov
adc
inc
mov
sarl
and
aam
dec
popl
test
jg
xchg
in
sbb
fistpl
xchg
cmp
pop
xchg
or
mov
add
cltd
jbe
sti
push
test
sbb
icebp
push
sub
in
jmp
inc
out
jmp
mov
push
adcl
lret
sub
fs
jbe
lds
pop
adc
dec
pop
cli
jle
enter
nop
loop
pop
push
mov
mov
sarb
lods
mov
mov
push
lods
push
out
pop
mov
pop
mov
arpl
sbb
or
sub
mov
mov
scas
negl
cli
jmp
cmpsl
push
add
xor
fwait
mov
iret
xchg
ss
sbb
xor
icebp
xchg
movsl
jb
xor
ror
inc
push
push
dec
pop
mov
ljmp
adc
inc
jb
or
repnz
jo
aaa
test
mov
js
and
add
dec
pushf
aaa
pop
sbb
aad
sahf
push
push
into
mov
cld
add
fdivrs
orl
pop
mov
fmulp
pop
pop
lret
add
jp
cltd
xchg
shll
mov
cmp
scas
jae
imul
xchg
sub
cmp
pop
cwtl
xor
cs
cwtl
sub
pusha
mov
push
dec
ljmp
mov
cs
xchg
xorl
insl
clc
cmp
sti
xchg
fidivrl
mov
dec
pop
scas
fstpl
sub
push
pushf
gs
pop
fadds
xor
pop
pushf
fs
dec
sbb
push
push
push
andl
scas
jbe
and
pop
movsl
orl
addr16
cwtl
add
mov
cmpsb
cmp
daa
and
xor
test
scas
inc
shll
xchg
pop
mov
cmp
push
pop
adc
enter
aam
pushf
adc
aam
jecxz
daa
mov
xor
ror
add
setg
fisubrs
xchg
dec
dec
out
sub
fcompl
aad
pusha
clc
adc
or
mov
outsl
inc
in
push
mov
and
add
jne
mov
fildll
test
jb
cmp
cmpsl
push
inc
pop
sub
iret
sub
cmc
mov
inc
mov
scas
or
push
sti
ja
imul
mov
sub
mov
ja
cmp
sub
mov
movsb
pusha
push
je
cmpsl
pop
das
rolb
mov
dec
pop
adc
pop
lea
loope
mov
jne
xor
dec
xchg
mov
call
add
push
call
mov
xor
in
mov
mov
hlt
movsb
je
imul
pop
cli
adc
xor
or
bound
mov
mulb
cli
jae
leave
sub
push
scas
cmp
mov
xchg
mov
outsl
jo
jb
les
pop
cmpsb
inc
ss
inc
lock
mov
iret
lea
push
imul
mov
roll
cmpl
dec
stos
imul
mov
nop
scas
imul
fdivl
bound
and
push
stos
gs
push
test
and
xor
rorl
mov
mov
add
jge
pop
and
jecxz
loopne
je
std
fwait
cltd
add
and
sub
adc
stc
ds
out
out
test
mov
pop
mov
rcrb
adc
and
or
inc
movsl
sbb
mov
sbb
push
sub
pop
fwait
jecxz
jge
and
mov
shlb
jb
inc
add
xchg
mov
scas
cmc
cmp
pop
add
roll
sbb
std
jp
jmp
popl
dec
mov
xchg
sbb
test
orl
es
xchg
or
dec
andb
aaa
into
push
mov
ds
sub
xchg
cltd
and
pop
pop
jl
popf
xchg
push
popf
fsubrl
movsb
sbb
addr16
add
and
lret
iret
add
outsb
jmp
es
sti
or
pop
inc
fdivl
sub
sbb
movb
mov
inc
popf
fldcw
xor
inc
shll
adc
dec
xchg
fcomip
cmpsl
mov
or
outsb
or
adc
pop
xor
adc
inc
xchg
shll
cmp
xor
ret
das
mov
hlt
flds
add
fistps
outsl
lcall
mov
scas
dec
js
insb
movsb
repnz
sbb
or
dec
push
bound
fistl
mov
stos
mov
and
lret
or
movsb
xchg
jmp
bound
sbb
fists
add
addr16
pop
mov
cli
clc
arpl
arpl
fisttps
icebp
jmp
cmc
push
out
cmpsb
push
lock
sbb
jno
jmp
fisttpll
or
decl
push
fidivrl
jnp
jg
sbb
and
jno
sbb
mov
mov
push
popf
mov
fsts
sbb
xchg
xchg
test
in
inc
mov
xor
cmp
inc
adc
sub
push
inc
lds
push
jmp
jno
fidivrs
nop
rcrl
xchg
push
loop
dec
adc
jne
lret
cs
adc
jl
shl
fbstp
jbe
dec
sti
add
jb
push
push
rcll
cmp
pop
and
int
jmp
push
sbb
jbe
sub
and
pop
out
cs
dec
sbb
push
addb
lahf
mov
ret
xor
mov
test
dec
jbe
xchg
xchg
jbe
push
daa
fs
imul
jmp
pop
mov
lret
push
clc
or
or
or
xor
lahf
inc
adc
mov
mov
xchg
add
insl
dec
pop
jl
shrb
cmp
stos
outsb
or
add
pop
mov
loop
fstps
dec
xchg
lahf
push
cmp
loope
mov
pop
mov
ss
mov
jb
mov
add
insb
cwtl
iret
scas
mov
mov
imul
pop
inc
mov
add
fcoms
incb
pop
jmp
or
or
test
fistpll
stc
bound
cmc
jne
dec
test
popf
lock
sbb
inc
mov
sahf
add
xchg
dec
cld
cmp
jge
lret
mov
xchg
mov
fldl
or
mov
in
add
fildl
mov
out
loope
xorl
repnz
sbb
cmc
jo
out
lods
mov
mov
inc
in
inc
arpl
cltd
and
test
inc
add
aam
dec
insb
inc
fldenv
jns
icebp
arpl
mov
jne
lret
ror
mov
mov
aaa
out
push
sub
test
push
clc
rol
insl
mov
and
je
pop
pop
ss
out
icebp
mov
add
cmc
add
add
mov
aas
jbe
or
inc
push
in
sahf
mov
ds
insl
jecxz
jmp
push
mov
ret
ds
in
in
scas
dec
fsubrl
push
lea
call
jl
inc
ret
mov
or
pop
test
mov
and
sbb
mov
mov
fwait
mov
mov
jnp
sarb
loop
push
pop
bound
decl
aaa
fucomp
imul
test
aas
outsb
aam
jns
inc
mov
sbb
addl
ljmp
jnp
les
std
stos
loop
mov
int
gs
mov
xchg
push
or
and
mov
ret
lcall
jle
fs
jp
ja
dec
inc
insl
andl
loope
sahf
enter
add
je
xor
rolb
jmp
aaa
adc
mov
cmp
jnp
pop
push
jb
cmpsl
mov
inc
mov
stos
pusha
pop
out
xchg
icebp
mov
lock
in
imul
repnz
out
test
insl
addr16
lds
mov
data16
iret
inc
std
pop
les
cmp
mov
movsb
out
cmp
mov
xchg
add
push
icebp
push
call
mov
fst
push
fisttpll
psubusw
movsl
and
jb
push
insl
jo
mov
sbb
mov
pop
cmpsb
outsl
sbb
das
popf
bsr
nop
outsl
iret
fisubrl
sbb
sahf
push
fld
push
lahf
xchg
push
push
aad
outsb
adc
xchg
jle
cmp
lahf
popf
int3
push
sub
xor
loop
clc
push
add
out
push
nop
les
sti
sub
dec
xchg
idivl
ja
or
popf
loope
adc
xchg
mov
add
xor
dec
adc
mov
pop
lock
and
aad
push
push
sbb
xchg
mov
or
in
sub
ds
push
and
jle
adc
push
xor
imul
sub
scas
movsb
int3
adc
xlat
pop
ljmp
inc
xchg
mulb
lret
stos
mov
pop
daa
arpl
lahf
fldln2
fistl
insl
sub
adc
into
fistps
dec
and
inc
cmpsb
mov
idivb
cld
jle
aas
outsb
es
mov
imul
xrelease
and
pushf
pusha
jle
ret
in
mov
adcl
pop
mov
mov
jmp
cmp
mov
orl
aam
mov
repz
bound
mov
inc
insl
mov
add
jns
inc
adc
xorl
and
push
xchg
pop
push
les
xchg
dec
mov
rorl
inc
pop
inc
shr
xchg
inc
inc
jg
divb
outsb
cmc
shlb
jnp
push
push
orl
jae
insb
orb
dec
out
gs
test
sub
lods
xorb
test
xchg
sbb
mov
cmpb
fdivrs
lods
pushl
js
mov
mov
test
and
xor
mov
jle
and
mov
xor
ja
jns
hlt
xchg
lea
imul
cmc
lods
pop
je
or
daa
jge
lahf
repnz
sub
adc
out
mov
out
fistps
lcall
mov
cmp
leave
idiv
sbb
push
mov
cld
push
pop
cmp
insl
test
sbb
mov
and
adc
cmp
std
mov
lea
cmp
push
dec
jge
outsl
push
lods
stc
mov
sbb
test
fwait
movsb
jmp
or
jns
mov
mov
push
xor
outsl
push
cmpsb
out
jo
inc
popa
push
rol
push
shrl
repnz
xor
inc
pop
and
ds
pusha
nop
mov
test
sbb
cmp
mov
mov
mov
pop
mov
or
sub
scas
sar
jmp
sub
and
filds
push
pop
jnp
ja
enter
mov
sub
or
or
adc
call
std
pop
cltd
xchg
out
ljmp
hlt
pop
xor
call
and
xor
adc
mov
dec
into
movsb
mov
dec
and
cmp
pop
and
movsb
rcll
or
ja
pop
mov
fdivs
addr16
into
xchg
notl
in
idivb
sub
imul
fmul
jmp
push
aas
pop
lret
push
cs
popl
nop
add
fdivrl
jbe
sub
lea
mov
sti
inc
jp
xor
call
mov
adc
pop
pushf
je
sbb
jae
and
add
cwtl
rcrb
aad
sub
xchg
sbb
cmc
dec
and
cmpsb
xchg
nop
cmp
pop
jbe
jb
movsb
cmp
cltd
fmulp
cmp
test
ret
aad
test
xchg
fldt
pushf
sti
imul
setno
ja
in
mov
decl
push
mov
loope
das
push
xor
int3
inc
rorl
xchg
jp
push
movsb
push
fcmovu
mov
lods
mov
xor
inc
push
dec
inc
fs
dec
jecxz
pushl
faddl
xor
adc
or
rol
fdivs
inc
imul
inc
imulb
push
cmp
test
aaa
es
in
jns
fadds
mov
int
dec
jecxz
jb
dec
mov
and
inc
shrb
mov
push
push
cmp
pop
add
jg
call
cmpl
pop
subb
sbb
cmpsb
mov
testl
outsl
cwtl
mov
dec
inc
xchg
mov
cmc
add
insl
mov
mov
test
inc
xor
pop
sub
jae
jb
inc
fdivrs
pop
xchg
cmpsl
pop
fs
ljmp
popa
pop
cli
fs
int3
xor
xchg
jl
sbb
rcrb
cmpsl
push
inc
mov
sti
xor
push
cmpsl
dec
shrl
jmp
pop
inc
lcall
ret
dec
mov
inc
loopne
lahf
cmp
into
rcrl
sub
mov
jno
faddl
jmp
sbbb
push
vpsubq
sub
jns
inc
aad
sar
xor
jge
sub
pop
or
popa
sahf
pop
lret
mov
popa
jecxz
sbb
leave
mov
outsl
das
or
gs
loope
jns
cli
sahf
cmp
mov
arpl
xchg
xor
js
test
ljmp
jns
cmpsl
in
aad
cld
in
push
fadds
lods
lods
jle
cwtl
add
pop
insb
mov
bound
sti
jmp
sahf
dec
ljmp
imul
fs
int
cwtl
getsec
xlat
mov
fstpl
outsb
jbe
aas
stos
adc
dec
rolb
add
insb
push
cmpsb
call
jne
rcll
fcmovne
imul
pop
jmp
adc
or
xor
mov
imul
lret
add
jnp
jo
in
jb
lods
cmp
lret
popa
incb
and
push
fimull
mov
push
pop
pop
jnp
shrb
ja
repnz
push
and
sbb
push
lock
lock
imul
imul
add
add
xor
ss
push
stc
add
aaa
jbe
xchg
stc
cmpsb
lods
xchg
pop
jnp
push
test
xchg
clc
scas
pop
dec
lods
sti
sub
repnz
sbb
adc
test
addr16
sbbb
or
push
mov
push
arpl
xor
pop
jmp
inc
push
sub
sbb
add
and
lods
fwait
jnp
std
inc
or
movsb
pop
push
cld
mov
dec
popf
bound
lea
sahf
and
dec
cli
mov
jnp
pop
je
andb
jmp
insl
adc
popa
adc
dec
sahf
sbb
xor
push
pop
lret
push
jbe
lods
sar
push
cmp
stos
fisubl
inc
inc
imul
and
fnstcw
fs
fbld
lock
jl
xchg
aaa
pop
sub
dec
lods
shl
cld
cmp
jo
arpl
and
mov
into
xor
add
xchg
adc
test
jne
popf
stc
inc
add
add
mov
shlb
mov
jns
inc
popf
pushf
sub
fisttpl
subb
sahf
ljmp
jg
test
xchg
push
xor
add
pop
hlt
into
mov
and
in
fisubrl
jg
fldl
fwait
jmp
test
cmc
sub
xor
mov
loope
call
lock
faddl
out
adc
mov
cmp
mov
js
jae
in
fisttpll
mov
scas
fstl
fcompl
and
cmpsb
loope
mov
js
ja
jle
push
cli
cmp
stc
jbe
subl
cli
xchg
shrb
dec
int3
mov
fldl
jecxz
xor
imul
add
shrb
mov
mov
leave
js
add
mov
xchg
scas
xor
and
sbb
sbb
mov
xchg
sub
mov
sub
lret
cmp
mov
xor
add
loopne
dec
pop
jmp
jle
mov
lret
mov
push
dec
aam
call
in
adc
xor
dec
aad
mov
xor
sub
adc
aaa
loope
xchg
add
rdmsr
cwtl
add
xchg
cli
mov
fwait
out
adc
test
jmp
rorl
cmc
imul
jp
lods
mov
mov
sarl
out
fnstsw
int
cmp
enter
out
shll
xor
and
cmpsl
xchg
cmpsb
in
jns
mov
loope
pusha
cmc
push
outsb
push
arpl
jmp
and
pusha
mov
xor
lcall
testb
pop
mov
push
jmp
repz
mov
mov
mov
fcmovb
aam
sbb
es
mov
int
pop
xor
mov
or
das
insl
lea
out
xor
xor
push
jnp
into
fwait
cs
sbb
gs
xchg
push
test
push
loopne
iret
push
mov
and
bound
push
call
in
add
aaa
push
int3
sbb
addr16
daa
cmp
cwtl
fiaddl
fisubrl
jno
ja
mov
sbb
test
mov
addr16
or
mov
enter
sbb
enter
sub
jbe
dec
pop
lods
test
cli
mov
and
cmpsl
mov
ds
xor
stc
fistpl
mov
mov
in
scas
jne
stos
inc
mov
and
adcl
movsl
in
out
push
mov
stc
shrb
out
xchg
mov
mov
lret
test
aas
xor
or
mov
cmp
int3
dec
and
jle
mov
in
inc
lahf
js
mov
adc
cmp
hlt
adc
add
mov
or
in
push
incb
ja
inc
sarb
jg
arpl
jecxz
aad
fsubr
imul
push
adc
adc
fstpt
out
sbb
pop
pop
cld
leave
ds
lret
loop
lods
jp
mov
inc
xchg
stos
lret
insb
jge
cmpsl
xchg
push
mov
mov
lret
push
divb
sub
lea
ss
sub
dec
imul
loop
idivl
fwait
mov
push
lea
fwait
jle
into
ljmp
add
in
inc
pusha
add
lcall
xchg
pushf
es
scas
sub
cwtl
lret
mov
fsubr
dec
jmp
sbb
lret
sbb
mov
adcl
xchg
in
shrb
or
fists
xor
jns
cld
inc
outsb
cmp
iret
adc
xor
mov
sub
movsl
pop
mov
fidivrs
cmove
lahf
xchg
inc
shll
out
mov
mov
arpl
stos
sbb
movsl
pop
or
les
cmp
jg
mov
inc
mov
xchg
test
pop
push
clc
xchg
jg
iret
jns
add
pop
jp
mov
cmp
sbb
orl
and
data16
mov
push
xor
push
arpl
fsub
pop
mov
cmc
push
ljmp
dec
push
gs
xchg
or
sub
cmp
leave
iret
mov
mov
push
xor
mov
mov
inc
mov
dec
js
add
push
insb
xchg
inc
imul
inc
or
jp
jno
cmp
jle
jge
scas
sbbb
mov
roll
push
rcr
jecxz
push
mov
jbe
out
and
into
mov
add
xchg
push
and
mov
sbb
dec
cmp
dec
lahf
int3
or
out
int3
adc
out
xchg
dec
sub
test
int3
xchg
add
arpl
fcoml
shl
xor
sbb
cmp
lcall
inc
es
stos
mov
mov
dec
insb
push
subl
mov
xor
imul
loopne
je
cs
stos
xchg
inc
les
fdiv
adc
call
ja
inc
dec
ret
mov
jg
subb
sbb
aad
mov
sti
jae
add
cmp
jl
in
inc
test
scas
jge
pop
loope
arpl
sub
out
je
cld
mov
xchg
push
mov
sub
push
nop
mov
sbb
rorl
fidivl
xchg
aad
leave
adc
sarb
sar
xchg
fcom
and
rcll
mov
divl
push
pushf
jb
and
call
call
or
pop
dec
pop
aam
and
scas
inc
into
lods
mov
test
test
xor
test
jge
adcb
hlt
mov
push
test
jno
int3
loopne
ficompl
push
ret
data16
cli
int3
fimull
cli
sarb
xor
cld
sbb
add
adc
sarb
mov
mov
mov
lock
loopne
stos
call
ljmp
subl
int3
in
cmp
lcall
mov
hlt
xchg
mov
sarb
in
sbb
bnd
xchg
gs
adc
dec
jmp
sub
sbb
cmp
inc
pop
sar
sbb
jl
popf
mov
int3
std
in
sub
loopne
outsb
rcll
ja
pushf
shrl
sti
jle
rorb
inc
inc
out
sti
push
or
push
push
pop
imul
out
mov
pop
jae
pop
ret
idiv
mov
and
nop
jg
mov
pop
pop
mov
fstps
loope
and
lret
std
xor
cmp
inc
cmp
jmp
xchg
mov
pop
sub
jmp
test
mov
clc
mov
loope
cmc
out
ljmp
scas
xchg
cmp
hlt
inc
pop
fimuls
mov
jo
jno
adc
scas
aaa
lret
mov
jo
push
and
jp
int3
leave
sbb
clc
jp
gs
addl
into
pop
pop
mov
sub
les
mov
adc
inc
xchg
out
call
and
std
xlat
insb
mov
push
in
xchg
fs
add
in
fwait
inc
jo
dec
xor
mov
iret
pop
cltd
ljmp
inc
pusha
call
ds
iret
cmc
mov
mov
xor
stos
mov
pop
pop
xchg
ss
repz
push
ja
mov
and
push
std
data16
lret
pop
movsb
loopne
fdivl
fcoml
mov
outsl
cs
adc
jmp
gs
shrb
out
inc
jns
and
roll
hlt
lds
sbb
loop
mov
movsl
test
popf
arpl
bound
sbb
push
jl
outsl
jle
sub
cmpsb
pop
add
jl
je
inc
adc
ja
mov
cmpsl
lods
xor
mov
movsl
add
loope
pop
rorb
and
sbb
jnp
test
mov
into
sub
fcompl
add
jecxz
mov
dec
stos
aaa
leave
imul
mov
jle
lret
mov
mul
insb
push
pop
and
out
rcrl
xchg
xor
mov
sbb
cli
in
test
loop
and
test
leave
test
cmp
fadd
pop
test
cli
outsl
test
hlt
jl
mov
inc
outsb
repz
mov
push
mov
xchg
pop
test
popf
xor
pop
cmp
das
btc
loopne
dec
andb
push
xchg
push
xchg
mov
or
cmc
mov
xchg
and
jns
sub
movb
fsubs
stos
js
mov
mov
ss
pop
out
mov
fcmovbe
mov
or
xchg
and
popf
mov
loopne
adc
je
aas
adc
dec
ss
repnz
and
subb
mull
add
mov
push
inc
cmpsl
or
lods
jl
pop
insl
rcr
add
mov
mov
lods
in
mov
jl
daa
mov
lahf
inc
inc
inc
lds
in
testb
daa
or
mov
repz
inc
repnz
pop
ficompl
fistpll
add
push
jmp
jno
pop
cs
incl
sbb
inc
xor
sub
push
out
inc
out
push
jb
push
jnp
movl
pop
imul
cmpsl
out
jns
inc
mov
int3
jbe
xchg
stos
shl
aad
out
leave
lods
push
and
mov
sbb
das
push
adc
xor
add
sbb
and
stc
jmp
loope
mov
mov
in
xorl
mov
aaa
pop
ja
xchg
in
scas
mov
inc
jb
mov
cmp
mov
push
mov
addr16
cmp
ret
sar
je
ret
push
imul
xor
fldt
movsb
arpl
lds
ficomps
lods
lcall
cwtl
mov
js
or
xchg
xchg
test
lcall
inc
loop
mov
fsincos
mov
cmp
inc
add
outsb
mov
cwtl
sub
add
ds
je
scas
mov
aad
vpunpckhwd
pop
mov
ret
lea
push
out
jmp
cwtl
sub
lock
sbb
in
orl
pop
or
dec
and
sub
lds
or
pop
cmp
sarb
idivl
mov
popf
ds
mov
clc
xor
loop
adcb
and
adc
sub
pop
lock
xchg
add
xchg
mov
std
cmp
pop
push
cmp
icebp
jp
lods
pusha
lds
xchg
mov
pop
pslld
pop
mov
add
adc
push
outsl
push
adc
or
mov
clc
lahf
loopne
ja
cltd
fnstsw
pop
bound
loopne
or
adc
add
fistpl
orb
cmp
sbb
bound
and
xor
notl
shlb
jns
xchg
and
enter
popl
jmp
stc
push
fldenv
or
sti
lock
nop
in
jge
adc
jmp
xchg
or
pop
cmp
xchg
pop
jno
cltd
sbb
mov
sub
mov
sub
out
ds
jne
inc
fisubs
push
dec
inc
in
mov
mov
shlb
outsb
mov
insl
out
mov
ja
sarb
cmc
pop
dec
aas
adcl
dec
inc
add
lods
les
sbb
mov
test
lods
adc
dec
subl
push
mov
std
xchg
out
jp
cmp
imul
xlat
mov
in
dec
ljmp
cld
mov
pop
jns
sub
fs
mov
sbb
pop
lret
inc
jnp
xchg
ja
aas
gs
enter
add
imul
mov
cmp
inc
outsb
push
les
int3
push
jle
xor
or
cmpsb
leave
cltd
sarl
loope
mov
cmc
cmpsb
mov
and
hlt
dec
xor
mov
insl
ljmp
xlat
or
enter
les
xor
cmp
icebp
push
mov
mov
add
aas
dec
test
jb
push
fistpll
jmp
mov
jae
or
and
inc
adc
mov
js
rcrb
dec
add
int3
xor
adc
test
dec
in
mov
lcall
fnstsw
xor
idiv
outsb
xor
adc
sti
aad
testb
lahf
or
cmc
mov
push
out
or
cmp
shrb
xchg
xor
arpl
jnp
test
mov
mov
sbb
fsubrl
xchg
jb
ja
sbb
int3
js
dec
xchg
int3
push
sub
adc
or
shrl
add
sbb
push
pop
mov
dec
xor
insb
mov
mov
roll
inc
mov
pop
test
add
xchg
jnp
xchg
jp
jnp
movsb
movsl
push
push
cmc
cmpsb
inc
repz
jno
scas
addr16
popl
jae
mov
loop
inc
jne
mov
add
inc
flds
mov
mov
pop
jbe
pop
outsl
inc
inc
inc
scas
mov
push
ror
inc
mov
push
icebp
in
loop
lret
xchg
pop
cli
or
jnp
icebp
push
imul
xchg
test
push
sbb
or
push
pushf
pop
sub
enter
sti
and
jb
xchg
pusha
les
sub
push
mov
pop
dec
rorl
shll
pop
cmc
je
mov
nop
and
lock
push
cli
push
test
fistpll
mov
jae
sub
movsl
je
cld
sbb
les
cmp
adc
dec
jbe
push
cld
mov
sbb
add
jns
dec
js
ret
addr16
jge
sbb
ja
xchg
lods
mov
mov
cwtl
inc
add
cmp
sbb
jo
cmp
jge
mov
scas
repnz
cli
clc
les
inc
cld
pop
mov
pushf
stos
ficoml
leave
jae
in
dec
lods
xchg
jmp
lea
xchg
pop
xchg
out
mov
xor
js
call
jb
push
pusha
mov
and
xlat
xchg
adc
adc
mov
mov
gs
sub
push
push
add
push
je
and
sub
int
dec
in
cmpl
dec
movsb
push
das
dec
mov
test
ffreep
rcrl
mov
dec
sbb
bound
dec
mov
adc
cltd
mov
rcll
incb
adc
lcall
cmp
sbb
dec
callw
jle
pop
cld
iret
jns
xchg
xor
call
push
lret
stos
mov
and
fwait
xchg
in
and
jno
and
adc
and
js
js
ljmp
out
stos
and
fnstenv
dec
movsb
out
sbb
mov
jg
mov
push
xchg
jg
mov
enter
test
adc
dec
aas
sub
inc
or
adc
dec
or
mov
jae
push
int3
push
in
cmp
aad
mov
push
das
cmp
sbb
inc
mov
bound
dec
jne
or
out
std
mov
dec
sub
stos
add
xchg
jle
stos
stos
xchg
mov
cmp
pop
and
or
pop
and
frstor
push
sub
insl
add
daa
pop
loopne
or
xchg
lea
jno
aam
fadd
xor
dec
fcmovnbe
dec
mov
xor
sbbl
inc
lock
js
mov
movsb
push
loope,pn
movsb
push
popf
test
test
scas
jne
inc
lret
test
mov
gs
inc
fbld
mov
addb
and
xchg
add
adc
and
xchg
add
dec
jae
push
adc
sarl
jne,pn
and
ret
femms
or
sbbl
inc
test
mov
xchg
adc
pop
cmpsb
sub
cwtl
imulb
xor
adc
xchg
pushf
mov
xchg
pop
jns
leave
or
xor
arpl
pushf
xorl
xchg
mov
pop
or
addr16
and
shl
pop
movsb
gs
dec
lock
xorb
or
pop
xchg
cld
inc
addr16
and
sbb
ud1
sbb
addb
sub
lret
push
call
dec
pop
hlt
into
scas
fdivl
insb
dec
xchg
stos
enter
inc
xor
inc
jne
decl
sbb
pop
xchg
push
pop
mov
pop
call
ljmp
adc
cltd
in
mov
pop
daa
pop
adc
mov
sub
dec
mov
bound
lahf
cld
js
jae
add
inc
test
arpl
dec
cltd
cmpsl
dec
push
fstps
enter
fstps
mov
lret
rol
cs
push
aas
pop
test
jmp
or
loope
scas
jne
sub
cli
lods
jl
sbb
fmull
push
sub
test
andb
in
enter
and
and
push
jb
jg
jmp
repz
and
fs
jmp
out
mov
xor
xorb
mov
cmp
outsl
jo
inc
rcl
faddp
xor
aam
icebp
andb
push
jecxz
xor
xchg
fwait
mov
test
popa
pop
xor
scas
sbbb
mov
inc
fs
sub
cmp
leave
das
fnstsw
and
mov
out
ret
push
and
iret
inc
sbb
push
add
add
xor
or
stos
xor
mov
sbb
add
xlat
call
lock
fstpt
test
cmpb
sub
dec
xchg
cmp
inc
dec
out
xchg
push
enter
mov
inc
dec
jbe
inc
out
scas
lret
push
dec
and
jne
inc
mov
cmpsb
jo
jmp
sub
add
push
dec
lret
sbb
lret
arpl
xchg
xor
je
inc
mov
stos
inc
dec
out
xchg
hlt
mov
nop
cmp
mov
imul
push
rorl
push
sub
inc
mov
movsb
push
mov
je
adc
mov
push
or
xchg
pushf
push
pop
imul
push
push
insb
nop
add
aaa
movsl
pop
cld
filds
sarb
pop
add
leave
push
stc
mov
ljmp
aam
fsubp
int
add
aas
cmp
fidivrs
jae
xchg
xor
xor
mov
test
pop
in
jb
adc
add
jle
or
cltd
and
movsl
stos
mov
repnz
push
xlat
lcall
cmp
add
in
push
jb
mov
sub
xchg
dec
mov
inc
jg
sti
scas
jecxz
mov
dec
call
cwtl
les
jne
fisubs
fwait
mov
movsl
je
mov
cmp
mov
icebp
loop
pop
loope
ss
lock
out
lret
and
mov
mov
and
insb
aad
xor
popa
mov
push
ret
ror
cmpl
mov
sub
in
icebp
iret
cmp
shrl
add
and
add
push
js
inc
mov
cli
imul
dec
lock
xchg
aad
cmc
adc
mov
pop
pop
mov
mov
and
xor
jmp
or
xor
imul
mov
lods
jmp
xchg
dec
or
shr
jp
push
pop
sub
xchg
call
into
mov
ret
popa
xchg
sbb
mov
and
or
xor
std
lahf
mov
mov
mov
cmp
push
shlb
cwtl
addr16
mov
add
add
movsl
in
mov
imul
fadd
gs
add
fnstenv
sbb
lret
lds
out
cmp
mov
ret
shlb
test
pop
hlt
pop
add
fcmovnu
into
jmp
inc
das
or
leave
mov
lahf
ljmp
movsl
rolb
push
lret
pop
adc
or
add
push
fwait
or
aaa
stos
sub
lcall
insb
aad
jne
xchg
into
in
lock
dec
add
ljmp
push
dec
movsb
sahf
test
add
ja
icebp
enter
mov
fwait
and
loop
xor
icebp
pop
push
mov
push
inc
arpl
cmp
mov
xor
push
ret
idivl
push
mul
or
ss
in
clc
push
cmp
push
dec
ss
out
sbb
mov
jg
shrb
sbb
int3
cmpsl
or
repz
add
dec
push
bound
pop
decb
fsts
mov
aam
in
fldl
cmp
push
add
hlt
test
jae
scas
call
and
mov
mov
mov
jle
cmp
imul
xorb
push
xlat
enter
sub
pop
add
jecxz
push
mov
int3
popf
sti
pop
in
push
sub
pop
out
sbb
out
cmp
fidivs
adc
test
clc
mov
xchg
dec
push
or
inc
adc
daa
sub
pop
jge
jae
cmp
jb
sub
std
enter
xor
push
in
lea
int
xchg
pop
push
lcall
push
jbe
or
mov
push
fidivs
stc
pop
mov
lds
je
sub
pop
in
sbb
mov
cmpsl
and
dec
push
inc
cld
daa
movsl
xor
rcr
inc
addr16
or
mov
push
lds
imul
rcrb
repz
aad
jne
and
push
sbb
aad
or
shl
sub
jmp
lret
mov
imull
es
cmpsb
push
inc
sahf
fnstcw
dec
imul
fwait
dec
adc
clc
dec
push
scas
and
xor
xor
add
inc
mov
icebp
es
push
sbb
sbb
cmp
adc
in
push
mov
dec
cmp
xchg
lods
xchg
mov
mov
pop
pop
mov
fisttpl
mov
scas
jnp
mov
in
jecxz
mov
ds
ljmp
sbb
into
sti
lods
out
adc
mov
xchg
push
jno,pn
sar
xchg
mov
pop
and
pusha
jbe
pop
xchg
popf
imulb
shrb
in
push
sbb
push
repz
add
inc
push
sbb
jle
test
dec
sbb
stos
fcoml
jae
lahf
add
repnz
call
jo
mov
ja
arpl
pusha
inc
int3
add
insb
shlb
loop
inc
rorb
cld
pop
in
or
mov
sbb
cmp
pop
pushl
dec
fwait
cmp
adc
insl
fcmovnb
pop
test
and
popf
mov
and
xor
inc
dec
push
xor
aam
js
mov
mov
mov
test
rorb
jp
add
lods
ror
popf
imul
je
pop
fwait
cmpsb
fwait
xchg
mov
mov
xchg
dec
cmp
inc
mov
sbb
int
sbb
mov
out
xor
sbb
jle
movsl
lock
lock
pop
bound
repz
aaa
sub
les
cli
popa
pop
stc
sbb
lock
scas
jno
rorl
push
mov
pop
stos
push
jne
jbe
cmp
pop
loopne
add
add
stc
pop
pop
outsb
test
lcall
aad
fmull
rorl
popa
and
mov
inc
xchg
xor
push
mov
xchg
cmp
sbb
pop
scas
inc
cmp
pusha
outsl
mov
cmp
pop
pop
decb
mov
pop
cmpsl
add
mov
push
ja,pt
pop
sub
jp
inc
cmp
addl
in
or
mov
in
add
mov
cmpsb
adc
andl
in
repnz
mov
pop
pop
mov
in
pop
jns
xchg
es
xor
aaa
jbe
cld
or
nop
ret
scas
sub
icebp
fbld
xor
ja
jnp
sti
sbbl
pusha
pop
adc
mov
push
mov
push
fistl
mov
pop
xchg
ja
inc
outsl
xchg
pop
pop
pop
imul
xchg
cmpsb
mov
test
popf
jno
xchg
hlt
or
shlb
jo
jge
fdivrp
aam
inc
push
xchg
xlat
ss
repnz
sbb
es
jmp
dec
and
int
int
repnz
inc
add
test
add
ret
cwtl
sbb
in
incb
sub
xor
repnz
pop
inc
dec
push
in
outsb
arpl
or
xor
sbbb
fsubs
or
inc
pop
clc
popl
jle
add
sti
jmp
sub
sahf
sub
hlt
and
add
jo
dec
fnstsw
inc
and
cltd
stos
dec
stos
or
xor
jl
push
mov
sarb
fwait
cld
push
mov
aam
clc
sub
pop
adc
mov
daa
fwait
pop
sub
lahf
xor
pop
imul
or
insl
add
adcb
iret
pop
mov
sahf
xchg
daa
inc
aad
imul
dec
or
mov
rcrb
pop
scas
cmpsl
shlb
daa
mov
ja
fcoml
js
loop
cli
sbb
cmpsb
nop
mov
bound
aam
mov
mov
sub
mov
mov
jecxz
add
cs
xchg
loopne
adc
adc
outsb
shrl
test
jnp
push
lods
mov
and
sbbl
arpl
jmp
mov
jmp
or
mov
mov
inc
mov
jg
xbegin
xchg
out
mov
dec
xor
pop
bound
bnd
gs
adc
iret
fcmovne
push
fadd
inc
in
sarb
cmp
push
push
adc
aad
mov
outsb
outsl
sbb
jo
das
jb
sbb
decl
cli
cmc
ret
call
mov
int3
loope
ret
jge
mov
push
sub
int3
popf
xchg
iret
std
ret
int3
cmpsb
inc
or
mov
sbb
testb
mov
sub
fistpll
movsl
testl
sub
mov
xor
stos
push
xchg
and
add
ror
xchg
dec
xchg
cwtl
jb
or
rol
mov
iret
xor
movsb
lock
addl
inc
ds
dec
sbb
mov
cmp
mov
xor
rcr
inc
pop
dec
rcll
rorl
test
lcall
sub
pop
lcall
cs
mov
pop
or
je
je
iret
push
popa
enter
xor
lods
mov
outsb
pop
xor
mov
sbb
sub
jo
cmp
cmpsl
sbb
ja
sti
mov
idivl
sbb
mov
dec
loope
cmp
in
push
outsl
subb
mov
pop
into
xor
sub
and
dec
fsub
push
mov
cwtl
int3
add
mov
push
ljmp
in
inc
dec
ret
mov
subl
imul
inc
testb
test
xchg
mov
push
inc
movsl
rolb
cmpsb
sarl
idivb
aam
pusha
es
fstl
loop
inc
mov
or
stos
sbb
iret
aas
leave
outsb
leave
cmc
add
pusha
pop
insl
sbb
pop
popa
icebp
xor
pop
add
adc
cld
test
mov
adc
push
jbe
pop
xor
sub
ret
repz
sbb
clc
shlb
imul
mov
sbb
push
and
mov
add
sbb
outsl
or
out
stos
adc
in
push
out
out
pop
ret
lods
mov
shrl
dec
dec
mov
sbb
aaa
and
pop
das
cwtl
lds
dec
daa
jl
xor
testb
sub
xchg
jle
sub
out
sub
add
cmp
push
cmp
dec
mov
nop
push
ljmp
imul
rolb
enter
mov
repz
or
and
out
xchg
mov
jge
mov
jl
bnd
repnz
push
dec
pop
jno
imul
stos
jp
in
icebp
inc
mov
in
jg
xchg
dec
xlat
inc
push
xor
jmp
pop
flds
out
mov
cmp
std
jns
lret
stos
push
das
pop
xchg
es
xchg
cmp
adc
cmp
orb
movsl
xchg
add
frstor
cmpsl
rorb
enter
popf
lock
inc
xor
testl
lods
popa
in
daa
in
nop
scas
dec
sbb
push
stos
push
and
push
mov
lcall
in
dec
lods
in
je
je
lcall
jb
push
bound
in
aad
stos
hlt
adc
sub
ja
mov
fisubl
jl
or
push
push
in
mov
imul
out
mov
pop
ss
cmp
data16
or
pop
scas
add
jle
hlt
pop
mov
dec
mov
mov
and
not
push
push
repnz
or
subl
jl
or
mov
clc
clc
inc
daa
repnz
stc
pop
sub
in
mov
xor
push
sub
dec
imul
imul
adc
roll
lcall
enter
insb
lcall
adc
popf
xor
mov
cmp
out
lods
jmp
movsb
mov
cmc
mov
popf
jne
mov
mov
sub
jns
cmpsb
outsb
xchg
and
daa
prefetcht2
mov
scas
cld
fs
bound
ret
lea
rcl
insb
out
das
mov
movb
mov
repz
imul
and
fs
in
rolb
ss
and
lea
adc
out
inc
adc
lock
arpl
jecxz
xchg
add
sbb
push
cmp
repz
adc
mov
out
or
lock
jns
cs
cli
xchg
ret
fisubrs
adc
xlat
cmp
xor
sub
sbb
rcrl
pop
movsb
push
stos
movl
mov
daa
rclb
cltd
mov
xor
sahf
jb
pop
add
sub
jns
push
imul
cwtl
inc
and
shll
fldenv
rolb
xlat
pusha
xor
push
or
call
imul
sub
push
jno
es
xorb
xor
push
out
in
push
xchg
rol
pop
out
push
push
stc
sbb
dec
jmp
inc
repnz
out
mov
aas
jle
mov
iret
cs
test
stc
cmpsl
adc
add
jmp
in
push
ss
mov
mov
or
rolb
or
scas
xchg
or
scas
dec
sub
jno
test
ljmp
jnp
imul
mov
xchg
gs
pop
jp
leave
push
cmp
jle
sub
out
xchg
dec
add
inc
popf
in
adc
clc
adc
xchg
push
scas
dec
mov
mov
je
imull
std
or
ret
inc
push
push
mov
sub
jp
sbb
cmpsl
jmp
shl
cmp
sarb
inc
push
cmp
lea
jg
lcall
icebp
jge
movsl
or
jno
call
fucomp
cmpl
xchg
cmpsl
int3
sub
mov
addr16
cmp
fisttpll
fstpt
and
cmp
jb
mov
xor
jle
xchg
mov
jns
aad
mov
cmpsl
fistl
mov
cltd
mov
lret
pop
push
lods
sbb
stc
fsubl
mov
aam
mov
flds
sub
ficoml
sub
int3
jbe
shll
in
fcomip
insl
cli
leave
xchg
and
pop
cmpsl
stos
cwtl
aas
push
movsb
cmp
in
movsb
push
inc
les
sub
pop
fildll
mov
mov
push
mov
mov
int
lahf
and
push
mov
nop
sub
popf
dec
popa
test
jb
je
mov
aam
sub
ret
fisttpl
push
push
ja
iret
push
out
dec
mov
mov
lock
sub
sbb
addr16
mov
inc
ret
fldenv
ret
in
icebp
sar
xchg
outsb
push
and
pop
out
fiadds
and
out
scas
push
jo,pn
out
mov
icebp
stos
sbb
sbb
xchg
je
add
std
add
jae
lahf
or
mov
outsl
es
js
sbb
lahf
shrd
les
int
pop
in
fisubrs
jno
jecxz
fcmovnbe
std
and
in
xchg
add
mov
push
or
movb
dec
mov
testb
pushf
dec
dec
mov
dec
rcll
orl
insl
pop
inc
in
inc
enter
mov
adc
mov
call
inc
fcoml
clc
int
in
lea
jl
sbbb
inc
sahf
xor
cmc
mov
push
xor
dec
add
in
dec
popf
pop
test
jmp
xor
in
dec
aam
lahf
jns
mov
mov
sub
cmp
inc
push
dec
dec
loop
imul
lret
ja
adc
fists
fdivrs
adc
mov
pop
cmp
mov
and
fwait
arpl
cmpsl
push
or
aam
mov
mov
rolb
sub
ret
jbe
sbb
int3
test
sbb
dec
sbb
xor
adc
ljmp
dec
test
ret
mov
jns
jp
pop
sub
outsb
outsb
add
in
loope
nop
mov
dec
js
xchg
pop
jle
push
mov
aam
pop
scas
roll
es
imulb
mov
imul
testb
pushw
js
or
loopne
xchg
jp
sbb
add
cmp
sbb
daa
adc
test
nop
movsb
sub
push
cld
add
xchg
inc
mov
pop
push
loop
jl
and
sbb
mov
bound
push
cmp
in
mov
or
test
popf
xor
sbb
jns
lea
mov
shlb
clc
and
addr16
dec
jecxz
jns
out
cmpsl
out
inc
bound
cmp
mov
dec
jp
nop
rcrl
jg
fdivrl
mov
xchg
into
pop
xor
dec
test
dec
mov
outsl
push
push
adc
pop
jno
movb
into
lds
sbb
testl
xchg
inc
xor
mov
xchg
sub
loope
andl
dec
test
pop
push
push
or
in
cmp
imul
movsb
shlb
aad
jo
dec
inc
movsb
pop
loop
mov
fisubrs
xchg
push
xchg
mov
pop
dec
int
dec
addb
cmp
std
sbb
mov
mov
add
loopne
loope
push
les
push
cwtl
ds
push
rcrl
push
or
jg
gs
inc
mov
sub
repz
loop
sub
ret
in
pusha
xlat
fdivrs
mov
push
mov
dec
iret
inc
xorb
jl
loopne
hlt
aam
or
push
pop
pop
leave
adc
movsb
pop
rclb
mov
sbb
in
lret
in
out
iret
mov
mov
aad
enter
stos
cmp
or
inc
sbb
xchg
ss
pop
ds
shll
mov
addr16
mov
xchg
dec
cmp
xlat
add
mov
cs
adc
out
adc
rcr
imul
arpl
and
or
shll
ss
jno
adc
pop
aaa
ljmp
mov
rcrb
scas
lret
outsb
add
lea
xor
cltd
ljmp
push
jae
sahf
aas
inc
enter
xor
and
sub
lret
mov
dec
js
leave
aaa
lds
in
pop
loopne
test
fsts
push
bound
xor
rolb
sbb
push
adc
dec
dec
pop
aam
dec
jns
inc
sub
test
pop
shll
or
mov
es
jae
loop
or
push
cmpsl
dec
cmp
xchg
mov
cmp
insb
in
push
and
fcoms
xchg
mov
adc
sbb
into
lds
dec
cmc
cmp
push
test
add
adc
sbb
stos
adc
dec
std
mov
or
gs
addr16
pop
inc
inc
pushf
or
sub
mov
shrl
push
push
xor
jp
xchg
int
push
repnz
push
test
aad
stc
cmc
add
in
adc
into
jecxz
lcall
lock
xor
inc
mov
insl
insb
icebp
push
sbb
out
push
inc
mov
inc
ljmp
rorb
repnz
and
pop
adc
cmp
iret
jmp
test
test
mov
into
and
cmp
test
push
mov
jg
cmpsb
dec
and
dec
stos
arpl
out
or
mov
inc
arpl
adc
inc
pop
sahf
or
push
lods
mov
imul
stos
dec
and
cmp
fidivl
or
or
cmp
push
jecxz
sub
jge
out
cmp
stc
add
orb
mov
jge
lret
push
push
add
lea
ror
aam
sub
in
mov
adc
lret
pop
or
xchg
les
sbb
call
push
and
mov
mov
mov
mov
sbb
sub
pop
xor
stos
scas
iret
cwtl
jle
ja
lret
jg
jg
fidivrl
iret
out
fwait
sub
movsb
push
out
adc
outsb
aad
stc
push
into
cmpsb
sub
and
aam
popf
push
or
xchg
lret
jbe
push
jnp
mov
lea
mov
out
rorb
pushf
shrb
push
and
lods
push
movsb
fwait
sub
or
inc
xchg
push
push
sti
dec
hlt
mov
daa
jbe
add
push
push
pop
pop
jb
imul
and
popf
lds
xchg
das
push
mov
insl
lret
push
sbb
adc
cltd
movl
nop
shrl
or
xor
sub
pop
fwait
pop
xchg
loop
ret
sbb
push
pop
cmp
out
aaa
jge
shl
repz
sbb
jp
mov
and
push
clc
out
imul
hlt
out
mov
mov
or
fistpll
mov
enter
jne
pop
subl
rcrb
enter
fwait
repz
jg
test
xor
scas
cmp
sbb
inc
repnz
and
leave
xor
xchg
aam
xchg
test
test
pop
cmp
mull
sub
jge
jmp
mov
or
cmp
jbe
pop
xlat
fucom
or
pushf
jl
jno
pmaddwd
pushf
cmpsl
mov
dec
adc
pop
out
cli
mov
mov
push
adc
jo
sub
sbb
leave
imul
xor
cmp
inc
and
pop
pop
cmpsl
sbb
cli
test
push
shl
sub
pusha
push
les
cli
popl
adc
rcrl
inc
add
repz
push
inc
jmp
aaa
mov
jo
nop
fcmovbe
ss
jnp
movsl
mov
xchg
out
or
or
arpl
mov
jecxz
fs
fmuls
add
pop
push
push
xor
stos
inc
jmp
test
pop
dec
out
sub
adc
jle
mov
pusha
jne
dec
xchg
gs
inc
mov
mov
xchg
ret
xchg
fildll
mov
push
and
mov
adc
or
pop
xor
xchg
jnp
ss
or
arpl
xchg
add
or
mov
or
cmp
ret
xor
push
jp
repnz
jmp
and
cmpsl
lea
push
scas
test
pusha
outsb
cmp
call
mov
jecxz
subl
mov
add
es
cmp
pop
inc
cmp
ds
popf
dec
and
jecxz
mov
sbb
cwtl
and
mov
icebp
shll
sub
xor
mov
insl
call
test
in
sbb
test
mov
add
push
dec
ja
notl
test
inc
scas
mov
in
push
adc
jp
mov
mov
sahf
xchg
and
outsb
fisttpll
data16
mov
movsl
push
cltd
xchg
pop
int
inc
andl
lcall
test
fsubl
nop
stc
into
leave
fwait
xor
sub
mov
jecxz
ljmp
xchg
pop
mov
jo
dec
negl
dec
and
add
daa
add
nop
data16
xor
ja
inc
aas
ret
and
jg
stos
scas
ljmp
and
dec
cmp
sti
sbb
cmpsl
movsl
push
jmp
setbe
fimuls
fisubrs
pop
adc
lds
icebp
lods
rcl
inc
or
out
out
enter
sbb
dec
test
pop
in
fldcw
call
xchg
es
lret
inc
ficompl
mov
jp
sbb
mov
pop
cld
sub
lock
xor
push
rolb
cmpxchg
jnp
in
call
pop
adc
and
dec
sbb
mov
inc
sti
sbb
xchg
add
vfmsub132sd
mov
mov
mov
ds
mulb
es
sbb
jecxz
cs
sti
push
inc
fnstenv
ss
push
jl
jg
push
xchg
push
in
mov
mov
loope
popl
js,pt
push
insb
mov
push
test
sbb
cld
xchg
imul
repnz
dec
inc
lcall
aam
sub
xchg
nop
cmp
lods
mov
insb
outsl
mov
mov
pop
dec
andb
and
push
sub
xchg
cltd
sbb
outsb
and
repz
push
scas
dec
pop
loop
xchg
fnstsw
fnstenv
lret
mov
sbb
sub
in
xchg
outsl
daa
mov
mov
inc
fistl
mov
cmp
fcomps
imul
cmp
aas
addb
adc
adc
add
in
das
xchg
faddl
loop
mov
int3
xchg
xchg
test
ret
mov
outsl
xor
mov
xor
subl
mov
inc
lock
jae
stc
pop
xchg
call
and
mov
xorb
ds
outsb
fnstcw
mov
sub
stos
rcrb
add
add
jne
xor
jno
pushf
xor
divb
mov
and
pop
mov
in
xor
pop
mov
push
or
jbe
jle
out
dec
idivl
cmp
outsb
test
call
js
hlt
mov
xchg
rorl
adcl
shrl
add
adc
into
insb
xchg
inc
adc
cli
lods
and
clc
icebp
xchg
push
psubsw
stos
fs
scas
cmp
scas
xchg
or
jmp
xor
sbb
cmpsl
jmp
loopne
stos
popa
mov
cs
mov
lock
push
dec
fwait
mov
adc
and
mov
adc
sbb
mov
adc
pop
mov
cwtl
pop
push
lea
inc
push
jmp
outsl
pusha
pop
jp
insb
sbb
repz
xchg
push
cmpl
jae
sub
xchg
int
cvtdq2ps
test
xor
mov
inc
sub
mov
and
jne
aas
push
ljmp
movsb
mov
adc
arpl
xchg
shl
and
pop
jb
cmp
adcl
jno
sub
mov
lret
cs
aad
je
int
add
sbb
adc
and
inc
dec
dec
and
out
inc
out
push
xchg
shl
xchg
push
lods
das
add
push
mov
mov
stc
dec
negl
outsb
push
ret
sub
mov
ljmp
addr16
rorl
sbb
sub
cmpsb
insb
add
mov
ja
xor
add
mov
sub
pop
jg
adc
lret
adc
movsb
leave
sub
jmp
pushf
movsb
lahf
gs
add
mov
rclb
jl
or
adc
testl
xlat
fsubl
jns
daa
popa
dec
iret
negb
push
mov
sbb
ror
out
gs
ret
mov
jb
mov
mov
and
in
mov
jae
shlb
push
imul
movsb
cmp
xchg
in
and
test
mov
shrl
lods
cs
testl
nop
ljmp
mov
cmp
jo
mov
movb
mov
fcom
popl
and
stos
push
xor
push
mov
lds
mov
pushf
out
stos
fs
fcomps
sbb
inc
push
out
sbb
je
and
scas
adc
mov
dec
in
divl
sub
xchg
pop
mov
jmp
cld
leave
pop
scas
fiadds
cmp
or
xor
pushf
icebp
pop
in
pop
pop
adc
jg
add
adc
lods
mov
and
jne
cmpb
cmp
push
xchg
stos
scas
fcmovbe
and
push
push
inc
mov
lods
sbb
popf
iret
push
inc
clc
mov
iret
popa
fcoml
sti
fidivrs
or
jge
imul
inc
or
stos
sub
negl
add
inc
pop
inc
jo
jns
js
xor
xchg
mov
mov
lods
mov
int3
dec
stos
and
jl
mov
dec
fdivr
xchg
addl
aad
adc
jbe
jnp
or
fldpi
jo
loope
loop
adc
arpl
push
mov
xor
push
pop
int
xor
jecxz
stos
sarb
outsb
lock
test
js
add
xchg
ss
in
pop
movsb
stos
inc
ficompl
mov
xor
xchg
cmpsl
arpl
test
or
xor
out
pusha
aas
cmpsl
lret
sbb
lock
lcall
test
pop
mov
jae
mov
jnp
xchg
repnz
adc
dec
pop
shlb
fcmovbe
enter
testl
xchg
jno
sub
out
mov
sbb
sbb
outsl
ret
and
les
mov
cmp
add
and
shlb
jmp
mov
push
mov
pop
scas
daa
aad
fcmovu
mov
mov
xchg
xchg
mov
enter
mov
jmp
faddl
gs
inc
dec
sbb
jb
jg
push
mov
stos
mov
or
imul
xchg
insb
adcb
gs
iret
or
call
cmpsb
lds
adc
movsb
popf
iret
jp
adc
stos
xchg
jge
das
adc
mov
inc
dec
mov
cmpsb
xchg
push
loope
push
dec
iret
movsl
mov
add
fsubs
nop
dec
dec
popf
push
jbe
sarl
lea
out
mov
cmp
cli
adcl
push
pop
sub
push
inc
pop
dec
xor
daa
stos
lcall
pop
mov
test
bound
adc
les
xor
mov
outsb
out
call
aad
push
dec
gs
and
adc
in
cmc
mov
cltd
xchg
rcll
adc
push
adc
into
xchg
xchg
or
or
adc
mov
pop
loop
inc
in
add
sbb
les
dec
sub
lods
push
shrl
insl
xchg
fstpt
jb
test
mov
into
lret
cmp
ret
adc
sbb
mov
lods
jg
fwait
push
jbe
xlat
and
xchg
and
sub
xor
fldt
mov
fimuls
call
mov
mov
shll
in
xor
orb
in
scas
loop
pop
mov
sub
pop
filds
pop
pop
xor
std
cld
jecxz
jbe
inc
xchg
adc
fs
push
stc
fildl
add
movsb
lret
add
test
std
arpl
adc
std
pusha
mov
sbb
push
ret
leave
push
and
aas
repnz
xchg
mov
push
fdiv
movsb
xchg
pop
repz
dec
aad
icebp
jo
pop
pop
sbb
add
sbb
cmp
dec
lret
sub
stos
jo
adc
sti
cmp
inc
je
dec
cmp
in
xchg
dec
pmullw
aam
sub
shrl
push
pop
jl
stc
fwait
insb
les
out
insb
or
push
sbb
aam
pop
daa
lahf
mov
aas
pop
mov
ret
pop
sub
out
inc
bound
test
cmpsl
pop
call
pop
sub
dec
sbb
arpl
sbb
lret
adc
push
lahf
int
ss
fists
popf
mov
push
sub
lahf
push
in
lds
pop
lods
or
mov
test
dec
dec
and
cmp
enter
cmp
inc
jecxz
xor
sahf
mov
into
adc
mov
inc
inc
or
pop
push
nop
inc
jb
add
xchg
fimull
push
movsb
dec
add
jae
xor
popa
jl
inc
xchg
push
out
fdiv
ss
enter
repnz
pop
div
sub
mov
push
in
push
inc
xor
scas
mov
mulb
inc
pop
or
cmpsl
insb
cmc
push
xor
dec
mov
push
sahf
add
addl
add
dec
mov
in
test
or
adc
push
ffree
inc
movsl
sub
jb
bound
pop
pop
mov
xor
test
insb
dec
sbb
movb
cs
jge
sbb
shlb
dec
ret
xor
push
fimull
lret
dec
xchg
xor
pushf
mov
lock
mov
sbb
jecxz
fsubp
and
stc
fistps
add
aam
fcmovu
lea
adc
cmp
xchg
add
xor
cli
int
out
clc
call
jmp
outsb
mov
adc
pusha
fstpt
push
jecxz
bound
clc
or
std
lcall
inc
out
xchg
lods
jne
xor
xchg
xlat
lods
jg
dec
in
mov
ds
adcb
mulb
or
pop
push
in
nop
xchg
mov
orb
mov
loopne
cmove
je
jns
jns
sub
inc
mov
inc
stc
jl
test
pop
aas
repz
cmp
stos
jg
lock
insb
xchg
fisubs
adc
dec
mov
push
push
mov
xchg
lret
daa
push
or
repz
loope
xor
idivb
mov
pop
add
dec
mov
pop
insl
mov
fsubrp
pop
sub
xchg
pop
bound
dec
stos
mov
sbb
xor
movsb
cmpsl
notl
push
rcrl
lret
xchg
mov
outsl
jmp
fldenv
push
insl
jb
sbb
stos
lds
imul
repz
dec
idivb
pop
mov
dec
mov
in
xchg
mov
orl
fldl
jbe
jae
mov
jmp
xchg
jae
mov
mov
mov
mov
cli
push
jp
xchg
dec
pop
or
cltd
into
or
dec
push
and
jg
push
push
into
xor
mov
sub
pusha
push
hlt
jp
imul
fisttpl
dec
jnp
hlt
and
jnp
in
cmp
jg
mov
xor
mov
cmp
popa
sbb
xor
call
adc
push
sub
les
cltd
mov
mov
mov
sub
push
addb
movsb
repnz
pusha
pushf
mov
adc
xchg
mov
std
sbb
arpl
sarl
ret
lret
loop
cmpsb
sbb
sbb
push
data16
xchg
mov
or
push
mov
lret
xchg
ja
cmp
jae
cmp
jle
sbb
push
xorb
clc
stos
push
js
mov
pop
ja
mov
fwait
cmp
xor
or
dec
or
shll
add
jp
popa
cltd
aas
push
lods
stc
nop
mov
clc
xchg
adc
imul
or
mov
inc
sbb
jno
test
xchg
pop
fsubrp
or
inc
test
cmpsl
mov
icebp
push
or
add
sti
into
mov
mov
ret
mov
js
shl
add
dec
jl
lret
cmp
ss
pop
cmp
cli
mov
mov
push
jg
mov
cmpb
add
dec
cwtl
in
mov
mov
call
and
insb
sub
mov
les
sbbb
fcomps
xchg
iret
mov
or
outsl
rcrb
je
or
loope
test
imul
push
dec
and
inc
je
lret
test
out
not
std
fidivs
icebp
rolb
lods
mov
mov
call
mov
jo
movsb
or
lods
int
xchg
popf
dec
sbb
adc
sbb
push
inc
shll
add
dec
pop
add
gs
cli
push
loopne
incl
call
popf
pop
cmpsb
jae
xor
fdiv
adcl
cmp
enter
and
fldcw
dec
lods
cmp
jne
ss
add
sbb
lds
nop
dec
sahf
and
xchg
stos
lret
bound
add
out
inc
or
lds
mov
and
popf
pop
inc
mov
push
sub
mov
mov
jb
out
cmp
push
ret
testb
add
sub
push
jbe
imul
mov
or
je
in
adc
inc
sbb
testb
push
std
into
addr16
jle,pn
xchg
popf
mov
fnsetpm(287
cmp
add
xchg
adc
mov
xchg
psllq
out
nop
or
movsb
bound
adcl
mov
add
cli
inc
mov
fdivr
mov
mov
movsb
imul
je
int
push
dec
movsl
fsts
iret
mov
out
mov
sub
adc
jge
xor
iret
push
add
in
inc
rcrl
mov
mov
sub
lea
mov
cmp
cmp
rcrb
cld
mov
xor
sbb
cwtl
pop
push
push
mov
cmp
gs
mov
js
adc
mov
ljmp
mov
andb
dec
adc
test
test
and
push
dec
fdivrl
mov
mov
mov
inc
adc
adc
jae
pop
popl
ret
rcl
scas
mov
add
and
xor
cmp
cmp
cld
adc
orl
ss
ret
push
cmpsl
leave
inc
ror
jmp
ljmp
pushf
bound
imul
sbb
pop
mov
add
sbb
fists
and
mov
xor
and
pop
mov
into
lret
call
mov
decb
aaa
xchg
jg
adc
mov
fcoms
xor
stos
xor
sbb
jnp
push
jne
xchg
xor
rolb
fistpl
cmp
push
or
lods
fwait
jns
iret
mov
cmpsl
repz
into
frstor
lods
jmp
dec
arpl
push
icebp
insb
or
lock
ljmp
andl
shlb
in
mov
xchg
xchg
push
test
shlb
pushf
push
mov
scas
cmc
insl
mov
addr16
out
int
test
ror
inc
fistps
push
xchg
dec
test
cmp
xchg
or
xor
xchg
mov
xor
stos
jns
ret
fisttps
je
shll
std
mov
mov
je
push
xlat
std
inc
pop
mov
outsl
and
repz
inc
mov
iret
jne
dec
mov
imul
std
imull
or
push
test
xor
bound
dec
call
adc
adc
xor
shll
inc
lods
ds
mov
and
loopne
jmp
loope
pop
imul
aaa
jp
rcrl
outsb
loope
bound
jns
icebp
jg
sub
nop
and
je
xor
fwait
shl
ds
ss
test
sbb
inc
inc
sub
jno
loope
dec
jg
push
mov
sbbb
push
fimull
cmp
mov
mov
xor
add
imul
dec
xchg
cmp
adc
repz
push
mov
dec
lret
adc
dec
pop
inc
xchg
notb
mov
fwait
mov
xor
dec
adc
dec
lahf
ja
push
xchg
in
scas
js
ret
popf
sbb
xchg
mov
jmp
fmulp
roll
sahf
mov
dec
mov
out
dec
test
shrw
mov
xchg
push
cli
push
adc
inc
popa
daa
enter
lahf
push
sbbb
lock
cmp
sub
jge
lock
pop
dec
xchg
cmp
dec
push
pop
push
xchg
adc
test
loope
adc
notl
adc
xor
sbb
enter
sbbl
into
decl
dec
inc
hlt
adc
faddp
lods
xor
cmp
xor
out
jnp
jbe
in
or
out
int
bound
inc
test
mov
push
inc
fsubl
and
or
and
pushw
stc
inc
shll
das
dec
push
fisttpll
ja
mov
cmpsb
cmp
pop
hlt
xchg
jb
out
in
cwtl
cmp
sbb
sub
stos
into
aad
or
outsb
dec
mul
ljmp
fldcw
pop
adc
fwait
lods
iret
outsl
jns
xlat
mov
xchg
int
mov
cmp
mov
ja
mov
sbb
ret
xchg
fdivs
push
pop
fwait
xor
rol
mov
int
ret
out
cmpsb
jge
add
fildl
js
add
adc
ja,pt
inc
add
cltd
mov
xchg
dec
inc
inc
mov
jo
mov
int
lea
movsl
push
sbb
mov
sti
fcoml
orl
mov
cmp
loopne
lods
scas
fcomi
arpl
lea
fs
out
mov
mov
inc
push
test
repz
inc
hlt
cmc
sbb
arpl
mov
fisubs
add
fdivrs
bound
adcb
lods
fwait
or
sbb
lods
push
rorb
test
push
mov
jne
jle
imul
or
adc
rcrl
lea
pushf
pop
ja
fcomps
inc
int
add
pop
fldl
addr16
push
mov
adc
jo
lret
add
stos
dec
add
out
push
lds
fbstp
or
aas
xchg
mov
adc
loop
fs
lret
inc
mov
push
mov
cwtl
mov
and
ja
scas
cli
push
addr16
inc
clc
xor
mov
mov
inc
jbe
in
insl
scas
stos
adc
pop
into
mov
popf
push
mov
loop
leave
pop
shrb
cmpsb
movsb
push
pusha
push
push
outsb
mov
pushf
call
movsb
outsb
or
jmp
pop
push
mov
push
scas
ljmp
dec
scas
mov
dec
testb
int
lods
rcrb
or
movsb
jb
lcall
mov
sub
in
lahf
jmp
cli
aad
shrb
inc
jmp
xchg
adc
fsub
mov
adc
and
pop
pop
mov
xor
add
xchg
outsb
dec
mov
sub
pop
jp
ljmp
insb
loop
dec
loopne
xchg
push
pop
mov
aad
sbb
cmpsl
lods
jecxz
fists
loopne
push
cmpsb
sbb
mov
cltd
mov
ret
mov
popa
icebp
adc
xor
arpl
xor
insl
adc
jmp
loop
or
jae
into
in
mov
in
pop
lret
or
push
rcrl
mov
sahf
fimuls
imul
xorb
fsubl
adc
sbb
jmp
jecxz
xor
shrb
ss
loop
pusha
cmp
xchg
push
mov
popa
imul
js
cmp
jmp
ljmp
add
movsb
push
push
ss
fiadds
movsb
sub
fsts
insb
int3
sbb
or
lahf
lret
jecxz
out
push
filds
int
lret
jbe
mov
movsl
push
sti
adc
mov
sti
xchg
out
pop
fdivp
pushf
pop
pop
sub
xlat
xor
in
cs
jns
adc
rol
cld
cwtl
roll
imul
ja
out
lea
aaa
mov
and
lahf
jnp
fldt
xor
movsl
pop
push
aaa
test
cmp
or
pop
or
inc
push
daa
fdivrl
lods
test
adc
or
loopne
mov
mov
and
jo
sahf
sbb
int
test
dec
imul
in
pop
hlt
jmp
mov
pop
loopne
in
ljmp
pop
ret
lock
cmp
in
dec
dec
test
loop,pn
fldt
cmc
mov
fcoml
xor
roll
jecxz
adc
jl
xor
js
sub
insl
in
mov
xchg
cmc
inc
xlat
mov
popa
sub
in
fucom
fsubrs
data16
out
sub
leave
xor
cmp
mov
or
sbb
push
mov
addb
mov
add
adc
and
mov
sub
jle
adc
movsb
fst
test
cltd
sarl
pop
xchg
test
lods
nop
mov
mov
cmp
fildll
test
dec
xchg
mov
cs
mov
adc
jecxz
and
insl
aam
adc
xchg
adc
dec
repnz
test
adcb
dec
jge
pop
dec
out
pop
cmp
dec
cmp
xchg
sub
jo
mov
test
orb
xchg
sti
loopne
insl
sub
add
push
mov
xor
into
push
cmp
aaa
nop
pusha
pop
pop
xor
shll
addr16
ja
jb
arpl
jg
sub
arpl
in
sbb
mov
jle
ja
push
insb
adc
in
test
jge
aaa
imul
les
test
mov
fistps
daa
mov
pop
mov
imul
lcall
inc
xchg
shll
inc
adc
test
cmp
fs
in
mov
cmp
or
add
js
btc
cmc
movsl
and
dec
xchg
dec
jl
mov
push
mov
sub
jns
data16
add
iret
ret
or
sub
out
pop
sbb
inc
ds
int
xchg
inc
mov
mov
paddd
mov
repz
lahf
rol
push
das
sub
or
cld
and
shlb
dec
stc
outsb
jbe
xor
sbb
xor
or
cmp
cmp
loopne
clc
pop
mov
loopne
mov
and
out
dec
push
dec
sti
sahf
jae
mov
aam
or
push
mov
push
fidivs
jno
cmpsb
ret
cltd
int
jle
adc
mov
sahf
jmp
xchg
push
shr
fcmovne
es
and
outsb
in
incl
mov
add
cld
jne
scas
or
popf
in
std
imul
gs
das
sbb
pop
xchg
xchg
sahf
stos
add
jle
xchg
arpl
push
aaa
cmp
cld
lds
mov
fiadds
test
mov
pop
adc
rolb
sbb
or
std
sbbb
les
bound
nop
sbb
and
sahf
inc
add
dec
rolb
std
or
pop
mov
repz
adc
dec
inc
push
sbb
mov
popf
jle
into
fs
cmc
stc
fwait
arpl
push
fwait
inc
lods
stc
pop
xor
es
daa
sbb
inc
mov
int
cmp
dec
xor
push
dec
daa
cmp
mov
pushf
pop
ret
jp
lea
inc
xchg
stos
and
sbb
stc
xor
es
adc
test
mov
xor
xchg
pop
xorb
fwait
into
ficoml
adc
jo
xor
repnz
subb
sti
sbb
lods
push
pop
int
scas
rcll
push
leave
test
lret
ficoms
iret
push
scas
xchg
jg
out
mov
iret
cmp
sti
mov
cs
sbbl
je
movsl
lods
adc
lahf
xor
mov
enter
mov
push
or
add
adc
jle
xchg
jmp
out
inc
ss
mov
cld
bound
nop
mov
scas
movsl
loop
xor
fbstp
xchg
flds
in
les
lcall
test
push
adc
push
inc
aas
sbb
shl
xchg
cmp
or
cmc
repnz
sbb
mov
xchg
movsb
jmp
cmpsl
shrl
mov
jae
cmp
jl
dec
pop
inc
mov
push
xor
mov
pop
aaa
in
push
shl
and
outsb
lods
mov
mov
fptan
cmp
ss
push
ds
loopw
or
hlt
sbb
aad
pusha
adcl
push
imul
vcvtss2usi
cwtl
and
adc
cmp
and
sub
cmpl
mov
fwait
mov
rcr
shr
xchg
stc
sbb
pop
mov
iret
loopne
cmp
xchg
fisubrs
push
loope
xchg
fcomp
cld
push
mov
jns
mov
jle
mov
and
lret
pushf
cmc
sub
push
push
andl
push
mov
jnp
xchg
lock
sub
mov
insb
dec
out
push
cmp
pop
cmp
mov
ficoml
ret
push
cmp
cmp
xchg
lods
cmpsb
ds
test
adc
dec
dec
xor
data16
shlb
jg
js
sti
adc
inc
push
mov
pop
inc
out
xchg
add
pop
mov
push
mov
cmpsl
add
daa
sahf
dec
je
dec
outsb
jbe
mov
pop
lds
loop
ss
inc
cmp
stos
movsb
cmp
js
xor
int3
mov
insb
xchg
inc
or
mov
lahf
popf
subl
aas
xchg
xchg
sbb
mov
es
xor
outsl
inc
cmp
xor
ret
imulb
lea
dec
outsl
mov
outsb
lods
flds
mov
mov
cmpsb
fadds
fstpt
movl
push
pop
mov
leave
dec
mov
mov
xor
stos
inc
sti
xchg
sbb
add
jle
adc
jns
fnsave
xchg
aas
ret
cld
sub
xor
mov
and
movsb
sub
pop
insl
mov
std
mov
and
mov
dec
jno
mov
push
nop
lock
in
pop
jmp
or
or
nop
nop
imul
xor
imul
cli
jle
pop
shlb
adc
lock
mov
push
jmp
lret
jmp
imul
dec
in
cmpb
nop
mov
test
enter
xchg
es
imul
mov
shll
nop
scas
idivb
xor
mov
sub
ja
stos
mov
clc
test
out
das
sub
cmp
and
test
cli
data16
inc
movsb
fcoml
stos
add
pusha
sar
or
inc
xor
pop
imul
pop
imul
ret
cmc
int3
jle
cmpsl
jle
mov
cmpsl
les
jns
out
xchg
movsl
xchg
fs
idivb
leave
inc
mov
in
stos
jns
adc
or
and
adc
mov
test
scas
out
fldenv
dec
inc
sarb
popa
mov
mov
xor
sbb
jge
xor
push
xor
pop
adc
fsubrs
jmp
cmp
jae
cltd
pop
negl
xchg
dec
mov
jbe
ret
jecxz
cli
subl
mov
cli
sbb
jg
fsts
and
pop
rcll
jne
add
movsb
push
sub
jne
or
fcoml
mov
or
mov
sub
popa
jne
test
xchg
jbe
out
adc
mov
movsb
push
icebp
and
dec
sbb
jnp
cwtl
lret
sti
mov
push
add
sub
mov
lahf
dec
jo
adc
outsl
movsb
test
clc
jp
mov
sbb
addr16
inc
xor
rcl
into
jl
daa
and
insb
sbb
stos
enter
mov
sbb
and
shl
rol
scas
faddl
inc
push
mov
mov
or
inc
outsb
push
pop
pop
test
or
loop
fbld
and
seto
xchg
jae
nop
outsl
scas
or
pop
jno
cmp
jmp
lret
jo
pop
out
cwtl
pusha
std
sbb
sub
sub
ljmp
add
ret
cmp
and
or
add
xchg
mov
push
in
cmp
or
cmpsl
or
rcl
xchg
ljmp
pop
rorb
lock
in
lds
popf
jne
rcl
repz
xor
cwtl
push
dec
test
sahf
mov
leave
cmpsb
sti
movsl
xchg
ljmp
mov
jecxz
pusha
mov
jmp
cmp
or
negl
sahf
inc
sub
cld
and
mov
jge
xlat
xor
sbb
mov
jne
rcrl
shlb
mov
sarb
push
scas
jg
outsl
sbb
ror
mov
cmp
xchg
loope
sbb
add
movb
stos
xor
mov
mull
sbbb
push
nop
jb
push
rcr
inc
xchg
popf
cmpsb
adc
and
call
add
pop
mov
enter
sub
iret
pusha
sub
dec
jae
int3
inc
rcrb
jp
jle
xor
out
fcoml
push
out
pop
ss
adc
movsl
xchg
insb
sbb
pusha
push
repnz
fcomip
aad
inc
call
cmpsl
pop
jae
jne
out
cmp
adc
pop
out
call
sub
addb
aam
out
jge
mov
mov
std
sbbl
leave
fisttps
jns
sub
jmp
xor
mov
mov
pop
pop
xchg
mov
fwait
push
mov
iret
jnp
jle
mov
pusha
jg
jle
add
arpl
lret
out
out
jmp
sbb
ja
cmp
add
leave
mov
push
mov
ja
mov
sub
nop
inc
push
cld
loop
push
adc
lock
pop
inc
lods
int3
cs
sbb
jmp
push
dec
xchg
and
inc
mov
scas
push
cmp
stos
cmpsb
out
hlt
xchg
popa
xor
gs
out
or
add
lods
cld
push
fwait
cmp
mov
cmp
incl
fstpl
fidivs
cs
insl
rcll
pop
repz
test
cmp
mov
outsl
xchg
or
xchg
adc
adc
data16
mov
push
iret
hlt
negb
xor
in
jno
test
xor
pop
add
cmp
clc
sahf
sub
js
decb
mov
jnp
fucomi
mov
jbe
or
push
je
aas
push
pop
and
arpl
inc
in
push
out
loopne
push
add
xor
jb
enter
mov
sub
movsb
add
mov
lea
loop
sub
cmp
push
sbb
ds
sub
jbe
inc
andb
imul
sbb
test
lret
xchg
mov
mov
insl
lea
sub
je
insb
testb
jp
jmp
lret
imul
jp
and
test
xor
lcall
cmp
pop
mov
push
fcmovnb
cmpsb
out
sub
inc
cmp
js
jae
mov
or
mov
fiaddl
sub
lods
add
mov
sahf
jne
mov
iret
cmp
out
dec
test
mov
subb
xor
sub
add
jae
cwtl
pop
jnp
call
subb
mov
dec
out
movsb
or
dec
cmp
loope
pop
lahf
js
arpl
or
xchg
or
cmp
xor
push
scas
vgatherdpd
repnz
xor
loopne
xor
jno
int3
fnstsw
jl
ret
scas
sub
push
jae
stos
hlt
push
dec
fwait
sbb
push
cmpsb
xchg
scas
fwait
inc
out
mov
pop
fists
repz
outsb
jb
mov
fbstp
loope
pop
mov
pop
push
mov
jbe
jo
add
jl
mov
icebp
in
mov
pop
xchg
fdivs
lcall
xchg
in
cmp
stos
cs
std
loopne
dec
xchg
mov
test
out
mov
sub
mov
push
lods
cmp
aad
or
aaa
pop
int
mov
pop
mov
push
nop
mov
inc
xor
cmpsl
sbb
dec
mov
pop
loope
pop
arpl
inc
dec
and
pop
lods
cmp
das
sbb
pop
jmp
repz
mov
stos
mov
xor
roll
enter
enter
sbb
pop
sbb
cltd
pusha
pop
cmp
and
in
pop
add
sar
mov
mov
sub
ss
push
fnstenv
ljmp
leave
sarl
sbb
and
sti
sub
test
mov
push
inc
jp
repz
mov
mov
outsl
mov
test
push
push
fistps
dec
lods
das
aas
mov
shll
test
lcall
fisubrl
in
mov
and
icebp
mov
xor
cwtl
push
mov
dec
mov
lahf
rcll
push
dec
dec
cli
xlat
mov
sbb
ficoml
or
jle
xlat
loope
mov
ret
push
in
in
mov
push
fldenv
or
test
shll
xlat
jle
jbe
jnp
aaa
dec
mov
insl
and
cltd
mov
or
mov
sbb
cmp
js
sub
fdivl
jo
sub
hlt
fisubs
sarl
nop
jp
repnz
or
push
pop
enter
mov
aaa
shll
jae
es
push
addr16
cli
shr
mov
xchg
jbe
sahf
subb
cwtl
arpl
and
mov
inc
fs
push
mov
or
cwtl
or
push
add
and
or
jge
cmp
out
loop
or
jp
icebp
int
push
aaa
adc
mov
xchg
mov
iret
xchg
dec
sbb
dec
fidivs
fs
imul
test
push
xchg
into
inc
call
inc
push
imul
fisubl
xor
xor
int3
test
ret
hlt
test
inc
mov
pop
inc
xchg
pushf
pop
xchg
adc
sbb
in
scas
popf
ja
inc
fisttps
pop
push
sub
mov
push
das
mov
mov
add
jg
inc
imul
pop
sbb
ja
movsb
xchg
fisubs
mov
stos
dec
mov
dec
cmp
dec
mov
fidivs
aaa
xchg
sbb
in
scas
repz
jb
je
jno
cltd
sbb
stos
popl
xchg
xlat
insl
movsb
dec
daa
inc
gs
loopne
jno
pop
test
inc
jp
mov
or
add
add
push
das
sub
jg
dec
ds
and
nop
push
into
aam
mov
rcl
lret
sub
push
sub
xchg
push
sub
popf
daa
out
ljmp
out
cmp
mov
inc
sbb
push
scas
icebp
and
pop
xchg
dec
inc
jp
and
iret
sbb
jbe
in
pop
loope
adc
pop
add
mov
lret
popf
mov
push
nop
int3
inc
int
jecxz
cmpb
sub
and
cmc
or
gs
in
xor
jno
js
outsb
ds
insl
leave
pop
jnp
popa
int
fmuls
testl
test
xor
xor
out
into
mov
test
sar
pop
lcall
push
mov
call
mov
cmpsl
add
icebp
dec
out
sub
or
sub
mov
pop
or
push
mov
sarb
gs
xlat
stc
loope
mov
bound
dec
negl
and
xor
push
xor
in
mov
cwtl
jle
jmp
out
cltd
push
mov
sbb
jno
mov
sub
pop
lret
push
xchg
mov
jmp
mov
push
cmpsl
cmc
add
pop
and
popa
pop
jnp
push
aad
cs
mov
adc
cmpsl
insb
fbstp
dec
jo
jne
xchg
repnz
sarb
je
add
pusha
mov
cld
scas
negl
lahf
nop
sub
dec
pop
rolb
sbb
aaa
das
and
sbb
mov
inc
movsb
lods
ds
aaa
lock
jmp
popa
inc
mov
addr16
shl
jg
mov
adc
iret
jae
lea
pop
fs
fbld
dec
movsl
mov
inc
fdivrl
clc
cmp
sahf
cwtl
cmp
inc
adc
dec
lods
lret
jb
and
loop
ficomps
notb
lcall
stos
add
xor
insl
aas
stos
sub
out
movsl
jmp
or
int
movsl
lea
pop
mov
xchg
aad
adc
inc
ret
dec
mov
dec
xchg
cwtl
lods
rcr
mov
lock
and
mov
push
mov
mulb
cli
movsl
mov
adc
jmp
mov
cmp
xchg
lea
lahf
iret
sahf
aas
testl
bnd
aad
imul
in
pop
icebp
mov
mov
popa
inc
addr16
shll
jmp
mov
test
inc
mov
fldenv
pop
xchg
test
popa
mov
fwait
shll
fdivs
std
into
pop
adc
pop
xchg
dec
popa
enter
jmp
in
addr16
pop
mov
jge
inc
jo
loopne
int3
mov
add
aam
jmp
jnp
pause
pop
mov
mov
es
push
and
xchg
inc
pop
cmp
mov
cmp
and
xor
or
loopne
testb
push
inc
sbb
cmpsl
mov
das
dec
and
mov
ds
push
xchg
mov
je
ljmp
sub
das
xchg
xchg
cmpsb
and
inc
inc
inc
mov
push
scas
or
and
fxch
sti
mov
xor
les
cmp
or
xchg
loop
mov
int
inc
or
testl
jb
pop
jnp
and
dec
sbb
xchg
xchg
add
shll
jne
jno
inc
or
and
adc
shlb
xor
fld
cmp
push
insb
xor
cli
lret
aaa
cltd
in
cmpsb
or
shll
adc
out
je
loop
out
and
xchg
jle
cmp
sahf
lock
in
cltd
xchg
pop
fistl
jmp
call
xor
addr16
mov
inc
les
aaa
adc
inc
mov
and
int
test
cwtl
ss
dec
or
jns
jge
clc
loope
imul
lret
xor
iret
stc
test
inc
mov
lods
mov
in
lock
mov
ljmp
push
adc
push
mov
sub
or
jg
les
and
mov
push
sbb
cmp
pop
or
fldcw
cmp
push
jnp
mov
mov
int3
mov
jae
lret
add
in
adc
or
fstpl
je
ja
pop
xor
jnp
sbb
test
mov
arpl
arpl
popa
mov
pop
pop
bound
sub
insl
xadd
je
push
test
out
mov
outsb
ja
mov
loop
jns
rcl
fidivrs
addr16
xor
fadds
test
movsl
jg
iret
sub
add
sub
or
inc
fcomps
dec
sti
out
iret
pusha
cli
pop
add
int3
les
mov
push
dec
mov
inc
fsubp
outsb
je
outsb
test
orl
movsl
orl
fwait
xchg
mov
inc
pusha
xchg
or
dec
das
repz
or
dec
jg
arpl
fildll
dec
push
les
rcr
cmp
pusha
dec
pop
dec
and
ja
and
lcall
dec
loopne
je
jmp
test
mov
push
add
aas
xchg
jno
add
jmp
shrb
inc
test
push
in
jle
xchg
sbb
scas
outsb
les
cmpsb
xchg
sub
and
cld
rcll
scas
hlt
sub
add
adc
daa
mov
add
xor
xchg
mov
lods
and
je
inc
jno
sarl
push
inc
cmp
addr16
fadds
cmp
in
daa
imul
and
and
mov
cmpsb
repz
jmp
in
enter
inc
subl
mov
inc
xor
je
jmp
or
incl
mov
das
push
lea
popa
jg
in
sarl
sbb
xor
arpl
rcl
pop
add
adc
std
mov
incl
mov
sub
in
pop
jmp
xchg
dec
cwtl
aam
rol
divb
jg
cmp
not
test
aaa
inc
fstpl
xor
push
push
stc
ret
aas
sbb
cmp
pop
sub
mov
mov
stos
mov
cmpsb
rclb
cmpsb
testl
test
xor
outsb
jnp
in
jae
daa
inc
push
pop
mov
popf
mov
xor
mov
popa
or
mov
cmp
sub
sub
cmp
andl
mov
out
cltd
js
addr16
push
fstl
lea
fsub
mov
pop
imul
iret
push
pop
test
lahf
clc
aas
mov
and
push
inc
sbb
fistl
fnstenv
xchg
push
or
mov
mov
mov
mov
cli
or
xchg
enter
and
es
sbb
mov
sbb
push
fwait
pop
cmp
mov
sbb
in
sbb
jae
insl
pushw
push
jb
sbb
leave
adc
mov
rclb
pop
mov
jge
mov
or
xchg
jae
adc
mov
dec
out
push
dec
movsl
mov
mov
into
dec
imul
jae
jmp
mov
sbb
xchg
push
mov
xorb
and
popa
lods
jmp
cmpsl
pop
xor
dec
mov
aam
insb
cmpsl
sbb
xchg
push
adc
jns
lcall
subl
into
mov
repz
mov
das
test
je
ds
mov
icebp
pop
push
daa
insb
call
scas
xor
jmp
push
xor
xor
xchg
push
mov
and
aad
xor
cmc
enter
xchg
jle
loopne
sub
insb
pop
nop
or
pop
xor
aaa
nop
in
xlat
xchg
mov
loop
addr16
data16
cmp
hlt
jne
lds
sti
loop
icebp
movsb
in
loop
push
lcall
pop
inc
out
jae
push
push
scas
scas
fwait
dec
je
pop
pushf
loopne
pushf
jns
rol
and
sub
je
cmp
loopne
adc
inc
lcall
cmp
cwtl
add
mov
aam
lcall
or
pop
repnz
stos
add
iret
push
mov
and
popa
mov
push
push
push
cmp
push
outsb
neg
xchg
repz
bound
fcmovnb
repz
pushf
dec
add
or
mov
test
fistps
les
ret
mov
bound
aaa
mov
loopne
nop
pop
xchg
dec
or
and
jmp
xchg
xor
dec
mov
sti
jge
mov
ljmp
xor
pop
push
push
in
adc
test
js
sbb
repnz
stos
sbb
mov
dec
push
cmpb
jp
dec
in
adcl
repz
in
mov
mov
jno
mov
xchg
sub
mov
sbb
sub
popa
pop
out
mov
sbbl
fwait
and
or
jb
mov
or
xor
add
xchg
pop
and
imulb
add
add
cmp
push
daa
call
push
xor
in
mov
mov
test
lock
lea
inc
pop
pushf
fsubl
lods
jecxz
mov
sub
scas
movsb
fimuls
mov
mov
jb
inc
cmpsl
xlat
mov
dec
or
pop
push
mov
ja
mov
nop
les
mov
out
lret
mov
fildl
fnstenv
out
inc
icebp
sar
pushf
mov
js
nop
push
icebp
pop
jne
jge
dec
ret
lret
mov
sub
mov
cmc
pop
xor
jmp
mov
jo
dec
data16
cmp
mov
arpl
push
push
es
jns
xor
pop
loopne
and
mov
dec
insl
xchg
fs
in
dec
aaa
lcall
movsb
popa
int
sahf
bound
add
lock
xchg
jmp
adc
in
loopne
aaa
cmp
out
inc
xlat
lret
cmp
inc
xor
call
pushl
fcompl
addr16
push
insl
and
and
mov
cmp
frstor
int
enter
and
mov
or
push
ret
pop
inc
xlat
push
test
mov
xchg
outsl
lock
movsl
xlat
pop
int3
clc
mov
inc
cmp
pusha
xor
mov
popa
pop
or
and
fldenv
xor
inc
fadd
rcr
mov
enter
nop
mov
adc
loopne
sub
cltd
inc
iret
mov
push
lock
dec
mov
xor
push
push
pop
inc
in
divb
daa
movsb
sub
xor
push
inc
out
mov
insl
and
push
ret
fstps
insl
imul
sbb
stos
ret
add
pusha
cmpsb
bound
or
bound
cmpsb
into
inc
inc
enter
cmp
mov
mov
jo
mov
ljmp
pop
sbb
mov
xor
sti
push
test
repz
bound
scas
fistpll
hlt
gs
cltd
aad
xor
mov
test
in
push
jecxz
adc
or
mov
push
loop
std
push
les
inc
inc
ss
push
out
idivb
imulb
pop
divb
adc
pop
pop
mov
inc
popf
iret
or
imul
jle
cvtpi2ps
clc
sbb
addr16
lods
xor
jmp
sbb
jae
inc
and
test
in
int
les
xchg
xchg
fstl
jp
int3
or
lahf
test
push
push
std
rorb
jmp
push
arpl
inc
test
or
dec
push
insl
xor
out
mov
cmc
add
push
out
inc
jae
int3
lea
pop
inc
les
push
inc
sbb
aad
and
pop
inc
mov
jg
sbb
mov
pusha
dec
cmp
ficomps
pop
ds
call
movsb
and
sarl
mov
jo
movl
xchg
into
mov
push
aad
xchg
jb
gs
out
push
test
or
xlat
jp
faddl
xor
xchg
sbb
pushl
dec
pop
and
sbb
fisubl
stos
test
dec
test
imul
movsb
pop
std
js
xchg
inc
in
das
jns
addr16
push
add
push
mov
in
xchg
xorb
aam
fcompl
es
fsubl
lret
jp
add
mov
add
xchg
sub
sbb
aam
ja
sbb
inc
lds
adcl
xchg
jnp
xchg
imul
mov
lret
push
sub
movsb
sahf
xchg
xchg
mov
mov
push
stos
fistpll
hlt
dec
mov
jo
push
adc
mov
push
aad
inc
movsb
mov
mov
dec
ds
sub
mov
mov
in
dec
hlt
fistl
dec
inc
push
xor
or
clc
test
shlb
sbb
and
fdivl
mov
inc
cld
int
lods
pop
repnz
sbb
inc
mov
add
fstl
xchg
xor
adc
inc
and
xchg
negl
push
test
imul
xor
imulb
xor
mov
push
lret
divb
sbb
pop
pop
test
mov
out
test
ss
push
out
or
dec
dec
cmp
rcrb
dec
ret
mov
rcll
rolb
xor
mov
loopne
cmp
push
call
xor
in
cltd
ret
ljmp
fcompl
xchg
add
imul
add
sbb
add
push
cmp
cmpsl
movsl
and
test
mov
push
xor
rcrb
ljmp
push
es
jbe
inc
pop
es
iret
dec
imul
dec
push
notb
inc
rol
std
iret
mov
mov
push
shll
adc
gs
insl
xor
imul
mov
cltd
stc
mov
dec
xlat
hlt
stc
in
adc
mov
cmc
jecxz
xchg
add
mov
push
aad
adc
fwait
jmp
jns
sub
shll
xchg
sbb
movsl
repz
mov
and
negl
sub
jo
mov
addr16
push
dec
scas
mov
insb
icebp
into
jno
ret
popa
push
inc
mov
inc
lcall
sub
xor
pusha
js
pushf
push
cmpsb
cmc
sub
movsb
loope
mov
test
mov
subb
dec
xchg
in
push
mov
and
xor
xchg
cmpsb
jbe
movsl
sub
mov
jb
insl
jp
arpl
cmp
or
ds
inc
jmp
js
xchg
xchg
negb
xor
mov
mov
icebp
rcrb
fldl
loope
sbb
inc
dec
mov
push
jmp
ss
sub
aaa
fisubs
mov
adc
xor
or
movsl
xchg
cmp
xchg
outsb
jg
pop
fmul
push
inc
lods
jne
adcb
pop
mov
ljmp
sbb
and
into
xchg
iret
add
jnp
xchg
ja
lcall
lock
ds
pop
xchg
dec
insl
das
xchg
xchg
pop
icebp
push
inc
push
jns
addl
pop
mov
pop
mov
lahf
popa
mov
fwait
xor
popl
lock
push
add
xorl
push
popf
lcall
mov
into
sub
lahf
push
outsl
nop
mov
shll
mov
cmp
fistl
sub
or
jmp
int
out
push
std
fs
fcom
aam
push
lret
gs
cs
mov
pushf
mov
push
arpl
add
mov
call
stc
daa
bound
jecxz
sub
aas
lret
jae
mov
mov
out
jge
dec
jp
or
jle
addr16
cmp
cmp
iret
cmp
pop
data16
insl
hlt
aam
cltd
imul
aaa
xchg
popa
je
scas
and
ds
sub
mov
mov
push
ret
fnstenv
lret
sub
sub
jnp
xchg
or
popf
push
scas
xchg
mov
inc
pop
icebp
xchg
in
ja
std
dec
scas
out
sarl
dec
push
mov
sbb
or
test
jo
mov
mov
gs
lcall
bound
or
ljmp
in
insl
mov
add
call
cmp
xor
test
pusha
pusha
mov
test
mov
clc
xor
es
xchg
inc
ja
in
pop
mov
movsl
pop
sahf
sarb
rol
bound
fsubr
das
ret
insb
pop
rcl
cmp
jb
lea
add
adc
subl
xchg
jb
mov
inc
cmp
and
mov
jo
inc
push
mov
mov
pop
sub
scas
mov
repnz
mov
repnz
fs
mov
call
in
sbb
scas
lcall
mov
fcomp
xchg
add
push
add
movsb
mov
jmp
or
mov
jo
sub
jge
cmp
aas
mov
add
jno
fsubs
or
pushf
mov
mov
sbb
mov
stos
or
cmp
mov
cld
loop
xchg
sbb
cld
hlt
js
push
ss
xor
enter
adc
cmp
mov
xchg
pusha
sub
push
add
gs
bound
and
adcl
push
jo,pt
sub
push
push
js
outsl
mov
in
lock
jmp
outsl
ret
inc
adc
ret
sub
sub
faddp
cmp
jmp
xchg
fidivrl
pop
cs
dec
pop
ds
out
mov
jmp
xorb
mov
inc
jp
scas
jb,pt
ficoml
fbstp
gs
lret
fs
and
mov
out
adc
mov
xor
mov
iret
and
ffreep
xchg
out
or
fildll
sahf
rclb
dec
dec
jge
mov
fdivp
or
mov
sbb
mov
sbb
sub
cmc
adc
inc
or
cli
ljmp
sbb
clc
stos
fcmovnb
cwtl
xchg
push
ja
out
pop
dec
outsl
dec
or
pop
shrb
mov
aad
push
repz
jb
xchg
add
mov
lds
pusha
insb
push
fsubrs
test
pop
sub
sbb
push
leave
jmp
addr16
out
cmp
jl
push
aam
dec
test
es
in
jmp
dec
sub
dec
out
cmc
shll
cmp
cmp
movsb
mov
jmp
or
outsl
notl
add
sbbl
push
bound
add
mov
nop
xor
mov
mov
jecxz
outsl
cmp
jecxz
and
push
adc
adcb
or
mov
loopne
xor
pushf
daa
jl
mov
adc
mov
cs
std
mov
or
aas
lds
fists
negb
push
jecxz
int
jno
repz
shr
cld
sbb
mov
and
pop
jns
ljmp
and
and
xor
cld
cmp
mov
pop
ficompl
ja
es
shrb
add
or
fisubrs
fldenv
stos
sbb
lret
shll
fmull
aas
mov
popf
adc
pop
and
insb
dec
xchg
push
fldcw
or
mov
pop
inc
adc
imul
fimull
inc
arpl
mov
iret
push
out
pop
lcall
jb
mov
push
xor
jl
add
aad
ret
sub
test
addr16
mov
adc
fwait
ss
jo
cmpsb
insb
aaa
mov
out
xor
jp
inc
jno
dec
adc
mov
inc
push
jnp
cmp
or
data16
addr16
mov
mov
push
add
dec
iret
inc
push
xor
es
pop
and
xchg
xorl
mov
adc
aaa
jp
lret
adc
fucom
insl
xor
nop
adc
das
cmp
shl
hlt
xlat
cmpsb
jmp
mov
test
hlt
sub
cmpb
movsl
icebp
outsb
lcall
xchg
test
jmp
cwtl
jg
pop
outsl
sti
out
sub
fcmovnu
insb
arpl
mov
inc
aam
insb
mov
ljmp
repnz
divb
sbbb
push
fmulp
leave
cs
adc
mov
push
in
inc
call
test
out
in
aas
push
ja
mov
and
cli
dec
je
mov
rcr
sbb
cmpb
out
adc
sub
decl
push
pop
sub
hlt
push
xchg
in
add
icebp
roll
cmc
cli
rorl
outsb
arpl
dec
mov
xchg
mov
lret
pop
lods
or
mov
fst
xchg
sar
sub
filds
mov
sbb
adc
push
fmuls
sub
std
js
lcall
add
ja
sti
ffree
cmp
shrb
adc
push
mov
pop
into
mov
push
shll
lea
sar
ljmp
stos
xor
hlt
test
loopne
xchg
adc
rorb
adc
inc
cmpb
icebp
xor
sbb
sub
push
push
bnd
gs
sahf
dec
ja
sbbb
mov
roll
sti
mov
adc
xchg
add
out
test
jp
inc
mov
inc
mov
mov
cmc
jecxz
in
cli
fmuls
mov
ljmp
jb
sub
int3
pop
jbe
fneni(8087
cs
xchg
fisubrs
push
add
push
arpl
popa
adc
loop
cli
ret
xchg
xor
scas
sbb
push
mov
inc
jbe
jmp
jmp
ds
add
mov
cltd
cmp
push
adcl
out
pop
nop
in
aad
cmp
movsb
and
mov
dec
in
into
movsl
test
push
xchg
sbb
addr16
sbb
sahf
and
inc
sahf
mov
ret
pop
xchg
mov
arpl
icebp
mov
or
push
sahf
or
xchg
mov
sbb
icebp
in
popf
jmp
dec
or
push
cmp
pop
sahf
stc
jb
xor
pop
jbe
into
inc
xchg
movsb
jge
scas
fwait
jp
clc
cltd
popa
adc
lret
subl
lret
mov
clc
out
mov
push
jae
jns
or
loopne
aad
sarb
cmp
inc
mov
pusha
outsl
enter
mov
and
icebp
mov
popa
imul
pop
call
sbb
out
lret
pop
shl
jns
or
lahf
adc
cmp
movzwl
rcrb
dec
cli
clc
movl
mov
call
fbstp
adc
pop
sahf
adc
push
ja
aas
xlat
xchg
dec
xor
fdivrs
out
inc
insb
inc
cli
xor
cmpsl
out
add
xchg
pop
cmp
fbld
inc
iret
xchg
lock
fsubrs
cltd
or
cli
mov
adcb
and
outsb
popa
mov
pop
ret
mov
mov
enter
sbb
addb
mov
xchg
popa
popa
subb
push
dec
mov
loopne
lea
pop
or
adc
mov
movsl
cmp
adc
mov
loope
mov
dec
arpl
shrl
mov
jg
loop
in
sbb
lds
sti
xlat
insb
inc
push
shlb
pop
jbe
and
sbbl
std
into
enter
pop
jle
shl
js
test
fidivrs
sahf
adc
mov
cmpsb
sub
insb
outsl
xchg
icebp
test
sbb
pop
and
sub
test
pop
inc
or
loopne
dec
test
les
aaa
xchg
and
into
lock
cmpsl
add
inc
mov
insl
xchg
jbe
cmp
iret
insl
jp
lahf
cmp
repnz
movl
mov
cmp
sti
dec
cltd
test
mov
test
out
lds
sub
xor
sbb
xchg
sbb
jecxz
jmp
ljmp
lods
fwait
in
cmp
add
popa
sti
sub
lds
and
mov
shll
sub
nop
clc
ljmp
aad
jge
jne
pop
lea
inc
xor
mov
xchg
je
pop
lods
mov
and
xchg
add
rorb
cmp
push
mov
sub
in
mov
ret
sub
jle
aad
repz
test
loope
adc
cmp
das
add
xchg
sahf
jbe
adc
adc
xor
push
or
pusha
aas
xchg
jecxz
or
ret
dec
adc
ljmp
repz
ret
mov
jge
mov
ja
mov
or
mov
mov
xchg
icebp
outsb
pop
mov
mov
sbb
pop
and
xchg
xchg
add
mov
test
rcl
fisttpll
push
adc
ss
lea
aad
aas
push
mov
sbb
mov
movsl
hlt
cwtl
push
push
xchg
sahf
sbbl
cmp
mov
aaa
fs
jecxz
rorl
js
fldcw
cmpl
pop
repnz
je
mov
lret
cmpsb
fistl
sahf
repnz
adc
jg
mov
ds
rorl
add
int3
in
pop
cmp
dec
or
loope
dec
aam
sub
dec
mov
dec
in
fmull
cmp
adc
cmp
cwtl
mov
or
iret
mov
jns
es
je
mov
repnz
test
cmpsb
jns
mov
movsw
push
add
aad
out
enter
xchg
mov
subl
lret
in
jl
jbe
pop
lahf
mov
inc
mov
iret
and
sbb
mov
xchg
lret
jnp
lock
dec
ret
je
pushf
inc
sub
mov
jb
pop
push
pop
mov
bound
xor
inc
fsubrs
push
fwait
lea
adc
mov
out
adc
sbb
fdivl
arpl
pop
mov
sub
jl
mov
mov
outsl
jge
rclb
out
dec
push
xlat
dec
lcall
shll
imul
mov
flds
pop
scas
clc
inc
jp
flds
mov
std
std
pop
xorb
lahf
push
shl
inc
ret
clc
jno
sbb
aaa
cmp
setno
lret
int
daa
ja
stc
test
shll
mov
aad
inc
add
aas
cmp
clc
aam
and
lcall
decl
fisubs
and
push
jnp
mov
daa
cmp
enter
lret
addr16
mov
adc
or
or
test
xor
xor
add
add
mov
arpl
pop
or
pop
lods
addl
and
ficompl
test
xchg
repz
flds
enter
pop
out
lea
xchg
xchg
xor
xchg
mov
daa
popl
mov
hlt
cmp
cltd
aam
out
push
dec
dec
jl
data16
xchg
lock
fucomi
fwait
xchg
shrb
fs
mov
jns
pop
sbb
add
cmp
aad
pop
and
es
or
inc
inc
sub
mov
fsts
dec
dec
push
add
cmp
insb
leave
sbb
xchg
sbb
ret
ss
mov
push
or
ja
pop
lock
scas
push
and
lea
mov
fsubrl
test
mov
push
or
jge
scas
rolb
cmp
dec
test
xchg
adcb
dec
call
inc
mov
lcall
jl
je
lods
iret
fs
adc
jmp
mov
es
push
cmpsl
pop
mov
daa
shrb
xorb
push
test
and
dec
push
sbb
lock
decb
push
inc
repz
mov
jbe
push
sub
and
repz
xor
lahf
aam
and
lds
les
mov
xchg
scas
jns
dec
in
mov
mov
mov
push
xchg
xchg
lods
lods
jge
jmp
fs
pop
mov
mov
es
out
or
in
jns
jbe
inc
push
push
cmp
mov
aas
ja
pop
pop
daa
inc
imul
fmuls
popf
testb
cmp
sbb
xor
pop
lahf
push
lock
inc
fdiv
cmp
into
or
repnz
xchg
cmp
stc
loopne
mov
dec
out
cld
sbb
and
mov
in
leave
lods
sub
pop
divl
pop
pop
insl
sbb
sub
dec
sub
or
sbb
imul
cs
cltd
cmp
jae
jl
pop
ror
imul
jbe
push
mov
loope
jecxz
test
imul
stos
in
std
pushf
out
rcrl
lods
das
pop
loopne
incb
or
push
jns
mov
fmuls
jnp
mov
rcrb
push
mov
and
and
push
loope
fprem1
ds
shrl
xor
or
push
jmp
movq
push
mov
cmpsb
cmp
das
add
or
scas
inc
mov
aam
lret
enter
mov
loop
inc
es
mov
jmp
adc
xchg
xlat
xor
int3
hlt
push
inc
je
rcl
repz
fcompl
sahf
xchg
and
sbb
out
nop
mov
sbb
js
dec
mulb
int3
sti
out
and
test
movsb
ret
inc
or
sub
adc
das
gs
js
dec
arpl
mov
push
sbb
push
push
jge
push
jge
xchg
and
in
outsb
fdivs
cld
push
inc
inc
cmc
lea
aaa
xor
jmp
add
adc
mov
lcall
xlat
sti
xor
in
mov
dec
into
stos
imul
xchg
stc
clc
mov
fsubrs
add
rcrb
stc
push
mov
xor
iret
xchg
orl
notb
pop
shlb
fs
pop
cmp
pop
hlt
repnz
push
pop
push
ljmp
sti
or
jns
cwtl
fnstsw
pop
inc
pusha
mov
repz
mov
sbb
jb
fisttpll
push
icebp
gs
movb
movsb
faddp
dec
rolb
dec
sub
push
jbe
push
and
andb
std
les
pop
aaa
iret
adc
push
xchg
push
jo
loope
add
adcl
cli
ja
cmc
fnstenv
cmp
fildll
rorl
aaa
push
dec
aam
xlat
dec
push
imul
add
scas
and
push
jp
es
imul
js
jecxz
mov
lods
je
sub
and
icebp
cmp
and
push
cmp
adc
push
adc
sbbl
inc
sahf
push
outsb
inc
lods
fs
sbb
mov
mov
push
jmp
test
add
mull
loop
pushf
add
cmp
movsb
test
shlb
mov
cwtl
stos
jg
mov
pushf
lcall
xor
xchg
imul
pop
out
andb
adc
mov
out
cmpsl
mov
mov
addr16
sti
cmc
mov
dec
jl
in
adc
dec
and
inc
add
shl
mov
loop
jl
shlb
or
gs
fwait
xor
pop
sub
fnstsw
sub
jmp
inc
pop
cmc
jb
inc
adc
push
adc
push
stos
jp
ficoml
sahf
aaa
xchg
adc
rol
inc
mov
stos
punpckhbw
in
stos
pop
fwait
leave
xchg
jns
xchg
sub
xchg
int
mov
cmc
or
cmpsb
adc
mov
icebp
fcmovb
in
and
inc
sbb
mov
mov
jp
fmul
insb
mov
mov
insb
pop
pop
insb
push
mov
push
or
outsl
iret
repnz
mov
testl
clc
out
insb
inc
mov
lods
mov
shll
jo
ljmp
notb
insl
divb
fisttpl
js
int
mov
dec
stos
mov
ss
out
rclb
test
push
ds
sahf
negl
pop
loopne
jmp
push
cli
das
adc
adc
xchg
mov
insl
and
dec
gs
cmp
mov
out
popa
xchg
cld
dec
stos
imul
jbe
daa
pop
mov
add
sub
or
or
mov
jne
mov
pop
or
mov
mov
pop
pop
and
subl
pop
test
shlb
sbb
shlb
jp
cwtl
xchg
adc
add
fwait
pop
xchg
pop
enter
adc
mov
xor
insl
mov
popf
sti
add
iret
xchg
cld
sub
mov
pop
ficoms
lcall
add
and
adc
push
jo
adc
xchg
jl
fs
js
mov
lret
and
push
fldcw
decl
cmp
dec
and
or
add
cmc
ds
inc
jge
in
lret
xor
jb
testl
ret
pusha
inc
inc
pop
pop
cld
ljmp
sarb
lea
mov
pop
leave
and
data16
addl
lret
and
out
and
and
dec
mov
testb
sbb
aam
lcall
stc
and
mov
sbb
movsl
gs
outsl
mov
fscale
xchg
mov
adc
sahf
dec
add
dec
mov
cmpl
jno
fldenv
loope
imul
dec
movsl
jns
mov
xor
shll
mov
lea
adc
stos
shrb
pop
stos
sub
xchg
dec
sbb
add
adc
fimull
pmulhw
lahf
add
movsb
loop
iret
sub
pop
xlat
das
mull
int
sarb
imul
fwait
arpl
cmpsl
jmp
xchg
xlat
mov
cmp
sub
dec
sub
js
into
mov
ljmp
pop
push
insb
mov
bound
lret
das
push
clc
iret
push
cwtl
pop
dec
sub
mov
or
sets
ret
adc
adc
pusha
loope
mov
les
ss
sbb
xor
stos
data16
xchg
aad
inc
mov
xchg
stc
xchg
push
xchg
pop
and
lods
adc
outsl
dec
mov
pusha
lret
int3
and
sub
mov
jmp
outsl
in
add
incl
aas
push
lods
cmpsl
cs
insb
mov
jo
adc
ror
mov
mov
in
sbb
insb
push
push
outsb
sahf
mov
rorl
subb
cs
sbb
dec
sub
adc
push
pop
pop
lods
push
mov
fsubrl
jp
adc
mov
adc
insb
ficoms
inc
mov
pop
lods
mov
and
xchg
inc
dec
nop
mov
cli
mov
and
cmp
int3
gs
dec
jmp
lods
mov
lcall
jb
test
xchg
dec
cmp
mov
jnp
pop
cmp
push
divl
jle
push
xchg
cmpsb
add
loope
fstps
cmp
cmpsl
jle
xor
dec
jp
daa
mov
sub
mov
lock
sub
jno
aam
cmp
mov
jle
sbb
hlt
loopne
subb
lods
pop
push
xchg
push
mov
or
mov
mov
das
into
stos
add
jo
std
jbe
hlt
idiv
and
fwait
sbb
iret
inc
fcmove
xor
shl
aam
lods
fldl
or
add
lret
and
adcb
orb
push
imul
rorl
and
int
test
fisubs
push
xchg
test
hlt
dec
pop
and
push
add
and
push
sub
ret
mov
movups
loope
mov
sub
cwtl
call
ret
xor
jmp
cmp
mov
inc
inc
or
inc
sbb
sub
mov
fidivs
stos
stos
fstpl
pop
or
push
mov
mov
fidivrl
xchg
int3
sti
popa
push
xchg
xchg
sbb
mov
out
rcrl
arpl
push
stc
push
adc
cmc
loope
outsl
or
and
mov
cwtl
aas
ja
jge
xor
push
sbb
lcall
mov
pop
lds
cli
roll
mov
sbb
stos
popf
in
out
sbb
cmp
enter
mov
lea
push
scas
xor
xchg
loop
xchg
cltd
les
andb
and
ja
lods
lcall
addr16
jne
inc
mov
xchg
jl
mov
popa
cld
outsl
pop
unpcklps
inc
mov
push
arpl
mov
pop
or
popf
sbb
pop
add
or
movsb
pop
popa
imul
jo
jbe
add
lret
mov
mov
inc
ds
aad
xchg
lea
adc
loope
xor
sub
testb
out
xlat
push
xor
test
jnp
jno
push
jge
xor
out
ljmp
adc
sbb
xor
ds
negl
cmpsl
test
iret
sub
addl
xchg
in
inc
ljmp
sbb
adc
andl
pop
dec
xor
and
scas
mov
filds
mov
nop
insb
mov
movsb
pop
push
test
adc
pop
pop
adc
push
xchg
mov
fidivl
cmp
lea
jno
push
loop
inc
jno
cmpsl
pop
mov
jnp
inc
push
ret
jae
arpl
mov
push
test
scas
in
lret
pop
mov
fmul
ljmp
mov
data16
pop
fadd
inc
or
scas
ljmp
mov
mov
xor
sbb
loopne
jbe
pop
cwtl
mov
xchg
imull
lret
push
and
aaa
iret
dec
lods
sub
sarl
sbb
ret
les
stos
jp
cmc
std
lcall
stos
loope
dec
and
js
stos
jecxz
xlat
add
mov
mov
inc
mov
xchg
imul
xchg
call
push
lret
pop
jno
out
test
outsl
sub
dec
stos
push
and
or
std
pop
jp
push
xchg
and
add
jbe
rclb
push
inc
adc
enter
push
mov
or
inc
jo
xor
pop
lret
pop
adc
fistpll
jmp
jnp
adc
pushf
sub
sbb
mov
faddl
cwtl
fdivr
test
fmull
inc
ss
mov
cmpsl
insb
xchg
pop
mov
test
sbb
pop
or
xchg
pop
aas
cld
fucomp
dec
and
adcb
in
mov
mov
lahf
jp
jecxz
sub
xor
mov
sbb
out
jb
mov
mov
xchg
dec
cmp
mov
icebp
cs
jmp
push
adc
push
test
sbb
adc
pusha
push
les
pusha
jno
pop
cld
imul
mov
mov
data16
sbb
and
aad
test
cmpsb
cld
mov
pop
jecxz
insb
sub
or
enter
gs
shrl
aas
int3
mov
jecxz
jg
mov
icebp
es
imul
adcl
pop
mov
repnz
or
cli
sti
fdivrs
test
shl
jp
ret
int3
leave
pop
and
and
sarl
push
xor
leave
in
adc
scas
js
jo
jmp
shll
and
mov
fcmovnbe
test
cmp
mov
mov
and
adc
xor
aas
push
sub
add
jmp
lea
cmp
or
push
iret
repnz
jge
test
dec
out
sub
or
xchg
movl
loope
scas
es
inc
dec
lods
imulb
xlat
sbb
jb
jge
rol
mov
mov
xor
xor
jbe
movl
aaa
adc
dec
lock
mov
mov
sbbb
xchg
cwtl
push
ss
popf
ret
cmc
dec
cmp
pop
jmp
imul
cmp
std
dec
jg
arpl
adc
sbb
cmp
ljmp
pop
ljmp
push
aam
scas
jno
subl
sub
mov
or
add
mov
rorb
test
pop
pop
push
xchg
inc
stc
out
dec
repnz
adc
push
std
sbb
sbb
or
test
cwtl
pusha
stos
pop
scas
loopne
lock
add
sub
insl
xchg
dec
mov
push
mov
test
into
push
mov
dec
push
jge
jno
shl
jmp
scas
cmp
int3
jecxz
cmc
aam
sbb
jne
jbe
cmovge
fiadds
or
mov
daa
not
scas
pop
fwait
dec
cmp
fs
push
push
jb
pop
jbe
fucomp
mov
lahf
testl
nop
inc
rolb
test
sbb
call
lret
mov
dec
faddp
je
je
pop
push
subl
dec
mov
sbb
cmp
daa
pop
cmp
mov
inc
popa
xorb
xor
call
movsl
stos
mov
fcomi
imul
inc
test
mov
sbb
nop
lods
xchg
adc
sarb
leave
leave
inc
fimull
mov
daa
mov
int3
push
dec
pop
sbb
das
mov
pop
pop
sbb
test
imulb
xchg
out
cmpsb
mov
lahf
movsl
loope
hlt
cmp
sar
pop
pop
dec
add
icebp
lret
dec
mov
pop
add
dec
ja
cli
jae
jmp
and
mov
add
movsl
push
add
dec
inc
loop
xchg
dec
pop
dec
jns
das
xchg
dec
lea
mov
bound
cmc
sbb
fwait
jo
enter
insb
xchg
dec
cli
cmp
loop
cli
xchg
push
adc
lret
fistps
loop
push
pop
mov
mov
push
scas
fisttpl
in
stos
xor
test
jecxz
adc
ljmp
cmp
icebp
jp
or
pop
xor
lcall
push
cltd
mov
mov
push
add
mov
lea
lahf
call
cli
ret
loopne
jo,pt
repz
push
jbe
or
inc
js
or
ror
lea
rcr
mov
jns
mov
and
les
mov
out
mov
xchg
and
mov
push
xor
int3
sub
test
cmp
cwtl
loopne
stos
push
enter
sar
add
stos
cmp
repnz
mov
fmul
test
test
dec
lahf
in
dec
les
dec
cwtl
mov
inc
sub
mov
inc
mov
enter
inc
sahf
addb
inc
mov
jb
pop
hlt
shll
jge
aad
out
inc
adc
mov
data16
inc
imul
scas
mov
cmp
dec
xchg
das
cmc
gs
daa
lods
sbb
mov
xor
sub
xchg
dec
or
cli
mov
push
mov
sbb
out
mov
test
gs
or
pop
mov
icebp
dec
aas
add
das
xchg
and
pop
inc
mov
mov
frndint
adc
inc
js
inc
cmp
popa
pusha
shlb
nop
cmp
push
xchg
shlb
mov
pop
in
inc
sub
dec
push
icebp
pop
pop
leave
lea
lea
mov
subl
lret
in
mov
loop
xchg
cmp
sti
jb
aad
roll
in
push
std
inc
clc
cmc
push
fcomps
inc
push
mov
add
xor
dec
stos
dec
pop
int3
adc
ss
outsb
xchg
mov
jo
jle
mov
data16
stos
out
jp
jno
adc
sahf
pop
sbb
cli
shrl
jmp
loopne
mov
ja
js
enter
stc
lcall
mov
or
jl
stc
adc
add
pop
lods
fiaddl
cmp
cli
xor
pop
out
das
add
cmpsb
add
in
lds
jle
aas
mov
xor
lret
and
push
fadds
shl
adc
in
mov
ja
pushf
mov
xlat
inc
push
inc
aad
sbbb
test
lods
sub
out
or
mov
adc
and
sbb
adc
repz
pop
xor
ret
mov
lcall
aad
inc
push
cwtl
jecxz
lahf
sbb
mov
and
jmp
jge
xchg
cmpsl
push
push
leave
sbb
add
ja
cmp
mov
jp
ss
mov
dec
add
fucompp
adc
es
sub
push
adc
adc
xchg
scas
jle
push
lods
data16
adc
xor
pop
iret
jo
ja
mov
xchg
scas
test
popa
movsl
inc
dec
sbb
pop
into
push
or
mov
jl
stos
sub
cld
cmp
mov
sbb
pop
sub
and
pop
jle
push
push
sub
sbb
xchg
int
cmpsb
lock
rorb
lcall
es
dec
fldl
xor
add
xchg
aas
shrb
jno
pop
pop
cmp
push
data16
aaa
dec
inc
loopne
stos
insl
push
jne
pushf
xchg
aas
in
cmp
mov
js
cs
gs
pop
mov
pusha
lahf
dec
in
lahf
cmpsl
out
pop
jae
int3
mov
mov
jno
cwtl
enter
inc
inc
dec
ret
jae
pop
dec
add
cmpsl
inc
test
inc
call
pop
xchg
sub
nop
hlt
test
mov
dec
cli
add
bound
dec
push
icebp
insl
fcomip
je
sbb
leave
insl
and
push
xor
mov
bnd
lds
js
push
pop
cmp
jmp
and
out
aas
fdivs
repnz
and
lcall
out
aas
add
fld
adc
dec
mov
cwtl
fdivs
jno
pop
cwtl
hlt
adc
lahf
adc
cmp
mov
loop
jle
xchg
mov
push
inc
mov
adc
data16
and
stc
mov
mov
aad
cmp
shrl
mov
daa
lcall
rcl
mov
lret
add
or
or
js
mov
and
adc
inc
xor
pop
mov
scas
xlat
cmp
pop
mov
cwtl
dec
imul
dec
mov
mov
and
sbb
sub
push
out
in
xor
loope
out
jno
adc
arpl
aad
dec
popf
in
sub
lahf
or
fistps
xchg
jne
mov
int3
aad
jg
addr16
test
mov
adc
stos
jns
pop
fldcw
jge
cmpl
mov
loope
out
fdivrs
es
jno
lret
icebp
insb
insl
add
decl
mov
or
movsl
dec
cmp
or
mov
xor
es
imul
cmp
cmp
int
push
in
je
jl
inc
in
mov
repnz
movsb
scas
add
aad
ret
dec
fdivs
xchg
cmp
pop
or
cmp
xor
pop
sbb
in
movsl
sub
adc
icebp
lret
sub
test
xchg
fwait
bound
stos
jle
pop
sbb
add
pop
imul
in
mov
dec
xor
mov
jecxz
adc
push
mov
or
cmp
sbb
stos
jb
pop
mov
nop
mov
dec
test
inc
xor
adc
das
xchg
popf
out
and
add
lods
inc
int3
mov
stos
mov
stos
ret
test
jp
cli
jp
add
xchg
sub
inc
lret
mov
xchg
inc
jecxz
mov
in
xor
inc
inc
adc
mov
mov
scas
jecxz
sbb
sbb
popf
fstl
dec
daa
out
xor
adcb
gs
stos
out
rcll
sbb
pop
movsb
pop
inc
in
pop
repz
clc
jno
dec
push
sub
jbe
ja
mov
add
cmp
jge
pop
dec
nop
pop
cmc
popl
add
test
data16
fwait
mov
and
mov
sub
xor
mov
cmp
mov
stos
jnp
fcomps
hlt
sub
and
xchg
adc
imul
sarb
loope
in
and
cmpl
nop
aaa
inc
pusha
int
mov
xor
outsb
frstor
and
mov
movsb
sbb
stos
rclb
out
movsl
add
mov
lret
stc
dec
aad
mov
or
dec
xchg
xchg
std
in
push
mov
lret
pop
fbstp
les
push
sti
mov
loope
pushf
divb
pminsw
cmp
pushf
sar
out
mov
rcrl
test
and
call
stos
push
pop
iret
jle
cmp
cld
divl
imul
mov
enter
ficoms
adc
bound
cmp
push
add
xchg
rcll
std
and
js
or
lock
push
rcll
add
mov
out
add
inc
in
mov
repz
stos
pop
enter
cmp
sar
das
cmpsb
add
cmc
loopne
movsl
push
pop
sahf
sub
sbbl
repnz
jl
fisubrl
scas
jl
daa
lahf
mov
in
insb
repnz
adc
dec
mov
in
popf
adc
sbb
fwait
jno
ret
movsl
bound
lret
fmul
lea
nop
fs
loop
adc
insb
inc
or
pop
negb
push
and
mov
jmp
in
enter
and
lret
mov
mov
push
mov
mov
sbb
ret
inc
push
mov
sub
inc
cmpsb
and
das
dec
jmp
setbe
mov
fsubrs
in
adc
jb
jns
loop
push
jg
mov
stc
stc
sub
loop
mov
scas
ljmp
dec
aad
scas
cltd
mov
out
stc
mov
out
imul
loopne
push
loopne
dec
inc
xor
rclb
dec
push
mov
in
push
fldenv
pop
inc
xchg
pop
sbb
push
in
not
call
mov
filds
fimull
pop
mov
pop
push
sbb
es
je
and
pop
or
dec
sbb
mov
in
xchg
push
in
movsl
aad
imul
ds
call
xor
xchg
cld
dec
push
or
insb
andl
test
inc
test
jae
xor
push
pop
cmc
rorl
aaa
test
adc
pop
mov
pop
pushf
lahf
cmp
fistpl
and
popa
jnp
sbb
cmpsb
push
js
fnstsw
push
mov
imul
stc
xchg
js
hlt
adc
leave
jg
add
stc
push
or
data16
inc
idiv
in
and
lcall
pop
or
daa
xchg
and
mov
mov
sub
scas
jle
mov
mov
outsb
dec
adc
cmp
stos
fmuls
push
out
lods
sub
or
mov
jo
arpl
add
pop
jmp
xchg
pop
jb
pop
xchg
and
test
sub
pop
cs
popf
inc
lret
dec
test
inc
xchg
mov
jb
mov
dec
call
es
or
push
jge
mulb
mov
xchg
daa
xchg
push
cwtl
dec
dec
jmp
jbe
aas
out
add
lahf
roll
and
decl
imul
mov
mov
test
or
std
cmc
inc
dec
push
or
fmull
popf
xchg
add
fidivl
lcall
sbb
lods
fs
push
xor
sub
mov
stos
pusha
cmpsb
or
mov
mov
sahf
inc
fsubrl
cs
jno
sub
pinsrw
mov
and
lds
scas
imul
cmp
jae
xchg
mov
push
sbb
int3
icebp
lcall
ljmp
mov
cmp
xor
dec
cmp
adc
out
loop
pop
neg
sti
cmp
subl
bound
cmpsb
loope
mov
imul
shl
push
mov
sub
loop
shlb
dec
bound
or
mov
insl
adc
andl
mov
cli
cmp
movsb
dec
js
fldt
mov
add
jle
repnz
jb
jecxz
push
cmp
inc
out
mov
xchg
into
adc
or
ljmp
in
inc
xchg
bound
shll
pop
mov
adc
clc
int
mov
jne
xlat
jl
lcall
test
in
pop
cmp
pop
insl
in
and
cmpl
sbb
fadds
es
xchg
cwtl
sub
add
cmpsl
enterw
loop
ss
xorb
xor
sti
inc
cld
popa
in
mov
jge
stos
mov
xchg
fwait
xchg
in
repz
loop
fwait
nopl
and
ret
push
mov
jnp
out
mov
movsl
dec
cwtl
js
pushf
ret
mov
data16
push
adc
pop
movsb
lea
pop
outsl
push
push
outsb
out
iret
adc
fwait
aam
add
roll
pop
dec
fsubs
adc
mov
shlb
outsb
push
scas
mov
push
sbb
repz
mov
xchg
cmpl
adc
lock
cmp
aaa
and
repnz
mov
and
int3
xor
stos
inc
pop
xor
pop
sub
rcrl
mov
cmp
insb
xchg
repnz
cmpl
or
mov
push
lea
pop
and
adcb
adc
or
lods
jns
lahf
jno
cmc
mov
sbb
arpl
or
and
adc
xchg
mov
orb
mov
pop
lea
push
cli
sbb
ret
and
int
das
mov
js
add
in
shll
lcall
sub
repz
sbb
inc
xchg
mov
std
push
out
xchg
jecxz
fnsave
cld
fwait
aad
nop
test
or
stos
js
fisttpl
jne
pop
int
inc
inc
insl
fcomip
sahf
sbb
sub
dec
cmpsl
mov
add
imul
mov
mov
sbb
outsb
rclb
jl
jne
call
xchg
sbb
into
mov
mov
iret
arpl
in
mov
push
cmp
mov
cmc
clc
in
sub
sbb
pop
aam
int3
or
mov
cltd
ds
mov
inc
fcmovnb
cltd
or
and
int
imul
test
repz
dec
push
pop
mov
mov
push
fxch
mov
push
mov
addr16
jge
sub
xlat
fnstsw
pushf
cmp
movsb
sbb
clc
inc
xchg
mov
stos
or
stos
outsl
or
push
sbb
mov
jae
outsb
jnp
in
sbb
inc
jae
xor
sub
repz
fwait
push
pop
fnstenv
sbb
push
sub
cwtl
js
scas
clc
and
movl
sub
mov
aad
gs
aad
aas
adc
movb
fnsave
mov
cwtl
mov
and
jbe
xor
xor
inc
clc
dec
or
inc
lcall
adc
add
and
dec
loopne
add
mov
adc
adc
xchg
test
out
pop
jle
pop
cli
fstpt
push
dec
dec
in
testl
mov
movsl
ds
jmp
xchg
mov
and
cs
jg
xchg
pusha
inc
in
xchg
and
or
dec
stos
fsubrp
xor
shlb
test
ret
loopne
or
popf
lods
test
ror
dec
daa
xor
lret
mov
icebp
push
outsl
jo
cwtl
cmc
or
jge
enter
cmpsl
cmp
mov
fstps
ja
pop
sbb
xor
mov
insl
xor
mov
cmpsl
add
mov
mov
cmp
data16
pop
adc
scas
ljmp
insb
out
pushf
inc
xor
dec
cs
fwait
test
dec
xchg
adc
dec
enter
push
push
bound
jne
movsb
inc
mov
rol
xchg
ficoms
scas
stc
shll
movsl
call
rcl
jle
sarl
xchg
pop
xor
hlt
adc
mov
mov
mov
lods
jecxz
test
mov
dec
mov
pop
sub
add
fiaddl
push
lret
xchg
stos
loope
xor
outsl
mov
aaa
aaa
jp
xor
sub
out
mov
push
nop
sbb
push
das
es
call
fldcw
sub
adc
dec
arpl
out
pushf
clc
insl
pusha
bound
pusha
iret
outsb
ja
xchg
jne
push
mov
nop
mov
imul
cmpsl
dec
cmpsl
or
dec
enter
mov
push
mov
lea
or
xor
cltd
lods
enter
fistps
iret
test
hlt
xlat
lock
fcoms
push
adc
gs
test
adc
jo
dec
mov
xchg
mov
mov
cmovge
aad
or
in
push
and
in
push
xor
pop
inc
sbb
push
mov
or
inc
dec
push
icebp
mov
jle
repz
pop
lea
out
mov
push
dec
push
icebp
dec
and
not
sub
rorb
fs
cli
mov
insb
and
ret
repz
aas
repz
xchg
popa
fldcw
orb
sub
icebp
adc
enter
mov
scas
notb
jo
cltd
xchg
fs
mov
pop
fisttps
std
dec
fnstsw
fstpl
sub
pushf
ffree
mov
xor
mov
icebp
pusha
outsb
or
inc
xchg
push
jmp
cmp
and
hlt
fsubl
pop
xorb
add
data16
mov
mov
mov
inc
notb
inc
add
call
std
adc
daa
push
cmpsl
jnp
or
shll
lock
or
mov
inc
lods
inc
in
mov
inc
ret
mov
xor
stos
add
mov
inc
mov
jo
or
out
hlt
not
ret
mov
jbe
arpl
push
lret
cs
jae
jle
std
je
xchg
dec
int
or
jp
xchg
shrl
negl
int
push
push
mov
adc
imul
xchg
or
in
out
xchg
or
enter
test
adc
int
mov
xor
push
xchg
pop
shl
jle
xor
loopne
push
adc
push
pop
rorl
sbb
adc
sub
out
imul
outsb
rcl
jge
mov
aas
push
imull
dec
or
pop
outsb
fstpt
jb
pusha
jecxz
lret
fsubrp
loopne
jge
mov
loop
or
gs
scas
add
pop
cmc
jecxz
dec
bnd
outsl
jge
sahf
mov
jae
lret
inc
test
stos
jae
lahf
std
pop
ds
cwtl
pop
test
adc
shrb
leave
enter
push
subb
gs
and
mov
cmp
imul
cld
fsubp
inc
bound
or
pop
inc
add
sub
notl
stc
mov
mov
push
mov
leave
fsts
xchg
lds
xor
shl
cmp
movsb
mov
jg
sub
inc
jne
lret
mov
and
or
push
inc
pusha
pop
and
fwait
pop
sahf
sbb
jns
pop
insb
mov
mov
ljmp
les
xor
enter
leave
sbb
mov
dec
sbb
push
pop
mov
std
test
rorl
and
out
jmp
dec
mov
lods
andb
movsl
pop
das
enter
mov
ret
cmp
mov
cmc
inc
jl
sub
sub
sbb
aas
lds
fsubrs
pop
repnz
xor
mov
aam
add
cmpsb
lock
inc
jns
pop
lahf
or
mov
sub
sbb
sbb
in
mov
fs
test
in
subl
mov
pop
xrelease
iret
insb
cbtw
jecxz
cmp
fidivrs
clc
xchg
jns
push
cmp
push
xchg
cs
pop
jecxz
inc
add
mov
aam
sbb
ds
xor
rol
stos
mov
adc
add
mov
pop
std
out
nop
cs
xchg
mov
es
mov
mov
jle
ds
cli
cmp
mov
cltd
sahf
jle
mov
mov
adc
sbb
dec
fidivrs
jecxz
inc
leave
push
mov
sub
into
ret
adc
mov
call
fwait
dec
iret
push
mov
cmp
or
ret
mov
sbb
or
dec
leave
cmp
daa
fstl
sbb
xor
push
push
mov
xor
mov
pop
shl
jno
lods
pop
push
insb
jns
push
and
jge
sbb
jl
std
adc
dec
sbb
sbb
push
cmp
movsl
push
xchg
divb
pop
push
xlat
cmpsl
or
mov
insl
fbstp
movsl
inc
into
mov
int
scas
adc
shrl
aas
sbb
pop
insl
and
push
roll
orl
outsl
pusha
fsub
in
mov
xor
xor
das
mov
ret
cmp
jmp
jmp
out
push
mov
rcrb
movsb
sub
mov
mov
lea
cmp
repnz
mov
add
cld
mov
stos
lds
repz
icebp
xchg
aaa
sbb
enter
inc
inc
cmp
cmpsb
xor
push
stos
cmp
mov
fdivrs
mov
sti
popa
cld
idiv
or
adc
cmpsl
mov
xchg
int3
inc
sbb
hlt
inc
fisubs
push
enter
or
inc
rolb
fcomi
push
outsl
and
dec
stc
jecxz
in
ficompl
pop
rorl
cld
xor
dec
pop
sbb
xor
dec
fisubs
mov
idiv
mov
cmpsl
xchg
sbb
push
cmp
add
sarl
daa
xchg
stos
dec
mov
ds
mov
cmp
sbb
pop
enter
inc
decl
repnz
andl
xchg
stos
cmp
pop
es
add
inc
and
in
stos
popl
sahf
xlat
mov
xchg
push
mov
jp
xor
dec
jp
pop
jmp
test
inc
mov
add
out
movsl
cltd
ficompl
sarl
arpl
pop
fisubrl
xchg
mov
xor
sbb
imul
mov
inc
add
mov
cmp
scas
jns
dec
xchg
sbb
or
jbe
jo
divb
out
mov
lods
jmp
jmp
xchg
lock
insl
shll
shll
test
in
dec
bound
sbb
jbe
add
adc
testb
insl
cli
aam
xchg
cmpsb
ja
xchg
out
loop
jb
movl
xor
out
sbb
mov
enter
push
fidivs
sahf
cmp
add
jmp
xchg
shll
cld
push
clc
xchg
aas
mov
shll
push
dec
das
int3
xor
lods
sub
pop
lods
mov
adc
sub
push
mov
cmp
adc
add
mov
stos
pop
mov
dec
add
dec
cmp
sbb
mov
push
cld
push
cmp
aam
ds
xor
lahf
dec
and
add
mov
xchg
loop
daa
pop
jnp
scas
and
out
cmpl
data16
js
xor
call
pop
cmp
inc
or
je
or
adc
sbb
xor
out
fdivs
mov
movsl
cmp
dec
or
lret
xor
push
add
scas
dec
sti
xorb
cmp
loope
shl
add
test
ret
add
imul
jne
lret
test
mov
mov
ret
imul
fisubrl
loopne
add
jo
push
mov
xchg
test
sahf
scas
xchg
add
int
push
or
cmp
popf
cmp
xchg
mov
stos
ss
pop
mov
hlt
pop
mov
push
pop
dec
int3
push
inc
jmp
iret
push
pop
push
int
mov
adcl
into
daa
mov
push
fisubrs
jl
or
fisttps
cltd
jg
imul
inc
std
jg
cmc
add
mov
push
js
cli
mov
je
jno
aas
xor
into
out
jo
mov
inc
xor
sub
std
push
jo
xchg
pop
lea
daa
and
xchg
sbb
add
repnz
fdivrl
sbb
push
cmp
xchg
add
out
dec
pop
pop
xor
nop
push
xchg
pop
xor
or
hlt
pop
sti
dec
nop
int
xchg
std
int3
push
cmpsl
lock
in
insb
inc
push
add
add
xor
push
test
xchg
testl
sbb
or
pop
mov
subl
mov
test
shr
out
or
mov
fnstcw
ret
inc
mov
out
inc
mov
xor
cld
ja
xlat
bt
jecxz
test
sarb
xor
pop
rcl
xlat
das
push
xor
dec
xor
mov
add
jne
imul
jl
insb
popf
out
pop
cmp
insb
mov
sbbl
and
mov
arpl
arpl
inc
inc
shll
pushf
cmc
cld
add
insl
aaa
push
push
lea
nop
or
pop
fdivl
jle
hlt
push
xchg
sti
dec
fwait
jae
pop
std
inc
dec
push
fcompl
push
fmull
push
mov
mov
fimuls
fs
or
add
popa
into
push
sahf
push
std
mov
push
pop
dec
and
sti
or
or
mov
sahf
adc
mov
and
ljmp
scas
sub
sarb
into
out
dec
orb
xlat
xor
push
out
bound
rcrl
xchg
xor
pop
xor
add
popa
pop
jae
js
pop
xorb
loopne
fiadds
sub
into
mov
leave
add
mov
mov
and
or
cmp
into
pop
movsb
push
repnz
fstps
adcl
js
test
cwtl
pop
xor
inc
mov
aaa
push
xchg
mov
dec
out
in
mov
mov
dec
add
mov
std
dec
dec
inc
jo
adc
inc
jno
jmp
test
ljmp
decb
pop
push
arpl
adc
repnz
out
imull
push
cwtl
push
mov
mov
scas
add
cmpsb
mov
fimuls
push
sub
into
loope
jns
or
inc
sarb
cmpsl
mov
or
mov
inc
xorb
pop
sbb
mov
ret
sahf
fwait
pusha
jecxz
dec
dec
das
jle
arpl
cld
les
sbb
push
cli
pushf
pop
jg
cmp
loope
das
mov
outsb
sub
pop
outsl
fstl
scas
jne
or
popa
subl
stos
mov
int3
push
mov
mov
sub
pop
in
mov
js
ret
dec
adc
pop
xchg
jnp
xchg
or
mov
xchg
add
std
or
add
repnz
sub
movsl
jns
or
sbb
inc
add
push
sbb
adc
cmc
fstp
insb
es
xchg
adcb
lods
sahf
arpl
loop
jns
push
ja
xchg
jae
out
gs
mov
movl
test
pop
and
push
icebp
jmp
mov
int3
inc
dec
das
mov
dec
enter
sbb
sbb
out
jnp
push
mov
inc
iret
mov
ret
adc
insl
scas
fs
push
push
aaa
mov
push
push
dec
or
sti
push
nop
cmc
ret
shll
ja
arpl
sbb
iret
nop
push
push
rcr
mov
sti
addr16
insl
cmpl
enter
xchg
pop
add
and
adc
lret
xlat
cwtl
cmp
mov
int3
mov
shrb
mov
jp
ds
or
fnstsw
push
inc
fldenv
cs
xor
jmp
test
or
push
scas
sbb
mov
mov
mov
and
orl
sbb
fwait
sar
cmp
insl
lahf
adc
mov
sub
pop
mov
pop
push
dec
mov
mov
push
stc
mov
sbb
lea
fwait
into
inc
int
jno
lock
out
cli
and
outsl
mov
cmp
inc
xchg
cwtl
in
mov
jbe
sbbl
dec
dec
popf
scas
pop
dec
repnz
sub
mov
lahf
pop
mov
stos
lahf
jg
jecxz
stc
mov
mov
mov
mov
js
sub
xchg
test
dec
cmp
push
sbb
gs
lcall
mov
or
push
in
push
and
push
lods
adc
lea
ds
int
push
xchg
push
sub
dec
push
push
sarl
inc
icebp
xor
lahf
xchg
data16
push
stc
mov
sub
ret
or
lcall
in
lcall
or
dec
cmpsl
je
cmp
leave
jg
insl
pop
lahf
ljmp
jns
out
loop
rclb
jnp
aaa
xchg
cld
sub
jae
xchg
in
out
cli
out
jmp
pop
xchg
cli
pop
jecxz
cmp
mov
mov
push
in
xorb
xor
sbb
lea
loop
pop
jge
aam
aas
or
js
fistl
sarb
mov
in
dec
ds
das
xor
dec
in
out
dec
cmpb
xor
bound
cwtl
adc
test
sbb
es
mov
data16
and
es
sbb
sbb
movsb
jnp,pt
fwait
mov
inc
lret
cmp
repz
fistl
in
imul
dec
cs
push
rorb
lods
aas
imul
sar
adc
dec
sbb
pop
mov
es
pop
cmp
pushl
add
std
test
sbb
push
sbb
jnp
push
scas
lret
in
lret
fldcw
out
sbb
jecxz
lds
icebp
dec
jno
mov
mov
pop
scas
xchg
and
imul
lods
mov
data16
movsl
cli
mov
in
das
xchg
or
sub
testl
not
and
add
lea
lret
rcll
sub
push
test
nop
lret
xchg
insb
ljmp
inc
loope
pop
shlb
std
call
subl
das
mov
and
in
sbb
fadds
pop
in
adcl
dec
inc
lret
push
or
out
mov
lock
ret
std
jns
or
adc
xchg
cmp
cwtl
mov
ja
push
addb
mov
jg
dec
inc
leave
jmp
sbbb
lods
arpl
shl
gs
dec
xchg
jno
dec
mov
int3
cld
pusha
js
mov
mov
ss
pusha
in
jns
dec
mov
mov
outsb
mov
mov
mov
fucom
mov
stos
sub
xor
jmp
mov
test
aaa
jb
ror
mov
xor
in
mov
push
cmc
add
lds
leave
std
dec
adc
loope
xor
pop
adc
jg
mov
imul
ret
cld
sbb
insb
mov
repz
sub
push
pop
cmp
fildl
shrl
and
xchg
test
loope
xor
inc
mov
cmc
aaa
pop
cltd
std
imul
xchg
mov
pop
xorl
shrl
cs
jg
fidivl
lahf
lcall
aam
and
popa
mov
mov
cmp
les
loopne
inc
insb
jns
push
mov
and
xor
mov
cmp
lds
lods
xorl
inc
movsb
lahf
xlat
std
or
test
test
xchg
imul
in
imul
gs
testb
cmpsb
ss
lods
mov
mov
xor
ljmp
in
dec
fisttpll
outsb
jl
push
xchg
jno
dec
xor
test
jg
mov
pop
dec
pop
sub
test
xor
push
clc
stos
pop
xchg
mov
scas
mov
adc
fisttpl
fwait
mov
mov
leave
mov
jo
movsb
test
mov
out
sub
add
insl
repz
repnz
xchg
xor
jle
enter
out
ficoms
ss
test
mov
add
add
decb
negb
dec
aas
outsb
fwait
ret
cwtl
add
xchg
mov
mov
sbb
lahf
inc
gs
xchg
jmp
pop
scas
xchg
in
jg
push
lret
enter
xchg
stc
push
cs
and
clc
cli
rorl
cmp
into
pusha
fmuls
test
jno
cmp
ret
leave
je
add
xchg
mov
daa
loope
mov
push
cmp
mov
decb
mov
ds
xchg
jo
dec
pop
inc
sbb
loope
ja
push
loop
cmc
lret
jg
out
arpl
mov
mov
and
cmpsl
cmp
jp
mov
pop
pop
jno
mov
cs
nop
ds
mov
xchg
pop
rolb
adc
mov
enter
loope
arpl
lret
popf
inc
sub
push
jg
nop
xchg
push
mov
cmpsb
fdivrl
in
xor
sahf
fcoms
fwait
pop
rcrl
scas
xchg
xchg
sbb
adc
or
test
pop
sahf
popf
das
ljmp
mov
sbb
es
repnz
test
jae
or
movsb
js
outsl
mov
testl
ret
push
cwtl
sbb
adc
cmpsb
xchg
xchg
inc
ljmp
andb
push
pop
mov
jmp
test
mov
mov
lret
lret
mov
xchg
lret
nop
pop
dec
push
pop
xchg
jne
sub
and
pop
push
roll
rolb
sub
pop
movsb
xchg
insb
jne
int3
push
bound
fcmovnb
cmp
roll
push
inc
out
test
insl
testb
ljmp
ficoms
mov
jg
pop
shlb
mov
and
mov
lods
inc
test
out
adc
int3
inc
mov
sub
inc
testl
imull
sbb
aaa
lret
outsl
pop
inc
dec
dec
inc
clc
orb
subb
mov
inc
mov
push
outsl
iret
cmp
data16
out
mov
fisubs
mov
mov
orl
mov
stc
movsb
xchg
popf
leave
cs
les
int3
pop
xor
jmp
mov
mov
shr
xchg
inc
add
pop
mov
xlat
insb
xorl
rorw
andl
test
add
pop
add
pop
out
in
into
mov
iret
fdivrp
clc
daa
sub
mov
fdivrs
lock
xor
mov
sbb
movsl
js
cmp
mov
push
fcoml
dec
mov
inc
loopne
inc
fisubrs
and
shlb
ss
or
out
sub
jmp
dec
xchg
mov
dec
mov
dec
xor
adc
sbb
pop
xor
inc
shl
ret
data16
add
sbb
cmp
mov
mov
mov
mov
loop
cltd
adc
xchg
xchg
jmp
jne
in
push
js
mov
sbb
mov
loope
in
push
xor
lock
sbb
lds
sbb
pushf
or
cmp
scas
lret
aaa
sbb
xchg
jbe
rolb
inc
pusha
out
stos
out
into
aam
adc
pop
icebp
pop
inc
insl
aaa
aam
repz
mov
cmpsb
mov
int3
mov
fistpll
lahf
shl
rcrb
push
std
loope
scas
adc
inc
cld
jp
inc
dec
inc
dec
jno
sbb
xchg
aam
jl
stos
ret
or
fmull
stos
adc
addb
fstps
pop
test
inc
jge
cmpsb
dec
or
test
outsb
in
sbbb
xchg
sub
mov
and
in
or
test
inc
sbb
sbb
xchg
ret
or
testb
out
push
outsb
pand
add
dec
fcompl
sub
pop
inc
push
inc
jp
or
and
xchg
je
imul
jp
add
and
sub
cmp
jecxz
pop
fisubl
and
sub
lock
subl
push
mov
inc
outsl
int3
xor
dec
push
clc
jb
adcl
push
jl
sti
arpl
jmp
rolb
lcall
out
cmp
aas
dec
xchg
push
adc
stos
xchg
add
stc
sarl
mov
push
xchg
bound
ss
jle
cli
ja
lret
aas
stc
fyl2x
lret
push
sti
dec
or
mov
movsl
adc
call
mov
pop
shlb
out
inc
mov
sbb
mov
or
push
dec
mov
jle
xchg
addr16
movsl
pop
sub
mov
stos
push
lods
sbb
fldenv
push
xlat
fidivs
xor
mov
test
mov
cmpsb
fsubrs
pop
cltd
xchg
pop
stc
les
lds
out
rcrb
insl
subb
xchg
loop
into
int3
out
mov
inc
cmp
xchg
sub
in
push
js
mov
adc
mov
iret
lds
faddl
sub
mov
xor
sti
xor
outsb
movb
inc
fldenv
xor
das
into
addr16
jecxz
or
into
push
pusha
pop
cli
out
test
sub
jbe
mov
pop
daa
cmp
cmp
fiadds
push
in
cmovg
sub
pop
jp
lock
std
pop
sub
fisubrl
push
add
cmc
subb
les
lds
dec
cmpl
and
in
inc
out
imul
mov
mov
icebp
mov
inc
mov
cli
outsl
xor
push
jns
or
add
data16
std
in
push
leave
jmp
and
jg
or
xchg
pop
push
cld
dec
arpl
btr
in
push
inc
cld
or
test
and
mov
stc
mov
dec
leave
or
out
dec
fnstcw
mulb
mov
push
int
test
add
jne
xor
jb
pusha
xor
mov
xor
mov
xor
lret
xlat
out
cmc
pop
test
sub
sahf
and
adcl
mov
imul
pushf
jg
jle
das
sub
int3
dec
andb
in
movsb
cli
addr16
test
lret
inc
stos
jae
push
scas
fs
push
lret
loopne
cmp
push
jno
mov
cwtl
jecxz
imul
or
push
pop
std
push
stos
lock
mov
or
mov
mov
lret
cmpsb
mov
cld
xor
sub
lahf
jno
xor
xlat
mov
into
sub
pop
loope
mov
or
xchg
sbb
xor
or
test
ja
jge
xchg
and
jl
clc
stos
fistpll
add
adc
push
sbb
jne
das
inc
subb
pop
out
xor
pushf
pop
mov
outsb
jb
in
cmpl
push
lret
xchg
push
mov
daa
test
aad
and
push
pushf
sbb
pop
test
pop
and
and
jp
out
popa
shlb
rcrb
pop
push
sub
insb
lods
jmp
xchg
testl
mov
clc
push
xor
push
das
repz
mov
test
les
cli
fs
stos
sbb
or
pop
adcb
add
sti
js
insb
and
xchg
jge
mov
or
testl
clc
mov
sub
add
gs
mov
mov
xchg
push
test
jno
mov
pusha
mov
push
cmp
jo
push
xchg
add
ret
mov
inc
lret
xor
mov
jne
pop
shlb
fistpll
jmp
pop
pusha
mov
pop
test
inc
fdivr
push
sub
stos
sub
pop
aam
clc
push
lock
bound
loop
addr16
lret
or
sbb
push
call
xor
sbb
mov
inc
cld
cwtl
inc
in
test
les
and
imul
adc
lcall
out
mov
inc
mov
adc
stos
jo
cmp
push
enter
les
jo
xor
or
insl
repz
aas
pop
mov
mov
ljmp
lea
icebp
add
cmp
lret
pop
inc
fld
lcall
out
hlt
or
sbb
cmpb
cmp
das
pop
or
jbe
jp
jge
arpl
stc
mov
sbb
mov
push
cmp
and
mov
sbb
pop
test
in
rcrl
fsub
int
jno
in
mov
pop
popa
daa
cs
and
push
xor
inc
aaa
popw
lods
test
movsb
and
jae
push
cmpsl
loop
mov
jno
test
adc
fdivl
dec
sub
sub
jg
adc
mov
fnstcw
xor
cmp
dec
loopw
mov
dec
fimuls
call
adc
in
lock
sbb
dec
mov
sbb
rcl
in
movsl
scas
repnz
cmovp
mov
jbe
pop
ud2
out
fnstcw
les
fwait
pushf
jo
sarl
fbstp
das
adc
xchg
pusha
push
mov
mov
or
jnp
xor
jo
repz
ds
sub
leave
stos
push
das
in
dec
imul
out
push
rolb
outsl
push
fnstcw
in
cmp
jne
insb
fucomp
jns
xchg
mov
adc
test
in
aam
icebp
sti
jae
arpl
sbb
int
out
dec
sub
xor
insb
xor
add
mov
mov
push
fcmovb
shr
mov
and
push
mov
and
jl
jg
lcall
dec
dec
sbb
outsb
jo
sub
arpl
or
and
mov
loope
mov
lods
mov
adc
jle
adc
lea
dec
or
push
out
dec
xchg
sahf
dec
mov
sbb
pop
xchg
pop
lss
and
out
adc
jb
insb
jl
and
push
and
lahf
aad
stos
xchg
mov
and
jne
sub
and
inc
add
sub
test
mov
dec
sbb
test
inc
adc
adc
inc
popa
enter
dec
xchg
test
imul
and
pop
jle
mov
dec
gs
jno
sub
push
jle
add
or
pop
cmpb
adc
adc
repnz
iret
movsl
sti
lcall
adc
pop
ds
cmpsl
popf
fldcw
xchg
fdivr
leave
and
movsb
gs
sbb
fwait
push
inc
xlat
stos
test
outsb
pop
lods
mov
pusha
fldl
js
out
adc
mov
scas
mov
cmp
sub
icebp
pop
pop
faddl
sub
xchg
jecxz
pop
and
jo
dec
sbb
outsb
mov
add
sbb
pop
movl
cmp
sub
xchg
xchg
push
nop
movsl
cmp
mov
xchg
arpl
setne
and
sub
dec
cmp
test
add
call
or
mov
jbe
popf
ljmp
cmpsb
mov
fnstenv
push
sub
adc
sbb
nop
popa
and
adc
int3
movsb
push
mov
fmul
mov
push
mov
xchg
jmp
insl
mov
sub
xchg
andl
std
int
xor
push
andb
push
xchg
jo
adc
inc
push
adc
push
in
hlt
jmp
aaa
mov
mov
jge
hlt
sbb
sbb
pusha
lock
into
test
stc
hlt
test
repz
lods
ljmp
or
and
add
cmp
fdivrs
lahf
mov
leave
mov
in
leavew
das
int
jle
in
mov
mov
test
gs
push
fwait
int3
sub
jns
push
push
mov
sahf
jmp
mov
cmp
push
pop
cld
xchg
sub
lods
cld
inc
lods
rorl
shrl
mov
movsl
xchg
jnp
int
shlb
push
pushf
in
imul
outsl
rorl
add
scas
inc
pop
icebp
mov
cmp
and
ss
xchg
jnp
sub
mov
and
lret
imul
pop
and
xlat
dec
add
leave
dec
push
xorb
dec
cmp
sbb
push
loope
lods
xchg
popa
mul
dec
mov
xchg
and
mov
pop
sbb
sbb
fcoml
jbe
mov
int
loope
jno
nop
push
addb
dec
pop
jne
inc
rolb
fs
cltd
and
mov
push
out
stos
xor
mov
int
cmp
popa
fcmovbe
push
jge
jge
bound
and
mov
nop
lds
movsb
icebp
loop
mov
push
mov
pop
cmpsl
xorb
sub
mov
mov
loope
adc
pop
mov
xor
jp
push
pop
cld
fadds
aad
inc
cld
pop
sbb
ret
push
xor
pushl
sbb
into
dec
mov
stos
data16
popf
shlb
stc
nop
pop
and
mov
out
push
mov
mov
shlb
imul
mov
xchg
js
xor
sbb
sar
repz
dec
cltd
xchg
add
jle
in
into
repnz
mov
adc
shrl
sarl
gs
pop
mov
jge
rcll
test
insl
movsb
xchg
clc
push
int3
add
and
mov
sbb
inc
daa
pop
ret
and
shll
sub
add
inc
ss
jmp
add
mov
cmp
mov
xchg
lock
lret
filds
push
imul
mov
pop
inc
aas
inc
popf
pop
jbe
mov
repnz
in
das
mov
aam
pop
adc
sbb
adc
dec
inc
sbb
loop
jmp
jns
mov
pop
arpl
rcrl
insb
mov
push
js
jne
shlb
xor
jmp
mov
lods
or
ljmp
out
push
cmp
repnz
fcompl
xor
scas
add
into
ficompl
mov
mov
pop
in
cwtl
cmc
xor
es
test
inc
test
xchg
sbb
inc
adcb
push
mov
pop
lcall
fdivrs
ja
es
fists
xor
in
cmp
xchg
jo
ljmp
rcrb
and
inc
call
out
jns
mov
jno
xor
dec
out
or
jmp
cmp
fdivrl
mov
int3
cmp
jmp
sarl
das
loope
add
mov
and
movsb
push
ret
sbb
mov
sub
xchg
dec
and
adc
or
pop
fisubrs
jne
call
xor
xor
inc
std
test
pushl
sbb
and
aas
cmp
pushf
rdmsr
sbb
xchg
push
iret
inc
pusha
in
stc
aaa
xchg
or
xchg
test
push
inc
jecxz
lcall
dec
sub
and
adcb
push
clc
sub
cwtl
xchg
mov
mov
lods
inc
sub
fisttpll
cltd
outsl
out
pop
pop
fistl
mov
adc
mov
mov
lods
inc
or
testl
jnp
arpl
ret
add
inc
mov
clc
aaa
cwtl
lea
mov
dec
dec
inc
iret
scas
fcmovnbe
pop
or
xor
repz
sbb
cmpsb
cs
add
dec
sub
and
adc
aas
arpl
leave
int
or
xchg
and
push
popf
jo
fimuls
and
test
pop
push
add
mov
mov
jp
movsb
lahf
xlat
push
jmp
push
sarb
xlat
sbb
cmp
rol
loop
jae
or
aas
mov
or
mov
mov
inc
inc
xor
xchg
pop
test
mov
mov
adc
sbb
or
mov
jns
mov
add
inc
add
inc
jmp
das
jnp
and
mov
inc
xchg
jne
pusha
cmpsl
scas
iret
hlt
push
fisttpl
shlb
lea
imul
xchg
and
aad
orb
dec
xchg
enter
add
ljmp
jno
cmc
dec
xor
push
adc
into
in
in
push
out
dec
nop
add
int
negb
fs
inc
test
das
enter
pop
mov
aaa
push
lods
pop
cmpsl
fs
fwait
lahf
mov
icebp
mov
cmp
sbb
je
xor
pop
fs
sub
repnz
push
jle
xor
insb
mov
fwait
mov
jae
xchg
mov
fidivl
cmp
adc
cmp
push
add
loopne
push
sub
mov
mov
mov
xor
sbb
push
clc
imul
and
pop
inc
imul
enter
sbb
btc
or
inc
mov
shl
sub
xor
mov
dec
sub
mov
ja
in
push
fwait
insb
inc
bnd
repnz
mov
cmp
jmp
roll
lahf
into
mov
lock
xlat
adc
test
adc
outsl
lahf
cmpsb
insl
sbbl
les
nop
mov
in
push
pop
sbb
pop
push
pop
and
mov
fwait
in
sbb
pop
mov
mov
mov
jo
out
sbb
lahf
mov
sbb
xchg
lahf
pop
xchg
outsl
shl
push
ret
adc
je
sub
lahf
sbb
inc
jno
in
loope
adc
stos
ljmp
scas
out
jne
dec
lahf
pop
sarb
mov
leave
fs
jge
bound
mov
mov
add
lahf
cmp
xor
push
sbbl
cmpsl
ljmp
int3
add
out
xlat
cmp
xor
cwtl
loopne
lret
imul
ret
adc
sbb
sbb
or
pop
and
imul
inc
cld
cs
lret
mov
iret
add
push
sub
fwait
imul
cld
xchg
nop
xlat
mov
push
jae
sub
out
push
jbe
cmp
pop
jmp
jne
out
cmc
mov
mov
sbb
push
inc
mov
cmp
inc
stos
lret
stos
movq
sbb
les
insb
cld
cwtl
pop
mov
stos
fldl
jo
loopew
subl
out
mov
adc
and
pusha
scas
test
scas
cmpsl
jl
js
pop
jge
movb
cli
sti
insb
mov
std
jo
jno
push
arpl
xchg
jl
add
push
add
mov
lods
stos
or
sti
sti
pop
ret
pop
adc
mov
pop
and
lahf
int
ljmp
dec
clc
lods
dec
out
or
insb
aad
jnp
aad
scas
add
sbb
cmpsl
loopne
cmp
mov
icebp
aam
mov
sbb
pop
pop
mov
cmp
call
fnstenv
scas
aas
loopne
mov
aad
sub
mov
sahf
adc
jmp
cmp
in
outsl
lock
adc
adc
adc
daa
lahf
sbb
sarb
jae
sub
and
adcl
ljmp
lods
insb
aas
and
inc
mov
lock
dec
icebp
mov
lods
mov
dec
fldcw
pop
pop
iret
sub
insl
loope
imul
inc
inc
push
pop
ret
shll
push
jbe
fldcw
inc
cmp
lcall
and
xor
mov
aas
add
jno
test
or
adc
cmp
imul
cmp
ja
mov
cmp
inc
cmpsb
or
rcll
pop
addb
add
inc
cmp
mov
dec
xchg
cs
sti
jge
notl
mov
mov
mov
fs
xchg
xlat
adc
subb
mov
lcall
inc
dec
dec
sbb
xor
ds
jg
sub
nop
mov
std
filds
clc
jl
cmc
mov
cltd
mov
xchg
fwait
jg
pop
adc
and
ret
into
testb
jae
loope
fdivrs
into
stos
in
test
sahf
jmp
mov
sbb
stos
inc
lret
repnz
mov
lds
out
pop
fildll
push
xchg
ja
cltd
pop
push
mov
ljmp
cwtl
cmp
decb
and
sti
out
fsubrs
je
pop
call
adc
lods
in
xor
mulb
jb
xchg
cmc
ficoms
nop
sbb
inc
lock
lret
and
int3
daa
int3
shr
aaa
jg
test
xchg
sarl
add
sahf
xor
lret
jecxz
mov
adc
scas
lcall
push
cld
xchg
sub
outsb
and
jmp
das
cmp
cmp
sub
imul
sar
mov
inc
addl
jns
xlat
push
icebp
mov
lcall
fldl
cmp
mov
dec
inc
sarb
in
or
fs
xlat
dec
sub
cltd
pusha
xor
jo
popa
xchg
roll
and
jg
ficoms
jmp
cmpb
xchg
in
jno
insl
mov
pop
pop
hlt
xchg
xchg
scas
lock
psrld
lahf
mov
dec
xchg
ljmp
inc
aam
xorb
xor
adc
lds
inc
stos
outsl
stos
pop
push
ret
fnstenv
roll
enter
jne
dec
call
push
mov
aas
loopne
dec
and
scas
pop
movsl
xchg
sbb
gs
adc
cli
nop
push
iret
jle
mov
mov
dec
insb
dec
dec
inc
shrl
cmpl
stc
iret
iret
lcall
add
ret
lock
popf
rcl
popf
popf
mov
xchg
cmp
cmp
fwait
push
popf
push
into
mov
mov
lahf
push
inc
xor
enter
cmpsb
xchg
push
enter
aam
mov
addb
ret
loopne
sbb
mov
rep
in
xchg
mov
das
sti
mov
ja
xchg
and
inc
push
mov
pop
dec
sbb
and
insb
pop
stos
xor
loopne
inc
repz
hlt
sarb
out
mov
pusha
mov
sub
data16
or
mov
xchg
jb
out
aaa
fmull
out
adc
orb
outsb
pusha
aad
or
mov
leave
mov
fdivrp
xchg
test
aam
xlat
enter
pop
lcall
iret
sbb
cld
jg
mov
fwait
mov
mov
repz
imul
dec
es
ret
dec
mov
sahf
dec
cmpl
lods
and
test
xor
and
jle
mov
mov
sub
and
inc
push
hlt
int
jge
mov
jge
mov
xchg
mov
mov
push
push
nop
pop
fwait
or
ss
mov
das
outsl
push
mov
pushf
insl
loop
ret
or
andb
and
popfw
sub
dec
mov
and
adc
call
ja
push
jo
add
movsb
addb
dec
mov
jno
cld
cwtl
bound
or
movsb
out
pop
cmp
push
pop
js
in
testl
stos
icebp
mov
xor
ljmp
mov
sbb
sub
orb
in
push
cmp
or
cli
sti
fs
push
cmpsl
push
adc
sbb
cmc
mov
in
or
cmp
andb
bound
bound
and
jnp
inc
movsl
xor
jno
and
and
pop
idiv
pop
push
or
shll
adc
je
lea
lcall
lock
mov
bound
out
xchg
adc
jecxz
mov
lock
loopne
call
mov
sub
fs
movsl
or
jp
test
pop
jl
mov
sub
dec
popa
xchg
fwait
imulb
leave
adc
mov
inc
orb
cmp
rcrb
inc
hlt
inc
push
jno
mov
pop
inc
xchg
int3
cld
hlt
inc
test
testl
gs
xchg
push
mov
test
sbb
lret
pop
in
testl
inc
call
popa
outsb
pop
sbb
add
xor
cs
dec
std
mov
lds
cmp
popf
inc
test
stc
popf
dec
aaa
xor
sbb
les
jp
ficompl
xor
loopne
or
imul
int3
xchg
pop
mov
sub
mov
mov
or
inc
subw
inc
ja
jns
sub
jp
test
sub
pop
into
pop
inc
aas
jbe
xchg
push
cmpsl
fstl
cmpb
sbbl
repnz
ja
sbb
dec
mov
inc
pusha
xchg
sbb
les
lret
inc
xor
outsl
mov
xorl
je
bound
in
faddl
fldt
inc
dec
loope
jb
insl
adc
mov
stos
jecxz
dec
and
mov
jae
sahf
cli
mov
fimull
jbe,pn
sbb
repnz
pop
xchg
mov
ret
cmp
push
scas
cmp
mov
stos
sbb
pop
lret
xlat
cltd
je
mov
lcall
pop
lods
jb
cmp
sti
and
repz
lock
fsubl
jp
out
scas
mov
in
dec
pop
jp
fisttpll
pop
inc
imul
outsb
push
jle
fdivp
xor
xorl
jle
test
sar
inc
fnstcw
mov
in
xchg
cli
cmpsl
pop
inc
lret
aaa
addr16
js
pop
and
push
lods
push
mov
divl
bound
mov
test
int3
add
mov
jne
int3
leave
bound
test
mov
pop
in
js
pop
cmpsl
fsubrs
or
insl
add
mov
fwait
cmpsl
push
aaa
and
arpl
xchg
push
push
fcomip
jns
ficomps
out
push
sub
xchg
and
into
insb
sub
hlt
outsl
mov
aaa
jno
sub
fsubs
out
mov
xchg
cmp
add
jp
sbb
mov
aad
fldenv
insb
pop
imul
push
cs
fisubl
xor
iret
add
pop
ljmp
clc
xchg
aad
sbb
scas
jecxz
inc
ret
mov
push
in
enter
mov
out
mov
xchg
jno
fisubrl
push
sbb
jns
flds
pop
jo
fidivl
push
fadds
cmp
sub
pop
inc
xchg
mov
sahf
or
fidivrl
jecxz
mov
jno
inc
addb
int
fildll
out
mov
clc
adc
mov
and
out
xchg
pop
mov
inc
push
repz
js
sbb
fs
dec
sarl
aad
in
mov
repz
mov
sbb
lret
sub
sbb
insb
in
out
jo
sbb
inc
and
and
mov
stos
mov
aam
jo
aaa
test
add
mov
popf
xlat
imul
push
pushf
pop
mov
js
and
nop
cltd
fsubrl
dec
gs
mov
push
sub
mov
mov
movsb
cmpsb
pushf
push
pop
mov
xchg
sbb
lahf
dec
jns
loop
pop
out
aaa
xor
sub
push
inc
jecxz
in
xchg
inc
dec
pop
inc
fs
enter
cmpsl
leave
jae
je
xor
and
mov
ficoml
jnp
stos
xlat
sbb
arpl
imul
jecxz
into
lea
aad
fldpi
gs
adc
fsubs
push
shlb
fsubrp
or
jg
push
push
lock
cmp
iret
out
stc
fldl
or
icebp
adc
lret
orl
mov
test
jle
xchg
inc
push
andb
cld
dec
insb
icebp
adc
test
inc
lds
lods
pop
cmp
cltd
dec
sbb
xor
adc
enter
nop
in
add
push
jp
cs
or
inc
pop
testl
mov
sub
xchg
mov
repz
jnp
jae
addr16
int
es
lret
push
and
mov
das
fisttpl
call
xor
enter
cmp
pop
outsl
sbb
out
outsb
mov
js
icebp
test
inc
cwtl
int
push
mov
and
movsl
cmp
add
mov
mov
sbb
jle
ss
ja
out
sbb
idiv
and
iret
and
aam
sarl
or
dec
mov
aas
movsl
add
flds
dec
popa
inc
sub
subl
pop
insl
jo
mov
cltd
adcb
ljmp
inc
push
andb
xchg
jp
fdivrs
call
loopne
popa
inc
mov
xchg
dec
add
xor
cmp
xchg
xchg
dec
xchg
test
dec
inc
cmp
add
add
jmp
inc
xor
pop
movsl
push
outsb
sub
in
in
mov
bound
jl
cltd
lret
loopne
lret
pop
xlat
add
cmpsl
bound
lods
out
repnz
push
test
push
pop
loope
mov
or
sahf
push
lods
sbb
mov
or
adc
add
mov
and
mov
in
hlt
or
loope
xor
or
out
arpl
jns
das
jp
repnz
fchs
sub
or
stos
std
pop
lds
popf
mul
cld
inc
jl
jp
push
xchg
and
push
mov
cmp
mov
into
jg
es
dec
mov
pusha
inc
pop
ja
jle
push
cmp
repnz
mul
sti
int
lahf
negl
pop
int
dec
in
pop
fistl
stos
jno
cmp
ja
test
outsl
sbb
in
fimuls
push
scas
lret
lods
call
jns
jl
pop
pusha
lods
push
push
bound
cltd
loope
xor
adc
cld
test
push
lahf
imul
jb
test
add
xchg
scas
pop
xor
addr16
sub
cmp
cmp
dec
mov
adc
xor
pop
dec
stos
pusha
xor
add
mov
out
pcmpeqb
fistpll
div
pop
lret
mov
mov
push
pop
cmp
xchg
jb
inc
push
inc
insb
mov
outsb
shrl
mov
adc
mov
fimuls
pop
ret
sub
adc
and
fistl
pop
jbe
dec
push
or
test
stos
in
fldenv
movsb
pop
repz
rorl
add
stos
xchg
xchg
lret
fldl
pop
or
or
pop
scas
mov
xchg
aad
sub
adc
sbb
sub
in
sbb
out
add
scas
insb
jbe
fs
sub
jb
xchg
int
jb
xchg
or
inc
or
movsl
sub
push
out
pop
xchg
into
sbb
push
je
icebp
cltd
xchg
inc
sti
inc
pop
or
popa
pop
jo
xchg
adc
insl
lahf
das
leave
lret
gs
sbb
xlat
mov
add
idiv
or
loopne
push
push
sub
stc
call
mov
cs
xor
cmp
jns
shl
call
mov
addr16
stc
repz
cmp
enter
fldenv
push
or
pop
lcall
sub
shll
cmp
aaa
es
es
scas
mov
shrl
jns,pn
mov
or
sbb
sbb
xor
jbe
cmc
mov
mov
mov
xchg
fdivs
inc
inc
jne
loop
lds
adc
daa
cmp
push
mov
loope
shrb
jne
jbe
int3
push
sbb
mov
and
xor
sub
mov
cmp
inc
insb
xchg
shrl
and
mov
cmp
outsl
xor
add
xchg
loop
enter
jnp
call
add
mov
into
xchg
jo
jecxz
xchg
test
or
pop
xchg
mov
ret
insb
out
in
jnp
mov
or
cli
fwait
cwtl
add
rcrb
jl
sbb
jp
cmp
ret
sbb
lds
add
pop
or
out
jl
xchg
cli
mov
cmp
mov
sahf
jge
cmpsb
push
or
cltd
arpl
lcall
imul
xchg
mov
cmc
mov
pop
icebp
push
sti
dec
jns
arpl
pop
mov
mov
fwait
jle
cmp
hlt
es
inc
stos
sub
cmp
int3
adc
popa
or
jae
in
fldl
loope
sbb
mov
cmp
pop
inc
and
call
add
xchg
jle
enter
test
ror
pop
popa
je
adc
fisttpll
testl
les
cmp
andb
out
fwait
sub
iret
lea
cmp
cs
mov
ljmp
inc
push
dec
fcoms
xlat
or
insl
aaa
mov
pop
inc
fnstenv
xlat
leave
or
pop
shl
movsb
xorb
ret
js
pop
aam
jne
stc
mov
loopne
dec
fimull
jp
push
mov
pop
insl
xchg
inc
fsin
shrl
in
and
std
xchg
xchg
xchg
mov
mov
aad
popf
mov
xchg
and
xor
inc
cmc
iret
add
lds
test
cmpsl
pop
lea
adc
out
pop
sub
cmp
lret
inc
out
cmp
outsb
jg
and
and
lcall
xchg
xchg
push
push
dec
mov
aaa
out
jno
adc
push
or
ret
jae
lock
jge
sub
jmp
push
ds
xor
outsl
jle
lea
es
in
sub
movsl
aas
inc
int
push
incb
hlt
pop
cs
cmp
clc
add
scas
pushf
or
xchg
movsl
cs
sub
rclb
mov
int3
mov
cli
dec
mov
repnz
jno
call
mov
mov
ficomps
popl
and
jge
inc
mov
ss
jno
jno
adc
test
fs
jmp
lds
in
or
mov
test
cmp
xchg
push
lods
jg
xchg
inc
inc
cmc
bound
lret
notb
lret
popl
jae
es
out
leave
loope
loopne
stos
jecxz
add
jb
xlat
xor
imul
jg
imul
lret
mov
out
pop
shrb
jge
jo
roll
inc
pop
mov
mov
xor
pop
mov
in
or
dec
mov
push
repz
fdivp
cmpsb
jo
jnp
dec
stc
adc
jmp
cmc
jns
pushf
sbb
xchg
addr16
test
test
inc
inc
mov
dec
lret
in
xchg
ds
icebp
aad
mov
cmc
push
test
jg
xor
scas
jne
jno
xlat
cmp
insl
out
mov
into
xchg
loope
add
dec
pop
pop
out
mov
insb
pop
addl
subl
inc
fisubs
repnz
push
jne
and
add
fldcw
mov
stos
out
mov
add
lret
shl
aad
test
int3
jo
ret
repz
push
shrb
push
icebp
out
stos
dec
jle
mov
xchg
adc
loope
mov
xor
xchg
cmp
mov
les
jb
sarl
cmp
and
mul
jno
jo
pushf
lea
aaa
cmp
dec
xor
xchg
rclb
adc
popf
mov
clc
lcall
or
stos
cmp
js
sbb
test
hlt
es
mov
nop
sbb
and
dec
sub
jnp
mov
push
jnp
xchg
cld
jns
mov
lods
add
jo
hlt
jg
fistps
iret
setnp
movsl
xchg
xor
ljmp
and
fimuls
mov
mov
and
mov
in
jns
shl
ja
mov
and
xor
adc
cmp
lcall
into
loopne
push
pop
rorl
cmp
sbb
lahf
xchg
aam
sub
jg
loope
popa
lret
jmp
icebp
and
dec
xchg
jno
das
mov
sub
std
or
stos
xchg
dec
ficompl
fsubl
mov
fadds
or
adc
int
push
push
es
cmp
xchg
std
repz
inc
jp
orb
mov
popl
pop
pop
jle
xchg
dec
xor
adc
ret
or
ret
dec
xchg
cli
xchg
inc
stos
enter
arpl
ret
popf
ja
test
flds
cmc
push
push
aaa
jne
es
gs
dec
repz
mov
nop
sub
shlb
movsb
cwtl
out
movsl
jno
mov
mov
and
lods
icebp
cld
jb
je
cli
or
out
jae
jl
rorl
scas
xor
xor
mov
or
pop
mov
pop
pop
cs
push
test
js
nop
xchg
adc
jb
test
and
cmpsb
or
dec
xchg
cmp
fsub
fwait
lds
cmpsb
push
and
push
mov
push
push
nop
loopne
mov
adc
aaa
sbb
arpl
sub
adc
rcrb
lret
add
mov
jbe
fs
sub
inc
or
jge
popf
pop
ljmp
xchg
mov
out
mov
hlt
xchg
ret
xchg
clc
ficomps
xor
mov
adc
test
push
sti
xor
sbb
movsb
das
arpl
and
pop
or
push
cmc
lods
push
jecxz
lret
pop
mov
addr16
aam
imul
je
or
mov
mov
jge
sbb
dec
inc
int3
push
loopne
rcll
add
loopew
dec
xchg
mov
xchg
mov
in
pop
lahf
or
xchg
and
fs
nop
sub
adc
sbb
rsqrtps
jo
andb
loope
cmpsb
sarl
mov
lcall
jg
lret
push
mov
jo
pop
test
clc
inc
insb
leave
push
stc
add
pop
pop
sbb
inc
in
leave
sbb
shrl
test
push
add
testb
cmpb
adc
out
pop
pop
jae
dec
aad
aaa
jae
iret
fsincos
mov
sti
addr16
jp
lcall
les
in
cmp
jne
or
aas
ss
push
int3
clc
iret
lret
sub
xchg
iret
or
xor
insl
xchg
push
inc
mov
adc
insb
insb
jmp
pop
cld
lret
shlb
dec
or
out
pushf
mov
repnz
mov
inc
push
nop
subl
mull
ret
push
cmpsb
xchg
stc
fucomp
mov
and
mov
mov
call
fucom
add
jns
out
stos
mov
jns
stos
mov
adc
or
scas
mov
xchg
sbb
idivb
js
lock
fadds
movsl
xchg
xchg
sub
mov
mov
xor
imul
mov
adc
or
mov
jae
or
fs
jb
cwtl
cmp
fldt
pop
jne
dec
shlb
jl
jne
cld
xchg
adc
add
stos
movsl
cmc
ret
push
pushf
lock
lret
cmp
int3
lret
add
adc
fwait
pop
outsl
nop
cmc
movsb
mov
sub
push
or
add
mov
scas
add
cmp
mov
test
mov
or
push
xor
cmc
push
clc
outsl
sub
xor
push
jp
addr16
and
jns
inc
stc
cmpsl
mov
inc
and
mov
cmp
iret
test
push
pusha
mov
fidivl
add
and
std
loope
mov
daa
stc
ret
imul
add
cmpl
push
enter
mov
mov
fs
jmp
insl
std
add
pop
ret
adc
nop
lods
in
pop
enter
in
cmpsb
adcl
push
push
xchg
cld
sub
jne
je
insl
mov
ljmp
or
lods
out
mov
inc
mov
stc
lea
fcmovb
mov
sbb
push
scas
shll
sub
pop
inc
xor
jmp
mov
cmp
push
or
fadd
cmp
ret
dec
cs
loopne
or
test
cmc
mov
in
pusha
xchg
aam
int3
lock
and
leave
mov
loope
jo
jne
stos
sbb
jno
jb
js
mov
enter
sub
bound
loopne
jmp
je
sbbl
fistps
adc
cs
mov
xor
nop
lret
shll
sbb
push
aad
push
test
into
inc
mov
jecxz
sub
sub
dec
pop
xor
mov
es
pop
pop
dec
push
dec
incl
adc
mov
lcall
jae
imul
in
cmp
push
sbb
popa
jmp
bound
mov
in
and
add
jo
and
mov
jge
je
fidivs
dec
outsb
stc
cmp
fs
js
dec
and
xor
mov
popf
mov
add
push
xor
lods
test
mov
pop
jmp
stos
scas
das
push
sub
mov
shrl
repz
pop
mov
data16
dec
sbb
pop
pop
sub
shlb
pop
insb
sub
dec
inc
loopne
pop
leave
clc
js
jmp
pop
bound
icebp
bnd
addr16
fs
enter
push
cltd
add
cs
xor
push
xchg
repnz
out
out
cmc
stos
outsl
int
sbb
mov
push
rcrb
adc
mov
mov
mov
iret
add
add
subl
cltd
data16
fcmove
out
pop
or
mov
pop
pop
jne
mov
or
nop
out
and
jb
clc
add
mov
mov
in
mov
sub
pusha
shll
push
arpl
mov
sti
xchg
lret
rorb
adc
lea
dec
and
ja
je
push
imul
xchg
xor
fbstp
enter
icebp
cli
movsl
fsubl
or
xor
sub
scas
add
subb
xchg
sub
aam
loope
jb
jg
sub
add
jnp
jg
shll
push
dec
mov
out
fs
inc
lcall
and
insb
leave
sbb
loope
xor
sbb
dec
daa
pop
cmpsb
pusha
movsb
ja
jp
leave
mov
cmpsl
add
nop
filds
inc
push
sbb
fidivrl
add
ja
adc
fnsave
jne
adc
push
rcrb
push
out
fimuls
je
xchg
dec
mov
int
scas
cmpsb
mov
sahf
lea
cmp
int
cwtl
sub
add
mov
or
or
lret
xor
jne
dec
and
into
mov
jmp
mov
and
mov
cmc
repz
stos
push
mov
scas
sub
gs
add
imul
xchg
mov
dec
or
mov
lcall
scas
cmc
add
lcall
and
icebp
sbb
jno
mov
xchg
cltd
pushf
sbb
push
push
or
xchg
adc
mov
aad
mov
out
cmc
adc
xor
inc
pop
daa
ds
xchg
mov
test
inc
jb
push
mov
icebp
imul
aas
test
cmpsl
int3
fwait
jo
aas
pop
loope
cmp
mov
lahf
jge
inc
ret
ljmp
dec
xor
ret
repnz
adc
rcrb
mov
repz
sahf
jp
pop
mull
jae
arpl
xor
jmp
gs
xor
cmp
mov
loopne
cs
imul
fidivs
add
xchg
mov
cmc
rolb
enter
jae
sbb
mov
ljmp
in
ret
and
sarl
xor
pop
enter
dec
stos
test
test
xchg
cli
push
and
aad
ror
or
imul
jae
xchg
std
xchg
icebp
mov
jecxz
outsb
inc
rcrb
mov
pop
lds
sub
and
xor
mov
push
lds
stos
push
outsl
inc
mov
push
fcom
adc
lods
iret
sbb
pusha
lsl
hlt
das
push
or
mov
sbb
inc
jp
add
adc
xor
mov
pusha
inc
or
sub
jp
fisttpll
pop
dec
fnstenv
imul
mov
pop
xor
mov
and
mov
push
jbe
push
cwtl
sbb
cmp
push
aaa
sbb
dec
mov
call
fwait
pusha
ds
push
and
pop
cmp
sub
nop
out
out
nop
xor
pop
dec
nop
adc
or
push
sub
fdivl
loop
push
fisttps
mov
in
add
jne
pusha
mov
dec
sbb
fistl
mov
jb
repnz
sahf
test
das
leave
pushf
scas
jmp
in
les
or
sbb
iret
ljmp
push
mov
rcrb
or
loopne
pop
shrl
mov
in
ja
inc
mov
jns
mov
dec
lahf
push
inc
mov
jae
popl
loope
lds
jg
push
in
insl
shlb
adc
inc
inc
inc
mov
mov
xchg
out
icebp
xor
push
outsl
cmp
dec
mov
int3
incb
cltd
mov
adc
sub
int
cs
cmp
into
and
mov
inc
dec
dec
imul
mov
add
leave
callw
inc
and
xor
call
mov
push
cmp
xor
mov
ja
cltd
stos
jle
adc
mov
inc
cmp
repnz
adc
fstps
xor
bound
repnz
add
dec
adc
aas
jge
lds
test
xchg
adc
mov
mov
dec
fdivs
cmpsb
icebp
xor
push
mov
cmp
gs
jne
call
fnstenv
jecxz
pop
adc
in
orb
pop
adc
jne
add
mov
sbb
jne
mov
test
mov
mov
jp
dec
mov
pop
insb
mov
dec
pop
subb
in
adc
in
andb
jno
inc
jmp
hlt
call
mov
or
mov
out
sbb
fadds
push
xor
add
hlt
jle
xchg
lahf
test
sub
mov
fcomps
mov
cli
or
adc
mov
test
mov
sbb
lret
xor
cwtl
inc
and
pop
jno
test
in
mov
call
mov
iret
push
or
push
mov
inc
iret
push
loopne
movsl
mov
mov
xor
cmpsl
xlat
xlat
mov
sti
imul
lds
into
push
nop
push
repnz
addr16
jge
dec
sub
mov
xchg
xlat
xchg
fsubrl
bound
out
push
stos
push
insb
mov
stc
call
cmpsl
sahf
shl
and
jne
fsubr
hlt
push
push
inc
jg
push
aaa
sbb
in
push
stos
das
inc
or
data16
outsl
xchg
jns
xchg
dec
in
or
jns
push
push
push
mov
orl
ljmp
out
mov
cli
sub
gs
rorb
push
mov
jo
pop
push
inc
jl
and
hlt
mov
ljmp
xchg
mov
add
sbb
and
xlat
out
loop
xor
sbb
inc
loop
call
push
add
test
dec
stc
cmp
scas
lcall
pop
dec
add
jmp
ficomps
rcrb
dec
fwait
icebp
mov
mov
in
adc
fcompl
xor
jg
adc
int3
call
sti
cmc
add
mov
push
mov
inc
inc
mov
xor
fstl
pop
mov
ljmp
push
jl
adc
mov
dec
ds
rcr
out
arpl
loopne
pop
mov
jbe
mov
add
pop
popf
jp
add
scas
xchg
fcmovbe
add
xor
aam
aad
adcb
dec
rclb
lret
cmpsl
pop
and
sub
pop
pop
sbb
lret
mov
xchg
push
cmp
enter
mov
popa
arpl
jno
cmpsb
jp
adc
test
xor
sti
fimull
out
sbb
mov
dec
cmp
push
xchg
push
bound
scas
push
xor
test
sub
mov
jbe
or
mov
call
lcall
call
xchg
mov
push
movsb
shlb
sbb
push
scas
fistpll
aam
fcmovne
mov
and
imul
xchg
ljmp
cmc
cltd
std
in
or
int3
fildl
inc
bound
mov
faddl
sbb
fstpt
add
fdivp
out
mov
cmp
outsb
push
mov
scas
jl
mov
xor
jbe
sub
movsb
iret
rclb
pop
adc
loope
mov
lahf
push
jge
clc
enter
test
cmp
sarl
dec
push
fdivr
sbb
std
ret
push
insl
jo
or
call
mov
mov
xchg
fisttpll
mov
int
lret
ficomps
push
mov
in
movsb
in
rorl
rcll
jns
out
test
adcb
sub
mov
clc
and
cmp
lcall
inc
ss
lock
lret
aam
xchg
sbb
movsl
pop
mov
mov
loope
iret
dec
stc
inc
call
loop
push
push
pop
jg
xchg
add
bound
into
fdivl
lret
add
sub
or
fbld
mov
addr16
loop
enter
jl
test
fldcw
sub
clc
and
pop
daa
xor
adc
mov
fs
iret
bound
lock
fildl
es
sbb
xlat
aas
stc
and
dec
add
pushf
lock
aas
dec
push
dec
ss
scas
push
loope
push
and
aas
lea
jecxz
push
inc
mov
jmp
mov
mov
call
arpl
push
daa
cwtl
lret
jnp,pn
cmp
mov
jecxz
inc
test
fmuls
jns
mov
and
dec
mov
dec
inc
sbb
pop
lods
xor
push
loope
aaa
and
xchg
ds
andb
daa
stc
in
scas
test
dec
jne
mov
pop
cmp
push
std
cli
js
imul
fdiv
jno
leave
lahf
xchg
loop
loop
add
out
xor
jae
hlt
mov
ret
sbb
gs
or
in
lret
iret
cmpsl
add
mov
push
adc
inc
scas
dec
sbb
dec
pop
andw
mov
sub
outsb
rcr
vsubsd
subb
push
pop
loopne
mov
mov
movsb
dec
pop
inc
pop
cs
jmp
test
cmpsl
pop
pop
jno
jp
xor
jl
adc
mov
sub
mov
out
inc
fidivl
adc
xchg
das
push
out
pop
shlb
mov
cmpsb
sti
clc
pop
lock
popf
addr16
xchg
dec
lods
jmp
xchg
jnp
mov
cmp
fiaddl
xor
jle
addr16
outsl
mov
or
mov
lcall
or
mov
popf
push
sbb
test
add
push
mov
lret
sbb
mov
stc
and
add
imul
jmp
or
cmp
repnz
xchg
popf
jo
adc
pop
push
push
inc
es
or
lcall
dec
cwtl
mov
lock
xor
sub
aaa
jbe
imul
jge
iret
dec
ss
xor
and
and
hlt
pop
push
scas
mov
mov
sti
mov
daa
lea
push
mov
mov
fucomip
test
pushl
imul
sub
sbb
mov
push
cs
ror
call
mov
adc
and
sub
insl
jl
cmp
inc
push
flds
fistl
ss
pop
pop
cmp
jnp
and
fwait
gs
rcrl
mov
sbb
pop
addr16
xor
and
mov
push
cs
xchg
out
dec
and
xlat
movsl
aas
test
push
jl
mov
stc
shll
movsl
dec
shrl
sbb
cmp
mov
xor
xchg
je
ficomps
cltd
jb
in
sub
test
shr
dec
inc
inc
push
xor
imul
dec
cwtl
sbb
mov
lret
pop
sub
das
xor
sti
xchg
sbb
fucomip
call
filds
push
faddl
sahf
cltd
and
stos
xchg
fmull
sbb
xor
inc
enter
fsubl
and
aad
clc
cmpb
mov
loopne
jecxz
sahf
rcll
nop
push
es
les
movsl
outsl
fs
sbbl
loopne
mov
mov
cld
rclb
push
sub
jmp
pushl
filds
cmp
adc
jmp
jmp
mov
movsb
icebp
fbstp
adc
cmp
inc
add
repz
pop
jnp
out
mov
or
roll
push
fldl
pop
mov
sub
je
jno
pop
xor
cmpsb
mov
lret
push
xchg
movsb
divb
ud2
inc
pusha
loope
aaa
loopne
outsl
dec
addr16
sarl
xchg
mov
gs
es
iret
pop
shrb
andb
clc
lods
inc
adc
orl
jo
ficoms
cmp
inc
jg
repz
loope
sub
jmp
xor
mov
push
push
nopl
fstps
cmp
inc
sub
sub
ljmp
lret
adc
fcompl
sbb
push
sub
sti
push
cmp
mov
mov
loop
dec
pavgb
sbb
sub
arpl
jb
lret
in
adc
stos
faddl
pop
das
lea
inc
into
cld
xor
fimuls
mov
add
xor
pop
jmp
jbe
cmpsl
in
rorl
cmpsb
jle
scas
iret
lods
movl
shll
mov
mov
lds
roll
jp
lods
mov
add
push
test
push
ret
sti
cmp
inc
popa
inc
ret
rolb
sti
mov
push
sbb
mov
xchg
sub
push
mov
jecxz
pop
mov
repz
int
ret
pop
xor
sub
push
imul
and
pushf
or
xchg
shll
mov
jle
aaa
sbb
inc
add
add
xchg
cmp
into
adc
movsb
shlb
fimuls
mov
xchg
pop
in
outsl
paddusw
aas
xchg
into
xor
cmp
pusha
fs
aad
dec
rcl
inc
and
pop
ror
or
fcompl
and
xor
pop
stc
aam
pop
sbb
mov
mov
xor
adc
int
repz
rolb
loope
pop
es
push
ficompl
jb
cld
mov
stc
or
cmp
rorb
mov
es
cli
jns
jecxz
jp
ficoml
fwait
inc
jae
jne
aam
cmc
pop
bnd
xor
stc
sub
adc
cli
sbb
repz
jecxz
pop
int
adc
jmp
les
adc
jg
js
adc
xor
movsl
rcrl
xchg
cmp
push
lret
aas
and
jbe
dec
xchg
pop
mov
mov
inc
inc
cld
fdivrl
orl
jb
and
lods
adc
pop
sub
out
cmp
adcb
add
fisubrl
sti
idivb
cmp
aad
rcll
call
sub
movb
and
mov
and
dec
std
lods
flds
mov
pop
into
fcomps
sti
push
sti
movsb
mov
sbb
and
cld
aas
insl
loopne
hlt
fldcw
jg
mov
push
sbb
fimull
jl
jl
jge
mov
into
orb
outsl
inc
imul
push
inc
dec
dec
dec
pop
lea
xor
cmp
std
lds
test
and
test
xchg
mov
ljmp
pop
and
lcall
add
dec
jae
ret
dec
mov
lahf
pusha
dec
ficompl
or
into
dec
mov
test
es
daa
xor
jnp
adc
cmp
mov
test
mov
push
cmp
fildl
test
and
scas
or
sbb
inc
insb
addl
mov
cmp
or
pop
xor
jo
push
xlat
out
mov
mov
push
pop
pop
mov
stc
mov
mov
stos
testl
icebp
mov
repz
aas
outsl
push
dec
or
lods
jnp
gs
notb
and
sbb
sub
lret
and
cmpsl
pushf
mov
cli
andl
add
jl
in
jg
push
dec
inc
mov
and
jno
xchg
imul
adcl
inc
test
mov
iret
pusha
in
jno
pop
pop
pushf
and
jae
cmp
inc
jl
dec
test
mov
jo
jbe
jp
xor
lahf
into
cmp
cmpsl
sti
mov
dec
in
xchg
xrelease
push
push
lret
cwtl
lods
mov
insl
icebp
jno
xchg
xchg
xchg
sbb
xchg
xlat
jmp
sub
imul
sbb
lods
test
loop
pusha
adc
lret
jle
dec
and
fcoms
jbe
mov
fucomi
div
xlat
addr16
int
mov
scas
pop
fwait
mov
clc
push
clc
out
dec
mov
mov
xchg
scas
and
movsl
in
cld
fcmovnbe
nop
inc
clc
aam
mov
sbb
dec
pop
js
aam
and
arpl
call
std
in
ja
cmpl
inc
imul
and
and
icebp
outsb
mov
aam
sub
stos
insl
pop
pop
test
in
pushl
lock
push
cmpsb
cmp
jp
scas
push
jo
adc
cmpl
iret
or
das
idiv
jecxz
adc
sub
push
xchg
fisttpl
mov
movsl
out
pop
xor
xlat
xlat
push
cmpsb
mov
sbb
gs
add
inc
and
out
addl
adc
xor
add
mov
and
mov
pop
cs
sbb
or
mov
out
xor
sub
jg
ds
cmp
push
leave
shrb
mov
int
xchg
xchg
ds
fisubs
repnz
shrl
pop
enter
xchg
aad
jg
test
sub
lods
movsl
sbb
cmp
outsl
pop
popf
pop
cltd
lds
push
sub
xchg
jge
dec
imul
mov
movsb
rol
ficomps
xchg
fstl
or
mov
inc
adc
sub
pushl
dec
pop
pop
stc
jbe
add
test
out
out
scas
repnz
insb
jnp
pusha
lods
aam
test
imul
stos
xchg
xor
push
fwait
lret
test
add
js
icebp
ret
jno
cli
ret
test
js
sub
cmpsb
or
jp
scas
icebp
icebp
and
aaa
mov
loope
mov
xor
push
adc
in
xor
arpl
mov
es
mov
push
sub
pop
out
out
inc
out
or
jmp
sbb
xor
xchg
loopne
fcoml
test
sbb
lcall
fmull
int3
cltd
dec
test
call
and
jg
pop
in
mov
andb
jb
pop
cld
call
rorl
and
inc
xor
in
idiv
adc
mov
sbb
fsts
sub
lahf
xchg
ss
dec
jecxz
int
adc
lret
pop
sub
gs
movsb
adc
ja
jl
les
mov
sbb
pop
dec
cmp
adc
dec
pop
in
cmp
bound
mov
popf
sub
leave
xchg
fadd
mov
lcall
inc
in
push
cmp
sub
inc
sahf
and
push
or
cs
aas
mov
pop
pop
out
in
dec
xchg
aaa
shll
mov
mov
sub
ret
stc
push
lods
imul
in
adc
add
out
push
andl
mov
cs
ljmp
mov
jge
mov
stos
push
int
adc
sbb
es
mov
mov
das
test
dec
mov
sub
lcall
lea
cs
jae
inc
push
sbb
orb
icebp
cmp
orl
pop
aad
fs
mov
or
mov
loopne
jp
sub
aaa
jmp
add
popa
les
dec
xchg
inc
daa
xchg
xlat
pop
or
cmpsb
jns
push
pushl
imul
loope
outsb
mov
ljmp
xor
mov
fs
xchg
push
push
out
pop
hlt
mov
inc
xor
xor
fcomps
fsubrs
lret
jae
mov
fistl
xchg
mov
jmp
mov
faddl
jae
sbb
lret
jg
cmpsl
push
xchg
rcrl
adc
and
loopne
iret
imul
pop
fidivl
lret
in
js
mov
or
repz
pushf
roll
lcall
pop
jp
mov
add
fdivp
aas
dec
cld
out
mov
mov
je
lret
xchg
sub
rclb
cmp
insb
sub
mov
enter
add
mov
jns
call
mov
iret
sub
mov
push
mov
fmull
cmp
lret
outsl
cli
lahf
adc
mov
pop
pop
and
mov
in
lahf
es
jo
ret
inc
loop
mov
push
jmp
push
in
push
or
sti
call
fwait
movsb
dec
fiadds
pop
mov
pop
cmc
leave
popa
andb
cli
movsb
fdivl
or
idiv
xchg
pop
pop
mov
sahf
aam
out
std
or
test
stos
mov
outsl
mov
imul
mov
movsl
or
imul
lods
rolb
adc
or
scas
in
dec
shl
mov
std
cld
cmpb
sub
jbe
push
inc
roll
push
cld
jmp
xchg
or
enter
cmp
mov
mov
cmp
adc
outsb
ljmp
push
test
test
and
lods
dec
fldcw
fcomip
pusha
pop
or
push
pusha
xor
hlt
fsubl
imul
xchg
and
add
pop
scas
mov
cmp
ret
pop
xor
ljmp
cmp
rclb
inc
or
std
not
sub
aas
out
inc
cmp
inc
in
ficoml
push
js
ret
xchg
dec
test
je
sahf
xor
mov
dec
xchg
data16
ss
lock
xor
pop
leave
xchg
or
mov
xor
popa
mov
dec
mov
insl
pop
mov
adc
and
ljmp
dec
adc
lret
loop
sbb
push
shlb
mov
fsub
popa
cmp
xchg
in
std
jmp
mov
adc
inc
or
fwait
aas
fisubrs
sbb
es
and
dec
cmp
xchg
jne
addr16
pop
cmp
push
adc
fnstenv
ret
test
dec
sbb
leave
cmp
into
adc
inc
inc
stc
in
jnp
int3
sbb
xchg
and
sbb
pop
lret
mov
or
aas
lret
lret
mov
gs
aas
dec
rol
aam
bound
int3
push
rorb
jae
and
xchg
iret
or
mov
sbb
ss
pusha
lahf
adc
rorl
fdivrp
out
mov
adc
dec
add
lret
push
in
int
and
shl
cmp
mov
call
ret
pop
into
mov
or
jb
dec
xchg
sbb
mov
sahf
sub
in
jne
shll
jmp
xor
adc
test
sbb
xor
xlat
loop
or
cld
mov
in
xchg
dec
iret
adc
loopne
sbb
std
inc
mov
pushf
pop
out
stc
int3
or
aas
xchg
pop
ss
dec
insb
call
xor
mov
pop
insl
mov
sti
arpl
jp
aaa
jne
aam
dec
data16
loope
pop
xor
mov
inc
clc
out
icebp
mov
fstpl
rcr
scas
mov
pop
rep
setg
jge
add
cwtl
test
in
test
cmp
ljmp
mov
testb
pop
xor
xchg
fiaddl
test
sub
decl
mov
mov
test
and
popa
sti
out
clc
js
popl
push
aam
insb
or
lods
sbb
push
cmpsb
ret
lahf
xchg
je
xor
pop
ja
fs
sar
stos
mov
hlt
repz
les
outsl
adc
cwtl
add
mov
sbb
push
inc
cltd
and
movsb
pop
sub
jmp
ret
int3
mov
push
ljmp
std
sbb
ss
push
rorb
scas
aam
push
mov
leave
rcll
cmpsb
pop
sbb
nop
add
fmuls
pop
fnsave
cli
add
je
movsb
add
test
test
repz
enter
jmp
aad
mov
mov
popa
in
push
sarb
lahf
hlt
and
sub
arpl
lahf
xor
mov
dec
sub
inc
push
pop
out
sub
sbbl
in
bound
adc
mov
sub
push
xor
hlt
xor
das
jecxz
jle
enter
fnstenv
hlt
ficomps
pop
push
jmp
jle
and
sti
mov
inc
movsb
stos
mov
pop
inc
subl
push
xchg
jecxz
fimull
sbb
addr16
sub
out
outsl
dec
xchg
lcall
incb
cmp
clc
bound
and
outsl
lds
jecxz
push
push
fidivrl
pop
clc
mov
jno
cmc
pop
dec
gs
and
mov
out
xchg
sbb
shlb
cltd
hlt
enter
bnd
scas
inc
aaa
fstpt
mov
or
jb
xlat
jge
xor
rorb
pop
fnstsw
mov
mov
repnz
int
add
js
xchg
mov
lea
push
and
xchg
dec
fimuls
mov
outsb
mov
push
or
sbb
mov
inc
call
jbe
xchg
pop
data16
jge
pusha
cmpsb
inc
movsl
or
cmp
sbb
lea
int
pop
mov
jge
and
xchg
das
inc
inc
xor
adc
ljmp
jg
mov
xchg
sbbb
out
bsr
in
inc
and
aam
jmp
xor
stos
xor
adc
cmovp
push
sbb
clc
mov
dec
ret
jns
pop
fsubrs
js
push
out
add
mov
fsubr
rolb
pop
or
out
fldcw
lods
add
call
repnz
aaa
ret
xor
std
iret
push
or
pushf
pop
cli
bound
popf
subl
jno
ret
shlb
inc
cmp
ljmp
xchg
cld
and
dec
mov
insb
or
fstpt
lret
cwtl
push
lahf
adc
and
sbb
mov
pop
mov
sbb
mov
scas
scas
inc
icebp
cmp
push
xor
mov
pop
addr16
inc
cwtl
inc
iret
pop
fwait
js
add
push
jb
cmp
test
jle
roll
pop
loop
fistps
sahf
movb
mov
ret
shr
push
jne
stc
xchg
jge
push
pop
pop
leave
shl
cmpsl
ljmp
aam
ljmp
xchg
stos
adc
icebp
jmp
insb
stos
divl
mov
xchg
mov
jno
cmc
push
js
inc
jecxz
xor
push
push
sub
aad
out
cmpsb
es
sub
clc
iret
cmp
call
sub
fwait
xor
push
mov
negb
dec
or
loop
jecxz
or
or
fs
adc
insl
sub
lea
std
pop
push
and
mov
out
xchg
loopne
mov
dec
xlat
push
and
fs
jnp
add
and
popa
cwtl
adc
fistl
push
mov
sub
mov
imulb
adc
pop
lahf
pop
or
add
stos
in
cmp
and
lahf
dec
out
imul
test
inc
xor
pop
fmul
push
cmpsb
dec
call
insl
shl
stos
or
dec
pusha
mov
mov
mov
pop
fsubr
adc
idivb
pop
aad
jnp
fstpt
scas
add
xchg
jle
sub
or
in
scas
or
mov
fists
clc
js
cmp
xchg
xchg
icebp
insb
xchg
test
rcrb
sub
and
add
out
repz
jae
xorl
arpl
lds
sbb
push
cmp
inc
cmovs
cwtl
or
imul
or
mov
imul
outsl
mov
les
jnp
mov
add
push
push
adc
mov
xchg
andl
push
pop
js
pop
xor
and
xor
xchg
loop
pop
ja
dec
jp
insb
enter
outsb
fisubl
push
xor
aaa
arpl
jmp
ja
into
jno
aaa
adc
inc
std
sub
enter
adc
pusha
sub
fisubrl
ss
test
push
imul
nop
stc
mov
and
jne
pop
int3
push
jbe
les
ds
test
add
lods
test
mov
add
dec
mov
dec
test
xor
std
mov
lock
call
in
mov
mov
dec
jp
pop
std
jg
inc
dec
iret
test
mov
gs
jae
lret
xlat
ds
inc
notl
movsb
je
in
and
jl
add
dec
insl
push
cmp
pop
and
push
jbe
jge
mov
mov
mov
dec
dec
aas
mov
fwait
pop
je
mov
jb
stos
push
mov
nop
out
or
scas
xlat
lret
movsb
add
in
lds
test
push
fadd
mov
push
popa
das
sahf
enter
adc
dec
loopne
sbb
push
sti
jg
popa
out
das
jl
sbb
fistps
inc
lock
cmc
xor
scas
add
or
aad
roll
std
outsb
je
es
stc
jle
pop
and
sub
cmp
adc
push
mov
push
dec
pop
ret
add
mov
movsb
sbb
inc
aad
and
cmp
call
jno
loopne
mov
inc
in
outsb
out
jecxz
sar
insb
repz
aad
lds
mov
add
stos
or
scas
dec
dec
es
lea
cmp
mov
out
nop
les
aas
inc
sub
inc
xor
dec
rcl
mov
xchg
cmp
repz
dec
xorl
xchg
mov
ja
imul
push
push
push
lcall
daa
in
scas
add
ja
iret
ljmp
mov
and
pusha
lcall
std
loope
clc
lcall
sbb
sub
das
xchg
in
fwait
xor
js
out
fdivl
mov
fisttpll
pop
les
ret
les
in
in
stos
lock
xor
icebp
push
inc
cs
xchg
inc
sarl
jb
cmp
aaa
inc
add
jp
dec
ljmp
sahf
jns
or
jbe
push
mov
test
popa
leave
jnp
adc
std
loope
xchg
or
lahf
mov
in
mov
out
leave
fst
push
jbe
js
jmp
xchg
inc
push
xchg
test
fsubs
int3
dec
inc
in
data16
sub
pop
cltd
cmp
xchg
movsb
fldcw
ss
push
inc
sub
imul
jo
push
jne
or
out
bound
cmp
mov
push
cmp
test
sti
push
popf
mov
sub
sub
test
aam
imul
inc
sub
mov
outsb
adc
aam
mull
xor
pop
sbbl
cmp
imul
xchg
push
mov
test
mov
aas
daa
int3
sahf
mov
mov
sub
cli
lods
inc
loopne
shlb
adc
xor
push
push
dec
cld
in
add
xor
enter
pop
std
jl
sbb
mov
mov
iret
fst
cmp
push
repz
or
jb
dec
out
dec
lods
add
mov
clc
loope
inc
ret
aam
pusha
clc
movsl
push
daa
test
mov
jge
lods
scas
pop
ja
xchg
inc
xchg
adc
dec
shrb
sahf
imul
dec
lock
sbb
xchg
inc
jmp
mov
fst
jb
lcall
jae
addl
push
ret
loop
jg,pn
cmp
imul
adc
cli
stos
in
filds
mov
dec
subb
cmc
mov
aas
jle
pop
lds
xchg
xchg
scas
push
lea
dec
test
pusha
repnz
cmpsl
pop
push
into
cltd
sub
cs
icebp
movsl
xor
popa
jle
ror
fimuls
sbb
adc
fsubrl
adc
push
out
cs
push
fstps
out
popa
push
popf
addr16
jo
jne
and
xchg
sbbl
pop
ficoml
int3
cmpsb
loop
adc
pop
add
enter
jae
bound
mov
test
sarl
cmpsb
xchg
inc
stos
mov
outsb
adc
inc
cmp
cmc
cld
or
lds
pop
fisttpl
das
je
adc
add
mov
sub
jo
inc
dec
jge
testl
sub
push
cmpl
test
mov
xchg
daa
mov
mov
adc
aam
or
inc
jl
add
div
jne
push
mov
insl
cmpsb
jno
pusha
fstp
insb
sub
fs
xor
xor
cmp
jecxz
fistpll
push
push
adc
lahf
push
cmp
push
ja
ds
xor
ret
push
sbb
sbb
lret
push
pop
jne
push
addr16
out
jne
sbb
divb
xlat
xor
fadd
adcb
pop
jnp
cmp
mov
sar
or
in
fsubrl
lret
les
daa
adc
shrb
pop
push
push
cmp
jge
bound
out
das
lahf
lds
repz
xchg
shlb
mov
cmpsb
popf
clc
sbb
movsl
sti
and
dec
cmpsb
stos
or
and
in
mov
xchg
mov
cltd
aaa
and
mov
ret
not
adc
or
sarb
push
xor
mov
and
aaa
xchg
push
sbb
cmpsb
inc
fiadds
bnd
xchg
das
pop
popf
mov
mulb
mov
arpl
out
sbb
gs
mov
dec
mull
jp
and
jmp
sbb
xchg
mov
adc
int
addl
rcll
sub
xor
inc
xchg
sub
cltd
dec
daa
pop
xchg
fstpt
repnz
pop
loopne
andl
dec
pop
cltd
mov
lret
arpl
cs
dec
pop
test
loopne
dec
loope
test
sub
std
inc
sbb
adc
out
mov
lock
insb
add
dec
imul
pop
sbbl
ret
sub
data16
or
sub
shl
add
or
das
jbe
xchg
rol
lret
and
test
in
fcomps
and
scas
add
xchg
movsl
test
adc
jno
jne
xchg
jae
add
xor
cli
push
vpaddusw
int
dec
iret
mov
call
jo
xor
aad
dec
stos
mov
les
xchg
and
pop
sub
cmp
pop
push
dec
inc
jmp
adc
inc
aam
mul
mov
out
pop
push
jmp
xchg
sub
adc
pop
cld
les
add
mov
stos
cs
fmul
shrb
sub
jl
ljmp
mov
pop
mov
sarl
jecxz
jle
mov
sub
adc
add
loop
test
loop
pop
cld
push
dec
jmp
lock
loopne
or
cmpb
repnz
push
fdivs
cmp
in
in
aad
mov
out
in
int
mov
push
test
lock
push
iret
dec
jne
xlat
pop
fnstsw
out
push
and
int3
sub
xor
or
and
jne
pop
adc
jle
pop
popa
inc
daa
and
nop
mov
mov
into
xlat
pop
pop
sub
mov
dec
roll
fs
push
xor
or
dec
mov
inc
aaa
or
stos
ffree
sbb
mov
pop
sub
gs
or
add
or
adc
xor
inc
imul
out
dec
fldcw
shlb
push
xchg
and
nop
mov
aaa
ljmp
and
mov
sbb
ret
jmp
add
and
inc
lret
rcl
mov
xor
fidivrs
test
pop
mov
aam
jbe
and
jmp
xchg
dec
in
int
xor
xchg
shll
mov
mov
hlt
int3
cmp
in
or
push
mul
jbe
in
in
or
daa
and
add
adc
cmp
sbb
scas
scas
jg
push
dec
pop
std
cmpsb
jp
mov
int3
pushf
push
hlt
sbb
fcompl
mov
xor
les
fstp
xor
test
sar
sbb
inc
and
rcrb
aam
idivl
and
fstl
std
aad
xor
sbb
sub
movsl
lods
sbb
inc
adc
inc
push
push
xchg
sbb
push
int3
mov
lcall
inc
loope
sub
adc
repz
mov
push
lds
ja
mov
arpl
dec
xor
sti
data16
sub
inc
mov
ret
mov
orb
fwait
inc
mov
mov
inc
and
outsb
fs
cmpsl
popf
sbb
shl
fadd
pop
out
add
sbb
inc
out
mov
outsl
into
fsubrs
push
push
mov
adc
inc
push
mov
sub
test
or
pushf
fdivrl
flds
xchg
jmp
daa
sahf
nopl
jbe
movsb
lret
fists
sti
push
out
cmc
or
push
and
jmp
ret
test
mov
jmp
int
cmp
xor
mov
icebp
mov
push
fldt
leave
iret
lock
xchg
xorl
xchg
or
mov
lods
inc
icebp
xchg
std
fisttpll
mov
inc
jle
in
ja
adc
push
xor
inc
out
jl
sub
cmpsb
rcrb
arpl
dec
add
call
mov
xchg
or
cmp
jb
dec
call
fmul
movlps
hlt
xchg
cmpsl
push
js
aaa
inc
lret
mov
je
fcomps
xor
dec
testl
idivl
adc
es
fbld
sarb
lods
sbb
inc
push
out
push
sub
mov
push
and
std
xchg
push
pop
xchg
push
jo
mov
sahf
dec
mov
sbb
fs
pop
jno
jb
mov
ljmp
sbb
cld
cmc
int
cmp
fsubrs
enter
icebp
mov
adc
movsl
or
mov
mov
push
fucom
xor
in
mov
cmpsb
daa
mov
testl
xlat
pop
rcll
cmp
and
es
pop
addr16
je
iret
and
es
das
sub
icebp
lods
push
push
repnz
push
inc
pop
xor
in
imul
movsb
dec
movsb
loop
cld
fcoms
pushf
pop
push
pop
in
decl
dec
jge
dec
sub
mov
add
and
push
xlat
cmp
push
iret
shrb
iret
test
lods
leave
cld
or
adc
insb
cmp
imul
push
out
jns
sub
inc
sti
inc
sbb
ret
mov
push
mov
pop
adc
fnstcw
shll
jnp
adc
mov
jbe
pop
or
pop
jmp
repnz
sbb
aaa
xlat
insb
cltd
in
and
fimuls
xchg
hlt
leave
xchg
push
aad
sahf
adc
push
jp
push
popf
leave
dec
mov
scas
pusha
insl
imul
hlt
dec
mov
test
jnp
imull
nop
sahf
pop
sbb
or
or
iret
push
jno
or
cmpl
jnp
push
inc
cli
in
fcompl
or
jecxz
jmp
outsl
sub
mov
lea
call
xchg
xchg
in
dec
movsl
out
cmp
add
rclb
cmc
xchg
fstpt
inc
test
jl
mov
xor
das
fistpl
and
jnp
xchg
push
sbb
xor
xchg
es
mov
repnz
or
dec
jne
push
lcall
sbb
xchg
lret
ja
or
push
pop
hlt
pop
sub
xor
add
xor
mov
frstor
mov
pushf
push
and
inc
jns
add
xchg
je
cmpsl
gs
gs
mov
and
aas
in
fs
xlat
dec
add
mov
cltd
addr16
mov
jb
dec
cmp
call
push
test
out
jno
mov
and
notl
xchg
jp
aaa
cmp
in
jge
inc
mov
sbb
mov
roll
lock
adcl
fcmovne
mov
jnp
clc
sub
aas
rcrb
xchg
in
cmpsl
rorl
in
adcl
roll
fldcw
insb
hlt
cmp
iret
shlb
out
fxch
sbb
mov
xor
xchg
mov
inc
int3
jmpw
lods
imul
fcmovnb
mov
imul
jl
xor
out
inc
lret
scas
add
dec
pop
sahf
or
jle
xchg
push
fwait
shrb
sub
pop
shlb
push
inc
pusha
in
inc
fucomp
inc
mov
dec
mov
rcll
mov
jg
mov
mov
inc
sub
push
xchg
pop
adc
movsl
push
movsl
sahf
lret
dec
inc
adc
xchg
push
jl
hlt
sbb
fcomp
push
fcomip
or
add
xchg
imul
xor
or
pop
xchg
dec
lods
cmp
loopne
rcrb
lods
int3
fcompl
sbb
outsb
dec
push
pop
loope
rcrb
lds
mov
andl
xor
imul
stc
stc
mov
jno
sbb
pop
imul
pop
sbb
loop
movsl
jmp
fsubrp
in
fndisi(8087
xor
cmc
mov
stos
pop
dec
in
cmp
cmc
dec
push
aas
mov
out
dec
lods
inc
loop
int3
fcomps
mov
inc
jne
shlb
or
mov
dec
ficompl
pop
enter
lcall
jle
xor
fstpt
lock
adc
int
mov
sahf
fcomps
jb
iret
loop
popf
lahf
xchg
ret
or
addr16
sbb
in
test
rcl
mov
push
xchg
mov
ficoml
nop
lcall
repz
sub
adc
jmp
xor
shl
xor
jns
xor
lea
or
pusha
fisubrs
js
xchg
outsb
loope
pop
rcrl
sub
mov
mov
push
aas
push
ljmp
xchg
cmpsb
jecxz
std
dec
fldenv
jmp
lds
lock
cmpsl
or
test
cmp
pop
out
stos
jecxz
adc
movsl
jle
divl
scas
jbe
pop
aad
cmp
add
lret
pop
cli
inc
xor
mov
ss
adc
jno
add
cs
dec
popa
dec
mov
xor
iret
jg
data16
bound
dec
and
gs
in
sbb
clc
mov
js
cwtl
in
cmp
test
mov
ret
push
mov
mov
iret
jecxz
pop
out
call
les
imul
in
sti
repnz
jne
and
mov
cld
dec
cmp
adc
mov
ret
and
notb
sbbb
xchg
nop
dec
mov
lcall
ja
ficompl
lret
mov
push
mov
lret
fsts
mov
sbb
xor
or
ss
cmp
outsb
cwtl
mov
outsl
add
push
ja
inc
movsb
mov
bound
jge
js
imul
dec
lock
jbe
and
scas
jno
pop
mov
cmp
lret
or
xchg
fldcw
pop
xchg
sbb
push
inc
call
dec
out
repnz
inc
mov
cmp
inc
stos
mov
repnz
shrl
jne
jl
dec
mov
cld
fnsave
lcall
add
dec
sbb
or
in
mov
testb
icebp
cmp
stos
cmp
cli
adc
or
jmp
popa
ret
and
cld
push
popf
lret
lods
dec
and
mov
inc
xchg
xor
bound
pop
cmpsb
enter
test
mov
stc
mov
mov
mov
in
xchg
add
sbb
loopne
movsl
sbb
jl
dec
sub
fadds
pop
sbb
mov
push
jecxz
and
xorb
fwait
gs
lock
outsl
out
icebp
push
sub
test
lret
mov
jge
add
push
pop
sbb
mov
jmp
movb
insb
mov
and
lock
mov
loopne
xor
test
adc
ficoml
call
outsl
add
movsb
mov
fildll
mov
sahf
aaa
mov
push
popa
inc
mov
pop
aam
mov
lret
scas
mov
mov
aam
xor
pop
xor
xor
pop
add
dec
imul
call
sub
stos
imul
sbb
loop
jns
dec
jle
ficoml
push
pop
insb
mov
jl
xor
stc
nop
shll
ja
xchg
jne
xchg
push
adcb
adc
push
scas
mov
int3
inc
testb
cmovp
pop
inc
sub
addr16
pop
add
cmp
inc
or
mov
ljmp
push
lret
and
lock
test
mull
mov
sbb
pop
mov
xor
and
addl
lret
fs
hlt
je
loope
jnp
hlt
fdivl
and
stos
test
addr16
fdiv
in
cmp
sub
in
popf
cmpsb
stos
add
loop
adc
sahf
stos
repnz
mov
jne
sar
imul
fnstcw
lds
cli
push
mov
mov
hlt
stc
lods
out
jecxz,pn
test
jle
gs
lods
orb
mov
imul
shl
pop
inc
xchg
pop
cmp
and
jns
mov
nop
ret
icebp
mul
jo
mov
jno
pop
sarl
push
jb
fst
jecxz
mov
or
orl
lds
xchg
or
cs
dec
cwtl
jo
push
pusha
insl
mov
jne
jp
mov
dec
jne
stos
mov
or
std
pusha
cmp
imul
xchg
xchg
jecxz
testl
pop
mov
xchg
test
or
pop
mov
test
test
ljmp
xchg
enter
and
sbb
repz
and
rorb
les
jne
cmp
mov
clc
test
shll
xor
xor
outsl
es
add
mov
pop
out
pop
mov
insb
mov
sbb
pop
mov
cmc
jns
sbbb
or
pop
or
pusha
and
andl
test
ss
xor
imulb
aaa
mov
mov
sahf
insl
mov
xor
sbb
int3
xchg
shl
or
imul
xorb
nop
pop
outsb
mov
adc
and
push
lods
push
push
sbb
cmp
int
stos
cld
mov
popf
mov
scas
iret
mov
sub
or
iret
sbbb
mov
bound
loope
mov
sarl
ret
cmp
push
adcl
jne
js
pop
pop
outsl
xor
js
sbb
and
leave
inc
push
pop
pop
xor
sub
test
sbb
repz
cwtl
out
fildll
add
popl
cmp
mov
hlt
sti
pop
inc
xlat
push
mov
pushf
orb
sbb
mov
push
xchg
push
mov
roll
and
dec
xchg
jbe
push
aad
pop
xchg
es
and
lods
hlt
sbbl
into
jl
cmpsb
mov
jns
pop
in
outsb
or
fidivs
sbb
xorb
push
push
das
sub
mov
and
pusha
cmp
add
into
push
pusha
xchg
es
mov
loop
cmpb
dec
mov
sbb
mov
inc
fimuls
mov
jns
inc
push
mov
sub
loope
sbb
jbe
fucomi
push
add
jle
add
jmp
sahf
adc
dec
xor
fimuls
mov
ss
push
pop
push
push
inc
js
or
xchg
daa
jns
mov
pop
dec
pop
mov
jne
test
mov
fidivl
out
inc
inc
cmpsl
mov
lds
icebp
cmp
out
aad
pop
mov
xor
rcr
jl
aam
mov
push
pop
jmp
repz
fnstcw
xchg
lods
jmp
call
outsl
lods
add
arpl
in
add
push
rclb
push
sbb
xchg
xchg
mov
or
jb
daa
dec
or
mov
sahf
movsb
mov
into
out
xlat
pop
sub
jne
movsb
push
jmp
lea
pop
imull
das
int3
inc
je
jmp
clc
in
cmp
mov
pop
lds
ficomps
orl
sbb
xor
cmp
repnz
das
inc
and
pop
insl
mov
or
bound
repz
mov
cmpb
mov
int3
shll
data16
push
ret
sbb
test
outsb
xlat
push
imul
pop
mov
lock
xor
pop
sbb
sub
repz
add
lcall
dec
xchg
out
fnsave
and
ds
sbb
dec
ss
mov
dec
fnsave
push
and
sub
movsb
aam
cmp
mov
pop
pop
and
faddl
xlat
inc
xor
adc
mov
and
scas
loop
fbstp
dec
push
jnp
push
imul
and
out
push
in
das
lods
inc
dec
aas
mov
fwait
sub
daa
lahf
cmp
fbstp
hlt
popa
jns
jle
dec
mov
pop
sbb
cmpsl
ficoms
sbb
cmpsb
pushf
aaa
inc
pop
push
shll
adc
inc
jge
jb
add
testb
scas
sbb
lods
mov
and
out
add
jp
add
inc
mov
div
xor
push
pop
insb
mov
cld
inc
jle
out
pop
mov
xor
xor
enter
xchg
jecxz
mov
inc
test
lds
aaa
mov
cmp
shrb
cltd
mov
inc
sbb
cs
enter
enter
cwtl
aam
pop
sbb
lea
repnz
cmp
in
paddw
in
divl
jmp
enter
mov
jmp
lahf
js
daa
popf
loope
lea
push
push
enter
sub
lock
ljmp
inc
adc
and
stos
mov
arpl
inc
cmp
leave
mov
or
rol
mov
es
scas
pop
cmp
jecxz
rcll
ja
cmp
lock
test
mov
sub
sahf
adcb
int
cmpsb
rcr
jo
scas
and
dec
pop
imul
loop
jecxz
jg
add
pushf
jno
call
or
mov
or
dec
xor
out
dec
test
in
xchg
outsb
mov
mov
push
cmp
sarb
sbb
and
aam
cmpl
inc
mov
xchg
push
mov
push
lods
mov
movsb
mov
lahf
imul
rol
sub
pop
add
and
xor
mov
lea
push
push
or
stc
mov
pop
sub
cmp
cmpps
mov
into
pop
pop
fnstsw
out
leave
outsl
dec
pushl
cmp
mov
pop
loopne
pop
cmp
into
xchg
mov
fcomps
nop
push
lods
imul
dec
fadds
movsb
test
out
filds
push
lds
inc
push
add
sbb
inc
ret
sbb
lock
xor
adc
sti
movsl
sub
repz
sahf
pusha
mov
rcll
or
es
in
xchg
imul
sbb
les
addr16
outsl
sti
outsb
jmp
aas
mull
pop
jo
push
scas
jns
dec
adc
lahf
mov
in
aad
outsb
mov
sbb
push
cli
in
repz
push
repz
jmp
ficoms
mov
ja
adc
mov
ss
dec
rclb
incb
jge
jge
loope
pusha
mov
xchg
xchg
fstps
adc
pop
es
mov
daa
mov
sub
jnp
dec
or
popa
xchg
es
xchg
push
xchg
ljmp
subb
in
mov
mov
fisubrs
xchg
lret
rcr
lcall
sbbb
sbb
stos
push
push
mov
adc
dec
jbe
xor
sub
and
cltd
fmull
xchg
out
dec
xor
scas
decb
bound
xchg
aas
pop
mov
xchg
gs
mov
xchg
cld
div
outsl
out
and
testb
mov
push
int3
jo
jp
popf
and
xor
and
cltd
xchg
mov
xchg
mov
ja
lret
sbb
pop
xchg
pop
push
in
arpl
roll
cmp
push
jb,pt
lock
push
mov
sbb
roll
out
dec
in
fistpl
data16
xchg
movb
sub
push
enter
jb
icebp
in
or
pop
pop
xchg
fwait
call
jg
arpl
xchg
out
test
xchg
or
gs
xchg
movsb
into
pop
or
mov
lcall
jg
jb
sub
scas
out
fwait
in
ja
lds
jns
lret
ja
push
xor
iret
adc
ljmp
fnsave
inc
mov
insl
mov
stos
inc
jno
jae
inc
push
aas
iret
push
ja
fsubrs
mov
xlat
mov
xor
sbb
aad
pusha
rcll
inc
or
mov
pop
add
stc
pushl
in
dec
leave
loope
or
scas
jb
lahf
fnstenv
fsts
mov
xchg
adc
xor
sbb
jg
mov
jmp
hlt
jo
sub
inc
lds
xor
xchg
pusha
adc
mov
sbb
jae
dec
mov
fsubl
pushf
dec
sbb
testl
jb
mov
imul
adc
jg
js
aad
shll
movsl
rorl
mov
aad
or
ss
in
mov
and
xchg
jge
ds
mov
mov
jge
mov
cltd
sbb
cld
xchg
xchg
in
mov
sbb
and
sbb
arpl
pop
fsubr
mov
movsb
and
dec
stos
sub
xchg
sub
loopne
outsb
testl
push
outsl
adc
pushf
movsl
mov
ja
inc
jl
mov
mov
fisubs
xor
pusha
fsubrp
insb
aam
or
testb
gs
mov
mov
pop
cmpsb
ret
repnz
shl
jnp
jnp
jp
jbe
dec
add
pop
shll
adc
fwait
notb
mov
popa
mulb
xchg
adc
mov
and
sbb
cmpsl
xchg
mov
xchg
sub
iret
stc
sbb
xor
out
daa
pop
inc
loop
das
mov
pop
sub
pop
test
and
mov
shlw
adc
mov
mov
mov
pop
in
sbb
jno
aad
dec
push
pushf
jge
mov
cmp
push
ret
sub
dec
inc
sub
cltd
loopne
xchg
enter
push
test
dec
or
movsl
xchg
icebp
rorb
pop
sub
mov
push
adc
loope
shlb
test
pop
sbb
lret
or
jno
dec
vpmacsdql
pop
or
and
adc
push
jle
dec
test
sbb
out
xchg
sub
or
fnsave
pop
pop
rcr
cli
mov
lcall
mov
data16
or
lock
clc
in
xlat
or
jb
mull
jae
call
jne
fisubrs
mov
in
xchg
xchg
mov
mov
add
pop
sbb
stos
cmpsl
pop
mov
or
xlat
into
mov
lods
rcrb
add
rclb
jle
in
lea
xchg
add
mov
insl
sbb
stos
repz
movsb
les
bswap
dec
fwait
adc
pop
lock
sbb
sub
cmp
jb
in
and
btc
jge
xor
xchg
xor
insl
fstl
cpuid
shll
popf
lret
mov
sub
out
mov
xchg
pop
cltd
testl
xor
movsb
xor
into
fs
and
jo
xchg
repz
fistps
sub
and
loop
xchg
push
insl
mov
stc
adc
jo
and
je
out
in
pushf
inc
out
pop
push
pushf
pop
or
add
xlat
inc
adc
sub
cmp
sub
icebp
sbb
dec
test
cltd
jno
pop
fwait
sub
and
sub
push
pop
stos
mov
aad
sbb
cmpsl
sub
stos
out
cmp
mov
and
or
into
cmp
aas
scas
or
loope
sub
lock
addr16
andl
enter
jb
call
lds
inc
push
je
test
sbb
xchg
cmp
xor
xlat
imul
repz
mov
mov
or
sub
andl
mov
mov
popa
mov
addr16
fcmovnb
test
jno
not
jns
mov
movsb
dec
mov
pop
insb
or
mov
stos
inc
push
popf
dec
jg
mov
xchg
imul
fsubl
jl
cs
fisttpll
pop
out
add
pusha
dec
scas
mov
outsl
jne
add
dec
and
mov
adc
add
jns
loope
in
fadd
xchg
test
sub
test
in
sub
orb
in
fstps
and
sti
lret
or
in
or
xchg
imul
in
cmp
cmp
inc
les
xor
jo
leave
pop
inc
adc
test
jle
test
xchg
mov
mov
lock
or
lock
gs
xchg
mov
jg
xchg
push
sub
stos
aad
jle
mov
in
lahf
inc
repz
push
jns
shlb
mov
popf
outsl
out
or
xchg
ljmp
lret
mov
sub
out
fs
adc
shlb
pusha
je
xlat
adc
enter
outsl
inc
loope
addr16
fbstp
cmp
jmp
outsb
cwtl
dec
popf
cld
popa
imul
pop
push
dec
add
or
sahf
xor
cmp
hlt
pop
mov
dec
sbb
dec
frstor
imul
inc
push
clc
scas
lret
imul
test
ja
xchg
incb
pop
std
push
pop
std
xlat
insb
dec
xor
enter
popa
enter
push
movl
mov
cltd
cmp
jae
jbe
arpl
mov
dec
xchg
addb
or
lods
ljmp
ds
pop
addr16
mov
jne
insb
orl
jns
ja
adc
dec
nop
add
pop
inc
mov
cmp
or
inc
ja
out
xor
in
shrb
in
inc
outsl
lea
mov
leave
lock
mov
and
cmp
gs
shrl
icebp
jb
xchg
inc
push
rcrb
popa
int
and
push
jb
inc
icebp
cmp
mov
pop
nop
sub
std
pop
add
cld
mov
xchg
outsl
push
mov
and
sub
fcmovu
push
mov
push
sbb
stos
adc
sub
sti
mov
xchg
push
mov
es
daa
mov
pop
adc
in
ret
adc
into
mov
stc
add
lock
pusha
mov
xchg
popf
jnp
mov
int3
jg
mov
mov
and
dec
das
filds
pusha
mov
movsb
xchg
hlt
jo
mov
mov
adc
xor
mov
push
push
xchg
ds
dec
dec
cmp
int3
push
jle
arpl
rcr
sbb
mov
xchg
or
cwtl
push
mul
in
adc
pusha
xchg
out
icebp
push
pusha
jp
push
push
repz
pop
aad
and
loop
arpl
jno
popa
fildll
repnz
and
in
jg
sbb
dec
mov
push
adc
imull
push
or
arpl
insb
insl
movsb
xlat
ss
je
cmpsl
rcr
jp
cwtl
popa
mov
scas
test
xlat
stc
shrb
out
repz
push
or
ret
mov
mov
jno
out
sub
xor
iret
dec
js
push
popf
sub
adc
jp
and
cmpsl
cmp
mov
mov
je
or
hlt
xor
lret
or
and
loopne
adc
adc
xlat
testl
arpl
mov
shll
rorb
jns
lds
pop
mov
xor
push
nop
dec
sub
cmp
aas
mov
jmp
shlb
rclb
fisttps
dec
add
mov
int3
test
fabs
or
loop
inc
jp
into
jo
inc
cs
adc
clc
jo
add
mov
push
shrl
pusha
sti
iret
xor
stos
pop
and
lcall
push
clc
push
test
leave
mov
xor
mov
les
pusha
xor
ret
in
jnp
stos
or
loope
dec
adc
jmp
fwait
adc
int3
outsb
fwait
insb
cld
xchg
imul
fldt
mov
outsb
out
cs
xor
inc
pop
sti
rcl
dec
fdiv
push
inc
xchg
sbb
sbb
aas
dec
into
fwait
cmp
lret
add
cltd
adc
sahf
cmp
inc
icebp
xor
adc
cli
push
sbb
stc
call
repz
and
mov
mov
icebp
xchg
out
lcall
shl
ss
dec
xor
and
mov
outsb
insb
insb
stos
sti
cmp
insb
fwait
xor
mov
sub
and
int3
mov
jg
or
insl
push
es
add
push
lds
pusha
pop
in
push
add
add
mov
fistps
mov
push
lret
inc
push
lahf
xchg
mov
and
fildll
add
movsl
cli
movsl
push
xchg
push
ds
les
repnz
and
add
pushf
fidivrs
mov
inc
pop
dec
popa
in
sub
aaa
mov
pop
lea
outsb
adc
push
test
and
pushf
sub
add
and
push
daa
xlat
data16
jno
add
mov
aam
xlat
les
mov
hlt
sub
xor
arpl
sub
jg
cmc
xor
arpl
cwtl
jp
adc
call
repz
insb
sub
sbb
mov
std
xchg
sbbl
cmc
push
iret
cmp
mov
aam
pop
xchg
mov
not
dec
and
shrb
sbb
jge
push
movsb
mov
pop
lret
lods
movsb
jg
imul
jge
movsl
cmpsb
lahf
pop
jmp
dec
sbb
jbe
jge
and
inc
pop
cmp
je
pop
arpl
pop
gs
or
repnz
daa
lret
push
add
xor
shll
gs
cmc
mov
arpl
jae
loop
mov
pop
mov
std
rcrl
ret
fsubl
fidivs
mov
or
xchg
mov
push
sub
add
imul
lds
xor
push
dec
mov
mov
and
inc
mov
xlat
add
fldl
xor
pop
imul
pop
gs
cmc
fistl
dec
pushw
leave
and
cmp
scas
inc
inc
jl
add
pop
insb
jle
xchg
xor
test
xlat
dec
out
aad
mov
sbb
mov
into
cs
xchg
add
inc
mov
and
jnp
jp
in
loop
icebp
dec
mov
mov
dec
push
xor
and
gs
push
adc
mov
lds
aam
loope
push
lods
out
popa
inc
sub
cltd
cmp
push
push
add
jne
ror
jecxz
out
call
outsl
insb
xor
aas
adcl
cwtl
mov
and
out
jge
pop
mov
dec
and
sbb
add
or
ret
jge
jge
loope
push
mov
aad
lods
xor
lahf
inc
adc
mov
aas
mov
dec
orb
xor
mov
enter
add
imul
mov
mov
mov
mov
xchg
push
outsb
imul
dec
aad
or
jmp
dec
mov
mov
adcb
ja
mov
aas
clc
sti
push
sbb
pop
adc
sbb
hlt
sbbl
rclb
mov
add
xchg
loopne
pop
inc
test
inc
mov
sub
loopne
jno
xchg
xor
mov
sarl
aad
mov
inc
movsb
repnz
sub
add
arpl
fs
push
popa
xchg
push
call
and
dec
pop
jmp
sti
sub
push
pop
and
icebp
and
sbb
cld
loope
mov
push
sub
loopne
xor
rorb
mov
xor
pop
pop
add
cmp
mov
cmp
mov
ret
ret
daa
test
sbb
jp
lds
subl
out
sbb
push
popa
stos
dec
in
xchg
lahf
inc
loopne
je
sbb
test
xchg
add
rcll
out
adc
sbb
sahf
xor
shr
sbb
outsl
aam
clc
adc
pop
mov
rorb
sub
cmpsb
xchg
mov
pop
inc
jns
testb
sbb
dec
xchg
xchg
cmp
enter
cmp
push
ss
aam
outsl
movsb
ds
lret
adcl
cmp
cmpsl
inc
xor
jae
leave
into
outsb
push
rclb
fnstsw
stos
out
inc
mov
and
pop
push
or
pushf
movsb
and
and
nop
outsb
in
mov
cmp
mov
sub
nop
sbb
sub
pop
push
sbb
aas
imul
shll
cmpsb
mov
sub
push
inc
pop
dec
test
mov
adc
fsubl
dec
sbb
dec
add
push
iret
cmp
mov
add
ficoml
push
pop
out
and
addl
pop
cltd
lock
out
cmpsb
aaa
push
sahf
call
movb
lahf
popf
mov
addr16
inc
jo
stos
stc
cwtl
test
sbb
cwtl
shll
data16
sub
fisubrs
ret
pop
xchg
pop
stos
jae
and
jle
sbb
mov
push
cmc
jae
adc
dec
lcall
outsb
mov
sub
test
popf
mov
dec
xorl
pop
mov
ljmp
stc
rcrb
mov
addb
aad
daa
loop
push
sti
sub
xchg
cmp
jb
xor
out
ret
sub
dec
cmpsl
cltd
sbb
mov
loopne
stc
cli
mov
add
and
je
bnd
jbe
sbb
mov
mov
mov
sbb
push
nop
loopne
sbb
mov
xor
or
jne
pop
push
mov
movl
ja
cs
sahf
shll
jnp
push
fwait
stos
mov
into
dec
xchg
dec
push
lock
inc
in
pop
add
shl
jae
mov
in
pop
and
xor
loop
xor
cmp
sub
xchg
push
sahf
shll
in
xlat
cmp
mov
fcomps
das
pop
or
fcmovnb
mov
je
les
call
mov
jb
aaa
sbb
add
xchg
dec
and
les
in
pop
nop
imulb
pop
call
mov
lods
dec
sbbb
pop
mov
pusha
mov
cmpsl
xor
or
adc
xlat
xlat
enter
mov
aaa
pop
out
cmp
dec
fsub
mov
rcrb
dec
outsb
cmp
fimull
xchg
pop
xchg
loope
pop
jno
vpsubd
mov
stc
add
test
out
jg
or
iret
ljmp
pop
jae
sbb
xchg
or
movsl
inc
sub
in
sub
push
pop
or
test
andl
shrl
add
pushf
insb
dec
jg
push
sbb
push
or
sahf
ret
test
sbb
lds
fimull
pop
cmpb
int3
push
imul
daa
or
rorb
cmpsb
mov
daa
mov
mov
cmp
popf
pop
jo
movsb
loope
aas
decl
lahf
jae
sub
ljmp
out
jmp
or
stc
fisttpll
test
mov
outsl
adc
sti
js
adc
jne
dec
repnz
xchg
cltd
mov
pop
stc
pop
xchg
mov
cmp
repz
or
outsl
sbb
lods
jns
cmp
cltd
dec
mov
cmp
xchg
std
push
jge
mov
or
adc
mov
jge
cmpsb
movsl
shrb
cmp
fidivl
rorl
aaa
inc
mov
testl
inc
push
mov
cmp
std
test
xchg
cmp
fsts
ror
loop
pop
jle
mov
sub
divb
aaa
pop
dec
mov
and
pop
jno
add
jmp
inc
int
ss
fcmovb
std
mov
lock
dec
pop
and
aam
add
in
mov
repz
stos
cli
jnp
cs
inc
push
test
pop
mov
add
jg
mov
rorl
or
cmp
or
mov
inc
add
out
lea
shll
cltd
mov
aam
nop
fwait
popa
push
mov
xor
in
mov
sub
cmc
or
jno
add
lods
fdivr
movsl
mov
add
mov
cmpsb
call
fstl
test
or
push
lods
or
jno
mulb
rorl
sbb
inc
in
stos
iret
data16
push
mov
bound
loop
lods
daa
loope
push
dec
shll
mov
push
sbb
pop
sti
xor
addr16
and
sbb
jnp
insl
xchg
add
push
popa
pushf
cld
and
cs
fmull
sarl
and
cmp
repnz
xchg
xlat
inc
nop
xorl
loopne
xchg
sbb
xor
pop
ret
dec
push
fcmovnu
sbb
lret
lods
and
jae
mov
adc
cmp
fsubl
adcl
out
pop
test
in
mov
lods
pop
into
repnz
pop
mov
adc
scas
ja
mov
or
inc
push
lock
dec
cld
out
frstor
push
repnz
and
sub
and
or
lods
lds
push
js
int3
test
pop
inc
fidivrl
pop
aas
jge
pmulhw
jmp
pop
xchg
out
jmp
stc
inc
xor
nop
in
mov
insb
les
mov
or
ret
and
mov
ror
in
cli
dec
test
sub
loope
xor
jno
test
packssdw
and
movsb
scas
ret
cld
cmp
lds
out
ljmp
adc
cltd
adc
pop
xor
sbb
mov
je
cwtl
mov
mulb
dec
in
mov
cli
imul
aam
jo
lret
inc
in
cltd
mov
in
scas
aad
dec
bnd
sbb
pop
pop
jg
and
sahf
enter
dec
outsl
xor
movsb
inc
imul
mull
cmpsl
adc
add
mov
sbb
add
hlt
mov
mov
es
cmp
lods
sub
pop
jmp
push
xor
in
jl
sahf
pusha
das
ret
das
pop
jg
adc
or
dec
jne
data16
xchg
rorb
mov
inc
mov
pop
in
test
adc
mov
pusha
out
adc
mov
cmp
jge
xchg
sti
pop
nop
icebp
ljmp
and
pop
mov
pop
mov
push
lods
push
aam
ds
mov
jo
loope
lock
xor
adc
ret
mov
ds
cli
insb
pop
gs
mov
cwtl
push
popf
gs
arpl
mov
mov
divl
fstp
data16
test
std
mov
mov
ljmp
mov
hlt
test
adc
enter
das
sbb
loopne
fists
lahf
xor
bnd
lods
inc
jns
xchg
jl
fdivrl
jo
shll
cmp
or
stc
jbe
pop
push
gs
clc
in
jo
ret
fistpl
in
fstps
jmp
stos
mov
and
sbb
cmc
push
jge
call
push
test
push
mov
outsb
pop
or
clc
fistps
out
idivl
aad
mov
and
xor
daa
or
mov
dec
xor
jecxz
mov
push
jbe
fisubrs
and
lods
loopne
sub
dec
dec
leave
repz
fwait
adc
rorb
xchg
jne
inc
or
and
inc
rclb
jge
nop
in
pop
pop
icebp
pop
test
jp
pop
dec
add
roll
adc
rcll
loop
arpl
stc
les
cmp
and
xchg
mov
sbb
sub
repnz
inc
mov
mov
cmp
jp
mov
xchg
out
loope
dec
stc
fsubs
and
cmp
xchg
xchg
or
cmc
adc
mov
aaa
cmp
loopne
das
xchg
mov
jo
pop
mov
mov
in
daa
scas
sub
adc
rclb
in
sbb
dec
adc
mov
rcrl
mov
cmp
dec
push
cmp
movsl
mov
pop
push
in
or
jl
dec
lcall
adc
mov
pushf
inc
or
fbstp
in
mov
test
pop
jmp
push
xor
adc
mov
jmp
mov
int
mov
lods
scas
and
dec
cltd
nop
std
movsb
mov
adc
dec
push
sub
jle
push
addr16
test
xor
shl
jmp
jmp
adc
out
mov
rcrl
sub
out
sub
scas
or
jp
xchg
add
stc
mov
lods
sarb
insb
aas
xchg
lods
dec
scas
lds
dec
xor
call
xor
dec
insl
sbb
mov
sbb
mov
bnd
bound
inc
movsl
and
loope
cmpsl
xchg
test
int
mov
push
sbb
cli
bound
repnz
lock
sbb
mov
dec
push
xor
adc
mov
out
jl
mov
mov
sbb
loope
call
lods
fwait
mov
jmp
xchg
and
cmp
sub
cmpxchg
ja
mov
addr16
shlb
lods
xchg
or
jmp
mov
lods
cld
cmp
jg
xor
iret
test
mov
mov
js
sub
cmp
mov
and
int3
aaa
and
push
in
imul
adc
and
aam
jno
int
mul
xchg
stc
push
xor
cmc
movsb
xchg
sub
dec
cmp
add
and
pop
and
dec
popf
sub
sbb
dec
xor
or
inc
fdivp
jnp
sbb
mov
adc
sub
push
push
cwtl
dec
inc
jo
call
cltd
orb
pop
shll
cmp
jb
jbe
or
mov
lods
addr16
cmp
jge
hlt
pop
sub
pop
cmp
in
and
adc
das
shlb
sbb
adc
sar
mov
sub
jge
push
xchg
mov
mov
mov
jle
cmp
or
negl
ja
inc
add
out
adc
nop
fistpll
je
push
cmpsl
push
movsl
jo
xor
repz
add
jl
lret
enter
sarb
lcall
pop
lds
leave
int3
lds
clc
outsl
mov
cmp
sahf
bound
and
repnz
es
jmp
ja
lea
dec
xchg
subb
imulb
lret
loopne
movsb
jne
sarb
adc
cs
stos
mov
jp
inc
enter
fs
mov
outsb
mov
push
test
mov
imul
pop
into
dec
xor
jmp
ljmp
in
fst
insb
std
sti
push
shl
xor
ret
or
mov
outsl
cltd
sub
fisttps
mov
sbb
inc
or
jnp
imul
adc
sbb
je
lods
or
repnz
and
pop
movsw
push
scas
sbb
cmp
add
sub
cmpsl
push
ret
lret
mov
mov
xor
push
add
mov
sub
xchg
and
and
cld
fiaddl
bound
das
stc
lret
push
adc
fsubl
jmp
popa
and
sbb
lods
dec
xchg
xchg
sbb
mov
test
std
add
loop
es
xchg
lds
mov
cmp
add
xchg
sbb
js
mov
jno
add
mov
adc
adc
adc
cli
pop
movsb
popf
cwtl
aas
jnp
out
jl
js
sbb
sbb
cli
and
jne
nop
push
jo
push
jno
sbb
pushf
out
out
sub
ret
adc
mov
addr16
insl
mov
lahf
nop
mov
jns
xchg
adc
out
pop
imul
xor
test
inc
pushf
add
add
add
or
push
mov
jo
pop
sbb
cmp
xchg
push
in
aaa
daa
jle
jecxz
add
or
adc
test
iret
lcall
lods
push
sbb
enter
jns
test
inc
leave
or
cli
iret
mov
push
in
rolb
jle
pop
lea
inc
add
jne
push
inc
adc
std
test
scas
jl
adc
mov
sbb
sahf
inc
andb
pop
pop
outsb
pop
dec
gs
mov
pushf
lret
mov
mov
push
mov
adcl
arpl
mov
push
or
int
xor
jmp
mov
dec
loopne
mov
push
dec
jecxz
jl
enter
pop
lods
andb
pop
mov
icebp
ret
xchg
fidivrl
add
add
lods
sbb
idiv
cmpsl
lahf
adc
cwtl
cmpb
pop
stc
dec
push
repnz
sub
subb
dec
mov
scas
and
sbb
jge
jg
sub
das
dec
sbb
out
add
xlat
cmp
and
mov
add
out
cmpsl
cltd
pop
pop
sbb
ljmp
mov
inc
xchg
push
mov
inc
mov
outsb
pop
push
xchg
lret
push
jo
scas
dec
lods
inc
ds
arpl
sub
sub
pop
pop
cltd
pop
mov
mov
out
iret
mov
sub
inc
xchg
or
push
insl
xor
addr16
clc
inc
mulb
xchg
adc
test
es
pop
nop
scas
out
sbb
rcrl
out
dec
rcll
cmp
push
popa
cs
mov
jl
sub
das
stos
xchg
jecxz
sti
xchg
cmp
inc
add
inc
lret
cld
iret
jp
cmp
je
or
mov
pop
sub
xor
inc
repz
andl
sbbl
fldt
lea
rorl
dec
inc
test
cmpsl
jbe
call
or
jbe
nop
les
loop
ret
insb
arpl
test
inc
cmc
imul
sti
mov
shrb
stos
std
fcoms
push
shll
mov
out
fstpl
jl
outsb
mov
or
sti
sbb
loopne
xor
insl
cmp
addr16
aas
in
shl
test
fucom
jmp
add
hlt
add
jl
repnz
mov
inc
or
movsb
add
daa
pop
inc
cmovae
mov
scas
data16
mov
xor
sbb
sbb
or
lahf
out
and
mov
mov
test
bnd
sub
inc
add
repnz
mov
arpl
je
push
roll
mov
data16
xchg
sahf
xor
add
dec
les
and
movsl
jb
xor
cs
mov
data16
cltd
dec
jecxz
cmp
push
mov
sub
inc
mov
fwait
mov
add
sub
mov
imul
aad
pop
jnp
push
and
fwait
mov
fneni(8087
ljmp
mov
cmpsl
mov
out
xor
ljmp
mov
dec
lods
or
fs
movsl
push
cli
push
xchg
aas
mov
out
push
sahf
sub
or
pushf
dec
iret
in
rcrb
leave
pop
int
movsb
js
push
xchg
out
out
dec
inc
in
scas
jnp
gs
mov
lea
in
ja
cld
xor
dec
movups
das
mov
mov
or
aam
das
aas
stc
sub
or
fdivp
sub
pop
jle
cld
dec
mov
fsubs
notl
and
out
dec
inc
adc
fists
ret
cmc
sub
add
shll
scas
xchg
movsb
inc
mov
push
fdivrl
push
dec
in
sbb
xor
cmp
mov
mov
inc
pusha
dec
mov
dec
add
xchg
mov
je
out
pop
xchg
mov
or
cld
std
ljmp
xchg
cmp
out
cwtl
rolb
lahf
jge
pop
aas
clc
cld
imul
cmp
mov
imul
xlat
repz
int3
mov
nop
icebp
lea
fwait
es
test
cmp
ret
lahf
fmul
jno
dec
imul
into
jne
pop
enter
mov
xor
dec
lret
incb
adc
mov
jle
pop
fisubrs
dec
aas
pop
stos
in
call
mov
fistpll
push
cmp
outsb
inc
mov
dec
mov
stos
out
cmp
bound
push
jmp
fildll
pusha
dec
pop
scas
dec
push
add
adc
and
insl
rcr
ret
testb
insl
dec
insl
pop
shl
std
incb
push
xchg
dec
stc
and
ja
push
std
sub
xchg
shlb
aad
aas
lahf
jp,pt
push
cli
mov
repnz
in
cltd
sbb
adc
xchg
pop
imul
mov
xchg
sbb
pop
ljmp
xor
sub
pop
xor
sbb
pushf
mov
add
ret
unpckhps
adc
push
inc
lea
mov
stc
imul
jo,pn
cmpxchg
mov
je
and
or
mov
push
inc
popf
mov
push
cmpsb
xchg
push
testb
mov
jno
xor
dec
sub
xlat
xor
pop
push
and
jmp
xchg
mov
mull
sbb
mov
popl
adc
mov
jl
jl
movsb
dec
inc
jecxz
mov
in
leave
or
push
inc
or
pushf
jge
das
fldt
int3
xchg
movsb
lret
xor
daa
rcrb
rcll
or
in
out
lret
or
out
adc
repnz
xchg
inc
xchg
aam
pop
rcll
push
mov
push
mov
dec
xor
shl
sbb
mov
rcl
test
mov
or
pop
orb
xchg
mov
cmp
mov
mov
and
jmp
and
out
sub
push
xchg
aas
mov
ds
lds
shr
or
pop
cwtl
adc
lret
cmpsl
jmp
and
idivl
mov
loop
ss
mov
iret
mov
inc
or
pop
out
sar
icebp
je
jecxz
scas
rorb
loopne
adc
aas
inc
inc
push
loope
jns
jl
das
jge
leave
or
sub
inc
cmpsb
sub
xlat
fistpl
shlb
sub
xchg
xchg
mov
in
sub
lods
push
mov
pop
js
jb
dec
icebp
mov
pop
test
lock
mov
adc
andl
sbb
xchg
imul
mov
cmp
jle
cli
dec
std
sub
pop
repnz
mov
into
ss
jg
inc
daa
xchg
mov
push
pop
dec
add
cs
and
lods
inc
or
fsub
pop
mov
addb
fsubl
ret
push
adcl
push
pushf
cmc
lahf
push
shrl
idivl
jns
pushf
inc
enter
js
call
enter
xchg
pop
sahf
imul
sub
jb
sbb
test
mov
jge
in
mov
stc
in
rclb
and
and
sub
out
nop
adc
push
add
aaa
mov
xor
jg
push
push
ljmp
std
or
out
aad
fisubrl
xor
or
aad
push
shlb
outsb
sbb
lahf
mov
cmp
jmp
je
jbe
pop
adc
ret
rorb
mov
call
xchg
jae
clc
cmp
sub
push
jbe
jnp
movsb
int3
mov
insl
push
scas
lods
js
jnp
stc
xchg
repz
sub
push
stc
add
sbb
in
fidivrs
pop
or
bound
inc
xchg
int
xchg
pop
orl
nop
out
pushf
mov
push
sbb
lods
lcall
xchg
lods
jle
adc
cli
andb
cwtl
inc
pop
sbb
les
push
sub
xor
bnd
cmc
shll
xchg
mov
lret
popf
imull
sub
iret
pusha
lods
out
stc
jne
and
cmp
sub
mov
jge
xchg
sub
mov
sub
rcrl
dec
insl
loopne
cmpps
xchg
cmp
inc
dec
inc
ficoms
ds
ljmp
arpl
popf
mov
inc
mov
dec
sahf
adc
dec
outsl
xchg
and
dec
mov
icebp
mov
arpl
enter
scas
add
dec
rorl
lock
js
mov
add
fcmovnu
inc
or
adcl
das
ret
add
iret
ja
inc
sbb
mov
xchg
pusha
addr16
mov
aad
sub
es
fcompl
pop
inc
arpl
mov
add
imul
mov
or
cmp
push
push
notl
inc
int3
das
ds
ficoms
mov
jp
dec
mov
sub
clc
inc
inc
jne
sbbb
imul
fwait
pop
stc
cmpsb
push
les
test
stc
aas
das
cli
mov
in
imul
subb
dec
stos
pop
mov
hlt
sub
xchg
int3
out
sub
push
xor
iret
std
movsl
pushf
in
ficompl
int3
pop
jns
and
and
imul
decl
jl
mov
mov
roll
cmc
mov
push
push
mov
inc
pop
lcall
mov
cmp
loopne
push
clc
sub
scas
movsb
cli
jo
lods
dec
lds
leave
jg
loopne
jle
adc
xor
push
decb
mov
clc
mov
jl
xor
push
dec
jb
ret
push
dec
out
or
aad
bound
jp
aad
jne
xor
mov
lahf
sub
adc
fisttpll
mov
shl
in
stos
subl
int
jmp
icebp
dec
mov
fmul
jl
or
and
hlt
push
add
jle
cmc
sub
in
into
mov
fisttpll
loope
fwait
add
mov
hlt
movsl
sub
xor
add
fwait
pop
sahf
fcmovbe
xorl
push
ljmp
popa
jo
mov
mov
cmp
or
sub
jne
mov
cwtl
mov
xorl
mov
sub
sub
rcrb
dec
jge
xchg
iret
arpl
xor
dec
fisttpll
cmp
mov
into
rcrb
and
push
dec
scas
idivl
dec
hlt
mov
adc
popf
cmp
movsl
stos
movsb
inc
dec
xchg
es
leave
jmpw
clc
mov
push
imul
sbb
jecxz
mov
jle
insl
cmp
jecxz
dec
daa
ret
mov
push
shrl
mov
and
xchg
sbb
sbbb
mov
hlt
mul
xchg
pop
sahf
pushf
xchg
xlat
push
adc
adc
inc
jae
es
cmp
ds
sub
aam
cmp
cs
aad
xchg
mov
adc
repz
add
and
pusha
mov
xchg
push
sbb
mov
jae
jmp
sbb
jne
mov
orb
pop
iret
sub
insb
mov
icebp
fwait
jge
loopne
stc
xchg
sbb
jnp
xor
push
push
sbb
pushf
mov
aas
jle
xor
push
cmp
sbb
mov
adc
pop
mov
and
movb
std
loopne
xor
mov
repnz
cmp
jge
lcall
imul
cld
aaa
cmp
dec
mov
or
or
test
loop
in
mov
push
fidivrs
mov
pop
gs
jae
jg
adc
sub
inc
cs
call
rcrb
ss
ss
cmpb
xchg
xchg
push
stos
jle
sub
or
mov
outsb
mov
or
std
mov
mov
nop
sub
and
add
dec
fcmovnu
or
or
inc
adc
ljmp
das
and
out
into
std
sub
jecxz
call
mov
adc
and
jb
dec
lcall
pop
pop
dec
jp
jp
adc
or
mov
movsl
mov
in
mov
cmp
push
sub
add
aam
inc
push
sub
jne
repz
xor
arpl
inc
push
dec
dec
xlat
repnz
inc
cmp
mov
pop
adc
add
daa
jns
nop
shl
jbe
lock
out
sub
sbb
mov
andb
mov
pusha
mov
adc
jge
ret
movl
out
fbld
push
cmp
mov
cld
push
lcall
andl
dec
pop
outsl
outsl
adc
xor
jmp
adc
bound
cs
lret
stos
mov
lods
pop
shrl
orl
xchg
adc
adc
xchg
cltd
fidivrs
lds
addps
and
scas
repz
xlat
cmp
or
or
shll
push
out
mov
loopne
mov
sarl
out
data16
clc
pop
sbb
icebp
pushf
fistpl
xorb
sbb
lods
ficompl
int
xor
aad
xorb
ret
jmp
aaa
mov
add
push
or
jnp
gs
data16
dec
fisubl
sahf
data16
pusha
test
mov
mov
or
jbe
test
dec
sahf
test
inc
test
or
mov
xor
mov
lahf
in
and
or
shll
in
es
mov
ljmp
int3
rcrb
mov
jp
dec
jecxz
test
adc
ds
xchg
loopne
mov
test
dec
cmc
dec
jmp
fisubl
js
pusha
mov
in
in
push
and
jg
mov
movsb
sub
dec
cmp
adc
xorl
fdivl
nop
xchg
jp
xchg
test
jg
or
push
std
add
out
dec
popa
pop
bound
add
mov
xchg
jge
lret
mov
lret
and
push
popf
filds
call
fdivs
cmc
ret
pusha
data16
shll
addr16
dec
sbb
push
mov
add
enter
sbb
bound
mov
ficoms
mov
dec
jg
or
jmp
andl
mov
sub
aas
fists
xor
je
out
lcall
jnp
out
jns
add
xchg
jbe
sub
mov
xchg
divl
mov
inc
xchg
jb
ds
mov
xchg
mov
clc
int3
mov
xchg
cmp
negl
xchg
addr16
es
arpl
rdseed
xor
insl
sub
icebp
call
mov
inc
call
pop
lods
dec
xchg
out
inc
ret
or
pop
rcll
cmp
scas
pusha
push
mov
stc
lret
addr16
or
adc
movsl
adc
insl
add
xor
xor
scas
scas
in
test
call
pop
ffree
outsb
popf
mov
dec
adcl
xor
jb
mov
shlb
aam
pop
mov
and
aad
out
ss
jmp
mov
xor
subb
loopne
iret
push
add
cld
jl
jp
roll
cmp
mov
loopne
popf
fimuls
pop
push
and
push
push
xchg
push
aad
mov
movsl
jo
pop
test
fcoms
xor
jne
xor
inc
inc
adc
push
outsb
jecxz
and
mov
ret
outsb
xor
mov
call
cli
outsl
adc
inc
mov
mov
sub
fucom
mov
ljmp
mov
push
test
xchg
mov
cmc
in
sbb
sahf
fsubrl
stos
mov
inc
jae
mov
stc
inc
cmpb
lea
pop
mov
ret
dec
pop
jae
aaa
call
fidivl
jge
push
cltd
outsl
jmp
call
sub
in
xchg
mov
inc
scas
and
jg
sub
cld
mov
shll
jl
mov
pop
into
mov
andb
lock
imul
into
in
push
into
dec
adc
shll
xchg
xor
mov
mov
icebp
xchg
in
dec
inc
int3
stc
jl
xor
lret
push
in
mov
lds
nop
js
fildll
into
or
fsts
add
mov
insb
filds
lret
sub
mov
std
push
addr16
mov
stc
cmpsb
cltd
fisubrs
jmp
mov
sbb
push
in
mov
xor
imul
fcomps
mov
loopne
fstpl
mov
pop
inc
fwait
mov
adc
das
cmc
sbb
cmp
sbb
add
or
pop
mov
xchg
test
mov
or
lods
or
cmp
pop
decl
out
adc
pop
mov
test
pop
jl
enter
adc
mov
shl
adc
xor
jle
jp
lahf
inc
mov
les
shrb
xorb
jl
xchg
add
dec
shr
add
pop
rcrb
push
and
lds
xchg
popa
or
test
dec
cltd
and
xchg
sbb
mov
jnp
pop
subb
cmp
jmp
jb
repnz
sub
cwtl
es
test
jmp
pushl
aas
mov
rorl
mov
inc
cmp
cmp
push
pop
mov
in
arpl
mov
dec
cwtl
jmp
jmp
xchg
aam
mov
xchg
frstor
cli
ret
inc
test
mov
fwait
dec
ja
imul
in
mov
das
aad
mov
push
cs
sub
je
in
pop
gs
sub
js
xchg
mov
cltd
pop
psubusb
shrl
into
cmc
and
sti
psllw
xor
std
inc
aad
inc
andb
jne
lods
imul
rolb
xchg
add
inc
insl
jmp
ret
movsb
xchg
cmp
sub
push
inc
pop
mov
iret
fcmove
cmp
inc
je
xchg
xor
push
test
inc
inc
jo
int
les
mov
fdivr
push
cmp
xchg
cmc
add
leave
aad
inc
stos
pop
in
inc
lahf
cmpl
notl
or
lret
mov
sub
cmpsl
dec
mov
push
ss
or
out
mov
xchg
jno
scas
xlat
cld
fucomi
or
jl
sub
jns
or
and
jo
inc
mov
out
xor
outsl
ljmp
cmp
adc
fistpll
dec
ljmp
xor
mov
ret
dec
dec
test
mov
test
adc
push
sarb
add
mov
adc
rcl
pop
jg
aam
inc
test
cld
in
push
ja
popf
mov
adc
push
aas
jns
xor
shrb
and
push
and
or
mov
gs
cmp
mov
loopne
lret
movsb
sbb
push
and
pusha
sbb
sbb
cmp
and
leave
xchg
xchg
jnp
fs
cmp
jl,pn
enter
sub
mov
add
pop
in
sarl
sti
push
test
xlat
shlb
out
mov
jp
cmc
je
adc
pop
inc
cld
cmp
mov
sahf
rcrl
mov
or
or
jb
pop
push
shll
fists
insl
leave
dec
lods
daa
pushf
cmpsb
mov
xor
xchg
popa
dec
xor
shr
test
retw
mov
dec
out
add
fucomp
jecxz
ss
push
cs
ja
xlat
sbb
push
cmpsb
arpl
cmp
data16
add
mov
sub
sarb
sbb
sbb
dec
hlt
addb
sbbl
xchg
xchg
imul
dec
lret
loopne
aas
mov
out
or
push
cwtl
cmp
sbb
scas
fmul
cmpsl
and
stc
xchg
imul
jb
in
adc
pop
mov
sub
movsl
addl
enter
scas
addl
lods
sub
adc
pop
sbb
roll
mov
adc
lea
stc
dec
call
sub
popa
imul
addr16
cmp
imul
jecxz
fldcw
jno
imul
xchg
loop
or
inc
lds
das
sbb
sub
jecxz
pop
jnp
insl
nop
or
push
adc
push
jns
or
testl
or
inc
push
push
pop
jmp
insb
pop
in
aad
or
add
adc
mov
sbb
mov
mov
jecxz
mov
std
inc
cmpsl
push
lods
shlb
es
sbb
ljmp
test
aas
inc
out
popa
js
out
push
es
ja
nop
fxch
aaa
rorl
push
daa
xchg
sti
xor
fbstp
sbb
std
mov
shrb
loop
sbb
test
cmp
jnp
daa
aas
pop
addr16
aam
jg
leave
in
add
adc
jg
or
xor
enter
insl
xlat
cltd
dec
jge
pop
adc
movsl
incl
xchg
xor
jbe
negb
jp
outsb
pmullw
sbb
lahf
adcb
jbe
mov
jae
or
das
sbb
arpl
scas
adc
je
jbe
pop
lods
cmp
push
lock
mov
xchg
sbb
mov
rolb
pop
int3
movsb
fnstenv
cltd
adc
adc
mov
fsubrp
jmp
or
and
popa
mov
repnz
ficompl
cltd
jp
test
dec
push
lock
dec
mov
mov
mov
fsubrs
mov
movsl
sub
pop
mov
sbb
mov
fcmovnb
jb
cmp
jmp
enter
inc
add
cmp
xchg
test
pushf
mov
or
and
inc
pop
sbb
xor
in
out
sbb
jb
mov
sub
jo
dec
inc
mov
mov
mov
xchg
dec
jnp
test
stos
cmp
cmc
lahf
adc
rclb
test
xchg
aam
stos
inc
clc
repz
push
in
add
mov
fsubp
sbb
dec
xchg
cmp
int3
xor
xor
jle
xchg
and
push
jg
adc
jbe
mov
insl
add
cmp
stos
pusha
sbb
mov
push
in
push
in
call
mov
repz
mov
out
xchg
xor
rol
sbb
icebp
aas
dec
movsl
pop
fimull
test
mov
gs
pop
lea
sub
mov
test
and
ss
lods
xchg
push
pop
xchg
outsl
jge
cmp
pop
mov
cmp
je
test
xchg
add
pop
loope
add
dec
push
jnp
sub
out
jns
or
sbb
lcall
push
sbb
insb
mov
data16
sbb
mov
stos
jbe
xor
cmp
test
nop
sbb
sub
xchg
jne
stos
push
je
dec
int3
out
mov
lods
push
or
inc
cmp
outsb
call
cmp
mov
pushf
lock
test
es
cmp
or
mov
push
adc
clc
inc
mov
int
int
fwait
xor
push
loopne
mov
clc
data16
ja
addb
cmc
fistpl
cld
dec
add
daa
cltd
mov
arpl
mov
mov
adc
mov
lea
cmp
lahf
xchg
push
lods
or
sub
hlt
arpl
xor
xorb
aaa
loop
xorl
ret
sti
test
les
movsl
push
adc
pop
or
pop
sbb
js
xchg
mov
add
mov
fscale
loop
sbb
imulb
in
jo
xor
sbb
loop
cmpsl
rcr
mov
cs
sub
fstl
lea
out
in
loopne
push
test
in
mov
mov
test
push
outsl
xchg
dec
pop
or
dec
mov
ja
loopne
in
add
scas
jmp
repnz
jp
sub
mov
xchg
mov
cmp
neg
adc
or
fadds
cwtl
inc
pop
or
cmp
mov
jae
aaa
cld
add
fstps
mov
divl
xchg
xlat
lahf
aas
je
push
fmuls
int
mov
and
push
jmp
les
jb
sbb
dec
js
dec
das
pop
cwtl
pop
dec
ror
mov
nop
shll
jg
cs
ss
jb
xlat
ss
or
or
push
inc
add
pop
out
rorl
out
bswap
dec
sbb
xchg
cmp
and
and
cmpsb
out
jle
cwtl
push
scas
dec
pop
add
int
push
sbb
loop
jge
ljmp
ss
cmp
out
mov
xor
mov
push
jo
sbbl
rcl
in
mov
lea
sub
inc
xor
not
mov
ljmp
push
and
jl
sbb
mov
xchg
sub
sub
pop
xchg
out
pusha
inc
gs
sub
inc
pop
ds
pop
add
mov
mov
mov
out
je
in
addb
lcall
jns
or
sbbl
mov
in
fimull
inc
enter
sbb
add
repnz
sbb
cltd
xchg
test
mov
ljmp
jmp
push
and
dec
sub
ja
add
and
push
jp
stos
inc
lea
pop
in
pop
mov
arpl
fs
mov
cmc
loop
mov
addb
fidivs
lcall
popa
mov
sbb
popf
inc
psubq
jb
out
pop
cmp
lahf
pop
jle
sub
sub
sub
mov
add
add
pop
ss
sbb
int
hlt
dec
enter
and
fbld
xchg
inc
xor
jnp
out
mov
push
icebp
aaa
cwtl
addr16
in
insb
ds
inc
or
arpl
mov
out
jge
fnstcw
in
mov
jno
jne
push
mov
loope
lods
stos
jnp
pop
leave
adc
xor
ljmp
cwtl
cmpsb
adc
movl
pop
pop
ljmp
lods
ret
mov
add
xchg
fdivrs
mov
fcompl
fcmovb
shll
cmpl
aad
push
into
scas
pop
cmp
push
addl
pop
sbb
jae
fcmovnbe
divl
mov
sahf
sub
cmp
pop
enter
jne
pop
dec
test
or
cld
pop
mov
cli
sub
rcll
mov
dec
out
loope
xor
mov
lock
mov
add
lods
std
jbe
pop
loope
mov
pusha
jecxz
and
pushf
mov
stc
jge
xchg
mov
mov
arpl
or
iret
adc
adc
cmp
mov
jo
cwtl
xor
mov
movsl
loope
xchg
xchg
inc
push
pop
in
cmp
gs
aad
adc
and
vmovaps
incb
pusha
shl
andb
sub
repnz
rcl
mov
arpl
inc
inc
lods
pop
addr16
jg
xor
cwtl
and
nop
or
dec
fidivrl
sub
call
mov
js
add
cltd
lret
mov
cmp
aas
pop
outsb
xlat
xchg
push
sub
pop
rolb
pushf
ja
xor
mov
movsl
jb
adc
cld
and
ja
in
and
push
fsts
push
mov
xchg
mov
ficoml
mov
mov
repnz
fisubl
xchg
xchg
fldl
xor
inc
sub
lea
stos
roll
popf
jb
mov
les
ja
and
pop
add
int3
icebp
fwait
nop
out
in
mov
jns,pt
push
jmp
push
lock
adc
scas
imulb
dec
in
xchg
mov
mov
insl
pop
popa
movsl
pop
sub
loope
aam
adc
pop
and
jnp
dec
in
in
adc
aas
adc
jg
addr16
stos
es
ja
into
or
ja
fs
in
shlb
clc
out
outsb
test
loopne
sbbl
or
iret
cmpsl
inc
jb
rcll
pop
lea
or
setle
jae
cmp
mov
pop
mov
cmp
xlat
inc
add
sub
cmp
popa
and
mov
lods
lret
ljmp
mov
cli
aaa
xchg
dec
pop
sbb
jo
sti
lcall
mov
mov
test
xor
add
mov
loope
adc
mov
xor
xor
mov
in
daa
mov
enter
cmpb
xchg
mov
mov
push
dec
sub
mov
imul
adc
and
mov
loopne
insb
fstl
mov
fs
pop
mov
and
hlt
pop
mov
mov
add
sarb
outsl
jns
cmp
outsl
mov
push
mov
lahf
cmp
sti
pop
mov
jmp
push
mov
fwait
or
pop
inc
imul
inc
sub
insb
es
jge
pop
xchg
sbb
jmp
or
adc
mov
enter
pop
lret
and
pinsrw
stc
pop
nop
fnstsw
xchg
in
out
in
pop
cli
push
adc
inc
xchg
sahf
outsb
aam
or
and
adc
xchg
sbb
inc
add
mov
and
jp
aaa
fisttpl
xor
aaa
push
pop
cltd
out
cmp
lret
cmp
das
fs
add
pusha
pop
xlat
sub
mov
cmp
gs
lretw
mov
sbb
sbbl
fs
pushf
push
jg
and
repnz
cmp
rcrl
movsl
clc
in
cmpsb
leave
pop
xchg
mov
sub
sbb
ja
or
cmpb
push
fsubrl
adc
mov
idivl
push
test
into
dec
jmp
mov
out
ja,pn
mov
xchg
dec
roll
call
mov
or
xchg
mov
mov
rcll
adc
sbb
push
xor
fcom
rcll
sub
lods
loop
stc
lea
dec
jns
sbb
jge
in
icebp
jno
jbe
out
repz
shr
aaa
mov
loope
push
xor
and
hlt
push
mov
push
ljmp
dec
inc
mov
lahf
popf
and
and
adc
cmpsb
rolb
test
aam
mov
data16
imul
jns
xchg
inc
in
imul
shll
lock
jo
insb
cmp
push
sub
add
loope
lds
sub
push
push
pop
mov
int3
sub
loopne
lock
mov
add
rcrl
cmpsl
les
pop
in
fdivs
and
cmp
sahf
push
call
popa
push
sbb
enter
jne
jae
cmp
loope
and
testb
lock
cmp
jnp
popf
out
enter
or
jb
push
sbb
or
pop
imul
adc
cmpsb
rorb
push
jns
je
mov
inc
ds
sbb
cmpsb
mov
cmp
sbb
xchg
mov
mov
xchg
dec
stos
jmp
jl
mov
add
test
les
add
mov
sbb
sub
xchg
rorl
jae
enter
push
scas
mov
add
xor
not
sub
push
sbb
jb
rcll
sbb
mov
inc
jnp
cli
inc
leave
mov
jb
lods
xor
lret
pop
push
popa
pop
mov
xor
or
int3
insl
mov
mov
xor
pusha
or
lret
xor
or
ljmp
sub
fwait
lods
nop
inc
pop
mov
mov
jnp
xchg
add
loopne
sahf
xor
pop
mov
inc
mov
leave
std
or
fcmovnb
inc
mov
mov
ds
jle
frstor
cs
inc
fiaddl
sub
xchg
mov
and
ret
cs
jg
mov
cwtl
pusha
clc
fimull
test
sub
mov
sbb
fs
js
ret
aaa
clc
cmc
pop
cmp
jns
ds
mov
sbb
test
dec
cltd
sub
imul
and
loop
push
inc
xor
lcall
iret
pop
lock
lods
mov
pop
int3
add
adc
shrb
inc
push
por
lods
fbld
mov
add
xor
fmull
jo
leave
lds
clc
jns
or
out
mov
out
mov
dec
xchg
ds
pop
outsl
lret
imul
or
mov
pop
inc
jg
loope
sub
aad
stos
mov
sub
fdivrs
test
jns
out
inc
sub
lret
sbb
andb
cmp
je
push
or
daa
je
rcrb
test
mov
push
shrl
sbb
cmpsb
jp
les
sbb
addr16
int
into
add
xchg
lods
push
xor
pop
cmp
in
pop
fildl
pop
frstor
push
cs
testb
shrl
movsb
fwait
jns
pop
pushf
ja
dec
and
and
push
dec
jne
xchg
addl
xor
add
sub
jns
dec
repnz
jl
hlt
jnp
jge
loopne
xchg
jecxz
inc
push
push
fbld
and
mov
in
scas
in
pop
dec
pshufw
and
sar
in
sbb
je
push
and
xor
lea
jb
jae
lea
aam
loope
sub
in
lret
mov
ljmp
in
ret
jmp
aas
sahf
mov
xor
fimuls
pop
sbb
test
scas
xchg
fimuls
testb
lds
inc
mov
cmp
fwait
jo
insb
mov
lahf
lret
mov
pop
inc
xor
cmpsl
dec
daa
xor
jg
mov
sub
sti
xor
add
xchg
je
pop
popf
pop
addr16
test
lods
dec
hlt
mov
nop
and
pop
xchg
cltd
and
insl
inc
pop
out
dec
ljmp
cmp
in
and
push
mov
xor
and
jmp
jge
pushf
lret
jl
jle
pop
lods
sub
loopne
testb
pushf
inc
pop
gs
push
fwait
dec
ret
cmp
mull
and
xorb
cmp
push
out
cmp
dec
ret
pop
ret
rolb
lcall
jnp
lret
inc
jle
scas
push
loopne
ret
sbb
or
or
xor
lods
cltd
fildll
hlt
ss
jbe
adc
ret
xor
fistl
cmp
adc
pop
test
les
icebp
loopnew
dec
shld
in
repz
sti
inc
loopne
jl
and
sbb
mov
loopne
repnz
sub
xlat
cwtl
into
xchg
and
cltd
xchg
sbb
out
ss
inc
pop
stc
pusha
shl
rcll
mov
inc
or
push
adc
fbstp
dec
inc
cmp
fldl
out
xor
jb
or
or
push
dec
in
js
xchg
cmc
mov
cli
enter
in
inc
push
nop
sub
jbe
jge
xchg
mov
sub
sbb
dec
pop
push
scas
push
mov
jb
and
loope
adc
xchg
sbb
sar
xchg
sbb
xchg
mov
add
cmpsl
jp
xchg
add
pop
out
sbb
jb
jmp
sahf
adc
imul
imul
rcll
inc
in
mov
pop
dec
sbb
cwtl
imul
mov
in
not
nop
fdivrl
fisubs
sbb
jge
test
fimuls
or
out
arpl
incb
inc
sbb
dec
mov
js
mov
leave
nop
fiadds
xchg
jns
push
lret
ljmp
shlb
push
scas
add
int
pushf
push
inc
add
repnz
xlat
icebp
das
mov
stos
js
sbb
cmpsb
leave
inc
loope
mov
insl
popa
xchg
es
aad
popa
insb
notl
xchg
xor
and
shlb
xchg
fadd
sub
sbb
outsl
add
cmp
xor
ret
pop
test
fldl
inc
imul
or
shll
mov
flds
add
mov
mov
pop
jns
sub
in
out
repz
xor
mov
pop
mov
xor
inc
push
into
and
daa
inc
add
cmp
jmp
dec
fidivs
inc
adc
add
pop
pop
popf
xor
cmp
aad
dec
sti
pop
xchg
stos
rclb
je
stos
jmp
fwait
pop
lret
push
pusha
in
insb
jno
cmpsb
fdivl
dec
cmp
add
push
add
out
xor
cmpsb
lock
mov
pop
and
leave
es
mov
jmp
jbe
out
xor
add
mov
dec
ret
adc
cmp
fisubl
jmp
test
lea
xor
mov
sub
inc
fistl
push
sti
pop
stc
js
xlat
and
jo
gs
popa
xchg
fmulp
xor
jae
pop
jp
aas
dec
jle
inc
into
les
scas
daa
sarl
test
leave
adc
aam
or
outsl
sbb
adc
lods
stos
pminub
and
or
jmp
mov
outsb
mov
xor
hlt
sbb
xor
and
adc
out
or
cmp
dec
loope
sub
adc
adc
push
fcmovne
dec
sbb
and
or
leave
loopne
and
xchg
jae
clc
or
lahf
adc
xor
xor
dec
movsb
fstpl
jo
push
push
das
inc
lcall
insb
jnp
add
out
fwait
in
iret
mov
into
cmp
scas
add
cmp
insl
xlat
gs
xor
mov
cmp
pushf
mov
insb
mov
cli
movsb
test
xor
ja
inc
add
xor
fs
lods
not
je
mov
mov
out
ljmp
inc
mov
loop
push
movsl
xchg
cld
test
and
fnstsw
and
fwait
push
out
mov
out
fwait
mov
shlb
inc
arpl
std
adc
movsb
hlt
ret
mov
hlt
cmp
sub
cli
sub
jnp
add
dec
mov
sti
mov
cmp
dec
xchg
cmp
mov
xor
lret
mov
notl
xlat
outsl
filds
sub
mov
xchg
xchg
mov
pushf
xor
outsl
mov
push
fcoml
or
ja
clc
inc
sarl
pop
into
frstor
inc
int3
push
rolb
push
fsubp
xor
les
in
or
inc
lea
mov
mov
cmp
fwait
jb
jg
add
cmp
cmp
lret
shl
arpl
fs
mov
jge
xchg
xor
outsl
xchg
jecxz
sub
out
adc
lods
fldenv
xchg
and
std
nop
aaa
cmp
call
push
into
ljmp
push
fwait
jp
fbld
out
outsb
mov
mov
and
flds
push
push
adc
push
jo
inc
test
insb
outsb
iret
cmpl
sbb
mov
push
into
jbe
fistpl
andb
or
pop
daa
and
sub
push
cmpsl
pop
inc
jo
in
dec
aam
push
adc
jge
push
xor
aad
in
clc
jl
scas
enter
dec
add
rorl
insl
sub
push
sbb
mov
mov
pusha
jbe
movsb
data16
ljmp
jp
lret
imul
je
test
mov
popf
sbb
jmp
cltd
adc
dec
push
mov
imul
jo
mov
dec
dec
lahf
shlb
mov
out
call
leave
lea
stos
xor
les
push
push
test
popf
movsl
jns
iret
fstp
lds
xor
call
fldl
pusha
lea
sbb
lds
call
mov
test
aaa
mov
xor
pop
sub
xor
dec
das
insb
fcmovnu
sbb
mov
lds
test
mov
cs
ret
and
addr16
or
insl
nop
inc
jns
jmp
and
adc
push
arpl
lcall
mov
or
outsl
lcall
pop
xchg
mov
decl
lcall
in
data16
imul
scas
inc
cmp
cmc
out
stos
xchg
dec
imul
dec
jmp
popf
jb
pop
cmp
mov
aaa
sti
and
sahf
and
insb
xor
add
pusha
sbb
push
test
xor
ficoml
jmp
rcr
jg
push
sbb
xchg
jo
jmp
and
xor
cmp
push
mov
loop
sarb
and
pop
inc
js
andl
jle
add
hlt
loop
push
push
int
mov
jp
xchg
mulb
sub
frstor
lods
and
or
movsb
jno
mov
sub
sub
pop
iret
in
lock
and
pop
pop
ret
ret
cmpsl
stc
adc
push
ret
add
mov
xchg
cmp
iret
fdivl
or
xchg
iret
add
loop
xor
fadds
sub
clc
and
dec
sub
pop
out
mov
ret
pop
jns
test
ficompl
xor
out
xchg
xor
inc
fistl
cmp
je
push
xchg
loope
sub
push
xchg
xchg
cmp
out
sbb
nop
mov
imul
and
dec
fcoml
cld
jb
pushf
xchg
hlt
shl
cwtl
and
int3
pop
mov
daa
jne
sbb
dec
xchg
push
xor
mov
sub
call
iret
into
jecxz
jae
les
out
mov
cmp
aas
jle,pn
fcmovnbe
xchg
cwtl
sti
stos
inc
scas
and
loopne
adc
inc
jb
fdivl
mov
movsb
mov
ljmp
pop
inc
and
loop
test
pop
sahf
lret
pusha
dec
shll
add
push
mov
pop
mov
lods
pop
cltd
xchg
pop
or
imul
out
fcoms
sub
lret
ss
aam
sbb
xchg
ljmp
in
stc
inc
mov
push
cmc
call
cmpsb
mov
int
and
outsl
cmp
shrl
int
sub
cli
cli
xor
ss
aam
dec
ficompl
cmp
pop
pop
loop
pop
mov
movlps
mov
mov
fstl
loopne
js
jecxz
loopne
push
bound
push
or
xchg
inc
sqrtps
addl
cmp
scas
inc
dec
aam
popf
mov
arpl
rcrl
sti
shlb
pop
mov
iret
cmc
sub
pop
jae
xchg
mov
jle
fidivl
xchg
movsb
clc
xlat
mov
or
test
xchg
bound
mov
adc
ja
shrb
and
adcl
sbb
gs
or
mov
mull
into
shrb
mov
shlb
test
or
rcrb
and
je
push
out
lods
out
mov
or
push
inc
sub
bound
mov
sub
leave
mov
jmp
mov
pop
cmpl
inc
ja
dec
xlat
cmpsb
test
pop
repnz
jno
js
repnz
dec
sub
mov
jle
stos
mov
into
sbbl
je
cmp
imul
aad
dec
lods
push
dec
shrl
shr
dec
add
jle
mov
gs
es
cmp
gs
push
xchg
sub
push
nop
add
pop
pop
shl
cs
sbb
mov
sbb
add
mov
aaa
fcmove
pop
cld
stos
ficompl
cmpsb
sti
sbbl
sub
data16
scas
into
sub
push
test
nop
js
jge
imul
ja
jmp
push
cmp
lret
clc
into
je
repnz
dec
aam
stos
jge
sahf
sub
or
aaa
js
mov
fstps
dec
pop
or
stos
sub
push
inc
cmc
xchg
xchg
jl
push
clc
enter
fbstp
mov
mov
push
xchg
pinsrw
stos
ss
or
lret
xor
dec
dec
mov
testb
pop
jb
or
xor
loop
sbb
ss
jnp
sub
movsb
cmc
jb
jb
or
mov
xchg
insb
xor
mov
icebp
nop
out
sbb
mov
loopne
hlt
pusha
int3
sub
dec
mov
call
test
sti
mov
nop
lods
push
mov
into
push
sbb
and
sub
mov
cmp
int3
add
lret
jae
es
cwtl
das
xchg
or
rcrb
cmc
aam
adc
sbb
rorl
loop
loopne
xor
push
cmc
or
clc
sbb
cs
ret
out
cmp
push
cmp
shrb
mov
ljmp
mov
pop
fldcw
repnz
adc
dec
sbb
jnp
sete
adc
test
iret
xchg
arpl
jmp
and
shlb
roll
mov
lret
mov
inc
mov
jge
ds
insb
xor
sbb
lret
xor
cmp
idiv
inc
xchg
repz
mov
push
add
xor
mov
enter
jge
lret
rep
jle
push
sbb
or
mov
xchg
call
cmp
cmpsb
stos
jg
sbb
and
ret
cmp
jge
inc
dec
pop
xchg
pop
imul
dec
scas
inc
push
bound
pop
mov
inc
bound
cmp
ja
jge
leave
int3
rcl
or
mov
icebp
cltd
jge
mov
int
outsb
mov
sub
xchg
pop
lcall
stc
mov
or
sbb
xor
out
std
mov
or
test
mov
imull
adc
test
stos
data16
add
test
add
xor
and
and
pusha
stc
dec
xor
xchg
outsl
cld
movb
push
cmp
cs
push
out
jbe
xchg
loop
stos
push
scas
push
mov
repz
pop
ret
push
xlat
mov
pushf
pop
push
adc
mov
sar
lcall
push
clc
ja
test
scas
sbb
test
pop
lea
push
mov
movsl
test
pop
and
ljmp
sbb
add
andb
add
mov
gs
dec
mov
insb
lods
outsb
insl
mov
inc
mov
cld
mov
and
mov
cmp
fwait
and
inc
in
mov
or
mov
enter
mov
cmp
rcrl
sbb
pop
sub
mov
mov
xorb
push
das
inc
push
push
js
lahf
rorb
cld
fwait
rcrb
mov
das
icebp
jo
inc
stos
xchg
mov
daa
push
jp
orl
loop
and
rcrl
cld
sbb
xrelease
xchg
push
adc
xchg
or
push
pop
sub
inc
fisttpl
push
mull
les
lret
nop
pusha
sbb
push
clc
popa
or
fwait
add
insb
jp
aaa
dec
cltd
jl
pop
pop
dec
cld
mov
xor
in
and
xor
out
xor
aad
inc
xor
outsl
mov
inc
mov
sarl
push
icebp
xor
stc
lret
fs
jnp
mov
mov
xchg
sarl
fdivr
rolb
lds
pop
mov
dec
inc
xchg
pop
shlb
push
push
mov
mov
js
call
es
out
mov
in
xchg
mov
test
or
jp
mov
daa
bound
imul
mov
sbb
outsl
or
jp
fldl
ret
jno
adc
adc
add
cwtl
aad
bound
push
fiaddl
xchg
scas
sub
testb
mov
jg
mov
adc
xchg
icebp
sub
pop
in
and
jge
push
icebp
mov
push
jl
popa
lret
lds
or
sub
xchg
or
imul
insb
and
subb
jns
pop
jge
xor
fwait
inc
or
and
adc
mov
mov
sbb
or
aad
sub
arpl
popf
lcall
insb
loopne
xor
push
mov
mov
icebp
shlb
outsb
xor
sub
das
cld
fs
mov
ds
xlat
ds
in
mov
lods
fsub
push
xchg
jnp
add
repnz
sti
sahf
jne
jns
pop
daa
repnz
adc
mov
je
or
xorl
push
fwait
loopne
push
idivl
popl
cli
sbb
and
std
movsb
push
cltd
push
vpshuflw
xor
xchg
and
or
cmp
lahf
cmp
pop
addr16
into
cltd
mov
or
in
inc
inc
leave
mov
imul
shlb
push
leave
mov
and
insl
and
in
cmp
dec
jle
add
mov
daa
addb
add
subb
add
outsb
lcall
pusha
lock
add
out
xor
subl
add
and
jmp
stc
aad
in
iret
enter
xlat
aas
notb
add
cmp
in
push
mov
or
mov
enter
mov
cmpsl
jle
cwtl
std
testl
push
mov
repnz
and
popf
cmp
pop
jns
jae
into
daa
fcomi
sarb
fsubr
xor
js
pop
pop
mov
sub
mov
bound
test
mov
lods
leave
mov
xchg
das
movb
xchg
dec
ds
jmp
push
stos
mov
mov
push
iret
adc
fisubrl
loop
jns
pop
lcall
test
int
in
xchg
or
std
testl
cmp
mov
xchg
in
sbb
push
inc
sahf
repnz
xchg
or
jg
imul
mov
subb
sub
fs
iret
andl
lret
negl
or
jecxz
test
pop
push
adc
jmp
faddl
addr16
push
mov
lret
sub
mov
or
push
repz
push
popf
sbb
add
adc
push
popf
loope
ret
mov
scas
sub
and
movsl
popf
imul
fsubrl
in
roll
mov
lcall
push
push
fstpt
mov
and
sti
or
cs
add
xor
xor
pop
stos
aad
pushf
orl
rcll
or
pop
xchg
adc
arpl
loop
jle
mov
lret
test
subb
scas
cli
and
push
repz
pushf
inc
fisttps
fcomi
xchg
out
xorb
inc
rcll
sub
jg
inc
add
pushf
pusha
pop
add
mov
mov
push
ds
js
inc
inc
mov
int3
jecxz
ret
dec
inc
mov
push
push
push
sbb
or
push
xor
jmp
test
xorb
or
jecxz
arpl
or
rorb
shl
test
imul
and
aaa
in
out
push
test
cmc
ret
lahf
js
pop
shr
mov
or
cmp
cs
imul
insb
sub
aas
iret
push
add
adcl
fdivrs
ds
mov
mov
popa
sbb
or
rclb
mov
mov
aaa
adc
pop
sub
lret
sbb
sub
rcrl
jnp
push
jmp
scas
lock
sti
sub
lcall
in
mov
out
bound
jne
sub
cwtl
stos
cmp
inc
mov
jge
jo
xchg
or
sbb
jp
rolb
cmpl
fldcw
jp
adc
je
cmp
fwait
int3
imul
xchg
cmp
ljmp
test
idivl
call
sahf
flds
int
cmp
andl
sub
fisttpl
jne
fistpl
lahf
dec
insl
jns
js
cmp
loope
fwait
jns
mov
cmp
pop
testb
adc
jmp
nop
push
pop
pop
mov
aaa
fstpt
ret
sarl
xor
lea
pop
bound
add
cmp
push
jmp
jne
sub
test
mov
mov
ss
sub
testb
lock
mov
out
xchg
or
jmp
in
push
xchg
nop
sub
sub
mov
fldcw
in
sbb
dec
dec
xchg
mov
sbb
andb
lods
add
or
inc
ret
mov
aaa
jne
push
push
out
mov
mov
jbe
or
mov
movntps
pop
enter
jp
pushf
call
adcl
std
fnstsw
enter
in
scas
dec
pop
xor
or
or
cmp
or
lret
push
fwait
pop
rorb
push
push
adc
adc
in
ffree
mov
pop
cmp
shlb
lods
mov
sbb
jp
inc
add
and
jo
push
cmp
ficompl
inc
push
or
pushw
sbb
mov
push
push
xor
mov
popf
cltd
sub
ret
lret
jge
xchg
fld
jns
fsubl
and
pop
adc
into
sbb
push
jmp
outsb
mov
dec
enter
in
scas
sarb
fimull
aad
and
dec
shr
push
inc
daa
mov
hlt
lds
cmp
mov
idiv
adc
outsb
or
gs
jo
mov
adc
push
insl
mov
outsl
inc
lcall
ljmp
ror
mov
adc
inc
mov
popa
aas
and
cmp
lods
mov
mov
mov
aas
pop
lods
and
xchg
sub
cltd
hlt
jbe
or
and
lods
push
inc
and
cmp
mov
bound
addr16
fsubrl
or
fcmovnb
xchg
adc
mov
adc
cmpsb
hlt
rcr
fildl
out
mov
cs
jmp
and
mov
mov
inc
mov
jmp
xor
cmp
push
add
sbb
jle
push
data16
jl
mov
and
and
jnp
imul
xchg
push
es
arpl
mov
and
out
sti
loope
mov
es
lods
push
pusha
jns
cmp
pop
jmp
mov
push
mul
stos
push
pop
and
jge
mov
pop
inc
pop
cs
fstpt
or
sub
in
mov
int
xchg
pop
aad
pop
dec
and
mov
pusha
dec
or
pop
in
int3
out
or
pop
inc
cmpsl
sbb
xchg
xchg
int
push
out
pop
mov
mov
sbb
lods
jnp
clc
xor
aaa
mov
lret
pushl
push
xor
xchg
mov
lods
mov
fsubs
xchg
aam
push
jp
lock
pusha
pop
addr16
lret
cmpsb
shll
insb
pop
out
jp
jb
jo
pop
cmp
in
daa
stos
lcall
mov
arpl
test
mov
mov
popf
fmuls
inc
push
adc
sub
pop
mov
cmpsb
mov
cmp
in
and
jge
jp
adc
imul
or
xlat
pop
out
adc
pop
mov
scas
test
ficoms
pop
inc
stos
mov
jmp
jo
add
test
imul
filds
cs
inc
jb
jmp
jo
add
testl
sbb
scas
adcl
lds
mov
mov
std
xchg
test
sbb
mov
call
cmc
jo
mov
dec
shll
xchg
cmpsl
cltd
test
cltd
pop
pusha
add
pop
aaa
stos
dec
mov
fwait
lods
sbb
inc
add
jp
sub
mov
and
decl
push
cmp
push
pop
clc
add
repz
aaa
movsb
and
mov
mov
out
inc
xlat
jae
lret
lea
iret
out
lahf
mulb
mov
cld
mov
subl
ret
fstp
mov
enter
adc
jmp
sbb
sub
ss
mov
push
mov
mov
fcmovne
ja
popf
lret
mov
add
and
sub
jo
in
mov
fstps
mov
mov
dec
arpl
lea
inc
cmp
lret
inc
push
and
nop
sbb
mov
movsb
jne
mov
mov
scas
outsb
out
or
insl
pop
loope
and
ret
int3
andl
cld
ficompl
xchg
mov
dec
cli
xchg
jp
inc
fadds
rol
test
subb
insb
shr
test
les
adc
inc
push
pusha
inc
or
dec
xor
fisttps
push
fsubrp
insb
mov
dec
cmpsb
pop
inc
push
or
icebp
jnp
inc
mov
es
es
mov
es
fldenv
lcall
cld
xchg
sbb
xor
imul
jle
dec
mov
sbb
push
adc
stos
xchg
insb
and
repnz
mov
sti
sbb
sub
push
sub
or
decl
roll
pusha
push
push
loopne
icebp
addr16
sbb
ss
push
scas
cmp
mov
or
push
and
fdivl
mov
inc
pop
aaa
dec
sahf
rcrl
sbbl
adc
subb
nop
arpl
mov
mov
sbb
and
mov
sbb
pop
dec
test
jl
jle
xor
in
xor
stos
cmpsb
push
fists
dec
daa
push
hlt
inc
xchg
jle
adc
sahf
and
aaa
addl
jp
shll
pop
inc
lahf
call
mov
sub
popa
sub
pop
adc
in
jb
insl
xor
movsb
xchg
xchg
mov
pop
jnp
and
mov
loope
xchg
fistps
fmuls
icebp
push
js
fiaddl
enter
and
roll
mov
jle
call
call
xchg
mov
ret
or
orl
or
sub
dec
jbe
sbb
cwtl
fiaddl
xchg
hlt
ret
and
mov
add
stc
call
std
repnz
push
inc
ret
xchg
fnstenvs
add
add
ljmp
pusha
xor
pop
pop
and
scas
mov
or
xchg
and
lods
mov
scas
pop
push
sbb
cld
sub
xor
and
sbb
lods
sbb
mov
mov
jnp
dec
pop
mov
daa
and
rcll
add
ret
adc
fisubrs
pop
pushf
loope
mov
add
push
push
dec
dec
rolb
xchg
xchg
or
mov
xor
shrb
cs
out
pop
add
in
pop
arpl
test
add
push
ds
cli
add
inc
repnz
mov
and
lock
mov
xor
ds
lea
iret
lret
sbb
xchg
loope
push
add
push
xchg
jge
or
pushf
jg
popa
jmp
iret
lcall
cmp
push
ret
bound
push
ss
pop
push
pop
pop
imul
inc
sbb
adc
jecxz
jo
sub
int3
mov
fisubrl
sbb
out
xchg
dec
mov
mov
cld
stc
sub
das
mov
dec
inc
cmc
cmp
cmc
inc
inc
jg
imul
pop
add
xlat
push
sarb
das
mov
popa
sbb
sbb
jnp
stos
cmp
add
adc
fcompl
ljmp
lods
fsubrs
popf
inc
idivl
fdivs
out
xor
fidivs
mov
xchg
ret
and
mov
js
aam
aas
popa
sti
mov
ds
rcrl
mov
test
inc
pop
inc
push
jp
iret
ljmp
or
ss
push
dec
test
sahf
dec
inc
sbb
pop
rolb
lea
sti
mov
adc
adc
xchg
mov
lds
icebp
xlat
jge
je
clc
addb
push
clc
scas
mov
xchg
stos
mov
fsub
mov
push
gs
mulb
arpl
dec
ljmp
cmc
test
push
cmp
in
test
popa
in
loop
movsl
ffree
fidivrs
inc
in
ja
scas
arpl
jecxz
call
pusha
xor
iret
mov
push
dec
insb
dec
scas
cmp
cli
push
push
jmp
pop
sub
pop
push
popf
fwait
inc
fmuls
fcmovnb
sbb
sbb
mov
cmpb
rcl
negb
cltd
pop
mov
shlb
pop
or
cmc
sub
xchg
or
andl
lods
fisubs
loop
test
push
pop
into
leave
aas
and
jmp
or
jp
enter
outsl
dec
mov
out
mov
ss
jno
xchg
sarl
push
dec
mov
stos
cmp
aad
mov
call
pop
xchg
mov
sbb
and
pop
dec
into
cmp
pop
dec
jg
out
divl
push
cmp
cmp
popf
mov
inc
cmp
ds
push
add
xor
in
subl
sub
out
and
cmp
out
sbb
jl
lcall
sbb
inc
stc
push
inc
shlb
bound
testl
push
cli
and
push
push
pop
pop
dec
ljmp
in
adc
popf
xlat
inc
jp
repz
aas
mov
push
leave
xor
inc
xor
sahf
scas
dec
mov
mov
stos
xchg
add
xlat
aaa
pop
stos
add
jmp
xor
jmp
cmp
sbb
clc
ds
and
cmp
mov
pusha
int
aad
loope
popa
movsb
jae
xchg
mov
lods
xor
push
into
stc
fwait
outsb
sbb
push
sbbl
mov
movsl
pop
adc
inc
cs
mov
aad
xorb
or
fisubrs
sub
icebp
imul
xchg
test
pop
pop
mov
sti
cwtl
or
or
sbb
fistps
frstor
pop
out
jge
inc
les
hlt
cwtl
pop
push
clc
sbb
inc
push
call
out
data16
push
and
inc
dec
inc
mov
add
mov
insb
je
sub
hlt
push
adc
inc
push
popf
sti
fisttpl
lea
in
inc
dec
mov
mov
fldl
mov
mov
stos
cmp
pop
cmpsl
cwtl
loopne
or
inc
push
in
push
inc
pusha
jmp
shrl
push
aaa
or
adc
jmp
fists
cmp
sub
xor
xchg
testb
jbe
push
inc
in
mov
xchg
and
cli
ret
leave
test
flds
xlat
mov
test
mov
out
jg
je
cmp
jmp
stc
pop
bound
dec
or
call
lds
xor
hlt
out
ljmp
mov
lcall
outsl
das
fstpt
lea
in
jns
icebp
and
es
mov
pop
mov
test
daa
div
inc
stos
ret
ds
mov
mov
inc
mov
cmpsb
and
cmp
scas
enter
pop
es
jne
dec
cs
loope
xchg
mov
inc
inc
adc
mov
sub
aas
in
mov
stc
sub
into
pusha
dec
dec
lret
push
jne
mov
mov
int3
jmp
mov
jle
dec
popf
mov
dec
xchg
mov
mov
mov
mov
pop
xor
cmp
pusha
movsl
xchg
aad
loope
cmpsb
xchg
dec
pop
sub
mov
pop
out
and
nop
dec
cld
das
push
mov
je
mov
clc
fs
ljmp
popa
push
dec
sti
int3
mov
sahf
dec
sub
xchg
lds
jo
outsl
sbb
add
arpl
dec
and
negl
jbe
sbb
cltd
iret
pop
ret
dec
jecxz
and
cmp
sbb
in
cltd
popa
outsl
adc
js
or
insb
jns
insb
or
mov
shll
dec
sub
pop
xchg
pop
stc
sbb
add
xor
fsubrl
outsl
xor
shrl
pop
mov
rcrb
jns
iret
dec
and
mov
lds
in
mov
aam
pop
inc
lock
pusha
sub
es
out
xor
jge
push
pop
shl
aam
shll
cmp
sub
push
push
cmp
shlb
pop
and
movsb
sbb
fistl
pop
arpl
imul
mov
pop
mov
or
xor
mov
hlt
cmpsb
dec
cmc
out
loope
push
pop
jge
bound
adc
xchg
adc
bnd
add
adcl
inc
pop
dec
fldt
in
out
jmp
into
jb
inc
aas
lock
ret
add
fs
ficomps
lea
cld
shrl
mov
add
fcompl
mov
mov
dec
cmpsl
mov
dec
or
pop
sub
daa
jmp
sbb
imul
loope
iret
into
cmc
mov
je
and
sub
hlt
sti
stos
jno
aaa
data16
dec
mov
dec
lcall
mov
lods
rcrb
mov
jae
neg
xorb
aaa
sbb
ds
lods
cmpsl
pop
popf
inc
cmp
adc
mov
out
add
dec
mov
mov
pop
mov
xchg
ret
pop
scas
or
pop
dec
outsl
mov
mov
lds
pop
call
and
pop
fisttps
xor
add
popl
jg
inc
outsb
push
imull
jno
add
leave
xor
jecxz
data16
fdiv
pop
dec
and
and
in
test
int
dec
mov
jne
scas
push
mov
mov
movsl
or
add
popa
in
aaa
sub
xor
or
stc
pop
js
cmpb
jmp
jo
pop
out
jae
out
dec
jo
or
popa
xchg
stc
jne
dec
adc
adc
mov
jmp
xor
mov
insl
jl
mov
imul
stos
fbld
mov
lock
jge
cmc
test
and
scas
jecxz
stos
push
movsl
pop
aam
lcall
xchg
fsubrs
pop
insl
lcall
mov
push
mov
mov
and
jmp
clc
mov
cwtl
and
mov
mov
and
push
nop
cli
adcl
mov
pop
jo
fs
push
lcall
jo
pop
xchg
cs
cmp
imul
fcoms
addr16
xor
dec
xchg
sahf
jb
inc
cltd
int
enter
add
adc
xor
mov
jne
jge
dec
gs
sbb
test
cli
rcl
push
pop
fstl
push
and
scas
push
loopne
stos
fwait
or
xor
mov
jb
jg
stos
lods
lret
in
or
cmp
push
int
add
dec
jg
pop
call
and
leave
adc
mov
or
hlt
sbb
imul
push
pushf
push
fdivl
add
mov
mov
xlat
xor
cmp
cmpsl
stos
in
fs
ss
push
xchg
lods
ja
scas
iret
mov
mov
cmp
dec
cmpsl
les
dec
sub
mov
adc
test
sub
cli
in
dec
inc
jmp
lret
movsl
xchg
out
xchg
inc
testl
sbb
aaa
mov
dec
and
clc
rorl
pop
pop
mov
xchg
insl
push
push
cmp
out
js
movsb
subl
add
test
xchg
pop
rcrb
lea
cmp
outsb
aad
cmp
push
xchg
xor
mov
cmpsl
cmp
adc
lret
les
lock
mov
mov
sbb
jle
js
aad
pop
insb
cli
dec
rorl
sbb
push
and
and
jbe
sbb
popa
jo
test
inc
mov
xor
stos
sub
es
jb
lahf
into
aaa
pop
pop
sbb
or
xor
pop
fisubrs
xchg
shl
fwait
add
lods
jl
aad
pop
push
outsb
cli
jp
sbb
rclb
push
and
jge
push
jl
repz
push
cld
sbb
sbb
add
in
iret
sbb
dec
popf
pop
or
call
cmpxchg
aam
adc
fldt
add
and
aad
ficompl
jecxz
pop
pop
in
pushf
ds
icebp
fstpl
test
and
or
dec
inc
test
push
decl
repnz
mov
jns
ficoms
dec
push
and
in
mov
push
arpl
cmp
xor
lcall
inc
pop
fcomip
dec
xor
mov
mov
bound
shll
and
movsl
mov
mov
xor
jno
lods
ret
loopne
ds
in
call
push
mov
ja
pop
cltd
mov
imul
aam
mov
lcall
jmp
pop
push
inc
loop
sarl
or
js
int
cmp
popf
stc
les
lock
outsb
pop
stos
or
push
int3
and
test
mov
adc
es
sti
mov
rolb
dec
sti
mov
push
xor
and
dec
or
mov
mov
pusha
push
cmp
ja
scas
je
gs
push
push
out
nop
pushf
cli
xchg
jle
repz
lcall
loop
pop
xor
mov
aas
xchg
mov
testl
mov
cmp
scas
lods
adc
mull
jns
mov
sub
mov
mov
ret
xor
mov
cmp
lods
addr16
lret
mov
movsl
pop
lds
sub
push
aam
push
int3
dec
pop
mov
insl
out
out
aaa
xor
daa
aas
movsl
push
in
adc
sub
push
or
cmpsl
das
fwait
mov
cmp
outsl
lret
int
data16
adc
mov
pop
cmp
mov
not
stc
arpl
orl
cmp
add
pop
test
xor
das
pop
or
mov
xor
cmp
mov
push
bound
push
fwait
jne
xchg
stos
push
sbb
test
in
mov
xor
pop
int
fwait
in
aas
push
and
push
sub
sti
dec
jb
sysret
dec
loope
mov
sbbb
test
gs
mov
mov
repz
cmp
jns
dec
fisubrs
push
xchg
sub
sub
jg
jbe
mov
cmp
pop
add
lcall
sub
daa
or
lret
pop
lcall
inc
gs
fnstcw
sub
aam
dec
adc
sub
sub
cmp
dec
mov
movl
mov
mov
sbb
mov
push
popf
jl
scas
lods
hlt
js
sbb
std
imul
es
nop
lea
imull
add
xor
pop
xor
dec
jo
sub
cld
jns
dec
dec
mov
jmp
pop
mov
shrb
daa
std
sbb
loopne
push
dec
push
inc
in
sbb
mov
call
mov
fisubl
dec
mov
shll
mov
sub
mov
fnstenv
sahf
ljmp
dec
out
out
fcoml
mov
xchg
ret
jns
fcomip
fs
mov
ja
push
push
rcll
pop
into
xchg
cmp
or
addl
inc
nop
rcrl
dec
mov
aas
or
adc
test
mov
push
fistl
mov
leave
lods
jae
jmp
outsl
pusha
incb
arpl
adc
insb
popa
mov
sub
inc
cld
mov
inc
out
orb
shrb
iret
cmc
loop
das
addl
addb
sahf
sbb
and
mov
pop
flds
jmp
dec
push
or
outsl
mov
mov
adc
mov
das
cmpsl
movb
xchg
cmp
mov
or
pop
fdivrp
stc
dec
jne
lds
sub
xor
mov
mov
lret
sbb
or
or
push
fisttpll
rclb
insl
pop
add
popf
sahf
mov
out
pop
add
adc
inc
cs
pop
out
or
sbb
inc
cmc
jmp
daa
fnstcw
lods
mov
dec
xchg
sbb
ret
orl
mov
jnp
addr16
xor
lcall
arpl
jb
mov
cmp
cmp
xchg
fldcw
nop
sbbb
imull
mov
cld
mov
roll
sbb
dec
jecxz
popf
inc
add
mov
mov
shll
inc
gs
inc
pop
sub
sti
add
mov
adcb
dec
movsb
xor
rclb
imul
lcall
push
dec
push
cmp
xor
xlat
xor
push
outsl
loop
js
mov
jb
sbb
jbe
sub
in
sub
das
nop
cmc
js
and
add
out
xchg
ret
popa
and
pop
sahf
xor
xchg
loop
sbb
sbb
ja
ret
inc
insl
fwait
insl
and
out
push
out
xor
sub
mov
xchg
loope
jecxz
mov
mov
cmp
cmp
repnz
sbb
jg
and
idivl
mov
push
and
pop
inc
xchg
jae
sbbb
popf
and
cs
dec
jmp
in
ds
js
pop
nop
xchg
and
sti
ja
arpl
shl
xchg
lret
jle
xorl
js
int3
popa
movsl
sub
std
and
cmc
sbbl
xchg
jb
ror
dec
and
fdiv
inc
mov
pop
or
dec
xchg
cltd
jg
out
or
jge
jp
bound
fwait
dec
cmp
xchg
mov
mov
inc
cmc
lods
std
adc
pop
sbb
add
mov
pop
push
addl
jle
jne
add
jbe
and
ffreep
pop
in
sbb
and
cs
or
xchg
mov
fildl
mov
bound
aaa
test
fcmovu
sbb
lret
je
pop
mov
dec
push
fimuls
xchg
jns
testb
mov
sub
cli
fwait
call
xor
insl
pushf
paddd
push
mov
out
push
inc
jge
lret
mov
inc
mov
aam
inc
mov
mov
pop
inc
xchg
gs
or
es
andb
ret
iret
imul
jne
sbb
or
stos
sub
push
jbe
mov
fs
pop
sub
inc
sub
cli
imul
ja
loopne
arpl
out
inc
in
mov
sti
xchg
xor
pop
sbb
aaa
cmpsb
dec
jmp
xor
push
adc
xchg
sbb
mov
sbb
pop
mov
mov
jp
fldcw
xchg
add
in
or
sub
push
test
lock
je
pusha
mov
cmpsl
movsl
adc
push
mov
xchg
icebp
aas
jge
mov
sub
xchg
in
test
stos
sahf
pushf
sub
popf
add
js
enter
push
cmc
lock
or
rcr
push
and
adc
sub
idiv
orb
pop
xchg
mov
inc
sahf
push
and
add
add
ja
adc
and
xor
mov
mov
jbe
movsl
add
ja
jl
xchg
jne
push
mov
mov
mov
sbb
mov
ljmp
fistpl
sbb
or
cmp
loope
adc
dec
dec
mov
add
outsb
push
sub
lea
movsl
dec
int
cld
dec
aam
xchg
mov
sub
xchg
mov
or
sbb
out
mov
rdpmc
sahf
fwait
dec
and
lea
cmpsl
sarb
testl
mov
xchg
out
es
ret
inc
fwait
jl
add
push
dec
nop
mov
mov
jmp
fisttpl
js
ja
sub
sahf
and
mov
cmp
lods
adc
jge
push
fstpt
jbe
mov
ljmp
pop
xchg
cmp
jg
mov
pop
sub
add
cmc
stc
mov
xor
mov
xor
lret
fwait
pusha
jno
mov
cs
insb
jnp
stos
fstl
aaa
xor
repnz
enter
insb
dec
fwait
xor
cmp
das
imulb
out
sti
push
dec
cld
in
cs
notl
mov
push
aam
loopne
jno
mov
dec
stos
jo
xchg
xchg
lds
rcrb
and
je
fcompl
outsl
dec
push
in
xchg
cwtl
xchg
lcall
js
sub
cli
loope,pn
pop
mov
pop
mov
in
xchg
bound
outsl
loopne
test
fcmovb
pop
dec
or
repz
xchg
in
xor
jecxz
xor
jge
imul
call
cmp
lock
cs
jns
pop
and
sub
daa
orl
or
test
add
popf
sahf
lods
in
addb
cli
scas
sub
fstps
ljmp
and
jns
inc
bound
nop
repz
mov
enter
gs
fimull
and
je
jbe
daa
jp
pminsw
adc
aaa
adc
mov
jge
mov
add
icebp
cmp
pop
cmp
filds
cld
sti
dec
mov
jnp
mov
aas
lret
push
sahf
repnz
insb
imul
movsl
scas
cmp
test
fld
add
sbb
xchg
out
jecxz
pop
jecxz
repz
xchg
add
or
xchg
int
daa
mov
cmp
outsb
push
push
nop
sbb
mov
sbb
mov
stos
lret
int3
mov
insb
add
popf
fisubrs
jbe
insl
ds
arpl
jecxz
jo
scas
mov
imul
outsb
gs
mov
icebp
test
sbb
icebp
and
mov
outsb
stos
sbb
aad
and
jmp
sarb
adc
enter
pushf
sub
mov
pushf
hlt
pop
negl
push
jmp
adc
dec
dec
cs
ljmpw
fldt
lods
in
xor
icebp
cmpsl
stos
adc
in
mov
cwtl
jb
jo
mov
inc
push
loopne
cmc
lret
es
mov
clc
and
xchg
lret
movsb
dec
cmp
fadd
pop
jns
mov
in
or
mov
pusha
inc
aaa
sbb
movsl
fwait
div
xlat
sbb
daa
pusha
push
outsl
or
or
popa
push
out
out
jp
nop
cmp
pop
or
inc
dec
test
adcl
mov
test
adc
xchg
pop
jne
add
das
sub
mull
mov
cmp
xchg
sbb
jg
xchg
push
sub
syscall
ret
push
cli
test
inc
outsl
mov
dec
jns
add
jne
aam
in
mov
and
dec
into
xor
aas
cmpsl
adc
dec
loopne
jbe
in
add
fwait
mov
jb
rorl
into
xacquire
xor
ljmp
inc
out
enter
outsl
mov
jne
xchg
adc
push
jg
lcall
lahf
xchg
adc
fistps
rclb
insl
cmp
mov
outsl
lcall
lcall
push
mov
mov
sub
clc
lcall
sub
enter
jnp
out
lods
and
inc
jae
xchg
dec
push
pop
jnp
shlb
xor
pop
stc
dec
loope
cmpsl
int3
inc
mov
or
imul
popa
push
push
pushf
dec
xor
rclb
repnz
int
jo
movb
pop
inc
add
sub
out
divb
push
call
mov
ds
orb
in
xor
je
mov
push
jge
aas
xchg
or
adc
pop
inc
inc
insb
cltd
and
jle
mov
fsts
fldt
inc
mov
shlb
rcll
jmp
aam
daa
int
inc
mov
adc
xchg
add
add
in
in
stos
nop
pop
cwtl
lret
sub
cmp
xor
roll
xchg
into
xor
cmp
shll
aad
loop
add
fs
and
mov
xchg
rcll
shrb
or
cwtl
pop
push
xchg
jno
rcrl
and
cmp
cld
imul
pcmpgtb
jl
mov
mov
pop
mov
xlat
aaa
insb
std
cmp
mov
sbb
cld
push
mov
int
loopne
out
data16
sub
jnp
nop
test
faddl
xor
push
fucompp
jne
inc
inc
es
ret
add
xor
ljmp
xchg
jmp
cmpsb
cmpsl
pusha
dec
and
mov
push
int
out
push
popf
cmp
pop
sti
jmp
cmpsl
dec
inc
xor
lcall
or
pop
push
aam
ret
fbstp
jnp
cli
mov
jle
cmp
mov
cmpsb
adc
aad
or
das
fsubrs
cmp
cmp
into
or
jg
setne
leave
fldl
mov
mov
inc
cwtl
dec
jmp
inc
xchg
lcall
adc
xchg
pop
bound
addl
mov
cmp
mov
movl
outsb
stos
xchg
jg
adc
jge
fcomp
mov
leave
bound
flds
dec
inc
inc
pop
add
and
dec
pop
xor
xchg
mov
or
mov
ljmp
fimuls
inc
stos
sbb
lea
out
jecxz
lcall
mov
lods
data16
lahf
repnz
push
enter
das
inc
or
inc
popf
ffreep
icebp
js
sub
push
dec
fs
jecxz
mov
mov
daa
xchg
cmp
inc
xchg
stos
add
in
lcall
stc
insl
push
push
stos
stc
sbb
and
sbb
jg
cmpl
jle
sub
sahf
and
outsb
faddl
mov
in
and
add
push
push
xor
push
out
faddp
cmp
or
mov
sbb
sub
adc
cmp
pop
adc
dec
ficompl
mov
mov
ja
adcl
dec
mov
jb
lret
sbb
pop
sub
enter
pop
sti
scas
sub
mov
or
or
dec
jae
and
dec
or
mov
leave
jmp
cmpsb
test
xor
mov
cmc
push
mov
leave
and
mov
pop
or
lret
push
fwait
pop
push
mov
dec
sbb
push
cmp
xor
imul
lods
mov
std
mov
fs
test
sarb
add
lods
scas
cmp
stc
cltd
xchg
push
lock
jle
inc
mov
pop
iret
rcr
sub
push
adc
dec
push
stos
popf
cmp
shll
push
add
pop
add
cmp
imul
mov
outsb
ljmp
mov
pop
mov
mov
adc
add
xchg
jle
leave
add
ret
xorb
test
sub
mov
push
ficomps
ficoms
data16
popl
jle
xchg
push
dec
dec
sti
push
imul
cmp
scas
sub
inc
cltd
loop
repnz
jmp
or
lcall
jbe
push
inc
pop
or
enter
lcall
popf
xor
repz
mov
loopne
loopne
push
dec
inc
adc
push
aam
xor
fimull
mov
std
jnp
mov
inc
pop
or
xchg
mov
mov
stos
push
add
dec
in
mov
add
sti
in
ja
daa
out
cmpsl
adc
ss
pop
mov
mov
inc
sbb
rcrl
pop
repz
and
and
inc
daa
daa
jno
dec
mov
adc
arpl
rcrl
ficoms
xchg
mov
stos
add
mov
insl
push
lahf
jno
pop
mov
jno,pt
inc
das
xchg
or
inc
jp
dec
sahf
mov
imul
loope
and
loopne
jp
lcall
adc
fisttpl
dec
in
add
daa
adc
push
je
lahf
or
idivb
mov
loope
lds
mulb
sbb
dec
jl
mov
sbb
in
clc
inc
pop
mov
mov
imul
dec
ret
ljmp
jo
cmp
pop
and
sub
jge
int3
cmp
sub
lds
fiaddl
dec
push
dec
fwait
outsl
cmpsb
addr16
cmp
and
adcb
pop
push
xor
jnp
call
filds
ljmp
cltd
das
cmc
cmc
pop
ss
xchg
stos
or
jecxz
cmp
imul
sub
and
xchg
xor
pop
stos
lret
rcrb
push
rolb
in
xchg
in
add
inc
sub
dec
push
push
push
fldenv
int3
rcrb
adc
jg
roll
mov
dec
andb
fldt
movsl
out
jae
les
mov
insb
mov
enter
inc
jne
lds
add
sbb
in
mov
add
and
mov
mov
cmp
push
jns
mov
adc
arpl
mov
mov
mov
sbb
jnp
jbe
fistl
mov
sub
mov
inc
mov
xor
push
in
std
outsl
ss
add
jle
das
add
inc
add
lds
out
les
mov
adcb
ds
mov
imul
adc
stos
test
add
adc
dec
and
fldl
ret
sbb
cwtl
add
add
std
cmc
jecxz
aaa
jmp
cmovge
gs
and
shr
add
repnz
bound
cmp
sub
pop
mov
push
inc
pushf
fwait
push
mov
xchg
jp
mov
mov
mov
aad
jnp
pop
stos
out
out
scas
push
cmp
inc
sub
lods
adc
rcrb
inc
lret
pop
push
jl
sub
icebp
or
xlat
sbb
adc
mov
jl
aas
jg
dec
adc
jmp
dec
dec
mov
push
and
jo
shll
push
stc
xchg
andl
jg
repz
fstps
mov
roll
add
dec
int3
xchg
js
and
mov
addb
iret
int
sbb
push
adc
inc
enter
mov
jle
inc
lock
subl
lods
mov
and
pop
imul
rorl
jecxz
or
dec
push
xchg
inc
arpl
push
xlat
and
bound
push
jbe
shll
jne
sbb
xor
jno
repnz
push
jle
dec
loopne
test
imulb
mov
cltd
movsb
push
shlb
arpl
jno
das
ljmp
mov
dec
dec
jmp
clc
leave
dec
jns
cmpl
mov
mov
pop
orl
and
mov
or
ror
pop
push
push
jecxz
arpl
push
int3
jecxz
add
out
fstps
pop
add
and
lret
loopne
mov
push
clc
das
ja
dec
movsl
scas
imul
push
jp
xchg
jmp
call
ret
push
mov
rcrl
mov
mov
push
outsb
popf
push
sbb
cmp
or
push
ss
std
xor
adc
cmp
test
rcll
mov
aas
loope
imul
mov
mov
mov
pop
mov
rcl
or
xor
in
mov
inc
int3
imul
mov
push
mov
shll
add
pop
subb
mov
dec
cmpsl
outsl
pop
mov
ss
aam
jns
test
mul
lahf
xadd
xchg
aaa
jge
popf
shl
lock
ds
pop
cltd
add
mov
frstor
iret
outsb
sahf
mov
mov
sub
push
sahf
xchg
add
add
inc
lcall
dec
imulb
sbb
enter
fisubrs
ret
ljmp
aas
jle
and
xchg
inc
ficoml
negb
inc
pusha
mov
mov
mov
test
fsts
mov
dec
mov
hlt
mov
movsb
pop
xchg
lock
and
aam
adc
or
adc
mov
jecxz
xor
jae
xchg
mov
pop
jns
mov
mov
pop
pop
adc
int
out
jns
test
push
push
cmpsl
mov
out
in
xchg
push
cmp
xor
sbb
jecxz
stos
pop
adc
xchg
cs
sahf
inc
dec
adc
push
ja
mov
stc
mov
mov
pop
cld
arpl
jno
std
mov
jmp
jb
push
cmpsb
mov
mov
mov
test
ret
or
rclb
fistl
fiaddl
les
jo
aas
stos
sbbl
out
cmpsb
enter
pop
stc
cmp
inc
adc
push
popa
mov
sub
jno
fstpl
cmovs
clc
cmp
jne
leave
in
cmpb
pop
cmp
fsubrl
sub
pop
add
pop
sub
dec
inc
lret
pop
sub
popa
out
xor
ss
pop
adc
dec
cmp
int3
pushf
mov
sub
and
hlt
xchg
push
mov
xor
mov
push
mov
push
sub
mov
pop
xchg
incb
cmpsb
orl
pop
xchg
pusha
mov
xchg
mov
fildl
or
loopne
sbb
dec
jb
pop
iret
aam
divl
stc
bound
dec
mov
sbb
mov
sti
jp
mov
je
loope
adc
sti
outsb
pop
adc
stos
dec
cmp
clc
shll
xchg
shrb
or
pushf
sub
ret
cmpsb
outsl
jp
mov
jecxz
cltd
std
sbbb
outsb
dec
pop
iret
jbe
inc
jno
sub
in
mov
add
dec
xchg
les
jbe
mov
mov
lea
cli
xlat
xor
sahf
lods
push
fnstcw
shl
ss
mov
inc
shll
mov
jnp
ja
mov
xchg
js
xlat
stos
adc
dec
arpl
shl
add
cmp
fabs
dec
add
add
xchg
push
mov
hlt
push
test
fisubl
xor
ficompl
xlat
xchg
bound
in
fdivrl
and
inc
lret
sti
js
cld
cs
xor
push
inc
push
mov
call
mov
and
shr
mov
fcoml
mov
jb
lock
lahf
push
mov
adc
adc
fs
sbb
mov
mov
push
arpl
jns
adc
loope
xchg
or
pushf
sti
sub
or
mov
bound
mov
pop
outsb
push
inc
add
nop
loop
cld
pop
inc
fwait
rcrb
aad
push
jge
in
test
insb
push
and
push
mov
add
and
xor
dec
dec
stc
xor
outsb
dec
loop
mov
inc
icebp
sub
lret
sub
sub
or
sub
enter
mov
out
xchg
push
and
fs
movsb
or
in
cmp
mov
jg
loop
sbb
adc
and
sti
loopne
and
or
push
pop
add
dec
jnp
into
fadd
dec
sub
pusha
sbb
sub
mov
sub
shl
mov
sub
jmp
pop
add
jl
int3
lock
mov
pop
xchg
lods
cmp
push
pop
jp
dec
and
mov
dec
cmc
adc
pop
test
mov
lods
push
ljmp
and
fs
js
mov
lret
loopne
dec
mov
pusha
push
scas
aaa
push
icebp
push
mov
pop
pop
es
add
int3
pop
ss
je
jge
les
mov
cmpsl
and
jp
jnp
inc
stc
pop
sti
pushf
xor
aaa
xor
je,pn
fdivs
push
push
cmp
add
fisubl
pop
sbb
loop
jp
adc
sbb
sbb
mov
sahf
pop
dec
jns
lds
out
outsb
aam
xchg
xorl
and
jmp
movzbl
rcrb
push
xchg
test
test
out
outsl
mov
xchg
fcompl
hlt
in
mov
pop
xchg
push
rcrb
mov
shlb
and
ja
xor
lahf
int3
pop
inc
xor
cmpsl
lcall
lea
xchg
fwait
lds
sub
cld
icebp
test
sbb
push
shlb
push
jg
push
test
push
add
cwtl
jg
or
gs
push
cwtl
xchg
addl
addr16
jp
push
ret
in
mov
xor
sbb
pop
fs
and
xchg
int
push
add
pop
cwtl
movsl
push
and
inc
mov
loopne
faddl
bound
adc
in
dec
addb
push
cmp
inc
lret
mov
int3
or
and
into
ret
mov
pop
jp
lea
sbb
cld
roll
les
or
dec
and
movsl
push
jl
inc
out
mov
sub
sbb
faddl
fcoml
mov
in
fwait
xor
adc
aad
jno
jne
lods
not
loop
push
sub
aaa
mov
pop
mov
mov
sbb
loope
pushf
test
dec
pop
repnz
adc
lods
pusha
xlat
shrb
fs
sbb
jecxz
ja
int
jecxz
mov
in
or
pop
cmpsb
sub
xchg
mov
lods
mulb
xor
dec
test
movsb
js
push
call
icebp
xchg
stos
icebp
push
pop
shl
xor
js
repnz
cs
sbb
xor
xchg
call
scas
cmp
sbb
ljmp
sub
mov
idivb
test
add
gs
mov
shl
fwait
scas
jg
mov
mov
pop
mov
jl
xlat
cwtl
or
das
int
mov
aam
clc
sub
enter
lcall
cmpsl
xor
adc
std
push
mov
add
lcall
addr16
scas
insl
sub
nop
in
out
mov
fdivrl
testb
inc
repz
lods
inc
orl
sbb
jbe
lods
adc
adc
xchg
testb
push
addr16
xchg
loope
and
rcl
out
adc
loope
mov
adc
jns
push
call
add
fnstsw
push
movb
pop
in
roll
or
dec
test
aad
imul
push
mov
divb
push
mov
cmp
mov
out
mov
sbb
xor
mov
out
repnz
aad
out
dec
out
aad
push
call
mov
pop
xor
or
jmp
add
push
aad
push
pop
xor
lret
jl
inc
mov
pop
mov
cs
call
mov
int
aad
jbe
or
dec
sub
mov
ljmp
jl
jno
dec
mov
lret
mov
jecxz
std
popf
mov
clc
jge
in
call
jo
out
sbb
cmp
ljmp
dec
loop
sub
push
mov
test
pop
subb
and
push
movsl
filds
arpl
popl
frstor
arpl
xchg
jle
sar
dec
es
pop
jnp
cmp
xor
movsb
dec
mov
dec
cmpsb
adc
sahf
jl
in
sub
adc
push
cld
and
ds
adc
adc
inc
enter
and
jl
daa
xor
pop
daa
xlat
mov
ja
mov
adc
mov
popa
test
loopne
jg
cmp
rcll
test
pop
pop
mov
push
lahf
imul
sbb
jnp
mov
pushf
pop
add
pop
push
sarl
mov
and
push
jecxz
jg
push
push
adc
dec
iret
push
inc
xlat
jne
mov
test
in
push
sub
aad
lea
shlb
or
xchg
xor
mov
xchg
mov
repnz
in
into
test
js
xchg
test
scas
sub
lret
je
sbb
mov
jg
clc
jnp
inc
and
and
aam
adc
push
fadd
cli
ret
mov
xor
enter
xchg
or
adc
or
movsb
xor
inc
aad
push
xor
sbb
adc
clc
mov
rcll
xorb
les
push
int3
jecxz
pusha
dec
add
repz
jp
push
das
scas
jno
xchg
sub
cmp
pop
and
xchg
cmp
or
jge
bound
push
pop
loope
aad
adc
jl
mov
push
into
add
dec
sub
add
scas
jmp
sbb
int3
xor
ljmp
cmp
jne
pop
dec
inc
ret
sub
stos
stos
dec
xchg
out
jle
pop
push
rcrl
pusha
dec
push
mov
in
int
pop
rclb
or
sub
ret
push
xchg
or
adc
cltd
pop
pop
push
dec
inc
and
mov
adc
not
jl
lret
bound
jp
jbe
push
dec
out
sahf
pop
or
dec
mov
dec
or
je
pop
inc
adc
xchg
icebp
daa
pop
push
mov
xchg
leave
sub
lret
inc
ds
mov
insl
outsb
sti
mov
xor
xlat
jno
push
test
xor
rcl
xchg
jge
sbb
xchg
cld
loopne
and
dec
mov
jo
xchg
notb
add
dec
in
shr
lahf
sbb
stc
mov
outsb
sub
add
ret
stc
pop
push
sub
mov
pop
cmp
push
or
bound
cld
and
dec
lods
lahf
orl
mov
movq
in
push
or
aad
jns
mov
mov
das
insl
pop
fbld
lcall
sbb
mov
cld
pop
mov
pop
add
cli
cmp
rorl
arpl
imul
fldcw
ror
mov
adc
mov
cltd
loope
dec
and
sbb
enter
xchg
cltd
outsl
or
jns
mov
cwtl
jne
inc
jo
into
xor
dec
pop
add
jbe
pop
or
xchg
mov
sbb
orb
mov
and
push
push
or
out
mov
mov
lea
outsb
jle
test
adc
mov
xor
les
lods
mov
dec
xchg
aaa
icebp
pop
xchg
ret
int3
cwtl
adc
mov
cmp
push
inc
sub
and
cltd
pushf
bound
jp
insb
mov
jns
jns
pop
dec
inc
int3
mov
xchg
out
adc
lret
inc
test
js
jo
lock
xchg
ret
fiadds
divl
xchg
sarb
pop
not
bound
ficoms
call
aam
mov
jbe
pop
cmpsb
pop
mov
mov
or
mov
xchg
jl
push
inc
pop
outsb
fcompl
fidivl
and
add
test
lds
lcall
lods
sub
inc
pop
xchg
fxch
jne
push
arpl
mov
fdivp
cmpsl
scas
das
sbb
and
sub
pop
js
mov
js
lds
arpl
add
cltd
sub
ss
into
fidivl
in
rcl
cmp
jne
and
jl
jge
enter
in
inc
ja
push
jmp
mov
ds
xchg
pop
icebp
mov
xchg
pop
les
out
and
mov
bound
pusha
hlt
iret
aam
rclb
data16
xor
mov
dec
jl
dec
mov
bound
pop
js
add
shrb
xchg
inc
pause
out
adc
push
sbb
mov
sbb
sub
in
mov
cmp
inc
popa
out
cmp
insl
add
mov
std
sbb
hlt
cmp
sbb
rcrl
pop
jge
fistps
stc
dec
xor
ja
rcll
int
lods
inc
adcb
xor
add
insb
into
adc
inc
inc
lods
iret
pusha
cmp
push
cmpsb
cs
sub
jo
pop
cmp
xchg
ljmp
add
push
or
add
insl
push
lods
test
lods
jl
sar
push
mov
out
push
setne
test
aas
lods
movsb
add
xor
xchg
fcomip
jp
inc
inc
cld
iret
jle
adc
cmc
fdiv
int
lock
fldenv
scas
sti
icebp
jecxz
insb
imul
shl
orl
ret
adc
jo
sbb
mov
lret
clc
xlat
adc
int3
mov
or
mov
lods
rcr
push
jno
add
pop
fisttpl
loop
jg
js
jbe
add
sub
std
dec
fs
pop
pushf
pop
pop
jecxz
jmp
dec
sub
imul
inc
or
ja
inc
xchg
stos
and
jo
and
dec
sub
push
jne
sub
outsb
xor
addb
inc
lahf
sub
outsl
inc
call
mov
cmp
xchg
dec
stos
sub
pop
popl
sub
sub
mov
pop
int
dec
push
repnz
xor
push
jo
imulb
pop
pop
xorl
and
sahf
mov
cmp
jecxz
or
dec
mov
sub
pop
cmpsb
adc
xchg
aas
in
shlb
adc
loope
xchg
pop
pop
mov
jb
sbb
jle
mov
dec
imul
xchg
imul
roll
repnz
out
xor
sbb
fcomi
dec
popa
adc
daa
in
fiadds
push
push
mov
push
iret
test
jmp
cs
sub
roll
mov
mov
and
inc
or
sub
insl
sub
inc
xchg
jbe
inc
and
inc
ljmp
cmp
xchg
jnp
lcall
fisubrl
sub
cld
daa
in
fidivrl
and
mov
add
in
cmpsb
mov
dec
xchg
data16
and
lods
ljmp
aam
ja
dec
mov
push
dec
cmp
and
jb
and
sbb
shll
cmpsb
ljmp
mov
iret
scas
pusha
out
pop
xor
ret
push
shrb
cld
xlat
sbb
jo
jl
inc
aad
sub
or
sbb
cmp
mov
scas
cltd
jle
xor
ljmp
mov
int
mov
into
ja
sbb
xchg
push
incb
ret
dec
fcmovb
dec
in
adc
fsubp
sbb
mov
inc
adc
inc
mov
das
push
je
icebp
loope
lods
lcall
clts
pop
mov
test
aam
sbb
inc
mov
fsub
int3
je
or
sahf
inc
pop
aad
rcll
leave
pop
xor
xor
lcall
nop
stos
aam
pop
push
or
jp
mov
or
push
daa
jno
subl
adc
adc
fwait
sub
mov
fisubrs
xchg
xlat
cmp
inc
mov
mov
mov
xor
add
dec
mov
jns
mov
jg
cmp
mov
mov
mov
lds
lock
xor
jns
loope
mov
jecxz
repnz
pop
push
std
int
sbb
clc
int3
ficoml
or
inc
lea
in
fdivrl
mov
aaa
mov
rcr
in
test
push
cmp
dec
xchg
lret
push
inc
aas
test
mov
fwait
cmp
test
jge
mov
ljmp
jbe
test
dec
adc
mov
or
xor
fstpt
or
cwtl
repnz
clc
ret
jmp
call
dec
cwtl
pop
jb
orb
out
sbb
mov
push
mov
lea
pop
imul
ret
and
incb
sbb
sbb
inc
pop
sub
jp
sti
sub
int
arpl
and
stc
xor
lods
fistps
cmp
into
pushf
les
lea
sbb
loop
push
dec
sub
push
into
leave
add
lcall
add
pushf
call
inc
loop
mov
jl
jmp
mov
sub
pop
es
mov
repnz
xchg
lahf
dec
cmp
movsl
cld
inc
sbb
testl
std
sub
lret
push
fwait
xchg
sysret
scas
imul
les
dec
js
bound
pusha
and
sbb
dec
pop
push
ja
cld
sti
xchg
bound
addl
pusha
fwait
ljmp
and
ficoml
out
nopl
stos
push
loop
sti
or
aas
aas
stc
into
inc
mov
scas
sbb
bound
and
rorl
mov
hlt
xor
push
ficoms
jno
xor
mov
xor
xchg
mov
jo
mov
mov
xor
sbb
scas
ljmp
xor
insl
sbb
cmc
bts
bound
call
push
dec
adc
sbb
jl
and
in
addr16
jecxz
ds
sub
xchg
mov
push
push
gs
push
cmp
mov
je
pop
add
push
pop
pop
cmp
or
mov
add
nop
fnstcw
loopne
push
add
insb
lcall
lahf
decl
or
jno
dec
in
xchg
lock
lret
dec
and
jbe
out
jle
sbb
fdiv
push
ret
dec
out
mov
ljmp
mov
mov
xchg
push
push
jmp
jle
add
pop
pop
push
pop
pushl
mov
dec
dec
ds
fsts
jle
cmp
and
fstl
mov
dec
enter
cmpsl
xchg
xlat
dec
jmp
outsl
inc
ja
nop
sub
scas
fistps
add
out
js
bound
sbb
cmp
mov
rcll
or
sbb
push
jle
adcl
pop
adc
xchg
in
mov
das
mov
xchg
pop
popa
ds
idivb
and
pop
mov
mov
fsubrs
jno
dec
das
pop
shlb
es
jecxz
sbb
pushf
cmp
cwtl
shl
movsb
sub
pushf
dec
mov
sbb
cmp
mov
adc
mov
sub
fists
outsb
mov
daa
insl
push
jle
mov
jbe
or
mov
inc
cld
xchg
inc
fildll
or
push
adc
cltd
loope
mov
jle,pt
enter
cmp
mov
scas
xchg
push
aas
mov
ds
sti
loope
push
leave
or
mov
mov
push
mov
pop
mov
lret
aas
bound
rcrb
jp
jecxz
mov
addl
xchg
mov
dec
es
xchg
push
inc
test
ljmp
and
or
in
dec
jg
cli
ret
jns
xor
sbb
push
int
jecxz
sub
cmpsl
push
lret
repz
sarl
mov
mov
mov
mov
mov
into
mov
pop
pop
xchg
in
mov
out
jo
adcl
push
push
repnz
icebp
push
pop
mov
xchg
xchg
std
cmp
push
inc
mov
or
jno
cwtl
pop
mov
jl
in
xor
pop
add
mov
pop
and
push
pop
add
push
mov
xlat
clc
leave
jle
pop
cmpsb
aaa
push
mov
jne
popf
sahf
into
mov
pop
shrl
aad
loop
cmp
test
ret
push
cltd
xor
divl
push
jg
pop
aam
cmpsl
popa
ret
addr16
out
mov
rorb
movb
sub
insl
test
adc
dec
fnstenv
into
lahf
mov
andl
or
and
test
dec
sbbb
or
sub
pop
pushf
sub
mov
push
mov
out
outsl
gs
xor
cmp
in
xchg
pop
ljmp
pop
lods
bound
and
jbe
or
aaa
mov
ret
pop
dec
movsl
add
aad
cmp
mov
push
fdivs
sarb
leave
dec
out
lea
push
std
lcall
jle
ds
inc
testl
lods
mov
aas
cmp
xor
pop
dec
jmp
mov
movsb
outsl
mov
fcompl
push
es
or
add
jno
xor
xchg
repz
cmp
dec
sbb
xchg
xchg
pop
pop
ljmp
push
stc
push
imul
int3
fisttps
fcoml
lock
inc
lret
sbb
xchg
xor
out
cmp
push
mov
jle
rol
fsubrs
xchg
sub
lds
cmp
mov
cmp
mov
shrb
jns
stc
out
xlat
jns
or
mov
dec
jp
sbb
pop
dec
sbb
iret
rorl
xchg
jecxz
dec
jb
jne
mov
lret
adc
out
xchg
into
mov
pop
xor
xor
gs
jo
inc
cs
mov
pusha
gs
xor
dec
xor
add
sbb
ds
cmpsl
daa
sbb
mov
movsl
stc
mov
inc
push
or
scas
sub
or
iret
push
call
movsb
mov
mov
mov
fwait
shl
push
hlt
sbb
xor
pop
psadbw
sbb
pop
xchg
movsb
mov
mov
outsb
out
sbb
pop
jno
outsl
adc
inc
mov
mov
lahf
and
bound
rorb
lret
popa
notb
aam
test
gs
mov
ljmp
xor
scas
cmpsl
mov
lods
je
out
and
sub
ret
push
aaa
pop
pop
jmp
rcl
sub
test
xor
int3
sub
xor
jge
in
inc
xlat
and
ret
and
sub
jmp
rcl
mov
mov
insl
and
mov
dec
adc
int
inc
mov
fisubs
les
sbb
xor
hlt
pop
fwait
pop
sbb
adc
insb
push
mov
int
mov
dec
sahf
pop
outsl
subb
pop
imul
ljmp
or
jno
adc
adc
leave
repz
shl
aam
push
bound
in
push
and
dec
jge
sbb
into
or
xchg
mov
inc
lods
mov
dec
cmp
lods
cltd
and
stc
jmp
and
or
loopne
sub
inc
cmp
push
inc
rclb
cwtl
mov
sub
mov
push
lahf
push
jg
das
push
test
fnstcw
mov
xor
mov
pop
pop
in
ja
loope
pop
lret
outsl
das
jmp
sub
aaa
movsb
adc
push
sub
jne
push
and
push
fildl
enter
push
sbb
dec
aas
fwait
shrb
xchg
icebp
fsubl
cli
cmpsb
out
xor
mov
adc
loopne
aas
in
adc
sti
cmp
mov
add
cmp
movl
inc
int
xchg
fistps
xchg
jle
dec
out
cltd
sti
imulb
stos
and
add
and
fimuls
fidivrl
pop
adc
movsl
or
adc
int3
mov
inc
mov
std
lahf
mov
insl
pop
push
xlat
mov
insb
out
imul
xchg
lea
mov
lahf
dec
sub
and
ja
cwtl
or
jno
mov
mov
add
or
push
pop
sbbb
or
push
sub
fsubl
aas
lret
icebp
test
mov
fcomps
xor
mov
mov
mulps
adc
add
push
dec
stos
xor
push
inc
or
arpl
cmpsb
lea
jecxz
mov
pop
sub
jp
imull
mov
pop
lds
repz
inc
gs
cs
in
xchg
das
iret
cmp
stos
push
rolb
sbb
xor
test
pop
xlat
mov
adc
sub
repz
pushf
out
pop
or
mov
scas
add
rcrb
adc
jecxz
mov
arpl
jmp
lret
push
xchg
fistpll
mov
xchg
push
and
cmp
adc
loope
pop
xor
mov
sbb
xor
sbb
imul
jnp
dec
inc
mov
ljmp
int3
xchg
icebp
in
add
or
fsts
movsb
test
mov
or
enter
mov
lret
test
loop
mov
scas
add
out
mov
rcrb
lcall
adc
dec
frstor
mov
and
ds
aas
test
jnp
pop
cmp
rolb
add
pop
scas
popl
ja
data16
sub
andb
ja
push
clc
rcll
out
scas
push
ja
or
mov
cmp
add
mov
push
lcall
sbb
push
cmp
iret
subb
imul
adc
push
push
push
fs
adc
das
xchg
sub
xor
push
cmp
shlb
insb
add
cmp
push
test
stos
cwtl
pop
sub
mov
adc
push
call
sbb
hlt
movaps
das
mov
push
sbb
jmp
inc
mov
rorl
mov
bound
data16
jp
push
lret
add
int
gs
fs
movsb
adc
dec
sub
cli
loopne
aam
jmp
daa
mov
inc
jae
dec
test
flds
icebp
movsb
call
adc
stos
mov
sub
call
outsb
lret
mov
movsl
repnz
enter
cmp
xor
call
pop
adc
in
mov
js
faddl
shlb
leave
adc
sahf
clc
pop
insl
aas
cwtl
inc
mov
add
mov
lock
ljmp
mov
aam
adc
nop
movsl
hlt
in
loop
cmpl
lahf
adc
out
mov
xor
jnp
aas
jg
mov
adc
or
mov
iret
test
mov
rol
jb
jno
mov
xor
cmp
xor
pop
loop
pop
mov
imul
add
lcall
outsl
les
jg
mov
mov
jno
xorb
jecxz
pop
aaa
xchg
dec
fsubs
arpl
push
sti
dec
cmp
xor
xchg
gs
fiadds
int
dec
shll
mov
les
loop
dec
or
jnp
fcomip
arpl
and
test
lock
xchg
in
mov
xor
adc
sbb
scas
and
mov
mov
cltd
push
or
dec
sbb
pop
int
popa
xchg
xchg
fcmovu
jae
add
xchg
fisubs
repz
jnp
cwtl
out
adc
cld
aad
and
xchg
cmc
xlat
sub
idivb
lret
popa
lock
mov
xchg
aaa
cld
fistps
adc
xorb
pushf
jno
pop
sbb
ret
ret
nop
rcrb
sbb
out
mov
fcom
in
and
fdivl
in
mov
arpl
cs
jbe
adc
leave
add
mov
sub
pshufw
push
xor
add
out
in
xchg
cli
pop
orb
add
fidivrl
test
arpl
adc
adc
push
adc
mov
orb
mov
fisttpl
push
inc
aad
pop
mov
mov
jbe
mov
das
xchg
lds
push
lcall
jmp
mov
jae
out
xor
mov
clc
cld
cs
insl
out
jmp
rcr
pop
test
lea
int
or
outsb
es
jecxz
sbb
div
das
inc
jnp
dec
clc
add
sbb
adc
add
mov
and
call
sbb
sbb
je
mov
leave
xchg
dec
sub
js
push
inc
sbb
and
xlat
mov
lods
incb
clc
frstpm(287
insb
fisubl
jo
xor
lods
pop
adc
lcall
cmp
cltd
xchg
or
sub
icebp
lcall
cmp
das
out
jns
std
setp
stos
push
int
mov
in
scas
call
arpl
mov
cli
push
insb
dec
sbb
loopne
test
jmp
dec
inc
mov
dec
rolb
and
mov
push
push
cmp
dec
push
xor
sub
in
iret
outsl
stc
mov
aam
xchg
in
dec
jmp
jp
xchg
jo
mov
jbe
les
out
mov
stos
xor
sbb
pop
bound
cmp
xchg
cld
incb
fnstsw
int
cmp
jle
mov
push
out
jae
mov
jo
and
mov
fsubrs
stos
mov
xchg
mov
out
pop
xchg
xchg
adc
lret
lock
sbb
hlt
stos
stc
mov
hlt
stc
lahf
popa
jge
adc
mov
cld
jae
mov
push
pop
xor
mov
xchg
xor
pop
dec
lea
imul
daa
mov
stos
pop
and
jecxz
lods
std
int3
jb
es
and
sarb
js
mov
insl
mov
lods
cmpsb
push
loope
pusha
pop
add
and
outsl
cltd
lea
inc
je
iret
or
cmp
add
jo
test
lock
add
mov
mov
mov
lahf
mov
xor
test
push
mov
cmp
ja
idivb
shrl
dec
xor
or
mov
cli
add
or
inc
inc
cwtl
mov
js
hlt
jl
xchg
pusha
jecxz
mov
fdivrp
push
mov
aaa
call
xchg
test
jmp
mov
jmp
xchg
lds
int3
xor
fisubrl
daa
pushf
mov
cmp
lcall
push
inc
lret
outsb
clc
mov
js
and
fnstenv
xchg
xchg
ror
mov
loope
movsl
out
jge
data16
out
jb
mov
dec
idivl
test
fldcw
mov
jge
push
push
subl
push
sbb
sub
addr16
pop
or
add
push
movsb
arpl
ljmp
lret
pop
popf
xor
pop
xchg
jne
dec
cmp
or
push
mov
inc
scas
sbb
test
xlat
pminub
stos
int
mov
sub
xchg
sbb
add
sub
fisttps
or
or
je
clc
jge
xchg
dec
sub
jbe
aaa
addb
inc
das
cmpsb
push
cmp
dec
aaa
mov
xor
dec
test
dec
sahf
mov
les
sbb
pop
scas
fildl
push
adc
addr16
movsl
roll
mov
dec
subl
pop
fildll
in
jbe
sbb
cmp
jg
outsb
add
in
sbb
jge
gs
pushf
xor
ret
lods
sub
sub
in
orb
popf
loope
mov
mov
add
in
js
add
jle
test
orb
addb
mov
js
aaa
push
jge
es
daa
int
or
sbb
xchg
xor
cmpl
cmp
loope
fldt
xchg
cmp
fs
cltd
sti
das
aad
stos
ds
xor
or
and
dec
jbe
mov
in
lret
add
cmp
into
ds
pop
addr16
nop
mov
adc
imul
mov
or
iret
ljmp
jmp
pop
sbbb
clc
lods
sbb
rol
push
je
mov
mov
inc
adc
sbbb
sahf
fdiv
in
fimull
lahf
mov
and
mov
sub
ss
push
inc
mov
jns
loope
xor
add
imul
int
jmp
mov
test
dec
fwait
icebp
into
pop
ret
xchg
mov
xor
cmp
mov
mov
xchg
jmp
insl
cmpsl
xor
shlb
ret
fstpl
add
lret
ds
aaa
xchg
jle
loope
sahf
xchg
insl
adc
jg
push
imul
jns
jno
cld
data16
mov
mov
push
out
and
xor
mov
out
pop
cmpsb
mov
xor
cmp
inc
adcl
call
dec
or
jnp
stc
mov
mov
aam
xor
pop
int3
xchg
pop
popf
push
test
pop
aad
pushf
rcrl
mov
arpl
or
out
pop
ja
fstpt
jmp
lods
pushf
scas
pop
xor
push
mov
jmp
mov
mov
mov
push
sub
lock
fildl
hlt
push
cmpsl
clc
test
lcall
fnstenv
call
in
popf
aad
daa
gs
nop
nop
adc
xchg
loop
aas
adc
sub
push
lcall
push
pop
jb
xchg
xorl
mov
and
jle
inc
movsl
aas
adc
mov
in
sbb
add
in
pop
andl
out
outsl
xchg
imul
pop
dec
jle
ret
xor
xchg
cs
jb
mov
add
aad
out
pop
fidivs
jnp
mov
adc
sub
lods
and
out
sti
clc
pop
or
xchg
std
inc
stos
mov
mov
and
test
and
icebp
inc
stc
sub
repz
mov
jp
mov
jmp
inc
gs
xchg
xchg
push
scas
xlat
jne
xchg
inc
mov
pop
cld
cmpsl
roll
add
cmp
out
arpl
sub
sarl
or
subl
lret
pop
mov
push
in
xchg
xchg
cmc
cmp
inc
jmp
scas
out
cmp
cli
pop
mov
hlt
adc
fistl
pop
fwait
nop
out
or
lds
ficoml
cmp
mov
add
test
cld
adc
pop
out
xchg
dec
cld
add
fcmovnb
xchg
test
fdivrp
xchg
xor
fsts
jl
shrb
dec
inc
std
roll
lds
adc
test
jg
fdivp
add
adc
pop
in
push
jle
stos
inc
jge
out
mov
ja
xchg
push
aas
lret
aam
into
push
or
push
stos
mov
mov
int3
push
mov
push
lods
mov
jecxz
sbb
hlt
push
push
xchg
pushf
mov
xchg
cmp
push
popa
cmp
push
dec
and
sbb
fsubs
imul
out
mov
adc
push
int3
inc
sub
inc
das
mov
mov
aad
std
and
xor
lahf
dec
iret
hlt
das
idivb
fists
jg
jle
dec
int
std
mov
mov
out
icebp
push
gs
ja
mov
mov
lods
ret
nop
xlat
or
adc
fistpl
mov
add
mov
je
cmp
insl
push
or
sbb
cmpsb
and
inc
mov
cli
jmp
sbb
lret
add
jl
scas
call
adc
and
or
adc
cmp
lret
xchg
hlt
or
daa
sbb
xor
sti
cli
mov
aaa
add
das
mov
rcll
pop
sbb
fcmovnu
fcmovnb
stc
and
bound
negl
jl
insl
movsb
mov
movsl
repz
stos
in
or
jmp
mov
loope
fcom
push
push
int
mov
cld
push
stos
adc
daa
hlt
add
pop
out
cmc
aad
and
xor
mov
cmc
push
dec
inc
fists
lods
insb
xlat
jno,pt
pop
push
add
or
inc
adc
or
inc
or
loopne
sub
pop
push
sarb
xor
jne
sub
cmp
aaa
push
aaa
in
jecxz
scas
sub
cmp
aad
kortestb
sbb
pop
sbb
idivb
sbb
mov
sbb
add
test
ret
dec
ljmp
and
cltd
movsb
movsl
xor
aam
fwait
fwait
outsb
or
sarl
push
mov
push
sub
ja
or
outsl
nop
adc
aad
in
push
xchg
dec
mov
gs
jae
les
jg
push
sbb
ljmp
pop
nop
xor
stos
imul
jae
jl
out
js
test
scas
push
icebp
mov
in
sub
xor
xchg
pop
int3
cmp
mov
je
int
nop
movsb
mov
jl
xchg
dec
or
shlb
xor
pop
ret
adc
jbe
fwait
adc
push
ss
testb
xchg
adc
pop
popa
inc
gs
or
xlat
int
ficomps
imul
stc
or
and
mov
stc
ds
jg
negb
pop
push
daa
andl
jne
jmp
cli
icebp
xor
sub
out
cmp
adc
cmpb
out
cs
sbb
lods
dec
out
jne
pop
ds
cmp
push
cmp
inc
into
in
mov
sub
or
gs
xlat
add
fcoms
jl
outsb
cwtl
mov
movsb
aad
push
out
test
scas
cmpsb
inc
cmp
mov
cmc
int3
jnp
sahf
test
repnz
test
lcall
or
outsb
in
push
bound
xchg
loope
and
int3
xor
sbb
push
ret
push
ss
push
repz
rclb
in
jmp
pop
dec
lret
test
push
jg
int
aaa
inc
inc
adc
idivb
icebp
inc
pop
pop
lea
ret
outsb
clc
pop
sahf
pop
cli
and
aaa
or
int3
insb
xchg
bound
bound
mov
lea
jg
mov
in
mov
test
into
movsb
arpl
push
cmc
xchg
test
ljmp
jge
cli
fbstp
inc
pop
ss
lods
jnp,pn
mov
push
xchg
loopne
mov
std
ficoms
lahf
movsl
daa
add
dec
jg
cs
adc
fadd
and
xor
sbb
lods
xlat
mov
fisttps
or
mov
cmp
stos
sbbl
sbb
sub
cmpsb
push
xor
push
das
mov
sbb
nop
sub
leave
fwait
ss
or
or
mov
cwtl
insl
xchg
adc
div
mov
rolb
dec
int
divb
scas
pop
push
xor
enter
sub
cmpsb
and
dec
pop
and
adc
push
cmp
push
das
mov
cmpsl
jo
inc
fsubrl
dec
lahf
js
lahf
jb
stos
mov
shrb
arpl
ret
scas
cmp
ret
shlb
ret
pop
cli
mov
inc
fists
push
out
mov
mov
test
cmp
cmpsl
inc
imul
ds
push
xor
push
push
mov
push
pop
js
cmp
adc
mov
je
cmp
xchg
lahf
add
or
cmp
in
jnp
mov
lods
xchg
cmp
jns
js
rorb
mov
dec
sub
fcomps
icebp
inc
lcall
rcll
dec
or
call
into
mov
imul
test
sub
imul
mov
mov
xchg
pusha
cmp
mov
or
divb
sub
adc
inc
test
jne
jns
clc
add
xor
xor
add
xchg
sti
mov
jl
mov
or
icebp
sub
adc
fstps
jne
js
adc
imul
push
cli
jl
add
sbbb
lret
jecxz
dec
repz
bound
icebp
orl
les
loopne
xor
stos
stc
js
xchg
ss
xor
sti
ds
or
addb
mov
femms
insb
pop
push
sub
test
popf
je
pop
fcmovbe
stos
xchg
xchg
insl
lahf
mov
sahf
adc
lahf
dec
lcall
xor
cmp
lods
sbb
sub
sub
mov
ret
mov
aad
sbb
stos
dec
or
aam
push
xchg
mov
std
in
mov
add
sti
xchg
std
mov
ret
adc
stc
add
xor
xchg
bound
mov
stos
loopne
adc
stos
insb
fld
jecxz
outsb
daa
sub
push
fsts
mov
popf
and
xor
pop
push
push
jne
dec
rcrl
push
xor
push
and
clc
and
pop
xchg
adc
inc
pop
jmp
stos
imul
test
test
test
stc
arpl
adc
push
icebp
push
out
nop
pop
mov
pop
pop
mov
ret
xchg
jmp
dec
aad
push
inc
mov
icebp
push
mov
jmp
cmp
hlt
adc
fwait
ds
imul
icebp
jbe
mov
loope
cmpsl
mov
sub
nop
or
jmp
jl
push
repz
inc
jnp
popf
ds
mov
push
xchg
negb
fucom
pop
je
iret
mov
xor
lret
add
fneni(8087
shrb
shrl
test
mov
mov
sub
icebp
aad
sub
ficoms
outsb
jne
pushf
mov
xchg
dec
xchg
cwtl
or
xor
push
mov
xchg
stc
rcll
inc
inc
shlb
lcall
xchg
dec
pop
mov
and
add
or
cwtl
xor
mov
into
dec
mov
shlb
jmp
jp
jg
movsb
test
lret
outsl
xor
adc
insb
iret
dec
mov
xabort
add
loope
xchg
fcmovne
arpl
jno
jecxz,pn
adc
shll
mov
clc
aas
lret
push
out
leave
mov
add
mov
jmp
std
pop
repz
sbb
pushf
lret
mov
jnp
push
jle
jmp
ror
xor
movsl
pop
mov
pop
push
sbb
inc
jns
sysexit
xor
arpl
pop
shlb
push
bound
cmp
dec
mov
xchg
mov
mov
lock
push
pop
xchg
jns
insl
cs
or
mov
pop
push
addr16
pop
lcall
jmp
stc
bound
pop
out
inc
and
and
mov
clc
lret
inc
sub
xchg
ljmp
outsl
insb
mov
push
imul
cmpsl
imul
add
xchg
imul
mov
out
popa
and
adcb
inc
lea
dec
and
aaa
mov
sbb
jo
cmp
sbb
aaa
jne,pt
pushf
push
fmull
sbb
xchg
mov
cmp
fadds
mov
cmp
push
mov
pop
pushf
mov
sbb
inc
notb
out
enter
das
fdivr
enter
add
cmp
out
cltd
push
and
fsubrl
aad
in
in
popa
daa
jns
orl
dec
loopne
addr16
ja
shlb
or
and
imulb
mov
push
aaa
popf
inc
fcomi
xchg
cmp
inc
insb
pop
cmp
jecxz
fadd
jmp
in
sti
adc
xchg
dec
inc
pop
int
dec
push
fimuls
mov
cmp
jbe
mov
fisttpll
mov
das
lock
cli
aas
test
dec
js
test
lret
inc
insl
sub
mov
out
sbb
push
push
pop
pop
adc
test
lock
sti
in
and
cli
std
jl
mov
lcall
pushaw
xchg
popa
jb
cmpsb
or
aas
inc
test
push
mov
jbe
jmp
mov
sbb
dec
push
test
std
or
je
lahf
std
add
pop
or
outsl
ljmp
mov
testl
push
imul
sbb
mov
mov
popf
inc
xor
pop
inc
mov
std
bound
dec
adc
xor
aad
pop
cmp
das
jmp
xchg
out
and
hlt
icebp
dec
xor
cmp
mov
shrb
jmp
andl
and
nop
andb
mov
repnz
data16
test
das
or
sbb
jb
or
jle
cld
cmp
ret
out
pop
mov
add
dec
cld
cmp
out
stos
xchg
ja
test
push
and
int3
mov
out
out
test
lret
xlat
cld
adc
adc
lret
stos
cmpsb
jo
fadds
pop
add
jnp
nop
lret
jnp
movsl
movsb
dec
pop
notb
std
test
push
jb
fnsave
pusha
mov
and
push
dec
jecxz
cmp
cmp
pop
testb
insl
fcoml
jmp
scas
bound
int3
jge
sbb
cli
mov
xlat
push
dec
inc
shrb
js
or
mov
xor
add
pop
push
jmp
push
lcall
and
sub
dec
rcrl
sti
jb
adc
test
mov
dec
cmp
inc
adc
enter
jl
out
lahf
sbb
jecxz
dec
jle
pusha
jns
xchg
push
inc
ret
push
jmp
sbb
jp
test
sub
mov
fidivrs
mov
arpl
push
shll
jmp
in
sub
lahf
cmc
jo
cmp
mov
js
dec
xchg
mov
pop
movsb
add
jno
mov
adc
adc
addr16
jle
cmc
push
fdivs
pop
roll
shll
push
fldt
adc
pop
push
ss
add
outsl
pop
mov
outsl
icebp
stc
mov
mov
daa
loope
adc
les
dec
pop
cmp
adc
jge
sub
idivb
xchg
orl
in
ljmp
dec
jg
fwait
inc
lock
fisttpll
rorb
test
test
xchg
movsl
jle
outsb
pop
insl
rorl
push
or
ret
lods
int3
mov
adc
mov
add
shrd
cltd
mov
inc
mov
mov
mov
movl
pop
cld
add
fiadds
or
nop
pop
pop
out
xchg
sub
ss
push
and
fiaddl
or
mov
xchg
aas
pop
inc
std
fistpll
sub
sub
daa
add
and
imul
push
mov
xchg
into
lret
pop
mov
shrb
cmc
jns
sbb
imul
sub
divl
push
inc
pop
jg
movsb
mov
mov
xchg
je
mov
loop
add
mov
lret
pop
imul
inc
or
mov
jbe
jmp
mov
scas
mov
mov
outsb
sbb
xchg
nopl
in
int3
xor
xor
movb
mov
pop
jmp
mov
add
das
add
add
shlb
arpl
sub
push
lcall
push
add
in
pop
or
jp
orb
add
arpl
fldcw
jge
aad
mov
or
out
fsubr
push
mov
fstl
fadd
inc
or
mov
test
push
pop
js
jo
mov
out
push
popf
sub
into
in
push
mov
paddw
in
pop
in
ficoms
lods
lock
jbe
add
lock
xchg
jp
xchg
pop
fs
cmpsl
sub
mov
push
mov
ja
cltd
cld
fidivl
insl
inc
in
jl
nop
aas
enter
neg
stos
int
movsl
push
mov
das
mov
push
xor
adc
jbe
or
push
in
outsl
xor
push
dec
xor
xchg
sarb
pop
adc
outsb
mov
mov
push
dec
loop
in
pop
sub
lods
mov
mov
shlb
cltd
mov
inc
pop
jecxz
cmp
lds
cmp
lods
adc
sahf
dec
ss
xchg
xlat
xor
js
mov
xor
lcall
int3
out
add
popa
mov
clc
rcl
cld
arpl
adc
in
loope
leave
rcll
push
mov
pop
lahf
stos
mov
ljmp
sbb
cmp
sub
bound
in
sub
mov
pop
fs
pop
adc
or
pushf
shlb
dec
mov
sbb
adc
sub
leave
outsl
ror
imul
fisttps
outsl
push
pop
outsl
aad
or
xor
mov
aam
in
cmpsl
in
lea
bound
outsl
test
into
mov
stc
pusha
movl
scas
xchg
add
jae
insl
and
cli
jmp
aam
dec
flds
or
mov
xchg
or
jno
dec
out
aaa
aam
int
mov
dec
shr
mov
or
bound
add
xchg
daa
jbe
idivl
jp
jge
and
repz
adc
mov
in
orl
xchg
push
pop
xor
ds
es
inc
push
aaa
inc
fs
sub
lret
je
mov
pop
adcb
push
mov
ret
mov
push
pop
xor
pop
pop
mov
je
push
lret
and
test
std
je
ret
lock
in
mov
bound
push
push
jnp
aad
adc
xchg
das
loop
fs
test
mov
jg
insb
repz
pop
add
xor
mov
jmp
hlt
les
push
or
int3
jns
push
aas
sub
and
xor
jb
sub
dec
ret
ret
std
js
cwtl
pusha
movsl
jecxz
jecxz
dec
pop
arpl
xor
pusha
cwtl
push
mov
pop
popf
push
and
cli
jnp
mov
clc
or
pop
outsl
cmc
cmpsl
pop
push
mov
pop
xorl
call
outsb
dec
add
sbb
xor
inc
add
and
xor
cmp
arpl
in
mov
pop
scas
mov
xor
mov
pop
xchg
in
lahf
jbe
lcall
cmp
push
insl
int
add
and
xor
xchg
mov
and
inc
cmp
sahf
sbb
das
cltd
lret
rcrl
push
jp
sti
shll
shl
add
ficomps
test
lea
int3
cmp
pusha
dec
incb
pop
into
xor
xor
mov
mov
jns
mov
cltd
popa
or
mov
testl
call
cmp
mov
insl
sub
mov
mov
cmpsl
mov
pushf
data16
pop
sbb
test
or
ss
or
stc
cbtw
jg
and
sbb
dec
lods
stos
push
mov
lahf
jae
inc
adc
out
ss
jb
arpl
in
lcall
xor
jge
jo
add
sub
xlat
mov
loope
addl
xchg
ja
rcrl
mov
test
insl
pop
and
cli
dec
mov
mov
sbb
xchg
and
les
jno
aaa
push
ds
loopne
jg
hlt
movsb
sub
jl
mov
add
xchg
push
pop
subb
lds
mov
mov
pop
adc
jle
lock
jnp
test
ss
jecxz
stc
mov
andl
outsl
and
ja
sbb
and
shll
fmull
aam
dec
shlb
into
adc
mov
mov
outsb
inc
push
fldt
push
out
xlat
push
cmpb
pop
push
out
mov
dec
xchg
jmp
add
mov
jp
inc
fimuls
std
clc
sub
cmpl
mov
gs
loopne
mov
popf
sahf
lods
call
sbb
push
or
imul
mov
les
dec
or
sbb
cmp
mov
inc
hlt
fsubl
jnp
pop
outsb
roll
cli
scas
in
jp
push
dec
xor
xlat
pop
fldenv
sub
push
jb
dec
pop
and
cmovs
fbstp
shrb
ds
or
push
movsl
les
push
loop
js
xchg
ja
push
cmp
mov
divl
and
aad
in
jns
jne
jo
dec
sbb
in
dec
popa
push
sbb
adc
jnp
sbb
int3
stos
popf
inc
ficoms
ret
or
insb
xor
xchg
ss
and
pop
scas
in
push
notl
push
jp
ss
lcall
sub
dec
xlat
xlat
mov
daa
mov
ja
roll
insl
inc
ret
sbb
outsb
mov
push
in
jecxz
sbb
movsl
in
mov
test
dec
stc
enter
pop
out
lods
cmp
test
jnp
jnp
xlat
daa
insb
mov
dec
inc
cmpsb
loop
mov
inc
mov
adcl
sbb
or
test
iret
scas
fildl
lods
xor
jg
push
mov
push
stos
clc
and
jge
xor
and
mov
mov
loopne
or
lods
pusha
xor
ja
mov
inc
mov
and
test
inc
out
jp
je
pop
xor
dec
out
cld
imul
inc
sbb
mov
add
movsl
cmp
fildll
lret
imul
ds
sbb
nop
jl
arpl
cmp
bound
mov
dec
loope
stos
push
leave
mov
mov
cld
ljmp
rolb
jl
loop
out
movsl
fildll
pop
add
arpl
out
jge
fldenv
es
leave
daa
or
jnp
and
xchg
mov
mov
das
bswap
rolb
aam
rcrl
popf
and
ret
jb
aad
int
addr16
jae
push
cwtl
rcrb
andl
jb
lret
xorb
push
movl
popa
loopne
mov
orb
scas
or
and
je
and
inc
push
xchg
call
popa
pop
xchg
or
fdivs
jne
inc
scas
push
lcall
dec
cmpsl
int3
stc
in
mov
ss
xchg
push
xor
stos
mov
roll
jmp
dec
jp
int
jo
mov
ljmp
adc
rcrb
jo
imul
lds
push
in
pushf
mov
pop
push
cltd
pop
ret
push
xchg
lcall
xor
xchg
cmp
idivb
addr16
stc
outsl
scas
fmull
fcoml
nop
pop
sbb
jbe
pop
adc
decl
test
and
daa
pop
fs
mov
push
aaa
arpl
inc
stos
sub
or
sti
push
into
mov
pop
or
pop
popa
aam
out
mov
inc
push
aas
loope
adc
cmp
fidivl
fs
mov
dec
dec
decl
gs
mov
pop
scas
insb
popf
fs
test
dec
cld
mov
sahf
add
cmpsl
ficoml
lods
cmp
outsl
js
dec
stos
sahf
aas
and
bound
sbb
xor
cmp
mov
dec
icebp
cli
out
mov
jb
dec
sub
add
dec
push
dec
es
pop
pop
adc
les
mov
insl
cmp
lods
mov
enter
jge
js
or
stos
aad
lret
pop
mov
mov
movsl
or
or
popf
repz
in
lcall
mov
pop
sbb
mov
jnp
rcrl
rolb
in
in
das
dec
call
dec
iret
ja
mov
ss
xlat
or
jp
div
jge
and
mov
push
in
dec
inc
mov
and
lds
call
push
lea
in
ja
sub
scas
sub
in
mov
pop
imul
jne
add
pop
sbb
rclb
adc
dec
jne
sbb
cmp
mov
sbb
add
add
jno
mov
or
insl
iret
nop
fistpl
push
mov
inc
mov
add
mov
loope
push
ret
sub
cmp
pop
fstl
lahf
cmpps
adc
in
jp
rorb
mull
movsl
cli
mov
lret
sahf
cmp
les
pop
std
and
jae
xlat
aad
xchg
dec
pop
mov
fxch
shll
xchg
jle
xor
sti
movsb
lods
xor
and
fsubrp
dec
jg
adc
and
ja
mov
cld
xchg
push
and
adc
or
or
mov
and
shl
into
push
popl
mov
push
or
add
adcl
repz
adc
add
je
xor
adc
or
xchg
stos
je
cmpsl
xchg
add
data16
mov
jmp
dec
inc
xlat
sbb
cld
dec
out
insb
mov
mov
shlb
cmc
arpl
insl
dec
cmp
push
push
xchg
add
push
les
movsb
or
in
scas
fucomp
stos
das
std
xorb
pushl
jg
add
pop
inc
inc
testb
cmp
out
or
fwait
movsl
ret
sbb
adc
and
in
push
sahf
aaa
mov
imul
testl
mov
xchg
sub
fwait
pop
jb
ficoml
or
sub
cmc
into
push
les
pop
pop
sub
in
inc
in
call
mov
add
sub
outsl
ret
int3
sbb
mov
push
sub
pop
dec
sub
sbbb
lea
bnd
sbb
outsb
sbbl
pop
call
pop
les
mov
fisubrl
adc
xchg
add
je
or
mov
sub
lcall
adcb
dec
sbb
jae
in
stos
xor
cwtl
sub
jbe
add
std
mov
push
ret
jl
mov
mov
repz
or
mov
inc
mov
rcl
shr
jl
adc
add
xchg
dec
mov
pmaxsw
in
mov
sbb
sub
sbb
fnsave
je
lock
imul
pop
fidivrs
inc
add
xchg
push
fldl
lahf
dec
in
sub
jg
or
data16
subb
loop
lcall
fldcw
lret
test
adcb
mov
lods
ja
shl
ret
into
cmpsl
sarl
or
cmp
call
int3
aam
and
mov
add
iret
in
sub
fiaddl
sbb
add
dec
lock
xor
lret
ja
sub
fnstsw
test
mov
call
enter
arpl
xchg
jmp
dec
pop
xchg
clc
sbb
or
dec
mov
xchg
shrl
test
cmp
inc
adc
sub
cmp
jno
ljmp
mov
stos
mov
insb
into
inc
iret
filds
cmp
mov
scas
fimull
mov
adc
rorl
sub
rcl
test
mov
popa
or
cmp
rep
lock
mov
fisubl
loope
push
dec
dec
xchg
clc
adc
ss
aad
cmp
shrb
push
xorb
fadd
sbb
and
dec
les
out
sub
push
xchg
push
lds
popa
aaa
fists
mov
xchg
or
pop
rcrl
in
push
push
pop
push
fstps
aaa
js
cwtl
mov
hlt
movsl
fwait
outsb
add
lods
inc
dec
adc
or
dec
jecxz
adc
mov
ljmp
mov
mov
cmc
dec
mov
lret
mov
jnp
and
decb
imull
pop
cmp
jae
and
jb
mov
arpl
adc
dec
pop
es
test
sub
cld
inc
adc
mov
dec
ss
dec
pop
pop
add
lock
pop
pusha
sub
dec
sub
imul
lahf
lods
es
in
enter
xchg
xor
fdivrp
bound
sbb
cmp
xchg
and
popw
jnp
mov
jl
sbb
sub
jecxz
lods
loopne
sub
stos
add
pop
sbb
sub
testl
negb
inc
cwtl
jb
ds
rolb
cmp
dec
cwtl
stos
es
or
jnp
cmp
sbb
das
mov
jnp
repnz
mov
arpl
and
in
dec
ja
loop
dec
mov
inc
xor
jecxz
pop
push
lods
mov
push
mov
mov
pop
in
nop
pop
add
out
cld
sbb
sbb
sbb
cmp
ret
cmp
lret
xor
bound
aam
das
jp
ss
pop
or
sbb
mov
push
test
dec
fisubs
mulb
push
test
in
sub
push
cwtl
jno
out
sub
movsl
mov
das
dec
test
and
inc
jo
cltd
mov
xor
lds
shlb
stos
lret
pusha
inc
mov
lods
mov
popa
aad
lea
popf
iret
inc
icebp
inc
adc
mov
mov
sbb
test
arpl
fstp
sbb
dec
shll
sub
xor
in
push
popa
iret
cmpsb
xor
lcall
or
pop
ljmp
fisttps
add
arpl
pop
or
xchg
pop
lcall
gs
enter
cltd
cmp
lods
and
nop
pop
ljmp
ficoml
pop
les
cmpsb
or
sub
scas
fisubl
push
cwtl
out
cs
scas
dec
lret
les
inc
xchg
jno
dec
aaa
icebp
arpl
jae
hlt
push
push
stc
inc
mov
mov
sub
jb
lahf
test
jno
imul
pop
sub
adc
ret
push
jp
fs
and
xor
mov
mov
mov
jb
push
not
dec
imul
in
enter
fsub
mov
mov
inc
ds
fwait
sub
mov
push
sub
add
ds
in
lods
jg
cmp
test
adc
cltd
xchg
push
out
or
es
cmp
mov
insl
mov
aad
inc
inc
outsb
inc
xchg
jp
mov
jg
mov
jp
or
lcall
dec
dec
mov
adc
push
jo
out
mov
in
or
lret
jb
mov
sar
ja
cmp
mov
je
push
xchg
adcb
hlt
es
fdivl
call
lret
push
xchg
js
add
mov
mov
mov
pop
push
sarl
pop
lock
jge
mov
sbb
cmp
insl
or
jp
rorl
in
iret
addr16
mov
cwtl
pop
imul
cmp
ret
add
pop
add
int3
das
mov
movsb
xchg
sbb
push
push
or
es
and
sbb
scas
sub
pop
push
aam
jno
pop
add
jnp
into
lcall
fstpl
add
fdivr
addl
sbb
xchg
add
push
adc
cmp
icebp
push
divb
xor
jle
pop
addr16
pop
testb
out
outsb
inc
in
pop
les
mov
gs
sbb
push
enter
jle
pushf
jno
adc
xor
out
arpl
stos
sbbb
nop
cmp
hlt
xchg
or
aas
adc
out
pop
add
mov
jo
adc
xchg
and
popf
ret
stc
jo
push
cmp
cs
sbb
mov
inc
out
flds
mov
cmpsl
es
rorl
cmp
stos
popa
xchg
pop
imul
ret
mov
outsb
js
daa
ret
add
jge
sarb
loope
cmp
arpl
cmp
std
xor
fcoml
aad
push
adcb
call
or
and
push
inc
shlb
insb
outsl
les
mov
repz
xchg
cmp
jg
fs
jno
mov
in
mov
and
cltd
add
push
jmp
dec
add
push
push
dec
pop
lock
inc
mov
sti
add
fsts
loop
or
mov
movsb
mov
rcrb
and
xor
dec
mov
mov
testb
jo
loopne
andl
or
push
inc
jle
shll
cwtl
out
jbe
jmp
push
dec
jmp
xor
into
test
mov
add
sbb
inc
hlt
out
xor
mov
popa
push
imul
dec
push
loop
mov
lcall
cmpps
inc
jbe
adc
xlat
mov
jge
mov
out
dec
lret
push
movsb
push
and
dec
push
rolb
rcrl
leave
dec
por
enter
mov
dec
data16
arpl
scas
pop
outsb
ljmp
sti
shl
add
sub
jns
jg
jo
into
ljmp
mov
mov
repnz
shrl
and
xchg
inc
cmpsb
pop
jne
lock
adc
xchg
add
or
sbb
pusha
mov
imul
sbbb
test
add
xchg
in
je
insl
fiadds
shrb
mov
sti
adc
es
jecxz
and
cmp
pop
cmp
fildl
xor
xchg
dec
mov
jmp
fwait
scas
jecxz
cmp
aad
mov
xlat
dec
push
jle
adc
add
push
mov
bound
sbb
sub
and
add
movsb
fimull
xchg
sbb
in
lods
inc
push
xor
idivl
cmp
inc
add
cltd
pop
add
xchg
lret
fildl
push
movsl
sub
cmpsl
dec
ret
jmp
push
and
mov
cmp
adc
inc
imul
xor
lds
and
sbb
push
xor
jb
in
sub
mov
arpl
pop
lcall
or
mov
pop
pop
pop
in
icebp
aam
inc
ss
test
cld
cmc
mov
imul
rol
push
sbb
gs
dec
cld
aaa
and
mov
dec
add
in
mov
pusha
push
fcmovu
xor
lcall
test
sbb
in
jae
xor
ret
ja
xchg
cmp
inc
sub
adc
mov
movsl
mov
idivl
sarl
adc
in
jle
sub
imul
sahf
stos
push
data16
xchg
aaa
inc
xchg
ljmp
mov
pop
push
rcrb
popf
outsb
out
arpl
dec
out
cli
mov
pop
mov
ror
xchg
insb
pop
test
push
or
shll
push
dec
sbb
sub
inc
add
fstpl
fcomip
sbbl
repz
sbb
sbb
scas
lahf
and
pop
mov
jle
and
cld
xor
popf
mov
imul
call
std
cmc
or
sbb
bound
sti
adc
frstor
and
push
xchg
push
sub
and
xchg
pushf
repnz
jbe
push
push
jbe
add
sub
lods
sub
test
fwait
xchg
or
je
jae
sbb
scas
xchg
push
lea
push
in
or
outsl
add
aaa
inc
pop
test
cmp
xchg
push
rorb
int3
shll
xor
int3
shll
adc
lds
ret
lcall
push
repnz
mov
into
mov
add
jno
add
mov
cli
jo
dec
fisttpl
cmp
cs
lret
cmp
add
dec
test
hlt
filds
push
cmp
push
adc
jo
inc
jle
sub
mov
pusha
mov
jno
js
mov
xlat
fwait
sub
ret
mov
push
mov
out
shlb
adc
scas
dec
mov
shrb
out
sbb
xchg
pop
push
out
lods
mov
xchg
mov
pop
sbb
mov
pop
out
sbb
push
jb
leave
cmp
test
mov
sarl
add
popf
subb
pop
es
test
pop
add
mov
loopne
and
je
fldenv
and
in
shlb
pop
jp
stc
add
mov
mov
push
mov
push
mov
mov
jb
std
pop
nop
aaa
fwait
mov
push
mov
sub
sub
fdiv
xchg
stos
push
pop
xor
repz
inc
mov
inc
in
push
inc
arpl
call
adcb
fcmovnu
das
mov
sub
lahf
inc
mov
jg
lret
cmpsl
pop
jns
fistps
mov
scas
ficoml
add
in
cltd
aaa
push
dec
mov
sbb
sbb
ds
xorb
adc
aas
enter
outsb
adc
xchg
or
pop
mov
lea
dec
add
or
cmc
inc
mov
xlat
scas
lahf
cmpsl
xor
hlt
iret
inc
daa
mov
mov
mov
sub
jo
mov
pop
std
fistl
push
fisubrl
jns
out
xchg
movsl
shl
push
mov
repz
out
ja
or
mov
loop
xor
sbb
mov
jns
outsl
or
jge
mov
add
push
xchg
push
jmp
rcrb
jno
mov
mov
mov
das
mov
cli
jae
jp
shlb
dec
je
jae
and
lods
repnz
mov
push
adc
add
jmp
mov
popa
outsb
jge
inc
xor
sub
in
cmp
cmp
stos
mov
sbb
addr16
cs
daa
mulb
js
adcl
out
cmp
in
xor
sbb
push
mov
ret
jp
loopne
sub
leave
xchg
inc
sub
mov
jne
cmpl
loop
jge
bound
outsl
movsb
pop
pop
mov
jle
mov
push
jbe
sbbl
dec
lret
cs
cli
in
add
dec
inc
loope
mov
sbbl
cmp
lret
leave
lea
pop
cwtl
mov
mov
jbe
cmc
addl
aas
jl
inc
pop
or
jb
popa
inc
mov
inc
addps
mov
js
lret
xchg
aad
xchg
mov
sbb
or
jnp
cmp
adc
cmp
sbb
lds
fwait
push
icebp
repz
mov
add
cmp
fnstsw
lret
fcoml
mov
and
cmp
pop
mov
movsb
jns
xchg
jne
ds
rolb
sub
in
or
or
lds
es
and
cmp
insl
das
cmp
faddl
pop
fidivl
mov
xor
and
sub
movsl
jne
inc
or
cmp
pop
xor
call
xchg
je
jmp
test
xchg
mov
test
push
xchg
nop
lahf
inc
in
adc
imul
cmp
pop
push
outsl
cltd
adc
test
mull
sti
sub
xor
xchg
outsb
out
inc
lcall
jg
mov
jo
mov
in
pop
addb
addl
leave
push
stos
xchg
jmp
or
cmc
sbb
das
inc
enter
cwtl
movups
inc
inc
xchg
loopne
in
imul
add
sub
fistps
aad
out
packsswb
sub
mov
sbb
jp
mov
mov
movb
sbb
dec
enter
sbb
lock
cwtl
xchg
and
nop
push
pop
add
jnp
lret
dec
add
and
mov
mov
inc
mov
or
inc
jge
gs
std
add
cmpsb
nop
inc
jne
scas
mov
jl
mov
repnz
fstl
ja
mov
lock
pop
test
mov
aaa
or
jns
xchg
ret
cmpsb
dec
push
dec
repz
mov
xor
or
pop
cmp
xchg
cli
loop
and
test
cmp
sub
xchg
out
or
mov
aad
in
sbb
mov
and
xlat
xchg
stos
xchg
sub
es
pop
repz
out
sbb
ud0
or
cmp
int
mov
sub
lock
scas
xlat
adc
xor
rol
xchg
arpl
lea
push
mov
iret
add
lds
add
cmp
leave
push
mov
push
andb
inc
mov
cwtl
and
xchg
xchg
mov
cmpsl
push
fwait
mov
in
dec
sarb
jbe
mov
adc
pop
das
cmp
aas
jno
out
push
pop
pop
mov
pop
mov
adc
mov
and
mov
mov
subb
lret
lahf
lock
jge
mov
outsb
add
les
setns
fs
cmp
les
movsb
cmp
sarl
sub
adc
outsl
and
lahf
jg
test
xchg
push
adc
sti
icebp
outsb
lds
sbb
aaa
mov
ds
push
and
xchg
out
mov
loope
in
cwtl
push
push
test
inc
add
xchg
in
or
xchg
inc
je
clc
jle
in
cmpsl
cmp
mov
inc
or
cmpsb
and
aaa
adc
and
and
inc
pop
sti
inc
xchg
popf
xchg
es
push
push
or
mov
inc
xchg
sahf
or
dec
shl
sbbb
fidivrs
imul
sbb
sub
jp
jp
push
sbb
sub
push
rcr
adc
addr16
ja
stc
or
jl
pop
sub
inc
je
into
push
mov
fmull
data16
daa
mov
inc
mov
cmpsl
and
mov
jno
fistpll
ret
out
jge
adc
jno
xor
add
std
mov
pop
arpl
sti
jecxz
xchg
shrl
push
mov
fsubs
mov
xchg
sbbb
lods
xor
fwait
xor
xor
icebp
cs
push
and
pop
stos
loopw
pop
push
xor
ss
js
push
movsb
inc
xchg
arpl
cmpsl
std
dec
lea
adc
jg
mov
add
xchg
jo
lea
and
test
or
or
sbb
vpmaxsw
scas
jno
imul
aaa
ljmp
ja
cmp
add
dec
shlb
mov
add
xchg
mov
jno
or
sahf
aam
in
clc
fsub
mov
dec
pop
mov
adcb
fwait
imul
cwtl
lret
sar
mov
das
mov
jne
push
add
dec
cld
sub
add
mov
adc
adc
pusha
ret
repnz
lock
mov
pop
test
inc
xor
aaa
test
push
pop
xlat
xor
or
aad
jne
add
jb
pop
dec
in
jle,pn
ja
in
pop
imul
fisttpll
stos
and
add
gs
lret
inc
arpl
dec
push
pusha
loopne
mov
iret
mov
outsb
push
pop
add
inc
shll
sbb
pop
push
mov
movsb
jns
add
movsl
dec
sbb
lahf
loopne
call
mov
pop
push
or
sub
sub
push
push
add
mov
jnp
aad
ret
sub
movsl
lahf
int3
enter
cmpsl
int
je
xor
leave
push
xchg
mov
test
sub
xchg
rorb
hlt
mov
pop
loopne
leave
jnp
lods
push
lret
and
stos
nop
push
cltd
sbb
stc
rolb
in
stos
jp
push
add
xlat
adc
cld
xchg
pop
jp
pop
mov
xor
into
add
jmp
cmp
push
xchg
sbb
cmp
cmp
sbb
ret
rcll
and
add
arpl
push
xor
test
and
dec
mov
sbb
or
or
dec
mov
mov
std
jno
jmp
out
mov
add
inc
lods
mov
mul
mov
test
add
pmullw
jnp
inc
pop
pop
into
push
xor
mov
rcll
or
adcl
pop
add
int3
andl
mov
jo
fs
call
out
imul
add
inc
stc
fsincos
or
scas
out
pop
aas
xchg
and
or
test
adc
mov
inc
pop
nop
jge
stos
inc
or
addr16
gs
and
pushf
insl
mov
insl
xor
sbbl
push
test
inc
jge
ja
push
push
icebp
xor
mov
mov
movsl
adc
xor
inc
sbb
mov
dec
inc
sub
fidivl
daa
push
lea
jo
add
sbb
pop
adc
daa
cmp
xor
or
clc
dec
jmp
sbb
insb
ja
outsb
xchg
mov
sbb
xchg
mov
jb
mov
jae
cs
stc
xchg
inc
imul
lcall
mov
lahf
xorl
cli
jl
push
cmp
sarl
fistpll
iret
loop
repnz
out
or
mov
test
xchg
inc
jmp
cwtl
pop
inc
cs
add
adc
push
rcr
dec
adc
movsb
and
jns
es
jmp
cld
or
lods
insb
jmp
sub
adc
mov
filds
loope
mov
pop
jns
cmpsb
mov
xor
xchg
fldenv
fwait
insl
pop
mov
jno
mov
inc
mov
pop
inc
inc
push
lret
gs
mov
rol
fidivl
stos
jge
adc
lds
data16
loop
inc
lods
ss
fadds
push
mov
dec
add
mov
leave
adc
shr
xchg
mov
sub
jecxz
sub
adc
int
outsb
add
cmp
xchg
andl
out
xor
jp
dec
pop
jg
jl
test
inc
fcomps
xor
push
scas
push
sbb
out
xchg
adc
xor
loop
add
pop
or
sbb
outsb
xchg
push
cmp
ljmp
mov
aaa
pop
cld
data16
pop
pop
pop
pop
jbe
inc
shll
rcrb
adc
jnp
sub
mov
ja
in
cmpsb
mov
dec
inc
xlat
adc
pop
push
or
pop
mov
imul
xchg
mov
sub
xchg
test
push
ss
sbb
mov
jmp
xchg
popa
aam
cs
push
inc
xlat
cli
dec
mov
in
xor
xchg
pop
rcrb
sbb
nop
mov
repnz
test
loopne
ja
imul
scas
push
mov
clc
xchg
push
add
and
dec
in
jnp
cmp
fidivrl
fwait
sub
test
inc
mov
loop
ja
test
lret
push
push
mov
push
lds
lcall
jbe
andl
out
push
jae
pop
jge
int
add
sbb
lds
iret
mov
and
jmp
dec
sarb
shlb
setge
test
sbbl
cld
xor
cs
shll
xor
cmpsb
imul
mov
lds
add
mov
dec
mov
hlt
nop
push
add
sbb
cmp
scas
lods
daa
dec
pop
xchg
xor
pop
sbb
loop
jnp
lock
outsb
cmc
mov
mov
rorb
xor
cwtl
xchg
popa
jae
mov
push
and
adc
inc
lods
imul
mov
sbb
push
fs
andb
inc
je
jb
les
movsb
push
adc
aad
fs
nop
cmp
cmp
fwait
mov
aaa
add
sbb
lock
lahf
mov
inc
sarb
lock
and
pop
xor
push
jne
sti
sbb
call
leave
dec
in
and
sbb
fbld
jns
bound
lds
adc
or
push
push
rolb
mov
jo
dec
xchg
sub
xor
cmpl
inc
push
sahf
icebp
sbb
dec
std
pop
fwait
push
fcoml
sbb
xor
mov
ljmp
stos
xor
dec
nop
lea
jecxz
push
cltd
xor
hlt
inc
cmp
ja
xchg
pop
mov
jne
mov
dec
sbb
inc
in
imul
ds
cmp
mov
ljmp
outsb
call
push
movl
lock
imul
cs
lahf
pop
push
out
subl
insl
xor
movsb
movsl
scas
test
mov
push
cmp
mov
cmc
adc
xor
stc
pushf
in
fiadds
inc
outsb
fldl
sbb
push
cld
insb
sbb
pop
daa
inc
xlat
cmp
fisttps
sub
aad
add
or
push
cmpsl
inc
inc
out
inc
push
xor
sub
fs
mov
add
fists
xor
pop
mov
mov
mov
or
rcrb
cmp
iret
movsb
sbb
pop
xor
loop
xchg
adc
sbb
out
inc
push
iret
in
iret
inc
adc
mov
inc
jg
aam
push
push
into
dec
adc
notb
pop
lods
ja
dec
imul
fiadds
mov
movsl
lods
mov
into
jmp
sbb
jecxz
shlb
dec
pop
mov
popf
adc
call
sub
jnp
push
pop
stc
cmc
std
fcomps
dec
push
test
xchg
mov
dec
outsb
in
stc
inc
roll
in
sbb
xorl
and
mov
xchg
sbbb
ss
xchg
cmpsb
dec
cwtl
mov
add
cmpsb
sub
fwait
call
aaa
pop
adc
aad
aaa
mov
jmp
lret
or
lcall
xchg
add
lock
xchg
outsl
dec
pop
out
arpl
popf
dec
sahf
or
sub
adc
es
sbb
bnd
dec
push
pop
dec
lea
aad
sahf
mov
test
jg
stos
xor
push
les
cs
shll
das
mov
outsb
xchg
andl
notb
xchg
icebp
fistpl
pushf
int3
pushf
in
xchg
mov
ja
and
add
in
lret
fwait
in
ret
adcb
rcrl
data16
ljmp
pop
icebp
je
shrl
mov
mov
add
xchg
je
imul
mov
test
stc
pop
or
dec
gs
rorb
pop
jge
sbb
push
cmp
enter
cmp
cmp
sbb
popf
mov
xor
push
insb
in
push
jl
loop
and
cmp
dec
jl
outsl
hlt
fidivs
jl
pop
popa
dec
jecxz
cmc
xchg
pop
int
ja
leave
mov
sub
or
aam
push
mov
sub
loopne
pop
push
lahf
aaa
mov
fs
arpl
ja
push
jb
shll
add
arpl
mov
addr16
outsl
imulb
mov
xor
sub
pop
pop
daa
jmp
divl
cmp
into
xlat
and
mov
jge
repz
or
jge
add
inc
jno
out
roll
mov
xchg
popf
and
adc
inc
jns
out
out
jge
js
sar
mov
inc
jp
and
inc
or
or
and
xchg
push
sbb
pushf
jmp
decb
xor
pop
repnz
stos
movsl
cld
nop
mov
fcoml
inc
dec
dec
adc
aam
xchg
gs
xor
xor
pop
add
sbb
xor
repnz
cmp
mov
add
xchg
xchg
xor
insl
cmp
and
cmc
lret
out
ds
xor
jns
mov
and
mov
jns
sbb
sahf
mov
ds
rcrb
dec
and
pop
push
inc
mov
xchg
jno
lods
into
mov
das
aad
cmpsl
push
rclb
mov
ljmp
cltd
push
mov
mov
lahf
mov
mov
dec
daa
test
cmpsl
daa
mov
or
sub
rcrl
call
rcl
push
mov
xchg
fistl
cmp
mov
sub
fwait
xor
repz
adc
push
sbb
inc
xor
dec
cwtl
scas
mov
push
enter
jbe
lret
inc
cmp
adc
sarl
loopne
pop
aas
xchg
adc
or
lods
shrl
jns
pop
stc
js
jg
and
rcrb
popa
pop
stos
das
cld
or
mov
mov
xor
test
repnz
cmp
into
inc
popa
fnsave
fistpll
lret
push
mov
mov
cmpsb
jp
jecxz
dec
rcrb
sbbl
stos
adc
or
in
pushf
les
push
xor
test
pop
sub
lods
std
mov
test
lods
cs
mov
and
nop
insb
and
les
cmp
jae
mov
cmp
push
mov
icebp
jg
ret
popf
push
jge
dec
test
repnz
push
dec
outsl
inc
xchg
rorl
cwtl
jb
push
adc
mov
push
in
fisubs
push
mov
out
movsb
lock
pushf
adc
pusha
aam
cmp
xchg
rcll
add
push
dec
lods
addb
mov
cmpsl
fisttpll
fcmovnu
cwtl
lods
push
shl
pop
sti
and
popa
inc
rcll
pop
shl
push
cmp
sti
rcrb
and
xchg
shlb
enter
mov
ja
es
push
cmpsl
inc
add
sbb
pop
inc
test
push
inc
fs
fs
jns
lret
mov
inc
stos
cmp
or
movsl
add
mov
add
sub
and
mov
cmpsb
std
shll
es
rep
je
std
mov
sahf
lods
icebp
cld
jmp
pop
mov
sub
clc
gs
dec
dec
adc
adc
ror
into
incl
push
jo
push
jle
push
dec
sub
int
icebp
pop
jns
into
adc
jmp
rol
repz
rclb
stc
ljmp
cmp
int
gs
inc
outsb
dec
lock
xorb
and
mov
daa
dec
xor
inc
scas
inc
int
mov
int3
xchg
popa
mov
in
int3
rolb
sbb
push
ret
xchg
xor
mov
mov
or
pop
push
and
xchg
out
jle
inc
add
sub
inc
push
arpl
inc
jle
dec
jb
cmp
popf
add
mov
lds
mov
jbe
test
pop
pop
pop
dec
or
add
sub
xor
push
inc
inc
xor
mov
cmpsl
dec
mov
sbb
mov
sbb
sbb
inc
and
mov
pushf
xchg
test
mov
push
loop
pop
lods
and
sbb
mov
push
lret
loopne
sarl
mov
aaa
inc
mov
fistl
pop
cmp
push
lahf
pop
jb
xchg
add
sbbl
and
shrb
jp
adc
pusha
fimull
cltd
push
ror
xchg
cs
cli
adc
or
pop
mov
jge
pop
mov
sub
and
jne
jb,pt
push
dec
rcl
inc
fstpl
mov
xchg
pop
jecxz
pop
std
or
sbb
mov
jae
fcoms
lods
andb
or
bound
shr
out
ljmp
inc
lahf
popa
std
nop
mov
xlat
mov
push
movsl
outsb
xchg
faddl
dec
divl
aas
xchg
jo
dec
dec
mov
pop
sub
mov
mov
sbb
dec
mov
cld
ja
jae
stos
idivl
and
add
dec
xchg
movb
int
sti
xchg
sahf
or
popf
sbbb
mov
cltd
scas
cmpsb
mov
cmp
sub
pop
adc
adcl
cmp
scas
lcall
mov
inc
jle
jnp
sahf
jmp
add
pop
addl
jp
addr16
jno
mov
add
add
adc
lea
mov
in
sub
cmpsb
xlat
loop
fwait
mov
das
or
push
rcrl
cmp
jo
outsl
mov
test
subb
xchg
test
dec
dec
sub
pop
mov
repz
lods
cwtl
and
aad
cmpb
popf
loope
sbb
pop
lock
clc
cmp
xlat
ja
int
or
sti
xor
andb
aad
add
inc
add
jb
push
rolb
int3
aam
mov
dec
loope
je
xchg
xchg
add
nop
dec
and
push
out
inc
cmpsb
jae
push
inc
cltd
sub
out
mov
test
cmp
div
cmp
xor
pop
shlb
pop
loopne
jno
xor
add
add
pusha
mov
outsb
mov
inc
in
jns
in
fcompl
sbb
push
push
rcr
arpl
push
xor
dec
pop
cmp
cmpsl
mov
in
jecxz
out
sbbl
sub
stos
mov
mov
lea
pop
mov
subb
dec
cmpsb
push
sub
out
lahf
aam
xchg
lods
adc
mov
mov
xor
fwait
cmp
jae
mov
stos
subb
jge
leave
loop
xor
jae
out
in
aad
mov
bound
xchg
sbb
int
lret
adc
cmp
stos
cmc
fdivs
lock
mov
mov
push
clc
xchg
xchg
setb
jl
into
sbb
ret
repz
fs
pushl
fdivrs
mov
mov
add
mov
sbb
iret
xor
xor
mov
ror
push
js
and
outsb
decb
xchg
sub
sbb
shrb
out
pop
mov
cld
out
lods
jbe
jbe
notl
sbb
add
inc
imul
lahf
jne
mov
push
andl
outsb
scas
jmp
pop
xlat
sti
add
dec
mov
dec
movsl
pushf
pop
fs
add
adc
mov
xchg
cmp
loop
mov
cltd
inc
inc
push
lds
and
mov
and
idiv
xor
notl
call
mov
inc
enter
push
in
lea
jg
pop
pop
mov
jnp
add
pop
aam
lret
js
subl
add
das
or
inc
lods
mov
mov
mov
cmpsb
mov
mov
push
rcl
or
ja
push
call
inc
or
mov
mov
test
jno
leave
fwait
mov
or
mov
lds
dec
add
xor
jbe
shl
dec
sahf
push
daa
jge
add
data16
popf
mov
sub
int
mov
sbb
lcall
pop
aaa
adc
mov
adc
lock
inc
cwtl
mov
xchg
notb
out
js
jecxz
xor
push
mov
shlb
xor
xchg
je
aam
pop
or
pushf
push
mov
cmp
clc
pop
movsb
mov
mov
xchg
aad
add
sub
clc
xchg
inc
jmp
fstpt
add
cmp
int
je
dec
jle
mov
sti
jp
xchg
or
inc
push
sub
xor
loope
daa
mov
pop
imul
push
pop
insb
push
insl
sub
mov
ljmp
adcb
cs
nop
jecxz
mov
mov
fnstenv
out
ljmp
and
rorl
mov
jmp
xchg
sub
fidivrl
in
xlat
jmp
lea
test
aas
mull
out
mov
mov
pusha
mov
sub
fimuls
fwait
mov
ret
pushf
add
js
add
dec
adc
sbb
xlat
cs
xor
or
ret
loopne
std
xchg
push
mov
mov
pusha
cmp
ret
mov
rorb
movsb
js
mov
xchg
mov
test
sub
fistpl
xor
dec
clc
xorl
loope
dec
jne
lret
std
outsb
adc
les
stos
or
test
add
outsl
fisttps
jp
mov
mov
outsl
add
jl
push
and
icebp
out
jg
mov
pushf
cmp
pop
ja
gs
xchg
rclb
or
sub
outsl
lret
sub
pop
and
test
mov
mov
int3
fs
jle
cmpsl
inc
call
add
stos
sar
xlat
es
adc
dec
sbb
sbb
or
imul
ja
mov
mov
adc
sbb
fs
bound
mov
pop
rcl
test
cmp
shrb
dec
or
data16
dec
mov
xchg
je
and
xchg
js
aaa
xor
mov
jae
adc
cmp
scas
mov
movsb
stc
xchg
xor
pop
xchg
out
pop
xor
dec
in
scas
fldt
or
ret
add
call
mov
inc
lret
insb
sar
out
mov
loope
insl
aas
fsubrl
add
lret
mov
andb
xchg
daa
push
outsl
out
dec
lds
hlt
aas
mov
ja
adc
cld
xor
inc
nop
adc
inc
xchg
cs
pop
cld
notl
stos
mull
out
adc
pop
lret
mov
cmp
push
dec
sbb
sub
dec
roll
cmp
push
test
push
jb
push
fbld
lds
jnp
xchg
and
and
out
outsb
out
fisttpl
cmp
imul
cld
movsb
add
addl
scas
xchg
imul
pusha
arpl
ret
mov
dec
imul
cmp
loope
and
fsubrs
push
cltd
mov
cmp
popf
les
mov
in
mov
fildll
jae
cmc
push
mov
xor
sub
and
movsl
out
dec
fcmovnbe
leave
loope
adc
ret
lret
call
aas
ret
adc
cmp
fwait
inc
ffreep
popf
mul
insb
jle
popa
test
xchg
mov
ffree
repnz
adc
sbb
int3
push
push
cltd
xchg
add
jl
mov
sbb
pusha
fstps
sbb
push
sub
mov
ret
fbld
out
scas
mov
pop
xchg
popa
mov
jns
pop
call
push
sar
sub
pop
push
addb
mov
jge
dec
ss
sti
fcmovb
js
rcrl
jne
data16
xchg
cmp
lea
int
mov
test
push
xchg
aaa
mov
or
xchg
push
sub
sub
mov
data16
test
iret
inc
mov
push
lcall
rorl
inc
inc
pop
adc
sbb
sub
std
ret
pop
push
sbb
xor
ret
dec
jns
push
push
test
dec
sub
ss
cwtl
cmp
dec
sub
dec
dec
sbb
xlat
xor
aaa
je
jle
cmp
int
mov
orl
push
mul
xorb
push
popa
rol
imul
pop
mov
test
icebp
fmul
aam
repnz
cmp
enter
and
mov
adc
fcmovbe
mov
scas
lcall
mov
inc
cli
mov
in
push
add
sub
lods
test
cmc
faddl
or
cmpsb
inc
mov
test
repnz
out
mov
aas
adc
mov
inc
loope
leave
mov
aas
outsl
cwtl
sbb
add
xlat
jnp
push
cmpsl
mov
insl
push
cmc
test
aad
pop
add
jae
fadd
dec
movsl
lret
pop
push
mov
jae
cmp
sub
cs
subb
push
sti
adc
or
ret
add
testb
out
daa
ds
push
in
dec
xchg
mov
pop
xchg
or
push
out
push
loop
loopne
cmpsb
loopew
loope
ja
fdivrs
lcall
ljmp
cmc
xor
je
adc
lret
leavew
pop
xchg
adc
jb
xlat
mov
lods
sbbb
jg
je
aam
scas
xor
fs
loop
xchg
sbb
out
xor
sub
pop
in
push
shlb
movw
xchg
mov
rcrl
adc
dec
js
lret
lea
sahf
xlat
mov
or
nop
mull
jle
fs
mov
sti
mov
mov
jle
mov
pop
pop
mov
out
push
mov
gs
sahf
shl
xlat
inc
je
ljmp
aas
adc
cmp
sbb
xchg
add
psrlq
loopne
push
stc
mov
cwtl
fidivrs
into
mov
rorl
xchg
cld
sarl
sub
fs
les
cmpsb
jg
sbb
negb
lret
in
mov
pop
jbe
mov
or
lock
push
jae
cmp
mov
xchg
pop
push
pushf
jb
in
and
jecxz
int
outsb
sbb
lahf
pop
dec
cmp
pop
sub
gs
inc
mov
daa
mov
push
stc
cmp
scas
add
rcl
xchg
hlt
shl
aas
mov
mov
fildl
sti
notl
lds
fisubl
sbb
inc
pop
xchg
pop
lods
push
hlt
out
and
test
push
ds
cwtl
jb
inc
out
mov
lcall
adc
pop
sbb
outsb
or
push
divb
push
xchg
xchg
jnp
xchg
xchg
mov
call
stos
faddl
inc
in
arpl
popf
jno
mov
sahf
bnd
lock
inc
repz
and
fwait
jo
shrl
test
fistpll
adc
mov
pop
scas
das
sbb
in
cltd
fmull
dec
fsubr
jo
insb
fidivrs
jle
test
adc
xor
repz
insb
add
fwait
sbbl
mov
push
loopne
inc
icebp
std
cmp
int3
adc
daa
stc
ds
mov
xor
lahf
je
inc
movsl
cmpsb
sbb
dec
jnp
mov
sub
cmp
aad
lret
cmpsl
lds
insl
mov
xchg
ljmp
mov
or
ret
xor
jmp
nop
pop
ss
xlat
mov
cmp
out
mov
pop
xorl
lock
push
push
push
scas
js
cmp
push
rcrl
es
adc
outsb
imul
iret
in
mov
pop
push
in
insb
xchg
sbb
jnp
jl
arpl
aas
jne
xor
loope
adc
data16
xchg
and
mov
xchg
jbe
mov
adc
cmp
scas
push
imul
lods
pop
aam
push
mov
es
xchg
push
pause
sub
ds
jmp
js
xchg
ljmp
addr16
out
fcompp
icebp
enter
imul
jo
push
in
jmp
adc
mov
popf
inc
xchg
cmpsb
and
in
aaa
nop
adc
js
fcompl
jmp
mov
jbe
loopne
add
add
push
pop
and
cmp
adc
jle
cltd
xor
pop
sahf
mov
pop
inc
fucom
jne
aad
testl
sbb
inc
jno
mov
add
lea
out
rcll
adc
es
push
dec
and
sub
icebp
push
imul
cmp
sbb
clc
das
data16
push
mov
ret
push
or
xor
imul
adc
jmp
nop
les
shll
push
aas
icebp
fldl
loopew
mov
cltd
mov
sub
sbb
outsb
imulb
stos
dec
movl
fcomp
test
push
xor
sub
add
and
inc
dec
addr16
out
mov
jp
sub
sbb
insl
xchg
sbb
xor
orl
push
push
xlat
frstor
fdivs
mov
inc
jne
inc
adc
repnz
mov
repnz
enter
push
decl
mov
mov
sub
jmp
xor
test
mov
cmp
cmpsl
push
sbb
cmp
dec
cmpsb
push
jo
cmpsl
xchg
sbb
gs
sub
jmp
out
mov
cld
adc
add
pop
mov
push
jbe
mov
lock
incb
mov
xchg
adc
sub
pop
push
mov
out
movsb
inc
jbe
in
jg
sub
sahf
and
fcomps
and
lea
mov
mov
mov
dec
leave
add
adc
or
mov
sti
sahf
mov
pop
jns
adc
xor
push
decl
cmp
mov
xchg
xchg
push
insl
ret
jne
push
xchg
test
mov
lcall
insl
jae
sarl
xadd
xor
xlat
push
mov
inc
sub
mov
sahf
emms
cmp
cmp
dec
inc
test
or
inc
mov
daa
add
push
pop
xor
mov
rorb
add
loope
lahf
dec
shrl
into
cmp
hlt
fcmovnu
daa
popw
cld
adc
xchg
imul
xchg
jno
inc
lret
xchg
jmp
pop
xor
and
mov
dec
cli
aas
xchg
inc
sub
out
jne
and
scas
jge
clc
jbe
stos
add
stc
arpl
mov
jmp
repnz
pop
jp
fisubrl
pop
sbb
mov
and
in
fwait
pop
mov
xor
hlt
ret
jg
mov
shr
not
mov
push
subb
jno
divb
icebp
out
sahf
std
or
outsl
rcll
and
xchg
or
push
cmp
jb
test
ret
cmc
arpl
movsl
fmuls
or
movsb
clc
pop
stc
out
ret
lock
ret
sbb
mov
mov
sub
add
aad
mov
ret
jecxz
pusha
lcall
pop
stc
sahf
je
dec
mov
sbb
or
mov
sub
out
ret
jg
add
dec
loop
pop
jl
jno
rolb
or
adc
xor
lods
mov
push
push
int
xchg
std
sbb
lret
ljmp
jge
xor
add
dec
stc
out
jne
loop
dec
inc
mov
icebp
sub
mov
and
lahf
test
jg
cmp
stos
dec
pop
ret
fs
call
pop
or
mov
inc
aam
sub
mov
cs
xor
jnp
dec
xor
pop
xchg
cmp
call
cs
aad
js
fsubp
mov
sbb
call
mov
lods
dec
je
adc
icebp
ds
mov
and
mov
mov
addb
push
insl
jnp
mov
mov
push
std
jb
dec
rcr
xchg
stos
lea
xor
int3
dec
fiadds
js
dec
dec
ljmp
dec
aad
std
push
xor
js
mov
xchg
cmp
ss
in
add
in
scas
lret
sub
fwait
xor
push
rolb
jb
aam
fisttpl
movsl
lods
adc
and
inc
jmp
scas
xor
out
pop
movl
push
mov
ret
jl
sub
dec
stc
push
ficomps
cmp
cs
hlt
mov
inc
loop
popl
in
and
shr
call
xlat
pop
sub
mov
loop
pushf
imul
or
xchg
xor
int
call
adc
out
fisubs
pop
push
sub
hlt
das
shrb
jmp
ja
adc
jae
jg
push
pushf
xchg
pop
test
fld
fiadds
iret
sti
inc
and
pop
aad
shrb
push
cwtl
dec
sbb
sahf
mov
lret
jno
cli
out
jg
push
mov
push
test
and
dec
icebp
and
push
and
add
adc
push
xor
rclb
lea
aaa
xchg
jb
cmp
xor
add
addr16
xor
mov
pop
inc
shlb
int3
xor
mov
push
hlt
add
int
inc
dec
push
arpl
imul
dec
inc
ja
mov
outsl
ss
ljmp
pop
jns
ljmp
lahf
or
jne
mov
test
sbbl
adc
loopne
jns
mov
add
int3
pushf
into
daa
dec
mov
mov
pop
mov
fwait
xchg
cmp
xchg
jmp
add
xchg
jne
int3
ret
add
aad
aaa
xor
inc
xorb
in
rcll
test
mov
adc
xor
mov
xorb
pop
mov
idiv
dec
xchg
adc
dec
ret
jb
mov
nop
mov
scas
test
iret
loop
pop
mov
mov
xchg
sbb
lret
push
push
ficompl
mul
je
ficompl
mov
negb
aas
xchg
cmp
mov
adc
mov
pop
mov
dec
aad
cmpsb
and
jmp
mov
push
xor
aas
cmp
cld
jno
scas
sahf
add
test
notb
pop
adc
cli
aam
or
push
mov
fld
hlt
xor
push
mov
loopne
and
testb
outsb
sti
mov
imul
add
fistl
jge
xor
scas
add
jo
sub
pop
pushf
mov
xchg
and
mov
xor
jae
lea
or
push
pop
adc
sbb
outsb
adc
jbe
pop
mov
es
popa
into
push
mov
pusha
dec
jns
xchg
and
loope
adc
inc
cmp
in
repnz
and
jmp
lods
xchg
inc
mov
xor
fs
fwait
shr
adc
lcall
jns
and
inc
sti
inc
ss
fst
cmpb
xacquire
xor
cmp
mov
and
lret
push
bound
pop
dec
dec
add
jp
push
pushf
orb
repnz
cmc
sub
adc
and
dec
push
data16
loope
xor
addl
xor
mov
fwait
sub
cmp
aas
lret
das
xchg
enter
loope
in
mov
adc
lcall
sahf
in
or
div
pop
cmp
cltd
add
dec
push
and
push
push
xor
repz
scas
lret
and
and
stos
add
roll
lea
loopne
int3
xchg
dec
pushl
pushf
jp
pop
insl
mov
xchg
inc
xchg
dec
xchg
ficompl
stos
pop
push
or
push
dec
sub
and
fisttpl
addr16
pop
add
stos
lret
xor
cltd
scas
cmp
push
bound
add
ret
mov
pop
movsb
mov
mov
mov
in
jno
sub
jge
fdiv
ret
inc
xor
stos
pop
out
bound
xor
dec
push
cltd
mov
stos
out
and
cmc
adc
and
les
and
jmp
lea
jne
dec
inc
jl
test
out
pop
dec
jo
or
jmp
sbb
das
mov
sbb
pop
enter
and
icebp
bound
sub
shl
or
pop
sarb
nop
pop
adc
dec
inc
cmp
insb
xchg
push
push
adc
push
mov
and
fadd
jb
mov
lcall
inc
xchg
andb
or
icebp
pushf
dec
outsl
xor
lahf
push
lods
sub
out
push
les
and
in
or
je
lods
mov
movsb
idivb
lret
mov
sub
jae
jo
jno
mov
pop
cmp
je
mov
insl
imul
sbb
std
add
adc
sti
mov
enter
sbb
jle
lods
fucom
les
mov
int3
jle
lahf
lds
out
pop
jge
adc
fadds
scas
das
nop
sub
xchg
jne
repz
out
mov
xchg
movsb
nop
int
cltd
xor
enter
jg
bound
jo
stos
jl
mov
push
int
lahf
mov
enter
js
pop
pop
or
lods
push
xor
mov
cmp
sar
mov
mov
and
lds
dec
mul
repz
xchg
in
mov
nop
dec
sbb
mov
pushf
ds
xlat
or
jle
lock
dec
pusha
mov
dec
xchg
ficomps
in
cld
cmp
mov
xor
out
push
xchg
in
adc
mov
mov
shrl
fs
add
pop
sub
dec
xor
cmp
sub
das
lods
rorb
pop
fiaddl
cmpsl
sbb
inc
push
inc
and
cs
cld
mov
mov
aad
push
mov
lret
insb
add
faddl
rolb
adc
sub
mov
out
lret
jbe
ficoml
xchg
fstl
push
and
inc
and
jne
call
outsb
in
call
or
rolb
inc
jnp
out
sti
dec
pop
out
in
imulb
arpl
fcmovnbe
scas
fs
addr16
int
pop
sbb
popa
adcb
mov
bound
dec
je
ret
test
inc
inc
sahf
jl
jo
push
test
jecxz
cmpsl
adc
or
movsl
lods
cs
push
loopne
aad
jno
cmp
out
sbb
fiadds
sbb
xchg
jno
push
mov
test
jb
lret
subl
xor
ret
popf
push
mov
outsl
push
hlt
sbb
sarl
add
push
lods
ja
das
in
sub
cmpb
cmp
lds
leave
test
ja
add
lds
aas
mov
inc
xor
fildll
xchg
insl
loopne
pop
push
xchg
fsubs
mov
mov
loope
inc
mov
in
push
movsl
jmp
push
adc
jns
pop
pop
bswap
or
hlt
push
rcll
rcll
jb
adc
sbb
fistl
mov
xor
mov
fsubs
pop
push
xchg
adc
jne
dec
stc
jl
leave
aam
xchg
cli
pop
aam
cmp
push
mov
inc
mov
ja
push
pop
pop
adc
ds
cmc
outsl
and
pop
mov
scas
or
mov
in
repnz
lods
fidivrs
add
and
mov
xchg
test
shlb
pop
inc
repz
repnz
out
pop
ja
xchg
ret
stc
jge
add
or
jnp
push
outsl
pop
inc
pop
pop
aad
ljmp
add
add
cli
cld
movsb
adc
daa
scas
jle
mov
aam
mov
ds
adc
and
leave
push
int3
pop
mov
sbbl
lahf
neg
add
std
test
push
hlt
fsubs
jns
mov
iret
dec
push
dec
sbb
sbb
outsb
in
push
lea
ss
or
cltd
incl
mov
or
pop
dec
and
cmp
or
cwtl
or
jbe
add
idivl
in
mov
test
or
dec
mov
fildll
ret
mov
mov
mov
jg
inc
cmp
jne
jne
xchg
xor
test
inc
icebp
fwait
pushf
inc
add
icebp
sub
xor
mov
movsl
lds
pop
mov
push
mov
mov
dec
push
enter
loope
pop
inc
hlt
add
ret
pop
xor
adc
arpl
mov
scas
sahf
ret
lcall
sub
mov
push
test
inc
mov
xlat
shll
and
pop
fsubr
push
pop
mov
hlt
int3
sbb
xchg
mov
jbe
inc
sbb
inc
jb
and
sbb
daa
addr16
and
dec
mov
sbb
cmp
mov
leave
insl
je
inc
in
push
jb
adc
pop
dec
cwtl
rorb
and
cmp
xchg
inc
sbb
xor
add
ljmp
js
mov
movntq
pushf
stos
test
popa
mov
subb
enter
dec
push
mov
mov
daa
and
fs
movsl
js
test
cwtl
adc
mov
clc
test
mov
pop
rolb
cmpsl
mov
inc
icebp
xor
movsb
add
push
push
popa
xor
icebp
cltd
insl
xlat
push
outsl
mov
in
sub
pusha
xchg
jge
bound
sub
arpl
or
in
pop
and
xchg
je
mov
testl
lret
stc
jae
dec
out
shr
mov
movsl
rolb
cmp
pop
loope
std
loope
xlat
loop
mov
ja
arpl
in
jle
and
rcr
push
or
out
call
decl
int
dec
dec
sub
push
and
pop
out
xchg
loope
in
cld
inc
sbb
jns
dec
stos
jne
imul
fstpl
daa
mov
mov
icebp
inc
mov
sub
cmc
or
rcrb
pop
orl
scas
push
inc
pop
in
out
and
rolb
fstpt
cmp
jle
in
and
mov
mov
xor
int3
add
inc
dec
or
or
jmp
fsubrs
inc
gs
lds
fwait
push
daa
cmp
cs
loop
mov
dec
scas
pop
xchg
and
pop
inc
fdivrs
mov
inc
pushf
mov
cltd
xor
lea
mov
lret
mov
in
mov
jmp
mov
adc
orl
aam
and
sub
popf
cld
sub
sbb
les
mov
adc
add
rcl
mov
cwtl
inc
inc
aas
in
rorl
test
ljmp
xchg
sbbl
shlb
jmp
adc
sbb
dec
sarb
call
xor
fisttps
iret
lret
sahf
movsb
popf
pusha
notb
les
pop
mov
out
inc
pop
mov
cmp
dec
jg
test
dec
xlat
push
mov
push
decb
test
xor
scas
cmpsb
popa
hlt
movsl
out
pop
test
sub
je
popf
xor
in
fnstenv
xchg
sub
mov
mov
xlat
cmp
sbb
xchg
pop
xchg
inc
jns
cltd
call
sbb
movsb
pop
xchg
aas
xchg
xchg
in
mov
je
in
or
fcomps
test
les
mov
loop
ret
jg
ljmp
in
leave
arpl
push
cmc
stos
lret
xchg
xchg
jmp
pop
cmp
test
clc
int3
bound
ds
std
jo
sub
dec
mov
mov
repnz
inc
jnp
adc
jae
sbb
nop
fldl2e
scas
pop
push
cmpsb
test
dec
cmp
mov
movsl
into
and
int3
mov
pop
into
pop
aam
cs
fwait
arpl
lea
add
insb
jns
ja
lret
jle
cli
mov
jl
push
jno
movsb
loope
mov
rcl
jne
iret
mov
dec
into
pop
push
mov
xchg
test
shr
sub
mov
clc
mov
jge
sti
jns
pop
ja
cmp
sahf
or
fldcw
adc
mov
adcl
dec
jmp
adc
ljmp
cmpsl
dec
out
sub
mov
fmuls
rclb
mov
or
xor
inc
mov
ret
pop
aam
aad
pop
int3
test
push
shlb
or
adc
fsubp
test
xchg
inc
push
arpl
lods
mov
or
xchg
std
jne
loop
in
repz
cmp
outsl
cmp
mov
xchg
mov
cmpsb
pop
outsb
push
pop
ljmp
gs
out
inc
add
add
cmp
jnp
outsb
gs
dec
mov
jle
mov
in
cld
cmp
aad
dec
fwait
negb
dec
or
mov
aad
adc
push
inc
jbe
lahf
nop
pop
xchg
lds
xor
pop
cmp
je
and
js
fs
mov
out
inc
ret
dec
push
jbe
add
mov
push
clc
xchg
adc
cmpsb
loopne
inc
jecxz
push
add
repz
mov
fcomip
out
mov
daa
sub
gs
push
mov
dec
push
mov
push
leave
bound
xlat
mov
dec
adc
jg
dec
stos
mov
jo
mov
iret
popa
pop
lods
jb
cmp
gs
push
xor
pop
shlb
mov
lods
sbb
jecxz
test
cmp
fiadds
mov
ja
pop
dec
icebp
sbb
sub
jl
push
subb
jl
dec
mov
pop
pop
pushf
push
scas
pop
pop
push
xchg
and
pop
loop
push
addl
add
pop
ljmp
fisttps
sbb
dec
pop
and
xchg
pop
xchg
divb
outsb
mov
sbbb
movsl
add
push
push
push
push
mov
mov
dec
test
pop
into
sbb
test
insb
pop
out
mov
xchg
push
mov
inc
stc
ficompl
push
dec
idivb
or
push
mov
xlat
icebp
out
mov
pushf
or
dec
aaa
sbb
dec
xchg
sbb
jmp
add
mov
push
outsb
mov
loope
mov
jo
push
lret
mov
mov
mov
gs
out
lods
mov
jl
dec
dec
imul
cs
ss
aas
ds
mull
not
xor
test
mov
in
or
ss
out
cs
mov
push
fsubl
ficompl
mov
into
filds
shll
adc
sub
push
lods
hlt
sbb
out
push
add
lods
cmp
cmp
pushf
stos
mov
movsb
insb
out
fdivp
dec
dec
popa
mov
jne
aad
mov
jmp
imul
mov
adc
mov
mov
jnp
cmp
imul
rcll
lods
push
lods
adc
in
mov
cmp
or
test
mov
inc
dec
sbbl
das
inc
lcall
in
in
add
mov
mov
pop
jb
add
aam
mov
sub
outsl
cmc
es
push
pop
mov
inc
jmp
jmp
jl
cltd
clc
aaa
mov
mov
add
shll
jno
mov
jb
cwtl
inc
xor
sbbl
fstpl
lret
xchg
out
mov
imul
add
lahf
lcall
pop
bound
sbb
enter
insl
pop
enter
push
lret
outsb
mul
dec
fiadds
mov
orb
jecxz
cli
sub
pop
shrb
into
ficompl
sbb
insb
ret
in
mov
push
xor
fsubs
out
xchg
ja
mov
lea
data16
movl
cmp
out
jo
mov
push
cmp
lcall
movsb
jne
inc
push
outsl
mov
popf
int3
ds
lret
fdivrp
dec
pop
push
insl
addr16
movaps
adc
cmp
mov
cmp
or
scas
inc
inc
mov
sbb
sub
lock
pushf
mov
jb
jl
inc
sub
mov
out
ftst
ljmp
pop
addr16
and
into
js
jecxz
mov
enter
xor
mov
xor
iret
mov
sti
or
outsb
add
mov
mov
sub
cwtl
xchg
lret
es
jb
adc
int
cli
repz
ret
insb
add
fsin
or
mov
testb
sti
xchg
or
cmp
in
jle
aas
in
gs
push
enter
xchg
pop
popf
mov
js
fidivs
add
rcrb
dec
ljmp
les
addl
sbb
ror
mov
inc
sbb
ja
mov
stos
js
pop
call
pop
dec
les
push
push
mov
jecxz
inc
jle
int
test
xchg
mov
mov
mov
leave
fxch
mov
mov
xor
lock
loop
stc
xlat
out
fsubs
cmp
mov
mov
add
jle
pop
test
std
out
mov
cmp
cwtl
loope
lret
mov
cmp
fcomp
js
xor
enter
das
push
cmp
negb
repz
lods
inc
repnz
ljmp
dec
popf
fs
je
mov
push
stc
add
insb
fimull
lock
ja
adc
cld
jg
and
push
or
in
xchg
out
sti
push
jbe
mov
xor
insl
sbb
cltd
das
es
out
cmp
aam
ljmp
cli
cmp
int
inc
fwait
add
popa
push
xor
pop
xchg
pusha
sbb
dec
movsb
jb
dec
sbb
in
das
les
sbb
push
xlat
je
inc
inc
xorl
imul
lret
cmp
arpl
ret
mov
lret
mov
cs
repz
fisubrl
fsubr
jb
outsb
fs
jmp
pushf
imul
push
js
push
repnz
sti
cltd
in
xchg
jbe
aam
test
lret
mov
lds
push
mov
test
sub
sti
inc
xchg
and
xchg
xchg
mov
xor
xchg
push
jle
loope
aas
jge
or
cmp
push
divl
pop
dec
cli
xchg
or
cli
call
dec
repz
push
mov
dec
aaa
push
mov
iret
popa
sub
cmc
or
mov
jg
mov
jecxz
shl
inc
lods
es
jmp
cmp
xchg
xor
std
lret
or
push
mov
xor
loop
dec
lea
ljmp
pop
icebp
imul
pop
insl
enter
test
inc
les
jae
sbb
inc
insb
add
xchg
sbbb
add
sub
out
push
push
mov
adc
stos
push
rcr
jl
icebp
and
insb
jnp
jg
sbb
fs
push
mov
push
daa
and
mov
dec
outsl
mov
add
addb
mov
pop
jl
cmp
scas
push
ret
mov
sbbb
and
ja
fwait
jg
xchg
gs
xchg
and
mov
fwait
sbb
jno
shlb
sub
mov
stos
leave
les
inc
cmp
jmp
mov
mov
jp
out
pop
cmpsl
pop
mov
cmp
movl
add
sahf
movsl
sub
or
add
xchg
sbb
xchg
pop
sbb
mov
xchg
repnz
pop
add
add
push
je
leave
testl
cmpb
jns
inc
add
mov
cmp
sbb
js
ror
pop
mov
sbb
repz
mov
imul
fsubs
pop
jp
pushl
ljmp
push
cs
cld
and
push
enter
in
inc
mov
cmpsl
fildl
insb
jmp
imul
cmp
add
ret
cmp
out
jnp
sub
dec
xchg
cmpsb
mov
in
lret
dec
cltd
sahf
jmp
sbb
ret
sub
pusha
jbe
pop
push
sbb
xor
sbb
mov
jg
or
push
and
in
movsl
loope
mov
add
push
cmc
mov
cmc
jl
test
inc
lods
push
and
repz
stos
pop
push
add
xchg
hlt
bound
mov
stos
iret
ss
ja
xchg
mov
mov
jbe
sbb
aad
lret
sti
jecxz
es
add
lods
sahf
inc
xor
rolb
popf
in
pop
jmp
and
fs
xchg
shll
int3
sbb
inc
dec
arpl
ljmp
subb
cmpsb
push
data16
mov
dec
xchg
inc
loope
leave
xchg
jle
pop
cmpsl
push
xor
cli
pop
mov
imull
sbb
xchg
or
addr16
push
add
adc
sub
push
push
loop
cmp
lea
mov
aam
cmpsl
xchg
js
cmp
or
mov
jo
mov
mov
mov
and
outsb
push
jmp
mov
stc
dec
ror
ret
mov
mov
lret
jg
mull
dec
call
int
and
fstl
subl
push
push
add
icebp
repnz
push
mov
dec
fwait
adc
jge
repz
out
sti
mov
push
jb
pop
xor
xlat
fwait
mov
popa
stos
outsb
lods
sub
xchg
std
sub
test
js
int
inc
sub
outsb
or
shrb
add
mov
or
sbb
xchg
dec
or
mov
into
jecxz
inc
xor
int3
mov
add
repz
mov
add
cmp
lods
dec
mov
fstps
test
icebp
sub
cmc
push
das
lea
mov
jbe
mov
fidivs
xchg
sub
js
mov
cld
or
in
hlt
dec
inc
mov
adc
adc
ds
mov
je
pop
fldl
hlt
mov
mov
test
pop
frstor
in
out
stos
jb
sti
pop
xlat
dec
loopne
ljmp
pusha
sub
or
icebp
push
call
mov
xor
sarl
adc
jle
in
aam
push
dec
fs
mov
mov
push
mov
xchg
std
and
add
dec
xchg
mov
add
cld
pop
enter
sbb
sahf
fiaddl
xor
jno
movsb
inc
mov
sub
ljmp
pop
mov
daa
fiadds
call
push
sub
mov
and
cmp
push
inc
sbb
lods
sbb
outsb
inc
and
sub
cmp
mov
xchg
push
aaa
pop
lods
sti
xor
push
loopne
sbb
rcll
inc
pop
sub
rcrl
clc
pushf
or
shrl
sbb
inc
mov
dec
xor
loope
je
nop
mov
mov
dec
shrb
sbb
jae
lcallw
jns
sub
jb
inc
mov
and
cli
lods
jg
xchg
lret
ljmp
pusha
stos
arpl
rorl
aas
test
xchg
cmp
inc
faddl
inc
jl
jo
ja
or
dec
dec
out
fs
bound
add
out
push
dec
shr
fwait
xchg
add
lret
add
test
lods
dec
movsl
mov
mov
adc
popa
sbb
and
cmp
lret
dec
and
xor
inc
inc
pop
in
test
repz
adc
insb
or
dec
cld
mov
xlat
cmp
sbb
lods
outsb
mov
jle
das
repz
push
add
or
lahf
mov
lea
push
sbb
aad
insb
ss
inc
fisttps
popf
pop
xchg
dec
fbstp
mov
cmp
call
sub
dec
fdivrl
pop
fwait
push
fadds
inc
ds
fcomps
add
mov
lcall
xchg
inc
push
in
out
dec
iret
mov
int3
dec
pop
daa
shr
jg
jle
xchg
jmp
mov
sar
mov
push
insl
fisubl
lds
mov
nop
pop
adcl
mov
jo
cmc
fidivl
or
cmp
aaa
out
jno
data16
test
loopne
imulb
jne
insb
push
add
add
pop
arpl
add
sub
push
mov
je
mov
mov
dec
inc
ret
mov
mov
lcall
fldlg2
mov
jge
mov
fdivr
xchg
fst
fstl
int3
xor
cmp
sahf
bound
stc
sahf
loop
jne
jns
mov
stos
push
push
test
mov
nop
mov
push
fidivl
in
pop
pop
std
fwait
ja
mov
frstor
pop
xor
sbb
mov
nop
inc
push
mov
jno
push
lret
arpl
jmp
shlb
test
add
cmp
xor
fsubs
dec
ljmp
cli
sbb
ficoml
cwtl
jge
cli
shlb
mov
cs
dec
das
xchg
fwait
int
xorb
jns
mov
dec
stc
cmc
jnp
das
xchg
jbe
add
movsl
addr16
xor
ret
mov
dec
push
mov
mov
push
sbb
ret
lea
mov
andb
leave
cmp
or
stos
mov
pop
xchg
xor
push
shl
jae
push
pop
daa
pop
sub
jp
fnstenv
xor
movsl
push
ficoml
sbb
jle
sub
iret
into
lcall
or
dec
sub
xchg
lds
lock
mov
adc
dec
shrb
les
fidivs
jecxz
ljmp
cmp
scas
add
pop
fistl
lret
or
mov
je
xchg
fmuls
inc
mov
push
sahf
adc
int3
push
mov
cld
dec
in
sub
sti
push
outsb
adc
cwtl
jecxz
imul
js
jle
adc
shrb
loopne
ret
mov
sub
pop
packssdw
adc
movsb
lcall
ja
test
adc
loopne
test
cmc
or
mov
fdivrs
in
dec
cmp
int3
mov
pop
jl
or
inc
cli
and
xor
repz
mov
pushf
xchg
xchg
test
or
inc
and
std
push
dec
add
jnp
sbb
cmp
push
adc
push
adc
call
xor
xchg
add
pusha
call
pop
out
fcoml
dec
movsl
mov
add
xchg
lcall
frndint
xor
xor
lods
and
sub
mov
lods
adc
int3
sti
mov
cmpsl
sub
pop
mov
sahf
negl
and
xchg
stos
push
div
xchg
loope
pop
sub
inc
sbb
decl
jl
sub
pop
sub
mov
cli
and
add
fwait
adc
imul
xor
sbb
jmp
insb
mov
test
inc
ja
xlat
addr16
enter
xor
dec
in
xchg
sti
push
test
insl
mov
cltd
daa
mov
dec
push
jne
push
scas
cmp
out
stc
xchg
pop
mov
xchg
adc
clc
push
and
rcrb
jns
push
jne
cli
push
pusha
loopne
fmull
subb
mov
incl
pushf
sub
mov
stos
mov
popf
mov
pop
add
push
xor
jg
sbb
mov
push
popa
mov
into
test
xorb
sub
hlt
push
call
mov
inc
adc
pop
mov
push
in
shrl
push
sahf
inc
cmp
jl
pop
jne
orb
lahf
cwtl
les
hlt
pop
xor
ret
dec
mov
repz
lret
cmp
xchg
test
xchg
adc
dec
notl
pop
das
or
mov
loope
jle
push
sub
mov
dec
ljmp
mov
mov
xor
cld
enter
sbb
jbe
inc
repz
sub
jns
cli
push
jns
setge
and
jl
jnp
insb
insb
cmp
cld
mov
jecxz
daa
pop
imulb
xor
adc
and
mov
inc
lock
jne
cli
cs
push
dec
imul
or
cwtl
dec
lds
mov
rcrl
inc
cmovg
fs
lsl
adc
cld
fsub
xor
sti
jp
sub
cmp
lods
push
and
mov
ret
mov
jns
popf
jnp
inc
lcall
pop
movsl
push
testb
out
sbbb
xor
jbe
pop
cmp
imul
insb
xorl
fidivs
rorl
cli
inc
out
push
iret
outsl
pop
or
arpl
pop
mov
inc
sub
push
mov
int3
jne
std
mull
jle
add
sbb
in
fldpi
cmpsl
push
scas
shll
xor
mov
adc
lods
pop
add
mov
mov
movsb
test
sub
mov
mov
xchg
mov
mov
cmp
cltd
clc
jne
fadds
xchg
call
pop
leave
out
loopne
mov
adc
jae
cltd
jae
cmp
lcall
cs
cmp
push
daa
jl
dec
jle
xor
push
jp
push
test
fwait
xor
das
lods
sti
or
out
xor
mov
popf
cmp
pop
dec
in
xchg
push
or
daa
jae
xor
pop
xchg
inc
and
xorb
out
xchg
daa
cmp
cmp
jle
incb
popf
ret
cld
xchg
enter
lock
hlt
cmpsb
push
dec
xorl
addr16
xor
mov
lea
xor
and
adc
mov
adc
testl
cmpsb
repnz
iret
sub
mov
je
mov
daa
sti
or
scas
push
push
pop
mov
fstl
in
imul
add
mov
icebp
inc
pop
in
ret
les
out
daa
sahf
jg
xor
movsb
cmp
push
into
or
js
pop
lret
inc
das
cs
xor
rcr
and
leave
flds
jnp
lahf
xchg
outsl
stos
add
outsl
mov
leave
xor
mov
xor
sbb
jno
or
inc
jge
push
xchg
fsubrs
xchg
scas
nop
dec
aam
jo
push
out
xchg
lret
inc
stos
mov
cmp
orb
lret
sbb
mov
out
mov
jno
aam
out
mov
or
inc
mov
gs
aad
fldcw
ja
pop
aam
daa
push
jb
push
rcrb
out
gs
adc
mov
inc
jge
sbb
xor
std
daa
or
fiadds
jecxz
cmp
insl
cmove
loope
subl
mov
cmp
xchg
and
aad
lret
mov
pushf
pop
cmp
mov
add
inc
cld
ror
pop
fwait
push
add
adc
mov
enter
push
jb
mov
scas
cmp
mov
test
cltd
fdivs
xor
sbb
call
pushf
inc
push
push
je
jns
pop
add
stos
jl
rcr
push
lret
add
xchg
in
jge
aad
pop
push
jmp
jl
clc
xor
leave
sub
fnstenv
outsb
mov
mov
scas
mov
jno
clc
or
xlat
and
ss
xlat
rolb
push
dec
adc
push
add
xchg
jecxz
popa
out
sub
sub
inc
repnz
cmp
mov
xchg
inc
ds
lcall
jae
push
rcll
xchg
pop
loope
sbb
scas
testl
pop
cmp
pusha
es
mov
jecxz
out
test
inc
jle
push
dec
xor
or
clc
shrl
and
fxch
and
jecxz
imul
test
andb
mov
cli
xchg
jnp
xchg
add
in
pusha
xlat
in
js
and
fst
dec
jecxz
xchg
push
out
inc
test
fwait
add
fnstenv
jb
sti
repnz
aad
fs
je
subb
clc
push
int
punpckhdq
add
fs
jno
lods
out
stos
push
or
loopne
jnp
testl
adc
lcall
std
push
mov
adc
test
test
dec
mov
jg
gs
loop
outsl
fmuls
pop
jb
or
mov
pop
fdiv
and
mov
sub
imul
lds
xchg
mov
mov
xchg
adc
dec
push
out
jne
or
inc
pop
xchg
push
push
jl
mov
dec
loop
jns
int3
fdivs
and
lock
rol
loope
or
pextrw
mov
decb
popa
test
sar
in
fiadds
sub
adc
stos
lcall
or
lahf
mov
inc
mov
cwtl
out
fistps
dec
mov
cli
enter
icebp
push
xorl
pop
aad
in
push
cmp
jae
std
dec
pop
and
mov
sub
push
addr16
aam
mov
outsb
xor
pop
mov
sub
lea
ss
daa
loope
cmp
insl
dec
mov
outsb
out
mov
xchg
mov
popa
pop
shr
loope
sub
inc
jns
cltd
and
inc
cwtl
leave
mov
out
pushf
fcomps
xor
enter
ljmp
mov
fcmove
roll
jl
insb
xchg
and
in
outsl
dec
ficompl
xor
sub
push
or
shr
imul
sahf
push
scas
mov
xor
outsb
mov
or
std
loope,pn
fistpl
gs
adc
enter
mov
fisttpl
stos
sub
push
outsl
fiadds
push
out
repz
loope
mov
and
push
nop
dec
pop
dec
pop
jmp
arpl
pop
mov
push
or
fwait
sub
cli
mov
imull
adc
push
fadd
rcr
mov
insl
js
or
gs
add
add
rolb
or
test
add
stos
dec
movsl
jle
pop
outsl
xor
pop
imul
sbb
dec
adc
add
cmp
outsl
inc
test
cmpb
movsl
mov
sbb
daa
push
mov
fidivl
punpckhdq
add
pop
mov
scas
xchg
push
add
sbb
ficompl
fstps
scas
mov
aas
mov
lret
xor
and
jg
fcmove
ss
dec
pop
sub
inc
pop
cmpsl
sbb
mov
add
pop
lock
andl
and
adc
aas
in
add
imul
cwtl
push
icebp
mov
mull
push
or
jmp
shll
sub
cmp
cli
cs
hlt
data16
dec
fadds
xchg
and
cltd
icebp
test
xchg
sub
insl
push
in
ss
jbe
movb
mov
pusha
mov
xor
fidivl
mov
jbe
es
and
pop
addr16
sub
add
add
sar
dec
mov
xchg
mov
out
pop
dec
je
or
adc
je
adc
and
mov
sub
adc
jecxz
cs
lret
outsl
mov
pop
leave
or
lock
lea
adc
cld
test
fimull
push
xor
cltd
push
mov
xchg
add
sahf
push
fadds
nop
dec
inc
mov
xchg
push
xchg
or
jns
mov
sbbb
pop
sub
adc
sub
cmp
fistpl
les
movsl
adc
outsl
pop
std
in
adc
fsubrs
add
xchg
or
push
xor
cmp
xor
ret
or
sub
mov
daa
add
push
xor
and
repnz
insb
ficompl
xchg
or
enter
xchg
adc
data16
test
pop
xchg
cmp
jbe
cmp
es
xchg
mov
pop
mov
sti
pusha
xchg
sahf
mov
out
jge
mov
or
enter
push
mov
add
sbb
xchg
cmpsb
je
in
ss
push
dec
push
test
lds
imul
loopne
mov
dec
or
scas
sahf
data16
xor
xchg
test
in
adc
pusha
out
jne
adc
sub
pop
add
stos
je
leave
xchg
stos
mov
lea
cli
test
out
popf
pop
int
iret
jo
les
scas
dec
jne
pop
pop
mov
rolb
mov
ds
scas
sub
xchg
rcrl
sub
cltd
sub
add
cwtl
out
pop
int
mov
xor
fwait
or
xor
pop
cmp
test
xchg
pop
inc
negb
sub
xor
daa
stos
pop
push
jl
pop
cmc
jae
bound
cwtl
adc
and
push
ja
and
add
jp
gs
loope
lret
xchg
in
push
jno
insb
repnz
jb
aas
stos
jp
lahf
mov
push
sbb
testb
jno
mov
iret
ds
sbb
jecxz
xchg
sbb
and
and
in
adc
fildl
add
mov
subl
sbb
fdivr
mov
push
and
mov
mov
imul
subl
xor
sub
mov
mov
cwtl
aam
inc
jne
fs
test
shr
xorb
lret
and
aad
inc
pop
xor
inc
mov
outsb
add
insl
lret
jb
mov
xchg
push
cmp
inc
sahf
lahf
idiv
js
mov
test
xchg
mov
ss
xlat
ss
xlat
mov
mov
cltd
or
fs
add
push
cwtl
sub
je
adc
dec
jo
in
not
inc
out
lret
repz
popa
adc
sub
mov
mov
mov
ss
std
and
mov
ds
notl
in
push
xchg
push
faddl
dec
mov
stos
icebp
aas
push
xchg
loope,pn
push
sub
mov
out
sbb
ds
cli
xor
jmp
dec
jmp
jbe
int3
outsl
push
push
lea
adc
iret
sub
rcrb
xchg
pop
bound
mov
and
inc
sahf
out
fadds
leave
or
xlat
scas
gs
out
and
sub
lcall
pop
das
stos
cmp
or
sar
xor
fbld
test
jle
push
mov
popf
leave
pusha
call
shlb
test
fdivr
mov
icebp
adc
adc
jo
cmp
loopne
aaa
dec
arpl
dec
dec
jnp
outsl
add
std
rorb
test
enter
adc
movsl
dec
jne
adc
cmpsl
xorl
push
movsb
jae
cmp
shlb
lods
cmp
jle
xchg
mov
repnz
mul
packuswb
out
push
xchg
dec
lock
pop
movl
mov
push
add
stos
fdivl
mov
and
push
jmp
and
in
jns
cmpsb
mov
enter
inc
loope
andl
popa
push
scas
rorb
std
hlt
imulb
sub
ljmp
xor
pop
or
push
cmp
sub
jp
cmpsl
in
add
xchg
xor
adc
fildl
cmpsl
aam
shll
call
lcall
sbb
mov
loop
inc
push
adc
or
lods
popa
btc
test
pop
test
adc
xchg
pop
into
setb
stos
xor
pop
dec
xchg
repz
jg
cmp
repnz
pop
and
clc
mov
or
popf
pop
test
sbb
push
fidivs
icebp
inc
adc
outsl
xchg
mov
add
int
dec
dec
js
cs
call
in
in
dec
ret
scas
xor
xor
ja
aad
push
or
cmpsl
add
add
repnz
push
popf
mov
mov
cmpsl
ja
in
sub
push
inc
nop
repnz
sbb
negl
xchg
mov
mov
insb
adc
shll
mov
shrl
push
and
mov
xor
jg
jge
xchg
and
cmp
out
ljmp
or
dec
lods
movsl
int
mov
shlb
scas
test
scas
jp
xchg
cmp
out
pop
adc
dec
push
cmp
xor
cld
lcall
insl
jmp
test
fldt
repnz
jne
jecxz
pop
adc
xor
xchg
sub
pop
pop
lds
mov
xchg
sahf
jo
jp
rol
lods
push
push
inc
and
ljmp
xor
out
in
cmpsl
out
mov
fwait
xchg
ljmp
mov
xor
add
sbb
enter
pushf
mov
js
dec
pop
pop
cmp
movsb
test
outsb
inc
sub
test
adc
fwait
xor
ret
repz
inc
cld
push
out
jbe
cmp
cmp
mov
push
dec
add
and
mov
fdivp
add
loop
outsl
xor
loope
es
out
cmp
lods
jne
push
mov
mov
jg
dec
adc
mov
adc
dec
loop
aad
rcrl
dec
imul
pop
adc
shll
pop
andps
sbb
adc
jp
adcl
mov
shlb
dec
fistpl
sub
stc
repnz
std
xor
jl
push
sub
jmp
sbb
popf
jmp
das
add
popf
outsl
clc
mov
pushf
lret
pusha
mov
xor
cmp
movsb
sub
lret
pop
je
jae
mov
repz
lods
loope
mov
fldenv
fs
ret
dec
jp
test
pop
arpl
ret
cmp
ljmp
pop
mov
mov
push
inc
jle
mov
push
mov
mov
cmc
and
xchg
mov
inc
dec
leave
inc
xchg
jecxz
ljmp
xor
xchg
popf
in
jp
push
loop
add
mov
arpl
cmp
dec
mov
push
push
mov
mov
dec
pop
inc
inc
daa
mov
test
fnstcw
addl
mov
pop
sbb
jl
arpl
add
xchg
and
dec
shrb
lret
or
inc
sub
or
stos
push
mov
hlt
pushf
jne
add
sti
pop
jb
das
filds
movsb
movsb
jecxz
or
cmp
push
mov
int
cmpsl
jmp
add
in
xchg
iret
loop
test
pop
add
mov
ret
sub
lock
test
push
sub
popf
add
stc
add
and
in
ja
cmp
in
mov
add
xor
hlt
fcmove
mov
jp
pop
sbb
inc
movswl
lock
cmpsl
inc
or
push
frstor
aam
insb
inc
xchg
cmp
arpl
iret
loopne
lcall
and
jecxz
rcrb
mov
inc
int
pop
xlat
inc
fsts
dec
dec
mov
pop
ret
repz
data16
pop
rclb
hlt
cli
add
push
clc
rorb
hlt
mov
insb
lret
repnz
sahf
hlt
icebp
shr
mov
cmp
jmp
cmc
test
imul
das
sti
pop
pop
mov
pusha
lret
push
inc
movsb
xchg
in
mov
inc
mov
stos
fsubrl
push
daa
pop
mov
cmp
mov
add
mov
lods
faddl
jns
or
ds
pusha
push
and
sub
fisttpl
pop
lds
cld
pop
push
pop
subl
add
test
es
or
divl
lds
adc
mov
push
sub
cltd
lods
out
cmp
sahf
shlb
add
rdmsr
mov
insb
stc
xchg
fisubrl
xor
movsb
sub
mov
clc
xor
leave
and
cmp
xchg
sbb
vmwrite
aad
frstor
mov
gs
pushf
imul
mov
jmp
inc
rcrl
xchg
sub
and
lds
ret
jns
dec
stc
test
pop
fstl
hlt
shlb
xor
pop
cmp
cmpsb
cmp
add
xchg
push
orl
inc
cmp
in
xchg
mov
shlb
adc
loope
mov
mov
das
dec
and
fistpl
pop
dec
xchg
xor
push
hlt
jo
mov
fsubrl
inc
notl
jnp
push
mov
add
fiadds
cs
push
sbb
aam
fs
mov
aam
inc
cmc
cmpb
push
mov
dec
andl
jmp
dec
sbb
fmull
lods
and
pop
xor
add
shlb
mov
jg
xchg
pop
add
jge
pop
dec
mov
mov
test
fidivl
je
xchg
daa
aam
fsubs
mov
jl
add
call
sbb
fsubrs
pop
push
repz
xchg
sbb
jp
pop
mov
lds
jp
jmp
push
mov
push
addb
stos
int3
mov
outsl
inc
pop
or
es
xchg
jecxz
les
cli
mov
mov
shrb
mov
xor
mov
popf
movsb
jge
sbb
jne
popf
xor
rclb
push
sbb
jle
stos
mov
mov
gs
jge
lret
int
mov
xchg
xor
mov
outsl
movsl
jecxz
jb
mov
pushf
aam
mov
out
lods
adc
loopne
lea
sub
cmp
mov
mov
mov
jnp
rclb
out
sti
cmp
jmp
inc
sahf
mov
mov
fnsave
rcll
or
insb
mov
dec
push
jge
xor
notl
push
imul
xor
add
pop
mov
mov
mov
lcall
xchg
sub
pop
mov
dec
sub
cmc
dec
and
pop
jnp
or
cmp
and
insb
mov
adc
ljmp
sub
push
mov
or
inc
fimull
jnp
stos
out
out
or
out
je
xchg
outsb
dec
js
push
in
aaa
daa
sub
xchg
cmpsb
xchg
std
mov
inc
shl
dec
mov
push
in
andb
cmp
iret
mov
mulb
xlat
dec
shll
leave
xchg
mov
cli
add
jbe
jl
dec
in
pop
mov
cmp
jecxz
push
outsb
jnp
and
out
nop
int
inc
jns
std
ljmp
leave
xchg
xchg
mov
jmp
fdiv
inc
sbb
cli
arpl
xchg
data16
popf
cmp
loopne
mov
or
or
cmp
daa
es
dec
test
cmp
mov
inc
push
arpl
jle
mov
shl
xchg
mov
and
aas
sbb
xor
hlt
push
adc
mov
sbb
movsb
imul
fs
dec
movsl
mov
movsl
mov
cmpsl
cmp
push
dec
inc
xchg
mov
adc
push
mov
xor
sbbl
jbe
ret
cltd
xchg
push
stc
push
add
mov
xor
sub
mov
mov
cmp
arpl
jnp
in
cltd
enter
cld
aad
sbb
lock
inc
icebp
stos
dec
fildll
xor
jno
jl
data16
and
dec
inc
pop
jmp
xor
mov
shrb
inc
scas
pop
adc
in
push
int
xor
push
jge
push
mov
xor
and
testl
mov
lock
std
cmc
lods
ds
aaa
cmp
xchg
aam
sub
leave
push
sbb
inc
push
add
data16
mov
in
mov
imul
test
in
inc
pop
add
and
jl
stos
pushf
push
mov
sbb
pop
mov
enter
mov
jo
and
test
mov
add
or
cli
or
iret
push
mov
mov
arpl
mulb
imul
cmp
and
cs
insl
orb
sti
aad
out
les
cli
cltd
or
in
dec
int3
dec
int3
orl
aaa
stc
xor
int
cmc
pop
ud1
sub
xchg
movsl
sti
adc
les
mov
fisubrs
adc
in
mov
add
adc
daa
xor
pop
pop
enter
push
out
mov
adc
lods
arpl
adc
sub
sbb
into
inc
lret
js
push
mov
loopne
xor
pop
imul
stc
fmuls
sbb
js
stos
and
mov
rcl
sbb
out
ss
xchg
cmpl
and
negb
movsb
dec
das
sbb
lods
mov
add
icebp
add
inc
dec
cmp
in
lods
jno
adc
pop
cmp
mov
and
fsubrp
lret
dec
idivb
jle
add
push
stc
ds
mov
sub
test
add
fstps
inc
adc
leave
jae
rorb
in
popf
in
cmp
stos
inc
mov
xchg
push
lahf
lret
popa
cmp
loope
or
mov
xchg
das
and
sub
clc
jne
or
iret
pop
dec
sbb
xchg
lods
out
lcall
into
sbb
dec
mov
inc
ljmp
lock
lods
out
lods
ret
add
xchg
out
pop
rclb
mov
pop
pop
jno
cmpb
or
mov
gs
faddp
xor
mov
add
and
scas
pop
mov
nop
push
mov
mov
aam
insb
xor
out
xor
imul
xor
jb
dec
push
push
mov
cmp
sahf
and
fists
fsubr
lcall
cmp
mov
mov
gs
loopne
pop
in
dec
cmc
sbb
rolb
xchg
add
fs
out
pushf
push
push
cmp
jmp
inc
repnz
fldenv
xchg
jae
push
fs
xchg
into
sbb
push
daa
notl
xor
scas
popf
pop
xchg
mov
sub
mov
sbb
nop
dec
scas
hlt
test
idivb
push
fdivrl
bound
dec
push
and
repnz
in
movsb
or
sub
mov
inc
and
shll
insb
je
dec
and
or
imul
cmp
fmull
mov
xchg
pop
push
das
push
outsb
ficoms
jle
mov
fidivrl
and
and
sbb
jle
fwait
mov
dec
mov
mov
call
popa
sar
pop
xchg
in
dec
outsb
mov
push
sub
enter
cmpsl
loopne
pop
outsl
fwait
sbb
xchg
fstp
enter
mov
imul
mov
ja
aaa
outsb
sarb
mov
dec
adc
xchg
push
dec
faddl
in
xlat
popa
mov
in
rclb
xchg
fildll
push
out
rorb
mov
out
xor
roll
inc
mov
rcrb
dec
arpl
and
in
fmuls
cmpsb
xor
xor
push
xor
insl
cmpsl
pop
pushf
mov
push
xchg
nop
mov
mov
stc
adc
scas
xor
xchg
dec
pop
test
aas
mov
jne
pusha
mov
xor
stos
pop
cltd
lahf
adc
test
movsl
jmp
cli
imul
mov
mov
mov
in
loop
mov
add
xor
pop
mov
adc
enter
add
sbb
ljmp
shl
mov
mov
jb
sub
push
scas
imul
insl
pusha
mov
lds
xlat
mov
bound
imul
xchg
jmp
addl
push
les
cmp
add
cltd
in
std
and
fcmovbe
xchg
inc
ljmp
pop
inc
sub
push
mov
arpl
rolb
subl
push
lock
sbb
mov
lds
adc
pop
loopne
jb
xor
lods
mov
mov
push
ljmp
aaa
push
ffree
testb
inc
lret
pop
mov
xor
jge
jg
xor
pop
adc
cmp
pop
and
ret
mov
mov
test
adc
pop
inc
adc
inc
cld
popa
adc
push
cmp
jb
std
cmpsl
xchg
fsts
test
or
jp
out
fidivrs
lret
daa
xchg
outsb
push
jl
cld
inc
cld
jg
adc
sbb
das
inc
cmc
cwtl
ret
or
mov
out
stc
mov
cmp
stos
and
jp
inc
lcall
fst
jnp
sub
sub
xchg
inc
adc
lcall
popa
loope
push
xor
test
test
fdivs
mov
mulb
pop
mov
xchg
lcall
ja
push
popf
jg
inc
repz
jo
mov
jge
xchg
pop
clc
in
mov
or
inc
aam
ret
xchg
inc
mov
push
jge
pop
fstps
lods
inc
pop
fcom
cmp
fwait
scas
mov
adc
jmp
inc
dec
xor
mov
mov
mov
jge
fimuls
inc
cli
cs
orl
mov
push
sti
sbb
inc
jecxz
in
jmp
pop
sbbb
or
cwtl
sub
nop
in
or
rorl
aaa
andb
or
jl
fidivl
dec
aam
or
or
pop
popa
daa
adc
xchg
lahf
mov
and
inc
stos
rcll
inc
std
test
cmp
xchg
dec
push
rorb
ljmp
cmp
push
stos
mov
mov
fisubs
mov
xor
adc
sbb
int
sbb
in
add
xchg
dec
sbb
pop
popf
ss
int3
mov
sbb
dec
arpl
jno
xchg
jl
inc
imul
sub
xchg
scas
movsb
aad
nop
lods
fwait
xchg
pop
nop
ret
sub
insl
pop
jbe
cmp
hlt
pop
jl
enter
lcall
in
push
add
ljmp
out
rcl
mov
pop
mov
shlb
fdivr
inc
rclb
les
lods
xchg
stos
or
pop
bound
dec
dec
xor
mov
fisubrl
or
or
imul
and
pop
lret
mov
mov
sahf
test
add
out
jmp
pop
pop
push
psadbw
jg
or
cmc
and
mov
enter
push
mov
cmp
and
xchg
int
pop
jno
fsubrs
outsb
je
imul
sti
mul
jge
subl
sub
sbb
leave
xchg
ds
fsubrs
out
movsb
mov
jmp
or
adc
xor
ss
pop
insl
adcb
jge
jle
fs
int3
les
loopne
pop
out
popa
or
jbe
adcb
mov
cltd
xor
jnp
leave
xor
push
dec
xor
push
aaa
add
bound
out
cmpsl
push
fsubl
and
xchg
adcl
lret
dec
adc
call
sbb
push
cmp
and
out
pop
dec
and
mov
aam
push
pop
mov
or
ja
mov
lahf
shll
inc
push
into
jb
mov
dec
scas
mov
lea
fistl
cld
ret
pop
or
int
fisttpll
test
pushf
mov
shlb
adc
lea
jbe
dec
xor
inc
out
aam
outsb
sahf
mov
or
cs
mov
into
cld
leave
icebp
mov
cmp
imul
scas
dec
sbb
jle
lods
fdivr
in
and
push
jge
es
repz
cs
in
adc
pop
repz
xor
loop
arpl
pop
and
xor
fstpl
nop
iret
jmp
arpl
andb
fcom
fcomp
jns
sti
cld
in
cmp
xor
sub
enter
dec
adc
jae
bound
icebp
hlt
cltd
outsb
in
das
unpcklps
adc
pushf
pop
sysenter
xor
call
mov
dec
popa
adc
popa
inc
mov
push
icebp
push
or
adc
dec
int3
mov
popf
pop
adc
mov
insb
add
sti
cmpsb
adc
pusha
pusha
cs
jge
sub
lahf
xchg
movsb
aaa
test
in
or
fwait
fwait
out
std
xchg
inc
push
cltd
ret
cmp
jne
adc
and
aam
mov
lods
mov
pop
sbb
or
mov
mov
sbb
cmpsl
fs
lods
sbb
cmp
stos
les
cmc
je
nop
cwtl
add
mov
std
movsb
cmp
lahf
xor
push
sbb
jb
mov
jae
dec
pop
popf
movntq
in
data16
push
scas
scas
sbb
jge
sub
xchg
in
sub
pop
xlat
ficompl
ret
movsb
and
mov
mov
dec
out
cmp
testl
orb
mov
test
add
pop
in
lds
xor
dec
cmp
les
mov
sub
insl
dec
aam
sahf
lret
xchg
xchg
das
xchg
popa
xchg
push
cwtl
fidivs
cmp
sarl
xchg
loop
test
cmpsb
cmpsb
daa
lea
and
dec
fisttpl
je
dec
sbb
xchg
addl
or
xchg
inc
mov
scas
lahf
icebp
push
jb
sbb
xchg
pop
clc
jno
loope
aad
arpl
ret
sub
mov
jp
push
xchg
ret
out
aad
xchg
aad
repnz
mov
aaa
stos
lds
mov
pop
cmpsb
andb
dec
out
std
sub
inc
push
test
rcrb
addb
push
imul
outsb
xchg
lea
xchg
cld
sub
scas
rcll
mov
ljmp
jp
lcall
lahf
mov
xlat
testl
jbe
jle
rcrl
xor
mov
mov
or
dec
movsb
sub
sbb
call
mov
clc
fdivl
mov
and
dec
loope
adc
in
pop
dec
inc
add
daa
bound
adc
repz
gs
int
add
mov
cmp
cmp
push
xor
test
xor
fnsave
and
dec
outsl
dec
or
hlt
cld
dec
xor
mov
dec
mov
repnz
xchg
or
in
mov
imul
mov
pop
mov
mov
pop
pop
add
xor
mov
push
rcll
aam
xor
and
inc
outsl
dec
repz
push
outsb
out
andl
notb
sub
fs
jnp
lods
adc
mov
in
icebp
cltd
jge
pop
sbb
test
loopne
cld
jbe
les
movsb
ljmp
pop
fs
dec
jno
test
xchg
push
sub
and
push
popf
cmc
movb
outsl
lds
mov
mov
sbb
rorb
xor
pop
mov
movsb
movsb
jne
inc
add
push
jno
adc
test
mov
jnp
clc
add
outsb
in
arpl
mov
rcl
pusha
jle
stos
data16
test
jne
ds
test
inc
pop
push
int
pop
lcall
or
push
lock
fisubl
xchg
loope
xor
push
mov
jnp
cmp
mov
cmc
mov
test
mov
jb
and
fidivrl
sbb
cmp
xor
mov
xchg
cmc
jo
cmp
jle
xchg
sub
jge
arpl
hlt
out
cmp
rorb
cmp
inc
mov
daa
or
mov
std
or
fcoms
xor
dec
sahf
cltd
mov
inc
lock
and
or
pop
and
and
mov
js
push
orb
xor
scas
ljmp
push
lcall
inc
out
mov
mov
imul
pop
sbb
xor
dec
push
outsb
mov
nop
scas
pop
mov
mov
in
mov
cwtl
jp
test
mov
or
or
gs
pop
jne
mov
imul
cmpsl
add
jg
add
pop
stos
iret
cmp
mov
jne
or
repnz
mov
fstl
sbb
sti
pop
dec
out
push
sub
jmp
aaa
cmpsl
mov
pop
fildll
popf
mov
sbb
scas
inc
push
sti
xlat
mov
push
xchg
sub
scas
subl
jge
add
jecxz
cwtl
and
dec
pop
out
hlt
in
shl
or
and
sahf
xor
sub
cmpsl
and
add
insb
rorb
lock
push
adc
cmp
movb
lret
sti
nop
xchg
movsl
push
mov
inc
or
dec
mov
xchg
cmp
es
mov
add
push
adc
movsb
jg
pop
cmp
mov
addr16
cs
and
lret
mov
mov
mov
xor
jne
out
pushf
sbb
scas
rcll
xor
lret
cltd
orl
xor
xchg
lret
cmpsb
inc
ljmp
ss
mov
adc
in
addb
int3
or
cld
push
jmp
sub
xor
movsb
pushl
cmp
repnz
mov
mov
out
stos
roll
cmp
arpl
xchg
adc
jbe
pushf
inc
push
and
cld
push
mov
push
aad
or
xchg
mov
xchg
aam
mov
gs
mov
xor
into
pop
gs
aad
and
sbb
das
or
dec
sbb
cltd
lret
add
or
ss
fstpt
mov
and
or
lods
filds
jo
inc
ljmp
dec
pusha
mov
bound
push
cmpsl
inc
jg
push
pop
add
pop
jp
or
add
xor
fs
jae
pop
jecxz
add
push
mov
mov
test
cltd
jl
mov
jl
sub
or
sub
popf
les
test
addr16
mov
push
pop
pop
add
xchg
dec
out
int
dec
ja
push
flds
call
ror
cmp
cmp
pop
out
shll
xchg
push
out
mov
lret
mov
inc
sbb
das
or
jmp
out
dec
outsl
popa
ret
fcmovu
js
and
or
add
lea
je
imul
sub
adc
jno
idivl
movsb
add
nop
popf
lds
dec
out
cwtl
retw
cmpsl
jns
xor
jmp
lahf
or
mov
jecxz
das
pop
pushf
aaa
stos
inc
notb
and
ret
outsb
mov
clc
jl
inc
adc
fcomps
push
fistpl
aaa
pop
enter
fmull
pop
int3
lods
xchg
int3
inc
cld
mov
fisubl
adc
cmc
mov
cli
arpl
insl
sub
mov
xchg
dec
stc
outsb
fs
inc
lcall
repz
rcl
test
adc
xlat
sbb
gs
jp
lods
sub
push
mov
scas
xchg
out
ret
adc
out
ds
mov
xor
adc
push
xor
jae
xchg
ret
adc
leave
nop
mov
es
je
divl
repz
flds
mov
add
arpl
cli
jge
or
cmp
xchg
mov
icebp
daa
add
ja
jns
mov
dec
mov
repz
mov
adc
xchg
fsubs
push
dec
cmpsb
mov
cmp
bound
add
fimuls
lods
pop
fidivs
mov
mov
imul
out
scas
xchg
cmpsb
mov
adc
inc
hlt
push
in
sarb
arpl
stc
stos
mov
out
js
arpl
push
out
or
sbb
push
subb
pop
rolb
inc
scas
jmp
ret
cmp
dec
lea
push
outsb
add
dec
push
sti
xor
push
adc
cmp
div
xor
push
and
push
push
push
push
jno
mov
mov
pop
xchg
into
int3
dec
shll
mov
leave
loop
sbb
xor
cmc
subl
je
mov
test
push
pop
xor
pop
mov
iret
push
inc
mov
add
cmp
push
pusha
mov
popf
jo
dec
mov
sub
test
sarl
cmp
sub
mov
cwtl
frstor
in
adc
loope
mov
add
pop
icebp
mov
mov
outsl
test
mov
aas
or
test
xor
aas
aam
push
xchg
cmp
jbe
in
cmc
lret
icebp
testl
or
stos
rcr
mov
je
fucomp
xlat
mov
js
addb
rcrb
out
xor
cmp
xchg
in
mov
scas
pop
pop
mov
loop
cmp
divb
popa
or
xor
jp
arpl
addr16
sbb
cmp
clc
daa
cmp
inc
sti
mov
sbb
sbb
rorl
dec
push
or
mov
or
xchg
inc
jg
out
mov
lcall
and
clc
jg
shlb
xor
fs
xchg
shrl
cmp
lret
insb
inc
inc
clc
cmp
jg
xchg
sti
lods
xchg
ds
or
mov
pop
pop
xchg
jmp
pop
lds
dec
sbb
mov
test
filds
xchg
mov
mov
xchg
dec
rol
insb
dec
imul
movq
loopne
scas
sbb
in
cmp
icebp
movsl
fisubrs
dec
sbb
outsl
xchg
cwtl
and
stos
add
jne
mov
ret
adc
imul
jbe
movsb
jno
loopne
cmp
jns
sub
and
lahf
xchg
push
sahf
test
jg
fwait
imull
xchg
push
je
arpl
pop
pop
pop
in
pop
push
jg
cmp
data16
and
push
out
decl
mov
stos
or
in
sbbl
outsb
mov
icebp
add
dec
outsl
lret
std
int3
adcl
sbb
xchg
stos
jne
sahf
and
icebp
fwait
cmp
sbb
adc
mov
stos
xchg
sbbl
adc
push
mov
ret
pop
add
lret
sti
or
sbb
fwait
mov
cs
gs
les
xchg
jp
mov
or
in
in
loopne
stos
mov
aam
out
fidivrl
cmp
loopne
mov
push
js
iret
out
pusha
data16
cwtl
jno
dec
int3
js
push
xorl
les
sbb
cld
cmpsl
push
sub
and
xor
xor
jo
and
in
inc
xchg
push
pop
push
adcb
shll
mov
lret
stos
mov
es
xor
mov
xchg
popf
mov
adc
fcomps
jae
mov
and
jb
jae
movsb
and
fdivrs
cs
arpl
lods
cmc
xorl
mov
insl
push
push
lret
iret
pop
or
jne
mov
or
ljmp
push
fs
stos
sbb
mov
lods
xor
xor
lods
lods
sbb
ja
in
sbb
xchg
shrl
add
pop
add
jbe
and
pusha
xchg
xchg
rorl
xlat
cmp
dec
insl
xchg
rcrl
push
xor
imul
pop
xchg
or
cmp
outsb
aaa
mov
dec
or
cmp
inc
lret
xor
mov
push
mov
pop
cmp
push
int3
lock
or
pop
dec
fildll
jmp
je
xor
fstl
subl
pop
mov
ja
jecxz
jo
jg
leave
sbb
scas
or
add
out
imul
in
movsb
stos
bound
fwait
addr16
mov
jle
sub
and
mov
out
sbb
enter
xor
movsl
jb,pn
fs
or
xlat
cmp
inc
pushf
jnp
imul
das
sub
and
mov
xchg
lock
in
xor
cltd
orl
cmp
jns
fmull
enter
test
stos
cmp
jge
sub
mov
inc
shlb
test
repz
cmp
int
lock
scas
das
inc
das
inc
dec
cmpsl
cld
mov
out
cmpsb
mov
xor
mov
insl
or
push
mov
rcr
aaa
lock
add
insb
aaa
add
rorb
dec
into
es
dec
fsubrs
jae
push
inc
adc
pop
push
dec
je
rcrb
gs
or
push
cmpsb
testb
out
mov
movsl
push
lds
push
repz
cmc
xor
pushf
jne
sub
inc
mov
cmp
pop
arpl
aaa
jbe
cmp
sbb
or
jmp
insl
pop
and
xchg
or
out
pushf
jge
push
shrl
mov
lcall
jp
cmp
cmp
jg
jp
cmp
stc
repnz
sub
xor
lock
mov
inc
incb
and
test
test
cmp
sbb
inc
testb
or
ja
sub
in
and
aad
xor
mulb
hlt
iret
loope
sarb
sub
jns
cli
or
loope
sbb
pushf
mov
adc
jg
repz
mov
mov
mov
sub
rorl
in
fld
xchg
sbb
aas
popa
dec
mov
test
mov
dec
mov
mov
iret
mov
test
sub
sarl
ds
mov
sbb
dec
mov
adc
rcrb
sub
cld
call
sub
push
das
cmpsb
add
mov
aam
ret
popf
inc
loopne
fdivr
mov
xchg
mov
mov
and
add
xchg
cmp
inc
pop
fcos
mov
mov
pop
clc
jl
lds
or
add
push
lahf
sub
sbb
cmp
sbb
sti
xchg
lret
aas
jg
mov
mov
dec
push
adc
jl
cwtl
and
sbb
cmp
repz
sbb
or
les
inc
and
sar
sub
or
xchg
pop
or
or
mov
mov
jge
mov
push
xor
in
jne
xchg
mov
inc
add
mov
data16
dec
jge
jns
mov
ss
imul
sarl
in
cmp
push
int3
cmp
sbb
mov
in
sub
pushf
popa
data16
and
mov
dec
adc
inc
xchg
pop
pushl
outsb
mov
in
lock
xchg
mov
lock
push
out
test
test
mov
push
inc
pop
and
fsubrl
push
mov
mov
call
sub
orl
icebp
ds
mov
mov
add
rcrl
pop
jl
pop
mov
das
xchg
mov
loopne
call
mov
sub
mov
mov
dec
xor
ds
shlb
pop
inc
mov
pop
into
push
pop
stos
gs
outsl
add
adc
sbb
cwtl
lret
and
push
sbb
in
movsb
inc
push
jge
mov
add
dec
push
lahf
mov
jge
dec
movl
in
lods
mov
dec
xchg
sub
imul
mov
enter
jle
in
mov
cmpsb
sub
cmp
mov
push
dec
cltd
inc
mov
fs
inc
mov
cmpsl
pop
aad
mov
fwait
cmp
or
dec
push
testl
sbb
dec
push
out
cmp
clc
sti
bound
push
bound
loope
popf
hlt
pop
lds
aaa
fdivrl
or
into
and
jg
jl
pop
and
movsl
mov
jae
pop
loope
add
adc
xor
popl
enter
mov
in
pop
mov
inc
push
repz
mov
jae
xor
in
imul
mov
in
sbb
test
mov
sub
mov
iret
test
push
mov
int3
and
adcb
mov
sbb
adc
test
outsl
add
fstl
lret
shll
mov
inc
out
stos
ljmp
adc
jl
out
fwait
out
cmp
jne
in
ljmp
jge
cmp
mov
xlat
cmp
and
popf
inc
or
add
sbb
or
dec
test
adc
pop
imul
lds
rorl
fisubl
call
pop
icebp
lahf
push
pop
sbb
mov
shrl
push
xchg
or
fwait
stos
imul
and
ja
add
push
add
mov
jmp
fimull
loope
sub
in
mov
add
es
inc
jmp
adc
icebp
and
xorb
cmc
pop
cmp
ja
jae
pop
mov
test
icebp
rolb
mov
movsl
cmp
sub
xchg
dec
arpl
test
xchg
js
gs
cmpsb
shrl
int3
stos
clc
jae
and
or
and
out
sbb
push
rorb
fstenv
icebp
push
in
mov
sbb
scas
lahf
xor
jne
jo
xor
aam
push
mov
daa
inc
dec
jb
cs
sub
test
sahf
sbb
loope
mov
add
inc
sub
fwait
jecxz
push
add
add
sti
sub
es
xchg
stc
pop
sub
xchg
sarl
pop
cmp
cmp
cmp
mov
push
push
aam
inc
push
sbb
ds
adc
repz
jne
jnp
cli
cmp
rep
dec
xchg
enter
out
dec
test
lea
popf
arpl
shrl
sbb
test
fs
lods
gs
into
movsb
clc
mov
imul
push
insl
lcall
test
jge
dec
push
dec
mov
mov
push
fs
add
adc
xchg
into
push
mov
inc
test
mov
xor
push
aam
fisttps
sub
mov
mov
push
mov
fwait
test
cld
inc
adc
cwtl
int
std
jl
lahf
rclb
push
lea
dec
int3
cld
sbb
in
iret
fstps
push
shlb
pushf
test
pop
inc
dec
into
or
ret
mov
cmp
test
mov
pop
aam
lods
imul
pop
out
or
aam
add
inc
fs
std
cs
and
out
cmp
cltd
push
mov
daa
inc
fdivrl
repz
mov
pop
popf
xor
or
in
mov
sarl
roll
adc
rep
rol
cld
pop
dec
xchg
loop
inc
jmp
pop
into
push
or
scas
jp
ffree
push
les
jle
mulb
adc
jmp
jmp
ftst
daa
xchg
rcr
das
or
popa
sarb
or
sbb
or
in
adc
mov
cmp
test
lahf
adc
ljmp
and
sbb
sbb
aas
sub
sbb
inc
in
cld
hlt
sbbl
xchg
adc
leave
call
in
pop
mov
xor
push
lret
mov
loop
scas
jle
jp
mov
clc
xor
cmp
cmc
adc
fcomp
into
push
repz
in
mov
hlt
enter
jo
add
pop
mov
inc
mov
jns
sbb
jg
xor
xor
aam
jne
out
push
lock
pushf
data16
iret
mov
insb
xor
mov
sarl
fs
ret
sbb
sbb
mov
bound
dec
jl
aam
and
and
add
sub
dec
mov
jmp
aam
or
mov
dec
sbb
adc
and
jge
xchg
enter
outsb
aas
in
fldl
xchg
fistpll
mov
imul
out
sbb
push
inc
jmp
lcall
lock
or
push
and
mov
cltd
sbb
adc
mov
inc
add
dec
test
test
dec
aaa
mov
out
pop
int
das
inc
outsb
xor
and
add
push
sti
sub
jns
and
jnp
mov
dec
mov
sub
movsl
out
fimull
out
aaa
cmp
int3
xchg
into
xor
or
and
adc
and
xchg
lea
inc
test
push
mov
pop
sub
fmuls
xchg
jae
in
mov
xor
roll
sbb
daa
shrl
inc
stos
cmpsb
lret
add
in
jb
or
mov
popa
fwait
xor
push
hlt
movl
inc
enter
mov
or
aaa
shrl
sbb
xchg
mov
sbb
jecxz
cmp
or
jecxz
cli
lods
pop
ja
repz
xchg
pop
add
jge
stc
and
jne
xor
icebp
inc
fstl
insl
call
fimuls
lods
cli
daa
or
mov
jnp
mov
or
sbb
mov
jp
push
dec
push
pxor
sahf
xor
sub
push
ds
outsb
mov
insb
jns
adcb
inc
aam
xchg
lods
sbb
sbb
push
jmp
jb
ret
cmp
mov
xchg
divb
arpl
sub
pusha
lds
daa
pop
insl
js
jge
pop
nop
in
add
xor
test
cmc
imul
movsl
pop
addr16
sbb
mov
jp
idiv
sub
jle
sbb
push
repz
stos
mov
incb
movsl
fsub
dec
or
add
or
push
mov
shll
adc
push
and
mov
sbb
pop
dec
adcb
cmp
in
jae
push
xor
inc
and
push
mov
cli
sub
mov
add
add
aaa
push
xor
movsl
aas
xchg
and
push
imul
mov
outsb
and
aad
inc
aas
arpl
cli
cmp
jmp
xor
std
xor
lods
mov
rol
dec
cmp
mov
pop
mov
add
mov
stos
adc
pop
dec
or
jne
push
dec
sbb
outsb
and
fwait
shlb
je
sbb
outsb
cmpsb
movsl
xchg
roll
ss
jmp
fisubs
and
pop
movsb
orl
scas
lret
push
mov
dec
sarb
add
out
cmp
pop
rcrl
cmp
sbbb
out
dec
add
lock
pusha
and
xchg
or
andb
mov
push
lret
pop
mov
popf
inc
push
push
imul
movq
mov
syscall
fiaddl
mulb
idivb
aaa
fisttpll
xlat
push
inc
cli
enter
cld
cmpl
add
pop
xlat
loop
and
or
repz
mov
xor
stc
or
add
nop
mov
sbbl
xchg
sub
and
in
mov
aam
in
cld
cmp
or
xlat
sbb
xchg
mov
or
cmpsb
mov
stc
fisttpl
pop
mov
out
movsb
daa
xrelease
xchg
loop
mov
clc
enter
xor
repz
fcmovne
inc
out
je
mov
out
cmc
movl
sahf
sub
adc
js
das
fsubrl
cmp
test
cltd
mov
das
stos
xlat
int3
aad
dec
das
mov
js
sub
filds
scas
and
leave
or
clc
xor
icebp
and
addr16
shll
in
lock
lcall
and
pop
aas
mov
rclb
js
and
cs
mov
cmp
out
cmp
inc
fwait
js
cwtl
ja
nop
and
pop
jns
pop
sbb
mov
out
push
scas
rcrb
lds
sti
xorb
test
loop
addl
dec
sbb
movsl
aas
nop
sbb
jl
icebp
mov
dec
jnp
fldl
sbb
sti
pop
hlt
or
and
es
dec
xor
dec
cli
jno
repz
push
fwait
icebp
lods
xor
mov
sbb
lahf
jg
jno
push
mov
inc
inc
loop
iret
sarb
fdiv
inc
sub
lcall
xchg
sbb
inc
out
push
ss
adc
mov
dec
stc
inc
cmp
sbbb
xor
mov
and
mov
pop
rolb
pop
pop
adc
xor
ja
in
inc
push
leave
pop
mov
add
inc
mov
xor
sbb
xchg
xor
repnz
das
and
repz
adc
rep
xchg
ffree
mov
mov
out
icebp
fldt
out
jo
fstpt
in
xlat
fbld
push
push
mov
es
out
outsb
push
and
aad
das
aad
xchg
mov
push
test
xchg
push
mov
int3
dec
mov
xchg
jo
clc
mov
dec
mov
jmp
adc
sub
imul
pop
cmp
mov
sub
dec
mov
iret
or
add
xchg
push
jb
adc
gs
and
sub
and
pop
jle
daa
xchg
xlat
pop
insb
icebp
xchg
loopne
mov
mov
pusha
out
gs
adc
pop
pop
shl
test
mov
repz
ret
push
popl
imul
imul
cli
adc
xchg
out
sbb
mov
iret
or
loope
sbb
into
mov
fstps
shrb
scas
rorb
lods
js
nop
shrb
insb
adc
pop
out
jnp
sbb
out
jecxz
scas
lock
aad
and
dec
and
dec
push
dec
int3
gs
inc
inc
push
xchg
outsb
mov
jne
mov
fcom
mov
pop
inc
mov
jl
add
and
stos
add
enter
and
xchg
mov
fldenv
test
push
pop
arpl
comiss
out
mov
xor
jecxz
mov
lahf
in
out
lcall
fndisi(8087
scas
stc
lcall
and
mov
sub
cmpsl
orl
in
loop
data16
outsb
dec
xchg
mov
sbb
and
lods
pop
test
jns
outsl
pushf
pop
push
or
add
lock
push
push
cmpsb
cmp
jle
mov
sub
pop
fstpt
in
insb
ja
add
arpl
fisubrs
repnz
arpl
mov
aad
dec
inc
dec
sub
idivb
popf
add
out
cmc
imul
popf
add
test
xchg
pop
mov
lret
das
push
push
adc
fmuls
call
mov
clc
cltd
js
gs
fisubs
xor
push
aas
pop
mov
loopne
scas
insb
les
dec
jle
stos
popf
cmpsb
rorb
clc
push
lahf
jbe
and
xchg
sahf
rorl
lds
ja
mov
sub
out
pop
jb
dec
fisubrs
inc
push
xlat
and
sub
fs
int3
xchg
les
mov
pop
cmpsl
inc
xchg
insb
jmp
ljmp
fldt
or
push
or
or
lds
push
cmpsb
pop
fidivs
icebp
cwtl
lret
out
mov
jnp
lret
adc
push
les
sub
push
test
movsl
stos
sbb
loope
and
mov
jp
dec
mov
xchg
addl
add
scas
test
inc
data16
ret
mov
cmc
or
sbb
mov
ss
out
sbb
mov
mov
xchg
xchg
dec
or
enter
scas
jbe
mov
push
xchg
xchg
cmp
ja
pmullw
xor
cltd
iret
jp
and
mov
out
push
jne
jbe
insl
push
subb
jecxz
sub
xchg
gs
mov
push
jl
test
push
sbbl
lock
jmp
repz
xchg
cmp
outsl
fnsave
sub
cmp
fs
gs
ljmp
cmp
inc
ds
adc
jo
sub
setno
ret
out
insl
std
xchg
push
adc
daa
push
hlt
add
ror
cs
movsb
add
pusha
sub
and
dec
and
jl
push
fwait
mov
mov
jns
inc
push
cmpsl
cmpsb
fisttpl
jbe
jno
data16
or
xchg
fcoms
fadd
push
pop
mov
jae
dec
leave
cmp
shl
add
mov
xchg
add
cltd
sbb
mov
data16
mov
push
mov
cmpsb
xor
push
movsb
or
insl
bound
or
sbb
add
jae
dec
push
lods
sub
out
idivb
mov
mov
xchg
jg
jns
sub
pop
pop
loop
pusha
lahf
pushf
pop
add
inc
cmpsb
xlat
faddp
out
lds
int
outsl
ret
mov
and
push
push
fs
push
int
pop
scas
bound
call
data16
repz
andb
xchg
sub
out
sub
jle
ljmp
cmpsb
dec
call
jp
cwtl
pop
sub
jne
fsts
or
pmulhw
stc
jno
and
lods
test
iret
aas
jne
aaa
dec
and
repz
pusha
xchg
sbb
shrl
inc
popa
sarl
or
roll
int
inc
mov
les
and
inc
insb
shl
outsb
outsl
push
jle
mov
mov
stc
test
out
pushf
cwtl
imul
ret
aam
jmp
push
je
or
sbb
pop
cmp
mov
in
sub
out
pop
push
gs
sti
insb
roll
arpl
rorl
cmc
adcl
jp
sbb
ss
ds
outsb
daa
stos
adc
xchg
inc
dec
pop
pop
mov
les
mov
shrb
or
insl
xchg
adc
jno
bound
xchg
test
dec
icebp
fiadds
or
cwtl
xrelease
sbbb
add
add
call
xor
adc
and
jg
lea
fs
jmp
jl
xchg
sbb
mov
inc
sbb
pop
adc
orl
or
xchg
mov
push
sub
mov
add
sub
andl
in
test
or
fwait
pushf
mov
jmp
add
dec
inc
jne
adc
cmp
mov
fstpt
xchg
dec
mov
jb
inc
xchg
dec
jp
or
iret
mov
ja
mov
sbb
lret
xor
cmp
mov
iret
jnp
push
shlb
mov
xor
data16
pop
ret
inc
ljmp
addl
cmp
mov
mov
or
and
hlt
pop
lahf
enter
shl
adc
fisubs
shlb
inc
or
mov
push
dec
das
mov
dec
dec
jecxz
rcrl
sub
stos
dec
or
lock
addr16
testl
adc
jae
xlat
cmp
rcrl
jae
jg
sbb
jl
inc
mov
dec
sbb
mov
or
popa
lods
add
mov
push
mov
add
push
call
inc
pop
xchg
push
insl
aam
movsl
and
rclb
shll
cli
mov
ror
stos
frstor
mov
data16
mov
icebp
lds
cld
iret
add
mov
sbb
sbb
dec
add
mov
jb
ret
or
stos
out
xor
xchg
mov
or
or
add
sbb
outsb
aas
pop
mov
cmp
fwait
test
mov
inc
pop
pop
xchg
cli
add
mov
insb
adc
adc
xchg
fistpl
push
fidivrl
es
push
das
lret
das
jae
addr16
push
out
cwtl
adc
setb
lock
push
repnz
jl
xor
scas
push
mov
cmpsb
mov
inc
mov
cli
sti
test
fs
or
and
mov
or
mov
mov
sti
ret
rclb
icebp
popf
jge
and
dec
jge
xor
jb
dec
inc
mov
cmc
jg
sub
cmp
outsb
mov
sub
add
xchg
xchg
and
inc
and
mov
je
sbb
sbb
ja
mov
inc
ja
push
repnz
test
out
add
mov
dec
push
or
xchg
mul
jns
mov
push
or
leave
mov
iret
hlt
dec
cmp
mov
ret
cmp
repnz
xor
push
cld
in
call
pop
sarl
cmpsl
push
lahf
or
and
subb
sbb
mov
xchg
mov
cmp
or
pop
jbe
xchg
jp
xor
add
xor
insl
or
nop
into
cs
icebp
test
adc
push
test
fistpl
das
or
inc
aas
inc
dec
int3
inc
xchg
sti
in
pop
push
xchg
mov
jle
cltd
mov
imul
aas
call
xchg
xor
adc
rcl
fwait
sub
adc
or
repz
and
sbb
test
adc
test
ret
add
mov
adc
jge
add
add
lret
lods
xchg
clc
icebp
test
stos
aaa
daa
js
inc
jno
daa
ja
adc
jae
xchg
clc
push
rcrb
mov
les
lods
pop
cmp
js
and
sbb
cs
mov
stos
gs
push
test
mov
stos
mov
mov
out
dec
fsubs
mov
pop
ficoml
jae
fmull
out
or
jmp
push
lret
sahf
inc
mov
pop
push
jp
inc
push
push
inc
pop
lock
addl
pop
xchg
jp
mov
and
or
mov
mov
xor
aam
mov
out
cmpsl
ja
ret
fsts
jge
inc
xchg
sahf
xor
je
cmpsb
flds
std
sahf
cmp
jmp
mov
fcmovnbe
sbb
adc
jno
sub
sbb
push
shlb
aad
pusha
jnp
or
lock
mov
pop
mov
sub
das
jne
shr
push
sbbb
lock
xor
jae
shll
lcall
push
dec
inc
daa
cltd
test
mov
mov
push
loopne
sub
into
mov
mov
test
nop
pop
dec
mov
mov
push
inc
push
mov
xchg
out
test
push
pop
out
or
sbb
xor
mov
outsl
or
add
mov
mov
jcxz
daa
add
push
dec
add
dec
mov
outsb
push
and
arpl
jbe
pop
push
and
pop
xchg
pop
push
loope
and
jno
pop
popa
fstpl
mov
and
popa
lods
mov
adc
les
daa
neg
decb
data16
ss
test
lods
sub
inc
stos
int
bound
out
std
jmp
fwait
add
cli
mov
add
xchg
and
mov
push
add
push
negl
imull
aam
jge
mov
jl
int3
into
fisttps
into
add
daa
aas
push
cmp
stc
lcall
cmp
mov
ja
and
xor
dec
loope
je
xchg
xor
je
pushf
pop
mov
inc
mov
outsb
push
or
pop
insb
push
jecxz
xchg
and
shl
mov
call
iret
sub
cmpsl
cmpsb
loope
sbb
lret
lcall
inc
fidivrs
dec
inc
mov
aaa
xchg
dec
sahf
dec
test
je
fbld
es
inc
inc
inc
mov
inc
xor
mov
push
pushf
in
jp
jno
shlb
adc
pop
add
aaa
inc
add
ror
repnz
xchg
ss
pushf
ret
aam
adc
loop
push
xlat
xor
jno
pop
movl
insl
jne
das
repz
jo
data16
or
jmp
mov
sbb
mov
mov
push
jmp
je
cmp
aam
cmpsl
aad
stos
sub
in
xchg
jp
add
xor
jbe
push
loope
push
into
mov
xchg
lret
mov
ror
and
xorb
adc
xlat
sub
cmc
cmp
adcl
aas
pusha
adcb
mov
adc
and
sbb
jle
lock
mov
sbb
mov
mov
leave
cmpsl
sti
fildll
xchg
mulb
ret
or
push
inc
jno
sub
adc
jle
lahf
pop
js
pop
lcall
xchg
and
mov
js
addr16
xchg
dec
mov
shll
mov
sub
imul
sub
xor
dec
inc
cli
dec
push
mov
shlb
stos
adc
pop
adc
pusha
adcl
lldt
mov
fwait
xor
xchg
mov
in
cs
mov
add
mov
push
sahf
cwtl
std
aam
and
jg
sub
pop
mov
mov
pop
sbb
push
sbb
mov
and
imul
dec
push
and
sub
add
addl
sbb
pop
addl
jo
mov
pop
enter
pop
cmp
pop
test
mov
cmp
fwait
sbb
sub
jb
cli
mov
inc
jp,pt
push
adc
and
test
fdivl
mov
stos
pusha
adc
sbb
mov
lcall
stc
sub
jge
dec
ds
jb
out
jae
sbb
stos
mov
sub
out
xor
or
push
and
xor
stc
in
fwait
lret
dec
push
dec
cmp
scas
inc
mov
or
shlb
inc
jmp
outsb
shrl
sti
inc
cmp
push
cmpsl
fwait
mov
dec
inc
lock
cmp
lea
bound
jecxz
scas
cmp
push
sbb
daa
push
pop
rcl
xor
fmull
sub
lea
cmp
and
adc
cld
sarl
daa
mov
lock
push
xchg
fsub
jp
cmpsb
xlat
mov
cmpsl
push
mov
mov
sbb
add
cmp
push
incl
push
aam
push
jl
cmpsl
enter
std
mov
push
xchg
out
xor
daa
mov
pop
sub
roll
mov
mov
mov
jne
dec
mov
lea
xor
cmp
add
testl
sbb
push
jno
sbb
repnz
push
in
stos
push
loop
adc
pop
ret
adc
leave
cmp
sbb
push
out
jge
jp
add
adc
and
nop
push
decl
in
repz
pop
int
out
mov
fistpll
sbb
sahf
inc
ljmp
adc
loope
inc
mov
mov
shll
lds
or
out
mov
test
pop
fcmovnu
jg
or
push
adc
jge
cmp
xor
scas
imul
jb
add
xchg
sbb
sub
push
or
pop
cmp
lcall
rorl
jmp
je
inc
cmp
jle
sub
push
outsb
mov
icebp
dec
shr
rorl
dec
cmp
pop
jnp
xacquire
push
enter
jnp
adc
cmp
or
or
pop
xor
and
and
mov
lret
pop
sahf
ret
cwtl
enter
lahf
outsb
out
js
inc
je
push
lea
fsts
push
sub
xchg
fs
sbb
xor
sub
or
or
push
cwtl
lods
pusha
aaa
inc
stc
xchg
lea
daa
out
jo
rolb
orb
fdivr
popa
push
push
in
xchg
cmp
mov
xor
and
mov
jnp
ljmp
push
xchg
cmp
jmp
pop
stos
aaa
dec
jo
xor
int3
xchg
je
pop
fstpl
fldcw
dec
fsubrp
xchg
sbb
push
inc
pusha
jecxz
mov
cmc
mov
mov
sub
gs
ret
flds
int
lahf
dec
aaa
ljmp
mov
inc
add
add
sub
pop
lods
dec
mov
or
lds
add
adc
push
pop
into
pushf
scas
add
jo
stos
and
mov
daa
xchg
push
sbb
ret
xor
rcll
adc
dec
add
gs
addr16
lcall
mov
inc
imul
inc
call
enter
lcall
pop
or
je
push
mov
pop
aas
imulb
inc
lods
stos
push
cs
push
push
ljmp
popa
nop
and
mov
push
jge
adc
iret
xchg
add
pusha
or
test
arpl
out
mov
xor
fs
fadds
movsl
sbb
and
sub
movsl
cmpsb
jg
push
jnp
and
inc
cmpsl
jo
mov
xlat
mov
and
shlb
dec
mov
or
cltd
imul
iret
push
dec
notl
mov
adc
xor
push
push
lahf
xchg
or
pop
jge
stc
hlt
fcmovb
lcall
and
jno
mov
jb
sbb
dec
addr16
cmp
mov
xor
fs
je
push
lods
orb
xor
mov
js
jne
mov
mov
push
cmp
mov
pop
test
cmp
test
daa
in
inc
cs
daa
cmp
pop
cmp
add
inc
xor
xlat
jae
or
arpl
mov
scas
mov
jmp
enter
xchg
sbb
dec
shll
add
inc
call
pop
imul
cmc
adc
lahf
push
push
leave
xor
jne
jb
jae
in
adc
mov
push
or
unpcklps
ds
sbb
add
aad
pop
xorb
pop
test
pop
scas
data16
cmp
jmp
xchg
pop
dec
cwtl
ret
scas
mov
cmp
push
iret
mov
sub
jp
loope
iret
loop
sbb
push
mov
jns
sub
mov
adc
in
and
gs
shll
lds
xor
xchg
mov
mov
push
jmp
push
stos
sub
xrelease
je
xor
ret
ret
dec
mov
xchg
pop
fsts
xchg
mov
loop
xorl
sbb
repnz
int
mov
cli
push
and
add
pusha
arpl
jb
es
push
xor
add
pop
push
push
js
inc
sahf
cmp
inc
push
iret
jne
and
and
sbb
out
in
xor
mov
mov
jmp
lret
stos
cmpsb
add
mov
adc
jae
aaa
repz
pushf
jnp
jno
xor
fsts
mov
pop
and
mov
push
add
shrb
or
ja
inc
jl
outsb
enter
mov
fs
rorb
popa
bound
sbb
iret
mov
sarb
fiadds
dec
pop
sbb
int
test
pop
mov
jnp
xchg
add
roll
fldt
nop
xchg
es
repnz
push
xchg
mov
clc
mov
insb
fs
mov
push
shll
sub
das
pop
adc
mov
fcomps
stos
cs
mov
hlt
sarl
ret
into
push
jb
nop
lcall
xchg
jp
insb
cmp
mov
lahf
test
pop
clc
and
fwait
test
inc
inc
sbb
pop
pop
pop
inc
arpl
mov
shll
int
xor
out
and
cmp
lret
andnps
rolb
es
insb
dec
cmp
in
flds
add
aas
push
push
mov
jmp
jb
mov
lods
and
test
sbb
dec
lahf
jle
push
lcall
test
int
jmp
hlt
ret
es
repz
imul
sub
fidivrl
mov
lret
and
cmp
xor
adc
mov
aad
lret
xchg
lret
or
rol
jns
xchg
dec
pop
addr16
sbb
xchg
popa
sbb
popa
fisubs
jae
sbb
mov
mov
test
test
or
cmp
mov
hlt
add
daa
push
mov
icebp
mov
ja
repnz
pop
jb
pop
dec
inc
test
test
jp
push
jns
pop
repz
pop
shrl
adc
push
jg
fmull
jg
loop
ficomps
popa
push
lret
add
rol
lret
addr16
or
ljmp
jle
stos
mov
jmp
ljmp
mov
mov
cli
jne
jecxz
xchg
mov
dec
fisttps
shlb
clc
push
mov
cmc
mov
ret
fldcw
pop
mov
inc
lods
push
and
je
mov
imul
push
test
jmp
aad
mov
popl
pop
popa
stc
movsl
clc
adc
pop
mov
cmp
cmp
in
inc
dec
push
push
add
dec
sarb
dec
dec
xlat
ret
iret
mov
inc
xor
pop
sub
loop
cmpsb
ds
mov
push
lock
lods
xor
pop
jnp
testl
int
stos
xchg
mov
aad
fisttpll
inc
stc
mov
push
sahf
xchg
add
inc
mov
mov
out
ds
mov
mov
push
push
mov
mov
fxch
dec
mov
or
lods
dec
jl
and
push
dec
popf
xor
inc
xchg
add
ffreep
test
mov
push
aad
dec
sahf
stos
mov
dec
shlb
jne
fmul
flds
loope
call
out
ljmp
cmp
add
mov
aaa
in
or
icebp
xchg
int
inc
cwtl
lahf
dec
adc
xchg
sbb
xor
inc
mov
sub
pop
aaa
ja
out
push
shrb
stc
aam
mov
mov
xor
int
rcll
popa
dec
notb
sub
or
mov
call
aam
sbbl
into
mov
fidivrs
pop
test
sbb
ds
cmpsl
or
cli
push
mov
subl
fwait
push
or
cmp
fdivl
mov
pop
xlat
push
sub
cmp
or
xchg
dec
adc
ret
sbb
dec
xchg
sbb
repz
dec
test
leave
mov
xlat
out
jmp
out
lcall
inc
out
repnz
jp
sbb
mov
je
es
outsb
add
jl
fistl
inc
cmc
mov
mov
icebp
fistps
sarl
jne
cmp
xchg
xchg
cmp
mov
aas
test
mov
fs
mov
mov
loope
ss
test
add
xor
addr16
sub
mov
pextrw
sub
push
inc
movsl
xlat
popf
int
jnp
mov
push
out
jmp
add
jbe
hlt
push
xchg
sbb
xchg
mov
lahf
sbb
je
cmpsl
and
out
push
sub
dec
lock
xchg
push
xlat
test
cmpsb
push
cmc
pop
andl
scas
icebp
cltd
or
mov
outsb
icebp
push
rcr
adc
dec
mov
inc
push
movsl
cmc
inc
push
sarb
int
xlat
fwait
jnp
xchg
mov
xchg
cmp
inc
scas
sub
nop
push
cwtl
loope
push
push
xchg
inc
ds
dec
or
sub
cmp
sahf
sbb
daa
mov
popa
xor
mov
lea
iret
inc
push
int3
or
mov
push
dec
jae
xor
mov
outsl
out
data16
sub
shrl
mov
daa
inc
push
pop
andl
les
xchg
mov
pop
jbe
aad
imul
fstp
jg
movsl
shll
mov
mov
push
out
adc
int
loopne
pop
xchg
nop
mov
leave
inc
or
add
pop
insb
sbb
arpl
dec
in
dec
popf
jno
bound
mov
inc
xor
stos
xchg
pop
dec
in
test
push
mov
pop
pop
mov
cmp
inc
in
xchg
push
mov
les
hlt
mov
aam
mov
mov
enter
xorl
loop
ror
fidivl
shl
sarb
cltd
and
mov
sti
mov
loopne
iret
pop
cmp
ss
fldenv
repz
testb
and
fsubrs
das
push
push
adc
sub
push
sbb
pop
pusha
cwtl
xor
mov
cmc
in
ret
loop
pop
popf
add
xchg
imulb
shr
jge
xchg
dec
cmp
push
sbb
mov
mov
movsl
sbb
loopne
jae
pop
inc
adc
jnp
sub
and
mov
hlt
pop
push
push
and
inc
fsubr
mov
push
pop
test
insl
std
inc
test
aas
in
iret
into
fldenv
and
jecxz
xchg
mov
stos
outsl
loop
lret
outsb
adcb
mov
pop
scas
lret
popa
ds
orl
lret
addr16
dec
sbb
pop
jae
ljmp
pop
mov
jle
mov
xor
pop
mov
test
mov
into
js
cmp
or
aaa
out
or
sub
xchg
movsb
push
or
ss
jne
in
inc
pusha
adc
lds
cmc
adcl
shr
out
cmpl
mov
push
sbb
psubq
pop
jmp
jbe
pop
sbb
jne
or
call
mov
mov
sbb
push
add
in
aam
xchg
mov
mov
mov
sub
fsubrl
push
jns
cmpsb
or
push
movsb
mov
int3
fs
pop
or
push
movsb
and
sbb
cmc
sub
mov
iret
sarl
sbb
lret
stos
call
mov
xchg
dec
ss
cmp
sub
sti
jnp
inc
pusha
test
xor
fiaddl
loop
scas
mov
mov
repnz
int3
pop
pop
in
decb
out
mov
rorl
leave
push
test
mov
icebp
xor
xchg
aas
inc
and
jp
push
outsb
inc
add
jbe
imul
dec
ret
mov
cltd
push
mov
test
aas
xchg
rorb
pop
ja
push
insl
xchg
adc
mov
daa
jnp
push
sbbb
ficomps
pop
int3
pop
pop
hlt
pushf
and
pop
ljmp
out
sbb
aad
ljmp
arpl
cwtl
mov
sub
or
add
mov
push
das
mov
inc
jnp
jae
cmp
pusha
jle
orl
or
aam
daa
adc
test
fwait
dec
popf
sub
mov
addb
xchg
lea
inc
mov
pop
inc
ja
les
inc
ja
out
stos
ret
ds
adc
jo
sbb
sbb
iret
mov
negb
cmp
sbb
cs
rcrl
mov
aas
or
pop
je
lds
fildl
shrb
icebp
mov
dec
mov
out
dec
xor
xchg
mov
mov
jno
and
push
gs
aam
rcl
dec
rolb
movsl
sbb
repnz
repz
push
nop
ds
pop
mov
dec
scas
add
daa
enter
and
rcl
dec
loopne
and
scas
scas
dec
adc
mov
add
mov
sahf
adc
cmp
and
pop
les
jae
and
orl
and
mov
add
outsl
push
test
test
push
mov
test
adc
loopne
mov
xor
xchg
inc
into
xor
enter
push
and
mull
popa
icebp
pop
inc
out
xchg
pop
rolb
mov
dec
mov
shlb
mov
les
add
lretw
adc
ljmp
int3
mov
or
das
dec
push
pusha
cli
xchg
jecxz
mov
jbe
push
cmp
xor
sub
fiadds
cmp
inc
add
and
jae
pop
mov
mov
inc
out
aad
orb
mov
fwait
lods
add
mov
and
cmp
dec
mov
in
and
cmp
andl
add
inc
data16
rcr
xchg
or
sarl
mov
sub
push
dec
test
loope
sti
adc
in
cmp
dec
fcompl
jae,pn
rorl
add
jge
lahf
mov
adc
sub
lods
sbb
leave
xor
test
pop
dec
lock
pop
jmp
lods
jbe
movsl
adc
scas
lods
and
dec
xor
jmp
data16
fcoml
sbb
sahf
xchg
sub
push
dec
xchg
ficompl
adc
sbb
stos
rcrl
mov
push
bound
add
dec
or
add
dec
jp
fnstsw
pop
lret
shll
stc
andb
fsubrp
xor
std
test
jns
add
pop
inc
mov
lcall
andb
lret
insl
add
ret
daa
js
roll
leave
fisttpll
sub
stc
and
ds
mov
loope
arpl
add
data16
jle
movsl
push
in
inc
cmp
xor
sbb
adc
sbb
dec
sbb
fistl
lcall
jns
in
call
jecxz
insl
xchg
cmp
dec
inc
jno
test
mov
aad
mov
jle
arpl
fwait
int
inc
ljmp
test
xor
popf
pop
int3
jl
sbb
aas
movsl
aad
aam
fcmovnbe
or
push
cmp
sarb
int
movl
cli
push
sub
stc
cmp
rcl
mul
pop
lret
fcoml
jae
pusha
clc
push
push
push
add
clc
hlt
push
cmpsl
test
loopne
outsl
xor
adc
es
mov
cmpsb
icebp
sbb
xor
lcall
stos
aam
bound
outsl
ds
jle
in
pusha
sub
rclb
cwtl
cmpsl
scas
push
fdivr
mov
clc
mov
test
rclb
inc
adc
fs
sbb
inc
sub
inc
lods
xchg
ret
lahf
push
xchg
fimuls
imul
dec
out
fisubrs
add
imul
std
ja
out
sbb
xor
jge
stos
ja
sbb
cmp
sbb
jl
push
push
cld
outsl
mov
dec
adc
cltd
mov
xchg
pop
mov
jno
das
dec
or
imul
jmp
xlat
mov
dec
mov
sbb
scas
push
stos
mov
sbb
sbb
enter
push
pusha
incl
jns
mov
sbb
adc
shl
xchg
movsb
xchg
mov
dec
setb
sub
lret
in
dec
loope
inc
push
sbb
les
movsb
xor
mov
stos
inc
dec
and
dec
sbb
sbb
mulb
sbb
call
mov
mov
lret
dec
pop
sbb
lods
shlb
test
enter
dec
lret
sub
pop
and
jg
push
adc
pop
out
icebp
lret
xor
bound
arpl
cld
pop
lods
lahf
mov
sub
xor
xor
add
gs
mov
rclb
popa
fldenv
xchg
stc
mov
dec
ret
pop
dec
cmp
gs
stos
xchg
xor
lcall
ljmp
insl
cwtl
cmp
rorl
mov
inc
pop
xor
inc
mov
or
pop
ljmp
mov
xchg
or
mov
in
jl
jmp
push
cmc
cmpl
cmpsb
push
les
sub
lods
fstpt
push
mov
in
daa
call
xor
andb
test
lock
pop
xchg
pop
jp
push
xchg
rclb
adc
sahf
nop
push
cmp
out
out
lock
pop
inc
adcl
cvtps2pi
ds
jecxz
test
mov
mov
jp
push
ljmp
lret
pusha
cmp
out
cmp
pop
mov
lcall
daa
das
addr16
leave
sub
imul
stos
mov
mov
inc
scas
sub
mov
clc
sbb
pop
adc
ss
mov
jl
xor
xchg
cmp
and
cmpsb
hlt
addr16
ss
adc
pop
pushf
mov
inc
or
cltd
mov
popa
pop
adc
je
stc
aad
or
icebp
mov
or
les
push
call
pop
cmpsl
sbb
inc
xchg
ds
xchg
add
jae
xchg
jne
push
lcall
jno
mov
xor
mov
xor
gs
hlt
cld
popl
cmpsl
adcb
dec
jmp
push
adc
popf
jno
jg
adc
push
pop
test
jb
add
sbb
mov
add
or
jno
add
insb
sbb
sar
adc
jne
fmuls
loope
cmp
inc
mov
das
pushf
dec
movsb
pop
div
inc
out
imul
outsb
fs
into
test
aad
call
add
inc
or
pop
jno
mov
or
in
jmp
decl
lock
nop
sbb
or
rcl
sbb
fsubs
test
dec
xor
arpl
jb
jl
pop
pop
mov
ljmp
iret
imul
sub
xchg
out
and
test
inc
inc
std
fcomps
loopne
pop
adc
stc
cmp
or
daa
outsb
movsb
and
movsl
aam
std
sti
aas
ja
mov
push
out
leave
scas
pop
mov
jo
out
shlb
icebp
mov
push
notb
test
push
std
and
lahf
int3
das
stos
aaa
push
jp
lahf
add
in
cmpsb
icebp
fwait
ret
cltd
lods
das
pop
call
xor
wbinvd
cmpsb
jl
cli
sub
xchg
push
std
sbb
aad
mov
ljmp
mov
xlat
clc
sub
add
xor
and
ss
out
cs
aam
mov
push
test
cmpsb
test
mov
loope
jecxz
jo
aas
aam
int3
adc
pop
xor
pop
out
dec
push
ss
dec
scas
jecxz
mov
add
jg
cmp
or
jo
lahf
xchg
or
addb
js
and
mov
imul
mov
push
and
testb
cmc
mov
stos
fcmovnbe
pop
mov
mov
popf
cmpsb
cmpsb
sarl
and
cmp
inc
scas
or
fs
mov
mov
sarl
ss
sub
push
scas
xor
pop
lret
imul
inc
dec
repz
fs
push
testb
sbb
mov
repnz
js
add
or
xor
scas
push
cltd
je
outsl
movsb
sub
icebp
in
movl
jnp
es
pop
mov
outsl
int
inc
fstl
ret
popf
push
out
push
mov
lret
out
enter
fdivrl
add
cmp
pop
data16
push
sbb
inc
jnp
rorl
push
sbb
nop
pop
jo
sub
divb
mov
cmp
pop
sbb
hlt
xchg
sub
hlt
push
scas
jne
stc
mov
jl
dec
popf
jmp
shll
or
notb
inc
out
imul
mov
lret
inc
mov
dec
scas
jg
daa
push
rcrb
sub
push
scas
lea
arpl
lret
lret
mov
stos
ds
ror
ljmp
mov
or
andl
lods
add
mov
and
dec
push
dec
movsl
fsubl
fbstp
insl
pop
aaa
mov
outsl
outsb
pop
jg
push
mov
fdivr
fcmove
icebp
push
push
push
cmp
je
push
or
repnz
inc
dec
cmp
ret
test
push
sbb
dec
arpl
xor
pop
cmp
stos
insb
add
and
push
jbe
das
xchg
scas
xor
in
jbe
sub
pop
das
shlb
out
push
pop
pop
pop
das
xchg
les
xchg
aam
cmp
pop
test
icebp
lock
rep
push
pop
fisttpl
cmpsb
mov
lds
dec
cmp
and
ljmp
repz
and
sub
imul
js
stc
xor
imul
rcrb
test
cmp
xchg
int3
pop
lds
pop
lcall
add
fs
mov
cmpsl
addr16
pop
jecxz
or
sub
ret
push
xchg
addl
cmp
add
dec
mov
insb
dec
add
sbb
in
mov
mov
lahf
nop
mov
pop
add
test
and
push
stc
js
popf
arpl
and
adc
test
sub
fistpl
adc
pop
xor
cmp
ret
jbe
jecxz
ret
mov
decb
xchg
int3
lods
mov
repz
add
and
and
addr16
imul
inc
jno
xlat
pop
popa
dec
mov
mov
imul
xor
xchg
pop
es
out
idivl
sub
mov
inc
jmp
iret
lret
repnz
cmp
cmp
inc
cwtl
testb
sar
adc
andl
adc
ljmp
mov
fcmovnbe
mov
jmp
xchg
cmpl
insl
loop
inc
sbb
push
repnz
add
jne
fidivrs
mov
ret
push
inc
popa
mov
mov
data16
xchg
into
xchg
mov
aam
in
loop
repnz
insl
pop
movsl
sarb
enter
lahf
inc
xor
cmp
ss
push
data16
cmp
or
daa
sub
clc
adc
mov
das
out
add
popa
popa
aas
pop
inc
sar
inc
ljmp
xchg
jnp
into
test
jb
adc
jmp
jecxz
outsl
add
int
je
sbb
or
xchg
ficoml
stc
test
jle
insl
or
xor
ds
cli
inc
out
testl
clc
dec
pop
add
dec
xchg
lahf
movsb
push
xchg
add
mov
push
xchg
and
sub
dec
add
shl
aad
jmp
mov
loope
fistps
dec
mov
popa
bound
xor
fildl
push
fsubl
pop
mov
dec
out
push
pop
aas
mov
scas
popf
xchg
mov
lds
xor
sbb
pop
leave
xchg
loop
push
sti
fnsave
fdivp
and
in
out
shll
popa
dec
dec
movsl
outsb
inc
out
nop
sbb
loopne
stc
cmp
mov
xor
clc
mov
mov
lcall
adc
add
nop
pop
dec
xchg
dec
ret
sbbb
lods
jno
outsl
mov
shll
loope
cmovs
ret
mov
pop
dec
loop
mov
add
sti
mov
push
add
dec
stos
sub
insb
jnp
pop
iret
xchg
mov
fwait
or
cld
hlt
out
jnp
pop
sarl
mov
cmpsb
xor
gs
push
lcall
add
mov
fcmovu
jg
pop
inc
stos
pop
hlt
dec
push
and
jecxz
lods
xor
arpl
sbb
push
popa
jno
adc
lods
test
rclb
sub
lcall
pop
and
leave
ficompl
dec
mov
cmp
in
push
popf
bound
stos
ret
rorb
jg
xor
xchg
test
shll
pop
jle
adc
fsub
cwtl
and
std
sbb
inc
pop
fwait
mov
int
repnz
aad
push
add
add
mov
mov
push
mov
push
push
or
movsl
adc
pop
in
fucom
mov
das
ret
test
push
xchg
insl
mov
adc
adc
out
rep
vxorpd
xchg
loope
mov
pop
imul
mov
pushf
pop
outsl
out
bound
inc
push
and
adc
mov
cltd
int
mov
or
pop
jecxz
nop
jmp
or
test
cmp
fiadds
das
es
lock
movsb
es
jb
xor
loope
outsb
xor
ss
add
bound
hlt
cmp
jmp
scas
es
testl
out
popa
inc
and
and
lock
pushf
mov
lahf
mov
int
add
leave
push
xor
add
test
jle
mov
push
add
sbb
cmpb
inc
push
out
scas
jg
test
pushf
adc
arpl
mov
ret
loop
imul
mov
pusha
sbb
push
add
mov
enter
and
aam
or
inc
sub
into
loop
mov
fcmove
cmp
shlb
xchg
xchg
pusha
sub
dec
fisubs
je
je
les
loopne
dec
mov
notb
xchg
call
pushf
aam
or
jb
jnp
outsl
adc
repnz
mov
leave
ficoms
sub
add
movsl
cwtl
divps
add
mov
mov
jne
bound
insl
subl
or
cmpsb
pushl
outsb
jle
sub
push
enter
fimuls
sbbl
imul
xchg
call
lret
jmp
xchg
pop
out
aad
sub
jno
xchg
jns
jno
fidivl
enter
sub
stc
fs
outsb
in
push
out
arpl
push
mov
add
and
dec
mov
xor
jno
jg
push
mov
or
outsb
mov
mov
push
or
repz
mov
xor
or
stc
mov
fwait
popf
into
jns
jo
xlat
daa
outsl
xorl
mov
jns
push
inc
mov
pop
repnz
arpl
sub
inc
fbld
xor
outsb
arpl
out
enter
ljmp
sbb
mov
sub
ficomps
ja
xor
pop
das
pushf
xorb
shlb
pusha
push
cli
jl
lods
or
mov
ret
inc
jecxz
inc
xor
not
inc
cmp
loop
scas
add
mov
test
fidivrs
inc
pop
pusha
mov
sarb
scas
enter
inc
push
inc
fs
fsubl
xor
cmp
push
pop
loopne
sub
xchg
sub
into
sub
or
add
adc
movsb
mov
xor
xchg
pop
jge
push
daa
std
dec
insl
in
mov
cmp
aam
or
cmp
add
neg
adc
adc
frstor
sub
stos
je
loope
or
jl
push
rcll
pop
in
negl
mov
mov
inc
inc
and
push
jl
daa
sub
inc
inc
push
inc
mov
mov
imul
mov
lods
pushf
xchg
or
aam
dec
dec
jne
push
mov
dec
shlb
xchg
out
adc
cmp
xchg
sub
inc
or
hlt
mov
lcall
pop
insl
add
pusha
repz
scas
mov
adc
xchg
lods
inc
lods
lret
rcr
in
mov
xchg
hlt
loopne
lock
or
add
ret
dec
das
and
jecxz
or
mov
pushl
cmpsl
add
fcoms
adc
fimull
sahf
stos
addr16
test
arpl
fisubl
push
fnsave
inc
or
and
push
add
jno
mov
into
jnp
loop
stos
cli
dec
movsb
je
int3
cld
mov
xchg
dec
sahf
jmp
jmp
in
mov
shlb
dec
int3
xchg
sub
adc
push
test
or
mov
pop
jl
add
fst
adc
inc
sbb
stc
sti
adc
popf
xor
int
pop
leave
push
in
mov
mov
sbb
jmp
push
mov
and
loopne
mov
sub
mov
or
mov
out
scas
dec
or
xchg
mov
jge
ds
xor
stos
push
add
xor
movb
pop
jbe
jo
or
mov
add
idiv
inc
ja
rorl
lret
insl
dec
test
jg
mov
popa
in
mov
mov
mov
sahf
je
mov
jbe
jno
icebp
or
jmp
and
popa
outsb
mov
or
aas
mov
rcrl
pusha
inc
addr16
sarb
jg
outsl
inc
int
mov
mov
bound
mul
jne
adc
sbb
in
sbb
ja
ficomps
or
lret
mov
nop
data16
popf
or
lods
jl
fsts
les
stos
icebp
inc
push
push
or
jbe
sub
ljmp
popa
outsb
arpl
jecxz
std
les
dec
mov
fwait
sub
cmpsl
xor
cld
sti
adc
xor
and
mov
call
sti
test
mov
lahf
movsl
xchg
ja
inc
int3
lock
mov
repnz
push
clc
mov
xchg
pop
xchg
xor
jo
or
push
cltd
cmp
hlt
in
shl
mov
es
ds
xor
sub
sub
aaa
aad
ljmp
loope
mov
or
stc
push
mov
and
lods
stos
je
add
inc
aam
xorl
ss
je
pop
pop
jecxz
add
jne
xor
push
dec
push
dec
icebp
jns
fwait
push
fs
cmp
sbb
fistl
movsl
mov
sbb
jno
mov
imul
push
shl
sbb
inc
insl
fxam
mov
scas
lea
pop
fmul
shr
sub
fisttpll
push
and
push
daa
adc
push
es
mov
int
xorl
dec
ds
xchg
sub
pop
jb
movzbl
cli
pusha
xchg
mov
out
jbe
jbe
inc
ljmp
out
scas
repz
lcall
pop
adc
fiaddl
pop
jne
or
lods
push
fcom
insb
test
mov
mov
mov
pop
push
dec
lahf
lods
js
stc
mov
sbb
xor
dec
mov
int3
fdiv
cmpsb
imull
mov
and
in
or
aaa
les
xchg
or
jne
xchg
lret
sbb
mov
aam
pusha
lret
xorl
jno
in
leave
inc
pop
imul
push
into
jle
xchg
lcall
stc
jg
adc
scas
and
lahf
imul
mov
mov
push
push
negb
jne
push
test
imul
mov
pusha
neg
ja
sub
dec
call
or
mov
pop
or
ret
jns
insl
out
hlt
dec
mov
adc
pop
xchg
repnz
lret
popa
cmpsb
mov
movsb
inc
adc
jle
movsl
cld
adc
mov
adc
xchg
mov
adc
iret
stc
lahf
mov
in
ret
dec
sarb
push
outsb
in
lods
jne
filds
push
push
cmp
sbb
cld
cmp
mov
test
push
aas
popf
bound
cld
xor
rorb
imul
mov
push
pop
mov
pop
xor
dec
outsb
std
sbb
inc
cmp
ret
lock
sub
scas
aaa
cmp
dec
fmuls
iret
out
adc
rcrb
push
mov
mov
push
cwtl
cmp
hlt
or
add
mov
shrl
jae
fisubrl
lods
popf
in
push
sub
cltd
jns
insl
int
push
pop
push
push
mov
mov
and
jmp
pop
jg
lret
pop
cmc
ljmp
add
cmp
xchg
fmuls
fimull
in
sbb
pop
mov
in
push
xchg
aam
jge
and
test
out
ljmp
mov
jnp
sahf
sahf
adc
inc
adc
inc
das
push
incb
mov
push
mov
cwtl
aad
test
sub
ret
cli
jecxz
pop
out
clc
mov
xchg
and
xchg
jmp
xchg
add
lahf
stc
or
ret
ds
cmp
das
sub
add
nop
loop
lret
xchg
test
mov
incl
xchg
add
mov
dec
adc
nop
test
or
mov
enter
mov
xchg
in
out
shr
xchg
sub
xor
cmp
mov
mov
cmp
dec
mov
cmp
je
stos
out
mov
arpl
adc
movl
pop
arpl
rdmsr
mov
pop
in
jne
in
out
mov
shlb
xor
dec
jmp
jo
push
idivb
dec
jnp
inc
call
int
mov
mov
insl
pop
int3
xchg
ficoms
adc
cmp
xchg
mov
jb
test
sbb
pop
ret
xchg
scas
outsl
adc
dec
nopl
xchg
data16
testb
enter
pop
cltd
push
fildll
mov
leave
lret
add
rorl
xchg
xchg
xchg
xchg
mov
cmpsl
adc
mov
jmp
xchg
push
ret
mov
hlt
es
add
cs
inc
pop
mov
adc
loopne
ret
mull
pop
xchg
gs
mov
adc
push
scas
addr16
lahf
in
imul
adc
out
push
mov
jbe
stos
sbb
jne
daa
hlt
je
lods
mov
or
mul
test
xor
inc
arpl
ret
mov
xor
or
fcoml
stos
and
data16
add
pop
loop
push
cld
lea
cmp
pop
lret
leave
repnz
sbb
arpl
mov
fcmovbe
pop
mov
arpl
sbb
add
daa
cmp
add
cmc
xlat
xchg
jne
mov
inc
dec
mov
mov
ljmp
subl
mov
add
or
mov
out
sub
push
sub
les
mov
pop
pop
cmp
ja
dec
imull
outsb
pop
inc
cmp
or
dec
out
jg
inc
sbb
test
mov
xchg
lods
test
fadds
cmpsb
inc
add
mov
into
and
lcall
pop
ss
xchg
idivb
dec
xchg
push
es
adc
imul
jae
bnd
and
addr16
xchg
mov
dec
inc
scas
push
adcb
arpl
or
jp
stc
mov
cmpsl
cli
mov
imul
mov
je
ret
cmp
inc
push
jp
mov
aaa
adc
aaa
lcall
pop
and
xchg
push
mov
pop
xchg
push
dec
subl
ret
bound
sbb
in
les
in
ss
sub
mov
dec
push
sub
sbb
shrb
or
popa
xchg
ljmp
mov
xchg
push
mov
sbb
mov
leave
cli
mov
mov
xchg
jmp
push
test
ds
test
pop
in
movl
cmovbe
mov
lea
adcl
inc
mov
aam
xchg
cmp
aas
xchg
jo
jmp
jmp
lret
into
insl
push
inc
int3
das
movl
mov
and
cmp
or
lret
fldt
mov
mov
mov
or
idivb
xor
sbb
add
sub
in
jae
mov
nop
dec
jo
lds
in
adc
or
shrb
or
inc
or
jecxz
dec
fildll
sub
add
and
fistl
push
pusha
jae
int3
inc
repz
xchg
or
add
cmp
dec
mov
push
test
stos
sbb
push
cmc
out
mov
xlat
and
mov
mov
out
push
outsl
es
or
jle
fs
js
cltd
paddsb
mov
sub
rorb
cmc
daa
ljmp
out
cmp
xchg
and
std
jne
xchg
enter
jbe
push
fisttpl
sbb
lock
inc
adc
mov
xor
test
mov
mov
sub
xlat
out
xchg
lcall
test
fs
ret
push
outsl
or
lcall
mov
sub
sbb
jmp
jle
ljmp
inc
mov
xchg
mov
xchg
pop
sbb
shl
cwtl
in
mov
push
push
cmp
fwait
test
mov
int3
std
hlt
pop
scas
loope
pop
cmc
nopl
sbb
dec
or
pop
sbb
add
pop
jnp
fiadds
xorb
fsubl
fcomps
insl
jp
lret
outsb
push
pop
lret
dec
rolb
xchg
xchg
xlat
mov
or
push
repz
pusha
js
mov
rcl
fistpl
add
cmp
adc
jecxz
mov
out
sub
aad
mov
testb
aam
andb
or
jae
jo
das
push
xchg
add
sub
cmpsw
sub
scas
lds
addb
sti
add
es
mov
mov
loope
loop
sarl
sub
ljmp
adc
mov
fs
xor
xchg
push
addr16
mov
mulb
stos
jno
xchg
mov
ljmp
add
add
cs
mov
in
pop
mov
push
jb
rcrb
push
movb
rorb
inc
in
repnz
xchg
mov
or
dec
cltd
lds
xchg
loopne
call
add
out
sbbl
out
lret
pushf
sbb
pop
out
daa
daa
jb
cs
xchg
out
test
aad
add
cmp
sub
adcl
pop
push
ljmp
out
xor
pop
pop
mov
xor
std
inc
jecxz
jge
fdivl
jmp
pop
cmp
sbb
mov
jp
gs
nop
clc
mulb
and
cmp
and
cli
xchg
adc
or
jl
xchg
sarl
fisubl
mov
mov
mov
sub
xor
xor
xchg
cmp
mov
adc
push
add
test
ljmp
lret
popa
sub
sbb
mov
push
aad
mov
add
cwtl
ffree
pop
das
popa
add
les
les
jp
cwtl
xchg
add
clc
ljmp
jl
lret
fwait
mov
test
and
add
je
inc
xchg
sbb
cmc
cmp
add
dec
or
in
aaa
add
and
dec
ss
mov
outsl
push
ss
push
jmp
jg
push
jae
push
and
inc
jns
inc
test
fs
dec
push
sbb
pop
jmp
sbbb
push
cltd
add
cmp
ss
or
pop
fcomip
sbb
imul
mov
iret
out
jecxz
and
push
fcomip
ljmp
imul
repnz
jecxz
insb
add
cmp
dec
mov
xor
adc
in
or
add
int
lds
lods
jnp
xchg
push
aam
sub
xlat
xchg
xor
ss
pop
icebp
iret
xchg
or
je
push
push
fldenv
subl
xor
or
pop
mov
js
push
jecxz
stc
sahf
jbe
push
hlt
movb
lahf
es
fdivl
mov
inc
incb
xchg
enter
cmp
cmc
int
dec
dec
jns
add
adc
fmull
xor
push
loope
sbb
xor
pop
xor
nop
rolb
out
mov
cmp
jo
mov
jmp
add
jo
xor
mov
mov
pushf
push
subb
cs
je
pop
inc
xchg
iret
scas
sub
ficoml
add
sbb
mov
jmp
inc
pop
inc
pop
mov
or
adc
lret
xor
push
push
test
adc
test
and
lock
je
dec
mov
inc
in
mov
dec
cs
cmc
rcrb
je
xchg
ss
popf
cmp
loop
adc
ja
punpcklbw
mov
xor
lret
scas
dec
insb
int3
ljmp
test
call
test
xor
jo
js
lcall
lea
aad
loopne
sub
sbb
mov
imul
rcrb
aad
cmpsl
push
and
pusha
xchg
push
sarl
jne
sub
adc
lods
xorb
sub
int
cmp
jp
push
popf
cwtl
in
push
sub
inc
ja
inc
dec
ja
jl
test
mov
in
sbb
pop
lret
xor
icebp
jno
ss
aam
sti
enter
sbb
mov
lcall
stos
shlb
ret
scas
dec
pusha
shll
pop
pop
mov
fdivr
xor
pop
sub
or
push
or
iret
fmull
mov
ret
dec
cld
mov
cltd
cmpsl
xor
stc
lcall
xor
movsl
adc
mov
cmp
xor
inc
xchg
dec
or
or
gs
push
and
insb
and
gs
add
xor
lret
jg
daa
out
pop
sub
scas
fsts
jb,pn
fs
push
pop
pop
xchg
pop
or
jbe
push
inc
in
push
mov
adc
movsl
add
add
iret
out
xchg
or
or
aam
or
mov
add
mov
fstpt
inc
xchg
xchg
in
lods
dec
inc
and
in
bound
mov
and
add
or
jmp
icebp
xchg
mov
cmp
and
mov
pop
sub
leave
xlat
sahf
xlat
sbb
push
movsl
pop
les
stc
jbe
test
pop
fidivl
test
lahf
add
mov
call
lods
icebp
mov
add
sbb
pop
mov
pop
jno
lock
mov
cmp
mov
mov
xlat
and
cmpl
int
xchg
je
mov
ds
adc
decb
int3
xor
lods
cs
push
fnsave
gs
mov
sbb
pop
cmp
fisttps
loopne
sbbl
sub
add
xor
mov
dec
dec
jbe
loope
sarb
int3
fldenv
mov
add
es
push
push
lret
scas
repz
adc
bound
lret
dec
adc
jbe
mov
dec
xchg
cmc
mov
cli
adc
test
rorb
out
icebp
imul
add
xor
mov
dec
push
mov
aad
std
xchg
iret
adc
xchg
fdivrs
fs
mov
notl
sarb
jno
daa
jmp
mov
cmp
ss
lret
xchg
ja
xchg
mov
xchg
push
add
bound
stos
mov
xor
lock
xchg
inc
mov
pop
push
sti
and
pop
sbb
or
push
clc
cmpsb
aas
sub
inc
mov
out
das
test
mov
cmp
or
and
ss
cmpsb
lods
pop
jmp
push
roll
lods
push
test
in
or
fisubl
aad
inc
mov
push
fs
vmfunc
in
test
push
loope
notl
push
xchg
push
imulb
cmp
call
cld
orl
fs
int3
scas
mov
push
rclb
xor
dec
adc
mov
lret
jnp
mov
iret
mov
movsb
xor
adc
cld
push
int3
push
leave
popa
ds
adc
div
push
and
ds
outsl
add
xchg
sarl
loope
adc
sub
mov
jb
lahf
jne
adc
mov
leave
or
xor
inc
in
std
sti
inc
mov
das
pop
cltd
pusha
jp
test
lret
cld
ds
mov
je
addl
sub
ret
sahf
aam
cltd
sub
and
out
and
fbstp
imul
add
movsb
push
jecxz
pop
shrb
movsb
lcall
xchg
sbb
adc
rcll
xor
cmp
lret
lods
test
dec
fs
into
mov
sbb
mov
imulb
inc
xorb
mov
inc
cld
testl
mov
or
pop
loopne
into
nop
call
pop
bnd
testb
scas
pop
sbb
mov
stc
inc
pop
testb
mov
daa
out
ljmp
cld
pop
mov
fidivs
cmp
jmp
pushf
je
lahf
cmpsl
dec
push
out
incl
fmuls
add
stos
popf
lret
mov
bound
aas
jbe
push
push
adc
pop
arpl
cmpxchg
lods
rcr
jae
outsb
mov
or
sarl
jecxz
cs
sbbb
scas
into
mov
lea
out
addl
stc
gs
jns,pn
es
out
filds
lret
subb
loopne
inc
adcb
test
xor
andb
incl
outsb
idiv
xchg
push
mov
nop
inc
inc
into
mov
pop
lods
dec
lock
dec
aad
call
jns
loop
jne
call
fbstp
sarl
or
adc
ds
int
xchg
push
imul
pop
popf
movb
ja
fldcw
jae
in
cmp
fistps
in
outsl
ljmp
das
imul
jp
dec
jle
dec
vaddpd
in
icebp
adc
je
faddp
into
pop
and
mov
fwait
popa
jne
dec
int3
sbb
dec
mov
gs
xchg
mov
jmp
lahf
push
clc
push
jle
adc
iret
or
xchg
mov
data16
sub
or
mov
jmp
lcall
add
fs
ss
cmp
or
and
dec
jle
inc
js
enter
in
dec
lret
popa
loopne
ja
andl
xchg
jne
sbb
sahf
int
stos
adc
les
push
mov
sub
scas
test
pop
lret
gs
pop
addb
shl
sub
add
sub
mov
jl
imul
xlat
inc
xchg
loop
lods
int3
xchg
mov
push
stc
and
rol
lock
push
test
push
xchg
jb
cltd
jl
addr16
cmp
mov
xlat
fwait
jmp
in
scas
cmp
pop
xorb
fisubl
pop
fxtract
sti
lcall
mov
inc
insb
inc
adc
lock
mov
adcb
aas
dec
call
lds
es
cmp
pop
add
cmp
mov
xchg
mov
xlat
sub
cmp
sub
push
jg
cmp
pushf
inc
arpl
cmp
xchg
in
sbb
mov
and
lcall
pop
loop
dec
sbb
mov
jl
daa
or
nop
push
mov
cmp
ds
test
jmp
lcall
cwtl
xlat
cltd
or
xchg
mov
dec
xor
scas
add
ja
mov
adc
mov
dec
cmp
jmp
sahf
push
cli
push
ss
lods
push
mov
roll
pop
shrl
dec
in
aad
fs
xchg
sti
cmpsl
sub
mov
pop
int3
in
call
mov
repnz
mov
popa
xor
mov
movsl
imul
outsb
lea
ret
lahf
and
adc
hlt
jl
in
mov
cmp
fidivrl
push
mov
pushf
es
repz
sbbl
mov
out
lcall
ljmp
rorb
cmp
subl
dec
into
pushf
shlb
movsl
das
fisubl
stos
xor
mov
sahf
in
mov
cmp
movsb
dec
nop
in
test
mov
lcall
aad
std
fbstp
call
or
jo
and
icebp
add
test
sub
jo
or
mov
lret
mov
inc
lret
and
hlt
out
fistps
test
add
push
in
dec
xorb
pcmpgtw
xchg
dec
sbb
lock
into
and
rcll
xchg
ja
mov
cmp
pop
mov
pop
pushl
mov
mov
push
fbstp
lret
out
fneni(8087
int3
cltd
fldcw
in
xor
mov
pop
jno
cld
jl
sub
les
dec
dec
pop
aad
movsb
ret
in
js
test
pop
insb
xlat
cltd
nop
adc
orl
push
int
lret
daa
in
dec
mov
popf
test
in
jno
pop
je
test
add
mov
inc
adc
inc
inc
jl
and
pop
lcall
movsb
inc
not
jae
sub
int3
cld
push
lret
faddp
mov
dec
test
aam
adc
lea
and
jecxz
sbb
push
inc
shlb
push
sub
and
pop
sub
cs
adc
xor
lods
insl
in
sarb
outsl
lret
cs
sub
ret
pop
fdivs
xchg
jns
cmp
leave
lods
add
or
insb
and
test
in
in
leave
into
js
clc
loop
repz
mov
rcrl
cltd
jne
fistpl
inc
mov
incl
sti
lods
subb
iret
cld
imul
xchg
pop
test
mov
cs
cmp
insb
loope
imul
push
xor
ljmp
std
jp
sarb
xlat
shlb
loop
dec
xchg
cmpsb
scas
pop
test
mov
std
sahf
inc
call
push
add
sub
inc
add
ret
aam
leave
sub
ror
xchg
test
jnp
mov
cmp
rol
xor
or
adc
push
test
pop
cwtl
jge
jns
inc
or
aad
cmp
addr16
dec
cmp
ficoml
lcall
dec
jns
dec
or
jne
mov
insl
ffree
mov
aad
fs
dec
sub
js
sbb
in
mov
jle
pop
lea
push
mov
scas
stos
pop
stos
sbb
fistpll
mov
stos
push
ret
mov
mov
lds
andl
xchg
in
pop
mov
dec
ror
stos
cld
adc
jbe
push
or
iret
xchg
sbb
inc
pushf
and
repz
cs
or
ficoml
sbb
xchg
mov
jb
sbb
adc
dec
cmpsb
out
xlat
jmp
inc
mov
fldl
and
mov
cmp
pop
xor
lods
sbb
enter
fisubs
lds
pushf
pop
lods
push
insl
lods
adc
data16
push
std
cmc
into
jns
outsl
sbb
loop
fldln2
std
xorl
pushf
or
enter
lock
mov
lcall
adc
mov
out
sbbb
add
sub
test
icebp
and
add
ss
loopne
call
clc
xchg
inc
in
jb
jbe
dec
sti
dec
fistl
pushf
xchg
push
adc
sbb
add
lcall
jb
arpl
stos
nop
inc
leave
das
add
lock
add
cli
pop
pop
mov
mov
inc
add
in
fnstsw
fs
test
ds
xor
stos
jecxz
add
or
push
mov
pusha
or
inc
dec
aas
pop
mov
push
xor
pop
pop
dec
shrb
int
or
test
dec
push
cmp
repnz
scas
push
fidivrl
mov
adc
inc
dec
shrl
push
mov
pop
inc
pop
inc
inc
stc
pop
sub
jmp
dec
std
scas
ret
sub
push
and
mov
lret
stc
or
popf
sti
dec
daa
jo
xor
cli
js
std
ss
out
int3
pop
lods
shll
iret
mov
cwtl
aad
xchg
dec
mov
pop
popa
add
inc
ds
mov
mov
xor
scas
and
sub
lea
movsl
sti
jle
xchg
rorl
pop
dec
icebp
ret
cmp
cli
stc
ret
jae
xorb
notb
mov
jnp
aaa
test
fs
xchg
pop
ljmp
add
push
cld
cmp
jbe
pop
popf
add
leave
lahf
sbb
mov
inc
adc
push
lcall
adcl
pop
shr
rcr
xchg
adc
xchg
popf
or
lahf
lods
sub
inc
vmwrite
fsub
pop
imul
fdivl
mov
into
xor
xor
mov
fisubrs
scas
fdiv
out
xor
xorl
add
ljmp
pop
mov
lea
inc
or
jp
loop
pop
imul
mov
mov
pushf
xchg
inc
dec
and
push
xchg
and
int3
jb
fstpt
mov
pop
adc
xor
dec
repnz
scas
or
adc
sahf
sbb
sti
or
roll
sub
jns
jle
lret
cli
sbb
jle
jle
ljmp
mov
inc
pusha
mov
and
mov
cltd
cmp
add
test
daa
xchg
sub
lds
daa
stos
ss
pop
and
mov
dec
inc
dec
in
movsb
push
arpl
dec
mov
and
add
sub
jb
xor
add
jmp
add
or
or
data16
aaa
arpl
sbb
cmpsb
adc
jecxz
or
xchg
out
repnz
cli
mov
pop
dec
jmp
xchg
jg
xlat
jle
and
lahf
inc
adc
dec
fcoms
ja
dec
pop
push
xchg
add
out
repnz
xor
push
cltd
sub
jge
jmp
lret
adc
mov
push
push
xchg
mov
dec
jle
cmc
cmp
add
loopne
scas
push
xchg
imul
in
xchg
in
outsb
or
mov
push
ds
je
inc
rolb
sub
jl
or
clc
lret
and
mov
cld
jb
loope
pop
dec
addb
sbb
out
mov
add
mov
inc
mov
leave
fs
test
add
mov
mov
cmp
mov
mov
mov
mov
sbb
add
mov
cmpsl
sti
ss
in
icebp
pusha
dec
ja
dec
jae
adcb
das
hlt
cmpsb
ret
iret
inc
fwait
sbb
and
add
nopl
lret
rep
sub
mov
lret
jno
and
adc
sbb
dec
add
les
dec
xor
lret
adc
cmp
mov
sbb
sahf
mov
rcll
clc
sarl
ds
repz
arpl
jno
movsb
scas
sub
push
repz
cmpsb
aaa
test
sub
in
js
stos
mov
adc
xor
xchg
dec
aaa
mov
dec
pop
out
pop
arpl
dec
adcl
es
cmp
cmpsl
and
and
xchg
sbb
jnp
push
mov
push
mov
xchg
aas
std
cmpsb
std
jle
loope
in
es
cmp
add
mov
out
test
stc
or
xchg
adc
sahf
add
pop
mov
xchg
pusha
xchg
push
outsl
dec
in
mov
adc
mov
arpl
and
mov
inc
ljmp
sub
add
cmp
mov
jmp
jp
repz
mov
imul
adc
stos
aad
int3
mov
pop
adc
xor
mov
movsb
jmp
and
pop
push
sub
pop
hlt
adc
aaa
mov
std
pop
jnp
sahf
mov
lahf
mov
into
push
out
xchg
inc
movsl
movsb
pop
or
xor
or
dec
xlat
movsl
into
jne
add
jge
fsubrl
sbb
les
rol
add
aam
sbb
sub
test
sub
adc
pop
mov
inc
inc
add
in
and
rol
addr16
mov
push
pop
enter
pop
jecxz
sbb
aas
inc
pop
ffree
cmp
mov
call
les
sbb
push
add
in
lret
iret
cmp
dec
mov
insl
inc
loop
adc
scas
mov
inc
xchg
dec
sub
adcb
cmc
pop
mov
aam
xchg
push
mov
imul
inc
hlt
jg
subb
shlb
jb
pop
cmp
dec
add
cltd
repz
ret
mov
cmpsl
fisubl
icebp
aaa
daa
mov
jb
cmpsw
movsb
scas
outsl
and
push
movsl
sbb
popa
xchg
cmp
cmp
pop
loop
or
push
jmp
scas
mov
ret
lods
xor
xchg
dec
shl
sub
pop
mov
sbb
push
sub
out
push
cmp
pop
mov
sbb
lds
push
xor
int3
and
cli
jecxz
sub
sarb
sbb
or
sub
push
adc
clc
ljmp
cmp
jmp
imul
ja
push
adc
inc
lahf
imul
or
fidivs
pop
push
lock
sbb
mov
jmp
insl
xchg
mov
cli
jnp
cli
mov
js
mov
and
hlt
pusha
jge
fldt
dec
pop
clc
pop
mov
push
dec
xchg
mov
mov
pop
cli
mov
mov
lret
add
xor
dec
cmp
insb
push
pusha
movsl
or
ret
mov
xorl
movsb
inc
cmp
mov
add
outsl
adc
sub
cmp
pop
xchg
and
das
out
lret
xor
iret
pop
inc
rclb
jo
sbb
jns
push
sahf
movsb
jne
mull
sub
imul
xchg
mov
add
popa
cltd
lods
mov
xor
movsb
or
xlat
cli
pushf
mov
xchg
xor
in
int
sbbl
xlat
ds
mov
jns
insb
xchg
stc
xchg
fildll
inc
icebp
je
mov
lret
sub
push
and
imul
push
push
sbb
sahf
push
mov
add
sub
mov
ret
aas
fidivrs
push
std
les
icebp
jl
cld
cmpsb
scas
mov
iret
gs
in
je
out
mov
into
jne
popw
aam
push
mov
sbb
add
mov
inc
int3
and
push
leave
into
dec
movsb
clc
lcall
push
daa
arpl
add
jle
rorb
mov
dec
je
sbb
fistpl
loopne
and
cmp
in
jecxz
out
mov
mov
push
ljmp
in
xchg
scas
or
mov
and
mov
mov
iret
xchg
stos
sub
dec
mov
mov
sbb
push
jg
add
rol
cmp
adc
mov
sbb
fsts
xchg
or
mov
mov
jno
nop
dec
subl
sbb
mov
pop
jg
push
movsb
mov
ss
dec
mov
pop
push
dec
adc
sahf
jnp
mov
in
pop
insl
imul
ficoml
clc
nop
pop
cmp
mov
in
cmp
icebp
pushf
cmp
pop
add
loopne
mov
push
les
jmp
sbb
add
jae
iret
fildl
cmp
mov
ja
scas
jg
hlt
imul
dec
fsub
sbb
negb
jbe
int3
repnz
insl
fldl
push
test
nop
call
or
mov
sbb
aam
push
call
popa
shll
imul
pop
pop
add
fwait
pop
or
push
stos
rcl
fs
mov
out
pushf
ss
das
js
inc
pop
popa
mov
xchg
mov
push
repnz
fstp
fisttpll
mov
pop
out
in
pop
xor
dec
mov
xchg
push
lret
pushf
in
mov
test
add
inc
jo
sub
sti
in
test
aam
add
addr16
filds
adc
ds
scas
and
jle
sub
leave
out
cwtl
nop
popa
repz
cmc
sahf
ret
stc
inc
push
clc
or
xor
cmp
aad
sub
adc
das
jg
int3
adc
sub
adc
pop
mov
mov
pop
mov
xchg
xor
lock
leave
stos
add
dec
in
shll
repnz
cmp
roll
pop
fstl
cli
and
mov
push
mov
rorl
xchg
mov
mov
fwait
mov
stos
jle
pop
mov
push
pop
pop
int3
pushf
jl
cvtps2pi
mov
outsl
pop
cmp
mov
cmpsl
pop
push
mov
or
lods
push
jo
fldcw
cmp
test
ss
cmpsl
jle
mov
push
loope
dec
push
sub
cmp
aad
test
iret
push
out
es
test
inc
mov
fnstenv
int3
out
or
push
fstpt
pushf
adc
lods
adc
in
mov
leave
stos
push
jle
pushf
data16
movsl
rolb
push
sahf
enter
nop
in
orl
insb
mov
aas
cmp
push
inc
mov
clc
fs
mov
outsb
pop
and
inc
outsl
das
pusha
pop
fdiv
into
dec
pusha
xor
std
pop
andb
inc
sbb
xor
sarb
ljmp
cmpsl
push
aad
mov
adc
cmp
sbb
in
lock
push
test
repz
lds
shll
dec
add
inc
cmp
adc
scas
aas
xchg
pop
adc
mov
xchg
pop
in
pop
nop
es
pop
in
add
imul
in
fists
pusha
push
pop
ss
les
loope
mov
push
leave
fs
push
or
loop
fimull
arpl
rol
test
add
add
push
mov
aas
mov
pushf
and
fcoms
cli
imul
cmp
sub
add
insl
jb
push
or
popf
aam
lods
cmovo
cmc
aas
dec
lods
cmp
cli
cmpsb
dec
pop
mov
fisttpl
ljmp
jge
xchg
iret
jle
push
fs
pushf
mov
xor
stos
fisubrl
je
into
imul
inc
push
dec
add
inc
jecxz
bound
mov
mov
and
sar
push
cmpsl
ljmp
ds
pop
mov
push
jg
push
dec
mov
push
pop
imul
mov
dec
enter
movl
jg
cmp
es
mov
scas
out
adc
sbb
jb
xchg
jbe
pop
ret
xchg
dec
pop
aad
enter
push
mov
lcall
push
sub
adc
adc
icebp
xchg
bnd
xchg
push
mov
call
pop
repz
mov
aas
sbb
sbb
dec
stos
popf
adc
fisubs
inc
cmpsl
adc
jo
xchg
leave
xor
xor
test
cli
sub
orl
dec
and
sub
push
xor
jge
out
in
in
lcall
fsubr
enter
sub
fistl
xchg
or
and
stc
jmp
cmpsl
loopne
faddl
mov
inc
insb
pop
hlt
lds
repnz
xchg
cmp
mov
inc
push
adc
add
inc
xchg
aaa
xor
repnz
and
xor
add
sbb
pop
fwait
xchg
js
pop
ret
test
sub
mov
in
repz
fmull
mov
dec
jecxz
jg
mov
xor
ss
stc
add
jns
in
insb
add
and
testb
lret
push
ja
push
add
daa
lea
cmpsb
mov
jae
adc
ljmp
addl
sbb
lds
jg
adc
dec
push
dec
xor
test
ds
or
movsl
pop
rol
mov
loopne
xchg
xor
sub
jne
adc
movsb
xchg
cs
pop
movsb
mul
sbb
les
inc
rolb
mov
dec
test
or
std
fimull
out
int
das
jecxz
dec
push
popa
xchg
aad
popl
ret
clc
mov
dec
jo
test
ret
icebp
inc
xor
test
rorb
push
insl
in
das
xchg
add
int
int3
out
pop
sub
lds
add
inc
ss
dec
add
dec
xor
xor
adc
cmp
movsl
jge
movsb
repnz
adc
fst
pop
das
add
ljmp
popa
fbld
xchg
jbe
hlt
test
xlat
andb
dec
pop
andb
divb
xor
sbb
sti
mov
adc
lret
push
outsb
mov
mov
sbb
dec
sbb
movsb
call
sub
loopne
inc
push
mov
xor
mov
xchg
push
push
mov
pop
in
jmp
sub
test
pop
addl
sub
mov
sub
xor
sbb
dec
add
insb
mov
add
dec
test
pop
push
subb
daa
gs
gs
xor
push
addr16
xor
cmp
lcall
repnz
or
xchg
aaa
ds
jp
mov
cmp
movb
imul
in
ja
test
in
xchg
lock
rol
cwtl
fwait
fwait
shl
mov
pop
xlat
cmp
cmp
inc
lea
jno
pop
mov
push
xchg
mov
jg
loop
mov
cmc
xchg
and
ljmp
mov
mov
xchg
ret
es
sub
pop
xchg
dec
mov
aaa
pop
sbb
xchg
lods
arpl
lock
and
fldenv
mov
xchg
jmp
xor
push
push
leave
leave
or
add
dec
out
cmp
adc
in
sbb
icebp
xchg
mov
lret
je
test
dec
jmp
inc
call
test
inc
or
pop
jno
add
idivb
mov
fs
xchg
sar
cld
xchg
dec
xchg
xchg
fs
dec
js
add
lret
cltd
mov
mov
out
fldcw
data16
jbe
leave
sbb
cs
ficompl
cmp
add
adc
dec
testb
popa
int
ret
jecxz
xor
rcl
jle
push
xchg
mov
pushf
cmp
shrl
jle
lods
mov
push
fcoml
sbb
iret
inc
gs
lock
jb
jo
xchg
jmp
aas
jecxz
cs
scas
sbb
mov
fdivs
orl
push
adc
jecxz
xor
cmp
jp
pop
push
jge
jb
iret
mov
daa
add
sub
mov
pop
add
jg
mov
fbstp
xor
xlat
ljmp
into
and
adc
inc
push
cmpsl
cli
jno
sub
into
rcrb
push
mov
sbb
push
cmp
push
sbb
addr16
sub
lcall
adc
fistpl
mov
cmp
or
inc
cmpb
insl
data16
arpl
mov
in
dec
mov
xchg
pop
xchg
mov
outsl
xor
adc
shlb
pop
xchg
sbb
xor
lahf
adc
lcall
cld
es
mov
jno
out
lahf
mov
push
clc
inc
fisubrs
nop
lret
stos
ret
pop
imul
jmp
stos
inc
push
xchg
xor
and
loopne
mov
and
jmp
dec
xor
sub
icebp
pop
fsubl
adc
insl
out
push
js
icebp
mov
xchg
fsubs
decb
inc
out
add
push
sub
incl
push
dec
mov
pop
jbe
push
sbb
xor
pop
jne
stos
int3
inc
dec
mov
pop
cmpsb
cmpsb
ljmp
mov
dec
stc
pop
movsb
pop
movsl
cmpsl
pop
and
insl
cltd
arpl
mov
sub
sbb
jl
add
lret
fistpl
pop
ds
insb
sbb
pop
stc
dec
and
inc
insl
loop
fisubl
xchg
movsb
test
jecxz
mov
cmp
dec
jns
dec
cmp
inc
aam
cld
and
mov
lcall
sti
movsb
repnz
mov
inc
sbb
sub
push
push
mov
lahf
xor
dec
cmp
or
pusha
jns
scas
jbe
or
adc
out
pop
inc
mov
imul
out
loope
dec
ror
movsl
cli
fstpl
xor
mov
and
outsb
jb
inc
int
mov
shlb
stos
cmpsb
cld
cmp
jle
in
dec
lea
mov
adc
or
push
and
inc
lock
or
xchg
std
lods
xchg
iret
rclb
push
add
add
mov
stos
lret
sbb
dec
push
pop
mov
imul
push
add
push
xor
xchg
rorl
out
aam
adc
imul
stos
out
cmpsb
mov
and
push
int
mov
fs
add
cwtl
fildll
push
lods
pushf
dec
mov
adc
push
testb
ret
cmpsb
fwait
idivl
test
push
sar
mov
aam
lcall
and
xchg
mov
icebp
shrl
mov
call
mov
jp
out
inc
push
mov
jno
ljmp
loop
adc
push
cwtl
fcompl
int
je
sar
loopne
mov
pop
dec
rorb
push
add
mov
adc
jno
sub
xchg
outsb
stos
xor
sub
sbb
test
aam
cli
lret
jp
jle
in
jnp
xor
mov
cld
cmp
fcomip
rcrb
xchg
in
sbb
daa
dec
fwait
stos
push
push
ret
and
fs
shrl
hlt
fstps
fidivrs
push
cli
add
inc
ja,pn
xor
cmp
xchg
mov
js
fucom
in
shlb
cmc
xor
call
jmp
jmp
imul
cld
sub
fistpl
ret
insl
mov
fisttpll
inc
repz
push
mov
je
js
pop
enter
sti
xchg
cmp
mov
jo
stos
adc
scas
movsl
pop
popf
mov
push
sub
push
lds
loop
dec
dec
xchg
fidivrl
test
inc
cmp
int3
pop
loope
xor
ds
pop
mov
mov
ficomps
or
jb
cmp
add
in
cmp
push
xor
scas
imul
in
mov
sbb
push
pusha
fisttpll
fsubs
ja
pop
popf
add
cmpsb
inc
je
mov
add
in
cmp
fwait
ds
and
ljmp
sub
xor
mov
pop
rcl
scas
push
xchg
cmp
call
xchg
fldenv
pop
or
sahf
ret
sub
lods
lock
mov
pop
jle
adc
jle
dec
mov
mov
mov
into
jle
sub
xchg
js
into
je
inc
ljmp
mov
imul
dec
or
cli
scas
dec
mov
fisubrl
ljmp
daa
out
lret
movsl
sahf
sub
sbb
movsb
sub
lods
inc
sub
jl
jo
in
jb
lahf
xchg
jmp
pop
sub
xor
xor
pop
or
ret
dec
push
test
into
xor
es
add
sahf
cli
test
frstor
adc
mov
inc
lock
xorb
in
imul
fimull
dec
in
push
loope
outsl
xchg
mov
loop
in
in
scas
push
and
fidivrl
jge
arpl
cmp
sbb
adc
and
test
adc
ret
shlb
daa
cli
mov
pusha
movsb
fistps
mov
fists
inc
mov
mov
dec
imul
imul
cmp
mov
xor
add
addr16
cld
movsl
cmp
cli
imul
stc
lahf
sub
push
scas
sbb
xchg
add
repz
sbb
pop
jg
pop
ds
pop
cmpl
xor
jne
pop
fimull
lock
and
fimull
sbb
popf
inc
add
xchg
dec
sbb
outsb
jo
or
mov
jae
ret
mov
xor
fisttpll
mov
enter
push
jl
mov
movsl
mov
lods
and
fidivrl
pop
inc
js
sbb
xlat
cltd
sbb
repnz
mov
jmp
outsl
loop
ljmp
movl
and
dec
movsl
pop
adc
push
mov
jo
pop
rcr
inc
movsb
inc
jecxz
sub
outsl
xchg
adc
mov
loop
in
fistl
fnstcw
fsub
push
js
aaa
pusha
cmpsb
aaa
jno
negb
flds
sarb
push
jne
jle
xor
out
jp
push
or
jne
jle
imul
dec
mov
ljmp
sbb
and
cmp
lods
movsl
addb
hlt
adc
mov
icebp
or
xor
bound
mov
xchg
repz
mov
pop
lret
add
shlb
popf
push
mov
push
int
cmp
test
lea
mov
shrb
out
sub
inc
imul
mov
aad
pop
inc
stos
push
lahf
dec
mov
ds
jbe
add
jle
lcall
inc
mov
push
xchg
xor
testl
in
lea
xlat
xchg
sub
fcoms
inc
out
and
sub
jmp
iret
jnp
test
and
movl
cld
adc
mov
xchg
cwtl
inc
xchg
mov
mov
xchg
or
je
ret
lea
or
bound
lea
test
adc
cwtl
out
popl
dec
mov
lahf
enter
or
imul
cld
cmp
arpl
mov
frstor
cmp
adc
iret
mov
xchg
inc
mov
dec
pop
pop
inc
mov
push
rclb
popa
cmpb
lret
sti
outsb
pop
outsb
int
test
outsl
test
pushf
ljmp
cmp
lds
jbe
push
out
xor
adc
jno
in
dec
adc
in
jg
and
leave
into
pop
mov
dec
add
mov
imul
into
sbb
sub
lcall
shlb
andb
aad
or
pop
mov
cmpsl
sbb
es
fists
lea
enter
push
xor
ficomps
xchg
repz
stc
rolb
xchg
mov
ret
bound
popa
fdivl
hlt
dec
sbb
loope
testl
sbb
and
fmull
cmpsb
mov
dec
loopne
or
push
xor
cmp
fistl
aaa
pop
inc
enter
mov
insl
xor
xchg
pop
cmp
les
mov
dec
subb
jns
dec
les
push
cwtl
std
out
jae
lcall
jae
fildl
pusha
lock
or
push
jbe
lds
sub
popa
mov
add
in
enter
ljmp
test
imul
outsb
inc
iret
pop
orb
pop
addr16
pop
xor
or
std
nop
mov
pop
aam
loopne
clc
or
std
sub
cmp
mov
lahf
pop
fistpll
call
imul
cwtl
imul
pusha
mov
int3
push
dec
and
mov
cmc
mov
dec
or
scas
push
aaa
sbb
clc
push
cmp
fisttpl
jbe
mov
mov
fdivrl
lret
adc
adc
mov
xchg
leave
popf
inc
sbb
rcr
out
outsb
addl
inc
imul
aam
xlat
mov
mov
mov
lods
mov
pop
ret
or
addb
pop
aad
mov
jbe
or
test
cmp
xor
adcb
mov
js
push
sarb
adc
adc
lods
add
roll
insb
cmpsb
lock
call
les
faddl
outsb
cltd
add
mov
inc
shll
lock
sti
mov
mov
ficoms
inc
icebp
fsubrp
cld
xor
add
filds
dec
cmpsl
mov
adc
out
lea
hlt
filds
sub
mov
sub
in
pushf
and
mov
movsb
pop
add
fidivs
sub
popa
mov
xchg
jo
ljmp
ljmp
stc
cmc
push
outsb
imulb
mov
addr16
ds
push
insl
sbb
imul
outsb
hlt
leave
mov
add
jge
cli
pop
xchg
jp
mov
outsb
js
stos
insl
lret
mov
lcall
add
xchg
mov
stos
popf
movsb
decl
sub
addr16
pop
pop
clc
xor
js
inc
add
aas
jecxz
jle
movsl
cmpsb
scas
sbb
int
sti
enter
mov
jp
rcrl
les
push
das
xchg
jne
adc
and
imul
repnz
cmp
in
sahf
mov
adc
insb
xor
movsl
incb
push
inc
mov
out
and
mov
xchg
mov
aam
fists
push
jns
pushf
in
lds
rolb
lahf
jno
icebp
rcl
into
xorl
sar
mov
xchg
fdivp
out
in
fs
bound
int
test
mov
sti
je
xor
add
xchg
mov
movsl
addr16
test
in
lods
push
out
ljmp
sbb
mov
clc
rcrb
cmpsl
dec
add
cmpl
jmp
movsl
ds
movsl
xchg
sarl
cmp
sub
lcall
dec
inc
insl
loopne
test
test
xchg
cmp
xchg
rorb
lahf
pop
cmpsl
mov
sub
les
cltd
jns
pusha
stos
mov
xor
cmp
cmp
imul
scas
aad
and
mov
xchg
out
or
lds
xor
outsb
xor
mov
or
shlb
mov
push
push
add
loop
pop
loope
rorb
stos
andb
repz
test
daa
pop
pop
cmpsb
pop
testl
int
repnz
insb
xor
enter
xchg
mov
andb
or
scas
mov
sarb
add
xor
jnp,pn
je
push
pcmpeqw
fdivrl
and
pushf
sbb
movsl
adc
jnp
shlb
xchg
sub
jl
lods
add
in
jae
xlat
pop
icebp
pop
scas
jge
add
adc
lds
or
imul
or
je
jae
adc
sub
gs
mov
mov
add
or
aaa
sbb
cmp
fisttpl
push
cmc
push
arpl
mov
ljmp
imul
sub
sbb
dec
das
mov
jbe
in
pop
jb
mov
cld
mov
outsl
in
es
ja
iret
pop
jne
test
imul
inc
inc
fnstsw
push
out
ja
cltd
mov
pushf
sbb
cwtl
mov
mov
mov
aam
sti
mov
adc
adc
add
push
std
add
mov
in
jae
pop
packssdw
cmp
repnz
jno
jb
imul
shrl
fnsave
xlat
dec
or
push
insb
lcall
inc
sbb
or
lods
dec
loope
dec
lahf
jmp
push
jns
jmp
inc
lea
cli
sub
call
mov
sbb
sub
lahf
xchg
sub
cmp
ljmp
pop
std
xor
pop
inc
fsubs
std
sti
jne
call
sub
push
loop
into
push
sbb
cmpsb
or
fwait
xor
add
sbb
inc
bndstx
fdiv
je
lea
cmp
in
insb
inc
decb
roll
call
je
cs
aaa
int3
sarb
ret
testl
jnp
sbb
add
out
cs
sbb
mov
jo
std
cmpsb
dec
pushf
pop
mov
imul
jbe
xchg
mov
in
inc
sub
mov
imul
pop
fimull
push
add
and
inc
xchg
push
inc
add
out
notl
pop
dec
popf
push
pop
rclb
aad
mov
int3
or
cli
nop
das
movsb
and
mov
jne
inc
and
clc
lret
inc
push
sahf
lds
mov
push
mov
cltd
mov
in
pop
lcall
mov
adc
repnz
cltd
cmp
stos
xor
adc
dec
add
pop
lods
insl
iret
mov
mov
and
hlt
mov
xchg
pusha
cmp
sbb
adc
add
lahf
nop
pop
mov
sbbl
mov
push
sbb
imul
jle
mov
mov
sub
test
or
aad
in
cmc
js
popa
and
xor
mov
or
rcr
sub
mov
pop
addb
or
jge
mov
push
popf
lret
gs
lahf
add
out
pushf
xlat
cmp
hlt
out
jecxz
lret
pop
xchg
add
push
cmp
jnp
inc
in
pop
xor
lret
mov
pop
adc
xchg
iret
xor
dec
xlat
insb
mov
push
and
cmpsl
ja
in
call
sti
adc
mov
add
push
mov
mov
add
sbb
push
add
mov
jg
adc
pop
popf
in
xor
enter
sbb
mov
fstpt
mov
cwtl
add
cmp
add
or
adc
push
xor
or
pop
sbb
std
ja
mov
jb
jae
je
iret
test
andb
jo
fisubrs
popf
ret
fs
fisubs
pop
fwait
xchg
into
and
dec
mov
sub
shrl
jmp
mov
enter
aam
pushf
stc
cmpsb
add
loop
nop
call
mov
mov
ret
test
clc
inc
loop
divb
inc
cmp
scas
dec
int
xchg
repz
mov
iret
leave
mov
mov
mov
mov
mov
sahf
aas
jne
mov
ficoms
add
rorl
push
cmp
loopne
lock
inc
and
bound
xor
fxch
mov
mov
inc
inc
push
ja
in
push
add
scas
jb
cmpsl
rcr
sub
push
mov
add
fiaddl
mov
ss
push
xchg
dec
pop
dec
mov
jnp
mov
inc
sbb
cmpl
or
add
and
dec
mov
movsb
insb
call
out
xor
notb
adc
dec
xchg
sub
mov
scas
sahf
pop
push
add
xor
mov
fisttps
adc
aas
into
sti
in
sbb
fs
subb
push
sub
sbb
mov
xchg
std
jge
sub
jne
test
jbe
gs
into
push
cmpsb
stos
ljmp
mov
cmc
lods
xor
mov
jbe
sahf
xchg
movsb
cltd
outsl
inc
sub
loop
shrb
popa
pop
in
cwtl
jnp,pn
dec
cmpl
ret
mov
je
addr16
xor
inc
cmp
or
pop
jae
adc
add
shll
loope
push
repnz
mov
shrb
ret
dec
add
ficompl
sub
xor
inc
sahf
rorl
dec
add
js
adc
fldt
pop
sbb
fwait
mov
xchg
mov
iret
mov
and
mov
inc
div
popa
add
pop
aaa
xchg
mov
mov
hlt
stos
cmp
lea
push
mov
and
mov
je
mov
lahf
flds
mov
dec
push
lods
sbb
testl
push
out
push
fs
adc
loope
popf
aaa
test
adc
clc
pop
xor
mov
test
cmp
bound
cmp
mov
jns
mov
add
mov
mov
outsb
mov
pop
or
leave
rorl
ss
push
mov
enter
push
mov
pop
fucomp
mov
shl
dec
sub
add
sarb
cli
js
repz
pusha
or
insb
jb
push
rcr
sbb
sub
dec
fstps
mov
pop
sbb
bound
xchg
mov
jmp
aaa
xchg
ss
mov
mov
cltd
jnp
add
mov
dec
jl
outsb
movsl
jmp
lods
into
add
pop
cld
sbb
negl
pop
push
push
push
mov
pop
gs
xchg
pop
loop
adc
loopne
cmpsb
cli
hlt
or
test
daa
add
xchg
sub
jl
jae,pt
into
lods
je
xchg
out
or
popa
cmpsl
pop
dec
pop
aad
shrl
sbb
jmp
xor
gs
mov
movups
jns
jno
cwtl
or
out
push
add
shlb
ljmp
negl
jo
push
fucomip
or
pop
ja
mov
sarl
rcrl
shrl
ds
mov
jne
jg
jb
inc
das
mov
fucomip
inc
mov
ficoml
mov
je
aaa
jl
sub
dec
add
cmpsl
lods
and
shl
lret
sub
add
push
inc
cmovae
sar
loopne
inc
adc
repz
mov
daa
add
mov
das
jae
xor
push
jae
fidivrs
in
dec
pop
mov
mov
fwait
stos
sbbb
ret
mov
push
xchg
lods
mov
int
ss
aad
movsb
mov
in
aas
sub
stc
sbb
pop
pop
jmp
or
imul
mov
loopne,pn
mov
mov
push
in
je
sub
loopne
adc
test
lock
dec
movsb
or
add
imul
daa
leave
push
adc
dec
adc
pop
jae
in
cli
mov
jecxz
fcoms
arpl
push
repnz
out
jl
add
pop
push
movb
cli
jnp
imul
add
push
mov
test
hlt
stc
les
cld
inc
fbld
and
inc
pushf
dec
push
mov
sub
mov
mov
out
repz
stos
xchg
movsl
lret
inc
lret
cli
mov
mov
pop
clc
dec
or
fiadds
mov
cmp
pop
inc
sub
ficoml
mov
enter
xchg
lea
fistpl
lods
arpl
pop
sahf
fbld
popl
and
cmp
fs
dec
lahf
lcall
mov
cltd
in
push
stc
sbb
mov
test
mov
leave
xlat
sbb
push
mov
sub
inc
sub
inc
div
int
adc
pop
jb
xor
add
loop
shl
lods
rcrb
mov
cwtl
adc
jmp
adc
mov
fnstsw
out
in
or
or
dec
int
sbb
push
sub
sub
sbb
mov
push
gs
mov
cmp
scas
inc
sbb
jg
test
pop
inc
mov
jmp
mulb
sbb
int3
pop
mov
inc
bound
or
dec
sub
scas
movsl
in
aad
dec
inc
cli
int3
mov
popa
dec
arpl
xchg
pop
dec
fs
loopne
cld
sub
repz
mov
ret
nop
xchg
push
xchg
sbb
mov
leave
sub
mov
inc
jecxz
pushf
stos
push
icebp
ficoms
sub
or
pop
test
int3
cmpsl
and
cmp
mov
cltd
sub
inc
imul
pop
clc
inc
lret
xchg
jbe
lret
dec
mov
sbbb
dec
iret
jl
inc
dec
je
sub
jb
pop
adc
xchg
dec
rcrl
adc
jno
sbb
in
fdivrl
mov
ja
pop
pusha
adc
movsl
ret
repnz
shll
xchg
add
leave
jo
adc
cmp
aaa
inc
popa
sub
jbe
pop
in
aas
popa
add
lock
and
adc
ljmp
andl
jmp
into
in
das
sbb
jp
sbb
sbb
push
mov
jns
in
sub
insb
pop
pop
mov
test
inc
int
in
mov
hlt
mov
add
rorb
cmpsl
and
cli
add
inc
mov
jo
sti
cmp
ret
pop
fldl
push
lret
repz
adc
add
pop
insl
sbb
test
call
xchg
fwait
cli
push
test
xor
sub
jae
xchg
popa
popa
ljmp
dec
mov
lods
xchg
in
adc
lcall
mov
dec
push
out
shlb
sub
ret
loop
add
and
lret
jg
xor
out
testl
push
or
cli
inc
inc
stos
lret
fsubl
jp
sub
movsl
push
pushfw
pop
push
add
xchg
add
aad
mov
dec
sbb
dec
push
add
pop
pmaxub
repnz
mov
or
mov
scas
in
mov
add
gs
sti
jo
sbb
scas
mov
pop
pop
repz
out
popa
or
fs
test
or
dec
rorb
jno
mov
hlt
shll
pop
xchg
or
ds
js
mov
cmp
adc
add
call
lods
inc
fnstcw
loope
sti
lret
dec
xchg
sbb
and
mov
shll
sub
pop
xchg
add
mov
xchg
inc
fsubr
bound
out
jnp
xlat
outsb
xchg
negb
in
sbb
push
sub
adc
dec
add
out
add
loopne
inc
push
sbb
mov
lret
jae
push
dec
push
jae
clc
sar
mov
mov
dec
mov
sub
cmpl
leave
add
stos
push
mov
push
neg
mov
or
mov
mov
inc
xor
push
push
dec
cmp
test
xlat
mov
xor
pop
adc
sar
mov
mov
sti
xchg
mov
mov
incb
inc
rcll
xchg
lea
jl
andl
jge
addr16
push
mov
xchg
push
std
xchg
push
push
cs
or
mov
or
popf
in
pop
sub
ret
incl
mov
bnd
pushf
in
lea
add
or
orl
push
shlb
inc
push
scas
cmp
jg
sub
push
aam
mov
js
fisttpll
lret
data16
test
lock
jmp
and
sbb
sbb
comiss
lret
dec
xor
in
fistps
cmp
mov
and
test
mov
mov
into
or
push
push
mov
hlt
call
popa
or
ljmp
les
fwait
je
ret
mov
test
cmpsl
mov
adc
jbe
fstps
movsl
cmp
add
xor
mov
jo
xchg
les
push
jecxz
jl
lea
adc
cmp
mov
adc
xchg
lahf
sbb
xchg
je
daa
test
mov
push
aas
fwait
push
jnp
fsubr
adc
sbb
xor
inc
in
out
les
js
pushf
sub
ret
mov
ret
subb
jmp
and
addr16
loopw
mov
xchg
xchg
xor
xchg
dec
cmp
jbe
cmc
pop
inc
in
and
icebp
outsb
mov
daa
pop
add
mov
mov
out
xlat
adc
inc
rorl
xor
and
xchg
or
icebp
lret
and
and
imul
xchg
adc
movsbl
add
mov
xchg
xchg
jae
sbb
scas
xchg
jae
mov
call
inc
test
jg
dec
or
inc
add
jno
ljmp
cmp
outsb
jae
dec
aad
out
or
mov
repnz
fcomip
cld
push
mov
rolb
pusha
ljmp
mov
stos
rorb
push
cmp
loopne
mov
pop
popa
sti
movsb
adc
movsl
xchg
jecxz
in
flds
dec
mov
lds
jge
push
mov
sbb
mov
in
loop
push
or
push
jo
cli
xchg
mov
cmp
into
pop
mov
sub
adc
push
imul
aad
add
pop
addr16
clc
setge
aas
jg
xlat
shlb
xchg
aad
mov
test
pop
pop
rclb
ljmp
cmc
test
outsb
aaa
mov
cmp
mov
add
mov
xor
inc
test
sarl
push
inc
ljmp
js
lock
xchg
jae
pop
andb
mov
push
pop
push
aad
cmc
mov
inc
xchg
lret
jg
inc
push
jge
loope
push
addl
and
add
repnz
or
repnz
inc
into
icebp
mov
push
fists
ror
xor
or
sub
xchg
data16
xchg
jnp
mov
sbb
lret
ret
fimuls
sub
pop
rcr
xchg
and
idivl
lea
jne
dec
adc
pop
xor
mov
repnz
outsl
pusha
xor
ret
add
movsl
pop
pushf
pop
xchg
out
dec
mov
sar
roll
and
enter
xor
xchg
cmpsb
ds
aaa
mov
mov
mov
xchg
loope
into
popa
mov
jb
cwtl
call
into
dec
push
ss
and
mov
mov
xchg
push
stos
daa
adc
adc
js
ds
pop
out
xchg
test
xchg
cmp
je
pop
ja
outsb
icebp
test
add
into
mov
in
inc
pop
inc
cld
lock
sbb
cmc
lea
or
push
shrb
mov
jg
ss
fs
pop
ljmp
mov
xchg
or
outsb
sbb
pop
ret
jb
xorb
stc
inc
repz
cli
subl
into
xchg
sbb
sbb
clc
les
mov
fcoms
out
jecxz
rcrl
int
push
cltd
stos
pop
xchg
mov
xor
loopne
ljmp
mov
or
seta
fistl
ds
sub
adc
push
inc
or
loope
adc
add
aad
stos
popa
fiadds
pop
push
insb
xlat
imul
sub
aad
sarb
jo
mov
dec
add
sarb
loope
data16
lret
loop
xor
cmp
mov
pop
pop
or
add
data16
sahf
std
daa
outsb
cmp
mov
mov
shrb
loope
imul
add
and
pop
pop
pop
mov
cld
arpl
movsb
adc
adc
jle
pop
test
dec
mul
jg
cmc
and
pushf
dec
cmc
decb
sub
mov
enter
xchg
adc
test
ljmp
pusha
stc
xchg
into
mov
mov
ds
lret
mov
dec
add
mov
push
adcb
cmc
out
ret
mov
bound
lahf
xchg
adc
mov
insb
cmp
pop
sub
out
stos
movsb
jmp
or
pushf
sbb
aam
push
push
and
nop
pop
adc
sub
push
inc
subb
xor
jmp
loope
fwait
push
fs
xchg
mov
aaa
jg
cmp
add
mov
fistpll
das
push
orps
mov
imul
lahf
lcall
fsubrs
inc
jp
les
pop
pop
iret
jne
outsb
push
call
ljmp
jb
cmp
scas
mov
pop
xlat
push
mov
pop
shrb
sub
jmp
mov
stos
pop
rcll
js
insl
mov
es
mov
sbb
adc
add
sub
and
fnstsw
std
jp
and
lcall
push
hlt
inc
sub
nop
add
lea
js
cmp
cmpsb
sti
mov
popa
xchg
mov
add
rorb
sti
mov
pop
mov
imul
bound
sbb
dec
mov
iret
sub
push
lods
lret
aam
sti
pop
and
aam
or
adc
insb
sbb
mov
pushw
orl
adc
lahf
loope
mov
mov
adc
mov
fdivrl
sahf
xchg
push
aad
addb
aam
pop
call
aas
cld
jne
sbb
inc
sub
or
mov
add
xchg
or
cmpb
mov
mov
lock
mov
adc
push
xor
lods
dec
jbe
std
cmc
mov
and
sahf
or
and
mov
adc
inc
inc
sbb
dec
jae
aad
pop
popf
add
repz
add
cld
sbb
or
add
cld
ficompl
dec
pop
adc
xor
or
pop
test
jg
pop
mov
mov
scas
sbb
fcoms
cli
mov
loopne
pop
sti
jmp
push
lret
scas
lock
outsl
je
test
xchg
daa
es
mov
fsub
rcrl
cmc
jae
adc
imul
inc
add
das
jb
in
aaa
adc
push
push
in
in
jae
mov
stos
std
dec
fidivl
sub
mov
outsb
rcll
movsl
fwait
loop
pop
enter
sbb
sub
push
enter
mov
fistps
or
xchg
mov
popa
cmpsl
lcall
fnstcw
cli
xlat
mov
and
stc
aaa
loope
out
data16
mov
inc
xor
out
and
sub
xor
mov
jmp
inc
pop
aaa
inc
jp
std
rorb
ljmp
in
cmp
scas
scas
mov
jne
ret
popa
xchg
mulb
fimuls
cli
add
movsl
add
cld
pop
test
xor
xchg
mov
add
js
add
pop
push
mov
movsb
popf
mov
push
cmp
or
adc
pop
iret
movsb
jo
push
popa
loopne
lea
js
cs
insl
insl
jge
lock
mov
mov
repz
sub
cmp
dec
cli
sub
mov
xchg
scas
inc
pop
in
sbb
sti
xchg
xchg
arpl
jbe
aas
popa
fsubrl
insl
mov
push
add
sbb
lret
pushf
dec
enter
adc
mov
aas
nop
in
sarl
jl
xor
inc
mov
popa
es
nop
sahf
dec
scas
push
sti
fsubrs
sbb
mov
mov
shl
mov
mov
sub
pop
fmuls
mov
sti
sub
cmpb
mov
sti
cmp
pop
and
es
mov
out
sub
xchg
mov
push
inc
cld
out
push
jo
in
mov
jle
push
jmp
fcomps
pop
out
add
fldenv
xor
cmp
sub
inc
cs
jo
outsb
mov
and
dec
pop
test
popf
dec
leave
sbb
arpl
fiaddl
pop
jmp
imul
mov
lea
movsl
dec
add
mov
adc
lds
pushf
insl
ret
fsts
jecxz
sub
ret
sbb
mov
in
je
pop
inc
mov
into
add
cmp
call
xchg
lock
mov
xchg
icebp
jge
fimull
popa
shl
popa
aaa
and
std
xchg
int
xchg
cmp
test
pushf
std
dec
lret
inc
dec
outsl
imul
les
loopne
push
sub
push
push
and
in
imul
xchg
sub
mov
rcrb
jl
mov
adc
push
sub
aaa
mov
add
pushf
jp
and
add
popf
or
cmp
xor
pop
dec
out
pop
dec
dec
out
add
cmp
test
mov
fs
jp
das
dec
sub
and
inc
lods
mov
lret
fisttpll
and
jne
addr16
and
test
xor
lahf
inc
push
out
push
jecxz
rcl
les
lods
iret
in
cmp
gs
repnz
or
gs
mov
rcrl
lock
or
mov
push
fiadds
les
cmpsl
movsl
xor
test
xchg
xor
dec
xchg
pop
fistps
cmp
sbb
push
add
aam
dec
push
push
push
xor
insb
mov
stos
aas
xor
cmp
outsl
sbb
out
mov
push
or
cmpsb
int
adc
mov
xor
shrl
mov
pop
xor
test
push
inc
inc
push
mov
and
mov
mov
int3
in
mov
add
pop
loop
cs
lahf
inc
mov
test
cmp
sub
mov
in
rcll
cmp
clc
sbb
insl
sub
or
adc
outsl
out
nop
shlb
fisubs
fidivrs
int3
insl
dec
jge
xchg
sbbb
ret
into
mov
jae
push
outsl
stc
iret
scas
inc
lock
xlat
sub
fisubrl
add
push
add
dec
jb
jne
mov
push
mov
clc
inc
add
inc
sub
jp
and
sahf
inc
mov
sahf
lea
mov
pusha
mov
xchg
mov
mov
inc
jl
jecxz
stos
sbb
add
popa
dec
mov
xor
addr16
mov
cli
or
stos
xchg
dec
sarl
mov
daa
test
pop
rorb
pushf
push
push
jl
pop
nop
ljmp
mov
movsl
push
in
add
imul
cmp
fnstenv
adc
or
les
cmpsl
inc
mov
push
or
sti
xchg
jecxz
cwtl
jb
ret
mov
or
mov
sub
sbb
mov
or
cmp
out
add
xchg
dec
dec
jmp
pop
je
and
ficompl
idiv
xor
cs
cmp
sbb
fwait
stc
jmp
jns
popa
ja
mul
and
rcrl
das
es
dec
mov
mov
add
dec
loop
loopne
aas
les
xchg
popf
and
movd
stos
and
add
bound
cmp
jae
pop
insl
mov
fbld
fcomps
dec
dec
push
pushf
in
sub
sbb
xchg
daa
cmpsl
dec
lock
cmpsb
and
or
sub
pop
loopne
cmp
sbb
mov
xchg
into
pop
int
hlt
push
in
mov
cmp
pop
scas
test
aas
sti
into
mov
pop
xor
or
xlat
fadd
stc
xor
jl
ss
push
in
aaa
dec
pop
pop
ret
sbb
pop
leave
mov
jno
dec
mul
mov
push
xchg
add
sub
mov
push
cltd
adc
inc
jmp
jbe
push
mov
adc
jne
into
xor
popa
out
push
iret
add
jae
jecxz
mov
adc
push
sub
fldl
xchg
push
push
sahf
data16
nop
add
rcrb
shl
rcrb
jne
add
xchg
and
xlat
jo
jle
or
cli
imul
xchg
inc
stc
pop
push
push
dec
ret
jmp
mov
pop
jmp
xchg
xchg
shlb
and
add
mov
rcrb
loopne
push
sbb
push
outsb
aam
cmpsl
ljmp
repz
jmp
and
xor
addr16
lret
lock
clc
pop
call
adc
or
xor
cmpsb
out
inc
pop
cmp
movsb
stos
movsb
mov
mov
cmc
in
xor
pop
adc
movsl
mov
in
mov
pop
popfw
jg
jmp
push
incb
push
out
xchg
sbb
or
mov
addb
imul
push
mov
test
xchg
xchg
and
fiaddl
dec
add
pop
mov
or
divb
test
leave
subl
mov
int
sbb
hlt
inc
adc
cli
cmp
jne
cs
inc
mov
int3
inc
in
out
aas
cltd
mov
mov
xor
ds
inc
or
jno
jmp
rcrl
ss
aas
push
push
dec
fdivrl
cmp
repz
push
in
aas
je
jb
out
fcomip
jae
incb
out
ss
in
sbb
jmp
sbb
div
push
testl
stos
lods
pusha
lock
mov
scas
in
pop
in
lds
xor
sbb
bound
jnp
jle
pop
cwtl
insl
aam
jno
pop
lahf
loopne
push
aad
pop
sbb
mov
jl
mov
jmp
xor
lods
jns
nop
inc
xchg
dec
jne
sbb
cmpsb
inc
sbb
push
sub
jge
repz
out
mov
loope
iret
sub
and
cs
fisttps
or
outsb
lret
xor
pop
nop
arpl
mov
into
mov
jnp
loop
inc
jmp
scas
xchg
push
push
jnp
sti
test
scas
mov
cmpsb
test
std
in
pop
andps
adc
int3
popf
daa
mov
jbe
xchg
jge
xchg
mov
pop
fisubl
mov
cltd
cltd
and
add
imul
int
or
inc
ljmp
lods
in
popa
shl
ds
mov
fmuls
add
stos
addl
iret
and
dec
out
or
test
pop
dec
fwait
adc
cmc
in
xchg
outsb
mov
test
fwait
dec
pushl
push
mov
pop
shlb
popa
pop
sbb
fcmovne
mov
xor
aam
adc
subl
xor
adc
test
lsl
cmp
dec
aas
rcl
out
testb
mov
test
pop
mov
mov
cli
aaa
fdivl
test
dec
dec
mov
jle
and
xor
jg
push
call
mov
push
adc
mov
mov
lret
mov
inc
stos
sbb
mul
dec
dec
imul
cmp
dec
shlb
mov
sbb
jge
outsl
icebp
out
mov
rorl
aas
mov
arpl
das
enter
les
cmc
push
push
pushf
mov
jo
mov
mov
test
xchg
arpl
leave
clc
pop
je
call
hlt
mov
mov
inc
adc
jle
aam
push
lds
mov
sbb
push
xchg
push
sbb
das
dec
mov
fsubl
and
scas
inc
nop
pop
insb
cmp
mov
lret
add
mov
jno
enter
or
les
push
lods
pop
int3
jg
rclb
in
or
arpl
pop
ja
push
xor
sbb
stos
jecxz
movsb
sahf
das
into
and
sub
lret
jne
scas
sbb
cmpsb
pop
shrl
and
xor
gs
adc
pop
fsubrl
lock
stos
fwait
divb
daa
aaa
cmp
sub
lea
push
lcall
adc
pop
mov
ret
xor
das
dec
rorb
xor
sti
mov
dec
mov
pop
xor
xor
rcll
aas
push
loope
sahf
fisubs
mov
call
cmpps
or
or
pushf
xor
data16
leave
push
scas
sub
pop
jmp
imul
and
add
xchg
jmp
jle
add
pop
fidivrs
lahf
sub
dec
sub
xchg
cmpsl
fisubl
cmp
gs
pop
sub
mov
xor
xor
aad
push
jns
adc
xchg
ficoms
popa
mov
pop
jl
push
cwtl
sbb
pop
pusha
int3
xchg
jnp
std
mov
fstpl
sub
jmp
adc
jb
in
out
into
mov
repnz
and
jmp
mov
or
sarb
push
sub
mov
out
mov
jmp
mov
cmp
mov
inc
or
or
mov
mov
cmp
test
outsl
xor
jmp
lods
sub
mov
cmp
sti
mov
sub
sti
cwtl
pusha
dec
or
insb
addr16
mov
out
movl
and
fcompl
xlat
or
lret
out
or
jge
pop
psubd
cmp
lret
mov
je
daa
ja
push
je
js
aas
jbe
pop
add
in
int
cmp
jns
cwtl
sbb
faddl
xor
xchg
bound
cld
xor
movsb
jne
mov
mov
dec
das
mov
inc
inc
cmp
les
push
scas
lret
jl
mov
dec
jl
adc
push
ljmp
leave
xchg
adc
les
loopne
cmp
push
mov
imul
xor
lahf
pop
jno
jno
pop
hlt
in
outsl
mov
pusha
pop
or
jecxz
stos
cmp
cli
enter
pop
push
jae
push
das
in
mov
out
sarb
ror
inc
mov
popa
jnp
addr16
insl
dec
push
shlb
pop
int
out
in
xorb
shlb
mov
loop
ret
addr16
jo
or
or
cmp
sti
lods
lods
ja
add
and
mov
pop
dec
movsl
adc
xor
mov
mov
add
es
aad
bound
sbb
mov
dec
mov
dec
ss
add
dec
lahf
ljmp
dec
push
jne
cmp
inc
ss
scas
mov
inc
xchg
mov
xchg
mov
test
push
pop
dec
aam
lahf
fisubrl
and
and
lds
lret
data16
mov
andl
sub
pop
cli
addr16
in
loopne
push
add
nop
jb
dec
mov
mov
mov
sbb
adc
test
mov
test
push
jle
sahf
out
pop
xchg
and
inc
sub
stos
push
xor
das
cmpsb
push
jmp
ljmp
jge
pop
stc
insl
test
push
mov
xchg
loopne
sub
jae
cmp
into
pop
movsb
jno
sbb
jmp
push
push
insb
ret
jne
les
jecxz
add
std
or
adc
sbb
xchg
pop
mov
push
fucomi
ljmp
xchg
jge
bound
les
mov
mov
mov
jo
lock
cmpsb
xchg
add
fldt
out
or
jo
xchg
or
pop
push
push
mov
add
pop
lods
xor
inc
xlat
and
jg
ss
and
andl
pop
lret
insl
lahf
cmp
cmpsb
adc
stos
inc
xchg
and
jge
sbb
test
dec
add
push
mov
in
pusha
rol
jo
dec
cwtl
movsb
xchg
out
testb
lret
roll
dec
push
fstpl
sbbl
jge
mov
inc
pop
mov
lret
and
imul
pop
cmpsl
xchg
ja
xlat
add
aas
xor
ds
jl
xor
aaa
cmp
enter
movsb
or
cwtl
test
xor
mov
in
stos
add
ja
xchg
int
insb
pop
sub
bound
call
push
mov
sub
sbb
dec
or
sub
fiadds
push
adcl
mov
in
lcall
cmpsl
bound
inc
mov
push
mov
and
outsl
mov
pop
mov
scas
or
lods
cmpsb
add
fstpl
movsl
pop
jb
sub
and
mov
xchg
into
dec
xor
sbb
sub
nop
xor
stos
pushaw
fadd
or
mov
xchg
mov
cmp
push
adc
and
sub
jecxz
flds
push
mov
clc
add
fldt
mov
std
jg
and
pop
cmc
cld
ss
mov
mov
xor
xor
pop
sub
rolb
subb
adc
pop
fsts
testl
jbe
dec
jle
jle
int
lock
cs
mov
ret
add
call
push
test
xor
pushw
adcl
repz
xor
cmc
ja
sub
cmpl
fisttpll
jmp
out
sub
add
inc
ss
sub
je
arpl
and
gs
bound
das
mov
mov
neg
loope
bound
dec
cmp
xor
mov
mov
int
mov
aaa
andl
cli
adc
inc
inc
mov
loop
xor
shl
rorb
dec
test
lds
das
inc
repnz
jo
addr16
icebp
fsubl
out
mov
mov
add
inc
sarb
dec
loop
jl
sub
pop
lods
sbb
in
pop
cmp
mov
push
dec
push
loope
xor
sti
mov
outsl
inc
dec
adc
enter
sahf
sub
mov
inc
cmpsl
fwait
mov
jnp
andl
pop
lds
jne
jmp
xchg
aam
jo
or
push
in
imul
subb
dec
aas
push
subl
sub
adc
xchg
xor
sub
aaa
dec
push
sub
xchg
xor
stos
cli
stos
dec
xchg
daa
mov
lea
es
dec
jbe
add
cmp
fimuls
hlt
pop
push
add
negb
out
shll
or
cltd
and
dec
test
push
adc
cmp
push
xchg
insb
inc
je
jne
pushf
popf
sbb
lods
mov
push
cltd
dec
xor
cmp
dec
mov
sbb
mov
cmpsl
xchg
dec
cmp
jbe
jmp
out
test
pop
push
xchg
mov
inc
xchg
or
mov
push
adc
or
or
adc
outsl
xchg
mov
sarb
mov
push
fcompl
and
xchg
in
mov
cmc
jmp
out
inc
std
dec
push
fildll
dec
xchg
sub
subl
fiadds
fdivr
inc
sbb
les
xor
jmp
cs
adc
push
push
add
or
movsl
je
cmpsb
xchg
or
imul
int3
sub
imul
bound
xor
push
fwait
test
test
jnp
iret
testb
notl
jns
out
xlat
aad
fs
fs
out
fisttpl
inc
mov
loopne
dec
inc
das
sbb
movsl
stc
and
mov
and
add
cmp
xor
and
aam
repz
in
les
mov
outsb
xchg
and
outsl
jae
xor
pop
sub
adc
sub
inc
xor
sbb
std
dec
movsb
add
shll
and
xor
cmp
xchg
lcall
mov
test
pop
fisttpll
mov
je
arpl
pushf
repz
lods
pop
cmp
and
addl
adc
adc
or
dec
fsubrp
jnp
movb
adc
mov
cli
sub
mov
std
sub
aaa
xchg
imul
jae
out
ret
jo
in
xlat
scas
call
push
jb
daa
pop
mov
sti
and
and
call
inc
mov
mov
in
add
movsl
stc
mov
lea
mov
ss
jns
push
xchg
shrl
mulb
cmpsb
movsb
add
xor
dec
clc
in
and
push
sbb
xor
sbb
movsl
sub
pop
add
repnz
mov
or
mov
xor
bnd
push
jb
and
aas
mov
movsb
push
push
ud0
inc
xchg
jp
push
dec
mov
dec
sub
cmp
pushf
insb
mov
nop
scas
pop
sub
repz
adc
cmpsb
mov
xor
mov
xchg
lea
rolb
xchg
xor
jae
jno
mov
test
lret
sub
cwtl
loop
ljmp
mov
mov
cmp
xor
sarb
rorl
cmp
jl
jae,pt
and
dec
std
sbb
add
fildll
es
xchg
inc
or
adc
movsb
push
ljmp
repz
in
pop
xchg
mov
fs
push
iret
inc
xchg
adc
stos
movsl
mov
std
jbe
xchg
or
aaa
add
mov
shlb
add
mov
add
rorl
sub
and
and
sbb
cwtl
rorl
jmp
pop
pusha
jno
popa
shll
push
mov
ret
gs
fwait
hlt
cmp
movsl
inc
pusha
fucomp
xchg
cmp
fwait
mov
movsl
mov
je
ds
fistpll
cmp
cli
cmp
dec
pushf
into
in
fnsave
push
mov
mov
fldt
daa
fs
push
jne
mov
in
andps
addr16
xor
out
in
add
mov
outsl
jecxz
loopne
jl
bound
stos
fcmove
ret
sbb
es
movsb
iret
loop
xchg
and
enter
stos
dec
xor
mov
or
in
pop
sbb
andb
jge
aas
xchg
add
dec
das
rcll
sub
jae
clc
mov
mov
dec
sti
mov
pop
push
mov
shlb
pop
sub
jno
mov
std
mov
clc
mov
jl
dec
jae
jge
fisubs
cltd
daa
mov
mov
xchg
loop
outsb
addr16
adc
pop
and
mov
jle
pop
pop
cmp
mov
cltd
pop
imul
fildll
nop
popa
lds
jecxz
xor
push
ljmp
cwtl
icebp
adc
mov
xlat
lahf
mov
push
xchg
dec
push
leave
mov
lds
inc
push
pop
cs
mov
pop
xchg
mov
xor
arpl
inc
ss
or
dec
mov
xlat
cli
mulb
ret
dec
cwtl
idivb
mov
or
fs
ja
xor
xor
and
push
sbb
sbb
push
add
xorl
xor
sti
dec
xchg
push
cmpsb
xchg
lea
or
jle
mov
push
outsb
mov
jp
lret
mov
rcr
mov
lcall
outsl
or
adc
push
jae
inc
aam
fs
sub
lods
std
pop
push
push
xlat
xchg
je
jp
push
data16
ret
movsb
stos
test
cmp
ds
clc
mov
and
mov
pop
fdivrl
or
jae
sarl
adcb
mov
outsb
mov
cmp
mov
loop
push
push
add
or
or
cmp
clc
xchg
popf
in
inc
mov
xchg
data16
pop
push
push
test
scas
sti
jo
shlb
mov
insl
push
jp
xor
fucomip
xor
les
test
fmull
xchg
mov
negb
addr16
xchg
outsl
mov
popa
dec
lret
push
addr16
mov
and
outsl
out
loope
dec
xor
xor
shrb
lahf
mov
push
push
gs
pop
fidivl
mov
aas
cmp
or
loopne
int
repz
push
movl
mov
xor
gs
repnz
xchg
sbb
jae
jo
adc
xchg
inc
pop
ljmp
shrl
scas
cmp
mov
jecxz,pn
xor
nop
add
lahf
cmp
push
mov
ret
add
sub
and
or
adc
das
sbb
push
mov
or
ds
nop
int
insl
pop
or
test
mov
inc
test
fwait
mov
inc
insb
sbb
push
imul
cmc
jecxz
push
and
pop
movsl
out
or
lods
inc
cmovb
mov
inc
outsb
xchg
outsl
lock
aaa
xchg
repz
not
testl
add
dec
into
pushf
pop
or
movsb
adc
popa
lds
xor
aaa
je
call
stos
sbb
inc
pop
lock
cmp
test
movsl
stc
push
mov
imul
mov
mov
xor
cs
or
jl
fucom
xlat
or
dec
push
pop
mov
sbb
xchg
mov
adc
stos
and
push
mov
push
pop
and
lret
jecxz
mov
or
data16
sti
mov
mulb
mov
mov
aaa
pmulhw
les
mov
int
dec
shll
jae
cmpsl
pop
push
inc
cmpsl
mov
adc
out
loopne
mov
lods
rcrl
insb
ffree
cs
mov
cmc
cmp
cli
cwtl
or
jae
sub
mov
mov
mov
jmp
mul
cld
stos
mov
lret
popa
push
xchg
and
xor
dec
inc
lods
xor
dec
adc
sbb
mov
fucom
sub
in
mov
negb
pop
xchg
call
cmc
mov
cmp
push
adc
and
lret
push
adcb
stos
loopne
jne
std
out
fsubrl
push
xorb
mov
mov
arpl
push
dec
add
pop
sub
pop
inc
out
and
imul
aam
jl
arpl
leave
inc
test
lea
mov
add
xor
push
pop
gs
out
cmp
pop
add
iret
xlat
jge
mov
arpl
cmpsl
pop
sub
mov
cmpsb
sti
inc
ljmp
mov
cmpsl
fimull
shrl
sbb
pop
int3
pusha
pop
and
shl
mov
daa
cmpsl
je
andl
sub
and
jg
dec
jmp
dec
insb
cmp
inc
dec
sub
fnsave
mov
pop
cld
loop
ret
iret
adc
jle
and
sub
sbb
lds
jb
popf
sbb
je
sub
aaa
mov
xchg
stos
loop
js
clc
jbe
jne
aad
mov
ret
filds
jecxz
sub
cli
lahf
lock
fistl
shlb
mov
mov
mov
inc
popa
scas
ja
out
das
xor
jbe
sub
pop
pop
in
fmul
pop
ja
xchg
push
subl
shrb
mov
cmp
mov
popf
push
sub
fcoms
mov
mov
push
push
push
push
push
sub
cmp
cld
shlb
imul
or
fldt
jae
pop
jl
aam
stos
test
xchg
sahf
in
mov
or
jl
outsl
out
jmp
mov
negb
movsl
testl
orb
or
lds
mov
outsl
inc
sahf
jo
scas
dec
mov
sahf
in
leave
ret
repz
enter
cltd
mov
je
repnz
push
idivl
repz
xchg
imul
or
jae
enter
jge
jns
ja
jo
pop
jnp
loope
cmp
fstl
sbb
ss
mov
int3
stos
sbb
or
pusha
xchg
cmp
jp
mov
sarb
mov
adc
cltd
dec
bound
dec
lods
mov
mov
sbb
scas
outsl
rcrb
popf
popa
in
add
sub
sub
sub
arpl
addr16
mov
adc
adc
inc
fbld
push
andl
add
push
or
jo
adc
xor
cmpl
outsl
sub
xorl
mov
pop
push
adc
jns
or
xor
cmpl
loopne
pop
fwait
in
mov
lock
pop
insl
out
fcomps
inc
adc
add
inc
jmp
pop
pop
movsl
xor
or
mov
mov
pop
fildll
lret
mov
mov
mov
pop
clc
test
stos
fiaddl
pop
push
mov
das
fwait
mov
adc
jecxz
lret
jb
pop
sub
xor
les
pop
jnp
cmp
mov
test
dec
fwait
hlt
aaa
dec
les
sbb
push
mov
lcall
outsl
adc
cmp
jns
mov
ret
jae
shl
or
jg
push
mov
cs
push
repz
mov
jnp
dec
jae
orl
and
xchg
xchg
mov
je
dec
pop
inc
daa
sti
jae
inc
lods
repnz
pop
jns
scas
add
mov
rolb
lahf
sbb
repnz
ficompl
cmp
sarb
push
mov
imul
out
aam
sbb
push
shll
sub
test
sbb
add
fwait
sbb
fnstsw
outsl
inc
cmp
shlb
add
adc
sbb
lods
cmp
mov
push
cmc
adc
or
push
sub
fsubrs
sbb
iret
gs
mov
popa
cwtl
mov
mov
lcall
mov
rolb
iret
dec
popa
sbb
and
out
pop
dec
xchg
nop
and
ficomps
push
push
mov
fs
xchg
dec
push
movsb
and
std
sbb
movsl
mov
inc
mov
mov
sbb
fwait
icebp
xchg
and
idiv
aad
mov
add
movsl
inc
daa
gs
stos
pop
mov
js
bound
cmp
fidivrl
lret
out
je
dec
jge
sbb
call
insb
imul
sahf
jecxz
jbe
imul
xor
jl
push
sub
lds
jge
pop
outsl
fs
repz
mov
cmp
jae
push
addr16
icebp
pop
divl
aas
cmc
lcall
mov
mov
das
xchg
stos
push
inc
xchg
enter
cltd
test
sub
test
inc
push
insb
addb
ja
lds
es
repnz
or
pop
repnz
sahf
cs
push
mov
push
sub
mov
xchg
loope
das
pop
xor
aad
cmp
mov
lods
shr
rcl
out
lahf
adc
inc
xchg
sub
mov
lock
sbb
data16
cmpl
add
fsubrs
leave
sbb
mov
push
sub
mov
mov
push
push
fsubrl
xor
cmpsl
inc
pop
insl
pop
neg
mov
mov
push
cmp
pop
sti
ficomps
jmp
xchg
lret
int3
dec
daa
ret
push
sbb
test
fs
inc
inc
std
cs
xchg
and
pop
daa
push
addl
enter
cmp
jne
shll
bound
push
push
push
lret
testl
addr16
and
inc
lock
push
sbb
cmp
cmpsl
push
mov
jne
cmp
movsb
int
or
js
add
ror
xchg
out
push
out
jge
loop
cltd
in
ljmp
les
int3
aaa
cmpb
js
sbbb
popa
mov
ds
mov
rcll
cli
int
sarl
adc
ret
loope
inc
out
test
subl
or
lret
jne
je
dec
cmp
ds
mov
fists
inc
dec
push
sti
inc
movsb
flds
das
clc
syscall
cmp
pop
push
add
sub
mov
pop
lea
cmp
outsl
mov
adc
pop
es
sbb
ljmp
dec
add
dec
je
out
jmp
and
sbb
xor
lock
pop
mov
cwtl
adc
adc
jmp
jmp
mov
cmc
pop
rcll
push
pusha
mov
mov
stc
mov
mov
movsl
pop
sub
push
mov
gs
outsb
inc
addr16
jno
ds
stc
das
ficomps
ljmp
int3
ret
mov
inc
lods
js
jbe
sub
mov
out
mov
dec
mov
rcr
popf
xchg
dec
in
mov
jne
cltd
lret
push
dec
popf
dec
call
mov
mov
nop
test
mov
push
adc
mov
mov
sbb
push
divl
mov
mov
push
ret
pop
or
push
movsb
int
mov
sub
mov
shrl
mov
lret
js
jl
sarb
dec
mov
lcall
addr16
adc
cmp
xor
or
mov
and
pop
adc
lcall
ret
test
xchg
lahf
mov
jae
fdivp
std
lock
xchg
out
inc
subl
int
rcrl
loopne
cmc
mov
push
sub
mov
insl
mov
pop
mov
ret
pushf
mov
in
sbb
mov
lock
stos
push
lods
stos
notl
push
or
xchg
push
push
and
jb
imul
rcrl
hlt
out
fstps
aad
loopne
fwait
into
daa
or
dec
xchg
pop
mov
sbb
fcmovnb
or
push
fcmovnu
enter
insl
aas
mov
iret
jb
or
mov
xor
or
mov
arpl
push
dec
cmp
pop
add
fwait
jge
mov
icebp
sbb
jmp
les
popa
push
pop
add
or
jecxz
jnp
mov
je
mov
mov
add
orl
mov
lods
xor
ficomps
sarl
insl
xchg
into
jmp
adc
jecxz
cwtl
xor
test
mov
enter
popl
pop
push
arpl
sub
xor
push
lret
ss
sahf
jo
clc
cmpsl
je
jne
jl
lcall
push
push
jle
adc
mov
das
fsubr
sub
mov
loopne
mov
adc
cli
shrb
fmull
xor
lahf
and
call
dec
clc
int3
sbb
push
cmp
ret
int3
xlat
loope
sub
cmpsl
push
mov
bound
jnp
ret
pop
xchg
ss
add
inc
xchg
scas
inc
movsl
adc
fstps
push
ret
mov
fsubrl
leave
add
in
push
daa
push
cmp
or
stc
xchg
test
or
clc
mov
repnz
adc
dec
scas
mov
scas
cmp
iret
dec
rep
pop
pop
imul
test
mov
jecxz
popa
push
je
mov
dec
add
neg
pop
in
leave
add
lcall
out
pop
xchg
shl
push
xchg
nop
ret
in
adc
ljmp
dec
push
or
pop
mov
enter
movsl
pusha
lret
imul
stos
sub
out
scas
sub
xchg
or
adc
mov
test
mov
int
jl
add
fistpll
int3
xchg
xchg
xor
and
push
das
or
inc
push
inc
inc
dec
and
dec
mov
push
pop
popa
xchg
push
gs
inc
out
fdivrs
cld
push
mov
in
in
mov
mov
xchg
adc
xor
lcall
jg
or
and
rcll
sbbb
fs
sbb
lods
push
int
and
sub
test
dec
or
arpl
mov
mov
ret
out
sahf
aam
dec
fdiv
dec
pop
gs
pop
adc
imul
lock
movsb
and
pop
pusha
popf
jae
stos
out
push
sbb
push
insb
mov
pop
repz
sub
push
mov
inc
sar
mov
cmp
push
xchg
stos
pop
scas
lock
movsb
push
jmp
jo
dec
sub
ja
mov
fistpll
sub
pop
cwtl
and
into
iret
pop
lcall
fidivrs
push
pusha
lods
mov
shll
sub
mov
jmp
pop
insl
fucomip
dec
sti
dec
cld
sub
mov
js
jne
adc
or
jb
sbb
outsb
jle
les
repnz
and
in
cmp
xchg
adc
repnz
sub
pop
pop
xor
lods
in
mov
mov
pusha
push
mov
scas
xchg
das
xchg
loop
out
push
out
ljmp
js
pushf
inc
push
push
pop
lret
pop
pop
add
iret
xchg
repz
mov
push
call
cmpsb
imul
mov
cmp
pop
jecxz
lret
cmpsb
xor
jo
xchg
or
cmpl
or
call
lret
cltd
pop
push
xchg
or
loope
call
push
dec
lahf
or
ja
in
mov
imul
out
xor
xchg
cmp
xchg
cmp
mov
adc
aaa
lds
pop
repz
jb
cmp
mov
cmc
ss
mov
adc
ret
fs
push
icebp
scas
cs
push
addr16
iret
fstpt
outsl
push
jl
jbe
sbb
sbb
jmp
jbe
and
push
shrl
add
lods
jnp
loope
sub
xlat
fiadds
and
jne
and
mov
inc
fldl
push
loope
mov
or
push
loope
lret
xorl
mov
decb
cltd
data16
test
orb
movb
lods
cltd
xor
mov
xlat
push
arpl
sbb
repnz
cltd
cld
test
mov
adc
push
pop
dec
adc
iret
cmpsl
dec
jns
mov
lcall
mov
adc
cmpsb
mov
dec
cmp
xor
mov
loop
pushf
push
sub
xor
add
fiadds
addb
xor
test
cli
adc
inc
fbld
pop
fs
pop
or
dec
jge
ljmp
push
jle
shll
push
mov
out
adcb
jno
mov
lods
popa
clc
loop
popf
sbb
imul
bound
popf
sub
divb
adc
xor
scas
fnstenv
daa
sub
xchg
mov
inc
xchg
flds
sbb
shl
inc
nop
mov
fs
data16
cld
fiaddl
inc
jle
push
lods
rorl
frstor
lea
add
xchg
jmp
cltd
fsincos
sbb
xor
lods
nop
aad
sub
in
or
mov
mov
fistps
addr16
add
push
adc
pop
ret
movsb
clc
dec
lret
add
jnp
mulb
mov
jp
stc
sbb
mov
mov
cmp
or
pop
aam
in
call
out
jge
mov
ds
shrb
dec
jmp
push
push
xor
in
dec
or
cmp
dec
jl
int3
inc
in
scas
scas
mov
inc
hlt
nop
inc
sar
je
fistl
or
ja
imulb
ds
jnp
je
xlat
cmp
jmp
add
fwait
cmp
inc
mov
mov
pop
bound
nop
in
dec
test
lock
jecxz
test
mov
hlt
lods
cli
scas
es
ds
fdivrs
addb
jge
ret
cmpsb
sub
in
mov
dec
lods
mov
test
add
cmp
test
push
or
shll
addr16
hlt
adc
insl
mov
insl
inc
add
pop
and
pop
mov
and
xchg
mov
cmp
ret
iret
cs
mov
int3
xor
subl
fdivrl
test
das
ss
sub
xor
push
dec
xchg
inc
jg
bound
mov
out
xchg
sbb
jle
cmp
leave
cmc
repnz
or
sub
push
cwtl
es
cmp
cmpb
rclb
push
sub
xlat
arpl
jl
dec
xchg
sub
call
rcrb
inc
mov
pop
addl
mov
fisubrs
adc
ror
ljmp
repnz
xor
jbe
data16
xchg
shrl
or
jns
pop
cmpl
xor
cs
xchg
xchg
add
subl
mov
jmp
sbb
stos
xor
lods
daa
lcall
mulb
jno
mov
jnp
xchg
and
fwait
repnz
sbbl
or
adc
adc
dec
and
pop
inc
xchg
loope,pt
ss
stos
push
xor
mov
sbb
and
mov
jp
sti
fidivl
out
pop
into
or
cwtl
imul
mov
add
mov
xchg
sar
jno
pop
test
std
outsl
pop
push
push
data16
and
pop
insb
cmp
adc
jae
xchg
mov
mov
pop
mov
mov
out
clc
mov
cmp
in
mov
je
jb
jmp
insb
inc
push
mov
out
pusha
push
iret
out
xchg
ja
jecxz
outsb
sub
push
addr16
mov
cmp
mov
ja
rep
lcall
data16
sub
mov
lods
dec
mov
jmp
mov
xchg
test
fs
jecxz
mov
loope
xor
pop
call
pusha
add
pop
in
and
imul
in
mov
scas
sbbl
std
cmp
push
xchg
adc
cmp
loope
jnp
call
in
lret
fucomip
rolb
mov
xchg
inc
mov
gs
enter
adc
cmpsl
mov
ret
xor
rolb
ja
dec
mov
add
pop
mov
push
dec
imulb
std
sahf
icebp
adc
sbb
xchg
push
ja
dec
test
dec
fildl
pop
scas
loopne
jb
cmp
pop
push
cld
xor
xchg
cs
add
dec
lds
imul
jae
or
loope
inc
outsb
push
lods
jl
imul
push
push
sbb
add
push
pusha
out
mov
mov
aam
mov
xchg
inc
xchg
cmp
adc
dec
ficoml
in
repnz
pushf
or
div
stc
mov
adc
sub
adc
jae
sti
in
notb
lret
xchg
dec
lret
in
fldt
mov
and
in
inc
js
mov
jo
incl
adc
outsl
mov
scas
push
scas
sti
out
jecxz
rorb
outsl
lods
sbb
mov
fsubs
jle
aas
cmp
rclb
sti
adc
scas
repnz
pop
call
stc
fs
fwait
push
mov
pop
mov
mov
pop
mov
push
in
scas
add
lcall
or
ret
mov
loop
sub
jge
lods
pop
lods
loopne
xor
xchg
jbe
pushf
sub
mov
jl
loope
cmp
pmaxsw
aaa
dec
sbb
mov
jmp
outsb
cmpb
and
rcrb
out
sub
or
cltd
sbb
xchg
lahf
mov
adc
inc
push
pop
mov
insl
subl
test
adc
inc
jb
dec
mov
aaa
in
pop
in
cmp
push
fldcw
in
cmpl
out
pop
mov
push
out
mov
pop
sti
mov
imul
iret
stos
jg
sbb
mov
push
push
cmpsl
mov
xchg
jbe
lods
and
push
xrelease
stos
xlat
mov
xor
das
mov
lea
push
or
mov
or
mov
shrl
ret
ret
test
mov
pop
test
inc
popf
out
or
clc
je
jg
cmp
cmp
mov
mov
out
jge
cmp
inc
fidivs
jecxz
sub
or
mov
sarl
out
insb
fucomi
mov
loop
cmpsb
fwait
inc
xchg
mov
and
xchg
in
adc
cmpsb
popl
pop
pusha
addb
or
pusha
mov
adc
loop
data16
jl
outsl
in
cmp
xchg
adc
repz
jbe
jbe
gs
mov
jbe
cmp
or
shlb
mov
xor
dec
pusha
xor
insb
mov
fwait
jecxz
mov
lock
sbb
repz
rcl
xchg
sub
icebp
or
andl
mov
popf
sub
sub
aad
adc
sti
loope
push
mov
dec
fmulp
popf
xor
aam
mov
pop
mov
sub
mov
pop
stos
xchg
mov
cmp
jnp
xchg
inc
lahf
sbb
xchg
mov
faddl
stos
pop
dec
inc
xchg
push
mov
cmp
imul
popa
imul
or
out
xor
enter
xor
adc
lahf
pushf
xchg
fs
jb
jo,pn
es
addr16
sahf
mov
push
pop
add
aad
xchg
cmc
daa
nop
lds
mov
xorb
test
ret
sarl
shlb
and
into
out
mov
jp
jp
jmp
sub
js
outsl
je
or
sub
adc
sub
mov
push
dec
lods
mov
int
add
lods
fidivrl
lret
mov
in
sub
mov
loopne
xchg
cmp
jns
xchg
fcomi
sbb
leave
dec
loope
jb
sub
mov
shl
dec
xchg
sub
xor
ljmp
or
stc
hlt
daa
cmpl
cmp
mov
push
sub
mov
and
adc
mov
cmp
ja
call
xlat
out
daa
inc
gs
neg
mov
lock
outsl
outsl
inc
vpunpckhdq
mov
push
xor
stos
cmp
in
testb
adc
pop
add
in
fnstenv
cltd
gs
cwtl
sti
ljmp
add
cltd
pop
jle
aad
cmp
mov
rclb
push
jnp
loope
xlat
out
repnz
idivl
xchg
lret
cmpsl
lods
cltd
add
loop
xchg
ret
sbb
rorl
push
mov
mov
mov
pop
lea
mov
repz
rcrb
pop
xor
xor
add
loopne
mov
and
pop
push
cmp
mov
jl
xchg
popa
cmpb
mov
jg
jae
add
sahf
dec
roll
mov
iret
bound
imul
clc
jbe
std
cmp
gs
fistps
jle
imul
adc
data16
push
stos
xor
movsl
or
xchg
sbb
xchg
sub
lea
negb
mov
into
popf
pusha
sbb
lret
add
cmp
adc
sbb
mov
xor
lea
imul
loopne
shl
ds
pop
fs
mov
loop
push
add
xchg
mov
out
pop
imul
dec
stc
out
outsb
cmp
subl
enter
pop
cmp
cmc
xchg
mov
cmp
aad
es
inc
movsl
call
inc
jbe
stos
in
dec
cltd
xchg
adcb
cltd
sub
push
jecxz
aam
xchg
pop
fstps
cltd
popf
fmuls
shll
sbb
or
cs
hlt
in
add
cmp
movsb
lret
pop
pop
ret
cmp
in
add
xchg
loopne
out
xor
bound
das
dec
pop
add
into
jp
loope
daa
lret
lret
push
or
es
mov
mov
psrld
movsb
out
movsl
pop
dec
sarl
mov
jl
inc
bound
aam
pop
mov
push
fucomip
shr
pop
rorl
cmp
sub
inc
icebp
mov
roll
stc
dec
push
cmp
pop
out
jae
cmpsl
inc
daa
fs
mov
cs
sub
sbb
inc
lret
pop
rcrl
jno
cmc
adc
push
in
repz
jl
sbb
mov
push
add
rcr
and
push
into
insb
stos
test
cmp
and
push
int3
cs
repnz
pop
in
pop
lds
push
adcb
out
push
dec
or
imul
incb
cmp
adc
daa
push
push
mov
lock
xchg
sbb
ss
sub
in
sbb
push
mov
or
fdiv
sarl
or
jl
cs
dec
and
iret
lret
out
lahf
inc
imul
popl
inc
fbstp
or
iret
js
andb
dec
mov
add
xchg
hlt
addr16
push
stos
es
sti
mov
jle
aaa
aad
cmpsl
mov
inc
decb
xlat
jo
mov
rclb
fisubs
and
jbe
jno
jge
lods
aam
je
popl
cs
mov
push
and
mov
xchg
test
xchg
loopne
jno
stc
mov
xchg
push
sbb
jg
movsl
xchg
lock
enter
pop
stc
add
ds
or
or
das
or
lods
stos
xchg
cwtl
cmp
or
pop
dec
aaa
cld
popa
dec
pop
popa
setge
inc
lea
sarb
xchg
push
xor
cwtl
add
and
lds
lahf
mov
push
push
daa
push
es
out
in
hlt
daa
inc
sub
xchg
inc
mov
rorl
popa
mov
mov
fildl
pop
pop
in
addr16
andl
jp
andb
insb
xchg
sbb
or
pop
cltd
jbe
repnz
pop
std
add
push
dec
jle
xlat
lods
out
xor
mov
outsl
sub
mov
cmp
cmp
adc
push
mov
and
test
adc
jnp
sub
fwait
out
cli
xchg
inc
cli
jle
pusha
imul
aas
mov
jmp
dec
and
je
push
or
adc
mov
mov
dec
mov
xchg
mov
and
lret
gs
test
scas
in
mov
daa
fs
bound
cmp
xchg
ss
insb
sarl
cmp
xor
xchg
jmp
ficomps
or
cmp
scas
movsb
mov
push
xchg
cmpl
sbb
xchg
and
pop
add
pop
jmp
ljmp
mov
pushf
arpl
dec
rcl
xchg
xchg
mov
xlat
push
add
xchg
in
pop
pushf
pop
xchg
flds
fmull
sub
mov
add
sub
mov
push
movsl
cltd
mov
cwtl
daa
or
faddl
ljmp
and
mov
mov
or
mov
mov
pop
pop
dec
mov
jge
adc
or
arpl
outsb
mov
push
jno
mov
or
jg
mov
rcl
push
push
data16
fwait
xor
daa
cmpsl
mov
cmc
repnz
movsb
stos
cmp
loop
dec
je
ja
sub
xchg
movsl
xor
push
cmp
xor
jb
and
adc
jp
loopne
sub
add
adcl
insl
mov
pop
clc
fs
mov
push
cmpsb
sbb
movsb
mov
push
dec
pusha
sub
mov
test
xor
fs
daa
sarb
xor
adc
sbb
mov
std
push
sub
leave
subl
mov
shll
inc
cmp
add
mov
mov
into
rorl
jg
insb
jl
push
in
enter
loop
jnp
xchg
push
leave
jae
mov
shll
xor
data16
jnp
fcompl
pop
push
mov
outsl
fcmove
out
xor
scas
lds
add
jl
inc
mov
mov
push
es
fildll
ss
pusha
mov
jl
cmp
jl
push
lods
lahf
push
adc
movsl
push
mov
inc
arpl
xor
insb
and
push
dec
gs
rcll
push
sarl
cmp
cs
cmp
add
shl
cmp
add
ret
outsb
sahf
leave
sub
aad
add
adc
inc
mov
mov
dec
rcrb
sbb
rorb
jo
jnp
ds
test
or
out
dec
push
arpl
jnp
push
sbb
sub
mov
lods
sbb
and
pop
lret
xor
xor
movsl
dec
push
cld
movsl
xchg
shl
dec
scas
cli
mov
dec
fmulp
sbb
or
hlt
pop
and
and
ficoml
neg
pop
ds
push
xchg
popl
jl
cmp
and
inc
sub
das
push
jo
sub
repz
xchg
dec
push
std
add
cmp
mov
dec
dec
lods
repz
aad
push
imul
sbb
sub
inc
fists
adc
xchg
and
mov
mov
jbe
jecxz
jno
push
dec
idivb
xor
inc
cmpsb
lret
add
iret
incl
mov
mov
add
jb
xchg
jecxz
fdivrl
xchg
popa
mov
sub
mov
cmpsl
hlt
insb
fdivrs
stos
inc
jo
mov
in
mov
sub
jmp
xor
fwait
mov
push
shlb
in
das
jno
paddd
test
test
outsb
add
std
jbe
dec
dec
lcall
nop
les
sbb
jno
jmp
out
insb
test
sub
add
es
mov
js
loop
xor
cmp
subb
jbe
fisttps
sub
ja
mov
fnstenv
js
adc
or
jnp
jp
lds
repnz
dec
adc
lret
cmc
add
mov
and
cwtl
shl
push
and
push
inc
ret
outsb
sti
frstor
mov
mov
dec
stc
inc
lahf
and
add
xorl
lods
aad
push
inc
das
adc
jl
push
add
jge
jp
mov
jb
xor
xchg
sbb
out
push
outsb
fstl
sub
adc
mov
repz
cwtl
mov
add
cmp
pop
and
clc
xor
push
mov
and
push
xor
mov
call
xchg
scas
adc
adc
arpl
sbb
outsl
jl
add
xchg
push
shll
out
std
aaa
std
not
or
push
in
out
push
push
popa
fisttpl
cld
adc
jbe
insb
mov
lcall
mov
xchg
mov
mov
pop
dec
into
hlt
lods
mov
mov
sbb
pop
jbe
andb
test
in
sbb
cmp
inc
hlt
mov
adc
cmpsb
fs
stos
jecxz
or
repz
jns
and
push
cs
cmc
pop
out
xchg
push
cmp
pushl
xchg
mov
fs
lret
jns
ds
shr
insb
cmp
sub
or
in
dec
sti
sbb
pop
mov
push
sbb
and
lahf
out
stos
jp
cwtl
inc
cmp
mov
std
sbb
jecxz
dec
cld
lods
jb
and
lods
xor
imul
xor
mov
add
subb
cld
daa
push
add
or
lods
testb
outsb
mov
push
cli
aaa
add
inc
push
fwait
js
add
cmp
aaa
jno
rcrb
sub
pop
outsb
xor
xor
fistpl
mov
mov
decl
inc
cmp
sub
dec
xorl
add
xor
xor
mov
into
xor
cmp
stos
inc
shlb
push
push
mov
sbb
lock
fbld
subb
xor
pop
or
sbb
dec
xchg
sub
fisubrs
enter
fidivs
mov
xchg
into
loop
out
cmpsb
sub
in
or
movsl
mov
dec
hlt
mov
cmpsb
pop
sahf
test
cmp
fs
mov
data16
das
mov
icebp
sbb
sbb
shlb
orl
and
or
mov
xchg
fiadds
push
jo
sbb
repz
xlat
shrb
fnstsw
dec
into
add
clc
fwait
push
dec
ret
push
jns
enter
out
mov
std
mov
fsin
repz
ds
push
stc
sub
imul
push
inc
push
decb
test
xor
ljmp
adc
mov
fwait
xorl
out
mov
pop
push
gs
out
loop
jmp
push
out
jmp
and
push
lods
lods
xchg
cld
lds
loope
xchg
out
ret
stos
cmp
in
js
pop
andb
scas
loope
dec
int3
sub
pop
frstor
outsl
movsl
repz
cmpb
cmp
in
cmpsl
fsts
pop
lret
inc
mov
dec
sbb
push
adc
mov
repz
mov
and
xchg
push
adc
add
sub
cmp
pop
cmp
push
out
inc
mov
mov
cmp
cs
outsl
pop
mov
data16
xchg
sahf
gs
add
xor
xchg
cmpsl
popf
push
cmp
popf
pop
cmp
xor
mov
cltd
movl
dec
or
outsl
aad
fstps
pusha
cwtl
stc
mov
xor
cli
test
jmp
in
cwtl
test
sahf
movsl
jg
out
cmpsl
aam
ret
mov
test
xor
testl
pusha
je
xchg
cmp
cltd
jnp
cmp
imul
sbb
add
fwait
push
jg
lahf
rcl
xchg
je
adc
sahf
jp
bound
mov
xchg
outsb
add
xor
fnstenv
js
in
push
movsb
mov
loopne
jbe
stc
xchg
lret
testb
mov
nop
fildll
nop
cs
loope
call
adc
or
test
xor
xchg
roll
fstpt
pop
cwtl
adc
mov
inc
pusha
jns
out
push
xlat
mov
in
fisttpl
and
push
cmp
movsl
xchg
dec
arpl
or
sub
cli
filds
or
lock
and
inc
cmpsb
mov
push
cltd
nop
xor
enter
adc
push
jle
test
push
mov
lods
out
ljmp
int
push
cwtl
adc
mov
lock
bound
push
or
pop
or
out
xchg
mov
imul
sbbb
movsb
inc
adc
sbb
push
iret
data16
jp
sbb
lret
inc
push
sbb
jo
call
add
fisubrl
sbb
mov
jbe
outsl
imul
ss
xchg
lcall
testb
dec
into
jnp
lock
sbb
aas
ds
pop
mov
xlat
dec
cmp
mov
dec
sbb
fcoms
rorl
jge
xchg
data16
push
arpl
inc
mov
repz
in
xchg
ljmp
dec
and
push
sub
sub
push
int3
mov
jns
enter
rolb
bound
jo,pn
mov
or
xor
push
mov
push
push
test
aam
add
loop
mov
incb
mov
stos
fcomps
shrd
bound
aaa
bound
pop
pop
mov
aam
push
repnz
sar
popa
cld
and
std
xchg
lret
cmp
cltd
inc
mov
cld
cmp
jo
dec
and
shrb
mov
mov
mov
mov
inc
movsb
sbb
addl
inc
bound
fstl
testb
ret
rcl
cltd
idivl
cmc
ret
sbb
or
fnstcw
jmp
jecxz
shr
icebp
cmpsb
aaa
popf
cmc
test
out
sub
and
adc
je
mov
adc
hlt
lret
push
test
shll
out
lret
dec
sub
fisttps
test
call
pop
sbb
lahf
dec
ret
mov
out
pop
mov
popa
jne
xor
xchg
push
aaa
stos
pop
repnz
xor
jle
and
sub
jbe
cmpl
cli
addr16
in
or
adc
jg
cmp
orb
outsl
aaa
mov
lret
dec
adc
in
sub
imul
xchg
jno
add
inc
mov
inc
dec
add
jl
jle
push
dec
dec
aaa
and
enter
pop
cmp
pop
aam
andb
sbb
lea
cmp
mov
pushf
dec
push
shll
cmpb
scas
ja
test
and
fisttpll
mov
hlt
cmp
imul
lds
ljmp
xor
mov
mov
insl
js
pop
fnstenv
sbb
pop
int
mull
and
mov
lds
pusha
sub
addr16
iret
scas
sub
mul
fcoml
pop
cli
adc
dec
jnp
in
imul
imul
cmp
lret
mov
pop
sbb
orl
or
jl
dec
dec
adc
push
dec
in
mov
rcr
xor
cmp
fcmovnb
and
mov
inc
jbe
or
sub
popa
ja
sti
fisttpll
insb
or
ljmp
xor
imul
push
lds
inc
sub
outsl
dec
adc
aam
mov
mov
shlb
clc
stc
imul
repz
adc
xchg
lea
mov
decb
sub
loopne
sbb
addr16
mov
pop
pop
sub
inc
mov
or
loopne
fucom
pop
xchg
cltd
dec
popa
sbb
lods
xor
stos
mov
adc
add
xor
xor
hlt
jmp
adc
insl
lods
and
xchg
and
das
cmp
test
sub
dec
mov
loope
lcall
mov
mov
mov
dec
mov
mov
stc
and
or
sub
nop
aam
inc
popa
stos
cs
mov
push
enter
add
out
mov
outsl
test
lods
shrb
inc
data16
sarb
cmpsl
divb
dec
scas
xlat
das
jnp
lods
xchg
xor
enter
sub
js
mov
dec
das
lea
adc
and
stos
push
or
sub
cltd
push
add
cmpl
repnz
cltd
cmp
mov
push
and
outsb
lret
mov
loope
adc
shl
cwtl
xor
into
sbb
fnstcw
cmp
add
fnsave
push
inc
rdpmc
pop
sti
aad
cmp
das
shl
adc
cmp
lea
test
call
mov
cmove
fisttpll
pusha
or
les
mov
jnp
fists
dec
cs
js
dec
dec
aam
mov
iret
add
cmp
pop
dec
cli
outsl
mov
rcrb
dec
loop
or
outsl
xchg
xchg
or
adc
stc
and
xchg
inc
inc
push
mov
loopne
sahf
xchg
aad
fs
sbb
add
cld
lods
es
ja
mov
xchg
and
insl
aas
outsl
mov
and
sbb
pop
sbb
js
es
adc
mov
shrb
mov
cmp
lods
jbe
mov
dec
jecxz
and
pop
je
jbe
je
push
jns
mov
outsl
add
vmread
inc
jbe
fisubrs
mov
jmp
mov
mulb
jecxz,pt
add
push
fadds
adc
mov
out
iret
mov
inc
in
lahf
daa
add
xchg
cmp
mov
add
cs
dec
fidivl
aas
lret
pop
pop
dec
xchg
pop
mov
shl
outsb
dec
and
cmp
xor
xor
fwait
dec
sub
and
subl
dec
adcb
out
das
adc
jp
push
in
mov
fwait
pop
adc
xchg
enter
cld
insl
push
push
jae
aam
mov
loope
pop
jle
shlb
jmp
xor
ja
in
fnstsw
lock
loopne
ret
stc
std
push
sub
xchg
test
xchg
xchg
jb
dec
orb
scas
push
sub
cs
arpl
arpl
xchg
mov
mov
mov
xchg
jnp
cmpb
lds
icebp
sbb
push
mov
dec
push
push
lea
dec
xchg
push
int
sbb
jecxz
mov
mov
ret
fbld
call
and
in
push
inc
sbb
hlt
adc
cs
or
cli
pop
sub
jns
cs
ljmp
test
fidivl
jne
sbb
adc
push
data16
add
and
push
scas
sahf
xchg
dec
pop
jnp
mov
fsubrl
lods
sub
nop
sub
dec
xchg
leave
pusha
xor
dec
push
push
cwtl
out
ljmp
xor
roll
out
loope
shrl
pushf
movsl
adc
out
shrb
sbb
and
stc
pop
aas
ret
dec
adc
into
pop
pop
xor
mov
movsb
add
mov
and
xchg
mov
jecxz
ds
ljmp
inc
rcll
inc
mov
inc
aaa
adc
mov
jg
sarl
ljmp
test
cld
faddl
ja
fcomps
loope
aam
scas
aaa
inc
adc
cmp
sbb
cmp
in
lahf
lahf
in
lods
iret
xchg
hlt
and
push
dec
push
cmp
adc
stos
or
int3
add
jne
or
push
push
out
push
add
in
mov
inc
ljmp
or
lea
fadds
in
pop
fldcw
movsb
popl
add
cmpsl
test
jg
inc
aaa
jp
int3
dec
testl
mov
mov
pop
and
xchg
add
fistl
dec
loope
mov
jmp
test
push
add
dec
and
popa
in
add
ljmp
mov
outsl
dec
sbb
inc
divb
das
xor
cs
andl
xchg
pop
sbb
icebp
out
mov
push
and
dec
sub
add
dec
popa
add
stos
pop
push
sub
out
inc
jo
jecxz
fisubs
push
mov
jae
cmp
or
xor
gs
push
cmc
sub
popa
jecxz
xchg
mov
fdivrs
add
icebp
xchg
adc
add
push
es
mov
adc
jge
into
push
enterw
fnstcw
jne
xor
into
lahf
test
lahf
mov
cmpsl
xor
mov
out
push
stos
xchg
dec
xchg
je
dec
dec
mov
mov
jg
icebp
movsl
jne
dec
jne
bound
mov
cmp
das
loope
movsb
pusha
sub
iret
enter
and
sub
lret
and
xor
xchg
xchg
jmp
hlt
sbbl
outsl
arpl
aad
lret
jle
clc
out
ficomps
in
sbb
int
sbb
adc
inc
mov
pusha
mov
les
mov
incl
mov
cmp
xor
mov
lret
xchg
jmp
xchg
cmpsb
pop
push
test
cmp
dec
mov
xor
or
mov
or
movups
jecxz
push
pop
outsl
das
int3
sub
mov
popf
push
adcb
rorl
repnz
pop
push
fisubrs
jbe
test
xchg
push
out
xor
mov
clc
inc
arpl
out
push
lcall
fildl
shl
mov
mov
in
sti
push
wbinvd
lret
pop
and
shlb
sub
sahf
lock
sub
out
push
out
pop
jle
xchg
cld
js
pop
push
mov
icebp
pop
sti
mov
ljmp
cmp
inc
cli
pop
cmp
cmp
cmc
or
in
add
shrb
cmp
daa
sbb
stos
push
hlt
jae
outsb
daa
das
xchg
mov
leave
mov
shl
je
popf
or
outsl
lcall
popa
xchg
int
xor
dec
addr16
fildll
jb
imul
pop
sti
xchg
cld
sahf
sub
dec
je
push
scas
fs
jge
sub
fmulp
and
jns
fbstp
cwtl
jb
addl
mov
fbstp
pop
inc
fwait
cld
jg
aaa
sbb
mov
rcr
xor
in
addr16
pop
jecxz
jge
inc
mov
sbb
mov
xchg
inc
stos
inc
nop
fwait
aam
or
inc
and
cld
orb
into
std
dec
jecxz
sahf
xchg
mov
and
mov
or
xlat
test
loope
sub
push
or
loopne
stos
jb
and
cmp
aaa
mov
inc
cmpsb
mov
dec
loopne
mov
aad
lods
sub
cs
decl
test
sub
fildll
mov
pop
idivl
ret
cmc
leave
cmp
adc
test
cmp
dec
pop
mov
mov
test
sub
enter
cmp
add
pushf
cwtl
xchg
jno
daa
or
mov
inc
out
stos
sti
mov
es
jns
mov
inc
add
jb
fimuls
in
jne
pop
insb
lock
add
fcmovnu
cs
rorl
xchg
xchg
mov
xsha256
cmpsb
adc
imul
inc
mov
or
lds
xor
loopne
or
das
xchg
add
insb
mov
cwtl
mov
ds
xchg
push
mov
adc
or
icebp
ljmp
stos
xchg
dec
mov
mov
mov
xchg
mov
nop
dec
sbb
adc
dec
push
inc
in
inc
fwait
popa
cs
gs
push
int3
loop
jns
mov
mov
rclb
or
xchg
jmp
leave
insl
insb
sahf
in
mov
or
clc
sbb
loopne
or
lcall
mov
add
push
jg
inc
loopne
pop
mov
mov
add
sbb
mov
jecxz
mov
rorb
mov
dec
inc
outsb
pop
lods
cmp
std
push
mov
lock
icebp
lods
push
dec
imul
mov
jne
push
inc
outsl
or
gs
xor
lret
bound
pushf
push
and
outsb
sbb
lock
jmp
mov
cwtl
inc
add
push
pop
rorb
and
xchg
jns
mov
fisttpll
icebp
arpl
mov
cmp
test
inc
sbb
add
aam
pop
adc
int
cli
out
stos
aas
jae
ficompl
mov
int3
clc
push
add
sub
jno
pushf
out
jbe
inc
dec
fistpll
cli
arpl
sbb
stc
add
lahf
insl
lret
push
mov
push
repnz
mov
mov
cmp
lahf
rol
pop
add
lret
fs
adc
jbe
mov
notl
sti
inc
fld1
dec
mov
in
into
lcall
int
ljmp
push
nop
arpl
jecxz
pop
scas
jmp
or
pop
add
or
jle
add
ret
push
cmp
popa
xchg
mov
mov
popa
ljmp
stos
push
dec
dec
icebp
lcall
loop
fwait
loop
push
or
jle
lret
cwtl
xchg
xor
cmp
icebp
or
jge
sbb
cld
cmp
inc
sbb
cmpsl
or
mov
inc
cmp
aaa
mov
in
in
es
jmp
sarb
ret
push
jl
in
dec
xor
loop
cmc
mov
and
xlat
adc
roll
mov
stos
push
add
xchg
dec
dec
aas
cmp
lea
sbb
leave
push
xchg
mov
sbb
ss
cmpsl
sub
mov
loopne
adc
pop
stc
mov
mov
sbbb
mov
lcall
pop
stos
mov
mov
insb
daa
stos
fists
orb
sub
insl
and
sbb
icebp
inc
mov
dec
push
add
mov
sar
notw
dec
jbe
jmp
imul
mov
movsb
sub
pusha
mov
or
int
imul
push
outsl
dec
mov
inc
outsb
data16
and
mov
xor
lret
flds
ja
cmp
clc
fdivrp
in
mov
mov
lret
jae
push
cmp
xchg
pop
jle
daa
mov
mov
cmpsl
outsb
int3
jp
mov
jp
icebp
imul
and
mov
gs
sarb
popa
inc
repz
js
and
enter
lods
sub
movsl
sub
add
int
sbb
mov
sbb
dec
out
push
mov
push
add
std
sbb
jle
icebp
lret
inc
daa
pop
sbb
lret
dec
lret
add
in
sub
jo
jnp
and
pusha
sub
lret
jle
scas
and
sub
shlb
ret
mov
mov
loop
inc
push
push
jns
cmpsl
stos
and
lods
sub
push
adc
pop
mov
cli
scas
dec
pushf
adc
sub
pop
and
dec
dec
cmp
mov
mov
rol
cld
cli
dec
ljmp
arpl
pop
sub
mov
std
push
jb
sti
popf
xor
imul
jl
jno
mov
and
adc
dec
sub
ljmp
mov
and
imul
pop
dec
cmp
and
inc
icebp
dec
jp
push
and
mov
mov
int
mov
mov
int
push
push
test
push
jnp
ret
pop
dec
ja
mov
stos
inc
jl
out
xor
cmp
or
stc
or
inc
lret
jo
dec
je
imul
and
push
xor
xchg
inc
icebp
repz
in
sbbb
lods
and
addr16
dec
je
dec
aad
sbb
sahf
daa
push
lret
divb
jb
sbb
test
pop
call
mov
jae
lods
leave
add
cli
push
xor
aaa
int
stos
xor
push
cmc
sbb
dec
xchg
and
lcall
ds
jl
adc
fldl
push
and
sbb
fwait
rolb
pushf
push
xlat
push
pop
and
aas
aad
mov
das
push
loopne
jmp
pushf
enter
push
dec
ds
enter
incl
and
push
cmp
stos
imul
or
das
ret
sub
fiaddl
es
cmp
cmp
adc
inc
jo
in
jle
imul
and
insl
sbb
fsubs
inc
add
sub
into
mov
inc
push
scas
icebp
jle
orl
test
or
sbb
ljmp
out
fadd
xor
lods
loop
ja
xor
icebp
xchg
lds
mov
or
adc
and
stc
mov
call
jp
mov
or
xchg
jbe
jne
aad
mov
in
push
lret
mov
cmc
lret
icebp
lods
inc
stc
inc
lret
jmp
and
insl
cwtl
mov
mov
ret
aas
std
push
mov
and
xchg
adc
mov
cld
ss
fstpt
cmc
pslld
sbb
lcall
imul
jno
push
sarl
rcrb
aaa
and
dec
push
pop
dec
es
out
test
sbb
xor
cmp
pushf
lret
mov
xor
es
mov
mov
adc
test
mov
dec
xchg
mov
jno
outsb
insl
xor
xor
lret
jno
mov
out
and
ret
pop
inc
not
mov
xlat
mov
mov
loope,pn
insl
push
push
pop
and
adc
and
sub
jge
test
stc
testl
jno
mov
arpl
add
mov
add
fcomp
sar
cmp
es
mov
push
xchg
push
push
insb
mov
xchg
and
lds
fmuls
sti
fcoms
out
dec
jle
cmpsb
mov
aad
inc
fldenv
push
fistpll
sub
loope
push
jge
or
sbb
xor
mov
call
sbb
sub
sub
repz
je
mov
xor
scas
loopne
mov
xchg
or
sbb
sbb
push
imul
fnstcw
pop
mov
bound
rcr
stos
lods
mov
push
lods
movl
mulb
cld
jno
out
in
push
xchg
mov
roll
mov
pop
mov
dec
packssdw
xor
or
jno
leave
jne
stos
mov
in
fs
mov
inc
and
mov
fs
pop
inc
in
dec
mov
test
jae
cmp
inc
es
stos
mov
jmp
mov
or
aas
mov
xlat
ret
stos
pop
dec
jb
mov
repnz
lods
jmp
xchg
or
push
mov
lods
and
repz
sub
repz
push
push
mov
jnp
mul
dec
sub
mov
sub
push
enter
stc
jnp
pop
jge
jmp
inc
dec
pop
xor
popf
test
in
push
pusha
xchg
lret
mov
addl
out
inc
jge
lods
jne
xchg
sub
cld
mov
les
dec
xchg
push
xchg
dec
pop
ret
rclb
pop
lahf
xor
fs
jns
cmp
add
push
jmp
xor
loope
roll
test
arpl
sub
fdivs
cwtd
xorb
mov
and
jmp
mov
dec
xchg
pop
adc
xorb
lahf
jge
js
fbstp
push
lret
push
mov
leave
scas
loopne
sbb
movd
int3
sub
mov
pop
xor
decb
push
lea
popa
leave
enter
cmp
jae
ret
adc
lock
xchg
into
mov
out
test
lock
mov
adc
inc
add
or
and
ss
pusha
push
dec
mov
jp
aam
adc
mov
lds
xchg
repnz
jbe
cld
mov
cmpb
gs
dec
xor
sbb
xchg
stos
pop
jbe
sahf
pop
inc
shrb
aad
cli
push
jno
push
outsb
jns
and
xlat
call
das
aad
gs
test
xor
bound
arpl
test
dec
loop
inc
xchg
mov
xor
pusha
test
loope
jp
aad
fxam
inc
inc
dec
add
mov
in
pop
jns
rcrb
hlt
mov
adc
jbe
jne
sahf
sbb
pop
notl
mov
loope
add
dec
fstps
adc
jne
in
nop
cmp
xchg
dec
sub
loopne
mov
in
mov
sub
dec
int
jle
mov
ds
sbb
popf
popf
lret
and
mov
testb
xchg
xchg
jae
xchg
push
test
enter
mov
out
insl
adc
xor
cld
sub
shl
pop
lcall
xor
arpl
iret
mov
popa
push
cmp
clc
sbb
jns
dec
mov
jb
adc
insl
test
in
pop
sub
cmp
fcomps
enter
mov
push
sarl
dec
out
and
inc
inc
mov
je
lret
lea
out
jl
pusha
xchg
mov
test
stos
push
sbb
test
stos
sub
xor
gs
jp
mov
push
sub
add
mov
sub
fldl
sub
or
movsl
mov
cmp
aam
into
xchg
pop
out
stc
js
cmc
add
inc
add
mov
in
cmpb
add
inc
xchg
pop
test
pop
je
movsl
push
aas
iret
ror
mov
fidivl
sub
pop
mov
imul
in
pop
das
adc
pushf
aam
arpl
cli
fistpl
or
jl
mov
int
sarb
push
cmp
lods
push
xchg
push
imul
xlat
xchg
xor
fcompl
idivb
push
mov
inc
mov
push
vandnps
mov
js
sbb
push
pop
imul
mov
outsb
scas
shlb
cmp
mov
push
sahf
jg
out
sub
inc
andb
push
int3
mov
and
mov
in
clc
pop
aas
dec
notb
and
cld
pop
inc
cmpsl
outsl
faddp
mov
mov
cli
lahf
sarb
loope
and
fildl
lock
fldcw
xor
addl
xor
fbld
mov
mov
mov
sbb
aaa
push
mov
rorb
mov
push
jo
push
std
popa
pop
scas
pop
aad
jge
ja
xor
shlb
pop
or
lret
aas
push
ss
adc
xor
pavgw
stos
lods
daa
xchg
push
add
lods
enter
xor
dec
jge
mov
fsubrs
push
roll
lods
dec
pop
test
push
push
insl
lea
frstor
mov
ljmp
std
pusha
jl
sbb
loop
mov
ds
dec
out
push
call
pop
stos
jns
dec
dec
pop
movb
xchg
mov
inc
and
loope
jns
push
call
xchg
repz
jae
mov
sbb
lods
sbb
pop
mov
jne
inc
fdivs
negl
test
cs
rcrl
push
es
xchg
subps
mov
jmp
cmpl
test
icebp
sbb
xchg
xor
orb
addr16
in
fsubl
sbb
ret
pop
fsubr
aam
lods
int
sub
fstpt
loopne
es
clc
cwtl
out
test
jge
jo
add
sub
pmulhuw
mov
mov
and
fsubr
fistps
out
xor
call
cmp
int
inc
repnz
jl
and
add
inc
cs
ret
in
pop
gs
adc
lret
push
mov
mov
in
cmp
push
test
pop
test
outsb
lret
into
mov
mov
loop
xor
or
push
adc
sbb
imul
lods
stos
dec
xchg
and
nop
lock
or
lock
hlt
outsb
mov
test
mov
mov
xchg
dec
test
mov
dec
jb
sub
cmp
fisubrs
bound
push
pop
xor
inc
repnz
mov
push
mov
jo
dec
es
stc
fistpl
cmp
inc
mov
in
pusha
jg
cld
add
dec
sub
loop
push
pushf
pop
xor
lcall
or
sarb
es
and
xchg
adc
flds
pop
mov
call
jmp
arpl
add
jp
je
jno
shll
sub
pop
dec
mov
push
ja
jp
cld
push
sub
xchg
imul
into
rcll
mov
or
enter
testb
add
fisttpll
push
push
xor
clc
mov
sbb
mov
hlt
sarb
pop
adc
in
stos
shrd
inc
dec
stc
sbb
das
mov
xchg
adc
mov
popa
insl
cmp
test
cmp
mov
stos
movsl
pop
pop
xchg
leave
stos
dec
vcmpsd
cmp
add
cmp
xchg
lea
pop
cmp
mov
push
mov
cld
push
fisttpl
cwtl
push
out
sub
outsl
ljmp
cs
push
and
test
mov
mov
push
bound
pop
fst
lret
xor
popf
push
out
sarl
and
sub
adc
cmp
fisttpl
out
icebp
int3
cltd
or
popa
jecxz
fstpt
push
sbbl
dec
sbb
jl
push
mov
loop
xor
xchg
jne
mov
popf
cmpl
outsl
stos
aas
and
pushf
call
lret
mov
mov
and
inc
lds
scas
cs
icebp
cmpsl
or
sti
stos
lahf
xchg
push
xor
stos
push
pop
scas
pop
push
outsl
hlt
jmp
cmpsb
jmp
nop
repz
in
xorl
inc
lret
pop
dec
loop
pop
xchg
push
mov
cmp
jnp
cmpsl
das
dec
fwait
js
in
clc
jmp
sbb
pop
fidivrl
sub
and
dec
dec
xor
jo
sbb
ja
fiaddl
fldenv
xchg
pop
fsubs
loopne
mov
aad
scas
test
enter
out
dec
outsl
andl
mov
rep
lret
imul
add
or
sti
and
mov
lcall
divb
insl
call
xchg
adc
mulb
inc
sbb
mov
lea
add
cmp
mov
mov
lods
pop
lods
shl
inc
imul
push
or
pusha
xchg
xor
or
leave
mov
out
outsl
jne
jp
vaddps
and
cmpb
movsb
mov
mov
fdivrl
call
push
repz
or
jl
xor
enter
inc
jb
jg
pop
mov
ret
adc
test
sbb
dec
scas
mov
bound
or
jecxz
adc
add
leave
sbb
push
fdivs
scas
adc
jl
arpl
jbe
addr16
int3
or
in
in
push
jb
or
mov
sub
dec
nop
enter
loop
adc
popf
gs
stos
sub
daa
fsubs
aaa
mov
mov
loop
notb
pop
mov
mov
jge
lea
cmc
andl
sbb
fstpl
inc
sbb
sbb
jo
cld
enter
pop
add
icebp
and
repz
sbb
cmpsb
jl
in
mov
fadds
add
inc
fwait
mov
push
scas
notb
shl
and
aas
xchg
fisttpl
pop
outsb
outsl
les
cltd
jge
sub
or
inc
jne
lods
push
enter
dec
jae
push
lods
data16
adc
cmpsl
clc
fadds
sarb
adc
mov
test
xchg
push
lods
jno
cmp
out
insl
pop
and
add
adc
icebp
sub
out
sbb
out
mov
pop
jae
aam
jmp
dec
movsl
xchg
add
jecxz
push
dec
repnz
adc
lahf
arpl
mov
imul
pusha
xchg
push
mov
jno
or
cmp
or
pop
cli
fimuls
ret
mov
xchg
or
addr16
mov
mov
sbb
repz
xor
iret
int3
lcall
cmp
jbe
clc
inc
push
into
xlat
loope
movsl
mov
mov
mov
mov
pop
push
inc
fiaddl
jge
push
jb
pusha
pop
mov
xor
push
mov
fstpl
lods
adc
inc
push
sub
push
insb
test
int
cmpsb
sbb
pop
cmp
xor
mov
dec
xor
push
lds
add
xor
stc
cwtl
sahf
mov
andl
inc
mov
pop
idivl
push
mov
xchg
rcll
outsl
clc
push
pop
inc
fstps
pop
and
mov
xor
dec
cmpsb
xor
or
pop
push
imul
push
mov
sbb
push
push
imul
mov
icebp
push
cmp
cld
mov
repnz
pop
adc
xchg
pusha
fsubrs
imul
adc
mov
stc
add
sub
cmpsb
add
out
cwtl
int
pop
jbe
adc
xchg
mov
jmp
bound
xor
imul
imull
icebp
xchg
push
jl
mov
mov
addr16
or
std
cmp
stos
adc
mov
adcl
pop
push
jns
cmp
rolb
pop
lods
movsl
add
xlat
jl
mov
js
push
inc
cmpsl
jge
outsl
push
je
pop
out
movsl
inc
int3
cltd
jmp
and
xor
bound
add
jo
stos
add
lcall
xor
inc
jge
pop
fwait
outsl
jl
cmp
cli
or
fdivr
mov
xchg
add
scas
add
test
push
incb
mov
movsl
jge
nop
je
mov
mov
fsubr
hlt
leave
ljmp
pop
test
lahf
add
or
sub
rcrb
outsb
stos
sub
jns
in
push
and
pop
mov
insl
dec
je
mov
jp,pn
fistpl
out
pop
js
popf
cwtl
xor
jmp
shll
pop
or
popa
jns
add
mov
push
repnz
shlb
dec
jp
mov
jl
loop
pop
ficompl
cmpsl
xor
and
add
or
sarb
mov
rorb
pusha
nop
frstor
pusha
enter
and
pop
clc
xchg
lahf
xchg
aas
mov
jbe
loopne
aam
shrl
mov
pop
sub
adc
sub
fxch
mov
testl
icebp
mov
xor
sti
test
jmp
dec
or
inc
mov
push
mov
inc
into
mov
pushf
xor
sbb
mul
xor
mov
jp
cwtl
mov
hlt
push
test
pop
loop
mov
push
cmpsb
popa
mov
dec
xchg
xor
jne
jae
movl
into
enter
push
nop
mov
mov
inc
xor
andl
testb
and
movsl
lds
xchg
xor
sti
cmpsl
scas
cmp
movsl
or
sbb
cmp
push
aad
or
inc
arpl
push
add
fistl
std
clc
pop
daa
cmp
cs
int
pop
jg
pop
lfs
inc
xchg
push
mov
or
pop
mov
shlb
add
push
adc
push
inc
pop
and
cmpsl
arpl
xor
popf
sub
in
jo
mov
daa
or
sahf
add
icebp
push
les
outsl
rol
sub
out
jb
xor
popa
pusha
xchg
add
pop
ja
hlt
shl
xor
stos
push
sbb
fisubrl
clc
das
popa
fmul
push
repnz
pop
mov
xorb
sub
jae
mov
adc
push
js
push
sahf
jp
inc
mov
ret
in
test
mov
or
add
adc
leave
cmpsl
ret
or
scas
inc
add
movsb
pushf
jnp
aam
inc
out
lea
scas
xchg
cmp
gs
fnstenv
jnp
ljmp
add
mov
in
jne
jne
push
add
scas
push
and
mov
adc
adc
iret
or
stos
jge
push
mov
testb
clc
mov
test
xor
cli
idivl
mov
movl
idivb
mov
divb
popa
lcall
inc
xor
cmp
push
mov
scas
mov
popf
jge
and
lods
cmp
das
dec
movsb
push
inc
inc
imul
aad
pop
and
jae
sbbl
or
cli
js
xchg
pushf
cld
loope
jle
fdivs
ficomps
push
icebp
pop
adc
pop
clc
out
push
inc
cli
mov
pushf
lea
lods
lds
or
pop
pop
ja
sti
inc
cli
xor
cmpl
addr16
mov
stos
mov
add
xor
mov
mov
sbb
sbb
repz
cmp
sub
sahf
jnp
add
jne
and
push
in
in
jne
jge
mov
mov
cltd
inc
xchg
cli
or
mov
mov
inc
jecxz
addl
into
in
jmp
frstor
daa
out
je
mov
mov
out
and
ljmp
les
add
ret
rcl
leave
jb
inc
jl
adc
in
adc
push
mov
cs
xor
mov
cmp
adcb
xchg
sbb
int3
lea
jbe
scas
pusha
ljmp
ret
nop
mov
push
icebp
add
push
repz
addl
sahf
cmpsl
insb
add
mov
inc
jb
mov
aaa
insl
push
stos
sub
jmp
cld
mov
leave
or
loope
aas
sar
subb
and
xchg
std
cmpsl
mov
dec
add
inc
into
jecxz
ficoml
xchg
fs
mov
cmpsb
fstl
adc
jecxz
imul
sub
jno
mov
lds
jne
inc
lods
int3
lods
cmpsb
scas
cmp
adcb
dec
pop
out
cmp
sbb
adc
xor
addr16
icebp
mull
jle
movb
adc
int
mov
frstor
and
pushf
sub
loop
jbe
loope
insl
imul
lods
out
jmp
push
movsl
jo
add
inc
adc
out
add
dec
xchg
jne
les
aas
icebp
jp
xor
inc
js
loopne
mov
jg
fdivs
mov
jmp
fs
dec
sub
aam
faddl
xor
aad
jae
inc
popa
xchg
jbe
gs
adc
leave
and
cmpsb
fucomp
lahf
or
int
xchg
jl
xor
sub
and
shrl
negb
nop
dec
loopne
loope
sbb
xchg
mov
in
xchg
pushf
sbb
inc
into
jecxz
mov
outsb
inc
neg
loope
cmp
fdivs
movsbl
dec
fdivrl
sti
idivl
std
xchg
xor
ja
mov
mull
and
out
dec
scas
lods
aas
pop
mov
in
sbb
pop
xor
test
lods
jecxz
jns
popa
adc
mov
inc
enter
inc
mov
jl
popf
fists
jb
add
arpl
popa
xor
jmp
adc
cmpsb
popf
jbe
cmp
and
pop
xchg
and
push
repz
xor
nop
sbb
scas
pop
sub
iret
imul
pop
xchg
and
bound
aam
add
popf
and
mov
dec
or
dec
mov
subl
push
aam
repz
popf
sti
pop
jl
jno
mov
int
lds
gs
dec
mov
cmp
xchg
and
mov
xor
inc
and
mov
aam
lahf
dec
and
ret
ljmp
xor
adc
shlb
adc
mov
cmp
data16
jge
push
cmp
in
dec
xchg
adc
cmp
fists
dec
xor
pop
inc
pop
sbb
mov
sub
inc
dec
arpl
xor
and
popf
aad
out
and
stos
out
test
mov
or
shrb
loopne
stc
cmp
jge
xor
sarb
pop
rorb
inc
lock
sub
jno
lods
das
xor
xchg
sbb
xor
xchg
fldenv
sub
out
xor
insb
hlt
sti
dec
dec
mov
shlb
loope
into
push
loop
fs
pop
push
mov
cmc
imul
les
cmc
cli
push
sbb
cmp
mov
stos
insl
into
lods
sub
mov
js
cmp
push
shll
aad
cmpl
mov
movsb
cld
pop
pop
pop
and
je
push
cmp
push
fisubrs
push
inc
or
in
in
lret
or
xorb
push
inc
jg
std
lret
ret
lods
out
push
arpl
push
cwtl
scas
sub
push
insl
dec
fidivrs
lock
cld
mov
clc
jmp
stos
and
add
sti
outsb
stos
and
std
lds
add
jae
fcompl
mov
in
in
lcall
cmp
out
fcoms
jecxz
add
in
xchg
mov
loop
xchg
adc
test
xor
subl
or
outsb
test
in
adc
sub
ret
cmpsl
dec
dec
xchg
scas
imul
popf
cli
test
or
xor
dec
iret
add
pop
clc
dec
mov
out
and
pop
xlat
mov
cmp
cltd
mov
mov
xchg
xor
enter
mov
movb
or
cmc
pushf
and
jecxz
push
js
adc
dec
inc
push
adc
leave
pop
out
loop
xchg
aad
add
popa
nop
outsl
cmp
mov
int
ss
mov
outsb
mov
dec
or
aam
mov
xchg
add
fbstp
jmp
scas
mov
xor
sub
pop
mov
shlb
and
test
adc
sbb
lahf
push
in
cmpb
push
shrb
xchg
test
fsubrl
inc
testb
and
stos
push
lods
or
sub
xor
push
xchg
push
adc
dec
or
lahf
inc
addr16
sti
insl
outsb
repnz
div
add
inc
push
xor
pop
push
or
lcall
jmp
add
add
mov
inc
rol
bound
sbb
mov
xlat
pop
das
inc
add
push
inc
nop
gs
mov
ds
jmp
inc
xor
shrl
les
pushf
jb
pusha
sbb
movl
arpl
sub
push
mov
jae
cmp
pop
mov
test
mov
repnz
stc
pop
pop
push
inc
in
mov
out
jnp
in
insl
roll
xchg
scas
mov
les
cmp
js
ss
jle
dec
out
popa
xor
jmp
test
cli
in
insl
leave
mov
xor
std
mov
bound
scas
aad
cmpsl
das
mov
cmp
jbe
dec
sbb
cmp
lods
lret
or
gs
sub
shrb
push
add
mov
or
sub
mov
movsb
in
jbe
jae
xchg
mov
sahf
mov
push
in
rcrl
sub
test
cmpsb
insb
jbe
aam
in
sahf
mov
test
xor
add
inc
push
shll
pinsrw
jmp
jg
xor
into
lea
pop
enter
int
add
movsb
and
jno
dec
xchg
test
mov
cwtl
rcll
jge
cmp
test
mov
fsubrl
inc
pop
cmc
push
mov
clc
xchg
and
jmp
jae
mov
imul
jnp
or
out
pop
call
mov
jbe
pop
mov
push
divl
cli
add
mov
add
push
clc
rorl
add
vsubps
jle
movsl
mov
mov
sbb
movsl
divl
scas
add
xchg
popa
rcl
jno
sub
mov
gs
and
pop
jmp
mov
add
pop
add
in
inc
dec
cltd
gs
sub
int3
push
sub
sbb
mov
jae
iret
movsl
repnz
test
sarl
sub
out
outsl
mov
rorl
add
pop
mov
pop
movntq
xor
push
push
mov
stos
in
lods
rcl
and
rcrb
jbe
pop
cmpsb
shll
sbb
lret
or
cmp
push
addb
fsub
data16
repnz
xchg
xor
test
and
pop
mov
out
addl
jno,pt
popa
call
mul
cld
outsl
test
call
sti
jbe
aam
adc
insl
lods
mov
arpl
daa
imulb
push
xchg
jns
jno
mov
rcrb
adc
dec
fldenv
fisttpl
pop
ret
jmp
add
sbb
addr16
pop
pop
xor
rcl
dec
cmp
aas
test
sbbl
in
jb
mov
lods
addr16
jbe
cmpsb
mov
fldcw
mov
xchg
mov
out
pop
fwait
jb
add
orb
mov
push
data16
and
sarl
pop
mov
aam
gs
out
lea
aam
dec
mov
jb
and
ret
ret
pop
inc
cmp
movsb
push
push
cli
mov
cmp
aas
dec
dec
xor
lahf
mov
push
and
out
mov
pop
lock
and
aad
inc
cmp
mov
pop
out
fdivl
xlat
enter
roll
pop
sub
dec
inc
xchg
outsb
mov
scas
rclb
movsl
addl
jge
sub
mov
outsl
mov
jbe
mov
fdivl
into
add
addl
cmp
xchg
stc
ljmp
mov
cmp
or
sub
aam
xor
mov
subb
dec
adc
mov
repz
sub
pusha
sub
or
mov
and
sbb
adcl
sub
dec
mov
add
pop
inc
push
andl
push
stc
sbb
jp
nop
inc
push
or
ret
ljmp
addr16
jns
jbe
xor
movsb
insl
dec
sarl
icebp
hlt
rol
mov
icebp
sbb
scas
repnz
xor
mov
or
cwtl
test
outsb
pop
in
mov
popa
mov
push
cld
mov
jbe
icebp
cmp
add
pop
push
dec
sti
sbb
mov
popf
inc
das
or
popa
int3
add
xor
xor
adc
jg
std
aam
mov
loopne
outsl
mov
adcl
test
lret
icebp
cltd
popf
scas
bound
mov
mov
or
add
sub
mov
aaa
xchg
jno
cmpsb
fildl
aaa
ret
lret
sbb
test
movsb
data16
and
xlat
push
adc
cltd
lahf
jge
mov
dec
scas
and
or
cmc
sub
fs
mov
jae
push
hlt
pop
mov
sub
mov
push
fldcw
dec
sbb
mov
xchg
js
jecxz
mov
pop
mov
mov
sbbb
imul
popa
add
shll
pop
loope
xor
mov
loope
insl
loope
xor
xor
xor
xor
cs
sub
daa
push
or
shl
xchg
xor
lock
jb
movsb
pop
fcomps
jp
int
adc
fcmovu
insb
mov
cmpl
xchg
mov
lds
inc
jne
loop
aam
push
fisubs
ret
xchg
xchg
or
xchg
xor
iret
and
push
ret
sub
cli
rcll
push
mov
adc
loopew
cwtl
dec
rolb
mov
sbb
fistpll
rorb
mov
push
and
pop
clc
push
fnstsw
xor
push
add
cmp
push
aam
lea
xchg
leave
scas
fwait
aad
scas
lods
hlt
fnstsw
bound
movsb
inc
test
cmp
fisubs
inc
dec
lret
and
jae
adc
sbb
dec
mov
in
in
data16
adc
lahf
adc
aad
fsubs
in
xchg
mov
pop
loopne
test
js
loop
mov
pop
mov
int3
scas
fidivrl
idiv
pusha
mov
loop
push
fucomi
mov
shlb
sbb
xor
adc
out
imul
cli
xor
repz
sub
sub
adc
xchg
loopne
add
arpl
daa
add
mov
push
cs
dec
sbb
imul
testl
scas
jnp
call
pop
push
dec
das
push
imul
arpl
cmp
cmc
and
incb
fwait
sub
pusha
mov
and
cmp
je
dec
sbb
cs
inc
std
sahf
cli
jb
add
and
push
pop
sahf
js
adc
subb
xchg
push
xor
xor
faddl
les
xor
enter
cmp
sbb
dec
ss
pushf
xor
cmp
jae
push
sbb
inc
pop
xchg
push
iret
out
js
cmpsl
fld
sub
dec
sti
addl
mov
sub
mov
lret
adc
imul
cmp
push
cmp
lea
cs
enter
xchg
mov
or
call
and
cli
lcall
xor
popf
push
sbb
es
and
hlt
iret
cmp
dec
sbb
filds
scas
pop
sbb
lcall
inc
or
rolb
ds
cld
mov
cmp
mov
jmp
fildl
mov
stos
push
and
xchg
cmp
add
xor
mov
arpl
shrl
or
add
dec
outsl
fs
dec
stc
and
in
scas
ss
dec
outsb
jp
addr16
lret
pop
fs
xchg
ret
pop
jbe
lret
int3
push
add
clc
sbb
cmp
cld
sbb
dec
fbld
add
cmc
rorb
enter
push
ficompl
test
xchg
mov
or
ljmp
cmp
add
adc
inc
scas
stc
push
mov
sbb
dec
lcall
scas
pop
jp
push
rcrl
out
fwait
scas
or
pop
and
xor
xchg
adc
push
fs
inc
sub
xchg
lret
into
xchg
icebp
and
andb
stos
les
test
xchg
shr
out
and
pop
repnz
leave
or
fimull
xchg
pop
pop
xor
add
mov
test
inc
rorl
sub
cmp
pop
fldt
js
fdivrl
mov
lcall
xor
nop
cmp
push
jmp
mov
pusha
fs
int3
pop
xchg
lea
lcall
pop
insl
insl
add
das
and
jle
test
cld
cld
mov
cmp
jge
imul
push
jne
stc
sub
adc
insl
cli
arpl
mov
add
sub
std
inc
cmc
fstl
pop
and
push
push
fcomps
movsb
arpl
xchg
int3
shll
jmp
repnz
jne
fnstsw
jp
mov
jb
mov
pop
test
ss
jle
jp
les
push
outsl
cltd
and
pop
sbb
dec
fsub
fidivl
mov
push
mov
sub
sahf
cld
inc
mov
pop
mov
test
mov
shlb
push
sub
push
loopne
jnp
cwtl
xor
inc
xor
aad
push
mov
xor
lods
les
loop
cmp
xchg
dec
fldenv
mov
movsb
notb
data16
dec
arpl
pushf
repnz
aam
xlat
adc
mov
xchg
outsb
addr16
movsb
add
jp
clc
push
fmuls
aas
and
xchg
dec
inc
leave
gs
or
xor
or
lahf
rcr
xor
js
les
call
mov
data16
add
inc
sahf
sub
mov
mov
in
fldenv
push
outsl
cmpb
pop
jle
mov
cmpxchg
outsl
lods
inc
aad
in
cmp
je
xchg
pop
mov
push
jbe
loop
jmp
xchg
jmp
aaa
stos
scas
mov
mov
in
sbb
insb
nop
stc
inc
or
lock
fsts
mov
repz
xor
xor
xor
test
cmp
cmpsl
imul
daa
add
xor
add
mov
imul
add
ljmp
jl
aaa
rcll
pusha
mov
stc
outsb
jno
mov
mov
sub
stc
jb
aas
pop
push
je
shl
push
and
cs
push
lret
mov
xor
fiadds
ljmp
jns
jne
jb
sbb
push
and
repnz
jmp
imul
xor
lahf
mov
push
imul
out
jbe
or
rcll
mov
xor
aas
loop
test
xor
aaa
out
and
push
std
inc
decb
pop
call
hlt
ss
lock
pop
jmp
mov
pop
or
xor
lahf
mov
hlt
ret
cmp
lret
dec
inc
jmp
add
movsb
mov
lock
dec
jns
mov
dec
mov
and
sbb
mov
or
gs
cmc
lock
push
pop
sub
cmc
xor
movsl
sbbb
loopne
es
add
sub
cmp
push
lcall
adc
rol
pop
push
scas
lret
nop
aas
data16
repz
out
jle
or
negb
sub
dec
ret
xchg
mov
repz
inc
inc
xchg
insb
and
mov
cwtl
in
inc
dec
jp
es
push
mov
lret
imul
testb
push
stos
stos
or
push
data16
addr16
andb
stos
xchg
dec
adc
xchg
xorb
push
insl
out
rcll
lret
jno
pop
cmc
lret
daa
mov
lea
ljmp
jle
aaa
hlt
fsub
leave
push
mull
xchg
sub
mov
sbb
lods
ljmp
bound
mov
fdivrl
or
push
movsl
mov
jb
cltd
add
xor
push
enter
mov
push
pop
dec
adc
push
outsl
adc
cld
cmp
lea
insl
xor
cmp
mov
outsl
lods
pop
mov
rcll
mov
jg
pushf
loope
lret
cmp
push
inc
jge
insb
push
cli
mov
in
in
test
push
cmp
mov
cs
sbb
lds
mov
push
or
sti
cmpsb
out
push
push
shlb
mov
push
int3
adc
add
mov
pop
jecxz
adc
sub
lock
fstps
mov
imul
dec
movsl
mov
leave
mov
mov
mov
bound
pop
push
xchg
adcl
outsb
fmull
or
loope
out
or
insb
sahf
les
push
xchg
es
pop
or
mov
fwait
mov
dec
xor
ret
xchg
jnp
push
repz
stc
ss
repnz
repz
lods
pop
mov
cmpsl
mov
jo
mov
sub
sub
insl
mov
or
imul
xor
push
push
clc
shrl
mov
and
jmp
and
cmovg
mov
mov
push
cmc
sub
mov
and
dec
xchg
nop
dec
iret
lea
hlt
jl
fstps
jne
xor
cmp
push
sahf
xchg
pop
adc
add
out
call
and
mov
lahf
push
cmpsl
pusha
cld
mov
xchg
jp
into
out
lcall
dec
lcall
jmp
stos
insb
adc
dec
xchg
test
int3
inc
xchg
mov
or
add
xlat
add
fnstsw
popa
fwait
cmp
stos
dec
jp
jmp
pop
inc
or
jno
sti
into
dec
dec
pop
loopne
mov
nop
xchg
mov
jecxz
mov
xlat
inc
fwait
lds
hlt
xchg
inc
orl
pop
mov
cmp
int3
xor
add
data16
pop
and
xor
stos
cmp
imul
mov
dec
aad
jmp
jge
xchg
out
or
in
and
lret
xchg
xor
push
adc
test
lret
jmp
xor
lea
test
daa
mov
lds
dec
adc
sub
pop
pop
lret
ret
xchg
pop
fdivrl
and
out
repz
popa
cmpsl
dec
mov
out
addr16
imul
and
into
cs
mov
sbb
out
enter
sub
cld
orl
mov
daa
xchg
push
inc
hlt
jg
repnz
and
movsb
adc
jmp
in
mov
sti
repnz
test
sti
jmp
sub
gs
lcall
xchg
outsl
and
ret
jbe
lods
jns
ljmp
lock
js
cmp
sbb
push
dec
lcall
pop
add
je
push
inc
insl
jmp
pop
mov
xchg
xlat
xchg
sub
push
inc
push
lcall
scas
push
fucomip
add
mov
cmp
mov
mov
and
icebp
xchg
jae
cmpsl
mov
jb
mov
dec
outsb
lret
pushf
ds
aas
out
push
lsl
ds
out
aaa
sub
bswap
notl
fists
out
xchg
jl
dec
mov
mov
pop
cmpsb
stos
movsb
nop
push
repz
ds
sub
loopne
and
dec
jne
movsb
cmp
cmp
cmp
fidivl
xchg
iret
xchg
push
adc
adc
and
icebp
and
das
mov
push
mov
adc
mov
rol
pop
gs
pop
adc
push
rclb
sbb
in
aad
or
push
sbb
in
push
scas
inc
in
dec
inc
ljmp
and
push
jmp
jecxz
rdpmc
rcr
movsl
xchg
or
lcall
imull
xchg
int
cmp
push
sub
sub
rcrl
stos
cmp
das
mov
test
rcr
rclb
mul
jg
cmp
out
je
dec
gs
sahf
cs
jb
insl
andl
pusha
sbbl
addr16
jmp
cmpsb
dec
lods
orb
out
addr16
cwtl
filds
in
cmpsb
add
into
cwtl
cmp
hlt
pop
push
sti
ret
loope
enter
mov
xor
and
dec
out
cs
cwtl
add
sti
andl
leave
lods
stos
out
pop
stc
lock
fmulp
add
outsb
je
outsb
pop
add
loopne
jns
xor
out
mov
lods
and
xorb
mov
aad
cmp
xchg
icebp
push
mov
cmp
sub
loope
xorb
pop
bound
and
es
add
xchg
push
lods
dec
icebp
loop
rorl
and
fistl
lds
add
les
sub
out
pop
ja
inc
cmp
cmpsb
mov
inc
dec
btr
mov
push
push
dec
add
xor
sti
movsb
sub
out
movsl
xchg
fwait
or
insl
xchg
and
mov
xchg
xlat
and
test
out
pop
call
jp
stos
lcall
mov
cltd
stos
test
cmp
sub
push
push
or
repz
arpl
mov
lea
inc
movsb
mov
mov
enter
dec
repz
setnp
imul
xchg
fisttps
adc
add
and
pop
loop
dec
lods
jecxz
iret
pop
xchg
aaa
mov
cmp
push
outsb
inc
mov
xchg
das
test
gs
jmp
or
mov
mov
inc
dec
cmpsl
pop
arpl
or
sbb
mov
xchg
or
out
or
mov
xor
adc
jae
adc
pop
fbstp
mov
fs
ret
test
mov
sub
shrb
xor
imul
fld
mov
xchg
inc
dec
fisubrl
jns
sbb
jle
repnz
cmc
adc
jae
cs
test
loope
push
imul
jb
jecxz
test
lcall
mov
pop
push
fwait
sbbl
lahf
fisttps
pop
push
loope
dec
jg
mov
fs
jle
int3
lahf
mov
fs
daa
pusha
out
mov
sbb
mov
lahf
add
call
inc
test
sub
in
roll
nop
test
mov
rorl
lahf
add
mov
out
push
lods
shll
pop
cmc
add
pop
sub
mov
loope
push
adc
pusha
xchg
or
iret
sub
mov
aaa
push
pop
dec
clc
adc
jg
mov
mov
inc
mov
or
mov
push
fisubrl
mov
jae
fisttpll
into
adc
inc
cmp
scas
bound
mov
inc
xor
xor
inc
fwait
lcall
scas
popa
xor
lds
or
cmp
ljmp
ds
push
push
ficoml
movsl
clc
dec
lret
out
orl
add
js
or
mov
mulb
ss
sbb
cli
nop
pushl
cld
pushf
call
out
fstps
dec
loop
loopne
aas
jne
stc
sbb
cmp
inc
test
mov
xor
jg
push
sbb
adc
add
jae
mov
fsts
mov
add
cmc
fisubs
inc
cwtl
or
mov
lds
js
mov
push
in
rcr
sbbl
dec
outsb
clc
mov
jno
adc
aam
insl
mov
cs
xor
hlt
or
out
pop
push
hlt
xchg
pusha
or
push
ljmp
imul
imul
sub
stc
jge
lret
mov
insb
pop
mov
push
cmpb
dec
fistl
mov
mov
and
aad
dec
push
popf
xchg
test
jbe
jns
pop
inc
negb
nop
push
clc
push
xor
add
push
cmp
xchg
call
addl
mov
ret
jno
cmp
hlt
adc
jno
stos
sbb
icebp
enter
out
ds
sarl
push
xchg
cltd
push
aaa
mov
sbb
test
cltd
xor
rcrl
pusha
cmp
lahf
sbb
sbb
cmp
dec
xchg
out
inc
push
popa
pushf
ret
fmuls
adc
cs
pusha
mov
mov
mov
sbb
mov
push
movsb
mov
add
nop
arpl
cmc
mull
inc
pop
movl
inc
fidivs
xor
outsb
in
mov
gs
push
outsl
ja
adc
shlb
sti
sarb
imulb
cmp
adc
xor
idivl
sahf
jmp
sub
cmp
dec
stc
stos
or
lea
dec
fmuls
mov
adc
ficoms
mov
jnp
cwtl
shrb
push
add
sti
incl
rolb
stc
cli
push
mov
cmp
cmpsb
xchg
xchg
sub
icebp
cli
gs
pushf
aas
ja
jle
shlb
xor
sti
and
xor
scas
pop
fbld
cmp
mov
fstl
pop
std
insb
xchg
xlat
push
aas
clc
add
mov
inc
jle
xor
lahf
cmc
adc
movsb
mov
movsl
js
or
add
icebp
enter
mov
mov
rolb
rcll
and
adc
scas
int
scas
or
fisttpl
pusha
xor
jne
xor
lods
out
pop
xchg
and
mov
shr
mov
into
inc
int3
arpl
pop
add
fildl
adc
test
cmp
lsl
pop
add
test
mov
repz
sbb
pushf
cwtl
mov
push
or
push
mov
mov
or
dec
insl
stos
jge
xor
mov
add
mov
adc
imulb
into
inc
aam
cmp
mov
sarb
xor
xchg
arpl
push
push
and
loopne
fcoms
out
dec
fistpll
mov
aaa
mov
adc
sti
jnp
pushf
mov
fnsave
sub
pop
fsubs
jmp
sub
insb
mov
pop
test
stos
es
push
mov
loop
adc
iret
inc
pop
cmc
pop
mov
js
out
push
sbb
cwtl
push
repz
bound
fidivs
cltd
cwtl
shll
fistl
in
dec
jmp
xchg
mov
fnstsw
cld
ret
mov
popf
scas
or
les
mov
mov
dec
and
jno
cmp
or
ss
ret
es
pop
dec
stc
fwait
push
cmp
rol
adc
icebp
ja
ret
sbb
fcmovnu
jb
sub
push
movsb
test
cmp
jmp
dec
adc
popf
in
add
mov
cmp
mov
pusha
js
lds
inc
mov
xor
dec
gs
inc
or
roll
outsb
sahf
xchg
or
out
popf
inc
adc
mov
and
pop
xor
or
adc
test
aaa
ret
shll
mov
xchg
inc
mov
fsubrs
imul
addb
lret
out
gs
xchg
lret
jecxz
or
or
cmp
add
mov
or
jl
fisubrs
sbbb
js
adc
xchg
aam
js
mov
pop
ret
test
push
ror
cmpsl
cmp
mov
lcall
call
jb
movsb
divb
and
repz
dec
pop
push
xor
fimull
mov
out
outsb
scas
stos
add
mov
add
aad
popa
mov
cmpl
rcll
in
data16
lahf
add
fcoml
stos
sub
dec
mov
addr16
das
rcrb
cmp
lret
shlb
out
adc
cmp
and
mov
xor
iret
pop
rolb
mov
ja
les
scas
fwait
cwtl
out
mov
dec
adc
mov
and
stos
test
sub
pop
dec
pop
push
je
pop
cmpb
push
sub
and
xchg
sbb
mov
fildll
das
lret
sahf
mov
jecxz
icebp
or
roll
ss
and
movsb
push
or
cmpsb
pusha
push
repz
fnsave
jo
push
pop
push
add
addr16
inc
or
jp
inc
mov
pop
jb
test
rolb
mov
movsb
in
mov
fbstp
xchg
sahf
andb
inc
cli
mov
mov
xchg
inc
dec
cltd
jl
lods
mov
jmp
bnd
sbb
sbbb
dec
lock
test
loopne
jge
dec
into
fistl
data16
jecxz
movsb
in
movsb
int
mov
cmp
xchg
js
mov
cmp
cmp
push
cmp
out
rorl
sub
pushf
sub
clc
mov
dec
sbb
cmpsl
js
pop
mov
mov
fimuls
or
test
aam
jb
mov
cmp
scas
dec
in
out
enter
push
popa
jno
sub
jo
mov
mov
fs
mov
adc
push
enter
fcoms
idivb
pop
jno
dec
into
jge
orb
or
xchg
mov
add
or
sub
jne
jb
push
popf
push
pusha
loop
rcrb
pusha
mov
mov
in
mov
shlb
stos
adc
pop
adc
out
xor
imul
in
cmpsl
mov
xor
out
xlat
cmp
mov
mov
fnstcw
call
out
pop
or
repnz
push
sub
dec
cmp
dec
test
out
and
pop
orb
fdivrl
push
push
rcrb
xor
cmp
mov
sub
jns
js
mov
pushf
mov
push
aad
jae
mov
insb
decl
lea
out
enter
sub
jg
dec
subb
xchg
lods
dec
and
cmp
and
cmpsb
out
iret
sbb
mov
icebp
jle
pop
sbb
divl
mov
adc
inc
sub
scas
adc
xor
movsb
and
or
lock
xchg
std
xchg
sbb
cmpsl
addb
cmpsb
mov
mov
lds
xor
push
sarl
push
negl
mov
mov
ljmp
or
ret
loope
js
lahf
xor
aam
mov
or
leave
inc
inc
lods
mov
int3
mov
sub
mov
jg
aaa
ja
jno
jmp
faddl
xchg
adc
jbe
loop
popa
add
jne
xor
jbe
or
push
pop
mov
inc
loope
ljmp
sbb
jge
mov
out
xor
cmp
sbb
bound
jno
mov
lret
sub
ret
xchg
push
dec
cmp
iret
adc
mov
aad
stos
push
sub
cmpsb
inc
das
inc
pop
cmp
lods
xor
roll
jl
rcrb
arpl
ud0
std
or
ret
pop
jmp
bound
repz
mov
xchg
push
and
shl
fnstenv
pop
cltd
cld
rcrl
jns
dec
pusha
jl
lret
hlt
sbb
dec
fstp
xchg
popa
rcll
dec
mov
push
int
mov
jae
daa
mov
lret
cmc
pop
push
cld
cmp
mov
leave
push
sahf
jmp
imul
xor
adc
add
or
mov
cltd
inc
xor
push
push
pop
dec
loop
lods
add
jecxz
mov
and
fs
aas
dec
pushf
xor
das
cmpb
cmp
inc
xor
out
rol
mov
mov
xchg
adc
sbb
cmp
jne
lahf
cmp
adc
rcrb
add
addr16
mov
call
cmp
in
sub
and
ss
ss
fs
call
and
xchg
mov
mov
cmp
inc
shlb
sub
enter
fsubl
imul
outsb
mov
in
iret
adc
cld
sub
push
aas
mov
lods
pop
cltd
pop
loope
mov
lahf
xor
lcall
xchg
mov
mov
sbb
xor
gs
xor
fldt
xchg
ja
mov
jne
jle
cli
gs
test
cld
jae
push
mov
mov
push
push
jns
cld
stc
xchg
cmpsb
jno
xchg
shll
add
adc
sti
xchg
jmp
test
cmp
sbb
and
mov
xor
xchg
jl
inc
sbb
bsr
lea
lret
cltd
push
mov
scas
js
dec
adc
and
insb
lret
cmc
add
hlt
sub
mov
mov
add
test
pop
jo
jp
rolb
stos
mov
add
or
lea
sbb
cmp
jbe
and
int
in
pop
sti
jno
inc
mov
imul
aam
xchg
arpl
push
rcll
dec
lret
sbb
lcall
clc
aaa
mov
xor
das
popf
popa
xchg
call
leave
pop
scas
add
cmp
add
insl
xchg
adc
add
sbb
sub
jg
xor
aas
stos
xchg
push
jno
out
imul
mov
insl
jge
pop
dec
and
xor
pop
lret
pop
shlb
jnp
lods
sbb
push
and
push
jmp
movsb
jns
pop
jp
outsl
outsb
pop
fwait
insb
jle
out
and
jmp
jns
ljmp
mov
lea
in
addr16
inc
mov
popf
dec
sbb
fdivrl
test
adc
or
jbe
xlat
push
sti
aad
mov
pop
outsl
das
cmp
pop
rorb
mov
mov
mov
data16
push
push
cmp
test
mov
xor
inc
xchg
sub
lods
mov
dec
adc
movsb
jno
pop
int3
and
stos
stc
ss
clc
xor
mov
shl
jge
cmp
add
loope
out
insb
setb
push
call
int3
and
xchg
mov
mov
movsb
jns
test
jge,pn
push
sti
hlt
loope
pusha
mov
sarb
shll
mov
gs
js
cmp
push
loopne
lods
sahf
test
inc
dec
push
push
xorb
xchg
call
adc
mov
inc
pop
out
dec
bound
cltd
push
xchg
rorl
sub
or
jmp
xchg
jmp
mov
inc
inc
orl
les
push
fcmovbe
fisubrs
outsb
pop
nop
pushf
push
imul
mov
push
xor
inc
ja
cmp
sub
scas
aam
pop
lock
xor
add
or
mov
jl
xor
stos
into
dec
mov
mov
xchg
mov
jmp
fisttpll
and
cltd
pop
jnp
adc
mov
xchg
fistps
jle
out
pop
mov
shrb
leave
push
push
iret
push
add
xor
add
ficoml
pusha
adc
xor
xlat
xlat
ss
mov
push
xchg
fs
jnp
xchg
lahf
dec
dec
xchg
xor
rolb
fsubs
adc
jge
shrl
sahf
mov
sbb
push
repz
mov
mov
fwait
dec
mov
cld
pop
sahf
stc
rcrl
fimull
dec
add
xor
push
push
sub
or
call
filds
add
lods
sub
outsb
inc
stos
mov
mov
push
cmpsl
iret
das
insb
stos
or
push
mov
inc
cli
lahf
clc
ljmp
pop
fisubs
pop
scas
in
pop
dec
and
jbe
or
or
rorl
mov
xchg
and
xor
mov
pop
out
jle
data16
jno
insb
into
sub
push
lods
call
xor
jae
fcmovu
cmp
rclb
popa
out
jae
fmull
push
sbb
mov
out
push
pop
mov
jp
or
cli
dec
pop
mov
jle
or
test
and
cmpsb
test
or
addr16
dec
xchg
in
xor
stos
je
pop
lds
adc
clc
jo
cs
incl
scas
sub
subb
jne
loop
push
icebp
lds
jge
pop
mov
outsb
inc
mov
xor
outsb
cli
mov
push
aam
xchg
pop
int
sbb
ss
ds
push
mov
inc
xchg
sub
add
add
push
dec
mov
xchg
sbbl
mov
dec
mov
push
addb
inc
sub
jle
imul
sbb
xor
rcrb
or
push
cmp
xor
sbb
sarl
mov
mov
mov
lods
jle
jnp
pop
xor
in
mov
mov
sti
jmp
stos
pop
outsl
mov
xor
mov
in
cmc
int
or
xchg
add
sarb
inc
bound
mov
push
aas
cmp
ss
push
inc
dec
in
sub
nop
inc
fs
xchg
dec
jmp
js
pop
and
mov
mov
push
mov
gs
xchg
nop
cmp
pop
jmp
scas
cmc
fnstsw
mov
int3
mov
mov
xchg
cmpsl
in
add
push
mov
sbb
mov
xor
xor
jp
cltd
push
cmpsl
mul
dec
loop
sbb
dec
ja
loopne
icebp
add
rorb
in
enter
dec
int
test
sahf
scas
pushw
cmc
xor
jo
or
stos
hlt
data16
add
sub
adc
mov
in
mov
repz
mov
or
sub
add
daa
out
and
sub
jmp
out
call
adc
mov
xchg
in
xor
pop
icebp
rorl
xchg
sbb
dec
mov
jno
ja
gs
aas
xor
and
mov
test
pop
inc
jge
insl
mov
push
loope
jb
lods
ja
add
test
enter
cltd
add
push
fmul
rcr
xor
sarb
pop
out
inc
mov
sbb
nop
inc
arpl
arpl
sub
cmpsb
mov
lea
or
or
xchg
stos
nop
inc
xor
cmc
popf
push
fbld
fdiv
fisttpll
pop
stos
mov
sbbb
push
and
jo
add
in
js
and
loope
push
mov
rclb
xlat
fyl2x
imull
xchg
pushl
lea
pop
stos
sahf
sub
push
push
jle
sub
dec
insl
sub
xlat
rorl
fstpt
mov
sbb
cmc
jns
filds
sbb
jne
adc
es
xlat
inc
shl
jmp
push
lods
adc
pop
cmp
call
mov
ret
insb
jecxz
pop
scas
out
fisubl
es
orb
test
in
mov
adc
imul
int3
adc
xchg
jns
sub
pop
mov
jle
repz
add
scas
mov
dec
insb
cli
jle
xchg
movsb
and
cmp
pop
sub
mov
outsb
pop
mov
andb
movsl
iret
dec
fimuls
sbb
imul
adc
pusha
in
rolb
xchg
imul
test
adc
nop
dec
std
sub
pop
xor
shll
sub
add
pushf
daa
in
cmpsb
out
pop
adc
jl
jmp
xor
mov
cmpsb
cld
sub
test
repnz
aas
push
lods
lcall
push
repz
and
pop
cmpb
sbb
dec
dec
daa
or
push
dec
outsl
cs
std
icebp
mov
xor
mov
nop
fidivs
cld
mov
ret
addb
jecxz
add
pop
ret
outsb
sub
jns
aam
stos
dec
push
jg
inc
mov
test
cmpsb
xchg
dec
lahf
outsb
insl
jae
sbbb
mov
gs
test
mov
or
push
lds
clc
pop
jns
movsl
lret
outsl
jp
or
lahf
sub
sbb
call
pop
pop
adc
jecxz
lods
jecxz
pop
test
loop
jo
cmp
pop
js
mov
jno
mov
and
int3
xchg
adc
push
fists
jg
push
dec
fcoml
jmp
xor
adc
inc
sub
jnp
popf
aam
add
pop
out
mov
mov
loopne
xchg
xor
in
push
cmpsl
push
mov
cwtl
and
and
push
insl
sub
add
pop
popw
sbb
imull
cmp
fstl
outsl
dec
pop
xchg
add
enter
test
icebp
pop
fwait
jg
gs
fdivrl
lock
mov
sbb
test
sub
mov
out
and
jns
adcl
ss
jmp
adc
pop
outsl
jo
insl
clc
pop
fisubrl
dec
subb
or
push
sbb
pop
inc
inc
in
insb
addl
fcoml
xor
inc
xchg
sub
imul
push
xchg
sub
or
push
adc
add
xchg
pop
stos
cmp
test
jne
pop
jge
xor
xchg
cmpsb
dec
fs
addb
inc
nop
add
imul
cli
mov
sti
push
fsubrp
xchg
stos
fstl
xchg
cmp
aas
cld
cwtl
adc
dec
mov
mov
addr16
cmpsb
pusha
cmp
in
insl
mov
push
popf
cmpsl
dec
mov
mov
lret
popf
nop
mov
push
mov
movb
mov
mov
jl
in
test
repz
mov
add
jmp
in
ret
add
mov
loop
xlat
xor
rolb
xrelease
adc
das
into
out
sub
cmp
test
jp
out
sbb
aad
mov
inc
ss
lds
inc
adc
xor
and
jl
push
jno
jno
outsb
stos
mov
mov
xor
jb
ljmp
cs
add
xor
shr
cwtl
ds
dec
mov
mov
jns
jecxz
adc
pop
loopne
inc
push
ja
addr16
or
sub
ret
lret
and
adc
outsl
and
pushf
cmp
dec
mov
cli
jmp
das
mov
int
loope
mov
mov
scas
scas
jne
int
test
inc
mov
leave
pop
mov
mov
mov
adc
cmp
fldl
nop
popf
jo
or
gs
inc
jb
cmp
ds
cwtl
shl
jae
mov
pop
popf
pop
out
dec
jl
fildll
ficompl
push
add
pop
fmuls
lahf
and
loopne
push
repnz
inc
aas
xor
mov
jge
insb
mov
lods
inc
sbb
cmp
mov
test
add
leave
xchg
inc
repz
and
lret
mov
cmp
aam
and
out
push
scas
xor
jne
mov
enter
cwtl
mov
pop
popf
mov
mov
mov
dec
jg
cmpsl
push
dec
sbb
data16
push
mov
xor
pop
cmpsb
pop
loop
cli
jbe
inc
lock
mov
or
pop
xchg
xchg
ljmp
loope
cmp
mov
dec
push
filds
out
notb
jmp
aam
shll
aaa
cmp
push
lahf
push
push
ret
aas
pop
enter
sub
or
push
fwait
xor
sbb
or
fmuls
jmp
movsb
cmp
pushl
test
cmp
icebp
sbb
mov
jns
orl
dec
repz
fwait
jnp
int3
std
lahf
inc
popf
mov
jge
call
std
sub
test
sub
mov
mov
push
mov
inc
xchg
movsb
push
xchg
out
mov
iret
adc
into
sahf
repz
add
dec
testl
sahf
inc
lds
cmc
mov
mov
add
rcl
pushf
sti
add
xchg
lods
inc
pop
pop
or
add
jne
fdivrl
or
mov
rolb
sbb
jb
sbb
mov
dec
jae
adc
and
pop
xor
out
les
testb
pop
and
xchg
push
inc
xor
mov
pop
mov
jge
adc
add
rolb
loopne
sub
in
pop
xchg
cmc
inc
sbb
scas
sti
xchg
pop
jbe
or
push
repnz
das
mov
lods
inc
orb
rcrb
or
ret
mov
das
repnz
xchg
pop
mulb
sbb
lock
dec
je
mov
mov
mov
cmp
pop
mov
sbb
imul
or
and
loope
inc
out
shll
pop
mov
dec
xchg
push
iret
sbb
xchg
cli
insb
sub
loopne
scas
mov
shrl
cmpsl
inc
xor
jg
sbb
stc
mov
jne
aaa
mov
aaa
pop
faddl
aad
push
les
ljmp
xchg
push
dec
inc
ljmp
mov
ljmp
mov
stos
aad
aas
icebp
push
mov
lods
decl
out
pop
sub
pop
or
sub
xchg
adc
int
push
jle
dec
dec
daa
daa
dec
push
mov
push
xchg
test
scas
xchg
mov
scas
mov
xchg
test
cvtps2pi
ss
add
sar
push
inc
push
in
mov
and
call
mov
dec
addr16
lahf
xchg
loope
scas
cmp
mov
cmc
notl
xchg
push
pop
ljmp
lcall
xor
call
adc
stos
sti
adc
in
sbbl
mov
nop
cmp
jbe
xor
mov
sbb
jmp
jno
sbb
push
fwait
sub
aam
jns
icebp
jmp
add
aam
aad
mov
ret
xor
or
and
daa
pop
imul
jl
dec
xor
push
jb
mov
sub
cmpsl
mov
insl
sarl
aas
mov
inc
inc
sbb
insl
pop
mul
dec
mov
imul
pop
jne
dec
fldl
sarb
inc
imul
scas
ss
out
loopne
stos
arpl
gs
pushf
dec
pop
xor
arpl
ss
pop
mull
je
add
xchg
push
bndldx
out
inc
mov
enter
scas
aaa
xchg
jb
adc
jecxz
push
push
adc
add
sbb
pop
push
add
pop
xor
movsb
dec
xchg
or
add
inc
cmpsl
add
pop
ljmp
sti
int3
out
daa
xchg
cmpsb
inc
push
mov
aaa
cmc
lods
pop
ss
push
sbb
daa
orl
pop
jb
jl
es
addb
sub
push
dec
push
sbb
cmp
aaa
fsts
dec
or
int
pop
fs
sbb
test
shlb
lahf
add
rol
and
mov
inc
or
or
lret
xor
loope
xchg
adc
cmc
inc
out
imul
mov
imull
js
pop
xchg
pop
xchg
cmp
push
ret
cmpsl
mov
leave
test
into
xor
cs
popf
stos
cltd
mov
pushf
pop
loop
xchg
mov
mov
lahf
jmp
mov
sub
jg
sbb
dec
jmp
xor
adc
mov
push
cmpb
int3
enter
cwtl
jge
or
mov
xor
pop
rcrl
xor
subb
or
ret
pop
push
lock
lods
stc
ds
cmc
pop
loopne
push
xor
cs
sahf
out
push
into
adc
cmp
push
inc
scas
stos
cmp
xor
sub
loope
xchg
xor
jge
xor
pop
hlt
test
dec
add
jne
push
popf
jl
cmpl
mov
clc
push
add
xor
jne
fwait
pop
fstpl
xchg
lods
xchg
mov
dec
jo
stos
movsl
inc
mov
aam
mov
or
jne
inc
pop
shrb
testl
fdivs
sarl
push
xor
aad
xchg
scas
or
sub
or
fwait
push
movsb
fdivl
repz
aad
stos
loope
adc
inc
movb
mov
and
insb
imul
mov
roll
inc
daa
popf
fistl
jns
push
mov
aad
shl
int3
xchg
push
push
mov
or
push
into
stc
jp
mov
adc
xor
sahf
sub
xchg
jmp
xchg
sub
shll
mov
sbb
sahf
sub
and
inc
test
push
lds
sbb
xor
enter
pop
jmp
stos
dec
fnstsw
adc
mov
push
scas
lea
fs
sub
add
mov
adc
outsb
xor
pop
lds
push
rcrl
aam
mov
adc
jb
lret
push
dec
dec
iret
roll
lock
ret
jbe
out
test
adc
xchg
cld
jle
pop
js
sub
fs
shrb
fs
fs
xor
sbb
frstor
dec
mov
cltd
jne,pn
jge
scas
icebp
push
fldenv
aam
into
mov
jmp
sbb
out
fildl
sbb
add
ja
imul
lea
clc
outsl
clc
in
jg
fimuls
add
shrl
icebp
shl
js
push
enter
jbe
ljmp
push
sub
and
cmp
xchg
in
ds
jae
xchg
inc
clc
xrelease
test
inc
sbb
mov
scas
sbb
pop
fstps
pop
leave
xchg
or
add
ss
mov
mov
mov
pop
add
push
je
mov
xchg
daa
fwait
aam
adc
mov
sub
mov
mov
xor
mov
dec
pusha
out
jl
push
xchg
call
data16
mov
mov
aad
ret
inc
neg
test
mov
icebp
addr16
mov
pop
enter
movb
pop
sbb
pop
cltd
fs
das
sbb
insb
push
push
pop
test
inc
mov
pop
test
bound
lods
insb
jo
ror
mov
mov
jecxz
in
inc
fnsave
aas
mov
jnp
jmp
pop
mov
roll
ljmp
test
mov
pop
inc
inc
sub
jnp
clc
loopne
out
sub
adc
enter
mov
pop
out
add
es
jle
ds
sarb
loope
ret
popa
jmp
pop
jo
ljmp
jb
cwtl
cltd
test
test
dec
sbb
jne
imul
adc
sbb
enter
aaa
push
dec
sbb
movsl
cmp
dec
ljmp
dec
and
mov
inc
mov
sbb
pushf
cs
pop
clc
addb
bound
gs
adc
or
fiadds
sbbb
and
adc
hlt
add
mov
fdivl
lahf
insb
push
stc
or
aam
mov
mov
or
jmp
mov
adc
shlb
push
imul
push
idivb
dec
subb
push
mov
sbb
sahf
sub
add
push
mov
jmp
inc
jno
cs
mov
push
sbb
leave
xor
cmp
push
mov
idivb
nop
je
mov
xchg
pop
std
add
push
add
jae
jmp
sbb
test
mov
fidivrs
dec
in
das
inc
sbb
jmp
cs
mov
loop
jl
aad
int
fwait
pop
xor
jmp
inc
push
das
shlb
lea
adc
jecxz
je
clc
scas
mov
push
aam
pop
sbb
imul
fbld
and
cmp
bound
nop
mov
xchg
xchg
add
lcall
pop
inc
ja
out
mov
es
rolb
dec
adc
aam
xchg
imul
push
push
dec
lret
add
dec
call
adc
sub
inc
fbld
mov
cmp
cs
mov
lahf
test
dec
jae
mov
test
std
subb
aam
stos
xchg
pop
divl
enter
pop
push
out
lods
mov
std
popa
xchg
daa
xchg
ror
int3
pusha
mov
adc
lods
pop
dec
dec
fdivs
sub
in
sub
ror
inc
dec
test
ljmp
cmp
mov
lret
xchg
adc
dec
mov
inc
inc
push
xchg
xchg
adc
push
test
xor
ret
int3
sub
add
add
jg
shlb
push
lods
inc
xchg
add
test
or
movsl
hlt
sti
xor
cmc
stc
push
jb
insl
push
test
or
sub
loopne
add
push
call
aaa
dec
in
jle
lods
data16
jbe
imul
das
jl
insl
jle
inc
lret
dec
pop
out
jne
testb
cmp
jle
stos
das
out
test
pop
and
sub
adc
sub
jo
repnz
inc
idiv
orl
loopne
popf
and
je
clc
jge
fiadds
cmp
mov
adc
jns
das
cli
call
ds
pop
push
pushf
xor
cmpsb
mov
pop
cmpb
lret
lds
cmp
xchg
push
shll
leave
dec
and
repnz
inc
jecxz
xlat
xchg
push
xchg
fwait
in
push
add
jmp
xchg
inc
sbb
std
sub
pop
loopne
fs
hlt
sti
aas
xor
xchg
sbb
bound
in
dec
dec
add
adc
fcompl
pop
push
cs
fstps
insl
inc
cld
xchg
jmp
aas
sbb
leave
inc
pushf
lock
fcmove
incb
jge
inc
ss
mulb
xchg
addb
mov
and
ljmp
das
movsl
movsb
or
shrb
imul
mov
xor
mov
and
push
sbb
mov
dec
test
mov
call
cmp
orl
test
fwait
mov
cmp
jns
mov
repz
std
lcall
fsubs
jno
ret
jmp
jne
sbb
adc
cltd
fnstcw
xchg
inc
lods
pop
xor
xor
push
enter
jmp
imul
ja
xlat
fildl
inc
mov
sbb
and
stc
mov
les
jno
mov
jmp
push
mov
mov
jae
nop
sbb
pop
push
mov
cwtl
aas
decl
test
shll
pop
mov
loop
xor
loop
and
xchg
sbb
push
arpl
movsb
sbb
nop
push
sti
or
cli
cld
stos
jp
fisubrs
rolb
cmp
faddl
orb
jmp
hlt
testb
mov
dec
jne
sub
imul
insb
lahf
fdivr
pop
js
jo
pop
mov
lahf
shrb
mov
pop
es
and
jno
addr16
sub
mov
fidivrs
inc
stc
add
xor
out
jle
scas
into
mov
fldl
pushf
shll
test
cmp
mov
int
movsl
cmp
mov
fwait
or
sub
add
or
xor
rorb
mov
jb
shr
sbbb
jne
das
ss
xchg
loope
mov
mov
fs
in
fdivl
les
pop
mov
sbbb
ja
xlat
adc
std
push
fsubl
cld
fdivrs
and
daa
jnp
xor
repnz
ja
mov
fcmovbe
adc
push
test
jo
frstor
inc
test
xor
insb
test
dec
sbb
jl
push
in
add
outsb
mov
stc
arpl
add
clc
ficoms
sbb
sbb
mov
xor
xlat
sbb
xchg
out
jle
cmpb
dec
inc
int
pop
mov
pop
mov
leave
xor
add
shl
jp
mov
xchg
lods
stc
xor
push
mov
sbb
mov
addr16
xchg
in
shll
jl
jecxz
jo
repnz
cltd
mov
ja
xor
push
push
dec
lret
fiadds
mov
out
imul
or
enter
add
push
loopne
push
dec
jmp
ss
push
mov
xchg
insl
inc
movsl
outsb
mov
sub
test
pop
pushf
push
rcll
push
test
wrmsr
jne
dec
adc
adc
das
movsl
or
and
jl
rorl
push
sti
sbb
sub
dec
pop
out
add
xor
push
in
xor
in
jae
adc
inc
cmpsl
mov
mov
or
fucomip
sti
push
test
dec
lret
push
aaa
jg
mov
jp
and
sti
mov
rdpmc
mov
jecxz
adcb
jbe
add
mov
or
mov
inc
mov
movsb
cltd
add
fxch
add
lods
insb
lock
addr16
sub
xlat
insb
push
aam
xchg
inc
xor
mov
cli
jae
ja
fwait
in
pop
cmpsl
mov
std
lret
sbb
bndldx
push
leave
xor
ljmp
push
push
cmc
jae
jne
jns
pop
lret
hlt
ljmp
jo
les
rolb
xlat
sub
push
pop
sub
pop
aam
fsts
mov
imul
mov
clc
mov
fsts
adc
add
aad
movsb
rorb
shrb
inc
inc
sub
mov
mov
iret
bound
pop
jmp
jge
xor
test
dec
call
jle
jmp
clc
add
aam
int
add
adc
fsts
sub
push
lock
outsb
sbb
test
inc
mov
in
and
clc
jl
push
arpl
stc
mov
je
jae
popa
decb
sbb
or
add
fstl
inc
mov
sbb
jle
mov
xchg
add
cmp
mov
leave
fisttpll
lods
sub
inc
gs
cltd
inc
add
jge
xchg
test
mov
lahf
xchg
inc
out
mov
dec
rcrl
sbb
or
aam
cwtl
outsb
mov
jne
cmpsb
cmp
add
sub
test
adc
mov
sbb
push
sub
push
sub
mov
and
pusha
sbbb
lret
filds
aaa
xchg
jne
shll
cli
aad
sub
js
imul
xor
mov
add
or
jb
cmp
sub
ficoms
or
sbb
pop
out
dec
iret
adc
mov
cmp
mov
stos
mov
loope
in
mov
xchg
xchg
inc
clc
ret
and
mov
mov
fbld
into
push
dec
sbb
nop
adc
pusha
mov
or
dec
in
sbb
inc
push
popa
repz
mov
xlat
pop
xor
popf
and
aas
sub
mov
jmp
and
add
je
mov
rorl
lret
inc
sahf
test
sbb
int
xor
dec
adc
sub
mov
pop
jge
dec
pop
cwtl
ljmp
mov
sbb
scas
mov
ljmp
xchg
jp
les
insl
ret
mov
sti
aaa
jae
js
rcrl
jae
xchg
pop
fwait
xchg
inc
add
xchg
fprem1
stos
out
mov
iret
outsb
cmp
and
mov
sub
jne
popf
xchg
xor
dec
inc
pop
mov
mov
push
cmp
inc
and
pop
mov
mov
fisubl
ret
clc
jno
fstps
push
fcoml
popa
mov
iret
jb
mov
stos
repz
xor
dec
int
cld
push
adc
add
or
test
xor
and
jecxz
scas
in
sbb
xchg
mov
sahf
cmp
jo
ds
test
lods
stos
add
testb
cmc
nop
inc
fwait
leave
loopne
imul
and
and
push
push
idivb
push
push
xchg
jmp
jecxz
jne
dec
push
mov
dec
mov
push
js
daa
and
roll
jo
and
cmp
ds
enter
add
insl
sbb
stos
push
sbb
or
outsb
mov
push
inc
mul
nop
adc
mov
shlb
or
loope
lock
ficoms
mov
pop
xor
in
mov
stos
jnp
mov
push
adc
jle
dec
divb
movsl
lock
jno
inc
push
enter
pop
std
inc
mov
sti
cwtl
lea
cmp
lahf
pop
push
and
addr16
popf
inc
mov
adc
rol
push
mov
mov
popa
jns
fs
int
dec
jne
mov
in
or
call
adc
pop
sahf
sub
dec
adc
and
lds
mov
je
inc
mov
bnd
aad
xchg
push
pop
fldcw
sar
popa
aaa
pop
sub
push
or
cmp
add
cwtl
pop
outsb
dec
orl
add
jp
cld
loope
cmp
xor
outsl
fnstenv
stos
xchg
out
push
xchg
gs
mov
out
jp
pop
xor
mov
and
xchg
inc
loop
jmp
mov
test
xchg
pop
jb
lahf
and
xchg
xchg
sub
jle
jb
mov
loope,pt
leave
lahf
popf
xchg
imul
idivl
popa
push
popf
lock
fisubrl
test
mov
mov
push
add
popf
sbb
xchg
dec
xor
rcrl
pusha
mov
fiadds
cmpsb
dec
rorl
lahf
add
xchg
aas
sub
hlt
jecxz
adcb
add
mov
lcall
pop
arpl
cmp
imul
sbb
dec
inc
insb
popf
mov
sub
xor
gs
pop
loop
lret
aas
bts
xlat
sarb
or
ljmp
adc
sub
ds
cmc
js
iret
scas
lret
inc
push
dec
or
push
lcall
xor
mov
jmp
xchg
jae
mov
mov
int3
icebp
mov
cli
and
cmp
mov
leave
and
loop
jmp
das
mov
push
cld
inc
orb
xchg
ljmp
xchg
in
xchg
mov
gs
push
jl
ds
jo
dec
inc
xchg
push
xor
mov
lahf
test
inc
mov
and
cmp
imul
mov
lds
adcl
imul
sub
or
into
cmc
pop
out
rorl
mov
cmp
and
push
fnstcw
movsl
pusha
cld
xor
xor
or
dec
pop
mov
cmp
ret
and
push
or
out
fmul
hlt
and
dec
xchg
mov
bound
xchg
inc
ret
jg
pop
xchg
and
jns
std
pop
add
add
lahf
xchg
bnd
inc
adc
jnp
aam
and
sub
or
outsl
jp
aad
outsl
je
mov
repnz
adc
mul
call
cmp
inc
or
xchg
mov
or
out
cmp
shlb
jmp
sub
mov
hlt
in
and
pop
aad
xor
fs
push
rcrl
les
pop
sbb
dec
clc
add
lret
das
mov
repz
pop
ss
xor
add
cs
and
pop
pop
pop
dec
popf
mov
xor
inc
fnstsw
into
jmp
lcall
repnz
push
inc
hlt
mov
in
stos
ffreep
xchg
call
cmpsl
push
sbbb
adc
inc
mov
clc
pop
sti
aam
shl
test
jecxz
fstps
cmp
aas
rcrl
sub
ljmp
add
and
jo
mov
push
divb
adc
xchg
pop
lcall
or
loop
xor
and
xor
ret
or
mov
and
or
and
pop
mov
mov
dec
ss
aam
fwait
mov
cmpb
or
mov
push
or
push
sub
and
std
jne
add
stc
cmpsb
push
inc
jecxz
stos
sub
xchg
cld
mov
leave
mov
int3
test
out
aaa
dec
push
repz
cmpl
mov
sti
cld
inc
inc
dec
adc
jmp
inc
add
or
dec
xchg
sbb
or
jne
movsw
xor
repnz
jns
orl
xlat
insb
imul
aas
cld
mov
lods
push
or
arpl
mov
jns
jno
or
scas
jo
int
js
jnp
cmp
fsubs
mov
jbe
or
dec
mov
inc
movsb
jle
pop
mov
and
dec
in
push
dec
outsb
fmuls
test
push
icebp
or
adc
cwtl
fmuls
outsb
push
mov
into
sub
orb
loope
lahf
jae
stos
insl
rcrl
inc
ret
pop
or
dec
les
out
andb
jg
fadd
out
enter
push
mov
cmp
push
mov
loopne
pop
in
mov
mov
pop
out
aad
xchg
adc
jle
jnp
pop
push
daa
mov
cmp
xor
sbb
dec
pop
aaa
pusha
mov
push
movsb
fisubl
stc
jl
jne
orb
aaa
sahf
into
add
or
push
cmp
push
jmp
sub
xchg
dec
aad
xchg
mov
add
and
clc
movsb
mov
test
stc
add
adc
sub
xor
sub
mov
sbb
or
out
es
mov
test
or
push
jb
rol
hlt
fwait
enter
insl
dec
mov
push
xchg
push
hlt
cmpsb
xchg
dec
pop
rorl
adc
pushf
push
jns
aam
popf
sub
jecxz
xor
addb
jb
xor
fwait
push
add
cmp
fisubl
dec
cmp
lcall
lahf
mov
mov
cmp
mov
loop
dec
int3
push
xor
fisttpll
push
lcall
fwait
popa
scas
add
outsb
or
cmc
or
mov
leave
scas
pop
into
pop
xchg
mov
cmc
push
fidivs
out
mov
gs
inc
inc
cs
leave
int
test
stc
adcb
int
pop
sahf
test
pusha
es
adc
add
fwait
insl
out
scas
cmpsb
js
imul
dec
es
sub
xorb
imul
pop
imul
push
repz
xor
cli
mov
jns
in
aaa
aaa
inc
cmpb
push
dec
sbb
mov
mov
mov
mov
push
sbb
fdiv
jne
mov
or
mov
mov
jo
xchg
jmp
mov
movsl
mov
stos
cs
adc
pop
sbb
xorb
imul
xchg
inc
frstor
mov
loope
or
dec
mov
sub
jbe
dec
or
add
or
xchg
adc
outsl
cmpsl
mov
push
inc
cli
mov
cld
sub
jmp
mov
rcrb
loop
nop
fwait
fs
mov
mov
xchg
std
cld
adc
mov
fiaddl
aam
imul
or
stc
stc
iret
sub
pop
in
push
cs
test
mov
imulb
mov
mov
jnp
mov
dec
sub
test
dec
arpl
lock
push
sahf
push
fbstp
sarl
or
fistps
pop
ret
insl
ljmp
cmpsl
dec
cmpsb
fidivrs
xchg
xor
mov
jmp
xchg
sub
xchg
dec
std
mov
adc
mov
test
or
scas
dec
mov
fcoms
inc
into
das
aas
mov
sub
popa
or
dec
mov
ret
leave
fsubl
mov
mov
das
shl
dec
fs
into
xor
and
daa
jg
jne
out
jns
shlb
jae
xor
mov
jo
mov
inc
insb
push
pop
je
cld
mov
jge
adc
inc
aas
push
add
add
cmpsb
cmpsb
mov
into
jl
mov
push
cs
mov
mov
inc
aaa
add
les
push
cld
out
xchg
mov
test
jmp
pushf
test
lret
jb
leave
scas
outsb
scas
nop
cltd
call
xchg
cmovl
xlat
cltd
mov
inc
fldenv
aaa
cs
test
add
lret
jnp
jns
xchg
ss
or
add
lods
mov
sub
scas
mov
dec
dec
adc
lcall
mov
aam
add
or
in
pop
inc
in
adc
aad
lds
push
call
pop
inc
inc
push
pop
sub
mov
iret
stc
aad
in
push
xor
ss
xchg
or
fisubs
jl
cmp
icebp
dec
mov
sub
dec
fbld
pop
std
push
mov
das
mov
mov
es
xchg
jne
leave
mov
int
adc
fistpl
inc
jns
mull
and
adc
in
std
jae
ret
enter
stc
xchg
lds
mov
xchg
sub
les
mov
inc
or
mov
xchg
fstpl
test
aaa
mov
mov
push
jne
xor
push
and
ljmp
cmp
lods
int3
enter
sti
lahf
repz
xchg
sbb
inc
dec
aas
jge
mov
sti
mov
incl
push
inc
jo
dec
leave
in
insl
cmpsb
and
xor
arpl
adc
pop
add
adc
mov
push
lcall
loopne
addb
sbb
mov
daa
sbb
into
dec
mov
push
cmp
xorb
shll
pop
jp
xchg
stc
push
and
and
add
xchg
hlt
xorb
lods
mov
or
push
push
fists
sbb
jg
add
cltd
add
sub
pop
data16
sarb
inc
rcll
loopne
mov
sahf
jnp
jle
mov
scas
inc
bound
xchg
pop
shll
ret
loopne
sbb
add
push
jae
and
pusha
pop
nop
sub
cmp
mov
adc
or
mov
mov
fistpll
push
ret
insb
sub
scas
push
sub
in
daa
lcall
mov
dec
shrl
mov
hlt
push
push
dec
xor
in
dec
int3
lret
addb
sarb
jge
sub
icebp
lcall
push
subl
aad
aas
jae
rcl
jae
fldt
jl,pt
arpl
cmp
sti
dec
stos
mov
push
and
and
cltd
mov
mov
mov
jmp
pop
incb
pop
divb
insl
and
jle
lea
cmp
mov
rcll
fisubl
cmp
rclb
pop
pop
mov
repnz
aam
dec
lcall
and
pop
dec
cmp
pop
in
mov
aad
arpl
mov
fildll
xchg
xor
leave
xor
jno
mov
fsubrl
inc
mov
cmp
lods
iret
das
pusha
popf
xor
jns
dec
cmpb
clc
das
mov
sbb
pop
call
add
push
movb
insb
xchg
xchg
mov
mov
into
fisubs
iret
adc
loop
sub
xor
jb
test
and
test
ja
inc
adc
arpl
xlat
ljmp
in
es
dec
or
mov
mov
push
push
jne
or
xchg
test
cmp
stos
ja
push
les
add
outsl
int
xor
repnz
xchg
andb
dec
cmp
outsl
das
mov
test
adc
repnz
xor
xchg
loop
das
xchg
stos
push
cmp
cwtl
lods
or
xor
pop
hlt
push
cmpsl
xchg
clc
adc
dec
dec
leave
loop
dec
mov
sti
mov
xor
push
lret
xor
lahf
xchg
fildl
insl
push
or
imul
test
cmp
repnz
bound
data16
iret
pop
out
repnz
adc
leave
leave
jp
push
cmp
xor
cld
sub
adc
js
clc
nop
jns
add
stos
or
rol
and
stos
jne
jo
lea
mov
out
pop
push
sbb
push
sub
mov
int3
scas
or
add
fistpll
out
cltd
sbb
and
outsl
sbb
push
or
sbb
inc
ret
adc
jp
mov
lahf
out
inc
mov
dec
aas
std
insl
cld
add
xor
ret
mov
dec
loop
fcoml
mov
cmp
mov
sbb
cmp
insl
sub
dec
std
pop
out
mov
enter
push
add
xor
sub
paddsb
popf
push
add
movsb
loopne
and
push
loop
xor
xchg
dec
ret
sub
mov
xor
shll
push
movsb
mov
rorb
std
jl
pop
bound
or
pop
push
pusha
push
xchg
ret
in
pop
outsl
xchg
mov
mov
fwait
lock
mov
mov
mov
int3
jnp
mov
mov
mov
pop
mov
jnp
aas
jae
fcomps
dec
push
push
sbb
std
ret
mov
loope
cmpsb
das
into
ffreep
sub
aas
jle
and
ja
movsl
call
xchg
add
js
pop
push
mov
insl
add
mov
xchg
or
push
sub
ret
pop
das
push
loopne
imul
mov
mov
out
dec
inc
rcrb
mov
add
lods
add
jmp
cwtl
adc
mov
je
and
mov
mov
xchg
inc
xchg
inc
mov
int3
xchg
sbb
fidivrl
push
mov
jno
insb
xchg
cs
pop
sub
jmp
ss
push
outsb
push
cmp
sarl
mov
lods
fldl2e
inc
outsl
pop
jb
pop
mov
out
lods
add
adc
pop
cmpsl
jecxz
and
dec
add
inc
mov
sub
pop
jp
and
jne
xchg
fsubl
push
es
xor
hlt
xchg
aam
aaa
or
int
dec
in
fs
sar
out
aas
loopne
in
ret
and
push
outsb
jmp
fs
mov
ljmp
dec
mov
into
lock
mov
mov
leave
out
xor
push
push
data16
jmp
or
mov
push
imul
outsb
pop
fisttpll
test
out
iret
push
mov
sub
jae
in
imull
outsl
and
sub
inc
pop
sbb
sbb
mov
ret
jl
adc
scas
pop
testl
enter
int
xlat
das
cmp
mov
rol
mul
loop
daa
orl
shlb
popf
popl
add
outsb
cs
push
mov
shr
inc
jno
std
fistpl
or
push
sbb
mov
loopne
clc
lret
repnz
dec
add
mov
fsubs
fcomps
bound
and
mov
sbb
adc
pop
insl
movsl
dec
ret
neg
add
push
pop
scas
mov
fcomip
mov
test
push
jae
cmp
jl
arpl
mov
gs
hlt
mov
cwtl
addr16
dec
jno
cmpsl
je
ret
pop
adc
fsubs
mov
xchg
dec
pop
adc
lret
lret
dec
ret
stos
cmp
jb
leave
sub
mov
sbbb
sub
mov
mov
mov
clc
inc
pop
adc
mov
push
nop
or
ret
repz
add
xchg
insb
pop
roll
clc
jp
mov
insl
mov
enter
cmpl
cmp
nop
lods
loopne
push
outsl
fmuls
push
inc
and
push
aas
adc
iret
in
jno,pt
adc
sbb
or
xchg
call
mov
and
jbe
loope
jno
or
inc
push
ljmp
mov
or
jle
in
xor
jle
mov
inc
movsl
cmp
int3
lods
jp
xor
loop
and
lret
or
fistl
push
ja
icebp
mov
imul
imul
mov
push
fisttpll
inc
imul
adc
jb
and
outsl
lret
mov
push
das
dec
sub
push
xchg
stos
ficoml
xchg
fnstcw
mov
dec
inc
popa
inc
jmp
inc
mov
jbe
pop
pop
mov
ds
mov
mov
shrb
jb
insl
pop
jp
jns
out
mov
jg
movsb
mov
push
add
xor
jnp
jae
int
into
sti
outsl
mov
sbb
mov
nop
mov
lds
add
cmp
mov
fwait
into
push
dec
lret
test
fldl
dec
push
and
xchg
and
sbb
cmpsl
push
mov
xor
push
inc
out
pop
dec
xchg
rcr
xchg
push
push
xchg
lahf
lea
gs
ficoms
cmp
sub
or
push
movsl
xor
add
or
mov
mov
mov
fwait
pop
loope
and
mov
repz
arpl
dec
sub
shll
mov
enter
repnz
lock
and
push
jno
jp
and
add
test
and
out
cltd
pop
pushf
dec
pushf
jge
or
dec
xchg
and
cmp
mov
push
xchg
inc
add
mov
shrl
xor
jle
mov
push
rcr
hlt
or
mov
in
arpl
dec
test
popf
push
jmp
jge
ss
pushf
sbb
std
fdivs
out
xchg
add
jle
pop
test
dec
out
cmpsb
jnp
pop
xchg
ljmp
icebp
movsl
lcall
aas
shlb
mov
xchg
repz
pop
ficomps
mov
or
out
push
jno
mov
call
mov
jl
xchg
movsl
mov
mov
enter
lret
iret
jno
in
push
push
fs
notl
lds
out
sbb
or
dec
lds
sub
sbb
xor
iret
je
aaa
adc
outsl
lahf
mov
mov
bound
std
aas
aad
movsl
dec
les
bound
mov
out
outsb
gs
iret
xor
es
stos
jb
leave
loopne
adcl
clc
lahf
int
push
fsubrp
cmpsb
das
sbb
outsl
sbb
xchg
lock
stos
gs
add
std
xchg
push
cltd
aad
or
pushf
xchg
out
jnp
test
dec
mov
in
cmp
insb
push
pushf
cmp
cld
dec
pop
popl
add
push
test
clc
xchg
insl
enter
push
xchg
idivl
and
cli
sarl
js
das
aaa
in
pop
es
fisubs
jbe
inc
mov
outsb
push
push
mov
scas
ret
add
cmp
paddsb
cli
cltd
int
pop
adc
dec
dec
jg
sbb
mov
stc
je
mov
sbb
movsl
jo
cwtl
fnsave
xchg
cmpb
iret
fstl
out
lods
mov
mov
xchg
xchg
dec
rolb
gs
stc
and
scas
repnz
pop
loop
and
jl
and
insl
jo
xchg
pop
lods
push
jl
loopne
and
pushf
movsb
mov
sub
sub
xchg
or
or
sahf
push
lds
enter
pop
mov
iret
ret
inc
rcl
stos
xor
int3
out
scas
push
or
push
pop
dec
fstpt
xchg
inc
out
sbb
cmp
jmp
icebp
cs
lea
jge
adc
inc
jl
push
dec
gs
ljmp
in
call
mov
pop
addr16
in
into
cmpsb
mov
sahf
into
cmp
jbe
mov
dec
push
movsl
ljmp
ljmp
cmpsl
xchg
fcmovbe
iret
pop
sub
test
push
popf
or
or
jecxz
xchg
add
lods
sti
ret
cmpsb
cmpsl
ret
shlb
shll
or
arpl
jne
out
xchg
inc
mov
xchg
jbe
in
repnz
ret
out
daa
cmp
push
mov
mov
gs
sbb
lret
movsw
loope
movsl
adc
and
or
xchg
jecxz
or
int3
mov
idivl
and
mov
sub
shll
or
or
int3
adc
cmp
add
in
push
pop
arpl
stc
mov
sti
inc
sub
jo
sub
cmp
push
mov
ljmp
xchg
daa
jns
adc
fcoms
insb
mov
iret
pop
lcall
or
sbb
dec
jbe
out
mov
daa
dec
xlat
mov
sub
mov
push
mov
and
cwtl
hlt
and
adcb
movsb
xchg
ss
jbe
mov
arpl
inc
mov
add
bound
mov
mov
es
add
and
insl
lcall
push
sahf
adc
pop
jecxz
pop
movl
add
adc
jb
je
or
ficoml
stos
rolb
mov
mov
push
jecxz
std
mov
mov
mov
push
sub
adc
lret
out
je
push
push
cmpsb
cwtl
std
sbb
cli
push
add
sub
adc
fisubs
shlb
dec
vrsqrtss
cmp
xor
mov
sbb
aad
push
mov
lods
shl
xor
mov
jno
filds
cmpsl
and
lcall
and
pop
shrl
scas
adc
loope
sbbl
or
sbb
ret
inc
mov
lods
jnp
adc
jl
pop
dec
mov
mov
inc
iret
scas
mov
iret
push
cltd
popf
hlt
mov
mov
aas
addr16
mov
xchg
push
add
aas
bound
roll
cltd
mov
jo
sbb
mov
incb
xchg
data16
push
mov
in
mov
add
enter
insb
ljmp
div
xchg
sar
and
or
push
adc
adc
int3
pop
dec
lea
loop
mov
das
outsb
add
push
xlat
dec
mov
adc
sub
cmpsb
jbe
dec
inc
pushf
mov
popf
dec
fnstenv
mov
adcb
push
imul
outsl
xchg
jne
lcall
push
cmp
dec
ret
cltd
popf
inc
dec
sbb
out
adc
stos
nop
pop
loopne
mov
sbb
and
inc
clc
dec
mov
mov
pop
out
mov
fldt
sbb
es
stc
adc
push
iret
js
sbbb
insl
mov
jp
pop
xor
pushf
pop
in
inc
call
cld
cmpsb
mov
sbb
stos
test
bound
testb
faddl
fstps
xchg
lods
outsl
sub
push
movsb
mov
xor
test
lock
test
scas
jnp
xor
pop
sbb
cli
roll
lahf
stos
dec
shll
imul
pop
push
out
popf
mov
out
mov
mov
xor
xor
clc
add
mov
push
test
cmp
out
sti
pusha
movsl
mov
mov
lock
inc
mov
xor
xor
pop
pop
and
add
inc
repz
std
xchg
cmpsb
add
in
pop
dec
xchg
push
sub
rclb
mov
adc
in
repnz
or
fdivrs
dec
adc
sbbb
inc
movsl
ja
or
jle
icebp
adc
inc
sahf
ss
or
jecxz
push
mov
or
repnz
ret
sbb
push
dec
lea
mov
mov
push
jecxz
cmp
pop
jp
dec
cmp
sbb
lods
lods
sub
mov
popa
imul
mov
cs
cli
ficoms
xchg
cmpsb
inc
mov
cmp
adc
or
mov
daa
aad
dec
xor
loope
rcr
inc
call
lret
and
leave
mov
imul
push
divb
sbb
ljmp
bound
xor
fisubrl
jl
xchg
xchg
loope
int
push
mov
and
add
and
cmpsb
cltd
aam
adc
cmpsb
inc
add
mov
sti
add
xchg
dec
rorl
push
and
xor
fwait
inc
outsb
or
xor
mov
adc
adc
loopne
int3
xchg
mov
jo
sub
leave
mov
mov
push
ljmp
rcl
jecxz
jae
gs
lret
jp
mov
or
add
pushl
cmc
pop
and
cli
mov
xor
nop
cli
test
mov
cmc
sar
lea
jbe
pop
mov
adc
decl
cld
or
test
xchg
push
push
rcrb
cmp
imul
les
push
int3
jp
dec
inc
jmp
inc
pop
das
jl
push
or
sub
scas
or
ret
mov
iret
pop
mov
dec
adc
add
mov
int3
xor
dec
or
das
pop
sbb
mov
lret
popf
rcrl
stos
lock
leave
es
sets
xchg
adc
adc
loope
lret
fldt
mov
dec
scas
test
add
movb
cwtl
adc
ret
fcomp
shlb
mov
push
cmpsb
sahf
fcmovbe
mov
fmuls
movsl
int3
dec
inc
pop
mov
mov
stc
test
inc
and
wrmsr
shl
push
inc
popl
movsl
xor
ss
jb
or
adc
sub
mov
aam
pushf
xorl
pop
jl
pop
sbb
ret
mov
adcb
cwtl
lcall
pop
shll
insl
push
sbb
stc
sbb
inc
leave
and
xlat
jno
cwtl
cld
add
test
sub
cli
mov
dec
repz
sbb
pop
xorl
mov
mov
and
out
jmp
xchg
repnz
je
in
ljmp
inc
cltd
xchg
adc
pop
ljmp
outsb
dec
icebp
xor
mov
adcl
cmc
jae
addr16
aaa
shlb
in
xor
data16
loopne
out
sub
divw
sarb
mov
insl
clc
call
mov
je
jmp
xor
inc
push
fidivl
sbb
test
pop
mov
dec
cmp
arpl
dec
test
pop
inc
sar
mov
jae
out
and
in
in
push
pop
mov
jecxz
aam
fistl
in
mov
jo
mov
cvtps2pd
adc
data16
push
aaa
mov
push
sarl
jno
sbb
add
pop
loope
nop
dec
hlt
icebp
sub
xchg
cmpsb
push
cwtl
lcall
pop
fs
and
imul
pop
lcall
and
lahf
dec
aaa
dec
arpl
sbb
roll
cld
jae
xor
shlb
cltd
repnz
fldt
loopne
and
xchg
fs
add
mov
aad
aaa
pop
jnp
sbb
lods
test
xchg
cmp
inc
jl
flds
popf
stc
add
adc
sub
cmpb
xor
sarb
fsubrl
or
pop
pop
fdivrl
cmp
call
sbb
pop
shlb
and
push
jbe
fidivrs
lcall
fisttpll
es
add
cmp
xor
stc
dec
jg
fsubl
out
dec
add
loopne
gs
xchg
lcall
mov
fwait
mov
imul
or
inc
push
das
dec
clc
out
push
sub
push
add
jmp
addl
lock
jle
std
adc
cmc
inc
int3
arpl
stc
push
mov
int
sbb
cmp
xchg
mov
jp
cmpsb
cmpsb
dec
nop
movsl
mov
in
mov
shll
add
sbb
xor
jbe
xor
cmc
pushl
adc
add
push
and
nop
cmpsl
int
pop
stc
or
inc
add
add
mov
push
notl
mov
or
xchg
in
add
pop
mov
sub
and
add
decb
cmpsl
sbb
cmp
push
xor
cmp
in
sbb
and
or
les
insb
and
fldenv
loopne
xchg
jbe
xchg
je
add
addr16
xchg
or
dec
mov
push
orl
cmp
pop
sub
push
gs
push
jb
cmc
pop
jg
and
mov
stos
in
icebp
mov
scas
hlt
imul
cmp
daa
cmp
jno
pop
pop
xchg
movsl
xor
mov
fsubs
ret
dec
cwtl
lods
mov
mov
adc
push
mov
push
inc
add
xchg
add
rcr
movsb
pushf
xor
jecxz
call
xchg
inc
fistl
dec
push
mov
mov
mov
jo
test
dec
dec
xchg
and
sar
sub
mov
fwait
stos
dec
inc
add
daa
int3
out
aad
js
xchg
fstpt
pop
push
or
jne
dec
je,pn
aad
or
push
xchg
out
pop
inc
jae
jno
lahf
sbb
ja
push
pop
push
arpl
ja
adc
mov
adcl
add
sbb
jmp
js
sarl
pop
lea
or
loope
lea
sub
add
fildll
add
add
imul
loope
not
cmpsl
sub
dec
xor
aaa
adc
or
push
or
add
pop
mov
sub
fwait
int3
and
push
sbb
sub
mov
mov
repnz
pusha
pop
outsb
jmp
rolb
mov
pop
pop
out
jp
out
iret
lret
ret
adc
sbb
cld
lahf
pop
fnstenv
orb
loop
nop
push
jbe
dec
into
fistpll
mov
sbb
add
lahf
dec
sbb
fwait
enter
mov
pop
or
adc
imul
mov
mov
arpl
shl
ds
mov
push
cmp
leave
inc
inc
inc
imull
mov
mov
sbb
mov
mov
sahf
sbb
in
add
inc
pop
jae
movsb
int3
pop
aam
imul
mov
inc
mov
jmp
pop
cs
xor
dec
cmp
repnz
push
add
les
dec
fsub
mov
loopne
shrb
test
nop
adc
push
out
arpl
pslld
fdivl
enter
and
scas
cmc
into
fs
sub
xchg
xchg
call
in
cli
outsb
and
cwtl
push
test
sub
jnp
adc
cmp
andb
mov
sbb
std
test
daa
movsl
xchg
les
mov
inc
ds
bound
lcall
sub
sbb
addr16
sbb
lret
popf
jmp
mov
movsb
mov
add
xchg
sar
rclb
popa
cs
or
in
xchg
mov
mov
pop
ds
cmpl
outsb
lret
add
and
cmp
lahf
addl
adc
movsb
pop
ljmp
dec
sbb
xor
mov
sbb
inc
jmp
mov
mov
cmp
pop
dec
jb
inc
or
adc
xchg
je
mov
cs
in
inc
test
jge
insl
cmc
sahf
add
call
loop
cltd
jae
out
sbb
jmp
les
pushf
arpl
js
jecxz
mov
lods
lret
adc
xor
test
xor
inc
icebp
std
loopne
dec
lret
pop
roll
imul
ljmp
das
xchg
out
dec
cmp
cmp
rcrl
xor
pop
jns
jae
jb
dec
cmp
aam
sbb
xchg
and
xchg
jo
std
clc
inc
xor
movsb
sahf
mov
jge
cli
in
test
inc
add
in
xchg
ds
nop
leave
ret
mov
sub
cli
movsb
mov
stos
push
call
jns
and
ret
std
out
dec
insb
sub
ficomps
lods
lock
jb
lock
mov
cmp
dec
int3
in
adc
addb
mov
js
mov
or
dec
pop
jno
inc
aaa
nop
sub
cmp
leave
ds
dec
jno
inc
sbbl
aam
cmp
mov
movsb
fadds
adc
jb
push
rolb
je
xor
mov
test
sub
xor
iret
or
data16
mov
aaa
ret
push
xchg
lock
or
pop
push
jg
sub
je
mov
or
mov
or
jnp
cld
std
sub
incl
movsl
cmp
fwait
adc
aad
or
sbb
faddl
push
into
jo
bound
sbb
fwait
sub
adc
test
pavgb
ret
add
jge
or
pop
in
arpl
sub
out
pusha
in
imul
insl
mov
xchg
adc
sarb
and
xchg
xor
jns
jns
xchg
adc
sti
mov
adcb
movsb
inc
mov
dec
xchg
clc
push
push
dec
mulb
test
sahf
add
and
inc
xor
stos
loope
js
mov
in
inc
sarl
add
repz
sub
aam
jge
and
out
or
in
xchg
dec
loopne
pop
xor
cltd
mov
mov
addl
mov
mov
mov
push
rclb
sbb
xchg
sbb
insl
js
cmp
or
arpl
or
dec
shlb
jae
test
pop
and
int3
repnz
mov
decl
mov
lds
out
jns
pop
sbb
mov
pop
xlat
xor
jmp
js
test
arpl
loope
hlt
adc
pop
pop
mov
cwtl
rclb
lahf
inc
pop
mov
es
pop
dec
mov
xor
in
cmpl
scas
int
cmp
add
out
test
clc
and
aas
push
inc
jecxz
pop
pop
adc
cs
imul
mov
sub
orl
inc
mov
mov
sub
mov
mov
xchg
fsubs
es
mov
adc
mov
sub
sub
mov
std
mov
sub
loope
lahf
xchg
jbe
gs
pop
mov
xor
jbe
cmpsl
ljmp
pop
cmp
clc
and
out
pop
shrl
in
jmp
pop
xor
push
pusha
sbb
push
inc
lcall
inc
add
mulb
js
cwtl
xor
dec
ss
inc
pusha
mov
cmpsb
data16
pop
lea
inc
add
or
cmp
sbb
mov
xchg
sti
adc
ja
mov
mov
pop
mov
mul
insb
xor
lret
or
das
inc
jnp
xchg
cli
lcall
xchg
test
addl
mov
testl
int3
sbb
popw
pop
jp
aam
jg
adc
cli
push
imul
mov
xlat
xor
or
mov
inc
adc
stc
je
bound
enter
cwtl
clc
and
jmp
lock
movsb
dec
mov
stc
psrlq
cmpsb
test
or
iretw
add
pop
ja
xor
xor
out
mov
rcl
or
mov
pop
test
pop
xchg
xchg
push
test
xchg
aaa
arpl
cwtl
push
jnp
or
int3
jno
jb
jmp
sbb
jmp
sbb
jge
mov
sbb
outsb
stc
nop
cmpsb
psrlw
cmp
out
mov
ror
jle
outsb
add
jle
inc
or
sbb
cmp
movsb
xor
mov
push
out
inc
adcl
add
push
push
pop
xor
and
push
mov
sub
pop
cmp
and
mov
les
shl
sbb
jmp
iret
mov
jle
sbb
arpl
xchg
arpl
jae
rol
pop
pop
push
or
leave
pop
imul
aam
mov
cmp
add
pop
pop
sub
gs
mov
jb
push
out
lcall
out
lods
dec
cmp
jg
fisubrs
lahf
adc
push
dec
into
mov
ss
icebp
sbb
out
dec
jle
jo
call
repnz
cmpsl
movsl
scas
mov
mov
push
movsb
sub
dec
ret
push
push
push
push
cmp
fs
sub
xlat
int
or
shlb
cli
and
xor
fstpl
nop
in
mov
or
xchg
mov
mov
enter
sub
sbb
xor
in
push
enter
xor
cmp
mov
movsb
adc
pop
jno
or
enter
adc
test
cld
dec
mov
jp
lea
and
mov
sub
daa
cwtl
inc
loope
inc
mov
lcall
inc
sbb
arpl
fidivl
push
icebp
add
insb
fadds
cmpsl
push
jnp
push
cmpsb
in
jle
sub
mov
cmp
idivb
mov
lea
xchg
fisttpll
fdecstp
jg
cmp
test
mov
pop
fldl
push
insb
add
pop
pop
test
fmuls
cmpsb
stc
out
push
sub
inc
mov
inc
xchg
pop
mov
in
xlat
aaa
and
xor
sahf
out
add
inc
jg
pop
es
or
roll
mov
lods
push
in
ret
add
outsl
ss
repnz
push
or
ja
pop
call
cs
and
add
mov
std
std
mov
jmp
out
pop
adc
mov
shr
inc
pop
enter
mov
jle
ret
bound
add
jp
inc
lds
inc
push
les
sbb
enter
int
xor
mov
dec
pop
repz
pushf
jmp
fs
fcom
and
sub
jne
and
sub
push
mov
sub
divb
or
push
jae
dec
pop
xchg
scas
pop
mov
xor
mov
dec
repnz
xlat
call
inc
fsubr
sub
add
xchg
loop
xchg
aad
adc
mov
enter
cmc
data16
inc
rcr
push
mov
ret
fwait
mov
ljmp
cs
jg
sbb
xchg
sahf
les
jl
sub
inc
mov
out
xchg
adc
stc
cs
mov
xchg
pop
xchg
inc
and
cmp
call
adc
cmp
fsubs
out
dec
stos
sbb
and
mov
xchg
pop
mov
sarl
adc
mov
sbb
xchg
xchg
fwait
pop
movsl
jle
in
jmp
paddq
dec
cltd
mov
jo
insb
dec
xorl
das
nop
add
lahf
sbb
and
xor
inc
test
xor
ds
jle
jle
add
adcl
mov
and
mov
loop
mov
inc
enter
sbb
aas
mov
pop
loope
sbb
lods
add
push
sahf
addr16
lods
jg
cltd
test
daa
enter
fldenv
les
cmpsl
add
mov
daa
ljmp
adc
and
iret
and
xor
push
inc
into
xorb
mov
adc
cmp
clc
or
lret
into
cmp
mov
pop
jne
mov
sbb
bound
sub
or
xchg
sbb
mov
hlt
repz
push
adcb
inc
xor
rclb
add
aas
stos
test
pusha
aad
adc
and
sbb
push
cwtl
xor
unpckhps
es
adc
push
pop
das
xchg
outsb
push
cmc
push
stc
xchg
mull
mov
mov
mov
mov
xorl
fcoml
adc
hlt
adc
xor
call
bound
or
xchg
push
jecxz
mov
pop
and
int3
cmpsb
xchg
adc
pop
pushf
xor
idivl
sub
dec
iret
pusha
mov
jno
mov
cmp
xchg
int3
addr16
popa
xchg
sti
in
mov
jnp
arpl
cmp
jb
push
out
pop
lret
mov
jbe
jmp
movsl
jmp
push
ds
sbb
fsubrl
inc
mov
lock
sub
test
ds
add
insl
inc
xchg
std
cltd
scas
push
scas
test
test
add
inc
push
cld
mov
loope
rolb
pop
sbb
data16
mov
out
nop
or
std
sub
cmp
std
dec
in
lret
lods
cmpsw
pushl
inc
pop
ret
test
push
mov
outsl
shlb
hlt
sar
lcall
mov
mov
mov
sahf
fwait
loopw
sti
shlb
imul
sbb
pop
dec
mov
or
add
jg
push
push
mov
cmp
xchg
ja
ds
es
pop
insb
add
mov
adc
push
mov
outsl
dec
mov
dec
or
mov
outsb
cmp
pop
imul
push
jne
aad
imul
add
cmp
xchg
push
daa
pop
pop
repnz
movsb
lret
push
sub
pop
xor
xor
dec
xchg
movsl
pop
loop
out
adc
dec
frstor
fcoms
lods
loope
test
dec
jmp
mov
adc
es
inc
sub
cmp
or
and
out
push
xlat
loopne
cmpsb
and
imul
push
sahf
mov
outsl
js
roll
rcrl
mov
ss
lds
fs
fnsave
lds
pushf
mov
addr16
scas
push
and
add
popa
mov
sbb
int3
int3
jp
pop
push
addb
adc
pop
fwait
push
jl
test
xchg
ss
ljmp
cmp
cmc
mov
adc
and
push
repnz
frstor
push
cli
mov
xor
pmullw
iret
clc
ja
cmp
test
mov
jmp
and
push
inc
push
mov
xor
int3
sahf
jl
mov
push
sub
inc
mov
sbb
insb
pusha
repz
dec
add
pop
pop
mov
mov
stos
icebp
stc
mov
xor
and
sbb
or
in
mov
imul
insl
stc
cli
fdivrs
incb
xor
jmp
jnp
andb
mov
fwait
jb
into
mov
scas
test
sahf
outsb
jge
jae
test
lahf
xchg
sahf
test
cmp
fsubrs
and
mulb
sub
pop
sbb
mov
dec
rorb
shlb
out
enter
push
dec
lods
ss
mov
xchg
addr16
push
arpl
jp
imull
lcall
jge
xchg
mov
push
aam
or
jge
or
xchg
lret
out
and
fnstenv
jae
adc
jne
adc
xor
test
jne
push
andb
ds
jnp
fucomip
push
mov
mov
leave
lods
push
push
xchg
cmc
xchg
ja
fscale
mov
lcall
pop
and
clc
stos
add
mov
or
into
mov
cld
push
imul
dec
add
fsub
push
mov
and
and
and
imul
loopne
mov
cltd
push
dec
out
jg
jnp
jecxz
dec
mov
data16
inc
addb
lock
sbbb
mov
gs
jecxz
push
pop
xchg
loope
imul
ljmp
mov
clc
adc
jle
xchg
jno
aad
and
loop
adc
loopne
jmp
xor
test
out
lock
adc
pop
mov
dec
jecxz
mov
ss
movsl
ja
subl
inc
mov
scas
jecxz
xor
addr16
movsb
pop
test
pop
push
lods
and
subb
loopne
ret
jmp
inc
sub
iret
add
push
jno
add
pusha
mov
fcmovnbe
repnz
mov
pop
jp
popf
jmp
and
jp
mov
int3
sbb
idivb
sbb
jge
hlt
pop
and
fsubr
aam
inc
aas
mov
jmp
aas
inc
sub
leave
pop
in
and
not
and
adc
xchg
mov
mov
movsl
ljmp
sub
mov
lods
mov
cmp
cmp
and
gs
adc
push
punpckhwd
int3
dec
hlt
xor
repnz
les
push
or
out
jo
dec
sub
jp
outsb
es
inc
dec
cmp
daa
sub
pop
stc
mov
fistpl
popa
in
pop
pop
adcb
imul
adc
add
sbb
xor
sub
pop
fs
sti
popa
sahf
mov
xchg
dec
adc
jbe
xor
inc
iret
mov
pusha
ret
add
test
adc
mov
out
add
xchg
faddp
mov
in
dec
xchg
jmp
mov
cltd
dec
pop
add
xchg
xor
mov
xor
dec
jno
lcall
out
in
pop
out
pop
jno
mov
jbe
push
out
gs
mov
movsb
dec
or
dec
jbe
pop
inc
mov
enter
sti
fistps
test
aaa
mov
inc
sub
sbb
adc
repz
fs
pop
mov
mov
push
lcall
xor
testb
push
lods
jne
rcl
enter
and
aas
mov
testl
cmp
addr16
cmp
dec
arpl
mov
cli
popf
mov
sbb
push
jo
sbb
es
jns
mov
insb
dec
and
iret
sub
fistps
jb
add
mov
cmp
mov
lret
into
rorb
xor
insb
xchg
stos
adcl
fldcw
test
or
ds
dec
imul
negl
fnstsw
ret
mov
cmp
enter
adc
and
icebp
lcall
jp
pop
shrl
mov
dec
xor
js
jl
arpl
xchg
lcall
sbb
movsl
pop
jne
imul
xchg
jae
sahf
iret
ss
mov
add
pop
mov
mov
mov
jns
data16
xchg
loop
idivb
sub
push
lea
xlat
in
shl
xchg
pop
pushf
les
push
push
jns,pt
sub
test
sub
sbb
icebp
outsl
mov
lret
imul
inc
push
and
fsts
mov
adc
daa
xchg
stc
insl
cltd
out
push
outsb
push
call
xchg
cli
lcall
xor
js
jae
jecxz
mov
xor
mov
push
pop
ret
outsb
mov
movl
pop
inc
mov
imul
cmc
sbb
add
movsl
icebp
jno
xchg
fisubrl
or
cmc
cmp
loopne
fdivrs
xchg
jbe
dec
aaa
dec
test
ds
or
or
shrb
inc
fnsave
add
imul
sub
pop
adc
lea
lcall
fildl
ret
out
mov
cmp
leave
rcll
ljmp
daa
xchg
cwtl
pop
add
or
sahf
mov
push
push
jecxz
xor
jne
inc
clc
lahf
leave
adc
mov
test
lock
popf
adc
fbstp
jecxz
shr
jmp
push
cmp
dec
fistl
jl
jbe
outsl
inc
and
int3
add
adc
mov
add
jnp
pop
xchg
popf
dec
mov
push
or
adc
dec
es
insl
push
daa
xchg
inc
lcall
cs
adc
and
js
mov
mov
shlb
mov
mov
sbb
stc
cmp
rcrl
mov
cmp
pop
les
daa
iret
mov
cmp
jmp
or
mov
je
jne
mov
fdivl
adcl
loope
push
es
int3
les
mov
xchg
stos
pop
cmp
cli
push
fcmovnu
adc
in
pop
pop
cmp
dec
xchg
push
xor
mov
pop
or
imul
in
fsubs
jae
loopne
xor
movl
xor
fisttps
in
lret
sub
mov
push
sbbl
stos
loope
imul
mov
inc
adc
sbb
dec
aam
push
test
mov
pop
dec
mov
push
push
mov
out
insb
loop
cmp
inc
jmp
mov
and
xor
arpl
push
cmp
and
clc
addr16
add
ja
mov
mov
and
push
adc
mov
adc
aam
push
mov
mov
dec
pusha
dec
lcall
fcoml
xchg
int3
push
xor
jbe
fmuls
mov
or
push
imul
daa
xchg
dec
loopne
aam
jno
sbb
sarl
pop
mov
in
loope
pop
mov
adc
sbb
pop
lret
aad
out
add
insl
rcrl
xchg
jno
ret
leave
in
inc
mov
xchg
xchg
imul
fisttps
loopne
mov
xor
cmpsb
cmc
pusha
aad
pop
pop
xchg
lods
mov
mulb
dec
xchg
push
std
jbe
jno
pusha
insb
in
movsl
jno
adc
hlt
mov
lahf
fiaddl
cwtl
mov
xchg
out
sub
gs
lret
pop
mov
pop
call
adc
mov
ret
bound
sub
out
cltd
push
rclb
dec
xchg
mov
add
movsl
jns
movsl
ror
xchg
sub
in
test
xchg
aam
jge
pop
sub
das
aam
mov
pushf
or
pop
fsubrs
cmp
outsl
sub
loopne
xchg
add
add
mov
add
xchg
outsb
push
fs
pusha
hlt
pop
xchg
push
xor
mov
jl
jge
adc
inc
in
jb
pop
jmp
lret
or
add
andb
sub
dec
dec
divb
fimull
aaa
addr16
jo
ret
int
fsubr
leave
xor
cli
add
movsl
popa
shll
shlb
mov
xor
test
repz
sbb
mov
mov
inc
je
ljmp
xchg
test
loop
cwtl
xchg
xorl
add
push
in
xchg
dec
xchg
ljmp
mov
movl
xchg
aam
jp
popf
pop
mov
mov
jmp
loop,pt
mov
pop
out
sahf
fwait
inc
pop
inc
mov
fldl
jle
int
arpl
jecxz
xor
int3
xor
dec
imul
mov
pop
or
leave
xchg
mov
or
imul
push
js
xor
faddl
mov
insl
out
jge
mov
lock
imul
pop
jp
jmp
shll
sbb
ret
ficomps
mov
jne
mov
arpl
adc
lock
dec
addr16
scas
push
and
cmp
adc
lods
xor
cmp
lcall
js
shrb
enter
mov
clc
gs
inc
xchg
jmp
push
fsincos
mov
lahf
add
add
xor
xchg
jno
repnz
mov
push
mull
cmp
cmp
push
mov
test
test
dec
jg
jno
test
lahf
xchg
inc
or
cmpsl
cmp
sub
adc
cltd
pop
in
imul
cmpsb
ret
mov
xor
adc
ret
lea
jp
xchg
fdivrs
mov
cmp
mov
idivb
or
sub
mov
xor
mov
cmpsb
sbb
jg
pop
jnp
fisttpl
notl
sub
loope
inc
mov
outsb
inc
and
jg
push
insb
mov
test
push
mov
pop
add
sbb
bound
fdivrl
stos
jb
loop
or
loope
dec
push
push
roll
jbe
out
push
pop
arpl
ss
xor
loop
xchg
sbb
xor
or
sbb
iret
es
or
sub
add
xor
pushf
mov
lret
jae
inc
mov
push
inc
js
fistpll
mov
cmp
je
insb
ja
into
xor
sarl
mov
jge
cmp
jbe
mov
test
loop
pop
and
in
aam
je
out
int
mov
dec
popf
mov
pushf
call
and
inc
ss
ror
xorl
push
imul
out
inc
sti
push
push
fwait
xor
insl
mov
mov
and
sbb
push
fcompl
sub
fmuls
fs
dec
and
insb
in
std
sar
xchg
fsub
mov
test
cmc
cmp
test
add
andl
test
data16
je
dec
mov
cmp
imul
pop
ss
push
jno
mov
lcall
mov
out
mov
lods
add
or
xor
mov
mov
adc
pop
pop
insb
add
xchg
test
sti
addr16
inc
push
outsb
hlt
test
insl
aaa
pop
scas
xchg
cli
push
inc
sub
ljmp
sub
cmp
dec
pop
add
inc
movsb
sub
cmp
sahf
or
push
xor
test
jmp
sbb
and
clc
movsl
imul
pop
push
in
or
or
inc
dec
je
add
and
jle
loop
popa
and
or
stos
clc
loope
popa
jmp
xorb
dec
jmp
dec
in
scas
addb
andb
fcmovne
sub
xchg
test
or
inc
xchg
outsb
cli
mov
mov
scas
jp
inc
cli
jmp
shrb
shll
adc
pop
lahf
out
arpl
dec
mov
lret
mov
iret
jp
cmp
sbb
add
decb
xlat
jnp
add
sbb
loopne
jl
dec
add
in
push
xor
imul
dec
mov
inc
or
mov
mov
imul
ja
lahf
mov
add
cmp
dec
rorb
mov
idivb
out
bnd
inc
xchg
sbb
dec
mov
xchg
je
pusha
std
jle
dec
xchg
push
pop
cli
in
cmp
inc
mov
stos
pop
imul
cmpsb
mulb
jb
adc
lret
scas
cmpsb
ss
mov
in
cmp
add
cmp
pop
dec
enter
or
fs
add
pop
stc
mov
addr16
in
lock
add
scas
mov
add
lds
mov
lahf
pop
xchg
dec
mov
loop,pn
sub
push
std
or
ljmp
aam
adc
loop
mov
mov
cmpsl
test
ret
jmp
sub
lds
cld
imul
andl
sub
and
ja
lods
xlat
sbb
add
xchg
es
push
pop
rorl
adc
fsubrs
mov
push
cs
dec
mov
movsl
xor
loope
fldcw
stos
adc
mov
xchg
lret
xor
cmp
mov
and
mov
jg
pop
and
lods
dec
mov
and
into
mov
pop
outsb
ret
aaa
mov
mov
cli
jb
gs
sti
jg
out
jne
and
sbb
sub
xchg
std
test
outsl
mov
and
shll
cmp
lds
mov
jnp
xorb
cld
pop
pop
lahf
xchg
mov
sbb
sbb
popf
xor
cmp
ror
sbb
adc
sub
or
hlt
andl
je
pop
scas
pop
loopne
mov
push
push
cmc
pop
int3
cmc
jo
add
jns
cmc
insl
pop
out
inc
mov
cmp
dec
add
lds
and
pusha
pop
repz
fs
sti
push
cltd
sub
iret
lret
jb
in
cmpsl
icebp
cmpb
cmp
inc
dec
inc
jecxz
push
imul
dec
arpl
call
out
mov
mov
data16
addr16
pop
in
rolb
out
es
andb
add
inc
or
or
movsb
into
mov
call
push
push
scas
or
ljmp
call
ret
xchg
por
sbb
je
bound
test
push
xor
subb
pop
je
adc
xlat
xchg
add
dec
mov
xchg
xor
or
int
push
push
mov
clc
lret
jecxz
lcall
or
lods
cmpsb
mov
jbe
jp
dec
pop
push
xor
jl
add
mov
aaa
aad
dec
inc
nop
sbb
and
inc
mov
adc
push
xorb
je
roll
jno
cmpsb
jl
mov
dec
dec
cmpsb
repz
scas
lret
and
sbb
push
stos
aaa
mov
leave
int3
lods
dec
es
dec
leave
xor
dec
add
dec
sub
xchg
push
inc
rolb
dec
popf
lea
adcl
imulb
les
mov
scas
xchg
xor
lods
addb
add
movsl
mov
les
enter
push
je
mov
shrl
test
push
xlat
mov
sbb
dec
sarl
lods
adc
jmp
shl
and
xor
xchg
cwtl
scas
idivl
push
insl
and
inc
and
xor
dec
lcall
sbb
jg
lahf
std
jg
aas
loopne
mov
mov
xor
pop
jecxz
xchg
loope
sub
pop
or
fs
sbb
sahf
pop
jge
mov
pop
scas
xor
mov
cld
lods
inc
movsl
push
adc
sub
cmp
movsb
roll
in
lahf
push
push
test
mov
dec
orb
push
mov
adc
mov
ja
pop
popf
adc
sub
sub
loopne
add
add
ret
sbb
inc
sti
and
push
push
jb
add
in
inc
cmp
jns
mov
insb
add
repnz
test
scas
repz
adc
negl
fcoms
test
or
out
rorb
mov
jne
mov
inc
add
outsb
push
aad
ds
cmp
sar
push
pop
cld
push
and
orl
jbe
in
xchg
pop
movsb
daa
xor
add
push
andb
incl
iret
ds
cmpsb
mov
sahf
xor
xchg
imul
push
mov
clc
sbb
cmp
in
xchg
icebp
add
xchg
or
cmpsb
mov
fcompl
inc
xlat
xchg
mov
and
cwtl
ja
push
or
push
xchg
outsl
shll
rclb
xchg
lcall
adc
mov
loop
inc
icebp
je
cs
xchg
fldt
cmp
bound
inc
or
loopne
push
insb
cmp
arpl
push
sub
push
ret
lretw
mov
inc
test
cli
cmp
mov
inc
lock
fnstsw
and
jp
push
mov
test
or
adc
int3
push
cmp
xor
and
arpl
out
mov
ds
leave
add
mov
insl
or
mull
mov
inc
int3
or
fdivr
sub
mov
movsl
jl
fistpll
addr16
inc
xlat
fbld
cwtl
jbe
daa
lret
mov
dec
xlat
jmp
das
pop
movsl
mov
subl
inc
fldl
jmp
mov
and
in
ficoml
sbb
mov
stos
mov
adc
test
imul
mov
adc
mov
js
and
sbb
xchg
fnstenv
ljmp
pop
ss
pop
stos
xchg
mov
jb
pop
cld
decl
mov
add
incb
negl
inc
cmp
dec
add
fucom
filds
jl
sbb
jmp
call
add
inc
push
rcrb
rcrb
dec
pop
mov
dec
dec
cmpsb
outsl
sub
dec
scas
or
movsl
sysenter
push
js
icebp
les
xlat
lock
popa
jns
subb
dec
fdivrs
sub
adc
xor
pop
push
stos
arpl
popa
stos
cmpl
push
movsl
je
adc
daa
pop
dec
in
int3
adc
jecxz
inc
sub
dec
cld
mov
scas
push
or
inc
jo
aas
sub
add
scas
cmp
push
out
xor
stos
stc
imul
mov
adc
xor
pushf
dec
jmp
push
xchg
or
adc
dec
adc
xchg
xchg
inc
mov
dec
cmp
das
and
lcall
repz
push
shlb
jo
sub
xor
call
sub
pop
fs
jno
mov
sbb
pop
test
or
lock
mov
sti
lahf
pop
sbb
repnz
dec
adc
xchg
fstp
sbb
mov
ficoms
aaa
push
xor
pop
cld
imul
sbb
aaa
aam
popf
push
adc
int
mov
test
and
inc
adc
je
sub
pop
mov
xchg
mov
bndstx
int
insl
push
mov
fmull
insl
fsubrs
mov
pushf
lods
sub
mov
inc
cmc
dec
xor
cli
mov
or
or
lcall
lahf
aad
pop
outsb
popf
add
cmc
in
mov
fdivrs
subb
mov
sbb
and
push
leave
cmp
jno
adc
jbe
or
fstpl
movsb
sub
push
out
push
xor
pushf
xchg
cmp
fsubrs
pop
jg
lods
test
add
lods
test
out
add
mov
int3
loopne
dec
loop
outsl
xor
or
dec
mov
sbb
cmp
sub
jne
rcl
sbb
xchg
scas
lret
testl
inc
pxor
dec
lea
dec
movsb
cmp
cmp
negb
adc
test
imul
test
mov
cmpsb
les
push
sub
inc
jp
pop
pop
nop
stc
jnp
scas
xor
mov
int
dec
hlt
insl
fwait
dec
or
push
add
orl
aaa
fidivrl
jl
and
pusha
mov
ljmp
mov
jns
mov
mov
mov
imul
pop
ret
cld
iret
ss
jecxz
push
cmp
ret
jecxz
outsl
push
add
xchg
adc
inc
xchg
jmp
daa
loop
mov
dec
es
adc
add
cmp
sbb
or
push
xchg
call
movnti
cmpsb
ficompl
sub
outsl
mov
pusha
in
mov
pushf
sbb
sbb
mov
mov
mov
ja
jmp
arpl
cmpsl
sbb
popa
call
addl
push
add
mov
or
dec
sbb
push
xchg
gs
push
iret
rcrl
out
dec
pop
adc
inc
xor
lret
dec
and
xchg
dec
jnp
xchg
sbb
push
ret
xchg
push
jle
cli
jb
lds
push
dec
push
je
pop
mov
lret
jnp
or
repnz
mov
sbb
xor
push
add
scas
ss
repnz
xor
or
or
addb
or
adc
pushf
dec
shlb
ret
inc
dec
push
mov
and
clc
dec
dec
xchg
mov
mov
bnd
pushf
push
sub
out
add
fidivs
shrb
pop
imul
cmp
pop
out
add
cmpsl
dec
push
adc
frstor
mov
out
fstpl
dec
cld
lds
movsb
or
jne
popa
cmp
stc
jno
dec
hlt
adc
rcrb
dec
jg
mov
push
int3
push
fsubp
movsb
mov
test
xchg
repz
je
sub
xor
lods
jp
jne
out
mov
mov
sub
xchg
xor
dec
in
stc
pop
ss
fisttpll
push
lahf
inc
add
cmp
xor
jb
mov
in
push
mov
sub
push
jge
or
xor
xor
int
jno
sub
lea
nop
jno
mov
mov
out
dec
cmpb
bound
aam
int
int3
adc
and
cmp
adc
push
clc
pop
cwtl
ds
push
shr
cmc
dec
fimuls
icebp
inc
add
js
lea
xchg
dec
push
test
cld
addr16
and
mov
pop
jmp
push
push
sub
xchg
movsb
dec
and
cs
je
cmpsl
test
xor
push
shlb
mov
les
fucom
fs
pop
push
ror
xchg
movsl
mov
xchg
push
jl
adc
jg
cltd
sub
inc
push
out
jge
pusha
inc
mov
call
jecxz
mov
mov
or
in
mov
push
jne
ret
jnp
and
out
in
fistl
mov
push
jl
andb
or
mov
lret
push
inc
bound
mov
stos
pop
ljmp
fdivr
add
adcb
sub
imul
cmp
cmp
addr16
call
inc
es
xor
jmpw
mov
push
dec
fsts
movsb
mov
sub
out
leave
dec
xorl
nop
dec
cwtl
repnz
or
pop
in
mov
call
mull
xchg
and
int
loope
cmpsl
es
sbb
ljmp
push
mov
std
sub
jb
in
xor
ret
stos
fs
movsl
jge
out
int
je
sub
in
sbb
aad
push
mov
in
fs
push
popa
xor
pop
fisubrs
add
jno
push
xchg
dec
sbb
out
pop
adc
stc
test
xchg
and
mov
mov
sub
xor
jmp
mov
or
pop
aad
sbb
or
leave
sti
add
lret
clc
mov
data16
push
cli
movsb
pop
or
andl
pusha
xchg
fsubrs
imul
not
mov
pop
lds
rorl
mov
aad
js
mov
scas
rcl
fsubr
xchg
ljmp
jmp
push
ret
outsb
add
xchg
fidivs
jp
xchg
xchg
xor
lea
fldenv
inc
lret
insl
incb
or
add
cltd
push
pop
push
bound
adc
mov
push
xchg
push
mov
mov
mov
inc
xor
dec
stos
jmp
mov
fld
push
mov
push
dec
mov
push
stos
fnstenv
pop
rolb
jb
lea
cmc
and
jae
mov
sub
mov
stos
icebp
hlt
or
add
or
std
add
xor
cmp
dec
out
clc
adc
dec
orb
aaa
pushf
iret
push
loopne
scas
dec
mov
popf
rcll
ljmp
cltd
cld
or
add
jle
and
adc
in
mov
mov
les
adc
test
cmpsb
clc
inc
test
dec
dec
mov
stos
push
sbb
test
xchg
aas
jg
stc
in
dec
push
dec
pop
xchg
or
inc
roll
lock
or
adc
mov
pop
add
or
cli
fnstcw
int3
hlt
je
les
aam
iret
mov
cltd
dec
sbb
ljmp
fadd
jl
mov
ljmp
cmp
mov
mov
xlat
jecxz
testb
iret
loope
push
xor
and
cmp
call
loop
sbb
dec
mulb
xchg
sbb
push
lret
xchg
bound
sbb
and
insb
sahf
inc
repnz
sti
fisubs
mov
notl
dec
out
lret
jle
mov
inc
pop
push
hlt
push
xor
or
into
enter
mov
rorl
add
popa
jle
lods
imul
pop
push
in
stos
add
xor
lock
int
xchg
mov
out
dec
xchg
pop
lods
inc
repnz
mov
js
outsl
sub
pop
dec
lret
add
mov
pop
jbe
pop
xor
adc
xor
fldl
loopne
fnstenv
mov
test
test
add
or
add
sub
pop
inc
or
sub
sub
fwait
push
shll
xchg
inc
cmp
dec
fisttps
sbb
xchg
mov
xor
push
mov
aam
xchg
sub
dec
dec
push
ljmp
cli
cmp
imul
inc
sub
lods
or
ffreep
ja
loop
hlt
popf
mov
dec
mov
adc
adc
xchg
sub
into
sub
inc
lahf
aad
pop
dec
inc
lods
leave
aaa
or
cmp
pushf
push
sbb
test
mov
jmp
pop
imul
add
pop
popf
push
cwtl
mov
xor
cmp
ja
jmp
xchg
mov
sub
or
pop
dec
xchg
and
mov
inc
lods
pop
mov
xor
loope
addr16
filds
rcrl
and
sub
int
movsl
inc
mov
movsl
mov
jae
mov
mov
add
test
pop
jbe
sub
in
or
cmp
xchg
fcmovnu
mov
inc
add
fcoml
sub
dec
ljmp
fnsave
mov
aam
mov
dec
sub
shrl
sub
add
out
adc
adc
and
jb
fnstenv
mov
jo
inc
les
xor
sbb
repz
pushf
adc
push
xor
sub
or
dec
fs
stos
mov
rcll
mov
dec
sarl
inc
mov
sbb
popf
lcall
inc
and
jmp
cld
psrlq
sbb
dec
aam
jmp
mov
sahf
aaa
mov
jp
fidivs
push
and
xor
push
or
lock
ja
idivl
scas
pop
loope
dec
cwtl
push
push
aad
adc
cwtl
test
mov
mov
outsl
and
cltd
adc
es
mov
mov
mov
push
push
fildl
adc
out
jp
iret
mov
and
xchg
hlt
fnsave
fildll
dec
decl
mov
fwait
aaa
cld
cs
rclb
push
ljmp
ljmp
lret
aam
je
cmpsl
fidivs
mov
xor
ja
adc
insb
cmp
dec
and
cwtl
jb
push
nop
jo
outsb
addb
xchg
mov
addr16
mov
pop
add
rolb
jo
add
cld
ret
fisttpl
fnstenv
jg
mov
add
test
xchg
mov
iret
xchg
loopne
adc
in
mov
mov
xchg
add
pavgb
in
stos
fidivrs
imul
repz
pop
sbb
push
xor
ss
incb
or
cmp
out
scas
out
pop
in
xor
sub
leave
ds
and
insb
xchg
inc
xchg
rorb
mov
push
add
xchg
mov
hlt
add
pop
jp
das
jl
and
cmp
xor
pop
mov
add
jns
icebp
xchg
std
or
mov
vpsubusb
ret
cmp
mov
cmp
xor
clc
test
mov
das
xchg
cs
in
or
cmp
xlat
insb
sub
popa
pushf
xchg
fwait
mov
adc
outsl
les
adc
out
out
imul
sub
sbb
push
cmp
xchg
jns
int3
mov
pop
xchg
repz
jbe
cmp
cpuid
xchg
cmp
js
mov
movsb
scas
pop
inc
mov
shll
add
inc
into
call
fisttpll
xorb
xchg
pushf
dec
fisubl
sub
mov
sbb
mov
cmp
lds
sub
sbb
lret
das
insl
xchg
jns
push
das
inc
mov
push
add
and
fisubrl
enter
jmp
mov
pop
dec
stos
pop
xor
mov
mov
inc
sahf
and
mov
mov
icebp
rcrb
gs
addr16
aaa
cmpsb
cmpsl
pop
sti
adc
add
pop
hlt
xlat
or
arpl
pop
mov
cwtl
adc
push
in
fstps
movl
dec
dec
test
pushf
sub
push
inc
and
outsb
addr16
je
xchg
jge
jle
loope
lret
imul
jmp
sti
push
push
pop
add
jl
xor
lock
xchg
add
inc
mov
cmp
in
pop
dec
pop
insb
and
fnstsw
ss
mov
inc
fistps
push
fildll
cmpsl
xchg
pop
in
jp
aas
fcoml
in
inc
inc
lea
inc
jns
mov
or
and
mov
inc
mov
inc
fsts
insb
sbb
add
xor
add
call
cwtl
mov
lock
xchg
dec
push
pop
pusha
mov
out
sbb
inc
mov
aad
inc
adc
mov
and
cmp
mov
sbb
mov
sub
es
adc
daa
dec
cmpsl
mov
daa
fldcw
jne
mov
sub
pop
push
cmc
pop
xchg
dec
scas
mov
repz
sti
dec
push
sbbl
pushf
insl
pushf
pop
and
adc
loop
gs
or
mov
repz
aaa
leave
out
repz
adc
add
pop
inc
stos
inc
adc
or
stc
xor
dec
push
inc
repnz
repz
in
fwait
mov
sub
pop
dec
push
imul
pop
test
icebp
aam
insb
inc
xlat
inc
xchg
fwait
loope
mov
inc
out
data16
sub
and
mov
xor
cmp
and
orb
push
cmp
cmc
mov
data16
jns
int
inc
sub
pop
sub
sub
cltd
pop
repnz
repz
fs
ret
sbb
stos
xchg
fmulp
xor
andl
lock
jmp
or
mov
les
inc
icebp
orb
dec
ljmp
leave
pop
mov
clc
out
pop
sbb
mov
xor
push
js
push
mov
jl
mov
es
dec
xor
or
xlat
gs
adc
scas
sbb
and
push
lret
into
mov
popa
sarb
lods
repz
lock
sub
mov
jmp
es
mov
aas
fisubrl
adc
lret
and
aas
sbb
shll
jno
shl
dec
add
inc
fists
dec
mov
mov
sub
push
lds
std
dec
inc
mov
mov
cmpb
ss
or
fists
or
clc
nop
movsl
sbb
icebp
lods
insl
repz
push
lret
xchg
dec
cmp
decb
jb
mov
idiv
push
push
test
mov
cmp
scas
out
push
je
inc
mov
jnp
jg
pop
xchg
leave
popl
lods
jb
fnstcw
push
push
mov
call
dec
lods
into
int
xor
popa
inc
push
gs
sub
xchg
adc
stos
adc
jle
lret
pop
into
inc
lret
xor
adc
xchg
jmp
pop
int3
and
js
xor
or
mov
enter
mov
dec
add
gs
mov
ffreep
outsb
rcrl
add
cld
in
inc
sub
mov
test
mov
jge
cmp
fcmovbe
out
inc
test
pop
shlb
sbb
fwait
repz
push
inc
fldl
mov
sub
mov
add
fcomps
cwtl
insl
add
fstl
cmp
jmp
mov
lods
mov
jp
fs
jp
mov
push
mov
cltd
or
inc
hlt
repz
sub
jnp
mov
stos
stos
add
inc
push
xchg
iret
sub
push
ds
dec
cmp
leave
sbb
push
mov
inc
jp
jge
inc
cmpsb
jns
lds
inc
push
push
add
dec
mov
jle
por
mov
cld
fimuls
sub
imul
push
jl
xchg
dec
stos
lahf
pop
dec
out
shll
inc
fcoml
jmp
jle
int3
and
xchg
mov
inc
mov
mov
xor
sarb
xlat
sbb
repnz
sbb
imul
xor
inc
xchg
movsl
stos
aaa
sub
mov
and
pop
adc
mov
xor
dec
mov
xchg
fwait
xor
dec
lahf
loope
out
dec
in
repz
or
lret
push
inc
mov
roll
mov
test
pop
xchg
in
xor
lahf
test
add
insl
adc
leave
sub
jmp
inc
and
push
fprem
add
js
add
jne
mov
repz
adc
ds
jecxz
push
xchg
je
jmp
pop
rorl
dec
arpl
pop
ds
insb
mov
sti
outsb
pop
loop
cwtl
inc
add
xchg
adc
cmc
into
and
stc
cltd
cli
js
lods
cmp
jmp
push
pop
movsl
mov
aam
scas
pop
mov
pop
mov
mov
stc
lcall
mov
cmp
lods
pop
fnstenv
gs
xchg
sub
and
mov
fs
decb
inc
gs
lock
mov
xchg
dec
inc
es
sti
fnstcw
stos
in
mov
adc
clc
mov
test
cmp
xchg
mov
push
mov
xchg
jns
cmp
jnp
scas
aad
sbb
insb
aam
mov
inc
inc
or
sahf
cld
pop
inc
push
faddl
pop
ljmp
adcb
iret
fstpt
outsb
outsb
pop
mov
mov
push
or
jmp
sub
mov
xor
mov
push
into
shlb
lods
cmp
jge
mov
call
xchg
int3
xor
xchg
push
sub
insb
jo
mov
push
push
pop
cmp
imul
mov
adc
inc
pop
int
ljmp
out
mov
out
push
jb
test
mov
enter
xchg
inc
rolb
loopne
xlat
jg
xor
xchg
test
push
dec
scas
jno
pop
jbe
add
jl
xchg
mov
mov
rcrl
ret
mov
out
ss
or
mov
in
sbb
int3
sub
mov
dec
jbe
xor
fwait
sub
inc
mov
jno
xor
and
sti
mov
push
or
iret
mov
xor
inc
inc
cmp
das
cmpsb
imul
mov
bound
lods
pop
push
push
lret
pop
push
dec
mov
push
lret
into
inc
ds
cli
pop
pop
sub
popf
nop
adc
inc
mov
pop
call
push
push
repz
cmpsl
xor
xor
inc
rcrl
pusha
push
xor
xchg
std
xor
push
in
add
arpl
push
or
cltd
icebp
stos
sbb
sbb
cmp
lods
inc
pop
scas
and
xchg
mov
mov
push
sbb
push
sub
mov
xchg
pop
adc
test
sub
mov
mov
in
movsb
into
outsb
sbb
mov
dec
jge
inc
ret
xor
and
add
pushf
cld
dec
lret
dec
gs
dec
das
push
jnp
aaa
or
jecxz
sub
imul
ds
jo
pop
sbb
inc
mov
imul
inc
sbb
repz
adc
sar
leave
push
rcl
loope
add
pop
pop
fdivrl
mov
push
push
iret
pop
add
cmpsl
daa
push
test
cmp
xlat
mov
sbb
shrl
sbb
cmpsb
push
stc
pusha
test
and
in
jno
adc
cmpb
dec
ss
adc
clc
inc
test
cmp
and
shrb
jnp
mov
jo
pop
or
xor
fcoml
push
mov
pop
fbld
ret
push
addr16
clc
fwait
test
add
inc
mov
or
stc
add
jmp
scas
jno
pop
adc
mov
aaa
sbb
dec
in
mov
cmp
add
jmp
out
cwtl
inc
out
xchg
scas
cwtl
aas
adc
push
nop
push
mov
or
in
lds
or
loopne
sti
in
pop
mov
repz
xor
pop
cwtl
xchg
loope
inc
stos
lock
mov
mov
in
jl
jmp
outsl
in
int3
fmuls
mov
and
cli
jmp
adcb
adc
sbb
test
xorl
mov
es
mov
inc
dec
fs
mov
dec
int
sub
mov
dec
mov
add
jo
xlat
jmp
push
fsub
pop
jae
fcmovu
xchg
in
xchg
testb
jnp
leave
push
dec
in
into
bound
push
jge
ss
or
cs
pusha
pop
jns
mov
push
popa
ds
sbb
jmp
es
or
mov
and
xchg
push
fstpt
mov
stos
pop
xor
repnz
pop
orb
xor
and
imul
mov
jl
das
push
notl
fmuls
mov
push
aaa
dec
std
shrb
faddp
mov
scas
sbb
pop
mov
adc
xlat
pop
mov
xor
test
and
pop
stos
cmp
and
add
in
and
daa
push
call
add
cwtl
push
loope
mov
mov
cli
into
fstps
adc
adc
sbb
in
mov
enter
pop
cld
sahf
outsl
and
adc
imul
cmp
mov
pushf
mov
mov
out
movsl
cmc
push
pop
mov
adc
enter
rol
mov
insl
in
les
scas
push
or
int
xlat
push
ret
mov
popa
test
sbb
fwait
or
mov
mulb
lods
cmc
das
mov
fsubs
out
xor
cli
out
lret
push
mov
inc
dec
sbb
xor
xor
lods
gs
push
mov
aaa
aam
xor
push
mov
push
sbb
mov
fstps
pop
scas
sbb
fnstcw
mov
sbb
cmp
cs
sbb
mov
push
mov
jmp
jmp
cli
xchg
mov
dec
add
dec
test
dec
mov
fadds
lret
repz
inc
mov
pop
inc
shll
jbe
sub
mov
icebp
roll
sbb
sub
mov
dec
and
xchg
adc
out
inc
rorb
addr16
dec
fisttpl
stos
and
jmp
mov
sbb
lods
mov
mov
adc
mov
mov
iret
mov
adc
or
jge
sub
dec
ja
loopne
fwait
dec
inc
pmaxsw
lock
repz
xchg
sub
mov
aaa
mov
and
test
not
nop
push
cmp
mov
mov
sti
sub
jle
mov
push
xchg
dec
and
mov
dec
out
mov
inc
je
xor
push
xorl
sub
push
dec
std
into
loopne
adc
and
stos
fcom
lds
popf
lret
es
aad
cmpsl
cs
and
inc
daa
in
out
cmpsb
les
in
lock
add
mov
ljmp
mov
dec
mov
sub
aas
inc
and
add
or
cld
lods
mov
pop
fcmovnu
ret
jecxz
imul
mov
jno
xor
push
jo
hlt
test
cld
inc
mov
and
ljmp
mov
outsl
subb
or
insb
push
cltd
add
in
xor
add
xor
ret
mov
pop
sub
adc
cmpsb
mov
ret
out
xor
or
inc
xchg
arpl
or
or
dec
inc
push
add
dec
cli
repnz
lret
push
subl
lret
fidivrs
push
xchg
push
push
add
xchg
sbb
lock
repz
jo
nop
int3
xor
data16
movb
mov
push
loop
sbb
mov
adc
dec
xchg
movsl
jno
jle
pop
leave
jmp
movsb
push
dec
xchg
push
fcmovu
das
sub
fwait
outsl
aaa
hlt
scas
lods
or
sbb
int3
lea
dec
dec
sub
xchg
xchg
cmp
adc
and
imul
push
add
out
stos
pop
in
rcrl
dec
pop
nop
push
mov
popf
pop
jno
pop
jo
xor
jle
xchg
adc
inc
cmp
cltd
pop
add
vorps
repz
and
fdivl
mov
push
push
stc
lea
shrl
xchg
movsl
mov
stc
inc
idivl
lret
imul
xchg
loop
or
repz
mov
test
pushf
mov
mov
mov
push
aas
call
popa
int
dec
js
adc
daa
mov
push
cwtl
push
stc
xorl
mov
mov
jmp
popf
addr16
mov
add
sar
ret
pushf
testl
and
sbbl
mov
mov
sbb
imul
sub
popf
andb
push
in
mov
lcall
out
mov
leave
xchg
mov
adc
je
imul
push
lods
out
shll
jo
lods
imul
lcall
lock
outsl
mov
xchg
loop
add
out
movsb
ds
repnz
mov
jl
mov
mov
dec
or
lods
inc
pop
mov
pop
or
lahf
add
insb
gs
inc
int3
dec
mov
sbb
adc
and
and
sub
push
clc
mov
pushf
sbb
fnstenv
in
fildll
fbld
cmpsl
dec
xlat
lret
ja
ret
fmull
stc
aad
imul
popa
adc
push
int3
mov
fidivs
jb
add
shll
in
push
pop
or
xchg
mov
dec
mov
adc
dec
lds
daa
mov
cmp
mov
ja
mov
dec
std
or
test
mov
push
and
lods
cli
push
outsb
adc
inc
shl
fdivrp
in
dec
scas
negb
js
test
pop
jne
cli
nop
jle
leave
fldl
insb
xor
insb
mov
jbe
dec
mov
adc
push
dec
mov
sahf
mov
repnz
mov
out
inc
fwait
lret
mov
jg
mov
out
mov
pop
ficomps
call
cmp
push
int3
xchg
mov
pop
lods
inc
sub
int
cmpsb
xlat
add
shrl
roll
aaa
add
xor
push
lret
dec
xchg
ss
mov
je
rorb
in
cmp
cld
jb
decl
imul
fcomp
sub
mov
fdivrs
out
jne
jp
jnp
ss
push
xchg
and
mov
cmp
pop
rol
cmpsl
addb
and
cmp
les
cmpsl
call
cmp
movsb
pusha
adc
mov
push
inc
or
ljmp
sbb
int
jp
sbb
mov
pop
out
cmpsb
faddl
mov
dec
sbb
xlat
or
pop
popf
dec
ret
outsb
into
inc
leave
xor
enter
into
out
jbe
sub
dec
and
es
loopne
pusha
daa
psadbw
push
stc
inc
ja
fcmovnu
push
cmpl
sub
lea
hlt
push
dec
or
pop
out
sbb
movsl
movsb
stos
xchg
jmp
xor
mov
inc
popf
inc
in
test
push
jp
xor
repnz
pop
add
mov
inc
pushf
hlt
mov
sbb
enter
sub
xor
outsb
mov
jl
fwait
aam
jg
inc
xchg
scas
jge
das
sar
push
lret
js
sub
adc
mov
mov
push
xor
xor
mov
test
or
fisttpll
jns
cli
insl
call
shrb
popf
push
or
je
jge
popa
jmp
fsts
inc
xlat
dec
dec
pushf
xchg
xchg
xor
cli
in
push
pop
mov
aam
mov
sbb
test
and
pop
inc
gs
sub
xchg
pop
adc
pusha
mov
inc
mov
jo
shrb
aad
jnp
push
adcl
leave
cmp
jae
mov
and
iret
nop
add
pop
cmpsb
pop
int3
adc
cmc
ljmp
loop
mov
mov
push
movsb
mov
sbb
dec
push
pop
hlt
aaa
xchg
movsl
subl
mov
fldt
aad
sub
iret
or
and
insl
xchg
and
xor
dec
pusha
jmp
fsubl
and
pop
mov
lahf
jp
mov
add
push
jecxz
jae
addr16
loop
mov
fmul
mov
dec
ljmp
loopne
pop
push
loopne
xchg
int
jno
push
dec
dec
or
xor
aam
and
mov
daa
cltd
dec
pop
test
shll
mov
stos
fldl
sbb
ja
and
pop
mov
jb
xchg
out
mov
das
div
movsl
test
js
sarb
mov
inc
test
test
dec
scas
push
loope
and
movsl
jne
push
add
arpl
mov
jae
adc
adc
mov
jp
ja
orb
dec
sub
inc
jle
cmp
js
stos
fwait
dec
int3
ret
fiaddl
out
les
test
sub
mov
out
clc
mov
mov
mov
sub
and
rolb
push
fadds
xchg
pop
sub
xor
mov
cmp
sub
xor
xchg
inc
xlat
in
xchg
push
addr16
inc
mov
in
lds
adc
shrl
aad
sub
cmp
in
shr
pop
add
fdivrl
adc
aas
test
xor
or
pop
or
fcoms
test
xchg
lcall
sub
adc
lahf
jmp
and
pop
xor
inc
repz
in
jl
ja
nop
orl
mov
push
dec
scas
cwtl
adc
or
mov
out
sbb
sbb
mov
movsl
sbb
or
mov
shrl
mov
sahf
ds
stc
mov
add
push
mov
mov
rclb
shlb
leave
cmc
and
inc
pop
push
loopne
fbstp
insb
mov
dec
sub
lret
cmpl
daa
add
stos
sub
movsl
cld
mov
lahf
adc
sti
or
int3
addl
addr16
int3
scas
daa
xchg
fnstcw
shlb
nop
in
push
pop
adc
lock
xchg
jns
lods
ret
pop
inc
push
ljmp
aas
cltd
cli
loop
add
push
dec
sti
fbld
lock
std
jle
mov
cmp
or
push
jecxz
in
je
ljmp
xor
push
sub
adc
aas
dec
dec
jbe
lcall
repz
xor
lock
stos
sub
movsl
arpl
subb
xor
fsub
fbld
imul
cwtl
test
add
mov
push
jne
clc
enter
push
inc
popf
fimuls
jecxz
cmp
mov
jmp
imul
xchg
jns
jns
stc
shll
push
pop
xor
lret
or
push
push
mov
pop
push
pop
push
gs
sti
mov
dec
jle
push
mov
out
rorb
test
fstpt
outsb
aaa
xchg
dec
ret
mov
lret
mov
daa
inc
in
push
mov
and
inc
dec
jno
push
jg
filds
mov
lcall
jmp
xchg
in
loopne
decl
push
adc
push
js
sbb
rcr
lret
and
mov
jbe
lret
xchg
cmpsw
or
push
push
dec
xor
out
inc
ja
ss
les
outsl
adc
inc
aas
push
pop
sbb
push
es
mov
imul
jp
jle
pop
pop
push
ja
cmp
xchg
test
and
add
adc
scas
clc
int
mov
lret
and
je
pop
xor
sub
fstpt
std
push
xchg
iret
cmp
aaa
fwait
pop
cmpsl
mov
adc
push
in
repnz
mov
popf
jne
mov
fwait
push
push
push
insb
lret
aas
bound
dec
loop
and
jle
mov
repz
mov
mov
jo
stos
mov
shl
outsl
inc
sub
lahf
icebp
or
movsb
out
cltd
cmpsl
lock
cmp
cmp
sbb
scas
push
adc
cmp
loope
mov
xor
mov
add
pop
push
push
cmp
push
xor
push
mov
adc
push
jp
or
aam
loope
jb
nop
push
pop
shl
push
dec
xrelease
or
into
movsb
mov
add
fwait
xor
inc
rolb
ficoml
call
scas
lcall
jecxz
pop
rcrb
xor
push
flds
out
inc
jns
cmp
mov
xchg
data16
aam
test
aam
repnz
mov
add
xchg
into
in
fs
cmp
add
mov
movsl
mov
into
jp
add
and
mov
sbb
test
fcomps
push
pop
test
mov
scas
adc
push
iret
xor
lret
mov
into
ficoms
repnz
cmpsb
add
xor
xchg
and
movq
mov
inc
push
xorl
fsubl
cld
dec
shl
fisttpl
pop
iret
mov
jbe
push
xlat
xor
xlat
xchg
orb
add
ret
xor
daa
testb
xlat
shll
jnp
or
or
pushf
repz
pop
shl
mov
jp
sbb
test
dec
sbb
add
enter
imul
mov
or
sbb
sub
adc
outsb
shr
and
and
cltd
and
push
ficompl
rolb
or
je
rorl
adc
test
divb
lahf
xchg
enter
test
clc
xchg
insl
dec
movsb
jmp
sbb
shlb
xorl
jp
lahf
xor
stc
xchg
ret
je
mov
adc
adc
or
lret
xor
lock
push
inc
scas
or
xchg
or
stos
xchg
xchg
push
lds
and
aaa
int3
xchg
loopne
push
mov
lret
ds
jb
adc
in
enter
pcmpeqb
push
clc
jmp
or
jno
ljmp
das
inc
cmp
xorb
cs
cmc
stc
xchg
in
fsub
or
pop
inc
xchg
sub
pop
jecxz
out
sahf
sbb
pop
fsubr
iret
add
loope
lahf
dec
push
hlt
jbe
add
bound
dec
out
test
clc
mov
cmp
sbb
or
js
test
ror
popa
fwait
xchg
mov
and
enter
decb
or
notl
cli
dec
xchg
inc
or
mov
pop
into
jle
and
jno
ret
js
mov
mov
mov
jns
cs
jb
or
jmp
test
arpl
jnp
lds
movsl
mov
cmc
repz
nop
inc
cmp
cwtl
or
vhaddps
imul
jg
cmp
mov
add
dec
mov
pop
inc
icebp
dec
and
push
mov
xchg
rcrb
repz
mov
xchg
mov
in
jge
in
cld
inc
mov
adc
fisubl
mov
mov
insb
out
aam
jmp
xchg
das
jge
les
dec
jb
mov
mov
jb
xor
add
jg
lret
sti
pcmpgtb
xlat
xor
int3
push
adc
cmpsb
jmp
xchg
or
jo
or
lds
gs
shlb
push
je
lahf
cs
push
sub
cli
scas
mov
jbe
cmp
mov
call
cs
cs
popa
movsl
or
mov
andl
fisubs
mov
rcll
mov
call
mov
or
jbe
xchg
dec
scas
cmc
sub
fwait
test
pop
and
mov
scas
mov
es
out
js
clc
adc
xchg
push
xor
daa
jb
out
aam
out
xchg
cwtl
fxch
cmp
stos
xchg
inc
clc
or
cmc
shll
in
add
je
jl
dec
pop
jbe
shll
ss
movsb
cmp
sbb
push
xchg
pop
rep
add
fcompl
cmpb
jmp
or
jmp
aam
dec
faddl
jo
or
frstor
push
or
push
les
adc
sub
xchg
pop
sbb
jp
rcrl
mov
mov
mov
js
popa
incl
out
fs
fdiv
inc
nop
and
gs
scas
mov
shr
loopne
dec
jecxz
fdivl
cmp
mov
pop
leave
mov
xor
lea
int
mov
lret
sub
jo
mov
movb
dec
push
sub
ret
xchg
out
xchg
mov
add
push
add
outsl
jl
and
cmp
ja
scas
jp
mov
daa
incb
pushf
xchg
push
scas
mov
outsb
push
and
pop
adc
cld
add
adc
clc
fwait
sbb
cmp
add
xchg
and
xor
xchg
adc
jle
gs
xor
decl
dec
adc
mov
and
movsl
or
ret
rcrl
sahf
jo
int3
pop
push
and
out
cld
mov
jb
mov
push
shlb
and
sub
sub
jb
and
add
stos
xchg
add
inc
sbb
cwtl
dec
push
lcall
mov
out
mov
loope
fmuls
and
push
inc
push
aas
nop
inc
aas
jmp
aas
rcrl
sti
pusha
ja
mov
test
cld
sbb
repnz
sbb
cltd
push
cmp
xor
pop
int
or
imul
dec
jbe
cwtl
test
frstor
mov
outsl
dec
outsb
jecxz
outsl
jecxz
lds
lds
mov
or
mov
mov
push
bound
insl
es
fdivs
mov
shrl
inc
addr16
loope
loop
subl
inc
insb
icebp
or
mov
pop
into
in
mulb
xchg
jp
cmp
push
out
mov
fldcw
and
dec
pop
dec
mov
xchg
and
jbe
test
test
mov
pop
imul
cli
dec
cmp
jb
int
int
push
out
mov
inc
pusha
push
ljmpw
xchg
push
sti
fiaddl
outsb
addr16
dec
lret
gs
cld
test
lea
cwtl
push
mov
adc
adc
pusha
test
imul
jo
add
jne
into
mov
xchg
dec
push
xorl
icebp
xor
fadd
sbb
ret
daa
scas
mov
mov
cmpsl
or
jno
outsl
jns
fs
daa
or
jae
shll
mov
scas
mov
sbb
cmp
insl
mov
mov
push
test
or
pop
mov
jb
test
mov
int3
in
push
movsb
pop
push
dec
icebp
movsb
jecxz
cmp
mov
push
test
sbb
insl
dec
or
aas
dec
and
loop
jnp
cld
divl
cmc
mov
inc
les
testl
insb
pop
imul
sbb
loopne
push
pop
mov
fmul
sahf
stc
aas
aaa
xor
and
ds
icebp
loope
or
cwtl
cmp
les
xchg
or
lock
lret
divl
inc
js
inc
ret
cmc
sbb
clc
dec
or
mov
gs
inc
movsb
push
xor
push
pushw
scas
out
dec
sub
ljmp
xchg
jecxz
pop
mov
pusha
dec
inc
or
repz
jmp
xchg
mov
lock
iret
outsb
test
adc
lahf
fsubs
mov
insl
adc
ret
popf
loop
pop
popa
sub
shlb
mov
mov
inc
mov
lret
xchg
out
gs
cwtl
inc
pop
das
push
mov
sub
int
xor
fst
sti
xor
xchg
mov
adc
mov
mov
lea
add
push
cmp
pop
cmp
mov
cld
push
imul
jecxz
mov
cmpsb
ss
push
insb
lahf
jecxz
clc
mov
jne
out
and
push
outsl
inc
add
dec
testl
cmp
sub
pop
or
mov
shrl
push
imul
mov
mov
ds
mov
mov
sbb
mov
inc
es
or
inc
mov
out
xorl
orb
clc
adc
and
das
adc
or
int
out
fwait
cmpsb
lret
add
push
sbb
dec
cwtl
add
lcall
loopne,pn
inc
mov
test
mov
lret
clc
xor
pop
movsb
insl
push
add
xlat
xor
xchg
dec
push
xor
cmpl
aaa
mov
test
dec
aaa
jge
ret
mov
out
inc
test
pusha
xchg
addl
lods
jecxz
cmp
push
mov
jle
mov
ljmp
dec
test
pop
in
mov
push
incl
das
out
cmp
jmp
insl
jle
movb
xchg
xor
bound
mov
xchg
arpl
push
fcmovnb
jbe
loopne
iret
sti
and
into
gs
fistps
cmp
sub
repnz
stc
mov
repz
add
jae
hlt
jmp
and
fdivrs
in
idivl
mov
in
pop
or
insl
push
dec
aas
cmp
aad
and
adc
dec
hlt
or
imul
or
jno
fdiv
pop
data16
rolb
sub
mov
aad
aaa
xchg
add
ljmp
xchg
dec
rorl
cmp
cmpsl
push
aas
or
pop
mov
cli
out
stos
dec
mov
xchg
lds
pop
arpl
xor
or
flds
cmpsb
mov
jle
xor
jg
push
mov
adc
in
cmpb
sbb
sbbl
dec
mov
inc
rolb
or
pop
mov
loope
xor
aaa
jno
lcall
andb
js
mov
call
lahf
ja
cmp
inc
mov
ss
sub
mov
pushf
cld
push
add
sbb
outsl
sahf
sub
es
lcall
inc
aas
fs
pop
iret
xchg
cmpsb
mov
mov
pop
fwait
insb
jg
mov
scas
aas
repnz
ja
mov
jmp
aam
jle
jno
sahf
fs
push
test
out
cmp
cwtl
jns
fnop
mov
outsl
pushf
out
add
clc
les
inc
sti
mov
xchg
dec
sti
lret
pop
jb
les
mov
int3
xorb
in
add
out
gs
xchg
mov
or
test
fstpt
cmpsl
push
mov
popf
or
cld
inc
int
sub
mov
jns
mov
icebp
test
sbb
jns
add
ficoml
inc
pavgw
dec
testl
fbld
fimuls
push
dec
mov
aaa
and
outsl
shr
sub
outsb
sbb
pop
mov
arpl
popa
sbb
dec
xchg
into
inc
in
pop
pop
xchg
push
movsl
je
xchg
mov
or
mov
ds
lea
aas
lods
rorb
xlat
inc
sti
js
or
xor
adc
repnz
imulb
ja
sbb
push
pop
or
int3
aas
sub
pushf
or
ja
fstpl
inc
sbb
mov
mov
lds
aaa
addl
cmpsb
adc
mov
mov
push
xor
push
and
mov
sarb
sbbb
push
xchg
xor
iret
cmp
xor
aam
mov
lahf
movsl
aaa
notl
inc
cmp
insl
sbbb
movsb
sbb
je
cmp
mov
movsb
enter
ja
sti
mov
mov
jmp
bound
fisubrl
xchg
aam
sti
scas
in
mov
lock
dec
jle
sub
adc
mov
das
out
clc
jno
les
and
xchg
xor
mov
mov
xchg
push
push
mov
fsubl
mov
add
dec
popl
mov
aam
mov
adc
pop
mov
jle
pop
sub
mov
mov
pop
je
add
mov
mov
jmp
adc
mov
pusha
std
or
out
adc
repz
adc
jno
adc
sbb
or
xor
xchg
repnz
mov
mov
sbb
or
adc
pop
lcall
rorb
fidivrs
pushw
repz
xor
cmp
fiaddl
and
inc
shlb
adc
xchg
xchg
scas
sbb
aad
dec
stos
xor
cltd
test
push
or
imul
cmpl
fwait
mov
jl
sahf
sbb
jmp
aas
lea
fbld
jae
cli
fs
mov
sbb
iret
jbe
fistps
adc
dec
loope
mov
mov
or
dec
clc
jae
rclb
ret
inc
inc
sub
rorb
mov
xchg
xchg
mov
jb
mov
sbb
mov
adc
mov
das
lret
jno
out
push
cmc
sub
in
mov
cli
rorl
cmp
hlt
lret
scas
scas
lock
daa
mov
jmp
adc
ret
and
test
mov
sub
movsb
loop
int3
mov
inc
jg
fisubrl
mov
and
cmp
jae
iret
pop
adc
rcl
push
lock
or
pop
or
and
fsubrl
fnstcw
stos
cli
sub
ds
jnp
push
lods
add
sahf
push
fwait
mov
push
sub
jnp
imulb
popa
in
xabort
outsl
inc
inc
mov
stc
cld
xor
push
mov
and
out
mov
lock
jle
mov
lds
mov
pop
push
bsf
das
pop
cli
aad
push
fildll
dec
pushf
mov
inc
imul
sub
shlb
xchg
add
pop
pop
imul
mov
cmpl
pop
bound
lcall
pusha
dec
mov
sbb
mov
cli
push
sub
dec
mov
jo
imul
cmp
repz
xor
pop
xor
mov
aas
push
sub
lcall
jnp
push
lahf
xchg
mov
in
push
roll
fbstp
mov
gs
idivb
inc
fdivs
lock
inc
dec
push
push
push
cmp
int
jge
pop
popa
xchg
push
and
sub
cmp
mov
imul
and
push
les
lods
dec
jmp
repnz
pop
sarl
dec
fsubrs
fxch
pop
daa
roll
pop
in
icebp
out
xchg
push
mov
jmp
out
mov
and
lret
inc
push
add
add
push
inc
popa
adc
inc
xchg
cltd
mov
jb
cmp
and
fadd
dec
cmpsb
cld
in
xor
stos
gs
inc
mov
arpl
fdivs
push
pop
jp
push
mov
movsb
in
mov
test
mov
sbbb
ljmp
cltd
out
adc
psraw
cmp
mov
mov
lret
pop
mov
inc
jne
sbb
mov
nop
add
ffree
dec
insb
xor
push
jns
mov
ja
pop
pop
sbb
mov
jne
inc
cmp
scas
dec
outsb
push
xchg
addb
xor
insb
pop
frstor
mov
into
adc
mov
xor
out
push
inc
popf
xchg
lods
rcll
dec
sbb
mov
pop
inc
pop
jge
stos
adc
imul
mov
or
xchg
dec
adc
dec
pop
ljmp
mov
mov
out
add
pushf
push
repnz
repnz
les
push
mov
hlt
imul
push
inc
cli
das
rcll
mov
cld
call
sbb
inc
out
lret
mov
stc
stos
and
sub
mov
mov
stos
or
jno
bound
adc
fnstsw
test
mov
mov
sbb
call
jb
xchg
loop
lods
mov
push
push
dec
inc
xchg
nop
loopne
sahf
mov
dec
sbb
scas
inc
lock
fs
xor
ret
sub
jne
sub
aas
mov
mov
cli
imul
inc
xor
push
xchg
cmp
je
sub
loopne
xlat
repz
aam
loop
mov
sbb
push
stos
dec
dec
or
es
push
je
mov
aam
stos
jb
call
aas
pop
mov
xor
ss
fldenv
cmp
sarl
lcall
dec
in
cltd
or
int
movsl
outsl
gs
and
cmp
fs
and
in
add
xor
cmp
mov
imul
mov
mov
xchg
ret
sbb
sbb
push
adc
jbe
mov
adc
clc
test
int
stos
enter
stos
and
test
test
filds
xchg
cli
pop
cmpsl
xchg
mov
lahf
divb
loop
cmpsl
scas
testl
add
out
sbbl
jnp
xor
fs
push
or
xor
and
add
lcall
nop
mov
es
xchg
into
dec
stos
fdivrp
mov
mov
inc
inc
fnsave
mov
dec
iret
jl
int
mov
repz
sub
mov
outsb
sub
mov
pop
ror
rorb
out
pop
inc
stos
cmpsb
inc
jo
das
mov
cmpsl
jmp
xchg
aas
and
cwtl
cmc
add
dec
dec
mov
out
ljmp
call
xor
aas
loop
xchg
movl
testb
add
dec
imul
imul
daa
mov
notb
mov
pop
lock
es
cmp
in
outsb
aam
aam
fmuls
ss
jb
xchg
loope
jnp
or
sti
mov
test
icebp
xchg
sbb
jle
addb
cmpsl
fmull
inc
fbstp
ret
stc
loopne
in
xchg
ret
dec
cmp
ret
sub
or
insl
out
sub
rcrb
sub
fcompl
adc
push
add
push
jnp
pop
inc
fs
ficompl
or
jae
mov
jo
popf
ss
sub
or
adc
push
adc
mov
pusha
xlat
dec
or
ss
push
subl
add
int
sbb
pop
and
popf
in
xchg
call
jo
dec
xchg
lcall
cmp
sarl
sub
ror
scas
out
enter
and
js
ret
rep
jb
iret
lret
dec
es
outsl
fidivrs
loop
movsl
bound
mov
and
xchg
add
enter
enter
stos
xchg
in
cld
mov
pop
adc
or
fdivs
bound
test
repz
dec
pop
cs
push
or
lcall
icebp
rclb
xchg
mov
xlat
out
out
fwait
outsl
adc
mov
ljmp
xor
clc
push
dec
loop
fdecstp
jp
dec
add
inc
pop
push
ja
fcompp
jp
dec
push
mov
mov
mov
inc
pusha
ljmp
pop
cmp
fwait
dec
lock
pop
je
stc
xor
mov
or
push
arpl
push
xorb
divb
rcll
xor
xchg
jle
adc
adc
je
fs
cmp
push
xor
inc
cltd
lods
push
push
fwait
sbb
mov
dec
mov
mov
stos
ja
movsl
lds
jge
pusha
into
pop
sti
test
fildl
pusha
aam
sti
lret
mov
adc
xchg
mov
js
dec
or
mov
mov
cwtl
cmp
pop
mov
and
test
loop
push
fadd
shrb
xor
fnsave
and
xor
pop
mov
xchg
pop
ret
mov
loop
push
pushf
sbb
nop
cld
and
lods
mov
sar
add
adc
imull
cwtl
enter
int3
and
cli
mov
ss
jne
dec
pop
adc
jb
testb
add
repnz
fadd
stos
inc
sub
pop
xor
sub
or
sbb
cmp
inc
notb
int
fbstp
mov
fisubs
call
cmp
cmc
dec
sti
in
xchg
nop
in
push
sub
and
inc
jns
inc
and
bound
mov
and
pop
std
cmp
pop
inc
jno
sbb
fstpl
add
push
pop
popa
js
and
aas
mov
xchg
ljmp
dec
cmpsb
pop
mov
and
sbb
out
dec
dec
cli
push
sub
inc
imull
sub
dec
mov
out
sahf
lret
call
cli
leave
cmp
icebp
data16
mov
aaa
or
nop
cmp
push
pop
push
dec
mov
aas
mov
sti
jae
mov
dec
xchg
xor
xchg
je
xchg
xor
loopne
mov
mov
imul
or
lret
int
push
push
mov
push
nop
xchg
push
repnz
loop
mov
push
testl
push
cmp
repz
pop
cltd
ret
fildl
xchg
ss
sbbl
sbb
jnp
in
pop
mov
or
shll
and
fldl
dec
dec
out
adc
cwtl
cltd
popf
dec
icebp
mov
aad
push
cs
mov
push
sub
stc
push
clc
fnstenv
and
jge
adc
jns
sub
add
or
mov
add
fcoms
mov
aad
fsubrl
sbb
xlat
mov
push
sbb
cmpsl
popa
icebp
pop
mov
sbb
bound
pusha
clc
or
inc
loop
enter
inc
mov
jo
fdivrs
fisubrs
pop
leave
pop
add
scas
mov
mov
nop
adc
xor
mov
mov
imul
mov
mov
pushf
xchg
xchg
xchg
jno
mov
mov
jg
adc
popl
aaa
test
filds
pop
in
lods
outsl
shrl
aad
mov
pop
or
sub
dec
xorb
adc
or
ret
mov
or
pop
mov
das
in
test
ljmp
lods
sahf
fldt
test
pop
or
cmp
roll
jge
stos
fs
push
xchg
fistpll
mov
push
xchg
and
loope
aam
mov
cmp
mov
xor
test
dec
push
sbb
inc
xchg
int3
adc
pushf
push
mov
jl
rcl
lods
notl
sbb
pop
adc
cmpsl
hlt
xor
xchg
inc
xchg
pop
push
addr16
sub
std
cmp
inc
mov
or
jg
xchg
mov
aam
loope
cmp
jg
push
bound
cmp
mov
hlt
lods
lods
xor
and
out
cmp
or
push
sti
shr
sbb
jg
das
and
mov
xor
neg
pop
out
mov
mov
enter
stc
mov
xchg
int3
dec
pop
movsb
push
push
sub
sub
jno
scas
js
push
cmp
or
xchg
inc
cmp
jb
imul
mov
pop
hlt
dec
lcall
mov
les
inc
lods
sbb
mov
cmpsl
xor
inc
lods
dec
mov
sbb
jge
sbb
je
push
sub
and
push
xchg
ret
mov
out
push
loop
xchg
adc
jne
mov
xchg
sub
pop
inc
push
icebp
loopne
in
and
add
inc
inc
hlt
lret
prefetch
or
aam
fwait
inc
test
popa
sarb
fwait
mov
cmp
adc
dec
add
xchg
test
jne
cmp
and
ja
notl
add
or
aad
jge
xlat
xor
mov
imul
or
jne
lret
mov
mov
sbb
nop
loope
scas
pop
adc
lock
push
sub
stos
jmp
fstps
aad
out
insb
pop
push
add
int
add
sub
or
stos
add
addr16
add
mov
cmp
add
fcmovbe
push
inc
sahf
mov
call
mov
pop
pop
push
sti
mov
jle
div
outsl
test
ret
pop
bnd
repz
sbb
arpl
ljmp
and
sarl
daa
and
dec
xchg
jnp
test
cmp
mov
mov
test
mov
sub
sub
movsb
mov
ror
push
movsb
insl
mov
nop
adc
gs
jge
call
ret
push
stos
stc
inc
mov
mov
or
sbb
cmp
push
mov
hlt
sub
outsl
xchg
push
pop
jne
fdivr
mov
or
adc
push
inc
adc
cmpsl
mov
lods
ss
fldt
jb
xchg
mov
in
lds
sti
sub
rcr
outsb
mov
mov
mov
cmp
mov
out
out
pop
fdivrs
je
in
and
dec
add
inc
fsubs
int3
xchg
je
pop
mov
js
xchg
xor
xchg
pushf
mov
es
cld
or
sub
push
out
sub
into
xchg
frstor
cmc
push
mov
sub
fsubrs
or
das
add
inc
stc
or
xchg
inc
add
mov
lret
xor
mov
sarb
mov
cmp
xor
repnz
cmp
jne
and
test
sbb
shrl
adc
mov
clc
pop
inc
pop
pop
sub
imul
test
aaa
mov
cld
or
cmpsl
stos
lods
int3
lock
or
add
test
stos
jg
mov
push
xchg
mov
and
push
les
mov
pusha
fstps
mov
and
mov
ret
in
push
cltd
push
pop
fwait
pop
fnstenv
mov
bound
cmp
xor
cli
shl
pop
ficoms
xchg
dec
lcall
push
test
xor
ljmp
imul
pop
addr16
pop
stos
test
fidivrs
pop
ret
cmp
add
xchg
and
loope
out
dec
outsb
mul
mov
adc
sub
mov
cmc
incw
dec
pop
xchg
shlb
dec
icebp
add
loopne
jp
sbb
gs
mov
cmp
jbe,pn
sub
or
sbb
das
je
pop
stc
scas
cltd
ja
test
test
add
ljmp
int3
xchg
sub
jno
sub
lcall
xor
xchg
out
cmp
mov
xor
mov
adc
pop
nop
mov
test
out
das
cmp
or
loop
in
push
leave
mov
sbbl
popf
fsubr
or
xlat
cmp
repnz
je
scas
or
stos
leave
pushf
pop
insl
cltd
and
xchg
mov
jmp
mov
into
mov
rcll
cwtl
xorb
cmpsb
test
xchg
movl
mov
xor
or
fwait
insb
orl
xor
aas
int3
stc
pop
pop
jo
scas
xor
int3
or
fld
xchg
dec
lret
xor
cltd
dec
gs
dec
mov
push
xlat
xchg
lods
popa
hlt
lcall
mov
cmp
fistpll
push
rcl
in
pusha
cmpsl
icebp
jl
cmp
pop
loope
jo
iret
add
fsubs
mov
into
jmp
dec
aaa
ret
mov
pop
fcmovne
mov
mov
xor
jg
lahf
lock
sti
push
mov
shrl
aaa
adc
lods
cwtl
push
cld
adc
stos
mov
mov
dec
jle
mov
pop
mov
test
xor
mov
cmp
cmp
pushf
dec
push
and
ret
cltd
sti
fcoml
dec
bound
or
nop
add
sti
pop
xor
call
ljmp
add
sbb
add
fdivrs
xor
dec
xor
mov
jns
icebp
xchg
or
adc
and
pop
stos
jbe
in
fmuls
mov
sub
dec
nop
add
shrb
jnp
xchg
inc
imul
inc
insb
div
adc
and
mov
cmpsb
loop,pt
out
je
rorl
test
cmp
jmp
pop
sbb
mov
das
mov
xchg
lret
mov
mov
fsts
xor
das
mov
or
insl
sbb
arpl
adc
bound
mov
mov
arpl
xchg
movsl
mov
pop
sbbb
gs
xor
jnp
cmpsb
test
and
mov
inc
out
stc
jg
lds
jl
notl
rcll
cmc
jmp
daa
lods
and
sub
andb
mov
sbb
mov
leave
ds
ljmp
xorb
nop
jns
and
stos
or
repz
mov
add
dec
and
push
fcmovnb
xor
cmp
adc
mov
icebp
rcl
xchg
push
mov
adc
or
and
push
out
push
adc
stos
sti
mov
fsubrl
aaa
test
jb
stos
dec
mov
adc
loopne
push
loop
pop
or
sbb
mov
mov
push
test
mov
jnp
mov
dec
ret
sahf
jo
sbb
pop
pop
push
fwait
jne
icebp
scas
inc
add
imul
out
dec
xchg
add
je
cmp
xor
fsubrs
sbb
lcall
add
cld
mov
push
pop
addr16
add
jge
pushf
loopne
std
jbe
ja
jb
mov
call
xchg
es
dec
fs
add
pop
push
add
cmp
mov
cwtl
jno
sub
roll
mov
mov
push
dec
mov
lea
shrb
and
pop
adc
cmp
stos
aas
ljmp
ror
jle
dec
outsl
into
add
out
and
pop
xor
mov
bound
mov
push
std
popa
adc
pop
push
dec
cmp
add
cltd
or
cmp
fwait
stc
aad
mov
in
int
xor
xor
add
dec
xor
xchg
cmp
das
mov
nop
jp
aad
mov
repz
repnz
mov
cmp
fsub
inc
addr16
dec
cltd
dec
mov
jl
hlt
sti
xor
or
jle
repnz
jb
shr
push
cmp
sarl
shrl
test
dec
fisttpll
les
faddl
jns
mov
mov
adc
popa
in
cs
out
sub
xor
mov
or
mov
inc
jae
jb
dec
mov
xlat
out
add
jb
and
and
movsb
cmpsb
push
leave
inc
cmp
adc
inc
sub
js
mov
clc
adc
pop
stc
cld
push
sub
lds
push
cs
push
rcrb
xchg
add
fsubrl
out
jne
cmc
cmpsb
push
mov
push
addr16
fsubs
test
sub
movsl
push
aas
les
sub
movsl
xchg
jb
jmp
ror
mov
adc
lahf
xchg
push
lcall
or
jbe
xor
addb
or
push
jg
dec
xchg
aam
jge
mov
aaa
jbe
cmp
add
or
ret
sub
dec
insb
pop
xor
mov
aam
mov
ret
lea
aas
sub
loop
mov
imul
adc
shr
orb
insb
jg
push
jae,pn
jbe
jae
push
adc
or
mov
xor
in
adc
mov
inc
xchg
repnz
add
xor
sub
loope
xchg
aad
in
mov
pop
stos
inc
lret
or
insl
popf
pop
popl
dec
cmp
cwtl
pushf
jecxz
push
addr16
mov
lea
adc
cs
push
pusha
pop
dec
inc
popa
mov
mov
mov
xor
lea
dec
pop
lret
mov
lock
out
sub
decl
adc
cmp
inc
mov
lock
out
cmp
fcmovnu
pop
pop
loop
mov
mov
jae
mov
jle
push
dec
popf
jle
push
cld
pop
ljmp
cmpsl
mov
sbb
push
adc
dec
nop
in
add
jno
inc
lock
mov
mov
add
adc
fadd
mov
xchg
mov
popf
aas
loopne
inc
les
add
cld
add
pop
jb
in
out
dec
cmpsl
ljmp
ror
jmp
in
in
dec
add
imul
ret
popf
sti
adc
in
jl
movsb
ja
lret
movd
xor
xchg
out
aaa
xchg
push
outsb
test
bound
frstor
mov
int3
mov
mov
fcomip
dec
into
outsl
inc
dec
cs
mov
aam
icebp
xchg
sub
int
and
dec
scas
mov
mov
lahf
flds
aad
idivb
dec
aad
stos
scas
andl
xor
mov
mulps
loope
call
xchg
lds
jo
sub
pop
ds
adc
xor
xchg
pop
cs
jno
inc
sub
clc
pop
insb
mov
outsb
pop
orb
or
jbe
push
je
jns
or
push
ljmp
mov
cwtl
das
mov
and
outsl
jno
adc
lret
les
xorb
clc
mov
jp
cmc
test
mov
jne
add
xor
mov
adc
jp
or
lods
sahf
jo
mov
pop
mov
out
push
lahf
mov
push
outsl
cmp
add
or
sbb
fs
sub
inc
ret
les
add
fsubp
outsb
inc
sub
stc
add
iret
pusha
and
pop
iret
aas
lret
rorb
add
mov
mov
in
movsl
sbb
sbb
mov
sbb
inc
cmpsl
ja
je
add
dec
andb
dec
inc
sub
pop
int3
xor
fdivrp
cmp
ret
xchg
ss
out
into
cmp
int
and
jmp
cmp
mov
dec
xor
rcl
jns
repz
or
cmp
jnp,pn
stos
sub
sbb
stos
lea
mov
aaa
and
stos
cmp
lea
xchg
cmpsl
popl
push
sbb
inc
lahf
and
and
enter
jmp
mov
cs
push
sub
xlat
fists
lahf
aad
sbb
lock
xchg
mov
pop
sbb
mov
out
sbb
jge
and
adc
sbb
xlat
xchg
out
mov
out
mov
dec
sbb
dec
fmulp
mov
bnd
mov
pusha
mov
repnz
cld
imul
inc
push
outsl
add
xchg
cmp
call
test
mov
lret
add
and
and
push
mov
in
jl
fsubl
mov
js
adc
out
dec
lret
aaa
push
aaa
addb
add
xchg
cmpsl
push
cltd
jne
fmull
jge
lods
and
sbb
xor
pushf
fdivr
out
push
push
int3
sbb
inc
jae
lods
mov
orl
scas
mov
or
sti
lds
inc
aam
sbb
xchg
int3
stc
adc
orb
sub
stc
mov
lret
dec
mov
and
orb
pop
add
fbstp
add
xor
inc
xchg
adc
and
add
push
test
or
mov
push
cmp
cmp
mov
fnsave
outsl
jno
xchg
sti
add
sbb
ja
lock
popf
or
arpl
insl
pop
shrl
push
sbb
jbe
fidivrs
je
dec
push
cmp
xor
in
shl
xchg
push
adc
mov
loop
or
mov
mov
lret
imul
arpl
pop
or
dec
dec
jmp
pop
xor
pop
hlt
fldl
cmp
mov
test
push
jmp
push
roll
es
mov
push
les
pop
push
fisubl
mov
mov
xchg
xor
sbb
xor
aad
xchg
mov
imulb
aam
pop
add
pop
dec
mov
std
xor
jae
stos
mov
sar
dec
inc
mov
jbe
xor
or
mov
xor
jecxz
dec
in
rorb
inc
lds
dec
call
call
lcall
mov
out
movsl
mov
mov
push
jo
sub
fstp
pop
gs
jns
sbb
pop
lods
insb
shrl
jae
imul
xor
xor
ficompl
enter
xchg
sarl
sarb
imul
mov
mov
pop
inc
sbb
adc
fdivp
icebp
add
jl
test
nop
and
jne
sbb
clc
test
ja
lcall
jecxz
lods
inc
into
sub
xor
mov
sub
pop
loopne
movsl
push
repnz
fs
or
mov
es
cwtl
push
sub
or
imul
push
mov
stos
sub
adc
add
and
xchg
mov
frstor
jo
orb
push
add
ljmp
or
dec
jnp
adc
inc
inc
jg
ret
dec
addr16
lock
out
sbb
dec
jbe
xor
fldl
sbb
testb
xor
jl
hlt
and
jle
mov
pop
test
in
dec
jnp
fbld
add
dec
imul
jo
lock
std
jl
sub
xchg
or
mov
mov
clc
fistpll
dec
push
pop
je
jle
adc
push
shl
repnz
mov
js
mov
pop
aad
outsb
dec
lock
mov
jb
ss
and
and
fdivrs
mov
jle
jmp
int
and
test
pop
xor
adc
jnp
and
jge
call
adc
mov
adc
jnp
stos
or
sub
sbb
push
test
imul
adc
fdivl
add
mov
and
popa
sbbl
hlt
or
ja
push
jge
mov
pop
xor
xor
xor
or
ret
pop
add
nop
add
xor
inc
inc
sbb
mov
notl
dec
xor
clc
iret
nop
jnp
insb
push
gs
and
and
mov
xchg
cs
inc
ss
sbb
loope
ficomps
cltd
add
aas
inc
cmc
xchg
aad
xchg
push
popf
leave
scas
xchg
adc
test
sbb
negb
or
xchg
jae
inc
mov
aad
test
mov
mov
push
xchg
sbb
shll
inc
mov
push
js
jno
addb
sub
mov
dec
mov
stos
lods
mov
out
xchg
adc
testl
cs
add
fcomps
fisttpl
pop
mov
ror
pop
xchg
sbbb
lcall
dec
clc
or
cmp
cmpsb
ja
cmp
and
aas
pop
xchg
and
aad
sub
shrb
stc
popf
jmp
and
jl
popa
out
in
pop
cmpsb
or
push
push
sbb
inc
frstor
aam
push
pop
in
push
iret
shrb
dec
jbe
adc
inc
add
test
ficompl
cs
ljmp
xchg
repnz
fldenv
or
dec
lret
push
dec
push
lods
dec
xchg
outsl
dec
mov
mov
inc
imul
les
jl
inc
test
sti
or
push
mov
pushf
stos
aaa
cwtl
test
into
in
repnz
repnz
add
dec
stc
mov
xchg
jns
dec
dec
xchg
dec
clc
inc
inc
testl
test
adc
jae
xchg
push
lock
and
xlat
stos
mov
pop
in
leave
jge
mov
mov
sub
lea
or
cltd
adc
das
mov
jne
int3
in
test
dec
push
arpl
test
or
ret
jecxz
cmp
jae
das
movsb
push
push
scas
ds
dec
andl
lcall
ret
cmp
push
repz
loope
xchg
icebp
cwtl
and
dec
outsb
repnz
stos
fcmovnb
ds
xchg
mov
sti
and
cmp
bound
cmpsb
loop
push
xchg
adc
daa
mov
dec
cli
imul
mov
dec
negb
sbb
push
push
jns
daa
je
arpl
ret
in
or
lods
push
and
leave
mov
popf
mov
add
icebp
sti
xchg
mov
test
dec
dec
scas
mov
xor
mov
data16
rclb
dec
pop
mov
test
ss
jbe
and
sbb
das
dec
lahf
xchg
dec
int
adc
je
in
aas
push
bound
xorb
sbb
dec
sub
mov
mov
dec
in
mov
sub
mov
stos
adc
lds
mov
repnz
dec
nop
and
enter
push
and
or
adc
mov
cwtl
aam
xchg
adc
call
popa
add
push
loopne
lea
aas
cmpsl
dec
xchg
fldt
lret
mov
test
loopne
push
es
in
fs
dec
mov
sar
push
test
leave
cs
stos
push
shll
into
push
and
out
and
in
sub
jae
out
enter
test
inc
ret
mov
std
jle,pt
adc
testb
xchg
pop
jbe
inc
jnp
clc
data16
or
xorl
cmpsl
cmp
mov
or
xchg
fcmovbe
popf
inc
jp
sbb
mov
aam
xchg
push
mov
movsl
in
jmp
pushf
jo
jb
mov
push
mov
adc
mov
das
scas
mov
rcr
sub
mulb
adc
add
les
ljmp
enter
ljmp
lret
cmp
push
mov
lock
cwtl
mov
cs
mov
aam
js
fnstsw
lahf
mov
xchg
test
cmp
std
push
mov
pusha
cwtl
iret
pop
loop
das
stc
and
inc
arpl
cmp
fisubs
or
jge
push
inc
jle
dec
je
cmp
enter
and
inc
jg
out
push
mov
rclb
lock
sub
sub
std
jae
movsl
iret
inc
lea
test
test
cmc
mov
faddl
scas
or
mov
pop
rep
test
aas
xchg
mov
xchg
je
xor
gs
add
mov
jge
pop
push
mov
jnp
scas
sub
shlb
sbb
jo
call
dec
ss
dec
dec
dec
or
xchg
mov
test
xchg
pop
push
fsubrl
inc
fs
jmp
das
fs
nop
shlb
add
and
ds
push
dec
das
mov
cmpsb
pop
loop
orb
in
push
cltd
mov
cmp
gs
cmpsb
ljmp
cld
outsb
cmc
pop
adc
loop
aas
xor
lret
shrl
ss
mov
push
and
sbb
add
lahf
out
jmp
sub
dec
adc
push
mov
inc
or
sbb
scas
jns
sbb
push
arpl
outsb
or
inc
aam
scas
xchg
inc
sub
sbbb
out
pop
jns
movsb
sub
sub
into
insl
cld
test
mov
or
aam
sbb
std
or
lahf
bound
and
mov
js
xchg
or
xchg
hlt
pop
pop
ljmp
xlat
insl
xor
sub
sbb
dec
lea
jo
sarl
enter
and
in
dec
push
or
mov
xchg
mov
jge
mov
in
loopne
mov
iret
cmp
jbe
out
or
fwait
cmp
push
sub
pop
inc
adc
icebp
inc
dec
sbb
pop
rcll
mov
or
sbb
add
push
mov
cs
mov
cmp
push
and
or
inc
jb
jp
out
or
movb
sub
push
add
pop
divl
cmpb
xchg
lret
cs
xlat
inc
repnz
ficomps
xchg
pop
outsl
aam
inc
cltd
cmp
push
cmpb
orl
jb
mov
fildll
or
call
jp
cwtl
fs
sbb
jne
and
xchg
lret
sbb
dec
lock
lock
ss
sbb
xchg
pop
hlt
push
fisttps
je
xor
les
xor
pop
xchg
and
sub
pop
insb
stos
fwait
cmp
lret
jl
adc
dec
in
pop
inc
sbb
aad
adc
shrb
fdivrl
fldl
inc
pop
xor
mov
fsubl
dec
jmp
cmp
adc
jb
cs
pop
adc
lahf
jnp
rcll
dec
xchg
insb
push
jne
test
sbb
xchg
xor
jne
pusha
out
int
scas
dec
es
int3
add
in
inc
testl
popf
popa
ret
lcall
call
movsl
in
cld
clc
pop
and
lods
xor
test
push
xor
pop
and
inc
mov
inc
xor
jge
inc
mov
jl
sub
cmpsb
add
mov
popa
lret
aad
jo
inc
adcl
cli
add
adc
sbb
jae
clc
addr16
lret
jbe
jg
adc
movsl
daa
rcr
outsl
sbb
cmp
pop
lcall
sub
cltd
add
leave
clc
mov
inc
je
and
pop
mov
sbb
sbb
decb
lock
fildll
push
dec
inc
inc
outsb
pusha
jo
in
mov
push
gs
sbb
fimull
inc
mov
loopne
fisttpl
stc
in
jmp
add
xor
ja
subl
int
pop
dec
lock
and
stc
push
pop
xor
jns
ljmp
inc
xor
mov
mov
pop
inc
sti
jo
imull
jne
je
rcll
mov
aad
and
jbe
sbb
inc
popa
sub
sahf
jge
or
shrl
dec
aad
ror
pop
pop
add
mov
and
rcrl
jb
and
popf
jecxz
jp
jp
data16
cwtl
push
inc
repnz
lods
jecxz
push
mov
sbb
mov
jl
int3
daa
mov
fwait
and
jno
mov
pop
or
mov
jecxz
mov
sub
in
ret
dec
rcrb
mov
mov
mov
scas
xchg
add
sub
leave
out
ja
js
dec
iret
lcall
imul
mov
arpl
std
and
sbbl
mov
jo
clc
mov
aas
sub
push
dec
out
lods
add
fmul
fadds
notl
xchg
push
adc
jp
jno
xor
adc
lgs
negb
sbb
xor
scas
lret
mov
xor
dec
sbb
in
xchg
push
mov
inc
and
xchg
and
dec
popa
dec
ja
roll
loopne
scas
insb
sub
scas
and
shrl
in
inc
cmp
nop
test
xchg
pop
js
aad
push
xor
jge
mov
pop
iret
shr
cmp
mov
dec
sar
adc
gs
fadds
sbb
or
aaa
pop
jmp
cs
imul
cmc
mov
sub
shll
pop
cmp
nop
sub
pop
add
jp
and
push
les
cmc
int
not
loopne
addr16
loop
mov
jle
std
rcrl
testl
int3
xlat
mov
lods
inc
mov
mov
mov
xchg
in
sti
insb
in
mov
xchg
xchg
jge
sub
xor
add
adc
inc
cmp
es
aam
mov
fbld
add
add
mov
mov
les
cld
lret
jae
imul
sub
cmpsb
cmpsb
xchg
adc
imul
aas
call
mov
jns
je
outsb
push
adc
mov
or
nop
adc
fwait
add
insb
imul
in
dec
mov
pop
rclb
pop
xorl
mov
pop
inc
ss
fincstp
lcall
push
cmp
es
sbb
dec
sbb
out
call
scas
pop
inc
inc
int3
sahf
push
jle
add
sbb
or
xchg
pop
sti
cmp
mov
ljmp
dec
movb
popf
pop
inc
add
aas
xor
fsts
test
test
bnd
cmc
in
movsb
and
sbb
pop
insb
or
aad
sbb
jecxz
aam
jbe
shl
call
pop
cmp
mov
xor
xor
cmpsb
dec
mov
out
test
jno
rolb
xor
push
jmp
pop
push
jne
push
add
fld
jb
sbbl
ret
jb
sub
xor
sbb
lret
jns
adc
repz
daa
js
ss
push
and
lods
add
jg
pop
xor
sbb
je
out
mov
cwtl
shrl
sbb
les
dec
aad
push
fcompl
push
dec
add
sub
mov
jmp
loopne
add
fwait
int
mov
inc
xchg
inc
jo
lods
out
mov
xor
mov
and
leave
adc
insb
cmpsl
pop
pop
cmp
lock
xor
rclb
in
outsl
cmp
pop
sub
sub
stc
cmc
xchg
pop
popf
lds
cld
push
dec
out
scas
adc
inc
xor
xchg
rdmsr
dec
sti
adc
out
push
data16
sub
sub
jne
inc
icebp
inc
push
adc
lods
mov
jmp
inc
push
inc
xchg
shrl
cmpsb
dec
sub
cmp
int
adc
outsb
stos
ret
out
fadd
add
mov
or
bound
or
out
inc
mov
outsb
jbe
inc
int
pop
incb
shrl
inc
rep
mov
sbb
je
cmp
icebp
out
iret
push
aam
lcall
cmpsb
push
or
mov
cmpsb
push
mov
imul
mov
outsb
pusha
fcompl
enter
fsubl
push
xor
rclb
pop
daa
orl
sbb
lret
inc
sbb
loopne
pop
and
and
mov
lock
cld
or
cmpsb
ret
pop
pop
sub
leave
adc
repz
pop
dec
jecxz
aad
test
cli
inc
jl
cmpsb
test
or
rolb
lret
push
outsl
add
mov
mov
mov
cmp
in
std
dec
pushf
adc
add
lock
mov
popf
loopne
jo
push
push
xor
rorb
sbb
add
fcmovnu
sarb
dec
ja
add
cld
adc
dec
arpl
stc
xchg
inc
mov
mov
scas
aas
jno
pop
push
mov
jp
inc
adc
lock
in
arpl
fisttpl
push
js
stc
roll
dec
mov
mov
dec
mov
adc
cmp
stos
xor
jp
data16
or
mov
push
addr16
mov
pop
pop
pop
mov
inc
cmpsl
xchg
icebp
xchg
cmpl
inc
div
dec
mov
adc
push
daa
pusha
les
stos
mov
ret
cmpsb
push
jne
mov
push
add
inc
fdivl
sahf
cmp
aas
xchg
add
scas
push
jg
xchg
inc
outsb
sub
push
mov
add
adc
pop
stc
fiadds
xor
adc
adc
shl
sub
mov
popf
and
rcr
sahf
insl
pop
sub
mov
push
mov
movsl
xor
add
mov
dec
ljmp
iret
cs
stos
jl
push
sub
pop
jns
sub
push
or
pop
cmpps
stc
js
mov
push
inc
enter
mov
xchg
pusha
add
out
mov
ss
enter
pop
in
cmp
movsl
sbb
cmpsb
pop
cmp
adc
mov
fstpt
pop
in
inc
sbb
pop
sbb
fwait
int3
out
aas
xchg
data16
sub
pop
ret
ljmp
dec
scas
cmp
imul
fdivp
inc
push
sbb
aam
ret
push
mov
stos
pop
push
push
aaa
iret
xchg
mov
jg
sarb
mov
stos
jg
ljmp
ds
jmp
loopne
xor
sbb
mov
mov
ror
dec
dec
mov
fsub
and
bound
out
fistps
lea
cmp
xor
cld
cmpsl
addr16
lea
mov
xchg
cmpb
popf
movsl
xchg
or
xchg
movsb
and
fdivp
inc
inc
sub
ret
std
cld
dec
xlat
test
adc
test
lret
lock
mov
adc
pop
cwtl
jge
aad
mov
arpl
lret
jns
aas
fwait
popf
adc
aas
iret
fwait
xchg
dec
jge
sub
mov
jb
orl
or
jecxz
cmpsb
push
movsb
shlb
leave
outsl
mov
ljmp
xchg
enter
mov
adc
movzbl
cmp
jge
pop
scas
movsl
mov
lds
cld
inc
test
xchg
lods
icebp
cld
xor
enter
add
mov
shlb
lret
enter
lret
jl
adc
out
ret
stos
scas
fs
add
stc
shrl
lret
insl
xor
jbe
dec
cmpsb
bound
std
jp
cmc
mov
das
fwait
ret
add
dec
fisttps
push
ss
mov
xchg
cld
adc
push
push
or
mov
shr
addr16
and
daa
push
pop
mov
outsb
sub
pusha
inc
loop
imul
cmp
dec
stc
sub
pop
cwtl
addr16
xor
and
and
jne
sbbl
ficompl
pusha
push
push
stc
lahf
call
xor
or
mov
mov
push
mov
mov
pop
mov
stos
int
sub
iret
dec
pop
or
fstl
ds
mov
mov
jg
pop
cmp
loope
xchg
loopne
or
mov
push
insl
repz
lods
out
xchg
sarb
pop
int
fistl
pop
cwtl
or
lds
imul
pusha
inc
mov
mov
popa
into
cmp
mov
fwait
dec
sub
lret
add
mov
pop
push
incb
or
xor
lcall
push
aam
daa
adc
sub
push
push
jge
xchg
mov
pop
sub
mov
push
shll
mov
and
gs
or
push
mov
sbb
shlb
fdivrl
xor
loope
xchg
xorl
rorb
stos
bound
push
adc
repnz
or
stc
jle
fimull
popf
xor
xchg
mov
and
adc
dec
jl
add
arpl
add
ljmp
out
mov
mov
daa
insl
jecxz
and
xor
xchg
out
cs
pop
enter
or
mov
insb
pop
push
cmpsb
shr
add
test
mov
fcmovb
aaa
mov
push
ret
fs
icebp
bound
xchg
jmp
and
mov
xchg
push
mov
mov
call
stos
adc
mov
push
cmp
inc
push
es
das
sbb
or
xchg
mov
mov
and
jp
cmpl
jle
jl
add
nop
fisttpl
jne
xor
cmp
into
inc
andb
xchg
pop
xchg
mov
inc
test
call
mov
inc
add
aas
lods
jmp
cmp
adc
sbbb
mov
push
xor
xor
mov
test
add
fcmovu
pop
pop
out
scas
incb
std
sahf
in
pop
pop
mov
jns
or
xor
testb
in
pop
inc
dec
loop
cmp
jg
inc
mov
add
mov
mov
pop
or
or
pop
test
add
jle
push
iret
int3
jns
test
pop
sbb
inc
filds
cmp
lahf
pusha
inc
sub
xchg
dec
jno
pop
inc
dec
xor
mov
adc
cld
mov
ficomps
xchg
ret
add
les
bound
sub
mov
or
xrelease
das
daa
adc
inc
mov
aam
cmp
popa
dec
xchg
test
inc
loope
jl
clc
mov
push
cmpsl
inc
pop
fstpl
mov
fsubrs
push
pop
mov
mov
jle
in
and
pop
in
sbb
or
lahf
scas
les
add
xchg
mov
imulb
add
fldt
lret
cmpsb
repnz
sbb
lahf
int
cmpsl
xor
pop
mov
adc
test
add
fsubs
push
pop
addl
and
insb
leave
jmp
mov
clc
dec
dec
outsb
push
jmp
xchg
add
lds
scas
mov
dec
lret
and
lret
in
ljmp
sub
mov
filds
push
loope
sti
sbb
rorl
pop
les
pop
mov
jmp
or
dec
dec
adc
ret
mov
sti
ss
adc
pop
dec
xor
flds
jne
fistpl
mov
mov
mov
addr16
jne
stc
lods
jbe
xlat
sub
addr16
in
adc
or
dec
sbb
in
std
mov
mov
lods
mov
or
add
cwtl
in
scas
into
cld
adc
mov
test
xchg
into
push
or
enter
or
jmp
imul
test
jb
mov
inc
jne
aas
mov
xor
ficoml
outsb
rclb
leave
push
pusha
es
shll
fcomps
jg
sub
cmp
into
add
mov
je
mov
bound
imul
pop
push
imull
sti
and
inc
ljmp
scas
sub
xchg
dec
cmc
out
sub
xor
fimull
dec
pushf
in
call
lcall
pop
sub
subl
and
cltd
mov
xchg
aas
push
inc
mov
sbb
imul
push
mov
mov
jl
push
rcrb
stos
add
fisubl
adc
add
cmpsb
mov
inc
jns
push
fwait
add
push
ffreep
ret
mov
subl
repz
cli
scas
sbb
mov
sub
or
inc
add
aam
mov
negl
push
jno
push
rcrl
lret
mov
push
inc
rolb
push
cmp
in
iret
xchg
idivl
jb
insl
pop
mov
dec
adc
push
cmp
loopne
mov
cmp
rorb
cmp
sbb
mov
fistl
shll
fiaddl
and
cmc
mov
jns
fwait
lret
xor
lods
mov
jmp
jmp
dec
add
int
add
add
dec
jg,pt
es
mov
jb
in
lcall
lret
inc
bound
jle
lahf
and
jecxz
ret
sub
pop
cmp
ja
in
push
rolb
add
push
cmp
icebp
std
addr16
gs
cmp
fistpl
mov
addr16
xor
add
insl
push
xchg
fstpl
imul
rol
xor
ds
sahf
addb
hlt
pop
ja
pop
fstpt
leave
push
mov
out
push
xchg
fs
pusha
push
test
and
testl
fcomip
imul
in
xor
xor
push
fwait
sub
stos
repnz
sbb
push
in
adc
insb
jbe
mov
jae
mov
lea
aas
adc
mov
movsl
mov
inc
mov
stc
mov
sbb
es
jb
decb
into
push
xor
push
orl
iret
leave
push
pop
mov
push
lcall
mov
mov
repz
jl
jle
push
out
dec
push
jmp
push
insl
imul
cmpsl
cmp
dec
loopne
cmc
lds
je
add
cmpsb
movsl
ret
dec
lcall
push
fidivrl
and
adc
js
cmp
inc
mull
and
adc
cltd
push
mov
in
adc
sbb
jnp
push
imul
rcl
lcall
jl
mov
push
xchg
pushf
leave
daa
mov
loopne
scas
addr16
sbb
jbe
pop
mov
and
ljmp
xchg
jo
inc
sar
out
push
stc
mov
jmp
sbb
movsb
rolb
cwtl
pop
mov
jecxz
int
jbe
ss
bound
sahf
sbbb
lods
inc
in
ret
dec
push
fstps
mov
add
testl
push
cltd
test
mov
cmp
push
icebp
pop
and
rcll
cmp
fmull
push
jp
lret
xchg
sahf
mov
sub
mov
lea
xor
mov
shlb
cltd
and
mov
rcll
dec
sub
mov
add
dec
xchg
xor
cmp
xlat
mov
sbb
push
nop
adc
mov
test
in
sub
xchg
lods
cli
ss
cmp
and
daa
and
ret
dec
xchg
sub
mov
or
xor
sub
test
insl
dec
lds
jg
mov
pop
rclb
cltd
pop
fs
jbe
mov
push
dec
sarl
rcrl
cmc
mov
mov
push
add
inc
cli
clc
and
sub
out
cmp
adc
fs
nop
ss
test
sahf
and
sti
repnz
sarl
ljmp
cmp
std
in
and
xchg
jb
add
or
adc
arpl
mov
bound
dec
dec
mov
lret
outsb
loopne
or
cld
cmp
sbb
std
out
je
lea
pop
loope
mov
jg
inc
dec
inc
pop
mov
pop
push
sub
add
rcrl
sbb
out
out
add
ffree
negb
loope
leave
jecxz,pt
pop
add
mov
rcll
inc
add
popf
loope
mov
pop
inc
subl
sub
ret
daa
add
repnz
or
xor
cmp
add
inc
cmp
aaa
xchg
xchg
lods
mov
inc
or
pop
mov
jg
dec
popf
dec
aaa
mov
sbb
sub
jl
sub
adc
mov
lods
bound
adc
sub
mov
movsl
adc
push
cs
jae
mov
fsts
test
cmpsl
rcrl
pop
mov
rcrb
ret
mov
dec
stos
push
je
stc
xor
pop
push
testl
insl
cmovg
lds
bswap
or
in
xchg
sarb
aam
loopne
and
inc
adc
add
sbb
jge
or
stos
imul
insb
dec
dec
adc
lock
cltd
fwait
call
pushf
mov
out
clc
sahf
mov
ss
popa
je
js
jecxz
shlb
or
outsb
pop
sarb
stc
mov
movb
jmp
lahf
aad
xchg
jnp
sti
daa
test
ljmp
mov
sbb
stos
fstl
iret
xor
xor
popa
repnz
pop
pop
sub
cs
sub
mov
mov
cmpsb
fabs
nop
dec
inc
dec
clc
lock
popf
cmpsb
les
icebp
mov
mov
shll
idivl
fsubrp
sbb
popf
adc
pop
sbb
add
ljmp
push
ret
loop
mov
ret
loope
ja
mov
jle
fsubrp
sarb
xor
loop
xchg
movsb
mov
dec
jo
add
loope
mov
or
xlat
jmp
sbb
pop
loopne
lahf
pop
lahf
inc
inc
push
cmp
pop
cs
xor
pop
lret
cltd
lods
pop
adc
mov
add
mov
xor
call
dec
arpl
sub
ficoml
mov
mov
adc
fdivs
adc
xchg
dec
cmpl
mov
dec
addr16
xor
addb
push
shll
mov
inc
pop
add
aad
mov
inc
and
inc
scas
mov
fstl
cmp
sub
pop
cmc
arpl
push
push
mov
lret
mov
pop
iret
ds
std
hlt
test
push
xchg
and
mov
sbb
loopne
mov
cmc
sti
mov
movsl
sub
add
insl
mov
addb
sbb
shrl
shlb
add
xchg
cmp
jle
aam
and
jmp
rorl
lea
incl
inc
lcall
mov
mov
add
push
xor
jae
pop
cwtl
sub
jnp
sti
cmc
ljmp
aaa
mov
and
nop
inc
outsb
popa
pop
in
in
xchg
xchg
push
cmp
push
push
mov
divb
into
sbb
int3
and
cmp
xchg
push
mov
jp
fs
mov
jae
scas
jp
xlat
stos
shll
or
and
imul
shll
inc
lods
test
stos
cmp
xor
in
adc
jle
and
mov
sbb
rcrl
mov
xchg
mov
jl
lret
sarb
mov
push
ljmp
mov
pop
xorb
cmp
adc
cmp
lock
push
fcomip
jb
or
ljmp
and
pushf
mov
mov
loopne
sbb
jg
enter
add
push
inc
notb
add
in
adc
lods
insb
cmp
and
adc
or
addl
je
je
jmp
mov
jl
jle
sub
push
mov
adc
ja
in
or
test
sub
stos
iret
inc
movb
in
jae
mov
mov
cmp
push
idivl
into
lea
push
xchg
mov
xchg
sub
push
xchg
mov
cmp
and
bound
enter
pusha
and
arpl
cmpl
cs
mov
jae
cmp
jecxz
test
cmpsb
test
adc
sbb
inc
dec
cmp
jmp
xor
or
scas
dec
fcmovb
out
fildll
enter
in
xor
mov
jecxz
mov
pop
dec
jb
and
sarl
push
mov
divl
iret
into
or
cli
dec
loope
adc
push
xlat
clc
mov
pusha
push
js
cmp
cmp
rorb
dec
mov
rol
pop
stc
stos
mov
mov
rol
sub
movsb
rcr
mov
push
dec
mov
scas
movsb
iret
lods
vmwrite
repnz
loopne
or
mov
into
test
mov
fwait
stc
aad
xor
hlt
push
sub
jns
or
jne
negl
js
mov
mov
or
or
icebp
mov
insl
dec
xor
push
aam
into
adc
jno
aad
jo
mov
shll
cmc
sbb
movsb
test
lds
mov
mov
ss
insl
inc
subl
aam
jmp
pop
jnp
cwtl
imul
insl
inc
push
fadds
dec
jg
insl
xor
or
mov
push
push
push
xchg
std
into
jp
test
xor
sub
or
xchg
sarl
es
push
push
call
cmc
inc
ljmp
push
jb
mov
cmp
sub
enter
mov
sub
pop
es
mov
push
arpl
scas
or
inc
inc
cmp
pop
dec
or
clc
popa
adc
and
rcrb
push
outsl
xchg
jmp
and
icebp
cmpl
pop
shll
sub
shrb
arpl
and
adc
jne
iret
mov
xchg
sub
loopne
shlb
fwait
bound
xor
push
and
cld
sub
loope
daa
aaa
arpl
push
mov
mull
and
sti
pop
cmp
add
sbb
ds
nop
lret
negb
repz
xchg
pop
movsl
lds
cmp
or
scas
mov
mov
cmp
arpl
cld
push
insl
xor
push
add
dec
pop
movsl
sub
mov
daa
and
dec
dec
or
loopne
push
cmp
cmpsl
inc
sbb
je
mov
in
xchg
mov
xchg
xchg
enter
fistps
xlat
push
xor
mov
das
out
and
fucom
inc
scas
sbb
mov
and
insl
shlb
inc
jge
incl
xchg
test
pop
xor
aad
stc
push
sub
ret
fstl
push
add
enter
jmp
outsb
aad
or
fdivrs
add
sbb
movsb
mov
test
subb
pop
jle
lock
movl
hlt
scas
mov
in
adc
rclb
push
imul
insl
lock
ret
aas
pop
mov
cwtl
xor
bound
aam
aad
xchg
aad
mov
out
in
or
divl
xadd
xchg
jge
insb
push
leave
ss
ja
loop
lret
push
and
inc
jp
loop
aad
mov
jno
xchg
and
outsb
dec
out
ljmp
loop
sub
inc
out
xchg
popf
xchg
adc
or
mov
sub
leave
ret
jbe
iret
enter
popa
sbb
adc
ljmp
cltd
scas
rolb
xchg
mov
jp
shll
out
adc
mov
pop
rolb
cmpsl
cmp
test
loope
inc
jo
vmsave
sub
rcr
inc
aad
dec
jb
push
loope
aas
data16
maskmovq
in
scas
xchg
mov
pop
addr16
test
scas
pop
pop
or
xchg
pop
outsb
insl
enter
inc
mov
les
in
das
mov
rol
jbe
rcll
enter
les
cmpsb
es
je
icebp
pop
or
cld
pop
enter
lahf
push
mov
in
xchg
cld
fninit
jnp
or
or
fldt
fld
or
int
sub
lods
sub
movsb
lret
or
stos
aam
lahf
out
movsl
mov
jmp
inc
movsb
mov
jbe
xor
adc
scas
xchg
or
in
sub
jp
dec
arpl
jno
jne
int
jmp
out
jno
fs
dec
or
inc
lahf
ds
in
std
cmp
sub
enter
push
sahf
jb
pop
loope
pushf
lock
mov
jecxz
jg
pop
add
dec
vpacksswb
sbb
je
stos
in
lcall
fcompl
sbb
xor
sbb
es
mov
sub
xor
pop
adc
pop
xchg
fwait
in
cltd
in
icebp
mov
push
loope
mov
and
mov
mov
pop
sub
outsb
mov
jle
out
push
lahf
xor
xchg
popl
push
dec
push
xor
dec
xor
test
test
pop
lds
xchg
test
pop
mov
sub
sbb
mov
add
or
xchg
dec
fisubl
js
mov
outsl
jne
mov
mov
xchg
xchg
mov
iret
repz
lahf
sub
mov
cs
sbb
fwait
jmp
pop
ds
repnz
stos
adc
or
enter
sub
ja
inc
xor
sub
ja
nop
mov
ret
leave
scas
loopne
lock
inc
movsb
out
jecxz
mov
ja
push
pop
mov
add
or
dec
push
fidivl
or
xchg
ljmp
xor
das
shrl
fldt
push
jnp
inc
out
loop
add
sub
push
add
adc
sarl
and
ja
into
lock
lahf
std
lock
ret
nop
addr16
ds
cmpsb
sub
mov
mov
mov
cmpb
sbb
addb
nop
popa
pop
pop
dec
dec
jmp
mov
pop
xor
int
repnz
je
mov
aas
vcvtps2pd
xchg
sub
sub
xor
fisubrl
lret
pop
xor
insb
adc
call
out
ret
push
pushf
mov
push
inc
sti
jne
cmc
ja
bsf
and
leave
test
or
and
stc
in
push
repz
pop
xchg
and
fcoml
and
lods
loope
in
addl
or
sbb
dec
push
cltd
cmpsb
movsb
mov
popa
push
and
popf
rcrb
mov
in
das
lock
mov
rcr
fs
int3
test
cmpsb
popf
hlt
push
incl
or
sub
fstpt
stos
lret
sti
xchg
loope
cmpsl
pop
rcll
sbb
in
sub
mov
test
nop
push
ret
jo
testb
rol
xor
dec
fstpt
or
bound
shrb
jne
lcall
pop
js
and
gs
lahf
hlt
cmc
dec
ja
in
std
mov
cmpsb
mov
pop
sub
mov
insl
and
push
stos
and
fwait
mov
adc
aas
xchg
xchg
jmp
sbb
pop
nop
leave
dec
mov
fistps
xorb
imul
jle
lock
enter
std
outsl
cmp
es
iret
mov
pop
xor
sub
xor
fadds
mov
jns
jg
jle
jbe
push
stos
imul
popf
cwtl
into
dec
push
mov
cmp
rcrl
xor
imul
push
sbb
data16
pextrw
mov
hlt
mov
insl
test
std
inc
dec
sub
adc
stc
add
or
cmpsl
jp
into
out
lds
pop
mov
ljmp
in
sbb
leave
mov
icebp
test
iret
fstpl
pushf
hlt
dec
add
je
loopne
xlat
pushf
addr16
addb
jecxz
xchg
call
mov
stc
out
daa
jb
push
xchg
jmp
lret
push
push
das
das
ds
inc
mov
mov
js
cs
jge
sub
lods
push
or
xorl
sub
test
xchg
aaa
xchg
mov
xlat
fnstsw
mov
inc
pusha
scas
mov
jl
adc
icebp
pop
jmp
dec
push
dec
push
and
lock
fs
scas
push
dec
xlat
and
dec
in
xor
test
sahf
mov
mov
aaa
lock
sub
inc
mov
sub
sahf
gs
xchg
cmp
inc
cwtl
mov
cmp
loope
dec
mov
xchg
sub
push
fwait
icebp
stos
mov
rorl
movsl
incb
sti
add
cltd
adc
imul
mov
and
fimuls
sub
std
sub
cli
pop
mov
popa
add
sbb
sub
and
int3
xchg
push
fisttpll
fwait
aas
fisttpl
adc
sbb
mov
sti
fcomps
daa
repnz
andb
js
js
addl
pop
sbb
nop
shrl
push
pop
or
inc
mov
xchg
enter
sub
mov
pop
iret
in
test
out
loope
sub
outsl
jl
adc
mov
xor
loope
xchg
mov
push
xchg
popa
xchg
out
sub
cwtl
mov
push
mov
pushf
jl
pop
popa
sbb
in
fs
daa
movsb
lret
out
mov
cmpsl
or
dec
jmp
cli
cli
pusha
test
add
call
add
xlat
jb
mov
in
xchg
sbb
xchg
adc
dec
sub
fs
fisubrs
mov
mov
pop
int3
daa
filds
mov
or
icebp
jecxz
dec
lods
or
xor
lea
xor
mov
and
sbb
push
lods
rep
xor
fwait
dec
pushf
int
js
fcmovu
popa
dec
les
fidivrl
dec
fisubrl
fdivrp
mov
mov
pop
mov
testb
shrb
popf
push
out
scas
add
jo
loop
jbe
fs
mov
xchg
cmp
in
mov
push
inc
jno
cld
push
cmpsl
fiadds
mov
push
lahf
repz
clc
inc
mov
cmpsb
stos
popf
shll
cmp
mov
imul
adc
or
sbb
or
mov
fucom
cmp
sub
push
sub
mov
jns
sbb
pop
jnp
sbb
pop
jp
mov
push
ja
lcall
lahf
pop
std
pop
push
and
scas
bsf
push
popf
lods
push
adc
aad
inc
fidivrs
push
jae
add
dec
pop
lret
mov
xchg
pop
and
jbe
scas
dec
push
push
inc
sti
adc
inc
sub
loop
jmp
gs
mov
aam
mov
sbb
add
pop
mov
add
stos
sbb
adc
test
rclb
inc
add
lret
sti
lock
push
and
add
cmpsb
jg
xor
inc
in
in
sbb
in
les
cs
in
sbb
or
lret
aas
mov
xor
and
cmp
mov
push
adc
fstp
sarl
mov
into
mov
fiadds
pushf
jmp
cmp
adc
push
push
xor
mov
movsb
push
fstpl
ret
xchg
mov
imul
loope
xchg
jg
mov
gs
dec
shlb
mov
aad
jo
arpl
fs
jmp
out
cli
ljmp
and
adc
sub
add
hlt
out
mov
push
sbb
mov
mov
pop
jl
push
push
addl
es
xor
pop
icebp
mov
arpl
jns
dec
pop
ja
sub
cli
adc
gs
and
jo
dec
gs
aas
shll
imul
stos
lahf
push
or
jmp
lret
mov
xchg
push
pop
lea
and
dec
cltd
cmpsl
out
popa
dec
pop
xor
dec
adcb
push
jae
jb
lods
mov
das
push
repz
push
sbb
out
push
jo
mul
and
and
and
adc
push
into
in
cltd
pop
sbb
out
pop
out
mov
nop
ret
out
xor
cmp
fnstcw
andl
loopne
nop
pusha
add
fs
dec
scas
and
lock
mov
jne
add
lods
pop
adc
cmpsl
mov
pusha
sub
or
ss
mov
bound
aas
cmpsl
and
pop
out
lcall
rorb
mov
add
inc
sbb
jb
xor
mov
test
mov
das
fistl
sbb
je
inc
xor
push
lds
xor
in
divb
pop
fcom
shrl
or
stos
enter
xchg
shlb
sti
adc
aad
push
sar
notb
adc
pop
outsb
test
xchg
mov
fmull
cmpsb
shlb
push
push
mov
lea
cld
clc
insl
xchg
pop
pop
xchg
out
pop
jmp
cmp
cmp
cmp
cs
adc
sub
xor
mov
push
pop
mov
dec
mov
incl
ds
loope
adc
stos
sbb
xchg
int3
push
xchg
mov
dec
xchg
jnp
push
test
adc
jg
and
stc
mov
fstpl
lods
xorl
test
cld
lock
dec
mov
out
sbb
std
cmp
in
repnz
jns
mov
mov
popf
mov
cmp
les
sbb
addl
mov
or
cmp
addr16
test
popf
in
dec
aam
sub
cmpsb
and
push
adc
mov
jmp
cltd
adc
gs
ret
sbb
cld
bound
popa
jge
or
fs
xchg
push
dec
mov
sub
push
pushf
lds
jmp
or
and
je
cltd
mov
out
pop
push
jecxz
in
inc
nop
mov
xor
fidivl
dec
mov
mov
inc
setl
orb
lea
xchg
mov
sbb
cmp
pushf
fmulp
repnz
fmull
repz
ds
ss
jl
aas
sub
jns
adcb
dec
jge
insl
and
fwait
sub
mov
xchg
popa
sub
lds
outsb
jb
pop
lock
loope,pn
jmp
adcl
push
mov
add
adc
in
stc
fldcw
push
jp
fcompl
pop
int
adc
out
nop
icebp
subb
vcvtsd2si
out
inc
in
ljmp
pop
mov
data16
aaa
sbb
in
scas
pop
repnz
in
jno
jecxz
xor
sbb
sahf
imul
mov
push
nop
arpl
in
addr16
cs
xchg
add
les
sbb
xchg
rorw
mov
mov
mov
mov
mov
in
in
lods
ds
or
es
xlat
lea
test
sbb
mov
jnp
sub
push
add
rcr
pop
sub
sbb
lcall
add
mov
or
lea
outsl
add
cmp
fisttpl
sbb
stos
lock
mov
xor
push
ds
push
or
sarb
test
addr16
push
nop
or
insb
call
jg
xchg
shl
js
into
aad
lret
xor
pop
in
add
into
lods
pop
sbb
fscale
inc
lret
mov
or
inc
adc
cmp
sub
dec
lcall
inc
aaa
and
jns
add
dec
outsb
adc
xchg
test
inc
outsb
sbb
loope
inc
and
mov
stc
les
bound
sbb
add
sarb
sahf
xor
add
dec
lea
jns
jg
iret
dec
mov
lret
mov
dec
xchg
hlt
mov
gs
arpl
add
aad
mov
dec
stc
mov
das
lock
or
mov
push
and
mov
aam
xor
ja
sbb
or
fs
mov
xor
scas
xor
jecxz
scas
es
mov
mov
push
add
jo
and
popf
cmp
js
or
mov
mov
movsb
add
or
dec
lds
adc
shlb
xchg
scas
inc
inc
fwait
pop
out
pop
popf
sub
pushf
sub
mov
xchg
insl
cwtl
inc
loopne
or
inc
jbe
mov
xor
pop
popf
push
jnp
insl
cmp
adc
jb
scas
mov
jbe
cmp
jmp
xor
push
mov
mov
jo
mov
fcompl
sbb
sbb
jb
pop
xor
int3
enter
stos
jae
fldl
scas
jmp
fistpll
adc
or
rcrb
daa
and
cli
int3
adcb
sbb
scas
mov
aam
fadd
mov
mov
lds
cmpsb
popa
inc
lea
inc
xchg
dec
jmp
lahf
in
inc
or
push
jg
inc
mov
sub
adc
les
shlb
rorb
or
cmc
addl
data16
xchg
ja
add
in
loopne
pusha
cltd
idivb
push
mov
xchg
stos
xchg
stos
js
cmp
add
inc
mov
dec
in
out
fstps
pop
sub
mov
xlat
dec
mov
xchg
sahf
ljmp
loopne
mov
pop
xlat
cmp
adc
js
enter
inc
leave
xor
xchg
out
cld
push
sub
xor
cmpsl
mov
int3
add
jmp
cs
addr16
sti
mov
cmp
mov
jecxz
fnstenv
inc
mov
xchg
sbb
jp
scas
and
jb
push
enter
lahf
dec
cmpsb
mov
repz
aaa
inc
adc
in
dec
mov
in
pop
loopne
jnp
cmpsl
icebp
repnz
xor
gs
rcr
ds
mov
jge
test
and
test
xorl
popa
nop
mov
jmp
pop
dec
push
mov
mov
jnp
lods
ljmp
imull
cli
pop
cmpsb
or
sub
lcall
or
setne
out
push
pop
mov
int3
push
aas
inc
add
ret
xchg
into
xchg
pop
test
xor
xchg
pop
imul
lds
xor
inc
in
fnsave
push
push
stos
fucom
lea
mov
out
fisttpll
add
je
fdivs
push
out
and
pop
scas
mov
xor
cld
hlt
mov
ret
and
test
mov
adc
mov
idivb
aaa
stos
clc
sti
mov
push
in
jb
out
fstpl
pop
xchg
unpckhps
divl
ficomps
xchg
pop
or
sti
adc
pop
mov
outsb
movsl
adc
mov
push
adc
sub
es
icebp
hlt
imul
in
psrlw
dec
inc
out
gs
add
dec
or
rcl
jns
jns
sub
or
out
push
jp
adc
sub
jns
fidivl
cld
or
loop
cmp
nop
cmp
mov
pop
mov
mov
add
inc
rcr
loope
push
int3
mov
adc
lret
mov
push
iret
ljmp
in
fwait
pop
in
outsl
enter
lods
mov
mov
mov
movsl
lcall
and
sbb
dec
inc
push
loopne
dec
ss
pop
and
enter
movsb
xchg
cmp
in
test
fwait
xlat
cmp
pusha
pop
mov
popf
mov
dec
xchg
jg
mov
fidivrs
or
in
add
je
call
ds
pop
sub
mov
dec
fs
daa
dec
shlb
in
xchg
jl
jg
pop
jmp
mov
in
in
cmp
dec
pop
jp
fs
ss
or
push
cmp
pop
mov
iret
int
test
cmp
dec
hlt
ret
add
xor
fistps
lds
popf
insl
mov
cmp
dec
push
fmulp
inc
pushf
jnp
pop
jmp
ss
mov
push
pop
dec
ds
lahf
rorb
push
jmp
cmp
adc
in
inc
int3
mov
wbinvd
mov
lds
adc
call
sbb
les
inc
lods
sub
xchg
sahf
pop
sbb
pop
bound
loopne
arpl
test
cltd
cmp
adc
pop
mov
int
sub
ret
stos
lock
or
pop
cvttps2pi
ljmp
testl
stos
cmp
fnstenv
pop
push
and
push
out
push
enter
sahf
arpl
jmp
js
imul
arpl
pop
arpl
mov
lret
shrl
aaa
popf
lahf
jbe
aad
jo
pop
out
sti
xchg
vxorpd
add
jno
and
ds
cmp
and
jg
push
adc
mov
test
mov
sub
cmc
mov
adc
sbb
into
ss
scas
fadds
and
fldl2t
popa
ds
push
pop
leave
subb
mov
in
push
mov
inc
lods
mov
imul
clc
adc
mov
and
shrl
subb
lcall
adc
inc
adc
mov
stc
inc
popa
xchg
andl
hlt
and
adc
enter
popf
pushf
adc
int3
add
push
das
xchg
arpl
cmpsb
push
and
cli
lcall
cmp
stos
pop
andl
jp
jmp
repnz
pop
mov
cmpsl
es
pop
sti
lods
ss
out
lret
movl
mov
push
push
mov
mov
mov
decl
insl
xor
cmp
xchg
pushf
pop
xor
jmp
insl
movsb
ljmp
dec
in
or
and
orl
fwait
dec
mov
js
shll
sub
cmp
es
adc
push
sub
stos
mov
push
stc
fisttpl
push
shll
or
fmull
mulb
push
xor
sbb
push
push
jmp
push
dec
roll
sub
data16
call
repnz
scas
lea
push
nop
repnz
arpl
das
fisttpll
stc
inc
inc
arpl
out
xor
mov
stc
out
pop
shlb
jle
lret
mov
pusha
pop
sbb
aad
push
test
cmc
sbb
xor
aaa
aam
and
adc
ja
leave
ljmp
add
cmp
in
adc
sub
je
jmp
xlat
pop
scas
mov
pop
push
mov
mov
mov
cmpsl
nop
xchg
inc
ja
ljmp
or
ret
pop
add
lcall
adc
xchg
inc
mov
push
test
sub
aam
sub
push
push
sub
lcall
inc
push
lock
rclb
imul
jo
xchg
insl
cmc
xchg
xchg
sbb
inc
imul
and
xchg
addr16
sub
movsl
xor
push
hlt
mov
ror
xor
push
jge
push
stos
dec
pop
mov
ror
outsb
inc
pop
lcall
xchg
outsl
add
inc
or
into
cwtl
cmp
jb
or
loopne
or
out
sbb
xchg
push
cmpsb
mov
adc
cmp
xchg
pop
lods
mulb
pop
nop
inc
scas
xor
jmp
incl
mov
inc
cmp
pop
cmp
lods
fiaddl
push
dec
les
lahf
shrb
mov
mov
xchg
call
cli
fildll
and
inc
pop
mov
gs
adc
jns
jno
inc
jb
push
cmp
loopne
add
mov
jle
add
add
push
cwtl
mov
divb
loopne
jbe
cwtl
add
fcom
dec
fisttpll
jg
or
test
daa
popa
shrl
popa
test
add
xchg
mov
or
loope
xchg
mov
xchg
or
int3
and
idiv
cmpsl
icebp
scas
jae
inc
jo
aas
subl
push
icebp
je
fcmovnb
cs
mov
cli
sub
and
notl
push
jmp
adc
ret
mov
lods
call
mov
push
dec
in
into
aad
cs
jge
xchg
mov
cmpb
mov
adc
add
jnp
das
outsb
xchg
pushf
sti
jno
xchg
mov
push
inc
jecxz
dec
and
or
inc
pop
enter
add
lea
cltd
jo
cmpsb
lahf
pop
out
dec
sbb
jle
sub
mov
ret
sub
add
aad
add
fidivrl
fildll
dec
lret
sub
sub
stos
repz
inc
cwtl
loope
jg
lock
adc
and
push
jno
cmovl
mov
sti
or
mov
les
in
or
and
scas
aas
imul
cmp
xor
lret
dec
mov
sbb
push
jns
cmc
in
clc
jmp
addb
cli
inc
fmuls
or
mov
mov
jo
fcompl
decl
negb
mov
mov
sub
cmp
or
shlb
ljmp
mov
loop
xchg
out
aas
xor
xor
pop
stos
inc
fildl
test
inc
pop
je
cmp
inc
adc
and
push
sahf
xchg
in
cwtl
outsb
in
cwtl
bound
and
or
inc
stc
xor
lea
lahf
testb
xchg
iret
enter
push
dec
xor
aas
stos
daa
jle
dec
inc
iret
xlat
inc
and
pop
orb
mov
dec
mov
lods
in
aaa
repnz
cmpsl
xor
inc
out
jl
xor
cmp
pop
jae
into
out
std
cmpsl
sbb
inc
loope
mov
add
mov
popf
pop
add
jge
out
or
jae
stos
scas
outsb
push
sbb
les
out
call
adc
aas
fdivr
mov
inc
adc
fs
mov
sbb
dec
test
hlt
adc
in
bound
fdivrs
out
xor
xor
pop
lcall
leave
ficoms
xor
pop
jp
js
xchg
pop
sbbl
jne
cmp
mov
pop
xlat
sub
paddsb
jbe
rcll
out
aas
jno
sub
mov
repnz
es
xor
push
bound
mov
mov
fiadds
negb
add
js
sub
add
jns
xlat
shll
cmp
xchg
push
xchg
jge
dec
jge
xor
out
sti
fstp
push
cs
stc
pop
movsb
in
stos
jmp
movsb
pop
mov
test
test
xchg
add
cwtl
adc
in
shll
sub
rolb
mov
in
fcmovbe
cmp
loope
movsb
repz
xchg
mov
add
push
lahf
push
xchg
sarb
ljmp
fidivl
add
push
pop
adc
insb
loope
out
fwait
push
xlat
cmp
dec
xchg
inc
cli
cwtl
sti
test
out
dec
inc
and
repz
loope
cmp
inc
or
verw
adc
cli
cmp
testb
mov
gs
test
out
xor
add
jge
mov
mov
addr16
jbe
and
jae
mov
lret
add
lods
fwait
fwait
cmp
xchg
test
or
or
shlb
pop
and
mov
js
mov
xchg
xchg
stos
add
mov
fadds
sahf
shll
aas
nop
adc
js
fs
xor
data16
mov
cld
pop
adc
push
adc
insb
fcom
pop
int
sbb
xor
aaa
mov
repnz
mov
xchg
mov
bound
mov
cmp
hlt
and
xchg
sbb
cs
inc
sbb
jae
incb
pop
cltd
pop
sub
pop
inc
lea
sbb
adc
sbb
jl
dec
inc
lahf
cwtl
inc
xchg
inc
xchg
mov
fdivrs
ficompl
repz
rcr
jno
cld
xlat
dec
mov
and
lret
dec
stos
mov
add
add
adc
test
rclb
pushf
adc
pop
popa
mov
jl
in
ret
push
punpckhdq
out
imul
shrb
dec
xor
outsl
xor
add
jecxz
sub
call
jbe
hlt
test
jne
mov
mov
icebp
mov
push
sahf
pop
or
sub
test
and
ljmp
mov
mov
notl
cli
into
scas
jp
and
push
dec
in
mov
arpl
jecxz
jbe
pop
and
sub
mov
jg
sub
shrb
or
mov
in
xor
cmpsl
pushf
pop
stc
mov
sbb
andnps
iret
jb
icebp
or
mov
jg,pt
or
add
xor
push
shrb
mov
inc
sub
adc
sub
push
cmp
fsts
test
mov
cmp
ljmp
or
mov
add
and
clc
incb
inc
mov
inc
cwtl
stc
mov
shll
jle
push
or
lods
mov
dec
sahf
push
testl
out
push
pop
jle
xor
idivb
mov
ds
out
mov
rclb
hlt
outsb
jbe
jmp
leave
insb
out
and
test
cmp
mov
or
sub
call
fcompl
aaa
popf
aam
aam
jb
mov
jo
cmp
fs
fistl
jmp
cmpb
pop
sarl
mov
jns
dec
mov
and
je
aas
ja
jmp
mov
imul
je
mov
std
pop
cmp
aad
nop
or
dec
movsb
fwait
cs
ret
pop
adc
mov
xor
jg
jecxz
push
dec
cmp
lods
dec
ja
lret
icebp
mov
pop
idivb
sbb
insl
cld
scas
sbb
test
les
leave
sub
mov
ljmp
sahf
ret
ror
mov
pop
dec
jno
cmp
pop
cmpl
xchg
push
insb
loope
and
push
cmc
mov
pop
add
lock
jo
hlt
add
pop
mov
cmp
sbb
push
push
mov
mov
negb
ret
and
push
pop
add
fstps
enter
dec
popf
pop
test
mov
cmp
fwait
call
sub
enter
mov
aaa
jp
xchg
mov
sarb
xor
sbb
stc
or
adc
fidivrl
into
mov
fwait
rolb
xchg
pushf
mov
cmp
fnstsw
lea
ret
sub
sub
pop
push
push
pop
jno
icebp
les
sbb
mov
shr
or
mov
inc
inc
mov
aaa
ds
xchg
out
imul
mov
push
ja
fs
sahf
stos
icebp
push
out
adc
outsl
sbb
add
scas
pop
mov
xlat
dec
jecxz
mov
fs
enter
cmpsl
add
cmp
aad
cmpsb
stos
pop
push
mov
enter
into
lret
js
into
aas
pop
std
jmp
arpl
inc
sub
fnstsw
lahf
mov
add
xchg
sub
incl
lret
repz
pop
inc
aam
test
negl
lock
sti
and
movsl
enter
ds
std
test
jge
xlat
add
cmp
push
or
mov
aam
test
xchg
push
outsl
rcll
inc
es
outsl
clc
lods
clc
ja
mov
jne
fldl
push
hlt
jbe
out
mov
jne
movsl
adc
fs
jp
aad
push
stos
jo
xchg
adcl
pushf
or
xchg
pusha
cmpsl
fs
cmp
xor
push
mov
ret
xchg
in
fucomip
gs
cmp
push
sub
mov
in
push
inc
dec
cwtl
movsl
outsb
dec
push
mov
dec
cltd
sbb
cltd
push
add
js
jle
xchg
movsb
clc
fcomps
jecxz
mov
dec
outsl
andb
in
bound
pop
lds
sub
sbb
imul
adc
shl
mov
incl
jp
lahf
in
mov
dec
mov
pop
mov
cmp
pop
enter
scas
xchg
popf
pop
test
decl
dec
and
or
insl
add
jae
mov
shll
ss
neg
ss
orb
loop
or
add
loopne
mov
sbb
daa
jns
das
jecxz
cmpsl
dec
xchg
add
cmpsb
mov
and
sarb
inc
cmc
push
cwtl
aad
mov
iret
and
or
xchg
jp
inc
sub
or
stos
adc
xor
mov
sbb
jg
ja
mov
jge
cmp
xor
inc
sti
clc
cmp
popf
aas
push
add
push
cmp
les
bts
fdivl
mov
nop
mov
jmp
jmp
jnp
dec
cli
jnp
out
mov
pop
inc
jne
adc
sbb
cmp
cmpsb
xchg
xor
int3
mov
and
sahf
jo
lock
repnz
and
or
jecxz
dec
dec
xchg
test
xchg
push
loope
xor
in
push
push
aas
mov
jnp
popa
jnp
test
lret
sahf
pop
rcrb
push
sbb
repnz
ja
aam
mov
push
lret
cmp
popa
mov
int3
enter
cmpsl
or
push
outsl
inc
aaa
adc
mov
inc
dec
xchg
pop
cmp
js
jle
adc
fwait
jge
sub
push
sbb
lods
lds
les
sbb
sahf
pop
ret
repnz
movsb
fsubrl
std
inc
cli
push
mov
jnp
cs
and
mov
cmpsl
lock
insb
outsl
jns
xor
sub
shlb
inc
cmp
out
push
inc
lret
mul
pop
out
and
adc
test
push
xor
std
movups
xchg
in
xor
rol
fstps
mov
push
mov
xchg
shrl
inc
inc
int
sub
addl
ja
mov
inc
imul
lret
pop
lahf
jmp
mov
add
fnsave
adc
ret
or
into
and
outsb
sub
cmpb
mov
xchg
mov
inc
scas
mov
xor
leave
cmp
dec
inc
test
push
loopne
hlt
test
fs
dec
fstpl
push
dec
inc
add
lods
dec
test
inc
xor
cmp
xor
push
jecxz
xor
and
in
in
movsl
lock
insb
xor
mov
loopne
pop
das
movsl
jg
pavgb
test
dec
in
movsl
xchg
jno
adc
jb
pop
out
sbb
andb
pusha
inc
adc
int3
add
bound
daa
sub
rclw
jbe
ljmp
push
inc
mov
add
rcll
mov
cmp
cmp
push
int3
xor
iret
lods
js
outsl
xchg
xor
dec
mov
popf
xchg
push
push
mov
into
cmp
cmp
test
jo
mov
test
cld
xor
cmp
loope
movsl
xchg
mov
vunpcklps
mov
daa
test
movsl
adc
sarb
dec
dec
push
and
xchg
ret
or
push
jle
push
dec
outsl
jne
xchg
xchg
jp
inc
push
stos
mov
rolb
dec
xchg
clc
mov
mov
incl
xor
fiaddl
movsl
clc
mov
jecxz
ret
jmp
mov
mov
or
addr16
inc
and
fcompl
int3
inc
cmp
ljmp
adc
mov
adc
loop
cs
xchg
mov
stos
dec
sbbb
lods
mov
adc
push
sti
pop
call
andb
sub
mov
mov
enter
push
cld
rcll
lahf
mov
or
cmc
test
pop
push
sub
aaa
fsts
fstp
in
adc
jb
and
pop
or
and
pop
sbb
sub
sbb
lods
inc
into
std
mov
ret
fsts
pushf
cmc
gs
xor
cmp
cmc
pop
add
lods
stc
jg
xchg
push
in
out
lret
imul
sar
cmpsl
decb
mov
out
cwtl
cmpsl
lods
sub
lret
fstl
mov
shlb
movsb
outsb
movsb
mov
xorb
scas
test
dec
jnp
fdivs
push
inc
pop
lods
sub
pop
xor
ja
lds
call
jns
pusha
shrl
xor
jae
jecxz
test
orl
push
fs
mov
mov
aam
xchg
movsb
push
pop
mov
std
ret
es
stos
outsl
mov
xchg
stos
pop
pop
icebp
fnstsw
and
jae
sahf
add
push
mov
js
inc
pop
je
icebp
punpckhwd
dec
push
add
mov
pop
jmp
testb
xchg
mov
out
xchg
dec
adc
and
js
cltd
dec
pop
dec
shl
cltd
out
fcmovu
cli
sub
adc
xchg
fdivl
cli
xchg
xchg
fnstenv
out
cmp
mov
stos
inc
testl
imul
call
and
popa
xchg
jle
sub
inc
lods
test
sbb
ss
ret
pushf
test
in
jmp
dec
inc
mov
mov
mov
scas
insl
gs
das
clc
clc
ds
and
push
xor
jg
movsb
testl
cmp
lock
add
adc
cmp
mov
out
dec
cld
jo
xchg
stc
pop
and
push
adc
bound
xor
mov
sbb
or
xchg
clc
call
mov
cmp
add
jecxz
and
mov
push
adc
push
je
repz
imul
jne
jmp
imul
push
nop
aaa
sbb
pop
or
jle
sub
cmp
mov
mov
clc
inc
sahf
shlb
mov
lcall
es
adc
cmp
clc
es
inc
pop
mov
mov
aaa
pop
outsb
jge
outsl
sbb
pop
and
jge
sbb
xor
icebp
xchg
add
jl
mov
lock
ficoms
cwtl
ret
popf
mov
dec
sbbb
stc
das
pusha
and
dec
shl
or
js
in
cmpl
jmp
pop
dec
sbb
jecxz
xchg
int
sub
add
dec
pop
xchg
out
cld
scas
inc
popa
test
mov
pusha
test
popf
movsb
cmp
mov
xchg
test
std
push
fs
je
outsl
cmp
negb
pmaxub
cmp
in
inc
js
mov
dec
jp
iret
mov
gs
enter
sbb
pusha
out
lods
push
ret
push
jle
mov
xchg
jle
cmp
sbb
pop
jo
int
inc
jns
cli
or
ret
jo
gs
shll
mov
fildl
shrl
mov
cmp
int
test
mov
lods
loope
rcl
mov
mov
call
xor
or
rcl
incb
xor
or
jp
pop
xchg
ja
loopne
gs
ret
mov
lods
out
push
push
lods
outsb
pop
fs
push
adc
repnz
repnz
dec
mov
je
adc
lret
outsl
in
inc
mov
mull
cwtl
jp
push
xlat
push
inc
imul
ret
shl
push
fdivs
inc
iret
dec
cmc
out
push
mov
sbb
bound
add
aad
lods
int3
or
add
fiadds
stos
mov
shrb
push
insl
cmp
mov
ja
inc
push
pop
lret
and
lods
push
in
xchg
sti
inc
lret
jge
movsl
adc
or
pop
push
mov
ds
and
adc
push
ds
shrb
dec
in
inc
test
mov
xchg
cmpsb
imul
push
imulb
add
lea
data16
adc
addr16
lcall
lahf
jecxz
push
pop
lahf
popa
xor
in
fs
push
xor
mov
jno
adc
pop
nop
shrb
mov
pop
mov
ja
rclb
enter
arpl
lds
sub
out
fsub
add
fisttpl
fidivrs
sbb
pop
or
shr
fstps
inc
mov
mov
cltd
lea
jne
and
std
call
out
fnstenv
push
xchg
inc
popf
pop
push
jecxz
xor
sub
sbb
push
sbb
imul
call
ret
jne
xor
andb
xor
jb
into
or
dec
ret
test
adc
mov
mov
push
fistpll
loope
call
pop
scas
cmpsb
lcall
fsts
cltd
pop
push
inc
pop
adc
cmpsl
ret
pop
sub
pushf
mov
bts
in
aam
sub
ja
sub
xchg
insl
inc
xchg
pop
sub
testl
pop
and
je
movsl
add
jge
test
jecxz
jo
mov
daa
jl
into
mov
push
idivb
inc
jmp
pop
mov
pop
das
cmc
les
lock
popa
xor
push
int3
adc
pop
mov
imul
pop
dec
push
inc
out
push
sbb
test
mov
jae
pop
outsb
cmp
xor
ficoml
mov
gs
mov
test
je
add
lods
dec
mov
dec
bound
dec
add
movsl
mov
mov
lods
sbb
and
push
shll
int
sar
repz
sbb
daa
xor
and
lret
jbe
adc
outsb
mov
pop
arpl
dec
mov
sub
rcrl
and
cmc
rorb
lds
addl
dec
add
dec
fs
fs
pop
mov
pop
sbb
mov
pop
push
pop
es
inc
cmp
sarl
push
stos
lock
push
and
cmp
in
mov
and
inc
addl
xchg
mov
cmp
mov
addr16
adc
enter
xor
pop
push
sarl
xchg
mov
mov
cmp
sbb
sbb
jp
js
repz
jge
cmp
or
xchg
nop
or
jp
push
xor
cld
adc
out
inc
out
shll
lods
adc
sbb
inc
pop
cmc
leave
into
call
pop
push
mov
das
mov
jp
cmpsl
gs
adc
call
sar
outsb
and
idivb
bound
adcl
movsl
pop
lock
push
ret
lods
pop
adc
jae
adc
sub
dec
jb
or
loop
jnp
clc
hlt
cltd
jne
ja
popa
std
outsb
jge
mov
fbstp
mov
in
shll
mov
cmp
ss
call
shl
rcr
cld
loopne,pn
or
cwtl
cmpsl
sub
mov
stos
adc
add
pop
inc
jmp
adc
cmpsb
movswl
or
mov
sar
mov
ficomps
xor
lock
adc
cmp
mov
iret
push
bound
cmp
fcoml
stc
xchg
pop
pop
pop
mov
leave
xor
push
es
mull
pop
fbstp
adc
push
push
and
sub
pop
and
mov
call
pop
lcall
es
mov
test
repz
cs
xchg
jnp
and
ret
xor
loope
rcrb
lea
xchg
popa
cmp
jge
adc
mov
mov
sub
mov
mov
or
and
shll
cmp
or
lahf
dec
push
pop
cmp
inc
in
sub
sbb
add
or
pop
stos
ss
cmpsl
ret
sti
or
in
dec
outsb
das
scas
iret
lds
addr16
shll
iret
or
iret
test
cltd
xor
out
loop
or
adc
dec
dec
gs
outsb
movsl
sets
mov
lcall
xor
leave
inc
aam
mov
popa
shrb
mov
nop
pop
jns
nop
jecxz,pn
push
xor
inc
sbb
pop
movsl
mul
rcrb
pop
mov
or
sbb
cmpsl
cli
pop
adc
out
shrl
lahf
pop
xchg
movsl
jge
clc
sbb
stc
mov
sub
xchg
push
testl
xor
jge
add
pop
popa
in
adc
imul
rcrl
adc
and
outsb
cmpsb
xor
inc
or
in
or
sbb
data16
mov
sub
add
pusha
lods
pop
dec
test
push
mov
fmull
xor
push
cld
lahf
xor
out
leave
xlat
dec
adc
lods
sub
ss
lock
nop
stc
mov
inc
fwait
hlt
shlb
cwtl
loopne
dec
mov
sub
sub
pcmpgtb
out
add
sub
mov
mov
pop
arpl
push
mul
adc
or
bound
je
cmp
or
xchg
cs
ficompl
xchg
jecxz
add
pop
inc
outsl
ret
fidivrl
mov
out
repz
adc
xor
outsl
jmp
repz
sbb
rorb
and
into
mov
inc
enter
dec
mov
ds
inc
addr16
stos
pop
sbb
and
sbb
cmp
and
popa
dec
sub
jle
mov
lea
push
pop
mov
cli
ss
mov
dec
lcall
cmp
push
xchg
cmp
xchg
dec
add
sub
mov
popf
in
rclb
popf
jae,pn
dec
push
int3
jno
lret
loop
cltd
lods
psllq
fbstp
cmp
enter
mov
sahf
jae
push
xchg
push
sbbl
loopne
and
in
cli
in
cmpsb
daa
test
filds
aam
and
unpckhps
enter
jae
xchg
add
sub
mov
push
jno
ficoms
dec
or
sbb
and
or
sub
repnz
popf
adc
test
pop
loopne
insl
imul
dec
push
mov
shl
sbb
push
cmp
mov
mov
rorb
xchg
push
fsubl
dec
scas
cmpb
or
jmp
dec
mov
cs
adcl
pop
xchg
xor
mov
cltd
or
aam
js
push
pop
and
test
call
ror
jnp
inc
inc
push
inc
outsl
jle
push
inc
repz
or
je
sahf
ret
dec
lret
cmpb
outsb
xchg
daa
fcomps
mov
addr16
data16
or
cmovle
mov
inc
mov
iret
insb
xor
cmc
xor
roll
sahf
mov
cmp
jns
push
ds
mov
pop
nop
mov
scas
adc
sbb
lock
iret
dec
or
push
adc
xchg
and
and
pop
movsl
notb
ljmp
cltd
inc
das
xchg
xchg
stos
inc
popa
hlt
enter
sbb
xchg
jo
sub
add
xchg
ror
lahf
mov
out
dec
ja
mov
into
popl
fisubrs
in
sti
mul
jb
xor
or
call
and
xchg
pusha
mov
pop
bound
and
jmp
cmp
mov
fstps
pop
pushf
out
mov
mov
xor
push
or
jge
jbe
jo
ss
push
sahf
std
adc
pushf
or
in
xchg
call
dec
pop
xchg
loopne
pop
fildl
and
jns
fs
push
loope
xor
mov
ret
and
int
xchg
sbb
repnz
jge
fnstsw
jecxz
sbb
lock
xchg
adc
inc
sbb
or
jmp
xchg
and
add
lcall
or
cld
dec
or
daa
in
ja
inc
clc
fdivrs
data16
jp
in
in
pop
clc
jns
adc
mov
sub
mov
pop
jnp
jnp
push
out
adc
sub
sti
lret
jecxz
repz
mov
inc
xor
es
jne
stos
pop
rol
jno
das
push
out
ja
repnz
shl
lret
jbe
jns
popf
add
dec
push
loop
cmp
mov
lea
dec
xchg
and
mov
cwtl
test
out
mov
cmp
sti
push
ficomps
pop
ss
cmpsl
cmp
push
repz
xchg
push
pop
dec
pop
into
and
repz
mov
xor
int3
int
and
dec
test
and
pop
decb
xchg
arpl
cli
mov
and
pop
in
add
and
mov
dec
inc
mov
mov
pushf
cmp
into
inc
fcomps
ja
aas
lods
in
jp
dec
xchg
ljmp
dec
mov
fucomip
pop
xchg
stos
pop
sahf
cltd
pop
xchg
scas
push
mov
xlat
xchg
ljmp
popf
scas
inc
jb
mov
fdivrl
sub
adc
ja
lods
or
inc
sbb
xchg
icebp
pop
dec
out
lea
pop
popf
and
inc
jns
pop
popf
adc
ja
insb
scas
push
scas
lahf
and
std
dec
mov
and
int
adc
mov
mov
or
adc
inc
mov
mov
adcl
sbb
rol
lret
std
data16
sbb
cs
xor
push
mov
aad
loopne
rcrl
and
sahf
jae
popf
mov
imulb
sbb
jl
mov
mov
pushf
add
xchg
lock
mov
xchg
test
ss
leave
sbb
adc
scas
gs
outsl
pop
jg
das
lcall
dec
jp
sbb
cmp
incb
mov
mov
or
ds
test
pushf
leave
lds
clc
scas
sbbl
sub
es
xchg
sub
ficompl
insl
rcrl
push
push
inc
mov
and
repz
lds
sub
jg
les
ss
add
jg
ds
jmp
mov
lret
call
test
dec
fmulp
scas
jp
ficoms
out
jne
fisubrl
push
nop
xor
mov
jae
cmpsl
into
loop
ljmp
in
add
mov
push
cmp
mov
sbb
and
jle
repnz
pushf
fsubs
mov
push
pop
lock
sub
enter
mov
addr16
mov
ljmp
int
addr16
lods
adc
xchg
aam
xor
out
sub
lahf
jbe
push
fists
or
insl
jns
in
xchg
mov
test
outsl
sub
out
inc
mov
inc
sbb
pop
push
pop
ret
bnd
cli
cli
cltd
mov
pop
mov
repnz
lods
mov
mov
jo
mov
and
cwtl
mov
inc
jp
loope
scas
cmp
lea
sbb
xchg
or
sbb
push
sbb
pop
cmp
lods
movsb
mov
lahf
push
popa
int3
fisubrs
inc
aad
lds
ss
cli
jecxz
fisttpl
mov
xor
push
add
cmp
add
outsb
cmpsl
in
aam
mov
sub
subl
test
aad
sbbl
subb
mov
aas
lret
push
das
adc
jecxz
inc
lods
dec
mov
in
push
notb
add
stos
sbb
mov
dec
iret
lahf
in
pop
xor
call
clc
sub
fldl
push
sbb
push
fildl
insl
pushw
leave
cmp
jns
insb
out
jnp
lods
nop
ss
or
xorb
lods
fxch
mov
lods
outsl
inc
scas
pop
repnz
mov
stos
pushf
out
pushf
call
jno
nop
lahf
xchg
in
icebp
jno
mov
xchg
pusha
rcl
inc
out
push
push
in
xchg
cltd
mov
jl
pop
mov
bound
sub
or
pop
outsl
mov
add
sub
jo
out
or
orl
mov
dec
mov
lds
sarb
xchg
push
int3
mov
test
or
push
lds
jmp
jl
pop
add
sbb
xchg
shrb
or
mov
pop
incl
jmp
add
mov
dec
mov
dec
cmp
and
add
out
imul
popa
sub
mov
jmp
out
push
scas
jmp
lods
scas
xchg
ret
lock
outsb
xchg
sub
iret
push
cwtl
adc
lods
and
aaa
pop
push
icebp
xor
inc
dec
adc
aam
and
jp
sarl
sti
jle
sbb
and
or
mov
adc
sbb
outsb
push
xlat
adc
cmp
andl
xchg
ret
arpl
mov
jecxz
inc
mov
jo
gs
pop
iret
test
mov
into
stos
and
dec
lods
inc
lret
rcrb
mov
and
dec
out
mov
pop
and
inc
xlat
sub
adc
mov
pop
pop
call
cltd
call
inc
shrb
lea
dec
shrb
ret
dec
punpckhbw
insl
fdivrl
add
add
pop
jp
mov
cmp
jno
lret
add
nop
shll
and
out
pop
xchg
lcall
xchg
mov
mov
sbb
cltd
lahf
fsubr
int3
test
jne
and
jno
dec
je
repz
xchg
es
nop
ret
add
xlat
incb
in
mov
mov
ret
mov
js
and
test
and
roll
scas
inc
movsl
cmp
mov
sbb
call
push
daa
negb
cmp
xchg
cmp
fsubs
stc
sbb
inc
mov
or
xor
inc
xor
lcall
outsl
sub
addr16
jecxz
test
sub
dec
fildl
jecxz
pop
pop
ss
add
jbe
out
adc
orb
stc
in
mov
jbe
xor
rolb
or
stos
mov
pop
idivl
daa
subb
cmpsl
out
adc
int
test
sbb
cmp
shlb
xor
enter
xchg
sub
add
dec
adc
pop
xor
subl
mov
mov
jae
iret
subl
lock
push
sbb
jmp
sbb
vpcmpeqb
scas
add
out
loop
test
xchg
sub
clc
pop
mov
push
cmovl
fcmovnbe
subb
andl
lret
fbstp
push
call
js
mov
dec
ret
and
ffreep
push
xchg
addr16
pop
lahf
dec
or
sbb
rorl
ljmp
xchg
negl
sahf
add
decl
dec
in
xor
mov
stc
xchg
shlb
or
add
xchg
shlb
lahf
sub
ja
setle
dec
es
push
xor
push
xor
mov
cmpsl
and
add
or
jnp
data16
fnstcw
xchg
mov
xchg
lock
mov
jg
cld
std
repz
mov
cltd
cltd
fwait
inc
and
dec
sub
mov
cli
xor
add
pop
pop
mov
out
cmc
pop
cmp
jp
cmp
pop
xlat
sbb
mov
and
sub
fucomip
or
mov
shrb
pop
mov
pop
out
push
add
jle
cvtps2pi
nop
or
push
mov
push
sbb
and
xchg
cmpb
stos
daa
push
test
mov
aaa
inc
or
dec
and
add
repnz
outsb
aaa
xchg
lahf
call
push
popa
push
mov
shl
inc
xor
xlat
xor
mov
pop
cmc
lock
mov
cmp
jl
xchg
and
or
or
inc
and
int
sub
hlt
mov
movsl
dec
or
cmp
aad
or
cli
cmpsb
cmp
mov
adc
pop
fadd
dec
sub
setae
mov
cltd
or
cmp
and
xchg
lret
mov
xor
mov
out
std
sub
mov
xor
out
outsl
enter
mov
push
fwait
into
inc
lock
mov
sbb
call
push
jae
add
jl
mov
xor
and
jecxz
push
jle
insb
dec
and
sub
pushf
push
push
push
push
frstor
pop
sub
fs
jmp
arpl
pop
mov
inc
xorb
jecxz
ja
jl
cmp
mov
adc
or
cmp
lods
mov
and
cmp
xchg
cmpsl
inc
inc
jne
sub
jge
ret
test
push
test
movsl
or
sbb
shlb
pushf
xor
push
inc
cwtl
ss
test
dec
jecxz
pop
cmp
lret
xor
cmpsl
sub
sbb
addr16
popf
ret
adc
fsubl
es
push
mov
xchg
sar
ds
or
adcb
mov
pusha
and
or
xchg
repnz
data16
lds
adc
outsl
imul
or
test
outsl
xor
movsl
iret
and
stos
jl
test
imul
push
sbb
xor
xor
and
mov
mov
popa
mov
sbb
mov
pop
movsl
sub
adc
clc
push
fistps
int
mov
jne
inc
mov
xchg
rclb
test
jnp
adc
sub
push
mov
push
jmp
nop
push
mov
loop
in
mov
or
clc
pop
mov
pop
fwait
push
dec
aam
orb
mov
jb
mov
pop
cwtl
add
imul
sbb
pop
push
iret
and
cs
subl
andb
jecxz
loope
js
or
cmp
and
cmp
mov
fimuls
add
sub
outsb
inc
add
mov
mov
add
dec
jle
adc
xor
jb
jae
jmp
push
pop
and
sub
xor
repz
xor
arpl
pop
mov
mov
jge
aaa
jno
pop
push
pop
insl
mov
out
ret
cmpsl
daa
cmc
lock
into
std
ret
out
imul
xchg
add
jmp
lea
inc
ds
ja
jmp
jns,pn
inc
fwait
add
xchg
jg
mov
jne
js
rcrl
sub
js
nop
xor
add
dec
repnz
je
in
adc
aam
dec
push
lahf
adc
add
mov
lahf
jo
or
cmc
mov
popa
xor
aad
jno
sub
or
push
cmp
sub
dec
je
xchg
aam
lock
mov
insl
ror
lahf
sbb
adc
inc
cli
aad
cmpsb
sbbb
imul
sbbl
and
fistl
sahf
in
dec
outsb
repnz
sub
inc
gs
test
out
xchg
sub
fstps
aaa
ret
sbb
or
pop
push
xchg
outsl
sbb
pop
xchg
pop
cmp
sub
add
sub
cmp
push
scas
or
into
inc
dec
and
out
xchg
mov
sbb
out
ja
jmp
push
mov
cmp
pushf
and
mov
loope
fnsave
out
inc
icebp
insb
inc
in
ja
cld
add
mov
adc
mov
adc
dec
push
push
push
mov
sahf
jns
jmp
arpl
dec
pop
mov
xchg
push
aad
push
mov
mov
insl
mov
stc
leave
mov
mov
loopne
repnz
mov
push
mov
pop
jmp
int3
je
in
popf
jb
dec
adc
lret
cmp
notl
fisttpl
rcrl
add
sub
jl
roll
add
les
aam
shll
pop
or
int
xchg
ja
mov
cmpsb
scas
dec
cmp
arpl
test
jl
adc
mov
mov
mov
push
or
insb
mov
repnz
das
out
and
cmp
test
push
daa
sahf
fdivrs
mov
aaa
popa
jno
pop
nop
leave
stc
mov
pop
in
aas
sub
cmp
inc
cmp
pop
mov
and
nop
cmp
das
and
sbb
addb
cmp
mov
xor
sub
pusha
or
je
push
cld
aaa
in
icebp
incb
xor
insl
gs
mov
das
adc
cld
and
das
pmulhw
in
mov
sbb
mov
int
cmpl
cmp
mov
mov
push
mov
mov
lock
push
mov
daa
stos
xchg
lock
push
mov
jmp
xchg
pushl
cmpsl
sahf
imul
arpl
xchg
sub
sub
xchg
adc
adc
mov
mov
pop
push
mov
xchg
jb
mov
xchg
aas
neg
xchg
sub
pop
sbb
lret
xchg
add
aam
sbb
aas
sub
or
mov
xchg
pop
ds
jl
shl
cld
jecxz
mov
jl
out
popf
std
clc
cmp
sub
fcmovnu
dec
sub
fisttpl
inc
test
xchg
pop
mov
test
add
cmpsl
push
push
addb
mov
loop
shlb
sub
leave
ud2
adc
mov
lahf
scas
lret
out
cmp
icebp
mov
xchg
sub
rcrb
mov
push
gs
testl
fwait
adc
add
movsb
lahf
icebp
jbe
stc
jmp
mov
sub
mov
dec
clc
jge
lds
loop
add
push
push
mov
and
ret
mov
rcll
lock
lahf
push
stos
push
movsl
xchg
inc
dec
mov
mov
jb,pn
pop
data16
rolb
mov
mov
mov
cmp
and
fwait
mov
sub
scas
sbb
fcmovb
dec
shll
push
addb
movsb
and
iretw
test
ljmp
jle
sahf
scas
aad
xchg
and
mov
fnstenv
loopne
clc
bound
loopne
dec
or
add
push
and
and
jne
imul
jmpw
imull
mov
inc
jle
mov
cwtl
test
sub
push
cli
popa
aam
jl
jle
cmp
adc
dec
sbb
sub
loop
jae
xlat
fs
leave
cld
lret
xor
jge
pop
mov
xor
push
pusha
stos
repnz
clc
mov
test
mov
adc
imul
movsl
inc
mov
cmp
call
jns
cld
loope
in
mov
mov
sbb
sbb
cltd
std
sbb
xor
jecxz
sub
test
push
sub
push
daa
jbe
jne
popa
jnp
jge
adc
ficoml
fwait
sub
xchg
or
outsb
mov
sub
aam
jbe
sahf
dec
pop
pop
and
loopne
mov
sbb
add
inc
push
mulb
repnz
imul
pop
push
xchg
jl
xchg
pusha
inc
repz
aad
dec
test
xchg
popa
and
loop
loop
scas
lret
jb
loop
out
jmp
fildll
mov
dec
xchg
jmp
int
xchg
xchg
lea
and
sbb
js
cmp
mov
push
pop
pusha
or
aaa
pop
jo
out
pop
mov
mov
or
imul
dec
ret
and
out
test
push
jns
sbb
inc
push
inc
popf
fistps
jecxz
inc
movsb
in
jge
sahf
test
pop
and
dec
and
ret
hlt
sbb
add
xchg
shll
inc
lcall
in
dec
dec
mov
shll
mov
es
cmc
jmp
outsl
ds
aaa
into
mov
xchg
push
jp
push
inc
push
mov
inc
xchg
pop
mov
sbb
je
stos
clc
mov
or
rcrl
outsl
cmp
ja
mov
mov
bound
xchg
imul
stos
dec
pop
aam
push
leave
test
sti
mov
add
arpl
cmp
xchg
jecxz
adcl
leave
cld
jne
add
add
jg
mov
lahf
lret
in
adc
enter
add
adc
lcall
add
cld
fucomp
and
js
push
js
cmpsb
mov
cwtl
mov
pop
xchg
mov
pop
lahf
mov
sbb
lahf
pop
sbbb
ja
pop
shlb
pop
popf
xor
pop
std
icebp
cmpsb
inc
out
mov
fs
push
sub
adc
stc
enter
sbb
adc
xchg
add
add
push
xchg
mov
push
mov
adc
cmp
nop
xor
and
iret
xchg
sahf
arpl
sub
or
push
adc
add
cli
fs
mov
cli
fsts
and
dec
mov
cmp
xchg
sub
fidivrs
std
loopne
jne
mov
icebp
imul
mov
sahf
adc
or
xor
ret
or
stos
pushf
push
add
repz
sbb
insb
ret
movl
jl
adc
dec
push
rcrb
xor
push
adc
in
lds
out
sbb
dec
mov
mov
cmp
pop
fists
das
sbb
outsb
movsl
sti
jae
test
cmp
rcll
push
pop
ljmp
clc
xlat
sbb
jecxz
xor
xchg
lret
xor
mov
ljmp
pop
std
bound
push
addr16
mov
jp
iret
and
mov
and
jmp
cwtl
cmp
inc
imul
mov
add
out
insl
mov
xor
test
mov
les
in
jecxz
ss
lods
jle
das
jl
enter
icebp
pop
mov
pop
out
xchg
pusha
jle
cld
sub
arpl
lret
insb
data16
xor
pop
sbb
pop
add
dec
jge
dec
pop
pushf
je
pop
dec
or
pusha
adc
std
add
cmpxchg
test
lea
sub
cmp
xchg
shrb
cld
repz
xlat
loope
pop
nop
mov
dec
cmp
mov
repz
jle
mov
lea
lcall
notb
pop
xchg
dec
test
jbe
notl
cld
xor
out
or
mov
insl
or
sub
and
add
clc
xor
aaa
fucomip
fmull
xchg
cmpl
jne
sub
stos
lret
repz
mov
mov
mov
xchg
jl
dec
and
inc
sbb
or
push
mov
enter
or
cli
repz
test
dec
aad
sbb
pop
cmp
xor
jno
jecxz
and
lods
lcall
add
inc
mov
xor
movsb
pusha
mov
das
loopne
mov
pop
inc
loopne
xchg
pop
clc
adc
pop
mov
aad
ja
inc
or
mov
int
lea
mov
mov
push
jle
xchg
mov
insb
jl
and
jae
outsl
movsb
or
repz
mov
outsl
les
ret
arpl
adc
sbb
mov
daa
mov
cs
lcall
xor
and
cmp
pop
dec
leave
sbb
inc
xchg
loope
or
cmp
sbb
xchg
enter
scas
adc
xchg
jae
std
push
xor
cld
jo
stos
or
cmp
push
pop
imul
rcl
xor
mov
sub
push
shrl
in
fwait
hlt
adc
mov
je
sbb
xchg
mov
fwait
push
out
mov
push
sbb
nop
lods
mov
or
push
test
or
pop
inc
loop
xchg
addr16
or
pop
imulb
adc
mov
pop
mov
rep
mov
clc
push
push
scas
cli
inc
repnz
out
das
jno
sub
mov
add
frstor
sti
sub
inc
cwtl
jp
mov
movsb
pop
dec
out
std
adc
cmpsb
dec
mov
fstpl
jle
clc
int3
imull
leave
inc
dec
jns
je
fimuls
outsb
push
mov
add
stos
rcrb
daa
dec
lds
push
jb
lock
pop
sbb
mov
imull
popf
ret
jb
push
repnz
pop
lods
push
lcall
adc
pop
jns
xchg
flds
hlt
xchg
in
pusha
xchg
sub
dec
pop
call
stos
sbb
add
mov
lret
in
adc
cwtl
mov
repz
ficomps
das
adc
cmp
in
inc
adc
out
faddl
pop
cmp
jo
rolb
data16
fcoml
xchg
dec
pushf
mov
mov
js
lret
sub
orb
aaa
mov
iret
xlat
jbe
jo
test
mov
cmp
ss
bound
mov
lods
jp
fists
sbb
test
lds
push
sbb
notb
pop
loope
lret
inc
xor
cli
ficomps
inc
adc
or
movl
jge
mov
shlb
mov
xchg
mov
out
and
xchg
sub
sub
cmp
out
arpl
outsl
jg
scas
xchg
inc
aas
jbe
sbb
fadds
mov
mov
or
and
push
adc
sarl
es
mov
imulb
rorb
push
sbb
ret
pop
fs
jo
xchg
adc
hlt
dec
mov
jle
insl
aas
addl
and
lret
sbbb
stc
xor
mov
aam
call
mov
pop
inc
dec
mov
xlat
xor
cmp
es
cmp
imul
dec
lret
pop
xlat
jno
sbb
vpcmpeqw
in
mov
mov
xorb
jb
adc
pop
std
push
mov
and
xchg
mov
icebp
mov
fiaddl
addb
pusha
push
lret
js
mov
jp
sub
cmp
xchg
xor
jne
pushf
enter
sbb
push
mov
iret
jg
test
stos
les
mov
push
outsb
movsb
imul
aad
in
cmc
jne
imul
jae
pop
jmp
sub
outsl
ss
jne
outsl
adc
mov
fdivl
imull
push
xor
push
jbe
mulps
ja
or
push
add
pop
dec
aas
jne
mov
pop
push
jecxz
jnp
mov
popa
out
jns
adc
insb
jbe
sub
popf
clc
cwtl
std
push
mov
sub
xchg
test
movswl
cmp
push
imul
push
mov
mov
mov
gs
lcall
push
iret
sub
cltd
push
in
cmp
xor
and
movl
adc
out
nop
leave
roll
stos
pop
dec
add
mov
rcrb
mov
jb
sbb
aam
sub
jae
fisttpll
fdivl
mov
ss
sbb
add
into
cmp
ljmp
in
cli
jnp
and
ja,pt
sahf
ljmp
in
addr16
in
push
pop
mov
je
push
xor
cmp
icebp
cs
sub
pop
cli
pop
sub
mov
movsl
sub
outsb
pushf
in
movsl
or
and
and
clc
pop
mov
loope
nop
fstl
lods
cmpsl
pusha
aaa
int3
out
fmuls
mov
push
call
inc
loopne
dec
jnp
pop
and
js
sbb
inc
pop
loopne
jnp
test
insl
cmpl
lods
out
addb
jb
xchg
mov
icebp
mov
mov
test
leave
enter
adc
lds
push
mov
stc
and
outsl
xor
hlt
jl
stos
jbe
mov
mov
cmpsb
or
negb
jmp
stos
shrl
bound
lods
and
jbe
lods
nop
out
repnz
test
jmp
inc
or
sbb
andb
mov
fistpll
or
xor
sbbb
cmp
mov
mov
push
jp
arpl
stc
lahf
push
idivl
ja
ljmp
loope
adc
js
aaa
pop
push
clc
call
cltd
pusha
cmpsb
sbb
push
addl
dec
xor
addr16
jae
xlat
dec
mov
movl
xchg
enter
cmp
jg
mov
stos
jge
int3
je
in
outsl
xor
lds
lcall
cmp
in
pop
mov
adc
jne
jle
in
mov
cli
mov
cmpsl
mov
cmp
shl
outsl
or
pop
cmpsb
iret
lea
dec
xor
mov
xor
sarb
push
test
and
pop
sub
scas
cmp
xchg
or
lods
mov
in
cmp
cmpsl
xchg
ljmp
aam
inc
push
test
cmc
xchg
imul
enter
lock
mov
ja
pop
mov
add
ljmp
dec
cmp
pop
or
insb
mov
jp
xchg
cmp
enter
loop
and
pop
int
je
mov
push
mov
imul
addl
adc
lahf
fnstcw
or
lcall
xor
leave
or
push
mov
aam
int
fs
pop
xor
adc
scas
inc
sbb
pop
stc
popf
test
aad
add
loope
mov
sbb
sub
jmp
and
xchg
push
adc
or
mov
les
test
jnp
pop
bound
lret
enter
xor
sub
es
and
les
push
scas
push
imul
sub
xor
lret
push
insb
and
sub
in
shrl
lahf
pop
mov
push
es
adc
pop
into
add
pusha
int3
lret
gs
add
arpl
adcb
ss
and
lar
nop
xchg
and
or
wrmsr
insl
jo
inc
cmp
subb
mov
out
loop
cltd
and
mov
mov
and
mov
push
loopne
pop
and
addr16
out
pop
and
cmp
arpl
cmp
rclb
cmpsl
repnz
ret
xor
repnz
bound
inc
pop
jmp
xor
aam
mov
movsl
dec
js
or
shlb
repz
mov
xchg
xchg
inc
les
jl
fdivrl
and
pusha
inc
add
outsb
fdivs
xor
dec
mov
mov
stc
or
mov
cwtl
or
xlat
in
movsl
mov
cmp
in
stc
and
out
xor
insb
cmp
mov
jl
add
adc
sub
xchg
mov
int3
sahf
mov
mov
adc
jno
adc
sub
call
xchg
jb
push
movsl
scas
sbb
shlb
pop
loop
je
in
mov
mov
push
dec
jnp
push
or
sub
pop
hlt
cmp
fxch
or
nop
or
mov
push
mov
test
sub
ss
push
shrl
push
xlat
bound
mov
jno
jge
xchg
outsl
lahf
ret
add
jmp
scas
pop
or
push
aaa
jl
push
fldcw
adc
mov
test
xchg
or
lods
cmpsb
add
pop
lds
inc
push
movsl
push
cltd
mov
outsl
jge,pn
or
or
xchg
or
xor
cs
fiaddl
mov
ret
cmc
call
cltd
xchg
jo
and
test
pop
std
fs
cltd
pop
dec
loope
sti
sub
dec
jo
daa
cmp
idivl
or
jne
or
push
imul
jmp
stos
inc
lret
xchg
mov
mov
mov
jmp
pop
lret
aam
insl
sub
shll
test
jns
nop
jnp
mov
fwait
jne
leave
xchg
adc
icebp
popa
sbb
mov
cltd
xchg
pop
jecxz
inc
hlt
dec
xor
xadd
dec
push
arpl
mov
iret
xchg
jnp
in
data16
movsb
rclb
loopne
inc
int3
and
sbb
cmpsl
jne
jbe
xor
daa
and
xchg
mov
fiaddl
popf
xor
or
push
fsubs
push
lods
jp
test
clc
jb
in
mov
inc
cwtl
int3
xorb
fistpl
popa
mov
mov
rcl
mov
test
call
adc
push
sbb
mov
stos
add
jne
xchg
roll
cmc
sbb
es
sub
push
js
repz
adc
fcoms
lret
mov
test
jo
out
int3
mov
hlt
push
xchg
aad
int
clc
sahf
cli
add
pop
addb
cmp
in
push
sbb
sbb
push
pop
push
mov
addr16
jae
xchg
cmpsb
mov
filds
mov
outsl
dec
nop
or
push
and
jne
or
aad
divl
test
jns
cmpsl
sub
jle
push
dec
test
sbb
testb
xlat
jns
adc
fs
dec
cmp
leave
outsl
xor
pop
inc
push
into
xchg
push
push
in
push
aas
or
imul
push
hlt
scas
inc
ds
icebp
mov
mov
in
inc
and
sbb
cmp
pop
scas
test
adc
dec
xchg
mov
push
dec
fstps
clc
out
sub
fbld
mov
inc
jb
addr16
add
movsl
js
dec
mov
sbbl
adc
push
in
aas
inc
dec
sarb
in
cld
jg
jb
out
sub
data16
pop
push
push
lock
stos
les
push
hlt
hlt
inc
cmp
in
push
xor
and
lods
cmp
adc
pop
adc
stc
aad
imul
push
push
mov
fsub
nop
cmpsl
xchg
jnp
fstps
mov
loope
shl
or
mov
xchg
mov
out
add
imul
jne
push
dec
jns
cmc
scas
jns
fwait
insl
push
inc
loopne
jno
icebp
lds
pop
xor
negl
iret
aam
mov
cmpsb
mov
mov
mov
or
xchg
xor
lret
lret
std
push
scas
fmull
divl
out
imul
pop
cmp
push
jg
cmp
push
xor
fistpll
mov
insb
fdivrs
cmp
int3
xchg
dec
es
jbe
mov
push
cmp
fcomip
cltd
mov
pop
pop
pusha
sub
pop
mov
xchg
cmpsl
cmp
repnz
test
adcl
mov
xchg
mov
jmp
es
push
int3
dec
pushf
call
inc
mov
out
out
push
mov
pop
stos
fwait
ljmp
xchg
lahf
bound
leave
test
mov
out
inc
les
sbbb
jne
pop
sbb
faddl
mov
int3
dec
jne
inc
adc
sub
out
xchg
mov
sbb
cmp
sbb
sbb
jae
js
pop
orb
data16
mov
xor
lret
icebp
mov
sub
pop
add
fsub
out
cltd
inc
out
sub
jp
push
mov
imulb
adcb
mov
jnp
xchg
imul
out
lods
test
sub
xor
cmp
pop
xchg
pop
imul
or
push
jecxz
imul
ds
aas
sbb
xchg
daa
and
pushf
daa
shlb
xor
testb
clc
mov
xchg
lock
jae
adcb
je
gs
and
arpl
stos
pop
or
int3
jbe
jge
sub
int
lahf
rcr
mov
aas
and
stc
push
push
inc
je
in
xor
jmp
mov
dec
je
dec
push
push
stc
jl
mov
sbb
stos
add
je
xchg
std
lea
xorl
insb
dec
mov
pop
lds
pusha
pushf
mov
scas
rorb
popf
and
es
push
push
icebp
in
and
and
cwtl
jb
in
mov
mov
pusha
mov
in
sbb
jo
inc
cmp
inc
imull
decl
adc
xchg
push
es
aad
orb
ficompl
inc
iret
and
fmul
xchg
xchg
dec
fstpl
dec
xor
jmp
sub
aas
mov
push
jp,pt
cmp
outsl
ds
pushf
push
add
adc
push
push
mov
mov
mov
popf
mov
mov
mov
jl
js
xchg
pop
jb
pop
loope
push
cli
les
aas
das
sub
push
mov
ljmp
outsb
cmpsl
shll
push
push
mov
jne
dec
mov
xor
adc
or
mov
or
pmulhw
cli
sbb
rcl
cmp
jl
lret
enter
cmpsl
push
xlat
test
int3
adcb
jecxz
push
sbb
movq
push
add
ss
mov
mov
dec
cli
fists
sbb
loopne
mov
or
inc
stc
adc
dec
mov
pop
cmp
dec
xlat
sub
aad
add
sti
cli
insl
arpl
clc
mov
cli
adc
shr
hlt
call
mov
dec
xchg
mov
sbb
mov
inc
sbbb
iret
lahf
inc
in
insb
jae
dec
mov
enter
movsb
cmp
aad
inc
sti
and
divb
push
pusha
pop
xor
push
push
inc
std
lahf
cld
in
lahf
enter
iret
push
cmp
arpl
out
mov
mov
or
cmp
jmp
xchg
repz
ret
rol
pushf
add
xlat
jecxz
sub
mov
test
and
mov
adc
mov
inc
mov
jnp
mov
inc
in
mov
ds
push
sti
mov
mov
add
out
xor
xchg
pop
orl
das
xchg
and
xor
add
js
out
test
mov
pop
mov
ljmp
aaa
es
fs
push
jmp
lahf
sbb
push
movsb
add
cmp
test
jbe
sub
push
pushf
stos
add
lret
hlt
dec
clc
xor
loop
dec
daa
pop
jae
test
repnz
outsl
sahf
mov
cwtl
adc
adcb
inc
lea
add
aam
cmc
pop
or
xor
ret
rcll
ljmp
mov
mov
sbb
mov
sub
imul
fld1
mov
xchg
mov
mov
ss
xchg
sbb
or
adc
pop
push
insb
jne
stc
vcvtps2dq
sahf
jns
mov
repnz
jp
repnz
push
popa
jge
mov
idiv
out
sub
idivb
in
pop
out
sub
sub
lods
in
push
or
add
mov
lret
je
jp
jge
push
sub
push
sbb
insb
or
popf
test
cmp
lret
data16
jle
and
aad
xchg
cmp
shlb
scas
mov
xchg
rcr
aaa
add
insb
sub
lods
pop
jnp
adc
xlat
mov
pop
mov
ljmp
sbb
jl
rcrl
rorl
pop
dec
push
daa
push
mov
js
mov
xchg
xchg
mov
and
add
inc
outsb
enter
aam
scas
pop
xor
and
jbe
rclb
xor
adc
stc
dec
js
dec
lret
popa
mov
ds
movsb
dec
jge
fs
cltd
xchg
ljmp
dec
ret
mov
inc
cmp
pop
pop
add
pop
push
and
mulb
test
dec
idivb
sti
cmp
sar
pop
or
inc
dec
mov
sub
daa
adc
mov
call
mov
test
push
iret
mov
dec
pop
fsubrl
aas
cmp
jae
xor
xor
or
fidivs
sbb
jge
mov
neg
pop
popf
push
dec
xor
cmp
xchg
sti
xchg
xor
inc
imul
mov
stc
mov
adc
push
fldenv
repnz
pop
pop
jge
andb
fimuls
leave
add
lcall
adc
sub
ljmp
xorb
ret
outsl
jns
out
das
cs
out
arpl
mov
popf
pop
daa
mov
loope
cmp
gs
xchg
add
mov
mov
fwait
inc
call
lock
outsb
fidivrl
iret
push
xchg
cmp
sbb
xchg
inc
push
js
test
rcrb
cld
mov
mov
fnsave
jl
inc
ret
pop
cmp
imul
ja
and
jno
xchg
inc
push
lods
fwait
sub
pop
fiaddl
inc
mov
inc
pusha
cmp
std
das
and
inc
or
pop
sbb
jmp
repz
adc
dec
cwtd
nop
lock
ds
pop
mov
divb
scas
mov
enter
mov
pop
lret
fucompp
jae
icebp
shr
loop
mov
cmc
out
mov
sti
test
xchg
xor
loop
negb
dec
push
popa
push
mov
xchg
dec
popa
push
or
mul
mov
adc
imul
lret
mov
scas
mov
idivl
jbe
and
push
jae
push
mov
imul
cmpsl
mov
pop
pushf
push
pop
cmp
ret
or
out
mov
insb
scas
adc
xor
int
lahf
and
fmuls
mov
mov
adc
push
lcall
in
rorb
insb
mov
push
out
xchg
jg
jp
je
xor
mov
stos
mov
xor
mov
mov
lods
lods
outsb
dec
push
jae
loopew
adc
mov
setl
addr16
std
daa
lock
lods
xchg
in
xorb
rcrl
pop
xchg
stc
add
dec
mov
mov
imul
arpl
sub
mov
pop
das
xchg
xchg
imul
inc
jno
mov
push
push
in
jp
inc
out
fmuls
dec
or
cltd
aas
inc
mov
push
lock
push
mov
addb
mov
sbb
sub
adc
xor
je
pop
roll
out
mov
jp
and
push
mov
test
push
insb
clc
enter
push
movsl
rol
clc
sbb
jmp
ret
gs
mov
dec
aaa
jae
stc
pop
stos
jge
aam
jnp
call
or
fiadds
outsl
push
mov
testb
cld
jmp
inc
xchg
scas
in
pop
and
mov
dec
icebp
mov
mov
adc
dec
xchg
inc
lret
shr
pop
cmp
mov
and
inc
pop
xchg
mov
xchg
out
inc
push
es
mov
addr16
xor
push
pop
mov
lcall
popa
mov
sub
leave
cmpl
in
in
mov
mov
inc
jge
sbb
jge
cmpsb
mov
jbe
push
mov
cmp
adc
idivl
sub
jo
iret
test
add
mov
cmpb
ret
inc
push
nop
pop
mov
push
or
out
pop
hlt
xchg
in
and
cmp
pop
mov
sbb
shrl
out
repnz
shll
mov
lahf
shlb
loope
push
push
mov
scas
sahf
je
and
xchg
inc
shlb
sarb
outsb
arpl
mov
adc
daa
subb
pop
mov
in
insl
pushf
cwtl
sbb
fnsave
add
sti
mov
icebp
jo
rclb
test
and
hlt
inc
sbbl
scas
xchg
inc
sbbb
fcmovu
jmp
cwtl
inc
mov
sub
insb
mov
and
lods
mov
xor
shlb
ficompl
jb
ret
mov
idivb
or
sbb
ja
cmpsl
mov
fcmovne
mov
jnp
push
inc
ret
cmp
je
ss
cmp
inc
sarb
or
xchg
aaa
sahf
out
flds
sahf
bound
mov
add
mov
icebp
enter
pop
leave
daa
push
daa
pop
fldl
jmp
pop
mov
sbb
pop
mov
adc
cmpsl
cmp
mov
enter
inc
idiv
mov
cmp
inc
pop
loope
out
call
daa
xchg
xchg
inc
fstps
dec
mov
cld
jecxz
in
adc
lcall
cmp
fcmovb
mov
cmp
outsb
scas
imul
pushf
pusha
jo
test
shl
sbb
sub
das
xor
insb
je
roll
jbe
adc
es
and
test
pop
xchg
mov
add
xor
add
mov
call
xor
or
cmpsb
cmp
lahf
fs
sbb
sub
shrb
mov
sub
call
push
fcoml
mov
repz
pop
mov
pop
int3
enter
clc
mov
lcall
faddl
push
leave
jae
xchg
or
push
push
adc
fwait
mov
or
cmpsb
and
dec
fs
push
mov
cwtl
lods
mov
imul
mov
daa
fwait
adc
lods
lods
push
loope
xchg
cltd
sbb
and
in
push
jmp
gs
insl
dec
mov
int
stc
add
js
stc
adc
movsl
and
daa
inc
pop
mov
or
or
mov
cmp
dec
cli
dec
sti
fisubs
fidivs
sub
sbb
fdivrl
movsl
lods
outsl
lods
pusha
out
add
inc
aaa
or
cmpsb
and
lods
jbe
mov
adc
repnz
stos
test
push
mov
adc
and
xor
aas
add
out
je,pn
or
into
and
hlt
mov
dec
lea
dec
jne
dec
mov
stos
repnz
or
add
cltd
push
ss
gs
stos
and
aam
xchg
or
mov
sbb
jge
loopne
pop
pusha
sub
clc
cmp
xchg
xor
shll
add
les
nop
push
cli
je
xor
in
es
aam
clc
mov
mov
inc
push
lea
inc
pusha
mov
data16
inc
push
dec
scas
dec
movsl
out
mov
ss
jmp
mov
jmp
rcl
add
lahf
adc
jbe
push
cwtl
pop
lods
arpl
inc
ds
ds
mov
cs
mov
fstpl
negl
lock
adcl
pop
cwtl
pusha
scas
or
pop
push
stos
push
adc
add
dec
enter
cmp
lahf
in
pop
out
mov
in
xchg
pop
hlt
push
sarb
xor
mov
or
pushf
pushl
loop
clc
push
cs
or
out
adc
mov
adc
push
in
mov
pop
inc
pop
loopne
lods
addr16
add
jl
mov
test
xchg
mov
mov
movsb
repz
inc
adc
call
or
scas
hlt
dec
stos
mov
fsubs
mov
and
xchg
push
jmp
aas
and
in
lret
xor
cmp
mov
jecxz
in
cmpsb
and
in
mov
pop
mov
dec
clc
es
xchg
push
in
sbb
push
push
jo
mov
sti
in
push
dec
popa
xchg
jae
mov
rcl
add
pop
ss
cmpsl
mov
jbe
fmuls
fs
lds
or
cs
jns
shl
jae
xchg
mov
clc
test
inc
lds
loop
mov
lret
mov
outsl
int
xchg
xchg
sar
mov
das
xor
dec
sub
lock
dec
loopne
aam
rol
mov
in
into
mov
lds
ja
add
addr16
mov
sbbb
popf
or
imul
cwtl
notl
mov
loopne
cmc
lods
jo
popa
sub
dec
add
clc
ss
adc
lock
in
push
adc
adc
lods
dec
cmp
or
outsb
popf
cs
xor
mov
in
push
cltd
cwtl
enter
mov
aaa
push
std
xchg
mov
imul
xchg
es
leave
sub
sub
xor
cmpsl
sahf
adc
pop
adc
and
shrl
insb
subb
stos
cmp
mov
es
add
lahf
sub
in
in
ss
mov
enter
movsb
pop
and
push
inc
stos
xchg
jnp
jg
push
fmul
jl
push
imulb
outsb
and
stos
xchg
repnz
jno
xchg
cltd
out
cs
nop
xchg
jge
out
mov
inc
enter
jle
xchg
mov
cmpsb
mov
inc
mov
dec
sbb
jl
addr16
movsl
pop
xchg
insl
into
adc
fisttpll
das
mov
test
xchg
ficomps
jl
cmp
call
sbb
arpl
xchg
call
orb
movsl
aam
mov
cltd
jmp
and
xchg
jns
xor
push
xor
xchg
push
inc
pop
in
ficomps
daa
xchg
inc
adc
mov
or
mov
mov
test
stos
mov
mov
insb
dec
in
into
movsl
repz
jp
cli
dec
mov
ss
add
cs
mov
mov
dec
daa
push
sahf
cmp
pop
test
jg
sarl
stos
lcall
rcrb
jnp
addr16
jae
roll
and
cld
pop
je
loope
cs
adc
xor
lret
test
adc
sar
cld
xor
lods
dec
imul
negb
jnp
cmpsl
lock
and
push
xchg
jg
mov
cmpsl
pop
jge
outsb
jp
xor
mov
push
push
pop
orl
inc
add
sbb
in
mov
pop
jb
imul
jne
push
pop
mov
int3
push
mov
or
push
jl
xchg
iret
flds
test
and
scas
mov
mov
das
and
cwtl
ret
adc
inc
es
push
cmp
loopne
xor
xor
hlt
pop
inc
ljmp
or
inc
mov
call
dec
or
jl
push
insl
cmp
pop
movsb
fimull
loope
inc
cmc
outsb
ljmp
std
pop
loop
mov
pop
pop
xchg
or
iret
iret
les
repnz
and
ret
push
xchg
lahf
outsb
out
loopne
mov
xchg
ljmp
cmc
sbb
or
rcr
idivb
js
push
cwtl
loopne
fldl
dec
shl
mov
add
xchg
pusha
lahf
jge
imul
sub
imul
ficompl
sub
push
setns
inc
decl
incl
loop
cmp
inc
and
in
into
shrl
mov
into
sub
adc
in
and
dec
xchg
push
in
sbb
aad
cmp
mov
std
testl
call
smsw
imull
cmp
icebp
push
imul
mov
and
jle
test
dec
ljmp
adc
ljmp
es
imul
mov
scas
cmpsb
adcb
decb
mov
movsb
movsb
lea
mov
jae
test
loop
jecxz
mov
movsl
add
or
push
test
jnp
out
mov
shr
ret
scas
popf
sub
xchg
or
cli
jne
aaa
sub
fisttpll
push
outsb
mov
jns
mov
adc
sub
arpl
in
les
mov
lea
in
jg
cmp
jmp
inc
out
dec
int
mov
mov
out
sub
mov
push
add
adc
mov
test
ret
enter
fsubrl
cmpsb
test
pop
inc
xor
arpl
and
and
andl
ficoml
std
sbb
xchg
xor
popf
rcll
add
fistl
sbb
out
fmull
ljmp
pop
sub
jno
push
test
adc
add
adcl
bound
push
test
push
jne
pop
ja
cmp
dec
scas
jo
int
fisubs
sbb
xchg
sbb
lret
inc
outsl
pop
add
jno
inc
pusha
and
mov
shr
pop
xchg
cld
cli
icebp
repnz
inc
xor
push
jb
jne
in
push
push
mov
notl
lret
pop
and
decb
frstpm(287
jle
jnp
orl
insb
and
shlb
mov
sarl
push
xchg
or
jae
push
bound
sub
test
ja
loope
ficomps
das
mov
sbb
out
mov
sahf
add
mov
cld
sub
push
jbe
jo
nop
inc
loopne
cmp
add
jno
movsl
bound
xor
lcall
cltd
fistpll
pusha
je
int
scas
test
cmpsl
daa
push
xor
negl
lret
lahf
cwtl
lahf
out
inc
cmp
xchg
shlb
sbb
pop
scas
loopne
stc
gs
popa
das
movsb
sub
jmp
pop
pop
cwtl
ss
incl
test
inc
sbb
lcall
mov
addr16
repnz
and
cmp
pop
sahf
out
mov
cmpsb
ds
xchg
or
mov
dec
inc
push
inc
sbb
jge
sahf
out
imul
xor
and
ja
lret
inc
xchg
test
clc
lods
pop
hlt
xor
add
sub
inc
imul
fstpl
ret
jecxz
mov
fcompp
or
out
jnp
mov
ja
mov
sbb
mov
mov
or
imul
aas
mov
xor
dec
int3
in
add
negb
stc
pop
sbb
fistps
push
cmc
stc
xchg
les
aas
push
ficoml
inc
sbb
and
sbb
ss
mov
pop
pop
shl
call
push
pop
imul
jo
iret
fs
test
pop
sbb
push
xchg
icebp
daa
lods
mov
movsb
stos
int
scas
bnd
mov
mov
xor
xchg
sbb
inc
jo
ds
subb
inc
int
popf
popf
jne
js
cld
xor
add
movsb
popa
xlat
pop
jle
push
shll
adc
sub
imul
lock
add
pop
jnp
scas
neg
fistpl
push
flds
dec
addr16
mov
cltd
push
ja
push
test
aas
mov
out
jnp
dec
add
push
repz
mov
negl
mov
cmpsl
lret
xor
xchg
dec
push
test
ss
rorl
mov
sub
stos
out
jbe
imul
and
push
dec
jmp
enter
pop
sbbb
pusha
push
jp
idivl
int3
dec
addr16
jae
insl
fdivr
xchg
outsl
sub
lds
or
sbb
jecxz
out
jnp
sbb
loop
sub
clc
and
movsb
outsb
std
jmp
mov
and
mov
stc
out
push
cmp
rorb
cmp
sub
cmp
stos
mov
jno
cwtl
imul
imul
daa
leave
add
stc
pushf
dec
ljmp
push
add
xor
inc
add
movsb
rolb
cmp
mov
lock
or
in
test
cmp
hlt
out
push
mov
inc
sub
or
out
push
push
pop
push
dec
mov
pushf
add
scas
imul
lcall
xor
mov
outsl
addr16
add
jmp
fisubrl
lock
outsl
inc
icebp
dec
mov
push
rcrl
enter
js
dec
xor
mov
sub
les
shrl
jle
and
mov
test
jns
add
push
cli
sub
or
add
test
lock
outsl
xchg
push
outsl
or
cmpsl
mov
xor
das
std
mov
insl
jae
pop
fimull
mov
or
rorl
or
mov
cmp
sbbl
sbb
jo
pop
adc
lret
clc
jg
outsb
dec
loopne
shlb
outsl
cmp
outsl
aad
sar
add
cmpsb
mov
shlb
fcmovnbe
xor
aam
in
push
inc
scas
xchg
movsb
push
cmpl
cwtl
in
stos
sbb
cli
daa
add
jbe
addr16
sbb
rcrl
add
sbb
cli
pop
mov
mov
pusha
repnz
dec
mov
test
rclb
les
add
mov
inc
pop
mov
testb
lods
mov
cmp
outsb
dec
pop
je
and
add
inc
iret
aad
dec
mov
fs
loopne
insb
repnz
ffree
lock
inc
jb
loop
mov
xchg
out
jp
ja
out
mov
lret
aam
push
mov
aad
rcrb
xchg
adc
popa
push
fcmovbe
fcompl
xor
xlat
jns
sarl
mov
or
adc
lea
sbb
push
mov
icebp
ja
or
int
jne
mov
mov
inc
repz
push
mov
fs
xlat
lods
movsb
push
sub
subb
jne
push
mov
xor
fs
xor
out
cmp
mov
in
test
fcomp
scas
mov
xchg
iret
fidivs
push
sub
aam
jno
dec
inc
daa
and
lods
fiaddl
ss
push
push
test
out
fsubr
stos
add
xchg
add
push
jnp
out
popa
xor
stos
push
jecxz
repz
or
arpl
test
push
mov
cli
push
xor
les
mov
lcall
mov
inc
sbb
or
mov
dec
dec
jb
and
mov
rcrl
lret
mov
iret
loop
enter
cmpsl
push
xor
inc
xor
test
adc
aam
mov
out
xchg
xor
push
fs
xchg
repnz
sbb
cltd
and
out
push
cmpsl
lock
xchg
orl
movsb
aam
pop
int
xor
out
shlb
inc
sarl
inc
orl
aad
sub
sbb
out
stos
jmp
out
cmp
push
sbb
outsb
in
in
add
mov
jp
lret
jb
push
psubq
dec
push
rcrl
sahf
loop
or
lds
sub
imul
and
imul
cli
xchg
cmp
cld
ret
add
loope
pop
sahf
pop
add
push
sub
imul
jbe
cs
lock
in
pop
pusha
sub
rcl
pop
insb
addr16
adc
inc
xchg
pop
mov
add
fwait
push
test
inc
scas
sbb
add
push
or
adc
ja
add
pop
mov
dec
xchg
lock
shlb
cltd
lcall
push
scas
inc
lea
popf
mov
enter
jle
mov
call
sub
je,pt
lcall
pop
xchg
cmp
xchg
pop
dec
fs
int3
bound
push
stos
outsb
pop
inc
add
xchg
loop
arpl
jno
nop
add
outsb
nop
push
sbb
adc
adc
and
sub
cmp
movsb
aam
stc
inc
js
nop
xor
xlat
in
adc
aad
test
jmp
sub
incb
lret
mov
push
cwtl
dec
push
in
notb
jecxz
mov
sub
push
ja
jp
cld
mov
insb
lcall
std
notb
mov
icebp
xchg
jnp
push
lds
orb
rorl
xor
sti
xchg
arpl
test
rclb
jbe
or
mov
jo
or
insb
cmp
mov
adc
pushf
and
add
mov
push
mov
movsb
fs
ror
test
dec
push
ss
pop
outsb
dec
or
out
mov
mov
in
aaa
sub
mov
nop
and
stc
test
aaa
jns
jno
push
push
fnsave
jecxz
sub
loop
xlat
sub
mov
repz
ss
mov
dec
or
push
loope
add
add
in
call
repnz
ljmp
gs
stos
imul
repz
xchg
stos
cmp
fld
mov
inc
adc
clc
test
dec
or
outsl
push
out
stos
stc
pop
dec
inc
inc
sbb
mov
bound
fstpl
aas
and
adc
aad
iret
fs
leave
pop
jns
stc
fsubrs
popa
addr16
ljmp
js
gs
adc
mov
imul
mov
lds
shlb
pop
jmp
add
pop
mov
pop
mov
lods
shll
into
int
sbb
pushf
out
les
push
lret
mov
sbb
ja
cmpsb
out
cmp
fisubl
inc
cwtl
cmp
mov
jecxz
sub
repz
dec
xchg
sbb
aaa
sbbb
push
stos
cld
jb
leave
mov
sbb
jge
cmc
and
push
loopne
ds
sbb
push
adc
dec
sub
push
xor
loope
fldl
jae
shlb
sub
stos
mov
daa
addr16
or
push
repz
push
jl
inc
scas
add
mov
je
cld
and
mov
mov
mov
jg
push
lods
push
insl
adc
dec
jb
das
cld
data16
inc
loopne
mov
fcomps
xor
addl
jmp
xchg
stos
dec
lahf
add
fldl
inc
pop
mov
scas
cmc
push
rclb
imul
adc
mov
and
fmuls
mov
add
les
mov
push
fldenv
mov
xor
les
dec
pop
sbb
mov
and
cmp
je
test
jo
ret
pop
mov
xor
jae
mov
xorb
rolb
cli
mov
pop
push
in
add
xor
scas
inc
push
cmpl
adc
rcrb
jmp
cli
or
mov
std
cli
mov
test
js
cmp
mov
cmp
or
mov
scas
es
test
mov
push
lret
out
cmp
pop
push
pop
subb
push
outsb
mov
mov
jo
sub
xor
clc
mov
into
out
lcall
imul
leave
mov
frstor
inc
sub
jne
sti
xchg
xor
push
into
ret
pop
lds
xor
mov
adc
imul
inc
pop
xchg
int3
xorb
dec
mov
xchg
adc
lcall
sbb
add
icebp
outsb
or
dec
add
mov
jb
jge
jg
iret
inc
inc
sub
mov
and
leave
lock
cmpsb
stos
mov
xlat
push
jb
inc
mov
lret
pop
shll
pop
jnp
adc
jg
pop
cwtl
iret
push
push
in
pop
cmp
ja
mov
lods
repnz
jmp
aam
repz
push
jmp
test
sub
adc
or
mov
jae
cmp
lcall
loop
mov
stos
sub
adc
sbb
rorb
pop
xor
dec
add
mov
mov
and
popa
fcmovnbe
dec
mov
sbb
pop
and
lods
mov
fisubl
std
mov
aad
cs
xchg
xchg
fwait
ss
js
push
clc
adc
jmp
std
pop
aas
mov
iret
mov
fwait
subb
scas
jns
insl
xor
bound
xor
out
rorl
and
push
into
or
mov
and
pop
cmp
mov
sahf
jmp
sub
or
data16
adc
push
add
push
cmpsb
push
mov
in
mov
add
jmp
in
in
not
andb
inc
js
cld
sbb
repnz
div
frstor
pop
mov
mov
rcrb
leave
add
popa
sub
aad
movb
mov
mov
pop
push
cmp
negb
and
fidivl
mov
dec
scas
out
repz
xor
cmp
cs
in
std
insb
cmp
cmpl
and
lea
out
add
mov
jg
incl
aam
and
aam
sub
call
shl
jne
push
inc
loopne
push
rorb
in
mov
cwtl
xlat
ds
xchg
adc
xchg
das
xor
test
fcmovne
xor
movsl
adc
insb
lods
xlat
fidivs
xchg
pop
sub
arpl
mov
mov
mov
push
insl
jno
out
scas
lock
subl
mov
or
and
int3
adc
mov
call
add
sub
mov
mov
xchg
jb
add
push
mov
jg
clc
sar
jns
lods
lret
imul
test
jno
in
add
xchg
icebp
push
sbb
dec
adc
out
testl
mov
sub
repnz
cmp
stos
xlat
sbb
xor
sti
sbb
les
lock
je
cmpsb
les
enter
cmp
cmc
inc
push
mov
or
lea
or
mov
inc
mov
out
leave
rol
lcall
out
pop
into
je
shrb
mov
test
mov
mov
cmp
aas
cmp
stos
lock
pushf
pusha
and
imul
sbb
mov
ret
ror
or
enter
push
xchg
shlb
mov
mov
aam
jo
ret
int
xor
fdivs
push
xchg
xchg
lods
bound
and
notl
xor
xor
dec
mov
stos
push
cs
lea
test
add
imul
sub
adc
rcr
xchg
jo
mov
jns
sti
popl
lcall
ljmp
nop
push
sbb
pop
cmpb
xlat
mov
xor
xor
adc
pushf
fistpll
loop
adc
or
add
aam
mov
loope
push
pop
fmul
or
aad
ljmp
or
popa
cs
cmp
push
xor
mov
or
jg
xchg
mov
add
push
mul
stos
pushf
jae
inc
lret
cmp
cwtl
ss
dec
cld
and
mov
scas
pop
inc
cmp
cmp
pushf
lods
pop
loopne
adc
mov
rcll
pop
mov
sbb
dec
std
lods
push
rcrb
cmpsb
fucomip
cmp
or
sahf
pop
shrb
test
arpl
mov
push
and
dec
inc
adc
fdivl
pop
dec
sbb
mov
jp
pop
pop
es
lret
lret
in
lcall
js
jmp
xchg
leave
jmp
mov
popa
and
add
mov
xchg
sub
jne
push
cli
or
push
stos
out
adc
xor
stos
insb
gs
push
rorl
call
xor
sbb
aad
js
inc
push
call
shl
dec
inc
mov
filds
sub
cmp
popf
ss
into
cmp
repz
jmp
xchg
adc
iret
or
mov
sbb
pop
mov
filds
mov
jg
bound
or
adc
lahf
ret
int3
repz
mov
test
push
inc
adc
aas
push
xor
dec
imul
in
pushf
jae
cmp
hlt
daa
test
mov
mov
and
shrb
pop
lret
loope
imul
xor
insl
inc
mov
adc
jg
addb
mov
xchg
adc
loop
adc
test
add
pop
sub
ja
pop
divb
push
fs
sahf
push
mov
xchg
int3
and
popa
sub
sahf
icebp
inc
dec
ret
in
dec
inc
mov
sbb
fisttps
mov
xchg
inc
stc
dec
inc
add
test
ljmp
sub
je
imul
inc
mov
pop
mov
mov
xchg
std
mul
push
push
mov
or
add
leave
pop
push
cmp
cmp
pop
adc
jle
mov
int
or
push
mov
scas
sub
mov
loop
add
pop
and
clc
dec
xlat
sub
xchg
push
out
fadds
cmp
repnz
lret
sbb
hlt
dec
inc
adc
mov
call
into
addr16
xchg
jg
pop
cmp
inc
loop
arpl
scas
jbe
outsb
pop
lcall
jb
sbb
mov
leave
add
imul
outsb
pop
cmp
insl
out
mov
shll
mov
fwait
xorl
dec
xchg
mov
roll
scas
add
aad
inc
mov
and
xor
popa
dec
rcll
xor
and
iret
iret
lea
xchg
fwait
loop
sbb
rol
xor
lret
xchg
gs
aam
pop
sar
adc
outsb
cmp
xchg
inc
shlb
cmp
jbe
pop
ficompl
fmull
repz
out
lcall
add
icebp
cmc
ds
icebp
insb
aam
jle
mov
fst
ficomps
mov
mov
add
mov
outsb
jnp
lret
add
cmp
rcrl
mov
cs
jo
es
mov
jnp
in
loope
mov
frstor
lea
adc
shrb
xor
stos
out
inc
jle
sbb
sub
xchg
push
sbb
cmpsb
aas
and
pop
add
inc
pusha
jo
mov
push
mov
pop
push
or
sub
mov
ret
cltd
sbb
push
ljmp
ret
outsl
mov
mov
jmp
test
imul
scas
hlt
dec
hlt
ret
scas
inc
mov
sbb
call
lcall
pop
xchg
inc
repz
and
pop
movsb
mov
insl
mov
pop
out
mov
push
or
cli
in
test
hlt
test
pop
add
testb
push
insb
xchg
or
mov
xchg
lcall
sub
shlb
aad
mov
adc
cmpsb
in
mov
mov
jecxz
in
in
test
and
and
divl
aad
mov
cmp
movsl
and
popa
nop
mov
push
mov
mov
leave
pop
outsl
adc
outsb
jmp
xchg
pop
in
inc
jg
sub
and
adc
ret
nop
xchg
cmpsl
ret
shl
sbb
lock
pop
in
loop
dec
jecxz
mov
jl
mov
lret
inc
and
gs
jle
or
dec
mov
jns
xchg
pop
fstpl
pop
xor
pop
and
xchg
or
jb
enter
fstpl
push
inc
ds
mov
dec
pop
fwait
inc
insb
cmpsb
inc
out
xor
js
dec
sbb
pop
test
xor
je,pn
jne
inc
aam
pop
in
cltd
mov
mov
and
mov
enter
or
jo
shlb
popf
sti
inc
xchg
mov
xchg
or
inc
lahf
add
adc
cmp
mov
cmpl
shl
cltd
push
loopne
jmp
dec
fldt
inc
mov
push
imul
gs
call
jbe
repnz
xchg
jmp
aad
dec
sub
cmp
das
andb
mov
cmp
sub
in
or
cmp
cmc
aam
xchg
cmpsl
pop
and
pop
fnop
outsl
test
add
mov
ja
jb
mov
jle
add
mov
mov
and
pop
fwait
dec
lret
enter
mov
lahf
iret
into
xor
pop
aaa
xchg
vaddss
push
or
and
mov
mov
fmulp
test
adc
jp
add
push
sbb
cmp
push
neg
pop
call
sbb
jnp
add
es
cwtl
push
push
ret
jp
mov
cwtl
and
nop
mov
sar
pop
loop
sbb
lahf
aad
out
pusha
lret
lds
mov
stos
cmc
xchg
xorl
loopne
mov
cld
xchg
pop
mov
mov
cmpb
adc
pop
pop
mov
fbstp
imul
jmp
test
cmpsl
jmp
mov
add
add
mov
es
scas
xor
xor
jne
in
adcb
inc
cmp
outsl
mov
fldl
gs
mov
xor
lret
jmp
sahf
enter
and
fidivs
repnz
jno
clc
test
ret
cmp
push
xchg
icebp
sub
xor
shrb
fistl
mov
dec
jo
ljmp
or
enter
mov
push
clc
popa
ljmp
inc
push
inc
jnp
clc
enter
mov
mov
movsl
js
aam
rcll
cwtl
and
xchg
sbbb
cwtl
imul
push
mov
sub
cltd
pop
scas
test
or
mov
xchg
xchg
dec
mov
testl
adc
add
leave
aas
aam
sub
cvtdq2ps
jno
ja
jb
pop
push
popa
push
xor
xchg
ret
lcall
inc
in
cs
stc
push
inc
sbb
testl
jnp
arpl
adc
aas
sbb
pop
xchg
or
movsl
xchg
push
in
xchg
sbb
int
pop
repz
loope
xor
pop
adc
cmp
pop
repz
fidivrl
inc
dec
lcall
cli
mov
sbb
sahf
xor
add
lds
xchg
inc
enter
push
sbb
xchg
sbb
xchg
cld
mov
sbb
inc
xchg
dec
mov
mov
push
or
cli
pop
xchg
icebp
je
cmp
mov
dec
rol
jno
mov
arpl
in
fnstenv
push
xor
pop
mov
xchg
sbb
cmp
in
cmp
and
shrb
and
sub
cltd
jge
push
inc
dec
mov
test
push
xchg
mov
dec
push
aam
shll
fs
sbb
mov
inc
mov
mov
fstl
cmp
mov
scas
gs
int
outsl
outsb
mov
adc
jge
inc
xchg
cmp
push
mov
dec
add
cli
mov
loop
test
in
mov
sbb
mov
mov
scas
je
push
out
adcb
adc
inc
mov
sarb
jle
shlb
lods
sarl
jp
test
in
xchg
xor
nop
mov
xchg
ret
fisubrs
add
push
cmp
mov
dec
inc
and
pop
lahf
sbb
xorl
out
gs
movsl
jmp
shl
loope
and
out
or
xorb
pop
mov
dec
or
insl
jnp
mov
fchs
adcb
out
imul
ss
loop
gs
enter
sub
push
push
push
rolb
dec
sbb
dec
out
push
out
mov
adc
add
jae
or
mov
mov
inc
xchg
lret
shlb
out
pop
lock
fwait
mov
pop
add
mov
inc
inc
stos
scas
dec
jno
btc
and
xchg
cmpsl
outsb
jmp
fistl
jae
sub
pop
shll
les
fldl
push
sub
adc
sbb
mov
inc
xchg
jle
sahf
imul
inc
pop
les
cmp
inc
push
sbb
inc
repz
pop
testl
sub
mov
stos
imul
jmp
lods
mov
cltd
loope
inc
daa
clc
mov
and
and
mov
pop
fadds
lock
out
xor
add
iret
sbb
test
xchg
push
and
mov
sub
mov
das
loopne
sub
insl
mov
imul
mov
dec
and
inc
and
xchg
daa
xorl
mov
in
fimull
aad
out
sahf
cmpsb
std
sub
stc
mov
and
add
inc
mov
loope
popa
xor
cmp
lret
fsubl
rorl
clc
pop
pop
jp,pt
shl
stos
cmp
in
lds
jae
dec
out
fs
hlt
leave
and
aad
xlat
dec
pop
mov
mov
sahf
mov
popf
xchg
shlb
nop
sbb
and
sbb
mov
xor
pop
outsb
sbb
pop
aam
adc
jae
inc
leave
je
dec
mov
pop
jmp
sahf
inc
sti
mov
inc
mov
jae
lret
lock
sahf
clc
and
mov
aad
les
arpl
mov
pop
imul
cmp
inc
decb
mov
je
imull
dec
cld
test
xchg
cmp
and
out
pushf
mov
mov
in
adc
mov
pop
std
outsb
add
xchg
push
cltd
pop
sub
xor
add
xor
fsubl
mov
flds
or
sbb
loopne
pop
cld
nop
add
bndstx
mov
pop
sarl
push
jno
inc
daa
pop
mov
ljmp
adc
inc
dec
sub
imul
mov
mov
jmp
or
movsb
sbb
js
dec
pushf
addr16
push
jae
sub
mov
push
pop
jle
xor
loope
js
mov
pop
fistpll
dec
pop
in
pop
mov
cmc
loope
add
test
mov
mov
loope
pop
movsb
movsb
inc
sub
mov
push
int
js
pop
rcll
mov
mov
sub
cmp
cltd
fildl
dec
insb
dec
push
shll
or
inc
enter
jo
jp
pop
jb
mov
outsl
sub
push
test
aam
adcl
repnz
or
cltd
fwait
jp
mov
pop
jl
xchg
adc
lock
iret
pusha
sub
or
hlt
dec
xor
repz
sti
in
inc
jnp
rcrl
lahf
mov
rcrb
int3
or
fisttpl
sbb
sahf
mov
fnstsw
inc
mov
loopne
or
fisubrl
cmp
test
sahf
ljmp
leave
push
xor
mov
addl
adc
fisubrl
and
ds
stos
mov
pop
mov
mov
in
cmpsb
push
pop
aas
cmpl
scas
pop
push
movsb
in
stos
cmp
ja
and
push
mov
loop
pop
inc
mov
cmpsb
nop
adc
xchg
test
sbb
imul
mov
add
fnsave
das
cmp
popa
leave
out
push
insl
inc
pop
mov
insl
mov
jmp
ljmp
outsb
insl
into
and
mov
sahf
out
cld
lods
jae
or
cs
dec
imul
push
movsb
test
or
cmp
adc
mov
cmc
xchg
xchg
mov
mov
xchg
push
inc
xor
cli
xlat
es
jmp
jmp
jmp
jne
push
mov
xor
in
push
inc
ds
or
je
jne
lea
push
inc
fst
es
xchg
fisttpll
ds
jl
ss
dec
lock
dec
test
sub
pop
cmpsb
out
pop
movsl
shl
inc
icebp
out
fucompp
jmp
push
in
pop
xor
push
enter
dec
cli
popa
mov
pop
repnz
fwait
jecxz
xchg
inc
hlt
popf
or
fcmove
push
shlb
push
data16
loop
lock
insb
lahf
aad
add
cmp
mov
push
add
jo
jbe
sbbb
repz
inc
roll
fwait
das
xchg
mov
mov
mov
dec
mov
mov
xchg
rcrb
cltd
pop
push
nop
movsb
mov
int
shll
rcl
cwtl
dec
loop
push
das
mov
jg
popf
std
mov
cmpsb
add
dec
jb
imull
ss
mov
out
mov
sahf
cs
mov
sub
pushf
sbb
push
xlat
test
push
push
or
mov
inc
pop
scas
loope
ret
test
dec
add
add
pop
lret
pusha
push
fimuls
cld
icebp
lcall
cmp
push
dec
sarb
shl
mov
inc
pop
enter
fbld
mov
jle
cli
and
inc
jle
out
cmp
std
cmc
inc
ljmp
inc
lea
subb
add
fsubrl
cmc
sahf
pop
mov
ljmp
push
lea
mov
clc
fidivrl
addr16
and
inc
inc
js
movsb
mov
or
scas
aas
pop
xchg
out
mov
loopne
push
out
mov
and
mov
mov
ja
xor
xor
incb
ljmp
inc
into
js
out
movsl
and
mov
out
into
data16
cmp
adc
das
cld
in
mov
adc
mov
pop
aam
in
rcrb
es
inc
daa
push
sbb
or
mov
mov
pop
add
sbb
cmpsb
jnp
js
dec
pop
pusha
jecxz
mov
xchg
addr16
std
test
shrl
xchg
stc
jl
sbb
mov
mov
inc
add
dec
aas
in
fwait
inc
and
addb
mov
mov
and
sbb
into
push
and
cmp
xchg
movsb
in
sub
push
jmp
loop
mov
lret
out
movsl
arpl
rorl
cld
adc
dec
scas
adc
cli
cmpsl
bound
dec
lods
dec
enter
addr16
idiv
ret
xchg
jae
xor
sar
fistpll
inc
lods
cmp
mov
adc
pop
or
fildl
call
xchg
mov
xlat
pop
dec
fs
add
mov
push
or
icebp
dec
sbb
inc
shlb
das
mov
int3
inc
add
xchg
ja
jo
jmp
pusha
aam
les
stos
mov
jp
cld
sub
faddl
mov
add
insl
lock
mov
pop
mov
inc
xor
std
mov
sbb
bound
mov
mov
jp
lock
out
pop
jle
sbb
ret
shrl
mov
jle
cltd
xor
mov
xchg
pushf
int
shlb
js
outsw
sub
filds
push
mov
das
jecxz
adc
jecxz
lcall
xlat
test
loope
mov
and
adc
test
call
dec
lds
in
andl
cmp
repnz
xchg
jb
int3
mov
dec
ljmp
inc
in
test
cmp
cli
aad
pop
ret
xchg
lret
push
ret
cmp
add
pop
test
pop
cmp
cmova
sbb
sub
sub
inc
pop
ss
test
fldl
repnz
jle
sub
jne
ljmp
pusha
dec
lock
mov
jb
jp
in
mov
sti
cmp
adc
xchg
add
icebp
add
pop
cli
jp
jge
outsl
push
inc
cltd
pusha
push
xchg
in
add
sbb
mov
popa
xor
xor
dec
in
dec
push
test
sbb
mov
loop
int3
lcall
inc
pop
push
jne
cltd
push
out
jne
cmpsb
xchg
fists
repz
movb
sub
or
shr
in
xchg
cli
fwait
aam
sbb
sbb
mov
fidivrs
xor
mov
lods
mov
das
pop
dec
xchg
aas
mov
and
jl
lea
dec
lret
ret
mov
xor
and
mov
mov
stc
add
fisttpl
clc
rcrl
stos
leave
jmp
cmpl
mov
jmp
sbb
iret
dec
and
push
sbb
mov
hlt
fisttps
pop
fdivrl
nop
mov
mov
mov
lret
xor
fstpt
call
sarl
loopne
inc
and
outsb
daa
cwtl
mov
je
pop
push
rcll
imul
push
dec
lods
cltd
mov
bound
ret
lock
push
jne
pop
add
inc
mov
rcrb
add
cmpsb
ljmp
repnz
fsubs
mov
xor
xchg
pop
fcomi
shl
sub
mov
jl
pop
movsb
test
out
xchg
ss
imul
stc
out
movl
vfrczsd
std
adc
rorl
push
add
iret
xchg
xor
fwait
enter
mov
xchg
shlb
ret
or
or
shll
imul
jns
and
out
inc
rcl
xor
push
lahf
mov
rcr
cltd
lret
repnz
pop
in
repz
mov
sub
push
cmc
ret
fadds
lds
das
jecxz
adc
fcompl
rclb
sbb
aam
cwtl
jo
dec
aam
scas
mov
mov
xchg
adc
rorl
in
push
xchg
outsb
sbb
enter
sar
xor
ret
outsl
pop
out
addr16
xchg
mov
mov
cmp
jp
cltd
or
sub
push
nop
leave
inc
sti
inc
mov
jl
add
lret
stos
cwtl
sbb
ret
lods
push
ret
add
rcrb
lret
inc
mov
jae
cmp
and
inc
push
inc
data16
faddp
dec
test
push
imul
add
or
mov
mov
mov
imul
mov
sbbb
inc
test
cmc
fldz
int
test
jge
out
subb
fsub
xchg
loop
xchg
shr
push
and
pop
mov
inc
fstl
mov
insl
mov
stos
js
mov
xchg
std
bound
dec
les
clc
pop
inc
mov
dec
add
push
mov
pop
and
mov
inc
adcb
sbb
sbb
lcall
mov
cli
stos
dec
adc
jle
bound
rorb
adc
ret
and
mov
inc
ret
xchg
add
cmp
hlt
cmp
sub
movsl
add
sub
jne
aas
cs
mov
xchg
insl
cmpsb
pop
out
push
push
mov
loope
fdivs
rclb
mov
add
jbe
xchg
daa
aad
je
and
or
add
es
adc
test
push
ja
or
mov
add
aam
and
sub
mov
xor
or
stc
xchg
pusha
repnz
pop
stos
mov
stos
push
test
xchg
loop
adc
sub
cmc
pop
and
ficoms
xor
jb
jbe
lds
movsl
adc
jns
jb
iret
lret
mov
ret
push
iret
int
cmp
sbb
xchg
mov
ret
inc
or
ds
or
aad
or
ljmp
sbb
sub
fs
aaa
stos
pop
or
xor
movsb
mov
dec
repnz
sbb
mov
mov
add
push
jl
add
dec
loope
pop
sbb
jns
clc
or
pusha
xor
xchg
cld
mov
xor
xchg
xchg
fs
into
movsb
cmp
push
cmpsb
push
add
dec
aam
adc
arpl
repnz
jl
sbb
cmpsl
mov
in
stc
jp
cmp
xorb
inc
repnz
test
pop
mov
int
sub
cmp
sbb
pop
lret
push
dec
sub
stos
add
popf
and
leave
movsb
les
xor
xchg
ss
shl
adc
divb
out
mov
stos
loop
xchg
test
mov
mov
sti
jp
aam
test
adcb
aam
daa
push
cltd
mov
mov
ja
and
inc
mov
cwtl
sbb
cmp
mov
inc
loopne
sahf
daa
add
xchg
out
jne
and
mov
xchg
cmc
push
dec
adc
xchg
sub
xor
rol
icebp
add
dec
rorl
sub
lahf
push
test
out
xor
adc
cld
mov
nop
push
or
mov
popf
outsb
add
iret
push
xchg
nop
xorb
lret
fildll
push
mov
and
data16
clc
divl
in
je
dec
adc
pop
inc
push
cs
mov
dec
xchg
and
and
mov
mov
jb
fs
outsl
cmp
and
pop
in
in
pop
pushf
inc
mov
mov
mov
fwait
inc
insb
ss
mov
mov
jno
adc
call
repnz
mov
movsl
call
ds
add
sbb
add
push
lret
stos
dec
repz
mov
test
stos
outsl
and
outsl
sub
es
jo
shll
or
shl
push
xchg
pop
pop
xchg
and
cmc
or
cmp
test
movsl
ds
mov
aaa
or
push
jmp
jp
add
xor
dec
cmp
mov
cs
jl
xlat
jg
stos
lods
push
sahf
mov
pop
lods
dec
addr16
pop
dec
add
aad
bound
mov
and
inc
lcall
popf
sbb
test
sub
ljmp
cltd
add
ret
pop
test
imul
mov
mov
mov
icebp
jp
hlt
cmpsl
insb
cwtl
jb
inc
decl
mov
and
jecxz
and
cmp
outsb
int
pop
inc
sub
mov
mov
cs
mov
lret
add
jmp
cmp
jge
jne
push
clc
out
mov
and
mov
mov
cmp
jne
insl
sub
mov
stc
mov
std
xchg
int
and
mov
mov
sbb
fcompl
ja
jne
gs
sarl
mov
pop
sub
or
mov
push
mov
fdivs
jge
popa
out
loope
inc
cmp
pop
mov
mov
sbb
push
int3
push
in
jle
push
arpl
mov
xchg
mov
hlt
sub
mov
ficoml
les
js
lds
scas
lods
pop
add
adc
test
jmp
cwtl
adc
dec
cltd
outsb
add
sbb
nop
shlb
insb
cmp
shll
cmp
outsb
and
lods
in
pop
sbb
rcr
sbb
ss
xor
sbb
call
push
mov
inc
xchg
pop
clc
gs
xchg
mov
jnp
daa
mov
stos
xor
mov
xor
fcoml
pop
inc
int3
mov
outsl
cmp
sbb
into
stc
mov
icebp
push
pop
stos
jle
dec
pop
mov
xor
ja
sbb
jg
in
repnz
jecxz
mov
mov
xor
push
pop
incb
outsl
xchg
inc
adc
popl
lock
xchg
arpl
xchg
or
pop
rcpps
mov
cmp
jp
jmp
rorl
and
mov
in
mov
lret
xchg
pop
add
adc
inc
stos
xlat
and
mov
push
mov
push
fsubr
push
inc
add
hlt
and
sbb
cli
xchg
pop
imul
pop
sub
mov
cmp
movsb
pop
stc
stos
sbb
enter
add
inc
push
out
sub
mov
xor
scas
repnz
ss
mov
leave
pop
pop
mov
movsl
sbb
les
mov
mov
cld
shll
data16
xchg
mov
lods
andl
ljmp
ljmp
out
nop
bound
iret
adc
shl
rclb
sbb
test
mov
pop
lods
shlb
js
push
sbb
loop
lret
scas
cli
sarl
loopne
es
lock
adc
rcl
lahf
jl
out
jae
adc
and
aam
mov
and
pusha
sbb
sub
xchg
out
xor
call
aaa
pop
adc
out
ret
scas
sub
outsl
mov
aam
adc
insl
shll
xor
je
mov
dec
jge
out
pop
adc
dec
lock
jb
mov
mov
jp
jg
dec
add
out
sub
out
cmp
in
mov
pushl
leave
sub
sbb
dec
add
add
sub
loop
pop
sar
and
and
in
je
mov
scas
inc
push
jmp
sbb
shlb
test
lret
and
aad
test
lret
mov
popa
push
jae
mov
hlt
pop
jg
pop
xchg
push
xchg
pop
cli
mov
clc
push
pop
shrb
in
rorl
ljmp
push
inc
inc
test
mov
fdivrp
mov
inc
bound
mov
push
fdivrs
jb
out
ss
inc
pop
dec
cmp
cmc
sti
lret
dec
scas
mov
insl
and
test
add
rol
xchg
sbb
aas
jp
cmpsl
mov
dec
or
sbb
push
fbld
std
and
popf
out
push
hlt
xchg
jo
mov
mov
xchg
test
in
fbld
sub
xor
push
pop
push
pushf
in
and
test
insl
lcall
in
arpl
push
mov
mov
roll
mov
andb
cld
data16
daa
sbb
orb
xor
aas
fwait
imul
mov
mov
push
fcoml
mov
mov
loopne
pop
shl
aas
mov
inc
cmp
aam
movsb
jge
enter
testl
push
jb
loope
push
dec
icebp
xlat
shrl
or
stc
lods
adc
mov
sub
sbb
pop
or
fwait
cmp
cwtl
xor
aas
add
fsts
adc
mov
xchg
xchg
fsub
mov
int
mov
mov
mov
test
mov
ljmp
push
jmp
and
pop
scas
pop
xlat
hlt
jp
addb
xchg
pop
push
insl
out
arpl
jno
mov
dec
lahf
arpl
push
dec
insb
jg
sub
stos
pushf
call
push
scas
xchg
sub
jb
push
pop
xor
iret
repz
das
or
cmc
out
cmp
movsb
sub
in
dec
addr16
mov
or
scas
pop
dec
push
jns
icebp
inc
sub
push
roll
mov
add
loopne
fistpl
scas
in
fnstcw
adc
notl
inc
aam
cmp
mov
xlat
jae
add
ja
cmpsl
lds
fs
add
sbb
out
jmp
loope,pn
js
lea
in
sti
sbb
cmp
stos
out
or
cltd
xchg
lods
mov
push
nop
xchg
mov
fstpt
mov
out
stc
cwtl
mov
push
sti
test
sub
mov
mov
ret
outsl
frstor
fnstsw
test
dec
mov
stos
adc
icebp
and
mov
mov
aaa
adc
jb
in
push
leave
fwait
loopne
imul
fsubs
xchg
loop
mov
mov
xchg
dec
xor
rolw
lods
add
ja
enter
jbe
pop
out
mov
sahf
push
xor
jmp
hlt
shll
cmp
sahf
test
mov
ljmp
rcl
fmull
xchg
sbb
fwait
pusha
xchg
ret
scas
movsb
sbb
push
pop
cmp
xor
sti
inc
xor
lret
movsl
mov
dec
pop
clc
inc
mov
add
mov
pop
iret
inc
inc
jb
repnz
jmp
outsb
jb
in
fwait
das
loop
mov
or
loopne
mov
mov
pop
mov
aam
in
mov
sarl
sub
test
inc
cmpb
cmp
lar
das
rcrl
adc
aaa
and
xor
ret
aam
popf
jnp
popf
popf
clc
inc
cs
mov
test
lcall
xchg
add
mov
dec
or
int3
pop
push
cmovge
sarl
and
int3
pop
jmp
xlat
outsb
fsubrs
mov
fisubrl
dec
pop
adc
insl
movsb
sub
mov
xor
cs
xchg
insb
mov
dec
jae
adc
lahf
sbb
mov
lea
and
arpl
imul
add
or
rcll
ret
scas
mov
out
adc
and
maskmovq
mull
fdivrl
test
add
push
add
sub
dec
dec
xchg
loope
loop
mov
sbb
ja
push
inc
lcall
lahf
mov
enter
stos
pop
mov
add
lods
movsb
and
adc
sbb
loopne
cmp
dec
fnsave
loop
xchg
mov
push
push
mov
das
xchg
inc
repz
fwait
push
mov
dec
shll
enter
mov
xchg
sub
fdivrs
pushf
adc
cmp
pop
fnsave
nop
jbe
and
jecxz
fstpl
adc
test
pop
add
cld
lock
mov
leave
jp
shrl
les
in
mov
rorl
loopne
push
scas
fdivr
sbb
cmpb
cvttps2pi
rcrb
imul
sbb
rclb
cmp
in
outsl
ds
ret
enter
mov
leave
or
adc
stos
popf
addr16
cbtw
jg
loop
add
jo
mov
push
mov
push
ffreep
push
shl
stos
push
mov
add
pop
aam
adc
outsb
inc
or
daa
idiv
jle
in
mov
in
cmpsl
loopne
out
andb
popf
mov
pop
xchg
or
xchg
jg
mov
mov
push
rorl
jns
xchg
sti
adc
cmp
pusha
int3
add
pop
mov
jo
jl
push
test
and
inc
into
out
fldcw
mov
mov
push
pop
xlat
jae
adc
dec
and
mov
adc
pusha
adc
int
out
aam
stos
rcrl
jbe
sub
and
dec
cld
jge
adc
jg
add
jbe
daa
pop
jle
mov
sbb
nop
out
add
movsb
insb
int3
sub
stos
xor
mov
iret
pusha
loopne
jo
or
repz
ja
xlat
or
subb
push
mov
cmp
test
clc
mov
loope
into
or
inc
hlt
sub
mov
xchg
xor
adc
mov
sbb
daa
dec
aas
xchg
in
lea
inc
in
pusha
add
inc
fsub
mov
arpl
sub
add
jnp
xor
lret
loop
fsub
or
jns
fs
loop
push
rcll
mov
inc
scas
dec
mov
or
arpl
xor
push
ja
fs
xchg
mov
xor
add
arpl
and
mov
loope
push
pop
xor
jmp
mov
pushf
dec
mov
xchg
push
inc
adc
sahf
fsubrs
mov
mov
dec
xor
cmp
push
cmpsb
pop
dec
andl
and
call
xor
sahf
loop
sahf
jle
insl
rorb
mov
push
fs
and
jecxz
fiaddl
test
pop
adc
shlb
pusha
fistps
and
xchg
add
xlat
and
ljmp
into
repz
jp
mov
sbb
push
icebp
mov
mov
in
std
insl
push
dec
mov
xchg
clc
sbb
xchg
adc
sti
into
movb
push
adc
xor
fcompl
test
test
fwait
lock
scas
cmp
loopnew
mov
insl
shll
lea
pop
fcoml
insl
clc
jb
jecxz
mov
push
pop
pop
push
daa
cwtl
pop
cmp
mov
or
test
in
cltd
dec
mov
cmp
ja
pop
nop
and
dec
aas
cli
jns
push
sbb
pop
xchg
add
jmp
pusha
nop
ret
dec
cmp
inc
pop
mov
cmc
pusha
pop
or
fisubrs
pop
cmpsb
sub
rcrl
in
or
mov
push
xlat
or
repz
std
and
or
push
lods
dec
outsl
ror
cmp
ljmp
pushl
push
cmp
lea
push
mov
inc
push
inc
pop
jo
loopne
lock
sub
shrb
push
xchg
jmp
mov
fsubl
scas
inc
movsb
insl
loopne
dec
mov
call
adc
scas
cltd
xor
lods
fwait
shrd
pop
jbe
mov
sub
sbb
jo
or
pop
nop
and
adc
mov
rol
jg
cmp
scas
leave
pop
in
inc
movsb
mov
mov
jle
xchg
add
lcall
lahf
jae
push
out
fmull
pop
dec
mov
mov
mov
lds
sub
fs
cmpsl
jle
jmp
adc
mov
xchg
fistpll
jbe
mov
cld
and
sub
xchg
sub
loop
loopne
or
push
imul
icebp
je
leave
inc
and
fbstp
les
jle
dec
sub
push
jg
push
stc
xor
sar
fidivrl
mov
pop
lods
jne
xchg
out
inc
pop
fidivrl
xor
add
movsb
std
cmp
sahf
mov
test
pop
push
jbe
sub
pop
push
mov
dec
rclb
mov
jl
jb
test
xorb
aaa
jb
cmp
cli
lahf
data16
sarl
jno
add
mov
dec
xor
jns
out
push
mov
jle
jp
mov
sbb
jp
orl
outsb
xchg
div
adc
or
test
jl
xchg
or
jmp
repnz
add
enter
int
cs
jns
xchg
sbb
and
adc
cmpsl
stos
lahf
push
in
mov
pushl
insl
stc
shlb
xor
lods
movsb
jle
adc
fstps
xlat
mov
dec
pushf
lret
loopne
dec
jg
loop
cld
mov
sub
in
or
jp
inc
push
push
xchg
aaa
aas
push
fisubrs
idivb
mov
xor
mov
test
stos
iret
rcll
aam
out
xor
jnp
mov
scas
pusha
dec
jno
and
or
int3
fs
xor
mov
cli
out
and
inc
fsubrp
mov
loopne
in
sub
popa
frstor
std
ficompl
dec
sbb
mov
jp
scas
add
mov
add
jl
mov
push
xor
mov
adc
mov
in
inc
add
bound
ret
cli
in
pusha
mov
ret
mov
xchg
loope
inc
pop
fsubrl
or
inc
call
mov
mov
push
mov
add
scas
pop
scas
mov
xor
push
pop
ss
cmpb
mov
pop
lea
jle
and
sbb
inc
in
inc
jle
mov
jae
stc
in
pop
push
lea
clc
repnz
out
popa
fwait
rol
aad
jle
sub
or
cmpb
xchg
ret
pop
movups
or
mov
xchg
xor
adc
inc
jl
xor
jmp
jp
in
add
incb
fisubrl
xchg
mov
xor
in
test
mov
inc
dec
pop
jnp
loope
xchg
popa
add
cmc
faddp
outsl
outsl
aas
push
mov
lret
or
cmpsb
cmp
jae
scas
xchg
das
jnp
stc
pop
mov
inc
stos
cmpsl
dec
mov
movsb
xchg
dec
test
jmp
cmovg
adc
mov
cli
cmc
or
scas
lahf
mov
js
cmp
push
lds
ja
daa
cli
movsl
dec
lret
rcrb
push
mov
pop
stc
sub
lods
popf
js
mov
push
xor
add
jbe
bound
mov
lods
jp
aam
xchg
jge
xor
movsb
nop
outsl
push
push
mov
fdivl
mov
pop
cmp
jmp
dec
nop
or
movl
cmp
je
xor
imul
dec
jp
orb
ss
mov
mov
xchg
cli
cmp
ds
mov
mov
and
mull
ljmp
dec
inc
lods
mov
pop
pop
lahf
andb
push
repnz
icebp
mov
sbb
out
and
jge
and
adc
mov
test
sarb
jbe
mov
and
sub
dec
test
sub
sahf
aam
fisttpl
jne
pop
xchg
pushf
push
fstpl
cmp
fdivrs
cmp
inc
into
stos
xlat
cld
or
mov
mov
icebp
orl
inc
nop
push
sbb
mov
jne
dec
ficompl
push
adc
sub
fwait
pushf
dec
daa
jnp
inc
cmpsl
sbb
sbb
mov
das
mov
insb
xchg
divb
aam
aam
fs
mov
adc
es
cld
fcoml
dec
add
pop
out
xor
pminub
lods
ja
sbb
leave
dec
repz
jp
mov
pop
add
add
leave
cmpsl
adc
shll
mov
pop
jbe
in
mov
inc
pop
add
divl
hlt
sti
pop
pop
xor
hlt
pop
arpl
mov
mov
sahf
iret
push
and
inc
xchg
xchg
lret
addr16
push
std
mov
mov
enter
or
movsl
sbb
sub
ljmp
cmp
jbe
stos
repz
inc
aaa
pop
inc
push
sbb
sbb
ret
es
add
sub
aaa
cmp
insl
jno
cmp
inc
std
insl
cmp
push
aam
mov
dec
cmp
push
adcb
push
cmp
dec
cmpsb
insb
cmc
cmpsb
pusha
das
imul
sti
sub
adcb
pop
pop
add
inc
scas
lods
push
int3
enter
adc
xchg
cmp
sub
aad
in
rcrl
scas
imul
fwait
shll
mov
add
out
cmp
add
mov
sub
cmp
jle
xchg
inc
popf
loop
inc
loope
lcall
xchg
jae
test
adc
outsl
pop
rclb
cmpsb
jl
test
enter
das
out
and
aad
add
jg
nop
popa
lds
inc
sbb
adc
cmpsb
lahf
sub
wbinvd
mov
shrb
aaa
arpl
jp
mov
ficoml
or
pusha
stos
xchg
sub
stos
inc
scas
xchg
ficoml
or
or
loop
xchg
faddp
pop
cmpsl
addl
movsl
shll
mov
mov
bound
mov
fstps
push
pop
aad
jl
push
in
mov
ret
cwtl
and
cld
sub
movsb
sahf
nop
mov
in
xchg
aam
aaa
cmp
inc
test
in
mov
cmpsb
out
pusha
cmp
bound
jns
cwtl
lret
subl
and
std
pxor
clc
inc
bound
pop
in
mov
inc
hlt
mov
cmpsb
stos
aas
add
ja
dec
pop
rorl
stc
test
lret
nop
and
fdivs
cmpl
stos
jae
fsubs
add
add
dec
dec
fwait
vpmuludq
push
repnz
repnz
jnp
dec
in
call
fwait
sbb
and
cld
sbb
insl
cmp
push
xor
adc
xor
dec
loopne
jge
push
insb
or
jnp,pt
xor
mov
pushl
lret
cmp
mov
iret
push
dec
sbb
sbb
jg
aad
mov
xor
fimuls
aas
xchg
in
int
dec
jl
inc
aam
xchg
roll
jmp
mov
jo
xchg
shrl
push
ffree
shr
jmp
inc
sub
cwtl
pop
shlb
insl
movsb
shrl
jne
push
sub
xchg
jmp
dec
xlat
fsubrs
pop
pop
push
lret
out
mov
cmp
inc
dec
xchg
xchg
arpl
hlt
pop
rcl
rolb
mov
out
fldenv
fdiv
xor
in
jo
loopne
cltd
add
clc
inc
aaa
das
fstl
cmpsb
mov
stos
adc
mov
loopne
inc
test
pop
repnz
dec
lret
stos
xor
mov
add
imulb
mov
mov
pop
push
insb
sub
xor
fisttpll
xor
mov
xchg
cmc
stc
lock
loop
or
inc
mov
call
dec
mov
stos
mov
loopne
addl
popa
xor
mov
in
xlat
jg
cmc
and
and
xchg
lock
in
or
sbb
lods
gs
sti
xlat
xor
pop
mov
sub
call
jo
pop
sub
jmp
loope
mov
hlt
xor
shrl
shlb
shlb
mov
lcall
insb
or
jmp
xor
ss
mov
in
int3
cld
adc
repz
jp
shrb
pop
inc
or
dec
dec
shlb
orb
sti
jns
jbe
stos
sub
fcmove
jb
je
push
xchg
xchg
jns
mov
js
and
xor
sbb
ss
ljmp
lock
and
push
jne
jl
ljmp
fcmovu
push
cmp
and
pop
shlb
sub
shl
loope
mov
push
dec
push
lods
popa
mov
xchg
xchg
js
lock
sub
mov
sbb
push
cmc
xor
inc
mov
mov
es
call
ja
and
xor
push
xchg
test
push
hlt
leave
jmp
in
jo
mov
dec
jecxz
sub
insl
mov
fnsave
enter
dec
cmpsl
pop
int
xchg
mov
cmp
fs
add
xchg
pop
in
inc
mov
mov
popf
xchg
out
mov
xor
aas
jno
pushf
jmp
adc
add
add
jmp
lea
jnp
ja
jno
in
test
imul
popa
jmp
lods
mov
call
xor
jg
cs
std
lods
rorb
sahf
dec
subl
bound
gs
and
icebp
loope
inc
rclb
dec
cmp
dec
mov
cmp
push
sub
insl
cwtl
fmul
sub
in
mov
push
pop
mov
scas
pop
lds
sub
adc
jns
std
nop
lret
add
sub
fisttpll
push
imul
sbb
fisubrs
mov
xchg
pop
pop
inc
and
stc
pop
or
cmc
mov
aad
nop
mov
mov
arpl
es
pop
sub
pushf
insl
adc
pop
xchg
cmpsl
sbb
or
push
rorb
and
lods
outsb
repnz
shlb
push
sbb
out
sbb
and
mov
imul
mov
mov
lahf
mov
int3
movsb
movsl
test
ds
push
mov
fnsave
or
cmpsb
lods
jno
ret
mov
cmp
fnstcw
pop
mov
andl
mov
movsl
aad
call
arpl
mov
mov
imul
lock
negl
sahf
popa
ja
push
lret
mov
aam
subb
mov
push
pop
sbb
shrb
rcr
push
aam
cli
and
inc
subb
mov
add
inc
mov
pop
adcb
mov
push
jne
psadbw
or
jmp
call
inc
inc
in
xor
mov
fwait
push
and
or
ljmp
sub
loop
or
mov
mov
les
ds
or
das
cmp
call
movswl
ss
mov
loope
insb
les
mov
call
lret
cmpl
js
cmp
inc
sbb
push
adc
repnz
xchg
popf
jl
add
cmpsl
in
gs
rol
cmp
pop
xchg
xor
or
jnp
push
cmp
or
sub
je
mov
dec
rorb
mov
or
enter
pushl
movsl
data16
scas
cmp
sub
cmp
fmuls
pushf
sub
ds
nop
in
cmpl
fst
sbb
mov
ret
test
jl
sub
in
in
fdivr
mov
arpl
pop
adc
jecxz
jb
xor
insl
loop
decb
out
xchg
jae
movsb
addr16
ror
arpl
or
mov
insb
out
push
ss
pop
inc
decl
push
clc
sub
jmp
insl
test
xor
aad
pop
mov
and
jecxz
xchg
mov
pop
or
cli
scas
les
lds
jno
push
fsts
sub
iret
push
cs
xchg
add
iret
ret
and
aad
fsubs
cltd
push
inc
jmp
in
adc
mov
mov
mov
xor
adc
movsl
sti
pop
dec
fldt
fdivrp
or
insb
repz
repz
cmp
dec
dec
jmp
jnp
movsl
fdivr
in
sub
outsb
jne
cmpsb
or
fnstcw
mov
pop
in
fildl
xor
adc
mov
lret
cld
dec
push
or
jns
pop
or
pusha
mov
scas
dec
xor
pop
or
fisubrl
push
jle
mov
fiaddl
inc
jns
sub
je
jb
or
xor
out
stc
mov
jmp
outsl
push
pushf
pop
popf
or
cwtl
std
lret
lret
and
jae
ljmp
mov
outsl
fiadds
push
push
mov
mov
pop
pop
rorb
aam
dec
daa
adc
addr16
dec
inc
pop
mov
xchg
popa
add
jecxz
cmpsl
loope
adc
xchg
xor
jo
push
push
stos
call
mov
inc
mov
in
cs
popa
cmp
inc
pop
jae
aaa
fdivrs
xor
inc
adc
inc
sbb
sahf
pop
aad
xchg
adc
fistl
xlat
and
test
hlt
pop
add
inc
test
push
hlt
push
pop
pop
aad
cltd
daa
jg
mov
rorl
sub
push
outsb
mov
inc
add
je
cmp
insb
clc
sub
pop
mov
jns
dec
mov
roll
std
js
cmp
jbe
add
loope
xor
das
insb
or
xchg
jge
adc
add
hlt
mov
jns
mov
mov
cwtl
sbb
or
jmp
push
pop
add
cmp
push
xchg
je
aad
pop
and
jmp
scas
adc
or
jo
or
xchg
mov
or
popf
repnz
adc
stc
cmc
out
arpl
inc
mov
jb
scas
push
test
insb
sbb
adc
shll
cli
dec
mov
xchg
xlat
sub
jbe
add
or
data16
repnz
and
aam
movsb
sub
aam
fsts
jg
inc
repnz
rclb
cli
cmp
loop
dec
adc
adc
adc
and
jo
and
mov
pop
cmp
or
mov
cmpb
ja
stos
mov
cmpl
and
fbld
sbb
xor
jmp
data16
test
adc
imul
push
mov
insb
iret
add
and
xor
addr16
fadds
inc
and
loop
add
xchg
mov
mov
push
pop
sub
inc
out
cltd
sbb
popf
sub
adc
sub
sarl
pop
pop
out
out
stos
popf
fcoml
xchg
inc
mov
jb
jno
adc
das
mov
fidivrs
fwait
out
frstor
dec
ljmp
pop
shr
in
or
add
adc
out
nop
mov
xor
mov
mov
hlt
mov
shll
adc
daa
fsubs
pop
jp
in
and
outsb
mov
mov
pop
add
sub
iret
dec
inc
sar
cltd
outsb
push
getsec
mov
cli
lahf
arpl
test
fcmovbe
lea
xor
ret
inc
jle
cld
cli
cmp
cwtl
push
pop
jmp
push
add
sbb
enter
add
inc
mov
sbb
mov
daa
xchg
jo
rorl
out
and
or
add
cltd
lds
enter
idiv
bound
loope
nop
subl
sahf
mov
sub
mov
add
gs
mov
pop
cmp
xchg
ds
cmp
inc
mov
push
daa
scas
ljmp
sub
push
adc
add
mov
sub
and
ret
push
subb
movsl
lahf
lea
mov
cmc
mov
outsl
das
cmp
popf
push
adc
push
sbb
faddp
cwtl
dec
sbb
aaa
loopne
inc
push
inc
inc
xchg
cmpsb
fists
movsb
cmp
int3
loop
iret
notb
into
leave
cli
divl
inc
cmp
dec
sub
sub
xor
ret
and
test
test
and
mov
test
in
cltd
inc
pop
adc
cmp
lods
aam
dec
dec
push
cwtl
out
xchg
fdivrl
inc
push
sti
dec
inc
hlt
aad
cmp
jno
or
outsb
xor
insb
xchg
stos
clc
shl
pop
xor
fmull
aas
cld
jne
fdivp
xor
xchg
lcall
xor
cs
cli
out
mov
mov
jno
dec
lods
add
clc
sbb
push
push
add
xor
gs
sub
movsl
aas
imull
mov
cmp
imul
cmp
data16
jl
pop
sub
push
add
cmp
movsl
adc
fidivrl
pushf
frstor
enter
sbb
mov
adc
mov
fsubl
or
xor
pushf
hlt
aaa
xchg
repz
push
ret
inc
fwait
mov
iret
mov
pop
xor
cmpsl
pop
rolb
cmpsl
mov
add
jb
loop
jg
nop
mov
cmp
or
mov
mov
js
and
jo
xor
sub
cmp
xchg
jbe
and
popf
outsl
fwait
add
xchg
pop
mov
push
mov
loopne
add
ss
push
sarl
fs
xor
lret
jnp
icebp
or
in
outsl
testl
enter
and
ret
add
pop
cmc
mov
movsb
addr16
push
jne
push
pushf
cmp
push
pusha
stos
int
jo
mov
out
imul
fs
aad
inc
dec
sub
cmp
fcoms
in
sub
testl
cmpsb
jnp
pop
fs
add
add
push
test
or
adc
and
cmp
cmpsb
push
mov
inc
mov
lock
mov
aam
sbb
loop
or
cmp
mov
fxch
ds
popf
loopne
mov
shlb
cmp
add
ret
mov
jmp
xchg
repz
loope
mov
incb
xchg
insl
ret
nop
out
or
xor
loop
sbb
lret
push
push
cmp
dec
push
mov
pop
push
pop
dec
mov
mov
repz
mov
and
and
sbb
or
pusha
jge
pop
je
xor
int
pushf
scas
and
in
adc
je
or
out
arpl
imul
jmp
lods
push
xor
adc
test
xchg
or
aam
pop
aas
movsl
mov
push
cmp
add
add
xchg
sub
push
nop
sti
sbb
repnz
fdivrl
jge
sbb
xlat
fistps
outsl
pop
iret
movsb
inc
jge
aad
fistpll
rclb
sub
cld
sbbb
cs
or
daa
mov
lret
icebp
test
pop
pop
test
mov
push
frstor
sub
push
mov
fsubr
out
dec
out
push
mov
inc
push
mov
push
daa
jno
push
into
in
xor
rcll
fsubl
ficomps
ret
std
cltd
dec
int3
mov
cmc
or
aas
inc
cwtl
jg
sarl
in
lea
call
leave
ds
cmp
inc
mov
xor
outsl
test
lea
jnp
sbb
shrb
ss
mov
andb
fidivs
jp
xor
pop
call
pop
es
and
sub
nop
sbb
pop
shr
jne
pop
adc
push
into
jle
subb
adc
cs
sahf
dec
movsb
shrl
jo
aas
jl
mov
loopne
cmp
or
xor
arpl
pop
cs
into
hlt
inc
dec
ror
mov
fdivrs
sti
sbb
xchg
sbbl
lea
lret
lcall
fildl
pop
xchg
dec
and
scas
aad
adc
ret
push
ds
xorl
add
inc
rcrw
inc
sub
jl
bound
xchg
mov
sbbb
push
jmp
lock
imul
lret
leave
aas
mov
dec
cmp
cmpsl
xchg
mov
cld
shll
add
negb
jbe
or
push
inc
xchg
adcb
movsl
fsubrl
lahf
int3
or
mov
fcoml
idivl
inc
ja
pop
mov
sahf
xchg
mov
adc
cmc
ljmp
loope
test
clc
push
push
fidivs
stc
dec
rorb
xor
push
jmp
mov
xchg
mov
out
ret
fcmove
adc
sub
jbe
ja
bound
add
out
ror
fcomi
pop
or
pop
push
add
dec
jl
popf
in
ljmp
pusha
mov
and
jns
mov
or
sbb
jge
ret
rcrb
cltd
in
icebp
int3
scas
clc
push
and
repz
mov
roll
xchg
adc
cmc
ret
fsubrl
xchg
xchg
xchg
loopne
jmp
push
adc
dec
push
mov
pop
and
in
jo
jle
xor
push
pushl
xchg
push
inc
mov
stos
inc
xor
push
ficomps
repz
dec
nop
orb
cmp
call
in
mov
imul
xchg
lods
mov
movsb
xchg
xor
mov
mov
test
lock
lock
and
enter
ror
mov
inc
mov
pushf
adc
in
dec
fwait
sbb
push
les
js
mov
subb
loopne
mov
loopne
divl
xor
dec
fwait
loopne
push
pop
daa
fldcw
in
mov
in
add
jb
clc
fnstsw
pop
xor
xchg
xor
pop
cmc
mov
test
int3
inc
adc
inc
jnp
je
pushf
fstpl
gs
jle
pop
adc
adc
ret
mov
pop
stc
int3
nop
pavgw
arpl
loope
push
aaa
sub
nop
stos
pop
pop
push
cmp
jno
lret
and
jle
aad
stos
popf
mov
notl
sarl
mov
ja
push
lds
fldl
inc
mov
enter
pop
fcompl
ja
adc
bound
mov
mov
mov
cmp
lcall
jl
in
pop
jno
fs
push
movntpd
xor
inc
lret
sahf
cmpsb
jae
pop
das
into
or
int3
sub
mov
scas
stos
sub
xor
pushf
lods
push
dec
sbb
xchg
loop
scas
mov
jo
fcompl
and
std
xor
out
jne
push
rorb
pop
js
mov
out
push
push
pop
push
lret
hlt
sub
xchg
lock
sbb
mov
imul
xor
xor
mov
cwtl
lods
iret
adc
mov
inc
add
add
mov
hlt
stos
int
add
or
aam
mov
rolb
stos
mov
mov
iret
push
or
push
push
mov
lahf
sub
ljmp
mov
cli
mov
fs
bound
push
or
pusha
jp
add
xchg
js
adc
and
adc
sar
dec
xchg
inc
lods
lahf
push
int3
das
cmp
sbb
pop
sub
adcl
add
cmp
jmp
and
pop
imul
mov
sub
xchg
or
xchg
xor
sub
arpl
pop
fs
into
cmp
mov
cli
mov
rolb
jae
fwait
mov
push
scas
cmp
scas
stc
xchg
mov
cmp
adc
int
inc
or
xchg
add
lret
nop
xor
out
xlat
mov
or
jmp
fmuls
test
loopne
inc
inc
pushf
out
cmp
movsl
mov
imul
rolb
in
xchg
outsl
fdivrs
fs
cmp
inc
dec
sar
or
xchg
pop
push
test
divb
mov
mov
outsb
loop
nop
pop
push
and
enter
jmp
mov
fdivs
mov
stc
cwtl
and
mov
sbb
out
push
push
xchg
sub
cmp
adc
aad
stc
pushf
push
sbb
push
aam
mov
cmp
pop
into
cmp
clc
rclb
rolb
fdivrl
mov
sbb
add
jecxz
dec
enter
push
jl
pop
test
xchg
cmp
sub
aad
cmp
cld
jns
pop
inc
cmp
mov
cmp
arpl
xlat
sub
ret
lods
scas
sbb
xchg
and
adc
test
push
aas
in
test
repnz
in
mov
or
movsb
ja
xchg
push
xchg
cmc
mov
popf
xchg
sarb
mov
lods
mov
xchg
xlat
adc
push
test
imul
add
movsb
mov
rorl
xor
stos
pop
int
insb
jno
testb
test
dec
rclb
repz
sahf
adc
xchg
jne
test
shl
sub
pop
aad
fwait
or
jns
push
leave
sbbb
stos
push
pop
movsb
and
ss
inc
mov
fbstp
aam
ljmp
std
and
fiaddl
bound
sbb
sbb
imul
cwtl
lods
sbb
mov
pop
mov
adc
xchg
sbb
push
loope
shrl
mov
out
add
outsl
xor
imulb
vmread
int3
insb
inc
cmc
mov
pushf
push
fistpl
jne
enter
stos
xchg
pop
stos
addr16
cmp
rorb
movsb
and
call
leave
push
inc
dec
loop
out
mov
arpl
ja
mov
push
inc
dec
stos
add
into
mov
dec
outsb
inc
fimuls
flds
push
mov
cmpsl
push
mov
mov
xchg
cmc
dec
hlt
mov
enter
sub
push
cmp
mov
adc
and
mov
mov
and
aad
pop
cmp
mov
dec
movsb
cs
pop
iret
icebp
jns
movsb
loopne
testb
call
movsb
dec
fildll
dec
push
pop
fs
and
mov
ret
pop
pushf
out
ret
lock
mov
add
mov
sbb
in
ja
jmp
repnz
jno
test
lcall
inc
lods
es
cltd
gs
jae
aam
xchg
sbb
popa
dec
xor
gs
push
xchg
pop
in
mov
cmp
inc
mov
dec
pop
cmc
cwtl
mov
in
mov
mov
aam
inc
push
popa
arpl
push
and
stos
leave
cwtl
mov
push
cmpsb
mov
imul
fstpt
pop
mov
mov
xchg
pop
lock
aad
sub
rolb
inc
cmpsl
lods
dec
xor
mov
iret
push
jne
sbb
cmc
std
pop
out
das
into
test
adc
cmpsb
inc
inc
dec
xor
dec
xchg
or
mov
cmpsl
jns
lock
push
sub
dec
cs
or
jle
iret
mov
int
out
aam
push
cltd
rcrb
lock
xchg
ret
adc
sbb
or
pop
loope
jb
xchg
lahf
lahf
ljmp
jmp
inc
out
out
nop
cmp
lods
push
int3
mov
ds
add
mov
push
lret
cmpsb
push
xor
xchg
push
mov
aas
loope
jbe
jae
and
adc
fistps
adc
dec
int3
cwtl
adc
pop
lret
addr16
mov
fstpl
dec
fcomi
adcb
xchg
shll
or
decl
inc
jl
xorb
dec
mov
in
adc
jae
mov
sbb
xor
cmp
cmp
and
icebp
push
out
dec
ljmp
movsl
push
rcrl
add
jg
clc
movsl
push
rorl
in
or
fldln2
std
mov
push
clc
data16
jbe
lret
push
jg
scas
jo
sbb
inc
test
dec
rol
pop
add
popa
mov
adc
nop
mov
daa
sbb
mov
mov
fcomp
scas
popa
mov
jge
cli
arpl
sarl
push
sti
loop
xchg
push
int
repz
rclb
jnp
and
sbb
sub
es
push
dec
or
sarl
dec
and
mov
ljmp
xor
push
jge
icebp
scas
int
xchg
fcompl
lock
or
jecxz
jecxz
imul
in
loopne,pn
movsl
ss
inc
cmpb
ficomps
jne
in
fidivs
fldl
jl
bound
adc
fbld
in
je
mov
out
test
and
insb
lret
push
pushf
mov
mov
jb
sub
insl
xchg
mov
cmp
addl
iret
inc
xor
call
sbb
mov
xchg
out
mov
loop
dec
dec
or
aam
loopne
xchg
push
ljmp
pushl
mov
or
or
cmp
lock
pop
mov
xlat
out
or
in
ljmp
daa
pop
sarb
mov
inc
xchg
into
idiv
sbb
and
popa
pop
inc
push
test
imul
lret
outsl
iret
push
cwtl
test
shr
scas
fbstp
cmpsl
iret
cmc
mov
call
mov
lret
daa
xor
movsb
cld
stc
ffree
fnop
fs
sbbl
mov
mov
ljmp
sti
divl
fsubrl
stos
inc
roll
sub
fiaddl
and
mov
gs
test
test
or
repnz
dec
pop
mov
clc
push
sbb
push
dec
cmpsb
pop
xor
xchg
ds
imul
inc
pop
enter
pop
jle
cmpsb
sub
xchg
xor
lock
and
sbb
pushf
fists
adc
push
or
inc
cmpsl
aas
pop
sahf
ljmp
faddl
ss
inc
add
int
xor
scas
push
push
bound
push
clc
cmpsb
jno
jge
mov
ret
insl
jno
mov
inc
test
and
mov
inc
loope
out
clc
fsubrs
push
inc
adc
dec
repnz
cmp
mov
std
adcl
into
dec
xchg
mov
js
jg
push
idivl
mov
mov
xor
dec
and
in
in
mov
out
int
mov
cmpsl
sub
stc
fadd
jecxz
shr
inc
sahf
mov
cmp
fwait
fwait
push
and
jnp
jle
mov
pop
xchg
call
inc
mov
and
mov
cld
sbb
adc
pop
push
sub
loop
xchg
arpl
jg
mov
test
mov
lock
dec
mov
dec
mov
jne
flds
sub
les
shlb
loope
mov
xor
push
out
adc
imul
mov
call
cmp
inc
jmp
sbbl
lcall
xor
sbb
aam
loope
jp
jae
sub
jnp
test
pop
in
and
mov
out
ret
push
inc
cmp
ret
pushf
mov
push
les
lds
psubsb
cmpsb
inc
dec
dec
or
into
out
and
insl
in
jg
jp
sbb
cltd
lret
add
in
nop
not
ret
repz
gs
xor
pop
sbb
icebp
out
and
xor
lahf
in
xchg
faddl
rcl
dec
push
mov
mov
fwait
stc
push
rorl
out
and
cs
scas
sahf
pop
inc
mov
lahf
mov
fld
jnp
jge
jmp
push
mov
lock
imul
sbb
cmp
movsb
jb
in
mov
add
pop
cltd
push
add
xchg
iret
xor
ss
ret
dec
xor
jge
dec
scas
test
clc
js
clc
or
push
push
lret
lahf
sbb
pop
lret
pop
xor
sahf
dec
call
sub
xor
xor
lods
push
inc
std
outsb
repnz
out
cmpl
gs
popl
adc
cmp
push
sarb
in
out
pop
adc
test
cmpb
push
cmp
cmp
lods
fbstp
lcall
pop
mov
mov
repz
je
dec
scas
mov
in
and
inc
test
scas
or
les
cmp
divb
aas
test
pop
lods
or
aaa
mov
or
lock
and
rorb
aas
mov
mov
adc
jae
inc
fcoms
or
sub
jne
imul
in
fcomps
test
fldcw
fs
jb
pusha
mov
or
adc
inc
dec
hlt
mov
mov
pop
aad
xchg
and
mov
sub
out
jae
scas
pop
xor
mov
inc
lea
lret
cmp
test
dec
push
and
aad
add
jne
add
cli
loop
push
clc
mov
xor
imul
cmpsl
orl
and
cmc
xchg
jae
jno
fistpl
xchg
jbe
jnp
xor
mov
mov
lea
fs
xor
fimull
cld
xchg
std
xchg
arpl
out
sbb
mov
neg
sahf
dec
mov
in
mov
mov
mov
mov
dec
and
dec
loop
gs
test
and
fcomps
or
pop
sbb
repnz
sub
js
test
es
pop
repz
cmpsl
mov
out
incb
adc
jbe
mov
xchg
fldenv
sahf
fsubrs
xor
and
cmpsl
and
cmp
adc
or
or
cltd
lcall
cmpsl
mov
nop
jg
jae
mov
sub
cwtl
xor
pop
dec
cmp
aaa
cmc
les
inc
aad
mov
and
fcomps
std
shlb
js
jns
lret
je
andl
mov
sub
ds
imul
xchg
lcall
cltd
xchg
imul
push
and
cmp
adc
dec
adc
mov
xor
int3
fwait
add
ljmp
rolb
mov
add
push
repnz
xor
lods
clc
sbb
out
xor
cld
aaa
test
mov
mov
repz
aad
sahf
call
ficomps
nop
mov
xchg
pop
add
jmp
sbb
outsl
pop
lahf
dec
cmp
insb
xor
cmp
jp
cmp
mov
mov
lcall
int3
je
jl
movsl
sub
aam
pop
xor
fidivs
imul
sub
out
adc
and
stc
inc
sub
jg
repnz
or
cmp
pop
imul
inc
aas
cmpsl
stos
lahf
cmp
js
mov
out
in
clc
or
mov
jmp
subb
mov
pop
aad
outsl
dec
inc
jmp
push
adc
mov
pop
adc
push
outsb
push
sub
jl
popf
add
push
add
divb
or
inc
push
stc
cmp
mov
enter
add
add
xchg
shlb
daa
vpmacsswd
push
xchg
jmp
xchg
lea
imul
dec
rep
inc
xchg
arpl
xor
xchg
inc
pop
jg
aad
dec
cwtl
or
pushf
mov
adc
dec
xor
and
insb
dec
out
xor
jbe
xor
xor
lret
mov
mov
push
pop
sub
fmuls
shl
sbbl
out
lahf
clc
mov
mov
adc
lock
rcrb
mov
aad
inc
lock
push
arpl
out
mov
adc
adc
mov
shll
out
std
and
jae
ljmp
insl
jmp
adc
sbb
loopne
mov
add
cmp
mov
and
aaa
inc
test
push
sub
into
inc
mov
aad
mov
fisubrs
cmpsb
fcmovnu
shrl
jecxz
scas
sub
je
repnz
mov
aam
in
mov
inc
mov
lock
movsb
ss
cwtl
xor
nop
xor
inc
data16
fldenv
mov
cmp
dec
push
fs
sbb
out
in
lahf
jnp
and
mov
cmp
xlat
js
xor
rcrl
adc
or
lahf
add
cmpb
test
enter
mov
adc
push
stos
push
xorl
in
push
xchg
xchg
sbb
sub
xchg
lret
arpl
jecxz
cmp
out
add
or
in
adc
iret
inc
push
decb
xchg
mov
inc
and
pop
outsl
and
shl
cli
aaa
repnz
sub
inc
dec
test
jae
ret
add
or
outsl
pushf
mov
mov
test
xchg
push
popa
jae
pop
test
pop
adc
leave
or
pop
xor
xchg
inc
or
inc
popf
dec
dec
shrl
sbbb
jmp
sti
stos
pop
push
push
push
out
cmp
sbb
sub
movsl
xchg
mov
dec
push
push
add
add
xor
push
sahf
cmp
xor
xchg
lahf
xor
or
popf
clc
cltd
fidivrs
das
inc
push
dec
repz
add
and
mov
mov
or
push
pop
cmp
out
cwtl
and
pop
xor
dec
cmp
add
movsl
out
jae
jae
xor
mov
adc
ds
jns
ljmp
iret
fsubrl
push
jecxz
loopne,pt
sub
pusha
sbb
jo
dec
adc
fsubrl
ljmp
lret
dec
in
cmp
cmp
out
ja
call
fninit
lods
pop
adc
dec
lods
iret
sbb
and
cmpsb
stos
jecxz
into
mov
sarl
or
xor
faddl
js
xchg
lods
mov
inc
cmp
stos
sbb
or
mov
pop
push
adc
xchg
and
sub
std
adc
pop
cmc
cmp
jne
lret
test
mov
loop
jg
sub
outsl
mov
mov
push
inc
xchg
push
leave
aas
add
push
adc
jl
add
and
jmp
js
shlb
outsb
sbb
mov
mov
dec
lods
imul
add
mov
sti
pop
or
xor
cld
iret
jnp
adc
int3
ljmp
daa
std
cmp
add
mov
ljmp
adc
fcompl
push
xor
jp
rcr
dec
cmpb
popf
dec
ljmp
push
sub
pop
push
sbb
jb
ja
jne
iret
push
out
test
jb
mov
mov
jnp
pop
dec
and
mov
mov
dec
daa
lods
imul
push
aas
pop
popf
push
fdivl
inc
pushf
rcr
push
pop
fisttpll
push
jae
test
in
adc
or
push
mov
push
add
scas
xchg
fcompl
imul
cmp
and
sub
xlat
ret
fwait
xor
sbb
sbb
lea
and
inc
mov
neg
repz
sbb
inc
aad
push
mov
push
mov
inc
test
mov
pop
icebp
xchg
push
push
out
dec
mov
cmp
sbb
lds
lcall
jle
jmp
mov
xchg
mov
add
enter
pop
dec
and
pop
je
pop
pop
pop
cwtl
or
push
mov
pop
xchg
fcoml
pop
outsl
popf
sarl
mov
push
or
dec
pop
push
test
popa
stos
imul
mov
or
rcrb
cmp
push
jecxz
test
addr16
dec
je
dec
cmp
lods
rcrl
push
ljmp
push
cmp
adc
push
in
lcall
jg
cmpsb
adc
jo
lock
push
mov
inc
push
sbb
imul
repnz
imul
cmpsl
push
rorb
in
cld
mov
sahf
xchg
adc
stos
test
fdivrs
jge
punpckldq
mov
xchg
mov
test
pusha
leave
fimuls
test
lcall
xor
lret
sbb
sbb
lahf
mov
fstpl
xchg
sub
jmp
mov
fimuls
push
adc
fldl
mov
push
shrl
cltd
or
push
mov
xchg
mov
test
in
shll
mov
fsubr
fidivl
int3
xchg
jno
push
in
not
iret
out
mov
or
or
in
mov
out
xor
dec
and
sub
push
jecxz
iret
lods
scas
or
xchg
lret
sbb
stos
call
lret
mov
pop
loopne
or
xchg
int
gs
adc
int
push
popa
out
ret
xchg
jbe
scas
xchg
jmp
push
mulb
insb
mov
pushf
leave
div
ljmp
xchg
lods
jmp
dec
testl
pop
fwait
dec
sub
push
les
inc
jbe
gs
call
xchg
int
jp
inc
out
lret
sahf
dec
ljmp
test
dec
lahf
push
inc
mov
enter
outsb
clc
pop
hlt
push
jno
mov
je
and
stc
pop
sti
sub
les
pop
sbb
pushf
rolb
xchg
adc
xchg
push
pusha
mov
sub
mov
and
lock
cmc
imul
in
and
pop
push
fs
sub
les
scas
inc
jmp
mov
pop
mov
cwtl
mov
lea
movsb
ret
cld
xor
test
dec
js
addr16
sbb
dec
adcl
lahf
fsts
jae
jl
clc
shlb
push
aas
jl
inc
adc
dec
fisubl
xchg
xchg
sbb
jns
mov
push
fsts
fsubrs
je
jne
sub
cs
mov
loop
mov
inc
ja
test
inc
mov
stc
jbe
fistpl
stos
es
mov
and
dec
clc
fwait
mov
add
mov
sbb
jnp
inc
daa
add
jno
dec
jp
mov
mov
int
sub
pop
cmpb
ja
movsb
hlt
daa
mov
mov
inc
and
pop
xchg
sbb
loopne
xor
nop
sbb
mov
lahf
lret
or
je
jb
pop
lret
and
add
in
lahf
cld
and
adc
imul
jo
jge
stos
jmp
jo
into
iret
cmpsl
xor
out
cmp
adc
lock
fsubs
pop
pop
sub
push
mov
fstpt
dec
xchg
ja
stos
mov
push
xchg
rorl
das
pop
adc
lods
lret
pop
fcmovne
pop
pop
push
dec
decb
push
iret
out
xchg
pop
subl
jl
push
sub
push
stos
mov
pushf
cmpb
sbb
dec
mov
test
mov
mov
push
addr16
cmpsb
int3
ret
in
pop
push
xor
test
es
pop
andl
add
sub
sub
mov
lea
leave
cmp
mov
inc
sbb
fidivrl
aam
xor
scas
jo
cmpsl
inc
fwait
pop
insl
movsl
rcll
pop
rcrb
cmc
push
pop
loopne
or
jae
lcall
sub
lret
or
inc
lahf
xchg
sbb
cmp
push
sbb
cmp
fidivrs
sub
pushf
pop
jle
out
lods
imul
out
stc
dec
jne
xor
add
pushf
adc
dec
loopne
xchg
sti
imul
jecxz
and
cld
sub
mov
dec
aas
push
add
adc
mov
hlt
jl
into
adc
dec
into
js
xchg
push
in
jecxz
in
pop
jle
mov
jg
fadd
add
hlt
add
mov
data16
xor
lahf
and
sbb
test
mov
lock
in
xor
xchg
lods
scas
xlat
fwait
ret
xchg
fimull
outsl
fst
in
dec
mov
loopne
mov
push
pop
dec
push
es
mov
push
es
jmp
clc
test
test
push
dec
xor
push
add
outsl
jp
nop
pop
test
or
lcall
dec
aam
test
xor
xor
push
mov
cmp
nop
adc
xlat
sub
pop
scas
out
loope
das
cltd
dec
xor
jg
mov
jns
mov
add
das
jge
pop
fs
mov
jne
adc
sarb
push
pusha
add
inc
jb
test
jecxz
aam
pop
fs
mov
fisubl
xchg
mov
jne
cmp
in
and
xor
pop
pusha
inc
cmp
or
stc
repz
pop
or
sarl
nop
shr
dec
xor
je
arpl
ja
rorl
fldenv
sbb
test
mov
in
add
mov
out
jo
ljmp
sar
add
mov
and
mov
inc
adc
pop
test
cmpsl
imul
outsb
lea
outsl
add
enter
xchg
mov
or
dec
adc
lds
loope
inc
jnp
push
ds
test
lret
les
ret
out
cltd
bound
in
xchg
inc
test
and
inc
mov
andb
lcall
or
adc
dec
leave
and
mov
aaa
popf
sbb
dec
dec
mov
clc
jmp
pop
mov
push
stos
jmp
push
aam
push
sbb
xor
push
mov
loop
lea
cwtl
xor
jbe
adc
fmuls
ds
xor
pop
mov
aam
je
imul
iret
imul
aad
dec
adc
adc
pop
adc
jmp
xchg
push
xchg
bound
das
xchg
orb
ja
iret
sub
xchg
fisubrl
icebp
jmp
add
lcall
sar
push
sub
sti
jle
das
std
ds
and
mov
shrl
outsb
lea
jp
adc
icebp
ficompl
loope
jmp
faddp
int
cmp
repnz
pushf
out
inc
xchg
dec
mov
sub
shlb
std
mov
push
jne
out
pop
pop
loop
into
and
and
adc
decb
bound
pop
mov
nop
sub
mov
ret
mov
mov
leave
rol
cmpsb
jnp
jge
int
push
or
jl
cmp
orl
imul
mov
clc
cs
adc
add
fwait
push
xchg
inc
loope
in
adc
adc
or
jmp
iret
fists
jb
imul
dec
je
fdivr
xlat
mov
push
cmp
mov
dec
cmp
js
mov
std
mov
push
push
test
pop
addr16
xor
cmp
jb
cvtdq2ps
sub
xor
int
push
add
xchg
cli
lcall
xor
pop
test
cld
xor
add
xchg
mov
not
mov
push
cs
dec
or
mov
xchg
outsb
movl
stos
clc
fstpl
negl
and
cwtl
loope
push
outsb
lret
xchg
movsl
out
loope
pop
dec
jns
in
loopne
or
inc
sub
cld
aas
mov
int
cmp
loope
cmpsb
stos
stos
cltd
adc
loopne
pop
inc
sbb
pop
cmpsl
mov
jno
orb
xchg
lds
jl
in
jmp
mov
cwtl
inc
push
jle
mov
xchg
fstl
outsb
lret
mov
nop
xchg
xlat
lock
mov
in
dec
call
cmpsb
mov
and
fisubs
stos
popf
bound
daa
imul
addr16
jl
out
fsub
test
xchg
enter
divb
and
mov
test
hlt
push
es
xchg
cmp
mov
sub
popf
or
and
cmp
xchg
mov
nop
mov
adc
jo
inc
rcl
std
cli
lcall
or
in
lea
jns
lods
xchg
adc
fdiv
nop
xor
pop
or
push
fstps
xor
adc
clc
jo
in
xchg
mov
and
call
imul
sub
mov
pop
and
push
mov
lods
fs
in
in
sti
sub
movsb
mov
xor
sbb
js
in
jle
addr16
aad
imul
pop
sbb
fcmovb
aaa
movsb
imul
pop
stos
pop
and
push
mov
jg
lcall
mov
repz
mov
gs
mov
enter
jmp
mov
sbb
push
int3
adc
mov
jle
loopne
jecxz
xor
push
ljmp
fstpt
test
mov
xchg
add
cmp
mov
cwtl
loope
mov
mov
and
cmpsb
or
lahf
andl
mov
aad
outsl
stos
adc
popa
stos
jae
je
pop
mov
or
lcall
ffreep
push
mov
arpl
jns
pushw
push
fwait
stos
push
jmp
adc
sub
push
ljmp
lds
ds
popa
popl
xor
push
imul
cmp
jge
or
mov
dec
add
mov
ja
jo
sub
inc
out
ljmp
inc
repz
lock
int
scas
dec
loope
adc
sbb
and
mov
xor
pop
mov
push
cmp
sarb
add
dec
cmp
aaa
leave
xor
push
imul
mov
scas
les
rorl
pop
out
loop
mov
or
imul
adc
sahf
xchg
mov
fldcw
fs
jns
pop
stos
pop
pop
inc
jb
mov
out
scas
mov
cld
pop
stos
mov
aaa
pushf
xchg
mov
jmp
adcl
neg
xlat
lds
mov
push
aas
vpavgw
loope
xchg
testl
sarl
ficomps
pop
loope
xlat
adc
mov
cltd
pop
lea
mov
jge
push
test
sub
movsl
movsb
cmp
movsl
das
sub
aaa
mov
add
and
pop
mov
push
nop
cmp
out
inc
mov
adc
inc
fs
sbb
pop
mov
rclb
fwait
or
mov
iret
push
sub
pop
inc
lods
fs
mov
xor
jbe
icebp
adc
inc
stc
mov
rol
pcmpgtd
push
jne
js
push
add
icebp
pop
xchg
xor
xchg
imul
rolb
loop
ret
lret
lods
xchg
and
xor
dec
lods
movsl
clc
xor
scas
mov
fistpll
shll
adc
js
insl
int3
popa
aam
sti
fistpl
pop
and
pop
inc
subb
pusha
adc
mov
xchg
xchg
fisubs
test
or
leave
push
push
out
sbb
lcall
xchg
ret
sub
orl
sub
js
lret
or
sarl
pop
pop
push
adc
xor
pop
test
cmpsl
ret
testb
cvtdq2ps
cmp
mov
lret
push
mov
jno
les
popf
jb
fs
inc
add
inc
es
filds
push
cmp
xor
stos
test
sahf
cld
jmp
add
push
xchg
inc
adc
xlat
and
xor
pop
mov
dec
inc
add
scas
cmp
out
jbe
add
in
adcl
sub
push
insl
push
or
pop
xor
lret
and
dec
insl
out
xchg
cwtl
sahf
xor
inc
test
daa
xor
lret
mov
vmwrite
dec
add
adc
add
fmuls
and
call
repz
test
jle
mov
icebp
add
sub
mov
lret
adc
in
fistpl
and
ja
insb
fucom
push
stc
mov
or
rolb
dec
sub
sbb
lret
ss
int3
test
inc
pop
xor
mov
scas
movsb
test
ja
pushf
jne
ret
inc
add
add
mov
dec
sub
xchg
out
add
lea
push
outsl
jns
flds
cmp
fcomp
cwtl
dec
gs
mov
and
rcll
test
mov
std
lcall
pop
xor
xor
testb
in
ds
js
gs
pusha
in
fwait
jmp
push
out
test
push
xchg
sub
inc
pusha
jne
xchg
iret
lret
aad
sarb
ret
cmp
aad
fwait
mov
inc
fstpt
cmc
rcrb
mov
push
xchg
xchg
pushf
push
inc
popa
push
or
xchg
pop
bound
jae
add
cmp
addr16
pop
cwtl
das
xchg
mov
pop
mov
push
movb
in
adc
mov
jno
mov
push
lds
iret
loopne
jmp
jns
xor
push
jp
jnp
jo
ljmp
cmpsl
lods
fsts
cmp
ds
mov
xchg
mov
and
push
xchg
sar
or
dec
xlat
dec
mov
sbb
insb
sahf
imul
sbb
daa
pusha
add
out
mov
fst
ficompl
xor
imul
xchg
adc
xor
dec
jbe
sub
jb
bound
lret
mov
inc
mov
mov
repnz
sahf
ljmp
xor
dec
in
aas
dec
mov
imul
cmp
adc
or
out
sbb
roll
aas
push
mov
xchg
and
and
and
xor
inc
dec
and
or
dec
mov
outsb
rclb
and
cmp
or
loopne
cmp
into
aad
lods
aam
and
sbb
iret
cmpl
inc
dec
jno
cld
jae
insl
lods
test
sbb
push
js
push
jl
sbb
jo
data16
aaa
push
xchg
sbb
sub
xchg
cmc
enter
test
dec
mov
or
insb
testl
ds
sahf
int3
xor
and
push
icebp
add
imul
rcrb
adc
inc
or
adc
push
jg
jmp
popf
dec
sbb
cmp
add
adc
stos
mov
cmp
addr16
orl
xor
iret
jg
add
insb
pushf
xchg
pop
sbb
add
mov
aam
dec
jle
pushl
push
mov
inc
push
lods
adc
lcall
jno
or
repz
mov
sbb
inc
sbb
mov
cmp
add
sbb
aaa
mov
addb
shlb
and
sbb
dec
pushf
mov
xchg
pop
pop
mov
or
inc
mov
mov
test
mov
loope
sub
mov
mov
mov
pop
push
mov
mov
movsb
push
bound
ret
sbb
lret
dec
mov
leave
xlat
lock
out
out
imul
enter
pop
jge
and
testb
nop
cwtl
stos
jl
push
adcl
lds
xor
in
cld
cmpsb
jge
lret
jb
in
mov
je
repnz
mov
mov
loop
dec
sti
xor
and
and
sbbl
push
loop
xchg
mov
mov
out
cli
mov
mov
in
jnp
and
movntq
out
in
imul
push
inc
and
icebp
pushf
loopne
cltd
lret
xchg
add
aas
push
cmpsl
mov
pop
dec
dec
lds
sbb
sahf
jne
pop
mov
stos
dec
mov
mov
cltd
outsl
inc
popa
sub
fidivrs
stc
clc
pop
cmpsl
lahf
pop
mov
test
popa
mov
ss
jecxz
inc
adc
aas
adc
rcrl
mov
loop
xchg
jo
outsl
mov
inc
repz
ss
xor
xor
jmp
jle
pop
bound
xchg
cltd
stc
je
lret
mov
icebp
cmc
mov
sbb
inc
jbe
mov
int3
call
sbb
mov
bound
iret
sbb
insb
mov
cmpsb
cmpsl
mov
xor
and
ljmp
nop
movsb
int
jo
ficoml
xchg
jmp
lods
push
shl
xor
adc
xor
test
lahf
mov
adc
ror
pop
push
xor
cmp
out
add
fwait
mov
xor
xchg
xchg
es
fs
xchg
cmp
mov
outsb
adc
mov
xor
movsl
or
pop
xchg
inc
or
dec
hlt
mov
cltd
cli
mov
pop
sbb
xchg
jno
sbb
popf
fucomip
or
cld
add
sbb
movsl
cs
cmpl
jmp
fpatan
pop
std
pop
imul
lret
arpl
popa
cmp
ficoms
cmp
in
lahf
test
xchg
imul
inc
imul
jae
or
out
andb
in
fcmovnu
mov
das
and
jecxz
repz
pop
mov
jns
push
sbb
push
mov
mov
ret
jne
imul
or
push
jmp
sub
add
lahf
in
jl
cmp
jo
insb
mull
bnd
dec
scas
push
aas
sub
in
mov
jbe
sbb
mov
sub
scas
ljmp
ret
xchg
pop
adc
sub
dec
cwtl
cmc
add
data16
mov
cmpsb
xchg
inc
int
pushf
lret
push
sbb
int
popl
push
sbb
je
idivb
and
cltd
sarl
push
cmp
shll
data16
mov
lcall
out
daa
sbb
adc
hlt
outsb
and
and
in
push
scas
jbe
push
and
xchg
shlb
or
adc
mov
mov
les
mov
popa
ss
add
mov
addr16
and
cwtl
nop
jo
xchg
cmp
mov
dec
scas
mov
ldmxcsr
nop
dec
inc
dec
rorb
loope
outsb
push
mov
fadds
adc
and
jnp
push
rorl
fmulp
or
repnz
xchg
mov
cmp
pop
inc
dec
test
rclb
xchg
test
leave
inc
outsb
mov
mov
add
call
std
xchg
addl
add
lret
cmp
out
scas
out
ret
call
pop
nop
mov
xchg
or
das
dec
test
pop
cmp
cltd
dec
call
js
mov
mov
sbb
adc
ss
jmp
push
mov
sbb
scas
cs
movsl
cmc
rol
jne
pop
sub
ds
popa
add
sub
or
scas
mov
test
sub
and
daa
enter
shr
les
mov
es
and
aam
aaa
or
or
fcoml
int
lods
ret
in
leave
sbb
movl
sarb
mov
jg
or
sti
out
arpl
mov
xchg
cmp
jae
pusha
mov
sub
add
sub
push
cltd
pop
popf
push
cld
sub
add
outsl
and
rclb
sub
ds
adc
sub
nop
jl
xchg
or
mov
xor
xchg
lds
mov
fadds
xchg
ja
ret
mov
xchg
mov
sub
xchg
mov
rolw
adc
cmp
lods
sbb
repz
mov
outsl
rclb
lds
add
push
inc
outsb
mov
jecxz
dec
loopne
adc
sub
jmp
data16
add
clc
inc
sub
sbb
add
xchg
aas
cmp
lods
sub
pop
movsl
les
sbb
jns
into
xor
cmp
mov
push
and
divl
fcoml
sbb
xchg
ljmp
test
or
in
jmp
push
lret
or
inc
jns
mov
pop
ljmp
call
sahf
adc
mov
popf
xchg
sub
jl
mov
or
jno
sub
mov
insb
push
add
mov
push
adc
mov
push
repz
les
adc
cmpsl
push
scas
ljmp
add
out
test
xor
mov
xchg
adc
mov
in
and
push
push
pop
xchg
xor
jmp
aad
or
jno
xor
mov
inc
lock
xchg
adc
mov
dec
cmpsl
jnp
inc
or
mov
inc
lock
cwtl
lods
outsb
ljmp
lret
fwait
sbb
sub
inc
shlb
mov
scas
jecxz
mov
leave
inc
xor
lods
push
mov
je
xchg
fimull
loope
mov
out
into
and
outsl
mov
adc
or
mov
sbb
andb
int3
lret
sbb
jne
pop
push
rcll
out
sub
dec
push
xchg
je
shll
fidivl
mov
call
shlb
pop
add
lods
je
stos
fcmovb
fmul
movsl
cmp
push
adc
incl
push
push
mov
adc
jmp
cmpsl
push
mov
jns
jecxz
jnp
cmp
mov
jb
jno
sbb
or
jnp
jl
or
fadds
jmp
inc
sub
aaa
shll
jp
dec
insb
ja
in
setno
inc
scas
sbb
out
fisttpll
sahf
xor
or
xor
push
loopne
pop
push
mov
sbb
movb
mov
testl
cmpsb
jne
push
xor
leave
adc
mov
sahf
xor
lock
cmpsb
xchg
jbe
enter
inc
insb
mov
int
mov
stos
lock
push
fmul
push
stos
and
fidivs
add
adc
pop
jg
in
mov
lret
inc
xchg
xchg
or
add
push
inc
sbb
jo
testb
sbb
or
call
xor
orb
cmp
nop
push
bound
cmpsl
mov
pop
xchg
imul
shlb
fisubrl
dec
in
pop
mov
sub
mov
cmp
inc
outsl
hlt
mov
loopne
jge
pop
mov
pop
mov
js
jp
lods
xchg
movsb
in
pop
lds
jae
pop
popf
dec
sub
rcr
test
push
push
fs
xchg
xchg
xchg
rcll
pop
ljmp
and
mov
pop
jo
scas
movsb
adcl
or
fs
lods
and
mov
mov
test
mov
sahf
xchg
in
cmp
popf
rcll
jno
mov
mov
xchg
xor
pop
in
hlt
outsl
aad
cmp
psubw
arpl
pushf
aad
xchg
or
mov
fadds
scas
loopne
or
mov
iret
pop
adc
sti
aam
loopne
pop
xor
fcomps
inc
ficomps
jno
cmp
lcall
movsb
mov
mov
and
idivb
rcr
js
jecxz
and
sarb
sub
mov
outsb
push
pushf
jg
icebp
jmp
jae
lods
dec
push
not
jle
mov
mov
sub
add
jg
aas
in
push
mov
pop
xor
jb
lods
iret
test
dec
js
lret
cmpsl
lock
les
in
inc
cmp
cltd
fbstp
mov
pop
push
test
or
inc
pop
repnz
mov
mov
scas
jge
gs
mov
test
and
stos
inc
push
cmc
cmp
dec
insl
std
stos
sbb
test
test
lcall
xor
fwait
adc
xchg
fistpl
lods
xor
xchg
mov
add
sahf
push
icebp
xchg
popa
out
lret
addr16
repnz
das
je
adc
inc
ds
mov
dec
into
mov
cmp
xchg
es
test
lahf
std
es
adc
adc
inc
cmpsb
cs
setb
stos
pop
sub
mov
adc
dec
loopne
rcrl
xchg
mov
cmp
outsb
fs
push
xchg
or
stos
xor
jbe
xchg
inc
scas
bound
push
or
std
ret
sbb
push
push
xor
mov
xchg
jmp
jno
notb
jns
sahf
sub
mov
jne
in
sbb
xchg
shll
ret
and
dec
adc
lock
fsts
mov
jns
loopne
stos
addb
das
and
add
rcl
fldenv
mov
fmuls
push
cmp
jns
sbb
int
aad
inc
fwait
add
push
enter
aam
push
insl
dec
lret
pop
pop
in
fstpt
xchg
cmp
xor
cltd
in
dec
repnz
mov
aas
inc
mov
test
or
mov
loop
inc
stos
scas
xor
or
pop
jle
out
repnz
push
mov
sub
and
add
cmp
xchg
pushf
shrl
push
xorb
xor
loop
mov
pop
test
sbb
cmp
ja
idiv
mov
xlat
inc
clc
dec
inc
push
je
fs
mov
scas
cld
shrl
aam
cmpsb
push
mov
aad
push
imul
xchg
rolb
test
fstpt
adc
shrl
jmp
fistpll
inc
clc
push
std
ljmp
push
push
mov
jl
aam
jno
stc
pushf
or
call
xchg
jmp
xchg
test
enter
in
imul
mov
push
sub
rcll
jae
aam
dec
dec
pushf
stos
pop
sub
adc
aas
or
cmp
data16
push
dec
jo
jg
pop
and
out
scas
lcall
aaa
cmp
dec
mov
popf
xchg
fdivrs
mov
ja
cmp
leave
jb
lds
imul
daa
in
scas
inc
sub
popf
xor
dec
in
lret
repnz
sub
leave
mov
jp
jp
ja
add
into
and
jle
pop
in
push
les
push
mov
jecxz
cmp
sbb
jb
and
push
jns
inc
mov
dec
mov
filds
test
cwtl
sub
mov
shrb
fsubrs
ret
pop
dec
mov
xorb
fdiv
and
cs
jns
and
in
negl
pushf
adc
lret
mov
push
loopne
mov
fcmovnbe
cmp
nop
jns
sub
out
mov
mov
test
and
out
pop
shl
rcrl
leave
mov
mov
ljmp
xchg
jg
xlat
mov
push
push
mov
pushf
leave
test
or
insb
cltd
sub
lcall
jge
test
into
addr16
adc
int
js
xchg
sub
fst
push
into
loope
or
and
push
xor
xchg
in
fsts
xor
lret
inc
mov
mov
lock
popa
pop
mov
xchg
popa
pop
sub
out
mov
xlat
fnstcw
xchg
lahf
or
in
push
push
ljmp
pop
or
jnp
adc
mov
pusha
xchg
push
insl
jbe
pop
sub
and
mov
lret
popf
mov
sub
stos
out
mov
mov
inc
fmul
ret
sub
cwtl
hlt
nop
cmpsl
inc
aam
jg
jb
adc
pop
add
pop
cli
movsb
push
cli
pop
fistps
and
test
or
sub
xor
inc
jnp
jmp
je
cli
mov
loop
jmp
cmp
jo
incl
dec
mov
mov
dec
dec
or
jbe
sub
jl
xchg
nop
cmpl
fbld
addl
push
xchg
jmp
jp
or
and
in
gs
jp
mov
stos
xchg
cwtl
pusha
pop
mov
mov
ljmp
mov
mov
in
inc
jmp
cmp
add
push
gs
hlt
pop
or
xchg
xor
adc
test
mov
cltd
pop
int3
out
je
roll
mov
adc
in
cmp
insb
mov
and
xor
rorb
jno
js
sbb
or
xchg
jle
dec
fcomps
mov
push
or
xchg
jl
icebp
jns
stc
aas
push
lods
cmp
ja
aad
addb
push
in
mov
lret
call
adc
rcr
and
sbb
push
or
push
int
xor
xchg
mov
fmuls
dec
les
add
fdivrs
scas
inc
lock
and
jne
mov
mov
jae
add
dec
popf
inc
iret
push
and
sbb
mulb
dec
adc
lcall
xor
and
inc
push
push
xchg
or
mov
cmc
packuswb
sbb
cmp
sbb
add
or
data16
ret
xor
stos
into
jl
pop
ss
pop
xor
inc
icebp
movsb
pop
dec
push
and
xor
adc
sbb
and
into
je
pop
aam
mov
fmul
mov
in
cmp
js
jo
sbb
divl
in
inc
cmpsl
pop
xchg
ljmp
insb
or
pop
jbe
cmpsb
movsl
pop
inc
dec
dec
push
outsb
jmp
cltd
aad
mov
popl
jbe
push
xor
dec
js
sub
inc
aad
shr
pop
xorb
stc
fistpll
lea
push
imul
dec
inc
sbbl
pop
shl
xchg
xchg
or
adc
les
xor
lea
pop
and
mov
adc
mov
enter
cmp
call
mov
add
pop
subb
pop
jo
sub
ret
xor
push
cmp
imul
fdivrs
sub
outsb
nop
fsubrs
repz
dec
dec
pop
sbb
mov
pop
cmp
rcrb
sub
loopne
arpl
cmp
out
jg
adc
and
jmp
sub
mov
roll
xchg
into
xchg
loop
mov
adcb
scas
mov
adc
mov
sub
or
movsb
push
xchg
add
movb
jno
stc
ret
sub
fwait
test
hlt
xor
mov
dec
js
ds
mov
inc
or
pop
or
push
mov
lods
fcmove
fstpt
jle
aas
mov
mov
or
int3
push
push
popf
pop
cmp
jno
loope
ja
lds
call
das
mov
test
cmpsl
or
mov
fists
das
scas
test
pop
adc
or
fimuls
xor
mov
out
inc
sub
test
loopne
aad
fistpl
pop
or
pop
pop
push
aaa
test
cmp
daa
or
xor
mov
xchg
loope
lret
nop
cltd
pusha
and
insl
mov
lods
pop
enter
and
inc
xchg
add
xchg
arpl
div
cmp
mov
dec
and
out
loopne
andl
push
fwait
leave
scas
xchg
push
mov
sbb
ret
jge
or
xorl
lahf
mov
in
jb
sahf
in
ds
cmp
pop
add
sbb
test
cmp
in
xor
xor
pop
xchg
jp
mov
dec
or
pusha
xor
inc
sarb
mov
aas
ja
stos
mov
cs
insb
pusha
sbb
xchg
lret
sbb
dec
cmp
loope
jae
shll
out
aad
mov
xchg
mov
loop
dec
movsb
mov
mov
xlat
pusha
stc
push
or
sbbl
cmp
cmpsl
clc
repz
ja
loop
jbe
xor
rcll
roll
dec
jnp
inc
mov
jne
test
xchg
shr
jae
dec
lahf
cmpsl
mov
inc
and
in
call
lea
jns
jb
lret
popf
mov
out
into
sahf
push
nop
mov
xchg
in
adc
imul
and
push
inc
ds
lds
fldcw
fcomp
fstl
cmp
out
mov
mov
lock
jecxz,pn
fcmovnb
push
push
xchg
and
stos
xchg
adc
jle
sbb
fs
filds
dec
jbe
mov
inc
andl
ljmp
jae
es
les
and
jge
call
pusha
push
mov
add
jo
jo
out
mov
xchg
into
dec
imul
mov
xor
outsb
pop
mov
mov
mov
imul
popa
cmp
inc
pop
xor
in
xchg
inc
dec
icebp
dec
test
pop
pop
sub
leave
mov
jnp
jnp
fisubrs
or
cmp
or
push
mov
pop
pop
jecxz
sub
bound
fadd
clc
dec
clc
scas
lret
add
out
push
mov
pop
sbb
shlb
lods
add
jmp
xchg
fadd
xor
xchg
pushf
lret
enter
lret
mov
stos
cmp
test
stc
cmc
mov
or
testb
dec
sti
inc
jb
aaa
xchg
cli
mov
adc
mov
xor
xchg
inc
mov
aad
fildl
call
faddl
add
push
xchg
into
call
pop
daa
inc
out
mov
pop
roll
inc
insb
shrl
cltd
pusha
int
mov
pop
stc
push
sub
mov
pop
xlat
xor
and
ret
cwtl
mov
xor
push
mov
frstor
test
xchg
jnp
mov
push
add
in
imul
mov
inc
enter
push
dec
mov
mov
push
ss
push
mov
xchg
pop
pop
jns
into
cmp
mov
dec
pop
je
jle
or
cld
movsl
test
in
push
lcall
out
and
dec
mov
lcall
jl
jbe
xor
das
xlat
adc
lock
jb
cmp
scas
js
icebp
into
imul
dec
bound
or
jp
mov
out
pop
xlat
cmc
jbe
dec
or
mov
scas
ljmp
scas
jae
fsts
gs
lcall
pop
int3
xchg
jns
pop
or
mov
es
or
inc
pop
out
stos
mov
lock
psllq
jne
cmp
cmp
push
fs
rorl
popf
jo
push
test
aas
xchg
test
push
dec
sub
test
mov
sbb
pop
les
movsl
mov
test
xchg
cli
inc
mov
adc
sub
lret
xchg
pop
aad
and
or
xchg
int
and
outsb
inc
xchg
scas
in
xchg
dec
arpl
fildll
or
clc
jb
cmp
add
pop
pop
in
pop
pop
fisubs
outsl
adc
ffree
sub
push
dec
test
int
lods
imul
das
pusha
pop
xlat
push
insl
call
pop
cltd
test
cmpsb
and
lods
fs
xchg
mov
mov
mov
jecxz
push
pusha
cmp
shll
cmp
inc
sbb
jge
mov
leave
ficompl
and
icebp
jno
mov
bound
push
dec
pusha
adc
nop
mov
adc
jb
cmp
adc
das
adc
sub
ds
sbbb
pop
jns
popf
lahf
int
icebp
mov
js
out
mov
push
adc
stos
pop
push
pop
fists
or
lcall
dec
xchg
loop
das
int
and
lock
inc
shl
sub
movsb
cmc
lahf
fsts
dec
pop
imulb
xchg
cli
iret
mov
lea
add
aam
xlat
jnp
in
add
in
pop
fisttpll
dec
sbb
push
stc
sub
push
xchg
rcrl
push
jae
scas
call
sbb
loope
xchg
xchg
divl
sub
sbb
dec
push
data16
or
sbb
mov
cmp
out
lods
cli
mov
xor
stos
in
mov
xor
xchg
mov
stos
add
jg
push
mov
push
xlat
mov
dec
pop
jle
stos
jnp
pminub
adc
nop
mov
mov
pop
bound
dec
lahf
add
push
pop
adc
mov
adc
cmpsl
lahf
and
in
push
fsubr
mov
sbb
ljmp
ss
aaa
leave
add
xchg
sub
mov
cmpsl
sbb
pop
sub
stc
popa
jmp
push
mov
dec
loop
lret
sub
loopne
mov
clc
jne
push
outsb
negb
sbb
addr16
mov
scas
lahf
push
pop
push
stos
cld
pop
loope
in
push
push
cmp
int
mov
xchg
ja
inc
popa
repnz
sti
fldenv
nop
cmp
mov
cmpl
pop
into
fadd
push
mov
add
jae
mov
jbe
mov
int
xchg
daa
lods
test
rcll
ficompl
xor
add
aad
subl
mov
push
not
jb
shr
mov
ljmp
xchg
fiadds
ret
mov
cmp
stos
nop
mov
js
out
sti
and
push
out
arpl
add
cmp
sbb
outsl
xlat
in
dec
mov
adc
inc
jnp
fs
loopne
mov
lods
mov
mov
lahf
jmp
cs
out
stc
push
mov
mov
sub
jo
push
sub
and
push
xchg
jne
xlat
xchg
mov
lods
cmp
pop
xchg
sub
and
mov
movsl
xchg
hlt
mov
data16
mov
or
test
inc
mov
lock
push
push
test
pop
fcomps
xor
dec
stos
test
inc
insl
gs
insb
js
mov
mov
scas
ret
fwait
aad
or
ret
pop
loopne
fdivrp
dec
mov
lock
push
inc
mov
pop
movsb
xchg
sbb
mov
mov
jno
mov
out
and
pop
lds
push
insb
sub
push
jb
mov
pop
sahf
ss
sbb
jbe
cmp
fisubrs
icebp
aaa
insb
roll
dec
push
jge
pop
ret
cmp
fstpl
stc
xchg
mov
mov
sbb
aam
push
pop
or
int
loope
test
sbbb
xchg
dec
xchg
xorb
sbb
sbb
sub
pusha
imul
add
add
or
pop
jmp
add
loopne
mov
xchg
sub
xchg
jmp
push
push
mov
scas
addl
jle
movsb
test
adc
adc
fstl
xchg
arpl
add
pop
or
push
mov
sbbl
adc
int
push
jmp
cs
into
inc
clc
mov
lods
adc
sahf
das
imul
sub
addr16
xchg
fdivs
icebp
daa
xchg
shl
and
sbb
imul
jp
add
insb
adc
test
lret
sub
cmpsb
scas
aam
sahf
fisubrl
sbb
sahf
push
pop
jp
imul
cmpsb
jle
popf
dec
ja
int3
hlt
cmc
movsw
jnp
push
push
insb
aad
pop
xchg
pop
push
jae
mov
cmp
fnsave
cs
stos
mov
push
jle
mulb
cld
andb
xchg
push
jge
jp
mov
ret
test
pushfw
and
mov
dec
pop
push
pop
mov
sub
or
dec
and
push
mov
int3
mov
sbb
add
cmpl
fisttpll
dec
cltd
mov
into
mov
inc
and
dec
add
sub
jo
outsl
das
pop
mov
pop
cmp
xor
push
jo
je
lock
and
push
fcompl
xlat
dec
jle
xor
and
mov
int
call
adc
stc
lea
adc
mov
mov
stos
cmp
mov
mov
stos
pop
sub
fcom
pushf
jmp
mov
nop
and
jle
jmp
cli
les
js
pop
jge
cmp
outsb
add
bound
insb
dec
sti
mov
xor
sub
out
shll
cltd
adc
add
mov
mov
or
inc
pop
or
in
pop
mov
sbb
mov
cmp
mov
mov
leave
mov
rcll
jbe
movsl
arpl
xor
stos
repz
and
je
adc
roll
mov
xchg
fsubs
orl
loopne
xor
lods
xlat
push
aam
aad
ret
dec
ds
imul
mov
fwait
loope
divb
into
xchg
or
jg
inc
shrb
adc
xchg
sub
mov
in
inc
adc
or
in
fwait
xor
push
outsl
mov
leave
or
sub
jecxz
xor
rolb
push
movsl
vmwrite
decb
jnp
sbb
and
scas
icebp
sbb
insb
xchg
in
dec
jo
test
fs
dec
sti
push
mov
and
scas
ret
daa
inc
mov
fistl
or
inc
mov
sbb
mov
xor
xchg
lds
pop
add
and
push
cmp
jmpw
mov
xor
shlb
xchg
and
push
int
insl
adc
lahf
mov
cmc
addr16
jle
xchg
and
adc
mov
jmp
sub
rclb
gs
pop
clc
adc
xchg
mov
mov
push
pop
nop
aaa
cmpsl
les
jns
out
adc
jge
out
cmp
or
sbbl
jo
int
ds
xor
rcr
sbb
xor
repz
pusha
lock
mov
xchg
scas
xlat
sbb
int
mov
push
aaa
imul
or
sbb
je
out
sbb
dec
std
mov
or
mov
mov
jp
rcll
lcall
es
mov
bound
adc
cld
add
jp
in
sbb
xor
xor
test
xchg
sub
pop
and
stc
hlt
in
les
mov
out
in
jg
dec
mov
in
mov
xchg
mov
fildl
in
xchg
scas
divb
je
xchg
loopne
sahf
sub
loope
mov
mov
cmp
cmpsb
mov
jbe
sub
pushf
mov
push
xor
out
repnz
rorb
nop
xchg
adc
add
lock
std
push
or
push
scas
and
dec
lret
mov
icebp
cmp
sub
lea
pop
sti
pusha
dec
movsb
ret
shl
mov
orb
or
fldl
loopne
push
ss
aam
mov
and
inc
mov
or
xor
inc
mov
lret
clc
adc
frstor
nop
sub
cmc
xor
or
fs
dec
lret
add
fwait
adc
daa
adc
xchg
pop
aas
test
fwait
negl
xlat
in
lret
xor
or
inc
pop
adc
jb
pop
rcll
push
mov
xor
in
dec
mov
int
add
push
lcall
jp
in
int3
mov
inc
push
pop
sbb
int
cmp
pop
inc
mov
inc
xchg
mov
aam
pop
jno
cmp
scas
mov
aam
movsb
int
test
sbb
and
inc
push
xor
aam
add
push
pop
movsb
nop
pop
dec
xchg
dec
add
push
xchg
xchg
clc
xchg
mov
inc
mov
sub
fwait
cld
add
lahf
test
movsb
push
lods
pop
ret
js
cmpsl
adc
mov
add
and
out
fnstsw
xchg
pop
pop
repnz
sahf
xlat
insb
cmp
xchg
call
movsl
fsubr
ficoms
or
adc
inc
in
shl
mov
jg
mov
ss
bound
rorl
scas
jmp
xor
push
hlt
pushl
cmp
cmpsb
xor
cmp
pop
xchg
shlb
sub
jb
insl
movsl
out
call
or
popf
adc
and
test
push
ljmp
mov
pusha
jno
in
stos
cmpsl
je
jle
pop
jg
pop
test
cld
aad
sub
loop
in
hlt
mov
mov
inc
inc
sub
push
stos
jne
adc
add
out
into
in
dec
mov
mov
cmc
push
xchg
jne
imul
gs
or
adc
rorl
cmp
mov
and
testb
or
inc
ret
fmuls
or
pop
sti
outsl
push
outsb
std
nop
pop
pushf
rol
jg
sub
mov
add
clc
lret
in
mov
dec
add
movsl
test
mov
std
push
aas
mov
inc
dec
aad
jae
and
and
addr16
inc
xchg
mov
imulb
call
mov
inc
dec
out
add
add
shrb
movsl
fiaddl
pop
movsb
pop
test
jo
std
repz
mov
add
popl
push
test
out
outsb
cld
push
or
mov
pop
rcrl
pop
lods
bnd
out
outsl
pusha
and
lret
push
imul
and
sbb
dec
inc
test
loope
cmpsb
or
jp
stos
cmp
cwtl
adc
xor
xor
aad
data16
sbb
jmp
jbe
push
lock
jmp
push
ja
stos
ficompl
mov
mov
arpl
loopne
movsl
cmp
dec
jmp
mov
mov
mov
addb
mov
repz
xor
iret
mov
into
int
hlt
lods
dec
jno
xor
dec
pushl
repnz
jecxz
cs
call
xchg
fs
into
mov
push
and
and
mov
test
lock
pop
ret
lret
add
pop
pop
mov
and
cmpsb
outsb
xlat
jbe
sbb
xchg
cmp
jnp
xchg
cmp
xor
push
cwtl
add
jb
cmp
aad
out
ljmp
inc
sbb
mov
pop
pushf
cmp
jmp
and
and
adc
lods
add
aas
ret
jle
js
push
cmp
mov
scas
stos
movsl
and
mov
popa
leave
lcall
push
fisubrl
mov
push
push
ret
lock
ret
or
gs
stc
cmp
aad
cmpsb
adc
mov
inc
cs
sub
cmc
sbb
ficoml
inc
dec
outsl
ret
push
and
sub
outsl
jmp
test
int
sub
mov
mov
add
ficomps
cmp
leave
lock
inc
xchg
imul
xchg
js
test
sahf
jnp
cmpsl
movsb
inc
scas
xchg
ret
ljmp
dec
xor
testb
mov
out
fldenv
sub
sub
cs
mov
cmp
mov
add
repnz
push
or
pop
or
or
pop
sbb
adc
lods
popf
cli
mov
sub
stc
add
mov
pop
push
adc
adc
cmp
push
outsb
dec
lds
imul
xchg
pop
test
sbb
rorb
jmp
sub
pushf
cs
sub
fldcw
push
adc
push
adc
adc
inc
lods
je
lahf
inc
pop
add
add
and
repz
lret
in
repnz
arpl
add
movsl
cmc
out
cltd
call
push
mov
shll
sti
movsl
into
cmpsl
mov
sub
dec
cs
mov
and
in
jnp
fwait
push
adc
mov
or
dec
aam
and
fistpl
das
movsl
sarl
int
mov
jg
std
mov
cmp
xchg
dec
jp
out
arpl
aam
mov
test
push
mov
out
test
fsubp
push
lds
stc
dec
push
add
and
sbb
push
xlat
cwtl
jo
xor
aad
ret
es
or
add
mov
test
das
mov
dec
adc
int
and
fidivl
and
cltd
sub
dec
sbb
movsl
mov
aad
mov
sub
mov
ds
xor
lret
mov
pusha
aaa
or
inc
xor
gs
xor
pop
inc
mov
cmc
int
cltd
jecxz
or
cmp
jp
enter
int3
jg
cmp
cmc
and
xorl
adc
fwait
mov
jle
sbb
cmp
push
dec
sarl
xor
aam
mov
cli
fidivrl
adc
popa
push
fstp
test
mov
mov
fistpl
or
jl
jno
fldl
sbb
push
cld
pop
sbb
pop
inc
push
shll
and
mov
inc
ds
push
jbe
jns
pop
in
mov
stos
sbbb
mov
cmpsb
out
mov
fwait
cltd
adc
xor
int3
push
adc
movb
stos
or
jg
repz
pusha
outsl
and
and
pusha
cmp
push
inc
push
cli
xor
and
mov
cld
jle
jno
adc
or
arpl
jb
mov
adc
mov
arpl
addr16
dec
ret
loop
mov
movsb
mov
jns
out
pop
subl
jg
cltd
mov
bound
cmp
movsb
xchg
stos
xchg
sub
adc
in
sbb
das
sbb
inc
push
bswap
pop
sub
sbbl
sbb
mov
cmp
in
pop
lret
or
dec
mov
push
sub
rolb
imul
icebp
dec
cs
out
lods
roll
cld
lea
push
aad
and
iret
aas
rcl
jnp
insb
aam
inc
iret
imul
dec
ljmp
lret
int
jae
addr16
js
pop
aad
pop
lret
mov
in
sti
mov
hlt
hlt
es
addb
ljmp
mov
stos
xchg
sub
repz
mov
loope
inc
ja
insl
xchg
data16
test
lea
arpl
int
push
dec
lret
fs
cli
cmp
mov
lods
sub
jge
icebp
lea
test
jmp
cltd
loop
cld
fldl
insb
enter
sti
push
in
cwtl
inc
imul
ljmp
cmpsl
or
cmp
fnstsw
hlt
rorb
pop
fadds
test
xchg
call
fstp
jb
sub
data16
pop
sub
lret
push
roll
push
or
pop
sbb
dec
out
fists
cltd
fcomps
notb
es
pop
mov
ret
es
dec
stos
scas
loope
sahf
lea
int3
popa
dec
inc
mov
push
out
addb
jp
mov
pop
shll
pop
cmp
das
stc
rclb
dec
push
inc
mov
arpl
xor
and
xchg
movsl
out
add
lods
pop
xchg
stos
sbb
inc
mov
mov
jnp
xchg
cli
scas
push
push
jno
out
orb
andl
imul
push
xlat
fdivrs
adc
xor
leave
mov
sbb
add
aad
push
xchg
mov
clc
pop
lcall
out
lahf
jno
mov
add
cmp
sarl
or
sarl
or
mov
cmpsl
mov
ret
adc
push
inc
das
aaa
inc
dec
test
push
int
insl
push
sub
sub
fcoms
inc
add
pushf
icebp
js
sub
jno
dec
mov
aaa
rcll
loopne
fwait
sub
mov
cli
insb
adc
inc
push
xor
lds
jb,pt
xlat
addb
inc
push
xchg
out
xor
mov
or
test
xor
add
push
sbb
std
inc
adc
dec
das
das
cmp
lcall
aas
mov
inc
fiadds
lcall
mov
inc
or
or
icebp
in
test
push
or
push
xchg
xchg
fnstcw
lods
out
and
popa
pushl
jge
in
cltd
add
inc
movsl
lahf
pop
dec
outsl
aam
pop
xchg
stos
lret
loope
inc
dec
cmp
dec
shrl
jge
mov
mov
insl
adc
jmp
call
stos
push
sub
and
or
mov
fistps
mov
popa
mov
add
pop
stc
sbb
sbb
push
sbb
or
cmp
mov
xchg
icebp
adc
ljmp
fwait
test
jg
xchg
mov
and
sbb
movsl
mov
jmp
jmp
cltd
ret
inc
stos
aad
push
test
inc
popf
add
repnz
or
pushf
jne
inc
mov
aad
or
ss
xlat
push
mov
or
imul
jg
cwtl
fwait
bound
cmpsl
enter
iret
inc
push
sbb
mov
sub
jecxz
cmp
push
mov
enter
in
cld
sub
ret
shlb
cmpsl
outsl
jnp
mov
jnp
rorb
sub
cmpsl
lea
mov
sbb
outsl
out
adc
lret
test
dec
push
pop
jmp
cld
repz
inc
jmp
mov
addr16
push
pop
enter
inc
and
int3
loop
ljmp
outsb
xlat
ret
push
dec
into
imul
fwait
arpl
adc
inc
and
xchg
mov
adc
ljmp
mulb
jns
test
mov
outsb
inc
jle
and
or
jne
divb
imul
or
jp
fnsave
add
repz
scas
xorb
jle
sub
jp
mov
mov
pop
mov
aaa
dec
cmp
repz
mov
jb,pn
adc
jmp
out
decl
cld
adc
cmp
jp
pop
mov
out
push
inc
and
ret
fdivp
jmp
inc
shll
shlb
pop
mov
test
jg
mov
cmp
mov
cmp
sub
les
fcoms
andb
add
sbb
out
sti
xchg
adcb
cmc
cmp
fmuls
xor
pop
pop
test
xchg
mov
dec
mov
popa
inc
xor
jne,pn
in
dec
out
cmc
inc
cmpsb
fnstsw
pop
xlat
aam
mov
push
mov
data16
xchg
mov
adc
aam
insl
mov
decl
out
push
test
insb
mov
and
or
sbb
inc
movsb
cmpsb
jp
mov
add
out
sbb
incl
lods
add
mov
and
ja
fldt
insb
fldt
xor
ficoml
dec
xor
mov
or
sub
mov
add
in
xchg
mov
push
icebp
push
jl
or
iret
sub
or
aas
movsl
pop
nop
sbb
lret
add
dec
outsb
or
pusha
icebp
fdivs
dec
add
add
dec
lods
jp
insl
cmp
cmpsl
jg
aam
jo
inc
aaa
sbb
push
sar
js
cltd
lds
or
aad
inc
adc
in
fcoml
arpl
scas
mov
popa
pop
push
test
mov
cmc
inc
loope
lret
cltd
xchg
popf
push
push
adc
push
int3
mov
push
loopne
mov
add
push
mov
jp
test
or
jl
mov
mov
pop
cli
in
push
movsl
adc
movsl
push
out
jo
or
inc
push
ficoms
adc
pop
push
sarl
and
mov
inc
shl
xchg
push
sbb
cs
les
std
adc
cs
cmp
lods
lcall
pop
push
subb
sbb
dec
push
je
imul
test
mull
and
fidivl
idivb
dec
adcl
loopne
outsb
mov
repnz
adc
addr16
and
mov
and
xchg
aad
fsubrs
xchg
pop
sub
push
cmp
rorl
inc
push
sbb
lret
or
push
loopne
dec
cwtl
cltd
mov
data16
push
dec
bound
push
stos
loop
xchg
jne
mov
cld
jge
mov
out
lahf
xchg
sub
ss
out
imul
cltd
pop
sub
stos
inc
sbb
and
call
push
test
lock
outsl
leave
or
mov
push
lret
sub
pop
ret
add
push
push
jno
daa
xor
cld
lods
shrl
add
insb
inc
push
sbb
mov
add
sub
jae
bound
xor
jo
fcomps
in
sbb
push
ljmp
push
pshufw
jmp
jmp
pop
xlat
adc
push
jge
inc
jns
ljmp
mov
add
out
add
add
loopne
push
aaa
xor
mov
pop
sub
sub
ljmp
push
bound
or
aam
mov
mov
sbb
loop
xlat
sub
inc
add
out
push
shlb
mov
adc
push
xorl
xor
mov
arpl
push
mov
repz
in
nop
jecxz
add
out
xchg
push
and
js
cmp
mov
mov
daa
inc
insl
cmpb
jg
xchg
rcll
pushf
arpl
pop
mov
sub
dec
out
flds
ljmp
inc
or
adc
add
dec
adcl
push
scas
ret
lahf
enter
or
dec
push
add
loopne
add
mov
cmp
pop
out
push
lret
pop
sub
std
lret
or
popa
pop
add
mov
outsl
sbbl
and
pop
gs
mov
es
fists
or
fimuls
out
sub
adc
movsl
das
jne
jmp
mov
push
iret
lods
imul
pop
lret
mov
and
jnp
ficompl
inc
pop
movsl
fmulp
repnz
loopne
imul
jle
dec
cmp
xchg
outsl
pop
cld
andb
lods
xchg
shr
aaa
scas
into
xchg
pop
cmp
pop
fmul
fnstenv
frstor
xchg
sti
shl
push
sub
cmp
inc
in
cmp
xor
mov
jne
pop
pop
push
mov
jecxz
jns
push
call
notl
xor
lcall
push
mov
lock
dec
imul
movsl
ja
fildl
popa
jmp
call
insl
clc
pushl
push
nop
xor
shlb
popa
mov
or
inc
lods
rolb
test
mov
shlb
outsl
adc
out
jp
xchg
aam
rcll
mov
mov
mov
xor
mov
dec
idivb
jle
orb
xlat
jnp
inc
sbb
or
lock
sbb
fisubrs
mov
add
ja
fldcw
cmc
fistps
js
les
cmc
dec
jne
adcb
mov
aam
xor
fcmovnbe
mov
int
jno
mov
call
in
inc
mov
cltd
repz
mov
ss
fidivs
xchg
push
mov
push
lds
mov
nop
lret
mov
pop
and
jg
sahf
dec
mov
cmpsb
notl
sub
or
cmp
fnstcw
xchg
cld
out
fidivrl
nop
pop
repz
sti
aaa
es
or
or
jge
cmpsb
mov
lods
sar
test
cmp
mov
enterw
sub
jle,pt
insb
call
mov
or
pop
lret
lock
xchg
push
enter
push
out
repnz
mov
imul
jne
lock
jg
xor
inc
pop
popf
and
xor
mov
in
dec
out
int
movsb
mov
sub
mov
std
call
fildll
or
jecxz
xor
cmpsl
lods
nop
dec
cwtl
ja
inc
pusha
loopne
rorl
fistpl
cmp
adc
xchg
mov
xor
jnp
stos
cld
aad
xor
popa
pop
dec
or
jge
movsl
lods
shlb
daa
call
jae
push
mov
fisttpl
jl
cmp
dec
and
cmp
jns
pop
scas
add
in
dec
or
pop
lds
cmp
repnz
out
adcb
mov
cmc
rolb
stos
lahf
imul
push
jl
and
dec
sub
jb
dec
xchg
repz
mov
loopne
test
xlat
subl
ret
adc
mov
int3
lds
lock
sbb
mov
sub
and
cld
xchg
mov
xor
or
stc
push
push
push
dec
je
mov
sub
dec
inc
es
es
lea
fbld
mov
cmpsb
test
imul
jne
leave
mov
cmp
fidivrs
in
inc
pop
sar
push
out
arpl
jp
addl
inc
pop
push
stos
add
loopne
lret
insb
daa
out
cmp
aam
jb
pop
inc
fs
je
push
jbe
xor
jbe
dec
mov
test
scas
inc
std
adc
sbb
mov
and
and
addr16
mov
adc
in
cmp
pop
fists
in
das
roll
aas
push
es
icebp
fdivs
es
ret
pop
mov
cmp
dec
aaa
stos
sbb
adc
cmpsl
adc
pop
mov
les
jmp
inc
xchg
push
fldl
cmp
rorb
out
pop
xchg
mov
repz
pop
sbbl
mov
imul
out
jmp
shl
pop
cmp
test
mov
test
mov
sub
sub
ja
add
cmp
xlat
inc
pop
add
xor
push
jno,pn
popf
out
pop
xchg
xor
or
xchg
pop
lods
roll
pop
and
jp
sub
mov
rclb
in
mov
clc
jge
cmp
or
jns
mov
cmc
dec
cmpsb
pop
idivl
and
sub
xorb
pxor
pop
lahf
outsl
ds
adc
mov
push
popf
hlt
mov
or
and
sbb
adc
lods
pop
sub
movsl
lods
js
adc
mov
xchg
fstpt
sbb
mov
addr16
xor
ret
and
push
shlb
fstl
aaa
dec
das
int3
inc
gs
arpl
mov
nop
fimuls
push
push
pop
repnz
or
stos
mov
mov
xchg
jmp
pop
add
cltd
sahf
mov
mov
addr16
fidivrs
mov
and
lcall
out
dec
lods
add
pop
shlb
mov
lcall
mov
add
jmp
cmp
and
sbb
das
dec
call
jmp
popf
int3
movsb
push
mov
jle
or
pop
xchg
sbb
insb
movsl
popf
fcoml
and
pop
jge
mov
jae
pop
mov
push
stos
popf
sub
adc
adc
xor
jge
lds
int
mov
add
mov
inc
mov
cltd
mov
jno
icebp
push
mov
lds
jnp
xchg
xchg
aas
scas
test
mov
mov
mov
push
mov
fs
in
aas
stc
ret
cmpsb
ret
popf
inc
mov
and
push
int
sub
mov
stos
pop
or
jns
pop
cmc
lret
mov
pop
mov
clc
pop
in
or
jp
push
enter
push
cmc
or
push
fidivrs
aas
gs
mov
fsubrp
sub
fs
ret
or
jmp
dec
dec
sub
lods
jle
repz
jl
pop
mov
lret
jle
dec
loopne
jle
int
inc
inc
and
mov
add
push
pop
stos
adc
push
and
dec
push
ret
rcll
lods
cltd
into
mov
sub
std
cli
push
xchg
dec
into
xlat
pop
cwtl
pushf
push
pushf
lea
xchg
enter
xor
sub
stos
inc
test
mov
cmp
icebp
popf
lock
in
mov
pop
fimuls
in
in
sti
inc
mov
or
cmpsb
sbb
lds
xor
pop
imul
insl
inc
lods
add
je
dec
sbb
xchg
cltd
and
and
test
shrb
imul
enter
jnp
and
sbb
xor
leave
js
mov
negb
test
mov
inc
pusha
cli
xchg
clc
fldenv
in
pop
or
and
jge
mov
cmc
pop
sbb
add
rcr
xor
dec
cli
or
mull
clc
lock
leave
mov
ja
jmp
mov
repz
mov
in
push
adc
mov
or
out
jmp
insl
in
insb
scas
push
pop
fstpl
xchg
imul
aam
pop
cmp
cmp
mov
fs
mov
add
ja
sbbb
in
cmpsb
cltd
jecxz
iret
es
mov
and
jge
mov
mov
mov
sarl
adc
cltd
mov
sbb
xorl
shrb
cltd
and
mov
inc
mov
jo
cmp
adc
shl
adc
arpl
xor
cmp
or
mov
adc
sub
jmp
cmp
stos
inc
gs
pop
mov
stos
mov
mov
nop
sbb
or
out
mov
xlat
test
mov
push
mov
dec
cmp
pop
adc
xor
outsl
adc
repnz
jnp
adc
push
shlb
add
sbb
pop
sub
cmc
inc
push
adc
xor
mov
jmp
adc
cld
push
movsb
addr16
ficompl
sub
inc
inc
sarb
xor
jg
dec
mov
in
cwtl
mov
mov
jae
add
xchg
rolb
sti
jl
outsl
jne,pt
sbb
inc
lret
cmpsb
sub
cs
push
xor
xchg
xor
add
push
sbb
mov
dec
lret
jns
outsl
jo
int
sbb
lds
es
mov
clc
dec
push
jno
dec
and
or
xlat
mov
jo
test
repnz
fcmovnb
cs
xor
or
out
adc
ret
pop
fwait
imul
ljmp
lret
fisttps
out
pushf
shll
and
sti
fidivrl
xor
inc
fxch
mov
xor
and
mov
jns
or
xchg
sbb
repz
test
pmuludq
jbe
stos
mov
call
and
or
icebp
cmpl
add
mov
cli
lods
in
adc
xor
dec
out
lea
adc
int
and
sbbb
jne
adc
adc
jecxz
adc
lea
ljmpw
or
lret
inc
int
test
aad
jbe
aaa
mov
add
out
je,pn
push
and
call
sub
xor
adc
lret
mov
imul
pop
dec
ret
mov
xchg
hlt
adc
fistpl
jo
les
ficoml
ja
push
inc
xchg
xchg
sti
xlat
insl
and
in
mov
cmpsl
mov
push
leave
sub
in
pushf
mov
into
xor
inc
aad
xchg
test
lea
arpl
add
cmp
jle
xor
mov
maxps
imul
cs
ljmp
dec
inc
sbb
dec
test
loop
add
popf
js
or
or
xor
fisubl
pop
mov
fldcw
cmp
inc
push
sbb
lods
nop
test
incl
mov
enter
jae
jo
push
and
sbb
fsubs
movsl
jno
mov
jnp
and
xlat
popf
scas
and
inc
add
scas
out
pop
pusha
scas
add
int
ret
inc
ss
mov
loopne
ret
aad
sub
sub
arpl
adc
mov
roll
push
addl
cwtl
jno
cmpb
xor
mov
adc
and
xor
sub
pop
fnstcw
inc
fwait
rorb
jmp
dec
jns
and
push
pop
andl
stos
ja
inc
fcomps
fnstenv
cwtl
addr16
xchg
movsb
and
or
push
pop
repz
push
add
push
cmc
mov
mov
lret
dec
xchg
jno
push
insl
push
inc
scas
pop
aaa
mov
dec
loopne
incl
adc
add
add
lods
push
jmp
xor
ss
fisttpl
sbb
add
inc
dec
dec
sub
add
pusha
sbbb
je
daa
jmpw
fs
cwtl
rcrl
icebp
test
rol
cld
mov
inc
mov
xor
pop
in
pop
and
and
aad
test
popa
in
sbb
data16
test
pop
insb
cli
inc
div
cltd
loope
ljmp
xchg
mov
stos
jne
push
clc
aaa
jl
inc
mov
mov
and
push
loop
fsincos
and
mov
push
push
mov
in
clc
daa
cmp
fdivs
jbe
pop
pop
xchg
xchg
popa
sbb
cmp
orb
sub
cld
loopne
jae
or
inc
jae
mov
ljmp
jl
outsb
sahf
add
adc
fcoms
fidivs
add
push
fmuls
sbb
mov
xor
xor
cmp
dec
mov
fmul
outsl
loopne
scas
mov
cmp
mov
lcall
sbb
mov
in
mov
jae
lcall
add
incl
mov
gs
dec
cld
test
loopne
sarb
sub
call
xchg
cmpsl
icebp
movsb
sarb
cwtl
sub
dec
jb
outsb
mov
mov
or
dec
bound
ret
push
dec
enter
xor
leave
fadd
movsb
fildll
lock
adc
pop
pop
inc
jns
sub
inc
nop
xor
mulb
mov
test
jno
in
cs
out
dec
adc
js
insb
cmp
push
jmp
into
and
scas
mov
jmp
xor
inc
add
adc
ret
out
fstps
sti
adc
lret
pop
jo
mulb
push
add
push
shlb
imul
sti
stc
mov
jns
mov
sbb
daa
dec
mov
fldl
sub
aaa
mov
dec
adcl
arpl
xchg
fdivrs
dec
test
or
or
xchg
outsb
fmuls
ss
xchg
popf
enter
xor
mov
enter
push
imul
out
jecxz
dec
xchg
int3
in
lock
repnz
push
push
pop
les
movsl
pop
repz
cmp
movsl
and
jmp
push
pop
mov
scas
push
sub
es
pop
mov
rcr
mov
sub
adc
adc
jns
mov
clc
mov
cmp
cmc
inc
sbb
call
mov
push
xor
mov
aad
pushf
push
pop
popf
shl
sub
in
sbb
sti
cmp
call
jecxz
pushf
adc
jp
pop
test
inc
dec
jge
or
ljmp
cmp
test
punpckhwd
jl
imul
lods
and
push
dec
add
jl
adc
out
mull
nop
push
mov
adc
les
and
cwtl
pop
xlat
push
dec
mov
adc
cmpsl
xor
adc
dec
cwtl
into
enter
pusha
aas
pop
inc
xchg
movsb
push
rorl
add
in
call
loop
mov
push
loope
adc
pop
stos
jge
mov
lret
clc
mov
punpckhbw
mov
cltd
add
iret
addl
or
out
pop
mov
push
push
clc
adc
jecxz
stc
dec
inc
or
test
je
insb
popa
jb
cltd
xchg
int
push
mov
lods
pop
roll
mov
push
ljmp
adc
fdivrp
js
xor
imull
sahf
mov
pop
mov
mov
movsl
inc
mov
xor
sub
or
dec
subb
addb
push
or
cmp
xchg
imul
push
in
inc
mov
add
cmpsl
bswap
pop
fs
arpl
insb
pop
sti
push
push
and
xor
or
daa
or
in
mov
xchg
push
push
repnz
cmp
stos
xlat
mov
movsb
add
and
jo
ret
scas
jns
cmp
mov
out
lcall
cmp
mov
and
addb
pop
outsw
push
ss
pop
mov
xchg
jb
repz
flds
arpl
out
mov
mov
getsec
xchg
sbb
dec
sub
rorb
push
add
jnp
test
imul
jge
pop
rsm
out
push
push
insb
pop
pop
mov
xchg
push
dec
push
pop
aaa
mov
push
push
out
repz
not
out
test
imul
test
xor
ljmp
jno
xor
xchg
ret
lret
and
subb
xor
js
sbb
and
leave
cmp
sbb
fdivs
test
dec
mov
sub
mov
cmpsl
scas
ret
or
jo
push
add
adc
xchg
jle
fnstcw
shrl
adc
jle
mov
mov
sub
inc
adcb
pop
inc
mov
jg
lcall
push
imulb
cmp
cmc
mov
in
push
jmp
adc
mov
xchg
das
dec
xchg
add
mov
outsb
movsl
xchg
add
idivb
and
aas
roll
dec
addr16
pop
adc
subb
sbb
ret
pop
xlat
test
pop
icebp
pop
xor
lahf
in
jmp
mov
inc
out
bound
xor
inc
xchg
pushf
ficoml
jb
std
fsts
jae
pop
out
fcmovnb
fistl
add
mov
sbb
push
stos
lahf
repz
push
jb
sub
fcomps
or
imul
and
ss
lods
and
rcr
pushf
mov
inc
mov
je
mov
push
stos
mov
pop
iret
mov
rcl
jns
mov
pop
pop
sub
loopne
incb
inc
lods
sbb
jb
mov
bound
dec
insb
lret
adc
jno
jle
cmp
cld
movsb
mov
rol
outsl
or
inc
cmp
dec
cmp
sub
xchg
mov
add
fiadds
pop
mov
aad
adc
pop
iret
fs
mov
cmpl
inc
push
xchg
lock
push
mov
mov
dec
dec
inc
cmpsb
xchg
mov
daa
or
push
xor
inc
sahf
push
aam
pop
jge
add
jmp
aam
jb
dec
rcll
in
sarl
addr16
or
cld
aad
test
std
jns
adc
aas
icebp
or
push
fnstenv
sub
insl
jb
ret
xchg
jle
cli
dec
aas
in
loop
rol
push
insl
lock
mov
test
lds
repz
xor
push
dec
popaw
enter
xor
cmp
mov
xchg
push
sub
or
lds
jo
dec
pop
add
aas
insl
rolb
pop
jb
shl
add
insb
xchg
loopne
sub
mov
sub
pop
cltd
iret
sbb
mov
lahf
icebp
or
call
mov
jmp
xor
dec
sti
push
pushf
pop
call
out
push
hlt
pop
cmpl
ret
push
adc
int3
mov
push
ljmp
sub
mov
mov
outsb
test
ret
rcll
arpl
leave
sub
sbbb
test
adc
repnz
pop
mov
stos
stos
stos
pop
jb
out
jle
clc
inc
xchg
jae
in
adc
out
and
aad
and
ficomps
or
push
add
hlt
mov
out
dec
rcrl
cmp
pop
in
jge
pop
sbb
pop
or
scas
jp
fiaddl
dec
push
pop
cmp
mov
jge
sti
cld
sub
or
push
sbb
cwtl
arpl
sub
xchg
jnp
mov
sub
rcrl
mov
push
lods
hlt
xchg
ljmp
mov
mov
push
sti
rep
mov
mov
mov
inc
jle
sbb
loope
leave
dec
sbb
add
int3
cmp
push
fstpt
add
xor
stos
or
pusha
dec
cmpb
mov
cmp
inc
ficoms
dec
ljmpw
hlt
in
call
pop
pushf
testl
xchg
ret
and
fwait
cmp
push
popa
pop
add
sbb
das
xchg
dec
aas
sbb
lods
jg
cmpl
ficomps
ror
je
push
jb
outsb
push
out
sub
shrd
popf
sub
rcrl
aaa
repnz
inc
outsb
fistpll
or
xor
pushw
add
mov
jb
dec
xchg
push
cmc
scas
arpl
insl
jle
test
xchg
int
or
clc
jmp
mov
test
jl
push
cmpsl
out
adc
call
in
or
sub
mov
xor
out
push
out
inc
aas
mov
dec
lock
mov
test
xor
outsl
loop
aaa
psubq
jle
mov
jge
adc
jo
lods
test
add
push
mov
sub
mov
jae
stos
jae
dec
mov
push
push
or
xchg
bound
xor
mov
mov
or
jne
pop
adc
lods
xor
fists
and
ret
push
cmp
or
sarl
xchg
xlat
mov
test
jo
popf
dec
aaa
cwtl
inc
mov
xchg
pop
xor
pushf
imul
push
dec
dec
lcall
insb
mov
in
pop
fdivp
hlt
test
xor
push
loope
or
pusha
sahf
jmp
out
test
mov
test
stc
lock
sarb
xchg
jmp
mov
ficoms
scas
and
dec
push
out
fiadds
lds
inc
and
inc
sub
lret
jecxz
push
test
push
xchg
jl
loop
aaa
dec
hlt
xchg
ret
add
aas
xor
ljmp
jne
push
out
pushf
push
adc
cld
mov
jl
sbb
test
dec
mov
enter
pop
stos
jns
inc
push
xchg
in
fwait
pop
xlat
sbb
dec
arpl
loop
sti
decb
stos
jg
mov
hlt
nop
sbb
dec
lods
test
movsl
push
mov
push
sub
mov
icebp
test
or
push
es
ljmp
movsl
dec
xor
fmull
push
sahf
push
and
int
pop
jg
fsubrl
jns
jns
pop
arpl
mov
cs
adc
rol
mov
ds
pop
or
or
inc
pop
popf
fisubl
fdiv
cmp
mov
fdivrl
xchg
imul
jne
inc
push
fildl
dec
movsb
jne
and
xchg
xchg
add
hlt
cmpsb
mov
ret
pop
jp
insl
mov
int
dec
push
lock
and
mov
dec
int
xchg
das
jmp
js
int
ja
insl
mov
aas
mov
push
jle
jecxz
in
jno
inc
and
dec
daa
lahf
mov
adc
call
nop
in
fwait
loope
adc
xor
cltd
push
add
jb
sub
addr16
xor
pop
adc
jnp
arpl
loop
pop
scas
icebp
jae
and
inc
out
sti
scas
sub
mov
dec
sbb
je
sbb
sub
divb
cmpl
scas
scas
cmp
cmpsb
arpl
inc
sub
push
mov
xchg
push
cmp
xor
mov
sub
jge
ret
rorb
cmp
xor
jle
mov
sub
mov
mov
adc
sub
movsb
cli
xchg
adc
rorl
ja
outsl
fdivr
push
ret
in
mov
push
rcr
mov
test
pop
mov
aad
shrb
lahf
movb
or
dec
lods
push
xchg
sarb
cmp
push
mov
xchg
push
jnp
mov
popa
outsb
pop
dec
cltd
pusha
xor
mov
push
sarb
mov
mov
jle
hlt
add
or
cmp
xor
mov
loopne
test
sub
mov
push
int
xor
lods
cmp
cmc
ret
cmp
icebp
test
ss
loop
es
and
add
pop
loop
mov
fwait
mov
scas
dec
cmp
sarl
dec
dec
test
cmp
dec
push
fists
cmc
shll
nop
loop
insb
insl
daa
mul
dec
ljmp
imul
push
mov
cmp
push
mov
push
lahf
faddl
xor
out
pop
pop
or
cmp
bound
mov
mov
subl
js
dec
pop
repnz
or
iret
es
or
subb
movsl
mov
out
mov
loope
mov
stos
add
aam
xor
int
dec
movsl
fcomps
and
enter
mov
ljmp
pop
sub
shll
les
aas
xor
pop
lcall
lret
inc
std
div
popf
ror
addl
daa
faddl
lods
mov
lds
jge
cli
scas
pusha
mov
push
fmul
es
jb
ficompl
dec
pop
or
repz
ljmp
xor
xchg
fldl
shll
pop
clc
inc
jo
pushf
jo
mov
inc
out
repz
lock
pop
in
or
bound
fcmove
and
xchg
jne
cmp
pushf
fs
imul
out
dec
add
pop
out
ficompl
cmp
add
js
fs
or
test
push
xchg
dec
test
xchg
ja
push
and
and
call
mov
jo
outsl
push
sahf
mov
mov
test
ljmp
je
pop
arpl
mov
xchg
xchg
test
pop
popa
mov
aad
add
outsl
int
mov
jno
dec
and
mov
push
mov
jmp
adc
mov
mov
in
pop
add
inc
mov
mov
cmp
jmp
aaa
pop
mov
outsb
iret
or
push
lds
arpl
sbb
cmc
push
dec
ljmp
pusha
jnp
call
das
push
outsb
mov
xchg
leave
jnp
dec
cmpsb
jl
out
movsb
mov
mov
call
fmul
shrb
mov
mov
mov
jle
stc
cld
daa
call
filds
scas
add
repz
mov
cli
stc
movsb
hlt
pop
and
pop
pop
bnd
mov
push
lea
push
cmpsb
cmpl
mov
mov
xor
popa
mov
hlt
dec
aad
rcrb
push
repz
jo
cs
pop
or
ffreep
push
ret
cmovp
int
aam
inc
mov
adc
xor
test
or
mov
fdivl
es
movl
jne
dec
pop
sub
xlat
in
mov
into
sbb
xchg
enter
scas
mov
cmpsb
cwtl
jle
fbld
test
pop
adc
mov
repnz
mov
or
int
push
js
xor
dec
test
imul
loope
pop
and
sub
inc
push
mov
jle
aas
inc
adcl
jb
sub
cmp
addb
cwtl
lret
jle
jle
mov
sbb
jo
push
push
fdivl
imul
xchg
int
shll
popa
pop
dec
dec
les
inc
enter
lret
imul
cltd
push
mov
sub
jo
adc
push
or
xchg
into
pop
or
push
jnp
sub
scas
xor
iret
xor
or
cmpsl
rcrl
xchg
jne
dec
xor
sub
push
xchg
inc
jne
testl
ficoml
pcmpeqd
push
mov
popa
xchg
add
in
xor
jbe
xchg
mov
mov
pop
and
and
movaps
pop
cmpsb
mov
je
inc
inc
adc
cmpsl
out
pop
or
movsl
stc
dec
das
jno
dec
xchg
in
int3
sti
out
xlat
xlat
adc
or
mov
mov
rorb
jmp
aad
lods
push
cmp
push
and
stos
bswap
lret
ret
dec
in
pop
ret
add
sbb
jo
sbb
mov
lret
push
repz
jae
imul
das
out
or
add
je
pop
hlt
call
xor
fcoms
mov
ds
cmpb
mulb
fldcw
sub
push
xor
repz
mov
add
not
jmp
aad
test
icebp
cmp
mov
mov
push
out
mov
inc
call
lret
sbb
mov
mov
clc
lahf
xchg
repz
sbb
jnp
pusha
sbb
mov
xor
das
xchg
or
or
push
adc
and
fldcw
fstps
in
mov
bound
arpl
rolb
or
call
in
cld
xchg
aaa
xchg
adc
ficomps
add
jo
inc
mov
out
inc
jbe
cmp
repz
and
iret
out
testb
repz
jns
loop
and
mov
or
fisttpll
in
mov
ret
push
fs
repnz
in
and
loope
inc
and
mov
xor
mov
lock
dec
cmc
or
ror
jne
lods
add
lea
ret
dec
dec
sbb
fisubrs
cmpsb
adc
test
adc
outsl
or
push
fsts
sub
mov
call
sub
inc
adc
inc
push
pop
mov
or
outsb
sub
xor
int3
inc
cmpsl
cmp
jns
push
xchg
adc
add
xchg
insl
stc
arpl
ret
push
cld
add
pop
cwtl
out
clc
jp
ret
lcall
or
or
test
add
aaa
adc
pushf
popa
inc
mov
les
xchg
xor
xchg
jne
jecxz
fnstenv
fstl
fiaddl
inc
rcrl
pop
inc
and
xor
insb
das
outsb
jp
outsb
cs
add
loopne
add
mov
or
jl
mov
fcoml
addr16
push
sub
or
dec
or
iret
test
cmp
mov
dec
jo
mov
loopne
adc
inc
es
data16
push
sbb
xchg
jp
cmp
sub
movsl
mov
pop
and
add
icebp
loope
xor
orb
jg
insl
xchg
call
mov
sbbl
mov
mov
mov
mov
iret
or
inc
dec
push
cmc
testb
push
cmp
fwait
mov
sbb
jmp
add
aaa
clc
pop
and
xor
push
add
aaa
lret
in
leave
in
and
xor
add
and
dec
mov
repnz
out
xor
jo
mov
mov
pop
aas
jae
jae
fbld
cmp
mov
addr16
clc
mov
out
dec
repnz
test
cmp
movsb
cmp
movsb
shll
sti
aas
repnz
call
xor
xchg
sbb
dec
push
and
push
arpl
inc
lea
pop
mov
pop
cmp
lret
mov
outsb
cmc
sub
into
pop
out
int3
sub
xchg
or
xor
rcrl
xlat
arpl
scas
dec
mov
not
loop
add
mov
adc
jns
xor
mov
cmp
pop
test
hlt
in
xchg
mov
gs
pop
dec
scas
lock
xchg
out
and
daa
repnz
mov
dec
xchg
jl
cwtl
or
xchg
sub
inc
inc
and
xor
jbe
je
and
scas
test
push
lret
cmp
adc
pop
push
int3
sub
in
leave
jg
loope
aad
decl
inc
dec
lea
pushf
mov
repz
hlt
dec
pop
jns
bound
aam
ret
and
rcl
outsl
addl
or
mov
inc
push
push
jbe
stos
scas
sti
push
outsb
outsb
arpl
add
sub
push
imul
mov
rcll
add
mov
pop
add
push
sbbb
fistpl
jns
mov
xchg
ficoml
mov
jl
ja
leave
dec
inc
mov
fidivs
lds
out
loopne
fwait
lret
scas
outsl
loope
pusha
pop
popw
mov
sub
xchg
data16
fwait
dec
jb
pop
lods
xchg
push
lock
loopne
fwait
xchg
repz
loop
lds
jnp
out
xor
mov
iret
pusha
xchg
repz
adc
std
inc
in
fwait
inc
sbb
cltd
or
push
xchg
dec
out
pushl
dec
ja
and
dec
inc
std
mov
icebp
mov
ds
data16
lock
movsl
add
rcl
mov
bound
and
push
jmp
out
fucom
sub
insl
or
in
jecxz
aad
mov
les
mov
sub
fwait
repnz
lret
iret
call
jg
out
out
cmp
rorl
test
ret
cmpsl
notb
push
scas
es
push
addr16
fildll
push
adc
push
inc
mov
jns
adc
mov
mov
mov
inc
sub
daa
data16
xor
dec
cli
and
sub
push
cwtl
mov
jp
incb
imul
add
add
rorl
sbb
in
mov
sub
loopne
in
cmp
cmp
lods
test
add
je
push
sbb
cmp
lods
dec
lods
add
adc
push
fists
jbe
jno
xor
ret
mov
push
push
nop
stc
lods
call
pop
sub
mov
rolb
jecxz
jnp
xchg
sub
in
je
mov
mov
or
sub
xchg
in
ja
cli
rcrb
dec
add
mov
sub
scas
pop
addr16
pop
push
dec
push
push
testb
aas
addr16
inc
cmc
or
out
pop
lcall
pop
roll
push
push
mov
cld
imul
mov
mov
mov
cld
icebp
push
mov
fadds
sahf
jecxz
and
mov
fidivrs
push
xor
dec
test
movsl
nop
mov
mov
jge
xchg
shll
jnp
dec
inc
cmp
push
and
paddd
jae
stos
jno
arpl
add
es
sub
mov
lcall
test
cmpsl
mov
popa
jns
mov
and
sti
adc
test
ret
xchg
or
test
mov
addr16
lahf
mov
pop
or
lcall
lds
add
pop
xchg
pop
cmpsb
out
ficompl
popa
dec
sbb
or
mov
and
insb
add
xor
or
mull
xchg
xor
inc
jne
inc
xchg
sti
and
popl
xor
mov
sahf
lahf
lock
dec
mov
mov
or
mov
fsin
dec
xor
inc
jae
js
dec
push
mov
sahf
mov
pop
out
in
xor
jnp
imul
loopne
mov
jp
packuswb
mov
pop
daa
mov
int3
sub
shlb
es
jbe
xorb
mov
pop
add
push
out
ljmp
cli
test
mov
pop
add
ror
add
jle
xchg
mov
mov
xchg
iret
ds
adc
add
sbb
mov
mov
pop
jno
pop
sbb
stc
dec
les
xlat
pop
push
ret
data16
hlt
iret
mov
mov
clc
sti
mov
jns
adc
enter
mov
fistpll
in
je
mov
int3
mov
imul
inc
push
cmp
sti
cmpsl
add
aaa
jo
in
pop
mov
jb
add
notl
push
mov
fsub
sbb
cmp
xchg
push
and
pop
pxor
mov
ljmp
mov
jbe
loope
pop
jbe
jnp
cmp
sbb
enter
ja
push
nop
popa
stc
notb
mov
out
icebp
clc
xchg
adc
int3
sarb
shll
outsl
cli
xor
dec
cmpsb
adc
adc
rcll
inc
jno
pop
mov
sub
sub
out
call
pop
mov
and
ret
adcl
add
rolb
mov
fists
imul
repnz
dec
js
popa
mov
nop
dec
jnp
shrl
cmp
stc
or
aam
cmp
js
pop
imul
push
and
test
inc
inc
in
cmp
stos
sarb
or
jb
test
pop
jl
xor
sbb
test
push
inc
inc
mov
push
or
push
push
cmp
xchg
adc
ss
std
test
mov
adc
insb
daa
scas
lea
or
loope
in
and
inc
ret
mov
fstpl
roll
es
jmp
in
push
pushl
js
rcrb
mov
mov
lea
mov
mov
lock
int3
test
rorl
js
add
push
loopne
rclb
mov
mov
pop
popf
mov
lea
aad
dec
in
mov
xor
fcmovu
mov
pop
cltd
inc
aas
nop
xchg
orl
push
mov
ret
out
mov
push
inc
aaa
or
stc
inc
mov
push
lods
add
cli
inc
std
fisubrl
sbb
cmp
lahf
sbb
jge
and
pop
scas
loop
jbe
cmp
pop
lods
repnz
cmp
int
mov
cs
mov
ficoms
dec
loope
adc
imul
mov
jge
push
sub
push
fisttps
push
cmp
stos
mov
and
gs
daa
jecxz
sub
xchg
inc
leave
fimull
inc
and
push
cwtl
ficompl
dec
push
sbb
fwait
xor
into
jl
out
mov
fcoml
outsl
and
cmp
test
sbb
out
jmp
cmc
aam
xchg
push
repnz
outsb
sbb
in
das
stos
mov
inc
xchg
xchg
test
sbb
push
push
mov
cld
dec
loopne
imul
leave
outsb
push
add
repz
cltd
mov
fisttpll
jae
jmp
cmp
pop
inc
cwtl
fisttpll
stos
fdivrl
frndint
inc
xchg
outsl
push
in
inc
movsb
rcll
xor
in
test
inc
mov
mov
jae
arpl
inc
mov
into
shll
lock
cmp
sbb
push
dec
cmpsb
test
push
aas
pop
xchg
and
add
inc
lret
adc
iret
fildll
sbb
cmpsb
push
jge
inc
aaa
rcrl
lahf
gs
test
cmpsb
repnz
sbb
into
enter
lock
hlt
addr16
inc
inc
repnz
xchg
jns
cmpb
clc
clc
cmp
mov
sub
clc
lock
std
push
daa
and
mov
inc
push
aas
jge
lea
test
and
xor
push
mov
int
stos
dec
jge
pop
gs
fistl
cvtps2pi
inc
add
in
das
mov
bound
cltd
mov
arpl
insl
sbb
push
jbe
inc
lods
ss
mov
xchg
fistl
xchg
and
push
pop
add
mov
sub
pop
sahf
daa
test
sub
and
shll
xchg
jecxz
xor
add
push
sub
dec
bound
nop
pusha
mov
loopne
hlt
mov
fisubs
jg
int3
cmp
mov
or
push
roll
daa
dec
xor
xor
jmp
xor
cld
shl
dec
jl
jecxz
gs
outsl
sub
push
push
jge
scas
insl
pop
xchg
movsl
jns
ja
shll
lcall
adc
mov
xchg
pop
xchg
cmp
push
test
pop
push
push
jb
mov
push
cmc
shr
insl
pusha
scas
jo
jnp
jmp
out
inc
mov
addr16
xchg
mov
sahf
gs
out
xor
mov
push
andb
mov
cmp
add
cwtl
out
in
add
in
scas
or
loop
roll
test
xor
cmp
loop
std
dec
sbb
js
xor
notb
cmp
cmp
or
pop
xor
cmpl
pop
stos
dec
mov
pop
add
aam
mov
mov
sub
inc
nop
sub
test
fadds
mov
adc
mov
mov
shll
push
icebp
xor
int3
cmp
lock
sub
enter
xorb
mov
imul
std
pop
pusha
or
not
jmp
out
cmpsl
addr16
xchg
hlt
repnz
xor
clc
inc
into
testl
inc
inc
add
iret
push
movsb
filds
nop
stos
or
popf
rcrb
jae
push
lock
cltd
int3
xlat
faddl
popa
sub
mov
or
adc
cmp
loopne
mov
add
in
pop
mov
pushf
inc
inc
negb
push
cmp
inc
sbb
lret
push
dec
data16
or
sub
pop
out
ss
add
xchg
push
outsl
sub
inc
das
xor
dec
sbb
inc
inc
repz
ja
out
test
ja
xor
mov
mov
xchg
push
adc
sub
sub
imul
aas
shl
push
push
decb
mov
imul
test
jp
mov
or
test
insb
lret
adc
in
mov
mov
mov
lea
pop
pop
inc
mov
dec
pop
xchg
pop
leave
cld
add
jmp
sub
mov
xor
movb
push
push
push
mov
popa
test
mov
mov
adc
enter
inc
out
xor
pop
or
xor
adc
or
push
es
pusha
loope
or
mov
repz
insl
sahf
and
push
add
cli
roll
and
xorb
and
push
shr
xorb
das
decb
jb
mov
loop
pop
push
jl
fldcw
push
sbb
push
lods
and
inc
testb
aam
pop
data16
xchg
fneni(8087
movsb
and
jb
andps
push
out
lahf
mov
mov
lret
cmpsb
cmp
int3
xor
lock
inc
pop
xor
dec
sbbb
nop
pop
outsl
sub
and
xchg
xchg
je
jle
lea
outsb
and
shlb
fidivrs
cmp
clc
xchg
movsl
stc
add
jb
loope
push
outsb
aad
sub
cli
insb
js
xchg
adcb
mov
pop
adc
sbb
arpl
dec
in
dec
ret
adc
int3
mov
std
rcll
mov
imul
dec
lahf
mov
inc
mov
aas
jg
fsubrp
cmp
xor
adc
mov
push
or
push
push
push
jno
gs
and
xor
inc
mov
sbbb
pop
or
movsl
aas
fnstsw
sub
push
scas
mov
jo
addr16
call
in
fmulp
adc
mov
scas
or
test
xchg
cmp
jbe
aas
push
jb
jne
cmp
add
imul
jne
sbb
into
mov
xor
xchg
pop
or
mov
mov
lods
in
mov
or
add
lds
stos
xchg
sub
test
outsl
inc
jnp
dec
and
test
mov
subb
or
cmp
daa
push
outsb
inc
adc
mov
or
jno
in
xchg
je
adc
or
nop
pop
lds
mov
jbe
pop
stc
icebp
sub
adc
js
and
or
sti
cs
jecxz
inc
push
cmp
cmp
test
out
mov
into
mov
xchg
cmp
mov
cmp
sub
hlt
dec
icebp
in
jmp
xlat
cmp
jae
cld
mov
mov
inc
push
mov
dec
sbb
shrb
movsb
and
scas
jge
divl
add
jno
stos
jmp
pop
addl
cmpsb
cmpsl
rcrl
enter
mov
jg
repnz
in
xor
sub
aaa
loope
inc
sbb
outsl
cmp
in
xor
mov
inc
xchg
fs
rclb
mov
mov
negb
imul
cs
imul
push
imul
pop
out
push
mov
sbb
push
pop
movsb
je
mov
imul
or
jmp
sbb
pop
fistpl
je
push
jle
cmpsb
sbb
xchg
fisubrs
movb
push
xchg
imul
out
sub
mov
jno
andl
cs
cwtl
popf
mov
stos
jl
push
cmp
nop
in
cmpsl
dec
mov
or
enter
sti
jle
popa
adc
push
xchg
lret
js
xchg
xchg
test
jo
inc
xchg
mov
jb
add
xchg
inc
mov
cmpsb
fs
jnp
outsl
enter
xor
aas
icebp
repz
test
outsb
dec
repz
or
push
pushf
jmp
hlt
xlat
mov
ftst
sbb
mov
or
jns
insl
xchg
stos
cmp
cmpsb
rolb
pop
test
sbb
xor
out
add
repnz
hlt
insl
xchg
orl
jnp
xchg
sbb
sub
mov
enter
insb
adc
rcr
or
cmpsl
arpl
out
and
mov
cmp
sub
inc
xor
and
lods
xchg
add
sarb
pushl
add
in
iret
pop
int
stos
mov
mov
xorb
lret
push
inc
xor
push
lret
mov
popa
cmp
cmp
pop
out
mov
ret
sub
sarb
cmp
jb
xor
add
pop
mov
sub
sti
xchg
in
add
adc
call
push
sbb
adc
into
jnp
das
pop
inc
xor
mov
lret
cwtl
add
pushf
pop
inc
out
push
jecxz
stos
sub
sbb
test
sbbb
mov
jae
fs
aas
mov
lods
cmp
je
cmc
mov
ds
pop
addb
rclb
out
pop
jl
mov
loop
das
mov
out
stc
and
mov
insb
out
out
dec
mov
dec
lods
imul
pop
push
rcr
mov
pop
fdiv
movsb
inc
mov
jb
je
aaa
lret
push
push
push
xchg
jnp
mov
inc
pop
push
gs
add
push
aad
lretw
pop
mov
dec
jnp
and
das
jns
xchg
push
push
lods
inc
clc
jo
pop
or
testb
add
in
nop
push
icebp
ss
mov
out
inc
pusha
and
mov
into
xor
xchg
adc
push
inc
push
decb
cmp
or
mov
jmp
shl
jae
push
or
push
or
les
daa
imulb
in
movsb
push
add
adc
es
dec
pop
xchg
das
sbb
xor
sbb
jmp
daa
loop
sarl
dec
outsb
mov
jp
or
mov
lods
mov
mov
call
int
cmp
pop
in
into
mov
dec
pop
push
push
mov
out
inc
test
divl
sub
adc
pop
lcall
xor
jge
mov
lret
and
mov
lods
or
sub
movsl
add
das
stos
lock
pusha
add
and
mov
jp
mov
in
aad
icebp
repnz
pop
mov
push
mov
lahf
ret
js
andl
jbe
xchg
or
dec
inc
test
into
cmc
xchg
addr16
out
push
in
cli
jne
hlt
mov
out
mov
xor
cmp
mov
dec
iret
dec
sbb
das
cmp
cltd
or
loope
pop
gs
or
je
icebp
aaa
inc
xor
xor
movsl
lret
fiadds
jp
scas
sub
scas
aam
scas
insl
pusha
es
repz
xchg
mov
push
adc
cmpsb
jne
inc
punpckhwd
pop
shll
mov
ret
gs
cmpsl
insl
pushf
mov
sbb
sub
mov
into
mulb
mov
mov
lods
jnp
lock
and
leave
xchg
sub
lea
mov
fildll
mov
xchg
pop
lret
or
cmp
cld
jns
insl
test
stc
dec
or
fadds
test
fnstsw
xchg
fs
push
popa
inc
xlat
jl
repnz
dec
aaa
testb
std
stos
fst
cltd
fwait
test
add
push
inc
adc
add
push
xor
mov
imul
cmp
nop
scas
mov
fmuls
xchg
cmpsl
cld
enter
jmp
lods
adc
std
add
lret
fists
cmp
in
mov
sbb
adc
mov
mov
test
pop
lods
rcr
or
inc
scas
stc
std
pushf
les
sbb
pushf
js
pop
fistpll
movsl
add
or
adc
ret
cli
insl
mov
sbb
push
dec
jle
imul
loopne
xlat
jg
into
ds
xchg
insb
ja
jbe
pop
xor
cmpl
adc
fwait
xchg
mov
dec
push
cwtl
mov
lretw
call
aas
jg
addb
inc
jle
and
xor
mov
xor
push
sbb
or
jge
pop
mov
inc
sub
jne
sbb
mov
inc
jo
cmp
sbb
pop
fldl
lret
std
mov
fbld
mov
andb
stos
xor
xor
xchg
mov
subb
incl
outsl
sbb
lods
ds
adc
ror
jbe
jbe
dec
mov
ds
mov
cwtl
shr
enter
fstl
sti
push
jo
insb
enter
loopne
and
cmp
outsl
sub
mov
in
pop
fwait
into
jbe
mov
cmpsl
ss
mov
cli
insl
into
inc
and
cmpsl
push
or
mov
or
sti
gs
inc
aaa
dec
subl
pop
sti
out
ret
rcll
lret
xchg
sbb
lods
jle
mov
mov
or
jl
push
inc
shlb
add
orb
into
loop
fistl
aas
cmp
rcrb
cmpsb
ficomps
mov
cmp
push
ret
rcll
ljmp
outsb
mov
push
fidivrs
mov
leave
lods
fcoml
or
loope
pop
and
push
mov
or
fnsave
push
daa
dec
mov
and
leave
mov
ljmp
xor
xor
cmp
hlt
aas
je
int
in
lods
cmpsl
lahf
push
inc
dec
cmpsb
jbe
mov
adc
mov
cli
clc
push
push
call
lret
mov
repnz
and
inc
pop
or
lds
mov
in
movsl
clc
stos
mov
and
sbb
enter
mov
test
in
jp
pop
je
xor
cs
mov
jecxz
fsubrl
stos
outsb
clc
adc
mov
mul
jp
int
mov
ljmp
adc
cmpsb
fidivs
mov
pop
xchg
nop
cli
mov
stos
pop
jmp
out
lea
inc
jecxz
mov
xchg
ja
xor
dec
cli
movsb
cmp
enter
push
mov
emms
mov
lahf
add
call
cmp
sub
cmp
jecxz
pop
jmp
mov
mov
adc
inc
jl
call
mov
ret
icebp
std
dec
cmp
mov
cmpsl
and
and
mov
hlt
dec
pop
jg
popf
stos
cmpsl
movsb
popa
mov
inc
ret
mov
jne
mov
aas
popa
jno
add
enter
scas
icebp
and
push
sub
aad
into
xor
sar
sbb
inc
pop
xlat
cmp
xchg
jns
xor
add
mov
xchg
xchg
in
adc
adc
insl
and
sub
imul
mov
or
mov
add
scas
or
sbb
mov
outsb
je
dec
in
loopne
adc
out
mov
lret
es
jnp
addl
int3
clc
and
pushf
shlb
jg
nop
movsl
add
ja
sub
adc
popa
jbe
dec
xchg
cli
lds
mov
ss
inc
shr
rcrb
fwait
rolb
fimuls
lock
ljmp
pushf
ss
data16
nop
shll
in
sbb
shlb
or
xchg
add
xor
rclb
xchg
push
adc
test
sub
call
push
sub
mov
fwait
inc
cmp
roll
shrl
push
dec
aaa
and
bnd
repz
jo
mov
pop
push
stos
xor
pop
jg
in
rol
push
pusha
test
fmull
loope
sti
lret
in
orb
insl
lcall
or
mov
mov
aad
push
out
lahf
mov
mov
dec
pop
cmp
xor
mov
call
pop
fnstenv
cmpsb
insl
cmp
add
sbbl
incl
rcrb
repz
sbb
xchg
push
mov
in
in
or
ds
adc
andl
pop
arpl
lahf
jl
inc
or
mov
aaa
add
mov
pop
jae
adc
pop
in
add
push
pop
pushf
jle
jecxz
xchg
dec
cmpsl
pusha
cmpsl
inc
mov
movsl
fimull
out
xor
or
jno
ret
inc
inc
sub
inc
add
outsl
sub
mov
jns
push
jp
nop
mov
jbe
push
pop
bound
fsubs
lock
stc
dec
rcll
jg
cld
jo
xchg
in
cmp
stc
xor
xchg
mov
mov
cld
xchg
fwait
sti
fcomip
push
dec
xchg
mov
mov
cmc
ja
sahf
xor
js
lret
or
pop
mov
adc
cwtl
push
sbb
fucom
jnp
movsl
xor
clc
add
jmp
sub
cmp
jb
xor
cli
icebp
out
xor
stos
mov
lahf
in
mov
int3
mov
lds
rcrb
cmpsb
mov
push
push
cmp
divb
pop
inc
xchg
loopne
push
adc
sub
xor
jmp
mulb
jecxz
mov
and
ret
add
jae
daa
xor
add
and
xchg
or
mov
xchg
mov
xor
adc
dec
aad
rcrb
test
pop
xchg
mov
fwait
mov
mov
les
sbb
dec
cwtl
push
jp
std
shlb
inc
out
jno
das
mov
nop
xchg
fsubs
xchg
cmp
add
push
inc
xor
int3
aad
cld
and
sbb
and
roll
add
xchg
mov
add
mov
push
lods
cmp
mov
test
push
lock
dec
int3
fdivl
and
das
mov
mov
mov
and
sar
push
into
push
lret
or
int3
mov
cltd
xchg
jl
mov
std
mov
fisubs
dec
xor
and
pop
pop
push
mov
sbb
or
lods
mov
out
push
pop
xchg
pmaxsw
pop
movsl
sahf
mov
sbb
jns
add
dec
dec
xchg
icebp
std
jle
bnd
sbb
adc
xchg
sub
xchg
adc
loop
inc
or
std
sub
jecxz
in
dec
arpl
out
lock
loop
fsubrs
ds
mov
popa
xor
pusha
repz
sahf
dec
xlat
lds
sbb
sbb
insl
cmp
aam
arpl
lods
cli
push
popf
mov
mov
fisubl
add
and
jmp
xchg
mov
push
mov
test
adc
cltd
jb
test
cmp
in
aas
sub
ficomps
mov
pop
and
sbb
mov
rclb
stos
stc
push
mov
jns
mov
ljmp
push
divl
jg
adcb
pop
andb
sbb
ret
pop
sub
fsub
insl
xor
push
pushf
repz
rolb
mov
cmp
pop
mulb
xor
fs
das
jnp
adc
jno
fldl
ja
cli
jne
pop
subb
sbb
cltd
loope
adc
aam
adc
in
and
clc
lcall
into
pusha
sti
hlt
pop
test
add
mov
push
fwait
mov
test
out
leave
test
mov
cmp
fwait
insl
inc
fsubrl
sbb
icebp
sbb
xchg
gs
lret
loopne
int3
xchg
outsb
aas
cld
les
adc
jno
and
push
enter
test
mov
xor
lahf
addb
js
lods
push
add
push
mov
pusha
mov
sub
rcrb
popa
and
dec
add
xor
lods
aaa
mov
fdivs
lds
test
arpl
fsubl
xchg
push
lea
jne
sub
fwait
cmc
sbb
dec
and
lret
movsl
stos
pop
and
popa
jle
das
inc
movsl
out
outsb
sti
inc
scas
insl
hlt
jl
xor
imull
jl
jl
mov
add
add
aam
inc
notb
xchg
or
lods
inc
jns
test
jo
pop
std
jnp
test
mov
ds
clc
in
mov
leave
mov
aad
fnstcw
cmpl
pop
pop
mov
dec
xchg
xchg
or
fsubr
jbe
pop
sub
and
push
sub
jns
out
shl
sbb
xchg
lods
imul
das
mov
flds
ror
push
movsb
push
jne
scas
daa
add
lret
dec
mov
hlt
mov
lock
fimull
repnz
jg
pop
and
or
repz
lods
sahf
pop
jge
in
mov
push
jno
pop
movb
repz
loopne
pushf
notl
jae
mov
hlt
xchg
cwtl
xor
sub
dec
dec
or
fwait
sbb
jle
fisttpll
call
dec
daa
sbb
ret
push
and
leave
mov
inc
xchg
cmpsb
xchg
sbb
xorl
scas
mov
div
mov
mov
ret
daa
push
cltd
cltd
and
adc
iret
ljmp
add
add
fldt
jnp
scas
cmp
arpl
cmpsb
subb
stc
push
jnp
sub
mov
mov
das
cld
lahf
rcll
fisubs
pop
xor
imul
out
sti
popa
int
dec
mov
inc
xchg
jnp
pop
inc
fcmove
xor
mov
inc
and
shlb
mov
mov
jbe
sub
jns
cwtl
loopne
into
push
jbe
popf
sbb
dec
test
daa
out
sub
mov
xchg
cmp
pop
mov
adc
mov
jp
roll
pop
xchg
fsub
cltd
or
add
pop
cmc
dec
pop
push
outsl
jmp
adc
or
cmp
add
cs
pop
cmp
jno
inc
es
push
add
xor
push
in
jne
repnz
ss
test
bound
dec
jne
cmp
cs
stos
inc
sti
xor
stos
les
fstl
in
stos
jns
stos
push
addr16
push
lds
mov
jne
addl
xorb
or
and
pop
pop
mov
pop
fldcw
mov
push
shll
push
lds
xchg
adc
scas
rcrl
insl
mov
add
stos
mov
mov
arpl
fisubs
fmulp
cwtl
outsl
lods
movaps
mov
lcall
es
rol
and
aad
inc
fldt
nop
rorl
cmp
pop
add
jae
jmp
adc
pushf
mov
dec
das
xchg
xor
fistpl
jne
mov
push
fmul
loope
push
in
adc
inc
jmp
jp
shl
data16
mov
arpl
jne
jmp
cmp
imul
cmp
lods
push
jae
jo
pop
pop
cld
lcall
ror
or
add
mov
lea
repnz
test
call
stc
ljmp
push
mov
cs
sbb
or
call
cwtl
jns
lret
fwait
jecxz
pushf
adc
repnz
sahf
test
in
stos
ret
xchg
sbb
sub
stc
ret
ss
mov
into
stos
cmp
cmp
cmp
ljmp
sub
leave
outsb
mov
push
add
lret
fcmovnu
and
cltd
and
mov
loope
or
std
aaa
mov
inc
mov
xchg
jg
push
push
xchg
dec
jp,pt
mov
pop
rorb
adc
xor
xor
and
push
or
cmpb
repz
jae
pop
jns
daa
jl
pop
and
mov
inc
add
bound
ss
jcxz
jnp
pop
pop
xor
fwait
orl
mov
sahf
sti
lcall
cs
adc
ja
mov
push
aas
rorb
mov
pop
int3
dec
out
dec
icebp
mov
xlat
fmuls
sbb
faddp
xorl
jge
andb
cmpsb
test
test
fwait
icebp
xchg
in
dec
movsb
add
loope
cwtl
cwtl
push
icebp
ja
or
mov
mov
add
icebp
divb
repz
lret
xor
fs
daa
add
fsubr
fbstp
sarl
inc
fstpl
push
push
ljmp
add
sti
push
jmp
cmp
in
mov
in
mov
add
aam
push
dec
xchg
inc
fs
jne
push
adc
enter
hlt
leave
cmp
sarl
xchg
inc
mov
jmp
ss
movsb
sub
outsb
cli
fcmovne
or
xchg
outsl
xor
int3
arpl
sbb
ret
and
aad
iret
in
outsl
stos
scas
cltd
pop
andb
mov
repz
aad
lods
sub
dec
mov
shlb
inc
cmp
add
pop
lret
push
arpl
dec
int3
cmp
lret
loope
push
ja
jae
test
cs
mov
cs
xchg
mov
dec
mov
lds
pop
cmc
shr
push
add
out
pop
dec
add
hlt
inc
divl
mov
push
arpl
push
cmp
dec
jae
dec
outsl
pop
push
xor
frstor
fcomps
lret
dec
insl
xor
push
mov
xchg
mov
mov
xchg
sbb
jmp
lods
les
dec
std
adc
and
lods
xlat
mov
dec
arpl
out
mov
pop
dec
jmp
xor
into
adc
insl
cmp
adc
mov
into
insb
sbb
in
sti
push
jg
mov
scas
mov
popa
sahf
repz
loope
mov
in
lea
add
aad
outsb
xchg
loop
mov
mov
xor
jmp
mov
pop
enter
divb
xchg
test
adc
and
or
ret
insb
xchg
aas
in
jne
fs
sahf
or
shr
ss
jecxz
inc
sar
xor
sbb
inc
push
or
mov
pop
les
subl
loope
push
xchg
push
mov
fsubs
sarb
jl
leave
adc
movsl
insl
jnp
push
jg
inc
and
mov
jo
lret
cmp
shll
js
pop
xor
pop
lcall
mov
xor
out
jl
add
std
cwtl
into
fwait
enter
push
es
and
test
lret
arpl
imul
pushf
or
dec
in
push
sti
insb
mov
xchg
fsubrs
pop
test
test
pusha
mov
fldt
sahf
add
insl
xchg
xor
sub
pop
jne
mov
in
pop
mov
pop
and
rol
ljmp
into
std
cmp
mov
pop
lcall
mov
push
in
rcll
push
cli
inc
icebp
fsubs
jle
xlat
ljmp
pop
or
nop
dec
xor
arpl
enter
inc
dec
add
je
pop
jle
dec
or
cmc
mov
push
dec
pop
popa
mov
nop
ret
stos
or
mov
and
out
ret
dec
adc
imul
cmc
xor
rep
adc
pushf
or
aam
jae
fnstsw
fmuls
mov
xchg
fnsave
jo
and
out
aas
dec
mov
cmc
mov
adc
xchg
fimull
pop
mov
rcr
lds
sti
sub
adcb
dec
sbb
sub
jle
cmp
insl
in
mov
or
out
push
aad
add
inc
dec
and
test
sub
mov
xor
repnz
cltd
jmp
scas
mov
lret
or
stc
pusha
clc
xchg
inc
mov
sbb
xor
hlt
inc
in
add
daa
popf
inc
push
jecxz
fs
mov
add
dec
test
adc
out
add
or
xor
cmp
push
stos
mov
movsb
push
jae
popa
mov
sub
pop
push
scas
cld
lahf
cmc
jp
and
mov
xchg
xor
or
pop
cmp
int
or
mov
mov
cmp
imul
inc
xchg
ror
arpl
aam
dec
nop
fnstsw
aas
cmp
stos
pop
pop
and
subl
call
xor
mov
adc
jns
out
add
js
push
dec
aam
lahf
in
ret
mul
shlb
cmp
lret
in
pop
leave
jg
loope
mov
neg
and
jne
jno
xor
popa
cmp
test
clc
or
add
fistps
adc
cmp
cmpsb
bnd
mov
adc
xchg
rcl
dec
addl
decl
cmp
lcall
cmp
push
out
scas
jno
nop
shl
in
mov
ja
sub
jle
xchg
cmp
push
jns
and
adc
ds
jg
jne,pt
adcb
or
fcompl
and
xchg
loop
push
aaa
add
jmp
jae
out
adc
adc
mov
mov
cmp
jae
mov
adc
xchg
dec
rorl
in
push
out
add
mov
in
fisttpl
mov
jns
out
jp
imul
fidivl
lcall
mov
mov
adc
out
push
pcmpgtd
cmp
cwtl
cmpsb
popa
jp
inc
dec
in
inc
fwait
xchg
inc
ret
ret
xchg
mov
or
into
sub
lods
test
sub
enter
aas
xor
outsl
movsl
jne
jge
fwait
jle
fdivp
pop
sbb
cmp
imulb
jb
jecxz
mov
push
mov
mov
add
dec
push
push
aas
jae
jne
push
sahf
dec
test
push
mov
mov
cwtl
repnz
inc
sub
iret
scas
mov
aad
rorb
rorl
fiaddl
cmpsb
out
mov
mov
cmp
lahf
aam
ret
stos
add
push
mov
push
xor
xor
cwtl
sub
add
jle
rcl
jo
test
sub
and
inc
cmpsb
repz
push
ljmp
mov
mov
enter
cs
outsb
outsl
movl
sahf
jp
leave
inc
mov
nop
int
add
shrb
in
outsl
enter
aad
push
jmp
mov
leave
cmp
xchg
inc
sub
jg
insl
pop
mov
push
sahf
in
adc
pop
xor
into
cltd
push
mov
jb
fsubrl
add
jae
cmc
lods
test
and
mov
pop
jns
repz
into
pushf
pop
xchg
jns
sbb
mov
dec
fxch
aaa
jbe
mov
or
or
cmpsl
jmp
dec
sbb
push
lds
hlt
into
adc
icebp
shlb
addl
loop
xor
int3
ja
xchg
xchg
lods
movsl
add
dec
bound
ljmp
fisttpl
add
mov
out
sbb
xchg
insb
icebp
enter
adc
push
mov
or
xchg
ret
cmc
jle
xor
jmp
or
fucomip
dec
mov
add
lahf
enter
mov
aad
mov
call
push
lock
stos
je
cmp
mov
aam
sbb
or
push
and
loope
std
dec
adc
cltd
cmpsb
xor
nop
test
stos
popa
rorb
pop
xor
in
lcall
jb
cld
and
sub
xchg
cltd
hlt
jb
lock
dec
loop
push
xor
dec
sbb
jae
out
sbbl
push
and
xchg
or
pop
notb
jmp
pop
fsubl
ror
push
imul
je
sti
add
cmp
push
rclb
sbb
shrl
filds
cltd
lret
sbb
xor
push
jns
or
xor
dec
push
mov
arpl
add
insb
das
fwait
add
jp
pop
les
test
icebp
inc
cmpsb
mov
cwtl
jne
xchg
subl
fwait
out
pop
sbb
loope
mov
or
mov
jb
push
xorb
cmpsl
sbb
and
mov
out
fs
popa
jns
fnstenv
adc
aas
or
xor
mov
js
jmp
sbb
inc
dec
stos
adc
pop
aaa
dec
and
xor
and
jb
outsl
outsl
or
xchg
and
ss
push
xor
or
xchg
aas
lods
int
stc
ja
pop
mov
mov
dec
cld
fistps
mov
int3
mov
mov
aaa
pop
pop
clc
lea
jns
xor
call
mov
andb
bound
scas
push
out
je
rcll
pop
pop
mov
and
sbb
and
ljmp
das
std
cltd
and
js
clc
lock
pop
cmp
cld
xlat
cwtl
mov
mov
cwtl
movsb
das
inc
jecxz
cmp
jo
mov
xchg
loop
hlt
inc
lcall
xchg
jmp
je
add
data16
lea
in
add
ret
and
mov
hlt
faddp
filds
ret
mov
sarb
cmp
lahf
xchg
mov
xchg
pop
push
andl
cmp
hlt
xor
out
das
fdivs
sbb
inc
mov
lds
sarb
stos
int
fmull
aam
jnp
mov
lea
arpl
mov
arpl
dec
ret
sub
cmpsl
rcll
mov
jne
mul
push
adc
inc
xchg
mov
insb
jg
inc
mov
fdivrs
or
pushf
sbb
adc
push
mov
fildll
mov
dec
cmpsb
mov
in
jne
lret
sub
js
push
push
mov
jmp
mov
imul
pop
jo
and
pop
out
mov
mov
jge
push
gs
mov
mov
xchg
mov
dec
repz
xchg
cmp
fcomps
adc
cltd
xchg
push
pop
stc
add
daa
movsl
mov
js
pop
dec
pop
mov
bound
mov
inc
adc
or
call
jns
clc
call
loope
ret
daa
movsb
in
jbe
add
mov
fmull
std
shrl
kmovb
or
test
lret
sub
in
das
jmp
xchg
mov
mov
pop
or
jne
imul
mov
sarl
dec
xchg
inc
inc
push
mov
inc
mov
inc
jbe
cmp
je
sbb
aad
mov
xor
cmp
cmp
xchg
imul
sub
mov
insb
mov
hlt
mov
sbb
fadd
lahf
inc
xchg
xchg
jl
push
mov
jge
aad
cmp
fldcw
push
out
cmp
xor
lea
ss
lds
faddl
xor
dec
lea
repnz
jle
mov
mov
imul
mov
sbb
xor
stos
mov
cwtl
xchg
popa
dec
cmp
add
mov
mov
mov
mov
shlb
lret
push
adc
incl
sbb
repnz
xor
mov
rcrl
mul
andl
jecxz
es
push
jnp
jge
mov
jo
adc
enter
and
ret
sub
push
and
jge
imul
and
mov
pop
sti
pop
fwait
inc
mov
int3
inc
mov
hlt
lock
stc
insl
lahf
mov
inc
call
xchg
mov
xor
loopne
pop
call
repz
push
test
dec
iret
test
fadd
rolb
cmp
mov
add
out
ja
repz
pop
fcompl
insb
ja
adc
imul
imul
and
adc
lea
lcall
subb
mov
lods
jg
sbb
xchg
pop
xchg
sub
cli
lods
and
ror
dec
mov
jns
pop
icebp
pop
cmp
stc
dec
xlat
cmpsl
sar
jns
pop
and
cmpsl
ds
scas
leave
add
pushw
aam
jge
push
mov
jno
xor
mov
inc
je
mov
ss
sub
cmp
push
enter
cld
sbb
mov
mov
shll
dec
mov
out
and
into
inc
inc
dec
enter
pusha
mov
sbb
pop
aam
fs
loope
leave
popf
aaa
in
sbb
pop
xchg
in
dec
sub
pop
fsubs
je
dec
push
in
mov
std
loopne
jno
rcl
ret
and
mov
popa
push
jnp
and
mov
sub
cmp
push
js
or
lret
js
scas
dec
sbb
jle
cli
jns
scas
push
dec
dec
inc
std
jno
out
mov
ds
negl
pop
mov
dec
mov
cld
xor
pop
jecxz
mov
jno
fdivrs
out
int3
jns
fwait
enter
xor
xor
in
or
xchg
outsl
jl
andl
or
incb
push
clc
ret
and
sbb
call
and
daa
or
clc
dec
mov
or
sbb
pusha
stos
mov
sbb
cmp
add
ss
inc
rorl
cwtl
xor
xchg
into
xchg
cmp
pop
jge
inc
cmc
inc
nop
jp
xchg
loopne
mov
inc
adc
std
push
mov
in
shll
xor
lds
loopne
inc
and
out
and
inc
mov
push
mov
add
sbb
add
ret
icebp
les
sahf
hlt
lock
cmp
or
dec
or
inc
pop
mov
fdivr
insb
aam
nop
dec
dec
adcb
push
aas
pop
dec
cmpsl
sub
lods
xchg
mov
inc
push
das
push
cmp
mov
push
adc
int3
bound
cld
add
arpl
inc
xor
popf
or
cwtl
out
mov
cli
je
and
pop
lret
movsl
push
fmulp
cmp
mov
stc
in
clc
sbb
dec
loop
sbb
pop
cmp
push
jp
inc
inc
pusha
and
lcall
les
and
jge
mov
mov
push
out
xor
mov
jmp
or
bound
sub
adc
or
jge
jl
pushf
mov
js
add
int
sbb
dec
cmp
pop
fnstcw
js
rorb
stos
aas
movsb
pop
into
adc
xchg
mov
add
dec
call
mov
inc
adc
hlt
jg
stc
push
mov
dec
mov
packuswb
cltd
cmp
dec
pop
mov
in
imul
cltd
cs
mov
mov
mov
clc
mov
and
xchg
pop
cmp
out
xchg
fcmovnu
cmp
xchg
push
or
sub
push
out
push
pop
dec
pop
sbb
xor
outsl
mov
cmp
push
inc
cmc
sbb
push
testl
bound
sbb
popa
mov
popa
add
movsl
mov
mov
dec
add
pop
push
sub
mov
loopne
addr16
imulb
loopne
fiadds
jnp
mov
inc
fdivrs
shrb
xchg
rorl
js
pushf
mov
jmp
rolb
fsubl
push
ss
inc
dec
jecxz
shlb
sub
insb
jge
pop
jno
jle
dec
pop
push
jae
enter
xor
jns
adc
ja
ret
sbb
jg
subl
jmp
mov
in
ret
and
dec
mov
xchg
insb
addr16
stc
dec
sbbb
ds
and
outsl
popf
outsl
fisubrs
rcll
repnz
jb
insb
jecxz
mov
mov
xchg
stos
stos
shrl
movsb
adc
or
es
pmulhw
sahf
mov
mov
mov
stos
mov
pushf
inc
fstl
addr16
jne
mov
push
xor
fnstsw
nop
ljmp
stc
xchg
loope
inc
push
lds
andb
testb
in
clc
dec
addl
lods
ja
out
outsb
in
push
rcr
jp
pusha
imul
sahf
pop
aaa
pop
and
pop
fbld
popa
cli
pop
lods
je
jg
adc
adc
mov
int3
sbb
push
repz
jns
inc
push
mov
and
iret
scas
adc
leave
xor
shr
mov
lds
mov
ret
inc
mov
jo
imul
test
lds
aad
insl
std
pop
fsub
sub
punpckhwd
cli
and
jb
int
mov
mov
xor
or
scas
lahf
hlt
or
test
pop
mov
adc
push
and
loop
lahf
test
and
pop
xchg
dec
sti
mov
rorb
push
adc
sbb
jmp
or
push
push
hlt
adc
jns
clc
or
sahf
or
clc
fimull
bound
lods
and
mov
lods
pop
mov
iret
pop
sbb
ficoms
adc
xor
fisttps
std
mov
std
adc
fidivs
mov
nop
ret
aas
pop
pop
xorl
jge
push
aam
das
inc
adc
push
ficoml
lret
ret
push
lods
push
pop
cmp
sbb
or
imul
inc
sarb
dec
loop
xchg
cli
dec
mov
jo
fistps
sbb
or
outsb
outsb
add
and
xchg
aaa
into
adc
jns
dec
add
lahf
or
in
mov
xor
sub
fidivl
add
call
test
push
iret
mov
push
jno
orl
push
adc
clc
jecxz
imul
arpl
mov
cmp
pop
aaa
xor
fcoms
imul
jmp
cmpsb
or
fidivs
pop
jp
das
bound
addr16
ss
dec
push
push
jp
mov
nop
cmp
jg
ret
test
bound
mov
test
into
inc
insl
or
lds
mov
add
data16
fs
sahf
adc
adc
add
jmp
sub
jno
lods
mov
xlat
ret
mov
nop
xor
and
int3
mov
sbb
mov
sub
push
sub
cmpsl
cli
dec
inc
pop
fwait
ret
insb
test
pop
dec
outsl
adc
dec
aad
cli
cmp
mov
sub
dec
sub
stc
mov
mov
aam
imul
out
and
outsl
sub
xchg
and
sbb
out
fwait
mov
loope
dec
dec
inc
adcl
lret
mov
push
popf
repz
movsl
lret
fadds
sbb
ja
jns
and
mov
add
rcll
arpl
int
xchg
or
and
and
bnd
push
jmp
out
xchg
mov
mov
cmp
mov
arpl
int
pop
push
xor
push
lods
in
inc
loopne
lret
faddp
out
push
xchg
shr
hlt
jo
sub
xchg
popa
mov
mov
cmp
out
mov
pushf
xor
test
inc
pusha
xchg
push
or
test
xor
cld
mov
and
stos
fldt
fadds
push
mov
mov
xchg
imul
loopne
popf
mov
mov
pop
lret
test
int
lret
inc
dec
jb
push
add
ficoms
mov
lahf
adc
stc
xor
movsl
insl
cld
fstps
push
push
mov
mov
jg
aam
mov
xchg
cmpsb
sub
push
lea
repnz
enter
test
pop
clc
std
adc
pop
in
mov
sahf
pop
xchg
popf
pop
jb
inc
push
xchg
lcall
aam
stc
in
mov
aas
mov
mov
fldpi
aad
pop
or
ret
dec
ret
push
pop
divb
cli
ss
mov
rcll
dec
add
cmc
sbb
cmp
shlb
jp
pop
jae
testl
jmp
stc
ja
inc
jp
bound
out
sub
fimull
iret
lods
pop
add
test
sub
adc
or
nop
mov
cmp
add
mov
mov
into
push
jo
and
in
clc
cmp
jg
dec
cmpsb
out
roll
or
clc
fnstenv
adc
and
cmpsb
jbe
popa
out
push
adc
test
fsubs
adcb
aad
cltd
jecxz
xor
pop
repz
addr16
sub
dec
mov
push
insl
xor
test
or
and
sbb
jne
cmpsl
lahf
mov
sbb
nop
mov
mov
imul
xor
in
adc
xor
out
xor
test
sbb
push
repnz
stc
test
xchg
mov
dec
and
and
dec
pop
mov
jge
pop
add
das
call
jmp
lods
pop
mov
push
ss
xchg
sti
test
out
mov
stc
icebp
ret
sbb
push
or
xor
fs
js
jp
xchg
xchg
sub
mov
jge
test
popa
test
out
lds
rorl
push
or
push
mov
lret
sub
flds
rcll
lcall
sti
xchg
cmpsb
sub
les
loop
fs
mov
es
outsb
mov
in
xchg
sbb
shl
mov
les
cli
lds
mov
cmpsl
push
xor
push
dec
sbb
bound
in
and
sti
test
sbb
cmc
arpl
pop
fidivl
sub
aad
jmp
cmpsb
or
arpl
bound
or
fmull
cmp
mov
pop
pop
sub
mov
pushf
dec
mov
popa
insb
push
push
xor
add
cmpsl
push
out
adc
clc
daa
push
mov
or
sub
clc
clc
jg
and
ds
adc
pop
je
clc
arpl
pop
sub
es
fldt
xor
cmc
or
inc
out
lahf
xchg
out
in
xchg
cwtl
lret
jmp
fucomi
mov
repz
in
sub
or
and
jae
pop
jns
add
mov
pop
xor
aaa
rol
xchg
jnp
mov
loopne
sbb
nop
mov
inc
fwait
jbe
cmpsl
or
pop
push
mov
xchg
mov
testl
cmc
cmp
mov
fadd
movsl
cmp
ret
scas
pop
pushf
fnstsw
lods
mov
fmul
xchg
fs
mov
popf
cld
sub
sub
fcomip
mov
sbb
in
and
pop
fisttpl
cmp
cmp
mov
leave
push
mov
push
jne
jl
in
inc
cmp
cli
pop
fdivp
mov
lods
sbb
testb
add
inc
lods
push
or
ds
das
pop
xchg
enter
rcl
mov
pop
pop
dec
mov
fcmovne
in
repz
addl
lods
pop
loop
add
inc
mov
add
sub
ret
mov
outsl
jo
xchg
jno
xchg
cmc
cmp
js
into
ja
pop
lds
jne
in
icebp
leave
xchg
int3
cmpb
xchg
pop
dec
jmp
mov
jb
xchg
mov
leave
xchg
mov
ds
cmpsl
jl
test
xchg
data16
stos
or
movsl
testl
mov
std
mov
sub
out
mov
hlt
mov
ret
and
fstpl
sahf
inc
imul
shr
aaa
pop
push
popa
jns
push
fincstp
aad
call
cmp
scas
fimull
jg
orb
repz
ss
pop
repz
lock
mov
pop
xchg
xlat
cli
mov
pusha
shll
mov
loopne
push
dec
lret
std
pop
stos
rolb
cmp
sub
jne
sub
cld
xchg
lea
mov
adc
imul
push
add
popa
pop
jecxz
sbb
cmp
mulb
xor
xchg
adc
lahf
dec
adc
loop
push
pop
mov
sahf
xor
mov
sti
fildl
jno
inc
push
add
push
sub
rclb
jp
orl
ret
insl
jno
mov
dec
inc
je
lea
xor
arpl
rcrl
ja
test
jl
mov
mov
xor
stos
stos
mov
sti
es
adc
xchg
inc
loop
aaa
fistl
out
imul
jne
mov
jno
mov
jbe
sub
lret
and
jmp
mov
jo
addr16
fnstcw
adcb
inc
out
std
jno
in
xchg
jo
in
loop
out
mov
xchg
mov
cltd
fimull
cli
sbbb
scas
ds
insb
in
cmp
push
lcall
xchg
adc
or
movsl
inc
shr
aaa
test
sbb
push
ljmp
test
sbb
cmpsb
popf
xchg
scas
aam
jmp
std
dec
fstl
dec
sbb
jg
rcll
out
xor
fstps
mov
es
in
imul
movsb
mov
mov
in
mov
xchg
jae
pop
faddl
movsb
inc
and
xchg
andb
xchg
fmul
ljmp
out
push
jnp
jge
xchg
sarb
lods
in
mov
adc
push
pop
ret
xor
cmp
dec
dec
sti
nop
mov
int
adc
xchg
add
xchg
jne
jmp
pushf
in
test
cmpsb
or
mov
iret
iret
fcompl
jle
or
in
sub
xchg
xor
or
xchg
jp
test
pop
push
sbb
sub
inc
fnstcw
aam
popf
jno
cmp
call
lret
xor
repz
dec
insb
add
sub
in
adc
test
fimull
inc
adc
inc
aas
inc
int
adc
and
std
icebp
das
add
xor
xchg
fisubrs
xchg
mov
or
xlat
add
pop
pop
mov
cmp
pop
test
fstl
sbb
pop
mov
cli
pop
arpl
adc
fdivrp
push
xchg
lods
xchg
data16
cmp
jb
mov
ret
in
sahf
adc
aam
lock
fcoms
sbb
jecxz
das
inc
mov
xchg
aaa
enter
out
daa
push
pop
mov
rolb
lods
sti
jo
mov
pop
andb
lcall
jp
test
std
rcr
sahf
mov
or
push
test
and
add
xchg
xchg
loop
scas
inc
call
sbb
xchg
mov
jno
in
xlat
mov
mov
loope
xchg
std
dec
jle
jl
xchg
ficoml
decl
sbb
xchg
fcomp
mov
cli
dec
xor
adc
or
insl
es
daa
add
inc
popf
fsubrs
aaa
leave
mov
sbb
repnz
jecxz
and
sbb
inc
lock
lcall
subl
dec
sbb
addl
cmp
jmp
in
jmp
lds
add
sbb
adc
ret
lods
lods
fdivl
bound
mov
sbb
xchg
xor
sbb
dec
and
cwtl
inc
push
sbb
lret
mov
repnz
or
fiadds
cmp
jno
rorb
add
daa
in
xchg
xlat
jne
push
xor
and
repz
addr16
inc
and
pop
loopne
sbbb
mov
or
out
sub
add
and
push
cmp
jge
nop
push
fdivrs
xchg
xlat
iret
subb
push
xor
xchg
push
movsl
cmp
and
add
inc
jnp
popa
and
and
mov
das
ret
sbb
fsubrs
pop
mov
lret
nop
pop
call
mov
mov
push
push
into
jns
test
sbb
popa
push
stos
enter
enter
add
or
leave
dec
fildl
cltd
lods
jle
mov
imul
scas
mov
xchg
mov
jp
jne
cmp
dec
das
cli
lea
jmp
aas
imul
inc
incl
mov
lea
adc
bnd
cmp
mov
faddl
insb
rcrl
dec
sub
sub
push
les
hlt
and
or
push
aad
mov
ror
rcrl
rclb
xchg
out
jno
sarb
in
rcll
popl
sbb
data16
dec
sbb
in
nop
cmpsb
xor
xorl
adc
call
add
sahf
fisubs
sub
scas
dec
dec
data16
sbb
out
lock
lods
addr16
add
cmpsb
add
int
mov
aad
xchg
sub
pop
ret
outsl
pusha
sub
cmp
dec
jno
and
sub
imull
push
xor
out
movsb
test
mov
mov
sub
inc
out
mov
inc
movsb
xlat
dec
test
cmp
or
inc
cwtl
data16
fidivrs
lret
or
into
dec
mov
out
test
cld
push
popa
in
lods
xor
std
pop
divb
orb
inc
int3
sub
xchg
repz
iret
fwait
mov
cmpsl
outsb
ss
and
push
popa
andb
lock
into
push
inc
xchg
push
call
xchg
lea
adc
in
sub
jb
in
push
cmp
jae
ljmp
lods
or
cmp
arpl
and
outsl
add
inc
out
int3
mov
lods
mov
fsubrs
mov
test
lods
cs
mov
lret
rolb
js,pt
incl
xor
inc
data16
and
and
dec
pop
mov
jmp
aam
sbb
negl
ret
inc
int3
and
xor
ret
inc
mov
mov
addb
fisubrs
pop
xlat
fistpl
test
adc
sbb
sbb
jb
inc
aad
cli
mov
orb
fucomi
dec
shlb
bound
jb
xchg
punpckhdq
fldcw
outsb
jne
push
aad
not
mov
mov
aas
push
rorl
call
or
xor
mov
mov
enter
std
ljmp
xor
test
call
out
js
inc
push
xchg
jl
xchg
jecxz
push
lret
clc
jns
add
sub
ficomps
and
das
sub
rolb
inc
ret
mov
cmp
push
in
jnp
pushf
int
in
pop
int3
push
xchg
pop
xchg
fldcw
add
pop
mov
std
mov
fisubrl
or
xchg
and
push
inc
pop
sbb
inc
adc
pop
push
pop
push
xchg
sbb
jno
stos
fldlg2
repz
push
mov
jge
pop
dec
push
aam
cmp
lea
rcrb
jbe
push
mov
push
pop
repnz
adc
scas
or
xchg
jge
out
dec
sbb
push
push
push
or
mov
jp
cld
fistps
repz
in
jne
lret
mov
pushf
nop
in
in
pushf
ja
rcrl
fisttpll
leave
ret
mov
push
jp
push
dec
push
insb
loopne
sbbb
out
xchg
push
hlt
fsubrl
or
pop
jmp
cli
rcrl
xchg
jmp
xlat
out
in
push
ja
jns
inc
in
push
faddl
mov
lret
lods
data16
popa
outsl
pop
ljmp
shrl
outsl
lret
stos
pop
enter
push
inc
lds
cmp
loope
rol
sub
movsl
outsl
sub
mov
les
stos
aam
adc
cli
ljmp
inc
enter
test
jecxz
add
imul
jle
pop
scas
dec
cld
lret
mov
lcall
xor
fildl
jb
and
rcrb
dec
shrb
push
adc
frstor
pop
xchg
insl
scas
repz
sub
shlb
mov
shrb
iret
pop
sbb
and
cmp
fisubs
shlb
xor
aad
popa
out
orl
repnz
pusha
fildll
icebp
add
sub
xlat
or
add
xchg
cmp
mov
test
jbe
popf
pop
xchg
add
dec
add
push
pop
cli
pop
fcomps
xchg
loop
insb
mov
popf
fs
push
push
repz
mov
pop
aaa
mov
int
or
arpl
mull
stos
jno
cmp
aaa
pop
dec
inc
arpl
fwait
repnz
lret
stos
cmp
mov
cmp
adcb
lcall
repz
sbb
clc
lods
pop
cmpsl
test
sub
loope
jmp
aas
ret
jo
mov
lea
jne
es
sahf
in
xchg
add
aad
test
ret
jle
pop
push
xchg
sarb
repz
sbb
inc
bound
mov
jecxz
arpl
mov
push
flds
mov
repnz
sti
adc
push
jbe
fmuls
xor
cmpsb
mov
not
xlat
add
fs
mov
insb
or
xchg
into
adc
inc
mov
lahf
stos
lods
adc
je
add
jl
sbb
mov
out
ret
cmpsl
push
inc
pop
adc
xchg
jecxz
pop
lret
das
mov
lcall
movsb
sbb
movsb
clc
lds
mov
mov
dec
push
sub
mov
mov
popa
sub
pop
xor
sbb
lea
pop
pop
jl
daa
jle
sbb
rorl
fwait
daa
mov
nop
inc
mov
add
jne
imul
cmp
adc
repnz
cmp
in
imul
movaps
sahf
inc
loope
pushl
lock
add
or
add
pop
leave
cmp
inc
xchg
xchg
mov
xchg
cmp
add
mov
aam
jbe
xor
xor
pop
mov
add
leave
int3
push
daa
and
fmull
jg
jecxz
xchg
jp
std
outsb
inc
fiaddl
sbb
mov
les
inc
jmp
mov
orb
jo
pop
xchg
or
loope
sub
test
jo
xchg
loopne
cmpsl
adcb
imul
xchg
enter
mov
pop
ds
cmp
in
jo
push
aad
data16
je
mov
cmpl
out
daa
adc
push
cmc
movsl
test
out
adc
jge
fs
and
push
sub
cld
cmp
inc
rcll
dec
mov
std
xchg
mov
loopne
cmpb
sti
pop
sbb
mov
pusha
shll
mov
mov
jno
std
adc
mov
test
stos
pop
mov
dec
jnp
push
cs
ja
cmp
out
ja
ret
adc
sub
cmp
pop
mov
adcl
or
les
cld
and
jp
insl
or
cltd
mov
dec
adc
adc
pop
cli
jne
sub
retw
lock
cs
cmp
imul
mov
cmp
outsl
lock
mov
inc
push
jno
sbbl
insl
mov
add
and
rcl
xor
push
popf
mov
sbb
push
dec
and
inc
add
fnstsw
push
aam
out
je
jno
adc
push
mov
sub
sarb
icebp
jbe
call
sub
test
in
or
push
add
imul
je
je
sub
sbb
mov
pop
xchg
jo
lods
inc
aaa
arpl
xchg
aad
out
mov
aaa
mov
or
dec
sbb
into
mov
sub
jb
fwait
mov
test
fstpl
mov
xchg
mov
pop
mov
xchg
sub
cmp
mov
shll
xor
mov
sbb
mov
loop
ds
and
pop
jns
idiv
pop
nop
lahf
inc
mov
popa
sub
stos
cli
jle
inc
jns
test
sub
inc
inc
rorl
test
sub
test
pop
sar
inc
sbb
mov
mov
jecxz
stos
cwtl
sub
in
or
repnz
or
adc
dec
into
loopne
mov
adc
push
bswap
leave
outsl
movb
jb
xchg
fsts
add
popf
into
ja
dec
mov
incb
pusha
mov
push
mov
and
test
add
test
xorl
jmp
sub
mov
mov
or
mov
sub
and
das
cltd
adc
cmp
loop
dec
test
push
fisttpl
cmp
add
in
cmp
push
outsb
arpl
mov
pop
xchg
fbld
inc
xacquire
sub
repz
dec
andl
add
bound
imul
push
iret
mov
jbe
xchg
stc
mov
loopne
ds
test
les
inc
movsb
dec
adc
repz
xor
mov
test
xchg
test
fs
xchg
out
push
push
mov
frstor
jle
jmp
outsl
cmpsl
cmp
movsb
add
xchg
loopne
mulb
sbb
push
adc
mov
pop
push
mov
fwait
xchg
test
sti
cld
add
mov
shl
pop
xchg
mov
repnz
iret
xchg
clc
dec
xor
aaa
xor
nop
inc
adc
pop
mov
sub
mov
lock
cmp
data16
mov
push
test
cmp
ret
xchg
xchg
cmp
aaa
cmp
pop
inc
iret
pop
inc
sub
jne
sahf
imul
inc
out
and
lods
push
jl
repz
xor
cmp
or
out
dec
jecxz
jmp
mov
sbb
fsts
std
loope
ret
jae
xor
cmc
stc
ss
stc
dec
in
imul
bound
int3
scas
or
jo
leave
int
or
cmp
lds
rol
xor
push
mov
xchg
mov
movsb
stos
xchg
es
imul
lret
adc
outsb
lock
fstl
rcr
stos
pop
dec
jo
int3
adc
int3
fldcw
pop
or
mov
cld
test
jl
enter
rcrl
sbb
stos
loopne
jno
mov
jb,pn
daa
cld
lret
fcmove
or
out
ret
shrb
inc
jns
mov
jle
test
push
enter
popa
jns
inc
rclb
or
gs
mov
add
mov
popl
mov
insl
mov
push
fnsave
mov
sahf
jmp
pop
test
inc
inc
cmp
sub
fcoml
cwtl
pop
mov
sbb
loope
imul
mov
aaa
or
insb
mov
push
orb
mov
adc
pop
xchg
scas
loop
stos
fs
test
ja
inc
in
movsl
jne
xor
jbe
scas
push
mov
add
inc
push
push
in
call
in
sub
rol
sub
dec
je
mov
xor
std
int3
shll
sbb
xchg
mov
and
cmpsl
pop
xlat
clc
xor
out
add
jns
ljmp
aaa
or
mov
and
repz
mov
push
sbb
iret
dec
mov
sbb
push
mov
fsubl
hlt
cmp
sbb
pusha
cmc
lcall
mov
sbb
and
mov
xchg
pop
sbb
xchg
lock
inc
mov
int
fnstcw
filds
les
push
fnstenv
test
clc
add
arpl
fsubs
pushf
pop
pushf
cmpsb
lock
int3
inc
jne
jg
lcall
jp
inc
jecxz
xor
push
pop
outsl
xlat
out
pop
aad
rolb
aad
or
sbb
jne
xchg
bound
push
push
out
or
inc
pop
add
fimull
scas
lahf
popf
xor
push
pop
sarl
inc
add
aaa
sbb
mov
rclb
aas
inc
or
inc
arpl
and
scas
inc
mov
add
sar
in
in
mov
mov
jns
pop
sahf
mov
sbb
mov
imul
arpl
jecxz
add
mov
jb
mov
rolb
icebp
cwtl
icebp
jbe
adc
jne
mov
push
inc
jecxz
mov
es
dec
js
mov
jg
inc
pop
push
pop
fiaddl
out
pop
cwtl
insb
loop
fsubrp
ret
stos
loop
test
lahf
sahf
int
cmp
addl
and
and
or
pushf
sub
jge
cwtl
mov
sbb
cmp
inc
movsb
rorl
nop
dec
mov
sbb
outsl
or
xor
imul
pusha
add
inc
xorb
incb
xchg
lds
xchg
paddw
popf
or
dec
jne
movsl
outsl
sbb
xor
sarb
stos
xchg
inc
jns
ds
enter
xor
jmp
mov
add
pop
mov
adc
pop
mov
adc
mov
push
cmp
lea
outsb
mov
sahf
dec
xor
fs
dec
xchg
inc
aaa
cmp
xor
sbb
xor
xchg
adc
mov
into
cs
iret
lock
call
dec
repz
sbb
sub
cmp
dec
inc
inc
or
insb
or
mov
mov
fsubrs
mov
adc
xor
mov
add
pop
jnp
fs
insl
mov
addr16
sub
ds
call
in
stos
sbb
xchg
repz
pop
push
xor
mov
mov
lret
mov
cmp
and
inc
adc
dec
sti
dec
sbb
pop
mov
mov
xor
daa
loopne
in
xchg
inc
out
sbb
push
shl
inc
sbb
call
jl
sti
or
mov
lret
int3
and
and
test
jl
repz
push
inc
sub
mov
sbb
dec
ljmp
mov
sbbb
cmp
mov
mov
inc
xlat
sbb
jge
test
mov
int
repnz
insl
push
lret
mov
mov
jno
stos
mov
gs
cmpsl
pop
mov
jne
pop
jge
mov
sub
data16
into
aaa
out
stos
mov
jl
or
push
push
push
xchg
fidivl
inc
mov
pushf
popf
int
jp
jle
test
mov
jle
xor
adcb
push
lret
push
fnstsw
push
adc
insl
and
sbb
mov
bound
mov
ja
push
push
jbe
mov
mov
xchg
and
dec
daa
mov
lcall
add
push
and
xchg
sub
and
in
pop
fnstenv
pop
rol
mov
sub
or
cmpsb
cltd
shlb
or
aad
inc
int3
sbb
nop
aas
jp
adc
out
adc
sbb
sbb
xor
jo
push
inc
pop
cmp
and
mov
imul
test
in
ljmp
xor
out
hlt
push
push
hlt
fcmovb
push
mov
xchg
idiv
push
xor
jno
int
out
dec
xchg
gs
or
add
std
icebp
push
jae
negl
rorl
cmp
push
dec
fsubs
pusha
xor
hlt
mov
push
mov
scas
xchg
out
mov
adc
and
adc
gs
xchg
xchg
jmp
adc
sbbl
adc
scas
in
rclb
cli
jl
xchg
mov
mov
mov
popa
inc
into
movsl
push
cmpsl
in
xor
and
cmc
in
loope
mov
fmul
jmp
outsb
xor
dec
ds
push
ficomps
and
movsl
sub
push
and
dec
fbstp
ljmp
repz
mov
jecxz
insb
push
inc
mov
pop
jb
dec
xlat
xchg
adc
cmp
fildl
cmp
idivl
lcall
mov
cld
aad
fisubrs
mov
inc
imul
outsb
imul
or
nop
aad
jp
shl
push
sub
sub
jl
and
jns
sub
jae
dec
and
in
xlat
imul
pop
es
negl
shr
out
call
fidivs
jbe
push
sub
cmp
or
mov
jge
pop
adc
pop
in
aad
push
enter
mov
loopne
xorl
stos
aaa
adc
hlt
insl
sub
pop
fsts
loopne
sbb
jge
cmp
xor
js
xchg
dec
mov
inc
pop
lea
cmp
arpl
pop
insl
mov
lods
mov
sbb
adc
sarb
mov
dec
movsl
dec
sbb
lea
or
add
mov
fistpll
cs
jge
inc
das
pop
loopne
push
push
adc
cmpl
ds
cmpsl
and
mov
cmp
cmpsb
mov
push
xchg
or
das
fdivl
adc
inc
aam
and
push
xchg
mov
sbb
gs
dec
add
inc
xchg
mov
mov
cmp
mov
pop
dec
lock
mov
mov
mov
iret
jp
jmp
jge
push
pop
ja
sbb
jne
mov
call
mov
ds
cmpsb
cmp
sti
mov
jecxz
fs
cmp
fisttpll
dec
int3
rol
popf
cmpsb
loopne
fdivrs
je
aaa
orl
push
lret
push
adc
in
repz
test
cwtl
into
call
mov
inc
dec
sti
sub
rcrl
mov
int3
push
xor
fcoms
push
adc
add
hlt
and
cmp
les
pop
fisttpl
or
push
xor
popa
and
in
ja
mov
pop
aad
xchg
repz
pop
shl
js
enter
mov
out
into
test
mov
push
sub
shrb
cmpsl
adc
aaa
jb
shrb
jp
dec
and
lret
icebp
mov
hlt
add
call
push
sub
dec
mov
and
adc
mov
mov
mov
lods
rcll
cmc
mov
push
xlat
sub
mov
imul
xchg
es
addr16
enter
pop
inc
pop
or
ret
xchg
jl,pn
jbe
popa
repnz
jbe
sub
mov
movsb
dec
jg
mov
and
fiaddl
pop
je
cmp
ss
les
repnz
push
and
jl
je
pop
mov
xlat
call
jmp
sub
iret
leave
push
int3
cmp
jns
sti
mov
or
sbb
movsl
push
enter
repnz
jo
pop
or
pop
jecxz
push
in
push
cmpsb
popf
int
movl
sbb
dec
jb
pop
push
movlhps
xchg
inc
xor
xchg
pop
shlb
fcoms
je
fs
nop
ja
dec
fdivrs
mov
stos
pusha
mov
in
dec
ret
aas
dec
pop
js
add
push
xor
inc
pop
mov
sbb
inc
inc
addr16
stc
mov
push
pop
inc
add
stos
popf
lret
outsl
inc
repnz
push
jo
adc
add
mov
dec
daa
inc
dec
arpl
cs
fdiv
in
cmpsl
out
mov
xchg
mov
sub
call
sbb
lret
shlb
push
mov
or
adc
and
cmp
aad
cli
pop
mov
jle
push
inc
insl
out
xor
add
xchg
loop
notb
insl
xchg
cmp
mov
xchg
fstl
das
lret
pop
ret
ja
pop
push
sbb
je
ja
lods
addl
test
dec
xchg
cmp
dec
xlat
lea
cmp
sbb
out
shl
movsb
insl
adc
pop
and
jp
sub
leave
je
push
int3
cmp
sbb
push
or
andb
xor
in
test
cwtl
xchg
lods
pop
aas
sbb
repnz
rclb
fprem
adc
lcall
xor
lds
adc
sub
orl
xchg
adc
push
rol
pop
repnz
inc
hlt
ret
stos
dec
pop
jp
ror
orb
aad
out
aam
mov
nop
ret
ljmp
aaa
scas
aas
pusha
xor
test
inc
push
jb
stos
jno
xchg
insl
pushf
fwait
and
mov
inc
xor
pop
inc
in
jp
add
xor
es
arpl
pop
movsl
hlt
push
and
js
jge
add
das
cmp
xchg
test
shl
mov
dec
pop
xor
jl
and
jp
sahf
sbb
dec
test
mov
cmp
adc
daa
int
inc
or
push
jbe
xor
mov
xchg
or
push
out
push
dec
cmp
sbb
jge
cld
xor
aad
add
scas
xor
les
xchg
mov
ret
xchg
sbb
cmp
pop
stos
out
sub
aas
stc
in
popf
fidivl
xchg
sub
fimull
or
dec
cld
aaa
xchg
loopne
xchg
loopne
hlt
sub
imul
jg
in
mov
dec
mov
arpl
fsts
fiaddl
fstl
inc
or
andl
adc
lret
mov
addr16
out
fmull
xchg
stos
adc
enter
inc
insl
jbe
in
jmp
inc
sbb
aaa
or
rolb
jge
push
cmpb
ret
xchg
stos
mov
std
stos
scas
cli
jno
cmp
jno
mov
lods
lods
sarl
dec
aaa
int
sbb
xchg
mov
fmul
lds
cli
into
jecxz
stos
scas
outsb
jb
fiadds
xor
rcll
jecxz
lods
pop
cmp
cmc
addr16
add
mov
jbe
clc
ja
test
mov
add
sub
cmp
and
jp
push
aam
mov
and
sti
xor
repz
mov
stos
xchg
pop
inc
mov
fsts
jbe
pop
adc
outsb
or
cli
jge
lds
cmp
shl
add
daa
movsl
lret
jg
testb
jl
mov
xchg
jb
popa
push
ds
test
xor
cltd
out
loopne
cs
maskmovq
mov
dec
or
nop
gs
ss
gs
mull
or
pmaddwd
data16
push
test
shl
sub
iret
cmc
lods
inc
ret
mov
lock
addr16
xchg
add
std
sti
jecxz
loopne
or
sub
push
arpl
shl
lock
push
pop
jb
pop
xchg
mov
fnstcw
or
mov
outsl
pop
pop
ud0
pushf
int3
jne
jbe
xlat
sbb
cmpsb
sub
cli
mov
ja
jmp
xchg
leave
iret
push
push
adc
pop
or
jbe
in
add
repnz
mov
test
and
lret
adc
inc
sarl
mov
test
loopne
mov
and
fiaddl
jbe
rcll
test
cwtl
scas
movsb
in
fs
or
push
les
jne
sbb
insl
fisttpll
sbb
filds
andb
jmp
iret
addr16
repnz
mov
jmp
insb
dec
lea
sub
sub
mov
ja
mov
addr16
cld
ud2
and
jge
push
sahf
mov
rcl
add
lods
arpl
adc
call
mov
push
cmp
lcall
mov
mov
dec
sbb
data16
cltd
mov
lret
or
xchg
dec
cmpsl
adc
sti
dec
pop
push
gs
shlb
call
icebp
and
clc
inc
mov
xor
test
fldt
out
sbb
daa
sub
xchg
shl
faddl
inc
mov
movsl
mov
rcll
pusha
repz
lock
cs
imul
rcr
ljmp
call
iret
pop
jmp
xchg
mov
movsb
aam
sbb
ja
xor
sbb
adc
sbb
ljmp
ljmp
jle
filds
jmp
daa
movsl
and
jp
fwait
daa
fadd
mov
mov
call
jbe
mov
cltd
add
cmpsl
push
aas
jne
rcl
rcr
pop
leave
mov
jbe
daa
xor
out
icebp
add
pushf
xor
addr16
fsts
ret
jno
and
lret
ljmp
sarb
add
das
ja
mov
mov
out
push
mov
dec
insb
repnz
cmp
aas
or
or
daa
xchg
xchg
sbb
adc
lahf
mov
in
popa
stos
or
out
sbb
inc
cli
in
mov
test
push
mov
mov
xor
adc
push
cmp
pushf
cmp
shl
aad
dec
les
or
arpl
sub
mov
rcr
shlb
mov
hlt
xor
js
or
jecxz
dec
lea
fbld
scas
mov
dec
arpl
cwtl
js
imul
fwait
lea
loopne
jge
out
mov
or
xchg
fistpl
inc
cld
jmp
in
movsl
mov
out
pop
cld
mov
bound
aam
xchg
cld
fadds
adc
movsl
or
lahf
jmp
aaa
out
cmp
ret
jns
test
pop
or
push
inc
push
inc
aas
daa
or
jne
fwait
adc
push
push
mov
jne
popa
icebp
cwtl
dec
aad
fcmove
lds
jmp
mov
adcl
shl
nop
push
dec
pop
gs
and
icebp
pop
enter
push
mov
add
pushl
xor
sub
aaa
adc
sbb
ss
stc
fisubrl
aad
pop
mov
xchg
call
fwait
push
or
mov
push
ficomps
ret
ret
and
ljmp
jecxz
rcrb
cmp
mov
add
cli
arpl
jb
mov
mov
xchg
in
mov
jns
in
pop
hlt
ret
fldl
sti
sub
sbb
lahf
mov
inc
jnp
lds
popa
xchg
dec
mov
insb
in
insl
mov
sub
jnp
mov
icebp
or
or
mov
inc
mov
inc
ret
pop
add
mov
mov
push
sbb
call
nop
mov
dec
mov
mov
sub
jbe
clc
aaa
push
daa
es
dec
mov
cmpsl
inc
pushf
loop
ja
mov
test
mov
adc
jmp
xchg
fnstenv
or
cmc
insl
daa
dec
fisubl
adc
repnz
rclb
adc
sbb
lds
fwait
mov
cmp
fnstcw
mov
fimuls
jg
cwtl
in
pop
dec
aaa
ljmp
mov
int
mov
movb
push
lods
jmp
or
rclb
repz
push
push
push
fidivrs
jmp
scas
scas
adc
adc
and
aaa
or
or
aad
sahf
call
shrb
or
cli
mov
and
in
lds
cmp
cli
mov
lret
lret
movsl
jb
shll
lcall
mov
mov
pop
mov
imull
add
mov
jmp
aam
mov
sahf
ss
push
enter
sub
out
fimull
mov
cmpsb
and
jo
mov
stos
inc
pop
xor
fcomps
push
inc
fimuls
xchg
sub
sub
and
sub
dec
fisttpl
call
and
ret
mov
outsb
dec
cltd
xchg
add
mov
mov
cld
lea
loope
pop
xchg
ret
out
out
adc
sti
outsb
rclb
mov
or
push
and
imul
add
jecxz
or
mov
ret
add
push
ficompl
jge
push
and
xchg
pop
adc
pop
scas
add
mov
sbb
in
stc
sbb
mov
lcall
mov
mov
sub
push
mov
dec
dec
pusha
pop
cld
xor
pop
adc
ss
je
dec
fdivs
stos
push
imul
dec
js
loope
or
mov
push
sbbl
push
mov
jp
int3
cs
sbbl
int3
es
mov
xchg
mov
call
sub
and
scas
aas
lahf
push
cltd
fbstp
data16
jnp
pop
insb
pop
sub
ss
dec
pop
les
sti
sarl
xchg
xchg
cltd
adc
pop
je
sub
cmp
fsubrl
cltd
imul
aaa
mov
cld
inc
pop
dec
jb
fldt
dec
jg
iret
outsl
cwtl
bound
clc
cmpsl
dec
xchg
in
std
mov
push
bound
push
xchg
xchg
pop
pop
mov
cli
jne
pusha
punpckhwd
dec
pop
test
aam
mov
inc
loope
decl
mov
insb
lret
inc
inc
ljmp
shlb
sbb
xchg
cli
mov
test
fwait
ret
cmc
and
jb
icebp
pusha
dec
scas
inc
mov
xchg
std
xchg
mov
mov
xchg
sub
cld
imul
ret
mov
pop
out
fidivs
ja
mov
mov
lds
lods
out
xchg
adc
decl
imul
andb
adc
dec
stos
scas
loope
or
jle
lcall
out
arpl
std
repz
leave
push
gs
sub
sar
mov
mov
mov
pop
push
repz
and
lods
or
fisubl
fwait
mov
gs
mov
fsubrl
inc
aad
mov
inc
xor
push
pop
cltd
imul
outsb
mov
dec
mov
cmp
repz
xchg
and
xor
dec
mov
adc
dec
mov
ret
enter
repnz
mov
cmp
into
inc
aas
cmpsl
mov
jmp
dec
add
sbb
mov
or
std
mov
jecxz
xchg
pop
pop
pop
mov
ret
sbb
cmp
jae
jbe
adcb
fdivrl
lods
or
xchg
sub
shll
sbb
xor
mov
push
aad
and
jecxz
push
adc
mov
aas
nop
mov
xchg
in
nop
pop
stos
mov
fucomp
pusha
pushf
decl
rorl
sub
push
pop
or
js
jnp
sbbb
fs
orb
in
rolb
cmp
inc
or
and
cmc
pop
mov
mov
sar
push
fsubrl
mov
mov
xchg
xchg
adc
add
call
outsl
xchg
ljmp
mov
lock
push
in
jo
sti
mov
fists
loope
dec
ret
mov
sbb
loop
pusha
mov
pop
leave
icebp
fidivs
rcll
jns
aam
popa
rep
cmpsb
sti
mov
popl
xlat
or
scas
les
pop
mov
js
push
scas
xchg
cmp
out
sti
nop
jmp
mov
mov
pop
mov
sbb
inc
push
cmp
mov
adc
add
and
inc
leave
sub
inc
cmp
mov
sbb
dec
jecxz
mov
in
lock
lds
or
xor
xlat
lds
push
inc
leave
and
cmp
add
and
cltd
aas
lods
adc
outsb
xor
int3
xor
inc
loope
outsb
shlb
inc
jp
ret
adc
stc
push
xchg
cmpl
inc
cmc
jns
mov
jno
inc
bound
hlt
ljmp
jae
aad
sub
cmp
pop
xor
jnp
xor
insb
sbb
gs
mov
jne
pusha
mov
mov
lret
push
cmc
into
repnz
adc
sbb
jo
int
push
jae
lret
jp
mov
add
mov
mov
leave
mov
ret
fadds
ror
add
add
imul
movsl
in
mov
repz
pminub
mov
or
or
cs
scas
dec
arpl
js
inc
add
push
fsubrp
inc
mov
or
les
jnp
mov
cmc
lds
idivb
stos
and
ss
pushf
dec
dec
inc
fcomps
pop
dec
out
aas
pusha
xlat
dec
mov
and
mov
int
cmp
add
pop
stc
jbe
mov
and
adc
lea
xchg
add
jp
push
mov
sbb
enter
xchg
fst
sub
jg
out
xadd
pop
bsf
lods
lea
aad
arpl
ds
dec
sub
test
pusha
xchg
in
outsb
push
arpl
sub
je
adc
dec
mov
jae
or
sub
sbb
mov
or
cmovnp
mov
test
mov
mov
imul
popa
ficoms
pop
add
leave
bound
mov
clc
pop
jle
jne
pop
cmp
mov
test
lods
xabort
mov
adc
cmp
jecxz
out
fistps
jl
aaa
fisttpl
mov
adc
out
shll
loope
int
or
stos
sub
pop
dec
test
fs
inc
into
std
jnp
out
cmp
rcl
js
inc
xchg
sti
xchg
std
in
xchg
arpl
mov
jae
out
jecxz
jmp
fstl
sbb
or
or
in
testl
pop
dec
popf
pop
cmp
jb
dec
cmpl
cmp
sahf
jno
and
shll
repz
dec
cwtl
inc
push
lcall
std
fsts
jp
lret
push
pop
int3
mov
data16
sti
jge
test
inc
ljmp
xor
repz
mov
adc
fdivl
loop
mov
ret
hlt
xchg
cmpsb
jbe
sbb
sbb
pop
scas
scas
ljmp
pop
popl
push
mov
out
mov
xor
and
fistps
adc
adcb
dec
outsb
movsb
shrl
and
in
adc
ljmp
lcall
adc
and
out
jns
pop
fisubrl
insb
sbb
push
lcall
fsubp
add
fdivrl
out
mov
mov
pop
mov
xlat
xchg
mov
lock
xor
mov
adc
mov
xlat
negl
rcll
mov
sub
and
jnp
and
pushf
mov
enter
pop
fcmovnu
jmp
add
lcall
mov
mov
scas
pop
and
ja
cld
daa
mov
sub
jl
jg
jp
mov
fisttpl
mov
mov
jbe
out
and
ljmp
xor
fs
mov
enter
jp
test
xorb
je
xchg
mov
movq
sbb
mov
inc
xor
cld
jno
sub
xorl
outsl
sub
std
push
jo
sbb
mov
stos
shll
rcrb
push
leave
lcall
insl
xor
mov
xor
mov
xor
or
cmp
mov
movsb
push
and
pop
in
push
cld
sub
pop
mov
dec
or
in
dec
sub
xchg
jge,pt
in
xchg
mov
mov
popa
inc
mov
aas
in
outsl
mov
sub
push
mov
sbb
data16
rcll
scas
std
pop
jg
dec
add
add
test
mov
mov
cwtl
insl
dec
imul
sbb
inc
shr
xchg
je
xchg
jle
fnstenv
out
bound
stos
repnz
scas
and
adc
scas
jmp
cmp
sub
jge
cs
pop
repnz
xor
jne
sbb
push
les
icebp
mov
xor
insl
in
inc
stc
jno
dec
enter
and
int3
sbbl
mov
push
cwtl
or
div
loopne
inc
fmulp
sbb
jb
test
sub
ja
adc
push
loop
scas
or
push
imulb
scas
sar
fimull
xchg
sahf
and
pop
aad
js
sbb
xchg
cmpb
push
fsts
and
fs
add
xor
hlt
mov
lret
sbb
in
orps
out
fwait
shl
popf
push
and
inc
or
dec
mov
enter
add
nop
insl
sbb
pop
movsl
mov
aad
fimuls
mov
inc
imul
dec
inc
mov
sbb
push
sti
jo
ffreep
andl
jmp
idiv
xor
test
or
iret
fsubs
fldcw
jnp
inc
inc
fs
fidivrs
ret
daa
das
push
pop
jo
popa
push
jge
test
movsb
adc
lcall
adc
jg
pop
decb
pop
xchg
test
repz
outsb
mov
loope
lock
jp
hlt
add
mov
call
rolb
int3
fwait
or
mov
lea
jl
repz
out
or
mov
cld
adc
mov
jle
xchg
dec
xchg
inc
ja
and
pop
fsubr
hlt
lods
sbb
push
jnp
pusha
and
loop
cmp
push
mov
jne
in
mov
rclb
pop
xchg
sbbl
push
add
dec
ror
and
xor
sbb
cmpsb
call
xor
clc
pop
rcr
fisubs
sub
ret
cli
jnp
pusha
push
mov
adc
insl
ja
pushf
stc
stos
cmp
pusha
pop
addr16
lret
stos
cltd
pop
sub
call
test
test
dec
cmc
inc
jo
cmpsb
or
cmp
outsl
mov
add
int
jl
cmc
iret
iret
sub
ljmp
xchg
mov
cltd
flds
roll
push
scas
stos
mov
pop
imul
orb
push
jle
push
enter
js
hlt
cli
pop
adc
inc
lcall
rcll
mov
lods
call
cs
aam
stos
lea
mov
inc
iret
inc
nop
daa
xchg
std
lds
sub
push
pop
das
fistpll
std
rcll
dec
arpl
les
mov
dec
je
push
sub
scas
mov
pop
cmp
cmp
lret
sti
adc
pop
inc
sub
pop
and
sahf
push
inc
fs
jecxz
loopne
inc
jne
xor
mov
pop
and
mov
xchg
inc
add
mov
jo
out
xchg
lahf
pop
push
popf
jnp
lret
jae
pop
and
inc
add
sbb
sub
adc
fwait
mov
nop
mov
and
xor
push
ret
jmp
add
lds
stos
sub
repnz
sub
mov
into
push
sti
mov
jo
pop
test
and
or
fsts
test
push
enter
xor
rorl
mov
xor
movsb
pop
and
popa
fs
lcall
cmp
xor
mov
mov
mov
xor
pop
fistps
dec
or
and
insl
jle
and
ret
imul
xor
add
test
xchg
ljmp
mov
push
aaa
js
adc
sub
jp
xchg
jecxz
clc
xchg
in
nop
imul
pop
mov
fs
cmpsl
loope
mov
adcb
hlt
xor
lea
out
int
fwait
push
fidivs
pushf
inc
or
xor
or
data16
movsl
mov
pop
rol
les
add
mov
push
pop
lods
mov
sub
xor
add
gs
jne
pop
dec
fwait
sbb
cs
mov
inc
xchg
sbb
mov
mov
js
xchg
jns
inc
mov
or
jecxz
add
jbe
add
push
and
ljmp
or
push
or
mov
mov
pop
xchg
jne
dec
enter
adc
jle
mov
pop
test
call
sbb
hlt
push
xchg
mov
inc
stc
xor
enter
jb
jecxz
xor
cmp
loopne
cld
dec
out
insb
jl
push
xor
out
sub
adc
stc
jmp
cli
mov
sbb
mov
dec
dec
dec
lds
add
xchg
mov
dec
in
in
jns
pop
rolb
lret
fistpll
out
jg
outsb
sbb
or
imul
pop
sub
dec
dec
sub
lods
in
daa
jbe
sti
inc
das
or
inc
movsl
lahf
cmc
sbbl
out
out
sbb
int
mov
out
lahf
sbb
mov
sarl
movhps
push
xor
sub
shll
add
loope
inc
pop
xchg
xchg
pop
imul
jl
mov
dec
je
cmp
mov
mov
xchg
xor
notb
sbb
mov
out
ss
fidivs
inc
aam
mov
test
scas
flds
test
js
fidivs
aam
and
cmpsl
xorl
cli
and
cltd
sbb
inc
inc
add
add
stos
xor
pop
cltd
stos
lds
add
mov
fwait
dec
es
xchg
mov
add
sarb
mov
out
jo
popf
cmp
sub
clc
incl
xchg
cmc
loopne
arpl
mov
sbb
je
mov
lds
dec
out
mov
call
and
in
adc
dec
dec
xchg
shl
dec
in
das
jecxz
xor
es
fmuls
mov
hlt
movaps
imul
and
pop
clc
ret
scas
xlat
sbb
push
cmp
pop
pop
xor
in
push
aas
sbb
mov
arpl
in
add
cmp
jp
sbb
test
mov
adc
out
dec
inc
pushf
jno
push
dec
push
adc
imul
popf
xor
and
mov
clc
arpl
imul
and
or
adc
cli
and
sub
test
add
popf
sub
mov
cmp
pushf
rorl
test
imul
inc
repz
rcll
out
push
fs
pop
push
shll
loope
clc
js
sub
js
sub
or
xchg
mov
and
inc
xchg
ret
sti
add
sub
test
js
adc
inc
pop
jns
inc
xor
and
cmc
mov
shl
imul
lcall
sahf
mov
add
dec
push
xor
or
add
add
pop
out
and
cltd
cltd
mov
scas
xchg
adc
xor
cmc
pop
and
out
stos
rol
mov
scas
or
ss
and
mov
je
dec
xchg
gs
popf
add
mov
and
adc
cld
push
and
stc
inc
mov
xor
push
mov
xor
push
pushf
and
sub
inc
jg
mov
cli
xor
inc
and
push
scas
cmp
xchg
outsb
int
adc
and
in
xchg
mov
insb
and
xor
mov
mov
out
sub
jbe
push
pop
adc
aas
mov
fsubl
daa
lret
adc
loop
cltd
pop
mov
into
xor
cmpsb
in
mov
stos
dec
scas
sub
test
or
cmp
mov
xchg
aaa
push
or
icebp
and
addr16
push
cld
lret
loop
aaa
inc
push
ljmp
xchg
scas
or
dec
pop
xchg
add
mov
push
cmc
mov
add
jb
xchg
pop
jbe
scas
lods
js
out
mov
sub
cwtl
fnsave
xor
iret
mov
pop
adc
cmp
cmp
test
jno
addr16
pop
insb
ret
pushw
pop
and
ds
pusha
add
lcall
arpl
cmpsb
push
pop
dec
pop
sub
mov
add
push
xchg
sub
pop
and
or
scas
dec
or
mov
or
in
pavgw
xor
xor
addr16
aaa
cltd
movsb
pusha
fsubrl
fildl
das
insb
addl
jne
jnp
mov
dec
mov
sbb
jecxz
mov
push
pop
lret
mov
inc
sahf
stos
dec
cmp
imull
add
out
jbe
and
mov
outsb
stc
test
mov
loopne
lods
leave
jmp
mov
mov
mov
adcb
inc
sbb
pop
mov
cmpl
sti
sbb
pop
test
push
fucom
mov
and
inc
xor
dec
ss
sarb
in
in
cmp
mov
pop
adc
clc
pop
inc
inc
fbstp
lret
dec
sbb
adc
and
popa
stos
inc
call
adc
icebp
mov
or
pop
int3
inc
cmc
inc
ss
loopne
call
jns
jo
mov
inc
dec
stos
in
pop
mov
adc
aaa
push
dec
inc
adc
jmp
push
sti
add
and
rcll
fs
or
cltd
push
add
cli
aas
xchg
xchg
pop
loopne
or
jge
movsl
lret
dec
or
jae
push
ret
xchg
jl
mov
cwtl
xchg
push
push
mov
rcll
mov
jbe
repnz
fsubrs
inc
add
repnz
fwait
dec
hlt
push
jo
sub
cli
mov
xchg
sub
or
data16
add
fs
mov
adc
rorl
arpl
js
incb
jmp
inc
mov
jecxz
jne
pop
adc
inc
pop
je
sbb
das
lods
ret
not
js
sub
shlb
in
ss
arpl
xchg
dec
xor
inc
subb
mov
dec
imul
mov
push
sub
lods
cmp
aad
sub
sbb
roll
and
and
jae
aam
icebp
mul
mov
fldcw
outsl
dec
fdivl
repz
dec
xor
adc
sbb
leave
mov
add
sahf
pop
out
jb
subb
add
shlb
ud2
sub
adc
xchg
int3
inc
dec
cmc
inc
iret
jge
pop
jle
pop
pop
jl
cmp
cmp
adc
push
clc
or
bound
out
cwtl
mov
adc
push
mull
icebp
mov
xchg
jl
sub
test
ja
stos
add
insb
mov
inc
dec
pop
push
es
das
and
or
and
xor
and
mov
jae
lock
sub
inc
pop
jae
mov
xchg
lock
and
std
and
in
in
sub
out
xchg
push
lcall
adc
add
pop
fsts
outsb
lahf
add
dec
and
ss
das
lock
imul
add
out
out
push
cld
push
aaa
imul
les
popa
add
mov
arpl
pop
adcl
std
sahf
mov
sbb
push
or
cmc
and
sti
jmp
push
test
loop
fld
dec
insb
jnp
lods
mov
cwtl
jle
movb
adc
sbb
push
pop
out
and
push
sbb
mov
xchg
aam
jp
cmp
addr16
imul
xor
je
xchg
pop
in
add
jb
push
add
pop
lret
imul
adc
push
test
pop
push
inc
mov
movsb
jl
out
scas
je
dec
inc
movsb
xor
pop
insb
bnd
pushf
dec
pop
outsl
lret
rolb
mov
jbe
std
into
dec
mov
pop
inc
xor
dec
jge
mov
iret
xor
in
push
mov
test
jge
xchg
mov
or
lret
push
ss
call
stos
dec
enter
add
mov
jg
shll
push
jne
add
mov
sbb
pop
addr16
iret
adc
lcall
adc
mov
es
xor
mov
popa
rcl
xor
in
loope
mov
aaa
mov
push
loopne
pop
jmp
mov
cmp
clc
nop
mov
adc
clc
xor
fxch
comiss
xchg
je
xor
loopne
inc
xchg
dec
sub
imul
mov
iret
mov
cmpl
cmp
mov
das
dec
jecxz
movsl
jno
popf
cmc
rcl
arpl
pop
pop
inc
out
aam
int3
cmc
mov
mov
ds
xlat
mov
das
pop
jne
adcb
pushf
adc
scas
fsubs
cmp
hlt
in
outsl
outsl
std
inc
popa
je,pn
mov
cs
sub
dec
ss
add
aaa
arpl
mov
aas
sub
inc
mov
and
push
bound
daa
out
cmc
mov
inc
stos
mov
sub
test
pop
sub
iret
rorl
fmuls
sbb
jb
mov
mov
adc
fldcw
notl
cmc
mov
xchg
xor
mov
pushf
pop
push
insb
mov
mov
mov
pop
sbb
mov
jmp
xchg
push
repz
mov
fadds
lahf
aad
jmp
clc
xchg
out
cwtl
loop
fistpl
lds
add
push
jmp
fsubr
loopne
mov
cs
mov
div
nop
out
mov
aas
push
xor
mov
lock
int3
lret
adc
push
pop
repz
and
pop
es
mov
imul
push
test
jmp
add
sub
dec
push
stos
test
mov
imul
imul
mov
xor
mov
or
pushl
and
mov
cmp
orl
mov
popa
rolb
xchg
popf
inc
adc
xchg
inc
mov
movsl
mov
cmpsl
jmp
xchg
pop
stos
imul
cmp
lods
inc
adc
inc
mov
cmpsb
push
addr16
mov
repz
sahf
mov
fbld
in
fcomps
xchg
insb
mov
pop
or
or
addr16
mov
mov
cmp
pop
test
stos
popl
int3
add
gs
inc
inc
jne
dec
repnz
inc
pushf
lods
push
fidivrs
push
ss
ss
adc
cmp
lahf
xchg
mov
loop
mov
xchg
fidivrs
jne
or
sub
adc
je
pop
inc
push
repz
dec
ljmp
jo
cmp
imul
adc
lods
xor
dec
xchg
stos
dec
cmpsl
and
aaa
cltd
mov
jmp
arpl
gs
adc
jnp
sub
cli
jae
outsb
hlt
mov
jo
xchg
scas
fwait
popa
imul
fisttpl
lods
mov
jp
adc
push
pop
xor
inc
adc
or
jecxz
push
subb
mov
pop
fnstsw
sub
scas
sub
push
pop
pop
mov
cwtl
add
pop
aas
fists
xchg
mull
mov
ja
cmpsl
add
jmp
or
mov
sbb
jmp
push
dec
cmp
inc
lret
iret
nop
ja
push
clc
cmp
movsb
gs
arpl
pop
ljmp
jg
mov
pop
movsb
leave
outsb
daa
sub
negb
scas
bound
xchg
jg
cmp
data16
jne,pn
imul
sbb
je
mov
cli
arpl
mov
add
fisttps
mull
testb
jbe
sbb
popa
push
adc
or
mov
jecxz
or
mov
mov
aad
xchg
push
and
push
mov
mov
insb
mulb
je
sahf
arpl
shrl
pushf
push
and
test
add
push
dec
adc
sub
or
adcl
jns
aad
jno
add
push
pop
sub
or
cld
movsl
jbe
xor
add
mov
iret
xchg
push
mov
ljmp
or
push
pop
sahf
outsb
mov
xor
test
idivb
push
add
pop
xchg
bound
push
pushf
test
xchg
roll
mov
loopne
lret
int3
jp,pn
mov
movsb
jg
lret
add
sbb
popf
repnz
cmp
vsqrtss
mov
push
jne
and
dec
cltd
daa
addr16
adc
jae
cli
push
xor
mov
add
mov
jl
cltd
out
stc
push
pop
mov
adc
cmpsb
into
jmp
dec
adc
popa
daa
mov
inc
mov
int
dec
and
cmp
in
push
ljmp
mov
and
repz
cmp
pop
push
adc
cmp
cmpsl
dec
sub
les
fcmovnb
lahf
xor
sbb
addl
xorb
xchg
pushf
popf
repz
xchg
stc
fdivl
fdivl
bound
pop
jne
mov
sub
mov
into
adc
mov
imul
or
andb
jmp
popa
dec
loope
cld
sbb
add
loop
jmp
or
dec
fistps
sub
mov
loope
clc
idiv
xchg
adc
xorb
repz
aad
lret
jno
rcll
xlat
fs
lods
out
mov
aas
hlt
scas
pop
mov
mov
push
sub
pop
sarb
inc
sub
push
fdivrs
cmp
cli
adc
fs
xor
push
int3
out
lea
xchg
and
cmp
lcall
cmc
paddd
sub
xor
adc
pop
out
in
enter
push
pop
push
xorb
xchg
test
lods
fisubrs
cmp
stc
int
std
pop
ss
pop
adc
aaa
popa
mov
mov
stos
mov
ss
bound
clc
out
ret
dec
mov
sub
mov
jmp
jo
add
test
lahf
jl
xor
mov
xchg
xor
lret
inc
into
sub
jbe
inc
xchg
jno
sbb
inc
std
xchg
cmp
pop
pop
mov
clc
scas
in
pop
dec
lods
pop
jmp
mov
gs
mov
sbb
std
arpl
lahf
test
and
repnz
test
jae
adc
mov
mov
scas
js
pop
ja
xchg
mov
cmpsl
stc
test
pop
and
out
add
icebp
fwait
hlt
pop
push
mov
xor
imul
and
gs
jp
test
xor
dec
mov
mov
pop
cmpsb
add
rorb
mov
jno
mov
mov
push
xchg
mov
cltd
sahf
xlat
and
add
fsubs
push
or
cli
faddl
stos
xor
inc
cwtl
adc
inc
xorl
add
hlt
or
and
aam
lods
inc
pushl
add
int3
out
and
mov
mov
mov
pop
inc
xchg
or
test
dec
rclb
push
xor
ds
pop
mov
add
adc
inc
stc
inc
mov
or
add
xchg
les
ficompl
add
test
mov
lret
xchg
pop
cmp
adc
in
mov
pop
ja
in
jbe
push
and
sti
add
mov
out
aam
mov
and
jne
ret
cld
cmp
lahf
jo
and
bound
jmp
mov
repz
and
lahf
leave
xchg
gs
jae
mov
xchg
mov
sub
xchg
cli
xchg
sub
cwtl
mov
rcrl
sbb
or
gs
cwtl
lea
mov
fst
sbb
ret
lea
cmp
leave
rcrl
cwtl
sub
mov
jmp
iret
insb
adc
sbb
mov
hlt
sub
jb
and
mov
cmp
inc
imul
sbb
mov
imul
jmp
pop
adc
jmp
test
loop
ss
jmp
ret
jbe
adc
jns
lock
lock
cmp
scas
je
add
fcmovbe
and
inc
xchg
test
push
xchg
add
aad
push
pop
fistpl
aas
push
jl
aad
pslld
divb
inc
das
mov
mov
movsl
test
or
xor
jbe
jo
mov
imul
iret
cmp
pop
inc
mov
pop
das
decl
mov
jne
sbb
enter
mov
jns
ss
xor
inc
adc
dec
xchg
pop
and
or
jg
test
sbb
jge
mov
cmp
xor
ret
insl
mov
cmp
rcrb
add
inc
iret
filds
add
mov
jg
or
mov
add
jb
sti
loop
loope
jno
mov
xchg
inc
in
cli
xor
push
cld
add
cmpb
pop
pop
mov
sbb
mov
pop
scas
loopne
mov
or
ret
cld
mov
sub
scas
test
bound
out
cmp
xor
and
test
shr
lcall
xchg
xchg
mov
sbb
sbb
inc
ret
dec
or
xchg
add
jbe
or
pop
fcoms
inc
or
movsl
adc
leave
mov
or
push
or
cmp
mov
cmpsb
in
mov
jbe
xorl
add
pop
inc
add
aas
pushf
pop
lret
inc
imul
inc
and
adc
pop
xchg
xor
cltd
inc
jmp
push
jnp
lcall
stos
imul
test
cmpb
gs
fwait
jb
dec
xlat
jne
pop
jne
lcall
movsl
cmp
popf
jmp
je
sub
lret
dec
mov
push
daa
popf
fistpll
addr16
je
push
cs
cmpsb
add
and
roll
out
addb
push
addr16
mov
add
jle
fwait
sbb
shll
mov
sahf
andb
in
cmp
xchg
xor
jmp
popf
sbb
je
push
pmuludq
pop
aad
xchg
mov
mov
add
pop
fsubl
popf
jle
sahf
cld
xor
aad
repnz
jp
inc
push
pop
xor
mull
xor
dec
lods
fmul
xchg
mov
and
xor
mov
xchg
mov
fimuls
std
inc
jmp
into
dec
lret
jecxz
mov
pop
repz
nop
in
hlt
nop
loope
lea
out
movsb
in
and
das
dec
or
out
inc
in
out
add
popf
xor
dec
sub
pop
scas
and
add
and
dec
jno
ficompl
ret
xchg
cmc
mov
cmp
mov
or
ss
xor
insl
insl
mov
pop
mov
mov
or
xor
outsl
jno
ljmp
adc
iret
aam
cwtl
cli
xchg
or
mov
lea
dec
js
add
xor
lcall
and
adc
jbe
sub
pop
inc
cmp
in
ss
pop
and
lds
daa
mov
or
add
dec
add
andb
pop
mov
mov
push
enter
sub
fidivl
popf
ss
inc
or
jo
jnp
xchg
lock
sbb
cltd
sub
in
in
fsubl
into
sbb
push
and
outsb
jo
fwait
and
jb
mov
ret
pop
test
xlat
adc
mov
or
push
push
cmc
repnz
adc
fists
push
movsl
cltd
jp
inc
cmp
jmp
xchg
cmpsl
xor
cmc
iret
mov
xor
jecxz
fiaddl
sbb
and
xchg
rorl
stos
rorl
push
ss
lods
inc
adc
inc
mov
int
pop
xchg
imul
xchg
addr16
fstpl
jbe
add
pop
sbb
or
sub
aas
movsb
ret
out
jno
xchg
xchg
outsl
pop
test
fiadds
sbb
aad
jbe
pop
ds
jns
pusha
push
sti
cltd
in
sub
cli
inc
xchg
add
lods
pop
mov
fdivrl
pushf
jl
adc
xchg
xlat
out
push
lds
pop
pop
cwtl
add
dec
push
ror
rolb
shr
nop
cli
scas
ret
mov
stos
pop
sbb
notl
push
jnp
add
xchg
or
jp
enter
in
aad
cltd
loopne
jo
jno
sti
mov
scas
lea
les
cld
gs
int
sbb
dec
testb
mov
inc
mov
mov
in
leave
test
jge
and
mov
or
jl
pop
add
cli
mov
jbe
inc
mov
xchg
inc
ss
ja
cmp
addr16
ljmp
shrl
popf
int3
cld
xor
loopne
movsb
imul
pop
cmp
je
dec
add
mov
or
lahf
sbb
in
es
lahf
pop
xchg
mov
sahf
sbb
pop
loopne
pusha
and
cwtl
mov
aad
push
stc
loop
in
or
and
mov
mov
in
repz
outsb
pop
aam
mov
cmpsl
cmc
xor
dec
mov
lods
aam
inc
inc
mov
mov
js
mov
inc
inc
loop
mov
jg
inc
cli
push
in
ss
pop
sbbb
rcl
jle
fisttps
stos
inc
das
outsb
and
aad
adc
and
pop
xchg
pop
pop
mov
add
in
pop
jl
fs
fidivl
push
shrl
mov
jge
push
pop
push
jmp
daa
xchg
jne
jge
pop
inc
lahf
repz
mov
stc
cwtl
push
cmp
bndldx
scas
leave
mov
mov
sub
mov
call
stc
cltd
jmp
xchg
push
aaa
mov
add
lock
sub
sub
mov
push
out
sbb
test
jae
mov
dec
pop
fsubrs
push
repnz
mov
adc
jb
cmpsb
int
flds
movsl
push
jp
push
jp
leave
pop
gs
sub
cmp
dec
lds
test
test
stc
mov
in
daa
push
pop
add
add
push
negb
xorl
movsb
cwtl
sub
ss
sbb
mov
mov
pop
pop
imul
stc
iret
fs
in
stos
add
xchg
xor
xchg
aas
and
ljmp
adc
lods
pop
das
mov
adcb
dec
xchg
cmpsl
ret
jno
sar
mov
jb
test
inc
cmpl
testb
inc
and
fnstsw
sbb
inc
and
dec
cmp
and
sbb
add
xchg
inc
aad
jmp
mov
mov
ret
mov
cwtl
push
mov
jnp
imul
into
insl
sub
jno
gs
sti
push
or
sahf
std
jmp
cmp
and
mov
and
push
bound
adc
lahf
out
mov
jo
add
xorb
xchg
or
jle
sbb
mov
call
lods
adc
inc
xchg
jb
dec
sti
pop
test
dec
push
sbbl
and
repz
xchg
mov
aam
mov
push
jp
xchg
jne
outsl
mov
mov
mov
adc
inc
icebp
insb
or
mov
xchg
sub
pop
or
xchg
je
gs
and
icebp
rolb
dec
in
movsb
adc
jno
inc
std
mov
stc
das
jb
sub
mov
and
xchg
sub
sarb
jecxz
mov
sub
mov
dec
and
xor
pop
addb
xchg
sub
int3
mov
into
mov
and
aad
test
outsb
loopne
bound
sbb
or
and
sub
mov
fwait
arpl
lds
js
pop
mov
stos
mov
add
adc
insl
adc
in
movsl
shll
xorb
fidivl
or
xor
xchg
lods
cmpsl
popf
sbb
in
cs
push
pusha
mov
popa
or
and
mov
lds
ret
sahf
pop
mov
fldcw
sub
fcomps
out
shll
test
inc
inc
lret
sbb
jp
dec
pop
inc
sub
int
add
pop
addr16
icebp
dec
inc
xchg
cmp
sub
out
movsbl
xor
movsl
outsl
add
in
jb
pop
cmp
jl
mov
out
movsl
xor
sbb
adc
das
into
imul
stos
adc
insb
xor
xorb
and
mov
push
in
mov
lods
xchg
je
pop
ret
out
dec
push
shrl
loope
dec
push
test
lret
in
push
hlt
ds
or
mov
shlb
cmp
mov
push
mov
or
xchg
mov
data16
push
mov
pusha
mov
lods
inc
push
fildl
shrb
sub
add
fnstenv
js
test
dec
mov
pusha
mov
es
jnp
push
aam
js
int
aam
jp
and
jns
cs
roll
or
lods
mov
cld
popf
stos
pop
out
xchg
xchg
shr
push
dec
mov
movsl
negl
inc
pop
mov
jge
push
aaa
daa
push
icebp
pushl
pop
out
jno
jmp
or
movsb
lods
inc
ja
outsb
add
jp
ret
sub
xchg
or
xchg
out
adc
jo
adc
loopne
jl
sbb
or
xor
sub
jle
pusha
es
dec
adc
mov
mov
jmp
pop
and
pop
mov
push
lea
aam
or
loop
cs
lock
vmwrite
into
add
xlat
addr16
pop
mov
rol
je
dec
xchg
pop
mov
cltd
jb
mov
movsl
inc
mov
test
jmp
xor
xlat
leave
mov
or
and
xor
iret
fwait
hlt
mov
sbb
mov
int
ljmp
inc
addr16
cmp
je
xor
cmpsl
push
jle
fcmovb
dec
popa
testb
mov
dec
pop
inc
jne
icebp
dec
or
xor
sbb
or
inc
pop
dec
and
loopne
inc
sub
movsl
data16
cwtl
rorl
jmp
push
pushf
std
xlat
dec
jbe
sbb
jecxz
add
push
outsb
mov
imul
addr16
sub
jns
add
je
sbb
imul
and
mov
pop
push
push
or
aad
mov
push
mov
sub
ficompl
insl
in
cld
jnp
sar
dec
pop
loope
dec
xchg
jmp
mov
dec
xlat
sahf
pushf
cmp
test
xorb
sub
roll
pop
jnp
jbe
das
jbe
push
ret
mov
or
xchg
rorl
iret
mov
scas
xorl
xchg
push
sub
dec
ret
lock
negb
leave
xchg
pop
fistpll
jp
in
cli
ja
mov
push
jb
mov
dec
orl
cmp
sub
fcomps
lods
insb
shl
sub
inc
push
inc
jo
in
push
lret
call
fidivs
cwtl
fcompl
es
and
loope
vprotd
xor
xchg
repz
and
cmp
dec
sub
and
lret
inc
sbb
stos
dec
add
int
mov
cmpsb
xchg
leave
dec
and
xchg
mov
ret
stos
iret
xor
lock
sbb
dec
push
jb
fimull
push
mov
test
mov
push
and
push
pop
and
fstpl
ds
mov
sub
clc
outsb
sbb
mov
idivl
loopne
das
addr16
push
or
ret
sub
cwtl
lods
mov
inc
loope
fidivl
jae
push
aaa
sub
dec
inc
fsubrl
jge
mov
fwait
pop
jb
inc
cmc
push
cmp
mov
sbb
pop
paddusw
mov
add
inc
das
andb
sbb
push
mov
mov
mov
mov
xchg
lret
test
insb
js
lea
pop
int
mov
or
fwait
jo
out
pusha
fnsave
cmpsb
cmpsb
push
mov
cmp
add
movsb
add
xor
push
sub
test
inc
out
call
subb
cmp
dec
inc
stc
call
cli
rep
xchg
and
lods
pushf
loopne
xchg
loop
imul
arpl
jno
mov
int3
lock
mov
sub
dec
mov
ror
xchg
add
mov
cmc
jbe
shrb
jae
das
bound
cmp
ja
pop
cwtl
inc
sbb
hlt
push
les
mov
ja
outsb
fidivl
ret
cltd
sub
mov
mov
pop
insl
mov
pushaw
movsl
adc
outsl
sti
push
adc
inc
pop
push
testb
sub
jp
or
call
jmp
and
push
hlt
test
xchg
pop
add
sbb
out
pop
nop
sbb
ljmp
mov
mov
cwtl
aam
loope
adc
mov
dec
pop
sbb
xchg
clc
and
mov
int3
cmp
ret
pop
int
stos
je
mov
stos
sub
pushf
dec
dec
mov
and
dec
pop
repz
jle
aaa
enter
sahf
icebp
inc
or
cmp
xor
in
dec
dec
lods
aaa
pop
jmp
lods
stos
and
aas
int3
add
imul
push
or
hlt
adc
hlt
jp
sub
ret
mov
mov
frstor
in
imul
xor
push
imul
pop
into
cmpsl
scas
mov
dec
jne
aam
fdivs
cmpsl
fcompl
xchg
xor
in
sub
sbb
jb
xor
test
movl
lds
mov
mov
mov
push
sahf
adc
mov
dec
das
lcall
jle
add
aas
and
adc
or
cli
mov
xlat
cli
and
negl
or
sbb
pop
aad
call
ja
lds
addr16
or
bound
bound
negb
xchg
sbb
ljmp
jnp
pop
loopne
insb
aad
jne
stos
insb
lahf
loopne
das
jecxz
inc
cmp
jno
xchg
loopne
scas
mov
notb
dec
in
xlat
mov
andb
je
pusha
inc
xor
cwtl
clc
jne
and
pop
mov
gs
sti
pop
pop
mov
mov
scas
sub
inc
or
leave
cltd
push
test
in
fcompl
sub
xor
cli
imul
and
jo
divl
das
xchg
lret
cmpsb
lcall
repz
rol
andb
aam
cmpsl
cwtl
lds
aaa
mov
mov
mov
enterw
xchg
inc
std
fisttpll
inc
add
inc
int
jmp
lcall
mov
jmp
push
orl
loopne
sub
rclb
mov
cmp
xchg
xor
pop
stos
push
mov
or
xor
add
insl
dec
imul
add
push
jle
mov
loope
jg
jmp
add
bound
aam
push
push
scas
sub
sti
jne
mov
aaa
mov
lods
push
test
mov
mov
push
sub
data16
loope
mov
add
push
fcompl
loop
sbb
loopne
fstps
cwtl
mov
xlat
fmuls
add
mov
inc
cmpsb
jns
xor
xor
fisubrl
push
adc
jg
sahf
mov
add
cmp
stos
scas
adc
rorb
or
repnz
mov
lret
cmpsb
pop
fwait
pop
push
shr
cmp
iret
mov
xor
and
into
arpl
mov
pop
imul
shlb
pop
jecxz
cli
xlat
lcall
sbb
rorl
mov
js
negb
mov
fcmovnu
icebp
mov
jae
out
sbb
cmpsl
mov
add
lahf
xchg
mov
daa
fcoms
icebp
dec
add
mov
fldt
call
outsl
roll
loopne
cltd
divl
adc
xchg
test
mov
add
hlt
cmp
call
xchg
fcoml
xor
or
outsl
or
movups
ljmp
push
int
ret
bound
xlat
xlat
pop
inc
popa
cmpb
dec
insb
push
lcall
ljmp
dec
into
in
loope
outsl
sbb
mov
popa
or
mov
shr
mov
sbb
adc
fdivrs
push
sbb
cmc
and
xchg
mov
sbb
insb
int
mov
mov
rcr
lcall
stc
xorl
testl
push
and
lods
xorb
adc
arpl
or
enter
or
lods
orl
dec
cli
xchg
outsl
xor
jb
cmpsl
or
in
mov
rol
std
in
loop
mov
test
mov
xor
xor
es
xchg
int3
loopne
xchg
or
cmp
test
push
loopne
push
add
cmc
inc
fistps
addr16
mov
sbb
neg
frstor
inc
fsubrl
adc
call
ret
or
js
mov
add
push
scas
mov
negl
cltd
popf
scas
sub
sub
in
mov
and
or
mov
dec
or
fidivrl
test
mov
sbb
mov
sahf
xor
sub
xchg
fbld
fcomps
mov
xchg
inc
outsl
dec
dec
pop
fsts
cld
lcall
lsl
add
cmp
mov
js
pop
push
xor
push
or
fs
add
cmp
mov
push
xchg
jo
add
push
adc
stos
sti
or
arpl
mov
popf
lods
sub
mov
mov
cmpsb
adc
loop
fisubrs
mov
jo
mov
movsb
lahf
mov
loopne
push
mov
xchg
mov
jbe
push
inc
inc
sarb
xlat
adc
mov
xchg
sbb
xorl
mov
cmpl
xchg
ljmp
adc
xchg
clc
add
fstl
test
push
lret
outsl
shll
cld
jmp
test
ret
adc
jge
adc
xchg
pop
addr16
inc
inc
out
cmp
cmp
xor
mov
jmp
jmp
xchg
das
stos
arpl
loopne
icebp
cmpsl
jmp
lods
inc
sarl
dec
push
nop
mov
shll
lahf
jmp
test
push
sub
arpl
jp
inc
rcrl
mov
xor
fstpt
movsl
enter
xor
out
loopne
movsl
jns
stc
pop
add
cltd
lock
xchg
scas
and
adcb
xchg
test
sti
es
mov
inc
jl
out
sub
movsl
lods
mov
mov
and
sub
mov
mov
inc
mov
push
mov
cmp
jle
cmp
movl
mov
push
dec
sahf
mov
push
movsb
push
push
insb
pop
or
jp
push
mov
enter
sarl
push
aam
mov
sub
fsubr
loop
aam
inc
jbe
mov
loope
mov
jno
out
sahf
sbb
adc
sbb
xor
and
pop
ret
mov
test
pop
lods
repnz
cmp
jnp
jb
sub
sbb
addr16
push
jne
mov
into
and
cmp
cmpsl
call
push
add
push
in
or
xchg
setp
pop
inc
jnp
mov
xchg
jg
stos
faddp
sbbl
inc
lea
in
and
aas
dec
les
cmp
or
push
lods
dec
xchg
shrl
cmp
dec
lret
aaa
inc
mov
mov
push
mov
fs
or
into
jp,pn
ror
cmc
mov
orb
mov
mov
sbb
scas
jp
xchg
push
cmp
mov
dec
rol
adc
std
lcallw
ret
mov
lret
insl
inc
insl
insl
add
adc
xchg
bound
lcall
pop
jno
inc
incl
push
ret
shll
sub
sub
mov
test
mov
pop
mov
jno
je
inc
inc
or
pop
ret
mull
jle
jnp
pop
fistl
shlb
aaa
inc
xchg
fldt
enter
jmp
test
mov
jg
jmp
cld
adc
mov
jno
xchg
adc
sub
lods
dec
cmpsb
xchg
push
mov
mov
jecxz
mov
je
mov
stc
xchg
jmp
sub
inc
movsb
insb
in
mov
cmp
stc
sbb
imul
cmp
ret
pop
out
cmpsb
out
in
out
push
mov
hlt
fcomip
add
int
sbb
loopne
or
xor
jo
in
mov
popf
mov
mov
pop
cwtl
jecxz
rcrb
cmp
dec
mov
lds
dec
loopne
icebp
cld
in
in
leave
xorb
push
pop
loope
mov
jno
test
aam
adc
mov
mov
orl
jge
test
das
call
repnz
pop
mov
bound
shrb
aad
shlb
dec
cld
push
cwtl
fisttpll
dec
aad
pop
rorb
cmp
dec
mov
sbb
push
loopne
lea
sbbl
inc
in
dec
jge
dec
xchg
imul
je
iret
idiv
das
push
sti
out
or
sbb
and
aas
call
push
stc
adc
mov
cltd
mov
outsl
mov
pop
pop
cmpsb
mov
cmc
lcall
inc
mov
cmp
es
jno
or
cmp
sub
ds
mov
jno
mov
bswap
pop
je
dec
cmp
jnp
jle
push
lret
mov
xchg
pop
gs
push
loope
cld
imul
dec
rorb
adc
repnz
aaa
mov
jmp
lcall
push
mov
fstpt
mov
or
pop
std
aas
cli
rolb
mov
inc
or
push
fdiv
pop
or
inc
ds
ret
mov
or
cmpsl
dec
pop
pusha
cmp
cmc
push
hlt
aad
fists
pop
rorb
test
shll
sub
xchg
cmc
jmp
or
cmp
cli
fisttpl
mov
insb
outsl
repz
and
ret
mov
mov
cwtl
xchg
sbb
adc
xchg
pop
add
cmp
test
insb
add
outsl
mov
cmp
scas
clc
add
into
fisubrs
dec
adc
mov
test
les
ss
sub
popf
inc
inc
push
mov
dec
push
fsqrt
pop
and
xchg
jne
mov
jp
mov
xor
xchg
aaa
cmc
out
adc
aad
mov
inc
test
and
std
addr16
cmp
add
fdivs
fisubrl
test
popf
lock
push
outsb
jmp
fdivs
xor
adc
fistl
out
mov
fwait
out
xchg
out
sahf
jecxz
push
aas
popa
jecxz
leave
sbb
sub
dec
call
and
jg
sarl
xor
stos
add
sub
ja
and
xchg
mov
and
cmpsl
mov
shr
movsl
cmp
push
jns
mov
cmpsl
cwtl
add
jbe
popa
xchg
mov
lods
rcrb
sbb
push
test
mov
movsb
or
shl
jge
test
xchg
dec
pop
inc
out
ret
and
inc
sahf
xor
and
sub
mov
dec
lahf
xor
dec
mov
mov
push
ja
into
pusha
fstl
fstpl
jb
scas
dec
mov
sub
xchg
push
shll
jl
clc
inc
fucomp
add
pushf
jg
test
mov
insb
sbb
or
fidivrl
inc
mov
cmp
in
sahf
cmp
inc
movsb
push
mov
fimull
jl
int
movsl
scas
lahf
fistpll
fs
lahf
pop
ljmp
sub
in
loope
push
leave
fsubrl
and
mov
adc
sahf
cmpsb
bound
std
movsl
stos
aad
mov
insl
loopne
data16
push
cmp
xchg
pop
rcrb
insb
adc
xchg
lods
inc
sbb
add
ret
insl
cmpsl
jns
push
movsb
xor
or
add
pop
mov
push
mov
lcall
pop
ja
jmp
cmp
jo,pt
fcomip
jecxz
aam
add
aaa
gs
stos
push
sub
rol
and
inc
adc
push
cmp
gs
adc
rorl
dec
jae
cmp
je
stos
xchg
jmp
jnp
sbb
mov
icebp
mov
and
out
sbb
cwtl
add
jle
movsb
inc
imul
sub
cmp
enter
aaa
add
lahf
jg
psrld
sub
add
or
std
dec
push
cmpsl
out
test
pop
dec
xor
test
ret
fistpl
inc
push
pushf
sbbb
mov
add
andb
outsl
in
outsl
lock
pop
xchg
fldl
adc
pop
jb
int3
cmp
ja
mov
jbe
dec
adc
loop
jecxz
mov
xchg
push
pushw
iret
hlt
mov
push
popf
aaa
or
out
daa
adc
inc
std
lods
faddp
fidivrs
xchg
movsl
out
rcrl
fs
push
fdivs
lret
shrl
movsb
mov
cmp
push
pop
fisttps
lock
jge
stc
test
sbb
lea
int
or
test
cmc
rcl
push
into
add
sub
scas
aam
mov
xchg
mov
mov
inc
inc
dec
mov
ja
jb
dec
sub
xorb
pop
mov
adc
subb
imulb
jecxz
mov
inc
inc
mov
or
test
mov
xor
hlt
push
adc
lods
dec
gs
inc
cmp
std
into
sub
cmp
mov
push
mov
mov
iret
mov
lock
divb
mov
jge
rcrl
frstor
aaa
and
xchg
fimuls
ficomps
leave
sbb
fwait
pop
sbb
adc
inc
adc
arpl
mov
and
pusha
call
shlb
shl
and
mov
push
ja
inc
sub
scas
push
jmp
ljmp
and
inc
jae
jb
test
xchg
and
arpl
test
pop
scas
sbb
stos
in
mov
hlt
mov
shrl
insl
andb
mov
enter
stos
out
push
mov
xlat
mov
pop
pop
or
rorb
jl
fisubs
mov
inc
fisubrl
jbe
sbb
sbb
nop
std
inc
mov
pop
xchg
lret
xlat
ljmp
inc
outsl
fwait
sbb
mov
mov
test
cmp
out
idiv
sub
xchg
sub
dec
aaa
cmpsb
movsb
out
inc
cmp
pop
dec
fsubrs
rcrb
jb
das
jecxz
add
or
addb
popf
divl
mov
pop
add
jp
mov
mov
xchg
pop
js
orb
jne
adc
subb
sbb
xchg
mov
lret
int3
push
dec
int
mov
push
dec
out
ss
sbb
pop
iret
jb
lds
or
xchg
lods
adc
imul
das
or
out
pop
lods
test
pop
ret
mov
adc
push
mov
sbb
add
rcrb
shrl
cmp
push
popa
movsb
mov
xor
out
popa
andl
stos
repz
xchg
imul
pop
cmpxchg
adc
dec
push
test
sbb
mov
or
lret
out
test
incb
sti
mov
inc
adc
or
jle
inc
loopne
mov
xor
int
cmp
add
loope
sub
imul
xchg
orb
inc
gs
and
ja
mov
in
stc
sub
jbe
adc
xor
adc
test
jle
rclb
push
and
pushf
jno
dec
aad
xchg
and
push
mov
cmpsl
pop
pop
add
adcl
push
mov
test
dec
test
push
imull
dec
cmpsb
mov
or
out
push
clc
dec
jecxz
adc
add
xchg
push
mov
test
mov
mov
push
pop
lea
in
clc
push
loope
inc
pop
mov
dec
adc
push
sbb
cmp
jae
stos
sbb
pusha
sbb
jecxz
add
nop
xchg
ss
sbb
aas
insl
lahf
jmp
sub
pop
xchg
lahf
pushf
rorl
es
cwtl
out
cmp
mov
inc
jnp
in
loope
test
or
sub
mov
cmpsb
in
jmp
jno
mov
add
out
vfrczps
adcl
and
cmp
fs
data16
lahf
stos
inc
aaa
mov
icebp
iret
pop
imul
jecxz
in
stc
int
sbb
rol
adc
pop
addb
and
jecxz
and
pop
and
xor
cvtpi2ps
sbb
or
push
jp
xor
jns
mov
movsb
fidivrs
ja
mov
sub
popa
jg
pop
insb
fs
dec
jmp
dec
jno
cmp
lods
xor
dec
imull
test
or
or
push
pop
clc
xchg
test
out
cltd
xchg
jl
stos
ret
into
out
loope
jno
daa
sbb
lods
pop
push
out
jg
xchg
lcall
sub
shlb
and
out
xchg
popa
cwtl
xchg
iret
jmp
stos
movsl
test
xor
fists
xchg
inc
ds
sahf
sbb
icebp
jecxz
inc
sub
dec
or
sub
hlt
or
inc
or
daa
out
adc
je
xor
les
lret
lretw
cmp
andl
mov
sahf
add
leave
cli
lea
mov
xchg
pop
pop
sbb
out
aaa
cmp
add
push
and
adc
sub
pop
call
sbb
adc
out
outsb
mov
adc
sbb
inc
mov
xchg
xchg
mov
xor
and
dec
loope
loope
mov
test
inc
xchg
sbb
xor
test
mov
push
aas
or
cmp
xor
popa
pop
jecxz
icebp
cmpsl
xchg
int3
mov
fdivl
xchg
jbe
fidivrl
jno
pop
jnp
lods
pop
sub
dec
ret
int3
push
adc
mov
in
sbb
inc
ja
push
sub
mov
push
and
jno
mov
mov
add
stos
fwait
js
pop
test
movsb
sub
js
dec
loop
ds
lahf
push
jae
xchg
push
jp
adc
dec
aaa
or
push
call
stos
stos
mov
or
jg
jno
sub
xor
and
push
cmp
shlb
rorl
pop
in
jno
cltd
xchg
mov
push
lock
mov
cli
rcr
loope
sub
inc
popa
lea
lret
adc
push
scas
pop
in
push
fisttps
jmp
lret
push
mov
test
aaa
pusha
cld
or
nop
xor
shr
push
popf
cmp
dec
inc
pop
inc
cltd
cmp
loop
lret
negl
or
inc
or
jno,pn
in
cmp
xor
inc
mov
mov
push
jbe
test
sub
cmp
jnp
scas
inc
adc
mov
adc
pop
add
sbb
test
aas
aam
sub
pop
cmp
aam
inc
cwtl
mov
inc
dec
lcall
mov
pop
adc
into
and
fcmovnu
jnp
addr16
sbb
xchg
inc
adc
inc
sar
add
scas
and
dec
xchg
pop
iret
push
arpl
out
adc
sub
dec
loopne
push
cld
jg
push
xchg
mov
ret
movsl
adc
pop
pushf
les
mov
adc
test
clc
cwtl
mov
mov
mov
cmpsl
movsl
clc
xchg
pop
fwait
pop
call
jle
pop
sarl
lods
pop
arpl
cmc
outsb
int
leave
push
dec
mov
mov
shl
jne
js
xchg
nop
jbe
adc
lahf
test
loopne
mov
js
fistl
adc
lahf
test
dec
or
faddl
sbb
int3
fs
testb
push
mov
jle
andb
lret
add
xchg
push
pop
push
sbb
ss
mov
adc
pop
sub
inc
cmc
cmpsl
movsb
and
ret
out
inc
push
and
rol
aaa
sub
mov
jl
push
sub
aad
testb
or
stc
mov
jb
into
inc
mov
jo
xchg
aad
int3
dec
in
jno
sub
loopne
mov
jge
mov
shll
xchg
lds
push
insl
or
add
mov
add
pop
jl
pop
mov
mov
pop
adc
outsl
enter
pop
inc
cltd
dec
stc
outsb
pop
pop
pusha
cltd
iret
mov
jp
cwtl
shrb
push
mov
and
pop
aas
and
cmpsl
sbb
and
or
cmpsb
xor
push
add
jns
or
fcomps
jge
addl
pop
call
push
popa
in
mov
jbe
cmc
das
adc
or
mov
movsb
andl
xor
adc
dec
pushf
movsl
sti
lahf
ficomps
dec
imul
or
mov
test
roll
aam
sub
inc
in
mov
jl
in
ss
mov
mov
mov
xchg
xor
adc
sbb
test
dec
mov
pop
mov
loop
mov
dec
xchg
cltd
fwait
mov
rcrb
faddl
mov
repnz
xchg
dec
imul
stc
adc
lcall
cmp
and
inc
xchg
lret
sub
xor
and
stc
mov
repnz
shlb
mov
test
and
lahf
xor
movsl
mov
sub
cmpsb
sbb
sub
jnp
imul
lds
adc
jbe
jno
arpl
imul
inc
fdivs
insl
push
repnz
inc
mov
stos
mov
roll
lock
push
and
int
or
ss
aas
subb
lea
cs
punpckhbw
push
flds
orb
ja
imul
xchg
mov
add
sahf
daa
cmp
ret
mov
out
les
push
sub
loope
xor
roll
dec
lods
add
jle
movsb
call
ss
or
mov
and
fs
in
push
mov
ljmp
shlb
les
jecxz
xchg
xor
xor
sbb
loop
dec
aas
je
in
sub
cmpsb
jle
jl
adc
mov
mov
sbb
mov
push
cmp
outsl
pusha
add
loope
add
inc
inc
adc
push
stc
insb
sbb
int3
push
add
mov
stc
mov
aad
or
sarl
addl
ljmp
and
das
ret
lea
sub
push
stc
std
or
jg
stos
out
mov
addr16
xchg
test
loop
les
mov
mov
push
and
movsl
xchg
lea
loopew
pop
push
mov
xchg
sub
out
dec
lret
sbb
sub
sub
pushf
inc
pop
cwtl
push
push
mov
xor
jp
movsb
mov
lret
ja
adc
loope
xchg
xor
jmp
leave
bound
mov
test
and
out
aas
push
push
pop
inc
outsl
aam
lds
and
in
popa
push
mov
fdivr
lret
fxch
adc
add
dec
ret
je
std
or
fwait
daa
stos
lahf
jl
fwait
xchg
lret
sbb
daa
idivl
scas
adc
mov
add
loope
aas
jae
cld
daa
dec
xlat
jbe
lds
stc
jb
fiadds
sti
ljmp
adc
inc
addb
aad
sub
mov
adc
jo
sbb
jg
jmp
gs
jg
jle
mov
adc
cmp
std
jge
jg
cmc
ljmp
mov
mov
test
shlb
adc
fdivrl
add
repnz
jne
pusha
or
das
push
insb
xlat
rorl
fstps
cld
lret
cmpsb
inc
fistpl
and
je
xor
cmpsb
jae
or
hlt
cmp
movsb
iret
int3
cmp
cmp
mov
andb
addb
mov
push
movsl
aam
jle
mov
divl
fistl
push
add
inc
cmp
or
stc
into
dec
adc
mov
mov
std
fidivrl
popa
stos
or
mov
or
sarl
out
test
jge,pt
or
mov
and
and
fsubl
push
lods
scas
sub
mov
daa
mov
fbld
cwtl
scas
adcl
outsb
lret
adc
pop
adc
insl
add
fwait
push
in
and
outsb
es
cmc
and
dec
cld
sub
xchg
jnp
adc
movsl
pop
mov
push
aad
insb
push
lods
lcall
pop
add
sub
sti
pop
jnp
testl
lods
les
sar
pusha
jmp
mov
adc
add
xor
fs
inc
jnp
push
test
push
dec
mov
out
sub
cmp
int
or
cmp
pop
mov
loopne
adc
xlat
in
arpl
mov
lret
jbe
xchg
cmp
xor
and
outsb
mov
cltd
pop
mov
int3
adc
mov
cmp
loop
jno
sub
jbe
dec
mov
mov
shl
lret
clc
dec
wrmsr
cmpsl
ret
cmc
sub
aad
xor
inc
dec
ret
les
inc
xor
jno
aaa
movl
jne
mov
pop
lods
sahf
fwait
repz
xchg
or
add
sbb
pop
lds
xchg
cmp
xchg
mov
pop
ds
insl
sbb
cmpsb
push
rclb
js
mov
inc
xchg
sbb
mov
lock
in
dec
push
dec
push
xchg
stos
popa
out
sbb
push
or
dec
jae
jecxz
lcall
inc
push
jp
out
lods
jae
enter
mov
pusha
inc
divl
clc
imul
xchg
and
fnstenv
je
push
jecxz
push
add
cmp
jmp
nop
pusha
sub
test
lds
sbb
fwait
aad
xchg
jb
cld
jb
imulb
add
int
es
cli
mov
rorb
mov
fistpll
cwtl
or
push
pop
xor
shlb
idivl
mov
fdivrl
pop
jl
out
pop
cld
je
mov
pop
addr16
ret
test
rclb
mov
mov
sbb
xchg
inc
das
jb
inc
push
mov
arpl
dec
mov
enter
shll
adc
andl
add
lods
xchg
sahf
lds
mov
or
mov
andl
or
adc
icebp
lods
cmc
ljmp
jns
sbb
cmc
int
sahf
mov
and
xor
rcrb
or
outsl
mov
mov
lret
add
fadd
dec
sub
push
pop
push
dec
jp
into
rcrl
cmpsb
xor
add
pop
or
movsb
xchg
xor
cmp
mov
pop
mov
adc
xchg
loope
lret
sbb
rcrl
hlt
das
sbb
imul
in
fmuls
add
mov
pop
cmpsb
push
gs
push
mov
shl
fisttps
or
jge,pt
add
mov
fldl
in
cmp
adc
xchg
pop
cwtl
cmp
sbb
and
dec
in
fistpl
scas
pop
je
sbb
std
ss
flds
loopne
ds
popa
push
mov
lods
xchg
js
test
xor
pop
xchg
push
pop
jae
lret
inc
dec
mov
inc
xor
pop
test
dec
adc
jae
std
mov
cli
loop
loop
adc
mov
dec
sub
push
inc
add
in
jmp
mov
push
pop
aad
jno
xchg
jno
mov
sbb
push
push
rclb
add
std
inc
dec
adc
mov
lea
add
push
movsl
inc
ffree
fwait
adc
push
jg
bound
mov
out
or
inc
xor
dec
es
cmc
inc
or
xor
pop
ficoml
xor
popa
mov
xor
push
rcr
test
jp
mov
fsubrl
ljmp
popa
in
jbe
ljmp
and
fimuls
mov
jl
loope
dec
cltd
pop
push
push
sbb
sarl
mov
rcrb
and
cmpsb
xchg
ret
sub
test
and
pop
sub
shlb
jnp
hlt
shll
sub
cmp
sub
rcl
notl
xchg
push
add
pop
daa
insl
jae
test
ja
cmp
dec
pop
jg
test
adc
pop
or
cmpsb
and
xor
xor
dec
imul
dec
xchg
lds
push
xchg
adc
xor
insb
bnd
out
add
push
das
inc
pop
mov
mov
jl
addr16
mov
xchg
pop
mov
pop
sbb
dec
pop
stos
cmpsb
cwtl
arpl
xor
pop
push
ljmp
mov
add
push
xor
xor
dec
xchg
scas
test
xchg
gs
test
imul
dec
jecxz
pop
xor
arpl
push
and
xor
mov
cli
addb
mov
outsb
aam
mov
shlb
cmc
push
inc
mov
pop
aam
sbb
lods
jmp
sbb
lods
jmp
sbb
jne
inc
mov
aas
add
push
jbe
push
jb
add
xor
ds
jnp
mov
or
mov
push
fwait
pop
push
and
dec
mov
jle
pusha
cmp
std
add
loope
pop
adc
cmp
fldl
sbb
std
ss
int3
push
mov
pop
mov
mov
imul
mov
mov
js
les
mov
sahf
ret
std
jbe
pop
paddusw
into
int
adc
xchg
scas
adc
inc
xorl
mov
sbb
fldt
sbb
jnp
add
xchg
cmp
lock
call
pushf
mov
sub
sbb
pop
mov
rol
or
lret
cmp
sti
or
sub
leave
push
fstpt
cli
mov
push
add
aas
fnsave
cmp
dec
add
mov
dec
xor
push
mov
xor
sub
pop
mov
dec
cli
mov
jno
cli
lcall
aam
push
mov
inc
sbbb
lods
jg
pop
sbb
pusha
pusha
cli
xchg
dec
xor
adc
movsl
xchg
adcl
push
cmpsb
pop
push
dec
cld
call
popl
inc
and
loope
or
xchg
divb
test
test
jb
cmc
aas
jae
mov
dec
fdivs
push
dec
aas
stos
jg
push
mov
dec
dec
mov
pop
jae
stos
cltd
fdivs
add
jae
sarb
mov
add
mov
dec
shld
dec
sbbl
pop
xor
fmuls
aad
inc
loop
pop
fisubl
or
push
stos
outsb
sbb
pop
inc
ret
mov
jns
jmp
int
adc
push
out
push
sub
lahf
aam
xor
int
das
aas
pop
out
lahf
sar
out
iret
call
xor
jmp
loop
int3
std
mov
sti
imul
stos
in
ret
lds
jnp
test
push
sti
pop
ret
mov
das
cmp
stos
es
adc
mov
xchg
gs
aas
jns
fisubrs
repz
cwtl
adc
or
ficomps
inc
fistpl
push
dec
icebp
adc
aaa
xchg
or
mov
scas
fwait
mov
scas
data16
dec
mov
imul
xchg
test
shll
adc
nop
shll
fstp
cwtl
sub
ljmp
lret
rcrb
pop
mov
aam
nop
push
in
and
and
mov
add
inc
cld
and
incl
and
pop
mov
push
insl
sahf
xlat
push
mov
test
jbe
js
ljmp
subb
sti
or
jl
xor
xor
jl
cmpsl
mul
pop
bound
imul
fisubrl
or
sbb
repnz
jne
push
stc
dec
enter
jg
cmp
or
fidivrs
mov
and
pop
xor
insl
lcall
mov
jns
push
xorb
push
lock
cmp
je
adc
sar
out
add
push
sub
sti
fstl
xor
in
fcomip
inc
pop
inc
mov
ficompl
dec
insb
xchg
inc
in
sbb
cmp
sbb
mov
aaa
loopne
xor
int3
sub
xlat
or
pop
xchg
movsb
or
fs
in
xchg
das
jne
fisttps
test
push
xchg
unpcklps
int3
pusha
ret
sahf
xchg
inc
adc
gs
aam
xchg
or
addr16
sbb
rcll
jns
stos
xchg
pop
xor
rclb
pushf
push
ds
in
xor
ret
shrl
test
aam
inc
mov
add
popf
loopne
and
int
loopne
sbb
mov
ja
imul
sbb
frstor
psraw
movsl
lods
stos
out
dec
mov
jae
fs
mov
mov
mov
sbb
add
loope
repnz
loope
cmpl
in
sbb
mov
decb
addr16
inc
loop,pt
push
add
out
inc
movsb
out
xor
aad
dec
xor
lds
pop
aad
mov
sub
fdivrs
arpl
or
push
aaa
bound
loopw
std
shlb
push
push
mov
add
and
push
cli
push
dec
jg
jnp
cmp
or
sub
aad
mov
jecxz
push
pop
and
and
adc
shrb
fimull
rcll
xchg
sbb
jecxz
movsb
insb
hlt
adcl
fisubrl
mov
mov
jmp
push
sti
mov
mov
and
cmp
sbb
scas
es
call
xor
inc
lahf
pop
jge
and
jmp
rclb
xor
jnp
pop
push
shlb
ds
sbb
stos
gs
push
adc
sbb
dec
lahf
add
mov
iret
popf
xchg
call
or
xor
sub
inc
lds
push
push
movnti
mov
mov
loope
xchg
aam
jnp
xchg
negb
and
leave
adc
into
xor
sub
bswap
and
out
pushf
das
incl
pop
sarb
mov
mov
mov
outsl
or
xor
pop
lds
jg
mov
mov
aaa
mov
sbb
adc
repz
enter
dec
xchg
subl
xchg
cmpb
incl
imul
mov
ds
je
sub
pop
inc
add
adc
cmp
imul
inc
mov
xchg
adc
clc
outsl
aam
bound
repnz
inc
pop
add
imul
daa
cwtl
push
and
pushf
or
pop
mov
xchg
inc
mov
in
out
or
outsb
jnp
test
mov
mov
test
rcr
cwtl
sbb
xor
pop
fisttpll
std
stos
adc
rcr
pop
cmp
insb
xor
adc
sub
pop
xor
mov
sbb
test
fimuls
mov
iret
pop
jo
pop
push
push
push
mov
inc
mov
jle
es
xchg
mov
jbe
jne
push
mov
push
sbbl
fmulp
sbb
addr16
xor
fcompl
fs
push
mov
jle
cld
cld
leave
or
repnz
enter
frstor
in
add
inc
fstpl
out
xor
cmp
xchg
xor
and
sbb
out
push
and
mov
ret
and
jbe
jbe
rol
lcall
dec
popf
adc
movsl
mov
arpl
push
mov
cli
xor
ss
mov
subb
in
aad
std
jmp
pushf
imul
pop
sbbb
adc
push
pop
pop
push
adc
pop
adc
nop
arpl
in
push
pop
pop
int3
loopne
xchg
push
lods
dec
xchg
or
sub
cmp
test
cltd
xor
out
pop
push
cs
push
mov
outsl
ljmp
out
and
and
int
sub
nop
cld
lea
andb
dec
mov
dec
mov
pushf
ja
gs
adc
dec
sub
push
shll
push
imul
das
mov
xchg
xor
into
mov
jae
movsl
rcll
dec
pop
leave
repz
gs
daa
or
adc
mov
jmp
push
inc
sbb
xchg
dec
loopne
and
mov
push
pop
stos
inc
ficompl
or
call
add
dec
mov
mov
mov
mov
add
xchg
shl
inc
add
lock
dec
dec
loop
popf
add
jle
jae
sbb
add
xchg
push
adc
jle
xor
pop
sub
or
fiaddl
inc
fcomps
jecxz
cli
jp
and
sahf
lea
and
pop
pop
fisttps
adc
cld
inc
stos
cli
scas
inc
iret
stos
lahf
test
sarb
mov
div
mov
jmp
cmpsl
mov
outsb
pusha
fadds
mov
in
dec
ljmp
cmpsl
or
inc
push
xchg
inc
sbb
into
add
xchg
push
and
mov
jbe
out
xor
xor
dec
inc
sub
loope
jo
mov
lods
jmp
aad
xor
sbb
sbb
cmpsb
jns
filds
cld
imul
mov
fcoms
sub
jbe
sub
test
jnp
das
stos
shlb
pop
sbb
adc
std
cmp
loop
pop
cmp
repz
push
pavgw
lods
or
jge
out
dec
fisttpll
pushf
lahf
test
xchg
push
sub
jo
or
mov
inc
lret
mov
hlt
sbb
pop
in
fisubl
xchg
in
xchg
aam
int
jg
int
sar
jecxz
ds
lret
imull
sbbb
push
push
sete
test
and
psubusw
or
jno
xor
pop
cmc
lea
or
mov
bound
jne
xchg
in
mov
idivl
or
add
or
popa
sub
cmp
gs
jae
imul
push
jg
loope
dec
into
cmpsb
fldenv
dec
cmpsb
rorb
mov
cs
loopne
fwait
sub
jns
call
cmc
outsl
imul
std
movsb
sbb
add
cmp
in
add
mov
jae
cmp
adc
push
repnz
cmp
push
movsb
dec
sbb
ja
pop
lods
nop
inc
jge
ja
ss
xor
fiadds
fsub
cmp
mov
inc
and
jno
jecxz
icebp
push
mov
add
lret
mov
pop
divl
pop
adc
mov
or
xor
pop
or
sbb
inc
xchg
push
pop
sbb
in
xlat
scas
cmp
repnz
aaa
ret
inc
into
int3
test
popa
xchg
add
mov
out
stos
xor
push
std
jns
add
gs
adc
in
xor
cmp
jg
inc
xor
ds
scas
leave
xor
fs
cltd
mov
jmp
repz
cmp
add
cmp
adc
fldt
shlb
push
fcmovne
cmp
ljmp
cmpsb
push
in
add
mov
jle
in
icebp
jno
mov
aas
popf
mov
std
lret
pop
outsl
std
dec
mov
nop
jns
jnp
push
cld
xlat
out
or
sub
test
cmp
jmp
ja
inc
xchg
repz
push
out
inc
stos
loopne
lds
xor
push
sbb
out
pop
test
nop
sbb
frstor
xchg
xchg
lods
loope
fcomps
cs
ss
adc
inc
in
pop
not
mov
push
enter
or
idivl
jge
cli
or
pop
insb
cmp
xchg
js
add
xor
js
loope
pop
ret
jmp
int
adc
cmc
fistpl
xorb
mov
cmpsb
cmp
push
into
mov
jns
hlt
test
in
dec
jnp
sub
out
out
mov
mov
mov
leave
or
xor
sub
mov
data16
adc
rcrb
cld
or
fdivrp
pop
mov
cmp
loope
das
xchg
aaa
inc
cwtl
cmpsb
sbb
cmc
sahf
jle
jg
ss
fstl
push
test
push
in
clc
sub
xor
es
fsubrs
xor
ds
lret
xchg
repz
jo
cmpsl
nop
jne
scas
dec
rcrl
test
test
fldl2e
adc
mov
jb
adc
clc
lock
jae
outsb
or
test
stos
stc
ds
imul
rcrb
jmp
out
xor
push
iret
fcmovnbe
rcrb
cmpsl
gs
mov
leave
repnz
jge
sbb
insl
sub
jl
mov
jmp
out
xchg
mov
jae
mov
cmp
std
out
ret
clc
bound
xor
mov
xchg
cmp
pop
loopne
lods
inc
es
aas
mov
pop
add
movsl
push
inc
jnp
outsb
sub
pop
lock
roll
loope
dec
ja
add
call
outsb
sub
dec
ret
ror
xor
aaa
sahf
pop
cs
inc
mov
aad
push
adc
pop
icebp
cmp
mov
testl
sbb
xchg
rcrb
lret
add
mov
test
sbbl
lods
movsb
jg
test
jmp
cs
mov
aam
leave
lret
loopne
ret
pop
and
int
mov
scas
mov
mov
sbb
arpl
fdivrs
in
imul
cli
aas
inc
loopne
push
jae
pusha
mov
pushf
or
sbb
das
dec
jns
fucomip
mov
cmp
fnsave
mov
pop
pop
xchg
mov
test
loopne
testb
ret
sub
xor
dec
mov
aaa
sbb
daa
mov
nop
xchg
push
pop
iret
int
aas
test
movsl
dec
fadds
adc
inc
xchg
mov
js
notl
inc
lods
pop
or
cmc
and
aad
or
into
sbb
mov
push
inc
or
add
and
stc
ja
fwait
sbb
imul
subl
cmp
push
clc
movsb
sub
mov
movzwl
fldcw
jg
dec
fbld
mov
xor
cmp
jnp
arpl
ja
es
or
push
xchg
xchg
imul
inc
inc
fwait
stos
icebp
push
repz
das
ret
mov
or
or
call
sbb
inc
sbb
aas
call
leave
xchg
negb
add
pop
mov
int
lods
cltd
aas
and
adc
outsl
sbb
push
cmp
imul
push
cld
add
inc
cmp
int
cmpsl
push
loope
pop
cltd
or
and
jne
jno
mov
mov
pop
test
add
les
inc
push
pop
fsubs
jae
insb
rcrb
add
pop
test
mov
xor
or
mov
inc
fs
out
jle
mov
out
cmp
pop
test
cmp
pop
mov
inc
scas
insb
dec
cwtl
aaa
cmpsl
jbe
push
stos
mov
in
loopne
push
jl
js
mov
fadds
hlt
xor
push
imul
js
in
push
int
aas
adc
sub
sbb
movsb
ret
das
ret
mov
xchg
aam
lcall
jns
jno
pop
xor
cmp
rorl
mov
jle
in
xchg
popf
decb
xor
xchg
mov
aam
dec
aaa
xchg
lods
test
sbb
lret
jg
mov
push
stos
lds
inc
dec
jmp
popa
fs
icebp
dec
js
mov
scas
scas
dec
dec
pushf
dec
pop
or
cmp
xor
mov
jb
ret
xchg
push
out
mov
or
xor
popf
sbb
push
test
ss
adc
or
add
daa
cwtl
fisttpll
xchg
adc
out
jecxz
sahf
or
pop
mov
xor
cli
sti
xchg
lea
repnz
sub
push
fs
cwtl
jle
mov
cmp
mov
jle
dec
loope
mov
cwtl
mov
in
out
lds
sub
dec
add
lds
mov
repz
popa
jno
or
lcall
push
mov
sbb
add
xor
mov
test
jecxz
pop
pop
push
push
mov
sbb
dec
push
xor
in
push
jl
add
mov
dec
dec
adc
mov
cmp
cmp
clc
shrb
mov
mov
pop
adc
sbb
mov
mov
or
add
pop
stos
add
enter
push
push
jb
andb
push
mov
stc
lods
ja
fnsave
ret
mov
pop
testb
iret
dec
jp
jne
sbb
jl
dec
and
cs
fs
aam
je
aam
movsl
mov
and
ljmp
add
cs
push
shl
xor
mov
test
add
cmp
bound
movsl
sbb
pop
fs
scas
sbb
xor
add
insl
mov
jle
dec
xchg
enter
cmp
mov
xor
dec
inc
jp
mov
pop
sub
xchg
hlt
and
sub
ja
movsl
fdivrl
imull
inc
aad
loopne
iret
sbb
xor
mov
popf
mov
out
or
push
jnp
push
icebp
ror
pop
ss
push
xor
cmpsb
test
and
lods
mov
sbb
xchg
test
xor
jne
dec
mov
push
jmp
popa
loope
mov
mov
mov
sbb
mov
xor
imul
test
ss
or
lods
rolb
int
inc
hlt
cmp
insb
sub
icebp
outsb
data16
fsub
mov
popf
jno
lret
and
and
cmp
repnz
or
dec
arpl
adc
inc
sti
adc
inc
and
gs
sub
pusha
mov
loopne
lret
ret
outsb
enter
mov
dec
jg
cmp
and
and
iret
addr16
dec
call
pushf
xchg
jle
shlb
push
xchg
cmc
repz
pop
mov
adc
ja
push
mov
push
xchg
insb
iret
cmp
addr16
pop
push
iret
push
xchg
call
pop
test
jae
popf
push
negl
mov
cmp
sbb
mov
out
add
dec
orl
mov
fsubl
fmull
call
sub
mov
test
and
adc
jmp
scas
xor
xchg
lcall
mov
pop
bound
inc
push
lock
loopne
add
xor
and
scas
test
dec
mov
test
jge
testb
pop
xor
jns
jl
cmp
insl
xchg
inc
rclb
jo
sub
fdivl
addb
lea
fldl
mov
or
sbb
pop
mov
aas
mov
xor
je
bound
cmp
movb
scas
sub
adc
imul
sbb
xor
xor
shrl
add
cs
cmp
xchg
cmpsb
pop
push
jbe
das
jno
lds
aam
jle
xchg
jno
aaa
add
jns
notl
and
outsl
and
pushl
jge
fidivrl
pop
cmpl
jg
inc
dec
inc
or
inc
pusha
push
lcall
hlt
sub
xor
and
inc
mov
mov
push
dec
scas
in
rolb
fdivl
sahf
test
shlb
sbb
pop
insb
mov
mov
jbe
pop
adc
pop
xchg
std
addr16
or
outsl
inc
jno
mov
add
test
jecxz
xor
lds
shlb
cmpsl
iret
cmp
test
inc
push
cs
repnz
add
push
insb
test
push
lods
popf
ja
clc
mov
imul
popf
mov
in
insb
fisttpll
sub
xchg
pop
sub
sub
inc
ret
push
test
out
jae
lods
push
ljmp
sar
pop
imul
mov
adc
int
adc
mov
std
push
xchg
sbb
sub
out
jb
mov
inc
cmc
cltd
jno
inc
mov
ds
scas
mov
scas
jmp
jg
inc
loope
mov
pushf
rolb
lahf
cmp
out
ret
loop
mov
inc
fs
divb
push
push
and
or
js
bound
mull
or
add
fmull
mov
in
cmp
cld
arpl
inc
dec
shll
inc
xchg
repz
divl
xlat
scas
ja
xchg
pop
and
push
data16
and
lahf
ret
push
jecxz
out
in
sub
jne
xchg
jle
outsl
dec
inc
mov
add
imulb
into
cmp
mov
or
jbe
mov
xchg
push
mov
fs
add
lret
sub
ror
movsl
mov
sub
cmpsb
leave
shrl
pop
pop
leave
mov
int
ficoms
aam
mov
fisubs
hlt
dec
aad
add
jl
stc
fdivl
push
sub
push
je
fstl
inc
test
mov
pop
cmp
push
pop
pusha
negl
jp
jge
in
loop
fcomps
xor
mov
sbb
call
cs
xchg
sub
xchg
add
shlb
cwtl
push
lods
mov
sub
pushl
add
sarl
fwait
push
imul
js
pop
loopne
bound
inc
jbe
push
jl
pop
xchg
fldt
incl
cmp
mov
ja
lock
in
in
mov
mov
cmc
jmp
movsl
fsts
sbb
je
dec
out
ds
jnp
stos
xchg
sub
push
ds
sbb
cmpsl
pop
decl
sbb
movsw
in
xchg
push
outsb
lcall
lcall
loopne
cmpsl
mov
mov
pusha
cwtl
test
jge
ret
mov
push
or
ret
xchg
or
cmpb
sub
loop
pop
push
mov
push
dec
mov
jb
add
ss
fs
jge
or
aam
shll
pop
push
xchg
jl
iret
cs
ds
cmp
add
fs
outsb
push
jmp
lds
pop
mov
inc
or
addr16
out
push
pop
xchg
cmpsb
lea
shl
pop
js
dec
jge
pop
mov
fnstsw
mov
jg
dec
sbb
pop
mov
scas
jl
push
push
add
icebp
add
pop
jp
dec
imul
data16
lods
adc
lret
out
jge
adc
std
and
dec
inc
call
inc
mov
pop
arpl
cld
scas
testl
push
stc
inc
nop
sub
int
cmpsl
scas
jnp
push
fwait
sub
les
mov
pop
mov
and
in
jo
cltd
mov
inc
push
faddl
in
cli
cmc
sarb
sub
adc
inc
dec
aad
data16
arpl
inc
in
xor
out
and
sti
in
cmp
repz
sarb
jge
mov
imul
cmpb
jbe
push
mov
jg
fdivl
adc
fiaddl
or
int
mov
loop
mov
push
mov
out
mov
fisubl
cmp
inc
or
adc
ss
jns
int
push
test
lahf
icebp
cltd
in
mov
out
sbb
aam
push
fcom
add
scas
adc
jge
xchg
jbe
and
inc
lret
jns
sbb
leave
arpl
sub
jbe
mov
pusha
dec
data16
sbb
xor
leave
inc
jecxz
mov
hlt
scas
scas
ret
pop
pshufw
pop
stc
adc
icebp
pop
cmp
das
and
pop
pop
sbb
sahf
mov
call
popf
xor
lods
mov
mov
call
jmp
inc
rorl
shll
xchg
xor
test
fs
dec
enter
je
sbb
mov
divb
aaa
jmp
imul
push
pop
xchg
andl
mov
cmpsb
mov
fidivs
adc
imul
xor
sti
insb
push
scas
mov
jge
rorb
and
js
jmp
adc
jb
cs
mov
mov
sbb
add
aaa
mov
out
dec
adcl
idivb
dec
rcll
jbe
jle
fildll
sbb
leave
jmp
test
dec
sahf
jmp
and
or
xor
orl
push
mov
pop
inc
sub
imul
int3
jp
insl
xchg
jmp
mov
and
cli
mov
test
daa
cmpsb
insl
mov
repz
mov
lea
sub
xor
jne
jp
pop
lahf
js
add
xor
clc
xchg
lret
mov
js
xchg
xor
lods
xor
sub
pop
enter
jl
cmp
dec
xor
ret
pop
aad
xor
pop
push
dec
mov
xor
data16
jb
cmc
or
notl
push
mov
sbb
cmpb
fstl
pop
stos
insb
mov
sbb
lea
sub
mov
xorl
inc
dec
and
dec
push
prefetch
inc
mov
rclb
or
aad
inc
mov
sub
push
imull
and
adc
arpl
mov
push
stos
or
sbb
mov
cmp
stc
mov
mov
mov
xor
push
inc
iret
std
stos
sub
inc
xor
fwait
inc
cmp
or
in
mov
ljmp
sbb
mov
lock
repz
or
fldt
test
inc
xor
mov
mov
push
push
dec
push
mov
add
or
fidivs
scas
add
leave
pusha
es
data16
inc
cmc
jle
or
mov
sbb
mov
inc
sbb
sarl
dec
push
mov
and
xor
out
inc
or
mov
fmul
xchg
mov
xor
scas
push
ds
pop
sahf
push
sbb
aad
sub
lahf
jns
repnz
sub
push
sbb
leave
pop
enter
cmp
or
mov
mov
ret
stc
ja
jae
faddp
in
push
mov
mov
add
inc
add
pushf
mov
inc
stos
push
cld
cmpsl
jmp
scas
pop
insl
icebp
rorb
inc
inc
sbb
push
xchg
mov
dec
push
in
test
ss
and
lcall
out
lods
andl
stos
repnz
add
orl
mov
repnz
cmp
imul
mov
mov
outsl
cmp
dec
ret
and
xchg
je
enter
adc
adc
incl
std
dec
int3
inc
mov
xchg
jb
xor
shlb
addr16
in
insb
fdivrs
loope
jge
xor
or
out
insl
mov
lret
loop
xor
cmpsb
aas
ficoml
or
sub
insb
mov
dec
bound
pop
ljmp
xchg
sahf
pop
xor
mov
test
out
adc
sti
in
pop
add
je
inc
pop
xlat
pushf
pop
xor
outsb
inc
std
pmulhuw
repz
iret
xchg
mov
xor
jne
pop
out
pop
or
in
mov
inc
neg
mov
fs
das
xchg
and
pushf
jle
in
mov
mov
clc
xchg
adc
mov
push
xor
js
push
cmp
dec
and
xor
lods
stos
int3
rorl
sbb
mov
test
repnz
and
popf
mov
adc
es
sub
add
insl
jmp
xchg
pop
xor
repz
dec
scas
insl
fnstsw
cmp
ret
sub
xor
add
mov
pop
daa
stos
pop
aas
loope
xor
imul
push
and
int3
std
outsb
xchg
lret
xchg
or
mov
pop
dec
add
bndldx
loopne
into
or
aad
daa
push
imul
aaa
lds
and
pushl
test
data16
shlb
mov
mov
xchg
roll
repnz
insb
push
add
mov
test
mov
rcll
pop
sbb
nop
push
out
repz
xchg
pop
shlb
movsb
adc
ds
mov
sbb
into
rcrb
push
ja
inc
mov
xor
jb
dec
adc
filds
mov
xor
les
add
adc
mov
or
inc
xor
in
mov
mov
insb
push
pop
push
and
mov
aad
pop
jnp
mov
cmp
jnp
cmp
or
mov
xor
imul
in
rclb
add
mov
inc
call
sbb
inc
add
mov
sbb
repz
div
xlat
lods
sti
lds
aas
sbb
scas
mov
cwtl
add
popa
mov
mov
cmpsl
inc
xor
adc
or
mov
jo
dec
outsl
sub
movsb
sti
xor
mov
sbb
movsb
jge
xor
fdivrl
cmp
mov
lcall
and
repnz
xor
jnp
pop
enter
es
ret
repnz
test
aas
fs
sub
adc
push
out
shl
pop
pushf
jbe
fisubrl
xor
xor
cltd
fcmovbe
lahf
mov
mov
cmp
cmp
arpl
fists
push
stos
jns
aam
call
mov
hlt
sub
adc
sbb
sub
fisubl
in
lahf
push
jb
cmc
fcmovnb
jp
cmpsb
add
or
mov
mov
fnstsw
mov
pop
or
push
outsb
cwtl
daa
clc
mov
into
addr16
pop
ret
add
cmp
inc
insl
push
fldt
aad
inc
mov
inc
inc
push
movsb
jbe
pop
and
xchg
ds
sbb
ljmp
loop
int3
ss
lret
clc
mov
mov
xchg
scas
or
jmp
ficomps
lret
cmp
insl
jle
push
pop
mov
ficoml
push
ja
enter
jge,pt
adc
sbb
cli
rclb
outsb
sub
sbb
push
scas
or
stos
or
inc
xor
test
xlat
mov
into
push
mov
ds
or
jp
xchg
ja
xor
dec
mov
call
sub
mov
add
outsb
outsb
push
cmpsb
aad
fimuls
dec
add
stc
psadbw
dec
into
enter
stos
adcb
jl
mov
dec
cmp
iret
outsl
jecxz
mov
pop
roll
gs
repnz
fistl
xchg
sbb
inc
div
xor
fbld
out
or
arpl
pop
aaa
sub
jo
stos
pusha
icebp
jns
inc
mov
pop
xchg
lcall
arpl
xchg
mov
call
cmc
mov
push
cmp
adc
sbb
in
rcrl
incl
pushf
mov
jp
testb
in
lods
inc
frstor
outsl
es
arpl
mov
and
cmpsl
icebp
cmpsl
xchg
and
xlat
push
bound
cmp
in
sub
mov
dec
add
pop
fxrstor
xchg
lods
ret
cltd
jne
push
mov
push
and
sub
lods
or
repnz
insl
stos
scas
test
cwtl
outsb
and
repz
popf
and
jo
lahf
cmp
lea
test
push
fwait
test
fisttpll
js
add
sahf
out
out
mov
pop
ljmp
cmp
imul
adc
mov
sub
sbb
addr16
cmpsl
sbbl
cmp
imul
xchg
out
push
out
stos
insb
and
cmpsb
push
and
adc
xor
xchg
mov
add
dec
sub
call
jmp
cmp
jl
icebp
ds
lds
inc
js
ds
test
sbb
jp
jge
int3
pop
push
push
repz
or
out
pop
popa
add
ret
leave
and
mov
fwait
ljmp
push
mov
mov
add
xchg
push
in
dec
int
push
push
sbb
push
add
sub
filds
xlat
imul
pop
test
jo
jecxz
jmp
push
fsubrs
mov
test
or
shll
lea
test
mov
mov
or
mov
stos
cmpsb
outsl
push
aam
mov
aas
pop
idiv
and
rcl
sbb
pop
sahf
mov
cmp
add
xor
or
std
xchg
popa
cmp
xor
sti
adc
jp
call
adc
out
nop
mov
mov
xchg
xchg
xor
lcall
or
mov
or
std
mov
inc
push
notl
sub
fists
xchg
xchg
ret
push
loop
push
dec
adc
addl
popa
loopne
jno
jns
jge
stos
push
fsubrs
inc
push
adc
loopne
or
xlat
sbb
sbb
push
push
xor
lret
sub
push
sub
xchg
call
inc
or
dec
inc
rcrl
xor
add
aaa
std
into
ret
test
xchg
push
inc
bound
ja
push
cmp
or
mov
mov
fbstp
cli
std
cmp
push
inc
rorl
stos
std
or
gs
fimull
inc
push
inc
sub
mov
data16
and
testb
xor
test
movsb
or
xchg
or
adc
sbb
xor
shll
jecxz
pop
sbb
xchg
lods
movsl
inc
out
fldenv
xor
xor
ss
imul
mov
or
push
mov
add
iret
mov
scas
push
loopne
jecxz
int
in
inc
adc
inc
and
dec
sbb
dec
push
or
mov
lds
outsl
and
imul
push
xlat
mov
mov
sub
faddp
aad
xor
fcmovnu
or
sbb
dec
xchg
xchg
sbb
jnp
pop
pop
lods
push
std
jge
je
inc
test
push
incb
cmp
out
xor
aad
int3
push
addb
shrb
and
cmp
lods
push
cmp
loopne
pop
inc
push
fldt
xor
mov
xchg
pop
pop
inc
outsl
jg
jle
dec
sub
mov
adc
cld
orl
jo
dec
mov
pop
or
jl
add
jnp
and
add
test
ds
fsubp
out
and
or
aam
xchg
daa
jno
push
mov
inc
jl
cmp
mov
ret
xor
mov
adc
xor
dec
mov
out
inc
inc
loopne
jl
fnstenv
pop
cld
jnp
cvtps2pi
pop
idiv
mov
lea
sbb
jle
js
outsl
in
aad
or
loopne
lods
push
test
add
push
xchg
orb
out
test
sub
sti
push
jnp
pop
outsl
xlat
xlat
jmp
add
outsl
add
cmp
inc
lock
dec
sub
mov
jae
lret
mov
jle
fwait
sbb
dec
sbb
ficomps
adc
push
xor
sub
call
and
jmp
cmp
mov
fstpt
out
add
xchg
notb
cs
mov
leave
pop
add
fnstsw
addl
cs
cltd
jg
dec
out
fcoms
jecxz
pop
jno
popf
lcall
in
jl
repnz
ret
sub
test
cmp
mov
xchg
jae
pop
xchg
out
and
mov
mov
push
adcb
jne
xor
cltd
xor
cli
or
insl
fnstenv
sbb
sub
pop
cmp
add
pop
cli
sahf
fadd
xchg
push
inc
or
and
ror
lds
das
jmp
nop
mov
sahf
fcoml
bnd
ja
repz
xchg
lret
aam
jmp
inc
repnz
out
add
push
push
add
lea
icebp
sbb
enter
stos
enter
cld
jl
fwait
xchg
fisubrs
and
scas
fistpl
or
faddp
mov
movsl
push
jns
test
icebp
mov
sbb
pinsrw
xor
pusha
fnstsw
xchg
fimull
call
mov
push
les
push
aas
fiaddl
neg
stc
sub
add
sub
xchg
xchg
ficomps
jb
xchg
mov
push
push
imul
and
sti
sub
push
popa
adc
sub
xchg
cmp
insb
add
pop
mov
push
mov
mov
mov
jp
inc
lahf
cld
sub
sub
push
or
cmp
push
push
inc
fistl
and
push
ja
lret
or
xor
fs
mov
push
dec
sbbl
in
jno
leave
sbb
mov
cwtl
aas
xor
gs
mov
sbb
cltd
andl
nop
loopne
adc
pop
sbb
push
mov
inc
test
pop
fstp
adc
and
int3
push
jo,pn
push
or
and
rcrl
mov
outsb
rclb
imul
jl
sbb
cltd
pushf
add
pop
inc
adc
in
inc
inc
or
mov
enter
outsb
cli
lock
inc
stos
rorl
ja
addl
lods
jecxz
dec
adc
mov
jne
mov
call
cld
inc
outsl
in
pop
rorb
stc
or
mov
mov
hlt
push
pushf
add
dec
test
pop
pushf
shrl
pop
lcall
mov
jle
add
aad
or
mov
xor
and
adc
push
mov
pusha
adc
mov
cs
push
xor
fldt
cltd
dec
cwtl
and
outsl
dec
push
jns
cltd
test
add
push
mov
ja
jae
das
popa
loopne
mov
and
cs
jl
xchg
lds
rclb
jo
jne
mov
andb
mov
pop
lea
push
clc
push
mov
xchg
add
scas
adc
cld
jle
xor
mov
ret
xchg
icebp
outsb
movsl
dec
or
stos
aas
stc
sbbl
xchg
mov
stos
and
iret
cmp
ds
aad
cmp
add
mov
cli
sub
sub
test
cmc
test
push
repz
mov
es
xchg
shll
in
push
xor
mov
imul
scas
adc
and
cmp
stc
jns
jge
xchg
mov
testl
cmp
and
mov
dec
inc
inc
pop
lock
xor
cmp
mov
sub
lret
dec
fisubrl
add
and
imulb
pop
jge
mov
xchg
jnp
mov
aam
or
jmp
lret
jge
cld
shl
int
mov
out
push
lahf
or
adc
xor
sbb
mov
and
fbstp
xchg
adc
in
rorb
sti
jno
mov
out
cmc
mov
mov
and
rorb
mov
push
mov
stos
das
sub
sub
sub
add
add
fmuls
or
pop
ror
xorb
scas
adc
in
and
adcb
arpl
and
xchg
jp
sub
mov
movsb
or
fwait
and
out
lret
push
inc
out
arpl
xchg
popa
xchg
jmp
and
into
xchg
imul
lret
xor
lds
inc
inc
xchg
dec
mov
cwtl
xchg
popa
push
xor
and
cmova
dec
sbb
popa
roll
loopne
push
fdivrl
adc
push
notl
lods
loop
jp
sub
push
mov
repz
inc
push
nop
sahf
loop
mov
mov
add
popf
sbb
outsl
jbe
in
fwait
test
dec
pop
adcb
lret
ds
lock
mov
aas
test
cmp
gs
int3
outsl
testl
jge
sbb
or
jl
pop
jne
pop
push
mov
sub
mov
push
mov
scas
in
fnstenv
xchg
pop
rorl
data16
loop
std
cmp
pop
mov
insb
xchg
dec
pop
xor
stos
push
add
imul
fdivs
enter
ret
xor
es
fcmove
add
sbb
enter
push
jge
jns
cmp
inc
mov
or
ja
push
iret
lret
mov
cmp
mov
inc
shll
xchg
inc
into
sub
aam
adcb
lock
xor
add
push
sbb
sub
push
imul
push
jl
sub
int3
push
arpl
sub
and
cmp
insl
push
leave
jmp
or
scas
xchg
add
test
mov
xchg
jns
lea
je
and
adc
test
adcl
sarb
fidivrs
scas
out
mov
mov
jbe
mov
repz
mov
ret
pop
mov
fnsave
pushf
mov
adc
enter
sarb
mov
cs
idivl
fnstcw
xor
test
or
xchg
xchg
fstpl
scas
adc
out
push
outsl
push
xchg
sub
cmp
movsb
jne
sub
andb
sbb
incb
stc
pop
inc
je
lods
lods
pop
or
and
call
imul
mov
popa
xor
xchg
mov
sub
push
cmp
pop
and
push
imul
sub
xchg
stos
mov
mov
mov
mov
sarl
cli
jecxz
out
enter
sbb
repnz
cwtl
jge
push
push
inc
fstl
sub
cmp
loope
xchg
push
call
sub
jl
lods
pop
sbb
repz
out
data16
and
jb
sahf
ja
xor
bound
sbb
push
popa
addr16
push
outsl
push
mov
nop
add
xchg
and
lea
mov
add
fwait
inc
and
jp
adc
add
or
jno
repnz
xchg
jb
pop
xor
dec
rorl
cmp
lcall
and
das
mov
xchg
stos
lock
xlat
mov
dec
dec
xchg
push
outsb
mov
push
and
push
lret
mov
shl
js
mov
pop
push
dec
inc
popf
mov
mov
addl
or
jns
or
mov
rolb
cmp
mov
or
pop
mov
das
and
push
cmc
adc
push
jp
test
xchg
xor
mov
adc
test
jge
adc
and
popa
lods
jno
lds
jmp
scas
stc
mov
jno
dec
aas
dec
loop
ret
scas
mov
add
dec
adc
sub
pop
testb
fwait
mov
adc
xchg
mulb
in
leave
stos
push
out
ret
out
sub
les
loope
fcmovnu
xor
int3
xor
xor
jle
push
outsl
xchg
rcrb
in
scas
dec
les
subb
insb
or
rorb
shll
pop
rol
in
std
loop
jbe
imul
sub
jp
mov
loop
sub
pop
movzbl
scas
scas
lret
pop
or
test
sbb
lcall
push
imul
cmpsb
dec
mov
adc
je
repnz
test
xchg
filds
pop
add
imul
sbb
or
loopne
dec
rolb
or
add
jns
pop
mov
push
mov
aad
mov
sub
sahf
pop
pusha
and
iret
mov
push
dec
jbe
dec
sbb
xchg
mov
mov
vmovq
and
push
fsubs
dec
sub
sub
stc
cld
insb
jecxz
push
mov
mov
mov
fidivrs
aaa
orb
push
inc
nop
jge
jbe
inc
lret
leave
or
xchg
fnstsw
mov
adc
add
jo
dec
decl
add
push
cmp
mov
ss
outsl
pop
into
mov
mov
rorb
lcall
repz
in
lods
in
push
push
add
ds
aam
subl
imul
es
push
js
push
lcall
inc
imul
cmc
mov
test
cltd
sbb
jmp
insb
lcall
test
mov
popw
and
dec
sbb
sbb
mov
ja
int
inc
mov
bound
pop
aam
daa
lret
paddb
jae
addr16
xorl
leave
inc
adc
xor
inc
movq
cltd
js
fdivl
mov
pop
out
push
int
inc
add
in
shrl
fmull
pusha
imul
test
stc
ja
pop
lcall
jo
popl
jle
xchg
or
and
cmp
mov
or
add
imul
cmpsb
push
cwtl
test
jo
insb
xor
mov
hlt
dec
xor
mov
and
sti
loop
cli
cmc
rorb
fxch
aas
xor
outsb
lods
mov
cmp
loopw
repz
aas
mov
sbb
xlat
mov
add
adc
push
out
stc
nop
out
mov
out
inc
neg
or
daa
dec
jae
jl
sub
lods
inc
in
sbbb
movsb
and
cmp
enter
ss
pop
jl
data16
mov
gs
sub
fadds
push
insl
dec
jge
jo
cltd
xchg
fadds
addr16
arpl
icebp
inc
in
inc
add
sub
shlb
push
mov
adc
imul
xor
push
ret
jae
lods
int3
js
cmp
or
xchg
mov
dec
mov
sbb
mov
ds
andl
rcrb
xlat
into
movsl
in
or
cmp
outsl
fimull
out
aam
daa
fimull
inc
xchg
push
scas
mov
mov
lock
push
int3
imul
mov
jle
test
and
or
roll
jmp
add
jle
adc
int
roll
xchg
insb
dec
mov
mov
xor
push
mov
sar
or
cwtl
xor
or
sti
add
sub
icebp
adc
insl
xor
dec
pop
mov
aas
xchg
sbb
std
int3
mov
jbe
or
fists
insl
adc
push
in
movsb
dec
inc
mov
pushl
mov
shll
movsb
iret
test
into
cmc
jle
in
psubusw
mov
aad
add
fstpt
iret
repz
adc
or
xor
aam
ja
leave
sub
or
mov
in
test
lock
sbb
sub
fmull
xchg
cmp
fiaddl
movsb
bt
jp
push
and
movsb
jb
mov
xor
mov
xor
pop
aam
adc
adc
pop
aaa
ss
mov
mov
sub
and
out
cmpsl
lea
push
lods
popa
sbb
jge
orl
mov
addr16
cld
loop
ret
arpl
fdivrl
push
xor
mov
push
lock
dec
pop
and
push
push
enter
std
pop
inc
cmp
pop
lcall
inc
lret
cmp
cld
insb
xor
sbb
cmpsb
cmpsl
loopne
outsb
pop
fiadds
clc
mov
xor
xor
shrl
jae
inc
inc
loopne
lods
mov
mov
jge
push
loopne
ljmp
sub
imul
mov
xchg
nop
cmp
jmp
flds
shlb
pop
sub
dec
es
arpl
incl
out
aad
sti
aam
fs
push
add
push
rcrb
jne
xlat
inc
lea
xor
and
xchg
pop
push
stc
mov
inc
push
inc
pop
sub
cmpsl
loope
fnstenv
out
push
nop
in
adc
adc
pop
adc
ret
lret
addr16
mov
mov
jns
xor
and
mov
in
in
int
pop
ret
push
push
pop
add
subb
xchg
jno
int
adc
pop
stos
mov
clc
mulb
inc
mov
shl
push
fimull
mov
int
and
insb
sbb
jne
mov
lds
loop
and
add
or
sub
pop
jo
or
mov
scas
lock
cmp
je
ret
std
stos
pop
push
int
push
nop
jp
jl
cmp
xor
cmc
imul
mov
pop
mov
pusha
test
fldt
jno
jno
dec
dec
sarb
push
movsl
mov
mov
mov
sahf
and
dec
xchg
rclb
xchg
mov
in
push
lcall
or
repnz
fidivs
lods
lea
aaa
add
lea
ret
jmp
in
xor
add
sub
xchg
scas
jmp
mov
clc
cmpsl
sbb
dec
daa
faddl
mov
pushl
mov
test
push
add
pop
mov
jns
mov
cltd
call
xchg
pop
mov
les
cmc
add
jg
loope
lahf
outsl
fdivrl
xor
xor
movsl
lcall
and
lcall
push
sahf
cmp
sti
pop
push
insb
out
push
inc
test
cmpsl
mov
mov
repz
js
sub
popa
lahf
xchg
jb
aaa
inc
into
jle
xor
in
push
jne
filds
ficoms
repz
fistpll
inc
int
mov
subl
and
aam
xor
sbbl
and
mov
mov
lods
cli
mov
int
push
dec
sahf
lock
mov
rcl
mov
jne
xchg
pop
sub
lret
flds
xor
lret
add
stos
xchg
mov
insb
aad
pop
adc
xor
xchg
nop
xchg
mov
aam
add
push
push
mov
or
insl
mov
push
jg
push
mov
iret
call
xor
dec
dec
or
aad
xchg
pop
mov
fwait
adc
mov
lods
jno
lea
ret
jg
aam
xor
or
adc
push
mov
and
dec
xchg
mov
bound
insl
lods
xor
sub
in
pop
sahf
mov
jl
adc
icebp
adc
xchg
jp
sub
jmp
mov
sbb
scas
lock
sub
mov
aad
push
mov
sbb
mov
mov
xor
xor
xor
cmp
mov
and
out
punpcklbw
push
push
sarb
fcmovnu
sub
sbb
lods
sub
mov
movl
mov
imul
pop
aad
sub
jb
movsb
int
pop
mov
fwait
xor
mov
mov
cmc
mov
ljmp
cltd
int3
and
xor
lea
xor
jnp
popf
jmp
jo
and
addr16
fucomp
push
out
aad
div
icebp
mov
stc
dec
popa
mov
dec
mov
sub
lcall
test
xor
test
stc
lret
pop
cmp
out
hlt
cmp
enter
xchg
je
jle
sub
pop
add
push
int3
adc
push
shr
dec
pop
mov
sarl
cmpsb
popf
cmp
les
outsl
add
out
xorl
xorl
pop
out
cld
sub
mov
stos
fists
mov
ret
mov
push
out
insl
adc
jge
cs
addr16
sbb
fsubs
push
push
pop
fwait
cmc
hlt
xchg
jge
lods
push
in
fstpl
cwtl
cltd
jne
pop
cmp
into
es
mov
fisubrl
sbb
or
out
or
mov
stos
sahf
xor
pop
mov
ds
scas
xchg
pop
pop
repz
scas
sub
int
std
dec
out
ss
bound
and
and
aaa
xlat
inc
sub
or
dec
push
insl
ds
imul
add
scas
xor
lret
jno
sbb
loopne
aad
lret
mov
pop
add
cmp
pop
push
add
push
pop
xchg
sbb
movsl
out
dec
inc
jo
xor
inc
ja
loop
xor
in
jp
faddl
cmp
sbb
rcl
les
sti
mov
aad
sbb
sub
mov
mov
mov
sub
xor
ret
ljmp
sbb
enter
xor
sub
adc
xchg
aas
clc
pop
cmp
int
cli
arpl
dec
shufps
mov
mov
push
inc
popf
cmp
inc
jl
xchg
jb
mov
sbb
flds
inc
inc
inc
jle
stos
cmc
leave
and
and
lods
sub
dec
fmull
lods
fsubs
cld
cmp
mov
jno
push
xchg
movsl
jne
sbb
insb
jo
je
and
mov
cltd
or
imul
rclb
fdivs
inc
sbb
or
cltd
insb
cli
stos
movb
shl
dec
push
add
repz
jnp
shr
dec
jb
mov
sbb
inc
pop
popf
scas
test
nop
jb
je
aad
outsb
ret
js
into
sbb
cmp
dec
mov
fwait
lods
cmp
dec
inc
pop
jb
mov
push
pop
jo
ljmp
adc
aas
push
jne
xor
rcl
xlat
mov
pop
mov
test
and
cmp
xor
nop
push
jp
push
pop
stos
add
or
mov
mov
jae
mov
push
cs
adc
mov
stos
enter
mov
sub
pop
outsl
scas
stos
adcb
shlb
cmp
dec
lcall
rorb
jbe
pop
imul
cmp
stos
out
sub
xlat
inc
sbb
xchg
adc
cmp
pop
xor
add
cs
in
rclb
xchg
add
js
sbbl
gs
shll
adc
das
xor
mov
push
fcmovne
or
push
repz
mov
sub
jg
mov
je
imul
inc
and
mov
and
mov
lret
imul
ja
adc
push
aas
push
pop
mov
jl
clc
adc
xor
and
in
decl
adc
cmp
pop
pop
or
hlt
mov
rcl
pop
cli
test
add
arpl
es
push
jnp
push
mov
pop
push
roll
notb
dec
inc
mov
std
xor
mov
ss
pushf
or
popa
adc
jne
dec
sti
fidivrs
fstps
aaa
mov
js
mov
fs
push
and
in
rorl
sub
arpl
dec
cld
fadd
xor
pop
dec
or
mov
inc
mov
mov
adcl
rorb
arpl
pop
in
insl
sahf
lcall
lea
sbb
push
adc
add
shll
pushf
xorb
xor
lretw
add
sbb
aad
push
lahf
insb
lods
aas
sub
fistpl
xchg
push
pop
inc
je
aas
lret
sti
push
dec
xchg
jae
outsb
adc
adc
call
push
stos
popf
dec
cld
shl
repz
and
xchg
push
adc
movsb
xlat
jae
sbb
push
ret
je
loop
sahf
lods
cwtd
jns
sbb
xchg
xlat
mov
fldl
popa
js
adc
nop
push
cmp
xchg
mov
dec
sbb
dec
and
frstor
neg
cwtl
rorb
iret
push
inc
in
and
mov
jle
fsubl
xchg
fldl2t
mov
mov
fs
andl
lcall
loop
rclb
add
in
cmp
or
adc
dec
in
test
jno
add
int3
jae
pop
fadds
mov
je
and
loop
xlat
movsb
out
dec
std
sbb
sahf
add
int3
pop
hlt
or
mov
jmp
mov
jle
pop
std
mov
xor
mov
outsl
lods
jno
xor
sahf
push
xor
enter
fxch
and
outsl
addr16
adc
out
je
cmp
mov
mov
xor
cmpsb
xor
mov
mov
hlt
mov
popa
inc
ljmp
int
inc
or
test
jne
jne
js
push
stos
je
sbb
fnsave
popa
std
push
cs
fwait
inc
push
int3
or
pusha
mov
dec
movsb
lret
mov
outsb
ret
out
add
in
insb
xchg
mov
xor
and
les
xchg
adc
lock
xchg
mov
test
cmc
mov
sbb
mov
clc
mull
mov
mov
scas
jge
int3
xor
aad
in
xor
inc
push
dec
and
xchg
mov
test
sub
xor
lcall
inc
add
xchg
sbb
mov
insb
xlat
sbb
rorb
push
inc
xor
xchg
test
stos
pop
pop
push
inc
lahf
add
inc
jbe
cmp
inc
fwait
jne
loopne
add
adc
mov
repz
xchg
movsl
mov
movsb
outsl
or
inc
les
cmp
mov
movsl
aaa
push
cmp
or
dec
jle
pop
dec
dec
sti
out
fildl
cwtl
jmp
fnstsw
imul
xchg
addr16
std
fisttps
jl
pusha
push
mov
pop
push
mov
add
fldt
movsl
addb
ja
xchg
jle
xchg
inc
sti
movsl
aad
adc
shl
inc
nop
in
mov
shrl
mov
pusha
mov
sbb
fisttps
sbb
cmp
cmp
xchg
sbb
adc
insb
jge
dec
jle
fadds
cmp
xor
inc
pop
jle
jnp
adc
pop
and
xor
shlb
mov
push
jge
fstl
push
push
xchg
icebp
nop
mov
fcoms
lcall
push
int3
mov
dec
call
sub
add
inc
xchg
xor
mull
pop
and
shrb
shrb
mov
andl
fwait
lods
icebp
adc
lahf
jne
insl
or
pop
jae
leave
iret
imull
outsb
xchg
ret
push
dec
shr
in
xor
lock
sub
mov
or
call
or
mov
xchg
in
les
inc
add
add
ficoml
aad
push
aam
mov
lret
adc
iret
dec
mov
jecxz
dec
jnp
push
push
xsha1
cmpsb
into
aam
jmp
push
cmp
sbb
pop
dec
add
xor
je
add
loope
rorb
lock
adc
imul
cmp
mov
clc
mov
fisttpl
lods
jmp
mov
and
jno
leave
mov
pusha
sbb
cmpl
ret
xchg
jmp
lcall
push
repnz
subb
insb
call
adcb
les
xchg
mov
cwtl
sub
cmp
push
lods
sbb
lods
add
mov
push
or
xchg
pop
repnz
add
xchg
mov
loop
push
sarl
mov
repnz
jmp
lods
adc
pop
xchg
stc
push
cltd
cld
outsb
or
mov
in
fsub
lods
pop
jl
stos
xchg
xchg
xor
mov
mov
mov
mov
fwait
jno
aaa
es
or
sub
pusha
es
adc
sbb
lds
pop
fcomi
xchg
ss
jmp
sbb
mov
dec
add
rclb
scas
inc
add
push
xchg
xchg
rcrl
test
loop
leave
inc
lcall
pop
psrlw
xchg
scas
jb
loope
push
push
or
cld
mov
mov
je
cmpsb
outsb
xor
sbb
repz
sub
pop
sbb
ja
rorb
jae
sbb
sbb
xchg
or
cs
js
mov
or
sub
dec
sub
out
insb
inc
dec
push
push
inc
test
divl
inc
cmc
push
cmpl
bound
cmp
sub
mov
push
jmp
xlat
scas
pop
jae
pop
jbe
sarl
cmpsb
outsl
mov
inc
ret
xor
stc
dec
lods
inc
daa
lods
int
push
mov
sbb
int
movsb
pop
xlat
popa
cmpsb
xor
or
insb
fcomp
pop
repnz
mov
sbb
xchg
dec
sti
jg,pt
and
jae
mov
cmp
sar
out
insb
inc
fdivrs
pop
in
test
mov
imul
push
or
mov
fldcw
push
xchg
mov
out
sub
out
jno
jnp
mov
cmp
stc
jno
add
ret
sbb
aaa
ret
into
adc
xor
dec
push
jnp
data16
cmp
push
push
push
mov
sbb
in
out
ja
and
je
shlb
add
xorb
sub
push
sub
mov
loopne
aam
call
xor
jge
inc
fisttpll
stos
enter
mov
dec
mov
push
pop
daa
xor
ror
jnp
and
inc
lds
mov
rorb
dec
pop
std
lret
popa
xchg
mov
je
adcb
andl
xor
push
add
jl
bound
jecxz
xchg
mov
xchg
inc
sarl
in
and
push
shlb
mov
pop
je
dec
shrb
lcall
mov
dec
gs
xchg
cmova
lods
xor
in
push
inc
cmp
xchg
mov
and
pop
fs
dec
in
loopne
or
das
push
cmp
je
nop
call
popa
outsl
cld
call
and
imul
and
push
cli
mov
mov
fs
notl
test
adc
pushf
lret
test
outsb
fwait
leave
push
int
test
ds
push
pushf
jno
scas
add
ja
cmc
cld
jne
jg
pop
push
add
loopne
jge
mov
mov
data16
fsub
iret
push
rorb
aas
lea
xchg
or
nop
mov
or
pusha
imul
pop
fcoms
pop
and
cmp
subl
cmp
sbb
add
push
sbb
inc
cmpsb
js
and
cmp
js
push
sti
std
or
idivl
xor
xchg
scas
test
sbb
es
or
fwait
xchg
test
mov
shl
stos
or
jl
sti
adc
adcb
pop
popf
std
mov
movsl
aas
repnz
sbb
adc
mov
fdivrl
xchg
cs
sub
ret
push
and
fiadds
jle
call
int
fcmovne
mov
repz
ss
rolb
in
repz
imul
mov
loopne
add
add
cli
dec
jbe
out
fisubs
mov
mov
shl
lods
xchg
ljmp
stos
pop
outsl
or
sbb
push
mov
int3
cwtl
ficoml
xchg
jl
mov
push
or
push
lret
or
or
pop
push
mov
push
ret
repnz
adc
fcom
jno
sub
xor
and
mov
sub
push
addr16
rcll
pushf
push
push
ds
sbb
xor
adc
push
pop
aam
mov
cmp
xor
mov
loopne
cmpsb
test
leave
cmpsb
repz
mov
rep
cmp
jb
out
xor
pushf
aaa
sbb
fiadds
mov
push
xor
imul
mov
push
dec
icebp
mov
pop
push
movsl
add
mov
insb
jae
mov
hlt
add
dec
adc
adc
in
std
popa
mov
fwait
xor
out
add
jmp
pop
stos
ret
mov
mov
imul
inc
pushf
sub
add
lret
sub
iret
xchg
lcall
divb
or
cmc
mov
dec
add
lret
jp
je
or
sahf
ret
push
std
push
test
mov
xchg
int3
test
pop
aad
xor
fimuls
insb
dec
fs
stos
stos
aam
fstpl
xchg
lahf
in
sub
dec
data16
leave
scas
pushf
cmp
pop
test
dec
cwtl
cmp
cld
and
rcr
sahf
sub
sub
imul
shld
mov
cltd
inc
pusha
andl
adc
jns
fcoms
ss
sbb
adcl
aas
jecxz
in
jp
mov
sbb
scas
jl
out
fadds
and
das
sbb
in
addr16
add
out
pop
cld
scas
jg
mov
cmp
fsubl
xlat
or
cmp
stos
cmp
shll
mov
fstl
shll
mov
fwait
lret
push
and
push
dec
sub
xchg
mov
push
lock
popf
test
mov
popa
mov
xor
loop
push
jne
push
movsl
mov
loope
scas
imul
inc
cmpsl
sarl
jns
ds
fwait
inc
enter
mov
mul
inc
mov
nop
and
pop
es
sahf
push
dec
out
iret
sub
jne
call
pop
clc
mov
fnstsw
mov
xchg
sahf
sub
mov
jl
sbb
cli
mov
popf
inc
xchg
dec
filds
mov
lods
pop
outsb
xor
call
cmp
pop
stos
in
xlat
dec
les
imul
sti
push
gs
push
test
dec
xor
arpl
test
fwait
ret
gs
pop
out
lcall
pop
nop
outsl
sbbb
mov
mov
push
jno
xor
inc
push
sti
pop
inc
loopne
mov
stos
fwait
pop
add
clc
bound
popf
add
js
scas
jmp
inc
jp
jle
inc
mov
out
push
mov
pop
push
popf
std
fcmovb
mov
insl
aam
cs
cmp
in
mov
pushf
xchg
and
icebp
dec
les
pop
addr16
fcomps
mov
add
aaa
inc
pushf
or
addb
cmp
idivl
jns
sub
xchg
cmp
mov
loopne
ret
shrb
test
insl
aad
shr
divb
fs
popf
cmp
add
popf
stos
loope
mov
sbb
out
inc
push
addr16
push
lock
sbb
adc
mov
cmp
mov
std
and
sub
xor
jle
dec
mov
jle
mov
fisubs
fwait
pop
movsl
sbb
test
divl
jl
inc
or
aad
je
xchg
popf
dec
xor
stos
enter
xchg
mov
mov
add
lods
push
shlb
out
xor
push
repz
xor
fiadds
and
and
pop
or
adc
xor
jo
popa
cwtl
mov
rorl
movb
insb
push
ljmp
and
inc
aas
mov
dec
inc
dec
mov
sub
mov
movsl
inc
jbe
cli
cs
mov
test
xchg
pop
pop
xor
cmovno
jo
idivb
adc
pop
dec
mov
ds
dec
cs
fcmovnu
xchg
loopne
leave
or
jge
fsubrl
sbb
inc
insl
insb
out
mov
les
xchg
es
lahf
dec
negl
xchg
sbb
lcall
fsubp
mov
fs
cmp
or
pop
sahf
gs
cmp
push
ja
lahf
pop
imul
mov
jge
mov
pop
sbb
icebp
inc
mov
mov
mov
pop
icebp
loope
or
cltd
jle
xor
mov
shr
add
fdivrs
fisttpll
out
inc
test
std
inc
cmpsl
and
fimuls
shll
and
lahf
pop
mov
fistl
push
enter
pop
aam
push
cmp
jle
loope
mov
adc
adc
cwtl
stos
imul
pop
ds
mov
dec
push
fimuls
adcl
add
jmp
mov
jg
into
sub
popw
mov
or
faddl
mov
dec
adc
mov
movsb
cld
in
sbb
mov
call
mov
fisttps
sbb
test
sub
or
pop
sub
fdivp
push
inc
pop
add
test
movsb
mov
test
subb
repnz
mov
pop
call
add
test
sub
jmp
cmc
mov
pushf
xorb
ss
shrl
cs
jne
sub
mov
sarb
mov
test
roll
in
mov
add
out
dec
xchg
xor
pushf
pop
fdivl
lods
addr16
adc
aad
or
add
nop
sbb
mov
stos
inc
cmpsb
daa
dec
mov
push
scas
les
movsl
fwait
js
jb
in
push
sbb
xor
test
add
sahf
sub
add
mov
pop
leave
push
rcll
mov
sbb
xchg
fs
mov
jle
frstor
or
xor
or
jmp
and
xchg
cmp
test
fcompl
lret
shlb
dec
jl
dec
ret
sub
cmp
lahf
mov
int3
push
fcompl
sbb
stc
and
xor
sub
imul
mov
and
jecxz
insl
xor
push
and
mov
cmp
cmp
rclb
stos
push
lahf
sub
inc
test
pop
lods
stc
sub
inc
add
mov
mov
call
mov
dec
sub
std
arpl
movsl
jle
cmpsl
push
lahf
stc
xchg
movsl
inc
jmp
repnz
dec
lods
add
mov
insl
jo
data16
add
dec
adc
dec
je
pop
lods
adc
sbb
push
repz
rorl
out
fcomip
jns
jg
add
sbb
sub
mov
jbe
lods
pop
inc
movsl
pop
adc
sahf
into
sbb
dec
sub
rorl
mov
cs
mov
stos
dec
xchg
inc
cmc
fdivs
stos
push
add
sub
cmp
fsubrl
push
dec
push
xchg
mov
push
and
xlat
mov
xchg
aad
pop
add
add
nop/reserved
xlat
sahf
repz
adc
addb
push
arpl
pop
fsubl
cmp
mov
shrl
jge
inc
test
mov
mov
dec
mov
push
out
or
and
adc
push
or
lret
jmp
xorb
or
jmp
gs
mov
lret
sub
fwait
push
out
dec
stos
push
push
push
out
pusha
inc
fsubl
faddl
mov
sbb
mov
out
cwtl
test
ret
jle
xor
or
or
nop
push
cmp
inc
fcoml
movsl
outsl
cmpsl
mov
sub
divb
dec
addl
jo
mov
aam
and
jl
xchg
fcomip
fisttpl
aas
mulb
pop
iret
loopne
pusha
mov
cmp
lea
bound
int3
cmp
dec
cltd
cld
test
les
ret
addb
js
push
xor
pop
push
js
jle
loop
mov
gs
sar
push
push
mov
or
mov
or
sar
cmp
jg
mov
repnz
push
iret
mov
addr16
mov
push
mov
imul
les
pop
call
lret
lds
jne
into
adcb
push
stos
lahf
lret
rcrl
loope
sbb
xor
and
mov
outsb
cmp
sbb
or
insl
xorb
shrl
and
pop
fwait
jl
mov
sub
xor
pop
push
movsb
dec
cmp
scas
jl
add
les
scas
jl
mov
push
icebp
fstl
inc
adc
xor
jbe
addb
js
cmp
mov
and
xchg
shl
pop
popf
sbbb
test
out
fdivl
cmp
icebp
jecxz
mov
jge
test
sarl
lahf
mov
fstpl
or
rclb
movsb
in
rcrl
fisttpl
inc
xchg
push
jmp
dec
pop
into
inc
lea
inc
cs
mov
or
jmp
lock
mov
leave
dec
jns
jg
repnz
mov
int
outsb
mov
pop
frstor
pop
icebp
iret
addr16
movsb
mov
lret
pop
in
jbe
pop
sub
sub
cmp
push
jp
lcall
les
sbb
imul
roll
int3
jmp
cmc
in
cmp
mov
insl
ja
mov
or
std
insb
jmp
jbe
or
incb
adc
jo
mov
scas
mov
jle
inc
loop
shll
push
icebp
push
hlt
imul
sbb
xchg
jns
aad
outsb
movsl
pop
aam
cs
popa
arpl
sub
stos
pop
popl
test
fisubrl
dec
mov
push
lods
imul
fldt
push
jb
inc
fldcw
in
cmp
mov
icebp
xor
cmp
leave
incl
dec
clc
scas
fldl
mov
dec
in
push
mov
adc
mov
imulb
fstpt
jbe
inc
enter
dec
inc
sahf
or
push
push
fldl
dec
ljmp
neg
sub
stos
lret
pop
bound
jmp
sahf
jb
pop
test
cmpl
fucom
enter
sahf
daa
test
jmp
mov
and
inc
cmp
ja
adc
pop
icebp
inc
std
repnz
pop
xchg
push
or
sub
sub
and
xor
sahf
mov
ret
jae
loopne
add
add
pop
mov
fisttpll
inc
xchg
mov
sbb
arpl
mov
aas
enter
stos
or
mov
cmpsb
push
inc
iret
gs
and
enter
dec
jmp
ss
aad
in
lods
mov
rcrl
xor
je
cld
mov
outsl
int
rcr
cs
add
mov
jmp
aas
lds
shll
outsb
push
rorb
nop
aam
lret
sub
popf
addr16
add
js
in
sbb
pushf
jle
jbe
fnstcw
mov
dec
out
cmp
pop
sbb
sbb
mov
ror
ljmp
rol
pop
nop
stos
jmp
scas
mov
sbb
sub
popf
imul
push
sti
sahf
test
xor
mov
ret
pop
adc
jecxz
adc
lahf
mov
je
jmp
in
dec
sahf
adc
dec
sbb
mov
in
repz
test
inc
mov
xlat
fidivrl
les
mov
les
xor
lret
pop
add
jmp
fstpt
push
push
inc
lock
rcrb
cmpsl
sbb
xlat
and
jne
shrl
add
testl
out
rcll
ret
call
loope
sbb
aaa
clc
fiaddl
fldl
sbb
loopne
mov
xor
sub
pop
outsb
or
sub
nop
in
xchg
ret
sbb
ficoml
xchg
and
rolb
out
maxps
bound
repz
out
add
rolb
out
push
pop
adc
repnz
sub
adc
stc
out
push
mov
push
lods
pop
enter
xchg
mov
and
pop
loopne
test
or
adc
dec
jne
insb
aam
push
cmpsb
mov
push
ja
sbb
fwait
pop
nop
jge
js
or
pop
jle
push
popa
adc
ljmp
add
pop
loope
das
and
mov
pop
push
mov
xor
push
xor
loop
lcall
pop
jne
bound
int3
mov
in
loopne
dec
and
mov
arpl
dec
lahf
mov
mov
cmp
insl
cmp
jae
xchg
xchg
sub
fsubs
fistpll
pop
mov
arpl
fwait
stos
pop
je
push
daa
inc
mov
aam
es
mov
mov
cmp
adc
or
dec
lods
in
fptan
test
sub
push
scas
sub
in
divl
movsl
scas
mov
das
fs
stos
arpl
jp
mov
mov
clc
mov
jg
xchg
loopne
aaa
mov
clc
ja
pop
mov
mov
movsb
sub
das
lcall
mov
xchg
and
in
gs
out
mov
outsl
jmp
sub
andl
add
outsb
out
xchg
pop
imul
push
pop
sbb
test
mov
loopne
jmp
lret
rcl
jecxz
inc
rcrb
add
fidivl
mov
fdivrp
cltd
pop
xor
add
adc
das
pop
fcmovbe
mov
out
test
int3
scas
jecxz
push
insl
push
push
or
lds
dec
adc
adc
sbb
outsl
push
xchg
dec
jns
dec
in
popf
and
mov
test
dec
mov
fdivrs
or
jmp
add
into
jae
push
mov
inc
stos
mov
cmp
push
push
pop
sbb
push
push
jle
add
push
dec
in
adc
testb
and
fs
push
xor
icebp
or
dec
jbe
fimull
xor
scas
sbb
jo
stos
adc
lods
mov
dec
pusha
pop
adc
xchg
addb
test
xor
andl
sub
cmpsl
fld
sub
dec
movsl
mov
aas
cli
scas
mov
cltd
add
xlat
inc
loopne
sbb
repz
ja
jae
inc
inc
insb
hlt
cmp
aam
test
out
dec
ficoml
in
xchg
subl
aam
pop
mov
ror
lcall
sahf
pop
and
mov
xchg
bnd
fnstsw
dec
dec
imul
icebp
ret
pusha
sub
push
mov
test
xlat
loope
fistps
sbb
neg
fdivl
leave
lahf
int
xchg
lods
pop
push
inc
mov
enter
xchg
or
mov
sub
push
sub
push
sahf
shrl
xlat
imul
dec
fstp
or
mov
dec
add
mov
or
or
ja
cmp
sbb
cmpsl
mov
fdivs
xchg
out
out
mov
stos
or
xorl
add
pop
scas
clc
or
sbb
pop
add
xor
fcoms
in
in
imul
out
cmp
fistpl
cs
je
xor
jnp
jns
cmp
cltd
rorl
loopne
jo
daa
aaa
mov
push
aaa
mov
nop
js
add
inc
add
ds
das
rclb
inc
sub
mov
pop
pop
sub
scas
mov
push
ds
xchg
lods
test
pusha
mov
push
cmp
adc
dec
shlb
shll
movsl
cmp
ret
jae
xor
rolb
ds
inc
loopne
pop
cltd
sub
scas
push
mov
pop
push
nop
jbe
out
cmp
std
cmp
or
add
jns
cs
test
inc
std
ud2
out
cmpsl
jnp
sbb
int
cmp
ja
dec
mov
loop
pushf
push
addb
jne
push
sub
jle
jns
cmc
inc
sbb
xor
jp
fstpl
bound
sbb
or
out
mov
or
ret
adc
mov
hlt
lods
fwait
sbb
pop
clc
jo
sti
inc
pop
loopne
in
push
push
adc
jne
xchg
xlat
push
cmpsb
ds
add
mov
in
es
jno
push
lods
xchg
and
mov
xor
dec
sbb
ljmp
sub
out
xchg
dec
cmp
dec
push
stos
test
xchg
int
adc
sbb
das
lods
mov
sahf
loop
ljmp
xor
sbbb
daa
cmpsb
inc
and
push
insb
add
mov
sub
xor
add
call
pop
mov
jne
ja
xchg
sarb
stos
icebp
outsb
fldl2e
dec
leave
sub
popa
push
xlat
mov
fmuls
test
sub
push
rolb
mov
imull
insl
push
addb
cmp
test
icebp
lret
jp
es
or
test
mov
jbe
cmp
sti
push
fsub
fnstenv
pop
insb
les
icebp
aas
push
aaa
jbe
pop
imul
pop
sti
movsl
xor
loope
and
push
loope
cmpsb
adc
fcmovb
add
jo
cld
ljmp
xchg
push
xchg
jnp
pop
lfs
stc
in
cmc
das
insl
jg
pop
aas
sbb
lahf
sub
dec
jno
mov
test
ret
cwtl
iret
loope
mov
pop
cmpsb
adcb
mov
repz
mov
dec
push
cmp
mov
cmp
xchg
aaa
in
adcl
inc
add
xlat
mov
lods
sub
test
or
xor
cli
leave
xor
mov
cs
mov
mov
cmc
data16
and
test
pop
pop
mov
imul
adc
hlt
dec
xchg
xlat
lret
jbe
cmpsl
add
lods
subl
cli
ror
outsl
popa
or
mov
addr16
push
fildll
and
sub
cmp
adc
push
lods
in
push
inc
pushf
xor
lahf
pop
in
insl
sbb
stos
pop
sbb
arpl
stos
mull
out
and
dec
or
jecxz
imul
or
cmp
xchg
orb
mov
mov
cmp
test
jo
inc
insl
negl
fnstsw
inc
int
sbb
inc
rol
ficompl
adcb
xor
rcll
jns
push
xchg
xor
movsl
out
and
pop
mov
fstl
lret
xlat
and
push
fidivrl
push
enter
jo
xor
sbb
shlb
mov
pop
sbb
jns
call
lcall
stc
pop
loope
pusha
mov
aad
cli
out
pop
or
mov
mov
nop
shll
cmp
sbb
add
nop
sbb
fstl
or
test
mov
cmp
cmp
ret
ret
cmp
add
bound
test
cli
sbb
cmc
js
pmaddwd
lods
out
cmp
sbb
ss
bound
int3
inc
jge
xor
inc
jno
adc
cmp
jp
lods
mov
inc
sbb
push
cmpsb
mov
outsl
and
xor
push
jo
jae
cwtl
jg
xor
sahf
lods
fiaddl
stc
jecxz
adc
enter
add
subl
xchg
pop
and
sbbb
xlat
add
pop
pop
repz
and
mov
xchg
lret
add
xlat
call
pop
sub
mov
dec
cmp
push
or
imul
aad
jae,pn
jmp
dec
jno
sub
dec
in
cld
imul
sub
dec
inc
cmp
sub
loop
in
mov
sbb
fnstsw
out
call
push
push
lret
pop
push
lcall
mov
jmp
cmp
mov
sub
fildll
sbb
aam
jle
or
negb
lret
sub
sarb
pop
or
dec
sub
mov
shrl
add
cmpsl
push
jne
pop
adc
psubd
pushf
dec
dec
push
popf
jmp
pop
mov
and
test
dec
pusha
cmc
mov
add
mov
and
stc
inc
int
stos
or
mov
nop
adc
xchg
push
inc
or
daa
stos
dec
bound
sbbb
jl
aaa
push
cmp
sbb
lret
add
mov
adc
test
data16
dec
xor
sahf
dec
cmp
xchg
jmp
cmpsl
lret
fcomip
call
test
shrl
ss
out
movsb
sub
dec
mov
and
xchg
sbb
jle
jge
test
adc
movsb
lock
sbb
adc
loopne
add
cmp
cmpsb
repnz
pop
mov
mov
inc
inc
les
sub
push
inc
dec
lea
das
out
jne
stos
jle
mov
push
fnstsw
pop
jmp
mov
jo
jmp
out
loopne
mov
adc
adc
in
jb
test
dec
add
cmp
outsb
and
adc
mov
jne
push
cmc
mov
or
mov
push
mov
mov
dec
stos
lret
mov
mov
jnp
lret
cmp
jmp
je
ret
mov
push
jne
mov
in
mov
enter
lahf
jecxz
ret
imul
mov
sbb
xchg
fs
inc
lea
sti
cwtl
push
nop
lods
adc
pop
cmpsl
fwait
add
call
stos
cmp
or
or
dec
sub
sub
sub
stos
or
bound
add
fnstsw
add
pop
cltd
inc
pop
cmp
sbbb
jge
test
pop
gs
aas
sub
cli
call
out
lea
push
lret
out
mov
xor
fnstsw
push
insl
cmc
loope
sbb
or
imul
pop
fildl
daa
hlt
pop
adc
xorb
and
xor
xchg
mov
push
test
les
icebp
cmpsb
push
ds
ljmp
push
imul
jg
sti
sub
insl
dec
xor
ret
cli
mov
lds
lahf
enter
in
rolb
jns
out
into
and
sub
ret
pop
xchg
cmp
cltd
and
mov
lret
adc
into
jge
lods
push
xchg
fsubl
sbb
jmp
mov
or
and
dec
insb
jg
aam
and
daa
in
mov
and
inc
mov
lret
adc
js
pop
movl
inc
out
xor
stos
pop
sarl
add
adc
dec
lret
clc
mul
vcvtsd2ss
adc
pop
cwtl
mov
mov
in
jle
jns
pop
dec
mov
push
out
or
lds
push
push
aam
movsb
jns
iret
jb
nop
mov
and
pop
and
mov
xor
sub
loope
shl
mov
scas
cwtl
ret
sbb
arpl
pop
jecxz,pn
push
ret
jbe
and
lds
push
mov
inc
pushl
testb
lahf
fdivrp
sar
fbld
or
insb
das
jae
push
adc
ret
xor
and
lret
xlat
dec
jecxz
addl
sub
sbb
scas
movsb
ljmp
jno
xchg
push
and
xchg
push
cmpsb
add
in
das
imul
push
inc
jb
test
xor
test
or
pop
mov
pop
int3
movaps
nop
call
adc
or
mov
jno
in
pop
jae
or
cltd
cmp
jae
xor
and
mov
movsl
sub
js
add
sbb
xor
jnp
push
add
cmp
icebp
decb
sub
punpckhdq
mov
and
js
push
fidivl
fsubrs
das
inc
fs
data16
add
pusha
push
lahf
mov
js
int
mull
push
jp
das
pmaddubsw
out
jmp
ds
jecxz
scas
fsts
sar
jecxz
mov
icebp
test
dec
push
das
in
and
adcb
mov
lea
test
insl
and
insl
sbb
jne
adc
sbb
sub
jl
or
fidivs
push
stos
or
ret
mov
pop
mov
aam
call
lods
cmp
sub
cmp
lret
mov
ja
int
stos
sbb
xchg
cmp
pop
and
ja
aas
lret
adc
dec
pop
repz
cli
and
ss
jl
out
jmp
xchg
mov
pop
outsl
pop
mov
dec
ss
in
mov
insb
mov
int3
idivb
ret
mov
outsb
lret
insb
mov
cltd
push
jg
daa
mov
dec
and
lcall
xchg
inc
cmp
sbb
cs
push
movsb
sbb
pop
repnz
movsb
fcmovu
ja
push
mov
fiaddl
inc
out
mov
push
inc
inc
xor
adc
in
jne
out
pop
cli
insl
add
rclb
adc
mov
insb
insb
or
in
adc
out
pusha
mov
out
xor
mov
mov
add
xor
cmp
sbb
enter
repz
dec
addl
out
xchg
and
movb
jmp
addr16
lea
lods
pop
jmp
adc
imul
ficoml
push
adc
push
jmp
repnz
mov
dec
jb
and
push
push
das
adc
xor
out
loope
mov
push
sbb
pop
rorl
out
pop
cmp
fldpi
or
or
imul
xor
mov
scas
dec
pop
dec
testl
pop
cld
dec
and
outsb
or
mov
sub
xchg
or
dec
xor
xchg
push
mov
stos
jo
sub
std
push
fdivrs
adc
adc
mov
call
push
fst
fsubrl
popa
xchg
out
shlb
ret
sbb
lock
aas
and
ljmp
mov
dec
hlt
or
sub
jecxz
rorb
jle
lods
ffreep
add
dec
inc
xchg
xor
xor
sbb
mov
xchg
sub
pop
inc
stos
mov
xor
mov
and
and
jbe
add
pop
or
push
dec
dec
xlat
cld
lret
lods
fdivrl
lcall
cmp
shrb
mov
rcrb
in
dec
adc
repnz
test
fdivrl
in
repnz
test
std
pop
cmpsb
inc
push
daa
cmp
aaa
lock
jns
push
adc
sbb
ja
jb
pushf
add
sahf
mov
mov
xchg
dec
jge
sahf
or
repz
nop
lds
popa
sbb
pop
test
inc
ds
or
mov
inc
mov
lds
lock
pop
int3
out
fucomip
xchg
popf
xchg
push
jne
mov
loopne
cmp
int
stc
cmpsb
jmp
int
fcoml
sub
sub
pusha
rcrb
add
push
sub
jecxz
shr
pop
ja
jecxz
push
stos
add
jl
leave
dec
idivb
fildll
out
mov
es
push
xchg
sub
pop
mov
cmp
in
xchg
cmp
ds
jns
add
xor
pop
test
lods
mov
add
push
ja
in
icebp
pop
inc
pop
pop
ret
dec
nop
pusha
xchg
sbb
adc
xor
mov
addr16
and
adc
pushf
xchg
dec
sub
push
adc
mov
sbb
cli
cwtl
push
cmpb
mov
xchg
test
fidivs
into
xchg
mov
jp
mov
sub
xchg
mov
call
cmp
push
mov
xchg
or
add
inc
xor
mov
xchg
mov
xchg
jl
jge
pop
mov
in
ds
shr
jl
xor
in
xchg
rcrb
xchg
mov
or
imul
fdivrp
xchg
frstor
jecxz
dec
add
mov
lret
add
in
out
scas
sahf
imul
test
push
adc
imul
aam
ljmp
lods
push
pop
dec
shrb
adc
mov
jno
jmp
dec
scas
shl
arpl
sub
fs
mov
jae
lcall
outsb
mov
xchg
push
pop
cmp
in
adcb
mov
add
jmp
fisttpll
aad
movb
cltd
push
mov
aam
cmpl
and
adc
hlt
mov
aaa
leave
fistpll
push
cmpl
cmp
mov
push
mov
jns
bound
or
movsl
pop
inc
stos
adc
stos
jge
inc
cmp
mov
jge
loopne
sub
dec
xor
test
push
and
aam
daa
stos
jmp
push
or
arpl
xor
pcmpgtb
push
aam
dec
add
mov
push
fdivrl
aaa
push
and
jnp
stos
mov
mov
mov
pushf
mov
addb
sub
inc
mov
sbb
lods
loopne
inc
add
lret
imul
mov
es
aam
cmpsl
cmp
add
mov
adc
mov
xchg
inc
xchg
push
jae
enter
sub
popa
and
out
in
or
call
adc
stos
adc
adc
cmp
xchg
repz
xchg
cmc
lahf
sti
inc
xchg
cmp
dec
outsb
xor
adc
clc
jb
mov
cld
xchg
std
xchg
fs
hlt
jmpw
andl
inc
pop
xchg
push
je
out
and
jl
jle
cwtl
outsl
xchg
stos
sub
sub
stc
scas
dec
lds
scas
inc
cmp
test
adc
cmp
xchg
mov
cltd
aad
mov
lds
jo
jae
lods
clc
mov
jno
andnps
sub
push
xchg
enter
gs
fwait
lret
pop
cmc
jb
mov
or
xchg
rclb
cmp
inc
pop
adc
addr16
jbe
mov
lods
dec
in
add
aas
pushf
imul
sbb
xor
push
xor
adc
jnp
shrb
or
xor
jg
ret
sbb
jne
int
lret
popf
push
loopne
xchg
mov
mov
inc
aas
ret
mov
jmp
hlt
loop
dec
pop
call
data16
cld
data16
ja
jb
sbbl
mov
push
inc
popa
adc
jecxz
or
dec
fs
pop
mov
jbe
jge
in
leave
cld
pop
fdivrl
xor
mov
xor
ja
mov
mov
mov
daa
out
enter
push
inc
pop
addb
sbb
fiadds
ret
cli
loopne
fsubl
adc
xchg
movsl
imul
pop
mov
push
dec
insb
jecxz
outsb
mov
push
ds
jg
sbb
popa
sub
pop
insb
leave
ds
mov
xchg
jp
sub
xor
dec
arpl
sti
pushf
dec
xchg
mov
stc
stos
nop
stc
push
adc
pushf
js
icebp
inc
fiadds
xor
mov
dec
mov
popa
or
xor
cltd
loopne
cmpb
adc
dec
pop
aaa
icebp
repz
mov
and
sub
jbe
xchg
cmp
sbb
and
pop
shrl
xchg
sbb
sbb
jno
adc
aas
jg,pn
jns
pop
pusha
mov
mov
xchg
mov
pop
divb
movsl
aam
jnp
out
call
shrb
pop
push
jg
mov
or
mov
lcall
sarl
outsb
inc
push
jae
aad
cld
mov
shrl
inc
scas
sbb
jae
mov
pop
dec
pop
iret
mulb
pop
lods
ljmp
push
jno
shll
mov
cmp
fmul
push
add
stc
arpl
mov
pop
mov
sbb
inc
and
xor
cmc
or
lods
ss
jp
mov
or
outsl
leave
std
xchg
xor
add
adcb
sub
lods
movsl
inc
ja
movsb
jae
sarl
push
daa
push
push
mov
mov
push
sub
cltd
inc
call
imul
iret
jp
xor
or
imul
loope
fs
or
mov
mov
es
add
dec
or
imul
and
lret
mov
jge
mov
sub
aad
loopne
push
loopne
jb
inc
xchg
gs
icebp
fcomps
addb
mov
and
push
add
cld
popa
test
inc
cmp
in
cwtl
jmp
in
rorb
mov
xchg
aad
mov
cmp
jp
cli
stos
xor
add
adc
rol
add
js
sarl
cmc
je
xchg
mov
inc
xor
jecxz
cmp
mov
mov
or
into
sub
xchg
fimuls
pop
pop
jno
iret
mov
add
daa
pop
add
je
fsubs
nop
fisubl
xor
daa
bound
dec
stc
mov
inc
fisttps
mov
inc
mov
adc
or
negb
dec
out
inc
in
push
stos
es
shrb
mov
cs
xchg
push
sbb
fildll
cld
repz
sarb
sub
not
incl
leave
lods
pop
popf
jl
cmp
frstor
add
xchg
out
xchg
insb
jp
xchg
inc
test
jb
enter
out
lock
cwtl
sub
cs
inc
jne
inc
sub
fnsave
sub
mov
int
sub
mov
mov
mov
pop
cld
in
clc
insb
fs
xor
icebp
sub
xchg
dec
cmp
cld
add
sbb
mov
push
cwtl
pop
aaa
push
aas
lahf
jge
xlat
cmp
popa
push
xchg
aas
cwtl
xor
call
cli
mov
adc
stc
or
adc
jo
lods
push
xchg
or
jo
gs
orl
mov
or
dec
pop
add
mov
call
jge
push
mov
movsl
adc
pushf
xchg
push
sbb
lret
enter
pop
dec
push
cli
shl
sub
dec
cmpsb
je
jae
scas
std
pop
in
mov
sbb
hlt
mov
out
mov
or
mov
or
rclb
or
mov
fisubs
push
ret
ss
roll
cmp
js
ja
pushf
repnz
push
dec
notl
pop
sub
hlt
inc
lods
fdiv
imul
out
pop
outsb
push
sarl
es
test
jb
cld
or
jbe
stos
adc
pop
xorl
je,pt
sbb
or
movsb
mov
jno
pushl
in
ljmp
xchg
andps
je
pop
data16
or
inc
loopne
sahf
movsl
push
or
andb
pop
nop
out
mov
inc
jno
add
cld
cmp
rcrb
rcrw
rcrb
mov
mov
lcall
fs
or
xor
xor
mov
in
es
jmp
xchg
icebp
add
xor
mov
xor
ss
inc
pushf
push
subl
jnp
cmp
iret
adcl
in
mov
jg
mov
test
cmp
jmp
rclb
cmpsb
xor
xchg
sub
fmull
shrb
xchg
fwait
or
inc
cmp
sub
fldcw
xchg
loope
or
sti
mov
dec
adc
inc
jp
xchg
fistpll
push
mov
sub
leave
into
sbb
outsb
ret
inc
popf
and
sar
int
dec
test
dec
mov
jbe
cli
pop
stos
jns
jne
lea
in
inc
dec
mov
lcall
scas
pop
jne
enter
mov
bound
xor
into
ret
mov
mov
or
lcall
cwtl
adc
dec
test
mov
add
inc
cmp
cld
add
stc
addr16
push
sbb
cmc
xlat
sahf
dec
inc
inc
add
stos
lret
sbb
mov
popf
and
adc
bound
ds
cmp
mov
ja
in
xor
jne
jno
push
xor
mov
push
mov
dec
push
aad
call
pop
lea
inc
dec
gs
aad
xor
pop
add
lahf
xor
pop
sub
loope
mov
lods
test
pop
sbb
sti
pop
and
push
jnp
insl
xchg
mov
sbb
mov
stos
sub
fwait
ja
dec
in
lock
ja
clc
pop
cmpsb
xchg
stos
rorl
xor
iret
ja
loope
dec
xchg
xor
in
jo
insl
mov
mov
sahf
gs
mov
fucomp
ror
mov
lret
dec
add
jl
sub
cmpsb
mov
inc
fbstp
cltd
adc
mov
add
xchg
lret
out
negl
fdivl
jmp
xchg
pop
bound
repz
jbe
lret
stos
add
ret
lds
cwtl
sahf
js
jmp
je
xchg
call
cmc
popf
stos
inc
idivb
inc
jnp
mov
dec
or
mov
sub
div
xor
outsl
xchg
mov
mov
xor
lea
sbbl
mov
insl
sbb
ja
cltd
add
xchg
jb
jo
pop
cli
imul
xchg
push
cmp
jae
lcall
test
push
dec
cmp
mov
adc
xlat
shlb
jecxz
jp
stc
jb
adc
mov
in
shlb
fwait
xlat
ljmp
jg
cltd
fnstenv
std
cs
sbb
mov
stos
mov
negl
sbb
lret
clc
mov
arpl
xor
cli
cmp
leave
push
inc
and
add
jle
nop
in
and
iret
hlt
cmc
out
aam
aas
mov
adc
cli
xor
dec
divb
mov
neg
imul
or
loope
or
scas
into
sub
in
into
or
fs
inc
jle
pop
cmp
fwait
inc
dec
roll
push
push
iret
int
fcmovnbe
pop
push
mov
adc
shrb
aaa
ficompl
insb
jecxz
mov
jp
pop
jbe
lods
pushf
stos
push
stos
mov
subl
or
pop
sub
and
add
xlat
jnp
arpl
cmp
push
sbb
sbb
adc
dec
loope
or
pop
cltd
and
push
neg
pop
push
fcmovne
fs
into
or
in
xchg
sub
ljmp
cwtl
cwtl
lds
lock
adc
cmp
scas
add
popf
xchg
cmp
sarl
mov
pop
push
in
test
pop
jo
mov
xor
jns
shlb
sbb
inc
out
jl
lds
push
xor
cmp
cmp
ret
mov
rorb
out
mov
cs
hlt
hlt
cmp
lods
and
dec
movsb
xor
stos
cmp
jecxz
mov
lods
shll
mov
loopne
xor
mov
frstpm(287
call
mov
mov
ds
mov
and
mov
out
je
or
loopne
int
inc
mov
mov
pop
jmp
inc
les
adc
xor
pop
and
test
bound
cmp
mov
aad
lret
sbb
mov
scas
jo
es
stc
outsb
mov
movsl
test
aad
jp
inc
mov
inc
mov
lret
ja
push
push
cmp
jl
or
or
xchg
mov
mov
std
inc
mov
dec
sar
loope
cmpsl
fwait
mov
mov
cltd
dec
cwtl
jne
or
add
jbe
sbb
pop
test
cmp
jb
pop
add
mov
addl
sub
out
rcrl
dec
push
and
addr16
outsl
je
loope
mov
faddl
adc
clc
xchg
or
rclb
and
or
jne
xchg
rolb
cmp
mov
cmpsl
fs
js
cmp
mov
imul
or
sub
pop
xchg
and
push
mov
add
mov
stc
scas
adc
loope,pn
pop
or
xchg
stos
push
xchg
sbb
rclb
rcr
outsl
ljmp
mov
mov
cli
das
insl
leave
dec
jno
add
or
mov
in
outsl
adc
sub
js
sbb
mov
mov
mov
fbstp
sbb
cmpsl
outsl
jg
loope
inc
jns
push
cmpsl
mov
xor
repnz
or
pop
psraw
dec
cwtl
in
jl
sbb
mov
jl
push
lods
outsb
js
ss
mov
inc
pop
in
jbe
cli
pop
rolb
cmp
insl
outsl
mov
push
jb
xchg
add
pushf
xchg
sbb
or
push
out
sub
mov
scas
push
psraw
pop
xchg
xlat
lods
push
push
jne
dec
imul
addr16
shlb
out
sarw
mov
out
adc
imul
dec
in
mov
push
xor
das
test
push
xor
jmp
xor
decb
iret
ret
fstl
jbe
fmull
adc
inc
stos
pop
add
int3
leave
xor
insl
data16
pusha
push
mov
int3
stos
or
dec
dec
push
push
mov
sub
out
xlat
out
inc
dec
sub
ficomps
in
fildll
pop
xor
mov
inc
ficoml
inc
xchg
and
loop
loop
mov
orl
in
sahf
sti
outsb
cwtl
stos
mov
push
add
pop
fiadds
movsb
inc
test
or
insb
call
fwait
cmc
dec
test
lods
icebp
or
xlat
xlat
mov
xlat
push
lods
mov
sub
add
mulb
rcll
fwait
fwait
lock
sbb
dec
mov
incb
lock
inc
dec
sti
movsb
test
pop
nop
pusha
mov
push
sub
and
mov
xchg
icebp
enter
rcrl
idivb
lea
push
inc
mov
mov
icebp
je
mov
lods
pop
adcl
out
and
stc
repnz
dec
out
in
inc
gs
jo
mov
adc
xchg
mov
test
sub
pop
or
add
mov
test
stos
mov
sub
in
cmp
in
jbe
adc
call
xchg
cmp
adc
add
subb
pushf
shlb
repz
jle
mov
mov
add
cwtl
push
mov
into
cmpsb
loop
outsb
xchg
xor
fstps
jecxz
xchg
sbb
push
mov
mov
outsl
inc
mov
mov
loope
outsb
cmp
inc
dec
add
push
fcomps
mov
xchg
inc
mov
dec
inc
lock
sti
mov
dec
sub
push
dec
lahf
mov
leave
popa
mov
aad
filds
fdivs
mov
rcr
push
cmp
dec
xchg
enter
xor
xor
pop
in
divl
lods
dec
int
mov
hlt
imul
movsl
push
add
stos
mov
fcoml
mov
mov
pop
icebp
jle
dec
cltd
xor
dec
pop
push
cmpb
xor
call
cs
mov
rcll
mov
cli
jbe
dec
sbb
lret
jle
out
in
mov
pop
cmpsb
test
inc
push
and
daa
jo
lahf
jg
fs
shl
ljmp
cs
jb
int3
dec
pop
inc
mov
call
das
sbb
fistps
cmpsb
fchs
xor
cmc
movl
pushf
rcll
cmp
iret
scas
aad
test
xchg
in
sub
or
fmull
xor
out
inc
jmp
mov
xlat
ds
mov
mov
imul
adc
aad
xchg
adc
dec
mov
inc
jne
test
jo
pop
mov
cmp
adc
xor
ljmp
repnz
mov
test
lea
jns
jbe
loopne
pop
jge
cmp
loope
pushf
mov
or
xor
mov
jmp
pop
stos
jmp
lods
sbb
mov
or
jecxz
mov
scas
lret
cmp
xchg
adc
imul
cmp
dec
push
xlat
lahf
jno
lret
mov
push
push
mov
or
cmp
fcompl
inc
fistl
inc
shr
stc
inc
test
cmp
arpl
and
inc
pop
dec
stos
inc
or
sub
jge
xchg
dec
pop
jno
push
aad
js
stos
push
pop
dec
sub
xor
push
adc
cli
test
mov
ljmp
cmc
dec
into
sub
ret
movsb
sub
test
cmpsb
aad
adc
les
std
test
popf
jg
jmp
out
scas
xor
pop
lods
pop
cmp
nop
movsb
xchg
push
pop
shll
test
leave
cmp
pop
int3
mov
sahf
mov
mov
aaa
pop
or
push
or
sub
int
or
mov
inc
xlat
imul
aaa
inc
sbb
flds
loope
adc
out
mov
andl
les
xchg
xor
or
mov
aas
mulps
pop
or
pop
mov
xor
lods
ret
inc
lahf
mov
fwait
pop
fdiv
aaa
push
ljmp
notl
push
jle
pushf
mov
xor
fwait
scas
mov
cwtl
nop
inc
xor
or
test
cwtl
stos
push
and
pop
je
or
fldl
clc
push
pop
jae
ljmp
or
xchg
scas
or
push
outsb
cltd
dec
bound
dec
cmp
dec
sbb
and
shrl
arpl
cld
mov
push
sub
pop
cli
mov
xchg
jb
push
add
jge
aas
jnp
jae
mov
decl
jae
pop
mov
xlat
cld
lahf
mov
inc
xor
lcall
outsl
xchg
jae
lret
cmpsl
jno
mov
add
das
subl
push
pop
xchg
movsl
jecxz
leave
ss
push
imul
sbb
cmpb
int
xchg
icebp
jb
ret
dec
mov
or
lret
push
bnd
aam
cmp
insl
pop
adc
mov
mov
imul
iret
or
adc
dec
cmpsw
sub
mov
loop
dec
or
les
cmp
adc
ss
xchg
jle
in
out
mov
sbb
outsb
movsl
adc
lret
scas
les
inc
dec
aad
mov
cmpb
inc
add
jnp
sbb
sahf
or
orb
nop
pushf
sti
das
adc
mov
push
insl
inc
sbb
pop
or
out
cmc
insb
cwtl
inc
mov
xlat
xchg
out
add
mov
arpl
fwait
dec
push
dec
test
addr16
testb
pop
sahf
stos
leave
mov
int
ret
dec
and
add
mov
pop
xchg
push
pop
jb
lahf
xchg
fisubl
ret
aaa
or
and
inc
cmp
out
push
icebp
aaa
jns
push
bound
dec
mov
push
scas
adc
daa
test
in
in
std
lret
cmp
insl
lods
lret
cld
call
lea
cltd
lds
stos
mov
adc
divl
cmp
mov
dec
sbb
push
addr16
int
mov
call
ljmp
add
or
pushf
in
mov
imul
cmp
or
mov
imull
pop
sub
xrelease
xor
mov
in
ret
out
scas
shlb
lods
pushf
mov
hlt
mov
lods
dec
sbb
inc
imul
and
loopne
or
fwait
xchg
xor
add
frstor
rolb
cmpsl
hlt
add
inc
mov
ret
out
mov
sub
iret
aad
jb
xor
inc
mov
mov
scas
fsubl
mov
xchg
in
pop
xchg
orb
das
jno
pushl
imul
and
jl
sbb
cld
jae
notl
cmc
xchg
out
sub
mov
hlt
adc
mov
mov
lret
mov
pop
cwtl
fcompl
jp
sub
pop
push
push
mov
out
pop
cltd
decb
push
push
notl
loop
mov
mov
pop
aaa
or
enter
mov
call
lret
imul
adc
push
push
sub
add
ret
push
jge
push
ljmp
test
in
jl
mov
js
int
push
andl
popaw
jae
jo
and
popa
mov
imul
pop
xor
xchg
xchg
cmpsl
sti
daa
sbb
push
cmp
jae
xchg
sub
jl
mov
popa
fstps
test
push
mov
out
in
push
add
cwtl
push
aam
mov
pusha
addr16
in
sub
inc
xor
aam
inc
pop
mov
adc
jmp
xor
pop
addb
jmp
scas
mov
pop
aaa
mov
arpl
mov
loope
roll
add
in
out
ljmp
int3
clc
cmpsl
fxch
jns
test
mov
mov
imul
iret
mov
sub
add
push
mov
fnsave
add
lea
movsl
lcall
sub
jmp
cmc
test
aaa
and
dec
pop
jae
inc
adc
mov
insb
into
sbb
push
in
and
adc
test
xchg
dec
pop
push
cmpsl
negb
icebp
insb
mov
xchg
cmp
xor
xor
dec
pop
mov
inc
repz
sub
sbb
cltd
lret
pop
inc
and
mov
in
dec
push
mov
mov
jp
testl
jb
dec
xchg
inc
inc
pop
imul
push
xchg
mov
add
ljmp
cmc
jae
out
or
adc
lcall
jmp
stos
ret
mov
shlb
aam
cmp
fnstcw
mov
andb
push
aad
push
ja
hlt
int
mov
lods
mov
dec
jns
daa
je
sbb
or
xorl
push
fistpl
cmp
cmp
das
repnz
push
and
inc
jle
fcomps
sbb
into
xor
bound
mov
out
jae
fbstp
sbb
xchg
xorl
sbb
shrl
pop
push
test
jne
notb
push
and
mov
xchg
enter
cmp
fdivs
gs
mov
movsl
ss
xchg
sbb
orl
cmp
fnstenv
imul
jl
jo
shl
and
iret
cld
xor
scas
test
jp
lea
pop
push
icebp
mov
inc
icebp
mov
movsl
push
add
shrl
and
subl
out
add
inc
and
add
jecxz
or
rcll
outsb
add
xchg
or
lods
pop
lret
mov
adc
stc
sub
or
loope
push
orl
adc
cmp
sbb
pop
jns
test
jmp
jb
xchg
jp
xor
cmp
dec
inc
jne
or
and
xchg
xchg
das
adc
mov
jne
lods
lcall
jle
std
leave
insl
xchg
mov
mov
push
ds
lods
add
insl
xchg
adc
inc
cmp
adc
push
sub
aad
push
mov
les
sbb
stos
xor
mov
adc
dec
mov
mov
sarl
lahf
lock
jne
add
mov
cmp
push
shr
fs
inc
cmp
and
sbb
push
pop
and
shl
cltd
lds
jl
inc
add
dec
push
pop
add
shlb
dec
out
std
adcl
lret
xchg
add
add
mov
out
mov
jae
daa
pop
in
mov
call
jb
sahf
inc
xchg
sbb
xchg
sbb
movsl
pop
cmpsl
jnp
sub
mov
xor
leave
addr16
repnz
fisubrl
sbb
xchg
enter
in
or
push
pop
push
or
pop
popa
add
sbb
dec
arpl
mov
rcrl
test
mov
lcall
add
cmp
push
addl
into
mov
or
jo
and
or
and
popa
test
not
pop
out
add
add
popa
das
dec
add
outsl
mov
xchg
rcl
push
aad
push
insb
and
mov
xchg
pop
add
sub
sub
jno
mov
add
in
push
data16
das
pop
push
push
stos
fwait
loope
adcl
dec
shlb
pop
push
flds
sti
into
scas
ficoml
cmp
pop
movsl
popf
dec
loopne
xor
fisttpll
xchg
fmull
adc
xchg
adc
frstor
imull
inc
inc
movsl
jno
xchg
lods
and
push
imul
push
cmp
es
inc
dec
mov
icebp
bound
inc
das
in
inc
and
cld
mov
aas
stos
lahf
dec
add
cmp
int3
ja
mov
cmp
sub
scas
scas
pop
fwait
mov
push
xor
sub
dec
ljmp
lds
fstps
xor
or
aam
xor
les
xor
stc
fsts
inc
sbb
push
jne
addr16
cltd
into
rorl
cmp
mov
xchg
das
popa
out
call
mov
in
inc
xor
sub
test
insl
jns
sbb
push
mov
mov
xorl
pushf
gs
mov
aas
or
push
mov
jp
lcall
push
fldcw
and
or
push
arpl
lds
gs
sbb
and
pushl
popf
xchg
addb
test
sub
test
jae
pop
pop
jns
sbb
mov
adc
push
popa
out
fists
and
xor
add
movsl
fadd
xchg
and
stc
repnz
adc
mov
rorl
mov
insb
xchg
mov
dec
ret
in
es
and
or
fnsave
scas
mov
cmp
rclb
popl
imul
into
ret
pop
push
mov
or
cmpsb
lret
or
mov
je
push
stos
cwtl
test
xlat
out
pushf
and
lods
push
push
xchg
imul
and
cwtl
mov
in
lods
orl
cmp
fldcw
push
push
pop
and
in
popa
mov
mov
mov
jp
lock
ds
lcall
xor
adc
cli
sbb
pop
out
test
ljmp
sbb
jg
mov
fwait
aaa
fcom
pop
cmpsb
jb
inc
popa
movsl
mov
lock
jp
cmp
fs
js
clc
xchg
pop
addr16
or
in
mov
fcompl
nop
or
mov
xchg
scas
iret
mov
mov
hlt
xchg
push
adc
push
cmpsb
pop
in
outsl
mov
xor
add
xchg
ljmp
mov
xor
and
rolb
cmpb
jae
das
adc
adc
pusha
sub
xchg
iret
jo
in
js
cmp
cmp
sbb
shrl
jge
xor
shlb
pop
mov
outsl
mov
xchg
lods
shl
mov
mov
stos
or
dec
and
insb
and
xlat
mov
jne
jmp
sahf
scas
xchg
out
aad
out
sub
jnp
lock
movsb
shlb
scas
es
out
imulb
or
pop
mov
jge
lcall
ljmp
fists
or
pop
mov
je
cmp
pop
dec
out
ds
xchg
shlb
es
sbb
xor
das
dec
inc
xchg
in
addr16
sub
fdivrl
mov
mov
sti
out
pop
ss
mov
xchg
push
add
jbe
js
adc
jb
inc
imul
or
mov
cs
inc
mov
jl
push
stos
imul
imul
lds
xor
mov
mov
push
cmp
leave
inc
subb
push
inc
nop
push
cmpb
fbld
jno
fcoml
mull
pop
ret
ja
lcall
insb
ljmp
in
ljmp
add
lods
stc
fidivrs
mov
dec
test
gs
iret
push
test
inc
xchg
enter
aaa
notl
dec
call
dec
xchg
mov
lea
ljmp
jns
lds
pop
jno
in
push
pusha
push
test
sti
dec
and
inc
add
or
les
ds
sahf
outsl
xchg
roll
push
or
sub
ror
cli
adc
dec
dec
push
jle
shlb
lret
sub
or
loop
cmpsl
outsl
push
lea
pop
or
inc
push
or
sub
xlat
push
lret
dec
loop
jb
cmc
xor
cld
sbb
mov
dec
out
fnsave
sbb
clc
int3
inc
andl
cmc
lahf
cmp
mov
das
push
add
cld
dec
adcl
add
shl
iret
xchg
mov
fs
cs
cwtl
and
out
in
sbb
or
adcl
shll
xor
xchg
jle
repz
lret
mov
repz
sbb
dec
clc
pop
pop
sbb
mov
mov
adc
mov
jb
sbb
cltd
sarb
push
add
sar
sbb
pop
sbb
test
fs
mov
imul
or
test
jecxz
mov
imul
cs
sbb
pop
xchg
movsl
mul
jmp
jne
push
sub
cmpsl
inc
jnp
gs
xor
stc
cmpsl
fcmovnu
les
and
mov
mov
sbb
and
imul
lret
fiadds
std
mov
movsb
or
hlt
ja
cli
dec
fmul
jle
add
cmc
push
adc
or
add
cmp
test
test
pop
dec
fisubrs
enter
clc
stos
lea
mov
or
testl
and
icebp
mov
xor
das
inc
clc
js
sbbb
rorb
test
dec
std
stos
or
loop
mov
jg
mov
mov
popf
fstl
call
ds
arpl
or
cltd
fbstp
sbb
arpl
xchg
aad
push
mov
mov
bound
sbb
push
popf
lahf
mov
pop
dec
dec
test
inc
gs
lods
add
mov
jbe
cmpsl
jno
or
movsl
stos
xchg
int3
imul
push
imul
add
sbb
fisubrs
fisubrl
lret
out
mov
or
sub
push
rclb
lret
out
movsl
out
jnp
jecxz
sub
loope
or
ror
inc
push
push
xchg
cmp
cld
cmp
mov
push
repnz
and
data16
dec
push
or
fnstcw
je
and
mov
repnz
sbb
gs
mov
jge
popf
jae
sbb
push
mov
lock
mov
mov
push
ds
insl
mov
inc
mov
cld
or
lods
add
mov
test
xchg
add
cld
xchg
mov
xchg
and
and
ljmp
fildll
dec
push
mov
gs
pop
xor
shl
cmp
lea
arpl
inc
mov
xor
scas
jecxz
out
outsb
sbb
cmp
sub
or
cmpsl
jecxz
inc
push
lods
inc
inc
add
xor
fsubr
sbb
out
arpl
adc
aam
rcrl
shl
repz
adc
jo
and
data16
mov
sub
in
pop
mov
jmp
inc
movsb
or
mov
outsl
jne
jns
lea
pop
loope
rcrl
mov
cli
and
pop
sub
adc
out
lock
sub
inc
mov
push
sbb
push
inc
fists
and
sbb
movl
idivl
mov
adc
nop
sbb
aad
dec
mov
sub
xor
rorb
mov
repnz
sbb
ficomps
repz
aas
mov
popf
ds
add
mov
or
jmp
iret
mov
es
insb
dec
push
fldenv
in
pusha
add
cmpl
xchg
inc
idivl
cmpsb
jl
popf
mov
inc
add
jo,pt
sbb
aad
js
mov
and
lods
ret
stos
push
mov
mov
pop
xchg
repz
push
xor
aad
mov
push
mov
jle
push
ja
push
lods
shl
loope
dec
les
jmp
imul
movsb
aad
jecxz
sub
rorb
ss
jle
adc
jo
sarb
jb
inc
pop
or
insb
xchg
mov
les
xchg
pop
mov
jl
out
xchg
inc
cmp
leave
dec
leave
aad
mov
mov
adcb
sbb
cld
sbb
nop
out
sahf
pushaw
adc
int3
sub
xor
mov
xor
push
inc
mov
pop
icebp
cs
in
cmp
inc
in
inc
scas
jno
stc
xchg
xchg
ss
mov
ss
loopne
rcll
inc
out
mov
aas
lret
es
inc
test
and
mov
in
sub
repnz
xlat
pop
push
pop
inc
fs
jnp
inc
jb
cmp
xorl
and
lahf
xchg
insl
push
mov
push
scas
adc
stos
out
adc
push
pop
adc
sbb
xchg
or
ja
popa
adc
shrb
stos
jg
test
jae
push
arpl
pop
std
xchg
lret
inc
out
push
das
jae
mov
in
xchg
sbbl
pop
cmpsl
xchg
outsb
push
js
add
cmpsl
mov
mov
outsl
fs
rcl
jne
shll
in
xchg
enter
mov
stos
neg
mov
imul
out
sbb
fucom
mov
repnz
fadd
xchg
shrl
cltd
push
pop
mov
stos
lock
xor
iret
out
clc
mov
roll
push
sbb
das
dec
dec
and
cmp
in
dec
jecxz
cld
mov
and
xor
rcrb
std
add
pop
xor
stos
or
js
xchg
ret
inc
xchg
pop
and
push
xor
stos
xchg
sti
add
aas
push
jg
movntq
mul
pop
pop
jge
iret
mov
sti
and
mov
insb
popf
push
push
mov
popf
pop
out
subb
das
shlb
cwtl
cmp
sbb
pusha
loope
pop
jae
loope
push
leave
cmc
adc
shlb
into
pop
sahf
rolb
popa
jnp
mov
inc
or
sub
rcrb
mov
int3
mov
xchg
ret
sbb
cmc
lret
lahf
jmp
jns
xchg
push
pop
ja
mov
cmc
jge
out
xor
jmp
mov
jnp
loop
sbb
xchg
mov
pop
jge
testb
lods
shlb
mov
stc
ljmp
sbb
std
ljmp
mov
pop
cs
jne
loope
loopne
fsubl
popl
enter
push
pop
rcr
dec
stos
out
loopne
add
lods
call
mov
cli
addr16
xor
pop
adc
xor
fstps
and
sahf
xor
idivb
out
bound
mov
and
shll
mov
xor
mov
add
add
clc
stos
inc
cmpsb
push
andb
dec
dec
mov
pushf
loopne
jne
das
ret
out
pop
je
xchg
mov
jbe
cmp
leave
lea
je
add
pop
sub
imul
roll
push
lods
jbe
sub
pushf
or
aas
stc
fdivl
or
push
inc
loop
je
or
inc
sbb
mov
nop
push
outsb
xor
scas
sbb
sub
sub
das
jp
mov
add
xchg
adc
out
mov
jns
pop
dec
popa
mov
or
lea
fldenv
dec
jmp
mov
sub
mov
iret
sub
mov
cmp
outsb
inc
addl
xchg
shll
jmp
fsubl
pop
ret
shlb
test
jge
jno
std
push
sti
mov
push
lock
stos
loopne
mov
popf
pop
sti
cmp
jg
popa
pop
dec
decl
cmp
fucomi
lea
pop
or
popf
mov
je
or
mov
in
addb
mov
jecxz
cmp
jmp
pop
icebp
mov
repz
push
push
xor
lcall
dec
jae
das
sub
jg
dec
in
out
pop
and
jbe
mov
ljmp
stos
mov
mov
xor
aaa
xor
sub
mov
test
aad
adcb
push
push
and
outsl
pushf
jb
sub
dec
test
or
or
and
add
mov
fnstsw
mov
mov
test
in
add
inc
xorl
mov
xchg
jle
lahf
mov
mov
pop
mov
sti
pop
adcb
xchg
inc
clc
mov
mov
cmc
adc
cmp
xchg
loopne
xchg
xchg
or
xchg
mov
fidivrs
or
sbb
fs
cmp
inc
mov
loope
lcall
mov
or
pop
fstps
cmp
cmpl
clc
dec
push
mov
xchg
icebp
loop
xor
add
jae
mov
ror
mov
pop
xchg
or
jecxz
mov
inc
lods
xor
cli
push
daa
loop
negl
movsl
jbe
stos
pop
or
sub
inc
cmp
test
popa
loop
jno
dec
test
cmp
shl
sub
push
xchg
data16
lock
xchg
ljmp
rorb
push
insl
imul
out
aas
arpl
xor
insl
enter
push
add
cmp
shlb
xorb
pop
orl
int
mov
cs
mov
out
and
jb
rol
hlt
and
hlt
sbb
push
ror
icebp
pop
mov
push
out
in
mov
cli
daa
sahf
mov
add
insb
test
jle
out
nop
popa
and
mov
jns
dec
rcll
mov
and
inc
call
cli
push
sbb
dec
jmp
pop
ss
mov
xchg
mov
cmp
jge
fnstsw
cmp
pop
add
dec
ljmp
das
mov
out
jb
sbb
jge
dec
clc
push
ss
mov
rcl
into
imul
adc
inc
sahf
out
fisubrs
ret
enter
mov
dec
adc
ja
ja
mov
push
pop
lock
and
pop
xor
and
push
int
ret
and
add
mov
add
jmp
xchg
in
cmp
inc
jle
and
cli
pop
movsl
leave
push
mov
inc
push
inc
add
enter
repz
out
xchg
aam
fisubrl
lods
divl
inc
pop
in
sbb
xchg
pop
jnp
stos
sti
push
pushf
add
fistpll
subl
aaa
pop
push
lods
sub
or
filds
icebp
mov
mov
dec
pop
cltd
or
inc
inc
sbb
fwait
out
nop
das
pop
pop
adc
loop
mov
mov
dec
lret
int
int3
xor
and
jle
insb
and
ljmp
and
pop
outsl
js
xchg
stos
std
and
add
test
cmc
es
mov
int3
and
xchg
insl
pop
jo
lahf
jne
xor
cmp
out
xchg
jae
sub
rolb
pop
jo
xchg
push
or
stos
pop
pop
test
lods
test
xlat
testl
cmp
jp
pop
mov
je
subl
nop
lods
imul
or
inc
popf
ja
movsb
xchg
outsl
stc
dec
scas
adc
loopne
or
bound
negb
pop
dec
sub
cmpsl
xchg
cmp
or
push
push
int
mov
mov
jae
stos
popf
jae
mov
or
jmp
cmp
push
xor
jnp
add
aaa
popa
jp
pop
shrl
dec
jecxz
std
sbb
inc
cmp
ljmp
xor
clc
stc
add
sbb
adc
sub
stos
cmp
or
inc
and
push
fildl
cltd
sbb
sbb
sti
push
pop
ror
inc
cli
cs
push
aam
jg
enter
push
adc
push
loope
and
js
std
out
or
out
pop
adc
hlt
icebp
jge
stc
imull
and
loop
es
mov
test
test
push
pop
inc
sub
mov
mov
leave
mov
push
fwait
movsb
je
xor
pop
test
rcrl
cmp
fwait
lods
add
test
adc
dec
pop
mov
sub
stos
xor
fst
add
call
push
sbb
mov
push
addl
mov
add
test
push
xor
push
jnp
mov
movsb
xor
sub
fimull
xor
or
cmpsl
shrb
mov
cmp
dec
stos
jbe
jb
mov
ljmp
ja
xor
mov
adc
pop
push
mov
and
test
push
fcomps
cmpsb
jp
or
sahf
mov
jo
pop
stc
add
mov
pop
std
xor
dec
push
lods
les
imul
sbb
sub
mov
js
xchg
pusha
nop
fcoml
das
mov
add
cmc
add
xchg
pop
sub
and
fdivs
xchg
push
mov
pop
ret
fbstp
outsb
dec
or
addr16
jmp
sbb
adc
fistps
int3
aam
lods
mov
xlat
movsb
dec
out
fldenv
adc
vpunpcklwd
int3
dec
dec
pop
dec
mov
mov
pop
xor
clc
xor
cmpsb
push
add
ljmp
rorb
adc
add
inc
push
lods
mov
push
ret
cmp
loope
call
in
rolb
mov
push
into
bound
pop
pop
gs
sbb
dec
xlat
mov
loopne
push
test
jo
rclb
xacquire
xlat
xchg
jl
aaa
mov
add
adc
adc
mov
loop
into
outsb
pop
cmp
jns
xchg
data16
jg
cmp
sub
pop
int
fcmovne
sbb
mov
lret
dec
sub
lea
js
sub
jmp
xor
fwait
jl
mov
xor
pop
stc
push
adc
dec
cmpsl
and
or
call
aaa
rorl
aad
divb
pop
xchg
xor
add
xchg
or
fdiv
lods
adc
cs
stc
xchg
jle
in
add
xchg
jle
into
push
test
stos
mov
insl
cmp
cmp
sub
test
push
mov
cmp
jne
sbb
lock
push
outsl
cli
lods
xchg
push
mov
jns,pt
pusha
xor
jb
mov
pop
mov
jge
lock
arpl
push
adc
movsb
call
pop
mov
or
or
or
mov
rcrl
lods
test
scas
and
push
mov
loope
add
mov
jne
xchg
repz
aaa
es
pop
and
jo
lahf
arpl
push
inc
xor
inc
inc
cltd
test
nop
mov
je
push
mov
inc
shrl
pop
aas
mov
rcrl
fcmovnu
dec
das
jmp
dec
outsl
das
cmp
packssdw
fisubrl
lcallw
inc
mov
jno
sbb
sbb
pop
and
and
shl
pop
xorb
vmwrite
jne
xchg
mov
add
pop
mov
fiadds
lds
jae
gs
add
xor
aaa
push
je
xchg
cmpsl
mov
out
adc
sub
out
imull
and
xlat
stos
lret
test
sub
and
mov
jge
pusha
mov
and
adc
sbb
ljmp
xchg
cmp
mov
push
pop
cld
scas
dec
inc
in
or
push
sub
ror
jno
aad
fxch
movsl
sbb
mov
repz
mov
cmp
bound
push
sahf
xchg
fimull
and
cmpsl
outsb
adc
dec
in
add
ficompl
push
dec
add
or
pusha
push
lret
push
sub
mov
push
gs
repz
inc
lock
or
inc
dec
fisttps
mov
pop
jle
lock
fcomps
das
arpl
pop
adc
dec
mov
xor
or
into
arpl
test
cld
push
mov
icebp
sti
sub
mov
jo
inc
mov
lods
adc
leave
out
cltd
xor
xchg
stc
xlat
aas
mov
lds
nop
mov
xchg
add
jmp
adc
and
dec
mov
data16
push
fs
addl
lret
ss
mov
fldt
je
f2xm1
divb
lahf
lods
push
divb
inc
xchg
mov
dec
into
dec
and
pushl
push
dec
fstpt
jmp
adc
push
push
sti
test
cmpsl
fcoml
imul
faddl
shrb
orb
stc
sahf
frstor
or
pop
sub
lret
cltd
pop
inc
jl
mov
fidivs
and
cmp
in
pop
sub
jne
daa
add
mov
mov
mov
lds
outsb
aam
sbb
dec
push
jns
data16
sbb
out
in
fmul
mov
jne
into
dec
ljmp
cli
ds
in
pop
mov
mov
mov
roll
test
outsb
popf
clc
or
fildl
inc
fstpt
mov
inc
add
in
and
lds
outsb
imull
pop
inc
mov
fbstp
fcmovb
mov
movsb
push
xchg
incl
xchg
adc
adc
jmp
sar
int3
jne
mov
imul
stc
jno
xchg
out
int3
lea
aad
sti
fisubrs
scas
inc
cmp
cmp
loope
or
insb
mov
mov
or
mov
mov
jae
push
daa
ret
das
inc
add
pushf
xchg
into
ret
push
pop
popa
lods
or
js
cmp
jae
hlt
pop
popa
push
sub
push
sbb
mov
fldenv
mov
gs
and
xchg
shr
aad
or
xchg
lret
test
sub
dec
mov
mov
cmp
shlb
adc
xchg
jnp
sbb
mov
jl
add
push
test
adcb
add
sub
sub
cmp
push
out
jae
dec
inc
push
out
dec
popf
daa
jge
jb
xchg
cmp
sbb
clc
inc
dec
xlat
iret
dec
lret
scas
jg
adc
orl
mov
sbb
inc
inc
rclb
mov
xor
mov
fs
push
xchg
pop
sarb
imulb
loopne
les
add
adc
mov
ss
icebp
popf
and
cmpsb
mov
ds
bound
es
sub
in
std
xor
sub
test
push
popa
and
sub
lret
lahf
add
dec
pop
pop
cli
rorl
inc
leave
xor
cmp
lret
aas
scas
mov
sbbl
loop
insb
cmp
pop
leave
sahf
insl
xchg
lret
or
push
shlb
in
adcl
jno
outsb
sbb
add
in
stos
lock
sbb
or
scas
addr16
std
repnz
inc
movl
movsb
dec
jl
dec
je
daa
cmpl
mov
jno
or
movsl
dec
repnz
mov
into
mov
das
or
sti
rolb
pop
popa
cmpsb
xchg
scas
paddq
cli
inc
jmp
sub
stc
ss
lcall
shrl
dec
scas
insb
jb
addr16
or
xchg
ljmp
sub
in
cmp
popf
cmp
push
outsl
pop
enter
adc
lods
mov
pop
xchg
push
push
xchg
pop
fcomp
orb
xor
pop
out
cmp
lcall
sbb
and
push
into
inc
jecxz
add
ljmp
rorb
and
sub
sub
cmpsb
gs
enter
lcall
orl
cs
cmp
ljmp
imul
mov
aaa
sbb
ret
mov
push
pop
mov
jle
iret
imull
mov
xchg
fisttpll
addr16
pop
decb
sbb
pushl
enter
lods
test
mov
pop
clc
mov
ja
dec
mulb
dec
in
test
loopne
push
pop
call
and
xchg
push
or
jnp
fwait
push
les
jmp
shl
xchg
pusha
fcompl
lods
fisubrs
repz
xchg
inc
rsm
sub
xor
push
add
jle
push
in
mov
jo
mov
mov
scas
dec
movsl
fdivr
mov
leave
pop
adc
iret
gs
mov
fcoms
adc
xchg
ret
fsubrs
int
repnz
aam
fwait
test
loopne
or
mov
jmp
add
inc
icebp
mov
dec
dec
mov
push
aaa
push
mov
outsl
push
jp
int3
pop
cmpsl
cmp
sbb
sbb
sbb
movsl
int
pop
add
mov
loopne
push
cwtl
adc
les
fadd
imul
jnp
and
cmp
cs
pop
outsl
fsts
jecxz
push
xchg
add
jge
scas
lock
lods
jmpw
jp
arpl
out
imul
imul
cmpsb
andb
fcmovbe
mov
pop
adc
aas
call
add
and
jge
jne
push
pop
push
adcb
mov
stos
and
shlb
mov
jge
inc
iret
fiadds
push
xor
nop
aam
push
leave
or
and
pusha
inc
ret
xchg
lret
aam
xchg
dec
stc
and
loop
sti
inc
stc
jae
add
mov
mov
jns
loope
mov
push
stc
or
adc
ljmp
dec
stos
and
enter
je
dec
ficoml
and
cmc
push
inc
subb
fdivs
std
leave
pop
xor
aaa
dec
loopne
sub
and
dec
inc
cmc
mov
cmc
mov
jmp
push
and
or
outsl
enter
or
mov
int
cmp
daa
insb
jl
cs
mov
xchg
xchg
lods
ljmp
pmaxsw
sar
or
mov
or
mov
data16
out
test
inc
mov
mov
xor
test
sub
sub
mov
ret
push
pusha
cmp
cmp
sbb
ja
add
push
adc
mov
ret
lea
sub
arpl
xchg
mov
mov
outsb
jmp
fistl
lods
adc
or
jmp
aaa
pushf
jne
hlt
sbb
mov
lock
inc
cmp
pop
mov
mov
mov
outsb
pop
fimuls
dec
aam
mov
push
xchg
mov
sarb
aam
push
xlat
xor
pusha
gs
inc
sar
js
add
aam
sbbb
sub
or
push
into
movsl
sub
iret
and
mov
xchg
or
scas
neg
mov
popa
lds
loope
and
xchg
push
lret
scas
mov
loop
xor
or
xchg
push
inc
arpl
cmpsb
out
cmpsl
add
mov
push
test
dec
jp
cld
int
xchg
bound
cmp
adc
test
test
fsubrl
cmc
lret
mov
in
mov
test
sbb
push
and
sbb
mov
mov
out
test
xlat
cmp
nop
lods
xorb
aaa
pop
ljmp
ret
in
mov
sbb
mov
enter
dec
mov
pushf
xchg
xchg
inc
push
stc
and
cmp
xor
daa
and
adc
push
js
add
and
cmp
jne
cmpsb
push
pop
mov
hlt
int3
sub
cmp
and
or
out
push
jecxz
repz
jns
mov
lret
adc
xchg
jl
out
scas
xor
mov
fisubrs
aas
xchg
cmp
mov
mov
inc
cmpsl
daa
repz
or
sbb
rcll
mov
jg
jg
jb
sarl
cmpsb
push
repz
aad
mov
jmp
shrl
aad
sub
sbb
jle
sti
and
push
push
fsubp
sbb
cmp
aam
jnp
jns
mov
out
add
pop
sbb
xchg
sub
cmpb
push
jle
xchg
ret
pop
add
outsl
inc
sbb
xor
cmp
push
xchg
mov
in
data16
pop
sub
pusha
mov
aad
dec
mov
cmp
xchg
xchg
ficompl
out
sbb
cmp
add
mov
lods
movsl
or
mov
in
mov
out
xchg
cmp
push
ds
and
addr16
xlat
inc
stc
mov
out
imul
pop
cmp
sbb
cli
cmc
jo
hlt
stc
sbb
or
mov
cltd
add
pop
jl
vpsubusw
sbb
aad
nop
sbbl
dec
mov
add
cmp
adc
pop
and
and
or
ret
push
push
mov
dec
ret
push
pcmpeqb
xor
sbb
sbb
frstor
push
inc
mov
pop
out
and
dec
push
jg
iret
adc
jmp
stc
lods
sbb
or
fistl
daa
pop
stos
fwait
enter
push
ja
add
jmp
jno
mov
addr16
inc
inc
neg
inc
je
push
das
cltd
xchg
xlat
push
cmp
mov
adc
adc
cmpsl
sbb
jnp
stos
outsl
lret
jae
call
and
jns
imul
imulb
jb
push
or
push
dec
xchg
je
inc
cs
push
jp
jp
dec
adc
mov
loope
and
xlat
push
add
addr16
int3
scas
lret
pop
mov
push
leave
pop
jno
loopne
sub
movsl
out
sahf
les
mov
clc
hlt
mov
test
insb
push
xor
inc
fs
jbe
pop
pop
mov
xlat
sbb
mov
push
int
dec
test
int3
push
jl
jbe
xor
std
mov
xor
orb
sbb
sub
adc
pop
scas
loop
imul
adc
lods
daa
or
mov
mov
nop
lret
addr16
sub
inc
jo
ret
push
sub
and
push
insl
sbb
add
into
jp
je
fdivs
inc
push
loopne
cmp
push
adc
and
or
ret
dec
jmp
mov
jl
rcrl
inc
stos
addps
mov
out
jmp
mov
fdivrs
mov
inc
int
pop
arpl
inc
int
lods
rcr
mov
add
fisttps
xchg
pop
jle
std
mov
aam
in
adc
dec
pop
xchg
out
mov
add
repz
out
mov
push
aaa
add
imul
add
in
aad
mov
es
dec
repz
mov
pop
xchg
mov
mov
aaa
ret
dec
jle
sub
addb
out
cmc
fwait
lahf
mov
ret
movsb
pop
jnp
fisttpl
mov
and
sub
loop
push
xor
cld
cmp
ds
push
popa
aad
mov
xorl
pushf
rcrl
jne
mov
out
cmp
jg
xchg
and
call
in
jl
pop
in
jns
orb
clc
cmp
and
sbb
xchg
mov
lret
push
push
or
daa
insl
or
cli
pushf
je
jmp
ljmp
ret
xlat
or
xor
push
jbe
mov
sahf
cmc
mov
rcll
push
in
jno
stos
test
leave
call
out
lret
pop
jb
fs
shlb
push
or
mov
call
cmpsb
scas
inc
sub
xlat
or
das
jns
stos
dec
push
jge
lret
push
not
int3
pop
mov
imul
jb
lock
loope
push
mov
fistpl
sbb
repz
pop
in
or
mov
pop
ljmp
imul
xchg
mov
sti
hlt
sbb
jae
mov
fmul
lret
testl
mov
nop
mov
pop
ret
jns
nop
cmp
mov
xor
call
negl
or
stc
jns
pop
inc
add
int3
imul
pushf
test
xorb
test
sub
movsb
ret
into
sub
ljmp
xchg
rcr
mov
aad
xor
addr16
fnsave
clc
mov
das
gs
mull
mov
cmpsb
sub
inc
cmp
out
mov
mov
xchg
sub
ja
push
sub
push
cmpsb
int
fildl
outsb
add
mov
xchg
push
or
pop
leave
nop
into
add
jmp
mov
lods
or
ds
mov
jge
test
lods
inc
movsl
mov
inc
sbb
leave
cmp
pop
addr16
dec
int3
mov
pusha
sbb
ljmp
fistps
inc
jb
xchg
push
fdivrl
cmp
jmp
dec
cmp
fmul
xchg
test
xchg
cld
loopne
jmp
leave
hlt
xchg
adc
inc
ficompl
fcmovu
jae
aas
mov
inc
push
mov
pop
adc
and
jbe
jo
mov
loopne
push
push
adc
lods
xor
xor
out
movsb
mov
js
lahf
rclb
pop
and
xchg
adc
add
ret
gs
dec
fidivrl
xchg
cmp
sub
aam
xor
rclb
and
fdivl
jle
sub
cmc
stc
pop
mov
sub
pop
insb
pop
sub
inc
jns
jo
push
jbe
outsb
adc
mov
sub
int3
push
stc
idivl
mov
out
fwait
or
ljmp
stc
cmp
jne
lcall
out
test
mov
add
jne
xchg
add
jmp
jmp
in
sub
loopne
xor
or
sbb
inc
jbe
or
outsl
pusha
jae
xchg
ds
mov
mov
and
jge
jns
mov
sub
xor
mov
popf
loopne
loop
cmpsb
mov
sbb
dec
adc
sub
data16
dec
addb
jle
sub
aas
mov
mov
cmp
sbb
inc
je
sbbb
add
pop
ret
nop
mov
jg
das
mulb
mov
inc
sbb
das
cmp
ror
cs
push
mov
movsl
or
int3
sbb
gs
dec
fistl
ret
mov
loopne
xchg
adc
inc
cmp
out
imul
sbb
jge
and
lret
jecxz
jns
imul
hlt
out
repz
push
pop
shlb
xchg
pop
icebp
cmpsb
dec
pop
mov
pop
test
js
xchg
sbb
fsub
pop
cwtl
sub
xor
mov
in
or
push
lods
lcall
fdecstp
loopne
mov
dec
testl
jno
int3
adc
mov
sbb
int3
mov
std
cmpsb
dec
lods
insb
repz
push
xor
cltd
fdivrl
xor
inc
daa
and
jnp
popf
pop
sub
inc
sub
repz
daa
pop
xchg
lcall
dec
je
adc
inc
push
push
mov
mov
jbe
ss
shll
or
cmpsb
subl
cs
inc
sbb
call
mov
xchg
jae
adc
jne
or
dec
insl
pop
lret
sbb
add
popa
insb
mov
out
je
imul
shr
nop
pop
int
outsl
clc
leave
push
test
adc
test
jnp
lock
cltd
mov
cli
pop
push
mov
or
xchg
jnp
fstpt
pop
arpl
pushl
and
cmp
push
jb
adc
jge
popf
adc
call
ret
adc
mov
aas
outsb
adc
lahf
pop
adc
fdivr
mov
push
xor
xchg
cs
aam
hlt
inc
pop
sbb
sub
xchg
sub
lcall
into
xchg
pushf
jp
push
orl
aas
push
call
sbb
or
imul
push
push
test
inc
stc
or
lds
push
mov
jecxz
mov
adc
mov
ret
adc
cwtl
pop
sbb
sar
pop
and
pop
pusha
mov
pop
out
cld
adcb
adc
push
test
fld
call
mov
jae
xchg
lahf
mov
mov
cmp
outsb
xchg
push
mov
jae
pop
push
in
sbb
push
popa
lods
or
pop
mov
repz
cmpsb
movsl
jns
jae
and
push
pushf
sub
cmpb
scas
jge
sbb
clc
add
dec
shlb
inc
inc
mov
jg
in
pop
fnsave
imulb
dec
pop
std
in
loope
hlt
pop
inc
fdivrl
xlat
jle
popf
pop
arpl
rclb
push
fistpll
mov
ret
test
in
xchg
inc
push
rcrl
clc
jmp
fildl
xchg
add
jns
mov
jecxz
mov
add
movsl
popf
filds
hlt
sub
sbb
jns
fnstenv
sbb
ljmp
mov
stos
fstpt
and
test
dec
or
sub
inc
or
mov
and
out
daa
hlt
mov
jno
out
or
or
add
bound
sbb
sbb
inc
push
pushf
mov
dec
jbe
sbb
mov
inc
je
out
cmp
xorl
hlt
sarb
push
mov
insl
rcrb
ffreep
xchg
cmc
push
sbb
lods
cmp
ret
nop
sub
jge
adc
mov
movsl
mov
ja
jge
and
jecxz
mov
call
jo
cmpsb
sub
xor
int3
cmp
daa
hlt
sar
mov
or
nop
mov
lds
fidivrs
push
cmp
pop
cltd
and
sarb
jb
and
mov
bound
inc
pop
out
or
xor
ret
pop
sti
mull
lcall
std
idivl
adc
jbe
jbe
sub
icebp
aad
and
inc
mov
outsb
cmp
adc
es
in
movl
jae
cmp
subl
inc
sbb
cwtl
ret
mov
pop
push
sub
mov
inc
out
jecxz
scas
cld
imul
stos
pop
ja
or
cmc
xchg
dec
push
mov
xchg
xor
iret
xchg
je
ficomps
inc
jo
jp
mov
rcll
lea
pop
xchg
mov
in
or
mov
xor
inc
fldenv
inc
xchg
xor
inc
in
repz
xchg
data16
xchg
scas
jne
test
addr16
jno
mov
jns
push
mov
scas
sub
testb
stos
iret
push
jle
das
fiaddl
test
push
sub
adc
je
pop
mov
push
mov
xchg
jns
sti
add
lock
or
mov
negb
sahf
pushf
addr16
jnp
call
std
repnz
mov
sbb
fwait
sbb
das
xorb
dec
in
dec
out
jp
jbe
mov
dec
xchg
aaa
jecxz
insb
das
pushf
ret
push
mov
sbbl
and
int3
subl
outsb
daa
sbb
fisubs
cmp
cmp
or
in
insb
push
je
rolb
jmp
jnp
pop
mov
adc
xchg
jge
dec
jne
rcl
lcall
hlt
add
mov
lods
adc
icebp
mull
addr16
or
sub
testl
fdivrs
mov
lahf
cmp
ljmp
mov
stos
mov
stc
lret
pop
dec
lea
std
inc
push
imul
imul
mov
lock
divl
xor
adc
outsl
pusha
mov
stc
out
aaa
addr16
adc
mov
jb
adc
jg
lret
aam
test
cld
dec
fsubrl
negb
cwtl
jb
jg
clc
subb
sbb
fcomps
pushf
adc
inc
jmp
fbstp
or
test
movsl
mov
repnz
mov
adc
imul
pop
sub
call
xor
hlt
addr16
clc
push
lock
in
aas
lds
push
icebp
jg
push
and
and
aaa
xchg
jb
xchg
push
add
jbe
adc
jbe
hlt
ds
addb
mov
addr16
adc
jg
or
insl
pop
cmp
lea
dec
jnp
mov
sub
ss
or
fbstp
scas
cs
mov
add
or
dec
push
jne
pop
out
and
lods
cmp
mov
dec
clc
std
add
addr16
or
xor
and
pop
test
dec
sti
pop
in
subl
cli
sub
jbe
mov
sub
aam
mov
imul
test
inc
dec
xchg
push
mov
pop
fsub
sub
sub
dec
lahf
mov
pop
push
leave
push
in
ret
ja
fsubs
bound
lock
decb
jne
jge
mov
sbb
cs
jp
jecxz
icebp
int3
add
test
mov
pop
lods
mov
sub
fisubl
repz
pop
fidivrl
stos
data16
shlb
sub
cmp
std
faddl
lds
std
push
in
sub
pop
push
xor
sub
dec
mov
push
jp
insb
pop
out
inc
mov
pop
shr
sub
push
dec
rcr
jl
outsl
and
dec
push
jecxz
inc
jne
jp
jl
pop
insl
add
lds
jno
push
jnp
cmpsb
jo
ja
jge
ret
inc
decl
inc
add
cmc
sub
sub
xchg
fs
cwtl
push
ret
movsb
jbe
mov
inc
cmpsl
lret
cmp
fldt
xor
jns
ljmp
jmp
rclb
insl
fs
fxch
fs
jp
lea
pop
or
mov
cmp
in
sbb
xor
mov
inc
icebp
fdivrl
adc
lcall
popf
or
sbb
ror
lods
ret
add
iret
adc
mov
jge
adc
test
ret
lahf
pop
lock
loop
mov
mov
rclb
pop
xchg
xor
cmp
js
test
add
in
in
xor
sub
dec
cmp
ficoms
pop
int3
xchg
fsubrl
icebp
inc
and
adc
jb
or
shr
out
jmp
add
sub
and
icebp
scas
or
lods
pop
les
fucom
es
xchg
jle
idivb
dec
jnp
cs
imul
dec
cmp
mov
int3
test
cmp
push
loop
mov
cli
mov
les
cltd
jne
mov
push
mov
shll
mov
imul
loope
push
cmp
insl
idivl
daa
pop
clc
pusha
sbb
orl
xor
out
shlb
call
mov
adc
xor
jmp
pop
xchg
sub
ljmp
adc
or
fwait
add
mov
out
xor
cmpsl
pusha
xchg
push
cmc
mov
notw
je
pushf
movsb
shl
mov
and
cmp
xor
adc
inc
sub
dec
cmp
aaa
pushf
lods
ficoml
daa
ja
fcoms
push
cmpsb
fisubl
clc
fnstsw
ja
cmc
push
decb
test
sub
pop
pop
or
push
scas
dec
sub
xchg
mov
push
mov
fisubs
push
jle
pop
and
incb
adc
jle
mov
adc
test
js
adc
mov
dec
ret
gs
xor
cmp
ret
adc
fs
xchg
or
pop
mov
jl
sub
xchg
sbb
xor
mov
cs
xchg
dec
in
imul
or
sahf
mov
and
pop
xchg
xor
sahf
mov
cld
js
inc
rorl
mov
xor
lret
inc
pop
adc
and
adc
std
stos
rep
repnz
out
xor
hlt
ret
xchg
les
inc
aam
ret
dec
loop
pop
xlat
and
es
pusha
xchg
rcl
xor
inc
dec
out
mov
pop
ja
sbb
dec
mov
aam
mov
icebp
xor
fcompp
out
inc
daa
std
lods
pop
ret
sub
popf
ljmp
add
les
mov
mov
testb
mov
inc
adc
lret
fbstp
stos
push
mov
xchg
sarl
adc
movsl
jp
cltd
xchg
repnz
push
in
mov
mov
jl
popf
jecxz
dec
mov
lock
xchg
pusha
inc
into
add
daa
pop
xchg
test
add
xor
psubsb
test
push
in
push
jge
imul
dec
data16
lea
xor
push
sub
dec
cmc
cltd
scas
fdiv
jge
sub
sbb
xor
rcl
xchg
rcll
xchg
jo
jb
adc
dec
inc
sar
and
pop
sti
lahf
xlat
mov
dec
xor
pop
mov
push
fldl
inc
cs
pop
lods
icebp
fs
jp
cmp
iret
jge
pop
mov
fsubrl
mov
ja
pop
sbb
sub
mov
iret
scas
hlt
sub
xchg
xchg
insl
shrl
popf
or
mov
jg
shrl
and
mov
mov
sahf
xlat
out
inc
stos
cmp
inc
jmp
mov
or
repnz
xchg
xlat
adc
and
and
sub
scas
jae
push
inc
pop
outsl
or
sub
sbb
cmc
into
push
jecxz
add
leave
pop
scas
into
test
adc
dec
sub
shrb
pop
ret
and
popf
cmp
enter
jb
movsb
jle
push
or
xor
jp
cmp
mov
fldpi
aas
inc
push
push
das
pop
lds
movsl
std
es
xor
jno
pop
jnp
cmp
xorl
pop
push
add
push
cmp
bound
pop
lds
aad
stc
jns
xchg
inc
fidivrs
mov
lods
inc
leave
ja
push
dec
cmp
pop
pop
iret
cmc
pop
adc
shl
push
mov
jmp
add
push
pop
mov
les
pop
xchg
mov
sub
xor
adc
jge
shll
add
mov
arpl
out
xchg
sbb
sti
or
pop
lock
sub
cmp
ja
shll
cmp
ss
xchg
stos
and
sbb
adcl
daa
sub
insb
push
cwtl
add
cmp
lcall
mov
mov
cmp
xorl
push
pop
sub
jns
mov
mov
fcmove
jge
shll
sub
xor
je
sahf
pop
das
fwait
mov
xchg
mov
inc
xlat
out
adc
inc
add
pusha
arpl
xor
cmp
icebp
icebp
mov
and
mov
mov
sbb
cmc
int
adc
mov
je
push
cmpsb
inc
xchg
xor
push
push
cmp
xchg
fistps
ss
dec
and
and
inc
pop
lods
jae
idivb
push
and
mov
shll
les
xchg
sbb
add
xchg
sub
mov
imul
repz
mov
cmp
cmp
or
outsb
dec
inc
fisubs
in
cmc
ret
pop
and
cmpsl
pop
fnstenv
cld
xor
sbb
loop
adc
or
jb
lea
xor
and
imul
push
dec
aaa
sti
adc
shlb
icebp
sub
or
inc
mov
jle
insb
pop
lods
xorl
out
sbb
mov
mov
mov
ja
in
xor
loopne
subl
das
lods
js
cmpl
dec
fwait
loopne
push
xor
cmpsl
or
and
push
cmpsl
int3
lret
subl
mov
and
pop
xchg
xor
rorl
es
and
ret
sub
pop
cli
mov
je
jns
loop
inc
clc
sahf
andb
js
ret
mov
inc
pushf
lods
pop
in
flds
mov
pop
xor
cs
push
movsb
aaa
mov
cmp
jmp
stc
adc
cwtl
push
rcrb
lret
pop
mov
or
pop
stc
icebp
int3
arpl
ja
xlat
insl
xor
arpl
test
adc
enter
mov
fmuls
mov
inc
iret
mov
and
cmp
int3
push
pop
loopne
and
jo
add
outsb
jo
sbb
sub
call
fistpl
lret
mov
xchg
stos
add
or
jmp
adc
arpl
mov
or
add
sar
nop
mov
sub
imul
popf
pop
fidivs
or
sti
cltd
into
xor
sub
outsl
adc
shlb
fmuls
push
and
ret
dec
iret
add
call
adc
cmp
in
sbb
fnsave
outsl
adc
sbb
push
cltd
repz
cltd
adcl
adc
dec
gs
xchg
mov
js
xchg
js
mov
add
cmpsl
out
addr16
sti
push
ss
inc
mov
repz
mov
fbstp
dec
repz
adc
aaa
pop
dec
int3
lret
xchg
pop
or
daa
sbb
bnd
dec
pop
or
imulb
or
mov
jno
dec
aad
jl
mov
insl
pusha
mov
mov
movsb
fisttpl
jmp
add
pop
rorl
lods
addr16
add
sbb
ret
and
sub
out
xlat
push
clc
adc
lahf
rclb
xchg
das
mov
ret
out
subl
inc
inc
in
insl
cmp
in
add
adc
xchg
inc
pop
scas
mov
pop
popa
mov
setge
mov
xchg
cmc
xor
shrl
fs
aam
mov
scas
pop
pop
out
imul
insl
lea
jl
das
xchg
and
cmp
pop
ss
mov
icebp
out
pop
push
mov
cmc
or
arpl
sbb
xor
popf
push
jne
sti
push
fstps
out
js
add
and
mov
xor
push
in
jl
out
push
dec
push
jmp
fwait
aas
adcb
ja
xchg
sub
or
adc
jge
incb
cmp
pop
stc
xchg
xorl
mov
stc
imul
or
cmp
movsl
inc
and
cltd
cmc
sti
mov
in
out
add
loop
add
ljmp
nop
jo
pop
or
test
pmuludq
mov
sub
jns
inc
movsb
lds
and
sti
out
into
loop
pop
aas
outsb
imull
pusha
mov
add
push
int3
xor
lret
sub
dec
add
mov
pop
ss
inc
test
test
dec
andl
jno
sbb
or
and
xchg
fisubrl
es
out
push
cmp
insl
push
imul
mov
dec
ret
pop
xorb
inc
add
push
sub
popf
fdivrl
jns
gs
push
movsl
pop
dec
stc
push
adc
mov
inc
cltd
in
sbb
outsl
test
arpl
xor
stos
or
dec
and
pusha
xchg
leave
nop
cmc
mov
dec
jnp
sahf
mov
ss
jp
sub
testl
lahf
adc
mov
lock
cmp
push
out
mov
stos
jmp
push
sahf
mov
cmp
mov
fwait
mulb
push
sub
push
or
in
and
inc
cmp
iret
inc
and
jle
xor
and
test
pop
mov
popa
lret
sahf
sub
loop
push
ss
xor
xor
sbb
xchg
dec
cmp
adc
or
xchg
sbb
jnp
inc
pop
cmc
inc
addr16
mov
push
sbb
sub
and
cmp
cmpsb
ds
push
push
pop
stos
fwait
or
mov
or
outsl
push
out
imul
mov
adc
scas
lds
idivl
adc
mov
jnp
mov
rcrl
add
bound
mov
hlt
or
adc
movsl
and
nop
addr16
enter
out
or
adc
out
cmpsb
mov
pop
stos
cmpsb
lea
inc
mov
lcall
dec
jecxz
insl
or
inc
xchg
int
call
xor
ret
lret
es
std
or
fimull
sub
scas
es
outsl
jno
pop
js
aaa
or
mov
rorb
in
aaa
pop
cli
fsubs
and
jp
xor
lock
je
mov
xchg
or
jnp
mov
jne
xor
clc
leave
inc
xchg
dec
and
repnz
adc
cmp
inc
pop
idivb
int3
sub
dec
arpl
dec
adc
dec
out
neg
xchg
decl
inc
or
ret
dec
divl
cmp
adc
pop
mov
or
add
mov
inc
cmp
fisttpll
or
adc
mov
jnp
jnp
xchg
lahf
dec
sbb
jns
or
test
dec
punpckldq
test
push
mov
pusha
push
and
hlt
push
shlb
jae
jecxz
jp
pop
roll
and
pusha
hlt
xor
jp
fst
add
aam
outsb
mov
inc
add
iret
out
ror
lret
or
stc
cwtl
movsb
add
stc
jmp
cmp
outsb
mov
sub
xchg
push
fisttpl
xchg
clc
stos
push
adc
push
mov
jle
out
or
jnp
sahf
push
cmp
jnp
or
and
add
cwtl
add
inc
fwait
sub
xor
jmp
out
lds
das
sbb
ljmp
add
daa
mov
call
sti
jmp
imul
inc
pop
cli
cs
cmp
sub
js
sarl
mov
movsl
sbb
faddl
pop
jecxz
and
push
jo
xor
dec
push
mov
sbb
cld
dec
sar
sbb
sbb
stc
jno
das
inc
sub
gs
out
clc
push
fcomi
ss
pop
xorl
or
cld
stos
inc
fstpt
mov
mov
mov
mov
jge
mov
jno
es
mov
vpand
inc
jne
dec
xchg
stos
sarl
sub
pop
ja
hlt
rolb
rol
inc
adc
pop
add
data16
inc
mov
xor
or
loopne
pop
lea
pop
adc
cltd
pop
mov
pusha
jge
mov
xchg
pop
cmc
les
adc
sahf
pusha
and
jne
pop
pop
lahf
push
mov
sbb
pop
cmp
rep
out
cmp
sub
sbb
pop
pushf
pop
loopne
ss
push
push
xchg
gs
push
add
stos
test
xchg
jecxz
or
jmp
por
xor
jecxz
call
jb
cmp
jp
stos
mov
mov
sub
aam
xchg
xchg
jne
int
xchg
std
dec
filds
mov
cmpsl
pop
lcall
int
inc
insl
gs
sub
adc
pop
movsb
or
test
cwtl
mov
icebp
pop
mov
adc
jbe
stc
mov
add
dec
mov
mov
mov
ja
ja
dec
call
imul
insl
cwtl
sub
inc
test
je
add
inc
setns
call
sub
inc
dec
leave
emms
jae
pop
add
sub
lock
pop
sub
jbe
insl
dec
push
movsl
xchg
insb
mov
dec
outsl
or
daa
lcall
add
adc
pushf
aam
ds
cmpsl
ds
adc
bound
sbb
negl
sub
fdivs
pop
xor
xchg
dec
jle
cmp
fisubs
mov
pop
outsb
popf
add
pop
fists
mov
add
mov
adc
les
rorl
cmc
push
shlb
imul
adc
jp
std
idiv
std
loopne
subb
cs
hlt
outsb
mov
mov
movsb
xchg
nopl
dec
mov
pop
xchg
xor
pop
add
loopne
outsb
mov
inc
call
mov
mov
ja
rol
out
inc
xor
sub
movsb
cs
jmp
sbb
and
cmp
push
xchg
sub
leave
clc
cmp
movsb
sub
xor
sbb
pusha
inc
je
adc
cmp
mov
push
adc
das
pusha
and
roll
in
cli
add
lret
or
push
xor
sbb
jns
sbb
jecxz
cmp
loope
ret
push
xchg
aad
add
add
scas
sub
fs
push
add
hlt
movsl
enter
repz
xchg
shlb
add
jl
ss
in
inc
adc
fld
popa
mov
rcrb
adc
jmp
dec
out
add
add
sahf
in
popf
gs
in
cmp
cld
dec
nop
lds
inc
add
popa
mov
inc
int
aam
and
pushf
rol
out
ja
adc
cmp
aam
mov
ss
mov
xlat
dec
dec
dec
lods
xor
outsb
mov
inc
sub
push
pop
xchg
add
out
xchg
adc
pop
sub
pop
ret
jl
punpckhbw
clc
call
sbb
dec
lea
sub
fsubrs
or
mov
jge
popa
jle
jecxz
mov
in
std
popa
push
xor
outsl
leave
enter
hlt
negl
ljmp
popa
mov
adc
jnp
sbb
aaa
mov
mov
and
adc
jle
outsl
mov
lock
loope
xchg
xor
nop
push
cmpsb
aam
cmp
and
mov
lret
mov
stc
inc
cmp
movsl
popa
push
sbb
mov
push
in
movsb
dec
dec
sbb
push
pop
dec
das
jl
xor
push
sahf
retw
xor
push
daa
andl
imul
dec
push
jae
out
enter
lahf
insb
mov
out
cs
iret
add
packsswb
xchg
aaa
mov
pop
jmp
inc
aad
lods
xchg
mov
mov
or
inc
movsb
dec
repz
pop
jl
daa
cltd
mov
jmp
rorb
movsb
push
inc
aad
shl
insl
ja
inc
js
rcrb
jle
cmpsb
and
push
je
sbb
xchg
in
mov
xor
mov
js
idivb
jns
sub
add
cmp
dec
or
cwtl
xor
pop
or
in
jns
shll
xchg
mov
rclb
repz
sub
cmp
or
xchg
or
out
mov
aam
sahf
sbb
out
mov
mov
or
jg
inc
sbb
or
adc
mov
test
bnd
icebp
jge
das
inc
sub
mov
cmp
add
into
inc
xchg
jnp
cmc
fs
outsb
mov
push
or
sar
mulb
inc
test
hlt
adc
arpl
jge
and
push
push
adc
insb
imul
sub
inc
mov
ja
or
or
fcmovb
inc
in
leave
mov
pop
xchg
adc
add
add
jno
push
fisubl
pop
jecxz
cmpsl
shll
rorb
rcrb
pop
or
dec
cli
xchg
or
or
test
outsl
push
into
mov
adc
icebp
insl
sbbb
sti
imull
lcall
fdivp
xor
jno
fwait
cmp
adc
cmp
lret
mov
inc
gs
test
rolb
jl
cld
sbb
mov
mov
insl
jl
mov
inc
and
mov
pop
mov
ss
xor
in
insb
lret
jae
and
jo
push
xor
inc
jnp
popf
arpl
stos
adc
push
ror
jns
daa
cs
daa
ffree
inc
and
shll
jae
clc
ds
mov
push
sbb
aas
int
int
xchg
pop
or
xor
mov
ds
push
jns
cmp
lret
pop
lods
mov
jp
pop
adc
dec
mov
adc
enter
pop
loope
inc
jg
cmpsl
arpl
stc
fsubl
adc
mov
add
or
mov
jbe
aam
lds
jmp
fdivrs
fnsave
mov
push
sub
add
lret
and
jno
or
fcmovb
insb
gs
pop
mov
cld
inc
mov
xlat
hlt
xchg
ljmp
pushf
adc
test
adc
test
adc
aaa
inc
jge
sbb
movsb
daa
jecxz
idivl
subl
lahf
call
in
negl
sbb
shll
test
sti
xchg
and
out
cmpl
jg
lret
shl
pop
rcll
xchg
pop
js
mov
push
pop
ds
js
movsl
adc
dec
divb
pop
pusha
imul
mov
cmp
sar
mov
les
xor
push
cmc
mov
in
xchg
sti
je
sbb
pop
xchg
jl
sub
nop
movsl
fwait
push
push
and
mov
out
cs
mov
mov
mov
std
pushf
test
sbb
mov
xchg
push
jge
lea
jp
rorb
loopne
dec
out
sbb
cmp
shll
push
mov
push
repz
jns
outsl
sahf
mull
stos
jl
or
sbb
int3
add
mov
add
scas
lret
adc
pop
pop
out
pushf
inc
adc
mov
test
sub
iret
pop
adc
test
gs
and
adc
stc
push
pop
fistpl
ret
xchg
adc
jecxz
xchg
clc
in
mov
stos
leave
and
push
jl
cltd
push
jno
pushf
scas
sub
clc
sub
jns
pop
xor
hlt
icebp
call
pop
imul
xchg
in
das
call
sbb
mov
push
addr16
mov
xchg
sbb
push
stos
cmp
xchg
sub
mov
stos
gs
push
xor
jne
je
mov
aam
and
xchg
repz
imul
cltd
push
insl
cltd
cltd
adc
cli
bnd
inc
inc
jbe
add
in
push
popf
das
loopne
es
andb
pop
jle
adc
pop
fnstsw
mov
mov
pop
rclb
dec
jp
imul
inc
mov
jns
lods
icebp
fidivl
mov
cmp
sti
sub
cwtl
mov
and
jne
pop
ret
or
add
into
aas
iret
mov
int
inc
cmp
fmulp
pop
scas
enter
jo
mov
nop
jo
scas
dec
hlt
sub
fistps
pop
sub
adc
add
xlat
sub
cltd
jl
bound
pusha
ja
xchg
cmp
fimull
pop
jbe
push
cs
cld
popf
xchg
mov
iret
cmpsb
and
push
mov
dec
lahf
cmp
xchg
and
add
fisubs
mov
xchg
sub
cmpsl
jle
pop
xchg
add
ss
rcl
pop
mov
pop
or
xor
inc
jmp
mov
stos
push
fsub
rclb
pusha
pop
fs
rorl
arpl
in
dec
jle
iret
pop
sbb
jno
les
mov
lock
pop
out
fucomip
clc
xchg
xchg
out
cmc
rolb
sbb
je
sbb
icebp
or
jecxz
cmpsl
xor
fcompl
rcll
pop
out
mov
inc
jnp
cmp
jnp
cmc
pop
xor
dec
loopne
rcll
sub
stos
jbe
xchg
hlt
test
ds
fcoml
cmp
sub
jmp
and
add
pop
leave
movsb
sbb
push
pop
jl
aas
js
adc
out
or
add
mov
and
pop
decl
xchg
and
imul
ss
jmp
mov
jp
ret
mov
mov
xor
inc
dec
jecxz
sub
les
add
movsb
dec
xor
paddsw
aam
push
out
fsubs
jg
ss
xlat
push
fnsave
mov
aam
or
pop
fucomip
sbb
sbb
ja
cltd
inc
xor
pcmpeqd
push
jbe
push
sub
add
add
inc
sahf
js
loopne
xor
jecxz
add
lods
cwtl
push
lock
xor
aam
aad
inc
negb
cmpsl
insl
enter
stos
and
add
clc
mov
xor
mov
xor
decl
jbe
stos
push
cld
test
push
scas
inc
sub
fmull
jmp
sub
mov
dec
test
das
fdivl
fisubrl
imul
in
sbb
xchg
mov
and
std
cmpsl
in
stos
lahf
aaa
in
popl
rolb
push
jno
add
dec
inc
cmpsl
pop
pop
lods
iret
mov
call
push
sub
ljmp
imul
rcrl
dec
push
sti
ja
mov
sbbb
push
sub
mov
cltd
push
push
or
ret
fdivrl
sbb
mov
pop
or
push
outsl
clc
clc
jmp
rclb
inc
cmp
in
repz
cs
out
push
testl
out
and
xor
jmp
or
das
and
loop
testl
aam
mov
movq
scas
int
cwtl
push
and
or
pop
sbb
subb
xchg
out
in
test
cmp
setbe
in
xor
int3
xlat
mov
cltd
mov
xchg
jecxz
xchg
cmp
addr16
divl
mov
xchg
inc
movsl
sub
cltd
fadd
add
aas
test
cmp
xchg
sbb
mov
test
cmp
sahf
or
in
mov
and
jnp
enter
into
cld
sub
shl
lods
lea
stos
roll
lahf
stos
jmp
test
pusha
jecxz
dec
out
mov
js
enter
jecxz
inc
aam
adc
xchg
inc
mov
cs
push
push
incl
ds
repz
push
cmp
pop
push
orl
sub
sbb
mov
call
adc
push
jo
hlt
shlb
jmp
popf
repnz
mov
adc
inc
insl
pop
inc
lods
dec
push
into
dec
adc
dec
sub
out
ljmp
jne
scas
fxch
sbb
gs
cmp
lock
and
inc
pop
mov
es
bound
push
shlb
addr16
jnp
insl
stos
add
mov
xor
addl
pop
xchg
push
out
push
adc
out
lea
mov
xchg
and
and
into
in
sub
aaa
lret
xchg
loop
or
pop
inc
iret
jge
dec
pop
or
jecxz
xchg
fnstenv
scas
popa
stc
lods
push
jecxz
xchg
mov
pop
popl
ljmp
ss
inc
sahf
add
add
movsb
mov
xchg
pop
movsb
jle
ljmp
cmpsb
outsb
ss
xchg
in
cwtl
inc
movsl
mov
push
pop
mov
daa
adc
mov
ret
cwtl
mov
cwtl
mov
pop
dec
and
push
in
lods
mov
inc
mov
loop
aaa
outsl
iret
insl
push
mov
movsl
or
dec
mov
shll
stc
inc
gs
mov
adc
dec
mov
cmpsl
loope
xchg
sti
mov
jo
test
clc
jnp
push
fs
int3
imul
scas
decb
or
in
adc
test
inc
cld
cmp
cmpsl
or
ljmp
repnz
jp
cmpsl
mov
paddsb
mov
cmp
push
ss
mov
dec
test
jno
push
enter
inc
sub
xor
sti
push
cmp
addr16
jle
adc
xchg
sbb
into
movsb
cld
and
and
pop
mov
jo
outsb
jle
jg
fstps
cwtl
stc
jl
mov
mov
fistpll
mov
cmp
aaa
cld
push
iret
insl
das
lea
jns
into
divb
scas
sbb
nop
xlat
sub
cmp
rcl
pusha
mov
push
jecxz
mov
lcall
divl
in
cmp
nop
cmpsb
dec
push
sbb
push
jecxz
inc
mov
insb
xor
aad
aaa
mov
loopne
out
pop
xlat
in
mov
push
mov
sbb
xor
imulb
ljmp
in
mov
stc
stos
xor
das
test
and
inc
pop
push
sbb
inc
jmp
cli
int3
movsb
lea
mov
add
mov
pop
inc
pop
adc
inc
sbb
stos
loop
push
push
jb
lahf
dec
jne
add
fwait
int3
mov
nop
mov
fs
pop
and
sub
fstps
xchg
cmp
jecxz
fldt
lock
rorb
call
shr
jecxz
fcomps
ret
stos
mov
sub
repz
inc
mul
ss
out
sarb
lcall
add
xchg
mov
inc
or
jo
arpl
mov
das
xchg
sahf
lea
test
xchg
jecxz
jbe
xchg
mov
fldcw
test
pop
test
pop
mov
rcr
or
je
pop
and
mov
loope
and
iret
inc
sub
mov
call
fidivrs
arpl
fmulp
ss
je
mov
ds
cmpsl
inc
orl
das
loope
mov
insb
fadd
or
test
ss
mov
cld
es
inc
movsl
cwtl
shrb
jl
and
pop
sar
inc
mov
dec
ficoms
xchg
mov
cmp
dec
push
or
jp
les
and
jbe
ljmp
push
xor
out
sbb
popf
data16
and
jns
bound
cltd
popa
popf
mov
bound
dec
xrelease
test
dec
lcall
mov
xor
or
push
test
sub
stos
mov
sbb
lods
push
jmp
push
cmp
cwtl
dec
and
out
test
xor
add
sbb
or
cmp
out
sbb
les
adc
rclb
aam
je
les
push
lock
lods
out
fdiv
loop
cmp
stc
and
imul
add
push
cmp
fadds
mov
rorb
aad
sti
in
and
test
mov
jae
adc
leave
loopne
movsb
loop
gs
fldl
cmpb
sbb
adc
es
mov
ret
or
sub
jmp
mov
pop
rorb
fsub
xchg
es
stc
dec
cmpsl
in
jae
sbb
mov
repz
andb
ds
sbb
mov
dec
sub
push
cmpsl
xchg
adc
jns
sub
lds
dec
or
test
jg
inc
mov
cmpsl
out
jmp
out
push
mov
xchg
jle
lahf
js
rcrl
pop
iret
xor
ss
in
xchg
out
stc
sub
sahf
arpl
xchg
xchg
sar
mov
mov
or
mov
xchg
in
repz
push
xchg
jns
sub
jo
xor
sub
pop
mov
jne
cltd
mov
js
lcall
pop
sub
push
dec
scas
cmp
outsl
in
adc
sbb
ret
push
add
inc
in
dec
xor
std
adc
push
mov
add
stc
sahf
cmp
inc
push
push
xor
cmpsb
or
or
cmp
xor
out
xchg
mov
push
addr16
sub
dec
outsb
pop
push
jl
jl
xchg
shrb
adc
lret
ss
es
pop
pop
out
imul
lret
loop
mov
fcoml
js
push
fidivrs
cld
and
into
sarl
push
jno
fildl
jle
xlat
stos
pop
inc
and
add
and
in
popf
les
xor
mov
xchg
out
loop
fisubrl
pop
insl
fstpl
sahf
in
or
mov
adc
sub
ljmp
stc
cmp
subb
jbe
dec
ja
cmp
push
add
mov
inc
cmpsl
mov
jg
jb
jge
lret
stc
sbbl
cs
lock
sub
in
mov
lods
sbb
jnp
shlb
sarb
mov
jae
ljmp
push
xchg
mov
sbb
insl
repnz
pusha
mov
pop
fldenv
ror
jo
adc
sub
add
pop
xchg
divl
jle
xchg
mov
fstpl
cmpsb
in
fwait
ss
std
mov
push
xor
jp
lods
mov
jae
repz
js
push
adc
push
jbe
sub
movsl
mov
orb
pop
imul
jle
in
rcll
out
add
dec
jle
sti
push
clc
mov
cmp
cmc
mov
in
pop
mov
insb
mov
sbb
mov
inc
fs
xor
xor
test
aas
jnp
insl
mov
cmp
arpl
inc
inc
add
sbb
ljmp
shrl
outsl
popf
int
jno
push
je
addr16
mov
lods
sbb
fsubs
pop
int
xchg
divl
lcall
mov
xor
push
fs
mov
out
jl
jl
stc
and
and
cs
mov
mov
xlat
imul
aam
scas
jp
inc
ds
repnz
and
sbb
mov
push
pop
clc
dec
or
pop
imul
daa
push
xchg
push
mov
stos
loop
adc
jne
insb
stos
mov
mov
jae
gs
mov
add
mov
dec
aam
sbb
mov
cmp
adc
and
test
xchg
hlt
xchg
mov
mov
lcall
cwtl
repnz
jg
in
leave
xchg
insb
inc
lock
cmp
test
inc
adc
cmp
adc
mov
jns
inc
push
mov
mov
call
inc
mov
hlt
out
fs
lcall
pop
jp
leave
dec
pop
fisttps
out
dec
dec
jae
push
push
adc
sahf
lods
mov
sub
or
mov
xchg
outsl
adc
sti
jp
cmpsb
sub
xchg
sarb
cld
jp
jl
jmp
pop
or
das
les
movsb
xchg
insb
test
sub
cmp
loop
div
or
inc
cmp
repnz
mov
or
xlat
xor
mov
and
stos
inc
or
pushf
loopne
movsl
mov
data16
inc
test
popa
xor
sbbl
xor
pop
scas
inc
mov
inc
loope
mov
xchg
mov
outsb
rolb
mov
rolb
ret
mov
jge
fmuls
jbe
xchg
nop
out
pop
sub
int3
in
sub
mov
or
dec
jnp
xchg
movsl
pop
mov
andb
repz
out
aas
shlb
imul
push
mov
rorl
dec
test
jg
subb
das
jg
or
idivl
in
stc
cs
cwtl
mov
pop
or
stos
ficompl
pushf
fstp
lahf
sbb
and
nop
inc
jns
movsl
fsubrl
or
out
push
mov
test
ds
cmp
cs
cs
repz
or
sbb
mov
pop
popa
fidivrl
outsb
xchg
sbb
mov
addr16
aad
lea
dec
fsubrs
mov
mov
fisubl
dec
push
imul
inc
movsl
ret
outsl
adc
dec
adc
jecxz
in
mov
mov
mov
cmp
int
mov
and
scas
sbb
xchg
xchg
sbb
scas
push
mov
sub
in
and
mov
bound
mov
movsl
adc
std
cmp
popf
cmp
push
lods
mov
fldl
jecxz
jns
pop
mov
js
inc
stos
insl
and
mov
mov
adc
jecxz
repz
or
sbb
stc
push
stos
xchg
mov
cmp
in
jg
fdivs
leave
mov
or
sbb
hlt
or
mov
mov
adc
cs
les
xchg
lds
sbb
lahf
xor
daa
xor
rcrb
fisttpl
test
jmp
lahf
bound
sbb
in
movl
pop
xchg
daa
push
xor
mov
cmp
rol
mov
arpl
movsb
mov
mov
shr
cmp
ret
or
lret
push
insb
cmovb
dec
bound
adc
sbb
jecxz
sub
dec
push
cld
sub
lock
push
or
dec
in
jecxz
std
loope
xchg
inc
loopne
jecxz
repnz
movsl
imul
rcll
fcomps
sbb
rolb
xchg
jae
out
xor
xor
mov
xor
jle
mov
pop
out
jmp
inc
dec
dec
mov
inc
cli
and
pop
movsb
dec
add
and
xchg
inc
stc
or
xorb
cmpsl
push
sub
mov
aam
iret
int3
jge
or
and
loopne
xor
arpl
sbbb
loopne
incb
sarb
nop
jb
mov
push
fbstp
inc
sbb
int3
ficoml
icebp
mov
fadds
xlat
sbb
cmpsb
jae
add
xlat
cwtl
scas
and
jbe
clc
dec
mov
xchg
in
fisttpl
xchg
loopne
jg
roll
ds
std
mov
fcoms
push
pop
pop
jno
lret
ljmp
in
lds
ret
inc
sti
xchg
js
fldt
mov
pusha
inc
adc
sbb
scas
imul
mov
xchg
jae
ja
negl
sub
adc
cmp
outsl
cmp
fsubl
dec
outsb
dec
xchg
inc
das
mov
jae
jg
xchg
mov
ds
stos
out
outsb
push
arpl
add
lret
addr16
cmp
fiaddl
jae
sti
lds
insl
xchg
pop
mov
call
lea
push
ret
sbb
and
jge
sarl
lock
rcrl
call
test
das
pop
pop
loope
inc
cltd
rcll
shrl
pop
outsb
cwtl
dec
mov
call
add
je
fbld
js
jle
paddq
sti
sub
add
shlb
es
or
pushf
in
lahf
lods
jae
jnp
pop
jns
ljmp
xchg
test
popf
inc
dec
out
popa
adc
pop
icebp
xchg
movsl
or
fdivrs
dec
mov
dec
add
pusha
xor
pop
jg
loopne
jle
sbb
popf
inc
stos
sbb
in
sub
cmp
ss
insb
sub
inc
pusha
daa
lret
mov
loope
inc
je
pushf
mov
lods
mov
lods
or
ss
es
jb
dec
ret
jb
mov
push
dec
fistpl
sub
mov
jle
insl
adc
lds
add
jne
adc
xchg
popf
das
sbb
in
push
outsb
mov
sbb
mov
mov
repnz
adc
xchg
adc
cmp
dec
push
popa
int
loop
filds
lea
scas
jmp
inc
mov
or
xor
mov
mov
xor
call
add
xor
push
stos
and
lock
push
and
enter
nopl
sbb
jl
test
mov
fucomi
hlt
sbb
aad
in
dec
mov
aam
sti
pop
jp
ljmp
jo
or
bound
xchg
imul
cmc
ror
out
mov
xor
pop
arpl
xchg
push
popf
clc
mov
shlb
xchg
leave
jo
and
xchg
adc
pop
imul
add
xchg
mov
lock
mov
test
imul
inc
aaa
sub
xor
sbb
and
sbb
in
or
daa
jmp
mov
adc
dec
lcall
inc
mov
out
add
js
hlt
fimull
mov
fmulp
xorb
mov
bound
out
adc
fdivl
cmpsb
push
maskmovq
notl
add
push
or
mov
negl
mov
arpl
test
adc
add
daa
sub
nop
dec
adcl
mov
mov
xlat
add
test
push
mov
ss
xchg
dec
lds
pop
push
xlat
sarl
dec
testb
mov
jg
testl
out
lret
push
mov
dec
add
aaa
outsb
adc
push
or
ficoms
mov
push
pop
cmp
push
pop
js
sub
lret
push
ret
push
push
addr16
inc
sti
int
adc
in
ljmp
lret
push
and
repz
cmp
sbb
iret
dec
repz
xchg
fists
popf
daa
xor
imul
cmp
aas
xchg
jne
js
outsl
arpl
roll
cmpsl
pop
testl
imul
lods
cmp
adc
leave
fildll
stos
lock
adc
nop
mov
and
jl
das
mov
aaa
cmp
sahf
rorl
or
jle
aam
cmpsl
cmp
lock
xor
cmc
push
cltd
sbb
jl
and
ficoml
test
sbb
sub
xchg
psrlw
sub
sti
inc
lods
inc
loop
aam
dec
sbb
inc
mov
pop
bnd
pop
add
popf
sbb
imul
pop
das
movl
das
aaa
shll
add
xor
add
xchg
data16
mov
jl
mov
lea
mov
insl
into
in
xchg
jbe
jp
mov
ja
mov
or
in
stos
inc
mov
jl
sbb
fdivr
sub
xorb
sub
sbb
cmp
cmp
test
call
xchg
js
in
iret
bnd
add
xchg
and
shr
repnz
test
cs
out
cmp
std
xor
movsl
jl
cmp
test
adc
daa
pop
xor
mov
sbb
call
xor
arpl
sahf
dec
mov
in
outsb
or
adc
and
or
xchg
pop
jno
daa
aam
pop
adc
mov
and
mov
mov
dec
and
pop
testb
mov
sub
icebp
lock
popa
or
jb
mov
int
in
ds
orb
in
loopne
xor
ljmp
xor
fwait
pushl
sbb
pop
add
repz
outsb
fwait
std
xchg
loop
xor
mov
jo
inc
jmp
jne
shll
mov
or
adc
lods
dec
mov
popf
mov
xchg
jg
cmp
sbb
mov
mov
fiaddl
scas
cmp
hlt
dec
push
addr16
cmc
daa
mov
in
dec
inc
push
lock
xchg
push
adc
ret
out
add
sub
dec
push
jecxz
test
mov
push
mov
mov
scas
fldl
jecxz
test
jecxz
adc
decb
jne
js
lret
test
mov
mov
movsl
cmp
ret
pusha
roll
mov
dec
pop
cli
in
push
stos
outsb
rcll
shlb
mov
sub
roll
sub
lods
pushf
add
orl
pop
dec
xchg
sbb
loop
dec
clc
or
xchg
fwait
push
adc
aam
scas
pop
jmp
int3
jae
iret
repnz
ret
mov
or
cmp
inc
inc
ud0
push
mov
pop
fs
bound
adc
inc
das
call
sbb
and
xor
or
mov
jae
jecxz
jno
mov
and
add
dec
sbb
pop
clc
adc
std
xchg
mov
fildl
pusha
addr16
cmp
movsb
add
scas
cmp
fwait
leave
loope
sub
cli
mov
mov
mov
pop
push
out
pusha
pusha
data16
call
enter
mov
in
bound
test
cmp
mov
in
imul
cli
and
stos
testb
andl
pop
ljmp
lcall
cmp
push
ret
mov
mov
mov
test
jnp
add
sub
test
nop
push
outsl
sbb
fdivr
inc
add
sti
pop
test
int3
pop
push
scas
dec
arpl
dec
xchg
cmp
ja
ficoms
cmpsl
mov
out
or
out
add
adcl
fisttps
outsb
shrb
fistpl
xchg
in
outsb
xchg
cmpsb
rcll
and
je
ret
jle
xchg
xchg
bound
cltd
lcall
push
out
or
xchg
gs
jmp
out
lahf
jmp
cmp
mov
movsl
cmp
push
orb
aam
dec
mov
adc
nop
rclb
adc
adc
push
pop
clc
push
lds
dec
push
add
xor
pop
or
addr16
mov
pop
add
fcoml
mov
je
scas
pusha
pop
das
mov
mov
sbb
and
mov
xchg
cmpsb
enter
and
stc
loopne
mov
xchg
jo
xchg
sbb
es
stos
int3
mov
mov
icebp
or
fimuls
or
lret
xchg
scas
pop
jl
jne
movb
mov
lods
icebp
cwtl
mov
aaa
xchg
loope
popa
xchg
movsl
js
cmc
push
jmp
mov
sub
movsl
jmp
adc
test
cmc
arpl
push
or
add
inc
adc
fsts
and
pop
fidivrl
mov
or
push
in
pusha
js
mov
adc
jo
push
dec
xchg
lods
test
add
lcall
lock
push
loopne
test
int
nop
sub
mov
xor
call
mov
mov
shl
add
fidivs
push
aas
mov
sarl
shrb
xlat
inc
loop
call
jns
imul
ja
pop
in
jle
fsubs
add
jle
cld
mov
pop
filds
inc
mov
lea
mov
add
int
jne
rorb
cmp
mov
jp
loopne
stos
jp
add
lock
int
into
inc
adc
sarb
and
aaa
fs
inc
and
mov
xchg
les
xor
imul
scas
push
into
es
xchg
xchg
ja
shr
iret
in
lods
out
fwait
mov
aam
out
jge
cli
repnz
fadds
adcl
aam
fistps
in
out
rolb
gs
sbb
lcall
and
stos
xchg
clc
jl
jp
outsb
roll
pop
mov
pop
push
ljmp
jg
icebp
js
roll
ljmp
lods
clc
cmc
ss
xor
popf
cmp
scas
mov
jle
xor
dec
test
out
adc
test
jge
adc
imul
or
add
mov
mov
icebp
xchg
std
pop
lea
cmp
or
or
int
jb
adc
fstl
cld
scas
nop
out
fldcw
mov
mov
int
daa
shrl
ljmp
int
xchg
dec
shrl
mov
fdivs
loop
mov
jno
imul
mov
sahf
insl
or
jnp
cmp
dec
in
jp
outsl
xor
push
fwait
into
outsl
enter
ja
jnp
push
sahf
bound
testl
aas
sbb
in
ret
xor
test
sar
in
enter
xor
lock
or
jle
pusha
and
scas
int
xchg
fsubs
arpl
push
adc
jbe
mov
jg
xchg
ret
and
jge
sub
xchg
adc
mov
aas
rcrb
mov
fidivl
pop
lods
push
mov
pop
loop
mov
or
adc
lret
push
cmpsl
dec
scas
dec
dec
mov
scas
sti
outsl
dec
sbb
mov
filds
fistpll
js
rclb
les
mov
push
sub
fadd
xchg
ja
in
dec
sub
sub
xor
fstps
sub
pop
sbb
es
js
pop
xchg
aaa
cltd
sbbl
lds
adc
dec
into
add
adc
jbe
outsb
cmpsb
es
jg
outsl
or
sub
push
icebp
fwait
jg
pushf
lcall
xchg
int
sbb
out
jle
xor
mov
aaa
mov
icebp
addr16
xor
mov
xchg
push
sbb
mov
jecxz
loope
xor
sarb
in
imul
cmp
mov
inc
adc
call
ror
inc
addr16
sub
fcompl
inc
xchg
and
xchg
push
ret
test
scas
icebp
aas
mov
pop
andb
xor
mov
add
push
inc
cmp
fwait
loopne
mov
pop
sti
les
out
adc
in
cmpb
pop
mov
adc
test
leave
lcall
lcall
andl
xor
nop
push
mov
xor
jle
pop
popf
insl
roll
sbb
outsb
dec
adc
inc
jnp
clc
jae
add
pop
imul
sahf
push
jb
out
hlt
add
xchg
decb
cli
or
imul
xchg
sbb
test
push
adc
inc
cmpsb
je
nop
mov
inc
pop
lcall
lcall
inc
jno
pop
sub
pop
insb
xchg
xor
mov
mov
and
cltd
bound
inc
dec
mov
jb
shrl
inc
mov
dec
js
popa
add
mov
xlat
je
test
hlt
into
pop
mov
xlat
pop
or
cmpsb
mov
fisubs
aad
in
loopne
mov
jl
dec
push
mov
jmp
cmp
in
fldenv
pop
xor
stos
pushf
lock
adc
xchg
mov
mov
loopne
inc
outsl
dec
sahf
insl
cmpb
ret
dec
pusha
sub
sbb
popf
push
ja
cli
popf
pusha
bound
add
imul
and
and
ds
push
or
mov
into
aad
mov
or
js
jle
fcmovnbe
mov
pop
or
xorl
mov
pop
mov
int
mov
lods
ds
mov
cmc
mov
sub
or
push
aaa
pusha
cs
mov
sar
add
in
rcll
sub
jnp
sub
push
dec
mov
dec
mov
fidivl
sbb
dec
cmp
push
mov
data16
cli
mov
mov
or
xor
and
mov
jle
lret
xchg
ss
in
icebp
fldl
pop
jns
dec
xchg
cmp
addr16
xor
insb
xchg
cmp
or
les
inc
xchg
inc
cwtl
in
mov
insl
out
push
insl
pop
testl
hlt
jno
dec
inc
shrl
dec
push
jecxz
mov
push
jae
dec
xor
notb
jge
mov
nop
mov
int3
mov
insb
scas
jns
mov
pushf
jnp
fwait
pop
hlt
out
push
cmp
mov
aad
lret
test
push
push
push
jp
dec
add
in
and
dec
scas
add
inc
jbe
push
mov
ds
popa
and
push
xchg
sub
sub
push
sbb
stos
push
xor
add
jle
xlat
add
es
push
les
jg
jg
arpl
push
inc
pushf
or
jg
out
loopne
mov
frstor
je
testb
xor
or
sbb
sbb
inc
leave
ss
pushf
xchg
std
data16
jae
sbb
jmp
sub
lcall
pop
lods
out
mov
movsb
adc
data16
arpl
add
loope
inc
adc
push
pop
adc
mov
pop
mov
sub
in
jb
mov
jns
insl
jp
outsl
sbb
jbe
loop
sub
mov
mov
mov
cmpsb
mov
ret
sbb
xchg
loop
cmp
test
or
imul
mov
stc
cmp
add
dec
fs
dec
int3
ficompl
sub
sbb
adc
adc
sbb
jp
dec
xchg
push
lds
fcmovne
xlat
aas
out
sbb
adc
outsb
mov
jne
and
dec
cltd
mov
cmp
jne
adcb
lods
in
jnp
loope
movsl
aas
mov
imul
gs
push
mov
xchg
mov
push
mov
lea
cmp
sbb
ljmp
mov
mov
xchg
out
sarl
xchg
or
daa
outsb
loop
repz
out
sub
lock
inc
or
movsl
idivl
cmp
jl
lods
cmp
orl
cmc
xlat
test
insb
repnz
insb
xlat
addr16
dec
int3
sti
pushf
jnp
mov
sbb
daa
das
push
push
pushf
dec
iret
jo
and
aaa
fidivrl
lods
xchg
adc
test
lret
cmp
jns
je
popf
icebp
and
mov
jge
jnp
mov
sbb
mov
jmp
adc
arpl
dec
adc
add
ja
lret
push
mov
cs
and
pop
addr16
jbe
and
jnp
inc
ja
stos
lds
or
test
xchg
call
push
mov
xchg
bound
repz
sub
lahf
test
dec
push
and
pop
mov
cwtl
dec
dec
test
lods
or
sahf
stc
fsubl
pop
test
jecxz
divl
loope
mov
jge
and
rol
xor
and
es
lret
cmp
xchg
inc
xchg
hlt
lahf
cmc
out
ljmp
jnp
jnp
adc
mov
inc
mov
pop
jo
or
pop
nop
mov
call
dec
lds
push
inc
jle
mov
sahf
addb
cwtl
jno
js
push
popf
testb
cmp
inc
stc
push
lods
pop
daa
xor
cmpsb
pop
outsb
xchg
or
jl
stos
mov
out
test
pop
lret
xchg
jae
mov
and
ljmp
cmpsb
sbb
push
xor
mov
pop
cmp
add
sub
je
mov
fdivl
in
in
stos
adc
addr16
int3
and
and
inc
fdivr
jbe
ljmp
mov
xchg
fsubrs
aas
jmp
push
stos
loope
outsb
cmpsb
lahf
fst
sub
push
lahf
sbb
jl
lcall
sub
mov
sbb
cmp
loope
xchg
sbb
inc
pushf
jmp
test
and
cmp
fldt
cmpl
jae
add
jl
add
fstps
in
push
mov
and
or
xor
es
inc
cmpsl
pushf
fildl
test
inc
cmc
addl
pop
movl
and
ret
inc
test
in
pusha
mov
das
mov
or
dec
nop
xchg
push
xor
push
xchg
or
adc
out
into
out
pop
call
and
mov
push
adc
pop
test
adc
cmp
fidivrs
pop
jo
inc
aaa
sub
dec
push
sub
das
and
imul
add
cltd
mov
arpl
out
sub
or
jp
test
inc
mov
add
or
pusha
sbb
sbb
pop
inc
dec
data16
movsb
jnp
mov
out
mov
sbb
fdivrs
testl
orl
in
repnz
call
dec
add
adc
xorl
or
aad
add
jo
stos
addr16
pop
xor
rorb
mov
jle
inc
mov
pop
jg
cwtl
mov
bound
shrl
mov
setno
pop
rcll
rcrb
dec
sbb
hlt
dec
mov
jbe
add
outsb
push
mov
loope
arpl
imul
addr16
dec
cmpsb
or
fcoml
sub
mulb
mov
leave
gs
cmp
shlb
xchg
popf
inc
aaa
or
and
and
push
mov
pop
xchg
adc
leave
pop
out
repz
out
push
addb
mov
dec
mov
sbb
jbe
cmpsl
loopne
int
dec
jle
into
icebp
adc
push
pop
pop
xchg
inc
push
jl
scas
fptan
test
subb
push
sbb
sbb
pop
addr16
push
fwait
jae
adc
jns
adc
lret
fs
sbb
and
pop
dec
push
mov
sbb
pop
push
shlb
in
cmp
outsl
cld
std
or
push
int3
dec
xor
test
cwtl
lret
xlat
clc
sbb
scas
xor
xor
jns
jl
pop
int3
mov
mov
sahf
cmpl
daa
imul
sbb
sahf
cmp
mulb
pushf
sbb
xor
or
xor
shlb
jae
movsb
je
icebp
or
mov
mov
sbb
xchg
jbe
sahf
fdivrs
dec
movsl
push
cmpsl
ret
sbb
repz
sub
jp
mov
out
aam
mov
xor
gs
dec
push
add
retw
andl
mov
pop
sub
inc
push
adc
push
mov
mov
sti
push
fdivr
dec
out
cmp
popa
or
orl
mov
incb
push
mov
jecxz
daa
push
dec
adcb
adc
jae
sahf
popf
ja
pushf
cmpl
mov
mov
xchg
lock
add
jnp
orl
fsts
daa
pushf
and
xor
mov
adc
sbb
mov
pop
jge
lock
pop
cltd
mov
lret
rorl
clc
pop
into
or
jecxz
sbb
lahf
js
xchg
imul
sarb
pop
add
jb
inc
jecxz
dec
test
push
jl
or
xchg
cli
adc
cwtl
xor
testb
sbb
pop
fidivrs
jns
sub
push
shlb
cs
sub
mov
lret
sbb
bound
shl
pop
xor
mov
mov
xlat
test
cmc
dec
sbb
iret
inc
or
mov
in
jmp
lret
sbb
mov
popf
xorb
mov
dec
aas
mov
fistl
imul
sub
ret
mov
inc
pop
jb
xor
shl
cwtl
cmp
sbb
pop
cmp
push
sahf
fisubl
cmp
mov
je
bnd
ds
out
icebp
loope
ffreep
test
aaa
aad
scas
push
push
jbe
aas
sahf
pop
add
add
xchg
xchg
xchg
lret
repz
adc
and
inc
negl
lods
mov
addr16
xchg
bound
ljmp
push
scas
mov
test
cmpsl
test
push
in
push
adc
inc
cli
dec
jo
mov
cmp
ja
mov
roll
cltd
xor
xor
dec
or
rcrl
cmc
sbbb
pop
or
pop
sbb
add
and
testl
test
cltd
adc
outsb
sub
mov
rcrl
mov
or
in
les
cmpsb
mov
xchg
lock
and
jae
insb
enter
flds
fldenv
lods
jns
adc
and
jns
into
mov
cmpl
es
lcall
movzwl
mov
jbe
mov
aas
xor
xor
lcall
pop
or
fldt
mov
add
xor
icebp
lock
jmp
push
mov
dec
and
imul
inc
jo
lea
adcb
and
ret
stc
xchg
repz
loopne
pop
dec
mov
and
test
repz
and
cmp
cli
cltd
pop
mov
test
xchg
inc
shlb
fwait
ds
push
mov
push
pop
in
scas
lret
std
ret
mov
movsl
xor
cmpl
sub
fwait
mov
test
push
or
mov
les
into
xchg
inc
add
insb
push
loopne
jl
pusha
inc
add
cmc
pop
rorl
pushf
hlt
push
movsl
sbb
sub
fdivp
cmc
push
fisubrl
frstor
inc
cli
iret
test
imul
jo
lea
pop
sahf
fimull
jae
scas
stos
aaa
lock
sbb
adc
lcall
or
xchg
je
fbld
sbb
rorb
lods
aaa
mov
lods
lods
outsl
ds
add
popf
pop
sbb
fisubrs
pop
sub
int3
adc
adc
neg
cmc
jns
rorb
fisubrs
daa
jecxz
aas
pop
inc
sub
push
push
lcall
jl
clc
pop
or
push
xchg
cmpsl
loopne
shlb
es
ds
inc
add
jb
into
nop
or
or
jle
push
mov
pop
inc
and
fucom
xor
inc
sub
add
mov
pop
in
out
push
das
cmp
mov
jl
lods
mov
xor
aas
stos
inc
push
mov
add
int3
arpl
pushf
xor
adc
inc
dec
mov
dec
das
cmp
lret
push
xor
stos
jo
xchg
push
jae
xchg
out
mov
int3
pusha
push
movb
out
inc
test
add
push
insb
fwait
test
dec
insb
mov
sub
fistps
and
pushf
pop
sub
popf
aad
int3
xor
jbe
cmp
mov
sbb
xchg
add
xchg
jg
mov
ss
ss
popf
adc
cmp
xor
loopne
mov
xor
das
addl
pop
fistpl
mov
adc
test
fildll
jns
jae
pop
leave
pop
or
aaa
or
push
push
push
repz
xor
or
jmp
leave
inc
jg
push
xchg
mov
dec
out
mov
sbb
xor
jmp
xchg
lods
mov
adc
lahf
mov
or
hlt
ljmp
inc
pop
xor
jo
es
push
cmpb
xchg
jbe
or
inc
insl
pop
xlat
shlb
dec
sbb
push
xchg
mov
xchg
outsl
xor
pop
andb
loopne
sub
lods
push
aad
in
jo
popf
adc
sbb
push
sub
mov
in
sbb
and
pusha
xchg
imul
mov
jle
inc
orb
movsb
ret
cmpsb
shll
jbe
aas
inc
mov
std
mov
sub
jns
cmpsb
test
jmp
outsb
xor
leave
mov
xchg
dec
cmc
out
scas
cltd
iret
ret
addb
push
add
mov
cmc
orl
mov
jmp
js
xchg
sbb
push
daa
sub
add
xchg
sbb
shll
jl
push
mov
sub
dec
inc
cmp
pop
mov
ret
inc
adc
push
mov
shl
data16
push
jecxz
pop
fcomp
cld
je
cmpl
add
fisubl
in
out
test
adc
inc
mov
loop
add
rorb
rolb
push
daa
mov
int3
jo
jb
pusha
loop
xor
ret
jns
cmpl
movsl
jle
pop
lahf
popl
out
lds
into
sbb
pop
clc
dec
or
fsubs
addr16
imulb
scas
mov
in
add
ss
cmp
xchg
cmpsl
pop
cmp
gs
fidivrl
sbb
pop
mov
fisttpl
sbb
test
daa
cmc
int3
loop
cwtl
les
pop
add
and
cs
inc
and
sbb
into
fmul
or
push
ja
pop
lcall
jne
sbb
sbb
stos
enter
mov
into
lahf
sub
lahf
sti
scas
loopne
dec
in
jmp
mov
stos
sub
es
mov
cmp
sbb
mov
lahf
sub
push
pusha
adc
lret
xchg
jb
mov
push
jg
cmp
ja
aas
adc
rcll
std
push
or
sub
fsts
hlt
add
fbstp
mov
movsl
sbbb
sub
or
fld
dec
push
jl
adc
fimuls
ds
adc
pop
jecxz
or
nop
xorb
repnz
sub
in
dec
push
dec
dec
push
inc
xchg
mov
je
and
cmp
faddl
mov
int
leave
inc
mov
mov
push
in
jbe
push
and
push
fcmovb
outsl
push
xchg
addl
mov
gs
add
mov
daa
adc
in
jecxz
jmp
mov
add
cmp
aam
cli
mov
stos
mov
lock
test
fistpl
mov
push
cmp
pop
out
push
adc
inc
les
sub
mov
pop
push
cmp
cmp
fisttpll
clc
xor
sbb
lret
xlat
mov
mov
test
ljmp
in
sbb
out
ret
call
mov
out
mov
outsb
stos
cld
inc
mov
test
das
add
jg
push
xor
cli
mov
mov
cmp
adcl
lret
int3
jle
fwait
mov
mov
pop
ljmp
cmp
add
pop
and
in
mov
mov
dec
push
sbb
ret
inc
or
mov
bound
cmp
out
andb
jo,pt
jecxz
pop
lock
mov
jp
mov
lea
xchg
add
mov
inc
xor
mov
imul
lds
fildll
and
cmpsb
mov
inc
popf
add
jl
push
aas
aam
xor
out
mov
out
out
lds
mov
out
in
push
lds
pop
test
ret
jns
sbb
out
repnz
jp
shr
lret
mov
mov
out
sub
xor
or
jne
mov
mov
push
pusha
pop
inc
cmp
mov
jp
stc
les
push
jmp
test
outsb
movsl
inc
cmp
test
orl
dec
adc
push
dec
mov
jbe
lcall
cmp
pushf
mov
or
testl
or
test
in
lcall
fisubrl
or
jne
pop
stos
jne
sbb
adc
and
ljmp
xchg
popa
cli
lods
jmp
xchg
ljmp
sbb
and
jecxz
or
clc
mov
mov
mov
mov
dec
sarl
xor
jbe
aam
cmp
pop
jo
xchg
orb
pusha
sahf
iret
push
push
mov
xchg
pop
sub
pop
dec
sbb
repz
inc
mov
pop
cmp
sbb
mov
insb
xchg
push
scas
pop
rcll
gs
jbe
pushf
lea
push
inc
js
cmp
xchg
xlat
int3
iret
push
xor
enter
insl
mov
push
orb
push
js
xchg
sbb
lcall
mov
sub
hlt
mov
adc
pop
adc
adc
adc
push
dec
in
push
adc
lcall
add
mov
jle
loope
insl
scas
ja
movsl
cs
fisubrs
call
enter
push
push
xor
jg
push
sub
adc
push
push
aaa
repz
and
mov
hlt
add
sbb
jb
loopne
push
es
xor
pop
mov
push
and
mov
hlt
ret
mov
adc
inc
cmpsl
pop
iret
aas
adc
xor
movsl
mov
xlat
push
imul
out
std
fbstp
dec
rol
js
clc
stc
sbb
cwtl
cmp
inc
mov
or
cmc
mov
dec
jp
adc
ss
sbb
add
insl
sub
push
cwtl
repnz
add
popf
sbb
jg
rcrb
into
data16
loope
in
sub
mov
rcrl
add
rorb
jbe
loopne
sbb
cmc
lret
lods
test
int3
lds
jmp
sbb
pop
xlat
jp
or
sbb
sti
fwait
jb
pop
cmp
sbb
imul
xor
xor
bound
mov
push
push
xchg
cmp
adc
cmpl
jle
loopne
sbb
cmp
les
out
sub
pop
adcb
add
inc
rclb
sbb
adc
cmc
test
popa
or
mov
push
ds
sub
xchg
loop
push
cs
jns
mov
fildl
pop
add
loopne
adcl
mov
mov
movsbl
mov
pop
call
inc
and
ja
inc
stc
subb
inc
jno
mov
and
fldl
ret
cmp
stos
sti
dec
fisttpll
aam
pop
mov
sbb
xchg
data16
push
mov
je
es
sub
into
lcall
insb
xor
sbbl
cmpsb
imul
mov
cmp
addb
js
sbbb
xchg
aaa
xchg
or
imul
shlb
cli
mov
imul
or
imul
shll
test
dec
outsl
std
cmp
ret
ljmp
outsl
daa
fxch
movsb
out
mov
daa
sbb
xchg
jbe
xchg
pushf
ffree
fsubrl
sub
call
mov
jnp
pop
xchg
xlat
int
test
fisttps
inc
shlb
mov
mov
lahf
adc
mov
push
add
arpl
jnp
hlt
mov
sbb
movsb
aam
gs
sahf
xchg
out
xor
sub
cmpsl
popf
jb
adc
sub
in
movsl
push
dec
or
add
test
mov
and
dec
mov
adc
pop
cltd
sbb
pop
gs
fidivrl
fadds
cmp
aaa
into
mov
out
lds
jo
or
clc
scas
into
jo
push
xor
adc
mov
fcompl
jle
mov
jl
arpl
loop
mov
sbb
je
lds
add
dec
and
stc
push
out
scas
call
jg
mov
rep
sti
push
nop
popl
inc
call
lret
adc
out
in
sub
sbb
or
clc
nop
mov
sbb
push
lds
mov
push
cmpsl
shr
lds
cwtl
gs
xchg
pop
mov
je
push
in
add
aas
cwtl
jg
sbb
clc
lea
jge
out
cld
stos
pop
mov
imul
stc
lods
add
scas
orl
sub
cli
adc
imulb
jnp
mov
inc
mov
xor
push
mov
pusha
daa
push
stc
aaa
lea
fsubrp
push
push
dec
and
mov
pop
fwait
push
imul
and
push
test
xor
xor
push
sbb
xchg
mov
dec
cmpb
cmpsb
lods
lea
xchg
lcall
loope
xchg
push
in
cmp
int3
jbe
stos
dec
dec
and
movsb
mov
add
aas
ss
sti
xchg
jns
sub
inc
stos
cmp
mov
inc
push
outsb
mov
test
rorl
les
hlt
outsb
aam
xchg
pop
movsl
sub
je
into
bound
imul
int3
cwtl
ret
pushf
pop
notl
pop
or
ret
rcr
lock
jmp
mov
pop
dec
int
out
fst
and
inc
push
lret
adc
imul
ds
movntq
shll
js
jle
imul
ljmp
into
int3
adc
add
insb
popf
mov
cmp
ja
adc
mov
push
ret
lret
popf
push
loope
jne
out
xor
jns
mov
fsts
jmp
aaa
xchg
mov
int
pop
stos
cmp
xchg
aam
cmp
inc
xchg
mov
je
lcall
or
xor
mov
fisttps
loope
pop
roll
sbb
divl
dec
xchg
mov
pop
or
and
ss
dec
dec
pop
cmp
outsb
mov
push
out
mov
sbb
sbb
insl
pop
xchg
and
jecxz
jbe
ljmp
mov
dec
mov
push
icebp
xchg
adc
out
mov
notl
cmc
decl
jge
mov
jo
fisttps
sbb
mov
aad
andl
je
push
and
pop
call
cmp
cld
test
adc
imul
sub
push
mov
pushf
loope
dec
scas
scas
pop
xchg
lods
sub
loopne
jae
inc
add
mov
les
pushf
into
adc
or
sti
pop
insb
sub
aas
xchg
inc
mov
cld
out
mov
outsl
ljmp
jg
dec
mov
inc
jle
into
adc
repnz
mov
xor
lcall
gs
in
push
cmp
sti
xchg
sbb
jb
cmp
scas
fcompl
jbe
sub
lods
mov
jns
push
mov
jnp
aaa
sbb
mov
sub
shlb
xlat
cmc
lcall
stc
pop
sbb
loop
fmulp
in
rorl
sub
je
ds
mov
ljmp
and
test
pushf
sbb
mov
xchg
cmp
mov
cmp
daa
lahf
fcompl
sbbb
rcll
mov
out
mov
jo
add
mov
lods
insl
add
lret
sub
sbb
scas
testl
popa
lret
ss
jp
dec
out
mov
mov
addr16
aad
jnp
xchg
sbb
js
add
xlat
rcrb
mov
fsubl
aas
mov
int3
test
jne
mov
jns
faddl
mov
mov
sbb
dec
mov
cmpl
dec
pop
mov
push
or
xor
sub
jb
lret
movsb
gs
cmp
sbb
sub
mov
fistpll
pop
dec
stos
adc
fs
fdivp
ss
int
or
add
les
shl
lret
pop
push
scas
sbb
mov
mov
mov
enter
loop
adc
in
pop
push
jnp
jmp
imul
sbbl
dec
jns
xor
mov
sbb
das
mov
jbe
xchg
jp
scas
jo
xchg
lods
arpl
mov
and
shlb
and
adc
mov
les
push
out
out
ja
xlat
xor
push
scas
sbb
out
cmp
fisttpl
cmpsb
sub
sbb
adc
ss
xor
sarl
and
dec
and
jle
sub
fnstsw
push
cmpsb
mov
jbe
pop
notb
test
mov
pop
stc
leave
sbb
pop
movl
mov
inc
add
mov
pop
dec
fcmovnbe
loop
popa
push
cwtl
cmp
loop
mov
imul
lea
pusha
dec
xchg
scas
add
sbb
pusha
jno
jae
add
movsb
jbe
stc
mov
dec
mov
sub
in
repz
sub
mov
lcall
add
jp
bnd
aam
aad
inc
stc
add
les
mov
outsl
aaa
ss
aaa
push
adc
aad
loop
dec
idivl
shr
movsb
mov
mov
and
add
cmpsb
mov
out
out
mov
mov
daa
fs
lock
in
mov
fstpt
cmp
dec
add
add
inc
in
gs
orb
push
push
inc
fidivrs
jmp
sbb
and
jl
pop
jno
and
add
fdivs
push
fmulp
cwtl
es
adc
sbb
leave
fnstenv
and
std
sub
push
insl
pop
rcll
lods
pop
inc
sub
fbld
divb
mov
cld
movsb
push
les
pushf
sub
mov
mov
jbe
adc
mov
jp,pt
inc
ds
cmp
sbb
shll
out
dec
jnp
mov
loopne
inc
in
push
xchg
mov
insb
ret
pusha
pop
lret
and
pop
push
imul
inc
call
mov
mov
jge
jnp
sub
scas
adc
sub
pop
sub
dec
lea
xor
mov
std
push
xchg
mov
xor
sbb
xor
mov
cld
imul
bound
add
sbb
add
sahf
adc
mov
xor
test
sub
mov
jnp
push
hlt
push
jo
cmp
push
xchg
xor
inc
cmpsl
stc
popl
popl
pop
movsb
mov
outsl
push
push
add
sub
bound
dec
cmp
call
stc
jge
sti
cmp
cmp
mov
dec
lds
insb
lea
cmp
xor
sahf
movsb
int3
inc
mov
jmp
fdivrs
dec
test
inc
push
sbb
xchg
adc
xchg
imul
in
pop
ret
push
sbb
sbb
addr16
jl
repnz
jl
fdivrs
sub
add
out
mov
fadds
mov
fwait
mov
and
in
cmp
or
lcall
push
cld
mov
xchg
sub
push
add
jae
orl
dec
aad
loopne
mov
pushf
push
sahf
sbb
jmp
mov
jg
lret
inc
mov
cmp
xchg
sbb
rcrl
rclb
mov
xchg
test
cmpsb
loop
shrb
test
pop
jne
aad
jge
push
cmc
sbbl
push
gs
jbe
test
test
xor
jno
ficomps
push
call
in
xadd
in
push
mov
fmul
jne
test
mov
sarl
iret
dec
aad
and
xchg
ret
test
outsl
xchg
es
mov
adc
lret
dec
sbb
loop
sbb
dec
inc
enter
imul
cld
dec
mov
sub
int3
out
mov
cmp
jns,pn
xchg
dec
outsb
sub
stos
je
std
xor
out
xchg
inc
pop
push
stos
shll
dec
mov
rcrb
aam
fs
xchg
testb
xorb
xchg
jne
ja
pop
mov
jb
mov
aas
call
mov
jo
mov
adc
xor
pop
push
loope
ds
jno
adc
sbbl
mov
add
pop
mov
push
mov
es
xor
fsubl
xlat
or
stc
jbe
mov
test
pop
mov
in
cwtl
fwait
adc
xchg
inc
loopne
mov
cmp
mov
out
cmpsb
out
cmpsb
mov
pop
addr16
pushf
mov
imul
xchg
test
dec
cmc
fs
ds
sar
in
addr16
ljmp
push
sub
daa
lock
xchg
adc
mov
cmp
sbb
jecxz
push
std
in
jg
jp
iret
jle
mov
jmp
pmaxsw
int
ss
aaa
jae
sbb
lcall
dec
pop
pop
sbb
push
or
enter
push
mov
outsb
sub
dec
hlt
pushf
cmc
mov
jl
or
push
idiv
push
lret
jns
movb
hlt
jg
mov
pop
dec
in
mov
and
jg
inc
pop
fisubs
nop
mov
fimuls
enter
pop
push
fisubl
jmp
leave
test
es
arpl
fbstp
aaa
cltd
xchg
imul
mov
scas
mov
cmc
shlb
adc
imul
sarb
cmp
stos
push
addr16
outsb
xor
sbb
push
scas
inc
pop
pop
mov
dec
dec
lret
sub
in
cld
cmp
mov
call
pop
or
popl
pop
subl
movsb
cmp
test
xlat
call
stos
lods
out
mov
jb
push
out
and
jbe
scas
mov
lods
loopne
mov
xchg
scas
ljmp
ret
cmp
sub
push
mov
jmp
es
testb
mov
data16
jmp
out
mov
xchg
sbb
dec
pop
sub
fbld
lods
insb
lods
jae
addr16
xor
stos
mov
int3
dec
and
adc
push
jne
xchg
mov
add
jae
sbb
mov
test
leave
daa
les
inc
ds
stc
inc
movsl
lahf
loop
xor
xchg
xor
fimuls
nop
enter
push
in
mov
and
daa
stc
push
aaa
push
jo
jno
xchg
adc
cld
xor
addr16
xchg
andb
adc
pop
popf
ret
pop
mov
testl
cs
adc
inc
push
ret
roll
mov
ds
lar
sbb
jmp
push
push
jmp
mov
imul
sub
dec
xor
jbe
iret
les
mulb
aas
push
inc
fcmovb
pop
lock
aas
aas
inc
into
dec
cmc
popf
inc
sub
xchg
adc
xchg
lcall
dec
or
je
sub
mov
cmpsb
and
rclb
adc
sahf
int3
fs
mov
mulb
fstps
test
ljmp
fst
or
mov
jno
in
sbb
and
sti
mov
ja
xchg
mov
shrb
jae
mov
sbb
call
mov
mov
adc
add
adc
pop
mov
xchg
repnz
inc
xor
mov
or
das
fwait
adc
test
dec
push
cmp
out
dec
sub
add
lcall
mov
popf
xchg
push
test
jmp
ret
pop
sbb
lea
jge
popf
inc
ret
pop
jecxz
jbe
fdecstp
xchg
xchg
fs
push
sahf
xorl
sub
cmp
cmp
sbb
out
mov
jne
rcll
mov
stos
and
iret
notl
adc
cmp
cwtl
ret
and
adc
or
jno
repnz
jnp
add
das
pop
movsl
mov
scas
jnp
sbb
lea
aad
mov
or
jp
ja
clc
fsts
movsb
or
cmpsl
dec
nop
sub
inc
pop
mov
xchg
rcrl
mov
dec
mov
cwtl
xchg
mov
xchg
scas
fwait
sbb
and
shll
int
aad
or
mov
xor
aad
xchg
pop
stos
mov
pop
cld
jmp
rcrb
mov
xlat
pushf
sub
xor
cmp
test
lret
xchg
inc
mov
das
xchg
and
adc
or
mov
sbb
jmp
cmpsb
push
xchg
jns
sub
mov
xor
pop
les
lret
and
cmp
mov
pop
shr
inc
cli
popf
in
mov
push
mov
mov
fwait
adc
ljmp
adc
insb
in
add
mov
sub
inc
jns
enter
dec
sbb
cwtl
dec
sbb
jae
shlb
jne
pop
and
out
fiadds
jmp
cmpl
out
lock
xor
cmp
mov
xchg
leave
cli
scas
push
cmp
pusha
xchg
mov
adc
inc
arpl
add
or
pop
shrl
add
mov
or
scas
testb
sbb
xchg
inc
sub
cli
sbb
ljmp
dec
out
sub
xlat
dec
cmc
jg
and
pop
or
adc
les
call
fs
movsl
out
imul
dec
fstl
jge
jl
std
fsubl
fbstp
jge
repnz
scas
adc
inc
fisttps
and
fldt
mov
aaa
push
lods
bound
ljmp
and
sbb
sbb
mov
out
jnp
into
or
in
dec
add
push
aas
xchg
lds
test
cld
mov
or
adc
or
gs
sahf
or
jne
insb
loope
cmp
xchg
pop
imul
pop
push
cmpl
in
icebp
insb
jmp
ror
adc
or
jb
lahf
mov
ret
leave
xchg
stos
rep
into
subb
movhps
addb
lods
popa
fs
add
xchg
xchg
push
cmp
jge
adc
mov
mov
dec
aam
or
das
mov
lds
and
nop
add
xor
sbb
xchg
fs
test
inc
adc
xchg
xor
lea
pop
je
mov
shr
std
fstl
sub
je
insb
fbstp
mov
aas
movsl
jb
dec
lds
lret
sbb
cltd
test
xor
cmp
jb
push
out
outsb
repnz
enter
and
xchg
fdivs
and
dec
fistps
add
sub
das
lds
sub
ja
jmp
mov
ret
xor
gs
adc
pop
pop
fstp
and
scas
add
cli
cmp
mov
les
cmp
xor
idivl
jo
sub
cld
mov
imulb
stos
mov
subl
outsb
push
test
mov
insl
std
and
adc
test
shll
ffreep
jne
lock
lods
adc
aam
pop
out
xchg
mov
dec
in
in
test
in
fld
pop
push
mov
mov
and
xchg
out
int3
in
test
jecxz
adcl
add
cmp
dec
cli
sub
xchg
push
xchg
inc
aaa
or
mov
mov
pop
rcrb
clc
xor
xchg
mov
add
pop
les
loopne
cmp
inc
sub
cmpsl
loopne
lcall
enter
pop
jbe
lods
push
lcall
push
jecxz
mov
mov
push
push
adc
call
push
pop
out
xchg
test
push
ficoms
add
mov
jo
mov
xchg
repz
xchg
lret
ret
icebp
mov
outsl
xor
or
add
cmp
roll
scas
mov
out
cs
int
ss
jae
mov
clc
cld
jp
pop
into
push
mov
out
icebp
daa
sub
fmuls
pop
rorl
sub
adcl
orb
out
sub
xlat
adc
cmpl
scas
into
insl
in
dec
imulb
xchg
imul
add
dec
aam
dec
xchg
adc
iret
cmp
repz
push
fdivrl
andl
jns
out
pusha
repz
gs
sbb
xchg
xor
pop
mov
in
cmp
mov
repnz
aad
js
xor
xchg
pop
out
frstpm(287
outsl
jl
stos
call
pop
push
push
xchg
gs
push
fnsave
jnp
data16
jecxz
xor
nop
lds
movsb
mov
scas
scas
loop,pn
dec
xchg
fadd
mulps
dec
push
outsb
sti
sub
add
mov
and
sbb
inc
jo
cs
xchg
inc
fidivrs
cmp
ja
out
mov
or
pop
insl
sti
adcl
in
cmpb
imul
adc
dec
cmp
mov
fwait
and
jecxz
add
int
outsl
movsl
fwait
push
add
dec
jmp
push
mov
repz
add
data16
push
sub
pop
mov
jmp
inc
ds
pop
addr16
jmp
andb
push
adcb
xchg
popf
cltd
mov
test
dec
ds
sub
fldenv
xor
loope
popf
pop
in
mov
and
push
cmpsb
inc
jp
inc
push
and
pop
mov
mov
pop
sbb
dec
stc
mov
jo
xchg
ss
loope
inc
scas
fisubs
mov
dec
fistl
int3
push
xlat
arpl
jnp
push
pop
daa
test
cmpsb
push
std
sbb
int
lods
adc
out
lret
das
sub
cltd
das
xchg
ret
jbe
out
repz
sub
mov
mov
int
xor
mov
mov
push
xchg
dec
clc
leave
out
adc
in
pop
xor
iret
mov
pop
sub
jmp
jnp
inc
in
mov
and
pop
push
arpl
test
in
aam
movsl
test
pusha
pusha
mov
int
xor
les
cltd
xchg
fiadds
pop
lcall
mov
daa
sub
xchg
lea
mov
icebp
xchg
mov
jecxz
xchg
loop
mov
insl
aam
push
xchg
out
mov
loopne
mov
and
pop
in
jl
in
sub
inc
pop
mov
test
or
push
test
ljmp
dec
sbb
xchg
pop
sub
mov
mov
or
inc
mov
xor
mov
enter
xor
loope
jg
popf
popf
insl
inc
clc
dec
enter
mov
stc
push
notl
sbb
mov
jge
sub
xor
ja
cmpsl
hlt
pop
add
dec
insb
xlat
stc
test
add
and
mov
mov
in
dec
push
pop
push
mov
roll
shr
mov
inc
cmp
pop
loop
xchg
inc
das
inc
push
fldt
out
xorl
js
js
xor
xor
mov
jns
mov
dec
and
shlb
pop
xor
rcr
icebp
lret
add
subl
dec
es
xchg
out
jb
adc
xchg
mov
fs
aam
and
in
inc
scas
mov
sbb
scas
jge
jecxz
sub
xor
test
cli
or
imul
push
pop
or
add
xchg
cmp
flds
repz
dec
loope
cwtl
mov
xchg
int3
shlb
pop
and
sbb
imul
sub
inc
push
jecxz
popf
imul
clc
and
mov
jmp
test
out
xor
push
push
jb
std
mov
mov
dec
shlw
pusha
mov
sbbl
jno
ljmp
lahf
lahf
movsl
test
pop
out
pop
test
add
mov
test
mov
cmc
or
nop
inc
int
daa
push
cmp
fisubrl
aam
lds
fwait
push
jl
push
gs
icebp
data16
cltd
test
and
loop
sub
xchg
dec
cmpsl
fwait
lea
jecxz
or
into
ret
fstpl
push
mov
dec
xor
push
imul
inc
or
mov
imul
gs
xor
inc
in
and
aas
clc
lods
xchg
ret
pop
push
and
es
lcall
das
int3
insb
inc
inc
std
sbb
or
addr16
loopne
idivb
cmp
fldl
sahf
js
scas
xor
pop
sub
xchg
loop
adc
sbb
lods
push
dec
add
std
mov
insb
and
xlat
scas
in
repz
mov
jno
mov
loopne
scas
cmp
subl
and
enter
mov
out
xor
cmp
stos
adc
mov
fdivrl
enter
xor
push
push
push
pop
test
and
cmpsl
shll
inc
cltd
les
mov
das
aas
inc
push
jp
stos
pop
inc
ja
mov
push
inc
and
call
jecxz
in
add
cmp
movsl
insb
pop
mov
stos
repz
jno
cs
in
add
stos
stc
inc
jnp
mov
push
adcl
sbb
inc
loopne
dec
jbe
lret
sub
mov
dec
pop
and
pop
test
dec
jbe
mov
lret
sbb
dec
push
sub
jne
cmpsl
xchg
adc
mov
mov
pop
gs
mov
xchg
xor
jae
mov
aas
inc
mov
and
lock
add
jle
outsl
inc
in
cmp
or
or
push
mov
lahf
jecxz
loopne
xchg
add
push
jbe
mov
mov
mov
sub
and
shlb
loope
or
or
xor
xor
adc
iret
fucom
loop
lahf
test
xorl
jle
xor
xchg
jecxz
int
bound
dec
jg
sub
inc
insl
jmp
xchg
mov
inc
jno
add
xchg
lea
test
inc
arpl
mov
movsb
stos
push
adc
jg
xor
xor
sbb
xchg
sbb
mov
mov
jecxz
in
rcr
into
and
and
jp
xor
cmpsl
cwtl
hlt
sarl
add
pop
mov
jecxz
ljmp
cmp
mov
call
adc
inc
push
mov
xchg
lea
or
jnp
inc
nop
mov
repz
add
les
addr16
sbbl
sti
in
or
cmp
fcompl
push
test
bound
xchg
add
bound
push
lahf
sub
push
fisubrl
jo
mov
adc
xor
lock
jae
fnstsw
bound
fbld
sbb
jg
jo
test
ja
and
sbb
mov
lods
fldcw
cli
test
push
fst
inc
mov
mov
jle
jb
testl
or
rcl
push
test
pop
cmp
popf
popa
in
lret
jge
jmp
fidivl
and
dec
out
shll
negb
cmp
sub
xor
or
mov
mov
jns
push
pop
xchg
mov
stos
fmul
and
outsl
popl
movsl
in
sub
cmp
pop
and
in
clc
mull
inc
in
in
iret
mov
xor
ficomps
inc
xchg
cld
pop
dec
push
imul
mov
dec
adc
add
and
push
aas
daa
loopne
cmpsl
pop
jne
sub
testl
push
sahf
sbb
es
mov
mov
loop
dec
lods
mov
jno
cmp
xchg
cmpsl
push
push
es
ret
aaa
cmc
push
and
push
iret
sbb
popa
mov
cli
push
pop
dec
cltd
mov
mov
pushf
push
aad
ss
dec
and
push
xchg
addr16
cmpsb
cwtl
sub
mov
mov
pushf
cwtl
mov
out
pop
pusha
mov
mov
sbb
pop
adc
jecxz
xchg
mov
stos
fcomip
jmpw
push
pop
loopne
jbe
insl
xchg
add
out
push
cmpsb
loopne
lods
cmpb
push
jl
pop
cmpsb
fisttpl
ja
insb
ficomps
sahf
outsb
sar
repnz
xor
cmpsl
cli
lock
testl
dec
inc
mov
push
stos
test
mov
cld
loopne,pn
fcomp
adc
sub
jg
sbb
int3
dec
lahf
clc
jl
push
pop
lret
jecxz
test
add
push
shll
test
push
jle
mov
std
xchg
add
jmp
orb
mov
or
jbe
lahf
xlat
jne
lea
inc
or
pop
std
icebp
mov
and
jl
inc
shr
lods
call
call
das
or
sarb
sbb
divl
mov
insb
test
insb
adc
sbb
pop
sarl
mov
pop
adc
cmp
sbb
inc
scas
int3
jl
or
insl
sbb
add
arpl
cmp
pop
jmp
fistpll
mov
mov
stos
xor
clc
lahf
ja
lahf
mov
dec
cltd
pop
pop
js
or
stc
sahf
jg
mov
insb
lock
ds
mov
cmp
xchg
sbb
popa
pop
jge
jne
dec
fs
xchg
adc
test
adc
sbb
imul
sbb
pushf
lds
or
cwtl
cmp
mov
test
fildl
aam
fldenv
icebp
outsb
divps
push
scas
inc
and
lret
sbb
stc
imul
int3
in
inc
adc
cmp
dec
ret
lods
dec
add
pop
je
mov
int
out
sub
sub
sbb
jns
mov
sti
add
bound
add
mov
jae
dec
ret
adc
pop
mov
mov
inc
test
cmp
xchg
pushf
jae
xor
xor
lea
jg
stc
xor
das
xchg
out
aaa
int
add
cld
jno
add
les
dec
adc
pop
ror
and
pop
push
lret
loope
cmpsb
add
pushf
ljmp
icebp
test
insb
pop
push
fwait
cmp
je
orb
adc
cmp
fpatan
and
notl
movsl
sahf
pop
fildl
je
add
fnstenv
xchg
lods
sub
mov
fcoml
lret
or
xchg
push
popa
pop
inc
inc
out
mov
ss
dec
inc
dec
movsl
sbb
xchg
cld
loope,pn
sbb
xchg
or
mov
lock
push
fbld
mov
lods
rorl
sub
pop
xchg
out
movsb
push
mov
mov
jo
sub
gs
mov
lock
pop
jne
aaa
shrl
fsubrl
cmp
xchg
jae
aad
sbb
data16
test
push
push
icebp
or
loop
cmp
jns
icebp
jae
aaa
sub
mov
xor
xchg
mov
sub
and
rorl
mov
ficompl
xchg
pushf
lea
rolb
aaa
jae
mov
sbb
mov
jge
jp
data16
mov
or
out
cmp
xchg
divl
lret
imul
adc
lret
inc
mov
push
add
in
sub
negb
or
mov
lahf
daa
negb
insl
adc
jns
pop
push
mov
lods
andb
jae
aad
jae
cmp
jp
ja
or
in
dec
pop
lea
add
mov
cli
mov
sub
cmp
rorb
cli
mov
out
mov
sub
int
les
push
sub
adc
add
fwait
jo
movsl
movsl
mov
push
mov
or
or
mov
aas
sbb
jg
adc
pop
shl
in
scas
bound
aas
cmc
aaa
in
push
ds
or
cltd
push
pop
popf
nop
adc
push
ja
mov
mov
jo
push
mov
or
fcomps
sar
dec
jmp
movsb
sub
inc
inc
sub
lods
imul
loope
fldl
jle
adc
jg
mov
cmc
in
xchg
cmc
sbbl
call
push
loope
sti
les
test
sub
test
aad
aaa
cmpsl
lahf
dec
loopne
jmp
xor
xor
pop
push
movsb
add
mov
icebp
and
adc
lds
xchg
or
push
jne
adc
ljmp
icebp
dec
mov
fsubrs
jne
mov
cltd
mov
repz
in
aam
in
icebp
adc
enter
pusha
mov
sti
sahf
popf
iret
cld
adc
hlt
push
imul
push
add
push
aam
cmc
shrb
xor
push
fldcw
leave
sbb
lahf
ret
ror
and
push
mov
pop
xlat
je
cmp
add
dec
cmpsb
jge
ret
ficompl
jns
cwtl
pop
adc
pop
loope
ret
push
dec
mov
in
insl
in
ljmp
inc
subl
mov
xor
mov
pop
pop
sbb
xchg
out
ljmp
mov
stc
shrl
movsl
ljmp
xor
dec
daa
adc
cltd
mov
dec
push
loope
and
pop
inc
loopne
test
leave
pusha
dec
xchg
nop
test
dec
sub
cli
sbb
insl
push
int
and
aas
xor
mov
xor
lret
and
hlt
inc
fildl
pusha
fcoms
jo
inc
mov
loopne
sbb
pop
movsb
das
xlat
pop
mov
shlb
inc
leave
inc
mov
sub
outsb
addr16
jae
inc
add
rclb
dec
mov
lcall
mov
fucomp
test
and
xchg
cs
out
sub
xchg
xchg
fisubrs
pop
inc
pusha
mov
out
inc
push
ficomps
int3
fbstp
psrlw
ror
mov
pop
cmp
pop
xor
pop
mov
xor
jnp
pop
or
notl
dec
sub
mov
pop
pusha
sbb
cli
stc
fidivl
dec
in
cmpsl
iret
push
pop
push
add
mov
push
mov
cld
idivl
lahf
lahf
pop
mov
imul
xorb
mov
xor
loop
sub
rcrl
jne
jge
jg
xor
roll
test
xchg
or
std
fdivl
xor
aam
cld
fisttps
mov
dec
ljmp
sub
sub
scas
icebp
mov
loopnew,pt
call
out
stos
sbb
mov
xchg
lcall
cmp
xor
fxch
or
loopne
mov
mov
cltd
jecxz
cmp
mov
pop
icebp
sbb
scas
ja
loopne
pusha
sub
loope
in
xor
rorb
icebp
push
fsubs
outsl
jb
je
imul
pushw
call
pop
jmp
jg
adc
movsb
sub
dec
adc
add
cmpsb
imul
out
xlat
mov
and
jne
loope
adc
cld
cmpsb
jecxz
or
sub
testb
cli
lock
pusha
or
inc
jns
rorb
test
mov
and
jmp
push
filds
adc
and
subl
pop
lods
push
inc
out
and
ljmp
fsubrs
les
mov
ljmp
lea
xchg
push
inc
movsl
cld
fisubrs
int3
pushf
aam
dec
ljmp
cmp
clc
daa
dec
aaa
adc
adc
mov
jg
int3
jno
pusha
jb
test
mov
jmp
aam
loop
stc
or
das
adc
icebp
xchg
push
dec
daa
mov
xchg
or
leave
xlat
aaa
pop
fidivrs
xchg
lret
lea
mov
dec
bound
rolb
xor
inc
lods
das
stos
das
inc
mov
stc
les
lods
cmp
add
ja
sbb
fidivs
adc
cmp
in
and
loopne
movsb
mov
into
inc
sub
inc
and
jns
lods
sbb
sbb
cli
insb
jbe
mov
push
mov
dec
inc
mov
mov
push
xlat
fs
sub
leave
test
or
or
xor
fwait
mov
mov
dec
xor
lds
xchg
fs
mov
mov
pop
cmp
addl
and
repz
mov
shl
pop
test
or
mov
sbb
jnp
lret
push
fwait
xor
adc
inc
add
loope
int
es
adc
hlt
push
adc
fcoms
cmp
add
jge
push
loope
mov
into
jmp
jle
ds
fimuls
pop
push
into
xchg
mov
and
dec
fs
mov
fimull
push
mov
xchg
mov
cltd
out
pushf
sahf
cmpsb
jns
jle
int
rorl
mov
imul
xlat
std
insb
lret
cld
and
test
repnz
int3
out
jns
int3
pusha
aas
ror
loop
adcl
mov
dec
pop
fs
loope
xchg
mov
shlb
cltd
stc
or
test
adc
in
idiv
andb
push
sub
sub
imul
jge
and
push
insl
mov
sub
xchg
push
push
mov
jg
inc
cmp
iret
fldl
inc
lods
xlat
fadd
pop
mov
mov
mov
xchg
jae
or
add
lret
jp
repnz
int3
leave
adc
push
mov
scas
stos
push
mov
or
adc
add
sti
out
or
jns
jmp
or
hlt
xor
lock
jmp
pop
xchg
fdivl
or
xor
cltd
and
addr16
int3
inc
xor
push
clc
sbb
je
sub
fisubl
cmpsb
cmpb
xor
or
inc
mov
mov
or
inc
mov
push
add
mov
pushf
cltd
pop
inc
or
sub
pop
xor
push
pop
leave
adc
or
dec
xor
sbb
sub
out
mov
ret
add
inc
pop
ja
mov
add
mov
push
aad
xchg
aam
xor
pop
testl
pop
dec
mov
push
mov
pop
sub
push
daa
in
sti
cld
inc
cmp
icebp
inc
loopne
mov
roll
out
repnz
sub
int3
mov
push
cmp
jge
loop
sub
cld
pop
pop
mov
fs
mov
jmp
cmp
les
pop
pop
mov
jecxz
in
cmpsb
adc
push
bound
sbb
jns
or
scas
dec
cmc
test
inc
cld
arpl
mov
pop
fdivs
pop
inc
cmp
inc
jne
add
vaddsubpd
sbb
adc
lret
movsl
add
fsubl
nop
xor
loop
test
outsb
test
pop
jne
aas
cmpsb
xchg
aam
aaa
xor
lea
cltd
inc
xor
outsb
mov
sahf
aam
or
xchg
xchg
fwait
shl
cld
xor
and
add
pop
and
test
sbb
inc
xor
jmp
jno
dec
popf
inc
lret
jmp
test
sub
ds
jno
call
jno
push
push
lods
outsb
add
jp
shr
jns
dec
add
cmp
pop
push
stc
cwtl
sub
cmpsl
sbb
adc
xor
push
scas
or
mov
jp
shll
inc
sub
sub
js
scas
sub
lret
and
inc
into
dec
inc
data16
pop
fsubrs
mov
lcall
mov
dec
test
insl
je
dec
ja
jns
jb
mov
cmpsb
or
or
lods
fdivs
push
mov
and
xchg
or
lcall
cwtl
test
cmp
xchg
inc
scas
mov
inc
in
adc
inc
sbb
cmp
jecxz
mov
dec
out
sub
mov
sbb
xchg
mov
fcmovne
cwtl
push
sti
adc
pop
lock
lcall
mov
cmp
aas
xor
test
push
rclb
aam
xchg
pop
push
std
aaa
mov
inc
xor
push
xchg
pop
cld
push
shll
mov
mov
adc
insb
rcrb
jnp
stc
data16
int3
mov
dec
and
lods
pop
cwtl
outsb
dec
int3
jl
cmp
mov
mov
ss
arpl
sbb
lahf
in
mov
fildll
sub
pop
xchg
int3
rolb
or
push
inc
jno
cmp
stos
cmp
out
nop
mull
mov
mov
js
inc
aam
outsl
push
inc
inc
pop
pop
shll
push
addr16
ficoml
mov
js
into
pop
lcall
inc
es
faddl
sub
fbstp
test
inc
in
sbbl
cli
inc
mov
mov
cmpsb
mov
xor
mov
dec
loope
dec
mov
add
and
or
dec
sbb
jg
leave
add
insl
movsb
cwtl
jge
jecxz
stc
subl
and
fcompl
jno
mov
cltd
sub
popf
pop
in
or
jne
mov
out
dec
sub
outsl
adc
push
xchg
popf
cmpb
sbb
inc
cmpsb
cmc
or
daa
sbb
loopne
mov
pushl
subl
mov
dec
rcrl
cmc
repnz
dec
push
add
fidivrs
in
and
sbb
push
xchg
jb
push
pop
iret
xor
mov
push
fdivrs
add
mov
fnsave
cmc
xchg
fsubs
xchg
pop
lea
jge
jg
mov
mov
jno
stos
cli
outsb
and
and
dec
mov
or
sbb
arpl
add
cmp
loope
xchg
aam
dec
mov
dec
sbb
pushf
clc
dec
filds
cli
and
xorl
pop
fs
dec
push
mov
xlat
jp
inc
aad
xchg
das
orl
mov
sub
outsb
out
inc
imul
testb
sahf
out
and
enter
jb
test
sub
shlb
test
enter
jne
xor
test
xor
sub
js
mov
sub
pop
imul
in
aam
pop
pusha
clc
dec
jnp
daa
lods
adc
jb
sbb
mulb
pop
jno
and
outsb
clc
arpl
push
xchg
stos
or
jo
mov
xor
mov
mov
mov
icebp
jno
inc
push
add
pop
jmp
mov
dec
aaa
dec
hlt
cmp
inc
stc
fwait
pushf
mov
arpl
daa
test
xchg
jae
and
ja
adc
xchg
jno
lods
inc
cvtps2pi
and
and
cmp
sub
cwtl
jge
sub
or
mov
sub
nop
cmpsb
data16
dec
inc
jne
test
push
push
movb
fwait
cmp
cmp
dec
xchg
mov
adc
mov
ljmp
cmp
mov
sahf
mov
push
rcl
jg
sbb
push
out
xchg
mov
scas
push
jmp
stos
adc
inc
jae
sbb
ds
pop
cld
push
pop
inc
jns
scas
push
adc
add
fstpl
mov
insl
push
push
sub
das
sbb
loopne
mov
jmp
arpl
or
pop
mov
xor
or
arpl
sub
stos
les
push
push
adc
push
sarl
xchg
jae
or
xchg
sub
lock
mov
adc
sub
rclb
std
sbb
dec
cld
test
testb
ds
sub
sub
mov
clc
sub
lods
popl
sbb
mov
out
xchg
mov
mov
out
insl
add
ljmp
and
iretw
jecxz
cs
fisubrl
jmp
fildl
xor
nop
sub
push
push
aaa
sub
sub
mov
movsb
fnstsw
mov
xchg
jl
mov
dec
in
loopne
bound
inc
cmpsl
xorb
jmp
stos
std
adc
adc
mov
and
xchg
push
dec
jge
ss
repz
out
push
outsb
adc
negl
mov
adc
mov
ss
popa
cltd
iret
push
ret
lahf
cmp
jg
lret
lock
jmp
pushf
adc
add
push
push
adc
adc
pop
pop
add
pusha
ds
inc
xchg
mov
movsl
pop
repnz
add
cmp
add
mov
inc
out
push
movsl
push
dec
inc
xchg
mov
out
aaa
sub
and
sub
es
jb
xchg
div
sbb
inc
push
js
fisubrs
xor
sahf
repnz
add
pop
cmp
cs
and
pop
xor
sub
enter
dec
jns
add
mov
mov
test
push
inc
push
sub
in
jg
push
ja
jmp
sbb
pop
mov
test
ret
add
loop
mov
stos
sub
or
push
imul
pop
inc
rcrl
int
xchg
test
or
dec
mov
and
sub
aas
outsb
sub
adc
or
jae
test
pop
outsw
lods
pop
lea
and
cmp
icebp
jae
mov
in
lret
clc
dec
sub
xchg
jbe
mov
das
rorl
rcl
fcoml
xchg
fistps
or
mov
ds
sahf
xor
jl
mov
inc
sbb
test
adc
es
jmp
mov
mov
sub
cmpb
pushf
jbe
pop
xor
or
dec
stos
shll
leave
or
jo
mov
ljmp
mov
sahf
adc
test
scas
sub
ret
mov
jge
fisttpl
cmpsb
inc
jp
xchg
push
sbb
push
dec
inc
pop
mov
fwait
adc
fbld
xchg
shlb
ret
cmpsl
push
mov
pop
sbb
or
aam
adcl
testl
push
in
sub
mov
scas
jns
sub
dec
movsl
out
rorb
inc
or
mov
dec
cmp
mov
jmp
sub
arpl
fistpl
xchg
and
mov
dec
add
outsb
and
and
stos
mov
and
jnp
les
popf
jg
or
push
jge
dec
cmp
clc
jecxz
inc
and
lret
daa
in
jnp
imull
cmp
add
js
cmpsb
cmp
mov
inc
mov
clc
mov
cmp
into
imul
cmp
lea
xor
mov
adc
jns
movb
andl
pop
clc
popa
adc
mov
adc
xchg
sub
or
inc
adc
jmp
mov
mov
mov
lret
or
gs
subb
test
sbb
dec
jb
aad
pop
jo
mov
mov
mov
cmp
aas
aaa
cmp
sub
std
and
and
inc
adc
es
ficoml
inc
or
jecxz
addr16
sbb
or
scas
aas
loop
negl
lea
js
fstp
addl
or
movsl
ror
mov
fisttpl
in
mov
lock
ror
mov
stc
cmp
jb
mov
hlt
cmp
pop
cmp
push
gs
cmp
or
mov
pop
mulb
dec
hlt
xor
add
inc
mov
cwtl
jno
inc
mov
jp
push
inc
stos
jl
lret
clc
dec
jb
mov
adc
mov
cmpsl
mov
int
adc
testl
adc
add
jle
test
xor
into
inc
cmp
lods
filds
imul
push
loopne
adc
repz
push
adc
lods
mov
mov
rcrl
push
lock
jbe
and
cmc
adc
icebp
aas
das
int3
xor
div
pop
xchg
adc
add
adc
or
cmp
mov
jg
push
aaa
add
test
dec
xadd
sub
cmp
mov
inc
sahf
aaa
orl
repnz
imul
mov
loop
pop
in
ret
icebp
pop
mov
int
or
inc
rcrl
ljmp
or
jne
fldt
nop
xor
xchg
adc
sbb
pop
cmp
and
pop
scas
mov
cmpsl
dec
les
cmp
testl
fsubrp
cltd
enter
add
xchg
adc
jg
sti
pop
adc
adc
scas
stc
jmp
or
xlat
add
mov
mov
push
pop
mov
dec
xchg
dec
inc
cmpsb
jo
aaa
insb
pop
mov
jl
lods
fdivrs
mov
push
notb
and
call
cli
aam
and
jo
sbb
cmc
xor
sahf
pusha
jo
mov
inc
cmpsb
fcoms
fiadds
mov
xchg
dec
push
notl
mov
xlat
lods
jne
fisttps
cltd
mov
stos
xor
push
jo
lret
aaa
inc
into
test
pop
cmp
call
inc
add
or
jb
adc
xchg
fcomip
cmc
lds
enter
fstps
scas
inc
mov
pause
cmp
ja
jl
ret
outsb
pop
mov
cmp
mov
sub
insl
test
xchg
dec
sub
sub
iret
sbb
out
inc
inc
das
mov
shrb
xor
xor
dec
cmp
xchg
scas
pushf
movsl
aaa
dec
arpl
pop
sti
sbb
call
icebp
movsl
repnz
lock
and
mov
xchg
and
ret
out
ds
lock
call
cmpsb
pop
mov
inc
xchg
pushf
jno
xchg
rol
mov
popf
jmp
or
icebp
ljmp
mov
cmpsb
pop
daa
add
repnz
xchg
jge
mov
aam
sbb
mov
mov
sarl
out
dec
jge
in
inc
jp
out
hlt
mov
push
jp
add
icebp
cs
jl
push
xchg
scas
mov
rorb
push
fisubs
insl
add
gs
sbb
in
mov
aas
add
jne
mov
jl
nop
and
cmpsb
push
aas
adc
adc
cltd
pop
mov
mov
jmp
mov
rolb
xchg
pusha
mov
mov
cmp
jne
hlt
das
and
lea
insb
mov
call
int3
push
cltd
idivb
xchg
mov
mov
sahf
or
add
rorb
xor
sub
dec
adc
sub
or
jbe
jge
push
mov
in
xchg
jbe
dec
ja
jo
fimull
jb
mov
inc
or
pop
push
jo
cli
loop
and
pop
sbb
adcb
or
lods
push
leave
ret
push
in
dec
jecxz
mov
mov
adc
push
fisubl
push
mov
in
jecxz
sub
subb
scas
cwtl
push
adc
icebp
outsl
cmp
dec
lret
sbb
xchg
neg
pop
push
xor
cmc
cmp
imul
jae
mov
cwtl
push
es
scas
popa
jae
incb
repnz
sub
sbb
daa
loopne
sub
push
pop
rcr
mov
jns
pop
pop
sahf
pop
xchg
das
and
inc
adc
sub
mov
outsb
fimuls
shlb
adc
in
inc
aaa
push
ds
sub
subl
adcb
mov
add
jnp
ficoms
pop
int
mov
adc
test
je
aam
inc
popa
pop
popf
jecxz
adc
movl
inc
inc
cltd
data16
lds
outsl
in
cld
xchg
and
dec
xlat
sbb
cld
dec
fnstenv
roll
repnz
scas
push
sbb
nop
shlb
icebp
out
into
push
cs
rclb
lcall
push
jecxz
or
and
or
in
add
mov
xor
cmpsb
stos
push
pop
jp
jge
pop
and
int
add
inc
lret
fisttpl
test
cmpsl
pusha
xor
fcmovnu
dec
mov
pop
in
pop
adc
mov
test
jno
je
add
sbb
sub
adcl
and
fistpll
jo
mov
adcb
icebp
int3
repnz
cmp
jne
lock
sub
repnz
fwait
adcb
dec
push
std
outsl
jbe
aam
push
dec
adc
cmp
das
test
das
cmpl
cld
js
and
pop
and
adc
fwait
or
sahf
idivl
xchg
jb
cmp
fyl2xp1
push
adc
scas
xchg
roll
repnz
imul
push
or
shll
mov
test
sarb
inc
sub
and
cmp
enter
add
dec
xchg
mov
and
out
rcrb
stos
dec
pushf
std
outsl
xor
jbe
xchg
imul
pushf
xchg
xlat
sahf
into
jge
test
ljmp
sub
int
push
push
popa
outsb
out
or
mov
xchg
scas
sub
int
aam
loope
cmp
inc
jg
test
sbb
mov
add
or
add
and
add
pushf
lds
loope
jp
stos
cld
leave
xlat
fldcw
sbb
cmp
and
push
inc
mov
jne
push
data16
sbb
mov
xchg
jle
js
sub
sarb
lods
xchg
lds
sub
pop
and
xchg
inc
ss
and
pop
dec
cmpl
std
sarb
jp
push
test
jne
sahf
cmpl
add
add
inc
daa
cwtl
xchg
and
xchg
imul
mov
pop
mov
push
sub
std
push
cwtl
int
and
dec
js
mov
xchg
js
sbb
mov
mov
ss
mov
dec
adc
dec
scas
test
stos
push
xchg
stos
mov
insb
or
test
mov
jnp
in
lds
mov
lret
dec
or
mov
stos
std
rol
std
int
popa
cmp
sub
lea
insl
out
dec
jp
pop
scas
mov
sub
xchg
cmp
gs
ret
inc
pop
in
push
mov
mov
popl
mov
or
bound
pop
add
push
inc
cltd
clc
or
inc
popf
cmc
addr16
lods
imul
ljmp
sbb
aas
test
rcl
inc
aad
fcompl
subl
test
idiv
xchg
mov
popf
mov
xchg
cmp
or
and
in
cmc
rorl
jecxz
gs
mov
xchg
mov
and
ret
sbb
lahf
fcomp
es
dec
int
mov
sahf
push
sti
imul
das
sub
and
arpl
adc
xor
add
mov
fidivrl
mov
mov
push
or
push
out
test
dec
adc
pop
call
sub
xchg
in
cmc
cmp
bound
hlt
jmp
xor
mov
stos
lahf
sub
xchg
subl
and
add
ret
mov
sub
add
xor
andl
insb
movsl
shll
test
xor
jo
and
mov
aas
push
andb
cmp
stos
movsl
cmp
imul
add
adc
xor
rep
fdivl
in
push
es
loopne
addl
xchg
aad
mov
push
mov
imul
or
mov
push
push
das
cmp
aad
out
pop
cmp
push
repnz
pop
mov
add
fsubrs
inc
rorl
adc
popa
pusha
rcrl
fpatan
xlat
test
jae
into
mov
enter
leave
or
xchg
into
xlat
shl
sub
rol
sub
xchg
fld
and
loopne
addr16
inc
sarb
rol
in
icebp
mov
jge
mov
xor
test
popa
sub
ja
hlt
push
aad
pop
pop
xor
fidivs
out
das
mov
cld
inc
pop
adc
stos
and
adc
sub
pop
push
out
add
dec
push
push
aas
pusha
scas
dec
mov
out
push
cmpsb
jg
sbb
cwtl
ja
mov
aaa
in
cs
fsub
fsubrl
adc
data16
cs
dec
dec
stos
push
lds
sub
loop
lea
ss
mov
movsl
outsb
dec
mov
in
jg
ficomps
pop
rcl
rcrl
push
mov
add
sub
jo
bound
push
xor
mov
lea
test
and
adcb
sahf
jbe
lds
mov
xchg
les
mov
cli
push
arpl
mov
jmp
loope
aas
add
inc
dec
xor
cmp
out
push
jbe
dec
je
dec
adc
add
cmp
mov
cld
jle
pop
inc
xor
pop
dec
mov
dec
jnp
pop
xchg
iret
mov
pop
jmp
int3
push
rcrb
mov
mov
lret
addb
mov
scas
lret
xchg
xorl
pusha
jns
fs
add
or
xor
mov
cli
xor
xor
shl
xchg
mov
xlat
cmp
push
push
into
insb
and
fwait
into
enter
xchg
cmp
mov
cmp
pop
nop
pop
xor
test
out
test
into
out
flds
stos
sarb
jb
add
xchg
or
or
and
je
or
cmp
stos
or
out
pop
out
ljmp
in
cmp
mov
adc
cs
lahf
sahf
ss
movsl
dec
push
dec
scas
fdivp
inc
fcomps
aam
stos
outsb
adc
mov
clc
jne
and
lahf
and
mov
das
mov
in
test
in
out
scas
loopne
aas
jae
hlt
mov
fcmovu
int
addr16
push
enter
mov
lods
les
xchg
xlat
push
xchg
scas
inc
jbe
and
enter
adc
jbe
lods
pop
shlb
pusha
mov
fidivrl
scas
std
mov
sahf
jo
sbb
xor
cmp
cmp
xor
mov
mov
inc
sbb
and
test
jne
ss
lahf
adc
xchg
sub
adc
pop
jne
jmp
call
sti
xor
jl
jmp
and
jae
aaa
aas
pop
shlb
mov
mov
cmp
in
loop
pusha
jge
lret
xchg
mov
test
xchg
int3
in
xchg
sahf
adc
add
cs
inc
lods
dec
inc
sarb
and
xor
dec
ljmp
mov
lcall
inc
addr16
lods
pop
jmp
scas
sbb
adc
insb
pop
push
adcl
push
stc
inc
mov
mov
mov
cwtl
jle
or
add
push
inc
push
lods
mov
mov
cmp
inc
lahf
dec
ljmp
gs
add
mov
imul
mov
jae
out
cmp
sub
and
mov
scas
adc
sahf
mov
cmpsl
cmp
jo
fstps
push
cmp
mov
hlt
push
in
cltd
inc
out
push
test
rcll
sub
jg
mov
rcr
jae
jns
pop
fdivrl
imul
sbb
aad
mov
inc
imull
xchg
outsb
pop
adc
sti
mov
or
mov
mov
dec
sub
add
mov
int
jae
mov
xchg
ja
mov
add
in
sbbb
xor
mov
push
xor
rolb
sbbb
sbb
add
pop
xor
mov
mov
pop
sbb
cwtl
es
cmpsb
sub
das
dec
sti
and
stos
addb
clc
mov
xchg
dec
nop
out
xchg
in
xchg
adc
mov
lds
sub
imul
aad
pushf
xchg
nop
hlt
and
mov
and
outsl
shld
mov
adc
stos
inc
xlat
std
insl
arpl
xchg
mov
cwtl
sbb
aaa
dec
movsl
icebp
loopne
mov
jg
and
inc
aaa
fcom
out
clc
push
pop
pop
ds
std
loop
cmp
paddw
jb
add
sub
mov
das
dec
jne
xchg
mov
imul
cmp
and
dec
fmulp
stos
mov
pusha
clc
stos
cmpb
or
ud2
push
mov
enter
inc
mov
arpl
mov
jle
dec
and
test
mov
test
test
imul
adc
das
loope
mov
loopne
rcrb
lret
fwait
pop
ret
mov
rcr
mov
and
insl
adc
cmp
dec
arpl
cmpsb
xor
mov
sbb
inc
iret
repz
inc
shll
inc
pop
lret
inc
fdivl
cmp
cmp
stos
scas
mov
leave
vpsadbw
cli
in
es
je
mov
xchg
test
dec
out
sbb
jbe
outsl
imul
mov
mov
adc
mov
enter
push
jecxz
xchg
das
aad
lods
out
nop
stc
pushf
scas
outsb
les
sbbb
stos
adc
cmp
mov
enter
cmpsl
mov
stos
xchg
cmc
rcl
jo
xlat
frstor
pmulhw
out
xchg
inc
jne
adc
sti
mov
xchg
xchg
mov
adc
arpl
sbb
into
jecxz
call
dec
jbe
leave
ljmp
loope
sub
sbb
push
and
fisttpl
xchg
add
lea
mov
xchg
pop
nop
arpl
not
stos
mov
pop
inc
cmc
xlat
imul
mov
sub
icebp
dec
subl
les
mov
jecxz
or
icebp
add
sub
pop
and
push
mov
dec
add
ret
test
inc
jmp
rclb
or
push
sbb
ja
imul
pop
push
jb
mov
inc
mov
ljmp
dec
pop
scas
rcll
imul
loopne
and
pop
bound
pusha
jecxz
loopne
loop
xor
jecxz
shlb
and
jae
add
and
mov
push
sarb
lcall
bound
cmp
cmp
adcl
mov
nop
sub
cmpsb
pop
jl
fwait
or
xchg
std
lock
imul
faddp
clc
pusha
jns
add
add
cmpl
outsb
jbe
je
hlt
add
les
xor
push
imul
adc
pop
mov
pushf
mov
adc
ljmp
add
cmp
ds
inc
mov
out
inc
lcall
enter
pop
cmc
push
inc
cmp
nop
mov
ret
push
fadds
stc
scas
lods
lods
jg
shl
inc
push
mov
pop
sarb
push
dec
mov
repnz
pushf
inc
lret
mov
test
xlat
sti
loopne
add
mov
ds
in
inc
or
sbb
pushf
gs
pop
aad
ret
mov
xchg
pop
adc
pop
std
mov
jo
sub
push
jno
jmp
je
mov
pushf
test
xor
fwait
arpl
mulb
jae
in
mov
xor
scas
or
adc
mov
mov
hlt
nop
aad
and
fldcw
lret
pop
in
cmp
hlt
push
lds
les
ja
add
imul
test
addr16
pop
fbld
jae
popa
cld
or
je
push
and
loope
sub
leave
xlat
stc
bound
pop
xchg
sbb
push
sub
lods
and
xchg
cmpsb
dec
inc
imul
bound
ds
adc
int3
dec
scas
pop
dec
pop
sti
mov
rcrl
mov
out
jp
sbb
inc
adc
lcall
sbb
rcrb
sahf
jg
xchg
xor
cltd
movswl
movsb
hlt
mov
mov
mov
inc
adc
lds
inc
dec
call
dec
cmp
int
pop
popa
add
cmp
push
adc
sub
cmp
scas
lea
inc
into
popf
xor
fwait
cmp
lds
and
mov
xchg
mov
push
xchg
inc
mov
mov
inc
jns
xor
and
ret
push
sbb
mov
cmp
imul
icebp
pop
push
jecxz
cmp
or
xchg
pop
cmc
xor
fcomip
in
ds
in
xorl
add
shl
stc
pop
shll
push
out
out
insb
rorb
mov
cmp
jb
mov
xor
lahf
and
inc
cmc
nop
rorb
pop
aas
xor
lahf
sub
push
sub
xchg
pop
insb
imul
daa
stos
lret
in
pop
loopnew
cs
mov
les
cs
mov
je
and
adc
aam
mov
and
push
lods
and
mov
fnsave
xchg
cmpb
xchg
lcall
xchg
clc
and
or
ficompl
dec
cwtl
cmp
cmp
jge
hlt
dec
adc
nop
xchg
or
imul
rcrb
cmp
jnp
test
sub
enter
shlb
mov
enter
pop
loop
in
scas
div
scas
mov
imul
cmpsl
gs
aam
jbe
dec
or
inc
fs
ds
dec
and
push
mov
xor
mov
push
in
cmp
jb
mov
mov
aad
cmp
jge
mov
mov
iret
push
mov
xchg
int
cmp
lret
roll
je
rcr
sbbl
jne
in
daa
push
push
dec
sti
and
cmp
mov
sub
inc
pop
mov
sbb
pop
test
sbb
sarb
into
inc
ss
sbb
nop
jmp
xor
imul
push
jp
mov
stc
xchg
sub
mov
cld
fisubrl
ja
leave
rol
leave
lods
loope
dec
js
jnp
add
and
ret
mov
and
or
sbb
or
xor
push
dec
inc
daa
sbb
inc
add
xor
push
and
jbe
push
test
arpl
xor
shrl
aas
sbb
hlt
fistps
mov
aam
push
jno
out
xchg
mov
adc
movsb
mov
xchg
dec
sarl
cmp
mov
dec
pop
cmpsl
in
jno
xor
dec
add
jno
fiadds
cmp
repz
inc
lds
in
insl
popa
mov
pop
inc
ret
add
out
xlat
xorb
jl
mov
test
sarb
mov
inc
sbb
xor
lea
mov
cmc
ret
je
in
lods
inc
lea
push
and
or
or
xchg
mov
je
lds
xlat
jmp
push
jecxz
fidivs
xor
jne
sti
andl
insl
cmp
push
lock
inc
ja
xor
cwtl
mov
jmp
pop
int
repnz
mov
push
lret
call
decb
mov
mov
insb
dec
add
cmp
scas
dec
cmp
pop
cmp
mov
cmp
add
int
xchg
das
pop
cmpsb
xchg
js
jmp
pop
mov
pop
cmpsl
mov
cs
int
or
xor
mov
cmp
cmpsl
pushf
jmp
adc
cltd
ja
mov
xchg
loopne
mov
test
mov
std
adc
gs
scas
xchg
push
jo
mov
dec
insb
sub
inc
call
sub
stc
cs
pop
xchg
cmp
mov
sbb
enter
ljmp
pop
or
pusha
or
arpl
xchg
cs
leave
adc
pop
out
sub
cmp
push
cmovg
scas
loopne
cltd
xor
fists
ljmp
sbb
cmp
fsubrs
lahf
mulb
lcall
icebp
arpl
inc
in
outsb
daa
repz
add
adc
sbb
inc
stos
mov
aaa
push
popa
jle
pop
xchg
lea
dec
loopne
inc
pushf
sti
decl
decb
inc
popf
dec
fwait
pop
in
imul
repz
outsl
sbbb
cmp
pop
add
cmp
and
ljmp
mov
pushf
pop
insl
jmp
sub
sub
lret
adc
adc
test
push
add
mov
mov
and
xor
ret
add
fs
subb
andb
cmp
ret
cmp
cwtl
decb
sbb
xchg
jecxz
insb
inc
sbb
and
aaa
movaps
data16
jae
sbb
push
mov
insb
cwtl
ljmp
into
mov
jmp
loop
loop
shlb
es
les
xchg
in
aas
mov
mov
shlb
mov
out
les
inc
jbe
test
sub
xchg
sbbb
testb
pop
bound
jne
call
and
int
mov
push
jne
sub
mov
data16
mov
pop
mov
sahf
push
push
jns
mov
or
clc
clc
popa
les
pop
add
dec
or
idivl
fs
aas
adc
mov
mov
mov
and
push
imul
push
mov
xchg
push
les
popa
fbld
outsb
sbb
jp
pop
lods
in
push
and
mov
lret
jo
stos
aaa
hlt
adc
addr16
std
jge
notb
push
out
fistps
sahf
ftst
scas
das
mov
jbe
dec
stos
out
push
pop
les
lods
mov
ss
dec
movsb
cmp
test
inc
xchg
rorb
je
shl
cmp
imul
xchg
cmp
sbb
incb
and
cmc
or
sti
das
lods
dec
aas
cld
mov
sti
lret
inc
sahf
cld
sbb
push
jl
ljmp
adc
dec
xchg
test
ficoms
and
cli
lods
in
loope
sub
es
mov
cmpsb
fnsave
inc
mov
xchg
lahf
cmpsl
adc
rcr
adc
data16
ffreep
outsb
dec
jl
push
adc
mov
sbb
dec
js
push
jecxz
mov
ss
pop
aad
es
push
pop
adc
xlat
dec
insb
ret
push
pop
sti
fisubl
mov
sub
cs
pushl
add
orl
fs
xchg
push
push
mov
push
sub
hlt
mov
push
pop
sub
ja
push
data16
and
pop
fs
insb
cmpsl
pusha
jne
push
inc
cmpsb
mov
movsl
mov
hlt
mov
jo
mulb
loopne
pushf
aam
rolb
call
addr16
cltd
icebp
xor
movsl
test
pop
inc
cmp
add
enter
aam
mov
mov
add
scas
xor
aam
mov
negl
aam
xor
xor
mov
pop
inc
cld
sub
int3
push
lret
mov
inc
and
test
clc
jo
lock
jp
sarl
bound
jno
push
filds
popa
int3
cmpsb
adc
xrelease
sub
add
aam
inc
jmp
add
dec
adc
in
fsubrl
inc
xchg
xchg
cmp
or
popa
pop
xor
fdivp
outsl
add
push
add
xor
aam
scas
imul
stos
hlt
aaa
mov
sbb
push
mov
loop
mov
inc
inc
test
ja
mov
data16
sub
scas
loopne
jle
or
into
push
dec
mov
jecxz
nop
aad
mov
push
mov
sbb
sub
popa
lahf
xchg
adc
inc
outsl
adc
add
shl
cmpsb
push
insl
or
roll
cwtl
movsl
stc
imul
lret
iret
fcoml
in
fucomi
sub
fimull
mov
inc
icebp
dec
push
cmp
mov
es
ret
xor
pop
rorb
adc
leave
or
jecxz
arpl
dec
xor
adc
push
mov
or
enter
shrl
cmp
xchg
and
insb
mov
fcompl
test
inc
inc
dec
cmpsb
cld
push
adc
fiadds
scas
cmc
call
xlat
and
out
xor
mov
dec
mov
mov
shrl
std
ljmp
insb
cmp
icebp
lcall
repnz
fcmovnu
out
adc
sbb
loopnew
xor
adc
cmp
inc
xchg
add
adc
add
jle
jg
pusha
mov
push
dec
jmp
fcompl
pop
stos
imul
cmpl
fcmovbe
nop
or
sub
inc
push
jg
or
orl
test
mov
xor
adc
sub
push
popa
mov
mov
insl
punpckhdq
cmc
jmp
mov
mov
cmp
inc
mov
xchg
mov
mov
mov
in
dec
xor
mov
ljmp
lods
inc
mov
out
xor
imul
iret
std
mov
xchg
popl
adc
jecxz
mov
sub
cmp
leave
and
or
fstps
mov
inc
push
je
comiss
jae
sbb
push
pushf
cld
not
stos
dec
lock
int3
cmpsb
pop
adc
jge
lods
push
pop
insb
fadds
imul
movsb
xor
popf
xchg
imul
add
adc
rol
mov
fwait
popf
inc
syscall
test
adc
dec
cs
push
rcr
gs
sbb
inc
adc
mov
inc
call
sub
xchg
sub
jo,pt
adc
imul
stos
sbb
loop
adc
inc
fmulp
add
aam
int3
and
ret
into
cmp
or
mov
in
enter
or
aad
jge
jl
push
xlat
in
dec
shlb
xchg
cmp
inc
insl
icebp
je
cli
xchg
xchg
into
cmp
mov
pusha
push
scas
pushf
sbb
movsb
xchg
adc
xor
mov
daa
xor
inc
pop
loop
aaa
xor
mov
leave
outsb
rclb
mov
dec
out
movsl
mov
int3
ljmp
stc
lahf
sti
push
movsb
adc
dec
dec
out
push
xorps
push
leave
push
mov
imull
in
inc
insl
in
loope
xchg
sub
stos
and
jge
sbb
sub
dec
mov
iret
push
insb
xor
insb
sbb
add
sbbl
aam
cmp
mov
cmpsb
pop
mov
call
sbb
lahf
sub
inc
xchg
ret
mov
sub
aad
shll
lods
or
jae
fucomip
jge
and
dec
mov
jb
or
leave
lahf
pusha
and
pusha
or
pop
add
inc
js
jl
sbb
test
and
or
imul
xchg
jns
sarb
gs
mov
in
mov
cmp
lret
popf
mov
icebp
lds
jno
push
sbb
out
ja
and
adc
mov
and
lret
adc
inc
imull
fists
iret
adc
sbb
leave
pop
cli
or
mov
sub
shlb
nop
mov
fstpt
outsb
fwait
sti
mov
xlat
push
imul
push
mov
mov
daa
cmp
cmp
fstpl
cmpsb
pop
and
add
jl
fwait
push
ret
in
push
popa
mov
push
dec
xchg
rolb
xchg
mov
js
cld
dec
push
pushf
mov
jl
clc
or
inc
fsubl
popf
mov
mov
je
and
sbb
enter
mov
inc
or
pop
out
ret
in
lea
into
test
push
sbb
dec
push
ss
or
adc
cmp
gs
inc
aad
and
add
js
and
ret
shrl
js
out
test
mov
cmp
fdivs
jne
push
mov
cmpsl
in
pop
mov
mov
add
scas
ja
faddl
xor
in
pop
and
cmp
das
outsb
fs
loope
and
xchg
add
xchg
icebp
pop
mov
aas
sbb
mov
xchg
mov
dec
movsb
fwait
xor
inc
sahf
mov
xchg
aas
mov
das
js
arpl
sahf
inc
ss
shrd
mov
or
or
inc
in
jb
pop
mov
daa
push
jo
movsl
scas
ja
lock
jmp
xchg
test
cwtl
sahf
mov
loop
inc
push
outsb
xchg
jo
movsb
sub
movsb
push
push
xorb
ja
xchg
rorl
push
adc
fadd
lcall
sbb
and
roll
and
xchg
leave
mov
cmp
inc
pushf
sbb
loop
xlat
or
nop
into
mov
jo
pushf
out
xor
test
pop
xchg
adc
nop
shl
fstpt
sbb
std
pushf
and
mov
xchg
test
nop
imul
sbb
mov
cmp
inc
in
fcom
dec
xor
push
leave
sti
ds
int
fldt
xlat
pop
pop
sub
lds
mov
sbb
leave
jecxz
and
fnstcw
mulb
loopne
fidivs
pop
ss
cwtl
mov
mov
arpl
lock
loop
mov
mov
adc
xor
clc
dec
or
fstpl
arpl
outsl
mov
mov
mov
aad
push
jp
cmp
mov
mov
shl
lods
andb
das
clc
inc
out
iretw
imul
adc
xor
inc
bound
int
inc
sbb
sbb
mov
mov
push
adc
mov
lds
push
lcall
add
insb
sub
das
mov
rcr
sbb
push
popf
cltd
jnp
or
in
punpckhwd
xchg
and
decl
adc
inc
mov
outsb
or
jmp
push
xor
hlt
xchg
nop
sub
sub
inc
shll
notb
shl
dec
pop
lods
sarb
test
fdivr
aam
jnp
fmul
mov
cld
iret
xchg
jbe
push
inc
std
outsb
icebp
dec
fisubl
mov
mov
hlt
lcall
bound
imul
cmpl
sahf
inc
cltd
add
or
arpl
in
loop
in
pop
add
scas
js
mov
fisttpl
or
jle
and
pop
ja
lahf
repz
inc
fs
cmpb
lret
les
ljmp
jle
mov
imul
insb
int3
mov
cli
mov
aad
cmpsb
in
mov
andl
lret
cmp
fwait
mov
cltd
loope
mov
jge
jne
pop
pop
std
in
sbb
or
ss
mov
repnz
cli
adc
cmp
xchg
xor
clc
and
popa
add
test
xchg
mov
fs
outsl
jae
mov
push
xor
pop
outsb
push
outsl
enter
imul
enter
cli
fsubs
sbb
and
lods
mov
add
sahf
test
iret
jl
repnz
mov
jbe
into
subb
mov
lea
push
into
and
add
imul
pop
ret
dec
cld
or
dec
cli
mov
mov
insb
jg
cmpsb
dec
xchg
lea
fbstp
loop
sbb
pop
lods
sbb
xorl
inc
fwait
push
pop
sub
outsb
sub
rcrb
xchg
sbb
repnz
jb
cmp
inc
add
fwait
push
mov
pop
pusha
fcompl
xor
xor
outsl
outsb
fcomps
out
gs
repnz
arpl
or
push
je
xlat
loope
dec
sarb
mov
lods
loop
bound
lcall
dec
adc
mov
loop
xchg
lcall
stc
cmc
roll
ja
movsb
dec
push
loope
scas
and
gs
stos
loope
and
outsl
decb
dec
in
jae
cld
mov
test
in
xor
inc
lods
and
xchg
push
dec
lcall
outsb
adc
or
test
adc
cld
jne
leave
mov
sbb
inc
lret
push
mov
ljmp
icebp
pop
ret
push
mov
add
movsl
notb
dec
pop
pop
rcll
mov
loope
pop
mov
push
in
mov
cmpsl
mov
jmp
insb
sbb
xor
ror
jno
lods
jp
cmp
add
sbb
cmp
adcb
pushf
mov
into
mov
aas
mov
in
scas
push
insl
cmp
push
scas
les
lea
mov
dec
xchg
or
mov
lcall
jns
aas
add
push
in
loopne
std
in
mov
jns
dec
stos
add
sub
mov
xor
and
pusha
pop
pusha
mov
ja
sub
adc
cli
scas
cmpsb
loopne
lods
dec
pop
push
adc
shll
pop
sub
test
jl
xor
iret
adc
dec
adc
fdivrs
leave
xor
pusha
loopne
sbb
cltd
sub
jle
jmp
sti
mov
push
shll
lock
push
cmp
mov
sarb
nop
dec
pop
xchg
mov
imul
loopne
inc
xchg
lds
popa
inc
scas
xor
xchg
mov
cs
jo
rorl
adc
inc
stc
arpl
inc
pusha
int3
sbb
inc
cmp
and
enter
dec
test
pop
mov
cmpsl
fcompl
testl
sti
fiaddl
jb
mov
jae
inc
sbb
adc
loopne
popa
xchg
mov
jp
and
mov
into
mov
inc
add
fldt
add
adc
mov
adc
cwtl
ds
add
mov
insl
sub
xor
scas
inc
xor
repnz
xchg
shl
idivb
sbb
mov
push
push
push
pop
jbe
cld
ret
sahf
sub
push
test
and
adc
mov
xchg
xchg
cs
std
mov
sbb
loop
cmp
std
dec
mov
bound
js
jnp
rep
in
xchg
jge
and
insb
adc
dec
scas
pop
test
addr16
jle
push
mov
in
fs
xchg
bound
jb
scas
sarl
inc
mov
mov
mov
push
mov
inc
mov
into
inc
cltd
xchg
mov
test
adc
shll
push
outsb
cld
xchg
pop
imul
push
cmc
mov
sbb
std
inc
loopne
or
ja
mul
or
int3
or
jne
xchg
aaa
mov
mov
pop
inc
pop
mulb
jno
into
inc
mov
imul
test
cmc
cmp
mov
shll
or
mov
aad
outsb
scas
push
in
mov
movsb
hlt
mov
lds
push
insl
rorl
in
inc
xchg
int
or
xchg
cmp
repz
or
andb
push
popf
aaa
outsb
push
push
xor
xchg
andb
in
shlb
sarl
aaa
mov
dec
loop
cwtl
jb
jnp
jnp
or
and
xchg
mov
call
lds
inc
leave
pop
loop
dec
mov
inc
cmp
xchg
cmpsb
popa
lods
mov
mov
insb
xchg
fcmovne
movsl
add
push
cmpsb
sub
fabs
aas
je
cwtl
mov
fcomi
in
negb
movsb
push
daa
ja
in
ret
mov
inc
clc
into
hlt
ljmp
repnz
rol
fsts
xlat
adc
jnp
xchg
or
dec
dec
cmp
push
in
test
dec
fsub
mov
pop
or
push
insl
lcall
arpl
add
test
mov
lock
xor
test
les
add
cmp
stos
pusha
mov
lods
jl
inc
inc
xchg
jl
scas
ret
inc
dec
into
push
pop
int3
sbb
cli
dec
aam
adc
int3
cmp
fcompl
mov
hlt
mov
xchg
sbb
mov
ljmp
push
cmp
xchg
adc
add
cli
mov
clc
jg
jne
lds
fnstenv
mov
insl
cs
lahf
pop
xchg
adc
les
enter
add
and
sub
stos
mov
sub
lds
mov
xor
pop
xchg
mov
daa
in
inc
jns
mov
repnz
es
adc
lret
leave
add
mov
sbb
sbbb
roll
movl
adc
add
mov
sbb
sbb
pop
int
inc
push
js
shl
mov
push
jns
jbe
repz
inc
mov
enter
test
mov
sbb
xlat
add
add
icebp
sbb
inc
hlt
imul
dec
pop
mov
add
out
and
stos
jno
std
outsb
cmp
aad
add
and
adc
inc
lods
stc
inc
dec
enter
push
or
test
leave
popf
sbb
mov
dec
dec
sub
add
aam
cli
stc
fbstp
aad
fmul
push
cs
sbb
adc
inc
sbb
mov
fstpt
and
and
push
mov
push
mov
and
scas
pop
lahf
inc
pop
jmp
cld
push
cmp
sti
push
adc
xor
jmp
jnp
pop
repnz
aad
js
push
insl
push
fsubp
mov
mov
sbb
mov
jae
inc
xor
aas
sub
sub
shrl
pop
mov
mov
cwtl
das
push
push
sbb
mov
in
mov
in
mov
repnz
lods
ljmp
jmp
iret
test
xor
iret
inc
into
mull
cmp
add
cmp
or
dec
cs
aam
addr16
int3
push
pop
push
or
cwtl
dec
iret
mov
jne
mov
dec
test
shr
lret
add
lahf
sub
cmp
adc
mov
mov
ret
push
mov
fsubrs
js
in
jns
outsl
inc
je
mov
mov
jno
sub
gs
enter
sbbl
add
ret
cwtl
mov
mov
dec
movsl
push
inc
insb
das
jne
adc
frndint
inc
std
mov
lods
mov
jb
popa
fucomp
iret
movsl
push
and
das
mov
call
cmp
xchg
mov
jle
sbb
addb
jns
out
test
imul
jno
enter
jl
mov
fs
fdivrl
dec
sbb
clc
inc
nop
fisttpll
sub
and
lcall
jl
in
pop
jg
or
sahf
loope
imul
fcomps
or
lea
cmpsl
xor
mov
xchg
hlt
add
imul
cli
push
outsb
jmp
mov
dec
sar
leave
mov
cmpsl
jl
ja
fwait
jle
lds
stos
test
fmuls
dec
out
movsl
lock
out
mov
pop
dec
dec
push
xor
ds
sbb
mov
xlat
orb
bound
inc
cmp
dec
adc
aaa
mov
push
lea
mov
push
repz
test
or
fcomps
out
loopne
mov
and
add
sub
insb
xor
outsl
xor
add
in
sbb
insb
push
cltd
mov
movsl
push
imul
push
adc
test
jg
in
push
flds
mov
adc
mov
pop
pop
shlb
lcall
push
repnz
dec
outsl
push
inc
sahf
int
sarb
adc
or
out
fidivrl
testl
lds
arpl
cs
push
pop
imul
xchg
test
or
sbb
sbb
inc
scas
enter
jmp
cs
xchg
pop
stc
test
mov
push
les
xchg
orb
and
ror
push
cld
outsb
stos
push
xchg
fisubrl
xchg
insl
push
mov
or
gs
fdivs
test
cmp
cmovae
xchg
test
inc
mov
and
int
jl
imul
add
jp
stc
and
lcall
push
mov
dec
or
sub
adc
pop
xor
xchg
mov
lods
repz
imul
scas
jecxz
fisttps
adc
sbb
lret
fcoms
xchg
push
popf
out
cmp
mov
aaa
test
lods
leave
out
nop
or
aad
adc
sub
pop
push
mov
xchg
test
mov
out
call
insb
lret
roll
xor
and
in
into
shl
jne,pn
pop
lods
mov
mov
sub
sti
jb
pop
xor
das
adc
movsb
sbb
push
dec
andb
fcmovnb
jb
outsb
cmp
ss
adc
scas
aam
add
pop
and
push
inc
bound
adc
jo
adc
mov
dec
xor
sub
imul
rcl
jns
testb
imul
jb
dec
out
and
pop
aad
dec
fmulp
repz
add
rcll
scas
mov
xchg
ret
add
jnp
jnp
cmc
cmp
popa
pusha
cld
adc
mov
scas
in
lock
lea
push
jp
xlat
movsl
rcrl
or
dec
call
or
lret
sbbb
insb
mov
movsl
mov
add
movsb
lret
mov
sbb
hlt
fsubrs
mov
sarl
xchg
ret
pusha
sbb
out
pop
xchg
ja
divl
popa
xor
jns
jb
adc
in
inc
rcrb
lods
lds
out
jb
iret
jo
adc
mov
sahf
xchg
sbb
xchg
mov
cli
int
jae
sub
lret
loopne
mov
fisttps
push
fidivs
cmp
sti
mov
int
pop
lret
or
into
mov
rcrl
outsb
pop
test
lahf
push
movsb
adc
sbb
out
xchg
mov
add
repnz
sub
sub
dec
aam
out
dec
mov
fbstp
daa
gs
push
add
mov
adc
in
jbe
push
dec
add
icebp
mov
sbb
jl
pop
stc
mov
push
inc
or
xor
test
inc
cmpsl
test
or
cmp
jnp
into
xchg
fnstcw
mov
and
ljmp
enter
fldl
pop
repnz
sbb
imul
cmpb
lret
lea
fbld
frstor
sbb
je
les
or
xor
test
mov
adc
adc
popf
mov
jb
jl
pop
imul
out
fwait
xor
xchg
or
push
xchg
fdivrs
lret
push
xchg
sar
jb
mov
ficoms
ds
mov
cmp
arpl
fstps
loop
cmpsl
inc
fsubl
call
adc
aaa
lcall
int3
sub
int
aad
lods
stos
fwait
sub
imulb
mov
lds
mov
push
xor
leave
fs
aam
test
es
stos
adc
mov
or
or
ret
jo
fisubrs
stos
mov
bound
jne
or
rcrb
jecxz
loope
add
cli
je
cwtl
jmp
insb
fisttpll
xor
js
sbb
xchg
shrl
jbe
jae
xor
pop
lods
dec
cmc
pop
cmp
lock
repz
jo
stos
and
mov
inc
leave
push
popf
mov
jno
orl
xchg
inc
out
inc
fisubrl
or
popf
cli
cmp
jle
jbe
adc
and
sbb
cmp
data16
cmp
dec
insl
fildl
xchg
inc
push
cmp
mov
test
loope
lret
jae
cli
push
cmp
clc
xchg
mov
es
jmp
movsb
dec
sbb
push
inc
adc
mov
sbb
mov
outsb
dec
push
leave
dec
js
push
in
out
fisttps
mov
out
and
jnp
or
js
or
stos
inc
cld
mov
fistps
sahf
movsb
fildl
mov
cmpsl
ss
hlt
inc
inc
in
or
dec
add
sub
xor
push
cmc
subb
ret
jnp
adc
loopne
mov
mov
jb
jno
pusha
outsb
loope
pop
inc
inc
mov
loope
pop
hlt
adc
je
mov
fildll
sub
jbe
test
xor
js
loopne
push
bound
sbb
push
and
mov
mov
mov
inc
test
adc
leave
pop
mov
mov
fwait
adc
cld
cmp
inc
add
inc
aad
test
sbb
dec
pop
xor
sub
and
mov
jge
push
stos
sub
int3
xor
adc
xor
pop
jl
ds
mov
mov
and
push
out
mov
pop
notb
insl
fisubl
pop
rorb
or
mov
pop
sbb
iret
dec
dec
xor
mov
repnz
imul
rcr
adc
lds
push
xchg
mov
mov
mov
fldenv
push
xor
pop
sub
mov
or
xchg
adc
sub
shl
jecxz
push
inc
sbb
icebp
adc
sbb
and
aas
test
mov
sbb
ret
and
push
fidivrl
push
pop
xchg
cmp
fistps
inc
adc
dec
xor
loope
out
dec
imul
cmc
xor
clc
scas
je
aaa
lcall
stos
adc
mov
pop
mov
lahf
mov
inc
test
inc
xor
push
cmp
xchg
jecxz
pop
pusha
test
outsl
jae
cwtl
testl
and
pushf
fisttpll
adc
jecxz
jns
pop
inc
sub
in
movsl
aaa
inc
repnz
inc
stos
sbb
pop
ljmp
add
fsubr
jecxz
jne
scas
icebp
test
jne
lea
adc
mov
pusha
push
sarb
in
insl
push
sahf
push
jl
mov
ret
loop
sbb
jnp
gs
pop
ret
push
cli
add
push
or
out
sahf
dec
mov
jmp
adc
xor
int
popa
nop
mov
mov
cmp
pop
add
xor
ja
xchg
mov
iret
stos
enter
and
fs
push
lods
sbb
sbb
push
mov
addr16
cmpsb
sti
cli
or
mov
pop
dec
mov
jns
sqrtps
out
or
pop
pop
lahf
dec
lret
dec
pop
cmp
js
mov
xchg
test
fistpl
mov
mov
sub
add
sarl
sub
sub
roll
fmuls
fbstp
sbb
sub
adc
out
mov
fnsave
aad
lahf
pop
in
push
and
repz
mov
dec
pop
cmpsb
pop
mov
mov
xor
fs
sub
rcll
or
out
and
fimull
or
std
lds
add
out
repnz
dec
sbb
xor
mov
mov
mov
dec
adc
imul
xchg
push
stos
leave
popa
jle
mov
lds
mov
push
ljmp
nop
mov
daa
push
in
dec
out
xchg
pop
iret
add
enter
fadds
push
push
daa
sbb
js
hlt
mov
loop
inc
imul
gs
pop
and
jo
or
movsb
movsl
ljmp
xchg
mov
adc
insb
call
cmpl
repz
push
cmp
dec
ljmp
popa
or
mov
lods
lcall
out
stos
cmp
xchg
cmpsb
cmp
nopl
outsl
xlat
push
inc
inc
imul
mov
ret
jb
movsl
add
loopne
jge
jle
cli
push
mov
sub
inc
and
loop
sbb
xchg
xchg
sub
gs
fstpt
jbe
jns
icebp
and
inc
data16
lods
jmp
sub
mov
loope
pop
cmp
rcr
mov
mov
add
or
popf
cmpb
loope
xchg
add
dec
mov
xchg
or
lret
testb
or
cmp
dec
xchg
cmp
call
lods
inc
icebp
fwait
push
movl
jae
mov
sahf
loopne
call
ret
push
loope
sub
pop
sub
aam
cmc
pop
mov
insb
shrl
scas
outsb
aad
popa
and
push
mov
sahf
mov
cld
inc
adc
mov
imul
add
rcr
fstpl
push
lds
lret
xchg
andb
push
jne
mov
and
mov
or
int
je
push
out
sbb
push
pop
dec
ret
xchg
ja
shll
sbb
jbe
xor
xor
das
ja
js
fsubrl
aam
xchg
xlat
popl
sbb
test
movsb
sahf
pop
jge
cld
jmp
dec
ds
adcl
sub
stc
push
mov
mov
push
movsb
sbb
xchg
xlat
negb
mov
divb
insl
jmp
or
scas
roll
outsl
jb
hlt
loop
filds
mov
sub
mov
mov
and
inc
mov
sbb
pop
push
cmp
test
subl
jbe
jmp
mov
ljmp
mov
insl
cli
repnz
dec
xor
cs
lret
cmp
add
pop
addl
clc
mov
pop
int
stos
repnz
out
xor
shrl
cmp
cld
mov
xchg
push
int3
mov
push
das
jge
inc
jmp
and
mov
test
mov
xchg
and
sbb
dec
icebp
mov
cmp
xchg
xlat
test
insb
stos
popf
paddw
iret
push
mov
jmp
sti
add
push
and
mov
jns
pusha
ss
nop
dec
sub
aaa
jmp
adc
out
in
jg
xor
mov
das
imul
stc
mov
iret
xchg
or
fistl
call
jle
in
pop
dec
pop
test
test
mov
insl
adc
pop
jno
pusha
cli
outsl
stos
gs
add
inc
sub
insl
mov
idivl
lahf
push
inc
sbb
mov
fisubs
dec
jb
xchg
daa
xor
or
es
sub
fsubl
sti
mov
adc
pop
or
pop
shlb
or
xor
jns
jb
jp
arpl
testb
aas
inc
int
push
nop
test
dec
xchg
cli
xchg
mov
sbb
cmpsb
loop
mov
adc
repnz
je
or
jp
and
out
sti
fsub
mov
sbb
adc
cmp
test
mov
test
jo
int
pop
aas
sbb
or
mov
xchg
add
push
and
push
pop
xchg
leave
or
mull
in
cmp
sub
dec
movsl
mov
mov
jl
dec
leave
cmp
sub
xchg
add
jb
dec
cmp
and
pushf
scas
mov
cmpb
mov
pushf
jecxz
sub
xchg
cli
mov
xchg
adc
jno
repnz
jl
lret
dec
fcom
movsl
sbb
inc
mov
cmp
lock
sbb
outsb
sub
add
pop
imull
mov
bnd
std
mov
mov
rorl
xchg
pop
jge
sub
sbb
or
cld
negb
loopne
pop
xor
and
dec
inc
push
xchg
fnstsw
test
pop
pop
mov
mov
cmp
xor
sbb
push
push
in
popf
xchg
pop
mov
lea
sub
cwtl
aam
push
faddl
into
mov
mov
aas
mov
int3
insl
pop
xor
mov
add
adc
sub
cli
mov
rorl
bnd
in
cltd
mov
pushf
test
lret
fwait
xchg
out
jbe
mov
xor
jne
std
fisubrl
pop
mov
arpl
out
add
mov
cmp
jmp
xchg
scas
mov
mov
inc
sbb
or
cltd
testb
dec
arpl
mov
dec
cmp
pop
xchg
inc
insb
out
mov
dec
mov
cmp
mov
fwait
enter
andl
pop
mov
pop
out
sub
sarb
popa
lret
mov
movsb
fldcw
call
pop
call
xchg
incl
int3
or
add
inc
jmp
mov
xchg
xchg
mov
test
jge
ret
leave
add
dec
lea
xor
int3
fwait
xchg
icebp
call
xchg
jge
cmp
sbb
or
outsl
enter
pusha
jmp
mov
lods
pop
mov
mov
loop
ds
mov
div
sti
dec
push
fisubrl
fisttps
ret
addb
mov
div
popa
push
xchg
loope
lret
dec
pop
movsl
push
mov
xor
adc
loope
dec
push
fiaddl
push
lea
mov
add
dec
xchg
pop
fldenv
mov
mov
ret
inc
xchg
aam
cmc
shlb
mov
stos
cmp
mov
iret
xor
idivb
inc
andnps
inc
pop
mov
fistpl
out
cmp
incl
imul
mov
and
mov
je
test
adc
gs
mov
jg
js
flds
cmp
cwtl
dec
mov
dec
mov
imul
imul
out
lea
sahf
push
dec
sub
fsub
aaa
xchg
insl
push
popf
ljmp
call
jl
sti
subl
pop
mov
popa
xor
ljmp
add
inc
push
lods
xchg
lock
push
mov
pushf
jae
or
mov
jl
rol
fdivrs
inc
movsl
out
in
frstor
lret
ljmp
xor
xchg
nop
repz
fistps
jmp
aas
pusha
add
out
stc
pop
inc
xor
ret
jae
pop
mov
je
xor
add
ss
test
sub
pushf
cltd
xchg
pop
cli
xor
fldl
push
mov
fs
push
lret
lods
loopne
sbb
fwait
cld
mov
xor
mov
fidivrl
std
ret
inc
pop
outsl
mov
and
xchg
pusha
sub
sbb
cmpsl
mov
popa
test
daa
lcall
sbbb
in
push
enter
add
jmp
pushf
mov
lcall
adc
testb
xchg
inc
add
rorb
cmc
pop
dec
push
les
icebp
les
or
and
jp
xor
adc
lea
stc
jns
mov
xor
mov
adc
and
push
out
ficompl
and
pslld
or
or
sbb
add
add
lret
daa
jno
jmp
jg
sti
stc
sbb
adc
lea
ficoms
or
adc
insl
dec
ss
fstps
cli
call
mov
mov
mov
aam
js
cmp
sub
adc
mov
push
xor
mov
xor
pop
pop
sub
loopne
and
push
jnp
push
dec
push
or
into
push
push
adcl
shlb
jp
fimull
mov
xor
and
clc
add
add
outsl
pop
mov
hlt
xlat
add
pop
adc
cltd
xor
maskmovq
addr16
insl
sub
mov
adc
push
pop
xchg
imul
arpl
ljmp
xor
cltd
add
push
rolb
jns
dec
push
insb
inc
stos
jb
push
inc
into
stos
mov
insl
mov
jge
mov
pop
xor
test
sarb
mul
jae
mov
add
jecxz
mul
xor
ret
pop
ret
pop
inc
enter
repnz
xchg
xor
iret
lcall
sub
lea
out
enter
lret
xchg
pop
daa
loop
clc
mov
addr16
push
jbe
push
ss
inc
enter
loope
aaa
mov
inc
push
ljmp
lods
sarl
cmpsl
sbb
jl
aas
frndint
push
shll
cmp
js
mov
ret
add
adc
mov
inc
sbb
jno
jno
popa
or
cmp
add
scas
cmp
push
xorl
adc
jae
sbb
lret
enter
cmpsl
sbb
or
mov
icebp
and
adc
dec
das
cmp
push
rcrl
dec
adc
push
xor
or
pop
jns
or
stos
and
push
repnz
cltd
dec
lods
mov
movsl
stos
ficoms
add
or
call
mov
aas
fimull
loopne
mov
iret
sbb
lock
ds
loopne
push
dec
out
ljmp
inc
mov
jmp
xor
push
imull
sbb
aaa
std
notb
lods
mov
arpl
sahf
les
inc
xor
jecxz
inc
and
cmp
sub
sub
test
push
fsubs
repnz
pop
jns
mov
mov
xor
icebp
add
ljmp
jae
loope
mov
jmp
and
jnp
cwtl
lods
and
sbb
gs
sbb
fldcw
xor
test
subl
lock
cmp
outsl
mov
mov
fistpl
push
mov
xor
call
dec
jb
mov
add
pop
jo
jg
mov
and
or
jnp
subb
movl
fstpt
decb
out
pop
imul
cmc
push
mov
adc
pop
or
mov
inc
cmp
hlt
in
xor
dec
or
fldl
loopne
adc
pop
jecxz
leave
mov
stos
mov
mov
or
test
and
fnstsw
in
lret
test
or
cs
mov
mov
mov
test
loop
mov
int
pop
xchg
call
jecxz
sbb
or
lea
lods
mov
and
xchg
std
lock
dec
outsl
dec
push
loopne
or
sub
mov
pop
mov
cltd
out
test
mov
jb
jbe
jbe
and
js
lds
pop
imul
push
ret
inc
loop
push
and
les
loope
inc
ret
jne
adc
arpl
int3
adc
jnp
push
or
xor
out
insb
lea
in
loop
cmp
inc
xchg
or
in
into
gs
enter
movsb
jno
cld
aam
sub
imul
push
aaa
insl
pop
shlb
jns
push
lea
or
sbb
lock
and
push
add
cmp
xor
mov
push
pop
stc
into
in
inc
or
and
xchg
pushf
pop
out
jbe
leave
inc
test
and
push
frstor
stos
fldl
fdivr
jne
xor
enter
icebp
push
push
xchg
in
ffree
jne
iret
pop
mov
jl
push
inc
sbb
idivl
push
inc
xor
aas
iret
mov
or
das
lods
jnp
scas
xchg
mov
or
lcall
dec
rolb
xchg
pushf
mov
add
cmp
push
cltd
pop
jmp
pop
lods
mov
scas
mov
out
mov
out
out
inc
call
jne
movsb
clc
lret
pop
jno
mulb
jg
xor
inc
xor
in
push
and
repnz
mov
push
mov
cmp
mov
mov
ffree
mov
lea
mov
and
lret
jmp
xchg
xchg
lods
ljmp
mov
xchg
mov
lret
xlat
xchg
mov
mov
push
pop
xor
cld
stc
sti
adc
cmc
ret
fisubs
shrl
cmp
sbb
add
repnz
aaa
xchg
scas
pop
shrl
xor
jns
pop
xchg
push
jbe
enter
jg,pt
lret
jnp
repnz
ja
jp
fildll
lcall
pop
pop
mov
dec
loopne
or
jl
in
xor
mov
enter
mov
sti
cmp
in
fs
popf
cld
lret
xor
out
in
int3
andb
addb
in
jne
mov
inc
int
mov
bound
jmp
cld
or
mov
jbe
lods
leave
outsb
sbb
mov
in
pop
and
mov
test
inc
adc
shl
jp
mov
ss
int
in
dec
add
adc
xchg
cmp
xchg
in
mov
inc
or
inc
push
es
scas
pop
sarb
mov
pop
mov
pop
dec
xchg
push
loop
sub
push
pop
or
ljmp
lea
stos
xchg
mov
leave
repnz
bound
cmpsl
pop
mov
and
shlb
dec
in
jecxz
aad
cs
sbb
sbb
fiaddl
cmp
mov
into
ret
inc
scas
insl
inc
inc
mov
and
inc
cld
lock
add
addr16
es
mov
jo
jnp
and
mov
sbb
and
dec
and
jb
hlt
fcompl
add
outsl
mov
xlat
mov
outsb
shrl
xor
out
inc
inc
push
in
cmp
mov
sti
sahf
inc
test
nop
hlt
sub
xor
sahf
dec
pop
adc
jbe
rcrb
mov
sub
fnsave
lret
rorl
push
push
adc
movzbl
and
fnclex
mov
add
sarb
das
jg
xchg
jne
mov
inc
in
bound
xchg
push
adc
popa
lret
add
mov
fists
jo
push
dec
shrb
popf
mov
mov
inc
and
add
inc
aaa
js
mov
ret
add
pop
lock
mov
scas
pop
das
xor
adc
xlat
mov
mov
notb
sbb
fidivrl
lods
inc
push
inc
jmp
push
je
inc
xchg
sbb
or
adc
in
cmpsb
xchg
mov
arpl
jae
push
xor
scas
jno
fwait
into
popa
pushf
pop
lds
pop
dec
sahf
in
push
lea
shl
lds
mov
stos
scas
inc
xchg
cmp
pop
leave
decb
adc
rclb
cmp
dec
cld
adcb
jo
insb
roll
imul
addl
out
dec
jne
jb
fmuls
out
cmp
pusha
dec
push
and
mov
aad
stos
int
or
push
xor
push
add
scas
lahf
incb
movb
pushf
arpl
lret
fisttpl
movb
mov
popf
lock
hlt
mov
pop
push
lods
sbb
cmp
outsl
xchg
sub
cmc
cmpsl
jle
test
or
mov
jg
push
vsubss
insb
inc
mov
inc
movsb
xchg
jg
push
xchg
sub
mov
push
inc
call
sbbb
js
gs
sbb
jo
outsb
add
mov
dec
inc
add
pop
jecxz
int3
scas
mov
xor
mov
rolb
pop
jecxz
loope
call
inc
and
mov
adc
jo
sbb
test
inc
inc
bound
sbb
pop
iret
repnz
dec
test
xor
jnp
lret
inc
lcall
pop
clc
in
outsb
xor
jb
sub
jae
dec
adc
mov
mov
cld
arpl
fdivp
inc
add
mov
aaa
mov
fildl
mov
mov
add
sbb
das
movsl
imul
mov
cmpl
cltd
pop
adc
mov
inc
dec
lcall
stos
ss
dec
aaa
jno
sbb
xor
xor
mov
add
mov
int
inc
stc
inc
dec
cmpsl
jnp
popf
mov
pop
adc
jnp
shrl
fisubrl
adcl
pop
popf
cmpsb
dec
push
stos
aaa
aam
je
fistps
xchg
xchg
xchg
adc
inc
in
mov
jle
mov
hlt
jp
out
call
shll
imul
push
cs
mov
lahf
xchg
and
dec
bound
or
mov
les
hlt
sbb
adc
daa
leavew
push
outsb
jecxz
das
or
jmp
pop
js
mov
xlat
xchg
mov
adc
cmp
sbb
xor
outsb
lock
inc
mov
insb
fsubs
ljmp
jle
sub
jnp
dec
xchg
mov
adc
notl
cwtl
xor
mov
in
call
jnp
sub
add
sbb
clc
ljmp
sub
ret
rorb
in
xor
das
insl
shlb
mov
mov
lahf
lock
dec
mov
or
push
push
xor
xor
pop
mov
cmp
cmp
aam
push
jge
arpl
xchg
addr16
jnp
in
mov
and
aam
in
sbb
inc
cld
push
outsl
pop
scas
jle
pop
movsb
cmp
adc
pcmpeqd
lahf
lods
sub
mov
mov
mov
aad
inc
loopne
aaa
aaa
cli
faddl
fstps
imulb
adc
testb
mov
inc
fs
dec
ja
adc
xlat
xor
push
inc
lock
fadds
movsl
loope
sub
movsb
stc
filds
xchg
xor
or
pop
je
outsl
add
outsl
ficompl
sub
cmpb
cld
lret
or
mov
dec
sbb
imul
xor
nop
fsts
mov
mov
cld
dec
adc
jecxz
incb
inc
std
sub
enter
push
push
jnp
or
pop
stc
jecxz
xchg
cmp
fdivl
pop
mov
adc
lret
sub
inc
xchg
inc
mov
std
adcb
adc
or
testb
out
int
movsl
mov
cltd
sbbb
mov
inc
add
das
xchg
dec
inc
cs
sbb
jae
movsl
inc
icebp
jge
add
cmp
dec
es
mov
jnp
sub
inc
fs
pop
cld
jb
pusha
push
iret
shlb
inc
and
icebp
push
xchg
rcrb
jne
outsl
mov
stc
or
xor
add
iret
shlb
aad
popf
push
pop
loopne
and
jb
imul
pop
ss
push
dec
pop
or
nop
fwait
popa
pop
bound
lret
loop
popa
jge
rorb
aas
fld1
inc
and
cltd
mov
add
pop
aad
mov
jge
mov
inc
fdivrp
icebp
in
hlt
jmp
inc
mov
or
inc
jns
push
sti
jae
dec
dec
pusha
sbb
adc
mov
mov
sub
jecxz
pop
mov
pop
push
xor
ja
or
scas
push
nop
inc
and
mul
pop
sbb
rolb
jge
or
mov
mov
call
and
push
jbe
sbb
mov
xor
fs
mov
clc
std
sbb
mov
shlb
pop
add
gs
test
jg
pop
xchg
jp
fcompl
and
out
std
divb
hlt
scas
das
pop
xor
int
push
das
or
cmp
sub
in
add
cmc
add
fs
xor
das
xchg
or
and
idiv
gs
mov
sub
mov
gs
rol
xor
xchg
jns
push
cld
andb
mov
sbb
les
pop
jecxz
jae
fisubrl
push
jns
mov
out
pop
jno
movsb
xchg
outsl
and
je
jge
jb
lea
jns
mov
adc
cmp
push
mov
cmp
xor
cmp
ss
push
mov
mov
aaa
mov
and
fwait
xchg
dec
sahf
add
mov
aam
cmp
xchg
js
loopne
push
jge
clc
add
ja
fstpl
aam
test
gs
dec
sub
pop
subl
data16
inc
popl
ja
jne
inc
add
ds
push
cli
xchg
jns
push
mov
pop
mov
jo,pn
into
dec
pop
icebp
setbe
xor
push
sbb
mov
je
push
ds
cmpsl
into
out
outsl
add
gs
ja
xor
mov
sarl
lock
mov
mov
and
out
out
fwait
lods
pop
into
xchg
js
fbstp
cs
out
dec
xor
mov
xlat
unpckhps
add
cltd
cld
pop
fstpt
jno
rcrl
cmpl
add
aam
xor
enter
cmp
mov
lock
nop
jae
pop
dec
add
cli
adc
pop
and
out
xchg
rcrl
mov
sahf
ret
and
mov
sbbl
cmp
mov
dec
sbbl
dec
mov
fnstsw
push
jmp
xchg
jne
or
fdivrl
jge
add
movsb
mov
iret
and
mov
cltd
ret
jno
add
jb
xor
sub
popf
adc
inc
in
pop
add
inc
push
pop
cwtl
ljmp
dec
xor
mov
mov
inc
imul
sub
out
add
or
jmp
add
cmpl
or
mov
cmc
sbb
int
les
dec
cmp
jge
push
cltd
cmpb
lret
mov
clc
es
jle
arpl
mov
lahf
jae
in
jns
aam
sbb
add
adc
dec
push
gs
arpl
mov
aad
test
push
push
lods
loope
pop
push
sub
loop
sti
scas
jns
mov
cli
sub
inc
xor
mov
lods
mov
mov
sahf
pop
and
mov
lds
adc
mov
inc
mov
lret
adc
sub
jbe
xlat
shrb
sbb
add
mov
test
mov
sbb
mull
sar
aam
adcb
pop
push
js
scas
shrb
push
arpl
gs
dec
call
call
movl
mov
aad
mov
pop
aas
lret
push
stos
mov
repnz
aaa
mov
data16
cmpsb
addb
pushf
xor
jp
push
pop
pusha
dec
and
jae
rclb
mov
sub
popf
out
fisttpl
out
mov
inc
daa
push
inc
test
addr16
mov
sub
in
stos
push
int
lcall
loope
sbb
cmpsl
ljmp
sub
cmp
imul
sbb
push
jne
cmp
add
dec
sti
in
fstl
add
mov
ljmp
pop
ret
fs
cwtl
jbe
push
aad
dec
insb
jbe
andl
into
fstpl
in
je
cltd
or
mov
xorl
dec
mov
and
xchg
mov
lods
jg
add
sbb
pop
push
mov
sub
stos
jae
aam
pop
cmpsl
mov
outsb
mov
sbb
fldt
jo
jge
cmp
push
hlt
push
cs
xor
push
push
gs
mov
cld
insb
mov
mov
cmovg
ds
add
jbe
test
std
push
mov
cli
mov
or
roll
push
mov
jmp
xor
data16
xchg
push
pop
int
add
adc
add
xchg
jb
test
mov
ss
test
mov
or
cmpsl
daa
out
mov
sti
int3
gs
not
cmp
and
push
xchg
adcb
dec
pushf
jo
push
pop
mov
inc
js
mov
or
push
popa
test
cmp
adcb
test
lcall
inc
fiadds
push
shl
gs
int
popa
and
inc
add
mov
jp
gs
xchg
xchg
ja
push
aaa
and
adc
fistl
dec
movsl
fsts
fldt
or
push
mulb
dec
adc
sbb
pop
and
pop
hlt
ljmp
add
insb
add
or
or
sub
outsb
enter
sub
test
aaa
test
jo,pn
jge
mov
push
cmpsb
sbbl
jns
loope
mov
push
mov
imul
and
cmp
mov
mov
aad
fildll
imul
inc
xor
rcrb
cltd
xchg
rcll
lds
push
mov
fnstcw
xchg
cwtl
cmp
lret
aam
lock
mov
outsb
mov
lcall
adc
imul
and
inc
mov
aam
mov
cmp
xchg
mov
mov
sub
call
xlat
ja
push
adc
fldl
dec
jp
sbb
xchg
sahf
xlat
pop
jge
andl
xchg
and
adc
mov
jns
std
addl
bound
mov
les
add
stos
xor
jg
inc
adc
push
add
decb
jmp
jle
and
ret
stos
in
or
pusha
adc
lods
mov
add
fxch
fcoml
call
push
lds
pop
ljmp
sahf
dec
fmul
and
push
jbe
scas
add
cmc
stc
outsb
pop
sbb
and
push
or
xchg
cmpsb
faddl
dec
dec
sub
loop
cmpsl
adc
inc
pop
pusha
xlat
jns
daa
adc
dec
inc
mov
in
mov
nop
add
adc
pop
cli
in
dec
xlat
sbb
push
dec
push
rcrl
jnp
cmpsb
outsl
or
call
jle
subb
sbb
mov
adc
mov
call
mov
xorb
cmp
adc
dec
mov
push
xchg
fsubl
adc
cmp
leave
faddl
dec
insb
xor
cmpsl
aaa
bound
js
add
test
pusha
rorl
out
scas
push
data16
dec
imul
cmc
mov
imul
lahf
dec
cmp
jle
xchg
les
xchg
in
add
push
lcall
inc
aaa
sub
mov
jnp
nop
outsb
jl
mov
imulb
inc
sbb
sti
jno
loope
lock
testl
mov
enter
sub
shlb
mov
outsb
fstl
mov
xor
push
insb
push
ja
dec
enter
xchg
jg
or
pop
jne
js
dec
pop
fbld
jecxz
fidivrl
mov
add
iretw
or
xchg
fdivrs
popa
imul
lcall
rorl
xor
cmpsl
out
inc
hlt
or
clc
not
mov
sub
push
lea
xlat
stos
cwtl
and
outsb
push
repnz
push
clc
lret
or
pushf
mov
in
mov
xor
mov
or
mov
fwait
or
inc
sbbb
pusha
add
jg
or
mov
jl
test
sahf
adc
cmp
pop
lock
loope
dec
test
cli
clc
pop
insb
push
xor
jb
mov
mov
mov
mov
data16
out
pop
sub
inc
add
cmc
mov
nop
and
dec
je
mov
mov
add
test
clc
dec
loopne
decb
es
mov
jmp
ret
sub
in
xor
in
dec
mov
or
push
xlat
shll
orb
das
mov
jp
sub
push
stc
ss
mov
nop
mov
das
outsl
mov
loope
mov
inc
scas
testb
dec
jmp
inc
fnstsw
sub
cmp
and
mov
ljmp
out
in
mulb
jle
out
sub
in
inc
jl
sbb
lea
add
lret
movsb
push
or
dec
mov
scas
add
dec
lock
cmp
jae
or
outsb
cwtl
jl
dec
cmp
add
bnd
gs
dec
push
in
adc
test
mov
and
xchg
fisttpll
jecxz
sbb
popa
mov
pop
xchg
push
mov
mov
sub
sub
mov
stos
inc
ret
sarl
into
mov
mov
fwait
push
xchg
dec
in
jae
adc
fsubl
loopne
in
bound
out
movsb
scas
mov
mov
or
fcomip
rcrl
jge
outsl
or
xchg
ljmp
adc
mov
or
pop
and
mov
xchg
int
jge
shlb
jmp
repnz
sub
in
imul
cmp
xchg
lcall
push
adc
or
lods
and
cli
mov
movsl
dec
pop
mov
aad
loop
aad
ret
xor
int
cmp
cli
sahf
cmp
xchg
imul
int3
xchg
hlt
imul
outsl
jno
add
fimuls
push
stos
mov
lret
scas
movsb
mov
sbbl
sbb
sub
inc
inc
cwtl
push
mov
add
mov
push
cmp
xorl
rcrl
insb
push
jno
out
int3
dec
idiv
rcll
inc
flds
dec
mov
leave
aad
fisubl
mov
xchg
std
xchg
aad
inc
push
andl
xchg
inc
stc
std
or
fimuls
in
pop
test
xchg
loopne
or
push
sbb
add
push
daa
dec
lea
mov
scas
les
xor
xchg
lret
xchg
add
mov
lret
loop
add
sbb
dec
mov
je,pt
rorl
aad
jbe
cmpsl
fstl
idivb
cmpl
or
cmpsl
cmp
push
jo
stc
push
sbb
lcall
sbb
push
loopne
ljmp
dec
adc
repnz
mov
sub
xchg
lods
popf
cmpsb
int3
cmp
jge
mov
ret
imul
push
pop
out
xorb
inc
outsb
push
bound
dec
and
jl
jne
push
adc
cmp
mov
cmpb
arpl
xor
dec
dec
mov
cmpsb
inc
fsubrs
hlt
out
fidivrl
hlt
fadds
testl
and
cs
movsb
add
adc
cmpsb
push
push
push
addr16
lods
loope
iret
mov
lds
insl
xchg
shlb
repz
add
or
jae
shrb
aaa
seta
aaa
adc
cmp
inc
adc
gs
push
mov
outsb
dec
test
ret
and
outsb
sub
inc
pop
das
xchg
adc
xchg
xchg
loop
cmpsl
add
adc
pop
fucompp
cmp
mov
mov
xchg
mov
pop
dec
out
subb
rcr
sub
fadds
adc
sbb
movsb
jmp
pop
fsubrl
mov
jge
sbb
xor
rcrl
inc
xor
mov
dec
lret
stc
insl
out
xchg
insl
adc
iret
sub
pushl
dec
jns
rclb
pop
pop
insl
push
adc
dec
call
aam
jg
shlb
mov
filds
cmp
mov
dec
mov
mov
mov
cld
pop
cmc
xor
inc
pop
in
int
ja
in
pop
repnz
add
insl
pop
je,pt
nop
push
fwait
imul
not
sbb
or
or
lret
push
or
mov
cmc
ljmp
sub
jae
or
sub
mov
xchg
sub
call
sbb
jae
jecxz
dec
xchg
es
je
mov
sub
pop
or
mov
mov
idivl
dec
in
ja
out
ds
xchg
dec
push
cwtl
mov
shll
xor
xor
bound
test
xchg
ljmp
mov
or
lock
fxch
jns
rclb
mov
sub
filds
out
mov
or
lods
pushf
insl
dec
cmpsl
or
les
mov
ja
sub
push
es
lods
pop
stos
mov
sub
lock
cmp
jle
dec
push
pop
pop
loopne
fldz
sub
mov
adc
clc
mov
mov
add
lcall
xchg
dec
xor
or
push
xlat
fisubs
jmp
pusha
cmpsl
and
mov
scas
dec
inc
jne
or
aas
divl
cs
fdivrp
xchg
adc
sarb
dec
jl
fstpl
cld
les
and
les
sbb
nopl
jbe
ret
cmpsl
add
mov
inc
xchg
dec
or
aas
jmp
mov
test
sbbl
xchg
lcall
lcall
push
jmp
int
int
and
push
addb
xor
fdivl
int3
je
popa
aas
ret
addr16
cli
lock
pushf
rolb
pop
dec
xchg
sbb
adc
enter
lcall
jne
jns
movsb
sbb
dec
adc
icebp
xor
stc
xor
dec
rclb
inc
mov
lods
jle
mov
pop
enter
sbb
xchg
xor
jge
std
mov
fidivs
push
inc
mov
sti
out
jp
adc
mov
daa
insl
lret
push
push
sbb
scas
lahf
dec
pop
push
xlat
in
mov
add
xor
xor
mov
aas
lahf
test
inc
sbb
popf
add
movsb
out
mov
popf
insb
pushf
inc
je
xor
mov
push
push
mov
mov
shll
jle
dec
add
inc
test
les
test
sarl
jns
jmp
xchg
sbb
mov
es
sbbb
jmp
or
or
adc
xor
aam
dec
mov
out
adc
clc
cmp
xchg
mov
rcl
into
dec
cmp
and
repz
push
push
ret
call
mov
lods
inc
sub
sti
cmpsl
inc
lret
jbe
push
lret
xchg
nop
pop
faddl
out
cmpsb
or
jmp
ficoms
mov
xor
lock
sbb
lret
rolb
dec
lahf
add
es
mov
sbb
mov
xor
adc
mov
imul
int3
imul
sbb
or
imul
xor
dec
jae
xor
cltd
adcl
insb
hlt
pop
jns
fs
mov
mov
push
es
push
movsl
aad
jecxz
int
mov
sbb
mov
ljmp
jmp
inc
incb
mov
and
add
and
push
mov
mov
inc
call
icebp
loopne
xchg
jp
das
shrl
lret
inc
pop
add
sbb
outsl
mov
jo
inc
jge
jp
jbe
call
fstpl
stc
push
mov
cwtl
outsl
pop
adc
shll
jne
sti
mov
in
xchg
clc
xor
ss
lods
mov
das
addl
into
push
and
ret
jo
inc
inc
cmp
in
pusha
sub
dec
loopnew
enter
pop
pop
jg
adc
inc
xor
inc
xor
roll
insb
dec
addb
or
out
jge
loopne
push
out
rorb
pop
xor
and
xor
dec
sub
scas
out
sub
fidivrl
sub
stos
xor
fsubrl
scas
subl
mov
push
mov
inc
ret
imul
push
push
shr
inc
mov
mov
mov
pop
lcall
pop
scas
push
sbb
ret
xor
jge
es
lcall
ss
push
mov
bound
faddl
push
rolb
aam
xchg
sbb
imul
jns
push
lea
adc
push
push
jnp
ja
pop
xlat
movsl
inc
mov
inc
stc
popa
sub
call
sub
ret
clc
push
mov
adc
loope
repnz
aam
mov
cmc
xor
inc
or
pop
clc
adc
das
or
in
scas
push
es
fsubrs
xchg
dec
dec
dec
mov
imul
aad
inc
fldenv
mov
adc
mov
movsl
stos
xor
repnz
out
cmp
int
repz
sub
cmpsb
sbb
clc
pop
nop
pop
or
lea
mov
in
push
jle
inc
adc
jae
pop
jo
xchg
dec
fldcw
icebp
mov
add
lods
jl
push
pop
filds
notb
sub
into
cmp
lret
dec
fisttpl
movsb
leave
jno
jecxz
sub
notrack
rcll
cmc
xchg
jle
or
cmp
mov
mov
loopne
mov
pop
stos
cmp
ljmp
xor
or
inc
neg
cltd
fwait
push
jle
adc
sub
and
incl
pop
shrl
dec
loopne
shrl
mov
mulb
ja
in
sub
mov
jp
dec
mov
outsb
popf
mov
xor
test
xor
repnz
or
add
ja
cmp
mov
aas
jno
and
adc
pop
inc
loopne
adc
inc
das
adc
imul
std
or
sarl
sub
sub
lods
out
rcr
pop
das
adc
xchg
lea
arpl
stos
xchg
loope
fs
jl
add
cmovbe
mov
mov
ss
movsl
pop
aam
xor
jg
push
mov
int3
fbld
mov
frstor
push
dec
enter
out
les
sbb
xchg
subb
aaa
dec
pusha
in
std
aas
push
movsb
cld
inc
out
fisubs
push
xchg
or
push
scas
into
sahf
in
in
jbe
sbb
pop
leave
cld
jmp
jae
pop
mov
lds
xchg
xor
and
fdecstp
cmc
lcall
pushf
inc
loop
mov
pop
push
push
stc
lods
add
outsb
jle
fidivl
xor
pop
jecxz
fwait
add
jns
ss
popa
int3
out
pop
xchg
das
mov
cmpl
sar
push
pop
adcl
mov
mov
fwait
cmc
cmp
inc
popf
xchg
pop
mov
inc
rdpmc
fmuls
fdivl
mov
or
or
fs
pop
js
repz
mov
cmc
lret
push
nop
stc
andl
sti
jno
sub
mov
inc
jl
mov
cmp
xchg
daa
xchg
xchg
fisubrl
or
inc
dec
and
add
pop
jmp
push
loop
pop
fwait
xchg
lahf
or
pusha
adc
cmp
dec
in
pop
pop
and
gs
test
or
outsb
xor
mov
push
mov
stos
mov
cltd
xchg
ja
mov
addr16
ror
or
xchg
mov
cs
mov
mov
inc
mov
mov
sub
pusha
push
hlt
adc
pop
fs
mov
popa
dec
mov
xor
or
aas
pop
je
out
pusha
push
dec
dec
sub
push
mov
loop
sbb
sub
jbe
xchg
out
and
pop
add
jmp
stos
cs
arpl
or
jb
ss
cli
xor
mov
jl
ljmp
sbb
mov
xchg
cmp
js
push
aam
or
idivb
mov
xchg
rcr
js
dec
aas
pusha
jp
adc
inc
in
loope
jno
pop
iret
int3
add
cmp
stos
mov
stos
inc
loop
adc
dec
mov
nop
les
inc
fidivrs
scas
je
dec
adc
sub
roll
dec
jle
and
jmp
dec
gs
cmpsl
or
inc
imul
inc
cmpsl
shlb
sub
out
hlt
mov
cld
inc
adcb
jmp
inc
addr16
mov
lods
xchg
mov
incb
pushf
fldenv
aas
mov
cs
adcb
dec
mov
rorb
dec
fnstenv
loopne
mov
mov
enter
andb
cmp
testl
sbb
xor
es
aam
mov
movsl
pop
fnstsw
pop
xchg
sbb
repz
vcvtpd2dqx
cld
andb
mov
xchg
mov
dec
bound
int
or
jns
sub
and
xchg
sahf
inc
mov
jle
imul
mov
sub
inc
mov
jb
stc
add
cli
or
dec
push
mov
cmp
test
push
lea
mov
insl
pop
xor
push
pushf
xor
or
xor
lea
or
loop
pop
ret
js
in
rcrl
movsb
iret
test
das
pushf
push
arpl
adc
je
jns
out
shll
add
and
and
xor
mov
inc
jmp
jne
or
xchg
icebp
add
xchg
inc
lea
and
adc
mov
add
xor
nop
rcll
out
adc
xor
stos
mov
out
and
jno
inc
arpl
cmp
mov
pop
xor
push
push
rdmsr
jp
inc
or
or
fsubl
out
mov
std
sub
inc
jne
pop
pop
aaa
les
setle
add
sti
cmpsb
lods
xchg
pop
sub
jns
lret
add
and
mov
xor
test
faddl
and
jne
imul
fcmovnu
sarb
imul
adc
add
xlat
xlat
add
cmc
dec
fstps
or
lret
cmpb
insb
jno
loop
push
jp
out
xor
pop
inc
sarl
sbb
mov
leave
js
pop
js
mov
and
pop
sub
xchg
std
add
inc
adc
inc
sti
pop
in
cmp
sub
cmp
cli
inc
push
pop
sbb
test
mov
dec
lds
loop,pt
or
add
xchg
or
mov
clc
mov
stos
insb
mov
dec
cld
lcall
adc
cmp
mov
mov
sub
fildl
xor
shl
ja
sbb
jmp
das
in
and
and
lahf
movsb
inc
push
sub
or
pop
inc
pop
mov
icebp
imul
lods
shll
std
pusha
mov
mov
mov
psadbw
and
nop
xchg
call
outsl
add
jb
scas
std
sti
mov
mov
push
adc
and
loop
popf
xchg
xchg
and
jbe
xor
dec
dec
mov
inc
pop
movsl
sub
and
imul
jmp
jg
inc
gs
dec
add
jle
bound
xchg
or
xlat
inc
aad
pop
xlat
sbb
or
lcall
and
mov
dec
je
ret
fwait
xor
add
lcall
jle
and
rorb
sub
cmc
jecxz
cmp
jl
mov
lcall
roll
pop
sbbl
loopne
jecxz
xchg
cmp
mov
and
nop
out
lock
jg
jmp
pusha
add
jl
out
loop
loope
jne
lcall
mov
push
push
in
adc
cmp
mov
add
ds
cwtl
dec
ja
inc
stos
or
ja
icebp
iret
sub
iret
sub
add
add
outsl
movsb
dec
inc
movsb
insl
dec
lea
adc
add
inc
mov
inc
mov
repz
out
add
sti
fidivrs
repnz
jecxz
mov
loopne
sub
int
cld
stos
mov
cltd
push
push
lahf
mov
data16
nop
inc
std
sarb
dec
inc
dec
aam
jbe
cli
lahf
lock
decb
pop
and
xor
out
daa
jge
out
adc
lods
lds
sbb
mov
push
test
sti
xor
inc
adc
cld
sub
shlb
out
mov
and
test
repz
fs
sbb
xor
jmp
call
mov
sbb
dec
xchg
in
xchg
test
stos
push
jbe
sub
pop
rcrb
jge
lock
in
stc
outsb
mov
jmp
mov
shll
mov
lret
insl
mov
imul
push
jmp
jno
subb
int3
rclb
movsb
add
xchg
lock
cld
das
std
or
mov
xor
push
xchg
loope
mov
insb
nop
push
in
sbb
ret
adc
out
call
dec
fdivrl
aaa
jmp
outsl
pop
hlt
push
lcall
pop
in
mov
sub
mov
call
mov
sbb
xchg
mov
cmp
cmpsb
fldt
mov
pop
cltd
sahf
and
xchg
push
movb
push
jmp
loopne
aam
xchg
push
add
insb
fucomip
jp
pusha
ja
sbb
jmp
mov
enter
movsl
pop
mov
enter
adc
pop
jbe
imul
or
mov
xor
mov
mov
lds
ljmp
mov
fmuls
dec
jbe
lcall
in
cmovns
inc
repnz
cmpsl
cwtl
push
fwait
mov
mov
fcompl
scas
cmp
mov
divb
push
lahf
sarl
in
mov
aaa
test
push
and
jmp
cwtl
xchg
adc
mov
stos
jge
lds
adcl
jge
sbb
mov
xor
pop
adc
es
or
jb
ds
xor
pushf
gs
mov
orl
in
jp
aad
add
in
mov
lock
xor
cmpb
pcmpgtb
test
jle
out
inc
push
rclb
fdivl
jg
icebp
dec
pop
xchg
adc
xor
stc
sti
test
cli
popf
mov
mov
and
add
aas
enter
push
lods
or
mov
mov
push
fs
add
xlat
pop
and
out
mov
iret
sbb
mov
test
pop
mov
adc
sahf
jge
sbb
mov
es
lods
mov
pusha
les
dec
mov
fstpt
hlt
fs
repnz
pusha
sub
push
test
push
mov
jl
cwtl
call
lahf
and
insb
sahf
sbb
jl
xchg
cltd
and
sub
shrl
out
mov
xor
push
mov
push
xlat
ds
ja
popa
outsl
and
in
adc
pop
add
mov
lret
nop
das
and
outsb
idivb
xchg
dec
mov
or
rolb
mov
addb
xor
sbb
movsl
in
sahf
out
gs
mov
jmp
cs
push
adc
xchg
jl
sarl
ss
jmp
repz
and
jp
xchg
mov
lds
sbb
sbb
aam
mov
dec
xchg
jmp
aam
mov
icebp
adc
cmp
rorb
push
cmp
jge
dec
inc
push
je
xor
stos
int3
xchg
mov
aam
std
sub
pop
rorl
mov
adc
ljmp
mov
pop
cltd
lods
enter
cmp
or
sbb
push
jecxz
pop
or
lods
in
ret
sbb
loopne
test
xchg
adc
gs
loope
jle
push
lret
stc
in
fisttpl
xchg
cmpsb
mov
dec
adc
shr
in
mov
insb
or
and
sarl
sbb
mov
js
adc
in
es
xchg
rcll
test
mov
sub
and
rcrl
inc
rolb
cs
movd
sbb
rcl
xchg
cltd
outsb
jg
fldt
rcrl
daa
mov
in
lret
fstpt
adc
mov
popf
and
sbb
sub
movsb
or
sbb
add
shrb
call
mov
hlt
shll
xlat
bound
sti
or
fstpt
inc
add
out
rcrb
dec
popf
xchg
cmc
outsb
adc
xchg
adc
push
rcrl
cmp
cli
in
adc
sbb
push
mov
dec
inc
adc
lods
call
outsb
dec
fists
fstl
or
movsb
inc
pusha
xchg
or
mov
lret
fdivrp
stos
sub
fnstenv
mov
rclb
into
push
sub
ja
gs
and
cmp
sbb
push
stc
data16
std
jl
fwait
xor
adcl
insb
mov
jle
xchg
sbb
stos
mov
aad
iret
mov
out
cmpsb
test
inc
scas
fisttps
xor
adc
or
mov
push
adc
pushf
adc
mov
lcall
das
das
ror
testb
fdivrl
xchg
cmpsb
xchg
mov
scas
gs
cmp
je
push
xor
pop
or
loopne
inc
stos
jb
ljmp
xor
xor
and
inc
hlt
lds
dec
or
pop
and
js
lods
cmp
rorb
pop
dec
hlt
inc
mov
mov
test
bound
test
or
lcall
movsl
mov
jae
inc
jle
hlt
push
jecxz
repnz
adc
dec
add
or
in
incb
cmp
adc
mov
and
lea
movsl
mov
es
out
mov
sbb
insb
xchg
loop
fimuls
test
stos
push
pop
pop
in
rcrb
xorl
mov
or
xchg
ss
adc
test
setae
popf
loop
jl
subl
lea
pop
pushl
int3
cmp
pop
and
insb
jnp
cltd
pop
loope
pop
or
insb
xorl
mov
mov
or
mov
and
daa
cmp
and
shl
cwtl
into
pop
dec
shrd
push
push
mov
andb
and
mov
mov
enter
out
dec
outsl
cmpsl
imul
aaa
jp
imul
inc
bound
fldcw
jle
test
mov
mov
js
mov
pop
pop
int3
push
aad
imul
jmp
es
push
dec
push
pop
pop
pop
adc
mov
jmp
shl
xor
movl
stc
loope
pop
mov
push
aaa
jnp
pop
enter
xchg
aaa
divb
xchg
push
roll
xorb
xchg
std
or
outsl
out
clc
iret
xor
nop
push
push
dec
mov
jbe
mov
push
pop
push
pop
jae
aad
and
jp
in
push
popf
lods
lahf
dec
mov
ret
insb
push
pop
cmp
out
cmp
cmpsl
add
mov
adc
and
mov
iret
push
mov
xor
out
push
push
shll
pop
pushf
xor
jl
mov
push
mov
ret
lds
fwait
outsl
sbb
div
jnp
test
dec
jge
mov
jne
pop
xchg
ficompl
mov
or
lahf
sub
leave
push
jne
test
mov
pop
cmpsb
dec
fcom
arpl
es
int
in
push
lods
rcrl
pop
xor
cli
addr16
ss
push
fisubs
cmp
push
shlb
inc
cmp
outsl
and
push
sbb
mov
les
xchg
push
mov
mov
call
dec
outsl
frstpm(287
fdivrs
das
out
je
push
jp
test
repnz
or
shr
sahf
adc
scas
inc
cmp
or
inc
jae
imul
in
xchg
aas
icebp
add
js
es
inc
inc
mov
cmp
je
xor
mov
or
imul
shl
adc
xor
or
jno
pop
xchg
mov
mov
lret
dec
ficoms
add
and
adc
push
push
jne,pt
push
jl
sub
nop
mov
icebp
fwait
outsb
and
popf
cmc
cmp
xchg
dec
incb
mov
cmp
sbb
std
push
adc
inc
in
hlt
sahf
shrb
push
mov
shll
psubusw
mov
out
or
pop
jns
and
ficoml
je
arpl
inc
das
push
fistpl
mov
fistps
pop
mov
mov
cmp
out
popa
bnd
fidivrs
iret
andl
sub
or
out
mov
push
adc
sub
aaa
jge
push
int
xor
cmp
movsb
call
pop
add
insb
and
xchg
cld
sub
mov
cltd
adc
ret
sbb
lock
jns
jecxz
loope
scas
push
jns
testl
inc
sub
sbb
cmp
push
jb
or
mov
jge
loopne
out
inc
xchg
aas
and
sbb
xor
in
inc
mov
test
sbb
les
adc
icebp
sub
scas
xor
fstpt
add
inc
dec
gs
xchg
adc
cmp
jmp
inc
sbb
ds
sub
jge
mov
repz
dec
add
cmp
or
out
xchg
cmp
setp
mov
int
xchg
push
dec
insl
dec
inc
test
into
fidivs
jge
imul
inc
sbb
ja
vsqrtpd
push
dec
dec
pop
notl
inc
pop
out
sub
andb
adc
adc
out
mov
mov
jnp
inc
lds
mov
cmpsb
scas
and
mov
fistpl
orb
push
out
mov
jno
sub
xor
xchg
xchg
add
jbe
mov
mov
or
and
ja
pop
fistps
out
mov
sbb
orl
ror
mov
les
lahf
cmp
lock
adc
lods
push
xchg
jp
dec
dec
ds
mov
add
mov
pushf
add
push
sti
lock
mov
out
je
lock
test
jbe
inc
lret
fs
inc
dec
cmc
stc
push
push
add
lods
gs
sub
sub
es
sub
ret
pop
push
call
je
int3
mov
daa
pop
in
fdivp
mov
aas
mov
int3
xchg
fldt
test
inc
ss
ja
xor
xlat
iret
push
in
mov
insl
add
test
loop
mov
add
jo
jo
xchg
xchg
leave
push
and
adc
and
mov
cmp
ja
xor
jl
and
and
test
rorb
sub
int3
in
ret
xchg
loopne
std
xor
mov
sub
dec
sub
and
mov
leave
mov
sbb
xchg
cltd
push
jl
outsl
stos
test
xchg
jo
movl
inc
dec
sub
stos
push
fistps
test
push
adc
mov
xchg
pop
mov
xor
lods
pop
cs
inc
rorb
imul
aam
dec
push
mov
movlps
rcll
xorl
out
xchg
fwait
loopne
enter
dec
leave
jl
xor
mov
into
fildl
arpl
push
pop
xchg
xchg
xor
leave
push
jbe
push
pushf
les
outsb
jp
cli
or
jno
xchg
movsl
subl
mov
lock
ds
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
dec
loopne
jge
repnz
data16
sarb
add
pop
inc
mulb
clc
test
xchg
jmp
inc
sbb
sub
pushl
mov
mov
loop
insl
and
iret
sub
inc
bound
cld
pushl
sbb
sbb
push
inc
imul
or
test
lcall
push
xchg
loop
adc
mov
pusha
test
testb
xlat
jp
call
mov
push
cvtsi2ssl
lret
and
pop
mov
in
push
push
sbb
dec
and
gs
sbb
dec
imul
into
jbe
lds
dec
adc
cmp
inc
jo
cmpsb
outsl
call
outsl
lock
mov
hlt
jne
sub
mov
and
dec
rol
xchg
sahf
push
idivb
movsb
outsb
sti
xchg
xor
leave
adc
es
fstl
in
jae
mov
int3
std
xchg
pop
shlb
adc
mov
mov
int3
mov
add
sbb
dec
jns
xchg
or
inc
push
add
xchg
stos
repnz
fcom
sub
fldenv
cli
push
sbb
repz
in
mov
sldt
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
insl
add
insl
add
insl
