push
call
pop
cmp
jbe
cmpb
je
push
push
push
call
mov
xor
inc
ret
xor
ret
xor
push
push
push
push
call
add
dec
neg
sbb
inc
ret
push
mov
push
call
pop
ret
push
mov
sub
push
push
push
push
push
push
call
add
push
call
pop
mov
movl
mov
mov
call
test
je
call
test
je
movl
jmp
mov
xor
mov
mov
dec
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
mov
dec
dec
mov
cmpl
jae
mov
movzbl
mov
and
movzwl
and
movzbl
add
mov
add
mov
jmp
push
push
pushl
call
mov
xor
inc
mov
dec
mov
cmp
je
lea
jmp
mov
mov
mov
rep
call
push
call
pop
pop
leave
ret
mov
xchg
insb
cmp
xor
xor
xor
xor
inc
cmp
cmp
xor
ss
xor
ss
xor
xor
cmp
xor
xor
xor
inc
xor
xor
ss
ss
aaa
xor
inc
inc
ss
aaa
aaa
xor
xor
xor
xor
xor
ss
xor
xor
xor
ss
ss
xor
xor
xor
aaa
xor
cmp
xor
xor
xor
aaa
aaa
xor
cmp
xor
xor
inc
xor
xor
xor
inc
xor
inc
cmp
aaa
inc
xor
ss
xor
cmp
inc
cmp
xor
xor
inc
xor
cmp
xor
xor
ss
xor
xor
xor
xor
ss
xor
xor
cmp
xor
xor
xor
xor
xor
inc
xor
ss
inc
inc
inc
xor
dec
or
xor
xor
inc
xor
cmp
inc
xor
cmp
xor
inc
inc
xor
cmp
insb
inc
inc
inc
inc
xor
xor
inc
insb
insb
xor
xor
dec
xor
xor
inc
xor
inc
inc
dec
inc
xor
cmp
insb
aaa
inc
cmp
cmp
inc
inc
dec
cmp
inc
xor
inc
inc
xor
cmp
inc
insb
cmp
dec
xor
inc
xor
ss
cmp
inc
xor
aaa
inc
cmp
xor
dec
inc
dec
or
jl
jl
inc
xor
inc
inc
xor
dec
inc
xor
or
inc
dec
jl
cmp
inc
inc
inc
xor
inc
inc
dec
xor
xor
inc
inc
jl
inc
cmp
cmp
inc
xor
inc
xor
or
xor
inc
inc
xor
ss
or
xor
inc
xor
xor
inc
cmp
ss
dec
inc
cmp
cmp
inc
inc
xor
cmp
or
inc
aaa
inc
xor
xor
inc
inc
inc
inc
xor
xor
cmp
xor
xor
dec
cmp
cmp
xor
aaa
dec
aaa
aaa
aaa
xor
aaa
xor
dec
inc
aaa
aaa
aaa
aaa
or
xor
dec
cmp
xor
inc
or
inc
cmp
cmp
dec
cmp
cmp
inc
aaa
inc
xor
inc
xor
inc
cmp
jl
xor
aaa
inc
cmp
aaa
cmp
inc
inc
inc
cmp
cmp
inc
dec
inc
inc
xor
dec
xor
xor
dec
cmp
or
insb
inc
or
xor
xor
xor
xor
inc
xor
xor
or
cmp
inc
cmp
dec
xor
xor
insb
xor
cmp
xor
cmp
inc
xor
xor
dec
cmp
inc
or
xor
xor
xor
gs
aaa
xor
inc
xor
jl
inc
xor
cmp
cmp
xor
cmp
xor
cmp
xor
xor
jl
xor
xor
cmp
aaa
xor
xor
cmp
xor
sub
xor
aaa
cs
xor
xor
outsl
arpl
xor
ds
xor
gs
and
xor
outsl
outsb
xor
jge
jge
aaa
insb
pop
imul
xor
imul
jnp
xor
xor
outsb
sub
jns
xor
fs
imul
data16
imul
sub
jnp
outsb
jge
jo
jne
jo
aaa
xor
ss
inc
inc
xor
cmp
xor
xor
inc
xor
xor
aaa
ss
xor
xor
xor
inc
xor
ss
aaa
ss
ss
xor
xor
xor
cmp
ss
xor
xor
aaa
xor
xor
inc
xor
xor
xor
xor
cmp
xor
ss
inc
cmp
xor
xor
cmp
dec
xor
jl
xor
insb
or
cmp
dec
xor
dec
xor
xor
xor
xor
xor
ss
cmp
xor
xor
xor
xor
xor
xor
cmp
or
insb
inc
cmp
xor
dec
cmp
xor
cs
ds
xor
insb
xor
xor
xor
xor
xor
push
cmp
xor
xor
sub
xor
xor
cmp
cmp
je
xor
outsb
inc
je
inc
inc
imul
jo
imul
xor
xor
arpl
cmp
cs
cmp
xor
insb
xor
inc
aaa
pop
or
and
je
cmp
cmp
pop
jb
dec
xor
jne
cmp
cmp
pop
jb
xor
xor
inc
inc
cmp
bound
gs
imul
je
jae
jo
jns
inc
xor
aaa
xor
xor
jl
xor
cmp
inc
inc
cmp
inc
cmp
inc
inc
jl
xor
cmp
cmp
cmp
xor
aaa
aaa
jl
dec
xor
xor
inc
cmp
dec
cmp
inc
xor
cmp
aaa
xor
xor
xor
or
inc
insb
xor
xor
dec
xor
cmp
xor
insb
inc
inc
xor
cmp
inc
insb
xor
inc
dec
aaa
xor
or
jl
cmp
xor
xor
xor
xor
or
xor
inc
xor
inc
xor
or
or
cmp
insb
inc
cmp
cmp
aaa
xor
inc
inc
dec
xor
ss
cmp
inc
jl
aaa
dec
xor
inc
xor
xor
cmp
xor
xor
jl
aaa
inc
inc
xor
jl
xor
xor
dec
cmp
dec
aaa
inc
xor
xor
xor
dec
cmp
inc
inc
dec
dec
inc
inc
insb
xor
ss
inc
insb
cmp
insb
cmp
inc
inc
cmp
xor
cmp
inc
cmp
aaa
inc
inc
aaa
cmp
inc
inc
xor
insb
cmp
aaa
xor
xor
xor
or
inc
cmp
inc
inc
dec
inc
inc
dec
dec
xor
aaa
aaa
jl
xor
xor
inc
jl
cmp
xor
inc
cmp
or
aaa
inc
xor
inc
xor
inc
aaa
dec
dec
xor
cmp
aaa
jl
cmp
insb
inc
dec
xor
pop
inc
inc
xor
sub
and
insl
inc
inc
jo
push
xor
xor
inc
imul
cmp
imul
insb
cmp
inc
je
insb
cmp
cmp
jns
aaa
jb
xor
jb
jb
cmp
outsl
outsb
bound
je
xor
imul
jns
xor
imul
jns
arpl
ds
or
and
popa
inc
arpl
je
xor
outsb
outsb
das
sub
daa
outsw
jo
outsl
outsb
or
sub
popa
daa
insl
je
jae
popa
popa
daa
outsb
daa
xor
xor
das
sub
sub
outsb
pop
outsb
sub
sub
popa
outsb
insb
das
popa
daa
insl
jne
outsl
daa
jne
cmp
popa
jne
or
sub
daa
outsl
outsb
sub
data16
daa
xor
daa
jne
insl
sub
ss
jo
popa
das
insl
jns
xor
sub
sub
sub
jo
jne
sub
jne
popa
sub
jae
outsb
cmp
aaa
aaa
cmp
fs
cmp
xor
imul
sub
outsl
xor
cmp
push
push
xor
cmp
xor
cmp
ds
insl
aaa
xor
or
je
aaa
js
and
xor
jns
jb
jae
jae
outsb
xor
inc
cmp
outsb
and
and
cmp
inc
xor
inc
xor
xor
cmp
inc
inc
inc
xor
xor
aaa
aaa
cmp
jl
aaa
inc
xor
aaa
cmp
inc
cmp
cmp
inc
xor
insb
xor
xor
xor
inc
xor
cmp
xor
inc
or
dec
dec
inc
xor
insb
xor
inc
inc
jl
inc
cmp
dec
xor
xor
dec
inc
dec
inc
xor
inc
or
cmp
xor
xor
xor
xor
xor
xor
inc
xor
inc
xor
inc
dec
cmp
dec
xor
xor
xor
xor
or
xor
inc
xor
inc
jl
xor
imul
jae
inc
cmp
xor
inc
dec
cmp
aaa
cmp
gs
pop
jae
inc
xor
jl
xor
or
popa
xor
bound
xor
jae
xor
xor
jae
xor
je
xor
je
xor
dec
xor
xor
or
jl
inc
xor
inc
cmp
xor
xor
xor
sub
xor
je
xor
xor
arpl
aaa
cmp
inc
sub
inc
inc
insb
inc
inc
xor
cmp
cmp
arpl
inc
cmp
jl
xor
cmp
cmp
cmp
inc
xor
xor
xor
xor
cmp
inc
insb
xor
inc
inc
cmp
cmp
inc
jl
aaa
inc
inc
dec
or
inc
aaa
xor
insb
inc
inc
inc
xor
inc
xor
xor
ss
xor
inc
inc
dec
dec
or
ss
dec
inc
inc
insb
inc
cmp
inc
dec
inc
insb
inc
xor
inc
inc
dec
dec
dec
inc
cmp
cmp
insb
inc
inc
inc
cmp
cmp
xor
xor
or
dec
or
inc
cmp
insb
or
inc
cmp
inc
inc
inc
jl
inc
cmp
inc
inc
xor
inc
jl
inc
inc
jl
inc
inc
inc
inc
inc
inc
cmp
cmp
or
inc
inc
xor
inc
inc
or
xor
cmp
xor
inc
cmp
xor
xor
xor
cmp
inc
cmp
cmp
dec
je
and
outsl
xor
xor
popa
je
and
xor
data16
popa
or
and
cmp
cmp
insb
jb
xor
data16
and
dec
jo
jb
je
gs
cmp
xor
and
cmp
popa
xor
and
jae
push
and
xor
popa
outsb
xor
cmp
cmp
xor
inc
cmp
cmp
xor
inc
cmp
inc
jl
inc
cmp
inc
dec
xor
cmp
inc
xor
inc
inc
xor
xor
cmp
inc
inc
cmp
cmp
inc
inc
or
inc
cmp
cmp
xor
insb
cmp
dec
inc
inc
inc
dec
dec
inc
cmp
xor
inc
inc
inc
xor
dec
xor
inc
cmp
dec
cmp
inc
jl
cmp
cmp
inc
xor
inc
jl
inc
xor
xor
jl
dec
dec
inc
cmp
cmp
inc
inc
inc
inc
inc
insb
inc
cmp
xor
dec
inc
xor
insb
inc
inc
inc
inc
inc
insb
or
cmp
inc
xor
inc
insb
cmp
inc
xor
dec
cmp
inc
inc
inc
inc
inc
xor
inc
xor
cmp
inc
inc
inc
inc
cmp
aaa
and
or
dec
and
je
cmp
cmp
xor
xor
xor
xor
insl
cmp
jb
xor
xor
xor
cmp
addr16
push
je
xor
xor
or
dec
cmp
gs
data16
pop
or
cmp
and
insl
xor
or
insl
xor
xor
jae
xor
aaa
jae
and
xor
or
cmp
jae,pt
dec
xor
jb
xor
imul
xor
cmp
imul
xor
and
je
pop
je
cmp
and
or
insb
jb,pn
xor
jae
xor
or
cmp
inc
inc
jl
inc
cmp
inc
inc
xor
jbe
inc
inc
inc
xor
and
inc
or
inc
inc
inc
inc
outsl
inc
xor
xor
imul
inc
xor
inc
or
xor
cmp
xor
xor
inc
dec
inc
xor
imul
inc
cmp
xor
ss
popa
inc
inc
cmp
xor
xor
xor
xor
xor
jl
inc
jo
dec
or
inc
outsb
inc
cmp
outsb
dec
inc
inc
inc
xor
ss
xor
xor
inc
cmp
arpl
inc
inc
inc
xor
inc
or
xor
cs
xor
dec
xor
inc
je
cmp
inc
jl
jl
xor
cmp
cmp
xor
jl
inc
inc
je
xor
dec
inc
jae
sub
cmp
xor
inc
outsl
cmp
sub
dec
jae
sub
dec
inc
jae
imul
dec
outsb
cmp
sub
cmp
je
jae
je
push
arpl
fs
jae
inc
insb
outsl
inc
pop
insb
inc
inc
outsl
inc
xor
xor
aaa
inc
xor
ss
aaa
inc
inc
xor
inc
sub
cmp
inc
inc
xor
inc
inc
xor
aaa
inc
je
cmp
or
xor
xor
xor
ss
insb
dec
insb
xor
inc
xor
cmp
inc
or
cmp
inc
xor
inc
cmp
xor
inc
or
xor
inc
cmp
xor
inc
cmp
inc
xor
xor
jl
inc
inc
cmp
inc
inc
inc
cmp
xor
xor
inc
cmp
inc
inc
inc
insb
xor
cmp
xor
xor
jl
inc
inc
dec
inc
xor
inc
cmp
xor
xor
xor
cmp
xor
jl
dec
inc
cmp
cmp
cmp
insb
cmp
inc
cmp
xor
cmp
inc
inc
dec
jl
or
inc
xor
cmp
or
xor
xor
xor
dec
xor
xor
xor
inc
xor
xor
inc
inc
cmp
dec
or
inc
inc
xor
ss
xor
xor
inc
cmp
inc
ss
ss
ss
xor
cmp
xor
inc
xor
xor
xor
ss
xor
xor
aaa
xor
ss
xor
xor
inc
inc
inc
inc
xor
xor
ss
xor
xor
aaa
xor
inc
aaa
xor
inc
inc
cmp
ss
inc
xor
ss
xor
inc
xor
ss
xor
xor
xor
aaa
xor
inc
xor
ss
aaa
xor
xor
ss
inc
xor
xor
xor
xor
xor
xor
inc
ss
xor
aaa
ss
ss
aaa
xor
inc
ss
xor
xor
inc
cmp
xor
inc
xor
xor
xor
inc
xor
aaa
xor
inc
xor
inc
xor
cmp
inc
xor
xor
xor
xor
inc
xor
inc
pop
popa
insl
bound
outsb
jb,pn
insb
pop
push
bound
sub
fs
jae,pn
sub
jb
sub
and
and
outsb
je
sub
bound
outsb
jbe
jae
gs
pop
outsb
fs
outsb
and
arpl
and
bound
gs
je
jp
gs
sub
sub
and
gs
jae,pn
cs
outsl
cs
imul
pop
outsb
popa
xor
and
jnp
jnp
arpl
outsb
and
and
jns
insb
popa
sub
popa
bound
cs
arpl
jnp
outsb
bound
jge
arpl
jge
fs
bound
outsb
jnp
jb
and
and
bound
outsl
outsl
insb
jae,pn
imul
ja
gs
jge
gs
outsb
je
imul
jge
and
popa
cs
and
imul
outsb
je
sub
sub
xor
imul
xor
xor
cmp
cmp
cmp
cmp
dec
inc
or
xor
ss
inc
ss
insb
cmp
xor
or
xor
xor
ss
aaa
inc
cmp
ss
xor
aaa
inc
ss
or
inc
inc
xor
inc
jl
ss
xor
or
dec
jl
insb
xor
xor
inc
xor
inc
dec
xor
insb
xor
aaa
xor
xor
inc
xor
inc
cmp
xor
jl
insb
xor
xor
cmp
or
aaa
inc
or
ss
inc
xor
xor
ss
xor
ss
jl
xor
aaa
ss
jl
ss
xor
xor
inc
insb
aaa
inc
inc
cmp
inc
cmp
inc
dec
cmp
ss
inc
cmp
dec
aaa
inc
or
dec
cmp
cmp
inc
inc
inc
dec
inc
ss
inc
xor
jl
xor
inc
xor
xor
xor
xor
cmp
aaa
dec
aaa
xor
xor
inc
inc
xor
xor
inc
xor
xor
cmp
cmp
xor
inc
inc
or
inc
inc
xor
xor
inc
xor
dec
xor
dec
cmp
xor
dec
xor
inc
inc
cmp
xor
cmp
cmp
xor
cmp
inc
cmp
dec
inc
insb
inc
xor
inc
xor
cmp
cmp
jl
cmp
xor
cmp
inc
xor
jl
xor
dec
xor
xor
dec
or
jl
inc
inc
inc
inc
inc
xor
inc
cmp
cmp
inc
dec
xor
inc
cmp
xor
cmp
jl
or
cmp
inc
insb
cmp
inc
inc
xor
xor
insb
inc
dec
inc
cmp
cmp
inc
xor
or
inc
gs
xor
cmp
jl
or
inc
ss
insb
xor
inc
aaa
inc
cmp
ds
xor
pop
arpl
dec
inc
cmp
inc
cmp
inc
sub
xor
xor
xor
inc
dec
ds
inc
je
xor
inc
inc
xor
xor
xor
inc
cmp
insb
inc
inc
insb
ss
inc
cmp
inc
cmp
xor
inc
inc
arpl
or
xor
inc
inc
xor
sub
inc
jo
cmp
inc
aaa
cmp
push
inc
ss
inc
cmp
cmp
inc
cmp
dec
cmp
inc
inc
xor
ss
inc
or
jl
cmp
inc
inc
cmp
xor
inc
cmp
inc
inc
ss
xor
xor
xor
insb
inc
xor
xor
xor
xor
jns
xor
inc
cmp
sub
aaa
xor
xor
xor
or
inc
xor
cmp
ss
xor
inc
sub
outsb
xor
xor
xor
xor
xor
aaa
aaa
inc
dec
xor
ss
gs
ss
sub
outsb
xor
jne
xor
xor
aaa
xor
xor
cmp
xor
xor
inc
xor
xor
xor
inc
xor
xor
inc
inc
xor
xor
dec
or
insb
outsb
xor
cmp
xor
xor
cmp
inc
inc
or
cmp
insb
xor
cmp
xor
inc
inc
outsl
cmp
cmp
cmp
inc
inc
cmp
cmp
cmp
popa
cmp
xor
aaa
cmp
imul
dec
cmp
inc
cmp
cmp
xor
inc
jl
xor
jl
inc
inc
dec
inc
cmp
jl
aaa
cmp
xor
xor
xor
inc
cmp
dec
cmp
aaa
aaa
xor
xor
inc
inc
insb
xor
insb
aaa
or
dec
xor
cmp
dec
dec
xor
jl
xor
xor
xor
xor
inc
inc
xor
inc
jl
aaa
inc
cmp
xor
or
inc
xor
xor
cmp
cmp
xor
dec
ss
aaa
or
insb
xor
xor
aaa
or
xor
inc
xor
jl
dec
aaa
inc
inc
xor
xor
cmp
xor
aaa
xor
aaa
xor
cmp
inc
or
aaa
insb
inc
inc
xor
xor
inc
aaa
inc
inc
aaa
inc
xor
insb
insb
cmp
ss
xor
xor
cmp
cmp
dec
aaa
cmp
inc
xor
inc
jl
xor
xor
inc
inc
dec
inc
inc
inc
xor
inc
xor
inc
inc
xor
inc
xor
dec
inc
xor
dec
xor
inc
or
xor
xor
xor
xor
xor
cmp
dec
xor
cmp
xor
xor
inc
inc
inc
xor
xor
xor
xor
xor
xor
ss
xor
xor
xor
insb
dec
insb
inc
inc
inc
jl
inc
jl
cmp
inc
inc
xor
or
inc
xor
ss
inc
inc
jl
xor
xor
cmp
xor
cmp
dec
inc
xor
inc
and
ss
inc
xor
insb
xor
xor
jae
inc
inc
insb
inc
inc
inc
xor
jae
sub
popa
inc
imul
inc
je
aaa
jb
inc
xor
inc
ss
inc
dec
sub
xor
jo
ss
cmp
inc
inc
xor
xor
popa
inc
xor
inc
xor
ss
imul
xor
inc
or
dec
dec
dec
inc
popa
outsb
sub
imul
ss
xor
xor
arpl
or
insb
xor
inc
or
dec
inc
cmp
ss
xor
xor
inc
inc
dec
cmp
inc
xor
inc
inc
inc
cmp
or
dec
inc
je
je
je
cmp
inc
inc
inc
inc
je
xor
and
jb
popa
and
inc
inc
pop
inc
inc
or
jae
je
cmp
inc
dec
arpl
cmp
outsb
je
dec
or
xor
pop
imul
outsl
gs
cmp
outsb
cmp
or
cmp
sub
xor
inc
xor
inc
jl
cmp
inc
cmp
cmp
sub
cmp
inc
sub
inc
xor
xor
sub
inc
je
insb
cmp
insb
jae
je
xor
or
je
insb
outsb
cmp
je
inc
dec
and
dec
xor
cmp
jl
xor
cmp
cmp
cmp
insb
xor
inc
xor
xor
gs
dec
popa
arpl
xor
inc
inc
dec
cmp
xor
dec
xor
xor
inc
cmp
xor
xor
dec
inc
ss
cmp
xor
xor
inc
xor
xor
cmp
xor
cmp
inc
xor
cmp
xor
xor
inc
xor
inc
inc
dec
ss
cmp
cmp
dec
inc
inc
xor
xor
cmp
inc
dec
cmp
xor
inc
or
inc
cmp
xor
xor
xor
inc
xor
insb
dec
inc
ss
or
cmp
cmp
insb
insb
jl
dec
xor
inc
cmp
xor
xor
xor
cmp
xor
inc
cmp
xor
xor
cmp
inc
aaa
inc
cmp
aaa
inc
jl
aaa
insb
inc
xor
aaa
inc
cmp
xor
cmp
or
xor
or
ss
dec
cmp
inc
insb
or
aaa
xor
dec
cmp
dec
or
cmp
jl
dec
cmp
cmp
cmp
cmp
cmp
xor
inc
inc
cmp
xor
inc
dec
cmp
xor
dec
aaa
xor
inc
cmp
cmp
inc
cmp
inc
xor
xor
cmp
inc
xor
inc
inc
cmp
xor
dec
xor
xor
xor
xor
inc
or
insb
dec
insb
jl
xor
jl
inc
dec
xor
xor
cmp
xor
cmp
insb
cmp
cmp
inc
aaa
xor
inc
or
xor
inc
inc
dec
cmp
inc
insb
xor
xor
xor
cmp
cmp
xor
xor
aaa
xor
jl
cmp
xor
cmp
xor
inc
cmp
xor
cmp
dec
inc
cmp
cmp
cmp
inc
insb
xor
xor
xor
cmp
cmp
cmp
xor
cmp
cmp
inc
xor
cmp
xor
xor
xor
xor
xor
inc
jl
inc
or
inc
jl
xor
insb
xor
cmp
jl
xor
or
dec
xor
xor
xor
dec
xor
inc
sub
dec
inc
dec
xor
inc
cmp
xor
inc
xor
inc
aaa
xor
xor
cmp
jl
xor
xor
xor
cmp
cmp
xor
insb
xor
xor
cmp
xor
inc
jl
xor
inc
xor
dec
xor
aaa
xor
xor
xor
cmp
cmp
insb
xor
cmp
xor
xor
ss
inc
or
inc
xor
inc
inc
dec
inc
xor
xor
cmp
xor
and
xor
xor
imul
sub
data16
cmp
ss
xor
popa
jb
popa
gs
outsb
imul
and
and
push
pop
xor
jb
xor
xor
xor
outsl
or
jo,pt
inc
push
cmp
xor
outsb
xor
jne
xor
data16
sub
aaa
cmp
jb
je
jae
gs
push
arpl
or
outsb
jne,pn
jne
push
and
arpl
xor
outsb
cmp
arpl
xor
cmp
je
and
xor
xor
outsl
xor
xor
jb
addr16
xor
outsl
gs
jne
and
insl
and
xor
xor
push
outsl
jo
jae
fs
and
cmp
and
aaa
push
bound
xor
xor
or
fs
and
inc
inc
xor
aaa
inc
jl
aaa
xor
inc
xor
dec
je
inc
aaa
xor
aaa
dec
inc
ss
xor
xor
insb
inc
xor
inc
cmp
xor
aaa
inc
inc
inc
or
inc
insb
xor
inc
aaa
aaa
aaa
dec
aaa
inc
aaa
xor
inc
aaa
xor
cmp
inc
dec
inc
dec
dec
xor
or
xor
xor
xor
xor
cmp
inc
cmp
inc
cmp
insb
xor
xor
ss
xor
xor
xor
xor
xor
dec
cmp
inc
xor
inc
dec
dec
xor
xor
dec
xor
insb
xor
inc
xor
inc
inc
xor
xor
inc
inc
inc
xor
xor
xor
xor
xor
xor
xor
xor
cmp
dec
inc
inc
cmp
xor
inc
xor
cmp
xor
imul
outsb
cmp
and
arpl
push
gs
insb
or
outsb
insb
xor
jbe
cs
outsl
imul
xor
outsb
cmp
outsl
je
xor
cmp
cs
and
je
inc
or
je
insb
dec
cmp
imul
xor
or
xor
sub
insb
outsl
outsl
ds
jae
and
fs
jo
jb
cmp
xor
cmp
xor
xor
xor
or
xor
je
xor
xor
inc
gs
cmp
xor
aaa
xor
cmp
xor
xor
inc
inc
ss
cmp
inc
xor
cmp
inc
xor
dec
inc
insb
or
outsl
xor
or
xor
imul
inc
dec
inc
inc
xor
xor
aaa
xor
xor
xor
inc
or
xor
inc
dec
xor
dec
jl
xor
xor
inc
xor
inc
xor
cmp
xor
xor
inc
gs
cmp
inc
je
xor
cmp
xor
inc
xor
inc
xor
xor
xor
inc
cmp
dec
inc
inc
cmp
cmp
dec
inc
xor
dec
aaa
or
xor
xor
insb
xor
xor
inc
xor
xor
cmp
ss
xor
inc
xor
xor
inc
xor
xor
je
jae
imul
arpl
dec
outsb
je
dec
outsl
xor
cmp
popa
or
xor
dec
xor
ss
insl
cmp
cmp
jo
xor
push
and
xor
jne
popa
xor
data16
cmp
outsl
or
imul
bound
push
popa
jne
and
and
sub
xor
push
xor
xor
popa
gs
fs
and
jo
insb
xor
cmp
outsb
and
insb
jo
cmp
and
cmp
xor
jne
cmp
je
outsb
xor
or
xor
xor
popa
jb
jb
jb
aaa
xor
and
dec
dec
and
popa
jo
and
and
data16
and
aaa
dec
jno
cmp
imul
jne
cmp
or
jne
outsb
jnp
jae
and
and
sub
xor
sub
imul
and
sub
insb
xor
jge
cs
bound
pop
cmp
push
imul
bound
and
insl
and
insl
and
imul
cs
sub
je
imul
jae
and
insl
insl
sub
jnp
insl
sub
cmp
sub
pop
bound
popa
insb
jnp
pop
popa
sub
outsl
sub
popa
jnp
bound
sub
outsb
outsb
popa
je
jae
je
outsl
popa
jge
imul
popa
imul
jae
popa
and
xor
sub
cmp
cmp
xor
cmp
cmp
insb
xor
inc
cmp
xor
cmp
xor
jl
cmp
jae
xor
xor
inc
cmp
cmp
inc
je
cs
pop
cmp
arpl
cmp
cmp
inc
or
aaa
cmp
xor
xor
xor
inc
cmp
xor
xor
gs
cs
dec
xor
xor
ss
xor
xor
xor
xor
xor
xor
sub
cmp
inc
xor
inc
jb
cmp
jl
xor
cmp
xor
inc
xor
cmp
cmp
aaa
dec
aaa
xor
xor
cmp
xor
xor
xor
jl
xor
dec
cmp
inc
inc
inc
insb
cmp
cmp
cmp
inc
dec
inc
inc
xor
aaa
cmp
dec
xor
cmp
xor
xor
dec
cmp
inc
xor
xor
xor
inc
xor
inc
inc
cmp
inc
dec
ss
inc
xor
or
jl
inc
cmp
or
xor
dec
inc
xor
inc
xor
cmp
cmp
xor
xor
xor
inc
xor
cmp
xor
cmp
cmp
inc
inc
or
aaa
xor
xor
cmp
xor
cmp
inc
inc
insb
xor
je
imul
inc
xor
cmp
inc
xor
xor
insb
aaa
insb
xor
push
cmp
xor
inc
inc
inc
and
inc
inc
xor
inc
xor
jl
inc
inc
cmp
jne
aaa
xor
aaa
aaa
inc
jl
inc
aaa
xor
cs
cmp
aaa
sub
cmp
dec
xor
jl
inc
xor
inc
imul
cmp
cmp
xor
xor
xor
inc
imul
inc
dec
or
outsb
insb
or
imul
cmp
inc
xor
xor
xor
xor
inc
or
inc
dec
dec
inc
inc
insb
cmp
inc
xor
xor
ss
inc
inc
xor
inc
jl
dec
dec
inc
inc
inc
xor
or
inc
inc
inc
inc
xor
jl
or
dec
inc
inc
or
inc
xor
inc
xor
inc
inc
dec
inc
or
inc
inc
cmp
jl
xor
xor
inc
xor
inc
inc
inc
cmp
dec
insb
inc
cmp
inc
inc
dec
inc
inc
inc
inc
inc
inc
jl
inc
insb
inc
inc
xor
inc
inc
inc
inc
xor
xor
inc
inc
xor
inc
insb
inc
xor
inc
cmp
inc
inc
inc
inc
or
inc
cmp
xor
aaa
aaa
cmp
xor
xor
xor
aaa
inc
cmp
xor
cmp
xor
inc
aaa
inc
xor
inc
xor
dec
jl
inc
inc
dec
inc
inc
or
xor
cmp
aaa
inc
inc
inc
aaa
insb
xor
xor
inc
jl
inc
xor
inc
xor
dec
inc
inc
cmp
aaa
aaa
aaa
xor
inc
inc
inc
xor
aaa
cmp
inc
cmp
ss
inc
ss
xor
xor
ss
ss
xor
xor
inc
aaa
ss
aaa
xor
xor
ss
xor
xor
inc
xor
xor
xor
cmp
cmp
xor
xor
ss
xor
ss
xor
inc
xor
aaa
xor
aaa
aaa
inc
ss
xor
xor
cmp
xor
inc
xor
xor
xor
xor
xor
xor
xor
ss
aaa
inc
cmp
cmp
inc
or
xor
inc
xor
inc
insb
xor
inc
inc
inc
jl
inc
insb
dec
inc
dec
dec
cmp
inc
inc
inc
inc
inc
xor
xor
inc
inc
xor
cmp
insb
cmp
inc
jl
xor
inc
xor
cmp
cmp
inc
xor
inc
dec
or
inc
inc
cmp
xor
inc
xor
inc
inc
ss
inc
xor
xor
inc
or
inc
xor
xor
inc
dec
ss
cmp
xor
xor
dec
inc
cmp
xor
dec
jl
inc
jl
inc
jl
xor
xor
inc
inc
cmp
xor
inc
jl
insb
xor
xor
inc
xor
xor
ss
ss
ss
xor
insb
inc
xor
inc
dec
inc
xor
xor
xor
inc
xor
insb
or
xor
inc
xor
cmp
xor
cmp
insb
cmp
jl
inc
xor
ss
inc
inc
insb
dec
cmp
xor
ss
xor
aaa
jl
inc
ss
xor
inc
or
xor
dec
inc
xor
cmp
insb
xor
cmp
xor
cmp
inc
xor
aaa
aaa
aaa
inc
xor
inc
xor
dec
or
dec
cmp
xor
cmp
xor
xor
jl
dec
cmp
xor
cmp
cmp
xor
jl
cmp
xor
inc
inc
xor
xor
xor
aaa
aaa
cmp
cmp
inc
insb
inc
inc
xor
cmp
cmp
jge
sub
push
outsl
popa
jae
popa
je
push
jnp
outsb
je
cs
pop
and
and
push
popa
bound
sub
popa
sub
insl
imul
arpl
pop
outsl
arpl
imul
cmp
xor
inc
cmp
dec
aaa
xor
insb
xor
aaa
xor
xor
inc
xor
cmp
xor
or
aaa
dec
dec
xor
insb
xor
xor
xor
xor
or
inc
dec
xor
inc
aaa
xor
cmp
xor
xor
aaa
xor
cmp
ss
aaa
aaa
xor
inc
xor
xor
xor
xor
inc
xor
inc
inc
inc
xor
ss
cmp
xor
inc
aaa
cmp
xor
xor
xor
xor
xor
xor
aaa
ss
xor
xor
aaa
aaa
cmp
xor
cmp
xor
xor
xor
xor
aaa
xor
inc
xor
xor
xor
insl
cmp
jb
jo
outsl
cmp
je
je
and
xor
push
outsb
je
xor
popa
xor
dec
push
xor
insl
push
outsl
and
or
data16
popa
cs
jae
xor
xor
pop
popa
xor
jne
imul
and
aaa
and
jb
xor
jb
xor
jae
xor
xor
xor
jae,pn
jno
cs
push
outsb
jae
xor
cmp
cmp
jns
xor
outsb
xor
ja
imul
xor
xor
xor
jo,pn
xor
jb
or
ds
and
je
bound
das
and
cs
popa
xor
jne
xor
push
and
sub
and
jne
gs
xor
cmp
push
jnp
or
or
cmp
and
xor
cmp
inc
xor
je
xor
aaa
je
popa
ds
imul
das
jb
jns
jo
cmp
inc
arpl
sub
imul
inc
cmp
cmp
xor
inc
inc
xor
xor
xor
pop
jns
xor
xor
jae
je
js
cmp
jne
sub
xor
inc
je
jb
outsb
inc
jo
arpl
xor
xor
xor
outsb
xor
inc
cmp
jb
xor
cmp
xor
insb
insl
cmp
outsl
pop
cmp
imul
gs
or
insb
and
cs
inc
inc
or
or
and
xor
outsb
xor
outsb
xor
xor
cmp
outsb
push
je
inc
xor
cmp
cmp
xor
xor
inc
dec
jl
xor
or
xor
insb
xor
xor
cmp
cmp
xor
cmp
xor
inc
xor
xor
xor
dec
dec
xor
inc
cmp
inc
xor
or
xor
xor
dec
inc
xor
or
xor
cmp
xor
xor
gs
jae
inc
cs
xor
gs
data16
outsl
insb
jae
and
pop
xor
jae
insl
jo
sub
bound
and
xor
data16
and
xor
cmp
sub
and
popa
or
imul
cmp
jb
and
cmp
xor
xor
insb
xor
cmp
insb
popa
arpl
inc
inc
jl
cmp
inc
xor
cmp
inc
inc
xor
inc
cmp
cmp
cmp
inc
inc
inc
cmp
inc
xor
xor
inc
cmp
xor
inc
xor
aaa
xor
inc
cmp
or
inc
insb
xor
inc
dec
cmp
cmp
xor
ss
xor
jl
inc
xor
or
inc
jl
insb
or
inc
xor
cmp
xor
jl
xor
xor
cmp
or
inc
or
inc
ss
cmp
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
inc
xor
inc
cmp
dec
xor
inc
inc
cmp
inc
inc
cmp
cmp
xor
xor
inc
xor
xor
xor
dec
inc
inc
cmp
xor
ss
xor
inc
xor
insb
dec
aaa
xor
ss
dec
or
xor
outsw
imul
pop
push
outsl
data16
imul
imul
pop
jne
outsb
or
jb
je
outsl
jb
pop
imul
je
jb
jo
or
or
push
outsl
gs
pop
jo
jbe
jb
pop
insb
push
gs
outsl
data16
or
imul
imul
pop
gs
outsb
or
outsl
imul
jae
imul
or
jb
popa
sub
push
cmp
cmp
xor
gs
and
xor
xor
and
cs
jb
je
je
popa
je
insl
xor
and
jae
and
addr16
xor
xor
ss
inc
jl
jl
inc
inc
cmp
dec
inc
inc
cmp
cmp
inc
or
ss
aaa
dec
xor
cmp
cmp
inc
aaa
xor
inc
xor
xor
cmp
or
dec
xor
cmp
aaa
cmp
xor
xor
xor
inc
cmp
xor
jl
xor
cmp
or
cmp
xor
xor
xor
xor
inc
xor
jl
cmp
ss
cmp
xor
xor
inc
insb
aaa
dec
inc
insb
aaa
xor
dec
xor
aaa
xor
cmp
xor
inc
inc
xor
inc
inc
cmp
cmp
xor
xor
inc
cmp
dec
inc
xor
aaa
dec
inc
xor
xor
jl
dec
cmp
xor
or
cmp
insb
inc
xor
xor
xor
cmp
cmp
aaa
xor
dec
dec
insb
cmp
cmp
xor
cmp
cmp
xor
aaa
dec
inc
inc
cmp
xor
aaa
xor
inc
xor
xor
xor
inc
inc
xor
inc
xor
inc
dec
xor
inc
xor
inc
or
inc
dec
xor
xor
inc
inc
dec
xor
inc
dec
jl
inc
xor
aaa
inc
aaa
or
cmp
inc
xor
cmp
inc
inc
aaa
insb
xor
xor
cmp
xor
insb
xor
xor
inc
aaa
inc
cmp
xor
aaa
inc
cmp
insb
xor
dec
ss
insb
inc
inc
dec
aaa
xor
aaa
jl
aaa
inc
or
jl
or
aaa
xor
inc
inc
inc
inc
inc
inc
inc
xor
inc
inc
inc
jl
or
aaa
inc
inc
jl
jl
inc
inc
inc
dec
cmp
xor
inc
jl
dec
inc
xor
inc
aaa
xor
inc
xor
inc
dec
inc
xor
inc
xor
xor
inc
aaa
xor
inc
xor
inc
inc
inc
or
inc
aaa
cmp
jl
inc
inc
or
inc
xor
xor
or
inc
inc
xor
jl
cmp
dec
aaa
dec
xor
inc
jl
cmp
xor
insb
inc
or
inc
inc
xor
xor
inc
inc
xor
inc
cmp
inc
inc
xor
cmp
xor
inc
xor
inc
inc
xor
inc
inc
inc
xor
dec
or
inc
inc
dec
inc
inc
inc
xor
inc
xor
inc
xor
jl
insb
inc
xor
xor
dec
xor
inc
inc
inc
inc
dec
xor
xor
dec
inc
inc
xor
inc
xor
xor
inc
inc
inc
jl
insb
xor
or
xor
ss
inc
xor
or
xor
inc
jl
inc
cmp
inc
inc
inc
insb
xor
inc
inc
xor
inc
xor
xor
inc
insb
inc
inc
xor
inc
inc
inc
aaa
or
inc
inc
xor
inc
cmp
ss
inc
xor
xor
xor
jl
xor
inc
inc
xor
inc
xor
xor
xor
xor
inc
dec
xor
xor
inc
xor
aaa
xor
jl
or
inc
inc
inc
insb
jl
inc
xor
xor
xor
xor
xor
cmp
inc
cmp
aaa
aaa
dec
inc
dec
xor
inc
cmp
insb
insb
inc
inc
cmp
xor
cmp
cmp
cmp
cmp
inc
xor
xor
aaa
inc
dec
or
cmp
xor
xor
xor
cmp
cmp
dec
xor
inc
xor
aaa
xor
xor
inc
dec
xor
cmp
inc
cmp
inc
inc
or
xor
xor
xor
push
cmp
sub
inc
inc
inc
bound
gs
imul
jb
xor
xor
xor
xor
inc
inc
inc
inc
xor
inc
inc
cmp
xor
insb
inc
xor
xor
xor
inc
xor
jl
dec
xor
cmp
inc
xor
xor
cmp
cmp
dec
xor
xor
dec
cmp
inc
dec
xor
inc
insb
inc
xor
inc
dec
insb
dec
xor
dec
cmp
cmp
jl
cmp
cmp
inc
xor
cmp
xor
inc
aaa
inc
insb
inc
inc
inc
xor
cmp
inc
cmp
dec
jl
ss
inc
or
xor
aaa
xor
xor
inc
jl
inc
cmp
or
inc
inc
gs
outsl
pop
imul
or
outsw
insb
je
xor
outsb
gs
js
insl
bound
imul
fs
jo
bound
outsb
insb
or
data16
outsb
outsb
insl
je
je
outsb
push
or
gs
jae
or
outsb
imul
je
pop
pop
outsl
je
jo
imul
or
insl
je
imul
outsl
pop
popa
gs
outsl
popa
pop
jae
jb
gs
insl
jb
insl
fs
jns
arpl
imul
or
je
pop
jb
je
gs
outsl
or
jb
push
je
insb
outsl
jae
xor
je
fs
jo
imul
pop
jae
outsl
or
data16
insl
outsb
arpl
arpl
gs
jb
jae
bound
pop
pop
jb
imul
jo
push
aaa
xor
and
cmp
cmp
pop
sub
arpl
outsl
popa
jno
sub
arpl
imul
and
and
aaa
jb
outsb
arpl
xor
sub
sub
cs
sub
bound
and
pop
xor
xor
and
pop
jge
outsb
xor
sub
outsl
sub
jno
sub
bound
outsl
jnp
jno
imul
and
cmp
bound
jb
jnp
popa
imul
gs
cs
and
cmp
imul
aaa
push
popa
cs
xor
bound
aaa
imul
xor
inc
cmp
xor
aaa
xor
inc
inc
inc
cmp
dec
inc
cmp
xor
dec
xor
cmp
ss
xor
inc
xor
xor
dec
jl
xor
inc
cmp
inc
aaa
inc
jl
inc
or
xor
ss
xor
inc
cmp
dec
inc
inc
xor
cmp
inc
aaa
dec
insb
aaa
inc
aaa
or
inc
inc
cmp
inc
xor
inc
inc
inc
inc
aaa
xor
jl
aaa
insb
xor
xor
inc
jl
dec
or
inc
xor
xor
inc
inc
xor
inc
xor
inc
aaa
inc
or
aaa
jl
xor
xor
xor
cmp
aaa
cmp
inc
aaa
aaa
insb
aaa
xor
inc
xor
insb
dec
xor
aaa
inc
or
dec
inc
xor
aaa
xor
inc
xor
inc
inc
xor
xor
xor
aaa
xor
inc
dec
dec
xor
or
inc
xor
cmp
jl
insb
xor
inc
xor
jl
xor
dec
dec
cmp
or
xor
inc
dec
xor
xor
xor
xor
cmp
xor
cmp
ss
inc
inc
cmp
xor
cmp
xor
xor
cmp
xor
sub
xor
xor
xor
xor
cmp
cmp
je
xor
xor
cs
cmp
inc
cmp
inc
xor
inc
gs
cs
pop
and
insb
and
and
xor
cmp
bound
pop
outsl
insb
pop
push
sub
jnp
and
sub
sub
and
outsl
insb
insb
imul
je
popa
outsl
pop
sub
outsl
and
gs
jge
jae,pn
ja
xor
push
jb,pn
jae
sub
jge,pn
push
xor
fs
sub
outsb
cmp
outsb
insb
jnp
pop
insb
jae
sub
popa
outsb
je
bound
jns,pn
imul
imul
insl
fs
imul
sub
imul
jae
sub
inc
je
xor
xor
inc
aaa
inc
popa
inc
xor
xor
cmp
inc
inc
cmp
inc
cmp
inc
inc
cmp
or
cmp
inc
inc
xor
cmp
xor
inc
inc
inc
inc
cmp
xor
xor
cmp
xor
ss
inc
inc
dec
insb
inc
inc
xor
cmp
inc
cmp
jl
dec
xor
inc
insb
inc
xor
inc
dec
cmp
cmp
cmp
inc
dec
xor
xor
xor
dec
xor
cmp
xor
xor
xor
xor
cmp
jl
inc
xor
or
inc
inc
cmp
xor
inc
inc
insb
xor
inc
cmp
xor
xor
xor
inc
cmp
inc
cmp
inc
jl
xor
xor
cmp
inc
xor
inc
cmp
ss
cmp
xor
or
inc
xor
inc
inc
or
dec
cmp
aaa
or
inc
or
cmp
inc
jl
cmp
xor
inc
insb
insb
inc
imul
outsb
jne
jne
jns
push
gs
data16
arpl
arpl
arpl
or
daa
xor
jo
dec
push
or
sub
sub
jns
or
je
aaa
cmp
bound
xor
inc
xor
inc
xor
jl
xor
inc
gs
cmp
dec
cmp
inc
aaa
aaa
xor
insb
ss
xor
cmp
gs
aaa
inc
insb
inc
inc
cmp
dec
pop
inc
cmp
inc
xor
xor
xor
fs
or
inc
dec
popa
aaa
or
xor
xor
xor
imul
cmp
inc
aaa
bound
push
cmp
inc
pop
inc
cmp
cmp
cmp
or
cmp
inc
outsb
cmp
insb
insb
cmp
xor
inc
xor
arpl
insb
dec
aaa
or
cmp
cmp
xor
cmp
xor
inc
aaa
xor
outsb
cmp
xor
outsb
jl
xor
jbe
xor
cmp
cmp
jb
inc
outsb
xor
jl
xor
inc
inc
or
cmp
xor
aaa
dec
inc
aaa
cmp
inc
jl
aaa
je
inc
inc
aaa
inc
gs
cmp
imul
dec
aaa
xor
inc
xor
inc
inc
inc
aaa
inc
imul
xor
insb
dec
xor
xor
je
inc
xor
inc
imul
inc
jl
dec
xor
insb
cmp
xor
cmp
xor
xor
cmp
xor
xor
xor
aaa
sub
cmp
xor
sub
aaa
inc
xor
aaa
xor
aaa
jl
xor
cmp
insb
aaa
inc
inc
xor
outsb
aaa
aaa
insb
aaa
inc
aaa
inc
inc
xor
xor
outsb
aaa
xor
dec
xor
inc
xor
xor
dec
cmp
inc
xor
cmp
xor
xor
sub
xor
dec
cmp
xor
inc
or
aaa
inc
xor
inc
cmp
xor
xor
xor
jl
dec
insb
inc
xor
insb
xor
inc
cmp
dec
cmp
inc
inc
or
xor
inc
ss
cmp
aaa
xor
cmp
jl
inc
inc
xor
inc
aaa
inc
inc
inc
xor
xor
xor
xor
xor
xor
inc
aaa
inc
inc
xor
xor
xor
inc
ss
xor
xor
jl
ss
xor
inc
jl
cmp
xor
xor
inc
xor
inc
xor
inc
aaa
cmp
xor
inc
inc
dec
inc
xor
xor
cmp
inc
xor
inc
inc
inc
jl
inc
xor
inc
xor
ss
xor
cmp
inc
inc
inc
cmp
inc
cmp
inc
inc
or
aaa
insb
inc
xor
xor
cmp
cmp
inc
cmp
insb
inc
inc
xor
inc
inc
xor
cmp
inc
inc
or
dec
jl
jl
insb
xor
cmp
cmp
dec
xor
insb
or
inc
inc
inc
inc
inc
inc
inc
inc
aaa
cmp
inc
inc
inc
xor
sub
bound
and
xor
bound
ss
cmp
popa
bound
xor
cs
xor
jae
popa
jae
cmp
ds
fs
jae
pop
xor
gs
xor
sub
xor
sub
cs
xor
xor
insb
arpl
cs
arpl
popa
push
jne
je
xor
outsb
aaa
jb
and
gs
gs
cs
aaa
push
cmp
bound
jb
xor
outsl
jb
cmp
arpl
inc
xor
xor
jne
xor
je
insb
xor
xor
pop
xor
sub
popa
xor
jb
xor
gs
popa
and
xor
sub
sub
and
xor
outsb
and
pop
xor
bound
pop
xor
jb
and
jge
bound
cs
popa
bound
xor
daa
pop
insb
daa
xor
jo
jo
imul
outsl
insl
outsb
jae
sub
je
jo
outsb
pop
arpl
sub
popa
outsl
outsb
sub
gs
arpl
imul
and
jae
pop
xor
outsl
pop
insb
xor
cmp
cmp
xor
or
or
bound
dec
imul
ss
outsl
cmp
xor
data16
or
jbe
cmp
ss
ss
or
insb
arpl
xor
jno
xor
cmp
js
dec
and
outsb
imul
push
outsb
data16
imul
cmp
insb
data16
jne
cmp
xor
or
inc
dec
or
xor
sub
je
xor
inc
outsb
ss
xor
xor
jae
cmp
xor
xor
cmp
xor
or
xor
cmp
cmp
xor
cmp
inc
xor
xor
pop
xor
imul
sub
cmp
cmp
xor
inc
xor
dec
inc
sub
je
xor
xor
js
aaa
cmp
insb
xor
jae
cmp
insb
dec
xor
inc
push
sub
xor
xor
xor
xor
pop
dec
xor
xor
inc
cmp
xor
ss
xor
dec
outsb
xor
cs
sub
xor
jl
je
je
xor
outsl
outsb
je
cmp
aaa
imul
inc
cmp
xor
inc
inc
cmp
xor
cmp
dec
cmp
xor
inc
xor
xor
xor
insb
aaa
aaa
inc
xor
xor
or
inc
ss
dec
inc
dec
inc
xor
xor
xor
xor
inc
xor
dec
xor
jl
xor
dec
inc
cmp
or
inc
xor
inc
inc
inc
xor
xor
inc
cmp
cmp
inc
inc
cmp
dec
inc
cmp
dec
xor
insb
xor
cmp
inc
inc
cmp
inc
cmp
or
cmp
xor
inc
cmp
inc
inc
dec
or
dec
dec
dec
jl
cmp
xor
inc
cmp
xor
cmp
xor
xor
xor
xor
inc
inc
jl
cmp
jl
inc
cmp
cmp
xor
cmp
dec
jl
xor
inc
cmp
inc
cmp
inc
inc
xor
xor
xor
aaa
insb
inc
inc
dec
insb
insb
cmp
jl
xor
or
jl
xor
inc
xor
dec
xor
inc
dec
inc
cmp
xor
cmp
inc
cmp
inc
cmp
aaa
cmp
xor
xor
inc
xor
xor
aaa
dec
xor
cmp
inc
insb
inc
or
inc
cmp
xor
inc
cmp
dec
xor
xor
inc
inc
inc
inc
cmp
dec
jl
inc
inc
xor
inc
inc
aaa
inc
xor
inc
insb
inc
or
inc
or
xor
xor
cmp
xor
inc
xor
xor
insb
cmp
dec
xor
insb
inc
xor
cmp
cmp
inc
inc
cmp
xor
xor
cmp
inc
dec
inc
xor
dec
xor
inc
dec
xor
xor
or
insb
aaa
cmp
xor
inc
xor
aaa
cmp
aaa
jl
jl
aaa
cmp
inc
inc
xor
inc
aaa
dec
inc
xor
inc
inc
cmp
aaa
inc
xor
xor
inc
xor
xor
inc
or
insb
inc
xor
or
xor
inc
xor
xor
aaa
xor
xor
dec
insb
xor
xor
dec
dec
xor
inc
or
inc
cmp
aaa
jl
xor
xor
dec
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
dec
inc
xor
dec
inc
inc
xor
xor
inc
inc
xor
dec
cmp
jl
xor
cmp
cmp
cmp
xor
xor
inc
inc
xor
cmp
xor
xor
jl
xor
dec
ss
xor
cmp
xor
xor
jl
xor
xor
cmp
xor
inc
inc
aaa
or
inc
inc
or
xor
xor
inc
xor
xor
or
insb
aaa
inc
xor
cmp
dec
je
xor
inc
xor
imul
dec
sub
aaa
xor
xor
xor
je
inc
xor
sub
xor
inc
dec
arpl
xor
inc
aaa
xor
aaa
dec
xor
inc
cmp
xor
xor
xor
sub
inc
dec
inc
sub
xor
aaa
sub
dec
dec
cmp
xor
or
cmp
cmp
dec
sub
cmp
dec
xor
cmp
inc
xor
xor
xor
ss
je
dec
inc
pop
xor
bound
outsl
insb
xor
jge
gs
bound
pushw
cmp
bound
jo
xor
aaa
sub
xor
arpl
sub
outsb
xor
fs
jb
popa
outsb
gs
pop
pop
arpl
cs
jb
gs
fs
arpl
gs
popa
outsb
outsb
jb
je
push
bound
jbe
pop
outsb
and
jae,pn
insb
popa
cmp
sub
sub
jne
gs
gs
xor
xor
popa
gs
das
jae
outsb
insb
gs
xor
je
outsb
sub
je
jne
jge
and
xor
xor
js
jnp
ds
jae
xor
jns
popa
jae
xor
ss
ss
inc
aaa
xor
ss
xor
inc
xor
inc
inc
xor
xor
ss
inc
aaa
ss
cmp
xor
inc
xor
ss
xor
ss
ss
xor
inc
xor
inc
xor
xor
aaa
inc
xor
xor
ss
inc
xor
xor
inc
xor
inc
aaa
xor
xor
xor
aaa
xor
inc
xor
xor
aaa
xor
inc
insb
xor
inc
dec
cmp
inc
inc
xor
inc
xor
inc
inc
inc
xor
inc
or
dec
cmp
cmp
inc
inc
inc
cmp
xor
inc
jl
sub
sub
jnp
jae
insb
insl
insl
popa
imul
outsl
imul
sub
bound
insb
jge
insb
outsl
and
imul
popa
jge
pop
pop
jne
jnp
sub
insb
outsb
insb
jnp
sub
gs
outsb
jnp
cmp
push
pop
outsl
bound
and
and
and
cs
push
sub
pop
insb
jge
sub
outsb
sub
jnp
arpl
outsb
jnp
push
sub
sub
imul
outsb
popa
insb
and
insb
popa
jb
sub
and
imul
jne
and
imul
pop
and
insb
fs
jb
outsb
jnp
insb
jnp
sub
popa
sub
insb
jge
outsb
sub
sub
insb
and
jge
outsb
outsb
sub
imul
jnp
sub
jnp
popa
insb
sub
cs
imul
imul
bound
and
popa
sub
xor
xor
inc
push
cmp
insb
inc
inc
cmp
inc
inc
xor
xor
xor
xor
insb
xor
xor
or
ds
or
xor
or
inc
xor
xor
cmp
xor
xor
cmp
jl
xor
xor
xor
inc
cmp
inc
insb
jl
xor
xor
cmp
or
xor
inc
xor
inc
xor
inc
jl
cmp
xor
xor
cmp
inc
xor
dec
xor
cmp
insb
dec
xor
cmp
dec
xor
xor
or
inc
xor
inc
inc
xor
inc
xor
inc
xor
xor
inc
xor
inc
inc
or
xor
inc
xor
xor
inc
inc
xor
dec
insb
cmp
inc
inc
insb
inc
xor
inc
cmp
dec
inc
cmp
dec
inc
inc
xor
inc
or
cmp
xor
xor
cmp
xor
jl
dec
dec
or
cmp
aaa
inc
inc
xor
xor
xor
inc
insb
inc
xor
xor
dec
inc
cmp
inc
insb
xor
xor
aaa
jl
xor
cmp
aaa
xor
cmp
xor
xor
xor
xor
cmp
aaa
xor
cmp
inc
xor
xor
aaa
insb
xor
xor
dec
xor
xor
xor
xor
xor
or
insb
xor
xor
inc
aaa
cmp
cmp
xor
xor
inc
xor
xor
xor
jo
inc
xor
inc
inc
xor
cmp
aaa
xor
xor
cmp
xor
xor
push
cmp
xor
xor
or
xor
inc
cmp
xor
inc
xor
inc
inc
inc
inc
xor
xor
xor
inc
inc
inc
inc
insb
inc
inc
xor
dec
inc
inc
inc
inc
xor
cmp
cmp
xor
cmp
cmp
cmp
inc
xor
xor
cmp
dec
xor
insb
xor
inc
cmp
xor
cmp
je
jb
imul
gs
je
push
outsl
jb
pop
outsb
outsb
and
imul
xor
push
je
imul
outsl
and
push
and
or
gs
je
jae,pt
xor
insb
and
aaa
or
xor
insb
jb
cmp
outsl
je
je
inc
xor
inc
aaa
insb
cmp
aaa
xor
dec
cmp
sub
aaa
aaa
xor
xor
cmp
cmp
dec
aaa
insb
je
cmp
cmp
xor
insb
inc
inc
xor
inc
inc
xor
xor
or
xor
xor
inc
inc
inc
xor
inc
xor
xor
inc
inc
dec
xor
xor
cmp
xor
cmp
xor
inc
xor
inc
inc
jl
xor
cmp
aaa
xor
xor
jl
dec
xor
aaa
inc
inc
or
cmp
xor
inc
inc
inc
xor
or
ss
dec
ds
xor
dec
imul
jbe
inc
inc
inc
xor
xor
arpl
cmp
ss
xor
je
inc
outsb
cmp
insb
xor
xor
jl
push
cmp
ds
xor
inc
cs
cmp
inc
xor
je,pt
outsl
ss
cmp
or
xor
dec
cs
inc
cmp
xor
inc
inc
jl
jae
insb
xor
cmp
inc
xor
inc
cmp
or
inc
cmp
xor
inc
aaa
insb
xor
xor
cmp
xor
cmp
xor
cmp
cmp
cs
aaa
xor
aaa
xor
insb
inc
aaa
cmp
xor
cmp
inc
xor
imul
cmp
xor
xor
inc
xor
ss
inc
cmp
inc
inc
xor
xor
inc
cmp
xor
inc
inc
xor
cmp
inc
inc
cmp
dec
inc
inc
xor
cmp
jl
cmp
inc
inc
cmp
insb
dec
xor
inc
cmp
insb
inc
cmp
jl
dec
xor
xor
inc
dec
inc
xor
dec
inc
cmp
ss
cmp
xor
bound
cmp
ds
js
cmp
jns
xor
ss
xor
xor
xor
or
push
arpl
aaa
cmp
xor
jl
jl
dec
xor
inc
ss
inc
inc
insb
xor
xor
inc
inc
xor
xor
inc
cmp
xor
xor
inc
inc
inc
inc
xor
xor
xor
xor
ss
xor
xor
inc
ss
or
aaa
aaa
xor
inc
inc
jl
aaa
aaa
ss
dec
inc
inc
jl
jl
cmp
xor
aaa
inc
xor
inc
aaa
insb
xor
dec
xor
xor
insb
inc
xor
inc
cmp
xor
xor
dec
or
inc
inc
xor
or
dec
dec
insb
dec
cmp
ss
or
xor
aaa
inc
xor
inc
cmp
inc
or
xor
dec
inc
inc
xor
inc
inc
xor
or
xor
insb
xor
insb
inc
inc
inc
inc
xor
ss
xor
xor
dec
inc
inc
dec
inc
inc
inc
xor
cmp
imul
xor
xor
or
pop
je
xor
xor
dec
or
inc
cmp
aaa
xor
outsb
inc
aaa
xor
je
inc
inc
inc
jl
jo
inc
inc
inc
xor
xor
inc
xor
xor
jl
xor
cmp
outsl
gs
inc
inc
aaa
outsb
cmp
inc
popa
xor
aaa
inc
xor
cmp
or
xor
outsb
xor
cmp
jbe
xor
inc
xor
cmp
inc
je
inc
cmp
xor
xor
cmp
jae
or
xor
cmp
xor
xor
jb
and
xor
dec
insb
xor
inc
cmp
xor
xor
inc
jl
jl
jl
inc
xor
xor
inc
xor
inc
dec
cmp
outsb
xor
xor
inc
inc
xor
dec
inc
xor
sub
inc
inc
cmp
xor
aaa
inc
xor
inc
xor
xor
xor
dec
xor
dec
outsl
addr16
xor
inc
aaa
or
inc
xor
insb
insb
inc
je
pop
xor
js
or
or
xor
jne
or
fs
dec
jb
xor
or
js
imul
xor
aaa
outsb
and
push
outsb
cmp
xor
cmp
and
data16
outsb
and
gs
xor
jl
dec
xor
inc
cmp
insb
aaa
xor
aaa
aaa
or
xor
inc
inc
inc
xor
xor
inc
xor
xor
inc
xor
inc
inc
or
dec
xor
xor
cmp
xor
cmp
inc
ss
dec
inc
inc
inc
dec
cmp
cmp
cmp
inc
xor
xor
inc
cmp
cmp
or
cmp
aaa
inc
xor
inc
cmp
cmp
inc
inc
dec
xor
cmp
xor
xor
inc
inc
cmp
cmp
aaa
xor
inc
inc
inc
aaa
aaa
xor
inc
xor
inc
jl
xor
inc
xor
or
xor
xor
or
dec
inc
or
xor
dec
ss
or
inc
inc
xor
inc
inc
inc
inc
jl
dec
cmp
inc
inc
inc
inc
inc
inc
dec
aaa
inc
xor
inc
inc
inc
inc
xor
xor
xor
cmp
xor
inc
cmp
xor
dec
inc
inc
inc
dec
or
dec
cmp
inc
inc
xor
inc
cmp
inc
cmp
aaa
inc
insb
cmp
inc
inc
xor
xor
jl
ss
cmp
xor
xor
xor
xor
inc
cmp
cmp
pop
inc
xor
cmp
sub
gs
xor
cmp
je
xor
xor
jb
cmp
popa
je
jl
xor
xor
xor
sub
jb
popa
xor
xor
xor
xor
outsb
cmp
cmp
gs
xor
inc
jl
popa
fs
jb
push
inc
gs
aaa
xor
xor
outsb
xor
xor
inc
insb
xor
gs
cmp
outsb
cmp
push
dec
sub
cmp
jb
sub
bound
inc
jae
sub
je
je
jae
dec
imul
xor
xor
inc
popa
je
xor
xor
jb
cmp
xor
or
ss
cmp
cmp
insb
xor
xor
imul
xor
cmp
cmp
insb
dec
xor
cmp
cmp
cmp
xor
cmp
inc
inc
cmp
dec
inc
inc
inc
xor
dec
xor
xor
inc
inc
inc
xor
xor
xor
jl
inc
cmp
dec
inc
xor
cmp
cmp
jl
insb
cmp
inc
inc
or
inc
inc
xor
inc
xor
cmp
inc
jl
inc
xor
insb
inc
xor
inc
inc
xor
xor
xor
xor
xor
xor
cmp
inc
dec
cmp
xor
inc
xor
dec
inc
insb
dec
xor
xor
or
xor
dec
cmp
inc
xor
inc
jl
xor
xor
xor
xor
inc
xor
xor
xor
cmp
inc
cmp
jl
cmp
cmp
xor
xor
inc
cmp
aaa
xor
cmp
aaa
xor
dec
xor
jl
xor
jl
cmp
or
aaa
cmp
cmp
cmp
cmp
cmp
xor
aaa
cmp
inc
inc
jl
xor
xor
cmp
dec
xor
inc
xor
dec
cmp
cmp
cmp
xor
inc
inc
inc
xor
xor
or
inc
cs
dec
aaa
xor
inc
jb
dec
inc
insb
inc
xor
cmp
cmp
aaa
xor
gs
inc
xor
xor
cmp
xor
or
aaa
gs
xor
cmp
inc
xor
inc
xor
inc
cmp
cmp
xor
xor
xor
arpl
imul
inc
inc
xor
cmp
xor
xor
xor
xor
jl
insb
inc
ds
xor
inc
xor
xor
gs
xor
jl
inc
or
xor
xor
aaa
xor
xor
aaa
xor
push
cmp
jl
inc
or
dec
cmp
cmp
inc
xor
inc
xor
inc
inc
cmp
xor
inc
xor
xor
dec
inc
xor
ss
cmp
jl
xor
cmp
inc
cmp
cmp
inc
inc
cmp
inc
inc
dec
dec
xor
dec
xor
xor
xor
cmp
jl
cmp
cmp
xor
inc
or
aaa
insb
xor
cmp
inc
xor
dec
inc
inc
xor
xor
xor
or
inc
cmp
xor
cmp
xor
dec
xor
xor
cmp
dec
or
xor
dec
cmp
cmp
cmp
aaa
xor
xor
dec
xor
inc
dec
cmp
jl
xor
xor
cmp
xor
inc
or
cmp
xor
xor
ss
xor
inc
xor
cmp
or
cmp
xor
dec
insb
xor
xor
aaa
cmp
xor
inc
xor
jl
dec
xor
ss
jl
jl
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
aaa
xor
ss
cmp
xor
push
and
jae
bound
insl
popa
imul
bound
cs
inc
insb
aaa
inc
xor
xor
inc
insb
xor
inc
insb
cmp
inc
ss
xor
cmp
inc
xor
cmp
xor
jl
inc
xor
xor
inc
xor
cmp
dec
jl
dec
inc
cmp
xor
dec
inc
xor
xor
cmp
dec
xor
and
insb
insb
popa
bound
je
cmp
imul
pop
jo
jb
or
bound
or
xor
outsb
cmp
and
fs
imul
outsb
je
ja
outsb
je
and
xor
insb
cmp
xor
dec
xor
cmp
jb,pn
cmp
insb
xor
imul
gs
imul
xor
and
inc
xor
jl
dec
inc
xor
aaa
xor
inc
inc
inc
aaa
xor
inc
dec
xor
jl
inc
insb
or
inc
inc
xor
inc
dec
xor
inc
xor
xor
inc
xor
inc
inc
inc
dec
aaa
dec
insb
inc
inc
inc
jl
inc
jl
inc
inc
cmp
aaa
insb
inc
cmp
aaa
inc
or
ss
inc
inc
inc
dec
xor
inc
or
inc
dec
cmp
inc
xor
xor
inc
inc
aaa
inc
aaa
inc
inc
inc
aaa
inc
inc
ss
cmp
cmp
xor
dec
xor
inc
inc
jl
dec
xor
inc
xor
cmp
inc
aaa
inc
or
xor
cmp
inc
inc
insb
xor
aaa
xor
or
dec
inc
inc
inc
inc
insb
aaa
inc
xor
inc
insb
xor
xor
inc
aaa
inc
aaa
xor
cmp
jl
cmp
or
inc
ss
xor
sub
inc
dec
inc
xor
xor
xor
xor
xor
inc
xor
inc
xor
inc
inc
aaa
aaa
aaa
jl
dec
xor
xor
inc
xor
dec
xor
inc
dec
cmp
cmp
xor
xor
cmp
cmp
insb
xor
xor
jl
inc
cmp
xor
insb
inc
dec
aaa
dec
cmp
xor
dec
ss
aaa
dec
cmp
dec
xor
inc
xor
dec
or
insb
xor
inc
aaa
inc
inc
aaa
xor
xor
cmp
xor
xor
inc
xor
or
sub
xor
insb
xor
xor
jb
cmp
gs
inc
cmp
gs
xor
sub
xor
xor
inc
inc
pop
inc
popa
inc
xor
cmp
xor
pop
xor
xor
xor
or
xor
cmp
fs
xor
xor
bound
or
outsb
inc
xor
cmp
inc
jne
inc
jp
cmp
imul
cmp
inc
inc
jae
xor
inc
inc
cmp
inc
jb
xor
jl
xor
popa
popa
cmp
insb
je
inc
inc
sub
xor
jae
inc
xor
xor
xor
or
je
je
cmp
xor
xor
xor
inc
cmp
cmp
ss
inc
inc
cmp
dec
cmp
inc
inc
or
inc
cmp
xor
insb
xor
inc
or
xor
cmp
dec
xor
inc
jl
xor
xor
insb
inc
inc
inc
inc
inc
xor
cmp
cmp
inc
cmp
aaa
cmp
inc
cmp
jl
inc
inc
or
xor
inc
inc
inc
inc
aaa
xor
insb
inc
cmp
dec
cmp
aaa
jl
inc
inc
inc
cmp
cmp
ss
dec
xor
xor
inc
inc
xor
inc
inc
ss
inc
inc
inc
inc
inc
aaa
inc
inc
insb
fs
data16
gs
jno
jne
and
fs
jne
or
insb
cmp
xor
dec
popa
xor
jae
cmp
cmp
jb
dec
insb
cmp
jne
data16
imul
or
jae
xor
xor
or
cmp
fs
cmp
or
bound
and
xor
aaa
aaa
xor
dec
outsl
arpl
jb
arpl
xor
cmp
gs
outsb
cmp
cmp
outsb
cmp
or
xor
jno
popa
or
jae
cmp
and
outsb
or
outsw
xor
push
ss
or
js
outsb
and
xor
cmp
xor
outsl
data16
and
gs
xor
or
outsl
push
and
arpl
insb
xor
cmp
or
or
fs
dec
data16
jae
insb
or
cmp
and
arpl
xor
xor
inc
and
imul
xor
outsb
xor
xor
outsb
jb
xor
cmp
jae,pn
outsl
outsb
imul
outsl
and
imul
and
cs
xor
inc
inc
dec
xor
inc
ss
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
or
inc
inc
xor
xor
xor
cmp
inc
cmp
insb
ss
jl
jl
cmp
inc
inc
dec
cmp
or
dec
dec
xor
inc
inc
insb
inc
ss
xor
cmp
insb
xor
xor
cmp
dec
inc
xor
xor
xor
inc
xor
cmp
xor
inc
inc
xor
xor
xor
inc
cmp
xor
inc
inc
xor
jl
jl
cmp
inc
inc
xor
xor
xor
cmp
aaa
jl
inc
xor
xor
cmp
xor
inc
inc
xor
insb
cmp
inc
aaa
xor
xor
inc
dec
xor
xor
xor
inc
inc
dec
xor
xor
aaa
inc
cmp
inc
aaa
xor
cmp
aaa
inc
inc
inc
dec
xor
inc
xor
cmp
dec
inc
aaa
aaa
inc
insb
or
xor
inc
aaa
inc
cmp
xor
xor
jl
xor
cmp
xor
inc
jl
xor
xor
aaa
or
inc
aaa
inc
cmp
xor
inc
aaa
insb
jl
inc
xor
xor
inc
cmp
dec
dec
arpl
imul
fs
pop
jo
xor
dec
dec
xor
cmp
cmp
or
cmp
cmp
jo
imul
fs
xor
imul
xor
jae
cs
ss
cmp
ja,pn
xor
pop
and
jae
xor
outsl
dec
and
bound
and
cmp
jb
or
and
or
and
and
jne
aaa
cmp
cmp
dec
imul
xor
xor
addr16
insb
jb
or
push
or
xor
xor
cmp
xor
gs
cmp
gs
and
je
dec
or
jb
insb
xor
push
popa
sub
and
outsb
je
xor
and
cmp
xor
xor
jo
xor
je
insb
xor
gs
xor
xor
aaa
xor
inc
or
inc
aaa
inc
inc
xor
inc
imul
cmp
xor
inc
inc
inc
xor
xor
insb
inc
inc
inc
je
xor
or
inc
inc
inc
or
xor
insl
xor
inc
cmp
cmp
je
xor
cmp
inc
cmp
inc
inc
inc
inc
aaa
inc
xor
inc
inc
imul
inc
dec
arpl
xor
inc
inc
dec
jae
fs
aaa
inc
inc
xor
inc
inc
outsb
or
cmp
aaa
inc
jb
jl
cs
pop
inc
inc
inc
arpl
inc
inc
insb
inc
inc
imul
inc
inc
gs
cmp
je
jl
or
xor
inc
aaa
inc
cmp
ds
inc
cmp
inc
inc
sub
and
push
aaa
inc
gs
inc
inc
xor
inc
cmp
inc
cs
clc
pop
call
push
sub
push
in
icebp
cltd
dec
dec
cli
stos
scas
aam
sbb
imul
jl
or
fs
cmp
add
test
loop
lahf
out
pop
movsb
push
lock
xor
scas
in
mov
jae
mov
dec
adc
xchg
das
sbb
test
gs
cld
loopne
push
push
mov
pop
shr
aad
push
push
roll
cmpsl
and
push
int3
or
test
jnp
sub
sbb
pop
roll
sbb
sahf
imul
sub
jb
nop
jecxz
or
bound
fbld
pop
add
inc
xchg
sbb
mov
dec
int
test
xor
popa
outsl
outsb
push
lds
push
or
mov
in
adc
jp
sbb
jo
mov
mov
mov
and
xchg
loop
loope
pusha
inc
sub
out
adc
cs
push
add
in
popa
push
repnz
jo
mov
xchg
inc
shlb
dec
daa
push
jmp
sbb
mov
pop
mov
xor
add
gs
adc
add
cmp
adc
stos
ret
jl
movsb
or
pop
mov
jl
sub
xchg
incl
jb
xor
pop
xor
jnp
mov
sub
inc
outsb
cmp
subl
pop
mov
mov
adc
push
xor
aam
xchg
pop
outsl
xor
cmp
adc
mov
les
mov
jo
movsb
lret
gs
movsb
idivb
lahf
and
adc
or
mov
lods
fsts
inc
call
imul
add
mov
xchg
push
sub
pop
add
push
cvtpi2ps
out
xor
push
insb
inc
xor
in
cmpsb
jb
das
jno
mov
fcoml
mov
push
das
jecxz
stc
out
shl
jg
adc
push
jp
jecxz
add
sbb
xchg
mov
test
push
adc
mov
cmp
mov
js
arpl
add
or
and
lods
xchg
imul
sahf
ds
stc
stc
mov
sub
dec
ret
loop
push
and
rcl
mov
mov
sarl
movsb
fstpt
xor
cltd
rolb
lock
push
push
jbe
jb
inc
xor
lcall
sahf
das
mov
rorb
mov
xor
and
rcll
loopne
add
push
add
mov
adc
xor
inc
xchg
xorb
enter
add
insb
jns
lret
aaa
rcl
cli
dec
push
roll
pop
cmp
dec
add
mov
push
push
xor
inc
lods
insl
gs
pusha
aad
pop
xchg
inc
xorl
rorb
sub
fdivrl
jg
inc
push
xor
or
xlat
pop
out
cmp
or
dec
sbb
clc
inc
aas
bound
sbb
in
imul
inc
lcall
data16
enter
int3
out
mov
inc
out
sub
test
arpl
ret
adc
jge
ss
inc
out
rclb
push
loopne
jne
data16
xchg
push
jmp
bound
pop
adc
dec
icebp
cmpb
add
or
push
fcmove
adc
repnz
jle
out
testb
jae
sub
test
sub
sub
aad
pusha
adc
sbb
mov
push
pop
mov
fnstenv
cltd
pop
dec
push
repnz
loop
ret
cmp
push
popl
inc
and
iret
rcll
mov
call
pop
dec
in
aas
jle
push
push
sub
jge
jl
or
stos
add
pop
daa
jbe
nop
jo
sbb
push
pop
pop
sti
cltd
mov
mov
jae
and
test
or
cmc
lcall
sub
mov
and
movsw
jge
mov
out
paddw
lahf
cs
add
push
call
mov
daa
dec
jle
mov
mov
loop
xchg
push
and
leave
push
divl
mov
mov
inc
dec
cmpsl
sub
inc
pusha
shr
mov
ljmp
pop
mov
push
jbe
insl
or
imul
lret
inc
popf
pushf
xchg
xor
out
loope
or
jl
and
adc
fucomi
fcoms
dec
pop
xchg
pop
iret
jg
xchg
and
or
mov
adc
lds
push
pusha
add
and
sub
ret
popa
pop
nop
adc
mov
push
mov
test
pop
test
aas
les
jo
aad
mov
dec
mov
push
pushf
inc
mov
nop
loope
ja
pop
shl
scas
aaa
mov
cmpsl
jg
lea
fstpt
cmp
inc
mov
and
cmp
xlat
sub
sub
xor
pop
out
shll
call
repz
add
test
ret
sbb
dec
cltd
ljmp
or
mov
sarl
data16
pop
jns
jmp
cmpsb
dec
mov
dec
int3
mov
repnz
sbb
fstl
test
lds
sti
mov
add
dec
sbb
shlb
and
arpl
cmp
lock
push
xchg
fildl
sub
outsl
add
icebp
push
fxch
in
loop
jle
in
fsubr
repnz
fs
daa
cmp
mov
jbe
insb
cmp
jl
inc
mov
fcomps
lods
movsl
loop
cwtl
popa
gs
testl
cmp
xor
pop
mov
cmpsl
cmp
dec
fldt
ret
popf
mov
arpl
inc
adc
das
add
cwtl
push
dec
cmpsl
sbb
cs
outsb
sbb
scas
pusha
jae
mov
jl
xlat
adc
bound
cwtl
mov
push
lds
sbb
sub
lahf
aad
pop
sub
into
adc
xchg
pop
icebp
ds
sub
pop
mov
hlt
popf
cmp
mov
pushf
or
adcl
inc
ds
or
fistl
xchg
dec
aam
jo
int3
xor
and
lcall
inc
pop
inc
stos
test
mov
insl
lahf
dec
jp
add
adc
sbb
call
shrb
shrl
aam
dec
mov
xor
mov
jae
xchg
cmpsl
dec
aad
sbb
nop
cmp
adcb
pop
addb
pushf
mov
cmp
sub
push
orb
jmp
out
je
dec
lds
inc
sub
xchg
or
fsubrp
mov
cld
out
rol
cmpsb
out
sbb
incb
je
inc
pop
dec
sbb
fdivl
stos
xchg
cmpl
out
loope
les
cmc
sbb
hlt
es
fisttpl
cmpsb
gs
or
loop
ror
imul
jmp
mov
test
and
arpl
insb
cld
push
jle
mov
leave
push
push
adc
add
shrl
cld
in
inc
push
push
add
lock
sahf
js
mov
push
and
pop
or
popa
dec
pop
fwait
enter
push
xchg
or
mov
out
push
je
stos
dec
mov
adcb
cmp
push
mov
test
or
loopne
inc
cmpsl
or
push
and
into
or
xlat
cmpsl
lahf
shl
hlt
out
or
pop
sub
iret
dec
sbbl
gs
clc
dec
pop
and
mov
mov
call
sub
loopne
jecxz
scas
clc
cs
jg
add
mov
xor
adc
lods
popf
lock
imul
pop
xor
jae
lods
out
repz
sub
stos
lret
inc
ljmp
roll
or
das
fldt
cmp
add
outsl
cmpb
ficoms
xchg
lds
and
mov
adcb
into
ret
int3
adc
sub
pop
xor
cmpb
nop
inc
pushl
mov
es
sbb
cltd
xlat
sbb
jg
mov
jnp
xchg
stos
mov
sbbb
mov
mov
jmp
jge
cmpsl
sub
inc
mov
loopne
xchg
jge
insl
xchg
dec
cmc
xor
rcll
fistps
repz
repz
mov
pop
es
push
sub
inc
sbb
mov
arpl
cmp
adc
dec
add
add
and
mull
pusha
mov
mov
loopne
mov
adc
hlt
in
pushf
lret
sbb
mov
andl
ss
in
imull
out
movsb
loop
mov
insl
out
mov
sbb
mov
xchg
add
mov
dec
sub
mov
and
or
add
add
fnstenv
xchg
iret
test
loope
inc
inc
in
jmp
sub
push
mov
loop
jbe
leave
outsb
es
inc
mov
cli
fs
sti
push
mov
jnp
stc
inc
jp
mov
sbb
test
fildl
jbe
mov
pop
ret
and
xchg
je
jmp
mov
mov
xchg
cwtl
inc
popa
mov
addl
aas
cmpsb
cmp
std
mov
or
sahf
idivl
adc
cmp
mov
clc
movsb
adc
fs
sbb
stos
pop
inc
xchg
add
inc
and
dec
aam
push
push
pop
and
cltd
call
repnz
and
add
inc
call
loop
test
xor
stos
inc
push
xchg
mov
imul
popl
mov
pop
mov
icebp
jge
jne
testb
loopne
jl,pt
pop
mov
push
mov
test
test
push
cmp
pop
jmp
sbb
mov
sub
mov
sbb
xchg
aam
lods
out
and
pusha
jnp
push
push
test
lea
imul
movsb
ja
pop
jg
ret
lods
xor
jp
mov
fcompp
jge
stos
stos
pop
inc
scas
jns
push
inc
push
cmp
in
sbb
out
pop
xchg
xor
insb
push
push
sub
mov
or
mov
ljmp
test
and
cld
cmp
inc
fwait
or
jo
push
les
push
data16
mov
inc
cmc
test
aaa
mov
mov
xor
dec
stos
jle
mov
jne
sub
jne
or
movsl
cli
fsubrl
addr16
jl
jge
call
hlt
pop
lock
std
stos
fildll
lahf
push
and
inc
stos
dec
jb
or
int3
and
jmp
jbe
fisubl
xchg
xlat
decb
rol
or
cld
mov
aam
imul
shrl
stc
adc
rcrb
gs
aas
push
push
into
div
pop
push
mov
adc
imul
sbb
fldt
inc
cwtl
stos
sahf
pop
adcb
jecxz
mov
add
xor
add
fmull
fwait
pushf
mov
bound
pusha
cmp
lahf
xor
or
pop
stc
jb
dec
mov
or
repz
jo
ret
fwait
mov
xor
push
fcompl
xor
and
dec
cmovae
bound
mov
sub
and
mov
lods
xor
lock
sub
sbb
sub
and
adc
sbb
jb
js
pop
pop
add
add
popa
jns
jo
fldenv
fmuls
xchg
adc
pop
xchg
scas
push
inc
push
jne
aas
mov
sub
out
inc
leave
dec
movsl
xchg
mov
push
addr16
sbb
jecxz
sahf
js
cmp
and
dec
out
xchg
je
cmc
xchg
iret
adc
into
mov
fscale
addr16
scas
adc
sar
aas
lret
dec
psubsb
insb
xchg
gs
out
outsb
sbb
mov
xor
mov
lcall
bound
mov
js
pop
scas
mov
xchg
ret
test
push
cli
enter
push
mov
pop
adc
push
mov
out
jbe
xor
pop
jno
mov
into
adc
dec
popa
mov
or
jae
adc
inc
xor
xchg
push
repnz
repnz
xchg
jne
aas
xor
stc
fs
insb
xchg
dec
push
rclb
mov
mov
mov
stos
repnz
add
xlat
int
push
add
add
cmp
mov
sahf
xchg
adc
jo
sub
shl
pop
enter
push
push
aam
jle
jne
push
cmc
or
pop
in
testl
mull
cli
ss
or
pop
dec
push
aam
cmp
adc
repnz
frstor
jae
mov
cltd
xchg
cmp
sub
xchg
sub
rcrb
sub
imull
and
xor
sbb
outsb
sub
jno
dec
gs
mov
and
jge
inc
jge
shl
imul
dec
xchg
mov
movsb
je
adc
or
push
sbb
xchg
push
jo
xchg
pop
xchg
mov
fcoms
test
adc
enter
dec
push
xor
sti
insl
mov
cld
lock
xlat
hlt
jb
xchg
or
inc
lcall
les
shr
cmc
push
jnp
jmp
inc
enter
lock
jge
insl
xchg
scas
xchg
inc
rolb
imul
push
jns
pushf
xor
pusha
and
stos
sbb
sahf
mov
iret
loop
aas
xor
or
push
or
jnp
mov
or
sub
jo
pop
jno
out
mov
sub
nop
jmp
adc
popf
mov
xchg
out
xor
jmp
add
mov
popa
mov
out
in
cs
imul
rolb
pop
mov
dec
imul
inc
xor
dec
xchg
jg
repnz
lods
leave
scas
test
in
scas
shlb
jmp
inc
sub
lds
add
and
cltd
xor
inc
aas
inc
xor
movsl
shll
or
addr16
cltd
jg
fisttps
in
sbb
jbe
mov
jg
mov
fistps
lret
add
cld
fcoml
gs
popf
out
jl
out
lret
add
ds
outsb
sbb
stos
cmp
test
dec
sub
sbb
push
jb
enter
movb
jmp
cmp
xchg
xor
pop
popf
std
add
sbb
and
fcomps
add
xor
add
aad
rcrb
pop
add
xchg
test
mov
test
push
cmp
bound
mov
jp
mov
push
movsl
int3
mov
pusha
push
in
and
pusha
ret
roll
dec
lea
and
stos
add
cmpsl
popf
jle
add
mov
sub
std
es
cwtl
ret
call
insl
inc
mov
pop
mov
outsl
mov
mov
loop
mov
and
inc
jge
add
push
repz
cld
lahf
xchg
mov
cmpsb
add
xor
xchg
lock
mov
lea
lahf
sbb
arpl
es
daa
enter
fistps
call
test
in
mov
addb
in
adc
mov
xor
lcall
ss
jp
sbb
cmp
mov
jmp
nop
mov
popa
ljmp
ficomps
rol
xchg
ret
mov
push
mov
or
addl
push
arpl
mov
ret
xchg
xchg
out
cmpsb
jmp
inc
sbb
mov
femms
iret
in
lock
mov
jmp
xchg
cmp
shrb
rorb
mov
movsb
notl
xor
addl
loop
scas
test
imul
mov
subb
push
sbb
cs
loope
xchg
xchg
cli
loopne
jmp
ffreep
jns
pop
and
or
jl
mov
mov
and
fcmove
adc
repnz
in
fidivl
push
faddl
push
je
or
jae
mov
jg
iret
arpl
enter
or
inc
daa
pop
in
enter
sub
mov
mov
lahf
add
mov
inc
sub
aam
clc
push
or
loope
dec
mov
xchg
inc
jbe
enter
and
ljmp
push
fs
aam
out
xchg
clc
add
cli
cmc
ret
movsb
lock
ja
jp
cwtl
push
cmp
xor
pop
xchg
and
add
jge
mov
in
inc
sub
popa
or
fs
inc
and
fisubrs
scas
mov
mov
pop
cmp
mov
movsb
xchg
cmpsl
inc
hlt
aas
xchg
movsb
pop
xchg
lret
lcall
fstpt
and
push
imul
inc
pop
int3
push
dec
sbb
adc
xchg
testb
iret
das
into
insl
lea
xlat
jns
xchg
inc
loop
out
insl
adc
dec
js
add
and
shr
cmp
inc
enter
pop
mov
dec
add
cmp
cmp
popa
mov
push
xorb
cld
movsb
pop
mov
dec
sub
mov
scas
lret
cmpsb
lea
inc
std
les
and
or
shlb
lock
fsubrp
rolb
stc
mov
xor
mov
leave
stos
jnp
sbb
sub
pop
mov
arpl
je
dec
adc
cmp
mov
push
testl
sti
push
rcl
cltd
testb
add
mov
addr16
loopne
fistpl
xor
mov
jp
ret
dec
mov
or
loop
divps
lock
mov
aas
and
ret
or
mov
mov
pop
and
and
inc
pop
mov
mov
lock
or
push
inc
lcall
ffree
mov
jne
cwtl
inc
or
ss
or
ljmp
fnsave
pusha
lcall
mov
test
xlat
jns
xor
gs
adc
scas
mov
pop
adc
add
inc
lret
jae
sahf
pop
sbb
fstpt
into
or
xor
jno
filds
psrlq
mov
repz
rcl
xor
mov
mov
dec
scas
add
inc
test
divl
mov
or
dec
insl
mov
mov
mov
sbb
sahf
aas
mov
pop
test
mov
push
push
loopne
cmp
mov
or
outsl
jnp
sub
mov
and
mov
lahf
mov
cs
and
pop
dec
and
test
adc
mov
push
lods
xchg
fdivrs
aad
int3
and
arpl
pop
jnp
sub
iret
scas
stos
imul
mov
dec
dec
ljmp
call
push
sub
mov
adc
inc
out
push
out
inc
inc
and
dec
les
dec
int
repz
add
pop
negl
xchg
orb
fadd
pop
mov
insl
xor
cli
out
into
lds
cltd
mov
bound
cmpsb
movsl
sub
cmc
push
sbb
ljmp
xchg
sbb
and
cmp
xchg
jecxz
and
pop
push
stos
push
mov
mov
outsb
dec
mov
ffreep
loopne
mov
out
jg
sub
mov
pushf
out
add
or
lock
inc
sub
lock
sbb
sahf
add
testb
mov
adc
out
and
and
push
insb
cmpsl
cmc
xchg
push
xor
dec
fwait
sub
les
adc
mov
fwait
mov
jle
test
xor
into
mov
mov
mov
and
jae
scas
jmp
jnp
sarb
hlt
imul
and
das
loop
mov
push
lahf
dec
sbb
fwait
jmp
xchg
shrl
scas
je
jns
add
and
mov
leave
nop
xchg
push
and
inc
notb
dec
cmc
dec
lret
push
sub
lret
dec
or
jecxz
movsb
inc
cld
cmp
dec
dec
push
dec
xor
push
cmp
fsts
push
fsubr
mov
jmp
sbb
jp
movsl
rol
dec
imul
mov
scas
xor
addb
mov
sub
jno
mov
es
fimuls
enter
pop
dec
and
lret
add
lahf
mov
cli
or
ficoml
mov
sbb
and
cmp
push
test
and
movsb
push
inc
dec
dec
mov
repnz
lods
dec
lea
xchg
xchg
push
je
in
dec
movlps
cmp
sbb
out
xchg
dec
in
jl
fs
aad
push
cmp
mov
loop
lcall
imul
ljmp
in
test
lahf
sub
mov
fsubl
ja
and
mov
lcall
adc
and
mov
into
jne
sbb
fs
or
mov
arpl
das
inc
les
push
xchg
cli
or
fndisi(8087
sti
xchg
add
addr16
call
cwtl
inc
popa
sti
ljmp
sbb
int3
jmp
jg
lret
mov
aas
mov
add
aam
push
jo
and
push
pop
inc
xchg
imul
push
inc
dec
dec
pop
cld
cld
cmp
xchg
jb
mov
jb
mov
pop
mov
push
add
scas
insl
mov
punpcklwd
mov
loopne
nop
out
into
aas
inc
push
add
shrl
and
pop
test
nop
stos
sub
add
xchg
pushf
ja
pop
sbb
mov
or
mov
sub
pop
xchg
jns
into
mov
dec
cmc
adc
cltd
adc
dec
mov
push
loop
loop
inc
mov
addr16
jmp
xchg
shl
xor
loop
subl
or
mov
mov
pop
lret
xchg
dec
cmp
adc
xlat
xchg
sar
sub
stos
cwtl
mov
dec
mov
sbb
or
jnp
notl
roll
outsl
roll
jp
push
cwtl
or
add
jl
jmp
repz
sub
in
in
dec
addr16
mov
jns
aas
dec
push
movsb
jmp
cmp
and
or
sti
dec
popf
dec
fndisi(8087
lods
cld
data16
add
pop
call
insl
push
out
lods
pop
arpl
or
jb
cltd
and
stos
incl
xlat
xor
imul
lcall
jecxz
jle
repz
dec
inc
pop
pusha
jbe
pop
ret
and
inc
inc
push
xchg
outsb
sub
call
mov
cmpsl
cli
add
loope
test
add
test
pop
push
ss
lods
mov
push
cld
outsb
mov
jae
mov
addr16
jne
test
jb
sub
push
icebp
cwtl
fidivs
adc
mov
or
imul
mov
mov
inc
jg
stos
adc
xchg
cwtl
push
push
fwait
mov
cmp
shrl
xchg
cld
mov
pop
repz
xchg
mov
dec
sub
or
clc
fadds
shl
negl
stos
xor
in
or
test
mov
fwait
icebp
out
push
jg
test
adc
cmc
xor
cmp
mov
insl
cmp
push
pop
cmpsb
jns
xchg
dec
sub
icebp
xchg
stos
push
and
xchg
mov
sub
sbb
ljmp
xchg
clc
push
scas
sub
aam
and
pusha
cs
pop
je
test
sbb
ljmp
movb
in
insl
and
jg
shll
std
pop
and
rcll
cld
pop
jp
ds
les
cmp
inc
imul
adc
adcb
pop
mov
in
lahf
movsl
mov
movsl
roll
rclb
mov
sti
jg
addr16
mov
dec
sbb
call
push
ja
mov
outsb
mov
mov
push
into
inc
dec
shl
jle
aaa
push
jmp
fdivrs
ljmp
aad
xchg
jns
push
inc
push
xor
xlat
xchg
sbb
cmp
lcall
icebp
push
ja
sub
fdivl
shr
sbb
mov
sti
mov
aad
ss
pop
sbb
es
enter
add
jecxz
rolb
jge
lret
ja
jns
adc
and
sbb
nop
lea
or
rcr
mov
subl
shll
jns
je
sub
mov
sbb
pusha
hlt
movb
dec
daa
cmp
sbb
call
mov
adc
jns
in
xchg
sti
push
xchg
insb
pop
mov
pop
notl
jns
pop
or
dec
inc
mov
pop
push
ss
jno
push
jbe
dec
xchg
shlb
daa
lds
cmp
out
mov
dec
data16
add
cmpsb
jbe
insb
rep
mov
pop
cwtl
ror
and
shr
into
orb
shl
fcmovnbe
push
ss
add
xchg
jb
jp
popf
aaa
pushf
arpl
adc
push
cmp
out
push
mov
mov
stc
sbb
out
movsb
andb
jle
fldenv
adc
jne
add
daa
ds
rclb
jns
out
popf
loop
cmpsb
nop
push
imul
lcall
add
daa
int
jmp
mov
cld
das
add
jg
lods
lret
inc
stos
pop
shrb
inc
gs
imul
cmp
jo
aam
inc
or
push
imul
shlb
push
cmp
inc
call
stos
cmpsb
in
xor
jo
mov
pop
hlt
or
lds
pop
dec
or
ret
cmpsl
xchg
std
popf
test
xchg
or
out
push
out
xor
test
pop
lcall
push
xchg
insl
pop
add
fsubs
in
sbb
js
mov
cmp
loope
push
jmp
cmp
movsb
push
cmc
add
les
adc
xchg
notl
inc
pminsw
pop
test
dec
bound
sbb
or
dec
dec
cmp
repz
jp
xlat
jmp
iret
cmp
out
movsb
xor
outsl
movsb
jmp
jl
xlat
fistpl
sub
test
das
shrl
jne
shl
xchg
popf
addb
xchg
jnp
clc
push
dec
jecxz
jbe
divl
in
adc
jb
repnz
dec
pop
inc
dec
pop
mov
cld
inc
rorl
cmp
dec
call
or
imul
and
push
sub
jns
cld
xchg
xor
inc
sti
and
cmp
bound
cmpsb
das
add
mov
js
into
fsubl
test
adc
or
shlb
je
loope
jg
pop
jge
movl
std
in
sub
icebp
hlt
mov
mov
and
cmc
popf
hlt
pop
out
mov
sub
insb
pop
pop
fbstp
mov
fcomp
add
out
in
jnp
ja
out
loop
dec
push
jo
andb
sbb
push
add
xchg
pop
bnd
pusha
enter
popf
mov
cmpsb
mov
sahf
in
dec
lahf
ficomps
repz
fldcw
into
dec
jp
loop
dec
mov
cs
mov
adc
orl
xchg
pop
xor
test
or
popa
mov
dec
sbb
out
fwait
xchg
sarw
int
insb
iret
pop
imul
pop
sub
mov
xor
sbb
movsl
or
imul
out
cld
sbb
sub
add
fsubrs
jns
stc
sbb
shl
xchg
cmp
aad
es
jo
mov
cmpsl
adc
test
add
pop
test
dec
ss
cli
out
dec
aam
adc
add
pop
mov
cli
in
add
add
aas
dec
inc
cmc
rolb
mov
daa
jp
in
adcl
lods
push
fisubrl
sub
aaa
push
aad
dec
stos
sub
mov
aad
fst
jmp
movsl
test
data16
jo
shlb
cmpsl
repnz
pop
mov
bound
and
dec
adc
cmp
inc
scas
outsb
mov
lods
scas
fdivl
add
lods
sbb
andl
jno
sti
in
aad
sbb
iret
inc
mov
stc
std
fstpl
cltd
add
cmpl
xchg
xor
ret
test
iret
inc
je
lret
xchg
pop
jb
dec
arpl
or
dec
imul
bound
filds
cmp
imul
stc
push
imul
jge
push
pop
xchg
dec
idivl
adc
xor
dec
out
movsl
and
sub
sbb
cmp
cmp
movsl
repnz
fnsave
sbb
jo
add
pusha
lret
push
cmp
stc
or
movsb
insb
push
fcmovb
popa
pop
cli
loope
pop
stos
dec
dec
popa
shr
and
xor
rcl
and
adc
icebp
dec
mov
stc
iret
ljmp
pop
imul
imul
or
mov
mov
dec
sub
inc
addb
rcll
inc
jge
push
jno
lock
in
push
inc
pop
push
sub
mov
lds
mov
movb
cmp
dec
gs
loope
sub
jmp
gs
pusha
imul
clc
pop
icebp
and
jg
xchg
push
dec
jp
and
ret
fidivs
push
xor
push
and
or
call
rclb
mov
xchg
jae
lea
aaa
hlt
mov
fsubrl
std
jne
mov
mov
pop
les
dec
jmp
popa
out
sub
mov
dec
jmp
add
mov
jmp
aaa
xchg
arpl
add
movsb
pop
lahf
aaa
in
cmp
aaa
xor
cmp
mov
gs
or
mov
sahf
rorb
pop
data16
dec
fcmovbe
push
add
cwtl
mov
mov
in
mov
mov
int
icebp
xor
xchg
testl
inc
jbe
xor
roll
test
push
and
and
jnp
das
jge
xor
sub
sti
jg
int3
cmp
jae
mov
push
bound
cmc
mov
lods
scas
jl
lcall
outsb
inc
pop
jmp
dec
jl
popf
in
cmp
insb
mov
push
jl
mov
and
lahf
add
int
xor
sbb
cmp
add
or
adc
mov
xor
mov
out
cmp
cmpsb
ja
sub
pusha
fst
dec
mov
pop
xchg
call
js
pop
jae
dec
lcall
mov
clc
nop
lret
mov
push
mov
jmp
call
lret
xchg
popa
jl
xor
iret
ffree
mov
push
cmp
adc
stos
jmp
and
hlt
test
and
xchg
fcompl
lods
inc
add
js
out
adc
push
iret
rolb
sub
jge
lret
aam
or
sahf
sbb
mov
inc
std
adc
or
popa
pop
popa
in
out
sbb
repz
ret
mov
sub
add
pop
inc
jne
adcb
pop
mov
stos
popa
xchg
and
push
movsb
push
pusha
or
add
add
arpl
cld
mov
imul
inc
in
sti
fcmovbe
jno
sti
scas
scas
xchg
cs
jmp
mov
fsubrs
and
xor
rcrl
ret
inc
add
xor
cmp
mov
mov
nop
cld
inc
mov
scas
aam
outsl
mov
daa
and
popa
mov
inc
shlb
pop
test
inc
ss
xchg
out
mov
es
cmp
cs
inc
sub
in
fucomip
mov
jo
mov
or
lret
or
fidivs
shll
mov
imul
cmp
sbb
jle
mov
inc
jnp
push
cmp
push
and
push
dec
sub
loopne
add
outsb
dec
or
int3
mov
decl
inc
xchg
jg
jle
add
mov
jp
fidivs
push
mov
xor
subb
inc
xchg
lods
pop
cmp
add
pop
out
pop
dec
sbb
leave
js
mov
or
jne
cltd
jo
out
pop
or
sub
js
out
xor
push
adc
in
test
out
add
jmp
repz
out
lods
xchg
out
xchg
push
es
stos
pop
inc
subl
inc
cmpsw
mov
cs
test
popf
mov
lock
mov
pop
stos
in
enter
ja
insl
je
pop
mov
sub
je
jo
aam
pop
test
sub
test
adc
inc
cli
inc
and
std
xor
pop
lea
inc
popf
out
stos
sbb
or
lods
in
aas
rorb
pop
pop
in
shrb
jmp
mov
ljmp
dec
jg
out
or
sbb
pop
adc
mov
xchg
js
dec
sbb
pop
movsb
aas
negb
inc
cmp
sub
push
out
sub
mov
xchg
jae
or
leave
sbb
popa
mov
xor
ss
jno
insb
adc
adc
dec
cmp
stos
aad
xor
cmp
push
clc
roll
stos
inc
sbb
cli
test
pusha
fcompl
in
leave
ja
lds
imul
outsb
mov
cwtl
ret
sbb
test
int3
sub
loop
sub
ret
lahf
into
das
inc
cmp
mov
jne
pop
aam
push
leave
sahf
test
dec
mov
pop
jo
mov
cli
in
out
ret
add
out
lods
imul
push
subl
sub
in
jp
call
mov
je
cmp
divb
fisttpll
jg
lods
stos
test
pop
pop
std
stos
stos
jne
add
imul
sub
pop
rcll
sbbb
mov
fldl
and
mov
inc
push
or
jl
sub
popf
inc
lcall
pop
js
dec
ret
or
insb
mov
jne
fists
xor
ret
mov
stos
clc
rcrl
cld
ficompl
sub
push
and
stos
fldt
das
jecxz
orl
dec
loope
dec
shrb
in
testl
aad
cmp
es
sbb
movsb
fsubrl
in
pop
frstor
mov
lds
lods
out
into
sub
sub
jbe
aas
dec
add
push
aam
mov
sub
sbb
daa
imul
jns
popl
and
movsl
sti
leave
xchg
pop
cli
in
and
cmp
sti
sub
pop
push
ss
out
sti
dec
adc
push
jo
out
movsb
loop
or
cmp
inc
dec
testl
push
mov
mov
subl
sbb
je
fabs
mov
adc
push
push
and
sbb
push
add
lcall
pop
xchg
lock
or
adc
ja
xchg
pop
jle
mov
pop
lcall
xchg
sbb
push
add
outsb
cmc
fimuls
lock
push
xchg
cmp
dec
mov
std
dec
and
mov
jle
mov
xlat
jp
xchg
xchg
lcall
xor
xor
fists
adc
push
imul
lea
sub
push
xlat
out
iret
ljmp
popa
xchg
add
mov
cmp
mov
sub
cltd
ret
push
push
jp
inc
jb
inc
jle,pt
out
xor
outsl
jecxz
shl
out
sarl
das
cmp
inc
xlat
dec
ss
adc
lret
inc
fsubrs
add
call
shlb
push
mov
mov
fwait
xchg
rcll
add
das
popf
lcall
mov
enter
fsts
adc
jnp
sbb
out
shll
dec
push
lret
std
mov
rsm
stc
add
idivb
int
lods
lret
into
mov
movsl
icebp
pop
jmp
pop
cmp
or
shrl
es
daa
push
icebp
mov
inc
pop
ret
add
aaa
testl
movsb
outsb
and
ja
imulb
jg
dec
jge
add
lahf
push
cmp
mov
fists
loopne
mov
idivl
push
mov
out
add
mov
xchg
fwait
xor
mov
mov
xchg
jbe
push
sub
push
in
lea
fnstcw
mov
movsl
int3
jge
adc
adc
sarl
or
fistps
outsl
ljmp
adc
pop
xor
sbb
inc
sarb
sahf
jns
inc
or
sahf
mov
into
mov
out
incl
cmpsb
xchg
push
andb
shlb
loop
cld
push
sub
cld
pop
fnstenv
xor
je
daa
mov
iret
insb
pop
xchg
mov
mov
pop
push
mov
xchg
mov
popa
sub
dec
pmaxsw
push
sbb
xor
xchg
insb
add
xchg
dec
push
addr16
movsb
cmp
push
dec
xchg
test
lds
jne
into
push
dec
inc
dec
ja
push
std
nop
test
mov
jle
fdivr
dec
sbb
mov
mov
aas
add
push
cmp
loopne
sbb
divl
and
les
and
mov
repz
fidivl
outsl
stc
mov
lret
ret
ss
popa
add
sbb
mov
xor
fistps
aad
inc
and
push
fstps
rcr
cmp
ret
punpcklwd
cmc
ss
push
xor
jno
int3
lcall
popa
mov
cmpsw
je
add
sarl
fidivrs
adc
sub
pop
popa
hlt
out
xor
dec
cmp
testl
jg
lea
mov
popf
add
testb
ds
push
ljmp
adc
fstpl
clc
xchg
rorl
das
in
xchg
adc
repz
dec
mov
push
push
push
cmp
dec
and
mov
jne
mov
push
scas
shll
gs
imul
mov
mov
iret
sti
push
stos
sarb
lahf
dec
lcall
aaa
pushf
nop
cmp
out
pop
push
jns
in
inc
std
aaa
in
xchg
xor
cli
lods
or
aam
pushf
sti
jb
cmp
or
jmp
mov
inc
sbb
jmp
cli
mov
movsb
push
cmpsb
jecxz
push
or
mov
les
sbb
xchg
push
decl
in
cmp
shr
movsl
cmp
movsb
push
mov
call
fsub
xchg
or
lcall
setle
ds
mov
jo
push
jo
push
cmc
movsl
push
fiaddl
data16
xor
mov
pop
ss
repz
cmp
push
push
pop
addb
adc
icebp
lock
movsl
pop
inc
cmp
aad
fs
jno
dec
fimull
xchg
sbb
pop
xchg
adc
stc
xor
loopne
repz
cmp
stos
pushf
addl
jb
mov
xor
sbb
js
lret
sbbl
xor
add
je
jp
mov
pop
ret
pop
jo
dec
pusha
jno
cmp
pop
mov
xchg
dec
movhps
outsb
cmp
add
jmp
dec
adc
sbb
mov
in
cmp
mov
push
push
jnp
ret
inc
in
xor
ss
cmp
dec
xor
and
fsub
arpl
stc
pop
subb
ss
adc
pop
gs
cmp
inc
xchg
cmp
js
push
jne
mov
sub
fwait
aaa
push
mov
adc
adc
add
sub
jnp
add
mov
into
pop
das
cmp
pop
xlat
clc
stc
jb
ret
out
mov
mov
aaa
out
mov
cmpsl
ss
mov
movsl
arpl
movsb
rcr
add
xor
out
dec
pop
ss
rcrb
testl
popa
ret
cmpsb
fisttpll
aam
les
cli
lea
cmp
lret
sub
push
ficomps
lret
sahf
pop
popf
push
jmp
inc
idivb
ja
aam
mov
aaa
dec
les
inc
test
mov
scas
mov
jge
push
and
fildl
lea
push
std
inc
mov
sahf
stos
sbb
sbb
push
lret
aad
sbb
rep
sbb
loop
jmp
jecxz
pop
lahf
jmp
lods
pop
mov
mov
add
pop
sbb
cltd
outsl
push
cwtl
shlb
cltd
test
loop
enter
mov
insl
cmpsb
push
add
pop
mov
mov
pop
repnz
scas
mov
push
xchg
adc
sub
push
jbe
mov
mov
popa
pop
outsb
xor
int3
out
daa
or
scas
xchg
enter
stos
cmp
lds
cmc
loopne
dec
inc
cmpsl
sbb
notb
adc
xchg
push
add
aaa
sub
popf
mov
xor
cmp
lds
fcmovbe
out
enter
cmpsb
loop
mov
stos
cmp
add
or
popf
bound
fistl
ret
push
scas
mov
dec
add
movsl
push
sbb
leave
popf
sbb
sbb
mov
and
sbb
fwait
cmpsb
mov
and
mov
jnp
daa
fadds
sub
inc
popa
cltd
jl
jb
sub
adc
fistpll
std
mov
inc
sahf
sub
and
stc
jo
mov
xlat
xor
dec
addb
mov
ja
not
sub
inc
loopne
mov
mov
fsubs
cmp
cmp
pop
inc
mov
mov
mov
push
xor
fucomip
pop
arpl
daa
xchg
cltd
fcoms
dec
lea
jno
pop
push
ret
mov
mov
mov
loopne
adc
mov
jbe
sub
jmp
push
jp
cmpsb
jp
sarl
cwtl
sbb
pop
fcomps
jne
add
cmp
lds
xchg
ss
dec
out
push
mov
fstl
js
hlt
je
sar
lock
inc
lret
scas
jle
fdivs
les
test
mov
iret
loop
jle
data16
sbb
mov
dec
mov
aad
mov
adc
outsb
ljmp
sbb
add
test
and
cltd
leave
int
cmpsb
jl
sbb
repz
sub
aas
lret
mov
rclb
xor
aaa
cmp
adc
fwait
into
enter
add
sub
sarb
jne
stos
outsl
nop
lret
rcll
fs
inc
inc
sbbl
js
stos
roll
dec
pop
data16
jl
icebp
jae
lods
data16
mov
repnz
push
shlb
sbb
movsl
xlat
les
xor
lcall
push
fsub
mov
lret
sbb
pop
aas
xchg
dec
sub
xchg
jg
ds
shrb
pushf
sub
sbbl
lods
pop
push
imul
xor
mov
cmp
sbb
lret
jns
iret
stos
cmp
loope
mov
fwait
leave
sbb
jg
test
dec
push
pop
popf
or
iret
cmpsb
insb
mov
cmpl
mov
test
fwait
inc
add
fisttps
push
jmp
pushf
push
xlat
and
dec
cmpb
sarl
je
mov
into
stos
ficoml
xor
or
or
lods
call
and
das
cmp
in
jnp
sbb
mov
jge
repz
repz
test
mov
pop
push
xor
or
dec
enter
mov
dec
xchg
jmp
in
jmp
repnz
test
bswap
loop
out
and
enter
jle
cmp
int
pop
jge
mov
pop
bound
and
mov
jmp
adc
sti
dec
ss
sarb
sub
add
pusha
cltd
repz
ss
lods
pushf
popa
push
adc
in
outsb
xchg
into
jp
repz
mov
sahf
fwait
cld
pop
call
push
xchg
xor
push
data16
xor
mov
sbb
sub
repnz
sahf
aas
dec
subl
push
out
test
push
add
push
bound
arpl
cmp
leave
push
les
dec
xor
mov
les
fistpl
mov
and
mov
mov
lods
leave
ss
mov
nop
addb
jecxz
sahf
inc
leave
std
arpl
xchg
popa
fcmovnbe
int3
jns
jbe
out
xor
xchg
inc
shlb
push
fbstp
pop
fs
mov
mov
out
pop
jns
call
imul
push
inc
fmul
xchg
dec
add
repz
fldt
out
fldt
adc
push
xor
or
test
arpl
pop
and
mov
decb
jg
enter
mov
push
or
test
mov
nop
or
cmc
cmp
push
sbb
pop
push
in
daa
div
and
mov
fmuls
decb
pushf
movb
bswap
jle
xor
rcr
cltd
add
mov
adc
jl
adc
mov
js
dec
fildll
pushf
test
cli
push
sbb
loope
je
adc
push
and
pop
test
cmp
ss
lahf
aas
xlat
iret
jbe
out
inc
mov
rorl
std
xor
insb
pop
inc
mov
pop
bound
das
xchg
cmc
or
push
enter
mov
xchg
pop
aad
ret
pop
imul
js
pop
pop
pop
jge
jnp
mov
movntps
in
out
and
push
xor
adc
adc
sub
mov
lret
aam
and
out
push
sub
push
sub
mov
es
and
xchg
out
mov
cli
pop
pusha
pop
mov
ljmp
leave
or
sub
adc
fisubl
add
push
mov
outsl
sahf
jbe
mov
mov
mov
jne
sub
adc
mov
repnz
dec
or
js
jge
mov
xchg
cltd
out
inc
lods
inc
pop
push
fisubrl
sarl
lods
or
jge
mov
sub
scas
push
pop
sbb
out
int3
notb
andl
mov
mov
sub
aam
lea
push
dec
mov
xor
pop
sbb
xchg
sbb
dec
jle
jp
mov
cmp
inc
nop
mov
dec
jae
enter
pop
mov
pushf
add
cs
xchg
out
and
hlt
icebp
jmp
loop
subl
and
or
cmp
lea
icebp
add
mov
sbb
leave
popl
test
gs
shlb
sub
icebp
sub
push
stos
or
out
pop
jmp
xor
or
or
cltd
aaa
cltd
cmp
mov
in
fwait
lret
adc
stos
push
ffreep
sarl
cmp
jno
sbb
call
jo
or
xchg
inc
call
cmp
into
cltd
test
ret
mov
pop
scas
mov
arpl
xor
and
dec
mov
jne
addb
xor
mov
push
lret
filds
add
jne
push
adc
xchg
mov
push
mov
cmc
adc
sub
mov
jge
rcrb
cwtl
xor
fisubrl
int
js
lods
push
sar
jg
add
xchg
sysret
or
xchg
xor
sbb
pop
cmp
out
mov
xor
push
ss
sahf
shll
mov
inc
lret
shlb
push
inc
in
fidivrl
icebp
mov
cmp
lret
popf
jecxz
stos
xor
call
out
lret
repz
or
mov
cli
lcall
fdivs
imul
sti
jp
cld
and
jecxz
ds
ficoms
aaa
push
cli
add
mov
xchg
dec
mov
out
outsb
lods
push
mov
push
cli
dec
in
mov
icebp
popa
fbld
sbb
xchg
mov
fdivl
inc
aam
mov
and
fdivrs
stos
sarb
xor
loopne
xchg
jmp
xchg
pop
add
pop
int
jo
pushf
bound
sbb
test
jb
cmp
lahf
jno
sub
jns
adc
adc
out
inc
sbb
and
outsb
cmp
xlat
cmp
pop
or
pop
xchg
pop
fistpl
xor
cmp
xchg
rorl
dec
pop
or
aad
in
jmp
aad
ret
cmp
adc
or
fistps
in
sbb
adcb
mov
dec
std
movsl
jg
cmp
xchg
xor
pop
sahf
push
adc
jne
out
data16
pop
or
montmul
cmpsb
adc
dec
push
out
pop
les
inc
jnp
jns
dec
xchg
jecxz
sub
mov
and
mov
fiaddl
cld
push
pushf
fadd
rcll
divb
data16
inc
inc
add
fiadds
mov
jg
out
xor
ds
scas
jbe
dec
cld
imul
and
push
push
adc
or
sub
aaa
decb
lret
add
sub
int3
stos
aam
add
je
pop
cmp
aaa
icebp
add
xchg
inc
testl
xor
sahf
repnz
outsb
cltd
lcall
sub
cmp
inc
in
into
xchg
and
push
mov
ss
and
call
pop
cmp
fimuls
jne
sahf
out
and
int
mov
xor
push
jo
adc
sub
gs
data16
cmp
shr
dec
cmpsb
dec
lret
lock
cmp
xor
gs
inc
rclb
lret
push
cmp
call
sbbl
cmp
jo
lods
jno
push
cmpsl
and
inc
lods
leave
cmpsb
jecxz
xchg
enter
in
dec
and
pop
inc
pop
cmpsl
and
loop
xchg
int3
jns
xor
sbb
push
cli
or
xor
mov
in
addr16
lds
fildll
inc
repz
lods
jo
adc
dec
rcrl
sbb
mov
incl
xor
xor
ljmp
lret
adc
pop
popf
jns
jno
add
bts
pushf
into
invlpg
jge
cmp
cltd
stos
xor
pop
push
cli
xor
aad
aam
jg
enter
iret
loopne
scas
xchg
mov
xchg
adc
mov
icebp
data16
mov
repnz
push
inc
pop
pop
gs
pop
aas
cmp
adc
imul
or
jo
lret
jmp
xor
test
mov
jmp
loop
add
mov
mov
stos
sbb
sub
mov
inc
shll
dec
or
or
or
inc
ljmp
push
out
je
shlb
push
movsl
sbb
jmp
jne
cmc
mov
sbb
jne
xor
pushf
sbb
jno
daa
cld
roll
mov
jmp
xchg
loope
add
jl
push
pop
scas
mov
popa
mov
icebp
jge
lods
rolb
leave
cmpsl
sub
outsl
mov
sbb
loopne
inc
stos
xor
jp
sbb
jl
sbb
jno
hlt
or
pop
insl
scas
pushf
aad
sub
mov
stos
aad
jbe
xor
cli
push
pop
adc
push
hlt
sub
stos
pop
xchg
pop
mov
cmp
xchg
push
jp
or
test
xor
imul
or
lahf
mov
xchg
xchg
add
clc
mov
adc
adc
cmp
dec
push
jb
js
iret
sub
dec
bound
out
ret
sbb
mov
cmp
mov
lret
das
out
sahf
cltd
sub
xchg
dec
jno
cmc
pop
adc
xorl
rolb
adc
cmc
aas
jne
je
aad
leave
jp
cmp
shlb
xor
daa
mov
adc
lret
fwait
adc
push
mov
inc
rclb
cmp
test
add
dec
in
js
divb
xor
fst
hlt
testl
xor
fidivrs
clc
loope
loopne
fdivl
mov
dec
popa
sub
or
or
outsl
pop
ss
inc
loopne
add
imul
bound
lea
add
pop
ret
iret
xlat
sbb
sbb
cmp
pop
sub
jg
cmp
xchg
cmpsl
jmp
and
jb
add
push
ficoms
push
mov
shrl
push
push
sti
xchg
repz
mov
sbb
sbb
hlt
mov
cmp
in
sub
pop
add
dec
mov
mov
and
push
cli
push
mov
fsts
cmp
ss
les
or
mov
imul
or
mov
lods
mov
andl
pop
cmp
adcl
mov
in
xor
mov
test
mov
call
xorl
mov
shll
xor
outsb
add
iret
jae
mov
negb
loopne
mov
xchg
aas
lock
ja
jns
mov
dec
pop
jae
xchg
arpl
pop
bound
bound
jle
push
push
sbb
sub
xlat
shrl
out
inc
push
gs
pop
mov
xor
daa
mov
or
sub
xor
pop
inc
adc
jno
jne
xorl
push
fwait
push
ds
and
cwtl
xchg
add
mov
cmpl
loopne
shlb
fwait
cmpsl
pop
xor
js
cmc
ljmp
push
xor
out
mov
jg
enter
scas
ret
push
ds
ds
lods
daa
inc
scas
clc
lock
or
mov
cmp
rorl
sbb
movsl
pop
pop
mov
push
sbb
jno
sbb
dec
xchg
pop
inc
arpl
or
adc
rorl
enter
cmp
inc
loope
fwait
mov
push
test
out
inc
pop
stos
int3
das
push
push
cli
jbe
jnp
es
or
insb
das
stos
dec
and
pushf
lahf
inc
pop
sbb
xor
pop
daa
test
pusha
aaa
jo
test
jge
push
or
shl
cmp
lock
fnstcw
lds
hlt
fwait
pop
sbb
lahf
or
int
sub
call
sub
enter
jecxz
lea
mov
adc
push
stos
out
arpl
dec
lcall
adc
fstpt
pop
cmp
and
andb
sti
lock
xlat
pop
sub
in
aad
push
inc
gs
orb
and
and
jbe
cli
ret
xchg
test
jnp
xchg
mov
and
std
cmpsl
jae
les
mov
sub
fiadds
insl
sbb
pop
cmp
xor
sahf
mov
dec
xor
inc
fwait
js
repz
xor
jns
iret
std
test
push
and
repz
adc
xchg
test
jg
push
in
mov
jne
push
aaa
fiaddl
aas
jne
sub
jg
in
out
fcomi
inc
cwtl
repnz
sbb
fcoml
fdivr
ficomps
loope
jnp
xor
loop
aaa
mov
in
xchg
push
out
std
or
rcll
jae
xchg
xchg
dec
daa
jno
lods
ss
jecxz
scas
test
cli
iret
push
and
pop
movl
or
in
jg
sub
mov
jae
in
adc
stos
add
sub
int
insl
clc
xor
inc
adc
imul
inc
push
bound
cli
out
push
push
xchg
aam
xlat
mov
popf
push
cmp
jg
mov
call
pop
sarl
inc
dec
dec
pop
push
jnp
jns
mov
addl
es
jmp
pop
loopne
and
addr16
ja
jge
prefetch
mov
cmp
imul
jp
daa
push
sahf
lds
ret
cmpl
add
push
mov
loop
out
lods
add
das
sahf
jg
test
pop
idiv
mov
jp
in
gs
shlb
xor
push
xchg
mov
subb
wrmsr
push
mov
or
adc
mov
jne
cmp
std
sub
pop
sti
sub
sbb
fdiv
out
roll
enter
clc
jle
adc
push
gs
or
cmp
out
ja
xchg
mov
movsl
in
scas
lcall
iret
or
and
arpl
mov
xor
fadds
xor
pushf
aas
mov
jp
mov
fcmovnbe
adc
es
ret
test
lahf
sub
and
adc
dec
out
push
dec
sub
popa
mov
insl
shll
push
dec
rclb
int
int
cmp
dec
and
and
and
in
insl
push
jg
fwait
xor
cmp
push
shrb
mov
mov
push
ljmp
or
movsb
pop
cmp
cmp
push
mov
cmp
lcall
cmp
sti
pop
test
out
inc
idivb
mov
push
jl
add
inc
clc
add
mov
lds
inc
pop
pop
push
dec
fcom
movsb
mov
jnp
add
loopne
cmc
fs
and
nop
push
jmp
jne
fmul
jnp
pop
inc
jnp
xchg
stos
mov
mov
lods
in
and
aad
test
incl
mov
nop
jge
adc
in
ss
sbb
xor
inc
mov
push
loop
fbld
mov
dec
xchg
lock
mov
outsl
jmp
mov
mov
shr
cmp
imul
cltd
adc
xchg
mov
sub
insb
jbe
mov
es
push
jle
sarl
movsl
cwtl
les
in
mov
mov
sbb
outsb
pop
pop
call
cmp
sub
nop
and
fidivl
cmp
ljmp
and
dec
cltd
lcall
or
or
rclb
jle
aad
jl
ss
stos
faddl
pop
xorl
ja
dec
push
pop
add
sub
dec
fnstenv
mov
sarl
inc
outsb
push
inc
mov
and
mul
mov
loope
or
pop
outsl
push
out
jne
int
testb
aas
jp
sbb
and
mov
cmp
ljmp
loopne
mov
lods
add
ljmp
mov
imulb
fadds
jecxz
xchg
je
or
add
adc
repnz
das
les
call
imul
xor
sahf
adc
push
jle
or
int
ret
cmp
xor
icebp
xchg
lods
mov
pop
lods
pop
mov
jle
mov
and
rcrl
cmpsl
add
mov
test
adc
or
bound
stos
clc
loop
repnz
push
add
hlt
call
call
call
pop
jge
mov
mov
sahf
rep
cmp
or
inc
cmp
cwtl
inc
rolb
sub
inc
cmp
push
dec
nop
dec
fcompl
psraw
jmp
lods
xchg
jl
xchg
mov
jg
cmc
xchg
call
mov
inc
andb
lahf
jcxz
cmp
repz
push
out
test
testb
out
xor
faddl
jecxz
dec
loope
xor
push
xchg
xor
daa
xchg
push
int
jo
inc
mov
dec
inc
pop
test
jg
sub
xchg
mov
mov
lea
popf
xor
outsb
dec
jo
popf
pop
dec
outsb
jno
cmpsl
fbstp
lahf
xchg
cmp
ficompl
in
or
xchg
sbb
icebp
movsl
and
cwtl
jns
dec
ds
jp
and
mov
sub
xchg
mov
mov
mov
or
mov
mov
push
push
pusha
mov
aad
pop
mov
pop
adcl
sub
xor
mov
repnz
sub
and
push
rolb
loop
mov
std
or
xchg
rclb
lods
xor
stos
out
jbe
or
jbe
ret
inc
mov
ljmp
fwait
mov
inc
push
jns
leave
call
and
into
xchg
jg
outsl
sub
adc
out
pop
or
lss
mov
scas
adc
fcompl
mov
sub
xor
push
iret
mov
and
sti
ja
inc
jno
cmpsl
xchg
rcll
out
or
mov
sub
sub
out
loope
jl
inc
or
pop
into
push
pop
daa
inc
cmp
push
scas
mov
mov
sbb
or
es
or
sbb
xchg
jns
dec
jecxz
sub
mov
imul
lahf
cmp
icebp
add
test
xchg
push
push
sarl
and
out
ror
cwtl
xlat
adc
callw
testb
jmp
sbb
inc
pushf
js
xchg
pop
mov
add
out
popa
pop
xchg
outsl
mov
cmc
adc
mov
fdivrl
lea
push
rorl
mov
test
jbe
xchg
mov
mov
add
or
or
mov
mov
push
jge
cmp
lds
pop
mov
dec
call
adc
leave
jg
jns
xlat
lock
xlat
mov
popf
jae
bound
in
fbstp
adc
test
or
sub
cmp
ret
gs
lea
mov
sub
imul
lret
inc
je
cmpsl
cwtl
or
jg
or
aam
adc
pop
jle
pop
jecxz
adc
push
in
dec
mov
scas
lock
lret
xor
jmp
adc
hlt
and
and
xor
fnstsw
in
jne
inc
push
dec
cmp
sub
test
decl
loope
push
pop
cmc
mov
out
fs
in
cwtl
xchg
push
cld
lods
jl
or
sbb
xchg
xchg
add
xor
push
fnstcw
imull
cwtl
in
dec
and
inc
jp
sti
sti
mov
hlt
jg
sarb
out
inc
std
adc
push
in
stos
jge
sbbb
movsb
mov
xchg
xchg
mov
int3
out
das
std
mov
jno
inc
jl
jl
add
xor
int
dec
pop
int
ljmp
inc
lods
jo
das
js
testb
outsl
adc
pushf
xor
cmp
popf
fnstenv
or
mov
loope
or
divl
bound
cmp
adc
pop
mov
cmp
mov
push
das
xor
hlt
sbb
repnz
pop
popa
sbb
adc
in
cli
cli
loopne
scas
mov
jae
lock
ret
fstl
fisttpll
ds
stc
pop
add
and
cs
mov
lret
jl
std
jge
or
cs
cltd
lret
insl
sbb
sub
push
add
aaa
rol
cmp
mov
lret
or
jae
mov
lcall
or
test
pop
mov
test
mov
or
pop
scas
fcom
mov
incl
mov
adc
sub
push
fs
dec
jo
lahf
arpl
add
inc
push
negl
fcompl
and
mov
or
mov
push
sti
jo
stc
nop
cmp
js
cmpsb
icebp
adc
sbb
aas
andb
fsub
push
jle
cmpsl
add
xchg
sub
int3
sub
lods
mov
fwait
pop
xchg
arpl
adc
addr16
fsubl
stos
rcrb
add
add
jne
push
cwtl
adc
insb
lret
and
sbbb
cwtl
or
jae
xchg
push
out
mov
sbb
ljmp
pop
xor
pop
jl
lret
pop
stos
insb
sahf
js
imul
fldenv
dec
sbbb
mov
mov
cmp
lret
sbb
adc
jnp
ja
xchg
imul
es
mov
mov
shll
push
int3
fldl
sub
or
add
mov
fidivs
cmp
imul
dec
je
lcall
pop
ss
lahf
fisttpll
and
cmpsl
lret
sti
xchg
dec
mov
jp
xchg
xlat
push
sbb
dec
sub
repnz
jne
sbb
sti
fs
movsb
sbb
xchg
xor
lock
mov
addr16
scas
dec
test
pop
mov
lods
mov
mov
jl
sahf
cmp
fsubs
dec
subps
jne
outsl
xlat
ss
sarb
cmp
sub
dec
popa
xlat
xor
shll
push
jecxz
push
out
lock
rcrb
dec
inc
les
mov
rcr
sbb
mov
xchg
push
push
and
in
mov
je
push
pop
add
fstps
jb
inc
cmpsb
inc
xchg
test
das
inc
stos
scas
pop
push
push
call
cmp
dec
ret
out
mov
mov
dec
jle
mov
or
or
lods
into
dec
jne
popa
jmp
add
loope
imul
adc
in
mov
fildll
inc
sarb
loop
addr16
fldt
cmp
fisttps
inc
mov
push
mov
jo
pop
outsb
js
inc
add
call
cmp
xchg
movsb
ljmp
push
push
sar
sbb
cmpsb
adc
cmpsb
rcll
fwait
cli
jge
cld
nop
or
popf
shl
lahf
inc
insl
fwait
adc
popa
in
mov
sub
adc
mov
cmp
xchg
aaa
mov
idiv
mov
jmp
add
or
subl
aad
jg
mulb
xchg
xor
push
cs
sti
jge
and
inc
cmp
mov
cs
dec
cmc
enter
out
push
push
mov
push
adc
push
pop
xor
and
mov
jno
outsb
sbb
stos
pop
dec
push
fsubr
mov
and
je
sbb
xchg
stos
pop
stos
xchg
and
pop
popf
dec
int3
orb
add
hlt
adcl
ds
pop
xlat
jne
sub
decl
sbbb
sbb
adc
cwtl
leave
add
mov
add
and
fs
pop
js,pt
fwait
add
aaa
mov
sub
inc
nop
mov
dec
dec
and
adc
test
pop
dec
daa
inc
mov
add
lock
stc
inc
pop
cmp
adcl
sbbb
jmp
xor
push
out
icebp
jg
arpl
ret
dec
pop
pop
mov
jg
sbb
int
and
mov
in
bound
int3
and
sti
inc
mov
fdivs
sbb
sub
pop
cmp
jno
fsubs
sub
mov
add
push
fistps
and
xor
and
std
pop
dec
xchg
or
jne
xor
jne
pop
jle
cmpsl
cltd
xchg
popa
sub
enter
stos
xchg
xchg
dec
jp
and
cmp
push
ss
sbb
sbb
les
adc
lods
jne
lret
sub
pop
aam
jmp
js
push
xchg
sub
lods
mov
or
jo
or
xlat
cmp
call
mov
and
push
pop
add
insb
scas
adc
roll
repz
inc
adc
jae
jp
jl
push
pop
ja
sarb
stc
insb
inc
push
and
mov
mov
inc
push
pushf
popa
insb
incl
cltd
sub
mov
and
pop
in
roll
cmp
xchg
cmpsl
mov
fcompl
xchg
mov
lret
pop
push
dec
mov
outsb
add
mov
adc
or
sti
in
mov
mov
xor
adc
bound
dec
mov
or
add
lret
pop
int
icebp
cs
in
test
test
mov
mov
insl
pop
jle
lods
das
orl
cmp
sub
jle
pop
mov
lods
cmp
das
arpl
xlat
xorl
int
cmp
or
push
lret
inc
lret
push
es
cmpb
shrb
rclb
aam
jb
cmp
aaa
dec
xchg
call
lods
dec
pop
dec
jo
clc
pushf
xchg
sbb
mov
call
loopne
push
lahf
pop
loopne
cli
inc
loop
add
and
jae
sar
xchg
sbbb
or
test
and
cmp
mov
mov
jno
and
xor
xlat
sbb
aas
xor
xchg
mov
mov
roll
and
out
test
in
or
add
loopne
add
xor
dec
mov
addr16
add
sbb
test
lock
lahf
add
leave
repz
push
sub
add
stos
pusha
xor
data16
out
cmp
bound
dec
and
test
cltd
pop
fs
call
and
add
test
mov
jg
pop
dec
hlt
ds
ret
mov
arpl
push
cltd
movsb
jmp
or
icebp
push
and
negl
add
adc
pop
mov
call
mov
iret
pop
inc
cmp
jle
pop
lods
pop
int
inc
test
mov
lea
sub
and
mov
jnp
add
es
jl
or
sbb
xlat
jb
test
and
mov
sbb
inc
xor
pop
js
ljmp
and
jmp
lods
cmp
loopne
jp
jle
sub
mov
xorl
xor
int3
mov
shr
dec
and
xor
pop
ljmp
pop
push
and
inc
jbe
int3
dec
mov
nop
call
insl
sub
push
lahf
fs
dec
pop
mov
pop
push
jle
ret
push
std
in
pop
fdivrl
and
and
pop
jbe
cmp
pop
in
push
shl
jmp
daa
push
pop
loop
xchg
mov
mov
movsb
mov
mov
cmp
and
add
mov
xchg
mov
xchg
int
movsl
arpl
imul
pop
adc
inc
aam
push
dec
shr
or
std
and
out
sub
je
call
ljmp
dec
mov
dec
in
enter
loop
inc
and
sbb
test
movsb
clc
out
jp
and
push
sti
popa
pop
pop
push
push
push
call
lret
ljmp
loope
xchg
iret
push
aaa
mov
shrb
je
mov
xor
lea
mov
xlat
popf
ds
fldenv
paddusb
add
xor
cmp
loopne
ds
add
push
pop
jae
stos
in
icebp
mull
int3
xchg
jl
fidivrl
add
addb
clc
dec
out
rclb
subb
fists
xchg
push
stos
adc
jo
inc
sbb
mov
sbb
jns
adc
push
test
insl
push
or
notb
lret
and
inc
adc
stos
icebp
iret
out
xor
je
mov
movsb
add
mov
loop
push
jns
xor
aam
or
pop
mov
add
push
and
std
addr16
insb
pop
lods
imul
pop
mov
jl
out
sarb
aas
test
or
hlt
imul
cmp
aaa
fcmovb
in
push
sti
arpl
push
add
lret
in
enter
jl
adc
out
sti
loopne
sbb
cld
pop
ret
pop
push
push
jno
sub
getsec
or
je
adc
sarl
pop
or
bound
sub
push
jecxz
push
add
inc
mov
inc
iret
dec
xchg
scas
xor
jne
inc
push
add
rcll
jecxz
pop
xchg
ljmp
enter
lods
sbb
leave
cmp
jle
jmp
and
xor
xor
les
xor
cmpb
mov
das
pusha
jb
xchg
push
add
inc
icebp
fsubp
pop
mov
sbb
lods
ja
dec
jecxz
and
sarl
aas
mov
sbb
in
dec
pop
dec
insl
cmp
insl
mov
push
fbstp
xlat
jmp
mov
ja
mov
shll
inc
push
add
in
add
addr16
es
pusha
stos
push
adc
mov
in
push
cmp
addr16
pop
mov
pop
mov
in
jbe
in
bound
push
sti
arpl
cli
inc
pop
cmp
faddl
sbb
imul
xchg
adc
jl
dec
xchg
dec
loop
outsl
jl
stc
sbb
jns
pusha
stos
repz
in
shll
push
adc
scas
enter
ljmp
mov
mov
sub
jnp
inc
ret
pop
xor
mov
xchg
sub
pop
jp
inc
push
dec
test
sub
stos
fsubrs
lods
jbe
push
aad
imul
icebp
dec
fidivl
xchg
rclb
cmpl
into
sbb
lods
lds
es
cmpsl
fnstsw
mov
subb
fstps
sub
ljmp
pop
mov
int3
cmp
stos
push
scas
lods
sub
add
sub
add
jne
dec
arpl
loopne
fs
in
pand
es
into
mov
aam
push
xor
mov
ljmp
mov
mov
lock
ret
mov
fcomi
mov
aam
ret
outsl
test
subb
cmp
shrl
mov
jecxz
lret
adc
xor
cmpsl
mov
scas
push
inc
lock
adc
push
inc
stos
mov
imul
rclb
gs
jo
shll
lods
sarl
mov
aam
daa
push
xchg
pusha
cmp
out
repz
cli
dec
mov
add
inc
cmp
inc
es
mov
push
adc
es
jge
sbb
sub
test
xlat
rol
aaa
int3
pop
lods
add
lods
xchg
mov
cmpsl
fldenv
in
push
std
test
mov
in
push
add
aas
adc
mov
in
imul
mov
sbb
pop
xchg
lcall
ss
pop
icebp
pushf
mov
sub
out
pop
cld
mov
pop
xchg
insl
jb
lods
or
xor
adc
mov
xchg
gs
fidivrl
add
shll
call
loope
push
push
iret
mov
out
pop
testb
shl
mov
adc
leave
xor
lcall
cltd
lds
mov
test
pop
fwait
imul
mov
dec
movsl
sahf
or
cmp
movsb
outsl
cs
push
aas
bound
mov
bound
push
subl
add
loope
mov
xchg
pop
jb
hlt
subl
jbe
pop
ss
aam
adc
xor
icebp
jg
loopne
dec
cld
mov
or
add
stos
inc
lret
jb
jmp
xchg
push
ss
and
test
outsl
in
push
mov
lahf
lds
ljmp
lahf
call
adc
xor
cmp
sub
sub
mov
lret
xchg
mov
sbb
loope
xchg
mov
scas
aad
and
and
xchg
pop
mov
mov
add
inc
mov
pusha
jge
mov
mov
outsl
jmp
dec
out
mov
mov
hlt
clc
outsb
xchg
xor
adc
mov
roll
xor
sti
js
xor
fnstsw
push
sbb
loopne
and
loopne
add
loopne
xchg
pop
ljmp
lret
sub
push
lret
mov
cltd
cli
std
loopne
mov
mov
ljmp
mov
push
dec
fs
inc
test
lret
push
mov
insb
push
pop
les
fdivp
cmp
aad
in
data16
lret
jg
repz
mov
ret
jl
pop
imul
aas
jl
mov
push
mov
mov
mov
jbe
ja
pop
inc
lret
clc
sub
test
icebp
cmp
push
jae
jno
in
out
jl
jne
mov
sbb
push
lea
je
xor
cld
out
or
loope
adc
sub
xchg
jae
lock
adc
mov
sti
fsub
popa
daa
lock
push
mov
fisubrs
repz
int
int
cmpsl
sub
addr16
jno
loop
inc
dec
adc
cmpl
cmpsb
in
xchg
or
mov
adc
mov
out
mov
or
jnp
ss
push
or
push
outsl
leave
ljmp
addr16
shll
mov
push
ljmp
negb
ficoms
dec
sub
loopne
xlat
sbb
fnstenv
mov
scas
jns
into
dec
lds
or
inc
and
negb
ret
clc
out
addr16
push
clc
out
xchg
dec
loope
sub
push
mov
ffreep
rorb
push
jmp
dec
cld
out
sbb
aam
cmpsl
data16
pop
cli
push
and
sub
jmp
enter
mov
popa
jae
mov
imul
mov
clc
adc
in
push
push
sub
or
loope
rcrl
lds
and
shr
mov
cli
dec
fldt
loopne
es
xor
jmp
pcmpeqw
sub
sbb
hlt
mov
cmp
sbb
fwait
sarb
shr
jmp
xor
out
ja
push
mov
pop
rolb
xchg
xchg
adc
leave
shrl
xlat
xchg
inc
fdivrs
or
jle
push
test
ja
sub
push
aas
xchg
pop
or
or
ffree
aaa
es
xor
jo
mov
sbbb
insl
xor
lods
ficompl
sub
mov
pop
push
mov
shll
jae
or
push
pushf
xchg
xlat
or
in
ljmp
out
arpl
mov
mov
hlt
fdivl
movb
xlat
adc
and
jp
dec
mov
push
xor
sbb
xchg
iret
lock
mov
scas
inc
insb
fistps
loop
push
mov
dec
mov
xchg
jl
xchg
aad
add
rcl
jle
inc
decb
cmpsb
shll
cmpb
cmpsw
push
xchg
xchg
shll
mov
andb
lods
lret
int
arpl
pop
push
adc
xor
pop
orl
adc
mov
xchg
fistl
fildl
je
cmc
adc
repnz
mov
push
les
shlb
and
or
push
test
int3
cmp
lock
pop
mov
add
orl
loop
jecxz
popf
xchg
imul
leave
jo
cmp
lods
sbb
pop
cmpsl
mov
push
xchg
or
mov
jns
insb
jne
dec
push
clc
cmc
jecxz
out
sahf
push
dec
sub
or
ss
notl
sbb
jecxz
mov
or
pop
jmp
xchg
sbbl
addr16
lock
adc
lods
sub
add
test
dec
jns
out
test
inc
sub
aad
cmp
mov
push
push
jmp
add
ret
inc
scas
sbb
cwtl
push
mov
mov
lods
mov
pusha
subl
dec
cmpsb
fstl
mov
int
je
ret
popf
push
movl
xchg
inc
mov
pop
jbe
cmp
roll
pusha
sbb
xchg
rorl
bound
pusha
push
and
pop
mov
jp
xlat
data16
stos
fmulp
pop
test
mov
xchg
mov
xchg
jg
icebp
ljmp
mov
mov
and
sbb
ret
jo
cmp
jl
mov
repz
fsubrs
inc
pusha
push
add
call
stc
xchg
fisubs
rolb
gs
mov
pushf
lret
xchg
mov
jl
jge
shlb
mov
lcall
cmpsl
fcoms
data16
sub
movsb
scas
sbb
pause
xor
loopne
fwait
pop
mov
lock
add
fstpl
daa
push
jae
test
mov
cmc
cltd
dec
mov
stos
imul
jmp
and
xorb
imul
and
movb
insl
sbb
or
and
sarb
jne
add
fdivl
int
cmp
xor
imul
and
in
subl
gs
mov
clc
test
adc
into
adc
mov
jmp
aad
out
add
arpl
scas
and
push
xchg
insl
cmpb
repz
add
pop
cmp
dec
fsub
outsl
and
add
hlt
jg
bound
ret
aam
pop
push
or
movsl
stc
popf
mov
ds
xchg
cmpsl
xor
loopne
jb
mov
pop
cmp
pop
add
xchg
sbb
jecxz
fwait
add
loopne
or
lods
pushl
mov
and
ret
faddl
and
inc
or
add
fucom
test
pushf
leave
dec
xchg
pop
insb
gs
gs
xor
addr16
mov
outsl
dec
sahf
filds
lahf
dec
mov
addr16
dec
in
dec
xlat
std
dec
out
loopne
jae
scas
cmp
cmp
into
sbb
sub
ficoms
inc
dec
roll
inc
and
inc
push
sub
rorb
sbb
cld
adc
adc
out
aaa
repz
leave
mov
jae
and
cld
lret
and
sbb
sub
cmpsb
lahf
add
push
push
xorb
shl
clc
imulb
js
fcomps
dec
mov
test
xor
push
fiadds
mov
loope
rorl
jmp
hlt
jge
dec
jno
lea
adc
sub
fisttpll
cmpsl
pop
xlat
shr
test
xchg
clc
add
loopne
add
lret
lcall
sbb
inc
and
xor
pop
push
mov
or
repnz
aad
ja
pop
inc
xor
add
bound
xchg
test
jae
inc
xchg
fnstsw
pop
pop
rorb
outsb
adc
test
xchg
test
cltd
out
adc
sbb
adc
jae
mov
push
mov
addr16
insb
cld
nop
sbb
mov
stos
jb
push
xchg
test
cmp
sbb
aam
push
sbb
fdivrl
mov
inc
mov
cmp
sarl
outsl
loopne
xor
setnp
mov
or
int
push
jno
jae
test
sti
sbb
outsb
movsb
add
loopne
jge
push
dec
testb
pop
sbb
inc
aam
xchg
sub
scas
push
xor
sar
and
pop
das
stos
rclb
push
mov
pop
loopne
in
out
lahf
pop
pushf
cmpsb
addb
and
and
sbb
or
daa
push
mov
aaa
insb
adc
fidivrl
lds
loopne
sub
les
fsts
xchg
mov
jmp
pop
cltd
cmpsl
fcomip
test
jp
mov
xor
push
and
clc
jg
sub
pop
add
sub
divb
mov
fcoms
push
out
mov
clc
xchg
insb
jl
adc
nop
push
sbb
push
sbb
stc
xchg
jmp
or
xchg
lahf
sub
cwtl
das
in
push
arpl
mov
jle
out
incl
mov
sbb
loop
cli
cmp
out
push
add
add
mov
das
fs
pop
hlt
pop
sub
xchg
xorl
sbb
in
in
stos
sub
xchg
mov
inc
sub
sub
sbb
insb
dec
repnz
ret
lods
xchg
inc
jns
lods
push
pop
decl
popf
sbb
sar
sub
lea
pop
leave
dec
mov
xchg
ja
jns
fdivl
xlat
dec
scas
jecxz
aaa
cmp
fdivrp
jecxz
loope
inc
dec
outsb
push
je
fnsave
mov
push
orb
fidivs
lods
arpl
ljmp
cmp
cltd
gs
daa
les
shrb
lds
lret
add
adc
sub
or
push
sbbl
lea
inc
mov
imul
nop
mov
adc
adc
or
outsl
ret
adc
ffree
int3
push
int
xchg
mov
mov
ret
sub
mov
push
jne
jecxz
sub
xlat
js
dec
mov
je
sub
out
xor
mov
pop
repz
dec
dec
pushf
add
loopne
xor
push
out
and
pop
mov
rolb
rclb
mov
decl
push
loope
or
mov
ret
or
cwtl
cmp
add
cmc
push
and
fidivl
lcall
push
test
mov
add
sahf
jne
jge
fldenv
push
out
aam
movsb
xchg
add
mov
cmpsb
nop
adc
inc
push
cmpl
aas
fwait
pop
push
ret
sarl
pop
jae
test
popf
repnz
fwait
popf
sbb
mov
pop
fsubrs
inc
sahf
cmp
mov
lret
pop
push
cmpsl
inc
popf
or
pop
sti
sub
aaa
or
mov
cmp
js
sbb
jmp
jbe
mov
xchg
fnsave
aad
je
inc
mov
cmp
mov
in
dec
mov
pop
or
cmp
lds
adc
or
mov
clc
mov
jb
mov
lret
mov
mov
dec
xor
sbb
lods
cs
lcall
fldenv
fcoml
lcall
rolb
in
int
ljmp
stos
push
dec
push
mov
mov
pop
push
mov
shr
out
push
mov
sub
es
shll
arpl
stos
jno
std
clc
push
sti
push
push
andl
pop
mov
testl
jmp
mov
sub
fsts
in
jecxz
mov
xchg
push
xchg
nop
out
inc
sbb
lcall
ret
imul
and
das
cli
xchg
push
push
pop
mov
movsb
shlb
sub
mov
cmp
xor
fwait
and
negl
pop
sbb
icebp
pop
xor
push
cmp
adc
jp
loopne
data16
push
inc
xor
jecxz
aaa
pop
add
add
jl
inc
daa
leave
pop
mov
ss
push
cwtl
loopne
pushl
jnp
cmpsl
outsb
xchg
mov
adc
or
stc
loope
sti
cmc
lods
leave
std
pushf
loopne
lods
and
sti
popa
jge
cmp
loopne
dec
jmp
ret
push
jle
jo
xor
dec
dec
xor
stos
push
cmpsb
add
inc
mov
pop
sti
nop
int3
stos
mov
mov
orb
cmpsb
or
and
mov
loope
push
nop
push
aas
stc
sti
and
mov
outsl
fidivrs
cltd
and
iret
repz
xchg
cmpsl
sub
sbb
mov
sub
aas
vpsubsw
addr16
loopne
aaa
sbbl
nop
push
cmp
lods
dec
cli
int3
cmp
mov
cmpl
and
aad
inc
mov
xchg
xor
outsl
int3
push
add
movl
cltd
or
jge
cmp
push
jmp
aaa
out
jg
lds
jae
cltd
cwtl
jo
pop
ds
dec
aam
rolb
mov
jbe
push
mov
lret
xchg
mov
sub
ret
mov
ja
subb
call
mov
push
add
push
xchg
pop
mov
adc
pusha
dec
andl
pop
mov
and
push
xchg
push
and
mov
fwait
imul
std
mov
adc
add
inc
aaa
jns
movsl
and
add
push
pushf
test
cmc
cmp
or
adc
arpl
inc
pop
stos
mov
leave
jecxz
clc
mov
movsl
loop
out
sbb
test
fmull
aad
xor
push
loop
inc
das
jnp
add
aas
push
cmp
dec
test
mov
cli
xchg
dec
pop
movsl
iret
mov
adc
push
test
pop
and
hlt
lock
das
arpl
outsb
sbb
jecxz
out
inc
inc
cmp
mov
mov
mov
jmp
sub
or
or
jno
ror
cwtl
and
andl
xor
test
push
scas
dec
xor
jg
inc
jg
scas
aam
call
pop
sbb
push
mov
mov
andl
fcmovb
mov
inc
ss
adc
popa
cmpsb
cmpsb
lds
rcll
mov
inc
adc
push
and
pushf
int3
pop
lea
add
loope
mov
icebp
jne
lods
dec
fincstp
addr16
pop
push
xchg
mov
xchg
push
in
push
xchg
hlt
lds
mov
ficomps
bound
push
adcl
add
and
stc
dec
add
or
or
pop
cltd
mov
mov
pop
ja
and
jb
sbb
mov
cli
cltd
loopne
push
ss
jns
testl
inc
or
xor
sti
nop
fdivrp
rorl
fs
xchg
lret
pop
xor
scas
bnd
add
sub
push
lds
and
lds
mov
out
push
xor
outsb
pop
fidivrl
outsl
inc
or
add
mov
shr
fistpl
js
jnp
sbb
mov
xor
add
inc
sub
pushf
into
xchg
inc
cld
jecxz
sbb
jb
adc
fwait
lods
mov
inc
popa
sbb
inc
mov
push
push
xorl
in
std
dec
pusha
cld
repz
mov
popaw
scas
enter
cmpsb
dec
adc
shl
add
shlb
pop
inc
mov
or
int
jge
sahf
sti
sbb
mov
lcall
outsb
pop
cmpsl
loope
mov
lret
mov
and
dec
movsb
bound
sbb
roll
inc
push
mov
mov
sbb
cwtl
test
pop
stos
icebp
sbb
and
dec
scas
push
insl
data16
ljmp
push
cs
mov
test
addr16
add
pop
je
mov
push
mov
adc
cwtl
imul
mov
sarl
mov
dec
jns
imul
lret
and
adc
mov
mov
pop
push
popa
push
inc
cs
add
loopne
and
in
mov
sub
imul
ljmp
test
out
xor
or
scas
lods
cmp
add
sahf
jnp
daa
in
xchg
aaa
add
sub
aas
dec
sbb
inc
mov
and
jnp
add
pop
xor
xor
push
mov
jo
movl
dec
push
ret
xor
sbb
mov
xor
or
cmp
push
in
je
pop
stos
jmp
sbb
jge
jge
jl
movsb
and
dec
outsb
adc
data16
lods
jp
fwait
cs
push
add
ror
fisttps
sub
mov
stc
insb
icebp
movsl
add
aad
jnp
xor
jno
adc
jae
ja
pop
jo
pop
cmp
add
and
sub
imul
and
idivl
or
sub
outsl
pop
jg
lret
mov
lret
outsl
xor
data16
movsb
enter
cli
mov
push
popf
lret
dec
mov
dec
jge
push
mov
gs
jmp
xchg
dec
scas
push
cmp
add
lea
adc
mov
popa
push
and
mov
sti
fcomps
out
mov
push
stos
adc
ret
fsubp
dec
xor
pop
push
xchg
leave
aas
ficoms
and
cmpsb
xorl
mov
pop
cmp
fcoml
jmp
sbb
jbe
icebp
cmp
aas
fxch
push
cltd
pop
cmp
jnp
mov
push
sbb
ss
push
mov
dec
orb
adc
aad
sub
and
mov
sbb
inc
divl
adc
rcpps
loopne
push
mov
push
sarb
repnz
push
loope
push
enter
pop
call
pop
icebp
std
cwtl
pop
push
popf
stos
pusha
mov
lret
jmp
scas
sub
jge
jnp
mov
lods
jle
movsb
popa
mov
popa
out
cli
push
jne
scas
popa
fistl
add
loopne
leave
cltd
pop
push
insb
popf
neg
inc
pop
and
int
insb
cld
adc
dec
cmpsb
sti
jecxz
fwait
xor
iret
add
cmp
js
bound
sbb
ja
int
inc
sub
das
out
sbb
push
std
mov
or
dec
lock
mov
rorl
imul
or
jnp
xchg
sub
lret
icebp
sub
pop
mov
xchg
jl
jecxz
in
pop
mov
dec
call
or
adc
iret
repz
push
inc
icebp
sub
in
and
xchg
push
jecxz
and
insl
push
dec
lock
ljmp
loope
fimuls
push
xor
adc
sahf
iret
aad
dec
popa
sbb
out
out
mov
pop
add
insb
int3
mov
add
and
lcall
leave
pop
add
or
mov
xor
lea
adcb
sub
adc
std
ret
popa
outsb
jo
movsb
mov
mov
inc
imul
push
pop
inc
mov
push
out
adc
ret
mov
mov
sbb
std
lahf
dec
jns
mov
cmpsb
sbbb
cmp
loope
mov
jno
sbb
out
out
rcl
orl
das
inc
add
inc
and
dec
lods
xchg
aad
outsl
mov
inc
push
lods
ret
leave
fcompp
sub
xchg
lods
xchg
adc
dec
and
outsl
lea
lcall
pop
mov
jno
arpl
and
inc
mov
push
push
push
xor
addl
xchg
pop
mov
es
cmpsl
movsb
imul
mov
push
fdivrs
mov
fisttpll
cli
fsubrl
ljmp
pop
pop
mov
mov
cmp
hlt
jae
pop
add
loop
sahf
mov
cmp
jo
sub
test
pop
pop
jnp
outsl
lods
into
xchg
dec
xchg
int3
and
insb
mov
sti
add
aam
xor
outsb
aad
xchg
xor
inc
and
inc
in
dec
aas
sbb
lcall
fnstenv
jne
mov
in
dec
sbb
in
dec
mov
sub
lods
xor
inc
repnz
mov
pusha
jnp
sub
cmp
das
lods
cltd
das
mov
loopne
fldl
rcl
sub
icebp
mov
loope
mov
addb
fistps
inc
cmovae
mov
xor
fiaddl
pop
and
mov
lods
adc
mov
out
cli
or
lret
cmp
mov
fmulp
sub
aaa
xchg
out
shlb
ja
ja
pop
add
push
dec
ret
aad
lods
inc
movsb
xchg
inc
loope
sbb
outsb
in
scas
scas
add
inc
movb
lcall
pop
addr16
push
jp
jge
jnp
inc
mov
out
mov
sbb
pop
fwait
inc
and
lcall
mov
sbb
push
pushf
idiv
mov
xchg
roll
andb
adc
aam
stos
sub
icebp
push
cmp
mov
mov
inc
cmp
cmp
adc
loope
push
divb
add
mov
push
fsts
fsub
jecxz
jp
imul
lret
mov
push
mov
fisttps
out
insl
ja
imul
int
jp
int3
add
mov
pushf
in
dec
je
mov
push
mov
xor
or
jae
testb
add
adc
sbb
stos
push
int
mov
xchg
mov
inc
bound
push
pop
mov
cmp
or
dec
pop
mov
stos
mov
mov
nop
mov
cmp
mov
in
idivb
js
and
or
or
into
fadd
sub
lret
fisttpl
push
xor
aam
or
pop
lret
movsl
outsb
incl
imul
popf
push
mov
mov
push
addr16
jmp
pop
push
iret
xchg
repz
sub
mov
outsl
arpl
jns
pop
lahf
inc
pop
or
sbb
jo
mov
test
dec
add
push
cmp
inc
mov
call
dec
cwtl
sub
jmp
icebp
xchg
repz
adc
dec
iret
add
jae
sub
pop
jg
fwait
xchg
das
inc
lods
pop
pop
add
xor
push
in
stos
cmp
cs
jge
xchg
dec
adc
fisttpll
jle
fists
pop
push
xchg
ja
mov
push
fcoms
push
mov
or
ljmp
sub
ja
test
jecxz
pusha
cmp
lock
iret
add
fcoml
in
mov
fs
call
inc
xchg
aad
adc
push
sub
xchg
or
xor
dec
mov
jo
jp
dec
sti
add
insl
popa
pop
jne
cltd
add
push
pop
ja
bound
loope
mov
add
mov
cmpsb
in
testb
xor
popf
aaa
and
pop
pusha
add
xchg
jle
pop
push
ret
inc
sub
jle
repz
and
lock
movsb
imul
repz
adcl
jo
cmp
xchg
pop
and
cltd
nop
bswap
pop
jns
pop
dec
mov
sub
and
stos
js
jns
in
loopne
push
cmp
inc
sub
jmp
loop
xor
call
sbb
sub
aaa
push
aad
and
repnz
and
rorl
push
xor
cltd
push
mov
pop
dec
jnp
xchg
xor
sti
es
mov
pop
cmp
pusha
sbb
cmpsb
mov
js
dec
roll
adc
sbb
dec
mov
pop
jp
rcl
sbbb
mov
inc
mov
fdiv
jo
or
mov
out
push
mov
jp
cmc
jne
jne
idiv
push
andl
inc
push
pop
pop
imul
je
cmpsl
jae
sarl
adc
adc
push
call
push
push
jecxz
stos
adc
xor
in
sub
icebp
lahf
ds
adc
test
and
fs
push
aad
jmp
xor
das
push
sub
mov
cmp
clc
lods
inc
push
mov
notl
adc
pop
mov
scas
sbb
xchg
inc
or
add
add
inc
dec
pushf
ficoml
mov
enter
push
bound
cmc
adc
hlt
sbb
ja
loopne
insb
jmp
push
testl
adc
cld
adc
dec
lock
iret
dec
cmp
dec
pop
add
jge
xchg
mov
push
mov
not
mov
daa
movsb
iretw
xchg
sub
jns
cli
cmc
cmpsl
jg
in
jns
popf
add
mov
jmp
rolb
insb
int3
cwtl
leave
inc
dec
sub
push
lods
adc
mov
mov
arpl
daa
arpl
push
imul
xlat
jnp,pt
movsl
jb
and
mov
inc
in
xchg
mov
jbe
inc
push
mov
icebp
inc
jno
jle
pop
xchg
rorb
pop
add
out
andb
lahf
jae
aam
mov
jne
stos
arpl
inc
fisttpll
mov
inc
jecxz
and
cmp
sbb
out
or
sub
data16
adc
hlt
andb
sbb
sbb
je
sbb
pusha
ror
and
cld
adc
mov
inc
lahf
outsl
adcb
outsl
jno
pop
mov
es
xor
std
cmp
sbb
repz
mov
addr16
fstpt
data16
jp
add
pusha
xor
pop
clc
dec
pop
fistl
arpl
adc
sarl
imul
inc
push
xor
into
pop
jbe
or
cmp
xchg
dec
sti
in
cmp
jecxz
dec
push
xor
xchg
xchg
sub
jns
jne
mov
mov
sti
call
jmp
mov
adc
fistpll
xlat
pop
out
push
sbb
push
inc
pop
inc
pushf
add
arpl
mov
jle
mov
pop
push
sub
sbb
enter
arpl
pop
addr16
mov
lcall
lock
cmp
xor
cmpl
add
cmp
or
fwait
aas
push
or
adc
cli
cmp
mov
gs
mov
cmp
cli
xor
fstpl
mov
lahf
leave
mov
xor
movsb
imul
cmpsl
mov
push
xor
lds
or
sub
ljmp
fldl
push
mov
push
insb
mov
out
fs
dec
inc
lret
push
inc
cmp
add
mov
fwait
das
xlat
inc
enter
dec
fneni(8087
mov
sbb
xor
iret
dec
jmp
mov
sti
or
cmc
add
jmp
pop
cmp
fiaddl
mov
je
push
push
inc
ljmp
dec
mov
adc
aam
adc
pop
add
aaa
lcall
daa
ficompl
repnz
xor
rcl
leave
pop
lea
sbb
push
ss
xor
inc
jne
fildl
ret
sub
fwait
jg
push
imul
int
iret
mov
repnz
push
sbb
in
push
lods
adc
mov
sbb
cmp
aad
aas
cmp
xchg
iret
cmc
stc
in
sbb
push
lods
inc
mov
ja
pop
jne
xor
in
xor
sbbl
xchg
adc
aaa
movq
xchg
jmp
fsubs
push
mov
xchg
outsl
sti
hlt
xor
and
push
mov
cli
xor
jl
or
fsts
sbb
mov
add
clc
jo
test
mov
stos
pop
addl
jo
push
and
pop
lods
mov
stc
scas
lahf
mov
add
jmp
push
pop
std
int
inc
ret
xor
fdivs
std
stc
daa
xor
or
push
sub
jg
ret
inc
sbb
inc
add
pop
jo
cmp
fs
fwait
aaa
jle
in
ds
subb
popf
jge
xor
in
sub
repnz
mov
fistpll
mov
sub
and
mov
dec
aas
jno
ret
cmp
push
xor
and
sbb
xchg
cli
idiv
lret
in
scas
pop
mov
inc
lahf
sub
inc
jb
sti
lods
jle
rcrb
and
sub
rol
roll
push
cmp
mov
or
jge
adc
xor
and
daa
adc
lret
sub
sbbl
mov
and
jns
xchg
movsl
add
and
mov
lea
xchg
sub
dec
cld
mov
pop
push
out
repnz
dec
stc
in
cmp
and
fwait
test
mov
dec
xchg
fildll
mov
loopne
and
xchg
mov
sbbb
and
shrb
adcb
adc
cmpsb
mov
push
outsb
sub
fisttps
daa
mov
faddp
rcl
xor
pop
dec
pop
out
mov
in
stc
in
es
pop
pop
mov
pop
inc
arpl
into
rolb
push
xchg
push
fs
pop
sub
testl
pop
cmp
push
loope
push
or
dec
cwtl
push
xchg
nop
mov
or
push
lds
jl
xchg
aad
nopl
sbb
inc
or
mov
jmp
aad
sbb
cmp
pop
sahf
bnd
dec
inc
mov
xchg
mov
movsb
jecxz
add
push
or
aad
ja
dec
xchg
jp
mov
ss
cmp
andb
mov
sarl
xchg
push
lods
and
jb
sti
stc
scas
insb
loope
mov
loop
inc
out
jo
push
ja
mov
scas
push
loop
pop
jae
sub
mov
ljmp
dec
cwtl
ret
adcb
shrb
sti
mov
ret
jno
or
jl
shll
imul
ljmp
add
adc
subb
and
mov
pop
aam
push
fsubrl
repz
in
push
mov
xor
and
dec
xchg
jae
push
mov
bound
pop
mov
enter
add
push
jne
sub
in
out
sbb
and
pusha
mov
cmp
mull
enter
pop
out
dec
pushf
jns
pop
push
jecxz
ljmp
lock
out
inc
insb
jmp
cwtl
insb
mov
loopne
lds
xchg
leave
cwtl
xchg
dec
xchg
push
fldl
icebp
call
sbb
cltd
push
fldt
sub
in
cmpb
jne
cmp
fisubrl
push
stos
mov
aam
rorb
scas
push
and
mov
push
sahf
push
jp
add
mov
nop
cwtl
aam
xor
inc
stos
fcomip
sbb
out
stos
fs
add
inc
cmp
xchg
popa
das
dec
fs
adc
cmp
repnz
xchg
add
mov
aas
data16
rorl
inc
fnsave
lret
xor
mov
jb
jo
sbb
stc
adc
add
xor
scas
ffreep
test
mov
andl
cmpsl
insl
mov
test
mov
cld
xchg
imulb
in
pop
dec
sbb
mov
and
xchg
push
jle
test
into
jmp
or
movsl
dec
xchg
sbb
dec
imul
mov
dec
or
outsl
std
mov
ret
idiv
inc
pop
insb
sbb
popf
pop
sbb
mov
in
imul
push
push
sbb
roll
sub
mov
mov
iret
xchg
ror
scas
pusha
int
pop
fidivs
xor
jnp
movsl
mov
das
or
pushf
push
or
xchg
jp
cld
jne
fists
enter
sbb
das
cwtl
frstor
adc
mov
ds
ljmp
adc
jle
scas
xchg
cmp
jae
push
in
out
mov
cmpsb
movsl
insb
outsl
mov
jle
ret
test
seto
movsl
inc
push
mov
jno
scas
mov
mov
pop
lea
add
xchg
lock
das
pop
pop
mov
aaa
xor
cld
mov
bnd
in
stc
mov
scas
sahf
stos
repnz
mov
dec
mov
push
aaa
pop
or
lret
cmp
or
inc
or
test
pop
mov
fsubl
mov
fadd
pop
jo
jno
ljmp
iret
or
pop
orl
xchg
jg
push
test
sbb
cmp
add
icebp
mov
dec
jbe
aaa
add
rorl
or
and
loop
mov
xchg
xorl
enter
ficoms
mov
mov
sbb
push
inc
pop
pop
jne
sub
int
aam
mov
aam
icebp
fs
or
movsl
rolb
pop
out
enter
lods
or
bound
push
mull
or
mov
les
add
out
and
or
in
iret
or
popf
arpl
add
mov
cmp
stos
ret
cli
cli
or
shlb
xor
arpl
mov
ret
subl
cmp
pop
push
mov
movsb
mov
add
xor
pop
xlat
lods
fcmovnu
sub
mov
inc
sub
test
jge
mov
loopne
mov
bound
loopne
cld
pusha
dec
sbb
lock
jmp
push
repz
stos
add
sub
in
push
or
adc
xor
mov
test
imul
or
push
fwait
add
rcr
xchg
aad
cmpsl
mov
mov
xor
iret
add
pusha
fisubs
inc
mov
in
ds
push
das
sbb
movsb
subb
hlt
popf
xor
push
addr16
pop
cmp
add
adc
jno
aaa
adc
out
iret
insb
or
aam
fiadds
adc
into
xor
and
pop
rcll
jbe
cmp
push
adcl
lods
mov
cmc
jl
mov
sub
dec
cmp
popa
sub
loop
mov
lcall
pop
rcll
into
sub
iret
xor
addr16
cmpsb
imul
repnz
xchg
repz
lahf
mov
sar
push
out
jl
repnz
gs
iret
jge
ljmp
sbb
fnsave
out
out
push
jecxz
repnz
pushf
push
in
push
loop
lret
jns
push
adc
add
ficomps
or
inc
jo
pop
mov
loopne
mov
adc
fst
fwait
push
imul
fs
adc
jecxz
sbb
ja
sbb
cmp
and
popf
add
test
imul
inc
push
mov
js
pusha
fcmovnbe
mov
mov
movsb
iret
mov
adc
gs
cmc
sub
sti
outsl
aad
or
inc
sbb
fwait
lea
push
arpl
shll
jmp
sub
idivl
add
cmp
jle
push
ja
adcb
popf
shrb
addb
mov
pop
jns
stos
cmp
gs
hlt
xchg
ja
idiv
cmp
jp
jg
lahf
inc
add
outsb
mov
setg
push
stos
inc
fildll
test
mov
push
aas
mov
out
cmp
cmp
mov
xor
push
shll
cmpsb
push
dec
pop
sbb
test
inc
repz
push
mov
xchg
add
divl
jge
daa
test
mov
cmp
sbb
cmpsl
mov
gs
aad
sub
mov
int3
popa
mov
arpl
imul
jae
xor
jl
mov
enter
mov
xor
cs
mov
scas
fisubl
lds
push
addr16
bound
and
bnd
push
ret
jno
inc
pop
xlat
xchg
lcall
scas
dec
jno
mov
loope
out
add
pop
xchg
push
scas
add
mov
jg
jp
add
dec
push
dec
scas
jp
mov
pop
cs
or
adc
mov
cmp
addl
cltd
lahf
mov
cmpsl
mov
sub
pop
inc
and
shll
xor
loope
aaa
mov
add
jb
loopne
adc
lods
mov
push
add
jne
xchg
mov
jg
adc
jl
cmpsl
mov
cmpsb
push
inc
aas
or
and
mov
clc
into
dec
xchg
or
push
dec
add
or
sub
out
push
dec
fadds
add
je
adc
aad
loop
sahf
add
test
shrl
xor
adc
test
sub
out
pop
push
dec
in
movsl
sub
ljmp
jnp
clc
jno
sub
outsl
mov
dec
xchg
fcmovb
dec
movsb
fs
inc
pop
shl
xchg
sbb
cmp
push
mov
cli
or
sbb
mov
fimuls
jge
xchg
jb
add
push
xchg
and
lods
popf
cs
out
adc
jo
sti
int
cmp
into
les
push
sbb
aas
ljmp
mov
ret
jecxz
pop
lods
loope
jne
faddl
mov
adc
inc
lret
lods
fsubl
xor
test
xor
xor
rclb
repz
jns
add
mov
data16
icebp
mov
pop
xor
arpl
cmp
test
mov
lods
xor
jnp
addb
cmpsl
sub
dec
sub
out
cmpsl
mov
cmpsl
dec
cld
out
mov
push
scas
sbb
pop
hlt
xchg
sahf
pop
scas
inc
jecxz
xchg
pop
pop
jge
loope
jg
mov
pop
ret
mov
inc
mov
mov
fiadds
daa
cmpsl
xchg
pop
jno
dec
push
repz
jmp
movsb
add
rcrl
fnstcw
push
jbe
mov
jb
xor
popf
stos
pop
out
icebp
inc
cmpl
xchg
adc
fldt
mov
sbb
push
sbb
sbb
sub
dec
stos
imul
jg
ds
ror
inc
inc
in
xchg
bound
test
or
xchg
xor
hlt
mov
or
and
pop
jmp
insl
fwait
ret
pushf
arpl
mov
dec
cli
scas
push
sub
inc
sbb
sahf
movsl
jp
aas
cmp
mov
adc
mov
lock
inc
mov
and
hlt
xchg
mov
jle
push
xchg
mov
jno
subl
cli
rcll
arpl
nop
cs
cs
pop
pushf
mov
pop
jb
insb
stos
or
push
inc
in
cwtl
mov
or
add
or
popa
ret
call
in
insl
mov
jg
push
push
pop
fdivrp
push
movsb
scas
push
mov
push
das
clc
jp
sbb
add
and
outsl
lea
or
mov
stos
outsb
pop
push
testb
test
movsl
xor
ficoml
jns
inc
cmpl
jmp
dec
mov
loopne
mov
fcompl
mov
test
push
sub
adc
fiaddl
push
xchg
aad
hlt
sub
or
gs
lods
gs
rcll
cmc
cld
cmp
test
jo
adc
mov
jbe
mov
xor
lahf
mov
fcompl
sarl
aad
or
mov
iret
nop
or
movsb
ss
adc
js
sub
popf
sahf
incl
mov
push
jne
gs
js
mov
xchg
sbb
shr
mov
test
adc
or
fcomi
data16
fisubs
push
jno
fimuls
addl
push
sub
js
sub
push
or
dec
mov
ja
and
cs
sub
add
sub
mov
mov
add
sbb
scas
lock
aaa
loope
mov
test
mov
jb
jb
xor
add
imul
movsl
adc
scas
das
int3
dec
push
sub
addr16
push
leave
mov
loope
and
sbb
loope
pop
sbb
mov
cmp
sbb
add
lock
push
test
sar
jo
and
andb
adc
std
mov
mov
mov
or
out
popa
sub
cmp
mov
adcl
xchg
mov
call
mov
popa
mov
xchg
andl
or
xchg
fidivrs
lock
pop
mov
jne
stos
xchg
lock
pusha
mov
imul
dec
adc
mov
mov
ret
and
sub
mov
mov
sub
cmp
and
push
inc
insl
les
and
or
inc
xor
xor
push
pop
out
mov
push
sub
and
shll
lret
cwtl
leave
mov
cmpsl
into
jl
fs
add
fmul
or
test
in
mov
inc
arpl
in
in
inc
jo
arpl
jmp
test
cli
jne
xor
ret
stc
cmpsl
in
sub
stc
add
jp,pn
push
push
call
stc
cltd
popa
pushf
outsl
push
add
jbe
test
inc
mov
push
mov
out
pop
nop
cmp
mov
xchg
pop
xlat
outsl
adc
lea
fidivs
cmp
mov
push
push
das
xchg
pop
sub
mov
scas
push
lahf
xor
xchg
ficomps
imul
xchg
ret
push
sbb
lea
insb
mov
pop
mov
mov
mov
imul
xor
das
adc
pop
loope
out
pop
mov
leave
mov
pop
in
mov
pop
arpl
imul
test
in
out
jno
ljmp
gs
pop
outsl
std
mov
shlb
test
jbe
lret
cli
and
push
ja
xor
jo
shlb
and
dec
addr16
gs
cmpsl
push
dec
stos
mov
mov
clc
mov
repnz
dec
mov
pushf
out
cmp
push
inc
mov
movl
adc
dec
sarb
sub
scas
mov
jmp
sub
cmpsl
aaa
mov
and
mov
jno
push
and
in
aam
inc
inc
insl
inc
ljmp
push
ficoml
xchg
lods
scas
ljmp
call
lahf
mov
adc
add
sub
ret
iret
xor
imul
or
adc
jecxz
cmp
outsl
jmp
and
dec
out
aad
out
mov
movsl
mov
scas
icebp
fldenv
mov
orl
jle
test
into
mov
iret
loop
xor
out
cld
sahf
xchg
xchg
stos
or
dec
cmp
ret
mov
cmp
hlt
sahf
mov
roll
mov
and
or
and
xchg
dec
out
and
aam
rcr
pusha
mov
popa
push
sbb
cmp
fsubl
push
push
mov
inc
push
loope
xchg
xlat
rorl
in
sbb
out
jno
sbb
insl
stos
pop
sbb
sbb
inc
pop
cwtl
sbb
inc
xchg
mov
movsl
or
or
clc
pop
fistpll
pop
and
mov
outsl
or
jg
data16
sub
sahf
std
dec
out
inc
inc
lds
dec
fnstenv
and
mov
jecxz
sbb
xchg
pushf
ss
in
cmpsb
jns
mov
ret
bound
inc
add
adc
enter
mov
in
xor
dec
cltd
ret
cld
sbb
fstps
test
mov
and
pop
stos
push
mov
out
cli
stc
and
pop
shr
data16
test
ret
rcrl
sahf
orb
or
pop
cmp
inc
sbb
leave
cmpsl
outsb
inc
insl
xor
mov
div
icebp
push
cli
or
test
dec
mov
mov
pushf
rcrb
out
rolb
icebp
jmp
loop
xchg
push
push
aam
inc
pop
push
scas
or
or
aam
sbb
push
das
add
mov
mov
inc
cmc
xchg
mov
adc
add
push
inc
cwtl
inc
lock
lea
adc
cmp
push
out
addr16
shl
and
push
cwtl
ja
sbb
push
pop
fidivs
loope
outsl
add
es
in
pop
test
and
stos
clc
test
dec
push
ds
and
cmp
dec
inc
mov
push
jae
and
icebp
ret
lea
xchg
hlt
xchg
dec
dec
push
and
adc
test
xchg
add
ret
fwait
push
rorb
push
daa
aad
mov
fs
mov
loopne
xor
cmp
aad
dec
xor
das
sbb
test
inc
aam
dec
rolb
jno
jo
icebp
aas
adc
dec
jle
push
xchg
push
jecxz
jg
subb
push
jno
xchg
xlat
hlt
mov
mov
push
inc
cli
push
mov
jne
xchg
bound
jb
lods
into
js
or
sbb
cmc
subb
mov
mov
ret
push
sbb
mov
cmc
out
xor
pop
ljmp
repnz
testl
inc
mov
add
pop
stc
aas
mov
mov
decl
inc
iret
pop
clc
aad
ljmp
jnp
push
cmp
out
jns
pop
arpl
jg
aam
jno
cmpsl
or
insb
rolb
popf
sbb
add
pop
enter
addr16
and
fwait
cmp
add
fwait
arpl
pop
sub
xchg
gs
lret
cmc
push
call
jno
pusha
dec
push
sub
xchg
pop
mov
repz
add
addb
add
repnz
outsl
or
adc
icebp
mov
lock
jmp
inc
xlat
shl
and
inc
add
xor
ljmp
adc
cmovb
leave
add
dec
mov
gs
out
decb
mov
inc
imul
mov
mov
mov
push
adc
int3
rcl
add
inc
mov
test
loope
jo
es
lock
add
sahf
lods
fmul
in
arpl
push
loop
pop
aam
sbb
hlt
dec
cli
jecxz
pop
int
out
mov
and
push
sub
jns
sahf
pop
sub
sbb
je
les
lcall
iret
inc
pushf
imul
add
cld
dec
jo
addl
pop
aad
sbb
popf
arpl
ret
std
imul
cmp
js
lahf
jno
sub
stc
jg
cld
push
mov
movsl
xchg
ror
jp
mov
mov
testl
fsqrt
push
mov
pop
setl
pop
aas
shrl
jb
xor
testl
into
sub
jno
insb
adc
call
std
jmp
inc
adc
sti
adc
ret
cmp
cs
int
fsubrs
push
push
adc
dec
pushf
scas
mov
push
addr16
xor
aad
les
inc
inc
mov
push
dec
or
shll
into
sub
fnstcw
pop
cmp
adc
gs
data16
arpl
or
push
sbb
and
xchg
imulb
in
add
lcall
imul
adc
into
js
scas
pop
cmpsl
push
mov
mov
test
xor
negl
push
push
mov
in
mov
popa
aam
xchg
std
imull
ds
adcl
arpl
out
jno
jb
imul
out
inc
xor
negb
dec
jecxz
pop
fwait
cmp
cmp
daa
xchg
negl
cmp
dec
add
ljmp
push
loope
popa
mov
add
or
jo
mov
repnz
push
cmp
mov
mov
addb
sahf
push
push
pop
insb
inc
cmpsb
out
pop
or
sbb
cltd
mov
imulb
dec
arpl
mov
clc
dec
int
out
movsl
imul
fucom
pop
int3
out
add
addb
ss
and
add
pop
jns
cwtl
out
leave
testl
mov
addr16
xor
hlt
sahf
aaa
ds
lds
loopne
xchg
mov
out
mov
jl
addr16
jl
lods
adc
jg
inc
mov
pop
add
mov
enter
lahf
enter
adcb
xchg
shlb
fdiv
outsl
xchg
xchg
stos
sbb
jg
out
pop
int
cs
mov
lret
sub
sbb
sbb
inc
add
mov
pop
icebp
xchg
lahf
jg
mov
jecxz
pop
lcall
dec
fstps
jb
jnp
das
xor
sub
push
xor
ss
push
inc
xor
mov
loop
xor
aam
dec
cmpsb
jmp
sbb
aaa
imul
xchg
insl
loope
jl
fnsave
and
loope
ja
call
data16
cwtl
jmp
xor
dec
mov
and
dec
insb
mov
les
dec
inc
sub
pop
andb
cmp
jnp
push
imul
add
sbb
cmpsl
cli
dec
xor
lock
jge
or
inc
mov
jns
ljmp
ja
jnp
xlat
aas
xchg
xchg
pop
mov
mov
in
std
imull
inc
xchg
fidivl
aaa
sub
mov
mov
mov
pop
movsl
cli
movsl
imul
out
adc
outsl
inc
jmp
and
xor
ficoms
cmp
ror
stos
dec
stos
mov
mov
lret
outsl
ret
aad
loope
xchg
hlt
xchg
jae
cmp
xor
loopne
add
fcoml
mov
in
pop
stos
rorb
xchg
jmp
cmp
out
mov
stos
mov
insb
mov
les
into
mov
je
mov
int3
aad
add
aas
push
repnz
xor
pop
sahf
xchg
loopne
hlt
push
mov
repz
scas
cmp
mov
aad
jg
fcomps
repnz
mov
fildl
repnz
mov
jae
lds
sub
aam
or
inc
ja
mov
pop
stc
fidivl
outsb
daa
mov
int3
pop
sbb
loope
leave
aaa
shll
mov
xor
push
ljmp
in
dec
bound
outsl
clc
mov
idivl
jmp
iret
xchg
dec
cs
push
movsb
and
aaa
pop
hlt
daa
movsl
cmp
rolb
mov
cli
je
in
push
and
ss
mov
pop
dec
jecxz
in
test
cld
add
or
enter
adcl
mov
fdivl
imul
sbb
xor
cmp
and
mov
pop
cmp
call
cmpsl
push
jb
aam
mov
aaa
popf
pop
mov
push
inc
in
lret
dec
push
sbb
jmp
dec
and
in
out
arpl
stos
mov
add
std
mov
xor
int3
scas
les
sub
pop
int
jbe
out
pop
enter
xchg
mov
jae
mov
fdiv
lret
push
je
fcom
sbb
xchg
jae
add
scas
fldt
mov
add
ss
fadd
jmp
and
rcrb
jl
ret
ret
sub
dec
sti
or
and
or
push
mov
push
mov
fisubl
mov
and
fprem1
pop
stos
data16
in
into
pop
in
dec
insl
lcall
or
mov
popa
mov
dec
cmp
and
movsb
push
xchg
into
mov
cmpsb
and
outsl
adc
xchg
shl
pusha
mov
dec
pop
push
mov
mov
mov
adc
mov
sti
lret
xchg
pop
mov
js
andl
roll
pop
xor
in
push
movsl
sti
cli
sub
mov
ficompl
or
add
rcr
dec
mov
rcll
xlat
lods
sub
in
cmpsb
mov
cmc
out
cmp
out
dec
cmc
xchg
jl
outsl
push
cmp
and
xchg
inc
in
dec
xor
xchg
pop
movsl
xchg
add
pop
push
data16
xchg
xor
mov
cmpsl
arpl
xlat
jae
mov
movsb
test
icebp
popa
adc
scas
sub
in
push
stc
xchg
xchg
fwait
push
sub
dec
lcall
psrlw
sti
jp
jg
cli
cmp
sub
push
mov
mov
or
jl
nop
in
jecxz
cmp
sub
jl
dec
jb
lods
sub
sbb
cmp
sbb
dec
addr16
or
das
bnd
mov
ljmp
or
std
out
mov
and
shrl
jecxz
repnz
ds
rolb
aam
repnz
mov
js
inc
jmp
addl
push
arpl
out
rcrl
imul
stos
jae
lahf
ret
inc
add
pushf
cmp
nop
lds
shll
mov
or
into
dec
inc
xor
xlat
or
cwtl
inc
gs
jle
cmpl
je
lods
sbb
aas
aaa
cli
or
lahf
or
or
lock
sar
xchg
push
sub
andl
xor
ss
fdivp
mov
adc
dec
or
fstl
pop
mov
in
aaa
jl
add
jmp
push
test
mov
cmp
xor
jbe
cmp
dec
pop
inc
push
mov
negb
mov
pop
popa
cmp
mov
test
imul
test
dec
sbb
in
pop
into
add
jnp
aas
inc
rol
add
es
add
stos
add
ret
sub
nop
es
mov
stc
xchg
push
stos
rcrb
jmp
xchg
add
inc
xchg
dec
lds
int
das
mov
je
in
and
push
xchg
movsb
or
push
xor
test
repz
jns
and
std
sub
js
popa
aad
cmp
das
cmp
das
sti
mov
out
addr16
adc
dec
jle
test
ror
andl
or
gs
repz
lret
and
xchg
xchg
mov
mov
push
movsb
push
push
negb
lea
mov
add
mov
inc
stc
adc
mov
mov
in
imul
mov
lcall
ljmp
jbe
inc
outsl
sbb
in
cmp
jno
fdivrl
cmp
xchg
adc
add
push
sbb
jo
in
int
jnp
cmp
jg
mov
call
scas
cmp
mov
mov
push
stc
adcb
jle
testb
mov
popa
mov
popa
out
lea
test
shr
rclb
int
rcll
sub
out
lret
xlat
inc
pop
adc
in
popf
jb
xor
pop
jg
mov
fiadds
or
dec
or
mov
inc
jb
frstor
jl
in
xor
pop
and
lret
mov
inc
and
scas
out
and
stos
inc
adc
mov
lea
out
addr16
pop
lds
jae
pop
fldl2e
hlt
adc
mov
je,pn
sar
add
subl
inc
inc
dec
sbb
jp
addb
adc
inc
adc
adc
jae
xor
push
add
aad
sbb
in
lods
gs
xchg
rcr
sbb
xor
dec
fisttpll
sbb
inc
mov
push
mov
xor
dec
xor
loop
fmull
xchg
ret
gs
xchg
xor
mov
sbb
cmp
xor
push
pop
data16
sub
or
or
push
lds
outsl
xchg
push
sbb
icebp
daa
in
inc
xor
adc
pop
mov
pop
sub
add
cmp
add
imul
lahf
jge
test
dec
or
and
add
jae
or
and
mov
in
mov
mov
test
cs
add
test
add
lret
subb
jnp
dec
loop
add
xor
cs
dec
mov
outsl
mov
mov
stos
xchg
scas
cmpsl
mov
sbb
mov
sub
cmp
inc
in
jl
icebp
or
add
adc
outsl
or
pop
inc
in
lods
push
adc
sub
in
js
jno
iret
loop
mov
stc
cs
stc
dec
ss
mov
cli
ret
sub
movsb
ret
stc
out
pop
into
mov
sar
and
sbb
cmpsb
push
bound
popf
sub
adc
push
add
jg
in
jo
jnp
pop
jne
or
cmp
sbb
jecxz
pop
test
outsb
or
add
mov
cmpsb
icebp
add
mov
jo
dec
testl
add
sub
aad
push
add
icebp
int3
outsl
sbb
lods
xchg
ljmp
aam
mov
xchg
mov
mov
jb
repnz
fwait
int
jbe
push
adc
es
or
shr
shlb
out
int
call
loope
dec
in
push
hlt
mov
xchg
test
iret
rcrl
lock
mov
xor
scas
xchg
xor
out
ljmp
stos
mov
xchg
cld
dec
add
std
ret
notl
jno
jle
push
idiv
jnp
insb
pop
inc
sbb
in
or
loopne
xchg
and
xor
jl
cld
or
xor
mov
cltd
shlb
out
pop
jnp
div
sahf
js
add
cmpsb
push
cmp
push
sbb
push
adcl
xor
dec
pop
fildl
cmpsb
mov
or
movsl
xor
hlt
test
fldcw
cmp
outsl
sbb
jg
and
cltd
insl
mov
pusha
iret
jae
test
into
clc
sub
and
std
and
cli
lods
sarb
sbbl
in
cmp
sub
iret
sbb
cmp
sahf
xor
out
es
or
inc
or
mov
scas
sub
lea
jmp
in
les
es
fcompl
jb
xchg
cltd
pop
mov
fidivrl
test
repnz
sub
outsb
jne
movsl
cmpsb
push
mov
pop
push
cs
mov
stos
insb
aas
cmc
or
sub
or
into
test
dec
mov
mov
mov
dec
or
mov
lods
data16
mov
popf
sti
dec
pop
sbb
mov
sar
enter
push
mov
push
test
fs
adc
and
icebp
or
pop
ja
addr16
mov
jnp
sub
cs
inc
jg
jle
or
rorb
in
xchg
imul
adc
mov
add
or
adc
mov
ljmp
fsubrl
scas
popa
test
xorl
push
ljmp
fidivs
movsb
push
and
jns
aas
cwtl
fxch
in
mov
scas
jmp
sti
arpl
pop
push
mov
mov
call
loopne
lret
mov
in
int3
pop
sub
push
lds
xchg
mov
imul
dec
roll
cmp
mov
lahf
cmp
inc
stos
gs
inc
and
pop
adc
mov
insl
test
mov
pushf
jmp
daa
call
je
in
popa
sub
in
push
push
push
push
and
jne
inc
cli
and
sub
inc
xchg
enter
pop
push
add
rclb
daa
movsb
fdivrp
ficomps
sbb
jg
idivb
add
shrl
int3
dec
test
add
mov
dec
outsb
dec
push
test
sub
push
lods
xor
push
mov
cmp
ljmp
daa
addr16
loopne
push
mov
mov
xor
inc
mov
or
mov
jae
inc
sbb
inc
sahf
jnp
in
sbb
cmc
add
shll
decl
jmp
push
mov
push
jbe
mov
mov
mov
jecxz
or
jle
mov
mov
pop
scas
clc
lcall
in
mov
dec
sub
pushf
js
xchg
xchg
ret
cmpsl
cwtl
jmp
adc
arpl
add
lcall
sbb
adc
sub
lahf
ficompl
in
lea
and
je
out
and
xorb
xchg
add
mov
inc
and
lods
mov
clc
cltd
cltd
loop
gs
movb
mov
pop
enter
mov
sub
mov
stc
jbe
cs
and
je
stos
loopne
jnp
pop
and
xchg
in
addr16
jbe
jns
sbb
jl
sbb
cmpl
lods
mov
jae
mov
test
or
es
dec
push
lcall
iret
mov
add
or
inc
lds
es
mov
mov
adc
std
aam
icebp
lret
and
xchg
sahf
adc
sti
dec
mov
mov
or
sub
push
call
out
out
in
push
popa
push
ficoml
inc
insb
sbb
and
je
mov
inc
pop
arpl
push
popa
pusha
jae
jo
int
pop
xchg
pusha
lldt
adc
stos
je
fnstsw
adc
mov
ja
in
sarl
dec
aaa
aad
lret
dec
push
mov
inc
insl
dec
testl
mov
pop
cmpsl
inc
cwtl
out
into
mov
gs
fildll
cmp
dec
ret
pop
sub
sub
stos
xor
inc
insb
jne
fsub
xlat
adc
jb
or
out
mov
int
dec
lds
imul
adc
mov
and
arpl
push
pop
fsubrs
call
out
fwait
and
movsl
or
pop
mov
mov
nop
push
and
cmp
xor
jnp
fisttpll
ret
mov
adc
ljmp
lods
cmp
xchg
pop
outsl
adc
sti
in
mov
addr16
xchg
inc
or
aam
movswl
mov
and
jp
xor
daa
adc
fdivr
inc
lret
loope
aad
ds
and
sbb
jns
adc
jmp
popf
pushf
std
mov
loopne
call
icebp
outsb
daa
in
sbb
mov
dec
xchg
dec
stos
call
xchg
xchg
inc
adc
xor
es
xchg
xor
leave
push
loope
adc
ja
aad
add
sbb
cli
pop
xor
mov
mov
lods
je
fs
ret
stc
jmp
pop
subb
mov
lcall
jb
mov
inc
in
dec
decl
mov
popa
or
addr16
dec
aas
fnsave
mov
sbb
dec
push
push
gs
cmpsl
xor
push
hlt
push
jmp
mov
lret
aad
xor
mov
mov
in
frndint
mov
add
dec
mov
es
and
dec
jae
fsts
sarb
loopne
xor
fisttps
inc
xor
and
ja
mov
push
pop
mov
outsl
push
jmp
mov
sbb
jno
es
aad
jae
pushf
jb
pop
mov
test
loopne
pop
pushf
subb
bound
adcl
test
sti
xchg
xchg
icebp
mov
pop
or
aad
add
dec
dec
xor
cmc
adc
popa
imul
addl
sahf
push
pop
popa
cs
mov
lods
cwtl
cmpl
mov
out
shll
ret
pop
add
cmpsl
dec
pushf
stos
adc
cmp
lahf
cltd
das
push
jge
push
test
and
xor
and
fcoml
jo
jns
mov
loopne
int
push
cld
push
call
inc
loope
cmp
xchg
mov
push
insb
xchg
pop
mov
and
shrl
lds
leave
js
repnz
push
ds
add
es
ret
inc
int3
mov
dec
cmp
push
sar
push
outsb
ss
xor
ja
sarl
rcl
subl
jb
pop
jae
mov
mov
popa
push
dec
pop
les
je
lret
cmp
rorl
dec
pop
cmp
push
push
or
push
scas
push
lret
jno
xchg
scas
cmpsb
xchg
addr16
repnz
sbb
outsl
sahf
and
ret
adc
push
imul
or
push
fnstcw
cmp
cmpsb
adc
and
jmp
pop
cli
sbb
mov
dec
shl
xchg
sub
push
mov
fadds
xchg
pop
mov
sti
out
inc
sti
aas
pop
inc
enter
mov
mov
pop
sbb
pop
jae
rcrb
sbb
inc
stos
loopne
adc
pop
ds
outsl
shll
pop
ret
cmp
out
add
arpl
aam
ss
jb
adc
xor
sar
jbe
adc
jbe
out
pushf
aas
xlat
cmp
ret
mov
jl
or
fisubrs
data16
jne
mov
les
in
mov
jmp
les
stos
dec
and
mov
or
cmp
lret
loop
push
jmp
xchg
aaa
mov
xchg
lret
mov
inc
in
fidivs
insb
addl
arpl
sub
push
add
lret
push
dec
push
sub
movsl
std
mov
push
sbb
or
and
cmp
inc
bound
push
cmp
sub
movl
push
mov
pop
xchg
lret
cs
adc
imul
loopne
mov
pop
cmpsl
and
cli
jns
jno
inc
push
shlb
push
fs
imul
imul
pusha
sti
jecxz
pop
mov
cmpsb
fiadds
adc
dec
and
fidivrl
xlat
jmp
aaa
add
cmp
imul
jb
pop
test
fs
loop
shl
clc
inc
xchg
cwtl
js
sbb
inc
aad
sub
pop
mov
mov
bound
aaa
fnsave
fisttpl
aas
loop
outsb
cltd
mov
adc
mov
int3
or
xchg
push
xchg
dec
add
xor
xchg
sub
or
xchg
out
fcoml
mov
lcall
sti
xchg
mov
lock
cmc
cmp
std
xchg
jnp
cmpsb
popa
pop
or
rorl
mov
dec
mov
add
sub
or
mov
test
ret
push
inc
pop
es
test
into
cmp
daa
mov
clc
lods
pop
mov
xchg
pop
xchg
mov
in
mov
call
sub
inc
dec
cmp
addr16
mov
jne
dec
sbb
mov
std
pop
inc
ds
xor
jecxz
jno
lds
fdivrs
sti
xchg
int
addr16
push
pop
xchg
mov
pop
adc
xchg
test
add
jmp
ds
adc
inc
mov
lock
pop
lds
sbb
pop
fstps
pop
mov
outsb
aaa
aad
ljmp
pop
and
sub
mov
scas
movsb
push
push
pushf
mov
push
cwtl
lret
shrl
cltd
lret
inc
repz
xchg
test
fldt
cli
stos
pop
pop
leave
mov
lods
jp
pop
cmp
cmpb
cmp
nop
jg
scas
enter
and
sub
xor
test
pop
scas
hlt
out
jb
fstpt
inc
out
sbb
scas
sub
out
adc
mov
sub
pusha
fnstsw
fwait
scas
pop
std
sbb
jle
aam
ss
mov
pop
sbb
repz
and
aad
lcall
es
mov
repz
xchg
lret
adc
and
inc
or
movsb
fsubr
or
jb
mull
push
lock
inc
pop
rorb
test
jo
adc
js
adc
mov
mov
pushf
mov
cltd
fcomp
jp
cmp
cmp
mov
fsubrs
sbb
cmp
in
fsubrp
insb
pop
ss
dec
jae
inc
adc
add
mov
ffree
fnstcw
add
mov
mov
xchg
dec
cmpsl
push
jmp
or
lea
imul
insb
adc
sub
add
ffree
not
xor
subl
pop
test
mov
jmp
es
fildll
js
rorl
cmp
lock
repz
jl
stos
test
jl
pop
jmp
incl
sub
sbb
ret
pusha
pop
cmp
test
dec
sbb
jo
jo
in
pop
push
push
jp
xchg
les
mov
scas
and
mov
movsl
in
popa
jmp
int3
and
insb
lcall
sub
xor
mov
insl
call
add
or
imul
push
fmuls
nop
pushf
lahf
subb
loopne
cmp
adc
ljmp
aam
sub
lds
sub
in
push
into
push
imul
and
cmp
push
xchg
in
jno
xor
add
add
dec
mov
cmp
ja
mov
mov
dec
lods
push
add
rcrl
adc
mov
jnp
xchg
jb
mov
leave
lret
cli
imul
test
mov
xorb
mov
and
jmp
sbb
push
icebp
aad
int3
xchg
sbb
pushf
mov
gs
icebp
rcl
rcrl
shlb
add
sahf
mov
push
jb
jmp
and
adc
mov
push
sbb
inc
daa
mov
lock
mov
xchg
fwait
loope
adc
repz
pop
and
fninit
xchg
sub
xchg
inc
or
push
push
inc
sahf
jbe
inc
sbb
push
cmp
pop
xchg
nop
ret
mov
add
out
or
fsubrs
fwait
clc
and
jb
adc
repz
outsb
stos
aad
fstpl
test
test
dec
lret
xor
arpl
pop
push
stos
xlat
or
push
fldt
push
shl
pop
cmp
les
bound
xchg
add
add
lock
mov
das
outsl
cltd
in
sbb
lcall
or
xchg
fimull
repz
jecxz
leave
xor
sub
bound
mov
mov
mov
add
bound
jmp
mov
mov
jp
inc
xchg
sbb
fwait
or
add
sub
or
inc
mov
xchg
jne
sbb
adc
dec
jnp
or
jmp
inc
fld
adc
pop
sub
into
ja
dec
jns
cld
imul
cmpb
jl
test
pop
mov
adc
jmp
bound
push
add
mov
jmp
dec
mov
xchg
in
pop
mov
pop
xor
das
push
sbbb
aam
add
dec
in
jne
mov
mov
test
adcl
dec
xchg
and
and
bound
cmp
into
ret
fldenv
mov
mov
cmp
pop
and
aas
dec
fldenv
mov
es
xor
adc
mov
adc
std
lahf
dec
jecxz
imulb
cwtl
out
jnp,pn
mov
xchg
push
dec
pop
adc
cmp
or
pop
xchg
loop
sub
aaa
adc
push
or
xchg
or
or
icebp
sar
cmpsl
jl
cltd
fld
mov
sbb
scas
js
es
xor
iret
push
in
inc
aas
jp
in
lcall
adc
jmp
out
cmp
sub
jbe
pop
test
mov
cmpsb
lea
xor
xchg
ja
popa
xchg
xor
movsl
in
sbb
ljmp
cmc
dec
lcall
iret
rcrb
inc
daa
insb
aam
dec
mov
jecxz
push
pop
rolb
lea
dec
fcom
push
mov
mov
iret
pusha
dec
sbb
lea
and
dec
inc
sub
pop
cld
mov
sti
adc
mov
clc
xchg
jnp
pop
or
jl
test
in
aaa
jp
jle
pop
lods
cmp
out
pop
xor
jge
adc
mov
mov
cmp
sub
adc
btr
jo
jnp
adc
mov
in
dec
mov
aad
sbb
pop
addl
div
push
lds
dec
sub
and
lods
in
rolb
or
mov
xchg
fbld
pop
fisttps
cmp
pusha
add
inc
loop
pop
in
out
add
push
jbe
notb
pop
mov
jecxz
push
out
xor
shlb
arpl
cwtl
sub
adc
push
mov
hlt
dec
dec
popa
cmp
mov
jb
xchg
sbb
jb
push
jp
mov
ds
sahf
pushf
hlt
enter
loope
sbb
or
inc
mov
insb
push
sub
adc
mov
movsl
pop
xor
mov
lods
mov
mov
xchg
clc
xor
pop
push
mulb
ficomps
xchg
rcrl
push
dec
out
push
pop
push
lods
out
fst
sbb
ficoms
in
xor
pop
mov
in
add
adc
outsb
inc
mov
hlt
stc
pop
pop
fildll
mov
jg
divl
fidivrl
mov
lret
and
sub
adc
clc
outsl
nop
mov
enter
cld
sub
dec
push
xor
mov
push
mov
mov
cmp
in
aam
shll
jle
sub
push
loope
push
sub
xchg
fiaddl
jmp
dec
insb
fmuls
cwtl
test
loope
addr16
jecxz
xchg
movsb
inc
ja
roll
and
push
cli
mov
sbb
fdivrl
xchg
lea
std
mov
mov
aad
add
mov
pop
cld
cmp
mov
nop
pop
inc
mov
ljmp
pop
xchg
ret
imul
ret
sbb
pop
movsb
xchg
jge,pn
add
out
sbb
inc
int3
stos
cmp
mov
xchg
add
cld
inc
and
push
lret
mov
ljmp
loopne
add
xlat
aad
insl
sub
add
pop
scas
mov
mov
nop
movsl
push
lcall
push
inc
cwtl
and
adc
ja
insb
enter
fisttpll
add
and
pop
test
push
scas
movsl
mov
xor
mov
dec
pop
pop
cmp
jns
dec
add
sti
dec
sbb
add
pop
rcrb
rcr
jl
fs
push
popf
xor
mov
jp
std
push
adc
adc
mov
fisubl
and
xchg
fs
and
push
dec
out
mov
pop
mov
pop
fsubr
cmp
xor
aam
int
push
pushf
xor
gs
outsb
addr16
in
fiaddl
sbb
and
aad
imul
cld
into
jnp
mov
pop
psrld
jp
insl
jge
test
sub
iret
mov
jno
aam
pop
leave
or
pop
int3
jbe
cs
pushf
popa
aaa
mov
flds
mov
jb
imul
pop
sub
mov
jecxz
jns
aad
sbb
in
push
clc
mov
scas
arpl
jge
jecxz
lea
xor
das
push
mov
dec
sbb
cmp
jnp
and
les
frstor
add
or
mov
mov
jecxz
fs
cli
rolb
push
jo
mov
cmp
push
aaa
jb
xchg
jb
xchg
inc
mov
test
dec
addl
loope
rclb
dec
cmp
add
ret
pop
mov
and
jns
sub
into
pusha
dec
lret
sbb
pop
in
pop
lahf
fs
mov
lret
rorb
mov
outsl
jo
add
and
inc
push
daa
jg
rolb
xchg
xor
sbb
and
sub
rorb
movsb
js
mov
mov
push
pop
fwait
push
test
aaa
imul
xchg
jbe
mov
jne
or
insb
jne
in
cli
lods
add
lea
movsl
repnz
iret
push
jo
out
mov
in
sub
lret
gs
mov
fs
xchg
push
out
lds
hlt
pop
cmp
inc
and
jl
add
push
xchg
sbb
and
and
mov
mov
dec
mov
or
xchg
mov
aas
mov
xor
mov
cs
adc
cmp
fcompl
loope
std
pop
subb
xor
inc
jle
and
mov
pop
dec
push
divb
sbb
adc
cmp
mov
dec
mov
cmpsl
cli
xor
dec
test
xchg
sbb
cmp
or
jo
xlat
and
or
push
mov
inc
scas
jecxz
fs
and
add
xchg
subl
push
test
fndisi(8087
inc
cmpsb
mov
xchg
and
adc
ja
mov
pop
xor
stos
add
stos
inc
inc
sbb
js
ficoms
mov
fstp
in
xor
lea
push
out
xchg
adc
mov
arpl
adc
lcall
lcall
xchg
icebp
ret
mov
xchg
jne
push
pop
sarl
push
das
rolb
call
aas
mov
sub
mov
add
cwtl
fs
orb
mov
js
fildll
and
hlt
mov
inc
xchg
add
movsb
and
adc
xchg
aad
inc
dec
cmpl
jo
in
in
xor
add
jno
pop
fmulp
pop
jae
inc
fs
mov
add
cmp
leave
cmp
imul
subb
or
sbb
stc
std
dec
loop
bound
inc
mov
mov
sub
imul
add
aam
mov
stc
mov
pop
fidivrs
in
add
push
outsl
std
mov
xchg
lods
insl
push
fsubrp
mov
add
lret
clc
mov
ljmp
fwait
push
cmp
add
in
jp
rclb
adc
out
inc
movsl
jb
dec
inc
arpl
xchg
data16
or
pushl
mov
cmp
adc
or
neg
jbe
je
ret
inc
iret
jbe
ja
cmpsl
repnz
dec
dec
mov
pop
test
or
imul
or
jp
sub
cmpsl
lods
popa
fwait
xchg
adc
jmp
rcrb
mov
int
push
jns
movsb
mov
push
jg
sbb
xchg
nopl
mov
fcmovb
or
push
and
out
add
jo
das
dec
lret
pushf
mov
adc
push
fcom
jnp
push
or
inc
jnp
cld
and
sbb
mov
sarl
dec
test
cs
rolb
mov
jne
bound
in
jle
imul
or
hlt
pop
mov
das
push
out
jge
push
ja
in
aaa
jmp
sub
movsb
cmp
mov
cs
cmp
mov
aam
mov
aam
cmp
cltd
mov
cmp
inc
cld
mov
xchg
xchg
stc
cmp
sbb
clc
jl
lods
insl
addr16
dec
dec
aaa
sbb
push
repz
or
cs
push
ja
iret
les
cmpsb
lock
lcall
dec
sbb
fs
xchg
inc
mov
ja
pop
outsl
mov
imul
cwtl
sbb
cli
loope
and
insl
cld
arpl
sbb
jae
icebp
pop
out
cli
adc
add
add
push
rcl
jecxz
pop
xor
je
xor
sbb
out
mov
hlt
test
jb
ja
cmp
sub
ds
inc
lahf
inc
sahf
push
xchg
cld
adc
insl
mov
mov
push
ljmp
into
pop
mov
dec
mov
outsb
mov
in
jo
aam
out
xchg
loope
or
or
aaa
add
dec
scas
xorb
and
pop
lds
negl
jp
dec
cmc
rcrb
mov
test
add
orb
inc
ss
sbb
sub
jg
pop
stc
and
stos
aaa
in
dec
jg
inc
addr16
hlt
xor
fs
lret
or
pop
sbb
add
adc
sub
mov
jno
dec
sti
mov
sahf
adc
mov
sbb
inc
aam
xchg
jne,pn
sbb
movsb
test
lea
xchg
cmpsl
arpl
jecxz
icebp
aas
dec
adc
or
cwtl
xchg
pop
xor
fisubrl
fs
stos
or
lods
inc
sar
rorl
out
out
sub
mov
pop
fidivl
aam
mov
jmp
inc
scas
in
and
dec
icebp
cld
cmp
sbb
bound
jns
cmp
cwtl
sbb
mov
pusha
pop
clc
fisttpll
out
call
jo
nop
scas
or
std
mov
push
lock
mov
cli
stos
xchg
cwtl
shrl
and
cs
xchg
and
mov
imul
mov
lock
cs
mov
in
pushf
inc
jle
mov
repnz
out
sub
inc
dec
out
adcl
pop
pop
mov
xchg
mov
popf
xor
test
faddp
hlt
xchg
pop
inc
pushl
inc
xchg
pop
push
push
mov
in
das
or
imul
sbb
in
movsb
sahf
sub
in
cmp
and
addr16
jecxz
jge
inc
out
out
jmp
dec
add
and
adc
cmpsl
enter
add
inc
mov
pop
ret
nop
add
inc
push
stos
inc
into
test
push
mov
pop
and
xchg
pop
and
dec
inc
mov
incl
mov
sub
fcmovnu
mov
rol
or
test
pushf
sub
pop
ret
push
jmp
dec
cmp
pop
sbb
xor
push
dec
ljmp
shlb
mov
daa
push
arpl
enter
rep
sub
in
pop
and
ret
int
in
jae
inc
or
outsl
jle
add
dec
cmp
cmp
or
jno
out
insb
icebp
push
xor
sub
sbbb
adc
adc
imull
xchg
fdivr
jmp
cmp
add
pop
dec
fndisi(8087
dec
and
ds
mov
jnp
pop
aam
ljmp
xor
push
pop
pushf
icebp
nop
or
lret
std
cld
pop
mov
pop
divl
xchg
pop
test
mov
mov
and
jae
sub
pop
add
push
stc
jae
fidivl
jo
dec
xchg
inc
adc
adc
lret
icebp
rcrl
lea
outsl
adc
ljmp
repnz
push
mov
cmpl
repz
adc
cmc
jne
xor
cmp
movb
xor
dec
and
or
pop
inc
xchg
icebp
add
lds
xor
mov
mov
sub
sbb
and
stc
imul
out
cltd
fistpll
sub
shll
outsl
loop
mov
mov
insl
jns
in
cmp
sub
cltd
pop
scas
mov
mov
inc
jb
jl
test
adc
outsl
insb
ljmp
mov
add
sub
inc
movsb
in
orb
sbb
icebp
dec
sbb
xchg
jecxz
push
xchg
or
shlb
xchg
or
mov
repz
jp
add
cmp
add
mov
mov
dec
and
push
outsb
leave
xchg
pushf
jge
adc
fs
xor
clc
add
jge
add
jge
pop
jns
aad
push
sbb
xor
lock
and
push
in
push
push
inc
sbb
popf
fsts
movsl
push
loope
scas
cmp
sahf
into
adc
mov
adc
popf
pop
inc
ja
jno
pop
lock
xchg
add
jp
shrl
lret
lcall
cmp
stos
sub
sub
push
out
enter
xor
mov
test
outsl
loope
pop
fwait
mov
aad
jl
fistpl
sbb
rclb
into
mov
dec
add
outsl
sub
test
sarl
cmp
loope
or
adc
repz
or
push
push
sbb
bound
iret
inc
pop
ds
xor
xor
jbe
scas
xchg
xor
call
das
cmp
push
inc
xor
ret
cmp
mov
fbld
gs
jae
or
cli
sbb
dec
sub
adc
mov
jmp
int
jae
mov
lea
out
pop
jnp
dec
fdivl
bound
orb
cmp
cmp
inc
cld
scas
fnstcw
jns
push
or
jmp
cmp
cmp
add
inc
in
dec
xor
jno
pop
cli
in
enter
xor
inc
add
arpl
notb
xchg
sbb
and
jmp
ret
pop
mov
punpcklbw
adc
bswap
shll
pop
inc
inc
sub
and
movsb
pop
incb
cmp
xor
stos
out
xchg
aam
shrb
imul
dec
xchg
fldenv
mov
shl
js
xor
bnd
xlat
jp
cmp
cmc
js
mov
add
fisubs
pushf
add
dec
nop
push
push
aaa
ss
mov
dec
push
outsb
and
stos
mov
dec
dec
cmpsb
xchg
lods
stos
jae
sbb
xchg
dec
es
xorl
push
or
lods
pop
ficompl
jns
outsl
mov
daa
push
push
fadd
pminub
mov
pop
out
lods
stos
inc
push
mov
cltd
adc
cmp
insl
lahf
xchg
mov
mov
lods
mov
lods
xor
xchg
out
nop
les
movsl
mov
push
dec
sbb
dec
fs
scas
andb
push
mov
push
xor
outsb
xchg
repz
lock
pop
jnp
dec
inc
adc
mov
in
repnz
aas
push
inc
fwait
adc
xchg
xchg
ret
pop
lahf
dec
pushf
xchg
add
xchg
mov
cmpsl
pop
cmp
or
inc
test
and
add
inc
pushf
loopne
fcmovnu
sbb
sbb
daa
and
inc
hlt
rclb
cs
cmp
xor
cmp
mov
xor
loopne
clc
shlb
push
es
xchg
cld
xchg
lods
pop
lock
cmp
pushf
adc
rcl
mov
out
jns
pop
call
aam
adc
ja
cmp
xor
sti
sbb
inc
loop
adc
lock
inc
mov
sub
cli
jecxz
in
jns
ret
or
sub
repnz
mov
jbe
pop
push
push
arpl
jnp
sub
pop
int
pop
pop
and
fistl
adc
xlat
jo
xchg
lods
imul
inc
add
inc
xchg
loop
fistl
jle
out
movl
adc
push
stos
clc
adc
cmp
cmp
ret
jae
jae
repnz
xchg
test
mov
fwait
pusha
ljmp
and
xor
scas
popf
push
sbb
mov
stc
sbb
sub
mov
out
mov
adc
add
add
outsl
movsl
call
add
push
dec
xchg
add
sub
xor
sub
xchg
fcoml
jmp
inc
dec
enter
mov
insb
ljmp
pop
push
inc
pop
dec
mov
mov
frstor
movsl
ret
je
out
sbb
dec
fs
jne
mov
xchg
lcall
sub
ret
je
or
inc
and
add
xor
test
sbb
movsb
adc
mov
add
sub
ja
fs
mov
inc
fidivrl
mov
repnz
shll
hlt
pop
ret
cmpsl
pop
and
sarb
xchg
fidivs
out
nop
adc
fnstsw
lods
cmp
or
rclb
cld
popf
push
mov
roll
repnz
fdivl
jl
inc
enter
out
lahf
aad
or
fldcw
iret
pop
mov
ret
pop
mov
jb
push
push
lahf
adc
adc
or
sbb
test
insl
outsl
fisubrl
lock
sub
inc
mov
sbb
pop
into
movsl
jns
outsl
gs
xchg
or
call
lahf
jo,pt
add
push
or
xor
lock
sbb
sub
pop
mov
subb
fstps
jle
leave
roll
xor
mov
sub
cli
or
lea
sub
aad
popa
fdivrl
jmp
lock
xor
sbb
xor
out
jne
jae
sbbl
mov
out
int3
adc
adc
pop
repnz
push
lods
cmp
xlat
fimuls
sbb
lea
das
mov
mov
jecxz
cmc
push
loop
inc
cmp
popa
ret
mov
jle
icebp
lea
or
lock
or
mov
sahf
mov
xchg
outsl
mov
icebp
dec
iret
jge
loope
sbb
imul
jp
pop
mov
or
lcall
fcoms
and
dec
mov
xor
loope
out
mov
mov
or
xchg
mov
ljmp
jp
cmp
jb
mul
ds
sarb
push
fcomp
outsl
and
jbe
ror
cmp
sub
dec
lods
fstpl
jg
cmpl
xor
xlat
iret
mov
pop
nop
pop
adc
mov
sub
gs
mov
sub
in
cli
aaa
in
scas
push
jns
add
push
inc
push
cmpsl
push
les
push
sub
jns
push
popf
or
js
mov
mov
out
lods
or
sub
jno
mov
push
je
sub
out
mov
fsubp
and
jbe
push
cmp
jns
pop
movsb
sub
adc
ror
pop
jle
fldenv
sub
dec
dec
add
outsl
rcrl
and
sub
scas
pop
or
mov
js
push
push
push
mov
dec
outsb
mov
ja,pt
push
add
orl
add
and
cmpsb
int3
pushf
mov
aaa
scas
xchg
jbe
sbb
jmp
clc
stc
ret
mov
cmc
mov
xchg
int
push
sbb
cld
ds
mov
xchg
push
xchg
inc
mov
flds
mov
out
cmp
dec
push
push
adc
mov
xchg
cmp
inc
cmpl
add
push
gs
and
add
shrb
scas
arpl
jecxz
or
inc
xor
sar
jp
xchg
and
lret
push
sub
ret
in
cltd
out
mov
rcrb
cwtl
addr16
shll
test
daa
pushf
test
mov
cltd
sbbb
jle
jmp
jp
fwait
cmp
inc
inc
adc
mov
insb
mov
push
mov
int
sbb
dec
das
das
adc
push
jno
addr16
enter
jecxz
sbb
jo
xor
jno
loope
add
pop
push
sub
inc
mov
pop
addw
push
or
scas
fistps
data16
in
mov
call
xchg
daa
insl
subb
jle
dec
cwtd
fcomps
testl
mov
mov
inc
lahf
sbb
mov
in
std
pop
lahf
out
mov
push
jmp
jno
imul
daa
push
loope
sbb
jp
dec
jle
lods
add
xchg
cmp
xlat
imul
cmc
out
add
scas
fidivrs
aas
or
stos
add
mov
mov
leave
repz
outsb
and
aad
lret
jo
test
outsb
mov
or
mov
mov
pop
mov
rorb
inc
and
jbe
adc
inc
sub
frstor
sbb
dec
fdivrs
fisttpl
ljmp
pop
jne
sbb
push
out
mov
js
and
repnz
xchg
cs
nop
ret
mov
orb
xchg
mov
mov
and
mov
cmc
addr16
das
outsl
lods
jle
cmp
loope
inc
lcall
sbb
pop
dec
movsb
dec
push
sti
jecxz
shl
hlt
dec
dec
fsubrs
cmpl
rol
mov
mov
pop
sub
sbb
inc
push
xor
movsb
stc
push
scas
adc
bound
pop
pop
pop
dec
outsl
shlb
and
or
or
or
jnp
xchg
mov
test
jbe
mov
adc
mov
pop
cmpsb
movsl
cmp
test
test
jb
sbb
daa
cmpsb
push
jns
test
add
jecxz
push
cmp
fldt
aad
cmpb
mov
sbb
pop
mov
shll
mov
push
adc
clc
sub
sbb
push
inc
rcrl
dec
ds
mov
fs
push
adc
xchg
xchg
dec
push
push
sbbb
ljmp
lods
call
mov
fildll
scas
push
dec
aam
xchg
ret
jns
shll
out
mov
movsb
mov
imul
pop
push
fisttpll
jns
jmp
sbb
xlat
and
jle
out
mov
outsl
inc
inc
arpl
push
call
mov
xchg
push
testb
xchg
test
pusha
and
mov
xchg
dec
shl
shll
out
inc
mov
popa
enter
xor
test
stos
mov
adc
imul
mov
cmp
sub
enter
sbb
lret
mov
xor
out
idivl
std
notl
or
out
mov
repz
mov
push
adc
and
in
sub
aaa
in
sbb
out
sub
dec
fisubl
mov
sti
add
pop
inc
dec
ss
cmpsb
or
jg
in
jne
mov
xchg
pushf
inc
xchg
jno
sti
scas
pop
in
or
xor
inc
ret
cmp
repz
ljmp
adc
pop
mov
pop
popa
mov
shr
mov
jnp
bound
add
mov
mov
mov
aam
int3
inc
jecxz,pt
subb
cmp
sbb
mov
jge
pop
mov
scas
movsb
je
inc
dec
inc
xor
out
cld
jmp
push
dec
subb
adc
fwait
enter
sub
fisubrl
jae
add
ror
sub
and
mov
pop
cmp
ljmp
pusha
sbbb
cltd
jns
sbb
stos
pusha
lods
push
movsl
fwait
mov
mov
pop
cli
mov
std
js
filds
jle
dec
and
jne
push
sbb
and
lds
icebp
ffreep
push
cmc
sti
addr16
shrb
dec
je
fstpl
push
iret
cmpsl
and
jmp
sbb
repnz
ss
sub
rolb
inc
jmp
aam
sub
sbbl
mov
and
add
xchg
fwait
and
fs
sub
clc
aaa
cmp
xor
fwait
adc
push
jbe
adc
ret
iret
xlat
loopne
xchg
ds
stos
andl
in
xor
mov
data16
push
outsb
mov
xor
sub
inc
fmuls
add
loop
cmp
dec
insb
mov
pop
das
adc
popa
dec
push
cmpl
insb
cs
pop
inc
jae
xor
add
or
mov
popa
mov
cmp
sbb
cmp
push
dec
fists
incb
push
arpl
mov
sbb
imul
fidivrs
pop
nop
test
push
push
lods
scas
stc
insb
lret
jp
mov
sarb
mov
push
imul
lret
into
ljmp
xor
xchg
and
mov
inc
mov
lret
xchg
divl
inc
popf
cmpb
dec
into
xchg
push
or
dec
jnp
arpl
mov
lret
stos
mov
insb
add
sub
pop
sbb
fisubrs
sub
jae
mov
filds
adc
push
test
lret
aaa
mov
mov
pusha
dec
mov
loope
in
mov
addr16
lock
add
ljmp
and
mov
enter
or
mov
cmp
imul
xchg
and
into
mov
leave
xchg
or
jbe
js
push
subb
cs
faddl
shlb
or
aad
dec
sti
popa
add
loope
js
pop
add
push
and
dec
jns
push
in
push
aas
xor
imul
jae
mov
cld
lret
out
xchg
call
rclb
repz
js
jg
dec
add
push
add
mov
loop
cltd
imul
in
mov
clc
stos
loope
mov
dec
sub
fistps
inc
jp
pop
stc
inc
aas
insb
nop
adc
arpl
or
cwtl
stos
and
stos
sbb
inc
pop
stos
hlt
neg
addr16
fldenv
lahf
add
sahf
push
sarb
fsubrs
test
addr16
sbb
push
fisubrs
push
out
dec
sub
ficoms
aaa
xchg
cmp
nop
mov
mov
and
scas
aaa
fisubrs
je
jle
dec
adc
add
fs
push
out
ljmp
push
divb
dec
mov
pop
xor
js
lds
rol
mov
cmpsl
sbb
mov
loopne
imulb
shr
adc
in
addr16
lret
aaa
jle
outsl
adcb
fcmovbe
adc
rorl
das
int3
mov
mulb
sahf
popf
sub
imul
pop
cmp
cmc
pop
xor
inc
add
ljmp
mov
xor
pop
cwtl
add
mov
call
bound
add
xchg
mov
inc
mulb
dec
test
lret
sub
sti
adc
das
xchg
mov
push
fxtract
loop
pop
jmp
mov
sub
push
sbb
inc
cld
fnstenv
data16
pusha
xor
loop
dec
dec
and
fisubl
nop
nop
xchg
jo
loopne
sbb
loope
cld
sub
ljmp
aas
pusha
and
inc
insl
repz
jmp
jp
data16
dec
push
pusha
hlt
adc
enter
mov
cld
imulb
in
mov
xchg
mov
mov
mov
xor
jg
loopne
stc
push
ds
lea
and
ja
pop
pop
call
insb
addr16
pop
inc
roll
or
aas
sub
in
in
loopne
iret
aad
or
repz
mov
stos
jne
cld
fmulp
inc
mov
mov
or
in
pop
inc
fsubrs
test
push
xchg
movsl
push
int3
scas
add
clc
and
cwtl
cld
inc
inc
ja
aam
xor
cld
insl
xorb
push
xor
addr16
or
mov
pop
mov
jo
in
lret
add
fnstenv
roll
and
push
add
pop
xchg
into
mov
sbb
popa
gs
rcr
mov
pop
fmul
aas
mov
std
or
bound
jnp
jge
rcll
std
rorl
push
ja
repnz
fs
push
arpl
push
sub
shl
add
aaa
inc
lock
out
push
adc
or
mov
movsb
cltd
stc
jns
int
and
fnsave
aam
sub
dec
scas
jb
out
je
jae
xor
pcmpgtb
sbb
lock
xchg
mov
or
and
out
in
es
pop
dec
out
xchg
pop
ficomps
ss
sbbb
mov
loopne
or
fsubrs
pop
out
jae
mov
inc
loope
mov
push
mov
inc
pop
jne
cmpl
jl
sbbl
incb
inc
paddb
push
cli
sub
addr16
or
jge
notl
movsl
addb
jnp
mov
fildl
xor
or
sbbl
cltd
mov
int3
fimull
fiaddl
or
hlt
imull
push
dec
lock
and
aas
jmp
data16
lcall
aad
add
pushw
mov
popa
cwtl
adc
cs
mov
dec
test
adc
je
or
mov
pop
imull
fisttps
mov
jp
leave
mov
popf
insl
sbb
lods
fsub
sbb
xchg
inc
push
jne
outsb
mov
xor
mov
pop
fcomp
jno
movsb
daa
jbe
js
loop
sahf
push
inc
mov
or
push
loopne
pop
pop
cltd
mov
cltd
lds
into
fwait
jmp
xchg
setbe
inc
pop
xor
pop
cmp
popa
das
int3
inc
push
aam
pop
fidivrl
fcompl
mov
pop
lods
rol
repnz
pop
xor
in
pop
stos
xchg
stos
xchg
in
cmp
mov
pop
pop
dec
inc
inc
sbb
ss
pop
jmp
xor
loop
xchg
leave
pop
stos
push
add
dec
into
xlat
outsb
or
push
pop
mov
mov
mov
mov
mov
or
add
pop
test
das
dec
add
sbb
mul
inc
es
mov
or
pop
gs
add
push
adc
mov
lock
pop
sbb
aad
sar
or
xor
lods
paddd
andl
cltd
rcrb
inc
add
outsb
cmc
jp
movsb
sahf
xchg
lods
dec
add
in
sub
pop
pop
dec
iret
xchg
das
mov
cmp
outsb
mov
mov
inc
std
mov
aas
das
jmp
je
jg
outsl
dec
in
loope
jnp
mov
lock
xor
pop
daa
cwtl
lods
loopne
dec
jg
dec
pop
dec
push
add
inc
dec
add
rolb
jo
rcrl
sbb
sbb
test
fidivrl
fistpl
and
jle
fdivr
pop
ds
cmp
leave
das
push
fld
mov
shr
in
push
fcoms
mov
cmp
dec
mov
arpl
fsubrl
xchg
push
add
shlb
fdivl
mov
jo
dec
cmp
rclb
jae
mov
mov
inc
jnp
mov
xlat
dec
mov
xchg
ud2
sub
outsb
fidivrl
add
mov
cli
aam
add
daa
test
ret
sarl
fistpl
cmpb
inc
dec
pop
das
leave
inc
std
enter
push
data16
das
and
nop
es
test
jecxz
repz
popf
xchg
out
jle
jmp
jnp
xchg
bts
scas
shll
sbb
mov
cmp
flds
pop
fs
out
mov
pop
pop
pop
xchg
repnz
pop
dec
xchg
in
hlt
test
dec
adcl
sbb
das
xorb
repz
lock
or
jae
cmpsb
jl
dec
out
sub
lods
or
xchg
or
lea
or
loop
out
dec
push
xor
add
dec
fldt
hlt
pop
inc
cmp
inc
stc
popf
in
dec
imul
sub
inc
mov
in
jns
or
xlat
sbb
xchg
in
hlt
aad
mov
js
jge
push
xor
sub
out
jb
out
arpl
mov
mov
sbb
mov
or
idivb
mov
je
pop
lds
fwait
or
mov
cmp
xchg
jle
pusha
std
shrb
pop
jg
outsl
push
push
cld
int3
fwait
xchg
fwait
mov
mov
addb
push
ret
js
inc
stc
mov
in
sti
sub
xorl
stos
lds
push
and
adc
sub
add
push
push
test
cmpsl
dec
or
sbb
mov
negl
adc
fs
cmpl
add
cmpl
xor
repnz
xchg
mov
ja
mov
add
mov
pop
jae
mov
aam
cwtl
ja
lock
fnstcw
and
fs
outsl
adc
jle
ret
test
mov
int
lcall
mov
or
mov
jnp
test
push
cmp
movsl
leave
pop
ds
jo
mov
fcom
cmp
adc
mov
xlat
jp
fldcw
rcr
add
xchg
out
int3
clc
sub
cmpsl
daa
lret
js
inc
dec
add
popf
cmpl
and
les
sti
and
cmp
pop
loopne
cmp
insb
pusha
add
sarb
addb
fcmovbe
sub
jno
sahf
push
xlat
rcll
xor
pop
repnz
stc
mov
jmp
aas
ja
popl
js
mov
int
icebp
adc
add
testl
xsavec
pop
sub
fisttpl
push
pop
aas
adc
mov
push
cmc
sub
iret
imul
lahf
mov
jl
lods
sbbb
fs
push
shlb
fldt
mov
jo
add
mov
adc
mov
in
inc
dec
outsb
sub
popf
cmp
ret
sbb
pop
jb
xchg
ret
arpl
jo
sahf
xor
aam
and
ss
cld
add
inc
pop
adc
jl
mov
ficompl
mov
dec
sub
jg
or
mov
xchg
in
mov
xchg
ficomps
inc
in
xor
pop
mov
out
push
fwait
add
lods
fcmovu
mov
sub
into
bound
adc
push
jb
sarb
cltd
stos
fldt
ret
mov
mov
insb
mov
inc
cltd
jmp
cmpl
xor
lret
insb
xchg
pop
inc
mov
mov
loope
popl
fisttps
push
inc
fs
xchg
mov
mov
imul
adc
push
test
outsb
movsb
je
aam
je
shrl
and
fs
int
ret
or
mov
call
pushl
dec
adc
sahf
out
fsubrp
out
cmp
xchg
mov
and
jl
push
idivb
mov
inc
outsb
xchg
mov
or
add
push
imul
mov
das
xchg
rcrb
mov
insb
jecxz
mov
aas
sahf
mov
jl
movsb
push
mov
and
mov
test
lcall
sbb
inc
arpl
inc
cmpsb
idiv
xor
xchg
push
and
mov
inc
popa
jmp
bound
jae
xchg
test
mov
mov
jb
shll
sbb
aaa
insl
pop
shll
push
xchg
lcall
hlt
add
xchg
or
aas
push
repz
inc
stc
faddp
pushl
sub
mov
enter
add
pusha
imulb
sbb
repz
test
mov
jns
inc
int3
andb
adc
and
popa
cmpsb
pusha
sub
stos
jne
lret
int3
int
jmp
stos
lods
jmp
pop
cld
push
mov
lret
ficoms
or
mov
jo
pop
push
fidivrs
push
ljmp
aas
shlb
pop
in
sub
cltd
in
stos
aam
mov
insl
and
xor
jge
inc
adc
add
daa
sbb
test
push
and
mov
mov
in
xchg
xor
push
adc
les
mov
sbb
or
test
adc
in
loopne
or
fsubl
or
or
cmpsl
mov
mov
sub
cmp
loopne
dec
movsb
pushf
or
xchg
ficoml
rcll
or
mov
cmp
add
sbb
mov
adc
sahf
loopne
mov
fbld
arpl
push
pushf
test
mov
mov
mov
gs
lods
push
aad
pop
into
xor
inc
test
rcrb
pop
push
mov
cltd
stos
xchg
dec
or
lcall
jp
sbb
aas
in
cld
int
out
leave
mov
jmp
mov
lcall
sbb
data16
xchg
mov
push
lret
jle
ret
fidivrl
loopne
stc
xchg
repnz
cmp
pop
out
jmp
pop
sbb
insb
fnstenv
fisubrs
mov
shll
movsb
xor
fsubl
movsb
sbb
test
pop
xchg
or
insb
mov
mov
and
pop
xor
sub
inc
aaa
andb
mov
cltd
push
inc
test
nop
add
clc
push
jecxz
stos
sbb
pop
icebp
lahf
into
add
ret
fisubrl
pop
fldl
push
fists
push
jge
cmp
xor
jne
mov
in
into
ret
enter
jns
add
int3
fsubs
aaa
shrb
imul
xchg
inc
pop
shrl
pop
idivl
popf
push
add
pop
add
mov
sahf
js
xchg
push
sub
test
mov
scas
dec
and
sar
stos
mov
repz
cmpsl
push
int
data16
in
pusha
call
sub
out
xchg
lret
jne
rcrl
outsl
xchg
movsl
jl
in
mov
cmp
dec
and
mov
add
aas
out
xchg
cmp
pop
jne
sbbb
pop
push
test
add
lcall
push
cltd
or
outsl
inc
sbb
xchg
or
push
aad
add
mov
xor
cmp
hlt
lods
xor
in
mov
xor
les
push
subl
xchg
and
or
dec
clc
xor
pop
mov
decl
push
or
mov
add
repz
jbe
dec
test
dec
ljmp
push
loop
xor
inc
dec
js
jmp
aaa
dec
mov
or
mov
sbb
test
or
push
add
mov
adc
push
adc
mov
mov
dec
pop
jns
fimuls
xchg
imul
mov
cmc
push
inc
scas
sbbb
mov
cmp
add
adc
sbb
shlb
mov
inc
loopne
cwtl
cmc
out
xorl
mov
lock
push
shll
cmp
out
sarl
int
sti
repz
adc
loop
cwtl
push
bnd
test
lock
daa
jp
adc
cmc
or
scas
jo
mov
mov
ja
leave
inc
mov
in
and
out
mov
ja
decb
adc
rcl
cwtl
leave
fcmovnbe
add
dec
push
jmp
mov
jl
das
daa
int3
mov
rorl
int3
or
addr16
not
aas
or
adc
mov
mov
mov
sub
das
or
mov
fdivrl
add
mov
js
cld
sbb
fildll
mov
dec
cmp
pop
sub
outsb
and
push
hlt
xchg
cltd
mov
es
pop
aad
test
mov
imul
sub
xchg
sub
dec
mov
sti
sub
test
xor
dec
es
adc
jns
mov
out
mov
jns
pop
ja
sub
xor
daa
loopne
cmpsb
sbb
out
cmp
and
sbb
bnd
mov
xchg
hlt
cmp
mov
push
je
jp
popf
jmp
adc
or
fwait
or
insb
rolb
cmpl
aam
inc
push
int3
push
in
mov
inc
or
cltd
mul
inc
jl
or
mov
push
adc
lea
pop
sarl
loope
js
inc
push
cwtl
xchg
outsl
out
gs
xor
hlt
lds
in
add
call
mov
pop
popa
jmp
out
mov
mov
sub
hlt
sbb
jns
xlat
mov
hlt
in
jl
mov
test
cmc
sub
push
xlat
outsl
ret
jae
push
inc
dec
and
sub
mov
sub
aas
cmp
and
ds
test
shlb
imul
test
sbb
bswap
std
xor
push
out
shrb
ds
scas
jmp
lods
push
iret
outsb
icebp
push
fwait
mov
pop
fcmovnb
sbb
mov
lret
imull
xchg
clc
sbb
out
fs
les
xchg
pop
out
lds
aas
dec
ds
popa
outsl
inc
jns
movsb
sbb
lea
ja
ljmp
clc
sbb
push
mov
jmp
dec
ja
inc
sbb
ljmp
test
sarb
sub
sahf
inc
loope
insl
imul
mov
jnp
lret
pop
je
enter
xor
movsb
movsb
rolb
jne
les
hlt
aad
pushl
lea
nop
mov
jp
clc
ret
and
push
jo
pusha
arpl
adc
stos
dec
cmp
jbe
aas
cwtl
lret
push
dec
xchg
mov
or
mov
gs
cmp
fcomp
xor
cs
into
ss
push
mov
stos
add
int
cwtl
lock
mov
je
push
fnstsw
dec
rclb
ret
test
lcall
mov
sarl
into
ja
cmpsl
dec
imul
jnp
arpl
shll
sbb
ja
mov
lret
outsb
stc
push
imul
and
imul
dec
dec
cld
mov
xchg
xchg
cmp
or
mov
push
add
dec
xchg
adc
or
jns
jg
stos
cltd
in
movsb
loopne
sub
stos
add
or
pop
jp
hlt
jo
outsb
mov
outsb
loop
mov
or
rolb
add
lods
or
sar
mov
ret
mov
inc
mov
push
int3
lret
popa
lret
mov
shrb
pop
adc
in
or
insb
lock
mov
call
mov
cs
hlt
mov
mov
aad
xchg
and
add
and
push
add
push
leave
pusha
and
repz
push
add
dec
adc
pop
pop
mov
call
insb
and
fnstsw
sahf
fildll
pushf
add
testl
paddusb
int3
movsb
mov
sbb
lea
adc
mov
ret
pop
arpl
pop
adc
into
stc
test
fdivl
sub
je
sbb
push
dec
imul
test
cmp
dec
ror
and
aad
mov
in
pop
pusha
fwait
or
jl
pop
stos
outsl
inc
sbb
lods
push
ret
fwait
test
loop
out
stos
xlat
pop
pop
fmul
mov
push
sub
pusha
scas
rcrl
repz
cmp
mov
dec
aas
mov
sahf
popf
test
test
mov
lcall
lods
push
outsl
inc
inc
push
sbb
jne
mov
dec
push
in
je
pusha
add
dec
sti
mov
mov
mov
inc
pop
push
nop
aaa
pop
mov
loopne
and
cmp
icebp
push
aas
sbb
jnp
mov
cmpsl
icebp
bound
insb
ret
dec
int3
fistpll
arpl
lods
mov
mov
or
mov
outsl
aas
jle
fidivrs
imulb
popa
pop
ja
shll
push
into
mov
sbb
mov
fs
int3
add
xchg
mov
addr16
pop
xchg
int3
and
sahf
movsb
dec
out
sub
leave
cmc
add
fadd
mov
arpl
mov
pusha
cltd
stos
or
or
and
sbb
jg
lea
dec
pop
aaa
jge
inc
shll
lcall
sbbb
mov
nop
iret
les
dec
jmp
xor
inc
dec
out
and
addr16
jp
in
cmpsb
mov
pop
inc
lds
xchg
mov
pop
push
pop
xor
ds
xor
cmp
adc
ret
cli
push
int
push
inc
mov
adc
outsl
sbb
cmp
cmp
les
jno
ljmp
xchg
cmp
call
jne
popa
icebp
sbbb
shll
dec
clc
push
ret
pop
push
popa
push
mov
pop
clc
icebp
cmc
mov
das
lds
inc
inc
cmp
aas
xor
push
push
push
sbb
ss
jl
mov
pop
pusha
lret
out
loop
addl
dec
bound
cmp
push
jg
cwtl
jo
adc
jg
lods
mov
shll
cmc
and
jne
fldl
mov
incl
rcll
test
sbb
hlt
lret
pushf
or
mov
in
rcrb
jecxz
dec
fnstenv
scas
inc
push
js
gs
fcoml
add
insb
sbb
mov
ret
lea
icebp
adc
out
movsl
rorb
enter
aaa
inc
dec
mov
ljmp
int
rorb
mov
mov
fsub
repz
xor
stos
fisubrl
mov
mov
adc
arpl
sub
dec
scas
addl
insl
jne
dec
pop
sbb
les
es
xor
mov
cmp
jecxz
mov
jp
mov
sbb
add
add
fdivr
mov
sub
push
sbb
fcompl
xchg
ret
and
push
bound
dec
lret
in
jmp
mov
frstor
xlat
or
adc
test
clc
std
pop
inc
call
testl
sarb
jg
es
int
xchg
mov
or
pop
mov
mov
push
das
js
test
or
ljmp
outsl
dec
in
daa
jp
mov
lret
push
adc
add
inc
dec
loopne
fldcw
arpl
sub
mov
xchg
adc
lods
ret
loopne
insb
mov
mov
fcomps
push
jbe
leave
int
or
pushf
clc
xchg
xor
cld
sub
add
mov
dec
jle
add
pop
push
jle
ret
cmp
cmp
subl
movq
cmpsl
int
int
iret
cmp
data16
xchg
jne
sbb
daa
out
push
int3
sti
movsl
aas
jmp
mov
adc
ret
lret
outsb
cmpsl
or
cmp
xor
frstor
sub
and
mov
shll
bound
add
scas
jns
and
or
push
pop
jg
and
cmc
add
imul
pop
pop
pop
push
icebp
sub
fiadds
scas
mov
cmp
and
mull
add
sbb
loope
push
mov
rcrl
xchg
jecxz
imul
sub
sbbl
pop
fmull
and
or
fs
push
add
jo
inc
adcb
dec
or
ds
dec
cmc
mov
nop
push
dec
in
ljmp
jmp
or
and
or
mov
add
inc
lret
mov
or
imul
in
rcr
xchg
add
cmpsb
adc
or
jl
fdivs
mov
lock
push
dec
repz
int
addb
push
aas
ljmp
mov
aam
pusha
mov
je
imul
or
inc
push
stc
sahf
jnp
mov
xchg
in
lcall
aad
mov
pop
jmp
dec
in
cmp
movsb
fsubrl
add
sti
jb
mov
dec
xor
inc
orl
and
and
aaa
xchg
and
jge
mov
mov
lahf
loopne
add
mov
mov
mov
test
and
inc
push
rolb
test
mov
cmpsl
add
mov
xchg
stos
push
rclb
and
inc
insl
dec
inc
into
cmp
cltd
lock
test
ja
icebp
xchg
movsb
jle
jp
into
lret
pop
push
or
mov
inc
xchg
mov
cmpl
stos
enter
cmp
jmp
dec
or
dec
xlat
in
adc
and
cmp
xor
mov
scas
lret
jl
inc
into
pusha
mov
nop
jbe
jnp
dec
in
gs
insl
push
mov
stc
cvtps2pi
xor
and
jmp
sbbl
xchg
sub
mov
xor
inc
fidivl
mov
or
lea
dec
js
push
adc
cmp
ja
insb
cmp
out
mov
sbb
jns
mov
xchg
popf
add
add
jp
in
scas
inc
sbb
sti
in
cmpsl
sti
xchg
ja
ficoms
and
mov
dec
out
les
pusha
das
xchg
cltd
add
iret
lods
mov
mov
inc
inc
js
movsb
add
xor
dec
decb
add
mov
xor
das
pop
rolb
in
cltd
lods
decb
mov
push
xlat
mov
pop
sub
jmp
test
jge
in
push
pop
push
dec
pop
addr16
inc
jg
lods
xor
cltd
inc
divl
stc
mov
adc
in
xor
inc
js
rclb
in
jmp
mov
rcrb
jl
push
fldcw
and
cmp
setle
mov
add
cmp
and
lods
push
data16
add
dec
mov
adc
push
and
inc
adc
and
fcmovne
fisubl
jne
sti
lcall
adc
and
push
addb
jb
in
pop
test
mov
or
mov
dec
pop
pushf
pop
adc
lds
fstpl
lds
ret
bound
inc
insb
jno
icebp
lret
test
inc
or
ds
xchg
xor
mov
sub
sub
mov
in
adc
jno
enter
adc
movsb
ss
inc
cmp
xchg
loopne
rolb
xchg
adc
cs
mov
std
push
mov
testl
out
pop
popa
cwtl
adc
in
gs
lret
inc
shlb
popa
stos
enter
jo
mov
in
pop
jno
gs
aam
sub
fs
addb
mov
jmp
jg
adc
daa
xlat
loope
out
lods
bound
movsl
in
lock
cmpsl
inc
or
mov
mov
mov
fnsave
cmp
mov
mov
in
int3
lea
inc
mov
dec
cmc
lret
lret
mov
xor
popa
jns
jne
lods
mov
xchg
push
jle
jae
jnp
rolb
push
nop
add
lret
mov
adc
mov
mov
mov
loope
negb
arpl
cmp
gs
xchg
mov
cli
fldcw
push
adc
js
lea
pop
in
gs
mov
jne
mov
test
iret
mov
add
mov
sbb
sahf
cmpsl
and
mov
mov
enter
ss
sbb
jb
test
jno
lcall
and
pusha
xchg
lea
cli
int3
mov
push
sbb
xchg
test
lock
subl
ss
dec
outsb
and
sbb
mov
sub
jo
mov
jle
out
daa
pop
fstpl
mov
jl
enter
inc
into
xchg
call
fisubrs
and
into
push
enter
ror
out
add
pushl
outsl
sbbl
in
lods
cmp
push
lods
ss
cwtl
jl
dec
nop
clc
das
sbb
out
pop
mov
scas
and
cmp
dec
ret
jnp
dec
test
jns
addr16
xor
ds
xlat
inc
inc
nop
dec
shll
test
ds
test
xlat
adc
adc
lods
mov
xor
fwait
inc
adcb
pop
dec
inc
sub
xlat
inc
ja
inc
aaa
or
pop
inc
ret
jae
xor
pop
jne
and
jecxz
test
push
sub
cmp
mov
cmp
mov
cmp
lods
xor
orl
sbb
insb
mov
mov
iret
push
mov
push
cltd
scas
and
bound
jle
fwait
mul
and
and
adcl
push
movsb
stos
rolb
and
jno
mov
and
leave
push
ja
add
mov
xor
call
pop
movsb
fdivrs
xchg
jo
pusha
fsts
lret
leave
outsb
test
push
push
jns
addr16
sbb
sub
push
data16
repz
inc
ljmp
pop
dec
in
test
inc
nop
leave
sbb
test
inc
jecxz
xchg
imul
jge
jle
jp
rolb
push
inc
pop
leave
pop
daa
or
dec
movsb
dec
fidivs
arpl
enter
sub
fcompl
test
adc
xchg
mov
je
add
aas
stc
push
jp
jne
dec
outsl
add
add
in
movsl
mov
lret
hlt
sbb
dec
jmp
xchg
test
pop
sbb
les
test
or
push
std
adc
jnp
or
xchg
pop
jecxz
xchg
fcmovnbe
mov
cmp
pop
rorb
enter
mov
dec
pop
std
repnz
inc
mov
jb
adc
inc
xor
pop
mov
enter
adc
or
or
std
test
outsl
ja
jb
cmp
add
dec
xchg
fbld
inc
jle
xlat
shlb
or
bound
repz
in
imul
faddl
add
jne
cmpsb
xor
mov
xchg
repnz
lods
call
mov
push
pop
inc
mov
jbe
or
xchg
dec
fs
bound
mov
sbb
fwait
rorl
test
in
mov
xor
xlat
or
sbbb
push
or
pop
int
inc
mov
subb
js
mov
pop
pop
lcall
shrl
add
mov
pop
mov
movsl
or
xchg
lret
data16
sbb
push
and
dec
pop
insl
xor
fdivrl
jge
js
out
aam
cs
xchg
enter
js
mov
dec
jecxz
pop
pop
push
xchg
push
mov
mov
ljmp
push
sub
cmp
cmc
adc
iret
fisubs
call
sbb
push
jle
cmp
pop
xchg
iret
int
cmpb
cmc
pushl
cltd
jle
orl
out
outsb
push
sub
test
jle
mov
inc
lds
pop
ja
outsb
out
imul
xor
int
jae
in
test
out
clc
sbb
and
jg
test
dec
lods
test
and
pop
inc
jo
rclb
sbb
mov
out
jbe
mov
orb
pop
push
nop
add
popf
jmp
push
clc
fdivrp
repz
xor
cmp
rorb
popa
push
push
ds
nopl
adc
sub
mov
inc
movsl
mov
out
jnp
mov
pop
xor
hlt
sarb
loopne
movl
xchg
insl
aam
aad
jae
fwait
jnp
outsb
xchg
loopne
cmp
pop
xor
in
xchg
repnz
cs
xor
or
mov
pop
mov
je
dec
adc
mov
loope
xchg
sbb
cld
add
mov
in
xor
iret
ret
cmp
scas
jge
jb
in
cmp
bound
or
or
jns
jo
mov
and
jb
xchg
jb
and
fistps
outsl
and
and
pop
inc
in
push
mov
adc
inc
jg
mov
mov
and
and
retw
sbb
adc
fsts
sub
inc
mov
jge
fstps
pop
push
sbb
push
call
mov
sar
xchg
mov
xor
sbbl
xchg
adc
mov
push
mov
dec
lcall
sbb
movsb
shlb
repz
popf
notl
frndint
repnz
in
stc
mov
in
dec
cmp
xchg
jbe,pn
lods
and
icebp
subb
adc
push
xor
fimull
jne
aas
jae
jne
mov
push
dec
xor
pushl
les
mov
js
das
stc
inc
xor
pop
je
nop
pushf
aam
dec
dec
push
neg
push
pop
sahf
mov
push
aaa
mov
mov
inc
add
jg
scas
clc
jns
xor
xor
pushf
adc
push
mov
jl
jmp
les
ficompl
cmpsl
aaa
lret
sub
fiadds
sub
lcall
ss
sbbb
xor
out
pusha
in
es
mov
add
xor
add
int3
mov
sub
leave
dec
add
pop
fcmovbe
test
xchg
mov
aas
frstor
in
out
repz
nop
call
mov
cmp
ror
int3
bound
inc
jp
or
shl
inc
inc
movsb
in
add
adc
pushf
inc
mov
pop
imul
push
xor
jae
sbb
je
shlb
jo
out
pop
lcall
popa
jp
push
xlat
das
inc
or
je
in
mov
jno
out
mov
xchg
and
xchg
pop
xchg
dec
inc
in
lock
jne
push
pop
push
mov
enter
ficomps
sub
xchg
sbbb
jge
mov
data16
stc
dec
sahf
fs
pop
mov
mov
mov
mov
and
sub
fisubrl
movsl
test
sub
mov
sub
adc
adc
loop
push
mov
in
out
rolb
push
pop
sahf
push
ja
mov
enter
pop
jbe
cmpsl
cmp
sbb
and
ret
mov
aaa
xchg
push
sbb
mov
inc
push
jmp
call
je
mov
sub
aas
and
mov
push
jnp
adc
add
das
sbb
add
xchg
add
mov
cmp
mov
ret
dec
ficomps
sub
mov
push
gs
test
psubusw
lahf
xor
pusha
cmc
mov
dec
jb
add
mov
inc
addr16
iret
es
movsl
sarb
dec
pop
ret
shlb
or
adc
popa
mov
mov
sub
ja
rclb
inc
mov
xor
aas
imul
test
stos
dec
imul
jbe
lcall
insl
sbb
mov
jge
adc
push
aas
rorb
xor
mov
ljmp
sub
or
loop
inc
int3
sbb
mov
ss
add
fadd
rorl
mov
lahf
hlt
lods
lods
xchg
scas
inc
in
pop
cmpsb
cmp
jg
mov
and
jne
bound
cltd
cmp
sahf
and
mov
sbb
cmpsb
aad
lock
inc
stc
fbstp
packssdw
out
xor
sbb
jae
dec
hlt
mov
int3
les
stos
dec
mov
or
mov
out
mov
sub
ror
sbb
mov
jmp
xorl
xor
adc
dec
shlb
sbb
and
pusha
aam
mov
fldl
sub
and
insl
push
dec
scas
in
sarl
jae
lret
negb
inc
xor
inc
mov
iret
fcmove
lret
or
in
and
idivl
fdivrs
nop
loopne
push
sbb
dec
mov
or
lea
dec
repnz
mov
dec
or
and
addr16
push
cmp
cmpsb
dec
pop
sbb
lock
lcall
cwtl
xchg
das
in
stc
pop
pop
sbb
adc
stos
lret
scas
or
popf
mov
lods
test
fistps
stos
testl
jmp
into
add
mov
mov
mov
std
iret
sti
xor
insb
rcrl
inc
cmp
xchg
pop
ljmp
and
mov
sub
movl
add
sbb
xchg
outsl
adc
pop
adc
mov
mov
jmp
mov
jp
cs
pop
dec
mov
dec
mov
insb
and
test
sarb
jmp
jne
ljmp
xchg
cmpsl
jae
dec
add
mov
scas
pop
pusha
jle
out
test
inc
sub
addr16
loope
rolb
add
fmull
outsl
mov
sub
mov
popf
xchg
add
mov
jns
flds
into
gs
lret
scas
test
lds
sbbb
in
in
imul
mov
imul
mov
push
mov
mov
movsl
loopne
mulb
add
push
mov
int3
sub
sbb
pop
cmp
movb
jl
bound
cli
dec
getsec
notl
xor
sbb
dec
ja
inc
or
in
or
data16
sbbl
xchg
add
aam
adc
fbld
adc
sbb
into
cmp
mov
stos
and
pop
sti
push
adc
push
mov
daa
call
fisubs
add
fwait
outsl
adc
imul
cmp
test
dec
push
stos
sbb
pop
imul
jnp
mov
mov
lods
pop
push
cmp
xchg
jmp
jne
sub
jp
lahf
ja
or
jne
out
lahf
popf
or
inc
pushf
movsl
stos
inc
test
sub
imul
shrl
lret
pop
push
cli
and
mov
icebp
xor
leave
jle
lds
dec
mov
sub
loopne
adc
hlt
js
rcrl
push
jp
orl
shrl
lods
rcr
fildll
repz
pop
push
mov
or
es
or
in
outsl
out
push
popf
sub
lods
adc
mov
mov
js
mov
hlt
sbb
pop
inc
ljmp
shl
les
cwtl
and
pop
fwait
jg
sub
jecxz
cs
fwait
xchg
jns
je
js
pusha
and
dec
mov
or
dec
ds
out
and
push
push
loop
stos
dec
int3
xorl
inc
das
jbe
jl
adc
sbb
pop
push
push
test
cld
add
dec
fwait
pusha
pop
cmp
out
ja
pop
pop
pop
jg
lret
repz
loopne
in
sti
push
popf
fcoms
fcmovu
aas
pop
xor
loop
cld
leave
pop
scas
lea
arpl
sub
sbb
cwtl
xor
lahf
mov
mov
jl
arpl
and
lock
outsb
outsl
sahf
mov
push
or
mov
push
jne
sbbl
sahf
pop
aam
fisubl
pop
cmp
js
fnstsw
cmp
rolb
adc
cmp
aam
out
mull
sub
cld
sti
je
dec
fistps
mov
jns
jno
xchg
in
xor
adc
jmp
push
repnz
and
add
pop
push
xchg
mov
test
mov
xchg
aad
xchg
adc
mov
mov
pusha
mov
outsl
inc
testb
xor
push
sahf
shl
cltd
mov
xor
divl
dec
dec
sub
pop
stos
arpl
in
mov
js
mul
repnz
popa
js,pt
push
jge
push
dec
pop
test
mov
out
fcomps
jo
sahf
js
ljmp
xchg
push
cltd
jbe
pushl
push
push
and
mov
pop
cltd
xor
lds
movsl
fidivl
arpl
outsl
pop
adc
insl
lea
jge
in
call
fisubl
inc
daa
shrb
dec
jge
xor
inc
mov
aaa
nop
pop
adc
ficoms
sahf
cmovs
inc
mov
pop
ja
cmp
in
push
mov
sub
pop
enter
mov
loope
mov
test
sahf
dec
in
adc
loope
mov
xchg
je
int3
js
cmp
mov
sbb
sahf
inc
jmp
pop
adc
ds
ja
scas
xchg
mov
and
dec
mov
shl
das
imul
and
sbb
inc
orb
lcall
cwtl
rcr
pop
aaa
out
lcall
mov
call
jmp
sti
xor
and
push
sbb
sbb
cmp
cs
jg
addb
sbb
or
xchg
jl
xchg
pop
jmp
test
add
jmp
hlt
fldcw
add
ljmp
mov
mov
push
idivl
push
pop
sbb
std
and
or
outsl
push
pop
mov
sbb
das
adc
ljmp
pop
sbb
push
fwait
loop
jno
les
mov
add
inc
sbb
lret
leave
in
dec
mov
insb
mov
lret
scas
and
pop
mov
pop
cmc
xor
push
inc
adc
fcomp
shrb
mov
add
divb
mov
mov
inc
aam
shlb
xor
adc
outsb
ss
push
mov
xchg
jle
imull
gs
lahf
shl
arpl
test
mov
rorb
push
pop
aaa
shll
cmp
aas
sti
lea
arpl
loope
sbb
push
sahf
mov
push
or
add
xchg
lock
pop
out
xor
sub
cmp
dec
ljmp
lock
mov
mov
jg
repz
xchg
xchg
xor
jae
sub
sbb
push
sahf
idivl
lret
add
and
jae
ud1
jmp
add
mov
sub
adc
mov
repnz
ret
test
lods
or
pop
sbb
fidivrl
push
mov
mov
pop
dec
cmp
mov
xor
je
push
mov
gs
push
cmp
lock
or
in
add
sti
pushf
and
push
filds
dec
hlt
in
out
arpl
pop
lods
or
or
ret
sub
repnz
gs
clc
sub
test
aas
push
add
test
int
arpl
inc
nop
inc
js
dec
shr
out
xorb
fnstcw
jbe
in
mov
ljmp
les
hlt
int
sahf
dec
in
xchg
test
lahf
cmp
push
clc
sbb
xchg
clc
in
sbb
fucomi
cmp
add
inc
xor
xor
cmpsl
push
ret
xor
sbb
push
jbe
push
jo
fstpl
ficompl
push
push
xlat
xchg
push
lock
addb
xchg
xchg
dec
pop
jmp
out
js
sarb
cld
ret
push
push
sub
mov
dec
outsl
test
cmp
fnsave
mov
lahf
je
cli
lods
mov
lcall
cltd
xchg
xor
pop
or
stos
and
popf
jmp
push
add
xrelease
lcall
outsl
push
and
out
pop
xchg
out
inc
pop
pop
pop
push
xchg
jmp
fiaddl
in
push
push
popa
jp
xchg
and
lock
push
js
out
jl
sub
std
mov
popf
push
cli
mov
add
je
add
dec
outsl
js
push
jmp
mov
das
in
xor
aad
xor
stos
icebp
xor
and
faddl
push
int
mov
mov
in
clc
hlt
lcall
cmp
bound
push
cmp
cmp
jl
mov
xor
jnp
sub
xchg
mov
movsb
mov
add
add
sub
xchg
fwait
or
call
ffree
dec
mov
in
nop
mov
fisubl
dec
test
jns
lock
fldt
push
xchg
cwtl
iret
push
xchg
jl
jbe
adc
dec
or
and
aad
ljmp
scas
mov
or
mov
inc
out
or
in
jno
sub
movsl
icebp
out
pushf
mov
mov
mov
and
pusha
repz
rolb
mov
rcll
inc
imul
fwait
add
ret
add
jns
sarl
scas
sahf
fwait
or
push
addr16
rcrl
jbe
insl
popf
push
out
mov
mov
repnz
or
sbb
test
lahf
mov
fstps
adcb
add
xchg
sub
lds
adc
push
add
jmp
jo
aad
inc
jge
jns
pushl
jbe
mov
ja
sub
lea
adc
mov
mov
ret
pop
test
in
repnz
aas
pop
jo
sti
mov
dec
pop
pop
imul
scas
sahf
dec
mov
mov
daa
std
iret
mov
mov
aad
mov
xor
jg
stos
fisttps
fisubs
iret
push
out
mov
inc
enter
mov
xchg
call
add
dec
xor
cmp
test
cmp
icebp
add
xchg
xor
or
lock
push
leave
push
mov
stos
imul
iret
sub
sbb
mov
xchg
jge
pop
pop
xorb
outsl
out
arpl
imulb
stos
xchg
test
jnp
sbb
outsb
dec
add
cld
push
mov
sbb
xlat
inc
adc
lret
popa
cwtl
arpl
xchg
out
lcall
add
in
mov
pop
out
inc
int
outsl
mov
pushf
test
xor
test
push
dec
mov
adc
stc
dec
and
sub
adc
pop
ret
leave
pop
rcr
rcl
dec
push
jne
leave
bound
fisttpll
popl
js
xchg
sbb
cmp
push
or
jmp
and
movsb
sbbl
jo
cmp
movb
xor
dec
int3
iret
sub
add
or
leave
add
ja
xor
push
or
mov
out
lock
pop
sarb
xor
xchg
pop
bound
xor
pop
test
xchg
xchg
jp
stos
xchg
stos
imul
xchg
adc
inc
mov
insb
cld
add
cltd
mov
and
pop
xchg
and
cbtw
or
and
imul
inc
add
test
int3
std
mov
and
fs
add
and
loop
pop
leave
sub
jp
push
mov
call
gs
mov
mov
fsts
shll
mov
push
das
movsl
add
out
ret
mov
and
bound
push
xor
insb
sub
dec
cmp
movsb
test
shld
mov
cmp
push
fs
inc
lcall
xchg
add
or
fwait
cmp
or
dec
rorb
or
pop
push
pop
cmp
fildl
scas
aad
repnz
in
add
pop
lock
mov
outsl
addr16
and
insl
push
sti
cmp
dec
or
jo
adc
fs
cltd
subb
cmpsl
push
mov
pusha
fistl
loopne
cmp
movsb
inc
cwtl
outsb
das
xchg
test
add
sbb
mov
sub
push
imul
mulb
xchg
loope
bound
repz
frstor
sub
dec
iret
das
inc
gs
enter
sti
cli
outsb
loop
stos
mov
loop
lcall
lods
test
lret
insl
stc
and
fsubrs
mov
push
push
push
add
cld
std
dec
mov
fs
rcrl
loop
or
data16
or
fnstcw
push
jmp
rcrb
xchg
mov
inc
pop
add
adc
inc
and
and
pop
push
lods
and
inc
test
xor
cmc
push
mov
test
aad
sbb
inc
mov
sub
aaa
repz
ror
add
arpl
add
orb
xchg
add
mov
cltd
pop
xor
or
subl
mov
mov
fdivr
sub
shll
outsb
sbb
lods
js
imul
decb
movsl
repnz
push
outsb
outsl
push
inc
or
fcos
or
inc
loop
pop
pop
stc
sub
jnp
icebp
pushf
pop
inc
sbb
lahf
dec
or
dec
cmp
pop
shll
jnp
shll
cld
int3
aam
cmp
add
out
cwtl
shlb
xchg
mov
pop
filds
in
int
into
fldcw
and
lret
out
bnd
inc
push
outsb
imul
dec
loopne
jl
lods
inc
pop
pop
ja
pop
inc
mov
mov
or
pop
sub
push
push
stos
andl
or
pop
enter
sti
ja
mov
push
mov
aas
mov
add
or
repz
jmp
adc
fnop
dec
cmpl
dec
cmp
es
adc
int3
or
in
cmp
xchg
push
jbe
xchg
mov
imul
lods
addr16
shrl
xchg
sbb
jg
jbe
ffreep
cli
push
jno
lahf
jnp
dec
int
js
jno
addl
and
mov
jb
in
or
out
push
inc
fwait
pop
sbbb
pop
cmp
add
les
sbb
cmpsb
jecxz
dec
das
ficomps
push
cmp
inc
lret
jno
jbe
inc
pop
mov
adc
adc
fstps
cmp
lahf
jno
fists
int3
adc
push
xchg
bound
lods
pop
repnz
mov
mov
add
mov
xor
xchg
aam
fstpl
xor
dec
sbb
mov
loop
jbe
jae
pop
daa
and
cmp
pop
and
lret
sbb
jmp
push
cmp
into
mov
in
or
sbb
inc
jle
out
xchg
mov
scas
adc
into
sbb
sbb
push
out
rolb
and
mov
data16
test
loope
imul
jns
xor
adc
jno
jb
bound
sub
pop
out
jno
fstl
cli
jae
add
fcoms
adc
mov
adc
idivb
inc
and
mov
icebp
popf
loope
arpl
cmpsb
test
push
mov
mov
repz
sbb
enter
stos
jmp
cwtl
pop
insb
push
fmuls
and
sub
mov
cmp
iret
and
ja
and
cmp
add
imul
or
and
or
ljmp
arpl
inc
in
or
arpl
les
clc
mov
imul
int3
pop
aam
leave
push
ficompl
aad
mov
arpl
mov
xchg
mov
ret
test
mov
lret
sub
mov
dec
add
jns
pop
xor
aaa
add
cmp
clc
pop
movsb
dec
mov
cmp
ljmp
mov
push
daa
pop
sbb
int
push
push
adc
adc
dec
xor
mov
push
pop
je
cwtl
mov
enter
push
sub
insl
clc
movsl
je
pop
clc
push
fimull
jns
enter
add
mov
sub
cmpl
mov
xchg
sbb
sub
mov
in
hlt
dec
add
and
adc
pop
adc
jno
adc
cli
pop
xchg
into
push
add
in
popf
sarl
jno
or
jbe
fdivrl
lods
mov
enter
fisttps
xor
xchg
ss
xchg
test
cmpxchg
call
xchg
sub
int
jae
stc
or
mov
mov
sub
cmp
cmp
inc
popf
pop
std
movsl
lods
mov
cmp
jl
rcr
sti
ljmp
cwtl
pop
xor
xor
pop
sbb
out
sub
clc
fwait
sahf
jp
lahf
iret
ljmp
bound
stc
mov
dec
jg
add
xchg
std
push
sub
xchg
fcmovnb
dec
sub
test
aad
dec
jo
sbb
sub
bnd
movsl
inc
xchg
insl
add
and
xchg
and
aad
mov
dec
aas
je
mov
and
jae
jg
stos
nop
xor
jp
mov
loop
jno
mov
adc
stc
bound
xchg
xor
imul
sub
jo
pop
jge
aad
stc
outsb
js
dec
lcall
pop
mov
and
pop
hlt
adcb
push
arpl
ficoms
dec
fisubrs
dec
xchg
add
jle
mov
pop
jne
call
pop
fmuls
gs
ja
out
mov
in
daa
enter
aam
dec
sahf
sti
incb
xchg
pop
dec
mov
rolb
pusha
data16
inc
lret
push
in
movsl
insb
aam
add
mov
stc
pop
sbb
dec
int3
aas
icebp
cli
es
lods
jle
mov
inc
icebp
lret
bswap
dec
xlat
test
xchg
cmp
jg
cmp
jo
nop
or
cmpb
adc
inc
stos
add
mov
push
mov
aam
aad
mov
xchg
les
sti
in
pop
lods
cmp
psubsw
loopne
nop
not
cli
cmp
sbb
fwait
negl
cwtl
mov
out
leave
loopne
cmp
push
mov
jo
mov
pop
movsl
scas
lea
ss
test
mov
pop
fisubs
dec
xchg
dec
arpl
push
push
lret
add
mov
xchg
iret
fmul
adc
or
cld
pop
mov
sub
or
jns
inc
cmc
and
int3
lret
dec
xor
enter
sbbl
incl
or
arpl
sbb
lgs
fiadds
and
imul
sarb
xchg
ljmp
out
jb
sbb
inc
fidivl
xchg
xchg
mov
inc
in
out
call
mov
xchg
cmp
adc
loopne
cmpsb
xor
je
mov
pop
sub
int3
jbe
jl
into
ljmp
adc
push
lea
fstpt
mov
or
lcall
arpl
mov
cmp
dec
scas
mov
fmul
xchg
push
out
imul
int3
mov
cwtl
aam
into
cmp
insl
sub
push
pop
add
in
loop
int
push
mov
lods
sahf
dec
cli
fstl
ret
push
lock
dec
mov
shl
shll
jne
adc
in
sub
adcb
sarl
adcl
push
in
rclb
sbb
ja
sti
push
scas
sbb
into
imul
cmpsl
je
shr
inc
sbb
jno
and
in
loop
stos
xor
leave
and
mov
int3
gs
enter
mov
push
push
xchg
sub
sub
sahf
push
fs
gs
cmp
dec
leave
sub
sbb
dec
mov
fnsave
icebp
ja
pop
sti
in
into
cmp
or
aam
insl
fdivr
lods
movhlps
movsl
add
fldcw
test
push
push
mov
and
sbb
aad
mov
lret
xchg
fnsave
push
stc
cmp
mov
mov
je,pt
inc
jge
jl
mov
push
jecxz
or
jmp
insb
nop
int
imul
test
roll
in
adc
dec
lcall
das
into
xor
xchg
add
xchg
ljmp
repz
ljmp
insl
inc
pop
adc
nop
movl
cmpsl
arpl
xchg
das
sub
repnz
lock
push
cmc
arpl
fiaddl
add
fwait
dec
int3
mov
fsubp
sbb
cmp
sub
insb
jbe
scas
shll
popf
mulps
inc
or
add
or
pop
mov
scas
movsb
push
ljmp
cmp
mov
dec
lods
pop
inc
in
add
xor
pop
scas
dec
push
dec
or
fsub
pushf
insl
sub
xchg
stos
inc
cmp
sbb
mov
ficompl
mov
call
add
push
sbb
sub
fisttpl
repnz
adc
and
or
fistps
lea
sub
push
scas
bound
add
xor
xor
sub
stos
jl
and
mov
mov
sbb
adc
push
lret
mov
ret
adc
mov
rcll
out
shlb
jno
or
roll
xchg
mov
fcom
adcl
daa
mov
clc
mov
mov
or
mov
mov
xchg
adc
mov
inc
js
push
out
adcl
push
jl
or
jg
or
mov
sub
dec
cmpsl
in
sub
das
loopne
in
add
adc
xchg
inc
mov
xchg
xchg
mov
mov
push
push
cmpsb
popa
sub
adc
out
faddl
fstps
jecxz
or
dec
outsb
xor
jb
test
or
movsb
mov
jg
loopne
rorl
addr16
popf
js
cmp
pusha
scas
and
adc
subl
jns
cmp
out
je
lods
cli
adc
in
shlb
mov
push
mov
pop
testb
test
pop
xchg
fldt
frstor
xor
rcrb
xchg
test
sub
or
mov
int3
pop
push
stc
popa
popf
push
xchg
in
jp
into
fstp
mov
mov
mov
push
inc
inc
jno
mov
scas
mov
sar
dec
adc
cs
fsubs
mull
dec
push
fsubl
mov
mov
daa
mov
inc
xchg
cmp
jmp
add
pop
jb
daa
mov
repz
scas
test
lods
and
xchg
lret
fs
push
insl
jbe
lcall
xchg
sbb
jecxz
cmp
shrb
and
or
and
imul
ljmp
in
mov
repz
test
fisttps
in
aam
lret
jnp
inc
pop
sbb
cmpsb
lcall
sbb
pop
rcrl
dec
in
ja
push
imul
test
or
and
cmp
push
adc
push
add
lret
push
stos
push
and
dec
adc
add
lods
neg
sub
or
mull
in
jae
movsb
arpl
in
addr16
adc
mov
push
aaa
sub
dec
inc
inc
dec
sub
clc
sub
sub
mov
push
and
ret
and
or
shlb
test
rcrb
adc
adc
pop
inc
xor
pop
add
mov
inc
hlt
pushf
inc
js
or
daa
cs
fisubs
roll
push
mov
jae
dec
and
inc
add
xor
mov
or
cmp
xlat
xchg
xor
and
outsb
adc
cli
pushf
outsb
lods
dec
movsb
arpl
or
and
adc
xor
mov
push
test
je
loope
xchg
xchg
jmp
in
fidivs
lret
push
mov
push
in
loop
mov
mov
mov
mov
das
sub
push
mov
test
xor
sub
stc
std
sbb
fdivrs
xchg
lahf
add
sub
mov
xor
lea
inc
jp
mov
cld
sub
inc
test
fildl
xchg
movsl
ja
push
push
int3
enter
push
jne
in
iret
jp
insl
jb
add
in
sahf
testl
repz
std
pop
sarl
add
or
mov
pop
hlt
icebp
add
sbb
in
nop
inc
inc
mov
outsb
and
adc
ret
xchg
push
fstps
pop
outsl
adc
inc
push
xchg
popf
stos
cltd
js
sahf
sbb
je
and
cmp
cs
mov
nop
insb
lahf
sbb
add
mov
jne
xor
adc
ja
fldcw
jmp
ror
pop
enter
mov
adc
jl
sbb
jl
out
and
shrl
gs
pop
cmp
fsubl
std
mov
scas
pop
das
sarb
mov
int
push
mov
repz
lcall
xchg
cltd
adc
dec
xchg
cli
aad
cmp
xor
jmp
mov
int3
lcall
orl
jge
and
xor
jg
adc
out
call
loop
add
inc
sub
xchg
cmc
ljmp
in
jmp
mov
ret
mov
stos
shl
aas
pop
sbb
ds
inc
and
shll
jb
add
es
clc
aad
push
xchg
mov
mov
out
mov
sbb
mov
call
xchg
mov
inc
in
adc
sbb
dec
jmp
mov
add
pusha
fnsave
stos
fwait
and
or
push
dec
test
dec
pop
data16
cs
test
or
pusha
cmp
mov
ss
cmpsb
jmp
pop
pop
or
xorb
test
inc
or
lods
mov
fucompp
ja
xor
repnz
lret
xor
repz
sbb
sbb
sbb
mov
call
inc
sub
fs
in
loopne
mov
test
lret
pop
sahf
fsubs
inc
outsb
ficoms
xorb
outsb
les
cmpsb
cmpsl
out
jno
mov
lock
test
cmp
mov
add
fmull
rcrb
out
ret
pop
pusha
aam
lcall
inc
sarb
mov
iret
adc
es
push
sub
lods
movsb
out
sub
xchg
push
fnsave
arpl
arpl
pop
push
and
xchg
mov
rorb
add
paddq
pop
inc
fnsave
into
rcrb
or
jo
pop
xorb
cwtl
mov
mov
inc
cltd
addr16
aas
cmpb
std
jmp
xlat
out
xor
pop
jmp
xchg
mov
out
ja
mov
cs
lret
sub
adc
out
add
push
aam
bound
dec
sbb
inc
hlt
mov
scas
jae
idivl
push
lcall
fbstp
xor
das
sbb
push
dec
cwtl
nop
ds
jbe
in
daa
push
mov
icebp
mov
fwait
sti
es
testb
jae
push
cmp
imul
or
repz
int3
jmp
mov
sub
mov
and
cmp
in
in
daa
test
xor
adc
mov
jbe
clc
je
into
cmp
fcmovb
cli
iret
out
movsl
int3
lock
add
sub
jnp,pt
sub
xchg
leave
je
cli
lods
pop
push
scas
push
mov
xchg
insl
stos
cmpsl
lds
fldz
adc
xor
mov
push
cmp
sbbl
jns
imull
add
sti
inc
cmp
and
ret
aas
test
pop
sbb
sub
jl
repnz
movsl
aad
clc
mov
fsubrs
daa
pop
push
sahf
test
dec
cmp
ja
jnp
mov
mov
addb
pop
pop
ret
lods
icebp
ficoms
movsb
movsl
push
mov
adc
pop
repnz
pop
add
dec
pop
push
das
xchg
std
push
or
pop
fidivrs
sub
adc
mov
ljmp
add
push
subb
jno
mov
cmp
push
jmp
or
cwtl
push
push
dec
sub
shr
adc
rorb
lret
and
cmp
sub
fmull
push
xor
xorl
mov
movsl
cmp
mov
in
dec
inc
in
push
lods
mov
dec
mov
stos
rcll
stos
inc
xlat
mov
arpl
pop
mov
xchg
int3
xor
xor
cmp
hlt
push
mov
insl
cmpsl
sarb
and
jb
adc
and
fimuls
xorl
js
test
mov
jl
sub
and
mov
fstpt
mov
cli
add
fdivr
repz
iret
jg
dec
pop
pop
mov
orb
rolb
pop
push
pop
faddl
mov
add
push
popf
clc
adc
outsb
imul
cltd
fsubr
mov
and
mov
in
fwait
insl
xor
push
mov
push
inc
in
xorl
bound
cmp
aaa
inc
jge
das
imul
xor
rcr
clc
lods
pop
xor
repnz
sbb
mov
sarb
dec
icebp
jp
cmpsl
cmp
mov
sub
fmulp
add
fstpl
jb
mov
sub
mov
sbb
inc
cmp
leave
push
pop
loop
test
sbb
mov
adc
add
xchg
jo
inc
test
sbb
and
lods
inc
dec
mov
fisubl
sbb
es
jge
cmp
bound
jns
cwtl
mov
adc
pusha
dec
popa
adc
adc
gs
gs
lea
dec
jmp
or
mov
ret
pop
fisttpl
loope
or
pop
mov
popf
jo
mov
getsec
xchg
mov
inc
push
sbb
mov
scas
lods
lcall
je
test
or
and
push
daa
dec
pop
sar
xor
sub
repnz
aaa
adc
mov
ds
js
in
pop
imul
lahf
push
popa
push
sub
jb
stc
js
outsb
ret
mov
das
mov
leave
xor
add
add
sbb
xor
lahf
pusha
rcr
insl
xchg
sub
pop
adc
jo
ret
jmp
cmp
dec
pop
or
or
ror
or
xchg
jnp
cli
jle
jmp
fsubr
loopne
sbb
lods
bound
mov
neg
and
jg,pt
call
inc
add
lods
test
lret
test
mov
adc
ljmp
out
and
push
das
mov
out
add
andb
sbb
lods
test
push
addr16
sub
cmp
imul
push
testl
popf
mov
loope
mov
adc
test
xchg
mov
out
mov
xchg
pop
pusha
sbb
sti
out
cltd
in
mov
dec
mov
mov
push
push
into
and
xor
mov
and
ds
mov
push
fwait
mov
and
dec
imull
or
lret
outsb
and
jbe
xchg
in
bound
loop
jb
in
je
inc
sbb
pop
push
mov
add
enter
adc
scas
jg
xchg
insb
xchg
xchg
out
xchg
fwait
sahf
mov
mov
imul
pop
adc
daa
mov
out
jne
jl
sbb
sbb
js
mov
std
lds
xor
js
hlt
aad
lret
and
xchg
mov
fidivl
sti
push
add
xchg
mov
xlat
jbe
test
cmp
setno
or
pop
cmp
and
ficomps
and
jo
pop
sbb
jecxz
in
es
in
gs
pop
adc
cmc
xor
adc
xlat
popf
mov
dec
cltd
mov
jge
imul
ret
mov
lcall
pushf
push
fwait
dec
mov
xor
sub
sub
push
ret
mov
cmp
fstl
jb
clc
cmpsb
lret
jb
mov
xor
xchg
ss
das
out
call
jg
lret
outsl
jg
lcall
push
jl
ret
test
sbb
mov
pusha
jmp
in
jecxz
loope
arpl
push
ja
pop
cmp
enter
add
rcrb
jo
mov
shrb
stos
mov
adc
insb
insb
aam
adc
in
lret
adc
testl
cmp
dec
outsb
sbb
jno
fstpl
out
mov
add
inc
push
idivb
iret
arpl
inc
jl
xor
lods
pop
sbb
sub
int
enter
out
rol
stos
or
gs
test
ficoml
nop
push
xor
inc
mov
cmpb
jns
pop
sbb
aam
adc
and
icebp
call
mov
cmp
negb
add
pop
jp
in
ss
and
mov
jnp
push
mov
cmpsl
jbe
inc
xchg
jo
fcmovnb
push
faddl
das
out
ret
adcb
fs
out
pop
jno
ja
cmp
mov
xchg
lahf
xchg
xor
jl
push
scas
xchg
arpl
jae
mov
push
aad
mov
xor
popf
pop
jno
jg
popa
or
fnstcw
mov
adc
sbb
ficomps
sub
add
ja
nop
fs
nop
dec
mov
jmp
add
jbe
out
decl
sbb
mov
jp
add
sub
sti
rorb
out
adc
sbb
mov
push
dec
jecxz
repz
stc
mov
xlat
dec
and
add
bnd
das
xchg
push
push
pop
pop
int3
dec
loopne
xchg
sub
mov
sub
stc
ret
xchg
and
das
pushf
pop
scas
imull
stos
imul
int3
gs
push
into
imul
shll
out
arpl
jbe
jnp
add
xchg
inc
push
enter
insw
add
clc
aam
jbe
push
lret
and
insb
sub
jbe
xchg
js
mov
sbb
insl
mov
push
inc
int3
inc
xchg
inc
das
sub
imul
cmp
adc
jp
add
sub
or
bound
mov
inc
fstps
movsl
pop
jmp
lods
or
sbb
pop
cld
or
inc
sbb
xor
lret
cmp
adc
xchg
xor
or
and
and
or
push
movsb
sbb
mov
outsl
or
mov
ds
sub
enter
xlat
gs
dec
add
in
sbb
push
mov
in
and
lret
hlt
decl
clc
jge
inc
mov
mov
sarl
xor
cmp
sbb
add
xchg
xor
stos
jge
jnp
ret
dec
push
pushf
lock
cmp
adcl
mov
cmp
push
sahf
lods
mov
or
repnz
push
mov
dec
mov
mov
cmp
test
sub
ja
mov
out
or
cld
cmp
btc
cmp
xchg
push
insb
push
daa
mov
inc
pop
add
mov
fstl
push
test
sti
pop
cs
fs
test
xorl
inc
movsb
mov
cmc
sub
popa
mov
sbb
add
icebp
gs
jmp
daa
sbb
mov
psadbw
jg
nop
sub
jg
aaa
dec
xchg
adc
pop
test
loope
jo
in
mov
dec
test
or
adc
cmpsl
int3
mov
call
mov
lea
sbb
or
ds
adc
es
jno
and
enter
stc
fs
into
shlb
pop
js
jmp
cmp
insl
sbb
test
inc
js
add
and
mov
bnd
adc
push
inc
pop
dec
mov
add
insb
scas
push
xor
sub
mov
mov
sbb
stos
daa
add
or
subl
hlt
dec
push
jbe
loop
iret
xchg
add
cltd
or
aad
out
cld
xchg
mov
pop
repnz
jns
pop
mov
cli
and
enter
or
ds
test
insl
mov
out
cmp
lret
test
push
lea
jns
fs
dec
enter
inc
jle
cld
xchg
decb
loop,pt
or
xchg
or
mov
mov
jne
inc
lea
loope
mov
lea
gs
stos
es
pop
ret
and
mov
cmc
xchg
orl
fisttps
pop
lods
loope
mov
pop
xchg
enter
or
hlt
adc
scas
sahf
or
mov
outsb
jl
test
outsl
mov
cmp
into
sub
adc
ret
or
xchg
nop
lret
and
loop
jae
lea
mov
test
push
mov
xchg
rcrb
push
mov
pop
mov
repz
pop
addr16
jb
mov
loopne
sbb
sbb
sub
xchg
xchg
xchg
roll
loope
xor
cmp
mov
cmp
jnp
enter
add
dec
ljmp
adc
xor
pop
movsl
adcb
mov
xchg
fs
and
sahf
jb
cli
mov
xchg
negl
es
add
push
and
jmp
or
xor
loope
xchg
in
hlt
inc
fisttpl
mov
jg
jge
out
mov
cld
mov
sub
pop
pushf
aas
and
pop
adc
push
mov
scas
aam
aam
rolw
pop
decb
std
je
or
adc
pop
xchg
lret
adc
hlt
mov
cmp
dec
xlat
in
pop
aad
add
mov
adc
lret
in
push
lods
sbb
pop
inc
lret
scas
jle
lds
inc
push
add
sub
es
fisttpll
sti
insl
or
scas
les
in
pop
cmp
jp
dec
add
popa
cli
stc
xor
and
cld
jg
inc
int3
ljmp
imul
or
ret
mov
or
lret
lods
ja
push
mov
xor
dec
lahf
cmpsl
out
ds
mov
pop
push
xchg
add
clc
or
mov
mov
jnp
stc
sub
cmp
mov
or
cmpsb
mov
jb
icebp
lcall
xchg
pop
loop
scas
sub
repnz
sbb
inc
hlt
inc
lods
jb
scas
pop
adc
stc
pusha
mov
rorl
cmp
mov
inc
sbb
sbb
add
movsl
ret
add
xor
sub
xchg
int3
jb
jns
dec
movsb
or
fdiv
mov
popf
push
jg
in
test
jg
test
inc
add
mov
pop
movsb
add
lcall
sbb
cmpsl
test
sbb
aaa
shrb
dec
mov
test
int
setg
inc
push
or
cmp
test
subl
mov
add
pop
sahf
daa
mov
sub
addr16
xchg
nop
aas
das
jnp
inc
inc
and
ljmp
pop
pop
inc
sub
xchg
mov
and
inc
push
rcll
dec
cli
lods
or
rol
jae
cmp
js
in
jl
sbb
cwtl
mov
lods
pop
popf
fwait
inc
inc
cwtl
sub
dec
stos
test
loop
lcall
ljmp
loop
sbb
mov
sub
mov
out
repz
dec
mov
push
inc
sbb
aas
jnp
sbb
xor
push
fbld
jbe
mov
pop
das
lods
or
dec
aas
sub
jecxz
mov
fidivs
xchg
mov
push
push
xchg
test
in
mov
cld
popa
ds
or
mov
leave
xor
pop
add
es
jecxz
popf
cmp
sub
test
stos
jl
mov
mov
aas
jbe
mov
js
mov
pusha
inc
or
mov
jns
ljmp
mov
mov
out
mov
ss
fs
sub
dec
sti
ret
mov
dec
jl
cmpsl
xor
das
sbb
test
adc
mov
mov
mov
scas
aam
inc
rclb
push
cmp
adcl
dec
in
fdivrs
jecxz
adc
sub
xor
mov
sub
imul
or
dec
sbbb
push
inc
and
fiaddl
mov
mul
stos
mov
mov
loopne
test
mov
cmc
pop
sbb
in
notl
lahf
pop
lea
jg
pop
sub
mov
stos
divl
xchg
add
mov
xchg
pop
aas
aam
adc
ficoml
inc
repz
or
into
icebp
jl
repz
loop
fdivrs
push
and
xchg
ror
xchg
nop
arpl
adc
adc
adcl
aam
testl
out
es
or
shll
or
test
imul
and
scas
je
and
es
pop
pop
arpl
adc
repnz
cwtl
lahf
ret
adc
and
test
pop
notl
sub
xchg
mov
es
push
mov
sub
mov
test
jne
push
fisubs
mov
jecxz
ljmp
pusha
pop
jl
cwtl
popf
mov
dec
push
repnz
lods
jl
je
cmp
scas
shrl
fs
in
rorl
push
es
fisttpl
sbb
xor
out
jne
pop
test
cmp
mov
mov
rol
addr16
cmpsb
fwait
stos
loop
cmpsb
pop
sub
enter
call
mov
mov
xchg
js
iret
inc
mov
sbb
cs
dec
jne
sarb
mov
out
outsl
inc
mov
scas
insb
es
push
rcll
lock
mov
ljmp
out
push
icebp
jle
imul
je
pop
gs
sbb
pop
sbb
mov
jbe
rorb
adc
ret
repz
push
dec
js
sbb
and
or
mov
cwtl
pop
pop
mov
cmp
push
sti
inc
add
fisttpll
stc
mov
pop
rorl
rcr
subb
divl
ret
mov
imul
jbe
sarl
jne
ss
icebp
lcall
add
js
idivl
cwtl
pextrw
sub
insb
jmp
and
jb
cmp
lea
jmp
rclw
pushl
hlt
cmpl
mov
inc
inc
and
mov
mov
fisttpll
xchg
and
xorb
imul
mov
shl
sarl
clc
shlb
sbb
jne
arpl
adc
in
xchg
xchg
out
push
xchg
sub
or
mov
adc
outsb
pop
add
shrl
sub
mov
dec
sbb
cmp
add
or
push
sbb
mov
in
mov
loope
lods
mov
int3
push
adc
sub
adc
cmp
cmpsl
sub
dec
shrl
xchg
adc
fldcw
scas
mov
iret
out
int
ja
mov
mov
and
jnp
int3
mov
loope
faddp
push
cmpsb
xchg
sbb
cmp
mov
pop
cmpsb
inc
jge
lods
inc
sbb
jae
jo
cmp
sub
add
sbb
dec
xchg
or
and
mov
lods
jnp
lret
dec
or
pop
lret
push
mov
inc
lahf
xlat
mov
push
cli
push
xlat
mov
xchg
or
inc
fsubr
aas
mov
mov
xchg
push
gs
adc
xchg
dec
mov
lea
ja
inc
or
popf
test
test
insl
inc
mov
mov
push
jle
sbb
pop
sub
inc
or
das
insb
mov
sub
sub
roll
inc
jle
leave
cmp
cmp
inc
inc
dec
dec
cmpsb
mov
xchg
or
popa
leave
pop
icebp
sub
test
xchg
jb
ljmp
mov
add
mov
and
xchg
cmc
aas
pop
pushf
in
ret
lret
sbb
jmp
push
or
addl
xor
push
shr
cvttps2pi
mov
mov
xor
lea
push
outsb
mov
cmpsb
pop
inc
sub
out
cmc
dec
mov
cmpsb
out
inc
lds
mov
fwait
jns
mov
les
or
sbb
adc
push
inc
sbb
push
mov
movsl
sub
mov
push
rcll
iret
sbb
sti
push
push
inc
rolb
lret
and
mov
mov
jbe
inc
repz
dec
or
out
mov
cmpb
xchg
mov
jnp
cmp
sbb
cmp
mov
aas
cmp
dec
aad
sub
inc
jl
inc
mov
loope
mov
aas
scas
fldcw
and
loop
or
sysexit
mov
or
pop
ret
cmp
jl
xchg
mov
inc
mov
ret
add
add
sbb
jge
pop
inc
mov
mov
mov
mov
mov
xor
jno
jae
mov
adc
jae
inc
mov
shll
dec
dec
flds
add
ret
add
outsl
xchg
push
push
ss
int3
jmp
std
push
shll
mov
push
sbb
stc
call
insl
adc
push
shlb
mov
pop
mov
insl
and
out
push
or
addr16
pop
mov
cli
repz
clc
rorl
pop
imul
cmpsl
inc
sbb
adc
rcrl
inc
in
movl
mov
mov
arpl
xlat
dec
xor
pop
popf
ljmp
jno
cmp
cmpb
ja
cmpsl
fsubrp
dec
mov
pop
xor
dec
and
fsub
fiaddl
mov
loope
mov
jno
sbbl
jno
cs
sbb
out
rcr
push
mov
push
jle
int
push
push
mov
or
push
loopne
or
inc
push
in
inc
add
movsl
out
add
add
lret
cmp
out
enter
jno
sbb
popa
dec
adc
ffree
or
adc
fwait
shrl
mov
xor
jmp
cmp
arpl
jae
push
pop
dec
pop
xchg
aaa
aas
and
mov
xlat
shll
dec
xchg
pop
push
mov
mov
into
orb
adc
inc
dec
adc
enter
cmpsb
aam
nop
push
mov
or
push
xor
xchg
leave
les
andb
outsl
mov
das
test
and
lcall
jle
stos
pop
jae
push
call
pop
daa
cmp
daa
mov
lahf
aas
jg
rorb
pop
sub
mov
adc
lods
fsubrl
and
sub
scas
sbb
pop
pop
mov
stos
shlb
lret
fcoms
xchg
cli
mov
xchg
push
pop
mov
aad
add
adc
stc
lahf
into
and
das
out
incl
out
mov
jo
fcmovbe
sub
in
inc
jl
mov
stos
push
repnz
and
pop
loope
push
or
sub
or
test
and
subb
in
pop
imul
mov
adc
xor
aam
lods
roll
adc
pop
or
mov
pop
or
ret
jmp
rcll
pop
mov
sarb
rcl
sahf
arpl
in
pop
cwtl
or
test
rcl
xor
cs
push
push
cmp
sbb
xchg
dec
mov
cmp
cmpsl
lahf
in
mov
test
in
mov
ret
lock
dec
or
decl
and
pop
popf
stos
mov
jno
add
or
fwait
inc
shlb
in
push
popf
pop
xor
xchg
nop
cwtl
icebp
jle
sub
pop
mov
lret
mov
dec
mov
xchg
dec
pop
dec
mov
pushf
inc
fstl
inc
shll
sahf
pop
mov
divb
movsb
call
adc
pop
call
adc
mov
sbb
push
lock
adc
sub
or
ss
movsb
mov
movsb
mov
sub
dec
fstp
out
scas
and
fisttpll
sbb
fnstsw
inc
push
jmp
xchg
pop
je
shlb
cmpsl
and
test
iret
xchg
test
call
iret
or
sbb
cmp
bound
mov
jne
inc
stc
or
pop
movaps
fildll
adc
push
out
clc
push
lret
popa
test
cmp
int
mov
mov
popf
scas
test
js
lock
inc
loopne
stc
jns
lea
data16
pop
pop
mov
sbb
dec
stc
xchg
popf
lcall
test
adc
in
cmp
jo,pt
and
imul
xchg
xchg
hlt
and
sub
cld
test
in
into
jl
notl
cld
jne
add
stos
test
shll
mov
add
or
inc
pop
inc
mov
mov
ja
lret
adc
lcall
inc
sub
or
sbb
subl
mov
ss
es
mov
add
lret
jmp
sbbl
mov
popf
add
mov
pushf
and
add
xchg
divl
or
test
cmp
mov
test
mov
pop
mov
pop
repz
mov
cli
pop
xchg
iret
mov
pop
popf
ljmp
pop
clc
dec
fwait
ret
mov
andl
jmp
test
and
xchg
neg
sahf
jmp
out
divl
dec
shr
cmp
aad
insl
dec
lcall
pop
add
lods
paddd
sub
aam
jle
dec
in
rcrb
lods
outsb
sti
or
mov
fs
jge
inc
cmp
pop
cmp
inc
jmp
pop
lret
jl
cmp
fmuls
lea
mov
loopne
in
aaa
xor
pop
xchg
add
nop
and
decl
xor
fdivl
mov
icebp
xor
bound
fcoms
mov
xor
pop
pop
testl
test
icebp
pop
mov
dec
das
shrl
out
pop
rcrb
outsl
mov
xchg
and
pop
pop
movsl
pop
add
cltd
pop
push
dec
sbb
or
cmp
mov
jge
sub
es
or
in
xlat
imul
cltd
mov
adc
pop
fbstp
or
cmc
pusha
push
push
std
popf
mov
mov
movsl
mov
loopne
mov
sbb
xor
popf
mov
or
add
fdivr
and
mov
mov
jbe
cmc
scas
loopne
xchg
insb
and
pop
and
mov
jmp
das
jge
cs
mov
pop
jp
into
sub
pop
mov
outsb
add
xchg
lock
mov
idiv
ja
jnp
aas
push
js
rol
mov
insl
popa
xor
outsl
stc
jns
jg
adcb
or
std
arpl
std
repnz
push
xor
in
lret
push
fdivrl
in
mov
cli
std
mov
or
push
inc
es
enter
dec
sbb
xor
cltd
enter
cmp
enter
nop
or
lea
jp
sub
std
mov
imul
push
inc
xchg
inc
add
imul
mov
mov
enter
insl
push
fidivl
pushf
mov
dec
xchg
xor
clc
sub
mov
pop
fsubrp
out
adc
sbb
js
xor
int3
outsb
xor
fisubl
dec
or
out
add
push
inc
cmpsb
inc
movsb
mov
xchg
adc
fisubrs
mov
outsb
jns
pushf
movsl
outsl
cwtl
and
es
lock
sub
lock
jnp
cld
in
sbb
inc
lea
push
cmp
pop
decl
repz
mov
pop
dec
les
xchg
or
aad
push
nop
enter
sub
dec
popl
sbb
mov
push
jae
or
and
mov
sbb
fcoml
sahf
xchg
je
push
mov
cmp
lods
mov
call
xchg
mov
mov
fisttpll
dec
sbb
das
pop
aam
mov
decl
mov
jno
sbb
xor
adc
fs
data16
sbb
and
or
pop
cltd
push
push
dec
fmull
dec
lods
mov
mov
jns
xor
mov
mov
or
call
jnp
or
fsubrl
aad
pop
sub
fstps
ss
sub
push
pop
imul
mov
test
xor
pop
cmp
inc
gs
inc
add
fdivr
xor
jl
out
lahf
bound
and
push
push
mov
sbb
add
cs
pushl
dec
sub
test
ret
shl
jge
fsubp
pop
xchg
sti
out
std
imul
xchg
cs
mov
js
fmulp
sub
scas
test
cmp
pop
pushf
icebp
mov
outsl
sti
or
daa
or
dec
sub
pushf
in
jne
sub
popf
lret
dec
xchg
xor
mov
xchg
or
lods
pop
jno
mov
std
xchg
in
push
push
pop
inc
rclb
es
or
jg,pn
jle
pop
repnz
popf
test
enter
pushf
mov
cs
inc
and
or
add
lock
adc
into
sub
xchg
mov
daa
mov
and
fsubrs
in
mov
icebp
je
push
dec
mov
imul
sti
test
push
int
data16
lret
xchg
ficompl
xor
or
add
push
subl
negl
lcall
xchg
adc
mov
sub
xor
in
mov
mov
sbb
cmc
ret
jo
mov
incl
pop
pop
aam
or
mov
aas
pushf
lret
push
call
jp
icebp
test
cmp
xor
out
in
enter
into
imul
xchg
jle
hlt
cld
aas
push
lret
outsl
push
stos
int3
call
aas
or
outsl
or
push
int3
pop
push
test
cli
inc
and
int3
mov
dec
clc
stos
je
mov
cld
cmp
dec
mov
xchg
sahf
inc
add
adc
out
add
scas
in
push
cmp
jbe
and
xor
popa
into
repnz
test
inc
cmc
mov
rcll
cmp
scas
mov
jmp
dec
sti
out
rorl
sbb
cwtl
pop
aam
pop
nop
fldcw
ror
roll
out
nop
bound
aas
mov
js
filds
add
pop
ret
push
xor
mov
fs
dec
repnz
in
dec
mov
push
cwtl
pop
jnp
push
ret
mov
xchg
insl
lds
cmc
pop
jle
xorl
out
loop
jne
pop
cwtl
add
mov
sub
outsb
stc
cld
or
cmp
out
cmp
in
fcoml
cli
movl
or
popa
fistpll
ljmp
scas
jns
adc
cltd
mov
jno
jb
cmp
subl
jp
dec
pop
mov
out
inc
daa
movsl
dec
dec
mov
outsl
xlat
xor
pop
mov
fdivr
dec
clc
jae
xchg
sbb
rol
jp
xchg
popf
dec
out
add
sub
rolb
je
loop
xchg
pop
jno
jnp
or
inc
lods
mov
push
sbb
outsb
loop
leave
sbb
mov
inc
add
lods
add
stc
fnsave
scas
je
pop
inc
js
xchg
jnp
ret
call
xchg
push
sub
pusha
and
sub
jmp
cmp
and
lcall
cli
cmpsl
arpl
fs
and
movsl
int
shr
lcall
adc
rcrb
ja
fcmovne
lret
test
stos
cmc
push
jae
insl
mov
rorb
xchg
sbb
hlt
mov
cmp
stc
sahf
push
and
imul
dec
clc
fdivp
fs
jns
ss
stc
das
out
mov
js
add
jmp
cltd
mov
fsubl
pop
dec
pop
mov
pop
push
sbb
cli
inc
jp
mov
lcall
nop
adc
lods
arpl
xor
repnz
adc
popa
shll
sub
xor
lcall
jae
inc
fisubrs
inc
pop
push
dec
dec
cmp
fstpt
add
sub
jmp
or
pop
repz
iret
shr
call
shl
dec
in
mov
push
imul
fs
adc
xchg
sbb
lods
push
nop
add
aad
or
imul
and
and
in
xor
mov
fwait
cli
push
xor
int3
jne
mov
jmp
push
jl
lods
cmp
xchg
jbe
sub
testl
pushf
inc
mov
jae
orl
dec
xchg
aad
lret
movsl
push
mov
jbe
rorl
movsl
or
ret
fcomps
inc
pop
int3
xchg
test
dec
xor
jl
insb
rcl
les
jne
in
mov
negl
enter
insl
repz
test
or
movl
jbe
filds
shlb
dec
out
lret
sub
test
jnp
stc
sub
adc
cmp
xchg
xchg
incl
insb
inc
into
aam
in
mov
inc
mov
stos
sbb
ror
inc
dec
or
mov
or
cmp
jo
enter
stc
cmp
fcmovu
lret
repnz
push
data16
push
fnstcw
inc
inc
xor
das
lock
mov
pop
mov
sbb
and
jb
adc
lcall
into
mov
fsub
pop
ret
lahf
out
filds
pop
and
xchg
and
lret
in
sub
lcall
jnp
jge
or
out
xchg
add
andl
push
sahf
sbb
jg
push
or
push
repz
push
xor
push
cmpsb
into
dec
jmp
xchg
jnp
cld
xchg
fsubr
jns
fninit
in
adc
pop
dec
xor
add
arpl
push
addb
inc
mov
fsts
nop
iret
aam
sahf
sahf
cmp
aas
test
push
push
xorl
nop
call
push
inc
orl
mov
and
notb
mov
ret
ja
mov
adc
jo
push
mov
ret
inc
sub
mov
and
mov
pop
ret
cmp
xlat
jle
mov
cmpsb
xchg
insb
sar
popf
sarl
icebp
mov
movsb
jl
and
mov
fwait
jne
or
lds
jmp
enter
push
pushf
daa
jmp
push
push
adc
push
sbb
mov
inc
sbb
pop
pop
mov
jle
lahf
lock
outsl
xchg
jb
mov
push
add
sahf
xor
jb
clc
outsl
adc
mov
out
sbb
stos
dec
fadd
sbb
mov
iret
into
push
mov
rclb
leave
sub
jecxz
pop
add
int
sub
gs
dec
arpl
add
loop
mov
les
nop
rcll
push
insb
sbb
int3
add
push
and
in
sbb
push
andb
mov
add
pop
repnz
and
roll
pop
jnp
daa
adc
xlat
fs
rolb
sbb
adc
sub
in
mov
push
cmp
and
icebp
mov
hlt
or
xor
and
and
and
inc
das
sub
pusha
sub
hlt
cmp
dec
loop
mov
mov
data16
cmp
lods
mov
xchg
mov
outsb
nop
fwait
call
or
mov
push
iret
pop
xchg
sti
mov
mov
js
jae
lret
js
pop
lahf
in
int3
push
inc
dec
das
adc
cmp
test
loop
dec
or
lock
iret
mov
shll
outsl
cmovb
popf
push
out
jbe
pop
arpl
repnz
mov
lea
dec
dec
jnp
xor
je
xorl
sti
fimuls
xor
pop
aas
stos
cwtl
arpl
jnp
jne
jne
sbb
inc
std
mov
adc
sti
jbe
movsl
xchg
sbb
aas
jo
sbb
ret
cmpsb
jns
add
out
dec
add
xlat
adc
test
pop
mulps
cmc
push
insb
fadd
mov
bound
repz
xor
mov
push
dec
mov
pop
mov
mull
pop
bound
and
mov
aaa
xor
aad
xorl
push
insb
into
adc
inc
sbb
mov
and
cltd
or
push
lret
sub
cli
jmp
cmp
cltd
or
dec
pop
std
or
std
adc
mov
mov
adc
mov
dec
stc
mov
jle
sub
xchg
or
cmp
sub
add
mov
sbb
mov
jo
nop
ds
out
mov
sbbb
lods
fcoml
cld
push
adc
add
xchg
sarb
mov
movsb
out
mov
mov
add
add
inc
push
inc
cmpsl
jmp
in
mov
imul
mov
iret
and
std
and
cmpsl
mov
sbb
jo
xor
arpl
push
insb
jl
push
adc
jo
jle
pop
push
outsb
in
pop
inc
adc
inc
and
scas
outsl
dec
std
fwait
ds
outsl
cmp
jg
je
in
dec
xor
fsubrp
jge
pop
cmp
xchg
sub
jns
push
sub
push
rorl
and
ljmp
dec
jno
and
dec
addl
mov
xchg
mov
fistpll
cmp
xchg
testl
and
cmp
mov
fstl
ret
lcall
cmp
or
pop
int3
adc
addb
pop
adc
sub
mov
rolb
das
jae
cmp
jnp
xchg
and
std
xchg
lods
negb
pop
cmp
out
std
orl
insb
out
mov
jno
out
mov
mov
dec
push
mov
xchg
dec
out
insl
mov
int3
xlat
jo
cmp
push
clc
xchg
xchg
push
jnp
int
jno
or
xor
push
cmp
pop
rolb
add
and
fidivrs
adc
ret
add
jb
pusha
jp
mov
inc
cmp
gs
pusha
cmp
dec
add
xchg
jbe
mov
push
stos
gs
loope
jge
pop
daa
xor
out
and
lds
lcall
xchg
inc
mov
in
xchg
jle
cwtl
cmp
aas
jge
pop
xchg
fsubrl
xor
sbb
adc
and
test
jecxz
dec
jb
insl
das
xchg
lea
sub
jo
outsb
push
fisttpl
test
cmp
in
test
mov
adc
push
pop
inc
in
push
out
out
loop
loopne
pop
xor
push
jg
jmp
mov
js
imul
inc
mov
mov
xor
ljmp
es
in
repnz
add
inc
adc
dec
sub
cmp
lods
add
aam
dec
std
add
xchg
push
mov
shrl
pop
mov
dec
bound
les
nop
das
jns
insb
mov
nop
add
cld
scas
mov
pop
ljmp
lods
test
insl
jge
jo
insl
enter
sbb
jno
sub
push
incl
or
xchg
test
test
or
pop
insb
subb
inc
mov
rolb
gs
pushf
push
inc
lcall
ret
shll
push
icebp
lock
cmp
cs
jbe
lcall
sub
aaa
in
nop
adc
push
xor
lret
jnp
dec
push
fistl
push
fs
outsb
cmp
or
stc
mov
push
daa
or
paddusw
mov
mov
addr16
mov
les
lods
into
cmc
adcb
push
lock
adc
or
movsl
loopne
push
and
pop
fnstenv
popf
sub
daa
in
mov
cmp
fs
les
in
insl
fwait
dec
sub
cmpsb
pop
lret
inc
ds
xchg
jmp
fcoms
je
mov
out
mov
inc
sub
jno
pop
pop
inc
mov
cmp
mov
inc
sbb
xor
nop
insb
aas
ret
lock
adc
or
popf
in
pop
rcl
das
sub
sar
push
cmp
cld
xchg
lods
add
mov
andb
xchg
out
sub
aam
sub
jmp
cld
sbb
jp
dec
xchg
sti
addr16
subl
fidivrl
daa
mov
ljmp
dec
mov
push
pop
dec
mov
xchg
sub
nop
clc
loope
das
pop
out
ja
mov
enter
test
je
lock
mov
lret
sub
iret
mov
add
sub
dec
inc
add
xchg
jle
fs
fs
rcrb
imulb
lea
pop
push
and
pop
and
or
and
cmp
mov
je
mov
mov
push
dec
addr16
stos
imull
repnz
sarl
jle
cwtl
pop
inc
mov
sbb
scas
or
mov
ret
sub
scas
mov
mov
outsb
int3
cmp
daa
pop
mov
adc
popa
fwait
nop
push
iret
xor
lret
loopne
xchg
jg
ljmp
aam
add
mov
daa
bound
ror
in
mov
pusha
pusha
mov
fsubp
dec
dec
loope
xchg
jmp
test
loope
or
js
test
mov
push
mov
fs
dec
add
fimull
cli
inc
and
fcomi
repz
xor
mov
add
sub
jmp
leave
dec
inc
mov
cmp
call
icebp
cli
inc
add
std
ror
in
mov
mov
pushf
push
shrb
les
jle
sub
xor
cltd
jae
lret
dec
dec
rcrb
rcrb
test
push
sbb
mov
ret
or
loop
insb
ret
rol
sbb
sbb
mov
cmc
fsubp
roll
fidivl
inc
sub
enter
js
and
dec
or
pop
push
add
jmp
int3
pop
xor
inc
dec
mov
aam
in
in
fucom
iret
into
scas
dec
xchg
decl
sbb
sub
mov
lock
add
es
jns
loope
incb
ret
jne
inc
shr
ret
inc
fwait
xor
push
lea
or
jg
jbe
mov
ljmp
sub
push
xorb
inc
xor
jae
dec
pop
xchg
jnp
jnp
sub
and
cmp
mov
xchg
scas
cwtl
insl
sti
cld
pop
sbb
imul
test
iret
repnz
loop
jmp
pop
outsl
pop
cwtl
jl
lods
inc
and
pushl
es
popa
hlt
dec
fcomip
sub
subl
stos
adc
jmp
jl
jnp
les
ret
push
sbbl
cmc
cmp
daa
cmpsb
sarl
dec
mov
out
pop
push
stos
add
and
xchg
cmpsb
pop
jo
rcl
dec
cltd
push
dec
mov
lea
push
mov
jg
jecxz
or
inc
jmp
ss
sub
int
xchg
jge
push
inc
std
dec
xchg
fsubs
xchg
pusha
inc
movsl
mov
xchg
or
cs
sbb
push
in
sub
mov
and
add
dec
jle
push
lret
or
sbb
imul
jecxz
sub
mov
xor
xchg
jno
hlt
aam
pusha
add
mov
fsubs
inc
rorl
fimuls
pop
into
inc
mov
adc
fistpl
jb,pt
pop
add
sbb
clc
xchg
cld
in
or
movsb
push
gs
enter
pop
sub
cmp
push
in
add
mov
js
mov
rclb
cmp
pop
or
out
incl
cmpsb
xlat
insl
leave
jbe
ret
repnz
jae
lods
cmp
pop
lods
mov
mov
push
aas
pop
es
mov
push
sub
ds
data16
xor
movsb
icebp
jp
xor
dec
gs
outsl
inc
mov
mov
mov
lods
adc
clc
push
loope
pop
xor
out
jnp
sbb
and
and
std
fcomi
fiadds
pop
mov
insb
mov
and
jl
sub
cmp
push
cmp
rclb
mov
xchg
push
xor
popl
xchg
adc
and
inc
cli
push
cmp
xor
xor
jno
int
cmp
scas
sub
jmp
dec
in
int3
ffree
pop
or
mov
insb
sbb
push
packssdw
mov
and
mov
ret
push
lods
cmc
inc
popa
imull
cmp
mov
mov
mov
cmpsb
cmc
hlt
int
xchg
adc
dec
inc
jns
out
addr16
setb
push
mov
ret
repnz
adc
loope
push
mov
fxch
push
jmp
stos
repnz
lods
sahf
and
outsb
push
add
cmpl
pop
pushf
sbb
inc
arpl
mov
frstor
jbe
daa
sub
nop
inc
xchg
push
rcll
gs
cmpsl
loop
aaa
and
and
loop
mov
clc
or
sarl
sub
inc
sbb
jmp
icebp
imul
sub
jge
xlat
inc
pushf
mov
pop
cmp
sbb
inc
or
scas
or
fadd
xor
in
imul
loope
fimull
jp
test
or
mov
call
lcall
pop
jl
les
cmp
stos
add
push
inc
bound
dec
mov
push
popa
addl
mov
loope
mov
push
xor
call
fs
or
jnp
mov
xchg
push
adc
pusha
sub
jle
repz
repnz
loop
sub
fistpll
and
cwtl
ljmp
mov
add
pop
mov
dec
lock
mov
in
dec
ret
das
insl
jne
das
adc
sarl
adc
int
sub
lcall
clc
xchg
test
pop
sub
hlt
call
xor
or
inc
arpl
add
mov
mov
or
out
sbb
push
popa
lock
add
mov
mov
cmp
out
popf
push
in
cmpsl
sbb
sub
push
inc
or
mov
inc
mov
cmpsl
inc
jns
xchg
test
mov
shl
adc
xor
push
sub
imul
rcll
ret
cmp
and
leave
jbe
push
jns
mov
sbb
jnp
mov
xchg
mov
jmp
and
scas
lds
addr16
add
pop
gs
imul
cmp
repz
inc
out
ds
in
fisubrs
sub
inc
stos
mov
cmp
jae
filds
in
ja
bound
inc
push
xchg
scas
repz
in
xor
xchg
and
adc
mov
sti
mov
in
repz
loope
cwtl
and
ss
iret
int3
enter
cmpsl
add
decl
push
bound
mov
cwtl
mov
cmp
pop
cltd
mov
jo
f2xm1
jg
out
push
push
pop
insl
pop
and
xchg
scas
sub
in
mov
and
mov
mov
mov
jb
xor
xchg
mov
es
ja
ficompl
add
rcr
loopne
inc
les
cmp
and
ljmp
jbe
call
inc
pop
aaa
mov
lcall
jmp
and
and
ret
mov
out
test
shlb
hlt
mov
les
cmp
xor
adc
cmp
push
mov
add
test
fisttpl
lret
ret
cmp
ret
push
push
mov
ds
cmp
lods
scas
mov
shrl
jns
js
mov
fstp
sub
ficoml
mov
sbbl
xchg
fcmovnb
jecxz
jl
notl
scas
jmp
jns
dec
fsubs
jle
sub
sbb
cmp
lret
and
or
repz
ss
jae
push
mov
mov
dec
testl
cld
xor
xchg
sbb
jb
out
pop
daa
push
add
ss
xchg
es
cmc
in
mov
cmpsl
das
sub
aad
sub
dec
or
mov
push
lods
cmp
inc
repnz
sbb
push
mov
stos
push
aad
ljmp
pop
add
rorb
or
mov
scas
mov
mov
movsl
lds
pop
sub
cmpsb
scas
inc
inc
shrb
je
out
addl
nop
xchg
inc
adc
jno
mov
mov
mov
int
pause
loope
sub
cmp
loope
fimull
fadds
sbb
xchg
stc
lahf
scas
iret
popa
es
cmc
cmpsl
adc
adc
pushf
pop
notb
orb
jo
and
jbe
mov
xor
fwait
cmp
into
mov
pop
movsl
push
jge
mov
lds
add
addr16
hlt
movsb
loop
aad
aad
add
ret
ret
cmp
push
push
xor
mov
push
rcll
shll
les
int3
ljmp
cmp
or
repz
jno
out
jg
sbb
sar
cmp
gs
sbb
sub
sahf
and
jo
jle
ljmp
add
lods
rcrb
enter
xchg
mov
imul
inc
mov
out
or
out
mov
jne
aas
mov
call
clc
inc
dec
cltd
or
in
push
dec
push
fisttpl
pop
jl
or
ficomps
mov
sbb
shrl
inc
add
dec
in
pop
fcos
jns
inc
xchg
int
lock
call
shlb
jnp
jae
push
lods
imul
outsb
sub
jge
inc
enter
jae
cltd
mov
mov
test
nop
xchg
and
lods
test
insl
pop
test
mov
inc
xchg
xchg
jnp
ja
xchg
pop
mov
or
xor
inc
inc
out
and
sub
xor
jnp
or
int3
inc
sub
xor
in
clc
cltd
scas
xor
adc
imul
aas
pop
sbb
testb
xor
or
add
jmp
or
mov
sbb
push
lds
mov
sbb
xchg
outsb
outsb
sub
test
sub
scas
mov
test
jp
lcall
in
shlb
push
xor
cmp
out
fisubrl
sbb
bound
cli
mov
jb
mov
mov
sub
add
dec
in
out
fwait
test
mov
jae
push
fistpll
ret
cs
test
push
fldl
pop
adc
insl
push
xor
les
test
dec
hlt
pushf
mov
pop
in
sub
mov
mov
shlb
mul
lret
add
dec
test
mov
into
mov
mov
shrl
cmp
jne
mov
je
filds
pop
push
test
ja
cmc
dec
xor
jbe
mov
decl
and
shrl
mov
test
dec
fwait
aaa
stos
xchg
jg
lock
clc
faddl
sbb
jg
xlat
dec
insb
adc
aaa
aad
clc
sbb
mov
in
out
mov
mov
cwtl
xchg
push
sub
movsl
subl
fsubl
or
lahf
and
aaa
ret
test
icebp
js
cwtl
mov
in
pop
push
ret
std
les
es
xchg
push
dec
pop
fcomps
dec
mov
pop
push
mov
test
and
fst
lret
sti
out
mov
js
sub
aaa
jno
je
outsb
or
or
mov
push
pop
jmp
fwait
push
fsub
jg
sub
mov
mov
fstpt
fiadds
imul
fbstp
out
mov
aad
notb
les
or
ja,pn
lret
inc
cld
adc
sbb
cmpsl
repz
dec
pop
xchg
xor
pop
pop
cs
pushf
lea
in
rorb
mov
and
lods
hlt
lea
jb
and
fwait
je
in
sub
scas
cmp
add
aaa
stos
shll
pop
add
lret
mov
jmp
or
jp
cltd
push
push
inc
fisttpl
cld
mov
das
or
mov
push
fsub
cld
in
lods
xchg
sbb
cmpsb
lds
in
push
xchg
dec
jnp
std
lea
repz
and
fcoms
jg
popa
inc
ret
pop
xor
pop
js
mov
sub
test
in
cmp
push
mov
ficoml
push
rcrb
mov
les
mov
dec
adc
and
shl
stc
ja
mov
jbe
insl
xor
mov
jmp
mov
test
jo
outsl
push
std
mul
xor
cld
add
mov
pop
mov
mov
aas
inc
call
or
mov
ljmp
iret
mov
ret
into
loop
jge
out
outsb
adc
and
daa
mov
inc
mov
sbb
lcall
scas
or
adc
inc
cmp
nop
mov
mov
or
insb
mov
imul
mov
je
or
push
loop
xor
or
pusha
dec
mov
cmpsl
imulb
fst
xchg
xor
push
insl
add
test
repz
lcall
adc
shll
xor
lret
mov
mov
dec
pop
jl
push
int3
cltd
pop
clc
cmpsl
jnp
sti
stos
sub
push
cmpsl
pop
bound
and
jmp
dec
or
mov
jno
dec
jbe
xor
adc
in
and
add
sub
outsl
lahf
mov
cmp
sub
mov
jns
aad
xlat
movsb
daa
adc
sub
loop
cmpsl
inc
rol
jae
in
and
scas
test
les
push
pop
pop
pop
mov
call
xchg
sbb
cmp
sarb
fbstp
sub
jge
loope
sbb
fisubl
insl
adc
sbb
adc
or
fs
ror
pop
aas
div
imul
aas
andb
popf
push
lahf
push
pushf
cs
mov
mov
lcall
mov
push
adc
jnp
bound
pop
ret
rorl
shl
outsl
jb
data16
or
sbb
and
out
stos
rolb
sbb
bound
inc
push
and
lock
jmp
fisubrs
push
jo
andb
jne
and
in
jbe
pop
jecxz
xor
out
mov
dec
mov
mov
ljmp
enter
int3
mov
pop
add
arpl
insl
cmp
cmp
mov
insl
sbb
fwait
pop
push
int3
push
adc
test
shrl
mov
stc
xchg
xor
xchg
or
aam
or
adc
mov
pop
sub
or
data16
sarl
std
test
sub
xor
jmp
fidivrl
dec
mulb
xchg
gs
insl
push
movsb
stos
pop
fcomip
jmp
push
movsb
addr16
add
add
gs
xchg
or
and
shrl
jmp
cmp
cs
mov
clc
jmp
in
dec
pop
movsl
push
jecxz
test
lret
mov
mov
rcll
lods
cmp
aad
inc
dec
nop
add
int
test
in
xor
scas
sbb
inc
nop
inc
push
mov
leave
push
pmuludq
inc
push
mov
adc
stc
mov
outsl
mov
enter
mov
cmp
or
call
lods
jle
inc
mov
leave
in
add
fdivrl
daa
fneni(8087
es
or
ret
iret
jb
dec
les
test
dec
dec
pop
ja
out
pextrw
inc
jo
mov
mov
adc
enter
bound
add
mov
mov
shlb
bound
rclb
push
ds
push
stc
jmp
adc
xor
push
stos
pop
pusha
jle
sbb
push
pop
bound
cmc
pop
shll
sbb
cmpsb
mov
add
sbb
xor
inc
iret
mov
xor
test
adc
jp
sar
cmp
cmp
jmp
mov
sbb
popf
adc
dec
out
cmp
ja
lds
cwtl
cwtl
sub
test
es
pop
mov
pop
shlb
orb
fstps
js
cld
fmul
rcrb
out
or
movsl
mov
sbb
not
aas
loopne
arpl
stc
inc
push
xchg
dec
es
lahf
jb
mov
cmpsb
pop
and
je
divl
sub
ss
subb
mov
lods
fisttpll
sbb
imul
pop
push
jmp
cld
hlt
sbb
loopne
mov
cmp
mov
sub
inc
loopne
pop
lock
scas
sub
movl
xchg
jne
adc
scas
stos
scas
movsb
test
inc
popa
imull
lea
mov
push
repnz
sbb
xchg
add
push
std
andb
sub
test
jo
sub
mov
mov
imul
xlat
xchg
nop
sbb
push
xlat
test
adc
rolb
repnz
mov
icebp
in
data16
movsb
ret
jnp
iret
loopne
mov
aaa
out
pushf
inc
or
ret
or
sarl
pop
mov
sbb
lcall
or
jo
aaa
pop
adc
aad
adc
push
jl
inc
lret
jnp
sub
jg
add
dec
pop
jmp
lea
push
iret
movb
fwait
test
inc
sbb
lret
mov
pop
add
stos
outsl
or
lea
gs
clc
iret
popf
je
jnp
mov
add
mov
push
in
jbe
cmp
dec
enter
gs
jnp
dec
mov
adcb
push
jl
jmp
lret
pop
out
mov
dec
xchg
cli
pop
or
dec
outsl
push
clc
inc
mov
and
jmp
repz
in
push
lds
mov
xchg
sbb
xor
repz
inc
push
jle
sar
call
inc
cld
sbb
sub
enter
out
movsl
xor
sti
push
mov
mov
pop
cmp
mov
scas
or
pop
popf
or
sub
test
cli
outsb
mov
mov
lods
mov
in
ret
pusha
pop
adc
pop
jle
jno
inc
sub
cmc
adc
mov
xchg
xchg
aad
mov
jb
fildl
test
iret
cmpsb
imull
leave
adc
xchg
hlt
rorb
fidivrl
sub
inc
sub
or
jmp
dec
rclb
je
popf
inc
daa
movb
mov
mov
test
in
mov
aas
addr16
dec
add
cmp
outsl
mov
das
test
adc
ds
loopne
out
data16
into
push
push
jns
jg
adc
rcll
stos
scas
in
fs
pusha
cmc
sub
xchg
imul
inc
or
das
push
xchg
ja
adc
repz
test
cmp
gs
push
pop
lods
call
inc
icebp
mov
xchg
inc
leave
dec
notb
lahf
lock
jbe
cmp
hlt
fnstenv
inc
mov
shlb
push
test
push
sahf
dec
lock
sub
lea
jns
aam
ljmp
mov
sbb
hlt
pop
and
cmp
xchg
lock
and
inc
vpshufhw
inc
cmp
test
hlt
roll
push
repnz
sub
mov
movsl
xchg
mov
aad
ds
jns
movsl
mov
mov
pop
cmpsl
or
sbb
xchg
ds
xchg
or
outsl
roll
scas
xor
sbbl
subl
test
mov
dec
jnp
cmp
addl
lock
je
repnz
xchg
and
lahf
or
mov
inc
loop
cmp
cmp
fs
inc
mov
pop
xlat
inc
fisttpl
dec
adc
in
and
lods
sub
js
movsl
pop
addr16
cmp
outsl
mov
stos
pop
in
loop
adcl
jnp
cmp
xchg
mov
sub
bound
das
xor
setne
xor
xor
mov
push
push
jl
mov
and
sahf
sbb
stos
sub
test
fwait
mov
cmpsb
push
or
xor
add
xchg
xor
push
loopne
shll
adc
xor
xchg
leave
cmpsl
stc
dec
sbb
movl
jg
int3
stos
sbb
jne
adc
scas
dec
lea
jno
sbb
push
mov
pop
lock
cmp
idivb
xchg
mov
into
or
sbb
sbb
int3
leave
inc
icebp
loop
xor
es
gs
insl
push
std
loope
add
insb
pop
subl
inc
je
popa
mov
pop
dec
inc
repnz
pop
xor
lea
cmpsb
in
xchg
lea
mov
pop
pop
pop
cmpsl
daa
cmp
pop
fwait
shlb
push
aas
out
mov
xor
fstpl
xor
dec
jecxz
cs
stos
sbb
subl
add
and
pop
pop
xchg
add
cwtl
bsr
test
out
movsl
jo
test
and
add
repz
jecxz
push
iret
xchg
xchg
rolb
jl
adc
and
mov
lcall
adc
dec
push
fstps
lock
movsl
xchg
faddl
stos
cmp
add
xchg
dec
pop
pop
xchg
icebp
mov
or
cmp
xchg
sbb
mov
and
cmp
pop
adc
push
out
add
lret
push
or
insb
js
mov
cmp
and
mov
les
pop
ljmp
sti
bound
pop
mov
out
inc
mov
iret
std
je
cwtl
pusha
std
dec
push
test
lahf
mov
jmp
test
jg
or
jl
and
cmp
ds
hlt
insl
push
xchg
adc
out
xchg
or
scas
mov
icebp
stos
test
or
and
fisttpl
sbb
outsl
jg
mov
pop
jl
bound
out
jmp
movsb
ficompl
pop
pop
push
ret
mov
push
sahf
sub
leave
adc
loopne
inc
or
or
xchg
jmp
movsb
lea
fsubl
inc
xor
mov
insb
push
pop
and
flds
lds
call
sbb
icebp
add
lret
mov
scas
in
mov
gs
add
fidivs
mov
loopne
adc
rclb
pop
out
dec
push
jns
mov
ror
lods
inc
stos
add
jle
fidivs
mov
ss
push
iret
cmpsb
dec
adc
loope
outsl
dec
mov
mov
test
pop
mov
jne
test
cmpsb
dec
and
mov
pop
repz
inc
cli
notb
testb
cmp
push
jbe
pop
cltd
mov
imul
cmpsl
or
add
jne
mov
cmpsb
repnz
scas
shrl
push
mov
mov
mov
jae
dec
pusha
lods
lahf
fsubl
enter
roll
mov
inc
sbb
xchg
cmp
pusha
mov
cmp
mov
fmul
repnz
push
sub
loop
cld
das
das
add
jecxz
cmpsb
pop
push
jb
pop
les
add
adc
in
daa
mov
std
xchg
inc
jns
sbb
push
mov
outsb
test
rcrl
popa
test
cmp
cmp
stos
stc
rorl
ret
xor
sub
push
nop
movsl
push
push
ds
lcall
jnp
dec
nop
pushf
and
cvtdq2ps
in
adc
shll
fcomi
pop
fwait
pushf
jno
add
fisttpl
push
jmp
cmc
mov
or
inc
imul
mov
addl
sbb
jnp
mov
arpl
bsf
jno
and
xor
cwtl
aad
pusha
xor
test
or
out
sbb
std
movl
or
lods
addr16
cmp
mov
sbb
push
xchg
cmp
scas
adc
es
jge
fucomi
push
pop
mov
clc
pop
jo
cmpsb
aad
out
mov
ret
mov
add
cwtl
mov
jmp
mov
insb
jb
cmp
lods
xor
inc
lret
pop
sub
clc
fwait
lock
ljmp
ds
dec
addr16
mov
xor
xchg
dec
lret
scas
sub
pop
lahf
adc
movsl
mov
xchg
and
call
ret
lock
rorl
sub
arpl
js
push
cmp
scas
in
lcall
cmp
mov
bts
cs
es
aas
pop
cmpsb
pop
in
cmp
sarb
je
add
stc
mov
loop
shlb
cmp
pop
add
sub
xchg
out
push
adc
clc
xor
inc
cmp
xor
sub
outsl
ret
mov
pop
cmpsl
mov
outsb
push
ret
push
mov
daa
mov
icebp
push
inc
xchg
jbe
mov
fisttps
and
cmpsb
pop
test
es
cmc
add
in
call
add
mov
sbb
insl
and
push
cmpsl
das
add
jl
xchg
sar
in
insb
ss
jecxz
cmpsb
mov
sub
mov
pop
call
push
mov
out
cmc
into
cmp
lcall
push
push
adc
test
mov
gs
lods
cmp
and
push
sar
cmpsl
and
jo
inc
imul
and
ja
outsl
mov
cld
pop
cmp
dec
icebp
das
and
add
mov
xor
testb
jbe
inc
lock
stc
dec
cwtl
mov
jbe
lahf
xchg
inc
clc
inc
pop
push
jo
push
leave
sub
dec
lcall
adc
call
mov
push
aaa
inc
or
icebp
push
cwtl
test
and
dec
dec
lock
push
mov
mov
mov
adc
add
repnz
inc
lret
inc
popa
mov
cmp
sub
fsts
and
sarb
into
adc
pop
out
cmpsl
sbb
sbb
push
mov
daa
mov
fwait
xor
adc
shlb
jae
sbb
dec
shll
push
enter
orb
adc
mov
mov
add
xor
lods
sahf
pop
jg
add
inc
cmpl
mov
sbb
cld
push
mov
push
fisubrs
adc
adc
mov
insb
out
rol
int3
ds
in
inc
arpl
or
lods
inc
std
mov
push
icebp
or
jns
dec
add
imul
dec
mov
pop
psrlw
aad
xchg
adc
popa
clc
jb
ja
orb
loop
dec
fwait
sub
xor
mov
adc
sub
pusha
or
fmul
inc
call
or
add
adcl
add
xlat
xor
fsubrs
cmpsb
addr16
fwait
xor
test
imul
lcall
stos
add
lea
insb
inc
sub
mov
xor
inc
push
cmp
jns
add
movsl
push
and
dec
sbb
dec
pushf
mov
mov
mov
sbb
ss
stc
pop
inc
push
sbb
add
xchg
mov
lahf
add
fwait
mov
adc
xchg
add
mov
xchg
div
cli
jb
int
ret
cwtl
insl
cld
data16
and
pop
les
add
add
mov
mov
ljmp
pop
mov
lock
dec
cmp
stos
inc
imul
add
loop
sti
adc
mov
pop
jns
nop
pop
jnp
mov
lahf
jns
mov
addr16
pop
adc
fnsave
es
cmpsl
adc
iret
jbe
and
in
cs
into
incl
push
cwtl
loopne
sahf
and
test
pop
shrl
cld
clc
add
mov
mov
or
sahf
out
jp
jae
adc
cmp
adc
aas
dec
mov
clc
dec
adc
add
stos
pop
pushf
scas
outsb
into
or
push
lds
addr16
repz
add
outsl
dec
inc
mov
cmp
mov
mov
pop
adc
lahf
test
add
or
mov
mov
dec
sub
cmp
jno
jne
rcl
add
xchg
sbb
xor
cmp
dec
push
pushw
adc
aad
movl
enter
xlat
cmp
subl
push
and
scas
add
or
dec
divb
iret
popa
sub
mov
xchg
xchg
or
and
fs
sbb
xchg
enter
add
jecxz
je
or
jo
cli
fsubr
clc
cmpsl
pop
orl
push
incb
out
cmpsl
add
fwait
and
xchg
lods
sub
lea
or
ja
hlt
sub
add
popa
adc
cmc
pop
fiaddl
pop
iret
xor
or
push
fwait
and
stos
push
pop
jge
and
out
sub
les
cmp
rolb
rep
xor
mov
shrb
negl
aas
cwtl
sub
inc
inc
in
int3
and
fsub
cwtl
mov
mov
dec
jae
divl
add
jecxz
call
lods
xchg
fcoms
mov
xchg
popf
push
or
pop
sbb
cmp
addr16
sbb
lods
mov
imul
lcall
cmp
out
or
sbb
pop
fdivrp
in
dec
pop
int3
repz
lock
fwait
sti
je
adc
popf
sbb
mov
rorb
cmp
enter
shl
cmpsb
out
sub
in
mov
xchg
je
test
mov
mov
inc
ss
and
adc
jno
cmpsl
sbb
insl
and
mov
dec
ficomps
cmpsl
mov
jg
xor
int
jge
fstps
dec
into
or
out
scas
lret
mov
inc
lods
xchg
and
pusha
cld
xlat
inc
xor
sahf
imul
mov
dec
gs
pusha
xor
fcomi
inc
negb
mov
sbb
pushf
mov
inc
pop
cmp
dec
clc
cmpsl
call
ja
add
jmp
push
mov
cmp
push
mov
imul
clc
sti
sahf
stos
and
mov
cltd
outsb
jbe
gs
test
in
icebp
jg
push
and
cld
adc
mov
push
sbb
adcb
mov
aaa
xchg
ja
push
pop
mov
lahf
loop
cmpsl
ljmp
pop
sahf
aad
cltd
mov
loopne
jp
and
fistps
mov
xchg
popa
movsb
fmuls
mov
cltd
dec
stos
aam
sahf
adc
movsl
fcomps
mov
stos
sub
mov
xchg
xchg
and
ja
ret
jl
xor
cmp
push
pop
jnp
cmp
icebp
call
ret
adc
insb
lock
adc
movsb
lret
popa
push
jmp
pop
repz
pop
push
cmp
dec
out
jecxz
pusha
and
jne
cmp
xor
in
insb
lock
mov
sbb
fstps
sbb
jmp
sbb
xchg
ljmp
dec
sub
pusha
loope
into
xchg
repz
repz
fimull
or
xor
mov
push
push
pushf
push
pop
mov
and
addr16
sbb
xchg
add
scas
mov
mov
hlt
jbe
inc
sbb
or
mov
cmpsl
shl
xor
sbb
inc
jl
cmp
push
scas
and
xchg
push
shr
xchg
out
fs
iret
jmp
jmp
mov
or
movb
cmp
jbe
lret
sbb
inc
fdivr
jne
aad
xchg
arpl
cli
jmp
and
lahf
pop
lret
jg
call
jge
add
mov
dec
cmp
pop
nop
sarl
push
and
sbb
push
pusha
add
push
pop
inc
mov
loop
dec
in
into
mov
jmp
and
inc
je
jbe
mov
xor
add
push
shlb
xchg
leave
xor
imul
rcrl
pop
sbb
ja
pushf
cli
pushf
shll
ja
outsb
mov
jp
popa
fnsave
aad
aas
mov
test
mov
cmpsl
out
mov
jl
sti
pop
xchg
mov
adc
std
popa
roll
loop
data16
inc
shll
push
lret
cmp
fistps
rorb
or
xlat
out
cs
test
arpl
mov
sbb
mov
mov
mov
xor
je
pop
mov
sbb
repnz
jno
xchg
add
sbb
fistl
outsb
jo
lds
sub
push
hlt
lods
inc
push
lods
movsb
gs
leave
scas
adc
test
fwait
scas
and
imul
lds
xchg
jne
adc
sub
sbbl
cs
pop
lahf
xchg
push
ret
stc
outsb
add
scas
repnz
jo
cmp
cmpsb
or
or
mov
push
das
xor
sub
mov
div
dec
cld
arpl
or
sarl
cmp
xchg
mov
jns
scas
cmpsl
mov
xor
sbb
sub
cmp
cmp
jbe
push
fsubs
jge
jp
cmp
cmp
or
je
xor
ja
pop
dec
inc
in
ret
shrb
push
sarl
bound
movb
bound
xchg
ficompl
push
nop
xchg
mov
pop
sbb
test
inc
xchg
leave
push
mov
movsb
fistpll
nop
push
je
int
out
dec
cltd
pop
testb
and
lea
inc
inc
push
jmp
dec
mov
mov
or
cs
shr
pop
pop
into
push
neg
test
fwait
ljmp
cmp
jbe
pop
rcll
ja
sahf
sub
fadds
xor
mov
push
inc
xchg
outsb
int
imul
jge
mov
sbb
fs
notb
pop
in
cmp
stos
addb
test
lods
xchg
push
and
scas
cmc
mov
js
push
dec
fwait
pop
in
repnz
cmp
iret
lret
fnstcw
mov
cwtl
shll
mov
inc
xchg
sbb
inc
shll
sti
add
or
cmpsl
arpl
sub
xchg
xchg
and
jnp
mov
testb
clc
push
sarb
inc
hlt
pop
add
test
lret
icebp
rolb
and
mov
xchg
aas
loop
and
sbb
scas
cld
icebp
fiaddl
sbb
dec
in
incl
mov
xchg
pop
pop
sub
insb
inc
xchg
gs
xor
arpl
add
dec
sbb
dec
sbb
dec
lods
imul
inc
pop
pusha
clc
push
in
lret
sub
into
repz
pop
pop
rcll
es
sbb
xchg
aad
outsl
das
aaa
lahf
cmp
movsb
add
cli
xchg
icebp
ret
aam
fsub
xor
fdivrs
nop
clc
and
les
jl
pushf
or
push
jmp
mov
sub
xor
test
push
dec
cltd
adc
pop
inc
add
jmp
mov
cmp
cmc
pop
xor
mov
icebp
jne
lcall
call
push
fldenv
push
mov
sbb
dec
fistl
lret
xchg
addl
addr16
push
adc
push
lock
mov
push
push
cmpsl
outsl
ljmp
jo
cmpsb
mov
lods
cmp
pop
in
call
lock
cs
cs
pop
jle
scas
mov
fistl
dec
cs
cwtl
fsqrt
pop
ds
sbb
xor
push
repz
int
adc
gs
outsl
mov
fsubp
xchg
lret
sub
mov
loop
popa
stos
add
xchg
out
lds
dec
sub
shrb
popf
jae
xchg
pop
aam
fsts
and
enter
in
stos
scas
mov
sub
into
dec
test
xchg
xchg
test
repnz
fadds
push
sbb
jg
jp
cmp
scas
xchg
imul
push
cs
dec
rolw
andl
shll
jl
outsl
das
inc
mov
push
jne
dec
mov
mov
mov
ja
or
xor
rorb
sub
push
loop
mov
inc
cli
adc
pop
inc
mov
outsl
subb
stc
inc
sbb
mov
std
jecxz
or
inc
test
stc
push
mov
mov
add
push
xchg
mov
das
push
cmp
rcrl
icebp
cmp
fbstp
mov
pop
sub
or
sub
mov
xchg
sarb
mov
or
jle
dec
mov
repz
pop
sahf
dec
mov
inc
or
addr16
outsb
inc
add
push
add
adc
repz
inc
in
inc
xor
inc
inc
imul
sub
mov
xorps
adcb
rcl
inc
mov
stos
repz
and
fcmovnu
xor
loopne
pop
test
dec
xchg
mov
mov
xor
mov
inc
sbb
repz
and
mov
testl
sbb
xchg
stos
mov
sub
add
ret
repz
adc
popf
cmp
jnp
out
ljmp
mov
pusha
mov
jp
jmp
ss
pop
popf
mov
add
test
lahf
jmp
ud1
push
loopne
stos
aam
sbb
jnp
fmuls
ss
dec
and
popf
loope
xchg
addr16
xor
mov
aas
popf
popa
add
and
push
mov
in
sub
jg
iret
jne
es
ror
pop
out
and
je
movsl
loope
fwait
imul
insl
fdivrl
add
filds
xchg
jne
test
adc
pop
jno
inc
fsubs
in
hlt
lock
mov
mov
mov
mov
shr
cs
dec
sbb
dec
arpl
ljmp
xchg
dec
es
int
cwtl
aad
jge
out
xchg
rcll
insb
outsl
pop
or
cmp
out
pop
stos
bound
and
orb
addr16
push
jno
imul
sub
fistpl
pop
mov
xor
andb
js
bound
imull
sbb
xor
push
lods
movsl
inc
fsubr
adc
xchg
cmp
mov
sbb
sub
lcall
ficomps
or
lods
dec
mov
mov
lods
xor
fwait
xlat
mov
xor
mov
testb
outsl
adc
xchg
xor
lods
ret
adc
dec
cmp
cmp
add
test
int
lods
and
cmp
dec
leave
mov
sarl
sbb
push
out
push
test
out
jb
add
push
test
out
call
bound
dec
and
xchg
inc
jp
in
push
aaa
cmp
sti
xor
out
xlat
xor
in
cmp
pop
aad
inc
mov
jno
add
push
jb
clc
xchg
lods
dec
pushw
cmpsl
dec
sarb
pop
xlat
mov
pop
or
leave
inc
and
sti
add
test
push
in
jno
hlt
ds
test
mov
addr16
int3
jo
int
push
xchg
aam
arpl
sbb
cs
dec
outsb
mov
in
cli
in
outsb
mov
ror
pusha
xor
push
es
loop
dec
and
out
cmp
push
inc
xorb
push
mov
in
add
jmp
scas
out
leave
jo
pusha
arpl
adc
jmp
jbe
mov
ja
dec
mov
enter
mov
or
add
int3
xchg
and
fistpll
in
lret
inc
les
out
mov
mov
scas
or
pop
pop
push
push
dec
loopne
or
insl
sbb
add
sti
jl
mov
sarb
std
je
lret
sub
sti
scas
mov
inc
imul
sbb
insl
push
mov
outsl
scas
mov
push
pslld
mov
jmp
push
add
push
mov
rclb
jmp
test
mov
dec
xor
sub
ss
add
cmpsl
mov
fistps
mov
mov
xchg
jo
sub
cmc
ds
cwtl
push
fmull
rolb
sbb
mov
xchg
push
dec
out
shrl
jg
insb
loopne
leave
insb
lret
daa
adc
rcll
test
and
leave
mov
ret
pop
or
or
mov
mov
ja
sub
and
outsb
sub
xchg
outsb
sarl
sub
sub
sub
pop
popa
out
pushf
movsb
sbb
notb
adc
es
sbb
ret
mov
push
scas
cwtl
push
and
fcmovu
push
mov
or
pop
scas
xchg
mov
enter
mov
iret
pop
lahf
mov
inc
scas
into
adc
outsl
lock
bound
adcb
jno
pop
mov
cmpsb
lret
add
out
and
loop
iret
sahf
outsb
sbb
fcoms
repz
lret
andb
orb
pop
jae
xor
pop
lahf
xor
and
leave
lahf
xlat
dec
aaa
into
icebp
inc
add
adc
lea
int3
mul
dec
dec
into
add
mov
loop
cmp
xor
and
test
insl
in
cs
sub
lds
dec
icebp
mov
fstpt
inc
icebp
mov
cmp
ja
outsl
jbe
ret
push
out
xor
and
popf
mov
sub
xor
xchg
add
jne
lods
push
xorl
inc
lods
shl
sbb
xor
jg
sub
or
popf
in
push
lahf
out
mov
push
in
aaa
aaa
mov
push
ret
ja
mov
xor
loope
xchg
and
jmp
loopne
xchg
mov
and
cltd
jmp
stos
cmpsl
loope
cmpsl
hlt
adc
fucomip
test
loope
mov
imul
aaa
icebp
mov
xor
mov
adc
push
pop
cmp
into
add
mov
jo
int3
push
jecxz
addr16
movsb
xchg
mov
xor
pop
adc
popa
fs
test
adc
push
jle
mov
lret
cli
inc
xor
mov
lock
xchg
add
popa
sbb
xlat
pop
mov
add
jl
pop
mov
imulb
pop
fadds
jae
aas
stos
pop
loop
mov
lock
rclb
dec
lret
xchg
ret
jns
ficoml
push
mov
int
mov
pop
fdivrl
cmp
cmp
pop
imul
jns
int3
das
test
xor
ret
insb
fisttpl
xor
pop
sub
js
loopne
mull
nop
push
mov
jge
and
stos
movsl
pop
in
lods
xchg
pop
fiaddl
fsubs
call
mov
and
dec
inc
les
pop
and
loop
add
movsl
ss
lds
add
and
and
pusha
cmp
xchg
xchg
aaa
cmp
ja
inc
cmp
mov
iret
mov
into
jmp
test
push
jmp
movsl
loopne
add
in
imulb
stos
bound
lea
inc
cmpsb
mov
movsl
push
sub
mov
adc
mov
mov
jb
pop
out
lock
sar
jp
pop
icebp
or
xchg
sub
mov
in
mov
pop
xor
paddd
fwait
insb
outsb
movsl
rorl
xchg
xchg
fistps
fwait
pop
add
push
fidivs
and
into
sarl
mov
add
ret
stc
fnstsw
mov
enter
fisttpll
mov
outsb
push
add
cli
jae
pop
pop
and
xchg
and
lea
add
outsl
mov
jp
rorb
pop
cmpsb
int3
movsl
faddl
sbb
outsl
xor
test
adc
mov
fstpl
dec
out
mov
pop
aam
xchg
ljmp
adc
xchg
or
cmp
cmpsb
jp
mov
scas
sbb
ds
ret
pushf
and
inc
mov
loopne
mov
ss
mov
pop
bound
mov
pop
pop
inc
enter
push
mov
out
jle
push
cmp
mov
cltd
je
fwait
mov
pop
std
outsb
mov
add
rcll
or
movsl
insb
jle
jns
loopne
pop
fs
jl
xchg
sub
pop
fstpt
cmpsl
stos
mov
dec
xor
mov
insb
xlat
jp
test
popa
jne
mov
mov
add
data16
repnz
and
push
insl
xchg
fadds
into
andl
loopne
mov
jb
adc
into
pop
sahf
hlt
loop
imul
into
pop
mov
jmp
pop
cmp
dec
xchg
into
dec
je
loopne
fnstenv
xor
cmp
ja
push
in
loopnew
jne
adc
add
push
lods
mov
and
lods
xor
cld
cmpl
fldt
inc
das
repz
ds
stc
jmp
cmp
dec
cmpl
and
adc
iret
loop
xor
add
and
lea
add
xchg
lcall
sbb
imul
outsl
shl
lahf
dec
aam
loop
sbb
gs
mov
lahf
call
mov
or
cmp
dec
and
mov
push
in
call
popl
sarb
fnstsw
push
divl
aaa
popf
add
and
mov
fadd
cs
stc
imul
add
add
or
lock
xor
imul
inc
in
fidivrs
mov
das
gs
add
les
mov
push
fstpt
loop
int
stos
or
fnstcw
movsl
cmc
inc
aaa
pop
xchg
ljmp
rcl
repz
mov
ret
cltd
hlt
lea
es
sbb
xlat
add
ficomps
jmp
inc
mov
jg
push
cmp
xchg
imul
xlat
lods
shlb
icebp
push
dec
pop
orb
push
arpl
notl
fs
inc
sub
lds
mov
orl
pusha
push
mov
outsl
xlat
inc
dec
or
flds
sub
lret
mov
xchg
out
pop
insl
mov
and
xchg
stc
data16
push
les
pop
sti
into
mov
cmp
and
adc
clc
in
inc
cmpsb
outsl
in
out
mov
stos
cmpl
pop
pop
xor
pop
pop
dec
mov
add
push
test
out
add
push
push
ljmp
js
sub
jns
das
rcrl
mov
dec
lret
dec
icebp
add
fsts
jmp
xchg
jb
cmpsb
pop
movsl
inc
mov
outsl
jmp
pop
add
mov
pop
imull
add
xchg
sahf
add
mov
mov
icebp
add
sbb
xchg
xor
dec
test
adc
cmp
jno,pt
xor
sahf
mov
cltd
sbb
inc
dec
aam
jg
out
js
movsb
xchg
frstor
add
pop
inc
xchg
addr16
cmp
xchg
push
mov
inc
dec
sub
stos
add
cmc
mov
clc
sbb
ss
adc
insb
mulb
or
pop
or
dec
cs
imul
stos
mov
std
repnz
jl
cmp
popa
stos
xor
insl
add
lret
imul
cmc
pop
dec
cltd
dec
movsb
sbb
dec
cld
scas
push
in
cld
ret
inc
cmp
bound
idivb
fisttpl
fildl
test
icebp
sti
mov
jge
fwait
sbb
test
mov
sub
enter
push
mov
and
fsubrp
lret
out
pop
cmp
lret
shrl
mov
insl
in
sahf
ja
xor
arpl
mov
mov
clc
pop
addr16
push
mov
leavew
xor
inc
pushf
test
push
cmc
in
movl
mov
in
sub
stos
pushf
subb
adc
inc
xlat
add
mov
sub
div
push
cmp
popf
scas
mov
xor
int
cli
pop
notl
popf
in
jbe
insb
xchg
cwtl
xchg
adc
ljmp
sbb
shl
push
fdivrl
icebp
stos
dec
das
jae
loop
jg
out
jno
xchg
xchg
mov
pop
add
aas
pop
out
shrl
mov
call
sub
jb
cltd
sub
jle
cmpsl
add
faddl
and
jns
sbb
xorl
push
jl
push
cltd
cmp
js
mov
push
mov
mov
dec
push
stos
outsb
or
or
stos
jl
sbb
cmp
outsb
mov
aam
inc
mov
ficomps
scas
imul
cmpsb
cmp
dec
ljmp
in
xor
dec
mov
mov
lahf
cmc
leave
pop
cmp
push
sub
cmp
sbb
push
cmpsl
mov
aam
add
repz
pop
mov
leave
pop
loop
mov
gs
in
dec
int3
or
ljmp
scas
lods
shll
rclb
insl
insb
jle
pop
pop
pop
pop
fistl
pop
sarl
lahf
add
gs
lret
inc
test
into
setle
in
test
addl
cmp
xor
adc
scas
pop
jl
adc
inc
adc
pop
inc
sbb
inc
loop
repnz
adc
xor
cmp
dec
addr16
out
adc
sub
jns
inc
xchg
mov
loop
hlt
leave
movsb
lret
jnp
dec
push
movsl
push
mov
inc
lret
movsb
dec
fisubrl
scas
imul
xchg
xchg
pop
fdiv
inc
cmc
shr
insb
xchg
sti
and
dec
jno
cld
and
das
dec
xchg
inc
add
lret
xlat
pop
push
pop
mov
push
push
divb
mov
in
fsubp
cld
mov
xor
xchg
xchg
cmp
cmpsb
test
in
das
rcrb
push
or
mov
mov
mov
pop
mov
push
jp
ljmp
cltd
ss
dec
rcll
mov
dec
dec
data16
dec
outsl
sbb
test
sbb
add
outsb
push
jle
xchg
cld
leave
push
imul
ja
push
push
mov
adc
jns
mov
mov
imull
jp
add
or
inc
mov
mov
push
lods
inc
faddp
mov
pop
and
jnp
scas
dec
cmpsb
imul
xor
dec
adc
adc
or
sbb
gs
das
lods
cmp
adc
xorb
out
dec
inc
xor
mov
stc
enter
sar
add
clc
sti
and
js
adc
ret
pop
movsb
lret
ret
and
out
stc
pop
ret
out
fstps
clc
adc
sbb
push
mov
jo
into
into
mov
data16
nop
test
sub
cli
mov
push
mov
daa
pop
cmpb
pop
inc
mov
push
push
dec
xor
js
in
and
inc
out
xor
mov
mov
cs
jne
pop
xor
icebp
and
int
test
jg
mov
jmp
cmp
cmp
test
test
inc
pushf
test
mov
inc
cmc
in
rcrl
or
addl
mov
push
cmp
fwait
mov
lea
idiv
shll
cmp
push
scas
movsl
fwait
cwtl
pusha
dec
sbbb
lods
outsl
xorb
into
xor
ljmp
add
sub
xor
xchg
in
arpl
xor
js
imul
mov
fbstp
lahf
ret
ljmp
xlat
rolb
and
icebp
imul
out
imul
ljmp
fidivrs
push
mov
mov
mov
push
sub
arpl
add
les
jmp
lods
cld
movsb
jge
lret
mov
fsubrl
mov
mov
cmp
iret
sub
or
xor
addr16
aaa
push
mov
add
xchg
dec
mov
cmp
and
mov
test
xor
lods
mov
cmp
cmpsb
pop
adc
jp
dec
out
and
pop
jle
fsubs
lahf
test
je
testl
push
mov
mov
or
lret
xor
jns
add
mov
data16
sbb
sub
xchg
dec
or
stc
jae
cwtl
ds
xchg
pop
mov
sub
adc
cwtl
mov
xor
fdivl
fsubs
push
or
outsb
xor
push
shr
inc
test
add
mov
fidivrs
dec
mov
mov
lahf
jp
xchg
add
movb
cmp
mov
fdivrs
dec
xchg
negl
loopne
adc
mov
ss
addl
xchg
sbb
jae
pop
sarb
and
fwait
out
push
fs
test
std
push
iret
jae
and
int
pop
xor
adc
add
or
and
xchg
and
jmp
inc
clc
sahf
scas
je
jb
sbb
add
lcall
pop
add
dec
sbb
jl
outsb
lock
sub
jle
incl
fwait
aam
mov
jne
cmp
jne
or
sub
mov
shr
inc
push
ljmp
test
lods
sarb
push
mov
aad
jne
ja
imull
in
jmp
xor
pop
or
jg
arpl
inc
fimuls
les
dec
mov
mov
outsl
jmp
sbb
sub
xchg
testl
adc
pop
sbb
sarb
cld
sbb
sub
mov
or
cltd
cmp
test
jle
clc
cmp
lret
addr16
ja
ficompl
pop
add
jb
jno
push
add
pushf
ret
std
add
adc
push
add
add
and
inc
aad
inc
jmp
cld
icebp
mov
in
icebp
adc
cld
dec
xchg
outsb
orb
sub
aas
aad
pop
add
test
pop
jl
adc
and
adc
or
cmp
dec
subl
dec
leave
fidivrs
aas
ds
mov
cwtl
ljmp
out
dec
cmp
cmp
dec
jb
cs
lock
andb
data16
int
addr16
cltd
test
fwait
xor
adc
xor
pop
add
lds
jmp
je
ja
jg
std
test
out
out
loopne
lret
or
add
pop
xchg
xchg
lock
mov
xchg
shl
push
inc
xor
push
das
cmc
pop
in
add
push
ja
dec
mov
inc
mov
call
rorb
sub
div
push
sbb
sbb
pusha
mov
sarl
add
xchg
lcall
cli
jmp
pop
sub
ret
push
xor
in
dec
sub
pop
push
xor
imul
jl
jle
push
pop
jns
sub
mov
orb
push
push
aad
jl
xchg
sbb
or
out
ret
rorb
adc
rclb
mov
push
inc
ficomps
fsubrp
int3
mov
stc
sbbl
rcrl
pop
xor
add
outsb
addr16
arpl
xor
ret
enter
stos
mov
imul
sti
push
and
nop
pop
mov
stos
andb
inc
loope
lret
jg
ret
jo
and
sbb
aas
cmp
test
jns
mov
mov
mov
movsl
loop
mov
nop
xchg
or
xchg
jg
or
pop
mov
mov
jb
movsl
aad
mov
sarl
ds
arpl
repz
bound
sub
jnp
xchg
or
sub
and
test
mov
insb
mov
loop
xor
repnz
sub
inc
xor
jbe
icebp
mov
fs
je
lahf
ror
sbb
jmp
push
inc
pop
cltd
loop
imul
pop
xor
xchg
sar
push
clc
fadds
shll
in
int
enter
push
scas
push
or
scas
mov
ja
les
adc
scas
paddd
xor
lods
jge
or
dec
mov
loopne
arpl
xchg
jnp
sahf
pop
or
ror
in
jmp
or
mov
lods
jp
mov
jg
leave
int
pusha
pop
dec
and
test
fimuls
push
outsl
adc
xor
dec
dec
stos
stos
shl
cli
or
mov
or
pop
cltd
int
jge
xor
stos
ret
std
xchg
shll
pop
cmp
mov
dec
aas
cmp
sub
mov
orl
sbb
mov
fnstenv
mov
xchg
pushf
inc
dec
jg
or
inc
ja
xchg
fistpl
mov
mov
fwait
mov
ret
hlt
daa
mov
jae
lcall
rol
not
out
clc
mov
push
mov
or
lods
les
js
xor
ds
cmp
sbb
adc
cmp
adcb
add
test
fdivrp
jnp
imul
aam
mov
rorb
sbb
dec
fiaddl
push
in
inc
add
add
rorl
les
inc
lods
mov
movsb
loopne
mov
mov
mov
xor
movsl
xchg
rcl
xchg
out
jg
loopne
mov
cmp
mov
sub
cmpl
addr16
add
fs
lret
int
test
sbb
test
insl
les
sbb
inc
int
sti
xor
fmulp
push
add
jle
lret
and
aad
fcomp
out
aas
mov
cmovne
xlat
or
xchg
fidivrs
push
xchg
pop
mull
fmul
pop
scas
pop
les
out
inc
xor
mov
pop
mov
movsb
or
scas
mov
sbb
xor
pushf
aas
adcl
or
cmpb
pushf
inc
sub
dec
pop
fiaddl
fsts
add
or
or
and
dec
mov
push
out
stos
push
iret
ficompl
push
mov
jmp
in
pop
pusha
xor
outsl
lret
iret
fadds
fiadds
notl
dec
mov
mov
sahf
jnp
add
leave
jecxz
push
ffreep
inc
sarb
add
mov
or
cmpb
imul
sbb
inc
sub
mov
stc
jae
pop
test
das
and
sub
mov
mov
stos
lret
pop
jmp
mov
mov
pop
jle
repnz
shrl
fnstenv
outsl
jg
jbe
lret
fbld
scas
or
jl
add
mov
pop
ljmp
test
push
testb
xchg
push
jle
sub
mov
mov
and
les
bound
leave
push
push
inc
jmp
nop
mov
sahf
xor
and
push
arpl
fidivrs
xchg
pop
lods
xchg
mov
cli
cs
dec
mov
scas
pop
jbe
mov
and
mov
lret
pop
loopne
xchg
inc
not
adcl
daa
inc
xchg
out
pop
push
and
sahf
subl
lods
sub
sarb
outsl
bound
mov
jb
shr
cmp
jnp
std
jp
out
mov
ret
outsb
lods
sbb
mov
mov
push
mov
push
shr
mov
lea
and
jp
sbb
sbb
loopne
test
mov
inc
lods
cltd
sbb
adc
push
call
mov
jge
addr16
fimuls
jl
adcl
push
idivl
mov
xor
pushf
sqrtps
out
or
pop
push
xchg
xorb
mov
out
dec
xchg
jl
jp
add
mov
sbb
pop
pop
hlt
add
adc
dec
je
loopne
sub
cli
sub
pop
sub
aam
sahf
int3
lds
lcall
mov
jp
mov
sbb
mov
mov
pushf
inc
xor
jg
aaa
mov
xchg
cld
cld
cs
fucomi
and
addr16
xchg
cmp
pop
pusha
sahf
mov
inc
xchg
hlt
xchg
xor
mov
out
xlat
sbbb
adc
or
sbb
test
cli
add
gs
jg
dec
ret
outsl
xchg
mov
jb
sub
sbb
faddp
pop
les
mov
pop
xchg
pop
jmp
popf
mov
enter
mov
inc
adc
sbb
mov
pop
in
sub
test
jbe
mov
popf
mov
xchg
mov
add
sub
sbb
or
test
jge
movsb
pushf
sahf
jmp
adc
and
cmpsl
in
mov
mov
jne
or
xchg
outsb
cltd
iret
int3
cmc
or
xor
cs
hlt
int
inc
mov
aaa
push
das
insl
mov
lods
jge
pushf
ljmp
loop
scas
jmp
les
adc
push
mov
negb
test
out
mov
add
mov
pop
dec
xorl
lret
bound
mov
daa
sbb
pop
arpl
cmp
jle
mov
or
jb
and
or
jne
sub
cmp
jbe
nop
sbb
mov
sahf
movl
inc
xchg
insl
bound
movsb
mov
mov
rorb
iret
inc
mov
adc
iret
les
sbb
shll
inc
adc
fisubrl
jp
jg
shll
xchg
and
adc
fnsave
push
sbb
sub
push
imul
or
enter
xor
pushf
xor
loopne
rorb
dec
ja
or
add
int
sbb
out
lods
push
mov
inc
mov
jno
imul
enter
and
pop
loop
movsl
fstpl
cmp
std
sbb
or
pushf
dec
and
imul
push
pushf
fadd
idivl
jae
add
ret
lret
inc
rcll
out
inc
loop
xchg
mov
inc
fimull
push
leave
pusha
aas
mov
push
pop
and
loop
pop
dec
and
les
adc
mov
push
les
adc
add
ds
out
insb
add
bound
cmp
aas
cld
pushf
ss
ljmp
outsl
jmp
xchg
ds
jne
inc
push
sbb
inc
sbb
in
or
push
iret
lock
or
std
mov
pop
dec
aam
inc
sub
pusha
xchg
in
and
mov
xor
ret
mov
lret
outsl
sbb
jbe
or
cwtl
add
add
ljmp
xor
pop
sub
push
and
xchg
inc
add
lahf
dec
clc
daa
mov
nop
leave
mov
nop
lret
push
adcl
cmp
repz
loope
lock
or
and
and
ds
fucomp
dec
and
add
les
icebp
push
rcll
stc
fcom
es
xchg
movsb
in
mov
mov
xchg
or
sbb
mov
and
imul
loope
or
push
addl
in
cwtl
push
mov
cmp
push
cmp
dec
cltd
mov
mov
cwtl
data16
xchg
sahf
push
loope
sarl
mov
adc
add
jbe
pop
mov
outsb
stos
cmp
cmp
lret
xor
hlt
ret
aam
inc
scas
mov
or
fldcw
mov
pop
imul
jg
daa
enter
mov
mov
in
cmp
xor
ret
clc
cmovne
andb
pusha
inc
adc
dec
pop
cld
jle
jns
rorb
sub
add
or
xor
lret
jo
lahf
mov
sti
sbb
outsl
sub
mov
dec
test
ret
adc
jb
aad
inc
in
mov
outsb
mov
ror
stc
push
jle
inc
in
test
xor
mov
aam
mov
cmpsb
mov
fldenv
scas
push
mov
pop
dec
pop
imul
mov
inc
cld
call
outsl
cmp
int
and
adc
xchg
data16
mov
pop
inc
adc
xor
sbbl
and
mov
push
pusha
repz
mov
xchg
or
filds
roll
dec
std
fists
mov
outsb
xchg
xchg
push
push
loop
sub
pushl
into
xor
pop
xor
das
xor
daa
aad
sub
shl
add
aas
shl
ja
or
leave
jp
push
stos
gs
and
imul
cmp
adcl
clc
int
cmpsb
push
test
movd
xlat
fistpl
sub
lcall
jmp
aas
xchg
cmp
pusha
xchg
add
fwait
das
add
inc
push
scas
movsl
mov
mov
push
mov
mov
push
push
in
popa
loope
and
push
leave
jmp
test
aam
fadds
adc
jp
fmull
inc
and
stos
mov
mov
xor
jne
sahf
jp
repz
cmp
mov
ds
loopne
das
iret
std
cs
cmp
lcall
or
push
cmp
into
out
jge
xor
cli
xchg
adc
testb
nop
insl
sub
inc
push
inc
fnsave
xor
mov
incl
addr16
jb
mov
idiv
cmp
repz
push
mov
sarb
sub
mov
outsl
cmp
and
stc
mov
sahf
mov
iret
insl
fprem
jno
add
cmp
jmp
push
stos
mov
dec
pushl
mov
xlat
fstpl
inc
push
add
stc
xchg
sub
in
popf
ret
inc
dec
jno
ret
lret
xor
xor
xor
mov
vpsrlq
jae
in
je
lods
mov
rcl
push
pushfw
lds
enter
sbb
sbbl
cmp
stos
cmp
cmc
pop
ss
pop
lds
pop
push
pop
fbstp
or
sbb
fmull
push
dec
call
and
ret
pop
sub
adc
fucomip
pop
sub
pop
gs
fbstp
xchg
jae
push
ret
test
add
iret
dec
mov
or
mov
stos
ret
lahf
and
mov
subb
sbb
lds
in
movsl
pushf
jbe
lret
scas
ret
xchg
cmp
dec
cmp
sub
mov
subl
outsb
fidivrl
add
or
xchg
inc
jae
jb
adc
enter
adc
inc
dec
dec
dec
fistl
sahf
or
mov
lods
xor
jle
ljmp
add
push
sar
dec
out
cltd
loop
mov
outsl
jl
jg
test
add
mov
dec
ljmp
xor
jno
clc
fistl
popl
cmp
mov
sbb
mov
xor
loope
or
pop
xor
mov
jb
fstps
jns
stos
mov
outsb
stos
dec
lcall
jmp
dec
test
adc
add
sbb
mov
cmp
xor
inc
xchg
iret
sub
mov
push
dec
sti
les
pop
sub
ret
jmp
dec
and
pop
xor
nop
or
pusha
mov
mov
adc
lret
and
cwtl
inc
jns
in
gs
sti
sti
neg
push
popa
pop
dec
rclb
mov
push
mov
fsubs
jnp
lock
repnz
xchg
xor
ja
or
aad
pushf
sbb
lods
jb
cltd
inc
popf
daa
out
add
and
int3
ficoms
add
push
sub
push
fnstsw
fidivrs
call
enter
fsub
lahf
push
push
sub
repnz
shrl
scas
shrl
jmp
mov
push
mov
les
rol
push
ds
add
sbb
push
pop
sbb
inc
add
push
clc
gs
and
xor
xor
and
jbe
divb
and
mulb
push
xsave
jo
pop
and
mov
fs
ds
dec
lods
cmp
push
mul
das
xor
call
popf
and
xor
mov
jecxz
jnp
gs
stc
xchg
aam
xchg
lcall
fwait
mov
lret
dec
incb
movsb
xchg
cld
jns
jo
jno
xchg
mov
mov
leave
jl
test
pop
shrb
fsubrs
imul
movsl
push
sbb
aas
loopne
mov
jbe
xlat
sti
inc
pop
in
xchg
in
jo
pushf
mov
fdivrs
mov
lods
fisubrs
or
mov
sahf
push
xor
setl
incl
mov
ljmp
out
cs
iret
js
adc
add
clc
outsl
adc
scas
push
push
loop
adc
sahf
inc
rcrl
inc
jmp
mov
call
mov
adc
test
imul
jge
adc
push
int
out
cli
lret
popf
jne
call
cld
sti
ds
cmp
mov
rclb
and
mov
cmc
xchg
dec
cmp
popa
lods
add
ret
jg
decl
arpl
pop
mov
jmp
add
into
add
push
jb
pop
push
in
je
mov
enter
inc
dec
movsb
jge
dec
gs
insb
sub
inc
sub
rcrl
lods
aas
fists
ds
mov
std
add
lock
int
aad
hlt
and
int3
out
int
and
clc
or
filds
je
lahf
fs
jbe
xor
ss
insl
push
pusha
mov
lds
mov
nop
and
adc
jb
mov
push
jle
lods
add
insl
loope
xor
popa
jb
nop
bound
and
and
shrb
shlb
mov
sbb
xor
xchg
and
movsb
push
jmp
shlb
lret
dec
outsl
sub
jge
inc
mov
sbb
insb
iret
aaa
enter
and
movsb
js
push
jno
sti
mov
push
lea
sbb
mov
hlt
scas
or
and
movsb
sub
sahf
sbb
push
icebp
lock
addr16
lods
inc
sbbl
sub
mov
pop
xlat
decl
addr16
push
adcl
dec
mov
xchg
ss
pop
decl
inc
mov
pushf
pop
lret
outsb
sbb
clc
mov
std
dec
iret
cmpsb
gs
int3
lcall
inc
lods
clc
daa
jne
mov
dec
jg
sub
lods
fsubrs
and
mov
lret
xor
aam
inc
sbb
pop
das
test
bound
or
push
mov
arpl
test
je
pop
jg
cmpsl
sbb
stc
mov
loop
jae
sub
inc
add
je
out
icebp
pushf
out
pushf
cmp
stos
test
xchg
repnz
std
jge
subl
mov
pop
dec
lds
popw
negl
mov
jp
ds
lods
xor
adc
jl
add
in
aad
arpl
aas
fcmovb
les
lods
inc
jo
and
call
pusha
gs
cs
pusha
cmc
aaa
bound
out
mov
adc
jae
xchg
sysexit
adc
mov
cmp
loop
ficomps
or
sub
sbb
repz
int3
xor
and
fisubl
jmp
cmp
push
clc
sub
lret
xor
sbb
sub
lcall
adc
mov
aaa
movsl
adc
imul
xchg
xchg
mov
bound
insb
data16
mov
out
outsb
mov
gs
jne
mov
imul
pushw
stos
stc
dec
outsl
mov
pop
xor
cmp
fcoml
ret
bound
jp
and
inc
cld
push
mov
pop
movsb
sbb
and
fucomi
outsl
sub
mov
mov
mov
dec
lcall
sub
in
or
leave
out
add
aam
fstpl
add
adc
out
outsb
movsb
xor
pop
ret
pop
arpl
xchg
pop
xchg
add
test
mov
jno
imul
faddl
ficoml
push
int
repnz
nop
icebp
mov
out
xchg
popf
dec
movl
les
push
cltd
xchg
loopne
add
push
push
orb
xchg
add
fadd
xlat
dec
mov
ret
lea
jno
out
pop
push
jp
sarl
xchg
mov
outsb
xchg
orb
pop
frstor
popf
push
xor
ja
pop
mov
pop
jbe
mov
movsb
popf
call
push
jo
ficoms
test
aas
maxps
dec
sub
pswapd
in
stc
and
pop
inc
and
or
cld
ja
lock
push
and
push
xor
into
cmp
in
cmp
add
jg
ljmp
pop
stc
mov
jns
or
jmp
imul
mov
and
sarl
jbe
jge
adc
jg
scas
cmp
adc
vpsubw
ficoms
mov
movsb
sub
subl
sbb
dec
and
and
icebp
lahf
pop
fidivrl
dec
les
inc
push
or
les
adc
iret
dec
lods
test
pop
outsb
sahf
jmp
mov
test
xchg
mov
pusha
xor
xchg
mov
daa
lret
xchg
shlb
adc
pop
shl
fisubrs
jae
stc
stos
jge
push
insb
pop
aam
in
testl
cs
fistpll
jbe
test
roll
pop
or
push
xlat
clc
cmp
add
aam
fcomps
mov
test
iret
xlat
fmulp
and
andb
gs
cmpsl
scas
sbb
or
inc
adc
cwtl
sub
push
xor
sub
cmc
repnz
mov
and
mov
mov
inc
xchg
dec
jg
ss
ret
cmc
imul
push
push
pop
insb
data16
sbb
or
enter
nop
jmp
movl
mov
jecxz
xacquire
enter
out
jmp
in
clc
jmp
sub
adc
xor
daa
or
jo
add
addr16
gs
notl
aad
rorl
movsl
cs
push
insl
xorl
inc
arpl
mov
stos
dec
sahf
cmpsl
fisubs
mov
pmaxsw
fwait
lds
int3
dec
push
inc
sti
fstpl
out
in
movsl
aaa
cli
sub
addr16
lock
rolb
push
insl
mov
es
sub
jns
adc
push
repz
invd
fiaddl
ja
in
jle
xlat
cwtl
inc
nop
jo
pop
dec
mov
pop
lret
mov
mov
xchg
jp
in
xchg
int3
scas
or
jbe
xchg
cld
add
adc
pop
push
xor
cmpsl
xchg
mov
add
cmpsb
jge
bound
jle
pop
jge
mov
imul
cltd
subb
mov
outsb
mov
loop
jbe
lret
xlat
lods
rcr
pop
lds
sbb
sub
sbb
sub
outsb
incb
pop
inc
inc
mov
adcl
aas
cmp
not
fmul
push
mov
or
mov
fst
daa
pop
andl
call
mov
or
mov
mov
add
mov
jg
test
out
jecxz
cwtl
push
add
out
dec
xor
les
movsl
movb
cmpsb
subl
push
fisubrl
cli
lds
cld
jp
add
sbb
sti
fcomip
sub
inc
mov
ja
out
mov
dec
cmpsl
bound
int
xchg
lods
enter
das
in
mov
out
jns
push
out
lret
sub
ds
xor
jmp
add
pop
sbb
cld
dec
push
adc
lock
mov
add
add
sub
mov
sub
add
sub
and
cmpsb
repnz
jl
push
fistps
addr16
inc
scas
cld
stos
mov
lea
inc
repz
into
loopne
daa
push
push
fs
lods
dec
ds
into
vmulsd
jmp
add
mov
xchg
lds
cmp
loope
popf
xchg
fwait
inc
jnp
out
stos
xchg
add
dec
or
jae
push
les
fcmovu
add
sbb
dec
outsb
push
lds
or
or
sbb
cmp
cmpsl
aad
stc
add
aad
xchg
icebp
clc
xchg
dec
mov
xchg
les
out
and
cmp
dec
pop
inc
cmpsb
jg
ljmp
ljmpw
jle
or
mov
inc
rolb
xor
imul
nop
mov
cmp
xchg
push
out
mov
dec
and
inc
dec
sub
dec
dec
test
mov
inc
dec
movsb
and
add
popa
or
mov
mov
ljmp
pushf
rolb
das
jnp
das
popa
push
orl
and
dec
call
movsl
pop
xor
aas
xor
repz
add
push
xchg
inc
std
sub
jns
and
sbb
ret
or
test
push
push
imul
or
mov
pushf
cmpsl
aas
negl
xchg
mov
xor
lret
stos
or
sbb
sbb
sub
ja
out
in
push
shlb
add
push
icebp
testl
mov
pop
test
inc
loop
dec
lods
push
ljmp
add
stc
add
xor
sub
jne
sub
stos
inc
mov
iret
add
in
xchg
cmp
inc
insl
mov
lcall
movsl
adc
les
xor
cmp
adc
imul
in
ret
das
loopne
mov
cmp
xchg
mov
adc
fcoms
mov
push
jb
bound
or
rolb
clc
loop
and
xor
mov
andl
in
jmp
push
add
gs
stc
pop
jb
xchg
sub
mov
addr16
cmpsl
sbb
xchg
shrb
cmp
mov
jmp
imul
orb
rep
cmpsl
push
ds
lret
dec
push
and
add
mov
out
sub
add
fwait
dec
in
lcall
lcall
repz
andb
fiadds
into
mov
repz
cmp
loop
sub
fdivl
mov
cmp
inc
divl
fldl
sbb
xchg
sbb
sub
jl
sbb
sub
jae
cs
pop
xchg
cwtl
xor
mov
mov
imul
xchg
xchg
popa
loopne
nop
xor
or
xor
in
or
mov
aas
movsb
cmp
xchg
mov
lods
pop
out
lods
sbb
xchg
test
mov
xor
push
fldl
scas
rorl
xor
jb
and
jb
subb
test
push
ljmp
mov
xor
xor
jne
jo
loop
add
push
or
mov
dec
pop
loop
sbb
and
cmpsb
std
adc
push
jbe
mov
sbb
pop
xor
popa
ret
sti
xchg
xchg
mov
jno
sbb
push
xchg
and
out
sub
jnp
or
add
add
cwtl
xor
sub
in
dec
mov
push
insl
sub
mov
js
outsb
in
ficoms
sbb
or
mov
stos
add
roll
cmpl
out
xor
sti
jmp
dec
mov
mov
jecxz
adc
fsubrl
mov
movsb
push
jmp
jle
inc
dec
call
cmpsl
pushf
jno
jecxz
js
lcall
or
arpl
imul
xchg
nop
int3
mov
ds
jnp
add
mov
jno
xor
adc
iret
or
cs
pusha
cmpsb
inc
push
fnstenv
sbb
mov
loopne
addb
icebp
mov
mov
ret
enter
in
int3
call
lret
imul
sub
fnstenv
adcl
cmpsb
and
ficompl
pop
sub
andb
dec
scas
mov
mov
push
mov
cmc
les
icebp
mov
mov
mov
adc
pop
out
push
in
imull
imul
shrb
push
rcrl
xchg
in
add
lods
nop
stos
jbe
mov
pop
xor
sbb
and
mov
shlb
or
jle
rol
sbb
std
fs
add
add
add
xchg
sub
mov
neg
movsl
sub
fistl
clc
push
pop
repz
insb
cmp
mov
sbb
lret
js
xor
imul
loopne
fstpt
mov
jg
pop
xchg
or
in
sbb
cmc
xor
mov
pop
or
mov
dec
out
mov
icebp
aam
lods
xchg
pause
push
std
dec
sbb
cli
lock
jnp
test
hlt
mov
cmpsb
xor
xchg
insl
add
adc
add
xchg
ja
inc
mov
cli
ret
shlb
jno
mov
popf
add
jne
jl
jnp
cmp
lds
mov
insl
dec
insl
pop
jl
jmp
sub
hlt
xchg
lret
sarb
rorb
jb
push
mov
mov
sarb
xchg
pop
out
push
adc
ja
rcrb
rcrl
loop
sub
imul
fildll
data16
push
pop
aad
fiaddl
ret
fimuls
inc
cmc
xchg
xchg
aaa
outsl
inc
leave
push
inc
addr16
cmc
cwtl
mov
and
xchg
mov
mov
lods
jl
jb
and
rorb
lea
mov
sbb
sub
in
iret
stos
mov
lds
inc
jae
lret
cmp
mov
pop
cli
cmc
test
push
fcmove
int
sti
js
jp
das
lcall
fimull
movsb
mov
fcomip
push
or
pushf
push
rep
loopne
xchg
fwait
add
sub
jb
popf
negl
out
test
pop
add
mov
loopne
inc
in
sahf
movsl
jl
push
mov
out
cltd
xchg
popa
mov
movsb
and
and
decl
mov
pop
adc
mov
xchg
mov
out
xchg
or
mov
repnz
sbb
jg
dec
mov
sub
ror
push
cmp
rclb
push
mov
mov
xlat
jae
sub
lret
ret
mov
and
push
cs
xchg
aad
outsl
jl
add
in
fs
or
push
fdivrl
push
fadds
in
cltd
push
sbb
sub
inc
xchg
cmp
adc
or
pop
stos
jle
cmpsb
cmpsb
add
in
xchg
xchg
and
sbbl
push
push
inc
loop
aam
subl
inc
jmp
mov
cmc
jmp
xor
jge
pop
push
cmp
notrack
fimuls
aad
cltd
mov
jecxz
dec
ret
mov
call
arpl
popf
repnz
adc
jns
pushf
ja
mov
push
jb
jp
push
xor
in
xchg
addr16
adc
jno
sarb
cmp
adc
into
icebp
insb
loopne
dec
or
aad
fcoml
xor
mov
addl
test
push
cli
repz
xchg
cwtl
imul
lock
xlat
mov
pop
inc
imul
aam
sub
stos
push
push
cmpsb
lods
popa
js
test
testl
xchg
add
lret
shrb
outsb
push
aas
inc
push
mov
mov
in
inc
xchg
sub
aaa
jp
aaa
popf
stos
jnp
repz
cwtl
add
cmc
fstpt
sbb
out
mov
loop
or
xchg
adc
shrl
ja
push
out
mov
data16
loopne
pop
outsl
mov
sbb
mov
in
mov
out
mov
cmp
jl
or
push
add
cmp
shll
push
dec
int
movswl
pop
aaa
repz
mul
fs
pop
jb
dec
insb
clc
dec
arpl
dec
sub
mov
lret
inc
pop
jmp
ret
fdivr
or
into
nop
mov
addr16
mov
out
enter
push
sarl
fldenv
mov
sub
and
shl
push
int3
jo
inc
adc
mov
sub
add
mov
addb
and
popf
jno
and
lret
adc
jl
push
sbbl
mov
adc
in
jp
js
pushf
dec
xchg
and
into
sub
lcall
mov
subb
shl
mov
popa
call
sub
rcl
or
mov
repz
and
cwtl
cmc
mov
int
pop
pop
fcompl
icebp
subb
lcall
adc
sti
jbe
jno
les
clc
fs
outsb
pusha
fadds
sbb
scas
ds
jmp
arpl
jbe
mov
mov
loopne
dec
push
adc
push
mov
fistpl
lods
es
or
or
mov
mov
enter
jp
lret
sub
xchg
cld
dec
push
pop
fisttpl
or
leave
mov
pop
sbbb
mov
adc
push
mov
ficompl
and
mov
add
mov
sub
lret
and
mov
fidivrl
adc
mov
lods
stc
pop
outsl
push
lds
shlb
cmp
dec
stos
hlt
xor
lock
jmp
in
data16
pop
sahf
dec
roll
out
cmp
fs
inc
push
mov
jmp
sub
cmp
into
stc
ret
imul
push
pop
mov
ror
sbbl
loope
les
out
mov
xchg
out
cmp
test
lods
pop
xchg
int
aam
inc
xchg
in
xor
cwtl
mov
outsl
xor
and
xchg
xchg
call
push
lcall
pop
add
pop
pop
mov
ret
insl
and
icebp
fnstsw
sub
js
pop
or
mov
xchg
push
in
loopne
mov
jecxz
addb
mov
fs
icebp
bnd
inc
mov
cld
xor
loope
sti
jmp
dec
out
cmp
mov
subl
insb
adc
lds
jb
gs
fisubs
xchg
cmp
xchg
gs
scas
add
loope
xchg
or
notb
sbb
cmp
mov
push
test
mov
jl
bound
xchg
push
dec
jmp
add
mov
lahf
or
mov
push
scas
mov
test
lock
jl
shll
jo
testl
gs
jae
push
out
testb
adc
cmp
pop
insb
sub
insb
add
stos
stos
mov
cmpsl
xchg
hlt
insl
stos
dec
or
adc
adc
push
and
lea
js
inc
arpl
add
stos
int3
cmp
mov
jl
jbe
arpl
mov
popa
add
hlt
jnp
test
subl
sub
cmp
jp
push
fwait
and
jb
or
xor
xor
pusha
cmp
imul
xchg
mov
cmp
push
fdivrs
mov
xor
es
or
inc
imul
add
leave
shr
xor
jae
outsb
xchg
jle
popf
or
dec
jb
leave
wbinvd
cmp
inc
mov
aad
lahf
jmp
push
sbb
nop
cmp
mov
mov
dec
lock
jbe
cmpsb
jl
xchg
mov
add
lods
into
inc
sbb
push
push
xlat
aaa
cwtl
xchg
test
add
aas
ds
mov
push
lret
push
push
and
and
mov
cmpsl
dec
and
shrb
xor
scas
les
rcrb
dec
push
cltd
rcrl
mov
imul
stc
daa
jg
js
loopne
scas
sub
mov
or
stos
roll
rcrl
mov
pop
pop
sahf
adc
repnz
xor
movsb
push
xchg
adc
push
bswap
add
mov
add
pop
or
stos
pop
cld
clc
cmp
mov
mov
xor
lcall
ret
add
jns
pop
dec
incb
sbb
imul
in
xchg
out
pop
jbe
test
arpl
xchg
shr
std
in
jae
fstpt
adc
mov
test
pushf
xchg
mov
lret
in
dec
addl
popa
int3
pop
jne
push
sbb
sbb
pushf
xchg
fistpll
xchg
mov
jmp
jecxz
mov
bound
mov
aam
jmp
outsb
mov
aas
mov
push
xor
sub
ficoml
mov
cmp
movsb
jae
ror
pop
sub
jecxz
gs
sub
jno
cmp
pop
clc
iret
call
incl
mov
jmp
ja
aas
hlt
pop
xadd
arpl
stc
and
fcmovb
xchg
call
fistpll
js
cmpsb
mov
push
mov
pop
adcl
and
or
lret
or
pop
lcall
pushf
jl
cmpsl
nop
adc
or
mov
or
cmpsb
data16
cwtl
out
aam
sbb
loopne
dec
fimull
ret
jl
lea
xchg
cmp
pop
movsb
std
fwait
add
testb
cwtl
daa
sbb
sub
pop
daa
or
jnp
out
xor
cmp
sbb
movsb
push
mov
gs
notl
adc
out
movsl
cld
pop
sbb
rclb
push
imul
scas
cmp
fisttpll
addr16
inc
sti
shl
add
movsl
je
xor
loop
push
xchg
cmp
dec
mov
pop
jl
sub
imul
inc
push
movhps
or
fmull
fcomps
inc
push
and
xchg
je
push
lret
sub
lcall
ret
cwtl
stos
stos
in
and
jecxz
mov
add
std
lds
push
lock
cltd
cmp
rcrb
testb
mov
ret
ljmp
or
cld
cli
out
mov
popf
push
aas
nop
cmpb
mov
iret
lods
outsl
jb
inc
pop
sbb
add
icebp
shrb
jp
sbb
pop
pop
jnp
pop
ret
outsl
cmp
cmpsl
cmp
fistps
repz
loop
pop
sahf
xchg
aad
sub
daa
inc
fdivrl
sbb
test
pop
and
push
repnz
add
ret
and
cli
mov
aad
sahf
jno
add
stos
or
jge
pop
jle
mov
enter
push
arpl
clc
das
out
cmc
add
dec
aam
andb
inc
ret
sahf
push
mov
xchg
std
push
pop
mov
outsb
mov
or
jmp
mov
push
pop
or
adc
add
mull
test
xor
cwtl
aaa
mov
or
jno
das
xchg
push
jle
into
adc
jbe
sbb
aas
int
insb
jnp
ds
pop
arpl
add
push
cmpsl
xor
cwtl
mov
shll
ss
int3
test
out
cmpb
mov
lret
jnp
cltd
add
sub
inc
jne
add
lahf
icebp
jle
cwtl
jmp
pop
sbb
xchg
test
and
or
add
sub
mov
cmpb
dec
fldt
lods
inc
divb
dec
scas
pusha
movsl
xor
fnstsw
mov
loope
add
lds
pusha
cli
mov
jo
xchg
bound
xchg
scas
jns
and
jp
fistpl
arpl
and
add
fimull
mov
test
cs
pop
and
add
popf
add
test
iret
cmc
loop
bound
jp
sbb
pop
test
adc
and
scas
outsb
xchg
and
je
push
aas
sub
lret
mov
loop
test
idiv
mov
sbb
xorl
test
in
pop
stos
xchg
lods
adcb
mov
add
xchg
add
xchg
xor
sub
sub
in
pop
arpl
lcall
pop
inc
mov
out
sub
fldl
and
or
lcall
mov
add
jae
ljmp
add
out
cmc
xor
add
mov
inc
sub
cs
mov
hlt
mov
ljmp
jmp
jl
lret
push
pop
movsb
mov
setl
decl
shrb
and
push
adc
clc
mov
adc
and
into
xchg
xchg
and
imul
pop
pop
sbbl
sahf
mov
sbb
adc
inc
pop
sbb
and
push
xor
mov
cmp
mov
scas
sbb
push
mov
push
sub
pop
jle
mov
adc
push
pop
xchg
pop
sbb
jnp
mov
push
aaa
inc
mov
fs
cmp
out
pop
loop
add
and
adc
insl
lahf
cmc
xchg
push
xor
pop
aad
cmp
cmp
xchg
fsubrl
test
jmp
dec
fnsave
sub
outsb
add
test
mov
cs
rcrl
cmp
in
call
adc
aad
outsl
jns,pt
jecxz
lret
push
and
xchg
xor
cli
daa
es
insl
adc
mov
ss
or
fnstsw
xchg
xchg
rclb
aas
dec
mull
xlat
sub
cmpb
into
scas
push
lods
aam
push
in
lahf
xor
sub
iret
shlb
add
loopne
mov
jnp
sub
test
repnz
inc
fcoms
lock
xchg
sarl
jmp
cltd
adc
in
or
and
decb
scas
in
fld
xor
mov
xchg
jp
std
xchg
pop
push
mov
sbb
popa
lock
add
cmp
inc
pop
dec
aam
cld
mov
push
cmp
jl
outsl
call
pop
mov
xchg
pop
sbb
xchg
add
sub
pop
or
sbb
cmp
decl
dec
jno
imulb
jae
jl
pushl
and
sub
movsb
daa
pop
daa
test
inc
and
adc
xchg
repnz
cs
cmpsl
test
jmp
adc
in
jne
xchg
in
fadd
cmc
dec
outsb
sub
lcall
fwait
testl
cld
jae
aad
repnz
call
sub
sbb
popf
xor
lcall
adc
xor
fistps
repz
or
sti
push
mov
cmp
loopne
cmp
into
add
mov
or
int3
fnstcw
sub
mov
shrb
push
out
test
pushf
imul
sbb
adcl
push
mov
mov
mov
lahf
movsl
out
add
sbb
and
adc
dec
in
ss
inc
push
jg
mov
mov
jne
nop
rorb
int3
push
mov
dec
inc
xchg
out
mov
inc
rcll
test
cwtl
bound
dec
adc
sti
imul
add
ja
and
push
jmp
push
mov
jno
jp
nop
out
out
rcl
adc
ss
and
rolb
dec
add
push
push
inc
mov
adcb
andb
stos
lods
sbb
fs
cmp
sub
imull
enter
xchg
sarb
sbb
mov
insl
xchg
leave
sub
arpl
mov
lea
inc
or
fst
sbb
mov
addr16
xchg
testb
aad
je
int3
loope,pt
enter
or
sbb
jecxz
mov
xchg
jge
jl
scas
scas
rcll
arpl
push
dec
aaa
mov
test
inc
outsb
jnp
adc
rorl
nop
mov
movsb
cmpl
movsl
movsb
fcmovbe
inc
sarl
xchg
mov
mov
roll
inc
mov
xor
or
jg
ret
aad
nop
adc
dec
mov
sarl
aas
mov
xor
inc
mov
fwait
lds
push
xor
sti
add
xchg
icebp
pop
inc
aad
sbb
jecxz
aad
and
or
js
jle
out
shlb
mov
ficomps
sbb
mov
sbb
clc
fsub
xchg
cwtl
sbb
mov
decb
idivb
lea
hlt
mov
xchg
shll
push
sub
and
xchg
cmc
push
sub
mov
stos
xor
movb
mov
xor
sbb
push
das
lock
aad
outsl
mov
xor
or
notl
rcll
cltd
ds
dec
lahf
xor
or
loop
sub
lret
sub
or
lret
dec
sbb
ss
push
aas
pop
inc
lcall
js
mov
mov
and
push
fsubs
jb
adc
test
mov
ds
mov
mov
dec
push
daa
lods
lods
xchg
and
add
loope
rorl
sti
pop
imul
mov
test
and
mov
sub
sub
inc
lock
cwtl
push
stos
insl
push
iret
jne
sbb
bound
call
push
hlt
cltd
and
imul
lcall
pop
in
xor
shl
mov
sbb
mov
jo
mov
gs
inc
pusha
leave
push
sbbb
mov
mov
cmp
mov
inc
add
mov
mov
xor
mov
dec
sub
jne
and
test
je
cmp
popf
cmp
pop
lcall
std
push
adcb
fbstp
mov
adc
mov
cmp
lock
pop
in
add
mov
and
or
mov
cmp
inc
xor
fdivr
dec
pop
adc
repnz
lods
push
imul
mov
mov
adc
lahf
and
add
sub
mov
loope
rcrb
adc
mov
cmp
jo
imul
mov
push
addb
cmp
cmc
int
dec
push
aas
cmp
or
negb
push
inc
jmp
fisubrl
stos
jne
adc
pop
xor
lea
lods
or
insl
paddb
sti
setge
das
mov
fisubrl
stos
inc
add
xchg
sbb
xor
jge
push
shll
popf
shll
add
insl
inc
stos
inc
push
aam
cmpsb
mov
push
dec
pop
repz
ficoml
mov
in
js
push
push
pusha
jbe
dec
mov
cmp
mov
or
mov
dec
sahf
xchg
inc
rorb
xchg
jae
cmp
sub
dec
jmp
xchg
insl
add
jl
push
adc
and
or
xor
sub
in
test
or
das
leave
push
sub
lods
arpl
adcl
fisttpl
imul
popf
rorl
das
pop
fdivrl
jae
dec
mov
add
test
ficoml
pop
arpl
mov
stos
or
hlt
mov
jg
jmp
mov
or
adc
sbb
lods
loop
negb
scas
mov
adc
mov
and
pop
dec
and
add
xchg
jp
mov
adc
movsb
sub
lods
push
and
sbb
jle
or
mov
pushf
testb
adc
inc
adc
sub
push
imul
add
jp
mov
push
popf
inc
hlt
movsb
push
lret
inc
jge
hlt
movaps
jnp
push
loop
jo
adc
pop
das
pop
and
jne
or
jg
dec
popf
push
pop
js
icebp
shl
lcall
push
add
pop
inc
mov
cmp
inc
js
fs
outsl
sbb
out
add
sub
push
or
std
xchg
movsb
adc
or
push
mov
arpl
sbb
jo
jno
push
push
aaa
outsb
mov
mov
jge
mov
mov
dec
or
inc
addr16
cmp
xlat
or
mov
mov
btc
push
mov
pushf
cltd
fstps
cmp
lret
hlt
xchg
movsl
push
mov
push
sub
push
sub
rclb
es
or
pop
pop
es
pop
jnp
pop
cmp
aas
push
jge
cmpsl
cmp
push
sub
shll
xchg
xor
and
cld
ret
mov
add
mov
mov
dec
sbbl
adc
ss
fisubl
das
xchg
rcrb
push
mov
mov
repz
pop
add
jb
out
pop
push
sub
daa
push
or
data16
mov
mov
push
xor
repz
pushf
out
pushf
cmc
mov
xchg
mov
push
sub
ja
loope
or
cmp
xchg
les
mov
dec
inc
mov
cmp
test
test
aad
ja
mov
ss
lods
in
cmpsl
mov
adc
push
je
mov
in
mov
lods
cmpsb
add
add
dec
out
outsb
add
and
or
popa
xor
into
add
xchg
jg
pop
sahf
sbb
insb
sbb
xchg
gs
sub
aaa
jecxz
xchg
mov
sub
adc
fnstsw
aad
ficoml
pusha
add
and
std
aaa
mov
dec
pop
cmpsl
cwtl
pushf
sub
in
hlt
cmp
call
aam
hlt
jbe
lcall
sub
mov
jae
jmp
or
jp
dec
lret
xlat
pop
insb
hlt
es
mov
sbb
pop
pop
dec
jne
movb
in
jae
xchg
in
dec
out
roll
push
pushf
dec
mov
lock
mov
mov
mov
sub
sar
insl
lock
ss
and
add
xor
pusha
fiadds
push
pop
push
mov
jp
test
cmp
test
shrb
scas
repnz
inc
add
aam
xor
jecxz
push
std
and
cmpsl
cmpsl
in
movsl
sub
mov
mov
aad
movsb
or
cli
and
insl
sti
fildll
sti
inc
mov
pop
adc
mov
cli
sbb
clc
push
dec
or
ljmp
sub
and
or
je
push
icebp
out
pop
cld
pop
xchg
jl
data16
mov
loopne
push
jmp
test
sbb
xchg
mov
dec
mov
mov
cmp
cs
movsb
cwtl
cli
call
sbb
jecxz
in
or
jo
push
popa
xchg
loop
addl
int3
test
lret
jne
xor
into
fbstp
or
sbb
jno
xchg
push
xor
shll
jo
sub
add
dec
loop
loopne
push
cmp
push
cmpsb
lret
jmp
addr16
enter
fisttpl
subb
lods
std
or
adc
jne
in
mov
push
sbb
shrb
jno
cmc
push
or
add
pushf
cltd
rorb
popf
aad
gs
js
scas
rorl
add
push
adc
sbb
aad
nop
mov
cli
cmp
sbb
push
pshufw
cmovo
inc
adcl
test
push
push
leave
out
xor
lods
leave
cwtl
pop
xor
jns
addr16
sahf
outsl
sub
out
sbb
dec
or
cmp
adc
jae
xlat
stc
adc
addl
cmpsl
in
gs
leave
je
and
mov
xor
inc
push
lret
sti
jnp
jp
push
inc
rorl
faddl
pop
roll
out
mov
lock
jns
xor
lahf
jmp
adc
adc
add
jo
or
mov
test
sbb
pop
sub
lds
lds
sbb
push
loope
add
xchg
jb
pop
or
repz
in
mov
outsb
mov
nop
add
mov
negb
sbb
or
dec
fwait
jne
push
add
and
test
add
mov
push
push
lock
xlat
fcoms
cwtl
cmp
cmp
add
in
jne
shrb
adc
addb
xor
sbb
sub
mov
mov
adc
lods
cmc
insb
push
add
mov
xchg
test
je
out
fwait
arpl
into
mov
mov
adc
test
gs
cwtl
inc
shlb
stos
mov
cmp
mov
push
jp
xchg
fcoml
push
xchg
add
in
xor
rcll
mov
lds
fnstenv
jno
pop
mov
call
rorb
or
or
ljmp
lods
mov
xchg
inc
dec
mull
xchg
push
mov
imul
leave
aam
xchg
mov
dec
inc
je
mov
jp
jo
data16
rolb
fmulp
sub
xchg
and
rcrl
mov
inc
jp
fildll
ficoms
data16
add
outsl
or
sar
adc
test
mov
out
and
sub
jo
scas
jg
dec
test
xor
dec
pop
adc
xlat
cli
lods
and
sub
imul
fprem
icebp
mov
divb
inc
pop
js
lcall
jno
cmp
sub
andl
push
nop
push
fbstp
pop
and
jo
fadds
and
jmp
fstl
jo
shlb
hlt
jbe
pop
xchg
hlt
repz
xchg
sbb
imul
mov
mov
je
in
push
enter
andl
pop
pop
inc
aam
aam
xor
add
sub
js
mov
movsb
stos
scas
les
call
ljmp
lahf
mov
jb
ror
and
inc
int
jmp
mov
mov
push
stos
jnp
into
mov
push
push
js
adc
mov
mov
pop
sub
loop
add
iret
lods
mov
call
aaa
push
dec
icebp
ss
sar
jle
adcb
mov
mov
adc
xlat
xor
push
mov
test
mov
mov
adc
out
outsl
push
cmp
or
adc
iret
or
sub
mov
mov
out
dec
int3
xlat
xor
pop
cmc
pop
data16
fcmovbe
xlat
inc
or
pop
sbb
sub
int
inc
loopne
insb
add
mov
lods
shll
fidivs
sub
jo
xchg
mov
jae
vpaddsb
movsl
lret
mov
dec
leave
imul
mov
imul
adc
sub
xchg
push
sbb
jb
sub
into
stos
push
jno
cmc
je
stc
aas
push
xor
inc
fisubrl
add
dec
adc
mov
loopne
mov
add
js
add
cmp
adcb
xchg
setg
movsl
adc
adc
aas
fiadds
psubusb
faddp
test
out
fistpl
mov
pop
mov
mov
pusha
divb
aam
lods
jg
sub
inc
shrb
sbbb
push
xchg
mov
jge
push
das
sbb
jmp
cld
cmp
inc
pop
lods
jo
inc
mov
hlt
adc
popf
mov
or
out
push
ffreep
sbbl
fimuls
jo
outsl
add
fdivl
mov
lds
scas
xor
in
push
mov
inc
int
dec
dec
mov
xchg
daa
dec
nop
ret
aam
bound
jns
int3
lds
or
ret
lods
dec
or
xor
adc
sar
pop
or
hlt
push
xor
popf
lcall
lea
push
into
fmulp
push
lds
in
fbstp
sub
pop
leave
leave
cmp
xor
mov
out
push
push
and
sti
addr16
clc
fimull
data16
add
add
dec
pushf
inc
leave
fscale
dec
xchg
pop
mov
jge
and
cltd
jo
jo
mov
pop
pop
imul
xchg
lods
cmp
mov
adc
and
stos
sbb
sbb
aas
jo
fdivs
dec
mov
loope
filds
gs
cwtl
pop
mov
sub
lahf
sbb
sbb
pop
mov
out
pop
add
mov
cs
or
inc
mov
mov
inc
jge
jbe
and
fwait
cli
adc
push
pop
and
mov
jmp
and
leave
sub
ljmp
sub
lret
sti
push
enter
in
and
in
scas
push
nop
or
pop
jnp
pushf
stos
icebp
pop
loop
in
ljmp
push
fsubrl
mov
mov
sti
inc
or
mov
notl
scas
mov
dec
imul
and
loop
jo
inc
and
pop
pop
add
sahf
pop
inc
out
ds
mov
and
out
add
sbb
into
fidivl
or
inc
or
xor
jle,pt
pop
cli
stos
mov
sub
pusha
clc
mov
sub
bnd
insb
cli
ret
and
cmpsl
fsts
push
ret
mov
lods
rolb
mov
jbe
movsb
and
sbb
lods
xor
scas
pusha
push
daa
push
dec
inc
sub
mov
push
ret
and
sbb
or
dec
push
mov
xchg
cmp
mov
filds
mov
stc
cmpsb
fucomi
sarl
mov
test
add
adc
mov
out
aad
xor
shlb
outsl
loopne
shl
mov
int3
push
inc
in
pop
mov
add
dec
pop
xchg
pushf
loop
push
jecxz
rcrl
or
sbb
xchg
xchg
lods
mov
loop
dec
int
mov
dec
pop
lahf
sahf
es
imul
and
inc
push
shrb
sahf
pushw
enter
add
int3
notb
xor
incl
ficoms
shrl
push
adc
push
sbb
sbb
enter
xchg
dec
es
sbb
add
mov
ljmp
jp
stos
ss
int
in
icebp
and
in
jbe
movsb
clc
cmpsb
rclb
clc
mov
jns
pop
xlat
or
inc
dec
add
into
out
cmp
lea
push
out
ret
lea
fistl
clc
add
inc
and
adc
les
jo
dec
push
mov
fstl
jp
insl
xor
add
mov
adc
xchg
test
or
mov
sub
mov
and
mov
ret
js
dec
xchg
std
inc
jmp
test
jns
aam
or
ret
cs
lods
popw
cmpb
xchg
jae
xor
sub
jg
outsb
cmp
mov
push
and
mov
imul
into
movsb
and
inc
outsb
dec
inc
movsb
mov
add
mov
mov
push
sahf
pusha
and
adc
pop
and
cltd
adc
or
movsb
jl
push
cmp
mov
aaa
stos
adc
hlt
paddusb
fcoml
sub
mov
add
sub
imul
insl
jl
cli
jns
and
xor
mov
rcrb
mov
dec
pop
out
or
fcomip
mov
mov
mov
push
imul
sbb
mov
push
xchg
aad
xchg
inc
shrb
add
stc
in
popf
jae
das
push
test
cmp
nop
adc
sbb
fidivrl
ds
mov
pop
test
inc
mov
leave
cmp
jno
sti
dec
xor
mov
insl
std
jg
inc
pushf
and
rolb
mov
adc
fdivs
mov
lods
mov
ljmp
movsl
jnp
sbb
pop
mov
icebp
mov
pop
jle
hlt
je
ret
jo
popf
and
sub
jge
stos
sub
pusha
movsb
sub
call
out
jbe
xchg
mov
xchg
mov
test
test
cmpsl
mov
iret
out
je
sub
je
push
dec
jns
mov
sbb
jge
adc
cmp
jecxz
sbb
js
mov
jnp
xor
mov
mov
imul
mulb
ja
adc
adc
das
icebp
das
xchg
adc
mov
jnp
gs
and
dec
ret
dec
mov
push
fsubr
mov
loop
movl
and
pop
idivb
pop
push
dec
adc
add
jmp
xorl
add
test
aas
xchg
scas
pop
xchg
mov
jbe
movsb
insb
ja
jle
mov
aas
pop
bound
out
addl
loop
push
pop
pop
arpl
fdivrs
sarl
fidivrl
mov
push
pop
cmp
je
jbe
mov
andb
pop
fidivrs
mov
sub
lock
aad
insl
adc
das
jp
push
pop
pop
add
nop
mov
jns
or
daa
xor
mov
pushl
mov
jge
jno
loopne
push
repz
into
push
gs
stos
in
and
push
xchg
cltd
xor
pop
ja
sub
mov
mov
lcall
xor
sub
mov
cwtl
js
arpl
jl
jnp
xor
mov
inc
fwait
sbb
fildl
inc
sbb
addr16
pop
sub
test
dec
mov
mov
push
push
loopne
push
jle
insl
lds
mov
and
cmp
jmp
mov
adc
push
ficoms
call
xor
ficompl
clc
and
fcoms
mov
arpl
in
lea
ds
mov
hlt
out
push
cs
xorb
movsb
cwtl
int3
dec
or
rclb
pop
pop
ja
imul
insl
adc
jge
out
sbb
ret
xchg
test
enter
scas
adc
jne
sti
add
or
outsl
scas
or
roll
stos
lahf
or
mov
pop
xchg
push
ret
decl
jge
fs
sahf
fsubrs
add
sub
out
stos
mov
fbld
outsb
and
std
fcoms
loopne
and
jp
add
push
push
repnz
sarb
pop
xor
lret
movsb
jnp
shll
xlat
insl
jae
xchg
stc
cmpl
nop
inc
pop
jl
jnp
imul
nop
in
pop
es
inc
insl
inc
sub
jno,pt
or
shrl
mov
jl
iret
leave
arpl
lds
cmpsl
addl
push
arpl
nop
push
fucomi
aaa
out
sub
mov
xchg
inc
xchg
dec
dec
popa
cmp
push
or
lret
adc
add
jmp
inc
xchg
dec
call
addr16
test
stos
arpl
mov
push
add
fisubrl
inc
jae
addr16
out
stos
dec
jecxz
fists
and
jmp
adc
mov
push
aas
or
add
pop
loopne
cmp
ss
stos
mov
mov
pusha
cli
mov
stos
cmp
xchg
add
push
fidivl
mov
pop
xchg
sub
cmp
inc
out
sub
pop
loope
sbb
leave
test
outsl
cwtl
push
ja
out
or
jg
sahf
and
aad
pop
cli
dec
orb
sarb
icebp
dec
ljmp
jle
je
aaa
int
pop
xlat
shrb
mov
lock
icebp
push
enter
cwtl
cmp
inc
push
jnp
xchg
loop
xor
pushf
inc
sub
into
pop
les
ss
xor
sub
cwtl
mov
in
mov
or
std
rcr
pop
xorl
fisttpl
add
cmp
pop
lock
push
pop
sub
test
push
sbb
add
mov
sbb
xchg
xchg
ja
xorb
gs
lcall
dec
xchg
lret
inc
cmp
loope
jecxz
mov
cmpsl
stc
dec
mov
insb
and
sub
cmc
pop
jb
mov
fdivp
sbb
cmp
pop
loope
std
clc
sbb
inc
jbe
int
or
dec
call
xchg
sbb
into
fldl
pusha
and
and
lahf
cmp
mov
pop
xchg
enter
lock
xchg
scas
rcrl
xchg
cmpsb
adc
inc
fstpl
push
jno
dec
inc
sub
std
mov
icebp
repz
stos
movsl
shl
rcll
out
xor
shl
lahf
xchg
xchg
loopne
mov
ficomps
repnz
testb
push
mov
js
lahf
push
sub
imul
cmp
push
add
xchg
mov
jmp
aam
mov
mov
inc
into
adc
dec
inc
push
ja
ret
das
sbb
jl
sbb
es
push
ljmp
xor
iret
shll
add
orb
xchg
fs
cmp
clc
pop
or
mov
stos
shrb
inc
xchg
lods
push
cwtl
add
scas
cwtl
adc
inc
push
push
lret
icebp
cmpsl
lcall
add
or
movsb
mov
aas
xchg
add
cmp
xor
cmc
cmpsl
push
mov
xchg
sarl
clc
xchg
sub
jb
ja
mov
dec
xchg
jecxz
mov
and
fwait
inc
dec
cmp
mov
insb
mov
mov
andb
adc
or
pushl
lret
divps
fdivs
push
test
stos
inc
cmp
mov
adc
mov
scas
imul
inc
jns
sbb
bound
lar
add
aam
and
nop
aas
test
cwtl
rol
push
into
sub
mov
lret
lods
out
es
je
pop
out
mov
mov
in
gs
ja
iret
lret
sub
shl
inc
pusha
sub
cmp
pop
icebp
loop
mov
add
outsl
adc
adc
test
adcb
ja
mov
cmp
sub
sbb
mov
push
jno
dec
pop
push
push
lock
pop
outsl
sub
adc
cmc
pop
pop
push
repz
jns
mov
movsb
ja
pusha
pop
jecxz
push
test
sbb
daa
imul
adc
pop
inc
arpl
dec
add
sbb
sbb
adcb
push
fstl
pop
lahf
call
push
push
jb
add
repz
sbbb
gs
and
pop
xchg
cmc
in
ret
mov
sub
test
loop
xchg
inc
cmp
and
cmpsb
stc
in
mov
ret
sbb
les
mov
lds
or
lods
add
in
clc
rcl
out
mov
mov
jnp
adc
bound
add
jbe
xchg
adc
mov
lret
stc
xchg
fdivrl
xchg
sub
mov
mov
xchg
dec
nop
mov
ret
xorl
xor
lcall
lea
inc
hlt
mov
loopne
jge
lret
sets
xor
les
rol
rorb
mov
loope
fwait
push
add
xor
js
sti
inc
xchg
int3
add
fdivl
mov
daa
push
dec
ljmp
sbb
out
sub
push
mov
mov
mov
xchg
je
test
neg
mov
adcb
cmc
add
pop
or
nop
cmpsb
loop
jno
in
mov
fs
lret
fsubl
and
lea
cli
cwtl
popf
pushf
imul
iret
sub
ss
outsl
sub
test
mov
pop
out
mov
fstps
outsb
and
xchg
jg
shll
pop
push
sbbl
out
sahf
jns
pop
clc
sarb
cli
out
adc
xor
lret
or
push
in
loope
shrl
imul
add
out
xorb
ret
cmp
sbb
test
js
lea
insl
cmp
jo
cwtl
inc
sahf
sub
cltd
icebp
sub
arpl
xor
sbb
mov
shrb
or
sbb
bound
mov
push
leave
dec
mov
incb
cmp
or
adc
push
scas
mov
inc
es
loop
jbe
stos
mov
out
add
and
sbbl
cld
push
jns
push
jg
push
adc
imul
iret
mov
jmp
add
mov
adc
adc
adc
test
sbb
mov
xor
xor
push
lea
out
mov
pop
jns
iret
repnz
sbb
int
movsb
test
inc
cmpsl
ja
popa
pop
idivb
bsr
push
mov
push
push
push
je
stos
mov
sub
sbb
sub
pop
xchg
popl
sub
fmull
popf
outsb
movsb
and
and
xlat
mov
loop
dec
or
dec
mov
out
mov
xchg
shlb
and
push
jecxz
cmc
xchg
icebp
ljmp
data16
mov
inc
hlt
inc
inc
gs
xor
cmp
adc
filds
mov
xchg
mov
xor
push
xchg
sub
jne
pop
repz
pop
sub
jl
xchg
mov
push
jg
into
iret
sub
or
sub
pushf
lcall
add
mov
and
jp
das
and
bound
cmp
xchg
inc
xchg
inc
int
mov
push
push
pop
dec
lods
jb
ret
sub
call
popf
mov
int
and
jo
jg
inc
push
xor
mov
lret
xchg
sbb
int
pop
out
addr16
repz
gs
notb
fsub
push
in
inc
into
lret
lds
lods
or
aam
outsb
push
es
aas
std
sbb
and
xor
xchg
fdivr
lea
and
rcll
pop
mov
dec
ja
idiv
pushf
es
add
jl
lahf
mov
add
dec
push
aad
mov
jnp
mov
sbb
dec
or
xorl
aad
dec
stos
jbe
mov
mov
pop
add
mov
xchg
mov
xchg
push
lret
fs
xor
xor
add
cmp
std
xor
cli
and
inc
inc
shll
je
xor
loope
mov
fsubrs
pop
je
aad
mov
mov
inc
fs
inc
and
pop
lock
stc
mov
jnp
sti
adc
add
add
sub
int
xchg
negb
or
clc
jne
xlat
mov
lds
dec
mov
jp
iret
les
aad
nop
test
mov
loope
les
ret
into
and
imul
mov
out
jnp
adc
shrl
lea
rcr
xor
addb
not
les
pop
out
push
cmp
aaa
sub
mov
jecxz
sub
and
sbb
daa
jp
int3
fwait
adc
jmp
pop
xchg
mov
xchg
add
sbb
rcll
stc
out
icebp
das
es
sub
push
pushl
mov
mov
movb
jns
scas
mov
xchg
dec
test
and
mov
jmp
ret
loope
adc
xor
inc
and
mov
imul
data16
ret
out
jge
arpl
ret
adc
pushf
xchg
pop
xchg
xor
cwtl
sub
hlt
adc
mov
inc
jns
leave
sarl
ret
cld
into
jns
test
out
fidivl
clc
jno
loopne
sahf
sub
repz
adc
add
shl
fld
lds
pop
test
sbb
xchg
enter
mov
or
sbb
fnstenv
cmp
sub
or
pop
in
cs
cmp
bound
push
inc
pop
scas
mov
stc
mov
jg
imul
and
xchg
xchg
lret
xchg
mov
adc
sub
mov
push
notl
push
fsts
mov
aaa
cmp
sarb
incb
or
fnstenv
clc
inc
and
adc
cli
xor
fwait
push
mov
lods
std
push
or
stos
aad
outsb
movsb
std
inc
rcll
aas
and
pop
xor
adc
inc
test
dec
fs
and
scas
enter
mov
test
mov
or
mov
call
mov
jge
repz
xor
add
repnz
and
dec
int3
in
lret
inc
fs
mov
mov
lods
call
and
xchg
add
std
les
mov
sbb
jnp
xchg
das
cltd
ret
jmp
xchg
sahf
cli
sti
dec
pop
and
dec
aam
imul
push
sub
pop
in
in
ja
xor
cs
cs
jns
fcoms
fdivr
mov
sub
mov
rclb
push
shll
test
pop
inc
fwait
or
insl
or
and
aad
repz
shl
lsl
jmp
adc
add
push
mov
pop
mov
jge
xchg
push
xchg
jno
adc
jl
aam
fldpi
in
jp
cltd
aad
lahf
aad
pop
nop
test
adc
fisubl
adc
mov
shlb
pusha
mov
xchg
call
sub
pop
push
cmp
inc
jbe
or
mov
out
shlb
sti
sahf
xor
push
mov
add
push
pushl
or
mov
cmpl
sub
add
xchg
pop
js
movzwl
xor
jmp
popa
mov
inc
rolb
pop
or
das
and
adc
pop
movsl
aas
addr16
hlt
outsl
ljmp
aam
jbe
bound
movl
mov
adc
mov
sub
inc
sahf
push
sub
adc
rcrl
xchg
sahf
sub
xchg
jns
and
ljmp
pusha
add
sbb
push
add
and
nop
jbe
xor
xor
jne
icebp
jl
jo
mov
jbe
lret
push
add
xchg
mov
or
test
xchg
iret
leave
fldt
inc
xchg
in
pop
pop
push
in
iret
rol
jne
mov
js
inc
xor
pop
pusha
addb
adc
mov
mov
repz
mov
hlt
out
loope
rcrb
aaa
shlb
cli
insb
mov
andl
aas
cld
mov
rorl
jnp
push
push
cltd
popa
xchg
cmp
add
xor
inc
mov
mov
add
dec
cltd
jns
inc
mov
rcl
jmp
push
push
clc
in
fldcw
divl
je
cmp
pushl
lcall
es
ljmp
sbb
dec
pop
stos
fs
pop
cmp
push
ficoml
sarl
or
ja
jnp
inc
jae
xchg
dec
fcmovbe
mov
mov
fs
mov
mov
adc
adc
imul
mov
sub
jbe
shll
insb
repz
xchg
sub
sahf
popa
int
into
inc
in
insl
jge
fldenvs
and
stc
push
lods
adc
xchg
loop
jecxz
sbb
imul
sub
sub
xchg
mov
jmp
jnp
std
lea
add
mov
aaa
imul
mov
mov
or
xchg
rol
inc
popa
jle
xchg
dec
inc
stos
pusha
clc
test
loopne
sbb
inc
fstl
sbb
mov
mov
mov
out
push
mov
not
pusha
in
in
ss
or
sti
pop
xor
shll
in
fsubl
repz
push
sbb
mov
and
and
fucom
and
xchg
sbb
dec
xlat
loop
dec
das
shll
cwtl
pop
xchg
inc
das
arpl
and
int3
fists
iret
sub
adc
lret
mov
in
mov
js
adc
push
sbb
nop
sahf
daa
roll
or
mov
scas
cs
addr16
adc
test
in
fdivs
jae
pop
jle
lret
lret
imul
pop
outsl
dec
test
jbe
leave
int3
adc
inc
jmp
adc
rcrb
jne
cmp
jg
lea
fwait
js
xor
push
roll
sub
push
xor
sub
or
stos
dec
inc
jbe
shll
pop
sbbb
cmc
sub
inc
adc
jne
pop
insb
xchg
inc
jecxz
aam
leave
xchg
jl
lret
mov
pop
int
cltd
dec
out
dec
leave
jne
scas
loop
xchg
fdiv
shlb
loop
inc
arpl
stos
in
repz
scas
pop
jmp
inc
int
in
in
mov
sub
or
scas
mov
or
jg
add
adc
lds
jno
addl
dec
sub
cli
es
icebp
jno
sti
aas
aam
mov
cmpb
jle
cli
insl
cmc
enter
shll
fists
movlps
inc
pop
pop
adc
xor
adc
pop
mov
push
scas
adc
add
stos
or
cmp
push
xor
dec
shl
push
int3
sub
push
pop
shlb
add
dec
dec
push
repnz
push
in
push
jecxz
orl
pop
dec
popa
fistl
popa
cmpsb
leave
mov
mov
loopne
lods
mov
inc
and
sub
in
ret
push
pop
rolb
data16
popa
lock
push
mov
leave
aam
jnp
ret
jae,pt
imul
lods
dec
in
xlat
dec
fwait
inc
pop
iret
push
mov
divl
push
sbb
mov
inc
push
push
shrb
mov
mov
cmp
ret
jge
lock
mov
mov
sbb
or
jo
mov
bound
adcb
add
dec
gs
movsl
mov
mov
mov
cld
shrl
js
mov
sti
mov
ds
es
lcall
sbb
leave
xchg
pop
inc
mov
stos
xchg
mov
jp
fldl
jmp
or
mov
subb
cmc
sub
push
cmp
and
cli
imul
sub
xchg
push
jmp
data16
pop
jmp
out
mov
int3
in
add
je
xor
cmp
inc
ficoms
mov
and
pop
stos
cmp
pop
cltd
clc
pop
cs
mov
repz
xor
xchg
sbb
push
cmc
aad
flds
test
pop
fbld
fstp
icebp
js
pop
clc
push
nop
mov
xor
sub
mov
icebp
incl
dec
inc
push
cmp
xchg
jecxz
cwtl
fistpll
xchg
or
aam
mov
loope
cltd
adc
push
mov
enter
arpl
xor
pushf
mov
int3
or
and
mov
push
sarl
out
mov
nop
sub
sub
xlat
mov
push
sub
jge
int3
mov
and
pause
sbb
shr
hlt
stc
inc
jecxz
loope
mov
mov
mov
add
cmp
and
add
ffreep
jnp
or
int3
inc
neg
push
mov
cmp
push
test
leave
fldl
pop
and
and
pop
in
addr16
inc
inc
push
pop
pop
add
out
add
fwait
das
dec
lahf
pop
adc
push
mov
sarb
in
mov
mov
xchg
ret
mov
nop
call
sbb
inc
ss
lret
mov
cmc
call
jne
iret
add
orl
push
xor
adcb
mov
std
scas
jmp
push
mov
bound
je
mov
jo
stc
sub
fdiv
mov
leave
fsubs
jbe
adc
cld
push
jns
xor
dec
mov
or
lcall
jmp
sbb
cmp
sbbb
dec
push
jg
sti
dec
out
xchg
ret
jecxz
or
cmp
popf
push
incb
mov
pop
push
orl
sub
daa
push
outsb
inc
mov
dec
mov
das
or
sarb
popl
in
stc
xor
aaa
mov
jne
int
lock
pusha
ret
xchg
fwait
mov
pushl
jbe
adc
pop
sub
mov
call
incl
pop
stos
fmul
adc
push
lock
sbb
push
sbb
lea
xchg
test
xchg
test
xor
enter
iret
xor
cwtl
lods
cmp
repz
ja
cmpsb
xor
insb
add
adc
sub
mov
pop
mov
jno
test
add
pop
pop
scas
inc
jbe
movsb
pop
sbb
adc
fwait
scas
outsl
cs
jno
pop
cmp
add
xchg
and
mov
loopne
leave
lahf
aad
sbb
mov
xchg
push
in
in
jb
mov
stc
insl
mov
sbb
aaa
adc
rcrb
dec
push
scas
test
sub
mov
ret
cmpsl
sub
clc
es
or
jp
shll
xor
pusha
ds
push
js
daa
or
or
and
push
push
inc
sar
xchg
sub
insl
aam
xchg
push
xchg
add
jmp
sbbb
inc
sbb
loope
inc
je
stos
ret
pop
mov
pop
insl
sbb
dec
cmpl
movsb
test
leave
or
inc
stos
ret
shl
jecxz
shlb
repnz
mov
mov
cltd
in
mov
push
xchg
mov
shl
movsl
roll
and
pushf
cmp
add
insl
mov
jbe,pn
pop
movsb
out
dec
sbb
fs
and
or
imul
adc
fwait
std
push
mov
jg
dec
xor
ret
ja
mov
ljmp
cld
je
daa
pop
xchg
and
call
mov
xchg
push
gs
mov
push
xchg
popf
xchg
mov
dec
fnstsw
mov
jb
mov
pop
movsl
in
popa
push
mov
mov
dec
push
mov
mov
aas
mov
mov
sbb
pop
loop
int
movsl
xlat
mov
stos
es
rol
jnp
push
cmp
sbbb
jmp
out
scas
or
test
rcll
sbb
ds
mov
inc
lods
push
adc
sub
xlat
rolb
mov
jb
aad
mov
adc
in
pop
dec
xor
cmp
test
adc
adc
movsl
inc
mov
imul
pop
mov
and
pusha
ja
xchg
lods
test
mov
popa
jae
or
popf
xchg
gs
cwtl
divb
sub
or
push
adc
add
cmc
jp
xlat
daa
or
xchg
push
sub
dec
stos
lock
icebp
mov
aad
jecxz
loopne
inc
mov
jb
stos
in
gs
xchg
xchg
mov
out
inc
add
cmp
jb
mov
mov
fdivrl
cmp
jbe
xor
sbb
sbb
ljmp
inc
jl
cld
clc
push
mov
outsb
dec
push
loop
ljmp
jl
movnti
stos
adc
stc
cmp
push
cmc
inc
mov
lahf
mov
xor
push
mov
add
iret
dec
cli
das
fiadds
loopne
stos
xchg
xor
int
ret
sub
inc
decl
test
insb
shlb
adc
jle
sbb
or
mov
cli
ficoml
add
or
inc
test
pop
lds
movsb
lea
cltd
lcall
loopne
fwait
in
test
sarb
mov
mov
xchg
in
jb
mov
std
jp
ret
loop
push
cmpsb
dec
sbb
test
dec
lock
mov
fldenv
pusha
lcall
lret
sub
add
sbb
jecxz
lock
xor
rcrl
pop
lods
hlt
pop
pop
xchg
imul
in
imul
lcall
mov
sbbb
sub
pop
push
push
mov
mov
xchg
xchg
add
cltd
adc
add
pop
std
and
mov
pop
push
pusha
bound
aaa
push
jle
mov
or
or
bound
daa
rcrl
pop
mov
xchg
out
ljmp
jle
rorl
jns
stc
or
out
in
roll
mov
insl
leave
cmp
and
cmpsb
pop
inc
int
sarb
out
enter
mov
mov
mov
push
cmpsb
data16
test
xchg
enter
jae
xchg
pop
stc
jae
les
jmp
or
cs
add
cmp
dec
rclb
and
inc
inc
out
int
fidivrs
ljmp
sbb
shll
lret
out
ficomps
pop
lock
repz
xchg
xor
gs
out
packuswb
push
aaa
cmpl
jl
ss
mov
hlt
inc
mov
not
js
sub
jecxz
adc
cs
rol
cli
inc
sti
adc
push
gs
or
sub
mov
fcoms
pop
mov
hlt
inc
pop
nop
add
push
sub
sub
lods
mov
and
movsb
les
imulb
dec
cmp
ror
jp
mov
iret
mov
push
inc
popa
es
in
das
dec
lods
push
pusha
inc
xchg
mov
adc
xor
orb
sub
mov
idivb
cmc
xor
test
xchg
movsb
lret
testb
push
rcrl
dec
lock
arpl
cmp
int3
iret
lret
lock
fs
adc
std
loope
dec
divl
adc
mov
fwait
pop
mov
daa
aam
idivb
in
out
sbb
mov
sbb
dec
fcoms
out
xor
lahf
test
jb
out
sti
sub
add
jecxz
cmp
cmp
fmuls
jmp
hlt
push
xchg
jns
lock
sub
push
xchg
adc
mov
inc
adc
enter
gs
pusha
lret
aas
sub
sub
shlb
add
xlat
ror
xor
mov
add
shll
shrl
mov
push
insb
sbb
inc
icebp
cs
test
push
in
bound
jae
mov
cmp
lret
pop
push
lret
rcr
out
dec
or
cmc
aaa
inc
outsl
cmc
cld
je
push
and
es
iret
and
stos
inc
or
popf
mov
xor
xchg
mul
pop
ffreep
lcall
or
into
cmpsb
iret
fsub
sti
scas
insb
push
aas
sarl
xor
adc
aam
ret
jbe
sub
fldt
stos
loope
int
test
mov
fisubrl
push
clc
mov
hlt
je
sub
cltd
lcall
jnp
inc
movsl
aas
jge
add
pop
hlt
sbb
out
and
leave
push
jl
cmp
insb
lret
xchg
jge
fcompl
cmp
add
lret
mov
lcall
testl
in
jbe
popf
dec
dec
xlat
ret
lea
jp
subb
and
cmp
pushf
jb
pop
push
fsubs
les
popl
sbb
cs
bsr
adc
aas
xchg
mov
sbb
xchg
shll
hlt
into
aas
mov
cli
jb
push
sbb
cmp
insl
stos
cmp
sbb
xchg
jp
fstpl
sti
pushf
out
pop
ret
fwait
mov
mov
or
rcrl
push
add
adc
mov
daa
jb
pushf
mov
push
popa
scas
rolb
repnz
adc
mov
mov
jp
mov
cwtl
xchg
push
xchg
out
pop
sbb
inc
repnz
or
call
pop
dec
enter
add
xlat
jge
int3
fs
inc
dec
fisubrl
pop
test
xlat
insb
push
sbb
and
fistl
adc
xchg
xor
icebp
adc
pop
xor
xorb
loope
sbb
jg
inc
push
insl
aaa
fcoms
call
mov
sub
mov
ret
test
test
out
cld
aad
loopne
xchg
je
xchg
mov
ret
ret
xchg
and
push
jg
sub
cmpb
ljmp
pop
hlt
xor
cli
outsl
xchg
mov
cmc
mov
xlat
add
pusha
loop
push
ja
test
cli
addb
push
xchg
xchg
dec
data16
mov
jne
test
rcrb
dec
jnp
pop
pop
inc
cmp
mov
repz
jmp
stos
dec
dec
mov
enter
outsb
cmp
push
push
cmp
mov
lock
add
pop
mov
jle
frndint
test
int3
jne
orl
arpl
fldl
in
cmp
orb
xchg
mov
adc
and
insl
sbb
cwtl
into
adc
mov
mov
adc
add
jne
dec
add
inc
push
cmc
jg
and
mov
jae
push
and
call
cmc
mov
movsl
pop
ljmp
xor
cwtl
push
std
add
sub
adc
sahf
stos
loopne
push
pop
and
sub
insl
mov
movsl
pop
xor
cwtl
mov
and
ss
ret
outsb
add
mov
xor
sbb
inc
nop
mov
pop
cmp
scas
leave
and
push
in
insl
ja
dec
jl
daa
gs
adc
dec
and
or
or
mov
lds
sysret
sbb
int
repz
or
xchg
call
fldenv
call
dec
push
stos
jbe
sub
icebp
movsl
and
push
outsb
dec
lods
push
xchg
inc
or
stos
push
xchg
cmp
jmp
jb
sbb
lahf
xchg
and
imul
fisttpl
iret
mov
adc
xor
fiadds
test
pop
jp
shlb
lcall
fildll
xlat
scas
stos
mov
jo
jle
jecxz
movsl
cmpsb
cwtl
lods
inc
and
repnz
inc
test
xor
es
lahf
sbb
fiadds
mov
addl
mov
outsl
add
call
sbb
cltd
lcall
cli
idiv
sub
das
les
mov
movsb
jge
insl
insl
xchg
leave
fcmovne
mov
mov
mov
xchg
dec
addb
xchg
imul
popf
popf
inc
out
jbe
insb
inc
pop
add
push
mov
gs
mov
mov
jmp
test
pop
pop
and
mov
push
cwtl
jne
into
flds
sbb
sbb
mov
or
sbb
data16
push
sub
jg
sub
dec
iret
roll
test
je
mov
imull
mov
stc
dec
sub
add
jmp
mov
pop
push
fwait
dec
xor
push
pop
test
xchg
sbb
imul
and
jmp
ja
sub
push
sbb
outsl
arpl
jp
or
mov
loop
mov
fcmovbe
sbb
in
aas
pushf
adc
popa
sahf
rclb
lea
jno
jge
inc
enter
inc
adc
xchg
fstpl
push
movsl
inc
xor
std
cmpsb
lods
pop
insl
cmp
ffree
push
bound
sub
loopne
outsl
add
and
push
push
out
adc
cmp
sub
jbe
popf
mov
push
jl
movsb
shl
push
js
lcall
lds
jmp
mov
outsb
testb
jo
or
lods
out
insl
into
push
aam
shll
or
adc
xchg
in
insb
dec
add
xor
push
popw
les
stos
cmpsb
lds
sub
jmp
popf
ja
arpl
lret
clc
out
inc
xchg
out
je
in
mov
jnp
pop
xor
movsb
sbb
pop
mov
inc
addr16
push
adc
in
dec
pop
jecxz
aam
test
ss
cld
gs
cli
or
repz
sbb
jle
rorl
mov
imul
imul
test
pop
pusha
push
dec
xchg
add
adc
adc
sbb
das
icebp
mov
xlat
in
sub
aas
push
adc
outsl
jb
leave
jmp
sarl
mov
xor
aas
mov
and
sub
leave
roll
inc
sbb
sub
stos
mov
loop
fiadds
test
and
adc
jno
cwtl
fiadds
lahf
test
jg
ret
fs
or
sub
jnp
xor
mov
mov
push
popf
sub
pusha
fstpt
lcall
pop
add
push
cmpsl
xor
or
or
pop
cmp
jge
gs
sbb
ja
add
popa
jmp
push
dec
dec
cmp
mov
scas
sar
popf
xchg
inc
xor
mov
das
jmp
push
mov
std
pop
in
sbb
adc
in
repnz
mov
fdivl
dec
inc
jg
sti
jnp
fisubl
or
fistl
ret
xlat
repz
lahf
mov
sbb
mov
rolb
inc
jge
movsb
push
pop
pop
arpl
cli
addb
test
pop
dec
mov
or
jns
andb
mov
mov
add
adc
fbld
and
jg
jle
pop
pop
push
cmp
cltd
xor
and
daa
mov
rcrl
dec
movsb
popf
mov
addr16
stos
pusha
pop
inc
cmp
cmp
int
sbb
repnz
outsb
cmp
push
and
cmp
add
lret
call
pop
movsb
out
cmp
sub
sub
rcll
jge
out
cmp
push
sub
pop
rclb
call
rorl
xor
adc
imul
inc
bound
xchg
sti
pop
jp
das
arpl
scas
movsl
clc
bnd
fldl
and
pop
add
mov
das
lea
mov
hlt
sbb
outsb
jg
jbe
test
repnz
mov
xorl
rcll
and
mov
pop
popa
xchg
inc
fsub
mov
stos
xchg
sbb
leave
mov
sub
lahf
xor
push
rcl
int3
mov
dec
jmp
or
divb
data16
stc
pop
in
jne
mov
jbe
xlat
mov
cmp
pop
dec
dec
in
daa
sbb
sub
jmp
mov
xchg
pop
mov
adc
test
aas
fidivrl
jmp
imul
push
pop
std
inc
ret
sub
jl
cltd
je
inc
pushf
cmp
std
adc
cmp
dec
mov
femms
cmc
in
xchg
sbb
sar
add
cmp
adc
push
lret
test
xchg
and
push
jne
pop
mov
shll
mov
fucomi
sub
seto
pop
pusha
mov
popf
pop
imul
xor
outsb
xchg
decb
push
dec
ljmp
xchg
push
mov
aaa
stc
aas
scas
dec
iret
aad
xchg
sub
mov
sub
sti
icebp
bound
mov
loope
outsl
cwtl
pop
dec
mov
lock
push
rol
sbb
sbb
popa
outsb
imul
ljmp
out
div
jl
ja
pushf
test
push
mov
push
dec
in
outsb
addr16
and
xor
sahf
jmp
lea
sbb
call
mov
sbb
mov
sbb
sbb
sbb
jl
xor
lret
cs
repz
mov
jmp
aad
mov
cmpsl
sub
shlb
add
cmpsb
rcrb
scas
adc
sub
popf
dec
adc
inc
lds
and
mov
fdivs
adc
shll
xchg
stos
outsb
mov
cltd
jp
repnz
std
jnp
loopne
cmp
pushw
mov
xchg
ss
sbb
pusha
mov
inc
fiadds
jge
or
imul
sbbl
out
push
imul
jae
hlt
orl
inc
lods
adc
cmp
insb
lret
or
fucom
pusha
add
xchg
sti
aaa
mov
mov
adc
test
sub
xor
sbb
pop
aad
mov
pop
or
sbb
imull
push
push
adc
cmp
aad
mov
inc
pop
popf
xchg
jg
into
outsl
insb
mov
cli
sub
xchg
fcompl
out
sub
ss
xor
xlat
push
add
and
jo
and
adc
sahf
pop
call
inc
fwait
sbb
stos
aas
xor
imul
jl
gs
fadd
imul
outsb
and
inc
dec
mov
lahf
andl
addr16
nop
cmp
mov
mov
mov
pop
pop
fs
cltd
insb
notb
xchg
dec
shlb
sbb
and
fdivs
shlb
les
pop
xchg
dec
les
dec
je
add
into
stc
and
pop
gs
lret
pop
popf
pop
dec
adc
jmp
insb
insb
int3
mov
xchg
dec
int
fisttpl
or
mov
mov
inc
add
xchg
mov
sub
sbb
push
mov
pop
loop
inc
push
push
adc
add
cmp
sar
lock
int3
lahf
hlt
add
xchg
shlb
jg
pop
pop
and
sbb
pop
fiadds
jl
sbb
push
and
scas
jle
out
sub
rcrb
add
or
or
pop
iret
adc
aas
jne
add
data16
fildl
pop
inc
popf
jne
je
iret
sub
js
ja
adc
dec
js
fdivrs
xlat
mov
popf
insb
mov
mov
cmpl
idiv
aad
inc
add
pop
dec
js
dec
push
jle
shll
mov
lea
inc
sub
popf
mov
or
add
sbb
lock
dec
stos
int
loop
lods
jecxz
cmp
aam
aaa
aas
inc
adc
inc
filds
and
sub
loop
dec
inc
lea
scas
lcall
xchg
imul
test
mov
out
push
fisttps
out
mov
je
popa
sbb
dec
mov
mov
dec
sbb
lea
push
inc
adc
push
pop
sti
sbb
cmp
movsl
and
cld
out
loopne
sub
out
xor
dec
bound
adc
test
sbb
fildll
call
test
jmp
add
test
ja
shll
lcall
nop
dec
ficoml
pushf
jmp
cmpb
xchg
push
sub
inc
addr16
jge
into
loop
xor
cmp
in
xlat
xor
push
inc
pop
sbb
jmp
cmp
jmp
mov
sub
pop
sahf
dec
aam
int3
jle
adc
vmwrite
cmp
cmc
cmpsl
psraw
pop
imul
xor
xlat
add
push
xchg
pop
inc
in
xor
pavgw
subb
add
jl
or
and
gs
stos
cmpb
addr16
stc
sti
mov
testb
into
or
fnstsw
push
testb
into
ficompl
insl
cmc
xor
and
in
jg
and
mov
rclb
shlb
mov
or
loop
dec
sbb
and
clc
ret
lahf
cmpsl
sbb
dec
gs
push
push
sbb
or
movsb
mov
xchg
sahf
cmpl
inc
fwait
sub
pop
dec
add
jae
ljmp
add
test
in
int
push
pop
jo
rorb
xor
push
test
sub
fldpi
jnp
loop
lret
ds
inc
aad
jle
stos
jae
ficoml
nop
jb
pop
loopne
enter
insb
insl
loopne
decl
pusha
testl
sub
nop
scas
call
fsubrs
pop
pop
pop
sarb
insb
pop
cmp
or
int3
jbe
fdivrs
dec
cli
lfs
ror
xor
pop
pop
mov
jecxz
adc
jb
lret
out
xchg
inc
test
jmp
fs
xor
fs
lret
daa
nop
jle
outsb
lods
imul
or
push
fwait
addr16
sbb
daa
sub
jmp
mov
andl
pop
push
stos
lcall
mov
sbb
in
pop
adc
arpl
jnp
push
and
jge
fisubl
xchg
loope
lret
xchg
xlat
ljmp
jo
sub
bnd
sahf
push
inc
add
loopne
jne
cmp
ret
testl
data16
sbb
sub
mov
dec
sbb
das
xchg
mov
or
cmpsb
push
shl
je
cmpl
cld
mov
add
clc
test
jb
xchg
or
in
daa
lahf
bound
lret
add
mov
out
popa
or
or
xor
dec
push
pop
inc
xor
mov
aas
jl
or
xchg
leave
mov
dec
stos
inc
and
ss
arpl
pop
push
in
push
push
std
popa
aas
dec
and
jbe
jmp
gs
les
xor
mov
stos
dec
loope
rcl
or
xor
faddl
imul
pop
out
mov
mov
mov
inc
add
pop
mov
jo
mov
imul
mov
sub
out
pusha
add
dec
fnstcw
jno
or
and
cs
fidivl
sub
add
cmpsl
pop
int3
push
mov
add
push
stc
jecxz
popa
mov
push
mov
mov
mov
cmp
mov
nop
mov
mov
pop
in
xor
cmp
notb
movsb
pop
jnp
pop
and
cmp
pop
shrb
xchg
xchg
jno
std
cmp
lds
inc
mov
aam
movsb
and
mov
rol
jns
js
xorb
fsts
scas
mov
subb
sbb
aam
inc
lock
stc
lock
lret
ficoms
loopne
sub
scas
or
or
cmp
mov
mov
push
and
add
out
xor
or
add
jmp
inc
movsl
data16
cmp
xchg
xchg
stos
pusha
sbb
pop
lcall
pushf
inc
xor
sbb
mov
js
insb
add
mov
or
scas
lret
xor
lds
fldenv
mov
mov
add
cmp
shlb
ja
sub
mov
add
xchg
movsl
enter
adc
sbb
shrb
add
dec
and
mov
mov
in
fmulp
es
subb
fwait
dec
aaa
push
mov
push
lds
push
pop
decl
hlt
mov
jle
out
std
stos
loopne
adc
imul
les
sub
push
aad
jo
les
sbb
stc
jl
add
mov
hlt
inc
ljmp
pop
imul
js
or
cli
rclb
xor
jns
sahf
sbb
je
cmp
pop
push
sub
in
add
xor
cmpb
pop
int3
or
outsb
test
sub
jmp
ret
push
and
xchg
push
mov
jge
add
push
pusha
jmp
cltd
lock
popf
mull
ja
aaa
pop
xchg
dec
and
lret
xchg
add
dec
movsb
sub
mov
movsl
movsb
sub
mov
hlt
fistpl
or
aad
jmp
cmc
push
dec
sub
jge
or
dec
cmpsl
add
adc
dec
neg
imul
sbbl
jns
push
dec
stos
pop
sub
stos
sbb
fisttpll
pushf
fwait
inc
sub
mov
ficompl
pop
js
add
pop
lcall
pop
push
inc
insl
je
jp
or
es
cli
mov
divb
outsb
mov
test
push
sbb
test
add
inc
shrw
out
gs
ss
push
lds
jno
inc
pop
aaa
gs
mov
xor
mov
sbb
pop
add
add
shll
fmulp
outsb
sbb
inc
lock
inc
inc
scas
loope
repnz
scas
in
push
pop
js
test
lods
sbb
sub
cli
rclb
adc
pop
das
pop
neg
xor
xor
lret
rcll
out
pop
mov
xchg
lock
hlt
and
mov
mov
cmpsb
inc
cmp
in
inc
cld
xor
dec
sbb
pop
jne
nop
sbb
bound
sbb
sbb
aaa
stos
push
jb
dec
mov
cltd
jns
and
je
orb
dec
push
jns
jns
lods
les
dec
outsl
pop
add
sbb
mov
mov
das
sahf
loop
sbb
jne
cs
movsb
inc
rol
fs
or
push
sub
fsubr
or
jbe
jns
pop
bound
xor
sub
push
mov
xor
ret
dec
jmp
das
lods
mov
mov
or
aam
test
gs
ret
xlat
mov
fldt
add
fdivrs
jae
imul
cmp
shlb
addr16
loopne
in
adc
mov
cmp
enter
xchg
jno
mov
mov
pushf
sub
sahf
adc
and
pop
repnz
std
cmp
sub
in
enter
lea
sbb
lahf
jne
xor
repnz
mov
fcompl
loop
bound
loop
jae
adc
push
std
mov
inc
push
pop
test
mov
sbb
jle
jl
xchg
pushf
cs
or
outsb
leave
xor
jl
mov
dec
add
push
dec
dec
inc
adc
loope
jmp
push
lcall
ffreep
pop
cmp
sahf
les
mov
loop
sbb
mov
and
pushl
call
mov
sbbb
insb
sub
mov
popa
ret
sub
dec
pushl
mov
orb
orb
lods
mov
mov
ljmp
xchg
js
mov
push
shl
popf
or
xor
arpl
dec
and
push
fcomi
pop
mov
insb
mov
lret
xchg
dec
adc
mov
cmp
push
xlat
cmpsl
in
std
lock
out
mov
mov
clc
fisttps
les
jp
lcall
xor
sub
sbb
cmp
mov
leave
mov
scas
into
mov
mov
test
movsb
sbb
lea
mov
sbb
lods
pop
add
jbe
xchg
cmp
ja
rcll
sub
pop
sbb
fld
fnsave
pop
mov
out
dec
in
cmpsl
cmpsl
scas
stos
cld
xor
xor
and
les
mov
mov
mov
sbb
sbb
cmp
outsb
cmpsl
mov
int3
xor
inc
es
jbe
mov
pop
inc
nop
and
mov
and
icebp
aas
imul
push
push
pop
xor
mull
push
push
push
or
lds
ucomiss
mov
xlat
fnstenv
pushf
aad
cmp
orb
mov
adc
and
scas
mov
xor
cmc
cmp
push
adc
xchg
sarl
aad
int3
jns
mov
mov
ret
movsl
cs
not
fwait
or
out
xchg
loop
add
jmp
or
iret
cld
push
int3
xor
add
stos
dec
fiadds
out
imul
push
push
cli
ja
enter
int3
mov
scas
stos
outsb
out
push
testl
mov
push
adc
mov
test
insl
sti
cltd
insb
xchg
cmpsb
xlat
and
fld
cs
stos
ds
jns
stos
dec
dec
fcmovnu
call
push
int
cmp
xchg
push
or
jmp
sub
xchg
ret
xchg
push
xor
ljmp
mov
imul
fiadds
outsb
leave
roll
dec
inc
push
call
stos
cmc
sub
ret
imul
dec
mov
mov
ja
mov
imul
lret
pop
fimull
pop
lds
int3
and
cltd
sub
ds
push
lahf
push
pop
jb
xchg
cmp
pop
jge
mov
cmc
movsl
and
pop
add
pushw
movsl
mov
xor
popa
rep
fnstcw
cmp
push
push
mov
add
out
lods
fcmovb
push
aam
jb
test
mov
push
std
and
mov
rolb
sbb
xchg
push
ret
inc
cmp
lock
fisubl
push
lcall
push
xlat
add
jl
pop
aam
cmp
outsb
shl
add
sub
out
mov
sub
jg
mov
jo
ss
mov
jmp
imul
jle
stos
in
roll
and
out
inc
lods
nop
rcrl
and
jb
js
xor
pop
cmp
rolb
pop
fdivr
jne
push
lds
sub
sub
jno
xchg
adc
jno
in
andl
insb
lret
sbb
lea
mov
testb
mov
icebp
sbb
dec
das
add
fbld
stc
cmp
add
or
adc
ljmp
fdivl
adc
mov
xchg
shlb
cmp
incl
xor
pcmpgtd
pop
sbb
sbb
lret
std
push
xlat
lea
mov
or
jo
sub
into
inc
add
int
lock
pop
adc
lahf
adc
dec
rcrl
scas
push
sub
push
pop
xchg
shlb
repz
push
mov
cs
mov
and
cmp
or
mov
out
push
mov
xor
loope
stos
inc
fnsave
push
inc
push
loopne
sub
jp
outsl
push
xor
maxps
pop
jp
xchg
insl
push
js
push
pop
lea
inc
imulb
dec
iret
mov
or
push
incl
mov
outsl
repz
cmp
movsb
sub
pop
sti
imul
ret
sarl
xchg
lds
nop
stos
movsb
fs
mov
imul
xchg
loopne
notl
mov
mov
and
and
negb
xor
dec
jae
imull
jae
jb
sahf
out
xor
ds
shl
and
repz
in
and
cmpsb
adc
jle
mov
sub
test
jmp
out
out
pop
outsl
add
cmc
cmp
lcall
mov
mov
icebp
test
test
jp
push
mov
in
dec
sbb
xchg
push
mov
mov
adc
int3
fnsave
sbb
dec
push
insb
jno
in
in
sub
std
jp
outsl
mov
or
xchg
dec
mov
ds
adc
xor
fwait
push
or
ljmp
push
and
lds
adc
xlat
out
ljmp
cmp
fcoml
cld
or
pop
push
cmpsb
lds
xchg
push
movsl
xchg
xchg
jne
ljmp
nop
push
ljmp
mov
mov
cmp
cmpsl
pop
arpl
push
jle
xchg
push
pusha
sbb
jae
and
subl
push
or
mov
loope
sub
arpl
flds
pop
jno
outsl
ret
xchg
insb
adc
into
cld
mov
dec
xor
es
dec
mov
dec
pop
fisttps
xchg
insl
fs
jecxz
mov
fldenv
mov
add
mov
jg
flds
cmp
mov
mov
testl
push
movsl
jg
icebp
cmpsb
jb
xor
jecxz
sub
imul
adc
jg
xorb
test
mov
negl
sbb
add
jae
shll
sub
shrl
inc
iret
and
dec
adc
lcall
notb
sbb
clc
ljmp
jne
add
pop
add
pop
test
loop
mov
jo
lods
mulb
adc
mov
jbe
jecxz
add
sbb
mov
push
shr
loope
add
mov
dec
je
pop
sbb
fnstcw
jecxz
adc
scas
orb
mov
dec
jnp
fwait
outsl
mov
xor
cmp
dec
sub
mov
ror
in
adc
adc
movsl
test
cld
dec
lret
popa
out
imul
xor
fs
mov
out
pushf
fsts
rcl
sbb
lods
fsqrt
loopne
xchg
and
repz
stos
out
cld
push
stc
clc
cmc
aad
movsl
adc
adc
pop
dec
add
insb
mov
dec
loope
cmpb
xchg
mov
sub
sub
push
stos
or
cmc
lods
fstpt
xor
push
jns
push
inc
hlt
push
xchg
mov
filds
js
mov
cs
inc
mov
call
sub
test
cwtl
rclb
rcrl
add
mov
ret
cltd
ds
jae
testb
mov
mov
sub
inc
xchg
ss
bound
push
xchg
mov
outsb
mov
pop
jl
ds
pop
ret
xor
sub
dec
out
adc
add
bound
adc
int3
shrl
adc
or
cmp
int
test
enter
push
arpl
xchg
mov
movsl
lock
sub
incb
out
sub
sti
cmpb
inc
dec
jne
in
cli
sbb
cmp
stos
test
lea
test
cmp
mov
or
shll
aad
xor
ds
jbe
clc
push
push
bound
sbb
movsb
les
jae
mov
adc
scas
adc
pop
mov
loope
imul
sub
test
popf
push
mov
repnz
in
aam
repnz
fimull
in
xchg
loop
mov
push
mov
inc
push
or
lds
mov
inc
hlt
cmp
mov
adc
lret
pop
mov
fimuls
icebp
fstp
sbb
repnz
xchg
push
aaa
sub
inc
pop
mov
jl
push
mov
dec
xchg
mov
out
adc
and
push
fnstsw
into
or
addr16
imul
jnp
cmp
repz
or
test
sbb
or
ret
jne
xchg
movsl
jo
jl
push
jbe
xor
es
out
bound
lods
subl
rcrb
and
push
xor
and
xor
repz
mov
fwait
aaa
std
es
lahf
rclb
mov
shrl
dec
test
and
dec
int3
cmpsl
orb
test
adc
or
test
addb
lret
mov
jp
shrb
cmp
stc
push
ja
xchg
mov
sahf
adc
lret
push
xorb
pop
mov
lods
push
dec
imul
in
sub
cld
jne
clc
je
adc
stos
cwtl
jne
mov
lcall
jecxz
add
push
sti
popf
je
adc
incb
mov
popa
inc
pavgw
inc
cmp
and
mov
das
scas
xor
jne
filds
test
lods
outsl
lock
dec
mov
mov
push
repz
pop
cmp
and
sbb
inc
jmp
orb
jg
gs
adc
or
stos
shll
ret
aaa
shrl
cmp
arpl
aam
clc
sub
loopne
push
into
rorb
add
sbb
jmp
scas
add
scas
data16
dec
jle
pop
aas
ret
shrl
pop
jle
outsb
push
mov
add
sti
inc
loop
xchg
xchg
punpckhwd
jmp
sub
jge
mov
push
movsl
xchg
scas
jns
cmp
mov
adc
xchg
mov
decl
loope
pop
cmp
push
jmp
testb
jle
mov
push
jnp
stos
cmpsb
int
pop
bound
inc
out
inc
jno
scas
jmp
jne
pop
adc
insl
or
cmpsl
cmpl
sbbb
sti
lds
cmc
jmp
adc
sub
add
lret
xchg
in
ret
fadds
test
xor
cmp
sub
scas
pop
push
nop
imul
add
jle
push
daa
dec
lret
shlb
mov
and
movsb
testl
or
cwtl
and
in
or
and
ja
stos
mov
clc
xchg
lods
pusha
lahf
adc
sbb
inc
leave
daa
aad
ret
mov
pop
stos
lcall
or
popf
stos
lds
mov
nop
neg
or
fdivrs
cmp
test
lock
loopne
orb
sbbb
mov
adc
mov
mov
sti
pop
cltd
cmp
or
fst
sbb
loop
push
sub
jg
dec
and
xor
adc
cmp
add
fs
mov
inc
xor
mov
lret
bound
imull
shlb
jnp
mov
cmp
stos
test
adc
out
fs
aam
mov
in
ljmp
lret
cmp
lods
xor
xchg
cmp
sbb
xchg
sbb
mov
jnp
pop
data16
fnstsw
aaa
ja
sub
lahf
or
lods
outsb
into
sbb
dec
loopne
or
int
fists
push
jns
bt
into
jmp
cmpsl
lret
inc
dec
cltd
inc
xor
cld
in
sarb
jb
or
push
sbb
xor
aaa
mov
pop
hlt
es
jl
rcl
rcr
aam
lods
lahf
andl
sub
and
mov
cmp
ja
mov
stos
loopne
push
or
fistpl
ss
mov
mov
cmpsb
pop
jmp
sti
lods
cmpl
popf
das
aam
add
cmp
stc
sub
add
nop
dec
outsb
stc
cli
mov
push
jecxz
adc
dec
pop
gs
rcll
in
ret
and
into
cld
jle
xchg
push
cmp
adc
mov
icebp
push
lret
das
adc
jmp
mov
lds
mov
push
mov
sub
jle
jmp
lods
test
fs
push
mov
mull
jl
xor
xchg
adc
cwtl
add
mov
lahf
push
xor
pop
inc
out
fst
popa
stc
xlat
dec
fcmovne
pop
mov
adc
sub
xchg
dec
enter
test
shll
jmp
fistps
not
sbb
aam
nop
sbb
add
fsts
scas
xchg
fisubs
inc
fs
ds
push
mov
aam
loop
das
insl
jp
aam
test
cltd
jmp
int3
pop
pop
or
loopne
and
add
jo
or
ret
pop
imul
sarb
lret
movsl
loope
cmp
jp
mov
addr16
pop
xchg
push
jg
inc
xchg
cmpsb
icebp
das
in
stos
mov
mov
jno
insb
lret
pop
sub
std
push
imul
inc
sbb
jbe
cli
push
les
pop
sahf
in
xor
lds
push
lcall
sbb
mov
ljmp
loopne
jnp
mov
addr16
fdivp
aaa
jne
mov
and
xchg
dec
sbb
repz
popa
inc
pop
aaa
out
aaa
dec
aas
mov
mov
fbld
jne
sub
loop
and
and
xor
jno
mov
mov
cmp
aaa
mov
sub
jae
nop
mov
push
mov
in
sub
mov
das
push
lcall
icebp
sbb
loope
lahf
adc
mov
cmp
jl
mov
stos
dec
xchg
mov
insl
das
pushf
das
into
cmp
inc
pop
xor
adc
pop
rcl
inc
sahf
mov
xor
sub
stos
pushf
push
repz
xor
imul
push
xchg
lret
notb
xchg
hlt
out
push
push
mov
adc
xor
int3
imul
dec
or
inc
ret
loope
pop
sub
dec
jb
test
sub
test
and
fwait
stc
push
lahf
mov
fimuls
inc
mov
pusha
dec
in
lea
mov
and
pop
adc
out
imul
push
lock
add
dec
stos
pop
cs
or
jg
aaa
lret
pop
sub
popf
std
icebp
fmul
add
dec
jbe
cmp
push
add
mov
xor
gs
push
icebp
and
xchg
mov
cmpsb
cmp
add
mov
lds
lret
push
xchg
fbstp
cmp
or
insb
cmp
sbb
jnp
into
mov
jnp
call
fstps
or
push
jp
lds
in
push
cmp
add
fwait
cmp
shrl
frstor
xchg
add
push
dec
dec
cld
jae
lcall
pop
sub
mov
outsl
mov
jmp
test
fwait
pop
dec
adc
push
enter
xchg
cmp
pop
sbb
mov
stos
inc
call
mov
sbb
or
lcall
bound
gs
cmpsb
jle
mov
cmpsb
insb
pop
ss
roll
sbbb
rorb
scas
ror
sub
lretw
xchg
xor
icebp
pop
sub
inc
iret
sbb
cmpb
mov
cmp
inc
cmpsb
sub
aam
lods
jb
or
test
ljmp
dec
xchg
fildl
loope
dec
add
xor
stc
adc
scas
dec
push
popa
dec
out
lods
inc
sub
lea
mov
lds
or
add
jl
sarb
ret
mov
icebp
out
mov
adc
jae
fwait
outsl
dec
clc
lret
enter
sbb
pop
mov
in
cmp
xor
outsl
jnp
and
mov
sbb
jge
fldt
test
repnz
cmp
lods
popf
cmpsb
cmc
add
dec
cmp
aas
popf
adc
mov
inc
repnz
out
mov
mov
icebp
adc
xor
loope
pusha
adc
ja
daa
lea
add
cwtl
xchg
xor
xlat
loope
ljmp
cmp
lods
sub
movsl
js
aam
movzbl
add
adc
das
cmp
jcxz
cmpb
imul
push
xchg
xchg
icebp
out
push
or
push
cmp
and
rcr
dec
inc
lods
and
popf
js
jb
push
mov
jo
movsb
or
jmp
xchg
rorb
dec
cmp
mov
call
addr16
adc
push
test
in
jmp
outsb
ljmp
in
sahf
stos
sub
mov
jb
dec
stos
imul
divb
inc
mov
test
aaa
aaa
mov
xchg
push
shll
sbb
loopne
iret
clc
popa
add
pop
ret
enter
nop
mov
sbb
and
jno
and
outsb
iret
test
inc
in
fsubr
lret
or
jno
jl
mov
xor
jo
lods
pop
clc
les
fidivs
iret
or
dec
bound
xor
adc
sub
lods
xor
xor
cltd
sub
cmp
dec
test
add
adc
dec
insl
and
sahf
inc
pusha
or
aam
dec
pop
std
cmp
xchg
mov
pusha
rcr
jns
xchg
dec
in
cmp
fidivrs
test
push
aas
je
jne
out
sub
jae
sub
bnd
lret
je
iret
out
mov
cmp
incb
mov
fwait
mov
sub
adc
sahf
ljmp
sub
insl
mov
sub
dec
je
lahf
add
popf
dec
cld
or
cmp
fs
pop
rclb
addl
jbe
jae
outsl
jne
or
inc
jae
jbe
mov
mov
xor
je
jle
fwait
sbb
and
sub
jp
xchg
push
test
outsl
cmpsb
sbb
cltd
lret
jge
or
mov
outsb
cmp
and
mov
lret
sub
lret
lret
loop
jne
mov
mov
fsubr
jp
das
mov
inc
mov
lcall
cmp
rcr
push
testb
pcmpgtd
dec
mov
loope
push
push
loop
pop
int3
cmpsb
add
xchg
push
push
mov
push
mov
push
idivb
mov
xchg
mov
outsb
lret
push
repnz
sub
imul
or
fdivrl
xchg
addr16
pop
mov
sub
divl
out
jmp
jne
adc
cmpsb
scas
jnp
inc
xor
lret
sahf
mov
xchg
mov
and
xchg
in
fistps
xchg
lods
js
test
pusha
je
lock
mov
cmpl
sbb
imul
xor
lea
xor
ds
push
inc
mov
imul
in
dec
lret
jle
pushf
cmp
adc
xlat
ret
push
jns
popf
loopne
lea
pushf
mov
lods
aam
cmp
enter
mov
aad
divl
inc
cmp
shrb
xchg
mov
jno
cmc
aas
jo
je
pop
shll
sub
daa
lret
dec
movsl
xchg
rcrb
cli
lds
outsb
repz
js
and
notl
sub
stos
dec
pop
and
sarl
and
rcrb
popf
scas
pop
jbe
sbb
jge
nop
cmp
aaa
inc
push
sbb
jns
rcrb
ret
xor
adc
xchg
mov
loope
mulb
sub
or
xor
sti
push
shlb
mov
pop
jle
mov
fdivr
or
popa
movl
out
and
sbb
cmp
dec
fldl
push
icebp
inc
ror
sub
dec
pop
adc
mov
insl
movsb
pop
lret
mov
ja
xchg
cwtl
lahf
cmp
push
enter
lods
or
xor
sub
fwait
mov
enter
xchg
push
inc
and
and
sbb
adc
arpl
aam
xor
mov
stos
lret
aam
test
pop
lret
add
loope
repnz
sbb
jle
pop
adc
es
push
movsb
cli
inc
push
enter
fcmovb
xchg
push
push
fldenv
and
push
mov
mov
and
mov
cli
and
push
loop
add
lcall
lods
mov
sbb
mov
stos
and
sbb
mov
loop
lods
popa
loop
xchg
scas
xchg
gs
repz
stos
pop
rcrl
inc
daa
xor
add
mov
scas
mov
sbb
pop
mov
or
imul
aaa
dec
pop
fsubs
cmp
rcl
rclb
jne
jne
push
add
push
mov
push
loop
popa
data16
fcmovu
daa
rorl
cmc
lret
cltd
mov
out
push
out
jle
mov
in
pop
sub
out
mov
pop
xchg
negl
sbb
addl
stc
and
push
fcoml
mov
inc
jne
stc
cmp
call
mov
sbbb
and
insl
dec
mov
fisttpl
mov
cmp
jge
test
lods
inc
mov
adc
and
and
nop
xchg
cltd
add
sahf
mov
aaa
negl
pop
jp
icebp
xchg
imul
dec
pop
pop
cmp
inc
fwait
and
mov
repz
inc
and
or
push
data16
mov
jecxz
out
sub
adc
adc
mov
mov
mov
lock
add
lret
aaa
mov
pop
dec
sub
data16
sahf
or
aas
add
clc
inc
add
hlt
std
xor
jmp
fs
iret
mov
pop
xchg
icebp
in
push
sub
ss
xor
lods
into
imul
je
and
push
adc
ds
addl
pop
mov
or
inc
inc
shrb
xor
enter
fcoml
cmp
insb
dec
pop
add
stos
push
jmp
jmp
ljmp
mov
ja
inc
mov
mov
xchg
lcall
sub
ret
stos
fildl
mov
dec
cmp
jle
dec
mov
mov
fistl
int3
iret
pop
repnz
dec
es
cwtl
cli
enter
jbe
out
vpsrld
icebp
cmp
sbb
jbe
test
fs
idivb
ffree
and
fisubrs
lret
fcoms
rcrb
ljmp
daa
stos
mov
cmp
cmp
push
mov
pop
cmp
fisttpll
out
sarl
data16
movsb
jle
cmp
nop
xchg
dec
ficompl
xlat
int3
jp
lahf
mov
aaa
and
ss
das
and
sahf
push
cmp
inc
mov
pop
sti
cmp
inc
out
dec
fiaddl
les
sbb
in
xor
pop
jge
pop
in
sbbl
jle
mov
cmp
xchg
das
push
data16
loop
fsubr
mov
in
nop
pop
xchg
push
dec
pop
sahf
mov
jo
icebp
rcll
lret
stos
mov
jp
cmovl
lea
stos
lods
fstpt
jbe
fiadds
xchg
inc
mov
cmp
mov
push
shl
and
mov
popa
test
sub
jl
mov
lea
cmp
dec
popf
mov
adc
push
je
sbb
orb
xor
jecxz
cmp
test
mov
mov
lds
mov
test
cltd
xchg
or
adc
fisubl
mov
cwtl
adc
cmc
add
arpl
sbb
or
mov
mov
sbb
cmp
xor
int
add
pop
xorl
dec
lret
ds
subl
jecxz
push
mov
or
or
add
pop
loope
add
inc
rclb
sub
imul
shll
pop
jp
out
or
mov
lret
insl
xor
push
je
lods
mov
nop
in
leave
stos
rcll
cltd
cmp
bound
aad
mov
test
lods
shlb
mov
cltd
call
inc
mov
adcl
jae
in
xor
adc
mov
bound
xor
mov
sti
call
lret
es
jp
xor
and
out
cmp
jl,pn
lds
add
add
outsb
jmp
out
mul
ret
enter
xchg
jmp
jnp
repnz
imul
or
sbb
data16
xor
fistpl
jne
fistpl
mov
mov
or
push
pop
enter
ja
xchg
cmp
in
xor
popf
cmc
mov
sbb
jbe
xchg
scas
pop
sbb
ja
dec
jnp
mov
jl
dec
mov
sub
add
int3
or
push
scas
repz
mov
mov
test
rcr
sahf
aas
adc
inc
stos
iret
or
cmp
in
mov
sbb
push
and
dec
inc
adc
adc
push
pop
cmp
dec
xor
xchg
pop
cmp
out
hlt
sub
cmpsl
inc
mov
push
xor
mov
mov
adc
fcomps
cmc
sarl
mov
adc
js
sbb
out
and
inc
add
scas
cltd
repz
or
cmp
jne
xor
pop
pop
xchg
and
xchg
pusha
sbb
leavew
adc
and
inc
rorl
enter
push
mov
insl
push
shr
out
cmp
sbb
xchg
dec
outsb
cmp
mov
js
pop
mov
scas
cmpl
mov
adc
dec
jnp
cmp
out
sub
mov
dec
aad
dec
xor
add
lds
adc
fdivrs
add
jb
rorb
push
push
mov
jg
mov
xor
mov
adc
popa
clc
subb
mov
mov
cmp
xchg
dec
leave
add
inc
data16
dec
and
mov
lea
out
push
add
fnsave
das
add
popa
inc
adc
lcall
or
lds
cmp
xchg
insb
les
orl
cwtl
jae
pushf
cmc
movsl
mov
cmp
and
sub
jge
pop
xor
push
cmp
push
xchg
adc
dec
dec
pop
mov
ljmp
jne
pop
test
aas
cltd
inc
inc
mov
sbb
das
adc
js
scas
adc
sbb
xor
pushf
and
mov
dec
rcl
in
rclb
mov
bound
je
into
jle
les
mov
rorb
mov
insb
and
cmp
xchg
adc
dec
in
add
dec
sar
adc
fildll
rol
mov
dec
xor
roll
jg
cmp
js
mov
rcrb
and
xchg
fbstp
sbb
jbe
push
repz
pop
mov
mov
adc
sbb
adc
rol
mov
aam
mov
out
dec
outsb
jns
loope
insb
cmpsb
jecxz
push
push
jbe
sbb
push
mov
insb
cli
xchg
jns
xorl
inc
jl
and
jb
cmp
xor
in
mov
sub
pop
pop
xor
pop
or
push
inc
xor
insl
test
xor
mov
cmp
aam
mov
xchg
xchg
fsubl
fldenv
cmp
push
push
dec
imul
les
in
cmp
scas
mov
ffreep
mov
or
and
ret
fnstcw
inc
loope
sub
mov
sub
fisttpll
add
lds
mov
sti
and
mov
sub
lret
jae
cmc
mov
sbb
aas
push
divl
adc
das
adc
cmp
jg
jnp
add
mov
je
pop
cmpsl
jmp
xchg
mov
cmc
cmp
popa
repz
rcl
sbb
xor
sarl
xor
mov
imulb
daa
mov
ljmp
stos
cli
mov
inc
and
mov
sub
sub
mov
push
jne
lock
add
xchg
jb
imul
test
jle
js
xchg
xchg
sub
push
outsb
ljmp
pop
mov
push
inc
pop
mov
sub
lods
or
or
mov
pop
scas
push
rorb
popf
adc
sub
fcomip
mov
sahf
inc
shll
mov
mov
sbb
sbb
push
xchg
mul
ja
add
sbb
and
mov
ret
incb
neg
mov
insb
mov
push
in
stos
add
repz
jae
xor
push
lret
jns
xchg
shrl
xchg
stos
aad
dec
pop
inc
dec
and
dec
add
jecxz
inc
jecxz
cmp
cwtl
fcoms
xchg
jle
inc
pushf
arpl
push
lea
mov
xor
lahf
daa
cmp
or
addb
xchg
add
cmp
push
inc
aad
in
dec
mov
inc
mov
adc
nop
jmp
lret
cs
mov
push
lcall
mov
lea
mul
movsb
jno
xchg
hlt
jg
sbb
mov
es
xchg
jl
dec
int3
fcmove
lds
mov
hlt
add
hlt
lahf
test
ret
inc
das
cmp
lahf
push
mov
loope
sbb
and
cltd
test
cmpsb
inc
jmp
cmp
icebp
out
cmp
mov
sub
mov
sub
or
jg
leave
rcrl
mov
sbb
lods
lcall
inc
and
jo
aad
out
sbb
icebp
cld
pop
out
push
lret
cmp
add
gs
incb
adc
sub
push
pop
mov
cmpsl
sub
cmp
cmp
inc
hlt
xchg
fsubrl
xchg
push
adc
adc
in
inc
lds
jmp
lds
pop
add
cmp
iret
sbb
cmp
dec
or
push
mov
add
push
iret
sub
xchg
in
scas
or
addr16
push
out
repz
sbb
mov
mov
and
das
pusha
movsl
push
add
in
cmpl
xchg
fdivrl
jmp
push
fidivrl
or
jle
ret
inc
popa
frstor
imul
ffreep
cltd
lea
mov
add
cwtl
lahf
scas
shl
push
jge
out
cmp
mov
push
xlat
lret
inc
inc
xchg
movsl
fdivrs
or
cli
lods
ljmp
and
add
mov
adcl
sarl
push
mov
dec
jno
divl
test
outsl
or
addr16
dec
mov
pop
imul
inc
loopne
sbb
sbb
xchg
pop
jmp
xchg
mov
ljmp
and
aas
or
fxch
fsubrl
pop
mov
sarl
dec
dec
shll
pop
dec
sbb
jae
aas
cmp
aaa
jb
movsb
dec
xchg
xchg
jnp
ja
push
addr16
iret
mov
xchg
xchg
mov
jnp
cmovs
and
leave
pop
insb
mov
adc
stos
sysret
add
adc
push
lock
adc
xor
mov
cmp
xchg
mov
pop
rcr
add
sbb
jae
in
dec
xorl
popa
adc
dec
jmp
clc
call
xor
pop
mov
push
inc
jo
test
stos
or
fldenv
ret
or
mov
xor
sbb
movb
cmp
xlat
mov
adc
mov
inc
and
ja
cld
push
push
ja
mov
adc
mov
jbe
mov
push
fs
push
int
es
pop
out
lods
add
xchg
stc
xor
cmp
inc
or
pop
push
int3
scas
bound
sbb
inc
or
inc
mov
pop
repnz
les
sbb
mov
fbld
stos
iret
sbb
out
arpl
pushf
out
pop
or
out
int
in
sbb
sbbb
mov
and
cs
adc
fs
mov
pop
pop
mov
push
lods
ret
jp
jne
mov
fildll
scas
lret
sbb
mov
mov
jbe
mov
mov
pop
loope
mov
call
jo
mov
adc
cmpl
insb
sbb
cmp
and
add
xor
and
xchg
enter
mov
insl
xor
push
jns
jne
shl
mov
stos
cmp
int3
bound
shll
xchg
cmpl
insb
pusha
out
cmc
sbb
add
push
jge
xchg
pushf
je
scas
test
mov
pop
in
mov
loop
rcl
xor
shlb
add
push
xchg
cmpsl
sbb
dec
dec
jmp
adc
mov
aam
rcrb
cli
mov
out
add
add
cmp
leave
call
and
mov
xchg
mov
push
pop
pop
ja
sbb
or
xor
lcall
pop
cmp
jno
mov
xor
push
pop
shll
pop
push
loop
pop
jg
cmpb
mov
cmp
scas
dec
sti
outsb
rorl
mov
jge
and
pop
inc
sub
in
adc
popa
adc
jae
pushf
lods
shrl
cmp
lock
mov
and
push
sub
adc
dec
in
lds
pop
inc
repz
mov
cld
cmp
std
out
xchg
push
aad
xorl
aas
mov
push
inc
das
ror
xor
cltd
out
dec
pop
outsl
push
cwtl
addl
notl
or
push
ss
sahf
pop
ret
addr16
popf
and
add
add
push
js
xor
test
xor
lock
mov
fisubs
imul
cmp
mov
daa
or
jne
in
enter
pop
loope
ljmp
popl
xlat
loop
dec
cmp
add
rcl
mov
cltd
data16
and
jmp
fs
cld
cmpsb
popf
dec
adc
mov
fmull
and
push
push
sub
adc
add
xor
pop
jne
jo
mov
mov
jge
js
aad
inc
push
inc
cltd
and
mov
cmpsb
cltd
mov
cld
ss
xchg
fwait
add
xor
lcall
mov
add
subl
mov
cli
ds
in
and
push
sub
ljmp
sbb
stos
popa
xor
leave
inc
lret
sbb
shrl
repz
push
adc
mov
and
ja
scas
xchg
stos
arpl
aas
xlat
mov
fdivrs
call
adc
sub
xor
sar
out
pushl
repnz
adc
or
xchg
bound
mov
lea
fmuls
or
add
mov
sbbl
jnp
lahf
shll
push
xor
or
sub
add
mov
cltd
fdiv
xchg
mov
adc
testl
xor
movsl
push
out
mov
cmp
mov
fs
arpl
push
lcall
daa
sbb
outsb
jle
push
cs
js
mov
mov
mov
mov
aam
sbb
out
sub
push
sub
test
repz
scas
fsubr
das
sub
or
mov
mov
ret
mov
xchg
push
mov
cmc
sti
js
pusha
dec
and
mov
stos
jb
outsl
push
popa
ss
stc
pop
add
and
push
lds
pop
mov
xchg
shll
mov
pusha
icebp
fistps
ds
and
xchg
xor
out
cld
ret
inc
xlat
out
pop
int
test
cmpsl
push
arpl
inc
sbb
sbb
daa
rcll
sub
adc
in
push
sub
pusha
icebp
std
call
int
std
arpl
sub
mov
mov
jecxz
mov
ja
rcll
pusha
push
jo
push
or
fsub
sahf
cmpsb
rclb
es
pop
mov
lahf
mov
cltd
and
sub
mov
mov
decb
fistl
mov
cld
shlb
leave
and
jbe
cmpsb
pusha
and
push
push
and
dec
mov
add
in
xchg
add
adc
dec
mov
inc
fmulp
fs
lahf
testb
mov
sub
out
ljmp
sbb
lods
jnp
xor
xchg
sub
aad
movsl
aad
pop
insl
sarl
out
ljmp
sarl
push
or
aam
fldenv
sub
or
mov
lods
bound
ret
jmp
cmpsl
lahf
or
out
in
fisttps
imul
pop
mov
fcoms
repz
xor
les
mov
adc
mov
test
sub
mov
cltd
leave
enter
or
shll
sbb
lret
std
sub
jmp
cmc
jae
xchg
mov
or
insl
gs
sahf
push
nop
mov
jmp
into
std
nop
leave
imul
loop
lahf
bound
jb
pop
frstor
or
pushf
out
stc
test
or
out
dec
stc
loope
subb
test
inc
mov
or
fldcw
je
cmpsl
add
adc
pop
outsb
inc
push
movsl
adc
sahf
ret
and
mov
cltd
mov
leave
ret
sub
push
cmc
sub
int3
push
jns
es
iret
repz
xor
and
dec
idiv
sbb
push
xchg
jge
mov
mov
adc
pop
cld
mov
mov
cld
movsb
fsts
mov
nop
dec
dec
cmc
mov
pop
jecxz
mov
inc
sub
sahf
int
in
into
js
aaa
jae
and
add
lcall
mov
mov
push
sbb
mov
add
in
leave
jmp
pop
xchg
lea
jmp
pop
pop
ds
jns
orl
popa
add
add
jle
mov
stos
ficompl
mov
gs
jp
dec
pop
jp
mov
test
add
in
mov
sbbl
adcl
xchg
out
or
push
mov
imul
out
jnp
das
lods
sub
sti
sub
addl
sbb
adc
shrl
insl
sub
sahf
out
imul
add
lods
inc
fwait
enter
jne
jmp
dec
push
cmp
xchg
aaa
lcall
jl
cmpl
or
cli
loop
test
scas
aaa
jmp
mov
outsl
mov
xchg
inc
or
dec
inc
mov
lods
sahf
and
stos
cmp
add
repz
pop
mov
sub
mov
nop
shr
jnp
cltd
popa
repz
pop
pop
cmp
sahf
xor
daa
sbb
rcr
fistpl
or
add
adc
enter
not
mov
ret
iret
ret
xchg
xchg
fisttpl
add
aam
pop
fisttps
mov
aad
mov
in
imul
cmp
xor
lret
sbb
inc
push
mov
xlat
xchg
int3
and
rorl
jns
cmpsl
inc
push
cmpsb
shl
and
aaa
xchg
in
jge
stos
inc
jp
arpl
loopne
jae
les
lret
out
or
imul
jmp
jns
call
inc
arpl
cmpsb
lret
or
xchg
scas
cli
jmp
add
sub
fnsave
lds
push
jecxz
lret
shll
shlb
and
ret
pop
leave
lods
jge
ss
adc
mov
iret
xor
jmp
orl
mov
mov
jg
add
push
gs
inc
test
sub
or
mov
ss
add
cmp
sub
sbb
and
shll
pop
mov
mov
js
shrl
inc
aad
std
in
pop
sbb
mov
flds
fildl
std
cmp
out
mov
lahf
insb
movsb
add
mov
popa
idiv
stos
mov
push
push
notb
push
mov
lcall
or
xchg
lret
pop
mov
mov
imul
retw
sbb
cmp
mov
lock
push
idivb
xor
sbb
jecxz
gs
xchg
mull
aaa
add
adc
loope
andl
push
je
pop
inc
in
or
fsincos
dec
mov
movhps
and
pop
jg
gs
stos
cmp
insl
push
lock
shlb
shlb
fdiv
add
sbb
cmp
lods
ficomps
jg
test
or
inc
imul
sbb
push
inc
imulb
jo
test
icebp
sub
and
movsb
js
sbbl
lods
subl
pop
add
mov
sbb
shll
jo
cld
cmc
dec
pop
adc
sahf
shll
rol
in
jbe
hlt
arpl
inc
cmp
add
leave
in
gs
and
lock
repnz
pop
lahf
fisubrs
adcb
inc
xchg
shlb
fs
scas
and
lret
xor
inc
andb
add
bound
shrd
ret
add
mov
in
lea
jmp
pushf
inc
fistpll
dec
push
ljmp
dec
xchg
icebp
cmpb
cmp
stc
add
sbb
sbb
mov
mov
shll
cmpsb
test
jp
mov
push
stos
stc
mov
cmp
xlat
negb
jecxz
imul
mov
xlat
rcrl
sti
and
mov
hlt
push
cli
sbb
inc
jae
adc
dec
mov
push
xor
cltd
mov
pop
jmp
rolb
cmpl
lods
jo
push
push
fs
lods
repnz
jmp
cmp
add
ret
shrl
divb
jp
xor
adc
stos
mov
push
std
mov
xor
dec
push
cmp
fistpl
addr16
cmp
fisubl
addb
xlat
ret
inc
push
cmp
mov
ss
movsl
inc
or
loope
in
hlt
mov
adc
pop
clc
lock
pop
test
jns
jo
mov
pop
cmp
push
sbb
adc
push
xchg
cli
sbb
push
and
jbe
jno
cmc
jmp
sbb
jle
pop
iret
imul
add
xor
or
inc
rclb
sbb
js
mov
add
mov
xlat
dec
cmp
sub
inc
out
inc
subl
test
aad
scas
add
es
clc
inc
sub
aam
loopne
mov
or
inc
fldcw
es
inc
inc
loop
pop
mov
inc
add
and
sbb
in
inc
pusha
pop
dec
lods
xchg
sub
pop
in
add
xor
pop
xor
and
sub
push
xchg
xchg
jmp
or
xchg
aad
xor
out
mov
jl
test
adc
or
ret
addr16
cwtl
shll
jns
gs
pop
iret
int
xchg
fists
jmp
ss
rolb
push
push
les
out
mov
mov
cmc
dec
adc
sbb
cmp
push
xor
or
mov
pop
mov
pop
mov
cs
push
fcoms
pop
je
js
sbb
mov
adc
adc
pop
adc
push
popf
lea
cmpsl
test
mov
fsubl
test
je
jb
inc
imulb
cmp
sbb
add
loope
addl
xor
ljmp
je
jl
push
imul
and
nop
push
xlat
orb
movsl
lcall
orl
pop
into
add
aam
adc
xchg
pop
and
aas
push
push
xor
and
cmp
fs
or
push
dec
out
jo
into
pop
xor
mov
sub
cmpsb
cmc
xor
add
outsl
inc
test
fmull
popa
outsl
add
icebp
inc
ja
pop
in
fmul
lret
aas
or
pop
fistpl
je
in
pushf
and
add
push
xchg
pop
ficoml
enter
push
or
mov
cmc
dec
xchg
scas
mov
pop
adc
bound
in
push
xchg
jb
push
adc
xlat
mov
dec
or
cmp
in
lock
mov
testb
xor
enter
ljmp
es
adc
pop
jnp
inc
enter
mov
mov
mov
mov
in
jmp
imul
sbbb
loope,pt
leave
ret
inc
xchg
xchg
and
outsb
leave
xor
ficoml
xor
clc
dec
pop
ja
cmp
pop
inc
add
stos
pushf
jnp
add
add
and
push
lea
adc
fisttpll
or
into
adc
or
popw
push
iret
shll
dec
dec
shrl
clc
or
das
inc
andl
xchg
mov
push
fmulp
xor
mov
add
fadds
leave
jle
pop
push
adc
mov
xchg
inc
test
cmc
sarl
test
cmc
rorl
aam
fstl
sti
repnz
pop
cld
xor
add
cld
out
jo
dec
or
popa
mov
dec
ljmp
loope
mov
aad
in
popf
mov
dec
sub
jp
push
and
lods
nop
adc
mov
lcall
dec
test
repnz
sbb
fstpl
popa
ljmp
aad
push
pop
xchg
fildl
push
lock
jmp
out
or
popf
xor
int
mov
ljmp
pop
insl
fwait
add
nop
test
nop
dec
inc
jns
adc
and
jg
inc
aam
sbb
or
lods
loope
mov
pop
adc
add
add
xorb
or
out
push
and
push
adc
mov
mov
push
imul
stc
mov
dec
pop
call
mov
insl
clc
pop
cmp
inc
imulb
jge
out
jnp
hlt
imull
sar
mov
cld
cltd
cs
cmpsl
pusha
jmp
inc
mov
add
test
xchg
xor
repz
jp
dec
subl
lea
mov
outsb
mov
add
jb
xchg
daa
jns
cmpsl
or
cmc
loopne
pop
call
dec
jnp
pop
repnz
cmc
loope
adc
int3
scas
add
sarb
push
mov
adcl
inc
aaa
mov
cmp
xchg
add
popf
arpl
jle
mov
jg
xchg
test
arpl
aam
stc
inc
cmc
sub
xchg
mov
jge
inc
xchg
push
popl
jno
in
mov
xor
cld
cltd
xchg
aad
pushl
xor
jb
sbb
aas
xlat
fs
or
xchg
popf
inc
int3
pop
cmp
repnz
push
mov
xor
ljmp
je
mov
fs
mov
mov
mov
lods
in
inc
aaa
popf
lret
ja
leave
sbb
cs
ds
dec
ret
or
mov
cmp
fwait
adc
xor
cli
mov
test
sub
leave
cli
adc
cmp
jo
iret
notb
enter
jl
test
cmp
roll
or
dec
and
jns
cmp
add
sbbb
sbb
arpl
xchg
pop
mov
jp
ret
sub
pop
push
test
mov
sbb
or
xchg
insb
mov
ret
mov
movsb
aaa
cmp
jbe
mov
xor
cmp
sbb
inc
dec
inc
dec
push
mov
xor
int3
mov
push
jb
dec
inc
jle
pop
ret
test
dec
xchg
imul
push
pop
aam
push
popf
es
loop
test
push
inc
orl
stos
or
sbb
inc
dec
xchg
sbb
jb
jnp
push
sti
decb
pop
std
aam
lea
cld
or
pop
pop
clc
int
sbb
dec
dec
iret
push
sub
mov
xor
inc
mov
out
or
shrb
mov
aas
stos
jno
lock
mov
je
inc
in
lods
mov
addr16
lock
or
in
cmp
test
inc
push
lahf
mov
mov
pop
pop
std
pop
dec
fcmovb
add
push
xor
sbb
in
xchg
jle
pop
lret
ja
inc
push
dec
lret
mov
shll
stos
adc
pop
sbb
fsubs
sub
xlat
pusha
xchg
lcall
sbb
or
sbb
sub
and
jns
sahf
in
mov
cmp
dec
cs
dec
scas
iret
mov
je
or
adc
mov
out
lock
adc
mov
add
insb
fbld
push
inc
push
ret
push
pop
aad
pop
subb
sbb
adc
cmp
lret
push
sub
sbb
outsb
inc
pop
mov
mov
shlb
fisttps
pop
out
lock
mov
cmpsl
fs
mov
cwtl
mov
repz
scas
lds
sarl
repz
jmp
sarl
fsubl
sbb
xchg
lods
stos
loope
test
cmpb
mov
mov
mov
xor
sbb
sub
sti
adc
sub
fsubl
mov
test
movb
icebp
xlat
in
inc
arpl
aas
adc
pop
rcl
aam
inc
xchg
out
push
dec
shll
js
lods
pushf
in
andb
sbb
je
into
lods
lods
push
push
push
xor
mov
or
fisubrl
scas
push
imul
mov
lods
lret
jle
enter
lods
inc
loop
addr16
loop
push
mov
into
outsb
out
sbb
icebp
sub
pop
add
aad
inc
arpl
test
adc
das
shrb
aas
loope
add
stc
jnp
and
cmp
fisubl
jae
xchg
sbb
stos
stos
fildl
mov
and
jns
lahf
jno
pop
sub
dec
aas
jmp
push
cmp
dec
xlat
mov
int
xchg
sbb
xlat
xchg
cmp
leave
and
vcomiss
or
bound
sub
xor
cmp
call
dec
push
or
es
cld
push
inc
dec
repnz
or
mov
shrb
fcomps
lea
dec
push
fdivp
rcrb
or
and
mov
inc
lods
mov
mov
jmp
xchg
add
mov
subb
je
movsl
insl
jg
aas
add
fidivl
jg
cli
ss
idiv
divl
imulb
dec
xor
pop
sbb
and
sbb
mov
fcmovb
lahf
mov
sub
dec
xor
push
aam
lods
iret
add
pop
mov
outsl
insb
inc
jmp
negb
out
shlb
repz
mov
in
call
addr16
or
or
xor
aas
lret
iret
sbb
ljmp
in
fs
popa
aad
xchg
mov
and
push
mov
mov
ss
dec
out
pop
andb
leave
int3
orl
neg
mov
inc
arpl
pusha
push
cmp
imul
rorl
outsl
ljmp
push
les
pop
int
sub
sub
ret
mov
stos
in
mov
testb
mov
mov
outsl
fbld
iret
mov
daa
in
popf
add
and
or
mov
int3
fbstp
lret
xor
sbb
js
fcoms
cmp
xor
mov
cmp
cmp
ret
mov
hlt
inc
aas
push
add
aad
repz
cmc
sbb
aad
je
sub
xchg
push
or
mov
pop
shrl
ja
cld
xchg
mov
cli
dec
pop
jbe
mov
or
mov
jae
mov
mov
xor
or
xchg
packssdw
jns
lea
cwtl
adc
jne
jp
sub
and
push
pop
inc
mov
push
mov
divl
cmp
lods
xchg
push
adc
dec
insl
cmc
jmp
pop
dec
mov
and
outsl
add
push
lret
xor
xchg
arpl
xor
sahf
fs
idiv
rorl
push
dec
sub
adc
adc
push
jnp
in
push
and
test
lcall
jnp
movsl
sbb
test
ds
sti
ret
pop
or
cmp
jne
mov
jo
and
hlt
imul
cmp
lahf
cmpb
jne
lods
pop
mov
mov
push
lods
pop
pop
in
insb
jne
xor
mov
jo
push
mov
mov
push
lret
adc
scas
inc
sub
cwtl
mov
imul
sbb
mov
cmpsb
adc
imul
cmp
loopne
xor
lods
push
ret
and
fdivrl
or
pop
xchg
imul
aas
test
push
fmuls
addb
pushf
loopne
push
fdivr
insl
fstpl
xchg
cmp
in
sbb
mov
jno
out
push
jecxz
sbb
and
loope
lcall
cmc
dec
mov
mov
jmp
dec
stos
cs
cmp
jo
push
test
add
bound
cld
js
jp
sub
out
insl
int3
mov
pop
loopne
and
jmp
and
insl
and
in
lret
cmc
lock
rorb
sub
cld
adc
push
cmp
call
fcmovnbe
and
mov
lock
data16
push
xchg
stos
fldt
and
in
xchg
fs
xchg
repnz
sbb
mov
inc
pop
inc
cmp
call
stc
inc
repnz
jns
out
jo
dec
test
mov
and
into
loopne
sub
inc
mov
rorl
lahf
popf
jecxz
jnp
jp
pop
lahf
test
mov
enter
scas
dec
fwait
cmc
xor
push
mov
push
xchg
enter
arpl
shrb
pop
push
push
cmp
or
xchg
xchg
jg
out
inc
insl
jl
or
ljmp
push
pop
insb
test
scas
jge
les
pop
outsl
into
scas
test
mov
add
or
xchg
fists
enter
insb
push
test
sar
inc
test
cmpsl
push
sub
sbb
stos
sbb
outsb
mov
aas
leave
loopne
nop
push
xor
dec
test
add
mov
jns
insb
out
mov
iret
xorl
pop
push
ja
addr16
inc
dec
sarl
fnstsw
aam
nop
ret
xchg
jmp
mov
mov
test
scas
push
xor
mov
std
adc
mov
sub
and
int
inc
ljmp
sub
xlat
mov
stos
lea
nop
sbbb
jb
xor
mov
dec
cmp
lds
xchg
sub
dec
daa
mov
cli
push
mov
pusha
addr16
inc
fstps
mov
mov
cld
xor
loope
insb
jl
fstl
mov
sbb
addl
sarl
outsb
fs
push
mov
add
iret
jb
in
test
enter
jmp
pop
cmp
popa
enter
push
add
mov
sub
fimull
jmp
pop
jns,pt
xor
insl
add
jmp
push
pop
ja
stos
cmp
jge
aam
jg
push
cmpsb
fisubs
cmc
jecxz
or
int
jae
and
jo
mov
cs
shl
jle
andb
jmp
js
fst
mov
and
mov
mov
xchg
pusha
mov
fstp
xchg
ss
dec
mov
idivb
add
mov
jae
dec
outsb
and
mov
jne
test
pop
std
mov
lcall
mov
test
arpl
lret
pop
idivl
ljmp
xor
inc
and
stos
lret
push
jae
pop
sub
int
add
ffree
mov
ja
fiaddl
mov
push
cmp
ss
mov
mov
cli
jno
outsl
dec
push
ljmp
aaa
fisttpll
and
iret
sbb
or
push
sbb
sub
pop
repnz
enter
pushf
jecxz
rolb
les
js
in
jg
xorl
sub
test
lea
out
pop
pop
pop
jmp
sahf
mov
mov
sbb
mov
mov
iret
inc
push
call
cmp
mov
rorb
jl
scas
pushf
sub
push
int3
leave
push
aas
jl
pop
ja
jecxz
icebp
mov
or
xor
shll
fildl
loopne
cmp
sbb
inc
cmp
out
out
lea
in
roll
imul
cwtl
mov
stc
mov
jecxz
cmp
repnz
dec
bound
jp
pop
pop
lds
lods
lret
xor
dec
aad
and
lods
int3
xor
jle
jp
stos
cltd
sbbl
and
cmp
cmp
subl
cmp
pop
test
roll
loope
test
sti
repnz
outsb
cmpsb
adc
ds
mov
fld
scas
sti
push
xor
or
aas
outsb
pop
mov
cmp
ret
jbe
pop
sbb
xchg
mov
pop
aas
pop
mov
push
adc
cmpsb
cld
and
inc
cmp
xlat
sbb
js
and
pusha
mov
inc
sar
sub
sub
pop
mov
xchg
ljmp
add
inc
inc
cs
insb
push
xchg
pop
shrl
sbb
lods
movsl
cmc
sbb
test
mov
mov
negl
jl
loopne
mov
pusha
insb
dec
jecxz
bound
xorl
scas
xor
inc
scas
sbbl
xor
mov
aad
iret
inc
ss
mov
adc
push
jle
subb
scas
lock
adc
movsl
sub
jno
xor
or
pop
adc
pop
into
mov
and
sub
inc
cwtl
sbb
adc
jmp
loop
scas
bound
jmp
jge
xchg
sbb
push
pop
xorl
addl
aam
outsb
jmp
xchg
aam
test
push
test
repnz
aam
add
fbld
add
sbb
out
lea
mov
in
out
jo
and
xor
arpl
popf
mov
mov
push
jo
jae
jo
adc
pusha
or
pushf
cs
nop
inc
mov
pop
lds
push
bnd
mov
pop
movsl
add
mov
adc
scas
out
in
stos
ss
mov
ret
or
daa
ss
and
or
outsl
shl
ljmp
lea
mov
adc
push
cmp
cmp
rcrb
push
repz
aam
testb
add
imulb
xchg
adc
mov
dec
add
or
jo
movsl
hlt
je
add
and
pop
xor
jl
xchg
leave
rcl
add
jne
cmpsl
in
enter
movsl
sti
pop
xor
and
push
jg
shrb
test
scas
jmp
mov
xchg
cltd
and
add
ljmp
inc
inc
mov
jne
loope
scas
negb
pop
hlt
hlt
pusha
xor
fisubrs
cwtl
cmpb
lcall
cmp
fcoml
cli
xchg
insl
cmpsb
je
xchg
hlt
ret
and
into
fwait
leave
add
jg
test
jae
sbb
xchg
jae
lcall
push
out
std
scas
push
adc
jmp
cmp
or
mov
rorb
loop
cld
xchg
jle
mov
cmc
stos
xchg
cli
ja,pt
mov
pop
mov
jbe
xor
in
and
pop
loop
loope
inc
outsl
add
push
add
sbb
cwtl
and
cltd
std
popf
cli
jo
movb
jecxz
cmp
sbb
stos
mov
pop
cld
lock
mov
push
stos
fcompl
pop
and
cld
sahf
dec
dec
repnz
int
sbb
xor
add
lcall
add
mov
push
ret
pop
pop
mov
and
sbb
mov
pop
jge
push
aas
cwtl
bswap
cmp
pop
inc
iret
ss
inc
ret
ret
pop
jmp
sub
cmpsl
xchg
lods
repz
push
aam
loopne
ret
cmp
mov
add
fsubp
dec
mov
jmp
gs
sub
stos
mov
xchg
dec
orl
and
jne
popa
pusha
je
jmp
fdiv
xchg
and
rorb
cltd
xor
sti
inc
mov
cmp
jno
iret
mov
push
jg
imul
fdivrl
ljmp
jecxz
jge
nop
lretw
push
mov
fildll
dec
mov
popa
adc
subl
lahf
incl
pop
mov
fwait
mov
push
adc
imul
cld
xchg
in
sub
mov
dec
adc
sbb
imul
sahf
sarb
ljmp
or
mov
daa
in
enter
popf
shrl
nop
mov
mov
leave
or
or
test
inc
sbb
repz
stc
mov
xchg
addr16
dec
push
xchg
pop
testl
cli
mull
imul
test
xor
test
into
icebp
jl
arpl
and
sub
jmp
bound
mov
adc
and
add
sahf
addr16
mov
mov
lds
ss
aad
sub
fwait
stc
sub
xlat
nop
pop
xchg
ret
sub
icebp
leave
in
in
mov
inc
out
pop
sbb
test
jb
push
jmp
nop
fdivrl
sub
out
outsb
mov
divl
fstps
pop
pusha
sahf
add
outsl
inc
mov
cmp
sti
test
shlb
clc
shrb
inc
push
insl
mov
cmova
add
daa
in
adc
popf
movb
add
mov
add
add
mov
adc
orb
dec
gs
mov
xchg
enter
cld
sti
rcrl
sbb
out
dec
add
add
shrb
dec
jecxz
iret
or
pop
mov
adc
daa
mov
add
inc
nop
adc
stos
leave
cmpsl
and
lods
shlb
xorl
cmpb
push
jne
insl
in
sbb
sti
xlat
shll
adc
or
loopne
js
dec
out
pop
or
cmp
cmp
je
repnz
ss
aad
sahf
push
add
pop
test
jnp
stc
cmpsb
shrl
mov
pop
and
push
iret
in
xchg
xchg
jl
mov
in
sbb
mov
ret
xor
inc
pop
adc
ret
insb
pop
pop
fwait
add
or
mov
sub
scas
clc
aaa
mov
sbb
mov
les
test
sbb
std
gs
stc
movsl
pop
js
test
jp
jae
mov
icebp
cmc
mov
pop
cld
push
into
adc
push
stc
cwtl
sbb
fisubrl
xchg
sbb
xlat
xchg
xor
in
outsl
mov
std
push
jo
int3
adc
iret
mov
xchg
mov
cmpsl
lahf
pop
popf
inc
sbb
and
and
mov
in
clc
mov
mov
inc
ret
dec
cmc
into
aad
les
in
sbb
xchg
dec
enter
movsl
add
imul
jge
inc
test
jl
sub
loopne
sti
mov
add
mov
sbb
xor
int
adc
shrd
popa
cmp
popa
push
shrb
sbb
jae
add
cmp
aad
inc
cltd
adc
hlt
dec
jbe
xrelease
and
add
push
jl
dec
ret
pop
xchg
lock
sahf
cmpsb
or
fisubrs
clc
cmp
movsb
adc
pop
ja
mov
mov
mov
sbb
sbb
je
mov
loope
push
test
push
daa
ja
mov
popf
call
std
outsl
add
dec
or
add
jecxz
fisubl
or
insb
jne
inc
out
xchg
jne
cltd
inc
adc
jno
inc
movl
inc
push
outsb
int3
movsb
ljmp
and
mov
imul
mov
cmp
jns
movsb
pop
mov
data16
mov
push
enter
into
dec
in
aam
movsl
mov
and
xor
xor
lahf
mov
sub
push
push
stos
pop
xchg
pop
out
test
imul
xor
popa
cmp
add
and
push
aaa
fs
mov
lcall
ror
lock
jns
sarl
popf
and
and
mov
push
and
dec
push
sub
cmpsl
flds
mov
or
jae
adc
ret
insb
test
cs
loop
sbb
pop
xor
add
mov
decl
stos
sti
adc
mov
pop
sub
out
add
push
inc
pushf
or
push
mov
cmp
inc
or
je
pop
cmp
push
int
and
mov
and
jns
repnz
sbb
outsl
or
call
out
push
xor
ss
dec
inc
jmp
cmp
xlat
movsb
cmp
iret
pushf
rcl
mov
aaa
jbe
mov
ds
cmp
aas
mov
stos
fdivs
je
mov
sbb
aaa
bnd
aad
pop
push
call
shrl
mov
gs
inc
xchg
out
jg
dec
ret
cmp
fmull
inc
mov
cmp
cmp
jmp
adc
into
popl
xor
orl
in
fnsave
iret
adc
and
or
stos
stos
imulb
rcr
mov
je
jo
shld
scas
ret
or
rcl
insl
aaa
hlt
imul
jns
pop
cmp
shll
pop
mov
leave
and
jl
std
xorl
inc
xlat
rorl
es
xorl
and
leave
xchg
fnstcw
int3
rol
mov
jno
js
add
in
pop
je
add
popa
jmp
popf
adc
je
das
les
sbb
push
aam
fcmovnbe
cmc
jns
clc
xor
push
inc
gs
mov
xor
and
push
je
adc
dec
stos
ret
iret
pop
fidivl
jg
loope
pop
movsl
addb
cmp
adc
xchg
mov
in
push
sub
xchg
outsl
pop
mov
adc
outsb
mov
or
rorb
idivb
cld
add
and
das
inc
add
pop
sub
mov
adc
inc
mov
sti
data16
loope
push
pop
xchg
jmp
mov
jb
jo
mov
cmp
xchg
inc
test
stc
nop
jecxz
ljmp
ljmp
daa
push
out
das
test
arpl
in
ja
xchg
mov
movsl
jbe
aam
cld
popa
and
or
cmp
add
scas
out
adc
fldt
rcrb
mov
sti
or
and
insl
push
sbb
push
outsl
sub
mov
js
ror
and
stos
dec
add
inc
mov
imul
mov
and
mov
inc
fsts
dec
fs
sbb
sbb
xchg
mov
xor
push
fwait
addr16
xchg
sahf
arpl
mov
leave
pop
mov
clc
and
or
iret
cmp
imul
jl
add
mov
stc
call
imul
add
sub
pop
je
out
sub
adcl
out
mov
xchg
xlat
push
adc
xchg
cmpl
and
add
aas
fs
lds
jl
xchg
push
push
push
ret
sub
xchg
adc
push
xchg
notl
jle
mov
cmp
and
pop
sub
sub
xor
cmp
sub
repz
rolb
adc
xor
faddp
sub
das
fildl
ret
pop
and
rcll
xor
mov
push
pusha
jno
loopne
lock
jl
cmp
ja
call
and
fisubrs
sub
fs
enter
cltd
leave
xchg
mov
xor
lcall
in
cs
fisubs
sbb
sbb
xchg
lahf
int
shrb
dec
sbb
sbb
dec
mov
loopne
xlat
mov
and
inc
mov
dec
and
cmpsl
je
clc
or
lcall
mov
xchg
jl
pop
jp
lahf
movsl
jge
nop
insb
or
popl
arpl
adc
and
dec
test
push
mov
popf
lcall
sbb
xchg
sub
xchg
aas
ret
addr16
iret
sbb
add
jns
mov
sbb
cmp
add
push
repnz
adc
fadds
pop
cmc
xor
cmp
loope
pop
lahf
cmp
sub
in
dec
movsl
cmp
jg
sti
loop
sub
sahf
in
xchg
test
inc
push
push
daa
mov
movsb
cmp
sbb
rclb
orb
mov
jbe
mov
aaa
adc
push
jns
bound
mov
sti
mov
cmp
jp
and
fs
cmp
popf
pop
faddl
ja
xor
jge
mov
lahf
mov
jo
shll
jecxz
jnp
out
popf
mov
mov
add
mov
sbb
sbb
mov
mov
inc
lcall
sub
push
xor
imul
lock
dec
adc
mov
loopne
inc
sub
mov
jmp
push
jo
add
rclb
jg
in
dec
repnz
stos
mov
repz
pushf
aas
pop
dec
outsl
gs
dec
adc
inc
cmp
and
jle
add
lret
daa
pop
mov
cld
lds
mov
cwtl
jb
xorl
dec
fcmove
cmp
iret
pop
and
cmp
mov
xchg
sub
sbb
adc
nop
cmc
and
xor
test
cmp
movsl
popa
test
inc
scas
and
fisubrs
sbb
das
mov
push
adc
cmp
ljmp
insl
xchg
scas
lret
mov
nop
addr16
dec
jge
rcrl
or
out
inc
xlat
hlt
pop
stos
xchg
dec
push
and
and
xchg
jp
arpl
rcrb
test
stc
inc
jo
inc
pop
xor
push
in
pop
or
jge
mov
popf
mov
cmp
pop
cmp
fisubs
fsts
jne
cli
cmpsl
das
push
pop
insb
gs
insb
pushf
pop
dec
mov
mov
xchg
imul
xchg
mov
int
lret
mov
addl
jb
jne
lods
add
xchg
data16
xor
push
push
movsl
push
push
sbb
adcl
xchg
xchg
pop
mov
out
jae
jecxz
xchg
pop
xchg
jg
and
dec
pop
or
and
inc
repnz
cmpsl
jecxz
ret
mov
mov
pop
in
mov
sub
mov
fcmovnbe
arpl
mov
cmpsl
mov
fs
or
or
fimuls
ficomps
mov
jno
aad
in
int
ljmp
lret
adc
jge
je
insl
add
mov
loope
sbb
mov
xlat
data16
bound
call
aas
mov
cmp
cmpsb
inc
mov
sahf
jb
fsubl
mov
xor
mov
push
je
sbb
out
jmp
fstpl
pop
stc
pop
mov
fdiv
and
iret
and
stc
cltd
mov
inc
xor
rclb
shll
dec
loope
in
imul
into
je
mov
lods
insl
inc
ret
sbb
inc
lods
jecxz
push
push
movsl
xor
push
pop
xor
mov
andl
sbb
and
or
shlb
es
sub
push
jg
cltd
insl
pop
adc
push
fwait
mov
js
mov
mov
pop
testb
add
or
shlb
lcall
cld
pushf
jle
jecxz
int3
in
dec
mov
dec
outsb
fidivs
jnp
adc
jge
lea
mov
lahf
hlt
mov
mov
into
outsl
jns
dec
inc
sub
xchg
lea
xor
mov
xor
jnp
out
mov
or
sbb
loope
out
stos
roll
mov
jno
aam
shrl
xor
fdiv
popf
and
mov
adc
inc
xor
mov
cmc
xchg
inc
sbb
enter
loope
sbb
inc
add
gs
mov
mov
jmp
push
mov
ret
dec
mov
inc
test
cmp
ljmp
jnp
jbe
mov
and
cli
xor
or
cmp
mov
mov
pop
jns
push
and
std
push
test
cltd
dec
cmp
jb
dec
leave
mov
arpl
fsubs
loope
imul
adc
out
out
push
leave
sub
mov
jg
rol
xchg
shrb
inc
inc
jnp
popf
int3
pmulhw
in
or
adc
fcmovbe
test
adc
std
push
push
add
push
inc
xor
mov
cld
add
lock
cmp
fwait
mov
jg
jmp
push
shl
xlat
push
xor
sahf
xor
xor
shll
popa
loop
lock
push
loopne
sbb
jnp
scas
xchg
or
cmp
insb
nop
aad
cmp
cmp
dec
icebp
aad
lret
cmp
and
cmp
or
enter
xchg
pop
insb
fsubl
test
in
fisttpll
inc
loope
mov
sbb
mov
stos
sbb
pop
ficompl
pop
aas
or
pop
into
xchg
notb
add
addr16
out
mov
lock
xor
lcall
push
or
push
jnp
and
sub
popf
cmp
and
sub
cmp
sub
pop
jmp
into
xchg
hlt
subl
sbb
adc
jae
inc
mov
push
dec
cli
adc
test
mov
fs
adc
jb
inc
mov
lahf
in
ret
pop
inc
adc
dec
lock
pop
pop
mov
or
rcr
out
pop
jne
nop
mov
pop
jg
xchg
xor
nop
inc
push
and
add
mov
cmpl
jecxz
dec
mov
jo
pushf
lcall
mov
into
hlt
jecxz
inc
shr
and
out
and
push
xor
enter
sarl
pop
and
mov
shl
adc
outsl
push
cmpsl
in
sbb
lcall
lahf
jmp
inc
sbb
stos
cltd
mov
sbb
out
scas
decl
bound
mov
test
cmp
lret
outsl
mov
mov
test
not
aad
mov
mov
shlb
jle
aas
or
test
icebp
sub
rorl
lods
cmp
lds
mov
lahf
popa
pop
pushf
pop
fdivrp
add
out
mov
pushf
fimull
icebp
jo
or
or
out
or
jecxz
sbb
push
call
rorb
mov
mov
mov
or
lea
sub
push
mov
rep
dec
inc
pop
mov
jns
adc
and
stos
lea
nop
daa
aas
mov
add
mov
je
stos
xchg
jp
mov
pop
mov
pop
pushf
enter
aaa
mov
xchg
lock
jmp
negb
or
insl
pop
mov
call
jne
icebp
stos
sbbb
jbe
int
jae
push
aas
aam
orb
jmp
movsb
jmp
fsubs
out
dec
fwait
inc
hlt
sti
adcb
jge
fsubs
jno
push
or
leave
xor
sbb
sub
les
sub
xchg
pop
dec
lock
sbb
dec
sbb
in
or
test
or
int
mov
cmp
jle
xlat
add
jmp
lock
movsb
add
mov
ja
inc
push
or
mov
xchg
stc
imul
sub
or
icebp
jmp
in
ljmp
decl
xchg
shll
mov
sbb
fwait
xchg
pop
sub
mov
adc
mov
mov
push
inc
dec
loop
mov
inc
outsl
cmp
cmpsl
mov
daa
cld
in
lret
pop
rcll
pop
repz
pop
pop
and
inc
daa
xchg
mov
push
notl
or
mov
imul
bound
mov
jecxz
or
repnz
imul
enter
fsubr
into
xor
push
jno
idiv
and
push
pop
test
insb
xor
xchg
nop
xchg
pop
aam
cwtl
mov
push
pop
pushf
xor
test
dec
jne
mov
xor
sbb
in
cmp
jle
inc
xchg
rorl
outsl
fst
enter
outsb
ss
nop
mov
jnp
scas
dec
sti
mov
xchg
test
sub
push
hlt
mov
xor
jae
and
jne
pop
xor
or
mov
pop
outsl
lahf
stos
cmpl
inc
adc
enter
je
repnz
sbb
xchg
and
xchg
popa
enter
sub
dec
xor
xor
and
pop
mov
dec
xor
sub
ss
pushf
xchg
and
push
dec
das
call
push
xor
imul
lret
fidivs
adc
mov
xchg
pusha
xchg
mov
mov
stos
int3
scas
jbe
mov
jno
hlt
fmul
addr16
cltd
inc
ljmp
jae
cmc
data16
cmp
test
xchg
into
add
sbb
leave
pop
mov
les
repnz
jne
pop
mov
fnstenv
xchg
shr
sbb
push
adc
lock
mov
jbe
ret
rclb
mov
fcoms
sarl
cld
stos
xchg
mov
push
mov
ja
add
movsb
orl
xchg
push
orb
popa
lahf
xchg
movsl
jle
gs
stos
cmpsb
pop
pop
lret
or
jae
rorl
mov
and
sub
loop
add
enter
insb
sbb
clc
fstpt
andb
icebp
rcrb
mov
in
jns
jb
test
dec
pop
push
adc
popf
aam
cltd
fstl
or
cmpsl
xchg
sub
cmp
imul
push
cmp
xchg
inc
in
mov
inc
scas
sti
bound
add
insl
cmc
adc
mov
mov
mov
xor
gs
jp
pop
jb
sub
cmp
dec
in
xchg
cmc
into
mov
ret
push
negl
in
mov
add
dec
ljmp
mov
lret
stc
cmpsl
sbb
mov
sbb
insl
test
enter
mov
xchg
sbb
cmpb
mov
adc
insb
scas
mov
xchg
shrl
cli
lcall
shlb
shrd
xor
push
or
cmc
cltd
sbb
leave
ficoms
sub
shlb
mov
xor
lods
xchg
sbb
ror
loop
rcr
repz
faddl
mov
dec
sarl
in
stos
mov
lcall
pop
mov
and
xlat
bound
sbb
mov
dec
sbb
mov
into
fstpt
test
or
in
sahf
dec
and
xchg
aad
mov
jbe
repz
je
and
mov
pop
std
add
push
push
pop
mov
inc
mov
dec
shl
mov
mov
cli
fsubr
mov
jecxz
pop
push
pop
push
cmp
shlb
mov
mov
add
pop
or
lret
and
pop
jno
mov
into
jmp
adc
mov
mov
out
iret
pop
fisubrs
jle
dec
sti
fiadds
dec
sub
fldt
add
cmp
test
or
test
cltd
mov
push
setne
sbb
cmp
cmp
pop
mov
push
cmp
jecxz
es
shl
icebp
stos
cmp
nop
dec
repnz
js
pop
and
imul
or
gs
xchg
fistpl
cmc
mov
punpcklwd
xor
in
shll
test
add
sub
xor
icebp
sar
out
or
sarl
movd
pusha
cmc
daa
aam
ja
int3
ljmp
lods
push
pop
scas
pcmpeqw
inc
loope
mov
ljmp
aam
testb
jmp
lds
mov
push
mov
fcomip
cmp
adc
frstor
cmc
mov
xor
js
repz
xchg
add
rorb
push
hlt
lock
jcxz
xor
sahf
inc
xor
fisubl
ret
add
or
dec
dec
dec
mov
push
fists
loopne
jge
mov
jg
outsl
xchg
push
mov
inc
inc
outsb
shlb
mov
mov
jne
or
pop
xchg
jl
test
cs
xor
push
ret
movsl
jns
cli
subb
cwtl
push
xor
inc
or
ss
push
in
adc
or
mov
mov
out
into
mov
xchg
pop
dec
fisttpl
jmp
arpl
sub
or
pop
cmp
xor
lods
stos
sub
fsubr
int3
aas
cltd
xchg
or
sahf
bswap
xchg
mull
xor
lret
cltd
pushf
pop
and
in
es
std
add
inc
loopne
cmovge
ljmp
addr16
mov
test
loope
and
movsl
and
mov
es
and
mov
mov
jmp
movsb
shr
fs
dec
into
sti
and
sub
sub
push
fcompl
rcrb
outsb
xor
mov
loop
or
sub
jmp
jno
mov
test
aad
es
iret
aaa
jl
rcrl
ljmp
jnp
cwtl
mov
popa
das
push
push
sub
mov
fdivrp
pop
mov
clc
xor
int
xor
xchg
into
adc
popf
sbb
cmp
sub
pop
insb
frstor
jecxz
pop
mov
lret
addb
fnsave
stc
dec
push
nop
daa
mov
bound
mov
jle
xchg
cwtl
pop
add
cmp
adc
and
ret
popa
mov
dec
stos
test
dec
out
dec
pop
mov
jp
mov
sbb
or
pop
scas
out
sub
mov
jecxz,pt
out
ret
das
adc
adc
test
mov
insl
adc
adc
sub
xchg
inc
iret
fcmovbe
outsb
mov
cmp
movsl
cli
iret
cmp
or
fldcw
aam
xorb
loopne
and
fidivs
mov
mov
mov
lret
dec
std
insb
ficompl
sbb
jle
scas
sbb
xchg
cmp
aam
dec
adc
push
lods
ds
push
xlat
inc
ret
mov
dec
mov
pop
dec
jnp
out
fcoms
adc
and
adc
or
ret
or
test
mov
mov
push
lret
pop
popf
scas
jo
cld
pop
ret
test
sub
push
and
ret
std
scas
xor
in
add
dec
jbe
fwait
mov
jg
jne
adc
icebp
ds
dec
and
add
sub
mov
mov
lods
xor
fldcw
ficompl
mov
sbb
mov
inc
adc
jp
fisubs
pusha
mov
cld
xor
int3
mulb
push
add
adc
xor
fildll
push
call
fcoms
outsl
push
adc
div
data16
or
xchg
add
aad
push
gs
lods
mov
addr16
lock
out
push
into
test
push
jl
add
mov
xchg
fsubrs
aas
popa
ret
cs
sti
or
xchg
mov
test
roll
jle
arpl
pop
jne
int3
add
aaa
fwait
inc
aaa
bound
xor
pushf
imul
fisubrs
push
sbb
adc
lods
test
jge
cli
emms
pusha
das
mov
inc
push
inc
leave
dec
cmp
inc
add
xchg
and
testl
xor
cmp
jmp
dec
lea
cmp
repnz
pop
out
add
fsubp
sahf
loope
or
xchg
hlt
js
daa
and
mov
sbbb
sbb
pushf
xchg
ret
push
js
cwtl
lods
mov
xchg
testb
stos
pop
popa
xchg
push
dec
out
icebp
fildll
mov
mov
sbb
out
dec
lea
and
stos
dec
mov
lds
stc
sbb
incl
lods
lock
mov
inc
add
cmp
sub
mull
gs
cltd
add
lret
mov
adc
xchg
push
scas
sbb
repz
or
mov
int
scas
sbb
push
insl
jge
xchg
stos
xchg
xor
leave
out
sub
inc
into
shl
test
into
aad
xor
fadd
adcb
xchg
out
imul
rep
int
pop
mov
stos
adc
notb
out
xchg
cli
shl
mov
outsl
jnp
mulb
lea
mov
or
and
mov
call
adcb
pop
pop
mov
fidivl
fists
jne
adc
fsubrl
repnz
xor
jne
or
stos
mov
std
push
mov
js
negl
push
sbb
pop
out
lret
faddp
mov
dec
inc
in
xor
loop
test
sub
add
bound
stos
jo
rolb
mov
cmpb
mov
cmpsl
sub
adc
sbb
adc
cmpsl
rcl
or
nop
mov
pusha
and
xchg
inc
jno
inc
hlt
cld
push
and
pop
das
daa
je
push
pop
push
loop
iret
xor
sub
mov
dec
push
mov
jo
or
push
mov
icebp
lods
jbe
sub
into
pop
mov
test
enter
lret
xchg
jbe
lahf
mov
push
in
dec
push
fisubl
mov
xor
sarb
iret
mov
frstor
movb
test
add
and
lret
pop
push
jns
fistpl
mov
and
or
shlb
pop
adc
add
lret
push
cmp
cmp
dec
mov
daa
push
cmp
addr16
mov
xor
mov
adc
data16
cmp
arpl
test
push
jb
sbb
test
test
cltd
mov
ja
ror
dec
out
call
mov
mov
jae
add
stc
imul
movq
sbb
les
jno
push
push
mov
xchg
in
sbb
pop
sub
sbb
mov
adc
outsl
arpl
std
adc
cmp
gs
mov
xchg
aaa
dec
sbb
test
aam
cld
xor
addl
sbb
dec
scas
dec
add
lret
push
push
or
clc
ja
sub
es
repnz
push
pop
and
repz
xchg
es
lcall
iret
les
lea
dec
pop
ds
and
xchg
push
cmp
outsl
push
in
enter
sar
lea
jl
popa
or
ret
sub
mov
stos
mov
std
adc
adc
or
inc
lds
loop
enter
cwtl
movsl
mov
push
fdivs
fsubrl
loop
mov
shr
cmp
lea
mov
pop
and
fiadds
mov
fcompl
js
push
jns
les
sub
jbe
or
pop
sbb
ret
or
mov
lret
fldt
into
test
add
jecxz
cmp
inc
adcb
and
insb
push
fidivrl
adc
cmpsb
in
fdivr
enter
inc
fcomps
xchg
jns
push
sbb
xchg
xor
and
mov
pop
add
push
ret
fs
xrelease
fninit
add
dec
pop
std
or
and
popa
pop
add
out
nop
stos
cmp
and
inc
stc
movsb
xor
repz
add
jl
lret
scas
add
mov
fcompl
int
lcall
mov
mov
icebp
lods
push
dec
int
js
fwait
push
jno
dec
imul
xor
lods
mov
jecxz
xchg
xor
cli
shrl
sub
sbb
push
aad
cmpsl
out
cmpsb
mov
fidivrl
mov
out
adc
push
cwtl
add
test
pop
adc
xchg
clc
ja
and
scas
cmp
sbb
and
add
cltd
push
clc
cmp
xchg
aam
jnp
stos
pop
arpl
sub
dec
cltd
push
mov
and
push
jle
push
jge
adc
call
sbb
test
mov
mov
xchg
mov
cli
dec
shlb
dec
dec
cmpsb
push
jle
int3
stc
test
mov
repz
push
mov
out
push
clc
jmp
stc
sub
push
xor
adc
push
add
adc
adc
add
lret
lods
std
push
nop
jp
loopne
or
pushf
fwait
ss
xchg
add
test
hlt
and
daa
push
shll
out
shrl
mov
pop
sbbl
adc
cmpb
daa
je
adc
add
out
jae
popa
sbb
in
cmc
sub
test
cmc
rcrb
mov
or
and
or
pop
mov
mov
pop
out
test
test
and
aad
cs
rorl
add
xchg
out
cmp
out
repz
jnp
push
negb
adc
out
mov
cmp
add
dec
popf
pop
add
sbb
xor
cmc
mov
mov
mov
addr16
mov
add
jl,pn
inc
ja
push
push
sbb
add
jmp
adc
subl
js
insb
repz
lcall
sub
imul
sub
sahf
icebp
push
push
pusha
loope
cld
orl
in
ja
jg
push
xlat
andl
lods
dec
ffreep
lods
mov
repnz
std
jle
dec
mov
fnsave
popf
sub
rolb
sti
xchg
adcl
je
jge
in
js
xchg
mov
or
subb
xchg
lea
push
dec
lcall
ret
and
add
ror
add
sbb
andl
cltd
xchg
inc
and
xor
xor
jnp
sbb
loope
add
mov
pop
jp
pusha
xchg
push
aas
pop
aas
cmp
push
aam
hlt
mov
jae
int3
sbb
sti
gs
add
cmp
xor
int3
in
nop
sub
jg
jae
imul
insb
outsb
cmp
mov
xchg
arpl
movsl
invlpg
jae
mov
mov
lods
sar
inc
mov
movsl
aaa
aad
mov
inc
nop
pop
out
push
jae
push
mov
mov
flds
ficompl
out
into
jnp
hlt
pop
pop
outsb
mov
xchg
push
jmp
aas
pop
outsl
add
repz
jo
cmp
add
sub
pushf
cmp
and
out
xor
aas
fdivrp
mov
sub
xor
cmc
mull
stos
sbb
and
pop
push
xchg
sbb
mov
jmp
sub
mov
xor
mov
lods
dec
les
pop
ja
dec
cmpl
xor
ss
scas
int3
or
lds
loop
push
ds
pop
cmp
mov
ret
orb
orb
sbb
jno,pn
or
add
pop
dec
jne
xor
push
push
addr16
jae
jmp
leave
dec
pusha
mov
xchg
xchg
push
sub
push
mov
xlat
lods
jle
cli
or
mov
lcall
pop
in
mov
mov
jbe
outsl
mov
fidivrs
inc
push
mov
push
adc
fcmove
repnz
sub
xchg
jl
dec
arpl
jmp
rclb
es
sbb
and
shrb
inc
xor
add
inc
lds
rcr
mov
jl
mov
jecxz
and
arpl
fnstsw
rcll
jno
xor
sahf
push
dec
sub
or
push
div
insl
outsl
sub
out
jb
in
mov
into
or
fsubs
ret
inc
jmp
movsl
int3
lds
dec
jle
xor
or
sarb
cmp
scas
data16
pop
jb
out
je
push
data16
aad
sub
lea
sahf
mov
mov
ret
adc
mov
imul
mov
inc
subl
cwtl
out
or
nop
lahf
sub
cs
jl
dec
gs
cmp
outsl
loopne
mov
in
cmc
stc
mov
out
fildll
xchg
mov
lret
ljmp
aas
scas
std
jnp
jecxz
cmp
or
fmull
call
cmp
mov
adc
sbb
push
adc
jae
mov
inc
sub
stos
sbb
push
daa
cmp
ss
js
int3
mov
ficomps
ds
fst
hlt
ret
add
pop
loop
inc
mov
fidivs
popf
inc
sbb
shl
mov
or
out
mov
push
mov
orb
adc
xchg
cmp
hlt
ret
rorb
mov
imul
and
push
xor
sbb
xchg
xchg
aaa
inc
ja
sbb
fsub
popf
xor
clc
jo
test
mov
mov
sub
lcall
and
lock
into
xchg
mov
into
jbe
arpl
fdivl
mov
pop
fs
enter
sbb
push
incl
mov
mov
das
daa
sahf
add
test
pop
sub
add
mov
mov
cwtl
es
xchg
add
stos
mov
popf
push
or
cwtl
dec
cmpsb
mov
inc
std
adc
mov
mov
xchg
dec
das
lock
pop
scas
add
in
cld
ljmp
xchg
mov
out
in
jo
cmpsl
xor
sbb
in
inc
jle
cs
and
mov
pusha
lea
ss
lods
cwtl
sbbb
fcompl
mov
leave
mov
adc
cmp
inc
addr16
xchg
cmp
xor
inc
loop
cld
sub
stos
arpl
fs
int
sahf
loop,pn
clc
fsubrs
loop
inc
shrb
arpl
mov
es
loop
out
adc
movsl
xchg
push
cld
in
jge
push
mov
lret
insl
mov
jne
and
sbb
aaa
pop
jo
pushl
loope
rorb
pop
push
in
fidivrs
aam
outsb
and
popf
xor
cwtl
mov
movsl
xor
inc
xchg
popa
out
mov
inc
mov
sbb
pop
adcb
data16
nop
aas
in
call
xchg
add
orl
lods
jmp
dec
xor
and
push
into
xchg
enter
mov
jno
jno
push
in
sti
in
add
outsb
xchg
pop
inc
push
sti
mov
jb
pop
jno
daa
sub
push
push
shrl
pop
frstor
add
jg
imul
pop
or
push
lret
mov
mov
add
lret
xor
dec
and
sub
mov
dec
xor
cmp
or
mov
test
sbb
push
jl
outsl
adc
pop
data16
mov
pop
jmp
lods
sbbl
scas
repnz
ss
fsubrl
lret
subb
imulb
mov
xchg
addr16
jns
xchg
and
int3
ret
push
xchg
push
roll
out
or
pop
xchg
mov
iret
adc
and
lods
xchg
jae
add
fwait
iret
cmp
add
hlt
dec
cltd
shr
xchg
and
cmp
stos
lods
jae
xchg
hlt
push
pop
push
jge
icebp
pop
push
inc
fwait
cmp
aaa
xchg
and
xchg
sub
mov
fwait
push
and
movsl
push
daa
loop
mulb
stos
sahf
data16
cli
aam
xor
test
ds
lahf
or
popa
insb
add
mov
push
mov
push
push
stos
and
cli
adc
push
or
aaa
mov
pusha
jle
and
shll
push
add
mov
sub
insb
adc
mov
shlb
mov
fimull
lds
cmp
pushf
insb
rcrb
lcall
pushf
jno
lea
and
mov
inc
enter
xchg
xor
and
fadd
add
xchg
cmp
flds
mov
adc
adc
gs
jg
jl
lods
lds
ret
aaa
dec
iretw
aaa
add
sub
int
mov
cs
testl
in
jmp
ja
and
xchg
jmp
test
or
movsb
stos
xchg
sub
pop
or
adc
sar
mov
fs
inc
xor
pop
outsb
lahf
rclb
ficoml
rcll
xor
adc
pop
test
or
inc
lods
mov
cmc
sahf
xor
adc
subb
pop
popl
push
into
cs
cmp
jmp
loopne
das
mov
xchg
xchg
je
cmpsl
sbb
je
add
test
inc
xor
sbb
xor
push
jmp
adc
sarb
insl
lret
xor
pop
xlat
movsb
ljmp
and
push
xchg
adc
mov
aad
fildll
lcall
lock
out
rcrb
pop
cli
or
into
sbb
les
cwtl
clc
xor
fcmovbe
js
push
lods
subb
jbe
xchg
or
fadd
xchg
fcoml
xlat
dec
xchg
cli
cmp
cmp
and
out
jne
aaa
leave
es
repnz
xor
shrl
mov
sub
mov
add
subb
das
xor
jae
pop
mov
clc
jle
cwtl
pop
and
popa
xchg
push
mull
sbb
cltd
sahf
bound
rorl
jno
mov
iret
and
dec
sti
jecxz
test
call
loopne
jne
jp,pn
push
bnd
std
jl
mov
or
push
push
fstpl
cmpsl
stc
xchg
mov
insl
in
ret
dec
fisubrl
dec
and
push
sbb
cmp
xchg
jl
inc
les
add
stos
test
and
es
sub
repz
pop
or
das
lret
push
xor
push
fidivrl
inc
dec
fimuls
repz
pop
add
or
int
jnp
repz
or
mov
sub
pushf
fsubrs
and
test
mov
push
cmpsb
rorl
sub
ror
mov
push
mov
xor
mov
adc
clc
pusha
pushf
push
cltd
out
xchg
jo
cmp
lock
or
incl
fs
or
aas
push
orb
cltd
mov
sub
hlt
mov
cli
bound
test
xchg
mov
sbb
lcall
sbb
int
lds
pop
xor
jl
mov
stos
pushf
stos
pop
iret
push
dec
fldenv
cwtl
pop
jp
in
xor
enter
jg
push
loope
repz
xor
lret
pusha
xchg
into
xor
push
xor
call
mov
adc
inc
adc
xchg
fcoml
hlt
fiadds
cmp
dec
aad
repnz
lods
sbb
aas
cld
test
imul
gs
aas
mov
lods
lods
mov
stc
addr16
pop
jl
inc
xchg
lcall
mov
add
iret
mov
stos
lret
sbb
xchg
addl
loopne
es
mov
jge
cld
adc
insl
xor
imulb
dec
jecxz
fnsave
jnp
jl
je
push
scas
fcompl
je
dec
dec
nop
pop
in
mov
stc
repnz
popf
mov
add
mov
clc
jmp
adc
cltd
daa
lods
push
inc
out
nop
xor
arpl
cmp
movsb
adc
aas
inc
xor
push
dec
jno
xor
sbb
push
loop
dec
mov
js
les
fwait
mov
add
jge
stos
lock
stos
adc
nop
and
stos
das
and
jl
or
cmpsl
jo
ret
push
mov
lret
jb
xchg
push
jge
daa
jo
repnz
mov
add
leave
pop
cmpsb
and
xor
jno
fnstcw
cli
aas
movsl
repz
mov
add
in
jmp
or
sub
pop
popf
or
push
daa
jge
push
and
movsl
scas
inc
je
pop
repz
pop
andb
mov
xor
push
adc
fdivrl
inc
cwtl
iret
aam
icebp
loop
sbb
pop
xchg
pop
ljmp
sbb
mov
shl
push
cwtl
out
inc
fcmovbe
popf
test
mov
sbb
adc
mov
mov
push
jno
sbb
fimull
fsts
and
ret
aas
bound
mov
jbe
xor
lods
shrl
adcl
cmpsb
mov
inc
fsub
in
in
into
mov
fisubs
pop
lea
out
int3
add
inc
lret
movsl
rolb
jne
dec
xchg
clc
xchg
mov
push
popa
and
test
push
jle
sbb
mov
fisttps
xchg
outsl
sub
cmpsb
pop
insb
fisttps
loopne
ds
sarb
and
and
xor
and
stos
subl
inc
scas
push
add
pop
rol
push
rcl
addr16
cmpsb
mov
sbb
psraw
ja
push
add
dec
test
dec
add
mov
and
inc
cmpsb
dec
pop
aad
or
dec
mov
sarl
xor
mov
or
pop
mov
fmul
and
and
add
movsb
fildl
xchg
jno
std
ret
xchg
stc
arpl
xor
dec
mov
xchg
mov
outsl
cs
inc
xchg
stc
jp
idivl
repz
dec
push
mov
int3
in
fiadds
lahf
mov
lcall
lods
xchg
les
fistps
in
sbb
nop
insl
mov
jmp
divb
fdivrs
addr16
dec
mov
sub
mov
insl
int3
mov
push
inc
outsb
pop
pop
inc
lods
daa
inc
popa
fisubrs
shlb
or
leave
push
mov
sbb
jmp
inc
xchg
sbb
xor
les
add
xchg
xchg
rcl
push
movsl
pop
ficoms
fdivl
std
push
inc
mov
daa
repz
mov
push
add
mov
add
jno
shl
jb
jecxz
jmp
xchg
mov
int
bound
dec
xchg
jge
ret
xchg
pop
bound
dec
pop
dec
and
pop
mov
mov
in
jne
repz
stc
test
mov
pop
cmp
xchg
loopne
aas
por
push
xor
pop
xchg
outsb
in
aam
cld
mov
mov
sbb
and
mov
and
mov
imul
sub
movsb
push
rcr
aam
mov
lcall
subl
xor
sub
lds
fwait
push
mov
adc
pmuludq
xchg
xlat
int3
ljmp
add
leave
ret
pushl
mov
outsb
addr16
je
iret
adc
out
push
inc
fs
pop
repz
jo
push
add
lods
mov
mov
cmp
insl
cmp
adc
add
push
or
lods
out
mov
mov
xchg
int3
jg
dec
std
std
out
loop
mov
push
lds
mov
ret
test
jmp
imul
jns
js
adcb
inc
dec
lcall
iret
adc
or
inc
mov
mov
adc
dec
push
xor
mov
jnp
xchg
xchg
jg
mov
sub
sub
push
jbe
fcmovnb
adc
sub
ss
pop
adc
sbb
sbb
loopne
test
in
xor
dec
inc
outsl
call
jle
stos
lret
rorb
pop
sbb
sbb
mov
lock
xor
dec
mov
test
dec
fistpll
daa
das
pop
ljmp
cs
mov
lcall
cmpsl
push
ja
jns
xor
loop
loope
and
ret
inc
insb
call
xchg
mov
pop
sub
jmp
fstpt
mov
sub
outsb
or
cmp
repz
jo
idivb
or
pop
pop
rcl
push
jne
lods
jb
dec
rcrl
ret
mov
stos
loopne
push
push
cli
adc
jnp
xchg
hlt
sub
in
sub
ja
cli
pop
pop
jo
jnp
in
mov
sbb
mov
lds
or
jg
jno
jl
xchg
add
mov
push
gs
dec
js
xor
and
xor
and
mov
outsl
imul
adc
jo
inc
mov
jge
outsl
inc
add
pop
mov
lods
jb
jns
pop
cs
pop
cmpb
cmp
rcrb
gs
mov
mov
pushf
sbb
outsl
add
bound
shr
adc
sbb
xor
popa
mov
int3
shld
adc
lcall
lds
inc
pop
ja
mov
push
jmp
pop
fsubs
sbb
xor
es
xorb
std
clc
xchg
ds
leave
imul
dec
mov
gs
fildll
dec
xchg
cs
lods
out
push
ds
pop
int
mov
push
fcoms
les
mov
leave
xchg
loopne
idivl
mov
test
rcll
addr16
inc
arpl
js
jecxz
call
xchg
push
cmpsl
pop
lret
pop
cmp
xchg
jb
add
std
and
add
lahf
and
push
push
repnz
bound
mov
ljmp
cmp
cld
adc
das
jbe
inc
jno
rorl
mov
dec
imul
insl
mov
sub
sbb
aas
cmp
sub
mov
pusha
push
in
fwait
sbb
jns
add
inc
add
xchg
sti
or
mov
mov
dec
push
mov
pinsrw
and
aaa
sub
xchg
adc
inc
mov
clc
testb
in
push
sbb
mov
popa
mov
xchg
xor
mul
mov
add
insb
mov
cmp
and
lods
in
in
sarl
cmp
xchg
rolb
sti
xchg
enter
popf
lret
fimull
lock
dec
pop
xchg
iret
loope
xchg
std
pusha
lock
ret
mov
dec
pushf
arpl
std
cmpsb
das
mov
xor
int
ret
sbb
pop
adc
mov
pop
arpl
mov
sti
pop
hlt
rclb
movsl
xor
xor
mov
out
adc
sbb
popf
insb
push
imulb
jnp
lock
sbb
movsb
xlat
jae
dec
mov
sub
out
adc
dec
mov
test
mov
popa
sbb
fldcw
sbb
movsl
pusha
jmp
sub
imul
fsubrl
ja
aaa
push
cmp
adc
cmp
notl
notb
push
outsl
mov
ret
sbb
andl
and
scas
jo
xchg
imul
adc
insl
push
or
xchg
sbb
mov
and
jne
pop
dec
dec
cmp
xor
or
femms
cld
push
xor
insb
fisttpll
mov
jmp
push
pop
into
into
pop
push
push
pop
xorb
ficompl
and
and
mov
in
mov
xor
movsl
push
mov
fcoms
pusha
cmovnp
std
pop
add
mov
push
jmp
xor
cltd
icebp
mov
inc
add
cmpsl
call
and
cmp
mov
mov
jns
sbb
filds
scas
xchg
cmp
cmp
sbb
nop
sub
int
nop
and
mov
movsb
fdivrl
daa
mov
lods
pop
sub
jl
sahf
in
cmp
repnz
jb
jae
popf
iret
je
mov
sub
roll
and
lods
sarl
fidivrl
es
ret
push
fsubs
repz
aad
insb
inc
jnp
push
sbb
dec
pusha
sahf
fildl
fnstcw
int
je
push
or
and
ret
lahf
dec
sbb
cltd
pop
adc
dec
add
std
mov
or
push
test
daa
cmc
cmp
pop
cld
out
and
es
pushl
mov
jae
xchg
mov
adc
sbb
outsb
stos
add
inc
push
pop
cmpsl
and
mov
loopne
jmp
mov
push
mov
and
out
mov
js
push
pop
dec
out
xchg
and
push
imull
je
xchg
lods
cmp
fstp
enter
movsb
and
mov
adc
mov
mov
lret
filds
push
mov
repnz
xchg
mov
outsl
das
icebp
sbb
daa
ffree
add
jae
mov
pop
push
stc
and
mov
cmp
or
fcmove
or
push
jnp
lods
test
outsb
sbb
and
repnz
adc
lcall
push
call
xchg
and
sub
mov
addr16
inc
sahf
mov
sbb
test
pop
sarl
mov
lods
loopne
xchg
icebp
adc
aaa
push
inc
push
bound
inc
push
adc
aas
test
add
outsb
out
add
lock
push
enter
push
shl
jecxz
push
xchg
mov
out
addr16
or
pop
lods
js
rolb
mov
add
scas
jb
rclb
fnstsw
mov
push
push
add
insl
dec
lds
dec
out
mov
jnp
and
xor
cmp
inc
or
mov
mov
pop
lret
sbb
repnz
test
mov
xchg
sbb
xchg
lretw
arpl
outsb
test
or
fs
ds
sub
push
xchg
lods
das
iret
es
leave
cmpsb
loope
add
pop
lcall
mov
mov
outsl
push
mov
mov
push
cmp
jo
jecxz
xchg
or
ret
addb
jae
sbb
sub
daa
lock
test
pop
and
mov
call
pushf
dec
jle
js
mov
lods
out
aas
xchg
jmp
in
repnz
xorb
push
nop
lock
add
xor
popf
mov
dec
jno
test
cld
cs
lea
add
inc
xchg
pop
out
mov
push
movsl
out
push
mov
mov
aas
or
lods
adc
in
push
xchg
cmpsb
loopne
mulb
fldt
fcmovne
and
stos
std
dec
pop
test
inc
pop
popw
mov
mov
ficompl
sub
fld
rcrb
mov
jge
stos
adc
adc
adc
mov
push
jp
sub
dec
es
inc
fwait
xchg
shll
ja
ss
int3
loopne
pop
in
cmpsb
ss
inc
inc
and
leave
adc
mov
push
cmp
ja
leave
inc
xor
inc
add
ficomps
out
pop
jb
dec
push
lea
jns
popf
shrb
aaa
aam
fistl
lods
in
dec
mov
shl
inc
movsl
movsl
mov
into
dec
fdivp
mov
out
mov
lret
orl
jp
sbb
and
loopne
cs
or
pop
pop
pop
add
jns
loop
mov
stc
dec
ja
cltd
adc
outsl
ret
jl
stos
outsl
scas
stos
add
pop
jl
mulb
push
aad
mov
adc
fildl
cwtl
sti
mov
mov
add
cmp
mov
mov
or
lret
xchg
dec
stos
xor
mov
jecxz
cmp
jb
loop
jp
orl
inc
cwtl
sbb
and
mov
jge
out
popf
faddl
pop
int3
cmpsl
xor
clc
push
scas
mov
sbb
sarb
pop
lods
mov
dec
jae
xchg
jl
das
gs
push
xchg
sub
fistpl
adc
and
jo
fucom
fwait
xchg
jg
push
add
lea
adcb
rorb
sbb
out
mov
inc
xor
jp
fnstenv
dec
inc
sbb
aas
nop
push
and
dec
rolb
jmp
mov
pop
sbb
enter
cmp
sub
jp
les
arpl
neg
jae
call
dec
dec
call
jg
cmpsl
mov
rolb
jmp
test
xlat
shll
rorb
out
incb
mov
jns
popa
scas
xchg
repnz
mov
lods
lods
iret
and
insb
push
push
gs
push
lret
ret
pushf
pop
mov
mov
mov
sbb
movsl
sub
aas
mov
dec
push
mov
cmpsl
adc
push
lcall
rorb
test
add
jge
and
mov
fcomps
xor
sbb
ljmp
xor
inc
into
adc
mov
mov
icebp
int3
sbb
fdiv
ja
or
xlat
or
adc
cmp
adc
ffreep
pusha
jae
mov
mov
xchg
xor
and
ret
sbb
ret
pop
out
incl
xchg
fwait
out
and
mov
mulb
add
push
add
test
clc
xchg
mov
xor
sbb
hlt
imul
push
in
fdivrl
aas
les
andl
ret
stos
bound
push
or
out
std
mov
and
push
add
test
add
insl
pop
jp
push
jns
xor
jnp
fiadds
dec
and
xlat
ja
push
imul
dec
dec
jae
clc
popa
stos
sbb
sub
loop
push
add
aas
out
call
sahf
imul
aaa
sub
jge
xor
inc
fisubrs
xor
lret
sahf
or
and
daa
jge
in
push
or
lea
mov
dec
push
mov
pusha
jnp
data16
inc
xchg
add
mov
push
mov
adc
lea
ret
pop
dec
xchg
jae
in
mov
out
jle
in
push
mov
mov
pop
loopne
adc
icebp
ret
xchg
call
and
in
dec
push
xor
aas
pop
pop
jbe
mov
lock
pop
xchg
adc
sbb
mov
xchg
test
xchg
add
stos
insb
test
sub
push
rolb
inc
shlb
mov
add
and
add
pop
lea
push
ss
push
sarb
popa
fstpt
push
mov
pop
ljmp
mov
inc
outsb
xor
push
int
push
push
mov
data16
aam
jae
test
pop
fimull
adc
mov
mov
dec
sub
xor
cmc
push
mov
jl
push
ret
and
adc
aad
jns
in
fs
push
add
outsl
arpl
jno
xor
jecxz
adc
js
cmp
daa
add
mov
shll
cmc
jl
adc
pop
imul
outsb
mov
xchg
mov
and
pop
xor
out
pushf
test
xor
push
pop
push
loope
movsl
insb
jb
ja
test
dec
repz
sub
insb
push
pop
cmp
pop
xor
cld
xchg
idivl
movsl
dec
sub
out
mov
add
hlt
jle
jmp
movsb
mov
dec
fcomps
adc
adc
xlat
sahf
scas
pop
xchg
mov
pop
pusha
ret
jp
push
and
clc
insl
and
mov
subl
daa
shlb
and
mov
scas
cld
jns
mov
fincstp
in
iret
aam
jne
xchg
mov
jne
stos
ss
push
xchg
stos
imul
lea
or
std
sub
aas
insb
int
in
imul
dec
xchg
imull
xchg
pop
out
pop
hlt
dec
mov
ficoms
and
jge
scas
adc
aas
mov
mov
add
jle
out
xor
aaa
mov
cmp
or
jbe
aad
ljmp
lcall
les
pop
or
or
roll
mov
jle
imul
push
mov
pop
dec
xchg
mov
push
sub
std
lods
inc
inc
insb
shl
in
cld
mov
cld
cmp
add
loop
and
jecxz
push
in
add
roll
les
inc
imul
jmp
lret
add
xor
mov
aam
mov
jl
xlat
ja,pn
andl
xor
sahf
int
xor
xor
rolb
push
call
fiadds
je
push
xchg
mov
lahf
or
out
int3
jne
out
nop
adc
imul
mov
popa
add
xor
cmpsl
push
stos
popa
inc
mov
mov
leave
mov
mov
lods
int3
mov
fstpt
das
or
jg
mov
movsb
lock
fsubr
test
mov
mov
sbb
add
es
insb
int
mov
or
jge
cld
cli
rcrl
lcall
xchg
pusha
push
incb
cmp
and
es
fsubs
loopne
or
add
test
ds
and
dec
mov
pop
push
or
inc
sbb
jnp
cmpsl
aas
mov
cmc
cs
adc
sti
add
adc
ret
inc
inc
jo
pop
out
cli
push
les
inc
fcmovne
inc
push
mov
xchg
cmp
in
jmp
aad
jecxz
sahf
mov
inc
js
jns
dec
xorb
sbb
ds
ja
aas
pop
je
xchg
lea
in
sahf
add
adc
adc
imul
mov
xor
and
rcll
lret
mov
shl
ret
push
pusha
mov
sti
ja
jb
in
mov
inc
jmp
dec
outsl
rorb
push
out
test
call
cmp
mov
popf
and
pop
movsl
in
jmp
jo
push
adc
fnsave
jb
outsl
sub
pop
jbe
dec
mov
in
das
hlt
ja
popa
adc
push
aam
or
sti
ret
add
sub
adc
cmpsb
and
icebp
ss
or
jns
rcl
add
out
sahf
test
ds
and
inc
scas
inc
cmp
and
mov
sub
cwtl
and
xchg
lock
lret
mov
cmpsb
xchg
add
in
or
xchg
xchg
in
rol
loope
test
shll
fs
adc
sbb
dec
scas
das
sub
sbb
xor
pop
xchg
mov
pop
jge
stc
jae
stc
stos
cwtl
enter
enter
enter
push
jge
rcll
mov
cmpsl
rclb
and
mov
loopne
and
shrb
cmp
pop
lds
sbb
mov
leave
daa
imul
and
sub
dec
pop
cs
push
ret
adc
sar
fiadds
pop
leave
cld
nop
pop
mov
lds
xor
sbb
clc
mov
mov
jae
adc
imul
adc
sub
inc
add
sub
std
adc
mov
push
mov
in
dec
mov
sarl
dec
sub
add
pushf
mov
cld
popa
cmp
cmpsb
out
pcmpgtw
sbb
test
out
fucomp
pop
repz
pusha
incl
fisubrl
dec
roll
out
push
ret
adc
bound
mov
push
pop
add
lcall
addr16
sbb
outsl
sbb
dec
out
sub
dec
outsl
add
test
adc
iret
andl
repz
roll
dec
ret
lea
and
lcall
cld
cmp
pushl
push
mov
cwtl
inc
scas
cmp
loope
pop
mov
adc
outsl
sub
jns
sub
cmp
lods
out
xchg
jg
mov
addl
jl
rcr
scas
or
out
mov
xor
add
pop
inc
inc
xor
dec
inc
jge
pop
pop
icebp
iret
idiv
xchg
lcall
mov
pop
adc
sbb
xchg
or
stc
loope
dec
je
mov
sub
je
and
pop
fadds
mov
adc
xchg
fnstcw
iret
jl
sbb
int
pop
sbb
data16
std
add
pop
loope
in
mov
fiadds
jmp
and
pop
cmp
cs
push
add
repnz
rcrl
adcb
fimuls
into
cli
and
cmp
testb
in
and
mov
adc
inc
adc
inc
mov
andl
mov
xor
int
psllq
lds
push
add
cs
loop
iret
and
sbb
xchg
dec
mov
std
jb
and
xchg
test
stc
pop
mov
pop
repnz
insb
sub
mov
cld
sub
jae
insl
mov
jbe
sti
cmp
cmc
and
add
iret
xchg
xchg
loopne
arpl
fdivrs
push
imul
loop
pop
arpl
xchg
arpl
xchg
es
int3
mov
cmp
shlb
in
scas
add
push
pop
icebp
push
ja
outsl
shlb
fldcw
jo
testb
push
test
dec
scas
fs
clc
adc
cmp
mov
bound
lret
jns
push
mov
pop
jmp
cmp
add
ja
popf
das
test
mov
mov
xor
xor
inc
lret
push
push
inc
mov
jns
mul
jle
out
or
psraw
pop
repnz
adc
mov
imul
imul
shll
leave
add
dec
sarl
shll
into
or
jnp
mov
and
jl
stc
std
jnp
rclb
imul
add
push
ja
mov
lds
jmp
dec
xchg
iret
insb
scas
daa
inc
pop
push
js
imul
xchg
dec
dec
mov
inc
cmp
cmpsl
stos
fwait
pop
test
mov
mov
cmpsb
ret
pop
lock
xchg
insl
jne
iret
repz
stos
lretw
cmp
xchg
mov
out
add
and
adc
sahf
push
jno
insb
sar
jecxz
popf
popa
mov
fdivl
sbb
pop
sarb
add
add
cltd
vmovddup
push
ds
aaa
jg
lods
mov
xor
pop
inc
std
jnp
mov
scas
decl
lret
pop
pop
inc
mov
sub
js
sub
add
and
pop
inc
sub
jle
add
fnsave
lret
xor
mov
sahf
cmpsl
dec
std
push
ljmp
in
pushf
inc
and
je
mov
sub
jb
cmc
inc
notb
jae
ficoml
in
pop
jae
imul
leave
xchg
mov
dec
pushf
mov
sbb
fisttpl
fwait
cmpsb
std
xchg
gs
arpl
mov
jnp
adc
add
mov
cmp
shrl
push
aam
xor
cmp
add
popf
out
test
outsb
insl
or
push
cwtl
sarb
mov
addl
cmp
stos
stos
lds
bound
nop
and
push
fnsave
fdiv
pop
push
repnz
in
clc
mov
cmp
cmp
or
fcoms
xlat
xchg
sub
mov
or
cmp
and
xor
mov
loop
ret
lcall
xor
add
loope
inc
add
mov
scas
mov
xor
adc
and
les
fisubrs
pusha
es
jnp
xchg
dec
rcrl
stos
je
cmp
out
repnz
imul
fwait
mov
fildl
or
mov
or
add
pop
mov
xor
jp
aam
pusha
pop
pushf
inc
mov
and
cwtl
push
in
and
nop
adc
stc
cmpsb
ja
sub
pop
ret
add
jl
aad
dec
cmp
add
sub
sub
dec
dec
add
je
jae
sbb
lock
or
out
test
sbb
mov
cmp
mov
out
jo
mov
adc
mov
gs
loopne
pop
jo
jns
adc
adc
sub
inc
outsl
lcall
jg
jns
ret
or
sbb
pop
pop
popa
cmpsb
insb
dec
add
adc
stc
pop
ss
notl
xchg
jl
mov
dec
pusha
js
sbb
fdivrl
fnstcw
loope
in
pop
aaa
adc
lock
jb
sti
add
adc
lds
cmp
and
jp
push
jecxz
dec
add
or
push
test
stc
aas
cmpsl
lahf
lcall
lret
push
mov
xchg
or
std
out
and
out
aas
add
push
shll
call
push
push
mov
lret
sub
loop
mov
mov
out
inc
adc
mov
pop
movl
movsl
xchg
stc
mov
lods
jno
inc
sti
pop
sti
add
addr16
fs
addr16
push
rclb
ljmp
jo
pop
jne
sar
mov
movsb
and
and
daa
jg
ficoms
xor
jb
jp
mov
dec
mov
xor
or
pop
push
adc
xchg
pop
push
xchg
clc
xchg
gs
ret
js
cli
popf
in
fwait
and
sub
aaa
rcrl
es
insb
adc
mov
in
push
jp
test
repz
test
pop
pop
cmc
mov
lock
push
push
sar
pop
ficomps
ret
fisttpl
insl
mov
dec
pop
loopne
arpl
xchg
cmpsl
cmp
outsb
xor
mov
and
pop
je
aad
mov
sbb
jbe
xchg
mov
or
sti
iret
or
mov
mov
shlb
cmp
mov
lds
pop
cli
xor
cmp
jae
jmp
das
push
out
fdivr
test
arpl
fldcw
add
mov
and
pushf
adc
mov
mov
inc
cmp
data16
out
out
dec
in
insb
push
dec
std
lods
sub
sub
cmc
fucomip
sti
jecxz
add
jmp
xor
xor
and
test
sub
sub
movsl
adc
rcrl
lahf
lcall
mov
pop
popa
sahf
jae
mov
push
js
clc
incb
dec
hlt
fprem
imul
xor
arpl
xor
je
cltd
xchg
in
jnp
and
ret
add
push
sub
and
inc
mov
jmp
inc
loopne
scas
add
inc
dec
fisttpl
scas
mov
idivb
xchg
repnz
pop
or
scas
repz
stos
sub
lret
mov
pop
and
cmp
es
loope
adc
daa
loopne
sbb
sub
int
pop
ret
lret
xchg
sub
in
push
lcall
flds
push
sub
int3
int3
add
aaa
mov
mov
fdiv
dec
push
cwtl
push
loope
or
pop
push
cmp
add
out
push
mov
add
jecxz
xor
cmp
jmp
pop
dec
sahf
xchg
shrl
mov
sub
mulb
js
push
aaa
pushl
repz
or
scas
iret
pop
adc
leave
cmpsl
sub
sbb
mov
ljmp
cmpsl
mov
jge
jl
mov
pand
int
mov
jae
sbb
push
jne
andb
mov
loop
inc
loop
adc
sub
push
mov
cmp
adc
psrad
mov
mov
and
mov
pop
xchg
int
inc
and
pop
mov
mov
mov
inc
pop
inc
add
sbb
jl
or
js
sub
repz
pop
add
mov
xor
aaa
or
mov
pop
xor
cld
sub
cmp
pusha
push
outsb
mov
fwait
add
shrb
push
adcb
rorl
stos
repnz
cmpl
mov
jg
cld
or
jp
aas
ja
xchg
clc
mov
cmp
movsb
add
popf
addl
adc
push
cwtl
push
push
cmpsl
mov
sbb
dec
shlb
jmp
add
sbbb
out
inc
xchg
popa
fbstp
mov
push
push
pop
pushf
inc
pusha
test
inc
cld
mov
fidivrl
or
ss
shll
comiss
and
pushf
mov
pop
pop
xor
pop
xor
push
pop
adc
mov
pop
jno
xchg
ss
arpl
push
pop
ss
lret
or
inc
pop
pop
push
or
pop
jp
or
lcall
jne
jl
sbbb
or
xchg
push
into
clc
dec
adc
mov
lcall
subb
jb
iret
mov
jmp
push
sub
jno
or
cld
cs
inc
stc
sub
stos
cmpsb
jne
pusha
int3
nop
stos
aas
inc
jae
in
adc
add
xchg
xchg
mov
lods
imul
mov
add
pop
daa
sbb
or
or
dec
pop
jb
rcl
test
dec
and
push
ljmp
cmp
insb
dec
cmc
jg
in
stos
lods
add
sub
dec
xchg
add
dec
sahf
fsts
dec
mov
fisubrl
orb
inc
jno
xchg
and
push
push
ficomps
nop
jle
push
sub
adc
and
aad
je
mov
sbb
rorb
lods
push
rcl
pushf
adcl
nop
orl
sahf
jg
cwtl
mov
lock
incb
or
lcall
inc
sub
nop
add
shlb
xchg
sub
mov
add
mov
rolb
mov
stos
dec
sbb
pop
testl
jo
and
test
adc
std
xor
mov
push
das
repnz
jae
mov
sti
mov
xorb
push
in
inc
loopne
fildll
xor
scas
mov
dec
movsl
xchg
lahf
hlt
add
sbb
call
sar
adc
add
cs
push
cmp
loop
mov
xchg
scas
idivb
push
mov
pusha
inc
stos
mov
sub
push
xchg
or
in
ljmp
scas
ror
cmpb
in
xorl
push
xchg
sahf
mov
dec
lock
lcall
std
into
and
pop
adc
cmpsl
cmp
cmpsb
and
jno
push
test
jb
mov
pop
pop
jb
pop
xchg
fisttpl
pusha
out
inc
xchg
xor
xor
addr16
push
inc
cmc
rcrl
shl
pop
jmp
add
sub
clc
es
sbb
mov
das
fnstenv
stos
outsb
push
or
ljmp
jns
xlat
xor
jge
mov
sbb
jge
ret
je
mov
xchg
jbe
xor
insl
mov
out
cmc
pop
xor
mov
and
sbb
add
adc
std
mov
pop
and
dec
in
pop
jge
lret
outsl
cmp
shll
lcall
xor
fsubrl
push
movb
test
leave
js
xor
repz
dec
and
gs
pop
insl
or
rcl
lahf
push
adc
and
imul
sub
adc
sbb
sti
mov
mov
sar
lods
push
and
bound
or
inc
gs
sti
cmpsl
rclb
inc
movswl
xchg
jge
jmp
pushf
ret
mov
clc
add
into
adc
popl
mov
in
mov
test
pushf
fucom
jbe
or
call
mov
repnz
iret
pusha
jo
mov
pop
push
stos
bound
and
adc
push
mov
das
mov
pop
repnz
call
cmp
dec
mov
popf
aaa
push
jbe
lea
inc
mov
lods
cmp
jae
dec
mov
add
fwait
jp
js
inc
das
cmc
push
xchg
jb
fiaddl
xor
ret
sahf
mov
loopne
data16
movsl
leave
or
mov
fwait
push
adc
shll
mov
test
stc
cmpsl
or
xchg
shufps
test
jo
jb
and
inc
pop
cmp
pushf
jmp
daa
add
fnstenv
adc
adc
push
push
or
sub
dec
test
lds
jmp
pop
loop
cmc
jo
cld
fs
lahf
inc
xlat
cs
add
and
add
loopne
lock
pop
mov
mov
sub
dec
inc
sar
push
int
mov
lcall
pop
inc
xchg
dec
or
iret
testb
mov
sbb
adc
cmp
aaa
out
xchg
mov
fwait
add
scas
and
fidivl
iret
push
push
push
movsl
cld
popa
dec
pop
clc
loop
and
idivb
push
out
cs
pop
pop
stc
daa
outsb
mov
xor
out
jae
sti
jmp
jle,pt
daa
hlt
cmp
mov
add
clc
popa
mov
jl
mov
xor
push
xor
lock
add
or
dec
inc
mov
cltd
xchg
cli
imul
mov
mov
out
out
subb
push
mov
into
mov
dec
mov
xor
mov
out
sbb
push
jb
cmpsb
mov
cltd
adc
in
mov
jnp
out
fistps
pop
out
insl
arpl
mov
out
or
int3
test
movsb
sti
adc
cltd
pop
jmp
add
cltd
jp
jbe
xchg
xchg
cli
jl
aas
sbb
xor
ret
adc
test
popf
xor
js
push
jb
adc
inc
call
push
jg
push
cmp
cli
xchg
pop
jmp
jg
rcl
mov
lock
ds
adc
ret
sbbl
pop
jecxz
sub
fldl
clc
hlt
dec
and
mov
cmp
cld
mov
scas
notb
jnp
or
or
and
cli
lds
das
lcall
fdivrs
ficomps
mov
xchg
test
lret
pop
dec
in
xchg
dec
sbb
stos
adc
mov
push
mov
xchg
sti
mov
sub
xchg
inc
xchg
popl
sarl
das
icebp
fimuls
or
mov
add
pop
jmp
nop
mov
jne
rolb
add
mov
shll
insb
pop
inc
push
popf
inc
movsl
shrb
sti
insl
idivb
cwtl
push
sbb
push
les
pop
mov
add
push
cmp
jnp
cli
call
mov
jp
dec
cli
frstor
push
and
sub
adc
data16
push
fidivs
dec
jg
cmp
stos
xlat
cli
in
in
push
xchg
fistl
movb
xor
test
sub
fildl
fimull
mov
dec
jg
cltd
dec
imul
cmp
loop
cmc
pop
dec
mov
cmp
cld
sbb
or
or
inc
mov
test
leave
cmp
adc
stc
pop
dec
cld
mov
outsb
fimull
or
stos
cmc
jmp
jge
pop
ljmp
jmp
daa
clc
aas
cmp
pop
mov
mov
data16
lcall
fs
xchg
push
push
jbe
fiadds
xchg
int3
pop
jo
ret
lock
in
or
ficompl
xor
or
jb
iret
push
push
es
clc
mov
arpl
or
aaa
fldcw
testb
and
or
lcall
mov
int3
into
and
out
dec
test
fcmovb
sbb
ja
dec
jmp
mov
push
addb
push
pop
mov
mov
pop
cmpsb
in
fwait
lret
shr
mov
cld
push
inc
sub
aam
mov
cmp
push
out
xchg
sub
pop
out
jmp
lods
jb
push
mov
in
scas
lock
lcall
insb
or
pop
imul
pop
or
aam
icebp
mov
pop
push
pop
subl
outsl
mov
filds
lea
jne
fdiv
xchg
mov
and
cmpsl
xor
and
mov
ror
cmp
sub
adc
mov
shrb
add
aam
cli
faddl
xchg
mov
fstpt
sahf
insl
lahf
dec
in
mov
arpl
adc
test
sub
sub
sbb
inc
stos
adc
fstps
call
mov
xchg
or
push
pop
daa
iret
ficomps
lea
push
cli
adc
dec
es
std
ret
and
fcoml
pop
adc
pusha
cmp
ds
jl
std
notl
lea
jns
mov
in
jno
inc
mov
xor
leave
and
inc
jne
adcl
daa
pusha
mov
push
fmul
cmp
je
test
sbb
and
pop
adc
add
sbb
lahf
adc
mov
popa
jne
mov
mov
sub
push
xchg
stc
addr16
jno
ljmp
xchg
imul
pop
sub
ds
jns
jmp
pop
inc
mov
sub
mov
cmp
dec
xor
push
aas
cld
popa
mov
sub
dec
scas
cld
pop
xlat
repz
test
sbb
jg
push
mov
xchg
xchg
hlt
sti
and
aam
xchg
push
push
stos
flds
pop
fidivl
push
or
repnz
in
jno
iret
jnp
sub
xor
in
fadds
mov
std
pop
or
std
pop
nop
sahf
pop
insb
and
dec
inc
pop
fiaddl
dec
jo
imul
add
ret
arpl
push
lds
dec
inc
push
mov
scas
jne
dec
pushl
mov
addb
cmc
adc
and
push
cltd
pop
push
ljmp
fucomp
adc
mov
xchg
popf
insl
lods
xchg
insl
mov
mov
loopne
jmp
xchg
xchg
das
mov
insl
imul
aam
js
mov
mov
and
lahf
pop
popa
pop
sub
mov
or
ret
hlt
subb
fstl
inc
mov
and
add
stc
and
ja
fisubl
mov
mov
iret
dec
fsts
jae
dec
loopne
insl
int
add
ret
dec
cmpsl
in
and
in
or
dec
jge
pop
dec
mov
es
into
and
das
in
lods
gs
out
std
or
dec
das
cmp
lret
or
fistps
test
sbb
mov
ja
and
les
mov
ja
ds
cmp
add
shrl
add
sub
aaa
add
movb
faddl
and
mov
mov
adc
out
jge
cmpsl
lods
je
fadds
push
or
cmp
fisttps
add
into
lods
in
xchg
fistpl
jbe
mov
addr16
aas
outsb
lods
pop
test
ja
movsb
fs
sub
xor
sbb
mov
xor
cld
pop
orb
push
fisttpl
mov
out
mov
inc
xchg
loopne
je
or
pusha
fs
cmc
or
fildll
je
inc
xchg
add
mov
nop
xorl
int3
cwtl
fimull
push
dec
add
imulb
loop
adc
icebp
jg
cmpsb
push
ja
sbb
jbe
jb
imul
cmp
inc
popf
out
cmc
in
out
mov
jp
mov
aaa
jp
sti
push
push
into
sub
sti
mov
shl
mov
pop
fsub
cmp
push
mov
xchg
xor
xor
jle
push
adc
mov
push
cmpsl
adc
sub
add
push
mov
add
mov
incb
jnp
lahf
aas
idivb
data16
sub
cmpsb
mov
ja
xor
sbb
jg
cmp
sahf
inc
stos
or
repnz
in
cmpl
inc
test
les
fcomps
dec
shlb
gs
pop
add
insb
mov
mov
stc
add
push
pusha
dec
pop
mov
cmp
lahf
push
xor
inc
fs
aad
add
mov
inc
iret
sub
ret
push
imul
mov
imul
cvtpi2ps
aad
dec
ret
pop
dec
cltd
dec
xchg
push
sbb
outsb
daa
cmc
jb
sti
and
cwtl
sub
pop
xchg
jb
aam
cwtl
roll
mov
icebp
pop
adc
subl
aaa
adc
sub
and
mov
push
and
inc
mov
addb
arpl
sbb
daa
xchg
push
sub
std
cli
xchg
xchg
pop
push
inc
jp
iret
call
lret
sti
sub
jle
adc
test
add
or
inc
push
gs
les
dec
mov
je
xor
fadd
inc
xor
das
shl
icebp
incl
jo
cmc
xchg
lods
lret
dec
jle
aad
aas
cmpsl
mov
in
pop
out
push
imul
ret
mov
mov
test
inc
or
jmp
push
aas
std
push
push
loope
push
lods
mov
aaa
jbe,pn
lods
mov
cs
jle
lret
push
jecxz,pn
jp
push
icebp
stos
int3
sbb
cmp
outsl
xorb
mov
pop
add
adc
in
sub
imul
mov
pop
jns
outsb
push
out
jne
popf
inc
es
pop
stos
push
orl
lock
inc
sbb
and
add
js
and
dec
adc
jns
or
andnps
mov
push
lret
fldenv
ds
mov
push
sbb
dec
jle
mov
xor
data16
inc
dec
sub
ret
es
dec
or
test
xor
push
test
dec
out
xchg
mov
movsl
cmp
ret
jge
imul
inc
lea
minps
push
cli
imul
mov
or
adc
and
mov
mov
ss
mov
dec
xchg
xchg
aad
lods
sub
loope
jg
xor
dec
lcall
addb
sbb
repnz
shrl
sub
sbb
mov
push
adcl
sub
push
mov
lret
mov
jge
sahf
cwtl
rolb
loope
aaa
push
add
xchg
mov
cmp
xchg
daa
inc
mov
int
mov
inc
add
enter
dec
add
dec
iret
pushf
divl
leave
movsl
cld
pop
jle
ret
into
sbb
fstps
stc
popa
imul
stos
out
fisubl
jle
lahf
stc
cwtl
inc
iret
leave
mov
cli
sahf
mov
inc
mov
and
add
xchg
test
and
mov
dec
xchg
push
dec
stos
push
fadds
dec
fdivrl
push
push
mov
dec
push
cmpb
ljmp
scas
mov
and
fcomps
ficoms
rol
pop
lods
fstps
pop
mov
mov
mov
add
clc
mov
mov
sub
test
jp
negb
sbb
std
loopne
cmp
cld
push
or
or
cmp
or
movsl
xchg
sub
ljmp
call
lods
test
stos
dec
nop
xor
js
lcall
push
mov
and
cmp
sub
in
xchg
iret
loopne
sub
sbbl
call
inc
cmpsl
aaa
xor
loope
sub
sahf
ffreep
mov
daa
mov
push
or
and
mov
pop
scas
and
imul
xchg
mov
call
or
popa
sar
or
xlat
and
mov
repz
out
cld
dec
sbb
jno
add
in
mov
addr16
adc
push
inc
xor
into
and
mov
pop
xlat
leave
test
les
mov
mov
add
cld
xchg
mov
mov
scas
pop
lret
mov
cli
cmpsb
fistpll
stos
lret
lretw
mov
imul
fwait
mov
push
scas
out
mov
aam
cmp
lea
ss
jns
fs
mov
hlt
lods
loop
mov
push
mov
aaa
inc
mov
stos
mov
jne
xor
decb
or
xor
lock
sub
lret
jo
lahf
mov
lock
stos
push
add
das
add
ret
loopne
pushl
xorl
dec
mov
jle
jbe
mov
cmp
lods
cmp
leave
shll
ja
ficoml
push
pushf
pop
xchg
dec
stos
in
orw
xor
or
mov
sbbb
iret
test
cmp
inc
xchg
xchg
mov
adc
pop
dec
xchg
and
and
and
lock
push
lahf
xchg
pop
adc
or
push
jnp
arpl
fsubs
mov
xchg
pop
lock
aam
outsb
sub
test
xchg
pop
mov
or
mov
std
xchg
add
iret
inc
push
das
out
mulb
mov
add
popa
sub
cld
lods
mov
inc
add
repnz
pushf
out
jnp
fisubs
cmpsb
scas
in
fisubl
loope
jmp
cmp
mov
pusha
adc
test
or
push
jbe
sbb
mov
in
mov
inc
add
test
cwtl
lret
in
jne
push
jge
add
and
lcall
jnp
test
ret
inc
out
adc
or
js
jne
scas
cld
adc
add
sbb
repz
cltd
popf
push
add
in
bound
int
mov
mov
pop
inc
mov
stos
pop
cli
cmc
mov
stc
mov
pop
notl
xchg
mov
and
jns
dec
jmp
inc
sub
jp
and
mov
pop
add
loope
adc
mov
mov
jge
mov
dec
add
lock
and
push
mov
gs
scas
loopne
xlat
push
hlt
and
pop
test
in
mov
testb
pop
and
ret
pop
mov
pop
sti
xor
stos
adc
sub
xchg
mov
xor
mov
mov
xchg
lds
in
lret
testl
arpl
cs
test
pop
push
insl
jno
xorl
and
mov
fstps
xor
std
sub
adc
popf
ja
test
sub
dec
jns
xor
xchg
and
lcall
or
inc
add
loop
rcll
ficoms
outsl
mov
mov
dec
mov
cmp
ljmp
test
test
mov
xor
mov
xor
push
leave
sbb
cld
xchg
in
dec
mov
imul
or
xor
inc
mov
push
rcl
push
mov
loopne
hlt
jg
or
das
jl
dec
lret
push
dec
mov
or
pushf
gs
loop
adcb
imul
je
shrb
rcrb
sbb
mov
xchg
idiv
cmp
test
enter
scas
mov
dec
mov
push
ficoml
aaa
fidivl
shll
out
sti
adc
ljmp
test
arpl
insb
stos
jo
push
push
repnz
cmp
inc
cmpsl
jmp
or
xor
and
mov
fstpt
jnp
je
dec
ret
mov
xor
and
adc
jns
jae
xchg
cmp
sub
inc
xor
inc
push
sbb
or
sub
sbb
mov
push
fistpl
shlb
arpl
xor
repnz
repz
cmc
sti
arpl
add
mov
fnsave
or
xchg
stos
shrl
mov
cmp
jns
dec
add
cmpsb
jp
ficoms
inc
addr16
sub
inc
fdivrp
pushf
clc
arpl
jne
jae
lds
sbb
pop
cmpsb
stos
stc
push
imul
test
fs
cli
jb
sub
cmp
mov
paddd
imul
or
stos
scas
sar
rorb
lods
mov
pop
bound
push
add
cmp
daa
inc
inc
pop
shl
vunpckhps
push
repnz
fistl
push
pop
sbb
xor
aaa
fldcw
xchg
aam
cmp
jp
gs
pop
jns
pop
out
push
movsl
push
xchg
nop
mov
dec
outsb
sub
sub
daa
cmpsb
cmp
fildl
cmp
pushf
stc
push
cwtl
xchg
pop
popl
mov
lret
or
pop
ja
sub
jle
xchg
dec
data16
jmp
jg
add
mov
fldenv
cmc
cmp
aas
jmp
sti
movsb
mov
ja
push
adc
xchg
lods
sbb
ja
mov
nop
xor
cs
dec
push
mov
xchg
ds
test
aam
pop
sub
inc
sahf
rep
pop
aad
cmp
xlat
andl
xchg
fisubl
notb
flds
aas
je
push
incl
pop
mov
lock
pop
xorb
and
lds
lahf
fadd
ret
fwait
sti
cmpsb
stos
sarl
lahf
repz
int
ret
arpl
jo
fistpll
inc
pushf
mov
idivb
ja
orb
cld
mov
push
shl
sbbb
xchg
mov
xor
sub
and
dec
dec
ret
xor
bound
dec
lcall
or
int3
mov
in
test
xchg
and
dec
inc
xchg
rcrl
pop
jmp
leave
add
or
push
repnz
jno
je
mov
pop
cmpxchg
stos
aas
ret
dec
loope
jp
lods
in
pop
adc
ret
pop
mov
ja
adc
xor
lret
jo
sub
adc
mov
scas
test
fcomi
sub
xchg
jp
sbb
fs
xor
and
and
loopne
arpl
cmpsb
adc
inc
std
repz
xchg
adc
aam
inc
push
int
xor
mov
push
xor
int3
popf
push
ss
xor
jo
cltd
lea
in
fists
test
movsl
ljmp
mov
mov
xor
test
jno
andl
cmp
fisubrs
out
lock
jmp
sarb
cmp
addr16
jp
dec
aaa
push
pop
jbe
pushl
and
es
or
pop
cld
gs
jne
addl
mov
repnz
lahf
inc
pop
push
lahf
pop
scas
sti
pop
inc
int
aaa
mov
jno
fincstp
or
out
pop
add
or
add
pop
mov
movsl
mov
popa
pop
es
fidivs
push
fbstp
scas
inc
mov
aas
pop
jge
cwtl
addl
inc
mov
icebp
ds
cmpsl
in
in
mov
xor
mov
int
ja
xchg
push
test
mov
inc
sbb
js
outsb
out
mov
xor
xlat
inc
mov
mov
outsb
or
outsb
dec
shll
mov
hlt
mov
cwtl
je
mov
cmp
dec
push
and
popf
add
es
mov
cs
inc
mov
mov
sbb
and
lahf
outsl
ja
mov
push
outsb
add
cmp
pop
popf
xor
stos
sub
sub
mov
push
sbb
loop
nop
ret
orb
pop
sub
ss
mov
pop
out
xlat
stos
cmp
movsb
clc
or
xchg
inc
idivl
xchg
push
adc
fcompl
jnp
repnz
rol
cmp
sub
ja
imul
cmpsl
fisttpl
in
xchg
imul
jne
enter
fsub
xchg
test
insl
sub
and
iret
adc
dec
or
and
push
sub
cmp
andl
js
push
xchg
xlat
xor
lcall
in
lret
jg
adc
out
imul
insb
sbb
pop
fs
mov
or
pop
punpckldq
inc
pop
loop
and
sbb
psubsb
rclb
mov
inc
xor
mov
jae
loopne
sub
or
setno
jo
pop
pop
shrb
scas
mov
ret
movsb
or
mov
roll
movhps
xorb
mov
cs
or
mov
or
cwtl
rcll
idivb
in
dec
dec
xor
sub
arpl
or
test
mov
jg
out
adc
cwtl
call
test
in
sbb
inc
cld
subl
cmp
out
fstl
divl
in
mov
bound
jns
sub
aas
adcb
inc
xor
jg
rcll
mov
in
lahf
scas
sub
popf
pop
repz
out
push
fs
shl
mov
fucomip
sbb
notl
push
lahf
sahf
cwtl
aam
repz
push
popf
fsubs
fs
out
lods
jmp
ret
loopne
shl
pop
push
mov
jae
js
jl
and
sbb
cmp
rclb
mov
inc
repnz
addr16
lods
xchg
jae
in
push
xchg
shl
ss
or
adc
mov
aaa
orl
movd
add
fldt
sbb
or
leave
out
popf
fadds
mov
lea
pop
xchg
and
dec
sub
imul
xor
xor
jl
sub
dec
inc
mov
inc
mov
dec
test
aas
bound
or
rcrl
decl
adc
push
cmc
pushf
pop
pop
jb
sbb
lea
mov
jmp
add
add
or
clc
add
push
daa
ret
push
std
or
mov
stos
add
hlt
jnp
pop
inc
fildl
clc
insb
jmp
sbb
mov
test
xor
jmp
sbb
and
loop
mov
pop
sub
cld
movsl
pop
ficoml
jp
mov
and
scas
inc
clc
push
jbe
inc
push
mov
or
scas
push
xor
test
cli
push
ljmp
pop
adc
dec
adc
push
daa
outsb
fnstenv
addb
xchg
into
lods
mov
loopne
dec
lods
pop
pop
pop
xor
and
jecxz
pop
sahf
rolb
xor
outsl
xor
fisttpll
popa
mov
aaa
mov
fisttpll
cmp
pop
xchg
cs
sbb
sahf
sub
xor
data16
jae
stos
mov
cmp
fldcw
dec
dec
lret
and
lret
adc
dec
xor
repnz
jl
aaa
ljmp
mov
jmp
lahf
shlb
mov
test
xchg
sti
dec
jo
push
jmp
push
scas
or
push
pop
lahf
and
push
les
rclb
inc
push
popf
pop
xchg
mov
fsts
add
inc
lods
xchg
leave
and
fiaddl
loopne
stos
sbb
push
mov
pop
mov
mov
add
out
aas
pop
adcl
std
sbb
push
pushf
lret
sub
mov
out
dec
fwait
push
into
add
xchg
cmp
std
inc
js
aam
sub
xchg
fmull
lret
xor
movsl
jg
jg
cmp
jl
out
repz
stc
adc
rcll
xchg
cwtl
xchg
sbb
sbbl
daa
sub
add
xor
ss
push
leave
cmp
pushf
idivl
inc
add
push
pop
xor
add
aad
inc
push
mov
push
xor
sbb
or
add
xchg
imul
jnp
test
jno
jbe
mov
jno
pushf
or
pop
mulb
imul
push
test
push
mov
imul
pop
lahf
jnp
xor
dec
out
jne
xchg
dec
adc
testb
out
les
jge
fwait
sbb
icebp
loope
pop
rcrb
hlt
xchg
test
loop
jge
xorl
mov
mov
cmp
sbb
and
lret
add
std
in
lcall
fs
in
jmp
rol
xor
les
lock
pop
jle
mov
arpl
cmp
sti
push
cld
mov
fcmovu
or
push
inc
loope
pusha
xor
or
frstor
adcb
pop
mov
dec
sub
dec
fistl
repnz
js
bnd
cwtl
sbb
std
sub
daa
into
mov
or
int3
inc
ret
sub
mov
jnp
divb
les
push
repz
iret
pop
and
rcr
dec
rcll
push
xor
sbb
cld
in
inc
clc
shll
sar
xchg
clc
ja
cmp
sbb
inc
jno
hlt
xor
pop
je
fidivrl
pop
sbbb
lods
sti
or
sub
fadds
out
sahf
sbb
mov
ja
inc
nop
push
fdivl
mov
and
rcr
xor
frstor
iret
xor
or
mull
mov
int3
jnp
adc
addr16
inc
pop
rorb
and
inc
and
outsl
xchg
leave
jnp
or
pushf
loop
out
fsubrl
icebp
xchg
adc
xchg
jle
adc
movsl
add
test
or
adc
outsb
mov
or
fnstenv
decl
loop
xchg
lods
push
lods
mov
push
repnz
lods
lods
dec
inc
adc
sbb
or
cli
frstor
repz
sti
outsb
fs
cmp
inc
hlt
out
sbb
pop
ficompl
pop
scas
push
mov
sbb
add
adc
mov
sbb
loopne
movsb
mov
lahf
mov
cld
outsb
jle
sbb
out
xor
mov
and
xchg
clc
lods
cmp
testb
inc
dec
cs
icebp
cwtl
sbb
adc
outsb
outsl
mov
in
outsb
dec
test
cmp
loopne
mov
rorb
sbbb
or
fstp
shll
adc
push
xchg
or
cmc
outsb
push
inc
mov
popf
sbb
dec
jp
sti
mov
sbb
cmp
popa
sub
cmc
sub
mov
sub
in
rorl
clc
scas
cmp
lret
cmp
pushf
int
pop
sub
or
mov
push
fstpl
inc
out
aam
xchg
adc
mov
inc
add
jnp
add
icebp
ds
popa
xor
inc
xor
out
jno
lret
xor
rol
sub
lea
and
shrb
repnz
jno
jmp
arpl
mov
lahf
andl
xor
daa
and
push
cmp
mov
lods
push
pop
mov
fidivrl
rorb
repnz
filds
adc
scas
pop
out
cli
lea
std
xor
loopne
xchg
dec
cmp
ret
lods
iret
xlat
xchg
xchg
in
inc
cli
mov
jo
mov
cmp
sub
sbb
ljmp
and
mov
add
les
inc
call
mov
and
rorb
daa
add
jecxz
movsl
add
rclb
pop
es
shrl
inc
mov
pop
jno
vpcmpgtb
aam
xchg
sub
mov
fs
clc
movsb
adc
mov
xchg
lcall
dec
repnz
in
and
or
pop
pop
int3
pop
stos
test
sbb
push
callw
leave
pop
popf
xchg
mov
ds
fmuls
imul
add
pushf
push
jbe
pop
subb
jne
push
fcomip
inc
xchg
xorb
clc
mov
popl
pop
sub
sbb
mov
out
adc
cmp
out
xchg
stos
add
jle
xchg
stos
hlt
adc
rorl
or
mov
or
sub
inc
lods
mov
sbbl
push
or
imul
dec
addr16
jo
fadds
and
sbb
dec
ss
dec
push
dec
test
cmp
mov
mov
adc
mov
and
xor
aad
lock
add
sahf
mov
fstl
push
test
in
dec
movsl
jo
mov
mov
pushf
scas
jno
fwait
push
pusha
int
clc
jg
sti
aad
popf
cmp
sub
xlat
test
push
lods
dec
push
push
mov
xor
cld
in
pop
cmpsb
pop
fdivs
fists
les
cmpb
out
popa
mov
xor
xor
sbb
ljmp
push
lea
int
test
jle
mov
sbb
push
pop
in
imull
out
jo
add
cmp
lret
mov
or
or
mov
sarl
ja
jns
jecxz
sarb
sbb
lods
pop
iret
mov
mov
cmp
idiv
pop
xchg
test
lahf
xor
mov
nop
roll
fbstp
mov
decl
xor
data16
mulb
xlat
bound
pushf
sbb
das
test
ret
test
arpl
sbb
addr16
repnz
mov
or
insl
in
mov
xchg
cmpl
pop
loope
sub
jmp
adcb
sub
in
bound
push
adc
lcall
mov
stos
xchg
inc
cmpsb
push
or
arpl
cmp
jo
mov
mov
imulb
enter
test
daa
mov
inc
movsb
and
pop
jns
test
fadds
outsb
nop
dec
or
daa
dec
inc
or
sbb
cs
dec
subl
daa
and
or
stc
lret
jae
pop
push
pop
jle
cs
mov
sub
jbe
stc
pop
popf
mov
mov
cmp
daa
fldl
mov
std
ljmp
loope
movsb
add
mov
decl
in
mov
cltd
xchg
sbb
cmpsb
imul
lds
xor
outsb
sbb
xchg
dec
pop
fisubrs
mov
das
ja
scas
pushf
pop
clc
lock
cld
xor
movsl
xchg
iret
mov
lock
xor
ss
cwtl
lock
push
ds
sub
mov
mov
push
aam
push
push
jbe
push
scas
push
jmp
jbe
mov
jo
push
mul
mov
or
iret
ficoms
addr16
frstor
inc
xlat
mov
out
push
data16
sti
stc
pop
mov
jg
xor
sbb
add
adc
movsl
insb
dec
mov
adc
loop
jmp
jo
fcomps
gs
inc
mov
scas
cs
inc
mov
in
add
push
sbb
mov
jecxz
stc
ficomps
nop
mov
pop
push
jae
iret
mov
push
pop
sbb
scas
pop
daa
sub
or
push
subb
sub
test
sub
push
test
shrb
jg
inc
lods
sti
push
sahf
mov
push
mov
sub
xor
jbe
sbb
inc
pop
sbb
dec
aam
dec
sbb
adc
cld
test
adc
lcall
mov
cld
jmp
loope
cmpsb
ja
or
addr16
add
xor
dec
inc
mov
mov
loop
out
mov
add
mov
dec
lret
sub
jb
and
mov
stos
aaa
out
mov
dec
cmp
dec
cmpsl
movsb
or
lock
loopne
dec
stos
repnz
jb
cs
ret
aas
mov
pop
loop
test
mov
icebp
test
aaa
fdivrl
pop
or
lcall
ljmp
push
daa
xor
jle
xchg
inc
or
pop
test
inc
daa
push
pushf
mov
jle
add
aaa
sbb
mov
sbb
movsb
fbld
outsl
xchg
rolb
ret
push
fistps
xor
insl
xor
mov
jo
mov
ret
lea
aaa
or
div
fs
mov
push
daa
xor
mov
sbb
scas
stc
xchg
mov
stos
lods
dec
movsl
subl
insb
cmp
jne
cli
pushf
dec
xor
dec
jno
and
test
mov
ret
movsb
adc
fcoml
jle
mov
add
stos
outsb
lods
xchg
push
arpl
inc
cld
lock
mov
adc
scas
jnp
mov
pop
movaps
xor
push
push
mov
mov
sub
dec
jae
dec
xor
add
and
int
add
loope
push
stos
xor
and
rcrl
fimull
fnstenv
cmp
mov
std
sub
pushl
sbb
das
loopne
mov
nop
cwtl
iret
in
mov
sahf
sub
mov
lahf
lcall
jns
jns
fnstcw
mov
sub
pop
push
sub
lcall
jns
stos
pop
insl
push
loope
fsts
adc
jle
test
jb
push
ret
shl
hlt
dec
popf
jp
sbb
dec
dec
fwait
in
jne
scas
call
sbb
jmp
js
sbb
inc
stos
lock
jmp
xchg
mov
stos
xor
int3
add
out
or
push
cmp
xchg
and
lahf
lea
mov
lret
imul
mov
outsb
jecxz,pn
jns
jno
pop
iret
push
pop
scas
add
stc
mov
dec
stos
mov
pushf
jno
xchg
sub
xchg
jo
sbb
and
push
xchg
repz
xlat
rcll
pop
imul
test
popa
cmc
mov
in
jecxz
out
or
ret
inc
jnp
or
stc
setno
scas
lahf
pusha
sub
sahf
fcmovu
jmp
cmp
js
push
jae
dec
pop
addr16
int3
lcall
mov
lret
inc
xor
movsb
push
cld
ljmp
subb
adc
sbb
iret
fcoms
sbb
xor
sarb
ja
jb
push
pop
push
shll
push
adc
mov
or
or
inc
movsb
das
xchg
push
movsl
xor
or
mov
cmp
inc
add
add
stos
mov
rolb
cmc
rorl
mov
mov
mov
stos
cmc
xor
in
das
lods
xlat
xchg
cltd
sub
lret
xor
mov
aam
mov
and
aaa
or
xor
and
rolb
sub
ficomps
inc
adc
mov
pusha
shl
inc
mov
subl
fldcw
in
mov
cmp
pop
jmp
roll
cwtl
jl
cwtl
notl
xchg
outsb
aad
stos
les
into
lahf
insl
iret
in
testb
nop
mov
int3
add
cmpsl
ds
and
adc
or
pop
add
insl
call
ret
dec
sub
cld
stos
stos
sbb
cmp
insb
inc
pop
push
mov
mov
and
mov
out
jbe
inc
jae
sub
rclb
jmp
popf
ret
adc
xchg
sub
insb
xchg
aaa
and
dec
xor
cmp
es
int
test
add
pop
dec
lahf
popf
and
stc
mov
lods
pop
shrb
test
std
bound
imul
loope
pop
dec
in
aad
inc
adc
inc
das
aad
fisubl
dec
add
outsl
loope
sub
sahf
in
aam
cltd
lods
addl
and
push
ret
add
int3
push
cs
imul
pop
scas
or
sub
int3
or
cmp
scas
loope
loope
xchg
aas
mov
sbb
in
ret
and
mov
cmp
hlt
lods
cmpsb
cmpsl
loop
test
adcb
daa
mov
xor
test
mov
test
pop
sub
test
xor
in
adc
ficompl
enter
mov
repnz
addl
mov
cli
daa
lods
lahf
aas
cmp
mov
pushf
sbb
outsl
jb
shlb
or
aas
cwtl
imulb
repnz
int
lock
cmpsl
xchg
xchg
fstp
mov
shlb
add
pop
or
aaa
dec
dec
jmp
faddp
loope
push
xor
push
aaa
scas
cltd
lahf
push
inc
push
sbb
mull
or
pop
scas
and
xchg
test
jg
cmpsl
xchg
fmulp
jnp
lods
xchg
jbe
ret
adc
enter
orl
popf
inc
xchg
sbb
jl
add
adc
mov
adc
mov
jmp
inc
hlt
xchg
sbb
imul
decl
cli
mov
jno
mov
xchg
jl
dec
std
popa
in
push
lock
out
mov
js
fsubl
push
sbbb
mov
xor
frstor
stos
push
inc
inc
inc
jne
subl
fsubs
jle
adc
sahf
and
cmc
pop
inc
sub
loopne
fs
dec
push
mov
mul
adc
rcll
cmp
repnz
shl
xchg
lods
dec
repz
pop
js
pop
mov
sarb
and
dec
out
shrb
ud1
jmp
bnd
roll
daa
mov
jo
sbb
adc
call
dec
movsl
outsl
cwtl
jae
adc
clc
loop
in
and
add
les
jge
pavgw
pushf
or
xor
sub
jae
or
fs
mov
sub
stc
jb
mov
jns
jae
push
xor
xor
shl
sub
mov
dec
pop
sub
out
arpl
sahf
int3
adc
pop
lcall
daa
int3
andb
into
fildll
mov
loop
xchg
fsubl
leave
daa
fsubr
js
sub
xor
rcl
hlt
sahf
leave
int3
imul
sub
arpl
mov
mov
mov
lock
mov
sti
xchg
inc
in
fsubl
jb
jne
cmpsl
adcl
xor
adc
adc
xchg
pop
inc
jp
adc
fisubs
js
wbinvd
add
jns
int
xchg
pop
adc
inc
scas
and
paddq
adc
xlat
aad
aas
adc
and
sbb
int3
mov
dec
mov
lds
jno
sbb
notb
setp
pusha
and
stos
int
cmp
and
sbb
and
mov
dec
mov
inc
jo
popa
stos
in
add
lret
sbb
int3
scas
sub
xor
dec
or
in
inc
addl
dec
mov
ret
ja
lods
xchg
add
xor
and
loope
mov
mov
lock
jae
dec
icebp
dec
inc
dec
pop
lods
push
or
rcrl
xor
fcom
cmp
push
stc
mov
cmp
jne
jns
xor
movw
cmp
arpl
daa
pop
sbb
jecxz
loopne
bnd
mov
add
xchg
dec
mov
aaa
add
lret
add
jnp
pop
adc
cld
cmp
insb
adc
jle
and
mov
and
stos
or
repnz
jecxz
fsubp
sbb
and
popa
rorl
loopne
int
mov
lcall
insb
cmp
cld
push
dec
decl
std
test
lods
push
ret
imul
popf
dec
xor
movsb
jp
cmp
lds
roll
pusha
imul
es
popa
push
or
faddp
sbb
loopne
repnz
ret
fbstp
js
cmc
push
push
push
dec
lahf
pushf
cmp
cmpsb
cvtdq2ps
add
popa
mov
jg
lahf
mov
idivb
inc
cmc
in
rcll
cwtl
lds
lods
dec
es
mov
cld
jecxz
and
inc
sub
shll
xchg
inc
inc
jbe
je
js
add
rorl
xor
mov
dec
ds
and
or
cwtl
dec
sbb
incb
adcl
mov
pop
ds
out
xor
cmc
ret
cmc
lret
add
xchg
jmp
insb
push
rcrb
jmp
lar
js
sub
and
ret
xchg
cmp
dec
cmp
xor
shl
cmp
xchg
bnd
into
scas
mov
jecxz
mov
xchg
lods
adc
ljmp
insl
stc
or
fwait
jp
loopne
or
insb
add
inc
fbld
stos
shll
jp
mov
sub
mov
push
icebp
add
fidivrl
push
jge
arpl
mov
push
sbb
cmp
pop
daa
pop
cmp
dec
out
add
into
push
aad
fidivl
mov
sahf
pop
jmp
xor
jl
insl
pop
repnz
lods
out
cmp
jle
movsl
aas
pop
sub
loope,pt
je
test
roll
mov
and
and
ljmp
ljmp
mov
sub
pusha
inc
lds
sbb
and
int
sbb
mov
sbb
mov
sub
bound
mov
push
cltd
or
xor
insb
mov
push
xor
or
sarl
push
cmc
psrld
dec
ss
outsb
adc
cmovb
stos
ja
mov
das
arpl
cmp
testl
test
push
pop
push
mov
adc
mov
or
mov
int3
or
mov
js
push
bound
mov
dec
mov
xchg
sti
loopne
rcr
push
add
xchg
sub
fs
sbb
ret
pop
mov
je
jo
lcall
push
jns
fcompl
xchg
lock
and
mov
sbbb
into
loop
pop
in
jnp
xchg
sahf
sub
xor
add
lock
lock
sub
push
sub
pusha
push
xchg
cltd
push
addb
stc
xchg
jg
lods
xchg
aad
jo
adc
xor
mov
lret
ds
scas
cmp
insl
xchg
xor
and
jne
dec
mov
popa
out
ret
push
xor
push
repnz
add
test
sub
test
jb
scas
mov
test
aas
push
fistl
shl
add
jb,pn
pop
test
and
iret
push
lods
xor
in
add
push
push
rorl
fdivs
aaa
imul
clc
add
push
mov
repnz
jge
clc
test
add
mov
pop
pop
push
jle
mov
pushf
loope
or
fwait
pop
movsb
lods
mov
and
out
es
add
out
pop
adc
add
push
sti
imul
adc
mov
xlat
cli
add
jle
jge
or
loope
pop
inc
xchg
cs
sub
mov
mov
stos
fdivs
pop
inc
cmp
setns
jle
loopne
mov
mov
scas
push
sub
add
pop
push
sub
out
test
call
testb
sub
popa
mov
pop
xor
xchg
and
in
fiadds
inc
subb
sub
subl
outsb
loop
das
cs
cmpsb
sarb
leave
fstl
mov
addr16
cmp
fidivl
pop
loopne
xchg
mov
sbb
std
xor
mov
pop
popa
aad
mov
sbb
movsl
push
push
ja
insb
lret
mov
fwait
adc
popa
dec
sbb
xorl
cmp
push
xor
xchg
test
int
or
add
std
imul
push
lds
push
into
daa
dec
rcl
sub
mov
shl
xchg
xor
pop
scas
lea
jne,pt
fcompl
rcl
cld
jecxz
sub
aas
das
inc
sbb
rcrl
mov
or
pop
xchg
in
test
and
imull
aaa
outsb
pusha
mov
fsubrs
mov
clc
imul
add
cmp
stos
pop
sbb
xchg
movsb
cmp
xchg
mov
mov
movb
mov
aas
xchg
mov
xor
scas
add
pop
gs
fcomip
and
pop
sub
inc
inc
mov
mov
mov
mov
cmp
fs
icebp
adc
jne
xchg
jge
add
add
stc
test
jae
xlat
repz
mov
scas
inc
xchg
subb
in
nop
push
xor
imul
into
stos
xor
pop
sti
out
xchg
lret
gs
imul
fucomip
push
out
pop
out
cmpb
in
xchg
xor
xchg
jae
adc
jns
and
mov
lock
out
int3
faddp
movsb
sahf
fimuls
mov
cmc
push
lret
jg
sub
ficoml
sbb
sbb
xlat
jg
mov
in
pushf
jae
js
mov
mov
test
test
cmp
xor
mov
add
pop
imul
clc
jmp
rcll
adc
xor
xchg
in
div
cmp
imul
jl
mov
and
icebp
jbe
outsb
jmp
neg
lret
sti
mov
fisubl
popf
xorb
lock
bound
mov
dec
cwtl
push
xor
repz
pop
scas
cli
pusha
es
jecxz
es
mov
sti
scas
dec
push
jmp
int3
inc
fistl
bound
lret
faddp
cmp
repz
movsb
pop
xor
adc
add
adc
mov
shlb
cmp
out
sbb
mov
mov
test
out
loopne
mov
pop
cmp
in
ror
add
and
cmpsb
mov
dec
aad
int
add
lods
lds
loope
cmpsb
push
fstl
mov
nop
xor
ret
mov
mov
jmp
mov
fld
mov
xchg
adcb
or
faddl
cmp
jo
imul
imul
mov
cmp
out
gs
ret
shlb
xlat
or
inc
jl
leave
xchg
sub
filds
stc
adc
mov
jge
pop
fwait
mov
call
sub
aam
ret
mov
mov
ss
inc
outsb
cmp
int3
adc
das
inc
cli
daa
mov
mov
mov
cld
out
jbe
test
ss
lods
sub
repz
cltd
sbb
jge,pn
cmpsl
flds
sub
add
cs
dec
push
sbb
into
push
jmp
sti
sahf
jno
fldl
mov
jle
sbb
test
adc
rorl
cli
jg
leave
mov
inc
jne
roll
ficoms
in
daa
js
ret
nop
push
push
sbb
lds
mov
mov
lahf
ret
adc
push
jle
jp
xor
ds
shlb
jge
ja
sub
iret
pop
sbb
cmc
adcb
std
cmp
inc
mov
pop
bound
mov
pusha
loop
arpl
pushf
dec
add
mov
push
xor
xchg
sub
out
divb
fsubp
outsl
dec
mov
dec
lahf
pushl
or
pop
pop
add
add
sub
sub
mov
nop
pusha
add
cs
xchg
addl
ss
mov
mov
mov
fs
xchg
push
sbb
pop
out
jl
mov
in
or
arpl
hlt
push
add
push
xor
jo
clc
jecxz
mov
jecxz
loopne
sbb
sbb
cld
aas
imul
mov
repz
repz
pushf
pop
ds
outsb
xchg
les
stos
pop
mov
mov
sbb
pop
ds
ljmp
mov
sahf
dec
test
pop
in
mov
xchg
imul
fisttps
rcr
stos
popf
shl
adc
jbe
mov
test
gs
or
je
fs
outsb
mov
frstor
lahf
xchg
xor
push
add
test
aaa
pop
movsb
int
adc
mov
pop
mov
sbb
out
or
jge
sub
dec
pop
imul
push
aam
sarb
xlat
xlat
pop
insb
adc
push
fsubrl
and
xor
push
lret
stos
loopne
adc
fs
cmc
push
jb
rorl
or
inc
call
mov
fisubs
mov
fldenv
lret
aas
js
jno
lea
insb
cmp
add
shrl
mov
jmp
andl
jge
out
outsb
mov
mulb
cmp
jg
jo
enter
std
dec
in
jne
jno
push
sahf
pop
cmp
fsub
loope
adc
iret
mov
loop
cli
and
das
dec
fnstenv
mov
aad
hlt
jp
lcall
and
add
add
rep
fisubl
inc
pusha
sbb
in
sub
or
sahf
or
pusha
cmpsb
aas
dec
icebp
fnstenv
mov
sub
fnstenv
push
cli
test
xchg
xchg
mov
imul
inc
push
flds
xacquire
ror
mov
test
divl
roll
das
or
jg
adcb
and
shll
adc
js
and
cs
cmp
mov
movb
cmp
mov
push
fadds
mov
push
mov
lret
jge
cmp
inc
std
movsl
pop
call
in
clc
cmp
cmp
nop
movsl
aaa
hlt
imul
mov
dec
stc
adc
mov
cmp
out
fldt
or
mov
cmc
ds
stc
dec
btc
sarl
dec
xchg
ret
icebp
ss
ds
cmp
lret
fnstenv
or
aam
test
shr
stos
mov
cmp
sbb
push
shll
mov
sahf
ret
data16
gs
fld1
xchg
test
pop
mov
xchg
fistpl
cmp
fstps
add
add
sbb
mov
std
pop
mov
repnz
jecxz
pusha
or
out
movb
lods
or
nop
fiadds
scas
mov
jp
xchg
imul
xor
loope
jnp
push
aas
and
std
mov
mov
sub
stos
repz
mov
adc
and
sbb
xchg
add
xor
add
xchg
in
js
mov
mov
cld
mov
pop
jp
xchg
jae
add
xlat
or
aaa
adc
add
sarb
mov
jns
sahf
push
mov
mov
pop
xchg
fs
xchg
inc
mov
in
sarb
in
std
sub
movsb
jnp
popf
lods
out
pop
pop
jo
add
in
jo
inc
add
orl
push
mov
insb
subl
adc
push
sub
xchg
cld
dec
xchg
inc
in
sub
mov
xchg
jp
ret
enter
imul
loope
or
fdivs
inc
push
icebp
sbb
add
stos
xchg
mov
adc
mov
in
mov
sbbl
test
dec
xor
xor
pop
dec
icebp
or
lret
shll
mov
nop
fcmovu
mov
out
sahf
jmp
in
cmp
mov
je
jae
ret
push
pusha
cmp
or
sbb
repnz
xchg
fst
mov
lock
inc
xchg
lods
rcll
jae
movl
cmpsl
xchg
or
lret
inc
aas
xor
icebp
cli
sub
icebp
sub
shlb
push
push
mov
ds
add
sahf
mov
jae
push
sbb
fs
int3
test
mov
ja
mov
call
stc
int3
mov
push
iret
xchg
push
std
je
xchg
outsb
jns
movsb
lds
adc
push
pop
iret
fistpll
xor
pusha
cmpsl
mov
leave
xor
mov
in
lods
xor
popa
mov
cmp
mov
adc
pop
sbb
add
mov
dec
shlb
outsb
and
mov
cmc
out
je
push
pop
jae
cmp
sarl
mov
cmovb
pop
aad
jmp
jne
das
jl
lret
daa
popf
dec
push
cld
push
adc
cmp
mov
jne
cmpsb
div
pop
faddl
leave
push
push
mov
in
or
stc
ljmp
pushl
sub
icebp
imul
xchg
dec
movsb
cld
dec
fnstsw
ja
and
loop
insb
inc
jge
pop
iret
and
and
xor
adc
pop
jnp
clc
lret
outsb
popf
ja
mov
adc
jp
or
jge
shr
lret
push
xor
sub
jp
mov
repnz
push
lods
test
lods
push
mov
cmp
fstps
sahf
jns
mov
jnp
inc
cmp
ret
jo
or
xchg
sbb
popf
sub
cmp
negb
push
sub
mov
cmp
lods
adc
push
jecxz
push
movsb
pop
lods
inc
mov
add
cwtl
push
mov
pop
das
xchg
mov
int3
out
pop
cli
popa
add
sub
sub
mov
mov
and
aas
ret
mov
repnz
inc
mov
mov
addr16
mov
int
pop
inc
sti
aaa
fs
fnstsw
repz
lret
dec
mov
mov
repz
jns
mov
adc
dec
jb
vsqrtpd
jmp
div
test
and
xchg
mov
ficoml
loop
jno
jp
inc
dec
fs
sub
jb
bound
adc
sarb
push
ret
imul
cmp
cmp
fdivl
mov
add
sub
ss
jns
dec
mulb
jno
jnp
insb
es
or
and
lea
pop
sti
int3
push
cmp
cli
iret
mov
dec
pushf
imul
lcall
xchg
rcrb
lock
int
and
movsl
stos
inc
add
outsl
in
mov
xor
les
mov
push
or
or
inc
les
adcl
lahf
dec
rcrb
dec
xchg
sbb
pusha
xor
ja
and
scas
cli
add
or
mov
push
pusha
mov
jb,pt
test
in
outsl
add
sbb
push
into
aam
dec
xchg
xor
into
in
dec
inc
aas
imul
pop
jne
or
int
stc
sbb
imul
xchg
mov
and
repz
mov
cmp
or
xor
sub
jbe
xor
or
fsubrl
pop
rep
out
add
loope
jns
int
out
test
sbb
comiss
or
mov
pusha
and
subps
stc
into
pop
sub
xchg
pop
jns
ficomps
jl
dec
mov
scas
push
mov
imul
les
jg
repnz
push
lods
sbb
inc
mov
pop
or
sarl
ds
les
pop
dec
out
lahf
sub
popf
and
lea
leave
sub
fstp
testl
inc
xor
pop
insl
push
pop
xchg
push
aam
cmpsl
mov
jge
lds
pusha
dec
fsubrs
bound
or
aad
add
popa
std
pop
push
mov
test
jbe
pop
cmp
push
cld
fbstp
adcb
nop
popf
fadds
cwtl
xchg
dec
popa
fdivr
push
cmp
lret
jbe
ss
insl
enter
sub
pop
out
stos
ds
mov
push
xor
jb
out
cltd
test
aad
fistps
or
pop
andl
nop
cltd
repz
jle
lea
movsb
add
mov
repnz
inc
inc
stos
mov
and
stos
pushf
jge
sub
movb
lods
pop
fnstsw
lcall
loope
fcoml
loope
test
mov
cmp
repnz
cmp
hlt
or
addr16
adcb
mov
add
scas
add
pop
mov
xchg
es
dec
imul
cs
push
inc
fisttps
adcb
fdivrl
mov
outsb
and
pop
mov
rclb
les
scas
mov
jp
push
rorl
leave
scas
pushf
sbb
cmp
sbb
std
jle
ror
add
lret
pop
inc
mov
jae
mov
and
in
shlb
lods
daa
sub
negl
mov
mov
mov
and
add
mov
ja
jo
rolb
loope
sti
pop
xchg
cmpsb
out
jbe
aas
scas
imul
and
sti
jns
mov
maxps
sbbl
int3
mov
shlb
mov
inc
fisttpll
notb
in
pop
or
rcrb
dec
add
inc
outsb
lret
or
lock
leave
adc
fcmovne
gs
jg
loop
pop
cmp
mov
rcrb
or
pusha
push
sbb
or
sub
mov
xchg
mov
mov
stos
lret
push
aas
int
aam
jmp
rcrb
xchg
cmp
outsb
adc
lods
fcmovb
sub
cmc
js
ss
or
xchg
jo
push
mov
jbe
icebp
and
test
lock
sbb
dec
int3
xchg
xor
testl
scas
push
into
jae
ret
sbb
test
mov
test
lods
sbb
pop
push
aaa
les
adc
mov
add
incl
xlat
fcomps
in
lods
cli
out
push
push
loopne
mov
scas
sub
dec
ds
sbb
dec
mov
xor
ret
in
negb
jecxz
stos
pop
fsubrl
lock
jno
xlat
into
mov
jns
js
and
popf
dec
je
add
add
jns
inc
sbb
jbe
lea
dec
and
push
jbe
pop
cmp
dec
shlb
mov
inc
or
mov
cmpsl
lcall
jg
stos
xor
movsl
push
push
push
push
sbb
xlat
fstl
fists
jb
rol
addr16
out
or
decl
imul
cmp
js
movsl
test
test
sbb
outsb
push
add
push
cmp
pop
fmul
mov
or
mov
cli
add
ja
addr16
inc
mov
repnz
cmp
dec
jge,pn
lret
pop
imul
out
push
shl
push
lret
iret
or
mov
lock
ror
inc
adc
in
dec
in
xchg
sub
in
in
push
ret
rcrl
jnp
aaa
daa
sti
stos
xor
mov
daa
out
imul
jecxz
inc
cmp
dec
shll
push
ret
test
es
sub
fsubl
and
fistl
mov
outsl
inc
jp
or
rorl
xchg
cmpsl
ljmp
pop
popa
repnz
out
andb
mov
sbb
xlat
pop
int3
add
ljmp
xchg
into
mov
adc
pop
push
push
mov
add
std
int3
fimull
sahf
aas
and
cs
lds
sub
mov
stos
lcall
push
icebp
imul
je
outsb
push
or
sub
adc
inc
pop
push
cltd
test
mov
jns
call
fs
xchg
aaa
sbb
lret
movsb
popf
cwtl
test
xchg
pushf
rcrb
movl
jg
je
es
mov
stos
pop
in
arpl
inc
pusha
dec
sbb
cmp
pop
mov
dec
jmp
ss
aam
pop
int
popf
xlat
fsubrl
sti
fisubl
cltd
bound
cld
mov
mov
inc
rorb
inc
add
std
add
xorb
pusha
arpl
iret
out
int3
int3
jge
addr16
pop
dec
movsl
out
xor
rcll
dec
in
mov
pop
pushf
ficoml
mov
xchg
jbe
xor
cmp
fdivrl
and
jno
fs
aaa
cwtl
lds
lahf
mov
mov
les
ss
sbb
fsub
and
mov
out
out
movsl
test
movsb
notl
and
test
dec
pop
imul
stos
ficomps
out
das
rcll
mov
and
adc
jno
inc
hlt
aad
push
loopne
push
test
int3
inc
mov
sub
cs
and
push
jb
push
push
mov
call
sarl
fiadds
gs
into
push
jl
lcall
rcrl
dec
adc
in
pop
ret
icebp
push
filds
out
cmpsl
loope
jge
xchg
xchg
clc
fs
mov
lea
xchg
mov
and
or
sbb
imul
outsl
cmovno
push
fisttpl
mov
cmpsb
adc
pop
dec
pop
push
das
sti
pop
pushf
dec
pop
xchg
fldenv
xchg
mov
mov
inc
jmp
nop
ret
dec
push
pop
ret
sbb
lea
jge
cmp
add
jae
mov
stc
jns
aaa
cmp
jg
sbb
mov
mov
inc
push
sti
daa
sub
out
adc
jno
sub
pop
test
push
loopne
inc
repnz
push
dec
mov
cli
sub
bound
push
test
loop
dec
addb
pop
mov
cmp
daa
mov
out
lods
inc
leave
clc
adc
daa
pushf
movsb
das
push
sub
rcrl
call
and
pop
inc
pop
lahf
sti
imul
aas
jg
aas
mov
sahf
outsb
js
mov
cmp
mov
stos
out
insb
imul
cmpsb
loop
pop
jnp
fwait
cld
loope
bound
sbb
inc
mov
js
cmpsb
or
into
or
cmp
or
jb
cmp
mov
aam
stos
push
xchg
movhps
cmp
mov
dec
bound
fcomi
add
cmp
cwtl
push
outsb
imul
mov
jle
inc
ja
bound
outsl
jno
mov
outsb
test
push
and
cmpb
dec
inc
push
push
lds
sahf
and
xchg
int
stos
outsb
repnz
pop
and
sub
and
sub
xchg
punpcklbw
add
aaa
call
xchg
mov
imul
adc
inc
add
ja
cli
es
dec
insl
add
movsbl
mov
sbb
inc
roll
lock
dec
mov
mov
mov
es
out
lods
out
mov
popa
sub
in
sbb
cmc
lods
dec
add
es
and
and
cmp
push
xchg
sub
test
push
rolb
push
cmpsl
cmp
daa
push
mov
rcr
push
sub
aam
jb
inc
lcall
mov
inc
mov
test
xchg
in
bound
nop
outsb
inc
cwtl
dec
fldcw
pop
fldl
stc
sahf
sbb
xchg
andl
cmp
and
pop
test
xor
pop
es
icebp
push
push
std
movsl
mov
xorl
icebp
mov
push
lret
ja
push
sub
fdivl
icebp
xchg
lahf
enter
daa
icebp
jb
jmp
sub
adc
addr16
and
int3
push
test
dec
lcall
or
out
push
or
push
lret
cwtl
mov
fimull
in
xchg
cld
xor
xchg
dec
xchg
cmp
pop
and
lock
ret
xor
nop
movsb
aas
xchg
stos
bound
lds
addl
add
mov
outsw
inc
dec
test
dec
out
xor
sbb
out
hlt
leave
mov
neg
sub
sbb
lods
sahf
xchg
jl
sub
dec
lcall
push
and
fwait
bound
fnstsw
push
xchg
not
ror
ret
cld
cmp
xor
mov
das
hlt
adc
inc
out
arpl
mov
cs
add
mov
insb
pop
push
xchg
popf
cmp
inc
lods
sbb
pop
inc
into
push
mov
inc
cmp
pushl
das
fldl2t
mov
push
cmc
insl
loop
push
ja
dec
sbb
mov
push
sbb
dec
cmp
and
and
lods
imul
rclb
jnp
sar
shrl
inc
mov
test
push
aam
lods
push
fpatan
or
sbb
pop
inc
or
int3
or
mov
fwait
or
add
mov
cmp
push
push
lods
lock
lret
cs
idiv
pop
add
and
fcompl
jle
push
and
inc
add
or
outsl
jne
into
repz
xchg
inc
sbb
inc
mov
xchg
add
push
fsts
xchg
aad
push
cmp
rclb
popa
cld
movl
stos
xor
sbb
lahf
sbb
cmp
push
dec
stc
xor
nop
fnstenv
or
xchg
adc
jb
dec
push
in
mov
lret
roll
mov
mov
xchg
fstl
fs
mov
sti
push
add
data16
sub
shrl
in
cmp
bound
int
cmp
rcr
xchg
mov
dec
cs
imul
inc
mov
xchg
ljmp
dec
xchg
outsl
mov
data16
inc
pop
pop
push
sti
mov
and
cmp
fstp
inc
lret
mov
mov
adc
mov
push
or
mov
lea
sub
lods
mov
insb
mov
fistpll
push
pop
xchg
xorb
dec
shl
jb
shll
mov
cli
xchg
pop
leave
xor
lock
sahf
nop
insl
icebp
add
pop
test
xor
les
inc
pushf
movsb
pop
lock
cmp
mov
dec
or
cmp
xlat
push
jns
test
and
inc
fsubrl
sbb
cmpsb
fnstsw
pushf
sahf
fsts
xor
xchg
sub
xchg
fldenv
cmpsl
jo
imul
ret
and
mov
and
jae
xor
fsub
adc
js
jo
test
addr16
ret
cmpsb
and
add
icebp
or
fwait
aam
cmp
xorl
jl
iret
lcall
nop
sahf
dec
push
and
adc
popa
or
out
cli
adc
in
mov
mov
pop
dec
xor
or
mov
cmpsb
in
in
cld
jo
mov
push
bound
addr16
outsl
das
cmp
std
jl
aam
imul
add
dec
and
push
mov
push
nop
fcoms
jge
or
mov
xchg
ljmp
inc
in
or
repz
pop
xor
xor
loop
mov
test
xor
imul
lods
test
loop
xor
mov
dec
adc
push
dec
push
dec
fists
test
test
mov
add
das
mov
add
fmul
jg
sahf
add
cmp
sub
imul
cmp
mov
adc
xchg
mov
sub
mov
push
cmp
mov
ljmp
std
mov
jmp
mov
mov
push
sbb
inc
mov
fildl
pop
adc
icebp
dec
push
mov
pop
jecxz
mov
loop
mov
inc
xchg
pop
mov
call
and
xor
sbb
rorb
push
popa
sbb
cmp
xchg
das
pop
dec
mov
add
cs
ljmp
out
dec
push
in
nop
xor
pushf
dec
mov
jae
daa
xor
mov
lret
sbb
mov
fucomp
mov
neg
mov
nop
or
in
pusha
push
sbb
std
push
pop
or
adc
mov
sub
sbb
sub
out
mov
stc
aaa
inc
pop
icebp
dec
lds
jno
dec
shlb
icebp
jge
mov
fiadds
cmp
jb
sub
std
loopne
rol
sti
sti
xor
cmpsb
je
mov
mov
add
ret
add
imul
add
sbb
push
movb
xor
adc
pop
inc
push
pop
lcall
push
ja
sbb
clc
jp
xor
dec
pcmpgtb
int
leave
cmp
cwtl
movsb
mov
sbb
rol
jb
or
test
sub
loop
or
pop
imul
jge
cmp
fsub
cmp
dec
jmp
dec
outsb
xchg
insl
xlat
jo
pop
pop
or
inc
mov
ljmp
fsubrp
pop
cmp
shr
addb
je
lcall
into
fs
insb
push
add
jp
dec
xor
popa
ljmp
aad
pop
sbb
test
adc
or
and
cmp
push
xchg
fisubrs
lock
dec
out
adc
inc
mov
out
pop
ffree
inc
fisubl
ljmp
lret
push
dec
jno
stc
nop
mov
lea
stos
in
pop
imul
push
xchg
js
fisubs
jbe
test
dec
mov
bound
push
je
in
jg
lret
sub
imul
mov
pop
adcb
pop
lcall
and
inc
push
jmp
xor
mov
in
stc
das
and
dec
sbb
add
nop
add
iret
mov
sbb
insl
jbe
shll
cmp
rcrl
rclb
lcall
ror
or
movsb
mov
or
jp
xchg
jecxz
in
jge
jnp
sub
cli
jle
aaa
push
scas
sbb
inc
pop
das
cmp
or
and
pop
xchg
jl
das
pop
cmp
xor
cmp
adc
and
ljmp
cmp
mov
or
out
xchg
sub
xor
dec
bnd
adc
icebp
jnp
and
lcall
fnstenv
inc
or
call
out
in
in
lds
mov
scas
lods
adc
gs
push
clc
mov
add
dec
data16
and
movsb
addl
dec
dec
xchg
xchg
jg
in
cld
jmp
imul
mov
add
mov
pop
pop
mov
cltd
addr16
add
pusha
xorb
mov
aas
adc
dec
push
test
mov
wrmsr
adc
push
or
in
sbb
ljmp
loopne
jnp
ffree
in
xlat
popf
out
inc
jnp
jo
cmpl
jecxz
pop
xchg
adc
jge
test
ja
ret
mov
adcl
insl
jp
push
mov
pop
sbb
adc
dec
add
roll
mov
add
cld
or
push
rcl
jns
out
daa
cmp
xchg
ljmp
cmp
push
outsb
and
icebp
nop
add
lret
dec
push
daa
outsb
movsl
subb
das
xor
lock
sub
sub
and
repz
dec
dec
imul
arpl
test
lcall
fwait
pop
pusha
adc
scas
jmp
in
pop
dec
int
popa
cmpb
sarb
fimuls
pop
popf
test
or
mov
push
inc
out
test
movb
iret
clc
jbe
add
pop
fwait
fsubrl
movsb
add
xchg
mov
cmpsb
lods
cmpb
insl
or
inc
mov
sub
jo
sub
aaa
rolb
testl
shr
les
xchg
fs
push
sbb
mov
jns
hlt
arpl
je
inc
sti
pop
aaa
push
data16
adc
xlat
inc
push
sbbl
js
or
add
jb
mov
cmp
xor
push
jae
lcall
test
inc
movsl
xchg
xchg
andb
xchg
das
xorl
lock
mov
rcll
and
pop
sub
cmpsl
lods
or
mov
sbbl
push
popf
negl
stos
dec
in
pop
pop
scas
xchg
popa
add
mov
lret
cmp
in
out
movsb
sbb
or
cmp
mov
sub
add
add
jb
incl
and
pop
xor
jno
scas
into
neg
push
lahf
test
decb
js
aas
and
mov
cmp
inc
das
or
in
xchg
js
mov
dec
movsl
out
into
sar
hlt
pop
pop
int3
add
repz
jge
lock
rcr
incb
jge
push
mov
xor
inc
ja
cmc
std
cld
sub
in
or
or
inc
xor
fwait
jae
and
rclb
and
cmp
cmp
pop
push
pop
pop
loopne
sahf
adc
cmp
cmp
dec
scas
sub
or
mov
adc
testl
and
push
xor
icebp
and
je
out
daa
inc
dec
inc
and
js
adc
and
in
push
daa
jnp
sbb
jmp
xchg
adc
ja
and
mov
jmp
out
loop
cmc
jmp
dec
dec
imul
mov
mov
dec
jle
sahf
stos
aad
mov
cli
sbb
loopne
in
push
popf
mov
cltd
fwait
popa
inc
fdivs
repz
gs
mov
jbe
xchg
add
ss
je
faddl
bound
cltd
test
icebp
aad
sub
cld
jne
mov
lea
mov
fsubs
mov
push
rcll
dec
dec
and
inc
rep
push
jne
xlat
in
pop
insb
add
push
out
xchg
pop
test
mov
roll
rcll
out
je
andb
in
add
adc
mov
push
push
int
jbe
loope
or
cwtl
decl
cmp
cmp
stc
out
repz
or
and
xchg
mov
pop
add
lcall
test
fcomps
scas
jnp
and
mov
xlat
mov
or
jne
loope,pt
lret
cld
dec
shll
lret
lcall
cmpl
cwtl
outsb
add
cltd
mov
clc
inc
mov
cwtl
jl
xor
icebp
xchg
hlt
bound
mov
mov
xor
stos
aad
sub
lret
add
sub
imul
mov
and
imul
jge
ljmp
shll
ret
lahf
push
and
xchg
dec
push
filds
jno
mov
fadds
fstps
decb
push
fwait
cmpsl
mov
rorb
repnz
or
mov
mov
aaa
mov
int
push
in
push
pop
out
ljmp
push
mov
lods
cmp
sarl
int
push
xor
testl
insb
imul
fistl
sub
sub
jns
and
jecxz
mov
mov
ja
push
push
out
mov
adc
jbe
into
outsl
in
out
fwait
adc
pop
leave
xor
ret
mov
fsts
mov
shl
flds
xchg
xor
pop
imul
nop
and
xchg
inc
daa
aad
cli
arpl
push
icebp
aam
movsb
adc
stos
dec
popf
pop
in
mov
add
lods
ds
fcomps
das
mov
das
mov
inc
pop
pop
je
sub
pop
bound
lret
jl
push
and
cmp
arpl
add
cld
pop
cmp
xchg
jns
push
mov
leave
cmp
call
cli
push
mov
aaa
dec
inc
or
mov
add
xchg
xlat
data16
mov
popa
nop
bound
or
int
imul
xchg
in
pop
cmp
rclb
adc
sbb
mov
nop
lret
je
inc
lods
shrb
pop
cltd
mov
push
or
or
sbb
in
xchg
insl
mov
insl
sub
mov
adc
jg
test
and
jmp
jecxz
sub
test
adc
and
xor
aaa
lods
fbstp
push
pushf
push
pop
ret
xchg
push
imull
jns
dec
scas
add
outsb
or
xor
lock
arpl
mov
pop
jl
mov
dec
movsb
or
test
into
std
or
xchg
enter
pop
sub
dec
rclb
inc
and
adc
mov
mov
gs
repnz
adc
pop
mov
popf
cwtl
movsb
add
mov
test
push
aam
and
outsb
adc
add
xchg
push
xchg
rcl
jnp
in
insl
sti
aad
repnz
cmpsb
test
or
inc
lods
sub
mov
aad
dec
stos
out
inc
push
loopne
sbb
imul
xchg
arpl
xor
div
xor
in
inc
dec
das
pop
mov
adc
mov
gs
push
push
pusha
lea
pop
inc
cmp
jno
mov
inc
push
lret
repz
addr16
inc
jnp
aaa
jl
fidivrs
and
xchg
fnstcw
cmpsb
and
repnz
loope
adc
cwtl
roll
stos
sbb
mov
nop
inc
dec
out
sbb
aad
cmpsl
loope
mov
mov
repz
pop
rol
test
cmpsl
mov
imul
and
jae
aaa
cmpb
mov
cmp
xchg
filds
push
xor
testl
imul
cmp
movsb
into
sarb
push
mov
call
test
fwait
add
mov
mov
arpl
mov
aam
push
sahf
aaa
stc
and
lahf
cmp
xchg
mov
pop
sar
push
inc
int3
xlat
dec
dec
cmp
outsl
cltd
pusha
inc
pop
xor
sbb
idivl
popf
scas
pop
into
sub
inc
aaa
mov
imul
test
fcomp
add
mov
arpl
jge
sub
ret
push
cltd
xor
je
fdivl
fiaddl
in
pop
cwtl
fnstenv
mov
push
push
sub
iret
arpl
add
pop
add
jmp
ficoms
daa
jg
in
cmpsl
dec
mov
scas
mov
mov
jge
ja
call
mov
add
aas
leave
in
mov
rcrl
popa
mov
xchg
sbb
in
aad
in
xor
add
push
inc
and
sbb
arpl
pop
sahf
pop
pop
adc
pop
lock
jo
std
repz
sbb
into
pop
jmp
dec
addr16
lret
loopne
and
out
xchg
or
or
jecxz
fs
push
int
mov
or
hlt
push
pop
push
adcl
dec
stos
jl
sbb
inc
dec
addb
cmpsl
stos
decl
jns
incb
outsb
imul
mov
mov
xor
imul
scas
sbb
xchg
inc
fwait
stos
or
fucomp
decb
ret
sub
sub
mov
rorb
inc
pop
ljmp
cmp
or
test
dec
sbb
pop
jle
xor
dec
movsl
adc
push
cmp
test
movsb
jnp
xchg
dec
mov
jmp
jle
push
or
mov
add
ss
and
dec
clc
loop
cmp
ret
stos
ret
aam
add
je
je
sti
dec
push
shlb
lret
clc
leave
dec
aas
push
mov
cmpsb
inc
scas
jns
je
bound
cmp
sbb
cltd
out
sbbl
test
cmp
je
mov
dec
and
outsb
dec
add
xchg
sub
dec
pop
add
cmp
pop
out
mov
mov
jne
xlat
int
xor
insb
dec
loope
fisubrl
xor
mul
std
fcompl
inc
leave
add
std
push
pop
and
adc
cmc
scas
movlps
les
pop
pusha
and
subb
xor
fldl
hlt
mov
test
pop
bound
in
loop
arpl
ja
mov
clc
movsb
push
sarl
rcrb
cmpsl
lock
or
inc
xchg
jge
movsb
dec
and
jg
pop
and
and
loop
sbb
cs
adc
and
and
push
movl
loopne
pop
pop
shll
mov
pop
and
nop
popa
dec
add
cmpsl
xor
imul
int
pop
pop
outsl
idivb
cld
jecxz
pop
adc
xor
ret
inc
jns
and
and
inc
out
dec
insb
pop
sti
scas
push
jb
lret
lahf
je
aad
ds
adcl
in
inc
arpl
xor
add
inc
jns
inc
rorl
xor
rcrl
push
inc
and
sub
inc
dec
inc
jae
or
pop
out
fildll
std
scas
pop
dec
aas
jb
rcr
dec
icebp
sbb
xchg
fwait
xchg
fcmovnbe
in
into
lahf
test
and
xorl
jne
sbb
jmp
or
jp
repnz
xchg
cmp
fadds
sbb
cmp
pop
add
fwait
jne
push
or
mov
inc
cmp
repz
lock
xor
pop
inc
mov
fcmovbe
dec
jecxz
sub
inc
add
add
mov
mov
icebp
add
adc
out
add
push
in
push
pushf
test
fnstcw
das
les
mov
icebp
aas
ljmp
mov
dec
fdivrp
mov
insl
dec
mov
cmp
icebp
jnp
fnstenv
xchg
enter
rolb
outsb
sub
int
and
mov
test
jmp
jae,pn
arpl
pop
aam
movl
test
ss
mov
pusha
jle
in
scas
mov
jo
int
loope
cmpb
xor
adc
mov
int3
in
es
jno
dec
add
faddl
xor
cmpsb
out
ja
or
and
adc
wbinvd
or
and
repnz
aam
pop
jmp
push
inc
fisttps
cs
inc
pop
push
lret
mov
lahf
insb
ror
idiv
sub
lcall
sbb
scas
outsb
scas
xchg
inc
mov
in
lcall
cmpsl
and
pop
xchg
adc
push
fildl
inc
and
int3
xchg
popa
sub
pushf
dec
out
out
pop
fisttpll
push
pop
das
int
and
jl
cld
dec
push
cmp
ja
add
pop
mov
in
pop
adc
push
cmpsl
into
js
stc
and
scas
sbb
xchg
xor
mov
ljmp
rclb
mov
je
in
adc
mov
sbb
xchg
insl
sti
pusha
or
stos
add
jg
stc
inc
cmp
add
sbb
fsub
jmp
lods
xchg
int3
inc
xchg
inc
out
add
add
fistpll
aad
mov
out
xchg
adc
xor
jecxz
fcoms
les
fs
imul
mov
mov
jnp
xchg
outsb
push
mov
aaa
test
int
adc
mov
scas
push
inc
cmp
sbb
lds
sbb
scas
xchg
cmp
sbb
insb
lods
cltd
sub
xchg
or
fistps
mov
loope
adc
ljmp
daa
stc
arpl
call
cmpl
sahf
cmp
add
push
ljmp
push
insb
mov
inc
adc
mov
inc
mov
pop
mov
jno
mov
bnd
xor
push
ror
and
fidivrl
or
sti
xchg
popf
mov
add
rolb
aaa
or
aam
subl
int
mov
sti
fimuls
or
push
jae
insl
outsl
xor
mov
popa
mov
scas
test
inc
and
rorb
pop
adc
sbb
dec
inc
inc
pop
add
adc
shr
test
push
add
mov
in
xchg
imul
add
shlb
pop
loope
mov
mov
push
sahf
inc
adc
push
ret
mov
addl
pop
push
test
call
push
adc
decl
rclb
push
mov
add
mov
call
jbe
into
sbb
jge
addr16
clc
mov
decl
call
add
test
int3
add
ret
leave
push
push
pop
mov
rcll
push
call
add
vmread
sub
cmp
mov
sub
xor
sub
sbb
add
mov
and
xor
cmp
xchg
mov
orl
adcl
push
enter
addps
xor
test
test
jne
cld
notb
in
rclb
call
mov
lock
cmp
mov
mov
out
mov
adc
call
jno
add
incl
add
psubsb
lea
adc
in
add
jge
stc
jl
or
inc
add
icebp
lret
inc
sti
push
jle
decl
push
inc
incl
add
fsubrs
decl
jne
call
mul
push
sub
add
mov
rorb
fmull
sub
inc
add
ret
pop
inc
mov
mov
adc
mov
fwait
call
mov
adc
test
sub
test
sub
addr16
test
add
shlb
push
add
or
in
add
fcmovne
mov
outsl
add
mov
rcll
pop
mov
js
add
cmp
decl
pushl
push
inc
inc
inc
push
inc
sbb
push
call
add
roll
inc
jne
and
cmp
cmp
pop
xor
add
mov
int3
ja
sbb
push
or
add
add
add
clc
test
mov
dec
cmp
lea
icebp
add
cmp
addb
dec
test
add
mov
cltd
push
repz
jl
je
jb
pop
addr16
add
decl
jmp
cmp
ret
jne
add
testl
add
jne
testl
pop
add
rcll
pop
add
lds
add
jmp
cltd
add
in
sbb
lea
jae
sbb
rorl
mov
clc
inc
add
pop
jmp
mov
test
cmp
cmp
das
add
add
test
clc
ret
int3
mov
test
add
inc
movl
inc
inc
add
add
in
inc
inc
add
mov
int3
add
aam
add
dec
adc
add
add
scas
into
verw
pusha
push
pop
add
sahf
ret
inc
pusha
xchg
mov
add
addr16
add
rorl
imulb
mov
call
add
push
xchg
cs
or
or
test
rorl
ret
pushf
call
jne
je
incl
ljmp
mov
and
fmuls
incl
fdivrp
mov
notb
notl
or
add
lret
jmp
push
decl
ror
lea
push
repz
mov
decl
decl
jmp
dec
or
inc
sbb
sbb
mov
loopne
inc
mov
test
sbb
jge
call
je
into
mov
out
add
push
test
and
mov
inc
and
mov
pushl
or
sbb
push
lea
daa
and
iret
dec
call
cmp
inc
jmp
inc
mov
jg
mov
inc
mov
push
xchg
cmp
xlat
dec
add
pop
lock
push
mov
decl
mov
rorb
stc
inc
mov
xor
cmp
or
mov
pop
das
jnp
ret
movl
hlt
dec
ret
adc
sbb
xchg
cmp
mov
mov
iret
xchg
call
add
psrad
or
add
push
dec
add
decl
movnti
call
ss
mov
add
mov
addb
and
add
pop
push
leave
push
jl
add
add
mov
add
add
in
add
mov
dec
mov
add
and
testb
aad
add
cmp
add
mul
inc
cld
movl
or
add
dec
in
or
call
in
add
mov
add
add
addr16
or
jecxz
add
decl
mov
push
mov
add
nop
sub
push
inc
lea
test
enter
call
sbb
adc
inc
test
or
je
push
nop
dec
jne
lret
cmp
add
add
mov
add
add
xchg
mov
mov
sbb
test
movb
xor
and
data16
add
push
cmp
push
push
jne
jne
add
pop
movups
jne
add
xor
add
unpckhps
out
ret
rorl
xchg
call
push
insb
call
add
xchg
add
movl
mov
aad
scas
mov
add
add
add
push
add
add
add
ljmp
mov
je
jge
inc
or
add
rolb
add
mov
call
adc
add
call
subl
push
add
call
lret
or
incl
mov
xor
mov
clc
jmp
into
add
sbbl
add
call
add
in
fwait
add
cmp
add
out
xor
add
sub
call
add
test
mov
cld
jne
add
call
push
je
or
mov
addl
add
xor
call
sub
scas
add
xor
push
dec
mov
leave
test
incl
add
addl
call
clc
add
clc
push
test
adc
add
push
push
lret
push
decl
and
mov
addl
test
je
call
rorl
rcr
fcmovne
call
push
inc
push
or
mov
aaa
stc
add
add
or
or
jmp
add
add
add
push
call
pop
test
adc
or
call
add
and
stc
jmp
add
push
test
ud0
adc
add
sti
or
adc
adc
or
add
and
add
bswap
add
add
or
decl
incl
call
add
add
cmp
jmp
adc
and
or
inc
jmp
jmp
decl
clc
jmp
and
mov
jne
inc
incl
int3
mov
fildl
add
rolb
inc
insb
addl
addr16
cld
xor
shr
adc
cld
test
mov
incl
mov
addl
xor
addr16
pushf
enter
push
incl
fistpl
inc
or
and
jne
add
incl
mov
xchg
xor
sbb
inc
cwtl
dec
add
add
call
sub
aam
mov
fiadds
enter
movl
addr16
mov
pop
mov
mov
add
iret
add
incl
mov
rolb
mov
lea
pop
fcmovnbe
lcall
push
mov
add
xorl
add
mov
add
add
or
into
add
add
push
sub
mov
fisttpl
fwait
subl
leave
and
inc
leave
or
out
call
in
ret
sub
sbbl
movl
inc
push
add
les
mov
mov
decl
call
je
or
call
out
push
pushl
incl
decb
mov
call
jmp
push
xorl
in
push
pop
pushl
pop
div
add
call
push
or
mov
ret
call
push
add
incl
adc
incl
mov
cmp
inc
add
lea
xchg
clc
cmp
jge
add
mov
add
add
orl
test
je
add
mov
push
push
int
jmp
incl
add
push
add
or
inc
jae
les
fldl
orl
cld
in
push
push
clc
adc
adc
es
arpl
cmp
or
jmp
push
prefetchnta
inc
sbb
push
add
adc
mov
leave
and
mov
in
hlt
rolb
and
jmp
cmpl
divps
mov
or
mov
mov
