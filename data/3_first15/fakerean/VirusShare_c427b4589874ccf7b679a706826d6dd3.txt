jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
pushf
inc
add
or
mov
mov
mov
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
pop
cwtl
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
movsb
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
out
add
out
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
mov
push
add
mov
mov
push
out
push
mov
test
push
lret
mov
ljmp
aad
mov
add
aam
jo
add
add
mov
push
add
cld
jp
add
push
jne
add
add
imul
add
add
out
add
jl
lods
out
add
not
lods
call
in
sarl
add
add
aam
add
jge
add
mov
loope
add
mov
add
add
arpl
jb
add
ja
add
popf
xorb
xchg
jl
mov
push
push
push
out
test
add
push
add
add
mov
ficoml
mov
push
mov
add
push
push
lea
push
push
push
push
push
call
add
add
out
mov
fcomip
cwtl
add
cwtl
add
cwtl
add
xchg
add
add
in
andl
lahf
add
stos
add
add
push
lcall
add
mov
in
jne
loope
xchg
add
add
xchg
mov
jb
add
sarb
sbb
inc
cld
add
add
popl
push
push
push
push
lea
push
call
pushf
lds
add
mov
in
xchg
lahf
lcall
mov
add
addr16
fidivrs
add
add
add
iret
pop
testl
pop
add
rolb
rolb
mov
sar
stos
lea
ja
add
push
mov
xchg
add
xchg
push
add
sti
in
add
add
mov
jmp
add
mov
fmull
push
push
push
lea
push
push
call
data16
add
mov
imul
hlt
push
popl
andb
add
add
mov
sahf
add
mov
in
divl
jmp
add
rcr
in
add
add
add
hlt
add
popa
rcrl
jle
mov
add
test
add
add
gs
add
in
into
decb
in
add
add
add
mov
lea
pop
push
push
push
push
lea
push
push
push
call
lods
mov
std
stos
mov
add
test
ja
jl
mov
testb
data16
xlat
add
jl
in
arpl
add
popf
addr16
mov
mov
mov
movsl
movsb
add
lret
lahf
add
out
add
add
add
mov
push
add
add
cmpl
sahf
add
js
jl
repnz
cli
add
add
call
data16
push
push
push
push
push
push
lea
push
call
add
popf
jp
add
pop
movsl
add
add
loope
add
add
add
out
add
add
add
lods
popf
lock
add
enter
fwait
sti
iret
xchg
imul
push
add
add
mov
add
fsubr
test
call
cld
cwtl
add
ret
push
mov
mov
sti
jno
push
push
add
mov
in
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
push
call
add
scas
scas
add
scas
add
add
add
xchg
add
add
push
add
aam
xchg
add
push
movsl
add
scas
add
rcrl
mov
add
add
repnz
add
xchg
jge
add
imul
mov
scas
in
xchg
add
add
lahf
aam
shl
popf
add
add
add
mov
lea
pop
call
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
xchg
add
jns
add
mov
jne
mov
push
jnp
jmp
rcrb
add
cmc
mov
call
jmp
mov
mov
aam
out
mov
add
pusha
mov
lahf
mov
mov
pop
in
xchg
ljmp
lds
leave
aad
mov
lea
pop
call
push
call
push
push
lea
push
push
push
push
push
push
push
call
not
push
add
mov
add
pop
add
add
push
push
addb
stos
add
into
filds
add
js
leave
in
add
pop
mov
pusha
pop
add
stc
loopne
mov
loop
mov
aam
add
mov
xchg
xchg
add
in
jae
add
lock
pop
pop
fndisi(8087
mov
bound
jmp
push
lea
push
push
push
push
call
add
jbe
rorl
add
jno
add
xchg
mov
js
add
add
add
roll
add
ljmp
push
push
pop
into
outsl
ja
jo
add
add
push
nop
push
jle
popa
mov
cmc
lea
pop
add
mov
jb
cli
xchg
jns
mov
fmull
push
push
lea
push
push
push
push
lea
push
push
call
jne
add
ljmp
pop
pushf
testb
scas
add
add
add
call
xchg
add
pop
add
add
fs
roll
add
loopne
xchg
add
add
add
mov
cmpsl
int
cmpsb
pop
add
add
std
clc
shlb
push
add
add
add
add
ja
loope
hlt
add
clc
add
add
add
lea
pop
mov
mov
add
push
push
push
push
lea
push
call
add
add
mov
add
test
add
imul
test
pop
add
add
lods
lock
sti
mov
add
add
add
pop
xchg
popf
push
pop
rolb
mov
add
add
mov
loope
ficoms
jo
les
js
outsl
add
int
add
add
roll
movsb
jmp
lea
pop
add
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
out
add
js
aad
add
stos
loopne
add
lahf
push
shrl
iret
add
xchg
jmp
pop
add
add
add
xchg
xchg
popf
mov
fisubs
loop
stos
out
jbe
test
add
add
xchg
add
add
mov
add
add
pop
add
mov
add
roll
mov
lea
pop
add
mov
xor
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
jmp
out
arpl
mov
rcll
mov
xchg
push
add
cmpsb
in
in
fiadds
add
xchg
pop
and
jae
add
mov
mov
int3
mov
imul
fdivrl
add
add
scas
ljmp
into
loope
add
out
gs
testl
add
add
add
pop
add
call
push
push
lea
push
push
push
push
push
push
push
push
call
mov
int3
mov
fldl
fcmove
cld
pushf
cli
test
add
repnz
cmpsl
aam
loopne
rolb
enter
add
fwait
add
add
mov
add
add
fidivrs
add
outsl
pop
add
push
lock
roll
fwait
hlt
mov
test
stos
add
mov
cmp
pusha
pop
jge
add
mov
lea
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
add
mov
mov
add
add
add
mov
leave
add
add
add
mov
jae
repnz
add
fs
iret
push
mov
add
jnp
add
pop
add
add
loopne
add
fldl
xchg
add
shll
out
add
add
jmp
add
testb
add
popa
testl
mov
lea
pop
xor
push
lea
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
movsb
mov
cld
mov
lea
lds
mov
add
add
add
add
add
add
jno
nop
bound
add
mov
add
stc
cmc
scas
add
pop
cwtl
lock
jmp
add
push
int3
test
jns
ja
ja
popa
add
jnp
add
add
aam
add
xchg
add
add
add
xchg
test
cld
lea
pop
add
push
push
rol
push
and
add
sub
sub
sub
dec
pop
shr
lea
pop
push
lea
push
lea
push
push
push
call
add
jp
add
add
shll
xchg
pop
lods
add
test
xlat
add
add
jmp
jae
xchg
add
add
jmp
subl
add
add
add
mov
sti
add
xchg
cmc
fadds
pop
rcrb
jmp
loop
jp
cltd
fs
popa
add
jae
call
fwait
add
mov
lea
pop
pushl
push
push
lea
push
push
push
call
les
add
add
add
lods
mov
add
add
add
add
add
add
add
repnz
mov
add
xchg
fistpl
add
test
incb
stos
aam
add
add
add
rol
cmpsb
fcoml
stos
xchg
mov
mov
add
cli
add
sti
cltd
cld
mov
lods
add
mov
lea
pop
call
mov
movl
push
lea
push
lea
push
push
push
call
jecxz
mov
ror
repnz
lock
push
rorl
push
mov
add
add
push
pop
push
pop
mov
add
add
add
add
lret
push
add
add
add
add
add
mov
xlat
les
ja
add
pop
add
add
pop
push
mov
lea
pop
lea
push
push
push
push
push
lea
push
push
call
lcall
fsubrs
shll
add
pusha
mov
lahf
add
mov
add
add
lcall
add
pop
divb
add
jae
out
add
nop
scas
int3
clc
fwait
cmc
loope
add
mov
int3
jl
add
add
add
add
shll
add
add
pop
push
pushl
pushl
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
clc
jbe
scas
add
mov
lods
jmp
add
mov
add
mov
mov
add
insb
add
stc
add
add
lock
add
pop
popl
imul
fisttpll
test
pop
mov
out
add
add
jp
xchg
xchg
lea
mov
test
add
hlt
add
in
stos
popf
add
lahf
add
leave
js
add
sub
jns
add
push
push
push
push
push
push
push
lea
push
push
push
call
push
mull
add
pushf
add
pushf
push
leave
add
push
add
pop
popf
jmp
pop
add
cmpsb
je
xchg
push
add
add
add
mov
fld
add
mov
test
pop
mov
imul
int3
jecxz
add
mov
add
les
sahf
cmc
jne
add
push
add
mov
lea
pop
pushl
push
push
push
push
lea
push
push
push
push
push
call
bound
jge
imul
ret
add
jnp
cmc
add
pop
add
mov
lods
add
stos
ljmp
add
jae
int3
pop
add
loopne
add
add
add
outsl
add
add
add
jmp
mov
add
pop
lock
add
in
add
add
and
pushl
call
push
push
lea
push
xor
add
add
dec
add
sub
rol
pop
not
add
xor
pop
push
push
push
lea
push
push
lea
push
call
add
mov
mov
lds
fcmove
add
add
jmp
add
add
add
add
add
add
pop
add
add
fwait
add
xor
fcompl
add
add
addl
add
fildl
addr16
pop
push
mov
filds
xchg
mov
enter
mov
lret
imull
out
add
mov
lea
pop
pushl
call
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
out
in
stc
int3
mov
mov
imul
add
mov
add
aad
insb
add
into
add
add
stc
add
push
jb
add
xchg
lcall
add
jo
add
jmp
add
add
add
add
push
cltd
add
add
jge
mov
lea
pop
push
push
push
sub
sub
push
or
not
add
ror
not
sub
sub
pop
not
rol
pop
push
push
call
addl
add
push
mov
add
xchg
add
add
add
rorl
jae
add
add
add
lcall
add
test
cmpsl
add
add
mov
cld
push
add
add
lea
push
add
pop
add
add
rcl
mov
add
movb
aam
bound
pop
push
push
call
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
mov
add
xchg
int
jb
test
add
mov
add
fstpt
jecxz
test
fdiv
fbld
sahf
add
mov
xchg
add
add
cwtl
call
add
add
add
add
add
add
add
add
add
fs
popf
xchg
test
fmull
clc
push
push
push
push
push
push
call
add
icebp
add
add
add
mov
mov
add
ret
add
add
add
lret
add
add
add
shrb
les
mov
jge
popa
add
fwait
ret
add
add
jmp
add
fadds
add
add
add
add
add
nop
xchg
pop
call
adc
push
mov
push
push
call
lret
hlt
leave
outsl
jecxz
arpl
push
ret
scas
test
add
mov
add
imul
add
jbe
test
cmpsb
add
in
addl
out
rorl
fld
add
aam
insb
add
add
shll
add
add
bound
xchg
mov
mov
lea
pop
add
add
push
push
call
add
mov
arpl
add
push
pusha
add
mov
nop
add
outsl
add
add
repnz
rcrb
add
add
out
add
pop
clc
pop
add
push
mov
add
add
add
jle
mov
add
add
push
test
add
pop
add
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
mov
add
cmpl
mov
add
enter
movb
mov
ljmp
lods
movsl
add
sahf
add
add
mov
test
add
add
add
pop
lock
in
add
test
add
xchg
jbe
ret
add
mov
in
loop
add
xchg
test
add
add
lea
pop
mov
push
push
push
lea
push
lea
push
push
push
call
lahf
add
jp
shl
lcall
add
add
fadds
xchg
add
xchg
data16
add
je
add
rolb
fwait
add
jecxz
add
icebp
add
pop
rcr
add
add
add
cltd
mov
lret
scas
push
add
call
fldl
out
cmc
flds
out
add
mov
add
add
stos
scas
loop
xchg
mov
lea
pop
xor
push
push
push
call
mov
mov
fnstsw
mov
add
add
add
lods
lods
rcr
into
jecxz
in
push
bound
pop
fadds
imul
stos
add
cmpsl
add
add
add
xchg
add
push
mov
add
add
add
xchg
jecxz
jle
pop
je
test
add
add
cwtl
xchg
pusha
add
push
or
add
push
lea
push
lea
push
push
push
push
call
add
mov
mov
add
cmpsb
subb
xlat
add
lock
mov
xchg
add
add
add
movsb
mov
ljmp
add
xlat
std
add
in
add
cwtl
add
add
mov
lcall
add
les
jne
push
push
push
push
call
add
add
out
xchg
add
push
lret
in
insb
leave
add
sti
mov
out
loope
add
add
add
cmpsl
jne
jle
test
mov
sahf
add
add
cwtl
add
add
add
ja
cmc
add
add
jl
add
testl
fwait
add
int3
lea
pop
push
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
push
insb
add
push
bound
mov
xchg
add
out
mov
jne
mov
js
scas
idiv
push
lods
add
testl
pop
lcall
xchg
jbe
add
mov
mov
incb
add
add
sti
addb
mov
jp
mov
lea
pop
xor
push
push
lea
push
lea
push
call
add
pop
insb
add
add
xchg
add
add
push
sti
add
mov
lret
out
mov
push
lahf
rolb
cmc
add
add
bound
lret
add
push
add
mov
flds
divb
popl
add
ret
jns
incb
cmpsb
data16
cmpsl
add
mov
add
xchg
add
add
add
lret
in
jmp
add
pop
test
pop
add
push
push
call
cld
jbe
int
icebp
mov
mov
jmp
add
add
add
lds
pop
mov
je
fildl
cltd
scas
mov
add
add
cmc
add
jb
add
jo
scas
hlt
popa
scas
jecxz
je
fwait
loop
mov
outsl
add
aad
stc
add
sti
add
int
jno
mov
push
add
js
mov
clc
add
mov
mov
lea
pop
add
pop
mov
xor
push
push
push
lea
push
push
push
lea
push
call
pusha
add
add
cli
jp
pop
add
out
adcl
xchg
iret
mov
add
into
jnp
add
add
int3
add
add
mov
add
orl
add
loopne
ja
add
add
in
je
popa
pop
js
add
add
mov
cmpsb
add
lahf
fsts
jbe
jbe
stc
add
add
jns
ljmp
add
jo
add
lea
pop
push
push
lea
push
call
in
mov
add
fsub
fists
mov
add
add
push
add
scas
cwtl
add
jns
std
mov
jmp
js
scas
repnz
imul
lret
jmp
pop
lcall
int3
add
in
mov
add
jge
xchg
fdivr
movl
add
iret
bound
add
add
add
push
cmpsb
clc
jl
push
lds
mov
int3
lea
pop
mov
xor
push
push
call
add
add
mov
or
add
mov
cli
add
pop
lods
data16
add
stos
out
mov
add
jmp
add
xchg
add
add
add
add
mov
loop
popa
add
push
fiadds
xchg
add
xchg
and
test
xchg
fld
bound
add
std
jle
scas
push
add
lcall
sub
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
xchg
add
jecxz
add
add
jne
fidivs
add
lock
add
mov
pop
add
pushf
xchg
mov
lret
add
pop
cmpsb
rclb
cltd
clc
fwait
movsb
je
xchg
push
add
add
add
nop
mov
ret
add
out
add
add
add
orb
pop
add
add
cmpsl
add
mov
lea
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
fldcw
pushf
pop
jae
mov
add
loopne
cwtl
aad
add
mov
lods
add
rolb
push
add
bound
jp
pop
add
add
ljmp
roll
pop
in
add
pop
out
stos
pop
xchg
add
loopne
xchg
lea
push
nop
add
hlt
add
sti
add
rolb
mov
lea
pop
rep
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
fdiv
incb
add
fidivl
add
xchg
enterw
add
mov
add
add
add
xchg
cmpsl
test
add
fiadds
add
add
jp
cli
push
stos
fwait
add
jae
add
xchg
xchg
std
push
into
add
ffreep
jmp
push
pop
pop
push
add
mov
ja
lods
add
mov
cli
je
add
add
add
mov
lea
pop
mov
add
push
push
lea
push
lea
push
lea
push
push
call
int
add
add
aam
add
push
add
in
pop
call
loop
bound
lods
xchg
cmpsl
repnz
cmc
fildl
push
add
add
out
add
add
mov
lcall
clc
mov
mov
cltd
jno
add
add
xchg
fisubrs
fldcw
fs
lret
add
add
stos
cmpsl
fcomi
lret
jne
fmull
ret
add
add
push
push
push
push
push
push
push
call
jmp
push
lea
add
in
in
add
add
pop
pop
addl
ret
add
popf
movsl
xchg
mov
mov
add
data16
shl
add
mov
push
mov
xchg
add
data16
xor
add
mov
add
pop
pushf
mov
add
pop
movb
into
xchg
out
fst
cli
lea
lea
pop
add
mov
xor
push
push
push
lea
push
push
push
push
call
add
scas
add
add
nop
add
add
roll
add
jne
mov
add
add
add
pop
icebp
pop
jle
pop
jge
mov
jle
add
bound
bound
xchg
in
push
pop
add
add
mov
push
aad
add
add
add
mov
add
add
popa
mov
fiaddl
fwait
push
add
sbb
mov
push
push
push
push
push
push
push
call
add
push
mov
add
xchg
add
stos
add
add
add
out
cwtl
scas
je
add
fmulp
add
add
add
mov
add
add
xchg
push
add
cltd
mov
mov
add
popa
lock
add
mov
shlb
add
ljmp
cwtl
add
flds
lea
push
mov
lea
pop
xor
push
push
lea
push
push
call
push
sbb
popa
add
add
xchg
mov
into
pop
jno
mov
push
jno
addr16
jge
add
add
pop
add
pop
add
add
add
pop
xchg
pop
loop
add
jmp
add
add
fstl
out
roll
test
add
nop
shl
add
rolb
lock
add
add
add
push
xchg
add
add
pop
add
push
push
lea
push
push
push
lea
push
call
add
mov
pop
data16
add
add
call
in
insb
mov
add
fs
add
ret
push
add
outsl
lret
push
stos
enter
add
loop
iret
adc
add
push
jp
mov
push
add
add
stos
add
ror
xorl
jbe
add
ja
add
add
mov
stos
add
repnz
out
add
add
mov
lea
pop
mov
xor
add
push
dec
rol
pop
add
mov
push
push
ror
shl
push
push
pop
add
sub
shl
sub
shl
pop
dec
shl
lea
pop
push
sub
xor
pop
pushl
call
push
push
push
push
push
push
push
push
call
enter
mov
pop
mov
mov
xchg
add
mov
fwait
rorb
jmp
add
add
add
mov
sarb
repnz
pop
lods
add
stc
leave
jns
cld
shrl
xchg
mov
add
add
add
add
add
add
mov
add
add
in
js
clc
fsts
lea
pop
push
push
push
ror
push
xor
add
ror
shl
add
add
sub
ror
add
shr
pop
shl
pop
push
push
push
push
call
sahf
int
imul
stc
pusha
add
add
push
mov
add
add
add
mov
mov
addr16
mov
add
lods
mov
stos
add
mov
jae
ftst
mov
add
xchg
sahf
push
add
add
nop
loope
stos
shll
add
mov
cmpsl
add
scas
mov
testl
in
cld
lea
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
filds
add
push
test
add
out
mov
sbbb
add
int
add
add
hlt
int3
jp
and
clc
ret
fnsave
xlat
add
push
pop
ja
add
test
in
xlat
mov
xorb
ja
arpl
add
add
add
fucomip
cld
loop
add
add
pop
call
mov
push
push
call
add
add
add
rorl
cwtl
add
loop
pop
stos
cmpb
add
nop
add
popa
mov
aam
add
add
bound
xchg
lds
xchg
mov
xorl
rcr
push
xchg
je
add
add
push
push
out
mov
mov
jbe
loopne
lock
add
rolb
mov
mov
lea
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
add
scas
int3
mov
add
test
fs
add
push
xlat
add
mov
mov
add
add
add
hlt
push
loop
mov
lahf
fcmovu
mov
mov
add
add
ret
test
stc
call
jp
add
xchg
testl
mov
mov
add
lcall
add
sahf
jge
jae
out
add
fwait
push
mov
lea
pop
push
push
push
push
push
push
push
call
enter
in
test
push
add
push
add
lret
mov
leave
lea
push
add
xchg
pop
lock
pop
add
enter
push
mov
jle
xchg
int
push
add
jae
add
gs
jl
lods
sahf
xchg
add
test
xchg
add
jbe
xchg
test
mov
popa
lock
cltd
lods
add
pop
mov
add
add
push
push
call
pop
fisubrl
repnz
add
cli
add
add
add
pop
add
aam
lds
pop
pop
add
orb
out
repnz
mov
ljmp
in
pop
xchg
cmpsl
mov
add
xchg
add
addl
lret
xchg
xlat
js
aam
fiadds
jmp
lods
xchg
add
mov
jne
mov
add
push
add
pop
add
aam
shrl
add
bound
pop
add
push
push
push
push
push
call
out
mov
rcl
enter
ror
add
fwait
add
fcoms
mov
ficompl
add
out
call
jmp
add
scas
xlat
add
add
jle
lods
jle
push
mov
mov
xchg
mov
jnp
fiadds
scas
xchg
clc
mov
mov
sbbb
add
mov
lea
pop
mov
push
push
lea
push
push
push
call
pusha
rolb
add
js
cwtl
cmpsb
add
add
jle
xchg
xchg
add
add
bound
add
add
xchg
xchg
add
popl
subl
test
loope
add
mov
add
add
je
pop
outsl
add
lcall
add
add
add
add
add
add
push
mov
mov
lea
pop
xor
push
push
push
call
add
imul
lods
imul
test
add
out
jp
add
mov
int
add
push
add
add
cli
cld
jl
call
nop
add
add
add
jns
std
push
negl
xchg
lret
jno
icebp
jo
mov
test
enter
pushf
cli
mov
icebp
loope
pusha
std
add
add
mov
push
add
rcll
mov
lea
pop
add
add
push
sub
rol
pop
push
push
inc
shr
pop
mov
push
push
push
push
lea
push
push
call
fwait
add
add
add
imul
cmpsb
stos
add
jnp
lahf
js
sti
add
add
mov
in
add
jmp
add
add
movsb
lds
gs
add
cli
add
in
add
add
nop
out
push
pop
lea
add
mov
add
mov
add
xchg
push
incb
add
pop
xor
push
push
push
push
lea
push
push
push
call
addr16
jl
add
cltd
rolb
xchg
ret
push
add
cmpsb
jp
lret
repnz
jae
push
add
imul
pop
push
lods
ret
add
bound
pop
test
jge
in
pushf
mov
movsb
lcall
add
pop
add
rorb
add
add
mov
add
add
jmp
int
add
mov
sti
add
jp
add
add
pop
add
push
push
push
call
push
cld
add
mov
rolb
mov
cmpsl
lret
shl
pop
mov
clc
idivb
aad
mov
ror
add
popa
movsb
add
xchg
fsubp
cwtl
mov
fldl
mov
fldl
pushf
out
add
add
add
add
add
add
mov
add
stos
add
lds
add
add
lods
pop
jmp
popa
or
add
push
rol
pop
pop
push
xor
ror
pop
mov
push
push
lea
push
push
call
pop
push
pop
shll
jne
pop
add
mov
mov
xlat
sub
mov
add
addb
cltd
mov
filds
rolb
add
add
xchg
jmp
add
out
out
cld
add
add
movsb
mov
test
les
je
add
xchg
mov
cli
ljmp
clc
add
fisubrl
jmp
push
mov
lea
pop
xor
push
push
push
call
lds
add
add
push
mov
xchg
lret
cmpsb
lds
lods
add
mov
push
push
add
roll
jne
add
lcall
mov
addr16
addr16
jne
pop
add
add
mov
data16
jno
add
add
add
gs
mov
mov
xchg
movsl
add
enter
rorl
add
mov
add
sar
add
pop
add
rep
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
add
ljmp
pop
mov
rolb
rclb
shrb
mov
mov
add
movsb
add
fiaddl
movsb
xorl
push
push
add
xchg
jmp
add
add
leave
add
out
bound
sarl
in
add
mov
iret
mov
jae
mov
lea
pop
mov
push
push
push
push
push
call
mov
mov
fidivrs
jecxz
add
add
add
add
decb
add
mov
mov
mov
lock
add
jno
arpl
add
pop
cmpl
in
push
push
push
pop
shlb
add
popf
add
lea
sarb
push
add
lea
pop
xor
push
lea
push
push
push
push
push
push
call
incb
add
pop
xchg
aam
xchg
add
sbbb
push
cwtl
add
iret
add
jb
mov
jl
jns
in
arpl
cwtl
bound
lea
out
add
mov
mov
jmp
test
add
add
xchg
add
add
xchg
mov
add
clc
mov
lea
pop
add
push
sub
pop
or
je
push
push
lea
push
push
push
push
push
lea
push
call
roll
add
leave
add
jecxz
leave
jp
mov
cld
push
cli
push
add
mov
add
add
add
add
add
add
add
mov
int
add
test
push
stos
lds
addl
loopne
js
int
add
lret
add
mov
add
les
mov
lea
pop
mov
push
push
push
push
lea
push
push
call
fiadds
lcall
jo
add
jb
add
std
pop
add
in
add
add
cltd
jge
insb
mov
xchg
add
mov
add
add
add
ja
add
xchg
jle
add
add
add
out
fwait
mov
fdivl
lea
pop
ret
filds
add
imul
fxam
sti
mov
add
cld
fildll
adc
xor
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
xchg
jbe
sahf
mov
add
add
movsl
add
ljmp
lcall
in
xchg
xchg
add
add
mov
in
out
scas
add
add
add
add
push
shll
add
mov
jl
xchg
add
mov
pop
loop
scas
add
add
test
add
add
add
fidivrs
addl
add
int3
mov
pop
add
push
add
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
add
mov
xchg
add
mov
add
add
icebp
popl
add
mov
jp
arpl
add
add
add
in
add
add
mov
mov
add
aad
lods
imul
add
add
add
loopne
add
jecxz
xchg
les
add
mov
mov
lea
pop
xor
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
lcall
ja
add
fwait
popl
push
stc
mov
add
push
mov
int3
mov
out
mov
add
add
bound
aam
loopne
add
add
add
add
add
mov
add
add
imul
mov
lea
pop
add
push
push
push
push
push
lea
push
push
call
xchg
iret
add
add
in
out
add
int
add
shl
lds
scas
push
add
aam
add
push
mov
mov
push
call
add
add
add
sti
iret
add
add
push
test
stos
mov
add
mov
push
add
add
cwtl
push
flds
add
add
add
fadd
pusha
add
pop
mov
push
add
xchg
add
mov
add
jns
cltd
mov
lea
pop
add
add
push
xor
add
pop
push
mov
push
push
push
push
push
push
push
push
call
add
add
pop
pop
add
mov
mov
std
xchg
aam
test
pop
jns
xchg
mov
add
add
jmp
add
jns
jnp
sub
pop
xchg
lds
lods
add
bound
std
add
test
adc
add
jno
filds
mov
add
add
add
add
add
add
fldl
scas
pop
mov
lea
pop
xor
push
push
push
lea
push
push
push
lea
push
call
stos
icebp
jo
out
sbbb
add
add
mov
jo
mov
cwtl
add
scas
add
add
add
xchg
into
add
fists
add
mov
subl
add
xchg
addr16
add
mov
or
gs
lret
lret
add
push
nop
in
test
iret
add
add
rol
add
mov
imul
mov
lea
pop
add
push
push
lea
push
lea
push
call
add
xlat
mov
icebp
fiadds
jno
test
jno
xchg
popa
iret
add
mov
int3
scas
add
add
add
add
pop
pop
mov
add
roll
xchg
out
loopne
add
test
mov
add
shlb
add
pop
mov
add
mov
add
nop
pop
add
add
add
add
add
add
leave
add
mov
movsl
scas
add
pop
add
pop
push
push
push
push
push
push
push
push
push
call
add
xchg
add
push
add
insb
add
add
add
add
mov
enter
gs
rcrl
add
lret
add
add
add
add
add
out
cli
add
rcr
cmpsb
ljmp
pusha
add
mov
icebp
xchg
xchg
add
add
add
add
add
std
mov
xchg
add
cmc
add
add
mov
and
rep
mov
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
scas
div
fldenv
sti
imul
add
add
shl
jmp
clc
mov
fwait
pop
mov
add
add
add
stos
add
add
mov
lods
lret
push
cmpsb
stos
add
push
add
add
pop
add
rolb
fcmovnbe
add
lods
mov
add
mov
pop
cmpsl
cmpsl
repnz
outsl
add
std
stos
hlt
xchg
add
lea
pop
xor
push
lea
push
push
push
push
push
call
mov
mov
add
mov
add
jge
add
idivl
add
gs
fsave
add
add
add
add
movb
lds
add
add
shll
ja
xchg
add
lods
int
ret
add
mov
add
add
pop
add
push
inc
sub
xor
pop
or
je
mov
add
push
push
lea
push
push
push
push
push
push
call
add
jecxz
push
stos
sahf
add
mov
add
shll
test
loop
add
jns
add
add
mov
fwait
add
add
add
push
movsb
xchg
mov
insb
mov
add
jne
add
les
add
cltd
add
add
add
add
mov
jno
add
js
cltd
add
pop
add
rep
push
lea
push
lea
push
call
lods
mov
pop
mov
add
add
hlt
mov
jl
lods
add
mov
push
aad
push
cli
lock
lea
pop
add
add
test
add
add
add
add
scas
add
add
xchg
pop
movsl
xchg
mov
xchg
cli
lret
cmpsb
pop
js
add
in
movsl
repnz
add
addl
mov
lea
pop
pop
push
push
shl
push
or
inc
add
shr
sub
pop
lea
sub
pop
push
rol
sub
pop
pop
push
lea
push
push
push
push
push
push
call
mov
jl
aad
add
add
add
add
push
cli
pop
jecxz
add
push
je
add
add
cld
push
add
test
add
popa
add
mov
add
mov
add
jle
push
data16
mov
add
add
add
add
call
jb
add
js
movsl
mov
add
pop
cld
subl
pop
mov
mov
mov
push
xor
add
rol
pop
jmp
push
push
rol
pop
mov
add
push
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
mov
add
add
jb
popa
add
add
add
add
add
mov
add
add
mov
push
leave
roll
ljmp
pop
insb
add
add
popa
mov
pop
stc
xchg
fsub
in
xchg
lods
push
test
loopne
add
rol
mov
pop
clc
fldl
add
imul
add
aad
add
cmpsl
jle
aam
bound
push
push
push
push
lea
push
call
add
pushf
add
cmpb
mov
lds
flds
fldl
pop
pop
mov
add
add
nop
lock
cld
test
add
cwtl
xchg
push
enter
mov
add
clc
jb
data16
out
add
in
imul
pop
add
add
rolb
addr16
xchg
add
add
add
or
push
push
push
call
lods
add
popf
mov
add
nop
add
add
add
movsb
jle
add
jge
mov
add
test
loop
mov
push
fs
add
add
out
add
data16
add
data16
ljmp
pop
cmpsb
in
fwait
add
add
pop
add
hlt
nop
sbbl
cmp
mov
lea
pop
mov
pop
push
sub
pop
pop
pop
push
ror
shr
pop
pop
leave
ret
push
add
sub
pop
push
push
sub
pop
mov
add
push
lea
push
push
push
push
push
push
push
push
push
call
std
add
gs
add
jl
xchg
roll
add
imul
stc
jb
add
mov
out
push
jns
lcall
mov
je
lahf
xchg
add
andb
add
bound
push
std
add
add
xchg
push
add
movsl
push
fs
rorl
lea
pop
push
push
dec
shr
pop
push
push
lea
dec
pop
push
push
lea
pop
push
push
push
push
push
lea
push
lea
push
call
movsb
lahf
out
std
out
pop
lcall
add
add
add
jnp
test
push
int3
xchg
out
add
xlat
add
push
loope
cmpsb
cltd
int3
add
rolb
mov
fldenv
xchg
aam
add
lock
shr
stos
add
cli
out
addl
add
add
add
faddp
add
add
addl
add
add
add
flds
mov
lea
pop
movl
addl
test
je
push
shl
pop
mov
pop
push
push
push
push
push
call
popa
lahf
out
add
add
stos
xchg
mov
mov
add
cmpsl
jge
add
add
add
repnz
add
test
add
les
jecxz
add
lahf
jns
xchg
movsb
jnp
mov
xchg
in
add
mov
xchg
xchg
roll
add
mov
add
in
out
sahf
movb
add
add
add
jmp
movsb
mov
adc
pop
pop
pop
push
add
ror
inc
pop
leave
push
push
call
jl
arpl
out
add
jne
add
mov
add
sbb
mov
push
xchg
add
imul
add
mov
mov
fs
add
test
fs
add
lock
add
add
mov
add
add
mov
add
add
fnstsw
add
add
mov
add
mov
mov
add
or
add
push
push
sub
dec
rol
pop
mov
push
sub
pop
add
push
push
push
push
push
call
add
add
push
clc
mov
add
roll
mov
lcall
movl
jp
add
add
sti
push
add
add
add
subb
into
add
jo
je
add
jmp
roll
pop
ljmp
cmpsl
cmpsl
clc
shll
loop
scas
mov
lea
pop
push
push
push
call
push
add
add
rolb
int
sub
ljmp
add
jp
test
mov
mov
add
mov
add
add
mov
call
in
add
mov
lods
add
cli
xchg
add
add
xchg
lds
add
push
add
add
ja
rolb
add
add
fimuls
pop
push
push
testl
push
push
call
add
add
add
add
jae
negb
add
add
fiadds
add
add
mov
add
js
add
add
xlat
clc
jge
add
add
scas
add
test
in
stc
repnz
mov
in
mov
test
jae
mul
aad
movl
or
inc
or
push
call
push
push
lea
push
push
push
push
push
call
lods
mov
fildl
add
add
pop
stc
scas
add
xchg
cwtd
std
add
add
add
add
data16
xchg
jbe
fcomi
add
add
add
mov
nop
add
pop
mov
add
addl
add
cmpsb
add
lods
mov
jmp
lods
sti
add
hlt
popa
mov
mov
lea
pop
mov
push
sub
lea
ror
lea
pop
pushl
push
ror
pop
push
push
call
push
ror
pop
cmpl
jne
pop
pop
push
shr
lea
sub
pop
pop
pop
push
sub
lea
sub
pop
leave
ret
push
shl
pop
push
push
shr
not
add
pop
mov
push
shl
add
sub
pop
add
push
push
push
add
pop
push
push
push
lea
push
push
push
push
push
call
push
out
loope
mov
cmpsl
add
xchg
add
imul
test
les
stos
mov
movb
sti
roll
rclb
add
cmpl
add
push
in
aad
mov
add
push
cmpsl
add
lretw
add
loopne
js
out
fldcw
add
mov
push
mov
jae
pop
lds
add
add
ret
jns
push
scas
add
add
mov
mov
lea
pop
push
push
add
lea
rol
pop
movl
push
push
pop
call
push
call
push
shl
pop
subl
push
push
lea
push
push
push
push
call
pop
loope
add
add
add
add
test
gs
jp
add
mov
xchg
xchg
imul
lcall
xchg
mov
ja
rolb
jp
add
add
xchg
add
add
mov
add
add
nop
mov
fadds
out
rcll
les
mov
add
mov
lea
pop
cmpl
jne
pop
push
sub
pop
pop
pop
pop
push
push
lea
push
push
lea
push
call
arpl
movsl
add
add
jp
sti
les
div
add
cwtl
stos
movsl
lret
mov
iret
shrb
add
popl
int
orl
stos
add
jle
mov
add
add
add
clc
insb
mov
mov
rorl
addb
add
mov
add
pop
bound
addr16
leave
ret
push
push
ror
pop
mov
push
push
push
lea
push
lea
push
push
push
call
add
arpl
mov
add
rolb
int3
push
add
mov
add
arpl
add
add
ja
stc
data16
lods
add
add
mov
fadds
mov
add
stos
lock
add
mov
clc
roll
lret
add
jge
add
add
mov
enter
outsl
flds
add
add
push
in
ret
add
add
shrb
mov
fmull
cld
push
push
push
push
push
call
icebp
mov
add
je
pop
bound
add
xchg
cwtl
add
int
add
add
add
lods
add
add
add
test
mov
mov
in
leave
add
in
xchg
mov
add
mov
cli
mov
test
nop
sahf
add
xlat
scas
loope
call
add
leave
push
add
add
hlt
lea
pop
push
push
push
not
pop
mov
lea
push
push
push
lea
push
push
call
mov
add
or
insb
add
mov
add
add
push
js
lcall
rcrl
add
mov
add
loope
add
add
mov
add
add
mov
add
add
ljmp
add
add
jo
movsb
out
shll
adc
sub
push
push
push
lea
push
push
call
add
push
add
jl
add
add
div
popf
pop
out
test
int3
add
add
xchg
stc
xchg
je
leave
mov
nop
add
add
push
push
add
cmpsl
pop
out
movsl
add
pusha
jmp
jo
add
enter
fstl
pop
add
xchg
test
addl
add
add
add
add
add
fwait
mov
add
add
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
push
call
rcr
rcrb
in
fsubr
push
mov
sti
and
jge
add
add
add
add
jnp
iret
mov
add
cmpsb
jecxz
push
pop
orb
imul
pushf
push
add
add
add
add
add
popa
add
int3
pop
aam
add
stos
ljmp
shr
add
mov
push
push
lea
push
push
lea
push
call
addr16
add
loopne
add
lock
data16
add
add
add
lret
push
mov
in
leave
jb
mov
add
add
add
scas
imul
add
cltd
xchg
loop
add
add
mov
add
hlt
lea
pop
mov
add
add
push
push
lea
push
lea
push
push
push
push
push
call
pop
addb
add
mov
add
in
jmp
lret
add
xlat
mov
add
add
add
jmp
int3
jle
add
faddl
add
add
shl
add
add
mov
add
push
add
divb
mov
add
iret
mov
cltd
xchg
add
out
mov
add
test
pop
pop
xchg
pop
mov
mov
cmp
jne
push
add
pop
cmp
jne
mov
push
rol
pop
movl
jmp
mov
push
lea
push
push
push
push
call
xchg
fsts
addr16
add
add
mov
mov
add
add
shrb
add
mov
mov
iret
add
add
mov
add
fcomi
iret
test
pop
add
xchg
shrb
add
add
hlt
leave
add
add
add
mov
fadds
add
shlb
mov
jo
push
add
sti
mov
pop
add
icebp
add
add
xchg
add
fs
lea
pop
mov
push
lea
push
lea
push
push
push
call
fisubs
jecxz
mov
cltd
push
jae
rolb
loop
jno
mov
mov
fcmove
insb
in
fs
add
fadds
add
test
add
ljmp
fs
xchg
mov
add
fcom
stos
clc
jmp
andl
add
jecxz
jle
add
mov
lea
pop
sub
jne
mov
movl
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
xlat
add
outsl
add
add
push
mov
add
add
pop
jb
jae
test
in
addb
add
jne
jmp
stos
add
push
add
add
testl
pop
mov
push
insb
add
in
add
in
add
addb
sarl
add
add
pop
jmp
mov
mov
push
push
push
call
add
jl
in
xchg
add
mov
add
cmpsl
lds
add
jne
push
lret
iret
notl
jmp
jp
pop
popa
lea
fildl
std
add
push
sahf
add
pop
notl
cli
add
add
xchg
je
leave
call
xchg
cwtl
loop
add
add
sar
je
push
xchg
fcomps
int
idivl
call
or
cmp
jne
mov
push
push
call
mov
rolb
mov
mov
into
add
test
arpl
xchg
jnp
push
add
pop
push
add
cld
add
lcall
mov
arpl
ret
mov
mov
add
xchg
add
fiadds
data16
mov
push
sbbl
mov
jecxz
cmpsb
add
jle
lock
add
mov
add
decb
pop
movl
push
add
sub
pop
jmp
push
not
rol
sub
pop
mov
cmpw
jne
mov
push
xor
add
ror
pop
movl
push
push
push
call
mov
loope
lods
repnz
addl
insb
add
add
add
add
data16
mov
add
add
mov
add
mov
add
lods
test
add
fidivrl
hlt
add
add
add
cld
out
add
cld
push
xchg
repnz
add
clc
addb
jp
aam
bound
jmp
push
lea
push
push
push
lea
push
push
push
push
push
call
clc
add
add
add
add
addb
xchg
mov
add
fisttps
add
scas
rcl
add
add
nop
sahf
data16
add
mov
mov
add
arpl
ja
add
movsl
shl
add
add
cwtl
fsubl
add
in
add
mov
lea
pop
pushl
pop
push
push
push
lea
push
push
push
push
push
call
xchg
add
ljmp
icebp
add
add
add
mov
add
stc
mov
add
xchg
mov
push
cwtl
push
lret
add
push
mov
cltd
add
mov
add
jp
add
pop
add
add
xlat
in
shlb
mov
stc
add
add
jbe
pop
add
mov
mov
lea
pop
mov
mov
push
add
dec
pop
mov
push
push
sub
rol
push
or
not
add
shr
ror
sub
inc
pop
sub
add
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
pushf
jo
enter
mov
add
jnp
mov
cwtl
add
js
cli
add
add
ffree
pop
mov
add
call
fwait
scas
movsl
pop
add
xchg
jecxz
mov
xchg
add
scas
sbbb
outsl
pop
bound
mov
add
xlat
add
add
mov
push
loope
add
fwait
mov
lea
pop
call
push
push
push
push
lea
push
push
lea
push
push
call
ja
jl
add
sti
add
jne
lods
add
jecxz
add
add
push
add
stos
mov
pop
cmpsl
in
jl
add
mov
push
lahf
fadds
mov
jmp
call
add
jne
add
nop
add
stos
xchg
add
ja
add
fidivrs
testb
push
add
add
stos
popa
mov
cld
lea
pop
cmpl
je
push
push
shr
add
push
push
pop
add
inc
not
sub
shl
add
lea
lea
pop
sub
pop
push
lea
push
push
push
lea
push
push
push
push
call
add
aam
add
push
add
stc
fsubrp
mov
xchg
add
add
add
add
add
loopne
mov
pop
add
aad
add
cwtl
pop
jp
mov
popa
add
hlt
add
add
mov
add
lods
add
cwtl
add
add
flds
lret
aad
xchg
frstor
mov
add
add
pop
push
push
add
add
pop
call
push
add
dec
sub
pop
cmpl
je
push
push
add
xor
sub
add
push
push
pop
add
rol
xor
sub
sub
shl
pop
shr
pop
push
push
push
lea
push
call
add
loop
add
add
pop
add
add
add
ror
roll
add
div
shll
mov
push
cld
movsl
add
mov
add
add
mov
mov
fs
leave
add
push
outsl
add
add
popl
scas
js
arpl
scas
lcall
std
add
icebp
xchg
pop
add
add
out
mov
mov
shll
add
add
movsb
add
fmull
push
push
push
push
push
push
lea
push
push
call
add
pop
add
add
add
mov
add
imul
out
movsb
add
add
jl
add
add
jle
add
add
sti
pop
add
push
call
push
mov
push
add
add
iret
popf
movl
add
pop
jno
pusha
imul
pushf
add
ja
enter
mov
lea
pop
call
cmpl
je
push
push
sub
sub
sub
sub
push
or
inc
add
dec
sub
shr
dec
pop
ror
rol
sub
pop
push
push
lea
push
lea
push
call
add
add
outsl
add
xchg
jbe
call
add
lahf
add
push
pop
faddl
add
add
jl
gs
jns
add
into
add
add
add
pop
add
fadds
test
add
add
jo
data16
gs
add
jno
int3
mov
add
pushf
call
les
call
push
push
push
push
lea
push
push
lea
push
push
call
div
cld
int
jmp
arpl
add
add
add
add
shll
xchg
js
mov
into
mov
push
addr16
add
mov
ret
ret
add
push
out
xchg
xchg
mov
repnz
out
pop
ljmp
jl
mov
mov
xchg
add
cli
rolb
out
mov
lea
pop
cmpl
je
push
push
sub
push
push
pop
add
shr
shl
add
sub
pop
dec
sub
ror
ror
pop
push
inc
pop
push
call
cmpl
je
push
push
inc
inc
add
push
sub
add
shr
shr
inc
sub
xor
pop
add
pop
push
push
lea
push
lea
push
lea
push
call
pusha
xchg
add
add
les
add
les
xchg
add
shlb
jmp
aam
add
add
cld
mov
fbld
roll
jb
add
xchg
add
lods
loop
aam
aam
lret
mov
add
add
fistpl
out
add
add
jns
push
mov
mov
mov
lea
pop
push
call
push
pop
cmpl
je
push
push
lea
xor
push
sub
add
not
inc
sub
lea
sub
rol
pop
xor
sub
shl
sub
pop
push
push
push
call
pop
fidivs
lret
ror
pop
js
fsubp
ljmp
ficomps
and
add
push
add
stos
add
in
stc
pusha
push
add
add
add
add
shll
push
divb
add
int3
add
out
add
push
mov
add
imul
pop
add
stos
push
sti
shlb
cmpsl
jle
xchg
add
add
jae
and
mov
lea
pop
push
call
cmpl
je
push
push
xor
not
not
xor
push
or
inc
add
xor
sub
sub
add
inc
pop
add
inc
xor
shr
pop
push
sub
shr
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
pusha
out
out
add
cmc
in
test
mov
je
add
add
mov
mov
add
fcomps
add
mov
pusha
ret
sti
add
enter
jnp
stc
je
loope
jge
jb
add
icebp
push
pop
std
lods
add
scas
add
add
add
mov
push
fmuls
lea
pop
call
cmpl
je
push
push
not
add
dec
ror
push
or
not
add
shl
add
sub
sub
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
mov
push
mov
add
ljmp
xchg
jp
add
add
jno
add
out
add
push
in
push
add
out
add
jo
iret
scas
aam
cmc
push
add
call
push
add
add
add
decb
add
lea
pop
push
push
inc
shr
dec
lea
pop
call
cmpl
je
push
push
sub
shl
sub
push
sub
add
rol
sub
sub
dec
pop
lea
rol
pop
push
sub
sub
pop
push
call
cmpl
je
push
push
sub
push
sub
add
sub
sub
sub
not
pop
not
ror
pop
push
shl
ror
add
dec
pop
push
call
cmpl
je
push
push
lea
push
xor
add
dec
sub
inc
pop
dec
pop
push
add
lea
ror
add
pop
push
call
push
lea
push
lea
push
push
call
add
push
pusha
pop
add
sti
fildl
pusha
out
add
pusha
arpl
je
int3
fs
test
int3
add
mov
add
call
addl
test
loope
fnstenv
rolb
add
scas
add
mov
add
scas
fistpll
lret
add
mov
cwtl
add
push
add
xchg
addl
add
add
add
pop
cmpl
je
push
push
shr
sub
push
or
not
add
add
add
sub
dec
pop
xor
sub
pop
push
push
push
push
push
push
call
add
test
cmpsb
ljmp
fwait
mov
add
jns
int
cmpsl
pop
add
add
add
add
mov
xchg
popf
cmc
xchg
jl
out
lret
mov
jo
int3
add
js
pop
ljmp
mov
stos
add
add
add
out
add
mov
push
push
xchg
cli
out
jo
cmpl
add
mov
jnp
out
iret
push
fmull
push
sub
lea
lea
pop
call
cmpl
jne
mov
push
push
push
push
push
push
push
lea
push
call
add
subb
mov
xchg
jl
add
mov
add
mov
add
add
pusha
add
fcoms
out
js
call
lret
add
add
cli
cwtl
pop
jmp
les
add
ljmp
gs
lock
loope
jle
into
add
stos
mov
add
lret
pushf
fucom
pushf
add
add
test
add
fadds
push
add
jge
add
mov
lea
pop
movl
push
sub
pop
jmp
push
ror
shr
pop
xor
push
lea
push
push
push
push
lea
push
call
jge
add
add
add
ficoml
jle
jge
fmuls
add
add
nop
add
add
icebp
rolb
add
adc
add
add
addr16
xchg
adc
int3
jmp
add
clc
data16
iret
push
filds
enter
addb
jle
popf
add
mov
mov
lea
pop
pop
push
push
push
push
push
lea
push
lea
push
call
loop
leave
pusha
mov
sbbl
jnp
mov
add
addb
loope
in
mov
add
add
arpl
nop
mov
rclb
jns
cmc
mov
add
pop
push
push
add
add
push
scas
mov
pop
jmp
add
push
aad
mov
add
iret
add
pop
pop
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
out
ja
jle
add
add
roll
jno
hlt
add
add
add
pop
fildl
jns
push
add
push
add
loopne
jne
add
xchg
pop
add
add
les
add
jp
push
lcall
fwait
pop
add
sti
add
cwtl
clc
lea
out
mov
in
mov
mov
lea
pop
leave
ret
push
sub
inc
not
lea
pop
push
push
lea
push
push
call
fwait
add
mov
push
int
add
imul
pop
add
add
roll
add
jecxz
add
jno
lock
jns
push
add
add
add
enter
add
lock
add
add
test
mov
add
xchg
mov
add
add
loope
mov
jmp
pushf
test
add
popl
data16
mov
push
lea
push
push
push
push
push
push
push
lea
push
call
push
fstpt
fcoml
rcrl
mov
out
aad
add
add
add
test
js
movsb
add
rcl
push
stos
mov
add
les
pop
add
add
jecxz
leave
iret
add
in
loop
outsl
mov
add
add
add
jae
push
cmpsl
add
add
out
fwait
mov
lea
pop
add
push
push
lea
push
push
lea
push
push
call
je
imul
add
iret
mov
ljmp
jo
jecxz
out
add
mov
pop
add
movsb
testl
add
and
xlat
jns
mov
add
cmc
jp
js
mov
movsb
sahf
add
add
add
cmpsw
outsl
out
lock
addb
jmp
insb
add
add
mov
lea
pop
cmpl
jne
push
push
shr
add
push
sub
add
add
sub
add
sub
add
pop
shr
rol
ror
pop
push
push
lea
push
lea
push
call
mov
mov
mov
xchg
jns
add
filds
add
push
test
outsl
lds
popa
jbe
add
jae
add
jne
mov
mov
add
add
jp
stos
jo
frstor
rcrl
xlat
add
jbe
add
pop
xlat
lea
sar
add
rorl
shr
push
je
jge
mov
lea
pop
pushl
call
push
push
push
push
push
push
call
add
mov
jecxz
push
add
scas
jmp
jns
push
mov
add
faddl
sahf
mov
testb
rcr
out
leave
add
bound
add
add
mov
add
xchg
add
add
mov
add
pop
add
add
add
mov
mov
add
pop
xchg
addr16
mov
add
mov
in
pop
push
sarl
pop
call
push
add
dec
inc
pop
jmp
cmpl
je
push
rol
pop
cmpl
jne
push
lea
push
lea
push
call
jbe
mov
add
ja
add
shl
iret
add
andl
add
std
jl
mov
add
cmpsl
add
add
popa
hlt
add
add
add
shll
add
xchg
incb
mov
mov
add
fsubl
loopne
hlt
add
imul
sahf
cmpsl
mov
lea
pop
leave
push
pop
add
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
lret
add
jmp
add
add
fildl
jbe
jb
add
xchg
cmc
aad
out
add
xlat
add
fs
lret
add
roll
mov
mov
mov
add
movb
add
int3
jne
add
add
add
add
out
out
lock
lods
add
mov
jge
mov
mul
fucom
add
add
mov
lea
pop
pop
pop
pop
push
sub
xor
add
pop
pop
leave
add
push
sub
lea
not
inc
pop
ret
jmp
cmpl
jne
push
push
rol
lea
dec
push
and
add
shl
sub
ror
add
pop
dec
pop
push
push
push
push
push
push
push
call
test
add
add
add
add
roll
iret
sti
jmp
xchg
push
fs
add
lret
mulb
push
lods
rclb
add
aam
add
xlat
add
add
addr16
in
lock
add
add
pop
test
iret
add
fbld
add
add
loop
xchg
cmpsb
push
add
call
mov
add
mov
lea
pop
pushl
push
shl
pop
call
push
call
push
not
pop
jmp
cmpl
jne
mov
push
rol
pop
mov
push
inc
pop
jmp
push
pop
push
xor
shr
ror
shr
pop
dec
jne
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
stos
data16
add
addl
lahf
pop
add
movsl
add
fdivr
scas
cmpsl
cli
movl
add
pop
call
cmpl
pop
and
mov
jbe
push
add
add
add
popl
ret
add
add
stc
mov
out
add
add
xchg
mov
mov
lea
pop
call
jmp
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
int
lahf
repnz
aam
add
aam
pop
out
add
push
add
add
mov
stos
add
fs
mov
add
add
add
mov
mov
out
mov
mov
add
add
cmc
xchg
add
jbe
mov
push
add
push
xchg
int
add
add
les
mov
mov
lea
pop
call
push
push
ror
add
push
or
not
add
add
shl
sub
add
shl
shl
pop
sub
not
pop
push
ror
pop
pushl
push
xor
pop
call
push
push
push
push
call
add
out
shlb
add
push
xchg
add
mov
pop
add
add
popa
add
cwtl
add
xchg
add
fsubrp
in
add
xchg
bound
jns
add
vsqrtsd
add
jle
loope
add
mov
addb
in
fwait
add
add
add
pop
add
test
add
mov
scas
add
add
out
add
arpl
pop
push
push
push
push
call
push
xchg
push
add
push
std
add
add
jbe
stos
mov
push
add
jno
pop
test
add
data16
add
add
add
add
ret
add
add
add
add
outsl
int
aam
add
add
add
add
add
add
add
mov
add
add
pop
mov
lea
pop
call
mov
push
shl
rol
pop
lea
push
push
lea
lea
not
push
and
add
sub
sub
dec
add
pop
shr
dec
pop
push
add
pop
pushl
call
push
push
push
call
ljmp
mov
add
call
add
cmpsl
movsb
mov
push
push
int3
add
add
add
pusha
push
add
in
xchg
jmp
je
add
movsb
loope
jmp
scas
mov
add
push
mov
add
add
faddl
add
mov
lea
pop
call
push
push
inc
inc
rol
push
or
not
add
rol
ror
lea
sub
sub
add
inc
pop
pop
pushl
push
rol
ror
pop
call
push
pop
call
mov
push
not
add
pop
lea
push
push
add
not
xor
lea
push
or
not
add
lea
sub
add
pop
add
shl
sub
shr
pop
pushl
push
pop
call
push
lea
push
call
movb
mov
out
add
out
add
add
mov
add
add
pop
jmp
add
add
xchg
add
out
pop
push
add
add
enter
xchg
lcall
add
fiadds
into
xchg
mov
lahf
mov
or
add
push
push
push
lea
push
push
push
push
lea
push
push
push
call
int
add
ja
ljmp
add
add
loopne
add
ja
mov
add
popa
add
out
add
movsb
add
pusha
add
add
add
pop
out
add
mov
add
mov
add
add
add
mov
call
add
add
add
mov
add
mov
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
push
push
call
aam
stos
push
add
mov
add
add
jb
xchg
pop
fwait
add
add
mov
rclb
rcll
jecxz
add
fcompl
add
fs
gs
imul
add
sahf
jnp
mov
movb
add
addb
in
jl
mov
add
aam
rolb
add
add
add
pop
pushl
push
push
sub
push
xor
add
dec
sub
sub
pop
sub
lea
pop
push
sub
sub
inc
pop
push
push
lea
push
push
call
imulb
pop
mov
call
add
cld
jmp
lret
cmc
arpl
faddl
repnz
add
add
mov
add
add
add
add
add
add
add
add
fs
aam
addb
push
mov
add
fstl
rolb
jo
mov
lea
pop
call
push
push
lea
sub
push
push
pop
add
lea
sub
sub
pop
lea
ror
pop
push
dec
pop
pushl
push
lea
push
push
push
push
push
call
mov
add
int
push
add
int3
xchg
add
pushf
flds
ret
in
add
add
pop
add
add
imul
add
loope
add
pop
faddl
les
test
iret
fldcw
xchg
test
pop
push
mov
cwtl
negb
nop
call
add
test
add
xlat
add
push
cmpsb
xchg
imul
in
mov
addl
lea
pop
call
push
push
push
push
push
call
xchg
push
lea
rol
jae
mov
add
add
jbe
add
lret
adc
mov
pop
add
add
add
add
je
add
add
add
add
xchg
add
shl
sbbb
add
push
ja
fildl
pop
mov
mov
lea
pop
push
push
dec
pop
call
push
push
add
shr
inc
push
xor
add
inc
rol
sub
shr
shr
pop
rol
shl
ror
pop
push
lea
push
call
add
jp
out
add
sar
add
add
imul
sti
mov
add
pop
add
add
mov
scas
pop
add
xchg
lock
mov
loope
pop
mov
mov
jnp
addb
add
cli
rolb
jge
xlat
add
nop
add
add
in
add
fisttps
cli
add
fadds
into
lea
add
pop
add
mov
lea
pop
pushl
call
push
xor
sub
pop
call
push
push
push
push
lea
push
push
push
lea
push
push
call
add
lods
xchg
push
add
add
xchg
add
add
mov
lods
add
pop
fsubrs
add
mov
mov
movsb
adcl
add
pop
shll
movsb
add
jo
add
in
add
jnp
notb
aam
add
js
add
icebp
add
add
mov
add
pop
jmp
pushl
push
inc
add
sub
sub
pop
mov
push
lea
push
lea
push
push
call
add
add
mov
popa
add
add
add
shlb
add
test
xchg
mov
jge
xchg
addb
pop
add
sahf
add
add
mov
mov
scas
add
loopne
bound
mov
shr
roll
add
add
add
in
int
hlt
faddl
mov
add
leave
out
add
mov
lea
pop
jmp
push
push
push
or
inc
add
not
ror
sub
not
dec
pop
inc
rol
pop
push
shr
dec
sub
pop
pushl
call
push
add
add
pop
push
call
push
push
add
push
and
add
dec
shr
inc
sub
inc
sub
dec
pop
add
add
shr
pop
push
inc
pop
pushl
push
lea
push
push
lea
push
push
lea
push
lea
push
call
push
stc
pusha
mov
add
out
add
in
je
mov
fldl
add
add
add
ljmp
test
mov
xchg
mov
je
lds
addb
add
pusha
mov
pusha
bound
rcrb
aad
sahf
add
pop
add
pop
call
push
push
call
roll
test
sti
iret
lods
mov
mov
popf
add
jnp
in
repnz
add
mov
add
add
add
mov
imull
lock
add
lahf
shrb
add
xabort
add
jp
add
xchg
popf
pop
jb
aam
add
mov
ja
loopne
lret
jecxz
mov
lea
pop
push
call
leave
push
lea
push
push
call
add
data16
js
add
popa
jge
mov
add
mov
add
mov
popf
loope
imul
add
rcrb
out
lahf
cwtl
mov
idivl
add
add
jge
add
test
mov
jnp
test
add
add
leave
add
int3
xchg
mov
lea
pop
add
push
push
push
call
add
in
loopne
addb
mov
out
enter
rolb
add
lret
add
add
add
jl
fnsave
xchg
add
push
add
add
cltd
push
add
add
test
data16
icebp
mov
mulb
add
cmpsl
scas
mov
lea
pop
pop
push
rol
add
pop
pop
pop
push
push
push
call
add
add
nop
lock
rcll
fs
add
test
mov
ret
test
loop
fs
add
xchg
add
movsl
add
add
add
add
bound
jae
xchg
jbe
add
fcmovbe
add
cltd
xchg
xlat
andl
add
mov
lea
pop
pop
leave
push
not
lea
sub
ror
pop
add
push
push
push
lea
push
lea
push
push
call
add
mov
adcb
rcrl
mov
add
pop
test
add
add
mov
push
add
add
fidivrl
call
mov
pop
add
add
jle
add
add
rclb
mov
add
add
aad
mov
cmpsb
popa
fcmovbe
add
addl
cmpsb
mov
imul
jle
insb
loope
add
add
add
pop
ret
push
add
not
pop
leave
push
ror
shr
pop
ret
push
push
push
push
push
push
push
push
lea
push
push
call
int3
add
jl
pop
push
mov
add
in
lret
fwait
lret
ficoml
iret
add
lahf
idivl
add
js
add
mov
mov
push
add
jae
ret
test
mov
add
jecxz
add
jnp
add
xchg
loope
jecxz
jbe
add
mov
add
pop
push
mov
push
xor
pop
cmpl
jne
mov
jmp
push
shl
shl
pop
mov
and
xor
push
add
rol
pop
xor
push
push
call
mov
pop
fldl
lcall
cli
sarl
add
add
jmp
jo
pop
mov
int
add
mov
add
add
pushf
add
add
xlat
out
aad
test
out
add
ljmp
cltd
xchg
mov
mov
add
iret
push
add
cld
lea
pop
add
xor
dec
push
push
push
push
push
lea
push
push
call
add
jns
test
pop
in
mov
f2xm1
add
add
lret
add
mov
ja
ja
std
arpl
incb
out
add
jl
push
add
pop
add
jo
mov
add
add
out
in
add
add
data16
je
mov
pop
add
addb
int3
loopne
add
pusha
sbb
sub
push
lea
push
push
lea
push
push
lea
push
lea
push
call
lea
into
add
add
add
lahf
add
movsl
add
cltd
jmp
mov
nop
add
les
add
add
add
push
add
in
jle
jo
movsb
test
xchg
cltd
jae
pop
aad
push
add
lds
mov
pushf
aad
push
fadds
mov
subb
push
addb
cmpsb
xchg
mov
lea
pop
jmp
sub
pushl
push
push
push
call
mov
repnz
mov
imul
out
add
push
int3
mov
cld
xchg
add
mov
add
fcoml
add
lcall
flds
add
xchg
add
lods
fs
add
add
roll
out
shlb
mov
roll
add
mov
lea
pop
pop
sub
push
lea
push
push
call
xchg
add
sahf
add
aam
into
add
add
add
addb
pop
add
cmpsb
mov
add
jbe
add
add
add
pop
fildl
fildl
add
add
mov
sti
xchg
in
test
add
lock
jns
add
jl
mov
int3
lea
pop
cmp
jne
mov
lea
push
sub
pop
sub
push
sub
pop
mov
shr
add
push
add
sub
pop
sub
pushl
push
push
lea
push
push
push
lea
push
push
push
call
out
add
out
stc
mov
outsl
mov
add
data16
xchg
add
mov
add
test
mov
lret
mov
add
jbe
add
xchg
pop
add
add
push
xchg
add
add
mov
in
lret
add
add
out
jno
je
add
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
push
call
test
mov
mov
add
lods
pop
add
add
cli
mov
push
test
add
sahf
add
add
add
lcall
add
add
popl
push
mov
add
add
add
mov
out
loop
pop
ffreep
push
mov
enter
add
jno
in
jbe
rcl
cli
div
add
sarb
pop
shr
and
sub
push
push
lea
push
push
push
call
add
add
xchg
push
mov
add
add
clc
mov
pop
add
add
add
popa
add
add
add
testl
movb
add
add
add
cltd
in
add
insb
testb
add
push
xchg
lahf
add
lahf
add
loope
jo
loop
rolb
jno
add
add
sahf
out
add
add
int3
lea
pop
cmp
jne
leave
push
add
lea
pop
ret
push
push
inc
shr
sub
pop
mov
push
push
call
add
add
sarl
cwtl
filds
arpl
lcall
fwait
add
add
add
jl
mov
add
add
add
push
in
mov
loop
add
push
add
add
add
xchg
add
rolb
push
add
add
add
or
cld
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
popf
add
lea
add
pushf
loope
loopne
lock
fidivrl
push
add
add
movsl
mov
add
add
fldcw
add
cwtl
add
jmp
jne
add
out
icebp
pushf
push
ljmp
pushf
add
sahf
add
lret
mov
add
mov
std
push
cmpsl
mov
add
add
flds
add
add
add
push
out
rorl
pop
push
push
push
shr
sub
lea
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
roll
rolb
add
out
add
add
add
cmc
pop
loope
lock
imul
add
add
add
add
lret
mov
jns
mov
insb
pop
add
int3
add
push
mov
add
add
stos
jo
add
icebp
add
mov
hlt
add
add
loope
out
and
jmp
lods
jae
int3
lea
pop
mov
push
dec
ror
pop
lea
sub
push
sub
shl
pop
mov
shr
add
push
sub
pop
mov
add
push
shl
add
shr
pop
mov
push
push
push
push
call
enter
add
add
add
mov
gs
cwtl
add
mov
add
add
rolb
add
pop
jge
mov
push
cwtl
jo
add
add
add
cmc
addl
add
mov
movsb
std
add
add
add
add
pop
lods
test
out
pop
add
add
aad
addr16
add
add
imul
data16
jge
xor
push
not
pop
mov
push
push
push
push
lea
push
call
mov
loop
out
clc
jmp
stos
add
in
add
add
addl
mov
hlt
add
iret
add
add
add
add
clc
add
cmp
add
add
add
jo
add
mov
add
mov
add
add
shll
add
add
add
arpl
lret
lds
mov
into
jnp
mov
loop
mov
gs
mov
lea
pop
and
push
inc
not
rol
add
pop
call
push
lea
push
push
lea
push
push
push
lea
push
call
jo
pop
add
add
add
add
add
pop
scas
cmpsb
pusha
add
mov
add
incb
add
add
add
add
push
jne
cld
push
pusha
lods
lock
add
pusha
aad
add
movsl
outsl
cld
cmc
pushf
add
add
fstl
je
rorb
xchg
add
movsb
push
add
test
hlt
lea
pop
add
push
ror
not
inc
pop
cmp
je
push
push
push
lea
push
push
push
lea
push
call
pop
mov
push
mov
add
stos
les
add
ljmp
add
out
fcomi
add
jle
pusha
fldl
mov
out
mov
add
add
cmpsl
popf
add
add
add
jb
add
add
add
incb
scas
call
fsubl
lods
add
jmp
add
add
add
add
testb
lea
pop
add
push
lea
pop
cmpl
jne
push
inc
pop
xor
push
push
push
call
out
cld
add
stos
loope
push
pusha
jno
std
movb
add
fwait
lahf
add
insb
mov
in
int
add
fadd
push
mov
add
aam
mov
test
fsubrs
add
sti
pop
test
add
lret
mov
add
add
cwtl
pusha
add
jmp
add
in
call
push
mov
add
stos
clc
add
aam
bound
pop
pop
push
push
push
push
lea
push
push
lea
push
call
add
add
roll
addl
repnz
add
mov
lahf
loopne
xchg
lds
add
jb
jns
cmpsl
cwtl
add
gs
lahf
faddl
stos
fildll
pushf
test
stos
add
add
pop
add
mov
add
test
add
add
add
clc
push
movl
mov
add
add
clc
add
gs
lea
pop
pop
pop
push
pop
pop
leave
ret
push
pop
mov
push
sub
sub
pop
add
push
push
push
push
push
call
add
add
add
clc
add
add
clc
cmc
lcall
add
decb
addb
loopne
add
sahf
add
add
add
mov
jecxz
mov
add
add
rcrb
push
je
aad
add
add
add
jmp
pop
add
jmp
xchg
add
xchg
xorb
les
push
push
lea
push
push
push
push
push
push
lea
push
push
call
pop
add
clc
add
jb
add
nop
mov
mov
clc
pop
add
add
icebp
add
push
roll
add
mov
add
hlt
fisubrl
lds
push
add
hlt
xchg
pop
mov
xorb
std
add
out
mov
mov
add
pop
push
xchg
add
sti
add
mov
out
add
les
lea
pop
push
push
xor
pop
pop
push
push
call
push
lea
test
mov
mov
mov
add
add
xchg
add
add
add
add
add
add
scas
jae
add
cmc
xchg
add
scas
cmc
add
mov
sahf
leave
add
add
add
aad
imul
jecxz
mov
push
roll
mov
add
add
mov
mov
in
add
add
xchg
enter
leave
out
add
clc
fwait
mov
lea
pop
pop
push
xor
shl
not
pop
mov
push
push
add
pop
call
push
lea
push
push
lea
push
push
push
push
call
int
cld
loop
loop
mov
cld
clc
jno
js
push
add
add
movsb
repnz
icebp
mov
popl
add
mov
push
add
loope
push
lods
rcll
mov
cmc
test
add
mov
add
jnp
add
xchg
cli
add
pop
add
arpl
rolb
add
out
add
xchg
pop
mov
jnp
lods
jns
xchg
add
xchg
cmpb
sbb
xor
pop
push
push
push
push
push
push
push
push
call
pop
je
add
mov
pop
mov
hlt
xchg
add
add
sahf
out
add
lret
test
insb
add
add
movl
cld
add
add
mov
data16
addr16
loope
add
movsl
mov
add
add
add
mov
bound
mov
add
add
jecxz
add
add
cmpb
push
nop
mov
lea
pop
pop
pop
push
push
push
push
lea
push
push
push
call
add
filds
mov
loope
add
test
add
sar
pop
cltd
mov
add
add
data16
add
imul
jo
outsl
add
jp
loop
add
xchg
add
lahf
push
lock
fiaddl
lds
imul
iret
in
fiaddl
mov
movsb
mov
xchg
add
jp
data16
cwtl
add
aam
bound
pop
push
lea
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
scas
in
mov
add
into
jne
mov
mov
out
add
push
push
add
add
loopne
pop
stos
hlt
add
cmpsl
add
leave
pushf
ret
add
mov
out
add
mov
in
add
imul
add
add
mov
loope
int3
imul
add
jno
aam
lods
call
add
add
gs
add
add
fisttpl
pop
pop
push
push
push
push
lea
push
call
push
pop
out
ja
push
fadds
add
pop
mov
add
outsl
fildl
xchg
xchg
stos
push
lock
addb
fwait
add
iret
flds
fwait
add
add
mov
add
mov
jecxz
lret
add
add
std
add
addb
add
add
xchg
mov
add
insb
mov
mov
push
add
into
add
clc
mov
mov
lea
pop
leave
ret
push
sub
pop
push
mov
add
push
inc
lea
rol
pop
push
push
push
push
pop
push
mov
push
push
push
push
push
lea
push
lea
push
call
add
faddp
add
add
cmpsb
cli
int3
enter
mov
js
add
add
add
cli
jb
mov
leave
fldcw
cltd
loop
mov
mov
pusha
add
mov
sarl
loopne
jecxz
shlb
add
rcr
jns
jmp
add
xchg
push
fmull
pop
pop
push
sub
xor
rol
pop
lea
sub
mov
push
lea
sub
pop
shr
push
push
push
push
push
push
push
lea
push
call
sahf
jmp
out
add
cld
enter
jne
imul
roll
add
add
add
les
mov
cmpsb
mov
push
cwtl
jbe
popl
aad
std
add
add
push
cwtl
mov
pop
push
in
add
xchg
add
aam
add
arpl
pop
add
mov
push
push
call
mov
add
add
add
jbe
add
test
add
mov
add
add
add
mov
mov
js
cmpl
sub
fisubrl
mov
xlat
movsb
jno
add
movsl
data16
add
mov
add
into
add
outsl
mov
rcr
add
cmpsb
stos
jge
add
mov
lea
pop
add
push
push
push
push
push
push
push
call
add
mov
insb
add
test
sti
add
add
loop
std
clc
add
jmp
stos
into
mov
add
add
xchg
add
add
lds
std
add
imul
mull
call
mov
pop
fsubrl
push
int
fstps
add
fwait
rorb
data16
pop
pushl
push
not
pop
popl
mov
push
add
pop
add
xor
push
push
push
lea
push
push
call
test
call
add
add
push
sahf
jecxz
add
mov
add
mov
aam
add
add
mov
nop
out
jl
push
add
loopne
push
add
add
imulb
mov
add
test
cmpsl
pop
add
add
popf
jns
push
add
in
add
mov
add
mov
mov
aam
in
add
jl
mov
mov
lea
pop
lea
mov
add
push
add
add
shl
pop
xor
push
push
call
in
jmp
add
add
out
sarl
add
scas
add
loop
add
lods
fists
add
testb
add
fildl
push
scas
mov
add
mov
cld
shl
mov
movsl
add
mov
mov
mov
mov
repnz
fisubs
test
fbld
xlat
mov
int
add
cld
lea
pop
call
push
rol
sub
sub
pop
add
push
inc
pop
nop
push
rol
shr
pop
nop
cmp
je
push
push
push
push
push
call
subb
gs
outsl
xchg
lret
sbb
movsb
call
add
shrb
lea
scas
add
stos
add
add
lret
add
lock
add
popf
mov
sti
js
lock
jno
cmpsl
andb
add
loop
gs
mov
mov
les
nop
push
lea
pop
inc
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
iret
int
push
pop
add
int
jb
add
popa
add
mov
push
mov
add
push
add
enter
lods
mov
aam
add
add
add
pop
add
add
add
fsubrl
callw
test
std
pushf
jle
addb
add
add
jp
push
add
mov
lea
pop
nop
push
push
push
push
push
push
push
push
call
add
test
push
add
int3
enter
data16
add
iret
mov
add
roll
icebp
cld
add
stos
imul
add
je
add
add
jae
add
xchg
push
jge
in
jge
in
ficomps
sahf
add
add
in
xchg
out
add
addb
xchg
loopne
pop
pop
xchg
add
add
rolb
xchg
mov
lea
pop
nop
cmp
jb
xor
push
push
push
push
push
call
cli
fldenv
add
call
push
add
add
add
std
adc
imull
mov
fldt
std
add
add
jns
add
mov
add
outsl
add
add
jge
push
add
addb
fnstcw
xlat
cmpb
shlb
pop
xchg
enter
addr16
mov
scas
lret
in
add
outsl
out
lcall
adc
jmp
push
push
push
push
push
push
call
add
pop
cwtl
add
pop
push
add
add
add
jae
mov
add
jp
add
add
out
cmpsl
faddp
add
add
iret
lret
mov
out
ret
lods
add
add
icebp
add
pop
jmp
add
add
xchg
negb
fs
add
arpl
rcrl
mov
lea
pop
mov
add
push
push
push
push
push
lea
push
lea
push
call
add
les
add
popa
cli
int
cmpsl
loopne
notb
add
add
testb
push
add
add
add
add
test
add
add
enter
add
add
fdivs
add
add
sahf
add
add
mov
jno
lods
cmc
jmp
add
add
repnz
add
jae
add
add
testl
lea
pop
movzwl
push
push
lea
push
push
push
call
xchg
icebp
lods
push
out
add
lcall
add
std
jb
pop
add
hlt
roll
add
mov
popf
add
test
pop
add
mov
lret
lods
add
sti
andb
add
fbld
cwtl
jp
shlb
add
add
mov
pop
add
lds
add
add
jmp
add
mov
roll
in
mov
leave
mov
sti
add
rolb
add
leave
add
adc
mov
add
push
sub
not
rol
sub
pop
mov
push
push
push
push
lea
push
lea
push
call
add
rolb
add
xchg
repnz
cmc
les
fdivp
mov
ja
add
add
mov
add
xchg
les
add
mov
mov
fisubs
add
add
pop
add
jle
add
add
add
add
add
jmp
jno
add
add
mov
add
cmpsl
out
add
pop
add
hlt
lea
pop
xor
xor
shl
push
inc
dec
pop
xor
push
shl
shr
shr
pop
shl
push
sub
rol
sub
lea
pop
xor
push
push
lea
push
call
add
into
add
enter
add
add
add
add
add
mov
jmp
add
pop
xchg
fcmovbe
add
add
jp
add
gs
jae
ljmp
movsl
jae
mov
add
pop
add
add
mov
roll
in
add
into
subl
add
push
fildl
mov
lea
pop
shl
push
push
push
call
add
lret
add
mov
jno
add
add
out
jno
test
add
push
mov
je
movl
outsl
stos
add
lret
fdivrs
lods
in
jle
add
pop
add
popa
add
add
add
fldl
call
arpl
add
mov
outsl
addr16
mov
outsl
in
jp
jmp
mov
lea
pop
xor
push
add
add
pop
mov
push
add
pop
add
pop
pop
push
inc
shr
add
pop
pop
pop
push
xor
add
pop
leave
push
inc
sub
pop
ret
push
push
pop
mov
push
not
xor
pop
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
jne
mov
add
add
add
scas
add
push
lret
add
in
pop
sbbb
push
out
jl
add
imul
add
movsl
add
out
xchg
cmpsb
jbe
mov
add
push
add
add
mov
testb
ljmp
clc
hlt
add
out
mov
ljmp
scas
jns
lods
add
pop
push
push
rol
inc
pop
push
push
sub
add
pop
push
mov
mov
push
push
push
push
push
push
call
fdivrl
movb
add
add
mov
add
les
pop
loopne
add
add
mov
cwtl
loop
loop
stos
add
les
lcall
int
sti
add
subl
add
int3
add
cltd
add
add
xorb
push
pop
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
call
add
add
add
add
arpl
jbe
int
add
movsl
mov
push
aad
mov
pop
add
mov
mov
add
jl
scas
add
mov
add
jle
scas
add
add
add
mov
pusha
add
add
push
addr16
fwait
add
xchg
movsb
pop
imul
pop
movsb
mov
add
add
lock
mov
les
rorb
test
pop
add
mov
test
je
push
sub
add
pop
mov
push
xor
add
lea
pop
mov
mov
inc
push
sub
add
dec
pop
cmp
je
push
inc
pop
test
je
mov
push
dec
add
lea
sub
pop
inc
cmp
je
test
jne
push
push
push
push
call
add
cmpsl
out
add
add
addl
insb
mov
shll
mov
mov
in
mov
add
mov
add
mov
jle
add
add
jp
xchg
add
imul
add
fst
jmp
add
lret
add
add
add
into
add
add
fst
mov
push
mov
mov
lea
pop
xor
push
sub
xor
sub
pop
pop
pop
push
sub
add
add
pop
pop
pop
leave
push
pop
ret
push
dec
sub
pop
mov
push
rol
rol
pop
inc
push
lea
add
add
pop
cmp
jne
lea
push
push
push
call
add
add
out
mov
add
lock
lcall
cmc
mov
add
add
rcrl
push
add
stos
hlt
add
js
add
fs
stos
movsl
cld
ja
pushf
add
fmull
mov
popa
mov
imul
enter
mov
xchg
mov
lea
pop
mov
test
je
push
lea
push
push
push
push
push
push
push
push
call
lahf
pop
loopne
add
jmp
add
xchg
js
fdivp
add
ljmp
add
mov
add
mov
lods
push
add
add
pop
push
repnz
pop
mov
lds
add
add
int3
add
jmp
add
cmpsl
roll
jno
in
add
xchg
imul
push
add
addr16
mov
push
push
call
stos
rolb
mov
push
lret
add
mov
ljmp
iret
aad
mov
add
add
in
enter
add
add
lods
jmp
rcll
loopne
push
out
cli
add
add
stos
add
add
add
jno
fiaddl
popa
add
test
jmp
add
bnd
enter
lret
add
mov
lea
pop
add
cmp
jne
mov
push
add
sub
ror
pop
test
je
push
push
lea
push
lea
push
push
lea
push
push
push
call
pop
out
fildl
add
add
ljmp
jae
add
nop
add
sub
xchg
add
add
int3
add
stc
add
add
mov
bound
iret
add
add
add
hlt
add
loop
shlb
add
bound
popf
out
cmc
pop
ret
add
stos
jnp
test
add
jnp
scas
add
add
data16
lcall
cld
lea
pop
mov
add
cmp
je
push
lea
push
push
push
push
call
fldl
pushf
filds
filds
add
mov
mov
add
add
out
add
add
mov
in
mov
add
mov
add
add
out
add
lahf
mov
cli
pop
mov
lahf
add
push
iret
sbbb
add
add
rolb
out
mov
lea
pop
jmp
xor
pop
push
push
push
push
push
call
mov
cltd
mov
scas
push
shr
outsl
jo
iret
pop
add
out
pushf
add
push
pop
jno
cmpsl
xchg
lds
mov
lods
mov
add
pop
add
mov
add
add
jno
mov
add
jl
cmpsb
test
add
call
add
mov
push
jbe
add
les
test
pop
add
mov
fxtract
add
push
mov
lea
pop
pop
push
inc
shl
pop
pop
push
sub
sub
pop
pop
push
push
push
push
push
push
push
call
ja
enter
add
pop
arpl
add
add
sahf
add
add
bound
xchg
add
add
repnz
addr16
add
cltd
jmp
add
or
mov
add
add
add
add
add
bound
mov
add
out
imul
jp
push
ret
push
lock
jp
stos
add
add
mov
lea
pop
leave
push
rol
ror
add
lea
pop
ret
lea
pop
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
arpl
stos
sti
add
mov
add
jb
pop
mov
ficomps
aam
fidivrs
out
add
flds
clc
add
add
into
andl
ffree
mov
lahf
add
cmpsb
jne
add
enter
sahf
sti
out
add
jbe
movsb
rolb
add
add
mov
add
lods
mov
push
mov
cmpsb
add
mov
add
add
testl
push
push
push
push
push
push
call
add
xchg
add
neg
add
jmp
stos
mov
test
addl
add
add
fs
pop
add
add
add
push
addl
in
in
mov
add
mov
add
xchg
out
add
aad
add
fadds
cld
ret
jbe
ja
fwait
ret
pop
mov
iret
add
lods
add
mov
scas
lret
add
arpl
into
lods
mov
lea
pop
pop
push
shr
xor
pop
pop
push
xor
pop
leave
push
push
push
push
call
xchg
cli
jo
add
lods
add
pop
int
faddl
jmp
pop
mov
filds
mov
insb
repnz
imul
clc
out
lds
mov
push
jbe
add
mov
jle
add
add
in
outsl
in
lahf
aam
add
add
add
mov
mov
mov
imul
add
jb
add
pop
ret
mov
push
inc
ror
add
pop
pop
push
push
push
push
push
push
push
call
movsb
aam
fmuls
int3
out
int3
flds
in
rcrb
movl
add
add
pop
roll
xchg
add
pushf
hlt
popf
add
mov
mov
add
in
push
mov
add
test
fsubrs
cltd
add
fcmovnbe
bound
add
cwtl
add
add
mov
add
mov
push
mov
lea
pop
pop
pop
push
push
push
lea
push
push
push
lea
push
call
aad
push
add
ret
xchg
shr
add
jmp
icebp
pop
add
add
add
add
push
data16
fcmove
fmul
loopne
addr16
in
test
div
sti
cld
lds
movb
add
loope
loop
filds
scas
test
rolb
clc
lret
add
add
add
std
mov
lea
pop
pop
leave
push
ror
xor
dec
xor
pop
ret
rol
push
push
lea
push
push
lea
push
push
call
rclb
in
push
pop
mov
pusha
add
push
out
add
imul
rclb
mov
aam
mov
pop
add
add
mov
add
mov
push
jle
jge
add
add
mov
push
add
push
pop
imul
add
push
jecxz
pop
add
lcall
mov
pop
add
add
cld
mov
lea
pop
rol
xor
inc
push
push
call
push
xchg
add
add
add
repnz
sar
add
out
pop
fadds
add
repnz
lahf
add
add
movsl
mov
add
jge
mov
mov
imul
add
mov
cwtl
data16
ja
jecxz
pop
test
addr16
stos
mov
add
add
add
add
roll
mov
lea
pop
cmpb
jne
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
push
mov
sti
out
mov
sti
movsb
loope
sti
add
lods
mov
sti
movsb
sub
sti
in
mov
add
jne
sbb
into
push
xchg
xchg
cwtl
into
test
idivb
sti
push
cmp
push
sbb
scas
loope
cmp
aaa
xchg
pop
leave
push
inc
xchg
mov
or
enter
fsubrl
inc
lcall
aad
daa
repnz
or
xor
dec
sub
cmp
popa
je
test
int
mov
cmc
xchg
lret
sub
push
xor
mov
and
or
xchg
xchg
mov
ljmp
mov
sbbl
je
pusha
jno
push
jbe
add
cmc
icebp
ret
dec
icebp
sahf
add
cli
mov
xor
xor
loop
or
aas
cmpsl
jbe
daa
insb
loope
test
lods
xor
xor
inc
mov
lock
dec
push
xchg
push
mov
and
push
outsl
adc
out
mov
in
mov
sub
in
lcall
ss
mov
cmp
pop
fimuls
mov
fwait
xchg
rcrl
test
pop
lea
sarb
xor
inc
pop
lods
cmp
and
mov
pop
inc
mov
xchg
jge
sbb
jns
cwtl
in
xchg
xor
pop
int3
jg
outsb
xchg
fidivrs
or
mov
or
insl
and
call
daa
das
inc
arpl
sti
dec
cmp
push
mov
jno
sub
mov
mov
test
pushf
sbb
pop
sarl
jg
mov
enter
test
mov
jg
movsl
cmc
gs
xchg
mov
fstpt
and
pop
pop
testb
xchg
xchg
sub
xlat
insl
inc
xor
or
insl
jo
xor
pop
xor
aas
xchg
int
cmp
sbb
test
jno
xlat
sub
cmc
stos
ret
mov
fcmovb
imul
testl
xchg
dec
pushf
fstps
mov
xor
xchg
jns
pop
aam
cmpsl
stos
das
push
sti
neg
dec
dec
sub
pop
outsb
sub
cs
insb
loopne
notl
aam
lock
pop
in
mov
testb
loopne
jae
or
mov
fs
ficoms
test
xchg
push
fistpll
xchg
mov
lret
fwait
scas
pop
js
sbb
jbe
lahf
xor
mov
mov
stos
cmp
jp
stos
and
mov
pop
mov
loop
or
adc
jae
lret
jb
inc
int
std
out
sti
sub
ss
mov
cmp
push
sbb
pop
lods
dec
or
pop
stos
loope
test
pop
idiv
addr16
fs
pushf
push
in
inc
in
xchg
add
and
insb
inc
jns
xor
scas
fnstsw
sahf
dec
sbb
test
adc
out
mov
or
mov
nop
push
mov
jg
mov
ret
xor
add
pop
cmpsb
icebp
mov
in
mov
xlat
ja
mov
enter
cmpsb
lock
push
mov
jg
sbb
outsb
notl
dec
cmp
rcr
jle
push
jp
out
lods
sbb
in
flds
inc
mov
add
push
daa
rcll
or
pushf
mov
out
cwtl
out
jbe
push
mov
xor
sbb
loope
dec
jp
roll
dec
jp
rcr
xchg
inc
lods
sbb
out
push
jb
lods
cli
outsb
imul
movsl
or
cs
lret
mov
adc
dec
int3
xchg
stos
rcl
add
popf
rorb
mov
outsb
inc
add
lret
aaa
mov
push
mov
movsb
je
jmp
mov
outsb
mov
ss
cmpsb
test
outsl
pop
mov
mov
cli
lods
pop
jae
test
mov
neg
dec
add
andb
jbe
hlt
nop
in
jo
mov
in
dec
fwait
inc
xor
stos
in
lods
push
push
push
inc
shll
bound
inc
leave
fstpt
test
ret
add
cmpb
das
out
sbb
lret
sub
push
pop
fmuls
mov
mov
mov
dec
push
sub
or
insb
out
push
enter
in
pusha
inc
mov
movntps
repz
test
add
nop
pop
movl
insl
mov
mov
stc
and
add
xchg
xchg
jg
mov
inc
push
call
out
add
cmpl
stos
cmpsl
xchg
pop
sub
ret
cmp
filds
stos
js
inc
hlt
gs
push
xchg
cmp
dec
mov
int
cwtl
lret
add
setnp
jne
mov
rcrl
ja
xor
or
or
pusha
inc
push
int
lods
call
repz
stc
pushl
fwait
addr16
sti
cmp
cmpsb
adc
fistpl
xor
inc
or
mov
ret
and
inc
xorb
sub
push
shrb
jo
cli
mov
mov
jp
outsb
movsl
insb
or
ret
aam
movsb
bound
stos
pop
loop
std
pushf
movsb
cmp
repz
dec
out
sub
adc
inc
fnstenv
outsb
jno
cli
xor
aad
lahf
es
cltd
inc
orb
ret
imul
in
cs
sbb
lret
push
or
cmpsl
pop
cmpsb
cmp
add
mov
push
out
push
loop
push
cmp
fdivrs
and
push
or
add
test
jle
inc
movsl
imul
ds
rcrl
insb
lods
sahf
sti
push
xor
stos
push
xchg
mov
ret
sbb
push
mov
jno
inc
xchg
jg
add
add
inc
test
xchg
cmp
cmp
cmp
testb
lret
push
rclb
mov
sub
cmp
sbb
fiadds
rcr
and
dec
and
insl
insl
xor
xlat
sbbb
str
mov
sub
orl
or
and
cmp
ljmp
loopne
xor
add
call
jmp
adc
es
dec
das
mov
jmp
loope
jne
push
cltd
xlat
ret
imul
fmuls
mov
push
sbb
inc
fidivs
or
add
in
pop
mov
adc
jno
pop
adc
adc
icebp
pop
fstl
in
in
xor
pop
adc
lret
dec
dec
test
out
adc
int
mov
test
and
ret
std
mov
mov
push
out
jmp
xchg
jecxz
push
frstor
push
lahf
sub
in
xor
or
mov
xchg
movsl
dec
xor
sub
dec
cmp
push
sbb
jnp
adc
xchg
mov
cmp
aaa
imulb
inc
sbb
add
pop
pop
jl
push
cmpsl
sub
shll
xchg
add
mov
mov
push
inc
xchg
sbb
aas
jbe
add
cmpsl
or
test
jl
xchg
mov
xchg
jbe
cmp
cmp
outsl
jl
or
jmp
adc
pop
sahf
lods
xor
xchg
bound
push
jmp
loope
addr16
push
xor
sbb
mov
fcmovne
mov
xor
jbe
adc
jnp
movsl
lcall
aaa
pusha
mov
mov
add
scas
scas
xchg
xchg
lcall
or
adc
pop
repz
movsb
cwtl
inc
in
lret
adc
push
xacquire
jne
popa
ja
shl
push
pop
andb
imul
cmp
xchg
dec
sti
cmp
cmp
sub
es
pcmpgtw
jb
stc
inc
sub
andb
mov
loope
int3
orl
aaa
push
cmp
movsb
out
and
outsl
loopne
les
push
rorl
xchg
in
nop
push
imul
jl
sbb
mov
andps
push
xchg
mov
dec
rorl
xchg
pop
sbb
subb
dec
push
andl
dec
sbb
shlb
int3
mov
imul
jl
punpckldq
in
adc
adc
enter
push
rcll
rcl
rolb
rcl
sub
loop
push
add
rcll
dec
stos
mov
and
or
test
push
mov
cmp
push
in
sti
imull
and
sub
repnz
push
fucomi
sti
insl
xchg
jg
sub
idivl
ss
sub
and
negb
adc
lret
adc
push
mov
es
clc
sub
cwtl
les
les
bound
dec
sub
pop
hlt
mov
or
ss
adc
push
scas
fcompl
mov
lods
ljmp
dec
jnp
pop
fwait
jge
pop
or
or
adc
sbb
push
add
loop
adc
jnp
scas
and
inc
test
orl
jp
inc
lods
jns
out
add
xor
fsubrs
pop
xor
lcall
mul
in
mov
mov
jmp
inc
gs
inc
daa
notb
dec
sar
pop
repnz
sub
cmp
into
mov
xchg
enter
xchg
stos
add
es
pop
ds
push
imul
and
out
pushf
pop
xor
push
repnz
popf
dec
pop
push
and
div
push
aas
hlt
test
adc
pushf
dec
addr16
repz
out
pop
ds
jle
inc
xchg
sub
ljmp
sub
sub
cltd
arpl
push
pop
mov
ret
mov
shll
jmp
sahf
ds
lods
mov
cmp
popl
or
xorb
sar
loop
js
mov
in
sbb
xor
mov
xchg
or
mov
loope
mov
or
dec
mov
into
fldt
mov
pop
pop
and
mull
out
ret
lods
cmp
inc
dec
sbb
pop
mov
push
ret
dec
stos
fldcw
dec
lods
push
outsb
jmp
fdivl
imul
in
roll
popf
cmpsl
imul
stos
je
adc
push
out
inc
fstl
mov
xchg
js
movb
push
or
movsl
rorl
cmpsb
loopne
ficompl
push
mov
cmc
cmp
clc
cmpsl
repz
je
lret
or
bound
in
sbb
les
xchg
sub
in
xor
adc
adc
test
loop
inc
jbe
inc
cmp
decb
cs
inc
adc
jbe
test
sbb
cmc
ret
cwtl
sarl
pusha
lret
inc
jnp
lea
decb
stc
and
jge
dec
or
sub
pushf
popf
rorb
cmc
xor
fists
cmp
cltd
xchg
push
int
sub
aas
jmp
inc
sub
and
mov
stos
cmp
adc
popa
dec
fisttpl
push
daa
in
or
jmp
pop
fidivrl
push
imul
mov
cmp
inc
xchg
shrb
iret
lret
xor
sbb
or
inc
rolb
pusha
push
ficoms
test
xlat
cwtl
cld
mov
pop
hlt
dec
js
mull
mov
test
enter
shlb
lret
jg
adc
subl
cmp
mov
in
loop
jbe
add
push
aas
fdivrl
cmp
clc
and
adc
pop
daa
popf
das
xor
fdivrs
lret
scas
pushf
mov
stos
mov
and
gs
jmp
dec
repnz
push
aas
dec
ss
cli
dec
push
add
fidivrs
fmulp
xchg
roll
out
int
fsubrl
cli
inc
repnz
cmp
xor
and
jle
mov
repz
mov
faddl
aas
test
pop
outsl
ficompl
movsl
push
add
mov
xchg
dec
int3
int3
imul
cmc
add
aam
xor
arpl
fwait
add
call
rcl
push
test
xor
pop
and
popf
stos
repz
test
and
pop
xchg
outsb
nop
and
inc
mov
clc
shrl
xor
pop
pop
and
ret
dec
and
and
cmp
shl
mov
jge
mov
mov
inc
loope
mov
popf
mov
sbb
xor
scas
outsb
sub
ljmp
pop
dec
pop
jg
ret
sub
or
test
idivl
jmp
jne
leave
lds
and
push
int3
fsts
dec
cmc
or
dec
add
mov
jb
inc
sar
or
daa
pop
mov
sbb
push
sbb
or
mov
lods
cmp
in
or
jb
mov
in
mov
and
insl
aas
and
dec
add
jecxz
adc
inc
movaps
les
jmp
clc
dec
inc
iret
adc
pop
or
bound
je
dec
xor
stc
mov
mov
outsb
jne
jbe
fidivs
pop
and
jl
add
xchg
dec
push
in
dec
dec
and
jle
in
sbb
rorb
jmp
and
jnp
lret
fldcw
stc
stos
jmp
sbb
inc
pop
pop
jl
or
xor
jae
xchg
pop
jmp
push
jb
adc
pop
sub
cmpb
xchg
sti
test
or
orb
pop
pop
mov
int
sbb
or
cltd
data16
pop
stos
pop
mov
aam
add
testl
mov
enter
pop
lods
sbb
and
mov
mov
jns
outsb
xchg
or
aaa
imul
xchg
cmpsl
out
pop
inc
out
push
andb
dec
in
cmp
or
cld
cmp
sbb
lds
cmp
andb
mov
xchg
je
in
and
pop
push
call
rorl
outsb
mov
cmp
je
inc
repnz
adc
pop
test
imul
outsl
shrb
out
fs
and
imul
roll
test
adc
scas
sbb
fsubl
and
out
data16
sub
and
mov
clc
add
jns
dec
mov
cmp
mov
or
inc
add
test
jmp
scas
rol
and
sbb
fcoml
mov
cmc
fisttps
cmp
clc
mov
jmp
push
mov
je
push
shlb
cli
lods
pop
lret
pop
js
push
adc
xchg
push
xchg
mov
dec
lret
mov
cmp
jmp
sub
mov
outsb
lret
dec
mov
sbbl
insb
mov
out
mov
jae
push
add
clc
repz
test
cli
push
scas
addb
inc
push
fsts
out
fildl
xchg
ficomps
xor
frstor
lcall
ljmp
push
sub
rolb
xchg
mov
setbe
push
adc
cld
push
jo
ret
xor
inc
cmp
pop
sub
xchg
loopne
mov
ret
jmp
and
test
adc
sbb
lahf
push
adc
loope
push
scas
push
ds
lcall
cld
call
into
pop
aas
mov
inc
cmp
cltd
daa
rclb
jl
sub
flds
sbb
cmpsb
pop
stos
adc
test
push
mov
inc
out
in
mov
pop
movb
popf
into
xchg
cmp
push
daa
ret
pop
sahf
cltd
outsb
aam
pop
hlt
mov
sahf
lods
mov
dec
imul
aad
scas
dec
push
sbbb
lcall
and
push
inc
add
icebp
jle
and
rcr
in
jne
push
or
out
shlb
fidivrs
iret
jge
sbb
xchg
sbb
mov
test
cmpsb
and
or
push
std
sbb
lret
push
push
enter
sbb
lret
test
idivb
push
sbb
loope
xor
test
sarl
out
std
mov
ja
dec
dec
ret
scas
adc
mov
mov
and
data16
or
mov
push
jbe
aaa
jnp
xchg
out
scas
shlb
sub
mov
pop
test
test
mov
mov
ljmp
dec
repnz
std
insb
mov
sbbb
lahf
mov
or
sub
jge
lods
xor
cmp
fwait
sub
cltd
mov
imul
sbb
sub
mov
fdivs
or
xchg
arpl
jns
aad
mov
push
and
mov
pushf
xor
mov
pushf
leave
inc
and
mov
cmp
push
and
xchg
lahf
lcall
neg
popf
pop
gs
sbb
jge
xchg
push
popf
sbb
and
mov
mov
sar
movsl
mov
fmull
lods
mov
scas
lahf
adcl
sti
xchg
loope
arpl
test
int3
in
cmc
jl
aas
hlt
lods
shrb
andl
mov
out
mov
test
mov
mov
inc
jne
aas
fwait
jmp
cmp
stos
hlt
sub
cmpsb
test
popa
imul
dec
add
imul
push
hlt
pop
icebp
xor
fwait
shrb
das
xorb
cmc
notl
lea
or
inc
scas
pop
xor
inc
adc
aam
mov
movsb
out
jecxz
cmpsl
das
popa
push
dec
xchg
rcl
insl
shrl
pop
les
stos
hlt
inc
popl
mov
scas
or
xorl
in
push
mov
repnz
fcomp
enter
jae
adc
in
jnp
pop
jns
xor
clc
jae
scas
xchg
jp
mov
jl
decl
out
ljmp
les
mov
xlat
push
xlat
cmpsl
push
sbb
ret
pop
ss
fnstenv
jmp
jae
pop
iret
and
ret
add
add
jo
sub
rdmsr
add
out
or
sbb
adc
sti
jb
jb,pt
shl
nop
popa
shlb
in
aaa
mov
sbb
les
arpl
dec
cld
mov
or
cmp
adc
movsb
jb
inc
fldcw
ror
je
xor
insl
mov
adc
xchg
loope
mov
pop
mov
xor
es
imul
pop
mov
jmp
dec
loope
lret
xchg
mov
add
int
popf
arpl
dec
push
jo
push
repnz
rcll
gs
jge
dec
jmp
dec
xchg
jns
stos
xchg
and
xlat
jl
cld
push
orb
dec
mov
mov
es
mov
sbb
imul
mov
push
cltd
nop
inc
cmp
jnp
insb
ret
in
notb
fdivl
in
jp
inc
scas
dec
ja
add
lock
enter
arpl
nop
pop
or
dec
mov
ret
adc
arpl
fsts
mov
pop
movsl
adc
xchg
ds
test
mov
pusha
inc
test
sbb
aam
sbb
mov
jns
sbb
sub
jge
ficoml
mov
pop
inc
arpl
cld
dec
jmp
imul
xchg
xchg
roll
cld
daa
xchg
add
push
mov
cltd
stos
or
jae
mov
rcll
sbb
dec
out
jmp
cmp
arpl
pop
push
add
std
adc
cmp
call
lret
cmp
adc
notb
icebp
push
je
popf
push
loopne
in
mov
inc
icebp
arpl
dec
and
lods
cmpsb
xor
cmp
stc
or
movsl
push
mov
dec
popf
mov
jno
mov
or
jbe
cmp
ds
add
fildl
xor
and
push
adc
scas
das
lea
xchg
add
mov
xchg
ret
addl
or
adc
mov
std
xor
pop
lahf
dec
pop
fidivl
fadd
jg
addb
and
cmc
scas
lahf
std
fimull
sub
leave
lcall
adc
pushf
jo
in
out
pop
out
insb
xchg
xchg
and
pop
jmp
outsb
jne
jae
test
outsb
icebp
mov
jl
xchg
add
dec
inc
and
push
movsl
pop
test
add
mov
lahf
pusha
and
repz
and
push
mov
cmpsl
and
iret
pop
add
stos
dec
fs
pop
and
jmp
div
imul
pop
sub
mov
or
add
je
dec
insb
sbb
das
cmp
jns
xchg
or
out
and
out
je
js
ret
test
mov
cmp
xchg
hlt
cmp
or
in
add
cwtl
ret
call
dec
mov
test
fistpl
mov
sahf
loop
mov
xchg
mov
imul
insl
push
je
and
sbb
loopne
jge
push
aam
movsl
in
nop
mov
sbb
dec
cmp
lods
add
rol
in
cs
imul
data16
scas
insl
lcall
xlat
das
push
xchg
cmc
cmpsb
cwtl
popf
mov
sub
lcall
pop
mov
and
xchg
jmp
in
data16
icebp
lods
jle
in
sti
or
repnz
or
add
ret
pushf
cmpl
data16
push
gs
jnp
dec
roll
jnp
sub
cmp
lds
fildll
push
mov
bound
push
lahf
mov
out
daa
xchg
popl
cmp
inc
cmc
movsb
jne
mov
mov
mov
mov
xlat
es
inc
dec
push
pop
imul
dec
mov
adc
push
jb
and
or
sbb
cld
cmp
loope
enter
fcomi
int3
or
cmpsb
lock
cmpsb
pop
or
test
add
je
filds
jge
fstpt
aaa
comiss
rorb
test
cmp
ss
pusha
xor
pop
sub
addl
jp
ror
fnstsw
daa
sti
fnstsw
lret
xchg
jle
cld
dec
and
pop
cwtl
fadds
es
cs
push
fldenv
imul
push
out
movsb
les
popf
ja
jl
xchg
popa
pop
rorb
xor
ret
mov
lods
sub
sub
mov
fs
add
dec
dec
lcall
fwait
lahf
rol
mov
adc
mov
shll
js
sub
xor
mov
test
test
and
add
inc
pop
xchg
popf
sub
and
sub
add
es
lds
pop
cmp
xchg
lret
adc
adc
jmp
dec
jle
xor
aam
and
in
test
dec
shr
stos
pop
pop
sub
pop
fisubrl
cmp
fs
xor
jg
outsl
popa
xor
cmp
add
pop
mov
and
sbb
jp,pn
lret
dec
popa
int3
push
mov
in
sub
push
shrb
mov
add
stos
icebp
jno
mov
imul
addb
incb
imul
or
loopne
bound
mov
sub
sti
pop
xchg
pop
xchg
mov
aam
xor
jle
push
cwtl
cmc
lods
cmp
mov
jnp
rolb
lahf
scas
std
popf
inc
call
mov
sbb
and
mov
push
insl
dec
dec
mov
aad
cmp
mov
pop
inc
hlt
test
lahf
jl
fimuls
inc
lock
or
sbb
pop
push
jne
fstps
fs
pop
jecxz
cmp
lods
push
and
mov
inc
fwait
loopne
jb
imul
mov
cwtl
adc
mov
out
std
outsb
fcomps
repnz
dec
inc
jmp
ljmp
add
shlb
imul
and
mov
lahf
rcr
add
popf
rcl
out
xor
inc
xorb
xor
rolb
js
scas
jecxz
imul
lods
mov
aam
and
mov
out
push
int3
stos
xchg
jns
sarl
out
jns
mov
mov
inc
fwait
test
movsb
lods
bts
dec
je
repnz
movsl
mov
add
popa
fxch
xchg
imul
xchg
xchg
sbb
stos
lea
das
jbe
stos
sbb
stc
fucom
xor
cmp
ljmp
push
xchg
jmp
sbb
ljmp
jne
mov
push
xor
jb
lret
mov
cmpsb
pop
pop
xlat
xchg
pop
sub
fsubp
lret
fcmove
sub
xchg
add
push
push
jns
fmull
push
push
insl
test
sbb
sbb
fwait
sub
pop
lcall
stc
mov
push
xor
loop
cmp
lret
sub
inc
outsb
movsl
cld
mov
cmp
div
sti
cmp
fs
mov
pop
shlb
pop
and
adc
outsb
rol
ja
test
movsl
mov
mov
sahf
sbb
jle,pn
mov
mov
pop
dec
movsb
mov
je
int3
ja
lahf
stc
aas
mov
fsubrl
push
fs
push
lahf
jge
mov
push
repz
mov
pop
mov
scas
sbb
xor
or
pop
sahf
stos
jmp
lret
xor
adc
lahf
or
jns
insl
fildl
rcrb
push
fs
jb
scas
mov
sbb
movsl
xchg
mov
and
imul
subb
jmp
mov
dec
or
inc
xor
dec
mov
jae
lret
jmp
push
push
fmuls
adc
imul
add
xchg
scas
divb
jo
mov
lret
xor
stc
ss
sahf
lret
jo
mov
dec
daa
add
shl
pop
adc
inc
sahf
cs
inc
xor
cmpsl
sub
cld
enter
icebp
bswap
adc
sbb
fisttpll
mov
xor
movsl
addb
jae
lcall
arpl
mov
inc
add
out
fcmovnbe
subl
mov
xor
pop
fisubl
pusha
test
hlt
into
je
pop
push
enter
jmp
cli
dec
dec
pop
ror
nop
fnsave
shr
xor
mov
roll
add
idivl
xchg
pop
addr16
punpckhwd
cld
cmp
xchg
or
ss
hlt
dec
add
mov
imul
xchg
push
push
and
loopne
jnp
repnz
int3
das
loope
xlat
gs
xor
xchg
or
push
mov
sbb
cmc
xrelease
cwtl
cwtl
rcll
and
or
jnp
lret
rolb
lock
push
mov
and
les
or
dec
or
mov
fucomp
mov
jnp
or
sbb
mov
adc
shlb
das
cmp
fwait
leave
adcl
sbb
adcl
scas
repz
inc
push
movsb
dec
cmp
push
dec
cs
inc
subb
jecxz
xlat
mov
inc
addb
inc
scas
frstor
cmpsl
repnz
and
cld
cs
add
fs
mov
add
test
sub
into
pushf
fld
jmp
push
test
push
mov
cmp
je
bnd
adc
in
scas
insl
dec
stos
js
mov
and
into
stos
pop
int3
shl
cmp
cmpsb
and
dec
jns
jmp
call
jp
mov
int
sbb
std
xchg
mov
adc
sbb
fwait
push
and
lods
movsb
test
xor
ret
xchg
int3
pop
and
adc
cmpsb
pop
jle
ja
xchg
fisubrs
pop
cmp
mov
cltd
sbb
fiaddl
movsl
fcmovu
divl
lret
inc
cmc
addr16
outsl
ret
push
lret
dec
jp
xor
pop
cld
imul
insl
int
ret
inc
sub
jecxz
fdivl
xor
lock
pop
loopne
call
xchg
addb
add
pop
lcall
inc
jecxz
xchg
mov
cmp
mov
pusha
stos
mov
cmp
mov
push
xchg
pop
pop
adc
popa
pop
out
shr
push
cmpsb
add
bound
jne
insb
insb
lcall
pop
leave
push
inc
inc
or
call
inc
or
popf
rcl
aam
popa
std
mov
sub
mov
fiadds
sti
pop
lods
fs
or
push
dec
sbb
das
xor
notb
mov
mov
iret
dec
psubsw
push
loope
mov
xchg
sbb
out
test
xchg
xor
cs
push
aaa
leave
stos
das
xchg
aas
pop
stos
cmpsl
cs
lock
ljmp
cltd
or
fcoms
shrb
pushl
pop
mov
lock
adc
pop
shl
outsb
push
lret
adc
lock
xlat
scas
cli
mov
ja
pop
pop
in
or
pop
and
jmp
adc
jb
push
orb
das
mov
or
addb
sbb
mov
arpl
ljmp
or
or
xchg
mov
cmc
adc
test
mov
sahf
adc
xchg
mov
xlat
dec
pop
lea
mov
pop
adc
test
aas
mov
stos
orl
add
xchg
fwait
movsb
pop
xchg
ds
jne
lods
or
mov
neg
pop
mov
mov
lods
xchg
clc
mov
int3
cmp
push
adc
test
inc
cmp
cmp
inc
repnz
nop
icebp
pushf
jmp
xor
loop
loope
adc
dec
lods
fs
notb
pop
push
mov
xor
push
movsb
cmp
push
sub
push
and
out
adc
cmp
leave
dec
movsb
add
sub
sub
mov
mov
sbb
sub
out
imul
mov
jns
cmp
ss
mov
ljmp
ljmp
jns
movsl
push
jmp
mov
in
pop
imul
pop
iret
mov
scas
sub
xchg
ljmp
add
sub
jo
test
jno
outsb
fiaddl
cwtl
movaps
adcl
mov
aas
pop
loope
cmpsl
loopne
jg
push
xlat
pop
mov
cmc
sub
scas
pop
xchg
push
jg
cmpb
lock
stos
jbe
ss
hlt
cmp
ljmp
sbb
into
sbb
mov
outsb
xor
nop
fiaddl
int
call
mov
xor
shlb
fidivl
mov
push
loopne
fwait
ret
imul
dec
and
xor
outsl
test
fsubs
fadds
cli
mov
out
jno
adc
sbb
mov
repz
cli
jmp
dec
push
in
incb
jae
cmp
jle
cmp
lods
loop
inc
push
mov
add
ja
lock
jge
sahf
arpl
push
jmp
xchg
sub
jb
hlt
imul
inc
int
sbbb
outsb
aaa
inc
mov
jne
scas
rol
hlt
xor
mov
xor
pop
mov
mov
sub
lcall
popa
push
or
call
push
mov
and
cmpsl
gs
add
dec
sub
dec
xchg
fildll
test
dec
cmpsl
outsl
mov
mov
push
mov
lds
ret
xchg
int3
enter
sbb
mov
push
push
lds
sub
xchg
inc
nop
rcrl
mov
out
stos
enter
popa
pop
test
movsl
lds
mov
gs
imul
scas
inc
in
cmpb
mov
daa
sbb
loop
xchg
incl
mov
mov
fcoml
xchg
sub
lretw
mov
mov
adc
add
push
aaa
rorl
cltd
and
lds
sub
mov
push
adc
int
cmp
mov
aad
ret
aaa
loope
sub
movsb
jle
and
adc
pop
pusha
push
loop
xchg
out
dec
xchg
push
push
jo
add
in
jne
jl
dec
xor
sbb
andb
ss
fs
leave
into
pop
jl
aam
ja
xchg
cmp
insl
xor
xor
xor
insl
pop
add
shll
mov
cmp
iret
dec
adc
lods
iret
mov
xor
les
adc
rcrb
or
add
punpcklbw
sub
xor
leave
jae
jb
sub
hlt
jg
negb
mov
jne
mov
pop
sbb
sahf
lcall
mov
nop
inc
jge
xor
adc
pusha
sub
out
mov
and
rclb
fldt
mov
cs
jle
lret
xor
mov
pop
push
nop
mov
sahf
sti
pop
out
int
pop
mov
loope
imul
jns
lds
mov
or
outsl
loope
inc
push
mov
popa
inc
cmpl
or
imull
fnstcw
ljmp
test
push
add
mov
cwtl
xchg
je
imul
test
mov
jl
setge
or
push
jp
and
andb
mov
ficoml
aas
push
jg
xchg
xor
fwait
mov
andl
ret
mov
std
adc
ficompl
divb
test
mov
add
clc
sub
xchg
iret
daa
mov
jge
xor
push
pop
icebp
adc
xlat
daa
pop
filds
fadds
test
inc
test
les
pushf
sub
mov
fsubs
in
jge
or
jo
xor
outsb
ret
cmp
cmc
nop
xchg
jmp
and
and
mov
inc
sub
push
sub
sbb
xor
mov
fs
xor
push
cmp
aas
les
lret
jb
lds
jle
jl
adc
ds
jl
sbb
push
bnd
arpl
movsb
aas
jp
stos
outsl
jo
dec
test
leave
mov
jecxz
sbb
fldcw
sub
cmp
mov
push
popf
push
add
add
xor
mov
rcrb
adc
jo
pop
sahf
adc
pop
mov
leave
add
pop
mov
dec
aaa
mov
sarb
stos
stos
xor
in
mov
xchg
rcll
push
xor
cmpsl
shl
in
cmpsl
call
das
fdivl
imul
push
out
inc
stc
push
add
std
xchg
cmp
xor
mov
movsb
lcall
dec
mov
and
fiadds
dec
fsts
push
pop
imul
push
mov
in
mov
gs
push
fnstenv
or
xchg
fldl
sbb
or
mov
mov
push
inc
scas
daa
loop
stc
fsts
sbb
and
pushf
mov
in
enter
sub
and
xchg
xorl
dec
mov
jbe
mov
imul
add
pusha
gs
enter
in
jl
inc
push
jmp
gs
adc
sbb
popf
xlat
push
int3
ss
or
push
pop
cmp
and
rclb
xchg
outsl
lods
jb
add
aad
fnstcw
int3
jp
rcrl
ret
shl
ss
inc
call
adc
xchg
cmp
add
jb
mov
add
rorl
inc
sbb
lcall
movsb
hlt
pop
arpl
dec
jmp
mov
cld
jle
arpl
add
mov
mov
sub
aaa
pop
mov
jecxz
inc
mov
pop
jl
mov
int3
inc
dec
push
add
outsb
out
lea
sub
push
add
mov
jb
ljmp
fdivrl
xor
add
dec
cmp
mov
imul
pop
leave
lahf
popf
xchg
les
mov
xchg
or
add
push
hlt
xchg
sub
push
dec
repnz
dec
aam
sub
test
int3
imul
cmp
xchg
mov
xchg
repnz
ret
jbe
push
jne
shlb
or
pusha
dec
sub
jge
push
shlb
das
lods
mov
sub
jb
mov
insl
shll
fs
nop
fildll
jl
dec
dec
jle
xchg
cmpsb
je
and
push
outsl
sbb
fimuls
jge
pop
dec
and
mov
inc
jge
xor
fwait
jnp
test
es
and
test
outsl
ror
pop
cmp
jl
mov
frstor
aaa
test
push
sub
or
xor
mov
sbb
mov
jp
cli
loope
sub
xchg
cmp
adc
jle
dec
jmp
jg
or
leave
aas
lret
inc
call
xlat
cmpsb
mov
xchg
mov
in
jae
repnz
ds
push
subl
test
jmp
test
subl
mov
cmpsl
in
push
lcall
and
movl
fidivl
pop
adc
pop
pop
jae
xor
ret
jecxz
cmp
dec
or
xlat
inc
jecxz
mov
xchg
xchg
add
imul
pop
cmpsl
aaa
imul
adc
cmc
loopne
mov
pop
test
test
cmp
or
sbb
stos
push
iret
mov
scas
add
mov
mov
adc
jl
mov
fbld
out
xor
and
cmp
xor
sub
repz
jns
lds
das
in
pop
movntps
test
push
push
js
in
cwtl
mov
xor
push
dec
aaa
sub
sbb
xchg
subb
jo
les
push
idivl
mov
xchg
fwait
xchg
sbb
pop
cltd
lea
add
into
fsts
jmp
add
ud1
sti
imul
pop
mov
loop
fistpll
adc
lock
jl
int3
lsl
lods
jp
add
data16
push
mov
in
dec
les
push
pop
sbb
sbb
pop
test
or
xor
and
das
pop
arpl
xor
pop
dec
jmp
jnp,pt
arpl
cld
out
jge
add
dec
enter
sbb
pop
pusha
jmp
push
xlat
jae
mov
dec
xchg
and
stos
sub
aad
push
movsl
xor
les
sub
xchg
sbb
das
pushf
or
add
aas
cltd
movsl
les
jmp
mov
mov
cmp
pusha
ljmp
aam
sub
js
jae
into
mov
sub
addr16
sbb
pop
xor
adc
xor
push
leave
repz
pop
or
xor
xor
cmc
push
fldt
sbb
pop
or
add
xchg
scas
scas
or
mov
mov
xchg
fcomps
enter
xchg
insb
bswap
mov
lcall
test
inc
mov
test
push
fs
jae
mov
jecxz,pt
sbb
out
inc
push
adc
xchg
mov
adc
shlb
sub
rcll
inc
add
xchg
xchg
sbb
xor
and
adc
fmul
push
xchg
mov
rcrb
jle
mov
orb
xchg
aad
push
pusha
and
lea
xor
es
arpl
sbb
movsb
loope
gs
xor
mov
xor
outsl
incb
arpl
add
shrb
mov
outsb
sub
aad
cltd
out
push
cmp
shlb
and
das
dec
dec
mov
or
movsb
std
icebp
insb
lahf
hlt
mov
stos
in
das
add
into
inc
cmp
sub
shll
dec
add
mov
dec
pop
jle
or
lcall
or
push
rorb
and
mov
xor
push
out
fimull
push
fistpl
sbb
nop
push
jmp
cmc
inc
add
mov
sub
ss
add
leave
in
sub
xlat
jl
mov
dec
cmp
mov
mov
clc
sahf
mov
xchg
mov
inc
adc
flds
mov
lcall
fistpl
add
and
or
adc
inc
xchg
les
xlat
adc
xchg
dec
cmp
inc
int3
xlat
shrb
mov
imul
mov
sub
es
jmp
nop
mov
std
in
jno
stc
cmpsl
leave
pop
test
fisubs
cwtl
jnp
int
add
sbb
adc
popf
sti
add
sbb
sbb
mov
push
mov
lret
int3
cwtl
lock
or
shll
lahf
sahf
out
aaa
js
mov
mov
sub
fwait
sbb
adc
add
sbb
lods
sub
popf
out
push
clc
addr16
sub
push
stc
xchg
push
push
mov
push
or
xor
lret
fcompl
adc
test
out
repnz
cld
stos
dec
in
pop
pop
imul
or
push
xor
mov
push
push
es
hlt
cltd
mov
mov
xchg
or
mov
fstp
test
mov
cwtl
push
lcall
inc
js
pop
cs
sub
mov
xor
dec
in
add
mov
repz
test
pop
test
sbb
add
or
fisttpl
push
aas
xor
xchg
data16
xchg
cmpb
movsb
jecxz
cmp
pop
xor
jle
cltd
imul
pop
or
jae
xchg
outsl
sub
lods
and
push
rorb
movsl
mov
popa
mov
sub
jbe
loop
sub
mov
adcb
dec
test
mov
sbb
jne
lock
pop
std
out
mulb
outsl
or
or
adc
les
stos
and
aas
sbb
icebp
sub
or
jbe
mov
outsl
sbb
adc
mov
and
sbb
in
nop
cmp
sbb
cmc
repz
fildl
pushf
add
pop
pop
pop
sbb
push
lret
enter
push
std
xchg
jmp
ror
lea
shr
orl
inc
ret
movsb
sub
or
icebp
push
sbb
xchg
cmp
dec
repnz
and
jmp
xor
jp
sub
cltd
xchg
inc
lcall
inc
aad
jge
sub
and
push
insl
sbb
out
cltd
jl
cld
mov
jb
subb
leave
lret
inc
pop
shll
popf
mov
test
xor
ret
lods
aas
jns
cs
pop
lods
cmp
outsl
push
outsb
aad
fnsave
clc
aad
js
je
push
ss
dec
push
xchg
mov
jnp
lds
fildll
dec
or
nop
call
test
push
dec
popa
push
inc
aad
dec
in
mov
push
push
in
mov
std
shll
test
and
jne
es
das
pop
dec
mov
das
or
rorl
pop
cmpsl
cmpsb
cmc
repnz
out
sbb
shll
test
popf
lea
push
adc
shr
mov
fsubl
ja
add
inc
cmp
jp
and
js
outsl
loop
push
mov
pop
sti
inc
mov
push
push
shlb
sbb
in
push
mov
push
es
and
into
cld
add
or
in
imul
gs
dec
jb
lahf
add
sbb
jle
mov
test
dec
sbb
or
fwait
mov
and
dec
rorl
mov
mul
mov
stos
data16
sub
push
stc
repz
inc
jl
popa
pop
lea
imul
xor
lahf
push
jg
add
pop
loop
out
clc
aam
push
jle
mov
cmp
push
sub
out
scas
xchg
push
mov
stos
sbb
jmp
xor
fsts
movsb
xor
mov
movsl
fisubs
and
mov
hlt
sbb
sbb
pop
or
xchg
sub
movsb
push
sub
pop
scas
into
push
rcr
and
jge
cmp
dec
inc
xchg
pushl
pushf
push
add
es
into
add
xchg
dec
add
push
push
repnz
loope
test
fwait
xchg
inc
cmp
dec
loope
repz
cmp
aad
dec
pop
imul
mov
pusha
mov
cmpsb
dec
out
rcll
jns
inc
out
insb
das
jnp
cltd
pop
in
enter
xchg
cs
mov
jo
mov
test
imul
hlt
xchg
jle
leave
push
jmp
inc
das
cmp
ret
and
push
xor
fucom
pop
mov
repnz
adc
push
outsb
dec
lock
and
scas
icebp
andl
test
mov
jl
es
xor
add
sbb
nop
ja
in
xor
popf
jecxz
out
popf
stos
loop
inc
leave
jns
push
out
lods
loopne
test
pop
leave
mov
mov
cmc
clc
gs
dec
xchg
pop
push
sarb
outsl
fldt
outsb
mov
push
int
repz
fucomp
mov
inc
sub
sbb
push
inc
sub
xchg
push
dec
pop
jg
ljmp
mov
call
imul
int
mov
fucomp
sub
inc
pusha
shlb
push
fstpt
movsb
xchg
inc
negl
shrl
sub
mov
mov
mov
jb
cmc
mov
jnp
movb
orb
push
lahf
shll
xor
sub
cmp
push
pop
xor
movsb
sub
mov
out
mov
jne
push
jae
and
adc
jmp
jl
outsb
andb
lock
xchg
aas
or
test
ljmp
mov
cld
cmp
movsl
sahf
mov
ret
ljmp
adc
outsl
addr16
xchg
mov
mov
sahf
loop
mov
jp
outsb
xchg
push
adc
int
es
rcr
push
dec
shll
xor
and
xchg
xchg
push
jnp
xchg
cltd
orb
mov
andl
hlt
je
mov
cmp
ljmp
lods
arpl
jle
sub
cmp
iret
xor
cmp
push
ljmp
fsub
push
dec
mov
int
xchg
es
rorl
inc
jge
xchg
mov
loope
dec
jmp
hlt
mov
sti
push
sub
das
cmp
fs
cmp
jns
xor
shrl
fisubrl
jae
out
jno
adc
dec
pop
push
lods
and
ret
ja
sbb
insl
pop
push
lods
dec
dec
dec
js
jo
pushf
or
add
ficoml
leave
lret
addr16
movsl
lea
ret
sbb
xor
push
lods
jge
mov
loop
mov
mov
lret
lcall
pop
inc
mov
fcoms
cmp
insb
cmpsl
scas
aam
xlat
leave
adc
fsubp
leave
and
fsubrs
cmp
sbb
mov
and
and
mov
sub
nop
addr16
mov
lret
adc
test
cwtl
pop
or
adc
sub
or
lret
pop
lods
mov
sub
or
xor
sbb
push
mov
fwait
mov
jp
pop
rcrb
dec
add
call
sahf
ret
in
cmpsb
push
jp
xchg
mov
mov
cmc
hlt
inc
imul
orl
and
lods
adc
xchg
out
xchg
push
stc
mov
out
js
aam
call
add
jmp
fidivl
iret
ds
shl
ds
xchg
repnz
gs
sarb
jbe
sub
dec
sub
lds
sbb
iret
or
lea
test
jge
in
or
andl
jno
cmp
or
xchg
icebp
adc
imul
mov
cmc
into
das
iret
notl
rcll
push
out
cmp
bound
xchg
flds
lret
pusha
dec
mov
add
out
push
pop
imul
arpl
sbb
leave
sub
aaa
pop
leave
xor
xchg
aam
dec
cmpl
jmp
push
mov
sahf
clc
sub
hlt
cmp
test
sti
inc
in
hlt
pop
iret
sti
adc
inc
testb
test
xor
movsl
inc
je
scas
cmp
jne
in
and
into
mov
fnstcw
outsb
and
fldt
adcb
mov
lahf
mov
shlb
mov
and
dec
andl
adc
shrl
subb
movsb
push
mov
outsb
lret
jmp
ret
pop
pop
xor
lods
inc
cmc
jb
pop
dec
arpl
jbe
mov
pop
mov
sbb
das
add
test
insb
das
xchg
cmp
or
lret
xchg
cmp
pop
pop
and
sbb
lahf
push
cmp
xchg
xchg
movsb
pop
pop
mov
pop
mov
scas
inc
cs
sub
sbb
mov
shll
mov
mov
sub
repnz
cld
fcomps
fisubl
test
push
movsl
orb
mov
inc
lock
jno
stos
cmpsb
jle
jae
roll
mov
sarw
mov
fnstenv
cli
or
fnstenv
fildl
movsb
pusha
shrb
pop
sbb
jnp
cmp
dec
add
std
add
sub
lret
aam
or
pop
pop
or
ret
mov
aam
sub
lahf
jnp
jp
fyl2xp1
pop
cmp
xchg
xchg
test
popa
in
out
bound
mov
ljmp
cmp
fisubl
pop
fcomip
adcl
mov
loope
xchg
cld
test
in
mov
add
stc
jne
mov
and
mov
rol
lods
adc
mov
loope
cmp
or
in
int3
repnz
bound
dec
or
test
pop
int3
imul
mov
mov
jne
and
push
aaa
cmpsb
jg
pop
jne
mov
add
bound
inc
jns
aas
bound
hlt
sbb
pop
or
mov
mov
call
ret
xchg
sbb
mov
data16
pop
fdivrs
or
pusha
sub
lret
mov
mov
push
ss
mov
mov
add
cmp
xor
dec
jmp
loop
sbb
cmp
xchg
into
test
rcl
push
mov
dec
push
rcl
aam
adc
jl
adc
xchg
mov
xchg
sbb
xor
dec
in
insb
enter
es
loop
and
mov
jecxz
sbb
shlb
mov
cltd
cmp
adc
cmp
clc
test
adc
mov
xchg
cmpsl
xlat
pop
into
or
inc
adc
and
and
mull
mov
bound
movsb
mov
pop
add
gs
lahf
cmpsl
lods
xor
mov
leave
dec
xor
aas
add
sbb
lods
jb
daa
cmc
jge
sbb
sbb
adc
pop
xchg
inc
fdivl
add
sbb
rcll
ja
in
in
ja
pop
cmpsb
movsb
lods
mov
mov
movsl
dec
mov
icebp
xchg
jl
push
push
aam
mov
sub
cmc
stc
push
xchg
pop
cmp
mov
push
and
pop
xchg
xor
sbb
sub
push
ja
loope
mov
inc
mov
sub
in
xor
enterw
shlb
inc
push
loope
add
ja
push
out
push
add
push
or
mov
je
add
sbb
fidivs
xchg
mov
imul
jl
mov
mov
dec
test
dec
dec
pop
fidivrl
lret
mov
cmpsb
inc
sub
adc
xchg
jl
xchg
js
sbb
ficoms
xor
mov
orb
push
inc
lock
jl
sbb
sbb
outsb
add
jle
divb
shll
pop
jmp
movl
nop
and
insb
lret
sti
dec
mov
lret
pop
inc
sti
push
icebp
daa
adc
pop
stos
filds
nop
push
xlat
cwtl
mov
cs
jmp
test
adc
aas
sub
push
ficoml
testl
jp
sar
sub
sub
insl
mov
aaa
dec
imul
pop
xchg
pop
mov
adc
imul
and
pop
les
shr
mov
mov
jns
fisttpll
adc
push
out
in
lahf
jae
push
jo
leave
pushf
pop
add
aas
ds
pop
ret
or
in
push
adc
push
cld
aad
mov
xorl
mov
in
ret
adc
or
sahf
sub
cltd
pop
insb
stos
adc
xlat
cmp
add
or
movsb
sbb
xchg
jne
pop
adc
inc
adc
es
jmp
rolb
jae
xor
cmp
test
and
ljmp
cld
ds
or
loopne
xor
loop
dec
mov
outsb
adc
and
sbb
andl
or
mov
fldl
stos
sbb
push
imul
pop
xor
repnz
cmp
add
jb
xlat
ret
mov
loop
sar
xchg
push
imull
sub
or
mov
shll
xchg
dec
add
sub
inc
addr16
pop
or
test
lods
xchg
int
xchg
pop
pop
jp
inc
mov
movsb
stc
mov
or
dec
ljmp
jne
mov
aad
sub
mov
xor
fiadds
cmpsb
popf
jecxz
or
jb
loope
ret
mov
in
sahf
gs
jge
movsl
cmp
inc
mov
jb
call
ret
sbb
test
add
pop
cmc
lahf
mov
lahf
sub
dec
or
sbbb
popa
jne
das
out
push
push
xchg
and
fsubs
mov
cmp
inc
fldt
xchg
in
fisttps
sbb
jno
jo
sub
jle
stc
shrl
mov
add
push
cmp
mov
xor
add
icebp
xlat
xlat
jp
inc
jle
xor
fld
fwait
or
enter
je
pop
jg
shlb
jae
lods
cs
stos
inc
out
out
mov
dec
flds
sahf
xchg
lret
es
iret
xchg
movsb
lock
je,pt
push
in
lahf
cmp
add
sar
dec
adc
push
andb
and
je
and
scas
and
mov
sbb
push
insb
mov
cli
lahf
aas
xchg
push
shl
scas
call
std
cmpsb
inc
add
cs
add
xlat
jbe
stos
daa
and
cmc
pop
lds
or
pop
dec
test
mov
sbb
enter
and
push
ffree
movsl
mov
xchg
cs
ja
les
lcall
jno
imul
jae
jl
bound
rcr
sub
aas
aad
jbe
mov
jae
ret
ret
pop
lds
dec
push
shrl
xor
int3
sarb
jle
and
jp
clc
xor
sbb
mov
pop
rcrb
pop
popa
out
pushf
lcall
mov
test
jp
cltd
cs
adc
fwait
jmp
sarl
sbb
imul
lea
cmp
mov
sbb
dec
push
inc
fsubrl
pop
popa
lock
push
aam
fdivrp
insb
mov
or
enter
outsl
mov
cmp
popl
xchg
dec
ss
sub
in
push
sub
sbb
lods
sub
mov
cli
sub
push
pop
or
push
mov
add
mov
aaa
ja
fbld
lcall
decl
sub
in
mov
shld
test
mov
sbb
loopne
cmp
fists
push
jne
ja
pop
mov
lahf
push
enter
pop
lahf
mov
inc
cmpsb
add
sub
pop
xchg
adc
pop
cmp
out
iret
call
and
push
mov
out
test
faddl
outsb
xchg
push
or
pop
rclb
pop
dec
out
push
pop
push
aam
adc
frstor
jl
xchg
jmp
in
stos
ret
sti
in
das
jnp
in
mov
jae
mov
popf
loopw
scas
xlat
pop
mov
jecxz
push
mov
jno
push
xchg
add
lds
mov
icebp
mov
sbb
sbb
jmp
sbbl
dec
inc
test
outsl
sub
imul
and
cmpl
pop
movsb
jne
adc
insl
nop
aaa
roll
gs
add
stc
test
ret
xchg
dec
cmp
push
mov
inc
mov
aad
push
fisttps
xchg
mov
call
pop
or
jbe
xor
xchg
adc
mov
mov
cmp
xchg
fsubl
cmc
lret
mov
sarl
dec
bound
fwait
fs
cmpsb
shrb
out
or
leave
fistps
fisubl
or
dec
jne
stos
test
fidivrl
leave
push
hlt
sbbb
bound
js
sbb
lret
popf
jo
ljmp
in
je
bound
sbb
sub
loope
in
jp
lods
cmp
imul
repz
sbb
out
lcall
sbb
sar
test
add
mov
int3
adc
test
or
or
imul
cmp
lock
add
mov
aaa
pop
jl
mov
test
mov
rcll
cs
and
add
xor
mov
inc
xchg
cmp
clc
cmpsb
mov
sbb
mov
lahf
push
fmuls
pushf
fsub
out
ds
or
mov
adc
sbb
push
push
add
push
mov
fidivs
mov
adc
arpl
loopne
sub
mov
adc
xor
fcomps
or
push
cltd
or
aam
xor
jl
add
cltd
xchg
xor
mov
jge
xchg
in
jmp
xorl
test
xchg
xchg
sub
mov
jo
ret
sub
gs
jbe
decb
pop
fs
sub
jb
fidivrs
fiaddl
loopne
sbbb
fwait
cmc
sbb
and
fnstsw
sbb
pop
insb
adc
jecxz
aam
adc
push
bound
dec
cmp
cltd
xor
hlt
and
out
mov
enter
mov
clc
xchg
jo
out
fimuls
push
xor
xor
mov
ficoml
and
add
mov
mov
dec
xor
add
pop
repz
sbb
xor
fsts
push
jb
mov
test
arpl
pop
sbb
es
out
loopne
xor
dec
jbe
cmp
popa
sbb
or
lds
adc
jno
fs
push
nop
in
and
std
jns
mov
cmp
call
in
sub
test
mov
and
cwtl
mov
mov
cwtl
fbld
xor
outsl
push
cmp
nop
push
push
popf
cs
mov
xchg
push
mov
cld
ljmp
mov
pushf
add
or
das
in
pop
decb
mov
mov
cmp
mov
mov
or
jnp
sbb
push
push
aam
sub
cld
jnp
hlt
shrl
mov
sbb
imul
push
pusha
add
adc
and
push
daa
cmp
and
fstps
pusha
cmp
fwait
xor
dec
or
pop
popa
sar
insb
leave
jne
sbb
add
push
sub
loope
adc
adc
pushl
cmpsl
aam
push
stos
mov
mov
pusha
cmp
cmp
shl
daa
adc
jno
fstl
iret
fwait
out
push
lods
pop
mov
inc
icebp
cmp
mov
lods
add
xchg
mov
movsb
hlt
mov
ror
addb
lret
lods
fucomp
lcall
in
push
push
add
imul
add
mov
popa
xchg
pop
sbb
jge
test
fstpl
inc
cmp
add
out
int3
icebp
in
js
stc
pop
in
imul
inc
mov
push
testl
ret
pop
inc
xchg
je
push
arpl
loopne
pavgb
mov
push
mov
jbe
jns
xlat
aad
push
iret
sbb
in
ljmp
ficompl
stos
add
jl
cmp
pop
sbb
or
ret
int3
lfs
lcall
pop
fs
or
mov
push
into
and
jns
arpl
dec
or
shrb
inc
add
pop
mov
nop
add
cmp
dec
ret
pop
jb
sbb
lcall
mov
mov
in
mov
pusha
cmpsb
cltd
ret
sahf
movsb
test
pop
add
mull
cwtl
dec
filds
data16
mov
lcall
pop
icebp
push
push
lds
ljmp
add
xor
add
adc
pop
fsubs
in
pop
sub
jg,pn
xchg
xor
mov
adc
out
int3
in
push
mov
pop
ss
jg
jnp
les
ror
cmp
mov
pop
xchg
sbb
adc
dec
jb
add
mov
out
sahf
popf
ror
int3
cs
dec
inc
shll
and
pushf
cs
rol
sub
xor
cmp
pop
cmp
outsl
fisubrs
fnstenv
mov
pop
pusha
xchg
mov
sub
xchg
iret
push
jne
fs
push
clc
mov
dec
cs
popf
add
popa
dec
lods
fdivl
and
adc
fsubr
lret
jg
adc
push
push
push
out
hlt
inc
leave
out
int3
push
fsts
mov
cwtl
add
jl
add
xor
nop
inc
and
in
push
push
mov
cmp
fnstcw
lds
das
pop
pop
lahf
add
pusha
sub
movsb
ret
mov
shl
addr16
sbb
out
add
sbb
lcall
pop
sub
jno
add
sub
fsubrl
adc
xchg
subb
in
test
or
push
shll
int
aam
sti
mov
mov
into
sbb
mov
decb
out
push
movsb
xlat
shll
push
shl
sub
inc
push
decl
jne
sbb
in
inc
cs
imul
jnp
stos
mov
or
out
jnp
insl
and
push
jp
mov
stos
out
mov
in
fmull
adcl
loopne
mov
clc
cmpsb
and
push
out
sti
jl
jmp
jmp
jecxz
xchg
ds
sbb
test
jbe
adc
ret
jne
mov
clc
pusha
pop
aam
test
xchg
mov
dec
icebp
dec
xchg
mov
jno
sbb
sbb
out
stos
ret
adc
popf
jge
sahf
stos
add
sub
cld
jae
hlt
pop
mov
out
jbe
cmp
in
adc
rcll
and
shrb
adc
mov
push
xor
dec
mov
loopne
adc
inc
mov
add
xor
dec
insb
cmc
shl
call
aas
inc
jmp
sub
sbb
mov
mov
add
cmp
in
out
dec
jae,pn
pop
into
push
xchg
arpl
popa
popf
mov
and
outsb
pop
out
in
out
push
add
dec
pop
xchg
outsl
pop
ror
pusha
and
adc
stos
popf
push
neg
in
insb
enter
jmp
jl
jae
cs
pop
scas
add
mov
and
mov
mov
add
pusha
cmpsl
mov
aam
mov
stc
jmp
add
aas
stos
and
xlat
xchg
jg
ffree
cmp
cmpsb
jecxz
fs
or
and
lret
add
out
inc
xchg
jecxz
mov
mov
pushf
mov
sub
jns
test
stos
sbb
lods
data16
repnz
adc
mov
mov
daa
dec
sub
xchg
mov
jbe
out
jle
shrb
imul
sar
pop
and
shrb
add
iret
pop
xchg
jne
lea
and
stc
daa
xchg
fmulp
jmp
pop
or
or
inc
pop
stos
sub
push
and
mov
enter
ret
dec
xchg
ljmp
cmp
push
pop
cmp
mov
mov
inc
pusha
lcall
rcll
push
or
fidivs
mov
xchg
inc
scas
xor
scas
adc
jl
cmpsl
rcr
daa
pushf
mov
gs
int
sub
sub
in
xchg
mov
push
adc
push
sub
mov
xor
cs
or
sti
lods
imul
or
inc
push
pop
adc
dec
insl
sbb
outsl
ds
adc
mov
lcall
jge
lahf
ja
push
out
fsub
dec
cmp
adc
cltd
push
xchg
mov
and
imul
fsubrl
push
ficomps
sub
sarb
jnp
fisubl
mov
iret
cmp
mov
mov
xor
sar
enter
add
fistpll
xor
add
pop
pusha
psubq
push
or
movsb
sti
dec
mov
popf
xor
push
repnz
imul
dec
int
inc
mov
mov
cmp
mov
pop
and
sti
sbb
clc
pop
pushf
adc
lcall
cmpsl
and
rolb
sarb
cmp
adc
sbb
fists
arpl
pop
push
pop
and
and
cwtl
insb
mov
and
sbb
hlt
shll
cs
push
sahf
imul
pop
out
inc
pop
pusha
in
push
inc
stos
sbb
pop
rorl
lret
rcl
rcrb
adcb
and
fists
add
adcl
pop
repz
test
in
mov
int3
adc
jno
add
dec
divl
sarb
xor
clc
xor
std
in
rorl
orb
pushl
push
outsb
inc
test
lret
fisubs
xchg
and
leave
jg
jae
cltd
out
ja
into
lods
xchg
adc
pusha
mov
pop
mov
and
cmpsb
loope
sub
adcl
clc
leave
outsb
fyl2xp1
add
pop
out
adc
add
xor
jbe
fadds
inc
aam
push
push
test
loope
jnp
addr16
cmc
dec
bt
jl
jle
pop
movsb
mov
sarb
cmp
xchg
or
subl
sub
addr16
lret
sub
cmpsb
cmp
mov
pop
or
sub
push
sub
xchg
and
lcall
cmpsl
xor
mov
loopne
adc
scas
push
icebp
adc
fstpt
xchg
jno
repnz
mov
loopne
cs
lods
sub
ds
sahf
out
aad
cli
push
pop
push
aam
mov
inc
lret
out
faddl
lret
or
lret
stos
jg
jl
fcmovnbe
ret
mov
xchg
fs
int3
cmp
sub
arpl
cmpsb
shrl
push
pop
push
mov
gs
push
cmpsb
hlt
imul
mov
popf
dec
fs
fistl
pop
mov
shl
adc
and
pop
mov
sbb
loopne
lock
or
cmp
ret
xchg
add
inc
sub
emms
add
xor
loop
imul
fmulp
jnp
xchg
movsb
jmp
dec
mov
sbb
mov
adc
pop
mov
mov
adc
aas
mov
jne
mov
cld
ss
push
fisubrs
mov
mov
adc
out
rorl
icebp
repz
xor
mov
stc
mulb
mov
loop
pusha
inc
out
add
dec
loopne
mov
loope
rep
push
repz
mov
inc
lahf
xor
hlt
in
xchg
js
jp
pop
mov
idivb
sub
inc
xor
mov
or
push
or
mov
dec
cli
out
cmpsb
lea
and
add
in
ret
push
jno
mov
fisttps
in
loopne
xor
insb
dec
mov
push
loopne
mov
into
dec
adcb
xchg
inc
cmpsl
test
loopne
xor
or
aas
sbb
mov
cwtl
loop
in
pop
sbbl
mov
jns
ds
insb
lods
mov
inc
lret
sbb
in
push
xchg
push
mov
pop
mov
in
dec
push
inc
mov
mov
bound
aad
test
sub
pop
mov
std
fsubrl
inc
or
xor
sbb
dec
int
flds
adc
jg
adc
jae
in
jae
sbb
push
fcmovnu
incl
lcall
xor
xlat
in
xchg
pop
jge
inc
les
or
test
aam
mov
xchg
jns
or
bound
mov
leave
adc
pop
xchg
xor
rclb
xor
xor
xchg
xor
dec
lds
std
out
test
jnp
jne
adc
fbstp
imul
dec
test
mov
jp
sbb
mov
lea
filds
arpl
jns
lods
pop
xchg
jl
xor
xlat
pusha
pop
xor
mov
add
sub
jnp
inc
js
mov
dec
mov
pop
wrmsr
lods
insl
inc
ja
pop
mov
pop
push
jge
scas
mov
cs
inc
pop
dec
mov
outsb
mov
out
lcall
mov
pop
aam
xchg
ficoms
inc
inc
cmp
es
push
cmp
hlt
xchg
shrl
cmp
jno
aam
mov
movsl
jle
jg
rorl
testb
lret
jg
pop
aas
movsl
test
and
jecxz
push
or
arpl
inc
pop
lods
mov
mov
ljmp
pop
xor
xor
mov
loop
adc
loope
lock
push
sbbl
lock
push
or
das
cmp
push
fcoml
pop
xor
inc
mov
fnstenv
and
movsl
shlb
ds
fwait
sbb
push
inc
xor
xchg
es
mov
ret
aam
mov
mov
xchg
mov
dec
xor
ret
imul
xor
inc
add
rcrl
jle
and
dec
pop
movsb
cmp
imul
adc
call
inc
mov
cmp
xchg
into
fnsave
imull
hlt
jmp
insb
test
cld
out
inc
cld
repnz
dec
pop
adc
bound
mov
into
inc
mov
popf
mov
jo
in
std
cltd
inc
lcall
push
or
out
pop
jno
mov
xchg
mov
sub
push
mov
les
lods
scas
bound
adc
cwtl
xor
out
cmp
mov
out
loopne
sbb
fldt
inc
sbb
push
fs
js
ss
addr16
xor
cs
mov
aad
js
or
jns
mov
mov
test
and
jp
sti
dec
push
pop
sub
mov
loopne
push
mov
jae
mov
leave
nop
sbb
pop
ss
inc
xchg
and
sarl
cmp
dec
fdivr
cmp
push
cmp
popa
mov
mov
ret
cli
call
push
adc
xchg
in
sbb
sub
mov
cmp
cld
movsl
mov
jle
ljmp
scas
mov
dec
hlt
stc
shll
testb
jbe
loopne
add
sub
lods
popf
dec
fnstsw
daa
add
adc
cltd
xchg
ljmp
jmp
push
sbb
test
jno
push
push
push
cltd
lret
jmp
jne
addr16
roll
loop
inc
out
jb
mov
ljmp
sbb
inc
or
scas
fnsave
lea
jp
inc
sbb
enter
jne
cmp
iret
enter
jno
adc
adc
ret
cmp
popf
mov
adc
inc
mov
inc
adc
iret
aam
or
in
xchg
std
mov
or
cmp
mov
adc
out
xor
lods
gs
imul
and
stc
jmp
or
push
mov
loope
aaa
or
xchg
cmpsl
and
mov
js
rcrl
xchg
push
inc
std
jp
and
sub
cmp
ret
inc
mov
lea
jno
mov
imul
lds
push
mov
test
arpl
mov
jns
jecxz
sti
jmp
iret
xchg
push
mov
fwait
inc
rol
stc
push
inc
in
and
rcrb
js
xchg
dec
out
js
mov
lcall
test
andb
in
je
not
outsl
mov
jns
jp
add
test
fstpt
jbe
ret
sub
int
popf
ja
cld
jge
in
nop
sbb
sbb
push
mov
negl
mov
inc
int3
subb
mov
insl
testb
inc
sub
jmp
pusha
xchg
xchg
jle
test
cmp
sahf
negl
in
je
test
jbe
and
adc
mov
sbb
mov
in
ja
pop
adc
cli
popf
jle
ret
ret
inc
div
and
movsb
repnz
mov
ds
inc
daa
or
pop
out
xchg
cmpsb
std
and
clc
aam
sub
jp
scas
push
cmp
fimuls
lods
add
int3
inc
mov
mov
xor
js
add
sub
or
scas
shr
mov
loopne
inc
and
sbb
test
fs
xor
mov
mov
lahf
out
in
or
sub
push
mov
fdivp
ret
pop
xor
sar
inc
mov
test
imul
jle
loope
std
or
gs
xlat
es
xchg
dec
bound
jnp
dec
sub
or
pop
stos
cmp
dec
sub
rcl
xor
ljmp
mov
fdivrs
adc
idiv
add
imul
lods
pop
xchg
je
cmp
lea
jg
adc
call
jle
into
mov
xchg
sub
pop
rol
mov
inc
dec
or
iret
dec
gs
lcall
cs
sub
adc
or
test
out
xlat
scas
fisubl
nop
jl
sbb
push
lret
jp
push
hlt
inc
das
inc
push
scas
push
fmul
pop
xchg
adc
xchg
out
dec
clc
pop
rorl
sbb
repz
adc
mov
data16
xchg
dec
out
stos
movsb
push
pop
push
inc
ret
pop
xchg
in
ds
adc
insl
jae
mov
xor
push
mov
test
cmp
xchg
or
xchg
hlt
push
and
cmpsl
out
insw
push
push
outsb
scas
inc
xchg
int
pusha
in
jmp
popa
mov
sbb
cli
mov
cli
ja
aaa
faddl
shlb
cwtl
inc
sarb
mov
bound
cli
out
dec
aas
addb
sbbb
call
mov
call
rorb
in
jnp
frstor
jmp
dec
cltd
loope
or
dec
xlat
pop
lds
xlat
inc
pusha
push
and
sbb
mov
cmp
sti
or
inc
xor
push
inc
dec
iret
inc
jae
daa
push
stos
or
add
aam
mov
jge
cmp
sbb
fcoml
fidivrs
rol
enter
adc
mov
loopne
movsb
jne
cld
lcall
pop
fs
xor
mov
ds
adc
xchg
jae
test
fsubrl
fiaddl
jmp
fbstp
dec
pop
xchg
dec
sub
repnz
jg
pushf
jae
mov
jae
in
jmp
mov
push
pop
fisttpl
or
fsubrl
ret
fidivs
repnz
sbb
xchg
or
stos
jg
pusha
push
scas
push
xchg
popf
movsb
das
ds
mov
cmpxchg
cmp
sbb
adc
mov
imul
push
mov
cmp
pop
jns
pop
sarl
lock
stc
mov
or
ss
pop
sbb
adc
pop
repnz
addr16
dec
add
aas
jnp
and
xlat
bound
aaa
scas
ds
sbb
out
xchg
pop
dec
sub
push
or
inc
lea
call
loop
push
int3
xchg
jge
ljmp
inc
stc
cmpsl
mov
push
push
test
pop
inc
ja
int
pop
xor
dec
fisubs
notl
inc
imul
lods
loope
mov
mov
jno
insl
inc
push
mov
fs
jecxz
and
mov
mov
test
or
dec
iret
ret
nop
lret
push
mov
insb
mov
or
arpl
adc
xor
jns
daa
mov
cwtl
push
pop
push
adc
ss
cmc
and
lret
xlat
in
jecxz
or
in
mov
stc
xlat
int3
mov
xor
ret
adc
mov
sub
push
js
pop
or
jno
mov
lods
pop
ss
sub
push
iret
pop
push
xor
add
dec
and
out
mov
pop
fdivrp
aas
aas
int3
lret
sahf
fldenv
xor
lret
mov
mov
sub
ss
addr16
dec
xchg
arpl
mov
fmuls
mov
adc
jge
jb
outsl
sub
adc
mov
sbb
mov
inc
jo
sbb
sahf
ja
lcall
mov
bound
mov
jbe
stc
xor
mov
dec
mov
mov
jmp
adc
out
iret
mov
mov
push
xchg
jle
sbb
jl
aam
outsb
ss
mov
sub
leave
xor
push
scas
cmpsl
push
sub
out
ljmp
ret
mov
sub
fidivrs
xchg
inc
xor
fisubl
add
push
inc
xchg
fnstenv
adc
push
sahf
and
push
movsb
aas
imul
pushf
mov
cs
push
mov
pop
and
dec
add
cmp
stc
mov
sbb
in
pushf
mov
adc
int3
mov
cs
ss
leave
push
outsl
xor
rcrb
mov
cmp
fs
cld
in
loope
loop
sub
and
leave
add
movl
cmc
testb
mov
adc
clc
push
pop
mov
lret
out
push
sub
or
dec
pop
repz
insl
add
sub
dec
or
sbb
sbb
sub
lods
or
clc
sub
neg
inc
xchg
into
adc
and
push
pop
aas
imul
fmulp
xchg
shrb
aad
xor
mov
mov
retw
jle
jecxz
in
dec
push
mov
dec
adc
add
sbb
nop
jmp
dec
add
jb
mov
pusha
imul
bound
inc
push
adcl
imul
cmp
insl
pop
xor
jbe
fstp
push
cmpsb
test
in
outsb
jne
cmpsl
and
push
je
sub
hlt
popf
jle
mov
xchg
jge
or
cmp
push
dec
out
and
add
dec
jge
xor
cmp
mov
cltd
popf
dec
and
xor
fstpt
xchg
fsubl
repz
xor
or
cltd
fdiv
and
pop
mov
and
test
xor
xchg
dec
add
jle
popf
pop
push
jnp
cwtl
sahf
sbb
mov
bswap
xlat
testb
push
jbe
jle
lods
dec
inc
std
test
iret
in
adc
cmpsl
rcll
shrl
mov
iret
out
or
daa
in
test
out
push
sub
stos
nop
cwtl
ljmp
inc
dec
ljmp
dec
sub
jb
push
insb
push
fwait
jbe
aas
cmp
fs
call
mov
enter
nop
stos
dec
inc
mov
mov
push
jns
lahf
lcall
cmp
les
mov
loope
adc
push
aam
adc
adc
fldcw
xchg
mov
mov
movsl
mov
mov
or
gs
fildll
dec
xchg
mov
xor
add
sbb
dec
cmp
js
subb
sub
loope
out
sub
gs
jg
xchg
bnd
scas
sub
add
dec
push
test
push
pop
jle
cli
data16
subb
xor
and
ljmp
xor
inc
fwait
cmp
and
sbbl
or
fnstenv
jbe
jg
and
in
lods
rclb
jne
dec
adc
out
repz
sbb
and
sbb
xchg
xchg
fnsave
dec
inc
or
scas
jmp
sub
mov
scas
dec
xorb
inc
stos
insb
icebp
repz
shl
les
jmp
pop
or
jne
pop
fadds
ja
dec
xor
mov
cmp
jae
or
rcll
pop
pop
inc
sbb
aaa
test
arpl
mov
mov
cltd
js
sub
pusha
mov
mov
std
jb
insl
ds
ja
xor
cmp
and
lahf
scas
xchg
stos
sbb
lcall
iret
sbb
pop
neg
cmc
mov
pop
cli
gs
leave
incl
les
and
mov
cmp
aaa
loop
pop
hlt
xchg
push
mov
jg
adc
loop
cmc
mov
rclb
leave
dec
push
jmp
xor
mov
dec
mov
imul
xchg
cmp
adcb
scas
ficoml
inc
inc
test
cmc
pop
ja
cmp
sub
mov
mov
dec
das
icebp
xor
pop
jp
outsb
lock
jno
or
in
mov
scas
xchg
cltd
int3
outsb
or
pop
and
leave
add
or
dec
adc
in
ret
dec
insb
push
das
lret
ds
cmc
aaa
fildl
xor
pusha
add
push
pop
mov
movsl
xchg
ret
sub
shrl
fisubrs
cmp
cmp
push
incb
fsubs
adc
addr16
adc
out
sbb
stos
test
rcll
xchg
push
inc
les
add
lea
jp
xor
les
in
pop
aaa
jg
fstpl
cmpsl
repnz
or
sarb
xchg
xchg
bnd
pusha
jl
xchg
lea
and
pop
mov
aaa
outsl
fcompl
inc
mov
movl
sahf
sbb
loop
sub
jne
sub
xchg
cmpsb
hlt
dec
lret
outsl
in
mov
ja
gs
ret
outsl
inc
mov
mov
call
adc
addl
ret
mov
push
push
loopne
cmpb
popf
cmc
pop
mov
insb
lret
int
pop
popa
jno
or
inc
sbb
icebp
sahf
rorl
inc
insl
jne
fwait
adc
cmp
jns
mov
xlat
jo
pop
push
sbb
or
jb
xchg
mov
add
lcall
stc
stos
dec
ret
xchg
push
dec
push
lock
lock
cmp
inc
jp
inc
aaa
data16
push
insl
jge
js
das
cmp
xchg
cwtl
pop
mov
mov
inc
push
pop
jmp
ljmp
cmp
lcall
pop
inc
ja
push
out
cltd
inc
push
arpl
push
repz
loope
jge
clc
enter
xchg
in
xchg
mov
cltd
test
mov
cli
pop
add
clc
push
jno
mov
nop
pop
dec
or
loop
jl
daa
or
jns
sahf
frstor
push
or
jl
test
inc
push
nop
repnz
fiaddl
push
mov
insb
hlt
cltd
lock
xlat
adc
mov
fidivrs
add
adc
xchg
xchg
icebp
sbb
cmp
mov
out
xlat
stos
int3
rorb
jnp
inc
mov
popf
push
xlat
gs
jmp
mov
stos
imull
cltd
push
stos
xchg
push
mov
popa
arpl
xchg
inc
xlat
dec
dec
rclb
aaa
stos
fnstenv
enter
xchg
je
js
push
push
or
pop
add
sub
xchg
cmp
pop
into
movaps
cmp
push
cs
mov
test
push
int
ror
lret
or
inc
out
lcall
stos
sub
lret
leave
mov
mov
sarl
sbb
ja
xchg
or
and
out
xor
int3
dec
ss
adc
push
adc
mov
fldcw
mov
in
pop
test
push
mov
adc
or
sti
mov
aad
mov
call
sub
sbb
push
xchg
xchg
pusha
test
inc
mov
pop
gs
push
sub
rcrb
mov
and
test
xchg
shrl
cmc
imul
nop
mov
cmc
jle
lcall
inc
flds
and
bnd
or
inc
xor
sbb
mov
in
mov
add
das
je
jo
rcr
xchg
andl
jge
lock
xchg
test
fs
lods
mov
test
xor
push
xor
shlb
mov
fmull
jns
xchg
sub
jmp
lret
data16
push
mov
pop
xor
dec
sub
pop
mov
inc
into
mov
add
lods
inc
ret
frstor
push
pop
mov
in
sbb
aaa
push
xchg
out
jl
cld
sub
outsl
shl
jecxz
add
xlat
loope
sub
xchg
inc
cmp
cltd
sbb
imul
in
fisttpll
lds
mov
push
add
in
and
xchg
enter
mov
xchg
push
push
adc
dec
mov
adc
mov
lret
cmp
fisttps
and
xchg
mov
xor
sti
in
int
movsl
xchg
or
inc
inc
movsb
mov
xor
cmpsl
clc
add
add
scas
and
mov
scas
and
xorl
fistps
cmp
data16
sbbl
test
popa
outsb
call
dec
cld
adc
xchg
cmp
sbb
push
stos
cld
call
cmp
jmp
adc
mov
mov
iret
pop
dec
fnsave
popf
sub
sub
mov
add
pop
cmpsb
cmp
mov
push
adc
outsb
jge
pop
movsb
add
repnz
dec
mov
and
inc
clc
lock
pop
push
pop
mov
sub
into
sbb
add
nop
cwtl
xchg
mov
mov
add
push
clc
cmp
mov
push
mov
ds
outsl
lahf
jecxz
cld
mov
mov
add
inc
mov
jnp
repz
test
push
jmp
mov
not
sets
xor
pop
arpl
iret
inc
xchg
xchg
clc
lods
mov
pop
sub
mov
xorb
loopne
pop
lret
test
outsl
pop
clc
leave
xchg
les
xchg
xor
adc
call
sbb
xor
push
jecxz
repnz
fnsave
jne
mov
mov
add
xor
jb
inc
push
cld
scas
jmp
and
lahf
shlb
add
ja
mov
fxch
iret
jae
out
mov
push
lock
mov
pusha
repz
mov
jg
jnp
sub
dec
mov
test
mov
xchg
mov
popf
fnsave
shlb
std
test
dec
std
ds
cmp
adc
imul
lock
lcall
ret
fstps
push
rclb
outsl
pop
push
mov
adc
cmpxchg
jmp
adc
hlt
jo
xchg
mov
or
hlt
jo
sub
inc
xor
mov
ljmp
sub
jbe
dec
in
mov
stc
out
mov
js
cmpb
lret
mov
data16
jo
pushf
test
add
test
stos
jmp
pusha
adcl
clc
inc
or
les
stc
into
mov
xchg
dec
adc
inc
or
loope
pop
jo
mov
inc
fldenv
fimull
out
mov
xchg
outsl
sub
cmpsl
ljmp
daa
lock
pop
outsl
inc
gs
push
je
xor
adc
push
icebp
cmp
add
nop
mov
add
mov
jp
xchg
add
mov
pop
rcll
fiadds
insb
rclb
fstpl
lea
push
std
int
cmp
cmp
xor
loop
xchg
inc
add
in
add
mov
cmpsl
adc
sub
mov
cmpsb
sbb
in
call
push
cli
insb
pop
jbe
aam
stos
fwait
hlt
in
scas
sbb
push
hlt
outsb
movsl
mov
inc
mov
mov
or
insb
aaa
pop
inc
sbb
ss
lock
shrl
sbb
xchg
push
cmpsl
enter
mov
mov
es
pushaw
mov
fnsave
call
xlat
pushf
mov
loope
pop
dec
push
xchg
mov
add
push
ror
jnp
sti
ret
stc
int
aad
adc
xchg
movsl
pop
xchg
enter
in
pusha
jb
jg
xchg
pop
mov
movsl
pusha
int
les
loop
or
xchg
inc
leave
hlt
cmp
add
dec
push
adc
rorb
or
scas
into
push
paddq
mov
xor
ss
out
mov
loop
inc
lods
pop
cmpsb
fucomip
inc
xchg
aaa
jecxz
xor
es
push
pop
dec
push
enter
jae
fiadds
lret
insl
xor
push
insl
cmpsl
push
rcrb
lahf
cmc
ficompl
push
roll
std
enter
pop
and
mov
ror
mov
das
jns
aam
jp
mov
jo
out
fucomp
adc
popa
jb
sar
xchg
push
mov
sbb
mov
mov
mov
in
aas
lahf
dec
dec
jecxz
jecxz
push
mov
lahf
jecxz
push
loop
int3
dec
cltd
fcoml
adc
arpl
push
insb
ss
push
es
ds
out
ja
insb
sbb
movsl
outsl
testb
jge
and
sbb
add
test
mov
test
fisttps
loop
jae
xchg
xor
es
rclb
xchg
cmpsb
aad
addl
pushf
insl
or
dec
out
inc
loop
jns
imulb
sti
push
outsl
push
mov
add
lods
adc
incl
add
push
stc
dec
pop
aaa
pusha
movsb
decb
add
je
jb
outsb
pop
mov
inc
sbb
and
hlt
repz
inc
js
mov
loop
out
cld
pop
loope
rcl
mov
or
mov
fisubrs
pop
push
or
orl
sbb
lret
aaa
push
push
ja
or
mov
mov
lret
add
pop
cwtl
mov
jle
fxam
push
dec
sub
xchg
in
cmp
xchg
cs
sahf
loop
test
iret
icebp
jb
cmpsb
aaa
lea
xchg
iret
pop
lret
xor
daa
mov
pop
fst
decb
ret
sub
movsb
fildl
lock
jbe
enter
cwtl
or
sub
js
mov
stos
mov
jecxz
xor
movsb
xchg
adc
xchg
iret
inc
xchg
jmp
cwtl
test
jae
mov
jne
ror
push
popf
xchg
cmp
ljmp
sbb
cmp
out
insb
outsl
mov
ror
add
add
bndstx
test
jnp
xor
cmp
pop
cmp
sub
and
add
xchg
adc
xor
das
jecxz
je
repnz
mov
enter
sti
rcl
sbb
lods
movsl
lods
mov
mov
mov
sarl
testl
insl
ds
aam
mov
xchg
jl
xor
xlat
push
add
mov
cld
icebp
mov
adc
into
fsubs
mov
aad
orl
out
push
mov
pop
inc
inc
fcomi
push
pushf
insl
arpl
xchg
xor
sub
mov
sbb
xchg
movsb
jl
gs
mov
push
mov
inc
sbb
inc
loopne
lahf
pushf
filds
sub
xchg
int
adc
cmp
pop
fdivl
cwtl
lahf
aam
push
push
push
outsl
xor
add
push
jb
sub
andl
fwait
ja
xchg
sub
out
mov
dec
or
push
push
call
lahf
mov
mov
fstpt
fdivl
notb
push
push
push
dec
jns
in
pop
xchg
xorl
lcall
pop
cmpsl
ljmp
xor
fnsave
repz
hlt
lock
test
pop
repnz
stos
add
scas
push
pop
fldt
adc
xor
sub
fsub
mov
insb
outsb
dec
and
adc
out
scas
inc
pop
fcomps
out
fcmove
shrb
xchg
popa
jg
xchg
js
bound
push
fistpl
xchg
mov
pop
adc
sbb
lods
mov
sub
push
mov
mov
movsb
pop
dec
mov
mov
xor
cmc
mov
nop
rolb
sub
xchg
mov
cli
cmp
rcrb
sarl
stos
jl
adc
xor
std
test
push
xchg
mov
sbb
push
ds
mov
ljmp
jmp
ret
repnz
xchg
loop
dec
shl
sbb
xor
sbb
fnstcw
sarl
shlb
jl
leave
jae
std
nop
mov
cmp
aas
jmp
push
cmp
jecxz
lock
xchg
ljmp
jg
aas
xchg
cmp
dec
adc
insl
not
mov
aas
jbe
xchg
jg
test
pop
jecxz
dec
fs
ljmp
pop
repnz
jecxz
adc
leave
mov
inc
cwtl
test
sbb
add
pusha
imul
dec
lods
cmc
or
je
lods
imul
sub
shl
mov
ss
fisttps
mov
ss
sub
push
sub
and
xlat
pop
mov
cltd
xor
popa
test
and
ficoml
hlt
cmp
jns
and
pop
adc
mov
ljmp
cli
sti
shr
or
outsb
js
jb
bound
sbb
loopne
mov
clc
subl
arpl
mov
lods
dec
add
push
sub
in
jnp
mov
xchg
lahf
inc
insl
sub
repnz
jecxz
mov
aas
inc
and
pop
mov
lods
mov
shlb
push
cmp
rorb
nop
test
jmp
add
mov
push
adc
data16
fcmovnb
jg
dec
test
subl
jp
mov
inc
shrb
pop
adc
adc
popf
lcall
mov
inc
in
and
xor
push
fildll
inc
sub
movsl
pop
addl
push
es
cwtl
or
sub
xchg
test
sar
cwtl
xor
pop
outsl
or
cmp
dec
mov
loop
xchg
scas
dec
dec
aas
jmp
sub
arpl
pusha
jno
and
mov
aad
aam
xchg
sti
mov
push
scas
xchg
cmp
outsl
lahf
subl
mov
loop
jge
pusha
add
leave
push
or
push
cmp
sbbb
cli
out
mov
pop
cltd
dec
inc
cli
mov
or
mov
ljmp
call
cli
or
xor
sbb
pop
mov
cmp
cwtl
in
aam
pop
lock
cmc
pop
mov
call
lods
xchg
add
adc
in
dec
sbb
adc
rcl
mov
lcall
cmp
cmpb
cli
jle
in
sbb
lea
mov
push
push
pop
mov
aas
mov
shll
push
add
xchg
push
data16
loopne
push
push
sbb
push
dec
mov
fsubrs
cli
popa
mov
nop
xor
fsubrs
nop
fiadds
pop
ror
cmp
cli
cmp
pop
insl
hlt
push
cld
outsb
xchg
test
test
xchg
and
sarb
jns
sbb
ds
imul
fldenv
add
aad
rolb
xchg
mov
adc
fs
mov
es
loope,pn
jp
fnstsw
add
leave
insl
je
fnstenv
mov
mov
adc
or
cmp
cmc
xor
nop
fisttpl
sbb
mov
sbb
adc
xchg
daa
test
jecxz
cld
jb
popa
out
repnz
call
loope
jae
inc
das
mov
push
inc
in
jmp
dec
mov
mov
mov
ss
pop
rcr
je
xchg
add
sub
pop
lock
xor
rorl
lods
pop
pop
cli
arpl
pop
jo
xchg
fmul
fldl
scas
add
cmp
cmp
fstl
jno
cmc
mov
mov
push
add
scas
das
out
hlt
mov
dec
stc
pop
adc
mov
mov
jno
mov
sbb
leave
dec
jb
insb
ljmp
xchg
jne
lret
jb
pop
sbb
dec
pusha
mov
push
sub
push
roll
jae
sbb
outsl
jnp
jnp
dec
pop
loop
in
inc
repz
push
jno
out
jle
push
fcoms
lea
nop
sub
sub
push
in
sub
cmpsl
jp
and
push
sbb
adc
pop
xor
test
les
pop
pop
mov
lea
lret
mov
sub
adcl
dec
add
in
push
roll
push
ds
add
xorl
push
data16
dec
push
stos
push
scas
scas
scas
jo
lods
adc
icebp
dec
adc
and
mov
sbbb
jne
mov
mov
test
out
repz
pop
outsb
xchg
or
mov
les
outsl
jno
cmp
pusha
daa
in
cmpsb
fidivrl
les
xlat
mov
aad
out
sti
cmc
add
mov
fs
lds
or
cwtl
inc
das
jge
fnclex
orl
mov
mov
jns
cwtl
cld
sub
mov
ret
pop
jns
arpl
adc
and
jae
push
inc
cmc
xchg
pop
leave
ficompl
inc
jns
mov
mov
out
rcr
and
leave
inc
and
repnz
mov
push
push
mov
mov
dec
xchg
pop
pushf
and
int3
inc
insb
loopne
sbb
jge
dec
enter
mov
outsl
add
sub
sbb
pop
and
call
addr16
jle
push
sub
lcall
xchg
test
xchg
or
push
ret
mov
shl
icebp
sti
xor
lods
shlb
and
add
add
and
or
push
push
jmp
pop
xchg
push
push
cmp
in
mov
push
pop
test
pop
in
pusha
inc
shl
sub
outsl
sahf
push
sub
ficomps
jl
mov
xchg
mov
xor
imul
aam
int3
inc
sbb
fs
sub
insb
std
add
push
xchg
or
cmpsl
jb
lds
or
lods
mov
daa
inc
lret
and
adc
xchg
push
push
pop
mov
mov
sub
sub
scas
lods
jo
lea
and
inc
lock
arpl
imul
push
andb
mov
pop
jecxz
jmp
cmc
cmc
push
daa
sahf
adc
add
mov
je
fldenv
push
xchg
mov
jo
fidivs
iret
lods
inc
adc
out
idivb
iret
jp
stos
das
jg
int3
push
fstpl
push
gs
mov
sub
popa
lds
mov
xor
daa
out
jns
xchg
push
mov
jmp
mov
ss
cmp
lods
xchg
sbb
sbb
mov
in
out
jmp
lods
dec
and
sbb
xchg
pop
and
stos
loopne
ljmp
cmp
mov
mov
dec
pop
jnp
fstl
sub
cs
xchg
or
ficoml
les
bound
lahf
mov
aas
nop
jecxz
adc
push
jae
cmp
pop
cmp
jle
jge
cmpsl
outsl
jle
inc
mov
fs
push
add
or
dec
aas
daa
add
ja
adc
ja
add
and
xor
stos
cmc
cld
push
rorb
pop
sbb
and
stos
and
mov
xchg
lcall
in
cwtl
sub
sarb
push
push
cs
cmpsb
and
sti
and
sbb
inc
andb
jp
cltd
or
sbb
push
out
add
orl
jns
sub
sub
push
xchg
nop
xor
paddd
jne,pn
es
jae
ja
jno
scas
cld
repz
or
icebp
xchg
or
int
inc
mov
ljmp
fstps
sbb
sub
cli
nop
lea
fidivrl
sbb
das
sub
xchg
lret
mov
mov
lods
iret
popf
scas
sub
sub
cmp
out
cld
filds
lds
mov
sti
scas
ret
hlt
xchg
dec
push
lret
jg
jecxz
adc
xor
rcrl
mov
sbb
add
and
sub
sbb
jne
inc
test
repnz
dec
inc
xchg
lret
cmc
jbe
sahf
je
insb
push
push
or
je
addr16
xor
jmp
cmp
movsl
sti
popa
jo
sar
loopne
or
subb
inc
adc
ss
lcall
dec
test
xchg
add
cld
repnz
insb
or
ss
outsb
ja
cmc
or
data16
sub
int3
testb
xchg
mov
fisubl
insb
lret
sbb
xor
add
fsubrl
not
xor
test
fsts
xchg
cmp
dec
mov
scas
test
adc
imul
aam
subb
xor
mov
ret
jge
test
shr
jp
imul
pop
mov
cmp
aam
mov
xor
es
shrl
notl
cwtl
lea
lret
jmp
movsl
div
adc
pop
jo
repnz
clc
push
lret
loop
sti
xchg
xchg
inc
xchg
movsl
xchg
add
movsl
loope
je
rcl
loopne
push
inc
ds
sahf
xchg
mov
dec
in
jb
push
scas
mov
loopne
mov
mov
mov
lds
aam
ds
insl
mov
or
push
stos
cli
add
cmp
jmp
dec
mov
xor
or
or
aam
pop
mov
jge
pop
xor
push
sbb
pop
fdivrl
ja
pop
xorl
gs
mov
dec
iret
inc
iret
aas
and
fidivrs
lahf
dec
movsl
inc
pop
mulb
jmp
adc
lret
mov
jecxz
gs
jmp
xor
loopne
cmpsb
or
fistpl
aaa
je
mov
mov
mov
dec
rcr
out
sbb
cmpsb
jmp
sbb
push
shrb
cmpsb
mov
xor
mov
ret
je
fisubrl
out
or
das
push
and
push
dec
mov
cmp
call
fstl
add
push
pop
pop
jae
pop
inc
xchg
rolb
icebp
mov
stc
notb
push
loop
out
adc
icebp
mov
and
push
adcl
out
or
lea
dec
shrb
in
xor
nop
insl
cmpsb
jno
inc
mov
fs
fstpl
in
lock
jge
js
cmpsl
aaa
shlb
sti
add
lahf
mov
cmp
sahf
dec
popa
or
mov
adc
movsb
cwtl
arpl
push
stos
ret
mov
dec
mov
pop
xor
xchg
clc
into
sub
pop
outsb
pop
mov
and
xchg
fsubs
stos
mov
into
adc
adc
out
enter
outsl
sbb
or
mov
lods
xchg
cmpb
cli
cmp
mov
fdivl
sub
jmp
movsb
sti
and
sub
movsb
push
push
pop
into
add
dec
test
mov
iret
mov
inc
xchg
test
xor
and
data16
fisttps
mov
int
pop
fwait
mov
push
addr16
andl
pop
hlt
push
inc
add
mov
addr16
fmull
test
loopne
pop
push
mov
pop
jbe
mov
adc
xor
in
das
mov
les
jae
inc
pop
add
mov
in
mov
cmp
std
ss
xchg
scas
fs
cmp
movsl
js
mov
ss
into
xchg
lea
popa
mov
shl
and
cmpl
repnz
inc
push
pop
test
adc
and
inc
xchg
xor
jg
in
mov
or
and
fiadds
lret
cmp
adc
cmpsl
out
xor
scas
mov
les
mov
roll
inc
ljmp
add
loop
sub
dec
cmp
scas
ja
imul
je
add
cmp
add
ret
dec
mov
inc
call
mov
mov
or
sbb
sub
mov
mov
mov
xor
enter
out
inc
lods
daa
fdivs
les
and
jg
inc
aad
pop
and
cmp
cld
movsl
jo
pop
push
mov
or
jge
leave
pushf
push
add
std
jecxz
out
sub
pop
lock
lahf
cmc
inc
fists
pop
cli
shll
and
sub
xchg
fs
push
push
pushaw
inc
pop
cmp
mov
adc
fistpl
jo
subl
fmull
or
cmp
jbe
add
xorb
jg
jmp
jb
xor
add
orb
insl
inc
jg
and
sti
call
loope
jmp
jns
std
adc
add
pop
jle
dec
add
shl
mov
insb
repz
outsb
xchg
icebp
leave
pushf
or
loope
cwtl
xchg
mov
loopne
dec
in
scas
dec
push
adc
jbe
mov
aad
ret
cmp
xchg
fstpt
std
les
push
jg
push
mov
ss
aam
mov
mov
jp
jo
or
ds
push
push
popf
pushl
stos
mov
sub
shlb
loop
pop
testb
into
and
xor
iret
aas
push
arpl
ja
jns
fisubrs
push
mov
decl
mov
test
push
mov
xchg
add
enter
pop
mov
aaa
dec
mov
adc
mov
lock
jmp
or
and
andb
mov
arpl
adc
aam
adc
popa
mov
push
sub
ret
jo
jmp
movsl
stc
dec
in
movsl
xor
loop
jnp
mov
pop
xchg
inc
into
xchg
sar
or
and
push
and
cmp
in
in
mov
arpl
cmc
ret
mov
push
jg
push
mov
ljmp
add
pusha
cmp
cwtl
pop
test
push
in
fldenv
cli
sbb
aas
scas
add
ret
scas
insb
jle
das
push
or
jnp
inc
es
fisubrl
into
add
shrl
cmp
call
sub
mov
inc
leave
mov
or
pop
push
frstor
mov
cs
arpl
in
in
mov
mov
sbb
pop
add
jl
adc
push
bnd
pop
inc
mov
ret
das
inc
or
out
mov
push
nop
cmp
mov
mov
pop
mov
jne
aaa
mov
inc
push
sub
jp
or
sub
aaa
lods
pushf
push
jge
pop
pop
push
adc
or
ljmp
push
sbb
jp
jno
pop
adc
stc
test
loop
adc
add
or
cmpsl
lret
push
mov
sub
xchg
dec
test
lahf
adc
pop
ret
popf
mov
out
lahf
fcmovnu
lods
pop
cltd
inc
push
pop
cmp
imul
and
or
jg
repz
in
inc
add
push
inc
in
push
adc
cmpsl
add
leave
xor
nopl
stc
jl
push
lods
jae
cmpsb
sub
cli
push
jbe
lret
rorl
out
pop
bsr
cmp
enter
push
mov
sub
imul
lret
mov
fmull
adc
jo
push
nop
shrb
bound
adc
ret
mov
enter
dec
mov
enter
scas
andl
sbb
pop
push
or
pop
cmp
dec
or
dec
jb
in
push
cmp
arpl
repz
shll
jb
nop/reserved
aad
fstl
outsl
pusha
les
rcll
sti
scas
mov
inc
movsl
call
jg
mov
mov
mul
test
std
mov
xchg
or
popa
stos
push
scas
mov
dec
mov
push
fiaddl
mov
add
out
pop
cmp
pop
sbb
dec
sub
out
dec
ljmp
lahf
or
mov
imul
jecxz
mov
mov
test
into
jp
lods
push
mov
imul
popl
pop
cld
inc
sti
xchg
clc
xor
repnz
xchg
test
ret
mov
jmp
push
les
sbb
sub
lds
aam
test
out
pop
hlt
stos
and
fs
sti
outsb
outsl
xor
shll
inc
cltd
xchg
rep
cwtl
das
add
xchg
movsb
dec
stc
jle
hlt
xor
fbstp
in
push
movsb
fisttpll
cld
sarb
fcmovnb
jns
jne
push
xchg
iret
pop
xor
stos
mov
into
and
mov
or
mov
sub
lods
inc
fcomi
xor
jns
sbb
das
push
sarl
jmp
adc
cs
adc
sbb
push
jecxz
or
divb
fadd
sbb
jb
xor
movsl
mov
jmp
adc
push
xchg
pop
xor
inc
xchg
fsub
mov
xchg
lea
xchg
jle
and
adc
sti
jnp
add
mov
in
dec
or
inc
sbb
pop
int
clc
fistps
int3
cmpl
push
or
cld
leave
push
ret
jo
leave
dec
dec
push
popa
xlat
stos
stc
lods
sbb
fst
cmc
xchg
mov
mov
es
imul
in
mov
adc
inc
andl
fwait
neg
fdivrl
jnp
ffreep
inc
rorb
insl
out
add
push
sbb
scas
popf
roll
add
mov
jecxz
xchg
stc
ret
xchg
shll
pop
inc
jge
or
push
cs
sub
adc
fisttps
push
xor
jno
sbb
lcall
xor
add
andb
dec
movsl
mov
dec
or
xchg
adc
test
sbb
add
xor
movsl
mov
ret
insb
fdivrs
push
push
cmpsl
fs
xchg
mov
add
add
ds
push
xchg
mov
xor
out
xor
pop
pop
shll
and
xor
push
mov
mov
fldl
jg
fimull
mov
ficompl
filds
jbe
fldcw
subl
bndstx
fisubrl
sbb
lods
push
jb
int3
repnz
orb
sbb
mov
into
rolb
adcb
out
daa
aam
dec
push
out
mov
push
cmp
pop
and
pop
add
jge
adc
nop
push
into
cmp
cltd
dec
add
and
add
inc
lods
cmp
pop
test
cltd
sub
in
sub
xchg
ljmp
fs
arpl
ds
mov
test
add
pop
je
push
jmp
inc
fdivrp
sub
filds
lods
sti
das
int
mov
adc
xchg
cmp
sbb
jb
fbstp
or
xor
cwtl
add
pop
stc
ret
pop
js
cltd
bound
sbb
jne
decl
mov
sbb
scas
mov
mov
mov
mov
mov
call
sarb
mov
mov
jbe
sub
or
jmp
mov
aas
mov
xor
adc
sbb
or
xrelease
ds
xchg
jl
rorb
sbb
in
daa
lahf
lods
bound
push
push
lods
jle
push
stos
mov
push
lock
dec
push
lock
pop
pop
mov
and
lret
out
cmova
xor
in
cli
and
in
push
mov
jno
add
jmp
shll
aad
xchg
sahf
or
push
rolb
out
sarb
insb
nop
roll
push
xchg
pop
fidivl
or
push
aaa
add
pop
into
or
inc
mov
pop
rcr
sub
jns
xor
jp
data16
mov
adc
push
incl
pop
in
mov
or
inc
mov
lret
lret
notl
cmp
repz
dec
dec
pop
cmc
cmp
je
jp
clc
repnz
mov
rcrl
cli
jge
mov
adc
pop
pop
imul
movsl
xor
inc
fdiv
cmp
sbb
jge
pop
scas
pop
loop
sarb
add
mov
pusha
adc
or
jns
jge
lret
rcrb
mov
cmc
xor
daa
adc
xlat
out
push
jmp
insl
jne
call
xchg
lret
adc
mull
cmp
push
jmp
out
stc
pop
inc
lret
shrb
cmpxchg
in
adc
in
sbb
ds
lcall
cld
mov
sbbb
lods
xor
xchg
int
movsl
gs
mov
fstl
repnz
or
add
mov
or
sub
sub
das
ds
mov
lods
int
neg
aaa
test
cli
sub
test
movsl
mov
test
insl
and
hlt
dec
inc
mov
stos
xchg
xor
lcall
aam
pop
sbb
xor
jnp
nop
iret
push
sub
into
ror
sbb
fs
jb
sbb
push
sub
mov
push
cmp
or
jbe
adc
fnsave
inc
rcl
sbb
mov
or
mov
jg
mov
into
fstpt
xchg
imull
sti
add
insl
jg
jecxz
push
cld
imul
mov
or
nop
cld
jmp
sbb
hlt
xlat
add
out
sbb
push
inc
cmp
mov
xlat
push
add
loope
xchg
dec
xor
mov
roll
xor
pop
xchg
movsb
aad
and
imul
or
nop
inc
xchg
sahf
cli
sar
dec
js
mov
adc
aam
arpl
stos
pop
fcomps
enter
or
cwtl
das
mov
push
shr
cmp
int3
cmp
xchg
inc
dec
lock
xchg
aad
mov
dec
clc
js
pop
or
add
das
mov
xlat
inc
pop
and
insl
inc
and
add
mov
adc
dec
mov
mov
or
es
sub
xchg
xchg
movb
psraw
std
dec
fistl
stc
mov
add
push
pushf
cmpsl
add
push
cmp
leave
sub
scas
jnp
mov
call
scas
inc
stos
pop
cmp
cmpsb
shl
mov
jp
leave
mov
cld
movsb
mov
push
pop
lods
mov
sub
mov
add
pop
cmc
mov
insl
aam
inc
xchg
pop
and
popa
push
xlat
fsubrs
arpl
xor
adc
mov
scas
jmp
mov
mov
dec
sarb
scas
sbb
int3
sbb
mov
dec
mov
add
ficompl
orl
dec
dec
push
imul
fcmove
mov
addr16
mov
xchg
mov
pop
or
cmpsl
jle
xor
sarb
push
imul
sub
jmp
pop
lds
mov
mov
fwait
jg
adc
mov
cmpsb
jmp
cmp
je
rorl
pop
popa
inc
in
ds
mov
push
sbbb
stos
out
mov
out
test
pushf
adc
and
add
or
jle
sbb
aam
sbb
repz
sbb
enter
gs
push
cmc
jle
xor
outsb
pop
ja
and
pusha
out
dec
inc
popa
fcoms
sbb
insl
cmpsl
push
lods
arpl
sbbl
mov
repnz
ficompl
outsb
add
hlt
iret
pop
hlt
call
add
sbb
xor
add
push
xorb
sub
xor
gs
nop
or
add
inc
mov
in
cmc
test
stos
mov
mov
cmp
andb
mov
xchg
std
push
es
imul
mov
sub
jno
xchg
out
mov
cmc
pop
in
jnp
xchg
mov
pop
sub
cmpsb
es
test
leave
add
cltd
stos
or
test
push
add
jbe
cmpsb
adc
jae
int
add
pop
scas
inc
pop
sti
test
sub
test
add
shll
ret
mov
jp
mov
lea
dec
mov
xchg
sbb
shll
addl
in
not
cmp
sar
ja
push
in
es
andb
sbb
cli
popa
lcall
mov
in
cmc
aas
lds
rsm
adc
sub
jo
push
mov
or
sub
shll
in
mov
fmul
repnz
jecxz
dec
xchg
xchg
xchg
hlt
pop
jno
xchg
cltd
mov
cli
xchg
lahf
xor
in
or
mov
mov
fdivrl
imull
ror
jg
outsl
mov
jecxz
call
out
lcall
pop
aam
and
cwtl
roll
cltd
mov
filds
mov
fcoml
mov
inc
ret
mov
xchg
dec
dec
cwtl
lahf
cmpsb
push
pushf
cwtl
pop
insb
out
int3
ret
cld
jnp
inc
mov
sbb
sbb
in
enter
fmul
test
jle
es
jb
or
or
fbld
ja
shlb
push
xchg
popa
push
add
dec
scas
sti
into
mov
push
loop
pop
mov
nop
inc
sub
movsl
enter
xchg
ss
notb
xor
fcmovnu
sahf
loope
call
fwait
jg
mov
ja
popf
lea
aam
pop
mov
test
scas
mov
jae
js
in
in
sbb
das
gs
psrld
dec
dec
xchg
cmp
loopne
mov
mov
repnz
aam
cmp
fs
popf
fidivs
rcl
loopne
jecxz
pop
es
xorl
lods
push
frndint
mov
dec
fists
xorl
fs
xorb
jns
or
mov
push
mov
pop
xchg
fucomip
xor
mov
fwait
cmp
lock
xchg
lret
fcoms
pop
lcall
inc
xchg
inc
call
fisubrs
dec
cs
rcl
lods
xor
sbb
das
stc
mov
xchg
mov
sub
fwait
ss
ret
jl
inc
add
jp
xor
aaa
xchg
xor
sarl
ret
push
and
adc
popf
cmp
push
xor
add
test
test
call
cli
ja
cs
iret
mov
and
ja
ss
test
loopne
test
incl
mov
jno
int3
add
stos
mov
jmp
add
pushf
xchg
add
shlb
push
lds
inc
push
call
arpl
mov
lods
pop
rcll
xor
jge
sti
icebp
jae
out
insl
mov
les
ror
pushf
int
adc
imul
sbb
mov
add
sbb
repnz
ret
push
mov
stos
mov
xchg
popf
test
mov
mov
std
bound
movsl
xchg
pop
cmc
lret
cmp
int3
sub
push
or
adc
and
imul
xor
sahf
pop
pop
push
addl
jecxz
mov
dec
fldenv
xchg
flds
es
in
call
inc
add
add
xor
test
lret
rolb
inc
notb
mov
pop
push
mov
ret
mov
inc
popa
sbb
pop
push
push
sub
andl
sbb
xlat
push
fdiv
or
in
mov
and
loop
pop
xchg
mov
ljmp
loopne
gs
or
mov
xor
in
fbld
cmp
cld
outsl
jp
xor
in
pop
push
pop
hlt
push
aam
daa
fildll
mov
xor
fdivrl
out
rorb
mov
push
lock
push
shrl
out
ljmp
add
clc
add
out
rolb
imul
cld
enter
jmp
cmc
and
data16
gs
imul
add
or
push
pop
mov
pop
mov
mov
sub
jno
dec
add
jmp
mov
jmp
xor
mov
push
or
mov
int3
add
test
push
test
stos
or
mov
pop
mov
mov
inc
test
pop
cltd
ljmp
and
sarl
int3
dec
sub
out
fnsave
pop
sbb
sbb
inc
aas
jecxz
test
dec
xor
dec
mov
fimuls
int
movsb
stos
pop
lahf
mov
insb
shlb
mov
adc
adc
fisubrs
xchg
pop
or
push
dec
jmp
add
jnp
pop
icebp
out
clc
fistpl
push
call
or
stos
int3
inc
sbb
mov
adc
popf
mov
cmp
adc
inc
aad
inc
mov
mov
mov
push
dec
add
out
dec
pop
push
iretw
mov
sbb
nop
push
daa
stc
adc
test
mov
jg
mov
adc
and
jns
push
insl
lock
cmp
inc
sub
pop
lea
insb
stc
lret
andb
aam
loope
mov
add
imul
data16
fwait
loope
ret
or
add
jae
shlb
push
stos
mov
jne
mov
inc
jp
and
out
pusha
sarl
add
outsl
pop
mov
aad
dec
adc
dec
inc
xor
xorb
lods
rolb
push
lods
add
pop
mov
mov
jmp
xor
test
xorb
mov
bound
pop
in
sti
mov
push
enter
movsb
cld
jp
movsl
sahf
je
push
rep
fidivs
sbb
sub
imul
xchg
les
mov
adc
jae
mov
xlat
pop
inc
popf
add
add
les
xor
dec
fildl
aad
mov
sti
mov
xor
out
fbstp
fisubl
fs
movsl
ficoml
or
adc
xchg
push
hlt
inc
popa
push
xchg
icebp
push
xor
cmp
in
roll
andb
dec
lods
pop
sbb
std
rcl
test
out
cmpl
enter
rolb
pushf
fnclex
in
hlt
jle
xor
adc
dec
pop
jb
mov
push
and
test
sbb
movsl
mov
jecxz
dec
mov
out
mov
mov
mov
inc
mov
jg
int
dec
insb
adcb
jo
lahf
jno
mov
ret
push
xchg
fcom
add
xlat
adc
jnp
and
xor
jle
mov
mov
sub
pop
rcrl
pop
add
sbb
fadds
fsubl
cmc
cmpsl
in
pop
mov
mov
xor
add
jp
jnp
cmpsl
sbb
mov
or
fisubrs
push
lds
pop
mov
add
push
add
movsl
add
mov
rclb
add
nop
mov
fistpll
mov
mov
cs
inc
sti
es
cmpsb
arpl
mov
nop
inc
sub
repz
rclb
rcll
dec
arpl
add
rcll
mov
mov
sub
lods
pushf
add
out
mov
call
pop
in
or
push
clc
stos
sbb
dec
cmpsb
push
mov
and
add
stos
sub
xchg
xchg
bnd
pushf
sub
xor
mov
mov
lds
in
xorl
lods
mov
aam
xchg
imul
sub
popa
repnz
sub
xor
je
xchg
out
loop
jne
pop
push
mov
cld
ficomps
aad
js
pop
cmpsb
and
test
or
fcmovne
xchg
out
add
lahf
adc
adc
xor
enter
in
or
inc
jmp
xchg
aad
cmp
pop
pushf
rcr
insl
jmp
sub
sub
lock
cli
lds
inc
push
inc
leave
jmp
popa
jae
movsb
fisubrs
mov
and
sbb
mov
scas
lea
repz
idiv
lcall
and
mul
rcl
fsubl
scas
daa
inc
push
rcr
addl
rcll
loope
mov
in
mov
fst
dec
mov
mov
test
daa
pop
insb
sahf
jnp
push
out
sbb
adc
sahf
je
jns
into
cmp
nop
in
push
movsb
or
add
dec
sub
lock
and
push
mov
adc
mov
jb
imul
mov
jnp
outsb
jmp
fistpl
cld
lahf
cmp
sbb
cmpsl
add
pop
jae
out
testb
adc
sub
add
shll
xchg
mov
mov
sbb
jae
xchg
and
ficomps
rcl
lret
add
jb
and
xor
in
pop
icebp
push
fcom
pop
add
push
test
pop
loop
jge
push
sub
mov
mov
fndisi(8087
push
push
rclb
cmp
sub
out
inc
pop
lahf
adc
pop
arpl
mov
adcb
insb
mov
sub
imul
xchg
pop
and
sbb
int
xlat
inc
ret
outsl
addl
ret
dec
inc
mov
pop
mov
jge
cmp
out
aaa
aad
pop
mov
rclb
dec
dec
dec
lret
mov
sub
sbb
jp
mov
xor
sub
sbb
push
pop
shrl
jl
xor
test
fidivl
call
inc
fdivl
enter
cmp
pop
xor
gs
xor
cs
mov
loope
pop
and
and
lahf
dec
pusha
mov
add
jg
add
fucomip
fucomp
into
sub
insl
fdivr
mov
mov
adc
xchg
xchg
cld
adc
out
cli
aaa
pop
loope
leave
push
or
cmp
mull
icebp
cmpsb
sbb
hlt
mov
mov
pop
jg
addr16
or
enter
inc
xchg
add
movsb
daa
cmp
in
fisubrs
cmp
test
lret
iret
xor
aad
cmp
jmp
repz
inc
sbb
or
xor
js
lcall
sbb
pop
cmp
jmp
push
add
es
enter
adc
pop
inc
add
loopne
jmp
pop
repnz
imul
std
dec
outsl
dec
icebp
fnstcw
aas
mov
movsl
mov
dec
scas
fidivrl
push
jb
shlb
inc
xchg
data16
jnp
rclb
in
arpl
mov
nop
inc
inc
cmp
push
fildl
mov
jbe
or
sub
sbbl
xchg
pushf
push
jp
dec
popa
pop
jbe
push
dec
loopne
sarl
sar
mov
jg
jge
aas
and
push
xlat
dec
push
mov
add
push
add
mov
mov
push
inc
cld
mov
pop
jns
adc
mov
stos
or
fsubl
mov
inc
gs
fwait
inc
xchg
ret
repnz
jnp
jecxz
nop
inc
pop
push
pop
xchg
leave
inc
sub
xor
fnstenv
cltd
mov
in
sub
pop
decb
scas
adc
jbe
movb
mov
test
outsl
cmp
push
int3
cld
jae
mov
cmp
fsubs
add
dec
andl
fs
pop
add
push
cmovo
enter
scas
sub
nop
icebp
mov
or
mul
lock
mov
mov
xor
push
mov
fiaddl
pop
sub
sub
jl
mov
shlb
mov
pop
enter
mov
lcall
jbe
sbb
push
adc
orb
out
jns
jne
nop
fisubs
push
or
popf
subl
js
popa
fistl
dec
and
push
je
sbb
nop
adc
into
inc
xor
sahf
xor
lea
sbb
ret
add
in
loop
in
mov
add
cltd
add
or
je
loopne
loop
xor
inc
lods
pop
cli
mov
and
lcall
dec
int
or
mov
js
pop
push
add
push
mov
and
xchg
mov
fsubrs
and
int
mov
and
lock
push
push
dec
sbb
and
aas
je
add
and
sub
inc
jo
mov
xor
mov
sbb
mov
rcrl
aad
lds
movsl
leave
inc
cmp
cmp
mul
ficoml
test
cmp
inc
add
pop
push
jbe
inc
sub
adcb
lods
leave
loopne
adc
xlat
inc
xchg
roll
sub
adc
jo
sbb
push
mov
jge
js
leave
cmp
out
lcall
daa
cmpsb
and
or
pusha
sub
dec
fbld
cs
les
andl
or
jae
dec
fadds
into
in
cwtl
fdivrp
aaa
orb
lods
mov
insl
or
inc
outsl
stos
shlb
sbb
inc
push
int3
jmp
dec
ja
das
fiadds
pop
add
mov
test
in
dec
jno
and
mov
mov
imul
mov
pop
xchg
adc
imul
fcomi
movsb
fldcw
out
scas
add
std
in
jmp
adc
lret
lock
rorb
add
movsl
insl
mov
movsl
jns
and
push
sbb
pushf
rolb
loop
mov
lds
lret
jne
mov
and
mov
cmp
cmpsl
mov
dec
loope
cmp
fs
xchg
les
in
pop
push
and
icebp
dec
into
sub
mov
sbb
cmp
and
scas
xchg
std
inc
dec
pop
mov
cli
cs
pop
sbb
ds
xchg
scas
adc
imul
imul
lea
mov
sbb
jb
popa
cmp
and
cwtl
test
incb
fsubl
mov
pop
pop
divl
test
mov
jo
lea
clc
rol
outsb
mov
sbb
inc
jb
pop
sub
xor
pop
aas
fdivp
pop
sub
add
adc
fs
sub
sbb
in
lods
mov
and
jg
dec
in
sub
push
add
stos
in
jg
xchg
push
xchg
cmc
adc
rcr
ss
mov
fwait
pop
pop
mov
mov
ljmp
xchg
adc
popf
sub
js
mov
outsl
jecxz
in
leave
adc
cmp
lahf
int3
les
dec
stos
mov
lock
lods
sti
xor
fneni(8087
jb
jbe
xor
push
insb
fisttps
mov
pop
add
cwtl
and
fs
mov
mov
push
push
xor
in
jp
scas
jle
lods
push
rcrb
popa
out
out
xchg
divl
lods
lds
sahf
ret
add
mov
xchg
ret
div
add
adc
xor
xor
jecxz
push
je
sahf
stos
xor
test
loope
xchg
fcom
mov
and
fwait
roll
xchg
in
pop
aam
out
mov
mov
outsl
in
adc
loope
adc
arpl
out
mov
in
add
nop
addr16
fmull
push
jno
popa
pop
push
dec
or
dec
xchg
stc
fsubr
jno
call
addb
negl
pop
push
push
pop
dec
fimuls
mov
push
lods
dec
aas
inc
adc
movsl
push
ljmp
jge
lret
fdivrs
fs
test
outsb
mov
cmpl
xor
sub
mov
fs
mov
pop
les
cmp
adc
fsubl
sub
jge
cmp
sbb
jecxz
ret
inc
call
xor
add
shll
xchg
mov
testb
add
mov
xor
sarl
sbb
shrb
push
or
aas
xchg
push
xchg
adc
fstl
sti
push
iret
fwait
mov
daa
mov
push
mov
insl
pop
lcall
aaa
and
ret
sahf
scas
ret
lret
cwtl
xchg
xorps
sbb
xchg
push
dec
testl
and
daa
mov
aaa
push
out
test
add
into
pusha
mov
es
out
pop
fmulp
mov
das
arpl
rol
inc
jmp
or
sbb
jb
xchg
cmp
lcall
lock
pop
pushf
movsl
xor
inc
cmp
and
xor
push
push
xor
scas
xchg
add
rolb
mov
mov
cs
add
mov
and
push
and
mov
sarl
pop
idiv
or
lahf
cmp
push
scas
pop
pop
in
adc
pop
inc
sub
aad
in
fwait
xor
mov
idivb
dec
pop
scas
mov
shlb
call
into
push
aaa
insl
cmp
out
and
add
lret
imul
add
push
xor
mov
loop
add
arpl
sub
scas
cmpsl
sub
or
sti
cmp
call
sbb
adc
mov
test
fidivrl
jbe
push
jge
pop
andb
shll
xchg
xlat
xchg
cmp
stc
nop
ljmp
out
mov
jg
adc
icebp
xor
andl
rorl
popf
or
outsb
dec
lock
inc
xor
adc
out
sub
xchg
pop
xor
and
sbb
jle
mov
ds
adc
fdiv
nopl
out
pop
pop
in
pop
and
mov
pop
or
ljmp
mov
outsb
notl
sbb
aam
cwtl
sub
scas
mov
int
push
ss
pop
push
cmp
inc
push
dec
addb
dec
pop
mov
js
aad
mov
add
dec
mov
sti
fprem
xchg
in
push
roll
dec
arpl
es
pop
xor
fstl
outsl
pop
stos
cmp
loope
leave
aaa
and
outsb
stc
int3
std
bound
popf
bound
dec
xchg
fxch
adc
in
adc
sub
mov
jmp
daa
insl
sbb
and
pop
test
and
mov
adc
mov
xchg
in
testb
sbb
push
inc
pop
orb
test
cs
and
pop
stos
js
outsb
xchg
jmp
sbb
cwtl
jmp
jp
dec
into
pop
leave
test
dec
mov
pushf
push
ret
dec
cmc
mov
jno
inc
mov
das
cmp
movsb
push
sub
addr16
loope
cwtl
bound
inc
sub
aas
xchg
mov
dec
test
mov
loopne
pop
bound
leave
out
sbb
mov
inc
test
leave
mov
jnp
inc
sub
sbb
sahf
mov
jb
rcll
arpl
sub
mov
pop
out
add
mov
sub
and
in
add
insl
cmp
iret
push
jg
outsb
ret
ja
mov
sbbl
and
add
imul
pop
mov
jge
push
mov
arpl
adc
mov
aad
out
mov
int3
or
sbb
fldenv
in
gs
scas
and
sbbb
cmc
push
or
push
sti
bound
or
mov
insl
or
mov
pop
sub
je
inc
sbb
add
cs
adc
or
pop
hlt
jae
add
pop
imul
jae
xchg
in
psllq
pop
call
aaa
adc
sbb
insl
push
das
xchg
stos
aad
xchg
pop
adc
repz
rolb
mov
mov
sbb
ljmp
stc
push
mov
sbb
out
scas
outsb
lods
lock
arpl
jmp
lock
int
in
push
push
gs
mov
pop
sahf
in
dec
sub
mov
sub
mov
xchg
push
andb
repz
cmp
or
loopne
mov
out
les
mov
jmp
xchg
or
loop
xor
sub
mov
and
jl
test
cmpsl
or
push
jecxz
filds
push
out
imul
push
and
dec
pop
mov
sbb
out
xor
bound
outsb
ret
mov
xor
or
nop
sbb
dec
inc
sbb
jecxz
push
outsl
incl
arpl
mov
scas
leave
std
pop
out
jbe
dec
jge
inc
loopne
xor
test
push
imul
xchg
scas
xchg
mov
add
aam
mov
scas
icebp
push
sti
test
or
aam
dec
cmp
das
ror
das
cmp
xor
sti
repnz
adc
cmc
add
std
mov
pop
sbb
vmovdqu
es
push
nop
hlt
das
std
out
and
call
sub
mov
mov
imulb
test
and
xchg
les
xchg
in
jb
or
cmpsb
push
mov
mov
in
push
add
and
notl
insl
xchg
push
rorb
push
test
jle
push
out
and
add
stos
jno
adc
push
js
xchg
sbb
sbb
out
pop
mov
xor
push
jecxz
push
lods
lods
cmp
cltd
push
mov
sar
and
lahf
jmp
cmpsb
lock
out
mov
repnz
xor
test
lea
mov
cmp
lods
aas
xor
gs
aad
xor
and
ret
xchg
adc
jnp
or
scas
jmp
es
gs
scas
and
jge
jae
adc
sbb
jne
xlat
pushf
shl
and
xchg
lock
cmpsl
leave
mov
je
addr16
mov
test
xchg
and
ljmp
push
ja
cmpsb
sahf
pop
xorb
mov
sahf
xchg
ss
ljmp
sbb
mull
inc
scas
addl
add
andl
adc
leave
xchg
jnp
pop
outsl
aas
mov
mov
xchg
popf
push
xchg
and
test
stc
es
orl
sbb
push
data16
push
push
jg
or
dec
or
pop
mov
data16
ljmp
cmpsb
mov
nop
push
pushf
dec
xchg
mov
loop
mov
mov
sbb
outsl
mov
adc
test
enter
jmp
inc
hlt
xchg
jnp
inc
ljmp
xchg
mov
cmp
xor
inc
mov
jne
push
imul
daa
lock
xchg
rorl
mov
xchg
inc
cmp
jmp
mov
mov
orl
pop
lahf
adc
mov
or
movsl
jg
xor
negl
insl
out
mov
push
ja
ret
mov
shlb
cmp
and
aaa
lret
arpl
fiaddl
sub
hlt
mov
fwait
jecxz
add
ja
xor
pop
inc
loope
pop
xchg
lea
je
jne
sub
dec
and
setbe
loope
jne
jns
iret
aam
bound
xchg
dec
jbe
xor
sarb
loopne
aaa
mov
imul
jg
xchg
cmp
mov
ret
aam
mov
cli
inc
sub
sub
aas
add
sbb
or
notl
add
fdivrl
shlb
outsb
sbb
add
cmpsl
rcll
xchg
dec
jo
mov
or
mov
nop
hlt
ds
sub
loope
out
hlt
cmc
js
in
jbe
xchg
pop
sti
mov
sti
lock
aas
push
in
dec
xor
repnz
call
add
xchg
push
add
bound
push
push
int3
xchg
hlt
call
push
ret
or
lea
xorl
gs
sbb
cmp
aam
pop
sub
mov
leave
push
imul
push
lods
xor
test
pop
scas
mov
negb
adc
inc
cld
push
xor
sarb
pop
fisttps
mov
inc
addr16
cmp
jae
mov
insl
dec
inc
inc
mov
sub
loope
push
imul
mov
mov
jne
sbb
jo
and
mov
jmp
shlb
leave
fwait
cvtdq2ps
loop
push
inc
pop
pop
out
and
or
push
mov
adc
add
mov
and
jecxz
add
xor
xor
pop
push
gs
pop
xchg
mov
ror
ja
imul
loope
cld
shlb
outsb
adc
cli
xchg
ja
mov
xchg
xchg
add
sbb
inc
adc
pushf
push
mov
ret
clc
mov
cmp
ljmp
aam
sub
and
add
cmc
push
pop
or
add
std
popa
aaa
and
jmp
mov
jge
outsb
dec
adc
adc
hlt
loope
sbb
or
jecxz
mov
or
pop
int
or
cmovg
dec
and
adc
push
stc
repnz
add
iret
and
cs
shll
cmp
sahf
and
sub
mov
aaa
xchg
das
xor
adc
in
dec
repnz
dec
jnp
rep
insl
push
sub
xchg
push
repz
xchg
mov
cmp
adc
cli
adc
or
inc
int3
call
jl
add
cmp
xor
sti
cmp
pop
mov
bound
xchg
cmp
dec
insb
jns
scas
xchg
dec
test
loopne
shlb
and
cmpsl
add
lcall
mov
js
sti
dec
popf
add
mov
jl
popf
mov
and
or
pop
out
loopne
outsl
fcompl
or
repz
inc
mov
and
or
fsubrs
jge
leave
pop
cltd
pop
iret
jbe
stc
sbb
stc
push
inc
addr16
in
icebp
movsb
scas
jae
arpl
rcl
test
push
push
mov
dec
fiadds
sub
xor
push
adc
mov
mov
adc
es
xor
add
inc
and
sub
pop
ret
imul
subl
aam
cmp
push
cmpb
lods
inc
jmp
outsl
sbb
or
dec
das
jle
call
pop
or
jb
mov
jecxz
addb
jno
or
push
or
pop
push
cs
inc
aas
in
jp
jns
rorl
cmp
lods
int3
lds
inc
inc
imul
adc
jno
push
or
movsb
stos
sub
loop
and
mov
cmp
fnsave
push
adcb
sti
cmp
pop
hlt
sbb
jmp
sbb
and
xchg
pop
inc
jb
pop
addb
dec
push
dec
add
adcb
aaa
mov
mov
out
xchg
mov
loopne
mov
xor
sbb
repz
inc
scas
movsb
mov
xchg
cmp
sub
mov
jl
sub
lods
sub
sbb
cmova
repnz
adc
fidivl
mov
push
add
mov
cwtl
arpl
sbb
cs
int3
loope
cmp
dec
sub
jle
mov
dec
adc
xor
repz
sub
push
ljmp
adc
xor
xor
mov
add
pop
cmpsb
clc
fwait
out
and
fxch
push
jmp
sbb
inc
push
cmp
bound
mov
xchg
mov
sbb
cmp
in
lcall
fnsave
cmp
sub
fcomi
repnz
push
push
inc
lods
fmulp
inc
xor
and
sub
cmp
insb
or
imul
inc
cmp
stc
scas
push
pop
push
movsb
adc
push
aad
mov
outsl
add
mov
cld
xor
dec
jecxz
pop
sbb
sub
sbb
and
cmp
ja
and
inc
mov
popa
sub
repz
fldt
mov
xor
mov
push
rcrl
push
or
shlb
jbe
ss
push
leave
movsb
adc
sbb
mov
add
daa
pop
dec
loopne
xchg
pop
fwait
sub
lea
fwait
push
rolb
outsb
or
adc
push
jno
mov
add
push
stc
rcr
movsb
jl
and
add
lds
sub
pusha
jmp
fimuls
roll
pusha
outsl
xor
xchg
mov
orl
das
pop
bound
dec
xor
rcrb
je
pop
jecxz
sbb
jg
mov
loopne
pop
cwtl
jo
out
ja
stos
mov
subb
xor
aad
orb
repz
icebp
jmp
inc
subb
cmpb
cmp
cmp
mov
repnz
in
sti
cli
aad
addr16
adc
cli
ret
cli
mov
test
std
pop
dec
adc
mov
cwtl
sub
add
daa
sbbb
jne
in
jae
mov
or
jmp
not
repnz
addr16
jo
sub
mov
sbb
cs
sbb
push
inc
push
and
sti
mov
add
lods
add
aas
xchg
adc
ret
mov
mov
jle
jp
adc
into
mov
push
es
mov
push
stos
sub
pop
daa
lea
inc
push
push
dec
fstps
js
test
push
mov
mov
adc
dec
inc
out
aaa
push
inc
add
adc
xor
movsb
ret
xchg
sbb
fldenv
cmpsb
mov
mov
mov
mov
sub
rolb
adc
aam
cltd
dec
pop
mov
cwtl
sbb
lcall
fnsave
jle
aaa
inc
mov
sub
outsb
roll
insb
gs
push
mov
xchg
sbbl
ss
stos
addr16
jmp
cmp
jb
cmpsb
cli
das
fcoml
lret
in
or
adc
sbb
jnp
adc
lret
xchg
cmpsl
fsubrl
fs
pop
xchg
icebp
jge
std
hlt
jno
outsl
ficompl
ret
and
sbbb
loope
stos
xchg
jae
in
xor
or
mov
dec
imul
pushf
dec
in
cmpb
or
ds
test
dec
les
out
and
lcall
scas
shll
xchg
jmp
add
std
jnp
insb
rorl
out
ja
and
sbb
sbb
cmp
mov
mov
mov
dec
clc
ret
sbb
mov
ss
inc
mov
loop
imul
xchg
adc
sbb
pop
lret
and
pop
xor
loop
xchg
outsb
sub
testb
add
jne
mov
je
lret
insb
je
jbe
mov
in
sbb
push
xor
roll
rclb
inc
dec
test
mov
pop
pusha
rcll
and
mov
jno
pop
jmp
add
data16
fiaddl
mov
in
aaa
mov
cmp
xor
add
sub
adc
icebp
into
xor
push
int3
push
dec
stos
xlat
pop
out
and
inc
xchg
xchg
mov
aam
arpl
test
loop
push
cmp
js
adc
scas
out
aam
scas
mov
test
pop
out
test
push
mov
imul
ja
sub
mov
inc
push
push
push
pusha
cmpsl
inc
call
inc
neg
adc
hlt
cmp
insb
xor
pop
aaa
mov
cmp
cltd
sbb
and
pushf
inc
and
out
enter
neg
mov
fwait
cmp
sbb
mov
adc
popf
stos
inc
xor
push
bound
stos
lret
jmp
aad
rcrb
jae
pop
jge
xor
rcr
pop
mov
xchg
jg
fbld
mov
sbb
jae
push
mov
pop
adc
sub
push
adc
pop
jl
mov
dec
sahf
push
xchg
jl
test
fcmove
int
sbb
rcrl
in
lock
mov
enter
ja
sarb
xor
jl
fcomps
jmp
fcompl
out
add
add
scas
aaa
repnz
mov
adc
into
lretw
mov
sbb
sub
lock
xchg
je
imul
stos
hlt
cli
mov
cwtl
add
sub
iret
cmpsl
xchg
adc
xchg
or
push
push
fwait
adc
jle
or
dec
sub
pop
sahf
cmp
xchg
movsl
jg,pt
sbb
sbb
aam
test
stos
push
adc
pop
xlat
shufps
jb
lea
popa
mov
inc
jno
sbb
mov
mov
or
mov
xchg
fistpl
cli
shll
fistpll
xchg
int3
adc
imulb
pop
scas
push
inc
popf
cmp
push
pop
mov
call
imul
fcomp
jne
jg
data16
divl
inc
imul
jae
loope
cmp
rorl
scas
scas
lahf
push
in
cmp
mov
aaa
lret
pop
push
jle
xchg
add
cmp
pop
jae
cs
mov
fidivs
mov
pop
fcoms
push
into
add
mov
cmp
insl
int3
pop
dec
stos
movsl
mov
sahf
cmp
jae
mov
mov
fldcw
dec
aaa
fdivrl
xor
mov
sub
loopne
mov
dec
mov
pop
jo
clc
int3
mov
or
daa
lods
jge
mov
scas
fisttpll
xchg
movsb
aad
push
rolb
push
cmp
mov
mov
test
ret
push
aam
cmpsl
push
vpandn
xchg
mov
dec
and
xchg
push
adc
scas
cmp
xorl
add
dec
scas
jnp
sahf
sub
outsl
add
sub
fwait
sahf
loope
subb
js
ds
sbb
jo
add
pop
aaa
ss
cld
clc
insb
cmp
imul
push
sub
arpl
xchg
addr16
in
pop
cli
mov
es
into
stos
inc
adc
ret
sbb
jg
js
inc
pop
bound
jbe
mov
call
mov
push
dec
aas
imul
jne
popf
nop
xor
xlat
inc
jecxz
push
mov
or
or
decl
cli
hlt
ficomps
sub
inc
loopne
int3
popf
mov
and
pop
and
cmpsl
ljmp
xor
jle
push
sbb
xchg
dec
push
lock
inc
data16
xor
xlat
push
shlb
ds
pop
xchg
jp
lcallw
es
cmp
mov
pop
push
pop
into
lods
cmp
mov
sbb
fisttpll
dec
data16
out
adc
bound
das
push
loop
push
push
je
daa
data16
insb
xchg
in
lret
fcmovb
pop
rcrb
addl
je
nop
dec
inc
into
sub
addb
dec
addl
cmpsb
in
gs
mov
call
cmp
ljmp
inc
cmp
pushf
jo
int
jg
mov
sbb
add
repz
cmp
sbb
es
mov
pop
mov
lret
sahf
pop
inc
jnp
dec
nop
lret
mov
js
adc
and
je
cld
popa
clc
push
jp
sub
data16
cmp
xchg
ret
or
mov
or
and
add
andb
or
sbb
jae
mov
cmp
clc
repz
add
cli
adc
scas
pop
sub
mov
cmc
daa
push
jmp
cmc
pop
mov
ja
push
das
sbb
cmp
leave
icebp
fdivr
es
in
mov
or
mov
hlt
xchg
mov
scas
sub
mov
xor
and
push
cmpsb
fldt
fadds
sub
ficompl
test
imul
pop
mov
mov
push
xchg
stos
sbb
lahf
ficompl
pop
aaa
mov
js
loop
je
ljmp
mov
cld
jl
and
and
fldcw
aam
cmpsl
sbbb
cld
testl
mov
mov
mov
xchg
cmpsb
pop
and
outsl
lahf
and
js
nop
sub
js
add
in
add
pop
pop
push
adc
aad
adc
mov
pop
mov
outsl
test
sbb
mov
in
cmpsl
mov
jg
outsl
stos
mov
std
sub
sub
das
or
lret
inc
out
cmp
lods
lret
ljmp
aad
ja
and
daa
lcall
jno
mov
pop
out
xor
into
aam
pop
xor
rcrl
arpl
inc
and
loopne
sbb
pop
sub
pop
cmp
pop
insb
test
and
sub
jae
outsb
adc
fnstcw
jno
jno
jns
sbb
mov
mov
sub
sbb
mov
fisubrl
pop
add
rcrb
adc
popf
lcall
lret
jp
push
push
in
shll
pop
adc
xchg
leave
loope
lcall
mov
jl
sbb
jecxz
cltd
cmp
ljmp
lods
fndisi(8087
or
cmp
pushf
stc
fldl
ljmp
pop
pop
pop
outsl
xchg
sub
scas
xor
mov
cmp
jle
pushf
pop
xchg
mov
cmp
lret
ret
test
dec
jmp
dec
ret
mov
ss
aad
cmpl
pop
dec
push
addl
ret
test
repz
out
or
sub
mov
enter
dec
jl
mov
mov
test
fildll
jge
cmp
ror
imull
ret
cmp
fisubs
call
jno
jbe
adc
insl
dec
fisttpl
sbb
mov
loopne
jg
adc
push
add
pop
sarl
mov
dec
rcl
in
dec
call
repz
cmp
sub
dec
daa
cli
xchg
and
xor
insb
data16
lcall
jbe
mov
push
jp
out
push
repnz
insl
pop
push
push
xchg
add
add
lods
or
ss
xchg
int3
mov
int3
lock
loopne
ret
std
pop
fdivs
out
and
dec
ds
mov
scas
xchg
xchg
adc
xor
stos
mov
insb
xchg
and
adc
push
push
movsl
sbb
loop
dec
mov
out
xchg
mov
leave
mov
cmpsb
scas
jmp
adc
mov
addl
lea
outsb
sbb
movsb
mov
mov
sub
shlb
std
adc
shrb
cwtl
xchg
jp
lcall
pop
xor
add
in
popf
sub
and
sub
ret
sub
loop
mov
jns
jb
jmp
dec
xchg
shr
sahf
xor
fisttps
xor
pop
adc
cmp
mov
add
loopne
shrb
adc
sub
dec
xchg
add
xchg
stos
push
adc
rol
lods
push
fcomp
lock
addr16
xchg
and
add
mov
lock
adc
xchg
mov
sub
bound
test
mov
dec
test
cltd
pop
enter
aaa
cmp
aaa
fiadds
outsl
movsb
sub
pop
adcl
lock
mov
cwtl
jbe
or
jecxz
pusha
mov
cmpsb
andl
mov
ret
pop
addb
lahf
mov
test
sahf
jns
div
movsl
insb
pop
gs
push
out
mov
mov
in
shlb
icebp
hlt
pop
push
data16
xor
pop
ret
mov
push
xchg
in
xchg
mov
pop
and
popa
orl
lahf
sub
jp
mov
inc
loop
jle
dec
mov
pcmpeqb
lcall
or
push
scas
mov
repz
mov
cmp
es
pop
sysexit
aad
push
or
sub
mov
sub
popf
movsl
addr16
push
dec
lcall
fsub
out
sbb
cmc
pop
icebp
pop
push
pop
sarl
iret
dec
stc
inc
cmpsb
cmp
push
repz
inc
mov
sbb
mov
pop
inc
fdivs
add
jno
and
paddq
xchg
dec
into
je
push
jmp
or
in
xchg
jg
aam
dec
push
sub
ja
shll
mov
in
daa
mov
or
add
es
std
insb
cmc
push
mov
into
xchg
insb
popf
scas
xchg
mov
mov
adc
add
mov
xor
xchg
or
popa
push
popa
xchg
insb
inc
lret
clc
push
and
fstpt
sarl
sub
int3
push
xchg
dec
cmp
and
mov
mov
into
add
adc
and
push
loope
add
inc
scas
xchg
fs
sbb
lds
scas
add
mov
inc
sbbl
imul
and
out
lock
incl
bound
pop
xor
std
adc
mov
into
push
in
repnz
leave
enter
cmpsl
outsb
xor
cmp
and
arpl
or
adc
fsubs
add
iret
mov
or
xor
cmp
loope
cmp
outsl
jp
mov
enter
shrb
iret
das
icebp
aaa
xor
or
iret
xchg
jo
aaa
cli
in
jp
add
cmovae
mov
popf
out
add
stos
andl
add
mov
outsb
cltd
insl
inc
in
pop
push
cmp
cmpsb
sub
sbb
je
roll
shlb
icebp
inc
cmp
pop
mov
fistpl
mov
jl
nop
arpl
jl
es
lea
sahf
mov
lret
xchg
and
out
out
sbb
xor
cld
out
add
es
int3
gs
imul
test
xlat
xor
ljmp
rol
cmpsb
shll
sbb
mov
cmc
ja
aaa
mov
xchg
aad
jp
and
das
mov
js
jb
inc
rorl
adc
mov
loopne
mov
push
cltd
idivb
adc
push
dec
xchg
lret
mov
inc
adc
and
repnz
inc
hlt
leave
mov
xlat
sub
pop
daa
xchg
cmc
ja
in
pop
mov
popf
movsb
xor
lret
mov
mov
pop
mov
sbb
adc
jl
dec
movsb
mov
stos
lods
cmp
nop
adc
aam
mov
jp
adc
es
sub
dec
dec
pop
mov
ret
mov
mov
lea
inc
repnz
cmp
sbb
jge
fwait
xor
push
or
dec
orl
nop
inc
xor
cmp
push
xchg
xchg
mov
mov
sbb
lahf
jbe
jge
das
loopne
dec
xor
fidivs
adc
and
inc
mov
adc
lods
mov
sarl
ret
mov
pop
sub
lods
sub
iret
xor
or
aam
mov
cmp
adc
xor
or
xor
fildl
pop
push
sbbl
movsl
rolb
rol
xchg
or
shrb
inc
push
xchg
jb
in
js
lock
xchg
mov
xchg
aaa
es
push
cmp
out
in
enter
lea
lock
ljmp
mov
in
int
or
xor
dec
xchg
push
ret
xchg
mov
jmp
sub
jle
cs
jnp
or
repnz
sbb
into
push
xlat
jmp
arpl
and
adc
mov
fistps
push
dec
test
scas
lret
icebp
das
pop
enter
mov
test
popf
jge
sub
xor
stc
and
popa
imul
test
cmp
out
mov
mov
and
adc
mov
inc
andb
rcr
insl
mov
adc
sub
push
jno
movsl
jmp
push
mov
or
lea
in
xchg
sub
insb
or
add
cmpsb
push
sub
xchg
adc
je
mov
xor
push
sbb
inc
xchg
aas
fstpl
scas
or
lods
push
sbb
pusha
push
mov
xor
jb
mov
and
xchg
mov
fs
movsb
pop
pusha
repnz
xor
stos
dec
sahf
lahf
pop
mov
cmp
enter
icebp
hlt
mov
sbb
xor
and
mov
jmp
hlt
inc
imul
insl
adc
hlt
mov
int3
mov
xchg
fsubl
sub
mov
cmp
xchg
lods
aam
fsubrp
cmpsl
jmp
les
mov
fs
cmp
mov
jo
push
ds
mov
movl
imul
inc
movsl
mov
mov
adcl
or
jns
pop
cmp
or
push
sbb
popa
imul
inc
int
lods
out
cltd
pop
push
dec
mov
lret
in
es
inc
mov
sbb
repnz
mov
mov
outsb
scas
jbe
fcoml
cmp
orl
in
int3
adc
xor
in
adc
ftst
rcrl
das
xor
xchg
gs
outsb
mov
lahf
xchg
ds
arpl
jp
adc
mov
movsl
push
mov
dec
pop
arpl
and
aas
test
popa
repnz
scas
xchg
ds
js
sbb
movsb
push
xlat
js
pop
arpl
xor
arpl
in
mov
ret
pop
imul
stc
enter
imul
leave
cmc
sub
push
or
jmp
add
inc
lret
and
in
neg
mov
mov
call
shll
add
add
pop
mov
les
jns,pn
add
mov
in
jge
shl
mov
bound
ljmpw
lods
mov
fsubs
pop
ds
cli
divb
sub
rorb
xchg
nop
mov
gs
push
pop
aad
inc
shll
mov
into
popf
sahf
jg
daa
sub
mov
stos
test
mov
mulb
inc
push
ret
jge
adc
cwtl
mov
inc
ret
add
into
test
mov
insb
mov
mov
cmp
push
clc
and
lock
jbe
std
bound
jmp
sti
sub
add
test
in
mov
pop
dec
andb
pop
lahf
data16
addb
inc
adc
mov
mov
jo
xchg
adc
push
and
stos
add
xor
adc
pop
jae
mov
lock
ret
in
xchg
out
loopne
enter
pop
jge
ja
pop
add
fwait
insb
loopne
mov
sub
insb
xor
mov
movlhps
mov
mov
mov
sub
mov
icebp
dec
ret
push
add
or
pushw
fdiv
jo
mov
das
pop
inc
imul
lahf
fisubrl
aam
je
aad
add
and
icebp
divb
sarl
loopne
mov
fstp
inc
stos
dec
flds
xchg
inc
xor
push
adc
arpl
push
jno
xor
xor
and
xor
adc
or
jp
fs
cmp
adc
mov
add
out
push
in
fstpl
dec
test
mov
jo
add
jge
sbb
pop
sbb
sub
jg
lret
fistps
jg
test
mov
cwtl
gs
sub
inc
dec
add
cmp
inc
fsubp
cwtl
push
push
pop
mov
movsb
mov
test
mov
lret
filds
cmp
lahf
pop
jp
sbb
jbe
mov
test
dec
jne
push
imul
mov
ret
stos
sbb
pop
jae
or
xchg
out
fisubrs
sub
cmpsl
mov
mov
mov
dec
fiaddl
mov
add
insl
mov
daa
test
xor
and
aaa
test
insl
mov
shr
sti
dec
arpl
xor
cmp
mov
mov
sbb
movsl
in
mov
push
xor
arpl
inc
and
add
roll
push
outsb
in
aaa
jmp
sbb
sub
cs
dec
jo
aas
sub
mov
int
or
mov
pushw
aaa
shll
inc
cmp
lock
sbb
lret
dec
push
aad
lcall
push
adc
das
mov
jno
popa
mov
inc
jmp
xor
inc
sbb
sbb
scas
xchg
mov
loop
inc
lods
lods
xchg
enter
insb
outsl
inc
push
fwait
jno
mov
dec
cltd
mov
or
cmc
and
insb
jle
jns
es
bound
push
mov
dec
insb
rolb
mov
int3
jae
and
outsl
xchg
and
and
jo
test
add
aam
cmp
rorb
cmp
daa
add
sub
incl
mov
xchg
push
cmp
dec
rcrb
push
js
or
push
sbbl
add
add
in
loope
nop
lea
test
jp
loopne
in
jns
or
mov
and
jmp
fnstenv
mov
stos
icebp
mov
push
lahf
adc
jbe
xlat
pusha
scas
call
mulb
sbb
xchg
mov
pushf
and
adc
xor
xorb
pop
push
adc
data16
xor
fs
or
mov
adc
mov
fidivrl
pop
inc
ret
jle
pusha
insl
xor
dec
movsl
mov
sti
es
mov
and
cmp
fisttps
enter
mov
cmc
cwtl
or
hlt
sub
sbb
clc
jo
mov
into
loop
es
jnp
jae
push
icebp
xlat
inc
mov
shll
jno
rcr
push
out
xor
mov
push
mov
enter
jae
pusha
cmpsb
sahf
adc
icebp
and
mov
adc
ss
push
addr16
mov
out
mov
in
std
pop
mov
fimull
pop
dec
rcr
jnp
and
xchg
ds
and
jno
add
jns
mov
pop
mov
in
scas
mov
xchg
lods
cmc
xchg
lahf
jmp
pop
adc
push
rcrl
pop
mov
pop
jmp
cmpsl
adc
pop
push
repnz
jmp
and
or
sub
or
pop
dec
addr16
mov
inc
mov
scas
add
clc
call
rclb
jmp
xor
movsb
push
insl
adc
fsubrs
mov
jb
sbb
jno
jl
inc
mov
xor
xchg
mov
aad
stos
scas
insb
inc
adc
jne
ret
cmp
jg
test
sbb
sti
cmp
fbld
movsb
iret
iret
out
ds
push
push
mov
in
jb
outsb
into
xor
mov
out
adc
push
push
dec
xchg
jmp
addr16
movsl
sub
popl
or
add
sbb
push
mov
call
int3
dec
pop
lock
cmp
sub
add
adc
sub
das
fs
mov
dec
xor
das
in
xchg
add
or
mov
int3
iret
fisubl
jmp
adc
in
pusha
add
mov
aad
xor
je
in
repnz
in
pop
cmp
adc
sub
adc
stc
cmp
scas
dec
movsl
pop
adc
rcl
je
push
xor
add
and
sbb
sub
mov
push
icebp
mov
push
lahf
push
and
insb
shll
fisttpll
pop
shll
xchg
faddp
rcrb
loope
mov
test
iret
daa
shr
mov
out
call
out
hlt
mov
bound
loope
cmc
out
sub
ljmp
or
dec
push
mov
popa
lods
sub
ret
ret
mov
mov
scas
lock
repnz
jecxz
mov
fcomps
ljmp
fiadds
cli
sbb
jno
divl
iret
inc
lret
enter
inc
xchg
jmp
dec
ret
outsl
int
rcrl
sub
mov
out
or
fsubs
mov
mov
and
scas
jo
cmp
xor
xchg
xor
mov
jle
and
gs
stos
dec
sbb
dec
jge
out
jns
or
dec
mov
cmp
xchg
mov
cmp
aam
jne
mov
or
add
stc
dec
int3
cltd
scas
push
dec
cli
pop
sbb
rcr
push
sbbl
addr16
jecxz
sbb
shlb
pop
movb
test
mov
icebp
inc
popf
and
movsb
movsb
adc
shl
test
cli
sarb
lret
xchg
fs
mov
dec
adc
in
nop
pop
jg
daa
fsubrl
cmp
testl
sbb
sbb
push
out
xchg
shr
push
imul
adc
adc
sbb
imul
subb
jle
or
call
cmp
xchg
xchg
cmp
xchg
icebp
daa
mov
std
jg
fwait
out
jge
imul
lods
mov
dec
lods
into
pop
loop
inc
or
je
addr16
cmc
clc
add
mov
inc
push
push
dec
sbb
add
cld
daa
test
sarb
mov
jns
jl
mov
std
mov
inc
or
fnstsw
lds
cmp
add
cmp
repnz
sti
subb
dec
sbb
add
in
xor
sbb
movsl
mov
jle
or
cwtl
ret
nop
jbe
movsl
mulb
ret
mov
pop
in
or
test
stos
insb
lods
fcomi
fcompl
cmp
dec
pop
shlb
push
icebp
repnz
adc
call
out
test
mov
mov
xchg
sar
outsl
in
push
aam
add
aam
js
mov
jge
les
push
arpl
mov
sbb
mov
lods
push
in
xchg
je
push
repz
mov
cmp
and
frstor
jo
pop
and
mov
shl
mov
jmp
into
lret
pop
sbb
frstor
or
add
pop
movsl
fs
or
push
mov
adc
sti
movsl
movb
scas
xor
add
push
insb
and
sbb
lds
mov
mov
hlt
test
mov
push
xchg
jae
push
dec
mov
add
adc
jno
fcmovnbe
push
cmpsl
insl
sub
dec
inc
push
les
push
pop
add
das
push
arpl
ret
jge
enter
sub
fs
test
addl
outsb
sbb
hlt
mov
mov
cmp
add
imul
lods
out
pop
test
repnz
incb
or
cs
stc
movsl
sbb
push
cltd
std
jbe
aam
inc
adc
cmp
sub
inc
push
inc
movsl
bound
mov
mov
int3
cmpb
adc
xor
or
test
aad
jg
sub
and
out
xor
and
into
cmp
gs
pop
add
bound
mov
hlt
mov
mov
push
mov
sbb
xchg
ret
dec
testl
clc
mov
mov
lods
stos
fcompl
sbb
stos
js
dec
cmpsb
aas
clc
sbb
fimuls
bound
add
cmpsb
jo
shrb
lret
inc
ljmp
dec
ficompl
adc
into
out
sbb
cmp
and
jne
push
fisttpll
add
dec
scas
dec
ficompl
push
mov
jmp
ja
cltd
leave
push
inc
cld
enter
pushf
sub
ljmp
mov
pop
pop
popa
pop
lods
je
jg
xchg
xchg
mov
adc
dec
outsl
pop
mov
leave
xor
xor
mov
push
push
int3
push
cli
or
or
movsb
mov
add
loop
rcrl
ds
jge
and
and
bnd
cwtl
pop
fwait
add
or
xor
es
adc
hlt
mov
lods
cld
or
into
sahf
mov
and
xchg
lahf
cmp
dec
jp
loopne
loope
nop
push
and
jmp
sbb
imul
xchg
lds
je
inc
enter
lock
idiv
les
das
cmp
and
mov
loop
subb
and
push
cmc
sub
pop
loope
jmp
and
xchg
fidivl
pop
inc
mov
fcmovnb
jle
xor
test
or
scas
loope
movsl
lods
sub
pop
jecxz
inc
stc
push
push
jle
rorl
shrd
xchg
push
push
das
in
xor
in
cwtl
fsubs
sahf
add
mov
adc
xchg
es
push
sub
xlat
and
jg
or
das
lock
dec
imul
rclb
scas
pushf
scas
mov
arpl
dec
jmp
stos
mov
je
sub
add
adc
arpl
pop
cmpsb
adc
out
or
push
cmp
std
add
pop
ret
xchg
xor
sti
jne
cmp
push
push
adc
xor
jns
jge
mov
xor
int
addb
addr16
mov
dec
stos
iret
std
pop
add
pop
mov
push
xor
pop
ljmp
mov
push
cld
aaa
jg
out
dec
icebp
stos
jmp
push
mov
mov
clc
cmp
xchg
shrb
rorl
aas
movsl
sahf
cmp
mov
or
xchg
xchg
gs
dec
dec
pop
xlat
adc
cs
cmpsl
sub
stc
arpl
cmp
pusha
fmull
pop
nop
shr
shr
cmp
leave
mov
push
cmc
and
mov
pushf
inc
dec
xor
loope
mov
fsub
sbb
das
adc
cli
push
jo
loop
mov
add
ja,pn
cmp
mov
mov
xorb
in
mov
fwait
lods
jnp
ss
rcll
aad
or
sub
pop
test
adc
roll
pop
and
popf
leave
adc
adcb
imul
cmpsl
in
jne
int3
mov
xchg
mov
dec
pusha
dec
and
pop
jecxz
pop
loope
push
clc
push
sub
sbb
popa
sub
lods
clc
xorl
sbbl
lock
mov
jp
pop
inc
ss
or
xchg
cli
cmp
and
jns
inc
pop
push
ret
push
sahf
aad
test
adc
mov
add
sti
ljmp
add
ret
push
mov
test
les
mov
fmulp
xorb
ja
ja
dec
cmpsb
decl
mov
or
mov
movsl
out
decb
mov
stos
shrl
add
cld
cmp
lea
pop
shrb
cld
and
cmp
ss
push
xchg
cmp
inc
cmp
or
arpl
add
ja
cld
jp
sub
ja
mov
imul
js
pusha
fs
mov
push
push
mov
mov
sub
les
lods
in
aad
inc
repz
mov
or
lods
mov
sbb
push
xchg
lods
test
test
pop
cmc
sbb
dec
loop
popf
clc
lret
mov
hlt
inc
in
push
sub
gs
inc
lds
call
and
loopne
aam
mov
mov
aam
jmp
cmp
fs
add
into
std
pushf
mov
push
aaa
dec
stos
call
inc
sar
mov
inc
xchg
sbb
popa
cwtl
jo
cltd
mov
or
mov
insb
add
icebp
mov
pop
mov
cs
or
hlt
add
scas
cmp
andnps
outsb
sbb
cli
xor
fcoml
cmpl
in
rcr
insl
leave
cmp
or
js
aam
mov
popa
pop
enter
xor
pop
inc
sub
mov
lds
or
cmp
inc
inc
mov
mov
pop
inc
pop
loopne
sbb
je
outsl
mov
scas
xchg
jns
push
mov
jb
xchg
sub
push
mov
sub
stos
add
dec
stc
add
addl
or
pop
mov
push
in
mov
add
or
loopne
pcmpeqb
inc
and
les
sahf
leave
sbb
mov
pusha
xor
movsb
ds
and
ja
stos
xorl
stos
xor
daa
imul
xchg
faddl
jp
mov
arpl
mov
mov
addb
mov
or
int
fcomps
or
xor
ret
outsb
and
les
aaa
loop
inc
xor
push
mov
stos
mov
fmul
subb
mov
xchg
pop
push
add
and
out
addr16
adc
sub
cwtl
out
test
pop
adc
imul
es
pusha
jecxz
lret
sbb
fcomi
pop
adc
in
stos
pop
adc
pop
dec
mov
adcl
rorl
fisttpll
lret
stos
insb
fcmovb
popf
mov
mov
add
pop
data16
fdiv
gs
jecxz
in
ljmp
int3
cmpsl
mov
pop
in
or
ja
sbb
cmpsl
cmp
sub
jmp
xchg
mov
cmp
mov
pusha
jmp
insl
cmp
fidivl
xchg
add
pop
icebp
orb
rcll
loope
cmc
mov
mov
int
popa
lea
mov
adc
and
inc
cwtl
dec
dec
aaa
cmpsl
arpl
iret
mov
or
scas
mov
std
sbb
and
int
mov
adc
sarl
fisubrl
jle
in
fwait
call
es
lahf
outsl
out
dec
test
or
iret
data16
jecxz
out
std
sbb
pop
add
outsb
mov
lds
xchg
and
add
sahf
inc
xorl
mov
pushf
mov
add
jbe
push
mov
and
loope
es
mov
pop
jmp
jo
dec
xchg
or
loopne
fldcw
mov
hlt
icebp
pop
dec
scas
cmp
mov
xlat
push
mov
jno
mov
mov
xor
sets
sub
sti
les
pop
mov
inc
mov
out
mov
push
push
fbstp
jp
push
sub
loop
jecxz
inc
pop
mov
xor
push
mov
lods
xchg
test
inc
inc
push
rcrb
ret
sbb
adc
xchg
xor
dec
mov
pop
subl
xchg
mov
fbld
div
popf
push
mov
lret
enter
lds
xchg
pop
jo
outsb
xchg
jge
idivl
pop
mov
lds
subb
and
mov
sti
jecxz
ss
scas
dec
xor
adc
dec
out
push
lret
dec
pop
jae
adc
inc
stc
inc
inc
les
stc
sahf
push
bsr
outsb
jp
cltd
clc
cmpsb
les
in
jg
ljmp
ficompl
mov
jbe
dec
xor
and
xchg
mov
push
int3
push
add
js
adc
fldt
ljmp
xor
mov
orb
mov
jmp
cld
ds
dec
icebp
and
mov
shlb
cmp
adc
cli
sbb
aas
push
mov
mov
ja
dec
dec
enter
mov
jp
push
cmpsb
push
daa
jbe
sub
pop
sub
push
mov
bound
mov
mov
and
push
sbb
pop
rorb
sbb
mov
popf
mov
cmp
cmp
lock
imul
fists
xchg
and
jecxz
mov
das
outsl
sbb
outsb
pushf
stos
mov
mov
jns
xchg
mov
popf
or
xchg
movsl
and
mov
lock
in
pop
rcrl
xor
sbb
pusha
pushf
adc
push
rcll
sarb
xchg
push
inc
adc
push
jecxz
cli
loope
xchg
cmpsb
aam
add
test
rolb
dec
sub
fsubrl
mov
mov
out
lods
notl
push
pop
hlt
rcll
xchg
filds
mov
ds
inc
mov
add
fdivs
add
jmp
and
mov
mov
inc
out
sbb
jmp
hlt
icebp
call
ret
mov
mov
xor
stc
mov
call
mov
add
xchg
sahf
mov
jne
push
enter
and
daa
mov
jle
mov
ja
pop
lods
xor
mov
insb
mov
dec
xchg
pusha
jmp
dec
add
add
rcrb
das
mov
add
es
sub
std
int3
push
mov
sub
inc
push
sub
xor
mov
push
sbb
frstor
jnp
lods
cmpb
inc
aam
std
jle
add
outsl
int
pop
jae
xor
mov
and
xchg
into
sbb
and
in
push
add
testl
hlt
cli
or
mov
dec
fimuls
mov
rcrb
jne
add
cli
cltd
mov
jae
aas
jo
cwtl
leave
clc
inc
sub
push
mov
mov
push
out
je
lock
into
fimull
mov
ficompl
jb
mov
outsl
fstpl
les
jo
and
pop
hlt
sbb
jp
aaa
mov
test
and
enter
pop
sbb
lahf
les
test
add
aas
incl
mov
push
inc
sub
mov
in
sbb
sub
repz
mov
gs
xor
mov
sarb
xchg
aas
out
nop
std
jp
lds
out
mov
lock
mov
lcall
stos
mov
das
cmpsl
mov
imul
dec
sbb
adc
sbb
dec
and
xchg
imul
out
pop
scas
js
cltd
and
outsb
repnz
xchg
jle
mov
mov
jbe
bound
in
sub
xchg
lods
iret
fnstsw
cmp
jns
push
push
mov
xchg
push
sbb
shrb
dec
scas
mov
and
and
cmp
ljmp
sarl
rorl
pop
push
lods
adc
xor
jmp
xchg
push
js
xor
sbb
pop
shl
push
addr16
dec
leave
inc
fs
xchg
sbb
fnstenv
in
mul
lock
mov
ud1
cwtl
hlt
push
cltd
stos
ficoms
stc
cmpsb
in
push
adc
xchg
dec
push
icebp
or
mov
insb
cs
sub
mov
jge
imul
or
sub
sub
inc
add
ficoms
and
xchg
fcomip
xor
jno
pop
pop
hlt
leave
push
jge
aas
lods
shl
jecxz
jmp
xor
inc
int
das
jne
fxtract
or
testb
jmp
das
add
adc
inc
js
pushf
or
push
out
sub
loope
add
out
pop
sbb
adc
fwait
addb
out
mov
fcomps
daa
mov
jmp
fwait
dec
pushf
push
and
stos
idiv
push
cmp
mov
push
stc
loope
je,pn
jno
rcr
inc
cltd
jnp
sbb
sti
push
outsb
scas
mov
jge
or
ljmp
out
add
shl
jo
cmp
sbb
int3
sbbb
lock
inc
stos
mov
adc
xor
or
addr16
push
or
popa
jb
adc
mov
into
dec
dec
inc
popa
jecxz
mov
shll
cli
orb
dec
test
mov
xchg
cmpsb
or
xor
sbb
xor
into
in
loop
add
cwtl
jp
insb
pop
aaa
roll
jmp
xor
push
and
popa
std
movsl
repz
in
pop
sbb
sbb
sbb
mov
pop
push
fdivs
mov
mov
adc
movsl
sub
sti
dec
cmp
inc
cld
test
or
push
xchg
push
pop
mov
rcll
dec
mov
jge
mov
push
mov
loop
push
ja
xor
scas
imul
in
pop
fnstenv
pop
cmp
or
mov
int3
lods
xchg
push
sti
hlt
xor
icebp
aaa
jmp
mov
sti
fwait
aaa
cmp
mov
insl
lock
cwtl
sbb
loope
lods
push
dec
je
lret
jne
push
mov
loop
mov
dec
lods
sub
fwait
cmpb
icebp
aas
je
cmp
dec
lcall
and
or
jp
pushf
dec
stos
icebp
mov
loopne
pop
aam
enter
xchg
jno
aam
adcb
push
sub
std
ss
ds
fsubs
push
data16
test
add
test
scas
data16
add
roll
sbb
pop
sbb
cs
dec
scas
cmpb
into
sub
add
cmp
jo
and
fbstp
imul
inc
js
cwtl
dec
cmp
mov
inc
ret
and
pop
xorl
fwait
lret
or
push
xchg
sub
push
jno
gs
xchg
negb
test
xchg
sub
andl
push
add
xchg
xchg
pop
xchg
js
loop
mov
mov
in
inc
dec
test
xchg
arpl
stos
sahf
in
andl
xchg
add
pop
divl
lods
popa
adc
add
idiv
dec
fnstcw
sbb
pop
stos
ret
cs
mov
pop
cmp
popf
push
ret
mov
and
loope
aam
or
frstor
lret
movsb
inc
or
out
jnp
cmp
addb
gs
or
loope
negl
shl
out
xchg
test
sbb
adc
mov
popa
or
pop
imul
lds
cmpsb
mov
insl
mov
imul
inc
lcall
push
add
jl
xor
hlt
mov
es
sbb
or
into
mov
and
ror
pop
sub
sarl
jecxz
cli
mov
mov
stc
int3
push
add
sti
jecxz
cltd
out
cmp
mov
ret
popf
push
sbb
aas
mulb
mov
cmp
daa
mov
arpl
loope
mov
add
sub
mov
pop
fstl
or
lds
mov
hlt
ds
aad
xchg
mov
stos
jbe
add
or
test
or
testl
mov
aad
mov
jne
out
mov
dec
xchg
sti
fcom
dec
adc
pop
dec
pop
test
pop
or
pop
mov
call
aam
int3
xor
xor
jle
rclb
and
sub
loop
out
and
pop
sbb
mov
enter
sbb
mov
adc
sub
testb
ja
xor
mov
ljmp
sarb
insl
jg
pop
clc
cmp
popa
mov
and
add
jnp
add
loopne
add
lock
cwtl
gs
cmp
and
push
fcoml
cli
call
sub
xchg
hlt
shlb
mov
pop
pop
sbb
sub
iret
testl
fxch
repz
in
jle
cmc
fisttpll
test
jno
andl
mov
add
mov
jecxz
pop
xchg
repnz
lods
loop
fwait
sbb
inc
test
mov
pop
mov
xor
adc
jg
aas
sahf
jnp
hlt
inc
scas
popa
insl
sub
enter
sub
icebp
gs
lret
cmpsb
or
mov
sbb
popa
and
jnp
adc
fs
xor
aas
pushf
mov
mov
mov
jge
push
xor
hlt
dec
subb
fsubs
push
jbe
and
les
int
jecxz
xchg
js
xor
add
pop
xchg
movsb
daa
mov
shl
fwait
les
jl
jecxz
js
push
insl
add
jne
pop
xor
pop
jl
and
sub
xchg
jb
insb
imulb
jecxz
dec
pop
das
sub
xor
pop
adc
jae
lods
mov
pop
jg
test
lret
xchg
pop
add
pop
lds
and
mov
ret
loop
jg
pop
xchg
sahf
mov
dec
out
lret
in
adc
ja
fucom
add
test
sub
pop
out
xor
add
cmp
cmp
cli
mov
mov
dec
rol
push
stos
clc
dec
sbb
jne
sub
out
stc
mov
std
mov
mov
ljmp
stc
testl
cmp
test
xor
movhps
dec
sbbb
fnstenv
mov
cmp
out
dec
gs
push
popf
ja
hlt
scas
decl
sub
pop
aas
addr16
pop
enter
cmp
ret
xchg
pop
mov
push
push
sbb
or
mov
add
loop
mov
fdivrl
insl
aad
mov
or
add
jo
insb
shr
mov
jne
inc
and
out
int3
shlb
cmp
std
mov
movsl
inc
inc
mov
aad
imul
movl
mov
outsb
push
push
adc
fisubrs
loope
es
fwait
xchg
ja
hlt
rorl
cmp
inc
loope
mov
xchg
les
in
cwtl
mov
push
mov
fnstcw
pop
in
aad
jbe
sti
call
jecxz
test
cmp
mov
xchg
mov
jae
jo
xchg
push
imul
shlb
movsl
scas
pop
sahf
fistpll
int3
adc
bound
test
rcll
mov
sub
test
xchg
movsb
ret
repnz
cmc
stc
sbb
sbb
xchg
sub
enter
mov
inc
and
sbb
pop
sub
fcomps
test
enter
xor
xchg
adc
inc
adc
push
cs
sahf
ret
inc
mov
stc
pop
fs
pop
push
and
js
js
inc
sub
xchg
and
xor
aad
pop
mov
roll
pop
je
inc
sub
loope
fildl
loope
xor
inc
and
lcall
sar
xchg
dec
imul
aas
imul
ss
loop
stos
jecxz
fdiv
pop
jo
sub
push
adc
mov
es
or
lods
jo
sbb
fsubrl
push
jnp
lods
mov
mov
lcall
int3
sbb
cmp
and
mov
fnsave
imul
cs
fstpt
outsb
cmp
dec
pusha
and
scas
xor
nop
ss
lds
imul
test
add
or
mov
popf
mov
scas
repz
int
adc
mov
fbstp
out
sbb
inc
nop
imul
push
mov
push
js
test
fs
sub
xor
cmp
jle
xor
lock
xchg
xor
pop
loop
pop
dec
aad
inc
je
repnz
xor
xor
shl
jo
aas
cmp
jae
pop
sbb
xor
mov
push
into
mov
imul
mov
scas
fcmovnb
repnz
ss
sbb
cmpsb
xor
xchg
nop
mov
cmp
testl
mov
lar
mov
mov
xlat
fnstenv
iret
jge
clc
ficoms
and
mov
mov
movsb
sub
inc
sub
and
pop
dec
lock
sar
mov
push
mov
lods
in
lret
push
lods
shrl
movsl
jbe
inc
call
cmpsl
mov
inc
ss
ret
mov
dec
push
nop
cld
xchg
jle
test
jno
mov
lret
les
test
fbld
int
pushf
fcoms
xchg
les
and
stc
lds
sub
mov
mov
addl
das
repnz
stc
jbe
push
loopne
pop
mov
pop
mov
ret
mov
int3
scas
dec
lods
mov
rolb
mov
push
test
loop
je
and
add
push
mov
mov
ds
mov
mov
pop
push
aad
push
nop
scas
mov
stc
nop
scas
jmp
mov
pushf
inc
sahf
dec
add
lods
test
push
dec
pop
sbb
repz
stc
cmp
je
dec
mov
jecxz
hlt
xchg
xor
push
jns
and
cmp
mov
or
fidivrs
mov
adc
add
jl
addr16
pop
pop
loop
jno
inc
inc
loopne
inc
jne
repnz
cmp
icebp
repnz
neg
or
sbb
pusha
pushf
sbb
xor
fsts
mov
rclb
inc
push
test
imul
daa
popa
mov
iret
add
shrl
push
add
outsb
call
daa
lret
cmp
out
iret
pop
and
push
sub
nop
test
int
or
fnstenv
xchg
ss
pop
jg
pop
aaa
movb
jno
or
mov
in
ds
inc
rclb
repnz
jle
out
ja
mov
ret
mov
mov
sub
loope
sbb
adc
push
iret
outsl
dec
jmp
mov
sbb
ljmp
call
arpl
mov
jecxz
jle
pop
repnz
popa
mov
jl
cmp
pusha
repz
push
test
push
mov
add
xchg
jo
ficomps
mov
fisttps
xchg
scas
outsb
adc
stos
dec
das
insb
stos
push
jmp
cmp
rclb
add
xor
mov
push
in
dec
adc
jmp
insb
int3
inc
push
cmp
xchg
out
movsl
repnz
push
mov
cli
jne
add
adc
adc
aam
loope
shlb
enter
int3
pop
pop
mov
aad
or
inc
cwtl
add
mov
testl
sbb
mov
les
mov
lock
xchg
push
cmp
xchg
into
sub
ja
sbb
out
cmp
push
stc
out
cmpsl
mov
lea
dec
adc
roll
pushf
and
cwtl
sbb
cli
cltd
test
pop
gs
sbb
dec
aas
jnp
jne
cs
jp
icebp
cmpsb
sbb
mov
adc
push
jmp
arpl
jne
fiaddl
test
mov
jbe
jecxz
jg
fwait
hlt
fadds
std
into
outsb
test
cmp
inc
pop
pop
push
loope
push
xor
popa
or
push
cmp
test
dec
repz
fstpt
push
into
popf
mov
and
in
mov
lss
data16
mov
out
mov
andl
inc
loopne
and
add
cmpsl
push
inc
mov
fdivrl
and
ror
pushf
ss
movsl
push
rclb
xchg
sub
outsb
mov
rcrb
jb
sti
mov
mov
mov
mov
push
push
lret
jnp
imul
orl
mov
in
mov
adc
or
mov
inc
xor
jae
and
push
test
push
bound
and
in
lret
cmp
fwait
add
test
shrb
sti
mov
in
loopne
std
xchg
fs
enter
hlt
cltd
inc
lock
and
in
ret
popf
lahf
and
xchg
mov
icebp
in
or
mov
inc
push
stc
test
fs
sbbl
popf
push
test
test
jmp
stc
cmp
clc
scas
orl
sbb
xchg
sbb
dec
call
aas
push
out
cmpb
or
add
mov
lock
pop
sub
fldenv
decb
add
das
ds
and
ds
sbb
and
mov
call
inc
dec
pop
mov
adc
inc
mov
sub
in
leave
js
es
daa
test
push
stc
dec
mov
or
add
or
inc
mov
andl
inc
jg
dec
inc
insb
call
sub
mov
xchg
leave
cmpsl
and
call
sysenter
xor
inc
pop
in
or
sbb
int
sahf
add
xchg
mov
xchg
lods
hlt
jge
xchg
roll
adc
popf
jg
mov
iret
mov
mov
test
cmp
or
lea
pop
rcr
fstl
pop
and
pop
imul
push
mov
pop
sbb
xlat
jo
xchg
sub
mov
enter
sbb
push
adc
add
out
pusha
jae
cmpsb
push
dec
sub
mov
jne
or
pop
push
sub
lock
inc
andl
cli
dec
out
cmp
ja
push
pop
icebp
std
pop
fcmovbe
lret
icebp
or
add
fisttpl
add
xchg
mov
test
ror
dec
jno
daa
fisttps
push
popf
lea
repz
adcl
xchg
and
imul
pushf
fsubs
cmpsb
dec
bound
pushf
je
cmp
fists
jnp
in
hlt
add
push
mov
xor
adc
fwait
cmp
hlt
gs
pop
nop
cmpsl
inc
in
ret
repz
mov
or
mov
loop
loopne
xchg
js
push
xor
mov
xor
jecxz
mov
lock
movsb
fwait
pop
subb
jecxz
sub
and
in
and
mov
enter
mov
xor
xchg
lods
in
fnstenv
sub
leave
jg
scas
xor
int
xor
jae
js
xlat
push
pop
loope
in
inc
shll
shll
sub
jmp
lret
push
dec
aam
sub
xchg
add
mov
sbb
mov
jmp
xor
and
jp
jbe
inc
adc
add
xor
mov
xor
fsubs
mov
push
sbb
hlt
push
test
cmp
idivl
sub
addb
mov
jns
cmp
pop
xchg
push
pop
hlt
sbb
cmpsb
aas
test
cmpsl
add
sub
das
pop
loope
and
mov
sub
rcrb
push
rcl
sarl
cmp
aad
sub
sub
out
pop
pop
sbb
pop
and
mov
fwait
mov
pop
in
push
lea
add
or
mov
mov
mov
inc
xchg
popl
aas
ljmp
sbb
hlt
inc
dec
sbbb
pop
push
mov
addr16
cli
cmpb
jb
flds
test
mov
or
inc
outsl
inc
scas
sub
cmpsl
test
cmp
add
mov
push
inc
pop
jns
cmp
mov
loop
add
adc
mov
arpl
inc
arpl
aad
cmp
sub
mov
mov
xchg
repz
aaa
in
mov
cwtl
jo
add
jne
cmpsl
mov
or
imul
cs
and
mov
imul
shl
jnp
sbb
ja
xor
sub
mov
mov
xor
inc
jmp
mov
cmp
adc
fidivl
push
pop
push
orl
imul
outsl
mov
sahf
roll
push
dec
pusha
cmp
xor
or
test
xor
rclb
pop
xor
imul
mov
pop
or
or
cwtl
sti
xlat
fiaddl
fnsave
sub
mov
lret
leave
or
insb
imul
jp
repz
cltd
scas
xlat
mov
jnp
push
daa
lods
fnstsw
in
call
xlat
xor
adc
mov
dec
dec
negb
mov
dec
lcall
mov
pop
bound
jae
in
inc
or
inc
insl
fisubs
jo
pop
icebp
pop
push
mov
loopne
rcl
sub
mov
test
fucom
negb
clc
out
add
rorl
in
into
cmpsl
mov
add
loope
xor
cmp
aaa
fwait
repnz
inc
ja
sti
and
xchg
push
mov
jle
imulb
leave
movsl
dec
loope
pop
push
aas
aas
fs
test
aam
lret
cmc
mov
xchg
push
das
add
stc
sbb
dec
icebp
and
stc
ja
mov
sti
mov
pop
gs
sbb
jns
out
imul
jmp
xchg
ja
inc
sub
icebp
shlb
jg
cmp
mov
stos
scas
in
xor
lcall
add
sbb
push
scas
mov
push
aam
jo
dec
neg
dec
mov
into
sub
jecxz
clc
sahf
lock
repz
jns
jnp
pop
push
sti
mov
jp
jle
or
jmp
sub
adc
adc
cwtl
sbb
push
lock
vunpckhpd
sub
pop
adc
pop
into
cmp
leave
jecxz
lods
out
jbe
iret
jne
jnp
inc
loope
push
rol
imul
xchg
sahf
popf
xor
mov
mov
out
ret
xor
xchg
pop
in
sub
adc
xor
cwtl
xor
xlat
fstl
addr16
or
stos
bound
sub
mov
fidivrs
mov
jae
leave
mov
in
ret
xchg
fnstsw
cltd
data16
aad
call
lods
stc
mov
in
adc
lret
jmp
cmc
mov
inc
sbb
leave
push
daa
mov
out
sti
mov
add
jo
mov
sti
mov
aas
lea
out
sbb
xchg
ds
mov
xchg
push
stc
jge
rolb
int3
and
cli
sub
mov
popf
pop
sbb
jnp
shufps
imul
dec
push
jae
jbe
not
cs
xor
xchg
loope
aaa
add
cmpl
mov
jbe
movsl
cmp
mov
orb
xchg
fidivs
mov
dec
jns
les
or
insb
std
xor
pop
shlb
test
push
dec
cmp
mov
addb
adc
lahf
test
dec
mov
pop
sub
aad
sub
xor
popl
mov
lods
cmpl
stos
sub
rclb
jb
stc
sbb
mov
fildll
pop
and
leave
inc
shlb
outsb
dec
dec
dec
mov
mov
adc
int3
and
stc
in
repz
cmp
add
jae
std
cli
clc
mov
sahf
sbb
dec
shl
or
repz
aas
fcomp
sub
push
sbb
lahf
scas
lock
in
into
loop
jle
in
div
cwtl
or
push
movsb
pushf
fwait
insl
add
jp
shr
in
ja
mov
pop
pop
pop
and
rcll
dec
mov
stos
and
sub
pop
push
xor
xchg
mov
dec
test
xor
or
mov
mov
or
pop
and
mov
mov
pop
sahf
push
je
mov
sub
scas
push
aas
nop
adc
mov
mov
add
leave
das
jae
cmp
dec
xchg
nop
push
stc
lds
mov
mov
xchg
dec
jo
inc
cmp
je
inc
inc
bound
dec
aas
dec
lret
jb
fwait
stc
push
xor
movsl
or
mov
enter
push
test
data16
outsb
test
mov
pop
xchg
adc
mov
in
xchg
inc
dec
pop
ljmp
sbb
shrb
mov
sub
push
cwtl
pop
xor
mov
popa
mov
outsl
popf
xchg
scas
popf
enter
sub
jnp
push
xchg
outsl
and
aam
xchg
cmc
mov
std
inc
ja
aam
inc
out
and
pop
aam
adc
or
jg
adc
mov
movsl
ret
xchg
insb
dec
push
mov
sub
loope
popa
ljmp
cmp
and
fwait
dec
out
dec
iret
dec
push
cmp
in
aad
cltd
cmp
dec
int
mov
lret
inc
out
xchg
mov
sub
fdivr
push
je
add
daa
fs
push
push
jb
add
aaa
mov
mov
iret
call
dec
push
loope
jns
mov
repnz
push
imull
xor
fs
test
mov
daa
pusha
or
repz
insb
push
das
dec
imul
pop
xor
xchg
lahf
fdivrs
lds
sarl
ja
scas
lods
shll
xchg
sbb
sarl
out
xor
rcr
xor
fdivrs
lods
outsb
adc
push
stos
or
in
scas
shlb
push
pop
xor
movsl
nop
pop
xchg
popa
in
test
shll
aad
js
enter
xchg
ljmp
fwait
jno
pop
inc
sbb
aam
sbb
add
jle
popl
notb
xchg
mov
cmpsb
push
inc
mov
sarb
lcall
sub
mov
cmp
idiv
xchg
lock
and
dec
jno
lea
call
jle
rol
xchg
mov
out
xor
rcll
add
adc
push
sbb
imul
adc
xor
loope
cmp
test
sar
xchg
mov
cmpsl
sub
sbb
cmc
mov
aaa
mov
mov
pop
fsubr
fisttps
in
stc
xor
mov
test
nop
xor
aad
cmp
aad
sahf
adc
scas
repz
sbb
sbb
outsb
cmc
adc
das
inc
adc
mov
pop
out
or
sbb
dec
jl
and
inc
nop
mov
ficomps
sbb
std
mov
setle
stc
pop
mov
enter
mov
pop
pop
sub
stos
or
jne
jecxz
jb
fs
scas
test
pop
and
and
int
lret
ror
neg
xorl
sbb
rorb
mov
fcompl
test
loop
cmp
mov
movl
add
pop
lahf
sbb
out
repnz
popf
loope
sbb
jo
enter
imul
jp
cmp
push
sbb
mov
push
fimuls
call
sbb
jmp
ret
stos
in
push
dec
sbb
jno
jecxz
adc
and
imul
sub
gs
mov
aam
in
inc
jns
inc
pop
add
pop
mov
into
fistpl
imul
xchg
lret
mov
setp
mov
mov
xlat
sub
shlb
rol
insb
pushf
or
pusha
int3
xor
cmp
xchg
jae
xor
sti
test
aad
negb
add
and
xor
jns
loope
push
sub
cmpsl
jmp
cmp
xor
dec
mov
fcoms
jns
ja
cmp
add
jns
cwtl
mov
cmpsb
ret
adc
push
inc
mov
repz
sub
cmpsb
jnp
test
lods
cmp
xchg
mov
add
jbe
cmp
adcb
cs
gs
icebp
and
aaa
lret
sub
xchg
inc
sbbb
mov
and
in
sbb
push
or
mov
cmp
in
lds
out
add
aad
xchg
std
shl
sub
call
addb
cmp
enter
nop
scas
pushf
pushf
hlt
jne
insl
jge
std
pusha
flds
ja
stc
fbld
stos
repnz
jno
sbb
ja
rcrb
cmpsl
enter
sbb
shr
jl
xchg
inc
clc
or
and
add
or
lock
pop
lahf
fdivl
xor
inc
push
sub
or
push
jp
dec
mov
sub
xrelease
popf
fcoml
push
add
push
jmp
jle
jb
adc
sub
push
sbb
sbb
mov
adc
lods
cltd
insl
mov
jo
mov
dec
lret
iret
loop
fnstcw
xchg
mov
call
xor
mov
mov
roll
push
movq
outsb
mov
add
imul
mov
js
add
inc
icebp
jno
or
mov
dec
outsb
or
and
add
out
shlb
or
mov
dec
mov
scas
dec
add
xor
pop
xchg
mov
lds
mov
call
pop
rcrl
stc
inc
and
test
jge
bound
shl
dec
lods
add
dec
pop
scas
xchg
popa
test
in
roll
lcall
mov
cwtl
xor
test
jne
sbb
ret
push
mov
in
xchg
mov
test
insb
jle
call
inc
pop
icebp
fucom
sahf
add
adc
dec
out
out
xor
cmpsl
sahf
add
ficoml
int3
sub
xor
jbe
fs
test
outsb
std
out
push
popa
decb
sahf
shrl
lcall
test
cmp
mov
push
loop
fstps
fs
int
push
xor
xchg
dec
adc
dec
test
pop
pop
adc
test
jne
aad
div
dec
mov
xchg
insb
pop
sub
out
fsubrs
adc
mov
inc
lret
cld
in
out
dec
sbb
xchg
fwait
sbb
pop
jnp
mov
sar
stos
mov
and
or
jle
lea
in
adc
dec
adc
movsl
bound
or
pop
push
add
mov
xor
xchg
lds
jae
xchg
push
and
rcll
aam
mov
out
repz
adc
cwtl
dec
and
or
cmp
jge
loop
jo
mov
sub
push
pop
cmp
xchg
daa
pop
push
xlat
push
fnsave
aas
test
insb
stc
mov
aam
lds
mov
loope
push
add
rcl
dec
sti
int
adc
in
dec
jge
and
lods
loopne
sbb
sub
add
mov
mov
push
sub
pop
xor
daa
js
hlt
inc
scas
jl
and
xchg
sbbb
je
scas
out
or
int3
mov
enter
inc
sub
notl
arpl
pop
cmp
ljmp
sbb
sub
adc
jae
or
fstpt
lret
test
fs
push
scas
or
loop
imul
xor
push
adc
pop
cltd
xchg
into
cmp
inc
rolb
cmp
jns
out
push
mov
mov
push
adc
cmp
sbb
or
data16
push
mov
cmpb
and
xchg
mov
push
inc
dec
les
adc
imul
xchg
jp
pop
leave
mov
out
arpl
mov
cmp
outsl
jge
jmp
mov
jb
adc
imul
mov
ja
sub
flds
ret
js
iret
pop
stos
divl
xchg
inc
push
insl
lret
dec
js
cmovp
jnp
xor
int
pop
sbb
jo
popf
ret
mov
ret
jno
call
mov
jo
mov
mov
lahf
adc
test
js
dec
sarb
cmp
sub
es
push
inc
or
xchg
pusha
insl
cld
add
sbb
movsl
out
push
jmp
add
push
xor
cmpsb
clc
mov
iret
add
in
es
adc
incl
loop
and
and
das
lret
mov
pop
mov
lods
std
lock
aam
icebp
bound
xor
mov
hlt
pop
ret
mov
pop
sub
hlt
inc
or
push
dec
cmp
push
loopne
pop
push
push
push
lahf
imul
test
pop
stc
inc
rclb
filds
add
outsl
or
je
mov
inc
jne
or
aas
push
insb
mov
addl
push
xchg
iret
test
popf
inc
nop
inc
mov
loope
cld
adc
es
mov
xor
lock
jo
cltd
inc
mov
mov
cs
cltd
in
gs
push
test
sbb
mov
aad
lcall
bndldx
dec
xlat
in
in
in
lret
jno
outsb
mov
xor
adc
and
out
shrl
xor
inc
pop
or
jmp
mov
insb
repnz
rclb
hlt
aad
fisttpll
jecxz
iret
lock
and
mov
imul
es
inc
pop
js
xchg
std
mov
and
mov
lods
cmc
loope
lds
cwtl
rcrb
adcb
sbb
imul
lods
dec
dec
leave
xor
cmp
scas
ret
xchg
into
cmp
jnp
dec
jle
outsl
ljmp
daa
out
int
fsubrl
cs
jnp
pop
mov
jp
out
pop
sbbl
sbb
jbe
cmp
ja
pop
fistpll
pop
jl
or
mov
xchg
cmpsb
inc
inc
push
ljmp
fmull
push
sti
test
mov
ljmp
dec
popa
imul
xchg
adcl
int3
stos
jecxz
icebp
pop
or
dec
mov
fiaddl
adc
jo
in
les
pop
testl
cmpsl
jle
dec
xchg
cltd
sub
push
arpl
js
mov
jo
dec
inc
xchg
dec
and
adc
out
or
fisttps
mov
or
add
push
dec
push
jmp
dec
adc
pop
aaa
sarl
int3
into
fcompl
mov
xchg
leave
mov
jl
lret
sahf
ljmp
push
pop
xor
aas
movsb
jnp
aad
dec
lds
lcall
xor
pushf
fs
jmp
pop
vmread
pop
add
out
scas
mov
xor
ljmp
repnz
mov
std
fildll
icebp
mov
adc
add
aam
clc
in
sub
sub
push
inc
mov
jle
les
addr16
mov
dec
mov
sub
mov
ljmp
mov
arpl
lret
leave
in
in
push
push
test
in
jle
push
cmp
mov
cmp
pusha
mov
xchg
pop
or
aam
aas
adc
adc
push
imul
scas
lcall
mov
out
insl
pop
les
add
pop
mov
shlb
ss
arpl
and
pop
or
out
jnp
and
xor
or
pusha
pop
fs
iret
movsb
inc
sub
cmc
mov
sbb
pushl
out
movsb
stos
aas
lods
mov
in
lea
loope
add
xchg
jne
adc
stc
loopne
jecxz
and
pusha
mov
pop
push
outsb
add
test
shll
jo
pop
inc
in
out
cmp
test
xchg
imul
shl
cmp
adc
fs
pop
pushf
mov
repz
movsb
dec
pop
cmp
int3
sarb
les
cbtw
xchg
sbb
stos
clc
lods
negl
dec
enter
inc
in
notl
inc
outsl
or
stc
and
movsl
inc
dec
stc
cmpsl
inc
push
and
push
xchg
mov
cli
push
inc
nop
lods
xor
sarl
mov
test
lahf
testl
leave
pause
jns
xor
icebp
pusha
lahf
xchg
xchg
ja
sbb
in
dec
and
push
sub
mov
fildl
fnstsw
pop
sbb
mov
cs
push
xchg
sarl
out
out
stos
push
into
orl
adc
loop
pop
xchg
adc
pop
dec
lcall
dec
inc
andb
mov
or
jbe
es
sbb
xor
in
xchg
jg
pop
scas
fsubs
xchg
xlat
fs
es
push
test
icebp
test
dec
lcall
fldl
jmp
and
test
pop
out
into
rcrl
jecxz
xor
dec
bound
clc
jmp
jb
inc
jne
les
mov
or
mov
jb,pn
rolb
nop
pop
add
mov
repnz
mov
xlat
repnz
pop
lock
in
push
into
nopl
sbb
xchg
pop
arpl
cwtl
aaa
adc
aam
icebp
dec
dec
js
fmul
adc
cwtl
xlat
fiaddl
iret
into
and
jl
insb
pusha
sub
jl
inc
je
pop
xorl
test
push
ss
xor
outsl
std
sub
inc
xchg
cmp
mov
mov
pop
icebp
cwtl
xchg
lods
fisubrl
insb
out
inc
push
pop
out
call
cmp
fwait
cmp
sub
sub
in
xchg
dec
out
inc
jno
pop
movsl
lcall
leave
xor
xchg
sbb
jns
add
pop
pusha
fidivrs
lret
clc
mov
aad
dec
movsb
sub
iret
xchg
and
je
adcl
cmc
xchg
iret
cmp
xchg
sub
sub
sub
and
lret
insl
xchg
adc
xchg
stc
inc
adc
push
mov
fstps
sub
xor
mov
or
push
mov
mov
popa
fdivs
jo
rclb
inc
mov
push
or
jg
aaa
fsubs
andl
and
rcrl
jno
xchg
lret
and
fwait
inc
cmp
test
sbb
mov
jg
dec
mov
aas
jb
idivb
aas
icebp
push
pop
cs
icebp
mov
add
jle
clc
int
xor
rclb
das
cld
jge
mov
dec
jae
jmp
sbb
roll
outsl
out
xchg
ficoml
mov
fs
push
xor
popa
sahf
cmp
mov
ret
fildll
dec
push
push
movsb
jnp
dec
sub
or
and
push
out
mov
lret
lods
and
adc
cltd
fs
jb
jl
xlat
add
pcmpgtd
push
iret
or
fimull
or
pop
ret
mov
cmp
addr16
pop
test
cmp
cmp
repnz
cs
dec
adc
xor
xor
mov
pop
dec
sub
outsl
cmp
in
cltd
jge
sub
int3
and
mov
mov
and
aaa
adc
adc
jbe
dec
sahf
gs
mov
xchg
mov
cwtl
adc
xor
jae
add
dec
iret
inc
xchg
pop
pushf
or
test
les
notl
push
cmpsb
adc
jo
sub
loop
scas
push
jbe
ret
jnp
push
mov
push
sbb
cmpsl
sti
inc
cs
data16
adc
and
xor
mov
sbb
mov
cs
sbbl
bound
fsubrs
ss
es
push
lock
mov
data16
cmp
xor
sbb
fiaddl
cmp
incl
mov
jl
test
inc
xchg
iret
das
jne
in
in
lcall
nop
negl
cld
add
mov
enter
cmp
mov
fnstsw
cs
inc
xor
mov
in
mov
xchg
aas
out
jae
cmp
ror
je
pop
aad
push
or
aad
mov
outsl
cli
scas
sbb
fadd
mov
sub
dec
ja
das
lods
aam
xor
xor
aas
sbb
xor
in
out
jecxz
mov
sub
lret
outsl
sbb
inc
push
push
aaa
jae
cmpsb
shll
jb
sbb
jne
xchg
addb
sti
sub
add
pop
pop
jns
out
mov
aam
xchg
aam
cltd
add
sarl
inc
sahf
jl
ja
hlt
push
test
jno
call
mov
es
idivl
hlt
xor
jbe
push
std
sbb
xor
add
pop
xor
mov
xor
movsl
mov
pop
ja
add
jne
rcrb
and
ror
sub
int3
push
jne
cmpb
hlt
dec
and
mov
jg
sbb
fdivrs
out
je
lods
adc
cld
sub
push
xchg
xchg
call
bound
lcall
test
scas
cmp
fwait
sbb
cwtl
push
psrld
or
test
jnp
dec
loope
leave
scas
out
test
lods
push
jl
int3
xor
jecxz,pn
insb
test
lcall
xchg
addl
sub
lods
sub
jb
sub
fs
xor
mov
lcall
mov
lahf
push
outsl
jge
gs
mov
test
fsts
test
push
fadds
adc
int3
out
int
add
sub
sub
and
fptan
test
int
mov
xchg
xchg
scas
repz
lods
jge
mov
push
push
data16
bound
lods
jl
sahf
js
cmp
xchg
adc
inc
mov
xchg
imul
dec
mov
idivb
call
jns
sbb
mov
inc
andb
jo
sbb
jae
mov
push
mov
inc
mov
out
add
int
test
arpl
cmc
and
jmp
sbb
sbb
outsl
push
subb
push
data16
and
dec
dec
mov
xor
mov
cltd
lcall
or
imul
inc
test
movsb
out
adc
mov
adc
out
or
mov
mov
cmp
add
xchg
imul
dec
cmp
jl
out
push
fildll
push
pushf
sub
push
loop
sbb
jns
addl
testb
js
daa
dec
stc
mov
push
int
and
test
out
test
negl
das
movsl
in
push
sub
cmpsb
push
jnp
loope
les
mov
xchg
add
xor
jo
std
sbb
insb
cwtl
push
mov
adc
jmp
icebp
scas
shlb
xchg
call
sbb
nop
loopne
and
test
or
aaa
jne
sti
xor
sti
mov
fs
and
add
out
test
lcall
pop
pusha
cmpsl
arpl
dec
push
and
xchg
hlt
imul
mov
push
addr16
pop
je
loope
dec
add
xor
stos
xchg
pop
dec
xchg
mov
lods
xchg
sti
mov
leave
sbb
mov
dec
mov
hlt
out
jmp
sbb
stc
stos
jge
adc
shl
and
shl
add
and
xchg
sbb
xor
out
xor
cwtl
subl
addr16
and
sub
cltd
pop
jne
jecxz
push
cmpsl
xchg
xchg
lahf
mov
mov
mov
adc
loop
jl
sub
pop
shl
loope
test
inc
pop
bound
pop
pop
in
lret
adc
push
inc
jno
push
std
jle
ret
mov
xchg
cmp
jne
ja
rorl
push
xor
popf
or
mov
sub
push
out
add
in
fwait
sahf
jae
adc
cld
sub
movsb
shrb
mov
inc
test
inc
jl
cmpsl
xchg
mov
xor
add
aas
adc
dec
ja
xchg
call
mov
or
sub
jne
insb
push
iret
jg
ja
shll
js
mov
mov
inc
das
jge
jp
in
mov
dec
cmp
adc
into
movsl
mov
andb
ss
mov
andl
loop
jno
mov
pop
xchg
pop
lock
sub
add
popf
stc
adc
jmp
jnp
incb
xchg
js,pn
jmp
jns
out
clc
dec
std
jmp
mov
jg
jno
xchg
ds
es
imul
mov
imul
ja
xor
sti
pushf
adc
pop
adc
int3
mov
jmp
out
std
or
das
aam
ret
aas
popl
loope
js
lods
push
xchg
dec
push
movl
mov
les
cwtl
leave
and
stos
mov
int3
ljmp
jge
or
lea
sbb
push
xchg
sub
dec
imul
dec
data16
ret
test
subl
pusha
ja
pop
loop
push
cmc
addr16
xchg
sub
call
divl
scas
xor
mov
pusha
adc
imul
jmp
cmpsl
xor
les
mov
scas
pop
xchg
cmc
pop
nop
and
inc
ret
mov
lahf
cld
xor
cltd
ja
push
das
in
imul
xchg
cs
pop
stos
imul
jno
jno
add
jle
mov
xchg
lret
pop
adc
cs
flds
or
xchg
cmp
xchg
rcrb
imul
xchg
jnp
mov
std
pop
es
mov
out
popa
testl
loopne
pop
cld
lahf
fcomp
lods
mov
push
in
fnstsw
fmul
std
scas
xchg
mov
mov
mov
bound
mov
push
dec
fbld
xor
mov
decb
jne
push
sahf
lods
push
enter
xchg
mov
rolb
shr
int3
clc
sub
neg
mov
es
xchg
addl
shll
push
and
mov
sbb
in
sbb
insb
in
pusha
jb
xor
popa
push
lods
popa
push
xorl
dec
and
and
rcl
repz
fdivrp
xchg
js
insl
pop
popa
add
out
lods
adc
sarl
mov
in
push
filds
test
outsl
lods
inc
inc
push
cmc
mov
xchg
nop
ret
mov
cs
std
outsl
lret
sub
out
jb
sbb
mov
xchg
xchg
aad
or
xor
cmp
js
add
js
lahf
add
outsb
inc
xchg
push
xchg
testl
adc
mov
aad
dec
aam
adc
outsl
mov
loopne
rorl
xor
fisttps
in
mov
push
iret
sbb
xchg
push
lret
sbb
cmp
addr16
jnp
and
int3
mov
gs
mov
inc
jbe
add
sub
mov
test
and
inc
cmpsl
je
pusha
sub
fdivrl
vpmacsdqh
dec
aam
pop
movsb
iret
ljmp
mov
loopne
adc
int
pop
jge
pop
lret
cs
ljmp
insb
push
out
dec
jp
xchg
movb
rolb
mov
cmpsl
xchg
fstpt
cvtdq2ps
inc
rorl
pop
outsl
push
adc
cmp
imull
movsl
dec
inc
addr16
js
or
sarb
dec
fs
xchg
mov
outsb
hlt
mov
jns
lahf
pop
xchg
sub
or
test
xor
xor
scas
jp
leave
mov
xchg
stc
shrb
push
aam
inc
xchg
loop
insb
ret
pop
sub
icebp
jp
ja
mov
in
and
push
fiadds
adc
xlat
jne
jmp
xchg
cld
test
or
xor
shrl
jle
into
ja
lcall
lahf
sub
outsb
pop
cmpsl
arpl
push
jl
sbb
add
xor
ret
and
xor
mov
mov
jp
sub
xlat
inc
cwtl
adc
in
mov
xchg
xor
xchg
dec
cmp
sbb
adc
imul
outsb
imull
jne
jns
stos
in
cs
lahf
jnp
inc
rolb
sub
dec
xor
pop
cld
dec
xor
mov
sahf
pop
je
incb
jg
inc
dec
hlt
data16
mov
sbb
xor
push
fildl
xor
in
adc
push
jo
std
sbb
cld
jnp
pop
pop
inc
dec
lock
mov
daa
sbb
mov
cmp
push
mov
fdivs
mov
clc
test
add
ljmp
pop
pop
jne
lods
mov
or
jecxz
fisttpll
scas
repnz
cli
xchg
xchg
into
ficoms
dec
push
cmp
loopne
scas
or
inc
or
aaa
jne
sbb
in
imul
insl
add
and
jecxz
dec
and
test
notl
add
ss
fstpl
popa
or
sbb
addr16
dec
imul
adc
int3
aaa
fidivrl
cmp
adc
mov
inc
stos
in
arpl
adc
fld
stos
adc
xor
icebp
jbe
fnstcw
sub
cmc
cmp
and
jae
lds
lahf
adc
xor
sahf
lahf
jecxz
test
add
cmpsl
inc
pusha
inc
pop
je
adc
bound
cs
add
adc
imul
je
loopne
leave
add
mov
or
cmp
cmp
cmc
cmpsl
xchg
lcall
jno
imul
shl
inc
cltd
push
icebp
mov
aad
cmp
cmp
fs
ljmp
xor
dec
cltd
jl
out
andl
inc
insb
iret
fs
fwait
xchg
shrb
mov
xor
push
mov
push
dec
sbbl
pop
pop
xor
dec
inc
in
pop
loopne
inc
sub
lea
ficoml
andb
lahf
push
gs
mov
out
cmpsl
psrlq
xchg
sub
or
mov
add
add
fcomps
dec
fxch
add
imul
lock
pop
dec
pusha
jns
pushf
sbb
cmc
loopne
imulb
mov
jno
jg
outsb
and
inc
cmp
lcall
ljmp
out
rcrb
and
push
push
sarl
add
pop
xchg
xchg
xchg
sahf
aam
push
scas
dec
stc
or
insb
cmp
xchg
push
adc
vpcmov
inc
dec
push
and
cmp
mov
inc
pop
mov
sbb
ja
push
sbb
push
in
lods
negb
inc
sbb
mov
inc
mov
adc
pop
pop
out
pop
cmp
cmc
lret
mov
xchg
inc
mov
pop
jg
leave
xchg
mov
cmp
pushf
stc
ffree
mov
inc
aaa
stos
out
int
les
inc
bound
mov
iret
mov
mov
ret
stos
popf
mov
popl
or
pop
mov
out
ja
out
push
in
test
and
pop
shl
fistpl
or
jecxz
push
mov
dec
aam
pop
fsubrl
adc
cmp
in
repnz
into
mov
xor
shll
int
xor
or
out
out
mov
cmc
xchg
negl
sub
sbb
xchg
add
outsl
xorb
pop
and
pop
shlb
inc
and
pop
addr16
push
jns
or
push
subl
lods
das
pop
pop
into
sub
mov
and
add
mov
shll
jmp
add
jnp
cs
push
sub
adc
adc
rcrb
mov
pop
mov
iret
scas
out
aas
mov
in
cmp
sti
sub
repnz
inc
jne
clc
shr
dec
mov
jecxz
pusha
bound
fsubrs
mov
fs
jo
gs
fnstcw
push
jle
push
mov
test
loope
jne
jno
sti
das
cwtl
popf
sbb
fldl
subps
fsubrp
adc
xchg
mov
call
sub
and
jmp
xor
pop
int
jbe
leave
js
clc
sahf
and
loope
xchg
pusha
jl
pop
push
shrb
into
xchg
nop
push
push
dec
xchg
push
inc
out
jae
mov
xchg
jmp
dec
lods
push
xor
jne
push
out
icebp
fiadds
icebp
jo
js
xor
mov
dec
add
xchg
sub
cwtl
mov
mov
sub
orl
jecxz
subl
xchg
aam
sbb
and
adc
lret
ja,pn
push
push
jbe
scas
ljmp
mov
mov
push
cmpsb
leave
add
clc
std
movsb
jb
cmp
mov
and
inc
mov
xor
adc
push
mov
fwait
adc
inc
dec
xor
pop
stos
lock
adc
xchg
sbb
dec
mov
inc
pop
popf
jecxz
push
sub
pop
loopne
mov
ret
popa
mov
outsl
push
inc
nop
xchg
lds
and
lea
clc
out
cltd
dec
lahf
dec
das
cmp
mov
fucom
pop
mov
fldt
xchg
dec
stos
push
push
repnz
idivb
mov
sbb
mov
addb
pop
rol
or
fildll
in
test
dec
jb
mov
inc
push
jnp
jl
push
mov
xor
movsl
xor
inc
sbb
push
stos
jp
sahf
sub
cld
add
mov
repz
xchg
push
out
pop
mov
cmc
adc
sub
testl
imulb
jmp
jnp
mov
out
xor
adc
mov
jbe
xor
mov
lea
fmuls
ljmp
test
cmpsb
or
scas
hlt
test
out
jge
lcall
enter
mov
xlat
add
push
xor
sub
insl
jmp
sbb
cmpsb
aam
sbb
push
test
jl
sbb
mov
std
xchg
mov
ret
xchg
lea
imul
outsl
pop
sarl
push
xchg
jno
lcall
mov
aad
popf
lods
mov
mov
sbb
cwtl
mov
jo
jo
mov
cmpsb
fsubrl
mov
dec
icebp
fdivrs
xchg
pop
jb
add
cmpsb
jg
mov
and
aas
mov
jge
push
dec
inc
lods
sub
or
cli
push
mov
lea
arpl
xorl
jbe
and
loope
enter
mov
pop
insb
jl
mov
add
movdqu
lea
adc
and
adc
mov
add
dec
push
pop
das
xchg
mov
ja
data16
mul
mov
imul
sahf
mov
ud1
or
je
insl
jo
aaa
aaa
loopne
mov
cltd
push
cmp
pop
and
push
push
fnstcw
mov
scas
adc
or
test
test
dec
cmp
mov
cmp
fimull
pop
mov
mov
jae
sub
mov
mov
sub
lds
test
adc
or
outsl
and
xchg
lret
sahf
arpl
dec
adc
inc
dec
rolb
jnp
dec
mov
or
mov
mov
repz
les
ds
shrb
mov
dec
inc
pop
push
adc
cmp
pop
clc
and
jg
rcll
sub
jp
jl
xchg
loope
mov
test
arpl
push
jae
out
push
daa
out
popa
mov
nop
mov
scas
call
cmp
in
jmp
je
stc
dec
mov
imul
push
mov
jbe
ljmp
xchg
jns
cmovnp
pop
jp
xor
orb
mov
sbb
xor
xchg
aaa
xor
xchg
mov
fisubl
sbb
roll
push
jo
std
mov
in
call
or
and
mov
mov
xchg
lock
mov
stc
dec
test
ss
mov
movb
aam
icebp
lahf
xor
and
insb
inc
inc
sub
push
lahf
xor
ljmp
add
lock
fbstp
add
movsl
sahf
into
inc
cwtl
mov
cmp
push
leave
pop
push
add
pop
pop
push
push
cmp
int3
dec
xor
mov
rorb
mov
rorl
mov
jbe
adc
fsts
inc
stc
cmpsl
mov
inc
push
and
pop
xchg
stos
adc
cltd
mov
cmc
xorl
mov
mov
mov
and
mov
push
xchg
jbe
ja
sbb
stc
sti
xor
pop
es
sbb
jge
pushf
jge
test
push
pop
nop
les
add
sbb
adc
cltd
xchg
mov
xor
cmp
out
imull
push
xor
je
roll
jns
jb
fs
rorb
nop
xor
xchg
lds
mov
loop
pop
std
lret
push
repnz
mov
into
orb
ja
dec
pop
popa
out
ja
mov
sub
xor
and
aad
push
pop
cmp
adc
cld
or
pushf
jae
cwtl
sub
das
xchg
jno
jle
jp
in
dec
dec
xchg
or
insb
add
adc
xchg
or
addr16
xor
js
test
xor
xor
scas
mov
in
test
mov
cmp
std
dec
jno
pop
cmc
fdivs
sub
pop
dec
fldl
cld
dec
popa
popf
movsl
insl
dec
nop
call
jno
ret
lea
scas
xor
dec
or
repnz
cwtl
sbb
cli
call
cmc
iret
imul
pop
out
pusha
xor
cs
out
rorb
push
pop
sbb
push
jl
cmp
imul
ret
ret
xchg
or
rolb
bound
cs
jbe
pop
sbb
xor
stos
dec
popa
scas
pop
and
xor
sti
mov
ds
sbb
daa
mov
into
fiadds
xor
aad
xor
out
mov
aaa
mov
out
popf
dec
cmp
sbb
push
mov
jge
out
cwtl
mov
test
cld
in
add
pushf
jle
adc
mov
jl
cmp
lret
incl
xchg
sbb
das
lcall
push
mov
cmpsb
cli
sub
imul
stos
dec
xor
je
mov
fs
aam
imulb
les
dec
xor
aad
xor
or
cmp
icebp
pop
mov
jge
push
xchg
mov
lock
sbb
add
int
push
inc
dec
pop
jno
jecxz
mov
xor
sub
cs
in
inc
push
ficoms
sub
in
lods
sbb
and
mov
mov
bound
mov
adc
inc
inc
outsl
cmp
xor
stos
add
cmp
dec
push
push
sub
jnp
sbb
pushf
sub
outsl
in
adc
loop
push
xorb
test
jae
sub
add
loopne
into
lcall
adc
cmp
mov
pop
fidivrl
push
inc
out
mov
stos
sbb
and
mov
lods
dec
je
or
movb
jns
int
sub
inc
adcl
in
cld
les
leave
iret
iret
stos
push
add
mov
aaa
sbb
loope
out
repz
xchg
inc
add
or
mov
mov
stc
in
bound
mov
mov
add
aas
sub
jp
hlt
adc
cmp
mov
xor
nop
adc
idivb
cmp
xchg
fistl
cmpsb
cmp
loope
aaa
xchg
push
xchg
jo
sbb
push
push
movsb
int3
inc
dec
cmp
push
fisubs
pusha
adc
subb
dec
mov
mov
jmp
mov
cmpsb
stc
insl
shlb
mov
pop
mov
imull
jp
and
mulb
adc
sbb
or
rorl
mov
add
int3
daa
or
or
xlat
mov
pop
inc
sub
cmc
cs
lods
mov
jecxz
jge
push
pushl
subb
inc
jne
sub
or
dec
mov
jle
insb
xchg
in
mov
adc
cs
sbb
jb
push
test
push
push
and
shlb
xchg
jecxz
pop
add
pop
inc
aas
enter
bound
clc
insb
adc
gs
sbb
insb
stc
add
scas
gs
jecxz
iret
add
xor
test
adc
lea
or
lock
jecxz
or
and
cld
sub
and
sbb
jmp
sub
jnp
push
xlat
aaa
insb
mov
push
add
leave
outsb
inc
inc
push
pop
inc
jg
gs
fnsave
inc
mov
fwait
iret
roll
arpl
xor
dec
jle
mov
psubusw
adcl
lock
sub
adc
mov
pop
xchg
dec
aad
addl
xchg
cmc
out
and
testl
jp
pushf
and
ficoms
mov
dec
sbb
dec
test
sub
rcll
adc
cld
pop
dec
std
outsb
sbb
sub
int
jnp
mov
sbb
push
idivl
andb
popf
jns
fcmovb
and
fidivrl
cltd
imul
xchg
in
or
or
pop
mov
sbb
inc
xchg
jnp
add
stos
out
stos
repz
sbbl
mov
into
mov
std
and
lahf
shl
or
fstpl
pop
pop
inc
dec
es
pop
popa
xchg
jae
roll
stos
mov
jo
enter
and
push
adc
leave
mov
das
cmpsl
xor
sub
fsubs
pop
ja
mov
pop
lcall
push
or
outsb
lock
xchg
ljmp
mov
xor
sbb
cmpsl
fwait
out
pop
out
rol
push
cwtl
fistps
adc
sbb
pop
cld
sub
mov
sbb
pop
pop
pop
daa
fucom
jp
mov
jle
insl
call
subb
pop
mov
push
jb
xchg
xchg
mov
flds
sub
mov
pop
inc
movsb
aam
and
fadds
pusha
push
loop
jp
dec
das
xor
loop
push
push
add
test
test
xchg
cs
mov
rorl
sub
mov
mov
push
jge
cmc
mov
mov
fstpt
pop
xchg
data16
push
in
dec
pop
mov
stos
flds
jmp
in
xchg
aaa
cltd
call
add
cmc
and
in
sar
adc
pop
shl
arpl
in
dec
pop
test
mov
fisubrs
mov
mov
push
or
jo
iret
mov
mov
and
lret
xor
cmp
je
cli
jnp
push
mov
in
rorb
add
aam
add
int
ja
xor
scas
push
fisubl
das
and
shr
cwtl
cltd
jecxz
xor
cs
sbb
mov
loop
rcrl
pop
mov
stos
fwait
push
outsb
aaa
or
jge
mov
push
cs
cld
mov
arpl
mov
sub
lds
cmp
por
rol
pop
add
push
jmp
dec
mov
dec
lret
pop
rolb
sub
hlt
sbb
sub
mov
in
sbb
arpl
pushf
test
shll
dec
sbb
mov
into
mov
lds
lods
xor
pop
adc
push
ljmp
insl
stc
ja
es
shr
mov
sub
data16
mov
and
add
fsubr
inc
push
jl
push
jns
inc
cwtl
lret
jnp
push
adc
mov
insb
lods
xor
and
lods
add
test
scas
testl
mov
mov
xor
sub
or
inc
xor
ljmp
jl
sbb
mov
pop
mov
out
sbb
mov
sub
cs
in
test
mov
jg
loope
testb
in
in
jl
sub
gs
lcall
lahf
addr16
cmc
push
repz
aaa
mov
fistpl
ljmp
inc
pop
push
js
lock
mov
pop
scas
or
jecxz
mov
arpl
sbb
sti
mov
fildll
and
sub
std
loope
jmp
movsl
adc
push
xor
shl
rorl
pavgw
aaa
sbb
shrb
lahf
mov
xchg
std
push
sbb
sahf
dec
icebp
test
jmp
in
sub
pop
scas
push
add
fmul
or
fs
sbb
out
inc
or
dec
insb
mov
inc
cltd
enter
fsubrs
je
sahf
outsb
lea
lea
cmp
jl
insb
ficompl
pop
push
adc
or
mov
scas
popf
in
fidivs
push
xor
or
jae
pushf
pop
inc
fstpt
arpl
add
jno
out
dec
xor
popf
jbe
pop
test
cmp
push
insl
cld
push
test
cwtl
or
fmull
push
or
mov
test
lds
mov
and
arpl
jo
jnp
mov
js
add
or
aam
cmp
addr16
aas
mov
filds
pushf
xlat
mov
scas
fucomip
sahf
push
adc
fisttps
inc
scas
into
cmp
popf
mov
insl
inc
xlat
es
cmpsb
int3
icebp
dec
testl
mov
cmc
jp
adc
out
movsb
pusha
xlat
add
insb
dec
enter
arpl
ret
outsb
out
fadd
pop
mov
xchg
aaa
adc
fcomip
push
adcb
jge
lock
out
jg
scas
sub
arpl
mov
mov
push
or
aad
repz
rcrl
push
out
les
std
cs
cli
inc
pushf
imul
movsb
xor
jmp
pop
fcoml
cld
cmpsb
in
inc
cmpsl
pop
pop
insb
nop
pop
lahf
fbstp
shll
out
push
and
in
in
stos
ret
jmp
xor
test
add
inc
adc
aaa
mov
sbb
mov
pop
inc
std
dec
std
cltd
subl
xchg
jae
xor
mov
das
xlat
sub
mov
sti
xchg
add
aas
mov
or
mov
rcll
adc
pop
outsl
sub
mov
sbb
push
adc
push
fidivrl
push
pop
push
mov
test
mov
sti
repnz
and
lret
test
dec
jle
mov
adc
aad
je
or
std
sbb
mov
aas
mov
test
fisttps
adc
inc
xor
push
xchg
jp
xchg
and
out
adc
test
outsb
mov
dec
and
xchg
stos
daa
outsl
mov
bound
xlat
push
mov
std
mov
stos
push
inc
or
rcrl
mov
aam
movhps
add
fs
insb
stos
dec
and
inc
cmp
mov
dec
or
das
jge
push
lods
das
icebp
scas
sti
leave
mov
sbb
lret
ret
aam
loop
jg
jbe
mov
arpl
mov
test
outsl
adc
mov
or
mov
mov
push
outsl
lock
cmp
push
inc
fnop
clc
xchg
xor
mov
mov
lods
or
mov
xchg
sbb
imul
push
mov
xor
jmp
subl
inc
mov
fmull
out
stos
sub
cmpsl
imul
cli
cs
pop
jnp
add
inc
pop
ficompl
mov
lds
rorb
push
negl
pop
arpl
ss
ljmp
sti
call
fimull
mov
sub
adc
sbb
push
lock
pusha
inc
pop
push
and
mov
sbb
out
cli
cmp
scas
mov
sub
sub
ret
jp
testb
xchg
adc
xlat
dec
adc
lcall
js
or
cmp
xchg
or
hlt
lods
dec
loopne
and
das
sbb
les
push
ds
xor
nop
lret
inc
push
lods
adc
ret
lret
fiadds
aam
pop
mov
scas
push
jns
mov
outsl
aaa
mov
das
and
inc
add
jnp
frstor
push
hlt
gs
in
pop
mov
es
jno
mov
or
je
mov
xchg
fildl
leave
mov
cmpsb
push
xor
jle
push
sahf
leave
dec
enter
pushf
push
mov
jbe
out
bsr
xor
in
cli
pop
cmp
mov
push
mov
into
test
ss
pushf
lods
inc
cmpsl
insl
inc
mov
mov
xlat
insb
test
cs
dec
roll
adc
add
icebp
sub
ret
cmp
outsb
mov
jg
in
or
sub
imul
jo
outsl
xor
gs
loope
fs
stos
shr
pop
clc
mov
mov
push
mov
cmpb
pop
xchg
adc
arpl
jo
iret
repz
out
mov
lds
pusha
icebp
or
test
testb
sbb
or
or
js
mov
fnsave
sub
inc
add
push
lods
cmc
iret
sbb
jp
dec
dec
adc
or
cmc
mov
xchg
xor
lret
push
sbb
adc
dec
push
negl
ss
ds
pop
mov
shlb
xchg
cmp
mov
loopne
inc
lods
jge
sbb
jg
push
subb
mov
add
mov
xchg
imul
popf
nop
mov
fdivr
jno
int
subl
adc
lahf
push
jg
sbb
add
and
stos
xchg
hlt
out
xor
xchg
addr16
and
icebp
sbb
or
insl
rcrb
mov
js
dec
sbb
push
xchg
test
test
pushl
mov
inc
mov
and
std
mov
dec
js
outsl
cli
and
sbb
scas
imul
decb
sar
adc
jne
and
repnz
sub
sti
xor
push
cmc
clc
shrl
jb
call
mov
sbb
sub
pop
xchg
insb
test
inc
mov
int3
repz
pushf
inc
test
mul
aad
inc
xchg
lret
cld
leave
mov
adc
sbb
aaa
stos
cmpsb
rorl
lock
push
lahf
sbb
inc
idivb
add
mov
jg
xor
mov
in
int3
mov
cmpsl
and
xchg
sub
movsb
popa
cld
fucomi
jne
fcmovnbe
and
pop
loope
add
aad
insl
push
push
sub
in
xor
xchg
xor
dec
push
negl
mov
leave
call
lock
jg
inc
cmpsb
push
jl
pushf
movl
dec
jae
mov
push
dec
dec
and
adc
pop
loop
inc
mov
loopne
mov
and
pop
stc
mov
mov
in
jno
aad
cmp
jmp
xchg
aam
sub
adc
push
fsts
pop
lea
mov
cmp
into
stc
insl
dec
stos
or
test
sbb
mov
pop
loopne
inc
gs
or
add
lods
es
dec
pop
jo
fisttpll
pop
aas
ret
cltd
and
loope
jbe
pop
shr
inc
pop
sub
dec
test
por
loop
bound
mov
int3
pop
mov
xchg
pop
xor
sbb
lret
daa
fisttps
subb
and
loope
in
icebp
cmp
lahf
fiadds
fistl
push
lcall
xchg
notl
sub
nop
jle
mov
add
fcmovne
cmp
lcall
pop
jge
and
loop
pop
repz
pop
mov
mov
ss
lcall
pusha
rcrb
out
in
rolb
pop
loop
inc
push
add
xchg
stc
call
fidivrs
jbe
inc
pop
adc
aaa
dec
lods
lahf
std
sti
and
fcmove
add
shll
inc
stos
adc
lret
es
loop
lcall
pop
adc
mov
mov
shl
sbb
aad
int
and
loop
add
add
ret
ret
cmpsl
mov
loop
push
xor
mov
jo
ret
push
add
and
std
mov
leave
pop
sbb
sbb
inc
push
dec
mov
lea
stos
lret
cmp
pop
mov
loope
adc
pop
sub
mov
xchg
das
pop
pop
push
adc
mov
or
sub
jecxz
pushf
insb
add
out
add
lock
jl
cmp
xor
testl
xchg
jne
clc
pop
and
fildl
pop
mov
daa
jle
sub
jecxz
and
and
enter
inc
out
sbb
pop
jb
test
in
push
inc
push
enter
lock
in
mov
and
adc
outsl
sbb
aas
mov
popf
add
nop
daa
jmp
jg
jecxz
pop
stc
pop
mov
movsl
xchg
xchg
pop
jno
push
cltd
out
popf
leave
mov
pop
test
test
xor
hlt
inc
adc
xchg
inc
aas
popa
in
sub
rclb
sbb
shrl
xchg
xchg
gs
or
cmp
xchg
ja
les
or
lret
xchg
icebp
dec
mov
push
loop
xorb
sbbl
add
inc
stc
data16
test
aas
cmp
lock
fsub
in
jae
mov
mov
mov
decb
push
cmp
xor
cmc
std
sbb
loope
or
cmc
imul
mov
fidivl
xlat
rcll
repnz
rcrl
data16
out
sub
je
mov
mov
jo
push
dec
test
sub
mov
iret
cmpsb
ret
xor
pop
es
bsr
and
mov
insl
pop
inc
gs
aaa
or
mov
lret
xor
rcl
jae
mov
and
mov
cmp
jle
cs
cmp
inc
gs
popf
sub
pop
roll
addr16
sub
or
fiaddl
sbb
jb
dec
dec
jb
sbb
or
xchg
ja
xor
mov
push
jno
mov
outsl
enter
popf
jnp
repnz
mov
adc
and
xor
fildl
cmpsl
push
mov
aaa
gs
jp
movl
aam
out
mov
mov
fnsave
loope
push
mov
sar
in
daa
sub
jecxz
push
test
mov
fwait
cwtl
mov
gs
ret
or
popf
pop
push
ss
jns
mov
clc
int3
jne
mov
test
sbb
or
push
pop
jnp
jno
add
orl
sbb
jns
in
inc
dec
xchg
inc
out
aas
dec
mov
fucomip
adc
mov
insl
cltd
shll
mov
aam
adc
jae
scas
lahf
cwtl
or
fcmovbe
fcoml
loopne
ret
jb
mov
or
pop
push
int
dec
jo
mov
call
and
cmp
cmc
ficoml
fcompl
adc
pop
addr16
ret
pop
adc
mov
xlat
push
jns
sbb
dec
mov
dec
filds
pop
pop
in
subl
mov
pop
pop
mov
fidivs
sub
jge
adc
pop
or
stos
stos
cmp
cli
mov
xor
fbld
xor
scas
mov
out
push
insb
xchg
in
xchg
test
push
mov
hlt
lods
sbbb
dec
adcb
xchg
xchg
into
in
ror
sbb
jne
cmp
jp
xchg
ja
or
in
in
mov
mov
inc
jne
mov
stc
and
mov
xor
pop
mov
push
and
ljmp
ret
gs
xchg
setae
rorl
shl
lea
call
pop
cmc
xor
adcl
in
inc
jge
mov
mul
addb
ss
pushf
dec
shlb
out
xor
mov
add
xor
jnp
sahf
or
gs
sub
cmp
pop
mov
insb
fnstsw
aaa
cltd
sub
push
push
les
jmp
into
jne
lods
mov
and
inc
aad
insl
aam
cmp
mov
or
inc
daa
sbb
sub
cmp
in
jle
jle
pushl
cmp
or
and
dec
fsubrl
bound
leave
mov
pop
cmp
mov
aam
stos
jo
cmp
adc
add
or
xorl
xchg
adc
pop
lock
sub
adc
mov
leave
push
lods
iret
mov
inc
adc
int3
roll
test
cmp
jp
clc
jle
data16
test
dec
add
mov
mov
cmpsb
inc
push
dec
popf
in
mov
addr16
pop
ss
cmp
loopne
in
cli
popf
mov
push
mov
scas
or
fmulp
out
inc
adc
inc
cmpl
std
inc
jne
sbb
imul
push
fs
add
ljmp
outsb
mov
and
pop
jae
mov
gs
push
stc
push
sbb
lcall
loope
pop
repnz
test
imul
mov
push
pop
lret
xchg
insl
cmp
mov
sarl
push
in
jne
outsb
aam
ja
or
icebp
outsb
cmp
pushf
aam
stc
mov
and
mov
test
in
mov
test
out
pop
rcrl
xlat
dec
jg
popa
cmp
repz
mov
data16
loopne
inc
dec
cmc
jmp
fisubs
aad
lds
rorb
and
jge
xchg
aam
arpl
inc
dec
cltd
stc
inc
jge
jl
div
mov
das
int
jne
push
mov
xorl
cmp
inc
push
lods
rolb
int
lea
and
xchg
popa
sbb
jbe
sbb
leave
std
xchg
enter
push
adc
imul
mov
fbstp
addb
jl
add
loope
xchg
lock
mov
mov
jp
sbb
pop
pusha
test
sub
or
sbb
out
aam
fwait
pop
pop
inc
cmpsl
hlt
lcall
loope
out
call
outsb
popf
test
movsl
es
loope
pushf
cs
mov
xchg
mov
fisttps
imul
pop
dec
lods
lods
stos
mov
jo
sarl
call
add
pushf
test
and
lret
popa
xor
orl
pop
in
aas
imul
scas
sbb
mov
shl
idivl
stos
lock
jl,pt
js
in
les
push
mov
hlt
test
add
into
or
ret
fldcw
push
shll
cmpb
xorb
icebp
pusha
movl
add
mov
pop
out
arpl
rcll
pop
fwait
mov
aaa
dec
test
mov
inc
dec
lret
das
loopne
popa
and
fwait
mov
scas
cmpsb
movsl
mov
or
add
add
out
xorb
or
and
jnp
or
adc
imul
inc
xchg
lret
fmull
dec
jecxz
clc
lock
ss
and
jmp
fldcw
mov
aas
sub
std
cmc
jo
cmpsb
sbb
jne
adc
mov
lock
outsb
cld
and
mov
xor
adc
xor
mov
testl
mov
loop
loopne
pop
sbb
push
jae
test
inc
jge
clc
aad
imul
sub
lods
or
and
pop
call
xchg
mov
dec
mov
push
in
popa
xchg
sbb
test
pop
add
mov
fldl
movsb
pop
adc
jg
lahf
pop
push
das
icebp
dec
and
shrl
and
ja
fidivs
jnp
jmp
xchg
and
js
inc
xor
outsl
mov
mov
sub
mov
cmp
push
dec
outsl
sub
call
xorl
aas
iret
sub
cmp
cmp
jg
out
push
sub
pop
dec
aam
mov
xor
sub
jle
pop
sbb
mov
and
notl
mov
mov
popf
arpl
push
bnd
push
shl
add
aam
mov
push
mov
shlb
insl
lret
xor
stos
sub
adc
and
mov
adc
jge
pushf
in
sbb
outsl
sub
ror
or
jecxz
stos
sbb
mov
jno
add
mov
cld
mov
add
push
bound
adc
mov
enter
mov
mov
or
jne
jle
test
push
imul
mov
pushf
push
fidivs
rcl
inc
add
outsb
cwtl
sub
mov
push
adc
and
out
push
fninit
mov
in
loope
sarl
insl
xor
into
sub
cli
in
xor
cmp
test
pop
pop
lods
mul
push
cmp
xchg
pop
push
mov
mov
dec
scas
lods
mov
and
xchg
test
inc
lret
fiadds
out
aam
test
mov
push
mov
subb
aaa
imul
or
and
or
mov
in
outsl
jne
push
mov
rorb
dec
scas
push
movsl
stos
pushl
cmp
daa
push
out
jno
jbe
jmp
mov
xchg
adc
mov
mov
pop
int
mov
stos
mov
jae
or
cld
into
cmp
or
cmp
ljmp
dec
sbb
xchg
jecxz
es
push
lea
push
gs
inc
or
add
aas
ret
xchg
stos
pop
xor
popl
shrl
pushf
mov
or
adcl
sbb
push
dec
scas
out
ds
adc
pop
fadd
inc
jg
xor
jle
mov
xor
in
push
pop
mov
loopne
dec
and
sahf
mov
dec
mov
daa
addr16
shlb
mov
mov
sub
mov
add
and
ds
shrb
hlt
push
inc
inc
lds
push
call
out
cmpl
or
rcl
mov
stc
gs
adc
jge
das
dec
inc
xor
push
sub
push
lds
inc
movl
jne
and
lcall
fldenv
push
into
adc
jbe
fcom
loop
add
cmp
or
in
jbe
sub
fwait
or
dec
out
in
jecxz
push
cmp
cmp
jmp
cmpps
std
and
mov
pop
mov
test
out
leave
xchg
dec
sbb
and
xor
xor
jmp
vpunpckhbw
mov
test
mov
testl
inc
push
andl
xor
loopne
cmpsl
xchg
pop
fstpl
arpl
outsb
movsl
pushf
jns
stos
test
loopne
push
arpl
mov
aaa
test
mov
aam
push
and
inc
or
mov
dec
or
les
mov
mov
and
repnz
pop
fistl
dec
cmp
xor
adc
pop
sbb
cmpsl
mov
push
inc
dec
test
les
mov
aas
mov
add
jl
lret
pop
addr16
pushf
mov
xchg
mov
in
xor
adc
push
daa
mov
rolb
sbb
jmp
sub
mov
mov
cli
mov
orb
clc
push
mov
push
call
inc
and
imul
inc
dec
xchg
xor
adc
fwait
stos
cwtl
jbe
xchg
outsb
xchg
je
push
pop
sbb
cmpb
pop
mov
and
shrl
bound
in
inc
ljmp
into
in
sahf
shrb
out
repz
shrb
xchg
push
mov
sbb
int3
xor
stc
adc
dec
pop
loope
cld
adc
or
insl
jo
mov
loope
fsubrs
xorb
cmp
mov
jl
lods
mov
add
fisttpl
fsubrl
decb
mov
fnsave
pop
add
add
test
je
cli
push
inc
pop
sbb
in
movsl
inc
inc
lds
push
hlt
fldl2t
aam
daa
inc
ret
emms
jmp
add
jl
push
mov
dec
add
or
mov
and
pop
inc
add
popa
aam
loop
dec
jne
fistps
scas
xchg
decl
arpl
movsl
or
movsl
push
xor
cmp
fsubrs
jb
enter
sub
jns
xor
mov
jo
push
inc
sahf
imul
push
jmp
lods
add
out
mov
sahf
jp
xchg
mov
rcrl
sub
mov
cmp
cwtl
pop
lret
inc
fs
push
adc
pop
push
mov
mov
dec
or
mov
ds
pop
cli
enter
inc
mov
sbb
add
mov
leave
jmp
cmc
mov
sbb
cmp
hlt
cwtl
imul
adc
cs
inc
mov
add
enter
xchg
adc
jecxz
pop
in
jge
iret
dec
inc
mov
nop
andl
call
push
fwait
in
push
mov
inc
jge
bound
lods
aad
mov
inc
ret
pushf
es
les
std
push
stos
sub
mov
dec
popa
push
fldenv
add
push
jge
push
pop
jae
add
inc
ret
sbb
xchg
loope
js
out
jbe
shrl
pop
push
mov
cld
cmp
arpl
scas
pop
lods
out
scas
inc
call
xchg
sbb
jno
inc
xchg
aam
inc
pop
push
into
inc
jp
cmp
out
push
gs
adc
cli
mov
les
xor
push
aaa
cmp
mov
jmp
cmp
in
push
push
aam
aas
mov
sub
dec
jp
lds
add
loop
dec
and
pushf
xlat
fucomi
lcall
daa
out
call
jle
adc
push
js
imul
cmc
bt
xor
xchg
fldenv
fiaddl
int
jnp
mov
out
xchg
mov
lds
xlat
mov
mov
push
in
movsl
ljmp
inc
std
mov
ja,pn
sbb
push
std
lods
sub
or
shrl
movb
inc
mov
dec
dec
ljmp
jns
mov
and
cld
inc
add
aam
je
lds
inc
adc
mov
lods
fldl
aad
ja
mov
test
arpl
imul
and
fs
mov
bound
icebp
andl
inc
xor
mov
jp
mov
jl
mov
adc
mov
roll
call
enter
mov
outsb
mov
loop
gs
adc
or
xchg
movsb
mov
imul
loope
sti
xor
mov
xchg
push
inc
testb
outsl
adc
cltd
ss
jbe
shl
push
mov
test
fcoms
xlat
and
adc
bound
int3
sub
js
lds
loopne
cs
jae
and
out
int
fchs
data16
out
mov
inc
xor
jae
and
push
rorb
test
pop
mov
push
jecxz
mov
movsl
iret
jl
loope
aad
and
lock
out
xchg
dec
pop
scas
and
sbb
dec
iret
les
into
fldcw
outsw
inc
loopne
cmp
jg
fucomp
sbbl
add
nop
cmp
cwtl
lret
lods
mov
repz
call
out
fsubs
and
sbb
out
mov
test
xchg
std
aad
add
push
jp
push
sbb
test
shrl
sar
pusha
mov
lds
mov
loopne
andb
add
or
cwtl
adc
inc
mov
insl
out
xchg
mov
cmpsl
fldt
push
xor
cmpsb
aas
or
or
inc
in
inc
inc
and
pop
icebp
inc
mov
jle
jle
imul
xor
mov
test
cmp
mov
add
dec
out
je
es
ffreep
pop
mov
lods
push
scas
clc
pushf
push
insb
xchg
add
mov
adc
arpl
sub
lds
stos
iret
jns
xchg
scas
sar
dec
xchg
insl
imul
xlat
out
xchg
frstor
mov
lea
lcall
push
iret
pop
dec
jl
xchg
inc
and
imul
stos
out
adc
or
lret
xchg
inc
adc
push
mov
addr16
or
fidivl
and
fcoml
xor
pop
scas
push
loopne
setg
dec
aad
push
test
xchg
test
xchg
outsl
jecxz
sbbb
adc
push
shll
es
and
movsl
arpl
call
stc
lret
enter
mov
dec
enter
jnp
pusha
push
test
mov
jnp
sbb
cltd
into
cmpsb
out
loopne
pop
adc
movsb
sti
mov
lods
mov
add
je
in
jne
xchg
out
sahf
gs
jns
in
mov
dec
mov
pusha
mov
fnstenv
dec
jg
pushf
rcrb
and
imul
rcrl
jns
dec
dec
inc
mov
xchg
out
jo
js
sbb
pop
lea
in
arpl
push
inc
std
push
and
mov
cmc
adc
pusha
jae
inc
popf
ret
adc
pop
out
fdivl
mov
cli
lret
test
and
jmp
sbb
push
adc
in
fmuls
lret
test
jp
rorb
mov
or
ljmp
jp
xor
fdivrs
icebp
in
sbb
test
or
repz
incl
dec
sub
jb
mov
je
add
push
popa
pop
addr16
es
lods
inc
ja
ds
leave
lret
xchg
add
inc
pop
xor
mov
sub
scas
sub
fsubs
mov
popa
xchg
pop
or
pusha
mov
fidivrs
jno
scas
jnp
xor
ret
shrb
fmull
ror
mov
addr16
adc
mov
mov
xor
insl
dec
in
pop
lock
xchg
xor
mov
mov
aad
adc
mov
data16
push
inc
or
das
les
sbb
shrl
jge
mov
xchg
inc
and
jmp
dec
and
lahf
addl
stc
fbld
xchg
les
cmp
mov
sahf
sbb
sbb
outsl
fldl2e
addr16
test
in
mov
fidivrs
or
add
lahf
stos
add
mov
psubusb
into
mov
lcall
jb
lods
mov
mov
aas
xor
fs
movsb
test
sbb
fdivr
mov
add
clc
sub
mov
cmp
mov
mov
mov
dec
and
xchg
mov
test
cmpsb
int3
icebp
gs
pop
xchg
sub
rclb
adcl
loop
and
mov
lret
mov
sbb
movsb
pop
jae
mov
jecxz
or
lods
jae
sti
cmp
outsl
adc
add
loopne
arpl
mov
inc
daa
push
jnp
pop
movsb
mov
xorl
xchg
bound
and
jge
mov
scas
popa
or
stos
test
pop
push
mov
pop
idivb
daa
mov
mov
jb
xchg
aam
lcall
pusha
lods
xchg
xchg
dec
and
add
xor
xchg
jmp
dec
xor
iret
mov
adc
call
pop
outsl
mov
pop
int3
dec
andl
lods
repz
out
pop
ja
pushf
cli
cmp
bound
arpl
cs
dec
xor
mov
adc
lahf
add
push
sbb
mov
fiadds
add
mov
sti
sbb
iret
jbe
lahf
xor
pop
je
out
aad
lret
sbb
jno
jo
jne
pop
mov
cmpsb
test
lcall
outsb
push
daa
jb
jb
xor
jp
mov
scas
movl
pop
push
into
mov
js
test
subl
bound
inc
pushf
sub
in
xor
and
xchg
in
add
xor
test
aam
dec
outsb
decl
lahf
push
add
inc
inc
sbb
popl
popa
fimull
add
lahf
insl
stos
push
in
mov
mov
in
in
dec
sub
clc
testb
adc
mov
rol
repz
rclb
bound
push
mov
jge
leave
inc
loop
sbb
jp
cmp
es
sbb
inc
xchg
adc
lds
or
or
out
popa
mov
cwtl
sbb
jge
sbb
mov
bound
es
jns
addr16
push
inc
repnz
mov
fstpt
aam
lcall
ret
es
pop
xchg
iret
xor
add
adc
inc
add
push
mov
sub
mov
loopne
xor
inc
sub
stos
imul
and
lods
and
inc
xlat
sub
mov
mov
shrb
sub
push
mov
das
int3
shrb
cmp
pop
or
dec
hlt
dec
rcl
mov
fistpll
je
add
scas
aad
sahf
and
es
cmp
out
loope
les
push
mov
mov
or
dec
mov
xorb
in
movsb
pusha
stos
sbb
mov
pop
push
pop
pop
push
ja
mov
adc
pusha
inc
lret
adc
xorb
aas
sub
push
mov
jge
mov
mov
idivl
pop
lods
fdivrp
xchg
outsb
adc
push
pop
xor
dec
dec
stc
aas
incl
pop
repnz
arpl
int3
lock
pop
xchg
cmp
outsb
ret
push
leave
and
xor
inc
mov
mov
xor
mov
addr16
push
sahf
xor
push
add
cmp
push
cmp
aam
mov
sub
fs
mov
or
add
xchg
arpl
mov
or
push
daa
mov
or
pop
icebp
shr
aaa
dec
cmpsl
inc
xor
sub
rorb
lea
jmp
rcll
fmulp
shrl
pop
neg
pop
push
test
add
sub
insb
cmp
fmulp
jl
and
outsb
jne
or
adc
int3
dec
jbe
loope
shrl
rorb
test
loop
subl
push
and
cmp
push
in
fdivr
push
mov
push
fistps
cwtl
add
add
mov
stc
cli
gs
adc
popa
test
jno
inc
push
leave
push
data16
mov
pop
dec
jnp
pushf
mov
xchg
push
push
insl
sbb
loopne
and
jb
xchg
lea
and
jae
xchg
sbb
in
hlt
fldl
lods
sub
cmc
add
int3
nop
xchg
add
jmp
xlat
jae
test
push
mov
negb
sub
popl
test
insl
push
mov
dec
loopne
fmul
outsb
push
push
xor
dec
adc
dec
inc
mov
stc
adc
jg
push
xorl
or
push
and
popf
imul
stos
mov
sbb
mov
ljmp
cld
mov
repz
push
cmp
loopne
lahf
inc
fwait
test
ljmp
movsb
rcr
shr
inc
loop
aam
push
mov
sub
jbe
daa
dec
ja
pop
hlt
das
mov
icebp
insb
sbbb
ljmp
cmp
xlat
cmpsl
push
adc
pop
fidivl
jp
push
or
mov
and
arpl
leave
js
int
dec
stc
shrb
add
lcall
pop
or
mov
add
inc
xchg
je
jge
jecxz
aaa
stos
cmpsb
mov
insl
and
dec
push
imul
mov
sahf
cmp
xchg
xchg
sahf
inc
push
mov
jl
loope
je
ffreep
int
xor
adc
lret
xchg
insb
add
xchg
mov
les
stos
mov
out
aad
lahf
inc
sbb
shr
jge
imul
out
and
aam
sub
test
lods
and
cmp
sbb
out
jne
hlt
cmpsb
stos
stc
add
fcompl
ljmp
dec
scas
or
xchg
mov
jle
inc
xchg
faddp
testl
xchg
das
add
sahf
push
mov
in
sub
add
mov
push
ficoms
je
dec
xchg
xchg
xor
out
add
xchg
aas
mov
sub
movb
dec
lret
push
fcom
push
ficoml
sbb
sbbb
mov
jbe
mov
or
inc
jo
mov
inc
pop
mov
pop
cmp
pop
movsl
hlt
fidivl
jnp
xchg
add
test
adc
sbb
mov
ret
sarb
out
inc
stos
outsb
mov
xor
fisttpl
jp
xor
out
pop
inc
and
sbb
jg
pop
hlt
faddp
sbb
mov
mov
push
ds
cmp
jp
stc
fsubp
aam
shl
sbb
cli
cmp
mov
hlt
call
into
jne
imul
ss
sub
das
stos
decb
pop
sahf
rclb
inc
lcall
ret
jl
sbb
cmp
loope
mov
out
or
sub
jle
dec
and
fldenv
or
ret
data16
std
fisubrs
out
aas
mov
cmp
sbb
mov
jo
nop
add
scas
dec
jle
mov
fmul
and
clc
loop
pop
lret
test
push
test
cmp
add
mov
loope
dec
mov
mov
sbb
push
adc
xchg
dec
jnp
xor
fwait
push
lahf
push
leave
cld
mov
ljmp
cmp
pop
arpl
icebp
je
mov
pop
sub
cmp
pop
jne
es
je
dec
add
fsubrs
rorl
sub
jl
cmp
xchg
adc
jbe
pop
xchg
sbb
push
xor
test
arpl
jae
cmp
data16
xor
shlb
cmpsl
jle
or
stc
mov
loopne
aaa
ljmp
popl
jb
inc
cmpl
cmp
sahf
add
cld
adc
push
in
or
sti
xchg
adc
or
push
fildl
out
rcrb
dec
test
mov
stos
fcmovne
pushf
fsubrs
xchg
arpl
out
sbb
mov
movsb
aad
daa
jno
cmp
or
aas
jge
shl
mov
imul
and
add
jle
jbe
hlt
stos
cmp
addl
jo
mov
or
and
cmp
das
xchg
mov
jno
out
imul
xchg
jmp
jo
outsb
and
sti
inc
jns
xchg
ds
std
ficompl
in
add
aam
jo
pop
cmp
rcrb
sti
add
pop
push
fisttpll
mov
fisubrs
and
decb
inc
xor
lea
in
sahf
ss
call
jecxz
test
in
xchg
movsl
mov
stos
test
mov
sbb
lcall
test
xor
lret
push
fsts
lret
lahf
sahf
add
cmp
xor
cmp
out
xchg
cmp
addr16
mov
push
imul
jbe
push
push
aam
movsl
xchg
ror
scas
mov
push
movl
mov
and
xchg
adc
pop
aaa
xor
push
inc
stos
sub
in
sbb
outsl
or
sub
push
out
iret
mov
dec
lds
jno
sub
cmpsl
pop
xor
outsl
imul
xor
loopne
xchg
xchg
or
mov
mov
lods
pop
mov
and
lock
fldt
pop
daa
jo
or
sub
dec
jle
repz
gs
xchg
sbb
inc
outsb
lock
clc
mov
aam
xchg
stos
cli
dec
mov
mov
mov
sbb
add
fistps
pop
ret
hlt
fmul
mov
sub
ss
adc
pusha
xor
andb
cmp
mov
in
rcrb
je
or
dec
push
sbb
jle
imul
int3
insb
jns
add
and
sbb
fcomi
jnp
push
subb
test
jno
jns
movsb
enter
jmp
daa
xchg
fwait
add
jge,pt
jge
dec
push
rolb
xor
xchg
mov
aas
pop
ret
or
pop
lea
xchg
cld
dec
in
xchg
adc
cmpsl
insb
outsl
sub
scas
dec
pop
out
mov
ffree
mov
push
scas
insl
mov
icebp
cld
ds
mov
test
std
mov
sub
pop
cmp
mov
test
jno
fcompl
sbb
sub
not
fs
mov
mov
in
in
fs
in
sub
jecxz
mov
test
push
adc
orl
mov
xor
mov
cmpsl
pop
dec
xchg
and
pop
mov
adc
imul
sub
test
aam
sub
outsl
cmc
push
push
mov
pop
cmp
push
cmp
xorl
mov
lret
jns
lock
xchg
jbe
dec
xor
or
addr16
shlb
out
ret
mov
testl
mov
int3
xor
and
xlat
cmpsl
mov
repz
xchg
out
repz
movsl
push
mov
mov
cltd
repnz
std
jle
cmp
push
push
outsb
imul
fs
mov
and
es
push
mov
xlat
mov
lret
les
cmpsb
xor
ja
and
inc
mov
dec
pushf
mov
mov
mov
jp
rorl
rcr
sub
es
ja
inc
int
into
mov
movsb
pop
and
dec
dec
stos
mov
jno
cld
mov
enter
adc
mov
sbb
scas
sub
jecxz
call
negb
mov
adc
dec
insb
mov
xchg
lea
lret
cmp
and
mov
mov
sbb
mov
arpl
sub
mov
xor
loope
push
hlt
and
pop
ja
in
push
mov
aad
pop
sti
and
jge
dec
mov
or
cmp
jo
cmc
adc
push
cmp
scas
lahf
stos
mov
mov
push
push
sahf
ljmp
add
dec
xchg
movsl
dec
add
xchg
push
ds
or
popw
adc
xor
adcl
std
dec
cmp
std
mov
out
adc
cmp
loop
sbb
aam
mov
xchg
add
push
cmp
adc
stos
lods
addr16
hlt
int3
hlt
dec
push
js
xor
popf
push
inc
add
push
ss
mov
pop
mov
mov
sbb
pop
sbb
dec
daa
xlat
stos
loope
les
notl
fildll
add
test
mov
or
js
daa
sbb
adc
testl
fs
dec
inc
jno
icebp
push
out
lret
sub
adc
add
call
jb
pop
negw
rorl
dec
ret
inc
dec
xchg
jns
xor
pop
hlt
adc
mov
and
xchg
mov
mov
fstpt
inc
icebp
into
in
lahf
dec
mov
mov
enter
popf
jo
adc
std
pop
in
cmp
int
cmp
sub
push
cmp
insl
push
pop
scas
cld
into
cs
sahf
call
mov
adc
repz
mov
movhps
je
pop
test
mov
je
xchg
mov
mov
add
pop
cmp
sahf
sbb
cmp
fstps
repnz
imul
xlat
push
and
arpl
sti
mov
mov
mov
adc
leave
repnz
mov
sub
jg
scas
pop
push
lods
dec
add
cmpsb
xor
inc
mov
jmp
scas
xor
push
or
adc
mov
sbb
movsl
jns
lea
cs
out
or
jns
jbe
cs
cmpsl
lcall
int3
xchg
cmpsl
imul
mov
ret
adc
jne
mov
aam
push
push
sub
les
sbb
pop
mulb
sti
pop
mov
mov
mov
outsb
sub
repz
jb
push
mov
mov
insb
js
mov
shll
push
fcomip
add
dec
pop
sub
jg
jmp
bound
je
jg
push
xorb
cmp
add
inc
mov
shrl
mov
cmp
test
ret
std
mov
xchg
mov
cmp
push
addr16
mov
cs
xchg
mov
repnz
xlat
add
add
into
int3
xlat
pop
mov
inc
repz
addr16
cmpl
loop
sarb
xchg
xor
inc
xor
sub
and
cmpsl
loop
mov
pusha
jle
mov
sahf
jbe
cmpsl
aaa
push
aad
into
sti
and
ja
iret
je
dec
pop
test
insl
ret
cmpl
mov
lods
push
or
popf
mov
test
sahf
mov
lods
nop
lret
cmpsl
insb
dec
les
sti
pop
lret
sbb
dec
jbe
loop
push
insb
xchg
mov
in
fcmovu
jecxz
pop
cltd
mov
push
mov
jmp
js
cmp
out
mov
dec
ret
mov
outsb
sub
cld
pusha
mov
movaps
xchg
sub
sbbb
mov
or
jecxz
jge
ret
sahf
push
pop
xchg
xor
dec
sbb
lahf
sarb
cmp
shl
xchg
sbb
fwait
cmpsl
lret
imul
mov
cltd
jne
xor
ss
insb
call
cli
outsl
test
cmp
inc
adc
decb
test
iret
push
xlat
add
xchg
scas
inc
ss
xor
int3
sahf
and
inc
sub
or
sti
mov
push
sahf
push
jle
jge
adc
lahf
call
inc
xor
jmp
ret
pop
pusha
fsubl
mov
bound
into
adc
fidivrs
cld
lahf
xchg
and
sbb
fldt
jo
enter
pop
sbb
enter
and
push
inc
lods
mov
and
aam
call
subl
push
sbb
mov
mov
outsb
jmp
aaa
push
lahf
in
sub
test
xor
mov
inc
mov
push
xchg
scas
enter
sbb
test
push
fimull
andb
dec
pop
mov
imul
push
out
lahf
neg
jle
mov
xor
call
pop
pop
popf
or
add
pop
sarl
cmp
sahf
stc
in
xchg
pop
jecxz
lds
dec
inc
or
in
les
leave
inc
dec
orb
mov
ja
dec
adc
mov
addr16
sbb
mov
mov
in
jno
mov
gs
sti
out
cs
xchg
sbb
adc
or
subb
sub
pop
insl
cmpb
cmp
inc
int
jecxz
inc
adc
fs
xor
pop
mov
and
int
add
push
test
lret
test
adc
push
adc
xchg
mov
push
mov
out
sahf
aas
ljmp
in
or
rolb
bnd
loop
cltd
dec
aas
daa
dec
pusha
mov
pop
push
stos
filds
mov
add
xchg
ds
sub
pop
pop
aas
adc
xor
movsb
sub
test
loopne
cmp
xchg
add
in
faddl
out
mov
loope
add
sbb
inc
nop
stc
sti
mov
pop
xor
shlb
mov
jbe
pushf
ja
sub
sbb
mov
psllq
in
scas
or
fcompl
cmp
xchg
xor
adc
nop
ds
jp
in
lea
or
pslld
hlt
sahf
imul
mov
fistpl
sbbb
cmp
notl
mov
jo
insl
jle
cld
fidivs
sbb
shrb
mov
pusha
sub
mov
inc
xor
xchg
jmp
repz
or
pop
add
jle
cltd
and
scas
sti
aad
inc
push
mov
adc
cli
fidivrs
out
add
js
mov
xchg
pop
dec
outsl
out
and
fisttps
pop
xchg
add
lret
vmovmskps
pop
adc
leave
aad
imul
push
pop
jge
rcrl
xor
loope
cmp
sub
out
les
fstpt
push
call
scas
sub
cli
xor
ss
or
and
enter
js
and
in
adc
fdivp
lea
sub
into
cli
mov
loope
popa
mov
mov
jnp
clc
jne
pop
je
mov
xchg
dec
jbe
cmpsb
faddp
add
jbe
and
fldt
and
mov
fldenv
mov
mov
js
lcall
cmp
clc
rorl
dec
loop
cmpsl
push
test
lea
int3
and
sbb
fcmovnb
push
lods
nop
inc
scas
int3
jg
fs
dec
inc
push
mov
insl
cmp
mov
jno
pop
mov
inc
mov
fxam
bound
inc
ficoms
stos
adc
in
add
mov
mov
push
add
leave
sub
or
mov
aas
jne
mov
enter
jmp
adc
cld
add
daa
mov
out
dec
cmp
push
sub
popa
scas
outsl
mov
adc
fcomps
into
iret
nop
loop
dec
inc
lcall
insl
mov
int3
fcmove
pop
mov
dec
rol
sub
test
out
xchg
add
pop
outsl
rcrb
repz
stos
adc
inc
lret
pusha
cltd
mov
fwait
push
xchg
sub
mov
sahf
pop
fmuls
and
mov
fcoml
fisubl
int3
into
cmp
test
arpl
push
repz
sbb
xchg
pop
loopne
movsl
push
pop
adc
jmp
mov
xor
das
push
sbb
test
mov
jge
xor
daa
stc
xlat
xor
cld
xchg
fmuls
mov
add
and
les
int
mov
leave
dec
fwait
or
push
mov
dec
xchg
mov
into
ss
lods
lds
std
mov
xor
sbb
mov
scas
and
mov
dec
inc
push
pop
mov
pop
xor
rorl
add
push
push
mov
mov
movsb
pop
mov
push
mov
xchg
pusha
roll
lahf
adcl
push
cmp
add
outsl
fcomi
mov
scas
cmpsb
scas
mov
mov
and
test
imul
push
sub
les
xchg
or
mov
rolb
sbb
in
xchg
scas
adc
sub
or
push
or
es
pop
xchg
fmul
dec
mov
push
adc
xor
xchg
mov
nop
adc
mov
dec
lret
enter
and
xor
cmp
lret
in
xor
popa
insl
mov
or
add
int3
aad
gs
cs
loopne
mov
fxch
orb
stos
loop
mov
or
sahf
ret
scas
pop
cmp
jle
push
in
push
inc
mov
mov
out
inc
or
pop
add
nop
repz
and
jno
or
repnz
out
xchg
mov
xlat
add
outsb
and
sahf
sbb
mov
hlt
xchg
xchg
ficomps
es
das
dec
out
rcll
mov
or
pop
test
arpl
push
leave
xlat
cs
jge
dec
sbb
pop
pop
and
movsb
dec
and
lcall
movb
int
push
push
jl
loope
mov
lcall
cmp
adc
jnp
pop
out
out
gs
cmp
mov
pushf
std
push
gs
and
addr16
jnp
frstor
inc
jb
sub
sub
ja
fldcw
mov
lahf
jp
sbb
jg
sub
dec
aam
daa
sarl
inc
ljmp
add
xchg
xchg
subb
loop
popf
inc
aas
std
dec
lock
aam
jg
dec
mov
leave
loopne
inc
jmp
mov
jo
pop
push
cmpsb
sbb
xchg
dec
loope
aaa
push
jge
xor
inc
push
dec
outsb
inc
sub
mov
and
push
imul
fcomp
mov
mov
cmp
xlat
in
mov
fwait
sub
and
sub
frstor
mov
shrb
outsb
lods
xchg
hlt
cld
lret
xor
lret
ss
addr16
out
inc
or
mov
inc
cwtl
jb
lret
pop
pusha
adc
dec
cmc
push
jno
jl
mov
inc
in
xor
cmp
jne
xchg
xor
jns
inc
lret
into
and
cld
inc
pop
ja
mov
cmpsl
adcb
pop
sbb
mov
and
aad
jl
sti
pop
out
add
push
gs
push
pop
rol
add
stos
lods
or
xchg
test
or
leave
sbb
xor
fistpll
xchg
mov
mov
adc
jmp
mov
xchg
add
mov
sarb
fistl
push
aad
dec
lods
mov
cmp
jno
jecxz
add
push
popf
xchg
ds
adc
and
mov
xchg
add
cmpsl
rol
pop
js
push
test
out
iret
xor
test
aas
insb
jecxz
aas
loop
inc
jae
pop
aas
pop
push
clc
jmp
leave
xchg
hlt
mov
mov
mov
aad
divb
in
data16
mov
xchg
pop
ror
adc
xchg
pop
sbb
xor
lsl
push
xor
cmpl
pop
daa
mov
dec
mov
in
lea
lock
xchg
imul
addr16
pop
leave
aaa
pop
ret
mov
int3
sub
mov
test
out
cltd
cmp
mov
lods
push
mov
xchg
or
hlt
push
inc
scas
pop
dec
out
inc
lds
jle
clc
scas
cld
and
loop
lods
jmp
or
sbb
push
ret
add
jne
ret
cltd
lret
lods
in
and
popa
imul
mov
adc
repz
push
inc
xchg
test
jmp
or
fadds
adc
mov
sbb
lods
xchg
xor
and
adc
loopne
pushf
sahf
outsb
lcall
pop
inc
bound
mov
push
mov
ror
fistl
adc
pusha
sbb
in
jp
lock
jne
pusha
lock
into
cmpsl
dec
push
mov
sbb
mov
push
lahf
sbb
mov
pop
and
aaa
lret
and
jno
mov
adc
das
jns
and
jl
insb
fldt
and
pop
jnp
sub
push
add
rorb
daa
push
mov
adc
leave
pop
jg
adcl
sub
ds
pushf
scas
es
xchg
dec
and
dec
mov
or
pop
dec
mov
sub
mov
dec
decl
int
lods
push
fucom
mov
mov
imul
dec
sbbb
mov
dec
jge
jl
sbb
popaw
stos
cwtl
adcb
mov
inc
call
inc
xchg
int
xor
call
inc
cmp
aaa
fnsave
test
les
les
dec
cmp
test
push
scas
insb
pusha
imul
bound
ja
sub
dec
shll
test
jno
ljmp
jno
sub
sbb
cli
and
cwtl
shrb
sbb
adc
add
cmp
mov
xchg
cmpsb
out
popa
mov
cmp
scas
add
insb
cmp
jp
xchg
push
inc
fdiv
xchg
xchg
ljmp
xchg
and
inc
test
fdivrs
rcrb
leave
add
dec
or
mov
xchg
scas
ljmp
ficoml
mov
popf
pop
movsl
xchg
into
sahf
push
push
sar
xchg
xchg
sub
js
sbb
or
pop
jae
loop
adc
push
pushf
loop
mov
clc
neg
pop
loope
outsl
je
daa
loopne
mov
ljmp
xor
mov
cmp
lds
inc
imul
mov
fxch
int
mov
inc
orb
into
mov
pop
mov
cltd
mov
pop
lret
xor
pop
or
xor
pop
xor
pop
sbb
jno
enter
aas
xchg
pushf
pop
cld
outsb
mov
sbb
orl
movsb
push
dec
jp
adc
idiv
loop
push
and
cld
cmp
rcl
aam
aas
jg
or
mov
cmp
inc
dec
fistpl
jl
mov
test
lcall
adc
xor
sub
test
in
sub
adc
enter
pop
out
and
stc
in
jmp
mov
dec
xor
or
dec
mov
mov
outsb
lds
jno
in
out
jb
out
sbb
jo
sbbb
jecxz
daa
into
jp
xchg
cld
loop
ret
fildll
movsl
xchg
mov
mov
inc
repnz
fdivs
out
sbb
xor
push
sbb
fistpll
call
testl
loopne
faddl
push
mov
jg
xchg
stos
adc
cmp
sbb
jl
mov
or
xchg
cmp
push
fldcw
stc
mov
pusha
das
sub
pusha
loope
iret
jl
mov
inc
es
jb
dec
sbb
ret
stos
pop
push
and
cmc
xor
xlat
cltd
or
push
clc
xchg
outsl
fcomps
mov
vhaddpd
cmp
imul
shll
movaps
add
sbb
subb
dec
jo
fwait
pop
adc
leave
or
movups
test
mov
roll
mov
or
mov
addb
jne
pop
push
sbb
sbb
into
pop
lea
movsb
sahf
pop
xlat
pop
mov
cmp
mov
daa
cmpsl
mov
in
mov
fldl
jg
and
xchg
insb
inc
lret
jb
cltd
sbb
movsl
and
push
mov
gs
jmp
out
push
jmp
xchg
aaa
or
xor
pushf
mov
mov
dec
fistpll
fisubl
daa
pop
bound
and
aas
jl
add
jmp
sub
jl
mov
imul
adc
cld
dec
inc
repnz
hlt
xor
outsl
mull
faddp
in
mov
lahf
mov
scas
dec
sbb
mov
negl
sub
push
xchg
xor
inc
mov
in
adc
sbb
fisubs
shlb
addb
dec
mov
divl
movsb
pop
pop
flds
pop
xchg
inc
pop
int
xor
mulb
loop
es
lahf
hlt
int
in
les
roll
movsb
and
add
fsts
out
repnz
out
pop
or
push
pop
in
adc
sub
test
in
out
cmpsl
cmp
movsb
aaa
cli
lea
jno
sub
imul
push
notl
dec
test
or
lds
sub
sub
repnz
xchg
xchg
into
sbb
flds
sbb
jne
ret
dec
and
jae
ljmp
inc
bound
mov
xchg
or
test
scas
cmpb
call
mov
pop
mov
jle
mov
add
mov
aas
leave
js
mov
jne
sub
jecxz
sbb
jnp
cld
cmpb
adc
out
hlt
mov
mov
xchg
scas
dec
xorb
imul
pusha
sti
add
fistl
xor
inc
test
add
pop
sbb
pop
cmpsl
ret
mov
testl
mov
sbbl
jns
inc
fwait
out
clc
call
dec
outsl
adc
aaa
sbb
sub
mov
incb
sub
jg
stos
mov
test
jmp
cmc
insl
enter
push
out
lods
pop
jb
sbb
imul
call
idivl
adc
bound
out
adc
int3
sbb
imul
jge
pop
sbb
insl
cmp
fsubs
cmp
sbb
andl
movsb
sbb
cld
xchg
loopne
dec
ds
mov
sub
sbb
push
mov
daa
xor
inc
lret
or
or
xchg
dec
pop
movsl
pop
loope
mov
mov
add
mov
lret
aas
out
mov
shll
ret
push
sarb
stos
jbe
fucomip
insb
pop
pop
xor
pop
out
sarb
xlat
xorb
jle
xor
test
das
mov
pop
xor
jge
cmc
cmp
fs
daa
inc
bound
pop
sahf
cs
cltd
push
fsubr
in
cmpsb
pop
clc
mov
fs
enter
out
enter
xchg
lcall
rclb
cltd
mov
or
pop
loopne
mov
pop
pop
and
cmp
mov
push
and
sbb
pop
sbb
sub
inc
mov
sbb
sti
fs
jns
in
or
in
push
sbb
jae
pop
push
sub
out
add
hlt
pop
xchg
ljmp
pusha
inc
jno
and
cmp
stc
or
sub
scas
inc
xchg
jne
mov
jbe
testb
sbb
mov
cmpsl
lret
fs
sub
negl
imul
incl
rclb
sub
faddl
mov
push
and
push
cmc
js
popa
jg
int
xchg
add
rclb
lock
sub
lcall
cmp
pusha
cmc
stc
aas
sahf
in
and
lcall
jge
push
out
sbb
roll
push
aad
mov
shl
jo
adc
mov
movd
clc
sbb
call
jg
scas
bound
add
cmp
loop
rcll
jl
mov
stos
idivl
xchg
test
mov
stos
loope
jmp
xchg
clc
sbb
test
and
pop
mov
je
jmp
cmp
or
cli
imul
aam
cmp
jg
push
jl
cmp
js
push
fstp
ret
clc
sub
sarl
out
call
out
push
mov
stos
outsl
adc
push
mov
shlb
adc
pop
push
ds
sti
stos
inc
ret
aas
sub
cmp
popa
mov
jp
in
ss
addr16
sarb
mov
iret
addb
mov
sti
setl
shr
inc
xchg
ljmp
xchg
sub
or
jae
ret
mov
push
decb
out
jne
pop
movaps
pop
addr16
jg
iret
loopne
rorb
and
data16
xor
addr16
cmp
lcall
pop
push
sahf
hlt
aaa
loope
adc
jmp
cmpsb
mov
daa
cltd
jo
popf
test
mov
push
adc
andl
cmpsl
add
fwait
sbb
add
mov
fsin
mov
stos
xchg
das
insl
fcmovnb
mov
jge
xchg
and
in
inc
dec
pop
push
dec
inc
popa
jo
xchg
add
adc
and
rcrb
in
mov
dec
sub
stos
jecxz
imul
xchg
leave
jns
xor
ljmp
push
jp
test
sbb
rcll
pop
int3
sbbb
dec
sarb
out
out
xlat
mov
ja
jns
lods
fstpl
rcrb
fs
icebp
xor
filds
cmp
mov
js
testl
sahf
cmc
nop
stc
pop
adc
insb
icebp
fdivl
xchg
inc
int3
or
iret
sub
sbb
or
aaa
mov
fisubrl
fsts
mov
in
cbtw
dec
rcrb
shlb
cwtl
mov
mov
and
sub
dec
dec
cmp
out
gs
outsb
enter
les
inc
push
push
push
pop
data16
repz
pop
mov
mov
nop
sub
scas
xchg
push
cmp
mov
sub
pushf
call
jb
dec
sbb
in
sahf
dec
imul
sub
int
movsl
xchg
push
lods
cmc
jg
mov
in
pop
mov
das
jg
inc
push
sub
das
add
cmp
inc
cmpsl
mov
mov
push
nop
dec
insl
lar
xor
inc
inc
jbe
stos
inc
imul
mov
pop
into
mov
and
jnp
jp
pop
lcall
jmp
cli
xor
sahf
das
cmp
in
xor
icebp
hlt
push
cmp
add
xchg
inc
or
stc
aas
jnp
movsl
ss
ljmp
in
hlt
xchg
pop
xchg
mov
jge
cmp
out
out
lahf
insb
imul
pop
loope
lock
jbe
test
cmpsb
scas
int
fiadds
mov
pop
mov
adc
popa
jge
pop
mov
xor
in
dec
hlt
add
rcrl
std
insb
loop
fidivrs
push
jae
test
mov
and
lahf
or
fidivl
adc
xchg
add
add
sbb
movsb
or
int
test
shll
jbe
xchg
push
xchg
xor
mov
loopne
cmp
into
add
lea
div
xchg
xor
sub
fsubl
ljmp
bound
xchg
pop
xchg
ret
sub
add
fs
xor
rcll
mov
push
jne
test
mov
add
jg
or
shlb
pushf
shlb
nop
cmc
xor
pop
fdivrl
ss
sub
cmp
xor
cmp
sub
and
xchg
stos
push
inc
sub
ss
cmpb
pop
gs
loop
add
mov
sub
push
jmp
subb
ss
insl
js
sub
sbb
adc
mov
or
aaa
mov
shll
or
sti
inc
dec
sbb
xor
xor
lret
insl
mov
jp
fildl
pop
inc
jnp
fldt
mov
repnz
jae
jno
ficompl
mov
sbb
popf
inc
dec
xor
jge
lea
je
lock
bound
ficoml
cli
xchg
stos
push
cli
xchg
pop
enter
cmc
aas
test
dec
in
push
adc
cmpsl
sub
sbb
mov
in
push
enter
jne
xor
lods
stos
or
shll
and
popf
mov
iret
testl
scas
push
inc
movsl
popa
sub
popa
or
scas
fnsetpm(287
dec
sbb
jg
lods
loopne
mov
xchg
and
insb
int
rcll
jmp
mov
popf
xchg
push
rcrl
xor
push
out
adc
mov
fwait
push
xor
adc
cltd
addl
mov
insb
jecxz
out
mov
orb
push
stc
ret
sbb
xor
jno
leave
mov
xchg
xor
sub
fimull
outsl
stos
xor
das
dec
xor
pop
lahf
sbb
mov
dec
mov
cmp
sub
xchg
fbld
cmpsb
mov
faddp
sub
push
fldenv
pushf
lahf
loopne
cmc
mov
and
adc
fisttpl
gs
adc
cmc
pop
out
jp
add
daa
push
and
int
push
cmc
sub
and
ss
jnp
cld
dec
xchg
mov
int3
or
fmuls
sub
jnp
ficomps
loopne
aad
xchg
test
std
pop
xchg
imul
jae
iret
jb
xor
push
sti
xor
aaa
ret
rclb
inc
mov
das
push
insl
sbb
lret
dec
xor
daa
dec
inc
mov
pop
stos
mov
std
and
rcrl
stc
adc
sub
pusha
mov
rorb
jmp
pop
ljmp
jbe
mov
adc
inc
js
pop
pop
test
loopne
pop
scas
js
and
jbe
xlat
xchg
mov
or
sub
jno
fldenv
daa
or
jle
je
jg
lds
adc
insl
cmp
pop
lods
sahf
sub
insl
les
jne
push
pop
loopne
aad
insl
test
cmp
cmp
adc
jb
lds
pop
mov
aaa
imul
mov
fisubl
stos
cmp
nop
jbe
lock
mov
repnz
adc
bextr
aas
popa
orb
and
mull
je
js
mov
jl
lea
inc
popa
dec
or
iret
popf
data16
cmp
inc
test
call
mov
dec
icebp
dec
pop
push
jg
fiaddl
cmpsl
movsl
cmp
xor
cmpsl
sub
fistpl
roll
xor
jl
stos
movsl
cs
mov
int
and
adc
push
std
push
scas
mov
jp
mov
fwait
mov
jmp
call
xchg
push
jge
mov
xor
xor
inc
es
and
fldenv
or
push
popf
in
or
mov
mov
fldl
into
repnz
stos
cmp
mov
adc
cmpsb
mov
sbb
cmpsl
pop
test
ficomps
clc
ja
rorl
lcall
inc
out
lea
test
add
hlt
loopne
xchg
mov
adc
add
add
das
out
xchg
loop
shll
movsl
ss
mov
mov
xor
vmulss
pop
cmp
pop
jmp
test
js
and
and
push
mov
loop
xor
lret
cwtl
and
sub
clc
cs
into
stos
pop
mov
mov
pop
pop
and
cmpsl
repnz
sbb
gs
jne
cs
int
mov
dec
xchg
lock
shrl
fnstsw
jg
jnp
sub
fdivs
lret
inc
hlt
sahf
dec
test
lds
jmp
jmp
mov
lods
cwtl
jnp
cmp
pop
push
xor
jnp
mov
xor
stc
fnsave
push
movsb
mov
loopne
cmp
xchg
insl
push
lea
lods
add
dec
xchg
mov
stc
push
inc
pop
testb
jne
pop
or
mov
aaa
mov
fcomip
push
mov
ja
test
pop
xchg
ja
cmpb
movsb
xchg
data16
lods
outsb
ror
pop
lcall
sbb
ds
shlb
sarb
jmp
aad
cmp
mov
xor
jp
std
jne
mov
pop
out
adc
insb
dec
jne
mov
dec
daa
test
jl
shr
sub
mov
jno
data16
aas
sub
jmp
push
push
xchg
jae
ljmp
dec
loop
pop
xor
in
insl
jno
add
and
mov
cmc
adc
and
xchg
out
stc
dec
test
pushf
adc
ss
shlb
popa
scas
push
cmpsb
adc
or
scas
enter
cltd
push
or
fmul
ss
inc
out
ds
mov
popa
or
sbb
insb
dec
test
dec
xchg
rcll
mov
mov
stos
add
lods
lds
pushf
ds
lcall
mov
mov
xchg
fstl
xchg
imul
cmpsl
pand
xor
fdivrs
mov
imul
fstps
mov
popf
inc
cld
mov
cmp
or
dec
lret
cmc
cmp
psubusw
push
and
test
dec
jno
insb
rcl
test
jg
test
or
adc
inc
inc
pop
mov
push
or
dec
imul
push
mov
inc
icebp
movsb
insb
add
ds
jl
hlt
xchg
ds
cmp
sbb
hlt
ficompl
sbb
leave
in
jbe
test
pop
cmp
fnstsw
jl
pop
repz
into
test
mov
stos
negl
shlb
jo
push
outsl
and
sbb
mov
std
es
mov
std
push
loope
call
pop
sub
mov
push
sub
xchg
fdivrp
pop
inc
push
and
popf
cmp
pusha
fisubl
loope
adc
movsl
lds
inc
aam
pop
adc
stos
lods
movsb
out
imul
xor
or
test
aaa
push
fimull
aaa
sub
mov
pop
jmp
xor
repnz
mov
insl
in
mov
mov
test
xlat
mov
lock
les
cmp
push
in
mov
xchg
cmp
das
mov
fldt
out
jecxz
xchg
je
mov
xchg
mov
push
and
sub
xor
push
push
inc
push
xchg
aaa
nop
roll
idivb
ljmp
xchg
imul
push
sbb
jno
nop
mov
lret
in
cmc
icebp
je
fsubl
dec
mov
sub
mov
mov
adc
subl
insb
pop
dec
es
outsl
inc
outsl
pop
add
push
fmul
lret
and
cmpsl
inc
popf
push
inc
cltd
sub
test
mov
adc
mov
cld
iret
add
les
mov
insb
mov
rcrl
sub
cs
jle
fidivs
inc
ss
mov
out
out
push
xchg
jne
scas
mov
inc
je
ljmp
xor
notl
mov
pop
adc
into
and
sub
leave
pop
orb
jge
cmp
insl
xchg
jmp
push
xor
out
jg
jns
mov
repz
je
xchg
call
mov
dec
std
pop
mov
pusha
mov
fcmovnu
addr16
pop
sbb
xor
lods
pop
shlb
inc
dec
mov
sbb
mov
ror
inc
adc
mov
imul
or
xchg
and
daa
sub
lods
mov
and
inc
pop
shr
jno
daa
shl
jno
fisttps
mov
fs
dec
xchg
lcall
into
mov
dec
push
pop
push
adc
loopne
or
arpl
outsb
in
mov
sbb
outsl
rcrl
pop
pop
faddp
push
jmp
hlt
cli
orl
pop
sub
mov
jmp
fiadds
stos
jp
mov
icebp
mov
imul
and
xchg
popf
jle
mov
sub
outsb
aaa
insl
pop
inc
out
cltd
push
movsb
pushl
outsb
popl
mov
ror
mov
flds
add
sub
lret
cmp
pop
cwtl
aas
insl
mov
xchg
cwtl
sbb
add
out
aam
repnz
add
jno
out
mov
gs
jno
or
mov
inc
inc
cmp
mov
rolb
lret
in
lret
push
lcall
inc
and
testb
dec
mov
cmpsl
test
ss
cwtl
xchg
sub
pop
adc
in
pop
adc
into
jbe
sub
jnp
push
popf
push
push
loop
negl
xchg
jns
out
nop
and
xchg
jb
mov
daa
dec
and
pop
int3
xchg
mov
xor
popf
in
ss
mov
adc
adc
mov
dec
mov
adc
adc
roll
dec
insb
insb
fdivrs
xor
lods
sub
push
loopne
mov
mov
insb
ja
cli
imul
dec
dec
add
iret
jb
mov
xor
shl
jo
mov
push
and
mov
stos
out
lock
mov
outsl
les
mov
loope
push
dec
jno
and
pop
data16
cs
push
inc
shlb
fmul
ds
stos
mov
add
push
nop
cmpl
mov
sub
sub
enter
sub
adc
mov
push
data16
cld
scas
pop
dec
scas
jmp
dec
xchg
fistpl
mov
mov
fdiv
das
add
je
cmpsl
cmc
sbb
push
loop
dec
jmp
call
imul
aas
inc
push
dec
stos
jge
sub
mov
mov
movsl
les
lcall
jle
aam
xchg
ja
pop
fdivs
inc
or
decl
iret
nop
mov
loop
inc
insb
mov
notl
sbb
mov
xchg
or
aad
mov
data16
lahf
cmp
in
ljmp
adc
mov
addr16
mov
sar
ljmp
dec
mov
out
push
mov
pop
loopne
mov
scas
sub
mov
pop
jo
xor
mov
or
push
lods
add
push
movsb
cld
lcall
ds
ja
cmpsb
mull
push
scas
sbb
xchg
pop
cmp
into
gs
out
add
sbb
imul
jae
mov
xchg
mov
iret
mull
das
bound
clc
pop
sub
lds
fs
mov
int3
sti
lods
mov
inc
push
lods
mov
mov
mov
jg
inc
pusha
loopne
ds
cmc
rol
sub
jno
mov
xor
or
stos
pusha
in
and
add
pop
idiv
xchg
adc
testb
inc
push
mov
mov
repnz
add
mov
rorb
lea
addr16
stos
jne
inc
lret
mov
mov
pop
push
mov
sti
and
js
out
cmpsl
fistl
pop
loope
stos
lahf
rol
push
inc
loopne
pop
lahf
aaa
out
outsb
loop
sbb
inc
nop
repnz
jnp
iret
jns
cmp
aad
sahf
mov
sub
pop
sbb
ret
add
mov
addr16
dec
ja
mov
repz
fstps
in
iret
ficoml
ja
movsb
mov
push
and
mov
shl
iretw
in
mov
sub
popf
lret
xchg
adcl
sub
sbb
dec
enter
sti
popa
cmp
mov
movsl
aad
push
push
icebp
xor
lods
into
push
mov
add
push
push
add
xchg
pop
or
nop
xchg
test
je
xchg
adc
jo
cmpsb
inc
pop
in
ffree
push
sbb
call
cmpsb
sbb
lcall
jmp
je
cli
and
mov
test
sub
lret
mov
or
xchg
mov
sub
out
popf
pop
xchg
pushf
mov
and
ds
dec
lcall
fcom
mov
repz
outsl
and
add
cli
aam
das
cld
sbb
mov
mov
push
ds
arpl
fsubs
das
in
hlt
rcr
mov
or
adc
mov
out
adc
jae
sbb
je
add
sub
mov
xchg
ror
insl
mov
or
dec
cmc
sbb
rorl
aas
out
dec
xchg
jl
scas
outsl
jge
push
dec
xchg
fbld
mov
fxch
add
jp
les
hlt
ljmp
into
aam
or
cmpsb
adc
xor
and
test
sub
jae
scas
cmp
sbb
lret
cmc
cwtl
scas
sub
inc
imul
stos
in
or
mov
pop
lods
xor
xchg
imul
add
sbb
mov
sub
sub
add
dec
add
push
push
aas
inc
xchg
jno
jp
movsb
lahf
bound
insb
pop
xchg
fisttpll
ret
das
lock
adc
pop
inc
pop
repz
push
fstpl
jl
stos
jle
movsl
mov
lret
and
mov
lret
pop
xchg
lock
push
xchg
into
xchg
mov
xchg
lret
addr16
imul
fwait
cmpsb
bound
orl
add
in
das
aaa
addr16
faddl
pop
xchg
lods
movsl
sub
jae
lcall
and
xor
add
inc
cwtl
sbb
rol
push
movsb
int3
pop
add
les
fwait
lret
cld
int
loopne
fidivrs
sbb
push
sub
mov
xlat
cwtl
dec
lret
lret
mov
dec
aas
jecxz
stos
bound
movsb
dec
xchg
jecxz
push
loop
mov
cmp
push
fcompl
cmpsl
jmp
adc
pop
add
xchg
cs
mov
pop
push
aad
add
dec
dec
notl
shr
jmp
jno
mov
cld
stos
and
inc
pop
jbe
les
fbstp
shll
test
ds
mov
mov
mov
rcll
mov
lea
ret
xor
fists
aas
leave
and
stos
es
in
fimuls
dec
out
xchg
cmp
pop
mov
gs
repnz
cld
jo
shlb
dec
div
xor
cltd
mov
jp
lret
loop
adc
dec
mov
std
add
mov
mov
jmp
popf
xor
inc
shll
out
or
add
mov
ja
sub
jmp
pop
bound
pop
in
mov
hlt
fstpt
add
jb
rcrl
in
bound
mov
dec
inc
leave
xchg
call
inc
cld
add
es
loopne
adc
lahf
test
adc
jno
lcall
dec
xor
data16
popa
call
or
dec
lods
rol
lahf
adc
or
push
jecxz
mov
add
loop
add
outsb
fcompl
lods
nop
and
addr16
sub
in
jecxz
push
or
aad
imul
aaa
push
sbb
ja
lock
mov
cmp
test
pop
mov
mov
inc
adc
in
arpl
popf
add
xchg
call
xorb
adc
cmp
lret
and
pop
push
enter
jle
push
into
xorb
dec
cmp
mov
in
adc
sbb
je
mov
rcr
jne
sub
pop
rcrl
sub
cmp
inc
jle
dec
xor
loopne
lret
mov
rolb
sub
cwtl
lret
int
das
pop
test
or
stc
push
cwtl
rcrl
dec
mov
jecxz
pop
fcomps
stc
jp
shll
scas
xchg
int3
test
jp,pt
mov
outsl
mov
outsl
stc
shll
sbb
jle,pt
sbb
pop
data16
aas
arpl
sarb
leave
orl
jb
in
les
ret
jecxz
add
jb
add
jne
cmp
and
sub
sub
mov
dec
mov
mov
cmp
ret
lret
cmp
cmpb
pop
test
or
inc
std
pop
aaa
fstpt
sbb
sbb
cmp
sbb
jmp
push
out
mov
fldt
pop
fxch
cmp
dec
jb
dec
cmpsb
mov
push
xchg
aaa
pop
cli
push
out
xor
test
mov
fimuls
jne
pop
cli
clc
std
arpl
or
imul
test
stos
cmc
gs
test
out
clc
aas
add
fildll
hlt
mov
adc
imul
lahf
or
jno
sti
push
in
mov
andl
stos
insb
adc
aaa
mov
rcll
sbb
loop
jge
mov
xor
lds
ror
sub
sub
or
or
dec
test
cmpsw
sbb
fisttpll
adc
or
stos
jnp
cmc
add
mov
sbb
jecxz
jle
stos
and
mov
adc
mov
mov
and
mov
jbe
call
in
daa
into
jo
and
jns
enter
push
jb
out
xor
lods
fadds
mov
out
inc
lcall
xor
test
fcompl
imul
inc
mov
jb
cmp
rorl
cld
icebp
pop
out
stc
adc
adc
jmp
scas
xor
out
leave
scas
shlb
aas
jbe
aad
test
add
sti
dec
or
push
pop
ret
mov
hlt
fwait
mov
pop
jno
jnp
dec
fldenv
fmulp
push
xor
fildl
fidivs
popf
or
shrl
ret
aaa
mov
repnz
jecxz
mov
clc
fucomi
adc
lahf
std
cli
jb
arpl
icebp
es
xor
cmp
incb
pop
mov
test
jge
or
pop
mov
frstor
or
sub
push
cltd
xchg
popa
jg
mov
mov
xor
xor
mov
sbb
jo
sub
fs
mov
add
sbb
mov
into
sti
mov
aad
scas
lcall
inc
mov
lods
mov
fldt
sbb
xor
test
add
and
jns
repz
leave
dec
mov
es
mov
mull
jb
aas
pop
div
aad
orb
cmp
out
sbb
movsl
jno
xchg
movsl
cli
repnz
jnp
shl
cmp
jne
push
ljmp
sbbl
inc
push
xchg
gs
insl
xor
mov
test
pop
jp
lea
popf
dec
pop
push
pop
pushf
push
sbbb
inc
sub
jecxz
sub
and
push
push
ret
pop
mov
loop
pop
mov
xor
xor
arpl
imul
outsb
add
fildll
stos
adc
add
jne
jge
xchg
and
xchg
add
mov
subl
lods
out
pop
leave
mov
aas
dec
and
xor
xchg
sbb
mov
mov
cmc
mov
stos
cwtl
movsl
xor
test
inc
push
push
icebp
jl
fdivl
into
pop
inc
insb
mull
mov
cmp
out
xor
in
dec
mov
loop
xchg
mov
divl
rclb
icebp
inc
pop
lret
in
pop
and
dec
and
or
push
sub
inc
popf
jl
or
xchg
mov
pop
and
repz
fadds
stc
or
int3
and
xlat
out
jo
imulb
mov
lcall
inc
jl
and
ljmp
rcll
xchg
fwait
fwait
push
pop
notl
xor
sbb
dec
or
mov
sbb
pushf
adc
mov
or
mov
out
jecxz
dec
cmp
scas
and
or
sub
mov
pop
jp
mov
cs
dec
repz
inc
lret
andb
clc
dec
stos
fwait
push
lea
pusha
imul
out
das
inc
jo
adc
adc
jg
push
stos
mov
jnp
mov
imul
movsl
push
push
xchg
int3
adc
push
jns
add
nop
stc
mov
mov
pop
add
push
or
scas
adc
imul
dec
mov
mov
mov
mov
add
inc
cmp
ret
xor
xor
out
setbe
leave
mov
dec
fildll
adc
mov
mov
jns
int
pushf
pop
pusha
loope
pop
rcll
xchg
out
stc
stos
aas
sbb
rcrl
iret
movsb
cmp
jns
movsl
mov
in
push
cmpsl
sets
out
fnstsw
xor
inc
mov
mov
dec
sbb
cmp
jg
and
stc
int
mov
scas
mov
mov
lock
shlb
sti
leave
enter
jge
mov
sub
sbb
xchg
pop
in
fdivrs
sub
cmp
pop
pusha
mov
popa
push
sub
or
ret
fcmovb
in
or
sahf
adcl
test
shl
ret
scas
lret
add
inc
ds
movsl
jae
lds
les
inc
movsb
faddl
pop
pop
mov
icebp
aad
pop
sub
pop
ss
ret
mov
scas
rclb
pop
call
lahf
sbb
mov
out
imul
pop
and
repnz
pop
mov
add
addr16
inc
sub
sbb
int
dec
test
shl
scas
jmp
mov
sbb
adc
bound
push
je
xlat
ja
ret
movsb
outsl
movsl
sbb
jl
out
pop
jge
adc
dec
mov
jmp
add
xchg
dec
dec
out
lods
loope
add
push
mov
cs
in
icebp
or
negb
dec
shlb
push
insb
or
pusha
icebp
push
int3
pop
repz
dec
ds
test
jg
jge
and
test
mov
stos
adc
lea
push
dec
pop
es
fildll
jno
dec
dec
lods
stc
sub
repz
sub
test
or
lahf
add
push
xor
andb
imul
aaa
xchg
xlat
cwtl
sbb
and
loopne
scas
xchg
pop
mov
mov
clc
scas
popw
sti
sar
fstpl
mov
enter
pushf
adc
dec
test
push
hlt
mov
push
cs
add
jmp
jg
ret
es
dec
push
lock
ss
aam
mov
incl
dec
fildl
fcmovu
add
cmpb
fnstenv
pop
orb
cmp
clc
js
adc
push
ds
dec
cld
and
repz
ret
pop
cmp
imul
xchg
inc
repnz
std
dec
push
jne
xlat
mull
jb
mov
or
out
fucomi
inc
js
pop
add
sbb
push
jno
xchg
pop
aaa
sbb
subl
dec
subl
add
sbb
sbb
add
dec
outsl
sbb
into
adc
jp
sub
xchg
into
or
mov
fiaddl
mov
add
aaa
fistl
movl
xor
das
loop
sti
adc
js
inc
popl
sbb
mov
push
xor
push
and
idivl
xchg
jne
inc
daa
push
push
jno
insl
test
and
xchg
mov
cmpsl
dec
sti
mov
in
push
mov
in
mov
jbe
aas
push
shl
gs
mov
out
shlb
incl
movsl
shr
jmp
inc
outsb
sub
movsl
rolb
sbb
mov
or
cmc
leave
int3
and
jecxz
or
sub
pop
add
mov
mov
or
sub
adc
sbb
test
dec
jl
or
int
pop
shlb
xor
insl
out
sbb
mov
fcompl
mov
xchg
and
rclb
into
or
jp
xor
and
icebp
xor
jae
ss
orb
add
jno
cmp
pop
cmp
mov
leave
or
enter
sub
adc
add
add
xchg
jnp
push
lcall
xor
pop
stos
xchg
in
mov
cwtl
mov
and
mov
rorb
insl
jne
cmp
mov
mov
push
xor
push
push
fldcw
enter
push
aam
sbb
and
sbb
pop
push
adc
ret
mov
repz
mov
dec
inc
sar
in
lods
mov
hlt
pop
push
shl
dec
xor
bnd
mov
je
fadd
aaa
pop
adc
jp
pop
xor
test
xchg
loope
push
or
push
int
add
pop
faddl
sbbb
sbb
push
push
fincstp
cwtl
pop
orb
iret
mov
xchg
pop
sbb
sahf
jns
stos
scas
loop
ljmp
das
mov
fistps
xchg
add
movsl
pop
jne
xchg
push
imul
loop
sbb
jne
shrb
daa
push
mov
shr
dec
jns
jno
jbe
xor
jne
jne
jmp
test
and
cmp
cmpsl
lcall
xchg
push
dec
loop
bound
pusha
call
icebp
bound
dec
out
mov
xor
pop
insb
movsl
jp
cld
cmp
pop
pop
sub
mov
dec
mov
dec
orl
insl
pushl
ffree
sbb
mov
call
clc
cmc
repz
inc
add
dec
push
inc
adc
pop
adc
enter
pop
jp
inc
out
pop
adc
sub
nop
aaa
test
dec
imul
std
add
sbb
imul
rolb
aaa
xor
fwait
or
in
mov
int
dec
inc
dec
cmpsb
cltd
addr16
and
pop
out
cmpsb
ret
cmp
popf
push
xor
mov
sbb
sti
test
in
pop
jo
les
lahf
scas
sbb
insb
adc
cmp
mov
jg
enter
popa
cmpsl
stos
mov
pop
cwtl
jb
lods
jecxz
jg
lret
mov
cmp
mov
adc
and
je
xchg
repz
in
mov
ret
popa
pop
stos
cmp
jb
mov
pop
push
jp
imul
mov
xchg
pop
ret
dec
jmp
ret
xchg
push
xchg
fs
icebp
or
das
pop
push
sti
add
adcl
movsl
dec
imul
mov
shlb
jae
or
sti
jp
inc
leave
inc
pop
cmp
and
insl
xor
pop
call
fadds
outsl
leave
push
jb
test
cmpsl
jl
push
sbb
scas
test
mov
push
frstor
rcl
lcall
xlat
push
xchg
and
dec
mov
push
push
test
mov
pop
addr16
mov
out
lods
popa
test
lret
lahf
xor
mov
inc
pusha
loop,pn
in
and
jbe
add
mov
data16
mov
sahf
mov
mov
rcrb
xor
cmp
pop
stc
sbb
pop
movb
fcoml
sti
cwtl
mov
mov
clc
mov
int
fadd
push
jb
bound
mov
into
lea
mov
les
scas
outsb
movsl
push
xchg
ret
sbb
sahf
push
sub
cmc
fdivrl
jne
jae
les
fisubl
mov
pop
lahf
jnp
lods
lea
clc
xor
fbld
sub
add
out
dec
sub
out
lods
fldl
pop
mov
fidivrl
fdivr
pop
dec
mov
bound
mull
bound
je
iret
jle
imul
inc
push
add
in
mov
in
das
jo
jne
mov
ljmp
daa
mov
mov
imul
aas
and
in
mov
xlat
or
aas
dec
daa
in
adc
and
fwait
dec
or
shrb
orb
jbe
cmp
test
int3
enter
xor
jge
test
loop
xchg
mov
mov
test
imull
push
dec
xchg
shr
mov
jmp
leave
lea
mov
mov
mov
and
fisttpl
cmpsl
outsl
ds
iret
jnp
arpl
mov
cmp
and
mov
cmp
nop
and
test
dec
out
leave
xchg
push
shrl
popa
or
xor
daa
test
cmc
pusha
pop
adc
inc
mov
adc
iret
repnz
jle
or
cmc
mov
mov
adc
xchg
cld
test
int3
xor
mov
jno
sti
dec
clc
lea
shrb
mov
mov
jo
dec
cld
test
test
mov
movsb
xorl
add
fwait
pop
or
adc
dec
loop
lcall
cmc
inc
inc
mov
pop
cmpsl
cmovno
pop
xor
inc
mov
xor
ljmp
daa
jmp
inc
popa
pusha
addr16
inc
sub
fcomp
push
inc
js
pop
inc
dec
inc
in
fwait
shll
call
xorl
nop
jno
shrb
stos
addr16
cmp
mov
scas
xlat
gs
fstl
ljmp
pop
mov
mov
ljmp
pop
jne
and
loop
inc
mov
movsl
aad
xor
and
jge
ss
inc
popf
add
jl
jbe
sarb
ffree
cmpsl
inc
outsl
cmpsl
test
cmp
push
sub
mov
or
jo
shlb
sbb
subl
push
mov
insb
je
mov
cli
arpl
mov
cmpsl
xchg
mov
nop
push
je,pn
jne
fidivl
out
push
loopne,pt
xchg
add
movsl
out
push
xor
lods
jno
mov
insb
nop
in
pop
iret
push
fistpll
inc
repz
cmp
repnz
les
in
or
adc
test
jae
push
repz
imul
int3
int3
mov
adc
mov
pop
pusha
cmp
mov
adc
popf
mov
adc
cwtl
frstor
add
mov
jle
adc
dec
int3
xchg
mov
or
pushl
and
lods
jp
xchg
mov
mov
ror
xchg
inc
xchg
stos
mov
inc
jl
iret
gs
lcall
