mov
neg
sbb
push
and
push
mov
push
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
lea
call
push
mov
movl
call
mov
mov
test
jne
mov
mov
test
jne
push
jmp
push
lea
call
mov
mov
push
push
call
mov
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
call
lea
add
add
cmpsl
into
decl
add
inc
and
add
xchg
into
decl
add
inc
and
add
xchg
decl
add
inc
and
add
decl
add
inc
and
push
mov
call
lea
movb
mov
call
push
mov
movb
movl
call
push
mov
call
mov
movl
mov
pop
pop
pop
mov
add
ret
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
mov
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
add
mov
add
ds
cld
add
add
xor
inc
add
sub
add
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
call
push
push
call
mov
add
test
mov
je
push
call
cmp
mov
jl
mov
lea
push
push
call
push
lea
push
push
call
add
lea
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
push
call
mov
push
call
mov
add
test
je
lea
push
push
push
push
push
call
test
je
lea
lea
push
push
push
push
call
add
test
jne
mov
push
call
push
call
mov
mov
mov
push
push
mov
push
call
mov
add
mov
mov
push
push
call
push
call
add
push
call
mov
pop
mov
pop
test
je
push
mov
push
push
push
call
push
lea
call
call
cmp
jge
movl
push
push
mov
call
push
call
add
push
mov
call
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
lea
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
add
add
cmp
decl
add
inc
and
add
sub
decl
add
inc
and
add
addr16
add
adc
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
movl
lea
movb
call
mov
movl
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
lea
call
mov
xor
mov
movl
mov
mov
mov
lea
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
cmp
jne
mov
mov
add
inc
cmp
mov
jb
mov
mov
push
push
push
push
call
movl
movl
mov
mov
lea
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
push
mov
push
push
push
call
mov
mov
cmp
jne
mov
mov
add
inc
cmp
mov
jb
mov
mov
push
push
push
push
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
push
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
push
push
mov
push
push
call
lea
mov
push
lea
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
push
mov
movb
movl
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
lea
mov
call
mov
mov
add
mov
cmpw
je
cmp
je
push
mov
call
push
mov
call
push
push
call
add
add
mov
cmpw
jne
mov
mov
add
mov
cmpw
je
push
push
call
add
add
cmpw
jne
sub
add
sar
shl
mov
mov
or
adc
add
mov
jns
inc
add
add
fs
je
mov
sub
jmp
lret
add
movsb
pop
pop
pop
pop
ret
pop
movl
pop
pop
pop
ret
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
lea
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
lea
movl
call
mov
push
movb
call
test
je
mov
test
je
lea
push
mov
mov
push
push
mov
call
test
jne
mov
test
setne
test
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
test
sete
ret
nop
nop
nop
nop
nop
mov
mov
test
je
and
mov
ret
call
ret
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
xor
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
add
mov
fldl
add
add
add
inc
add
sub
add
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
mov
or
jne
push
mov
movl
call
lea
call
lea
movl
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
rep
mov
mov
mov
lea
mov
mov
add
rep
mov
mov
lea
mov
mov
mov
add
rep
mov
mov
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
call
mov
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
call
push
mov
push
lea
call
mov
lea
mov
mov
test
dec
add
add
add
mov
call
lea
movl
call
mov
pop
mov
add
ret
nop
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
mov
call
test
je
mov
mov
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
mov
push
push
push
push
call
pop
pop
mov
pop
ret
mov
push
mov
call
pop
pop
pop
ret
nop
push
mov
xor
mov
mov
test
setne
push
push
mov
call
mov
call
mov
xor
mov
test
setne
push
push
mov
call
mov
call
mov
xor
mov
mov
test
setne
push
push
call
mov
call
mov
xor
mov
test
setne
push
push
mov
call
mov
call
mov
xor
mov
test
setne
push
push
mov
call
mov
call
mov
xor
mov
mov
test
setne
push
push
call
mov
call
mov
xor
mov
test
setne
push
push
mov
call
mov
call
mov
xor
mov
test
setne
push
push
mov
call
mov
call
mov
xor
mov
mov
test
setne
push
push
call
mov
call
mov
xor
mov
test
setne
push
push
mov
call
mov
call
mov
xor
mov
test
setne
push
push
mov
call
mov
call
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
call
add
mov
call
pop
ret
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
mov
or
jne
push
mov
movl
call
lea
call
lea
movl
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
call
lea
mov
xor
mov
movl
movl
movl
movl
rep
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
push
lea
add
inc
add
movl
movl
mov
movl
movl
movl
movl
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
push
mov
call
push
mov
call
pop
pop
ret
push
lea
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
call
lea
call
mov
mov
push
push
push
push
movl
call
mov
or
push
push
push
push
call
push
lea
call
mov
push
push
lea
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
mov
test
je
push
push
call
add
mov
push
call
lea
movl
call
mov
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
lea
push
mov
mov
push
push
mov
mov
call
mov
mov
lea
push
push
push
lea
call
mov
mov
test
je
xor
movl
mov
push
push
push
mov
call
push
call
push
lea
call
testb
jne
mov
push
push
push
call
mov
push
push
push
push
call
inc
test
jne
mov
push
push
push
call
mov
push
push
call
push
call
push
push
push
push
push
mov
call
movl
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
call
test
je
mov
mov
push
push
push
mov
call
cmp
jne
xor
mov
mov
lea
push
push
push
push
mov
push
movl
movl
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
push
call
add
movl
lea
push
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
call
add
mov
mov
push
call
mov
push
call
test
je
mov
test
je
push
push
call
add
lea
push
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
test
je
movl
test
je
movl
test
je
mov
mov
push
call
test
je
mov
cmp
ja
jmp
mov
mov
push
add
push
push
call
mov
add
pop
movl
pop
ret
mov
mov
push
call
test
je
mov
push
push
mov
call
add
push
push
call
mov
add
pop
movl
pop
ret
mov
test
jle
mov
mov
pop
pop
movw
movl
ret
mov
mov
add
push
push
push
call
mov
add
pop
movl
pop
ret
mov
mov
add
push
push
push
call
mov
add
pop
movl
pop
ret
mov
mov
add
push
push
push
call
mov
add
pop
movl
pop
ret
mov
mov
add
push
push
push
call
mov
add
pop
movl
pop
ret
mov
mov
add
push
push
push
call
mov
add
pop
movl
pop
ret
mov
mov
add
push
push
push
call
mov
add
pop
movl
pop
ret
mov
test
jle
mov
movw
mov
pop
pop
movl
ret
lahf
push
inc
add
push
inc
add
push
inc
add
add
inc
add
push
inc
add
push
inc
add
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
cmp
jne
movl
mov
mov
mov
pop
pop
pop
mov
pop
ret
cmp
jne
movl
jmp
push
push
push
mov
push
call
mov
sub
dec
mov
mov
movl
lea
lea
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
push
call
add
mov
cmp
jne
mov
push
call
add
mov
test
je
push
lea
push
lea
push
mov
push
mov
push
push
push
mov
push
call
add
mov
mov
test
jne
mov
cmpl
jne
mov
test
jne
lea
mov
push
call
add
mov
push
mov
call
mov
test
je
mov
call
jmp
xor
lea
push
push
push
mov
add
push
push
call
mov
mov
mov
add
movw
push
push
push
push
mov
mov
push
call
add
mov
test
je
push
call
add
movl
mov
test
jne
mov
cmpl
jne
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
xor
movl
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
mov
test
je
push
call
add
or
mov
mov
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
push
test
mov
movl
je
mov
test
jne
call
movl
mov
test
je
lea
push
push
call
add
test
je
mov
mov
neg
sbb
add
push
push
call
add
lea
push
call
mov
push
push
push
push
call
xor
pop
pop
ret
mov
push
push
push
mov
sub
add
add
add
je
push
push
lea
call
mov
lea
push
push
mov
movl
call
mov
test
je
mov
mov
push
call
test
je
mov
call
jmp
xor
mov
mov
push
push
mov
add
push
push
push
lea
call
push
call
add
lea
movl
call
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
test
je
push
push
push
mov
push
call
sub
dec
mov
movl
push
lea
push
lea
push
push
lea
push
mov
push
push
mov
push
call
add
cmp
jne
mov
push
call
add
mov
mov
test
je
movl
push
lea
push
lea
push
push
lea
push
mov
push
push
mov
push
call
add
test
jne
push
call
add
movl
mov
mov
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
ret
mov
movl
mov
test
je
push
call
add
xor
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
push
mov
push
push
call
cmp
jb
call
test
je
lea
call
add
movl
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
lea
push
push
push
call
add
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
mov
movl
movl
mov
test
jne
pop
pop
pop
ret
push
call
mov
mov
push
call
add
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
call
inc
je
mov
push
lea
push
push
push
push
call
mov
mov
call
mov
pop
pop
pop
movl
ret
mov
pop
pop
movl
ret
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
call
lea
movb
call
lea
mov
xor
mov
movl
movl
movl
movl
rep
push
lea
add
inc
add
movl
movl
mov
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
push
lea
call
mov
movl
call
push
push
push
push
lea
push
call
push
push
push
push
push
push
push
call
mov
add
push
call
mov
mov
mov
push
push
push
call
test
je
push
call
push
push
push
push
push
push
push
call
add
push
call
mov
mov
push
push
push
call
test
je
push
call
push
push
push
push
push
push
push
call
add
push
call
mov
mov
push
push
push
call
test
je
push
call
mov
mov
push
push
push
push
call
mov
or
push
push
push
push
call
lea
test
je
mov
mov
push
push
push
push
call
push
call
push
lea
call
mov
push
push
lea
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
mov
test
je
push
push
call
add
mov
push
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
push
mov
call
push
mov
call
inc
add
or
push
lea
call
inc
add
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
mov
lea
push
mov
mov
push
push
mov
mov
call
mov
mov
lea
push
push
push
lea
call
mov
mov
test
je
movl
movl
push
push
push
movl
call
push
call
push
lea
call
mov
push
push
call
push
call
push
push
push
push
push
mov
call
movl
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
mov
lea
call
lea
movl
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
pop
jne
call
test
je
xor
mov
mov
lea
push
push
push
push
mov
push
movl
movl
call
lea
movb
call
lea
movl
call
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
push
call
add
movl
lea
push
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
call
add
mov
mov
push
call
mov
push
call
test
je
mov
test
je
push
push
call
add
lea
push
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
testb
je
mov
movl
push
call
test
je
testb
je
movl
testb
je
movl
mov
test
je
movl
test
je
mov
push
mov
call
test
je
mov
cmp
ja
jmp
mov
mov
push
add
push
push
call
mov
add
pop
movl
pop
ret
mov
push
mov
call
test
je
mov
mov
push
push
call
push
mov
push
call
mov
add
pop
movl
pop
ret
mov
test
jle
mov
pop
pop
movw
mov
movl
ret
mov
mov
add
push
push
push
call
mov
add
pop
movl
pop
ret
mov
mov
add
push
push
push
call
mov
add
pop
movl
pop
ret
mov
test
jle
mov
movw
mov
pop
pop
movl
ret
nop
sahf
bound
les
add
arpl
inc
arpl
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
mov
cmp
jne
movl
mov
mov
mov
pop
pop
pop
mov
pop
ret
cmp
jne
movl
jmp
push
push
push
mov
push
call
mov
sub
dec
mov
mov
lea
mov
movl
lea
lea
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
push
call
add
mov
cmp
jne
mov
push
call
add
mov
mov
test
je
push
lea
push
lea
push
push
mov
push
lea
push
push
mov
push
call
add
mov
mov
mov
mov
test
jne
mov
cmpl
jne
push
lea
push
mov
add
push
call
add
or
inc
add
xchg
or
add
fadds
add
add
movw
cmpl
jb
mov
mov
add
cmp
jae
push
push
add
push
call
add
mov
test
je
push
call
add
movl
mov
test
jne
mov
cmpl
jne
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
xor
movl
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
mov
mov
test
je
push
call
add
or
mov
mov
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
test
mov
movl
je
mov
test
jne
call
movl
mov
test
je
lea
push
push
call
add
test
je
mov
mov
neg
sbb
add
push
push
call
add
lea
push
call
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
push
mov
push
push
call
cmp
jb
call
test
je
lea
call
add
movl
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
lea
push
push
push
call
add
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
mov
movl
movl
mov
test
jne
pop
pop
pop
ret
push
call
mov
mov
push
call
add
mov
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
lea
push
push
push
push
movl
xor
call
mov
add
test
jne
mov
lea
push
push
push
call
add
test
jne
movl
mov
push
call
mov
sub
je
dec
je
lea
push
push
push
push
call
add
test
jne
mov
lea
push
push
push
call
add
test
je
mov
test
je
mov
mov
push
call
test
je
pop
mov
pop
add
ret
push
push
push
push
push
call
add
adc
inc
and
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
call
add
test
je
push
lea
push
push
call
add
test
je
mov
mov
push
call
mov
pop
pop
add
ret
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
call
add
test
jne
movl
mov
push
call
mov
sub
je
dec
jne
mov
add
ret
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
test
je
push
call
add
lea
push
push
push
push
call
add
test
je
xor
pop
ret
mov
mov
push
push
push
push
call
add
mov
mov
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
test
jne
pop
ret
lea
push
push
push
push
call
add
test
je
xor
pop
ret
mov
mov
mov
push
push
push
push
push
call
mov
add
mov
push
call
mov
pop
pop
ret
nop
push
push
push
mov
push
mov
test
jne
mov
test
je
lea
push
call
mov
mov
mov
test
je
mov
mov
push
sub
push
push
push
call
mov
mov
lea
push
push
mov
push
push
push
call
test
je
movl
mov
push
push
push
push
call
mov
cmp
jbe
mov
mov
lea
push
push
push
lea
push
push
call
test
je
cmpl
je
push
call
pop
pop
pop
xor
pop
ret
mov
push
call
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
mov
test
je
mov
push
call
movl
push
push
call
add
lea
push
call
mov
test
je
push
call
mov
push
mov
test
je
push
call
add
push
call
add
pop
pop
ret
nop
nop
nop
sub
push
push
mov
push
push
push
call
mov
add
test
je
mov
mov
xor
mov
rep
push
mov
and
mov
shl
xor
and
or
xor
mov
push
test
not
setne
and
mov
add
or
shl
push
mov
or
push
shl
push
push
push
mov
call
test
mov
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
lea
push
call
test
je
push
call
add
mov
test
je
movl
mov
lea
push
lea
push
push
push
push
call
cmpl
jne
mov
cmp
jae
mov
lea
sub
xor
mov
shr
rep
mov
and
rep
mov
lea
push
push
push
push
call
test
je
push
call
add
test
je
mov
movl
mov
mov
pop
pop
pop
pop
add
ret
test
je
mov
xor
mov
rep
lea
mov
push
movl
mov
mov
call
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
mov
lea
push
push
push
push
push
call
test
je
cmp
jne
mov
push
call
test
je
mov
push
call
mov
pop
pop
pop
pop
add
ret
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
push
mov
push
push
lea
push
call
mov
push
push
push
push
call
cmp
je
mov
mov
lea
push
push
push
push
push
call
test
je
cmpl
jne
cmpl
jne
mov
cmp
jae
mov
push
sub
lea
mov
xor
shr
rep
mov
and
rep
pop
mov
mov
cmp
jne
mov
mov
cmp
je
mov
test
je
mov
mov
cmp
jne
mov
mov
cmp
jne
push
movl
call
pop
pop
mov
pop
ret
movl
push
call
pop
pop
mov
pop
ret
push
call
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
lea
push
call
mov
lea
push
push
push
call
add
mov
push
call
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
mov
push
push
call
cmp
je
mov
mov
lea
push
push
push
push
push
call
test
je
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jne
pop
mov
pop
ret
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
xor
mov
mov
mov
cmp
mov
jae
jmp
mov
cmp
jae
lea
push
push
push
push
call
add
test
je
mov
mov
test
mov
jne
mov
mov
mov
mov
mov
mov
mov
lea
test
jne
mov
test
je
push
mov
call
add
mov
xor
mov
mov
jmp
mov
test
jne
lea
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
cmp
jg
cmp
jge
mov
sub
lea
lea
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
mov
jmp
jle
sub
mov
mov
jmp
mov
test
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
mov
add
cmp
jge
mov
jmp
mov
mov
lea
shl
push
call
mov
mov
mov
mov
lea
shl
mov
shr
rep
mov
and
rep
mov
mov
sub
lea
lea
shl
lea
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
mov
jb
mov
pop
pop
pop
mov
pop
add
ret
mov
test
jne
push
call
add
mov
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
xor
cmp
jne
push
call
add
cmp
je
movl
mov
mov
mov
mov
jmp
xor
cmp
mov
jne
pop
xor
pop
ret
mov
push
mov
mov
mov
movl
cmp
je
push
call
add
mov
push
push
mov
mov
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
mov
test
je
mov
mov
mov
mov
mov
test
je
mov
mov
mov
mov
mov
test
je
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
xor
ret
cmpl
ja
xor
ret
mov
test
je
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
lea
push
call
lea
lea
push
push
push
call
add
test
jne
push
call
pop
xor
pop
add
ret
mov
push
push
lea
mov
lea
rep
pop
pop
test
je
push
call
add
push
call
mov
pop
pop
add
ret
push
push
call
add
push
call
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
testb
jne
xor
pop
ret
push
call
mov
add
mov
pop
ret
sub
push
push
push
push
mov
movl
testb
jne
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
dec
cmp
jbe
pop
pop
pop
mov
pop
add
ret
lea
push
call
mov
lea
shl
mov
lea
push
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
mov
lea
push
mov
mov
push
push
push
call
add
test
jne
push
call
pop
pop
pop
mov
pop
add
ret
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
sub
test
je
mov
mov
push
add
push
push
mov
push
call
cmp
jne
push
movl
call
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
cmp
jae
push
movl
call
mov
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
push
push
call
test
je
cmp
je
movl
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
mov
push
xor
lea
push
call
mov
mov
cmp
jae
mov
push
test
mov
je
mov
lea
mov
mov
mov
test
je
mov
lea
mov
mov
mov
mov
pop
test
je
mov
lea
mov
mov
mov
push
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
movl
mov
mov
cmp
jb
mov
pop
add
ret
push
push
lea
push
push
mov
call
mov
lea
push
push
push
push
call
add
test
jne
movl
jmp
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
sub
test
je
mov
mov
mov
test
jne
mov
jmp
cmp
je
push
add
push
push
mov
push
call
cmp
jne
movl
jmp
mov
mov
mov
cmp
jae
movl
jmp
mov
lea
push
push
push
push
push
call
test
je
cmp
je
movl
jmp
mov
mov
mov
inc
add
mov
mov
mov
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
mov
push
push
push
push
push
push
push
push
call
add
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
lea
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
sub
lea
lea
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
lea
shl
push
call
mov
mov
mov
mov
lea
shl
mov
shr
rep
mov
and
rep
mov
mov
sub
lea
lea
shl
lea
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
lea
mov
shl
push
push
call
add
pop
add
ret
lea
mov
shl
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
xor
mov
push
push
rep
push
call
mov
push
push
push
mov
mov
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
sub
push
mov
push
mov
movb
cmpl
je
push
call
mov
add
cmp
jne
pop
xor
pop
add
ret
mov
test
je
push
call
add
push
push
push
call
mov
mov
xor
mov
rep
push
lea
push
push
push
movl
call
lea
push
push
movl
call
push
mov
call
mov
add
cmp
jbe
mov
test
movl
jbe
push
push
push
lea
push
push
push
push
push
call
add
test
jne
mov
mov
sub
je
dec
jne
push
lea
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
jne
xor
test
movw
je
push
call
add
test
jne
mov
inc
cmp
mov
jb
mov
test
je
mov
test
je
push
call
add
mov
lea
mov
lea
and
push
push
push
push
push
call
add
mov
test
je
test
je
jo
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
les
test
jne
cmpl
je
movb
jmp
movb
jmp
mov
pop
test
pop
jne
mov
test
je
push
call
add
add
xchg
add
add
and
les
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
lea
push
push
movw
mov
sub
push
push
push
lea
push
push
push
call
add
add
jle
xchg
gs
lock
int3
cld
add
add
mov
mov
xlat
add
add
add
aam
in
in
lcall
inc
in
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
imul
add
js
add
add
hlt
xchg
add
jecxz
jle
add
outsl
je
imul
jne
xchg
add
push
add
fildl
int3
xchg
add
add
testb
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
shr
std
jbe
jb
mov
add
int
add
add
rorl
scas
xlat
add
pop
fwait
shr
add
fdivs
add
in
xor
add
xchg
adcb
divb
add
add
add
pop
sub
pop
push
push
push
push
call
adc
bound
jnp
fldl
jno
out
add
xchg
pop
mov
add
xchg
nop
add
jae
cld
add
push
add
call
push
push
lea
push
push
lea
push
lea
push
push
call
loopne
aad
data16
scas
add
add
jnp
addr16
add
flds
loope
fs
add
jbe
add
ret
test
mov
add
add
aad
xchg
sub
pop
call
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
mov
xchg
enter
sti
add
add
add
gs
add
add
add
add
mov
test
jae
push
fdivrs
lahf
lret
mov
js
add
test
add
mov
add
pop
push
in
fcompl
jmp
lea
push
lea
push
lea
push
push
lea
push
push
call
push
jmp
outsl
icebp
add
flds
pop
aad
mov
lret
jecxz
in
loopne
scas
mov
add
jbe
add
mov
enter
add
mov
roll
iret
in
add
sub
pop
ret
push
push
lea
push
push
push
push
lea
push
call
xchg
xchg
test
into
fldl
mov
mov
sahf
pusha
fstpt
push
rolb
mov
mov
add
cmpsl
pop
xchg
rolb
in
add
add
orl
lahf
jecxz
incb
add
cmpsb
add
add
ljmp
clc
add
mov
add
sub
pop
mov
mov
push
push
push
call
add
lock
mov
add
add
pop
add
out
mov
roll
testl
clc
je
into
add
movsl
lcall
pop
in
push
push
push
push
push
push
push
push
call
repnz
mov
loop
shlb
pop
mov
call
clc
jge
scas
push
push
xchg
ja
add
add
lea
add
popa
add
jnp
add
mov
push
out
cli
add
add
enter
in
loopne
lcall
ret
add
add
add
push
push
push
push
call
add
icebp
add
test
mov
add
add
lcall
popf
pop
mov
pop
pop
jge
mov
lock
mov
push
push
push
push
push
call
lock
fwait
rolb
add
cld
mov
mov
add
jae
loopne
icebp
js
add
loopne
addl
add
add
pop
push
add
xchg
push
les
pop
jnp
pop
popa
add
rclb
cli
nop
cmpsl
subl
in
lock
xor
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
xchg
out
mov
add
lods
add
add
mov
fwait
add
pop
push
add
fwait
in
pop
push
lea
mov
add
mov
mov
lret
in
test
add
add
lret
fdivr
lcall
les
add
push
push
shl
lea
push
sub
add
xor
sub
shr
shr
pop
add
inc
xor
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
in
jbe
add
insb
xchg
add
mov
add
lcall
in
add
jmp
jnp
add
add
mov
jno
in
add
mov
mov
add
jae
fistpll
add
sub
pop
pushl
push
push
push
push
push
call
add
cmpsb
add
mov
fsincos
add
push
push
add
add
loop
xchg
outsl
push
add
gs
mov
call
out
xorl
mov
xchg
add
sahf
add
addb
push
add
push
add
lcall
and
add
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
lods
cld
add
add
ja
mov
jge
mov
mov
fs
jmp
addb
cwtl
lods
sub
pop
mov
push
push
push
push
push
push
call
mov
add
clc
xchg
jmp
add
add
add
lret
add
add
mov
rclb
jne
xchg
add
in
ror
lcall
rolb
aad
fwait
icebp
add
hlt
add
int3
add
in
call
lea
push
lea
push
lea
push
push
call
cmc
addb
add
add
mov
cwtl
add
add
test
fwait
into
imul
data16
sub
pop
push
pushl
push
push
push
push
push
push
call
cmp
mov
std
cld
cld
xchg
add
add
lcall
int3
imul
mov
add
mov
add
mov
pop
sub
pop
pushl
call
push
push
push
call
fwait
sarb
add
add
loope
xchg
popa
add
add
test
push
add
int
je
xchg
jl
outsl
add
fnstcw
sub
pop
pushl
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
pop
add
jo
add
mov
je
push
push
add
add
iret
fwait
push
add
stos
out
push
testb
add
mull
sahf
add
sti
add
out
lods
add
xchg
popf
add
fildl
in
add
mov
repnz
add
mov
add
add
sub
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
push
call
add
push
push
lret
add
mov
mov
add
add
add
add
add
push
add
add
add
loope
sub
pop
call
push
push
rol
shr
push
or
inc
add
sub
sub
sub
dec
pop
rol
sub
add
sub
pop
push
lea
push
lea
push
lea
push
call
imul
sahf
fadds
add
add
roll
int3
std
add
jnp
mov
pop
add
sahf
popl
add
fildl
movb
add
add
add
jp
loope
add
testl
stos
scas
jle
movsb
add
popf
stc
pusha
mov
in
lock
lcall
jne
call
push
lea
push
lea
push
push
push
push
push
push
call
rcl
pop
add
xchg
mov
add
js
lret
enter
rol
pop
shll
loopne
add
pushf
xchg
pop
out
add
div
add
add
loop
je
pop
add
mov
mov
pop
sub
pop
push
push
push
sub
ror
sub
push
and
add
add
not
inc
sub
add
sub
dec
pop
not
sub
pop
push
push
lea
push
push
call
loopne
cltd
mov
arpl
mov
in
pushf
xchg
hlt
lds
push
add
add
mov
cltd
cli
pop
add
pop
in
sub
pop
push
push
push
lea
push
push
lea
push
call
mov
js
cmpsl
mov
add
scas
mov
mov
add
add
jne
enter
hlt
call
divb
pop
mov
add
mov
loop
mov
rolb
add
push
push
push
push
push
push
push
call
push
nop
cld
xchg
pushf
add
jo
add
add
int
mov
sahf
pop
popl
mov
add
add
add
cltd
add
rorb
push
lea
push
push
push
call
add
stos
arpl
in
pop
xchg
add
pop
add
mov
add
mov
lea
fldl
sub
pop
push
push
push
call
out
add
jbe
testl
add
popl
imul
test
add
movsb
add
xchg
add
add
test
loopne
add
add
js
int
mov
in
nop
xchg
sbbb
add
pusha
lock
mov
add
mov
adc
imul
in
clc
lcall
mov
push
push
push
lea
push
call
push
fildl
push
mov
popa
add
pop
add
jbe
add
add
sti
int3
sarl
fcmovb
push
add
mov
fdivr
into
std
add
pusha
add
mov
add
add
xchg
rcr
xchg
fdivrp
hlt
je
sahf
loope
clc
add
jecxz
mov
in
sub
pop
add
push
push
push
push
call
mov
add
add
in
add
shlb
test
in
jne
pop
xchg
mov
sbbl
lcall
ret
add
add
add
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
push
add
faddl
mov
push
stos
sahf
sti
js
mov
add
add
add
add
insb
shlb
lcall
fldl
scas
cmpsl
mov
fidivs
add
ljmp
scas
add
cwtl
repnz
lahf
cmpsl
jl
fbstp
add
scas
add
xor
push
lea
push
push
push
push
call
fadds
add
xchg
popl
add
add
loopne
add
add
cwtl
add
test
shl
test
loope
stos
faddl
add
add
lea
add
push
sub
pop
xor
push
push
lea
push
lea
push
push
call
addr16
addb
leave
test
push
add
scas
stc
int
mov
add
add
add
mov
sti
jmp
fstl
loop
scas
add
mov
in
loope
push
sarl
xlat
fldl
pop
shll
scas
add
imul
in
pop
add
push
lea
push
call
lods
lock
les
add
roll
add
jne
mov
add
add
scas
sahf
pop
add
add
add
mov
pop
add
push
push
push
push
push
push
lea
push
call
fildl
add
cwtl
add
enter
bound
mov
add
ja
iret
out
add
add
jge
push
sub
pop
push
mov
xor
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
add
mov
imulb
mov
fiadds
xchg
into
in
xorb
aad
icebp
add
jge
mov
mov
add
add
repnz
clc
lds
push
add
mov
add
add
add
mov
add
in
fcomps
lock
push
lea
push
push
push
push
push
push
lea
push
call
call
lock
subb
jl
add
pop
mov
add
lea
xchg
lds
lret
add
lcall
push
push
push
lea
push
lea
push
call
add
add
add
roll
xchg
mov
add
pop
out
add
js
add
add
add
add
jecxz
jge
cmpsl
incb
mov
add
incb
add
add
add
dec
add
push
push
lea
push
push
push
push
lea
push
push
call
push
add
popf
mov
out
add
add
mov
test
lods
push
cltd
add
add
mov
jge
mov
lret
add
sub
pop
xor
push
lea
push
push
push
push
push
lea
push
push
call
lods
fs
add
enterw
mov
push
add
add
add
add
push
out
lds
js
rolb
stos
add
lcall
les
push
call
add
and
add
add
add
add
add
imul
mov
add
outsl
bound
cmc
jo
add
in
clc
pop
push
push
lea
push
push
push
call
pop
mov
mov
ja
add
fdivr
add
push
add
add
jle
mov
add
aad
jle
stos
pop
shl
ja
add
xchg
add
roll
loope
add
cli
add
scas
cmc
lds
add
loopne
jo
add
fistpl
add
adcb
add
addb
or
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
flds
bound
test
fadds
xlat
jmp
stos
add
add
add
add
and
add
loopne
push
mov
add
mov
hlt
add
enter
call
mov
stc
sahf
cli
mov
addb
mov
add
add
in
test
add
pop
add
pushf
add
mov
scas
add
cld
shll
sub
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
jl
nop
mov
add
add
pop
mov
mov
clc
rolb
push
in
add
xchg
add
lret
add
mov
add
call
add
cwtl
mov
xchg
pop
lret
fstps
push
sub
pop
rep
push
push
lea
push
push
push
lea
push
call
add
xchg
clc
xchg
arpl
add
xchg
movsb
mov
into
add
add
xchg
push
lock
add
enter
fwait
push
mov
std
add
sub
pop
pop
mov
push
push
push
push
push
push
push
call
iret
mov
je
popl
jp
jecxz
fsubl
mov
add
jne
cwtl
add
sbbb
add
add
xchg
imul
add
add
add
in
add
push
push
push
push
push
call
mov
pop
cmpsb
mov
push
stos
mov
mov
add
pop
mov
into
fmull
push
std
jno
in
loope
rcrb
bound
fdivs
fadds
ret
add
add
add
push
lea
push
push
push
push
push
push
lea
push
push
call
add
imul
jns
add
add
add
hlt
add
add
add
cld
in
xlat
add
add
add
mov
add
add
fiaddl
iret
add
add
cltd
cld
mull
pop
add
mov
add
lods
add
mov
push
add
sub
pop
mov
push
push
lea
push
push
push
push
push
push
call
add
movl
add
mov
add
cwtl
add
mov
fstps
loopne
mov
add
add
fucomp
stc
ret
mov
add
add
lcall
add
push
push
push
call
lahf
roll
gs
add
data16
add
add
lcall
pop
icebp
jnp
test
int
add
addr16
pop
add
push
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
enter
add
fiadds
add
add
add
rolb
add
add
pop
add
int
add
mov
add
testl
scas
jmp
add
shrb
xchg
cli
xchg
ficompl
jmp
xchg
mov
add
mov
in
out
mov
add
push
and
push
push
push
lea
push
call
add
stos
add
push
add
add
andb
add
loopne
in
in
add
jecxz
popl
je
clc
add
shll
push
add
mov
mov
addr16
add
pop
add
add
add
popf
in
test
addl
sub
pop
xor
push
push
push
push
push
push
push
lea
push
call
add
push
mov
popf
add
add
mov
in
lret
xchg
xlat
add
add
push
add
add
imul
add
add
data16
jno
push
pusha
icebp
lock
add
add
add
add
add
loop
aam
jle
add
sahf
add
lcall
les
push
lea
push
push
lea
push
push
call
add
stos
mov
jo
lahf
add
leave
add
mov
fs
add
push
clc
mov
js
xchg
fs
in
mov
add
cld
add
add
add
in
call
xor
push
push
lea
push
call
sti
add
cmpsb
add
lret
add
mov
mov
push
in
ljmp
shll
jmp
out
aad
in
hlt
pop
add
push
push
push
lea
push
push
push
call
fcmovne
addl
mov
add
cmp
add
add
mov
lahf
mov
add
add
add
pushf
push
lret
add
test
add
lea
jp
add
test
sti
aad
cmpsb
add
insb
add
xchg
add
out
iret
sub
pop
add
push
lea
push
push
call
add
mov
in
add
xchg
mov
push
push
add
pop
mov
lods
cmpsl
popa
lods
add
roll
test
hlt
xchg
in
add
int3
popf
jmp
fxch
add
add
jmp
sahf
stos
icebp
add
mov
imul
add
add
cltd
mov
in
hlt
lcall
fsubrs
xorl
rclb
add
or
xlat
shr
pop
not
pop
push
push
call
add
mov
testb
fsubrs
add
lea
pop
addl
pop
push
shr
popa
push
pop
test
add
push
lret
pop
add
mov
add
pop
add
mov
add
add
lcall
jne
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
popf
call
lds
add
sahf
add
add
jae
lcall
leave
add
in
nop
add
mov
mov
mov
add
clc
data16
pop
add
add
add
mov
rcll
loopne
call
push
push
push
lea
push
push
push
call
add
add
icebp
add
add
push
add
add
add
pop
loop
mul
fisubl
jl
add
xchg
push
lods
lock
mov
filds
mov
rcl
mov
loope
add
mov
mov
push
sti
lods
add
push
mov
loopne
sub
pop
push
push
push
not
shr
inc
push
sub
add
dec
inc
sub
sub
pop
rol
shl
pop
push
push
push
push
call
cmc
add
ror
jo
add
add
mov
jle
xchg
jns
add
pop
add
add
jp
add
in
cwtl
mov
add
fiadds
add
pop
mov
add
cwtl
add
add
loop
xchg
add
test
cwtl
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
adcl
stos
jp
add
movb
pusha
sbb
mov
fidivl
stc
mov
push
add
jae
add
imul
jle
jl
add
add
rclb
sbb
mov
push
lea
push
push
push
call
add
stos
out
pop
insb
nop
add
movsl
pushf
add
add
test
aad
add
xchg
xchg
jp
add
add
mov
push
mov
fwait
aam
fiaddl
add
jl
hlt
mov
fiadds
pop
arpl
lods
out
in
iret
add
jle
movsb
xchg
push
push
lea
push
push
push
push
lea
push
push
call
loope
stc
xchg
aad
mov
jno
pop
add
rolb
filds
add
add
add
xchg
sub
pop
mov
push
dec
pop
add
push
dec
pop
add
push
push
push
push
lea
push
call
lock
push
int
push
mov
add
out
mov
push
test
lods
add
xchg
pop
flds
add
cmc
xchg
add
add
add
add
add
mov
lahf
jno
mov
add
mov
add
out
jnp
in
in
pop
add
push
add
pop
mov
xor
push
sub
xor
not
pop
add
push
push
push
push
push
call
jo
incb
data16
add
add
mov
mov
pushf
add
xchg
and
add
lret
pop
add
imul
push
add
cmc
xchg
rorl
add
add
xchg
add
rcl
mov
fldenv
add
add
jno
icebp
icebp
sub
pop
push
push
lea
push
push
push
push
call
add
ja
ja
add
mov
add
insb
mov
push
fs
mov
cltd
mov
push
mov
push
add
push
sahf
mov
xchg
mov
add
push
add
in
movsl
add
mov
add
add
xchg
stos
add
add
inc
adc
lock
push
shr
lea
pop
add
push
not
dec
pop
pop
push
ror
pop
mov
xor
push
lea
push
call
loopne
lret
test
shrl
jecxz
jae
stos
enter
mov
add
xchg
ja
pop
sarb
add
fiaddl
cmc
mov
add
add
add
aam
mov
cld
sub
pop
rep
mov
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
push
add
jge
movb
incb
add
add
fnstcw
mov
add
in
jl
mov
add
fiadds
out
clc
add
rol
movb
and
push
push
push
call
repnz
mov
add
add
fildl
push
add
pop
add
add
xlat
popa
sub
mov
in
lock
add
push
lea
inc
pop
or
je
push
not
pop
mov
push
push
lea
push
push
call
enter
lret
ljmp
cwtl
add
add
test
add
mov
add
jmp
out
xlat
lea
add
cld
arpl
cld
test
lds
add
add
pop
addr16
add
fucomi
outsl
test
add
jo
push
pop
xor
push
push
call
fnstsw
sahf
add
loop
sar
out
xchg
add
cmc
push
add
out
add
jne
mov
js
lret
jae
movsb
mov
add
jmp
outsl
jnp
add
hlt
add
mov
add
repnz
push
add
add
in
clc
pop
add
push
push
push
push
call
mov
pop
out
fiaddl
add
mov
add
jecxz
testl
rcll
fadds
add
push
sbb
push
push
call
add
mov
add
jmp
jno
add
test
out
clc
call
lret
add
xlat
add
add
jae
pushf
jge
add
add
jns
add
test
fldl
lcall
repnz
push
rol
shl
not
pop
push
push
shr
sub
ror
ror
pop
mov
xor
push
ror
lea
add
shr
pop
add
push
ror
rol
inc
pop
pop
push
dec
rol
sub
pop
rep
mov
xor
push
sub
add
pop
or
je
mov
push
push
call
ret
mov
sti
popf
in
sahf
jns
icebp
cltd
add
stc
movsl
std
xchg
add
scas
outsl
popf
add
in
jp
lods
clc
mov
nop
les
lods
cmpsl
add
clc
arpl
jb
add
push
mov
lret
add
sub
pop
add
push
lea
push
push
push
call
add
add
lds
add
lds
cmc
add
mov
push
in
add
shll
aam
add
add
out
add
sub
pop
rep
push
dec
pop
pop
push
push
shr
push
sub
add
shl
sub
shl
lea
rol
pop
pop
push
not
lea
dec
pop
pop
mov
push
push
lea
push
call
add
push
lds
sahf
pop
add
add
jl
fwait
jge
out
add
mov
clc
int
mov
add
cld
test
cltd
add
loope
add
lcall
insl
hlt
push
dec
ror
lea
pop
mov
push
pop
jmp
push
push
push
lea
push
push
push
push
push
push
push
push
call
sti
add
add
mov
add
add
ljmp
add
add
cmpsl
cmc
add
add
add
cwtl
shrb
lods
rcr
addr16
rcl
add
mov
add
add
leave
popf
push
sub
pop
mov
push
push
call
lret
mov
add
add
add
stc
mov
push
mov
mov
int
jmp
mov
int3
sub
pop
add
push
push
sub
xor
shl
pop
push
push
sub
rol
lea
pop
push
push
add
add
pop
push
push
not
pop
mov
push
lea
push
push
push
call
lret
add
addb
xchg
mov
jmp
lcall
xchg
mov
ja
add
mov
mov
push
call
add
add
stos
add
push
sti
add
fs
add
popl
add
push
push
push
push
push
push
push
push
push
push
call
add
lods
pop
std
rcl
mov
js
lcall
rolb
push
add
add
insb
push
int3
push
add
add
lcall
pop
push
shr
sub
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
add
loope
add
enter
addr16
add
arpl
add
js
mov
ficoms
imul
jge
cmpsl
mov
test
int3
xchg
add
mov
mov
add
imul
add
lcall
push
sub
lea
pop
ret
push
push
sub
add
rol
pop
mov
add
push
push
push
push
lea
push
lea
push
push
push
call
mov
add
call
stc
movl
addb
add
add
add
aad
add
add
mov
xchg
rcl
add
add
mov
jns
movsl
pop
add
add
add
popa
add
testl
push
push
lea
push
push
push
call
loope
add
jle
push
add
add
test
add
lods
out
push
jl
rcrl
cli
add
mov
push
xchg
pop
sbb
jmp
fistpl
add
add
loope
add
enter
mov
in
lcall
push
push
inc
ror
pop
movl
push
lea
push
lea
push
push
call
xchg
add
add
mov
fadds
jae
add
add
jl
out
add
stos
rolb
add
jno
les
lcall
inc
clc
incl
add
add
vaddsubps
inc
or
jmp
xor
rol
rol
inc
pop
pop
push
push
call
loopne
pusha
add
jp
int3
pop
add
add
out
pop
repnz
add
jmp
test
jmp
add
add
add
int
xchg
xchg
fcomps
add
pop
push
lea
push
push
lea
push
lea
push
lea
push
call
cmpsl
pop
cltd
jmp
xchg
addl
testl
bound
add
pop
add
add
jno
filds
fldenv
add
sahf
add
add
test
mov
insb
sub
pop
leave
ret
push
pop
push
mov
push
lea
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
add
lahf
pusha
std
add
fs
push
pop
add
add
xchg
mov
movsl
fildl
add
add
add
add
sub
pop
add
push
push
rol
not
pop
push
push
push
push
push
push
push
lea
push
call
mov
lret
in
add
clc
mov
orl
push
jno
mov
data16
lcall
mov
add
pop
pop
movsb
fadds
mov
add
xchg
sub
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
cmpsl
nop
lods
add
jno
pop
add
mov
in
les
add
mov
flds
int3
jle
add
pop
add
fwait
roll
pop
testl
addl
push
push
push
push
push
push
lea
push
push
push
call
add
add
in
in
add
mov
arpl
add
push
movb
addl
add
jmp
add
pop
mov
jmp
add
les
add
add
in
fcompl
add
aaa
cld
call
stmxcsr
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
xchg
add
mov
add
add
add
add
xchg
ja
popa
fiadds
add
fldl
add
jmp
mov
add
lods
loop
test
stos
popa
shrb
pop
pusha
jmp
add
gs
add
add
add
in
fcomps
inc
cld
push
dec
add
pop
pushl
push
push
lea
push
call
add
pop
test
push
add
xchg
add
add
mov
xchg
je
add
pop
jl
jno
mov
cwtl
nop
xchg
rolb
mov
add
add
mov
test
add
add
xchg
lahf
add
jge
push
negl
add
add
mov
iret
movsl
pop
int3
jle
out
push
filds
jne
add
lcall
call
pushf
push
push
lea
push
push
call
mov
pop
test
add
add
add
pop
push
ja
add
pop
leave
lea
add
add
scas
jecxz
gs
out
stc
pop
sar
pop
sahf
mul
testl
push
out
lock
push
add
fldl
add
mov
push
push
push
push
lea
push
call
pop
mov
pop
in
jb
lods
add
insb
jnp
add
add
push
lret
jle
popa
mov
movsb
push
data16
lret
pop
jmp
jnp
insb
add
fiadds
testl
test
push
push
call
bound
lret
add
add
mov
bound
lahf
imul
mov
add
pusha
fiadds
add
scas
cmpsl
jb
add
out
in
xchg
fcoml
mov
add
mov
add
ret
lods
xchg
sub
pop
pop
push
rol
xor
pop
pop
pop
push
push
call
loop
mov
add
rolb
add
pushf
mov
mov
fs
mov
movb
arpl
sahf
test
add
addl
mov
add
xchg
add
into
jne
int3
add
add
into
sub
pop
leave
push
xor
lea
dec
pop
ret
push
lea
add
pop
push
push
not
pop
mov
push
inc
not
pop
add
push
push
inc
sub
sub
pop
push
push
ror
pop
push
push
rol
inc
pop
push
movl
push
push
push
push
push
lea
push
lea
push
push
push
call
add
pop
add
clc
add
add
js
rolb
jle
add
add
test
out
mov
call
add
pop
add
lock
xchg
out
mov
loope
fwait
add
add
cwtl
xchg
add
movsb
add
add
add
mov
std
mov
int3
add
add
lcall
add
fld
jecxz
pop
call
push
push
push
push
push
call
jle
in
xchg
fcoms
test
rclb
loop
xchg
jecxz
lods
xchg
add
lock
add
test
add
sub
pop
push
call
push
pop
subl
push
shl
pop
cmpl
jne
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
test
stc
addb
pusha
add
gs
add
add
add
add
push
into
fildl
add
add
lret
jmp
pop
pop
add
jge
add
jecxz
add
add
mov
add
add
add
jecxz
mov
add
lcall
push
push
call
add
add
scas
gs
pop
test
in
cld
data16
add
addr16
add
out
cmpb
mov
std
lds
add
add
xchg
pop
add
add
add
std
pop
add
data16
imul
sub
pop
pop
push
sub
ror
pop
pop
leave
push
lea
pop
ret
push
push
ror
pop
mov
push
push
push
push
push
push
push
lea
push
call
int3
mov
xchg
xchg
add
cmc
cmpsl
add
pusha
mov
push
add
add
lods
add
add
pop
out
pusha
add
rolb
add
addr16
andb
cltd
add
data16
xlat
leave
mov
hlt
mov
add
fimuls
popf
add
sahf
jbe
imul
add
fadds
std
arpl
lcall
cld
push
push
not
inc
pop
push
push
push
lea
pop
push
push
push
add
xor
shl
push
or
inc
add
sub
lea
not
sub
inc
pop
lea
pop
push
push
push
push
push
lea
push
push
push
call
jge
jle
lret
test
add
mov
ret
std
xchg
lods
cmc
stos
add
leave
aam
add
aad
lret
pop
rcl
les
scas
mov
add
add
fcmovbe
ljmp
add
outsl
cli
add
push
in
pop
add
jmp
pop
add
pop
xchg
pop
add
add
lcall
jne
push
dec
shr
sub
add
pop
call
call
push
push
not
shr
dec
push
or
not
add
shr
xor
sub
sub
rol
pop
inc
shr
pop
push
push
lea
push
lea
push
push
push
call
add
push
push
sahf
out
rcrb
add
push
add
mov
add
add
add
xchg
popa
mov
sub
pop
pushl
push
lea
pop
call
call
push
push
not
sub
shl
ror
push
push
pop
add
sub
ror
dec
sub
shl
sub
pop
add
pop
push
sub
not
not
pop
pushl
push
lea
push
push
push
call
add
mov
popf
in
add
xchg
js
add
loopne
aam
sahf
add
push
add
cmpsb
add
add
jge
arpl
jmp
add
pop
jmp
add
ljmp
addr16
imul
test
je
add
push
lea
pop
call
push
push
add
sub
ror
push
xor
add
sub
ror
sub
ror
sub
pop
inc
shr
shr
ror
pop
push
push
push
push
push
push
lea
push
lea
push
call
xchg
mov
add
rcl
cltd
add
mov
xchg
lcall
mov
roll
add
push
loopne
lcall
jne
call
push
push
lea
push
push
call
neg
add
int
add
rcr
fwait
int
stos
add
xchg
sbbl
add
fwait
add
add
add
shl
or
rolb
mov
jge
mov
push
shl
pop
pop
add
mov
scas
imul
mov
insb
iret
sub
pop
call
push
push
add
sub
push
and
add
add
shr
sub
sub
inc
lea
add
pop
lea
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
jae
add
mov
add
scas
lods
fsubrs
jl
add
fistpl
idiv
add
cmp
fadds
les
jbe
bound
ret
add
mov
add
add
add
test
pop
add
add
bound
pop
scas
push
sub
pop
pushl
call
push
ror
dec
pop
call
push
push
inc
shl
lea
push
or
not
add
add
sub
sub
shl
shl
pop
ror
inc
pop
push
push
push
push
push
call
out
ret
add
cwtl
rcrb
add
fiadds
aam
sar
cld
pushf
addb
add
pop
push
filds
add
mov
bound
jns
mov
loopne
addl
add
add
mov
push
sub
pop
pushl
push
push
call
xchg
add
mov
mov
cmc
add
fbstp
jmp
add
add
mov
scas
add
in
fsub
jbe
add
in
clc
lcall
out
add
push
ror
rol
pop
call
push
rol
lea
pop
mov
push
push
call
add
cld
cld
mov
data16
pop
add
push
ja
add
cltd
test
add
rol
add
add
pop
data16
enter
scas
add
rolb
sti
mov
lock
push
std
jmp
add
enter
int
xchg
add
addr16
ret
clc
lcall
inc
cmp
call
mov
sub
sbb
je
mov
sub
push
call
andl
cmpsb
add
add
add
movsb
stc
scas
mov
add
add
add
add
cmpsb
fs
mov
add
bound
les
test
icebp
add
mov
pop
mov
push
shr
pop
shr
add
push
push
lea
push
push
push
push
lea
push
lea
push
call
ja
shr
imul
mov
movsb
add
add
fcoml
hlt
sti
rcrl
add
add
xchg
pop
mov
loope
sti
cwtl
test
add
add
test
add
int
scas
pop
push
scas
sub
pop
mov
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
sahf
roll
xchg
ja
jne
shrl
add
add
imul
mov
add
add
test
jp
repnz
lds
add
add
lcall
add
lahf
je
in
fdivr
lcall
andb
or
ror
dec
pop
add
push
lea
shl
shl
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
add
mov
leave
mov
xchg
les
add
jl
add
insb
add
test
add
lock
fsts
lret
jge
arpl
int
add
in
fdivr
lcall
nop
nop
nop
nop
push
push
call
mov
add
add
push
test
mov
cmpsw
sarb
add
popaw
add
add
fiadds
add
push
add
add
loopne
add
add
xchg
movsb
add
jno
sub
pop
cmp
jne
cmp
jne
push
add
lea
pop
mov
movl
push
push
lea
push
push
push
call
fwait
cmc
add
jns
mov
xchg
nop
mov
ret
mov
icebp
add
iret
xchg
add
scas
push
add
in
add
add
add
pop
add
add
add
mov
add
xchg
lcall
pop
or
add
nop
add
mov
push
push
push
lea
push
push
lea
push
call
mov
add
mov
add
pop
jns
outsl
repnz
add
in
cmpb
add
mov
mov
add
pushf
add
arpl
add
cwtl
jb
popa
call
data16
jns
in
in
mov
push
push
push
push
push
push
call
nop
mov
add
add
ljmp
add
cltd
roll
add
add
add
std
mov
mov
loop
add
add
push
pop
add
pop
popf
add
add
add
call
push
xor
jne
push
sub
add
rol
pop
mov
movl
push
push
push
push
push
call
loope
add
ret
push
js
add
add
add
add
shlb
mov
fmulp
mov
jnp
data16
push
add
push
add
lret
mov
push
sahf
add
roll
cltd
cltd
add
call
movsl
push
iretw
add
mov
mov
sub
pop
jmp
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
aad
jge
add
fiaddl
xlat
mov
movb
rolb
enter
mov
lock
lret
in
fcompl
inc
cld
push
lea
push
push
push
call
add
fldl
scas
mov
add
movsb
pop
ljmp
sti
add
xchg
mov
fistl
add
jge
pop
add
imul
outsl
add
xchg
cld
add
pop
sub
pop
mov
push
push
push
push
push
lea
push
push
push
call
fsubrs
add
xchg
mov
out
mov
cli
mov
cmpsl
lock
add
xlat
je
ret
int
add
add
ret
mov
test
ror
fisttpl
mov
pop
mov
add
test
lret
sub
pop
cmp
jne
push
push
push
push
push
lea
push
push
push
push
call
xchg
jecxz
add
mov
lcall
fildl
add
add
push
push
cli
mov
add
jae
out
mov
leave
shll
add
outsl
add
lcall
adc
fstpl
add
add
add
rorl
jmp
push
rol
xor
pop
mov
cmpw
jne
push
push
call
popf
loop
cmpsb
scas
stc
add
filds
add
jp
js
jae
add
mov
testl
scas
add
add
add
movsl
rclb
push
je
mov
mov
fwait
xchg
sti
add
enter
sub
pop
mov
movl
push
lea
push
lea
push
push
push
push
lea
push
call
add
roll
imul
mov
mov
add
pop
popl
add
loopne
nop
add
leave
add
fdivl
add
addl
pushl
push
inc
not
pop
pop
push
push
call
add
add
cli
leave
xchg
mov
jle
add
js
out
imul
movl
add
mov
add
add
mov
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
add
mov
cld
cmpsl
pop
add
lret
add
in
lcall
rcrb
pop
add
sub
pop
mov
mov
push
push
rol
inc
push
sub
add
sub
sub
dec
pop
lea
shr
not
inc
pop
push
add
rol
dec
dec
pop
push
call
push
push
push
push
call
jmp
jno
cmpsb
add
in
add
xchg
push
scas
add
jmp
lock
add
add
jns
test
xchg
mov
xchg
pop
push
jb
mov
pop
push
add
add
add
add
cltd
add
int
mov
mov
add
add
cmp
rol
je
push
push
push
xor
add
inc
ror
shl
sub
lea
sub
pop
dec
pop
push
inc
pop
push
push
inc
pop
call
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
mov
add
add
out
add
iret
add
add
add
xchg
pop
pushf
int3
lret
add
add
pop
add
in
add
ret
movsl
lea
cmpl
je
push
push
dec
xor
add
push
and
add
sub
dec
add
shl
pop
rol
rol
pop
push
pop
push
push
push
lea
push
lea
push
call
mov
mov
in
cmpsl
mov
push
xchg
jo
add
push
add
fsub
mov
mov
mov
cmpsb
cmc
cwtl
add
add
add
add
test
testl
fbld
add
add
add
mov
lcall
sub
add
cmpl
je
push
push
sub
sub
push
or
not
add
shl
xor
shr
sub
dec
ror
shl
pop
rol
sub
not
ror
pop
push
add
xor
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
ror
push
push
pop
add
sub
shl
sub
pop
dec
pop
push
dec
ror
pop
push
call
push
push
push
push
push
call
add
add
add
cltd
add
aad
lahf
mov
jae
addb
lock
add
add
fiadds
add
lock
rclb
cmpsb
mov
add
mov
mov
jge
add
js
xor
pop
ret
roll
add
push
not
lea
pop
mov
push
push
push
call
mov
jbe
out
pop
pusha
cltd
push
add
xchg
pop
mov
push
add
push
rolb
not
add
xchg
cltd
ljmp
sub
pop
movl
jmp
push
push
lea
push
push
push
push
call
lock
fwait
xchg
addr16
in
scas
add
mov
add
lret
xchg
addl
add
fstl
xchg
add
pushf
add
mov
fsubrs
movl
cld
add
movb
push
add
add
mov
xchg
xorb
sub
pop
xor
push
sub
pop
pop
pop
push
push
push
lea
push
lea
push
push
call
stos
add
add
stos
mov
add
add
test
mov
add
add
add
add
add
shr
add
out
add
push
imul
ret
add
mov
pop
sub
pop
pop
push
push
push
push
lea
push
push
call
pop
in
sahf
add
lods
add
int3
add
shl
add
add
loope
fxch
mov
add
imul
in
call
pop
push
push
push
push
call
add
add
out
mov
xchg
add
jbe
cmc
add
fcompl
cmpsl
add
add
add
mov
xchg
add
mov
xchg
add
sahf
js
add
test
mov
add
loope
xchg
cwtl
cmpsb
add
add
cmpsl
mov
add
stos
add
jne
mov
add
out
int
sub
pop
leave
ret
push
lea
push
push
lea
push
push
lea
push
lea
push
call
mov
jmp
inc
push
push
push
mull
add
pushf
add
jb
add
test
fiadds
shr
fiadds
push
push
push
lea
push
call
loope
add
add
add
add
add
out
bound
scas
popf
add
mov
jns
push
lods
add
add
add
add
clc
loop
add
add
add
add
jle
out
xlat
stc
push
add
out
sub
pop
mov
push
push
push
push
call
testl
fcmovnb
add
add
filds
mov
sar
out
add
addl
add
add
xchg
add
mov
add
in
mov
add
sub
pop
add
cmpl
jne
push
push
add
push
or
not
add
inc
sub
dec
shr
pop
lea
lea
dec
add
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
leave
add
test
add
pop
add
add
out
lcall
cwtl
add
add
outsl
add
add
mov
pop
add
enter
fcomps
jne
call
push
dec
pop
push
call
push
push
push
lea
push
push
push
push
call
test
mov
rolb
jne
push
pop
mov
add
sahf
les
popl
outsl
add
mov
add
add
lods
cld
add
add
add
push
lea
push
lea
push
push
push
push
push
call
add
jecxz
mov
add
fists
in
pop
mov
stos
add
cli
add
ror
jns
into
push
add
sarl
popa
pop
add
lods
xabort
rolb
mov
mov
in
in
lcall
jge
add
test
add
mov
push
add
inc
pop
ret
push
push
lea
push
lea
push
call
fabs
cmpsl
scas
out
add
add
imul
fistps
add
add
mov
test
jecxz
jae
mov
insb
loop
add
movl
outsl
stos
add
mov
push
add
add
xchg
push
sub
pop
jmp
push
xor
not
not
not
pop
cmpl
jne
push
push
dec
sub
sub
push
sub
add
add
rol
sub
add
add
dec
shr
pop
sub
sub
xor
pop
push
push
push
push
push
push
push
call
add
in
je
add
rcrb
push
push
ret
lds
add
add
insb
add
lods
mov
lds
pop
ffreep
cltd
add
add
mov
add
add
add
stos
add
add
add
add
cli
pop
add
insb
stc
add
in
in
lcall
jne
push
push
push
push
lea
push
lea
push
push
lea
push
call
stos
into
mov
lcall
add
jbe
lea
xchg
add
mov
sbbl
test
scas
mov
jo
mov
shrb
add
add
fnstcw
pop
iret
add
je
jne
in
add
ret
sub
pop
call
push
push
xor
sub
add
pop
call
push
push
lea
push
push
push
call
add
out
add
xchg
mov
mov
push
not
mov
int3
add
mov
test
mov
add
mov
arpl
in
lcall
js
add
push
shr
xor
not
lea
pop
cmpl
je
push
lea
sub
add
pop
cmpl
jne
mov
push
push
push
push
push
push
push
call
add
in
cwtl
add
add
add
add
jmp
push
add
push
add
add
loop
push
add
add
add
add
in
mov
stos
iret
test
push
mov
in
add
int
jns
nop
lcall
lcall
add
add
push
ror
dec
pop
push
ret
push
push
push
push
push
push
call
fldl
add
add
arpl
mov
test
fildl
icebp
fcmovnu
add
jl
xchg
add
push
leave
imul
aam
mov
mov
add
cwtl
pop
mov
in
call
lea
push
push
add
sub
push
push
pop
add
not
shl
xor
sub
inc
pop
sub
sub
dec
pop
push
ror
pop
pushl
call
push
shr
pop
push
call
push
push
add
push
sub
add
sub
sub
add
xor
pop
sub
pop
push
lea
push
push
push
lea
push
push
push
push
call
lods
add
add
arpl
scas
add
add
xchg
movsb
out
jne
add
add
test
mov
xchg
lods
add
add
add
divb
in
pop
mov
add
mov
add
cmpb
push
add
pop
sti
mov
jne
stos
rclb
loopne
pushl
call
push
add
pop
call
push
lea
push
push
push
push
push
push
push
call
add
test
imul
add
add
push
add
add
add
push
mov
les
add
cmp
push
add
xchg
pop
add
add
jle
mov
add
mov
stos
mov
push
add
lcall
inc
cld
push
push
shr
lea
push
or
inc
add
rol
sub
add
sub
sub
add
dec
lea
pop
dec
pop
push
push
call
jmp
add
mov
xlat
enter
add
stos
rclb
out
add
mov
add
aad
negb
jecxz
lret
int3
movsb
mov
js
rolb
lcall
jne
call
push
shl
lea
add
sub
pop
push
push
push
lea
push
push
lea
push
call
mov
add
ja
mov
mov
lods
nop
mov
in
push
add
push
mov
mov
pop
jle
add
add
lret
aam
into
leave
mov
xchg
pop
pop
jge
clc
cmpsb
insb
mov
add
add
mov
lahf
push
add
xchg
add
fwait
add
outsl
add
cltd
add
sub
pop
pushl
call
push
push
add
ror
push
xor
add
xor
dec
sub
not
dec
xor
pop
rol
inc
add
pop
push
pop
pushl
call
push
push
inc
sub
push
or
not
add
rol
sub
shl
add
xor
add
pop
inc
ror
sub
dec
pop
push
sub
pop
push
call
push
push
sub
sub
push
push
pop
add
shl
sub
rol
not
pop
add
shr
sub
lea
pop
push
shr
ror
sub
shl
pop
pushl
push
xor
pop
call
push
not
not
pop
mov
push
push
push
push
push
push
call
mov
mov
add
sti
lds
in
test
add
popa
add
add
push
fimull
sub
pop
lea
push
dec
pop
lea
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
addr16
push
add
cwtl
add
jmp
scas
out
push
bound
popa
add
add
add
jne
add
mov
add
jns
xchg
mov
add
clc
add
add
scas
clc
add
add
xchg
add
addb
test
xchg
push
jo
jbe
add
scas
add
fcomps
push
push
add
sub
xor
lea
pop
push
push
push
push
push
call
add
add
mov
pop
add
iret
roll
add
cmpsb
incb
addb
test
add
jnp
add
clc
add
push
xchg
nop
lds
ja
stos
stos
add
clc
push
in
hlt
lcall
add
push
dec
sub
pop
push
push
xor
add
pop
pushl
push
xor
add
shr
pop
push
push
rol
shr
pop
call
push
push
shr
sub
not
push
sub
add
sub
xor
sub
sub
shl
pop
sub
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
call
cmc
cwtd
add
push
fwait
push
cld
add
stos
movsb
add
fldl
test
xchg
xlat
add
add
add
push
xchg
add
popf
int
lods
add
mov
insb
add
in
add
cltd
add
rolb
jecxz
add
lds
xchg
add
add
add
add
in
fdivr
lcall
jne
push
push
push
push
push
push
call
in
mov
mov
leave
les
sarl
mov
add
add
cld
add
add
add
pop
add
scas
add
je
nop
add
out
push
sub
pop
call
call
push
ror
pop
mov
push
push
shl
push
or
inc
add
not
add
sub
add
pop
add
shr
sub
pop
push
xor
sub
shl
sub
pop
pushl
call
push
push
push
call
movsb
sti
cltd
add
mov
add
fs
add
xchg
mov
add
enterw
add
sahf
add
loope
lock
in
mov
add
add
add
add
xchg
sahf
movsb
sub
pop
call
push
push
xor
shl
sub
push
or
not
add
sub
sub
shr
add
pop
xor
pop
push
push
lea
push
call
lods
xchg
jle
repnz
mov
add
jnp
rolb
add
ljmpw
loope
add
filds
pop
add
stc
add
push
imul
add
data16
add
lcall
jne
call
push
pop
lea
push
ror
inc
dec
pop
push
push
push
push
push
push
push
push
lea
push
call
add
in
jb
add
add
add
in
add
fucomip
add
mov
add
add
push
fldl
test
out
mov
add
sahf
add
mov
pop
add
push
mov
rolb
add
int
push
addl
scas
faddl
fldcw
add
add
out
add
fiaddl
lcall
shrb
jns
stos
push
lea
lea
add
ror
push
and
add
sub
add
add
pop
xor
pop
push
pop
pushl
call
push
lea
push
call
push
nop
push
mov
jne
add
add
add
add
xchg
ja
cld
add
add
add
add
shr
add
clc
add
xchg
add
sub
pop
lea
push
xor
add
inc
sub
pop
push
push
xor
sub
ror
pop
call
push
push
add
push
or
not
add
xor
rol
sub
not
lea
ror
sub
pop
not
rol
not
pop
push
xor
pop
pushl
call
push
lea
not
pop
call
push
push
sub
push
and
add
sub
sub
rol
sub
sub
ror
sub
pop
not
rol
sub
pop
push
push
lea
push
push
push
push
push
push
call
add
add
add
insb
les
rolb
add
pop
faddl
loope
outsl
out
lcall
add
pop
add
js
cmc
test
xchg
mov
lcall
jne
push
add
pop
call
push
lea
push
push
push
push
lea
push
push
call
mov
add
insb
in
mov
add
pop
add
cwtl
add
addr16
cwtl
add
lret
shll
xchg
lahf
mov
add
add
cmpl
shrb
pop
stos
push
inc
rol
xor
push
and
add
sub
inc
xor
dec
pop
rol
pop
push
lea
push
push
push
call
push
mov
lret
mov
cmpsb
jno
lret
ja
cwtl
mov
add
cli
add
add
add
xchg
add
jne
push
sub
not
pop
call
call
push
sub
shr
sub
not
pop
pop
push
rol
add
pop
dec
jne
push
lea
push
lea
push
lea
push
push
call
addl
ljmp
xchg
add
add
cmpsb
popa
cmpsl
stos
push
add
frstor
add
mov
add
jo
xchg
xchg
subb
mov
lahf
lea
add
repnz
jl
std
insb
sbbl
mov
lcall
testb
push
push
push
push
call
add
stos
add
scas
add
jne
cld
add
mov
add
pop
add
mov
add
in
add
add
jne
push
rol
push
pop
mov
arpl
repnz
add
stos
stos
mov
mov
sub
pop
mov
push
pop
lea
push
push
xor
ror
lea
push
xor
add
sub
shl
ror
sub
add
pop
shl
lea
pop
push
xor
xor
add
pop
pushl
call
push
push
push
push
push
push
push
push
push
lea
push
call
mov
mov
sti
mov
mov
add
jp
call
jbe
add
add
pop
add
push
imul
data16
add
movsb
int3
jmp
lcall
call
push
push
shr
sub
push
sub
add
rol
sub
dec
sub
inc
lea
pop
add
inc
dec
pop
push
lea
push
push
push
push
push
push
call
lock
add
fimuls
add
mov
add
push
je
jnp
add
mov
add
hlt
ja
add
je
add
add
add
jne
call
push
not
shl
ror
pop
call
push
add
sub
lea
not
pop
mov
push
inc
pop
lea
push
push
not
push
xor
add
rol
shr
sub
pop
add
rol
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
pop
into
mov
in
faddp
icebp
aam
fiaddl
add
push
add
add
cli
jmp
lds
incb
mov
add
jns
repnz
add
add
add
in
add
mov
push
mov
add
lods
mov
clc
jmp
add
add
jne
call
push
shl
inc
pop
lea
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
hlt
add
add
movsl
mov
xchg
add
enter
mov
cli
add
mov
lahf
shrb
jecxz
add
fadds
out
test
movsb
add
sub
pop
push
push
push
push
lea
push
call
jbe
bound
add
mov
add
add
add
rcrb
out
add
je
mov
addb
into
sub
pop
push
push
push
push
call
shrb
add
mov
add
fwait
add
add
enter
repnz
mov
jno
add
push
into
add
xchg
push
add
add
jmp
push
jl
mov
mov
pop
pushl
push
push
dec
sub
add
push
or
not
add
xor
sub
pop
add
ror
not
pop
push
push
push
lea
push
call
xchg
sarb
add
mov
outsl
add
movsl
add
jo
jae
mov
mov
add
add
mov
push
xchg
fwait
add
add
add
aad
xchg
push
movsl
add
jle
mov
cld
rclb
movsb
add
add
pop
xchg
mov
stos
sub
pop
push
call
push
sub
add
pop
jmp
xor
push
shr
pop
leave
push
push
call
into
ret
mov
pop
add
add
ret
loopne
add
add
jns
add
add
add
nop
mov
xchg
add
add
add
add
cwtl
add
sub
pop
ret
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
stos
stos
leave
add
scas
xchg
add
xchg
imul
mov
add
mov
cwtl
add
pop
call
stos
add
pop
fdivrl
xchg
arpl
jae
addr16
sub
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
call
mov
lret
int
out
add
in
in
add
mov
add
push
push
add
ret
loope
movsl
add
add
add
add
icebp
popf
mov
add
lcall
mov
push
push
call
mov
data16
jne
call
add
jo
rolb
iret
aam
call
loopne
add
mov
cltd
mov
rcll
idivb
xchg
cmpsl
add
cltd
push
add
pop
mov
pusha
add
test
imul
push
inc
add
push
sub
add
not
add
shr
sub
not
sub
pop
add
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
xchg
std
movsb
addl
scas
push
add
push
add
add
bound
scas
add
testb
test
pop
jae
add
add
ljmp
add
add
in
fdivr
lcall
jne
call
push
push
push
lea
push
call
xchg
push
je
add
add
add
fs
addb
add
jnp
jecxz
bnd
jbe
xchg
js
add
add
add
push
sbbb
popl
add
out
lea
shl
shl
pop
call
push
push
rol
shr
push
and
add
sub
xor
dec
sub
pop
dec
add
pop
push
ror
pop
pushl
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
gs
add
jl
mov
popa
loopne
out
jp
test
mov
add
add
mov
mov
in
test
insb
nop
pop
lea
add
lds
add
call
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
movsb
out
pusha
lods
add
data16
rolb
add
add
add
xlat
mov
outsl
jge
lods
addl
jge
add
lcall
ror
push
not
pop
add
push
add
pop
pop
pop
push
ror
xor
pop
pop
push
sub
rol
add
rol
pop
xor
push
rol
rol
pop
inc
ret
push
push
push
call
fwait
pop
add
rolb
jo
add
mov
xchg
mov
movsl
in
add
addl
add
mov
sti
jbe
xchg
sub
pop
leave
push
ror
sub
add
pop
ret
push
ror
rol
pop
push
mov
push
ror
xor
pop
cmpl
jne
mov
push
not
pop
jmp
push
push
push
call
add
subl
add
add
add
add
stc
add
add
xchg
aam
lret
push
test
add
test
add
jae
mov
add
out
lods
flds
mov
xchg
xchg
jmp
add
add
sub
pop
mov
and
push
push
push
lea
push
push
push
lea
push
call
push
add
xchg
add
add
idivl
aam
pop
cmpsb
xchg
add
add
mov
add
in
ja
mov
rolb
cwtl
add
pop
add
add
sub
pop
xor
push
lea
push
push
lea
push
push
push
call
arpl
fldz
test
pop
add
mov
jecxz
add
add
clc
add
add
jne
bound
add
mov
cmpsb
pop
add
add
mov
sub
pop
xor
add
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
push
mov
push
mov
imul
push
jbe
cmc
add
cmpsb
jecxz
cmpl
imulb
pop
loopne
add
lcall
dec
call
call
add
add
mov
mov
ror
add
vcvtsd2ss
cli
test
add
add
xchg
insb
add
add
out
add
lds
in
pushf
jo
jnp
loop
add
lret
addb
add
jo
push
out
sub
pop
dec
push
lea
push
push
lea
push
push
call
je
jmp
add
scas
add
push
test
mov
add
iret
add
add
std
movsl
fwait
add
add
add
add
call
add
imul
add
shrb
add
add
test
sub
pop
sub
push
sub
pop
jmp
push
lea
push
lea
push
push
call
in
addr16
add
add
add
jno
add
xchg
xchg
add
cmpsb
xchg
testb
pushf
data16
jo
push
lock
add
int3
ljmp
add
mov
add
xchg
call
lock
add
add
add
lcall
add
add
pushl
push
add
lea
pop
pop
push
push
call
jns
pop
add
add
add
addr16
pop
mov
jmp
add
xchg
mov
incb
add
notb
loopne
xchg
leave
add
add
add
add
add
add
cltd
sub
pop
sub
cmp
jne
push
push
lea
push
push
push
push
push
push
call
add
add
xchg
add
popl
lods
add
xchg
add
add
mov
add
lahf
add
flds
jno
add
fcompl
mov
in
xchg
xchg
pusha
addl
add
add
pop
pop
fldl
mov
sub
pop
mov
lea
push
add
rol
pop
sub
push
sub
rol
ror
add
pop
mov
push
shl
dec
rol
pop
shr
add
push
push
lea
push
push
call
add
push
clc
mov
outsl
jne
add
lea
cmpsb
add
stos
add
mov
jne
push
mov
popf
sti
mov
pop
pusha
pop
sahf
je
xchg
add
sub
pop
sub
pushl
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
divl
jne
addb
pop
ficompl
add
mov
add
test
ja
jno
fucompp
mov
add
loop
xchg
sar
pop
je
in
call
add
xchg
hlt
pusha
clc
add
pop
xchg
add
stos
jecxz
add
popf
fwait
rolb
xchg
lds
add
sub
pop
pop
push
push
call
push
xchg
pop
mov
arpl
mov
add
add
pop
lock
add
add
xchg
out
add
add
aam
in
clc
pop
shr
push
push
push
push
push
call
add
add
in
add
test
enter
jb
loope
mov
push
test
into
mov
add
add
xlat
xchg
xchg
push
jb
add
push
add
movl
add
scas
fdivs
icebp
add
mov
iret
scas
mov
in
in
pop
and
sub
push
lea
push
call
jecxz
add
add
mov
xchg
add
add
add
pusha
in
add
add
add
fstl
stos
add
testb
in
clc
pop
cmp
jne
push
push
push
lea
push
push
push
push
lea
push
push
call
add
cmc
fistpl
add
imul
add
mov
xchg
pop
fs
fmul
add
add
int
hlt
imul
add
add
out
add
call
leave
push
inc
sub
ror
pop
ret
push
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
aad
add
add
add
cmc
mov
xchg
add
add
xchg
fwait
pop
out
add
addl
push
push
ror
pop
mov
push
xor
pop
add
push
ror
shr
rol
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
mov
jge
orl
add
faddl
add
add
add
in
fdivr
lcall
push
add
pop
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
mov
add
lcall
sahf
repnz
jecxz
sti
fwait
xchg
add
add
cld
notb
push
add
gs
call
add
lret
mov
mov
fadd
sahf
add
mov
push
sub
pop
push
push
sub
add
shl
add
pop
push
push
xor
not
pop
mov
push
push
push
lea
push
push
lea
push
call
add
add
jnp
addb
xchg
add
add
add
test
mov
lcall
movsb
shll
ljmp
in
call
sub
push
push
call
sahf
add
add
mov
clc
add
add
imul
mov
push
add
push
add
sahf
lock
loop
ja
fcomp
add
cmc
add
lock
mov
add
add
cmc
add
add
xchg
pop
add
add
jle
shll
mov
push
add
jle
add
lcall
adc
flds
shr
push
push
push
push
push
call
add
mov
int3
add
lcall
mov
outsl
add
fwait
jle
lcall
out
push
sarb
cltd
add
jge
pop
test
push
add
sarl
push
add
add
mov
push
lea
push
push
call
lcall
fwait
add
add
stos
clc
add
add
fmul
mov
add
lcall
pop
or
aaa
push
call
outsl
push
pop
mov
mov
push
popa
mov
pop
add
add
scas
mov
add
loop
test
andl
testb
stos
mov
test
stos
fidivrs
jecxz
xchg
xchg
shlb
jno
add
icebp
notb
jne
pusha
pushf
add
jnp
in
clc
lcall
jge
push
push
push
lea
push
call
xchg
add
in
popf
movsb
cli
push
rcl
fiadds
mov
add
mov
stos
mov
mov
push
mov
imul
sti
add
lahf
enter
in
add
pop
test
add
add
stos
add
js
mov
arpl
add
jp
add
jl
add
mov
add
add
sub
pop
xor
mov
push
xor
sub
pop
and
push
shl
inc
xor
dec
pop
rol
push
ror
pop
rol
xor
push
push
push
lea
push
push
push
push
lea
push
push
call
lret
jge
mov
out
imul
rclb
mov
jb
add
arpl
ja
jge
jne
xchg
add
cmpsl
add
in
in
fdivr
lcall
cmpb
jne
push
ror
pop
add
push
inc
pop
cmp
je
push
sub
dec
pop
add
push
push
push
push
push
push
push
push
push
call
jno
clc
xorb
int3
cwtl
clc
pop
rolb
xchg
testl
add
add
mov
out
pop
mov
push
test
bound
addl
mov
add
add
test
jp
data16
popf
add
add
jnp
add
test
std
call
call
sarb
add
add
add
mov
add
jl
jmp
mov
add
mov
pop
mov
mov
out
add
pop
push
idivl
sub
pop
xor
push
lea
push
call
add
mov
iret
jl
push
lea
add
scas
jnp
add
add
faddl
pop
out
ljmp
push
out
push
ffree
add
iret
loop
add
ljmp
testl
add
sahf
add
imul
mov
clc
add
imul
push
push
push
lea
push
lea
push
call
add
jmp
add
stc
imulb
add
rcr
push
add
mov
mov
add
jge
hlt
aad
add
enter
fildl
incb
jnp
lock
cltd
sub
pop
pop
push
rol
xor
xor
dec
pop
pop
pop
push
inc
rol
not
pop
pop
leave
push
lea
push
lea
push
call
mov
ja
gs
xchg
add
in
leave
fnsave
add
add
out
add
cmpsb
mov
push
add
add
lcall
add
cmpsl
add
push
xchg
jb
mov
xchg
xchg
cltd
std
mov
mov
mov
add
in
shlb
push
fcoml
leave
movsb
mov
sub
pop
ret
push
xor
dec
dec
add
pop
mov
add
push
shr
xor
ror
pop
mov
test
push
push
lea
push
lea
push
push
push
push
push
call
add
add
mov
add
rorl
movsl
cmc
ljmp
arpl
add
jae
add
movsl
lret
add
call
push
lea
push
push
push
call
xlat
add
xchg
add
out
add
add
jmp
mov
bound
fists
pop
mov
out
fs
add
add
xchg
popf
add
fisubl
js
shl
jecxz
in
add
add
xlat
jp
add
ret
add
fiadds
add
test
in
out
sbbb
iret
mov
add
sub
pop
xor
push
push
push
lea
push
lea
push
call
ja
outsl
mov
add
lret
jae
mov
add
add
xchg
add
xchg
into
mov
add
add
add
lcall
push
xor
shl
xor
pop
pop
push
push
lea
push
lea
push
push
push
call
pop
add
jl
xchg
add
mov
leave
push
push
mov
lea
mov
pop
add
adcb
addb
add
lods
add
out
mov
jae
jns
jo
mov
xchg
add
outsl
sub
pop
pop
push
xor
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
jae
add
cmc
pushf
add
xchg
int3
push
in
popl
add
mov
fistps
xchg
in
add
ret
jno
push
pop
fs
add
add
insb
std
cmc
scas
add
shll
pushf
add
mov
add
add
xchg
mov
add
leave
push
shr
rol
sub
pop
ret
push
push
lea
push
push
lea
push
push
push
call
pushf
hlt
mov
leave
add
iret
add
cli
pop
add
add
add
mov
imul
add
add
sub
pop
mov
add
push
add
rol
pop
push
push
push
push
push
push
call
stos
std
add
add
jnp
jne
test
add
add
push
into
mul
hlt
aad
add
add
jbe
aam
add
fwait
fwait
lds
add
xchg
add
shrb
imul
jle
add
push
fsubp
jle
add
in
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
addb
mov
add
add
add
jns
bound
int
mov
xlat
mov
push
roll
push
add
sar
mov
add
loope
cltd
hlt
push
in
test
jne
cmpb
fisubs
xlat
jns
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
aad
add
mull
roll
outsl
imul
out
add
iret
push
pop
cli
mov
lret
lahf
pop
popa
pop
jle
xlat
mov
lcall
add
mov
mov
pop
jo
fst
mov
add
cld
push
push
lods
mov
in
in
lcall
pop
or
mov
std
test
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
add
je
mov
xchg
je
mov
add
jno
pop
add
les
aad
pop
int3
jmp
add
test
mov
lcall
fdivr
lcall
push
push
lea
push
push
push
push
push
lea
push
push
push
call
out
add
add
add
ljmp
add
icebp
jl
add
add
add
scas
hlt
popf
add
pop
push
pop
lea
push
sub
xor
xor
lea
pop
sub
push
push
lea
push
lea
push
push
push
lea
push
call
add
mov
add
cld
add
test
mov
mov
add
add
leave
add
call
xchg
ja
add
add
loopne
in
add
jmp
add
lea
sub
pop
mov
shr
push
push
push
push
push
call
jbe
out
add
add
mov
add
test
stos
fadds
jge
xchg
add
push
add
add
in
lcall
fimull
dec
push
push
lea
push
push
push
push
push
push
call
insb
js
ljmp
add
mov
bound
fildl
fbstp
mov
add
xchg
fidivrs
add
int3
add
add
scas
xchg
mov
ret
faddl
add
arpl
add
cmpsl
mov
sub
pop
add
push
lea
push
push
call
add
movsl
add
xchg
jp
popf
add
add
nop
fwait
add
fildl
fadds
add
shl
add
push
mov
add
mov
lret
add
add
jle
add
mov
fwait
add
lock
add
jae
add
gs
add
lcall
jae
push
lea
ror
pop
popl
push
pop
mov
add
push
push
push
push
push
lea
push
call
mov
scas
add
push
push
add
add
add
add
xchg
leave
add
stc
lahf
mov
add
testb
mov
lret
sti
mov
add
iret
add
fadds
popa
jo
add
stc
lret
lret
add
lcall
notb
lea
push
call
out
out
leave
add
imul
lea
popf
add
mov
out
lods
ljmp
imul
jge
pop
pop
fimull
add
xlat
lods
add
add
imul
outsl
lret
jl
cmc
fnsave
fisttps
mov
fisubs
lcall
adc
mov
push
push
lea
push
call
add
add
in
orl
add
add
add
test
add
xchg
add
pop
popa
add
incb
pop
lods
jb
mov
jp
mov
aam
std
fmul
in
cmc
sub
pop
add
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
js
jecxz
pop
enter
aam
fdivs
add
stc
bound
add
bound
mov
add
mov
add
insb
add
out
movsl
jnp
add
lret
add
iret
test
fists
fcompl
rclb
aas
aad
push
push
push
push
call
sti
fiadds
cli
enter
test
fs
pop
jmp
jne
jno
add
fistpll
call
int
add
add
stos
add
push
stc
mov
call
mov
cmpsl
add
lret
sub
pop
rol
push
ror
sub
not
dec
pop
nop
nop
push
rol
pop
xor
push
lea
push
push
call
add
int3
mov
add
mov
fwait
add
pop
xlat
loopne
add
add
mov
mov
mov
mov
push
add
add
mov
add
add
add
add
push
add
pop
nop
push
push
call
cli
mov
nop
out
repnz
sti
mov
lahf
xchg
mov
mov
add
out
add
add
filds
add
stc
jle
mov
jns
add
pop
mov
add
out
add
mov
mov
std
add
sub
pop
nop
push
lea
push
push
push
push
call
xchg
shrb
push
push
add
mov
jno
add
xchg
jbe
pusha
jae
bound
lods
add
roll
push
add
int
add
add
subl
mov
push
hlt
add
insb
add
add
fistpll
add
loop
cli
mov
sarb
stc
out
mov
rolb
lcall
push
ror
xor
pop
nop
push
not
sub
pop
nop
push
sub
shl
not
pop
cmpb
jne
add
push
sub
xor
rol
not
pop
nop
push
push
lea
push
push
lea
push
push
push
call
add
xchg
add
add
xchg
add
test
lret
idivl
cmpsl
jbe
mov
add
add
rcrb
fadds
mov
push
stos
lock
pop
nop
push
lea
push
call
enter
add
add
add
mov
mov
add
add
pop
hlt
shll
rcl
add
cwtl
add
jo
add
add
add
in
shrb
xlat
pop
jb
add
add
lcall
mov
andb
lcall
inc
or
test
bound
fldcw
add
push
lea
push
lea
push
push
push
call
jl
add
mov
push
pop
fmuls
push
jae
enter
jbe
sti
add
cmpsb
outsl
mov
xchg
add
arpl
filds
scas
out
ljmp
je
in
fdivr
lcall
push
push
push
push
lea
push
push
push
push
push
push
call
loope
cld
lock
add
hlt
xchg
mov
add
add
jnp
jge
fldl
cmpsb
add
jle
add
add
je
nop
std
mov
pop
aam
iret
rolb
sub
pop
nop
inc
push
push
lea
push
call
add
add
add
add
add
roll
add
add
shlb
add
jmp
jne
add
mov
jns
testb
mov
xchg
ljmp
nop
add
sub
pop
nop
push
shl
pop
nop
push
not
add
pop
cmp
jb
xor
push
push
push
push
push
push
push
push
push
call
popf
ret
add
add
add
in
je
out
add
popa
add
aam
add
js
push
add
into
out
mov
aad
stos
xchg
add
jge
add
jo
iret
add
xchg
lahf
add
add
js
add
add
xchg
std
mull
sub
pop
jmp
mov
push
lea
push
lea
push
call
in
xchg
add
add
jbe
mov
add
add
xchg
lods
xchg
add
add
mov
pop
lods
push
scas
gs
fwait
mov
rolb
lahf
in
pop
add
add
push
pushf
add
mov
xchg
fbstp
stc
int
add
into
add
loop
add
xchg
lea
jge
jbe
add
sub
pop
add
push
ror
sub
pop
movzwl
mov
push
push
push
call
into
add
lock
cld
mov
movsb
add
add
mov
add
add
add
add
mov
add
cli
std
jo
add
lret
mov
sahf
repnz
push
add
mov
out
xchg
add
add
mov
cmpsl
add
add
fwait
mov
add
lcall
rorl
pop
xchg
push
lea
push
push
push
call
mov
pop
pop
popf
enter
mov
pop
jns
mov
add
in
sbbl
rolb
stc
add
lahf
jno
addb
js
int
add
add
sub
pop
xor
xor
push
push
push
call
rcrl
out
lods
xchg
add
xchg
out
les
add
ja
mov
mov
mul
add
std
add
bound
sub
pop
shl
xor
push
inc
pop
shl
xor
push
ror
pop
shl
xor
push
add
pop
mov
push
push
lea
push
push
lea
push
push
push
call
add
add
add
add
pop
add
add
icebp
clc
lods
loopne
lret
iret
fwait
lock
xchg
jmp
js
in
movsl
add
lea
lcall
inc
hlt
pop
push
pop
pop
push
push
push
push
push
push
push
push
call
adcl
lahf
xchg
bound
push
add
add
in
xchg
aad
xchg
test
add
add
pop
mov
add
jl
stc
out
mov
cmpsb
add
lcall
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
iret
rolb
aad
stos
test
push
add
add
jbe
cmpsl
add
hlt
add
scas
jb
add
push
shl
pop
leave
ret
push
rol
not
pop
push
mov
push
sub
shr
add
xor
pop
push
push
push
lea
dec
inc
pop
push
push
push
shl
pop
mov
push
lea
push
lea
push
push
push
push
push
call
push
add
push
add
popf
add
mov
xchg
loop
lods
movsl
push
add
add
mov
add
xchg
add
fiadds
lret
cli
lods
cmpsb
test
iret
out
add
add
mov
in
in
mov
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
add
lea
add
add
add
add
add
add
movsb
jmp
add
add
add
scas
test
add
add
mov
add
flds
add
movsb
add
add
les
jecxz
pop
add
xchg
add
add
mov
addl
movsl
sub
pop
mov
push
lea
push
call
loop
in
push
icebp
add
add
add
rolb
mov
lret
lods
cltd
jns
mov
add
add
xchg
xlat
add
lret
push
add
add
cltd
gs
out
addb
scas
add
add
clc
scas
sub
pop
test
je
mov
push
pop
test
je
mov
push
xor
pop
mov
push
add
sub
add
sub
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
jns
ja
add
add
mov
add
ficoms
add
add
in
mov
popl
add
stc
jns
rcll
push
add
add
lcall
push
push
push
push
push
call
scas
add
mov
add
ret
imul
imul
add
mov
add
add
scas
add
pop
add
push
popl
add
xchg
insb
add
add
fnstenv
add
mov
insb
xchg
pop
mov
add
add
push
sub
pop
cmp
je
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
sahf
movsl
add
imul
flds
add
pop
add
add
mov
add
add
rorb
aas
add
add
push
push
lea
push
call
add
jbe
add
out
mov
roll
pop
add
push
add
ljmp
add
test
cli
cli
ret
add
test
lea
in
mov
cld
imul
add
add
add
xchg
mov
scas
add
add
cmpsl
push
add
add
push
push
xor
pop
inc
push
push
lea
push
push
push
call
xchg
imul
push
add
sarl
mov
lock
divb
add
add
mov
add
add
addl
jbe
popf
pop
add
testb
add
add
insb
adc
out
rcrl
add
add
in
in
lcall
rorb
test
jne
push
lea
push
push
push
call
lret
aam
add
jecxz
add
mov
jo
insb
add
stos
add
into
or
add
rclb
outsl
rol
sub
lea
pop
pop
push
lea
push
push
push
lea
push
push
call
add
movsl
add
add
add
lret
imul
add
mov
in
mov
add
pusha
add
sti
add
stos
data16
popf
mov
add
lahf
mov
mov
push
push
lcall
pop
push
push
push
push
push
push
push
push
lea
push
push
call
mov
jge
mov
add
loopne
lods
jmp
add
add
mov
lret
fadds
add
add
clc
in
fcmovnu
push
aam
mov
cmpsb
subl
xor
push
push
lea
push
call
test
ljmp
movb
add
jb
add
mov
pop
lret
xlat
push
mov
bound
movl
int3
add
mov
add
add
add
xchg
mov
test
xlat
add
fldl
cwtl
jnp
push
add
test
sub
pop
leave
push
xor
rol
pop
ret
mov
push
inc
sub
xor
pop
inc
push
lea
push
push
push
push
call
jb
add
stc
loopne
mov
add
ljmp
mov
aam
mov
add
push
xchg
movsl
push
jae
add
add
add
mov
add
arpl
lcall
lock
push
push
push
push
push
lea
push
push
call
lret
filds
add
jge
ja
aad
add
lcall
xchg
jb
pop
insb
cmpsb
add
add
cli
cmpsl
push
add
fildl
int3
test
add
add
pop
cmpsb
stc
add
add
test
push
sub
pop
lea
push
not
not
lea
shr
pop
mov
push
push
push
push
push
push
push
push
call
fldl
shlb
popf
in
fwait
add
push
cli
add
pop
mov
out
add
add
add
mov
faddl
cmc
mov
add
push
int
add
add
enter
lds
add
sub
pop
test
je
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
les
add
jl
add
mov
pop
jns
push
add
add
cltd
cltd
add
roll
mov
arpl
pop
add
lcall
movb
rol
pop
cmp
jne
push
push
lea
push
call
mov
xchg
xchg
add
roll
fistps
add
pop
mov
mov
add
clc
call
push
scas
mov
ret
mov
cltd
add
xchg
add
add
loop
in
hlt
lcall
inc
add
fildl
not
pop
test
je
push
push
push
push
lea
push
push
push
push
call
add
add
mov
add
negl
mov
mov
pop
cmc
add
leave
std
add
test
lds
lahf
scas
data16
in
cwtl
xchg
rolb
add
ret
add
fbstp
add
into
add
sub
pop
mov
push
pop
add
push
lea
push
push
push
call
add
add
add
add
mov
add
cmc
mov
fcoml
add
xchg
add
add
add
lcall
mov
in
mov
in
fcmovu
pop
add
rolb
add
fwait
scas
icebp
add
pop
popl
pop
add
stos
sub
pop
cmp
je
jmp
push
push
push
push
lea
push
push
push
lea
push
call
add
xchg
add
negl
in
add
stos
add
add
mov
in
add
add
je
jmp
addr16
add
ret
add
add
nop
ror
add
lcall
lret
add
add
jo
add
loop
push
stos
add
call
lcall
rclb
loope
xor
lea
pop
pop
push
push
lea
push
push
push
push
call
add
push
add
les
pop
mov
popa
mov
add
mov
xchg
add
add
xchg
add
mov
jae
mov
mov
pop
add
imul
cwtl
mov
stc
add
pop
in
push
add
sub
pop
pop
push
lea
push
push
push
call
xchg
pop
xchg
in
add
xchg
mov
in
add
add
addl
arpl
stc
xorb
lahf
mov
rol
mov
push
test
add
add
notb
addb
add
lea
add
stos
jge
add
add
loopne
mov
in
lock
lcall
push
lea
push
call
mov
xchg
add
aad
add
int
add
add
out
add
add
add
cmpsl
add
stc
fst
xchg
lds
jb
cltd
add
lock
xchg
mov
jp
lds
fadds
out
xchg
add
xchg
test
add
mov
mov
add
lahf
xchg
jmp
stos
add
pusha
sub
pop
pop
leave
push
push
push
push
push
push
push
lea
push
push
call
rcll
add
push
push
add
in
add
add
add
add
fidivs
push
mov
add
ffreep
add
mov
add
lcall
or
push
push
push
push
push
push
call
scas
mov
mov
mov
add
jecxz
mov
jl
pop
add
push
mov
cmpsb
jne
mov
roll
add
in
call
lea
push
push
push
push
call
add
add
imul
jo
xchg
loop
sbbb
add
add
add
add
lret
addl
insb
leave
add
push
scas
jmp
add
jns
add
jge
sub
pop
pop
push
push
lea
push
push
push
push
push
push
call
je
hlt
clc
add
xchg
cli
add
add
popa
add
rol
mov
xchg
cmpsb
add
xchg
in
add
jnp
mov
pop
pop
push
sub
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
add
add
add
mov
add
add
popa
xchg
mov
push
call
sar
add
stos
stos
loop
mov
fnstenv
insb
add
add
xchg
in
fimuls
loope
add
lcall
push
lea
push
lea
push
push
lea
push
push
call
add
fdivrl
rolb
add
loop
add
in
add
movsb
add
imul
les
xchg
add
mov
in
pop
add
sub
pop
ret
push
push
push
push
lea
push
call
cmc
add
stos
pushf
mov
add
ror
pushf
sahf
push
push
jmp
fwait
mov
add
add
mov
movsl
xchg
les
add
add
add
js
jnp
test
add
std
out
add
add
lret
mov
addr16
mov
add
add
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
flds
add
add
lea
add
stos
add
mov
add
add
add
add
add
rolb
test
addl
add
out
iret
add
loop
add
mov
add
popa
pop
mov
xchg
lea
pop
add
out
add
add
add
fstpt
shlb
imul
lcall
push
lea
pop
pop
push
push
push
push
call
lret
sahf
add
movsb
stc
rolb
jecxz
xlat
mov
add
xchg
out
jecxz
fldenv
jp
add
add
fwait
pop
hlt
add
add
add
add
pop
leave
add
into
add
jns
add
add
mov
flds
add
nop
sub
pop
pop
push
inc
sub
ror
pop
pop
leave
push
push
push
call
add
add
cld
add
add
pop
fidivs
clc
js
mov
out
add
lret
jmp
sahf
int
xchg
push
add
add
clc
add
push
add
or
decl
decl
scas
lcall
ror
decb
roll
std
aaa
xor
decb
cmpsl
outsl
add
loope
roll
and
shrl
es
or
or
inc
loopne
stos
lahf
into
lret
and
stc
or
cmpsl
loopne
pop
adc
pop
addb
clc
mov
mov
rol
mov
push
mov
mov
insl
add
mov
mov
sbb
inc
adc
cltd
movsb
jle
pusha
mov
inc
or
or
adc
xchg
mov
add
jl
ret
inc
imul
pushf
sub
stos
pop
ret
xchg
mov
mov
je
jp
pop
jae
lods
and
xchg
xlat
repnz
das
testl
ja
call
xchg
imul
mov
leave
dec
lahf
jb
add
mov
and
jmp
mov
cmpsb
repz
out
jnp
leave
or
xchg
lods
pop
mov
sub
cs
jmp
mov
and
add
or
into
and
xchg
lcall
shll
das
imul
jne
in
xchg
xchg
test
pop
cmp
aam
aad
dec
stos
xchg
into
or
ds
nop
mov
add
mov
xor
mov
idiv
pop
and
mov
mov
leave
mov
movl
pop
cmp
addr16
sub
and
pop
insl
and
xchg
ljmp
and
jns
xchg
mov
stc
jne
jne
roll
mov
je
arpl
mov
xchg
pop
in
fbstp
aam
push
aam
jle
dec
cmpsb
adc
cmp
sub
inc
scas
iret
orl
lods
scas
cli
adc
cld
jae
mov
lret
popf
into
jbe
sub
ret
or
lea
mov
adc
lods
mov
push
mov
xchg
fneni(8087
inc
mov
adcl
mov
repnz
add
push
xor
mov
xchg
fnsave
mov
inc
es
jo
mov
icebp
cmp
fs
loop
bound
cld
mov
mov
cwtl
xchg
cvtdq2ps
in
adc
in
cli
aam
xchg
jno
jb
movsl
adcb
mov
lods
add
pop
mov
mov
push
setl
xor
add
lods
and
adc
adc
pop
cmpsl
sub
push
jbe
mov
mov
mov
aam
adcb
rcll
mov
clc
jnp
rcl
jne
icebp
ficomps
lods
lods
cmpsl
movsl
jno
sbb
data16
or
pop
mov
jmp
fwait
rcrb
imul
repz
pop
adc
inc
inc
add
bound
xor
fcoms
fbld
sub
out
jle
adc
jo
jnp
push
jb
sbb
aad
div
xor
adc
loop
xchg
popa
test
ret
mov
push
enter
pop
or
fucomip
inc
iret
mov
stos
mov
mul
mov
jnp
jmp
adc
jns
mov
std
jo
sbb
jae
nop
jmp
xchg
push
adc
imul
dec
mov
in
enter
or
push
xor
stos
jae
sti
mov
sub
mov
ret
stos
filds
lcall
sub
mov
xchg
imul
stos
sahf
mov
mov
nop
addl
aad
jns
cmp
scas
dec
mov
sub
aaa
lods
dec
scas
cld
cmpb
loop
xchg
or
daa
lds
mov
test
dec
test
sbb
jb
ja
cmp
push
aad
xor
loopne
sub
inc
ror
xrelease
cmpsb
mov
scas
jno
outsl
pop
cmp
and
dec
and
pop
add
inc
mov
loopne
ss
insb
xchg
inc
out
int3
xchg
aas
mov
notl
jb
inc
out
mov
popa
inc
les
js
xchg
andl
imul
mov
cwtl
adc
shr
cmpsb
sub
lcall
xchg
jle,pn
cltd
mov
shrb
lret
pop
pop
mov
jl
pop
loope
add
sahf
cmp
inc
fdivrs
loop
adc
sbb
rcrl
mov
or
pop
adc
jl
push
push
outsb
je
or
dec
test
popf
dec
in
mov
add
js
cs
or
pop
insl
mov
push
mov
cmp
pusha
mov
inc
popf
out
mov
push
mov
push
or
mov
jmp
cmp
psubusw
test
mov
prefetch
and
aas
ret
vminps
and
inc
mov
stc
das
repz
movsl
pop
sahf
js
out
decb
jmp
pusha
cltd
sub
sbb
aad
fidivrl
enter
cs
ss
push
cmp
pop
out
ss
in
lcall
pop
cmp
sbb
dec
inc
lret
xchg
adc
test
std
push
iret
lret
inc
orl
cmpsb
data16
push
add
mov
rcrb
dec
sub
loop
jmp
ljmp
mov
jge
ljmp
movsb
inc
cmpb
lock
mov
dec
call
clc
pop
dec
mov
and
pop
dec
xor
xor
xchg
lret
mov
xchg
pop
mov
fcompl
xchg
xchg
mov
push
adc
jno
mov
sbbb
jb
dec
pop
aad
jne
lods
loope
xor
jo
push
pop
stos
pop
stc
fisttpl
cmp
lods
pop
add
inc
pop
jb
cmpsb
add
lock
fnstcw
cmp
or
imul
add
in
adc
mov
and
inc
add
adc
sub
addr16
js
adc
div
je
or
add
jns
inc
jge
jecxz
cs
addr16
stc
mov
pop
jnp
orl
fmull
pusha
jae
sub
inc
in
cwtl
insl
es
out
mov
xchg
insl
jmp
jnp
sub
push
mov
ds
or
pop
jecxz
xchg
call
or
cmp
lea
cmp
sahf
ds
sbb
xor
pop
cmp
add
stc
add
sbb
xchg
mov
mov
sahf
xor
shrb
adc
adc
xlat
add
mov
xchg
sub
sbb
out
sbbl
dec
cmp
les
out
or
mov
pop
shll
and
and
fistpll
jmp
pop
ss
jno
dec
ret
inc
cld
xchg
cld
nop
insl
push
push
cs
add
pop
mov
adc
movsl
adc
xor
and
jge
push
adc
loop
dec
jl
xchg
pop
xchg
fnstenv
and
sbb
xchg
nop
loope
insb
or
rcll
sarl
mov
cmpsb
jge
jae
xor
add
sub
leave
pop
pop
andb
xchg
pusha
mov
pop
jae
sub
loop
xchg
mov
daa
inc
pop
xchg
in
mov
out
jo
repnz
sub
aaa
call
shlb
scas
pop
xchg
hlt
cmp
xor
bound
jns
test
movnti
cltd
dec
and
test
cmp
shll
out
stos
mov
imul
outsl
stc
pop
outsb
into
sub
sbb
loope
mov
jp
push
xchg
jl
add
cmp
pop
xor
maskmovq
testl
out
sti
inc
add
xchg
pop
dec
add
pop
add
fbld
add
sub
iret
jg
inc
int3
je
jae
pop
jno
adc
xor
sub
cmp
popa
adc
mov
fwait
lods
add
dec
pop
lret
movsb
int
rorl
lahf
lcall
push
sahf
int3
mov
mov
mov
pop
popf
scas
sti
fs
xchg
add
fdivrs
aam
mov
iret
jno
dec
add
flds
sbbl
xbegin
inc
scas
xchg
pop
dec
popf
aad
sbb
cmp
in
arpl
push
sbb
push
push
push
cmp
mov
jb
pop
mov
inc
mov
jg
loop
pop
mov
lret
mov
or
mov
cmp
mov
add
adc
enter
dec
pop
stos
xlat
mov
popa
fsubl
mov
pop
push
scas
xchg
leave
jnp
jmp
lods
mov
push
or
scas
popa
inc
inc
dec
mov
push
loopne
mov
idiv
test
fwait
push
popf
clc
aam
push
mov
test
lods
leave
adc
popf
lea
push
sbb
push
movsb
push
adc
lahf
xchg
loop
pusha
bound
mov
xor
jo
pop
mov
lahf
sbb
cmp
mov
or
sbb
cmp
or
fidivrs
add
pminub
rcrl
aas
dec
adc
mov
loopne
pop
aad
mov
mov
pop
mov
ficoms
xchg
rorb
push
iret
pop
push
ret
jl
push
loopne
leave
shl
or
xor
aad
sub
adc
clc
mov
test
push
pop
cmc
scas
repz
iret
sub
cmp
cltd
or
jno
out
shlb
jp
mov
andb
fidivrs
mov
popa
mov
aas
mov
xor
mov
sub
mov
pop
inc
dec
int
pop
sub
xlat
xchg
in
out
icebp
pop
sbbl
scas
sub
mov
cmp
and
mov
xor
sarb
sub
or
int3
xlat
cli
dec
pop
rcrl
mov
jge
test
sbb
pop
pop
adc
inc
or
insb
fcoml
mov
mov
sub
movsw
fabs
adc
push
dec
sbb
clc
aad
xchg
push
shr
sub
sbb
es
iret
sub
cwtl
mov
cmp
or
push
adc
xor
mov
fyl2xp1
mov
les
jb
imull
mov
aam
xchg
lods
mov
ljmp
arpl
push
movaps
fs
pop
repz
jns
xor
cmp
pop
dec
ss
inc
xchg
addb
adc
in
or
popl
shl
mov
outsl
jl
js
imul
inc
fnstsw
lock
mov
and
pop
jnp
and
add
je
cmp
pop
add
fstps
loope
mov
xchg
jmp
fiadds
arpl
sbbb
fisubs
xor
jae
arpl
sarb
int
jle
cld
jno
in
push
ss
in
cmpb
jecxz
push
filds
dec
das
rcrb
or
cmc
sbb
iret
xchg
jmp
push
pop
sbb
test
xchg
or
cmp
in
test
xchg
jge
dec
jle
mov
out
mov
stos
and
leave
mov
popf
mov
mov
sbb
or
lods
mov
add
shll
push
jecxz
test
jo
pop
pop
adc
stc
and
or
jg
pop
fldcw
cmp
sbb
add
sbb
mov
ss
push
sti
out
sbb
adc
push
cmp
inc
scas
xchg
les
insb
imul
rcrb
js
test
cmp
outsl
xlat
popf
cltd
out
lahf
insl
inc
in
repnz
dec
xor
arpl
xchg
out
xlat
scas
adc
dec
and
mov
xor
adc
das
ret
add
xchg
adc
fs
fdivl
popa
arpl
dec
lods
sub
dec
jg
lods
add
or
fiadds
out
xchg
jno
ds
aad
movsb
sbb
ljmp
cmp
nop
jbe
into
fdivs
xor
mov
or
das
pop
mov
sub
xchg
out
add
sbb
sbb
or
and
lods
loopne
mov
into
mov
ljmp
and
mov
xchg
or
gs
xchg
push
jbe
cmpsl
in
ret
icebp
mov
inc
stos
fidivs
cli
xchg
add
dec
cli
pop
jbe
xor
or
jbe
jge
sti
pop
pop
push
lahf
aas
mov
and
into
inc
ffree
test
mov
adc
ja
pop
mov
xchg
mov
pop
cs
push
repz
movsb
sbb
jmp
mov
lods
add
mov
outsb
add
jecxz
ret
add
jge
pop
jge
subb
mov
cld
mov
mov
andl
xchg
jecxz
adc
add
insb
movsb
mov
xor
jp
and
push
outsb
int
xchg
pmaxub
fldcw
cmpsl
and
push
and
mov
mov
jno
jns
popa
or
lea
jl
jp
adc
add
das
mov
inc
shr
sub
or
ljmp
ds
ljmp
adc
cmpsl
iret
lea
pop
xchg
xchg
dec
dec
rdmsr
mov
scas
pop
jae
jo
jmp
js
data16
daa
mov
loop
jle
ret
repnz
cmpsb
sbb
jmp
scas
inc
push
mov
dec
rorb
xor
cmp
fistps
mov
mov
outsb
jae
jmp
sbb
lock
fwait
jmp
push
nop
std
or
xor
push
and
mov
sbb
loopne
cmpsb
movb
or
xor
mov
scas
fildl
xchg
dec
outsb
test
mov
push
out
sbb
arpl
or
mov
push
pop
push
sti
out
pop
dec
mov
cltd
push
sub
and
incb
fsubrl
outsb
js
cmpsl
xor
jo
and
in
aas
sub
sub
int3
pop
adc
pop
nop
pop
icebp
adc
popa
scas
repz
mov
mov
outsb
in
mov
test
and
repnz
adc
jmp
call
scas
lret
sub
dec
xor
and
xor
mov
jp
fs
pop
add
fisubl
in
fld
mov
cli
pop
pop
mov
lds
xor
and
roll
mov
in
pop
adc
add
xor
ja
xor
inc
movsb
mov
jge
mov
inc
test
iret
test
push
test
movsb
rep
repnz
push
mov
dec
stos
or
inc
sbb
pop
rcr
adc
mov
pop
jns
addr16
pop
cmp
dec
aaa
add
xchg
stos
subb
popfw
stc
ljmp
or
repnz
dec
ret
add
jecxz
rcll
adcl
test
sub
out
mov
inc
dec
test
mov
adc
pop
add
push
mov
arpl
jbe
xor
dec
in
xor
add
push
pop
inc
lods
or
push
xor
movl
push
pop
inc
fistpl
mov
or
pop
js
mov
sub
popf
xor
inc
push
jne
insb
repnz
fstps
sub
adc
popf
sub
cmpsb
pop
xor
jp
in
jno
lcall
or
mov
jp
sbb
enter
ds
or
add
add
mov
mov
cs
mov
and
push
arpl
mov
mov
jnp
inc
sub
push
inc
sub
outsl
and
push
jl
xchg
test
outsl
dec
popa
xchg
mov
adc
mov
and
xchg
cs
mov
iret
jp
pop
cmc
inc
cmpsb
imul
push
dec
bnd
and
bound
dec
sub
es
loop
xchg
jmp
imul
sub
insl
jns
popf
movsl
sbb
cwtl
push
and
push
cmc
fists
out
test
int3
mov
es
push
out
sub
cmp
dec
sub
inc
add
or
and
gs
cmp
inc
pusha
and
jle
xor
lret
and
jbe
cld
lret
jne
push
movsl
xchg
push
and
shl
dec
je
stos
push
outsb
sbb
loop
outsl
outsl
lahf
cltd
adc
push
xlat
jbe
das
cli
out
cmpsl
lods
outsb
dec
insl
pop
or
lcall
ficomps
mov
mov
lock
mov
cmc
fsubrs
add
xor
out
sub
pop
enter
jg
xchg
sub
mov
outsb
rol
out
add
mov
or
push
cs
add
mov
cld
cmp
inc
sbb
add
movsb
xor
jl
test
es
insl
mov
xor
mov
push
and
dec
cmp
adc
cmp
mov
repnz
mov
pop
icebp
movsl
imul
jle
or
mov
jge
xor
pop
pop
dec
mov
sub
test
outsb
mov
popa
mov
clc
lret
dec
movsb
imul
cli
adc
mov
hlt
mov
out
cmpsb
mov
xchg
mov
mov
fidivrs
sti
mov
pop
inc
negb
add
adc
popf
mov
and
fst
add
repz
sbb
adc
mov
mov
inc
inc
dec
enter
dec
call
cmpsb
xor
adc
in
cmp
jae
sti
daa
xchg
into
add
inc
inc
pop
pop
cmc
cmp
sti
sub
dec
mov
adc
lahf
mov
outsb
jae
arpl
leave
inc
pop
inc
ret
sbb
test
mov
jno
add
sbb
add
mov
sbb
lods
adc
pop
loopne
mov
imul
xor
and
movsb
ljmp
into
das
stc
daa
cmc
push
mov
cmpsl
pop
aam
add
pop
sti
and
sbb
out
mov
mov
test
mov
das
add
into
jne
dec
out
add
pop
sub
ret
les
mov
cmp
leave
mov
sub
js
stos
sbb
fbstp
pop
arpl
ret
push
das
fiadds
and
xchg
pushf
xchg
insl
pop
imul
dec
inc
lods
push
lock
fsubrp
add
jnp
outsl
insb
and
mov
sbb
pop
add
fbld
pop
mov
in
shrl
lret
pop
mov
xchg
lret
add
in
lcall
and
cs
outsl
or
lods
ret
mov
arpl
jp
ffree
mov
sbb
xor
mov
mov
es
cmpl
mov
add
jae
jp
out
pop
xor
scas
dec
adc
scas
add
jg
sub
push
dec
cli
lds
mov
mov
push
cltd
sbb
dec
or
aam
call
mov
inc
push
cmpsl
inc
xor
inc
cs
xor
xchg
je
dec
pop
ret
jmp
insb
mov
bnd
mov
insb
inc
dec
add
jge
mov
inc
sub
das
jge
mov
xor
pushf
jecxz
in
repz
adc
test
xchg
mov
ss
mov
lea
push
mov
sbb
fnstenv
sub
or
sti
dec
dec
test
sarl
jle
mov
and
int3
mov
sti
xor
mov
mov
push
call
push
ret
mov
jge
ret
inc
pop
jae
inc
in
sbb
enter
ds
cld
or
push
andb
out
cmp
in
rol
mov
lds
sub
add
pop
pushf
pop
or
xchg
sbb
scas
es
xchg
gs
dec
fcoml
stos
xor
loope
in
mov
pop
mov
mov
ret
cld
cmp
jecxz
bound
xlat
addl
pop
add
js
xor
inc
mov
jp
push
mov
leave
mov
push
xchg
adc
gs
jecxz
inc
mov
inc
pushf
jp
and
out
fisttpll
push
jns
por
shll
mov
frstor
adc
push
cmc
push
dec
jbe
in
imul
dec
jmp
test
scas
xor
in
dec
dec
les
cltd
sbb
pushf
mov
outsb
mov
push
inc
pop
and
sub
aaa
and
push
out
outsb
jo
sub
jb
or
lret
int3
or
aad
subb
xlat
cmpl
dec
in
cli
xor
test
ret
mov
cmpl
pop
cmp
rcl
add
push
lahf
dec
adc
jmp
xor
cmp
pop
xrelease
lods
jecxz
lcall
jb
adc
mov
push
inc
rorl
pushf
loopne
sahf
mov
aad
push
cmc
jp
mov
pop
aad
jb
xor
xlat
dec
dec
push
sub
out
xor
xor
jge
js
jl
shlb
cwtl
ficomps
xor
testb
sub
andl
js
fbstp
pusha
xchg
pop
js
mul
loopne
lds
fisubl
xor
or
std
sbb
push
xor
push
add
mov
into
push
inc
lret
cmp
mov
fs
loope
mov
mov
fwait
cmp
out
pop
xchg
mov
pop
push
pushf
pop
lds
sub
mov
sbb
hlt
pushf
lret
movsl
mov
lock
cmp
sti
cmpsb
pop
mov
negl
inc
xor
loopne
adcb
lods
mov
pop
loopne
pop
fcoms
push
sahf
sub
mov
mov
lock
icebp
out
mov
xlat
rorl
pop
sbb
fcoms
adc
out
add
jge
jns
and
jle
insb
movsb
jmp
xor
xor
mov
push
jecxz
jl
push
xor
ljmp
arpl
ficomps
pop
lcall
or
and
add
icebp
xor
pop
pushf
inc
xor
xchg
pop
xchg
in
add
inc
ffree
repnz
xchg
ffree
cltd
mov
inc
jmp
ret
jo
testl
mov
sbb
xchg
mov
aad
outsb
dec
adc
movsl
mov
lret
stos
inc
gs
scas
xor
push
outsl
lds
ficomps
push
cmc
stos
and
jbe
jmp
lret
imul
popa
testb
ret
or
ret
xchg
test
subb
sub
insb
dec
aad
ret
xor
jbe
nop/reserved
testb
mov
ret
pop
aas
or
sbb
sbb
and
cmp
pop
push
mov
push
pop
push
mov
call
dec
imul
fwait
hlt
and
aaa
imul
and
std
dec
dec
push
hlt
fists
push
loopne
dec
out
inc
jg
popl
mov
fxch
sbb
push
cmp
adc
sahf
ljmp
and
mov
inc
pop
mov
xor
fmul
push
adc
loop
adc
aad
sbb
data16
add
adc
nop
cmp
lcall
cmp
nop
sahf
ret
lret
repz
fiaddl
adc
rcr
movsl
adc
enter
inc
aaa
fs
fcomps
xor
aaa
loope
subl
les
push
mov
aam
ret
arpl
push
cmp
fsub
fisttps
bnd
jmp
sub
push
imul
adc
mov
push
cmc
push
mov
insb
mov
sub
in
mov
ljmp
mov
jbe
sbb
inc
adc
cli
iret
loopne
aas
cs
cmp
and
dec
sub
pop
push
mov
or
mov
call
xchg
in
fnsave
rcl
mov
loopne
mov
cmp
dec
mov
testl
mov
shrl
jmp
dec
imul
jbe
xchg
cmpsb
fsts
call
lods
and
cmp
fisttpl
mov
sub
jp
sub
leave
stos
jp
inc
xor
icebp
and
jle
jo
inc
mov
je
aas
mov
xlat
imulb
dec
cmp
xor
push
jno
push
pop
addr16
jne
ret
inc
adc
inc
push
mov
or
sarl
rcll
int
mov
loopne
popf
add
in
imul
rcl
mov
fdivrl
popa
inc
jb
fs
cmp
mov
shl
scas
or
jecxz
mov
jne
sbb
ds
icebp
lahf
inc
dec
or
outsb
fcmovne
lahf
imul
inc
std
loope
sbb
outsl
mov
pushf
jo
push
outsb
stc
sbb
bound
pop
je
push
adc
pop
lock
sti
movsl
mov
scas
jl
rcrl
xchg
test
rorb
mov
mulb
jl
dec
mov
or
arpl
repnz
out
jno
int
push
lods
in
cmpsb
sbb
je
push
mov
jl
testl
or
ret
mov
jo,pn
mov
add
dec
mov
jecxz
mov
xor
pop
dec
insl
and
flds
rclb
icebp
flds
inc
xchg
inc
aas
dec
sarl
lea
hlt
in
pop
xchg
mov
xor
fprem
xchg
imul
and
sar
or
out
xchg
jns
xchg
mov
xor
pushf
mov
adc
xchg
sbb
insl
mov
out
stos
mov
les
call
and
adc
jne
mov
xchg
cwtl
out
cmp
in
dec
ss
cmp
xchg
push
sarb
mov
xor
xor
test
jp
lret
fildl
push
and
push
xchg
repz
stos
jecxz
pop
loopne
shll
jns
sub
or
push
mov
mov
test
mov
mov
std
pop
aam
in
jecxz
cmp
jecxz
mov
das
mov
xchg
xchg
push
fwait
and
setne
sub
push
das
pop
aad
push
push
xchg
sbb
jnp
stc
inc
repnz
movsb
into
insb
mov
sbb
int
into
mov
in
or
ja
or
imul
xchg
fs
mov
mov
inc
push
loope
pop
and
addb
shlb
jbe
mov
loopne
in
push
pop
bound
insl
xchg
cmp
popa
loopne
mov
sbb
daa
add
out
xor
push
fdivrs
inc
and
push
sub
jb
aad
mov
cmp
mov
or
ds
mov
int
addr16
leave
jge
mov
ljmp
lret
cmp
movsl
gs
test
pop
xchg
jae
sti
dec
mov
repnz
mov
sarb
push
mov
fbld
inc
mov
shlb
xchg
stos
sub
sbb
das
sbb
xchg
cwtl
mov
lock
aaa
cmp
inc
cmp
fistl
cmp
daa
and
cld
in
add
cmpb
sbbb
fsqrt
pop
push
not
push
hlt
inc
cmpl
rolb
in
ss
cs
inc
jns
pop
arpl
leave
mov
aaa
xchg
mov
testl
outsb
sub
jp
minps
insl
xchg
xchg
popf
and
cmp
leave
jbe
lcall
inc
sub
pop
jnp
sbb
push
xchg
and
adc
jo
mov
outsl
xor
rcl
je
aad
call
aaa
scas
movsb
sbb
sub
mov
push
push
cmp
in
sub
pop
mov
jmp
push
xchg
mov
fnstcw
fdivs
dec
sbb
lret
pop
adc
lret
lods
test
mov
aas
mov
leave
xchg
imul
call
test
cmp
pop
sahf
and
jnp
ficomps
hlt
dec
xchg
bound
sbb
mov
xor
insb
mov
aad
mov
jg
ss
jno
mov
push
imul
stos
mov
mov
leave
push
xchg
add
sbb
sbb
ret
jge
cmp
mov
mov
dec
mov
add
es
in
or
cli
jne
aad
sbb
in
scas
lahf
out
inc
mov
xor
es
cmpsb
mov
and
cmp
mov
in
fisubs
mov
rorl
mov
daa
test
daa
in
and
xor
sbb
and
mov
pop
push
or
outsb
cmp
or
je
cltd
mov
ljmp
xchg
mov
jbe
mov
jno
push
mov
sbb
sahf
jmp
xor
test
jbe
js
mov
add
fdivl
in
test
lret
ljmp
sbb
xor
xor
ljmp
cltd
ficompl
add
push
or
arpl
jl
and
rep
aam
scas
decb
push
je
adc
test
inc
icebp
jle
push
cld
jle
add
aad
push
sbb
int
in
mov
inc
bound
fdivrs
mov
and
dec
inc
lahf
repz
and
mov
sub
rcll
adc
sahf
ds
cli
aas
fwait
repz
and
jl
mov
adc
mov
cmp
loopne
jne
fidivrs
jne
loop
cmp
test
mov
lret
xchg
test
aam
adcb
cmp
clc
enter
jge
and
pop
repz
mov
mov
jae
in
mov
push
call
pop
notb
mov
scas
or
push
iret
sti
jg
mov
xchg
mov
mov
pop
mov
pusha
fdivrp
or
xchg
xor
mov
iret
mov
xchg
jl
adc
movsb
orb
sub
sbb
adcl
sub
and
sahf
mov
adc
fildl
mov
mov
or
stos
xlat
push
cmpb
fwait
rorb
push
jle
mov
cmp
mov
das
loop
cltd
push
sti
ljmp
popf
fwait
das
adc
cmpxchg
mov
aaa
outsb
sbb
jns
iret
dec
lods
or
scas
call
push
jle
mov
xchg
adc
sub
xchg
mov
cs
cwtl
sub
imul
je
jmp
daa
bound
jp
or
push
cli
xchg
popf
or
lea
xchg
inc
int
test
mov
repz
inc
sub
fcmovne
and
test
dec
imul
pop
ret
test
popa
inc
cwtl
or
or
les
hlt
inc
je
or
sbb
addb
sub
pop
pushf
divb
es
aas
jb
mov
ss
mov
xchg
in
dec
adc
cli
pop
fdivrl
cmp
sub
rorb
add
inc
mov
dec
adc
jnp
and
xchg
mov
mov
out
dec
mov
xchg
jg
pop
daa
iret
push
in
push
insl
mov
and
dec
icebp
decb
mov
push
sub
loopne
std
fbld
add
mov
xor
loope
sbb
and
adc
call
pop
je
jnp
fisttps
ret
jg
jnp
xchg
mov
pop
out
int
insb
mov
lods
lods
test
lcall
sub
dec
in
pushf
jbe
dec
jae
xchg
push
or
ljmp
sbb
ss
addr16
in
sub
mov
sbb
ljmp
fidivs
test
divl
adc
je
outsb
lock
gs
xor
out
out
xchg
mov
fcompl
je
xchg
lods
cmpsl
jb
xor
stos
mov
sbb
es
pop
stos
lods
fs
jno
xchg
rcrl
or
fcoms
aam
sub
cmp
mov
movb
imul
lahf
cmp
lds
xchg
add
cltd
sub
pusha
xor
cmp
pusha
mov
push
ret
call
push
sbb
out
test
fs
adc
add
in
cwtl
cmp
shrb
jge
ljmp
sbb
mov
fsts
je
add
dec
outsb
aaa
or
and
lods
dec
fs
addr16
add
popf
or
sti
jnp
stc
das
mov
sti
aad
ljmp
lret
stos
int3
mov
adc
xor
sub
jecxz
aam
xchg
xchg
loope
push
cmpsl
shrb
out
push
mov
push
imul
push
ficompl
jge
inc
xor
push
mov
push
xchg
arpl
sbb
add
and
jns
iret
mov
fidivrl
repnz
rcl
mov
call
andl
out
or
rcrl
add
loop
enter
mov
js
rcll
iret
insl
jbe
adc
in
test
fbstp
out
jo
dec
mov
cmp
sarb
cmpsl
lea
mov
sbb
stos
mov
jns
jge
push
cs
add
pop
adc
pop
add
jmp
je
or
xchg
in
pop
into
cld
cwtl
mov
inc
pushf
lcall
test
push
mov
xlat
pop
rcrl
dec
dec
into
cmpl
mov
rorl
jo,pt
stos
adc
adc
testb
push
jnp
push
sub
shll
sbb
inc
mov
arpl
sub
push
aam
out
cli
pop
cmpb
pop
pop
adc
and
add
jns
stos
xor
adc
mov
mov
add
or
adc
add
and
mov
ljmp
outsl
jb
loopne
ja
jne
std
std
sti
movb
lahf
ja
int3
mov
test
bound
xchg
xchg
test
sbb
mov
xchg
stos
pop
mov
xchg
fdivp
test
mov
xor
push
cmp
xchg
mov
aam
bound
mov
sub
dec
out
lea
repnz
sub
sub
mov
lahf
inc
pusha
sbb
cmp
inc
pop
insl
iret
lods
cmp
scas
std
jp
pop
std
mov
pop
sub
loope
imul
outsl
movsb
fidivrl
sahf
xchg
leave
mov
ss
jl
rorb
xchg
test
repz
pusha
mov
jecxz
sti
inc
stos
pop
cli
inc
mov
sub
inc
xchg
push
xchg
movsl
or
mov
push
pop
xor
das
mov
in
sti
jg
push
push
mov
jp
add
dec
cld
jle
pop
pushf
sbb
sbb
inc
lds
push
push
out
jne
jg
aaa
adc
push
jmp
cmp
sbb
xor
cmc
jmp
popa
pop
in
insl
push
xorl
or
fs
arpl
insl
inc
jge
sbb
fndisi(8087
loop
sub
loop
pop
lret
mov
add
idivl
aam
lahf
aas
addr16
push
inc
dec
ret
push
mov
jg
aam
cmp
sbb
scas
push
cmc
adc
mov
mov
call
insb
lcall
push
push
cltd
or
sbb
jnp
int3
inc
mul
insl
jle
xor
out
lds
mov
lcall
rorb
mov
mov
pusha
inc
push
and
cmp
push
dec
inc
arpl
mov
xchg
subb
jne
outsl
test
add
icebp
test
in
sbb
mov
popf
mov
mov
in
and
andl
inc
lds
test
sbbb
mov
scas
sbbb
mov
fwait
scas
out
xor
jle
xlat
aas
arpl
ljmp
xor
and
or
sub
fstp
or
pop
sahf
repnz
and
push
repz
dec
sub
daa
jno
ja
and
scas
outsb
out
mov
or
pop
sub
bound
push
ja
or
neg
push
popa
out
xchg
ljmp
xchg
mov
inc
aad
enter
xchg
mov
xorb
scas
into
xchg
mov
imul
bound
clc
dec
push
pop
icebp
mov
xlat
fidivs
ret
push
test
inc
stos
ret
outsb
sub
rep
fcompl
sbb
or
in
mov
sbb
sbb
scas
mov
push
xlat
xor
push
fucomp
stc
pop
andb
jl
cmp
pop
andb
lahf
inc
ss
add
push
stc
mov
mov
mov
mov
loope
inc
fnstcw
rorl
jg
add
es
pop
shll
pop
pop
lds
add
push
mov
fisttpl
pop
sti
iret
ret
pop
inc
addl
adc
roll
incl
shl
in
faddl
add
add
add
or
mov
xor
mov
push
orl
jne
cld
not
push
mov
adc
aad
or
push
test
jne
inc
pop
xchg
xor
add
jle
xor
mov
into
addr16
std
call
push
cmp
stos
inc
mov
add
push
jl
xor
cmp
mov
jp
pusha
xchg
loopne
xchg
pop
in
out
jne
xlat
mov
int3
adc
and
pop
sub
mov
ret
sbb
pop
xor
dec
pop
or
movsl
jp
sbb
imul
lret
orb
imul
mov
xchg
dec
cwtl
mov
push
cmp
jl
mov
insl
mov
addr16
in
das
push
jge
inc
adc
mov
clc
test
push
out
pop
inc
push
scas
jno
push
push
dec
xchg
into
ljmp
out
idiv
mov
stc
xchg
add
leave
or
rorb
pop
or
lock
jns
dec
push
inc
out
sbb
or
or
or
cmp
ret
push
mov
cwtl
xchg
call
sti
dec
jne
or
shl
sub
and
xchg
das
fucomi
dec
test
fildll
loope
sbb
inc
and
imul
out
or
into
test
or
push
or
mov
arpl
stos
in
fldl
pop
ds
cmp
xor
sub
sahf
pop
mov
push
into
sbb
cli
leave
pop
pop
outsl
push
and
mov
inc
xchg
iret
xchg
rcrl
cwtl
out
or
shrb
and
sahf
inc
jl
xchg
xchg
sahf
hlt
insl
std
push
cmc
sbb
mov
cmp
popf
cmpb
mov
fstl
xor
aad
stc
push
ja
ficompl
shll
and
mov
cmpsl
pop
mov
scas
jnp
cld
or
dec
adc
cvtps2pd
push
push
shll
aam
cmc
mov
cmp
out
fldl
xchg
aam
mov
dec
jge
mov
daa
sub
jmp
lds
xor
dec
les
cmp
jg
mov
ret
int3
aas
add
push
lahf
gs
sbb
fs
pop
incl
add
jo
lret
ss
adc
and
pop
push
bound
mov
outsb
pop
push
mov
lret
loope
clc
cmpb
shl
jle
mov
popf
outsb
xchg
ja
fmuls
jmp
leave
insb
mov
jmp
xor
pop
jb
movsl
adc
sbb
pop
gs
nop
call
das
inc
jnp
loope
dec
out
movhlps
cwtl
cmp
fimull
pop
hlt
loop
xchg
inc
mov
lret
add
jecxz
add
add
leave
xchg
stos
ds
outsb
mov
scas
imull
push
insl
cmp
xor
out
push
adcb
xor
into
and
dec
cmp
mov
pushf
mov
pop
sbb
icebp
dec
mov
xlat
ja
sbb
fwait
push
pop
les
jp
cmp
test
std
fcompl
sbb
sbb
cmp
pushf
pop
test
enter
xchg
lret
push
dec
scas
xchg
adc
mov
lret
or
xor
lods
js
or
je
cmpsb
in
jno
push
sti
into
sahf
mov
jecxz
into
insl
jecxz
cwtl
inc
pop
ss
fdivrl
pop
add
mov
das
icebp
pop
xor
add
mov
fmuls
mov
test
inc
pop
pop
mov
nop
dec
ljmp
in
js
xchg
sete
cmp
sti
in
jns
movsb
sub
cmpsb
push
aam
lock
mov
push
or
movsl
out
pop
fiadds
xlat
rdtsc
nop
dec
and
pop
mov
add
xchg
pop
hlt
jno
inc
lock
pop
enter
or
scas
inc
movsb
imul
subl
sbb
adc
cltd
jecxz
fidivs
fcompl
xlat
dec
push
push
inc
xchg
jmp
std
mov
sarl
inc
pushf
pushf
test
mov
add
xchg
adc
push
xor
mov
jbe
not
aaa
push
push
jle
ds
aam
mov
pop
push
in
xchg
mov
fbld
or
jbe
push
inc
pop
jecxz
syscall
pop
xchg
fwait
iret
jne
mov
divb
cmp
add
jb
push
ljmp
insb
sahf
xor
adc
dec
fidivrs
nopl
push
mov
iret
and
sub
adc
sbbb
cli
pop
xchg
mov
iret
xchg
pop
xchg
hlt
cmpsl
mov
push
mov
icebp
repnz
in
dec
inc
pop
mov
lds
mov
sbb
int
dec
inc
pop
jmp
mov
out
inc
mov
outsb
inc
std
call
mov
insl
dec
dec
jg
sbb
lret
pop
lods
fadds
lds
insl
sbb
add
jae
mov
add
pop
jns
mov
stc
xchg
into
imul
mov
and
dec
into
lock
fs
sbb
dec
push
cmp
jne
hlt
negl
in
xor
jl
leave
neg
cmp
dec
iret
scas
or
add
push
sbb
cmp
fwait
cmp
mov
cmp
test
xor
loope
add
imul
mov
sarl
stc
aad
push
or
mov
cld
sub
in
xchg
xchg
rcrb
and
call
pop
aam
cmpsb
inc
add
push
or
lds
xchg
aad
insb
cltd
out
cmp
in
cmp
loopne
or
xchg
sub
into
ljmp
jge
cmp
jmp
gs
add
out
das
pop
inc
clc
push
ljmp
jne
leave
mov
mov
aad
mov
push
push
in
mov
sub
lahf
addr16
adc
adc
in
cmp
pop
test
nop
in
les
push
stc
mov
xchg
sbb
rcll
aas
into
int
add
das
popa
mov
out
outsb
add
fwait
and
sbb
sahf
js
addr16
stc
xchg
xchg
rolb
or
inc
jmp
sbb
add
fcmovne
std
pushf
pop
fwait
xor
std
notb
imul
clc
sti
xor
inc
xor
clc
lret
imul
cmp
adc
cmpsl
daa
mov
outsl
ret
aaa
jae
std
xchg
push
push
movsl
dec
sbb
mov
jl
shll
dec
daa
mov
mov
mov
jl
dec
faddp
cmpsb
nop
lret
jo
adc
push
add
cmp
or
and
xchg
push
sub
cmp
mov
jge
addr16
aaa
mov
lret
inc
jne
sbb
aam
push
xchg
ret
xlat
ja
fisttpl
mov
mov
ljmp
fbld
mov
or
jo
adc
inc
out
inc
push
out
dec
andl
inc
add
add
dec
xor
shrb
jecxz
je
sub
test
mov
mov
movsl
loop
inc
aas
xchg
rorb
inc
loop
ss
inc
popa
sbb
cmpsl
into
mov
out
pusha
sti
fs
lds
popf
adc
rorb
xor
jle
test
fs
mov
ret
cmc
les
fisubl
mov
mov
jno
pop
lcall
clc
or
add
push
mov
jns
fisttpll
repz
or
js
dec
je
pop
xchg
scas
cmp
daa
sub
mov
lret
mov
xchg
or
in
xlat
or
cmp
mov
jl
movsb
in
mov
and
xchg
cmp
mov
push
add
push
loop
and
hlt
mov
xchg
sub
mov
mov
iret
in
ficompl
neg
mov
pop
in
lods
fstl
pop
mulb
ret
xor
mov
inc
cli
add
mov
cmp
mov
pop
bnd
adc
icebp
shl
cmp
repnz
dec
xchg
sbb
sbb
cmp
mov
lret
cltd
jp
add
stos
addr16
lock
fcompl
sub
in
inc
cld
push
cmp
pop
add
or
test
std
mov
sarb
shrl
in
hlt
sub
add
mov
jae
mov
mov
push
cltd
stc
mov
pop
mov
lret
jb
popf
sbb
pop
xchg
mov
jge
and
mov
movsl
cmp
sub
dec
cmp
lods
xor
mov
arpl
cmp
pop
cs
cmpsb
xchg
ret
push
inc
stos
or
lock
test
das
in
test
inc
lea
add
int3
pop
bswap
loopne
test
insb
cmp
rclb
lds
add
lock
jp
mov
fnstsw
add
or
or
push
test
xor
int
cmpsb
xchg
inc
cmpsb
jne
daa
outsb
in
fdivr
adc
mov
dec
dec
int3
stos
inc
mov
and
in
dec
in
sub
aad
lcall
shlb
rcrb
cwtl
cmp
mov
int3
xor
jb
inc
iret
xor
rorb
cmp
cmp
repnz
push
shlb
cs
ss
insl
ds
jg
inc
sub
sbb
and
out
das
sbb
cwtl
int
in
gs
add
insb
fwait
sbbb
mov
xchg
push
lock
jb
mov
rclb
dec
cmp
lds
repnz
testb
jbe
mov
cmpl
hlt
fwait
scas
push
xchg
outsb
shl
sbb
pop
std
mov
mov
mov
pushf
jmp
cwtl
dec
mov
in
xor
popf
fnstcw
jno
push
adc
lcall
cmp
pusha
jmp
adc
daa
test
neg
inc
or
mov
movsb
out
scas
xor
fisubrs
ret
and
mov
or
cmp
push
jle
mov
je
scas
mov
adc
adc
movsb
ljmp
lahf
dec
xchg
outsb
jge
inc
lcall
jne
hlt
inc
jns
cmpsl
mov
int
mull
shrb
xchg
jl
or
aas
pop
es
ret
push
loopne
pop
mov
mov
push
mov
mov
and
and
scas
jmp
push
cmpb
jp
pop
ret
xchg
add
sbb
imul
lods
cli
into
test
lods
or
adc
xchg
jb
cmc
mov
xchg
test
ds
adc
ret
pop
shlb
fisttpll
inc
roll
sub
rclb
mov
xchg
clc
dec
push
repz
xor
les
inc
jnp
es
in
dec
jp
mov
cmp
add
pushf
or
fwait
or
cld
mov
es
cmp
xlat
loop
pop
jp
nop
movsl
int3
xor
mov
and
add
dec
mov
aas
sub
out
mov
cmc
pop
sarb
lea
sbb
dec
int
arpl
cmp
cmp
add
movsb
push
jns
cwtl
jae
stos
cmp
out
cmc
adc
or
and
jae
gs
dec
loop
pop
or
lahf
ljmp
stos
inc
sbb
insb
and
push
jmp
or
cmpsb
sub
fcompl
cmp
add
cld
adcl
shr
sbb
adc
sbb
or
adc
test
inc
adc
in
movsl
shrl
loopne
mov
mov
jp
jle
push
imul
and
mov
pop
dec
mov
fcmovu
sbb
add
cmc
or
aaa
xor
in
adc
mov
and
lds
mov
adc
fsin
jg
je
cld
icebp
add
and
xchg
test
xchg
jbe
jbe
out
add
std
pop
mov
scas
insl
ret
in
jp
scas
aam
jle
dec
mov
sbb
psllw
mov
dec
cmp
fnstsw
aam
fidivl
xchg
push
cmp
inc
xor
add
mov
pushf
test
jmp
bound
in
or
cli
xchg
ret
scas
mov
sbb
xchg
stc
js
jne
hlt
xchg
or
repz
push
jbe
aam
je
pop
mov
sbbl
cmpsb
lcall
popf
cmp
xor
fistpll
push
lret
and
or
leave
cld
jp
mov
sbb
push
or
add
or
movsb
stos
mov
lcall
inc
sub
mov
lds
leave
fsubrs
cmp
mov
inc
dec
mov
arpl
pop
addr16
adc
frstor
add
lods
gs
int
jmp
out
push
mov
jbe
jecxz
mov
cmp
push
arpl
cmpsl
mov
adc
push
sub
pop
call
fadds
stc
notl
mov
inc
jp
and
leave
insb
std
cmp
mov
mov
dec
popaw
xchg
dec
dec
sbb
xlat
dec
sbb
test
jmp
icebp
popa
add
jg
lods
daa
movsl
and
add
xchg
insb
iret
lds
cmp
aas
jg
mov
je
test
nopl
mov
jns
shl
mulb
mov
cmpsl
mov
mov
mov
mov
add
hlt
jb
pop
dec
mov
push
imul
arpl
in
divl
pop
and
pop
roll
sub
mov
jge
scas
sbb
ja
jge
movsb
xchg
arpl
popa
sbbl
jno
fcompl
js
cmc
and
imul
cmpl
movsb
xor
jae
mov
int
aaa
mov
and
jo
lcall
inc
loop
or
aas
cwtl
jg
iret
fisttpll
and
movsl
push
imulb
add
push
fnsave
sub
int
cltd
push
lcall
sete
xor
push
rorb
mov
push
inc
fs
jecxz
cmp
push
or
movsb
inc
inc
mov
in
mov
pushf
push
xor
or
xchg
mov
pop
test
xchg
leave
xchg
push
pop
mov
into
iret
lret
in
scas
fildll
cltd
ret
jns
mov
inc
xchg
loopne
jno
negl
scas
lret
inc
xchg
cmp
int
outsl
sub
pop
lret
xchg
test
mov
dec
mov
xor
imul
push
add
test
adc
dec
push
mov
mov
lods
cmp
push
xchg
mov
add
jo
adc
cmp
imul
cmp
jp
repz
call
loopne
or
enter
push
ss
dec
fldl
pminub
add
or
mov
lcall
xchg
popf
sub
lahf
mov
xor
jmp
cmp
push
or
add
add
inc
or
je
rclb
jne
insl
mov
ret
js
and
adc
js
cmp
imul
movsl
xor
ds
mov
cmc
xchg
mov
cmp
sbb
mov
pop
fisubrs
add
add
and
insl
loope
mov
add
jge
pop
add
inc
in
mov
leave
xchg
mov
jne
stc
fdivl
mov
movsb
call
das
fisttpll
sbb
or
repz
inc
sahf
jbe
es
mov
dec
mov
mov
or
push
ror
inc
xrelease
cmpsb
push
sub
adc
jnp
jg
inc
mov
adc
jae
test
dec
push
shr
cmp
mov
cmp
nop
push
push
cmp
gs
push
cmp
imul
jae
mov
pop
mov
push
jb
push
mov
pop
shr
mov
jge
push
xchg
add
in
outsl
lcall
nop
mov
mov
jnp
mov
xchg
stos
xchg
xchg
pop
mov
hlt
sarl
cltd
mov
out
or
rcll
js
sub
xchg
out
mov
lret
mov
or
inc
push
mov
scas
cwtl
testl
jo
cmp
inc
pop
aas
mov
sub
fnstenv
dec
xor
lret
mov
xchg
icebp
push
push
push
or
sar
pop
jne
xchg
mov
mov
push
and
pop
dec
mov
mov
push
jbe
js
stos
cmp
pusha
jg
inc
mov
lret
adc
aaa
adc
pop
jb
outsl
push
push
dec
fwait
and
aaa
loop
sub
mov
xchg
lods
sub
je
cmp
jnp
jmp
mov
ljmp
adc
add
jmp
lahf
enter
int
jl
sbb
dec
sub
imul
out
xchg
in
pushf
mov
test
out
adc
jg
dec
sbb
sti
mov
xor
es
jmp
xor
roll
pushf
mov
mov
clc
pushf
cmp
or
insl
cs
push
decb
icebp
movsl
orb
pop
add
ja
loop
cmp
inc
insb
cmp
roll
cmp
xor
sub
cli
into
adc
insl
sbbb
and
cld
and
lds
mov
lods
push
js
shlb
sbb
mov
jecxz
add
dec
aaa
sub
mov
daa
push
mov
jmp
mov
cmp
jb
push
les
test
jmp
fdivs
jno
adc
repnz
or
jl
add
jmp
subb
jecxz
sub
arpl
ds
aaa
add
into
sbb
xor
push
repnz
js
outsb
je
xchg
jmp
fisttpl
jg
cltd
cmpsl
sub
push
es
rorl
cmp
divl
mov
imul
cmpsb
adc
les
pop
aaa
adc
dec
dec
test
dec
bound
test
jnp
fidivrs
stos
icebp
and
jne
lods
jne
repnz
lods
sub
cld
mov
fs
ds
cltd
cmc
insl
pop
mov
jg
shll
ret
arpl
xchg
loop
or
test
je
xchg
scas
jno
inc
lcall
hlt
popf
or
mov
dec
lods
call
cmpsl
outsb
mov
ret
jg
cmp
or
xor
xchg
cs
ds
neg
jmp
and
mov
shll
pop
fwait
stos
cmp
and
sub
push
inc
fadds
lea
stc
push
xchg
inc
mov
repz
out
dec
js
mov
fmuls
sub
popl
xchg
out
ficomps
cld
rorl
loope
inc
sbb
mov
cmp
int3
jb
in
pop
xchg
clc
dec
test
xchg
iret
dec
xchg
icebp
or
out
int
adcl
mov
push
and
pop
inc
mov
pop
sub
or
jmp
das
jb
push
mov
icebp
aas
insb
add
jne
cmc
and
or
dec
push
loop
add
adc
test
sbb
sub
mov
xchg
cwtl
repnz
jno
inc
lods
cs
add
rcrl
scas
fiadds
pop
xor
pop
ljmp
push
outsl
fldcw
out
sti
mov
iret
and
rcl
bound
add
std
xor
bound
or
mov
enter
out
xorl
int
xchg
sbb
ja
push
mov
mov
mov
rorb
std
fs
inc
cmp
rcll
and
or
push
mov
or
mov
sub
add
cli
ss
fwait
int
outsl
bound
mov
int
ds
stos
sub
jl
pop
fidivl
xor
repz
or
sarb
dec
es
cmp
incl
fs
aad
inc
jae
mov
sbb
mov
rcll
in
cmp
in
pop
push
out
push
sub
shll
xor
ficompl
mov
xor
inc
shlb
push
fcompl
mov
or
insb
popf
and
je
nop
mov
mov
mov
cmpsb
xchg
pop
pop
mov
and
lahf
sub
scas
jmp
xlat
enter
or
and
mov
aam
repz
sub
sbb
mov
enter
imul
inc
jg
cmc
jnp
das
movsb
lds
sub
lods
push
sub
push
mov
scas
out
popf
rcrl
scas
shll
aad
xchg
pop
ret
cli
nop
mov
xchg
push
lret
arpl
stos
add
cmpsl
inc
push
add
mov
inc
adc
mov
xchg
lea
decl
sub
adc
in
push
xorl
in
sbb
into
fucom
imul
push
scas
fmull
out
jbe
add
bound
inc
dec
repnz
cltd
mov
xchg
mov
pop
mov
xor
xlat
into
sub
sub
sbb
dec
mov
adc
mov
jae
aaa
jns
inc
pop
fidivs
mov
ljmp
out
push
inc
adc
inc
roll
mov
es
xchg
mov
or
fcomi
cmpsb
add
jae
stos
lods
adc
xchg
mov
lret
cmp
inc
mov
cmpsl
stc
dec
out
jl
es
jnp
ret
mov
jecxz
cmc
je
adc
add
lock
js
loope
stos
lds
mov
icebp
fsubrp
fsubs
adc
in
adc
adc
testl
cmp
lahf
inc
sub
lock
imul
pop
mov
push
addl
aaa
jg
or
mov
imul
std
nop
xchg
jge
test
cli
lret
test
lcall
pusha
call
mov
mov
loopne
mov
arpl
fistpl
leave
push
sbb
int
xor
sahf
dec
adc
dec
and
nop
mov
fldenv
jbe
scas
and
mov
popf
sbb
sub
fldcw
jbe
cltd
outsb
adc
imul
lods
int3
push
aaa
push
nop
add
pop
pop
mov
sti
add
xor
insl
sub
push
ljmp
in
outsl
sti
out
xor
sbb
or
data16
outsl
test
js
sbb
lret
jbe
loope
dec
ja
cmp
mov
enter
negl
jecxz
xlat
push
loopne
cmpsl
pop
stos
cmpl
and
js
or
cli
push
aam
out
sub
push
aam
sti
repnz
and
mov
fs
xchg
pushf
in
mov
dec
mov
sub
mov
scas
inc
in
jle
mov
decb
push
leave
mov
xchg
push
push
lret
clc
or
adc
pop
cmpsl
jp
mov
pop
icebp
enter
cmc
and
xchg
daa
jb
dec
mov
icebp
jbe
push
leave
push
mov
cmpsl
sub
jns
push
fimuls
adc
mov
arpl
loop
daa
mov
bnd
xor
mov
fdivp
push
sahf
xor
and
loopne
and
divl
mov
adc
mov
jns
insl
adc
mov
dec
mov
mov
adc
add
inc
sti
les
flds
insl
in
stos
xor
das
sub
xchg
aad
stc
add
or
loopne
int
xchg
lcall
adc
je
push
push
adc
pop
leave
stos
cmp
ja
jl
cld
jbe
shll
mov
cmp
xchg
mov
loopne
jno
jg
jge
arpl
sub
and
fistpll
and
imul
out
mov
push
stos
or
mov
out
sbb
or
rcll
movsl
xchg
push
lock
or
ret
inc
int
mov
xor
and
cltd
js
outsb
and
out
pop
sbb
fistl
and
mov
xchg
popf
sub
push
cs
mov
jae
jns
push
adc
xchg
addl
aam
pop
add
pop
add
shll
repz
xchg
inc
sbb
push
loopne
add
scas
mov
int
xchg
scas
nop
jecxz
into
arpl
mov
ss
and
pop
pop
fwait
pop
cmp
cmpsb
xorb
add
sbb
dec
mov
inc
jne
lock
jne
or
pop
mov
mov
test
in
or
cmpsb
add
frstor
cwtl
inc
jo
or
sbb
push
addr16
in
and
sbb
pushf
xchg
xchg
push
flds
dec
jns
sub
xor
fs
mov
out
mov
add
ret
ret
fmuls
in
gs
add
jno
xlat
out
xor
test
data16
shll
nop
jmp
adc
cmp
ret
mov
fldt
ljmp
loope
loope
icebp
in
jns
mov
into
movsl
outsl
sarb
ljmp
fsts
mov
jp
pop
lods
push
sub
mov
add
ret
mov
rcll
nop
popa
scas
pop
mov
inc
cmp
je
pop
pop
xor
insb
inc
out
dec
ss
addr16
and
leave
in
add
push
sbb
dec
fistpll
xor
dec
pop
and
test
push
mov
fstpl
xchg
cmpb
dec
lret
pop
out
fldcw
repz
leave
ja
jle
adc
test
mov
add
outsl
cmc
test
mov
lret
xor
addl
imul
ss
nop
stc
stos
cli
lret
jb
fwait
lret
aam
lahf
or
add
inc
mov
xchg
cmc
inc
mov
ret
sbb
jb
scas
out
jo
lods
sub
mov
sbb
cmpsb
loop
rcll
sbb
mov
sti
jl
lcall
add
xor
out
nop
inc
add
cmp
popa
sbb
fwait
iret
cltd
clc
or
fucomi
and
mov
aad
scas
xchg
popf
or
iret
inc
jns
imul
in
pop
mov
mov
gs
adc
insb
push
push
not
testb
fmull
push
shlb
int
pushf
and
ds
js
fs
mov
lds
es
pop
add
repnz
or
cmc
jbe
xchg
cmpsb
icebp
jecxz
lret
mov
cs
std
add
notl
test
cmpsb
fisttps
in
jle
xor
sbb
xor
and
push
mov
xor
pushf
rolb
and
loopne
mov
push
dec
cmp
mulb
bound
mov
idivl
addr16
enter
mov
jae
or
mov
sbb
and
lret
das
test
into
ror
out
aaa
les
jge
test
mov
loopne
pop
and
cmp
pop
lret
mov
out
jo
cmp
out
in
mov
adc
mov
dec
lods
icebp
ljmp
push
enter
aas
dec
inc
insb
sti
adcl
setns
pop
jle
add
insb
push
inc
lea
arpl
pop
or
jnp
push
cwtl
mov
adc
gs
push
sub
inc
mov
mov
test
std
sub
xchg
jge
ss
out
cs
or
rcrl
aas
outsl
ret
loop
dec
and
nop
mov
mov
inc
jmp
and
movsb
lahf
mov
insb
pop
imul
jecxz
sub
add
mov
mov
mov
jnp
notb
stos
xchg
outsl
notl
xchg
push
jae
jo
dec
jae
jg
fsts
jb
cmp
cmpb
scas
lret
in
fildl
je
imul
aad
ljmp
push
push
inc
dec
add
int3
mov
mov
add
stos
mov
ficoml
out
mov
ret
mov
aad
jl
xor
lds
enter
xchg
adc
and
jecxz
or
loope
xor
sub
xchg
lret
pusha
push
ja
enter
mov
rclb
xchg
mov
ljmp
inc
rsm
push
xor
cmp
lcall
xlat
ljmp
movsl
lcall
addr16
lahf
scas
dec
adc
jns
jb
mov
sbb
pop
mov
movsl
out
and
adc
xchg
pop
adc
fmul
ss
jl
xor
dec
or
es
mov
xlat
adc
addr16
repz
fimuls
jl
add
fstps
popa
mov
inc
sahf
nop
lahf
sub
stos
sbb
mov
imul
out
xchg
jg
sub
or
mov
lcall
movsb
push
mov
push
jg
add
ljmp
inc
shlb
adc
jp
adc
imul
sti
fldt
xchg
lods
imul
cwtl
dec
or
mov
adc
inc
mov
add
pop
mov
push
sbb
xor
icebp
je
mov
add
stc
xor
imul
int
adc
cmp
and
and
sub
jne
lods
dec
js
into
push
js
rorb
lret
pop
ficoms
mov
adc
leave
jb
add
sbb
jne
pop
stos
popa
sti
stos
in
mov
jbe
in
inc
cmp
mov
mov
cmp
xchg
scas
sub
test
adc
pop
dec
adc
cmpsl
add
dec
xor
mov
popa
pop
sub
add
or
sarl
mov
outsl
outsb
out
inc
mov
sub
popl
dec
xchg
in
lock
enter
push
mov
lret
or
push
mov
movsb
xchg
xor
sub
jbe
lret
jbe
dec
cld
fcmovnb
sub
jecxz
xchg
popa
fnsave
js
leave
dec
cmc
xchg
ss
mov
repz
pop
sarl
das
fiaddl
in
into
nop
leave
pop
xchg
mov
jle
sub
std
or
sar
push
jecxz
test
out
add
scas
sbb
outsb
mov
pop
lea
jle
dec
data16
cmp
mov
orl
xor
pop
sbb
leave
sub
testl
scas
xor
loope
jno
sbb
jle
in
lea
push
rcr
dec
lock
adcb
in
jp
movsb
xchg
sti
iret
in
adc
jl
scas
push
movsl
mov
nop
test
cmp
jne
sbb
loopne
jmp
jg
aas
cmp
mulb
add
jmp
jle
loop
mov
xchg
sub
lret
outsb
nop
cld
pop
mov
jecxz
cmpsb
call
scas
ss
xchg
or
and
and
daa
jecxz
push
dec
lcall
inc
addr16
rolb
scas
adc
cld
mov
mov
dec
dec
aaa
aas
xchg
mov
imul
jno
in
sbb
arpl
dec
pop
mov
pop
push
inc
jle
jo
jbe
sub
popa
cli
fldenv
xchg
in
jb
sti
fdivrl
scas
fidivrl
sbb
stc
loop
push
dec
inc
mov
mov
mov
xor
pop
shll
mov
out
mov
xchg
rolb
dec
mov
lret
xchg
and
and
sar
push
jbe
into
bound
push
call
loop
loope
cvttps2pi
out
add
test
xchg
jg
mov
lods
jb
out
xchg
add
xchg
pushf
gs
test
cltd
stos
cmp
out
sbb
aaa
cmp
inc
das
xchg
or
inc
adc
out
dec
inc
jns
dec
mov
cmp
pop
push
mov
pop
cmp
mov
sub
inc
scas
mov
xor
lret
xchg
push
insb
cmpsb
je
imul
push
lock
add
jo
mov
add
sar
clc
jae
pop
stos
ljmp
lret
insb
fildll
push
int3
in
sahf
loopne
into
fldl
adc
adc
ret
sbb
subb
jl
jno
rcr
aas
sub
xchg
xchg
cmpsb
pop
jmp
sbb
dec
and
fwait
mov
or
jb
sub
call
lods
cld
sbb
addl
jne
scas
dec
les
and
cmp
mov
outsl
sub
fidivs
jb
test
mov
repnz
nop
xlat
xchg
insb
fistps
enter
dec
dec
divb
adcb
ret
insl
jbe
arpl
sub
mov
data16
pop
cmp
fwait
aas
xchg
add
lock
cmp
mov
dec
arpl
dec
repnz
pusha
fidivs
add
lret
repz
js
icebp
jle
arpl
xchg
lds
test
ret
jb
xor
fbstp
mov
fistl
lret
mov
xorb
xor
test
scas
mov
stos
jmp
mov
jb
pop
or
jg
lahf
sbb
xlat
adc
insl
jo
int3
loopne
cmp
xor
xlat
sub
sub
cmpsb
ss
add
in
push
xchg
movsl
inc
jnp
sub
mov
jmp
sbb
inc
mov
inc
pushf
loope
lret
mov
and
cmpsl
push
shlb
movsb
test
rol
or
mov
mov
cmp
add
push
xchg
sub
cmc
mov
sub
jp
and
adc
sbb
imul
push
pop
das
mov
call
aas
lcall
adc
or
push
adc
sub
fwait
cmp
cmc
mov
vpsllw
leave
pop
pop
sbb
cmpsb
and
mov
mov
add
mov
popf
fistl
xlat
inc
jns
out
pop
mov
cmp
outsl
sub
inc
imul
inc
jmp
rorb
sbb
dec
add
inc
adc
into
pop
add
dec
xchg
test
test
aad
jp
shlb
rclb
out
push
out
mov
or
arpl
dec
sbb
dec
mov
inc
in
adc
push
sbb
xchg
sbb
jge
or
mov
les
mov
mov
enter
xorl
xor
cmp
mov
mov
fdivl
arpl
inc
push
xchg
stos
xor
xor
in
lock
in
jnp
cld
test
movsl
push
stc
mov
adc
push
es
xor
scas
and
adc
aam
fistl
adc
push
xor
stos
test
jbe
push
lcall
insl
insl
je
js
ret
push
or
pop
fimuls
mov
out
sbb
rorl
leave
push
xchg
hlt
test
fadds
notb
jns
jg
mov
mov
dec
movsb
mov
add
inc
push
pushf
sbb
out
fucomi
pop
fmuls
jl
mov
xor
jb
mov
dec
mov
pop
sbb
cli
adc
or
aas
clc
xchg
mov
mov
bound
orl
dec
es
scas
add
aam
inc
fcmovne
sub
xchg
rcll
insl
mov
aas
pop
cmp
out
jge,pn
xor
rol
das
add
movsb
ja
movsl
inc
inc
mov
mov
and
clc
push
pop
cwtl
pusha
adc
mov
icebp
sbb
outsl
push
mov
jge
data16
cmp
add
push
mov
adc
insl
repz
dec
ds
xchg
icebp
cmp
mov
imul
mov
jecxz
sub
jne
dec
or
js
push
loope
and
mov
push
add
mov
mov
push
mov
iretw
les
fistpl
dec
int3
lret
and
pop
pop
icebp
jg
xchg
int3
xor
vmread
sbbl
orl
add
stc
aaa
ret
add
into
pop
add
add
mov
gs
fmull
sub
imul
adc
testb
imul
jbe
dec
push
daa
stos
test
jno
aam
stos
xchg
pop
mov
adc
or
sbb
fcoms
dec
leave
mov
cmp
imul
cs
addr16
and
xchg
xorl
lock
mov
popf
mov
or
ljmp
mov
jo
cmp
movsl
xor
or
fcoms
jnp
arpl
pop
push
cmp
adc
pop
xchg
xchg
adc
insb
imulb
outsl
cmpsb
sbb
and
aas
mov
push
xchg
lods
leave
mov
jbe
cmc
push
jge
fidivs
out
jp
or
mov
ljmp
insl
adc
cli
pop
test
not
into
or
cmp
in
popa
cwtl
jle
gs
or
movb
test
repnz
xor
mov
fs
popf
push
pop
dec
mov
mov
call
sbb
mov
es
popf
dec
addr16
jno
repz
or
aas
xor
xchg
mov
pop
push
pushf
xchg
jge
sbb
popa
mov
gs
mov
imul
loopne
or
inc
xchg
pop
inc
cs
out
movsb
repnz
mov
dec
loope
xor
mov
cmc
std
jns
dec
inc
insl
fwait
sbb
fcomp
js
inc
dec
call
out
lret
mov
std
sub
inc
mov
arpl
test
dec
add
xor
enter
cmp
mov
call
call
jb,pn
popf
and
movl
lds
movsl
subl
pop
or
cmp
inc
dec
iret
pop
test
push
call
out
hlt
ss
cmp
dec
es
std
sar
jo
lea
jmp
movsb
data16
dec
jb
jne
ret
cli
push
and
dec
cld
xchg
lock
lock
xchg
mov
xchg
jecxz
jo
scas
arpl
cltd
xchg
data16
imul
ljmp
icebp
sti
push
arpl
loopne
mov
mov
sub
mov
or
aaa
jo
imul
add
adc
std
les
or
aas
aam
xchg
sub
rorb
and
subl
xchg
mov
mov
or
mov
jecxz
not
out
jmp
cld
shl
test
cmp
and
or
mov
dec
add
xlat
test
stos
out
mov
jno
xlat
pop
mov
je
sbbb
or
jle
movsb
fwait
cwtl
sub
js
jb
jbe
inc
dec
movsb
test
mov
ljmp
rcr
out
mov
imul
sub
cmc
insl
in
or
test
mov
inc
adc
sbb
adc
dec
stc
mov
repz
cmp
pop
cmp
cld
jge
inc
mov
stos
fucomp
int
sbb
jmp
pusha
mov
testl
das
outsb
cmp
cltd
nop
mov
and
int
je
inc
rolb
dec
outsb
mov
sub
cmp
mov
adc
mov
lret
gs
add
je
mov
scas
sub
adc
mov
dec
test
in
cmp
rolb
cmpsb
cwtl
movsl
shl
push
loop
ds
xchg
push
ret
push
data16
push
cmp
into
mov
and
pop
cltd
insl
inc
leave
jno
add
repnz
or
and
push
pop
jns
leave
stos
in
stos
push
fwait
pop
addr16
int3
fcoms
add
sbb
mov
out
cld
es
addr16
jb
inc
mov
pop
cmp
xchg
xor
inc
ja
aam
mov
scas
xchg
jae
cmp
cld
and
mov
in
cwtl
bound
fimull
int3
leave
cmpsb
pop
mov
or
jnp
insl
xchg
leave
into
fcomps
and
inc
jl
idivl
cmp
ja
and
sub
pop
cmp
add
pop
inc
adc
or
push
mov
fistps
xlat
or
or
push
lods
decl
push
mov
mov
xorb
lods
gs
aaa
sbb
or
fsubr
out
stos
dec
mov
jmp
pop
jnp
jnp
dec
loopne
icebp
shll
xlat
push
in
xor
sbb
push
mov
sbbb
inc
fcmovnb
sbb
fsubp
scas
jp
add
lods
adc
out
and
xchg
xor
push
imul
out
add
test
ja
push
imul
lcall
lods
cmpsb
jbe
mov
sub
adc
lods
push
repnz
shl
and
in
mov
test
push
push
dec
jnp
les
jbe
jns
jg
std
nop
repnz
adc
push
mov
add
fists
mov
xchg
mov
es
iret
scas
movl
jne
sbb
xchg
xchg
sti
mov
js
cmpsl
andb
sbb
push
cmp
push
push
stos
out
xchg
jne
lock
rcrb
imul
ss
push
push
xor
xor
shr
loop
fwait
xor
pop
jl
out
mov
xor
mulb
test
pop
loopne
pop
into
incl
or
pop
add
cmp
sbb
popf
cwtl
negb
mov
mov
int
repz
mov
je
mov
sbb
or
ret
xchg
ficompl
xor
or
sti
push
nop
push
sarb
jne
xor
cs
scas
les
xchg
stos
movsb
mov
decb
orl
outsb
jg
das
xchg
les
sub
inc
adc
push
pop
cmp
das
stc
and
arpl
xor
xor
cmp
pop
mov
int3
lds
jo
insb
cwtl
shr
or
add
and
shll
jae
dec
sub
data16
out
push
cmpsb
cltd
test
sbb
lds
call
in
adc
mov
test
test
lods
add
and
inc
sbb
push
pop
cmp
into
shll
pop
je
xchg
pop
pop
cmp
incl
xor
xor
fnstsw
in
addb
xorl
dec
sub
dec
loop
jmp
or
leave
fidivrs
sub
imulb
mov
mov
test
dec
xor
pop
jle
mov
add
sub
in
push
lea
or
xchg
sub
fmull
push
call
jle
mov
dec
test
jle
es
sub
or
in
push
xchg
inc
sub
pop
loopne
or
scas
mov
adc
sub
add
cld
sub
xor
xchg
in
pop
imul
adc
xchg
test
push
cs
xor
jp
add
in
lahf
xchg
mov
pop
sub
pop
pop
lcall
jnp
push
adc
push
mov
push
push
decl
mov
js
enter
mov
inc
pop
in
lcall
insl
in
adc
lret
adc
pop
push
xchg
mov
nop
jmp
shlb
adc
and
loopne
or
hlt
insl
or
jle
push
pop
xchg
mov
mov
je
jbe
xchg
idiv
imul
decl
push
roll
cmp
pop
xor
dec
lret
inc
cltd
movsl
lds
push
sahf
lahf
movsb
mov
sub
xchg
xchg
mov
int3
add
sub
mov
pop
pop
push
mov
pop
and
adc
imul
dec
data16
and
inc
ror
in
aaa
cmc
jle
cwtl
notl
outsb
inc
xor
lods
or
enter
repz
mov
add
inc
inc
mov
fbld
in
cs
and
outsl
push
lods
dec
jae
lahf
inc
mov
or
and
pushf
jp
push
or
aas
adc
cmp
add
and
lods
aas
es
add
inc
pop
or
push
sbb
add
ja
adc
jge
xor
fidivrs
or
lcall
xor
lret
mov
adc
or
mov
insb
lods
dec
ret
mov
push
adc
das
xor
in
fdivr
popf
fists
jg
jbe
das
loop
lods
pushf
mov
scas
xchg
les
add
aam
or
cmp
mov
rcr
cs
fistl
mov
jp
jns
shl
je
ret
dec
movsl
push
sbbb
ret
inc
dec
leave
add
jo
dec
or
in
fldlg2
ret
xor
xor
loopne
mov
cmp
mov
gs
cmp
fwait
mov
insl
jae
faddp
loope
jl
int
sahf
xchg
dec
xchg
mov
jo
cli
ds
test
or
xor
sbb
inc
call
inc
enter
mov
sbb
rolb
xchg
mov
sbb
lds
mov
xchg
jne
iret
addr16
and
cmp
ficomps
and
pop
test
aas
ret
lock
ret
fdivr
dec
inc
pop
ljmp
lods
push
dec
sub
jbe
mov
loope
push
popa
outsl
jne
lods
jecxz
in
mov
cs
andl
add
push
loop
push
mov
gs
in
scas
mov
sbb
mov
cmp
or
pop
cli
jns
cmp
out
inc
add
xchg
cmp
ret
mov
or
sub
testl
loop
fwait
sub
jmp
daa
xor
aaa
mov
in
push
push
call
pop
addr16
mov
sbb
loopne
mov
push
add
mov
mov
pop
push
cmp
jae
mov
xchg
in
push
add
push
and
add
sub
fiadds
scas
mov
int3
cmp
mov
cmp
fdivrl
xchg
sub
repz
lock
and
sub
mov
fisttps
fucom
shrb
jb
addr16
or
std
mov
iret
cltd
mov
mov
xlat
inc
cmp
mov
inc
pop
ret
add
in
in
idivl
outsl
cld
fcoms
dec
popa
popa
push
scas
sbb
stc
sub
mov
pop
cmpsb
adc
mov
stos
ja
sbb
fbld
sbb
or
lds
in
rcl
xchg
xor
mov
lds
push
jg
hlt
mov
ret
loope
and
iret
int
pop
into
sti
lods
ret
push
cwtl
pop
mov
outsb
mov
loope
test
jg
outsl
daa
jmp
imul
rol
ret
push
pop
scas
dec
sbb
aad
mov
dec
pop
xchg
inc
ds
sub
pop
push
fs
fcoms
aad
test
xchg
movsl
adc
aas
mov
iret
aaa
jmp
jg
sub
cmp
lods
aad
lods
data16
lods
imul
sbb
insl
into
out
jnp
mov
rclb
rorb
push
push
and
dec
imul
and
je
adc
fiaddl
xchg
aad
stos
in
push
pusha
shrl
push
and
cmpsb
shl
mov
test
jle
or
inc
jmp
xchg
xchg
xchg
jnp,pt
testl
pop
mov
lods
xchg
insl
dec
inc
clc
sbb
outsb
movsl
iret
mov
inc
xlat
rclb
popa
pop
jb
push
and
mov
dec
and
pop
iret
divl
jo
stos
jns
fidivl
jne
lahf
movsb
bound
es
pop
inc
inc
scas
jns
int
scas
inc
jnp
or
stos
pushf
cmpb
jnp
outsb
sahf
repnz
lret
cmc
ffreep
pop
out
push
pop
jecxz
pusha
sbb
push
cltd
push
sbb
sub
lcall
pop
pop
jne
push
mov
jp
negl
add
sbb
loop
pop
push
stos
or
cmpsl
sub
stos
mov
movsb
sub
xor
rorl
xlat
and
pop
and
shl
popa
test
and
dec
inc
xor
fwait
and
fcoml
bound
mov
aaa
cld
push
ret
sar
mov
sar
popa
cwtl
je
jmp
ja
fisubrl
pushf
jne
adc
xor
add
or
dec
mov
push
nop
lea
mov
jle
sar
mov
adc
std
loop
int3
ret
inc
inc
xor
stc
int3
mov
fucomi
xor
out
lods
aas
inc
mov
inc
sub
fmuls
xchg
ret
sbb
xchg
stos
in
std
push
jo
lea
aaa
or
loop
stos
mov
or
in
daa
shll
int
leave
push
arpl
popf
pusha
insl
inc
inc
lret
inc
xchg
sbb
out
repnz
push
push
inc
or
mov
or
in
pop
mov
fsubr
xor
push
sbb
push
fs
fs
sbb
or
adc
insl
add
mov
loopne
out
xchg
out
daa
clc
sbb
ja
pushf
mov
mov
or
cmp
into
pop
mov
dec
insb
rclb
in
jle
xchg
div
out
push
cmp
xchg
lods
sbb
out
fnstsw
pop
adc
fs
pop
pop
sub
xlat
cmp
test
add
sub
push
push
neg
inc
or
paddsb
adc
pop
jae
fcoml
xchg
je
in
cmpb
push
pop
fldenv
adc
scas
jmp
fbstp
int
mov
mov
popf
mov
mov
int
mov
cmp
xor
adc
sbb
stos
call
cld
push
cmp
fnstenv
mov
je
dec
adc
popa
pushaw
daa
in
ljmp
dec
mov
lea
cmp
inc
dec
cmc
test
mov
test
rcrb
imul
fldln2
int
fstpl
ret
ret
insb
ljmp
insl
test
cmpb
xor
xlat
inc
push
xchg
mov
fs
mov
push
jo
push
jae
test
movsb
sub
insb
push
out
das
cli
addl
shll
mov
mov
in
cwtl
stos
or
xchg
xchg
xchg
stos
cli
mov
mov
lret
dec
lods
xor
add
imul
test
rcll
mov
cmp
cli
sub
mov
outsl
aas
repnz
fsubrl
jns
leave
enter
inc
mov
mov
lods
xchg
and
push
or
mov
cld
sbbl
jp
cmpsl
in
gs
testl
stos
add
adc
pop
divl
cmp
int3
fiadds
xchg
inc
or
dec
pause
test
std
jns
adc
add
dec
gs
mov
add
repnz
out
es
sbb
dec
pop
outsb
cwtl
mov
xchg
dec
js
jge
pop
jnp
xor
insl
or
nop
mov
push
xchg
mov
inc
mov
das
jmp
aas
xchg
push
mov
pop
ljmp
push
sub
sar
test
clc
dec
scas
jmp
ds
decl
pop
addr16
sub
popa
iret
sub
adcl
pop
rolb
xor
loope
stos
sbb
ljmp
mov
pop
cwtl
sbb
outsb
stc
icebp
pop
push
xchg
cmp
push
ds
push
push
clc
mov
outsl
sahf
xor
add
or
dec
fisttps
outsl
in
imulb
mov
jle
inc
xchg
and
popa
es
sub
std
cld
in
or
pop
pop
or
loop
jne
out
xchg
pop
clc
mov
dec
cld
jge
icebp
mov
iret
cmp
mov
lret
sub
pop
jl
xor
pusha
xchg
push
xlat
fidivrs
push
mov
lret
mov
loop
insb
xchg
inc
jg
hlt
aaa
mov
pop
pxor
mov
and
push
pop
inc
loopne
in
loope
roll
pop
cli
bound
mov
testb
inc
add
clc
mov
rcr
sub
aas
pushf
mov
dec
out
sbb
rcrb
out
pop
and
icebp
or
mov
notb
pushf
add
jecxz
jle
pop
cmovg
imul
cwtl
mov
fsubrs
inc
mov
cmp
add
jecxz
je
ffree
bnd
sub
push
test
add
ret
push
sub
lds
lock
mov
and
adc
add
pop
sub
stos
or
insl
out
repnz
mov
call
mov
jae
jne
inc
add
addl
scas
xchg
mov
xchg
in
mov
in
test
xor
pusha
adcb
inc
call
and
shrl
push
adc
push
adc
ja
push
shlb
mov
adc
xorl
inc
mov
cmp
data16
out
xor
inc
pop
xchg
cmp
shrl
insb
jno
xchg
into
mov
stos
ss
dec
pop
repnz
dec
ret
xor
and
mov
rorl
push
or
addr16
mov
pop
push
enter
mov
push
jg
inc
out
stc
adc
loop
jb
stos
dec
adc
lea
xchg
and
sub
push
in
and
imull
in
movl
cmp
or
dec
movsl
lods
adc
xor
lock
int3
adc
inc
lods
scas
lcall
cmp
jb
mov
dec
shlb
xor
push
cmpsb
out
xchg
outsl
sub
subl
push
sbb
in
push
pop
mov
bound
ret
push
std
mov
sbb
dec
dec
xchg
push
inc
aas
jg
pop
push
jecxz
call
jle
leave
frstor
mov
pop
push
xor
mov
adcb
add
test
xlat
push
mov
mov
ljmp
aad
mov
push
mov
lret
xor
jae
bound
mov
lahf
outsb
xchg
out
insb
enter
xchg
mov
pop
xor
insb
jmp
hlt
out
add
or
jp
xor
sti
data16
lret
shlb
aas
push
and
jae
je
cmp
ja
cli
sbb
xchg
outsb
fcompl
aam
xrelease
mov
mov
cmc
jg
jle
mov
ss
xchg
lods
fs
push
addr16
jo
mov
cltd
popf
cmp
mov
pushf
outsl
fsubrl
xchg
mov
lods
xchg
push
pop
mov
sbb
sub
pop
dec
andl
mov
ficomps
sbb
xor
in
repnz
shlb
adc
mov
loope
sub
leave
dec
cmpsb
adc
xor
inc
mov
inc
loopne
jp
into
add
decb
pop
add
loopne
rorl
pop
inc
mov
inc
xchg
movsb
dec
das
push
pop
inc
push
xor
jg
mov
xchg
imul
inc
mov
repz
sbb
mov
push
jl
es
fcom
repz
jl
movsb
aas
fptan
test
mov
jle
shrl
xchg
push
cli
or
dec
es
add
loope
adc
and
mov
dec
xor
pop
mov
pop
pop
fiaddl
in
xchg
cmp
cld
lods
push
ficoml
push
push
sub
lods
mov
sbb
jns
sbb
fists
xor
insb
cmpsb
cmp
lahf
xor
loope
xchg
adc
mov
jg
repnz
pop
movsl
movsl
push
mov
push
add
cmp
and
lds
add
cld
and
dec
sbb
cmp
lods
outsb
adc
enter
aas
fcomi
std
fsubl
out
iret
adc
pop
or
mov
sub
or
adc
clc
clc
stos
insl
clc
leave
mov
ret
mov
gs
dec
int
sbb
ds
jo
mov
les
cmc
into
movb
sar
popf
cli
sbb
mov
mov
xor
adc
lds
sbb
push
xor
or
dec
jge
test
dec
mov
push
out
std
push
and
mov
movsl
mov
into
mov
rcll
sub
cmp
inc
gs
push
sub
out
jl
les
xor
xchg
push
iret
cs
xor
jnp
pusha
sub
pop
adc
cmp
iret
xchg
mov
and
and
out
and
imul
fisubl
es
clc
or
pop
xor
iret
cmpsl
push
insl
or
hlt
loope
xor
or
and
dec
mov
mov
or
cmpsl
cmp
xchg
cmp
loop
test
pusha
out
rorl
cmp
sbb
scas
inc
push
and
addl
or
hlt
adc
push
add
loop
movsl
xchg
mov
inc
repnz
jbe
aad
repnz
xchg
orb
sbb
sub
xorb
subb
jle
je
mov
das
sbb
mov
mov
push
sub
insb
inc
pop
scas
push
mov
aaa
iret
push
aam
test
cltd
pushf
sub
int3
int
or
sbb
or
icebp
adc
std
hlt
cmp
mov
mulb
out
lcall
fisttpl
push
ret
xor
or
and
mov
inc
inc
and
pusha
ss
mov
sub
ja
and
mov
sub
cmp
cmpsb
jg
pop
and
pushf
les
pop
xchg
cwtl
scas
push
jne
cmp
mov
test
cltd
add
inc
and
pusha
and
jno
fadd
push
mov
jp
and
aas
pop
mov
mov
mov
out
xor
push
add
or
hlt
pop
jg
cmp
jns
fdivrl
jnp
sub
xchg
faddp
mov
pusha
or
roll
ret
fmuls
mov
mov
sarl
ret
mov
xchg
xor
mov
cmp
iret
xchg
ret
xor
or
pop
add
andb
sub
sahf
cltd
clc
pusha
cltd
leave
inc
mov
sub
add
std
hlt
inc
inc
adcl
loope
cmp
jge
or
cmp
pop
lcall
mov
xchg
imul
loopne
cmp
xorl
and
jl
or
pop
cld
mov
and
sub
xor
lret
int3
push
push
jbe
xchg
jmp
fstpt
cmpsl
sarb
xor
xor
inc
jg
cmpsb
adc
das
mov
test
repz
push
js
push
add
cmp
data16
push
aas
push
imulb
mov
daa
mov
jle
mov
jbe
xchg
mov
adc
stos
ret
fildll
pop
adc
push
data16
fstps
iret
or
clc
in
sub
inc
test
inc
mov
adc
xor
and
hlt
adc
dec
hlt
aaa
dec
xchg
lahf
idivb
and
shlb
testl
pushf
test
out
test
sbb
fdivl
mov
into
daa
fistpl
mov
cmp
jbe
sub
lret
jne
stos
orb
dec
inc
add
pusha
mov
les
mov
popa
pop
mov
fldenv
jp,pt
jns
inc
test
fdivrl
sbb
xchg
out
xchg
dec
jae
jle
test
sbb
jl
inc
xchg
sub
les
in
xlat
sub
cmp
xlat
frstor
fnstsw
mov
cltd
push
push
sbb
test
sbb
pop
pop
pop
fsubrl
aaa
mov
or
sarl
fimull
lret
xor
cltd
xchg
cmp
push
test
jns
mov
pop
outsl
mov
pusha
repnz
gs
and
mov
jmp
ret
push
scas
test
inc
mov
and
jne
or
mov
xchg
push
pop
mov
jle
popa
mov
pop
sti
or
mov
sub
arpl
jp
cwtl
pop
pop
add
repnz
inc
sub
sti
or
pop
in
loop
sub
sub
gs
sbb
aam
mov
leave
fs
fistpl
aas
out
jno
jnp
xor
and
sub
jmp
jbe
loop
sub
ja
or
cmp
pop
xor
fsubr
jbe
push
mov
mov
cmp
sbb
pop
js
inc
pop
mov
mov
or
fidivrs
inc
jmp
mov
or
cmp
adc
jg
loope
dec
mov
iret
rcrb
push
sub
mov
mov
mov
cmpsb
ss
loop
adc
jbe
push
scas
adcb
scas
mov
xor
push
sahf
sub
data16
dec
mov
cmp
add
ret
je
mov
push
int
addl
jo
sub
inc
sbb
push
pop
pushf
rcr
cmp
mov
or
or
and
mov
rcpps
into
mov
mov
xchg
in
mov
xor
outsb
jge
rolb
cmp
lret
gs
and
mov
pop
clc
cli
pop
xor
push
mov
lcall
add
das
addr16
out
mov
lcall
fwait
mov
fldenv
stos
ss
sbb
dec
inc
cmp
mov
push
push
xor
fwait
push
das
or
fsubs
sub
xchg
insb
adc
jge
stc
and
js
bound
mov
pop
mov
test
fldcw
fnstsw
or
add
xchg
sub
iret
jg
outsb
cmp
call
cwtl
out
fistpll
dec
mov
lock
mov
dec
dec
mov
lods
mov
or
mov
and
mov
sub
jecxz
sub
subb
cli
push
dec
movsl
jns
loop
pop
lea
jb
test
adc
loopne
inc
sbb
mov
push
push
xchg
loope
add
sbb
aas
mov
push
jae
imul
dec
xor
pop
xor
push
push
mov
push
push
int
push
bound
jne
jae
fildll
movsb
dec
adc
cmp
inc
cmp
mov
mov
shlb
mov
xchg
movsl
sarb
pop
lret
imul
fstl
cmp
jmp
jbe
mov
xchg
gs
xlat
repnz
ret
or
push
jmp
loope
mov
mov
leave
sub
jae
adc
cmp
cmpsl
dec
cmpsb
sub
jmp
add
imul
xchg
insb
xchg
pop
add
ret
cmpsl
test
mov
inc
test
mov
cmp
push
iret
inc
stc
je
jg
inc
jg
add
xor
inc
jmp
mov
sub
jmp
adc
jg
stos
iret
bound
inc
jnp
inc
scas
pop
imul
cmpb
mov
adc
hlt
out
aaa
cli
movsb
jge
xor
aam
add
std
sbb
dec
popf
popa
sbb
sbb
pop
adc
and
outsb
push
pop
jno
ja
adc
inc
pop
sub
pop
fisubrl
inc
mov
test
mov
pop
xlat
push
ret
cmp
mov
jno
call
inc
xchg
or
push
loopne
dec
xor
dec
inc
dec
cmpsl
in
sbb
lret
rclb
pop
popa
into
cmc
addr16
scas
push
xor
cmp
enter
rcrl
mov
jg
push
mov
or
sbb
adc
insl
push
popa
dec
dec
xchg
scas
addb
mov
ja
dec
icebp
sbb
pop
sub
ret
fcomi
iret
cwtl
sub
jno
fnstsw
std
fiadds
test
pushf
fildll
or
frstor
iret
dec
sbb
and
test
sub
lahf
clc
mov
in
push
add
jl
jmp
loopne
fdiv
inc
es
fs
push
lret
sub
sti
add
pop
jl
out
movsl
pop
insb
mov
and
jbe
cltd
int3
shrl
aam
pop
push
rorb
fdivr
loopne
mov
nop
imul
cmc
mov
aaa
jg
test
mov
iret
fildl
add
lahf
int
mov
or
push
cmc
adc
sbb
xchg
pop
into
cmp
loopne
fnstcw
push
js
sbb
jne
jns
insl
cwtl
sub
push
jl
add
xchg
push
scas
cmc
rcr
lods
lahf
sub
adc
scas
jbe
sbb
sub
fstpl
in
mov
stos
adc
mov
sti
orl
ds
cs
lods
cltd
and
mov
in
adc
sbb
test
icebp
or
push
sub
scas
popf
fisubrl
out
mov
pop
insl
into
fwait
and
adc
dec
push
xchg
enter
out
mov
std
adc
movsl
mov
xchg
pop
ljmp
inc
lret
mov
pop
push
test
jbe
xor
mov
notb
adc
mov
xor
outsl
cld
jo
jae,pn
jl
jb
fs
fimull
dec
out
pop
insl
push
loope
xchg
nop
sub
iret
push
loop
adc
xchg
xchg
add
push
or
lret
cmp
mov
adc
sbb
out
and
push
pop
sti
in
pop
scas
notb
loop
fsubrl
jo
int
mov
xchg
add
pop
jp
sub
ror
imul
sub
out
nop
movsl
jno
sti
icebp
adc
mov
rol
jns
add
xor
repz
sbb
fwait
inc
fwait
xchg
in
les
fnstsw
sub
je
mov
inc
cmp
outsl
xchg
pop
pop
jo
ds
push
std
dec
sub
jbe
or
mov
jae,pn
out
xor
or
xlat
cmp
nop
repnz
loope
mov
ss
sbb
lods
pop
mov
jmp
adc
cld
pop
push
pop
pushf
sub
test
cltd
dec
push
or
jb
aam
icebp
inc
fbld
daa
ljmp
mov
push
mov
add
sub
lcall
in
jne
mov
aas
clc
jl
mov
mov
lods
stc
mov
mov
fbld
data16
sbb
lret
in
fwait
jbe
stc
mov
cltd
rolb
inc
ljmp
push
xor
push
leave
mov
fistl
jne
sbb
js
mov
stos
add
pushf
movsl
and
mov
iret
push
mov
popa
jnp
js
ds
cmp
add
test
sub
rcl
lock
and
or
int3
ret
sarb
mov
mov
in
dec
lods
and
add
jo
ss
jl
jmp
mov
in
or
enter
and
pop
mov
mov
mov
jmp
leave
nop
je
in
add
popa
roll
or
lock
add
mov
cltd
jns
shl
cmp
push
push
mov
mov
movsb
fwait
mov
pushf
cs
or
shrb
push
push
push
aaa
pop
enter
add
push
pop
lods
add
out
out
scas
scas
lods
xorb
push
iret
xor
add
adc
lods
adc
loop
xchg
adc
fcmovu
stc
cmpsb
jo
addl
and
mov
inc
lods
mov
int
mov
cmpsl
lcall
add
and
pusha
xchg
stos
or
inc
sbb
dec
sti
pop
and
dec
ret
divl
xchg
rorb
enter
mov
or
sbb
aaa
fnstenv
xor
iret
add
pand
sub
aas
push
and
sub
push
push
sbb
shlb
adc
adc
popf
pop
mov
push
aas
dec
lds
movb
cmp
dec
inc
ret
loopne
mov
xor
bnd
fidivrl
mov
mov
xchg
inc
test
mov
mov
pop
mov
cmpl
pop
lods
jp
lds
lret
data16
popf
mov
and
jl
test
lds
pop
xor
ficompl
aad
lods
or
push
and
sbb
insb
out
mov
mov
cmp
hlt
sbbb
xor
pop
mov
push
push
push
mov
fs
test
fisttps
mov
xchg
adc
push
addr16
push
sahf
addr16
fnstcw
adc
adc
icebp
in
adc
push
push
sub
enter
jmp
adc
xor
icebp
sub
int
stos
mov
mov
ljmp
test
pop
sub
imul
mov
aas
xchg
lahf
xor
sti
push
cmp
sub
pop
xchg
test
frstor
mov
pop
stc
mov
ljmp
icebp
fbstp
pop
push
sub
xchg
add
inc
loop
cltd
stc
pop
leave
fdivl
adc
fnstsw
push
xor
and
and
cmp
ss
fdivrl
data16
clc
stc
clc
es
and
cltd
push
mov
shr
jl
pop
lods
mov
mov
sbb
mov
iret
adc
sub
ja
or
and
pmaxsw
sti
xlat
notl
pop
cs
iret
stc
mov
aas
sti
movsb
xchg
fwait
cli
xchg
js
add
mov
mov
push
jo
shl
pushf
les
inc
mov
dec
and
inc
mov
or
in
icebp
out
fildll
jg
pop
ljmp
push
fwait
or
mov
sub
add
ds
jmp
pop
cmpsb
sti
adc
add
fsubrp
dec
pop
mov
jecxz
mov
ja
cmc
icebp
pop
jmp
and
xorb
in
pop
jns
or
push
inc
jnp
movsb
cmc
roll
test
sbbb
mov
je
enter
dec
mov
xchg
ds
cld
imul
pusha
sti
outsl
pop
pop
add
and
cmpsl
lods
pop
out
outsl
hlt
popf
xchg
out
mov
pusha
cmp
cmp
pop
mov
push
or
push
fstp
cmp
loope
jl,pn
dec
in
mov
aad
push
push
or
mov
dec
push
pop
call
int
cmpl
scas
sar
outsb
pop
xor
pusha
dec
repz
sbb
add
lcall
popf
jb
das
sarl
fdivrl
adc
fs
enter
imul
in
mov
or
xlat
push
or
fnsave
cmp
jbe
insb
and
mov
sub
rcrb
push
rcl
dec
stc
dec
cmp
rclb
mov
add
sub
add
xor
test
and
lods
or
add
or
push
inc
shrl
sbb
and
pop
or
sbb
fdivrl
cmpb
sbb
dec
dec
pop
ja
pop
jns
xlat
or
std
cld
dec
lods
rol
and
and
sbbl
out
stos
popl
addr16
and
push
and
imul
push
pop
xor
loop
add
ret
stc
or
fnstenv
vpcmpeqd
pushf
add
les
daa
cmp
jp
in
inc
lret
leave
leave
cmc
mov
outsb
cwtl
mov
test
mov
fs
pushf
cmp
sub
popf
rorb
adc
adc
imulb
mov
loop
mov
bound
inc
pop
or
insl
mov
rcll
cmp
flds
int
mov
fs
adc
inc
adc
scas
mov
pop
mov
pushf
lret
in
pop
jge
mov
loopne
fdivrl
loopne
mov
shrl
mov
popa
out
xchg
dec
or
sbbl
bnd
and
sub
fidivl
aad
jl
mov
jbe
mov
pusha
fucomp
push
pop
jns
adc
dec
mov
mov
loop
lds
test
mov
lods
dec
fs
jge
xlat
roll
jns
add
ficomps
and
fbld
pop
inc
and
xor
faddp
pusha
repnz
cmc
in
dec
mov
pop
std
test
cmp
in
jg
aam
cmpb
jg
add
sarb
sbb
ret
aaa
and
xchg
jge
jp
sub
scas
in
daa
cmp
movl
popa
cmp
and
in
shr
jmp
ret
xlat
test
out
insl
cmp
es
add
int3
fbstp
dec
sub
jnp
jp
add
jmp
fwait
or
jae
in
es
fdivrl
xor
adc
adc
lret
xchg
cld
imull
iret
sub
push
jo
in
arpl
loopne
lret
xor
psubusw
sbb
fcoms
fiaddl
lahf
movsb
cmp
dec
pop
icebp
ljmp
enter
or
lea
nop
insl
pushf
xchg
add
sub
push
inc
xchg
adc
into
mov
xor
lret
lock
dec
adc
push
xor
cwtl
inc
adc
mov
mov
test
adc
das
fnstenvs
insb
pop
sub
mov
inc
lret
or
shll
mov
icebp
jns
rep
add
test
or
out
lock
xorb
inc
cmp
loopne
jg
fnsetpm(287
and
lods
or
mov
into
jne
mov
mov
xchg
das
mov
shll
js
lret
push
hlt
cmc
mov
lcall
mov
or
pop
sub
cmpsl
xor
repz
jge
rcl
popl
insb
inc
push
pop
mov
and
lahf
adc
lods
addl
iret
mov
scas
or
jmp
movsb
adc
hlt
test
sbb
jge
imul
cli
and
mov
ljmp
mov
jg
aam
mov
mov
pop
fnstcw
iret
mov
out
js
or
test
daa
js
into
lock
lds
add
dec
sub
test
sarl
out
pop
lret
test
and
clc
mov
xor
lods
imul
pop
dec
push
out
mov
adc
notb
enter
rcrb
push
jle
cmp
sbb
dec
pop
mov
xor
mov
and
adc
xor
addl
popa
popa
xlat
add
outsl
sbbl
mov
mov
push
rclb
loop
jne
mov
xchg
stos
aam
dec
adc
sub
lcall
sub
push
nop
hlt
adcb
mov
inc
movsl
sbb
cmp
xor
sub
ret
jno
sarb
dec
push
xor
jmp
dec
pop
or
mov
test
xor
push
insl
push
xor
xchg
jmp
pop
or
jmp
neg
ljmp
out
mov
movl
mov
in
fidivrs
test
inc
out
movsb
enter
jae
push
xor
out
ds
sbb
in
mov
jmp
std
repz
inc
das
popa
mov
cmp
icebp
jecxz
sbb
in
fnstenv
int
and
push
andb
stc
test
cs
push
pop
mov
xor
cwtl
sahf
and
insb
dec
mov
adc
jle
popf
pop
jle
cmpsl
cmp
mov
and
je
cmpsb
push
aad
fbstp
out
pushf
ss
cwtl
mov
pop
mov
movsb
jmp
add
adc
adcb
mov
or
mov
inc
xchg
aad
xchg
add
sub
jle
fistpll
es
test
mov
frstor
pop
adc
jb
xor
sub
test
roll
fnclex
mov
jae
mov
sbb
sub
xchg
xchg
repz
leave
ror
addb
in
xchg
xchg
jne
movsb
xchg
adcb
jb
push
sarl
in
cmpsb
ret
jl
pop
or
daa
mov
testl
dec
fdivr
scas
push
cmp
push
jge
fisttpll
std
push
aam
adc
ss
icebp
in
mov
xor
mov
push
push
push
pop
cmpsl
jge
roll
flds
mov
in
xchg
xchg
repz
mov
std
cltd
and
pop
push
or
push
insb
ret
add
repnz
xor
jle
mov
pop
sub
in
push
pop
pop
pop
popf
enter
inc
cwtl
neg
sub
dec
outsb
out
mov
inc
cmp
ret
call
fwait
sub
inc
mov
arpl
jo
ss
inc
xor
test
sub
mov
mov
dec
pop
loopne
mov
or
fstpt
insb
insb
push
cmp
inc
fldl
cwtl
in
xchg
cmp
bound
into
push
pop
xchg
ret
add
hlt
arpl
push
insb
push
mov
insl
daa
fldl
push
sti
and
mov
adcb
mov
push
shlb
insl
rclb
sbb
jg
lcall
cmc
jg
sbb
mov
sub
rolb
outsb
cmp
sub
in
fsts
inc
das
std
pop
sub
push
les
dec
lods
and
insl
mov
mov
dec
dec
sbb
insb
adc
mov
outsb
fsubl
movsl
or
xor
nop
xchg
push
popa
mov
sub
add
or
insl
xorb
push
out
imul
fs
faddl
bswap
std
inc
cmp
xlat
psubb
mov
inc
sub
dec
ljmp
test
dec
jne
int3
dec
ds
mov
orl
iret
xchg
and
int3
mov
lods
dec
jne
or
imul
sti
and
hlt
aam
dec
xorb
or
popf
je
sub
movsl
push
popf
imul
fldcw
dec
repz
jp
outsl
pusha
xlat
movsl
lds
or
and
addb
in
pop
dec
inc
fmulp
ret
xchg
jo
stos
dec
sahf
cmp
xorl
rcrl
or
pop
inc
in
jmp
lret
sbb
and
gs
shll
mov
mov
mov
inc
lahf
int
xchg
fdivl
jo
dec
lea
jg
mov
mov
push
loope
aam
cmpsl
leave
mov
inc
cmp
jno
fsubl
into
inc
sbb
sarb
leave
xor
js
push
ret
inc
ljmp
add
insb
dec
adc
push
or
jns
cmp
test
fsubl
or
xchg
sbb
cmpsl
les
sub
popf
test
and
or
pop
mov
adc
stos
pop
data16
xlat
add
pop
aam
xstore-rng
cmpsl
andb
gs
xor
jmp
mov
and
cmpsl
sub
adc
jne
int3
fs
ljmp
mov
hlt
push
inc
scas
outsl
xchg
in
xor
jmp
fildll
sub
mov
stc
or
and
mov
push
repnz
inc
adc
jo
cmp
sub
adc
mov
mov
cwtl
insl
sub
and
xchg
mov
xchg
xchg
sbb
jg
pushf
outsl
es
testb
jge
sarb
clc
cld
jae
mov
rcrb
jle
jp
cs
pop
mov
aam
ja
or
xlat
or
cmp
mov
ret
sub
aam
idivb
inc
hlt
cmp
lret
xor
cld
inc
in
xchg
int3
ja
and
push
lea
push
addb
cmp
xchg
nop
jne
icebp
add
adc
lahf
enterw
push
fwait
sub
arpl
cmp
lock
sbb
xor
mov
nop
inc
daa
mov
in
and
hlt
insb
nop
dec
fwait
sub
jmp
fisttps
mov
and
dec
lcall
mov
or
add
movsl
inc
jo
hlt
jecxz
pop
adc
sbb
lcall
fists
adc
pusha
mov
stc
lea
mov
xor
imul
adc
cmp
jno
in
enter
push
js
pop
cwtl
cli
mov
sub
and
fmulp
aas
fdivrl
mov
inc
pop
jge
mov
sub
test
data16
jp
push
cli
rcrl
loopne
inc
jg
pop
stos
sbbb
jns
mov
cmpsb
cmpsb
mov
ds
push
mov
dec
sahf
sbb
std
outsb
pop
fisubrl
pushf
int
push
add
add
push
xor
mov
jmp
mov
cmpsl
cmp
pop
or
fucomi
add
stos
insb
pop
sub
push
push
and
push
xor
int3
scas
lods
jne
add
ret
rcr
js
and
cmp
test
jb
hlt
jp
je
sub
mov
sbb
xchg
and
cmp
enter
push
push
push
jmp
sub
adc
adc
cmpsl
jecxz
daa
or
adc
dec
mov
lock
out
adc
mov
sarb
sbb
cmp
push
stos
sbb
js
cltd
loopne
or
sti
dec
push
push
add
cwtl
into
mov
in
mov
jae
push
fistpl
inc
nop
mov
push
sbb
adc
adc
mov
mov
ret
cmpsl
xor
adc
scas
and
mov
test
sub
shrl
movsb
movsb
push
pop
mov
in
idiv
pop
inc
iret
jle
inc
xchg
out
inc
jl
call
mov
cmp
lcall
inc
lds
ss
aas
lods
inc
push
lret
mov
pop
mov
addl
mov
xchg
add
mov
cmpsb
or
mov
add
add
addr16
cmp
and
push
pop
rol
decb
inc
das
pop
xchg
lock
nop
popf
lcall
pushf
inc
and
pusha
mov
sub
movsl
loop
add
sub
add
aam
xor
cmc
dec
fists
mov
dec
push
into
iret
aam
dec
sbb
pop
out
loopne
imul
jecxz
pusha
add
xchg
cmpsl
dec
data16
inc
xor
or
xor
mov
mov
jecxz
jnp
xor
orb
mov
mov
rcll
daa
stos
gs
mov
push
mov
das
pop
std
mov
mov
rcrb
adc
sbb
dec
bound
mov
cltd
dec
mov
mov
lods
gs
xchg
mov
dec
cwtl
enter
pop
add
in
push
pop
xlat
xchg
scas
inc
repz
pop
jno
fdivp
insb
insb
cmpsl
shr
push
mov
ret
jbe
leave
dec
data16
negl
stc
mov
imul
jns
iret
ja
cmc
adc
cmpsl
dec
clc
ljmp
fbstp
mov
lahf
dec
repz
mov
bound
ret
test
fbstp
mov
imul
xchg
pop
xor
ja
adc
lcall
push
scas
insl
clc
ret
into
stos
cmp
out
or
ljmp
adc
sub
adc
inc
ja
adc
filds
das
test
and
test
mov
push
in
dec
fwait
dec
arpl
lcall
sbb
mov
push
cmp
mov
jle
sbbl
xchg
cmpsl
mov
cmp
mov
mov
fnstenv
adc
add
mov
jbe
iret
stc
into
dec
stos
in
cmp
cmp
pop
mov
scas
mov
stc
call
jnp
aam
pop
in
lret
loop
mov
pushf
stos
js
sbb
loopne
xchg
ret
cmp
pop
addr16
dec
ret
add
shlb
subb
jl
mov
mov
leave
mov
adc
movsb
xlat
xchg
mov
roll
push
imul
mov
repz
mov
mov
sarb
pop
aad
xor
insl
lock
cld
sbbb
inc
clc
inc
lds
lds
gs
lods
leave
repz
mov
pop
mov
dec
dec
push
dec
pop
inc
out
lret
hlt
test
mov
adcb
push
out
mov
mov
sbb
sbb
jge
push
and
mov
pushf
popw
jmp
mov
cltd
imul
cwtl
xchg
in
sub
sub
aam
jl
adc
call
mov
leave
xor
je
stc
sbb
shll
mov
adc
incb
inc
loopne,pt
jl
push
flds
adc
push
inc
push
mov
push
push
psubsb
aaa
jecxz
sbb
adc
orl
into
int
dec
cmc
ljmp
jbe
iret
cmp
test
leave
movsl
sbb
cmp
mov
lock
mov
sahf
arpl
incb
jl
fcoms
std
daa
out
shll
outsl
pop
xchg
adc
cmp
cmc
or
ljmp
xor
sarb
xchg
mov
incb
mov
mov
ficoms
icebp
fldcw
mov
pop
pop
and
jmp
or
test
mov
add
ffree
test
mov
xchg
add
sub
ret
jle
push
mov
xchg
or
lahf
mov
push
loope
xchg
pop
xor
outsl
nop
mov
xchg
aad
mov
adc
push
mov
push
xor
pop
pop
push
popf
sahf
push
sbb
repz
and
popa
xchg
movsb
jmp
or
pop
mov
push
dec
pop
jns
add
rcrb
cmp
ret
mov
mov
jecxz
ret
imul
aas
stos
roll
enter
push
ret
leave
icebp
mov
std
or
or
daa
lahf
test
int
shrb
xor
adc
lcall
dec
sub
lahf
leavew
test
cmpsb
xor
jnp
movsb
mov
mov
sahf
cmp
test
lods
int3
in
push
pop
mov
pop
sbb
ja
repnz
repz
insb
loop
enter
in
mov
rcll
test
in
int
mov
cmpsl
inc
mov
orl
push
movb
lock
pop
and
cmpsl
lea
xchg
cmp
push
jge
xor
push
fs
shl
repnz
or
jnp
ss
test
test
dec
jae
iret
fdivp
add
repz
je
fiaddl
cmp
xchg
adc
jecxz
push
pop
push
jnp
or
cmp
sbb
jo
movsl
ret
mov
sbb
les
cmp
loope
dec
jmp
insb
mov
xchg
aas
sub
jae
push
popa
xchg
and
sbb
jmp
jg
lods
mov
dec
mov
ficomps
inc
jle,pt
adc
and
xchg
stos
imul
sbb
dec
lock
fcoms
aam
repz
or
adc
pop
push
cmpb
mov
ret
arpl
pop
push
imul
and
jle
test
or
lods
add
ljmp
popf
rolb
rclb
add
xor
mov
lahf
movsb
push
js
pop
mov
es
sbb
call
sub
xchg
push
ret
fmuls
sahf
push
or
lock
mov
xchg
shrb
rcll
xchg
cmp
xchg
push
call
xor
popa
cltd
jp
xchg
cmpsb
xchg
sbb
and
sbb
dec
jle
mov
aas
ret
filds
aas
ud0
push
push
bound
ss
or
sub
add
pop
xchg
jmp
roll
imul
adc
adc
jnp
movsb
mull
adc
aad
inc
push
insl
outsb
or
push
adc
pusha
gs
sub
out
data16
fcmovnbe
jp
stos
sub
scas
imul
pop
push
pusha
jmp
inc
sub
push
xorl
push
jnp
sti
xchg
std
repz
test
xor
bound
sub
cmpsb
jge
cmp
sti
dec
sti
dec
push
ljmp
mov
dec
test
mov
push
pop
or
ret
leave
sub
dec
sti
mov
push
add
jo
pop
xor
les
or
loope
inc
sbb
inc
and
js
dec
mov
jl
imul
pop
or
jb
cli
inc
push
cmp
movl
xor
stos
pop
mov
ss
xlat
or
fidivl
popa
xchg
inc
aam
sarb
fiadds
add
insb
mov
and
cmp
das
hlt
filds
movsl
jl
cli
push
lcall
mov
fsts
push
or
in
mull
stos
cmpsl
mov
jne
or
fwait
or
push
xchg
push
push
stos
std
xchg
cmpsl
repz
lea
xchg
daa
add
push
insl
lret
fimuls
mov
arpl
jne
les
xchg
mov
pop
or
das
sub
fmull
mov
stc
cs
andl
gs
pushf
pop
dec
xchg
inc
movsb
neg
inc
mov
and
lods
adc
in
mov
aaa
test
push
pop
ss
sbb
stos
fldt
jp
popf
pusha
mov
xor
psubb
out
dec
add
jge
out
push
and
or
xor
jg
mov
hlt
jmp
insl
xor
sarl
cmp
cmp
ljmp
mov
push
xchg
mov
pop
sub
inc
pop
dec
je
mov
adc
fisttps
push
push
cmp
stos
lock
les
sub
xor
outsl
sbb
cs
shll
push
push
push
pop
inc
pusha
fldcw
xor
arpl
or
adc
dec
out
je
shrl
and
add
mov
jae
add
out
xor
sbb
scas
jg
sbb
sbb
jae
cmp
xchg
pop
cmc
outsb
xlat
xor
sub
loopne
jns
pop
daa
sarl
inc
jbe
push
add
cmp
mov
aaa
inc
out
call
jae
xorb
imul
dec
fstps
mov
xor
jb
mov
loopne
pop
in
je
scas
les
add
mov
stos
jne
sub
leave
nop
mov
jo
mov
clc
outsb
fcomps
repz
jl
shlb
xchg
out
ss
sti
test
fwait
loopne
and
insl
adc
aam
sub
mov
jno
mov
inc
xor
xchg
jno
jmp
adc
xchg
aaa
jnp
push
jbe
pushf
pusha
cmp
insl
inc
push
lcall
dec
out
mov
jbe
fcoml
push
add
loopne
push
cli
rcrb
cmp
clc
jecxz
aas
dec
push
cld
jo
cmp
addr16
jl
or
cmp
and
je
in
or
inc
adcb
mov
jno
or
lods
dec
sbb
outsb
mov
fs
cwtl
mov
jb
cmp
fmuls
jmp
fimuls
sbb
jae
inc
inc
dec
inc
lret
pop
xor
push
jecxz
xchg
xchg
add
loop
cltd
lds
or
xor
fdivs
jne
mov
jp
sub
cmpsb
and
lds
or
xlat
mov
mov
xor
mov
test
mov
jne
cmp
test
cmp
mov
loopne
lock
aaa
inc
xchg
loopne
insb
cmp
pop
cwtl
rorl
pop
and
and
mov
hlt
jg
ret
jmp
repnz
cwtl
add
rolb
shr
sbb
imul
jp
js
jbe
inc
loope
adc
ret
cmp
jns
mov
lea
ja
dec
mov
cmp
decb
dec
jmp
and
fists
and
movsb
call
out
outsl
fwait
jmp
adc
es
lea
cmp
insb
lahf
jne
push
cmp
fildl
push
cwtl
adcl
std
scas
lock
dec
dec
xorb
jne
jge
out
xchg
and
or
pop
sub
in
xchg
or
pop
add
aad
nop
stc
or
popf
sub
push
roll
pop
out
mov
icebp
add
gs
and
stos
pop
fs
ss
fistps
xchg
dec
mov
enter
and
clc
aam
dec
nop
mulb
in
cmpb
jg
pop
sub
cmc
jb
outsb
push
mov
pop
push
sarl
dec
stos
add
addr16
xor
mov
jbe
lahf
xor
in
arpl
mov
loopne
xchg
sbb
in
fcmovbe
mov
or
xor
loope
jnp
loop
mov
fcom
mov
mov
jno
popa
xchg
adc
aam
fstpt
insl
cmp
jae
fcompl
movsb
and
sub
mov
push
rcrl
bound
mov
orb
loop
inc
xor
sbb
xor
mov
out
js
daa
aas
cmp
add
test
xchg
in
sub
sub
das
cmpsb
xchg
lods
in
xchg
sub
hlt
mov
cli
clc
int
test
dec
jge
pop
subb
pop
push
inc
mov
or
add
notb
jmp
dec
dec
sbb
loopne
into
lcall
shll
fmulp
in
fbld
sub
cmpsb
ret
mov
popa
imulb
mov
ret
mov
inc
push
stc
loopne
mov
mov
sub
mov
xchg
mov
pop
inc
push
inc
mov
repnz
pushf
add
movsl
mov
pushf
icebp
sbb
cmpsl
nop
sbb
js
or
repnz
mov
dec
push
mov
mov
test
jno
ljmp
dec
jmp
mov
push
cmpsl
jae
mov
inc
xor
xchg
and
xor
loopne
mov
dec
push
mov
xchg
pop
pop
aaa
xor
and
jg
ret
loop
pop
imulb
lea
lods
pop
in
test
push
inc
adc
pop
shrb
lea
in
flds
adc
popa
fiaddl
jge
aad
xchg
inc
cmpsb
cmp
loope
xor
and
push
push
push
add
out
push
cmp
notb
outsb
mov
insl
test
lcall
xor
jbe
popa
int
pop
pop
jmp
push
xorb
mov
pushf
arpl
inc
mov
mov
int
jle
rclb
xchg
cmp
cmp
push
test
or
inc
and
mov
popa
push
paddw
jns
in
mov
jl
mov
mov
test
mov
in
inc
adc
in
mov
sbb
ret
test
or
sub
mov
xor
adc
sub
cmp
lock
mov
adc
push
xor
popa
ja
outsb
push
imul
sbb
xchg
in
out
sbb
xor
pop
pop
mov
add
aas
fists
cmp
adc
adc
fisubrl
add
lret
fucompp
hlt
aad
in
cmpsb
cmp
fnstsw
sub
mov
xor
fcomps
xor
stos
ja
lret
ja
add
cld
pop
js
mov
fcoml
jl,pt
pop
jno
nop
pop
jne
pushf
adc
and
gs
cmp
sbb
ds
outsb
pop
and
jns
jne
adc
add
cltd
mov
dec
dec
dec
sub
or
jecxz
clc
in
lock
pop
xor
mov
push
leave
adc
and
rcll
add
fcompl
in
mov
shlb
pop
cli
push
xchg
push
jbe
mov
jmp
sbb
mov
lods
jbe
jno
out
lods
dec
cli
sbb
dec
mov
cmp
mov
mov
adc
sarb
clc
repnz
cmpsb
xchg
inc
movsl
les
les
jmp
xchg
mov
or
cltd
push
mov
pop
sub
das
sub
out
int
mov
dec
insl
out
cmc
leave
inc
maxps
dec
fstl
scas
repnz
pop
fistpl
outsl
aam
jae
negb
ficomps
jnp
movsb
pop
addl
ror
inc
or
cltd
rcll
cli
insb
push
jns
push
insb
mov
cmp
lds
jno
push
mov
jo
repz
sub
or
and
xchg
mov
fcomps
cmpsl
int3
xor
pushf
sub
jl
dec
test
mov
aaa
or
fcoml
jge
pusha
test
inc
jnp
xchg
rcrb
cmpsl
js
or
ljmp
mov
negl
cltd
out
out
scas
daa
bound
ss
ret
or
rol
fisubl
push
pop
cmpsb
cltd
sub
mov
scas
cltd
cld
and
push
mov
fcos
int
les
or
sbb
pop
cld
ja
popa
lods
out
ror
aad
andb
orb
mov
sub
add
lds
pusha
xor
js
pop
insb
mov
mov
cwtl
adc
mov
mov
ret
sub
fcoms
jge
xchg
fisubs
icebp
sbb
aas
mov
getsec
mov
inc
loop
ret
add
add
dec
mov
ja
std
lss
mov
ja
jnp
loop
lahf
mov
or
lcall
idivl
adc
int
adc
xchg
push
pop
mov
test
xchg
fwait
loopne
shrl
into
mov
shll
pop
scas
sarb
push
pop
push
mov
bound
mov
adc
sbb
lods
lea
repnz
stos
aam
xchg
sbb
add
inc
push
dec
lock
xchg
inc
xlat
cwtl
dec
add
push
je
sbb
std
pop
inc
push
push
pop
sbb
inc
cwtl
push
call
fstpt
daa
cmpsb
popa
shlb
orb
sub
outsb
or
repnz
jnp
xchg
into
inc
popa
xchg
dec
jle
rclb
cmp
push
xchg
inc
movl
xor
xchg
pop
pusha
test
ljmp
inc
sub
mov
into
push
aaa
sub
ffreep
stc
sub
push
mov
jbe
mov
cs
call
int3
cmp
mov
out
leave
popf
stc
jno
mov
adc
int3
fisttpll
leave
cld
out
cmp
sbb
out
cmp
jae
lcall
add
sub
out
or
and
jp
mov
cmp
jns
jae
das
jg
popf
call
dec
or
xchg
sub
out
cmp
sub
xchg
or
jbe
sahf
loopne
mov
xor
pushf
inc
test
jbe
js
stos
fcmovnbe
ds
pop
aad
cld
ficomps
inc
adc
lea
cmp
sbb
xor
sahf
hlt
xchg
cmp
xchg
mov
xor
pusha
and
lcall
sub
and
adc
ror
and
lds
pop
cli
and
mov
cmpsl
xor
fimuls
lock
in
sub
sbb
mov
mov
pop
in
repz
je
add
mov
popf
cmp
sahf
repz
mov
jo
xlat
sbb
fiadds
rcrl
add
jb
arpl
js
sbbl
dec
scas
xchg
jg
in
and
cmp
insl
inc
movsl
popf
loop
jbe
adc
movsb
mov
pop
mov
in
mov
out
repz
pop
dec
sbb
xor
fdiv
in
movsl
dec
dec
pop
dec
and
test
mov
ss
xor
xor
and
ficomps
jle
mov
lods
repnz
in
fisubs
push
jo
arpl
test
test
lcall
pop
push
mov
xor
popa
das
xor
cmp
hlt
mov
mov
inc
mov
push
or
pop
rcll
stc
sub
pop
pop
adc
cmp
aad
cmpsb
lahf
and
cwtl
imul
cmp
xlat
add
push
xchg
mov
imul
and
sbb
sbb
out
dec
and
xor
jle
mov
cmp
jb
gs
aas
cmp
xlat
test
mov
out
jle
push
lcall
pop
lods
mov
ret
mov
fisttpl
gs
or
out
clc
mov
mov
mov
mov
cmp
sub
xchg
xor
ficomps
xchg
mov
rclb
aad
sub
sub
sbb
add
pop
out
sbb
les
push
out
insl
cs
push
pop
test
dec
mov
fucomip
lods
xchg
ret
lock
nop
repz
in
orb
xchg
sub
aaa
inc
pushf
mov
jmp
sub
and
add
lahf
push
mov
aaa
movsl
addr16
sub
cmpsb
mov
jecxz
sbb
dec
mov
cmp
mov
sub
xor
movsb
iret
shll
call
fistpll
fldl
jge
xchg
xchg
mov
sti
cwtl
pcmpeqb
int3
pop
adc
ret
mov
push
imul
xchg
cltd
cmp
xchg
out
mov
push
hlt
jmpw
push
stc
mov
push
lods
inc
stc
mov
add
insl
jle
lods
test
push
adc
cmp
add
leave
adc
inc
mov
popf
inc
fiaddl
or
ss
mov
rcrl
cmpsb
add
int
jle
mov
js
pusha
add
sub
ret
or
push
int3
decb
cmp
leave
lock
adc
jecxz
mov
scas
inc
xor
pusha
nop
cwtl
cmp
loop
add
aaa
mov
xlat
ljmp
mov
push
ret
sbb
rol
mov
mov
stc
je
jl
js
adc
adc
in
jge
dec
sbb
lods
xor
mov
mov
sub
pop
xor
insl
fs
add
inc
test
andb
pushf
jno
xchg
cld
sarb
shll
addr16
lcall
jg
mov
dec
mov
lock
push
adc
push
sub
push
inc
fadd
jl
fistpll
mov
jne
adc
int3
push
jge
add
gs
lods
xor
lds
mov
mov
mov
rorb
imul
repz
mov
iret
pop
add
testl
jl
insb
add
xor
jmp
xor
mov
rorb
aam
notl
xlat
push
orb
xor
nop
cltd
mov
les
jmp
jmp
push
jmp
mov
iret
es
mov
out
addr16
fsts
push
into
jp
or
mov
jmp
xor
push
xor
cmpsl
push
lahf
jle
stos
bnd
mov
mov
mov
arpl
decw
sbb
dec
imul
stc
mov
scas
loop
mov
rcll
mov
inc
mov
push
sub
cmp
pop
dec
sbb
xchg
jae
lcall
ret
mov
dec
sub
fnstcw
test
jae
jo
or
shl
popf
add
xor
sbb
or
cwtl
mov
es
cmp
icebp
add
push
andl
xchg
movsb
cmp
dec
out
jbe
adc
mov
subb
icebp
push
imul
adc
testl
mov
xchg
enter
inc
test
sbb
cmp
pop
insl
dec
call
or
dec
outsb
xor
push
dec
movsl
and
jns
add
cmp
dec
mov
clc
cmp
shrb
dec
mov
or
mov
jmp
and
popa
shrb
mov
and
sahf
add
inc
ja
and
jae
adc
mov
lds
fisubl
idivl
pop
and
inc
dec
pop
call
daa
vcvtdq2ps
inc
mov
mov
dec
pop
int
adc
daa
ret
sbb
repz
nop
mov
lahf
xor
add
mov
pop
scas
aas
sub
add
iret
cmp
xchg
add
push
cmpsb
push
test
push
iret
add
cld
add
mov
inc
mov
popf
xor
fisttpl
stos
mov
cmp
inc
cmp
and
lods
cwtl
mov
es
fs
push
cmc
fwait
sti
sbb
rorl
push
mov
or
pop
xor
add
in
mov
mov
and
inc
push
xchg
inc
and
pop
js
stos
xchg
or
mov
mov
outsl
mov
mov
mov
fs
aaa
sub
mov
pop
out
out
stos
inc
outsl
out
push
pushf
lods
aaa
mov
test
jo
sub
push
jecxz
loopne
or
xor
leave
add
test
imul
std
xor
ja
mov
call
sub
sub
int3
mov
lds
sub
mov
movsl
sarb
ficoms
sub
xchg
mov
add
add
adc
mov
imul
jle
sub
call
aad
push
pop
add
inc
sbb
push
or
dec
insb
lea
out
rorl
andl
gs
pusha
cmpsb
int
jl
scas
jno
inc
xchg
dec
mov
sub
jle
pop
cwtl
jno
sarl
mov
xchg
adc
lret
fmuls
add
mov
nop
outsl
push
lcall
outsl
clc
xchg
jb
sub
jns
fmull
jo
and
mov
setne
ljmp
addr16
cmpsb
clc
sub
sbb
orb
dec
in
fbstp
cmp
pop
inc
xor
inc
mov
xchg
sbb
adc
test
pop
sub
add
or
lret
cmp
cmp
pop
mov
sub
int
imul
lret
sbb
push
mov
adc
adc
insb
lock
xchg
sahf
sahf
iret
test
fnstsw
xchg
outsb
lret
leave
sbb
cmc
jnp
out
xchg
mov
or
hlt
pop
ljmp
popa
arpl
rorb
neg
cmp
arpl
inc
neg
xchg
out
pusha
ret
fmull
cmpsl
cli
xor
add
dec
or
or
cmp
sbb
movsl
mov
and
or
lahf
push
xor
ficompl
cmp
fdivrs
cmp
cs
shlb
xchg
xor
stc
stc
shlb
pop
add
push
add
test
add
je
sar
lret
push
adc
xor
add
fnstcw
les
pop
sbb
pop
fistl
inc
movsb
testb
fcoms
hlt
add
pusha
sub
test
and
push
lcallw
out
mov
xor
pop
xchg
jo
inc
and
pop
cmp
cmpl
leave
cli
cmp
dec
mov
addl
daa
and
sub
inc
xabort
in
adc
adc
lods
pushf
jp
sti
mov
jnp
push
test
lret
mov
jae
or
jmp
mov
iret
mov
xor
jg
cmp
fcoml
mov
loopne
and
aas
adc
mov
stos
xchg
cmp
cmp
data16
testb
dec
inc
xchg
and
mov
lock
imul
jb
insb
and
mov
sbb
mov
aaa
xchg
or
frstor
pop
jecxz
or
int
int3
std
dec
jns
cmp
and
loope
ja
mov
bound
push
adc
push
jno
cld
das
sbb
cmp
xor
fcoms
push
add
mov
aad
imulb
push
test
and
dec
add
repz
sub
in
fmul
iret
inc
adc
popl
xor
sub
xor
xchg
mov
mov
out
sahf
inc
faddp
movsb
inc
fwait
in
add
xchg
test
or
sti
mov
cmp
jecxz
push
out
es
ficomps
mov
and
bound
mov
ja
sub
fstpt
mov
mov
cmp
dec
loop
lahf
and
jnp
mov
into
addl
jmp
push
cvtps2pi
mov
jg
dec
cli
icebp
push
pop
test
jge
push
and
hlt
push
repz
std
inc
jb
jns
pop
push
sub
ja
fstpt
push
and
mov
cmp
enter
das
jne
mov
add
fnstcw
push
pmaxub
dec
mov
orl
cmpsb
cli
xchg
or
xor
and
cmpsl
or
into
shrl
xor
gs
ficoml
pop
loope
out
sub
shl
addl
mov
or
fisttpll
pop
rcr
push
movsl
inc
dec
jl
out
add
insl
clc
stos
xchg
shrb
sbb
fstps
jo
sbb
dec
jne
adc
sub
jp
mov
aas
movsl
outsl
push
xchg
inc
int3
push
repz
fucomp
stos
popf
sbb
sarl
pop
dec
addl
sbb
sub
test
push
aam
mov
cmc
jne
sbb
jo
and
pop
jae
inc
adc
sub
std
jle
dec
arpl
sub
push
leave
push
iret
xchg
pop
scas
adcl
rorl
xchg
loope
and
stc
mov
jp
xchg
fnstcw
or
outsl
dec
adc
pop
fidivrl
xchg
jo
jle
pop
int
inc
sbbl
ja
dec
sub
and
call
mov
shll
xor
loop
pop
icebp
into
stos
inc
pop
out
jae
loopne
popf
mov
mov
sti
jmp
sub
and
shlb
mov
adc
daa
test
sbb
shufps
mov
aam
pop
dec
ds
mov
rclb
mov
call
outsb
leave
inc
jmp
lea
sbb
push
scas
and
pop
xchg
pop
pop
rolb
in
data16
cld
int3
imul
fisttps
lret
jns
idivl
out
fs
or
fdivs
ja
lret
test
xor
insb
mov
pop
ljmp
push
jbe
jnp
adc
jle
inc
leave
mov
insb
fiaddl
mov
mov
popa
and
xchg
inc
icebp
sti
add
mov
fs
lods
cs
xchg
aam
xor
xor
push
test
cmpl
adc
aaa
xor
sahf
jo
jne
mov
xor
subb
and
push
repz
mov
dec
popa
mov
mov
xor
rcrl
or
lret
je
leave
jbe
fldenv
movsl
inc
fisubl
fidivrs
push
ljmp
in
cld
int
bound
cmp
jo
dec
xor
pop
ror
cmp
mov
lret
addr16
cwtl
es
jo
sti
inc
popa
push
xchg
mov
mov
int
lock
mov
inc
es
insl
hlt
inc
sbb
fs
cmp
mov
or
mov
and
add
and
push
sub
inc
mov
icebp
inc
push
in
add
push
and
mov
xor
es
cmp
cmpsl
add
negl
imul
or
or
rcll
xor
aaa
ds
outsb
xchg
call
repnz
dec
sarb
popa
mov
jns
lods
std
xor
or
call
idivl
lods
mov
loope
push
lcall
cwtl
jae
lods
lcall
mov
orl
pusha
sbb
or
jb
iret
mov
ds
add
es
sbb
cmp
push
mov
mov
mov
orb
mov
mov
fisttpll
or
movsb
jnp
inc
out
lods
scas
pop
faddl
mov
inc
and
stos
rcrb
sub
nop
aad
pop
lods
jno
int
pusha
xlat
clc
xchg
sub
pop
jo
pop
push
outsb
pop
lods
inc
jo
into
jp
cli
sub
cmp
sbb
cmpsl
push
xchg
or
negb
mov
cmp
xor
popf
out
arpl
icebp
xchg
leave
sbb
aaa
fwait
cmp
test
js
jne
cmp
and
mov
shr
and
add
inc
lods
test
or
sub
test
sbb
push
sub
lods
push
cs
jge
jns
fnstsw
outsb
xor
fcmovnu
fistpll
jae
into
xchg
mov
sub
pop
out
pop
insb
mull
sub
cld
pop
cmp
push
loop
xor
clc
cmc
iret
cli
nop
pop
pop
or
dec
daa
and
lret
jg
adc
scas
dec
sub
and
aas
mov
movsl
pop
jae
mov
push
stos
call
mov
xchg
jmp
mov
je
or
cmp
sbb
dec
les
dec
jmp
mov
pop
mov
out
jno
lahf
out
js
push
hlt
arpl
aad
inc
cmp
std
loopne
inc
dec
sub
cld
clc
pop
ret
jne
xchg
sbb
pop
adc
xchg
shlb
movsb
and
les
xlat
mov
rcr
icebp
push
cmp
or
and
mov
xchg
jbe
lret
std
sub
mov
cmpl
popf
and
xor
mov
mov
ljmp
mov
data16
dec
lods
das
mov
mov
fwait
pop
daa
inc
pop
nop
mulps
mov
int
mov
shl
lock
inc
lds
add
inc
lcall
movsl
enter
in
jb
adc
sbb
sbb
mov
sub
sbb
hlt
rolb
lahf
pop
jle
inc
shrb
add
aas
loope
cltd
cmp
sbb
or
sar
insl
ret
cld
ja
xchg
notb
mov
lea
pop
dec
outsb
fwait
dec
and
mov
shlb
pop
xchg
mov
es
push
jae
out
dec
rorl
ss
add
lods
in
sbb
lock
fimull
loope
jno
jnp
cld
xchg
xchg
mov
push
pop
cmpsb
xor
jo
inc
adc
adc
sbb
in
inc
inc
inc
mov
in
mov
mov
sub
cmp
scas
dec
push
ficoms
jmp
add
icebp
stos
mov
adc
cld
pop
adc
dec
jmp
mov
stc
add
mov
out
inc
jl
test
aam
das
daa
mov
aad
in
mov
sbb
lods
push
repnz
shl
push
mov
test
lods
xchg
test
and
rorl
ret
mov
dec
int3
or
add
popf
movsb
cld
rclb
int3
pop
push
or
fwait
shrb
dec
je
inc
inc
ljmp
sbb
jmp
cmp
jns
out
outsl
push
aam
dec
test
mov
and
shll
or
sub
sbbb
mov
cmpsl
pop
dec
lea
cmpsb
pop
inc
sbb
idiv
arpl
adc
cmc
test
mov
sbb
dec
mov
xor
ret
push
xor
xor
xor
lods
pop
aad
neg
in
mov
aam
shrb
pop
push
cmpsb
adcb
jo
mov
xor
xor
adc
push
mov
cmc
outsl
xlat
mov
lock
fidivl
mov
popf
and
sbb
mov
fldenv
sbbl
aas
mov
jmp
and
mov
xchg
aam
pop
rcll
xor
les
and
movl
mov
shlb
imul
mulb
cli
sbb
nop
push
sbb
xor
push
pop
icebp
and
test
jb
orl
mov
mov
mov
in
outsl
fst
rorb
jl
aas
and
jl
xor
stc
hlt
adc
mov
inc
or
subb
lahf
insl
iret
or
add
adc
jnp
lea
mov
jb
sbb
inc
or
mov
or
lds
arpl
fistl
xchg
je
lock
adc
inc
aam
test
loop
das
dec
lahf
sub
xchg
mov
or
movsb
xor
mov
pop
xchg
nop
pop
sbb
jb
loope
fcmovu
dec
push
push
mov
or
in
addr16
inc
sub
mov
fidivrl
ss
jb
test
pop
ss
scas
test
push
sbb
pop
add
bnd
stc
out
push
in
xchg
rolb
mov
and
mov
lds
xor
cmp
arpl
outsl
test
in
pop
popl
inc
ds
mov
mov
or
lret
lret
sbb
pop
push
pop
sub
xor
lea
es
testb
push
test
sbb
sub
dec
das
adc
pop
mov
jno
or
mov
ficoms
xchg
repnz
pop
or
mov
mov
lock
out
mov
add
bound
lret
push
js
mov
or
aam
or
outsb
cld
xchg
out
aaa
ficoms
cs
pop
or
cmp
insl
outsl
sbb
loopne
push
imul
mov
mov
shrd
dec
data16
pop
dec
stos
aad
mov
cld
mov
or
int3
movsb
aas
divl
adc
ja
outsl
fstpl
negl
es
clc
je
push
add
xchg
pop
inc
je
pop
xor
mov
xchg
and
mov
mov
fcomip
xor
push
pop
loop
fnstsw
sub
dec
sbb
orl
ret
out
push
daa
rclb
sub
and
lods
insl
lods
out
aad
fadds
add
dec
dec
and
mov
dec
xor
scas
push
xor
and
and
daa
scas
jp
out
lds
pop
jae
stc
imul
lret
push
inc
add
sar
and
ret
sbb
add
pop
sub
sbb
std
xor
cmp
jl
inc
lock
mov
imul
mov
add
inc
ljmp
popa
lcall
jl
pop
jns
mov
add
cmp
sbb
in
add
and
lea
push
fcmovbe
js
sbb
scas
lret
xor
scas
sub
xchg
cmp
movsl
mov
push
pop
das
cli
fsub
jle
int3
ja
movsb
icebp
xchg
xor
push
icebp
lods
sbbb
daa
mov
dec
cwtl
dec
push
inc
jmp
pop
dec
fldl
insb
add
fcoms
enter
aas
aad
cltd
sub
push
mov
das
mov
gs
mov
mov
fcompl
push
push
out
incl
push
xchg
cwtl
push
push
push
adc
and
push
js
notl
or
lahf
cld
adc
movsl
idivb
mov
sub
pop
repz
xor
xchg
or
aam
ljmp
add
mov
pop
fisttps
xor
lcall
rorb
ret
scas
cmp
sbb
push
push
pop
fidivrs
mov
mov
jb
fidivl
ds
ficompl
jge
cli
std
femms
lods
jp
jge
sub
mov
mov
call
mov
outsl
ffree
scas
xlat
dec
inc
dec
cmpsb
shrb
lock
xchg
aam
add
mov
and
adc
dec
cmp
mov
and
jge
subb
aad
repnz
rclb
decb
addr16
hlt
inc
push
adc
xor
dec
mov
cmp
add
fcomi
mov
jmp
iret
xchg
sbbb
stos
sbb
pop
xor
mov
adc
mov
xchg
call
push
enter
ja
icebp
and
pop
dec
les
out
pop
xchg
pop
xor
mov
repz
loop,pt
jbe
shlb
loop
inc
repnz
pop
inc
insl
lcall
pop
mov
mov
ret
fistps
push
xlat
mov
outsl
mov
xchg
aad
push
or
push
outsl
pop
leave
or
cli
pusha
addr16
xchg
lcall
xchg
call
js
mov
dec
imul
fisubrs
cwtl
jmp
sub
adc
mov
out
mov
je
aas
icebp
test
call
es
xchg
js
mov
into
and
push
xchg
inc
or
stos
jne
sub
add
in
jg
enter
arpl
cmp
inc
jle
cwtl
pop
pop
xorb
or
push
push
jne
movsl
xchg
fldt
popf
push
dec
movsb
pop
jmp
cmpb
into
lds
sub
or
in
aad
mov
fcmovb
call
add
scas
and
adc
mov
jle
mov
sbb
inc
xor
push
xchg
jmp
dec
inc
lahf
xchg
mov
cmp
pop
popa
sahf
and
mov
mov
movaps
rcl
ds
dec
push
cld
inc
into
sbb
cltd
fimuls
dec
mov
mov
xchg
and
sub
and
push
inc
pop
inc
lret
push
mov
jns
or
scas
xor
es
add
hlt
ljmp
stc
xor
pop
and
leave
rol
adc
mov
repnz
in
loope
in
int
jnp
ja
in
xlat
in
movsl
mov
adc
iret
and
std
stc
sbb
pop
call
movsw
out
lahf
outsl
and
subb
xor
and
mov
cmpsl
sub
popf
cld
inc
inc
jbe
xchg
push
mov
cmpsl
inc
cld
subl
push
pop
push
aaa
cltd
ljmp
js
jb
mov
pop
xchg
xchg
sub
popf
in
adc
cmp
mov
mov
movsl
pop
inc
push
aam
xor
clc
xor
mov
sub
incl
mov
adc
enter
pop
sarl
mov
xchg
test
jle
outsl
insl
dec
clc
repz
cmc
xor
jmp
pop
pop
sub
push
pop
push
or
jbe
mov
xor
jp
add
push
cmc
cwtl
and
mov
adc
push
mov
jnp
cmp
loop
cmp
inc
imul
or
daa
div
adc
sub
and
xchg
inc
dec
outsl
push
and
loope
xchg
cltd
outsb
cltd
cmp
out
pop
jbe
scas
push
out
sbb
ficoml
stos
aam
js
inc
outsl
push
imul
fucomip
shr
xor
stos
dec
jge
enter
js
scas
movsl
and
dec
adc
leave
inc
adc
das
lea
xor
add
sbb
popa
jno
mov
and
xchg
sbb
insl
cmp
mov
or
iret
aam
iret
inc
adc
jno
idivb
sub
push
xchg
or
adc
jae
lret
loope
and
icebp
and
push
lret
imul
into
pop
xchg
in
mov
ja
dec
leave
aaa
cmpsl
adc
push
inc
cltd
popa
and
test
inc
or
loopne
je,pt
in
pop
pop
mov
popa
imul
or
outsl
cmp
test
jge
mov
repnz
lcall
adc
cmc
inc
mov
popf
mov
xchg
and
mov
mov
iret
pop
cltd
lcall
arpl
mov
pop
shll
loop
mov
mov
lods
xcrypt-cfb
cmpsl
and
cmpsl
icebp
jg
adc
push
xchg
mov
test
mov
cmpsl
insb
mov
divl
pop
jae
cmpl
jne
add
jno
add
push
into
add
push
lea
daa
xchg
push
pop
cmc
aad
mov
scas
out
adc
and
mov
aad
gs
scas
ss
sbb
or
pop
cmp
xacquire
loope
xor
or
addr16
clc
jne
xlat
xorb
and
jnp
in
scas
mov
dec
testb
insb
arpl
fcomp
or
pop
frstor
inc
bound
mov
xor
leave
sbb
rolb
loopne
and
cltd
xor
cmp
mov
xchg
and
mov
lods
xor
lret
movsb
jle
dec
cwtl
insl
pop
xchg
and
ja
das
jnp
xchg
xorl
mov
loope
enter
sbb
sub
cmp
sbb
mov
pop
outsb
or
popf
and
mov
adc
pusha
stos
out
fcmovb
xchg
out
jge
ret
sub
int
push
and
cwtl
dec
pop
fsubs
dec
and
insb
push
xchg
xor
outsl
daa
sub
jns
pop
push
inc
inc
adc
inc
add
mov
lock
jecxz
sti
cli
sbb
fs
jb
aam
filds
lock
fcoms
mov
inc
xchg
mov
adc
add
mov
jno
sbb
stos
adc
iret
ja
cltd
leave
xor
fstpl
xchg
jae
outsl
aaa
jg
test
jno
fiaddl
nop
sub
data16
aam
mov
sub
dec
adc
xchg
gs
lock
dec
outsl
cwtl
adc
pop
jp
mov
gs
div
js
das
pop
fs
or
rorl
and
imul
pushl
dec
je
ret
cmpsb
cmp
mov
mulb
addr16
popa
scas
jg
test
fldt
xor
cmp
fsubp
fstpt
movsb
stos
ss
testl
lret
jp
lods
movsl
int3
pop
jmp
out
cmc
les
shlb
mov
xor
adc
push
pop
daa
and
int
int3
sbb
mov
xor
and
sub
mov
sbb
cli
data16
mov
xchg
and
xchg
or
xchg
in
popf
adc
pop
cli
pop
jo
sub
dec
mov
push
or
pop
mov
sbb
and
arpl
xor
add
mov
lods
xor
mov
data16
std
lock
inc
or
dec
jmp
dec
and
push
mov
popf
sti
push
add
daa
xlat
and
repnz
jl
xchg
daa
cmc
jns
sbb
xchg
enter
mov
mov
dec
imul
jg
ss
int3
adc
adc
sahf
repz
ret
movsb
test
fbstp
dec
add
jge
shrl
sbbb
aaa
es
sub
sti
dec
scas
cmpsb
mov
pop
and
sub
test
mov
clc
mov
fsubrs
loope
test
loope
cmc
iret
data16
push
lods
subl
fnstsw
mov
sti
popf
lods
cli
aaa
mov
loop
fnsave
in
push
and
mov
add
push
icebp
shl
sbb
add
mov
and
or
fists
cmp
rcl
jmp
stos
sbb
sub
stos
xlat
adc
inc
filds
enter
or
add
bts
andl
js
sub
leave
mov
mov
popf
leave
aad
mov
pusha
jge
dec
jecxz
push
insl
jae
repnz
outsl
enter
cmp
movntq
out
shl
stos
jmp
inc
daa
inc
and
add
mov
xchg
in
in
call
ja
fsub
xchg
hlt
push
fistl
cmp
lea
mov
or
lock
clc
pop
jnp
pop
xchg
sbb
cmp
adc
cwtl
lods
pop
repz
jl
loop
rcrb
outsl
les
addr16
and
mov
dec
mov
lds
xor
fistl
or
imul
mov
ja
cmp
enter
sub
enter
fldt
and
out
stos
imul
jge
pushf
push
filds
fadds
or
adc
aaa
dec
aam
aaa
or
fs
mov
inc
inc
dec
adc
sbb
ljmp
adc
push
ja
mov
push
addb
xor
imul
inc
pop
hlt
int3
ljmp
hlt
sub
insl
adc
jno
or
ja
scas
or
lock
andb
mov
test
add
push
adc
sbb
adc
fisubs
sbb
sub
call
leave
mov
push
cmp
mov
mov
scas
sbb
push
rcrb
mov
lock
lcall
nop
mov
mov
sub
cli
or
movsb
sti
add
and
out
fcomps
push
leave
repz
daa
pop
mov
mov
in
or
sarl
insb
call
inc
imul
jne
jne
call
outsl
fdivrl
shll
cmp
pop
inc
lods
dec
mov
out
mov
fiadds
hlt
pushf
ljmp
adc
pop
stos
mov
mov
aaa
mov
cmp
fistl
lock
dec
in
push
mov
xchg
lods
test
inc
mov
cld
mov
mov
aam
lods
pop
add
insb
jge
xchg
xchg
mov
pushf
push
mov
jle
lret
pop
xor
add
test
movsl
add
mov
dec
cmpsl
sahf
repnz
out
movsb
imul
dec
xlat
dec
fldenv
lahf
je
loop
inc
in
test
subl
xor
cmp
scas
aas
out
or
movsb
sub
dec
push
inc
mov
add
scas
sub
mov
push
inc
shlb
adc
mov
outsl
mov
subb
enter
mov
fldl
jg
push
dec
lods
mov
pop
subl
xlat
aam
add
sub
aaa
dec
push
cmc
dec
pop
xchg
mov
arpl
ljmp
xchg
mov
pop
fnstcw
loope
mov
jg
movsb
adc
popa
inc
pop
add
adc
loope
dec
rcrl
pop
or
test
mov
in
cli
push
addr16
xchg
mov
jle,pt
loope
dec
test
gs
testb
dec
out
mov
outsb
mov
cmpsb
scas
inc
addr16
ljmp
xor
dec
daa
mov
inc
jns
dec
mov
xor
dec
push
ja
mov
sub
mov
imul
jno
mov
dec
fsubl
pop
aad
fsubs
adc
cmp
cmpsl
cmpsb
out
push
test
test
fs
mov
enter
push
shrl
pop
cmp
pop
call
jmp
das
aad
movsl
faddl
cmp
outsl
popf
xchg
js
aad
leave
fstpl
fisttpll
mov
push
popf
mov
mov
pop
inc
adc
push
test
jnp
sbb
xorl
add
xor
icebp
imul
shll
mov
aas
mov
into
movsl
enter
or
test
test
xor
aad
sub
cmp
pop
pop
outsl
xchg
pop
jg
pop
xor
jg
lret
inc
testb
adc
pop
aas
loope
scas
jno
test
aam
aad
mov
adc
and
test
js
dec
push
xchg
xor
iret
ja
pusha
scas
sahf
nop
in
stos
int
jmp
mov
jb
bnd
ja
scas
cmpsb
lods
xchg
jae
jmp
rep
jg
imul
fcompl
mov
fs
push
movsl
lret
sub
sub
xor
cmp
pop
imul
mov
inc
sti
pushf
mov
push
cmc
push
sbb
cmp
mov
jg
clc
jle
push
adc
add
outsl
sarb
in
mov
ljmp
out
imul
lret
ds
mov
xor
sbb
das
xlat
fcmovnbe
int3
fstpt
ror
push
and
pop
push
jae
and
pop
adc
add
sbb
mov
js
or
fwait
int
xor
pushf
int
fnstsw
mov
push
xor
mulb
xchg
pop
cmc
hlt
out
scas
scas
sub
jecxz
fisubl
xchg
lea
xchg
mov
pop
pop
les
xor
andl
lret
sbb
adc
mov
in
dec
je
out
int
mov
sbb
mov
add
push
bound
mov
push
lcall
xchg
sahf
or
decl
mov
pop
mov
inc
push
adc
and
je
sbb
mov
imull
fimull
or
jns
icebp
dec
jmp
jae
mov
daa
test
fnstenv
pop
insb
pop
add
popa
mov
pop
je
sbb
popf
dec
repnz
pop
je
xlat
repz
ss
int
or
in
mov
test
push
add
cmp
sub
arpl
call
push
daa
inc
notb
cwtl
inc
add
push
test
enter
fisubl
xor
add
pop
movsl
je
xchg
sbb
subl
add
fisttpll
dec
xor
jbe
and
pop
mull
pop
xor
sahf
test
scas
inc
imul
mov
or
scas
add
movsl
mov
xor
xor
fsubl
out
adc
int
xchg
cmp
notb
sbb
ret
in
jne
std
push
inc
cmp
cmp
inc
push
testb
mov
mov
ds
cs
push
sub
cmc
fisttpll
add
cs
mov
dec
andl
dec
mov
mov
fwait
arpl
aaa
shl
enter
pop
jecxz
mov
das
cmp
or
add
fisubl
sub
cmc
mov
push
aaa
hlt
fadds
and
inc
addr16
cmp
fistps
sarl
lret
push
jle
xchg
sub
inc
jle
pop
adc
xor
push
ret
gs
scas
dec
out
mov
xchg
xchg
xchg
out
data16
xor
jb
shr
lea
test
hlt
push
mov
jo
loope
dec
mov
cwtl
jb
add
lods
push
icebp
popf
lcall
mov
popa
jp
cli
clc
out
add
adc
add
push
dec
fisubrs
in
test
roll
add
bound
add
nop
mov
cmpsl
es
data16
push
or
hlt
push
shr
scas
mov
int3
shl
addb
in
mov
mov
mov
mov
push
jmp
pop
pushl
mov
andb
jbe
movsb
push
std
jbe
pop
adc
rorl
pop
cmp
gs
repz
data16
push
add
cmp
cld
mov
cwtl
lods
push
idiv
mov
push
aaa
pop
inc
add
jmp
pop
aas
lahf
movsb
push
shr
jecxz
jno
pop
jle
scas
mov
sti
mov
push
adc
cmp
stc
jbe,pn
cmp
daa
scas
pmullw
fst
dec
mov
inc
and
pop
daa
loopne
fs
pushl
add
pop
call
insb
and
rsm
aaa
xor
imul
xchg
incb
stos
inc
fdivrl
inc
and
aaa
pop
mov
sub
sub
cmp
imull
ds
fdiv
mov
pop
cmp
pop
adc
jmp
insb
lock
fwait
and
scas
push
and
and
push
sbb
scas
js
sub
mov
or
xchg
xchg
loope
lea
dec
arpl
sbb
fadd
xor
outsb
push
sbb
sub
mov
push
sbb
push
arpl
loop
push
rcll
fisttps
mov
jp
mov
imul
mov
in
xchg
pop
xchg
inc
arpl
dec
pop
sbb
add
arpl
out
lea
fdivl
fsubrs
xorb
movsl
sahf
pop
cs
lea
call
cmp
push
notb
add
nop
push
lret
pop
lret
cltd
lahf
out
std
lock
jle
jge,pt
sbb
push
test
imul
push
fisttps
insl
jae
stos
pop
aam
in
inc
xchg
ljmp
jbe
sub
jge
nop
jb
int3
mov
mov
jge
and
push
hlt
push
or
and
rcrb
xor
in
and
bound
and
aaa
cmpsb
inc
into
cmpsl
sbb
xchg
out
adc
popa
jg
xchg
lahf
and
pcmpeqb
pop
adc
jmp
adc
imulb
in
push
ljmp
fimuls
rorl
loop
stos
pop
or
test
rcrl
cld
mov
fdivs
mov
cmp
call
es
pop
inc
add
or
movsl
mov
adc
xorb
lcall
loope
sub
xor
mov
insb
jmp
sub
push
or
insb
or
mov
push
icebp
cmpsl
xor
push
lds
cmp
stc
sbb
call
movsb
add
nop
pop
frstpm(287
dec
push
xchg
mov
pop
sub
test
mov
push
adc
jl
in
hlt
int
pop
movsb
in
push
sbb
push
jecxz
sbb
jle
mov
insb
rcrb
loope
test
xchg
cwtl
incl
enter
out
pop
push
ds
push
fwait
jecxz
xchg
icebp
xchg
mov
adcb
pop
icebp
sbb
inc
gs
in
jbe
pop
sub
clc
popf
sbb
enter
xor
ret
push
popl
add
mov
push
dec
mov
mov
mov
repnz
sub
movsl
lods
out
data16
fisubrl
aad
imul
je
out
data16
pop
fldl
push
lock
jnp
repz
and
xchg
jnp
mov
pushf
out
loopne
lea
or
xor
loopne
cmc
insb
pop
es
fstps
mov
jl
dec
xchg
cmp
pop
xor
lods
sub
bound
sahf
or
or
outsl
dec
pop
mov
cmp
out
dec
jg
out
stos
cmp
jmp
ss
cmp
cmp
inc
cltd
inc
jo
inc
popa
enter
pop
cld
cmpsl
fs
in
xchg
sbb
dec
push
rorb
add
aas
pop
jo
and
sti
mov
leave
xchg
std
nop
mov
call
sub
ficoml
mov
movl
pop
int3
leave
lock
cmpl
out
cmp
pop
xchg
lret
nop
addr16
int3
ds
cmpsl
pop
sarb
inc
dec
mov
shlb
icebp
addr16
pop
push
push
out
mov
js
loop
push
das
movsb
fst
xchg
cld
push
pop
mov
jno
ret
cltd
jb
or
mov
outsb
push
ja
push
push
cmc
pop
push
jbe
das
loopne
mov
test
xorl
aaa
ljmp
ds
lahf
nop
inc
es
scas
in
out
xchg
mov
xchg
jg
xchg
lret
ljmp
jns
and
scas
insb
xlat
out
pop
xchg
repz
mov
sbb
jb
pop
fwait
enter
xchg
lock
leave
mov
orb
and
rcll
repnz
or
out
push
rcrb
jp
inc
aas
daa
mov
xor
or
pusha
jge
mov
shrl
int3
repz
push
xchg
rorb
ret
test
fmuls
mov
push
dec
mov
psllw
aas
inc
push
out
mov
mov
sub
pusha
paddsb
push
mov
inc
cwtl
mov
jle
and
out
iret
push
adc
lahf
push
lcall
decb
and
mov
cmc
lock
pop
aad
sbb
xchg
mov
jmp
lods
sub
je
sbb
inc
addr16
fwait
clc
sarb
int3
add
push
pop
out
mov
push
or
je
inc
push
movsw
sbbl
pop
jl
sub
push
stos
pusha
int
in
movsl
push
push
xchg
scas
pop
lock
mov
and
and
movsb
sub
aaa
int
dec
cmpsb
sub
pop
fildll
and
pop
movsb
loop
jo
cs
ds
xor
cmp
imul
in
mov
sub
fcmovnbe
xor
dec
sbb
jnp
std
pusha
sub
test
fldenv
lods
insb
jns
push
mov
ljmp
vmwrite
jle
mov
outsb
mov
xchg
cmc
and
test
xchg
jmp
xlat
aas
jbe
ss
jo
add
loopne
push
test
dec
and
adc
mov
dec
and
andl
aad
mov
add
notl
in
sbbl
and
jo
mov
push
xchg
mov
xchg
xchg
das
lock
rolb
mov
jbe
push
add
lds
xor
fdivr
int3
pushf
fs
stc
add
xchg
int3
pusha
aas
inc
cmc
xor
or
cld
mov
test
scas
dec
in
rcrl
xchg
enter
lcall
je
xchg
xchg
or
xlat
mov
fcmovu
hlt
fnstsw
fisttps
inc
adc
aad
popf
and
pop
mov
outsb
push
clc
out
jbe
int3
cli
mov
ja
ret
cwtl
push
iret
mov
subl
fcoml
jb
mov
jns
call
xchg
gs
or
and
jno
rcll
pusha
les
jle
jns
jg
rcl
enter
sti
cmp
insl
mov
push
test
mov
pushf
ja
mov
lret
out
xorl
mov
push
sahf
mov
ret
mov
xchg
cmc
mov
pop
out
adc
adcb
ljmp
lret
xchg
push
stc
dec
es
xlat
or
pop
fsubl
dec
nop
push
jg
loopne
lock
pop
jp
mov
jbe
push
mov
loope
hlt
in
add
inc
sub
repz
scas
pop
jno
fsubl
lds
xor
or
aas
sbb
pop
pop
into
lret
rol
or
adc
iret
xchg
push
pop
dec
xor
aaa
sbb
xchg
pop
add
fildll
sti
push
pop
mov
pop
sbb
pusha
fistpl
out
je
push
mov
xchg
pop
add
out
es
xchg
aad
sbb
push
or
jns
mov
daa
outsl
and
ljmp
jecxz
and
icebp
push
mov
in
or
lcall
jge
dec
jo
mov
mov
inc
aaa
sahf
xchg
shl
jl
mov
mov
addl
mov
ret
mov
stos
das
xlat
jnp
jbe
fstl
stc
arpl
xlat
mov
fisttps
out
inc
or
inc
shll
int
in
ljmp
notb
aas
insl
pop
cmp
add
je
cmp
adc
jns
vandpd
mov
dec
arpl
frstor
inc
pusha
dec
fbstp
xor
js
sbbb
loop
xchg
jbe
sti
xchg
cwtl
cmpsl
jl
nop
jmp
enter
cwtl
lret
xchg
mov
and
nop
cmp
lods
adc
cltd
push
jecxz
pop
adc
shrb
push
adc
mov
sbb
fidivs
dec
xchg
jmp
outsl
mov
xchg
dec
cltd
dec
hlt
sbb
push
mov
andl
jg
test
xchg
seto
or
sbb
les
scas
and
and
mov
or
leave
pop
pop
scas
sbb
or
fistpll
add
inc
or
pushf
aas
add
adc
cmp
outsb
clc
addb
push
inc
pop
aaa
or
pop
addr16
jecxz
add
loopne
cli
into
ret
gs
fimull
scas
or
or
adc
aam
mov
add
pop
pop
popf
jo
cmp
add
cmpsl
loop
sub
daa
cmp
add
imul
sbb
sbb
mov
xchg
xor
mov
test
mov
sbb
movsl
movsl
loop
or
in
outsb
xchg
add
sarl
xor
inc
das
in
xchg
jmp
cmp
sahf
dec
inc
lret
mov
add
pop
cmp
adc
loop
test
push
fcompl
adc
ret
std
pop
sbb
adc
mov
jo
and
insl
int
inc
sbb
xchg
pop
jecxz
rcrb
bnd
xchg
push
ja
in
mov
lds
push
jg
sub
pop
xor
adc
subl
dec
fwait
adc
adc
xor
inc
and
into
pop
pop
jle
dec
lcall
pcmpgtw
adc
rcl
dec
into
xchg
xlat
outsl
sbb
inc
andb
lds
outsb
addr16
lods
mov
stc
rcrb
and
mov
xchg
adc
pop
shll
outsb
leave
dec
or
rcl
inc
jmp
push
jecxz
fwait
mov
sbb
xor
mov
dec
mov
push
jae
fidivs
addb
sbb
inc
hlt
sbb
mov
insb
lret
cli
arpl
es
inc
adc
or
and
loopne
mov
test
outsb
push
pop
xchg
push
iret
in
int3
jle
pop
sub
mov
xor
xor
imul
in
mov
jg,pt
add
add
dec
sarb
cmp
imul
cli
fldenv
xor
popf
pushf
push
jecxz
das
xor
loope
fidivl
mov
push
shll
sti
in
repnz
and
gs
stos
call
data16
test
call
push
pop
push
test
test
push
popa
dec
inc
cmpsb
push
push
dec
ljmp
adcl
dec
mov
adcl
or
jo
dec
push
insl
sub
fisubl
mov
adc
mov
in
pop
jae
add
mov
jg
mov
mov
push
or
cmp
movsl
pusha
pop
sbb
mov
xchg
or
mov
lods
add
jo
scas
dec
push
fldlg2
xchg
stos
inc
adc
push
pop
mov
cltd
push
jecxz
push
aas
test
pop
mov
imul
andl
loop
pop
out
pop
add
and
add
mov
and
adc
xchg
ror
std
jmp
mov
test
pop
insl
pop
es
push
adc
add
daa
test
das
or
rcrl
outsl
adc
push
dec
mov
pop
movsl
outsb
inc
or
dec
out
inc
dec
push
pusha
add
fidivrl
mov
fiadds
cmp
mov
test
jge
sbb
cmp
lcall
icebp
movsb
xor
pop
jle
jl
pop
outsb
mov
iret
addb
movsb
les
int
pop
faddl
sub
outsb
sbb
adc
negl
mov
push
scas
or
data16
addl
fs
xchg
fdivr
jno
adc
in
cmp
pop
imul
mov
insl
adc
mov
inc
xlat
test
jp
insl
idivb
lea
and
mov
mov
scas
lahf
fcomps
mov
mov
add
mov
cmc
push
mov
sarl
test
je
out
push
mov
dec
push
jp
xor
fadds
dec
mov
scas
inc
jl
lods
push
cmp
into
or
jmp
inc
int3
mov
mov
fldenv
add
lahf
mov
shll
xchg
cmp
jle
push
out
jg
jp
inc
xchg
aam
xorb
addl
inc
sbb
add
fadds
xor
scas
adc
pop
popf
scas
lods
jbe
aad
mov
adc
jb
jecxz
mov
sub
dec
movsb
les
cwtl
inc
cs
divb
int
mov
fwait
adc
insb
lods
leave
in
cmp
cmpsl
mov
inc
pop
lahf
sbb
adc
dec
imul
dec
and
sbb
cs
int
mov
call
int3
data16
xorb
mov
scas
fistpll
lahf
dec
jl
mov
pop
into
loopne
adc
jo
and
divb
mov
push
lods
pop
cmp
inc
fistl
insb
sbb
aam
out
push
mov
movsl
enter
push
jne
adc
add
sbb
rorl
push
jno
push
cli
popf
pop
imul
jnp
adc
mov
push
mov
mov
addr16
jge
pop
xor
mov
mov
stc
jle
push
push
xorl
inc
xor
insl
jnp
or
jb
out
sbb
or
aad
andb
xor
mov
or
aad
sbb
mov
lock
mov
pop
les
pop
dec
sbb
testl
out
es
mov
adc
testb
jne
xlat
mov
mov
loopne
pusha
mov
jmp
add
xor
lret
out
cmpsb
and
cwtl
lds
testb
ret
add
mov
fs
mov
mov
adc
in
and
leave
push
cmc
je
out
clc
cltd
adc
cmp
pop
rorl
outsl
cmp
add
mov
inc
js
or
adc
pop
sub
idiv
data16
lret
out
pop
jb
aam
jb
pop
inc
test
aas
and
mov
xchg
adc
inc
mov
imul
sbb
dec
mov
pop
test
dec
cmc
inc
sahf
push
mov
adc
stc
push
jle,pt
and
push
jp
scas
sbb
pop
xor
repnz
jmp
loope
mov
xor
xchg
push
push
sub
xchg
es
sbb
dec
lods
rcll
push
lods
pop
mov
lcall
pushf
sbb
pop
jbe
xchg
jb
cmp
mov
pop
lods
pop
fadds
das
jmp
lret
ds
divl
cmpsl
xor
cmp
push
xor
fstl
imul
sbb
incb
and
int3
out
inc
mov
cmp
ret
inc
out
xchg
fidivrl
imul
cli
int
call
xor
sbb
movsb
fcompl
lods
gs
pop
rolb
mov
xchg
sarl
xchg
pop
stos
es
push
mov
les
mov
sub
data16
sbb
push
lds
ljmp
rorl
dec
and
push
out
scas
fstpl
add
inc
mov
rorb
cmc
xchg
push
pop
inc
ljmp
lods
mov
inc
outsl
out
pusha
arpl
or
or
mov
adc
and
sbb
enter
or
ljmp
mov
and
push
mov
mov
add
mov
xor
sbb
fidivl
loopne
es
ret
xor
mov
sbb
lcall
clc
addb
adc
dec
push
and
and
inc
enter
sbb
imul
or
jmp
dec
inc
push
mov
ljmp
or
aam
xlat
push
or
icebp
sub
outsl
ficoml
movsb
out
insb
fwait
addr16
lret
daa
lret
add
subb
inc
cmpsb
into
sbb
mov
mov
xor
push
lret
sahf
aad
push
xchg
sub
push
and
aam
push
mov
push
jmp
cmp
mov
xchg
fxch
rcr
mov
and
aas
int3
dec
lock
push
adc
or
adc
jns
cld
mov
xor
xchg
push
test
push
push
push
arpl
jge
mov
pop
mov
stc
movsl
xor
push
in
mov
inc
lahf
xchg
add
mov
or
mov
insb
mov
xlat
je
imul
and
push
pop
fiadds
cmpsb
sarl
xchg
pop
mov
cli
pop
mov
into
or
es
mov
imul
mov
jg
or
jno
sub
loopne
dec
insb
or
mov
pop
data16
js
sub
jl
sub
cmp
push
push
mov
mov
jns
imul
inc
xchg
push
add
testb
cmp
pop
repnz
lcall
shl
movl
movsb
xchg
xor
add
mov
adc
jns
add
mov
mov
add
imulb
cmp
add
lods
icebp
sbb
das
push
rcrl
in
pop
add
cmp
pop
dec
xchg
fdivr
stos
sbb
out
in
or
clc
push
pop
arpl
push
loop
adcl
sahf
mov
adc
addl
jae
sub
bound
xor
sbb
add
sub
push
jbe
fldenv
jp
pop
xchg
mov
enter
mov
imul
xchg
rorl
jbe
and
mov
jo
xor
sbb
iret
add
xor
xchg
je
cmp
cmpsl
pop
xor
stos
xor
es
rorl
rcl
jmp
xor
in
in
aaa
xchg
pushf
bound
mov
dec
dec
xchg
xor
pop
decb
mov
mov
sub
call
lahf
cmp
pop
imul
jo
pop
cmp
pop
push
mov
test
ja
lods
mov
cltd
or
adc
std
out
jl
inc
jp
pop
inc
mov
in
mov
std
jae
dec
xor
pop
push
pop
add
sub
jmp
aas
sub
sti
dec
aad
sub
dec
stc
jo
fnstsw
adc
and
pop
aam
int
pop
std
sub
call
mov
mov
leave
cmp
or
mov
mov
fsubr
and
std
xchg
cmp
sarb
cmpsb
mov
pop
popf
mov
adc
xor
inc
xchg
xor
sbb
outsb
clc
add
mov
lahf
and
add
loope
fsubrl
xor
mov
jae
shlb
stc
fdivl
bound
scas
mov
inc
call
or
sbb
mov
xor
call
cmp
in
cmpsl
dec
jg
pop
push
into
lcall
pop
cli
insl
add
js
xor
xchg
subl
mov
cmc
dec
cmpsl
push
in
inc
push
pop
sbb
xchg
jmp
cmp
push
add
sub
and
sbb
out
inc
insb
or
inc
sbb
ficompl
mov
cmp
mov
mov
lret
inc
jmp
fsubl
sti
and
loopne
cmp
cmp
or
ficoml
mov
roll
sbb
inc
aam
adc
xchg
testb
inc
xlat
mov
sub
arpl
fiaddl
test
insl
jns
adc
out
dec
xchg
das
ret
icebp
je
xchg
jp
jne
movsl
pop
ret
cs
popf
in
mov
sar
movsb
test
inc
ret
push
pop
mov
xor
repz
add
fldl
repz
cwtl
mov
jno
stc
and
dec
xchg
mul
movsl
dec
xorb
mov
int
adc
and
xor
sbb
scas
xor
fmull
roll
loop
lods
adc
outsl
cmp
movsl
xchg
mov
cmp
mov
inc
imul
add
xchg
loop
xchg
bound
fildl
pop
call
ds
xchg
and
inc
or
or
dec
fadds
pop
pop
adc
loopne
jl
dec
push
push
repnz
xor
add
sbb
fisubs
pop
inc
push
add
pop
xchg
cs
lahf
outsb
ja
adc
mov
ss
mov
jnp
jno
mov
push
ja
adc
jae
mov
xor
mov
jp
inc
mov
jnp
jbe
mov
and
nop
test
jmp
jp
add
xor
lret
daa
gs
mov
sub
fstps
jg
mov
test
sub
loope
jne
shlb
outsb
mov
mov
inc
or
adc
push
sbb
insb
mov
out
mov
lret
out
push
jo
mov
fcmovnb
shlb
pop
aas
aaa
int3
or
xor
pushf
lahf
cwtl
popf
loope
fwait
gs
frstor
sbb
sub
sbb
cmpsl
jnp
into
adc
aaa
xchg
mov
xchg
pop
clc
or
ret
sti
or
dec
movl
pop
xor
out
or
add
call
insl
stos
mov
inc
jno
mov
nop
cmpsb
dec
in
and
loope
outsb
jp
orb
stos
popf
jmp
out
cmpsl
mov
jns
stos
push
xchg
jb
cmp
fisubl
sbb
outsl
mov
in
out
shrb
push
sbb
in
nop
lods
sbb
push
jge
cmp
and
rcll
imul
incb
leave
andl
ljmp
or
lcall
adc
nop
sub
jb
mov
jns
pop
mull
jle
adc
jae
push
or
push
bound
dec
dec
hlt
out
xor
mov
neg
pop
cmpsl
or
dec
mov
stos
ss
adc
inc
rcl
add
fidivs
cmp
mov
ffree
xorb
pop
xchg
and
xor
push
fcmovnbe
je
dec
sbb
andl
imul
mov
or
jb
nop
out
sbb
imul
pop
cmp
jmp
push
jns
fidivrs
fcoms
dec
mov
dec
enter
andb
push
and
popa
lahf
es
sub
lea
ror
test
cmp
cltd
lcall
sub
andl
sbb
xor
enter
cmp
dec
mov
add
test
lahf
in
or
in
push
and
inc
test
mov
push
lock
mov
push
jg
add
mov
push
cmp
mov
sub
imul
out
or
int
mov
xchg
sub
jle
fisubs
bound
fs
cwtl
lea
es
cltd
push
jg
outsl
daa
fstpt
push
xor
mov
xchg
push
int
popf
dec
addr16
pop
adc
fisttpll
pop
cmp
sbb
mov
cmp
mov
jg
and
aas
les
and
sub
mov
mov
sbb
jg
add
add
and
stc
les
mov
lock
mov
xor
mov
sbb
push
cmp
xchg
aam
xchg
test
mov
mov
inc
push
inc
jne
mov
incb
andl
cmp
pop
sub
lea
mov
int
push
dec
jnp
lods
xchg
xchg
or
int
pop
jge
mov
jmp
aaa
sbb
pop
dec
mov
add
mov
add
filds
adcb
cmp
pop
pushf
sub
outsb
push
mov
add
push
or
mov
in
adc
or
push
or
mov
outsl
add
jmp
jne
das
or
stos
out
or
out
lods
add
add
push
sarl
insb
mov
pop
dec
imul
and
lret
mov
subb
lods
cmp
sbb
faddl
std
add
imul
repnz
ds
mov
dec
add
sub
std
mov
lahf
or
enter
or
fisttps
fdivrs
pop
dec
movsb
test
lahf
push
dec
pop
jnp
inc
jl
inc
int
fsubl
stos
xor
in
push
mov
in
shl
js
fstps
outsb
aaa
pop
daa
cmp
lods
gs
mov
in
lods
out
mov
cmp
push
and
int
mov
push
stc
daa
adc
sub
subl
shl
lret
sub
sub
push
roll
movsb
or
mov
xchg
inc
test
xlat
and
push
and
fcmovbe
lds
sub
sbb
repz
mov
inc
stc
mov
push
movsb
subl
negl
je
jle
mov
jge
in
jmp
or
idivl
data16
or
cmp
xchg
mov
lret
jp
std
sub
sbb
std
pop
pop
mov
outsl
test
xchg
inc
sbb
fdivl
and
gs
gs
aam
fwait
mov
in
fnstcw
add
into
mov
sbb
psrld
mov
std
jnp
jl
xchg
cmpsl
push
cmpsb
sbb
push
cmpsb
pop
lods
jle
out
cmp
scas
test
cmp
pop
add
sub
mov
xor
cwtl
ret
leave
adc
xorl
mov
ret
sbb
xchg
int
mov
ljmp
mov
mov
dec
xlat
lods
std
outsl
xor
in
sub
bound
cmpsl
push
push
adc
jecxz
pop
push
daa
mov
in
mov
push
ss
xor
lahf
push
fxch
leave
cmp
mov
popa
es
mov
stc
aam
adc
and
aad
mov
sub
xchg
lea
and
push
fnsave
inc
cwtl
push
mov
nop
mov
push
repz
cli
xchg
enter
mov
ficompl
push
inc
rcrl
cmc
ljmp
mov
addr16
jl
popa
ret
mov
in
mov
shll
sar
cmpb
jl
mov
mov
pop
pop
xlat
sbb
aaa
mov
pop
mov
dec
lea
ret
pop
mov
clc
push
dec
mov
fs
or
or
xor
jp
sub
or
daa
inc
fstl
dec
test
push
mov
rcrb
push
push
imul
cwtl
aas
mov
or
xchg
sbb
icebp
push
pop
lret
test
call
movsl
cmpsb
jnp
pop
pop
cmp
push
fucom
leave
lds
mov
loope
popf
jl
mov
inc
pop
jl
or
mov
movsl
adcl
rol
lock
addr16
fisttpl
scas
addr16
mov
pop
add
jecxz
mov
mov
xor
dec
xchg
sbb
mov
mov
cmc
popf
loop
inc
es
int
jnp
mov
leave
bound
push
pop
rorb
jbe
jae
adc
insb
arpl
and
int3
jno
inc
fisubs
mov
jns
mov
sub
pusha
divb
test
mov
add
lahf
inc
sub
mov
std
cmp
lds
xor
clc
addl
mov
fdivl
inc
cmpsl
ja
inc
sub
dec
sbb
pusha
gs
mov
out
sub
lock
cmp
pop
loopne
stos
in
dec
cli
xchg
shlb
dec
inc
div
mov
aaa
push
mov
and
outsb
dec
in
rcll
xor
ljmp
xchg
mov
cs
ficomps
lret
dec
cwtl
jne
xor
je
xchg
pop
lds
mov
stos
aaa
dec
hlt
add
xor
sub
popf
std
jle
mov
sbb
pop
and
cltd
cwtl
mov
inc
imul
mov
ja
jmp
mov
push
call
test
add
push
dec
test
add
and
gs
popf
imul
or
das
cmp
jbe
jg
mov
jb
scas
out
std
pop
xlat
sub
adc
and
xchg
adc
pminub
or
xor
iret
fwait
pusha
adc
fdivrl
jmp
pop
mov
inc
xchg
sub
lcall
divl
ja
dec
fstpt
pop
cmp
cmpsb
xchg
int3
push
cs
jmp
xchg
test
dec
aas
loopne
cmpsl
pop
add
mov
pusha
out
arpl
test
mov
fidivs
jns
xchg
popa
xchg
ds
sub
in
mov
push
push
imul
xchg
add
dec
jle
add
lock
stos
or
xor
inc
into
fwait
mov
mov
mov
xchg
leave
aad
test
sahf
into
sbb
js
fadd
clc
push
cmpsl
pop
xchg
divl
xchg
jb
cltd
xchg
cmp
adc
shlb
nop
xchg
push
idivb
rcll
out
mov
xchg
loope
mov
add
bound
or
mov
pop
repnz
xchg
mov
or
dec
pop
jp
push
jne
rolb
fidivrl
add
sub
and
lock
das
inc
inc
cmp
sbb
jno
xor
cmp
mov
jns
lods
sbb
or
sahf
sbb
nop
popa
mov
testl
or
xchg
ss
pop
push
movsl
jnp
mov
or
and
mov
out
aas
add
add
aad
or
mov
xchg
dec
out
shrb
lds
test
xor
mov
pop
jnp
ret
sub
dec
inc
ret
je
push
movsb
in
int3
or
xchg
call
or
jmp
out
cmp
imul
jo
lcall
int
pop
iret
imul
mov
sub
add
frstor
lods
arpl
sub
adc
mov
arpl
test
repnz
mov
cwtl
arpl
sub
push
ss
je
imul
ret
cwtl
push
jbe
lahf
adc
addl
sbb
dec
sarb
lret
or
enter
nop
fisubl
idivb
mov
pop
lret
cmp
lods
inc
mov
je
push
js
push
arpl
sub
repnz
pop
fldz
into
mov
push
popa
les
xor
arpl
mov
jne
arpl
mov
jl
sbb
in
and
dec
pop
es
dec
dec
cmp
jge
iret
daa
subb
add
emms
jbe
mov
push
cs
dec
loopne
pop
lds
test
es
aaa
xor
test
cltd
ficomps
pop
das
sbb
andl
jecxz
mov
ss
sbb
xchg
inc
cwtl
stc
into
call
xchg
es
pushf
jp
cli
std
sub
xchg
push
std
jg
mov
shll
movsl
jmp
rorl
cmp
sub
xor
cmp
out
jge
mov
cmpb
lret
or
in
or
sub
jmp
cmp
mov
test
aad
in
mov
jns
nop
xchg
jmp
xchg
jbe
and
mov
in
jmp
into
mov
out
imul
push
xor
mov
sub
xchg
out
scas
pop
jl
stc
andl
popa
mov
jl
xchg
sbb
jg
lock
or
inc
lret
bound
sti
cwtl
pop
xchg
mov
push
movsb
adc
jle
sub
jo
daa
dec
lods
leave
cltd
sub
cwtl
fcompl
iret
xchg
ss
ret
inc
xor
or
aam
cld
inc
imul
ja
adc
hlt
add
neg
incl
xor
mov
fwait
mov
sbb
arpl
mov
xlat
xchg
lds
enter
adc
shll
bound
push
ja
mov
lcall
ret
imul
rolb
jae
sbb
push
nop
inc
ret
cltd
unpcklps
cmpsb
mov
in
adc
loope
loope
sbb
push
sbb
dec
push
stc
pop
mov
mov
fpatan
popf
sbb
mov
jne
out
add
cmpsl
mov
adc
cmp
add
xchg
lds
pop
repz
mov
mov
mov
inc
daa
cmpsl
adc
lock
aad
stos
inc
nop
lea
and
adc
mov
outsl
jmp
fisttps
mov
inc
and
mov
pushf
fidivrs
or
int
jecxz
mov
enter
pop
scas
pop
sub
mov
jb
movsl
push
xor
sbb
cmpsb
dec
mov
cmc
sbb
pusha
ret
mov
fiaddl
scas
out
test
and
sti
mov
mov
jae
shl
fwait
in
push
int3
mov
dec
xlat
mov
movsb
mov
cmp
add
scas
cltd
pop
imul
inc
outsl
cmp
xchg
mov
jl
imul
mov
hlt
inc
pop
sbb
pusha
inc
ror
and
xor
cltd
jge
pop
loop
dec
cld
sbb
cmp
adc
mov
dec
mov
add
fistpll
jne
cmp
jnp
sti
push
ficoms
aas
mov
insb
mov
xorb
ss
jmp
loope
cltd
pushf
inc
out
cmp
out
jo
cmpsb
aas
pushf
dec
and
adc
jp
add
dec
mov
pop
test
aad
cmpl
xchg
scas
in
and
sbb
insb
mov
cmpb
jno
pop
inc
inc
bound
outsb
repnz
sub
out
push
pop
or
xchg
test
stc
shlb
add
fcoml
roll
xchg
push
std
xor
mov
inc
insl
mov
jno
mov
cmc
mov
insl
mov
push
out
push
pop
and
inc
insl
mov
jge
xchg
ja
popa
sub
aad
test
ret
adc
adc
nop
out
push
scas
and
out
sbb
roll
inc
sahf
lret
gs
popa
cmp
xchg
aas
into
and
inc
inc
ds
sub
jnp
dec
cmpsb
cmp
and
lock
adc
jecxz
les
jns
jno
stos
or
mov
aaa
mov
mov
movsl
inc
int
jmp
mov
cwtl
cwtl
lahf
jbe
and
cmpsb
mov
in
jge
lea
cli
ljmp
js
xorb
dec
xchg
pop
shrb
pop
xchg
sub
xchg
movsl
sub
inc
stc
jl
ret
sbb
lods
repz
inc
sahf
cmp
xchg
pop
mov
mov
jecxz
push
sbb
mov
ss
push
and
scas
pop
ds
rorl
jae
xchg
and
sbb
xor
push
or
out
xchg
fwait
imul
fstpt
insb
sbb
add
lcall
and
xlat
add
pop
str
mul
dec
xor
xor
movsb
jl
inc
lea
adc
jl
andb
mov
mov
aaa
insb
fcoml
jnp
shr
js
dec
mov
adc
popl
aaa
pop
faddp
xor
mov
mov
cmp
sbb
imul
jg
inc
fcomps
into
sbb
push
movsb
xor
fldcw
gs
xchg
sti
mov
lret
out
xchg
push
xor
mov
popa
imul
mov
in
mov
jg
xor
push
cltd
xchg
sbb
jg
and
xchg
int
and
mov
jbe
jnp
and
push
add
inc
jmp
js
push
xchg
lea
sub
mov
inc
cmp
push
inc
andl
leave
or
shl
cli
or
jb
cmpsb
add
mov
scas
icebp
cli
mov
imul
test
fisubrl
pop
fs
fxch
std
pop
loop
data16
les
pop
xchg
or
mov
sahf
mov
mov
outsl
out
or
out
mov
xchg
or
nop
xor
xchg
cmp
ss
add
ret
adc
pop
jo
sti
inc
test
xchg
push
add
aam
nop
lea
dec
xor
mov
push
push
pop
pop
ss
and
outsb
pop
mov
adc
insl
jnp
xchg
push
in
lret
add
add
rorb
jb
cwtl
add
sub
cmp
jg
sbb
jb
jl
lds
push
jno
addr16
dec
ljmp
jmp
push
pop
xchg
dec
imul
hlt
incl
js
cmp
lcall
jns
push
sbbl
cmc
in
mov
negb
or
sbb
push
nop
enter
xchg
sub
push
cltd
inc
clc
mov
lods
shll
aaa
in
mov
and
add
mov
iret
adc
push
or
xchg
pop
je
add
ficoml
add
shlb
sahf
repnz
movsb
je
mov
sbb
sbb
inc
test
dec
xor
or
sub
jmp
rcrb
mov
sub
lcall
mov
int3
lcall
dec
std
push
xchg
dec
mov
pop
sbb
ss
push
push
sub
mov
lret
pop
dec
inc
rcll
sbb
inc
dec
adc
jmp
xchg
inc
out
lret
cmpl
or
jno
test
insb
call
dec
and
sub
sbb
add
aaa
mov
jmp
vpaddusw
mov
mov
aaa
stc
enter
mov
dec
hlt
loope
or
push
add
pop
add
sar
std
dec
dec
dec
adc
mov
in
or
or
ret
sub
fstps
mov
int
repz
enter
in
insb
scas
xchg
rcll
mov
add
and
xchg
and
loope
mov
jge
inc
je
test
jae
popa
fdivr
push
aaa
xor
push
dec
mov
or
jle
jp
cmp
out
arpl
sub
mov
mov
inc
out
out
cmp
add
vshufpd
scas
fidivrs
jecxz
add
sub
inc
or
push
lahf
xchg
aaa
adc
popa
insl
mov
fwait
in
pop
pop
ret
cmp
dec
test
incl
in
dec
arpl
shr
lea
in
out
aam
adc
sbb
lret
xchg
mov
push
cld
inc
or
es
scas
sub
push
jo
sar
pop
or
mov
movb
add
jno
lret
mov
fmull
inc
adcl
adc
xchg
adc
sbb
jle
sbb
mov
mov
loop
jae
adc
push
addl
mov
pop
shlb
dec
iret
jp
mov
cmpsl
inc
cmpl
push
pop
fcoml
mov
repz
and
enter
xchg
pop
loop
outsl
sub
mov
mov
js
ss
sbb
ss
mov
sub
stos
in
dec
fisubrl
fdivl
inc
out
int3
mov
in
cltd
push
shr
data16
in
push
xchg
mov
outsb
insl
cwtl
sub
inc
pop
sti
mov
lock
mov
icebp
add
adc
mov
ss
mov
xor
jg
pop
adc
jl
or
jg
stos
push
lods
outsb
in
cwtl
xchg
mov
add
pusha
mov
or
sub
pop
and
push
jp
adc
xor
movsb
push
mov
sti
cmp
push
add
popf
xor
inc
mov
fsubs
xor
xlat
push
mov
xchg
xchg
jno
outsb
cld
xchg
or
inc
lock
mov
inc
pop
xchg
jmp
add
or
adc
cmp
cmp
jg
xor
and
mov
pop
lods
or
or
divb
sbb
scas
sub
lock
lea
cmp
inc
mov
ds
imul
lods
loop
cli
hlt
stos
mov
clc
loopne
andl
and
lods
sub
fisubs
jge
jecxz
mov
jp
std
or
sbb
or
movsb
xor
repnz
xor
mov
movsb
pushf
or
fimuls
jl
pop
mov
ja
scas
loope
push
data16
scas
xor
pop
push
inc
pop
scas
rcll
mov
dec
cwtl
out
jnp
jmp
push
xor
inc
out
je
sub
outsl
fldl
rcl
jmp
ret
sub
mov
cmp
outsl
popa
cwtl
and
pop
hlt
xchg
cmp
ret
lret
subl
ret
push
inc
leave
fxtract
stos
aad
fs
mov
push
pop
pop
sbb
sub
cmc
call
inc
out
sub
cmpsb
sbbl
lock
jle
mov
and
stos
dec
jecxz
lea
pusha
arpl
mov
dec
in
sub
sarl
add
inc
sbb
adc
test
sub
add
or
stos
or
cmpsl
push
ljmp
int3
xchg
test
push
lahf
mov
cmp
adc
or
fcom
add
ds
data16
push
negb
push
push
fcompl
push
sti
pop
push
pop
ftst
loopne
or
scas
adc
xor
outsl
or
ljmp
add
sbb
insl
inc
ficoml
sub
dec
lret
or
cmp
mov
leave
mov
int
mov
jbe
pop
ret
in
popf
fisubl
xchg
shl
aad
and
cltd
in
jae
pop
out
xchg
sbb
nop
or
mov
pop
scas
aas
cmp
and
adc
repnz
add
push
rcrl
xor
out
cmp
add
in
std
lods
out
popa
pop
decb
sub
push
mov
into
shlb
int3
mov
mov
inc
fidivl
push
cmp
cmp
jae
rcl
xlat
jmp
dec
mov
repz
pusha
fldenv
leave
and
fildl
inc
test
push
rcrl
add
sbb
push
jl
in
addr16
mov
data16
cmp
sbbl
mov
and
mov
lret
in
sbb
lret
insl
and
mov
or
lods
lods
xor
in
or
je
adcl
dec
insl
pushf
inc
xlat
mov
adc
cmp
sbb
jp
aad
inc
xor
push
cmp
dec
sub
lods
scas
cli
test
lret
shr
push
mov
xchg
mov
push
xchg
in
jl
leave
dec
rorl
out
ret
movsb
mov
and
inc
add
mov
mov
out
sub
out
lret
lret
roll
in
movsb
les
scas
inc
jle
imul
push
orb
jno
adc
sti
cs
call
fs
xor
push
jne
pop
mov
inc
jno
and
das
scas
xor
cltd
outsl
cmp
push
iret
addr16
inc
push
test
add
xor
fwait
or
and
je
outsb
and
shll
xor
mov
jno
ret
mov
sarl
js
mov
jne
popa
jbe
outsb
or
mov
das
xlat
cld
dec
jg
and
pop
loop
cwtl
stc
jle
sbb
js
fwait
adc
incb
out
inc
xchg
adc
mov
divl
lahf
cmpsb
or
in
or
pop
cmp
test
inc
pop
es
ret
shll
in
or
pushw
leave
rcll
mov
add
add
and
xchg
mov
pop
mov
fiaddl
cmp
lret
ja
cli
lock
sbb
int3
int3
xchg
imul
cli
std
add
add
loope
or
push
lret
arpl
adc
popf
dec
jge
jns
or
jp
lock
sbb
fdivrs
jp
fisubrs
add
mov
pop
leave
in
dec
out
mov
iret
adc
push
mov
stc
jbe
push
int3
mov
cli
mov
sbb
mov
test
inc
shlb
das
push
ss
shl
pop
out
cmp
mov
xor
fs
or
sahf
pop
test
into
mov
jne
popa
inc
test
or
lea
jbe
xchg
jns
mov
pop
icebp
je
mov
xchg
add
push
scas
xor
cmp
das
add
pop
push
repz
and
jne
xor
outsl
fstl
pop
dec
ret
jb
jne
inc
mov
add
sub
and
cmp
add
mov
xor
lods
aas
jbe
push
push
leave
aaa
push
insl
push
clc
lahf
mov
cltd
jl
je
or
mov
out
mov
loopne
shrl
sbb
fidivrs
dec
fsubs
insl
inc
fwait
in
rorl
aas
xchg
ss
cmp
and
dec
insl
sbb
mov
cli
or
sti
sbb
add
in
fiaddl
dec
lret
pop
shlb
ret
out
lods
ret
data16
aam
or
lds
xor
call
ss
adc
mov
shrl
pop
ljmp
fwait
dec
sbb
sarb
mov
dec
push
repnz
fstpl
push
fsubrs
pushf
dec
or
call
mov
scas
add
sbb
push
repz
mov
inc
in
mov
leave
mov
outsb
es
xor
fsubrl
int
scas
dec
cmp
jmp
xchg
mov
fwait
pop
dec
cmpb
ret
xor
test
add
inc
adc
mov
xchg
in
call
ds
or
icebp
sbb
pushf
in
mov
fs
nop
test
mov
add
out
leave
cli
jge
xor
out
xchg
mov
sti
or
mov
and
icebp
mov
inc
xchg
cmpsb
aas
jl
or
cmp
out
push
stos
mov
loop
inc
push
add
lahf
in
mov
mov
pushf
addr16
call
inc
and
sbb
andl
and
adc
push
dec
cmp
fs
xchg
out
inc
mov
out
repnz
dec
dec
jmp
push
sub
ds
mov
cmp
sti
xor
ljmp
sub
adc
mov
mov
jmp
push
cmc
lods
outsl
shlb
or
pusha
mov
fwait
dec
and
and
sahf
arpl
popf
int
xchg
and
rcll
sub
cltd
loopne
lds
and
or
adc
inc
out
adc
sub
pop
sbbl
sub
sti
pushf
add
testl
dec
lret
xor
outsl
push
mov
arpl
cmp
inc
lea
jp
clc
adc
mov
or
jge
jge
test
lcall
mov
and
xor
add
jae
push
and
cmp
sbb
je
lock
repz
aaa
mov
add
pushf
pop
jle
jle
lcall
mov
cmp
mov
out
stos
xlat
sbb
data16
leave
sbb
aad
out
push
lret
xor
es
out
inc
lcall
adc
lcall
pop
add
mulb
mov
addl
push
or
js
xchg
mov
or
lea
clc
dec
inc
pop
lods
jl
mov
stos
out
out
hlt
imul
dec
ret
or
ja
jb
roll
push
pop
bound
dec
inc
sti
xor
test
push
hlt
pop
adc
push
jbe
dec
inc
and
loop
cmc
push
lods
mov
push
rolb
scas
dec
jnp
adc
add
sti
cmc
ja
add
xor
sbb
cmc
add
mov
push
out
pop
pop
inc
jb
and
scas
pop
jge
pop
xor
add
shlb
sbb
lahf
mov
fcmovu
out
dec
lret
or
mov
cmpsl
or
rcrl
adc
mov
mov
or
mov
xor
xchg
and
fwait
movq
lret
sub
dec
jne
es
xchg
xor
inc
pop
scas
push
haddps
jecxz
jg
push
into
call
inc
nop
fwait
int3
test
cld
or
xchg
out
jno
xchg
clc
std
inc
mov
fdivrs
lret
and
cmp
xchg
sub
push
jno
xchg
xor
pop
mov
shlb
sub
mov
iret
push
lea
or
lret
lock
mov
jae
mov
mov
fidivs
fxch
imul
rorb
mov
mov
rolb
insl
xor
pop
clc
addr16
ds
push
adc
cmp
mov
mov
cmc
loopne
adc
lahf
or
dec
lcall
xor
aaa
pop
adc
lcall
adcl
push
and
out
mov
xchg
negl
insl
nop
out
sbb
das
in
mov
jns
addl
sbbb
subb
pushf
pop
jmp
loop
ds
jns
pop
or
fldcw
mov
jmp
out
ret
aam
cmpsl
mov
es
xchg
test
stos
ja
test
sub
pop
pop
mov
inc
imul
stos
insb
sahf
movsb
and
subl
and
inc
sbb
xor
idiv
test
mov
xchg
push
inc
ja,pn
inc
hlt
scas
mov
sbb
jnp
cmpsb
sub
mov
xchg
jp
push
mov
or
subb
sbb
mov
insl
test
cs
sbb
mov
mov
jnp
xchg
out
imul
rorb
mov
inc
cmpsb
jo
cmovae
dec
add
xor
push
movsl
out
xchg
mov
xchg
sti
sub
push
jg
lods
mov
getsec
test
xchg
sbb
dec
shr
mov
int
sbb
sub
les
inc
sahf
mov
fnstsw
int
sbb
jo
mov
xor
xor
mov
push
fstpl
js
sub
jns
sbb
aas
fsubrs
mov
jne
jge
ret
and
sbb
sti
jnp
mov
popa
in
push
fdivl
scas
and
popa
rcll
cmc
clc
push
loopne
cmp
in
clc
sub
sti
mov
xor
add
jns
jo
fisubs
xchg
test
cld
inc
outsb
push
pop
mov
ret
nop
sub
cmpl
add
xchg
decb
dec
inc
adc
inc
push
push
call
xchg
mov
jge,pn
inc
cmp
test
test
jl
pop
loop
pop
cltd
imul
dec
loop
mov
pmaxsw
or
cmp
cmp
dec
and
pop
cltd
out
jo
and
xchg
dec
sbb
sub
cli
cmp
js
sub
mov
pop
add
pop
lret
aas
sub
adc
pop
arpl
add
mov
ret
sbb
enter
mov
ljmp
mov
aam
pop
pop
sbb
sbb
inc
sbb
arpl
iret
inc
xchg
test
enter
dec
jg
loopne
xlat
sub
or
push
xor
mov
pop
xor
jecxz
cmp
mov
fdivrl
les
lret
and
in
pop
push
rcll
or
into
pop
dec
mov
push
sti
sub
lods
xchg
push
mov
push
in
mov
lret
test
sub
add
aaa
jnp
xor
loope
fsts
lods
inc
jg
ret
sub
inc
mov
jmp
out
pop
out
dec
imul
xchg
jge
in
xor
loopne
sub
cltd
pusha
mov
fmuls
sbb
sbb
mov
es
lldt
fwait
xor
jns
arpl
mov
ljmp
or
xchg
cltd
xor
pop
inc
jae
aam
push
mov
mov
jo
lea
in
aas
dec
mov
mov
dec
ja
xchg
inc
fimull
jp
lcall
ds
loopne
add
pop
aaa
lret
push
jmp
and
jle
mov
out
sti
aam
xchg
shr
addr16
inc
cmp
or
lret
sub
sti
clc
sub
xchg
jl
push
mov
scas
xchg
popa
loopne
cmpsb
cmp
add
jmp
pushl
out
adc
add
adc
fmuls
in
jmp
lods
bound
adc
jmp
jnp
push
in
pop
into
and
inc
insl
jnp
cmp
popa
jge
shll
stos
or
call
stos
jmp
cmpsl
sti
addr16
cmp
fldenv
shlb
jecxz
push
xchg
fcoml
int3
out
jb
add
push
sbb
or
xchg
mov
cltd
or
addr16
xor
adc
das
mov
mov
std
cmp
jnp
cmpsl
jle
insb
jb
cmp
sahf
stc
cmp
mov
pusha
add
movsl
test
repnz
ret
loope
mov
xchg
jbe
xchg
arpl
jecxz
fidivrs
lcall
push
mov
pop
pop
mov
gs
inc
pop
inc
inc
fs
mov
out
out
sbb
aam
popa
pushf
iret
dec
push
jbe
inc
bound
sub
xchg
cmp
add
cli
xchg
push
shlb
les
mov
loopne
xchg
inc
fs
mov
fwait
or
cmp
outsb
xor
sub
fs
push
mov
outsl
sbb
mov
push
add
sub
pop
xchg
push
cwtl
mov
cmp
sub
sub
cmpb
out
cld
pop
test
push
pop
aaa
dec
xchg
and
mov
into
xchg
mov
sti
test
mov
sbb
sbb
push
mov
cwtl
lods
xchg
fwait
mov
cmp
sar
loope
orb
add
aaa
dec
xor
xchg
jl
popa
fisttpl
xchg
aam
mov
pop
pop
push
inc
inc
lahf
jbe
push
pop
in
cmp
cmp
lods
xchg
push
daa
pop
scas
setns
fs
dec
mov
insl
fists
xorb
inc
movsb
insl
andl
jecxz
sub
cltd
push
mov
adc
pop
mov
mov
das
fsubrl
add
push
sub
mov
int
add
or
push
je
mov
xchg
dec
clc
dec
sub
and
push
inc
jo
enter
icebp
jns
fdivs
lret
and
std
loop
int
and
xchg
mov
cmp
or
aas
or
cmc
jne
add
in
sub
pop
cmpsl
add
inc
inc
inc
jno
inc
pop
jne
dec
fnstcw
es
xchg
stc
sbb
leave
pop
iret
jnp
mov
fildl
push
cmpb
jae
loope
in
jno
add
adc
dec
sti
and
das
test
mov
test
sbb
mov
inc
mov
adc
inc
dec
mov
push
sti
and
push
out
or
sub
adc
fwait
dec
cwtl
and
xor
add
js
outsb
cltd
xchg
mov
stc
jle
scas
cmc
orl
in
pusha
lcall
stc
and
add
pop
js
rclb
xchg
or
push
outsw
xlat
bound
push
mov
or
mov
push
mov
or
cmp
xor
ficomps
xchg
dec
test
test
shl
cmp
in
inc
mov
inc
dec
push
cltd
sub
or
sbb
push
jmp
add
hlt
in
adc
pushf
loopne
jmp
insl
aad
xchg
mov
lahf
jl
cwtl
mov
sub
insb
das
inc
out
popa
dec
aad
repz
cmp
stos
cmp
daa
push
scas
sti
sbb
jp
xor
push
out
or
imul
pushf
push
inc
add
ficomps
sub
imulb
pop
mov
mov
or
dec
fimuls
fdivr
not
fmull
out
shlb
and
lea
jo
adc
mov
daa
aas
stos
inc
cmp
popf
test
lcall
mov
int3
cli
data16
pusha
outsb
sub
and
pop
mov
enter
add
mov
inc
cmp
inc
push
cltd
or
mov
dec
cmp
or
mov
jns
ja
lods
jecxz
jnp
mov
jle
mov
and
cltd
stos
cmc
or
xchg
dec
cmpps
mov
in
jge
ds
sahf
aaa
js
lock
mov
into
jl
pop
pop
mov
sbb
cmp
xchg
loopne
dec
xlat
mov
stos
popf
push
inc
sub
out
stos
xlat
repz
fwait
sbb
fs
dec
sub
lock
push
jae
push
dec
push
jecxz
movsl
mov
mov
sub
cwtl
inc
popf
push
xadd
adc
int3
or
cltd
je
mov
inc
sti
add
jns
inc
jecxz
mov
jg
or
fs
push
repnz
lahf
cmp
rcrb
add
mov
out
ret
xor
sahf
cmpsb
stos
xchg
pushw
pop
adc
aaa
icebp
pop
mov
in
mov
shll
call
cltd
mov
and
cld
and
xor
pop
dec
scas
cmp
xchg
inc
adcb
pop
shlb
xchg
stos
jecxz
sbbl
repnz
dec
mov
or
in
lods
dec
push
inc
jmp
aaa
fdivrl
sub
mov
pop
sbb
js
ret
scas
fildll
addl
fsubl
gs
adc
cmp
xchg
or
testl
jae
xor
shlb
and
jmp
xchg
dec
sub
mov
nop
fsubrl
repz
xchg
push
xor
xor
cltd
inc
add
inc
int3
clc
sbb
sub
sub
in
jp
lret
or
add
and
xor
sub
xorb
and
inc
mov
shr
xchg
mov
movsb
ss
add
jne
inc
out
dec
add
pop
decl
ds
sbb
aas
sbb
cltd
cmp
pop
loope
lods
lods
mov
xchg
pop
ss
inc
or
dec
mov
mov
imull
cmp
fs
call
movb
je
faddl
sahf
stos
adc
or
cmp
nop
lahf
in
insb
dec
lods
pop
mov
and
dec
sub
inc
jmp
xor
xor
mov
ss
lea
add
sbb
mov
mov
inc
jbe
sub
out
pop
push
das
fwait
or
cmc
xchg
ljmp
bound
pop
fst
stos
adc
dec
xchg
ljmp
leave
into
cwtl
mov
push
arpl
xchg
sub
xor
es
shll
sub
scas
loop
insl
xchg
mov
jmp
cmp
repnz
repnz
jecxz
icebp
xchg
jb
inc
test
pop
aam
imul
addr16
lret
insl
mov
filds
sub
shl
mov
repz
push
jmp
xchg
addb
fldt
std
push
mov
push
jmp
jno
and
xor
adc
dec
pop
inc
jp
cwtl
fnstsw
sub
out
sahf
out
xor
dec
jecxz
iret
loope
scas
clc
into
adc
cltd
push
cs
mov
rol
loopne
enter
or
cwtl
xor
mov
fbld
push
mov
int3
lods
pop
mov
cltd
add
sub
adc
adc
lods
je
xor
mov
pop
rolb
das
push
jbe
add
pusha
outsl
inc
and
sbb
xchg
mov
cmp
imul
jb
hlt
rcr
and
mov
sbb
mov
dec
cmp
idivl
lea
mov
adc
insb
and
test
shrb
mov
in
out
fs
jno
decl
mov
sahf
aas
sub
imul
ficomps
lcall
jns
mov
pop
push
and
add
lds
inc
sbb
sub
inc
cltd
les
mov
or
lret
dec
pop
aaa
icebp
testl
inc
ret
divl
push
xor
stc
mov
outsl
fwait
xchg
inc
mov
inc
sub
adc
mov
pop
ss
mov
push
adcb
mov
xchg
jb
daa
pop
dec
sub
and
daa
inc
dec
jo
add
out
add
inc
fimuls
or
mov
xchg
pushf
dec
and
cmp
fs
mov
lret
nop
pop
jmp
div
js
leave
lret
addr16
mov
testb
push
mov
ds
test
and
and
decl
xlat
ret
sbb
or
cmp
cmp
enter
sub
jp
lret
mov
push
fs
icebp
int
rcl
js
test
cs
push
sbb
ficomps
out
pop
movsl
scas
sbb
jl
jp
sahf
popf
stc
adc
xchg
jb
adc
std
xor
mov
movsb
lcall
orl
xor
adc
in
and
lods
dec
inc
xlat
mull
sahf
push
outsb
insb
push
mov
xor
sahf
clc
test
sbb
xchg
or
mov
test
call
fs
pusha
xor
inc
xchg
iret
stc
and
mov
inc
pop
mov
outsl
mov
in
outsl
lahf
xchg
sbb
imul
and
loopne
sub
nop
jno
in
sbb
mov
dec
loopne
inc
inc
call
sub
and
push
aaa
xor
movsl
inc
call
pop
xor
jne
push
push
popa
mov
xchg
sbb
xlat
xor
imul
andl
xor
ljmp
inc
aas
lods
idivl
movsb
insb
call
dec
fists
fcmovu
jle
dec
sub
or
and
sti
cmp
mov
and
add
stos
add
mov
out
out
xchg
in
push
add
sbb
icebp
int
arpl
orl
jl
int3
pop
jl
fisubrl
add
ret
dec
mov
add
sbb
sbb
mov
std
jg
gs
repnz
push
rorl
xchg
lcall
mov
bound
fldcw
xchg
xchg
in
mov
add
pushf
jns
or
dec
inc
out
jecxz
je
push
sub
xchg
mov
dec
push
pop
adc
jmp
push
ja
mov
adc
jg
mov
add
push
cltd
push
shlb
inc
add
ja
sbb
out
and
lret
xor
mov
add
pop
jo
ja
fwait
jns
sti
xchg
lret
lods
cli
mov
test
lds
xchg
or
push
or
loop
pop
jbe
xchg
or
and
or
inc
or
stos
cmp
jmp
outsb
movsl
push
xchg
push
arpl
inc
loop
shll
pusha
movsb
sbb
loop
in
jo
dec
lds
hlt
imul
xchg
std
movl
and
mov
lcall
movsl
cmp
inc
cmp
inc
mov
adc
stos
xchg
dec
inc
dec
pop
jmp
pop
in
loop
xor
fstp
orl
jp
fldt
pop
xchg
lret
xchg
pop
adcl
adc
mov
jae
jb
mov
jo
jne
cmpsb
fsubrl
mov
jg
in
icebp
stc
popf
pop
sub
in
cmp
jp
mov
imul
jge
aaa
scas
ljmp
sbb
inc
mov
ljmp
cld
and
push
push
ss
shrl
jns
cltd
ljmp
mov
adc
xchg
sub
cmp
shl
loope
in
mov
pop
dec
xchg
cmpl
cmpsl
shlb
and
adc
add
push
xor
or
sbb
movsb
clc
sbb
jo
jae
test
psubb
test
nop
adcl
push
in
cwtl
shrl
xchg
dec
jp
jmp
ljmp
sbb
in
stc
mov
xor
push
pop
fstps
adc
add
and
cmpsb
test
dec
out
xchg
cs
mov
insb
and
jecxz
in
lret
ss
cmp
or
iret
aas
push
mov
sub
dec
nop
idivl
mull
xor
mov
loop
filds
jo
mov
mov
mov
enter
or
sub
xor
xlat
ss
xchg
loop
and
xchg
xchg
insb
and
fwait
std
sti
clc
cmp
sbb
adc
hlt
xorb
add
mov
mov
sub
loopne
xor
stos
fcomip
push
scas
mov
xor
insb
fsubrs
dec
arpl
test
or
sarb
sub
jl
inc
sti
adcb
or
aad
sbb
jb
hlt
enter
test
jle
sbb
sub
push
mov
test
mov
push
push
lock
les
push
gs
add
xor
jae
xlat
sub
loopne
adc
add
pushl
sbb
fsts
outsb
mov
jp
xchg
stc
mov
xchg
in
dec
or
popa
ds
adc
mov
sub
dec
nop
mov
mov
mov
jg
lods
popa
mov
iret
pop
cwtl
lock
fsubrl
mov
pop
popf
pushf
inc
sbb
fidivl
mov
sub
frstor
add
in
push
inc
clc
xor
fcomip
flds
std
mov
xchg
mov
out
push
out
test
dec
inc
cmpsb
push
je
or
dec
shr
xorl
testl
sub
sti
into
cwtl
sarb
subb
imul
dec
adc
push
mov
ret
mov
hlt
xor
xlat
xor
xor
adc
pop
jg
mov
sbbb
jns
fwait
std
sbb
fistps
insb
in
cltd
and
jae
xor
jg
adc
data16
jb
sti
out
mov
ljmp
inc
dec
inc
adc
xor
sbb
adcb
xchg
add
int3
stc
inc
loope
cmpsb
push
jo
ret
mov
ljmp
cmpsb
push
cltd
sbb
xor
into
sbb
jmp
sbb
andl
inc
int3
inc
jne
mov
iret
cmp
add
jne
out
fcmovb
sbb
mov
add
and
shr
lret
or
adc
sub
or
loop
cmp
les
notb
jae
jbe
mov
inc
mov
sub
loopne
in
pmaddwd
mov
pushf
idivb
mov
cmpsb
mov
into
sub
pop
loop
jno
test
add
mov
test
std
out
test
stc
xor
roll
dec
or
jl
sub
nop
and
addb
or
sub
or
pop
aas
dec
decb
mov
negl
dec
fidivl
inc
faddp
lea
cmp
stc
int
dec
pop
sub
cwtl
lea
pop
ljmp
imul
add
or
mov
or
adc
jae
daa
cmp
inc
aad
call
sbb
or
shll
imul
pop
add
mov
pusha
push
bound
scas
jg
iret
fisttpll
stos
jl
ret
fneni(8087
insb
std
test
and
cmpsb
mov
in
test
aam
inc
xchg
xchg
sub
adc
sti
inc
push
rolb
enter
or
in
enter
dec
dec
jbe
cmp
pop
mov
sub
add
jmp
jno
xchg
ja
das
xor
xchg
ss
xor
sti
dec
mov
ljmp
pop
jae
clc
mov
test
movsl
rorl
ja,pt
cld
push
das
rorb
and
cwtl
mov
xor
hlt
add
stc
inc
pop
cli
aam
lret
xor
jae
sbb
popf
xchg
mov
jo
or
add
xlat
lcall
popa
stos
mov
add
xor
adc
mov
sub
mov
and
lods
popf
in
and
mov
test
mov
into
lcall
inc
fwait
jo
sbb
jle
adc
cli
jb
mov
lret
xchg
aad
xchg
repnz
out
or
insb
inc
mov
cmpsl
jno
lods
bnd
pop
inc
icebp
jne
mov
out
xor
adc
outsl
dec
pop
aad
loope
mov
mov
dec
xor
add
sub
lods
cltd
jg
push
adc
adc
lret
and
stos
mov
gs
in
pop
daa
repz
mov
push
int3
mov
xchg
test
mov
dec
mov
push
inc
push
jmp
inc
icebp
push
jl
push
sti
into
ja
xchg
lods
js
mov
push
in
sbb
test
lret
mov
sub
mov
std
push
dec
cmc
add
pop
mov
ret
xchg
mov
mov
gs
push
xchg
cltd
aas
aad
sarl
shlb
in
mov
push
lock
mov
or
push
dec
xchg
out
xlat
xchg
dec
inc
sarb
mov
dec
cmp
test
loop
aas
xchg
mov
jo
je
xor
cld
incl
adc
into
adc
mov
fucomip
lret
nop
movsb
xchg
insl
lods
cmp
daa
push
std
insl
xor
mov
mov
ja
xor
inc
cwtl
or
das
sbb
ficoml
rcrl
in
stos
and
mov
inc
xor
push
jp
outsb
ja
mov
push
leave
pop
icebp
push
xchg
outsb
cmp
in
lcall
mov
sub
lds
les
aam
lds
shl
mov
leave
jnp
xor
in
mov
dec
and
or
aam
popf
into
int3
mov
imul
test
cmp
in
orl
sbb
sbb
decl
mov
xor
xchg
fs
mov
stos
mov
sub
dec
mov
fsub
and
adcl
ret
pop
fcmove
jne
inc
mov
sbb
imul
add
loopne
popf
hlt
and
enter
push
push
push
dec
inc
cmc
int3
sbb
rorl
data16
loop
mov
push
hlt
sbb
hlt
jbe
jle
add
rorl
adc
imul
loope
out
xchg
and
adc
ds
shlb
into
mov
mov
jmp
ds
scas
mov
roll
sub
icebp
call
push
cmpsl
cli
lcall
sub
testl
add
push
xchg
js
and
stc
pop
adcl
cmp
dec
push
pushf
xchg
mov
jg
pop
push
loopne
push
call
ljmp
cmp
inc
in
sub
mov
testl
aaa
mov
or
sbb
mov
pushf
fwait
push
add
in
in
arpl
testb
jle
mov
fnstsw
xchg
jmp
fstp
push
bound
in
inc
push
popa
push
inc
adc
je
shll
sbbl
xchg
iret
enter
jb
jb
imul
jns
add
inc
sarb
xlat
mov
add
mov
mov
push
sub
faddl
cmp
data16
mov
xchg
dec
mov
xorl
int3
int
sub
ja
cwtl
xchg
ljmp
pop
jmp
push
mov
mov
adc
xchg
rclb
fiaddl
jmp
adc
std
stos
push
mov
adc
in
out
mov
insb
pop
sub
cld
push
dec
inc
lcall
out
movsb
loopne
pusha
test
rolb
sti
mov
jge
imul
das
leave
cli
jae
dec
and
je
dec
out
jmp
js
jns
add
cli
sbb
xor
sub
in
dec
mov
sar
inc
or
sbb
cwtl
rcll
and
mov
push
cld
cmpsb
ds
fadds
dec
stos
aaa
das
sti
mov
iret
stos
pop
cmc
fstpl
repnz
fdivp
out
clc
pop
mov
popa
push
xchg
dec
mov
pop
adc
pop
add
sbb
jl
jecxz
outsb
lret
add
stos
ja
sub
or
push
xchg
add
call
cmp
dec
mov
js
xchg
mov
mov
cmpb
adc
mov
adcb
add
dec
call
pusha
int3
loope
xchg
in
adc
or
orl
pop
mov
sahf
lods
cmp
nop
repz
xor
sbb
pop
lods
inc
mov
inc
push
nop
jns
aas
adc
dec
in
pop
xchg
push
mov
xchg
mov
push
xchg
and
test
aad
push
loop
xchg
pop
cmp
fdivrs
fwait
push
in
jl
sti
and
imull
xor
or
lahf
jns
push
adc
fisubl
lods
js
mov
insl
maskmovq
negl
dec
out
jg
or
cmp
jns
incl
call
pop
scas
xor
inc
sti
fnstsw
jecxz
mov
pop
jbe
iret
adc
cltd
adc
mov
addr16
pusha
gs
repnz
jecxz
divl
pop
insb
mov
pop
adc
push
rol
mov
dec
and
mov
pop
add
and
out
push
in
pop
dec
cmp
cmp
sbbl
dec
sub
sahf
insl
jne
pop
daa
dec
xor
in
push
pop
adc
mov
inc
cmp
lea
adc
jae
iret
and
insl
mov
cmpsb
adc
lock
ja
sahf
lods
jge
mov
js
in
fwait
pop
pop
divl
xchg
popa
push
dec
mov
roll
mov
insl
sahf
push
dec
mov
movsl
cmpsb
hlt
subb
addr16
cli
sti
negb
ja
cmp
repz
and
adc
mov
or
pop
and
insl
out
dec
cmpl
aas
xchg
ss
cmp
leave
in
xor
fnsave
sub
jb
mov
add
or
jno
mov
hlt
sar
pop
xchg
jle
sbb
mov
cwtl
aas
push
lret
repz
cmp
addb
or
push
inc
sbb
jle
fldenv
cmpsb
lret
dec
je
aam
stos
outsl
notb
cmp
mov
push
out
fsubrs
movsl
mov
pop
test
sub
roll
or
xor
notl
sub
jno
jl
aas
add
sbb
mov
cmp
xor
dec
adc
sub
test
sub
xor
pop
push
insb
mov
and
cmp
mov
inc
mov
aad
inc
pop
movsb
fsubl
jl
iret
imulb
popa
pop
repz
xlat
and
lock
sbb
xchg
push
lret
nop
push
cwtl
dec
sbb
sti
pop
xchg
std
outsl
xchg
mov
xchg
outsb
jg
and
push
and
pop
push
sti
scas
aad
or
movsb
mov
mov
lret
stc
sub
sbb
fbstp
call
pop
rorl
insb
movsl
pusha
lods
int
aas
mov
shll
das
xor
mov
add
dec
out
loop
push
dec
cmp
int3
dec
mov
scas
test
jae
sbb
xchg
loope
sbb
lret
in
nop
dec
adc
fdivs
testb
or
andl
xchg
pushf
cmp
push
rcll
mov
mov
int3
jnp
inc
sub
test
sbb
clc
cmp
pmaxsw
mov
popa
cmp
jne
xlat
mov
lahf
xor
ret
push
test
dec
and
inc
sbb
xor
aas
cwtl
mov
jb
inc
ss
lods
push
fnstsw
mov
in
call
nop
ret
fistl
ret
push
dec
inc
movsl
mov
fcomp
xchg
xchg
jle
js
fdivp
scas
adc
sub
lods
xor
add
cmp
cmp
test
push
mov
add
out
lcall
daa
adc
out
dec
faddp
mov
divb
loopne
leave
xor
sub
dec
sbb
es
mov
or
mov
push
in
pminub
mov
pop
inc
or
shlb
add
aad
xor
xor
adc
je
popa
cli
and
push
stos
into
aaa
and
xchg
mov
sbb
jnp
enter
dec
arpl
push
pop
jns
mov
cwtl
imull
mov
out
test
add
push
jl
adc
mov
int3
call
jo
xor
cmp
pushf
sub
loopne
mov
lret
mov
xor
and
clc
xlat
push
mov
jl
or
sub
mov
loopne
pushw
ret
cmp
test
outsl
clc
sti
xchg
xchg
lret
xlat
jb
les
xchg
cs
and
mov
imul
cs
movhps
mov
jge
pop
adc
shlb
iret
mov
int
sbb
pop
jp
ret
mov
bound
adc
sbb
inc
push
dec
push
dec
leave
mov
lock
in
pop
into
stos
push
or
ror
add
pusha
lcall
cmp
jae
insl
xchg
push
inc
mov
push
xor
inc
aaa
xor
add
test
pop
mov
sbb
sbb
mov
icebp
mull
xchg
cmpsb
pop
int3
lret
int3
mov
xchg
mov
pop
pop
inc
iret
mov
iret
inc
push
loop
cs
sub
cs
push
jns
es
push
cmpl
pop
popf
xor
ret
sahf
mov
dec
push
xor
pop
ds
loop
jae
scas
or
loopne
mov
inc
adc
fwait
jge
adc
jp
pop
aad
call
adcb
pop
mov
testb
into
or
lds
adcl
add
daa
xchg
and
adc
push
inc
push
mov
shr
jne
push
stos
icebp
inc
push
sarb
insl
in
push
out
loop
scas
hlt
lret
jg
dec
mov
inc
mov
mov
push
cmp
clc
int
rolb
subl
fadds
fstps
roll
negb
pop
cld
or
popf
xchg
xchg
in
cmp
loopne
cltd
stos
repnz
lock
and
and
pop
loope
jp
cmpsl
adc
push
rcll
push
frstor
outsb
insb
or
cli
inc
pusha
cmpsb
jmp
out
cmp
xor
push
je
pushw
loopne
sahf
and
lock
lahf
inc
testl
bound
jl
sub
movsl
imul
push
push
mov
fsts
pop
add
test
jg
fldz
cmp
inc
pop
cmp
cwtl
outsb
lcall
stos
test
outsl
add
cli
addr16
adc
out
pusha
ror
mov
inc
lahf
push
lods
aas
pop
mov
and
jo
xchg
xor
pop
test
clc
sub
lods
cmp
mov
ret
xor
jae
loop
dec
movsl
scas
cltd
or
cmp
cmp
int
sbb
popf
jp
out
aam
notl
push
mov
xchg
das
fs
rcrl
test
test
mov
iret
stos
fidivs
into
cmp
mov
divl
jne
cmp
inc
mov
dec
aam
lock
stos
inc
outsl
lds
out
jae
aas
cmpsl
push
cmp
lahf
ss
idivl
jbe
fucomi
mov
lods
add
or
data16
imul
into
inc
jmp
ds
ljmp
and
sub
lods
mov
jnp
sbbl
ss
sub
sub
adc
rcll
mov
jl
dec
into
repnz
xorb
inc
xor
fsubrs
pop
dec
dec
xor
jle
ficoml
pop
xor
inc
out
mov
loope
in
cld
pushf
or
aad
or
cmp
pop
enter
fcmove
fucomip
std
sarl
pop
mov
not
adc
fwait
out
mov
push
mov
clc
add
leave
and
adc
rorb
cli
ret
in
mov
fcmovne
dec
sub
lret
mov
sub
pop
jne
js
xor
shrl
xor
mov
sub
fsub
inc
and
xchg
stc
pop
jl
lahf
test
push
xor
pop
adc
and
cmp
scas
sub
xor
and
scas
xchg
paddusb
inc
dec
loopne
and
sub
or
adc
sub
inc
inc
nop
inc
xor
jle
fsubrl
xchg
xor
fnstsw
imul
sbb
mov
push
loopne
xchg
leave
pop
or
mov
shrb
mov
bound
pop
jl
push
divl
cmp
xchg
sete
hlt
int3
inc
bound
sbbl
push
sbbl
push
nop
mov
jno
scas
xchg
mov
jnp
ffreep
aad
pop
out
loopne
insb
ret
int
lret
ljmp
ret
and
int3
add
arpl
or
xchg
sbb
cmp
mov
sub
xchg
popa
adc
sbb
push
into
inc
imul
dec
into
test
cmc
xchg
stos
je
pop
aad
lods
lds
jae
fsubr
iret
xchg
sub
add
test
sub
rolb
repz
lods
loopne
nop
stc
jbe
sarb
lods
add
or
pop
xor
jge
insl
add
push
pusha
mov
inc
inc
jns
nop
mov
lock
test
out
cmpsb
popf
push
mov
pusha
jns
ljmp
icebp
cmp
xchg
movsb
mov
mov
mov
pop
xchg
jmp
ja
fwait
jne
stos
or
jbe
scas
movsb
or
mov
pushf
mov
pop
sahf
mov
dec
insl
sti
fistps
nopl
jmp
clc
lods
sarb
xchg
push
inc
cwtl
inc
mov
sub
dec
movsl
repz
inc
cs
push
je
push
xchg
lods
arpl
jl
mov
test
loop
push
xchg
jl
xchg
aaa
inc
fcomip
jae
dec
sbb
mov
push
and
jge
cs
mov
mull
lods
test
jae
scas
mov
loop
test
xor
push
jle
ret
dec
jns
sbb
inc
or
adc
fsubrs
test
test
js
call
jmp
popa
stos
push
mov
xbegin
mov
je
out
add
pop
nop
mov
rolb
rcrl
add
mov
movsb
mov
pop
sbb
lods
sbb
push
mov
cmp
cmp
std
push
lcall
rcrl
lock
sub
fimuls
dec
push
stc
lods
add
push
sbbl
mov
out
sbb
pop
mov
imul
push
loop
out
pusha
cmp
data16
decl
cmc
sub
mov
lea
push
fisubs
test
adc
and
xor
jne
cwtl
jo
cmp
pop
or
pop
lods
xor
push
pop
pop
addr16
test
leave
mulps
lods
xchg
jno
outsb
lret
push
das
ljmp
xchg
add
iret
xchg
or
outsb
pop
cwtl
xor
sub
pushl
lret
cs
jbe
out
ficompl
stos
aas
lret
addr16
push
mov
mov
mov
push
mov
enter
adc
adc
cmpsb
jmp
jbe
cmpsl
inc
outsl
shrl
inc
adc
inc
out
ret
push
xchg
in
sbb
mov
dec
cmp
ret
xchg
add
out
leave
push
stc
pop
imul
dec
arpl
and
add
add
sbb
int3
enter
mov
cmp
cmp
movsb
mov
push
sbb
cmc
shl
imul
inc
or
cld
scas
xchg
insb
sbb
sti
fcmovnb
inc
ljmp
xor
mov
dec
je
jns
jle
push
out
out
mov
jbe
add
outsl
dec
call
jecxz
dec
mov
xchg
movsl
sub
call
push
fisubrs
inc
jg
dec
pop
push
cmp
scas
aad
aad
sti
ret
repz
sbb
call
push
mov
sub
pop
popf
jl
and
xlat
enter
mov
loope
xchg
or
sbb
inc
in
mov
nop
int
out
daa
sub
iret
je
push
inc
push
sbb
cltd
and
inc
xor
mov
addr16
cld
pop
inc
push
loope
loopne
loop
ror
std
push
push
and
ffreep
jb
mov
int
and
fldt
cmp
mov
mov
add
adc
xchg
mov
mov
call
and
inc
negb
sub
repz
les
pop
mov
or
dec
sub
je
cwtl
mov
push
cli
fwait
inc
js
jl
gs
lret
and
push
inc
insb
in
push
sub
imul
gs
jg
mov
cld
inc
jae
insb
in
cmp
loopne
push
data16
pop
popf
add
mov
add
push
and
addr16
jmp
repz
mov
call
mov
xor
dec
dec
fimuls
inc
sbb
mov
add
dec
rclb
pop
xchg
daa
push
adc
xor
rorb
sub
mov
or
adc
push
pop
push
loopne
bound
or
dec
adc
sub
cltd
lea
cmpb
jmp
push
xchg
sbb
out
inc
mov
mov
pop
mov
dec
aas
add
push
sbb
jae
cmp
pop
adc
ret
mov
fcmove
jg
dec
dec
rclb
outsl
test
jl
icebp
xchg
cmc
mov
out
mov
xor
jae
int
cmc
arpl
rol
or
std
xchg
lods
orb
out
daa
cld
int
ss
sarl
jge
push
cmc
sbb
jno
push
mov
inc
cs
adc
pop
push
divb
push
pop
adc
mov
fstpl
lret
inc
mov
jb
adc
shrl
jnp
ljmp
jmp
mov
xor
mov
popa
std
test
fwait
or
sbb
sub
and
adc
inc
mov
out
xchg
pop
cs
ds
test
pop
push
inc
dec
cmp
push
xchg
jnp
mov
cmp
jnp
repnz
fwait
testb
stos
ja
pop
leave
xchg
mov
arpl
mov
push
addb
xor
std
fldenv
inc
push
mov
clc
scas
push
jmp
inc
loope
jecxz
adc
push
xchg
test
adc
cmpsl
sahf
loopne
mov
mov
jb
ret
inc
pop
inc
fwait
shl
push
cmp
and
insl
rcrb
pop
int3
sub
in
or
add
scas
and
cmp
lock
dec
sbb
inc
aad
mov
pop
pop
push
test
cmp
mov
into
ja
out
popa
push
ret
mov
mov
in
mov
bound
js
dec
push
or
lret
push
andb
or
lahf
inc
cmp
mov
dec
dec
sub
loope
lods
adc
adc
adc
inc
fldcw
fcmovnu
sbb
popa
pusha
cmp
xchg
jl
xchg
push
mov
sub
sbb
mov
pop
arpl
stos
mov
cmp
adc
xor
mov
stc
lret
xchg
push
jl
push
push
adc
inc
add
dec
lcall
dec
gs
movsb
mov
mov
int
and
test
sahf
pop
dec
das
lcall
sub
cmp
xor
xor
pop
test
mov
or
cmp
push
push
pop
sub
add
mov
rcll
jb
xor
inc
shr
xlat
pop
mov
push
addr16
int3
push
and
out
xchg
cmpsb
test
ficoml
jge
mov
and
aad
sarl
mov
fwait
aad
imul
lock
lods
xchg
and
sbb
inc
or
xchg
mov
fisubrl
xchg
push
inc
aaa
pop
sahf
pusha
xor
data16
sbb
mov
mov
stc
lods
repz
loopne
cmpsb
aam
jecxz
rcll
push
and
fcomp
add
loopne
outsl
ds
mov
jge
sti
lret
mov
cli
fcmovbe
stc
sbb
dec
into
jmp
out
pop
test
aad
outsb
int3
mov
sub
cltd
mov
mov
add
jo
loop
and
push
sub
jns
repz
or
dec
pop
sub
ljmp
xor
outsl
push
daa
xchg
addr16
push
dec
stc
adc
mov
ret
mov
lods
inc
adc
push
lea
out
lret
sbb
outsb
add
or
push
adc
xchg
repnz
inc
loopne
xor
sbbb
rorb
gs
ret
inc
scas
or
cli
fdivrl
inc
popl
rol
xchg
into
pop
movsl
in
or
push
cwtl
fs
adc
imul
mov
adc
hlt
dec
cltd
loop
inc
mov
mov
lahf
dec
ficomps
cltd
jle
insb
imul
test
lds
sub
fidivl
mov
mov
mov
mov
cmc
out
mov
aam
shr
das
adc
adc
or
js
mov
lds
fisubrl
jbe
je
dec
jmp
mov
scas
mov
xor
repnz
int3
inc
daa
fdiv
pop
addr16
dec
jge
outsb
fldcw
scas
int3
lds
dec
cwtl
mov
xchg
movsb
jl
fs
call
mov
xor
mov
jge
xchg
jno
lds
xchg
xor
jge
imul
adc
cs
sub
sahf
call
scas
repz
inc
jnp
xchg
cwtl
scas
cli
fildll
test
out
mov
loope
mov
clc
cmp
adc
inc
mov
or
jnp
sbb
jae
mov
adc
loop
dec
mov
jmp
cwtl
push
mov
arpl
push
xchg
push
inc
cs
push
in
push
dec
les
xor
jb
xchg
cmc
jo
pop
mov
idivb
sbb
fcomps
shrb
mov
mov
or
pop
inc
leave
push
add
xor
sub
add
jmp
add
int3
out
mov
leave
mov
cs
mov
xor
pop
adc
push
add
dec
ffree
loop
xchg
adc
clc
adcl
push
das
int3
pop
cmpsl
push
xchg
movsb
lock
addr16
xchg
aad
dec
cmpsb
jle
lret
test
shl
push
ljmp
lds
mov
nop
mov
jo
dec
ja
sbb
movl
sub
push
or
or
xchg
subb
negl
fwait
adc
push
xchg
sbb
cmc
pop
dec
outsl
loop
popa
and
out
pop
stos
into
adc
mov
or
jle
push
sub
ficomps
or
mov
mov
and
inc
cmp
dec
pop
call
testb
jns
sbb
cli
arpl
cmp
test
mov
enter
mov
lock
or
mov
cmp
jne
popf
xor
and
push
test
add
sub
push
mov
hlt
mov
mov
xor
jge
jo
movsl
or
inc
enter
mov
popf
xor
mov
sar
add
inc
jge
hlt
lods
icebp
or
pop
cwtl
or
cwtl
ficoms
pop
fdivs
daa
fwait
cmp
loope
dec
jbe
popa
sub
push
sbb
mov
sbb
pop
and
stc
bound
mov
lods
sub
mov
sub
fcoms
fcomps
jns
popa
les
ficomps
mov
sahf
fildl
jb
sti
fnsave
pop
stos
or
sub
mov
repnz
fcmovnu
fsubs
shl
das
lcall
scas
xor
imul
jnp,pt
inc
pop
mov
cmp
dec
push
jno
jmp
adcl
adc
mov
jge
xor
fs
mov
push
pop
cwtl
mov
dec
jl
pop
fldcw
fidivl
mov
mov
push
add
sub
lret
jle
mov
test
add
loope
subb
lret
and
sub
dec
imul
mov
cmp
sbb
mov
xor
les
pop
push
cmc
or
jle
sub
cmp
and
imul
inc
mov
push
sub
xchg
lahf
mov
into
lahf
jle
adc
jmp
cmp
inc
dec
inc
test
lods
inc
dec
in
mov
adc
jae
add
orl
popf
lahf
jns
dec
div
ret
or
cmp
sub
sub
repz
adc
cmpsb
les
cmp
push
pushf
mov
mov
insl
mov
pop
call
or
fstpt
icebp
pop
xchg
sbb
flds
pop
scas
adc
adc
pop
pusha
xchg
and
fimull
insl
in
sahf
les
fsubl
gs
jns
fsin
std
mov
stos
or
addr16
test
outsb
les
push
int
or
push
rcrl
pushf
mov
pushf
clc
repnz
mov
mov
and
mov
jle
jo
jb
cld
push
cmp
lret
mov
or
lods
bound
aas
repz
pop
adc
inc
fscale
cltd
mov
scas
cmp
hlt
aad
push
out
mov
push
iret
bound
inc
mov
and
popf
jno
mov
push
push
aaa
pop
insl
jl
xor
insb
nop
out
adc
mov
imul
bound
jl
adc
inc
cmpsl
lods
rolb
arpl
xchg
sahf
enter
fiaddl
out
mov
inc
inc
xor
outsl
mov
jl
pop
jp
add
fidivrl
test
mov
xchg
dec
push
cmp
jg
int
sahf
lret
iret
aaa
das
fstpt
xchg
call
stc
pop
add
push
arpl
sub
iret
stos
je
fbstp
fabs
xchg
dec
orl
pop
aaa
imul
jne
dec
dec
aas
es
lret
lcall
in
iret
push
xor
pop
jns
rorl
icebp
mov
inc
xor
xchg
push
repnz
int
inc
loopne
lahf
add
pop
lcall
fdivr
add
lret
mov
mov
fwait
aaa
movsl
cmp
in
xor
xor
push
add
sub
xor
fidivrs
pop
ficompl
popf
negl
dec
xlat
push
jg
mov
adc
call
ret
xchg
dec
xchg
xchg
adc
incl
and
fistpl
jge
aad
stos
jmp
lods
pop
and
xor
and
fadd
out
negb
cmp
repz
in
and
inc
cmc
cmp
adc
fidivrl
fdivp
in
mov
ja
and
scas
xchg
xor
pop
notb
push
sub
sub
dec
sbb
mov
fimull
xor
pop
repnz
cmp
jp
jle
inc
test
pop
sbb
in
aad
jbe
sub
and
loop
popa
sbb
fdivs
rol
dec
jno
lret
and
cmp
or
testb
int
int
aaa
dec
jp
push
stos
out
jo
stos
hlt
cmp
mov
and
ljmp
dec
popf
sbb
out
xchg
jns
jmp
push
sub
add
adc
cmp
dec
cmp
test
add
insb
push
xchg
test
aam
ret
and
lds
gs
sub
mov
rclb
inc
push
scas
out
xorl
push
mov
fildll
cmp
push
inc
xlat
and
imul
repz
test
sets
pop
loope
inc
inc
inc
out
inc
cli
jl
pop
je
dec
or
push
pop
add
out
mov
sub
inc
ret
fbstp
add
pop
testb
sbb
dec
and
xor
sub
xchg
lds
adc
shll
pop
je
mov
fsubl
sti
pop
out
sub
int
push
push
outsb
ss
sbb
ret
popa
jmp
scas
or
cs
push
jns
xchg
ffreep
jle
loop
fcompl
push
iret
mov
xor
or
sti
movsb
or
fs
pop
inc
nop
loop
leave
or
adc
or
dec
xor
inc
inc
lds
mov
mov
fnstsw
popa
or
divb
jg
jmp
jb,pn
cmp
fs
les
leave
push
pop
adc
push
loopne
add
dec
repnz
in
mov
mov
ljmp
mov
shrb
nop
xchg
mov
mov
mov
sti
fisttps
pop
jge
jb
sub
fs
xchg
out
cmc
xchg
lock
jp
push
mov
in
sub
adc
lahf
pop
test
fsubr
xor
dec
lret
pop
loopne
xchg
cmp
dec
lods
push
xor
ror
push
ss
lahf
in
push
fnsave
lock
sbb
outsb
pop
sbb
pop
in
xchg
push
push
arpl
adc
jmp
xor
or
mov
xor
cmp
fnsave
or
push
add
pop
inc
je
fwait
pop
pop
subb
jnp
xor
push
mov
cmp
adc
out
adc
stos
lret
roll
pushf
insb
or
movl
mov
xor
mov
cmpsb
ds
add
fwait
call
push
pusha
enter
push
xchg
packssdw
mov
jno
and
push
jg
mov
adc
dec
lahf
ds
test
adc
adc
rolb
in
pop
sub
cltd
enter
pop
pop
fistpll
imul
jle
sub
cmpsl
sbb
mov
dec
imul
jbe
sub
mov
in
cmpsb
fwait
lods
cmp
rorb
mov
lods
xchg
mov
pop
dec
jne
pop
fldt
jl
out
adc
xchg
cli
sbb
ficoml
in
push
imul
sbb
mov
pop
push
jbe
icebp
shlb
lret
cmc
loopne
jne
dec
dec
xchg
ljmp
mov
push
mov
or
lret
outsb
jno
adc
add
scas
xor
mov
dec
push
inc
lods
inc
movsl
jmp
cmp
ss
into
xchg
rcll
and
movsl
pop
int3
sti
idiv
popa
sub
outsl
nop
lods
stos
or
fisubrl
and
pop
out
push
cmp
je
mov
sbb
mov
and
jg
jecxz
xchg
aam
pop
sub
sbb
lahf
xchg
or
jbe
add
loope
jge
je
les
incl
subl
cmp
insl
subl
enter
and
shrl
enter
loop
dec
cltd
imul
add
sub
dec
movsb
lahf
pop
or
mov
cltd
mov
pop
xchg
push
repnz
xchg
outsl
or
sbb
cltd
negl
cltd
cmp
adc
add
int3
pop
testb
sub
test
mov
push
xor
sub
scas
ret
out
rol
test
jg
sbb
sbb
add
rolb
jle
out
push
sahf
in
jge,pt
call
subb
sub
in
stos
or
fwait
inc
iret
dec
xchg
sbb
inc
ja
lods
nop
inc
lret
je
in
rolb
add
lret
mov
cmc
pop
aad
and
std
int
inc
fsts
shrl
andl
outsl
stos
sti
or
aaa
xor
push
sbb
and
mov
arpl
icebp
pop
pop
jg
pop
testl
enter
out
xor
mov
imul
adc
dec
and
ds
insl
les
mov
jns
movsb
mov
loop
aas
pop
inc
inc
shll
adc
fmul
cmp
mov
mov
push
mov
push
push
test
clc
mov
mov
adc
aad
loopne
stos
and
pop
sbb
cmc
pop
sub
push
stos
iret
les
lcall
cmpsl
daa
pop
loop
adc
repz
push
test
popa
lods
int3
aam
cli
jno
lock
mov
inc
and
pop
jmp
cld
loope
test
adc
subb
push
pop
stos
or
outsb
sub
mull
scas
jmp
mov
jp
pop
cld
push
pop
leave
cmpsb
arpl
lods
mov
sahf
or
jl
push
gs
push
subb
mov
push
enter
stc
cltd
mov
inc
dec
cmc
in
xchg
mov
sub
cwtl
mov
mov
xchg
ficoms
orl
lcall
jae
xor
dec
sbb
push
push
pop
push
ret
sbb
loope
in
or
pop
flds
negb
mov
adc
jmp
adc
xchg
mov
sub
xor
pop
popa
push
inc
add
add
test
rcrb
xor
outsl
fwait
pop
pop
and
dec
add
dec
mov
loope
js
stos
mov
push
rcrb
add
pop
and
jbe
outsl
adc
sbb
fcomps
push
and
cmp
xchg
push
cmp
les
and
pop
xacquire
mov
xchg
sbb
das
inc
pop
fsubr
pop
jle
push
mov
sbb
js
bound
movsb
repnz
xor
and
jmp
adc
xor
mov
pop
lods
daa
mov
popf
fdivrp
and
or
loope
mov
sbb
lea
mov
mov
cld
out
jb
arpl
jl
aad
orl
shll
inc
lcall
cmc
nop
rcl
inc
pop
imul
push
outsb
push
mov
cmpsb
fnsave
test
sti
bound
ficoml
cwtl
mov
fcmovnbe
sahf
sbb
mov
iret
or
add
lret
imul
cltd
jp
shrb
outsl
xchg
inc
xor
orb
mov
in
insb
bound
jbe
mov
aam
xor
and
sub
push
mov
insb
dec
or
ret
jae
rorb
mov
push
dec
lea
fistpll
push
out
fcom
jae
stos
push
add
in
fisttpl
pop
sub
xor
sbb
cli
or
sbb
jecxz
sub
add
mov
adc
stc
push
mov
and
lcall
in
sub
dec
and
sbb
and
faddl
dec
push
pop
daa
mov
aad
sub
fwait
repz
sub
push
in
mov
in
movsb
adc
xor
push
and
sbb
aad
xchg
int
xchg
loopne
jmp
icebp
mov
scas
test
fimull
pop
rorb
aad
xchg
mov
jae
adc
jbe
jmp
inc
test
add
scas
sub
mov
xchg
jg
addr16
inc
sub
dec
jns
jne
test
fs
fsts
addr16
cmp
add
orb
mov
and
cmpsb
dec
jno
xchg
outsb
iret
in
and
push
pop
shlb
sub
lods
das
mov
shlb
nop
jle
movb
push
test
aam
xor
cmc
dec
cmp
leave
stc
push
into
add
inc
lea
xchg
nop
jmp
out
scas
dec
movsl
enter
shlb
pop
xor
sti
pop
pop
cmp
cli
pop
and
xchg
mov
fwait
or
jg
js
or
jb
cmp
dec
imul
push
add
nop
test
jle
sbb
xchg
push
lret
or
sti
fisttpll
cli
push
jl
imul
bound
inc
mov
sbb
adc
subl
into
loope
and
lret
jbe
push
cmp
shrb
mov
cli
mov
aam
mov
xchg
int3
daa
pop
and
and
sub
and
or
fisubl
push
or
shrl
mov
aam
aam
mov
mov
dec
ret
dec
loop
push
scas
push
outsl
aam
add
pop
enter
shlb
xchg
mov
sub
nop
inc
loope
push
dec
pop
jno
sub
dec
or
adc
std
fdivr
and
fisttpll
cmp
adc
push
xor
adcl
mov
sub
test
aas
or
sbb
insl
ja
mov
lds
sbb
mov
pop
pop
test
and
jp
sub
dec
sarl
aaa
pop
dec
push
push
xchg
decb
push
xchg
xor
sti
and
loope
test
stos
stos
jmp
push
lods
into
insb
lret
cltd
outsl
cmp
push
loop
ss
fadd
ss
notl
outsb
mov
push
shrb
subb
push
sub
xchg
sar
mov
insb
cmp
sahf
dec
sbb
and
subl
push
dec
test
mov
mov
cmp
into
push
in
xchg
stos
js
and
stos
xor
bound
fisttpl
neg
fs
std
sub
cmpl
cld
lahf
lret
or
ficoms
sbb
jge
movsb
cmpsb
xchg
clc
adc
out
dec
jne
push
pop
imul
outsb
repnz
stos
out
jge
jns
push
in
movsb
cli
xchg
aas
adc
jp
add
mov
push
iret
cltd
xlat
movsl
lahf
leave
xchg
in
push
adc
outsb
mov
test
mov
and
imul
xchg
sub
lahf
aas
jnp
mov
or
stos
cwtl
sub
cwtl
scas
inc
ds
mov
loop
mov
or
inc
ljmp
dec
jecxz
dec
xchg
ret
inc
push
sub
outsb
mov
xchg
aam
iret
sbb
cli
addr16
fs
loope
xor
sti
cmp
dec
lds
xchg
push
stos
jle
mov
rcll
jl
mov
and
push
xchg
mov
mov
mov
hlt
mov
out
mov
stc
fnstcw
jge
int3
push
jle
pop
mov
sub
push
mov
aas
aaa
adc
nop
dec
in
popf
xlat
popa
sets
fiadds
mov
movsb
rcll
inc
mov
cmpsb
push
mov
mov
mov
pop
jle
es
mov
int3
outsl
mov
mov
xchg
rcl
jg
mov
jae
add
push
pop
add
adc
pushf
outsb
std
adc
in
push
ficompl
push
jnp
aad
sub
daa
pop
out
je
jae
popa
add
mov
sub
jno
int3
mov
ljmp
mov
dec
mov
mov
pusha
imulb
das
push
mov
frstor
ja
js
jno
arpl
scas
mov
iret
out
cs
push
ret
push
and
dec
or
daa
pop
mov
jbe
repz
and
pop
mov
je
test
adc
ljmp
pop
addr16
es
sbb
and
adc
jno
mov
mov
jbe
adc
decb
rorl
arpl
jmp
xchg
lods
cmp
fs
push
push
repnz
dec
mov
cmp
and
xchg
cld
mov
fcmovnu
imul
in
dec
pop
aaa
sti
cs
mov
mov
pop
dec
inc
jecxz
and
je
movsl
jb
cmp
inc
pushf
or
out
inc
outsb
jnp
adc
jle
sbb
sub
idivl
jbe
push
std
hlt
inc
je
clc
sbbl
adc
out
aas
sub
fucomi
aam
or
iret
mov
xor
outsb
lds
xchg
out
iret
mov
jecxz
shrb
xchg
les
inc
push
test
fs
jns
sbb
mov
pushf
jmp
jb
test
fucom
add
xor
lods
xlat
sbbb
jne
lods
adc
sbb
mov
lar
xor
loop
pusha
jne
ds
inc
ret
sbb
fstps
in
adc
sti
pop
lds
js
xor
xchg
mov
data16
cmp
les
adc
movsl
aas
add
ret
cmpsb
jmp
mov
loope
xchg
sbb
fistpll
fwait
or
push
gs
jbe
aas
push
xor
adc
fldcw
jl
lahf
dec
ja
outsb
cmpsl
mov
cmpsb
insb
out
jnp
dec
jecxz
mov
shl
fcmovnu
popf
daa
fcom
adc
test
pop
fisubrs
bound
jns
push
dec
inc
push
lods
mov
mov
xor
je
inc
daa
or
sahf
xchg
xchg
and
scas
dec
mov
sbb
sbb
scas
iret
test
push
dec
test
dec
mov
jp
scas
lea
fnsave
nop
mov
jecxz
and
xchg
pop
cmpsl
shlb
cld
movsl
mov
mov
pop
jae
fisubl
das
sub
in
js
and
mov
xor
inc
cmp
gs
ja
stos
cwtl
aam
bound
daa
test
sub
into
iret
cmpsl
dec
mov
sub
mov
adc
jae
sbb
push
adc
cli
push
adc
sbb
dec
lcall
fcoml
pop
mov
ss
stc
out
dec
sti
sbb
xchg
test
sub
dec
int
jmp
sarl
mov
call
sub
and
inc
push
pop
jl
and
push
jp
cmp
out
mov
imul
pop
mov
fcompl
test
sahf
pushf
jnp
sbb
lahf
push
cmp
jecxz
push
pop
jb
shrl
ja
rcll
testb
test
mov
es
cmp
lcall
les
mov
and
ljmp
das
pop
sbb
xchg
mov
add
sbb
jns
sbb
sbb
xchg
loope
nop
js
setne
rclb
repz
lahf
cwtl
cmp
push
pop
jae
shr
lcall
in
xchg
pop
adc
rcll
imul
and
call
sbb
pop
ljmp
fisttpl
fimull
mov
aaa
lret
pop
insb
xlat
xchg
pop
test
adc
lcall
or
addr16
ret
adc
cmp
xor
cmp
cmp
lcall
outsl
mov
insb
jecxz
aaa
js
or
adc
pop
scas
sub
out
mov
add
hlt
lods
add
icebp
jp
inc
pop
loopne
jbe
mov
push
stc
xchg
sahf
cmpsl
scas
imul
dec
and
xchg
mov
enter
out
cmp
out
inc
inc
mov
pushf
je
cmp
lcall
push
sti
idivb
and
cld
addr16
adc
push
je
shll
and
scas
xchg
and
in
aaa
ja
cmpsb
sub
cwtl
mov
sti
and
movsl
ret
sbb
insb
orl
add
pushf
addb
dec
fwait
cmp
js
mov
in
cmc
cmp
movsb
sub
mov
aas
mov
leave
arpl
gs
push
push
jmp
jl
repnz
pop
and
aad
add
popf
mov
and
nop
iret
imul
or
push
mov
jo
ret
test
pop
jl
inc
ds
add
fimuls
je
sub
pop
cs
cmp
inc
pop
mov
pop
leave
orb
mov
push
mov
mov
xchg
loopne
popa
sub
lret
xchg
mov
xchg
gs
leave
sbb
sahf
out
mov
gs
enter
lods
xchg
sub
or
xor
stos
inc
aam
xchg
flds
sti
bound
mov
adc
jle
bound
mov
add
push
jnp
add
mov
cmp
push
lds
imul
dec
ljmp
sbb
mov
fisubrl
in
pop
add
cwtl
cltd
add
push
jl
in
xchg
cli
push
ds
fstps
xchg
jge
jno
xchg
lods
xchg
sbbl
mov
hlt
mov
mov
pop
mov
dec
mov
in
mov
sbb
loopne
or
stos
daa
mov
ljmp
cmpl
cmp
cltd
inc
mov
pushf
int3
data16
sbb
jle
adc
ret
lret
inc
xor
sbbb
xchg
jbe
lods
jae
sahf
push
xchg
iret
in
lock
ffree
add
iret
or
mov
sbb
pop
lods
rorl
mov
mov
cmp
in
inc
mov
int3
pop
jg
jb
lea
fimull
or
andl
out
aad
jmp
js
mov
xchg
dec
push
dec
pop
push
fstpt
jbe
jp
mov
roll
dec
inc
rcrb
pop
pop
and
or
mov
mov
cmp
dec
mov
sub
mov
xchg
pushf
xchg
cmp
frstor
pop
lcall
pushf
push
mov
xchg
lods
xor
lea
add
lret
out
loop
inc
push
adc
pop
cs
inc
sub
pop
lret
adc
je
sbb
dec
mov
int3
pop
movsl
in
int
inc
cwtl
pop
mov
xor
les
icebp
out
pushf
into
lods
and
cmp
xchg
scas
mov
lock
in
lds
pop
out
add
aas
cmp
int3
xchg
push
xor
push
leave
fs
push
sub
push
add
scas
jg
push
out
push
fcomps
and
scas
pop
mov
pop
sbb
mov
sbb
push
mov
gs
push
test
jae
out
mov
movsl
pop
add
mov
fldl
or
sti
jge
div
add
sub
dec
outsb
fs
pop
mulb
xchg
fcoms
sti
fisubrs
ror
subb
clc
inc
daa
push
add
mov
mulb
xor
iret
sub
lods
jb
xchg
fimull
insb
xlat
repz
xor
inc
imul
sbb
mov
sbb
cmp
jae
adcl
or
jb
into
and
cwtl
rclb
shrl
xor
xchg
or
inc
push
sahf
dec
xor
or
mov
ljmp
imul
hlt
repnz
sub
cmp
pop
lret
gs
inc
loop
clc
fistl
outsl
cltd
add
push
cmc
add
std
jbe
mov
push
inc
cmc
jae
lds
jb
stos
push
xchg
or
mov
aaa
push
add
ffree
ja
mov
hlt
and
and
mov
inc
fprem
sub
jb
dec
cmp
jg
sub
cmp
sub
jmp
jb
push
sbb
mov
push
sub
stos
test
aas
out
fwait
sbbl
popa
xchg
or
aaa
sub
xor
sahf
stos
insb
mov
lret
lahf
int
out
jno
or
inc
mov
fdivrl
sbb
cs
out
xchg
xchg
mov
xor
loopne
fs
pop
pop
push
adc
out
sbbl
sub
cwtl
jae
jbe
cs
mov
xor
fbstp
dec
add
mov
pop
pop
pop
and
bound
jmp
push
test
psubb
jbe
sub
mov
shrl
movsl
sbb
cltd
subl
xchg
xorl
outsb
push
fwait
mov
idiv
sub
sbb
je
mov
add
scas
in
ficoms
scas
out
adc
adc
sub
addb
dec
fstl
jge
fidivs
push
jmp
fstps
xor
gs
mov
out
shrb
insl
add
inc
mov
insl
out
fucom
test
adc
int3
popa
sbb
push
fidivl
cmc
xchg
adc
inc
and
mov
jbe
pop
cmp
bound
sbb
scas
xchg
scas
cmp
loope
in
mov
or
or
test
push
push
in
push
in
cmp
sbb
cmpsb
testb
and
mov
sbb
mov
orb
fs
fwait
enter
add
in
arpl
scas
fcomps
push
sbb
js
pop
aas
cld
ja
fcomip
int3
cmp
inc
and
mov
mov
inc
mov
mov
rorb
cltd
xor
cmpsb
dec
push
or
mov
xchg
and
ja
jb
jmp
or
pop
aad
test
rorl
sbb
push
xor
sbb
scas
mov
adc
arpl
and
mov
icebp
or
jnp
repz
cwtl
xor
sbb
add
jb
adc
daa
push
lahf
push
cmpsl
and
cmp
push
hlt
and
rolb
jge
mov
push
les
out
or
loopne
nop
ds
jg
out
scas
popa
lret
fwait
xlat
sub
pmullw
push
das
jmp
xchg
mov
lcall
jnp
std
mov
sbb
xchg
inc
cmp
mov
xor
stos
sub
lcall
sbb
int
subb
es
shlb
sub
adc
icebp
jno
dec
loope
xor
into
sbb
lret
mov
or
push
aaa
bound
or
add
cld
xor
xchg
rolb
cmpsb
and
in
dec
sub
jge
mull
push
jg
sbb
inc
cmp
cmpb
fsubr
push
xor
jb
lea
mov
xlat
sbb
aaa
adc
jmp
dec
pop
stos
pop
cltd
mov
jno
pop
in
fistpll
mov
xchg
push
scas
pop
mov
push
mov
jbe
mov
xchg
in
mov
call
xlat
cmp
mov
mov
sbb
out
inc
or
push
mov
pushf
into
int3
fstpl
in
jl
mov
xchg
das
xor
sbb
fbld
sub
mov
or
fwait
jne
jecxz
mov
in
mov
stos
aas
enter
add
fstpt
xor
into
rcl
sbb
push
int3
fidivrs
mov
rcll
mov
mov
in
call
mov
leave
cmp
loopne
jecxz
pop
subb
cltd
shrb
cmpsl
hlt
js
mov
fld
mov
stos
sub
xchg
add
and
sub
repz
fidivl
pop
es
das
popa
hlt
cmpb
dec
or
dec
mov
lea
addr16
xor
in
push
push
mov
and
cli
or
sbb
iret
cmc
nop
int3
inc
in
sahf
cmpsb
mov
js
daa
dec
popf
sar
insb
inc
ficoms
pop
or
push
pop
fsubl
jp
icebp
inc
out
ljmp
in
xor
inc
stos
scas
daa
mov
aas
inc
in
pushf
push
xlat
mov
mov
movsb
mov
sub
nop
jg
jnp
leave
dec
repnz
daa
ljmp
lds
mov
hlt
sbb
clc
sbbb
xchg
push
sub
int3
out
jnp
add
pop
scas
and
mov
sbb
aad
dec
and
test
or
repz
lea
repnz
sbb
dec
sbbb
lret
push
add
idivl
aas
add
dec
or
out
ret
pop
ljmp
mov
push
dec
ljmp
fistpll
jl
or
clc
cltd
icebp
repz
xchg
rcrl
add
push
loope
es
push
jae
push
outsb
jns,pt
bound
insl
dec
xchg
push
xchg
sub
or
aam
jmp
push
inc
mov
push
insl
stos
test
call
inc
mov
mov
and
mov
insb
inc
sbb
scas
mov
and
sub
fmull
rol
and
sbb
xchg
scas
sarb
inc
pop
mov
pop
daa
iret
dec
pop
inc
mov
leave
shll
fistps
add
mov
cltd
mov
sahf
add
nop
adc
loope
lret
lea
cs
jl
push
push
lock
in
imul
stos
sarb
cmp
into
dec
inc
testl
pop
jns
repnz
mov
clc
pop
add
ds
sub
add
cmp
sub
xlat
mov
out
xchg
or
ret
fiaddl
icebp
cmpsl
or
testb
les
fdivr
or
fwait
pop
ret
cmp
fiadds
cmpsl
pop
clc
ljmp
ja
inc
inc
sbb
xor
add
jne
movlps
or
fs
dec
dec
shll
jne
dec
mov
sub
ss
xor
scas
fsubs
cmc
cmpsl
adc
fidivrs
loopne
jg
mov
outsl
test
and
fcomip
xchg
mov
inc
and
dec
add
mov
outsb
sub
mov
mov
pusha
sarl
inc
mov
xor
cmp
sub
imul
cmp
adc
jl
orb
sbb
jns
test
xor
cli
repnz
mov
imul
adc
mov
or
sub
ret
sbb
pop
ret
push
lcall
pop
punpcklwd
pop
mov
testb
xor
popa
shlb
or
fistl
mov
xlat
and
cs
stos
dec
cmp
call
xor
xor
add
jmp
lock
pushf
sbb
and
daa
dec
xor
jnp
mov
outsb
mov
jne
jle
push
fimull
mov
sbb
dec
sbb
sub
insl
or
inc
test
lcall
xchg
scas
mov
sbb
mov
stos
mov
jbe
jns
fnstsw
or
popf
inc
pushf
js
mov
adc
jae
and
cwtl
dec
lahf
je
shll
jb
push
or
mov
add
rolb
sahf
cmp
aaa
sub
add
jg
iret
pop
lock
test
outsl
jmp
jb
fadds
push
and
ja
push
push
sub
pop
lock
ja
addr16
pop
sbb
pop
repnz
cmpsb
test
hlt
hlt
pushf
cld
cli
icebp
add
aad
idivb
pusha
cmp
int3
cmp
adc
arpl
shll
dec
sbb
pushf
aas
mov
jmp
jg
sub
fwait
das
out
sbb
mov
daa
mov
outsl
sub
adc
jae
dec
push
fdivr
sub
outsb
sbb
adc
lret
fcomps
sbb
adc
fmull
clc
ljmp
into
mov
movsl
push
jmp
push
jae
insl
push
popf
insb
mov
nop
xchg
imul
mull
mov
push
stos
adc
insl
bound
push
fcompl
xor
in
mov
test
leave
andl
or
fwait
and
push
sub
addr16
scas
jb
fdivs
dec
dec
pop
xchg
pop
cmpsl
fdivrl
and
jo
cwtl
push
lret
xchg
mov
xchg
cld
mov
popa
aaa
js
or
mov
gs
test
jl
mov
jae
imul
pop
leave
stc
lods
imul
aas
stc
or
jmp
outsl
aaa
adc
out
jle
mov
ja
test
mov
sub
lret
push
lcall
iret
jp
push
imul
dec
dec
sub
cld
jne
adc
mov
xchg
mulb
loope
pop
or
jle
enter
loopne
cld
push
xor
ret
mov
daa
out
mov
sbbl
fimuls
adc
xchg
sbb
ljmp
add
stos
jb
sub
int
mov
adc
pop
rorl
jns
nop
push
pop
inc
push
mov
xor
and
cli
cwtl
test
push
in
filds
sub
test
out
faddp
mov
sarb
mov
repnz
insb
pop
xchg
cmpsl
aaa
mov
jl
scas
scas
lret
je
dec
shl
jle
int
mov
cmp
jmp
push
iret
loop
sub
jmp
movb
push
cmpsl
stc
mov
xor
sub
push
lahf
inc
add
pushf
je
or
and
sti
xchg
test
inc
mov
imul
loope
daa
mov
mov
mov
cltd
push
mov
lds
or
jo
jbe
ds
jb
leave
repz
cmpsb
loope
test
movsb
aam
pop
mulb
jle
and
sarb
cmp
mov
jl
je
sti
mov
ss
sbb
sub
repnz
cld
push
cmp
xor
mov
cmp
cwtl
xor
rorl
fcomip
nop
sbb
mov
popf
and
pop
cli
push
or
jns
push
ret
push
clc
push
jge
mov
sbb
push
sub
lds
stos
jo
pop
xorb
jbe
shrb
int3
jbe,pt
inc
fsubp
stos
fmul
push
add
push
ret
adc
xchg
or
jns
inc
pushf
scas
push
mov
push
xchg
lods
fisubl
mov
stc
lret
adc
mov
fisubs
jge
xor
daa
pusha
xchg
or
sbb
xchg
mov
add
xchg
aaa
in
aad
and
cmp
add
sbb
xchg
shlb
xchg
cmp
add
adc
pop
ss
icebp
xor
or
cs
xchg
pop
call
mov
xor
lds
dec
fwait
jns
loope
xchg
inc
xorb
mov
ficoms
mov
cmp
jnp
add
mov
inc
pop
pop
movsb
push
test
ret
or
sbb
fwait
jne
aad
insl
pusha
or
lods
cli
aad
ds
jl
xorl
and
rolb
jg
pusha
or
adc
hlt
in
inc
int
xor
enter
aaa
and
jnp
or
jmp
cmp
sbb
jne
mov
push
ja
sbb
addr16
sarl
push
xchg
dec
sub
sbb
xor
sahf
adc
sub
sub
ljmp
pushf
mov
and
loope
inc
mov
dec
sbb
repz
pushfw
and
pop
jns
test
pop
inc
lcall
xor
outsb
pop
sarl
and
jno
mov
cmp
aam
adc
hlt
iret
cmovp
sub
stc
mov
mov
hlt
int
mov
push
adc
mov
adc
or
push
popa
xor
and
lea
mov
add
or
lods
popf
rcrl
sbb
cmp
adc
std
insb
aas
sub
jmp
xchg
pop
adc
push
ljmp
lea
and
les
mov
test
ret
dec
add
rcrl
push
dec
pop
shlb
arpl
jns
jne
pop
mov
mov
data16
ret
xchg
cmpsb
xlat
and
xchg
lods
mov
mov
stc
and
fwait
lea
cmp
jnp
jbe
push
pusha
mov
add
pop
or
std
decb
cmp
cmpsl
and
cmpsb
push
clc
xor
xlat
push
push
pop
clc
jg
and
xchg
ljmp
inc
mov
test
add
mov
cwtl
xor
xor
repnz
call
cmpsb
arpl
jae
in
adc
sbb
ss
and
jne
add
jo
push
xchg
or
mov
das
repz
add
je
test
movsl
fnstsw
jmp
pop
sarb
or
shlb
fnstsw
jbe
cmc
movsl
sbb
add
and
cmp
and
int3
ss
xchg
jg
cmpsl
sbb
or
cmc
jmp
mov
mov
cmp
es
into
pop
cmp
fisubl
std
out
add
jbe
dec
call
rcrl
in
repz
outsb
mov
les
hlt
lea
push
dec
mov
sbb
in
je
mov
scas
loopne
cmp
xchg
mov
push
fists
loop
jge
dec
pop
or
add
push
xchg
add
dec
adc
push
mov
adc
xor
mov
insb
mov
aas
in
call
pop
stos
jne
lahf
sub
push
aas
movsl
fsubl
jae
arpl
pop
lods
jmp
stos
xchg
sbb
xor
push
pop
dec
mov
push
mov
notl
out
aam
cld
stc
pop
cs
xor
or
je
nop
pop
pop
pop
push
push
pushf
adc
pop
in
and
fwait
daa
mov
dec
daa
mov
aaa
test
loop
mov
test
stos
and
movsb
scas
xchg
addl
cmpsl
push
mov
hlt
sbb
insb
stos
jns
jne
or
cmp
and
fbld
ja
movsl
xchg
jo,pn
inc
je
adc
fildl
or
sbb
adc
mov
je
aam
or
dec
pushf
sbb
test
cld
adc
lret
pop
aam
js
enter
scas
lret
dec
or
fimull
mov
mov
mov
pop
pop
and
dec
xchg
sub
shll
insl
std
fidivrl
mov
cwtl
ja
mov
xor
pop
in
cmp
ret
xor
cmpsl
clc
ljmp
ror
mov
fldenv
je
aam
mov
cmp
in
xchg
addb
repnz
cwtl
dec
pop
daa
adc
dec
stc
cmpl
iret
mov
dec
cmp
pop
iret
roll
out
imul
stos
xor
inc
jbe
jbe
lcall
cmp
jmp
rcrl
or
jae
stos
xchg
stos
sbb
mov
hlt
or
mov
icebp
xchg
mov
mov
push
fcmovbe
add
arpl
jg
in
sub
mov
jge
arpl
mov
jb
adc
cmp
call
mov
mov
jl
sahf
test
sub
ficoml
mov
rorl
sub
mov
popa
xor
shlb
pop
sti
mov
push
insl
mov
cli
sub
or
jmp
add
clc
push
push
jmp
push
insl
ljmp
dec
and
fnstenv
test
dec
mov
cmpl
out
add
add
ja
pop
sbb
xor
test
jae
cwtl
jge
inc
xor
mov
lock
adc
call
insl
cmpl
std
cmpb
push
jno
loop
mov
outsl
cmp
int
cmc
icebp
cmp
or
mov
daa
pop
adc
repz
jae
ret
sbb
xor
sub
mov
out
jno
aad
jecxz
cltd
cmp
adc
leave
stc
xchg
and
push
lds
aas
jbe
add
cli
outsb
jmp
pop
adc
fcomip
lret
cmp
jae
sbb
xor
outsl
add
cmp
imul
pop
sub
subb
insb
adc
out
call
sbb
mov
mov
in
pop
lahf
roll
pop
and
pop
sub
pop
fadd
daa
pop
jmp
dec
cmp
popf
test
or
cmpsl
inc
mov
and
das
std
mov
cltd
sub
pop
stos
push
movsb
jge
nop
cmp
or
sub
jb
xchg
mov
xchg
enter
dec
jno
pop
jge
jns
movsb
jo
sbb
ret
sbb
dec
pop
mov
outsb
cs
iret
nop
dec
int3
jo
aas
and
add
int3
add
pop
xor
in
mov
xchg
or
fmull
sbb
sbb
xchg
arpl
lods
mov
push
lret
int
dec
pusha
xor
lret
mov
icebp
adcb
inc
pop
push
sbb
fisubl
cmp
lds
loop
push
xchg
loopne
out
cli
mov
sbb
insl
xlat
lods
lret
push
scas
pop
shll
jl
or
add
and
mov
sbb
js
mov
pop
ds
movsb
leave
daa
mov
adc
cmp
sbb
xchg
cmp
mov
dec
sbb
lock
outsb
xchg
add
pop
ljmp
add
aad
mov
mov
shl
adc
stos
sub
cmp
xor
xor
pop
push
add
repnz
int
imul
shlb
jnp
push
imul
nop
add
push
sahf
mov
push
pcmpgtd
in
mov
mov
inc
mov
lea
pop
adc
cmc
mov
bound
cld
mov
mov
out
sbb
push
xor
arpl
add
push
mov
jl
iret
aaa
andb
xchg
sub
jae
cli
mov
adc
and
aam
cltd
sarb
xchg
out
repnz
mov
push
bound
jge
xchg
ficompl
inc
leave
jecxz
xchg
movsl
sub
int3
lret
subb
mov
inc
cmpsl
cmp
fmull
pop
adc
int3
mov
xchg
push
imull
inc
sarb
insl
out
fwait
push
pop
xor
or
mov
adc
rcr
and
call
or
lahf
jno
or
cwtl
xlat
sbb
sub
jg
je
and
inc
xor
mov
in
popl
mov
jns
sbb
push
xor
pushf
push
mov
insb
adc
mov
shl
stc
push
or
push
scas
shll
mov
addr16
rcr
mov
push
fisttpll
mov
movsl
jne
mov
jecxz
jp
cltd
mov
and
stos
xchg
mov
out
imul
lret
dec
xor
cmp
mov
addb
stc
pop
and
push
outsl
and
test
dec
addl
mov
and
mov
scas
add
jo
sbb
shl
or
lods
add
xchg
sarl
sahf
in
pop
in
lret
or
mov
push
cs
fldt
lock
not
orw
cwtl
xchg
xchg
or
lock
mov
and
jns
cmp
cmp
lret
pop
mov
mov
mov
jo
pop
aaa
fmull
enter
into
test
pop
scas
adc
jecxz
pop
scas
and
sbb
test
stos
sub
push
adc
sahf
loop
ret
push
fwait
popa
push
and
lret
mov
sub
pop
mov
lods
or
pop
push
imul
xor
cmpsl
jb
ljmp
rcrl
lock
and
insl
cmp
push
jecxz
lock
xor
dec
and
sbb
add
lods
adc
repnz
psubw
mov
daa
adc
sbb
jno
xor
loope
dec
stos
addr16
sysexit
pop
and
jg
xor
sbb
sahf
mov
in
jnp
test
and
adc
mov
out
mov
test
add
fnstcw
adc
push
lods
inc
outsb
sbb
mov
imul
jecxz
jno
xor
and
loop
jo
or
pop
out
jecxz
sub
int
les
adc
mov
mov
jae
push
shll
jns
and
imul
and
aam
lcall
or
movsl
lods
subl
aas
imul
into
dec
arpl
adc
push
subb
inc
mov
sbb
mov
mov
dec
enter
sub
jp
out
mov
xchg
in
jg
add
lea
loope
inc
std
xchg
aam
call
int3
lea
sub
pushf
arpl
in
xlat
add
arpl
sub
test
inc
mov
or
lret
push
int3
stos
xchg
adc
cmp
and
lret
xchg
mov
inc
into
push
add
dec
int3
pop
push
pop
in
call
sbb
sbb
cmpsb
out
test
jbe
pusha
loopne
pop
sbb
push
adc
imul
inc
out
inc
cmp
sbb
das
mov
sbbl
pop
lock
xchg
jecxz
push
shr
xchg
ljmp
ss
mov
adc
jno
jbe
jbe
out
cmpsl
std
and
mov
sahf
or
mov
cmp
out
mov
in
mov
push
cmp
xchg
jle
shlb
push
add
mov
mov
sub
lcall
push
mov
or
outsl
pop
aad
pop
repz
mov
lea
pop
cmp
outsb
rcl
cltd
cmpsb
xchg
xchg
mov
push
push
into
push
pop
lahf
sahf
data16
js
adc
out
or
mov
ds
sbb
dec
loop
dec
cmpsb
sbb
data16
daa
dec
mov
jb
sub
fcompl
sbb
mov
call
pop
cmp
jnp
push
das
loop
scas
lds
pop
outsl
mov
sub
sbb
inc
lds
ds
xlat
mov
sub
pushl
sbb
mov
adc
jae
inc
mov
imul
xchg
data16
xchg
popa
dec
xrelease
mov
aaa
mov
jecxz
inc
xchg
sti
adc
or
pop
mov
movsl
jno
jge
add
xor
roll
movsl
sbb
sub
nop
adc
clc
push
dec
mov
andl
shll
or
mov
out
ds
pop
pop
or
cmp
out
aaa
inc
rdmsr
xchg
mov
into
sarb
jb
cmp
ja
lret
lcall
arpl
push
shlb
rorb
data16
mov
sub
mov
rcll
test
jge
jae
mov
and
fidivrs
jns
xor
inc
or
and
movsl
mov
mov
imul
pop
xor
cwtl
pusha
xchg
in
dec
orb
xchg
dec
pop
pop
aad
jb
xchg
xchg
stos
jnp
sbb
ds
mov
or
jmp
sbb
leave
pop
cmpsb
lea
aam
sbb
cmpsl
pop
sbb
jae
push
in
cmpl
sahf
fucomip
jbe
xor
outsb
into
mov
jno
dec
insl
into
pop
xlat
repz
or
in
in
mov
add
and
mov
in
fldt
scas
pushf
insl
lret
orl
lods
sub
insl
mov
sbb
roll
out
dec
sbb
std
inc
mov
mov
add
inc
push
adc
mov
pop
mov
movsb
dec
jo
out
add
mov
in
cmp
lret
add
aas
lds
push
hlt
mov
outsl
dec
fnstsw
push
pop
cmp
cld
cmp
sub
jae
mov
or
sub
inc
out
dec
addb
xchg
cmc
stos
shlb
jne
hlt
bound
cmp
and
add
jge
pop
push
cld
jns
cmp
pop
lahf
fildl
notb
xor
pop
adc
loopne
add
push
xor
mov
mov
ljmp
inc
out
dec
fsubl
stc
lods
movsl
loope
mov
cmp
or
push
inc
bound
push
aam
cwtl
inc
rolb
push
xor
jae
imul
inc
mov
repnz
adc
outsb
call
in
and
sbb
ja
clc
mov
ret
adcb
sbb
xchg
sbbl
das
subl
mov
js
out
imul
dec
add
rcrl
fldenv
call
cmc
pop
mov
shlb
inc
int3
out
bound
xlat
adc
cmpsl
leave
mov
dec
or
inc
and
pop
movsl
cmp
loop
shr
and
jae
jne
mov
xchg
stos
gs
add
fcomp
lds
and
add
lcall
or
cli
lret
rcr
cmpsl
adc
scas
or
cmpsl
xchg
ss
fists
and
ljmp
ficomps
cmp
push
outsb
daa
insb
fsubs
out
push
jmp
fimull
mov
or
es
inc
pop
dec
mov
aaa
inc
mov
pop
cld
push
push
fistl
pop
fwait
mov
pop
xor
sti
dec
loop
test
xor
in
icebp
sbb
shl
imul
jl
loopne
lcall
outsb
in
sub
test
mull
pop
cmp
xor
push
lahf
test
push
dec
jg
xor
ja
xchg
add
jmp
mov
push
mov
outsb
iret
sahf
shl
and
push
mov
push
push
push
push
push
insb
mov
xor
xchg
or
fwait
mov
pushf
or
movsb
sub
xor
lds
mov
outsb
jecxz
inc
sbb
xchg
or
xlat
jecxz
and
push
push
jbe
inc
mov
sbb
or
fwait
scas
loopne
jb
icebp
jmp
popf
cli
aas
movl
add
popa
cld
jg
into
stos
loopne
lods
rorb
sbb
subl
inc
jno
repnz
aam
aad
or
les
add
stos
mov
jno
out
sub
cltd
cld
mov
mov
imul
pop
je
push
and
inc
lret
dec
dec
nop
dec
jb
in
pop
and
jge
mov
jge
lds
or
push
out
pop
pusha
adcl
rcrl
in
in
insb
pop
mov
jne
push
popa
xchg
iret
jmp
cltd
stc
insb
xor
mov
ja
test
mov
sahf
cltd
inc
bnd
test
add
inc
and
loopne
and
cmp
sarl
mov
sub
stos
sbb
adc
sbb
push
aam
dec
int3
into
lock
add
mov
add
stos
cmp
add
jmp
add
push
jb
cwtl
add
push
jmp
fisubrs
cmp
xor
pop
loopne
mov
fisttps
and
dec
loop
fsts
test
add
outsl
clc
pusha
mov
sbb
scas
hlt
mov
cli
aam
jb
pop
aaa
stos
jmp
and
nop
pop
sbbb
or
sbb
mulb
pop
jle
mov
adc
addr16
outsb
insl
cmpsb
sbb
faddp
lods
push
xorb
outsl
push
sub
call
cmp
into
xchg
ret
ficoms
dec
lea
ljmp
in
ljmp
xchg
jecxz
insb
mov
xor
lcall
dec
dec
add
jno
mov
loopne
movb
cld
mov
mov
sahf
in
pop
pop
xchg
jae
mov
mov
and
out
jg
jns
pop
sbb
rcrl
and
fcoms
shlb
push
jnp
pop
stos
xchg
cmp
sbb
subb
or
mov
or
daa
mov
push
mov
mov
addw
idivl
xor
out
les
lahf
dec
icebp
fld
imul
push
or
je
inc
add
add
mov
mov
jp
push
je
lret
jae
dec
inc
leave
push
and
mov
inc
xchg
daa
clc
sbb
mov
loope
mov
push
adc
jge
xchg
dec
xlat
jp
mov
or
insb
stos
add
adc
and
fsubs
fcomi
xlat
shll
cmpsl
mov
pop
jnp
rcrl
cmc
out
push
add
mov
pop
rcll
push
das
push
out
out
mov
and
lea
jne
xchg
lahf
push
das
popf
pop
and
fidivrs
cltd
in
push
xchg
jnp
xor
pusha
mov
aad
mov
inc
lock
pop
sub
push
sbb
or
pop
xchg
sbb
sti
fbld
cli
pop
cmpsb
inc
nop
orb
popf
cmp
xlat
and
cmp
push
mov
xchg
sub
pop
icebp
js
gs
sahf
dec
scas
sbb
mov
sbb
xchg
xchg
xor
lods
cmc
sahf
push
sbb
sbb
xor
adc
adc
cmp
ss
jmp
call
and
into
jp
popf
pop
and
repnz
jmp
cmc
push
sbb
call
aam
push
into
xlat
or
daa
cmpsl
adcl
mov
sbb
add
xchg
mov
mov
fcomp
in
push
add
imul
or
inc
xchg
orb
push
repz
and
pop
sub
and
test
leave
push
jb
cmp
leave
sub
and
mov
inc
adc
sub
addr16
incl
stos
xchg
or
xchg
fldlg2
ds
pop
and
adc
add
fcompl
ss
scas
xor
addb
nop
jne
dec
mov
add
pop
addb
sbb
mov
nopl
mov
lret
fidivl
sub
mov
sbb
xor
dec
leave
or
scas
push
dec
pop
sarl
imul
xor
jmp
sbb
repz
adc
adc
lret
incb
clc
lret
test
jnp
test
pop
testb
stos
add
mov
aaa
push
lock
mov
sbb
xchg
pop
je
xchg
add
or
lods
ss
hlt
out
mov
dec
bound
inc
mov
call
cmp
rclb
rol
add
and
pop
mov
in
push
add
xlat
inc
push
sahf
pop
inc
cmp
push
xchg
fnsave
lods
iret
adc
cli
push
sarl
inc
push
push
inc
push
mov
inc
ret
mov
mov
sar
fisttpl
push
inc
pop
jmp
jbe
idivb
push
popf
sbb
outsb
out
inc
push
inc
pop
cmpb
mov
mov
xlat
pop
lret
pop
mov
sub
stmxcsr
dec
daa
dec
pop
and
into
and
sub
lea
inc
mov
xchg
mov
xor
ret
jns
mov
lahf
stos
cmp
mov
sbb
xor
jmp
mov
aad
mov
int3
mov
dec
icebp
cli
or
mov
lcall
std
fdiv
repnz
insl
mov
ja
es
dec
into
dec
cmp
psubsb
ficompl
int
and
mov
jbe
push
lods
xchg
mov
adc
cmc
mov
push
jmp
push
sub
fcoml
movsb
hlt
gs
sahf
jns
or
das
cli
or
imul
test
or
in
dec
pop
mov
mov
mov
push
jl
test
push
pop
es
push
js
xchg
sbb
out
and
cmc
mov
dec
push
mov
std
cmp
inc
aaa
lds
nop
inc
jno
andl
inc
mov
mov
mov
sahf
bound
pop
icebp
add
cld
mov
es
incl
ror
fbstp
sub
out
les
out
sbb
pop
and
mov
out
add
out
cwtl
xchg
outsb
or
jl
sbb
dec
repz
scas
mov
add
popa
mov
dec
fidivs
mov
xchg
mov
and
jns
mov
shll
sbb
rcrl
pusha
mov
repz
inc
mov
shlb
subl
in
ljmp
and
popa
mov
stc
stos
and
dec
add
cltd
mov
mov
data16
cmp
daa
sbb
xchg
mov
sbb
push
lock
jae
push
mov
jp
bound
dec
mov
xor
jge
iret
push
loopne
add
xchg
imul
mov
jno
lea
out
or
sbb
bound
cmp
in
sub
ljmp
pop
mov
mov
sub
test
les
jne
bnd
cld
sub
or
enter
mov
xor
mov
shl
inc
pop
movsl
mov
pusha
or
sbb
inc
xor
sub
lcall
sub
sub
jo
sti
popf
dec
and
popf
and
sahf
push
sbb
xor
push
adc
push
rol
adc
jnp
inc
shll
jns
xchg
mov
push
in
mov
xor
ja
sub
call
iret
mov
enter
test
inc
jns
stos
int
jnp
push
sbb
roll
sbb
push
jno
imul
fidivrl
dec
push
cmpsl
mov
sub
push
jb
jg
lret
or
popf
mov
mov
fsubr
xchg
test
sub
lcall
push
lods
ja
sub
nop
outsl
fwait
add
repnz
adc
cmp
xor
add
cmc
cmp
stos
es
mov
mov
cmpb
jns
adc
lods
mov
leave
addr16
in
sub
mov
rcrl
adc
mov
or
cmp
xlat
insb
dec
add
jmp
lret
es
push
pop
push
rclb
pop
fs
pop
jg
jmp
aam
adc
mov
leave
cmp
pusha
dec
outsb
sub
in
fldl
ss
cmp
enter
ret
push
mov
das
fmuls
pop
xchg
inc
pop
or
fdivl
and
enter
lods
sti
dec
addr16
shlb
cmc
inc
jns
rcll
ljmp
adc
or
test
aad
push
and
xchg
rcl
imul
repnz
pop
mov
imul
and
or
or
scas
mov
and
out
xor
or
aaa
sbb
inc
sub
popf
or
lahf
mov
jle
push
orl
into
mov
fadds
comiss
mov
jne
cwtl
repnz
outsb
inc
push
stc
fcmovnbe
out
add
arpl
cmp
pushf
or
gs
pop
out
aad
leave
aas
loope
jg
and
das
mov
hlt
xor
sub
xchg
adc
jns
clc
mov
stc
iret
jle
test
fisubrl
cli
mov
add
xchg
subb
inc
adc
cmp
xor
xchg
pop
dec
sbb
lods
pop
or
xor
es
mov
push
out
fsubs
sbbl
int3
in
dec
dec
int
sub
push
jne
aas
adc
es
jl
push
orb
incl
andb
push
cmp
int3
inc
ljmp
xchg
fdiv
push
enter
cld
pop
lds
mov
les
or
cmp
test
adc
cmp
lret
sub
out
lret
les
jp
mov
mov
stc
movsl
pop
popa
xchg
dec
repnz
hlt
pop
mov
xor
add
cs
add
jb
cmpsb
push
add
stc
cld
mov
push
sbb
lds
xchg
pusha
fs
mov
scas
jbe
jae
nop
out
imul
insb
mov
test
insl
out
out
jne
mov
lock
jns
test
leave
dec
out
xchg
mov
dec
nop
aam
mov
fsubr
sub
daa
fsubs
xor
mov
mov
sub
cli
insl
pop
mov
pop
adc
xchg
cmp
repz
and
mov
dec
je
cmpsb
pop
inc
cmc
repnz
or
pop
xchg
sub
or
pop
jno
lahf
mov
pop
sub
mov
mov
sub
outsb
idiv
stos
xchg
cmpsb
and
cmp
fmuls
mov
icebp
call
data16
sub
aam
xchg
jmp
or
sub
pop
add
stos
cmpsb
xchg
cmp
xor
call
rclb
add
sub
or
test
mov
sub
jp
das
xor
mov
push
cs
testl
outsb
xchg
stos
nop
sbb
xchg
and
cmc
mov
sub
in
mov
jo
rorl
mov
test
scas
shrb
ss
jp
nop
enter
jnp
add
push
out
aaa
adc
ficoml
mov
and
sbb
popa
pop
dec
das
divb
in
mov
cltd
rcr
mov
lret
xor
mov
dec
lods
setns
lea
adc
jbe
test
xchg
dec
call
subb
les
push
pushf
out
cmp
adc
jb
push
popf
inc
mov
pop
cwtl
cmp
inc
andb
test
inc
scas
push
insl
add
ds
sahf
sbb
into
fdivr
lret
ss
cmp
addb
mov
xchg
dec
das
test
imul
leave
cmp
push
test
push
pop
std
and
inc
adc
lea
inc
push
dec
mov
leave
sbb
push
stos
pop
fmuls
mov
jno
jae
push
sub
pop
jbe
sub
jg
gs
xor
mov
xchg
xlat
mov
sbb
icebp
pusha
mov
push
xor
add
dec
arpl
int3
pop
pop
inc
pop
jge
nop
xor
sub
insb
lahf
push
push
pop
loopne
nop
in
ret
push
push
pop
in
cmp
in
ss
ret
les
cmp
popf
movl
repz
mov
pop
pop
cs
add
popf
out
in
sub
ds
mov
cltd
into
outsl
clc
mov
in
cmp
in
jne
dec
insb
push
xchg
pop
push
cld
insb
sbb
cmp
inc
mov
imul
outsl
add
cltd
mov
mov
adc
mov
divb
or
test
lods
xchg
inc
xor
cmp
lret
ret
jp
cwtl
inc
popa
out
jl
xor
push
push
pop
imul
test
adc
hlt
cmp
lahf
stc
test
or
jl
mov
or
pop
adc
mov
lock
loopne
sbb
lock
pop
pushf
mov
jge
aam
scas
outsl
ljmp
sbb
mov
jo
es
xchg
clc
movsl
add
mov
cmpsb
push
mov
mov
lcall
cltd
aad
xchg
xor
dec
jbe
push
mov
arpl
xor
ret
test
out
outsb
dec
sbb
adc
aad
test
loop
ja
mov
cmp
xor
jnp
cli
adc
add
cmc
repz
mov
popa
rcr
out
cld
adc
or
jb
imul
cs
xor
jp
hlt
lods
sbb
cmpsl
push
fcoml
adc
inc
adc
adc
mov
lcall
xchg
int3
cmp
pop
inc
in
ljmp
stos
ds
shll
fwait
pop
sbb
loopne
mov
insl
or
ficoml
push
and
testb
cli
cltd
fisttps
pusha
out
ljmp
das
or
addr16
sub
push
jecxz
test
mov
sbb
arpl
add
xchg
out
push
loop
cld
mov
leave
cmpsb
fmul
sub
push
into
aaa
movsl
sub
jecxz
mov
rcr
out
cli
push
rclb
icebp
xchg
xor
and
mov
cld
mov
js
cli
jl
mov
sar
mov
mov
add
movsl
mov
or
jl
loope
push
cmp
dec
mov
mov
xchg
cwtl
cmp
mov
and
jbe
xor
imul
inc
addb
pop
dec
jns
lods
jg
movsb
out
or
add
shlb
cmp
xchg
push
jns
sti
popf
sbbb
loope
inc
and
dec
inc
fdiv
call
addr16
sti
in
adc
sub
adc
fucom
sbb
gs
imul
ja
int3
daa
sbb
sbb
subb
inc
sub
or
pop
push
fdivr
ljmp
ss
sbb
iret
repnz
adc
mov
mov
enter
mov
das
jno
xchg
lea
or
sbb
mov
sub
into
xchg
mov
push
cli
pop
cmp
daa
pop
cwtl
and
xor
dec
dec
mov
sbb
test
shll
mov
inc
push
stos
in
push
jnp
inc
fs
mov
pop
xchg
xor
lds
stc
xchg
adc
cwtl
mov
mov
js
and
loopne
and
pop
adc
test
lcall
mov
pusha
in
adc
lea
or
pop
push
and
xor
js
jmp
or
lcall
jmp
sahf
pop
cmp
add
and
out
in
sub
sub
adc
sub
outsl
mov
enter
pushl
lcall
jo
inc
mov
loope
mov
in
fildl
cmp
and
cmpsl
sbb
rolb
jle
fnstenv
hlt
or
jp
and
and
mov
xchg
in
xor
push
call
stos
sbb
out
fnstsw
inc
pushf
adc
jo
mov
add
xor
sbb
or
pop
popa
sub
mov
push
xor
xor
out
xor
out
or
jo
daa
cmpsl
xchg
pop
les
mov
rcrb
enter
pop
in
test
int3
fistpl
xor
cmpsl
in
divl
fisubl
dec
mov
jns
inc
addr16
xchg
out
pop
pop
mov
mov
sti
xlat
movb
sbb
sbb
out
pop
insl
push
xchg
es
dec
push
add
int3
sub
outsl
data16
xchg
sbb
mov
xchg
mov
pop
mulb
add
add
push
pop
repnz
test
adc
loopne
sbb
jmp
push
nop
rolb
xchg
ljmp
xor
cmp
test
stos
mov
nop
jecxz
push
xor
enter
pop
scas
cmpsb
push
add
aad
ret
dec
cmp
popa
push
pop
imul
pop
in
push
xchg
sub
mov
xor
mov
dec
inc
dec
loop
mov
adc
aaa
adc
lds
lock
mov
jp
xor
jnp
mov
sbb
dec
pop
dec
mov
jns
push
fisttpl
pslld
test
xchg
sarl
mov
sbb
sbb
adc
aas
insb
inc
dec
push
sub
pop
pop
orb
mov
imul
flds
jnp
cmp
sbb
nop
mov
ret
into
ds
or
sub
fmuls
das
fisubs
and
pop
mov
push
adc
das
nop
mov
push
pop
gs
rorb
call
sub
je
add
fldcw
jp
js
mov
pop
sarb
loopne
out
pop
arpl
pop
imul
xor
imul
jnp
mov
hlt
push
insb
mov
imul
popa
int3
movsl
jle
mov
push
cmp
loop
mov
aas
adc
push
xchg
fs
and
imul
pop
mov
imul
inc
flds
fcoml
xor
mov
fdivs
mov
cmp
jns
ds
mov
aad
in
mov
push
cmp
out
mov
enter
out
mov
xchg
push
xor
ss
adc
and
sbb
jmp
out
ljmp
sbb
dec
cmp
repnz
cltd
popf
push
shll
dec
insl
js
jnp
xor
test
cmp
mov
sbb
incl
adc
movsl
mov
cmp
sub
daa
jne
mov
lods
jmp
xor
mov
dec
in
nop
dec
test
or
sub
cmp
scas
out
inc
mov
pop
mov
incl
mov
mov
les
cmp
add
sub
mov
jne,pn
cwtl
loop
dec
imul
adc
mov
jbe
and
adc
xchg
lret
enter
rol
out
mov
add
fdivrl
fwait
mov
fimuls
int3
mov
sbb
sbb
enter
shlb
adc
int
xchg
test
fisubl
cmp
xor
subl
leave
cmpsl
negb
mov
fstps
int
xchg
roll
jmp
add
xchg
pop
aam
mov
mov
cli
cld
xchg
or
nop
imul
xor
adc
in
addr16
inc
inc
bound
cmp
mov
lock
in
mov
mov
scas
xor
fistpll
lret
pop
hlt
iret
xor
cmp
adc
sbb
adc
fisttpl
in
cmp
daa
lahf
icebp
push
or
cmc
faddp
xchg
iret
xor
mov
test
mov
add
mov
leave
cmp
int
xor
add
inc
xor
dec
ficoms
test
adc
shrl
insl
add
xchg
in
pop
dec
rcll
insl
mov
cmp
add
jo
popa
push
sbb
jbe
mov
cmpsb
cmp
jnp
dec
sub
pop
in
adc
int3
out
jge
lock
sarl
jnp
outsl
and
adc
fwait
stos
push
stos
xchg
sbb
jae
add
mov
and
es
hlt
dec
xchg
mov
dec
fisubrl
pop
xor
frstor
xor
mov
sub
cmp
add
pop
cwtl
pop
adc
pop
imul
fisubs
ja
xchg
mov
inc
mov
xor
testb
loopne
adc
sub
roll
push
lock
jmp
xlat
ss
mov
movsl
push
test
sub
sbb
add
rcrb
push
push
pop
dec
rclb
rclb
push
fadds
push
inc
dec
jbe
xor
loopne
mov
adcb
js
mov
inc
loope
xlat
shrl
lret
in
aam
outsl
or
xchg
mov
push
mov
adc
pop
pop
arpl
outsl
mov
loopne
dec
xor
leave
pop
and
sub
test
xor
aam
lock
xchg
roll
in
mov
stc
shll
insb
or
mov
das
test
mov
dec
mov
gs
insl
adc
in
gs
pop
sub
popa
jge
aam
or
dec
and
rcl
jmp
add
ljmp
pusha
mov
aam
rcl
dec
cmp
pushf
mov
adc
lds
outsb
mov
das
in
icebp
add
movsb
pop
xchg
rcrb
leave
or
add
jnp
inc
mov
test
mov
pop
sub
mov
xchg
rolb
pop
cmc
jg
mov
sarl
inc
int3
xchg
xor
jge
xchg
fcoms
adc
lock
icebp
pop
dec
outsl
outsb
inc
xor
pop
lock
push
cmp
test
andb
aam
cmc
loop
add
push
jnp
addr16
sub
jg
imul
fsubrp
dec
cmp
and
or
push
dec
or
ds
je
push
jae
xchg
insb
into
pop
icebp
into
bswap
test
lcall
rcl
test
push
cwtl
fstpl
xchg
in
ljmp
jg
pop
inc
pop
mov
daa
addl
sub
lea
out
dec
insl
orb
in
je,pt
popf
popf
lret
pop
mov
daa
cmp
inc
mov
dec
jg
mov
insl
outsb
shl
mov
or
andl
or
sub
mov
pop
mov
push
lods
jg
je
imul
push
sbb
ret
push
dec
movsb
testb
mov
out
insb
imul
xchg
dec
inc
insb
cmpsb
jmp
xor
dec
sar
stc
mov
jmp
xchg
lcall
add
adc
sub
imul
bound
sub
aam
inc
mov
dec
jns
inc
gs
cmp
in
mov
dec
aas
lods
pop
scas
ja
sbb
pushf
fwait
stos
push
popf
pop
dec
jmp
movsl
mov
cmpsb
mov
dec
es
xor
incl
jbe
mov
or
aaa
jnp
cmp
iret
std
insl
mov
xchg
jne
xchg
mov
push
pop
lock
sub
les
lahf
push
gs
fistps
std
imulb
aaa
js
fs
sbb
rorb
adc
jnp
cld
aad
dec
lcall
dec
movb
cmp
add
aad
hlt
inc
push
mov
pushf
mov
mov
stc
xor
imul
imul
jno
shll
cmpl
sub
dec
aas
mov
sub
mov
scas
dec
scas
shr
and
or
popf
outsb
xchg
mov
add
les
sahf
lds
and
lock
add
adc
sub
loope
cld
inc
or
pop
fstpt
js
rcr
jl
mov
pop
ss
stos
xchg
mov
clc
jmp
test
rolb
inc
pop
repnz
mov
inc
outsb
inc
add
aad
int3
pop
test
add
sub
pusha
push
add
lahf
aas
out
jns
std
repnz
call
cmp
aad
imul
pop
pop
add
shll
xlat
lods
jle
add
rcll
out
and
push
mov
and
inc
and
push
push
cmp
fstp
dec
loopne
in
add
and
movsb
fwait
lock
xchg
xchg
adc
das
xor
movsl
cs
add
out
mov
xor
data16
loopne
add
fwait
cmp
adc
adc
bnd
popa
scas
frstor
movsb
pmaxub
jecxz
dec
pop
ds
jle
shll
hlt
pop
lret
arpl
es
icebp
ret
adc
xor
mov
ss
shrl
pop
xor
clc
cwtl
and
cld
sbb
and
cmp
and
jg
and
daa
push
jb
mov
sbbl
or
add
lods
loope
cli
mov
mov
push
popa
insb
in
into
xchg
lea
adc
xor
mov
pop
push
xchg
negl
xor
inc
mov
insb
mov
std
or
stos
fmulp
push
lret
sbb
inc
cmp
fisubrl
and
push
scas
es
sbb
cmpsl
or
push
aam
or
mov
add
cmp
shll
adc
push
addr16
xor
pop
cmp
imul
and
mov
addr16
shl
daa
lods
mov
bound
das
xor
adc
dec
sub
add
loop
pop
dec
mov
sbb
add
dec
insb
inc
inc
xchg
xor
xchg
inc
test
shll
add
sti
cmpsl
enter
pop
xchg
and
into
pushf
pop
rcl
ds
imul
mov
pop
negl
inc
scas
std
dec
and
add
test
mov
sbb
std
pop
fbld
addb
push
mov
ds
or
xchg
int3
inc
das
mov
sbb
adc
sub
arpl
sub
fsts
shrb
mov
aaa
push
sbb
jle
sub
adcb
add
gs
pop
dec
pop
xor
repz
out
push
sbb
mov
cmpsl
lods
movsb
inc
and
test
dec
xor
jecxz
movsl
jb
mov
push
pop
push
negl
sub
jle
out
mov
inc
inc
lfs
mov
das
shll
idivb
ja
rcl
dec
jno
cmpsl
fstpt
sbb
arpl
jmp
push
adc
call
adc
sub
and
loope
insb
popf
lods
imul
jle
xchg
mov
paddusw
push
and
and
jnp
add
add
adc
push
daa
out
lcall
notl
out
dec
ds
sbb
mov
sbb
mov
cmp
inc
imulb
push
push
call
mov
and
cmp
dec
jge
into
ret
shrb
push
jno
fistpl
jbe
je
dec
mov
stc
lcall
adc
inc
test
xchg
xchg
test
add
cs
out
mov
xchg
sbb
in
inc
out
add
fs
mov
std
cmpsb
cmp
jne
xor
movsb
push
imul
leave
call
negb
out
clts
adc
inc
mov
cmp
int
je
mov
shlb
lret
sbb
cmp
dec
repz
out
cmpsb
sub
movsl
aad
out
jecxz
lcall
pop
pop
sbb
sub
aaa
xchg
mov
xchg
dec
das
or
lahf
out
push
xchg
fcompl
sub
out
jl
xor
mov
pop
xor
jp
or
ficoml
jecxz
gs
mov
xchg
jecxz
iret
mov
push
push
es
adc
cmpsb
push
pop
pop
aas
xchg
cmp
lret
pushf
add
inc
movsl
andl
stos
cli
xchg
cli
cmpsb
pushf
imul
fbld
rcrb
cmp
test
test
add
arpl
loope
daa
les
jno
dec
ret
loopne
bound
pushf
sbb
out
cs
es
add
loope
ss
lods
insb
out
sti
pop
or
mov
sbb
pop
aad
adc
xchg
add
sti
shrl
dec
mov
cmp
mov
pop
daa
mov
jb
bound
xchg
dec
mov
adcb
cmp
mov
mov
std
adc
adcl
mov
adc
push
testl
or
adc
dec
popf
jge
shl
repnz
push
adc
sti
mov
push
scas
cmp
sbb
and
inc
xchg
sub
push
stos
in
popf
iret
sahf
or
push
ds
push
push
cmp
aam
lea
and
dec
addr16
je
leave
fwait
add
test
ret
pop
fldl2t
imul
imul
xor
loope
mov
jmp
mov
insb
xchg
jae
and
loopne
loopne
adc
push
shl
movsb
adc
arpl
xchg
pop
sahf
cmp
sarb
mov
dec
jne
out
ret
iret
cwtl
jge
push
int
push
in
mov
pop
and
sbb
loopne
push
cmp
insl
shlb
mov
rol
dec
out
data16
mov
cwtl
xchg
cli
in
fs
bound
mov
xor
push
cs
or
xor
and
fistpl
push
ret
loop
rolb
mov
hlt
xchg
iret
add
sbb
shll
pop
sbb
aaa
adc
lret
mov
test
inc
sbb
fwait
mov
fiadds
shlb
mov
mov
lret
imul
and
pusha
sarl
push
sbb
xor
mov
mov
sub
xor
test
data16
inc
push
and
mov
cltd
pop
dec
imul
dec
mov
sub
out
fsts
push
mov
mov
add
aad
pop
push
jo
scas
mov
in
bnd
xchg
push
xchg
push
ficomps
jmp
dec
sub
xor
stos
pop
cmp
popa
mov
push
ljmp
bound
cmp
sub
push
push
cmp
mov
fimull
and
jne
out
lds
sub
movl
mov
scas
stos
leave
loope
jp
clc
imul
outsl
int3
dec
cmp
rcrb
mov
dec
shll
maxps
mov
push
cmp
test
imul
ljmp
and
fistl
ret
ret
or
ds
cmp
popf
sub
faddp
inc
les
jl
lahf
adc
adc
push
sahf
push
shll
imulb
or
cmp
fiadds
popf
test
xchg
sub
insb
js
xchg
adc
aam
jl
cltd
in
int3
jmp
add
or
repnz
mov
std
sahf
ljmp
add
jae
scas
jp
pushl
or
adc
out
lret
jo
into
dec
idivb
test
loope
sbb
cltd
outsb
repz
push
pop
inc
orl
sbb
mov
pop
lock
jmp
xor
aas
test
test
movb
inc
into
xchg
pop
leave
fidivl
dec
adc
add
lahf
adc
out
dec
fsubs
cmp
push
testb
nop
inc
fdivs
insb
xchg
push
aad
jecxz
ds
lcall
inc
dec
les
outsl
lret
rcl
adc
dec
pushf
pop
dec
das
rcll
and
test
adc
xchg
dec
jge
or
mov
mov
ljmp
sub
xor
push
scas
call
leave
loope
es
xchg
les
cwtl
and
add
fs
sbb
inc
loope
clc
stos
adc
push
js
in
movsb
out
xchg
fs
pop
mov
es
add
pop
add
adc
sub
cmp
popa
push
sbb
inc
push
or
cltd
sar
inc
leave
in
sarl
imul
aam
cltd
mov
inc
popa
mov
mov
out
mov
xor
repz
pop
jl
cmp
sahf
sbb
cli
push
cmpb
inc
fdiv
adc
enter
push
in
rcrl
es
push
jns
sbb
and
mov
sbb
xor
push
rcrb
aam
addb
ss
sbb
ds
out
mov
test
adc
mov
rcl
dec
scas
xchg
xor
cmp
push
cmc
mov
bound
mov
sub
lcall
ror
jle
das
mov
push
xchg
cmp
mov
movsb
pusha
inc
dec
sahf
je
cld
loope
cmp
shrb
stc
mov
adc
in
into
icebp
xor
flds
xchg
movsb
or
pop
repz
sub
lds
hlt
or
xchg
test
sbb
cwtl
sbb
jb
dec
jno
xchg
xor
js
mov
gs
movl
shrl
mov
jae
mov
in
xor
ljmp
fcmovnu
sahf
pop
mov
imul
dec
sbb
xchg
ss
jns
fs
inc
in
xchg
out
lcall
int
jne
mov
dec
dec
jae
sub
adc
fsubl
aad
in
outsl
call
loopne
daa
aad
dec
mov
jbe
cltd
xchg
decb
inc
add
xchg
lds
push
push
push
jp
shll
aad
lret
ret
sahf
or
mov
pop
push
dec
ret
pop
dec
or
adc
movsl
inc
push
ljmp
stos
imul
bound
push
clc
and
jo
or
mov
popa
lahf
pusha
je
test
pop
pop
mov
stc
in
sub
ja
xor
xchg
jbe
mov
push
lock
clc
fidivs
pop
and
dec
pushf
jno
jmp
mov
inc
call
insb
daa
enter
push
ds
ljmp
sub
push
pop
xchg
dec
dec
sub
and
mov
test
mov
lcall
out
push
loopne
and
jmp
push
fnsave
test
cmpsl
pop
xor
sub
mov
lahf
fcomps
mulb
sarb
fiaddl
jle,pt
mov
imull
push
or
in
imul
jb
out
cmpsb
jnp
push
push
jge
mov
mov
insl
and
sub
dec
jge
aaa
xor
in
or
movsl
dec
stos
clc
lretw
out
lcall
jns,pn
daa
repz
sub
lock
jne
pop
mov
mov
dec
xor
inc
xchg
fsubr
jle
fs
cmp
lea
inc
jbe
xchg
and
je
ljmp
shlb
inc
addb
stos
push
loope
into
sub
fistpl
mov
add
pop
sbb
xchg
orb
fidivrs
lock
leave
repz
dec
mov
jge
sbb
and
mov
mov
mov
aam
cwtl
cmpl
mov
inc
xor
cmp
gs
xchg
fisubs
test
adc
jnp
push
in
stos
repz
push
cmp
mov
or
inc
mov
pop
stos
fstps
repz
lret
xlat
push
cltd
sbbl
lds
push
sti
icebp
in
mov
adc
fdivs
loop
push
repz
rcr
and
jnp
in
ret
or
fsubl
mov
lds
xor
pusha
lods
cs
out
inc
addr16
sbb
aam
notb
stc
faddl
rorl
jecxz
mov
cli
js
testb
repz
lock
loope
dec
std
mov
lret
push
inc
aaa
dec
movsl
je
xchg
insb
jne
jae
pusha
sub
cmp
mov
lods
push
mov
out
push
jae
inc
lods
xor
je
and
xchg
push
icebp
xchg
jno
mov
jb
out
xor
sbb
lahf
or
clc
sub
mov
sarl
pminub
and
push
pop
dec
xor
stc
ret
adc
sti
rcll
repnz
inc
cmp
xor
scas
fisttps
mov
mov
mov
adc
inc
mov
xchg
shll
and
or
jbe
cmpb
or
push
xor
jg
ds
pop
fistl
pushf
aas
fidivrl
ret
mov
cmpl
add
mov
lret
arpl
xchg
test
adc
mov
mov
fnstcw
jne
inc
mov
roll
lock
fidivrl
sbb
sub
shr
adc
dec
out
push
mov
call
cmpb
cmp
push
pop
arpl
in
add
add
xor
stos
jmp
lods
iret
test
stos
sub
scas
aad
jbe
stos
popf
adc
arpl
imul
or
jmp
jnp
mov
fisubrl
pushf
cld
or
int
scas
repz
jg
stc
scas
mov
mov
pusha
or
das
loop
stos
ffreep
lret
push
jbe
cli
les
mov
imul
movsb
dec
sbb
dec
push
fstpl
rcrb
adc
inc
mov
sbb
aad
stos
rcll
out
inc
and
addl
outsb
xchg
insl
or
leave
jb
repnz
stos
push
pop
lcall
ficoml
in
les
aam
fstps
push
adc
lea
outsl
pop
jmp
cmpsb
jle
aam
jbe
mov
arpl
mov
jp
mov
js
in
and
mov
sti
aad
aad
mov
add
or
jns
stos
sbb
mov
cmpsl
inc
sbb
stos
pushf
mov
daa
rorb
aad
sub
inc
xor
scas
into
outsl
es
mov
in
mov
sub
mov
mov
inc
xor
mov
cmc
in
out
sbb
xchg
jg
lds
les
sub
fcomi
add
sbb
mov
repnz
dec
push
stos
pop
mov
push
xchg
in
xor
push
dec
popa
cs
sub
std
mov
inc
or
cld
and
sub
jp
cmc
test
push
or
sbb
js
inc
xchg
pop
push
fistpl
adc
std
mov
push
jp
sahf
fsubs
std
sub
pusha
add
cmp
hlt
dec
xchg
insb
lret
in
out
out
push
lahf
aas
lods
nop
xor
xor
int
jnp
in
jecxz
inc
testb
and
push
out
sbb
inc
push
mov
out
roll
mov
mov
or
rorb
pop
push
push
imulb
pop
dec
movsl
cwtl
fistps
repz
std
fs
cmpsl
xchg
push
cmpb
and
jo,pt
das
cmp
or
adc
loopne
leave
add
rol
repz
push
insl
orb
and
imul
int
sbb
dec
fbstp
pop
jmp
adc
in
push
xchg
es
mov
inc
outsb
jne
iret
mov
mov
sbb
cmpsb
loop
in
pop
jle
fldenv
insl
push
sbb
mov
dec
mov
stos
prefetch
push
adc
mov
or
xor
enter
adc
jp
add
movsb
aaa
out
cmpsl
jl
js
out
inc
xchg
fmull
sbb
ret
lcall
jmp
lea
xor
jno
fcomps
xor
hlt
scas
inc
cmp
lods
sbb
jns
pop
test
inc
mov
xor
sbb
pop
and
sarl
cmpsb
sub
rcl
jno
mov
push
and
lcall
and
add
es
mov
test
cmp
pop
ljmp
inc
int3
pusha
mov
loope
dec
mov
mov
mov
je
or
les
mov
popf
shrl
xchg
cmp
test
sbb
fdivp
adc
push
xor
pushf
xor
divl
mov
scas
clc
mov
lahf
push
int3
push
pop
adc
cmp
in
mov
mov
daa
xchg
or
xchg
orl
inc
adc
push
add
sub
jmp
xchg
cmpsb
and
aas
fildl
std
dec
testb
jge
cmovp
sahf
or
cmp
or
sub
cmp
and
cmp
jo
push
sub
scas
push
shll
mov
and
inc
sarl
pop
mov
imul
lret
dec
mov
sub
xor
inc
push
push
jns
insb
mov
in
pusha
mov
popa
push
je
pop
mov
add
scas
push
outsl
or
push
int3
dec
jge
dec
jns
xchg
test
mov
mov
jmp
popa
in
add
gs
stos
lahf
les
iret
pop
movsl
mov
rcrb
insl
fsubs
ja
int3
and
jnp
sub
pop
or
jnp
aas
pushl
imul
sub
inc
in
ljmp
mov
je
fstl
or
sub
mov
push
sub
loope
fdivl
cmp
push
mov
dec
lock
lds
fldl
and
cmpsb
dec
ret
adc
mov
leave
loopne
push
adc
mov
test
dec
popa
sub
xor
add
imul
in
sub
insl
insl
push
jne
lods
out
ss
push
out
out
pop
nop
sbbl
mov
add
push
insb
mov
xor
inc
addr16
pushf
sahf
insb
sti
repnz
hlt
inc
filds
clc
jne
test
std
push
sub
push
adc
in
mov
jmp
add
mov
dec
pop
daa
push
js
ror
mov
xor
lods
xchg
pop
cld
inc
and
ja
data16
xchg
mov
push
dec
in
inc
pop
out
ficomps
mov
sub
push
sub
lahf
mov
lret
call
mov
cmpsb
sub
stc
xchg
int3
and
pop
test
andl
mov
packsswb
cmp
adc
xlat
cli
push
mov
xlat
repnz
add
je
shlb
out
dec
push
inc
mov
leave
nop
add
in
mov
mov
mov
in
pop
popf
dec
jg
addl
push
stos
ficompl
xchg
mov
lret
cld
sbb
ret
and
idiv
rcrb
les
notb
jl
xchg
mov
push
andl
lods
sub
add
pop
loop
pop
xchg
cmp
push
add
mov
ja
xor
and
loop
push
pop
pop
icebp
rclb
out
mov
lret
jp
scas
fwait
cwtl
pop
xlat
sbb
jmp
and
stos
or
pop
jmp
outsb
orl
or
xchg
push
outsl
inc
push
xor
test
loopne
dec
in
into
aad
repnz
xor
jl
xor
or
add
push
or
lea
sbb
lahf
mov
hlt
fildll
dec
xor
repnz
or
dec
or
das
sahf
xchg
ret
add
push
in
push
repz
pop
and
scas
in
dec
sub
cmp
push
pop
mov
inc
inc
out
clc
std
clc
mov
add
cmpsb
ljmp
xor
sbb
cmpsl
jmp
push
idivl
cmpsl
push
data16
jmp
lods
lahf
pop
in
ds
rcrl
fistpl
pop
jbe
mov
popa
aad
rol
scas
in
sub
inc
mov
sar
mov
mov
or
ss
fiadds
cmpsb
idivb
sub
cmp
lret
push
mov
xor
xchg
out
mov
pop
sbb
loopne
xchg
jne
push
dec
mov
in
pop
mov
cmp
lret
mov
mov
push
push
push
out
xchg
pop
test
sub
push
mov
insl
sbb
out
jbe
cmp
scas
mov
push
xchg
test
xor
and
pop
call
cmp
out
cwtl
dec
jno
or
clc
fildll
sbb
jle
mov
out
mov
dec
pop
rcll
add
mov
dec
jg
cmp
pop
xlat
sar
xor
cmp
std
fsubrl
xchg
iret
lret
pop
dec
ret
push
cmp
jno
in
jno
incb
fchs
jge
movsl
jecxz
addr16
pushf
mov
cltd
cmp
and
outsb
push
mov
je
adc
sti
jg
rolb
and
adc
movsl
mov
sub
mov
in
stos
push
ffree
popa
sbb
add
out
cmp
jns
pop
in
add
pop
pushf
cwtl
adc
aaa
inc
pop
pop
sbb
xchg
es
fwait
ss
xchg
push
mov
aaa
xlat
sbb
fwait
jp
add
je
and
out
cmp
call
cmp
mov
jmp
adc
sbb
test
lock
cmp
push
mov
das
fimuls
pop
mov
test
adc
xlat
in
pusha
stos
icebp
adc
dec
lcall
dec
fwait
mov
shr
test
push
pop
out
fcom
jns
inc
mov
scas
imull
dec
cmp
ret
repz
inc
xor
mov
out
xor
push
arpl
lds
pusha
lock
adc
fists
adc
aas
xor
hlt
pop
or
or
add
lret
ret
push
xor
or
repnz
cld
jmp
sahf
push
xor
mov
incl
mov
iret
adc
imulb
adc
sub
out
add
or
mov
inc
orl
lods
subl
mov
xlat
pop
mov
iret
sub
inc
sete
stos
push
pop
xchg
repnz
movsl
mov
clc
lock
int3
lods
sub
push
pop
fdivrl
push
pop
push
fadds
push
adc
mov
mov
push
hlt
es
test
sbb
or
std
push
shrl
les
jnp
jl
dec
add
arpl
lret
add
adc
stos
leave
outsb
jae
outsb
js,pt
cmp
xchg
and
mov
mov
cmpsb
imul
shll
mov
mov
mov
pop
mov
roll
std
xor
aas
mov
dec
push
inc
fs
lods
je
insl
pmaddwd
jecxz
add
xchg
pop
dec
jp,pn
and
jp
adc
adc
xchg
lcall
dec
dec
jecxz
mov
xchg
sub
xchg
mov
ret
out
pop
xor
pop
lea
mov
xchg
hlt
lea
lock
sbb
inc
jl
push
repnz
add
pushf
cmpsl
sub
jge
aaa
bnd
mov
xor
cmp
jmp
xor
xor
lret
aaa
aam
outsl
push
in
sar
out
mov
cmp
ret
sti
outsb
xchg
mov
loopne
sbb
add
ror
mov
ret
and
jecxz
gs
xchg
push
mov
loop
mov
or
pop
cmp
clc
inc
sub
ja
cmc
add
fldt
cs
add
fs
movsl
aad
icebp
aaa
jne
sbb
js
adc
cmp
in
sti
repnz
xchg
or
cmp
leave
xchg
mov
cmpl
divl
adc
jmp
lcall
repz
push
repz
and
add
add
xchg
xchg
add
mov
mov
notl
cld
mov
rorl
sti
movsl
aam
loope
out
imul
les
pop
cwtl
mov
fnstcw
inc
popf
icebp
iret
addr16
pop
out
fsubs
xchg
cmp
push
mov
mov
xchg
aam
inc
mov
in
outsb
xor
mov
repz
lea
into
add
xlat
cmp
insl
lcall
and
xlat
jge
lret
lahf
push
cmpb
cmp
fnstsw
aaa
dec
mov
mov
in
hlt
pop
push
jbe
xlat
clc
in
shlb
es
shrb
cmp
cld
pop
stos
test
mov
lock
ret
and
lods
stos
xor
lea
jns
push
push
out
repz
rorb
into
adc
cmp
pop
mov
fs
cmp
ljmp
jne
cwtl
movsb
mov
cmp
rolb
lahf
test
cwtl
jecxz
add
ljmp
out
cmp
movsb
outsl
cmp
notb
sti
mov
sub
add
push
mov
or
inc
push
pop
push
daa
mov
cwtl
bound
dec
scas
add
xor
cmc
push
mov
cmc
scas
scas
inc
jno
pop
push
pop
jns
mov
pop
aaa
inc
popf
insl
adc
hlt
add
mov
inc
pop
movsb
adcl
mov
addr16
movsb
adc
jbe
sarb
orb
push
mov
adc
repnz
imul
gs
fidivl
mov
dec
scas
sbbl
add
test
je
pop
dec
test
add
clc
cltd
je
dec
xor
pop
and
bound
adc
jp
fidivl
sbb
dec
outsl
dec
ss
popa
dec
movsb
inc
and
nop
cld
roll
rolb
je
stos
add
xchg
and
divb
gs
xor
dec
or
add
pop
lahf
insb
shll
mov
aad
test
xlat
sahf
xor
fsubl
pushf
movsb
mov
rol
nop
or
mov
adc
and
or
decl
inc
pop
movsb
cmp
imul
jmp
xlat
in
cmp
pusha
push
xchg
push
fildl
jp
cmpsl
addr16
or
jns
jp
xor
mov
ret
mov
inc
pop
add
sub
add
hlt
rsm
xchg
std
adc
xchg
scas
scas
por
je
sti
das
cli
pop
adc
mov
aas
sub
pop
shrl
and
or
mov
sti
cmp
cmpb
mov
xchg
cltd
adc
loop
fistps
lea
fstps
insb
aad
enter
lea
mov
mov
lds
jl
cmc
cwtl
xchg
dec
hlt
cmp
push
pop
pusha
in
leave
repz
push
mov
dec
sbb
out
repz
imul
xor
xchg
add
ljmp
int3
pop
popa
xchg
inc
es
mov
mov
arpl
in
cld
or
jne
or
mov
insl
dec
sbb
xchg
repnz
mov
sub
int3
jne
sarb
inc
hlt
adc
shlb
testb
dec
pop
lret
mov
cmp
cmp
mov
push
enter
cld
data16
xchg
scas
jmp
andl
pop
rorb
push
int
sbb
in
adc
mov
shrl
mov
dec
mov
mov
rcrl
int3
scas
jg
cli
ja
arpl
dec
mov
or
mov
pavgb
outsb
xchg
das
ja
xchg
or
in
rcll
jne
sub
dec
cmc
dec
scas
dec
fistpl
mov
leave
jg
jnp
inc
out
xchg
jns
repnz
cmp
lret
cld
je
sahf
pop
stc
movsb
sbb
mov
lea
mov
lods
xchg
cld
add
push
cmpb
test
add
jecxz
push
xor
lock
lret
pop
dec
mov
sti
loope
lcall
or
and
shrb
cmp
clc
xor
or
pop
push
and
sub
sbb
sarb
in
mov
xchg
mov
xchg
pop
arpl
mov
fistl
and
test
xlat
inc
pop
lock
jecxz
fs
xor
scas
gs
add
push
clc
movsb
pop
shlb
push
fs
iret
sbb
mov
in
movsb
loopne
andl
test
pop
lock
xchg
dec
scas
xor
or
inc
dec
sbb
stos
pusha
xchg
hlt
movsb
fsubr
dec
arpl
cli
imul
jns
mov
int
adc
mov
repnz
outsb
cltd
mov
sub
fildl
sub
scas
and
xchg
mov
xor
inc
popf
add
mov
test
adcb
or
not
add
ret
jmp
in
clc
mov
xchg
popf
inc
imul
dec
int3
add
setno
xor
sub
cmp
adc
repnz
pop
pop
aaa
or
out
sbb
cmc
push
mov
int3
dec
filds
popf
aam
sahf
mov
std
cmpsl
sahf
inc
pop
push
pmaxub
fidivl
dec
or
ja
in
dec
jl
scas
out
push
insl
jbe
fcoml
jg
out
dec
xchg
pop
hlt
sub
pop
les
xor
ljmp
mulb
scas
mov
xchg
sub
mov
ljmp
js
inc
int3
inc
or
and
sub
mov
and
cld
movsl
fcompl
sahf
sbb
fnstenv
xchg
lea
push
xchg
adc
inc
test
add
add
ret
imul
gs
insl
sbb
cmc
push
cs
add
push
sbb
xchg
lock
or
stos
dec
inc
repz
pop
sbb
push
lcall
pop
add
in
dec
nop
ljmp
inc
bound
cwtl
jmp
das
xchg
mov
push
mov
movsl
insb
push
sub
fcompl
and
cmp
push
mov
and
jo,pt
mov
mov
dec
mov
pop
add
pop
das
int
gs
cltd
cmp
hlt
push
xchg
push
mov
adc
xchg
dec
dec
sbb
sub
das
dec
nop
ret
insl
and
fwait
cmc
jge
lods
mov
adc
mov
daa
sbb
xchg
aaa
stos
pop
pop
push
in
mov
push
insb
xchg
pop
push
or
fimull
and
pop
add
mov
pusha
mov
add
mov
push
sub
pushf
inc
sub
jl
daa
add
xchg
leave
xor
sub
inc
lcall
jne
sbb
ja
push
xchg
repz
push
sbb
dec
rcl
push
mov
testl
int
cltd
mov
scas
bound
nop
shr
or
stos
cmpsl
jp
dec
filds
xor
jmp
lods
scas
ret
jecxz
mov
cmc
lods
xor
mov
xchg
jl
in
mov
inc
fs
or
sbb
aaa
mov
lods
aas
xchg
adc
mov
push
jp
arpl
sub
dec
rcrl
sbb
inc
adc
stos
and
loopne
iret
mov
lock
inc
shll
gs
jmp
lock
mull
adc
push
mov
pop
dec
sbb
clc
sub
adc
adc
add
je
lods
pop
adc
jle
mov
popa
nop
xchg
into
and
cs
xor
jns
lret
imull
cmp
mov
decb
dec
add
dec
push
test
push
dec
inc
fimuls
fwait
dec
push
xchg
fisubl
sub
sub
fs
or
xor
outsl
inc
mov
aas
mov
out
dec
push
cwtl
sbb
cmpb
test
nop
test
or
std
cltd
or
cmp
mov
aad
insl
fisttpl
mov
sarb
outsb
cmpsl
scas
sbb
add
or
cld
jne
fistl
pop
ds
das
das
jecxz
push
je
sub
push
xor
jbe
popf
leave
shrb
fcoms
ljmp
and
jmp
xchg
test
lods
dec
scas
ss
mov
clc
sbb
insb
push
mov
stos
push
xlat
or
pop
lcall
or
mov
lds
shl
test
sbb
push
sbb
subl
push
push
push
push
pop
or
popa
ja
dec
out
cmc
cmp
mov
bound
mov
pop
sub
int
mov
xlat
jecxz
jp
mov
loope
out
inc
sahf
push
xor
mov
mov
sub
test
iret
push
xlat
int
lcall
xchg
and
jb
sbb
aam
adc
in
lahf
aaa
add
das
cmc
sbb
std
fcomps
lcall
sbb
mov
and
pop
cmp
ret
mov
out
sti
push
movsb
push
clc
xor
or
jne
pop
sub
das
sub
sbb
ss
movsb
and
jnp
insl
or
xchg
cmp
movsb
shll
sbb
movsl
dec
adc
pop
std
bound
nop
into
dec
jo
nop
jo
sti
adc
adc
int3
shll
test
or
cwtl
cli
push
xchg
inc
xchg
pop
push
js
adc
loope
add
repnz
jecxz
rcr
dec
add
xor
xchg
mov
shrb
insl
sbb
mov
popf
jne
cmp
pop
mov
or
enter
cmp
dec
cmp
cmp
imul
aam
pop
dec
lcall
xor
stc
xor
je
outsl
xor
adc
inc
push
lods
mov
cs
or
sahf
orl
mov
imul
mov
or
adc
divl
mov
mov
out
mov
dec
or
mov
xchg
lds
push
xchg
sbb
ret
pop
jae
inc
out
inc
and
iret
pop
pop
mulb
popf
pop
jbe
jbe
xchg
aad
mov
add
sub
shlb
xchg
jl
bound
addr16
or
push
stc
push
scas
call
dec
es
xor
test
xchg
adc
out
or
jae
in
stc
and
fidivs
outsb
out
cmp
push
mov
adc
aaa
loopne
sub
and
jl
mov
imul
lds
add
addb
push
gs
fs
mov
pop
adcl
or
xchg
push
enter
xchg
lods
inc
pop
stos
or
mov
cmpsl
push
in
inc
xchg
pusha
jne
mov
es
rol
pop
sbb
stos
and
cmp
icebp
lcall
push
adc
lahf
scas
push
ja
fstps
das
pusha
and
sbb
adc
sbb
mov
aam
push
xlat
icebp
ret
cmc
adc
push
mov
pop
xchg
cmp
dec
loop
insl
notb
cmp
mov
push
test
or
fwait
jne
loopne
out
call
jnp
jb
in
not
in
je
and
fldl
jl
ds
daa
xchg
mov
js
mov
jae
movsl
jb
fistpll
fcom
adc
out
mov
xchg
xchg
jb
lret
jae
shlb
mov
and
push
into
xchg
adc
rcl
out
cltd
xchg
jg
jns
lcall
push
cmp
mov
cmpl
mov
push
jno
xor
test
cmc
dec
add
js
mov
fcompl
fwait
jbe
pop
sub
cwtl
jb
test
notb
mov
push
pop
sbb
or
xchg
xor
and
aaa
cmc
lock
dec
mov
push
jbe
mov
test
xchg
sub
mov
icebp
outsb
push
cmc
xor
loop
sub
jle
jmp
push
xor
cmp
aas
das
push
mov
inc
push
pop
sub
adc
in
xchg
inc
add
ret
and
sub
ljmp
xor
jge
test
bound
scas
lods
movb
subl
add
cwtl
ret
lret
cld
cmpsl
imul
cmpxchg
out
outsb
fs
mov
dec
rcll
ret
std
jg
outsb
xchg
jno
push
aad
test
daa
jo
mov
mov
aas
add
xchg
daa
add
xor
pop
movsb
mov
cmp
int3
push
cmpsl
fisubs
pop
out
arpl
push
dec
sbb
xor
das
cs
inc
mov
jle
cli
popf
jl
scas
add
sub
ss
sub
adc
ja
clc
pop
out
push
fwait
dec
arpl
pop
lea
and
and
jl
lret
outsl
cmp
and
dec
ret
and
test
mov
sub
in
insl
mov
movsb
aad
or
dec
nop
inc
rcll
jmp
jne
inc
clc
xchg
dec
mov
xor
adc
lods
outsb
movsb
pop
push
popa
cwtl
xchg
mov
daa
pop
fidivrl
int
and
shrb
insb
add
imul
cmpsb
fcompl
adc
mov
inc
inc
stos
movsb
sub
aam
div
dec
movsw
stos
xchg
jb
cltd
pop
add
adc
inc
dec
add
mov
ljmp
shr
lret
adc
add
insb
cmp
ret
add
push
adcl
add
sbb
sbb
nop
adc
in
or
xchg
sub
dec
pop
aas
mov
out
push
popf
sub
pop
cmpsb
sub
xor
push
sarb
cmp
jo
sbb
mov
xlat
lret
pop
mov
add
pop
pop
int3
test
adc
sarb
cwtl
lret
bound
push
daa
movsl
xchg
xor
sub
popf
add
dec
push
mov
loop
inc
mov
pop
lea
fdiv
pop
xchg
hlt
icebp
xorl
aaa
out
cmp
jo
pop
repz
lods
fcmovnbe
loope
push
or
insl
loope
rcrl
and
push
ljmp
in
mov
sub
insb
jo
cs
mov
fsub
sub
inc
sbb
push
mov
mov
dec
mov
outsl
lret
sti
outsl
shlb
mov
sub
rcrb
outsb
daa
aam
push
cmc
lcall
pop
insl
jno
scas
push
fnstcw
mov
sbb
dec
fdivrl
mov
cmpsl
sbb
xchg
out
nop
scas
in
shll
bnd
cmp
shll
test
cmp
out
inc
push
enter
scas
aaa
insl
sbb
pop
xlat
sbb
sub
outsb
mov
xor
arpl
adc
dec
adc
jno
dec
test
jnp
jmp
fiaddl
rorb
sbb
bnd
push
mov
sub
pop
cmpb
push
cs
ja
adc
push
das
rcrb
lods
gs
loope
pop
insb
scas
in
out
gs
jmp
dec
pop
mov
les
jmp
xlat
adc
and
scas
mov
add
ds
iret
lea
push
lcall
mov
lds
out
add
pop
cmpsl
or
jb
mov
imul
mov
dec
clc
imul
mov
xchg
mov
fs
xchg
cmp
jge
stos
cwtl
in
mov
mov
cli
ficoms
or
std
inc
jecxz
nop
icebp
dec
mov
dec
sbb
sbb
cmp
pop
nop
xor
iret
xor
pop
jmp
icebp
je
mov
sahf
lods
add
add
test
lahf
fwait
adc
pop
xorb
bound
stc
and
movsb
mov
xchg
loope
cs
mov
sbb
mov
cmp
add
and
cli
sahf
add
in
test
loop
fsubs
pop
mov
or
sahf
inc
repz
sbb
lcall
sbb
and
ret
lea
pusha
sbb
ja
pop
rorb
push
mov
xchg
pop
stc
cmpsl
push
sub
mov
imul
dec
or
add
sbb
push
fwait
ja
or
pop
dec
aas
mov
pusha
sbb
and
sbb
daa
lods
adc
add
inc
bswap
movsb
or
and
pop
cmp
aaa
lods
jmp
xor
mov
data16
fdivrl
iret
lcall
dec
and
insl
cmovle
inc
repnz
cwtl
cmp
adc
enter
cli
icebp
mov
push
mov
hlt
sbb
inc
ja
rorl
dec
pop
xchg
mov
jmp
popa
data16
in
xor
cltd
inc
mov
xchg
mov
push
fimull
mov
call
js
cmp
leave
movsl
xor
mov
mov
pop
pop
and
pop
add
sbb
js
enter
or
lds
pusha
mov
push
test
ljmp
dec
sbb
orl
data16
ret
pop
mov
add
fbld
aaa
movsl
sub
fsubs
imul
stos
fistps
push
arpl
mov
jmp
pop
and
test
shlb
jecxz
sbb
aad
sub
aas
fwait
push
data16
stos
inc
or
ja
cmp
cmp
insb
fisubs
push
cmpsl
bound
sub
ret
dec
cmc
sbb
out
fiaddl
int3
mov
mov
xor
jae
xlat
js
fwait
cmpsl
mov
xor
cmp
cltd
and
ljmp
in
inc
push
jp
jno
insb
dec
or
and
jae
pop
or
and
stos
sahf
cwtl
test
xlat
gs
pushf
in
ficoml
mov
or
pop
xchg
fmulp
bound
mov
inc
xchg
and
lds
in
stc
stc
enter
daa
cmpsb
loopne
xor
mov
loopne
add
call
shlb
btr
push
imul
pop
inc
sti
leave
inc
jge
add
test
cmc
fsubrs
sbb
and
stos
add
int3
or
and
dec
stos
dec
push
xlat
subb
jns
shll
out
mov
mov
pop
insb
mov
aam
jp
outsb
and
pop
outsl
xchg
mov
test
loope
cli
pop
shll
imul
inc
push
xorl
cmc
test
push
jne
int3
out
add
hlt
and
dec
popa
scas
int
pop
mov
mov
jg
mov
pushfw
sahf
scas
das
xchg
dec
jo
fistl
mov
jp
fnstcw
or
mov
and
fists
shrl
lahf
les
cmp
cli
std
push
sub
xchg
sbb
stos
hlt
jle
sbb
jae
push
sbb
out
pop
xor
das
and
lret
and
mov
mov
cmc
mov
inc
fmull
cli
xlat
in
test
fsubl
push
push
or
push
jnp
pop
ror
in
cmp
mov
mov
in
data16
mov
mov
mov
into
sbbb
in
or
mov
cs
mov
sub
stos
pop
faddl
xor
xchg
pushf
js
mov
mov
lcall
in
insl
adc
popa
cmp
and
mov
inc
dec
in
ror
aam
mov
orl
mov
int
rorb
xor
pusha
in
xor
dec
jle
sbb
ljmp
sti
sub
pop
push
outsl
loopne
push
xchg
fiadds
jg
mov
xor
cmp
mov
mov
pusha
push
shll
jne
shll
pop
and
out
ficomps
push
loope
dec
jo
xor
lahf
jnp
pop
or
adc
decl
adc
mov
mov
or
sahf
hlt
jns
and
outsl
pusha
jbe
jae
mov
cmp
loop
hlt
loopne
push
divl
pop
adc
mov
cli
cld
mov
aas
adc
addl
cmp
sbb
hlt
xor
dec
fsts
pop
test
insl
pop
inc
add
loopne
mov
push
dec
jmp
xor
and
rclb
idiv
mov
add
in
cmp
cmp
icebp
lret
pop
push
mov
lret
xor
sahf
aaa
push
ss
push
xor
dec
mov
call
and
cmp
fistpll
mov
pop
jno
jecxz
pop
in
movsl
cmpsb
notb
mov
in
lret
sub
inc
adc
adc
jmp
outsl
out
or
add
or
out
pop
mov
and
rcrl
pop
enter
pop
mov
lcall
inc
pop
fbld
es
or
push
sub
sbb
dec
mulb
cwtl
inc
sbb
js
test
mov
lea
dec
inc
cmp
jmpw
or
mov
aaa
jecxz
ss
push
call
and
xor
out
add
dec
aad
inc
lahf
repz
mov
std
mov
int3
mov
mov
mov
sti
stc
lds
sbb
inc
mov
push
cmp
jg
jl
jne
adc
pop
push
insl
adc
ds
and
adc
aad
cmp
mov
cli
and
mov
ljmp
inc
addr16
lcall
jbe
addr16
mov
rorl
dec
fistps
outsb
add
jae
enter
cmp
data16
xchg
lods
jo
out
mov
sbb
mov
cmc
mov
cmp
jmp
adc
movsl
dec
mov
and
mov
pop
subl
mov
fistl
jp
sbb
or
imul
mov
orb
inc
pushf
mov
push
adc
nop
or
inc
js
push
aas
or
inc
dec
test
cmpsb
mov
push
push
imul
push
fxtract
jl
mov
xchg
cmp
jne
cmc
adc
xor
lahf
movsl
stos
daa
push
sub
cld
arpl
outsb
sub
sub
xor
cmp
pop
scas
jne
repnz
fucomp
and
mov
dec
cwtl
mov
adc
daa
push
nop
xor
xor
sti
push
adc
inc
inc
jp
push
add
xchg
jecxz
cli
jle
push
dec
mov
scas
xchg
call
mov
sbb
push
int
mov
inc
sbb
adc
jg
test
mov
cmc
xor
sub
movsl
jge
imul
inc
sti
data16
mov
nop
cmp
xchg
mov
push
jnp
jecxz
mov
adc
add
hlt
pusha
xor
fwait
xor
mov
je
shll
dec
add
mov
xor
cs
pop
negb
pop
dec
add
mov
clc
mov
cld
mov
push
int3
in
rclb
repnz
dec
pop
xchg
dec
push
jmp
mov
insl
mov
xor
dec
rorb
nop
shll
fisubl
xlat
xchg
popa
adc
adc
jo
xchg
andl
test
lcall
int3
rcl
ds
movsl
mov
sti
xor
sbb
jecxz
xchg
stos
mov
mov
mov
and
test
aam
add
fsts
sub
xchg
fwait
mov
or
aas
sbb
push
mov
repz
sub
xchg
sub
andl
imul
clc
stos
dec
iret
or
addr16
and
loope
stos
lret
rcrb
jl
shl
les
jns
lahf
pop
adc
pop
mov
sub
js
addps
sub
test
sbb
cmp
cmp
rclb
or
pop
les
test
cmp
sarb
inc
aas
negl
test
push
lret
iret
cmp
repnz
mov
or
pop
and
sbb
mov
inc
lret
rolb
and
rclb
std
out
or
push
mov
out
inc
fcmovbe
or
cmp
jo
add
jp
fistps
test
icebp
sbb
dec
jne
jbe
sub
rclb
mov
inc
mov
fstpl
push
in
sarl
dec
rcrl
push
pop
lret
push
aaa
cmp
xor
and
jb
inc
adc
repnz
out
repz
xchg
bound
je
ret
and
mov
ss
push
xchg
enter
adc
mov
int3
faddl
or
or
jae
mov
push
add
sub
mov
inc
push
aaa
jnp
push
inc
push
and
out
adc
xor
sbb
pop
sti
xor
outsb
push
jno
and
sub
mov
imulb
mov
xor
pop
inc
jo
xor
push
lds
out
sub
and
orl
mov
in
gs
incb
push
pop
pop
xlat
cmp
cmpb
mov
insb
stos
xchg
jge
or
inc
add
mov
xlat
rolb
inc
cmp
push
dec
xchg
push
int
lret
pop
cmp
mov
pop
fidivrs
arpl
cli
pop
shlb
popa
and
mov
jge
mov
popa
movsl
xor
cmpsl
xlat
cltd
lahf
xacquire
je
mov
push
popa
fildl
sub
xor
lea
and
les
sbb
xchg
inc
fiadds
xchg
pushf
in
jnp
fimuls
and
data16
fildl
mov
inc
xchg
add
insb
gs
cmpb
shll
subl
pushf
repnz
push
dec
stos
fisttpl
pop
sarl
add
addl
dec
jg
stc
jl
dec
adc
add
rcll
cmp
cmp
mov
push
stos
flds
or
scas
jmp
paddd
lea
sbb
and
sbb
loope
fsts
adc
dec
push
or
jp
or
int3
mov
inc
lret
push
std
xchg
push
filds
xchg
lea
dec
adc
pop
mov
mov
test
adc
aas
cmpsb
adc
and
push
std
mov
push
and
sub
xor
sbb
sub
mov
xchg
call
das
into
add
mov
mov
jb
mov
fstpt
movsb
outsl
mov
mulb
test
xor
mov
xrelease
lds
cmp
or
imull
rcrb
std
sbb
add
int
push
jle
jb
mov
xchg
push
cmp
mov
mov
mov
das
pop
jb
call
aam
adc
insb
pop
mov
lods
cs
sbb
dec
sbb
cmp
ss
jno
addl
lods
pop
and
sar
fstpt
cli
sbb
lods
pushf
jbe
cmp
cmp
dec
jne
out
sbb
xchg
pop
jns
mov
outsb
loop
inc
jb
enter
mov
pop
es
mov
pop
push
ja
test
add
mov
pop
inc
ficoml
cmp
mov
jl
pop
pop
mov
popa
sbb
ficoms
hlt
jns
imul
outsl
jle
outsb
pop
ret
out
clc
pop
test
inc
and
sbb
adc
jnp
sahf
pushf
jmp
sbb
and
add
mov
mov
sbb
fldenv
inc
popf
jecxz
cwtl
inc
mov
and
aam
xor
cld
movsb
mov
int3
pop
xchg
movb
das
adc
negl
mov
shlb
push
mov
fdivl
popa
repnz
pop
cmpsb
fcomip
jne
mov
cmpsb
adc
and
mov
in
int
sti
xchg
aas
jo
and
mov
repnz
loope
mov
pop
inc
push
push
jbe
into
jg
ss
sub
sub
xor
cmpsl
int
add
xor
lods
push
aad
jmp
dec
movsl
scas
xchg
roll
insb
adc
cmp
scas
inc
add
sbb
sti
and
sbb
std
out
mov
inc
jmp
les
add
hlt
je
mov
cmp
flds
add
jb
dec
mov
out
push
mov
push
testb
stos
test
shll
cmp
fucom
in
dec
inc
add
hlt
xchg
in
jnp
xchg
and
fcmove
adc
cmp
push
pop
hlt
inc
das
lret
push
jle
mov
push
pop
pop
inc
inc
in
inc
repnz
sub
sbb
rcl
cmpsb
icebp
mov
push
test
jge
xlat
inc
aaa
ret
mov
icebp
aam
sti
jne
ret
imul
jnp
mov
inc
dec
aad
push
pushw
dec
xchg
push
sbb
movsl
or
out
dec
in
add
xchg
testl
jl
cmp
add
dec
dec
loopne
push
mov
in
add
mull
in
outsb
cmpl
mov
adc
test
fimull
idivl
jb
shll
mov
int
mov
sub
push
lret
cmp
pop
jecxz
jecxz
arpl
pusha
jbe
daa
inc
loop
cmpl
add
lds
stos
mov
lods
mov
in
xor
pop
lret
cmc
add
mov
mov
cld
sahf
xchg
jne
and
popa
mov
gs
in
push
xor
mov
lds
fistps
iret
leave
sbb
lods
cmpsl
pusha
inc
leave
lock
in
jb
dec
jno
jo
std
loopne
cmp
mov
mov
decl
and
inc
add
stos
jmp
fs
ret
sub
inc
test
popf
push
mov
mov
int
movsb
cmp
shlb
mov
notrack
rcll
cmp
ret
mov
xor
cs
mov
xchg
fcmovnbe
dec
push
pop
cmc
mov
sbb
sub
sbb
dec
xchg
push
mov
cld
mov
mov
data16
or
test
xor
mov
inc
mov
cwtl
stc
xchg
fnstsw
or
xchg
dec
sub
test
lock
xchg
imul
pushf
cmp
cmp
into
cmp
ljmp
sbb
je
push
movsl
sahf
pop
add
sbbl
and
mov
or
imul
cmp
fwait
push
nop
adc
and
es
and
mov
in
mov
movsl
sarl
jb
pop
adc
fldt
jno
add
push
push
dec
fwait
jmp
push
or
in
push
in
cmc
dec
lods
aam
and
subb
xlat
cmc
sti
cmp
stos
pop
sahf
test
clc
cmp
xor
sub
fbld
xor
push
push
ret
cmp
lret
imul
mov
insb
das
pop
adcl
mov
xchg
xchg
daa
out
and
inc
popaw
imul
cwtl
add
cmp
mov
xchg
cmp
std
jno
pop
xacquire
jle
or
scas
sahf
out
inc
pusha
stc
push
jno
daa
mov
lods
shll
dec
in
push
mov
jb
mov
fcomps
hlt
mov
adc
mov
adc
ja
or
inc
ret
fimull
push
cmp
mov
sbb
mov
gs
ja
test
xchg
test
ja
push
sbb
mov
rorl
xchg
leave
jns
or
sarb
sbb
out
test
mov
fwait
and
mov
fimull
dec
or
add
xor
jp
cld
mov
or
jmp
mov
shll
mov
sub
jb
orl
or
or
mov
and
bound
out
xor
adc
popf
cmc
sbb
adc
jno
pop
in
outsb
rcl
test
fwait
mov
or
cmp
or
fucom
jg
inc
movsb
loopne
and
sti
push
mov
int
lahf
sbb
mov
pop
pop
xlat
test
or
xchg
pushf
jl
mov
pop
push
xchg
mov
iret
add
sub
aam
adc
cmp
scas
mov
inc
stos
aaa
sub
cmp
sbb
inc
hlt
icebp
dec
or
icebp
stos
mov
pop
jno
fsubl
lret
push
sub
jp
jle
roll
push
nop
adc
loope
repnz
dec
int3
gs
loopne
int3
popa
jp
jae
fstpl
inc
cmpsl
pop
pop
pop
rcll
push
xor
mov
jle
mov
xor
jb
lahf
push
pop
xor
test
jae
add
cmp
lods
push
jb
popa
mov
dec
shlb
ret
ffreep
dec
leave
adc
stc
cmpb
dec
iret
jmp
mov
lds
dec
repnz
xchg
ja
push
cmpsb
repnz
outsb
sub
sbb
jne
popa
pusha
cmp
hlt
sub
std
std
pop
insb
push
sbb
stc
push
test
shlb
cld
imul
es
adc
jge
sti
push
mov
shll
mov
hlt
sub
iret
xor
stos
cli
add
dec
daa
push
cmp
push
ljmp
mov
jb
and
cwtl
jp
or
mov
sub
ds
and
clc
xorl
imul
dec
xchg
leave
mov
push
adc
sbb
jae
out
xchg
push
mov
cwtl
insl
icebp
sub
addl
setnp
mov
and
stos
icebp
popa
pusha
cmc
mov
xchg
pop
mov
cli
sub
mov
lds
jne
sub
jge
outsl
orl
addr16
subb
popf
push
ror
xchg
dec
xor
pop
arpl
bound
shl
imul
xor
lret
jl
sub
push
add
inc
mov
sub
imul
lahf
insl
dec
cmpsl
sbb
xlat
sub
stos
sahf
jbe
insb
inc
pop
xchg
dec
dec
mov
je
lock
mov
in
and
aam
or
or
lock
cmpsb
aad
inc
add
mov
pushf
js
in
push
pop
sbb
sbb
out
das
inc
mov
out
stc
push
shll
inc
or
mov
xlat
pop
rcll
ljmp
add
sub
sbb
test
ds
push
or
leave
iret
mov
int3
and
negl
pop
and
js
mov
dec
test
cmc
shlb
inc
pop
adcb
add
out
cmp
dec
ret
outsb
imul
data16
push
cmp
lods
or
rorl
mov
xchg
imul
faddl
leave
popa
mov
sub
and
sub
repz
cwtl
pop
imul
sar
jge
xchg
cmove
cltd
rclb
jg
shll
sarl
imul
mov
out
sahf
push
aas
sarl
dec
adc
sbbl
sbb
adc
enter
fiadds
testl
dec
out
clc
int3
outsl
pushf
data16
frndint
ret
idivb
and
add
dec
dec
mov
xchg
pushf
icebp
sub
fdivs
jle
jl
xor
ljmp
push
loop
popa
adc
dec
loope
sub
in
in
mov
je
in
xchg
movsl
ror
mov
adc
push
sbb
pop
xor
xor
aad
add
mov
cmp
xchg
icebp
shlb
js
ficoml
cmp
sub
xor
js
xor
pusha
lds
mov
pop
sbb
jle
sub
nop
imul
xchg
call
sub
xor
ds
cli
mov
imul
cmpsb
dec
xchg
mov
jp
add
push
xor
mov
pop
sub
add
mov
out
jl
fwait
mov
dec
or
adc
sbb
sub
inc
sbb
dec
lea
xor
enter
out
pop
inc
lcallw
mov
pusha
and
xchg
nop
jno
aam
sbbb
inc
clc
sahf
sub
xor
sbb
sbb
push
cmp
mov
push
inc
inc
outsl
cli
and
sbb
xlat
sbb
xchg
faddl
inc
or
push
sbb
imul
mov
lret
xchg
shlb
loopne
cmp
mov
mov
icebp
adc
outsb
in
push
sbb
push
pop
out
das
xlat
mov
sahf
and
in
fsubl
pushf
icebp
adc
jo
outsb
mov
ljmp
cmp
push
sub
flds
inc
cld
xchg
push
lret
add
out
ret
out
cmp
mov
or
in
dec
mov
in
cmp
lods
inc
add
aaa
cs
test
push
cmpsb
pop
mov
stos
cmp
sbb
mov
fistps
inc
inc
aaa
test
lahf
mov
jl
xchg
pop
mov
fstpl
jle
jle
cmp
jl
push
add
pop
test
and
icebp
ret
sbb
xchg
aad
push
pop
es
xor
xor
push
jb
mov
movsb
hlt
call
adc
movsb
popa
mov
aam
and
mov
and
imul
xchg
mov
push
lret
mov
movsl
jmp
fwait
aam
dec
sbb
adc
cld
sbb
jge
mov
imul
and
fstpt
dec
inc
std
cmp
cmpsl
push
es
or
push
push
dec
gs
popf
adc
mov
nop
sti
mov
lock
sbb
fsts
dec
call
addb
cmc
add
popf
mov
lock
movsb
sbb
mov
xor
and
pop
ret
scas
mov
jnp
shrb
push
sarl
js
push
dec
pop
les
jecxz
daa
xlat
pop
jne
adc
cmp
in
es
and
cmpsb
ja
ret
cli
xorb
test
and
rcr
aaa
jle
mov
cmp
ljmp
gs
cmp
test
cmp
or
mov
xchg
pop
mov
push
sbb
sbb
cmp
daa
movsl
sbb
pop
jg
adc
push
sub
or
push
fs
pop
cmpsl
in
pop
jne
pop
dec
inc
test
std
outsl
cmp
stos
sbb
mov
jle
in
jge
sbb
hlt
popf
and
pop
mov
sub
cmp
push
fs
int
and
insb
aas
dec
ret
test
loope
int3
xlat
pop
and
leave
or
shll
inc
jbe
adc
stos
ja
lock
dec
or
mov
test
mov
int3
jge
jmp
jl
dec
mov
push
cltd
xchg
icebp
jne
jp
push
lea
ds
and
pop
adc
mov
inc
and
sbb
scas
add
pop
or
pusha
cld
xchg
ds
push
xchg
mov
pop
lret
movsb
aad
test
int
in
cs
pop
test
shrl
inc
fstpl
lods
adc
lahf
movsl
cmpsl
cli
jmp
out
adc
xchg
jo
mov
push
sar
push
movsb
and
pop
sbbb
pop
pushf
jp
or
add
or
pusha
jle
xchg
lret
dec
pushl
cmp
sub
inc
cmp
sub
in
inc
daa
push
fwait
pop
adc
je
or
mov
lcall
imul
and
adcb
mov
push
loop
add
pop
inc
test
inc
mov
out
mov
or
inc
mov
mov
rep
adc
sub
fcoml
dec
pop
sarl
xor
leave
inc
jb
add
test
mov
stos
mov
sbb
test
icebp
loope
sub
js
cwtl
daa
cwtl
aaa
inc
cmpb
mov
inc
add
lock
lock
mov
test
xchg
stc
xchg
xchg
stc
mov
ds
lret
dec
testb
jl
mov
push
cmp
loope
imul
jnp
or
movsl
xchg
stos
xchg
cli
fcompl
repz
add
dec
nop
sahf
inc
and
sub
test
push
sti
outsb
and
scas
js
aaa
pop
mov
out
sbb
repnz
imul
push
sub
rol
repz
outsb
push
icebp
dec
scas
out
aas
xor
push
sbb
sbbb
mov
mov
or
cmc
orl
cld
addr16
add
stos
inc
lret
cmp
xor
sub
enter
flds
scas
inc
gs
fwait
mov
sbb
insb
push
stc
cwtl
pop
pop
nop
inc
sub
shrl
sub
popa
jg
mov
or
ffree
jo
movsl
clc
scas
mov
sbb
add
or
dec
sbb
js
inc
xchg
inc
mov
dec
push
cmp
pop
fbstp
push
sbb
lock
test
jg
mov
pop
add
push
js
jle
dec
fs
stos
inc
xchg
adc
push
or
adc
jmp
xor
push
dec
add
stc
test
inc
mov
iret
or
lret
mov
mov
stos
dec
cli
movsl
loope
cmpsl
push
sbb
test
in
and
aas
ss
insb
stc
and
out
xor
xchg
mov
rcrb
push
and
or
roll
lret
pop
scas
arpl
pop
cs
or
mov
lret
or
arpl
dec
xchg
mov
cmpsl
loop
adc
insb
xchg
jg
in
adc
push
into
add
add
aad
dec
fsub
push
or
vpavgb
inc
and
dec
cmp
inc
leave
test
mov
pop
sbbl
insl
fs
jb
jbe
fcmovnb
in
sarl
jno
incb
or
shl
test
dec
sub
scas
mov
popa
fiaddl
dec
dec
inc
cmp
rorb
sub
leave
idivb
mov
sbb
mov
and
mov
add
test
fsubrl
cwtl
in
xlat
neg
adc
inc
call
cmp
mov
push
call
jne
movnti
ret
std
stos
mov
xchg
sbb
cmpsl
fldcw
cli
rol
mov
add
sub
push
int3
clc
sbb
jg
push
iret
inc
iret
pop
stc
enter
das
xchg
jp
aad
jne
pop
sbb
pop
adc
mov
insl
jo
iret
adc
cmp
pushf
add
ret
mov
xlat
push
push
inc
cmpsb
pop
or
fldl
xor
dec
movsl
xchg
fnstsw
dec
lret
iret
notl
orl
ret
iret
call
pusha
mov
call
pop
jmp
stos
and
lods
aad
bound
aaa
mov
jne
pop
stos
shrb
aaa
dec
or
inc
cld
xchg
punpckhwd
in
notl
push
pop
out
jb
sbb
inc
jl
add
stos
mov
xor
or
pop
leave
mov
pop
mov
dec
dec
add
pop
adc
sbb
inc
and
movb
ds
xor
movsl
jno
mov
add
adc
mov
or
xor
cmp
xor
fdivrl
xor
out
jns
inc
andl
clc
push
inc
pop
out
movsb
test
sub
jb
ret
call
fistpll
stos
push
xor
pop
mov
cmp
xchg
repnz
jmp
xor
negb
sub
sbb
pop
xor
hlt
pop
xchg
adc
ret
popf
mov
dec
inc
xchg
sub
lods
aam
sub
jae
inc
dec
jae
sbb
jo
jp
push
mov
xchg
mov
mov
movsl
mov
dec
jae
add
cmp
jns
dec
lods
pop
xchg
cld
adc
push
cmp
call
add
xchg
inc
sub
xor
ret
aas
aas
mov
adc
and
xchg
mov
jle
add
push
aaa
lock
mov
cmp
pop
pop
mov
jecxz
imulb
fbld
test
in
lds
in
and
out
testl
mov
cltd
repz
mov
std
or
mov
jmp
movsb
movsb
movsb
ja
xor
jb
fiadds
mov
cmp
or
out
dec
das
loopne
fs
or
fistps
movsb
pop
pop
daa
sub
nop
push
xchg
mov
jno
sub
in
pop
push
or
imul
andb
jnp
xchg
mov
insl
cltd
adcl
sub
arpl
cli
popa
mov
dec
cmp
jl
push
jns
mov
xor
scas
sti
adc
pusha
jne
fnstcw
sub
inc
icebp
pop
xchg
fbld
sub
pop
jmp
cmp
dec
add
xor
out
push
inc
xor
push
insl
int3
sbb
push
negb
addr16
sub
nop
cmp
pop
std
iret
mov
ja
dec
sub
and
xchg
lea
sti
bound
sub
ja
or
mov
ja
in
sbb
dec
mov
stos
cmpb
fsubl
bound
arpl
pop
andl
fdivrs
nop
icebp
lea
xlat
pcmpgtd
xor
and
or
arpl
push
pop
sub
cwtl
fcmovnb
mov
cld
sbb
cmp
test
xor
xchg
xchg
jp
cwtl
inc
stos
cmc
mov
mov
in
loope
cmpsb
push
xlat
int
cmp
and
jo
test
cmp
push
cmp
cwtl
lret
scas
inc
repz
fmul
pop
mov
pushf
jne
xor
dec
sti
fsts
arpl
arpl
dec
lods
outsb
mov
sub
adc
je
inc
in
clc
inc
mov
mov
inc
xchg
push
ret
and
jns
or
call
mov
mov
sbb
mov
in
sahf
int
arpl
scas
inc
jecxz
cmc
sbb
imul
inc
dec
insb
sub
cwtl
ficompl
cmp
sub
mov
inc
push
cmp
stc
mov
mov
popa
add
add
ss
xchg
mov
adc
loope
jge
lea
add
xchg
sbb
scas
pop
fwait
jae
das
repnz
xor
dec
and
mov
pop
and
cmp
add
out
jne
mov
loopne
or
js
cmpsl
fsubrl
out
push
adc
or
arpl
xlat
addl
or
repz
ret
clc
fsubrs
int3
nop
fimuls
dec
fimuls
sub
mov
scas
inc
inc
fidivrl
add
fcomps
lret
inc
jbe
cmc
mov
jno
cmp
and
outsb
gs
pop
or
incl
jne
or
rcll
aaa
ds
sbb
aas
dec
out
arpl
and
jle
sbb
int3
aas
or
data16
jge
call
addb
rcrb
nopl
mov
push
mov
sub
shrb
xchg
cmpl
pop
repnz
int
jae
adcb
fisubrl
mov
adc
leave
inc
add
pop
js
pop
subl
inc
xchg
cs
addr16
mull
cmp
fdivs
dec
pop
ret
gs
and
jl
loop
int
inc
jbe
push
fcoms
ret
xor
push
adc
mov
int
daa
mov
je
or
mov
mov
daa
inc
and
jo
xor
mov
sahf
pop
xchg
pop
mov
sbb
sbb
mov
push
push
jle
stc
lret
aaa
test
jmp
pop
repnz
dec
lret
mov
and
aas
jne
push
sarl
dec
inc
push
cmpsl
inc
xchg
out
jb
mov
test
mov
daa
push
leave
loopne
daa
cmpsb
sahf
sub
or
cmp
pop
push
pop
xor
roll
popf
sbb
ja
imulb
dec
gs
rcr
fwait
xor
cmc
mov
adc
out
add
ljmp
fbstp
xor
in
jnp
push
sub
gs
dec
push
mov
leave
fldenv
adc
inc
fisubrs
xorl
inc
push
or
ret
add
out
movsl
push
xchg
xchg
xchg
cmpsb
scas
imul
and
lods
mov
pcmpgtb
lret
aam
mov
lea
sbb
loopne
or
or
pop
adc
mov
and
cmpsb
cli
cmp
fs
outsl
scas
imul
push
xchg
enter
in
pop
jp
stos
out
ss
pushl
in
int
sbb
fcomps
sbb
inc
out
mul
or
adc
mov
mov
push
cld
cwtl
nop
xchg
orb
push
jae
leave
pop
mov
imul
aam
cmpsl
jae
sar
jg
dec
idiv
insb
roll
sbb
int
fisubs
out
out
mov
and
sub
int
ret
dec
mov
jl
push
mov
push
nop
shlb
rcrl
popf
mov
mov
sub
js
mov
fcom
push
mov
and
std
out
test
push
add
jge
repz
or
test
iret
out
dec
lea
rclb
pop
sahf
sbb
int
shll
xor
leave
push
or
pop
or
pop
cwtl
sbb
dec
scas
icebp
pop
pop
pop
cmp
popf
xor
test
cmpsl
sub
mov
mov
sub
sbb
enter
dec
fmull
pop
sbb
and
and
lock
pop
sahf
dec
pushf
ficoms
fcmovbe
dec
movsb
mov
xchg
fdivrl
adc
cmp
sub
es
pushf
jl
pusha
cmpsb
add
icebp
jnp
xchg
arpl
push
and
ret
pop
stc
sub
add
inc
pop
je
push
data16
sub
outsb
pop
mov
lret
shlb
out
adc
cld
cltd
jno
je
loopne
add
inc
nop
cltd
jle
jmp
jge
push
daa
push
and
sar
mov
cmpb
mov
inc
pop
jns
or
push
add
jge
pop
aas
cmp
lds
mov
gs
aam
pop
jne
mov
pop
test
push
cmp
jo
xor
and
jg
pushf
jnp
jo
adc
pop
jl
mov
in
scas
sbb
pop
mov
sub
out
lock
cmpsl
dec
mov
in
cmp
mov
pushf
mov
ss
xchg
push
and
inc
int3
cmp
repz
fidivl
ret
mov
push
sahf
test
jnp
inc
cli
inc
popa
divl
outsb
mov
add
filds
insb
or
test
mov
cwtl
ret
lods
enter
jg
test
mov
in
nop
aad
inc
jp
push
mov
push
and
leave
xlat
jbe
adc
lds
int
jle
xor
cli
ss
dec
xor
in
or
shr
subb
mov
cmp
out
jle
imul
pop
cs
jb
sbb
dec
test
jle,pn
popa
repz
and
and
push
push
sub
mov
cmp
fstl
inc
xchg
out
pop
xor
mov
adc
xor
cltd
int
adcl
pop
xchg
leave
in
test
push
jb
jbe
add
sbb
fwait
insb
sbb
loop
pusha
xchg
and
out
loop
flds
jmp
clc
gs
mov
jmp
ljmp
xchg
sbb
das
shlb
mov
mov
cwtl
fcoms
fildll
adc
cmp
xchg
fsubrp
pop
clc
mov
aas
adc
rolb
lahf
in
mov
or
mov
sub
dec
outsb
and
inc
push
test
enter
sbb
loopne
shrb
sbb
int3
dec
jb
mov
push
cmp
movsb
pop
clc
jp
dec
and
mov
dec
pop
jo
xor
in
aas
icebp
xchg
cli
pop
rolb
enter
pop
jle
pop
sbb
push
and
into
xchg
insl
inc
push
dec
jne
sti
push
pushf
xchg
xor
mov
dec
adc
js
lcall
fsubrs
mov
cmp
inc
add
pop
cmp
mov
sbb
sub
test
pop
xchg
popf
mov
sub
xor
das
mov
inc
push
cmp
dec
lcall
inc
mov
xchg
sub
das
ret
sbb
adc
xor
jge
and
in
pop
jg
add
fcompp
cmp
pop
lahf
sub
mov
push
popa
lahf
mov
jmp
mov
pushf
inc
je
stc
sbb
mov
les
dec
cld
mov
int3
std
and
aad
xor
mov
push
ret
adc
sbb
adc
xchg
data16
insb
mov
add
scas
sbb
adc
pop
or
jmp
ss
push
stc
nop
ljmp
nop
leave
xor
in
sub
cmpsl
cli
jmp
in
dec
ds
jmp
es
and
add
out
push
inc
dec
popa
mov
rcrb
push
mov
sbb
out
scas
xor
cld
ds
push
and
test
loop
loope
aam
adc
movsb
add
sarl
popa
sub
mov
fldt
pushf
jne
lock
cmpsb
gs
je
push
xchg
pushf
int3
adc
aad
jecxz
mov
fs
mov
loop,pn
fidivs
ja
push
inc
les
out
jne
or
xlat
lock
jecxz
mov
sbb
leave
ss
mov
cmp
sub
mov
jle
mov
sbb
push
mov
fs
xlat
push
jg
lret
push
in
ljmp
aad
and
jg
sub
jmp
mov
in
cld
inc
pop
test
repz
insl
pop
add
sarl
jae
adc
lock
andl
or
inc
testb
mov
test
mov
sub
jg
mov
int
insb
lret
push
out
xchg
xchg
or
dec
jno
sbb
popf
sarl
pop
js
push
and
clc
repz
push
data16
sub
xor
es
mov
add
xlat
in
dec
rorl
jl
test
cs
or
xor
push
aam
mov
das
xchg
cmpl
enter
inc
dec
out
lods
add
sbb
pushw
arpl
pop
dec
push
push
mov
enter
jnp
nop
mov
mov
mov
ficompl
test
repz
mov
aad
jle
mov
std
cli
aad
pop
bound
inc
sub
mov
cmp
lret
sub
push
and
xor
dec
push
stc
out
lcall
daa
sbb
sbb
add
aam
push
sub
cmp
cli
lods
outsl
stos
fdiv
cmp
lahf
cmp
les
cmp
jnp
dec
inc
push
pop
and
ficomps
nop
aas
mov
popa
das
loop
ja
out
mov
cld
in
addr16
ss
leave
sub
in
stc
clc
mov
test
mov
xchg
aaa
in
push
adc
fs
hlt
in
dec
cmp
cmp
mov
and
sub
fidivl
enter
clc
pop
imul
mov
out
pop
je
test
jle
popl
ds
into
imul
sbb
aaa
je,pn
mov
sub
sbb
mov
jbe
xchg
sbb
jp
nop
xor
int
je
sbb
ds
inc
fldl
das
sub
pop
jno
lods
stos
inc
adc
adc
push
mov
jno
pop
cmc
scas
jb
mov
js
mov
inc
add
pop
pop
addr16
xor
mov
scas
adc
daa
push
and
push
sub
dec
addr16
jb
rorb
shlb
popf
mov
adc
out
popf
js
addr16
iret
mov
adc
das
or
xor
sub
sub
jle
dec
enter
adc
xchg
mov
int
in
cs
aas
inc
xor
jnp
cmp
add
in
or
daa
insl
pop
lods
mov
in
pop
push
jno
or
arpl
cmp
gs
mov
mov
push
xor
mov
cltd
int
jno
je
jns
fucomi
jmp
cltd
mov
inc
aas
dec
xchg
xor
jle
add
jo
dec
dec
mov
sbb
cltd
outsl
inc
add
pushf
mov
ss
jne
ljmp
loope
fstl
sar
outsl
addb
add
dec
pop
lret
mov
in
push
add
fs
inc
pop
test
push
cld
repnz
adc
lcall
add
jg
in
push
notb
sarb
mov
add
dec
pop
mov
in
movsl
stos
out
das
das
adc
ret
es
lods
daa
and
repz
mov
push
pusha
inc
mov
cmp
xor
xchg
sub
mov
xchg
inc
jg
push
or
out
mov
cmpsb
test
push
mov
rcr
js
cltd
mov
jp
add
lds
repnz
mov
sbb
or
add
jno
push
mov
in
xor
xchg
dec
xchg
xchg
mov
aaa
aad
in
popa
pop
addr16
insb
xchg
gs
xchg
shlb
cmp
je
mov
mov
pop
les
dec
cmpsb
es
call
out
test
add
jp
stc
int3
add
lods
and
adc
push
push
lret
hlt
sbb
pop
jecxz
mov
inc
loope
mov
xor
push
cmc
cwtl
push
push
data16
bnd
mov
adc
and
add
inc
hlt
shr
mov
pop
jb
add
push
mov
pop
ficoml
cltd
inc
jns
mov
std
adc
mov
dec
xchg
cwtl
in
add
xor
cvtps2pi
mov
ja
je
shll
insb
dec
imul
test
mov
js
mov
subb
push
push
push
cmpsl
inc
xchg
pop
and
mov
xchg
mov
lods
mov
mov
add
faddp
or
or
fs
fidivs
or
mov
pop
mov
jns
sbb
xlat
jecxz
add
jmp
fldcw
pushl
ja
call
cwtl
test
cltd
les
and
lods
comiss
mov
cld
mov
sub
in
movsl
mov
fsubrs
mov
sub
sahf
dec
mov
cmp
pop
mov
shr
jge
outsb
lods
icebp
bound
popf
mov
xchg
repz
cwtl
mov
push
sub
cmp
xor
sub
or
add
out
mov
fdivrl
ficomps
inc
dec
mov
push
xchg
addr16
xchg
movsl
mov
arpl
lods
jle
lahf
xchg
mov
inc
sub
stos
cld
push
test
loopne,pt
mov
aas
sbb
jne
jmp
mov
pop
lods
scas
sbb
sahf
mov
adc
mov
jb
inc
jle
lods
test
rolb
call
push
test
sbb
jle
add
mov
cmp
int3
add
cmc
push
inc
roll
xchg
fsubrs
mov
clc
pop
in
jnp
lods
and
call
push
adc
lods
push
push
scas
pop
jns
push
xchg
scas
movsb
dec
sub
push
add
add
jne
in
mov
xor
mov
or
add
in
dec
pop
mov
xchg
jp
xchg
mov
fmuls
inc
sbb
xchg
adc
test
in
xchg
jae
test
pop
iret
and
jae
int3
mov
out
push
out
aaa
rcll
xchg
sbb
fnstenv
mov
insl
icebp
jmp
stc
jb
and
mov
or
sahf
mov
lret
jg
hlt
and
jmp
vshufps
js
cmc
cmp
out
push
jl
fstpt
and
inc
ret
sti
mov
jbe
or
push
add
je
mov
push
dec
pusha
fistpl
movsl
pcmpgtb
xchg
jo
fwait
lock
lea
xchg
sub
lock
dec
je
sbbl
mov
imul
mov
outsb
adc
dec
or
test
mov
push
mov
test
out
bound
mov
mov
jnp
push
sysexit
lret
or
pop
sahf
movb
rol
mov
or
lcall
fisubrs
clc
ficomps
mov
dec
cmp
insb
flds
aad
outsl
mov
es
mov
pop
jnp
inc
test
nop
xor
fmul
pop
inc
rolb
push
mov
rcrb
jbe
imul
sub
or
mov
jecxz
mov
mov
sbbb
jmp
scas
pusha
push
inc
push
pop
cmpsl
adc
push
jo
adc
inc
aad
insb
orl
mov
or
fidivl
test
pop
add
cmp
ss
dec
ret
hlt
or
add
repz
js
loop
xchg
stos
cmp
xor
scas
or
cmpb
fisttps
scas
fdivl
shl
inc
push
jnp
mov
cmc
jb
pop
arpl
pop
push
xchg
jecxz
test
xor
dec
mov
addr16
sti
dec
add
test
addr16
out
lcall
cli
data16
and
dec
xchg
insl
cmp
mov
test
xchg
or
push
lret
push
and
cmp
push
jae
xor
sub
fcmovu
in
or
ret
repz
pop
mov
pop
push
push
push
je
mov
xorb
setno
sti
inc
and
into
adc
or
dec
cmp
mov
fmull
xchg
inc
lret
imul
sahf
sar
pop
jle
and
jecxz
in
or
and
aam
ret
sbb
arpl
xchg
mov
push
sti
adc
push
in
int
das
cmp
pop
fnstcw
outsl
jb
lcall
adc
push
gs
sub
out
out
lcall
mov
cmc
lock
sub
push
pop
mov
cs
mull
stos
ds
cmp
xchg
rol
pop
lahf
addr16
outsb
sbb
hlt
mov
out
adc
xchg
rcl
subb
pop
and
icebp
aaa
lret
pandn
dec
lea
xor
push
les
pop
cmp
xlat
push
cmp
notb
mov
mov
and
cltd
inc
sbb
sbb
ljmp
clc
sbb
push
cmp
mov
in
cmp
clc
test
aad
cmpsl
push
sbb
jbe
pop
clc
cmp
push
ja
dec
xchg
pop
and
call
fcomps
cmp
outsl
push
stc
xchg
and
jns
mov
dec
jo
jg
pop
aas
loope
jl
js
or
in
inc
sahf
negl
imul
test
sub
addl
gs
push
ret
or
ljmp
cmpsb
jo
push
test
popa
negl
jbe
inc
fcmovnu
iret
inc
lret
cmpsb
shrl
pop
dec
daa
filds
outsl
xchg
inc
fstpt
mov
lods
add
addb
lret
repz
ja
cli
push
and
cld
pop
and
lret
sub
sub
lahf
dec
aad
shrb
leave
push
stc
pushf
insl
sahf
push
inc
cmp
shlb
divb
enter
jecxz
push
push
or
mov
je
sub
jmp
sub
or
out
adc
js
test
out
fiadds
lods
inc
arpl
mov
addr16
shl
pop
pop
test
push
in
imul
mov
push
aad
inc
cld
xchg
sub
xchg
mov
mov
mov
ret
xlat
sub
stos
cld
push
iret
shll
mov
or
test
lret
inc
mov
clc
sbb
cmpsb
out
ss
sub
hlt
pop
stos
pop
fwait
pop
es
loop
dec
pushf
cltd
fildll
cltd
bnd
lods
jae
sbb
add
imul
jecxz
inc
outsb
stos
out
loop
pop
mov
dec
mov
pop
icebp
push
adc
and
sti
iret
popa
cwtl
jno
cltd
shlb
dec
jmp
or
rcr
pop
xchg
shrl
imul
xor
nop
jae
mov
cmp
jbe
mov
iret
scas
jg
lods
ljmp
mov
outsl
mov
and
mov
pushf
mov
pop
xor
pushf
test
pop
pushf
push
jg
dec
xchg
daa
nop
arpl
xor
cmpsl
loop
add
sub
inc
jmp
adc
ficomps
mov
cmp
mov
mov
ficoml
test
cmpsl
fwait
push
dec
sub
cs
jp
into
divb
insl
xor
or
jns
jle
lret
gs
or
cwtl
repnz
mov
std
sbb
pusha
pop
es
xor
add
pop
in
ss
mov
jg
mov
ret
jp
negb
sub
push
sub
mov
mov
and
jne
aaa
push
insl
or
sub
xor
adc
cmpsb
dec
push
jge
pusha
sbb
popf
sub
and
jae
daa
fucom
and
or
repnz
xor
mov
xor
imul
jl
wrmsr
fucomp
or
jge
sub
fs
inc
shrl
imul
repnz
pop
inc
mov
jno
xchg
jae
dec
je
addl
mov
fwait
dec
and
insl
mov
pop
and
popf
inc
add
push
out
dec
stc
mov
and
cs
pop
hlt
mov
ja
cmpl
sbbl
dec
add
out
adc
ucomiss
push
pop
mov
mov
std
dec
bound
jae
daa
or
fwait
mov
add
shll
notb
mov
mov
call
dec
jbe
inc
xchg
inc
loope
pusha
in
gs
fdecstp
loop
mov
cltd
cmp
test
adc
movsl
jae
mov
jmp
cmp
push
sbb
inc
and
xlat
je
pushf
out
mov
in
xchg
pop
inc
roll
jg
xchg
cmp
inc
mov
scas
scas
inc
adc
push
ss
mov
pop
imul
add
adc
xchg
pop
imul
push
adc
filds
mov
sti
jp
cmpsl
and
mov
pop
xor
clc
in
cmp
in
inc
xor
bound
ret
and
dec
inc
sub
push
jp
or
lea
xor
fiaddl
sbb
sbb
out
aam
cs
call
or
cltd
pop
leave
imul
dec
xchg
mov
rolb
aad
cmpb
push
jne
add
daa
into
cmp
sbbl
inc
addl
cmp
sub
add
int3
in
repnz
mov
out
cli
jb
in
aam
dec
into
xor
jns
shll
mov
mov
testl
xor
clc
cmpsl
popf
in
push
hlt
psubusb
inc
out
ret
popf
sub
loope
jle
pop
test
sub
cli
push
stc
jp
ja
dec
lcall
loop
scas
lods
movsl
ret
lcall
adc
pop
stc
push
mov
mov
mov
in
adcl
aad
mov
pop
sbb
push
lea
mov
shll
inc
into
in
daa
fstl
sti
dec
hlt
ljmp
dec
xchg
push
fidivrl
cmp
inc
clc
fdiv
mov
loop
lret
incl
or
add
in
aad
pop
ljmp
add
insl
or
jle
push
sub
mov
stos
scas
bound
ficomps
inc
pop
aaa
xor
mov
xor
pop
loop
lods
xlat
pushf
cld
add
cmp
lahf
mov
int3
adc
gs
jmp
rcl
jae
fisttpl
and
and
adc
lds
insl
inc
dec
xor
in
xchg
add
fiadds
jl
ja
popl
mov
jbe
ja
mov
icebp
push
pop
out
or
out
mov
inc
ret
and
cmpsl
add
sbb
pop
popf
pop
mov
or
or
lret
xchg
shrl
add
sbb
sub
mov
inc
sbb
call
pop
adc
adcl
jb
jp
repnz
stc
inc
hlt
punpckhbw
and
mov
outsb
js
cmc
add
lock
stc
and
fisttps
in
mov
leave
pop
movups
test
ret
mov
cmp
ss
sti
int3
mov
lcall
mov
pushf
loopne
ja
inc
and
inc
repnz
push
xchg
popf
mov
pop
les
mov
mov
sbb
ja
dec
lods
lods
repnz
push
mov
add
rorl
out
shll
xor
jo
push
mov
push
icebp
lods
jmp
call
aam
or
mov
jns
pop
scas
or
add
outsl
mov
jne
cmp
aas
icebp
jl
pop
cld
popa
ja
loopne
xor
testl
mov
lret
dec
adc
movsl
push
stos
fisubrl
test
roll
repnz
mov
and
jbe
fidivl
push
fs
insl
cmp
sub
mov
xchg
dec
cld
mov
into
mov
rolb
cld
mov
or
into
mov
clc
aaa
movsl
or
clc
mov
fbstp
push
and
sarb
xor
pop
insb
std
je
push
mov
xchg
push
pop
mov
into
mov
mov
xchg
mov
dec
add
sub
fstpt
js
fistpl
aas
out
xor
jge
mov
cmpsl
fsubrl
mov
mov
dec
inc
sti
movd
cmpsb
pop
add
xchg
cld
je
pop
aad
ficoml
mov
mov
pop
and
aam
scas
cwtl
sarl
add
pop
cmpsb
mov
sbb
cmp
test
mov
pop
sbb
mov
into
bound
test
repz
cmp
addr16
jo
xor
push
dec
ret
test
rcrl
jo
sahf
cmp
lods
and
icebp
jo
addl
cmp
out
mov
jb
or
mov
inc
imul
pop
push
cmp
insb
sub
lea
add
lcall
inc
les
in
mov
loop
ret
xchg
mov
js
mov
dec
repnz
pop
rcl
cmp
sbb
fcoml
cmpsl
call
xchg
push
aaa
dec
mov
mov
pop
popf
and
pop
pusha
mov
mov
xchg
out
sbb
loope
icebp
push
or
or
add
out
iret
movb
daa
add
in
ljmp
push
push
mov
push
cltd
fsubrs
in
loop
jns
cmp
add
mov
or
add
push
arpl
sub
iret
pop
xor
and
int
xchg
fwait
sbb
out
xor
cmpsl
mov
and
idivb
mov
test
iret
and
dec
sub
ss
push
dec
or
popa
popf
mov
xchg
lods
and
jg
mov
dec
push
mov
add
or
or
hlt
xor
mov
ds
jb
inc
lds
adc
push
outsl
in
aas
out
fstpt
mov
mov
js
jp
aad
dec
ljmp
test
lret
jo
or
clc
add
inc
out
lahf
jne
divl
lret
sub
stos
imul
cld
dec
lea
sub
xchg
nop
adc
loopne
and
imul
mov
mov
pop
add
xchg
push
mov
test
push
xor
push
insl
mov
paddq
cmp
mov
cli
push
aaa
sbb
pop
add
outsb
xchg
dec
ret
stos
xchg
out
jns
jae
mov
ds
imul
lret
or
pop
inc
int3
add
cltd
and
pop
jmp
inc
fsubrs
cltd
aam
ds
xchg
push
cmp
aam
inc
cwtl
shl
fsubrs
cmpsl
iret
fcmovbe
aad
or
rep
pop
jo
mov
jp
add
aas
and
add
or
pop
stc
imul
in
or
popf
ss
add
hlt
jl
test
xchg
push
mov
js
pop
pop
das
mov
ljmp
sub
inc
aas
pop
nop
lahf
arpl
sahf
jo
pop
pop
in
cmp
cli
mov
jl
or
aas
xor
insb
jae
outsb
cmp
outsb
lods
sbb
popf
out
pop
sub
je
cltd
mov
jo
dec
sub
rcl
dec
mov
ja
mov
inc
orl
pop
fs
fcomps
sub
fstpt
sbb
movsl
cmpsl
aam
push
mov
daa
sahf
push
dec
push
jmp
xor
scas
fstpt
add
sbb
fstpl
lret
cmc
jno
loop
pop
js
dec
fadds
fiaddl
inc
push
lahf
xor
xchg
in
repz
testl
leave
lea
insb
mov
and
mov
adc
fists
mov
add
push
sub
call
dec
jmp
sbb
xlat
xlat
mov
imull
hlt
rcrl
sub
popa
lds
fldt
dec
test
ljmp
lds
add
lock
test
mov
pushf
dec
ds
jae
add
les
hlt
stc
mov
je
jne
cmp
mov
cmp
mov
xor
or
xchg
or
fld
inc
jecxz
cmp
lods
in
aam
jns
jb
jns
sbb
movl
xchg
ret
insb
in
call
mov
jnp
aas
fwait
dec
push
adc
mov
pop
cmp
and
sti
push
pop
test
pop
add
bound
jge,pn
into
add
adc
dec
sbb
enter
lret
dec
hlt
and
arpl
iret
rcrl
inc
insl
pop
pop
xchg
sbb
stos
adc
int
jno
inc
push
mov
sub
xor
jp
leave
push
aas
dec
or
sbb
mov
xor
pop
cltd
mov
and
sti
neg
jno
push
iret
stos
or
sbb
mov
mov
xchg
ror
mov
in
loopne
push
arpl
and
xchg
repnz
fisttps
xor
mov
sbb
inc
add
add
test
icebp
pop
jle
cmp
add
fldcw
out
lea
sub
and
loop
inc
sahf
scas
sbb
mov
lcall
jp
push
stos
scas
add
mov
imul
call
enter
jl
dec
xchg
pop
sarl
or
div
cltd
mov
data16
cltd
cltd
dec
sub
imul
add
incl
ja
jb
adc
jae
inc
push
jecxz
ljmp
jle
mov
pop
mov
xchg
jmp
and
pop
add
lock
cld
push
pop
sub
cltd
hlt
cmpsb
lahf
mov
sbb
sub
subb
pusha
xchg
cmp
rcrl
cmp
pop
sub
insl
push
adc
cmp
mov
and
mov
repnz
dec
std
and
arpl
pop
sbb
enter
cmpsb
lds
mov
sbb
lahf
push
mov
insl
mov
pop
xchg
cli
jb
adc
pop
sbb
xchg
arpl
lret
mov
jae
dec
pop
lods
add
mov
push
cld
and
dec
outsl
cmc
cmpb
and
sbb
or
loope
mov
sbb
or
cmp
mov
stos
cmp
int
scas
add
jbe
fidivs
jnp
mov
scas
pop
inc
out
adc
fisttpl
mov
adc
ret
mov
sti
int3
or
insb
mov
pop
test
jae
pushf
inc
adc
or
jecxz
adc
shlb
inc
push
in
inc
das
adc
inc
fldt
jno
cli
test
push
add
cs
push
sub
divb
and
adc
shrl
add
pop
xor
dec
lahf
mov
orb
imul
call
idivb
xor
out
and
jmp
cmpsb
add
or
cmp
dec
sub
adc
ss
popa
test
das
arpl
adc
adc
mov
in
aad
mov
push
cmp
add
das
ljmp
xchg
mov
add
nop
xor
mov
push
dec
push
scas
push
lods
dec
mov
out
sarb
call
ret
pop
push
dec
out
insb
test
lds
adc
push
push
xor
and
leave
push
inc
outsb
push
daa
mulb
mov
ret
fwait
insb
pop
lahf
mov
ljmp
cmp
lcall
adc
adc
aad
add
test
sbb
lahf
rclb
add
inc
dec
call
mov
xor
xchg
loope
aad
sub
or
xchg
mov
sbb
adc
out
test
cmp
dec
popf
pop
mov
add
mov
lds
adc
fwait
test
lds
sahf
lahf
mov
ss
xchg
cli
xor
pushf
and
jns
loop
rcll
xor
cld
loopne
pushl
mov
lret
aas
shrb
mov
clc
movsb
adc
into
clc
jge
mov
arpl
bound
fimull
nop
in
add
dec
inc
gs
pop
sbb
or
and
das
inc
add
jne
xchg
mov
dec
xchg
xchg
sub
rolb
mov
dec
push
cmp
dec
xor
add
incb
mov
add
fstps
shll
jl
out
xor
dec
xorb
push
sub
cmp
mov
xlat
mov
jbe
push
or
xchg
xchg
sbb
sbb
in
gs
aaa
imul
xchg
pop
lds
out
xchg
lea
lahf
xchg
sbb
js
gs
movsl
mov
int3
sbb
addr16
push
outsb
aad
inc
jb
pusha
std
push
in
sbb
cmp
loope
and
push
push
jo
mov
xlat
pusha
arpl
lsl
xor
in
fcomps
dec
push
lea
xchg
lea
popf
jno
sub
dec
mov
xchg
loopne
inc
lds
pop
add
hlt
mov
jle
xor
dec
mov
jb
xchg
mov
cld
jno
lahf
pop
in
dec
scas
ljmp
js
push
hlt
add
mov
lods
mov
shrb
mov
popa
add
or
insb
adc
sbb
fidivs
xor
and
test
lds
pop
lret
out
fdivr
mov
mov
lret
xchg
aas
ss
dec
flds
je
inc
mov
stos
push
ret
push
add
push
sahf
imul
adc
push
test
dec
shrb
bound
fwait
int3
inc
pop
test
je
notb
mov
pop
jno
cmpsl
dec
xchg
lahf
sub
push
jae
fidivl
repz
pop
add
sub
in
sysenter
sahf
cmp
xor
jecxz
lcall
std
mov
mov
cli
roll
jb
inc
cs
outsb
sti
mov
into
pop
mov
repnz
in
scas
int3
and
mov
test
mov
or
mov
stc
pop
or
push
add
xor
stos
pop
jb
pop
fstp
icebp
fldenv
mov
aad
sub
jno
mov
int
jp
stos
jbe
dec
push
aas
das
or
xchg
add
fistl
out
and
cmp
sub
sahf
ljmp
or
mov
insb
icebp
mov
mov
in
cmp
mov
in
mov
lods
sbb
sub
lret
jbe
test
imul
scas
sub
dec
insb
inc
add
aas
cmp
mov
xchg
or
int3
aad
inc
mov
push
mov
je
mov
fidivl
mov
outsb
icebp
mov
push
or
mov
pop
pop
and
hlt
ret
insb
xlat
inc
nop
sbb
sub
inc
arpl
sahf
mov
or
enter
aad
sub
xchg
ss
sub
or
mov
and
push
xor
iret
xchg
push
pop
cmp
inc
ret
int3
mov
mov
sbb
jg
add
and
push
pushf
mov
mov
xlat
adc
adc
sbb
jb
or
loop
loope
sub
add
mov
icebp
xlat
adc
push
pop
out
test
lods
unpckhps
or
repz
jbe
lds
cli
fcmovb
xlat
and
xchg
into
add
jne
cld
add
inc
add
sbb
icebp
pop
jmp
xor
jmp
push
add
into
push
push
push
or
insb
sahf
push
mov
popf
lods
in
test
cmp
fstps
xchg
and
in
mov
ds
in
or
sub
addr16
clc
mov
es
jl
push
pop
stos
adc
jne
xor
adc
std
outsl
sub
in
fiaddl
and
ds
adc
dec
mov
out
mov
inc
mov
mov
dec
lret
cli
fmuls
in
push
fucomi
lret
dec
shrl
lock
in
aaa
push
jbe
mov
js
mov
int3
fimull
sub
int
jb
push
lods
addr16
nop
in
lret
pop
sbb
rorl
call
push
or
int3
ret
cmp
in
push
jb
ret
sub
pop
and
push
adc
pop
cltd
mov
mov
test
push
xchg
sub
in
pop
mov
cmpsl
out
out
ja
in
into
pop
sbb
and
mov
aaa
adc
add
leave
ljmp
add
pop
inc
pop
outsb
lret
fcompl
lahf
repnz
hlt
push
pop
mov
pop
jge
fwait
xor
pop
mov
mov
adc
insb
outsb
mov
neg
insl
mov
jle
or
jo
cwtl
shlb
out
ljmp
and
jnp
pop
and
sub
lahf
sub
inc
fdivs
cmp
inc
or
push
push
repz
pop
sar
jne
xor
add
sarb
adc
mov
shrl
adc
icebp
xchg
xchg
in
mov
addr16
and
mov
shr
mov
lret
sbb
ljmp
jecxz
out
inc
mov
pop
mov
pop
cmp
jbe
dec
jge
mov
dec
lea
push
fsts
pop
inc
jp
push
sbb
inc
jns
push
push
out
mov
fwait
mov
lahf
or
nop
mov
add
std
mov
movsb
cmpsb
or
xlat
cld
std
cmpsl
cltd
and
or
sub
adc
rolb
ds
fwait
push
xchg
into
push
mov
inc
cli
cld
movsb
mov
jmp
adc
fwait
adc
push
sub
test
repz
push
dec
pop
jg
adc
and
xor
xor
scas
xor
mov
test
xor
ja
push
cmp
cmp
jle
lds
mov
mov
sub
pop
es
xchg
push
pop
ss
mov
imulb
cmc
fcmovne
fstpt
xor
add
jge
mov
cmp
cs
leave
loope
fwait
gs
ds
stos
mov
mov
imul
add
fldenv
pusha
ret
xor
hlt
adc
jge
xor
sub
push
int3
inc
adcl
cmp
mov
xor
lock
adc
add
cmp
xchg
ret
ret
hlt
ret
lret
lock
in
sbb
fwait
jle
cmp
push
and
cmp
out
push
mov
mov
test
xor
cltd
fildl
ret
aaa
cmc
pop
sub
test
mov
imul
mov
mov
out
sub
insl
mov
mov
xchg
push
push
aas
std
dec
mov
mov
lret
lea
mov
push
add
mov
or
hlt
push
inc
lock
es
ljmp
mov
mov
mov
stos
dec
inc
shr
adc
hlt
andb
cmp
and
mov
fimull
int3
cltd
push
shrb
sahf
pop
and
popf
mov
dec
and
mov
xchg
mov
or
mov
cmovo
das
out
jecxz
dec
arpl
aaa
add
rcr
push
push
jae
sbb
fwait
mov
in
stos
aas
test
data16
sub
or
push
aaa
insb
cmp
fidivs
jns
pop
fs
movl
or
mov
or
sti
dec
mov
jne
nop
mov
mov
dec
adc
and
xor
cld
pop
repz
cmp
lock
mov
hlt
push
or
pusha
pop
lcall
mov
daa
sbbl
in
insl
ljmp
or
xor
enter
push
pop
pop
push
inc
clc
mov
xchg
int3
sub
adcl
pop
divb
mov
incb
rorl
clc
ret
arpl
sti
aam
fwait
inc
mov
add
mov
fistpll
jo
das
das
or
lret
pop
cmp
fisttpl
mov
loop
jne
pop
pop
scas
add
sub
push
test
xchg
inc
ret
out
adc
mov
icebp
sub
cmp
popf
test
movsl
int
in
rorl
shlb
ret
push
test
fdivl
fwait
cmp
sbb
dec
cmpsb
jae
les
aaa
inc
xchg
int
push
jp
enter
mov
dec
inc
jnp
jl,pt
popf
or
add
outsl
sub
cmc
int
jo
xor
sarb
cli
repnz
sub
ret
loope
pushf
xor
in
inc
mov
add
rcl
outsb
pop
out
inc
or
jl
mov
daa
shll
mov
jnp
out
dec
mov
mov
push
sub
fmul
in
into
xor
adc
mov
add
mov
inc
lods
mov
fs
cmp
fsubl
call
or
movsb
dec
pop
fsubrp
lods
and
xchg
out
repnz
or
or
push
xchg
out
fnstcw
in
stos
inc
cmpsl
dec
mov
lret
xor
mov
cmc
stc
push
and
xorps
cmpsl
xchg
aas
xor
push
js
shr
xor
inc
out
inc
adcl
or
ja
or
sahf
inc
or
call
fucomip
out
mov
jbe
je
hlt
and
and
inc
pop
imul
shrl
repnz
lods
fiaddl
mov
aam
lock
mov
cmp
out
pop
mov
and
lret
push
mov
aam
cmp
iret
iret
std
adc
cmp
into
in
out
fcoml
out
sub
adc
adc
push
xchg
subb
push
or
iret
test
mov
jecxz
in
xor
push
mov
decb
addb
scas
enter
add
out
mov
ret
std
in
test
fmuls
jg
and
arpl
out
pushf
sbb
pop
in
loopne
cmp
xchg
scas
adc
iret
ret
fwait
mov
push
sbb
sub
loop
jge
movsl
lahf
outsb
gs
cmp
loop
cs
jmp
cmpsb
or
mov
lcall
or
dec
fs
jbe
and
mov
jno
mov
sbb
aam
std
and
push
shl
mov
xor
or
jb
jb
cmp
jg
or
pop
jns
push
inc
fistpl
add
dec
icebp
sbb
mov
repz
add
pop
pop
inc
pop
fisubs
fmulp
in
loop
pop
sbb
sahf
push
push
jno
sub
mov
imul
push
pop
sarb
shrb
mov
jb
fcomps
sbb
idivb
xor
sub
dec
mov
or
mov
test
mov
jp
mov
stc
enter
inc
jp
insl
inc
sbb
in
loopne
in
and
aaa
jnp
adc
and
mov
cmp
std
sbb
aaa
cmp
movsl
push
mov
jo
fwait
imulb
aaa
js
push
nop
mov
mov
adc
mov
xchg
lcall
jb
or
test
sub
ret
pop
xor
sbb
out
fxch
and
push
arpl
inc
push
cld
mov
out
rep
inc
in
vmwrite
mov
outsl
cld
hlt
fistpl
data16
mov
sub
xlat
loopne
nop
in
jno
mov
pop
mov
fcoms
sahf
lahf
add
hlt
ja
out
cli
hlt
imul
add
hlt
incb
test
sub
xchg
pop
pop
push
mov
les
xchg
mov
xor
aam
and
mov
pop
fstpt
jo
adc
jo
andl
cmp
ljmp
mov
nop
icebp
call
imul
mov
or
lods
idivb
xchg
ret
fdivrs
in
pusha
sar
jmp
int3
sbb
roll
cmp
add
mov
ror
xchg
push
pop
clc
or
mov
aad
pop
insl
or
pop
ds
movsb
out
imul
subl
stos
jb
nop
loop
daa
jg
mov
mov
dec
pop
movsl
shrl
mov
jb
stos
inc
scas
mov
push
iret
cmp
jmp
stos
cmpsl
test
dec
jmp
pop
or
adc
mov
push
jb
movsl
enter
mov
cmp
push
mov
pop
cs
test
lahf
out
push
cmp
jge
in
fists
mov
ret
cli
mov
jp
out
das
out
and
mov
aaa
lock
pushl
cmp
test
xchg
and
or
sbb
jno
data16
hlt
test
in
sub
cmp
or
addr16
cmp
mov
mov
lods
cmp
test
cmc
rcll
test
mov
test
pop
fcoml
mov
in
mov
testb
sbb
ret
cltd
inc
fistps
adc
je
lods
push
stos
stos
lds
jecxz
xor
xchg
fs
adc
icebp
int
pusha
and
inc
push
pushl
adc
mov
imul
cli
stc
pop
cmpsl
rcll
and
jge
xchg
loope
add
ljmp
cmp
jno
jecxz
pop
xchg
or
or
or
pop
inc
stos
nop
jne
adc
mov
fistpll
cltd
es
sbb
shrb
andl
or
in
xchg
enter
push
cld
fwait
and
inc
stos
test
mov
ret
push
sub
in
imul
in
repnz
push
aad
aas
adc
inc
pusha
ficoms
xchg
xchg
cmpsl
add
ss
xchg
xchg
in
push
insb
push
xchg
jmp
into
mov
mov
in
ljmp
int3
xchg
lahf
jmp
nop
lods
repz
popf
cmp
inc
es
and
test
jp
jne
inc
inc
ret
jmp
cmp
jp
mov
jbe
iret
xchg
mov
lret
pop
stos
mov
sub
rol
inc
sub
pop
lahf
iret
repz
in
je
in
mov
outsl
into
xlat
push
mov
sbb
cmp
pop
lret
aad
mov
jle
sub
hlt
std
popl
xchg
imul
fs
dec
cmp
mov
cwtl
inc
ret
lods
sub
mov
sub
cli
out
mov
mov
sub
mov
popa
icebp
cmc
pop
icebp
loop
dec
aad
xorb
rcrl
jnp
adc
mov
fcmovne
int3
sbb
cwtl
popf
sarb
divb
pop
lea
shr
hlt
sub
mov
stc
pop
loopne
pop
mov
jno
push
jmp
push
push
ss
outsb
or
aad
stos
jge
movsl
mov
and
test
std
sbb
pop
mov
pop
lods
inc
adc
mov
sbb
mov
pop
sub
jp
cwtl
cmpl
inc
jmp
sub
loope
addb
rorl
iret
adc
jmp
push
loope
enter
xorl
insb
lock
es
arpl
push
mov
pop
mov
repz
fdivl
inc
mov
mov
imul
and
pop
xchg
je
mov
into
lret
push
cmp
sbb
rcrl
and
mov
test
jo
jmp
sub
dec
repz
imulb
outsb
jle
pop
xchg
and
push
jo
xchg
xchg
je
in
pop
int
mov
jle
xchg
mov
sbb
mov
adc
push
sub
fwait
add
dec
movsb
xchg
pop
jmp
rcll
pop
push
iret
xlat
pop
frstor
sbb
fsubl
and
stos
test
mov
sbbl
mov
pop
aam
fistpl
enter
sbb
arpl
cmp
insl
test
fsubs
std
pusha
sub
and
adc
ficomps
pop
xor
cmc
mov
int3
xor
mov
dec
mov
sub
insb
and
outsl
aaa
dec
icebp
shlb
add
inc
adc
in
mov
dec
movsl
cmp
popf
and
mov
xor
pop
loope
clc
setp
stos
shr
dec
paddb
jp
test
inc
sbb
push
cltd
popf
jae
test
mov
jle
sti
xchg
dec
push
mov
inc
data16
bound
add
pop
sbb
int3
sbb
dec
ja
sbb
lret
dec
sbb
adc
mov
lods
sti
push
mov
int3
jb
pop
add
mov
xor
mov
sub
mov
cmp
mov
push
fsubrl
cmpl
in
movsb
into
popa
mov
pop
sub
sub
insl
in
adc
mov
shll
nop
cmc
sub
dec
nop
cs
sub
sub
mov
mov
divl
dec
ljmp
fistps
mulb
xor
lcall
in
lea
mov
mov
inc
popf
and
jae
lock
fucom
into
bnd
sbb
push
scas
ljmp
jb
roll
xor
int
je
aam
and
adc
or
pop
xlat
cmp
imul
inc
test
mov
cltd
and
rcr
mov
xchg
lock
andl
outsb
js
xor
loop
mov
or
aaa
and
int3
hlt
jno
mov
mov
cmpsb
sbb
mov
mov
mov
cld
mov
imul
loope
jne
outsb
xchg
in
loop
and
ret
cmpsb
mov
pop
cmp
cmpsb
push
push
mov
dec
mov
xchg
stc
xchg
pop
imul
or
nop
ror
xchg
andb
mov
cltd
adc
out
push
sub
jge
jo
sub
pop
movsb
dec
mov
sbb
enter
xchg
jmp
movsb
mov
mov
loopne
xchg
jl
je
pop
ljmp
mov
push
xlat
dec
cmp
sub
push
sar
and
shlb
push
ror
js
mov
mov
mov
gs
call
out
mov
sbb
notb
cmpsb
mov
and
xchg
arpl
out
and
cltd
loop
ret
sub
mov
xchg
dec
aam
arpl
stc
mov
jo
lret
inc
stos
inc
sbb
cmp
gs
dec
mov
jo
loop
shrl
mov
cmpsl
add
mov
pop
mov
xchg
cmp
xchg
xchg
pop
iret
lds
mov
nop
or
dec
lds
mov
mov
xchg
and
sbb
mov
mov
mov
and
mov
sbb
scas
loope
push
mov
jmp
mov
push
lret
in
add
adc
mov
or
pop
cmp
push
adcb
pop
and
xchg
push
mov
fsubs
loopne
repz
stos
jb
adc
je
movsl
cmp
jo
icebp
into
pusha
enter
out
outsl
hlt
mov
cmp
mov
rcrl
mov
cmp
cmp
jbe
ret
xor
adc
pop
add
push
lods
mov
out
cmp
dec
rcrl
lods
cmc
xchg
add
jno
xlat
lods
arpl
push
mov
fistps
inc
xlat
movsb
push
or
bound
push
push
mov
xlat
ja
aas
xchg
push
xchg
lret
fsubs
push
xchg
sub
sbb
dec
sub
mov
xchg
adc
call
jge
aad
lret
test
jmp
repz
mov
mov
enter
pop
and
dec
insb
bound
dec
sar
push
pop
lcall
mov
in
mov
pop
sbb
in
out
aad
mov
inc
repz
pop
js
loope
cmp
jnp
insl
sub
ja
sbb
push
enter
jl
xchg
sbbl
jns
sub
jo
mov
inc
in
adc
gs
ljmp
push
test
hlt
jne
xchg
cs
or
jns
fistps
dec
cli
sub
fildl
inc
inc
mov
int3
ljmp
mov
sbb
ja
xchg
int
cmp
jge
xchg
ret
jmp
lea
and
cltd
push
dec
mov
inc
dec
sub
dec
jns
or
mov
mov
test
rolb
movsl
or
daa
addr16
jae
jns
cmp
int
out
daa
mov
add
data16
add
fidivrs
push
ss
cmp
mov
faddl
sbb
jg
pop
dec
mov
jge
shlb
pop
test
dec
xchg
jb
sarb
loope
call
test
repnz
jb
jmp
pop
arpl
lds
dec
add
cmp
outsb
lods
les
rclb
arpl
ljmp
cwtl
dec
cmp
jp
mov
inc
addr16
and
push
push
ss
cwtl
or
rcrb
in
inc
pop
pop
mov
addr16
repz
cmpl
aaa
je
aaa
inc
cmp
out
pop
imul
xorl
in
pop
pop
jecxz
cmp
pusha
push
mov
mov
and
int
popa
in
aas
xor
dec
loopne
and
scas
cmp
and
add
dec
cmpsb
test
daa
insl
sub
jnp,pn
sub
popf
mov
test
mov
popa
ss
inc
xor
push
jnp
dec
clc
cli
xor
cmp
cmp
inc
push
fnstsw
inc
cmp
pusha
xchg
jns
push
adcl
sbb
pushl
stos
push
xor
fucomp
mov
flds
into
sub
inc
cmc
mov
shlb
jne
ljmp
mov
jne
imul
inc
cmp
popf
call
cmp
push
sbb
sub
mov
sbb
test
dec
and
and
imul
jle
cmp
add
mov
data16
fsubl
cmpsb
push
jbe
jmp
jnp
fs
inc
sbb
xor
jmp
pushf
pushf
push
in
add
cwtl
aas
adc
lret
pop
pop
pop
mov
hlt
pop
mov
enter
scas
je
fnstcw
dec
lods
mov
dec
jl
sub
add
jp
adc
aam
push
out
adc
es
call
dec
in
sbb
pop
add
xchg
and
mov
std
in
mov
xchg
pop
inc
mov
ljmp
fsubs
push
xchg
loopne
push
lods
mov
test
loopne
xchg
lods
xor
jmp
loopne
xchg
rcl
rol
sub
leave
sti
xor
pop
add
or
cmp
stos
inc
jae
xchg
ret
jp
xchg
nop
add
decl
sti
test
pushf
pshufw
aaa
les
in
cmpsb
cmp
scas
dec
cltd
xchg
hlt
lods
adc
cli
push
inc
adc
pop
enter
dec
pop
call
std
fs
dec
das
adc
movsl
push
sbb
sti
mov
lock
shl
and
aad
cmc
sub
orl
shll
imul
mov
sbb
das
sahf
clc
pop
inc
insb
shll
lock
rcrb
pusha
mov
scas
xchg
mov
cmp
shrb
icebp
and
jo
sbb
sub
ret
je
lods
mov
rolb
mov
mov
fwait
add
int3
into
mov
cmc
sub
sub
pop
inc
ds
add
cmpsb
ret
xor
pop
cmc
icebp
imul
mov
push
pusha
iret
or
fnstsw
sub
push
stos
test
stos
xchg
push
ss
and
les
mov
jge
inc
push
mov
ja
mov
gs
lret
add
outsb
or
arpl
test
cmp
dec
lds
add
or
push
sbb
xchg
xchg
inc
adc
xchg
test
out
jecxz
xor
add
arpl
loop
into
fsubs
push
ljmp
fmul
adc
jg
mov
enter
adc
repnz
flds
cmpl
cwtl
jne
xlat
pop
cmc
cmpsb
fs
in
test
add
inc
mov
cbtw
repz
mov
push
push
adc
dec
ret
jns
and
das
mov
test
gs
hlt
sub
insl
ret
mov
repz
fdivl
add
jmp
mov
mov
or
or
xchg
test
mov
sbb
adc
and
mulps
out
stos
inc
into
fstpt
je
std
mov
sahf
sti
sub
or
sub
arpl
int
mov
jo
lock
scas
xor
loop
pop
adc
into
dec
and
or
push
repz
popa
mov
test
jg
mov
inc
out
inc
sbb
jbe
out
hlt
rolb
inc
pop
fnstcw
rclb
and
mov
sbb
push
mov
repnz
fldcw
xor
mov
pop
cmp
cmp
mov
pop
or
decl
cmpsb
out
pop
and
xor
ror
into
jno
repnz
sbb
iret
mov
jo
std
addb
test
sarb
mov
aaa
sub
push
js
mov
xor
jae
dec
dec
or
fs
mov
rol
orl
cmp
mov
je
or
and
leave
or
pop
repz
stc
movsb
push
add
dec
call
mov
xlat
mov
scas
mov
je
les
cs
stos
leave
cmc
jnp
and
icebp
bound
xchg
orl
sbb
sub
dec
sbb
stc
in
out
mov
cmp
cmp
in
scas
bound
xchg
cmpsb
fists
and
pop
lods
push
push
sbb
aam
stos
cwtl
cmp
jge
ret
sub
into
push
pushf
mov
mov
jmp
js
clc
sub
push
xchg
inc
pusha
and
sarl
xor
xor
fsubl
jb
rclb
imul
cltd
pop
test
int3
in
into
shrb
fdivl
xchg
jp
icebp
les
add
mov
iret
mov
cmp
push
jecxz
in
inc
rcll
xor
fstps
xor
loope
movsb
adc
sbb
fstpl
cs
rcrl
loopne
lods
pusha
aad
and
jb
stos
lahf
xchg
mov
incl
inc
mov
je
mov
insl
ss
inc
shr
mov
sub
jle
pop
fmuls
fistps
and
sbbb
mov
push
fisubrs
push
pushf
mov
sysexit
cmpsl
imul
lret
loop
int
sbb
cwtl
rol
xor
out
rorb
std
fcomps
push
sahf
pop
repz
insb
adc
dec
data16
inc
addr16
add
cmp
xlat
enter
xchg
or
or
adc
dec
scas
addr16
pusha
xorl
jp
sub
mov
orl
mov
push
inc
jg
lret
jbe
sub
xor
inc
push
inc
scas
loopne
sub
mov
and
into
popf
mov
popf
adc
lds
cmpb
adc
lock
aas
dec
roll
inc
lea
outsb
jecxz
sbb
imul
insb
xor
cld
inc
jg
insb
cmp
stc
jns
mov
sbb
pop
in
imull
and
iret
in
cmc
loopne
mov
or
mov
outsb
push
ret
mov
or
inc
mov
inc
addr16
imul
xchg
push
out
imul
inc
loope
push
mov
enter
movsb
dec
xor
cli
test
test
clc
test
push
aas
push
sar
mov
push
das
lds
add
fs
ds
jo
cmpsl
nop
xchg
cs
mulb
push
dec
pop
mov
aam
lret
cltd
and
cs
leave
shll
mov
xor
pop
xchg
je
repz
xchg
push
lcall
les
ss
xchg
inc
ljmp
add
incb
ret
pop
cs
fwait
mov
or
sbb
inc
push
inc
xlat
dec
xor
je
rcl
push
jge
insb
aad
sbbb
lahf
adc
in
lret
xor
aam
push
insl
sub
jl
sarl
lahf
rcll
test
pop
je
fwait
sub
jg
mov
daa
ja
cmp
cld
xchg
push
jl
jae,pt
aaa
mov
test
lcall
arpl
jg
inc
iret
pop
ret
or
adc
mov
push
inc
and
subb
cmpsl
mov
mov
or
fistps
xor
loopne
xor
cmpsb
inc
add
adc
dec
movsb
ds
mov
pop
mov
iret
scas
shll
lret
addr16
jno
or
push
test
cld
ljmp
repz
jl
arpl
repz
cmp
fs
adc
imul
sbb
inc
mov
addr16
filds
sbb
das
inc
sbb
cmpsb
fs
or
ljmp
sti
xchg
mov
push
or
loope
add
int
dec
mov
mov
lods
pop
jp
sti
add
and
fdivrs
push
in
xor
loop
insl
cli
testb
and
in
shrl
dec
leave
dec
dec
out
mov
into
cmpb
push
or
add
shll
cmp
popf
std
cmp
inc
dec
xchg
jns
fiadds
dec
push
jns
sbb
fdivl
addb
xchg
pop
addr16
punpcklbw
test
xor
ja
cmp
ja
sub
dec
add
pop
adc
add
rorl
ss
jne
and
xor
enter
test
cmp
pop
sbb
pop
in
pushf
lods
or
mov
and
dec
push
in
ficoms
popf
iret
inc
sub
divl
into
aas
js
add
add
test
inc
add
mov
fcmovne
call
iret
aaa
adc
lods
cmp
mov
push
js
jne
into
mov
cltd
test
sub
rolb
mov
fstps
stos
jle
call
jne
sub
jp
popf
xor
adc
movsl
imul
lods
mov
mov
cld
sbb
mov
sbb
jae
mov
aam
sbb
testl
popl
pop
pop
aaa
bswap
out
out
insb
lahf
js
jl
repnz
add
cmp
inc
fidivs
fnstcw
cmpsb
ret
push
push
or
push
pop
adc
insl
add
lods
loope
shr
adc
jnp
sahf
xchg
xlat
rorb
addr16
push
mov
sbb
sub
out
loopne
call
in
es
dec
and
test
and
cltd
mov
pop
in
mov
loop
pop
arpl
loope
mov
mov
pushf
lods
push
leave
lret
sbb
leave
pop
xchg
dec
add
adc
push
inc
cli
sub
insb
push
dec
cmp
inc
clc
sbb
mov
or
pop
push
int3
adc
and
and
gs
cmp
dec
rcl
sbb
daa
roll
sbb
in
pop
sub
pop
push
or
int
test
push
data16
mov
adc
or
insb
add
pop
int3
sbbb
fistpll
add
mov
cmp
ljmp
cmc
in
add
scas
int3
xchg
push
fptan
inc
and
mov
out
or
lock
adc
push
dec
or
in
sbb
ficomps
pop
rorb
mov
lds
pusha
xchg
inc
pusha
xor
jmp
cmp
aad
clc
sbbb
mov
dec
sbb
in
fsubs
mov
out
in
mov
xchg
aas
rol
cmp
xchg
les
lods
inc
imul
adc
imul
lds
add
pop
push
cs
stos
push
cmp
mov
xor
fdivr
jl
test
lcall
mov
sahf
xchg
cmpsb
cmpsl
xchg
test
mov
stc
ficoml
fnstcw
loop
mov
mov
data16
dec
sub
sbb
mov
fmulp
xchg
ss
push
xor
dec
adc
fcompl
aad
cld
push
jno
lods
gs
pop
mov
sub
xor
dec
stos
cmpsb
mov
push
cli
aad
xor
mov
push
jb
sbb
push
int3
pusha
scas
push
fnstcw
sub
mov
inc
insb
adc
mov
push
jmp
jbe
inc
xchg
xlat
mov
out
and
add
outsb
in
cmpsl
or
mov
icebp
sub
stc
ja
jo
jb
es
push
ret
dec
mov
fiadds
outsl
inc
sbb
and
outsb
shrb
sarl
iret
inc
icebp
int
adc
push
cmp
in
cmc
adc
sbb
int3
lock
push
and
jp
in
sub
dec
out
xor
adc
push
ljmp
in
mov
cmp
lods
outsb
xchg
or
xchg
dec
cmp
and
cmp
dec
mov
adc
pop
call
dec
push
push
jmp
rolb
das
movsb
inc
cld
ficoml
in
jg
mov
adc
or
fiaddl
out
inc
sub
push
test
xchg
dec
pop
or
arpl
aas
push
or
xor
insb
out
and
or
mov
into
out
shrb
cltd
lcallw
push
xlat
or
out
mov
arpl
jae
dec
mov
fisttps
in
loope
xchg
add
dec
xchg
ja
aam
mov
in
pop
xchg
mov
je
inc
mov
mov
shrl
loop
xchg
jbe
sbb
push
jge
mov
imul
inc
js
gs
xlat
lahf
aaa
pop
or
stos
js
xchg
add
fmull
pushf
sbb
test
fdivl
addb
or
push
in
sub
idivb
jne
push
int
std
ret
jecxz
jnp
out
xorb
std
xor
add
mov
adc
sahf
pop
and
daa
xchg
lds
icebp
push
inc
sub
xor
js
das
inc
cltd
add
and
push
pop
mov
outsl
bound
popf
and
popf
pop
stos
fmul
je
es
sbb
in
cli
inc
push
fucomi
or
test
xlat
into
cmp
outsb
adc
lods
lds
jge
out
sub
int3
pop
pop
imul
cwtl
xchg
xor
xor
subl
jmp
fimull
jo
testb
arpl
jnp
push
mov
adc
lods
fwait
cld
fnsave
aam
int
inc
dec
and
mov
jl
mov
aam
xchg
inc
jne
sahf
bound
loop
pushl
mov
mov
push
sub
sbb
aas
mov
cmp
push
flds
fisubs
pop
xchg
into
rorl
xlat
into
push
cmc
fwait
inc
jg
sub
sbb
aaa
and
in
mov
lock
sub
xor
pop
test
and
negl
cmpsl
fbld
or
mov
mov
adc
cmp
in
mov
es
mov
js
inc
and
into
mov
fildll
scas
push
arpl
mov
xor
push
dec
sub
lret
ljmp
cmc
add
pusha
out
sbbl
int3
add
ds
loop
inc
xchg
push
cmpl
jp
sbb
outsb
and
push
ja
xchg
in
push
das
jle
xchg
xchg
jg
inc
xchg
lcall
inc
insb
adc
enter
aam
mov
xchg
js
push
sub
leave
mov
xchg
and
lret
shrl
mov
push
jb
add
or
inc
fistl
out
loop
addr16
sbb
or
stos
test
inc
sahf
xor
add
or
jecxz
xchg
cltd
pcmpeqb
hlt
aam
sahf
or
aaa
jp
mov
sub
popa
or
lods
daa
lcall
mov
push
mov
inc
ja
jge
dec
pop
loope
jne
scas
je
mov
xor
das
xor
fadds
loope
add
loope
pop
js
out
out
lods
outsl
or
dec
movsl
movl
inc
stos
movsl
or
pop
ljmp
push
fwait
in
repz
xchg
adc
push
fmull
imul
sarb
sbb
pop
inc
mov
cmp
or
daa
inc
aam
lret
fadds
adc
jg
insl
mov
mov
inc
lea
jo
xor
lods
scas
and
jne
scas
movsb
push
mov
push
js
hlt
add
pop
push
adc
adcb
pop
push
call
shll
sbb
inc
pop
jbe
xchg
jmp
lea
inc
scas
push
jmp
mov
pop
push
fld
xchg
dec
fwait
pop
aas
mov
les
inc
flds
cmp
fwait
or
jmp
dec
and
in
sar
mov
and
stos
or
cltd
out
mov
cwtl
and
pushf
mov
fisubrl
sbb
xchg
jecxz
xor
shll
pop
push
rcll
aad
sahf
xor
scas
aas
les
and
mov
addr16
lcall
out
pusha
lds
fisubl
cmpl
inc
mov
stos
mov
outsl
nop
mov
mov
mov
add
push
loope
or
addb
dec
cld
movsb
inc
mov
aam
xor
push
mov
and
dec
dec
cmp
jnp
outsb
or
into
inc
insl
repz
mov
repnz
adc
add
mov
xchg
dec
fld
cmp
push
jle
dec
sub
cmpsb
sbbb
fidivl
sub
gs
fdiv
mov
adc
inc
jecxz
idivb
loope
xchg
jg
or
loop
xchg
jecxz
cmpsl
add
mov
imul
movsb
clc
das
cwtl
test
inc
inc
mov
jl
ja
aam
and
aam
cld
sarb
decl
xor
xchg
inc
and
jb
adc
or
push
lret
dec
sbb
sahf
loope
mul
jae
cmp
data16
mov
mov
popf
es
dec
pusha
pop
dec
mov
mov
xor
mov
out
inc
sbb
inc
mov
push
mov
mov
push
xchg
testl
adc
xchg
xchg
mov
hlt
add
add
fiaddl
pop
cmp
nop
xor
xchg
xlat
mov
outsl
dec
jmp
jg
mov
inc
lods
jge
add
pop
pop
lcall
mov
outsb
inc
cmp
imul
mov
jb
xchg
in
sbb
test
notl
push
cs
imul
add
sti
mov
pop
mov
stos
adc
loope
lret
mov
in
in
cmpb
cld
sub
or
mov
out
inc
cltd
mov
cmp
out
rorb
jl
jl
or
add
dec
mov
push
cmp
loope
adc
test
xlat
iret
testb
dec
jge
jmp
imull
es
out
xchg
pop
hlt
mov
stos
dec
inc
cwtl
cltd
push
daa
movl
pop
xor
cwtl
inc
and
push
or
push
cmc
daa
outsb
fisubs
push
adc
sbb
testb
call
dec
lock
pop
sub
xchg
js
push
dec
jp
mov
pushf
js
mov
loopne
sbb
fucom
arpl
repnz
add
mov
xchg
and
stos
cmp
jp
out
scas
aas
xor
push
fstpt
les
aaa
mov
push
push
leave
outsb
xor
leave
adc
mov
or
jmp
push
mov
mov
call
mov
test
xchg
arpl
out
fldenv
fdivrs
sub
pop
mov
nop
cmc
sbb
jmp
decl
cmpsl
adc
push
lcall
jl
cmp
and
pop
xor
fisttpll
pusha
xor
and
test
loope
cmpsl
sbb
mov
sbb
pop
dec
test
loope
push
pop
push
pushf
shlb
dec
ja
dec
lahf
cmp
xchg
mov
pop
clc
pop
aaa
mov
enter
jae
subb
fwait
cli
inc
fwait
data16
in
pop
rorl
jae
loopne
push
jge
bound
inc
cmpsb
rcrl
andb
mov
jo
mov
fistps
pop
adc
ret
sti
mov
lret
lock
inc
out
dec
lods
popa
fs
cwtl
and
fistpl
popf
int
cs
jb
cmp
inc
repz
xor
mov
or
and
jo
arpl
addr16
int3
loopne
sub
adc
hlt
popf
sahf
pushf
inc
clc
mov
ljmp
jne
and
cmp
inc
push
ja
dec
dec
gs
inc
mov
lods
pop
xchg
cmp
mov
rol
shrb
jmp
jecxz
jecxz
lea
add
ret
jb
or
xchg
push
loopne
add
cld
mov
bnd
push
pop
jns
or
rcrl
je
mov
repz
out
insl
cli
inc
rorl
ja
int
ds
test
pop
icebp
cmp
xchg
inc
loope
movsl
dec
notb
push
push
and
cmp
bound
push
pop
divb
jae
jecxz
in
mov
int
jl
int3
sti
outsl
mov
lcall
lods
sarb
les
push
imul
jmp
loope
stos
fnstsw
fcomps
push
push
xchg
test
lahf
nop
stos
cmpsl
mov
pop
adc
dec
cld
dec
ret
sub
insl
sbb
push
imul
imul
jecxz
xchg
cwtl
jp
cmp
cwtl
cs
mov
aaa
push
loope
stc
mov
icebp
pop
and
mov
aaa
mov
lods
sub
in
cmp
test
xchg
mov
mov
adc
mov
out
je
lock
inc
jnp
fisubl
xor
mov
fwait
mov
adc
lret
shrl
lds
sbb
xchg
pop
xor
xor
sbb
sub
stos
adc
ffreep
xor
rorl
pop
inc
cmp
ja
in
inc
loop
xor
add
outsl
xor
push
stos
cmp
push
inc
nop
pop
add
stc
pop
jne
mov
mov
and
out
cmp
jmp
mov
cmp
sti
inc
in
mov
rorb
sub
mov
nop
mov
fwait
sub
in
out
cmpsb
rorl
cmp
sbb
fdivrl
es
add
adc
cmp
cmpsl
stc
ljmp
pop
cmpsb
outsl
movsb
nop
lea
push
int3
repz
mov
mov
arpl
int
sbb
out
out
lret
mov
jb
and
mov
std
cli
xchg
lods
test
test
pop
sub
dec
push
adc
lea
mov
sti
rcll
mov
sub
es
imull
cmpsl
ret
shll
enter
and
sub
dec
jbe
sub
dec
or
jp
adc
imul
cmp
rcll
jns
std
imul
movsb
out
adc
and
in
rorl
ss
xchg
xchg
sahf
cmpsb
sbb
fcoms
negl
mov
aad
jp
pop
int
push
stos
cmpsb
lret
jecxz
mov
addb
pusha
xor
jo
xor
dec
addl
add
inc
xchg
jl
not
mov
mov
aaa
xor
lods
sbb
insl
cmp
jmp
jmp
mov
cli
dec
cmpsl
fwait
data16
gs
lds
pop
aad
std
sub
in
and
mov
or
cmp
out
pop
jmp
subb
inc
int
mov
jle
ss
pop
fidivrl
mov
das
push
enter
inc
out
mov
inc
ljmp
sub
std
inc
adc
ret
push
cli
dec
cltd
scas
test
sub
leave
and
dec
sahf
xor
jge
fdivp
or
imul
pop
sbb
push
mov
es
ja
sbb
sbb
adc
aad
ljmp
mov
mov
leave
enter
add
test
call
push
push
sbb
xor
fistpl
cwtl
xor
push
add
jmp
dec
xchg
pop
dec
pop
pop
cli
sub
shl
data16
and
jmp
ret
push
test
lret
cmp
movb
test
mull
aam
adc
sub
inc
les
out
mov
mov
stos
pop
movsb
dec
dec
and
adc
jbe
inc
das
gs
in
adc
in
inc
inc
adc
cmp
stos
mov
fstl
loope
or
and
dec
fsubrl
add
out
jnp
jo
xchg
loope
movsb
mov
jp
inc
nop
pop
outsl
jo
js
fmuls
jnp
add
jge
daa
addl
inc
loop
or
push
les
fcmovne
int
leave
adc
xor
fisttpll
popf
and
jg
xor
rclb
aad
js
inc
push
fdivs
and
data16
xor
jg
cmpsb
cmpsb
nop
fadds
xchg
mov
inc
sub
shlb
and
sar
stc
addr16
stos
jge
testb
adc
enter
dec
pop
sbb
stc
mov
fwait
sub
jne
or
popf
mov
mov
add
push
out
insl
andb
mov
mov
enter
and
add
fdivs
jp
sub
push
arpl
pop
in
add
stos
cmp
cmc
sbb
mov
mov
xchg
jae
ficoms
adcl
jbe
inc
mov
cmpsl
ja
mov
mov
mov
out
xor
call
cmpsl
out
pop
xor
xchg
mov
sbb
add
fs
in
cmc
gs
adc
jae
std
mov
daa
jno
loop
push
sub
adc
mov
cld
cmp
and
jns
and
mov
in
das
in
aas
jae
int
lods
mov
mov
dec
cs
cld
or
int3
mov
push
xchg
test
jg
ret
pop
shll
das
jg
imul
loop
jp
cli
jb
dec
inc
push
cmp
loopne
dec
push
cmc
fcomp
ss
jp
stos
xor
out
inc
shlb
popa
pop
and
enter
mov
jg
adc
es
jge
jmp
cs
shlb
stos
daa
cmp
popa
push
mov
lock
xlat
dec
xor
repz
fcoms
mov
call
cmc
jl
jge
mov
xor
pop
and
push
cwtl
dec
and
shll
jge
dec
cmp
xchg
outsl
movsl
add
ljmp
jl
xchg
cld
xor
loope
push
pop
push
dec
cld
les
out
popa
test
ret
pop
adc
aaa
jnp
inc
movsl
xchg
sbb
adc
pop
mov
dec
push
xchg
imul
jecxz
xchg
and
xchg
and
ja
int
jle
lahf
ja
fmull
or
test
add
lahf
push
adc
ds
sbb
repnz
cmp
pop
cmpsl
sbb
pop
or
adc
int
sbb
jnp
jnp
add
xor
int3
lahf
push
loopne
mov
stos
sub
sbb
xchg
adc
push
push
sti
cmp
cld
dec
andl
xor
push
call
int
push
ficoms
leave
shlb
push
mov
jnp
ljmp
mov
sub
cmova
imul
mov
fsubl
sub
repnz
mov
add
in
repz
xchg
mov
xchg
mov
or
test
dec
ja
jne
push
push
ja
mov
repnz
popf
je
fsubrs
mov
pop
mov
pop
inc
and
and
sub
jg
fwait
mov
add
xor
sub
cli
scas
rcr
ficoms
inc
adc
mov
adc
sub
stos
pushf
cmpsb
sbb
cltd
fstpl
test
sub
or
insl
xchg
leave
dec
adc
ss
ss
cs
jo
xor
mov
inc
lret
cmp
addr16
mov
fldcw
cltd
out
pop
ret
sbb
mov
adc
push
and
test
pop
fdivrs
out
ds
test
gs
adc
and
mov
inc
jmp
andl
mov
fbld
aam
sub
and
mov
adc
xchg
jmp
inc
jg
test
addb
cltd
pop
je
pop
bound
jae
xor
jnp
inc
loop
sbb
push
shl
stos
inc
adc
je
mov
mov
and
jle
mov
push
in
imul
or
cmpsl
bnd
aaa
inc
adc
repz
imul
cmp
rorb
cmpsb
mov
jbe
in
xor
imul
pop
je
ret
out
xchg
hlt
xor
or
orps
pusha
xorl
in
test
mov
lahf
pop
xlat
or
jecxz
lcall
push
cs
dec
push
jmp
mov
mov
xchg
inc
lret
jns
out
dec
add
test
pop
dec
mov
repz
pushf
add
pop
push
lds
mov
shl
out
sbb
aaa
push
fs
inc
hlt
jp
pusha
sub
pop
lcall
dec
rorb
scas
mov
aaa
xchg
cwtl
jge
out
lret
fidivl
scas
cs
jo
or
or
adc
cli
and
test
je
dec
sahf
dec
mov
xlat
inc
ja
fidivrl
cmp
lds
ds
mov
mov
xchg
scas
insb
ficomps
xchg
xchg
data16
pushf
mov
mov
dec
imul
push
xor
inc
jle
int3
jne
insl
lods
or
outsl
pushf
inc
rcrl
push
or
test
ljmp
adc
dec
test
or
xchg
out
lods
stos
imul
jecxz
sbb
inc
inc
inc
inc
loopew
imul
rol
or
sbb
mov
js
push
push
outsb
popa
out
repnz
xchg
ret
push
stc
jno
cmp
mulb
shlb
testl
mov
mov
jae
pop
imul
cs
pop
inc
iret
cmpsb
dec
pusha
out
sub
stos
daa
mov
in
mov
mov
mov
int
icebp
lea
xchg
push
out
frstor
int3
jge
mov
mov
adc
popa
sub
add
jo
add
mov
cmp
ss
divb
xchg
ja
loope
cmpsl
adc
sub
mov
movsb
lahf
out
sbb
push
mov
lret
sub
jmp
insl
adc
push
into
in
lahf
xchg
mov
aas
jle
loop
push
sub
mov
xor
lahf
shll
out
push
out
fs
cmpsb
mov
scas
clc
leave
xchg
scas
push
out
mov
testl
gs
test
stos
divl
icebp
pusha
fisttps
stos
cmpl
cltd
xchg
inc
mov
in
or
mov
jns
fnstsw
xlat
rorl
sbb
ljmp
mov
mov
lret
or
mov
inc
mov
adc
test
dec
or
movsb
mov
mov
xlat
rorb
cmp
or
sbb
mov
push
push
cmp
mov
mov
add
ficoms
scas
xchg
pushf
lds
dec
xor
mov
inc
mov
xor
fadds
xchg
mov
jle
outsb
jmp
push
pop
and
cwtl
fstp
jge
mov
aad
shrb
aaa
xchg
mov
mov
jge
cli
push
insl
cwtl
clc
loopne
cld
cmpsl
outsb
mov
jg
rcr
dec
lcall
out
xchg
cmp
or
test
xor
sarl
out
cmp
sbb
stos
shr
mov
xor
add
aad
lods
sbb
and
inc
jne
push
push
sub
cli
out
adc
ss
icebp
mov
ljmp
lock
stos
fwait
mov
inc
dec
pop
lea
out
dec
fbstp
xchg
cmp
cmp
iret
xor
add
popa
xchg
stos
xchg
js
sub
rcrb
imul
mov
fisttpl
mov
loopne
inc
xlat
mov
sahf
inc
test
pop
movsb
bound
xor
jecxz
or
pusha
xor
xchg
in
fcompl
dec
dec
rolb
inc
xor
dec
adc
sarl
imul
dec
push
push
adc
add
mov
sbb
dec
dec
leave
push
jbe
push
loop
pop
add
cmc
movsl
mov
push
sbb
dec
fimull
mov
inc
mov
xchg
pop
lock
sbb
mov
and
cltd
pop
cmp
jbe
xor
pop
adcl
imul
pop
arpl
dec
add
aaa
xchg
xchg
into
jecxz
sbb
aas
mov
loope
xchg
push
xorl
dec
inc
mov
hlt
imul
dec
mov
jg
out
aas
dec
xchg
aaa
mov
add
sahf
stc
outsl
push
das
push
jb
xchg
pusha
pop
sbb
jl
aad
mov
cmpsl
lret
call
ret
xchg
xchg
or
inc
aam
jmp
pop
or
add
xchg
pop
adc
leave
xchg
push
cmp
mov
in
outsb
cltd
shll
or
push
repnz
insl
or
movsl
leave
gs
pop
fidivrs
imulb
dec
and
inc
icebp
mov
xor
mov
fisttps
jle
in
pop
add
fisubl
sarb
push
arpl
push
mov
pop
sti
cmp
sbb
arpl
mov
mov
movsl
lret
ja
sbbl
xorb
fiadds
inc
sbb
push
stc
adc
addr16
pop
adc
outsb
stc
fwait
arpl
scas
xchg
repnz
pushf
push
add
jl
mov
iret
add
push
xor
jl
outsb
or
cmp
lahf
sub
pop
push
test
icebp
shll
mov
sahf
addb
shll
pop
enter
arpl
add
add
jno
mov
sbb
shlb
mov
sub
pusha
sbb
dec
nop
gs
jecxz
sub
xchg
insl
loope
inc
iret
sbb
push
cs
dec
inc
sub
gs
xchg
test
addr16
adc
roll
subl
pop
sub
inc
jmp
mov
fimuls
push
mov
outsb
sahf
ss
aad
xor
out
loop
inc
sbbl
das
stos
inc
cmp
jmp
mov
or
fbld
fadds
imul
test
pop
movsl
cmp
push
adc
jns
and
dec
xor
dec
mov
insb
and
jb
mov
dec
cmp
nop
pop
xor
in
mov
mov
pop
mov
dec
rorl
fsubl
inc
call
std
or
fcoms
jne
test
std
loopne
or
fnstcw
sbb
jl
pop
and
movsb
bnd
mov
mov
ds
test
pop
ljmp
push
scas
les
dec
inc
adc
or
dec
inc
test
or
fwait
pop
enter
pop
mov
push
test
jecxz
and
pause
add
xchg
fwait
pushf
or
stc
xchg
negb
xchg
pop
out
inc
mov
fidivs
dec
xor
xor
and
iret
cwtl
in
pop
add
loopne
dec
adc
adc
in
imulb
das
adc
push
adc
push
orb
sub
daa
sub
or
dec
or
incb
imull
test
lock
jb
mov
dec
push
fnstsw
mov
ret
into
insb
sbb
jns
das
fistl
push
fs
xor
sbb
mov
cmp
les
mov
andl
cmp
xchg
enter
mov
ffreep
lods
out
pushf
lcall
stos
and
xor
das
test
lret
sbb
xchg
pop
lods
push
or
in
or
dec
xchg
daa
int3
into
push
rclb
dec
fisttpll
and
js
fildl
cmpsl
and
lds
push
xchg
sbb
cwtl
fadd
ss
scas
inc
push
inc
xchg
std
pushf
addr16
mov
dec
outsb
xchg
dec
ljmp
aam
loope
pop
frstor
sbb
add
sbb
jnp
jecxz
push
lcall
repnz
cmp
es
dec
push
lahf
and
xchg
sbb
jg
sarb
mov
pop
cmp
jo
and
cs
das
subl
adc
mov
or
icebp
test
cmp
insb
orb
pop
imul
stos
and
mov
jmp
ljmp
cmpsl
stc
gs
xor
test
dec
mov
out
sub
outsl
ret
mov
mov
faddp
add
xlat
xor
ja
mov
je
sbb
lods
scas
jecxz
sbb
sbb
faddp
sbbl
xchg
test
repnz
fst
aad
pop
jg
pushf
dec
andl
jle,pt
aam
test
push
mov
out
dec
mov
mov
shr
mov
lods
adc
dec
push
pop
cs
sbb
fwait
xchg
mov
aad
pusha
jb
aas
and
and
out
cmpsl
lock
adc
scas
cmpsb
cmp
push
inc
dec
pop
jo
and
dec
scas
div
inc
dec
int3
jecxz
sahf
jl
into
std
cmc
in
add
adcb
in
mov
fistpl
sbb
fwait
pushl
xchg
in
andl
inc
xchg
push
sub
daa
mov
leave
ja
or
push
mov
jle
adc
icebp
sbb
pop
add
mov
mov
jbe
dec
mov
jle
and
aaa
pop
addr16
scas
cmpsl
jnp
sbb
pop
test
jnp
stc
movsl
jmp
and
es
xor
clc
mov
int3
shll
repnz
sbb
sbb
mov
xlat
ss
xlat
jle
loopne
jno
orb
fs
mov
pop
ret
data16
int
mov
xchg
outsl
out
nop
movsb
aam
adc
mov
pop
cmp
lahf
fstpt
mov
cltd
icebp
jl
leave
inc
sbb
jnp
lds
les
sub
ds
or
stc
std
divb
sarb
insl
mov
mov
loopne
std
xchg
or
pop
rep
mov
scas
call
data16
cmp
dec
push
loopne
dec
lea
shll
es
xchg
mov
jecxz
sbb
pushf
pop
adc
out
inc
int3
jae
dec
push
add
xchg
enter
icebp
mov
mov
push
jg
std
or
stos
dec
jg
das
xchg
stos
cmp
cltd
in
lock
shll
cmpsl
push
lcall
xchg
aad
jb
aam
int3
pop
push
cmpxchg
mov
adc
pop
xchg
pop
bound
xlat
push
movsl
mov
dec
mov
xchg
mov
push
push
jp
pushf
or
es
adc
mov
push
mov
mov
push
loope
cli
stc
pop
rorl
idivl
dec
add
pushf
push
pop
dec
cmp
mov
mov
sbb
stos
cmp
lock
add
in
sub
mov
hlt
push
divb
xchg
sbb
xchg
jle
xchg
cmpsl
pop
fisubrs
ficoml
add
sbb
mov
mov
fldenv
cmp
outsl
fistpll
xlat
int3
in
int
mov
icebp
stc
jbe
loope
loope
fdiv
pminsw
aas
mov
cld
xor
cli
jae
mov
mov
push
mov
jno
lds
xchg
ja
inc
mov
test
cmpsl
inc
mov
inc
into
adc
into
test
sbb
popa
cltd
adc
jmp
xchg
test
aad
out
mov
add
lods
sbb
adc
xchg
cmp
inc
dec
or
xchg
stos
push
jo
scas
subb
sub
divb
add
outsl
mov
cmc
or
out
mov
mov
pop
cli
mov
mov
mov
cli
outsl
das
inc
jl
add
adc
pop
imul
add
gs
xchg
stos
js
in
xchg
jg
and
lods
xchg
cmpsl
test
sahf
aas
test
mov
mov
fcomi
mov
and
ret
dec
xchg
ja
inc
add
lock
mov
loope
and
jle
add
mov
mov
scas
roll
mov
cmpsl
mov
add
add
pop
imul
adc
jp
dec
jg
lea
lods
sahf
int3
pop
push
orl
or
scas
adc
scas
inc
mov
movsb
call
sbb
outsl
jge
mov
ja
int3
insb
and
test
fcoms
or
leave
stc
cwtl
js
push
in
sub
dec
fstl
jbe
in
int3
jae
xchg
adc
dec
in
push
push
int
repz
xlat
sub
or
lock
cmp
dec
stos
jnp
pusha
decb
mov
xor
scas
mov
xor
in
in
subl
js
aas
or
cmp
xor
mov
test
fidivrs
xor
es
iret
pushf
ljmp
dec
ss
pcmpgtd
sahf
stos
add
mov
inc
orb
mov
mov
js
ja
or
clc
rcrl
pop
pop
cwtl
stos
negb
push
lahf
xchg
jo
mov
in
xchg
jmp
lret
test
cmc
loope
jmp
fld
icebp
popf
push
icebp
mov
pop
shl
icebp
icebp
movsb
pop
dec
mov
aas
mov
pop
pusha
sub
adc
into
push
shrb
add
xor
ss
pop
dec
push
repz
xor
addr16
mov
mov
lea
ret
cmp
sbb
push
lret
loopne
jle
xor
mov
dec
cmpsl
xlat
mov
shl
pushf
mov
jp
jge
mov
stos
popa
into
adc
cmpsb
out
ss
data16
mov
shll
divb
dec
adc
cmp
filds
mov
sar
cmp
pop
lret
pop
mov
sub
jb
mov
sti
jbe
fisubs
jb
mov
xor
dec
sbb
in
sbb
rcl
test
ljmp
mov
mov
out
mov
in
addr16
loopne,pt
jae
aas
mov
int3
daa
mov
outsb
aaa
add
pop
xor
push
dec
or
cmpsb
cmpsb
pop
xchg
or
add
insl
xor
cli
das
out
and
stos
push
cs
lea
lds
enter
cmc
adc
adc
jmp
adc
aam
jns
jecxz
mov
xchg
and
fs
push
popf
test
stos
in
xor
jmp
loop
lret
dec
mov
stos
push
pop
cmp
xor
test
xor
and
mov
lret
mov
insl
jecxz
add
decb
sub
cltd
loope
movaps
xchg
imul
dec
fisubrs
jno
loope
cs
mov
or
cmpsl
push
inc
xor
sub
inc
out
shr
sbb
adc
sub
mov
xchg
fnsave
repnz
test
add
in
jg
pop
cmpsb
jg
pop
push
and
cltd
aaa
xor
push
sbb
push
mov
cmc
push
in
pop
in
dec
sahf
nop
sub
adc
dec
add
xor
sub
call
es
fucom
pusha
jne
lock
mov
xchg
jae
sub
xchg
cmp
jle
out
mov
jb
and
push
mov
aas
jge
cmc
aaa
xchg
or
pop
ja
xchg
ficoms
cmp
std
inc
sbb
adc
mov
adc
orb
fldcw
imul
fcomp
pop
mov
mov
mov
add
xor
sbb
push
dec
mov
scas
mov
add
xchg
push
push
pop
xor
jmp
dec
in
add
cmpsl
mov
xor
popa
cmp
push
rcr
xor
jne
int
fwait
and
mov
in
pop
xchg
insb
rorl
mov
movsl
idivb
pop
lret
xor
pusha
jmp
into
xchg
sub
lock
sub
cs
add
fdivr
cvtpi2ps
ss
mov
mov
ret
jb
sahf
mov
pop
push
aam
fs
iret
add
push
push
inc
xor
loopne
scas
arpl
jbe
aad
fstl
xchg
fcmovne
pavgw
fs
or
xchg
pop
cmp
scas
out
scas
push
cltd
call
test
stos
and
sbb
xchg
mov
inc
push
ret
mov
stc
dec
stos
sub
inc
sarb
enter
leave
push
xor
inc
imul
dec
fadd
and
push
lea
adc
xchg
ret
xor
adc
push
mov
push
push
in
pop
and
and
inc
fisubs
jecxz
fs
dec
jp
movsb
pop
pop
int
push
add
mov
jno
jle
out
jo
or
addr16
leave
add
mov
xchg
outsb
add
xor
add
aas
arpl
sbb
jge
add
dec
into
pop
shlb
cmp
call
mov
js
movsl
pop
lods
xor
call
fwait
jmp
push
xor
dec
sbb
ja
adc
addl
jl
jns
aas
sbb
iret
int3
push
xchg
dec
add
fcomip
pop
inc
test
call
mov
out
test
into
mov
out
out
mov
test
popa
lods
clc
cli
gs
cmpsb
adc
fdiv
je
pop
loopne
hlt
add
cwtl
mov
xor
inc
mov
pushf
mov
lcall
sbb
loope
cld
sbb
sub
sub
add
push
xchg
pop
adc
vshufps
imull
fwait
into
icebp
jbe
dec
sbb
mov
xor
push
xchg
test
pop
bound
dec
add
push
sub
lahf
es
push
lods
pop
insb
cmovg
or
xchg
fwait
sub
sub
jle
popl
inc
cmp
andb
sbb
or
add
out
aam
ds
movb
lods
xchg
mov
fisttpl
push
cli
je
pop
push
push
mov
inc
add
or
pop
int
fs
inc
loopne
lds
xchg
testl
in
or
fs
mov
adc
adc
repnz
jge
cmp
testb
lcall
stc
dec
pop
add
fwait
movsl
lods
aad
lret
je
cmp
xchg
add
adc
pop
mov
mov
inc
pop
leave
scas
imul
cld
mov
mov
xlat
xlat
pusha
std
icebp
mov
push
jl
fsubrl
cmpsb
push
pop
mov
popa
xchg
js
data16
push
rcll
jmp
mov
push
adc
insl
push
test
fiadds
adc
pusha
mov
mov
mov
movsl
xor
xchg
loopne
andb
pop
cmp
ljmp
nop
addr16
cltd
push
testb
subb
cmp
jnp
sbb
inc
es
nop
jbe
fnstenv
js
inc
inc
test
sbb
push
jno
xchg
sub
mov
push
cld
inc
pusha
inc
scas
dec
xor
jbe
push
and
and
lea
add
sub
jb
jbe
cltd
jle
test
sub
mov
inc
mov
jns
mov
adc
aas
pushf
sub
push
sub
jae
inc
inc
or
mov
mov
xchg
xchg
aad
cmp
idivl
in
push
or
movl
shl
pusha
mov
pop
cli
inc
mov
add
lret
dec
or
in
dec
jbe
dec
push
or
and
fldpi
add
shrl
and
fistpll
std
mov
mov
inc
sub
aam
fdivl
push
add
jmp
lret
cmpsb
test
or
insl
sub
push
daa
jmp
lds
or
ss
xor
sbb
addr16
movsb
int3
cmpsb
pop
pop
or
movsl
cmc
xchg
push
popa
mov
daa
dec
lret
sbb
sahf
sbb
xchg
adc
mov
cmp
jecxz
mov
mov
loop
dec
imul
stos
xorb
xor
lea
sub
xchg
dec
addl
cmpsb
xchg
jge
or
mov
scas
or
xchg
mov
daa
mov
cld
pop
ss
les
sub
bound
pop
ficomps
out
sahf
mov
out
fidivrl
lahf
and
bound
pushf
fwait
pop
testl
jno
movsl
push
xchg
mov
leave
popf
fidivs
mov
sbb
test
pop
in
iret
push
imul
and
mov
test
outsl
add
jecxz
scas
add
mov
jl
loopne
xor
sarb
arpl
mov
shl
mov
addr16
addr16
push
mov
cmp
mov
lcall
xor
cltd
div
sarl
inc
xchg
fldl
lret
pop
or
jo
jbe
out
in
sub
gs
mov
das
std
jl
push
notb
add
pop
and
jno
cwtl
test
lds
lcall
mov
mov
and
cmp
dec
insl
dec
cmp
and
clc
imull
fs
inc
stos
loop
push
mov
cmp
cmp
mov
rclb
push
mov
adc
inc
inc
lret
and
dec
lret
in
cs
hlt
cld
loopne
shll
lods
sbb
orb
callw
std
dec
jno
pop
stos
test
and
mov
inc
pop
das
xchg
mov
adc
xchg
mov
cli
pop
and
lods
in
ret
test
imul
pop
xor
pop
sbb
gs
dec
jle
adcb
insl
xchg
jg
jb
push
sahf
stos
popa
in
mov
imul
lock
gs
cli
mov
cltd
cmp
pop
push
movsb
addl
xchg
xor
iret
or
lcall
mov
inc
fildll
xchg
jnp
push
insl
add
rorb
xchg
push
out
fstl
fdivrl
loop
sub
mov
xor
cmp
stc
lcall
cmpl
movsl
lcall
aas
addr16
aas
pop
dec
xchg
enter
sar
jp
arpl
bound
pushf
mov
popf
and
mov
mov
cmp
and
scas
or
or
mov
push
cmpsb
ljmp
inc
sahf
ficoml
inc
notl
sahf
sub
inc
cmc
lock
dec
inc
and
stos
jnp
in
push
inc
push
sub
iret
test
sbb
rcrl
call
cli
push
in
or
mov
stc
mov
mov
rcl
sti
stos
imul
jl
fwait
lret
stc
dec
dec
pop
fmuls
ret
arpl
movsb
fs
push
mov
mov
or
test
pop
scas
push
pop
movsb
jbe
mov
in
repz
or
mov
lcall
push
loopne
adc
cmpsb
adc
mov
jmp
and
scas
dec
xchg
lock
or
fstpt
ss
and
aaa
js
rcrl
inc
ret
pop
es
mov
stos
inc
xlat
inc
shrl
fidivrs
xor
mov
jl
das
mov
inc
or
jo
jno
pop
mov
add
cld
and
add
mov
inc
into
xchg
in
rcr
xor
mov
push
loop
in
mov
insl
out
lock
icebp
or
std
push
notb
cmc
lods
or
or
mov
arpl
pop
sub
inc
mov
xchg
inc
adc
pop
or
hlt
sbb
pop
xor
mov
fldcw
mov
popa
fdivl
pop
xchg
mov
shll
jnp
dec
popf
dec
sbb
jnp
cmp
mov
mov
int3
dec
cli
scas
cld
sub
addr16
loope
or
test
in
subw
dec
cmc
int3
out
ret
jb
mov
mov
hlt
icebp
dec
daa
scas
outsl
ljmp
std
or
gs
es
shlb
sub
mov
mov
push
cmp
daa
std
sub
lret
std
loopne
aas
or
aaa
je
stos
jl
sub
ja
cwtl
sub
pushf
cmp
mov
jo
and
xchg
xchg
and
mov
jne
rclb
mov
push
xor
ret
push
sahf
cmp
insl
xchg
push
adc
aam
lds
mov
in
mov
aas
mov
mov
xchg
ljmp
pop
ret
mov
sub
mov
mov
mov
add
iret
and
fs
cli
add
int3
aaa
scas
test
push
mov
mov
pop
and
add
mov
in
call
mov
add
lock
push
test
xchg
sahf
pusha
stc
out
push
dec
mull
jg
mov
push
fiadds
testl
fdivr
push
cmpsb
dec
xchg
fcoml
xchg
inc
push
sahf
in
cld
insb
out
jl
mov
nop
dec
js
cs
sti
or
js
jno
fmul
add
mov
into
clc
mov
imul
pusha
jae
inc
lods
outsl
inc
cwtl
daa
outsb
into
inc
mov
inc
cmp
jnp
or
pop
xlat
and
mov
arpl
cmp
cmp
popf
out
push
mov
mov
inc
sub
and
repz
jp
int
xchg
iret
stos
aas
repz
mov
inc
lods
xchg
cmc
scas
ficomps
pop
lcall
lahf
std
xchg
cli
jl
mov
jmp
iret
xor
rol
shrb
xchg
repnz
jnp
adc
xchg
jno
cs
lcall
out
push
fs
jle
jmp
pop
xchg
pop
xor
push
dec
sub
gs
xor
dec
push
inc
in
sbb
ret
mov
aad
dec
lret
outsl
pop
ds
jns
mov
pop
cmp
xchg
enter
mov
add
loop
adc
iret
lods
repnz
adc
decl
pop
jae
dec
xor
add
inc
lret
fnstsw
add
xchg
xor
jle
sub
rcll
jg
fisttpll
jae
adc
fs
xor
nop
pop
sub
mulb
movsl
in
dec
sbb
iret
dec
mov
jbe
fs
test
inc
and
in
cmp
test
mov
sub
xchg
pop
mov
cld
jg
rcll
mov
push
icebp
gs
stos
in
jno
aaa
sbb
fidivl
jnp
nop
lret
mov
and
and
je
push
sub
sahf
add
pop
mov
stos
int3
dec
xchg
mov
inc
inc
fs
jl
mov
es
fsubrs
pop
in
mov
aas
add
xor
nop
imul
call
mov
mov
mov
mov
mov
testl
cmpsb
adc
test
shrb
and
scas
in
cmpsb
std
aad
xchg
dec
ret
mov
mov
rcr
jb
rorb
push
ret
movb
mov
push
lret
pop
out
repz
aaa
or
out
xchg
push
negb
xor
dec
test
xor
inc
jl
in
nop
gs
call
xor
dec
add
and
in
cmpsl
mov
pusha
and
sub
adc
lret
mov
pop
pusha
and
sub
cmpsb
aad
jae
mov
mov
pushl
stos
ljmp
lret
mov
xchg
jno
add
mov
inc
xor
pop
push
push
jo
jp
sbb
sub
add
inc
arpl
iret
mov
fwait
rcll
pop
mov
inc
jle
push
jmp
xchg
jle
pop
xlat
fs
data16
clc
sti
mov
js
push
push
cli
out
repz
mov
out
test
pusha
stc
and
pop
jl
sbb
hlt
test
std
lret
pushf
mov
sub
pop
xchg
sub
xchg
jg
lcall
arpl
add
in
leave
sbbl
outsb
push
in
push
cmc
scas
xor
addr16
pop
out
push
push
sbb
mov
movsb
fisttpl
xor
cmpsl
sub
xchg
sahf
jo
dec
sahf
fildl
sbb
dec
mov
icebp
add
idiv
in
pop
insl
sub
dec
pop
sbb
jns
push
fldt
jne
xchg
jo
cmp
arpl
stos
arpl
icebp
push
callw
cmp
lods
fst
mov
mov
iret
jecxz
movsl
sub
fwait
dec
int3
arpl
stos
mov
mov
fimull
xchg
loopne
sti
lock
lret
push
das
inc
fcmove
imul
adcl
rcr
popa
int
orl
repz
push
leave
mov
adc
scas
addr16
xchg
jl
movsb
xor
in
cltd
lahf
sbb
or
mov
jno
or
stc
cwtl
mov
fmulp
sub
in
lahf
adc
xor
pop
sbb
cmp
push
outsb
inc
adc
sbb
fwait
push
push
insb
mov
and
sub
or
pop
mov
push
outsb
fnstenv
lock
mov
mov
push
icebp
mov
adc
je
cltd
movsl
mulb
gs
les
cmpsb
pop
ljmp
pop
test
outsl
mov
mov
sub
adc
test
out
or
add
mov
xchg
ss
outsb
out
sub
cli
and
inc
cs
adc
push
mov
push
mov
mov
cld
mov
inc
faddl
xlat
cmc
adc
mov
cmc
stc
stos
fcmovbe
xchg
cld
xchg
jbe
addr16
cli
insl
testl
fisubrl
icebp
sub
enter
sub
push
xchg
jns
out
xor
sbb
mov
jle
mov
cmc
push
sahf
ficomps
xor
dec
inc
clc
fisubs
mov
adc
xor
lahf
std
mov
or
or
jge
xchg
xor
push
dec
jae
fwait
js
aam
sub
pushf
push
cwtl
call
outsb
rorl
cld
push
mov
scas
xchg
pop
pushf
fisubrl
mov
mov
imul
adc
bound
hlt
push
pushf
cmp
sbb
xor
outsl
mov
sbb
xchg
fisubrs
int
movsl
inc
movsb
test
inc
mov
or
daa
xor
int
mov
lret
and
ret
dec
lock
push
xchg
inc
push
loop
jp
add
and
cs
xor
pusha
inc
or
inc
clc
setns
movsl
push
adc
push
out
dec
cld
mov
imul
dec
pop
push
cli
xchg
pop
push
in
lea
and
bound
jo
popa
jl
cmc
xorl
rolb
shr
mov
cwtl
add
fcoml
and
xadd
popf
adc
xor
dec
call
inc
adc
mov
mov
add
dec
push
mov
fistpl
das
xchg
cmpsl
jg
out
ret
jl
mul
aaa
popa
cmp
xchg
push
gs
cmpsl
xchg
push
mov
or
and
stos
inc
push
add
push
inc
fidivrl
rclb
sub
push
pop
enter
shl
pop
xor
imulb
addr16
stos
aaa
fs
pop
testl
mov
pop
sub
push
rolb
and
mov
pop
adc
or
mov
shll
mov
popf
mov
dec
or
jp
push
imul
cmp
icebp
jno
inc
fists
xchg
xchg
mov
inc
out
push
inc
int3
scas
add
lods
scas
fisttpl
mov
mov
sbb
mov
add
shll
pop
mov
insl
adc
scas
push
mov
mov
loopne
xor
mov
pop
out
or
xchg
or
test
jbe
mov
add
mov
bound
int3
jmp
imulb
movsl
lock
js
sub
xor
mov
ret
jne
mov
testl
or
es
lret
mov
fcomi
sbb
shlb
push
rcll
and
push
cli
pop
add
rcrb
scas
jno
and
mov
call
push
add
adc
pop
test
fiaddl
jg
fcompl
fsts
xor
inc
aaa
sub
gs
push
mov
idivl
pop
fistps
jmp
lret
mov
rolb
addr16
popa
nop
jecxz
and
outsl
in
dec
xor
mov
popa
add
and
push
repz
cmpsl
lahf
rclb
xchg
test
orl
test
and
inc
ficoml
movsl
shlb
push
mov
andl
lcall
flds
dec
data16
outsb
inc
push
sbb
sub
sahf
ret
insb
fs
subl
stos
sub
in
add
stos
push
sub
pop
push
dec
push
aaa
fstpt
sbb
or
stc
pop
movsb
ss
or
rclb
movsl
cld
cld
stos
push
xchg
in
mov
pusha
divb
add
shrl
xlat
pop
mov
mov
xchg
mov
loopne
sahf
lock
mov
cmp
adc
adcl
in
int3
stc
das
pop
mulb
mov
sub
sbb
xor
inc
xor
cmp
jb
sub
arpl
scas
mov
push
mov
in
xchg
xor
pop
add
cmp
mov
sbb
or
stc
pop
sbb
mov
xor
jmp
dec
andl
insb
imul
sbb
push
icebp
aas
das
pop
ret
leave
aam
sub
push
lahf
inc
cli
fdivp
cmp
cmp
xor
dec
xor
ret
ss
adc
scas
mov
movsl
addr16
fwait
outsb
jae
daa
lret
cli
add
mov
jbe
jg
jns
sbb
notl
call
shlb
bound
mov
fistps
scas
movb
cmp
push
sahf
fldenv
jmp
and
out
push
sbb
pushf
aas
call
es
jmp
icebp
into
mov
aad
out
xchg
sub
popa
outsb
mov
xor
xor
inc
fists
sbb
fwait
lock
es
imul
sahf
int
mov
in
popf
fsubrl
adc
les
call
sub
lock
sbb
cmpsl
bound
shrl
das
in
adc
in
inc
inc
das
ret
out
adc
jo
sbb
xor
pop
mov
lcall
sbb
push
aam
sarb
repz
inc
cmp
ss
mov
push
ja
ja
or
push
xchg
iret
mov
insl
pop
sub
mov
mov
repnz
out
jg
movl
push
rcrl
shl
cmc
shlw
sbbb
andb
add
test
add
cmpb
mov
hlt
dec
aaa
sahf
and
into
mov
test
out
insb
test
es
pop
mov
mov
scas
jne
into
add
mov
mov
out
pop
or
mov
and
and
jl
adc
imul
xchg
aaa
aas
pop
test
sub
shrl
mov
cwtl
mov
push
faddl
pushl
mov
div
and
dec
inc
jae
xchg
adc
mov
lahf
add
int
mov
xchg
shll
data16
and
ljmp
std
cmp
pop
xor
faddl
and
pop
imul
cli
mov
jmp
fs
jno
fdivr
cmp
mov
stos
xor
or
xchg
sbb
dec
inc
push
xchg
cmp
xor
xor
mov
scas
loopne
or
pop
enter
mov
xor
mov
daa
daa
fdivr
lods
rcll
pop
mov
ret
push
push
idivb
cmp
jmp
mov
cld
nop
dec
int3
mov
push
mov
negb
xor
and
xchg
repnz
mov
fldl
cld
mov
xchg
lods
push
push
sub
jecxz
shll
mov
out
pop
inc
pusha
add
inc
mov
ss
das
pop
mov
push
jno
hlt
sub
jmp
cmpsl
insb
test
cmpsl
pop
push
es
jp
bound
adc
call
mov
or
mov
mov
test
testb
xchg
sbb
lds
out
je
lea
arpl
sub
or
cmp
outsb
sahf
lds
cli
mov
sbb
adc
jne
push
xor
dec
insb
out
stos
test
cmp
add
jno
in
aas
xchg
es
rcrl
test
adc
scas
js
pop
ss
xorl
jbe
stos
sbb
jl
sbb
or
ljmp
faddl
loopne
idivl
mov
xor
push
ret
push
cmp
mov
adc
add
inc
pop
in
push
jbe
add
fdivs
sarl
mov
aad
lods
mov
jle
mov
pusha
imul
or
repnz
sub
adc
jg
pusha
sti
push
xor
imull
pushf
xchg
and
outsb
lret
pop
test
mov
jmp
lods
mov
sbb
sarb
add
clc
xchg
or
testl
je
jmp
xor
dec
stos
fldenv
ficoml
sarb
push
in
outsb
enter
pop
dec
loopne
jg
adc
sahf
sti
clc
ret
adc
and
pop
or
sub
jno
popf
ret
xchg
mov
inc
mov
imulb
sub
lret
pop
mov
cmc
mov
iret
adc
or
mov
ss
pop
adc
ret
imul
jae
xor
mov
lock
push
outsb
dec
xchg
insb
sbb
and
add
je
cmp
out
test
pop
test
repz
sbb
popf
fildll
xlat
test
ss
std
inc
sub
cmpsl
dec
ret
xchg
movsb
jno
add
insl
and
pop
rorl
adc
or
mov
sar
data16
divl
cmp
call
xor
add
mov
and
mov
jae
mov
add
mov
xor
call
out
adc
inc
dec
mov
mov
mov
inc
xchg
mov
adc
xor
mov
fwait
rclb
push
fldl
stos
gs
add
fsubrl
pop
pop
push
sub
push
sbb
imul
test
mov
mov
pop
fiaddl
std
int
bound
add
in
lcall
aaa
bound
aam
in
xor
aaa
dec
roll
mov
nop
call
lcall
ss
mov
xor
jno
mov
fs
adc
pop
xor
mov
cmp
jp
sti
jns
sbb
or
pop
lret
cs
jg
inc
xchg
push
out
orl
arpl
popf
xchg
jns
daa
shlb
jecxz
addb
xchg
aaa
jo
push
push
stos
pushf
push
mov
mov
mov
jmp
mov
idivl
mov
mov
xor
xchg
sarb
mov
loope
and
imul
jg
or
cwtl
jae
xchg
add
sahf
xor
addb
cli
in
mov
fsubr
scas
lret
cmp
icebp
scas
mov
lock
push
lods
ret
test
enter
in
out
adc
or
rol
jge
push
jg
pop
loopne
loope
insb
xor
cmp
jg
push
mov
lret
jno
movsl
jmp
lcall
movsl
xor
lods
insl
gs
mov
jecxz
pop
test
sub
mov
pop
insl
inc
ja
nop
mov
das
stc
mov
je
push
push
cmpl
imul
vmovdqu
jae
insb
push
ja
xchg
inc
xchg
cmpsb
mov
xor
es
or
adc
add
xor
rcr
lret
jnp
int3
or
js
movsl
fsubrs
mov
pop
iret
add
adc
jmp
mov
inc
out
mov
cmp
iret
in
adc
dec
jecxz
loop
popf
adc
inc
icebp
add
cmp
imul
mov
or
jp
and
mov
inc
ja
iret
test
jnp
pop
rorl
pop
mov
popa
jmp
pop
outsb
lods
push
out
dec
mov
mov
outsb
in
push
mov
ficompl
das
cld
dec
and
mov
es
jl
filds
call
mov
push
xchg
jns
push
sbb
jne
inc
dec
stos
mov
add
shrb
fwait
lock
add
jnp
mov
mov
or
sahf
jae
aaa
xchg
stos
pop
aas
pusha
xchg
aas
clc
adc
pop
loope
in
push
ljmp
aas
xchg
lcall
xchg
add
mov
dec
fnstcw
test
jnp
or
jae
loop
cmp
jae
mov
push
imul
jle
mov
sti
loope
mov
daa
rorb
and
cmp
mov
mov
add
stos
push
jge
dec
aas
cmpsb
add
push
mov
es
or
std
adc
repz
jae
das
neg
xchg
cli
fs
mov
inc
popa
or
sub
test
movsb
mov
lods
cmpsl
push
xchg
mov
ds
fucomp
dec
mov
bound
pop
jno
cmp
lret
sub
jno
in
and
shrl
mov
mov
push
sub
out
sti
push
sbb
mov
inc
add
imul
arpl
mov
test
stc
push
call
lret
stos
mov
lods
pusha
ret
loopne
mov
lods
movsb
loop
xchg
sub
add
into
mov
or
arpl
out
aad
mov
add
rcll
lods
inc
imul
popa
cmpsb
push
fwait
imulb
jb
mov
adc
imul
test
shll
mov
loope
outsl
xchg
frstor
filds
jb
xchg
cltd
add
sub
inc
add
jle
aad
adc
sub
or
aas
xchg
sub
push
in
ds
repnz
arpl
push
andl
test
enterw
js
stos
and
adc
andb
mov
pop
cmp
add
push
stos
loope
sbb
mov
popa
pop
fcoms
xchg
leave
mov
mov
mov
push
loop
jne
sbb
xchg
cmp
sbb
mov
inc
mov
repz
push
lcall
push
lds
push
and
push
sti
lods
cmp
and
lods
mov
pushf
mov
iret
shrb
inc
jo
ljmp
mov
sub
xchg
in
cwtl
add
and
out
mov
mov
push
je
pop
sbb
aad
jmp
insb
lret
sbb
add
fstps
insb
push
ficomps
pusha
inc
mov
cmc
scas
inc
lods
jecxz
in
mov
int
jmp
jg
lcall
xchg
repnz
shlb
pop
mov
stos
jmp
fstps
lcall
in
add
jge
sub
out
xchg
cs
dec
adc
jg
pop
into
add
jno
repz
aas
jle
fmuls
es
popf
adc
inc
xor
cli
lcall
xchg
in
adc
adc
sub
xor
sub
ss
add
cmp
pop
sub
out
sahf
jnp
pop
sbb
pop
in
jb
test
cmp
icebp
jle
and
data16
orl
popa
push
cld
rcrb
dec
pushf
cmp
arpl
sbb
lret
add
adc
xor
mov
sbb
mov
push
inc
stos
lahf
add
xor
cwtl
mulb
ljmp
mov
mov
loopne
dec
mov
xor
fldl
call
iret
and
aaa
mov
ret
push
cmp
cmp
dec
cld
es
mov
and
decb
sbb
fdivs
xchg
sti
pop
inc
and
cs
sbb
test
lret
js
push
std
movb
add
es
jg
loop
in
inc
in
in
mov
imul
ss
aam
mov
push
cltd
mov
scas
int
into
adc
inc
int3
fimull
mov
fbld
mov
insb
cmp
jnp
pop
add
inc
sub
mov
add
sub
arpl
mov
dec
mov
xchg
maxps
lods
xchg
mov
push
pop
add
cmp
push
fstl
push
pop
outsb
scas
sahf
pop
mov
in
pushf
fwait
sub
inc
adc
adc
jae
sbb
mov
fsincos
and
and
mov
cmp
js
dec
adc
jl
and
inc
inc
mov
movsb
rolb
xchg
in
pop
jne
repz
pop
mov
cmp
push
pop
out
add
jle
push
pop
pusha
aad
fnstenv
xchg
adc
in
out
sbb
out
test
mov
jne
outsl
into
rcr
outsb
push
push
or
cwtl
lock
push
jae
cmp
pop
dec
test
aad
mov
lock
loop
xor
push
fimull
es
add
iret
push
push
loopne
mov
push
and
les
mov
jbe
and
pop
cli
xor
clc
or
ficoms
sbb
movsl
out
sub
movsl
lods
rcr
mov
mov
mov
ret
cmpsl
pop
test
test
cli
or
pop
mov
cmpsl
out
inc
pusha
mov
push
filds
mov
or
pushf
adc
pusha
xlat
pop
mulb
test
xor
cmpsl
rcr
pop
imul
xchg
xchg
pop
xor
push
test
xor
loopne
cmp
aad
push
dec
cmp
cmp
cmp
jg
or
jb
cmp
mov
andb
fistl
sbb
imul
sub
shl
test
ret
and
rolb
add
stos
or
xchg
das
shl
mov
in
push
js
push
pop
std
lods
scas
in
imul
cli
xchg
and
jge
jle
and
aad
sub
fisubs
out
pusha
rclb
mov
loope
or
xchg
das
push
insb
shrl
adcb
xor
gs
gs
jle
stc
jne
lret
dec
andl
jge
lahf
xor
mov
outsb
pop
add
xor
ds
cmp
inc
mov
cltd
adc
scas
cld
icebp
sbb
dec
aam
sbb
leave
inc
les
jnp
cmpsl
pop
inc
push
sub
ja
jl
mov
pop
push
pop
push
enter
dec
jl
jnp
mov
and
pop
push
fidivl
clc
lahf
jbe
scas
or
jge
pop
mov
jl
vpsrld
or
xchg
jno
insl
xchg
incb
jl
rcrb
mov
daa
pusha
or
cmp
sub
sbb
pop
jnp
cmp
gs
or
push
test
loopne
test
je
aad
or
jno
inc
and
xchg
push
xchg
xchg
jne
cltd
lret
sub
aad
daa
dec
dec
repnz
call
push
adc
idivl
and
push
add
lret
stc
mov
or
fbld
xchg
push
lock
push
and
dec
push
insb
int
out
popf
pusha
clc
ret
outsl
inc
push
lcall
or
sbb
subb
pop
arpl
mov
sub
xchg
add
ret
popa
mov
mov
mov
push
xchg
ret
lret
push
test
sub
pop
pop
shrl
or
mov
out
add
mov
lahf
xchg
stc
cmpsb
enter
movsl
ret
push
test
test
lods
push
jne
je
push
andb
add
scas
sbb
sub
mov
aam
shl
mov
mov
stos
push
outsl
mov
sub
shll
rol
jle
int
mov
out
adc
mov
pextrw
mov
outsl
inc
dec
loop
cmp
scas
cmpl
jbe
jae
cmp
lock
scas
mov
xor
push
cmc
into
testb
add
push
dec
mov
cmp
dec
dec
sbb
xor
insl
push
xchg
std
out
outsb
adc
insb
push
rcr
iret
jnp
movsl
pop
sahf
aas
xor
outsl
imul
add
mov
cmpsb
popa
inc
lock
ret
inc
enter
sub
in
xor
ret
aas
sub
push
ljmp
sbb
adc
xchg
jne
cmp
movsb
xchg
fsubs
addr16
inc
lahf
sub
add
inc
jecxz
and
sbb
cmp
xchg
pop
inc
cmp
pop
insl
mov
mov
imul
ja
in
xchg
xchg
sub
dec
or
add
add
add
loopne
stc
lods
daa
dec
cwtl
shl
mov
ret
sbb
aam
filds
and
repnz
mov
daa
mov
sub
dec
shll
inc
test
sbb
xor
inc
fmull
push
pop
mov
push
push
inc
inc
xchg
test
insb
push
dec
lods
dec
mov
rorb
lret
adc
arpl
cltd
inc
or
cwtl
repz
add
cltd
xlat
std
stc
push
add
clc
sub
xchg
mov
xchg
lods
inc
fistl
stc
pop
push
sbb
loopne
pusha
jmp
mov
js
jecxz
std
inc
mov
cmc
mov
cwtl
loope
cmpsl
xchg
jecxz
mov
mov
xchg
out
xor
mov
jle
repnz
pop
test
adc
dec
jp
push
and
inc
data16
imul
repnz
or
out
push
xchg
jg
mov
jmp
lahf
mov
adc
xchg
sub
push
fcompl
jl
aaa
push
mov
fwait
dec
ss
roll
xchg
inc
rolb
lahf
scas
jae
clc
ja
movsl
ret
pop
xchg
mov
xchg
and
inc
adc
mov
arpl
and
pushf
vpslld
movaps
jmp
fimuls
jnp
sbb
into
sbb
scas
add
fistpll
sub
les
sbb
pusha
fistpll
xor
repz
mov
mov
call
xorb
insb
cmp
clc
pop
fs
imul
inc
gs
aad
push
insb
outsl
add
adc
jp
or
inc
test
shlb
bound
pop
pushf
repnz
stc
sahf
testb
imul
mov
movsl
mov
jnp
fwait
data16
in
pop
aaa
mov
and
sbb
mov
jg
mov
aad
das
or
clc
mov
das
mov
sub
or
enter
or
xchg
sbb
and
in
mov
adc
jo
nop
bound
pop
dec
dec
push
sbb
pop
mov
push
call
imul
movsb
pop
adc
dec
or
nop
ja
push
ret
pop
jp
fcompp
adc
lods
ret
jge
sti
cmp
sub
inc
pop
lcall
sbb
loope
dec
sub
mov
sahf
mov
sbb
test
mov
push
dec
cmp
outsl
inc
fidivrl
pop
ja
jg
lea
movsl
cmpb
clc
inc
xor
jne
push
hlt
jg
xchg
call
roll
loopne
xchg
icebp
dec
out
sbb
dec
shrb
pop
rcll
cmpl
shlb
ljmp
out
sarl
sub
push
push
sbb
jg
ljmp
add
sbb
xchg
stos
rorl
js
xor
mov
and
cmp
mov
je
pushf
jo
rclb
nop
push
jl
sub
mov
pop
sbb
dec
jmp
stc
push
mov
int3
push
xchg
sub
sub
add
aas
jle
or
push
mov
add
mov
push
sbb
pop
pop
mov
pop
mov
jle
sub
add
add
push
stos
sti
pop
sub
lock
addr16
adc
mov
lahf
push
cmp
pop
xchg
addr16
push
xchg
mov
rclb
mov
dec
les
lds
mov
scas
mov
or
sarb
out
lahf
jbe
push
sbb
inc
lods
mov
mov
mov
xor
lcall
sbbb
ret
xchg
sahf
inc
loope
sahf
out
mov
clc
mov
enter
aam
and
or
jmp
sbb
pushf
dec
sub
lcall
lods
aad
xchg
and
mov
jno
mov
aad
out
push
adc
fildll
lret
outsb
mov
nop
cld
cltd
repz
mov
mov
pop
mov
test
mov
decl
xlat
mov
xchg
test
push
push
jp
xor
and
dec
mov
outsl
xchg
jo
js
jo
sub
loop
stos
pop
inc
xor
add
inc
fnstcw
adcb
cli
xchg
shrl
sbbl
mov
pop
pusha
psrld
pop
out
js
or
cmp
xor
xchg
sbb
inc
fnstcw
roll
clc
mov
push
xchg
out
aam
imul
rol
and
adc
mov
out
xchg
jbe
fdivl
in
enter
loopne
insb
xchg
xor
test
sbb
les
cltd
lahf
dec
mov
xor
pop
adc
jge
pop
push
lods
and
std
dec
nop
jge
inc
mov
fmul
push
fidivl
ljmp
or
lret
and
insl
mov
or
mov
in
daa
lret
jbe
rcrl
pop
scas
push
inc
fs
cmp
mov
std
mov
mov
adc
js
cwtl
and
rcrb
sbb
add
mov
pushf
das
rep
or
adc
jbe
insb
aad
dec
mov
loope
jb
mov
pop
and
fxch
in
xor
nop
sti
xor
or
sub
inc
ret
test
pop
into
mov
addb
imul
loope
fisubrs
ret
repz
test
imul
push
sbb
xor
ret
pop
sbbl
test
lds
popf
sbb
popf
add
testl
mov
mov
add
roll
pop
xor
cmpsl
daa
out
mov
movsl
mov
arpl
outsl
inc
pop
pop
lret
inc
insl
shlb
pop
fildll
xchg
inc
adc
test
add
push
sub
sub
sub
adc
into
xchg
push
test
inc
push
mov
jnp
push
mov
adc
aas
or
mov
dec
adcb
mov
icebp
mov
int
dec
cli
xor
mov
pop
mov
xlat
arpl
mov
push
movsl
dec
arpl
les
xchg
mov
push
mov
out
ret
sub
add
rol
push
shll
adc
mov
pop
xor
aam
sbb
and
les
call
xchg
and
rcr
leave
push
add
sti
xchg
cmp
push
repnz
lods
mov
pop
pop
xchg
and
divl
cli
cmp
popf
or
in
dec
dec
mov
popa
int
xor
mov
and
jecxz
std
add
add
psubb
outsl
pushf
jbe
pop
pmullw
notl
subl
iret
nop
rorb
lahf
outsl
xor
xor
and
popf
add
and
adc
adc
lcall
incb
cs
push
or
fildll
jge
sub
fimuls
adc
push
call
sbb
pushf
jb
add
inc
jmp
mov
lret
cmpsl
das
out
daa
fs
int
and
sub
in
mov
sbb
cld
dec
std
jmp
jl
pop
cmp
jbe
dec
popf
xchg
dec
mov
repz
inc
mov
outsl
push
mov
test
mov
mov
cs
mov
push
pop
movsb
lods
lret
mull
in
cmp
mov
pusha
lcall
pop
jle
out
daa
fcmovnu
sbb
into
outsb
push
dec
adcl
fiadds
push
mov
cld
xchg
add
lods
add
xchg
push
popf
icebp
and
push
ret
ficompl
add
pop
adc
push
fdivrl
xor
test
lcall
jle
aaa
inc
mov
fisubs
sbb
add
cmp
cmpsb
addr16
mov
outsl
ret
sbb
imul
inc
popf
movsl
xor
ljmp
inc
fs
clc
dec
rcrb
jnp
fwait
hlt
xor
xchg
sub
and
fstpl
push
jno
push
and
rcr
insl
pop
outsl
mov
sub
and
inc
js
push
xlat
push
sarb
clc
repz
mov
cwtl
pop
mulb
stc
clc
out
push
jmp
pop
out
fcmovbe
fldcw
mov
gs
test
and
iret
xchg
sbb
xchg
sbb
fidivl
sub
insl
push
test
sub
movsl
leave
sti
lret
push
aad
mov
rolb
xor
dec
sbb
js
pop
clc
pop
push
push
push
xchg
mov
les
jnp
mov
push
push
mov
lods
dec
dec
inc
and
dec
xchg
push
sbb
xchg
inc
inc
add
fnsave
xchg
repz
jns
jns
pop
mov
mov
das
lods
aas
add
pop
icebp
loope
cmp
mov
aam
inc
mov
sbbb
push
fsubl
insl
sti
jl
mov
dec
xorb
adc
nop
mov
push
mov
insb
jle
outsl
mov
xchg
pop
mov
in
std
mov
inc
mov
fwait
repnz
mov
push
enter
add
aaa
dec
ja
pop
jnp
rorl
and
je
js
xchg
adc
sbbl
dec
int3
push
or
push
push
xchg
sbb
cmp
lcall
xor
xor
xchg
addr16
lcall
fmulp
mov
xchg
mov
hlt
lahf
insl
mov
cmpsl
jae
ss
sahf
ret
pop
bound
mov
es
jmp
ljmp
scas
xor
lcall
xor
xor
cs
mov
lods
cmpsl
rorl
inc
dec
imul
insl
sahf
inc
adc
imul
add
inc
sub
sub
bswap
push
lea
in
div
setbe
hlt
push
dec
pop
shl
lods
inc
test
fwait
outsb
jmp
add
jno
mov
mov
stc
mov
add
cmp
scas
sub
cmp
push
gs
add
mov
jl
int
pop
cmpsl
jmp
adc
test
xor
dec
sub
mov
push
addb
sbb
pop
jnp
pop
fs
add
int
cmp
push
add
mov
dec
lret
xchg
daa
les
sahf
dec
and
repz
vpcmpeqd
popf
sbb
out
dec
and
cli
pop
mov
ja
push
lahf
dec
sub
pop
xor
pushl
cli
mov
dec
lds
inc
lcall
and
stc
or
mov
mov
push
pop
call
push
imul
mov
repnz
testb
ja
mov
andb
xchg
adc
jns
cmp
xorb
pop
fldcw
stos
fnstcw
sbb
jae
pop
jno
push
cmp
popa
mov
dec
xchg
shrl
xor
add
pop
test
lret
mov
imul
xlat
out
adc
jg
adc
movsb
dec
pop
dec
mov
clc
push
push
mov
dec
sbb
mov
cli
dec
dec
repz
cmp
addr16
in
imul
ds
fisttps
xlat
pop
add
push
xor
sar
js
pop
or
test
mov
dec
xchg
lret
dec
rcrl
iret
inc
jle
push
xchg
cmc
imul
je
dec
scas
or
mov
lock
sti
cmp
lcall
xlat
repnz
xor
xor
aam
ljmp
aam
enter
fistl
sbb
pop
mov
dec
enter
dec
mov
and
mov
in
test
rolb
push
or
xor
test
decb
pop
push
test
pop
rorb
orb
push
cmp
push
push
jmp
push
emms
in
out
and
call
shrl
leave
orb
fwait
int
cmc
daa
mov
mov
mov
sub
and
mov
and
aas
mov
sbb
add
ss
sbb
test
sub
loop
out
fwait
sbb
mov
inc
imul
and
and
call
stc
mov
and
adc
push
outsl
das
lahf
pushf
or
mov
in
sbb
fdivr
and
jp
loopne
mov
pusha
mov
push
mov
arpl
out
mov
addb
rcll
pop
jo
mov
cmp
ret
or
fildl
jne
jge
hlt
loope
mov
sub
mov
js
xchg
ljmp
aaa
scas
lret
cltd
xor
push
adc
cmp
test
sbb
outsl
popa
mov
fidivrl
les
pop
inc
cli
cwtl
dec
lret
movsb
scas
xor
add
stos
in
cmp
lahf
mov
sbb
jns
ficoms
divb
ss
ljmp
mov
push
mov
jnp
shlb
mov
leave
push
int3
xchg
cld
sub
cmp
mov
shrb
fisubs
or
xor
gs
dec
jge
pop
pop
inc
adc
lret
je
out
and
cmc
cs
fcmove
nop
push
dec
shl
adc
scas
sbb
fsubrs
jns
cmp
mov
mov
xchg
xchg
xchg
nop
jg
aad
sub
sub
adc
fwait
addr16
repnz
fmuls
cs
out
call
sbb
ret
mov
and
data16
pop
divb
clc
pop
and
cmp
imul
jge
mov
ljmp
xchg
into
sahf
cmp
mov
or
inc
inc
cli
arpl
pop
mov
push
jecxz
mov
and
jo
add
andb
jg
xchg
xor
int3
mov
insl
xchg
imul
and
imul
stc
mov
aas
cld
mull
cld
pushf
sbb
lret
arpl
xchg
ret
xor
xorl
aad
xor
cmp
cmpsb
dec
add
add
cmp
or
dec
push
ret
neg
es
dec
xchg
and
pop
loopne
shl
lock
je
mov
and
cmc
xchg
stos
mov
xchg
dec
fnstsw
add
push
aaa
mov
dec
adc
stc
mov
ret
xlat
fcmovnbe
inc
mov
push
andb
sub
ret
add
inc
cmp
cli
loope
dec
pop
cmp
adc
orl
pop
jbe
aam
ljmp
mov
popf
cmp
jnp
filds
jb
jle
push
adc
mov
movsb
dec
push
js
movsb
push
pop
in
cmp
fbld
jge
xchg
dec
mov
or
dec
nop
mov
cld
mov
addr16
inc
mov
mov
dec
adc
mov
add
fwait
andb
bound
dec
or
and
mov
dec
mov
pop
je
xchg
xchg
pop
out
add
hlt
test
pop
aas
outsl
ljmp
ds
or
shll
enter
clc
push
test
mov
mov
xor
push
cmpsb
add
mov
pop
dec
shr
push
xchg
xchg
and
addl
popa
sbb
sub
iret
out
sahf
rorl
dec
and
adc
pop
out
sub
jns
pushf
imul
add
mov
xchg
ret
jo
pop
push
mov
xorl
das
mov
or
sti
clc
mov
cmpsl
cmp
mov
imul
in
call
xchg
pop
stos
sbb
mov
xor
out
popa
cltd
fsubrp
and
lds
loop
cli
into
jb
adc
rcrb
pop
pop
xchg
push
outsl
inc
cmp
ljmp
aaa
test
cs
mov
xchg
mov
pop
xorb
fsubs
fstps
mov
iret
icebp
not
rcrb
mov
jle
adc
into
sub
mov
lret
push
in
mov
cmp
cmpsl
loop
dec
nop
mulb
xchg
push
adc
aad
and
ljmp
adc
dec
aam
push
ja
xor
mov
jo
ss
in
mov
jo
pop
pushl
mov
dec
pop
xor
je
inc
stos
mov
jmp
sub
je
addr16
mov
cwtl
je
gs
movsb
pop
cmp
mov
adc
je
pop
jbe
pop
inc
popa
outsb
outsl
orl
and
gs
and
addr16
lret
mov
pop
mov
iret
sub
jp
xacquire
dec
push
fwait
gs
add
add
mov
out
lcall
xor
or
sub
or
jb
icebp
sub
dec
and
jecxz
mov
xchg
push
pop
ficoms
mov
leave
dec
xchg
and
les
and
icebp
je
sbb
int3
sbb
pop
mov
mov
fmull
shl
xchg
out
mov
cmp
mov
iret
mov
push
push
sub
or
adc
xor
mov
pop
fsubp
sbb
in
es
into
adc
mov
push
es
and
mov
insb
cmp
into
and
fmul
sti
add
xchg
les
sub
bound
dec
jmp
mov
rcl
dec
pop
in
nop
or
dec
shufps
bound
push
and
clc
int
xlat
xor
aaa
sbb
aaa
pop
xchg
jne
pop
mov
fsubrp
ficompl
test
mov
int
pop
mov
test
mov
loope
clc
mov
inc
sysret
sub
adc
xor
rcrb
lcall
mov
lret
loop
fists
cli
jb
sbb
loope
cli
roll
ret
das
mov
rcr
out
sub
lods
and
call
orl
insb
sub
xchg
ss
imulb
cmpsb
adc
and
or
icebp
xchg
les
push
sbb
ds
cld
fcmovbe
fisttpl
cmp
sbb
add
loop
xchg
adc
notb
movsb
push
jecxz
repz
into
std
aam
and
outsl
adc
stos
nop
pop
dec
and
pop
sahf
popf
aam
mov
cmc
xchg
add
jne
inc
dec
adc
push
negl
xor
mov
mov
dec
call
out
in
das
enter
bound
fistpl
adc
call
stc
push
mov
rcll
push
pop
lods
outsl
xchg
add
mov
addr16
or
push
dec
in
adc
lcall
in
pop
jnp
sbb
jle
xor
aam
add
or
fisubrl
in
xlat
mov
cmp
ja
mov
mov
lahf
push
pop
rcrl
cmp
push
lea
cmp
sahf
cmpb
leave
jle
dec
sbb
shl
xor
fcompl
sub
cmpsl
dec
sti
test
xlat
inc
mul
pop
adc
in
pusha
andb
dec
mov
cmp
call
push
mov
hlt
lret
dec
mov
xchg
sahf
adc
sub
inc
loopne
or
sbb
cmp
jo
sub
mov
xchg
xchg
mov
lcall
icebp
daa
bound
or
rorl
sarl
pop
jle
cltd
lds
jmp
push
div
push
inc
jp
rcr
mov
aad
mov
mov
test
and
jno
nop
std
mov
cld
loopne
fcmovnb
or
lock
jae
es
mov
mov
das
in
push
dec
cmp
push
aaa
sbb
jp
lea
and
ljmp
push
leave
ja
scas
cmc
lock
xchg
ret
popa
mov
aad
in
push
push
mov
mov
arpl
mov
in
ror
cs
gs
cwtl
mov
push
sub
nop
dec
add
sbb
test
lds
jg
push
test
cwtl
mov
dec
out
lock
and
adc
sbb
mov
inc
push
add
mov
inc
lahf
fdivl
imul
xchg
xor
cmc
push
xlat
dec
out
mov
sti
cmp
cwtl
cmp
popf
xchg
mov
adc
shll
in
scas
dec
iret
sbbl
gs
lds
fsubrs
adc
dec
andb
movsl
imul
xchg
daa
or
sub
fstpl
mov
out
pop
fcoms
out
jle
sbb
out
in
fidivl
dec
ret
test
or
inc
cmp
adc
push
dec
cmp
mov
orb
enter
inc
push
test
pusha
ja
cmp
leave
out
mov
nop
ret
xchg
call
mov
pop
rol
enter
mov
sahf
fidivrl
xlat
pop
pop
mov
dec
xor
sbb
enter
dec
fimull
lret
jg
xchg
mov
lahf
in
or
jp
pushf
std
jae
rcrl
jl
pop
fwait
aaa
dec
xor
fcmove
movsl
imul
xor
pop
adc
lock
xchg
outsl
icebp
sub
sub
pop
inc
jbe
sub
out
adc
dec
add
roll
int3
inc
cmp
loope
loopne
and
xor
mov
xor
loop
out
add
fbstp
sub
data16
rcll
mov
adc
orb
test
sub
movb
in
insb
mov
ja
std
out
add
jmp
xchg
pop
shl
inc
pop
push
movsb
loop
cmp
push
jno
jne
dec
out
iret
cli
mov
jecxz
cmpsb
mov
filds
bound
jbe
popa
dec
jp
inc
sbb
mov
or
jbe
cmp
lods
idivb
repz
push
mov
loope
rcrb
pop
cmp
lock
or
cmp
les
push
xor
and
adc
ror
fidivl
mov
imul
insl
adc
dec
sbb
cmpsb
in
aam
testl
out
push
push
stc
mov
bound
xor
or
repnz
lds
rorb
into
lcall
repz
lret
push
xor
arpl
mov
add
xchg
jb
sti
shlb
lret
xchg
inc
int
jne
in
test
mov
in
mov
sbb
test
cmp
stos
ljmp
popf
rol
xorb
imul
lds
imul
subl
push
out
pop
repz
ss
push
inc
iret
fs
sbb
mov
xor
jp
out
and
add
pop
out
adc
xchg
fwait
lcall
pop
push
or
mov
sbb
jge
gs
fwait
or
leave
xor
test
sbb
stc
xchg
push
adc
lock
in
pop
fdivrs
jb
test
inc
mov
add
jecxz
stos
aad
ljmp
into
insl
add
or
shl
mov
pop
loope
jle
inc
inc
push
pop
pop
lds
lock
in
cmpsb
mov
pushf
mov
push
inc
cmp
and
das
inc
jp
mov
test
xor
addr16
fidivs
dec
addps
lret
cmp
pushf
push
inc
rcrl
xor
jge
or
add
push
or
add
inc
insl
pop
add
mov
lods
call
addr16
lods
and
cltd
mov
xchg
leave
jecxz
xchg
neg
test
mov
cmpsl
movsb
add
or
fadd
push
push
pop
iret
scas
mov
inc
dec
testb
pop
cmp
adc
pusha
pushf
push
aam
out
lock
out
popf
or
xor
outsb
ds
cwtl
push
or
in
adc
adc
in
cmp
stos
mov
fndisi(8087
dec
or
lods
cltd
cmp
lret
push
inc
call
bound
ret
mov
popa
jp
sub
popa
outsb
mov
das
xchg
add
ss
mov
sub
adc
and
dec
test
cmpb
xor
jne
mov
insb
inc
cmp
fsts
loopne
or
mov
mov
ret
xchg
nop
xor
inc
mov
jmp
cli
sbb
shlb
bound
cli
pushl
jge
ss
mov
push
gs
jae
inc
xchg
and
das
mov
fisttpl
ret
lds
cmc
sbb
jno
int3
data16
test
adc
mov
fwait
les
jmp
popl
ja
xor
lcall
jmp
int
cmp
mov
xlat
imul
shlb
dec
jbe
cmp
out
test
sub
lcall
and
or
mull
mov
jns
stos
cmp
sbbb
mov
ja
movl
ds
in
iret
jo
lcall
sbb
mov
adc
ffreep
adc
inc
cmpsl
aad
push
cmp
add
outsl
or
out
dec
sub
pop
dec
lret
pusha
lea
xchg
aad
imul
rorb
arpl
push
xchg
negb
sub
xor
lock
cli
ss
nop
pop
lahf
rorl
out
out
int3
mov
mov
clc
in
dec
lock
push
mov
mov
sahf
outsb
adc
lods
pop
clc
and
test
adc
add
mov
mov
and
mov
rcrl
aas
inc
sub
jmp
fmuls
orl
insb
mov
cmp
sub
push
mov
rol
int
pop
leave
cmp
das
mov
test
in
sub
xor
addr16
xor
mov
xor
lahf
in
sub
jecxz
jmp
sar
jb
ret
cld
jecxz
push
int3
aam
sub
outsb
cld
in
loopne
aaa
add
ror
sti
leave
lods
or
aad
std
js
fucomp
mov
pop
testb
add
add
int3
and
lret
out
push
mov
adc
hlt
or
pop
jg
push
sub
mov
bound
inc
push
roll
outsb
dec
and
pop
push
jbe
faddl
sbb
sbb
xchg
ret
arpl
js
push
rclb
xchg
pusha
sbb
es
mov
jne
xchg
mov
xchg
jbe
pop
mov
add
push
arpl
std
sbb
jo
sbb
pop
sbb
add
es
cmp
or
and
mov
push
pop
and
rorl
push
inc
mov
in
lds
push
jnp
mov
jecxz
out
mov
test
cmp
xchg
inc
hlt
adcb
mov
dec
shrl
add
rorb
inc
fldenv
mov
mov
cmp
jl
movsl
and
mov
movsl
and
cmp
add
imul
adc
push
ss
pop
xor
lock
sbb
mov
test
imul
into
frstor
jno
pop
push
xchg
outsb
into
rclb
out
dec
ljmp
fstpt
dec
clc
jae
jg
out
test
pop
shll
pop
jne
pop
mov
and
push
inc
xchg
and
mov
femms
xchg
mull
xchg
xchg
test
lods
mov
and
push
cmp
dec
call
adc
mov
mov
es
test
add
fldenv
fnsave
sub
test
mov
popf
sahf
mov
xchg
loopne
ror
adc
mov
cmovb
aas
cwtl
lds
iret
call
stc
pop
fwait
jnp
push
dec
inc
sub
pop
fadds
dec
cmp
jle
sbb
sbb
es
inc
out
inc
loope
rorl
cmp
inc
inc
xor
mov
aam
xchg
jl
pop
fsubs
mov
and
xor
inc
out
jno
mov
ss
jo
stos
push
cmp
push
xchg
test
ss
or
fisubs
pushf
pushw
dec
mov
imul
scas
push
push
pop
es
out
gs
xor
mov
iret
sub
in
sti
in
enter
divl
mov
xchg
and
and
sti
leave
mov
mov
xchg
fisttpll
gs
add
pop
test
sbb
dec
idivb
mov
sub
mov
sub
dec
in
ret
push
pop
pop
dec
nop
or
pop
test
ljmp
insl
stos
jl
mov
aas
aaa
inc
nop
push
sub
shlb
cmpsl
fmul
fcmove
cmc
mov
lahf
cmp
pop
in
les
and
push
rorl
jbe
daa
dec
lret
orb
jmp
and
jmp
or
pop
xchg
and
fwait
fwait
test
or
mov
push
sub
ss
mov
lods
jns
xchg
cmpsb
mov
and
sub
add
into
js
sub
lea
jno
push
fcomip
push
lods
inc
lods
xchg
lods
dec
cld
dec
add
int
inc
mov
sbb
xchg
xor
inc
cwtl
scas
mov
pop
sahf
inc
enter
test
add
inc
sbb
lret
movsb
cs
cmp
jmp
adc
adc
xchg
ja
jg
fdivrp
xlat
imul
es
rolb
jl
xchg
into
repz
pop
aam
stos
sbb
jo
jo
aam
xchg
and
aaa
sbb
xchg
add
sub
leave
adc
lods
int3
pop
mov
mov
cmpsl
sbb
in
sub
jp
and
ret
sbb
dec
sti
pusha
bound
adc
scas
add
mov
repnz
mov
rorl
sbbb
and
test
addl
mov
in
lret
jp
clc
xchg
ss
mov
xchg
cwtl
sbb
loope
jnp
add
lock
icebp
pop
test
jecxz
push
enter
mov
idivb
pop
push
int
flds
repz
xor
mov
cmp
mov
mov
aam
dec
inc
in
cmpsb
stc
inc
subl
pop
inc
dec
fcomi
add
or
shr
ffree
dec
dec
adc
jno
fdivr
std
mov
mov
jecxz
pop
popl
push
add
sbbb
insl
pop
inc
mov
pop
push
ss
insb
push
push
js
imul
in
push
js
iret
andb
dec
and
pusha
imul
fucom
addr16
into
icebp
mov
jmp
add
or
loopne
js
or
sarb
mov
or
mov
data16
sti
mov
add
push
push
mov
mov
sbb
test
rcl
mov
add
jo
int3
push
dec
sub
and
testb
ljmp
mov
sbb
dec
fcmovb
inc
push
push
dec
mov
pop
fisubrl
pushf
ret
push
xchg
jo
xchg
sbbl
loope
mov
xchg
sbb
lods
add
lcall
or
sub
mov
push
iret
mov
push
enter
hlt
mov
xor
out
rorl
out
push
lods
push
pop
ret
mov
frstor
xchg
cwtl
push
enter
and
pop
pop
in
jne
cltd
inc
je
lret
jb
icebp
dec
rcrl
jnp
andl
dec
xor
xchg
inc
mov
aas
jmp
jmp
flds
jns
add
aam
adc
cltd
sub
jnp
mov
or
mov
fwait
sub
cmp
sbb
adc
or
add
xchg
addr16
repnz
xchg
subb
bound
out
cmp
ds
inc
pop
and
push
cmp
gs
inc
jp
and
adc
dec
pop
fldenv
cmp
cs
pop
popa
test
stos
js
lea
adcl
xorb
mov
jo
jge
ret
das
sbb
outsb
imul
addr16
outsl
lcall
inc
sbb
sub
mov
outsb
adcl
fucomi
divb
mov
cmp
add
in
mov
ret
jp
addr16
call
push
adcl
loop
fwait
push
call
aaa
mov
data16
pop
push
sbb
jmp
in
or
and
sub
mov
mov
push
mov
sti
arpl
frstor
pushf
sbb
push
sbb
add
cwtl
les
lcall
test
pop
sahf
cwtl
std
mov
leave
aaa
jns
adc
fadds
sub
test
das
dec
pusha
les
add
inc
out
sbb
xchg
lahf
cmp
iret
pop
ss
or
sub
cmpsb
mov
repz
pop
test
je
inc
loope
add
pop
mov
xchg
and
inc
xchg
shl
xchg
movsb
into
sti
mov
dec
int3
mov
daa
and
out
idivl
jno
sub
mov
cli
aad
xor
shlb
mov
rol
fcompp
cltd
testb
pushf
in
dec
cmp
and
mov
shrb
or
out
jae
outsl
loope
test
addr16
outsl
rcrb
test
mov
scas
mov
push
inc
rolb
dec
adc
cwtl
and
dec
add
in
sub
loopne
push
int3
inc
dec
pushf
mov
inc
sbb
fmulp
push
lcall
inc
mov
fwait
fs
sub
jge
incb
mov
mov
aam
das
rorl
cwtl
jmp
dec
movb
pop
lock
or
outsl
lock
fiadds
call
pop
aas
or
movsl
stc
jmp
dec
push
lods
adc
sbb
fs
popa
mov
push
and
xor
mov
std
lcall
xor
mov
push
jmp
push
cwtl
inc
repz
push
stos
add
fadds
lret
jmp
in
fbstp
lods
hlt
dec
scas
sub
inc
jne
or
xchg
dec
dec
aas
std
adc
jns
ja
and
jo
dec
aaa
mov
add
out
ret
mov
data16
jo
jns
add
movsl
mov
or
inc
std
mov
dec
mov
mov
repnz
pop
mov
pop
std
cmp
push
jno
mov
out
sub
test
cmc
lds
pop
push
mov
fcompl
pop
stos
jg
mov
sub
mov
test
adc
faddl
ret
and
rorb
out
int
add
in
mov
lds
les
out
mov
shrl
dec
jl
inc
xchg
into
or
ret
inc
and
adc
in
rcrb
pop
test
jae
out
adc
jl
inc
dec
adc
mov
jne
xchg
jp
stos
and
test
pusha
pop
jle
sbb
push
cmp
push
jg
fwait
mov
pop
iret
dec
cltd
dec
les
jb
mov
lcall
inc
inc
dec
pusha
arpl
fs
adcb
addb
hlt
add
fidivs
mov
jmp
pop
movsb
xchg
dec
std
ljmp
jmp
push
imul
stc
xor
fdecstp
pop
xor
push
ds
mov
jecxz
sub
and
sarl
hlt
arpl
mov
jmp
movsb
and
and
nop
mov
leave
and
insl
or
jl
scas
ss
hlt
push
in
outsl
cld
push
mov
cwtl
insb
xor
push
hlt
sahf
jge
scas
jae
push
int3
mov
pop
sub
jo
dec
les
ret
inc
pop
mov
lcall
xchg
xor
into
movsl
aam
mov
mov
cmc
dec
push
out
cmp
sub
shrb
mov
mov
mov
mov
pop
sbb
les
inc
mov
faddl
mov
push
cmc
mov
dec
add
pop
jnp
stos
sbb
ja
int
out
sub
dec
ret
mov
mov
lcall
inc
pop
shll
cmp
mov
inc
jl,pt
movsl
sbb
mov
mov
mov
mov
hlt
jle
filds
das
stos
cmp
mov
mov
scas
or
scas
add
cli
jl
dec
test
sub
pusha
push
js
out
cli
cld
int3
stc
mov
pop
inc
inc
push
adc
lock
out
call
std
and
cmpsb
mov
rcrb
dec
push
jle
pop
cmp
pusha
sti
push
repnz
inc
fwait
mov
mov
addr16
ret
out
add
pushf
mov
jns
popf
jnp
lea
mov
insb
pop
jmp
adc
jge
lods
insl
mov
in
sbb
sti
out
jb
xchg
mov
mov
jbe
in
test
mov
cwtl
mov
xor
leave
mov
add
stos
add
aas
jae
push
pop
loopne
sarb
mov
fstpl
in
xchg
mov
div
pop
and
push
stos
push
je
sub
rcl
cwtl
cwtl
pushf
xchg
inc
out
push
repz
add
inc
movsb
push
add
cmp
jecxz
movsl
std
das
sbb
cmpsl
sbb
mov
popf
nop
jle
jnp
dec
sbb
sarb
cmp
shrb
jo
lcall
sub
jg
sbb
fldt
or
fbld
out
in
mov
and
cmp
lahf
in
pop
and
cs
xchg
mov
add
cmc
xchg
jb
dec
push
add
iret
cmp
cmp
jl
imul
jns
out
dec
mov
and
xchg
fnstenv
fmul
mov
int3
mull
cmp
andl
sub
stc
mov
jge
sub
idivl
push
leave
test
inc
ljmp
xchg
jg
movsb
and
jno
jae
cs
repnz
sbb
mov
fcoml
inc
and
arpl
cmp
mov
and
mov
stos
movsb
dec
lea
mov
fwait
sbb
push
loop
loope
int
jnp
push
call
sarw
and
xchg
xor
aas
fsubr
js
call
mov
sbb
sbb
xchg
sub
push
adc
jns
rorb
sbb
lcall
mov
pop
in
and
inc
push
adc
dec
sbb
loopne
jne
icebp
fwait
push
bound
jge
mov
inc
mov
push
scas
arpl
fxtract
sbb
add
shlb
iret
pop
xlat
fcomps
outsl
jnp
inc
int3
loope
jno
shll
pop
mov
sbb
xor
dec
icebp
or
adc
xor
mov
ds
dec
loopne
and
dec
mov
addr16
mov
cli
cltd
adc
sub
imulb
pop
icebp
and
inc
scas
cmp
lds
out
fiadds
mov
adc
enter
cwtl
ret
insb
insb
pop
jnp
nop
jmp
sahf
push
lret
cs
lods
xchg
xchg
repnz
test
inc
push
jecxz
clc
sti
aas
push
and
push
add
hlt
out
sahf
sbb
in
mov
sahf
mov
mov
jmp
sbb
call
and
pop
loop
add
std
sub
sbb
in
dec
push
push
jmp
and
cmp
pop
daa
cli
std
je
cld
sub
mov
negl
cltd
fwait
jmp
aam
test
and
pushl
add
mov
jmp
push
mov
xchg
push
mov
lahf
inc
inc
mov
xchg
inc
dec
push
push
shl
push
test
lock
mov
rcrb
or
cmp
xor
or
sar
mov
mov
sbb
scas
mov
ja
int
mov
pop
sub
push
cmpsb
xor
push
xlat
sahf
and
lret
cmp
call
add
enter
pop
push
orb
fistpl
jbe
ror
xlat
cld
inc
ja
sbb
incb
mov
mov
cmp
test
in
inc
push
jmp
mov
jmp
mov
cmp
xchg
mov
sarb
mov
in
fiaddl
outsb
sub
es
out
add
mov
jb
fstpl
mov
push
cmp
lcall
adc
or
pop
and
xor
push
cmpsb
xchg
lret
mov
jns
mov
sbb
push
test
mov
in
rolb
pop
jno
inc
push
xor
push
test
data16
push
lahf
mov
cmp
cmp
cli
add
dec
fsubrl
or
dec
fistpll
and
lea
xchg
mov
xchg
mov
add
cmp
pushf
mov
es
sub
stos
cld
mov
inc
sub
xlat
fstpt
dec
out
fldl
test
fisubrs
adc
dec
push
pop
xchg
cmpsb
jle
sbb
lock
cld
jecxz
push
or
ror
imul
int3
and
mov
rcr
arpl
mov
mov
add
xchg
and
adc
es
xor
mov
push
xchg
es
insl
shl
xchg
inc
decb
iret
push
rcpps
xchg
lea
lar
inc
fcoms
adc
ret
clc
into
mov
int3
in
mov
sbb
data16
out
mov
lods
dec
iret
inc
in
dec
fs
and
ds
fdivr
jp
push
rep
inc
pop
popf
jl
out
mov
lock
jmp
popa
push
les
into
ja
push
jne
ja
xorl
lock
jg
push
dec
cmp
sub
pop
addr16
jae
xchg
hlt
repnz
mov
cmp
push
or
pop
imul
gs
fstps
jge
clc
jo
pop
stos
push
les
jb
ret
pop
iret
xlat
push
push
xchg
in
loope
mov
dec
ret
shrb
jns
sub
mov
arpl
jp
add
sarl
inc
or
shl
xchg
push
sub
lcall
push
add
adc
jl
mov
lahf
in
andl
sub
mov
gs
jle
jno
mov
and
xadd
xchg
scas
mov
lods
pop
inc
add
adc
xchg
je
sbb
dec
cmp
in
push
add
je
cld
mov
sbb
mov
in
mov
mov
cmp
mov
ja
inc
js
stos
mov
std
mov
xor
push
icebp
add
cmpsb
sti
sub
mov
ret
ret
or
dec
test
popa
xchg
jle
xchg
mov
loop
pushf
pop
stos
movl
pop
popfw
loope
jno
xor
out
loop
mov
sub
cmpsb
mov
dec
or
fadds
push
mov
lcall
push
sub
fdivr
inc
or
test
orl
mov
data16
jo
loope
pop
mov
pop
int
and
inc
xchg
adc
or
add
jbe
in
add
xor
std
sbb
inc
fisubrs
bound
outsl
jle
ret
or
mov
push
sub
js
clc
xchg
fnstcw
rolb
leave
ret
sarb
scas
mov
mov
jmp
ss
mov
dec
dec
sahf
push
mov
out
mov
sbb
int
xlat
ret
je
test
repz
shl
dec
push
sub
arpl
xorl
repnz
lods
stos
int3
fnsave
fcom
and
in
pop
inc
or
aad
in
push
sarb
fiaddl
faddl
iret
pop
inc
adc
in
sti
mov
jne
pop
cli
idiv
call
xor
daa
mov
pop
jno
subb
rcrb
pop
push
dec
xor
ljmp
or
scas
sub
movsl
inc
imul
xor
stos
fdivs
movsl
js
mov
call
incl
jns
sub
insb
lret
xor
push
sbb
add
sub
mov
xchg
and
faddl
push
rcl
dec
orl
sub
aad
jnp
jb
cld
dec
jns
adc
add
sub
pop
and
iret
mov
dec
mov
xor
xorb
jecxz
orl
inc
sbb
in
fdivs
push
sahf
gs
mov
test
push
add
jns
fwait
mov
movsb
dec
ds
inc
stos
rcr
out
mov
sub
mov
repnz
xchg
adc
lds
dec
xchg
or
fdivrl
xor
call
cmp
inc
dec
cmp
mov
div
or
daa
test
aam
push
pushf
xchg
sti
insb
mov
dec
imul
fildll
fmuls
mov
scas
mov
add
mov
repnz
loopne
jp
es
stc
cmp
pop
mov
inc
les
scas
mov
dec
in
aaa
sti
cmp
mov
push
test
aaa
lds
lret
add
adc
adc
lahf
pop
sbb
xor
gs
cmpsl
push
andl
loop
fnstcw
and
pop
mov
pusha
pop
dec
pop
push
xor
lret
fldl
int
push
sub
or
adc
ds
ds
pop
call
xorb
int3
push
in
push
jae
hlt
xor
test
in
out
cs
ja
push
mov
pusha
pushf
ds
orb
lods
ljmp
add
repz
cld
leave
hlt
shl
neg
inc
push
mov
cmpsl
or
jmp
push
into
movsb
jge
and
cld
cmpsl
adc
push
lea
mov
inc
into
pop
js
lods
adc
add
aas
insb
js
mov
add
mov
cmp
dec
icebp
pusha
lea
or
push
int3
push
xchg
mov
mov
cli
stos
out
jo
pushf
loope
inc
frstor
in
push
je
and
cmp
xchg
jmp
lds
push
stos
loope
jmp
mov
icebp
xchg
sub
rclb
inc
adc
push
ljmp
cmp
lods
mov
loopne
push
sub
xor
lahf
cmp
jle
outsl
loope
inc
add
xchg
adc
sbb
sbb
adcb
cmpsb
popf
mov
add
sub
notb
mov
js
or
les
jns,pt
pop
addr16
in
inc
xchg
mov
add
mov
addl
jbe
push
sbb
mov
jne
fdivl
imul
cmp
stos
sti
jne
add
lea
outsl
jmp
pop
mov
jg
and
enter
in
fcmovne
sbb
imul
pop
shlb
push
fld
repz
into
or
and
nop
pop
mov
add
jno
inc
sarb
mov
xor
sbb
clc
push
xor
cmc
push
lcall
addr16
jp
xor
pushf
leave
xchg
movsb
fidivs
repz
add
pop
dec
inc
fnsave
cmpsl
jp
test
inc
je
mov
mov
hlt
insl
and
mov
enter
icebp
pop
mov
cmpsl
or
cmp
mov
loope
mov
adc
ret
mov
stc
ficoml
hlt
mov
aad
js
xchg
out
div
mov
dec
lahf
popa
fidivrl
cli
dec
js
popa
das
pop
adc
push
aam
sti
lods
xchg
cld
mov
iret
mov
imul
push
mov
mov
xchg
sbbb
push
subb
dec
or
inc
adc
icebp
les
jmp
loope
jno
xchg
popa
fisttps
dec
sub
mov
mov
in
push
ss
add
icebp
int3
jge
ljmp
sbb
cltd
jl
mov
jo
jge
cmp
lods
in
clc
cltd
mov
je
aas
cld
lods
dec
xchg
push
dec
fidivl
push
icebp
cmp
and
and
adc
sub
jl
out
jmp
dec
xchg
sbb
je
mov
xchg
xor
inc
aas
adc
mov
or
nop
lods
loope
or
cmpsb
jne
cs
sahf
pop
not
je
aaa
outsl
add
or
mov
mov
push
sbb
into
pop
cmpb
inc
pop
pop
xchg
ljmp
in
and
aad
movsl
or
sbb
cltd
lret
cmp
rol
pop
lock
stos
clc
mov
rcrb
push
sahf
mov
negl
mov
or
push
jbe
mov
mov
dec
loope
lods
push
sub
push
sahf
outsl
inc
les
add
sbb
fst
jmp
inc
popf
mov
insb
push
scas
sarb
decb
bound
pop
jae
out
pop
jo
and
sub
adc
fsts
push
pop
mov
test
in
xchg
sbb
repz
pusha
lea
repz
sbb
test
lahf
cmpl
jb
addr16
mov
add
shlb
inc
stc
and
insl
and
mov
arpl
and
lea
push
and
pop
movsb
or
pmaxsw
push
mov
lcall
cmpsb
mov
out
xor
in
stos
sahf
bound
ret
mov
inc
cmp
lods
stos
addb
mov
lods
ds
idivb
movsl
jp
mov
es
dec
and
inc
jecxz
xchg
sbbl
cs
cmp
mov
mov
outsl
xchg
xchg
xor
xor
cmp
cmc
mov
jl
add
test
ljmp
cmp
stos
cmp
sar
fmull
lock
cmp
xchg
xchg
push
mov
lods
jg
mov
add
or
das
inc
inc
or
lcall
xlat
lods
push
stc
mov
popl
adc
and
adc
mov
mov
cwtl
push
mov
lods
jmp
fnsave
lods
scas
shrb
push
or
imul
sbb
aam
jecxz
ficoms
inc
dec
add
adc
mov
ret
pop
sahf
fs
pop
imul
add
into
add
cld
jno
xlat
leave
jne
testb
out
test
popa
jb
push
shrl
dec
shlb
jp
or
cmp
les
cmp
leave
jecxz
xchg
push
or
ret
add
mov
inc
mov
mov
pushf
int
call
addr16
sbb
and
and
out
pop
sarb
push
dec
ss
cmp
addr16
cmp
sbb
shlb
mov
enter
lahf
aad
push
xor
enter
fsubrl
pop
fst
xor
and
jecxz
movsb
dec
fcomps
testb
adc
push
sbb
leave
shlb
stos
mov
inc
or
mov
mov
lock
lcall
pop
adc
negl
ret
cmp
inc
mov
push
sti
and
imul
pop
test
gs
frstor
cli
hlt
out
push
xor
nop
outsb
rcrb
jmp
insb
fwait
sbb
xchg
stc
cmp
lds
movsl
aad
pop
xchg
negl
inc
shlb
sbb
cltd
js
insb
in
jo
stos
les
out
enter
add
and
jle
cmpsb
and
and
fsts
fsub
mov
mov
adc
and
imul
pusha
inc
andnps
sahf
inc
cmp
lret
test
int
popf
mov
pop
sbb
enter
addr16
js
xlat
hlt
int
mov
gs
add
xlat
call
and
filds
or
ret
mov
cmpsb
ljmpw
imul
dec
pop
cmp
icebp
out
and
adc
xor
jle
mov
or
in
push
das
shlb
push
inc
out
aad
sbb
iret
or
xor
cmp
xchg
mov
addr16
cmp
xor
pop
subl
xor
fldl
cld
xor
jg
repnz
lds
loopne
nop
cmp
test
test
js
mov
enter
or
in
leave
cmpsl
and
mov
push
leave
inc
subl
fcomi
inc
xor
jle
loop
dec
cmp
punpckhwd
out
fidivs
jmp
dec
xchg
outsb
pop
rcll
or
cmc
adc
int
in
mov
pop
xchg
xor
cmpb
mov
rcr
out
jp
fwait
xchg
jae
fsubr
jle
pushf
jmp
push
add
jp
inc
jmp
add
mov
xchg
hlt
sbb
stc
push
lcall
mov
dec
cmp
sti
pop
insl
pop
pop
imulb
xchg
test
or
pmaddwd
pop
lret
scas
xor
sbb
aad
xchg
dec
mov
lea
stc
dec
inc
lahf
das
mov
push
mov
mov
sbb
dec
lea
mov
xchg
pop
ret
and
xor
jns
out
shrb
cltd
jle
mov
and
stos
sahf
out
iret
ret
dec
loop
add
in
movsb
js
mov
shlb
inc
dec
add
pop
sbb
iret
fst
ret
sbb
cwtl
pop
movsl
into
orb
xchg
mov
addb
lcall
loope
or
push
mov
nop
push
sti
iret
and
mov
rcrb
lock
sbb
push
outsb
xor
cmp
jnp
in
mov
add
adc
and
add
out
jmp
fimuls
popf
jno
pop
ret
jnp
mov
cmp
loop
sbb
and
pop
or
mov
push
xor
into
insb
roll
and
arpl
aad
jb
mov
iret
or
nop
jbe
push
scas
dec
cmpsl
push
mov
dec
pop
adc
lock
ds
aam
dec
movsl
mov
push
add
insb
and
gs
cmpb
and
inc
aas
jne
cmp
xor
lret
divb
xor
enter
cs
nop
mov
insl
iret
ja
fs
js
pushf
mull
jg
test
xor
jae
dec
inc
test
push
fldt
jne
jae
idiv
jo
dec
mov
pop
aas
adc
xor
adcl
jge
inc
insb
movl
xchg
add
mov
test
pop
pop
add
std
and
push
fwait
pop
and
xor
inc
imul
inc
rorl
and
fldcw
adc
mov
std
or
jp
jg
jl
stos
mov
xorl
repnz
cmp
arpl
repz
imul
sub
or
mov
loopne
shrb
lea
ljmp
inc
in
nop
dec
iret
sbb
sbb
pop
jo
aas
jne
test
mov
sub
xchg
push
mov
xchg
popl
adc
mulb
push
inc
outsl
add
push
push
push
or
or
cmp
push
daa
stos
push
pushf
fsubs
das
mov
sub
stos
iret
outsl
push
sbb
add
or
cli
iret
gs
sbb
fmuls
jo
pop
js
and
and
jecxz
xor
inc
xorb
mov
xor
aaa
sbbl
fsubr
sub
scas
iret
xor
pop
pop
lret
jne
mov
inc
inc
jg
inc
push
jge
aaa
jne
xor
cwtl
sub
icebp
dec
xlat
sbb
shrb
inc
sbbb
push
pop
xlat
test
in
data16
lods
cli
or
movl
and
mov
call
mov
adc
add
pop
add
test
icebp
jge
cli
add
addb
dec
movsl
icebp
jmp
sbb
pop
push
and
or
push
inc
shrl
movsb
lea
aaa
cmp
inc
cmp
into
iret
pop
push
push
jp
ljmp
jnp
jbe
cmpsl
aad
xor
add
out
ret
shlb
xor
gs
aad
jno
mov
mov
sub
repz
push
push
sbb
push
bound
roll
xchg
inc
cmovs
or
data16
push
sub
inc
mov
sbb
dec
cmp
inc
pop
pop
addl
mov
sarl
mov
gs
sbb
push
negb
dec
pop
call
stos
jo
dec
call
insl
ja
xchg
jge
popf
shrb
les
xor
sbbl
sub
mov
pop
pop
test
inc
es
stos
cmp
sbb
ret
and
add
inc
shlb
mov
sub
sub
push
xchg
sub
jo
push
mov
pop
xor
xor
or
xor
add
sbb
xchg
sub
sbb
imul
xchg
pop
test
lock
mov
sub
cmpsb
sbbb
sub
xor
jo
push
into
xor
mov
adc
cmpsl
xchg
fcoml
ljmp
cmpl
pop
xor
jecxz
jne
loopne
cmp
cmp
pop
sub
pusha
mov
in
cmpsl
inc
clc
inc
cmpsb
jp
inc
push
mov
mov
out
cltd
push
lea
jns
pop
in
cli
xchg
inc
movl
cld
adc
cs
pop
and
mov
and
jbe
add
dec
movsl
add
clc
push
enter
push
or
fisttps
stc
jl
or
adc
sti
mov
xchg
into
push
scas
data16
stos
in
hlt
mov
stos
pop
mov
aaa
pop
in
loop
scas
cli
popa
shrl
movsl
nop
add
movsl
push
arpl
or
mov
xor
in
pop
shll
lods
push
stos
std
lods
shr
mov
push
adc
faddl
cld
jo
cmp
mov
pop
cmp
jle
ljmp
lahf
add
mov
xchg
cmp
and
dec
mov
jbe
cmp
sbb
popa
xlat
push
mov
xchg
scas
lods
xchg
out
cmp
push
mov
push
dec
sub
sarb
addl
mov
cmp
sub
clc
aam
and
sub
sti
test
mov
mov
in
bound
add
jo
ret
outsl
in
insb
sahf
loope
adc
imul
popf
mov
fidivs
lock
pushf
add
xchg
out
mov
adc
repnz
je
popa
cli
push
or
shr
add
xchg
call
out
mov
jle
cmp
or
ficompl
popf
sub
mov
push
aas
sub
into
or
das
cmp
cmpsl
mov
and
xchg
sbb
fdivp
jno
pop
xor
push
outsl
aad
lods
test
or
mov
cmp
fmull
sub
mov
sahf
in
xchg
out
and
vmulpd
push
push
rclb
mov
invd
jmp
mov
mov
fwait
aam
or
pop
jae
xor
je
outsl
repz
lcall
add
mov
push
jbe
mov
in
or
test
repz
or
pop
mov
mov
push
mov
push
loopne
aas
aad
cmpsb
push
inc
adc
adc
test
sti
jae
mov
and
stc
push
das
clc
daa
lcall
adc
add
jnp
out
clc
mov
pop
mov
movsl
adc
les
mov
out
push
nop
xchg
clc
push
ret
fisttpll
aam
xchg
push
cmp
xchg
sbb
inc
mov
stos
add
cmpl
xor
add
jb
popa
pop
pusha
mov
stc
mov
nop
scas
bound
jae
mov
adc
out
add
call
mov
cmpsb
fcoms
jg
lds
jb
add
fucom
gs
loope
iret
nop
jns
enter
frstor
xchg
xor
divl
cmp
and
xor
dec
ret
cmp
inc
js,pt
sub
pop
sub
adc
sub
sahf
inc
mov
mov
test
adc
mov
pop
test
and
arpl
out
dec
and
movsb
xlat
jns
test
cmpl
ja
mov
js
mov
movsb
lret
xchg
out
out
jp
std
xor
ret
inc
xchg
addr16
fdivl
and
mov
inc
adc
or
inc
jo
movb
lods
and
jb
ret
jae
dec
jo
mov
sbb
add
sbb
and
sub
jb
test
jl
sub
and
inc
inc
dec
pop
int3
cmp
lods
push
mov
mov
sbb
ret
pop
mov
push
test
and
sbb
imul
rcll
lahf
dec
ja
mov
jmp
cld
mov
mov
sbb
ret
sbb
sub
ds
sahf
mov
mov
or
jo
adc
dec
and
push
stc
and
sbb
daa
aam
xor
pusha
jno
push
std
clc
sti
add
mov
js
xor
fs
lret
add
das
jbe
pop
dec
test
stc
sub
sub
xor
cmc
adc
xor
or
lds
jae
and
xchg
lahf
mov
sbb
jns
paddq
and
adc
clc
out
mov
and
or
cmp
fildll
jae
dec
jp
xchg
imul
cli
mov
push
jmp
imul
adc
lret
imul
sti
cmp
es
xchg
dec
ficompl
test
in
dec
and
mov
imul
mov
enter
lods
pop
mov
fstl
sub
sub
loopne
and
push
fldcw
push
out
add
mov
fldl
daa
std
ret
insb
cwtl
out
jne
xchg
cs
fstpl
ret
fcoml
mov
stc
imul
insb
rcrb
jbe
popa
mov
fnstenv
loope
pop
mov
in
add
xlat
mov
jp
dec
fmulp
xlat
shll
loop
clc
jo
orl
pop
pop
mov
push
adc
dec
sub
push
push
push
add
sbbl
inc
clc
ret
jle
mov
les
cmpsl
cs
cmp
stos
push
pop
adc
xor
movsb
lds
sub
lods
xor
repnz
mov
xor
hlt
sub
dec
xor
dec
in
mov
lahf
sbb
das
push
jecxz
lds
sbb
outsb
dec
fcomps
xor
cmp
arpl
or
les
or
ds
inc
in
movsb
and
xchg
inc
fisubl
scas
xlat
push
xchg
xlat
and
divb
sbb
cmp
lods
lea
setb
xchg
inc
insl
and
dec
lcall
lret
ds
iret
repnz
pop
jne
xchg
pop
jmp
push
mov
loopne
ret
outsl
xchg
pop
jno
add
push
mov
int3
mov
iret
inc
adc
dec
jle
mov
imul
scas
ret
out
dec
outsb
into
call
cmpsb
sub
in
fidivrs
scas
cmpsb
sti
fwait
jb
outsb
punpckhbw
ficompl
mov
sahf
mov
pop
in
insl
mov
push
dec
mov
out
fistpll
sub
push
ret
ret
xor
mov
cmp
mov
fcmove
lcall
or
jae
fidivrl
arpl
or
fstpl
adc
cmpsl
add
aaa
inc
vpand
icebp
jb
xor
ss
jns
scas
fcomps
mov
cmp
and
mov
insb
loop
sbbl
je
sbb
lods
xchg
push
sbb
scas
shlb
stos
mov
dec
adc
add
adc
mov
xchg
imul
sub
mov
movsw
add
test
inc
push
jle
sub
jne
cmp
mov
and
sub
out
jge
loope
mov
push
loopne
pop
popf
repz
scas
movsl
gs
fdivs
push
cmpsb
xor
jp
stos
pop
sbb
jne
cmp
stos
mov
cmpsl
mov
in
sbb
sub
push
cmp
sbb
xchg
dec
adc
scas
or
jl
sbb
ds
data16
data16
insb
movsl
fwait
sbb
insl
and
dec
movsb
fcom
mov
cmp
inc
insb
aad
or
cmc
mov
mov
mov
sub
outsl
inc
flds
out
rclb
cmpl
cmp
or
mov
mov
pop
imul
int3
mov
mov
sbb
lcall
stos
pop
cs
jle
mov
out
fsubl
shl
cli
imul
mov
ret
inc
enter
dec
cmp
xor
notb
add
push
pop
add
leave
mov
fadds
pop
mov
cmc
call
pop
cmpl
or
icebp
ror
dec
mov
cwtl
fstpl
pop
dec
cmp
test
ljmp
sub
mov
and
cmpsb
pop
es
popa
ds
jo
jge
xchg
std
jns
sub
cmpsb
mov
mov
nop
je
mov
dec
jmp
add
int3
xchg
cld
dec
xor
mov
sub
insb
aad
in
imul
jno
mov
int3
pop
es
loopne
ror
mov
rcll
mov
cwtl
push
dec
push
fwait
adc
in
add
jmp
ja
mov
in
adc
out
sub
cltd
ret
push
pop
add
test
push
push
sbb
fmul
push
inc
push
pop
jbe
or
ficompl
and
faddl
dec
cmpsb
clc
mov
jo
daa
incl
lahf
cmc
dec
fmuls
xor
rclb
sbb
test
mov
fldenv
mov
lods
and
cli
jnp
pop
sbb
xor
add
or
cwtl
pushf
jl
cwtl
outsb
sbb
and
aam
addb
or
rcrl
mov
aam
add
stc
pop
pop
cmc
cmp
lcall
sbb
and
pop
loopne
jmp
xor
test
push
jecxz
subb
cmp
jb
shlb
mov
lea
push
in
pop
incl
fnsave
sub
int3
add
int
xchg
out
push
in
fs
fmulp
ret
xorb
inc
inc
ljmp
ljmp
xor
movsl
or
mov
pop
and
pop
fisubrl
jne
rorb
idivb
fwait
insb
inc
lahf
loope
mov
xchg
sub
push
cmp
shl
pop
xchg
movsb
lea
fstpt
jecxz
sub
pop
pop
sub
sbb
jb,pn
rcrb
aam
loopne
ret
inc
pop
add
xchg
pushl
rorb
add
rorl
pop
xlat
push
mov
loope
sbb
mov
daa
cli
call
cwtl
inc
shll
cmpsl
sub
push
push
je
pop
mov
js
lcall
fldenv
push
xor
stos
dec
cld
arpl
sbb
pop
or
pop
sub
cmpsl
push
pop
sti
cld
inc
jmp
pop
inc
scas
pop
mov
outsl
add
sti
scas
push
ljmp
daa
loope
mov
mov
insb
adc
je
jmp
add
pop
lea
adc
loop
ja
sub
scas
fs
inc
fmulp
mov
xor
ret
or
adc
or
pushf
clc
loopne
mov
or
mov
int
jp
mov
xchg
sbb
dec
std
xor
and
sti
sahf
and
addr16
jb
lods
mov
insb
mov
mov
bound
xchg
cli
push
cmp
adc
dec
out
fadd
outsl
sbbl
mov
nop
dec
xchg
es
int
pop
repz
mov
sbb
fstl
pop
out
push
pop
loope
inc
ja
shlb
outsl
stc
sbb
test
or
enter
mov
fcomp
pop
or
pushf
mov
mov
push
jb
cmpsb
ror
push
aad
sub
xchg
xchg
ficoml
cmc
mov
adc
xor
mov
test
int
xchg
or
mov
xchg
cs
cs
push
sub
add
push
xchg
hlt
shlb
pop
ljmp
adc
push
lds
mov
cmpsb
push
out
test
pusha
int3
ret
rcll
mov
pop
into
cltd
push
inc
push
popf
clc
xchg
movsl
outsl
xor
rcrb
cwtd
in
lods
sbb
jae
in
unpcklps
mov
xorl
and
sbb
insb
in
pop
sbb
and
sbb
fisttpll
loope
popf
mov
cld
sbb
mov
sub
xor
popa
jp
jle
pop
bound
imul
insl
mov
sarl
mov
aad
rclb
jns
inc
popf
jge
jmp
es
int
add
test
dec
pop
mov
jns
push
fnstenv
pop
rcll
push
mov
orl
ficomps
pop
mov
das
adc
cmp
cmp
mov
jae
mov
leave
out
sub
mov
mov
in
or
fimull
or
push
sbb
imull
aas
inc
xchg
rorb
sub
inc
mov
inc
xchg
mov
mov
imul
inc
mov
loopne
iret
adc
pusha
and
cmc
je
sub
frstor
inc
cmp
xlat
inc
cmp
movsb
adc
jge
sub
mov
pshufw
dec
dec
pop
or
push
jmp
sbb
pop
add
cmp
jb
out
xor
rol
jne
popa
in
jp
jae
pop
scas
and
call
fistpl
int
dec
push
mov
adcl
popf
sti
popa
inc
pop
ljmp
nop
jae
fwait
in
inc
pop
pushf
sbb
mov
and
cli
test
popa
push
dec
sbb
dec
mov
jmp
inc
sbb
subl
adc
xchg
aas
jb
mov
mov
xlat
jle
and
cmp
scas
cmc
addr16
and
andl
int3
mov
leave
faddl
dec
mov
jecxz
push
inc
mov
mov
pop
out
inc
popf
xor
loopne
das
lods
pop
aad
cmc
xchg
aad
mov
add
mov
xchg
add
fstpl
gs
pop
sbb
mov
lahf
mov
ljmp
jns
ljmp
xchg
sub
inc
pop
movsb
cwtl
cmp
cmp
push
cmpsb
inc
popf
test
cwtl
daa
inc
mov
inc
mov
sbb
shrb
mov
inc
jb
insl
test
call
enter
je
jl
notl
cwtl
int3
int3
mov
fiadds
and
repz
data16
jmp
cmp
lret
idivb
shrb
or
jmp
mov
es
pop
mov
lods
dec
es
sbbb
mov
shlb
in
lcall
lret
lods
loope
mov
imul
mov
lahf
add
cmp
jle
mov
jge
pop
xchg
loopne
sub
daa
or
ja
push
add
add
sub
notb
and
mov
lcall
add
adc
mov
lahf
jne
xchg
ds
add
cli
xlat
push
add
pop
mov
stos
lret
or
xor
xor
popl
xchg
int3
add
push
ficoms
int3
xor
out
movsb
lret
sbbl
jl
xchg
stos
lock
jns
and
and
loop
cmp
push
xor
jge
xchg
leave
cmpsb
cmpsl
adc
jae
adc
dec
pop
xchg
insb
inc
push
and
push
mov
in
dec
scas
sub
jnp
jo
add
std
fs
cmc
je
lock
pop
or
fldenv
js
jo
sub
mov
inc
inc
in
cmp
sbb
out
and
xchg
gs
in
sbb
xor
jb
inc
mov
and
and
jne
cli
push
lea
call
lds
cmp
jno
and
and
pop
pop
mov
movsl
xchg
aaa
jno
imul
jb
subl
lods
mull
or
mov
mov
dec
or
xchg
or
icebp
mov
je
cltd
add
subl
mov
mov
jne
ljmp
add
test
pop
and
xchg
out
cwtl
sub
aad
add
in
and
mov
sub
lea
stc
mov
das
ror
fmulp
pop
hlt
mov
pop
sbb
inc
shl
imul
jae
and
xchg
mov
and
jge
mov
andb
stc
aas
or
inc
fmull
cmp
test
push
push
or
imul
xchg
sub
leave
repnz
push
jl
sub
clc
adc
sbb
xchg
pusha
das
mov
mov
mov
shll
popf
cmp
sbb
lods
arpl
aaa
iret
lea
rol
pop
jns
inc
std
mov
rcrl
pop
jmp
insl
shr
inc
popf
lods
lcall
xchg
sbb
inc
enter
jmp
jo
push
add
dec
ret
lds
pop
or
inc
xchg
cmp
mov
test
push
scas
push
pop
mov
cltd
mov
jmp
mov
in
push
sbb
fisttps
fldcw
bound
test
fsubl
imul
fstl
or
jnp
movsb
popa
and
xchg
mov
xor
addr16
int
pop
sub
adc
sti
int3
mov
adc
repz
inc
addb
cs
loope
or
jnp
sets
sbb
mov
rorl
dec
xchg
repnz
fdivl
and
iret
scas
adc
imulb
in
das
scas
outsb
mov
dec
push
stc
and
fnstenv
xchg
sbb
cmpsb
add
loop
lods
dec
int
xlat
inc
push
push
movsb
push
fiadds
cli
cwtl
adc
loopne
adc
fdivrl
lds
sar
pusha
mov
jno
mov
push
inc
jl
out
sub
inc
pop
out
fldenv
std
add
mov
imul
jl
enter
add
cli
mov
pop
push
es
push
or
int3
cli
insl
cmp
bound
mov
dec
mov
les
xchg
push
scas
in
cmp
rcr
cmpsl
dec
pop
sub
testl
and
or
mov
jns
push
loope
xor
jb
in
aam
inc
mov
sbb
push
mov
dec
jnp
nop
mov
loopne
add
gs
push
loopne
jle
xchg
fmulp
sbb
shll
sbbb
testl
dec
pop
gs
ja
es
jecxz
ljmp
and
pusha
cmp
js
sub
ss
or
ja
mov
cmp
mov
adc
pusha
cmc
stos
out
add
movsb
cmp
sbb
push
imul
and
or
mov
dec
mov
cwtl
cmp
mov
cmp
stc
addr16
popl
pop
sbb
enter
jnp
ljmp
xlat
stos
test
lcall
movl
mov
push
divb
lods
add
test
repz
rcr
test
and
test
pop
adc
and
loop
int3
sbb
loope
xchg
or
mov
fisttpl
sbb
jl
in
loopne
jnp
mov
and
lods
dec
mov
mov
bound
pop
sub
cltd
lods
mov
mov
popa
add
cmpsb
mov
or
jns
enter
daa
cmp
sub
inc
mov
dec
loop
lcall
sub
outsl
cld
or
inc
fsubrl
jmp
xchg
jbe
out
aas
wbinvd
in
test
push
test
mov
xchg
jne
and
dec
add
mov
shl
je
xchg
test
je
push
push
sbb
aam
fcmovne
or
pop
push
inc
fs
xchg
xor
mov
jns
arpl
arpl
lret
repz
lds
and
pop
loope
je
or
cmc
jg
pop
cltd
xchg
jg
pop
sarb
and
fdivp
es
insl
inc
or
cmpsb
xchg
and
fcompl
sub
lds
ret
cmp
pop
adc
fsubr
int3
test
arpl
sub
mov
pushf
jge
add
pusha
mov
out
ss
dec
shlb
addl
adc
mov
push
mov
cmp
push
sti
adc
int
sbbl
xchg
arpl
ret
xlat
add
test
inc
lods
aad
mov
cwtl
adc
inc
subb
cld
test
and
jge
scas
addb
pop
fcmovnb
sarl
pusha
loopne
xor
push
dec
and
sub
push
ss
jae
out
stos
xchg
jns
movsl
sbb
fisubrl
or
jnp
sub
ret
ljmp
shlb
fwait
sub
mov
sub
xchg
and
and
cmpsb
arpl
push
cltd
sbb
cmp
and
stos
repnz
incl
add
add
push
movsb
rolb
pop
or
shlb
inc
push
pop
add
mov
jo
jle
into
outsl
xchg
xchg
pop
or
popa
ret
push
sub
sbb
push
push
jmp
adc
lcall
push
fdivr
cmp
pop
mov
fsubl
mov
hlt
clc
loopne
add
popa
out
mov
sub
jp
aam
mov
jmp
insb
push
dec
cmpl
cli
xchg
cmpsl
sbb
jl
sub
xchg
aas
emms
leave
sub
xchg
mov
loop
pop
ja
push
jle
push
insb
out
test
sub
push
or
std
cmp
test
es
lods
sarl
fs
sub
insl
push
add
sbb
sbbb
inc
mov
jmp
sbb
push
shll
mov
out
addr16
ret
in
aam
ljmp
incb
pop
pusha
mov
leave
adc
pop
jmp
inc
xchg
bound
sbb
or
repz
cmpb
and
js
bound
add
cmpsl
mov
pushf
mov
call
nop
daa
fcomi
inc
or
dec
in
push
sbb
cltd
pop
mov
and
lahf
xchg
daa
mov
jecxz
inc
pusha
dec
bound
xor
lret
in
sbb
scas
xor
jge
jo
in
push
adc
loope
movb
sbb
jp
lods
mov
adc
mov
jl
fnstcw
or
stc
out
mov
xor
shl
and
rclb
arpl
push
stc
cmp
or
or
mul
xor
orl
mov
mov
sbb
pop
xlat
aas
push
mov
imul
mov
int3
pop
sub
icebp
lahf
ja
push
and
lods
inc
sub
loope
popa
sub
jmp
stos
mov
or
add
mov
and
cltd
add
push
dec
or
rcr
inc
movsl
pop
addr16
xor
jl
es
jo
arpl
hlt
sbb
sarl
es
lock
pushf
push
and
out
loop
cmpsl
adc
mov
cmp
jbe
pop
sub
cs
adcl
aaa
or
push
jo
and
jno
je
xorl
cwtl
pop
data16
xchg
mov
jl
rol
cmp
mov
and
xor
fildl
xchg
jmp
std
adc
stos
dec
cltd
sub
inc
add
adc
push
or
mov
in
psubsw
jmp
gs
cli
lds
dec
inc
repz
popa
sub
leave
sub
scas
jb
fcomps
jle
imul
cmpb
xchg
and
pop
orb
sbb
inc
sbb
push
daa
je
popa
mov
jmp
int3
cmp
gs
hlt
inc
and
loope
fistps
sub
cltd
xlat
out
push
jmp
push
and
mov
sub
in
test
cld
sub
add
lret
mov
xchg
mov
and
cltd
add
xchg
call
inc
jns
fstps
xchg
dec
and
jge
notl
ljmp
or
pusha
pusha
sbb
jno
lahf
add
outsl
hlt
push
subb
xchg
ror
ljmp
inc
mov
and
pop
mov
and
xchg
mov
outsb
lock
cwtl
add
mov
sub
rorl
inc
or
cmp
and
lcall
aam
adc
lods
pushf
mov
jnp
pop
jo
clc
lods
xchg
push
jb
ret
jg
push
in
cmp
fs
fucompp
xchg
xor
push
mov
pop
push
mov
ljmp
pop
nop
imul
loope
sbb
lret
lock
pop
shr
rcll
test
mov
cmpsb
stos
sti
addr16
mov
pusha
mov
shrl
and
movsb
icebp
call
xlat
sbb
das
and
jle
jbe
scas
sub
push
jae
jl
and
pop
popf
push
rorb
pop
push
xchg
sahf
loopne
lret
lods
pop
sub
mov
push
lock
jle
or
insb
adc
jns
mov
pop
lea
mov
das
out
daa
sbbb
mov
fisubs
ja
xchg
cmp
mov
in
push
cmp
pop
add
dec
call
fmull
sub
dec
mov
popf
ja
add
clc
sbb
inc
shll
mov
test
notb
andl
lods
fimuls
shl
dec
shll
lods
fs
jp
inc
jecxz
mov
sbbb
aaa
pop
push
mov
test
xor
mov
mov
jmp
and
jbe
outsl
push
pop
dec
sub
pop
mov
pushf
adc
aaa
mov
fildl
lahf
cmp
pop
in
xlat
cli
ret
dec
cltd
fcmovnu
xor
stc
pushf
cmpsl
mov
ret
cmp
arpl
push
lods
int
imul
sbb
mov
pusha
dec
add
add
xor
lods
or
aaa
jl
loopne
cmp
push
push
test
add
fdivs
pop
shrl
mov
add
or
mov
popa
add
pusha
call
xchg
cmpsb
adc
das
loope
fwait
ret
repz
sti
out
lret
mov
stos
imul
pusha
or
push
cld
ds
xlat
jmp
dec
inc
in
scas
lahf
lods
movsl
add
add
popf
rcr
sub
xchg
fldl
pop
inc
cmp
xor
cmpsb
sub
loop
mov
fwait
cltd
cmp
aas
sub
cld
push
fistl
xchg
or
jbe
cmp
hlt
call
icebp
mov
push
call
adc
repz
jmp
fwait
sti
inc
test
std
or
mov
lret
push
sbb
pop
jg
jmp
sub
xchg
sbb
mov
or
aad
push
jecxz
inc
jp
in
fsubrl
das
dec
push
cmp
adc
std
xchg
adc
sbb
add
repnz
sbb
pushf
and
push
push
cmp
or
mov
or
loope
testb
cmc
adc
jne
test
sbb
in
pop
lret
into
lds
enter
stc
mov
stos
mov
sbb
push
push
fs
xor
sbb
push
push
pop
data16
insb
call
in
adcl
mov
js
fisttps
cmp
imul
push
dec
addr16
inc
add
outsl
add
or
mov
es
ss
mov
cmp
int
jbe
xchg
lahf
and
jbe
xchg
cltd
push
into
push
jp
insb
js
mov
cmp
xchg
out
pop
mov
aam
mov
dec
fcmovbe
std
add
mov
xchg
jl
xchg
or
mov
fldt
cwtl
lcall
xlat
aad
je
sbb
imul
data16
cwtl
and
mov
cli
data16
mov
pop
std
into
sbbb
es
pop
ss
jl
cmpl
jb
add
fidivs
xchg
pop
ja
xchg
out
aam
push
lock
pop
sub
lcall
stos
dec
dec
out
mov
inc
mov
and
add
cmp
and
cmc
fistpl
xor
pop
sbb
fldt
mov
jle
int
cmc
movsl
cli
mov
and
or
test
dec
adc
int3
bound
mov
lcall
add
xchg
repz
cmp
mov
xor
jle
sub
sub
mov
insl
add
arpl
xlat
nop
mov
jbe
pop
lods
test
int
stos
mov
lea
js
sti
movsb
dec
outsb
mov
aam
hlt
hlt
test
stos
cltd
push
push
mov
mov
ret
add
push
add
dec
dec
daa
and
adc
push
add
add
pop
xchg
cltd
lcall
in
lods
lahf
ljmp
icebp
jp
jae
outsb
ds
add
xor
addr16
cli
adc
inc
test
mov
sbb
into
mov
je
cmc
jge
push
xchg
int
xchg
ret
aaa
pop
mov
push
xchg
xchg
pop
xor
popf
mov
aaa
cld
jge
rorl
ds
mov
cli
stc
jmp
push
ds
imulb
enter
aas
jp
add
arpl
paddw
inc
and
and
sub
mov
stc
fisttps
pop
imul
xor
sbb
sub
sbb
in
ss
lcall
add
ret
movsb
jg
ds
out
or
add
daa
mov
es
sub
push
addr16
xchg
and
jo
sbb
popf
mov
scas
sub
cltd
shl
enter
ljmp
push
lret
and
xchg
mov
lods
jmp
lds
les
int3
lret
xchg
test
mov
jnp
jl
adc
mov
aaa
mov
sbb
sbb
ja
xchg
out
push
or
cld
add
es
shlb
loopne
aas
cmpsb
pop
add
jns
inc
lods
pusha
mov
inc
xchg
dec
out
int3
mov
out
xor
rcl
inc
pop
into
sub
dec
cli
imul
push
cmp
push
push
mov
stos
rorb
cmp
sbbl
adc
add
sub
push
shlb
popa
stc
shrl
fsts
pop
mov
rclb
mov
push
pop
xor
add
mov
out
in
das
faddl
xor
jge
push
gs
outsb
mov
jmp
push
ss
mov
int
mov
pop
sti
xchg
subb
cmpsb
dec
push
sbb
pop
cmp
shrl
cld
ja
outsb
mov
ret
mov
mov
movsb
test
sti
jmp
sbbl
dec
cli
jb
in
out
cmp
test
scas
fucom
dec
pop
adc
push
fldt
push
dec
jns
das
ret
mov
test
addl
out
in
fiaddl
sahf
and
popa
icebp
add
cs
les
insl
std
dec
adc
xor
fdivs
inc
nop/reserved
sub
lcall
in
xor
push
cmp
popa
imul
mov
lret
dec
mov
xchg
fs
pop
scas
lcall
xor
pop
sub
adc
mov
subl
pop
lret
or
push
xor
loopne
pop
loope
negl
or
jbe
ja
sub
dec
dec
stos
lea
nop
dec
bound
cs
pop
mov
xchg
push
popa
icebp
test
push
iret
mov
pop
push
xor
fiaddl
int
daa
push
in
les
mov
adc
xor
fisttpl
fnsave
sbb
xchg
and
imul
les
addl
xchg
xor
shll
movsb
call
rolb
jnp
lahf
roll
cld
sub
nop
fldl
test
jnp
decb
insb
add
shl
pop
push
push
outsb
and
push
mov
dec
scas
jmp
jp
push
xchg
stos
sbb
out
