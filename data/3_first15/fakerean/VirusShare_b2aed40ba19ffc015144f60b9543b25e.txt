xor
into
adc
test
inc
xchg
add
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
mov
cmp
jne
pop
jmp
mov
cmp
je
pushl
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
mov
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
mov
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
mov
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
push
push
push
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
test
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
mov
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
je
lea
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
mov
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
mov
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
lea
mov
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
cmpl
ja
mov
mov
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
pushl
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
call
cmp
pop
je
mov
xor
mov
stos
stos
xor
mov
push
mov
call
mov
pop
mov
lea
push
add
mov
push
push
call
test
jns
jmp
mov
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
lea
call
jmp
push
lea
call
xor
call
jmp
push
mov
sub
push
lea
mov
test
jne
xor
mov
call
andl
andl
lea
mov
push
lea
lea
movl
mov
call
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
xor
mov
call
lea
xor
call
lea
xor
call
lea
call
lea
call
pop
leave
ret
push
push
push
push
push
push
push
movl
lea
mov
mov
push
push
call
mov
mov
cmp
jne
lea
mov
mov
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
push
xor
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
push
lea
push
call
pop
pop
lea
pop
add
jmp
push
mov
and
mov
sub
cmpl
push
push
push
mov
jle
cmpl
jle
fldl
mov
fstl
fildl
fstl
fidivrl
fstl
fcompp
fnstsw
test
je
lea
fldl
sub
fldl
fmul
fxch
fstl
fmull
faddp
fstpl
call
call
fldl
fmull
mov
faddl
fstpl
call
add
call
test
mov
mov
mov
movl
jne
xor
cltd
idivl
cmp
mov
jg
lea
test
mov
mov
mov
jg
test
jg
test
jg
testb
jne
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
mov
fildl
lea
fldl
fdivr
fxch
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
mov
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fidivrl
fstpl
call
mov
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
test
je
addl
mov
test
mov
je
jmp
mov
and
neg
sbb
inc
ret
push
mov
mov
mov
push
push
xor
push
add
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
pop
pop
pop
ret
mov
jmp
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
cmp
je
pushl
mov
pushl
push
call
mov
lea
call
mov
jmp
mov
mov
jmp
push
mov
and
push
push
mov
push
push
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
test
jne
pushl
pushl
pushl
push
call
testb
jne
push
lea
push
call
test
je
mov
andb
test
je
cmp
je
mov
or
mov
xor
inc
pop
pop
pop
mov
pop
ret
cmp
jne
movzwl
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
pushl
xor
pushl
pushl
push
call
mov
movzwl
push
push
push
mov
call
test
je
mov
mov
jmp
push
push
pushl
mov
call
jmp
push
mov
call
test
je
orb
cmpl
jne
mov
push
push
mov
call
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jne
mov
mov
push
call
lea
call
lea
call
lea
call
inc
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
inc
cmpl
push
mov
jl
jg
cmpl
jbe
mov
mov
lea
push
call
test
je
push
mov
mov
mov
push
mov
call
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
mov
push
call
test
jne
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
pushl
mov
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
test
pop
pop
jne
cmpb
je
pushl
mov
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
mov
mov
lea
push
push
call
test
jne
xor
cmp
je
lea
push
mov
mov
mov
mov
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
cmpl
jl
jg
cmpl
ja
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
mov
call
push
push
lea
push
pushl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
call
push
push
lea
push
pushl
call
pushl
mov
pushl
call
test
pop
pop
jne
xor
lea
call
mov
test
jne
lea
call
mov
test
je
mov
push
call
lea
call
mov
test
je
mov
push
call
lea
call
xor
pop
pop
pop
leave
ret
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
xor
push
mov
call
mov
add
cmp
jne
push
call
xor
add
cmp
je
mov
mov
movl
mov
mov
mov
push
call
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
test
je
mov
push
call
add
test
je
mov
mov
push
push
push
mov
call
mov
test
js
mov
mov
push
call
pop
pop
mov
pop
pop
pop
ret
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
cmpl
je
push
mov
test
push
jne
cmpl
jne
pop
pop
pop
leave
ret
cmpl
je
xor
xor
mov
mov
mov
xor
push
pushl
push
push
pushl
push
push
call
jmp
testw
je
jmp
mov
cmpl
je
pushl
mov
pushl
mov
pushl
call
xor
ret
mov
add
jmp
push
mov
mov
test
jg
push
mov
call
test
jne
pushl
call
pop
ret
cmp
jle
jmp
mov
jmp
mov
mov
mov
push
push
call
xor
ret
push
mov
mov
sub
test
push
push
push
je
push
lea
xor
call
mov
cmp
ja
mov
push
push
push
lea
push
call
cmpl
jne
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
mov
lea
rep
xor
cmp
mov
mov
je
push
lea
call
push
push
lea
push
push
call
add
test
lea
js
mov
push
call
push
lea
push
push
call
add
test
js
mov
push
push
call
add
cmp
je
mov
lea
push
push
push
mov
movl
call
mov
push
push
push
push
push
call
mov
mov
mov
add
lea
push
push
lea
push
push
call
mov
test
jbe
mov
mov
xor
jmp
lea
mov
test
jne
add
add
cmp
jb
mov
push
call
mov
add
push
xor
mov
lea
mov
call
mov
cmp
je
mov
push
mov
call
test
js
lea
mov
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
mov
lea
push
push
add
call
mov
mov
add
push
mov
push
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
call
mov
add
jmp
push
mov
push
push
push
mov
mov
test
jne
cmp
je
incl
pop
leave
ret
cmpl
je
cmpl
jne
mov
xor
test
je
lea
push
push
mov
mov
push
call
mov
test
mov
je
mov
push
pushl
push
call
lea
call
jmp
incl
cmpl
jne
xor
push
mov
push
push
call
push
call
add
jmp
push
mov
and
sub
push
push
mov
xor
cmp
push
jne
mov
pushl
call
mov
call
cmp
jne
pop
pop
xor
pop
mov
pop
ret
push
call
cmp
pop
je
mov
lea
movl
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
lea
push
mov
mov
mov
call
push
lea
push
lea
push
mov
call
add
lea
push
mov
lea
call
mov
push
push
mov
mov
mov
lea
push
push
call
jmp
int3
int3
int3
sub
mov
mov
push
mov
push
push
mov
lea
push
push
call
sub
mov
sub
mov
mov
js
mov
sub
sub
js
mov
mov
mov
push
push
mov
call
push
mov
call
mov
call
mov
mov
call
mov
cmp
je
cmp
je
test
jne
cmpb
je
cmp
je
mov
mov
mov
pop
mov
mov
pop
mov
pop
add
ret
mov
sub
cltd
sub
sar
add
jmp
mov
sub
add
jmp
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
sub
push
push
push
xor
mov
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
mov
mov
lea
call
mov
mov
xor
push
lea
lea
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
cmp
jne
xor
inc
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
jmp
push
mov
sub
push
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
cmp
je
mov
mov
lea
call
mov
mov
lea
pushl
call
test
je
mov
mov
cmp
mov
jne
mov
cmp
mov
je
mov
push
call
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
call
mov
cmp
je
mov
mov
push
push
movl
mov
mov
mov
push
call
lea
xor
call
push
call
mov
cmp
pop
je
pushl
xor
call
pop
push
push
pushl
call
mov
mov
mov
cmp
jne
mov
cmp
mov
je
mov
push
call
mov
mov
lea
push
push
call
cmp
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
test
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
call
mov
mov
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
js
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
mov
call
test
jne
mov
mov
call
test
je
mov
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
test
je
mov
movb
mov
mov
push
pushl
push
push
push
call
mov
popa
add
add
xchg
mov
add
sahf
mov
add
rol
fildl
addb
test
scas
out
mov
push
add
movl
add
fisubrs
sti
faddl
mov
in
hlt
call
in
add
push
push
push
push
push
push
push
push
call
leave
add
mov
mov
mov
add
jmp
fwait
test
push
lock
out
cwtl
mov
mov
mov
enter
faddl
add
add
add
mov
xchg
add
addr16
add
in
in
popl
push
push
push
lea
push
call
mov
add
pop
jno
xchg
add
add
add
aam
cli
add
push
add
jne
xchg
add
add
stos
push
nop
pushf
add
xchg
bound
mov
add
add
mov
fldt
sub
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
aam
push
hlt
add
push
pop
cld
js
not
movsb
stos
jp
add
fdivrl
jl
orl
add
call
jecxz
int3
fs
mov
icebp
add
add
add
xchg
add
lcall
push
push
lea
push
push
call
mov
into
add
jnp
pushf
jnp
add
add
popa
mov
add
jae
lods
add
add
add
lret
xchg
mov
pop
push
mov
add
lea
add
add
jge
mov
fwait
lds
add
bound
andb
add
lcall
push
push
push
push
push
push
push
push
push
call
mov
mov
movsl
add
cmpsl
add
mov
add
pop
iret
mov
add
add
add
add
push
xchg
mov
mov
addl
hlt
add
push
in
fdivr
lcall
push
push
push
push
push
push
push
call
lock
popf
add
shl
cmpsb
add
mov
std
cmpsb
add
stc
jl
addl
fmulp
jo
add
add
fisttpl
int
add
mov
add
push
je
add
pushf
xchg
pop
add
rolb
fistpl
add
add
add
sub
pop
call
push
push
lea
push
call
add
stos
ljmp
add
shll
addl
add
push
mov
add
add
add
gs
add
push
xchg
add
cld
fstpl
lret
add
jmp
mov
mov
lock
add
nop
add
fsubrs
jns
notb
addr16
int
in
lahf
mov
hlt
pop
push
call
push
lea
push
lea
push
push
lea
push
call
pop
add
pop
lods
add
xchg
je
aam
pop
add
cmpsl
add
imul
js
incb
shl
add
adcb
cmc
add
test
lret
push
add
add
lock
xchg
add
add
add
add
xchg
addl
test
in
in
pop
jmp
push
lea
push
push
lea
push
lea
push
push
push
call
add
cmc
push
add
popa
ret
add
sti
rolb
add
add
test
out
in
add
add
mov
sub
pop
ret
push
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
test
add
push
add
pop
lods
mov
jns
add
jbe
in
add
add
lock
mov
add
xchg
mov
push
mov
in
fdivr
lcall
inc
hlt
mov
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
popf
add
add
add
repnz
add
add
add
je
jne
mov
imul
xchg
loope
mov
insb
negb
jmp
mull
pop
add
mov
shl
in
fdivr
lcall
pop
in
push
push
push
push
push
push
push
call
add
bound
xchg
add
lahf
add
rcrb
out
pop
sti
jmp
call
add
into
fyl2x
add
fldcw
jmp
in
in
add
push
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
add
imul
add
add
cld
fwait
popa
test
pop
shlb
add
add
add
add
lret
fnsetpm(287
add
cmp
add
add
xchg
jo
test
insb
add
add
movsb
mov
ret
lea
add
xor
adc
es
lods
push
sub
inc
sub
add
push
sub
add
ror
not
sub
not
add
pop
shl
pop
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
push
mov
cli
mov
rcrl
loope
jmp
mov
add
shrb
mov
add
add
xlat
xlat
add
add
add
push
lock
mov
scas
sub
pop
pushl
push
push
lea
push
push
push
lea
push
push
call
mov
cli
mov
fistpll
mov
add
loop
add
jl
add
pushf
push
sbbb
pop
add
add
mov
xorb
in
call
push
push
push
push
push
push
call
jns
out
add
add
xchg
movsl
cmpsl
add
mov
insb
roll
add
lcall
xchg
add
add
les
add
add
add
add
add
add
add
add
inc
lock
push
push
push
push
push
push
push
push
push
push
call
add
loopne
insb
jecxz
adcb
fwait
test
mov
mov
add
fcompl
test
leave
rolb
les
enter
add
add
mov
add
shl
add
add
loop
add
dec
sahf
jp
mov
add
in
fcomps
inc
call
call
jecxz,pt
push
call
mov
add
xchg
cltd
jo
mov
xchg
jae
mov
add
sbbl
jnp
ret
icebp
pop
push
les
test
mov
leave
xchg
add
call
pop
mov
lea
push
push
call
pushf
add
arpl
scas
cmc
incb
add
hlt
fiadds
add
rolb
in
add
add
int
cmpsl
add
add
pusha
mov
add
jne
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
scas
add
fsts
add
incb
lahf
add
out
mov
pusha
add
frstor
add
shll
add
add
push
popa
into
leave
add
test
add
add
mov
hlt
push
add
add
data16
add
data16
add
sub
pop
pushl
push
lea
push
push
push
call
add
add
bound
xchg
arpl
add
into
aam
in
mov
mov
clc
mov
pop
call
push
push
push
push
push
push
lea
push
push
push
call
icebp
in
add
add
addr16
add
mov
add
lea
mov
add
add
mov
lcall
jne
pushl
push
push
push
push
lea
push
push
push
call
add
sarb
incb
mov
mov
add
add
js
adcl
add
pop
add
mov
sub
pop
call
push
push
lea
ror
push
sub
add
add
add
sub
xor
dec
pop
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
call
ror
imul
std
add
popl
rcl
add
add
loop
movsl
add
fadds
pop
jne
aad
add
jecxz
sub
pop
pushl
call
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
lcall
mov
ja
popa
cmp
add
add
add
pushf
jle
movsb
jae
add
nop
rolb
mov
add
addl
add
data16
add
ljmp
shrl
in
loopne
lcall
inc
push
push
ror
shr
shl
add
push
push
pop
add
shr
rol
lea
xor
sub
xor
inc
pop
add
xor
pop
push
push
push
push
lea
push
lea
push
push
call
add
pop
call
push
rcl
mov
mov
add
push
mov
add
insb
add
add
push
add
insb
add
add
lock
leave
cltd
mov
add
jecxz
rolb
fdivl
sub
pop
push
push
push
push
push
push
push
call
aam
add
add
xchg
add
mov
lret
lock
xchg
add
mov
out
into
pop
test
call
rclb
add
cmpsb
push
push
push
push
lea
push
push
call
insb
pop
pop
push
mov
addr16
test
mov
add
add
add
xchg
add
add
xchg
mov
add
sti
clc
add
add
test
fwait
mov
cld
add
fildl
mov
add
add
ret
add
ljmp
loopne
mov
push
push
push
call
into
jae
lock
roll
add
out
mov
xchg
cltd
add
jmp
add
enter
mov
add
xchg
add
add
cmc
add
add
mov
jno
jae
cli
jo
add
xchg
out
aam
in
hlt
lcall
push
push
push
push
lea
push
call
pop
add
loop
aad
scas
mov
fisttpl
add
lods
rclb
add
add
add
push
pop
jno
add
jo
push
bound
add
mov
jp
imul
add
pop
add
mov
test
add
add
push
add
mov
in
lcall
push
push
push
push
push
push
call
fwait
bound
imul
mov
add
addb
add
in
xchg
pushf
cwtl
push
add
fidivs
pushf
add
cli
pop
bound
add
jns
push
add
add
call
add
push
push
lea
push
call
in
add
add
jo
add
add
add
add
add
add
add
loop
add
test
pop
xlat
add
fildll
mov
out
add
popa
xchg
mov
hlt
pop
add
add
push
push
lea
push
push
lea
push
push
call
add
ljmp
jno
jbe
lcall
add
add
add
add
jb
shrb
add
add
add
fwait
mov
mov
push
add
jge
pusha
aam
test
xchg
add
jno
sub
pop
mov
xor
push
push
push
push
push
push
push
lea
push
call
shrb
mov
add
add
shll
outsl
popa
iret
fadds
add
test
add
ret
push
add
xchg
pop
add
add
in
cmpsl
enter
pop
add
in
loopne
lcall
jne
push
push
push
push
push
push
push
call
out
ret
mov
call
faddl
loope
push
mov
add
add
jge
mov
js
mov
add
lcall
push
lea
push
push
call
mov
add
add
add
lret
add
icebp
add
stos
add
add
test
mov
push
add
add
sti
mov
sub
pop
mov
xor
push
push
push
lea
push
push
lea
push
push
call
imul
mov
mov
addr16
icebp
add
push
add
pop
add
add
in
add
les
out
lret
add
add
add
add
imul
imul
out
sub
pop
add
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
in
in
add
ljmp
mov
mov
jmp
add
add
ret
addb
repnz
add
js
jne
add
addr16
add
lcall
push
lea
push
push
push
push
push
lea
push
push
push
push
call
int
fstp
add
cld
push
xchg
xchg
add
add
mov
add
hlt
xchg
mov
mov
lret
mov
mov
add
loopne
push
lret
add
fidivs
add
leave
mov
xchg
jp
testl
fdivr
lcall
dec
add
icebp
xor
adc
mov
out
lock
push
call
add
clc
mov
xchg
lods
add
movsl
mov
cmc
xchg
push
mov
movsb
add
cld
xlat
mov
mov
add
cwtl
addb
movsb
add
jo
add
add
arpl
add
mov
add
enter
add
jo
add
add
add
push
pop
call
clc
lcall
push
push
push
push
push
push
push
lea
push
call
lods
xchg
addr16
test
add
jns
add
xlat
push
popf
fildl
xchg
add
mov
add
data16
add
jb
push
mov
stc
scas
add
mov
xchg
push
lods
jne
pusha
add
jl
jb
movsb
xchg
popa
push
outsl
icebp
sahf
in
fs
mov
sub
pop
mov
xor
push
push
lea
push
lea
push
push
push
push
lea
push
call
test
cmc
jge
loope
lods
lret
pop
add
testb
fs
add
add
xchg
aad
add
add
add
add
pop
push
add
add
stos
add
add
movsb
add
mov
enter
out
rolb
add
jl
add
pop
add
sub
pop
sub
push
push
push
lea
push
push
push
push
call
xchg
mov
mov
xchg
fildl
add
add
rorb
test
cmpsl
add
in
add
add
lds
jnp
popa
add
test
mov
add
add
add
xchg
add
add
pop
mov
add
in
add
movsl
nop
sub
pop
pop
push
push
lea
push
push
push
push
push
push
push
push
call
ret
jmp
jns
mov
mov
add
add
jns
scas
pop
jbe
add
test
cmpsb
test
mov
mov
pop
imul
jns
insb
mov
add
stc
mov
mov
rep
push
push
push
push
push
push
push
push
push
call
cmc
add
push
add
clc
out
mov
int
add
add
push
mov
popa
add
jge
pop
je
add
in
out
add
add
mov
jge
add
pusha
addb
jno
in
fdivr
lcall
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
ret
aad
insb
shl
cwtl
add
mov
add
add
add
push
leave
add
out
xchg
nop
lds
add
mov
test
add
pop
add
add
add
add
add
imul
sub
pop
mov
add
push
push
push
push
push
lea
push
call
add
add
sarl
add
add
cmpb
mov
jl
pushf
mov
add
divb
les
add
add
loope
aam
add
js
add
add
cltd
test
mov
pop
add
sub
pop
add
push
push
push
push
push
call
rolb
add
rolb
add
xchg
rolb
imul
add
flds
in
lret
add
icebp
add
add
mov
pop
add
add
add
cli
mov
clc
ja
mov
add
add
lcall
mov
call
add
add
push
push
lea
push
push
push
push
push
lea
push
call
add
addb
js
lea
mov
test
pusha
scas
jmp
add
cwtl
sahf
mov
add
add
loopne
push
jb
fdivrp
mov
clc
lcall
xchg
movl
add
add
sub
pop
mov
push
push
push
call
in
sti
add
add
loopne
lods
mov
add
add
add
jnp
fldl
lods
add
int
jno
add
mov
add
add
add
add
xchg
fs
push
xchg
add
add
xchg
popf
shrb
lret
add
mov
mov
cltd
mov
lods
add
add
xchg
mov
clc
lcall
add
push
push
lea
push
lea
push
push
lea
push
push
push
call
jo
lods
push
xchg
lds
outsl
popf
test
insb
lret
fnstcw
add
lds
mov
xchg
les
sahf
iret
cld
pushf
jmp
lods
hlt
add
std
add
movb
in
out
add
add
add
add
loope
int3
add
nop
jae
sub
pop
add
push
push
push
lea
push
push
push
push
call
add
add
add
testb
add
fiaddl
add
add
add
push
add
lcall
fiaddl
xchg
add
jno
lcall
push
and
repnz
adc
inc
pushf
daa
add
inc
add
add
icebp
cmpsb
cmpsb
addb
add
loope
jl
xchg
arpl
add
xchg
mov
cwtl
nop
bound
add
rclb
stos
pop
pop
mov
add
mov
enter
push
mov
hlt
cmpsb
sub
pop
mov
push
push
push
lea
push
push
push
call
xchg
mov
jnp
pop
mov
add
jmp
add
add
ljmp
sub
fdivrs
xchg
fcmovu
pop
add
lcall
or
push
push
lea
push
push
call
mov
out
pop
push
mov
gs
add
xchg
add
push
mov
mov
add
pop
add
mov
add
add
add
mov
lcall
les
add
push
push
push
call
mov
cltd
add
loope
scas
in
fwait
jecxz
jle
scas
scas
in
add
add
add
in
ja
jmp
add
pop
add
negl
enter
jb
add
addb
sti
pop
add
add
jmp
cwtl
add
stos
mov
gs
faddl
lcall
ret
sti
lea
push
push
push
push
lea
push
call
add
in
xchg
vpcmpgtw
insb
out
add
add
stos
push
add
mov
test
add
fsubrp
add
fcmovb
movl
add
mov
pop
add
cltd
add
add
add
add
jle
jb
add
mov
add
rorl
stos
push
not
shr
push
and
add
add
add
dec
sub
sub
lea
lea
pop
sub
pop
push
push
push
call
xchg
pusha
add
insb
lcall
add
add
mov
push
js
add
roll
movsb
hlt
add
lret
add
je
cli
imul
out
ficoml
mov
roll
lcall
add
xchg
add
test
mov
add
add
lcall
jne
push
push
lea
push
call
lcall
add
cwtl
jle
add
xchg
loop
xlat
ficomps
add
mov
xchg
add
add
jl
mov
add
cmpsb
lahf
addr16
lret
clc
rorb
add
add
add
add
pop
call
push
lea
push
push
push
push
push
push
call
aam
lret
js
rcrl
fldl
loope
add
addr16
add
add
popl
loope
jae
popa
cmc
movsl
jmp
add
jne
mov
add
add
mov
add
add
add
add
add
add
xlat
add
rorb
mov
lcall
add
cmc
repnz
push
not
ror
push
xor
add
inc
sub
inc
inc
shl
pop
sub
not
pop
push
push
push
call
add
add
les
push
add
add
jns
add
cmpsb
add
addr16
frstor
leave
add
add
add
add
int
add
push
add
xchg
add
push
add
pop
add
cmc
xlat
push
scas
jl
popl
push
mov
mov
ljmp
add
mov
sub
pop
push
push
push
lea
push
push
push
call
jle
add
testl
add
add
mov
add
mov
fnstcw
add
add
out
jns
rolb
cmpsl
add
sahf
mov
js
pushf
mov
scas
sub
pop
call
mov
push
lea
push
call
add
add
out
mov
lcall
popa
cltd
mov
add
mov
jae
pop
shll
mov
add
mov
insb
stos
add
add
mov
stos
jb
add
add
fyl2x
xchg
mov
stc
movsb
fiadds
add
lret
in
clc
pop
push
push
push
push
push
call
push
jno
pop
jmp
mov
cwtl
xchg
add
pop
add
push
jmp
mov
leave
add
mov
add
movsb
ja
jmp
arpl
lcall
pop
hlt
add
push
push
push
push
push
call
lea
add
add
in
add
add
add
jp
mov
add
imul
add
aad
add
fldl
add
cld
push
stos
add
out
mov
pop
add
add
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
repnz
flds
xchg
les
mov
jmp
add
rcl
add
pop
add
popf
stos
std
jo
test
scas
add
popf
add
jmp
lcall
in
fcompl
jae
xor
push
push
push
call
js
add
add
add
push
subb
les
sub
movsb
sti
add
lcall
add
sub
pop
add
push
push
call
pop
clc
pop
mov
mov
mov
je
add
push
add
add
fucomi
pop
jno
call
add
imul
add
sub
pop
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
add
lret
mov
popf
hlt
add
call
add
je
add
mov
xchg
roll
mov
add
push
testl
add
js
jb
add
in
loopne
mov
xor
push
push
push
push
push
call
mov
test
stos
add
mov
add
ret
cld
add
test
fdivs
jp
fildl
mov
addb
add
mov
add
test
add
incb
fadds
lcall
lock
sub
lea
pop
pop
push
sub
pop
mov
push
push
push
push
call
fildl
scas
add
add
add
xchg
neg
cwtl
add
filds
jle
mov
add
movsb
sub
add
jno
mov
jge
add
in
add
mov
aam
xchg
lret
add
add
add
add
add
enter
sub
pop
xor
push
push
push
push
push
lea
push
lea
push
call
push
add
add
incb
insb
imulb
add
add
cmp
jo
add
push
in
mov
insb
test
add
add
icebp
test
jmp
jge
jnp
mov
in
in
add
push
xor
pop
rep
mov
xor
push
inc
pop
or
je
push
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
add
jmp
jae
add
pop
add
popf
push
mov
int
add
add
jbe
pop
cmpsl
mov
add
roll
stc
add
add
pop
push
aad
in
add
or
ja
push
sub
pop
mov
xor
push
push
call
add
jno
lret
mov
ja
bound
xchg
xchg
cmc
lods
push
pop
jns
mov
add
add
add
add
pop
add
jmp
mov
add
mov
fs
add
sub
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
call
cwtl
add
fcmove
add
add
add
add
add
add
stc
popa
add
lds
fiaddl
sub
pop
xor
push
push
push
push
push
push
push
push
push
call
add
pop
stos
add
add
xchg
mov
add
xchg
add
faddl
in
stos
lock
test
add
add
add
jmp
jp
add
jnp
add
enter
jns
rorl
icebp
pop
mov
add
add
cld
stc
mov
add
nop
stos
pop
jl
popl
push
add
jecxz
sub
pop
add
push
ror
pop
add
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
mov
add
push
add
mov
add
rcl
scas
add
leave
xorb
sub
add
mov
jl
sti
outsl
add
flds
mov
add
fstps
cmpb
push
mov
pop
sub
pop
add
push
xor
pop
push
mov
push
push
push
push
push
push
call
jbe
je
xchg
add
add
in
std
insb
add
scas
add
jne
out
add
add
ja
rolb
push
ficompl
add
stc
gs
repnz
scas
jecxz
aad
lret
cmpsb
mov
pop
jge
add
add
in
pop
xchg
pop
push
rolb
lcall
add
push
push
push
push
call
cmc
add
jo
jnp
add
imul
into
add
mov
std
loope
add
fucomi
xchg
add
pop
fcomip
loop
lock
lods
jl
pop
add
mov
pop
lods
aam
add
add
mov
cli
fldl
mov
mov
mov
pop
add
push
pop
add
pop
push
shr
shr
shl
pop
rep
push
push
lea
push
push
push
push
push
call
mov
jno
xchg
xchg
mov
add
add
jp
sahf
stos
stc
pop
in
mov
movsb
pusha
pop
add
jb
lcall
push
add
add
add
push
add
test
fcomip
jmp
loope
add
std
add
add
rolb
sub
pop
mov
xor
push
push
call
je
add
fiadds
mov
test
add
lds
xchg
add
push
leave
add
jmp
add
scas
loopne
into
add
lahf
leave
add
test
add
fwait
mov
jge
ret
add
stos
add
jmp
sub
pop
or
je
mov
push
push
push
push
push
push
push
push
push
call
jge
out
scas
xchg
jb
add
out
addb
add
fs
add
mov
icebp
pop
lods
add
in
cwtl
movsb
add
mov
mov
add
clc
push
add
add
out
addl
add
push
cmpsw
add
test
add
lcall
sub
shr
add
ror
pop
add
push
ror
sub
shr
pop
rep
push
push
push
lea
push
push
lea
push
push
push
push
push
call
jns
lock
add
popf
jecxz
add
testb
add
rolb
add
add
cltd
mov
arpl
add
sub
pop
pop
push
push
sub
not
push
push
pop
add
xor
dec
sub
sub
pop
sub
pop
push
lea
push
push
push
push
push
push
lea
push
call
add
add
add
jnp
lds
shll
not
movsb
js
sti
leave
pop
mov
call
add
add
clc
ljmp
add
add
lcall
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
rcrl
add
add
add
xchg
idivl
jne
add
xchg
xlat
add
popf
jmp
lret
mov
scas
pop
add
mov
mov
mov
scas
movsl
in
mov
mov
push
push
call
mov
test
in
add
add
add
add
add
add
loopne
iret
pop
divb
js
add
add
add
popa
mov
add
add
mov
mov
add
push
stos
add
xchg
add
mov
xchg
add
add
insl
hlt
push
push
push
lea
push
push
push
push
push
push
push
call
add
pop
gs
add
mov
push
add
mov
push
add
add
rcr
add
int
add
rclb
mov
add
xlat
shl
add
test
sub
pop
mov
push
push
push
lea
push
push
lea
push
call
roll
mov
lods
mov
cld
add
push
add
xchg
add
test
lret
ror
add
add
mov
push
jmp
add
xchg
addr16
add
mov
add
add
add
lahf
add
sub
pop
jmp
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
fsubs
xchg
idivb
push
add
add
pop
add
add
mov
add
pop
mov
cmc
add
cli
push
test
add
add
add
fwait
xchg
movsl
fsubl
mov
add
in
fdivr
lcall
push
dec
pop
mov
add
push
lea
push
call
push
pop
cwtl
add
flds
mov
add
mov
into
loopne
add
mov
add
mov
add
cmpsb
pop
cmpsb
add
fadds
add
add
sarb
repnz
add
iret
imul
scas
add
add
push
push
push
push
push
push
push
lea
push
call
xchg
add
addl
insb
mov
lcall
add
add
les
nop
test
ret
addb
pop
lahf
add
add
cmc
add
mov
add
add
xchg
pop
push
add
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
mov
sarb
pop
mov
stos
add
icebp
pop
addr16
fisubrl
add
xchg
jge
mov
add
stc
sub
pop
push
push
push
xor
shr
add
dec
pop
mov
push
lea
pop
pop
pop
push
shl
pop
pop
pop
push
sub
not
pop
leave
ret
push
push
push
lea
push
push
lea
push
push
push
call
add
xlat
add
jne
add
add
aam
ja
pop
lcall
add
add
nop
lret
fsts
in
loopne
push
push
add
shr
shr
pop
mov
add
push
pop
push
push
push
push
push
lea
push
lea
push
push
call
shl
scas
std
insb
movb
repnz
mov
imul
rorb
scas
cli
push
push
loop
mov
pusha
add
rcrl
add
mov
pop
xchg
addl
in
in
lcall
push
inc
pop
push
push
push
xor
xor
add
pop
movl
addl
push
lea
pop
test
je
mov
push
push
push
push
lea
push
push
push
call
add
mov
data16
add
jle
pop
mov
add
popf
stos
out
clc
add
add
shr
mov
add
jne
pop
sub
pop
pop
push
sub
add
add
sub
pop
pop
push
lea
push
push
call
add
mov
add
out
add
jge
add
imul
add
mov
mov
cmpb
add
add
out
pusha
add
popa
data16
add
lcall
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
lahf
js
iret
pop
add
fsubrs
popf
xchg
popf
test
stc
xchg
jge
lret
mov
add
mov
add
pop
in
add
add
mov
into
add
add
repnz
add
jge
cltd
test
fstl
stos
pop
loopne
add
stc
in
pushf
popl
lcall
push
inc
pop
ret
push
lea
rol
xor
pop
push
push
not
pop
mov
add
push
rol
sub
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
popl
add
mov
les
rcrb
lods
add
leave
popf
add
mov
jp
cmpsb
pop
add
add
add
add
add
mov
add
out
pop
lods
xchg
sub
pop
push
push
push
lea
pop
push
push
lea
push
push
push
push
call
add
mov
add
add
push
add
mov
ret
xchg
add
add
jecxz
add
in
movsl
lahf
addl
in
pop
testl
push
push
push
call
rorb
add
rorb
popf
aad
nop
jae
add
push
out
pop
add
pop
add
cmpsl
add
add
mov
test
add
xchg
cmpsb
add
std
fildl
lcall
inc
or
push
xor
rol
dec
pop
push
call
push
push
push
push
push
push
lea
push
push
call
mov
add
add
scas
rcrb
outsl
add
add
push
mov
add
into
add
add
mov
add
cmpsl
stos
add
pop
addl
add
add
jno
cwtl
out
push
mov
stos
mov
js
sti
mov
fldt
add
add
test
in
loopne
lcall
inc
cld
push
push
push
push
call
in
movl
add
add
add
enter
mov
icebp
add
add
ficoml
cld
pop
xchg
mov
mov
mov
in
int3
jle
cli
fcmovb
cld
jl
scas
jl
add
lock
pushl
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
add
popf
mov
mov
idiv
outsl
add
jns
fstpl
ljmp
pop
push
push
push
push
call
add
add
add
add
addr16
pop
jno
movsl
cli
mov
mov
testl
push
xchg
aad
add
cld
add
lea
add
call
cmpl
jne
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
roll
fldl
adcb
mov
mov
jb
add
cmpsb
add
into
arpl
add
std
arpl
xchg
mov
int
sahf
pop
add
ret
pop
add
add
leave
add
mov
add
test
jnp
add
pop
pop
pop
push
push
lea
push
push
call
add
push
leave
add
jbe
fnstsw
add
add
add
pop
nop
cli
push
add
add
cli
add
xlat
imul
add
ljmp
ffreep
iret
out
push
jns
int3
aam
addb
mov
push
jno
jl
pop
mov
nop
cmpsl
add
filds
add
in
lock
pop
push
inc
pop
pop
leave
push
push
push
push
push
lea
push
push
push
call
outsl
pop
test
incb
push
fnstenv
xlat
add
mov
mov
call
add
add
add
xchg
test
lods
sub
pop
ret
push
push
push
push
push
lea
push
push
push
push
call
mov
mov
mov
xchg
add
add
add
loop
rcrl
mov
add
add
jmp
fstp
mov
jge
mov
fiaddl
add
inc
xchg
add
pop
add
xchg
add
add
mov
test
push
jl
push
incb
mov
jge
icebp
add
mov
loop
sub
pop
mov
push
lea
push
push
call
add
shll
test
add
add
mov
ret
outsl
call
mov
add
cmpsb
fs
test
add
add
add
lcall
cld
push
push
shr
shr
sub
pop
push
push
add
sub
shl
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
stos
add
add
aam
add
jnp
add
andl
lods
iret
xchg
pop
cltd
lods
add
xchg
add
mov
jbe
add
fs
mov
aam
fwait
test
rcrb
mov
icebp
jle
push
stc
add
add
fwait
sar
add
push
add
sub
pop
push
movl
push
shr
sub
lea
pop
push
call
push
lea
pop
push
call
push
add
add
lea
pop
subl
push
xor
pop
cmpl
jne
push
push
call
add
add
in
insb
add
cli
fnstsw
xlat
add
add
call
add
pop
mov
stc
add
add
int3
out
add
stos
add
arpl
xchg
add
movsl
in
add
add
cmc
out
add
add
lret
add
add
mov
add
add
add
popf
mov
iret
shl
add
lcall
pop
push
add
sub
ror
sub
pop
pop
push
push
push
push
push
push
call
arpl
add
pop
std
data16
out
lret
cli
jp
add
jle
lret
add
cmpsb
pop
jle
rcll
add
add
add
add
dec
push
arpl
jnp
ljmp
out
add
add
add
lcall
push
push
push
call
pop
call
into
in
add
imul
idivl
outsl
pop
je
int
mov
icebp
jnp
add
iret
add
fdivrs
loop
imul
mov
cwtl
add
mov
add
ret
lock
add
movl
add
hlt
lcall
ret
push
not
pop
push
mov
push
rol
ror
pop
add
push
pop
push
push
ror
not
pop
push
push
sub
pop
push
push
add
sub
not
dec
pop
push
push
push
lea
push
push
lea
push
call
add
imul
call
add
jne
sahf
pop
lcall
mov
add
add
hlt
add
nop
add
add
iret
mov
jle
mov
ja
push
add
add
add
add
loop
add
add
pop
mov
xchg
add
cmpsl
push
enter
in
pop
mov
lea
push
rol
ror
xor
pop
sub
push
push
lea
push
push
call
add
rclb
pop
shrb
add
jns
add
add
add
xchg
xchg
add
std
add
nop
add
test
add
lods
aad
mov
lcall
roll
add
add
add
mov
faddl
sub
pop
mov
push
push
push
push
push
call
enter
ljmp
mov
nop
pop
int3
push
mov
aad
rolb
pusha
jnp
add
add
jns
push
add
add
xchg
mov
pop
shr
push
push
push
push
push
lea
push
push
push
push
call
movb
imul
mov
decb
push
add
fsubrl
add
jno
flds
mov
scas
push
lds
add
fcoms
jp
add
std
andb
add
pushf
out
pop
addl
sub
pop
add
mov
push
xor
xor
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
pop
pusha
add
flds
add
pushf
jb
add
jo
add
mov
xchg
add
add
scas
lock
add
sar
mov
add
push
push
add
xchg
add
push
add
ljmp
mov
movsb
mov
add
add
mov
add
arpl
lds
insb
xchg
add
add
add
push
lea
push
push
push
lea
push
lea
push
push
push
call
jle
xchg
add
push
movsl
add
mov
add
add
mov
enter
out
sarl
lahf
push
jge
pop
add
add
add
add
add
add
loopne
mov
mov
push
push
push
push
call
test
loopne
add
xchg
add
add
loope
add
fildl
stc
add
loopne
add
pop
std
addr16
add
add
add
add
shl
xlat
movl
lods
sub
add
mov
stc
mov
pusha
add
mov
add
jno
mov
mov
add
lods
add
pop
sub
pop
cmp
jne
cmp
jne
push
ror
rol
add
pop
mov
movl
push
push
lea
push
lea
push
push
push
push
lea
push
call
ljmp
add
push
mov
pop
add
add
add
mov
mov
lock
ljmp
cld
add
int3
add
les
sti
push
add
push
add
jmp
add
lahf
add
mov
in
loopne
jmp
push
add
inc
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
add
pop
mov
subl
mov
ljmp
lock
add
mov
roll
xchg
shr
xlat
mov
pushf
out
mov
add
pusha
aam
mov
jmp
lret
add
add
insb
mov
loop
mov
shrb
add
int3
mov
in
fcompl
push
or
adc
test
add
push
xor
not
not
not
pop
mov
movl
push
push
push
push
push
push
call
add
jl
rcrb
hlt
add
fsubp
xchg
add
mov
stc
mov
std
lods
stos
loopne
imull
incb
pop
add
stc
mov
add
add
add
lods
stc
add
add
in
call
add
mov
push
shr
lea
dec
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
bound
bound
add
lret
lods
je
mov
add
subl
clc
cwtl
add
mov
out
add
xchg
mov
push
add
cmc
std
cmpsb
add
mov
add
add
mov
sahf
add
in
add
jmp
lods
add
add
addl
lcall
cli
add
test
add
mov
push
sub
pop
movl
jmp
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
imul
pop
in
add
sahf
outsl
pop
test
loope
mov
imul
in
loopne
mov
push
shl
rol
rol
pop
cmpw
jne
push
lea
push
push
push
push
push
push
push
push
call
mov
cwtl
add
jp
add
add
add
add
push
frstor
lods
add
rcrb
shll
or
lahf
popa
add
movsl
out
xchg
mov
popa
pusha
add
in
out
fildl
icebp
xchg
fdivr
lcall
inc
adc
add
not
shl
pop
jmp
pushl
push
add
shl
xor
pop
pop
push
push
push
call
cwtl
add
pusha
scas
add
mov
mov
mov
out
lock
out
scas
testb
add
push
imul
inc
or
lea
push
push
push
call
out
les
add
lea
divb
stc
add
js
add
mov
mov
push
cltd
ficompl
add
add
roll
xchg
pop
push
sub
pop
mov
mov
push
push
dec
dec
push
or
inc
add
sub
sub
shl
pop
shr
pop
push
push
push
lea
push
push
push
push
call
add
pop
popa
add
mov
int
scas
fwait
insb
lahf
add
xchg
add
stos
ret
add
xlat
add
popf
mov
jge
xchg
pushf
add
push
add
xchg
rol
mov
add
mov
add
testb
pop
push
push
shl
pop
call
cmpl
je
push
push
rol
ror
ror
shr
push
or
inc
add
sub
inc
add
pop
xor
sub
pop
push
dec
pop
push
push
push
call
xchg
add
add
add
fs
je
jo
shr
hlt
in
xchg
add
add
popa
mov
add
push
add
jle
cltd
lods
add
in
clc
lcall
cltd
cmp
add
into
rcrb
js
int3
fldz
ret
dec
or
add
fdivrl
push
add
add
sub
push
xor
add
shl
sub
inc
sub
ror
sub
inc
pop
shr
shl
sub
dec
pop
push
lea
pop
push
call
push
lea
push
push
push
push
call
add
add
add
add
xchg
add
add
add
fiadds
mov
jge
mov
add
jne
push
cld
roll
add
add
add
rolb
lods
jnp
sub
pop
cmpl
je
push
push
add
push
or
inc
add
shl
rol
sub
shl
rol
add
pop
inc
pop
push
push
push
push
lea
push
push
call
add
add
add
mov
insb
jno
mov
add
sarb
in
fst
push
add
add
pusha
push
add
call
xchg
add
mov
ret
pop
hlt
jae
popa
sub
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
jo
clc
movb
pop
add
add
or
add
ficoml
pop
add
add
add
add
cmpsl
andb
add
add
gs
jnp
add
add
lcall
repz
add
or
test
das
jge
mov
lods
addr16
jecxz
push
and
add
add
sub
lea
sub
lea
dec
pop
xor
pop
push
lea
ror
lea
pop
push
call
push
push
push
push
call
add
add
add
std
mov
add
lcall
je
in
jae
cld
jle
out
add
add
aam
add
add
add
test
xchg
nop
push
out
add
lcall
fcoml
jle
enter
test
lds
add
xchg
add
mov
add
lock
lcall
cmp
rol
je
push
push
shr
xor
ror
push
and
add
add
ror
sub
inc
shl
not
sub
pop
add
dec
pop
push
push
push
push
push
call
popf
ja
jp
add
add
pusha
add
add
add
fs
testl
popa
scas
test
jbe
pop
xchg
js
pop
pushf
push
shll
movsb
repnz
rolb
jecxz
add
movb
lret
lcall
add
lcall
push
shl
sub
pop
call
push
push
push
push
lea
push
push
push
lea
push
call
test
xlat
xchg
jae
stos
lods
cmpsb
add
add
mov
xchg
add
add
add
add
add
pop
add
add
call
flds
test
add
add
rolb
fildl
outsl
add
add
cwtl
add
add
add
je
jnp
xchg
mov
in
loopne
lcall
cmp
or
int3
je
push
push
sub
lea
push
push
pop
add
add
sub
pop
xor
pop
push
shl
pop
push
call
push
push
lea
push
push
push
push
push
push
push
push
call
add
jge
add
imul
mov
add
hlt
mov
imul
push
repnz
add
add
add
test
add
roll
add
add
test
add
cmp
or
int3
je
push
push
sub
ror
ror
push
and
add
rol
sub
pop
xor
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
in
xchg
fdivs
add
add
ret
outsl
pop
mov
add
jecxz
lahf
add
add
in
fcompl
push
push
push
push
push
lea
push
push
call
insb
add
ljmp
push
add
hlt
add
in
cwtl
call
mov
cld
fadds
mov
add
add
add
call
push
push
push
push
push
push
push
push
push
push
call
add
add
test
hlt
aad
mov
push
js
add
add
add
stos
out
xchg
loope
pop
lahf
add
push
data16
add
test
mov
idiv
stc
sbbl
add
in
fdivr
lcall
js
int3
fldz
ret
int3
add
add
inc
mov
ror
ror
sub
push
push
pop
add
rol
not
sub
rol
lea
pop
sub
xor
lea
pop
push
shl
add
rol
pop
push
push
push
push
push
push
push
call
pushf
jbe
movsl
loope
ret
pop
xchg
add
add
out
fidivl
add
push
out
rol
stos
add
popl
add
test
mov
fldln2
addb
add
add
fs
push
xor
inc
shr
pop
cmpl
je
push
push
lea
push
xor
add
add
inc
sub
add
rol
lea
sub
pop
not
pop
push
push
push
push
push
call
add
add
add
lds
filds
mov
in
testb
rolb
add
add
mov
push
mov
add
in
add
lahf
mov
sub
pop
push
call
push
rol
lea
add
pop
cmpl
je
push
push
lea
lea
push
xor
add
shl
sub
shr
shr
shr
ror
pop
xor
inc
pop
push
add
pop
push
push
push
push
call
add
orl
mov
add
add
movsb
rcr
cld
loope
jns
add
sti
mov
mov
jge
test
push
add
add
mov
sub
pop
call
push
inc
pop
cmpl
je
push
push
dec
push
push
pop
add
inc
shl
sub
xor
ror
inc
pop
rol
pop
push
add
pop
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
imul
stc
call
add
add
fs
ja
mov
lock
mov
add
pop
pop
loope
add
add
push
add
add
cld
leave
add
add
gs
mov
add
arpl
add
push
lods
das
dec
push
push
lea
push
push
push
push
push
push
call
add
lcall
pop
pusha
add
add
xchg
add
lret
ret
mov
fldl
jmp
ret
mov
add
add
lret
jno
add
add
lahf
sub
pop
cmpl
je
push
push
ror
lea
shr
push
or
inc
add
shl
add
sub
sub
ror
shl
pop
shl
not
pop
push
push
call
push
hlt
mov
mov
mov
add
cmpsl
add
add
add
add
lret
pop
add
add
add
cmc
add
add
hlt
jecxz
add
add
add
add
sti
add
push
shr
pop
call
push
rol
pop
cmpl
jne
push
shl
not
pop
mov
push
push
push
call
add
add
jo
add
imul
xchg
jo
add
push
addr16
add
mov
roll
insb
iret
lds
add
push
scas
imul
loopne
stc
fisubrs
sub
pop
movl
push
push
push
call
pop
into
iret
flds
add
lea
enter
add
add
add
cmc
push
add
int
imul
add
push
add
jo
add
xor
push
push
lea
push
push
push
push
push
push
push
call
pusha
pop
int
mov
add
sti
add
add
roll
add
repnz
add
add
add
add
aam
add
add
mov
add
jle
add
add
pop
fistpl
pop
movsl
pushf
add
leave
add
jge
sub
pop
pop
push
ror
sub
pop
pop
push
pop
pop
push
push
call
add
lahf
filds
add
fstpl
test
add
out
rol
xchg
loope
jmp
cltd
bound
add
add
add
add
ljmp
add
out
mov
add
lret
movsl
data16
add
je
xchg
add
xchg
add
mov
add
mov
in
clc
lcall
push
shr
ror
shr
pop
leave
push
lea
dec
pop
ret
push
push
sub
pop
mov
push
xor
inc
pop
add
cmpl
jne
push
push
not
push
or
inc
add
add
sub
sub
shr
pop
dec
pop
push
inc
not
sub
pop
pushl
push
lea
not
pop
call
push
inc
add
shl
pop
push
push
xor
pop
call
jmp
push
lea
push
push
push
call
in
loopne
pop
aad
rorl
pop
cmc
add
add
lcall
add
mov
push
add
je
rclb
pop
add
add
ja
loope
add
out
loope
mov
add
data16
add
jecxz
add
int
add
fildl
xchg
jo
add
jge
add
test
add
push
push
push
lea
push
lea
push
push
push
call
scas
add
popa
add
movsl
add
loopne
mov
xchg
cmc
add
leave
jbe
lret
pop
lds
clc
add
add
add
jnp
repnz
int
xchg
xchg
push
add
fstpt
roll
in
in
lcall
jge
add
add
push
rol
rol
pop
mov
push
push
push
lea
push
push
call
mov
loop
push
add
push
push
popa
mov
in
add
add
in
add
lods
lock
jl
jb
test
outsl
add
cmpsl
jp
add
icebp
add
hlt
cmpsb
cwtl
xchg
out
idivb
add
add
lcall
mov
add
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
out
push
add
add
push
subb
je
mulb
movsb
mov
stos
fs
cmpsb
pushf
in
int3
mov
cmc
lcall
add
add
add
mov
add
jae
add
add
sub
pop
ret
push
xor
sub
dec
pop
jmp
cmpl
jne
push
push
shl
ror
not
push
or
not
add
lea
dec
ror
sub
not
pop
dec
dec
pop
push
lea
push
lea
push
push
lea
push
call
shl
add
movsb
add
add
cmpsl
push
xchg
jl
jp
mov
add
mov
add
add
fwait
add
js
add
cmc
add
lret
add
mov
cmpsl
add
std
xchg
add
jno
sub
pop
pushl
push
xor
lea
pop
call
push
ror
add
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
popf
aam
mov
add
mov
xchg
add
cmc
lods
jecxz
add
sbb
push
mov
add
add
jl
add
addr16
cltd
in
jp
sub
pop
call
push
lea
sub
pop
jmp
push
shr
shr
pop
cmpl
jne
mov
push
lea
push
push
push
lea
push
push
push
lea
push
call
jmp
add
iret
add
add
add
jbe
pop
gs
idivl
mov
mov
push
add
add
popl
push
mov
push
add
add
push
int3
add
xorl
add
add
jo
mov
mov
cmpsb
add
sub
pop
mov
push
push
push
shr
not
lea
shl
push
or
inc
add
sub
add
shl
sub
add
shl
pop
not
add
pop
push
lea
push
push
push
lea
push
lea
push
call
imul
add
jge
out
addb
add
mov
gs
add
jge
mov
imull
test
add
add
add
hlt
add
add
add
add
mov
call
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
jns
add
mov
push
jnp
cwtl
add
add
add
popa
add
mov
add
fs
pop
call
push
xor
pop
call
push
push
add
sub
push
push
pop
add
sub
pop
ror
pop
push
push
lea
push
lea
push
call
les
xchg
add
add
add
fimull
mov
add
add
stc
add
lea
xchg
mov
loopne
add
adcl
mov
in
lock
pushl
push
add
xor
rol
pop
call
push
push
push
lea
push
push
push
push
push
push
push
call
pop
pop
mov
cli
in
jge
add
fwait
xchg
jecxz
add
fldl
imul
mov
push
add
call
movsb
add
jae
rcl
add
jnp
add
lcall
shrb
pop
sub
rorb
or
inc
add
not
add
dec
shr
sub
add
sub
pop
add
pop
push
push
push
push
push
call
mov
pop
add
add
scas
fs
andb
enter
add
mov
add
add
jge
popa
sub
pop
pushl
call
push
push
lea
push
push
push
push
push
push
lea
push
call
pop
add
cmpb
insb
add
add
jp
stos
add
outsl
jge
addb
pop
mov
add
scas
mov
mov
mov
mov
mov
add
xchg
lea
push
pop
lea
mov
add
pop
cwtl
add
aam
add
push
add
addb
jae
out
pop
sub
pop
call
push
push
inc
inc
push
xor
add
rol
sub
ror
pop
rol
lea
rol
not
pop
push
push
lea
push
call
fsts
lods
ffreep
gs
shr
mov
cwtl
out
mov
add
add
add
add
add
xchg
add
hlt
pop
pushl
push
dec
inc
add
pop
call
call
push
push
push
xor
add
shl
shl
shr
sub
lea
pop
shr
sub
inc
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
add
xchg
jns
mov
add
roll
push
add
mov
test
loop
add
push
subl
mov
add
lods
add
cltd
xchg
into
add
fwait
add
mov
fcomi
imul
add
loope
in
add
xchg
fsub
cwtl
loope
mov
pop
add
pop
mov
lcall
jne
push
push
push
push
push
push
call
jns
add
mov
flds
subl
add
data16
sahf
outsl
mov
int
repnz
mov
loopne
add
imul
add
int3
add
add
add
xchg
add
popa
add
les
add
add
add
call
push
add
lea
pop
call
push
push
add
xor
dec
push
or
not
add
add
add
shl
lea
sub
add
inc
pop
ror
xor
ror
dec
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
rcr
fmulp
add
mov
test
lcall
add
lret
add
push
add
add
add
add
add
add
cli
add
cli
add
sub
pop
pushl
call
push
push
call
add
adc
jmp
std
xchg
add
lods
out
mov
push
loope
repnz
jns
addb
imul
push
xchg
ret
add
pop
arpl
add
scas
jl
std
add
test
jge
add
mov
add
jmp
add
lcall
shrb
mov
pop
push
sub
inc
add
push
sub
add
shr
inc
not
dec
sub
shr
pop
rol
add
dec
pop
push
push
lea
push
push
lea
push
push
push
call
add
add
movsb
add
add
add
mov
mov
add
mov
mov
js
add
ficoms
fstps
loop
fdivrl
leave
mov
push
in
in
lcall
jne
push
push
push
push
push
lea
push
push
call
add
mov
mov
nop
add
fidivs
add
mov
push
pop
leave
loope
test
repnz
add
sti
push
add
mov
fst
cmpsb
add
mov
loopne
add
stos
test
jmp
add
flds
add
mov
jecxz
lock
test
clc
add
jnp
sub
pop
call
call
push
push
rol
shr
push
or
inc
add
rol
shr
sub
add
sub
not
ror
sub
pop
add
sub
pop
push
pop
pushl
push
rol
pop
call
push
inc
shr
pop
call
push
push
lea
xor
push
push
pop
add
xor
shr
sub
lea
pop
dec
xor
pop
push
shl
xor
pop
pushl
call
push
push
lea
push
push
push
push
push
push
push
call
mov
pop
add
popf
cwtl
sbbb
xchg
cmc
push
out
push
sahf
add
lods
cwtl
push
add
cld
addl
aam
cli
mov
in
fdivr
lcall
shrb
xor
push
or
inc
add
shl
lea
inc
sub
add
pop
shr
pop
push
lea
push
push
push
lea
push
lea
push
push
call
mov
test
mov
add
loopne
add
cmpsb
mov
jno
arpl
add
push
jbe
push
add
mov
fdivl
add
add
add
add
ficompl
roll
sub
pop
pushl
push
sub
pop
call
push
push
push
push
push
call
push
cltd
add
testb
xchg
repnz
add
add
add
jnp
test
add
add
aad
movl
call
mov
fldt
fs
push
push
call
mov
popf
leave
fiaddl
fcom
rcrb
add
add
add
mull
cmpsl
ljmp
jl
fdivr
add
mov
add
add
add
testl
jo
jo
push
push
push
push
push
push
push
lea
push
call
add
shll
xlat
jo
and
add
push
add
add
mov
add
shll
cmc
add
pop
add
scas
add
ret
sub
pop
call
push
push
dec
not
add
push
or
inc
add
add
lea
add
not
sub
rol
dec
pop
rol
not
pop
push
add
xor
not
pop
pushl
push
sub
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
call
cmpsl
add
add
enter
add
ret
int
loope
xchg
cwtl
testl
push
fiaddl
xchg
add
stos
add
add
add
test
call
add
in
fdivr
lcall
shrb
mov
iret
jns
xor
add
shl
sub
shl
not
lea
shr
pop
lea
pop
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
lods
push
test
mov
mov
add
fiadds
mov
nop
add
add
addb
add
add
add
jp
cltd
add
jne
push
lea
push
push
call
lcall
mov
mov
bound
ja
add
add
add
call
lea
mov
into
add
icebp
mov
jge
add
add
add
mov
add
add
mov
stc
add
shl
aam
js
push
add
add
pop
sub
pop
call
call
push
push
dec
lea
ror
rol
push
or
inc
add
lea
sub
not
sub
rol
pop
add
shr
add
pop
push
add
pop
pushl
push
shr
pop
call
push
lea
push
push
push
push
call
add
shll
mov
shr
jae
add
lods
movl
xchg
hlt
add
add
pusha
cwtl
add
add
mov
add
pop
leave
mov
cmpsb
out
pop
add
mov
gs
movsl
add
fwait
push
loop
add
les
shrb
lods
addb
rol
sub
add
shr
push
xor
add
add
sub
lea
lea
not
not
pop
rol
add
pop
push
push
push
push
call
popf
add
stos
add
add
mov
orb
popa
mov
jae
add
jo
add
mov
add
xchg
add
jne
push
sub
pop
call
push
push
add
sub
push
xor
add
shr
sub
pop
lea
inc
dec
pop
push
push
ror
add
push
or
not
add
rol
sub
add
inc
pop
sub
sub
pop
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
addl
out
add
mov
imul
add
add
lret
add
add
mov
stc
push
add
lret
ljmp
scas
mov
scas
mov
add
add
in
loopne
lcall
rcrb
push
push
push
call
add
lret
mov
enter
rcrb
gs
add
les
pushf
cmpsb
lcall
add
scas
movsb
imul
add
jne
push
push
dec
inc
shr
push
or
not
add
inc
ror
sub
shl
rol
not
pop
shl
sub
pop
push
push
push
push
call
popl
test
std
add
scas
xchg
mov
add
ja
xchg
add
out
mov
jno
add
mov
add
lahf
add
pushf
add
lods
out
nop
add
add
add
xchg
test
fadds
clc
mov
add
pop
lods
add
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
call
add
add
mov
pop
add
add
add
add
roll
icebp
add
mov
std
mov
add
add
lock
popf
pop
fiadds
test
add
call
lea
push
not
ror
ror
pop
push
push
xor
not
xor
pop
push
push
push
add
sub
ror
rol
pop
push
call
push
inc
add
pop
call
push
push
sub
push
and
add
sub
sub
shl
shr
pop
add
shr
not
xor
pop
push
add
pop
pushl
push
sub
add
pop
call
push
sub
xor
lea
pop
push
push
push
push
push
push
push
push
call
jns
add
jno
add
add
js
add
add
sti
mov
pop
roll
add
mov
flds
jo
add
lds
push
push
add
jl
add
add
js
mov
imul
push
cld
std
test
mov
movb
enter
in
call
mov
push
push
add
push
or
not
add
inc
sub
inc
pop
inc
shl
pop
push
lea
push
push
lea
push
push
call
jp
jmp
scas
ja
icebp
in
add
stos
xchg
mov
out
add
lret
add
add
mov
in
pop
pushl
push
lea
push
push
push
lea
push
push
push
call
xchg
mov
jecxz
lcall
leave
insb
filds
mov
add
jp
gs
push
sub
pop
call
lea
push
push
push
push
call
add
add
loop
int
jl
mov
add
add
mov
add
call
add
mov
bound
add
movb
pop
push
push
push
push
push
push
push
push
push
push
push
call
roll
xchg
aad
add
mov
add
fprem1
add
add
into
icebp
scas
insb
out
popf
add
fcompl
add
pop
roll
scas
mov
icebp
add
sub
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
add
out
add
jno
xchg
add
outsl
fisubs
add
add
push
pop
cmc
xchg
add
int3
jo
test
loope
lods
test
pop
push
call
push
lea
push
call
cmpb
mov
roll
loopne
add
add
data16
add
js
fwait
jo
add
mov
orb
mov
cltd
out
jge
add
add
add
mov
add
sub
pop
lea
push
push
inc
push
xor
add
shl
inc
not
xor
sub
add
pop
xor
sub
sub
pop
push
push
push
push
push
lea
push
push
call
in
add
imull
cld
js
add
add
add
add
scas
add
jl
iret
popa
pusha
sub
pop
pushl
push
ror
pop
call
push
push
call
add
pop
outsl
iret
pop
jae
gs
imul
jge
add
aad
add
add
sahf
add
add
movb
xchg
add
call
xchg
add
sub
pop
push
push
push
call
add
add
add
add
add
add
pop
add
jecxz
add
add
cwtl
test
cli
mov
add
sub
pop
call
push
push
shl
push
xor
add
add
lea
add
sub
sub
xor
pop
add
shr
pop
push
push
lea
push
lea
push
push
call
test
add
divb
cli
sti
icebp
in
mov
add
sti
in
lea
add
pop
pop
mov
push
jne
push
scas
xlat
test
pop
add
add
shl
push
fiaddl
bound
mov
add
xchg
mov
lcall
jne
call
push
shr
ror
not
pop
call
mov
push
push
push
push
push
push
lea
push
push
push
call
add
aad
xchg
pop
jno
add
add
fwait
int3
jae
pop
mov
shr
add
pop
add
roll
mov
hlt
fld
add
cld
mov
jge
cmpb
mov
ror
fwait
ljmp
fmuls
add
popf
mov
bound
lods
jmp
insb
mov
lcall
pushf
and
ljmp
mov
mov
rol
rol
rol
push
sub
add
dec
sub
sub
shl
add
shl
pop
add
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
loopne
out
cwtl
add
fisubrs
jns
in
add
bound
xchg
stos
add
mov
add
fidivs
add
pop
add
pop
ret
mov
les
push
mov
add
add
add
jae
jb
add
lcall
jne
call
push
add
shl
rol
sub
pop
lea
push
push
add
not
pop
push
push
lea
push
push
call
pusha
mov
pop
mov
push
testb
mov
mov
cmc
xchg
add
mov
add
add
add
addl
mov
xchg
imul
sahf
sub
pop
push
pushl
push
push
shr
push
or
inc
add
inc
lea
sub
shl
pop
sub
pop
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
testl
fcmovnbe
add
add
xchg
mov
lods
add
mov
add
cli
pushf
pop
add
add
loopne
add
insb
mov
pop
push
push
push
push
push
call
les
popf
ja
in
add
scas
mov
add
add
mov
push
push
int3
test
stc
add
mov
lahf
lahf
mov
flds
add
ljmp
fldcw
popa
add
ljmp
lods
jl
rcl
scas
xchg
add
lcall
shrb
adc
rclb
add
mov
or
rol
add
sub
inc
not
pop
add
xor
inc
pop
push
ror
pop
pushl
push
push
lea
push
call
pushf
add
fidivl
repnz
pop
mov
movsl
fadds
push
out
cwtl
cmpsb
movl
mov
add
mov
add
jecxz
add
add
sti
add
test
add
push
add
call
push
shl
ror
pop
push
push
lea
push
push
call
mov
add
jp
roll
out
lahf
nop
add
imul
pop
testl
jmp
add
faddl
add
xlat
pop
scas
popf
shl
in
gs
add
jle
add
insb
push
add
popf
jns
cld
add
hlt
pop
call
push
push
shr
not
dec
push
push
pop
add
not
ror
sub
sub
ror
pop
dec
pop
push
sub
rol
pop
pushl
push
push
push
push
push
push
call
add
lock
outsl
lret
flds
in
out
lret
add
add
add
jmp
cld
add
push
loope
imul
jge
add
sbbb
imul
add
fwait
test
xchg
add
add
cltd
std
stos
add
lahf
sub
pop
call
push
lea
push
push
lea
push
lea
push
push
call
clc
addb
fildl
out
add
lret
pusha
push
addr16
add
add
add
add
out
arpl
push
mov
int3
add
sub
pop
call
jmp
push
rol
inc
pop
pushl
mov
push
not
pop
jmp
push
push
ror
push
or
inc
add
xor
ror
sub
shl
xor
dec
pop
add
pop
push
push
call
add
addb
cmpsl
add
add
arpl
in
in
fwait
push
add
mov
stos
idiv
filds
out
scas
shll
add
mov
in
clc
lcall
jne
push
sub
xor
dec
pop
call
push
lea
push
push
lea
push
push
push
push
call
leave
add
add
cltd
jnp
mov
push
fiadds
add
add
pop
loope
pop
mov
out
mov
add
stos
xchg
add
add
push
hlt
pop
add
add
test
repnz
leave
pop
add
add
mov
xchg
sub
pop
push
call
push
push
sub
sub
shl
lea
push
and
add
add
sub
ror
shl
pop
shl
pop
push
sub
not
add
pop
pushl
call
push
dec
sub
ror
pop
push
push
shr
add
dec
sub
pop
call
push
not
sub
lea
pop
leave
add
push
push
push
call
std
addb
cld
jl
cltd
popf
add
add
cmpsl
xlat
pushf
lret
add
out
out
imul
add
popl
hlt
add
mov
add
add
lcall
test
add
testb
add
add
add
clc
push
add
mov
add
add
icebp
cli
lods
mov
lcall
pop
push
lea
push
lea
push
push
lea
push
call
out
add
leave
add
add
pop
popf
fildl
add
cltd
mov
ljmp
faddl
mov
in
add
pusha
jb
add
push
pop
add
fimull
jmp
cld
push
add
mov
repnz
mov
sub
pop
pop
push
pop
xor
push
dec
sub
sub
pop
inc
push
lea
push
push
call
add
movsl
mul
push
add
add
data16
lret
test
andl
add
stos
in
add
jecxz
lret
jne
jecxz
stos
mov
int3
add
lea
add
add
add
add
sub
pop
ret
push
push
lea
push
push
lea
push
push
push
push
push
push
call
iret
outsl
push
imul
add
add
add
outsl
add
add
xchg
add
rcr
push
int3
xchg
add
xchg
add
xchg
test
add
rolb
ja
add
sub
pop
leave
push
pop
ret
push
xor
lea
rol
pop
push
push
lea
dec
pop
mov
push
inc
pop
cmpl
jne
push
push
lea
push
lea
push
push
push
push
call
xchg
out
lret
add
add
add
add
add
cmp
add
out
add
jmp
add
add
add
loop
cmpl
add
out
cwtl
mov
jb
jmp
lea
addl
scas
movsb
fadds
mov
sub
pop
mov
jmp
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
lret
gs
add
cltd
scas
add
add
in
pop
jb
gs
scas
add
decb
xchg
lock
call
xchg
add
in
jns
add
js
pusha
mov
in
fcomps
inc
or
loopne
push
pop
xor
push
dec
sub
dec
pop
xor
push
push
push
push
push
lea
push
push
call
fidivrl
mov
xchg
lret
faddl
jb
mov
mov
loop
add
add
stos
je
add
data16
add
ljmp
add
add
cld
add
in
in
lcall
rolb
push
lea
push
push
lea
push
lea
push
push
push
call
jo
jecxz
add
add
add
outsl
add
add
mov
add
jge
insb
rcrl
js
add
jbe
ljmp
xchg
jns
jecxz
add
add
sub
pop
xor
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
test
jnp
add
insb
add
mov
movsl
push
bound
add
jno
add
xchg
add
pop
out
add
add
add
add
add
add
mov
mov
pop
dec
push
push
push
lea
push
push
call
test
int
ja
add
xchg
add
add
xchg
lret
add
add
ljmp
outsl
add
jge
push
cltd
add
add
mov
jmp
js
xchg
add
pop
addl
aam
in
in
lcall
jmp
push
push
push
push
lea
push
push
push
push
push
push
call
add
ljmp
push
jns
add
jne
add
add
add
out
add
xchg
ret
in
out
int3
movb
out
add
out
fbstp
aad
add
movsb
lods
icebp
add
out
add
add
add
add
mov
movsb
lods
in
mov
pop
jmp
push
sub
pop
sub
push
not
add
lea
pop
pushl
push
shl
dec
ror
pop
pop
push
shl
pop
sub
cmp
jne
push
push
push
push
call
pusha
add
add
add
mov
jge
push
pop
std
add
pop
jl
popf
flds
mov
add
in
add
repnz
jb
ljmp
lcall
enter
push
lea
push
push
push
call
add
xchg
iret
add
add
test
add
add
fldl
add
add
add
jecxz
mulb
jmp
xchg
test
xchg
cwtl
test
mov
push
add
fsub
movsb
add
jmp
add
add
add
mov
mov
jmp
xchg
add
jl
add
sarb
add
xchg
add
test
xchg
jb
add
stos
ret
in
cwtl
std
sub
pop
mov
push
push
call
xchg
lods
les
push
add
add
mov
data16
cli
mov
bound
aad
add
lret
add
movsl
mov
add
add
std
mov
mov
ljmp
add
add
ret
cld
cltd
jl
icebp
push
add
mov
add
add
sub
pop
shr
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
mov
jmp
scas
add
push
add
sahf
add
add
add
add
add
add
test
add
lcall
enter
out
aad
sub
pushl
push
push
push
lea
push
push
push
lea
push
call
add
lret
roll
add
stc
push
xchg
shr
jo
xchg
roll
add
add
add
data16
fadds
add
shl
lea
in
pop
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
rcrl
movb
pop
add
add
jmp
add
jne
jl
mov
add
mov
mov
mov
add
push
xchg
lods
jl
xchg
add
add
loop
pushf
mov
sub
pop
shr
push
add
pop
and
sub
push
push
push
push
push
push
push
push
push
call
add
add
test
into
cli
add
push
push
add
xchg
lahf
movb
xchg
ljmp
movsl
xchg
ja
jp
popa
fwait
mov
mov
add
add
fwait
mov
mov
pusha
sub
pop
cmp
jne
leave
push
ror
shl
pop
ret
push
push
push
push
push
push
push
push
call
fdivrl
mov
jecxz
mov
cltd
into
cmc
add
jle
stos
cmpsl
pop
push
cwtl
repnz
add
add
popf
imul
add
stos
add
add
add
mov
add
add
stos
add
push
add
push
add
jne
add
xchg
rolb
rcrb
imul
in
in
lcall
in
push
inc
add
xor
pop
add
push
lea
push
push
push
push
call
add
jecxz
mov
add
add
add
add
rclb
add
add
add
add
out
enter
pop
add
jle
add
xchg
mov
xchg
push
gs
pop
addr16
sahf
in
add
cwtl
mov
lcall
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
filds
jno
cmpsl
cmpsb
ja
andb
aad
lods
add
fwait
add
fucomp
jnp
mov
pop
movsb
xchg
outsl
pop
push
ret
add
add
ja
add
gs
addl
pop
push
push
inc
rol
sub
pop
push
push
add
inc
pop
push
push
sub
not
xor
pop
mov
push
ror
pop
lea
push
lea
push
push
push
call
leave
add
imul
addr16
add
mov
in
add
add
add
mov
add
jmp
add
sub
pop
sub
mov
push
push
call
in
test
add
jns
jbe
pusha
scas
jae
mov
add
add
add
push
add
add
js
jne
imul
out
add
mov
add
add
ljmp
sub
push
push
push
push
lea
push
push
call
jbe
add
stos
xchg
arpl
clc
ja
loop
jae
pusha
lcall
std
test
add
push
sti
push
leave
push
jo
add
data16
add
jmp
add
outsl
add
shlb
mov
ja
pop
mov
add
sub
pop
add
push
push
push
push
push
push
lea
push
push
lea
push
call
jno
push
xlat
add
add
mov
add
int3
loop
add
add
add
sti
cltd
jge
pop
add
in
lret
test
cltd
cmpsl
xchg
lock
fdivr
jge
incb
jle
add
arpl
jge
rcrb
add
shll
in
fdivr
lcall
fwait
addb
add
pop
or
ror
sub
pop
mov
push
shr
ror
xor
sub
pop
add
push
shr
shr
dec
ror
pop
xor
push
push
push
push
lea
push
lea
push
lea
push
call
sahf
mov
cld
loope
add
lret
add
test
add
stc
add
push
add
add
stos
popf
add
outsl
add
aam
lcall
iret
add
movsb
cltd
popf
imull
movsl
fnstenv
add
mov
add
sub
pop
mov
push
shl
add
shr
pop
and
push
lea
push
push
push
call
add
add
add
add
jae
mov
add
fildl
add
mov
mov
test
add
add
add
pusha
movsb
mov
ficoml
ljmp
pop
mov
add
mov
add
testl
rcl
insb
add
in
lock
lcall
rolb
push
push
push
call
push
cmc
repnz
push
add
add
add
add
lods
mov
add
imul
movsl
cwtl
addl
cmpsl
int
add
leave
push
fcmove
pop
int
insb
xchg
insb
xchg
xlat
push
mov
add
add
test
mov
add
pop
rol
xor
push
push
lea
push
push
lea
push
push
push
push
push
push
call
fs
add
push
in
lcall
pop
mov
mov
mov
nop
lret
jle
pop
testb
add
mov
cmc
push
negl
add
movsb
ja
js
faddl
jp
enter
fs
mov
add
iret
ja
scas
pop
add
add
push
push
lea
push
push
lea
push
push
call
mov
push
add
addl
add
popf
add
add
add
jns
add
nop
mov
add
mov
in
ljmp
ficomps
scas
xchg
mov
add
int3
pop
flds
shl
add
push
add
pusha
mov
add
add
movsb
call
add
call
jne
push
push
push
call
int
out
add
loopne
sahf
add
enter
add
mov
add
fcomip
roll
add
leave
stc
add
add
cmpsl
mov
fldl
add
in
hlt
pop
add
push
pop
cmp
je
push
not
pop
add
push
push
call
add
hlt
mov
add
fiaddl
bound
stos
popa
lcall
arpl
out
ljmp
xchg
testl
fldl
add
out
fldt
add
jbe
add
sub
pop
cmpl
jne
xor
push
shr
sub
rol
pop
pop
push
add
pop
pop
push
push
push
push
push
push
call
jl
xlat
call
add
add
add
mov
add
add
mov
add
pusha
cwtl
outsl
jb
add
mov
pop
add
rcrl
add
int3
jae
add
cmpsl
jns
add
in
in
call
push
push
lea
push
push
push
lea
push
call
div
add
mov
add
add
mov
or
add
add
call
mov
loope
xchg
push
add
add
pop
add
add
jne
loope
jp
add
xchg
add
iret
add
mov
xchg
add
in
loopne
pop
push
lea
push
push
push
push
push
call
add
lcall
jecxz
add
jne
add
add
mov
in
out
mov
push
add
add
js
add
data16
fsubs
jb
mov
add
mov
add
sub
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
addl
add
mov
xchg
push
pop
add
push
les
fsubr
pop
cli
lret
mov
mov
call
add
loope
add
add
pop
scas
insb
add
add
add
in
jl
add
flds
jmp
xor
imul
add
add
push
ror
pop
ret
push
add
pop
mov
push
push
lea
push
lea
push
call
push
add
add
add
mov
mov
mov
vandnps
cli
pop
add
fsubs
add
add
add
outsl
data16
lcall
push
or
leave
lea
push
push
lea
push
lea
push
push
call
mov
add
shlb
add
jb
mov
add
addl
add
push
add
loopne
pop
add
lahf
xchg
imul
cmc
pop
sahf
add
xchg
ret
mov
push
push
fildl
sub
pop
push
mulw
push
sub
rol
pop
pop
push
lea
push
call
out
mov
add
add
sti
cmc
add
jb
add
negb
add
add
add
jl
pop
repnz
add
nop
mov
cwtl
xchg
mov
add
add
mov
xchg
xchg
mov
out
add
add
xchg
jae
add
push
roll
imull
in
clc
pop
call
push
push
push
push
push
push
push
push
push
push
call
ljmp
into
push
mov
lcall
add
sti
add
fistps
add
add
into
jns
add
add
push
mov
add
roll
pop
push
push
push
push
push
lea
push
call
mov
movsb
xchg
mov
xchg
clc
add
loop
add
add
cwtl
loope
mov
add
add
mov
cmpsb
lahf
mov
movl
jb
cmpsl
xchg
pop
call
xor
push
add
pop
pop
push
sub
sub
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
call
js
add
pop
loope
add
add
add
mov
nop
out
mov
jns
add
add
sub
pop
pop
pop
push
push
push
lea
push
push
call
addb
add
test
in
pushf
fiaddl
pop
int3
add
out
in
mov
les
add
popf
mov
mov
pop
jp
jbe
lds
add
clc
cld
add
pop
xchg
add
lock
push
stos
ret
sub
pop
pop
leave
push
lea
push
call
jecxz
mov
fsts
test
jne
add
mov
ja
in
loopne
add
in
add
push
add
out
add
xchg
pop
mov
add
sub
pop
ret
push
push
push
push
lea
push
push
push
push
call
add
stos
ja
add
ljmp
add
add
lds
jbe
jnp
add
out
insb
add
jo
mov
mov
aam
sub
pop
push
mov
push
pop
add
push
pop
push
push
push
push
push
push
push
lea
push
push
call
imul
test
add
add
mov
lcall
fldcw
add
cli
cmpsb
aam
div
lahf
jle
lea
rcl
pop
xlat
xchg
movb
push
scas
cmpsl
mov
add
add
add
push
add
scas
in
rcll
lcall
push
shr
add
lea
ror
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
pop
and
add
pop
jge
out
mov
lcall
add
lods
cwtl
jecxz
sti
stc
mov
cltd
add
add
mov
push
fwait
push
mov
popa
add
mov
add
mov
aam
mov
icebp
mov
addb
or
roll
fldt
fstps
push
push
push
push
lea
push
push
push
call
add
aad
add
jo
add
addr16
fldl
pop
xchg
push
add
ja
jno
add
cmpsl
shrb
imull
negl
pop
addl
pop
testb
in
in
mov
jne
add
les
fdivl
enter
in
in
lcall
push
push
lea
push
push
push
push
lea
push
call
mov
jne
sti
add
jno
push
bound
out
add
jnp
add
nop
int3
jns
add
fwait
mov
rorl
in
add
hlt
cltd
hlt
int
add
jno
ficoms
add
gs
add
roll
add
out
in
in
lcall
push
cmp
ljmp
rcrl
adc
xchg
jae
sbbb
push
lea
push
push
lea
push
lea
push
push
push
call
imul
xchg
add
add
add
add
add
pop
ljmp
aad
add
std
xchg
addb
into
lret
sub
pop
shr
add
push
pop
mov
push
sub
add
pop
add
push
lea
shl
sub
pop
pushl
popl
push
not
xor
inc
xor
pop
mov
push
push
call
mov
cwtl
pop
add
mov
add
pop
imul
add
enter
mov
popf
add
add
mov
add
mov
cmpsl
xchg
clc
jmp
cwtl
pop
rcl
add
test
int
add
push
fldcw
aad
loope
add
data16
lcall
stc
push
ror
not
pop
xor
push
lea
pop
lea
mov
push
xor
inc
pop
add
push
shr
ror
pop
xor
rol
push
add
pop
nop
nop
push
not
pop
xor
nop
push
push
push
lea
push
push
call
fs
add
iret
mov
add
scas
cwtl
xchg
mov
lods
je
add
add
pop
add
lods
push
add
fwait
push
lock
and
add
lock
les
add
mov
bound
imul
add
add
pusha
add
add
add
add
out
lahf
add
add
add
nop
inc
push
rol
pop
nop
push
add
rol
pop
nop
cmpb
jne
push
lea
push
lea
push
call
pop
cltd
pop
add
mov
test
add
xchg
add
lret
add
cmpsb
cwtl
add
add
loop
roll
add
push
add
subb
add
rolb
pop
add
add
add
fistps
add
data16
add
ja
add
add
lcall
inc
pop
ss
push
add
ror
xor
add
pop
nop
push
push
lea
push
lea
push
call
mov
pop
add
add
roll
add
mov
push
fildll
add
add
add
hlt
add
add
mov
pop
xlat
jb
icebp
gs
add
nop
cmp
je
push
not
lea
pop
nop
push
shr
shr
pop
nop
inc
push
pop
nop
push
rol
pop
nop
push
add
sub
sub
pop
cmp
jb
push
add
pop
xor
push
push
push
push
push
push
push
lea
push
push
call
cmc
add
push
add
hlt
mov
push
push
jecxz
add
add
loop
add
scas
xchg
push
sti
add
out
repnz
sub
pop
jmp
push
push
call
loope
fld
add
xchg
add
push
movsl
add
add
pop
xchg
add
popl
add
pop
mov
jecxz
repnz
sti
xchg
mov
add
lcall
push
and
rcll
lea
push
push
push
push
push
call
imul
jb
add
add
add
jp
add
add
mov
mov
in
jne
loopne
jbe
lods
add
pusha
jns
add
cltd
add
scas
ror
push
add
add
add
jecxz
cwtl
cwtl
rcr
add
add
cmpsl
add
mov
jae
add
call
add
sub
pop
movzwl
push
lea
push
call
add
mov
jbe
jle
enter
add
pop
add
add
mov
add
test
add
movsb
fadds
mov
add
add
xlat
call
ret
add
add
add
stos
jo
ja
mov
lret
push
mov
mov
add
add
inc
sbb
dec
pop
add
push
ror
inc
pop
mov
push
lea
shl
ror
sub
pop
xor
push
lea
push
push
call
add
jecxz
push
add
jmp
jae
add
pop
mov
imull
push
sbbb
stos
scas
lret
cmpsb
mov
mov
loopne
mov
push
enter
jae
jle
add
sub
pop
xor
push
dec
pop
shl
push
sub
inc
shl
pop
xor
shl
push
push
push
lea
push
push
push
call
pop
mov
push
lds
jmp
js
pop
ljmp
lods
pop
add
add
add
cld
in
int3
add
xor
shl
push
ror
ror
pop
xor
mov
push
sub
pop
add
push
xor
not
shr
add
pop
pop
push
shr
add
xor
pop
pop
push
sub
pop
pop
push
rol
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
fnclex
push
add
xchg
mov
out
std
loopne
imul
sarb
jnp
movsb
lea
fdivr
lcall
push
push
lea
push
push
push
push
call
add
icebp
icebp
shll
test
add
add
add
xchg
int
in
push
sbbb
add
pop
fwait
add
in
jne
out
addb
in
call
ret
push
push
call
int3
add
mov
add
mov
movsb
fistpll
jmp
add
push
lcall
rolb
jmp
rolb
mov
add
ja
add
jb
lds
add
sub
pop
push
mov
push
lea
push
lea
push
push
call
mov
add
add
add
aad
xchg
in
add
addl
add
cmpsb
xchg
add
shlb
movsl
cli
addb
cmc
add
mov
sti
push
sub
pop
push
push
not
add
add
ror
pop
push
push
push
shr
pop
push
push
push
lea
push
lea
push
push
push
call
push
lock
lock
loop
add
pop
add
add
add
xchg
add
popf
jae
add
repnz
sub
pop
mov
mov
push
shr
sub
inc
inc
pop
mov
push
add
not
add
add
pop
test
je
push
shr
xor
pop
mov
push
push
lea
push
call
jl
imul
stos
imul
popf
add
lds
mov
cmc
push
add
jmp
mov
out
stos
stc
add
add
mov
jbe
les
mov
scas
mov
mov
add
sub
pop
test
je
push
dec
sub
not
pop
mov
push
push
lea
push
push
push
push
push
push
call
call
in
add
mov
enter
imul
call
jl
add
add
pushf
jno
in
push
add
std
mov
stos
out
aad
imul
add
add
jb
add
lock
lcall
dec
or
push
push
push
push
push
push
lea
push
lea
push
call
rcr
add
add
pusha
cmc
cmpsb
mov
enter
movsl
rolb
cltd
jl
add
add
add
add
icebp
jmp
in
add
in
fcompl
pop
push
dec
add
dec
rol
pop
inc
cmp
je
push
lea
push
push
push
push
push
call
fchs
mov
data16
testl
add
mov
cmpsl
roll
arpl
out
xchg
add
add
fists
icebp
stos
push
mov
pop
movsb
ror
cmpsb
mov
mov
addl
in
call
test
je
mov
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
gs
stc
push
add
mov
scas
add
call
je
lods
add
add
fiaddl
test
add
fwait
add
add
sub
pop
inc
cmp
je
push
dec
pop
test
jne
push
push
push
call
add
call
rolb
push
xchg
push
scas
cmc
sarl
add
hlt
out
cltd
add
flds
mov
out
aad
popa
add
add
add
mov
push
add
add
add
jno
mov
add
jno
jmp
add
fwait
ljmp
add
xor
push
push
call
xlat
add
jecxz
mov
add
lods
add
cmpsb
add
bound
add
cli
add
fcoms
enter
push
shlb
lahf
test
push
jae
xchg
jb
insb
jb
mov
mov
add
mov
add
test
pop
pop
mov
sub
pop
pop
pop
push
sub
pop
pop
pop
push
ror
shr
xor
rol
pop
leave
ret
push
not
inc
dec
pop
mov
push
push
push
push
push
lea
push
push
lea
push
call
in
add
add
add
add
add
sti
ret
lret
popa
add
add
add
add
xchg
pop
std
add
ret
adcl
lds
mov
fsubs
int
mov
sub
pop
inc
cmp
jne
push
sub
lea
dec
pop
lea
push
sub
pop
mov
push
rol
sub
add
pop
test
je
push
sub
pop
mov
push
shl
pop
add
push
push
push
push
lea
push
call
jnp
push
add
aam
int
outsl
add
add
add
pop
add
add
cltd
add
pop
add
add
jecxz
rcr
jnp
sub
pop
cmp
jne
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
ljmp
fdivrl
push
push
add
jmp
test
add
add
push
add
add
fsubrl
mov
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
lock
mov
jmp
mov
cltd
push
add
xchg
nop
add
add
faddl
jae
addb
pop
pop
shr
shl
mov
sub
pop
test
je
push
sub
rol
lea
pop
mov
add
push
lea
push
push
push
lea
push
push
push
call
pushf
imul
add
add
add
outsl
add
insb
subb
pop
add
add
leave
add
pop
jecxz
add
add
add
xchg
xchg
add
add
add
add
loop
cmc
add
add
jge
jae
cwtl
add
in
in
lcall
loopne
test
call
pop
jmp
push
push
push
lea
push
push
call
add
add
jo
sti
lret
lret
int
test
leave
add
add
add
mov
pop
add
push
out
add
fcmove
sti
add
add
int3
stos
add
pop
iret
jle
imul
add
add
in
pop
xor
pop
push
push
push
push
call
add
shlb
add
jae
add
add
loopne
pushf
add
add
jo
enter
in
add
add
test
rcll
add
add
out
fwait
test
stos
sti
add
mov
jae
movb
lahf
ja
testb
add
add
lcall
pop
push
push
lea
push
lea
push
push
call
mov
add
mov
add
jb
leave
pop
pop
add
notl
add
fadds
add
add
lds
push
enter
mov
add
movsl
add
add
lret
lods
sub
pop
pop
push
push
lea
push
push
push
push
call
add
push
jmp
add
jl
cmc
add
add
popl
add
les
cmpsl
add
add
pop
add
sub
pop
leave
push
push
call
add
imul
add
je
add
pushf
rcl
add
stc
add
add
add
std
pop
fwait
sub
pop
ret
push
push
push
lea
push
push
lea
push
lea
push
push
call
rolb
fs
lds
push
stos
jle
xchg
addl
add
add
add
movl
add
stc
pushf
clc
sub
pop
lea
push
sub
pop
pop
pop
push
xor
pop
pop
pop
push
add
inc
shl
pop
leave
ret
push
push
push
push
push
lea
push
call
mov
movsl
push
test
add
ret
pop
add
int3
in
jge
xlat
test
add
sub
pop
mov
push
inc
lea
pop
pop
push
push
push
push
push
push
call
std
add
add
shll
add
rcrb
shrb
add
test
out
add
shlb
push
add
bound
add
scas
add
mov
nop
loop
ret
sub
pop
pop
push
add
ror
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
jno
lret
lret
add
je
add
ljmp
add
xlat
add
mov
imul
data16
push
mov
add
push
notb
lcall
pop
push
push
lea
push
push
lea
push
push
lea
push
call
cwtl
fistpl
add
add
mov
jmp
mov
les
add
js
add
jge
add
jo
test
test
sub
pop
leave
ret
xor
cmp
ja
cmp
xor
adc
and
adc
cmp
add
cmp
sbb
cmp
xor
adc
jb
adc
mov
add
add
sarb
rorb
pop
push
les
jno
sbb
push
xchg
je
scas
loope
scas
scas
shl
inc
xor
insl
test
sbb
jle
stos
sbb
inc
mov
mov
imul
xor
and
jmp
ret
stos
adc
loopne
jnp
test
push
enter
push
mov
mov
pop
in
adc
jns
jge
xor
cmpsb
ljmp
xchg
aam
fidivrl
in
and
jb
gs
dec
std
mov
iret
push
jl
push
cmp
adc
xchg
add
rclb
sbb
shlb
inc
addl
sti
jo
sub
mov
sarl
outsb
leave
aas
adcl
mov
fcom
mov
cmp
inc
inc
mov
out
xlat
mov
mov
negb
insl
inc
mov
adcl
pop
test
int3
cmpsl
cwtl
inc
push
cltd
mov
aas
or
call
dec
aas
loopne
inc
xlat
mov
cmpl
sub
push
cmp
push
jl
mov
xchg
dec
jp
test
xchg
rcr
fiaddl
in
shlb
add
mov
mov
jns
pop
xchg
lea
pop
cmp
jge
xchg
or
movsl
in
into
jle
lea
js
push
cmpsl
jge
cmp
popa
and
cltd
hlt
cmp
cmc
or
fisubrl
fs
gs
aas
fwait
adc
cmp
mov
mov
js
cld
mov
add
mov
in
adc
imul
xor
mov
cmpl
sub
nop
movsb
pop
mov
lret
sti
hlt
aam
mov
or
in
jmp
jbe
std
push
jo
cmp
add
test
sbbb
sbb
sub
lret
pop
xlat
pop
aam
mov
ret
sbbl
xchg
cli
aas
mov
cmpsb
cmpsb
and
fstpl
loopne
pop
or
aas
cltd
jmp
aaa
loop
sub
mov
mov
jmp
pop
repz
pop
xor
mov
mov
xchg
decl
push
std
mov
mov
adc
xor
cmp
xor
xlat
sbb
mov
gs
add
mov
jnp
mov
sub
adc
shll
int3
subb
push
add
sbbl
std
outsl
sub
jle
ret
outsb
or
adc
mov
jb
xchg
adc
jle
adc
lret
ret
jg
add
popa
aam
call
dec
lahf
imul
and
sub
insl
dec
inc
and
push
jnp
or
mov
add
push
pop
sbb
adc
shl
push
and
sbbb
popa
inc
cld
mov
ret
jns
jp
jmp
mov
adc
cmp
fnsave
fwait
aam
cmpsl
add
lahf
push
pop
dec
repnz
into
pop
lret
and
dec
vpshlw
fstps
pop
std
push
shll
hlt
inc
pusha
fbld
in
lods
jl
jne
cmp
sub
inc
fistps
jnp
lods
sbb
push
insl
ljmp
mov
cmp
mov
adc
addl
sarl
mov
pop
outsl
ljmp
out
pop
loop
ss
mov
cmp
test
loopne
xor
inc
loope
mov
or
push
loope
push
xchg
add
mov
lds
mov
ss
scas
push
aas
xchg
and
test
jg
adc
mov
add
out
cmp
outsl
sbb
adc
shl
dec
pop
cltd
out
sahf
scas
jg
xchg
lods
xor
aad
add
aas
pushf
dec
in
inc
sub
jmp
push
push
fdivrs
mov
inc
std
cmp
out
lret
cmpsb
sbb
leave
imul
loope
arpl
jp
scas
add
xchg
cmpsl
fwait
jg
mov
fcompp
mov
add
icebp
in
aas
lahf
les
aaa
push
mov
inc
mov
add
pusha
mov
rcrb
mov
jg
shlb
in
mov
adc
repnz
cmpsb
push
scas
xor
mov
sarb
mov
mov
inc
and
or
test
sahf
pop
mov
aaa
mov
push
nop
fs
aam
fwait
popa
dec
in
mov
push
sbb
pop
daa
adc
jg
lods
clc
mov
aas
or
mov
inc
sub
loope
sub
es
cltd
push
push
mov
scas
std
xlat
lahf
pop
sti
ja
cmp
aad
outsb
scas
out
dec
mov
cmp
inc
addl
mov
testb
xchg
lods
pusha
pop
xchg
pop
mov
out
sahf
mov
hlt
push
push
lahf
mov
mov
mov
icebp
pop
into
jl
mov
dec
ja
jb
fmuls
stc
es
mov
shl
test
jo
add
and
outsb
dec
mov
cwtl
adc
pop
push
imul
sbb
sbb
stos
cmp
loopne
lock
or
mov
mov
fdivs
fbstp
adc
cmp
or
or
movsb
repz
int3
insb
pop
repz
sbb
push
sahf
xchg
std
pop
roll
lahf
adc
call
push
lds
shl
jns
outsl
add
in
xchg
stc
adc
pop
xchg
pop
pusha
icebp
fcmovnu
arpl
in
and
jle
aas
lcall
outsl
jecxz
xchg
gs
insl
xchg
dec
popf
xor
shll
mov
jg
jp
popl
ret
mov
pop
test
int
in
lret
cmc
ljmp
xchg
cwtl
je
push
adc
lret
push
push
cmc
or
push
or
pop
out
xchg
xor
mov
sbb
leave
daa
orb
in
jns
or
scas
or
mov
insl
cs
fisubrl
mov
push
push
push
xlat
pop
lods
add
ljmp
das
es
fs
loop
inc
lcall
popa
xor
enter
and
inc
cmpsl
xor
adc
test
test
shlb
ror
movsb
ret
add
pop
gs
add
imull
addr16
test
jo
mov
or
xchg
xchg
mov
fmuls
cmp
sbb
ss
jne
sbb
ret
test
push
adc
mov
lret
or
pop
dec
mov
add
xchg
adc
pop
push
sbb
sbb
repz
inc
mov
int3
pop
mov
xchg
dec
pushf
lret
pop
cmp
cmp
or
adc
mov
add
mov
mov
jns
cmp
frstor
jl
or
sub
pop
jne
push
jg
adc
fnstcw
jge
dec
loopne
mov
imul
daa
cmc
xlat
popf
mov
mov
lcall
repz
cltd
adc
jp
ret
shlb
idivl
jg
fisttpll
or
mov
push
add
add
xor
mov
mov
jb
repnz
mov
xchg
pushf
mov
pushf
into
mov
jne
dec
cmc
push
inc
shll
sub
jl
ds
or
inc
cmp
les
out
xchg
adc
inc
aaa
ds
mov
addr16
testb
test
adc
pop
xor
pusha
jge
ret
outsb
push
stc
dec
pop
arpl
push
pop
jmp
call
les
sbb
jmp
inc
and
sti
ja
out
xchg
mov
test
stos
mov
mov
sbb
cltd
or
sbb
scas
stc
push
rclb
mov
repz
daa
pop
mov
push
daa
das
jae
pop
and
cmc
or
cli
std
inc
pop
sub
mov
push
mov
lret
xchg
push
stos
popf
jo
repnz
ds
mov
cmp
nop
pop
push
hlt
stos
and
ljmp
testb
pop
and
push
dec
mov
mov
xor
cwtl
jns
in
or
popa
xchg
xchg
mov
mov
sar
repz
sub
mov
aas
idiv
sub
cmp
cs
out
mov
xor
fsub
jne
sbb
or
test
dec
loop
orb
adc
fdivrl
lcall
mov
mov
sar
sbb
adc
es
mov
bound
das
call
sbb
push
pop
daa
rorl
fistps
imul
jmp
xchg
test
and
lahf
lea
or
pop
cli
add
mov
aad
int
je
xchg
dec
and
adc
mov
data16
inc
push
test
jne
and
or
mov
xorb
mov
xor
dec
jge
xchg
dec
adc
mov
jmp
push
loope
mov
and
dec
sbb
out
mov
jo
loopne
xchg
cmp
dec
xor
ror
test
jns,pn
cmp
lret
push
arpl
jp
mov
jnp
mov
jae
and
xor
aas
call
ss
addr16
cmp
pusha
push
mov
pusha
lret
jb
add
xchg
add
out
cmp
cmp
add
icebp
sub
cmp
mov
das
mov
cmc
aam
jge
mov
aad
mov
xor
and
sbb
pop
mull
inc
ret
fiaddl
push
dec
cmp
xor
loop
pop
dec
mov
mov
shr
jns
repnz
std
push
push
lock
int
cwtl
cmp
aaa
mov
mov
jge
lods
ljmp
and
sti
out
or
xchg
inc
repz
cmpsb
pusha
mov
sarb
xchg
ja
sub
rorb
aaa
mov
cld
movsl
ret
fbld
rorl
add
js
in
mov
inc
fiadds
pop
movsl
cli
out
or
insl
icebp
rcll
loopne
sub
pop
and
in
add
xchg
sbb
inc
jbe
mov
jbe
add
xchg
cmpsb
jle
mov
int
pop
push
or
push
sub
in
mov
mov
stos
scas
xchg
and
xchg
pop
push
xor
cmp
jno
mov
lahf
mov
sbb
mov
pop
pop
dec
jbe
sbbl
mov
icebp
dec
and
in
inc
adc
dec
add
xchg
loope
push
adc
stc
jmp
loopne
adc
xchg
cmp
mov
push
les
jne
rol
test
adc
fistpll
movsb
loop
clc
in
push
loope
mov
push
pop
mov
xor
inc
push
add
push
mov
push
call
jnp
adc
pop
inc
push
cli
add
inc
push
inc
mov
pop
xchg
test
and
inc
pop
push
shrb
add
cmc
mov
mov
call
into
lds
arpl
or
lahf
outsb
imul
sub
inc
xchg
sbb
movsb
xchg
sbb
xor
data16
notb
inc
sub
adc
out
aas
add
es
jge
shrl
test
sarb
push
jmp
jno
les
aad
in
cmp
lahf
das
jl
pop
fdivr
or
add
dec
push
xstore-rng
cmpsl
lds
mov
jo
lods
sub
cmp
daa
mov
inc
mov
leave
jp
mov
in
add
and
adc
and
jmp
js
and
fisubrl
movsl
fcomps
nop
std
mov
inc
and
loop
loope
push
push
movsl
adc
mov
pop
fisubs
jb
mov
xchg
aas
lcall
loope
xlat
adc
xlat
dec
in
sbb
mov
mov
xchg
adcw
ret
test
mov
inc
xchg
enter
shl
fisubrl
mov
sub
pop
and
aam
cmp
pop
mov
adc
pop
test
xor
add
les
call
jecxz
popa
adc
jb
and
mov
add
push
arpl
lea
xchg
or
in
mov
nop
addr16
push
lods
mov
movsb
cmp
cmp
sub
roll
bnd
test
dec
mov
or
dec
xchg
sahf
adc
enter
ds
sbb
inc
cld
rorl
cmp
adcb
or
lret
add
pop
repz
fsubrl
and
mov
out
adc
pop
add
mov
daa
and
fisttpl
pushf
xlat
cs
mov
mov
aam
leave
scas
and
jae
xor
hlt
jb
out
add
mov
jg
jno
fnstcw
and
jl
push
movsb
hlt
loopne
mov
dec
dec
xor
scas
jne
mov
push
ret
shlb
scas
inc
pusha
hlt
in
cmp
sbb
jns
ss
aad
icebp
nop
jp
sbb
add
ja
dec
mov
fdivrl
cltd
out
fisttpl
add
gs
dec
lods
or
testl
cmp
xchg
or
xlat
nop
scas
daa
pop
push
mov
inc
outsl
xor
mov
mov
repnz
pop
and
dec
fcomip
push
sbb
sti
bound
test
push
imul
icebp
mov
pusha
daa
andb
es
mov
cmp
adc
hlt
insl
aas
xchg
mov
xor
subl
icebp
pop
test
dec
paddw
test
xchg
mov
lds
outsl
inc
test
rorb
in
inc
xchg
or
sti
out
sub
cltd
lds
and
push
cmpsb
pop
ffree
lcall
jp
push
aaa
pop
mov
and
add
dec
xchg
int3
add
adc
xor
test
inc
mov
and
cmp
jmp
movsb
mov
mov
adc
dec
jb
cmp
cmp
jb
in
ljmp
clc
fisubs
mov
ljmp
or
gs
dec
insb
or
mov
fistpll
or
jnp
repnz
cmp
jle
sub
into
test
cmp
or
int3
xchg
out
cmp
inc
xchg
adc
inc
jb
ljmp
test
or
outsb
fists
lcall
leave
rcrl
xor
jae
or
popf
cwtl
sti
cmpsb
ret
das
pop
ficomps
fildll
xor
xchg
stc
and
xor
repnz
ret
inc
cmc
xor
aam
xchg
nop
nop
pop
xchg
inc
in
test
scas
rcl
mov
add
mov
test
cmp
cli
jo
xchg
sarl
jb
das
jae
mov
out
mull
mov
movb
loop
xor
mov
idiv
push
int3
hlt
lcall
dec
xor
dec
lods
and
stos
inc
testb
loop
jmp
jmp
xchg
mov
gs
adc
out
lods
scas
sub
or
push
lock
push
xchg
jae
jbe
jecxz
jl
decb
cmp
je
cltd
lds
cmp
enter
cmp
mov
loopne
dec
popa
push
inc
or
adc
je
cmpb
sbb
add
jmp
sti
popf
addr16
cmp
jle
inc
xor
gs
shr
ret
and
jecxz
push
push
mov
or
add
rol
inc
ja
sahf
repnz
xchg
out
pop
mov
gs
shll
or
dec
add
mov
ja
push
lods
addl
les
push
dec
pop
mov
out
insb
or
cmpsb
jmp
jg
fistpll
push
mov
pop
or
aaa
push
jg
push
or
sbb
sub
sbb
nop
outsb
jo
addb
out
aas
pop
stos
jmp
stos
cmp
or
fyl2xp1
out
scas
sti
ficompl
xchg
jns
inc
jecxz
lea
or
jb
xchg
adc
cmpsl
imul
insl
fcompl
fcmovnu
mov
imul
xor
jmp
insl
pop
cmp
inc
inc
inc
cltd
mov
dec
mov
cld
add
push
clc
cmpsb
sti
negl
clc
mov
and
shl
dec
scas
cmp
pop
xchg
push
cmp
inc
test
cltd
push
mov
add
xor
inc
xor
and
fisubrl
mov
cmp
jbe
sub
push
or
test
pop
clc
mov
lock
mov
loope
lds
out
inc
test
add
sub
and
mov
dec
scas
push
call
lea
pop
lret
loopne
addr16
aad
lret
call
subb
fstl
andb
movsb
loope
and
sarl
mov
movsb
cld
popa
stos
sbb
xchg
cmp
iret
stos
xchg
mov
mov
or
push
sbbl
rcr
or
sti
jns
mov
and
repnz
push
fnstcw
lock
or
pop
popa
lcall
sbb
inc
dec
cwtd
repnz
js
and
das
and
jmp
mov
dec
cmc
imul
call
gs
cmp
js
sbb
jp
movb
lahf
cld
mov
mov
ret
mov
sbb
push
pushf
popa
cmp
out
inc
xchg
fwait
dec
sbb
jecxz
adc
fcmovb
ret
jo
xchg
jecxz
out
dec
mov
fldenv
ficompl
xlat
jb
mov
clc
xchg
dec
mov
sub
jno
enter
or
sub
movsl
sub
pushf
push
add
stos
into
pop
pop
outsb
mulb
push
pop
movsl
sbb
ret
lods
lcall
sbb
sahf
jnp
mov
outsl
fcoml
inc
and
pushf
push
test
aaa
adc
lret
orb
jge
and
orl
ja
mov
pop
cmp
das
cmp
pop
notl
ljmp
mov
notl
adc
decb
pop
cmpsl
sti
xlat
into
pop
jmp
dec
push
test
inc
jbe
loop
and
mov
pop
push
clc
push
cmp
out
xchg
xor
inc
out
bound
lds
pop
or
mov
fxch
mov
ret
cmpsb
sub
sub
push
ss
fldl
and
inc
fs
sti
push
ljmp
add
push
adc
cmpsl
push
mov
jmp
icebp
pop
or
iret
es
stc
shl
xchg
sbb
js
ret
or
lret
sbb
stos
scas
jb
mov
fwait
aaa
mov
xchg
clc
xchg
shll
xchg
int3
lret
adc
daa
inc
call
imul
cmpsl
cmp
outsl
lret
dec
jbe
bound
add
pop
jns
mov
mov
dec
scas
sbb
jmp
push
leave
xchg
outsb
aam
sti
mov
mul
xorb
addr16
mov
pop
addr16
mov
clc
sub
push
push
or
roll
xor
cltd
cmp
ret
movsl
std
lcall
jl
push
xor
pop
sbb
inc
imul
inc
movsb
or
int3
xor
pop
push
addr16
insb
sbb
int3
cmc
jge
fcmove
sub
mov
mov
iret
lea
cmc
into
and
test
push
int3
stc
jbe
fnstenv
mov
xchg
cs
jae
sbb
or
mulb
pop
cmpsl
mov
mov
inc
cwtl
lcall
subl
jmp
leave
xchg
push
popa
or
or
and
fucomi
testb
push
fwait
jecxz
loop
mov
call
shll
cmp
insl
sub
add
inc
inc
jbe
lret
sbb
sahf
insb
fistpll
dec
push
rolb
rolb
pop
mov
imul
push
faddl
dec
out
jle
push
add
subb
nop
cli
out
xchg
cmp
and
or
inc
jo
imul
sub
mov
inc
cmpsb
dec
test
lahf
pop
inc
push
mov
jge
aas
cwtl
lahf
out
sbb
fmull
mov
adc
xor
cmp
inc
in
sub
mov
int3
sbb
inc
cmp
xchg
out
push
movsb
cmp
cs
inc
or
test
mov
hlt
pop
leave
test
repz
arpl
lret
push
pushf
sbb
fstp
popa
lock
mov
cmpsb
adc
lcall
lods
in
ret
test
fbstp
in
sub
imul
out
sti
ja
testb
pop
xchg
xchg
push
xchg
ret
int
jo
ss
leave
sub
jecxz
xbegin
iret
mov
and
sub
inc
cmpsb
xor
pusha
pop
xor
jnp,pn
xchg
insb
sahf
dec
add
sub
cs
clc
jecxz
and
mov
addb
push
pusha
adc
sti
sahf
sub
push
mov
mov
addl
ds
lret
dec
adc
dec
into
pop
xchg
jno
push
cmp
sub
pop
pop
dec
jns
mov
xchg
or
jle
sub
mov
add
mov
jl
add
add
mov
or
push
in
out
ret
lcall
jp
xor
mov
jae
mov
lcall
int
dec
pop
fbstp
pop
xchg
test
data16
fsts
inc
lret
outsl
ss
mov
jae
cmp
aad
rcrb
imul
je
insb
xchg
jbe
pop
bound
fcom
jnp
xchg
sti
enter
push
iret
imul
leave
lcall
mov
int3
add
jns
sub
jno
fxch
mov
xor
fs
insl
call
icebp
bound
in
cmp
and
sub
pop
lods
fidivrl
push
enter
or
imul
idivl
sti
xchg
sbb
jnp
std
xchg
js
dec
stos
out
icebp
dec
insl
out
and
repz
and
or
sub
rclb
cmp
negl
nop
sbb
pop
lret
sub
and
mov
push
stc
clc
and
aas
mov
jo
mov
cli
mov
mov
outsb
pop
scas
arpl
test
negl
fiaddl
pusha
jge
dec
ljmp
mov
sbb
popf
orl
xchg
inc
pop
dec
aad
daa
or
mov
lds
in
dec
inc
xchg
jecxz
mulb
add
adc
pop
mov
popa
andl
call
enter
mov
jmp
cmp
lds
jns
sub
xchg
outsb
push
lods
insl
mov
fstl
sarb
cmp
mov
pop
xchg
mov
sub
push
sub
test
repz
mov
ret
cwtl
add
pop
nop
push
xor
cmp
shr
sub
test
pusha
lods
mov
cmp
inc
jge
jg
mov
bound
aaa
push
push
fimull
adc
notb
pop
addl
enter
aaa
pop
test
enter
push
jns
jecxz
movsl
mov
test
push
pop
roll
push
mov
lahf
and
andb
and
lods
jecxz
ret
sbb
ss
dec
dec
or
jmp
add
cmp
xorl
roll
inc
mov
push
ss
add
pushf
rcrb
mov
mov
ret
and
inc
cs
fwait
push
les
leave
lahf
pop
inc
cmpl
ret
test
cmc
outsl
test
out
mov
xchg
nop
in
push
lret
dec
fldcw
or
in
shll
push
xchg
mov
jno
fwait
jne
mov
mov
enter
aad
mov
dec
inc
cmp
sbb
imul
or
xor
mov
and
dec
in
imul
fnstenv
enter
mov
lea
outsb
sbb
sub
xchg
add
pusha
ret
pusha
imul
movsl
mov
cs
scas
loopne
mov
cmp
jp
test
dec
push
sub
xor
ja
icebp
sbb
push
mov
mov
pop
mov
fidivs
cmp
or
add
mov
xchg
repz
repnz
fiadds
mov
cs
adcb
faddl
test
pop
push
ret
repnz
ja
dec
cmp
and
cmc
ds
insl
mov
cmp
mov
xor
lret
jp
inc
jnp
push
mov
mov
pushf
test
pop
out
insl
jnp
cmc
sarl
dec
loopne
fwait
xchg
rcr
xor
lret
dec
lcall
icebp
testb
and
or
fisttpl
mov
xor
mov
call
cltd
into
pop
adc
adc
inc
push
sbb
loope
push
hlt
daa
ljmp
leave
add
in
xchg
sbb
into
mov
je
jmp
xchg
shr
push
mov
or
loopne
test
insl
xchg
or
and
loopne
cmp
enter
cmpb
ljmp
sahf
adc
xchg
cmp
dec
lods
xchg
fisubrs
jecxz
cwtl
popf
mov
les
and
je
or
stc
test
or
xor
sub
sbb
push
pushw
jmp
bound
scas
sbb
gs
aam
and
xchg
add
test
push
and
dec
cmp
nop
and
shll
xor
xor
leave
xor
xchg
cmpsl
in
test
mov
insl
cmp
out
dec
cmp
dec
repnz
loopne
inc
sub
xor
inc
pushf
sub
and
sub
clc
cbtw
jb
test
scas
inc
jl
sub
mov
lods
add
out
cmp
cmpl
xor
push
push
in
insb
bound
cltd
repz
ja
and
jp
cmp
or
dec
mov
xor
and
cmp
fcompl
xor
stos
adc
testl
push
mov
pop
sbb
ja
aam
xor
mov
sbb
fimull
mov
inc
mov
test
jnp
pop
lods
lahf
ret
jle
mov
cmp
ja
fwait
mov
movsl
jbe
or
sub
xor
aaa
mov
cwtl
cs
pop
mov
mov
ja
dec
pop
push
test
push
mov
sbb
movsl
test
and
sub
clc
sbb
cli
shlb
int3
and
sub
out
and
loope
push
mov
mov
orl
xor
dec
sbbl
icebp
iret
into
jl
jle
or
mov
sub
test
sub
sbb
mov
outsl
cmpsl
push
lea
stos
mov
mov
dec
mov
add
dec
call
pop
loop
inc
adc
mov
ret
addr16
call
movsl
in
mov
pop
hlt
es
inc
jne
cmp
movsl
js
pop
sub
mov
and
test
sahf
xor
jae
inc
testl
cwtl
xchg
daa
mov
mov
add
push
lea
lea
dec
insb
or
dec
loop
ret
sbb
dec
add
cli
push
cmp
jbe
cmp
add
scas
jo
pop
out
out
jbe
pusha
dec
in
jne
inc
pop
mov
and
jnp
nop
mov
push
xchg
dec
into
or
push
stos
mov
gs
ret
sbb
shlb
hlt
in
xchg
sub
rcrb
mov
je
insb
xor
out
push
sti
push
movsb
mov
sbb
lods
xchg
jns
adc
pop
mov
lock
xor
mov
xorl
mov
test
mov
pop
adc
lret
icebp
out
scas
rcr
lahf
mov
ja
jns
sbb
adc
jmp
add
insb
cmpsb
fs
sahf
shll
jno
sbb
mov
lds
sbb
or
push
imulb
ret
scas
cltd
leave
call
jb
mov
mov
cmp
xchg
pusha
sub
out
div
aaa
pushf
les
mov
jo
fists
mov
mov
push
movsb
aaa
cmp
aam
push
nop
repnz
pop
outsl
adc
insl
lret
or
js
mov
push
out
out
cmpsb
lret
imul
fists
mov
sbb
lock
leave
push
fdivrs
sub
push
jge
lods
sahf
test
arpl
fstl
pusha
mov
imul
adc
or
mov
outsl
mov
jnp
push
call
lods
push
and
jbe
fisubrs
xor
or
jmp
andb
xor
mov
cld
es
dec
and
mov
push
inc
loopne
add
jae
sbbb
mov
sbb
and
out
jo
imul
mov
pop
sbbl
jp
clc
xor
fimull
or
push
pop
xor
loop
outsb
push
scas
out
cwtl
addl
push
push
push
mov
inc
ja
ss
decl
scas
inc
pop
into
sbb
decl
mov
mov
cwtl
fldl
ss
imul
push
out
xor
clc
in
jle
cs
sub
fcom
arpl
jle
movsb
fsubrl
jno
ja
sub
or
and
std
rcrl
out
bound
xor
mov
mov
outsb
or
in
jp
nop
cli
lods
dec
add
push
decb
and
mov
repnz
scas
xor
jge
mov
vpunpckldq
mov
and
lods
cmc
stc
mov
add
arpl
jp
xbegin
mov
dec
lcall
push
push
incl
mov
mov
push
lea
pop
cmp
xor
cwtl
int3
cmpsl
add
pop
or
dec
mov
dec
inc
and
sub
sub
das
popa
adc
inc
fldenv
into
jle
push
push
cmp
addr16
inc
icebp
cmc
or
iret
jp
dec
xchg
jno
loope
test
in
fcompl
mov
movsb
lea
lret
rorl
outsb
pop
inc
xchg
test
mov
mov
mov
adcb
insb
add
mov
mov
movsb
subb
test
sbb
outsl
pop
cmp
lcall
adc
xchg
jnp
lcall
jg
int
imul
hlt
and
out
and
inc
mov
sahf
adc
xor
fsubrs
push
jb
cmp
adc
sub
sub
shl
loop
outsl
stc
cmp
xor
or
into
les
cld
shl
pop
cmp
cld
sbb
push
sub
push
pop
gs
dec
dec
out
jnp
scas
push
adc
cmp
inc
loopne
loopne
mov
lcall
jmp
popf
jbe
push
fwait
lea
vsqrtps
fdivp
sbb
pop
and
mov
decb
sbb
out
std
jp
push
in
addb
nop
inc
mov
bound
cli
les
mov
clc
cmp
leave
xchg
lods
xor
sbb
adc
popf
xchg
mov
push
jns
ja
out
cli
out
or
adc
dec
repnz
fisubrs
push
enter
in
mov
mov
cmp
sub
icebp
inc
movsb
xor
shlb
xor
dec
push
cmp
leave
mov
xchg
js
pop
or
xchg
lea
sbb
push
xlat
bnd
mov
jns
inc
ficompl
and
add
in
jge
cmpsb
arpl
pop
loop
stos
lds
add
bound
pop
jb
pushf
mov
js
inc
movsb
or
jecxz
incl
pop
pop
lds
adc
xor
add
push
add
sbb
mov
ds
insb
fs
lea
or
jmp
cs
adc
stc
popa
lea
adc
mov
ljmp
je
xchg
pop
pop
mov
lods
aas
push
fsubrp
stos
aas
xor
jne
idiv
out
adc
cmp
mov
insb
imulb
sbb
sub
pop
popa
sahf
ja
mov
xlat
in
cld
pop
adc
and
adc
pop
lcall
pop
push
push
xchg
inc
push
cmp
aas
push
or
cld
xor
sub
xlat
mov
lock
sub
push
mov
fwait
nop
inc
or
movsb
fldenv
js
dec
xchg
call
push
es
scas
mov
out
push
jnp
push
out
cltd
jmp
in
testl
bound
dec
dec
xchg
mov
test
fidivrl
sub
xor
sbb
xlat
xor
sub
das
jne
mov
pop
enter
and
adc
out
nop
inc
inc
enter
push
sbb
mov
xlat
leave
cwtl
jg
add
insb
rolb
inc
outsl
clc
mov
jmp
es
shr
jno
dec
add
inc
lock
cmp
andb
repnz
leave
or
shrb
pop
or
push
cwtl
inc
lock
lcall
pop
xchg
addr16
sub
es
push
incl
out
inc
out
sbb
jae
hlt
pop
sbb
xor
movsb
fisttpll
scas
leave
int3
aad
pop
dec
mov
iret
mov
xchg
dec
mov
hlt
sub
push
mov
test
and
add
push
shr
cld
xor
adc
dec
sarb
lea
call
clc
es
xchg
jbe
inc
call
movsb
inc
in
sbb
fs
daa
and
jns
popf
sbb
mov
add
mov
inc
lods
loop
pushf
imul
aad
sub
jge
rorb
pop
mov
dec
mov
cmp
lods
push
test
push
aad
subb
add
faddl
lret
cmpsl
cmp
inc
add
daa
sbb
lods
icebp
outsb
aam
xchg
xchg
xchg
mov
frstor
scas
jg
pop
insl
fimuls
inc
adc
je
push
mov
out
movsb
and
lret
cmc
dec
aaa
adc
lods
andb
iret
cmpb
pop
push
ficomps
sbb
mov
and
es
push
add
out
inc
gs
lret
inc
adc
nop
enter
fdivr
rorb
sub
sub
ret
and
sub
nop
rorb
xor
mov
addr16
mov
pop
xchg
pop
icebp
ljmp
in
push
mov
loop
jno
jbe
pop
lods
fmull
add
imul
nop
dec
cmp
call
fldcw
xchg
gs
adc
shlb
push
dec
inc
enter
test
xchg
jmp
cmpsl
or
push
push
jno
ror
sbb
mov
dec
mov
mov
mov
and
test
cltd
mov
mov
mov
xchg
mov
bnd
js
xchg
cmp
sbb
sub
sbb
dec
fwait
push
xchg
test
mov
mov
cmp
push
inc
les
xchg
dec
pop
flds
inc
sbbb
add
lock
test
enter
xor
in
add
ja
xchg
and
sbb
push
jae
mov
mov
mov
inc
inc
xlat
xor
std
mov
or
pop
mov
sbb
in
mov
xor
sbb
jne
sbb
and
dec
push
lcall
mov
dec
and
mov
std
orb
stos
cmp
das
inc
and
sub
lds
js
add
xchg
fdivrp
movl
test
lea
lret
add
xchg
outsl
lds
push
repnz
out
xchg
les
xor
xchg
leave
pop
dec
adcb
and
or
and
cld
icebp
std
out
sub
cmp
insb
add
xchg
je
lods
mov
xor
mov
pop
mov
sbb
xorb
sarb
sbb
outsl
dec
out
popa
inc
cs
adc
mov
dec
and
cli
add
sbb
loope
imul
gs
cmc
push
push
sub
clc
push
lods
sahf
sbb
add
pop
fnstcw
lock
nop
lret
sbb
pop
test
cwtl
push
push
jecxz
xchg
cmp
fmuls
mov
orl
inc
push
mov
jae
adc
or
mov
inc
xlat
adc
popa
sbb
or
repz
repnz
dec
ss
data16
cs
ret
sbb
adc
cwtl
stc
push
mov
fsubrs
or
xor
cmpsl
mov
lret
mov
ds
mov
imul
addr16
push
out
in
jae
inc
push
pop
dec
loopne
add
dec
pop
addl
in
shll
cmpsb
cli
fs
push
and
fcoms
pop
sbbl
or
xchg
or
stos
mov
dec
push
and
jecxz
test
fidivrs
xchg
mov
in
xchg
and
loopne
mov
in
stos
xlat
jno
andl
mov
xchg
sub
aas
mov
pop
adcb
mov
scas
push
pop
push
fiadds
dec
addl
sbb
into
testb
push
pop
jnp
mov
and
mov
add
xchg
pop
pop
adc
fdivrp
push
mov
test
mov
jo
mov
jge
andl
loope
xor
daa
out
push
dec
fnsave
shl
adc
xchg
cmp
pop
and
rolb
lods
mov
stos
mov
insb
xchg
jg
jne
cmp
aaa
fmull
adc
inc
arpl
fisubs
adc
xchg
call
subl
mov
adc
jb
inc
ret
xchg
xor
fwait
mov
mov
je
and
mov
inc
cltd
pop
cltd
mov
pop
push
and
xchg
std
jg
leave
mov
gs
incb
mov
jns
je
pop
xchg
push
inc
out
mov
jb
lock
inc
lcall
add
ljmp
mov
jmp
incl
imul
fldt
add
push
xchg
and
icebp
mov
pop
addb
cmp
je
addl
mov
lds
aad
mov
rolb
dec
stos
out
mov
xchg
sub
add
mov
fsubr
xchg
cmp
mov
jno
ljmp
cs
out
sbb
cwtl
and
and
push
nop
in
imul
jno
xchg
popa
mov
mov
sub
xchg
pop
jno
adc
cwtl
cmp
cs
pop
sub
add
or
mov
xchg
and
xchg
pop
inc
pop
cmpsl
mov
adc
pop
jp
pop
movsl
mov
push
mov
jmp
xchg
push
in
pop
dec
sbb
shl
ffreep
sahf
jp
lret
xchg
in
add
mov
xchg
dec
popf
cmp
lods
lods
faddp
lds
ds
sub
fsubs
scas
mov
and
adc
mov
sti
sbb
and
mov
imul
adc
popf
lock
lret
sub
xchg
fcoml
dec
pop
pop
add
xor
inc
jbe
push
push
jp
stc
fs
loope
push
xor
lcall
outsl
jb
out
mov
adc
push
movsl
inc
push
cltd
fisubl
push
ss
jns
dec
push
fmuls
mov
xchg
dec
fmulp
inc
mov
dec
in
push
xchg
imul
add
in
jmp
or
pop
mov
imul
cwtl
pop
rolb
stos
fdivs
pop
insb
hlt
push
push
push
mov
mov
dec
pop
shl
lretw
arpl
pop
mov
test
daa
mov
jae
pop
ljmp
rep
pop
pop
mov
pop
pop
psubq
sbb
lods
js
mov
and
lea
jns
push
mov
jmp
and
jne
push
es
out
pop
cwtl
mov
mov
pop
jns
ficompl
outsb
pushf
cs
dec
fwait
inc
add
cs
imul
jl
inc
lahf
or
xchg
adc
cmp
imul
cmp
adc
mov
jle
add
test
push
add
adc
shrb
gs
mov
jo
xchg
push
pop
add
and
xor
mov
cmpl
inc
shl
or
dec
adc
push
lret
push
lea
negb
adc
iret
sub
dec
dec
xor
pop
cltd
add
lret
int3
add
jp
js
lods
cmp
jmp
push
mov
cmpsl
movsl
lock
cmp
lock
mov
stos
push
dec
imul
into
xor
repnz
push
out
scas
mov
imull
push
pop
adc
nop
rcl
fucomi
lea
jp
dec
sub
pop
xorl
icebp
call
add
out
shl
inc
jle
ret
dec
test
push
jmp
adc
inc
add
insb
sub
stc
add
xchg
out
scas
mov
ds
fcmovb
repz
or
mov
cld
mov
cmc
add
pusha
pop
pop
inc
sbb
popa
das
stos
enter
in
or
add
clc
cmp
cs
ljmp
add
mov
inc
stos
mov
dec
lcall
mov
cmp
in
testb
mov
jecxz
xchg
ret
push
mov
insl
js
loop
mov
xchg
imul
out
fwait
scas
sbb
outsl
std
add
sbbb
test
stos
fldenv
loopne
into
out
scas
lret
sbb
testl
mov
frstor
ss
lea
jmp
fisttpll
mov
das
fisubrs
jp
dec
faddl
add
clc
inc
pushf
jb
inc
adc
outsb
fidivrs
lods
shll
and
andb
mov
in
mov
cld
mov
add
ret
into
test
jle
ret
andb
pusha
mov
pop
mov
test
dec
inc
add
jl
dec
xchg
dec
stos
sub
add
shlb
ljmp
dec
movb
loop
jo
cmp
dec
addr16
cmpsb
in
loop
fmul
mov
xchg
adc
stos
movl
scas
push
outsb
push
cmc
inc
push
lock
mov
repnz
ds
lahf
push
ja
add
daa
fimull
mov
inc
xor
sbbb
gs
insl
mov
adc
dec
cmp
and
push
pop
leave
cmp
mov
add
stos
cld
push
aad
push
popf
lock
cltd
ds
and
popa
inc
imul
rcrb
in
mov
enter
push
mov
stos
jmp
or
xchg
mov
in
call
test
call
inc
into
notl
mov
or
xlat
jge
or
shrl
and
xchg
inc
mov
sub
movsb
mov
fwait
adc
pop
and
inc
xchg
stc
std
sbb
or
dec
out
jo
insl
adc
or
mov
sbb
mov
sbb
sub
loope
fadds
sahf
cmp
jle
push
insl
icebp
stc
and
jbe
je
int3
cmp
das
lock
mov
mov
stos
jge
icebp
cmc
js
dec
xorl
insl
xor
in
ds
sbb
mov
mov
data16
loop
jnp
inc
pop
ljmp
jge
cmp
mov
imul
loop
mov
int
mov
adc
cmpsb
push
sahf
jns
sbb
jle
and
fcoms
cmp
inc
fcomps
stos
cli
cli
push
out
add
dec
cmp
sahf
mov
scas
pop
add
iret
push
sbb
cmp
call
pop
clc
jl
or
push
adcl
adc
push
mov
xchg
call
adc
fidivrl
and
fsubrl
push
ja
add
shl
add
jmp
jns
mov
bnd
inc
jbe
test
sbb
cmc
sub
movsl
pop
pop
shr
lahf
xor
jbe,pn
loope
sti
call
ret
or
inc
popa
push
xchg
adc
sahf
inc
and
fnstsw
addr16
sub
jbe
sub
dec
or
dec
stc
out
cmp
pop
ret
mov
mov
inc
push
dec
add
icebp
daa
sbb
repnz
daa
sbb
mov
cld
add
ret
sbb
iret
int
test
test
outsl
lods
xor
xlat
push
aaa
lds
ss
add
cmc
lds
sub
cmc
add
lret
lea
repz
pop
lahf
fimull
mov
adc
pop
repnz
aad
aaa
xchg
inc
subb
inc
mov
mov
fbstp
or
in
cmp
aaa
dec
mov
lcall
dec
xor
adc
pop
imul
aas
dec
xchg
test
jns
lret
lods
adcl
push
xchg
ret
and
mov
xchg
cld
rcl
daa
cmp
sub
push
je
mov
pop
shlb
cmpsl
test
push
pop
push
int
stos
cmp
jp
dec
xchg
jmp
mov
push
push
inc
pop
pop
mov
imul
test
jp
pop
in
push
hlt
rcl
fsubp
mov
or
nop
call
pop
or
and
xchg
inc
pop
fs
add
pop
ret
dec
xor
pop
jno
call
jb
xor
cmpsl
out
pop
ja
lds
jle
mov
jecxz
xor
inc
or
pop
std
imul
je
cmp
mov
in
in
mov
enter
shrb
jno
pop
inc
cmp
ljmp
pop
sti
rcll
popf
loope
ds
xchg
mov
fucomp
add
shrl
xchg
stc
popa
cs
push
push
xlat
subl
lods
jp
ljmp
clc
push
lahf
insl
lret
arpl
xor
xor
cmp
xchg
jae
int3
je
mov
jne
ljmp
mov
fwait
inc
cmp
xor
lahf
movsl
xchg
scas
fbld
cmp
scas
fdivs
lret
fmull
shrl
push
shl
dec
lret
pop
mov
or
in
or
xchg
lret
xchg
pop
orb
dec
outsl
outsb
sub
shrl
int3
scas
aas
jg
addr16
mov
es
pop
mov
xchg
jbe
inc
xchg
xchg
jecxz
pop
lea
pop
sbb
je
lret
outsl
test
das
inc
sbb
inc
jg
int
ret
aaa
cld
lret
lods
in
pop
mov
lods
or
inc
dec
mov
jae
inc
idiv
xchg
inc
push
and
push
inc
mov
icebp
adc
jp
cmp
sub
jae
int
mov
mov
stc
mov
sarl
imul
inc
or
add
orl
adc
lds
jl
jb
jle
pop
jnp
gs
mov
nop
xchg
xchg
test
mov
outsl
ja
leave
call
in
in
push
insl
out
imul
je
jnp
cmp
jp
repz
mov
ffreep
jns
inc
es
jo
xchg
jp
fabs
dec
adc
cmc
dec
jo
jmp
rolb
inc
add
xor
inc
ljmp
scas
xor
lahf
jmp
out
repz
mov
cmpsb
daa
subb
jmp
cltd
stos
lods
mov
adc
notb
out
nop
or
jne
imul
jno
pop
bound
aad
jno
jecxz
not
mov
jg
push
movsw
sub
lcall
pop
addr16
call
push
dec
jbe
adc
pop
out
jnp
imul
rcr
call
rcr
imul
mov
fldenv
xor
adc
push
adc
add
loop
shll
aaa
fildl
cmpsb
xlat
js
nop
push
adc
mov
jno
arpl
lds
lret
push
loope
push
cmc
in
aas
jmp
jge
push
subb
sarb
popa
jne
out
cmp
inc
arpl
lds
dec
pop
andb
bound
or
out
mov
sub
icebp
loop
jmp
popa
fsub
cmc
xor
loope
out
js
aas
cwtl
mov
std
call
stos
push
mov
mov
jle
icebp
fs
jne
icebp
sbb
inc
ja
and
mov
jbe
jne
xlat
add
pop
jge
clc
pop
gs
jne
xorb
in
insl
pop
add
sahf
or
mov
xchg
jno
loop
xlat
sbb
mov
aaa
fidivl
push
push
mov
aas
bound
mov
sub
cmp
inc
sub
mov
pushf
rcll
sbb
cmp
ljmp
pop
adc
jg
sbb
xor
mov
jnp
jmp
dec
xor
jnp
pop
adc
testb
fldcw
out
test
shr
jo
mov
pop
or
xchg
and
inc
adc
add
nopl
xchg
pop
inc
dec
pop
mov
inc
xor
mov
pop
mov
jl
adc
hlt
mov
jp
sti
insb
pop
pushf
icebp
out
add
lcall
out
adc
pop
repnz
dec
icebp
subb
movsb
sub
insl
or
pop
inc
add
xchg
push
dec
mov
mov
mov
loopne
sub
in
pusha
jge
adc
outsl
sub
sub
jne
pushf
ror
aam
cltd
clc
pop
testb
mov
mov
push
push
lret
sahf
movb
inc
xor
xchg
push
dec
xchg
sub
in
pop
mov
push
fistpll
je
sbb
std
fs
aad
in
and
push
ret
and
sub
mov
bound
xlat
push
loope
push
mov
movsb
mov
jp
mov
into
subl
add
nop
cs
xor
movsb
push
jnp
xchg
pop
sbb
mov
mov
mov
cmp
inc
in
lods
mov
fisttpll
mov
loop,pt
fcompl
lcall
aam
stc
jns
addl
dec
lods
push
out
adc
scas
mov
jmp
das
insl
out
in
dec
imul
xchg
shrl
lock
mov
ja
sub
mov
cmp
stos
scas
cmpb
inc
add
test
xchg
sbb
mov
xchg
cmpsl
lret
pop
sti
xor
adc
pop
ds
bnd
outsb
xlat
and
inc
inc
pusha
sahf
mov
add
divl
cmp
shlb
mov
jb
jmp
pop
rcrl
pop
cmp
push
shlb
pop
mov
lea
mov
mov
jp
popf
jne
int
push
insl
and
lods
rorl
out
inc
xlat
lea
aas
push
in
cmp
fimuls
xor
add
sbb
xor
or
or
aaa
stos
enter
rcll
sbb
imul
loope
xor
add
add
mov
arpl
andb
bound
adc
cmp
cli
add
mov
or
cmp
xor
push
inc
lret
mov
push
shll
mov
jne
outsb
dec
fsubr
cmp
cwtl
cmp
hlt
adc
push
incb
adc
int3
repz
sbbb
jb
mov
push
inc
adc
lds
outsb
rorb
push
jge
ss
adc
adc
push
loopne
negb
xchg
mov
call
mov
xchg
adc
movsb
notb
ret
adc
xchg
add
mov
mov
jecxz
jg
push
loop
xor
xchg
mov
dec
push
arpl
loopne
mov
in
and
sbb
cs
ret
loopne
das
dec
jle
xchg
out
ja
outsl
iret
push
inc
loop
jmp
outsl
jl
jbe
or
mov
hlt
test
mov
test
ja
test
xchg
int3
jae
and
pusha
dec
cmp
jp
cmp
fstpl
mov
pop
lahf
cmp
shlb
xor
insb
lods
in
jle
stc
ror
jl
subb
inc
jle
sub
cmp
and
sbb
mov
lock
jo
in
xor
xlat
push
nop
popf
sti
leave
mov
xchg
push
inc
push
test
or
scas
mov
shrl
adc
bound
enter
fs
pop
jg
xchg
and
mov
movsb
leave
inc
lcall
dec
lock
fxch
add
or
shrb
dec
test
bound
lret
cmpsb
cmc
aas
ret
cmp
fistpll
orl
mov
sub
out
hlt
sbb
insl
jg
jecxz
movsl
dec
xor
and
leave
push
jmp
outsb
lods
and
xor
and
js
jl
jl
mov
or
stc
test
rcll
nop
jmp
xchg
push
sbb
push
out
dec
mov
lea
and
into
fwait
imul
xchg
and
movsl
pop
mov
repz
mov
sbb
dec
out
mov
ret
xor
lock
jge
and
mov
cmc
xchg
fnstsw
cmpsb
hlt
dec
sbb
aaa
and
out
xchg
sbb
pop
fstpl
test
or
mov
cmp
sub
xor
add
fcmovne
jo
stos
push
mov
or
pusha
pand
sahf
bnd
cld
pop
clc
cmp
mov
jnp
jp
pop
stos
std
call
jae
mov
inc
test
loopne
sbb
and
sbb
and
aaa
mov
call
int
sbb
out
imul
lahf
lcall
xchg
iret
and
jno
dec
insl
lcall
cmp
sub
and
sbb
inc
mov
fmuls
outsb
movsl
fldt
aaa
push
and
inc
jp
movsb
lret
cmc
loop
mov
xor
dec
out
cld
jle
hlt
pop
and
jge
jge
cltd
imul
es
jp
mov
pop
xchg
pop
xor
and
aaa
mov
pushf
stc
xor
arpl
shrb
sub
jmp
jnp
mov
ds
add
stc
xchg
jb
mov
sbb
ds
sub
hlt
mov
jecxz
cmpsb
cmpsb
imul
loope
push
mov
push
or
xor
bound
shrb
push
pusha
stos
sarl
cmpl
jbe
xorl
mov
adc
jb
lcall
jo
lods
inc
jae
fimull
popa
xor
cmp
push
mov
xor
or
dec
push
movsb
dec
push
divb
aad
out
pusha
sub
cmp
mov
jmp
movsl
mov
pop
adc
fcmovne
pusha
jmp
jno
cld
cmp
sbbb
fistl
mov
push
les
jl
jno
push
pop
icebp
mov
mov
xchg
push
jmp
and
mov
addr16
lods
daa
inc
xchg
popf
ljmp
in
jmp
jae
pop
xor
xchg
nop
std
lea
mov
ljmp
push
adc
notl
scas
inc
xor
lcall
xchg
add
clc
call
inc
adc
cmpsl
push
ja
pushf
loop
in
addr16
jae
icebp
pop
fldenv
jb
pop
mov
inc
int3
and
inc
jp
insl
mov
and
pop
mov
outsl
cmp
call
xor
ljmp
pop
sti
dec
jns
subl
adc
aad
test
push
fidivrl
inc
ja
dec
mov
test
mov
fldl
jo
sar
jbe
or
cmp
cmp
popf
into
lods
cmpsl
lahf
and
fld
shlb
and
push
push
subl
jae
js
dec
dec
push
mov
daa
fcoms
pop
dec
insl
mov
aam
sub
adc
js
jg
fcoms
cmp
hlt
daa
sub
fists
dec
add
mov
sbb
and
gs
lahf
scas
popf
iret
dec
sub
rclb
push
add
or
stc
outsl
cmpsl
into
ds
ljmp
sub
mov
ss
xor
sbb
jmp
mov
idivl
lret
pop
add
or
xor
xchg
test
push
add
es
add
fimull
sub
cmpsb
and
add
mov
sarl
mov
jne
or
lcall
add
aas
in
insb
pusha
sub
dec
dec
xor
ret
jge
pop
aaa
mov
cmpsl
pop
mov
xor
cmpsl
scas
mov
popf
stos
xlat
pushf
ljmp
int3
or
mov
or
ja
sub
jbe
cltd
ljmp
ds
push
stos
push
inc
xchg
sbb
or
inc
xor
fmul
cltd
pop
outsb
lods
add
jnp
pop
inc
xor
mov
addr16
sub
test
ror
inc
scas
js
add
fistl
jl
mov
outsb
ja
es
cmp
jno
in
dec
sbb
cmp
pop
out
mov
mov
test
cmp
sbb
push
mov
sbb
out
flds
pop
mov
stos
xchg
inc
jmp
aaa
in
add
jbe
fldl2e
jmp
int3
shl
mov
lea
divl
push
adc
jae
test
out
mov
adc
insl
adc
pop
pop
int3
fsubr
out
pop
jo
xchg
cmpsb
enter
pop
lret
jmp
mov
sub
rcl
push
jo
sub
mov
clc
push
mov
inc
je
xor
pop
pushf
mov
add
cs
ss
mov
mov
data16
xchg
fnstenv
pushf
add
lods
xchg
test
mov
shlb
xor
pop
xor
mov
sub
dec
in
pop
or
xor
jge
aad
sub
jg
cltd
jnp
mov
fdivl
lret
mov
sub
or
enter
loopne
push
or
mov
sub
shll
mov
add
filds
jnp
cmpsb
jecxz
lds
popa
imul
and
into
std
mov
repnz
add
and
mov
aaa
sub
enter
lret
add
rcrb
pop
add
inc
shr
sahf
mov
mov
ss
push
stos
xor
cwtd
daa
jae
dec
pop
clc
dec
and
aad
push
loopne
mov
rorb
sbbb
dec
pop
out
scas
or
fldt
jae
adc
out
stos
pop
push
or
mov
or
pop
xor
and
sarb
dec
mov
in
xchg
test
push
fninit
or
pop
add
cmc
mov
jbe
pop
ss
dec
add
and
and
ret
cltd
cmp
add
sub
jmp
push
cmp
lods
out
daa
cmovne
inc
push
jmp
jnp
repnz
stos
inc
sahf
adc
sub
mov
push
pop
ja
dec
daa
add
adc
aaa
sti
cmovno
outsb
cmp
mov
push
out
adc
jge
fiadds
idivl
into
push
pop
xchg
fcmovb
jo
mov
pop
xchg
pushf
or
pop
xor
sbbb
testl
cmp
outsb
loopne
stc
sub
pop
jno
stos
out
cmp
push
push
das
insb
push
fsubrl
hlt
popa
xchg
mov
mov
sbb
xchg
mov
fs
les
negb
mov
sub
int
cmp
sahf
xor
pop
icebp
inc
xchg
sarl
outsl
push
mov
push
jle
inc
push
fstpt
mov
cmp
cmp
push
repnz
lock
sbb
xor
sbb
adcl
push
jno
iret
inc
cwtl
icebp
jae
mov
jb
jecxz
ljmp
sub
push
lcall
aam
int
adc
iret
push
not
pop
cwtl
lock
pop
int3
jo
out
psrld
cs
mov
xor
mov
jge
push
out
fidivs
and
cmp
sub
xor
fcmovb
adc
jb
or
mov
cwtl
jle
inc
ficoms
pop
jbe
fisubrl
rcrb
aad
push
mov
out
cmp
cmp
jle
dec
inc
push
push
push
in
lods
push
jns
hlt
and
faddl
test
cltd
enter
xorl
jmp
mov
loopne
int3
pop
js
inc
push
das
sub
sub
xor
insl
xlat
sti
fdivrl
jge
push
pop
xchg
sub
xor
repz
aaa
push
dec
cmp
cmp
dec
cmp
mov
testb
mov
in
out
xchg
dec
inc
fnsave
mov
flds
mov
lret
xor
in
push
ret
push
sub
test
lock
inc
int
out
into
push
mov
inc
inc
mov
in
popf
loop
push
xor
std
loope
daa
xchg
inc
xchg
dec
fiaddl
inc
fisubrs
sub
and
mov
jge
std
mov
std
mov
stos
insl
cmp
fstpt
mov
dec
push
sahf
mov
mov
mov
mov
fisubl
mov
fisubrl
add
or
lods
fistps
fsts
outsb
xor
lahf
add
test
les
cmp
mov
mov
bnd
aam
roll
stos
push
push
jne
lret
push
xlat
sbb
sbb
pop
lods
test
flds
sub
mov
push
mov
jge
cmp
decb
hlt
mov
addr16
xor
dec
or
stc
or
inc
pop
xchg
or
dec
adc
pushl
jnp
scas
loopne
xchg
nop
gs
dec
add
fsubs
int3
push
add
loopne
lret
repnz
pop
daa
mov
mov
lret
jle
push
nop
outsb
mov
mov
lret
mov
dec
pop
sub
push
in
ds
inc
cltd
aam
cmp
enter
pop
mov
inc
and
pushl
sbb
ss
imul
insl
jg
xchg
xchg
mov
in
xchg
dec
lock
adc
addr16
and
jne
jle
jge
cwtl
outsb
pop
xchg
dec
xchg
popa
and
mov
or
adc
dec
mov
imulb
xchg
sti
push
lret
dec
lea
or
das
mov
call
push
xchg
cwtl
sbb
enter
mov
shrl
cli
movsl
dec
push
out
ficoms
push
out
inc
out
test
enter
ret
xor
cltd
xor
or
pop
les
jbe
or
test
dec
cmpsl
sbb
ljmp
mov
mov
into
dec
sbb
loop
push
jne
in
sti
mov
sub
leave
xchg
inc
outsl
std
xchg
jb
mov
shll
test
cmovns
xor
pop
movsl
dec
popf
or
lcall
movsl
stc
push
jmp
pop
xor
shrl
fs
xchg
ror
loope
test
dec
pop
imul
aam
stos
insl
movsl
stos
das
mov
mov
pop
push
push
jne
or
clc
add
sub
lds
dec
mov
fwait
xchg
insl
mov
jno
je
pushf
or
sarb
or
push
pop
and
sbb
shlb
or
icebp
jb
fistpll
cmc
xor
sahf
ja
lods
ljmp
divb
xor
push
xchg
push
mov
stc
cmp
or
xchg
rcrl
sbb
xchg
mov
dec
jno
mov
dec
stc
add
test
cmp
das
dec
rolb
jge
and
add
mov
add
inc
xchg
loope
jmp
aam
pop
push
mov
push
xchg
fcomps
cmp
sub
jmp
cmp
inc
sub
jg
sbb
mov
mov
repz
jo
lds
mov
dec
pop
adc
adc
mov
sbb
cmc
mov
ficompl
mov
and
mov
pop
and
xchg
xchg
sahf
jbe
sub
gs
pusha
pop
out
cmp
xchg
jne
or
inc
xor
xchg
cltd
cli
fbld
filds
lods
inc
pop
bound
mov
cmp
ljmp
hlt
mov
rolb
dec
mov
insb
ja
scas
xchg
xor
mov
subl
pop
adcl
scas
sub
jnp
iret
scas
add
out
mov
cmp
fwait
repz
lahf
sahf
inc
test
mov
push
mov
mov
cs
icebp
repnz
jmp
push
es
ret
and
inc
sti
or
test
adc
movsl
sub
push
lods
mov
es
xchg
sbb
sbbl
nop
pop
and
dec
pop
mov
pop
fildl
arpl
push
push
clc
icebp
mov
sbb
arpl
sub
push
pop
shlb
mov
sbb
ret
aaa
mov
mov
jo
cli
lea
cmc
mov
push
xchg
lret
aaa
cmp
ds
mov
mov
stos
xchg
fcom
leave
jbe
ds
aam
data16
mov
push
out
decb
movsl
mov
test
xchg
hlt
rclb
ret
cvtps2pi
or
es
or
mov
push
mov
or
push
mov
pop
orps
arpl
xor
mov
jg
ja
dec
mov
or
stos
xchg
fcompl
pop
mov
mov
insb
ret
in
notb
xor
js
cwtl
int
xchg
mov
daa
js
out
lret
inc
jg
pop
jmp
mov
pop
aad
pop
and
jl
lods
push
mov
and
dec
mov
lds
xor
sub
pop
sub
ret
inc
rol
arpl
push
fst
cmp
cmpsb
mov
mov
ss
fisubl
cmp
inc
orb
rolb
add
cmpsl
adc
dec
repnz
fisubrl
mov
ds
lods
pop
xor
pop
fwait
arpl
dec
adc
idivl
mov
xchg
ljmp
ds
and
mov
mov
cwtl
push
hlt
cmc
dec
nop
mov
xchg
pop
inc
add
adc
dec
leave
pop
xorb
out
fcomi
mov
xchg
sti
call
shl
or
xor
or
sub
adc
cmp
pop
out
jae
in
lret
xor
push
int3
aaa
xor
fldl
mov
jecxz
mull
sub
pop
mov
jle
movsl
lcall
movsb
push
into
xor
pop
cltd
ret
push
jno
inc
aam
push
out
mov
dec
push
xchg
adcl
mov
bound
frstor
push
jmp
dec
mov
stc
loopne
enter
dec
sub
dec
adc
mov
shrl
imulb
clc
jp
es
xchg
push
xor
in
cmpps
enter
xchg
cmp
cltd
pusha
or
add
and
popa
je
cwtl
sbbl
xchg
cli
movsb
int
dec
pop
mov
or
jp
aaa
lods
pop
aas
xchg
inc
mov
and
push
mov
xor
sub
pop
mov
mov
aas
jno
imul
adcl
or
jo
jecxz
ret
pop
sbb
mov
mov
loopne
push
jg
in
jle
cmc
cvtps2pi
pushf
sahf
mov
cmp
xor
test
stc
call
cld
push
xor
dec
dec
fwait
pushf
cmpb
push
adc
jbe
leave
jmp
fadd
pop
xor
jno
je
push
gs
xor
in
jns
and
lods
divl
into
add
arpl
xor
pop
pop
adc
inc
pop
mov
int3
test
mov
cmp
push
push
pop
inc
xor
hlt
pop
stos
mov
ret
dec
fcoms
fistpl
leave
jmp
int3
ljmp
dec
or
xor
movsl
xor
jl
and
sbb
xchg
inc
xorl
xor
cmp
dec
inc
out
inc
jecxz
inc
add
repnz
sub
mov
pushf
fdivr
mov
imul
stos
lock
mov
sub
sub
mov
leave
add
repz
es
hlt
pop
shlb
dec
test
scas
xchg
lret
xor
insb
dec
les
push
call
pop
pop
jg
dec
stc
filds
pop
pop
dec
jl
rolb
cli
push
pop
mov
mov
adc
adc
inc
dec
jecxz
sbb
xor
call
je
fs
enter
test
inc
cmp
mov
mov
mov
les
outsb
aas
scas
repz
sti
std
mov
xchg
xchg
xchg
pop
mov
and
mov
sub
fnstenv
sbb
jo
dec
inc
sahf
jg
enter
pop
pop
xchg
or
cmp
ds
xlat
imul
lcall
enter
cli
pop
mov
jecxz
aam
sbb
pop
test
lret
test
push
jae
xor
cmpb
out
mov
mov
int3
leave
sahf
lret
cmp
repz
pop
adc
aas
fwait
fs
cmp
jp
movsb
repz
cmpsb
jbe
push
loop
xor
cmpsl
jb
dec
or
dec
xor
scas
mov
fisubs
push
inc
inc
in
xchg
aas
or
xor
pushf
adc
xchg
inc
lahf
popa
xor
leave
inc
fidivl
data16
xor
int3
out
xor
mov
and
arpl
xlat
dec
call
mov
and
jbe
xchg
call
mov
jmp
sub
sarl
pop
push
adc
jle
jg
rcrb
cmp
dec
sub
jg
mov
adc
mov
inc
jg
pop
dec
and
sbb
and
xor
inc
fs
push
lcall
outsl
into
lea
inc
jp
popf
dec
dec
jno
mov
mov
cmp
mov
popl
push
jge
dec
jp
push
dec
jbe
inc
sub
push
mov
push
mov
shll
mov
pop
out
push
mov
cmpsb
mov
pop
add
fstpt
cmpsl
sbb
sub
adc
fsubrl
imul
or
sti
pcmpgtw
push
fidivs
int3
sti
adc
andb
popa
popa
dec
dec
jg
xor
in
movsl
sub
mov
pop
test
in
xchg
aaa
mov
stc
mov
adcb
into
sub
dec
xchg
sbb
or
xchg
pusha
adc
out
sbb
xor
pusha
sti
es
dec
xor
jno
test
insl
bnd
cli
cmp
dec
inc
inc
js
sbb
jmp
dec
mov
loop
mov
push
mov
jecxz
mov
xchg
ret
nop
or
mov
bound
pop
pop
ljmp
xchg
test
bound
loope
shl
stos
xchg
int3
sahf
xchg
xchg
loop
sbb
je
cs
push
xor
pop
xchg
add
or
jne
mov
dec
push
adc
clc
out
icebp
xlat
arpl
add
inc
mov
jp
movsl
sub
sti
pop
pop
out
sbb
inc
jg
insb
lcall
popa
mov
scas
addb
xor
and
push
jmp
rsqrtps
orps
xchg
ss
stos
test
sub
lcall
mov
push
jg
sub
loop
fiaddl
out
and
leave
shl
bound
mov
inc
or
fs
jns
xor
fwait
je
dec
and
lcall
ds
xor
movsb
popa
bound
sub
adc
addr16
sub
je
mov
aam
sbb
inc
cmpsb
cmp
adc
push
std
lcall
negl
push
push
mov
cli
mov
loopne
sub
mov
sub
lods
cwtl
and
sub
xlat
test
insl
pop
gs
xlat
je
leave
imull
mov
sbb
sub
sub
fisubrl
mov
in
in
mov
fs
sbb
push
mov
mov
mov
add
movsl
mov
cmc
loop
dec
lcall
sbb
add
sub
pop
pusha
cmp
test
out
and
and
das
xchg
lret
jmp
das
stos
mov
loopne
jle
sub
dec
pop
mov
xchg
ja
cmp
xchg
jle
fnstsw
imul
push
sbb
mov
push
cld
nop
and
lds
mov
lahf
dec
adcl
stos
xor
xchg
das
xchg
push
mov
je
test
or
cmp
jmp
scas
ds
xor
add
data16
and
repz
mov
push
repnz
or
sub
cmp
mov
cmp
pushf
xchg
movsb
rclb
mov
sbb
lret
stos
lods
int3
adc
adc
mov
or
cwtl
lret
test
or
notl
pop
xor
and
into
roll
add
mov
or
sub
dec
dec
push
popf
aad
mov
sbb
and
movsl
adcl
mov
mov
cld
pop
jg
jl
xor
pop
loop
push
loop
mov
loop
cmp
add
aad
in
jle
repz
sti
mov
outsl
aas
stos
lds
dec
cmp
repnz
mov
inc
gs
popf
dec
stos
mov
sbb
lahf
lds
mov
xchg
pusha
mov
movsl
test
jg
sarl
gs
pusha
ret
in
pop
fsubrp
mov
repnz
mov
cmp
out
sub
std
and
rorl
fsub
mov
inc
cmpsb
lcall
xchg
test
dec
filds
mov
inc
mov
cmp
and
dec
lahf
xchg
add
aas
xchg
xchg
cmp
adcb
add
xchg
push
popf
pop
pushl
sbb
jl
cli
pop
fidivrs
adc
cltd
adc
or
sub
and
dec
push
in
fwait
xchg
mov
dec
jno
mov
pusha
fiaddl
cmp
into
ror
andl
test
lcall
push
push
shlb
mov
fimull
mov
dec
rcl
icebp
test
cld
inc
fnstsw
inc
mov
insb
rcrl
out
add
shlb
fst
pop
pop
sbb
ds
mov
insl
rorl
xchg
pop
mov
std
add
outsb
stc
out
jns
lret
nop
sbb
xchg
mov
mov
stc
sbb
nop
pop
in
es
shll
shrb
inc
dec
add
aam
adc
mov
inc
stos
pop
je
imul
data16
push
sub
fs
xor
sbb
and
add
jge
sbb
fldenv
cmpsl
je
pop
call
aaa
jmp
les
adc
out
inc
xchg
fwait
fs
aad
inc
jne
xor
jmp
stc
cmp
pop
imul
dec
mov
mov
ficoml
pusha
test
cltd
push
mov
pop
add
mov
ja
push
lret
into
and
mov
lret
fbstp
sbb
nop
dec
xchg
out
js
cs
sbb
jbe
mov
mov
mov
jl
fiaddl
lods
fwait
imul
mov
sub
mov
dec
jle
mov
mov
bound
and
sbb
and
dec
test
push
mov
add
out
out
mov
cld
insb
push
mov
pushf
dec
inc
imul
ljmp
sbbb
push
push
and
add
fildll
dec
mov
and
adc
sti
decl
addr16
and
idiv
aaa
call
nop
jae
pop
sbbl
mov
xchg
clc
leave
or
sti
out
out
sub
and
cmc
jnp
cs
dec
mov
inc
out
das
jecxz
xchg
leave
sub
mov
dec
mov
das
divl
outsl
pop
or
jge
scas
mov
pop
pop
outsl
orb
imul
out
inc
outsl
ljmp
jl
repz
pop
ljmp
jo
into
cmc
test
push
push
mov
push
dec
pop
cmpsb
lods
sbb
xlat
pop
mov
push
mov
jl
ret
inc
sahf
fbstp
insb
jb
add
arpl
iret
cmp
pop
or
jecxz
inc
and
rcr
mov
repnz
push
mov
jnp
lcall
arpl
jae
inc
sarl
cmp
mov
lock
pushf
test
fdivl
cmp
test
lods
addr16
stc
fdivl
jl,pn
cmpb
pop
out
ja
imul
nop
add
push
xchg
out
push
in
aas
popf
and
out
lahf
inc
imul
enter
adc
push
stos
push
mov
dec
std
push
stos
loope
adc
cmc
xchg
bound
mov
mov
shlb
nop
cmc
and
sarl
imul
movsb
nop
xchg
xlat
inc
mov
dec
or
mov
pop
jp
cltd
xchg
push
arpl
push
push
fisubrl
dec
fucomip
and
popf
mov
or
das
cmp
or
fs
mov
std
mov
ds
test
jbe
fbstp
ficoml
xchg
and
aaa
and
movsl
push
mov
dec
movsb
mov
adc
nop
sub
cwtl
into
das
insl
or
dec
adc
cs
xor
sbb
mov
repz
jnp
add
in
sbb
fwait
lret
sbb
add
xor
insb
sbb
in
or
imull
jne
cmp
or
ja
mov
mov
test
xor
repz
loope
insb
shrd
mov
push
mov
push
aad
jnp
pop
adc
sub
daa
rorb
das
mov
or
adcb
hlt
scas
push
jecxz
hlt
jns
or
mov
sahf
test
dec
js
adc
mov
in
mov
mov
fstl
pop
add
ss
xchg
jns
lahf
jbe
nop
ds
pop
xor
xor
pop
inc
stos
sbb
mov
pop
adc
xorb
jle
add
mov
addl
sti
push
scas
rolb
pop
push
fldt
test
mov
push
mov
sub
je
push
sbb
cld
dec
jle
lds
fmull
push
push
pop
or
pop
mov
and
adc
ljmp
jmp
aad
push
imul
adc
stos
scas
mov
lods
xor
cltd
xchg
and
xchg
mov
push
ljmp
inc
in
clc
movsb
call
cmp
aad
lret
push
daa
sbb
out
xor
jecxz
xchg
ss
or
xor
or
jle
adc
jecxz
adc
int3
dec
push
sub
adc
arpl
xchg
jbe
mov
imul
out
or
add
xor
jae
imul
or
inc
shl
sbb
xor
mov
mov
aaa
imul
jecxz
xlat
std
jp
lahf
sub
mov
jp
jmp
jmp
test
sbb
or
pop
inc
or
lds
fcmovnu
pop
sbb
into
and
fdivrl
push
inc
jge
mov
call
add
push
adc
sbb
ficompl
sbb
int3
pop
jnp
rcl
in
fs
jg
push
inc
inc
out
sub
sub
mov
jmp
mov
push
popf
cld
pop
sub
sub
out
mov
adc
ss
pop
xor
push
or
mov
idivl
daa
push
enter
mov
imul
stc
outsb
test
pop
push
sub
fsubl
mov
js
pop
arpl
sub
sbb
push
rolb
dec
mov
push
arpl
mov
fwait
lds
outsb
je
sub
pop
outsl
test
aas
push
jmp
clc
loope
ja
dec
and
shll
out
mov
or
jbe
aam
xlat
fs
cwtl
sub
movsl
push
popa
outsl
mov
pop
dec
ret
out
enter
mov
test
cmc
or
lret
mov
or
mov
sbb
add
mov
push
push
inc
pushf
test
orb
stc
xor
clc
sahf
hlt
push
and
push
dec
pop
mov
dec
repz
movsl
clc
jmp
inc
addr16
lret
or
adc
jb
into
push
jnp
mov
xchg
into
mov
gs
jmp
dec
or
xchg
scas
and
sub
fisubrl
mov
push
lea
xor
std
jnp
xor
mov
cmpsl
test
lret
lret
pop
lods
inc
mov
mov
mov
int3
or
enter
lds
fisttpl
add
sub
or
mov
cmc
jne
dec
push
adc
push
ror
jbe
cmp
lret
inc
lods
push
test
out
push
stc
inc
mov
mov
ja
test
xor
push
xor
cmpsb
outsb
lret
hlt
js
push
push
adc
jnp
and
ss
sub
lcall
push
mov
jge
jecxz
sub
jne
cmp
fsubrl
or
mulb
shl
cwtl
lock
push
xor
sub
mov
mov
hlt
mov
add
lcall
cmc
ljmp
fucomi
in
loop
inc
icebp
sub
mov
or
clc
sub
push
sub
mov
xorb
js
cmp
out
inc
enter
loop
and
negl
sub
jnp
rcr
xchg
xor
shlb
stc
add
inc
push
push
outsb
into
mov
es
xchg
mull
fidivrs
or
stc
push
push
pop
rcrl
idivb
jmp
jno
or
js
and
add
sbb
inc
aam
mov
mov
mov
pop
sub
or
out
push
push
inc
push
mov
fcmove
int3
lahf
lock
dec
pop
imul
dec
je
push
ss
fidivs
leave
xchg
or
and
iret
lcall
xchg
xchg
jno
cld
cmp
sbb
in
sub
mov
adc
mov
in
push
add
inc
repz
mov
pop
mov
subb
inc
inc
dec
push
inc
popf
aad
daa
aad
mov
shrb
adc
stc
fs
mov
sub
icebp
pushf
sbb
stos
xor
cmp
mov
pop
push
lret
cmp
pop
and
lcall
sub
jnp
jle
cli
call
jns
movsl
jo
or
jns
lcall
sub
test
std
jp
jg
int
jb
push
lret
insl
add
mov
test
int3
pop
cmc
leave
pop
sti
in
xor
cltd
adc
jp,pt
in
dec
cmp
fstpt
stos
pop
push
pop
mov
sbb
frstor
out
gs
jns
add
in
fcom
pushf
nop
dec
pop
sub
out
loope
cmp
push
les
test
or
jge
loop
dec
arpl
out
xchg
and
into
jae
cli
nop
out
leave
inc
loop
shll
shll
and
push
mov
loopne
mov
cmp
push
and
movsl
inc
lods
addb
test
adc
call
ror
sbb
addr16
pop
push
push
in
daa
lret
cmpsl
xchg
xor
xor
or
scas
icebp
and
add
sub
xorb
adc
inc
leave
and
cmp
fld
aam
xchg
cmp
out
mov
adc
or
iret
pop
push
pop
stos
mov
jno
fimull
loope
push
inc
shlb
pop
xor
jmp
dec
push
push
loopne
clc
ds
les
and
cmp
lock
andb
rolb
push
test
xchg
jp
lods
xchg
iret
iret
or
push
push
push
clc
das
inc
cmc
sbb
popf
xor
mov
sbb
hlt
xor
xchg
cwtl
insb
dec
aas
idiv
bound
jg
jns,pt
je
or
jg
inc
xor
xchg
pop
fidivs
insb
lods
inc
push
sti
mov
push
push
jne
jg
pop
cmpsl
xchg
inc
xchg
fisttpll
je
rorl
scas
cwtl
adc
loope
insl
lahf
mov
inc
adc
insb
xor
xchg
push
pop
insl
movl
call
cld
ret
sub
cmp
stos
stos
pop
sbb
fbld
psadbw
pop
test
data16
dec
mov
cmpsb
and
jmp
or
cmpl
mov
mov
in
sub
leave
sti
and
add
orb
dec
sbb
fadds
pop
aas
mov
xchg
mov
aas
es
and
rolb
add
scas
mov
aaa
dec
add
sbb
gs
sub
out
xchg
nop
movsb
rorl
mov
adc
popa
dec
hlt
push
aas
popa
into
rcrb
roll
int3
out
mov
push
xor
addr16
lock
cltd
cmp
iret
mov
cmpsl
aad
test
jmp
jb
add
stos
mov
mov
pop
jne
fwait
sub
jl
adc
andb
jmp
or
dec
movsb
sahf
sahf
data16
jge
icebp
push
std
cmp
pop
hlt
lea
mov
cwtl
mov
sub
cmp
jmp
jae
add
mov
pop
nop
pushf
inc
mov
push
pop
loope
sub
sahf
clc
xchg
test
jae
mov
imul
cmpsl
inc
mov
sbb
aad
or
out
cmp
cmc
pop
or
mov
mov
inc
xlat
jae
push
les
cltd
pop
pop
pop
in
mov
mov
adc
aam
cmpl
addr16
inc
adc
sar
mov
dec
pop
sbb
mov
xchg
sub
fst
ret
or
fcmovne
and
add
iret
movsb
int
cs
inc
cmpsl
jne
fbld
out
mov
mov
mov
inc
in
push
jo
scas
inc
xor
iret
out
or
into
sub
ja
hlt
xor
pop
bound
fcmovnb
inc
cmp
mov
pop
daa
cmpsb
pop
pop
xchg
xchg
stc
cld
ja
jbe
data16
test
push
xor
pop
pop
fwait
imul
mov
hlt
popf
cmc
mov
cwtl
or
pop
aam
or
adc
pop
je
cltd
xlat
scas
aad
out
pop
ljmp
mov
xchg
or
pushf
movsl
es
xchg
mov
imul
stos
mov
insb
inc
nop
cs
xchg
cmp
out
xchg
rolb
jae
sub
leave
dec
cmp
scas
jno
dec
clc
in
sub
test
and
fildl
daa
ljmp
in
jae
dec
sarb
out
imul
outsl
sbb
inc
sub
push
imul
out
or
data16
test
sub
pop
out
fstpl
decl
jb
or
sub
add
jmp
movsb
scas
mov
icebp
imul
popa
sub
frstor
insl
xchg
pop
sub
cmp
or
popl
push
mov
sbb
loopne
mov
nop
sbb
addr16
movsb
repnz
ficompl
sub
ja
dec
xchg
rolb
sbb
stc
inc
rcrl
or
adc
and
int
leave
in
or
adc
mov
push
arpl
adc
and
add
fnstcw
mov
pop
sub
mov
daa
call
mull
push
rcl
lods
add
js
out
loope
popf
xor
jns
pop
push
jae
aad
out
cmp
xchg
shrl
mov
fmuls
or
jbe
test
add
daa
mov
sub
in
aad
insb
pusha
addr16
mov
xrelease
jae
jp
pop
xchg
xor
aam
call
lods
rclb
sbb
pop
pop
cmp
lods
not
sub
xchg
shll
aas
jb
xor
adc
lods
mov
xchg
lock
cwtl
cli
and
popaw
xchg
mov
scas
into
fadd
aaa
sub
ljmp
lods
repnz
sub
mov
pusha
stc
xor
sti
pop
cmp
sub
xor
mov
inc
xor
fs
in
or
mov
jp
test
in
insl
push
dec
push
cmp
pop
inc
lret
es
mov
xor
sbb
adc
leave
int3
testb
push
dec
inc
lea
push
sub
fsts
ret
push
push
test
jbe
push
stos
jne
bound
xchg
test
inc
lret
mov
sbb
mov
loop
mov
mov
repz
mov
cltd
shl
daa
add
dec
aam
or
orb
fstl
jecxz
jo
pop
cmpsl
pushf
jge
lea
cmp
sub
inc
mov
add
lods
inc
aas
mov
jl
pop
fnstsw
sbb
inc
cmpsl
and
dec
xor
ss
adc
popa
mov
pop
insb
in
ficoms
add
fadds
push
adcb
jp
add
adc
push
push
cmp
xchg
movsl
cltd
xchg
popa
aas
xchg
je
mov
mov
loope
out
pop
aad
inc
xchg
fsts
lret
mov
lahf
adc
adc
inc
xlat
sbb
adc
fildll
xor
mov
out
jge
into
test
cld
jecxz
sub
jo,pt
ret
mov
nop
ss
xor
jmp
lods
cmc
and
js
sub
push
cmp
pop
push
out
pop
pop
lcall
add
ja
ja
scas
out
and
xchg
orb
jns
mov
jns
fcmovne
out
enter
cld
in
pushf
push
iret
stc
mov
and
lcall
stc
mov
mov
push
fidivrl
shl
inc
add
cs
jmp
outsl
repz
jg
sarl
idiv
mov
dec
ja
std
inc
cmp
mov
pusha
out
adc
xlat
shll
mov
insb
into
xchg
push
mov
jae
mov
sbb
jne
outsb
test
push
push
loope
inc
push
xor
xchg
dec
push
push
xor
stos
push
pop
cltd
ret
sub
popf
mov
insb
mov
das
movsl
mov
addr16
rorl
xchg
pushf
xor
cmp
loopne
push
outsl
call
insl
sbb
loope
enter
imull
jg
mov
int3
xchg
jmp
rolb
adc
push
fidivs
lock
cwtl
and
test
jae
pop
movb
push
sbb
popf
xchg
push
mov
mov
or
mov
cli
mov
jnp
and
ffree
idivb
push
xor
lret
pop
mov
and
in
xchg
mov
int
xchg
push
sub
shl
aam
rorl
adc
dec
in
push
inc
adc
repnz
jmp
scas
aaa
xor
lret
mov
cs
push
or
jb
test
lea
addr16
ficoms
hlt
mov
push
mov
mov
mov
ljmp
test
movsb
aas
jns
fcmove
cmp
inc
leave
jo
mov
iret
pop
xchg
xor
push
push
scas
xabort
sbb
ret
xchg
ljmp
xchg
or
mov
cld
lret
and
data16
sub
pop
push
mov
out
adc
or
gs
lods
ja
fisubl
jecxz
pusha
push
cmp
in
jge
xchg
dec
mov
push
in
jno
lods
in
or
mull
cmp
sub
jmp
push
and
dec
lods
aad
mov
push
push
in
xlat
lods
xchg
fistpll
jns
jae
or
adc
std
test
out
bnd
mov
mov
pop
out
ss
inc
cmp
add
mov
sbb
fwait
xor
mov
push
pusha
and
mov
rcr
mov
mov
push
inc
test
popf
pop
inc
push
adc
enter
repnz
sbb
icebp
adc
mov
leave
pusha
add
mov
add
in
sbb
movsl
mov
test
popa
andl
mov
outsl
pop
xchg
shrb
cmp
lods
sbb
push
shl
int
and
imul
xlat
pop
sbb
adc
sahf
jbe
push
js
loope
mov
xchg
scas
dec
or
push
and
lods
dec
call
test
dec
fildl
xor
jge
nop
dec
cwtl
xchg
inc
cmp
sbb
ljmp
sbb
fstpl
dec
inc
ret
adc
xchg
jne
out
lods
add
xlat
dec
mov
or
divb
mov
inc
ja
into
outsl
sbb
js
or
pop
add
lock
sub
cmp
int3
mov
sub
test
call
or
mov
adc
push
icebp
lock
xchg
sub
push
dec
adc
inc
lds
sub
test
push
lcall
outsb
les
and
movl
shr
dec
jns
add
xchg
in
lcall
and
fwait
xchg
aam
push
inc
mov
mov
loope
mov
repnz
shll
aad
and
pusha
es
mov
xchg
jnp
mov
les
in
movsl
mov
js
rorb
cmp
mov
test
lods
adc
cs
das
jp
cmp
and
and
jge
cmp
or
stc
fnstcw
xor
stos
cmpb
nop
cmpsb
ret
pop
dec
shr
or
or
mov
add
inc
dec
mov
popf
cmp
ret
push
xor
mov
inc
mov
js
scas
mov
mov
inc
ftst
mov
adc
push
das
test
mov
adcb
cmc
push
pop
jle
stos
push
add
adc
dec
insb
bound
stos
cld
sbb
push
jmp
sarb
jge
lahf
dec
xchg
mov
jge
arpl
cmpsl
inc
or
nop
and
cli
xchg
push
and
aad
or
imul
and
add
addb
aas
arpl
pop
into
jno
adc
andb
mov
shrb
jle
xchg
lods
cmpsb
addr16
xchg
fistpll
sub
jmp
outsb
add
rorb
aad
pusha
sbb
push
clc
jecxz
xlat
mov
nop
mov
and
insl
popa
push
push
gs
test
push
call
xchg
addr16
cli
scas
mov
data16
or
insl
lret
icebp
xor
sub
adc
gs
pop
lret
cmp
loope
in
adc
mov
mov
out
sbb
push
mov
int3
repz
aam
and
xchg
out
outsl
xor
xor
cli
test
pop
outsb
repz
inc
push
inc
cmpsl
scas
or
addr16
fdivrs
adc
xor
xor
rcl
aas
jl
sub
jnp
movsl
rolb
add
add
aas
fdivrl
push
push
push
jp
out
out
loope
sbb
push
in
push
push
std
ss
or
fcompl
test
cmpsl
add
or
jnp
push
adc
sub
iret
xchg
and
out
push
inc
mov
iret
sub
fldt
imul
xchg
mov
xchg
or
sbb
roll
scas
insl
lret
jae
or
fdivp
aas
stc
mov
mov
aam
inc
push
ljmp
or
insl
sbb
and
or
test
dec
in
mov
adc
pop
in
pop
and
mov
jmp
test
cmpb
dec
stc
fdivp
push
or
mov
pop
leavew
js
out
repnz
jge
and
mov
sub
push
jmp
inc
mov
and
inc
lret
push
dec
mov
leave
ret
add
jp
cli
out
wrmsr
rol
rcrl
adc
sub
mov
pop
into
std
jg
negb
jb
cmpsl
jno
lahf
dec
xor
fs
mov
sub
das
aaa
pop
aam
out
jmp
mov
shrb
xchg
in
scas
sbb
mov
lods
cmp
inc
mov
and
in
pop
repnz
test
js
fsubrs
shlb
lret
in
or
jle
ljmp
or
dec
mov
sarb
push
or
lahf
jbe
int3
cs
iret
mov
dec
and
mov
dec
ljmp
mov
xchg
lahf
pop
sahf
adc
insb
inc
inc
loopne
pop
inc
push
sub
or
insl
jge
add
pushf
xchg
cmp
jl
fnstsw
or
mov
xchg
xchg
sahf
in
js
test
push
in
mov
sub
insl
inc
add
sbb
mov
sbb
cld
inc
bound
repnz
adc
repz
test
je
mov
xchg
in
js
cmp
fwait
jno
mov
add
cmp
lahf
xchg
daa
lods
sub
jl
dec
xchg
sbb
xchg
inc
lods
adc
je
adc
xchg
repnz
in
dec
je
scas
mov
inc
aam
data16
jne
dec
cmp
cs
insb
or
pop
jns
dec
jge
xchg
ljmp
cwtl
lcall
repnz
jmp
push
pop
aas
xchg
cmp
test
mov
and
fpatan
sti
push
adc
pop
mov
push
push
or
movsl
jp
aam
sbb
addr16
int3
fwait
mov
stos
aam
int
cmp
inc
push
outsl
cmp
dec
movsb
xrelease
popf
jge
rcrb
and
xchg
mov
adc
cs
adc
inc
sbb
aad
xor
clc
fldl
lret
xor
out
pop
inc
pop
cmc
xchg
xor
test
mov
mov
stc
fidivrl
in
and
inc
cmp
data16
fbld
sub
jmp
dec
xchg
int3
orl
xchg
imull
inc
rep
in
mov
xchg
movsl
fimull
cmpsb
lds
inc
std
jecxz
dec
mov
mov
fiadds
push
sbb
dec
enter
and
sti
shrb
inc
lods
shrl
bound
lret
hlt
iret
cmp
es
dec
lea
mov
lret
loop
out
push
popf
mov
test
cmpsb
test
fnstenv
cmp
mov
rdpmc
push
in
testb
daa
push
icebp
imul
sbb
adc
lods
sub
sbb
cmpsb
dec
cmp
pop
loopne
mov
jmp
popf
ret
clc
fwait
jb
in
hlt
mov
xor
xchg
lahf
xchg
sbb
sub
movsb
or
ret
lods
fld
movsl
add
jecxz
dec
xor
jmp
mov
mov
xlat
out
je
dec
cmpsb
loope
add
xor
jge
jmp
cmp
pop
fildl
pop
mov
xchg
dec
adc
out
pushf
dec
in
add
sahf
loop
mov
pop
cld
decb
fsubp
or
rcr
or
outsl
dec
adc
dec
inc
jns
push
sbb
sti
sbb
ja
hlt
sub
in
xchg
in
jne
push
ficoms
fisttpll
sbb
xchg
fstpt
loop
inc
fnstsw
lret
push
cmovb
movsb
mov
sti
mov
ljmp
inc
and
xchg
dec
stos
xchg
and
cmpsl
push
lret
dec
jp
pop
cmp
test
inc
xor
ret
inc
out
lds
add
pusha
adc
call
gs
in
push
mov
stc
push
aaa
gs
sub
cmp
adc
cwtl
sbbb
xchg
test
movsl
aaa
leave
and
lret
or
sbb
jbe
push
jo
data16
pop
outsb
or
xchg
xor
fldt
out
mov
mov
sahf
jg
lcall
dec
xchg
adcb
sub
aaa
out
aas
and
mov
call
add
cltd
mov
fucomp
cmpsb
cwtl
push
and
jl
cs
lock
fsub
insl
and
and
mov
adc
outsl
and
xchg
jb
jne
adc
xchg
adc
mov
es
lret
push
loopne,pt
inc
sbb
xchg
dec
push
aas
call
xchg
sbb
sbb
sub
dec
addr16
push
jge
out
and
mov
sbbb
adc
aas
xorl
stos
mov
shrl
adc
xor
mov
jge
je
sarb
inc
dec
pusha
jl
arpl
repz
sarl
mov
sbb
and
cmc
push
out
gs
adc
sti
mov
jne
test
lock
sarl
sarb
jecxz
jp
mov
dec
xchg
xlat
dec
ja
xor
mov
inc
aas
pop
mov
pop
pop
and
cmpsb
paddb
ret
dec
mov
and
adc
mov
inc
pop
into
scas
pop
pop
adc
sub
mov
or
scas
pop
out
cmp
jl
mov
xchg
xchg
push
call
shll
xchg
lea
sub
xchg
pop
out
sub
push
insl
call
sub
test
int
sbb
adc
jp
aam
sti
in
movsb
dec
sbb
mov
add
push
jecxz
xor
ret
or
jle
cmp
sbb
sub
push
adc
jecxz
cmp
mov
xlat
jp
sub
loop
lgs
cmc
cli
mov
push
notb
push
sbb
outsl
dec
aam
sub
sub
gs
sub
fiaddl
push
mov
scas
ret
adc
fwait
pop
sbb
js
or
pop
sbb
into
mov
push
fldl
mov
outsb
lea
push
cltd
repz
dec
js
neg
imul
mov
lock
lds
daa
mov
inc
mov
fwait
sahf
push
outsl
adc
xor
and
xchg
lea
and
sub
lret
push
jbe
lret
in
push
add
cmp
leave
aaa
ds
pop
xor
add
dec
jl
mov
cmp
aad
mov
imul
push
movsb
jle
in
xchg
dec
jl
mov
shrb
ret
pop
or
mov
or
cmp
scas
push
loop
pop
ljmp
xchg
push
icebp
xchg
lcall
xchg
leave
cmp
scas
es
adc
sub
repnz
xchg
and
dec
push
push
mov
lods
fisttpl
popa
test
mov
xor
call
mov
outsb
or
shrb
push
mov
mov
js
lods
jg
push
push
out
xor
xchg
pop
sbb
jecxz
jno
jnp
mov
repz
xchg
jo
dec
cwtl
xchg
shrb
mov
pop
outsb
imul
and
lock
lret
test
push
repnz
jmp
dec
push
pop
inc
dec
adc
xchg
xchg
add
inc
pop
mov
and
test
push
into
cmp
sbb
cmc
add
lock
cli
pop
xor
xchg
mov
or
sub
cmp
sbb
test
mov
movsl
mov
push
test
test
xor
movsb
ret
iret
fsubrl
inc
mov
lret
sbb
dec
jb
movsb
sub
inc
push
cmp
xorb
popf
std
dec
sar
ret
and
das
ret
and
mov
mov
movb
std
xchg
pop
aaa
push
bound
cmp
jnp
sub
mov
xchg
and
mov
rep
in
ds
insl
xor
fstpl
push
add
fisttps
push
adc
into
leave
scas
sahf
stos
mov
aaa
shlb
stos
out
call
dec
cmpsl
xchg
aas
pop
test
sahf
aad
fwait
popa
test
sub
push
sti
adc
scas
or
movsb
lea
push
adc
dec
pop
cld
popf
dec
test
std
pop
cmpsb
push
sub
insl
jp
outsb
arpl
jle
jae
jno
int
jecxz
call
xchg
das
xchg
call
inc
jle
dec
xlat
imull
mov
jb
cwtl
ret
fwait
dec
or
cwtl
mov
sbb
jno
pop
shr
sbb
test
jle
loopne
adc
sbb
pop
in
or
lea
fldt
int
lahf
dec
fdivrl
fwait
mov
mov
das
push
sub
push
add
rcr
xor
sbb
fnsave
push
dec
cmp
jns
jle
mov
ret
out
push
jns
addl
mov
dec
sbb
adcb
jae
mov
into
inc
cli
aaa
push
outsb
mov
ret
or
cmp
into
sbb
ss
xor
cmp
popa
adc
and
xor
sub
xor
cmc
sbb
lahf
es
sub
outsl
fmull
insl
movb
sbb
add
and
popa
mov
call
mov
jl
or
pop
flds
jnp
loop
mov
xor
insl
cld
dec
in
imul
adc
cli
ret
pop
cmpsb
mov
gs
inc
mov
xchg
mov
loopne
loopne
enter
jg
mov
movsb
out
fprem
jb
or
ficompl
lahf
xchg
lods
movsl
mov
cli
insl
or
shlb
mov
xchg
or
insl
fiadds
ds
loop
adc
aas
das
adc
movsl
stc
pop
pop
nop
fsub
pop
cmpsl
pop
andb
ret
adc
scas
je
mov
loope
and
and
mov
fsubp
ret
rclb
sub
rcrb
adc
sub
fxtract
aaa
push
push
mov
mov
sahf
mov
call
sub
push
jecxz
mov
jecxz
mov
mov
mov
repnz
shrb
xorb
jle
add
inc
lods
pop
sarl
push
mov
inc
scas
cmp
lea
dec
insb
lock
inc
pusha
in
or
outsl
jl
adc
hlt
mov
rcll
or
cmp
cmpsl
lret
add
lea
aam
pop
rcrb
jge
pushf
jnp
sbb
cmp
add
sub
hlt
pop
push
mov
stc
cmp
xchg
mov
mov
lds
adc
sub
dec
push
in
sbb
push
or
jnp
popa
add
fimuls
mov
dec
mov
inc
cmp
sti
int3
fs
cmp
pop
ja
adc
cmp
inc
fwait
mov
xor
jb
or
pop
and
loopne
popa
mov
mov
push
adcl
mov
fiaddl
shll
inc
mov
jo
cwtl
loop
jg
stos
push
mov
mov
aad
mov
xacquire
inc
jge
push
push
jnp
mov
outsl
call
lret
in
xor
fsts
add
pop
jmp
out
cmp
call
inc
push
pop
lret
sti
add
jae
xchg
fdivl
mov
int
xchg
imul
mul
lock
xor
mov
bound
jp
and
cmp
push
sbb
mov
dec
std
xchg
outsb
mov
js
ss
push
movsb
inc
dec
scas
xchg
push
les
loop
stos
mov
cmp
cld
aad
mov
and
mov
adc
ret
sub
inc
sbb
add
test
and
adc
push
adc
adc
pop
dec
inc
mov
xchg
push
pop
fidivrl
out
data16
fcompl
testb
cmp
loop
insb
aam
and
pop
mov
sbb
scas
clc
frstor
mov
xchg
cmp
cmc
mov
sub
adc
add
ja
arpl
leave
icebp
mov
daa
aad
fistps
dec
sahf
xor
cmp
movsb
sahf
and
xchg
sub
inc
je
sub
dec
mov
popa
jbe
lret
nop
inc
stc
scas
mov
dec
mov
std
cwtl
test
mov
sbb
in
push
hlt
js
cmpsb
sbb
xor
addr16
in
nop
fists
mov
jp
jmp
jno
pop
push
jne
push
xchg
inc
xor
jecxz
push
mov
sbb
push
movsl
push
ror
fsubrs
mov
adc
loop
and
mov
dec
pop
pop
push
jp
nop
jo
shl
xor
fs
or
and
add
dec
std
mov
mov
sti
ljmp
lods
stos
xchg
sbb
dec
mov
cld
xor
in
std
mov
fistpl
imul
adcl
inc
mov
loopne
add
shl
popa
roll
fcomi
mov
push
inc
sub
je
aad
push
pop
xor
call
mov
and
imul
push
pop
and
aaa
push
je
xor
push
hlt
orb
xorl
sub
and
gs
mov
push
xchg
pop
pxor
rcrb
mov
pop
xchg
gs
adc
pop
out
es
jbe
adc
notl
rcrl
pop
call
mov
dec
push
stos
adc
inc
addr16
lds
jb,pn
rcr
or
or
adc
out
xchg
ret
loopne
inc
mov
jp
or
pop
inc
cld
scas
sub
ja
out
in
vmaskmovdqu
icebp
divl
sbb
les
push
aam
dec
fisttpl
mov
adc
jae
daa
dec
sbb
or
inc
adc
jae
lock
sbb
or
cmp
cmp
shlb
jmp
imul
sub
out
loope
mov
stos
lret
rclb
imull
repz
std
add
das
pop
neg
pop
add
fwait
iret
or
pop
dec
mov
das
lcall
call
pop
mov
xor
imul
lds
lods
jmp
ljmp
std
movsb
sahf
mov
stc
imul
xchg
test
popa
iret
lea
sub
imul
sbb
mov
dec
xchg
pop
jle
shl
fstl
sbb
xchg
mov
cltd
or
mov
in
mov
iret
sub
das
mov
jge
adc
imul
and
and
sbb
add
mov
mov
scas
adc
imul
imul
jne
testl
imul
mov
loopne
inc
sub
xchg
mov
test
pop
mov
mov
test
mov
negl
push
leave
jp
dec
mov
adc
aas
enter
inc
cmp
cld
cld
mov
enter
jbe
gs
and
mov
jmp
mov
hlt
pop
sbb
pop
popf
jmp
jae
adc
xor
and
arpl
daa
and
pop
sbb
sti
repnz
sbb
gs
imul
shl
sahf
lds
jle
lock
outsl
jns
shll
jno
jmp
ljmp
add
push
mov
xchg
adc
lcall
pushw
dec
mov
test
push
cmp
push
jge
fcom
out
idivb
stos
sbb
out
inc
and
ret
ffree
rolb
fwait
loopne
pop
push
into
into
xchg
and
pushf
adc
xor
adc
ret
daa
push
popf
stos
add
pop
pop
hlt
inc
out
xchg
push
movsb
mov
xor
cli
sub
and
jbe
xchg
out
enter
sti
sbb
pop
xor
and
loopne
pusha
xor
and
sbb
in
decb
xchg
cmp
outsl
xchg
test
and
sbb
fsubrl
pop
test
pop
lods
sbb
pop
lret
dec
fiaddl
jb
and
mov
ret
lds
pop
cmpsb
pusha
cmp
dec
and
fisttpll
mov
popa
xor
or
outsb
ja
movb
scas
in
mov
inc
inc
jmp
lock
or
xchg
cmp
pop
sbb
in
xchg
rcrl
aas
push
mov
addr16
cmp
rcrb
or
aam
sub
aaa
sbb
hlt
and
and
mov
imul
jmp
movsl
pop
push
data16
cmpsb
lret
adcl
hlt
js
pop
scas
pop
lret
pop
pop
mov
cltd
popa
sti
gs
xchg
mov
repz
cmpb
or
into
xor
jp
mov
mov
mov
outsl
ret
cmp
sub
popa
mov
andl
jp
push
cmp
jmp
xchg
sahf
sub
std
xor
mov
jo
add
cmp
sub
sbb
aas
adc
scas
pop
pop
jmp
js
mov
or
fnstenv
int3
adc
adc
icebp
pop
test
ja
outsb
xchg
pop
xchg
add
xchg
pop
mov
adc
iret
sbb
rolb
adc
repz
push
mov
shll
pop
fcmovb
popf
sbb
adc
dec
mov
dec
enter
adc
jb
std
cmp
stos
clc
push
adc
fwait
adc
push
mov
jne
push
iret
add
and
jae
xchg
mov
push
js
mov
and
cmp
outsl
pop
arpl
or
sbb
cmc
or
adc
sub
xrelease
lret
mov
ficomps
inc
adc
mov
in
aaa
incb
mov
fs
sbb
mov
ds
je
pop
jl
test
aaa
sbb
int3
jmp
fwait
pop
inc
es
push
xor
mov
dec
push
mov
mov
cltd
dec
pusha
inc
cmp
daa
daa
fsubl
cs
mov
jbe
lock
and
push
jns
jecxz
jl
iret
jns
and
shll
cmp
dec
mov
xchg
adc
fildl
xchg
rcrl
popa
sarb
scas
jae
mov
push
bound
iret
cmp
clc
fiadds
xchg
iret
ss
lds
and
mov
out
shlb
cmc
xor
inc
ds
ja
push
pop
pop
movsb
ror
cli
push
adc
lds
jno
add
iret
mov
test
add
cmp
ja
fisttpll
scas
sub
stc
xor
push
adc
aaa
pop
insb
cwtl
mov
dec
fldcw
aad
sbb
mov
dec
aas
icebp
push
jg
add
inc
sbb
shll
add
jno
jbe
les
sub
mov
lahf
pop
push
dec
xchg
inc
dec
cmp
mov
insb
and
icebp
cmp
stos
aaa
rcr
cli
fs
lods
je
xor
mov
leave
mov
mov
cmp
out
push
push
test
xchg
popf
es
in
xchg
xchg
je
sub
popa
icebp
sbbl
jecxz
out
lcall
pop
add
fnsave
mov
push
inc
movlps
or
xchg
jge
test
sub
iret
fwait
xor
add
in
jecxz
push
or
lahf
dec
dec
lahf
xor
mov
repz
adcl
int3
dec
fs
pop
nop
sub
stos
test
jno
dec
fisttps
push
add
iret
sub
xchg
fdivs
call
in
push
ret
xor
or
sahf
clc
lahf
or
insl
out
shlb
xchg
or
nop
std
xchg
pop
xlat
mov
cmpsl
lret
xor
lret
and
mov
sbbl
xchg
dec
popa
fs
decb
je
and
push
icebp
inc
fidivrs
imul
bound
fdivs
mov
std
xchg
push
insl
lret
ljmp
aam
ss
push
sbb
xor
push
fnsave
stos
mull
out
pop
xchg
mov
mov
add
push
lret
sub
or
and
stos
cli
adc
sar
inc
mov
leave
xchg
fwait
repnz
scas
inc
mov
sbb
and
sbb
fwait
sbb
int
repz
xchg
negl
xchg
testb
add
sbb
les
frstor
and
movsl
cmp
pop
imul
pop
outsb
xchg
sbb
in
sahf
leave
int
mov
mov
xchg
fdivs
fimull
push
xchg
jo
jns
stos
in
cmpsb
lret
jmp
mov
mov
mov
xor
fistps
loop
fs
push
js
add
sub
xchg
je
pop
inc
arpl
testb
std
xor
xor
dec
jns
enter
mov
dec
std
pop
adc
or
sub
xchg
mov
sub
outsb
ljmp
notb
data16
jnp
imul
dec
idiv
loope
stos
test
cmp
fwait
idivb
cmp
adc
cld
fstl
sbb
cli
add
or
sbb
ja
push
outsl
cmc
jl
xchg
push
cld
add
hlt
fdivrp
jge
adc
fs
xor
adc
dec
ljmp
xor
jmp
cmovns
fsubl
xchg
xor
mov
nop
jl
add
jo
or
inc
adc
fsubl
sbb
fsts
into
dec
jg
das
jl
test
mov
cmp
lret
dec
mov
gs
call
lret
cmp
dec
xchg
add
jge
sub
sbbl
dec
adc
and
loopne
ljmp
add
inc
mov
sub
dec
fdivrl
mov
sub
stc
bound
es
adc
aaa
ljmp
dec
ljmp
pop
cmc
sbb
stc
sbb
pop
iret
cli
sti
cmpsb
or
sbb
push
bound
call
lret
int
xchg
stc
fwait
adc
add
int3
jns
mov
or
inc
fsqrt
add
enter
int
or
and
cmp
sbb
mov
lea
lods
ficompl
cmp
jno
jg
out
sahf
dec
xchg
xchg
aas
loope
cmp
cmpsb
int3
xchg
out
gs
popf
les
cmc
or
lods
fmul
cmc
enter
add
loop
ret
dec
sti
jge
stos
pop
sub
xchg
cltd
jmp
jle
xchg
hlt
ds
outsl
inc
cmpsb
and
pop
mov
ja
push
enter
sbb
pop
js
pop
jp
inc
jno
arpl
push
mov
pand
mov
mov
fisttpl
jge
sti
add
add
xchg
add
xor
subl
cli
cmp
std
mov
mov
je
hlt
fdivrl
jns
inc
mov
jns
pop
dec
lcall
lods
insb
in
xor
movsb
mov
divb
pusha
scas
orb
es
mov
mov
ja
and
fwait
pushf
add
jnp
dec
and
imul
out
cmpsl
add
leave
adc
lds
jno
push
ja
xor
popf
js
orb
stos
push
jg
xor
xor
lret
mov
cmpb
fnstenv
inc
out
mov
neg
add
xor
and
dec
ret
push
out
movl
ds
push
lcall
jbe
jnp
cmpsb
out
les
imul
sarb
mov
cmp
xor
adc
cmp
mov
mov
or
push
inc
add
mov
adc
rorb
pop
pop
loop
call
adc
lods
sbb
lcall
inc
mov
decb
test
arpl
cmpsl
push
cwtl
push
pop
mov
cmp
addr16
decl
sub
sbb
push
push
mov
aam
push
xchg
jl
add
in
and
out
push
fadd
adc
sbb
std
xchg
sub
fnstcw
sti
xor
stos
adc
jp
lods
sarl
pop
cmpsl
cwtl
push
and
ret
mov
aas
add
mov
je
out
xor
dec
movsb
cli
leave
insb
fisubl
leavew
fs
outsl
je
sub
jmp
out
out
ret
ljmp
push
add
xor
or
mov
jae
std
xor
lret
add
incl
neg
push
icebp
inc
data16
inc
adc
cltd
test
scas
das
or
cmove
xchg
push
in
sarb
scas
sub
sbb
data16
sub
stos
add
mov
pop
sub
shll
fistl
fcoms
pop
outsl
scas
aad
fmul
nop
les
push
nop
xor
dec
cmpsb
outsb
in
jb
test
mov
sbb
adc
xlat
xor
ja
push
xchg
and
aam
fs
push
xor
inc
cmp
add
cmpsl
sub
icebp
aad
mov
out
xchg
out
mov
xlat
loop
mov
dec
pop
scas
mov
shlb
adc
jg
outsb
lea
xor
in
cltd
cmc
sbb
fwait
and
stos
sub
add
out
inc
rcl
adc
stos
cmpl
test
sub
dec
and
mov
mov
jno
mov
aas
xchg
mov
pop
fadds
mov
lea
lahf
mov
filds
adc
pop
xor
mov
leave
push
push
cltd
js
push
sub
imul
rorb
and
es
call
add
mov
inc
pop
pop
xor
sub
aaa
and
rcll
xor
scas
and
repz
dec
inc
xchg
add
jmp
mov
cmp
cmp
adc
dec
mov
mov
lcall
cmpsb
cmpsb
xchg
out
dec
clc
add
xchg
nop
dec
and
jne
stos
inc
push
pop
mov
mov
adc
mov
xchg
cld
imull
insb
lock
imul
mov
xchg
in
add
add
pop
jmp
bound
stos
ja
adc
cmp
sarl
or
sbb
pop
xchg
mov
pop
sub
xor
jno
cmp
push
roll
gs
jl
out
test
cmp
call
rcrl
xchg
jo
in
xor
addl
and
push
pop
jecxz
pop
mov
mov
fadds
pop
xor
sub
pop
in
out
pushl
sbb
adc
mov
jbe
and
sarl
loope
std
enter
popa
repnz
ja
mov
mov
mov
clc
inc
std
ljmp
ja
dec
sbb
clc
mov
add
leave
mov
jp
and
jp
mov
test
stos
mov
xadd
pushf
outsl
pop
test
loopne
push
int
dec
dec
cmp
sub
cmp
daa
and
cltd
pop
ds
push
mov
push
je
dec
mov
lock
push
pop
mov
dec
xchg
inc
cmpsl
mov
jle
sbb
xchg
inc
lods
dec
movsl
dec
sbb
xchg
lret
mov
insl
pop
xor
xor
adc
push
inc
popf
pushf
jnp,pn
sbb
rcr
xchg
mov
out
mov
loopne
mov
pop
data16
push
in
scas
inc
mov
outsb
push
pop
fdivr
outsl
fsubrp
lods
out
pop
jnp
insb
adc
xor
mov
mov
cltd
and
mov
popf
or
fsubr
filds
out
sub
push
mov
jno
mov
dec
or
lcall
mov
push
ds
adc
pushl
aad
mov
pushf
push
scas
rclb
aaa
mov
pop
fisubl
cli
insl
mov
mov
sahf
sbb
sarl
data16
and
clc
out
lock
xchg
xchg
cmp
mov
test
out
mov
xlat
je
scas
hlt
repz
mov
push
pop
daa
mov
test
loopne
cs
dec
cwtl
shrb
adc
jl
dec
mov
out
xchg
inc
sahf
out
add
out
lret
sbb
lds
rcrl
mov
push
mov
sub
adc
xlat
xchg
out
add
arpl
out
inc
mov
lods
test
inc
jge
cmpsl
mov
stos
mov
daa
les
add
inc
pop
push
push
jle
mov
add
cmp
pcmpeqw
xor
push
adc
lods
and
cmpsl
fwait
lret
inc
cmpsb
sbb
jg
cltd
dec
int
mov
dec
ds
jnp
ret
xchg
mov
test
insb
and
push
fs
rolb
ret
stc
andb
mov
mov
lret
test
adc
xor
int3
testb
sbb
popl
jnp
mov
mov
pop
pop
dec
and
in
jecxz
inc
xchg
sarl
pop
outsb
out
inc
ds
lahf
out
and
cmp
jmp
incb
cwtl
xor
xorl
pop
mov
jecxz
cmp
xchg
xchg
fsubl
loopne
xor
mov
push
push
mov
scas
test
and
add
dec
adc
inc
std
test
xchg
add
xorl
js
add
imul
aaa
and
mov
inc
cltd
add
scas
sub
ljmp
out
nop
outsb
jmp
jle
dec
jecxz
scas
push
sbb
stos
addr16
fsubl
jp
pop
jle
orl
jmp
xchg
in
push
fistps
and
ret
fisttpl
or
iret
faddp
movsb
stos
sub
push
data16
xchg
int
fidivs
push
decl
ljmp
sahf
jne
scas
pop
gs
cmp
add
ret
xchg
dec
ja
sub
fdivs
adc
aas
add
arpl
sbb
adc
xchg
inc
mov
in
mov
rcrl
clc
mov
lock
fnstcw
pop
aas
mov
stos
push
outsl
test
or
or
sub
cmp
scas
ret
or
jb
cmp
aam
das
pushf
xor
mov
imull
lahf
xchg
in
out
cmp
shrl
xchg
adc
mov
and
mov
adc
call
into
pop
xorl
or
mov
fs
lods
add
dec
sub
cmp
lret
cltd
mov
lahf
out
clc
sarb
sub
sar
sbb
pop
in
loope
lcall
scas
ljmp
and
mov
js
lock
lock
pop
push
mov
jmp
cmp
xchg
inc
cmp
and
jo
jl
cwtl
dec
xor
inc
xor
daa
add
addr16
dec
add
rclb
push
movsb
cli
sbb
dec
pop
push
sub
add
daa
xor
or
xor
sub
dec
mov
fcoml
lcall
cmp
inc
mov
loop
fmull
out
dec
mov
popf
jo
test
scas
xchg
inc
popa
adc
ja
lods
stos
push
add
pop
jp
xlat
jle
pop
out
je
inc
inc
or
sti
sbbl
outsb
inc
setge
jne
popf
fwait
lea
mov
jg
es
pop
adc
mov
addr16
imul
out
jl
mov
mov
xor
loop
lods
sbb
jnp
ljmp
sub
push
jne
aam
mov
and
pop
jne
push
aas
sbb
push
incb
pop
xchg
mov
ja
nopl
aas
jl
sbb
pop
jg
dec
shrb
cmp
rclb
daa
dec
addr16
ds
ror
xor
push
jnp
and
sub
stc
aam
das
jnp
pop
push
dec
jg
into
jp
sub
in
ret
sbb
mov
xor
lea
loopne
pop
add
dec
dec
sub
add
les
mov
cmpsb
fistpll
rol
sub
cltd
lods
cwtl
sbb
mov
lret
xchg
ret
xorb
sub
stc
pop
jg
jnp
pop
and
iret
add
in
lcall
sti
sub
ficompl
jecxz
test
or
sbb
and
in
lods
nop
ss
push
fsubs
adc
mov
cs
mov
pop
and
jbe
cli
xchg
mov
pop
jo
mov
mov
cmp
xlat
jne
mov
mov
out
sub
aad
inc
or
add
icebp
into
jg
test
mov
lock
insw
mulb
leave
pop
jg
cli
pop
test
stos
push
rclb
arpl
sbb
xchg
icebp
pop
shll
clc
mov
cmpsl
mov
lock
lds
xor
cmp
movsl
stc
dec
mov
bound
cmc
cmp
xchg
lods
int3
cmpsb
push
push
scas
scas
ds
mov
add
mov
sarb
or
in
popf
push
push
inc
lcall
clc
push
add
gs
and
push
mov
fs
mov
loopne
jo
in
pop
cmpsl
xchg
into
es
xchg
xor
testl
mov
addr16
add
mov
lea
repz
push
cmc
sbb
xor
js
rolb
cld
adc
mov
push
nop
xor
shlb
dec
xor
cmp
cmpsl
cmp
add
sub
xor
ja
pop
sbb
inc
hlt
push
mov
adc
mov
fldz
xchg
orl
sbb
test
xor
pop
test
pop
cmc
enter
stos
imul
push
mov
dec
sub
push
lods
add
or
jns
add
loop
aaa
in
mov
mov
jg
xchg
adc
and
mov
lret
jp
push
cli
adc
mov
lods
pop
ds
mov
sti
push
fbstp
outsl
mov
xchg
das
cmp
out
sub
pop
cli
stos
or
sbb
push
xchg
add
or
pop
mov
mov
push
mov
test
inc
pop
mov
push
call
sahf
mov
repnz
out
daa
out
nop
adc
ja
mov
jbe
jge
ret
stos
sub
jp
fdiv
int3
out
dec
and
test
xchg
sbb
add
into
or
jae
icebp
loopne
jns
into
outsb
mov
push
inc
je
cld
mov
fdiv
sub
pop
out
fs
xchg
sahf
push
add
push
std
inc
mov
cmc
inc
aad
xchg
xchg
or
fcmovbe
mov
in
in
int
cmp
mov
test
lret
mov
ret
loopne
xor
mov
xor
pop
lea
in
and
int
movl
sti
lock
dec
mov
ror
sub
or
dec
dec
inc
dec
mov
ret
in
inc
mov
jmp
inc
or
push
fcmovnb
aaa
sbb
cmpsl
adc
insb
fsubl
mov
out
lret
mov
sub
adc
lret
loope
mov
cltd
int
push
out
mov
ss
mov
cmp
rorl
pushl
outsb
cmp
cmp
fnsave
dec
jo
fidivrs
ret
lods
jp
add
mov
pop
cmp
in
sbbl
or
add
xchg
scas
pop
jl
dec
mov
rol
xor
inc
or
popa
adc
cmp
or
mov
cmp
movsl
subl
imul
stc
and
or
sahf
mov
mov
mov
das
add
cmp
mov
lret
mov
subb
mov
add
sahf
inc
xchg
push
aad
adc
xor
cwtl
inc
jne
pop
sbb
add
pop
les
or
iret
xchg
into
jb
test
pop
jmp
push
rorb
jl
sub
popf
int3
mov
scas
pusha
sub
xchg
leave
dec
or
cmp
fiaddl
push
iret
pop
daa
les
pop
setp
xchg
or
push
mov
sub
cmp
dec
shlb
jle
add
mov
cmp
in
stos
xchg
or
in
jo
sbb
pop
popa
add
jno
pop
jbe
inc
leave
and
test
mov
xchg
push
inc
int3
test
cmp
in
add
push
es
mov
stc
dec
add
sub
pop
inc
mov
fs
add
scas
outsl
jecxz,pn
popf
push
inc
mov
inc
call
cli
scas
outsb
rcll
cmp
xor
mul
cmp
mov
push
movsb
dec
and
inc
push
lds
ja
test
shlb
ds
xor
xchg
jno,pt
jb
add
aad
lods
mov
jno
rclb
mov
mov
stc
scas
mov
daa
neg
jae
aaa
fsubr
data16
lcall
jmp
pop
dec
ss
push
in
in
scas
mov
xchg
outsl
mov
xlat
pop
jmp
sbb
jbe
clc
scas
mov
les
sub
and
add
jb
stos
stos
jmp
inc
insl
hlt
jg
mov
jmp
ja
dec
cli
pusha
push
dec
mov
pop
pop
jl
cltd
cmpsl
dec
mov
push
out
mov
cmpsl
mov
aad
or
lea
dec
sub
add
pop
int
push
mov
xor
inc
and
ja
movsl
add
jge
inc
repz
aaa
mov
lock
push
and
out
pop
fs
popf
pushf
pushf
jnp
out
jge
xchg
ss
push
fcompl
xchg
and
push
pop
cmp
imul
fprem1
repz
push
sbb
testl
popf
mov
hlt
fldcw
in
fiadds
jmp
lods
mov
pop
and
xchg
fidivs
fwait
dec
icebp
mulb
xor
push
dec
sub
jp
cmp
or
and
mov
xchg
cmc
and
sub
inc
loop
xchg
outsl
aas
pop
movsl
leave
push
loopne
gs
and
aam
stos
add
ja
jb
mov
rorb
jl
push
test
bound
pop
lret
mov
iret
sub
pushf
and
inc
invd
pop
adc
repnz
inc
ret
js
dec
add
imul
sub
push
cli
fistpl
sahf
push
mov
or
enter
xlat
inc
xchg
xor
mov
nop
cmc
cli
fcomps
int
or
pop
test
xchg
aam
stos
mov
mov
loope
lods
pop
mov
adc
push
xchg
shlb
sbb
and
insb
cmp
inc
inc
push
fwait
icebp
notl
push
cmc
xchg
lret
leave
sbb
mov
in
xchg
pop
adc
je
lahf
fiadds
fiaddl
mov
sbb
mov
cs
adc
cmp
push
mov
mov
nop
insb
mov
les
pop
xchg
or
mov
test
mov
mov
ja
ret
xchg
mulb
inc
stos
fidivs
cld
inc
lods
and
aaa
imul
mov
jns
xor
jno
fcomps
jno
loope
inc
jp
push
xchg
dec
pusha
xchg
adc
les
jmp
sti
push
pop
xchg
lcall
sbb
sbbl
push
or
and
mov
push
js
cmpsl
inc
scas
pushf
in
das
in
fucomip
adc
repz
sbb
mov
les
cmp
leave
aad
in
icebp
sbb
test
mov
and
or
cmp
pop
inc
mov
push
inc
rclb
pop
repnz
fildl
in
lock
or
jmp
outsb
cmpsb
add
movsb
cmp
icebp
test
outsl
lret
scas
cltd
stc
sub
movsb
pushf
jge
xor
stc
or
ljmp
sbb
into
push
sbb
mov
mov
movsb
mov
fldl
push
orl
imul
mov
pop
sbb
or
cmpsl
mov
dec
jmp
push
add
in
stos
and
sbb
push
push
outsl
mov
addl
aam
int3
cmpsb
outsb
inc
and
orb
pusha
imul
dec
rol
jl
cmpsl
subb
dec
nop
xor
cmp
repz
std
mov
xchg
xchg
pop
cmp
inc
int
mov
shll
mov
pop
fcmovu
cmp
and
push
repz
push
icebp
pop
push
xbegin
push
mov
cs
adc
in
lahf
dec
pop
push
mov
pop
sub
stos
cmpb
roll
push
inc
mov
nop
push
sti
aad
jle
mov
inc
daa
iret
int3
int3
xchg
pop
mov
jno
xor
test
xor
ret
and
or
mov
jbe
cmp
mov
xor
and
xchg
mov
dec
push
jle
xchg
dec
je
bound
sahf
jnp
sub
movsl
and
cmp
frstor
push
mov
mov
imul
mov
or
rcll
sbb
adc
iret
mov
ret
adc
push
mov
push
bound
incb
adcb
fptan
xchg
pop
cmp
loope
lahf
xchg
inc
dec
mov
mov
mov
into
in
sarb
xor
gs
mov
lret
sbb
pop
adc
outsb
mov
sbbl
dec
lods
pushf
xor
mov
jmp
or
and
int
lcall
push
stos
sub
lcall
dec
ljmp
dec
push
xor
lret
or
mov
andl
push
dec
sub
pop
or
xchg
mov
inc
repnz
mov
jae
sbb
cmpsb
or
sub
jg
sub
jo
xor
out
cmp
cmpsb
cli
enter
pushf
adc
movsl
jne
sbb
sub
sub
cld
xor
je
in
shlb
dec
scas
into
mul
pop
pop
push
add
das
push
fwait
and
fs
xorb
hlt
ret
mov
jle
pop
sbb
mov
xchg
mov
and
cmp
xorb
rclb
movsb
add
pushf
cmp
stos
out
and
out
loope
testb
addr16
fistl
jmp
fisttps
insb
test
fadds
je
shll
ljmp
xchg
outsl
lods
imul
or
vcomiss
adc
ss
xchg
std
xchg
addr16
ret
add
mov
je
lock
popf
repz
mov
dec
xorb
fmull
ja
lea
jno
fdiv
jg
jb
mov
movsl
xor
mov
fsubs
mov
mov
xchg
xchg
mov
push
sbb
xchg
add
add
mov
xor
xchg
fimull
loope
aad
pop
jge
imull
pusha
shlb
xor
neg
mov
push
pop
sub
adc
sbb
sbb
cwtl
into
rol
dec
lods
adc
and
hlt
cmc
mov
mov
xlat
rcr
mov
imul
mov
cmp
pop
mov
push
push
adc
push
mov
out
stc
popf
nop
push
shl
adc
or
xor
scas
sbb
sti
int
sub
les
xor
mov
pop
lock
lds
out
xchg
pop
add
iret
sbb
nop
scas
push
or
scas
xchg
and
mov
fcoml
dec
pop
xchg
mov
clc
fs
mov
lret
cmp
mov
pop
sbb
jge
nop
lret
loop
inc
mov
xchg
mov
sahf
orb
icebp
out
jg
test
es
mov
jo
sbb
arpl
jno
sbb
jmp
loopne
lahf
sbb
lret
push
popf
mov
subl
movb
add
pop
mov
loope
adc
push
jno
sub
lret
or
fisubl
adcl
xor
dec
add
stos
dec
sbb
loope
pushf
lcall
mov
xlat
scas
mov
push
xor
jns
outsb
sub
ds
test
or
sbb
or
lock
or
pusha
es
notb
and
xchg
stc
in
inc
sbb
adc
mov
nop
xor
sti
aad
push
pop
cmp
lcall
dec
add
lcall
jl
dec
adc
bound
push
gs
adc
pop
mov
sarb
insb
mov
gs
fcom
pop
test
sti
add
jno
push
mov
scas
jge
ja
push
jno
hlt
fmull
adc
test
pop
outsl
out
jle
add
and
call
cwtl
jmp
sbb
pop
out
xchg
dec
lret
int3
add
in
lock
push
sbb
jns
test
mov
push
shll
and
pusha
dec
nop
inc
and
push
ljmp
aaa
leave
fists
iret
mov
lods
sub
nop
cmp
push
pushw
sub
adc
sub
mov
imul
pushf
mov
push
push
add
fxtract
imul
das
ja
sub
inc
adc
aas
jecxz
mov
or
xlat
gs
sbb
stc
xor
insb
or
fistl
xor
repz
loope
stc
cmp
or
stos
sbb
mov
sbb
mov
dec
add
fcomps
jle
sti
test
mov
data16
jo
xchg
push
ss
in
dec
pop
in
scas
shll
in
xor
sbb
cmpl
rclb
add
add
jecxz
add
loopne
sbb
jno
jo
imul
and
push
mov
pop
jns
inc
jecxz
leave
push
das
mov
dec
out
cli
jle
jg
add
adc
les
mov
cld
or
iret
add
xchg
xor
xor
test
fwait
pop
out
std
cmpsb
cld
xchg
gs
cwtl
push
pop
pop
shll
xchg
movsl
mov
push
mov
pop
jno
aad
pusha
jle
ffreep
test
mov
neg
cmc
das
negb
in
cmpsl
sbb
cmp
mov
inc
or
daa
fs
xlat
repnz
fstpl
cmpsl
add
sti
mov
and
inc
adc
popf
stc
movsb
fldt
and
lea
pop
movsb
call
movsl
jno
aad
inc
aam
loopne
cwtl
cwtl
push
xor
xor
cmp
or
pop
imul
dec
adc
fildl
scas
inc
popf
inc
shlb
fidivs
insl
xlat
lods
rclb
cmp
lcall
lods
sbb
cmpsb
rolb
loope
adc
mov
mov
dec
in
lds
mov
test
fimull
outsb
loop
mov
inc
pop
adc
adc
je
sarl
fisttpll
xchg
lea
lret
leave
je
push
cmp
push
in
add
shr
push
mov
push
xchg
and
mov
int3
push
push
or
push
into
push
setle
jb
jecxz
int3
sub
lds
and
mov
es
test
leave
mov
enter
and
or
pop
push
and
xor
cmpsb
push
adc
push
dec
adc
roll
outsb
ror
loope
loopne
dec
xchg
push
shll
popf
out
sbb
inc
cmp
into
loopne
pop
and
mov
push
loope
cmp
adc
int
mov
aaa
cmp
jae
das
fwait
jecxz
inc
insl
sub
aad
pop
das
ja
ror
cltd
clc
sbb
pushf
hlt
int3
and
lock
cmpsl
orl
and
into
ds
daa
das
stos
sbb
mov
in
add
sbbl
mov
sbb
lods
popf
xor
sub
pop
push
or
sub
jo
sub
pop
adc
xchg
pop
or
popf
pop
mov
inc
sub
pop
mov
push
mov
jo
pusha
pop
push
pop
out
int3
pop
pushf
call
xchg
fadd
or
int
jecxz
out
cwtl
scas
pop
dec
cmpl
jns
aas
int3
push
out
jns
sbb
push
pop
dec
cld
mov
jmp
jl
fisttpll
call
je
shlb
pop
cld
dec
mov
imul
xor
sub
pop
daa
stc
jnp
pop
sti
mov
push
mull
xchg
sub
addl
xchg
jno
fbstp
loopne
xchg
mov
ljmp
push
out
negl
movsb
adc
in
add
push
push
or
or
insl
mov
mov
mov
dec
scas
adc
cmp
in
stos
xor
cmpsb
inc
or
mov
adc
adc
xchg
jb
mov
push
aad
and
les
cmpsb
pop
sub
sub
xor
and
addb
inc
xor
ljmp
lods
cmp
test
xor
fidivrs
sti
lea
out
addb
fwait
sub
and
jp
ja
subb
fisubrs
jge
out
sar
or
sbb
scas
mov
xchg
fstl
jl
sbb
in
ja
lods
and
push
mov
shld
outsl
pop
jbe
lea
mov
jno
dec
xor
dec
ja
scas
mov
pop
cmp
fwait
push
xorl
mov
jbe
pop
inc
pop
in
push
push
repnz
fdivs
cmc
dec
add
adc
xor
xor
in
ret
lcallw
push
test
xor
sub
pop
insb
lcall
call
mov
mov
repz
fimull
addl
cld
mov
push
pop
not
sub
mov
sahf
cmp
push
negb
xor
es
fldl
cld
xor
out
data16
dec
add
loopne
addr16
addw
dec
cmp
scas
scas
push
lret
addr16
divl
movsl
inc
mov
pop
popa
out
bound
int3
mov
incl
mov
pop
aam
test
stos
stc
and
xchg
insb
stos
lods
jmp
mov
cwtl
sbb
aaa
xchg
pop
test
cmp
lods
cltd
adc
mov
cmp
sub
aam
jecxz
repz
dec
repz
adc
movb
stc
mov
outsl
adc
fmul
pop
repnz
sub
xor
xor
push
ja
cs
lahf
sbb
push
enter
mov
ret
dec
jne
sbb
or
sub
mov
cld
lds
aaa
inc
adc
mov
xor
xchg
fs
sub
clc
push
outsb
stos
leave
add
add
jbe
mov
ds
shlb
add
sbb
aam
into
cltd
lret
jmp
xor
mov
lcall
loope
mov
push
rclb
lret
out
dec
adc
sub
movsb
fnstcw
dec
lds
xchg
adc
sbb
sbbb
mov
mov
inc
cmp
push
dec
mov
gs
stc
aas
xchg
cmp
dec
pop
mov
roll
mov
cltd
inc
ret
cmp
lahf
or
outsl
xchg
or
mov
icebp
out
repz
xor
push
fdivrs
dec
mov
pop
pop
push
in
xor
imul
mov
lret
ret
and
aam
orb
jno
or
ret
pop
dec
mov
cmpb
lds
frstor
mov
out
add
cmp
in
cmp
aas
inc
int
pop
jbe
xor
and
sub
nop
andl
dec
call
xor
or
and
aad
mov
mov
jp
xor
lods
je
mov
sub
dec
push
mov
jp
add
cmp
adc
leave
add
push
push
fldenv
fcompl
fnstsw
xor
push
insl
lret
enter
push
adc
fcoml
inc
data16
jb
outsl
les
popa
enter
je
or
jg
mov
inc
mov
icebp
movsb
inc
pop
imul
ret
cltd
sub
dec
and
ret
jns
sub
pop
push
fptan
xlat
jne
hlt
and
ljmp
lahf
enter
or
popa
sbb
jg
aaa
mov
mov
sbb
xchg
rolb
push
pop
lcall
dec
mov
sbbl
xchg
decb
pop
lock
xchg
mov
adc
pop
ja
bound
add
xor
inc
sbb
adc
loopne
or
aas
mov
shll
popa
outsb
xor
push
add
sub
rcll
lahf
push
mov
imul
xor
sub
sbb
ja
imull
mov
inc
or
pop
out
jmp
or
fstps
add
pop
pushf
sub
rcl
push
push
lcall
imul
jle
mov
fmulp
pop
mov
movsl
cmp
adc
movsb
dec
jmp
inc
mul
bswap
push
cwtl
push
xchg
addl
and
push
cmpsl
jmp
cmp
cmp
add
pop
dec
sti
push
int
mov
mov
xchg
or
push
ss
fadd
cmp
ja
push
fidivl
cmp
pusha
dec
insb
mov
clc
xor
xchg
int3
mov
lcall
sub
dec
sub
loop
imul
into
mov
push
or
cmp
lods
gs
imul
cli
xchg
pop
or
mov
mov
or
xor
adc
movsb
xchg
mov
xchg
jg
jl
in
test
clc
jge
fisttpll
mov
cmc
imul
fs
test
in
pop
and
or
mov
fidivrl
das
testl
xchg
jb
adc
sar
jo
push
ret
xchg
lods
mov
mov
cmp
mov
or
stos
icebp
lods
loope
or
das
sbb
jge
frstor
loopne,pn
ljmp
aaa
xchg
jnp
int3
or
or
xor
popa
adc
dec
lods
test
push
cmpsl
nop
mov
mov
incb
imul
xor
xor
dec
or
xchg
je
mov
sbb
stc
sbb
insb
lods
stc
mov
movb
sti
sbb
push
adc
fldt
sahf
hlt
mov
xchg
jae
or
mov
fisttpll
lods
fidivrs
adc
daa
in
sbb
pop
xor
xor
sbb
push
scas
out
cltd
push
sbb
data16
jae
and
sub
ret
cmc
enter
dec
lcall
in
mov
pushf
stc
cmpsl
jl
fucomp
sbb
fndisi(8087
xchg
xlat
cmp
and
in
popa
push
in
mov
into
sub
push
xor
push
imul
ud1
jno
inc
test
mov
pop
mov
fidivl
push
jp
or
js
push
lret
rorb
ja
and
cmp
test
shl
mov
sahf
mov
cmpsb
cmovnp
cmp
fmul
stc
js
shll
in
movsb
mov
aas
inc
push
xchg
mov
add
out
push
inc
pop
aaa
cmpsl
push
mov
fbstp
mov
incl
inc
cs
pop
or
jb
loopne
cmp
ficomps
fcmovne
fisttpll
dec
cmp
out
cld
leave
jne
xchg
int3
push
cli
fs
sub
jno
jnp
icebp
pop
iret
dec
push
lret
xlat
sbb
adc
xor
sbb
cmpsb
xlat
xchg
aaa
push
add
sbb
and
inc
out
insb
aaa
inc
ret
mov
push
pop
adc
cs
push
adc
adc
mov
imul
pop
add
pop
cmpb
ret
pop
jle
mov
xchg
or
outsl
ror
data16
or
das
and
enter
outsb
ret
inc
add
dec
js
jg
decl
icebp
cltd
xor
insl
stc
fmulp
lds
addr16
fs
push
es
jnp
xchg
cmpsb
or
loopne
popa
add
and
push
xchg
lret
or
hlt
gs
pop
adcl
scas
subl
lahf
xchg
lret
xor
mov
lea
lahf
aad
repz
sub
mov
lcall
mov
xor
data16
push
jae
data16
dec
iret
popa
daa
ja
sub
stos
mov
lahf
fimull
inc
call
jns
pusha
es
iret
sub
sbb
stc
push
and
or
or
ja
pop
mov
inc
cltd
sub
lret
cld
push
lea
adc
jp
mov
and
pushf
mov
push
cmp
rolb
rcr
test
addr16
mov
shll
inc
sbbb
ljmp
mov
xchg
jns
inc
jecxz
in
sbbl
out
adc
xor
test
add
mov
cmp
shll
fwait
stos
add
mov
pop
mov
jo
imul
add
jne
sbb
stc
cld
movsb
dec
lods
cmpsl
push
inc
popa
aad
addr16
out
jge
shll
push
inc
mov
cmp
fs
cmpsb
and
jge
rorb
icebp
cmp
mov
icebp
scas
xlat
loop
and
adc
mov
orb
dec
push
xor
jnp
test
sub
imul
push
push
bswap
adc
xor
loop
icebp
push
pop
add
sub
out
ficoml
inc
ss
je
repnz
mov
xchg
add
sti
mov
xchg
mov
je
and
insb
push
jb
stos
sub
sub
inc
out
jmp
jle
sbb
pop
push
xor
jl
dec
clc
inc
ss
pop
dec
rep
mov
inc
mov
stc
sub
out
pop
outsb
rcr
divl
lods
add
or
push
add
jp
cs
in
cmpsb
cmpb
mov
ss
xor
push
mov
imul
jecxz
mov
iret
pop
sub
fsts
aaa
ja
arpl
testb
testl
movsb
cmp
inc
rclb
fcmovnu
xor
jmp
mov
inc
andl
cmpsb
push
mov
sbb
addl
pop
push
in
sbb
jl
sbb
and
stos
mov
mov
push
push
cli
ss
out
jae
ret
aad
sub
mov
iret
arpl
icebp
sbb
mov
push
sub
icebp
test
xchg
and
jno
aaa
data16
hlt
push
inc
adc
aam
dec
fdivrp
and
inc
dec
scas
aaa
int3
mov
out
inc
xchg
pushf
lret
arpl
xor
pop
pop
mov
dec
mov
sbb
insl
inc
xchg
xchg
xchg
inc
cmp
dec
sti
int
cs
add
ljmp
insl
fiaddl
popa
daa
cmp
ja
dec
test
and
push
repnz
pop
aad
or
sub
sub
xor
pop
jns
cltd
aam
and
call
xor
mov
mov
in
sbb
shlb
mov
or
mov
sarb
aaa
outsl
rcll
sti
and
hlt
cmp
sbb
jb
sbb
fsts
shl
pop
insl
das
test
daa
aam
test
xor
fs
jmp
das
aaa
jg,pt
ljmp
insl
mov
xchg
mov
cmpsb
pop
scas
cli
add
movb
repz
hlt
or
ljmp
dec
or
test
pushf
push
jne
mov
mov
sub
pop
int3
in
mov
in
mov
pushl
sbb
inc
push
std
bound
push
incl
push
jbe
lret
cwtl
jecxz
arpl
push
mov
arpl
test
dec
jo
add
ret
inc
and
sub
and
jl
sbb
cmc
jno
adc
aas
aaa
int3
test
xchg
xchg
mov
mov
push
shl
mov
push
jge
sahf
jnp
je
rcl
lcall
push
lods
push
mov
repz
shll
xor
mov
sbb
mov
mov
jne
and
push
sbb
mov
test
cmp
add
out
add
mov
mov
inc
jmp
cmp
mov
or
std
mov
nop
jnp
xchg
sarb
mov
pop
popa
setle
mov
mov
pop
rcll
cli
lea
inc
loop
adc
pop
mov
jmp
fistl
xchg
pop
fldcw
ds
roll
fildl
pop
lahf
jnp
aaa
pop
push
xchg
shl
xor
in
sub
pop
jns
jbe
lahf
push
test
and
and
sub
pop
push
in
fildl
jge
cmp
xchg
xor
pop
sahf
loopne
stc
cmp
shl
add
sbb
cmp
pop
icebp
mov
daa
repz
jno,pn
js
mov
lcall
popf
xor
inc
nop
into
jbe
daa
sbb
adc
jmp
inc
fiadds
sbb
scas
fisubrs
ror
les
pop
adc
sbb
push
push
ds
pop
inc
xor
adc
or
ljmp
aam
lcall
imul
les
mov
sbb
push
dec
stos
test
xor
mov
jo
xor
dec
fidivrs
popa
pop
sbb
das
jl
or
or
data16
adc
lret
popa
int3
xchg
test
inc
mov
inc
mov
lret
xchg
dec
mov
icebp
mov
rolb
sbb
mov
cmp
pop
xchg
lahf
fs
cli
out
iret
cmp
push
jnp
ret
xorb
fucomi
lods
lahf
aam
sub
aad
sbb
mov
adc
push
mov
sar
sbb
je
data16
es
ss
jg
and
repz
icebp
outsl
in
dec
push
mov
leave
hlt
repz
jnp
cmp
pop
sub
enter
aam
cmp
cmp
sarl
pop
pop
loopne
or
pop
out
ret
das
jge
jp
stc
sbb
pushf
cwtl
scas
out
mov
test
or
mov
jg
mul
inc
insl
faddp
mov
xchg
xor
push
or
jns
push
jmp
dec
xchg
mov
cmpsb
pop
loope
adc
lea
xchg
lcall
idivl
insb
cld
sub
mov
xorl
push
cmp
fistpl
imul
mov
fldcw
aaa
cmc
sub
jns
sub
shrl
or
divb
inc
or
movsb
cwtl
or
and
aaa
xchg
pop
iret
mov
adc
xchg
pop
add
pop
lcall
cmp
sbb
js
mov
xchg
sbb
mov
popa
mov
cmpsb
xchg
pop
push
adc
mov
sub
mov
sub
xchg
stc
es
out
xchg
inc
out
pop
insb
mov
mov
cmp
sub
hlt
pusha
jg
sbb
sub
fisubrl
or
mov
cmp
lret
or
pushf
andb
mov
gs
cwtl
mov
outsb
push
jnp
outsl
sbb
out
icebp
add
pop
pop
and
jno
test
mov
out
add
and
mov
jns
add
jg
adc
out
add
xlat
movsl
pop
fsubrs
jge
sarb
adcl
int3
push
push
fcompl
pop
insl
sbb
or
mov
scas
ror
xor
cmp
sbb
stos
jns
mov
or
pop
enter
dec
push
pop
sbb
cmp
and
and
and
and
jecxz
sub
inc
pop
jne
pop
je
cli
int3
pop
jbe
adc
nop
xor
sbb
gs
dec
int
jecxz
cs
call
xlat
jp
mov
stos
insb
and
fistps
cmp
and
stc
lock
cmp
mov
testl
dec
xchg
aaa
xchg
repnz
movsb
repnz
mov
push
cs
data16
stos
push
jbe
adc
jge
xchg
adc
jo
and
lcall
lahf
jle
pop
xor
iretw
adc
imul
lret
inc
pushf
xor
push
push
cmp
xchg
fdivp
clc
sub
inc
mov
jl
imul
xchg
push
fnstsw
sub
jg
fsubrs
test
shr
ja
fisubrl
scas
pop
je
and
cmpsb
negb
jge
int3
sti
lcall
mov
sahf
scas
jae
push
fcomi
mov
push
and
adc
loopne
xchg
je
mov
jg
or
adc
jae
and
push
cmp
cmp
mov
mov
xchg
cmc
fiaddl
adc
jns
popa
dec
push
out
stc
dec
lret
jbe
xlat
inc
cmp
mov
and
arpl
mov
xor
in
imul
loopne
outsl
xor
mov
mov
clc
div
test
mov
adc
cmp
cmp
cmp
sarb
loopne
and
call
outsb
int
fdivr
loop
test
test
outsl
jl
pop
imul
inc
filds
cwtl
dec
lret
xchg
fwait
pop
mov
add
aas
dec
sbb
loope
fs
sbb
jbe
fs
test
aas
call
int3
jns
xchg
mov
scas
pusha
lds
mov
into
push
add
fdivrs
cmp
inc
and
cmpsl
and
jecxz
dec
sub
cmc
cmp
pop
sti
jle
lods
pusha
sti
sub
cmpb
mov
lcall
cs
ret
sbb
mov
adc
sub
stos
outsl
test
pushf
into
mov
push
js
mov
push
repz
sub
mov
dec
cmp
jno
jns
xabort
mov
mov
dec
imul
or
mov
push
imul
mov
add
sub
push
xchg
mov
cmc
movsb
dec
test
dec
pop
adc
nop
js
sub
jecxz
sbb
daa
aaa
outsb
lahf
lods
lcall
sbb
loopne
rcrl
iret
ret
mov
testl
push
dec
inc
shlb
xor
shrl
shrb
push
repz
fisubs
pop
mov
pushf
jl
push
into
ljmp
add
pop
and
cmpb
fidivrs
stos
imul
or
or
sub
popf
mov
cmpsl
xchg
jle
call
mov
push
incb
pop
sbb
cmp
xchg
cmp
mov
dec
push
or
mov
movsb
push
dec
sub
sbb
cmc
stos
jae
aad
hlt
mov
cmp
in
push
data16
push
aam
sbb
pop
xor
jne
mov
xor
addr16
sbb
push
clc
aad
outsl
ja
shll
movsb
mov
dec
lock
push
jbe
pop
or
sbb
inc
mov
push
sub
dec
outsb
jne
sarl
je
test
or
enter
clc
les
mov
ja
jno
mov
mov
nop
rcrl
shll
popf
sbb
aad
sbb
sub
jno
mov
mov
repnz
xchg
sbb
lret
cmc
movsb
dec
outsb
mov
inc
pop
movl
ljmp
call
pop
jecxz
jecxz
es
inc
mov
out
add
popa
pop
aam
cmp
iret
mov
adc
pop
push
mov
adc
pop
je
inc
or
xchg
add
movsl
pop
in
mov
push
out
aam
jg
xchg
jb
jno
out
sarl
sub
add
jnp
sbb
and
inc
pop
call
pop
push
mov
outsl
stos
adc
xchg
sub
xchg
ret
test
mov
xchg
push
pop
testb
pop
or
xchg
cli
add
mov
mov
xchg
push
dec
icebp
ficomps
and
pop
clc
xlat
pop
pop
xchg
jge
or
iret
mov
mov
push
loopne
movsb
fistl
mov
sbb
sbb
dec
pop
lods
lret
push
in
dec
xorl
jecxz
inc
xlat
aam
mov
sbb
adc
fidivl
scas
and
xor
das
mov
push
mov
call
imul
sti
jae
ds
pop
ja
aam
repnz
hlt
dec
cmp
fistpl
aam
mov
add
mov
and
int3
push
test
cs
mov
pop
adc
pop
addb
setbe
rep
lods
mov
sub
push
and
daa
sub
sbb
aaa
or
sbb
jp
cmp
or
repnz
inc
loopne
add
xor
mov
ret
pop
xchg
xlat
jle
pop
into
mov
add
fstl
xchg
aad
insl
xchg
mov
jns
mov
xor
cs
arpl
mov
out
and
aas
in
adc
out
inc
mov
hlt
dec
jle
cmp
push
pop
push
out
loopne
cmc
aas
cmp
inc
in
sub
addr16
add
pop
sub
and
addl
push
lahf
or
pop
in
jae
and
jg
test
sub
xor
ror
jmp
int3
mov
ret
push
push
jae
out
and
mov
mov
aam
mov
xchg
fsubs
xchg
into
bound
lahf
cs
jge
adc
push
xor
adc
movsl
ficoms
add
and
aam
outsl
sub
outsl
mov
testl
rcrl
jo
cmpsl
dec
sbb
push
fcom
fcmovu
pusha
sub
adc
scas
rolb
or
add
jecxz
cmp
dec
adcb
test
jno
xchg
xchg
and
xchg
fprem
scas
mov
out
pop
repnz
movsb
mov
push
daa
std
lret
ror
or
push
lods
inc
lahf
xchg
push
ds
inc
mov
shlb
iret
xchg
loopne
movsl
adc
push
cmpsb
lock
adc
sti
dec
fcomip
addb
push
sbb
popf
cs
cs
jecxz
bswap
in
or
sti
pop
mov
test
inc
push
in
nop
push
in
xor
pushl
in
popa
cmp
loop
pop
cs
and
adc
inc
xor
cmp
jmp
and
movsb
or
inc
mov
in
in
or
das
lcall
dec
addb
repz
aas
loopne
push
pop
lods
xchg
push
xchg
mov
jbe
jmp
aaa
sbb
pusha
xchg
fwait
out
mov
pop
and
mov
ljmp
mov
mov
push
mov
repnz
inc
sbb
mov
into
xor
fstp
dec
mov
fwait
test
daa
call
push
fucomp
add
out
push
mov
loop
shll
push
rclb
adc
or
pop
add
fnstenv
dec
adc
lods
mov
ja
daa
sti
dec
outsb
in
sbb
gs
pop
cli
pop
out
std
mov
dec
pop
ret
dec
shrb
es
fnstsw
into
xor
aas
lahf
femms
jmp
in
shll
nop
adc
hlt
mov
fsub
sbb
sub
adc
inc
mov
decb
loope
inc
call
pusha
mov
adc
inc
fs
fmuls
adc
ljmp
xlat
shrl
dec
iret
jne
jae
pop
dec
insb
xchg
bound
in
sbb
mov
add
bound
leave
cmp
in
es
cmp
mov
push
cmpsl
ss
cld
and
ljmp
aad
repnz
mov
in
add
rcr
or
sbb
sbb
pop
shll
inc
ljmp
adc
or
jle
decl
scas
dec
xchg
fs
jecxz
rcr
mov
imul
xchg
sbb
inc
jb
enter
sbb
sub
mov
mov
add
fsubl
aaa
jbe
aas
jae
jns
popf
sbbl
and
push
outsb
leave
xorb
mov
stos
cmp
dec
inc
jmp
push
aam
sub
cltd
fcoml
push
push
stos
sub
push
popf
loope
scas
pushf
add
and
xor
xchg
fnstsw
ret
sub
add
and
popa
jmp
sbb
sub
fldt
fisubrl
and
xchg
or
xor
sbb
xlat
push
xor
mov
pop
mov
loopne
add
lret
stc
js
inc
push
mov
rcrb
xchg
fdivrs
pop
xchg
or
nop
loope
out
push
ds
push
adc
loop
cs
js
inc
adc
dec
cmp
int3
fildl
xchg
cmp
inc
mov
ret
sbb
push
test
xor
stos
sub
and
and
hlt
xlat
shl
push
adc
in
lcall
inc
loopne
push
in
dec
mov
xchg
cmc
mov
es
pop
aam
and
enter
sub
mov
xorb
push
mov
arpl
loope
xor
push
push
sbb
mov
push
mov
push
push
push
mov
sbb
stos
fistl
pop
leave
pop
aam
loope
imul
and
inc
jns,pt
cmp
lds
mov
pop
lock
add
rep
repnz
arpl
outsl
or
icebp
rolb
sbb
lods
lcall
loop
pushf
les
mov
lret
mov
fbld
xor
pusha
xor
pop
lret
fmul
lcall
xor
or
jns
icebp
lret
frstor
sbb
adc
dec
pusha
mov
pop
pop
aas
mov
pusha
sbb
and
pushf
dec
sti
mov
xor
push
movsl
in
aam
jp
jmp
out
jmp
cmc
shrl
cmp
mov
jecxz
cmp
roll
push
xor
mov
pop
stos
add
shll
sbb
out
pop
jge
mov
add
adc
aad
sub
push
or
cltd
dec
shlb
imul
rcr
mov
push
mov
ja
mov
adc
mov
out
rorb
push
mov
jns
rorb
xchg
clc
jb
fbld
xor
and
cs
pop
cmp
nopl
push
mov
sub
sub
mov
aad
push
addr16
dec
pop
dec
imul
or
add
mov
lods
arpl
out
jmp
pop
fildll
jmp
cmp
pop
mov
mov
pop
push
insl
pop
ljmp
cmc
stos
fidivl
sarl
test
inc
mov
lcall
mov
add
mov
dec
popa
in
and
js
xor
sub
aaa
xor
stos
jecxz
int3
cld
adc
insb
cmp
cltd
js
fs
mov
adc
push
mov
in
stc
movsb
flds
mov
outsl
xchg
xor
pop
mov
jae
xlat
lea
pop
icebp
push
loop
pop
pop
aaa
ss
jne
in
sub
mov
lret
xchg
dec
pop
cmp
xchg
xorb
in
pusha
add
rcr
scas
mov
inc
hlt
pop
loope
fildl
pop
sbb
sbb
xchg
std
out
xchg
scas
jne
pop
xor
xchg
push
and
xor
push
jl
adc
sub
lds
lret
lahf
and
or
cmp
ds
mov
add
les
jo
addr16
adc
and
jg
test
imul
ret
in
pushf
pop
inc
xorl
mov
push
mov
pop
inc
cmp
hlt
push
xchg
hlt
mov
xchg
test
inc
lea
lret
dec
add
dec
insb
insl
clc
mov
aad
cmpsl
xor
bound
mov
jae
insl
xor
dec
xor
cs
dec
inc
mov
les
push
addr16
jbe
inc
loopne
mov
sbb
movsb
iret
push
and
stc
int
in
push
jns
fdivrs
loope
sub
lahf
adc
jp
mov
pop
mov
scas
jmp
mov
lret
lea
lret
std
rorb
stos
bound
xchg
sbb
pop
and
push
mov
pop
lods
mov
sub
orl
adc
je
cmpsl
test
adc
mov
xor
shrb
fsubr
cmc
inc
inc
mov
fsubr
test
addr16
notl
int
xchg
lods
mov
addl
cmc
aam
cli
fnstsw
and
pop
sti
sbb
movb
call
add
jecxz
xchg
movsl
push
jne
shll
iret
xor
xor
shr
xchg
cmp
in
sub
push
mov
mov
adc
or
lods
dec
mov
outsb
mov
pop
mov
shrl
cmp
sahf
and
push
or
stos
xchg
sti
aad
shlb
mov
adcl
xor
hlt
test
adcb
pushf
ja
in
sub
inc
cmp
push
into
adc
dec
cmp
or
mov
xchg
add
sarb
lea
mov
lds
jne
lods
ds
cmp
lret
push
xor
xchg
push
repz
test
mov
add
imul
sti
out
mov
sub
bound
lods
xorb
popa
mov
rcl
loopne
dec
notl
or
push
and
cs
stos
mov
push
push
jle
cwtl
scas
orb
mov
jno
mov
pop
clc
arpl
sarl
sbb
loopne
rclb
cmp
jp
pop
cwtl
inc
lcall
pop
dec
pop
cbtw
hlt
push
imul
in
stos
adc
ret
fcomp
sbbl
cwtl
mov
pop
mov
in
decb
shrl
aaa
cmpsb
aam
scas
inc
lock
lods
les
pop
pop
xchg
sub
bound
test
lea
jge
bnd
sahf
rclb
jp
and
sbb
xorb
mov
inc
std
aad
addr16
cld
lahf
inc
sbb
lods
bound
test
jmp
lods
outsl
and
popf
push
jecxz
imul
shlb
cld
xchg
icebp
outsl
pop
xor
pusha
sahf
pop
pop
fs
lcall
xchg
scas
push
dec
stos
dec
ss
lea
stos
mov
mov
sbb
mov
mov
scas
out
sti
addb
xor
inc
cmpsb
jp
insl
xlat
mov
adc
adc
mov
sbb
mov
addr16
jecxz
in
lcall
clc
jmp
fstpt
and
fisttpll
mov
add
push
lds
adcb
hlt
mov
inc
pop
scas
jne
push
cwtl
ljmp
mov
xor
cmc
jbe
sbb
push
and
fcomp
pop
icebp
mov
and
cmp
psubsb
adc
data16
outsl
or
cmc
test
out
cmp
cmp
ds
stos
fwait
mov
adc
add
aaa
mov
add
add
dec
stc
ret
jmp
repz
pop
dec
jp
frstor
pop
or
sbb
pop
sbb
fwait
dec
in
mov
cmpsb
cs
andl
aas
ret
sbb
ds
daa
push
dec
pop
mov
enter
int3
in
cmp
movsl
icebp
cmp
aas
addr16
jp
mov
dec
insl
pop
dec
add
push
adc
jae
cmp
sub
adc
lea
jbe
repnz
xchg
pushf
mov
push
scas
gs
jnp
pop
add
aas
cmp
dec
ret
int3
mov
stos
dec
and
loopne
in
ja
mov
mov
lods
cmp
lret
lahf
or
jmp
sbb
adc
or
xchg
outsl
inc
push
pop
lods
sti
jns
arpl
lret
mov
xchg
orl
inc
ds
mov
test
inc
push
sbb
or
pop
shlb
mov
stos
or
push
inc
mov
fisubl
jnp
je
cmp
cli
lcall
das
es
stos
pop
rcrl
push
pop
mov
jp
je
push
sub
arpl
fldl
sbb
mov
inc
push
mov
mov
cmpsb
mov
pop
xchg
push
inc
ret
jg
or
or
xor
fdivl
mov
and
fwait
loopne
xor
loop
lods
sbb
adc
add
add
cmp
xchg
mov
push
outsl
jmp
cmp
push
frstor
lcall
pop
cwtl
and
jmp
ret
mov
mov
cld
in
push
ret
popa
enter
mov
jne
and
adc
mov
into
mov
mov
inc
dec
aam
sbbl
in
arpl
mov
mov
jle
mov
popa
in
push
iret
jmp
dec
scas
cmpsb
or
push
dec
jns
add
ljmp
sbb
mov
shlb
mov
dec
mov
pop
pop
mov
std
imull
sub
push
and
xchg
lret
popf
adc
adc
ljmp
xor
jmp
xor
cmp
lds
pop
cli
je
mov
add
shld
lock
inc
jmp
jecxz
sub
in
lods
push
and
or
movsb
cmp
jae
push
inc
jmp
mov
ss
or
subw
ret
gs
dec
xchg
adc
cmpsl
pop
add
fimuls
xchg
or
jge
inc
xchg
xor
inc
shl
ret
dec
sbb
push
mov
mov
cmp
mov
sub
push
push
mov
adc
push
and
mov
mov
in
mov
push
add
push
adc
gs
add
adc
cmp
repnz
push
mov
outsl
and
lret
nop
pop
gs
mov
inc
jno
inc
jp
sbb
rolb
ret
xchg
scas
mov
in
jg
adc
orb
or
out
cli
xchg
pop
and
add
scas
pop
movsb
cmp
jns
jle
add
je
int3
hlt
shlb
or
push
cmp
dec
aam
scas
jbe
repnz
dec
enter
ds
jmp
test
daa
daa
or
fstpl
pop
sbb
daa
xchg
jcxz
jnp
addr16
inc
daa
flds
xor
jp
imul
xchg
push
push
sub
rcrl
sub
dec
outsl
call
sbb
cwtl
and
aad
push
adc
cmpsl
mov
fdivrl
xchg
imul
les
ja
stc
mov
sbb
jp
push
ror
mov
push
mov
or
bound
js
dec
fadds
and
xor
xlat
stos
xor
cmp
test
lahf
sbb
adcl
mov
fisubrs
loope
repz
inc
adcb
cs
push
lods
xor
push
mov
push
inc
mov
negl
in
mov
and
sub
hlt
mov
lea
inc
pop
call
add
lret
pop
test
inc
mov
mov
inc
push
jmp
jp
outsl
jbe
push
and
imul
push
fstl
sbb
cli
or
sahf
lret
and
jecxz
cmpsl
nop
lsl
mov
inc
addr16
rcrl
fsubs
jb
sub
sub
dec
lock
jl
test
mov
pop
mov
mov
sub
jo
or
lods
loopne
mov
idivb
fistps
test
leave
jp
push
test
dec
pop
repz
inc
push
frstor
cltd
ds
stc
ljmp
test
sbb
pop
mov
push
in
dec
pop
mov
movsl
inc
aam
test
add
jno
cwtl
push
stos
sbb
sub
ds
jmp
or
aaa
loope
dec
dec
push
andb
rcl
bnd
cmpsl
leave
push
sub
mov
out
popa
int3
add
addr16
push
push
rcrl
fists
and
aad
ficomps
leave
nop
fbstp
out
adc
fwait
dec
fs
jo
sbb
adc
bswap
mov
fmull
push
add
int3
push
mov
popf
mov
hlt
clc
and
arpl
push
out
dec
ljmp
dec
fnstsw
xor
jbe
sbb
mov
mov
int
mov
cmp
xlat
mov
and
mov
fwait
ret
inc
xchg
fwait
jns
xchg
add
mov
xlat
push
lods
pop
ljmp
cs
loopne
dec
insb
xchg
int3
push
mov
xor
jo
cld
inc
sbb
mov
jo
adcb
push
imul
js
ss
jge
pop
inc
cmp
in
aam
pop
jb
jne
ss
shlb
fs
leave
inc
xchg
cwtl
insb
dec
cwtl
cmp
repnz
or
loopne
bound
ds
or
and
xorl
push
stc
out
addl
push
jecxz
xchg
jb
icebp
push
in
fisttpl
scas
jl
scas
fadd
xchg
dec
dec
add
stos
xlat
jle
dec
ds
mov
movsb
fnstsw
mov
sahf
mov
loopne
andps
addl
and
pop
aad
repz
ret
cwtl
out
lret
push
ja
call
dec
and
in
mov
pop
mov
xchg
xor
das
push
mov
scas
sbb
pop
mov
adc
gs
cli
adc
xchg
in
jne
sub
push
aad
int
out
insb
leave
sub
or
cmp
sub
cmc
mov
loope
cmp
mov
cs
cld
inc
fildll
lock
cmc
idivl
mov
and
dec
cmc
mov
pop
je
ja
stc
out
jmp
jmp
mov
aad
sarl
mov
inc
or
outsl
adc
in
clc
ret
push
pop
push
aaa
sahf
adcl
into
cmpsl
mov
lret
test
pop
inc
cmp
and
mov
xor
sbb
dec
test
sbb
popa
mov
stc
aad
add
out
bound
ss
mov
cltd
stc
inc
push
loop
fistpll
stos
cs
sar
pop
jbe
xchg
sbb
push
cmp
repnz
pusha
xchg
push
mov
xchg
and
mov
push
jns
jae
jl
lock
inc
push
dec
lods
jmp
cmpb
mov
sub
push
sbb
mov
orl
inc
lea
mov
pop
sarl
xchg
out
fstps
aaa
repz
clc
mov
mov
add
push
push
jecxz
adc
shr
dec
mov
pop
test
and
push
cmovo
daa
or
pop
sahf
dec
push
leave
xor
inc
fistpll
mov
inc
adc
rcl
dec
cmc
es
iret
sbb
es
jle
fildll
orl
daa
mov
dec
jo
sub
test
rcr
jbe
pushw
loop
test
stc
loop
in
shrl
std
xor
dec
or
sub
arpl
imul
inc
ja
mov
rcrl
pop
or
pop
je
jno
sub
jp
adc
xor
shll
sub
daa
jecxz
bound
scas
fidivl
addb
fs
mov
pop
into
pop
mov
add
pop
jns
pop
icebp
mov
add
sbb
mulb
mov
in
lods
fistpll
push
jo
enter
nop
mov
sarb
jge
push
imul
sti
mov
push
pop
stc
ljmp
sub
sub
push
orb
jle
jge
mov
push
jnp
mov
jge
and
cmpsl
fwait
jge
xor
add
push
adcl
ljmp
cmp
inc
cltd
and
fdivs
or
ret
into
inc
xor
pushf
dec
sbb
cmp
cmp
jno
dec
jae
ret
push
adcb
cmpsb
ficomps
lret
loopne
dec
aad
pop
addl
into
mov
sbb
cwtl
nop
jge
aad
cmpsb
insb
stc
lahf
inc
jp
cwtl
ret
mov
mov
jecxz
out
xchg
inc
adc
bnd
xlat
mov
in
and
das
int
xor
loop
bnd
push
outsl
mov
xchg
xor
or
hlt
mov
and
add
dec
mov
push
ds
cli
ja
shl
fisttpll
inc
pop
lock
jnp
cmpsl
push
rolb
xchg
jb
dec
sbb
jg
into
jmp
ret
mov
lds
mov
mov
test
and
int3
ja
and
xchg
stos
pusha
mov
pop
xor
out
xchg
outsl
sarb
adc
push
stos
push
ret
inc
jecxz
adc
in
cmp
bswap
and
inc
push
imul
xor
jns
mov
sub
outsl
movsl
cmp
or
dec
xchg
rorl
mov
sarl
in
dec
cwtl
fnstcw
jne
mov
push
cmp
lods
mov
cmp
cmpl
fxch
in
jmp
sbb
mov
out
or
add
lahf
jl
enter
inc
jno
or
jle
stos
filds
stc
or
pusha
and
aas
stc
inc
or
out
jge
push
push
fistl
lods
aaa
loope
call
scas
inc
xchg
dec
ss
add
lods
js
mov
or
mov
mov
and
cmp
mov
lea
fstenv
rcr
out
aaa
mov
fisttpl
sbb
fwait
jp
dec
lcall
xchg
xor
and
es
dec
stos
mov
xor
xor
andb
xchg
stc
mov
mov
sub
mov
dec
lods
add
xchg
mov
push
lea
rcrb
repnz
mov
xor
fmul
in
adcl
pop
jne
pop
inc
call
push
test
leave
jp
xor
das
mov
aam
insb
pushf
pop
ficoms
pop
icebp
or
cld
jae
mov
mov
outsl
out
outsb
icebp
out
lret
xchg
pop
popf
pop
outsl
cmp
repnz
cltd
cmp
cmp
mov
mov
mov
pop
adc
or
imul
clc
popa
in
js
hlt
push
popa
push
lahf
lods
sub
std
loop
and
jno
mov
jb
jb
int
mov
lock
je
add
sub
outsl
adc
push
cmp
adc
xor
add
sub
iret
loope
mov
aad
aam
sbb
imul
and
cmp
jne
push
rcl
pop
push
testb
inc
jmp
xor
mov
jmp
adc
andb
xchg
mov
jg
jmp
rcll
lds
push
hlt
sbb
lcall
decb
mov
fcoml
mov
sbb
jno
das
mov
inc
xchg
cmp
std
xchg
scas
enter
pushl
rol
adc
imul
add
fimuls
inc
scas
aaa
pop
sbb
pop
mov
sub
jno
sub
daa
insb
popf
adc
sbb
insl
mov
push
jne
popa
insl
jmp
testl
outsb
inc
ja
cmp
mov
rcll
out
les
jno
and
pusha
dec
rol
jne
ds
insb
push
fidivrs
pushf
mov
arpl
fdivrl
xlat
dec
xchg
jmp
mov
mov
in
loopne
jge
inc
or
ret
inc
sub
mov
ret
fdivrl
cld
cmp
pop
inc
cmp
jae
cwtl
mov
inc
xlat
scas
fisttpll
daa
icebp
xchg
and
push
in
mov
cmp
mov
adc
dec
adc
je
ds
ljmp
xchg
pusha
and
movsb
mov
cld
jne
dec
rorl
fisubrl
and
punpcklwd
jge
mov
adc
mov
xchg
bound
mov
fs
lret
lea
popa
xor
or
movsl
jnp
xor
push
or
push
enter
mov
mov
shr
insb
repz
mov
test
xchg
fistpl
fidivl
push
and
js
push
rorb
xor
mov
push
cmc
data16
jl
push
addr16
and
mov
je
xchg
sahf
aas
add
pop
shrb
shlb
inc
dec
sbb
ror
sub
pop
popa
fsubl
pop
xchg
mov
sub
push
mov
out
subl
repz
adc
int
add
das
fcom
fnstcw
fimull
dec
dec
repnz
xor
xor
ss
and
sbb
xchg
jmp
jae
sub
mov
lret
lahf
or
enter
andl
movsb
xchg
xchg
push
cli
mov
mov
push
xchg
sbb
and
orl
shll
push
inc
in
out
pop
sub
mov
iret
sub
xor
or
aam
adc
inc
clc
ss
adc
sbb
mov
hlt
in
jmp
aam
notl
jle
leave
lock
lods
push
adc
xor
and
ss
loop
xchg
in
into
fdiv
pop
push
data16
in
orb
outsl
loop
in
lea
or
filds
fildl
aam
xchg
bound
mov
scas
lock
pop
clc
movsb
scas
inc
test
push
and
loopne
mov
in
push
mov
daa
testb
mov
pop
mov
push
out
mov
and
pop
push
jp
mov
iret
xorl
leave
bound
cmp
ret
xchg
or
loope
adc
cmpsl
adc
repz
cmpsl
pop
stos
popa
pop
xor
pop
mov
loope
test
cmp
ja
or
fdivrs
sbb
jo
inc
movsb
jmp
mov
sbb
xchg
xchg
adc
sbb
jae
and
xchg
cmp
dec
ja
pop
inc
push
mov
sub
shll
scas
mov
inc
mov
cmp
int3
mov
adc
push
xchg
jbe
pop
enter
cli
cmp
xchg
pop
out
in
cmp
je
aas
mov
bound
shll
pop
scas
addr16
sbb
add
int
in
sbb
mov
push
cmp
pop
mov
mov
or
icebp
cmp
mov
mov
dec
jl
xchg
test
mov
lods
movsb
mov
mov
sbb
mov
in
roll
cmp
cltd
mov
ss
fsubs
or
shrb
movl
xchg
jecxz
rcrb
cmpsb
sbb
inc
jge
lret
mov
stc
mov
cmc
movsb
es
lret
and
mov
es
std
cltd
jp
cli
movb
addr16
je
pop
pop
and
fcompl
data16
add
inc
roll
mov
imul
mov
lret
clc
aam
mov
pusha
lds
mov
inc
or
lock
sbb
pop
inc
lret
jb
jns
daa
pushf
icebp
fcoml
jbe
pop
add
sbbb
iret
inc
mov
call
out
xor
div
inc
jns
int
pop
adc
stc
inc
and
ret
lds
aad
and
push
pop
cmp
and
repz
jne
fiadds
and
mov
dec
mov
pop
push
cmpsb
or
sub
jb
sbb
lcall
push
imul
dec
push
iret
add
xor
push
sbb
loope
cltd
sbb
cld
inc
cmp
cmp
loopne
or
mov
adc
sbb
and
and
mov
push
inc
outsl
ja
insb
fistpl
fnsave
dec
idiv
aad
stos
push
push
or
xor
jo
lods
and
add
movsb
icebp
push
or
dec
les
mov
and
outsl
dec
cmpl
aaa
adc
sub
push
xlat
jmp
js
fidivrs
aaa
or
call
fs
cld
inc
or
into
out
dec
or
jae
push
mov
xchg
icebp
loopne
xor
pop
ficoml
lods
dec
decl
cs
push
lcall
loop
mov
xchg
fsts
add
les
pop
mov
scas
add
push
or
ret
ror
push
daa
inc
pop
loopne
mov
rorl
lret
xchg
dec
lea
mov
out
push
iret
sti
mov
dec
jmp
sahf
jbe
ficoml
push
call
sti
xchg
ljmp
ror
stos
mov
push
lret
popa
pop
popa
and
jbe
sbb
pushf
jno
dec
rclb
loope
stc
icebp
mov
dec
enter
clc
xlat
frstpm(287
das
jo
fsub
adc
add
push
and
mov
mov
mov
out
inc
aaa
and
mov
stos
lods
adc
dec
movsb
jno
call
sub
nop
js
xor
mov
cmpsb
push
stc
add
cmp
pop
test
or
push
push
mov
mov
fs
loopne
inc
inc
int
sbb
call
sbb
cmc
sti
lret
es
data16
pop
pop
jl
int
dec
sbbl
xchg
xchg
jb
pop
daa
xchg
sbb
lret
add
dec
pop
mov
jmp
fisubrl
hlt
inc
roll
lcall
scas
mov
cmp
movsl
loope
sub
insl
adc
sbb
mov
in
fimuls
mov
sub
jno
andb
jne
push
xor
icebp
movsl
jmp
inc
mov
jle
enter
lods
in
or
pushw
and
into
in
ret
cld
enter
jg
leave
and
push
push
inc
and
or
xchg
xor
lahf
lahf
xchg
loope
and
cmpsl
xchg
repz
repnz
mov
stc
mov
or
cmp
sub
stc
sti
filds
jo
lds
shr
xorl
mov
xchg
mov
rcr
xchg
sbb
popf
jbe
or
xor
cltd
test
rolb
or
lds
dec
mov
mov
adc
sub
xchg
dec
jnp
and
cltd
es
je
call
xchg
fcomps
cmp
ljmp
div
cli
jne
jle
lods
loop
mov
scas
daa
fdivl
push
or
addr16
dec
mov
fisubrl
add
repnz
xchg
fdivl
or
loop
adc
push
fmul
xchg
jl
das
inc
out
mov
lea
pushl
mov
jne
dec
jl
adc
mov
repnz
cmp
fwait
pop
ret
add
push
or
out
mov
cs
arpl
aam
ljmp
in
test
sub
push
mov
cmp
loop
out
pop
mov
mov
fs
pop
ret
out
lret
xor
fldt
push
repnz
dec
adc
lahf
and
notl
push
loope
or
mov
cmpsl
jle
add
mov
test
out
cmp
and
aaa
mov
pushf
sbb
adc
add
fisttpl
adc
andb
aad
addr16
xchg
cmpb
stos
pop
int3
in
xchg
sahf
into
xchg
inc
rcll
jo,pn
shl
xor
jecxz
imul
inc
dec
pop
dec
jo
loope
mov
pop
lock
repz
inc
mov
sbb
mov
mov
nop
xor
add
push
aaa
and
fdivs
pop
jge
das
push
test
cmp
jns
jae
xchg
xrelease
int
das
add
bound
imul
add
orb
sbb
iret
and
adc
xchg
out
pushl
lcall
mov
out
into
cmp
faddl
rcr
dec
or
lcall
ljmp
cmc
push
and
sub
mov
pop
cs
testb
xorl
pop
add
cmp
in
iret
inc
cld
out
adc
and
adc
xchg
push
mov
or
jne
sti
shrb
out
jne
test
mov
xchg
loop
gs
jo
imull
sub
mov
mov
and
sti
adc
adc
or
sub
scas
test
dec
sub
in
xchg
xor
aad
mov
mov
push
push
jnp
push
mov
sbb
push
sbb
call
dec
jno
or
inc
in
dec
iret
mov
pop
imul
ret
outsl
sub
inc
fisubrl
xor
addr16
int
push
sub
sahf
sar
lret
aad
iret
mov
out
push
and
daa
aad
push
cmp
cmp
xlat
xchg
sub
mov
lods
cwtl
push
subl
jnp
xchg
in
insl
xchg
adcl
mov
push
xchg
das
dec
test
das
cmc
mov
ret
js
mov
stc
std
fistps
addl
xorb
sarl
mov
add
push
inc
hlt
cmpsb
mov
push
pop
scas
loope
adc
call
sbb
lret
pop
js
inc
outsl
xor
add
mov
ret
dec
sub
mov
mov
pop
and
in
mov
scas
dec
stos
mov
pushf
add
mov
stos
outsb
push
push
sbb
mov
cmp
dec
ret
jae
scas
mov
dec
fldt
xchg
xlat
or
test
push
sbb
movsl
add
mov
popf
stos
adc
push
sub
dec
imul
push
imul
aam
addr16
push
and
cs
inc
cltd
xor
dec
fisubl
cmpsb
mov
clc
cmp
jne
jns
jmp
imul
cwtl
add
movsb
test
pop
cmc
pop
aad
das
jae
call
in
leave
lahf
mov
sub
xchg
in
stc
int3
lcall
xor
mov
daa
mov
xor
lcall
xor
and
lret
in
pusha
mov
divl
cmp
adc
or
xchg
daa
movsb
out
cld
aas
push
cli
pop
dec
ficompl
pop
cmp
pop
and
cmp
push
aas
sbb
sub
loope
push
loope
add
adc
xchg
pop
or
cli
or
repnz
loope
lret
mov
dec
jg
ljmp
inc
pop
adc
and
pop
movsb
loop
js
andb
jp
jb
inc
movb
lds
xchg
nop
stc
or
out
call
xchg
fdivrl
mov
data16
cltd
pop
dec
xchg
xchg
inc
stos
adc
cmp
sub
data16
cmc
movsl
iret
or
xchg
or
hlt
subb
adc
xchg
mov
hlt
adc
or
jle
push
mov
pop
sub
dec
imul
xchg
ret
adc
xor
mov
cmpsb
dec
xor
xor
or
xchg
xor
cmp
push
sub
add
add
int3
cmp
int3
fisttpl
xor
push
and
inc
pop
mov
adc
addr16
cli
add
jmp
sahf
and
push
and
enter
repnz
dec
stc
adc
xor
imul
aam
shll
data16
test
mov
pop
add
dec
lods
pop
jecxz
rol
sub
in
cmp
ljmp
je
fidivrs
pop
out
dec
add
sub
in
mov
fwait
adc
inc
push
mov
adc
roll
cmpl
daa
xchg
and
divl
cmp
fdivrs
xchg
aas
or
lret
xchg
clc
mov
pop
pop
fildll
push
addr16
aam
sbb
das
cmp
or
outsb
mov
sub
inc
nop
push
xchg
xchg
xor
xchg
inc
jbe
fs
cmp
mov
lock
mov
sahf
pop
add
sub
push
icebp
xchg
push
bound
and
clc
rol
mov
into
leave
adc
inc
or
add
adc
jge
and
std
mov
cmp
movsl
testb
dec
jg
out
out
notb
add
fcoms
fwait
xchg
jmp
jo
mov
fsubp
jbe
repz
addr16
inc
mov
mov
mov
cmp
mov
sahf
in
andl
out
cmpsl
push
sarl
popa
pop
rcll
sahf
lods
sub
pop
sar
es
add
pop
adc
repz
repnz
push
mov
xchg
push
fdivr
mov
cmp
xor
rcrb
mov
insl
test
lds
sahf
mov
movzwl
aam
and
sbb
aas
cmp
orb
mov
int
pop
lock
lods
mov
jo
rcll
pop
mov
lock
mov
sbb
fistpl
jbe
mov
dec
mov
xlat
jbe
xlat
je
or
inc
sarl
mov
ja
rcrl
je
nop
arpl
jnp
fisubs
test
aam
hlt
xor
popa
mov
mov
inc
mov
fldt
xor
fidivs
outsl
pop
xchg
mov
imul
clc
push
lds
dec
or
pop
sub
sub
xor
arpl
nop
push
out
enter
dec
cltd
push
in
dec
add
out
out
jmp
iret
addb
testl
aad
das
mov
cmpsl
push
dec
inc
out
imul
sub
outsb
or
push
lds
lahf
dec
das
icebp
rolb
dec
pushf
push
jp
adc
push
repz
sub
hlt
inc
jp
test
out
testb
mov
sub
out
push
xor
jl
dec
push
sbb
ss
test
xchg
add
jecxz
ja
xchg
jne
mov
cli
add
fnstsw
rorb
adc
xor
adc
jo
bound
fwait
cmc
mov
imul
es
add
adc
scas
rcl
jne
stos
adc
jge
stc
mov
sub
jg
xchg
rclb
mov
in
cmp
cld
mov
es
mov
out
stc
ljmp
in
jnp
insl
rcrb
sbbb
stos
sub
std
inc
add
lcall
xchg
inc
xor
lahf
jnp
lahf
std
jp
pop
rorb
and
mov
adc
adc
xor
xor
stc
xchg
ljmp
pop
out
scas
dec
pop
jbe
gs
jae
aam
movb
cmp
sahf
inc
sbb
mov
xor
mov
push
push
jbe
and
loop
bound
mov
dec
stc
jns
cmp
rolb
add
mov
pushf
stos
mov
jno
test
pop
inc
jb
or
inc
xchg
cmc
pop
outsl
push
inc
in
rorb
xchg
dec
lret
test
fmul
push
push
fsubl
or
xor
inc
cmp
push
int3
cmpsb
cmp
scas
cmp
sbb
das
cltd
cld
je
test
lds
push
sbb
inc
in
out
repz
add
lea
inc
loope
ljmp
cmc
adc
stos
hlt
test
int3
leave
jl
mov
out
and
mov
lahf
push
mov
dec
inc
jg
addl
js
test
xor
daa
add
xor
xchg
stos
mov
inc
orl
push
outsl
inc
push
xor
sbb
or
ds
stc
lahf
iret
pop
cmp
push
add
fdivl
sub
pop
nop
add
imul
repnz
fnstenv
stos
ljmp
ret
push
cmp
inc
shll
lcall
dec
and
dec
push
ja
popa
cltd
addr16
mov
xchg
xchg
xor
add
sub
dec
hlt
sub
sarl
fnstcw
cltd
xor
pop
je
leave
pusha
cld
xor
inc
dec
xor
inc
cmp
adc
fcompl
enter
push
mov
pushf
jb
aas
lahf
push
loopne
clc
mov
xchg
fistpll
nop
mov
das
xchg
rorb
add
mov
ret
mov
dec
inc
test
and
push
push
sub
xchg
lea
sti
cmpsb
pop
mov
xor
lahf
mov
sub
stos
or
jecxz
out
dec
xor
je
mov
jmp
lods
es
outsb
mov
jne
and
push
pop
mov
cld
iret
rcr
aam
pop
rcrl
cmpsb
orl
dec
insl
in
xlat
out
dec
mov
mov
sub
mov
push
clc
test
pop
push
cmpsb
jb
xchg
orl
sub
ja
xchg
mov
and
lret
int
in
xor
xchg
dec
test
roll
and
pop
dec
cmp
insb
pop
mov
fnstenv
jnp
fbld
jmp
or
adc
or
testl
pop
xor
daa
das
or
les
adc
and
push
xor
jle
nop
outsb
sahf
in
sub
adc
scas
ret
daa
scas
and
test
lahf
stos
cld
cmp
fists
xchg
xchg
int3
xor
test
jbe
dec
jbe
test
mov
bnd
rcr
cld
dec
mov
cltd
pusha
xor
mov
es
xlat
inc
pop
dec
loop
out
inc
test
out
inc
fwait
jbe
gs
inc
sub
outsb
clc
out
and
jmp
fists
cmp
test
sarb
in
adc
pop
in
xor
js
adc
or
in
ds
mov
scas
cld
dec
mov
test
mov
in
lock
fstl
cmp
aad
jle
popl
cwtl
in
dec
aaa
out
push
les
jecxz
or
and
push
sbb
and
mov
add
xor
add
sbb
dec
aas
scas
adc
nop
and
push
pextrw
add
sub
mov
cmp
cmc
aas
cld
mov
fisubrs
add
xchg
xchg
xchg
test
adc
dec
xor
jo
jae
mov
xchg
repnz
dec
scas
pop
and
sub
ss
inc
push
mov
pop
lret
dec
sahf
cmp
xchg
popa
rcrl
xor
xlat
xchg
in
aas
mov
subb
fstpl
mov
jle
pop
mov
pop
sub
jbe
pop
cmp
mov
sub
jge
mov
push
fadds
and
shll
sub
sbbb
inc
xor
jg
int3
xor
mov
push
imul
insl
inc
mov
cmp
fdiv
outsl
aaa
xchg
push
std
sub
in
aas
xor
or
in
adc
push
add
jg
sbb
nop
push
cpuid
adc
cmp
pop
ror
dec
int3
push
jle
xchg
ja
push
push
test
add
loope
stos
jb
cmp
cmp
xchg
iret
pop
roll
cwtl
jb
or
call
push
pop
fcoms
nop
cmpsl
jmp
insb
shl
xor
xorb
cmp
fdiv
aad
aaa
in
xchg
xchg
jo
sbb
and
sub
inc
dec
and
xlat
pusha
test
jno
jle
aam
xchg
stos
push
xchg
stos
cmc
pop
fisttpl
sbb
push
or
mov
data16
dec
sbb
push
dec
add
aaa
adc
data16
imul
jbe
push
mov
imul
pop
aas
jne
xchg
ret
cmp
jo
lods
repnz
popa
dec
fcom
jl
fdivrs
sbb
scas
pop
mov
mov
or
jge
rcrl
mov
and
push
mov
sbb
mov
loopne
sbb
mov
jl
pop
fdivr
icebp
jbe
gs
pop
test
flds
leave
mov
or
add
cmp
test
mov
jbe
or
fisubrs
sbb
stc
in
in
icebp
in
mov
push
cld
stc
testl
fisttpl
mov
xchg
mov
push
jecxz
lahf
daa
scas
sub
inc
lea
outsl
data16
jnp
ret
add
fidivrl
mov
inc
stos
pop
dec
adc
mov
sub
ds
out
xchg
sbb
insb
jo
inc
sbb
fisubrl
jbe
das
mov
cmp
sub
adc
popa
stos
xor
xchg
das
xchg
dec
sbb
mov
bound
jge
aaa
sub
cmp
fnsave
sbb
jnp
andl
mov
mov
cld
and
inc
inc
imul
cltd
cmp
mov
sarb
lods
in
mov
movsl
aas
mov
fcoml
insl
dec
cli
sarl
cmp
mov
sbb
ljmp
or
inc
insb
jns
mov
cmpsb
insb
scas
push
push
mov
sbb
aas
fwait
xchg
jns
pop
and
lcall
or
je
sub
pushw
or
push
xchg
rcll
ljmp
aad
or
jp
adc
out
pop
push
mov
outsl
pop
test
inc
push
cwtl
sub
push
mov
dec
inc
int3
inc
dec
arpl
or
inc
push
or
sub
cmpb
jle
cltd
sub
lcall
pop
jle
enter
into
adc
xor
pushf
mov
sarb
sub
jecxz
cmp
mov
scas
jno
outsb
sbb
jae
push
lahf
mov
cs
fadd
call
mov
nop
or
cmp
pop
and
add
xor
sbb
call
adc
xor
movsl
gs
aas
imulb
fwait
lock
leave
fisttpll
or
fldt
int
and
aad
out
out
incb
pop
imul
jg
cltd
mov
loope
cltd
scas
mov
xchg
push
mov
xacquire
aam
loopne
sbb
mov
pop
insl
adc
dec
cs
cmc
dec
in
inc
cli
pop
push
dec
sbb
clc
dec
std
aas
icebp
imul
fiadds
dec
push
and
and
sub
sbb
scas
jp
iret
mov
cli
pop
xchg
sti
jnp
mov
jns
inc
int
dec
push
outsb
jge
stos
enter
mov
fisubs
mov
movsl
insl
sub
fldenv
shll
imul
sbb
pop
sbb
sub
stos
fcomps
inc
ds
dec
filds
jnp
mov
enter
jnp
inc
or
or
sub
subl
adc
loope
pop
aaa
out
sub
gs
fsubrl
mulb
lcall
push
mov
notl
and
ret
aaa
jno
mov
or
push
pshufw
sbb
xor
outsb
addr16
inc
xchg
movsb
push
and
lea
ret
push
dec
scas
mov
pop
lods
rolb
nop
ret
cmpl
adc
sub
jae
mov
mov
arpl
jns
or
das
sub
stos
dec
jmp
test
fisubl
or
jne
addb
adc
fnstsw
adc
loop
movsb
je
adc
adc
fisttps
int3
mov
pop
sub
aaa
cmp
scas
fs
sub
repz
insl
or
mov
mov
sbb
add
orl
add
sbb
test
jbe
fisubl
test
aas
lcall
jmp
mov
aaa
jg
inc
test
movsl
dec
aam
push
mov
out
dec
lret
mov
adc
sub
mov
jnp
or
dec
add
dec
adc
and
fwait
ss
mov
jp
inc
loope
orb
push
js
repz
icebp
lods
repnz
mov
push
call
cld
pop
test
push
xor
or
sub
jle
int
xchg
mov
push
mov
mov
pushl
inc
pop
mov
fstpt
xchg
pop
outsl
add
cmc
aad
movsb
aad
xlat
insb
into
inc
xchg
sahf
insb
inc
jae
loopne
jae
outsb
divb
rcrb
jae
sub
push
mov
fisubrs
ja
arpl
sahf
or
icebp
dec
mov
and
sub
lcall
mov
sub
push
mov
adc
pop
mov
mov
push
popf
xchg
mov
repz
je
ds
jbe
dec
inc
mov
cltd
test
sub
fistps
mov
fwait
xchg
ret
xchg
mov
roll
fidivs
and
push
xchg
add
xor
push
xchg
cs
and
repnz
cltd
bound
andb
jb
sbb
xchg
outsb
add
and
rcl
mov
jns
imul
es
mov
jle
mov
repz
dec
daa
es
movsl
jae
pop
jge
inc
mov
sbb
add
mov
xor
adc
sub
push
cmp
out
mov
dec
cmpsl
push
mov
and
sbb
push
or
sub
addr16
arpl
into
test
mull
test
mov
lret
push
das
push
es
jbe
push
shll
ret
adc
inc
push
stos
fmull
adc
xor
cmp
aad
push
cmp
fsts
lahf
test
lds
pop
std
aas
sbb
add
inc
sub
or
pop
sbb
lret
loope
lods
stos
outsb
movsl
xchg
outsb
push
jle
lea
or
nop
push
in
pop
sbb
mov
pop
inc
mov
loopne
notl
into
outsb
sti
mov
push
and
ljmp
mov
lods
xchg
icebp
push
mov
mov
xor
test
dec
push
push
rcrb
out
sbb
push
push
mov
push
daa
jnp
adc
mov
clc
lret
pop
stc
ss
lret
js
mov
and
and
or
sub
add
test
mov
sbb
inc
leave
decb
pusha
jb
xlat
repz
mov
xchg
mov
stc
mulps
push
mov
pop
lret
sub
scas
mov
mov
adc
inc
xchg
mov
ror
lret
aaa
dec
test
inc
hlt
addb
fimuls
mov
cmp
call
mov
mov
dec
inc
add
in
insl
jne
push
push
int3
aad
sbb
xor
imul
aaa
jmp
movsb
xchg
cs
stc
xor
rolb
adc
cmp
mov
clc
cmp
mov
test
mov
adc
jl
sbb
or
xor
or
push
dec
lea
cmc
aam
push
add
inc
mov
push
push
cmp
out
jmp
jge
popa
pop
lret
dec
sbb
sti
mul
outsb
adc
xor
adc
nop
clc
dec
lea
or
cmp
mov
pop
ret
mov
test
insb
pop
movsl
xchg
pop
mov
xchg
push
dec
mov
lock
xor
adc
int3
inc
jae
xchg
arpl
movsb
push
cwtl
inc
loopne
push
mov
loopne
xchg
push
push
mov
mov
and
mov
test
fs
aaa
jle
dec
sti
jecxz
loopne
jmp
inc
mov
es
cmpsb
or
jne
xor
nop
pop
or
pop
shrb
movsl
xor
dec
je
lret
call
lds
out
pop
push
xchg
andb
lds
or
aaa
jb
push
popf
pop
int3
iret
adc
dec
das
mov
fnstcw
sahf
cmp
aad
je
sub
sub
loope
mov
pop
out
loope
mov
sahf
mov
les
sbb
rorb
test
push
and
sub
loop
data16
scas
mov
sub
cld
pop
pop
cmp
repnz
sbbl
push
orl
push
out
fnstsw
jo
adc
lods
inc
mov
mov
pop
mov
testb
jg
sbb
test
addr16
mov
pusha
cmc
xor
popa
in
add
push
cli
and
mov
dec
mov
in
or
sbb
cwtl
rcrl
inc
push
call
clc
std
sbb
push
mov
les
les
sbb
stos
cmpsl
mov
cmp
movsl
in
cmpsb
rorb
mov
lods
mov
pop
push
fistpll
ja
out
jl
das
push
sbb
mov
jnp
and
cli
fmull
cmpsl
pop
icebp
xchg
pop
hlt
enter
push
stos
dec
insl
fbld
mov
jmp
sub
push
outsb
lods
or
dec
xchg
inc
sub
mov
mov
xchg
jp
push
fidivl
dec
mov
int
fldenv
cmpsl
fsubs
jno
data16
out
popa
mov
pop
and
pop
je
sarl
stos
adc
sbb
adc
orb
das
icebp
mov
fidivrs
mov
shll
pusha
scas
fstpl
stos
lods
fs
cltd
cmpsb
jge
call
imul
shrl
jae
mov
cmp
loope
inc
mov
rcrl
mov
pushf
cs
jno
cmp
ljmp
mov
dec
icebp
cli
pop
rorl
stos
nop
mov
pop
dec
mov
mov
mov
lcall
test
adc
sbb
mov
mov
jg
arpl
andl
mov
xchg
mov
mov
sub
lcall
icebp
and
jmp
or
pop
mov
outsl
fisubrl
lods
and
cmp
inc
mov
add
jnp
bound
mov
sub
shl
pusha
out
cld
into
pusha
mov
lods
addr16
push
imul
outsb
pop
stc
pop
jb
mov
es
cmc
mov
mov
mov
jb
sarl
test
push
loopne
inc
adc
sub
cmp
jno
pop
mov
jae
leave
mov
mov
fcmovb
mov
add
xchg
imul
push
adc
lock
ror
pop
mov
lahf
push
jo
pop
popl
xchg
jmp
pop
gs
xchg
dec
call
pop
xor
lea
xchg
movsb
sub
xchg
dec
rorb
jge
loopne
js
sar
aas
or
sub
mov
xor
mov
jmp
pop
jno
icebp
test
ss
std
je
mov
dec
loope
dec
mov
imul
clc
mov
jle
dec
xor
pop
cmc
jg
jecxz
add
sar
xchg
mov
js
addr16
jns
aam
jge
fnstsw
shr
xchg
ljmp
test
xor
add
aas
fwait
test
lds
mov
sarl
sbb
mov
es
aas
cwtl
cli
test
fldl
pop
popf
sbb
ljmp
jle
and
ljmp
sbb
mov
cs
cmp
out
push
rorl
test
aas
pop
scas
jns
je
mov
mov
test
cmpsb
outsl
scas
jbe
cltd
pop
fwait
loop
imul
fstpl
cmp
and
mov
lds
jns
das
xchg
push
push
jmp
mov
in
shll
inc
xlat
sbb
mov
or
mov
adc
pop
cmp
or
inc
fcomps
jg
out
adc
mov
pop
add
fdivs
push
popa
int3
inc
data16
adc
mov
stc
xchg
lcall
xor
cmpsb
rorb
xchg
mov
repz
or
pop
pushf
aad
adc
sub
inc
leave
jle
mov
dec
ficoms
pop
daa
inc
lds
sti
jno
jle
and
inc
mov
out
pop
loope
movsb
inc
mov
pop
call
add
mov
and
es
rcll
jae
dec
and
pop
test
jge
xlat
cmpsl
aas
cltd
xchg
dec
and
jo
out
xchg
loopne
or
sbb
adc
pusha
pop
xor
push
stos
negl
sub
out
inc
fstps
nop
lock
in
pop
loopne
ljmp
inc
les
and
nop
or
das
adc
enter
jbe
mov
mov
pop
std
xor
lahf
insl
repz
js
dec
or
sti
out
jmp
adc
adc
cmp
leave
adc
mov
out
fnstenv
cld
fs
nop
xor
xor
in
add
and
ljmp
inc
push
int3
jbe
ljmp
xchg
lea
mov
add
add
bnd
out
stos
cmpsb
test
or
adc
xchg
ficoml
sbb
add
stc
dec
negl
cltd
popf
xchg
stos
add
mov
fadd
sbb
mov
mov
jnp
push
xchg
aam
rorb
movsb
push
dec
rcll
xchg
frstor
pop
int3
das
xchg
push
int3
cmc
stos
adc
out
inc
imul
in
xchg
mov
imul
adc
adc
xchg
insl
das
sbb
insb
dec
cmp
js
push
iret
lret
sbb
add
daa
movsl
xor
mov
les
nop
adc
ja
aam
cmp
ljmp
shlb
mov
or
fbstp
dec
fmull
enter
cmp
lods
fsubrs
popa
dec
arpl
adc
loope
xor
xchg
or
jmp
enter
stc
fcoml
xor
icebp
lret
add
or
sbb
fwait
push
sub
xchg
shlb
enter
lea
out
sti
mov
xor
lds
cmpsb
rorb
dec
and
arpl
nop
lock
daa
xor
out
cmp
aaa
mov
clc
push
mov
cwtl
jne
push
and
mov
add
popf
pop
aad
addr16
fmul
ljmp
rcll
cld
mov
fiadds
daa
mov
aad
xor
xor
ja
ret
cmp
out
dec
sub
stc
inc
bound
mov
mov
ljmp
and
in
lret
negb
sbb
in
or
out
icebp
xor
push
xor
adc
or
jne
adc
rol
sbb
pop
sbb
lret
cmpsl
ret
jecxz
sbb
xchg
cltd
outsb
dec
mov
and
cmpsb
fistpll
cmpsl
in
jo
sbb
fcomip
mov
hlt
mov
nop
add
mov
mov
sub
popf
sbb
push
mov
out
adc
in
loopne
std
mov
out
push
sbb
inc
xchg
inc
test
mov
andb
xchg
xor
sti
jb
inc
and
mov
fld
pusha
cmp
cmc
fldt
jl
xor
push
fs
mov
cmp
push
ss
mov
loopew
cmp
adc
add
xor
cli
scas
ficoml
mov
sbb
sub
or
int
sub
call
mov
and
in
pop
js
addr16
insb
pop
fsubr
roll
and
pop
imul
aam
in
pushf
cmpsl
and
pop
test
xor
ss
fs
repz
push
sbb
xchg
mov
push
sbb
lods
push
mov
pop
fisubrl
fstpt
insl
push
jp
cld
push
mov
lret
inc
stos
cmp
xchg
rorl
outsl
xor
sbb
out
jnp
sbb
orl
sbbb
cmc
push
or
movsl
xor
jnp
push
lods
and
test
adc
movsl
adc
lret
movsb
movsl
dec
orl
movb
push
scas
insb
pushf
inc
mov
repnz
lods
in
push
xor
pop
dec
lds
lea
aas
cmpb
dec
repz
or
fldlg2
aas
xchg
ja
adc
insl
push
cmc
adcb
inc
dec
out
xchg
popf
adc
xor
mov
outsb
jno
cmpsb
or
test
and
dec
mov
enter
jge
insb
dec
je
push
sub
adc
loopne
add
dec
xlat
lods
mov
mov
fnstenv
ja
or
or
idivl
insb
jns
arpl
jo
push
mov
les
cmp
lret
inc
test
inc
sbb
int3
fcomps
arpl
mov
jb
cmc
jmp
inc
and
pop
mov
test
add
lds
in
jl
or
insl
lcall
stos
inc
mov
mov
jnp
cli
pusha
mov
fdivrl
das
imul
dec
push
sbb
pop
dec
popa
jne
test
iret
push
pop
out
arpl
aas
jp
jle
cld
pop
call
shlb
add
insl
insb
inc
call
dec
hlt
mov
pop
fidivrl
cld
sbb
mov
imul
pop
mov
mov
xchg
dec
stc
or
and
jmp
mov
or
lret
pop
leave
arpl
sub
pusha
mov
push
or
icebp
adc
fsts
xor
pop
xorps
xchg
sbb
mov
jmp
cltd
or
push
and
and
push
loopne
cmp
push
dec
fbld
out
cld
arpl
orl
sbb
xchg
out
pop
xchg
mov
fisubrl
adc
outsl
fmuls
out
lret
rcll
push
rorl
subl
call
cmpl
test
sbb
dec
add
add
jecxz
out
xor
mov
int
and
mov
je
ret
loope
push
mov
fldcw
ja,pn
jecxz
add
jae
cmp
cltd
push
stc
movsl
jo
xor
sub
mov
inc
lcall
xor
mov
sub
or
mov
xor
add
addr16
or
and
cli
push
jmp
cmp
jge
rclb
jns
mov
cmp
in
lds
insl
mov
lahf
movsl
fcmovnu
mov
xor
cmc
and
sbb
pop
int
cmpsl
mov
xchg
lret
imul
mov
add
cmp
inc
or
lods
adc
mov
inc
xlat
fisttpl
push
roll
test
pushf
fstl
cmp
inc
loop
hlt
fsubr
data16
inc
in
push
insl
push
scas
or
cltd
cmpsb
movsl
mov
imul
aad
iret
xchg
adc
adc
addr16
clc
sbb
push
loop
inc
cld
mov
adc
mov
rorb
ljmp
dec
xor
aam
and
int3
movb
test
iret
mov
pusha
sbb
lret
in
nop
jl
cmpsl
scas
sbb
xlat
out
aad
add
jmp
lock
inc
pop
sti
repz
fisubrs
bnd
popf
fmull
sbb
ret
sub
outsl
leave
in
aas
push
imul
rol
xor
and
lcall
adc
push
mov
inc
sbbb
xchg
pushf
jnp
fsubrs
iret
das
add
ret
mov
or
lods
gs
adc
loop
in
cmp
cmc
jne
iret
cs
inc
mov
push
sub
cmc
repz
js
cmpsb
popa
aam
mov
adc
mov
add
leave
push
mov
adc
idivb
lret
mov
pop
or
cmp
jg
stos
lds
inc
pop
xchg
mov
std
cmc
xchg
jge
hlt
out
cmp
pushf
and
mov
push
loope
cmp
cltd
xchg
sub
push
sbb
sbb
jno
movsb
pop
nop
mov
xor
dec
sbb
testl
sub
hlt
inc
adc
lds
dec
add
das
jno
aaa
fstpl
int3
test
sti
out
pop
xchg
movsl
test
dec
clc
test
scas
fsubl
and
mov
fiadds
push
inc
push
test
repnz
pop
or
mov
sbb
aad
and
in
stos
loop
mov
in
pop
jno
sti
push
cmp
jne
mov
aaa
jns
mov
inc
or
pop
sub
loop
das
pop
and
mov
imul
mov
hlt
xchg
in
sahf
out
out
cmpsl
lea
jge
inc
inc
mov
pushf
mov
bnd
scas
pop
inc
pop
popa
sub
xor
pop
clc
cmp
rol
std
divb
mov
ret
push
jle
adc
iret
std
jmp
inc
dec
arpl
adc
add
pop
imul
addr16
xchg
pop
jle
inc
out
add
xor
pop
pop
rorl
dec
mov
ds
inc
and
jns
inc
ret
pop
lahf
jnp
mov
sub
jb
lods
gs
out
inc
add
xor
jno
sbb
dec
imul
jmp
jne
out
xchg
std
add
mov
divl
cmp
cmc
mov
push
sbb
mov
sub
adc
mov
cs
mov
mov
mov
rcrb
movsl
xchg
cmp
add
hlt
push
call
jne
mov
push
dec
xor
push
push
fimuls
jne
pop
daa
roll
adc
es
or
cltd
les
push
cmp
movsb
sbb
fildl
mov
out
mov
xor
ljmpw
mov
in
cwtl
push
mov
pop
int
test
and
test
xchg
cmp
jo
nop
add
jge
cwtl
popa
adc
pop
mov
mov
imull
push
leave
leave
lahf
mov
push
int3
mov
xor
or
mov
mov
lcall
test
test
iret
test
xchg
imul
je
mov
xlat
das
xor
repz
jb
or
sub
lods
xor
sub
fcoml
or
andb
je
les
out
fcoml
and
fimull
testl
fwait
cmp
daa
addr16
sahf
sbb
sbb
sbb
cld
jns
push
fildl
frstor
clc
icebp
xor
cltd
hlt
sbb
jo
std
mov
mov
fistpl
int
outsb
jecxz
mov
sti
ret
pop
or
sub
bound
fstl
xchg
test
fbstp
xchg
xlat
out
daa
test
push
popa
mov
popf
into
in
add
fdivrl
xor
sub
in
addr16
jecxz
mov
sarl
add
out
sub
stos
dec
sub
cmp
push
pop
call
pop
xor
xor
std
xchg
dec
xor
lret
push
cmp
int3
jne
push
lahf
shlb
inc
cmp
call
cmp
pop
test
mov
add
push
in
repnz
mov
ret
dec
cmc
push
adc
inc
sahf
lahf
adc
sub
add
dec
daa
and
stos
lods
pop
cli
xor
cld
pop
mov
and
bound
daa
push
cmp
outsl
mov
sbb
sub
sbb
mov
lahf
sti
nop
jno
jmp
in
inc
xchg
inc
mov
sub
test
out
neg
divl
xchg
xor
or
in
pusha
out
xorl
sbb
cwtl
inc
movsb
push
cld
cmpsb
dec
out
inc
pop
es
les
stc
fadd
sub
push
subb
jnp
xchg
aaa
shlb
mov
push
and
inc
inc
mov
xor
ret
cs
mov
xlat
mov
mov
inc
push
xchg
loop
or
data16
cmp
nop
add
push
xor
fdivr
sahf
jns
stos
test
mov
inc
or
sbb
fdivrl
mov
sti
stc
popf
jmp
mov
xchg
enter
lds
add
xchg
bound
lock
pop
repz
lret
outsl
out
adc
std
dec
clc
xor
jge
mov
jg
lea
jns
fistps
and
mov
imul
out
lds
scas
daa
aad
mov
xchg
fisubrs
cmc
push
cmp
mov
sbbb
rcll
cmpsb
jge
clc
push
aad
arpl
out
dec
mov
ds
inc
rol
fstps
cmpb
mov
jns
das
mov
jl
mov
dec
jp
cmp
test
fnstsw
lahf
out
fmul
mov
movsb
lds
push
test
rclb
sbb
ret
movsb
nop
or
into
mov
cld
into
push
test
adc
jg
sbb
xchg
imul
sahf
cmp
push
arpl
inc
xchg
pop
add
pop
lods
sahf
sub
sbb
lret
lods
sarl
aad
out
mov
mov
mov
push
fs
ja
daa
daa
jb
add
add
and
mov
inc
mov
jle
sub
or
jb
lret
cmp
mov
int
loop
or
mov
shl
lcall
in
sti
adc
jge
icebp
pop
setnp
enter
adc
xor
dec
enter
add
das
ds
call
cmp
pop
int3
fidivs
cmp
js
sbbb
ljmp
push
cltd
and
jl
aaa
jbe
fs
push
data16
fstpt
jb
jl
pop
pop
mov
loopne
pushf
lret
sub
lock
loop
int3
loop
insl
lret
sti
int
mov
adc
jb
mov
sub
popf
lods
push
mov
cmpsl
and
scas
lret
xchg
push
push
push
out
outsb
cmpsb
cwtl
sbb
mov
inc
shr
outsl
sub
daa
jmp
ret
xor
xchg
xor
mov
movsl
out
add
shlb
lahf
js
jb
cmc
push
fists
fcompl
rol
mov
sub
insb
adcl
pop
gs
outsl
test
xor
mov
add
push
or
adc
sub
mov
imul
xor
add
push
mov
xor
hlt
lahf
sbb
icebp
adc
shrb
xchg
mov
aaa
mov
rclb
shll
mov
aad
add
mov
int3
fisttpl
or
repnz
je
das
lds
mov
mov
js
inc
cmc
int3
lret
cwtl
into
es
enter
in
xor
or
cs
jge
mov
js
push
pop
xor
jb
shll
arpl
add
fs
dec
adc
shl
lret
popf
ljmp
inc
adc
and
mov
mov
sbb
cli
push
mov
test
push
cwtl
psubb
popf
jno
iret
dec
mov
pop
gs
mov
cmp
movsl
sub
jmp
movsl
rcll
sub
imul
sub
int3
jnp
and
icebp
comiss
iret
popf
adc
inc
jns
mov
push
and
test
ljmp
jnp
loop
fs
sub
in
imul
sub
imul
hlt
test
mov
outsl
sub
or
lds
inc
mov
lret
push
loopne
ret
jo
daa
ss
push
lcall
mov
xor
rcll
aad
cmp
cs
push
inc
push
in
addr16
mov
mov
push
mov
repnz
insb
ret
push
shll
repnz
mov
pop
loop
sub
aas
pusha
xor
outsb
lcall
popa
or
cmp
mov
adc
adc
imul
les
jmp
cli
jnp
mov
popa
loope
add
xchg
dec
cmp
fmul
in
ja
pusha
into
loopne
xor
out
push
xor
sub
les
movsl
in
jno
sub
pop
hlt
fbstp
sbb
jp
ret
aaa
andl
dec
cmp
pushf
sbb
les
cwtl
jl
inc
or
xchg
mov
inc
nop
je
addl
pusha
xchg
repnz
add
dec
adc
pop
mov
cmp
fwait
ja
adc
adc
imul
test
hlt
mov
cmp
xchg
gs
das
in
xchg
pushf
or
pop
mov
jg
cwtl
mov
mov
xchg
mov
sub
sbb
ret
push
sub
shlb
popa
das
fiaddl
push
inc
and
daa
ljmp
hlt
lods
insl
xchg
push
fisttpll
jnp
fnstcw
jb
xlat
xchg
fistpl
ror
jbe
pusha
jo
mov
or
aas
mov
sub
dec
dec
sub
jbe
je
adc
inc
dec
push
imul
and
and
popf
out
out
pop
add
lret
sub
xor
pop
add
ljmp
dec
clc
inc
mov
shr
sub
xor
mov
dec
push
ljmp
cld
sub
movsl
leave
jp
mov
lret
or
or
in
and
add
jp
jl
stc
add
enter
fcmovbe
cmp
mov
xor
iret
add
repz
notb
imul
jbe
dec
lret
xor
shr
lret
shrl
movsl
push
dec
sub
jg
fbld
mov
mov
cld
scas
xchg
adc
push
inc
xorl
pop
sub
call
xor
cmp
lahf
cli
or
fldcw
and
sbb
shll
lahf
adc
rcrl
fsubp
je
xchg
sarl
pusha
or
sbb
jg
cmc
int3
jmp
imul
mov
shrl
add
lock
lods
ds
jecxz
lods
push
pop
mov
inc
fiadds
cmp
js
pop
stos
mov
cmp
cmp
lahf
sbb
ja
test
dec
jne
jg
adc
jmp
repnz
movsl
ret
adc
int3
ljmp
push
movsl
out
sub
cmpsb
xor
daa
mov
ret
mov
fs
xchg
push
loope
xchg
pop
jbe
dec
jno
out
and
pop
xor
mov
fcomi
ret
sbb
lds
cmp
cmp
and
jmp
or
lcall
sti
mov
and
jmp
push
loop
and
and
das
pop
push
outsb
fld
ljmp
adc
jae
jno
shll
cmp
pop
scas
aas
hlt
and
fcmovu
jno
je
dec
cmpsl
inc
dec
jmp
push
jo
xchg
outsl
mov
lcall
stos
aas
enter
jnp
xchg
add
int
gs
subb
and
imulb
xchg
mov
loope
fiaddl
imul
cmp
mov
hlt
lret
into
push
adc
cmp
mov
stos
and
popa
mov
loop
inc
sbb
jp
adc
in
cmp
jne
jecxz
pop
aad
insb
int
push
push
dec
cmc
adc
ret
cld
add
jecxz
ja
adc
cmpsl
into
or
ffree
hlt
out
scas
inc
insb
data16
mov
lcall
lcall
inc
jmp
jmp
xchg
add
fwait
lock
xchg
repnz
inc
daa
xchg
cmpb
aam
pop
inc
sbb
sbb
or
push
xlat
bound
icebp
rol
daa
pop
dec
dec
mov
js
mov
pop
pushf
das
mov
inc
xchg
gs
mov
add
sbb
push
sub
jmp
mov
ds
out
or
roll
adc
push
js
test
cli
insb
push
popa
adc
mov
mov
cmp
vgatherdps
mov
hlt
pop
jo
add
lods
cmpb
and
push
popf
pusha
jbe
mov
rcr
mov
jo
xchg
pop
ljmp
sbb
jl
xchg
cmp
jbe
pop
addl
scas
cmp
es
sbb
cmc
rcll
bnd
cmc
xchg
and
int3
dec
mov
gs
hlt
jo
xor
add
test
sbb
mov
dec
imul
adc
or
inc
mov
test
cmp
loope
sbb
xor
jne
xor
insl
or
inc
xchg
pop
mov
mov
push
mov
int
xor
repnz
mov
movsb
xorb
sti
inc
mov
into
jmp
shrb
je
cmp
out
inc
arpl
mov
nop
jo
lods
sub
ja
int
mov
sub
ret
call
or
dec
lcall
popf
sbb
mov
in
hlt
mov
loope
pop
and
mov
cmp
adc
adc
xchg
or
pop
and
cmpsb
and
sbb
xchg
pop
sbb
jmp
and
rclb
lcall
pop
lret
dec
push
jp
push
jle
fisttpll
hlt
pop
push
mov
pushf
adc
and
lock
xchg
cld
cmp
pop
cmp
mov
mov
int3
ror
pushf
inc
iret
in
jo
ja
lods
aam
enter
in
and
daa
push
mov
out
pop
push
add
shlb
push
and
xor
scas
cmpsb
aas
jecxz
outsl
lods
jbe
xor
xchg
stos
in
and
mov
test
jbe
mov
jno
scas
push
cmc
and
call
adc
mov
cs
bound
nop
cli
pop
out
push
sti
lcall
push
adc
addr16
aaa
xchg
dec
aas
icebp
pop
mov
mov
js
data16
dec
popf
jb
cld
mov
setl
dec
push
inc
rcl
fiadds
xor
mov
lret
adc
mov
vmwrite
or
ss
ret
cmc
out
inc
addr16
add
pop
jle
lret
mov
lret
or
daa
cmpsb
stos
jmp
loopne
sbb
sbb
insb
sbb
and
push
pop
mov
push
dec
clc
cld
add
inc
arpl
pop
fnstenv
enter
jp
inc
movsb
jb
add
sahf
or
xchg
push
inc
or
int3
icebp
sbb
mov
dec
pop
js
lcall
mov
jns
scas
rcr
mov
pop
sarb
mov
mov
popa
cwtl
push
stos
cmp
sbb
int
sbb
cli
and
mov
arpl
stc
nop
mov
sti
mov
hlt
mov
jns
mov
clc
jecxz
xchg
hlt
mov
aaa
xchg
jmp
test
mov
mov
cld
lahf
arpl
add
imul
pop
stc
enter
shll
and
rcrb
pop
je
push
ret
scas
rcl
cmp
loopne
fwait
xchg
movsb
insl
jl
pop
fildll
adcb
add
int3
dec
xchg
lods
inc
jp
mov
cwtl
xchg
inc
dec
sub
xor
lea
or
or
std
jns
mov
cmp
mov
lret
mov
out
fsts
das
loopne
adc
push
jo
rcrl
inc
add
mov
lret
popa
xor
aad
ss
dec
bound
sub
les
dec
mov
lds
add
shlb
jmp
popf
icebp
dec
fistpll
fucomi
lret
mov
mov
inc
mov
js
jge
pop
jb
mov
inc
push
push
xchg
jmp
jp
mov
sbb
movsl
rorb
lea
pusha
add
xlat
ds
xchg
sbb
fisubl
adc
les
int
ss
andl
mov
ljmp
or
cli
pop
mov
jne
sbbl
push
daa
in
mov
jb
js
mov
or
lret
insl
pusha
push
repnz
and
mov
in
fildll
mov
add
fwait
mov
sub
sub
fbstp
push
xchg
jb
xchg
test
into
xchg
insl
push
and
shl
dec
je
mov
cmc
pop
out
jno
jecxz
pop
aas
or
outsb
push
scas
inc
dec
push
dec
aad
std
mov
or
sub
push
in
sti
call
lea
or
cli
test
rcrb
test
loope
ljmp
xor
and
out
mov
lds
inc
and
mov
idivb
repz
and
stos
and
jmp
bound
int3
cmp
popa
ret
mov
shrb
jno
dec
arpl
ror
lret
xor
icebp
imul
dec
fnstenv
test
pop
and
in
add
sub
push
imul
gs
outsl
popa
or
cltd
in
and
adc
out
mov
xor
pop
xchg
fnstenv
mov
jge
fs
sub
inc
test
cmp
fldl
or
or
and
jae
scas
iret
cmp
add
mov
in
outsl
or
jl
mov
sub
les
push
mov
repz
xor
inc
fwait
xor
add
dec
lret
addr16
out
js
xor
fstps
cmpsl
stos
gs
or
dec
rorl
xor
pop
shlb
les
xor
shrb
leave
sbb
push
add
imul
cmp
das
pop
adc
gs
mov
jbe
dec
fisttpll
test
sub
dec
shll
stc
mov
sub
addps
xor
push
fidivl
andl
dec
mov
add
xor
popa
mov
lods
popa
mov
pop
fucom
xchg
xchg
add
mov
mov
out
xor
addr16
lret
pusha
mov
icebp
neg
pop
and
leave
sub
jp
fisubrs
sahf
xor
xor
daa
push
jmp
lret
mov
rorl
sahf
ljmp
mov
and
pop
rclb
mov
jae
xchg
subb
movsl
push
dec
rorb
addr16
icebp
cmp
clc
in
jne
test
and
xchg
clc
out
mov
or
ret
sbb
dec
xchg
adcl
sbb
cmp
add
int3
push
in
mov
dec
sti
push
pop
mov
insl
xchg
jne
roll
lock
pop
sbb
dec
int3
popf
inc
cwtl
repnz
or
sahf
inc
repnz
ficomps
movsb
and
outsl
jmp
cmp
and
mov
sub
cli
dec
mov
movsb
div
enter
sbb
sbb
outsb
adc
mov
add
mov
cli
mov
and
jno
pop
mov
cmp
adc
aaa
sub
jg
outsl
ss
push
in
and
mov
mov
and
or
cmc
cmpsl
mov
xlat
xchg
adc
sarb
gs
fidivrs
cmc
pusha
pusha
cmp
xchg
add
pop
dec
xchg
mov
jne
sahf
pop
xchg
in
jl
push
lock
jp
sub
adc
jno
xor
loop
mov
xor
cmp
jae
sbb
in
loope
test
add
sti
push
sub
stos
dec
sbb
inc
pop
push
jb
jbe
mov
subl
mov
mov
mov
test
scas
out
pop
push
sbb
jecxz
mov
dec
adc
sub
inc
dec
cmpl
xor
inc
fs
scas
mov
xor
cli
sub
loope
xchg
or
psraw
add
jecxz
bound
inc
cmp
jo
sbb
aad
mov
sbb
cmpsb
and
add
bound
push
bound
sarb
push
mov
pop
push
mov
fwait
dec
outsl
add
and
sub
xchg
mov
jb
std
aaa
mov
mov
cmp
xorl
or
sub
or
sub
ljmp
stos
xchg
pusha
and
jns
pop
mov
repnz
int
loope
test
add
cmp
pop
xchg
lcall
sbb
push
sbb
push
xchg
cmp
jle
aad
into
les
loop
pop
and
fsubrl
or
jmp
pop
ret
int
dec
hlt
mov
mov
pop
fcmovbe
cmp
mov
lret
scas
inc
dec
in
and
clc
adcb
adc
nop
das
push
les
retw
enter
mov
stc
dec
mov
dec
mov
mov
icebp
cmp
lea
push
or
inc
test
pushw
pop
jb
push
pop
mov
loope
aad
fs
lret
mov
arpl
mov
mov
inc
in
les
and
fsubs
xor
cld
dec
and
sbb
dec
or
in
push
in
shrb
outsb
sbb
sub
inc
sahf
call
mov
or
push
andl
iret
nop
pop
push
or
fcomip
bound
push
into
aam
daa
cmp
mov
in
push
adc
push
mov
mov
enter
pop
xor
std
push
insl
ret
loopne
cld
fs
jbe
xor
xor
icebp
imul
cmpsl
fbstp
mov
cld
lea
push
fisubl
pusha
fisttpll
push
add
insl
mov
pop
mov
cmpb
mov
mov
test
mov
mov
gs
das
xchg
sub
clc
out
push
sbb
add
inc
data16
scas
mov
mov
mov
cmpb
push
movsl
sahf
sub
lcall
xchg
adc
aam
not
pop
jl,pn
push
xchg
repz
ds
pop
fisttps
and
gs
mov
rcrl
mov
sub
clc
les
lds
push
pushf
test
dec
fcoms
mov
mov
out
cs
test
mov
add
es
inc
sbb
pop
push
sbb
pop
popf
sbb
push
jl
lret
popa
inc
pop
mov
xchg
lcall
sbb
leave
or
js
test
push
jecxz
jmp
mov
xor
xor
out
push
aam
int
enter
pop
pcmpeqb
mov
mov
stos
xor
mov
cld
shrb
stos
roll
mov
inc
shr
fistpll
xor
aas
mov
das
aas
jne
push
gs
lods
cmp
out
sbb
into
fistpll
xchg
adc
xlat
mov
aad
add
andb
into
adc
cwtl
mov
xlat
or
aad
je
fldt
xor
jno
icebp
adc
sbb
arpl
lods
sbb
fcompl
dec
pop
sbb
xlat
xor
rorb
cmpsl
and
xchg
aaa
aas
into
jne
pop
mov
sbb
lods
test
push
test
movsl
aam
push
bound
outsb
lds
pop
mov
xchg
and
test
lods
mov
or
jno
testb
dec
gs
jge
lret
and
adc
dec
xor
addr16
add
addr16
jb
dec
int
push
adc
xorl
fstp
ficoml
stos
sti
mov
fwait
and
cwtl
mov
mov
iret
mov
insb
push
xor
add
sbb
mov
sbb
lret
push
aam
out
or
lcall
aam
sahf
inc
mov
inc
std
scas
lahf
and
jp
pop
pop
lea
push
mov
push
and
lock
pop
push
dec
in
xchg
and
bound
js
fdivp
pushf
jecxz
cwtl
mov
mov
subb
aad
jl
sbb
cmpsl
popa
jmp
sbb
stos
dec
in
jnp
adc
dec
push
adc
fcoms
pop
call
cmp
fimull
aaa
shrl
sbb
or
pop
mov
sbb
mov
ss
pop
stos
lcall
bswap
lcall
or
sbb
mov
inc
pusha
ja
lods
cs
sub
dec
adc
movsl
ja
add
jnp
mov
test
testb
mov
mov
sub
xchg
pop
nop
add
or
push
add
pop
jge
jnp
pusha
jl
push
and
scas
cwtl
mov
pop
xor
or
xor
xor
or
xor
dec
in
lahf
mov
lds
mov
pop
jmp
pop
cld
mov
push
pop
dec
xchg
pop
repnz
clc
xor
negl
ds
adc
outsl
or
lcall
icebp
scas
in
cs
mov
bound
fcmovu
pop
mov
inc
sub
pop
and
cli
add
repnz
lcall
scas
scas
nop
mov
rcl
pushf
es
lahf
dec
insl
imul
les
xchg
imul
int3
push
adc
jmp
fstps
push
test
addr16
ds
push
push
and
mov
mov
fidivrs
pop
xor
cmpsb
test
xchg
xchg
push
xor
sbb
inc
xchg
xchg
popa
mov
push
shll
jb
ljmp
cmp
xchg
sub
pop
jg
out
pusha
jge
sbb
or
pop
pop
xor
aad
shll
mov
sub
pop
lds
inc
adc
xor
dec
fxch
lea
jnp
adcl
inc
rcrl
shlb
sub
lret
mov
or
or
sub
and
lods
push
aam
sbb
pop
sarl
fadds
sbb
das
in
sahf
xchg
imul
lcall
xchg
adc
imul
xor
xchg
out
sti
and
sub
in
out
loope
xor
xchg
pop
jo
subb
pop
push
mov
pop
pop
rcr
cli
or
rolb
sub
push
xchg
inc
in
into
je
add
jecxz
inc
pop
cmp
inc
movsl
cli
popa
les
and
mov
ror
jo
insl
je
orl
mov
adcl
bound
mov
cmp
xor
outsb
test
push
xor
dec
adc
int3
mov
movb
cmp
sub
mov
fbld
call
es
stos
stc
cs
pop
pop
dec
xchg
in
add
and
test
fwait
scas
cmp
pop
ja
call
push
lahf
jnp
repz
pop
xchg
lcall
jg
pop
cmpsl
push
mov
gs
sbb
out
sbb
jns
in
cmc
or
lods
xor
lahf
int
test
ja
push
testb
pop
xchg
bound
scas
cmp
cwtl
push
decb
dec
sbb
sub
jmp
sti
inc
leave
xor
mov
out
adc
outsl
fwait
shrl
adc
int
mov
lcall
sbb
inc
adc
inc
cmp
jbe
loopne
adc
jg
mov
push
xor
mov
dec
jo
pop
nop
sbb
or
or
pushf
inc
sahf
rolb
ja,pt
jge
mov
fnstenv
add
mov
and
lahf
std
jbe
xchg
sarl
leave
inc
push
pushf
nop
outsb
stos
lods
add
mov
stos
inc
lret
js
mov
add
push
lcall
cmp
xchg
insb
inc
ja
push
adc
mov
jne
pop
inc
test
lcall
lds
ud0
fs
push
sub
sub
fistl
mov
scas
xor
xchg
das
jnp
lahf
outsl
jl
dec
test
dec
out
push
mov
xchg
add
leave
add
mov
mov
dec
push
dec
into
in
bound
mov
cltd
push
or
pushl
fdivrs
and
xor
adc
lahf
std
pop
ss
out
aas
push
pusha
mov
leave
mov
test
cmp
subl
out
xor
push
mov
ja
pop
call
test
mov
rcrb
mov
add
out
sub
xorb
xor
xchg
imul
push
insl
test
dec
mov
mov
aaa
jbe
xchg
sbb
cltd
rcrb
jb
pop
add
out
test
pop
test
repz
jne
mov
scas
es
bound
fbstp
pop
or
jnp
jle
pop
or
xor
jne
add
fnsave
pushf
test
push
xor
scas
aaa
int3
xor
jae
xchg
iret
fwait
sarb
cmp
fnstenv
cwtl
push
xchg
clc
popf
jnp
xlat
stos
outsb
xchg
loopne
push
cmp
inc
cmpl
xchg
aad
std
testl
arpl
push
cli
xor
and
sub
push
aaa
pop
mov
das
jp
sub
nop
jecxz
inc
repz
clc
out
pop
int
pop
loopne
xchg
iret
add
cmp
mov
pop
aas
shr
test
cmp
xchg
pop
mov
dec
test
add
stos
cld
aas
rorl
and
aas
inc
test
das
dec
pop
frstor
cwtl
push
into
fucomi
lds
in
mov
lods
rorl
jnp
adc
adc
mov
jg
scas
push
cmp
push
pop
cwtl
inc
xor
xlat
dec
fldt
loopne
addl
ret
scas
and
mov
and
mov
aam
das
inc
mov
inc
cmp
mov
insl
jb
gs
xchg
and
cmpsl
or
push
cmp
xchg
outsl
xor
loopne
xchg
inc
hlt
adc
stos
pop
in
push
push
fadds
in
addb
pop
inc
vmptrld
test
stos
inc
cmp
inc
pop
scas
dec
popl
jge
push
or
ds
jge
xorb
mov
mov
xchg
lods
adc
inc
adc
out
icebp
fistpl
and
adc
xchg
jns
pop
mov
imul
dec
and
dec
rcll
enter
cli
xchg
xchg
xchg
or
push
out
sub
xor
push
and
cli
stos
in
movsl
pop
iret
xchg
call
jle
adc
sbb
sti
lahf
out
popf
sbb
xchg
add
es
or
stos
movsl
xchg
push
sbb
mov
lret
js
mov
or
adc
popf
loop
stos
xor
test
mov
ret
cmpsl
scas
or
stos
fiaddl
mov
loopne
out
pop
jno
pop
mov
dec
mov
loopne
test
enter
lods
xchg
mov
fstl
adc
sbb
repnz
scas
popa
jns
lea
mov
inc
xchg
pop
xor
mov
or
ljmp
jbe
dec
push
cmc
fldcw
mov
push
lds
sub
xor
lock
ja
hlt
or
push
push
add
cltd
or
stos
xor
nop
js
dec
jmp
xchg
cltd
push
movsb
out
cmp
pusha
mov
push
and
in
jno
testl
addr16
xchg
jbe
das
sub
cmpsl
imul
inc
enter
xchg
adc
sub
pop
and
imul
test
xchg
aaa
jge
fwait
shrb
lds
sub
fisubl
rcll
sbb
mov
jbe
imul
cmpsl
je
mov
push
mov
lock
or
xchg
or
sub
sub
sarb
cmp
stos
cli
addr16
in
movsb
or
pop
xor
mov
dec
ja
xor
mov
adc
lret
jmp
mov
and
and
wrmsr
in
repnz
adc
lret
jnp
shlb
dec
sbb
push
stc
jmp
push
adc
cs
in
js
cmp
in
loop
je
addr16
insb
cmp
idivb
mov
xor
ss
or
add
pop
push
xor
mov
add
dec
inc
andb
pop
fisubs
jo
popf
push
sbbb
adc
lock
xorl
add
mov
dec
cmp
cmpsb
or
insb
decl
inc
or
sub
repnz
jecxz
mov
cmp
lahf
jmp
bound
jmp
jno
sbb
cltd
mov
js
popf
mov
mov
lds
pushf
in
fidivrl
add
inc
sub
add
dec
cmp
push
scas
xchg
movsl
aaa
and
addb
imul
pusha
jne
int
mov
add
sbb
divb
push
iret
frstor
mov
js
jl
cmp
scas
push
jmp
iret
jo
mov
mov
ds
shr
adc
dec
mov
xor
loop
rorb
test
mov
mov
mov
int
inc
push
pop
lahf
adc
inc
je
mov
cltd
leave
mov
pushf
orl
cmp
mov
pop
fmuls
aad
sub
test
in
jl
jl
adc
in
shll
or
push
pop
xchg
out
mov
inc
into
xchg
mov
loop
dec
movsl
scas
jge
xor
in
sbb
adc
loop
js
lahf
sbb
dec
mov
jns
mov
push
and
push
sbb
dec
mov
push
jp
pusha
jmp
mov
mov
cmp
mov
push
insl
cmp
or
pop
insb
test
xor
ret
mov
xchg
hlt
push
loop
stos
mov
je
and
fiaddl
test
jns
cmp
xchg
scas
in
inc
mov
mov
cmp
out
shll
insl
fcompl
xor
pop
pop
sahf
cli
jno
inc
mov
pop
cmp
cmp
lcall
dec
mov
rolb
sub
daa
jge
inc
mov
sti
xchg
xchg
push
push
adc
shrl
xchg
or
lods
adc
cli
in
inc
mulb
xchg
and
or
fcoms
mov
out
lock
in
push
movsl
push
jo
jnp
fdivrs
bound
xor
push
fbld
insl
orb
cmc
test
pop
push
add
ds
sbb
test
lret
ret
loope
inc
rcrb
push
fwait
lods
inc
mov
insl
jmp
mov
adcl
mov
test
mov
xor
sub
cmp
adc
shlb
scas
jge
stos
xor
inc
adc
push
add
xchg
les
dec
lahf
aad
testb
dec
inc
aad
mov
outsb
and
clc
cmp
mov
cmc
clc
push
and
jnp
outsb
inc
jb
cmp
lds
test
xchg
mov
jge
sbbb
jmp
xor
cmpsb
xchg
scas
popf
hlt
mov
clc
outsl
mov
out
xchg
dec
mov
xor
ja
inc
data16
pusha
insl
sbb
xor
xor
add
inc
int3
sarb
pop
adc
add
jecxz
popf
fisttpll
addr16
jl
out
cmp
mov
test
call
jbe
int
sub
pop
mov
call
repnz
sbb
jecxz
xchg
stos
pushf
icebp
add
rolb
xchg
push
mov
cmp
push
jle
ret
pop
inc
ret
lock
sub
lret
lret
je
or
les
xchg
fwait
push
add
fsubs
rorl
or
lods
mov
xchg
shl
add
push
ljmp
ljmp
pop
sbb
stc
bound
pusha
and
mov
mov
aaa
or
jp
and
add
lret
pop
pop
rorb
push
int
inc
scas
loope
fisubrl
mov
and
popa
push
mov
cmp
dec
jmp
xchg
dec
aad
icebp
inc
or
das
test
lods
fsubrs
mov
sbb
leave
outsl
in
jp
push
push
or
cmpsl
out
cmp
ret
lock
lret
nop
xor
push
pop
mov
js
xor
in
pop
xchg
mov
aaa
adcb
lret
jp
mov
xor
push
fists
add
adc
movsb
mov
push
jmp
and
xchg
shrl
xor
cltd
push
lods
rolb
cmp
push
mov
push
pop
aaa
lret
sub
lret
dec
cmpsb
nop
sbb
in
and
push
test
lea
pop
jg
pop
push
cld
mov
adc
pop
outsb
pop
iret
sbb
add
pop
mov
mov
mov
sti
aaa
mov
ret
mov
in
dec
aam
cmp
insl
adc
repz
mov
and
fildll
push
adc
mov
int3
inc
fimuls
push
mov
dec
pop
cmp
nop
cmp
inc
aas
inc
popa
and
fildl
ja
lock
or
je
mov
sub
xor
iret
pop
loopne
jecxz
add
push
cmp
in
filds
push
mov
shlb
imul
mov
out
inc
std
jns
adc
xchg
xor
pusha
outsb
pop
repnz
imul
sub
jmp
mov
lock
xchg
andb
pop
cltd
lcall
fcom
or
insl
xchg
ds
sub
push
xchg
xchg
pop
cmp
adc
xlat
cmp
pop
cmp
inc
pop
clc
push
jns
in
push
fwait
cli
out
cmp
sahf
mov
push
shll
jne
push
aam
cwtl
mov
mov
dec
lcall
mov
daa
push
mov
xchg
dec
cmp
dec
and
test
js
daa
pop
mov
jl
movsb
inc
scas
jnp
sbbb
rcll
inc
jg
cmc
cmp
call
gs
das
loopne
jmp
dec
mov
mov
ret
outsl
popf
sbb
xor
add
cmp
subl
xor
inc
pop
xor
dec
inc
sbb
sbb
mov
xchg
adc
popf
mov
dec
enter
push
cmp
xor
in
sbb
and
aaa
push
cwtl
mov
jne
cmp
cltd
icebp
mov
mov
xchg
mov
jbe
iret
cmp
jp
cmpsb
cmpsb
jp
jl
push
cwtl
pop
lret
loopne
scas
lret
fwait
mov
sbb
movb
xchg
iret
mov
adc
fsubl
push
mov
sub
dec
int
mov
fdivrl
jnp
fcmovnbe
add
loope
outsl
pop
jmp
loope
inc
or
jecxz
xorl
pusha
lret
or
in
mov
inc
mov
ror
adcl
and
movsb
adc
dec
mov
sbb
push
push
lds
iret
je
sbb
lret
pop
test
push
sub
mov
pop
sbb
cmp
xchg
adcl
gs
stos
push
add
lret
ss
repnz
int
cltd
aaa
iret
es
xchg
ds
xchg
jbe
jae
adc
add
les
xchg
sti
lahf
adcb
sbbb
sbbb
dec
test
jg
imull
dec
stos
lods
bound
nop
mov
daa
jle
jmp
aad
mov
stos
icebp
stos
xchg
xchg
es
mov
add
mov
leave
xchg
decb
mov
inc
push
dec
sahf
std
push
enter
inc
xchg
stos
cmc
leave
and
stos
in
repz
push
and
lret
stc
ja
mov
mov
insl
loope
loope
out
hlt
dec
jo
push
aaa
lock
scas
inc
lahf
fisubrl
mov
ljmp
imul
test
lcall
or
pusha
xchg
ret
aad
pop
ret
jnp
pop
mov
pop
push
addr16
imul
add
pop
lds
dec
movsb
adc
jae
mov
out
icebp
push
call
xor
dec
push
or
xor
scas
dec
call
lret
xchg
lcall
jo
sbb
into
push
fcomps
rorb
rep
add
jno
jmp
mov
in
or
out
shrb
inc
and
aas
inc
sub
pusha
dec
push
mov
add
js
jl
pop
mov
push
stc
insl
jmp
repnz
push
cli
xchg
scas
cli
lds
xor
mov
pop
or
fs
test
insb
repz
out
fmull
outsl
popa
aam
and
xor
int3
orb
pushf
out
js
daa
push
mov
call
aas
jae
sbb
add
repnz
dec
mov
xor
cmp
cltd
mov
cmc
push
fcoms
sti
mov
lods
xchg
adc
shrl
push
inc
cmc
ficoms
rcll
pop
outsb
jmp
mov
ljmp
jmp
sbb
outsl
lret
test
mov
test
mov
je
inc
pop
sbbb
lods
pop
cli
cmpsb
xor
dec
jmp
mov
sahf
data16
xchg
inc
pop
jmp
xor
add
shlb
jo
popf
es
pop
pop
cmpsb
jmp
fdivrl
mov
int
and
out
xor
push
bound
pop
xor
das
xor
ljmp
sbb
xor
ljmp
sbb
add
add
scas
xlat
inc
sbb
push
push
mov
push
jle
mov
pop
xchg
flds
mov
sub
xlat
cltd
inc
mov
roll
lods
pop
dec
xchg
iret
cmp
jb
lret
sub
xchg
push
loopne
and
stos
jl
xorl
rcll
and
jns
loop
mov
xor
mov
xchg
adc
ficoml
daa
iret
movsb
dec
or
xchg
ss
add
sarl
shlb
popa
shl
xor
pop
mov
mov
aad
mov
je
sub
jg
imul
push
rol
jle
dec
sub
int3
sbb
lods
stc
jo
add
mov
sbb
add
mov
cmp
mov
push
fisttpll
hlt
mov
dec
add
mov
ret
in
int
dec
xchg
inc
call
ds
test
xchg
mov
je
ficoms
in
mov
cmc
les
aas
push
sub
lcallw
push
fcmovnu
icebp
outsl
je
cmp
push
mov
pop
jg
inc
pushl
push
ret
and
xchg
xchg
mov
mov
out
mov
xlat
sub
ret
sbbb
out
test
icebp
imul
inc
subb
pop
rorb
bound
loopne
fistps
out
ficoml
push
and
push
lea
adc
in
cld
push
xor
idiv
into
add
xchg
pop
es
jno
sub
jnp
fidivrl
sub
fwait
sbb
imul
push
sbb
andb
scas
push
inc
inc
sbb
adc
ret
cmc
in
insl
sbb
inc
sarl
mov
mov
or
cmp
or
scas
pushf
loop
mov
in
mov
lret
adc
cmp
xor
in
daa
inc
push
xor
pop
movsl
decl
jp
imul
lahf
inc
sub
icebp
xchg
jb
sbb
ja
add
push
lcall
push
push
pop
mov
dec
sti
jb
lea
int3
testl
mov
inc
les
mov
inc
pop
pop
adc
sbb
int
popa
cld
mov
xchg
pop
adc
leave
push
orl
push
push
shll
imul
es
push
mov
push
inc
mov
lods
loop
decl
adc
mov
mov
out
add
adc
xchg
xchg
std
lea
push
or
sub
mov
loop
pop
int
mov
jbe
rcl
jp
and
lret
pop
aam
add
shlb
mov
leave
enter
out
mov
add
stos
inc
hlt
aaa
xorl
addb
sahf
jge
dec
je
outsb
aas
loope
pop
sub
jne
sbb
and
and
rcrl
cmpl
or
aaa
mov
cwtl
jp
mov
inc
push
pop
and
xchg
aad
stos
in
lds
cwtl
pop
scas
jmp
aam
mov
jbe,pt
or
dec
sub
sbb
js
addr16
cmp
mov
and
add
rorb
ja
popf
push
mov
pop
add
pop
scas
add
inc
mov
xchg
out
test
arpl
dec
lcall
clc
mov
mov
inc
pop
divb
testb
xchg
push
jp
js
and
pop
int3
xor
xor
pushf
fsubrl
out
fst
mov
imul
roll
mov
mov
enter
js
add
mov
xchg
sbb
push
inc
leave
movb
fcmovnb
clc
dec
or
das
mov
incb
nop
pop
cmp
ret
in
psubw
add
jl
push
cmp
pop
loope
mov
aas
leave
sub
push
mov
sub
xor
ja,pn
add
repnz
add
cmp
cltd
mov
xor
cmp
sahf
js
push
jge
cli
roll
sub
inc
jo
and
nop
test
fisttpll
mov
repnz
mov
daa
cli
insb
pop
xchg
push
inc
das
push
outsb
aam
jbe
add
and
iret
lret
push
pop
clc
jmp
mov
roll
mov
fmuls
xor
scas
cld
cs
sbb
ret
cmp
popl
pop
jo
enter
add
ss
call
std
and
cltd
jb
pop
into
push
outsb
lret
xchg
jbe
adc
jge
sub
lock
bnd
popa
jo
addb
shlb
adc
push
stc
cmp
pop
pop
andb
pop
cmp
mov
push
jnp
xchg
and
rcl
push
adc
ds
fwait
and
push
daa
sub
jnp
addr16
shlb
inc
lods
adc
xor
and
aad
test
xor
loop
or
frstor
push
es
enter
jno
fs
and
cltd
adc
sub
and
ja
push
test
cmp
or
xor
mov
mov
inc
sub
or
mov
sbb
fildll
add
andl
adc
xchg
xor
arpl
into
sti
pop
and
shrl
push
or
xor
idivl
pop
subl
dec
imul
or
push
mov
loopne
dec
mov
inc
adc
mov
les
cli
das
jne
xor
arpl
lds
xor
repnz
xchg
rorl
xchg
lret
or
nop
and
mov
aaa
enter
mov
inc
jg
fldpi
adc
cmc
jb
icebp
je
push
sub
in
loope
sbb
add
outsb
movsl
ja
push
sbb
xlat
es
mov
and
inc
out
loop
sahf
push
in
lcall
lock
lods
jge
add
aas
sub
lret
fldcw
lods
cmp
mov
in
push
pop
push
cli
mov
add
fimull
lahf
psrlq
adc
push
jbe
ds
loop
xor
dec
adc
adc
xlat
insb
mov
dec
ljmp
iret
mov
mov
push
xchg
adc
popa
dec
insl
scas
pop
dec
das
xchg
push
xchg
push
xchg
sub
add
mov
mov
outsl
inc
and
pop
cs
jae
icebp
mov
dec
xor
aad
mov
pop
sbb
cmp
push
dec
fisubs
jp
leave
rclb
jnp
in
mov
pop
fdivrs
gs
adc
xor
push
fcomps
test
mov
fmuls
adc
mov
scas
out
ja
mov
jb
cli
mov
jle
outsl
out
daa
dec
fwait
inc
cwtl
mov
push
push
js
pop
xchg
xor
xchg
inc
out
fdivl
test
and
ss
pop
in
stos
div
adc
inc
mov
inc
cs
aas
dec
mov
mov
je
dec
and
adc
leave
es
mov
jg
jno
dec
int3
xor
push
pop
and
call
je
push
xor
enter
inc
cmp
loope
jo
push
outsb
xor
in
xchg
ffreep
repnz
pop
outsl
ja
xchg
xor
je
lods
enter
or
icebp
loopne
and
dec
push
rorb
mov
xor
xor
adc
test
aaa
or
ret
in
lods
test
cmpsl
inc
sbb
push
push
add
push
rclb
mov
mov
ss
cld
shrb
test
cmpsl
mov
mov
or
hlt
inc
xchg
jecxz
cwtl
add
les
sbb
out
scas
xchg
mov
cld
icebp
sub
call
xchg
mov
push
lods
xchg
cmpsb
dec
add
mov
sub
fldt
pop
pop
addr16
push
mov
jae
push
arpl
sbb
mov
arpl
cmp
dec
iret
sub
or
sbb
dec
jg
add
dec
push
dec
cmpsb
inc
cli
xchg
or
rcl
jnp
adc
or
lds
pop
adc
sbb
popf
mov
pop
cmp
popa
fmulp
pushf
test
jnp
outsb
les
mov
aaa
dec
fidivrl
xor
fs
sbb
mov
pusha
mov
je
test
mov
pop
xor
xchg
out
jmp
push
test
fsubr
sub
jp
out
mov
or
fimull
in
subl
add
pop
push
cmc
sub
push
ffreep
fsubs
repnz
enter
aas
or
jo
sti
inc
loop
cs
jecxz
xchg
mov
push
mov
fwait
sbb
lahf
pusha
movsl
test
adc
mov
scas
mov
sub
sbb
call
mov
cmp
xor
xor
push
mov
or
faddp
jns
and
pop
dec
push
fwait
sub
and
sbb
inc
repz
insb
leave
pop
mov
lds
and
sbb
jp
jp
pop
popa
ret
repz
std
dec
sub
mov
movsl
adc
dec
iret
mov
or
xchg
out
dec
jnp
pop
notl
mov
test
cwtl
hlt
iret
out
mov
fwait
imul
dec
sbb
incb
lock
orl
cmpsl
cmpsl
sbb
push
push
xchg
xor
loope
jecxz
push
jg
mov
dec
lahf
add
mov
dec
add
jno
out
dec
and
loop
js
sti
movsl
dec
lds
cmp
and
out
mov
fcomip
sub
jns
pusha
imul
popf
test
cmp
loope
sub
sub
mov
and
xchg
outsb
xlat
into
push
or
aad
sub
adc
fisttpl
lcall
mov
add
or
mov
push
adc
mov
adc
adc
dec
jno
in
dec
jno
and
xchg
or
push
mov
sbb
or
mov
cwtl
subb
adc
pop
sahf
mov
and
push
mov
test
mov
repnz
xchg
push
mov
mov
xchg
aad
fdivs
leave
xor
sub
mov
stos
cli
pushf
fdiv
fdivrp
adc
inc
push
push
ja
mov
fldl
sub
imul
fwait
pusha
ljmp
dec
cli
imul
mov
mov
shrb
divb
xchg
jp
xchg
xchg
xor
sbb
rcll
stos
out
fisubs
pop
aas
xor
push
xor
cmpsb
mov
add
mov
cmpsb
push
aas
js
pop
add
cmp
add
xor
mov
pop
adc
ds
testl
adc
xchg
loope
cmc
pop
cmp
cmp
sub
clc
movsl
inc
cwtl
inc
pop
movsl
mov
stos
loopne
leave
movsl
dec
mov
mov
sbb
dec
das
gs
adcl
mov
cmp
mov
cmp
idivb
jmp
scas
js
xchg
or
add
jp
outsb
call
push
orl
or
fwait
mov
cmp
popf
xor
ljmp
in
jns
jp
dec
adc
out
pop
int
pop
shrd
hlt
mov
or
mov
jmp
out
cld
mov
and
rcrl
lret
int
cmc
mov
insb
cmpsb
loope
cltd
mov
jecxz
ret
in
cmc
rolb
xchg
fs
jbe
cmp
push
mov
enter
pop
xor
rclb
call
adc
test
xor
pop
test
cltd
and
flds
push
cmpsb
lock
xor
jmp
jle
adc
push
js
xor
sbb
xor
stos
cmp
ret
fisttps
popa
pop
inc
jmp
pushf
into
jnp,pn
in
jl
shr
sub
dec
sahf
mov
leave
repz
jge
dec
fistl
addr16
or
lret
cmp
popa
add
je
test
cmp
pop
cwtl
mov
loop
call
in
jne
push
in
or
mov
sbb
leave
cmc
fimull
into
sahf
mov
mov
idiv
push
pop
hlt
push
fists
je
xchg
addl
or
pop
mov
popl
push
mul
andl
dec
pop
test
subl
movsb
es
cmp
iret
jno
push
adc
out
ja
mov
and
mov
fs
or
push
ljmp
add
rcl
lahf
adc
xchg
pop
shrl
mov
xor
push
sub
jge
sbb
iret
rcll
jne
movsl
sbb
pop
cmp
scas
mov
mov
loop
ljmp
addr16
dec
mov
inc
mov
mov
pop
mov
jbe
sbb
adc
test
dec
or
mov
loope
dec
js
insb
shrl
scas
pop
addl
pop
stc
dec
mov
stos
push
dec
nop
pop
mov
sbb
or
xlat
daa
xchg
jae
jmp
imul
popa
sub
push
popa
or
imul
dec
sar
xor
pop
imul
stos
inc
test
push
cmpsl
sbb
fstpt
jo
ficoml
sub
cli
outsb
test
notb
mov
ljmp
push
push
negb
mov
popa
popa
jecxz
out
in
sahf
adc
mov
and
test
dec
pop
sarb
in
test
cwtl
jnp
sub
lahf
icebp
ficoml
xor
inc
mov
lcall
call
sub
push
mov
push
mov
push
add
ret
inc
out
rol
push
sti
das
inc
roll
inc
adc
push
jmp
mov
xor
loopne
das
pop
inc
dec
xchg
fsubs
sub
mov
in
nop
out
sbb
dec
mov
cmp
add
jp
test
je
mov
push
mov
push
push
xor
and
mov
ds
push
jae
cltd
shr
adc
cmc
insl
imul
mov
push
push
pushf
xlat
jmp
dec
dec
stos
insb
jns
xor
pop
cmp
jge
enter
sub
jmp
push
leave
aam
daa
xlat
jae
dec
xchg
out
xchg
xor
mov
loope
dec
adc
and
inc
les
jp
jnp
cmp
mov
fimull
pop
lds
xchg
add
adc
inc
popf
imul
push
cmp
jne
loope
adc
jno
xor
xchg
sub
push
mov
mov
xchg
lahf
ret
dec
out
inc
cmp
insb
test
lret
cli
or
push
call
sub
popf
push
lcall
and
sub
ss
mov
xor
xchg
and
rcrb
es
mov
clc
mov
test
aad
adc
pop
ret
sbb
xor
or
lcall
stos
push
cld
fnsave
cld
sbb
push
or
fstpl
xchg
in
shl
sbb
lcall
mov
ds
iret
shrb
push
mov
cmpsb
cmpsl
sbb
pop
mov
pop
add
inc
sbb
dec
pop
out
sahf
mov
enter
push
fisttpll
sub
jle
rcll
fs
mov
mov
mov
inc
jo
adc
mov
push
je
and
fstpl
or
push
add
fcmove
xor
xlat
add
adc
int
pusha
dec
sub
sub
int
int3
sub
xor
leave
jb
addb
clc
adc
adc
sbb
mov
aad
add
mov
or
aaa
pop
jg
gs
xor
cmp
xor
out
cmpsb
sub
mov
xchg
andb
sub
scas
pop
or
lret
bound
lock
repz
xchg
fisttpll
leave
dec
xor
mov
adc
push
or
mov
or
or
ss
push
sbb
ret
cmpsl
insb
mov
jmp
jnp
cmc
pop
rcrl
mov
pop
adc
in
scas
cs
sub
push
ret
test
repnz
cwtl
adcl
lcall
inc
mov
ficompl
les
clc
cltd
jbe
jge
in
mov
sbb
xchg
iret
cmp
loopne
shlb
in
stc
push
add
cmp
inc
movsl
idivl
cmp
add
jp
xchg
mov
pop
inc
xchg
repz
ficomps
bndstx
mov
inc
fildl
aam
loopne
sub
dec
shll
addr16
push
dec
push
adc
mov
pop
mov
adc
pusha
js
add
mov
mov
in
aaa
mov
pop
jecxz
fdivl
or
sub
pop
mov
fbld
mov
rolb
lret
dec
push
add
loope
call
out
aaa
fs
mov
mov
add
xor
sti
sub
dec
addr16
out
lock
sbb
andl
aas
mov
xchg
and
popa
pusha
inc
inc
outsl
adc
leave
and
mov
cmpsl
fwait
subl
outsb
mov
test
addl
cmp
mov
inc
fimuls
fdivrl
fwait
push
sbb
push
pop
lea
jmp
out
jle
pop
imul
leave
sub
xchg
call
in
push
xchg
js
movups
decb
insb
imul
cld
jnp
gs
scas
lahf
sbb
hlt
sbbb
and
jnp
fldt
testl
stos
gs
fisubrl
test
push
adc
imul
mov
inc
xor
cs
mov
push
dec
jnp
cmp
enter
xorl
jecxz
scas
mov
pop
mov
test
repnz
leave
jmp
push
andl
int
ss
sbb
pop
pop
rcrb
sbb
add
mov
mov
lea
or
das
pushl
cmp
je
out
cmp
int
je
xchg
mov
movl
scas
dec
out
mov
jecxz
dec
jg
out
and
xor
lods
cmp
add
cmpsl
mov
pushl
jle
mov
aam
add
mov
sbb
insl
cmpl
mov
add
mov
fidivl
lcall
mov
and
jge
arpl
popa
loope
data16
cmpsl
hlt
ds
aad
pop
das
rcrb
push
sub
shl
mov
fcomps
stos
pop
xor
mov
jmp
pop
mov
out
aas
push
sub
mov
ljmp
push
hlt
xchg
mov
jns
out
jo
fwait
cmp
cld
clc
sub
imull
orb
pop
jle
mov
jae
fldenv
std
dec
sarl
push
loopne
and
add
mov
push
cmc
pop
sbb
push
inc
mov
jns
jle
popa
mov
jl
cmp
or
xchg
push
mov
enter
xchg
push
fldenv
xchg
fnsave
xchg
into
fstp
outsb
pushl
xchg
jecxz
or
sbb
jle
xor
sbb
int3
out
push
xchg
mov
push
leave
loop
and
into
mov
pop
inc
imul
and
xchg
repz
out
int3
and
loopne
cmpsb
arpl
xchg
pop
shl
pop
push
jo
jle
rcll
pop
push
mov
popf
pop
mov
psrld
icebp
mov
aad
xchg
inc
xchg
mov
xchg
insl
sbb
adc
shll
or
repnz
sub
cmp
roll
sub
dec
mov
outsl
popf
fsubrl
mov
in
inc
lret
in
test
xchg
test
or
shr
scas
mov
xor
test
iret
xor
mov
mov
bound
roll
js
mov
jae
out
fcoms
fcomps
xchg
inc
or
fstpt
adc
mov
push
das
xor
push
stos
jmp
les
push
das
sbbb
mov
jle
repz
mov
rorb
sub
cld
lret
movsl
xchg
dec
dec
or
sub
nop
cmp
dec
or
test
outsb
repz
xor
iret
cli
push
xor
subl
push
in
fsubrs
cmp
and
add
or
cs
jle
stos
mov
adc
lods
sbb
add
mov
pop
jl
popa
mov
stos
addr16
pop
sub
inc
jne
sbb
mov
int
popl
ficomps
pop
ret
adc
pop
cmpsb
psrld
lds
pop
clc
dec
xchg
les
outsb
inc
inc
icebp
ja
xchg
sbb
pop
push
adc
jmp
shl
in
push
xor
and
jbe
lods
je
push
push
fsub
add
dec
and
jmp
adc
cmp
jnp
ja
jno
xor
cs
arpl
cmp
popa
out
shrl
aad
jns
cmp
dec
aas
xor
push
out
jbe
test
gs
mov
icebp
cli
jbe
adc
lods
pop
fs
idivl
les
stos
sub
aad
jnp
cli
mov
mov
and
dec
cld
sbb
lret
rcl
and
fwait
lret
or
mov
call
jle
sub
jae
movsb
ds
push
mov
dec
cs
mov
fstps
jae
xchg
sbb
sbb
adc
adc
cmp
mov
pop
pop
rclb
scas
cmpsb
mov
rclb
pushf
leave
outsb
or
cmpsl
mov
or
aad
stc
add
jae
gs
jo
out
rcll
adc
decb
sub
sbb
mov
enter
out
lret
xchg
lahf
ss
addr16
jno
insb
out
mov
and
xchg
jg
jne
ror
scas
adc
lods
les
and
push
in
or
aas
andb
pop
mov
lds
adc
mov
aas
ret
mov
and
sbb
pop
in
inc
pop
popa
mov
test
pusha
push
test
mov
adc
repnz
push
pop
push
push
xlat
into
inc
mov
gs
or
xor
or
sbb
nop
push
aas
out
adc
fimuls
mov
mov
ret
sbb
shrb
or
cmc
pop
dec
sbbl
jns
cwtl
daa
mov
sub
xlat
ja
mov
inc
test
imull
daa
jae
jno
mov
or
mov
imul
lds
or
mov
lds
out
jnp
or
and
jle
xchg
test
or
js
jmp
pop
sti
les
xchg
je
sarb
push
imul
dec
ds
fwait
sub
jmp
test
mov
cmp
lea
clc
jmp
xor
xor
add
loop
int3
dec
sbb
dec
sub
dec
repnz
jge
sbb
loop
adc
aas
stos
jmp
insb
icebp
fistps
mov
loop
jns
cmpl
repz
movsb
xor
jecxz
xchg
cmp
mov
add
mov
cmp
arpl
fsubp
mov
adc
test
push
mov
ja
loopne
aas
lret
sbbl
and
pop
js
sbb
cmp
mov
or
test
add
xor
push
imul
jecxz
mov
inc
cmp
adc
cwtl
dec
dec
push
lds
sub
sbb
mov
dec
test
cltd
cmpsl
and
push
or
fmul
loop
iret
sahf
ret
jno
jns
jb
mov
cmp
lea
fidivrs
inc
add
rcll
in
sbb
inc
aam
or
add
push
cs
or
mov
xchg
jp
xor
cmp
pop
std
adc
xchg
and
ret
mov
pop
xor
mov
push
pop
imul
push
lret
sbb
mov
add
mov
into
pushw
out
dec
mov
or
cmpsb
sarl
or
ret
rolb
and
jno
ret
popa
xchg
sbb
and
xchg
cld
xor
mulb
in
xchg
inc
movsl
imul
sub
lcall
out
shlb
enter
pop
stc
xchg
pop
ret
out
mov
test
inc
daa
add
mov
out
into
fiadds
std
mov
xchg
cmp
iret
mov
xor
sti
fucomp
fisubrl
ret
push
int3
fists
inc
mov
adc
push
ret
inc
xchg
xor
mov
dec
xlat
and
icebp
fistl
hlt
aaa
mov
jb
shlb
jb
pop
pop
lds
daa
dec
sahf
add
rol
pusha
je
mov
int
inc
incl
idivb
mov
mov
out
mov
divb
sub
loope
push
test
mov
aad
dec
xor
icebp
loopne
lahf
lock
inc
ljmp
push
dec
cmc
add
das
sub
in
test
pusha
adc
call
out
add
xchg
sbb
in
push
ljmp
sub
and
call
lea
aaa
in
cmc
maskmovq
divl
xor
cmp
lcall
jle
push
sub
lods
dec
int3
sub
mov
dec
jne
dec
or
inc
out
and
leave
pusha
mov
loop
dec
jae
mov
cli
jl
adc
stc
inc
into
iret
fimuls
aaa
pop
pop
iret
test
sbbl
jbe
push
push
mov
jns
or
mov
fmulp
in
subl
xchg
or
jae
gs
sahf
ds
lret
hlt
push
fisubrl
loope
inc
aam
xchg
cld
es
pop
in
sbb
sbb
mov
jmp
in
and
mov
push
jnp
mov
pop
popa
clc
aas
and
dec
cs
sub
movsb
inc
mov
mov
add
bound
push
pop
xor
mov
xor
std
mov
pmulhuw
cmp
das
dec
pop
out
in
les
adc
cmp
xchg
sub
jl
sbb
push
imul
or
cmp
lods
lea
jg
stos
clc
int
add
jo
sbb
pop
jmp
dec
aam
cmpsb
xor
mov
pusha
adc
inc
call
pop
jb
lods
cmpsl
gs
xchg
add
cld
ficoms
mov
xchg
add
andb
in
ret
bound
push
mov
test
and
hlt
inc
jbe
and
shlb
outsb
je
mov
adc
je
xchg
add
repnz
fsubr
jnp
cs
ljmp
jbe
jg
jmp
jmp
add
mov
testl
mov
inc
pop
inc
imul
lds
adc
testl
iret
imul
jmp
mov
or
into
andb
xor
inc
dec
or
adc
sub
imul
or
incb
fabs
in
or
loope
dec
dec
addr16
sub
shrb
outsb
or
popf
sub
ljmp
stos
into
mov
cld
mov
lods
lret
loopne
dec
jns
popa
jb
mov
lea
pop
test
pop
pop
xchg
sub
cs
test
push
inc
xor
roll
push
jbe
lods
nop
data16
popa
fmul
jns
mov
jle
dec
loop
out
push
mov
inc
pop
test
lds
pop
repz
dec
rcrl
jno
mov
es
mov
dec
test
push
adc
sbb
xor
inc
mov
addb
mov
jne
cmpl
xor
movsb
test
or
ljmp
fidivl
arpl
or
push
cmp
shlb
mov
cmpsb
stos
packsswb
fsubrs
lea
adc
mov
dec
xor
dec
xchg
adc
mov
push
rcr
sbbb
ss
repz
cwtl
addr16
pushf
push
adc
xchg
sbb
cmp
ficomps
sbb
shl
jp
sub
pusha
and
fsubrs
jp
inc
sti
popf
and
xor
sub
jmp
add
and
rcll
mov
mov
cmp
add
push
mov
sti
xlat
mov
lods
push
dec
test
scas
loopne
fdivrs
or
iret
adc
jae
in
nop
and
push
fs
xlat
push
hlt
mov
lret
std
pop
or
cli
cmpsl
pop
sbbb
adc
mov
xchg
mov
mov
fnsave
push
add
jae
or
jmp
sbb
out
lahf
push
mov
sub
cmp
gs
add
jg
inc
push
sub
stos
fldcw
pop
mov
in
insb
xchg
mov
icebp
dec
lea
mov
or
addps
jle
sub
pop
sar
cmc
push
mov
addr16
sub
or
cli
and
xchg
jnp
fwait
jnp
cmp
xchg
popf
adc
test
shl
lea
jge
add
mov
xor
pop
jb
fcoml
adc
sbb
dec
cs
in
cld
mov
lret
ret
vsqrtss
jne
sub
and
clc
fmulp
mov
xchg
jge
imul
mov
fdivrs
cmp
bound
out
xorl
push
xchg
cmpsl
fmull
xor
sbb
into
aam
lds
dec
cmpb
je
insb
and
bound
icebp
lock
dec
fisubs
mov
mov
out
pop
inc
dec
popf
test
fmul
cld
repnz
inc
jge
test
pushf
loopne
sahf
jae
pusha
mull
xchg
jle
xor
sub
jae
daa
mov
ss
pop
cmpsb
xchg
ret
orl
repz
es
mov
add
mov
ret
fists
fs
mov
mov
push
pop
call
cmp
dec
fsubl
dec
pusha
cmp
pop
sub
or
mov
sbb
sbb
mov
mov
inc
test
sub
cmp
mov
inc
fbld
xlat
mov
test
sbb
clc
cmp
add
loop
test
push
xchg
imul
and
push
sub
fst
jae
xchg
pop
jmp
repnz
aad
test
loopne
scas
and
sahf
sub
or
push
rol
cmpl
cli
xchg
sub
test
lahf
daa
vmovntps
sbb
arpl
cwtl
pop
mov
aam
out
into
or
jge
adc
add
jmp
jnp
imul
std
aaa
hlt
pop
idivb
les
mov
iret
pop
pop
dec
mov
dec
roll
mov
xchg
sub
inc
ror
mov
cmp
dec
mov
mov
popa
add
std
lock
jmp
scas
lea
and
push
and
mov
sub
adc
pop
dec
xchg
pop
fcmovbe
mov
mov
aam
sub
sbb
dec
stos
stos
stos
and
je
add
lods
or
aad
dec
inc
inc
scas
lods
imul
mov
das
mov
int3
jmp
add
mov
mov
cmp
add
adc
dec
fimull
popa
mov
scas
mull
outsl
push
dec
push
test
dec
call
enter
and
and
pop
xchg
jne,pn
cli
mov
mov
adc
sti
adc
sbb
and
ret
inc
lods
or
stc
and
les
xchg
fdivs
dec
shl
scas
dec
sahf
insl
xor
xor
jp
jno
bound
or
xor
add
add
inc
push
fmuls
dec
dec
imul
mov
cld
aad
jne
lret
sbb
push
jbe
lret
int3
cld
cmp
ret
inc
jnp
dec
or
mov
sahf
pusha
mov
xchg
out
sti
jne
nop
movsb
outsb
cmp
scas
adc
rcr
push
stc
jns
mov
inc
jg
ljmp
jg
dec
ja
jb
push
jne
inc
fisubs
imul
sub
jp
and
in
mov
push
enter
jmp
jb
inc
repz
mov
jle
arpl
rcr
or
adc
sub
mov
cltd
lret
sahf
arpl
or
cmc
inc
mov
mov
out
int3
clc
vandps
pop
scas
cmp
decb
xor
pop
jae
push
xchg
lods
lock
jmp
and
std
push
mov
fistpl
lds
repz
cmp
push
je
and
mov
mov
pop
pushf
mov
inc
rcll
xor
cmp
cmp
or
sub
inc
test
pop
loop
mov
pop
xor
loopne
orb
ret
and
push
outsb
push
sub
ds
sub
movsb
fwait
popa
inc
divl
jmp
aad
push
pop
ds
addb
pop
mov
adc
xchg
out
xchg
aas
icebp
insl
jb
popf
addr16
cmp
or
mov
mov
cs
jbe
lret
movsl
je
es
lret
jg
negb
xor
sahf
dec
pcmpgtw
ss
push
rorb
push
std
aaa
lret
cmpsb
xchg
es
jmp
mov
xor
mov
inc
jp
and
xchg
jmp
lcall
cs
mov
test
jle
sbb
cld
fwait
ret
lret
das
test
aas
movsl
into
inc
adc
and
cmp
adc
ficompl
push
ret
int3
pushl
mov
das
fistl
push
jmp
add
cmc
ja
pop
sbbl
leave
push
pushf
jnp
jbe
pop
mov
push
sbb
fs
jle
rcrl
testb
fldcw
adc
ljmp
dec
bound
jmp
add
pop
stos
xchg
in
mov
hlt
insb
mov
adc
push
mov
and
fnstenv
aam
out
ror
outsb
sub
mov
jns
mov
setl
clc
xchg
test
addr16
cwtl
idiv
xchg
cld
shlb
inc
xor
xchg
std
sub
repz
pop
into
sub
cld
addb
sbb
push
lea
loopne
adc
fldcw
jmp
inc
rcrl
pop
test
sbb
das
nop
out
xchg
mov
subb
mov
sti
fwait
push
movsb
nop
loop
push
cmpsb
pop
call
push
or
jnp
add
adc
js
out
mov
fidivs
cwtl
lds
andb
test
xchg
xchg
add
repz
sahf
xor
cmp
scas
lds
and
xor
xchg
inc
xlat
repz
mov
pop
xchg
mov
pop
insl
mov
mov
lock
xchg
inc
jo
dec
aas
sbb
cltd
test
gs
xchg
sub
push
jb
xor
pop
jb
cmp
mov
pusha
adc
jns
mov
arpl
pushf
cmc
jmp
loope
lret
mov
mov
mov
mov
movsl
add
mov
cmp
push
cmp
std
xchg
push
mov
lods
pop
mov
mov
pop
push
cmp
clc
xchg
jns
jecxz
mov
xor
in
cmp
and
xor
clc
mov
js
mov
push
popf
sbb
and
iret
sbb
push
xor
sbb
xor
ljmp
push
push
xchg
dec
movsl
sbb
pop
mov
pop
push
test
cli
push
ds
dec
jae
fists
lahf
clc
jmp
inc
inc
mov
es
add
xchg
jns
push
pop
adc
inc
adc
fcompl
in
ljmp
mov
sbb
orl
ds
mov
in
cmpsl
jecxz
mov
addl
lahf
mov
popf
dec
inc
inc
in
mov
pop
mov
mov
add
pushf
mov
mov
clc
pushf
mov
pop
jge
rcrl
or
add
sub
push
mov
mov
ja
push
test
insb
dec
enter
add
xchg
out
aaa
aad
test
mov
jae
xor
outsb
xchg
dec
push
fs
or
mov
xchg
aaa
ds
movsb
loop
jmp
je,pn
mov
jl
xchg
imul
mov
mov
mov
ret
jbe
les
pop
in
inc
gs
mov
cmc
pop
adc
mov
imul
insb
dec
pop
mov
andl
sbb
and
jae
ror
sub
or
and
sbb
lods
mov
jbe
cmc
xchg
fs
imul
push
repnz
inc
cmp
sbb
aas
jecxz
cmpl
movsb
dec
enter
cmp
mov
mov
sub
mov
scas
push
das
cmpsb
loope
inc
leave
pushf
or
push
and
das
xor
push
sti
outsl
rcrb
and
stos
fidivs
xchg
cmp
inc
andb
jae
leave
cs
push
xchg
push
adc
xchg
mov
jmp
inc
outsb
dec
dec
mov
scas
andl
add
sbb
mov
cwtl
andl
cmc
xor
mov
outsl
shll
mov
outsl
and
iret
pop
xchg
mov
mov
mov
and
movsb
push
and
pop
fs
sbb
stc
adc
adc
ret
pop
cs
sbb
movsl
push
jb
fcomi
cwtl
jg
mov
sbb
insl
pop
int3
or
jne
cmc
push
nop
imul
rorl
mov
cmp
xor
fwait
and
mov
mov
dec
outsl
aaa
dec
pop
aad
jp
push
add
cmpsb
shl
jno
pop
cmpsl
mov
mov
stos
add
sbb
cmp
push
adc
dec
call
fsubs
sbb
jbe
rcrb
lret
jae
movb
sub
adc
push
xchg
lds
xor
imul
ret
inc
adc
out
inc
jne
fildll
jp
pusha
stos
push
nop
xchg
push
or
stos
ds
bound
cmp
sbb
or
insb
fistpl
inc
aaa
mov
jle
pop
cmp
xchg
adc
or
or
loope
inc
mov
es
xchg
pusha
dec
lock
lahf
out
cwtl
insb
je
cmp
loop
test
cmpsl
cmp
ret
out
jnp
adc
sub
pop
cld
mov
shll
push
inc
sbb
leave
push
les
push
xchg
xor
add
mov
imul
and
test
adc
adc
adc
orl
xchg
pop
ficoms
lahf
icebp
pop
mov
hlt
subl
sbb
add
lods
cli
add
cmp
gs
rclb
lret
movl
les
sbb
jne
pop
jecxz
cld
jge
mov
cmp
push
outsl
outsl
pop
cmp
repz
jecxz
cmp
fldenv
fnstsw
push
pop
in
mov
dec
shlb
fs
pop
arpl
dec
jl
in
pop
xor
push
outsl
pop
roll
jg
dec
mov
cli
xor
adc
dec
rclb
test
cmp
xchg
test
jl
dec
cwtl
movsb
fwait
inc
shll
pop
pop
lock
out
cmpsl
or
mov
and
jge
fildll
fdivs
xorl
sub
push
mov
sti
xchg
aas
rol
xchg
xchg
pusha
mov
sbb
dec
jae
fwait
aad
dec
leave
std
cmp
scas
mov
test
adc
jae
arpl
sub
enter
xchg
js
xchg
xor
test
icebp
cmpsl
hlt
jmp
jecxz
add
xchg
jns
inc
lret
test
cmp
xchg
pop
cli
or
roll
in
aas
cmc
xor
sub
outsb
out
bound
leave
inc
fnstcw
inc
fdivr
out
push
sbb
inc
in
cmp
in
aas
jle
leave
add
cmp
jl
jecxz
out
fwait
mov
fadds
lret
lock
xor
daa
into
xchg
aad
das
in
adc
push
inc
fldt
or
clc
xchg
inc
cmpsl
in
mov
aad
dec
lods
inc
pop
jb
int3
lock
push
pusha
or
and
mov
mov
andb
xor
xor
xchg
stos
or
das
inc
mov
xchg
daa
cli
add
fbstp
sbb
or
data16
mov
lods
jo
xor
push
cmp
xchg
sbbl
xlat
adc
pop
dec
and
push
cmp
scas
icebp
mov
add
jp
ja
pop
or
ret
cs
out
sbbl
and
sahf
loop
mov
mov
lcall
fldenv
bound
out
push
xor
sbb
adc
mov
push
in
push
dec
inc
scas
out
adc
cmc
rcll
lods
dec
insl
mov
adc
or
mov
insl
lret
pusha
inc
insl
mov
mov
fidivrs
rorb
testb
push
xorl
andb
bound
mov
xchg
mov
adc
daa
mov
nop
mov
lahf
mov
mov
sbb
mov
rorb
or
dec
push
xchg
mov
dec
insl
mov
jns
adc
push
gs
leave
xchg
mov
jo
dec
pop
inc
mov
and
into
imul
pop
loopne
sbb
inc
pop
jg
loop
hlt
fsubs
jl
ret
xchg
fisubs
adc
jne
push
pop
fnstsw
sbb
inc
sub
rolb
push
xor
cltd
adc
pop
aas
inc
imul
push
sahf
jns
test
push
das
sbb
scas
adc
adc
jle
pop
rorl
add
scas
in
dec
cmovae
and
inc
shll
xchg
fwait
jg
mov
sbb
pop
and
ds
movsb
lods
xchg
mov
fld
cwtl
test
lods
std
push
bound
movb
and
mov
cli
dec
lock
dec
lock
fs
add
es
pop
enter
out
cmp
add
icebp
jecxz,pn
mov
mov
fwait
icebp
jns
xor
xor
loope
push
pop
daa
sarl
add
sub
cs
xchg
int
mov
or
sahf
dec
adc
add
outsl
sbb
inc
inc
imul
dec
xchg
mov
movsb
fisubrs
add
rorl
push
inc
or
and
test
fwait
lea
mov
cmpsb
popf
or
dec
cmc
push
test
fnstsw
dec
add
pop
or
les
or
mov
lods
add
sub
push
jle
dec
jae
jbe
push
icebp
jl
int
sub
jb
aaa
popf
fstps
test
push
mov
jmp
pop
mov
add
mov
loop
in
push
in
test
push
rcrl
in
iret
clc
in
mov
inc
jg
sbb
leave
nop
popf
lea
fmull
in
mov
mov
cld
push
add
sub
inc
lds
in
push
sub
pop
cmp
mov
lahf
mull
and
bound
pop
in
aas
fists
inc
cld
int3
cwtl
mov
addr16
fwait
dec
xchg
xor
push
mov
sub
jne
push
inc
ljmp
pusha
sbb
xlat
sarb
xor
std
xor
cld
repnz
mov
arpl
ljmp
pop
repz
mov
mov
xlat
sbb
lods
adc
or
fsts
or
addr16
fs
outsb
mov
rorb
jae
mov
rcrb
shl
xchg
push
mov
mov
daa
mov
leave
xchg
stos
fldt
sti
dec
ljmp
pop
loopne
and
sub
and
mov
mov
dec
ficoms
mov
push
xchg
mov
jl
lds
xchg
mov
fwait
pop
pop
sbb
gs
push
sub
lret
xchg
mov
js
std
cwtl
jmp
repz
aaa
dec
insl
iret
jae
stc
pop
pop
stos
repz
sub
into
mov
pop
pop
ret
insl
mov
xchg
loope
lods
mov
mov
out
popf
mov
push
pop
mov
fcoml
mov
sbbl
repz
xor
cmp
mov
mov
add
call
movsl
jb
inc
push
fs
add
xor
mov
dec
and
cmp
outsl
out
scas
scas
cmp
test
iret
mov
inc
ja
xor
xchg
fldenv
out
xchg
mov
and
stos
movsl
mov
xchg
cld
rclb
mov
ficomps
fnstcw
add
mov
lds
mov
push
xchg
ret
dec
data16
jnp
int3
stc
scas
sarl
aas
mov
or
and
sbb
lret
xchg
in
das
sbb
xchg
neg
mov
out
xchg
in
cmpsl
out
addr16
pop
xchg
clc
pop
ljmp
dec
cmc
add
inc
rcrb
clc
rclb
stos
add
add
testl
ds
outsl
cli
push
jne
lods
sbb
xchg
es
push
xchg
pop
es
jge
mov
jae
cmc
pushf
jge
cmp
dec
mov
mov
ja
adc
fwait
jecxz
adc
adc
xchg
pop
test
pmaddwd
xchg
ss
imul
xchg
rcll
mov
mov
xor
inc
mov
pop
out
ljmp
subl
push
sbb
dec
mov
jg
nop
cmp
fidivs
mov
ss
xor
xchg
mov
pop
test
xchg
out
pop
adc
push
test
fcmovbe
xchg
pop
or
fdivrl
pop
sub
mov
shll
push
es
popf
push
fxch
idivb
fstpt
data16
sti
add
fiaddl
js
loope
sbb
lods
jb
imul
pushl
sar
mov
scas
xchg
int
push
inc
inc
mov
jg
dec
add
xchg
into
pop
push
push
pop
dec
outsb
mov
xchg
fimull
jecxz
sub
out
xor
scas
or
xor
or
rolb
sbb
in
iret
jo
data16
rcll
adc
push
mov
xchg
cmc
aad
and
cmp
sahf
enter
pop
pop
mov
sbb
pop
xchg
jge
bound
ss
or
popf
in
out
push
xchg
shrl
push
sub
cwtl
jns
insl
ficomps
cmp
ret
lret
or
xor
push
testb
or
inc
test
stos
dec
sti
mov
mov
mov
ficoms
sub
adc
cld
stos
or
repz
fimuls
test
aad
jmp
lcall
cmc
ret
insl
mov
jg
clc
rorl
mov
popa
test
nop
xor
dec
sbb
sub
roll
insb
ss
jno
jo
mov
add
add
dec
mov
mov
push
into
dec
xchg
jae
push
andl
movsb
fimull
cld
sahf
mov
loope
arpl
and
gs
mov
xchg
std
cld
mov
pop
outsl
dec
add
inc
adc
inc
or
jo
xor
gs
int3
shrl
pop
or
cmc
push
adc
dec
mov
mov
cmp
fiadds
stos
xlat
push
test
dec
sti
fwait
xchg
inc
test
lods
out
adc
xchg
adc
fdivrl
adc
xchg
cld
and
cmp
xor
or
xlat
xchg
cs
cmp
ret
pop
call
divb
loope
pop
xor
sbb
dec
sub
popa
jnp
lcall
leave
sub
fisttps
addl
fisubs
xor
cwtl
cld
mov
and
sbb
add
inc
lcall
pop
lock
movsl
pop
push
add
xchg
lcall
lods
adc
testb
aam
popl
mov
cmpl
fildll
push
pusha
cmpsl
cmpsl
int
in
xchg
or
jno
addr16
add
out
aas
jno
pushf
lret
iret
xchg
out
or
lea
clc
adc
ret
in
hlt
insl
test
xchg
cmp
pop
or
and
daa
repz
add
scas
icebp
ljmp
jecxz
std
aas
mov
jmp
popa
push
mov
dec
push
inc
mov
notl
cmp
mov
les
loop
bound
pop
xchg
subl
test
dec
fsubl
in
inc
repz
and
pop
adc
aas
sub
test
imul
push
clc
lahf
inc
or
clc
lcall
push
out
rcl
dec
adc
aam
and
mov
cld
stos
push
inc
pop
mov
push
sbb
scas
popf
test
adc
movsl
leave
leave
inc
das
xchg
shll
ja
inc
adc
add
dec
in
cmp
repz
sbb
dec
push
and
and
dec
push
inc
rclb
mov
cltd
sti
xor
mov
push
gs
pop
or
and
adc
mov
popf
orb
push
test
std
pop
and
int3
shlb
jns
call
stc
popa
out
mul
sub
cmp
mov
add
out
shl
ljmp
lock
mov
dec
inc
cld
mov
jb
nop
push
dec
push
push
repz
mov
data16
sbb
lret
cmc
mov
fbld
fwait
pusha
lods
mov
imul
in
jge
stos
es
loop
mov
les
pop
andl
xchg
loop
test
jae
bnd
jns
jecxz
in
and
adc
aas
or
mov
out
mov
jg
push
and
test
mov
cmpsb
lds
lret
mov
lods
inc
into
in
mov
and
repnz
inc
mov
xchg
xchg
in
sahf
jns
fnstcw
mov
push
lods
out
fbstp
hlt
mov
movsl
sbbl
lds
je
cld
pop
adc
sub
or
mov
insb
push
lahf
sub
bound
mov
pop
pop
push
inc
or
in
pop
push
into
sbb
sub
adc
mov
pop
push
aas
je
lcall
jmp
cmp
cmp
mov
pop
push
sti
hlt
int3
push
cmp
fcoml
dec
addr16
mov
imul
pop
mov
dec
lock
add
inc
mov
xchg
mov
fnstcw
xchg
pop
lcall
loopne
aas
adc
test
inc
shlb
jmp
push
cmp
xor
mov
adc
dec
cltd
mov
inc
lcall
cmp
jnp
jle
les
sub
cld
inc
icebp
aas
insb
fnstsw
dec
cwtl
add
and
and
adc
adc
cmpl
add
stos
jb
sbb
in
dec
fbld
jns
iret
pop
outsb
enter
iret
push
rcrb
sub
out
or
jp
cltd
cmp
bound
or
std
add
mov
jge
int3
call
jmp
jp
lock
sahf
cltd
rclb
jecxz
mov
cmp
fsubs
xlat
lock
cltd
pop
jmp
adc
pop
dec
fsubs
daa
sarb
pop
mov
test
divb
dec
mov
outsb
clc
negb
dec
xlat
loope
jge
push
mov
dec
pop
sbb
out
sbbl
stos
dec
pop
mov
push
sub
lds
mov
hlt
jp
or
sub
or
push
add
jo
popa
dec
in
add
cmp
in
daa
inc
and
bound
adc
das
cmpsl
lock
loopne
gs
sahf
movsl
out
cmp
js
sbb
mov
mov
jp
push
dec
rorb
out
push
fs
pop
mov
dec
shll
jmp
sbb
cvtps2pd
loope
into
inc
std
mov
popa
fsub
pop
popf
imul
fbstp
jecxz
movsb
jnp
sbb
inc
jp
mov
xlat
out
adc
addr16
cmc
xor
packsswb
int3
push
pop
sub
test
inc
pop
and
and
sar
xchg
lcall
or
dec
aas
mov
dec
pop
fldl
dec
sub
jno
xchg
or
negl
in
mov
scas
lods
xchg
mov
insl
or
xor
push
or
out
test
jle
roll
jge
jno
push
repnz
add
pusha
pop
push
lret
mov
mov
sahf
ret
pop
mov
outsb
mov
cltd
data16
push
rcll
push
mov
aas
test
repnz
pop
sti
outsl
jg
inc
jb
ljmp
fnstsw
lahf
shlb
imul
push
pop
xor
aas
fisubrs
xchg
add
out
frstor
pop
cmp
sbb
mov
adc
data16
cmp
sub
dec
fs
les
jns
sub
jns
push
ret
faddp
xor
sub
add
cmpsl
jns
imul
lock
test
add
add
dec
mov
or
or
rclb
bound
xchg
jb
leave
add
dec
xchg
iret
sub
insl
adc
rclb
cmpsl
ret
dec
int3
mov
jmp
mov
gs
shrb
inc
cmp
jb
fdiv
inc
lea
mov
xchg
push
xorw
shr
xchg
sub
mov
movl
dec
shll
ds
jge
mov
cmp
pop
ret
cmp
clc
shl
adc
mov
inc
pusha
cmp
cmpsb
aas
cmp
jbe
or
into
sbb
adc
cltd
fs
in
pushf
push
insl
pop
push
push
adc
push
les
lds
add
sub
and
sbb
mov
mov
pop
shrl
mov
mov
xchg
pop
insl
addb
adc
pop
jb
cmp
dec
enter
mov
insl
inc
push
pushf
cmp
leave
xor
xor
dec
jl
cmpsl
xorl
sbb
mov
dec
or
test
lret
adc
dec
daa
xor
std
mov
loop
pop
push
or
pop
popa
xchg
lcall
jno
jnp
jns
add
cmp
mov
mov
pop
dec
and
xchg
dec
popa
gs
add
mov
push
scas
xchg
test
loop
fwait
or
testl
push
cmp
shrb
shll
repnz
add
sbb
shlb
imul
aam
call
movsb
or
sub
mov
mov
push
fsub
mov
push
inc
test
roll
in
sti
shlb
pop
mov
push
std
push
pop
repnz
and
loope
dec
jno
sbb
pop
leave
sbb
insl
fisubrs
test
adc
push
sahf
xorl
inc
in
sub
pop
pushl
pusha
fs
repnz
jg
and
jnp
movsb
jmp
cmpsb
outsl
xor
leave
test
pop
ja
pusha
out
sbb
or
xchg
mov
out
lea
daa
mov
add
inc
add
mov
sahf
cmp
sub
inc
ds
fisttpl
mov
stos
jl
mov
movsl
jge
lods
sti
push
lahf
xchg
pop
cwtl
stc
js
adc
loopne
addr16
pop
mov
adc
jecxz
in
mov
dec
add
sbb
cmp
inc
xor
add
jns
cmpsl
pop
pusha
xchg
das
xor
inc
push
jae
jle
insb
sub
jmp
subl
dec
nop
inc
xlat
flds
dec
icebp
cmp
rorl
jl
inc
jae
sbb
cmp
and
mov
cld
in
nop
lock
repnz
mov
mov
cld
int
mov
sbb
adc
jge
popf
inc
aam
sti
xchg
xlat
repnz
clc
xor
je
sbb
lock
stc
and
std
jb
sbb
mov
xor
hlt
mov
push
rolb
cwtl
inc
cltd
or
gs
or
addr16
lods
dec
dec
mov
in
sahf
sbb
fldt
xor
cmpsl
and
push
inc
mov
shrl
pushf
test
lods
mov
cmp
add
jle
loop
test
pop
and
scas
in
or
sub
sarb
dec
xchg
fbld
mov
cmc
mov
ja
pop
out
lret
adc
ja
push
jbe
fst
int3
jno
or
xchg
cmp
movsl
lds
test
test
imul
pusha
xchg
fnstsw
xor
mov
movsl
mov
cmpsb
popa
repnz
aas
cmp
push
popf
jno
add
lods
pcmpgtw
iret
pusha
cmp
add
jae
divb
add
cli
insl
jl
aas
mov
cmp
xor
fs
aam
cmp
aam
stos
mov
sbb
add
inc
add
movsl
rcl
push
nop
pop
je
push
aaa
int3
stos
mov
pop
xlat
mov
imull
push
mov
fmuls
sub
or
mov
sbb
cs
push
sbb
movsb
lock
mov
clc
imul
mov
push
add
cmp
jae
aam
femms
lret
fidivs
dec
lahf
arpl
fldl
hlt
sbb
mov
inc
test
inc
or
inc
adc
jnp
jnp
fsubrp
notl
insb
lret
ja
loopne
sub
xor
jecxz
and
rorl
adc
mov
test
jae
outsb
cmp
in
outsl
imul
sub
jnp
sub
outsb
out
inc
arpl
inc
aaa
mov
push
or
loope
xrelease
mov
pop
daa
pop
pop
push
test
sub
fdivs
xchg
stos
jne
or
dec
jo
cmp
add
push
jb
sbb
mov
shlb
xchg
lds
add
sbb
repnz
and
mov
jbe
pop
and
xchg
repnz
mov
ds
sahf
and
mov
iret
and
ret
fbstp
clc
out
jmp
pop
pusha
cmpsb
faddp
push
daa
out
dec
aas
cld
nop
cmp
pop
add
adc
mov
lods
insl
xchg
mov
stos
in
leave
repnz
mov
mov
adc
mov
sub
push
mov
jne
or
push
sub
cmp
ja
add
add
shlb
movsl
les
fidivs
and
fldt
xchg
dec
sub
sbb
jno
xor
fcmovnb
pop
cmpsb
jge
mov
loop
nop
fists
test
movsb
cmp
inc
push
shll
stos
mov
jmp
orb
jns
inc
jp
cmp
pop
test
mov
jle
push
ja
aaa
pop
xchg
fmuls
int
pop
das
add
subb
lcall
shlb
call
xchg
and
push
movsl
mov
push
inc
ficoml
aad
sub
mov
cli
dec
pop
ret
fistps
jnp
xor
sbb
cwtl
out
xor
popa
movhps
ror
or
gs
jmp
addr16
mov
popa
cmp
fidivrl
push
nop
xor
sbb
sbb
insb
mov
loopne,pt
lret
in
icebp
repnz
push
xchg
jmp
loope
int
mov
ds
mov
loop
daa
cmc
xor
and
stos
add
jp
add
cli
or
adc
stos
pop
sub
ja
fisttps
mov
or
mov
xor
out
lahf
out
movsb
stos
leave
ja
ljmp
jnp
jb
dec
fmull
scas
or
inc
fisttps
mov
lret
dec
hlt
xor
fdivrs
jmp
sub
hlt
xchg
setp
fwait
icebp
dec
es
cmp
scas
lret
in
addr16
add
xchg
lret
inc
mov
push
out
pop
jo
push
cmpl
mov
xchg
sub
xor
stc
popa
fbstp
dec
jg
pusha
test
dec
push
and
lret
adc
cmp
out
pop
xor
mov
ja
adc
inc
sbb
hlt
aas
and
dec
dec
mov
imul
stc
fs
cmp
sar
cli
sbb
call
or
cli
cli
mov
inc
push
jmp
and
ret
cwtl
xchg
test
into
dec
inc
pop
repz
cmp
jbe
cmpsl
and
cmp
add
pop
adc
adc
or
push
fstpt
in
loope
int3
mov
ds
nop
aas
mov
ljmp
mov
movsb
pusha
cmpsl
push
fnsetpm(287
orl
push
pusha
fbstp
push
cmp
int3
xor
xorl
loopne
pop
mov
out
inc
mov
add
int3
adc
xor
pop
and
xlat
sbb
pop
and
into
arpl
ja
pop
shrb
lret
cs
mov
inc
lods
out
xchg
stos
mov
sti
ljmp
dec
ret
push
lcall
push
jle
out
pop
adc
mov
xor
mov
shll
fmul
cli
std
push
push
jbe
imul
cltd
popf
and
jns
push
jmp
lds
hlt
pop
and
push
xor
pop
xorl
arpl
dec
xchg
or
test
loope
popa
or
mulps
push
cmp
adc
out
dec
add
jae
xlat
sub
fiadds
repnz
jnp
mov
mov
loope
fstl
xor
xchg
xor
inc
xchg
sbb
leave
clc
insl
out
or
movsl
push
andb
cs
inc
pop
xchg
dec
pop
and
lcall
repnz
nop
cltd
or
pushf
inc
add
sub
pop
lds
inc
xchg
jle
jno
sbb
pop
mov
push
sbb
adc
mov
xchg
ljmp
daa
arpl
inc
add
rorb
push
adc
cltd
cwtl
test
cmp
call
mov
arpl
data16
cwtl
std
addl
xor
imul
jo
inc
pop
mov
inc
dec
adc
bnd
xor
movsl
xor
mov
and
sbb
int3
pop
and
mov
insb
xchg
outsb
loopne
mov
pop
cmc
pop
imul
dec
in
sahf
inc
adc
mov
imul
fs
cmpsl
cli
pop
add
mov
sbb
cmp
aaa
sbb
dec
orb
pop
sar
xchg
pop
outsb
xchg
inc
mov
cmp
shlb
cmp
xchg
or
test
int
cmp
stc
in
repnz
inc
imul
mov
cmpsl
lea
aam
fdivrs
int
sbb
aas
fcmove
cmp
fsubl
mov
xlat
add
add
sar
and
and
jge
mov
push
mov
data16
sti
cmp
packssdw
add
inc
pop
or
sbb
pop
jmp
xor
aas
adc
mov
mov
insl
lret
rclb
mov
loop
cltd
mov
cmp
fsts
mov
addr16
jecxz
xor
in
scas
popf
fisubl
andb
movsl
push
repnz
push
test
and
ds
xchg
mov
shl
or
lcall
or
jmp
push
xor
jne
mov
mov
aas
ss
ss
mov
aam
mov
repz
out
push
stc
stos
sbb
mov
jl
cmpsb
in
xchg
xlat
bound
scas
and
popf
out
repz
xchg
das
or
xlat
repnz
lret
sub
mov
repz
sub
mov
das
lret
in
aad
and
lds
lcall
dec
addl
xchg
call
mov
jmp
inc
leave
fwait
sbb
mov
add
cmc
js
mov
lcall
cmp
pop
mov
pop
stos
mov
mov
push
testl
push
lret
fwait
jmp
negb
and
out
inc
or
mov
sti
arpl
push
xchg
cmp
insb
or
scas
loop
sbb
sub
xchg
repnz
cli
sub
cmp
xchg
xchg
test
xchg
cmp
outsb
outsl
xor
in
and
rcrb
inc
cmp
cmp
mov
push
mov
pop
or
jo
test
bnd
fmuls
in
dec
leave
push
sub
jne
cmp
push
sub
sahf
push
nop
cltd
test
mov
jmp
frstor
xlat
sub
enter
jge
xor
insl
lods
jmp
adcb
inc
or
mov
cmpsl
pop
mov
pop
test
cmp
and
sub
fcmovb
jle
xchg
pop
in
or
push
nopl
jbe
mov
xchg
popa
add
sbb
clc
repz
jae,pn
jmp
xor
lret
xlat
push
cmpl
cmpsb
or
fsubr
lret
xlat
adcl
scas
js
push
or
xchg
inc
mov
loop
out
pop
or
inc
cmp
leave
xchg
push
and
stos
xchg
mov
test
sub
inc
pop
adc
dec
inc
and
in
push
xchg
das
pop
scas
ror
testb
outsl
jbe
pushf
fcomps
mov
insl
ss
inc
stos
cltd
cmc
push
cld
notb
jbe
adc
dec
mov
lock
mov
insb
das
cmp
bound
mov
cld
add
dec
jno
popl
outsl
mov
mov
repnz
jo
shrl
js
mov
or
std
mov
cmpsb
sbb
lsl
push
adc
add
xchg
jmp
mov
icebp
sbb
cmp
cmp
and
rcrb
jae
dec
sbb
or
xorl
imul
int3
out
out
vhsubpd
mov
ds
movsl
dec
xchg
mov
int
movb
inc
jp
jl
jnp
fadd
fcoml
repz
dec
leave
jns,pt
scas
push
lret
gs
push
rorl
fxam
test
jb
movl
aad
lock
adc
out
xor
pop
frstor
mov
jp
test
popf
mov
cvttps2pi
push
imul
xor
mov
lods
in
ds
cltd
jno
repnz
lods
inc
out
inc
gs
jmp
rcrb
imull
pop
test
rcr
xor
sahf
aad
rcrb
xor
aas
int3
out
int3
mov
clc
repnz
inc
lods
push
jb
dec
add
ja
sbb
xchg
jns
push
paddsb
in
mov
and
jg
and
out
testb
sbb
add
sbb
lea
movsb
cmpsb
add
lcall
imul
mov
mov
fs
xchg
mov
repnz
push
mov
roll
cmp
pop
les
jl
xchg
adc
dec
mov
fidivs
popa
movsl
les
push
in
or
mov
cmp
fadd
cs
lea
pop
add
or
and
nop
ja
dec
pop
fisubs
int3
js
sahf
mov
or
or
xchg
xchg
push
adc
lahf
ja
push
daa
insl
mov
fidivs
pop
and
jecxz
pop
lods
push
je
cwtl
adc
pusha
movsl
dec
jecxz
fmul
ret
mov
insl
sbb
movsb
xor
insb
xchg
gs
sarl
mov
add
stos
sti
mov
test
cmp
xchg
inc
mov
mov
jecxz
pop
ss
push
fcom
dec
in
add
sbb
outsb
xchg
lahf
rclb
cmp
repnz
fwait
sti
lret
mov
mov
sub
fs
xor
xor
mov
sbb
decl
jno
cli
mov
fs
mov
test
scas
dec
ficomps
and
into
decb
in
cs
ljmp
inc
jmp
mov
sub
hlt
add
fldl2e
icebp
out
xchg
cld
mov
and
push
jne
stos
mov
fwait
pop
addb
incl
adc
mov
jns
aad
insb
cli
bound
ret
stc
hlt
sub
mov
mov
jl
cs
int
out
arpl
outsl
lcall
arpl
aad
mov
aas
ret
cmp
xor
cmpsl
cmp
add
in
addr16
mov
hlt
jns
sub
lods
leave
gs
cmp
dec
js
dec
cltd
jp
mov
js
cmp
stc
mov
mov
push
add
scas
xchg
pop
cmp
lods
pop
mov
xor
hlt
sbb
sub
jmp
mov
ljmp
jo
add
les
push
cmpsl
call
stos
repnz
pop
lcall
ja
cmc
jecxz
out
fbstp
xchg
cmp
sti
call
int3
add
test
xchg
pop
sbb
pop
sbb
jnp
push
xor
mov
jne
int
js
sbb
in
mov
mov
jno
loop
mov
enter
sub
movsl
sahf
cmpsl
in
dec
mov
js
adc
dec
or
jns
dec
punpcklwd
pusha
fs
ja
loope
stc
fwait
orb
xor
cmp
jmp
in
cmpsl
aad
ljmp
cmc
movsb
cmp
and
dec
xchg
movsl
mov
sbb
add
jg
jg
jnp
mov
ss
ss
add
mov
jge
or
jo
cmp
lahf
sub
inc
sbb
int3
movsb
push
pop
lret
pop
push
je
outsl
inc
stos
jge
clc
pop
add
pop
mov
push
jl
push
xchg
sub
cli
pop
cmpsl
mov
pop
int
push
add
lods
or
je
inc
popa
sub
adc
mov
fistpll
add
fisubs
cmp
std
push
mov
pop
pusha
dec
sbb
mov
sub
mov
sub
ret
or
mov
mov
outsl
dec
add
adc
aaa
jo
mov
lret
push
sahf
xchg
ret
lret
sahf
rcrb
in
xchg
inc
mov
and
pushf
test
fsubl
sti
cmpsl
add
inc
popa
push
loopne
pop
loope
data16
pop
fldt
sub
lea
and
ficompl
lock
rcrl
mov
push
fcoml
les
inc
pop
add
cmp
jl
addl
scas
dec
sub
pop
push
ds
cltd
aaa
cmp
and
and
push
jmp
push
ja
sahf
push
scas
popf
push
out
jmp
test
sarb
jno
xor
dec
test
das
imul
dec
cmp
fs
pop
adcb
in
or
jge
xchg
jmp
in
mov
pop
push
or
jo
iret
push
or
mov
movsb
jp
int3
jo
pop
push
stc
pushf
ret
or
xchg
mov
fucompp
loopne
lcall
leave
fwait
rol
mov
loop
cmp
int3
sti
mov
fidivrs
mov
inc
sbb
xor
cmpsb
and
xchg
testb
push
rcrb
and
popa
dec
int
arpl
jb
popa
in
add
pop
shl
std
dec
jecxz
cmp
sahf
mov
sbb
mulb
cltd
cmpsl
pop
mov
xchg
fst
insb
jbe
sbb
or
cmpl
sbb
ret
fidivrs
sbb
inc
jns
push
inc
mov
mov
xchg
in
icebp
stos
cmp
lea
and
clc
sti
mov
stc
xor
das
iret
lret
xchg
les
xchg
cltd
sub
out
lcall
int3
inc
adc
xorl
in
stc
jp
mov
xchg
jnp
dec
inc
psrld
sub
outsl
fnstsw
lahf
je
mov
or
fs
outsl
cwtl
sbb
or
push
mov
push
jmp
orb
outsl
xlat
sbb
jne
or
jl
shll
movsl
rclb
ljmp
bound
outsl
xchg
mov
dec
xchg
push
mov
push
movsbl
test
mov
sar
sbb
rolb
mov
roll
fdivs
cmpl
in
pop
dec
xlat
and
lea
aas
arpl
jne
cli
mov
lds
mov
out
fadds
mov
movsl
mov
inc
adc
mov
repnz
outsl
daa
outsb
and
push
lret
dec
shl
dec
lds
rdmsr
ss
je
fsubl
stc
dec
xor
aam
cmp
icebp
lea
jae
lods
out
sbb
push
add
rcpps
or
scas
in
daa
push
dec
sbb
mov
pop
stc
or
ljmp
cmp
xchg
inc
xor
inc
in
sub
pusha
mov
inc
jl
jl
popf
inc
data16
jl
stc
or
add
and
pop
add
in
cmp
in
sbb
jb
jbe
pop
push
sbb
or
or
mov
pop
stos
pop
aaa
push
in
cmpsb
xlat
insl
ret
test
fisubrl
inc
cmp
shlb
mov
sbb
jmp
xorl
and
jns
cmpsl
jno
imul
add
fs
xor
and
cmc
fnstcw
test
jp
or
push
in
add
add
jnp
rorl
adc
push
push
mov
sbb
or
cld
sbb
aam
jbe
push
orb
jge
arpl
es
adc
xchg
cmp
rcl
sahf
icebp
push
std
loopne
jbe
push
pop
cmp
mov
inc
jmp
aam
jbe
xchg
fs
ja
dec
lock
mov
dec
add
rcr
mov
clc
daa
sub
popf
and
icebp
lods
and
jmp
in
sub
mov
sbb
scas
push
jnp
aas
dec
xor
sarl
and
lret
inc
xchg
mov
stos
pop
fiadds
jp
fmul
add
cmp
sbb
add
inc
mov
pop
mull
popf
mov
lods
lret
jge
mov
fwait
out
cwtl
sbb
push
inc
ret
jmp
xor
outsl
adc
js
pop
pop
sarl
icebp
lahf
push
inc
insl
fimuls
mov
inc
push
add
aam
test
and
sbb
sub
insl
fstp
push
mov
add
xor
or
adc
adc
int
cwtl
push
dec
iret
mov
arpl
pop
xlat
pop
sbb
scas
xor
or
dec
data16
subl
xor
xchg
lods
arpl
out
pop
sub
fdiv
and
in
cmpsl
arpl
nop
and
pop
mov
test
pusha
sbb
cltd
lcall
lea
ds
jl
jae
xchg
dec
pop
and
mov
das
sbb
mov
lock
mov
dec
sub
std
mov
or
or
mov
ja
scas
and
inc
inc
inc
xchg
hlt
in
mov
xor
fs
mov
cmp
push
lods
and
add
or
cmp
negb
pop
into
xor
jge
dec
fildll
xor
stos
push
cmp
adc
xor
insl
leave
popa
fsubl
repz
dec
movsb
rolb
sbb
sbbl
and
push
iret
xlat
and
mov
mov
imul
dec
into
fucomip
sbb
xchg
aad
and
push
push
and
mov
and
rcrb
or
mov
pop
jbe
bound
repz
mov
push
cltd
aam
stos
or
fucomip
lods
das
push
int
push
sar
xchg
or
push
cmpl
pop
mov
inc
es
daa
fnstsw
mov
sbb
cli
lock
leave
mov
arpl
sbb
sub
push
pop
mov
adc
and
bound
xchg
jge
pop
leave
std
mov
sub
pop
push
adc
dec
dec
push
xchg
jmp
jle
push
ret
inc
aam
rcl
pop
pop
lret
test
cmp
fildl
jg
dec
lods
jbe
mov
div
or
pop
fiaddl
lcall
mov
test
push
pop
jecxz
push
lret
call
push
lret
int3
mov
xchg
movsb
loop
jl
in
sbb
jg
out
pop
repz
mov
pop
shlb
pop
fwait
out
in
mov
andb
cmpsb
stos
dec
xchg
add
repz
xchg
cltd
nop
mov
push
xchg
push
cld
sbb
lea
cmp
test
xlat
adc
or
sub
fsts
or
fs
ds
out
jge
jno
icebp
xchg
cmp
jbe
nop
in
pop
jl
cmp
push
out
lahf
fsubrs
cs
repnz
ds
ss
es
filds
lds
xchg
add
add
xchg
lret
es
adc
loop
sbb
call
or
xorl
sti
mov
loop
ret
dec
sub
out
jae
std
icebp
in
add
aad
xor
lea
sbb
rclb
fmull
dec
mov
adc
lds
sbb
jecxz
stc
ds
sbb
sub
adc
sbb
sub
and
into
inc
xor
repz
pushf
or
xchg
xchg
les
in
repnz
fbld
sub
push
lret
nop
jnp
and
adc
es
xchg
ror
out
lcall
js
push
out
addb
dec
mov
xchg
test
fwait
inc
lahf
pop
ret
push
push
jp
clc
lods
add
mov
adc
and
or
inc
mov
and
popa
mov
inc
daa
sahf
pop
mov
xchg
push
adc
jle
inc
push
scas
mov
stos
pusha
mov
push
arpl
xchg
adc
push
ja
test
sub
test
ljmp
movsl
sub
les
loope
sbb
mov
or
test
sahf
bound
es
ss
xor
push
adc
inc
inc
fwait
dec
sar
int
add
jmp
sub
mov
shr
cltd
daa
cwtl
hlt
cmpl
dec
jb
mov
mov
sbb
xorl
enter
dec
aam
in
push
cs
outsl
mov
insb
repnz
ret
jnp
test
in
and
sub
jno
xchg
mov
rcrl
insb
das
loop
xor
inc
cmpsl
test
int3
ja
sub
leave
fcoml
mov
mov
push
stos
jge
sub
scas
repnz
jmp
mov
out
mov
arpl
imul
push
xor
mov
and
repnz
and
xlat
fisttps
dec
xor
repz
push
mov
insb
jbe
movsb
or
in
dec
and
jb
xor
mov
in
xor
inc
mov
pop
rcrb
int3
add
push
push
mov
in
cltd
mov
push
adc
xor
xlat
daa
rcrl
sbb
add
and
in
or
jnp
ror
aas
incb
jmp
xchg
enter
cli
test
dec
mov
sbb
add
push
or
sahf
lret
lea
cmp
xchg
lahf
dec
out
ret
mov
mov
add
addl
les
push
push
fmull
mov
adc
xor
ret
push
jl
repnz
mov
push
int
fwait
sub
cmpsl
inc
sbb
out
mov
sub
inc
cld
xor
aad
ss
push
xchg
cmp
test
or
rol
clc
push
xor
jo
cmp
push
mov
push
jo
xor
nop
xor
js
psraw
int
inc
movsb
cli
xor
cmp
xchg
test
mov
xchg
cli
adc
out
addr16
add
pop
mov
fdivl
std
add
ja
ret
and
mov
jge
out
push
andl
ja
push
jne
fadds
dec
adc
js
cmp
pop
add
into
inc
xor
cmc
call
push
arpl
sbb
and
xchg
sub
push
adc
pop
loopne
dec
cld
push
dec
sbb
adc
xor
mov
pop
push
gs
jle
in
pusha
pusha
push
ret
rcll
inc
push
in
or
inc
sahf
ficoms
arpl
pop
clc
or
je
mov
in
repnz
into
rorb
push
jmp
inc
dec
out
fldcw
adc
subl
imul
shr
bound
xor
mov
dec
clc
int3
fwait
inc
int3
jb
jg
fsubrp
loop
movsl
and
insb
sub
loope
add
cmp
pusha
int
sahf
mov
jne
adcl
cmpb
dec
sbb
jb
pusha
xchg
into
cmp
mov
sbbb
xchg
jne
and
push
pop
enter
cmp
fwait
push
movsl
mov
roll
mov
addr16
mov
dec
pop
lret
decb
fnstenv
dec
test
adc
jp
mov
jecxz
jp
mov
arpl
adc
movsl
inc
push
push
or
std
and
nop
je
mov
js
mov
rolb
aam
aam
fildll
cmp
inc
lea
and
jae
imul
fsubs
jb
dec
icebp
mov
paddb
jae
shl
ficompl
out
pop
adc
js
push
sub
sbb
mov
das
push
pop
pop
add
cmp
icebp
or
jbe
cmp
rcrl
xchg
cwtl
pop
adc
inc
gs
imul
stos
dec
or
call
leave
outsl
mov
cmpsl
adc
sub
push
mov
xchg
ja
mull
push
fwait
xor
sub
push
or
jo
fidivrl
jae
push
mov
sarb
push
mov
insl
sub
push
hlt
xchg
pop
push
cltd
sub
jnp
jmp
xor
add
lods
mov
jb
mov
addr16
jno
mov
das
rorb
inc
test
scas
stos
dec
sahf
scas
popf
stc
ja
inc
loop
or
aad
cltd
ret
stos
pushf
cmp
sub
aaa
inc
test
sbb
cmp
pop
stos
dec
mov
das
inc
jnp
mov
lock
xor
adc
jo
jae
sti
and
popf
ret
push
cmp
add
mov
sub
sti
cwtl
insl
movsb
or
popa
jecxz
out
scas
cmpsl
aam
pop
cmp
loopne
xor
lahf
and
mov
fucompp
test
out
lea
inc
xchg
fnstcw
dec
jb
xor
sti
test
and
mov
scas
fs
pop
mov
mov
aad
fcomi
fcomip
and
mov
nop
push
pop
cmc
leave
aad
call
sti
mov
mov
aam
xor
xchg
out
iret
add
and
data16
dec
enter
jg
sbb
add
out
cld
int3
mov
mov
and
dec
dec
adc
jecxz
jmp
daa
adc
xchg
test
call
dec
sahf
add
jl
mov
sub
fcoms
std
and
addb
aad
adc
shl
inc
add
push
mov
inc
ljmp
mov
mov
lods
sbb
or
pop
xchg
movsb
outsb
push
push
xchg
pop
int3
leave
xchg
cmp
stos
loope
sbb
jp
pinsrw
dec
lcall
mov
lret
add
cmc
sub
insb
fisubl
xchg
pop
sub
pop
cmp
outsl
scas
pop
int3
fisttps
in
fwait
inc
xor
mov
jae
or
dec
inc
pop
mov
push
out
inc
dec
sub
jle
andl
imul
test
outsl
mov
in
pop
sbb
inc
dec
or
bound
enter
addr16
es
xchg
xor
sub
test
push
cmpsl
in
mov
push
adc
gs
dec
pop
mov
dec
dec
flds
movsb
inc
or
and
mov
mov
sbb
mov
mov
jge
lcall
xchg
push
aad
xor
adc
mov
ljmp
ret
xchg
sbb
outsl
je
clc
adc
fxtract
adc
and
sub
dec
push
mov
mov
inc
dec
pop
inc
jae
add
pop
push
ficompl
jo
push
das
stc
cwtl
icebp
xchg
insb
popf
xchg
mov
sub
addb
dec
mov
dec
cmp
adc
jno
cltd
in
pop
sbb
fwait
stos
in
std
scas
lock
xchg
xor
cltd
pusha
mov
outsl
cmp
dec
ljmp
mov
loopne
sahf
xchg
std
and
nop
aam
mov
sahf
jge
lea
jne
int
push
shrb
inc
sahf
loopne
lods
fabs
stc
mov
dec
fidivs
jg
mov
xchg
xchg
dec
addl
mov
ljmp
fistps
inc
cmpl
pop
mov
repz
mov
pushf
mov
sbb
xlat
mov
out
jle
pop
sbb
adc
aas
hlt
or
data16
xchg
xchg
stos
imull
jns
dec
adc
mov
test
mov
mov
push
xchg
hlt
sub
loop
int3
ss
cld
mov
mov
inc
sbb
dec
fwait
and
ds
dec
jmp
out
cwtl
fcomps
lods
cmpsl
xor
inc
clc
and
xchg
int
sub
insl
addb
flds
mov
fidivrs
test
lcall
les
inc
dec
push
addr16
shl
sub
leave
jg
inc
jnp
scas
jae
dec
cmp
mov
and
or
xchg
mov
das
ret
daa
sub
mov
arpl
subl
jae
push
out
jl
inc
popa
pop
push
mov
retw
bound
xchg
shlb
scas
mov
push
or
arpl
inc
xchg
test
cmp
push
into
enter
push
lods
in
outsb
add
add
hlt
jne
jne
push
jp
sub
test
push
add
in
push
jmp
xlat
mov
ds
scas
inc
cmpsl
aas
aas
pop
sbb
fidivrl
inc
test
jp
popa
fistpll
mov
jg
sbb
hlt
mov
mov
add
fldenv
mov
ret
pop
jl
xor
sbb
xchg
mov
and
lea
mov
fildl
add
dec
xor
jns
xchg
mov
or
mov
push
sub
outsl
jo
ret
pop
push
xchg
mov
ss
sub
and
dec
xchg
pop
repz
mov
mov
lock
loop
xchg
pop
les
sarb
jle
bound
push
sub
iret
imul
pusha
cltd
jl
ret
dec
fwait
mulb
pop
or
icebp
stc
pop
in
inc
jmp
dec
es
jb
ss
xchg
daa
dec
inc
rolb
and
aaa
sarb
imul
cli
mov
imul
mov
cmp
andb
popf
out
cmp
imul
iret
outsb
or
das
adcb
int
xor
lret
cmp
push
jo
pmaddwd
into
fs
lods
stos
xchg
mov
ret
xor
add
xchg
mov
out
mov
xchg
roll
std
ret
or
jp
cmp
xor
cmp
js
pop
popl
lret
adc
xchg
test
ficomps
cmp
cs
lret
xor
or
and
roll
xchg
xor
sbb
cmpsl
out
adc
inc
lret
fwait
pop
popa
in
xor
in
jp
xorl
enter
mov
jp
int
mov
mov
mov
push
mov
jmp
sbb
adc
push
sub
call
jmp
jbe
shll
cli
stos
cmp
loope
add
push
shll
push
push
aam
movsl
addr16
dec
fcoms
sti
loop
sub
ret
loope
jnp
push
call
insl
out
mov
mov
ret
in
mov
push
add
push
andl
adc
xchg
into
dec
scas
mov
rorl
mov
lods
push
sti
popf
add
ret
call
stc
movsb
je
jne
and
mov
cwtl
sahf
jno
pop
lea
or
dec
pop
adc
mov
inc
jbe
in
aas
pop
aam
ljmp
lock
mov
fistpl
outsl
cmp
or
pop
dec
inc
mov
vmwrite
adc
ja
mov
mov
in
scas
fidivrl
loop
mov
xlat
mov
popf
pop
mov
and
sub
push
pushf
lods
xchg
xchg
or
xor
push
push
xor
insl
jno
pop
dec
dec
push
jno
xor
push
adc
push
or
inc
sbb
lret
mov
je
mov
xlat
add
in
add
out
push
in
inc
int3
sbb
lret
cmc
push
lds
in
mov
lret
repz
push
insl
dec
push
mov
setg
cmpsb
nop
scas
mov
or
cltd
sub
push
stc
mov
cli
test
rorl
mov
sub
les
repz
jg
arpl
outsb
sbb
xchg
push
and
push
xchg
movsb
into
xor
jno
cmc
mov
sub
push
stc
mov
add
pop
negl
stos
dec
inc
imul
adc
pushf
cmp
mov
fnstsw
ret
mov
in
test
pop
dec
jnp
pusha
mov
subb
aas
mov
or
lahf
int
int
inc
jb
stos
jae
push
push
jno
inc
lcall
insb
lret
add
push
adcb
mov
jae
mov
jbe
cld
mov
cmp
mov
xor
pusha
cmp
and
push
or
jmp
jg
add
outsl
fsubs
es
fnstcw
mov
mov
out
jno
xchg
xlat
inc
push
fstpl
pop
inc
int
cmp
scas
pop
imul
popf
shr
or
lods
stc
inc
hlt
mov
call
fcmovnu
mov
sahf
dec
push
push
aam
ror
pop
xor
mov
call
daa
or
jbe
inc
xor
adc
clc
adc
xchg
arpl
mov
mov
dec
adc
lret
popf
scas
sbbl
fcmovne
das
mov
jle
cmp
and
xrelease
sbb
test
xchg
outsb
fistpll
xor
pop
jno
push
adc
mov
inc
and
xor
icebp
push
inc
cmpsl
push
and
sub
cs
sti
push
push
mov
mov
std
ja
fsubrs
outsb
fdiv
mov
add
jne
push
fwait
mov
mov
mov
dec
cli
fisttps
sbb
cmc
add
ja
and
mov
insl
fcomi
arpl
push
bound
decb
sbb
pop
sub
pop
das
pop
out
test
push
out
cli
or
dec
rorb
std
xchg
cwtl
in
adc
add
jbe
mov
js
add
inc
mov
int
aad
cmpl
jb
or
adcb
stc
stos
jmp
push
cmp
repz
andl
or
pop
sub
push
cltd
xchg
ss
cmp
inc
inc
push
loop
shll
dec
out
sbb
dec
or
pop
int
xor
add
xlat
das
fsts
out
add
cmp
pop
adc
dec
lods
add
inc
popa
rcrl
addb
cmp
jmp
mov
mov
mov
outsl
inc
stc
push
add
pop
loope
roll
push
js
stc
movsb
inc
rolb
jnp
cmp
lea
jb
xchg
ds
dec
sti
mov
ss
pop
xchg
sbb
in
out
add
mov
bound
insb
xor
push
test
mov
xchg
cs
daa
inc
je
inc
xchg
jp
push
or
xchg
add
setnp
std
lea
dec
js
adc
inc
jbe
arpl
in
pop
xchg
and
xchg
testl
test
frstor
and
fcompl
inc
std
mov
mov
xchg
and
leave
jge
stos
adc
out
push
test
and
or
jp
add
mov
fistps
mov
add
mov
mov
arpl
mov
mov
fnstsw
rcrl
icebp
add
mov
push
cmp
sbb
outsl
xchg
cmp
cwtl
stc
jg
fsub
cmc
push
stos
test
imul
int3
sbb
jne
push
pop
aam
jp
roll
repz
xor
push
into
pop
jecxz
cli
aad
push
inc
inc
adc
dec
outsl
sbb
mov
shll
dec
lods
nop
mov
and
mov
or
add
enter
xor
xor
stos
adc
imul
mulb
int
add
pop
orb
xor
addb
loopne
bound
mov
shlb
mov
fwait
xor
and
cmp
pop
jl
add
pop
sub
scas
ds
cld
psraw
mov
lods
scas
dec
jbe
nop
adc
xchg
sub
sbb
outsb
lock
in
dec
xor
into
jl
cld
pop
dec
call
mov
ss
push
pop
and
shr
pop
push
push
rcl
push
shrb
push
jecxz
in
arpl
mov
shll
jp
addb
enter
mov
ljmp
in
mov
inc
sbbl
enter
cmp
mov
pop
movsl
jbe
scas
and
mov
stos
fdivrl
sbbb
stos
push
lret
cmpsb
cmp
push
xchg
add
push
and
inc
xor
and
loop
xchg
test
shlb
push
cltd
aad
popf
leave
add
icebp
cwtl
fimuls
or
xchg
add
and
xorl
adc
fisubs
and
mov
and
scas
jns
icebp
scas
int
xor
out
arpl
es
inc
inc
and
cli
shl
imul
sub
icebp
mov
cld
ret
pop
push
stos
xorb
dec
inc
ret
rcr
fcoml
or
mov
or
adc
outsl
cmpl
push
mov
inc
insb
fiadds
mov
out
jno
minps
in
xor
shrl
dec
jns
mov
mov
sub
les
xor
cmp
data16
stos
push
mov
jmp
jmp
lahf
test
push
lret
jmp
stos
xchg
call
xor
cmp
scas
or
sub
outsb
or
jle
push
mov
xor
pop
imul
imul
insb
pop
loopne
and
sub
out
cmp
and
js
sahf
add
mov
jo
xor
outsb
fisubs
or
jb
push
test
mov
mov
cmpsl
into
js
cmp
ret
pushf
in
or
cli
daa
sub
adc
jnp
xchg
icebp
mov
lret
lods
push
lds
imul
ficompl
insb
mov
nop
out
add
nop
xor
mov
mov
sbb
sub
jae
sub
sbb
imulb
pop
icebp
out
jmp
sbb
push
xchg
fldcw
rcrl
loope
mov
jnp
ss
out
mov
aam
jno
xchg
push
push
dec
mov
les
lods
lret
ret
jle
mov
popa
mov
ss
lods
cwtl
push
cmp
mov
shr
add
ret
inc
lcall
test
sub
pop
imul
pop
fsubs
addr16
xchg
mov
cmp
pop
sbb
lea
imul
pop
pop
stos
sbb
out
outsl
arpl
addr16
pop
jo
ljmp
xchg
aas
or
fdivl
jns
mov
or
scas
fsubrs
scas
xor
jp
push
push
pop
in
sbb
pop
and
mov
hlt
ljmp
mov
lods
cwtl
xchg
cltd
outsl
mov
jne
lds
cmpsl
lret
lods
add
cld
add
or
mov
inc
and
or
mov
sbb
es
adc
bound
orb
cwtl
cmpsb
js
mov
mov
or
dec
push
add
shlb
or
lds
cmpl
dec
pushw
test
iret
add
test
jp
mov
cmp
fcomps
fs
enter
fwait
cmpsb
mov
add
pop
inc
jmp
push
sbb
jmp
pop
je
xor
and
adc
shll
mov
xchg
push
movsl
loopne
pop
inc
xchg
sahf
adc
adc
cmp
pusha
mov
stos
dec
push
add
mov
sbb
jo
stos
sub
arpl
mov
xor
adc
cmp
js
mov
pop
lahf
push
in
cmpsl
mov
push
push
lahf
test
inc
daa
stos
mov
inc
rcll
je
push
push
nop
and
aad
push
ss
stos
adc
cwtl
inc
push
xor
mov
push
sub
std
jl
or
mov
xchg
rcr
xchg
and
pop
mov
mov
xor
mov
jnp
pushw
push
push
fnsave
loopne
pusha
js
jbe
int
ss
fidivs
cmc
aaa
add
xor
aad
jmp
adc
push
pop
ljmp
cli
push
pop
call
fdivrl
xchg
cli
mov
cmp
out
ljmp
jbe
movsl
arpl
pop
inc
fstps
and
in
jp
pop
mov
ljmp
cli
or
xchg
out
mov
ficomps
sub
rcll
dec
or
mov
push
dec
stos
popa
stos
shrl
gs
jnp
mov
lret
filds
cltd
cli
jno
inc
add
dec
mov
test
mov
inc
test
shr
fucomp
scas
decb
fisttpl
cli
daa
and
pop
pop
fbstp
jb
sbb
out
cmp
shrl
lret
adc
es
jge
mov
sbb
lret
push
inc
and
lods
and
and
lcall
dec
push
xor
scas
sub
jne
fwait
xor
push
inc
jno
sub
ret
rorb
notl
push
rol
orb
jne
xchg
sbb
xchg
loopne
and
mov
imul
ljmp
decl
inc
repz
loope
lcall
cmp
xchg
dec
ljmp
jle
mov
leave
adc
stc
std
stc
sbbb
jmp
clc
sbbl
jecxz
or
fistl
jns
mov
mov
pop
repnz
lock
ror
push
xor
jb
jl
pop
jbe
xlat
dec
cmp
or
inc
call
pop
or
or
enter
jge
int3
mov
rorb
push
jb
dec
sti
outsl
mov
jo
mov
jmp
dec
mov
mov
xchg
dec
xchg
xor
or
pop
sbb
icebp
jge
cli
adc
mov
mov
cmp
fisubrs
xchg
sub
jo
jns
and
pop
inc
mov
jbe
enter
fptan
jns
shll
jle
xchg
ja
sti
sub
pushf
out
xchg
pop
jbe
shlb
ss
subb
aad
shll
lahf
shll
dec
in
mov
dec
lock
lret
test
cmc
add
xor
push
pop
lret
lods
pop
mov
jae
pushf
ljmp
jp
int3
subl
test
xchg
sbb
sub
fcmovne
dec
mov
aam
idiv
cmc
rcrl
push
jb
fildll
add
lds
fadds
scas
loop
jae
or
sub
xor
or
push
addr16
adc
mov
scas
rcr
xchg
iret
xrelease
mov
jge
add
mov
xor
push
mov
mov
mov
test
lcall
sbb
sarl
inc
pop
pop
mov
mov
push
into
fmul
mov
mov
nop
inc
out
add
pop
mov
sbb
mov
mov
push
xlat
inc
jmp
shll
addl
cmc
shlb
mov
xchg
dec
dec
mov
xchg
arpl
fiaddl
outsb
pop
adc
cs
cwtl
jns
push
jns
dec
xchg
fsubs
cmp
fwait
dec
sbb
das
ret
fadds
xchg
lahf
in
call
dec
dec
add
inc
sub
pop
cltd
addr16
inc
sbb
shll
mov
xor
sub
cli
cmpsl
jl
sub
loope
pop
movups
push
push
insb
push
iret
sti
int
call
pushf
xlat
and
cltd
cmpsl
cld
dec
fistpl
push
lods
stc
enter
nop
mov
push
arpl
imull
rclb
mov
in
mov
jmp
cmpb
pop
movsb
divl
add
popa
divb
pop
or
movsl
shl
add
out
lea
mov
es
xor
pop
pop
add
out
sbb
sti
inc
cmp
cmp
out
xchg
pop
loopne
lea
fs
cld
sbb
xchg
jns
mov
pushf
mov
mov
mov
mov
movsl
fiaddl
aaa
stc
jle
or
loope
push
xlat
pop
std
push
ljmp
jl
mov
ds
es
cmp
pushl
das
aaa
divb
std
ja
and
inc
xchg
je
cmpsl
mov
inc
pop
push
outsb
cmp
frstor
and
jne
sub
cmp
test
negl
mov
ja
leave
movntps
out
and
sub
addr16
lahf
lret
fnstsw
movsb
data16
enter
arpl
mov
mov
inc
cmpsb
cld
call
shr
dec
aad
or
adc
jecxz
jo
cmpl
dec
push
mov
cmp
pop
xor
fdivr
dec
add
nopl
pop
addb
test
cmp
sub
pop
sub
setge
mov
mov
sbb
pop
add
xchg
mov
loop
lock
sbb
mov
or
pop
repz
cmc
or
aas
icebp
push
pushf
mov
xor
aam
inc
lea
push
rolb
lahf
cmp
inc
add
inc
jae
cli
lods
push
cmpsb
lea
sub
decl
jecxz
mov
pop
cmpsb
mov
pop
js
faddl
hlt
xchg
rcrb
dec
pop
push
dec
add
add
dec
inc
push
and
xchg
or
pushl
add
adc
insl
add
cld
imul
jg
mov
dec
mov
mov
fdivp
add
aaa
or
mov
lea
push
cltd
inc
cmp
fildll
cld
mov
into
ficompl
add
xchg
cld
outsl
xlat
mov
push
xlat
sub
lea
xor
jmp
dec
mov
movsb
and
sbb
dec
subb
gs
push
iret
test
dec
mov
inc
pop
out
sbb
test
divb
repnz
dec
movsb
mov
fsubrl
xor
xor
ljmp
mov
mov
test
xchg
or
stos
std
jo
or
sar
arpl
or
in
pop
sub
leave
jae
add
ja
stc
mov
movsb
push
or
cmpsl
cld
mov
xchg
outsb
jno
fisubrs
mov
icebp
cmp
dec
add
shr
pop
int3
lock
insb
sti
pop
push
jp
negb
mov
xchg
sub
mov
adc
push
inc
push
pop
mov
inc
pop
scas
out
outsb
jo
or
push
outsb
imul
mov
ja
pop
std
sub
mov
test
or
xchg
out
imul
out
add
or
lock
inc
std
aas
push
cwtl
adc
pusha
xchg
xor
jp
fyl2x
jge
jge
dec
and
inc
cmp
pusha
push
mov
inc
movsb
mov
pop
jl
mov
out
and
jb
xor
mov
faddl
sbb
and
inc
fistpl
insb
iret
sub
sub
in
push
lahf
dec
jge
mov
loope
mov
xor
mov
or
call
sbb
decl
pop
jmp
pushf
xchg
addr16
xor
cwtl
clc
xlat
lock
push
xor
xchg
into
fsubp
push
xor
or
mov
mov
mov
sub
push
shrl
add
mull
jne
arpl
shlb
cmp
xchg
cwtl
add
mov
repnz
mov
push
push
daa
lea
jbe
xor
daa
out
push
and
mov
sbb
mov
mov
cld
pop
lock
mov
xchg
sub
jb
cmc
sbb
int
ljmp
andb
cltd
fdivrp
out
loope
push
call
in
push
push
add
cld
ljmp
mov
int3
mov
sub
movsb
cld
out
in
aad
or
stos
jo
fcmovb
jmp
jecxz
negl
mov
loopne
icebp
xchg
fisubs
test
sbb
ret
sti
jo
mov
add
or
mov
pop
dec
push
sub
xchg
scas
movsb
movsb
xor
std
adc
push
loope
ljmp
or
dec
rclb
xor
aaa
loop
mov
jmp
popf
test
mov
or
insl
inc
inc
mov
add
testl
add
rcr
mov
sarl
test
stc
mov
sub
cmp
push
aaa
fcomps
mov
mov
pop
test
or
adcb
inc
inc
in
xchg
fsubrl
cmp
push
testb
and
mov
pop
xchg
push
mov
mov
add
cmpsb
rcr
repnz
stos
adc
test
xor
mov
push
out
mov
sbb
adc
push
sysexit
cld
lret
sbb
data16
aam
mov
in
stos
xchg
and
adc
scas
nop
in
lret
insb
mov
xor
mov
jo
pop
jae
pop
hlt
jne
and
shrl
icebp
sbb
roll
mov
add
cmp
and
movsb
pop
xor
push
lods
test
inc
push
mov
mov
sbb
imul
dec
mov
je
push
fldl
inc
inc
cmp
sbb
enter
sahf
movsl
push
jl
xchg
lret
dec
mov
call
dec
cltd
mov
push
movsb
mov
lret
or
test
adc
inc
pop
jle
je
subb
mov
aas
rcrb
aam
mov
cmp
insb
aas
cwtl
push
test
scas
add
add
dec
sbb
loopne
pop
mov
pop
inc
aas
mov
and
and
out
loop
push
std
xchg
jmp
xchg
mov
push
sub
popa
inc
inc
out
sub
mov
push
mov
and
inc
sbb
add
popa
mov
outsb
add
mov
je
and
idivb
mov
inc
insb
or
jecxz
adc
fcompl
pop
dec
ljmp
mov
popf
mov
inc
sbb
adc
jge
mov
adc
test
mov
cli
dec
or
mov
sahf
movsb
push
fcomi
mov
stos
mov
add
pusha
out
jge
in
jmp
std
lock
push
adc
iret
pop
stc
cmp
lods
out
mov
ja
adc
clc
sub
aad
shll
cwtl
scas
jge
stc
fmull
inc
xchg
xchg
push
jbe
cmp
das
dec
or
mov
cmp
or
inc
inc
jae
pop
insl
xor
mov
jl
shl
cmp
push
in
test
and
pop
mov
mov
pop
mov
test
mov
xchg
inc
sbb
stos
js
jg
mov
ret
cltd
cltd
jge
pop
clc
xor
xor
sub
jb
xor
incb
jae
inc
add
jnp
adc
mov
call
sti
stos
mov
mov
bound
push
lock
ror
arpl
add
cmp
mov
addr16
xchg
mov
and
mov
data16
fwait
sahf
ret
int
lods
in
cs
enter
adcl
in
cmp
lods
or
fwait
and
stos
dec
cmp
outsl
in
xchg
pop
sbb
cltd
jmp
add
cmp
ret
jns
in
push
cs
push
adc
pop
adc
xchg
daa
mov
add
ja
fisubl
enter
movsl
push
mov
scas
cli
mov
sub
cmp
mov
sub
jno
ja
jle
ds
pop
cmp
mov
hlt
sub
xchg
mov
xlat
cmp
jne
loop
add
rcl
rcrl
test
jmp
int3
inc
add
inc
and
push
sub
and
loopne
and
pusha
jge
roll
mov
jge
xor
jae
jne
inc
popa
adc
shrb
push
pop
sub
imul
mov
ds
pop
sub
aas
fldln2
cmp
cmp
xor
xor
push
jae
pop
lret
ret
xchg
cmc
push
fisubrl
or
sbb
cmp
jb
jnp
dec
mov
fwait
cld
jge
xor
sahf
je
aaa
in
repz
push
push
movsl
or
and
mov
scas
fnsave
int3
sub
jmp
iret
mov
xchg
repnz
cmc
mov
xor
loop
out
je
mov
cmpb
shlb
aaa
dec
mov
jl,pn
pop
iret
pop
pushf
test
inc
sbb
sub
out
ret
mov
and
adc
cmpsl
mov
shrl
or
dec
dec
loopne
test
cmp
xchg
cmpsl
inc
ja
dec
xor
adc
jnp
adc
xchg
test
imul
pusha
pop
jmp
outsl
movsb
jmp
mov
jb
in
cld
mov
addr16
fldcw
insb
repnz
jg
fmull
jnp
adc
insb
cmp
push
fisubrl
xor
cmc
pop
mov
pop
xchg
xor
push
fs
stos
neg
nop
cmp
xor
rolb
push
push
cmp
sbb
in
fwait
jno
push
push
loope
arpl
loop
sub
mov
or
jmp
pop
xchg
lods
sub
call
cmc
mov
xchg
jae
xor
xchg
jmp
sti
pop
inc
lahf
xchg
icebp
filds
in
sub
push
xchg
mov
mov
or
sti
cmpsl
sarb
es
loopne
dec
hlt
dec
dec
lret
shlb
mov
jne
mov
adc
xchg
push
repnz
scas
xchg
jo
cs
sahf
pop
test
cmpsl
jg
jp
mov
cmpsl
xchg
scas
cltd
mov
fistpll
lahf
push
mov
icebp
and
adc
add
sub
jae
not
sbb
cmp
fimull
and
fldl
faddl
dec
in
nop
movsb
xorb
cmpsb
ss
loope
sbb
cltd
movsl
js
mov
xchg
nop
scas
sbb
adc
xor
in
dec
pop
xor
mov
jge
mov
adc
pop
clc
push
inc
sub
xchg
rclb
ljmp
fimull
push
loop,pt
pop
add
sbb
repz
inc
mov
jne
cli
inc
push
cmp
lds
xchg
cs
mov
aaa
inc
repnz
movsl
lret
mov
cmp
sub
test
enter
les
pop
movsl
cmp
cmp
sbb
xlat
lock
cmp
ret
jne
mov
mov
push
mov
add
fld1
fwait
in
mov
jecxz
push
pop
mov
push
int
push
sub
imul
sbb
out
rcll
xchg
sub
testl
je
ljmp
in
mov
insl
bound
jge
ret
pop
ds
push
roll
jg
jge
lret
mov
push
dec
mov
pop
push
and
jne
clc
shl
inc
mov
pop
sub
les
and
test
xchg
ret
pushf
mov
divl
jecxz
xchg
mov
pop
inc
pusha
push
sbb
mov
repz
repz
mov
das
jbe
jp
push
cmp
cmp
in
jns
dec
das
and
pop
lods
add
lods
mov
loop
dec
and
mov
shl
imul
jne
pop
mov
push
loope
cmp
repnz
jnp
pop
xchg
pop
imul
sbb
pop
shll
jmp
shrl
adc
lahf
popa
pop
cmp
dec
push
push
and
cmp
jno
scas
xchg
test
daa
sar
jge
stos
repnz
mov
pop
sub
negb
pop
fisttpl
push
pushf
mov
xchg
das
andl
out
inc
pop
call
cmp
loopne
or
lret
out
jmp
pop
nop
test
or
and
xor
pop
sbb
push
xlat
inc
arpl
addr16
flds
ficoml
je
cwtl
sbbl
lret
cmp
sub
or
cmpsb
mov
mov
lret
insl
outsl
adc
ret
scas
xchg
aas
cmpl
push
push
dec
mov
inc
les
movsb
cmpsl
pop
je
dec
insl
sub
pop
push
rcrl
push
movl
or
fs
mov
push
sti
and
adc
ror
mov
or
xchg
ds
lret
jno
sbb
mov
in
sahf
push
enter
das
mov
cltd
repz
or
rclb
mov
es
add
xor
subb
sub
push
outsl
mov
addb
pop
xor
sub
in
stos
add
inc
push
xor
push
stos
pushfw
inc
insb
push
push
aaa
push
jmp
sub
nop
cmp
xor
xchg
adc
adc
pop
inc
jb
jp
sbb
mov
lret
ja
lahf
popa
or
push
and
cld
insb
ja
xor
lret
mov
mov
xorl
movsl
vpslld
mov
aam
cmp
fwait
jge
xchg
adc
fcoms
sub
cmp
out
pushf
and
push
fsubrl
idiv
or
leave
sub
outsl
shll
cld
xchg
mov
movsl
sub
push
in
lret
push
fiaddl
jg
jnp
repnz
inc
loope
sbb
inc
jns
jp
std
inc
jl
fucom
sarl
loopne
repnz
fldl
cmp
adc
dec
fadds
push
dec
jmp
pop
lds
fs
dec
mov
jne
insb
pushf
fstl
test
ret
lcall
aad
push
or
aam
iret
add
sub
xor
mov
dec
mov
xor
push
add
cmpsb
adc
pop
jecxz
mov
jbe
mov
addr16
clc
mov
sub
mov
adc
pop
cs
dec
negl
bsf
jl
mov
sti
pop
push
mov
push
jmp
mov
sub
repz
ret
es
aad
sub
lret
adc
popf
fsubl
hlt
or
ret
clc
jl
icebp
in
ret
std
lret
sbb
push
adc
jge
jecxz
in
lea
jno
jle
gs
xchg
push
add
sub
and
push
in
push
mov
clc
rclb
stos
or
mov
nop
aaa
in
push
pop
push
sub
jne
jge
push
mov
fstpt
or
pushl
test
jae
sub
push
push
cltd
adc
xchg
loop
push
aas
shrl
imull
xchg
fmull
sub
movsb
stc
test
sub
xorl
mov
scas
dec
sbb
pop
adc
mull
xor
ljmp
fcmovnu
cmp
mov
aaa
scas
push
inc
ret
nop
js
ljmp
mov
es
cld
pushf
add
std
mov
sbb
pop
push
dec
aas
dec
movsl
inc
inc
stos
sub
rorl
out
jge
orb
jl
pushf
and
fists
jmp
ret
sub
adc
jne
pop
daa
in
sbb
jmp
stos
insl
sub
sbb
rcl
pop
movsb
lcall
pop
mov
xor
xor
ss
lods
popf
xchg
aas
mov
xchg
andb
movsb
std
popa
sub
in
out
enter
xor
je
pop
mov
pop
lock
call
xor
fcomp
inc
mov
jnp
lret
sbb
or
fwait
jle
imul
push
mov
cmovle
pop
enter
lcall
sti
push
or
mov
je
dec
mov
test
loope
stos
vmovaps
mov
add
or
sbb
dec
jmp
out
pop
and
push
xchg
or
ds
movsb
out
fstpl
mulb
out
ss
and
out
pop
xchg
std
sti
sahf
fucomi
inc
fiaddl
sub
popf
sahf
mov
push
and
or
mov
inc
push
and
or
cmp
jp
pop
jnp
cwtl
mov
mov
xlat
jbe
dec
lcall
push
dec
sbb
mov
inc
push
xchg
adc
aad
xor
cmpb
outsb
mov
arpl
hlt
pusha
and
enter
mov
cltd
dec
movsl
call
int3
fiadds
jmp
mov
push
xor
inc
push
pop
test
jmp
pop
or
xor
mov
lret
push
mov
rcrb
in
dec
inc
mov
stos
mov
loopne
sbb
cld
xchg
jae
roll
or
cli
sahf
dec
fs
int3
cmp
push
fsubs
data16
cld
testl
aam
xchg
jne
sub
scas
lods
mov
pusha
push
aam
fbstp
stos
xchg
data16
in
add
push
push
sarb
inc
testl
cs
movsb
sahf
jecxz
add
negb
outsl
rcrl
ret
fadds
in
orl
insl
push
scas
sub
rcll
mov
jo
lretw
cmp
aad
mov
aaa
cmp
lock
movsl
loopne
stos
fcoms
loopne
xchg
repz
imul
push
fsts
mov
ret
pushf
add
jbe
pop
outsl
hlt
stos
arpl
psubusb
jne
popf
aad
pop
and
test
cmp
cmp
ja
mov
das
lret
dec
ret
and
sbb
fisttps
into
test
bound
xor
adc
enter
adc
dec
mov
subb
pushf
jg
and
fcoms
aam
xchg
sti
insb
pop
ret
std
push
stc
cmp
scas
aad
aad
cmpl
adc
roll
subb
mov
cmp
push
push
decl
in
adc
sahf
push
inc
int3
stos
sti
inc
jo
insb
or
je
adc
outsb
outsb
stos
test
push
mov
mov
jno
cs
jge
ret
dec
adc
and
and
sbb
andb
mov
lcall
andb
insl
lcall
inc
clc
pop
add
mov
mov
and
icebp
or
xorb
push
out
std
test
sbb
jle
or
jg
mov
dec
loop
subb
out
cmp
dec
dec
out
xchg
jne
rcrl
xor
icebp
ficoms
test
pop
jnp
push
test
xchg
aad
hlt
into
mov
mov
sub
mov
xor
mov
mov
cmpsb
pop
into
or
mov
mov
sbb
repnz
xor
or
ds
push
sbb
jne
popf
adc
push
test
adc
xchg
movsl
push
cs
push
ret
out
mov
inc
iret
sbb
inc
and
ficomps
jnp
insb
jb
repnz
add
sbb
aas
or
mov
les
incl
in
or
nop
mov
xchg
fimull
push
mov
cwtl
loop
inc
mov
pop
gs
sub
push
ja
loop
push
push
scas
mov
sbb
loopne
xchg
push
adc
sub
sub
and
jno
and
mov
insb
pop
mov
mov
loop
aas
inc
sub
add
add
xor
xor
xrelease
push
pop
sub
cmp
nop
insb
pop
mov
ficompl
xchg
test
dec
pop
dec
mov
sahf
mov
cmp
sbb
adc
pop
call
xor
pop
mov
jmp
sub
cmp
pusha
pop
xchg
mov
stc
into
sub
jne
pop
mov
or
outsl
clc
popa
out
pushf
ljmp
mov
addr16
ja
ret
mov
mov
fcmovnb
or
xchg
test
fdivl
insl
jmp
in
shrb
outsb
test
sbb
pusha
popf
mov
xchg
dec
mov
fistpl
mov
dec
jb
and
dec
inc
jge
pop
inc
loopne
in
xchg
cld
test
test
mov
aad
mov
xor
mov
mov
fmul
sbb
out
aaa
les
testl
push
sub
mov
repz
sbb
push
enter
out
mov
sbb
and
xor
lahf
pop
addb
dec
or
nop
or
xchg
jnp
lcall
call
jg,pt
fimuls
pop
dec
fildl
scas
stos
popl
fstl
rol
arpl
stos
addb
cmp
or
cmp
movsb
ja
out
bound
mov
call
pop
or
jno
repnz
adc
push
dec
or
xchg
rcrb
xor
pop
xchg
popl
loope
push
xchg
out
aam
sbbl
push
and
out
cmp
dec
shll
xchg
push
mov
popf
adc
clc
clc
or
clc
add
inc
inc
jg
sub
xchg
cmp
std
adc
clc
pushl
jae
push
mov
fldcw
pop
test
mov
mov
push
pop
push
in
test
mov
sub
ficompl
leave
xchg
mov
mov
pop
test
gs
aad
lahf
pop
sbb
popa
mov
cmpsl
es
lds
hlt
dec
clc
jp
cmpsl
orb
jne
mov
adc
cmp
xchg
lea
pop
pop
test
scas
or
in
sub
test
xchg
mov
dec
sub
addr16
sbb
pop
sub
adc
cmp
dec
inc
add
push
jae
xlat
and
ljmp
popa
sbb
cltd
rcrl
xor
xchg
sahf
pop
shlb
movl
mov
sbbb
xor
lret
or
lods
and
inc
sbb
insl
and
mov
push
dec
xchg
loope
shll
nop
add
or
add
mov
daa
xor
sub
sbb
inc
lret
jns
call
inc
xchg
imul
cmp
mov
fnstcw
add
pop
mov
xchg
cltd
or
sti
or
push
jmp
dec
adc
push
fsubrp
mov
or
lcall
jae
outsl
insb
mov
loopne
pop
inc
out
fists
push
pusha
or
jb
arpl
es
dec
jae
pop
jg
xchg
mov
pusha
jl
jne
lds
mov
cwtl
aas
dec
test
mov
aad
push
ljmp
lds
popf
xchg
lret
push
pop
popa
mov
pop
mov
fs
ds
mov
dec
jne
call
adc
out
mov
cmpsl
fdivrs
pop
scas
sbb
xchg
rorl
or
in
adc
jge
rorl
orl
mov
push
subb
mov
stos
fdivs
lock
ror
test
faddl
add
mov
stos
test
sub
dec
fs
icebp
jmp
xchg
jb
mov
ljmp
lods
cmp
dec
add
cli
cmpsl
sbb
faddl
ds
or
enter
outsb
cmpsb
jecxz
dec
fdivrs
sbb
mov
popa
mov
mov
adc
rorl
mov
std
shll
cmpsl
cmp
push
lret
scas
decb
std
lahf
push
popf
lock
scas
sub
roll
jge
add
out
mov
push
xchg
dec
shll
imul
iret
mov
aam
sub
and
push
test
fsubl
idiv
mov
lock
hlt
cmp
inc
bound
xor
aaa
xchg
sbb
in
adc
cli
dec
jge
dec
and
movsl
jb
mov
pop
push
add
inc
and
push
lods
and
sub
gs
pushl
inc
adc
add
lret
in
mov
cmp
into
jmp
cmp
add
jecxz
enter
and
nop
cmp
xor
pusha
cmp
push
mov
std
mov
test
xchg
lea
orb
mov
lcall
scas
adc
pop
adc
repz
inc
dec
mov
sbb
outsb
mov
jne
inc
dec
outsl
jmp
xor
cmp
jmp
ret
add
add
loopne
xor
adc
pushf
int3
rorb
aaa
xchg
notl
push
lret
lods
sti
dec
push
push
int3
jp
test
mov
cmp
es
aam
fnstcw
jecxz
roll
sbb
sbb
pop
lret
fdivrl
mov
xchg
add
movsb
cmp
aaa
lea
xchg
adc
mov
mull
mov
or
jo
dec
call
and
pusha
or
or
imul
adc
ja
pop
movsb
jbe
cld
sub
fwait
or
mov
sub
ret
xor
sbb
jne
in
fstl
gs
pop
js
inc
iret
add
ss
mov
es
or
inc
xor
outsb
jns
stc
icebp
inc
cli
sub
adc
adc
sbb
cmp
fnstcw
pop
cltd
popf
shlb
xchg
test
sub
es
xlat
xchg
xor
jecxz
jle
cmp
iret
scas
into
cmpsb
fs
movsb
sub
sub
mov
outsl
sbb
fiadds
movsb
mov
sub
bnd
inc
popa
fmull
cld
cli
scas
insb
xor
inc
or
jnp
ljmp
mov
pop
dec
add
mov
iret
add
dec
pop
xchg
sbb
mov
shll
mov
ljmp
add
and
pop
sub
enter
add
adc
mov
push
clc
cmp
jp
daa
dec
push
dec
dec
mov
icebp
push
dec
pop
divl
push
dec
rcrl
addr16
cli
jg
repnz
jnp
mov
adc
xchg
in
jp
pop
out
mov
negb
cmp
rorl
aas
fld
test
mov
mov
push
or
inc
push
aad
pop
popa
push
scas
sbb
cmpsb
cltd
or
jno
cmp
jp
cmp
sarb
cld
stos
cmp
push
popa
jmp
mov
icebp
add
shlb
in
lods
mov
xor
mov
out
repz
lret
xor
loop
addl
ljmp
lds
ret
inc
mov
inc
or
jg
mov
jbe
and
dec
fldcw
jb
pop
jb
inc
sub
stc
stos
sub
and
test
inc
cld
xor
adc
aam
mov
push
dec
lret
dec
inc
fst
aas
rorl
lret
inc
xchg
outsb
ja
js
enter
fstpl
scas
scas
aam
add
and
mov
in
adcl
shlb
cli
rclb
sub
jo
jae
in
test
mov
jb
jmp
lret
int
fucomi
cmp
loopne
dec
or
push
shrl
inc
adcb
jle
or
ret
and
cmp
or
mov
adc
jg
mov
loopne
fisubl
xor
cmp
mov
lods
push
dec
js
pop
arpl
jmp
push
jnp
sbb
adc
aad
mov
pop
mov
sarl
call
inc
fwait
shr
cpuid
lcall
ret
and
mov
imul
mov
int
xchg
mov
and
sar
insl
popf
fsubl
xchg
dec
fildl
inc
cmp
loope
sub
mov
dec
sbb
insb
fisubrs
movl
xchg
stos
hlt
out
daa
lods
dec
push
fld
pop
je
cmp
pop
js
inc
mov
sub
in
xor
fistl
popa
fs
mov
cld
mov
mov
mov
in
or
je
pop
push
inc
inc
jge
mov
cmp
sahf
repz
pop
into
mov
test
xor
and
hlt
mov
jmp
and
stos
fs
loopne
adc
push
add
jmp
inc
cmp
mov
stos
and
std
ljmp
inc
jp
movsb
jno
pop
jmp
adc
adc
mov
in
fwait
stc
dec
filds
fadds
adcb
cmpsb
mov
addr16
in
ljmp
int3
xchg
es
sub
push
shrb
popf
movsb
add
rolb
adc
sub
incl
popa
jbe
stos
pop
mov
outsl
lea
js
iret
stos
sarl
mov
sbb
cli
fstpt
and
sbb
ds
sbb
fistpl
push
inc
push
lods
fs
xor
fstpl
and
sarb
pop
mov
xor
test
stos
xlat
leave
xchg
mov
add
pop
mov
out
dec
cmpsl
movsb
mov
mov
mov
and
jge
scas
enter
test
xchg
mov
sub
loop
lock
adc
or
dec
sub
adcb
or
push
dec
hlt
mov
inc
out
leave
fwait
out
push
pusha
dec
rcrl
lods
mov
imul
pop
fistl
mov
into
aaa
xchg
sub
cmp
insb
nop
pop
or
mov
fs
stos
out
and
out
orl
int
data16
sarl
test
inc
mov
pop
add
xchg
pop
sub
sub
cmc
jmp
testb
das
adc
cli
lds
jnp
testb
shl
dec
mov
fisubl
mov
bound
decl
pop
int3
jo
add
lds
pop
dec
or
or
adc
jbe
repz
loop
into
push
movsl
sub
jno
sub
aas
cmp
loopne
scas
fwait
ljmp
mov
and
mov
pop
movsl
popa
repz
and
jns
mov
mov
fcmovnu
loop
push
mov
sbb
inc
inc
popa
enter
add
add
sub
mov
and
push
add
lds
mov
popa
dec
test
jg
int3
mov
push
xor
add
leave
push
xchg
ljmp
sarl
daa
cmpsb
outsb
or
rcr
test
loope
in
cltd
sbb
int
cmpsl
rcrl
leave
je
mov
xor
xchg
arpl
xchg
xchg
mov
fisubl
mov
aaa
out
in
fdecstp
mov
dec
aaa
pop
jp
int
repz
cmp
push
pop
inc
test
mov
add
test
push
repnz
es
outsl
js
and
insb
bsf
es
test
or
cmpl
call
mov
mov
nop
and
xlat
hlt
mov
mov
jno
ljmp
dec
adc
cmpsl
add
test
addr16
jb
cld
mov
sub
pop
pop
cmp
cmp
sub
mov
in
sub
test
rol
or
mov
lds
hlt
add
cmpl
cmp
pop
imul
out
sbb
les
mov
xchg
mov
test
or
popa
mov
jmp
outsl
cmpsl
dec
leave
test
stc
daa
push
pop
dec
or
popf
push
cmp
ja
or
outsl
push
xchg
push
out
sbb
dec
push
test
insb
cli
xor
inc
sub
xor
dec
pop
mov
xor
movhps
pop
mov
iret
loop
fwait
rcr
push
je
mov
pop
jnp
mov
lock
in
addr16
push
and
out
in
xor
in
fcoml
fcomip
pop
ret
out
mov
pushf
mov
pop
sub
xlat
sub
jb
jbe
popl
xchg
adc
add
add
loop
or
insl
pusha
sbb
or
pop
in
push
pop
adc
adc
shrb
cwtl
lds
push
xchg
lret
mov
std
push
orb
adc
dec
daa
call
xlat
add
sbb
ss
inc
shrb
testb
sub
xchg
mov
cmp
js
mov
pop
adc
addr16
rcrb
adc
or
stos
push
inc
xchg
xchg
out
imul
mov
jnp
and
mov
mov
sub
pushl
add
rcrb
inc
and
inc
mov
inc
mov
sbbl
test
mov
test
cli
iret
dec
xchg
std
jmp
inc
test
dec
test
cmp
sbb
sbb
mov
orl
push
sbb
cmpsl
pop
cld
in
sub
xor
loopne
pop
in
add
sub
adc
lret
rolb
iret
std
aaa
inc
ljmp
jae
jmp
jns
pop
pop
negl
loopne
pop
in
jge
call
lds
fimuls
pop
push
push
dec
xchg
addr16
push
lea
adc
orb
sub
addr16
fbstp
fldl
repz
data16
cli
movsl
repnz
mov
rcl
js
lods
rcrb
aam
push
cmpsl
clc
and
gs
ret
nop
cli
inc
outsb
ds
and
lcall
hlt
cmp
mov
aas
out
icebp
adc
mov
dec
je
pop
jne
sub
imul
leave
mov
stc
rorb
dec
mov
arpl
sti
imul
test
loopne
or
daa
aam
jnp
negb
xchg
xor
inc
push
add
sub
cmc
jno
jns
and
push
mov
test
jno
xchg
mov
or
sbb
push
push
pushf
pop
daa
divb
xor
cmp
jg
data16
dec
jecxz
in
lods
jmp
loop
fsubs
xchg
int
in
ror
sub
dec
sub
jo
mov
or
sub
add
lock
xchg
roll
add
sub
and
in
inc
jp
push
movsb
dec
enter
ret
cmpsl
xchg
pop
inc
mov
mov
jns
std
mov
sub
adc
je
shlb
fiadds
pop
adc
or
scas
sub
or
clc
sbb
push
or
repnz
inc
roll
insb
popa
cmpb
call
dec
lret
push
daa
or
jp
pop
jns
ljmp
cmpsb
daa
fs
rcll
xor
in
insb
sub
xor
pop
inc
pop
shlb
popf
aam
movsb
add
stc
ja
hlt
sub
mov
dec
test
in
imul
in
test
mov
jns
xlat
xor
pop
mov
push
inc
mov
mov
movsb
notb
push
ds
mov
or
mov
push
insb
iret
pushf
jecxz
in
insb
xlat
jl
or
jg
cli
fisubl
aam
xor
cwtl
daa
out
ret
sbb
loop
inc
popa
pop
and
mov
clc
mov
sub
lock
mov
out
xchg
inc
lea
rclb
pop
pop
stos
xchg
pop
xchg
clc
jecxz
cmp
inc
cmpsl
cmp
jle
out
scas
stos
ja
aaa
pop
gs
mov
adc
sub
push
repz
movsb
inc
push
out
movsl
pop
mov
lods
inc
cmpsb
and
fdivr
lcall
mov
mov
nop
outsl
inc
add
sub
mov
stc
cli
movsl
lahf
ret
mov
pop
push
fiadds
xchg
or
jg
and
das
lcall
push
andb
sbb
pop
out
loop
cmpb
les
sub
mov
fisubs
shll
add
push
pop
cmp
pop
std
fs
push
sti
cmp
pop
fwait
icebp
push
cmp
xor
mov
loop
sub
in
es
dec
leave
jmp
outsl
pop
mov
mov
jge
inc
in
cmp
lahf
cmp
or
pop
jno
jbe
enter
mov
stos
sbb
xchg
xchg
mov
fcomps
lods
pop
aaa
xor
or
shrb
mov
test
lcall
scas
nop
int
pop
adc
mov
data16
push
mov
xchg
add
jecxz
mov
and
roll
popa
rolb
or
push
adc
fbld
movsb
lds
in
inc
pop
lret
repnz
dec
cmp
ret
xor
mov
fisubrl
xlat
push
fimuls
std
pop
mov
fstl
cmp
ret
xor
xor
xchg
or
aas
jl
test
mov
aad
lret
mov
add
pop
xorb
sub
or
and
imul
xchg
or
push
nop
xor
inc
or
or
add
sub
inc
lods
ds
decb
repnz
lds
pop
adc
cmp
cmpsl
cmc
jbe
les
and
xor
lcall
inc
push
cwtl
nop
jno
mov
shl
jae
addr16
push
cli
mov
ja
mov
outsl
movsl
add
xor
sub
jge
pop
jo
adc
cmp
and
mov
pop
adc
lret
pop
hlt
add
js
inc
ficomps
mov
pop
aam
out
stos
xrelease
lcall
rorl
icebp
cmp
add
ret
les
in
jae
lea
cmp
mov
mov
rorb
or
xchg
jae
lret
les
pop
ret
ljmp
xchg
inc
sti
out
cmp
mov
fildll
xchg
jmp
mov
aaa
adc
xchg
loope
mov
icebp
cmc
cmpsl
pusha
cmp
lret
xchg
and
inc
cld
imul
in
jbe
popf
lds
aad
xchg
out
js
imul
movsl
arpl
sahf
push
jo
loopne
xchg
push
cs
test
dec
add
clc
and
inc
popf
adc
into
xor
lods
lcall
adc
stos
jne
xchg
cmp
mov
push
test
adc
fidivs
arpl
mov
lea
sbb
in
ret
dec
mov
mov
mov
shrl
cwtl
mov
jl
pop
sbbb
outsb
mov
test
jmp
stos
mov
ret
push
xlat
mov
adc
push
xchg
pop
mov
les
rolb
jb
adc
dec
and
faddl
ljmp
aam
and
jmp
das
test
out
lret
scas
movl
in
rorb
inc
outsl
sbb
and
sarb
das
jg
popf
or
lods
xchg
mov
icebp
mov
mov
bound
dec
movsb
pop
sbb
rcrb
bound
jecxz
cmp
stc
xchg
lahf
or
out
dec
push
push
sbb
adc
imul
xchg
jecxz
pushf
dec
jle
jns
sbb
stc
xorb
and
stos
decl
ret
or
je
addb
dec
dec
jbe
aas
int3
shl
imul
mov
inc
cmp
lahf
lods
cli
inc
pop
sti
sbb
std
arpl
add
jno
sub
outsl
xorl
enter
dec
inc
adc
int3
xor
das
fistpll
fistpll
jmp
std
es
pop
rorb
insb
jb
popl
push
in
jg
mov
xchg
inc
inc
and
add
cs
loope
jle
test
lahf
sbb
mov
insb
cmp
bound
push
sub
pop
adc
xchg
push
sbb
movsl
out
mov
jo
std
pop
data16
stos
add
js
push
push
rcr
add
pop
dec
mov
mov
dec
xchg
dec
rcrl
cmp
adc
xchg
jl
cmc
dec
sub
enter
fwait
sahf
xchg
insl
sbb
mov
mov
into
sbb
fistpll
dec
sub
fnstenv
shll
inc
bound
xchg
arpl
scas
jnp
lret
sub
aas
xor
outsb
xchg
jne
daa
inc
inc
adc
fwait
jb
lea
fidivrs
cli
add
negl
movsl
fnsave
dec
or
pop
adc
mov
call
xchg
mov
dec
pop
ds
adc
sahf
mov
mov
xchg
pop
jne
movsl
mov
inc
fs
mov
lcall
dec
addl
xchg
repnz
sarb
push
insl
adc
stc
xor
and
aad
mov
cmp
testb
loope
jmp
movsl
mov
dec
cmp
ds
test
enter
push
ljmp
jmp
dec
push
sub
icebp
push
shlb
iret
mov
add
stos
out
test
jl
or
cmc
add
shrb
gs
pop
andl
xlat
pop
mov
pop
out
inc
jp
push
add
pop
dec
lods
in
pop
jne
add
iret
mov
push
and
jp
cmp
sbb
call
sbb
or
ja
or
loop
push
addr16
sahf
fnstcw
ret
cld
fidivl
push
neg
adc
dec
adc
xchg
mov
cmp
xchg
jno
lea
sbb
stos
aas
dec
call
out
insb
adc
xchg
lahf
int
mov
jle
add
shll
xlat
xchg
push
xchg
sahf
jle
inc
icebp
inc
popf
sbb
lods
stc
sahf
clc
mov
cmpsl
jmp
sub
shlb
int
lcall
xchg
xchg
stc
repnz
nop
or
xor
jns
push
ffreep
inc
push
out
adc
out
clc
xchg
mov
mov
andb
lret
push
cs
mov
fisubl
ret
xchg
int
sub
inc
fwait
icebp
xchg
rorb
mov
push
jo
in
sbb
push
imul
test
add
push
adc
cmp
rolb
jo
rorl
mov
sbb
add
xor
loop
mov
ret
iret
lds
jmp
jmp
adc
push
sub
jle
aaa
xchg
dec
icebp
jl
dec
mov
xlat
jl
stos
sahf
ljmp
and
xor
cmp
mov
dec
movsl
stos
aas
mov
pop
mov
sub
sbb
movsl
aaa
lods
mov
dec
mov
mov
mov
leave
ja
sub
fidivs
sbb
cmc
nop
adc
dec
cmp
lret
sbb
mov
in
mov
lock
repnz
xchg
fisubrl
popa
shr
dec
roll
cmp
clc
adc
push
sti
lcall
stos
gs
dec
ljmp
sub
lret
and
addr16
jge
fnstenv
add
rorb
jmp
pop
popf
das
jle
movsb
push
test
loopne
or
inc
mov
push
cld
xchg
lret
pop
xor
cmpsl
mov
inc
insl
aas
adc
in
sbbb
outsb
icebp
jmp
jb
sbb
mov
in
mov
ret
adc
add
push
fwait
or
jmp
or
cmp
insl
mov
push
mov
fsubl
sub
xchg
into
movsl
push
add
and
in
mov
ror
push
xor
fs
lods
mov
lock
pop
cmpl
jne
sbb
mov
outsb
insl
in
sbb
testb
sarl
ja
pop
adc
shlb
scas
jno
shlb
cmc
ljmp
jecxz
push
inc
xchg
xchg
fwait
xchg
idivb
popf
in
add
jl
fwait
popf
cmp
mov
rorb
xchg
pop
xor
mov
xor
sar
pusha
xchg
vmovupd
pop
or
push
xor
mov
hlt
movsl
xchg
scas
push
inc
popf
js
fs
pop
int3
adc
stos
mov
lds
jge
add
cmpsl
sbb
test
pop
cmpsb
and
cltd
pushl
cwtl
cmp
inc
js
movsb
dec
cltd
adc
push
dec
loopne
aam
rolb
in
cmpsl
dec
cmp
mov
imul
imul
sahf
push
nop
add
jo
and
pop
push
arpl
dec
fsubs
adc
jle
add
adc
add
mov
and
xchg
fnstsw
xchg
dec
aaa
aam
mov
lods
outsb
jno
sahf
ja
and
and
add
mov
xor
and
out
pop
adc
or
out
add
pop
dec
int
mov
add
sub
fiadds
mov
out
mov
jo
and
test
and
cmpsb
jbe
sbb
rolb
cmpsb
add
add
or
push
dec
mov
mov
add
and
inc
push
out
out
add
and
jg
sub
pop
cwtl
and
or
out
mov
pop
xchg
pop
dec
jb
add
mov
add
mov
je
or
not
ret
in
dec
add
hlt
xchg
mov
ret
notl
daa
xchg
ret
cmp
mov
int3
or
in
adc
cwtl
pop
mov
pop
arpl
daa
fbld
xchg
movsb
push
push
sbb
orl
and
rorb
mov
dec
sub
cmpsb
add
adc
inc
xor
sahf
jecxz
mov
jbe
mov
inc
and
pusha
mov
sbb
outsl
mov
jecxz
jl
imul
fidivrl
jns
sbb
push
imul
inc
push
movsb
inc
mov
xchg
repz
fisubl
jle
mov
dec
jg
pop
jbe
into
xchg
repz
imul
inc
aam
aam
xchg
mov
jle
mov
pop
inc
leave
shl
push
pop
lods
rcll
jge
repnz
push
adc
cmp
jge
mov
lret
inc
adc
adc
mov
cld
in
lahf
xchg
xchg
mov
jmp
arpl
mov
push
xchg
fiadds
loopne
xchg
jmp
imul
sub
aam
inc
subb
inc
arpl
pop
mov
fwait
loop
imul
popa
inc
std
sub
and
pop
hlt
fsub
test
in
sbb
inc
mov
dec
adc
xchg
out
or
or
mov
jge
inc
loopne
dec
adc
std
leave
mov
test
mov
sub
stos
mov
dec
lea
arpl
mov
cld
jecxz
jno
jne
sbb
dec
push
jge
dec
dec
call
nop
clc
push
add
cwtl
scas
inc
xchg
pushf
icebp
adc
jmp
mov
std
mov
xor
or
fldl
pop
xchg
push
adc
shrb
bound
fmull
ljmp
pop
jns
ret
daa
and
sti
test
jb
xchg
xor
cmpsl
ror
testl
mov
xor
sbb
clc
jbe
int
movsl
sub
jbe
add
mov
push
adc
cmp
xchg
ud1
or
in
mov
xchg
fsubs
loopne
mov
sub
in
sbb
lods
mov
into
scas
lret
aad
and
orb
add
mov
jp
sahf
lods
mov
add
outsb
push
push
inc
lods
inc
mov
jp
nop
dec
decb
cmpsb
pushf
dec
jae
mulb
leave
push
and
adc
jo
cld
fdivrs
mov
or
sbb
dec
inc
jb
xchg
add
sub
std
subl
inc
and
add
push
sti
ret
pop
fwait
shlw
inc
and
push
repnz
test
jg
pop
cli
sub
mov
hlt
mov
jae
adc
cltd
xor
mov
jecxz
cwtl
add
leave
push
add
jb
lods
scas
xor
movsl
xchg
and
mov
sbb
cmp
cmpl
mov
lock
jnp
push
popl
jp
mov
mov
jae
out
xchg
movsb
stc
adc
lds
repnz
pusha
insl
or
push
shr
lret
andb
add
lcall
add
mov
lcall
cmp
popf
int3
popa
jmp
mov
push
cmp
mov
iret
xchg
xor
cmp
sbb
sbb
fldcw
clc
pop
xchg
jl
dec
or
sarb
xchg
fildl
cmp
jno
hlt
leave
or
mov
in
xor
cwtl
dec
cmpl
fistpl
ja
or
xlat
sbb
pop
xlat
pop
adc
inc
loop
push
add
scas
lods
popf
hlt
rolb
ds
xchg
xchg
xor
mov
jecxz
push
repz
push
inc
jle
adc
push
movsl
pop
dec
jg
in
mov
cmp
cmpsb
mov
rolb
aam
aaa
pop
push
addps
xor
in
movsb
gs
stos
jg
jecxz
sbb
mov
lock
and
sub
xchg
sbb
jo
push
adc
push
xorl
pop
sub
in
xchg
jge
sub
xchg
or
leave
ret
and
xchg
cmp
inc
mov
mov
or
adc
mov
test
push
testl
das
cmp
dec
fmuls
and
in
inc
scas
dec
lds
mov
mov
imulb
mov
mov
jno
or
jge
cmp
mov
inc
mov
mov
inc
shlb
pop
and
lock
xchg
cmp
jle
cmc
xchg
cmp
xor
mov
jl
outsl
dec
shrb
loop
aad
cmp
xchg
push
arpl
cli
mov
xchg
sub
ret
push
xor
out
arpl
dec
arpl
sbb
cld
punpckhbw
push
cli
jae
cmpsl
sub
xor
sbb
inc
cmp
cmp
loop
ret
sub
icebp
mov
insl
xchg
inc
lahf
lods
lds
mov
inc
jl
add
dec
pushf
outsb
adc
rcl
insb
scas
sbb
pop
movsb
mov
ret
arpl
inc
daa
ret
lcall
fists
jecxz
mov
adc
cmp
data16
mov
gs
rclb
xchg
and
pop
rorl
int3
loopne
sub
movsb
aas
pop
sahf
fistpl
mov
out
movsb
adc
cli
repnz
lods
test
lds
or
xor
push
movsb
jbe
push
xor
xchg
sbb
pop
movsb
call
in
inc
testl
jg
add
sbb
push
iret
test
insl
mov
aad
dec
rcl
dec
dec
cmpsl
out
dec
pop
in
xchg
or
push
adc
xchg
push
jl
xchg
repz
xchg
xor
xor
adc
lret
shl
cmpsl
jmp
adc
sarl
cmc
sbb
enter
jne
inc
sub
sbb
call
jecxz
sbb
mov
jb
adc
inc
push
nop
cli
jae
jmp
jae
push
push
sbb
or
pop
cmp
mov
dec
stos
into
and
mov
and
push
cmp
int
sub
push
adc
mov
push
push
scas
pop
out
push
sbb
inc
add
jg
cwtl
stos
cmp
xchg
add
lea
test
add
movsl
stos
iret
xchg
or
hlt
ja
push
outsl
cltd
cmpsl
inc
pushf
in
or
test
bndldx
data16
add
lret
add
fildll
jo
aas
cltd
mov
mov
pop
stc
hlt
aam
mov
jle
mov
mov
movsl
outsl
xchg
rorl
pop
or
and
int
xor
add
mov
ds
shrl
aad
mov
ret
push
sbb
faddp
out
into
adc
xchg
out
out
cmpsb
push
mov
dec
sbb
insb
sbb
adc
and
dec
movsb
icebp
mov
cmpl
jecxz
xchg
sbb
xchg
mov
pop
sub
mov
pop
adc
scas
scas
jno
mov
sub
pop
into
mov
cmpl
push
stos
jae
call
jne
pop
cmp
in
mov
push
adc
jns
ficompl
mov
xlat
or
lods
fwait
test
call
cltd
mov
xor
sub
cmp
push
scas
jo
jmp
mov
mov
sub
xchg
push
ficoml
test
adc
daa
leave
in
test
ss
loopne
incl
push
mov
stc
insb
pusha
jnp
pop
les
mov
mov
fisubrs
or
cmpsb
jne
sti
lret
iret
xchg
mov
add
sub
mov
jle
mov
add
add
lahf
enter
or
and
mov
add
ficompl
ffree
jle
call
outsw
fnstcw
pop
loope
mov
or
sbb
popa
push
mov
iret
subl
out
daa
out
je
in
int3
mov
push
roll
std
test
lcall
sarl
fsubs
mulb
cmpsl
je
add
leave
xchg
xchg
xlat
loop
mov
add
xchg
std
fdecstp
xchg
jecxz
je
test
pop
insb
inc
lret
mov
xchg
mov
jle
mov
mov
xor
push
enter
aad
lahf
push
hlt
rcrb
addl
cmpsb
out
int3
adc
jbe
arpl
push
orl
mov
int3
test
mov
call
dec
pop
cmpsl
xchg
mov
lcall
stc
stc
cmp
sti
mov
stos
inc
out
mov
mov
push
pop
scas
cwtl
rolb
mov
sbb
subl
pop
pushw
sub
stc
mov
jb
pusha
jg
stos
xrelease
into
lea
pop
push
scas
mov
dec
ficomps
aaa
and
lret
and
arpl
add
jbe
dec
leave
mov
cmp
in
add
adc
sbb
dec
pushl
mov
into
push
mov
mov
ja
cmp
iret
fldcw
lcallw
or
mov
push
repnz
sbb
dec
call
dec
das
dec
cli
ds
pop
pop
ljmp
or
cmp
cli
pop
and
lret
loope
mov
sarb
aam
push
fmull
loop
lcall
xor
loop
repz
and
idivb
pusha
andb
sbb
dec
pop
adc
pop
pop
push
jecxz
adc
in
sbb
sub
ds
mov
mov
mov
das
cltd
xlat
mov
mov
lret
cmpsl
pushf
popa
adc
add
out
push
jbe
cs
xchg
xchg
cmpl
add
xchg
stos
dec
cmpsb
sub
push
push
loope
clc
outsl
or
jmp
sub
aaa
sbb
scas
and
das
orl
out
je
scas
fsubl
jge
mov
push
test
shlb
sbb
lret
xchg
add
push
xor
ljmp
sbb
clc
and
aad
push
cmp
cmpsl
dec
or
leave
push
sbb
cmc
outsb
stos
adc
push
int
jno
xchg
aaa
outsb
js
mov
pop
jle
insl
xchg
cmp
pop
and
mov
sub
ja
mov
inc
mov
pop
mov
aam
nop
xchg
xor
sub
imul
out
gs
lret
push
sbb
xor
adc
imul
push
ret
fldcw
int
jno
jbe,pt
dec
sbb
mov
in
mov
add
pop
adc
mov
inc
adc
popf
jecxz
and
add
jne
mov
aam
xchg
xchg
testl
xor
xchg
pop
jo
jae
ret
or
incl
or
into
les
add
cltd
pop
or
fdivrp
aaa
fcomi
and
push
pop
or
mov
add
lods
and
xchg
cmp
xor
ljmp
dec
lahf
mov
mov
jp
cld
ja
or
add
jg
enter
and
jne
adc
loope
sarb
rorl
out
adc
enter
or
cmc
jo
fcomps
in
mov
stos
mov
mov
mov
mov
jle
xor
inc
cli
sub
rcl
in
push
es
cwtl
sub
cmpsl
jg
dec
lcall
xchg
mov
dec
dec
scas
pop
dec
sbb
clc
mov
fwait
dec
lea
lods
adc
cmp
mov
lcall
mov
out
orb
es
cli
push
call
and
pop
pop
ret
and
push
nop
fnsave
out
mov
ret
inc
sbb
ret
out
mov
fnstsw
enter
fsubrp
push
call
cmc
jbe
jnp
imul
or
jno
sbb
push
xlat
and
clc
inc
outsb
ds
data16
cwtl
pop
lcall
movsl
push
inc
and
push
pop
pop
into
jg
or
popf
es
mov
xchg
pop
in
or
sub
adc
fsubp
aaa
sahf
jno
pusha
sbb
scas
in
shl
xchg
imulb
fidivl
xchg
rorb
inc
andl
adc
mov
cmp
repnz
and
xchg
mov
push
roll
ds
and
xor
clc
aas
sbb
bound
pop
lret
inc
shrl
mov
jmp
test
sub
xor
xlat
repz
sarl
xchg
jb
cli
in
adc
mov
aad
aas
inc
imul
sub
aam
outsl
jno
sahf
loopne
cwtl
sub
xchg
add
cmpsl
push
cmpsl
cmp
test
das
xor
in
ja
fwait
xor
xor
ret
mov
cld
pushf
fbld
push
adc
lods
cwtl
jg
inc
cmp
out
dec
mov
mov
into
inc
adc
sub
mov
jo
shll
xor
dec
mov
test
repnz
sbbb
push
xor
es
sub
bnd
dec
repnz
out
ja
jp
dec
ret
rorb
pop
pop
push
or
push
insl
fiaddl
bound
sbb
cs
sar
push
cmp
flds
loope
mov
jo,pn
ret
add
out
xchg
mov
out
mov
scas
testb
and
fwait
sub
or
mov
push
xchg
jg
js
fiaddl
and
enter
jne
adc
and
jge
insb
loopne
sub
clc
mov
add
insb
inc
add
adc
xor
push
addb
mov
xchg
sbb
cmp
sbb
sub
xor
adc
cltd
xor
jnp,pn
mov
aad
add
bound
lcall
call
aad
addr16
ss
movl
ret
push
movsl
test
push
add
or
mov
adc
adc
sbb
add
xor
popa
sub
insl
jnp
sbb
mov
test
push
xchg
repnz
pop
sbb
cmpsb
ret
mov
inc
insb
add
push
or
add
pushf
add
in
inc
jne
sti
mulb
push
jno
push
dec
sahf
dec
push
or
jne
arpl
pop
test
add
adc
pop
ljmp
repnz
mov
out
ret
into
movsl
xchg
pop
loop
sti
mov
xchg
stos
mov
pop
loopne
popf
xchg
dec
mov
iret
sbb
dec
mov
pop
mov
lods
xor
sub
fcompl
xchg
inc
es
dec
mov
gs
imul
xor
xchg
popa
and
into
ret
lds
mov
clc
add
enter
mov
pop
xorl
xchg
repnz
cld
ds
fucomi
sbb
mov
cwtl
enter
ds
decl
loop
fsubrs
push
push
jb
insb
jecxz
adc
dec
mov
popf
mov
jbe
cld
and
aad
fstps
addr16
push
in
and
nop
mov
lock
movsl
cmp
sbb
into
lock
lea
inc
pop
mov
popa
inc
mov
loope
dec
lret
or
sub
fdiv
arpl
sahf
cmc
pushf
dec
dec
mov
adc
mov
jnp
xchg
std
subb
push
xor
inc
popf
sbb
lds
movsl
sub
nop
xchg
sub
les
enter
push
pop
jg
push
cmp
push
jge
andb
cltd
dec
xchg
push
negl
mov
mov
shlb
jmp
test
mov
clc
sub
insb
ss
or
push
int3
xchg
dec
inc
aaa
mov
arpl
dec
loope
cmp
in
sbbb
les
int
movsl
ja
xchg
je
xor
sbb
mov
add
pop
cmp
adc
fmuls
push
cld
cmpsl
adc
cmpsl
cmp
mov
jmp
push
imul
jb
sbb
test
xchg
inc
mov
psrld
xchg
and
in
lret
cli
in
test
pushf
push
popf
xor
test
and
out
mov
fwait
jns
and
inc
loop
mov
popf
cli
movsb
or
shl
scas
scas
lahf
jecxz
out
mov
pop
lret
mov
jne
cmpsb
cmovl
or
jecxz
cmpsb
jecxz
enter
icebp
or
sbb
add
stos
or
ss
mov
lds
mov
pop
mov
adc
sub
fsubs
addr16
adc
outsb
insl
pop
xchg
jo
jmp
push
inc
or
jge
xchg
popf
rcl
decl
cmpsl
sub
notl
sub
daa
int3
imul
roll
leave
movsb
push
push
pusha
mov
loop
sub
dec
cmp
or
aas
inc
loop
xchg
sbb
xchg
les
je
lods
inc
sub
jae
xchg
jbe
sti
rcl
gs
sbb
xchg
dec
push
adc
fsub
icebp
inc
in
mov
and
insl
movsb
movsl
sti
lods
cmp
aad
xor
mov
push
rorb
mov
fcmovnu
les
mov
mov
mov
mov
orb
cmp
cmp
lods
aad
add
pop
test
xor
shlb
movsb
rorl
cmp
imul
in
cmpsb
ljmp
sub
or
cwtl
pop
movsl
sbb
movsl
into
cmp
push
xor
fcomi
mov
adc
or
lret
push
push
mov
pusha
pxor
clc
push
arpl
mov
or
stos
pop
adc
push
test
lock
sbb
fwait
jo
sbbb
pop
or
scas
ss
and
or
xchg
repnz
dec
vcmpps
lahf
inc
flds
data16
jnp
mov
nop
je
out
pop
popf
arpl
and
mov
jle
test
xlat
jne
dec
dec
movsb
loop
sbb
shll
jns
pop
mov
into
lods
lods
xchg
and
xchg
mov
jbe
insl
add
and
mov
jge
jb
sbb
in
xchg
xor
sub
clc
cmpsl
ret
iret
mov
mov
clc
jnp
push
add
arpl
and
std
das
enter
faddp
mov
gs
or
and
arpl
shl
mov
loopne
jge
or
fnstenv
adc
xchg
jp
cmpsl
push
sbb
pop
sub
mov
add
repnz
mov
inc
jbe
ret
pop
aaa
xlat
add
xchg
and
in
stos
push
cld
je
fwait
or
xchg
xor
in
mov
call
or
lods
dec
shr
pop
out
mov
gs
int3
lret
jmp
leave
push
jle
addr16
xor
pop
inc
or
mov
mov
pop
dec
adc
int3
fs
inc
pop
mov
mov
jmp
test
adc
adc
and
cmp
mov
arpl
sub
clc
sbb
sub
jns
sbb
notl
xor
xchg
je
cmp
lahf
jecxz
sub
hlt
subb
inc
mov
shrl
or
mov
jl
pop
mov
push
clc
jge
sbb
jne
push
aaa
loope
rcrl
idivb
mov
cmp
lcall
sub
push
popa
shrl
push
xchg
sub
aas
mov
mov
push
movsb
push
sub
test
mov
out
dec
test
jmp
fdivrs
les
xchg
enter
leave
push
inc
dec
jae
cmp
or
insl
imul
sbb
add
push
imul
jg
ds
fmull
out
shrb
push
xor
pop
cwtl
xchg
push
cwtl
cmpsb
jne
mov
push
xor
adc
ss
in
dec
shll
in
in
repz
out
movsl
stc
movsb
pop
sub
sub
sbb
jmp
fstpl
xchg
icebp
xchg
mov
jecxz
out
aad
call
xor
out
fstpt
mov
jp
push
arpl
popa
cmpsl
mov
in
sbb
movsb
pop
orl
push
cltd
add
pop
xchg
stc
dec
xor
add
sbb
mov
adc
vpmuludq
push
mov
pop
jle
or
subb
outsb
jle
loop
push
jbe
stc
repnz
idiv
popf
popa
aam
fcomps
js
cs
pop
inc
jmp
sub
add
xor
cmp
jge
jne
hlt
xchg
push
jno
and
adc
out
add
je
ss
lret
daa
cmp
out
aad
sbb
hlt
imul
push
xor
or
jo
ja
popl
pop
subl
adc
scas
test
ljmp
outsb
inc
xchg
idiv
add
xchg
sbb
cltd
mov
mov
testb
dec
sbb
sub
xor
rolb
ds
setb
ficoms
mov
out
mov
adc
jecxz
mov
daa
xchg
xlat
push
cld
int3
push
enter
sbb
fwait
test
imul
stos
in
mov
jle
push
xchg
jge
rorl
sbb
adc
mov
adc
cwtl
pusha
sbb
push
jl
jecxz
sbb
add
aam
sub
jle
shlb
fisubs
cmp
fdivl
jnp
cmp
xor
les
xor
pop
xchg
add
add
mov
and
cmp
mov
pop
cmp
orb
mov
xchg
cmp
int3
ss
xlat
xor
daa
mov
fstpl
jle
iret
xchg
daa
cmpsb
or
pushf
adc
stc
jmp
imul
std
repnz
jmp
push
ja
out
clc
jno
push
cmp
pop
pushf
pop
roll
and
mov
popf
cmp
mov
pop
shlb
fadds
fs
outsb
xchg
sub
xchg
stc
xor
jo
ret
dec
mov
call
mov
or
mov
into
pop
inc
inc
lret
or
pop
cltd
mov
pop
in
inc
stc
stc
inc
cs
movsl
mull
sub
cmp
fdivr
lock
mov
out
popw
out
dec
sbb
add
es
add
push
dec
fildll
lods
mov
adc
xor
xchg
adc
cwtl
cmpsb
jb
je
lret
xchg
int3
sti
inc
lock
popa
out
or
cmpsl
repz
test
cwtl
test
mov
rorl
outsb
dec
sbb
aaa
inc
scas
clc
inc
addl
sub
fldcw
into
lods
out
xchg
mov
negb
test
sbb
iret
inc
cmp
popa
pmulhw
sub
arpl
and
cmpsl
cld
aas
mov
test
pushf
lret
out
imulb
mov
add
xchg
add
jnp
jg
push
sub
jbe
adc
and
or
sbb
cmp
push
lret
jae
sub
adc
fcmovbe
fs
clc
inc
mov
push
and
fwait
sti
mov
add
cld
lea
ss
rorb
repnz
shll
push
push
xchg
mov
push
dec
dec
iret
movsl
jle
jp
fidivrs
mov
mov
cmp
push
inc
sub
cmp
cmpsl
lods
dec
dec
push
rclb
jno
sbb
jmp
push
aas
xchg
sub
pop
imul
dec
dec
push
inc
xor
aas
fsub
inc
mov
lret
adc
mov
mov
sbb
push
out
mov
cld
jo
or
lds
pop
pop
sahf
and
outsl
iret
dec
js
rcll
fisttps
xchg
out
fisttps
and
addb
int3
pop
int3
jg
test
lahf
lret
dec
pop
ficomps
stos
dec
mov
or
sub
fists
jmp
push
mov
in
pop
ds
push
sub
and
and
add
cmp
sti
subb
mov
int3
ror
dec
push
xor
out
icebp
jno
xchg
pop
fwait
mov
pop
cmp
xchg
push
jg
in
sub
into
mov
stos
fimull
mov
mov
out
rorl
fistps
es
in
push
cli
cs
dec
mov
push
push
daa
test
leave
in
and
mov
cwtl
adc
loopne
imul
dec
push
mov
cmp
mov
fstpt
enter
sbb
out
lahf
loope
push
cmp
int
and
jno
repnz
cmpb
mov
adc
xchg
arpl
pop
test
inc
loop
and
xor
mov
inc
sub
jbe
int
inc
xor
mov
jmp
fnop
dec
ss
adc
push
call
aad
cld
jbe
stos
outsl
dec
ficomps
fs
inc
add
dec
cmpsl
subb
fcomps
xor
adc
imul
adc
mov
lret
xchg
ja
jmp
popa
test
adc
sbb
scas
sub
aas
cmpsb
cmc
stos
mov
je
push
inc
movsl
popf
adc
xchg
insb
sbb
push
test
out
xor
int
fwait
rclb
ficoml
dec
cmp
or
test
sub
inc
xorl
in
sbb
xchg
lret
lods
mov
xor
das
mov
or
shlb
inc
ds
cmpsb
loope
cmc
punpckhdq
aas
testl
scas
shrl
pop
mov
push
daa
lret
imull
pusha
mov
call
mov
and
mov
adc
or
inc
mov
js
popa
lret
ljmpw
ret
mov
cmp
push
outsl
rcr
jmp
add
push
and
sbb
push
fwait
cmpsl
inc
shll
add
pop
adc
out
shlb
jl
inc
int
xchg
mov
inc
mov
je
xchg
sbb
xchg
pop
or
gs
push
xchg
dec
mov
fwait
xchg
mov
jnp
mov
enter
inc
lods
cmp
xchg
cmpsl
cwtl
adc
xchg
imul
roll
icebp
jo
rorl
adc
into
aas
mov
std
rorl
int3
cmovle
sbbl
ficomps
popa
scas
frstor
sbb
into
xchg
sbb
mov
adc
mov
push
out
fs
xor
mov
cld
repz
jno
inc
shlb
test
gs
push
mov
mov
pusha
repz
lods
ss
gs
movsb
icebp
test
cmc
mov
xchg
mov
push
add
pop
lds
int3
sbb
dec
bound
popf
and
xchg
ljmp
sub
mov
shrb
inc
mov
pushl
adc
in
and
push
mov
mov
fiadds
bound
test
pop
in
cmp
jns
out
jl
adc
mov
out
insb
test
test
push
sub
cs
sbb
pop
mov
test
int
sub
cmp
sub
imul
inc
imul
mov
dec
xor
add
fmuls
inc
data16
sbb
cmc
popf
xor
or
mov
dec
dec
mov
sbb
add
cmp
mov
fdivl
fadds
dec
mov
cmovge
insl
pop
popa
xchg
mov
push
scas
sti
outsb
jno
pop
pop
mov
cs
pop
loop
rorb
cmc
movsl
dec
inc
mov
data16
lret
push
mov
jge
repz
mov
adc
shl
xor
jg
lea
inc
loop
ljmp
and
push
lock
xchg
dec
jg
jbe
mov
enter
orl
aad
ds
dec
inc
xchg
push
jl
inc
sub
xlat
ljmp
pop
fildl
xchg
data16
fsts
ss
push
ljmp
cmp
mov
sub
testl
cwtl
ds
aas
xchg
mov
enter
xor
inc
or
dec
mov
pushf
ficoms
pop
adc
push
pop
aaa
adc
stos
sbb
mov
push
leave
lods
jl
or
dec
rcr
cmpsb
mov
dec
lds
aad
daa
pop
mov
xor
lds
clc
mov
cmp
push
push
leave
cmp
lret
jg
pop
lods
stos
mov
xchg
push
fwait
in
vpcomw
jl
lret
ret
insb
orl
aad
aad
inc
sbbl
cmp
mov
adc
bound
andb
pop
jbe
jp
push
out
out
fistl
stos
fdivrl
or
mov
pop
or
in
dec
adc
sub
pop
aad
mov
and
pop
cmp
test
pusha
pop
jo
push
inc
addr16
sbb
es
mov
jns
and
in
outsl
push
mov
mov
mov
fnstcw
dec
mov
fnstsw
adc
mov
test
rcr
jae
mov
or
jo
repnz
stos
cltd
fstpt
or
mov
push
pop
inc
xchg
push
or
fwait
add
xchg
push
mull
xchg
sbbb
mov
mov
push
and
xchg
in
scas
mov
shl
and
out
fwait
stos
not
and
adc
cmp
mov
fisubl
jb
sub
mov
cmp
jge
xlat
je
lcall
cmp
mov
mov
inc
idivb
insb
push
stc
dec
or
fdivs
lds
aad
test
jns
mov
in
jne
sub
jae
dec
add
dec
repz
mov
jle
xor
popf
pop
stc
and
lds
mov
repnz
sahf
loope
inc
fidivl
pusha
adc
inc
test
out
mov
imul
insl
sbb
inc
adcb
cs
mov
jmp
mov
leave
sbb
add
mov
insb
test
enter
and
in
add
jne
sub
mov
arpl
inc
mov
test
xchg
es
xor
dec
adc
shlb
dec
rorl
mov
std
pop
push
pop
jae
mov
hlt
push
mov
hlt
lds
popa
out
fstl
test
outsb
pop
fiadds
in
sti
repz
sub
repnz
push
push
push
hlt
mov
xlat
sahf
testb
jl
jg
and
ljmp
mov
xor
stc
cmp
pop
pop
or
popa
push
mov
cwtl
mov
cmovo
outsl
rcrb
mov
push
fwait
cmp
mov
sub
pop
jo
fwait
xchg
fmul
adc
cmc
lock
xor
adc
sbb
ficomps
cli
push
pushf
sbb
sbb
out
sbb
fs
in
loopne
js
lock
xchg
xchg
adc
sub
cmp
pushf
and
mov
dec
sbb
rcr
sub
add
add
icebp
test
loope
pop
incl
cmp
xor
or
and
push
adc
outsl
xor
rolb
or
out
pop
pop
dec
mov
addr16
adc
sbb
adc
jo
mov
mov
outsl
pop
add
or
fs
gs
pop
shll
pop
pop
sbb
mov
sbb
rorl
xchg
sbb
cmp
out
dec
inc
mov
xor
jne
push
inc
pop
out
imul
scas
and
enter
push
out
lret
repnz
adc
int3
mov
sub
cli
or
filds
jo
mov
xchg
mov
addr16
lods
jno
outsl
xor
imul
fidivl
loope
int3
lahf
lcall
and
mov
es
mov
cmc
xchg
sbb
test
push
and
mov
push
xchg
xchg
aad
pop
sbb
aas
test
fcmovnu
scas
cmc
ret
daa
pushl
sbb
jo
mov
and
mov
or
stc
cmc
add
mov
push
flds
mov
pop
subl
insl
dec
mov
pop
jecxz
cmp
into
loop
cmp
lahf
push
dec
push
icebp
mov
add
js
decl
jmp
pop
lcall
mov
stos
jno
push
jge
pop
sahf
fcompl
dec
cmp
rorb
adc
add
outsb
out
popa
mov
and
sarl
jmp
loope
imul
pop
cmp
das
mov
addl
pop
faddl
xor
arpl
dec
nop
dec
cwtl
inc
jb
pop
jne
loope
mov
fs
ret
fstpt
pop
cmp
cmc
jne
fcom
mov
dec
cmp
fsubr
push
dec
sahf
fmull
imul
nop
outsl
cmp
jp
cmpsb
aad
and
fisttpll
add
xchg
mov
mov
dec
stc
orl
cmp
push
stos
xor
or
loope
xor
clc
fmul
jp
f2xm1
int3
cwtl
and
pop
jge
lods
hlt
jl
add
mov
push
sub
push
mov
in
les
inc
mov
mov
mov
cmc
lret
lock
pop
ret
jp
jg
aaa
add
push
mov
xchg
push
pop
or
subb
add
gs
jecxz
in
in
cs
addr16
imul
xor
int3
sahf
pop
jmp
lods
nop
shr
push
rorb
pushf
addl
mov
push
loope
lret
mov
imul
js,pn
cmpsl
mov
fnstcw
test
xchg
dec
inc
or
push
mov
sbb
mov
je
jecxz
adc
nop
test
fldl
aad
aas
xchg
push
ljmp
repz
sub
inc
leave
push
iret
sub
cmpsb
out
les
stos
xorl
inc
ss
xor
mov
xchg
out
sub
lds
dec
jmp
jae
out
fwait
xor
jp
fcomi
imul
mov
push
adc
sbb
pop
std
sub
sbb
inc
jbe
in
xor
inc
cmp
ret
push
push
cmp
ja
cmp
into
dec
and
xor
outsl
jnp
xchg
imul
fistpl
push
inc
mov
jmp
test
pop
push
sbb
inc
inc
ret
loopne,pn
fnstcw
xorb
cmc
lods
pusha
cmp
leave
jecxz
pop
sub
pop
sbb
stos
mov
shrl
mov
push
dec
dec
mov
cwtl
movsb
cli
jbe
sub
xor
les
cli
test
and
pop
lret
adc
or
pop
jae
insb
pop
pop
test
push
shrb
or
popa
xor
push
or
lret
inc
ja
jecxz
pop
imul
cmpl
ja,pn
mov
mov
inc
mov
mov
cmp
cmp
in
xchg
arpl
je
stc
mov
fmulp
mov
and
movsl
push
cwtl
idiv
fldcw
pop
shll
sub
cmp
rcr
mov
ja
int
xor
cmpsb
dec
inc
mov
adc
outsl
adc
jmp
adc
jecxz
push
jge
mov
add
scas
fsubrl
or
lret
mov
mov
insb
nop
sub
int
clc
xchg
pop
cmpsb
lods
inc
ljmp
or
sub
les
and
sbb
scas
xchg
pop
popa
pop
jl
mov
iret
insl
or
inc
add
sbb
ljmp
and
cli
cmpb
movsl
pop
mov
mov
pop
bound
adc
or
imul
xor
pop
xchg
ret
jne
hlt
mov
hlt
in
mov
push
mov
xchg
lods
xor
clc
pop
xor
or
xor
pushf
hlt
add
mov
mov
int
nop
push
push
in
push
fs
push
mov
add
ficoml
ljmp
add
std
mov
in
iret
das
pop
jnp
iret
arpl
lea
jb
mov
stc
sbb
pusha
push
xor
lret
imul
popf
scas
pop
cli
and
insl
fimuls
push
gs
shrb
dec
loope
mov
and
jl
cs
aam
jmp
push
arpl
mov
or
lock
scas
pop
jb
popa
sub
pop
enter
push
mov
mov
pop
sub
les
pusha
cmpsb
inc
shll
fstp
add
push
cmpsb
sar
pop
shl
lret
movl
pop
add
sub
dec
or
push
sub
in
mov
lods
scas
sub
scas
popa
cs
xor
std
mov
mov
mov
sub
repnz
or
inc
adc
jno
jl
inc
ja
fidivrl
jne
jno
adc
and
fs
pop
rol
push
jne
cwtl
jb
jp
push
ret
mov
jne
or
jmp
lret
jae
lea
sti
popf
push
sbbb
mov
jo
jle
test
or
sub
pop
fs
adc
movsl
ja
jl
mov
ret
fmul
dec
pop
in
inc
push
jle
jmp
sub
mov
repnz
dec
pop
out
or
sbb
js
cli
dec
mov
adc
mov
jl
dec
mov
fcmovb
mov
xor
or
jne
pushf
fmull
xchg
outsb
cmp
out
mov
movsl
mov
and
enter
aad
xchg
mov
mov
mov
ffree
mov
lods
dec
int
lea
outsb
push
hlt
test
xchg
pop
call
fistps
push
mov
aaa
insb
and
or
lret
push
jae
mov
sbb
inc
push
les
daa
dec
push
bound
mov
mov
dec
in
add
and
and
and
sbb
inc
and
js
ret
pop
popf
push
or
negl
inc
inc
jg
fldt
jp
xchg
mov
fcomi
cs
add
jae
adc
pop
xchg
inc
xor
in
add
push
and
inc
imul
popf
shll
or
scas
pusha
mov
inc
mov
push
pushf
clc
shrb
js
mov
fldcw
pop
not
mov
inc
ljmp
sbb
lret
lea
push
outsb
mov
lea
or
mov
je
push
mov
fsubrs
adc
mov
cmpsl
inc
mov
sahf
scas
adcb
adcb
and
mov
jbe
xor
popa
mov
and
xchg
sub
xor
dec
ficomps
inc
in
cmc
dec
inc
fnstsw
dec
mov
out
dec
call
adc
ss
and
adc
rorl
iret
jmp
mov
aad
movsl
adc
sub
fs
cli
ds
push
std
push
clc
in
mov
jb
mov
pushf
jp
stc
inc
out
pushf
cs
add
mov
pop
dec
pop
add
mov
pop
fucomp
jno
lds
add
sbb
out
leave
mov
in
and
sti
jno
pop
or
fnstcw
jb
lock
shl
jp
mov
jl
or
hlt
arpl
stc
cmpsb
pop
xchg
mov
hlt
test
outsb
xchg
ss
sti
mov
jp
cwtl
test
leave
mov
xor
out
lret
adc
and
inc
fdivrl
pop
in
lock
loopne
xchg
out
mov
sub
ret
pop
lds
jmp
pop
aas
mov
in
inc
push
adc
xchg
xor
rcr
ret
aaa
iret
fcompl
orb
outsl
dec
sub
test
jne
push
jae
in
in
xchg
faddl
push
xor
rcrb
cmp
lcall
inc
add
and
xor
jo
outsl
push
lods
mov
jl
xchg
fsubr
mov
dec
lcall
sarl
pop
dec
subb
dec
mov
shll
sub
fstps
inc
push
push
stos
imul
outsl
fdivr
dec
xchg
xchg
push
gs
mov
bound
and
jb
into
fcompl
and
add
in
fmull
push
into
imul
xor
pushl
pop
cmc
pop
push
cld
bound
and
pusha
hlt
test
adc
adcl
adc
aam
or
loope
mov
mov
lret
inc
sub
and
insb
mov
pop
mov
jmp
sbb
sub
pop
and
mov
pop
repz
push
push
mov
or
dec
sti
sub
pop
add
loopne
dec
jp
ja
fstpt
xlat
mov
sub
jge
int
daa
repz
adcl
outsl
xchg
mov
mov
cmp
xrelease
int
aad
sub
inc
push
push
jne
adcb
fs
loop
dec
arpl
addr16
add
lock
adc
dec
jp,pn
sbb
adc
sub
cmp
aas
mov
xor
ret
es
add
pop
dec
jb
mov
and
cli
cmp
test
sbb
dec
imul
mov
repnz
sbb
in
int3
lret
push
mov
iret
cs
cs
out
rcrl
test
jl
popf
pop
mov
movsb
rolb
stos
dec
mov
add
dec
xchg
and
mov
gs
les
dec
stos
sub
icebp
mov
jne
enter
dec
aad
jg
xlat
fdivrl
lock
sub
or
adc
cmp
or
xor
imul
test
sbb
fisubs
sbb
push
mov
popf
mov
xchg
sbb
sahf
aaa
paddq
and
mov
and
xchg
pusha
shlb
sti
cli
sahf
or
inc
pop
pusha
pop
test
mov
inc
mov
repnz
jmp
mov
push
test
mov
xchg
cwtl
aas
sub
adc
mov
cmp
std
push
xor
fdivr
push
mov
ret
adc
jns
fs
aam
clc
mov
jecxz
lahf
mov
push
mov
xchg
sbb
cltd
mov
dec
ret
or
sbb
mov
jecxz
stos
or
popa
movsl
dec
xor
mov
jb
dec
mov
push
xchg
push
loopne
add
pop
mov
lods
jg
dec
imul
jo
fsub
pop
fiaddl
mov
push
pop
pop
jnp
decb
in
into
xchg
les
mov
loopne
ret
scas
inc
xlat
out
mov
jmp
cwtl
dec
pop
inc
cmpsl
test
pop
xchg
imul
aaa
addr16
test
je
sbb
out
scas
cli
mov
mov
adc
and
and
sbb
push
ja
or
call
popf
dec
test
mov
or
jb
mov
xor
dec
cli
arpl
mov
xor
aas
enter
adc
sub
inc
push
subl
sahf
pusha
cmp
adc
push
mov
stos
push
pop
adc
shr
push
popl
jecxz
xor
fnstcw
enter
std
xchg
cld
jmp
mov
cmp
sti
push
ds
jge
adc
pop
push
mov
insb
cmpsb
outsb
jae
push
pop
jg
repnz
add
int
cwtl
sbb
mov
inc
in
inc
dec
jge
call
test
mov
out
mov
pop
out
cwtl
movsb
sub
add
inc
hlt
dec
mov
sub
mov
push
add
or
stc
push
inc
dec
or
and
cmp
clc
fstl
mov
stc
sub
adc
cmp
loopne
dec
loopne
or
int
ret
mov
push
jae
stos
addr16
xchg
std
or
jo
scas
cmp
loopne
ja
or
mov
aam
mov
out
lcall
int3
in
in
aas
out
pop
xlat
jbe
rorb
pop
jecxz
dec
ret
cli
adc
push
xchg
mov
sbb
daa
push
add
cltd
jg
out
mov
cmp
lret
adc
xor
mov
aas
mov
or
xchg
push
adc
stos
dec
pop
push
cmpsl
mov
rol
push
sbb
inc
push
idiv
mov
mov
popa
inc
mov
inc
rorl
cmp
daa
into
sub
fwait
enter
jno
ljmp
hlt
sbb
cmp
aas
adc
shll
ss
inc
lock
into
mov
sbb
mov
in
repz
xor
lds
mov
rcll
hlt
sub
sti
mov
ret
add
dec
push
jecxz
in
xor
xor
int
popa
xchg
push
adc
cmp
icebp
mov
dec
sahf
scas
rcr
cmp
xor
xor
push
mov
in
jl
roll
enter
daa
rclb
push
jnp
inc
xchg
xchg
gs
int
adc
test
cwtl
add
insl
push
push
iret
mov
lcall
mov
pop
daa
mov
push
add
sub
inc
scas
cmp
insl
in
adc
xchg
scas
pop
mov
arpl
jmp
add
cltd
in
or
cmc
lcall
addr16
mov
xchg
push
movsl
jns
and
movsl
and
or
pusha
insb
sarb
mov
scas
mov
loopne
mov
xchg
outsl
xor
cmp
cmp
pop
movsl
push
into
ror
ds
add
cwtl
jecxz
pushf
sbb
jns
push
xor
inc
nop
stos
mov
inc
push
mov
cli
outsl
fsts
lock
pop
jecxz
dec
and
shll
dec
dec
adc
movsl
leave
push
inc
lcall
adc
inc
add
adc
xor
push
in
into
in
mov
and
into
mov
xor
imul
shr
ret
mov
sbb
mov
loopne
jmp
enter
rcrl
xor
jp
cmpl
jbe
lcall
cwtl
mov
jge
xchg
cld
inc
scas
dec
pop
mov
xor
aam
jae
push
loop
cs
xchg
mov
call
xor
popf
sbb
mov
xchg
adc
dec
fisttps
insl
sub
popa
mov
inc
add
stos
xlat
ret
andl
and
adc
into
int
add
ret
cmpb
push
aam
data16
cmp
jne
loopne
stc
jnp
pop
scas
leave
mov
imul
cmp
push
push
xchg
and
lods
cmp
hlt
cwtl
mov
mov
daa
xor
int3
inc
and
jb
test
ss
mov
pop
dec
aad
loope
push
out
and
adc
sub
in
pusha
int
les
imul
jle
ret
negl
cmpsb
mov
in
xor
rcrb
mov
push
xor
popf
rcrl
cs
test
push
inc
xchg
push
mov
dec
mov
xchg
xchg
inc
lea
cltd
jae
scas
cmp
sbb
popa
lods
mov
ja
leave
pop
sbb
aad
ss
sbb
fldcw
popa
cmpsb
sub
sub
sub
aam
cmp
sbb
cmc
mov
adc
push
das
mov
cmc
cli
dec
daa
decl
aad
push
add
sbb
lcall
dec
pop
repz
add
leave
push
mov
aaa
sub
xor
popf
cli
in
jp
sub
fdivrl
es
add
push
notl
sbb
nop
mov
rcrb
test
xchg
js
cmp
cmp
pop
cmp
mov
mov
fwait
loope
sbb
add
dec
testb
mov
test
out
adc
cmp
jns
push
push
sbb
cmpl
out
ja
lds
and
cli
subb
shrl
ret
xor
jne
popf
lret
mov
jnp
repnz
rol
mov
pop
jg
pop
and
ljmp
mov
mov
inc
stc
hlt
and
stos
jg
arpl
addr16
or
bound
xor
xchg
inc
and
jp
cmp
sub
stc
mov
roll
pop
jne
dec
jmp
adc
lret
xlat
xchg
ficoms
xor
mov
adc
ret
mov
add
xor
inc
sahf
adc
lahf
jge
out
mov
out
xor
or
xor
vmovdqa
mov
adc
fs
pop
jno
fnstcw
jp
lods
mov
and
mov
jp
lods
mov
test
mov
or
lcall
adc
lcall
das
enter
inc
aas
xor
mov
push
mov
dec
cmpsl
in
test
inc
movsb
lret
mov
cmc
adc
inc
addr16
pusha
inc
dec
cmp
jae
adc
or
aad
cmp
data16
daa
pop
mov
hlt
xor
out
hlt
rorl
cmp
dec
xchg
dec
and
jae
neg
mov
cltd
loopne
or
adc
mov
cmpsb
fildll
cmp
mov
or
adcb
test
sub
jmp
pop
sub
cmp
test
scas
mov
pusha
test
fldenv
dec
out
xchg
cli
pop
stc
ss
out
in
das
pop
jae
cli
push
fwait
xorb
out
sbb
dec
and
js
fisttpll
daa
add
std
cmp
dec
idiv
push
mov
adc
cwtl
jecxz
fucom
cltd
dec
in
cmp
test
cmp
sbb
packssdw
sub
jge
lods
push
fucomi
mov
cmp
xor
and
sub
test
adc
shrb
mov
mov
popf
xor
push
adc
xor
or
inc
das
cs
popf
add
cld
das
shr
in
push
mov
fldenv
mov
xchg
mov
outsl
add
xchg
lds
int3
aad
sbb
int3
sbb
mov
popa
lret
pop
ds
sbb
push
push
dec
pop
mov
fidivrl
sub
dec
into
into
add
push
fldcw
push
lcall
out
insl
jg
inc
fcomp
mov
es
rcrb
jb
mov
push
cli
mov
rolb
push
ficomps
xchg
or
jl
mov
stc
add
mov
mov
mov
popf
add
daa
out
push
cmp
jge
sbb
adc
pop
dec
add
stc
sub
sbb
sub
nop
add
rorl
mov
shr
ja
sbb
aad
inc
fisubrs
push
enter
data16
scas
cmp
mov
in
jno
jp
and
push
leave
iret
cwtl
jl
sbb
lahf
mov
xchg
jle
mov
nop
jno
jmp
orb
pop
out
push
sbb
test
inc
push
xchg
loop
lds
insb
ja,pt
xchg
mov
data16
loopne
inc
or
cld
push
iret
fcmovnu
mov
leave
les
mov
add
or
hlt
test
cwtl
jmp
lcall
lcall
fucomp
out
xor
pop
jge
flds
jmp
adc
cwtl
repnz
xor
repnz
mov
movsb
xor
into
les
ljmp
fisubrl
dec
jmp
or
jbe
lahf
push
ja
daa
adc
sbb
inc
cmp
mov
jb
mov
outsl
lahf
jge
ss
lds
xchg
lahf
push
dec
movsb
test
repnz
push
call
mov
dec
dec
adc
mov
imul
push
orb
aaa
lret
push
jp
sbb
lock
rcrl
insl
inc
lret
dec
ret
adc
mov
inc
lcall
and
inc
lcall
mov
into
sbb
stc
stc
add
push
mov
mov
popa
movsb
int3
push
and
lret
inc
aam
mov
adc
dec
mov
mov
dec
mov
mov
sbbl
in
sbb
rcr
sbb
adc
jmp
pop
jbe
pop
outsb
sbb
pop
out
mov
jns
xor
pop
xlat
bound
jnp
fildl
sahf
fwait
pop
rclb
scas
pop
cmpsl
std
push
xlat
push
clc
xchg
test
pop
add
jo
pop
arpl
pop
notl
je
lret
xor
outsl
cs
sbb
inc
add
stos
test
into
out
or
lret
pop
mov
lahf
mov
xor
lcall
inc
xchg
mov
cmpsb
sub
xor
lea
inc
shll
sbb
pop
jns
in
sar
mov
cmp
mov
jbe
into
mov
outsb
push
es
test
clc
shll
mov
xchg
out
adc
leave
pusha
mov
int
mov
clc
mov
sub
jo
jle
cwtl
jmp
loop
mov
push
mov
mov
pop
push
add
mov
pusha
test
mov
dec
inc
dec
inc
addr16
mov
jle
jns
lahf
cmp
jb
lcall
or
push
clc
out
sub
cmpsb
jecxz
push
push
test
add
pop
xchg
xor
pop
cmp
sahf
out
shl
inc
fsubrs
imul
in
push
hlt
add
fistps
lods
jl
mov
dec
jnp
sbb
or
xchg
ds
imul
push
out
out
aaa
test
adc
jno
jae
inc
int
adc
xor
adc
push
lret
jg
mov
dec
subl
mov
push
push
movsb
repnz
and
enter
or
mov
mov
pop
outsb
push
sub
push
popa
fs
outsb
sub
jecxz
xchg
sbb
xorl
out
ret
mov
push
xor
leave
dec
and
in
cvtps2pi
sub
push
mov
mov
jecxz
push
pusha
mov
retw
imul
fsubrs
xchg
rcrb
outsl
xchg
ret
sub
jnp
shlb
enter
push
test
add
and
jbe
dec
imulb
xchg
cmp
add
imul
jle
add
in
mov
and
and
rorb
mov
push
int
cmp
aam
repnz
lcall
bound
pop
jo
imul
mov
push
jmp
xchg
lds
mov
mov
iret
lock
popf
pop
pop
ljmp
xchg
movsb
in
imul
mov
fnstenv
xor
or
mov
adc
je
xchg
inc
add
dec
pusha
push
out
dec
sbb
add
inc
adcb
dec
ret
push
dec
sub
gs
cld
cld
mov
insb
int
add
stc
nop
frstor
push
test
pop
jnp
push
cmp
hlt
adc
sub
or
pop
inc
mov
add
mov
rcrl
dec
jge
pop
loopne
pop
adc
pop
fmul
pop
lea
out
or
ficoml
inc
adc
dec
or
push
sti
pop
lods
adc
xchg
cs
ss
xchg
sub
cmpb
in
dec
cmp
mov
pop
mov
sbb
pop
iret
sbb
jnp
sbb
jne
mov
movsl
push
push
mov
das
into
add
test
sbb
sub
scas
pop
xchg
shlb
add
adc
mov
mov
gs
mov
clc
jo
loopne
aas
cld
inc
ljmp
push
jle
fwait
stos
mov
test
dec
dec
sub
insl
xchg
lods
mov
sahf
add
push
cmc
push
push
pop
stos
aad
sar
mov
stos
test
pushf
fimull
mov
lea
fcomip
dec
push
test
sub
adc
cs
in
outsb
fsubrs
dec
lret
out
add
xchg
popa
es
pop
jns
scas
jp
mov
sbb
dec
pushf
nop
xor
hlt
mov
and
out
clc
lods
dec
cmp
aad
dec
gs
jmp
or
pop
xchg
hlt
pop
inc
pop
mov
rclb
lods
fcmovb
jmp
dec
ja
aam
xchg
jmp
aad
lds
das
and
out
aad
cld
iret
decb
xor
fsubs
jne
push
sub
leave
lea
scas
inc
jge
fxtract
cmp
addr16
daa
xor
enter
shlb
outsb
add
popa
xor
mov
mov
sbb
ficompl
aam
xor
iret
dec
das
lahf
cmp
push
pop
and
rcll
shll
movsb
call
adc
icebp
jo
dec
ja
sub
stos
mov
pop
mov
adc
addr16
mov
jle
xchg
pushf
cmp
xor
dec
pop
pop
scas
inc
sbb
xor
or
xchg
xor
and
jo
aam
loope
in
cmpsl
jmp
ja
jmp
or
and
xchg
aad
push
xchg
dec
cmp
test
cmp
repz
or
lea
pusha
add
push
xchg
push
inc
jl
sub
and
and
and
xor
loopne
xchg
filds
or
cs
mov
mov
rcl
inc
mov
and
and
leave
sbb
pop
or
jecxz
pop
test
fcmovnu
mov
cld
xor
xchg
xor
fucom
or
jnp
xchg
lcall
daa
sub
sub
dec
mov
repz
and
push
aaa
lahf
jae
mov
pusha
je
mov
mov
or
fcmovb
xor
gs
ss
or
sar
mov
insb
leave
or
jb
pop
sti
pop
xchg
iret
add
pop
cmp
sahf
pusha
pop
mov
clc
test
jne
cmp
fistl
mov
pop
adc
std
mov
repz
adc
movsb
or
push
or
lods
push
jbe
or
xchg
xchg
mov
fcomps
or
pop
pop
loop
dec
push
insl
xchg
pop
cwtl
jmp
data16
cs
adc
jno
stc
jns
and
mov
cmp
lahf
xor
fisubrl
dec
mov
cmp
cmp
jl
cmp
aam
dec
jle
and
adc
nop
rorb
lret
xchg
loope
scas
mov
jmp
xor
dec
lea
call
adc
inc
push
rcl
or
add
cwtl
jp
stos
xlat
arpl
inc
push
in
call
sub
fcompl
arpl
dec
jl
mov
in
jp
add
jecxz
xor
cmp
cmp
jle
addr16
ret
sub
xchg
inc
cwtl
sbb
fstpl
movsb
inc
addr16
dec
push
out
xor
jns
push
sbb
rclb
ljmp
dec
ds
dec
cmp
sub
mov
sub
or
jne
xchg
insl
out
push
pop
adc
out
mov
mov
imul
inc
pop
push
dec
pop
outsb
jle
jecxz
or
mov
es
sub
add
mov
and
lahf
icebp
and
leave
sub
cmp
jns
sbb
in
lock
inc
mov
mov
xchg
lods
les
idivb
lds
movl
push
shrb
out
gs
movsl
int3
fdivl
dec
mov
psubq
sahf
mov
push
xchg
mov
mov
cwtl
test
fcmovbe
sub
push
bound
xor
add
inc
xchg
mov
xor
mov
xor
inc
repnz
cld
fidivrl
xchg
mov
xor
cmp
inc
dec
test
daa
rcr
cmp
fwait
rcll
push
cli
dec
xchg
nop
jle
mov
push
jmp
adc
test
cmp
icebp
jae
jmp
das
mov
pop
sub
cs
aad
out
mov
clc
mov
xor
es
aad
sub
sti
in
mov
cmp
enter
lods
movb
inc
cltd
insb
mov
imul
cmp
aad
xchg
enter
fisubl
cmp
out
pop
inc
inc
pop
inc
cltd
movsl
mov
rorl
dec
imul
pop
mov
je
push
loop
lea
out
rorl
cs
dec
lahf
mov
sub
test
jb
gs
pop
inc
sbb
fdivrs
jle
xlat
cs
jg
pop
add
add
fildll
pop
data16
addr16
data16
cmpsl
shr
rcll
inc
lret
jae
hlt
insb
pop
mov
pop
repnz
push
ja
push
test
pop
into
iret
test
fistps
iret
or
fs
mov
jne
fmul
aam
pop
add
jno
pop
mov
add
push
leave
das
sub
push
jae
and
xchg
notb
test
outsl
push
dec
fldl
xor
daa
push
push
idivl
cmc
xor
ss
cmp
mov
adc
jb
in
cmp
jmp
dec
inc
mov
mov
cli
dec
je
out
push
cltd
mov
mov
mov
jbe
or
jnp
notl
xor
outsb
or
add
mov
ss
and
or
mov
lods
in
insl
nop
aam
xor
les
and
es
aaa
insl
jo
inc
lahf
pop
in
or
xor
test
les
add
es
data16
mov
dec
aas
or
add
test
cwtl
sub
push
add
sub
push
xor
xor
aam
lods
inc
in
leave
sbb
mov
or
sahf
fisubrl
sbb
in
cmp
jno
pop
pop
adc
dec
aaa
into
xor
mov
mov
inc
xchg
cs
loop
cmp
and
jnp
pusha
mov
fdivrl
pushf
or
jo
add
testb
inc
jmp
pop
into
pcmpgtw
icebp
xchg
sub
xchg
inc
imul
push
sub
inc
daa
sbbb
xor
pop
dec
cmpsb
push
add
test
cmpsb
and
mov
ds
lahf
lahf
jg
adc
roll
mov
mov
inc
push
jl
mov
hlt
lods
std
add
mov
gs
xchg
fisubl
mov
stos
cmp
shrb
or
xor
jle
pop
mov
iret
adc
movb
fisttps
ja
sahf
int3
jl
in
pop
lea
hlt
cmp
push
test
daa
xchg
lcall
lock
es
dec
mov
enter
push
aam
inc
mov
mov
mov
arpl
repnz
or
cmpsb
cmp
mov
hlt
inc
push
out
bound
and
and
mov
xchg
mov
enter
aam
dec
xchg
into
jo
mov
or
mov
adc
ss
imul
leave
lahf
pop
cltd
sahf
and
or
inc
adc
sbb
int3
sub
pushf
cld
fwait
cmp
into
dec
xlat
mov
adc
sub
cmpsl
xor
jmp
lods
lea
cltd
xlat
jl
mov
sarb
dec
hlt
popf
sbb
jmp
pop
jo
data16
and
xor
outsb
ret
or
aaa
aad
mov
lahf
enter
jbe
das
addr16
adc
mov
hlt
mov
cld
push
popa
aas
leave
dec
std
jle,pn
lods
mov
or
clc
in
cmpsb
aam
lods
outsl
pop
xor
rcrb
movsb
add
mov
mov
cmp
aas
lock
rorb
lret
out
and
pop
xor
inc
les
or
lcall
xor
mov
bound
sub
sub
pushf
mov
push
lods
lahf
push
ss
ja
add
cmp
aad
cmpsl
xchg
xor
and
jb
sub
in
mov
aam
sbb
fisubl
call
cmpsb
in
mov
cmp
adcl
std
fbstp
xchg
adc
jae
cltd
jo
movsb
cmpsb
push
xchg
or
test
xchg
mov
bound
sti
or
push
pop
pop
sarb
jge
adc
out
scas
sbb
pop
out
push
shrb
jb
cmp
imul
in
fnstenv
ds
adc
arpl
ficoml
adc
inc
insb
iret
loopne
mov
mov
mov
jp
dec
mov
int3
sub
movsl
or
movsl
aas
mov
add
sbb
xchg
pop
faddp
adc
out
dec
xor
clc
push
in
add
pop
pop
dec
jl
mov
push
cli
data16
adc
inc
pop
aam
add
pusha
es
mov
cmpsb
pop
fcmovb
aaa
sub
mov
mov
adc
inc
mov
nop
repz
je
fisttpl
scas
cltd
fnstenv
stos
popa
test
pop
out
jns
push
hlt
dec
xchg
mov
sub
jno
mov
inc
jbe
test
and
out
lahf
jecxz
cmp
adcl
jmp
dec
sub
cmp
push
loop
out
xchg
in
jl
pop
mov
mov
xchg
enter
mov
aaa
test
ss
in
pop
sbbb
add
clc
mov
sbb
fwait
aaa
adc
call
sar
lods
test
ret
dec
aaa
inc
jae
fwait
jp
dec
and
scas
mov
popa
orl
mov
lods
mov
cmp
dec
loop
fisttps
out
adc
mov
cmp
mov
or
push
add
out
or
sub
std
hlt
ret
jmp
loope
adc
inc
int3
fwait
outsb
cmc
fs
or
add
push
sahf
sub
xor
xor
out
xchg
into
les
test
dec
add
leave
pop
imul
cltd
enter
gs
jbe
jmp
pop
inc
and
sub
cmpsb
cmc
pop
mov
enter
cmp
mov
xchg
cmp
lock
testb
or
js
adc
adc
xor
sub
xchg
adc
jecxz
popa
pop
mov
shll
add
lret
adc
popf
pop
fcompl
dec
cli
popa
or
mov
cmp
mov
hlt
arpl
scas
push
aam
jnp
ds
adc
incl
dec
outsb
xchg
inc
cmc
push
mov
push
xlat
cmp
pop
mov
inc
icebp
lock
lcall
nop
sub
mov
xorl
addr16
testb
lock
mov
pop
or
mov
stc
into
test
addb
or
andb
mov
mov
jb
mov
ret
push
sti
and
xchg
test
or
clc
ds
les
sarb
mov
and
and
push
xor
test
mov
inc
cmp
push
sarb
xchg
mov
xor
out
scas
test
jmp
les
inc
shlb
in
add
push
nop
repnz
jne
outsb
push
or
xchg
or
and
cmp
jp
push
xor
dec
cwtl
push
out
dec
pusha
mov
fildll
cmp
mov
divb
pop
sub
loope
jbe
or
or
ficompl
dec
loop
push
movsb
in
sub
loopne
frstor
out
jae
or
insl
sbb
iret
fcoms
test
jnp
repnz
rclb
fsubp
push
mov
push
ja
pushf
inc
mov
fcomp
lods
pop
push
imull
mov
jno
mov
adcb
std
dec
dec
shlb
xlat
mov
sbb
xchg
shll
inc
mov
adc
insb
rclb
fsubl
sub
mov
mov
mov
in
push
and
xchg
mov
push
sub
pop
ds
mov
jl
out
mov
repz
push
test
inc
add
stc
push
fiadds
hlt
pop
adc
pop
out
enter
mov
push
jns
lods
js
xor
xchg
in
inc
inc
insb
pop
mov
dec
sbb
flds
insl
jecxz
mov
test
jne
push
repz
xrelease
adc
mov
aas
mov
aam
out
inc
mov
xchg
cltd
inc
int3
cmp
popa
inc
aaa
std
inc
sbbl
insb
or
xchg
cmp
mov
call
add
sub
mov
mov
mov
and
rolb
push
cld
mov
mov
adc
cmpsb
xor
repz
lods
adc
jmp
sbb
mov
pop
in
push
outsl
cmp
xchg
test
jl
push
gs
das
mov
repnz
mov
inc
jmp
adc
cmp
ds
mov
sbb
cmp
add
inc
pop
mov
ja
insb
or
mov
in
push
mov
xchg
mov
aas
arpl
jmp
popa
sbb
movsl
xor
cmp
sti
int
lahf
nop
mulb
lcall
lds
cmpsl
int
inc
add
lret
mov
inc
je
jge
jge
dec
add
out
cmc
jne
pop
int
mov
inc
mov
xchg
sub
scas
lret
or
movsl
push
daa
inc
inc
in
cmpsl
addb
ljmp
lods
inc
je
pop
cmpsb
jmp
inc
dec
sub
lds
repz
in
pop
and
sub
int
filds
sub
ljmp
xor
test
inc
push
xor
xor
pop
inc
sahf
sub
lock
or
rcrb
in
or
mov
cli
fwait
cmp
push
out
hlt
repnz
xchg
add
fcompl
mov
push
popl
or
scas
int
sbb
adc
rol
in
dec
movsl
cmpsb
stc
sub
aad
in
push
insb
into
ret
sbb
dec
mov
rcl
outsb
fwait
or
cwtl
mov
out
in
les
mov
ds
ljmp
sarl
cmp
dec
flds
pushf
popl
mov
rcrl
mov
repz
xor
mov
xor
aas
ss
push
es
mov
outsl
loope
xor
aad
test
scas
add
mov
cwtl
pop
push
rclb
stos
loopne
cwtl
stos
dec
jl
fistps
loope
adc
xchg
aam
out
jg
cltd
mov
rcrb
sahf
xor
adc
cmpsl
shrb
dec
inc
mov
jae
sbb
add
cmpsb
cmc
loope
inc
jle
xor
push
andb
and
mov
cmp
fwait
push
xor
ret
sbb
push
sub
push
jp
pop
xor
push
insl
cwtl
cmp
xor
mov
or
mov
fwait
ret
aas
flds
inc
inc
lret
int3
lea
cmpsl
jnp
cli
jae
shll
xchg
movsl
pusha
popf
cld
push
mov
ds
outsl
rcrl
xlat
int
repnz
add
aas
sti
lahf
or
pop
or
adc
aaa
test
test
sbb
out
movsl
xchg
adc
clc
sbb
arpl
jne
dec
rcll
lds
movl
lret
nop
or
and
jb
in
xor
mov
inc
ret
stc
int
jp
jp
mov
pusha
mov
pop
mov
fidivl
xchg
xlat
ror
sbb
pop
jl
adc
and
and
mov
ljmp
sub
mov
jl
xor
sbb
sbb
jb
loop
jle
dec
in
adc
fsub
add
scas
test
cmpb
das
jp
xchg
lods
in
test
mov
ror
pop
rcl
add
divb
mov
push
adc
cltd
js
inc
jg
jg
xor
cmpsb
vpcomd
inc
mov
sbb
les
and
mov
jmp
mov
iret
jmp
orb
and
add
jo
mov
or
pushf
jge
andl
outsb
cmpsb
jbe
jne
dec
pusha
repz
loop
aad
inc
xchg
insl
sbbl
repz
lcall
mov
add
ret
jb
cmp
repnz
imul
dec
out
dec
ljmp
and
xor
sbb
mov
add
push
and
cmp
popf
test
ss
orb
adc
and
add
test
mov
ret
sbbl
mov
test
xor
mull
or
test
in
jne
sbb
int3
sbb
das
mov
ret
and
xchg
add
xor
pop
cmp
xchg
in
cwtl
sub
mov
inc
add
mov
cs
aad
mov
dec
cmp
roll
adc
push
cmp
push
ret
adc
xchg
aam
adc
stos
das
insb
add
xor
inc
rcr
imul
clc
cmpl
orl
sub
push
push
xchg
pop
mov
loope
call
push
enter
mov
je
lret
scas
pusha
xchg
lods
ficoml
std
cmovno
int3
stos
add
cmc
dec
jp
xorl
cwtl
imul
fdivrs
in
fcoml
push
lcall
inc
fs
lret
leave
cli
addw
mov
mov
and
mov
cwtl
gs
hlt
sbb
push
sub
mov
sbb
pop
mov
std
out
cmp
or
divl
mov
sub
into
outsb
mov
iret
mov
lcall
mov
pop
push
pop
and
sarb
scas
and
out
xchg
aam
lods
push
outsl
stc
dec
add
dec
std
mov
cmpsl
mov
mov
lfs
lret
jo
daa
mov
addr16
sub
pavgw
cmpsb
pop
movsb
dec
cmp
inc
stos
fadds
push
rorb
int3
mov
push
lahf
aas
xor
subl
mov
in
push
or
lea
push
loop
push
sbbl
cmp
push
ret
loope
adc
cltd
dec
cmp
sbb
sbb
dec
push
xchg
cwtl
pop
or
push
repnz
adc
iret
pop
xor
cmpsb
out
and
mov
in
jnp
xor
scas
out
sahf
push
mov
xorl
mov
out
outsl
cmc
les
push
andb
shlb
pop
data16
ret
push
sub
test
cwtl
punpckhbw
das
sub
shll
enter
mov
xor
inc
xor
and
repz
mov
fisubs
popf
sbb
sub
ja
mov
cmp
and
shlb
es
ret
sbb
sub
ficoms
cmp
lods
out
mov
loopne
jae
or
cmp
loopne
int
test
lret
shr
xlat
aaa
pop
outsb
pop
aaa
cvtdq2ps
fsubrl
xchg
pop
ret
shll
cmpsb
xchg
sub
test
mov
outsb
xchg
daa
lds
lods
or
add
xchg
or
nop
mov
sub
fdiv
inc
add
lea
setb
lret
call
fstpt
mov
and
scas
mov
fisubl
rorb
out
js
mov
or
fcompl
xor
jae
imul
dec
jmp
shll
mov
pop
movsb
and
out
mov
adc
cmpsb
sbb
aad
repnz
test
test
popw
dec
push
or
sahf
cmpsl
jl
arpl
xchg
pop
add
mov
lret
xor
lahf
cltd
pop
fs
daa
jns
dec
int
popf
out
in
loop
or
push
sti
jle
lcall
loopne
adc
sub
push
ret
sbb
test
cli
lret
call
in
push
pop
adc
jns
push
mov
test
xchg
mov
ss
rcll
push
xchg
fiaddl
push
xor
ret
add
sti
out
mov
mov
pushl
rcr
mov
es
mov
std
loope
data16
int
in
xchg
lahf
jle
sbb
xor
mov
pop
inc
negl
dec
push
ljmp
sub
loopne
xor
dec
and
adc
insb
outsl
jl
push
loope
sar
rcr
sahf
clc
mov
sub
xlat
xchg
pop
stos
andb
pop
enter
or
cwtl
data16
push
xchg
xchg
fs
jns
jns
ja
inc
adc
outsb
daa
sbb
out
shll
mov
in
aaa
cmc
xchg
xchg
dec
sub
loopne
repnz
add
test
and
or
fistl
mov
adc
pusha
cli
xchg
cmpsb
jbe
scas
in
mov
fisttpll
imul
xchg
cmp
mov
lds
or
inc
jg
push
and
jmp
inc
and
call
mov
out
pop
jge
call
daa
insl
push
adcl
jbe
movsl
pop
jo
outsl
rcr
mov
mov
clc
or
jg
stos
enter
in
mov
mov
xor
loope
cli
push
addr16
stc
adc
fnstsw
mov
adc
sbb
xchg
xchg
inc
mov
pop
cmp
fiadds
and
push
push
pushf
lret
js
mov
test
repz
inc
dec
sbb
or
pop
hlt
adc
xchg
test
pop
sub
pushf
inc
cmc
and
imul
mov
fxch
insl
leave
xchg
pop
call
clc
inc
sar
jnp
jmp
push
mov
js
mov
lret
and
dec
popf
mov
xor
xor
fildll
jecxz
mov
std
jbe
adc
orb
lret
push
add
ret
fcom
cmp
xor
xor
in
cmc
cld
dec
lea
imul
cmp
dec
adc
call
das
or
xchg
xchg
mov
ror
aad
dec
popl
xlat
test
mov
pushf
mov
scas
sbb
jecxz
sahf
les
mov
dec
push
pop
mov
mov
lahf
jns
jp
inc
stos
fcompl
jge
sub
pop
fs
push
cs
or
ja
lods
scas
mov
pop
repz
or
sub
lods
inc
lcall
clc
mov
in
jle
push
mov
jae
cmpsb
push
adc
adc
aad
les
xor
roll
dec
ja
in
aam
fsubl
fs
in
mov
adcb
test
sub
inc
es
in
mov
js
out
fidivl
scas
fwait
mov
rcl
or
cmpsl
movsl
cmp
jo
and
in
aaa
xor
jo
pushf
push
mov
out
negl
jmp
pop
sarl
iret
lock
xchg
sbb
pop
stos
cmp
xor
aaa
mov
lcall
mov
or
push
pop
jnp
push
fisubs
and
fistpll
ja
fistpl
pop
mov
dec
pop
repz
mov
mov
in
adc
insb
aas
xor
mov
mov
fwait
pop
rcll
add
call
mov
scas
and
mov
jno
mov
cs
idiv
cmp
imul
mov
pop
adc
mov
lahf
out
insb
sahf
xchg
sahf
in
out
mov
lock
hlt
js
bound
jae
jecxz
xchg
imul
ja
jns
loop
push
mov
mov
pop
ficoml
pushl
xchg
push
out
jmp
hlt
add
mov
adc
push
jbe
pusha
xchg
arpl
outsb
in
and
ljmp
or
cmpsl
popa
pop
adc
xor
sbb
lea
mov
or
or
mov
dec
into
lock
jmp
repnz
or
daa
sub
ja
aam
lods
push
xchg
mov
cmp
adc
xchg
test
push
xor
jmp
out
int3
jbe
jecxz
pop
or
mov
repz
cmp
pop
sub
or
pop
ret
inc
jl
mov
and
pushf
mov
outsb
cmp
and
sbb
movsl
mov
les
mov
add
test
mov
and
outsl
or
sub
outsb
imul
out
cmpsb
pusha
enter
orb
int
jg
jge
popa
xchg
jl
call
xchg
repnz
jmp
push
inc
fs
dec
push
mov
xlat
lods
roll
nop
pushf
mov
push
scas
in
xchg
pop
push
and
or
sub
mov
xor
xchg
rorb
aam
adc
jb
dec
in
bound
aam
mov
add
lea
xor
jns
pop
rorl
std
fs
inc
inc
cs
push
and
gs
out
xor
or
pushf
das
push
dec
xor
js
mov
or
sub
jp
push
jmp
adc
pop
shl
jae
popa
mov
pop
cmc
arpl
cli
mov
mov
cld
push
jo
cmpsb
mov
lahf
mov
jne
nop
jmp
leave
mov
add
pop
mov
dec
mov
add
mov
mov
xor
stc
mov
sbbb
js
mov
fbstp
jo
cltd
xor
mov
pop
pop
xor
mov
push
repnz
adc
mov
dec
mov
nop
mov
dec
repz
andl
add
mov
mov
stos
out
sub
push
add
ret
pusha
arpl
int
mov
popf
iret
test
cltd
sub
fistpl
pop
scas
cmp
pop
mov
cmpsl
imul
push
jo
daa
aas
cmpsl
andl
ja
xlat
mov
pop
jp
ja
ja
dec
sub
adcb
dec
push
sbb
jle
stos
mov
and
xchg
ljmp
std
ds
imul
adcb
out
lret
pop
cmpsl
xchg
scas
xor
das
cmc
jmp
add
adc
repz
jge
add
shll
ss
mov
movsb
enter
stos
daa
adc
test
out
xchg
in
icebp
pop
adc
sbb
rolb
lret
or
xlat
call
gs
xchg
pop
sbb
int3
mov
iret
mov
test
mov
mov
pop
mov
ds
in
push
mov
xor
jnp
cmpsl
std
push
pushf
or
sbb
and
out
jecxz
packsswb
mov
adc
dec
inc
les
sbb
xchg
mov
call
jbe
adc
push
mov
lods
pop
shll
ja
ds
movl
or
mov
sahf
jmp
xlat
mov
jnp
push
cld
add
push
inc
clc
push
lret
xchg
pop
or
fs
inc
mov
xchg
iret
popa
mov
add
or
jl
or
cli
mov
hlt
jge
jo
popf
inc
incl
imul
addr16
imul
mov
repz
stc
sub
nop
cld
push
add
jb
lret
xor
jecxz
cs
repz
jp
mov
or
inc
sbb
cmpsl
mov
pop
cmpl
or
cmpb
cmp
pop
mov
pop
idivl
pop
adc
mov
ljmp
cmp
xchg
icebp
roll
outsl
mov
dec
xchg
mov
aam
cmp
jbe
mov
jl
out
lods
xchg
mov
mov
aad
ss
push
mov
jo
test
out
sub
and
icebp
pop
pushf
call
and
pop
mov
call
pop
enter
xor
fucomi
and
inc
inc
inc
mov
fisubrl
push
jp
mov
popa
cmc
pop
push
pusha
idivb
xchg
sub
stos
inc
stos
cltd
or
mov
pop
stos
ds
xchg
push
lea
in
mov
push
cmpsl
inc
mov
dec
mov
xor
and
hlt
pop
inc
lods
subb
shr
aad
xchg
fisubs
xchg
imul
inc
inc
and
sarb
inc
mov
sbb
es
and
pushf
adc
xchg
test
fildll
mov
jnp
push
xor
test
cmp
cmp
jl
stos
jo
repnz
das
mov
gs
xchg
es
dec
push
jbe
arpl
jae,pn
cmp
lret
xor
shrl
push
movsl
sub
bound
inc
inc
js
jecxz
rcrb
cmc
xor
and
jno
add
shlb
cltd
rorb
aaa
dec
lret
xlat
je
rclb
add
cmp
or
mov
loopne
mov
rcrb
pop
or
enter
and
pop
and
popf
xlat
test
add
jmp
push
sub
jne
aam
roll
ret
pop
cmp
inc
mov
sub
fucom
in
inc
xlat
testb
das
dec
push
dec
mov
mov
pop
push
and
jecxz
add
xchg
jne
imul
and
pop
xlat
add
loope
inc
insb
and
add
xchg
mov
jns
sti
jns
push
movsl
cmpsl
mov
xchg
xor
lock
test
jns
pop
shlb
or
fmull
movsb
test
push
lea
fldcw
xchg
insl
cmp
cmp
stos
leave
testb
aam
pop
in
jl
mov
mov
popf
imul
mov
push
xchg
in
rclb
dec
loope
dec
stos
stos
jne
in
pusha
inc
adc
push
sub
test
mov
pop
cs
pop
roll
ret
or
adc
push
sbb
push
ds
shl
mov
and
adc
sbb
out
ret
xor
filds
fstpt
adc
loop
jne
jge
int3
or
jge
mov
sbb
insb
in
add
into
mov
rcll
sti
and
stos
inc
clc
push
fwait
sub
rcr
das
sub
inc
jl
xorl
cwtl
out
aas
stos
cli
jle
out
mov
nop
scas
nop
and
mov
xchg
sbb
pop
add
test
sub
popa
roll
scas
add
int3
fcmovu
and
sti
sarb
fisubs
cwtl
xchg
xor
mov
es
jl
jo
or
mov
scas
test
outsb
lcall
mov
ficompl
icebp
inc
jo
mov
repnz
fwait
imul
mov
and
pop
shll
adc
adc
outsb
xchg
fiaddl
pop
subl
rolb
scas
or
mov
add
dec
push
outsl
je
ret
xchg
sub
mov
cmpsb
or
or
and
cmpsl
lock
ja
jb
lahf
sbb
lcall
in
inc
test
jmp
rcr
es
aas
loop
lock
shll
enter
das
arpl
pop
add
xor
sub
sti
insb
and
into
mov
out
jecxz
inc
jo
mov
add
roll
dec
inc
sub
jge
mov
inc
repz
fwait
dec
cmpsl
or
ficomps
into
icebp
mov
hlt
fmuls
stos
pop
out
and
inc
sbb
jg
add
mov
out
das
daa
jg
outsl
mov
adc
mov
adc
gs
xchg
pop
adc
xchg
cmp
cmp
jp
ja
adc
pop
sub
mov
jb
mov
hlt
mov
push
in
push
and
imul
fistps
sbb
ret
lods
jo
pop
fists
lock
jnp
stos
jecxz
adc
insb
add
dec
and
imul
fs
ret
loopne
loopne
mov
daa
icebp
and
lret
add
enter
inc
cmpsb
push
outsl
add
mov
xchg
add
cli
sbb
gs
aas
lea
icebp
pushf
jl
jns
cmp
aad
adc
out
push
add
fistpl
out
jp
jmp
xor
push
arpl
shl
sub
test
sbb
jp
ror
rcrb
dec
rcrb
daa
ret
loop
sbbl
dec
in
push
mov
or
clc
lahf
cmp
jecxz
cli
out
orl
imul
push
push
push
add
xchg
inc
mov
mov
xor
or
mov
mov
jb
cmp
mov
mov
xor
shll
mov
int3
push
ss
push
paddsw
cwtl
into
xchg
xor
mov
pushf
inc
arpl
sub
std
cmpsl
push
pop
mov
xlat
movsl
jmp
scas
pushw
jb
add
dec
xor
push
mov
pushf
mov
mov
cltd
loope
jno
and
ss
push
push
stc
jnp
test
mov
mov
pop
aas
push
add
cwtl
ljmp
aad
sbb
mov
enter
push
repz
scas
mov
sbb
mov
mov
loope
shl
cmp
test
adcl
mov
vmovapd
lahf
cmc
sub
cltd
int3
sbb
cld
xchg
mov
inc
xlat
rcrb
or
shlb
sarl
inc
enter
lahf
in
mov
sub
mov
dec
out
add
jge
mov
bound
jno
jl
int
pop
mov
adc
sarl
js
add
sarl
dec
adc
fcompl
ret
cmp
popa
rcll
pop
lcall
fwait
stos
mov
or
sbb
aad
push
dec
cmp
jmp
ja
push
outsb
shrl
ret
je
sbb
jl
mov
and
or
lcall
cwtl
mul
and
fstpl
jle
cmpsb
das
adc
or
nop
insl
adc
xchg
imul
subb
or
sbb
xchg
and
flds
jnp
int
xor
aaa
insl
push
lret
es
ficomps
cmp
sahf
test
mov
mov
adc
sub
fidivrl
inc
iret
fstl
fwait
mov
outsl
or
leave
loop
clc
out
push
dec
sub
push
push
jae
das
or
mov
loope
mov
imul
mulb
cmp
mov
jl
pop
and
mov
ja
cmp
movsl
dec
xchg
repz
inc
lcall
cmc
jg
rolb
pop
inc
dec
cwtl
cmp
sub
inc
jmp
sbb
je
inc
push
mov
sub
out
or
cmp
dec
add
dec
or
shrb
ret
repz
dec
out
aas
inc
movsb
mov
push
push
mov
lods
iret
push
or
std
xchg
inc
fisubrl
fcmovnbe
out
repnz
mov
lock
mov
ret
sub
add
movsl
mov
daa
jae
push
adc
dec
push
cmpsl
lahf
subb
addr16
xor
pop
aad
xor
xchg
mov
mov
and
or
or
add
lea
iret
inc
cwtl
inc
mov
cmpsb
scas
inc
aad
cmc
xchg
jp
inc
out
push
jbe
mov
cmpsl
or
and
xchg
daa
and
stos
mov
out
das
jne
push
int
test
xor
sar
das
cwtl
imul
mov
push
sbb
icebp
mov
popf
inc
lea
push
inc
loopne
jmp
jns
add
leave
out
andl
out
mov
or
jnp
mov
fsub
inc
jmp
xorl
inc
sbb
pop
adc
xchg
adc
or
rcll
mov
fwait
lods
mov
in
inc
sti
fldcw
jg
push
pusha
and
rolb
mov
mov
sbbl
loope
repnz
mov
insb
sub
shrb
aaa
outsl
shlb
inc
das
lods
cmp
push
add
outsb
adc
faddl
cmpsb
sbb
adcl
sub
mov
test
and
push
test
je
inc
vmovddup
int
jne
dec
push
mov
fmul
jbe
mov
dec
fmull
dec
test
mov
mov
jl
adc
les
arpl
push
add
arpl
lcall
mull
xchg
subb
test
mov
mov
mov
scas
mov
or
or
sahf
adc
xor
add
jae
out
push
or
in
test
flds
mov
leave
mov
loope
xor
movsb
test
icebp
xchg
mov
jl
xchg
daa
cld
fstpt
mov
push
and
into
jl
cltd
push
inc
aaa
and
lods
mov
sbb
je
adc
xor
inc
shll
repz
sti
push
add
popf
lods
sbb
sti
test
stos
pop
jle
pusha
mov
add
daa
push
shr
dec
ret
dec
mov
subb
cld
mov
inc
mov
leave
mov
mov
xor
inc
das
pushf
cmp
rcr
jecxz
lock
push
pop
sub
fsubs
jecxz
jecxz
loop
sbb
xor
in
lds
mov
popa
xchg
dec
into
outsl
nop
ds
cmpsb
test
sbb
in
inc
movsb
repz
xor
shrb
inc
mov
dec
imulb
test
cmp
addb
ret
and
xor
incb
cmp
repz
sub
and
addl
cli
dec
int3
sbb
or
mov
push
stos
dec
adc
test
daa
nop
pop
pop
bound
push
jmp
jnp
in
mov
mov
xlat
iret
push
shlb
jbe
shlb
or
dec
jb
addb
inc
or
outsb
dec
mov
out
iret
inc
out
repz
sti
ljmp
sbb
cmp
test
sub
outsb
aad
dec
jb
add
mov
imulb
enter
scas
xor
add
push
das
loop
inc
inc
inc
shrl
popf
ljmp
mov
lods
js
cmp
push
or
movsl
decb
push
rclb
movsb
hlt
mov
mov
flds
xor
xchg
inc
or
cmp
in
push
pop
adc
inc
push
rcr
dec
idivb
cld
sub
inc
add
mov
out
xchg
sub
push
mov
popf
enter
pop
pop
push
jmp
sti
mov
cwtl
mov
gs
fwait
aaa
je
jo
mov
imul
or
jmp
mov
pop
ljmp
jns
in
out
sub
sub
cmp
inc
aad
bnd
push
fptan
mov
and
inc
adc
cmpsb
shrb
insl
dec
aaa
push
loope
lret
pop
je
outsl
jl
cmpsl
fidivl
lods
push
nop
push
negl
int
pop
stos
test
push
repnz
cmp
jns
mov
mov
mov
sub
pop
pusha
inc
mov
aas
ja
jle
inc
insb
lret
test
dec
ss
xchg
popf
jns
or
adc
sbb
and
xor
mov
mov
push
sbbb
into
jns
in
outsl
mov
jmp
jne
pop
inc
mov
mov
mov
movb
mov
aas
mov
fs
mov
pop
or
inc
adc
xchg
fs
rorl
arpl
sbb
pop
xchg
sbb
jmp
xor
mov
dec
ljmp
mov
mov
jb
ss
sub
call
or
shlb
xchg
lock
in
pop
aam
mov
out
mov
inc
jno
xchg
sbb
inc
mov
popf
pop
fs
shl
les
rcll
rcrl
cmp
add
sbb
add
xchg
or
daa
push
push
add
ds
repnz
pop
xor
lock
push
pop
xchg
push
neg
mov
cmp
mov
sahf
add
nop
add
popa
jecxz
add
push
mov
aam
and
mov
sti
cmp
xor
push
sub
enter
gs
sbb
les
cmp
jle
icebp
mov
xor
dec
jns
mov
mov
add
daa
jb
stc
hlt
stos
mov
xchg
test
xor
pushl
mov
pusha
or
push
scas
jne
outsb
cs
push
xor
scas
bound
mov
rorl
push
inc
enter
loope
or
or
add
arpl
int
andb
ja
pop
or
jnp
popf
bound
xchg
pop
xorl
and
dec
les
dec
mov
rclb
inc
and
hlt
aas
addr16
mov
fs
sbb
iret
cld
ljmp
mov
cli
mov
cmp
sbb
push
leave
push
mov
xor
xchg
cld
adc
jg
and
enter
rolb
inc
mov
push
repnz
pop
sti
test
sub
std
out
loop
mov
mov
push
push
pop
pop
fsubrs
lahf
popa
dec
mov
cld
daa
sub
xor
call
fwait
pop
cli
pop
push
fisubrs
push
push
aas
mov
xchg
pop
pop
test
xchg
sbb
jg
scas
shrb
mov
mov
mov
sti
push
push
mulb
or
jae
or
push
pop
xchg
loop
push
xor
dec
mov
cwtl
pop
frstor
sbb
adc
arpl
call
or
cmp
push
mov
xchg
mov
cltd
adc
fwait
lahf
push
push
mov
jge
cmp
push
xchg
loope
pop
lret
cmp
dec
dec
xchg
sub
mov
mov
push
pop
pushf
mov
test
pop
repz
js
test
inc
push
xchg
add
dec
inc
adc
push
inc
push
stc
bound
loope
out
std
mov
add
inc
lahf
mov
inc
in
mov
and
push
out
ja
jge
sub
sub
and
xorb
fbld
sbb
cli
mov
repnz
sbb
lret
sbb
popa
in
sbb
cmpsl
inc
sub
lods
lret
mull
icebp
sti
sbb
mov
ds
or
or
ss
mov
dec
dec
imul
scas
cmp
imul
int3
loopne
addr16
out
and
and
imul
imulb
dec
ret
xor
cmp
cs
inc
lea
or
xchg
adc
movsb
out
adc
popf
add
mov
roll
out
mov
inc
jbe
sub
xor
xorl
xlat
mov
mov
lret
aaa
insl
add
xor
push
xor
repnz
out
bound
cmp
int
sbb
cmp
push
iret
sbb
xor
xchg
sbb
int
mov
enter
lret
jb
movl
mov
test
outsl
pop
imul
jp
in
jbe
bswap
mov
adc
pop
mov
xor
xchg
fs
jge
dec
push
mov
push
pop
dec
jp
fists
lds
or
stos
hlt
fildll
fstpl
xor
and
fmul
xchg
jns
out
sbb
lret
cmc
sahf
popa
inc
lahf
fistl
arpl
push
push
stos
push
push
inc
test
out
sbb
push
pop
inc
rol
mov
add
cmc
addb
int
das
dec
add
push
jo
cmp
dec
push
xor
lods
pop
xlat
fnstenv
jae
adc
hlt
jg
xor
cli
and
ds
lock
push
xor
mov
loope
das
mov
orl
lcall
sub
mov
mov
xor
test
push
cmp
fidivrl
jle
iret
push
and
and
cmp
into
jp
ja,pt
jae
stc
rorb
mov
push
or
inc
hlt
fildll
out
cld
jb
mov
cmc
mov
rcrb
fisttps
adc
xchg
adc
mov
dec
and
or
test
inc
or
dec
xorb
popf
popf
aad
outsl
sti
jns
aam
xchg
dec
dec
imul
jge
xor
lods
or
js
cmp
mov
push
fmuls
pop
mov
popa
fnsave
push
xchg
pop
rep
lds
les
mov
pop
nop
sahf
hlt
aad
push
insl
lret
arpl
add
xlat
mov
and
pop
jmp
mov
inc
loope
add
in
xchg
mov
out
fisttpll
fdivrp
test
mov
loop
pop
gs
fdivl
in
mov
xchg
inc
pop
mov
stos
dec
lcall
mov
dec
cmp
pop
sbb
push
std
mov
frstor
xor
jae
ljmp
fnstcw
cli
bound
mov
adc
in
fld
cmp
mov
pop
push
sub
out
hlt
aad
dec
dec
scas
cli
jae
inc
push
push
push
into
outsl
movsl
dec
jg
jl
xchg
mov
mov
insl
out
es
sahf
push
xor
mov
or
push
or
jl
fnstcw
jmp
lods
outsb
jo
mov
cltd
out
xorb
adc
pop
or
adc
pop
sub
movsl
push
repnz
jo
push
xchg
mov
mov
js
insl
xchg
roll
dec
fstl
ret
repz
jbe
mov
insb
push
bswap
stc
mov
dec
js
jl
rcll
push
cwtl
out
inc
sbb
shrb
xchg
jo
mov
adc
lods
inc
push
mov
lahf
lret
and
mov
call
mov
mov
mov
mov
out
jl
movsl
mov
cwtl
xor
addr16
gs
adc
adc
dec
aas
xchg
lahf
pop
fidivrl
into
pop
lock
or
pusha
sub
dec
js
push
sbb
mov
push
sbb
pop
out
stos
movsl
not
and
fists
push
inc
pop
mov
shrl
dec
leave
mov
jne
ror
xor
mov
pop
push
and
mov
push
ja
dec
das
xchg
cli
subl
imul
popf
mov
lahf
and
push
into
mov
jle
jae
jns
sub
fimuls
pop
cmp
push
inc
xchg
int3
xor
add
push
gs
sbb
movsl
lods
adc
jge
js
leave
mov
dec
arpl
imul
xchg
out
push
add
in
sbb
mov
dec
pop
jae
and
xlat
add
repnz
in
pop
insb
add
add
xchg
arpl
in
cwtl
cmpsl
push
into
shll
shlb
jle
out
cmpsl
pusha
jp
lahf
cltd
dec
sub
add
cmp
stos
imul
popa
lods
mov
jns
lea
add
sbb
into
mov
push
inc
cmc
mov
mov
popa
cmp
ror
adc
xor
push
enter
and
xchg
mov
fstpt
movsl
mov
or
ss
sbb
xor
add
popa
stc
test
mov
jecxz
test
mov
push
mov
sub
lcall
or
bt
pop
xor
outsb
nop
aas
loopne
adcb
add
cmp
mov
inc
outsl
scas
pushf
mov
ret
inc
test
sbb
push
icebp
adc
mov
cmp
cli
lods
es
cmp
rol
xor
mov
hlt
rcr
mov
mov
nop
cmc
xor
mov
sub
test
movsl
test
loopne
call
inc
sub
xor
mov
push
lods
mov
mov
hlt
repnz
mov
and
lret
les
out
mov
xor
jge
sub
mov
cmc
aad
es
icebp
repnz
addb
fidivrs
cmp
in
lret
xchg
or
mov
add
movsl
mov
mov
xchg
mov
pusha
adcl
jnp
inc
and
mov
inc
add
sub
ss
sub
loope
outsb
out
adc
xchg
out
pop
mov
lods
jne
inc
fsubl
or
mov
mov
sub
lea
shlb
sahf
addr16
cmp
sbb
sbb
cld
xchg
call
mov
pop
test
mov
ljmp
aad
mov
rcl
stc
mov
pop
add
jg
pop
dec
ds
dec
test
shl
and
loop
pop
mov
mov
stos
jg
cmp
jecxz
xlat
push
in
fs
out
icebp
jp
call
adc
push
inc
push
jbe
out
xchg
xor
int3
xor
inc
xlat
js
movsl
inc
cltd
jl
subb
cld
repnz
mov
jp
push
mov
fists
cmp
lea
cmpsb
mov
pop
mov
cmp
lea
cltd
shl
mov
fmull
and
push
movsl
out
popf
data16
test
subl
ret
xchg
mov
xchg
adc
outsb
repnz
inc
push
mov
cmpl
inc
adc
sub
rorl
dec
fnstenv
scas
push
adc
cld
mov
ss
jmp
adc
jno
in
mov
les
push
mov
xor
xchg
pop
inc
shl
inc
mov
rcrb
pop
lds
test
jl
dec
adc
sub
dec
daa
lods
sti
ret
jg
jl
out
mov
push
arpl
mov
mov
mov
test
xchg
mov
in
sbb
popf
rolb
push
and
xor
outsb
and
scas
sahf
dec
hlt
pop
rcl
jle
aam
jle
in
sub
stos
test
mov
sub
inc
stc
out
jno
sub
or
cmp
loopne
xor
xchg
loop
xchg
sbb
test
or
hlt
outsl
push
test
xchg
lods
mov
fsubrs
ljmp
xchg
xor
vmovsldup
orl
dec
pop
xor
repz
adc
and
mov
mov
addr16
pop
xchg
pop
mov
lcall
sbb
mov
cmp
sti
test
mov
xchg
lea
sbb
sbb
leave
add
push
or
mov
insl
mov
dec
pop
push
inc
js
imul
dec
scas
nop
lock
mov
imul
mov
and
inc
fimuls
popf
scas
xchg
je
adc
scas
loop
add
xor
cwtl
mov
std
and
sbb
push
push
test
push
xchg
mov
mov
push
and
xor
ds
xor
les
xchg
stos
hlt
and
pop
cmpsb
adc
push
xor
xor
cld
push
xor
pop
popf
adc
out
lods
mov
xchg
sub
std
xchg
sbb
test
dec
lcall
ljmp
inc
aam
scas
pop
or
imul
or
into
push
xor
popf
mov
xor
push
hlt
test
dec
push
adc
scas
dec
mov
mov
cli
xchg
jns
xor
int3
clc
xor
mov
loopne
ja
cmp
xchg
movsl
mov
insl
pop
dec
scas
xlat
adc
xchg
and
dec
inc
xchg
arpl
dec
jne
mov
cmp
dec
mov
push
gs
testb
mov
push
cmp
les
mov
out
test
int
lods
cs
or
xchg
jnp
cmpsb
fistpll
and
repz
addr16
dec
fdivs
outsl
imul
cmp
sbb
jno
std
movsb
addr16
inc
mov
dec
jg
cli
mov
fistpl
mov
or
inc
sub
pop
dec
sub
or
mov
and
ret
mov
inc
adc
cltd
jle
xchg
loop
cmp
push
in
jp
sbb
mov
pop
jmp
std
xchg
jno
stos
dec
adc
sbbb
je
sahf
rcr
jge
dec
cld
ljmp
cld
loope
movhps
mov
jae
and
adc
jge
jge
pop
shll
fcmovb
sub
inc
fmuls
stos
dec
or
les
test
sub
cmp
fdivr
sub
push
mov
pushf
jae
push
out
inc
leave
fldcw
clc
lea
rclb
mov
insb
cmp
mov
xchg
ficomps
add
jae
xchg
add
stc
xchg
push
in
fwait
leave
dec
fisttps
out
jae
ljmp
mov
or
insb
out
mov
clc
sub
mulb
mov
adc
in
mov
popf
mov
loop
cmp
shrb
push
dec
xchg
push
mov
push
cld
cmp
decb
pushf
xchg
jge
push
push
loopne
fs
lods
sub
nop
xor
mov
mov
shl
mov
and
pop
inc
pusha
movsb
xchg
ja
cli
es
inc
test
inc
sbb
xor
dec
fcmovbe
stc
xchg
rolb
stc
xchg
outsl
adc
mov
jge
ds
mov
imul
or
cmc
cltd
enter
and
sub
jg
hlt
sub
hlt
push
stc
jno
mov
in
ret
push
jmp
pop
outsb
mov
sahf
xchg
cmp
xchg
lods
add
fwait
push
inc
jle
jnp
inc
adc
xor
and
mov
add
mov
push
repz
dec
xchg
bound
es
jecxz
xchg
lods
add
bound
ret
aam
aaa
inc
xchg
push
push
mov
rcrw
arpl
mov
or
lahf
jne
out
and
clc
stos
test
imul
inc
jbe
add
out
ljmp
sarl
mov
mov
fucomp
lret
or
clc
push
cwtl
sbb
in
ja
push
dec
jno
cld
mov
popf
outsl
adcl
add
mov
cli
xlat
sahf
sahf
sbb
iret
dec
pusha
lret
out
leave
hlt
pop
test
cmp
jbe
pop
mov
lock
popf
clc
xchg
mov
add
inc
scas
mov
loopne
sub
inc
add
mov
hlt
stc
popf
mov
mov
jp
push
jle
int
jmp
jbe
mov
mov
addr16
aaa
pop
test
test
mov
jg
mov
into
lret
mov
xlat
bound
int
insb
mov
in
ret
sub
test
das
shrl
cltd
mov
loopne
adc
rcl
sub
mov
out
mov
iret
sub
repz
lods
int3
aad
mov
into
cmpsb
jno
repz
stc
and
inc
and
mov
cmp
mov
imul
inc
test
inc
out
daa
sbb
jne
ror
jo
cmp
mov
dec
popf
dec
cmpsl
mov
call
test
js
dec
jbe
cmp
pop
daa
decb
pusha
or
popf
call
xchg
aas
jae
push
popf
lcall
into
fldl
and
dec
jno
push
addr16
inc
dec
mov
sbb
outsl
mov
les
jo
pop
fs
sbb
ljmp
cli
jge
and
mov
sub
fidivrs
push
out
adc
add
mov
adc
pushf
icebp
shl
repz
and
fsubs
adc
jno
mov
sbb
mov
adc
pop
iret
mov
leave
pop
outsl
cld
sub
outsl
cmp
pusha
test
adc
jns
and
or
outsb
mov
pop
test
lret
stc
test
js
fcomp
pushf
int
pushf
ja
js
sbb
mov
or
adc
testl
xchg
mov
pop
movsl
stos
mov
xchg
aam
lock
ret
mov
cmp
mov
adc
jl
lds
pusha
aad
mov
jl
xor
scas
inc
mov
mov
adc
in
jg
repnz
rcll
and
push
xchg
dec
mov
lret
mov
push
mov
mov
std
out
jae
xlat
outsl
pop
add
jnp
mov
cmc
fnsave
test
int3
inc
and
out
sub
mov
dec
or
jecxz
divl
js
jnp
shrb
xchg
pop
ss
inc
lds
xchg
pop
rcll
hlt
pop
cmp
dec
imul
adc
ja
xchg
mov
ret
fdivs
sub
mov
addr16
stos
fs
das
out
sbb
sbb
sub
push
cmc
xchg
lcall
subl
popa
jp
pusha
lods
cmpsl
sub
mov
leave
push
out
dec
aam
out
mov
sub
cmc
pushl
adc
xor
repnz
inc
sbb
mov
mov
cs
push
cmp
popf
inc
aaa
and
pusha
mov
sbb
in
enter
or
sub
mov
cmp
dec
mov
adc
ljmp
test
dec
ljmp
pop
xchg
pop
dec
jle
or
pusha
cmp
dec
clc
pushl
movsl
mov
pop
test
ret
xchg
rorb
imul
xor
sbb
outsb
dec
xchg
out
shll
int3
xor
inc
out
jge
pop
sub
stos
aaa
out
xchg
push
out
repnz
scas
xchg
sub
mov
sbb
dec
adc
dec
inc
adc
dec
and
sub
ret
sub
fadd
and
and
cmpsl
or
fidivl
dec
aas
es
pop
dec
xchg
pushf
imul
mov
or
dec
sbb
xchg
push
sub
ja
push
test
dec
cltd
mov
add
dec
dec
push
mov
movsl
repz
pop
push
or
cs
cmpsl
in
es
sbbl
leave
das
out
rolb
cmp
clc
ljmp
dec
xor
adc
mov
jnp
sbbb
inc
sbb
jp
xchg
mov
cmp
jecxz
push
call
inc
nop
ss
cmp
adc
into
stc
xchg
int3
inc
ss
mov
and
cmp
jmp
sub
jp
jnp
roll
mov
shll
or
cmpb
sarb
xor
and
cmc
mov
out
aas
mov
icebp
inc
mov
pop
inc
stc
xchg
add
cmp
cmp
sbb
inc
cmp
sbb
adc
mov
aad
cmc
sub
dec
shl
popa
and
pop
push
dec
jb
insb
pop
and
mov
pop
pop
mov
xor
inc
fwait
data16
adc
dec
fistpll
push
and
mov
xor
fdivr
add
aam
dec
inc
inc
in
bnd
imul
das
icebp
out
pop
xor
fimuls
jge
xchg
add
sub
sub
dec
sbb
xchg
movsb
xorb
xchg
lock
cltd
push
je
push
icebp
mov
filds
push
and
fs
pop
je
mov
jns
fcoms
mov
insl
jo
mov
frstor
cmp
pop
bound
and
bound
jns
pop
sahf
fwait
inc
arpl
mov
and
and
sub
mov
sub
sarl
andb
xor
mov
fstpt
mov
insl
lock
repnz
mov
cmp
ret
xor
into
mov
lahf
outsb
dec
sub
imul
das
jecxz
sub
or
push
aad
fdivl
sub
cld
loop
inc
ja
mov
xor
into
and
aam
jo
xlat
cwtl
jae
xchg
ret
cmp
popf
rclb
popf
mov
test
mov
pop
mul
xchg
adc
fs
sar
push
push
mov
sti
fisttpl
push
add
es
insb
push
xlat
ficomps
mov
pushf
cs
add
lret
push
adcl
xchg
mov
fcmovnbe
pushf
lock
in
adc
xorb
cmp
add
sahf
add
jmp
hlt
xchg
push
mov
mov
or
addr16
scas
sub
inc
movsb
fwait
rclb
imul
rcrb
cmp
lret
das
mov
mov
jae
in
fiadds
shl
out
lret
icebp
cwtl
sahf
daa
nop
jp
and
dec
icebp
out
mov
mov
xor
adc
cmpsb
xlat
mov
push
aas
inc
mov
cmp
xchg
lea
fwait
sti
cmp
std
imul
add
push
lock
test
adc
jmp
or
or
cltd
incl
lea
pop
mov
jne
mov
cmp
cmp
cmp
or
pushf
xchg
mov
sbb
xor
inc
stos
inc
jb
mov
scas
adcb
and
mov
sbb
andb
rcll
mov
mov
dec
jge
cmp
ja
mov
dec
mov
test
stos
mov
insl
fsts
js
jae,pn
gs
faddl
in
ret
xor
pop
adc
lds
aaa
popa
scas
mov
and
push
jnp
out
mov
xchg
cmp
std
push
jle
xor
adc
cmp
push
inc
fcmovu
lahf
mov
lret
jecxz
xchg
insb
mov
sub
lock
repz
cmp
mov
push
flds
cmp
jbe
mov
lock
in
repz
pushf
mov
sub
out
aaa
pusha
xchg
lods
inc
inc
sub
mov
inc
in
dec
lahf
test
ds
lret
sub
out
sub
imul
sub
std
ret
popf
in
arpl
add
ljmp
inc
loopne
jno
pop
out
cmp
repz
fidivrs
jne
in
cli
xor
pop
sub
mov
or
adc
aam
jne
and
mov
dec
push
mov
mov
mov
outsl
mov
fdivrs
pusha
push
lret
xchg
add
into
scas
sbb
mov
mov
inc
addb
sbb
pop
loopne
mov
xor
fdivrl
dec
mov
icebp
mov
fstpl
pusha
int3
icebp
popa
mov
movsb
push
inc
mov
jg
lahf
scas
inc
aaa
cmp
cli
lods
and
push
insl
arpl
xchg
or
mov
push
cltd
stc
sbbb
pop
call
push
inc
daa
cmp
out
cmp
dec
dec
sbb
inc
imull
xchg
sbb
pop
jecxz
data16
lret
leave
mov
int3
dec
enter
in
icebp
iret
mov
xor
xorb
out
jl
stos
add
sahf
xchg
sub
mov
test
cs
pusha
aas
cmp
and
cmpsb
xchg
mov
xor
out
cmp
push
movsb
xchg
call
pop
inc
and
fcomi
push
les
cmp
pop
mov
xor
pop
sub
dec
mov
fldl
push
mov
jnp
lahf
sbb
xor
outsl
out
xchg
cs
push
outsl
push
cmpsb
movsl
ret
push
jmp
inc
mov
gs
cli
jo
fwait
addr16
sbb
fwait
mov
xchg
jns
xor
je
sub
imul
inc
leave
dec
in
xchg
mov
adc
clc
loope
adcl
into
or
cmp
or
test
icebp
sbbl
call
pop
cmpsl
mov
push
xlat
movb
arpl
stc
cmp
mov
mov
xchg
add
out
push
rep
mov
jmp
pop
daa
or
xor
push
jno
xchg
lods
xchg
dec
jae
xchg
inc
dec
xor
mov
or
xchg
dec
arpl
repnz
mov
xchg
dec
sbb
sbb
outsb
test
xchg
dec
push
xchg
testb
pop
pop
mov
or
mov
lret
ds
add
push
or
addl
hlt
inc
xchg
ret
add
clc
push
clc
xor
mov
push
add
jle
mov
das
pop
inc
dec
push
bnd
mov
sub
shr
dec
or
pop
scas
adc
push
xchg
call
roll
cmp
stc
aaa
mov
or
push
mov
mov
jecxz
add
and
mov
and
add
outsl
dec
addr16
mov
daa
ljmp
mov
xabort
mov
jnp
cmp
lea
mull
add
adc
lods
aam
pop
fs
pop
inc
pop
das
stos
or
adc
inc
hlt
clc
repnz
pop
pusha
into
jns
rclb
scas
shr
sbb
fidivl
test
adc
push
fistl
dec
rorb
loope
fs
xchg
dec
pushl
bound
addr16
push
mov
inc
fimuls
mov
fs
add
and
out
fsts
mov
nop
cli
movsb
sbb
xchg
sbb
inc
lahf
sbb
inc
addr16
int3
mov
lret
xlat
jg
mov
inc
xor
adc
or
xlat
fsubs
popf
sbb
lds
into
mov
or
sub
dec
ds
mov
xchg
sub
rcl
aaa
mov
lahf
adc
fldl
pop
call
jle
xchg
jne
mov
mov
js
mov
and
insl
dec
xchg
cld
cmp
push
mov
push
aas
iret
xchg
insl
divb
lret
jg
and
pop
mov
lea
lret
jbe
lock
cwtl
push
jg
hlt
xchg
push
mov
sbbb
dec
push
ret
incl
push
faddl
sbb
nop
test
push
mov
shl
js
data16
lds
or
sbbb
andnps
cli
sub
in
jno
shrl
test
mov
dec
and
sub
mov
sub
imul
xor
das
xor
call
xor
push
xorl
adc
shll
ja
lea
repnz
cmpsl
rcrb
aam
cmpsl
lock
add
std
push
rorl
adc
mov
fisubl
mov
cmc
fcoml
push
cmp
push
xor
pop
xor
not
mov
hlt
loope
test
je
les
dec
loopne
mov
rcrl
daa
adc
pop
cmp
loopne
rorl
or
mov
lret
add
fcomps
mov
insl
adc
jbe
mov
pop
cmp
arpl
loope
cmp
rorb
sub
lret
push
xchg
jg
xor
aas
jbe
test
jae
ja
pop
cmp
repnz
hlt
aas
or
ja
pop
aaa
and
lea
andl
sbbl
pop
xchg
sub
dec
inc
and
push
pusha
sub
jecxz
bound
call
test
data16
dec
add
cmp
ret
das
stos
cmp
fisttpl
pop
or
add
xchg
adc
and
icebp
mov
cmp
aaa
cmp
jecxz
popf
jp
sub
loope
std
in
sub
lahf
cmpsl
repz
push
pusha
fidivrs
movsb
pop
jo
jnp
dec
pop
sarb
filds
scas
sub
jo
or
sbb
push
int
cmp
aad
sbb
push
lods
test
popa
pop
pop
call
xor
xorl
in
jp
sahf
sbb
iret
mov
jl
in
ja
inc
xlat
insl
sub
clc
jbe
mov
xchg
add
iret
loope
push
cmp
push
int3
push
jne
arpl
cmp
jnp
jbe
test
lret
int3
aas
ds
jb
rcr
test
mov
outsl
les
jp
jmp
xor
js
mov
scas
out
stc
ret
push
cmp
idivb
push
out
popa
movsb
jecxz
adc
loop
push
mov
pushf
push
ja
xchg
xor
inc
adc
arpl
sti
lea
cmp
jo
scas
dec
add
xchg
push
xchg
mov
cli
lock
outsb
sbb
xor
lock
push
ret
lods
and
out
aas
bound
ljmp
cmp
push
push
cli
fsubrl
stos
mov
cli
sti
mov
push
test
push
aas
xchg
mov
ret
pusha
push
sbb
cmp
lret
into
xchg
cmp
js
add
repz
int
mov
or
mov
push
add
mov
xor
test
test
ja
jmp
popf
shll
aas
lds
ffree
aas
loope
in
cli
mov
lret
adc
popa
adc
mov
daa
push
xchg
sbb
pop
lods
push
pushf
cmp
jmp
pop
mov
stos
ror
ror
jmp
test
adc
mov
nop
rcrl
pop
xchg
sub
loope
es
aaa
mov
mov
add
adc
fcoms
push
rcll
mov
and
clc
std
std
hlt
les
or
mov
push
icebp
sbb
clc
out
dec
push
loop
sub
mov
mov
lds
fucom
push
xchg
loop
ret
xlat
in
ss
push
push
xchg
inc
mov
mov
flds
rcrb
xchg
int3
jmp
nop
mov
dec
add
lcall
fistps
shlb
jl
sub
mov
ss
lods
lret
and
push
call
push
pusha
adc
cli
pop
pop
sbb
add
add
in
jo
fsubrl
addr16
insl
xor
dec
sbb
in
es
xchg
jae
ss
jne
cmp
sar
sbb
movsb
push
pop
push
jno
mov
pop
stos
pop
jns
inc
cmp
add
mov
ficoml
dec
xchg
lret
insb
inc
je
lret
xor
stos
in
cmp
es
je
push
xchg
lahf
mov
add
mov
lds
hlt
test
push
mov
mov
xlat
negl
sub
push
jne
mov
stos
mov
in
negb
or
lret
pop
iret
push
nop
add
or
fisubl
out
sub
clc
sub
pop
das
cmp
les
sbb
push
nop
cmp
or
mov
fdivr
lret
sbb
fwait
shll
sbb
gs
xor
scas
fcomps
stos
popf
ret
pop
cmp
je
or
lahf
ds
push
dec
es
arpl
cmp
add
xchg
sub
xlat
mov
and
fwait
int3
xchg
cmp
adc
out
popf
push
sub
push
sbb
pop
jae
in
pushf
sti
inc
mov
mov
add
and
inc
push
idiv
arpl
xor
xchg
cli
cwtl
fwait
pop
sub
imul
xor
hlt
outsl
jmp
stos
jns
ficoms
mov
std
cs
sahf
jp
les
fstpl
jnp
call
test
lret
mov
mov
jns
pop
inc
jg
cmpsl
cltd
cmp
mov
adc
cli
rclb
xchg
adc
fsubr
std
fbld
in
scas
push
fwait
insl
add
push
pop
xchg
test
cmp
mov
fadds
ja
subb
xchg
mov
xor
mov
stos
push
cmpsl
lcall
push
pop
and
cltd
cmc
dec
xchg
pop
push
test
lods
add
loope
lods
nop
mov
xchg
sbb
lahf
push
shrl
daa
imul
sbb
call
add
sub
rcr
outsb
clc
lahf
cmp
lahf
and
enter
sbb
push
int
cld
testb
cmpl
push
ret
dec
cld
sub
mov
mov
ret
mov
push
jae
mov
jmp
repz
stos
fildll
sub
jnp
adc
pop
mov
inc
jle
scas
inc
xchg
xlat
ficoms
int
jbe
test
ds
aad
call
lret
cmpsb
outsl
in
jg
jecxz
xor
outsb
mov
imul
mov
popa
mov
adc
insb
insl
test
stos
push
lret
adc
or
inc
jl
out
pop
lcall
inc
jns
cmpsl
addr16
fcomps
jmp
xchg
repz
movsb
sub
loopne
mov
ds
mov
daa
mov
lock
icebp
push
daa
xchg
in
mov
pop
in
or
jno
xchg
mov
and
stos
movsl
orb
inc
test
push
pop
jno
cmpsb
sub
inc
movsl
add
push
ss
pop
sub
xlat
mov
mov
add
xchg
xor
mov
push
cltd
arpl
ljmp
cmp
jns
ds
mov
mov
daa
repz
in
scas
adc
xor
ret
or
push
sti
xchg
mov
ret
jge
hlt
fsubl
mov
out
nop
fwait
mov
scas
jmp
rcrl
push
lret
test
mov
mov
loop
pop
lods
bound
ret
and
dec
test
inc
jge
fbld
sbb
cmp
iret
mov
mov
loop
mov
push
pop
jno
int
adc
push
ss
test
sti
pop
lock
stc
test
loop
call
loopne
sub
es
push
or
pop
call
aad
sub
and
or
pop
stos
cltd
xchg
xchg
lahf
daa
jecxz
test
stos
cmp
sub
pop
add
mov
adc
cld
pop
xchg
in
xchg
sub
jae
add
cmpsb
loope
mov
xor
sub
pusha
xor
int3
pop
dec
jnp
ficomps
xlat
lret
pop
aaa
outsl
mov
loop
icebp
cwtl
dec
into
mov
nop
cltd
jle
pop
cmp
popa
loope
mov
jo
in
pop
jbe
daa
pop
pushf
pop
cwtl
or
push
jmp
add
clc
aaa
pop
popl
xor
fxam
repnz
adc
mov
lock
cmp
call
cmp
aad
cmp
push
das
mov
call
sub
and
clc
jle
mov
xchg
inc
in
out
mov
xchg
flds
or
scas
arpl
add
sahf
pop
jbe
push
cmp
lret
pop
icebp
mov
fldl2e
sbb
mov
push
repnz
push
fs
mov
mov
pop
cli
jp
ss
nop
loop
ret
pop
add
jbe
dec
and
dec
lea
push
pop
lret
fsubl
es
and
pop
xchg
inc
pop
adc
and
subb
pop
push
scas
jno
or
mov
dec
add
or
xchg
mov
or
adc
lea
add
mov
xor
fimuls
pop
sbb
fs
mov
sbbb
mov
movsb
xor
mov
jle
aas
bound
adc
push
cwtl
mov
fld
sub
jns
mov
sub
xchg
push
push
ds
dec
stc
fsubl
pop
in
pusha
clc
and
gs
outsl
inc
lds
and
int3
adc
sarb
xchg
shr
or
les
mov
push
cmpb
rolb
sti
arpl
push
inc
dec
in
mov
js
xor
outsl
cld
mov
lock
test
cltd
and
or
out
test
fimull
jecxz
or
notb
push
push
xchg
data16
sbb
sbb
lret
repz
std
mov
inc
mov
and
or
stc
pop
out
rclb
sub
je
lock
mov
mov
mov
adc
loopne
jmp
add
lret
clc
test
adc
push
inc
sbb
xchg
rcl
mov
xor
inc
push
push
notl
popf
push
nop
inc
mov
jno
xchg
sub
out
es
push
add
add
and
daa
xor
out
enter
in
jmp
lret
das
mov
or
idivl
mov
and
pop
sbb
push
stos
lcall
fwait
xchg
jbe
mov
test
call
movsl
rcrb
mov
sub
sbb
mov
cmpsb
or
xor
fidivl
fcmovnbe
notb
int3
mov
insl
fiadds
xor
test
leave
xchg
popf
mov
jns
adc
test
insb
lock
jmp
and
push
and
scas
loop
xchg
dec
mov
repz
pop
fsubp
pop
dec
jle
test
mov
sbb
mov
xchg
int3
into
shrb
sub
int
int
loopne
xchg
dec
sbb
or
add
jecxz
nop
inc
gs
ret
push
xchg
std
fidivl
inc
dec
and
popa
pop
mov
push
imul
into
xchg
pop
mov
out
xchg
cld
sub
mov
iret
dec
push
adc
inc
in
iret
add
pop
inc
in
lahf
ja
xchg
fnsave
aam
or
dec
sbb
mov
adc
and
iret
test
jb
inc
stos
out
popf
xor
in
cli
cmc
aas
and
testl
je
gs
push
push
xchg
cmp
mov
adc
dec
repnz
out
test
or
enter
pop
loope
dec
dec
loope
sbb
and
sbb
cmp
insl
mov
xchg
out
xor
out
mov
cmp
test
and
ret
mov
sahf
stos
inc
and
jp
hlt
cld
aaa
sarl
jecxz
int
mov
in
out
mov
mov
imul
pop
dec
pusha
adc
out
mov
xchg
sarb
inc
das
pop
iret
and
and
outsb
nop
xchg
jecxz
jae
pop
jg
je
leave
popf
sbb
sbb
out
inc
jns
inc
ja
mov
mov
testb
das
pop
into
sub
or
cmp
sbb
push
cmp
add
sbb
pop
lods
push
aam
aas
call
cmpsb
stc
arpl
or
mov
scas
xchg
ljmp
popf
mov
insl
lods
sub
cmpsb
jo
pop
jo
lahf
push
jbe
cmpl
icebp
dec
in
sub
mov
mov
inc
fists
sub
jae
jl
pop
adc
ret
das
mov
in
xchg
xor
aaa
aad
sub
lcall
cmp
enter
ret
push
fwait
xlat
jnp
lret
inc
loop
pop
push
xchg
les
add
and
inc
push
in
jb
inc
and
inc
testb
lods
fabs
jb
push
test
ret
fcmovnb
mov
lea
jl
mov
xchg
sahf
add
inc
ljmp
jae
inc
movsl
js
mov
mov
mov
daa
and
xacquire
jle
popa
sbb
ljmp
pop
inc
fdivs
gs
gs
loope
dec
into
or
or
pop
jae
cmp
fsubl
cmp
data16
pushf
mov
rolb
mov
lods
sarl
sahf
mov
pop
mov
push
mov
out
hlt
out
fstpt
testl
out
addr16
xchg
or
xchg
xchg
pop
pop
push
dec
scas
mov
popa
or
decl
push
stos
ljmp
xchg
pop
xchg
ret
xchg
inc
ret
mov
aad
inc
dec
fisttpl
sub
test
dec
mov
xor
fbld
ja
push
dec
movsb
scas
outsl
in
sbb
lods
push
jno
cmp
adcb
lret
mov
dec
jg
pop
lea
mov
or
sbbb
jb
cmp
cmpsl
in
adc
xchg
xor
jo
xchg
out
fldt
sbb
pop
and
lret
lcall
lahf
addr16
dec
and
push
int
addr16
jecxz
cmp
popa
mov
or
sbb
ficompl
in
mov
jae
xchg
xchg
in
xlat
ret
out
cmp
lods
clc
xlat
adc
adc
push
jne
adc
das
adc
cs
in
fs
and
push
les
cmpsb
push
mov
mov
jmp
mov
dec
es
jg
aaa
add
jns
insb
lods
outsb
aad
lock
cld
stos
mov
xchg
push
add
mov
lret
xchg
loopne
jmp
daa
cmp
inc
mov
pop
jmp
nop
daa
and
pusha
lcall
mov
xrelease
adc
mov
dec
pop
fs
sub
and
shll
out
mov
and
repz
ffree
enter
int3
dec
outsl
xor
or
out
pop
push
lods
dec
daa
mov
leave
cmp
test
cmp
test
cli
pop
xchg
inc
cmpsl
sbb
adc
xor
out
lock
sbb
jge
ficoms
sbb
or
jo
enter
cwtl
fdivrl
aaa
call
mov
adc
das
outsl
into
fs
or
popf
push
cmp
cwtl
pop
in
dec
pop
mov
xor
push
fbstp
xchg
jns
test
pop
js
inc
scas
mov
mov
mov
and
cmp
int3
loop
push
leave
test
out
loopne
mov
outsb
jmp
and
fcoms
lods
fucomp
das
add
pop
mov
and
pop
sub
shl
cmp
push
mull
cltd
fidivrl
cli
in
adc
push
xchg
in
push
test
mov
sahf
sbb
jo
cmovns
data16
jg
mov
mov
mov
jns
aas
js
outsl
pavgb
sbb
hlt
jp
roll
adc
cmpsl
xor
push
sahf
loop
or
mov
adc
test
xor
cmp
movsl
ret
cmpsb
and
insw
ljmp
fnstenv
imul
inc
add
jns
mov
lret
and
pop
orl
test
pop
ss
fs
inc
sahf
add
test
rcl
add
lds
add
int3
add
cmp
or
loopne
mov
shl
cmpsb
dec
lcall
push
pop
inc
mov
push
pop
xor
cmpsl
sbb
sbb
jae
dec
sub
cmp
cmp
lret
xor
mov
pop
and
mov
push
lods
aad
bound
sub
lea
xchg
test
movsb
or
xchg
push
hlt
add
pop
dec
leave
sub
push
sub
daa
xchg
jns
loopne
push
loopne
sbb
xor
stc
rolb
jecxz
and
divl
pop
in
jge
icebp
jl
inc
cmp
fcoml
jo
cmp
xor
adc
mov
adc
movsl
dec
test
mov
push
mov
pop
xchg
mov
dec
xchg
jo
lret
clc
repnz
jp
mov
stos
push
cmp
push
test
aaa
ss
mov
mov
mov
hlt
add
stc
push
and
ds
es
mov
notb
and
ds
push
cld
dec
and
mov
dec
decb
gs
pop
lret
mov
popf
adc
or
cmp
aam
xor
inc
xor
mov
jb
sahf
pushf
lret
jno
test
mov
leave
push
addb
xor
pop
nop
cwtl
iret
sbb
pop
dec
in
pushf
cli
adc
push
incl
sbb
or
pusha
popa
fcomps
adc
jge
scas
imul
add
mov
pop
add
hlt
jb
test
adc
bound
mov
movsb
push
jb
sub
shrb
movsl
and
scas
int
lret
out
out
stos
sahf
add
jnp
aaa
or
ss
xor
ss
popa
cwtl
nop
dec
scas
jp
xor
adc
push
lcall
repz
mov
hlt
pop
in
xchg
jle
decb
pushf
fsts
pop
ljmp
test
jmp
dec
in
cmpsl
adc
mov
jp
jne
nop
cmp
jmp
sbb
mov
jmp
pop
cltd
sbb
add
inc
jae
jmp
cs
in
repz
negb
xor
int
sub
shr
mov
xor
mov
mov
jg
mov
mov
xchg
pop
dec
jnp
out
sarl
or
pop
jg
outsl
push
fldt
into
and
and
fistpll
jne
in
aad
adc
nop
loop
cmp
dec
dec
pop
jno
push
out
ss
jae
xor
mov
gs
xchg
ror
orb
imul
and
mov
mov
cmp
dec
inc
xor
cmp
and
pop
pushf
stos
pop
inc
test
adc
sub
adc
rclb
shll
pop
xchg
xor
mov
sub
aaa
cmpsb
stc
popa
loop
in
sub
gs
ficoms
dec
sbb
adc
insl
inc
pop
movsb
test
test
cmp
mov
ret
add
in
mov
lods
outsb
imul
lods
cmpsb
outsl
inc
bound
mov
mov
push
cmc
lcall
cmp
xchg
xor
and
push
int3
out
jg
pop
pop
daa
jne
jb
jae
dec
push
or
in
mov
fwait
cmpsb
imul
hlt
movsb
dec
sbb
jne
and
push
mov
lds
aad
data16
addl
xor
lods
mov
ficoml
movsb
mov
sub
and
aas
inc
movsb
mov
inc
into
and
push
fwait
inc
jp
and
movsb
jno
cwtl
inc
and
or
imul
int3
mov
push
push
mov
inc
jnp
jecxz
and
je
push
cwtl
dec
mov
xchg
xor
inc
lods
out
pusha
push
lods
or
cld
iret
aaa
pop
imul
pop
scas
lret
mov
stos
jne
andb
rorl
mov
cs
loop
mov
push
data16
dec
aad
test
ja
mov
and
or
fsubs
cli
push
inc
shl
mov
fwait
inc
or
add
inc
mov
nop
in
imul
xchg
in
test
lods
fsubr
enter
insb
pop
or
sti
pop
mov
jne
pop
sahf
imul
xlat
push
jmp
fs
pusha
dec
loopne
mov
incl
test
into
sub
push
mov
dec
inc
into
pushf
and
inc
idivb
xor
rcrb
ljmp
das
cs
push
jg
fwait
js
fdivs
in
icebp
jne
add
push
lahf
lds
mov
and
mov
push
pop
xchg
dec
pop
sbbl
cmp
shll
pop
shrl
rorl
test
mov
fldcw
adc
push
cmp
mov
hlt
pop
shl
adc
sbb
ficoml
nop
ss
bound
sti
leave
lcall
sub
out
inc
cmpsb
mov
dec
incl
xor
inc
out
sub
xor
add
sub
jl
data16
addr16
push
call
xchg
cmpb
mov
ljmp
test
inc
fwait
daa
aam
arpl
mov
and
fsubrl
dec
lahf
addr16
popf
adc
ss
daa
movsb
stc
out
mov
jmp
cs
jle
xchg
jle
repz
push
add
xchg
pop
lock
mov
and
xchg
push
xchg
movl
or
das
jae
lret
sbb
sbb
fsts
pop
addl
jns
sub
sub
popf
js
xor
pop
sbb
sarl
mov
push
and
mov
out
out
fldcw
dec
je
out
insb
mov
repz
push
jge
fisttpl
xorl
mov
insb
mov
clc
movsb
jp
mov
inc
int
cmp
lret
in
jnp
inc
addr16
into
and
lock
dec
dec
ret
outsb
jnp
or
and
lods
movsb
movsl
rclb
icebp
pop
js
adc
es
mov
mov
les
xchg
fidivrs
cmc
mov
or
push
and
jne
jge
jbe
sbb
pusha
cmpsl
add
sub
orb
sub
xchg
fcompl
fsubl
ficompl
cmp
sbb
aad
mov
lcall
pop
fs
stos
fidivrl
jno
jl
inc
xchg
dec
jb
dec
jmp
loopne
cmp
shlb
in
jg
sbb
jbe
data16
popf
popa
pop
push
jecxz
push
xor
mov
outsl
in
ja
inc
sbb
or
mov
ret
and
enter
sbb
sbb
ds
mov
iretw
loop
ss
jo
mov
rcrb
pop
movsb
fcoml
les
add
mov
xchg
and
and
or
jg
addr16
add
shr
stc
dec
stos
jg
lea
pop
jg
jo
sti
push
or
mov
pop
pop
jge
xchg
mov
jg
aaa
mov
insb
call
or
xchg
mov
sbb
push
sbb
sbb
sbb
pushf
cmp
scas
adc
mov
test
clc
fcompp
fistpll
js
in
and
xchg
sbb
and
aas
add
dec
leave
pop
add
xor
out
dec
push
mov
imul
jae
mov
imul
clc
outsb
scas
jle
adcl
lods
mov
pop
sub
mov
cmpl
nop
clc
por
cmpsl
mov
mov
pop
jmp
test
rolb
test
imul
shlb
out
cmp
mov
sub
push
cmpsb
push
jae
fidivs
jnp
aad
lods
cmp
mov
pusha
xchg
jnp,pt
pop
aas
push
out
jecxz
mov
cmp
lock
cmp
pop
call
mov
jge
dec
or
inc
jge
cmp
and
inc
cltd
mov
cld
stc
add
mov
stos
imul
xchg
and
fiadds
insl
ja
xor
lahf
add
jne
loop
xor
inc
sti
or
xchg
push
or
jae
push
xor
stc
repnz
test
movsl
xlat
cmp
fisubrl
push
mov
lds
sub
je
fwait
sbb
call
cmp
leave
shrl
push
loope
push
clc
roll
cs
jno
or
xor
and
imul
cli
sub
xor
or
rclb
cmp
push
cmp
inc
gs
rorb
ret
in
rolb
jmp
enter
sarb
jl
mov
icebp
adc
enter
cmp
xchg
xor
loopne
or
gs
test
lods
rcrl
push
aad
test
jnp
dec
fidivl
popa
mov
xor
jmp
pop
imul
repz
out
cmc
outsl
lods
notb
cltd
mov
xchg
push
movsb
push
jg
lea
pop
jge
pop
mov
daa
das
divl
out
adc
push
jl
ja
jo
push
addr16
cmp
jp
loopne
lds
xlat
cmp
or
push
int3
sbb
xchg
lahf
inc
cmp
addr16
dec
xchg
pop
and
inc
js
fsts
mov
xor
inc
mov
insb
shll
in
push
repnz
aam
mov
ds
les
push
xchg
xor
pusha
clc
xacquire
xchg
xchg
mov
or
mov
cwtl
sbb
hlt
inc
or
fnstcw
psrlq
stos
xor
mov
wrmsr
mov
ret
sbb
fisttpl
int3
inc
outsb
pop
inc
inc
andl
dec
std
test
popa
push
in
mov
xor
adc
mov
lret
mov
repz
sbb
sti
test
icebp
dec
xchg
loopne
sbb
mov
xchg
andl
adc
insb
lahf
xor
push
sbb
sbb
mov
push
aas
xchg
xchg
aam
jg
add
and
nop
dec
mov
push
pop
fcoms
push
and
repnz
mov
fstl
pusha
or
mov
sub
push
test
inc
notb
decb
dec
mov
imul
leave
lcall
cmp
pushf
mov
jmp
push
push
pop
fisubrs
mov
dec
xorb
js
push
adc
pop
adc
pop
sub
scas
cmc
dec
sbb
ret
decb
xor
push
int3
clc
jp
lods
jns
movsl
test
pop
xchg
iret
outsl
in
clc
xchg
mov
mov
movsb
stos
xor
cmp
icebp
mov
scas
movsl
idiv
and
fists
or
in
and
pop
ds
enter
sbb
pop
lahf
cmp
shl
push
fistps
js
stc
test
add
sub
icebp
jb
dec
jo
mov
cmp
sti
lods
shrb
lahf
fdiv
or
jo
jg
movsb
loop
sbb
xor
jmp
out
push
popa
hlt
fidivl
lock
dec
mov
test
test
movsl
idivl
or
cmc
add
popw
pop
aaa
cmovs
outsb
cli
inc
fstpl
fnsave
xor
jp
cmpsb
cmp
jmp
mov
or
lret
imul
rcrb
rorl
jae
push
insb
dec
cmpsl
add
mov
mov
fcompl
sbb
imul
xor
dec
mov
lret
lret
loopne
push
fists
push
push
clc
aad
and
cli
add
mov
clc
mov
pushf
popa
loope
cmp
inc
pop
dec
push
push
mov
mov
and
into
lret
and
sub
push
in
and
fldt
sahf
xchg
adc
lock
out
fiaddl
jne
adc
mov
push
push
rcrl
sub
inc
aas
pop
mov
repz
push
loop
add
jbe
lcall
xchg
inc
dec
dec
push
xor
js
jge
mov
lcall
mov
adc
sbb
lret
loop
daa
inc
out
test
aad
add
jbe
jnp
arpl
nop
js
shrl
inc
je
pop
push
fmuls
sub
adc
cmp
xchg
mov
mov
mov
adc
sbb
cmp
push
out
incb
std
loope
shl
scas
xchg
iret
inc
iret
in
lret
dec
adc
and
cmc
ret
cwtl
inc
rcll
das
sahf
sub
xchg
test
enter
lahf
mov
ds
xchg
fdivp
out
out
or
std
sub
pop
jge
adc
pop
pop
pop
and
lret
dec
iret
inc
cmp
les
cmc
fisubl
mov
cld
andl
mov
aas
or
jns
ja
jmp
inc
ret
dec
adc
sti
pop
ja
andl
sarl
sbb
xchg
iret
cmp
xor
iret
dec
rorb
lea
sbbb
popa
fildl
das
cld
pop
out
lcall
xchg
push
cmp
mov
cmp
dec
cmpsb
inc
addr16
bnd
pop
arpl
xor
in
jo
leave
mov
xchg
popf
scas
or
test
aam
sbb
and
mov
mov
jnp
fwait
sbb
and
test
fwait
movsl
adc
jg
and
mov
sbb
in
insl
push
pop
push
lahf
int
int3
adc
popa
rorb
imulb
xlat
push
jmp
pop
jl
lods
push
jae
or
xlat
lds
ds
and
addr16
xchg
icebp
xor
in
jb
lock
mov
movb
xchg
cmp
aam
lds
push
and
aad
ret
gs
inc
push
sub
and
xchg
sbb
or
mov
sti
cltd
inc
mov
sbb
in
jl
insl
out
sbb
imul
sbb
fcomps
mov
dec
blcmsk
jb
inc
lcall
lahf
or
pop
mov
and
ss
test
bsr
lods
stc
stc
lds
notb
and
lods
test
mov
repnz
icebp
push
sbb
mov
cwtl
int3
repz
hlt
ds
clc
pushf
negl
aaa
push
or
mov
std
leave
sub
iret
stos
addr16
pop
movsb
xor
dec
insb
xchg
mov
jle
negb
int3
push
fdivl
movsb
add
out
aad
push
in
test
sbb
pop
jne
mov
ss
pusha
mov
adc
jb
xchg
mov
rclb
inc
xor
pop
lock
out
jnp
inc
out
idiv
adc
shr
xchg
pusha
xchg
xor
lds
or
jns
in
pop
popa
arpl
insb
add
mov
in
addr16
inc
daa
dec
fnstenv
loopne
mov
jns
outsb
je
and
push
xchg
in
std
pop
or
cmc
adc
movsl
pop
lcall
xor
xlat
sub
fwait
outsl
in
and
aad
dec
inc
mov
outsb
out
fldt
movsl
cmp
seta
sbb
popl
jg
dec
sbb
jp
insl
mov
xor
jp
add
adc
and
pop
pushf
rolb
pusha
loop
pop
mov
cli
xchg
xchg
int3
push
jg
xchg
imul
pop
scas
cmp
mov
aam
idivl
iret
xchg
es
pushf
lret
int3
sub
mov
shll
mov
iret
push
add
fdivp
sti
gs
decb
sahf
dec
xchg
icebp
fimuls
aam
sti
inc
mov
jo
cmpsb
mov
adc
cmp
ss
mov
mov
or
cwtl
sub
push
push
and
sti
pop
sahf
cmpsl
inc
fadds
jp
cld
dec
push
rcrb
test
out
lret
dec
daa
xchg
mov
and
jecxz
sub
ds
sub
inc
arpl
in
stos
jecxz
dec
and
push
jne
cld
data16
xchg
mov
mov
pop
loopne
pop
dec
std
push
into
stos
mov
enter
push
pop
fdivr
xchg
mov
sbb
push
test
ss
jle
lcall
mov
sub
ret
test
push
mov
in
hlt
hlt
xor
xor
shrb
dec
loopne
sahf
adc
dec
cld
xchg
lret
push
cmc
movsl
out
and
push
jg
mov
in
mov
xchg
sub
cmp
dec
rol
sub
sub
add
push
jae
add
cmpxchg
arpl
fisttpll
cmpsl
es
popa
mov
sub
fwait
lahf
lahf
gs
cltd
sub
jmp
push
pop
mov
inc
test
add
ret
add
nop
mov
xchg
inc
cmpsb
rcl
xchg
mov
sahf
shll
shl
or
xchg
iret
repnz
lcall
lret
dec
xor
xor
pop
daa
cmpl
mov
lock
ja
inc
push
aas
cmpsl
test
xor
mov
ljmp
loope
and
je
mov
push
add
push
mov
int3
dec
jg
xor
in
lock
loopne
or
leave
rorl
loope
or
pop
fcomp
out
out
outsl
fwait
sbb
fs
in
mov
push
inc
lret
aad
decb
lea
jle
xchg
xchg
ret
push
jae
cmp
cmpsb
xor
lods
push
test
stc
imul
pop
adc
fisubl
jb
mov
cmp
mov
mov
add
sub
xor
jne
cmp
sub
lea
push
in
test
dec
add
or
cmp
jmp
xchg
jne
add
cmp
add
out
push
mov
mov
notl
fcomps
mov
mov
push
mov
roll
enter
mov
mov
test
pop
pop
xor
ret
cmpsb
fmulp
addr16
sbb
jle
lea
xchg
xchg
cmp
nop
mov
add
jl
jmp
xor
lock
shlb
jecxz
sub
int
pop
xchg
mov
insb
adc
daa
lods
push
dec
sbb
fcomip
sub
insb
or
lcall
jae
stc
orb
sub
cmpsb
cmp
mov
stc
scas
mov
aad
mov
mov
mov
adc
movsl
xor
mov
jl
mov
pop
jnp
cli
or
and
mov
leave
daa
fsubl
or
pop
cmp
testb
shlb
add
js
add
aaa
mov
jnp
cmp
inc
mov
jle
stc
mov
jge
xchg
andl
notl
pop
test
inc
sub
bound
jmp
fiaddl
jge
xchg
ja
sti
add
mov
xor
rclb
fnstsw
mov
and
sub
add
jne
xchg
jnp
mov
out
outsb
xchg
test
popf
jle
adc
rcll
loope
xchg
add
fs
movsl
rcrb
dec
mov
dec
cli
xlat
pop
std
fcomi
dec
stos
cmc
cli
lret
mov
scas
push
loope
cmp
idivl
pop
out
mov
fbstp
in
mov
fisttpll
insb
lret
jle
xchg
jl
data16
fwait
pop
leave
mov
adc
mov
mov
add
popa
leave
leave
mov
pop
sub
cltd
mov
cmp
cli
cld
icebp
repnz
xor
sub
outsl
loopne
rolb
or
cld
bnd
rcrb
lahf
fdivrs
cltd
jl
and
cmp
push
fldcw
nop
cmp
mov
sbb
fs
jno
in
xchg
pop
fstps
add
mov
inc
push
addb
jno
inc
shlb
xor
lret
mov
jg
js
cmp
jns
mov
movsb
fsubrl
or
cmpsb
inc
pop
in
dec
js
jno
mov
ljmp
movsb
leave
and
and
fsts
sbb
rcrl
xor
bound
xlat
aaa
test
dec
sbb
scas
add
xor
test
cmp
inc
cmpsb
jmp
dec
fwait
or
in
and
cmp
fwait
ret
ja
adc
stc
in
and
je
call
hlt
lods
sub
sbb
ficomps
adcb
xor
dec
mov
ss
jno
push
pop
nop
into
jmp
mov
popa
ljmp
push
inc
cwtl
and
arpl
test
popl
xor
aaa
mov
push
mov
es
mov
mov
dec
sbb
ja
adc
push
cs
stc
insb
sub
jmp
xor
out
stos
push
fsubr
popa
addb
lcall
cmp
daa
cmp
or
lcall
xchg
test
sub
mov
loop
stos
lret
mov
push
movsl
fbstp
jno
jae
rclb
mov
out
into
fnstcw
lods
xor
fisttpll
ss
pushf
loopne
dec
pop
scas
pop
icebp
inc
dec
adc
mov
out
stos
mov
cmp
repz
inc
pop
out
mov
out
cmp
sbb
add
add
pop
jo
mov
mov
mov
clc
push
loopne
clc
xor
mov
fcomps
aad
mov
das
sbb
jmp
or
lret
xor
cmp
addr16
scas
cltd
fwait
popf
dec
loopne
jle
insl
push
add
int
test
dec
mov
arpl
xchg
or
popf
es
cmp
mov
push
pusha
and
frstor
rcrb
mov
and
dec
adc
push
xchg
movsl
and
sbb
call
cli
movsb
bound
shll
negl
js
in
popf
out
jg
mov
dec
xor
sub
aam
leave
pop
aam
mov
inc
xchg
jnp
outsb
dec
sar
xor
push
ud0
data16
int3
xchg
cmp
negl
sub
jecxz
arpl
dec
lcall
push
repz
sahf
call
inc
sub
push
aam
fwait
sbb
pop
dec
aas
mov
les
xlat
std
or
pop
lds
jae
decb
sub
out
push
push
fcomps
and
dec
jg
cs
bound
pop
pop
jo
inc
adc
push
mov
and
cmpsl
sti
int
pop
xchg
jae
out
jmp
mov
mov
add
je
iret
adc
and
add
fildl
ds
xor
ja
push
out
jecxz
xor
ds
outsb
cmp
pop
imul
mul
jge
fisubl
xor
xor
dec
pop
loopne
and
xor
push
mov
pushf
dec
int
add
pop
push
out
les
xor
mov
mov
adc
sti
jno
adc
add
or
lds
dec
fimull
xchg
push
push
inc
jno
insl
mov
popl
hlt
or
loope
mov
rorb
in
jns
aaa
loopne
adc
test
and
shlb
vmwrite
stc
fistpl
sub
fs
push
mov
xchg
mov
or
mov
xlat
dec
mov
movl
lea
in
aas
cs
xchg
push
pop
pop
cmc
mov
cmpb
mov
loop
inc
adc
push
dec
cs
add
mull
pop
and
sbb
cli
sti
sarb
ficompl
mov
cmp
lret
push
out
popf
mov
pop
das
mov
lea
test
ds
sti
push
pop
jl
adc
pop
cwtl
mov
xorb
iret
push
and
sub
dec
jg
push
or
lret
pop
imul
int
sbb
push
les
cld
adcb
mov
push
cwtl
jp
cli
xchg
loope
xor
xchg
aas
ja
push
jl
mov
popf
dec
in
ds
xor
int
sbb
outsl
fimuls
mov
cmp
jmp
sub
and
xchg
scas
fsubs
gs
dec
pop
cli
add
lods
mov
imul
dec
out
daa
sub
sbb
push
ljmp
outsl
pop
jno
xor
xchg
xor
xlat
test
jp
xor
arpl
sbb
inc
lods
cli
mov
lahf
mov
lcall
jo
jle
test
lret
popf
inc
xor
xchg
test
pop
mov
call
in
pop
dec
aad
outsb
mov
mov
sbb
sub
adc
xor
mov
aam
cmp
add
xchg
clc
xchg
push
aad
adc
idivb
sbb
ja
mov
jae
arpl
out
out
mov
pop
mov
mul
fwait
call
add
xchg
and
mov
add
add
aad
movb
jg
fstpt
and
push
push
test
or
dec
data16
and
dec
lcall
sbb
sub
fimull
xchg
repz
rcll
inc
loopne
push
addl
daa
jo
imul
repz
cmp
inc
cmc
fsubrl
int
and
gs
leave
push
xor
xchg
iret
add
aaa
movsl
dec
les
xchg
nop
int
repnz
mov
or
lret
stc
cltd
loopne
lcall
cwtl
popa
daa
inc
in
call
cld
ja
outsl
and
mov
jo
popa
fcoms
inc
mov
shlb
popf
pop
sbbb
jp
pop
pop
stos
xchg
arpl
add
and
lcall
xor
subb
test
aas
or
mov
xchg
mov
push
jl
cmpsl
cmp
mov
test
adc
shl
in
iret
fiaddl
loopne
shrl
or
push
jo
stc
pushf
in
pushl
and
cwtl
push
sbb
mov
xor
mov
loope
jl
aam
int
cmp
lea
cmc
aad
insb
fisttpll
andb
push
jg
mov
mov
ret
or
imul
cmp
clc
test
adcb
insb
arpl
sub
cmp
adc
pop
test
push
push
push
pop
repnz
mov
mov
xorl
sarl
mov
dec
xchg
pushf
mov
push
out
cli
xor
rcl
aad
push
insb
sub
xchg
insb
cmp
adc
out
into
inc
xor
inc
pop
pop
cmp
addr16
pusha
jg
lods
pop
mov
fcompp
cs
add
xchg
inc
daa
stos
inc
loope
roll
out
insb
ss
movb
fsts
jbe
sbb
adc
mul
hlt
jmp
push
scas
dec
lcall
shrl
mov
adcl
mov
bound
mov
lock
xlat
shlb
jno
repz
xchg
outsb
mov
dec
sahf
xchg
pop
jns
insb
inc
pushf
xchg
lds
cld
dec
pop
lock
mov
call
and
pop
lcall
fisttpl
mov
add
sub
notb
sbb
jecxz
jno
popf
inc
sbb
cld
dec
outsl
ret
dec
imull
icebp
shlb
inc
ret
dec
jae
mov
out
hlt
mov
mov
scas
in
loope
scas
lock
jae
fisttpl
push
pusha
xchg
pop
popa
mov
and
jb
in
inc
es
mov
push
daa
jne
push
stos
inc
out
push
mov
xchg
lret
adc
data16
xor
std
push
or
mov
shrb
lret
mov
loope
repz
inc
or
rcrl
dec
repz
orl
scas
outsl
sar
test
aad
sub
push
and
insb
std
idivb
lods
adc
scas
mov
out
addr16
add
xor
out
and
sub
mov
outsl
lock
shrl
jno
xchg
subb
cmp
insb
mov
icebp
xor
hlt
lret
out
jno
mov
addb
or
mov
and
test
ds
xor
dec
mov
mov
fsubl
xor
mov
imul
jno
repnz
inc
sbbb
insl
test
xchg
xor
hlt
xchg
leave
rcrb
sub
sub
sbb
xchg
mov
lcall
mov
sbb
adc
lds
out
ret
popa
cmp
pop
pop
and
lret
loop
sub
pop
add
sub
sti
iret
lods
gs
das
pop
dec
adc
bound
mov
addl
mov
arpl
js
cmp
push
mov
into
jecxz
les
stos
dec
sbb
pop
bnd
sti
add
ljmp
jno
xchg
les
ljmp
testl
mulb
mov
leave
add
xchg
xchg
and
mov
sbbl
jnp
in
jo
mov
movsl
lret
cli
loope
xor
int
das
mov
into
jl
out
js
enter
push
xchg
mov
fstpt
repz
xlat
xor
sahf
inc
addr16
push
adc
mov
dec
mov
cs
inc
or
ljmp
jecxz
lahf
lock
in
push
add
and
cmc
cmp
dec
dec
loopne
movsl
rcrl
rcr
mov
mov
pop
cmpsl
movzwl
stc
pop
outsb
xlat
stos
test
or
imul
cmp
lret
into
dec
stc
dec
dec
popf
jge
test
mov
jbe
popa
jns
dec
mov
sbb
paddsb
andl
out
fistpll
lock
fstpt
xchg
and
mov
fldenv
fcmovnb
jmp
fadds
jmp
and
sbb
loope
adc
repz
ret
cmpl
loopne
outsl
xchg
ret
jg
dec
sub
stc
lahf
daa
or
adc
in
mov
sahf
outsb
gs
nop
imul
mov
lock
popa
roll
dec
test
out
outsb
test
lods
cmp
adc
sarb
adc
daa
push
jmp
scas
test
mov
mov
pop
sbb
dec
jle
dec
sbb
arpl
mov
xor
mov
sbb
andb
shlb
push
jl
or
push
sbb
and
sub
sti
xchg
popa
and
outsb
insb
lods
out
pop
out
xchg
add
xor
jge
ds
jae
xchg
xchg
cmp
or
push
mov
xor
mov
clc
fs
in
adc
dec
fst
lret
mull
inc
add
iret
aad
in
in
inc
scas
call
mov
xor
xor
popa
cmp
add
ret
data16
jecxz
ret
out
pop
and
and
push
xor
xchg
jbe
sarl
mov
pop
and
jo
push
inc
sub
adc
hlt
push
mov
std
fwait
es
add
inc
inc
dec
push
mov
stos
test
cwtl
mov
into
cmp
shrb
ss
pop
int
notl
cmp
rcrl
stos
fwait
ret
jae
into
mov
add
repz
fsubrl
fstpl
adc
sub
push
test
inc
js
fs
mov
clc
mov
loop
push
pop
lea
popa
or
out
mov
stos
shl
add
imul
in
push
ljmp
das
pop
dec
idiv
cli
mov
cwtl
mov
daa
loopne
or
add
dec
fstps
in
hlt
pop
push
fsubp
dec
cli
push
add
aad
imul
dec
cmp
sub
loopne
cmp
fwait
push
addr16
fisttpl
adc
movsl
fldenv
xchg
cmpsb
mov
jl
mov
xor
in
xchg
add
inc
stc
aas
lods
or
sbb
test
test
sub
imul
adc
andb
fnstcw
andl
sbb
fmull
in
adc
insl
bswap
pop
mov
sbb
ss
outsl
and
roll
stc
notb
xchg
push
mov
sub
mov
jp
inc
pop
xchg
and
or
mov
adc
cmpb
add
and
sub
xchg
std
movl
pcmpgtw
repz
cmp
pop
adc
int3
idiv
jb
pcmpeqw
jne
or
roll
repz
insl
iret
push
fmuls
xchg
pushf
inc
out
xchg
shll
hlt
aad
xchg
xchg
cmp
push
mov
xchg
sub
movb
inc
mov
jmp
adc
or
jg
or
imul
lahf
cld
jns
daa
in
in
push
or
xor
into
fwait
or
jl
mov
mov
fdivl
pop
popf
out
sbb
mov
mov
ljmp
daa
lea
adc
dec
ret
out
call
add
mov
int
dec
mov
jecxz
push
sbbl
add
dec
js
adc
sub
add
push
push
jne
xor
inc
outsl
sbb
sbb
addb
dec
xchg
fisubrs
push
or
or
imul
xor
rclb
xchg
xchg
dec
jecxz
jbe
sbb
inc
jle
rol
sahf
cltd
icebp
sub
popa
mov
in
mov
imulb
jo
repnz
loope
jge
jge
ljmp
mov
mov
imul
mov
push
cmp
ret
push
cld
subb
int
in
jecxz
scas
jno
int
xor
sub
dec
mov
push
hlt
repnz
std
inc
push
pop
sub
icebp
xor
push
xor
fstps
stos
lds
jge
pop
adc
loopne
and
jo
mov
das
mov
mov
xchg
jle
mov
int
ljmp
jle
pop
dec
sub
xchg
inc
xchg
je
out
sbb
mov
ds
call
loop
xchg
and
andl
rcl
push
negl
mov
xor
repz
enter
das
add
inc
test
movsb
and
xor
inc
filds
push
cmp
push
jge
imul
adc
ja
cmc
adc
xor
fldcw
jmp
lret
jmp
outsb
mov
sbb
adc
fldl2t
call
sub
test
mov
test
std
jp
call
aad
shlb
mov
jne
mov
cmp
inc
pop
mov
cmp
inc
in
push
mov
scas
xor
aam
shlb
inc
sub
push
mov
xor
fiadds
push
pop
in
xor
cmp
push
sarb
imul
jmp
sub
outsb
das
or
lahf
jmp
test
sub
push
sub
shr
mov
mov
pop
imul
cmpsl
loope
clc
xchg
xor
mov
xor
ds
jb
xor
cmp
mov
mov
movsl
lea
lcall
out
nop
push
insl
test
and
and
fidivl
jns
inc
mov
in
sub
push
mov
jl
xchg
dec
xor
xor
mov
dec
repz
mov
orb
les
xor
push
int
call
xor
mov
insl
std
sub
sti
mov
imul
xchg
lock
sti
xchg
jge
or
push
leave
stos
imul
loope
movsb
lcall
xchg
fdivrl
mov
mov
imulb
mov
push
daa
cmp
mov
cld
adc
add
push
cmp
xchg
iret
sbb
jmp
scas
cltd
rcll
adc
int3
shl
sub
mov
out
notl
aad
add
mov
inc
lret
and
and
into
or
dec
sub
mov
jae
insb
cmpsb
mov
xchg
sub
in
mov
invd
pop
add
data16
rorl
in
and
insb
pop
shll
sbb
pop
push
icebp
lods
pop
or
sub
mov
rcll
mov
fscale
fwait
mov
push
mov
loope
hlt
mov
cmp
pop
sub
add
sbb
mov
lods
adc
imul
xor
stos
push
repz
fiaddl
xchg
fabs
pop
xchg
rclb
pop
push
imul
inc
pop
dec
inc
cmp
push
mov
aas
pop
pop
into
leave
negl
jno
data16
push
rcrb
rcrb
mov
mov
pop
xchg
sbb
mov
jno
subb
dec
out
lret
cli
inc
test
push
xchg
addr16
hlt
seto
daa
ja
scas
pop
sub
and
and
mov
sub
dec
dec
or
movsl
mov
xchg
pop
imul
mov
fcmovnb
mov
mov
mov
jb
push
shrl
adc
test
nop
test
and
jecxz
cltd
out
daa
fsubl
insl
cmp
mov
std
dec
fdivrs
rorb
movsb
xchg
jg
movsb
push
mov
int3
cli
fstpl
mov
mov
sub
mov
adc
mov
push
mov
jno
ja
sti
xchg
clc
push
in
xchg
sbb
mov
test
mov
loopne
rorl
mov
inc
lods
loopne
sarb
outsb
pushf
fstps
sub
out
iret
inc
imul
cmpsb
jbe
or
xor
clc
mov
xor
aam
xchg
mov
add
mov
jo
lea
iret
stos
push
dec
ss
cmp
notl
mov
xchg
mov
jmp
pop
lods
mov
mov
nop
add
jle
sub
xchg
and
cmp
arpl
ret
cs
xchg
add
mov
fstl
dec
orb
mov
sub
test
xor
ljmp
mov
sub
popf
fldl
cli
pop
out
sbb
inc
jl
sbb
cmpsl
dec
jo
jl
dec
stos
sbb
popa
imul
out
xor
paddsw
sbb
xlat
lods
mov
pop
test
mov
adc
xchg
pop
dec
xchg
or
cmc
jp
sbb
clc
xchg
jl
rorl
cmp
push
divb
in
scas
rcrb
leave
mov
mov
cwtl
out
jnp
int
aas
ss
inc
push
aaa
inc
jne
shrb
rolb
adc
inc
pop
fsubrs
add
mov
imul
mov
mov
aam
movsb
and
mov
pusha
das
pop
sbbb
test
lret
stos
rcl
in
in
or
or
mov
pop
pop
lds
data16
cmp
push
sub
popf
fs
sti
loop
mov
cmp
dec
jb
inc
dec
outsl
adc
or
notl
xchg
dec
fcom
int3
leave
xchg
ss
ss
scas
cs
push
andl
test
mov
push
and
js
jg
mov
and
jg
mov
xchg
xor
insl
pop
xor
xchg
sbb
adc
test
cmc
mov
cmp
or
adc
mov
into
xchg
loop
jmp
inc
cmp
shl
add
leave
add
pusha
sahf
sub
dec
xor
mov
adc
sub
adcb
in
or
or
mov
test
aam
inc
je
jns
inc
imul
push
into
xorb
push
mov
mov
cmp
lods
mov
daa
jnp
in
fwait
imul
cmc
mov
scas
ret
xchg
call
arpl
call
mov
push
xor
lcall
out
mov
repz
insl
test
xor
jo
xchg
and
aam
lds
pop
sbb
push
sbbb
cmc
pop
movsl
aam
cmp
jg
roll
fisttpll
dec
flds
inc
rcrl
jmp
cli
rcrl
xchg
aaa
xchg
jne
mov
mov
arpl
push
subl
pusha
cmp
ret
les
movsl
xchg
andb
jno
push
sbb
push
fidivrs
scas
repz
lea
push
imul
xchg
je
and
jmp
pusha
sub
fisttpll
loopne
push
int
out
scas
jmp
fisttpll
xchg
mov
pop
adc
sbb
lret
rorl
mov
or
repz
test
out
mov
or
mov
pop
xchg
push
sti
pop
sbb
dec
test
je
mov
ror
sub
push
mov
add
mov
mov
sub
lahf
ret
in
bound
insl
movsb
shrb
outsb
add
frstor
fisttpll
xchg
cmp
inc
int
call
or
jle
jne
inc
mov
inc
sbb
lret
inc
int3
scas
fdivrl
jmp
inc
cwtl
pop
adc
or
scas
mov
or
adcb
sub
jg
jo
mov
push
cld
jo,pn
lods
add
movl
insb
jns
fidivrl
sbb
outsb
inc
push
adc
fsubl
cmp
xor
jecxz
lea
cmc
jge
int
test
in
push
mov
cmp
aas
and
sub
sbb
cltd
push
push
add
pop
xor
rcll
sbb
push
rolb
iret
into
dec
enter
out
out
outsb
out
and
daa
jp
dec
pcmpgtw
das
test
inc
or
imul
cmp
jl
clc
ja
push
aad
sub
lret
mov
fwait
or
in
mov
js
ja
loop
xchg
jns
mov
adcb
jae
xlat
adc
mov
and
fcompl
enter
imul
rcrb
mov
test
movsb
inc
test
jge
call
les
stc
jbe
popa
aad
and
xchg
leave
cwtl
sahf
hlt
jb
hlt
int
test
jg
add
dec
cmp
dec
sbb
dec
std
sbb
adc
mov
adc
pop
out
dec
cwtl
mov
out
xor
or
cmp
mov
push
ds
mov
testl
cmp
ret
sbb
pusha
jg
je
sub
adc
pop
mov
iret
push
jno
xchg
dec
in
pop
call
adc
jo,pt
aam
mov
lods
icebp
fsubrp
out
ficomps
mov
mov
push
jg
push
clc
loopne
adc
pop
ljmp
stc
pop
mov
and
cmp
stc
fsubp
dec
xor
outsb
add
add
rorl
in
jle
stc
into
jns
cmpsl
out
sbb
and
in
hlt
xlat
cmp
fdivr
mov
cwtl
loop
out
mov
mov
add
inc
imul
xchg
bound
xor
or
mov
test
arpl
adc
jns
inc
mov
push
inc
jmp
mov
cmc
and
cmpsl
push
movsl
dec
test
sbb
lahf
jmp
or
sub
cmp
lds
shlb
inc
shld
cwtl
outsb
inc
loop
xchg
dec
mov
inc
push
cmp
std
pushf
ficoml
dec
stc
adc
mov
cltd
mov
mov
xchg
sub
mov
mov
movsl
call
lahf
xor
aad
cmpsb
push
cltd
jns
mov
push
mov
mov
arpl
jp
mov
or
push
aaa
test
stos
push
out
pop
push
mov
sti
jecxz
push
ret
sbb
cltd
mov
fnstsw
repnz
loope
mov
scas
xchg
in
ret
orl
daa
stc
sub
in
ds
cli
loop
pop
add
cmp
movsb
lods
push
sbb
or
jecxz
or
mov
sbb
mov
ds
sub
xchg
add
sub
ret
jle
or
push
lock
imul
inc
fstpt
popl
stos
adc
cwtl
fistpl
sbb
xchg
cltd
jnp
popa
push
jecxz
mov
and
lock
out
mov
dec
test
xlat
jo
aaa
adc
xlat
mov
je
dec
in
pop
gs
imul
jg
sub
aad
push
mov
ret
loope
dec
aaa
out
pop
lea
loope
jne
add
mov
inc
daa
xlat
out
mov
pop
jns
xor
lret
bound
sar
adc
mov
push
movsb
adc
inc
out
inc
jg
lods
push
inc
pop
cmc
ss
jne
cltd
inc
inc
add
addr16
push
push
pop
xchg
adc
adc
in
fwait
pop
push
out
sbbl
jno
sbb
leave
jo
addr16
fadd
shlb
icebp
ljmp
jmp
call
sahf
fcomps
dec
insb
and
cli
mov
sub
jle
mov
loop
outsl
cmp
xchg
inc
aad
into
mov
pop
or
out
xchg
roll
pop
jbe
sahf
cmp
pop
sbb
xor
insb
shl
divl
jb
popa
pause
int
lret
rcrl
mov
mov
xlat
stos
inc
stos
sbb
pop
add
xor
mov
push
pop
mov
addr16
mov
pop
jle
hlt
adc
and
int
xchg
mov
push
fiadds
xor
cmpsb
imull
cmpb
xchg
sarl
mov
cld
cwtl
test
push
jge
fdivs
or
popf
dec
jae
jp
test
fmul
push
xchg
aas
movsb
push
int3
in
and
and
dec
roll
pop
test
sub
push
mulb
xchg
movsl
xor
pushl
cld
lea
sbb
add
stos
test
mov
je
ficompl
mov
addr16
xchg
jp
and
jmp
jnp
outsb
push
outsl
ja
xchg
enter
adc
mov
out
xchg
sbb
in
lgs
fwait
push
dec
xlat
into
insl
fucomi
mov
subb
insb
cld
movl
push
leave
mov
push
cmc
mov
mov
stos
mov
lds
pushl
xchg
adc
jge
mov
xchg
lea
pop
xchg
outsb
mul
pop
test
dec
js
cmpsl
imul
jo
sbb
pop
dec
pop
out
cwtl
sub
out
fstps
test
cmp
rcl
jb
lods
and
js
dec
xor
mov
inc
add
sub
shlb
incb
cmp
out
popa
cmp
push
ja
popf
std
mov
push
pushf
jbe
add
int3
js
pop
in
mov
outsl
mov
pop
loop
inc
mov
cmp
mov
mov
jp
jno
dec
cmp
mov
popf
push
loope
push
cmpsb
xchg
ds
dec
sub
into
xchg
pop
xor
neg
ja
mov
sbb
addb
jo
xlat
and
adc
sub
repz
mov
sbb
aaa
lcall
push
inc
inc
js
and
ret
iret
insb
es
mov
cli
insl
pop
mov
and
dec
xchg
lods
js
dec
int
sbb
lods
jmp
add
js
ljmp
adc
push
jbe
roll
pop
add
cmp
adc
call
lea
add
test
xor
mov
out
cmp
pop
add
pusha
xchg
jae
aas
or
push
jp
cmpsl
cmpb
adc
mov
sbb
int
mov
je
lods
cmp
adc
pop
inc
cmc
and
mov
sbb
and
mov
jecxz
dec
sub
pop
aam
dec
mov
sbb
loope
dec
fcmovb
xchg
xchg
push
test
movsb
pusha
shll
aas
negl
cmp
cld
mov
in
sbb
out
rorl
push
push
in
mov
push
xor
test
lock
rorl
pop
cmp
shl
mov
je
out
jle
cld
jmp
loop
loopne
test
dec
fadds
pop
xor
mov
or
test
shl
or
push
adc
pop
push
push
xor
xchg
subps
std
add
dec
push
mov
nop
or
adc
mov
mov
ret
xor
or
dec
into
inc
inc
lods
iret
add
cmp
cmp
sti
adc
cmp
push
push
pop
out
xchg
lcall
adc
daa
pop
mov
notl
jp
sbb
lods
ja
xchg
mov
xchg
je
cs
dec
xlat
fmulp
add
mov
int
dec
sub
nop
pop
fwait
icebp
jne
xor
ljmp
jnp
xchg
outsl
mov
pop
stos
js
lds
inc
sbb
adc
xchg
rclb
inc
lret
cld
sahf
es
ret
mov
cmc
and
jl
add
arpl
sbb
scas
vshufps
ret
xor
push
xor
fnstenv
xchg
push
mov
mov
adc
xchg
fstpl
xchg
aas
sarl
jecxz
xchg
lock
xchg
aam
lret
dec
call
int3
mov
jp
mov
jne
xor
cmp
in
lret
mov
jbe
cmp
sbb
enter
fldl
nop
mov
loope
rcrl
xchg
sbb
pop
xor
nop
and
jg
dec
inc
iret
mov
sar
jge
cmp
jle
jo
add
js
push
fmul
jmp
cmp
xor
aas
mov
jb
aad
push
js
jbe
test
sbb
xor
sbb
aas
pop
scas
mov
xchg
xchg
dec
inc
inc
jle
lock
and
adc
xor
xchg
dec
movsb
mov
inc
xchg
adc
add
jge
or
sub
mov
insb
cwtl
hlt
aad
lret
adc
or
add
push
popa
pop
pop
inc
lea
or
jl
add
aas
arpl
movsl
inc
sahf
dec
xchg
mov
cwtl
pop
jb
dec
push
ljmp
test
stos
ds
jno
in
and
aad
in
push
daa
cmp
mov
dec
xor
dec
stos
push
mov
ds
adc
mov
jae
stos
imul
push
pop
cmp
int3
mov
adc
iret
in
lds
pop
mov
jmp
sub
add
inc
mov
dec
xor
and
mov
lahf
or
ja
pop
push
repz
mov
xchg
int3
mov
rcr
jecxz
punpcklbw
add
mov
cli
test
pop
xchg
rcrl
rclb
flds
les
add
repnz
push
test
pop
leave
adc
dec
xor
inc
inc
inc
pop
mov
pop
in
lret
jae
adcb
pop
push
lock
cmpsl
xchg
movsl
adc
div
mov
sbb
fisttpl
pop
gs
xor
lret
cmpsb
cs
inc
out
push
mov
push
movsl
dec
push
push
jmp
pushf
stc
push
mov
and
jmp
jbe
std
movsl
dec
movsl
fisubrs
push
push
jb
and
push
xchg
lds
xor
inc
xor
fs
out
loopne
out
and
mov
jnp
pop
bnd
jg
inc
inc
and
ror
xor
pop
push
mov
cmp
push
aad
cwtl
movsb
mov
mov
pop
mov
mov
fstpl
lods
xchg
fdivrl
cmp
ret
adc
jne
mov
cmp
insl
jo
cmp
sub
add
push
lea
cmp
lcall
int
inc
jae
mov
jmp
aam
mov
sub
dec
ret
push
cli
xchg
or
rorl
cltd
push
push
daa
add
jp
shrl
movsb
lret
loope
mov
movsl
xchg
in
jecxz
cmpsb
inc
fwait
fs
fcompl
mov
aas
jle
push
sub
inc
mov
into
test
jle
inc
mov
mov
mov
pop
je
mov
push
in
add
setle
sub
sbb
mov
ljmp
jae
insb
rorb
and
in
or
mov
loop
pop
negb
adc
mov
cmc
xor
outsb
push
cmp
push
test
lret
pop
outsl
adc
xchg
or
out
cmp
mov
stc
and
pusha
mov
cmp
loopne
pop
and
pop
mov
lock
mov
addr16
pusha
mov
push
xor
xchg
in
outsb
out
mov
sub
add
jns
add
inc
sub
leave
loop
pop
in
repz
xchg
cltd
sahf
sbb
outsb
add
movsl
aas
pop
xor
cwtl
mov
out
mov
pop
addl
lahf
imul
mov
dec
stos
pushl
ja
out
jno
sahf
dec
mov
sbb
sbb
mulb
jg
inc
pusha
out
push
xor
insb
push
cmp
or
mov
fmull
add
adc
adc
jg
dec
push
cwtl
xor
cmp
mov
sub
clc
cmpsl
inc
mov
mov
fnsave
pop
popf
movsb
aas
inc
lds
adc
imul
icebp
inc
dec
cwtl
in
out
mov
inc
xchg
cli
bound
mov
hlt
neg
jp
push
scas
xchg
push
out
cwtl
jge
cmp
sub
fcomi
cltd
cmp
int
inc
pop
outsl
rorl
jecxz
jmp
and
popf
js
jns
dec
mov
dec
mov
mov
mov
andb
mov
in
cmc
adc
jbe
xlat
push
adc
fmul
xor
loope
stc
sbb
sbb
dec
and
cwtl
lret
es
mov
cmc
inc
lcall
push
xchg
movsb
inc
cwtd
and
dec
lods
sub
lret
inc
fimuls
cmpsb
or
or
loopne
push
aam
std
pop
test
sbb
sti
sub
jle
sub
test
arpl
movsb
jnp
sub
lea
sbb
mov
sub
sub
repz
arpl
sub
loopne
and
mov
cmp
pop
in
dec
push
xor
mov
idivb
movsb
inc
mov
rcrl
xchg
pop
adc
pop
fiadds
xor
xor
jecxz
pusha
sbb
testb
inc
and
mov
xor
jns
jbe
outsb
sbb
cmp
adc
fsubr
into
lret
int
or
pop
notl
mov
clc
or
lods
dec
pushf
gs
das
inc
mov
cmp
cs
xor
and
jl
and
sbb
xchg
mov
inc
sub
cmpsl
imulb
add
fs
and
js
data16
out
or
inc
iret
fildll
mov
in
fisttpl
sub
adcb
aad
jl
fdivp
mov
jle
mov
pop
aaa
jmp
out
cmp
jo
outsb
pop
add
dec
xchg
syscall
call
jbe
fs
xchg
jl
jl
sti
jnp
or
shl
scas
mov
rolb
or
dec
aam
pop
mov
or
add
hlt
dec
testl
push
dec
movsb
leave
jae
aam
cmpsl
pop
ss
push
push
jb
loope
es
vmwrite
cmpb
jecxz
mov
xchg
mov
test
ds
dec
inc
cwtl
cltd
cltd
enter
cmc
sti
minps
fcompl
mov
shl
fsubrs
xor
popa
push
push
pusha
mov
shlb
xor
pop
in
pop
fists
add
mov
hlt
cltd
pop
das
lea
pop
xchg
scas
outsl
xchg
dec
cs
mov
sub
xor
sbbl
and
out
xchg
pop
cmp
jns
and
das
or
js
or
adc
hlt
jle
test
mov
in
jo
icebp
mov
xorb
pop
addb
mov
and
mov
lret
xchg
icebp
pop
lds
popf
sub
inc
rorb
in
sti
and
test
lds
icebp
xor
jne
dec
iret
push
xchg
les
outsb
sbb
aam
jo
mov
add
dec
add
arpl
pop
sbb
and
pop
cmp
mov
jne
mov
push
adc
ret
sahf
std
mov
xchg
and
add
cli
repz
out
shlb
mov
shlb
in
js
xor
out
fwait
neg
add
inc
push
sub
ss
xor
leave
xlat
test
call
incb
mov
jg
or
jbe
testl
int3
test
pusha
movsl
jno
test
es
xchg
cltd
das
aad
pop
data16
mov
jg
es
mov
jae
popa
cmp
leave
inc
mov
or
cmp
push
pop
imul
sub
in
rcrl
pop
jo
and
jne
inc
mov
popf
es
popf
sub
push
mov
cwtl
ljmp
insb
pop
and
pop
rorl
div
outsb
cltd
das
sbb
mov
dec
call
sahf
xchg
pushf
js
and
leave
add
and
ja
xchg
ss
xchg
out
xor
push
sub
mov
adc
mov
lods
mov
jge
insb
filds
mov
and
loop
push
mov
push
movsb
jl
sbb
outsl
inc
enter
inc
mov
push
pushl
mov
lret
testl
cmp
pop
mov
xchg
sub
mov
rol
mov
cld
inc
cmp
sub
sub
imul
loop
and
rorl
lcall
lret
call
sub
inc
mov
push
sub
shlb
mov
xchg
and
daa
pop
mov
call
mov
mov
sbb
jns
pop
fs
gs
fstps
popf
out
fsub
aas
outsl
and
test
lret
aas
sbb
mov
test
pop
out
repz
jmp
ljmp
xchg
add
ret
mov
mov
pusha
inc
push
mov
mov
xchg
xorl
cmpsb
push
dec
cwtl
cmp
popa
pop
out
jmp
sbb
inc
push
test
mov
jmp
mov
add
dec
outsl
ss
xor
movsl
lea
pop
xor
or
cmp
and
jl,pn
pop
xor
fs
loopne
pop
es
xor
dec
outsl
test
sub
mov
mov
mov
out
loopne
mov
jle
enter
nopl
jmp
clc
and
xor
mov
test
pop
pop
push
ret
mov
mov
push
mov
push
scas
mov
scas
xchg
fwait
pop
mov
mov
enter
push
xchg
sahf
or
pop
xchg
aad
dec
call
scas
jno
jge
clc
sub
or
iret
stc
adc
or
cmp
popa
and
sbb
lds
xchg
and
adc
push
dec
jne
in
jae
aam
jmpw
pop
and
insl
add
and
add
xchg
cmc
aam
or
outsb
pop
and
popf
xchg
jmp
ja
popf
adc
rcll
aaa
in
dec
dec
ljmp
push
aam
jl
push
stos
xchg
rolb
dec
add
in
pop
add
adc
mov
les
push
push
test
inc
stos
push
xor
inc
imul
cmp
loope
repnz
inc
fadds
bound
push
orl
iret
jmp
fdivp
xchg
sbb
lods
enter
leave
rol
add
jecxz
int
adc
mov
in
enter
jmp
sahf
mov
fidivs
aad
ds
inc
inc
into
inc
scas
jle
xchg
lcall
dec
je
daa
mov
push
mov
xor
jae
je
rcrb
jl
pop
sti
idivl
jle
adc
xchg
fisttps
jl
cltd
dec
ficompl
pop
dec
cwtl
and
shl
scas
sbb
mov
stos
insl
xchg
mov
std
pop
leave
ret
mov
sub
mov
adc
and
cli
shrb
dec
clc
add
les
lret
js
inc
push
lahf
rcll
and
rcrb
aad
mov
mov
and
push
in
jmp
nop
add
push
sti
pop
test
push
ret
xor
sub
push
xchg
int3
lcall
outsb
dec
xchg
xchg
hlt
xchg
iret
rcl
fsubl
cmpsl
jnp
jo
pop
in
sbb
push
test
cmp
outsb
push
inc
and
jle
xor
adc
and
inc
out
outsb
mov
mov
jns
mov
dec
repz
dec
mov
fnstenv
mov
inc
ja
jle
jb
shl
orl
cmp
rcrb
adc
xor
outsb
inc
sbb
sub
xchg
dec
call
ja
jbe
adc
pop
mov
inc
es
xor
mov
popf
call
jl
cld
sub
cld
jmp
out
fildll
and
mov
scas
lods
push
mov
fstps
andb
dec
pop
jg
test
mov
jno
icebp
aam
jl
or
pop
clc
fs
cld
mov
test
repz
xchg
mov
xchg
call
insb
and
jnp
dec
jg
adc
icebp
push
pop
out
icebp
test
sti
cwtl
sbb
jmp
mull
ja
iret
push
cmp
lods
and
movsb
out
and
fiaddl
dec
popf
icebp
inc
loop,pt
xchg
mov
jnp
xor
adc
enter
lods
jne
movsl
add
sub
inc
cli
inc
push
cs
xor
lret
mov
cmp
leave
dec
fisubrs
in
arpl
stos
mov
fstpl
lahf
lods
adc
insl
push
cmp
mov
jbe
xchg
repnz
xchg
push
jnp
xchg
int3
pop
loopne
std
sub
lods
mov
in
xor
in
test
jb
lock
push
adc
movsb
insl
pusha
mov
mov
iret
mov
or
pop
adc
cmp
or
orl
push
test
mov
adcl
or
loope
mov
and
sbb
daa
mov
cwtl
pusha
dec
adc
pop
shrb
dec
xchg
xchg
mov
and
int
or
in
sahf
mov
into
sub
dec
mov
dec
pushf
push
sahf
imulb
mov
ss
test
repz
sbbb
roll
jle
mov
push
cltd
stc
mov
adc
sbbl
cmp
repz
add
mov
mov
or
cmp
cmp
nop
fstpt
mov
in
in
sbb
xchg
andb
leave
iret
test
sub
mov
mov
ljmp
loop
mov
in
xor
sub
add
scas
push
mov
sbb
add
cmp
and
inc
jb
inc
xchg
pusha
daa
and
pushf
and
jne
adc
push
fcomps
nop
xchg
sub
sub
add
jno
lcall
push
sbb
incb
bound
bound
sub
out
jnp
dec
jl
shlb
push
inc
arpl
and
cmp
imul
inc
std
cwtl
enter
pop
sub
and
adc
popa
push
es
daa
mov
mov
jae
mov
cmp
sub
mov
into
jno
mov
mov
mov
rcll
nop
xchg
mov
nop
sbb
xor
xor
mov
mov
fistps
adc
push
sub
add
jp
lods
loopne
adc
dec
fnstsw
lret
jp
and
gs
push
jg
adc
leave
add
insb
test
clc
mov
ret
divl
mov
clc
pusha
pop
das
push
scas
jmp
pop
in
cld
pop
pusha
in
ljmp
hlt
and
xchg
lret
and
dec
not
lcall
cltd
outsl
lret
pop
lods
mov
xchg
xor
xlat
testb
sbb
inc
out
bound
das
out
out
out
shrd
sbb
jmp
dec
cltd
and
or
sarl
rclb
call
rol
sbb
loop
int
jle
fsubrs
stos
add
aam
pushf
icebp
inc
cmp
lcall
les
sti
lea
cmp
testl
mov
enter
cwtl
push
push
push
filds
fadd
dec
int3
idivb
inc
inc
adc
cli
and
in
ja
pop
lods
sub
movsb
push
in
loop
adc
lods
inc
enter
xchg
mov
adc
fistl
xor
xchg
pop
aad
jb
frstor
scas
sbb
fidivrs
xchg
xor
lock
in
mov
test
pop
add
ficompl
pushl
cld
cmp
pminub
sbb
loop
mov
inc
xchg
rcrl
adc
inc
add
mov
call
cmp
push
dec
mov
push
cmpsb
ja
mov
jne
out
fmuls
jmp
mov
mov
lahf
jmp
out
clc
mov
ja
cmp
lret
fsubl
hlt
sbb
mov
stc
jns
insb
in
pop
add
jle
add
in
pop
lahf
mov
jl
mov
fistpll
adc
xor
sti
rclb
fisubrl
mov
fwait
mov
shrl
aam
ss
mull
xchg
xchg
add
push
lea
cli
push
ja
lcall
jns
adc
fmull
sti
mov
int3
int
xor
push
sqrtps
sub
cmpsb
hlt
sar
jle
dec
mov
mov
xchg
push
and
js
pop
stos
push
xchg
and
inc
inc
clc
jno
and
lock
sub
and
pusha
ret
mov
cmpsl
pop
dec
int
in
inc
sub
jge
scas
mov
mov
push
and
jbe
aaa
js
enter
in
jmp
mov
jnp
lods
mov
lcall
inc
sahf
fldcw
stos
push
jecxz
and
sbb
enter
xor
lret
loop
xor
xlat
inc
and
mul
push
push
inc
sbb
clc
clc
adc
rorl
flds
or
in
jne
inc
inc
clc
jmp
into
inc
pop
jg
test
or
jp
jl
and
lods
ret
push
mov
push
mov
mov
adc
es
pop
andl
adc
popa
loop
adc
jge
gs
add
testb
or
mov
out
mov
or
sahf
xor
jp
mov
scas
adc
imul
mov
pop
xor
lret
outsl
sbb
xchg
dec
push
iret
gs
outsl
ljmp
push
shll
cld
inc
add
pop
pop
jo
sti
jbe
je
loope
mov
call
pop
jb
jno
pop
pop
push
cmp
sbb
in
test
gs
mov
iret
adc
daa
in
sbb
dec
fdivp
dec
xchg
cmp
sbb
loop
mov
fwait
push
daa
pusha
push
adc
ljmp
pop
xorb
lods
push
mov
mov
jno
sbb
loope
mov
sarb
sbb
test
dec
fisubrs
out
add
jl
or
xlat
insl
stc
fimuls
add
jmp
ljmp
fucom
data16
xor
ret
test
mov
hlt
dec
cmp
lods
cmp
xor
nop
sbb
shll
cmp
adc
and
mov
add
and
dec
push
or
cli
add
hlt
jb
adc
jne
sub
cwtl
push
sarb
cmpl
dec
dec
adc
aam
cmp
push
jo
stc
idivb
cld
cmp
jl
in
dec
pop
xor
mov
fstl
jge
dec
daa
or
je
jnp
in
lldt
rorb
rol
scas
or
out
pop
push
inc
je
push
scas
bound
sbb
pop
movsl
pop
or
enter
test
and
lea
cmp
push
in
xor
jge
cli
or
rclb
stos
or
inc
xor
aam
lods
add
mov
adc
xchg
int
push
cld
jge
ds
out
fwait
cli
jo
aas
divl
mov
ss
daa
icebp
xlat
adc
ljmp
or
fwait
enter
scas
decl
or
fs
in
lahf
jg
lds
test
add
mov
pop
data16
or
lods
xchg
ret
pushw
and
in
push
es
cli
clc
fldenv
add
and
pusha
rcll
jno,pn
cmpb
rcr
rep
out
adc
mov
inc
push
mov
adc
pop
test
test
sub
icebp
rcll
test
add
cmp
mov
jl
xor
xor
insl
xlat
mov
sub
pusha
out
pop
mov
frstor
mov
push
in
add
add
lock
jmp
xlat
lods
xchg
pop
mov
inc
and
in
ret
xchg
pushf
cmp
push
xor
xchg
mov
das
push
arpl
and
xchg
adc
insb
xchg
in
pop
loopne
ret
jecxz
sbb
mov
mov
test
and
test
lahf
mov
xor
pop
ret
pushf
push
or
aam
mov
int3
dec
subb
icebp
sbb
clts
cmp
fnstenv
sahf
adc
mov
fwait
lret
bound
hlt
adc
sbb
daa
xorb
mov
push
and
loope
xor
andl
inc
cmpsl
sahf
cmpl
sub
mov
jmp
or
dec
mov
addr16
scas
mov
xchg
sahf
dec
mov
lods
hlt
or
cmp
or
inc
jns
lret
gs
push
negb
push
out
adc
mov
lret
inc
mov
sub
ret
das
fwait
mov
pop
sub
int3
gs
inc
mov
pop
xor
ja
xchg
sub
lcall
ret
mov
sub
popa
fwait
test
dec
adc
scas
stos
cmc
or
inc
inc
in
jle
pop
lods
cmp
ljmp
mov
cmp
adc
sub
jnp
pop
bound
xlat
popa
push
daa
xchg
mov
xor
lret
adc
xor
or
pop
and
inc
rsqrtps
dec
or
movsb
repnz
xchg
sbb
jmp
sub
and
sti
test
ffreep
cli
mov
loope
int
mov
add
mov
push
push
pop
jge
jns
pop
les
adc
gs
mov
lods
xor
pop
jns
and
add
and
xchg
xchg
xchg
ret
mov
dec
repz
push
out
and
push
lods
in
pop
loope
jb
lret
in
fmuls
cld
lret
mov
cwtl
sub
fidivl
pop
push
aad
fwait
sbb
mov
mov
mov
mov
xchg
xchg
sub
xor
outsl
shll
add
jns
and
fnstcw
je
ret
aad
pop
mov
scas
mov
in
push
pop
mov
out
lock
lea
fidivl
stc
dec
jg
pop
int3
in
push
cltd
bnd
mov
jmp
in
ss
cltd
xchg
mov
cmpsb
xchg
subb
andb
push
jmp
rcrl
je
or
scas
addl
pop
mov
lret
xchg
jno
sub
inc
sbb
pop
mov
cli
int
xor
mov
jmp
or
pop
fcmovnbe
mov
adc
mov
mov
outsl
jge
sbb
sub
scas
scas
push
mov
orl
daa
pusha
fs
push
lds
out
lock
inc
into
mov
scas
pop
sub
std
loopne
push
stos
mov
jp
insl
lods
flds
nop
test
or
pusha
adc
fnsave
js
jmp
jbe
out
add
mov
cwtl
inc
xchg
xor
test
iret
jecxz
sub
lock
push
xor
xor
mov
scas
fmul
dec
inc
xor
mov
pop
cwtl
push
jmp
in
bound
stos
ret
int
adc
loop
in
xor
fisubl
jb,pn
push
sbb
fs
adc
jno
and
sbb
das
int
cmpsl
sub
cld
lret
xchg
stc
add
setg
aaa
sbb
adc
popf
les
inc
outsl
jecxz
mov
clc
test
push
enter
jo
pop
icebp
sbb
pop
fmull
cmp
pop
scas
fs
xchg
fs
es
sub
lret
jmp
lahf
lret
test
decl
cwtl
nop
mov
les
cmpsl
adcl
dec
sbb
sub
faddp
pop
mov
push
xchg
lret
inc
cmpsb
push
stc
adc
cmpsb
popa
ret
jno
mov
push
adc
inc
outsl
sbb
xor
or
mov
pop
pop
aad
adc
cmp
lahf
jle
or
sbb
dec
rorb
pop
data16
or
arpl
out
stos
mov
call
