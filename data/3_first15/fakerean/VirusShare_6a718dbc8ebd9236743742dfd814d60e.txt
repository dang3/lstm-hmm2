sbb
add
mov
jecxz
mov
mov
xchg
std
xor
lret
fildl
xchg
and
mov
dec
mov
sub
push
xchg
or
pop
ret
pop
repnz
sub
mov
or
cmp
push
leave
cmp
fidivrs
les
js
cmp
adc
addr16
push
jecxz
xlat
jno
and
mov
rcll
pop
imul
jecxz
negl
push
or
or
repz
push
aas
in
add
stc
lods
jl
adc
mov
inc
test
inc
cld
adc
stos
mov
mov
in
or
jge
jg
call
cmpsl
mov
adc
xchg
pop
jmp
shlb
or
sub
jae
mov
add
push
stos
cmpsb
sub
adc
outsl
inc
jl
cmp
mov
lock
cmp
cmpsl
sbb
xchg
adc
cmovb
lea
int
bswap
sahf
push
test
dec
xchg
xor
mov
lock
ret
lds
cmc
pop
xor
mov
jecxz
xlat
mov
mov
lcall
or
fs
cmpsb
xlat
subb
xchg
scas
dec
fwait
inc
inc
es
jecxz
repnz
scas
xchg
es
push
dec
mov
dec
je
mov
pop
mov
pushf
xor
test
mov
jnp
pop
add
jl
int3
cli
gs
push
movsb
jmp
in
xor
scas
insb
movl
popf
loopne
cli
mov
fists
arpl
pop
loop
rcll
mov
jp
data16
pop
in
sbb
into
push
and
jge
pop
imul
test
dec
popa
bound
test
cmc
popf
adc
lods
push
nop
popa
outsl
js
fwait
jge
stos
scas
cli
mov
fucomi
lea
loop
popa
adc
cmp
aaa
inc
imul
sahf
sahf
xor
or
stos
jge
lret
mov
inc
lahf
mov
dec
add
sub
dec
pop
mov
inc
int
cmp
add
mov
jno
sub
inc
jecxz
add
dec
push
jecxz
fldcw
xchg
js
mov
fcomi
cld
and
addl
int
cwtl
dec
leave
xorb
xchg
idivb
nop
sarb
lds
xchg
popa
je
fisttpl
push
inc
lret
lea
ljmp
js
imull
fwait
jle
mov
addb
cli
in
ja
test
mov
mov
xor
jo
fldcw
jbe
or
ljmp
aad
inc
cmp
jg
push
push
dec
bound
sub
push
cld
xlat
xchg
xchg
shll
push
mov
sbb
lahf
enter
adc
data16
adc
add
inc
subb
mov
xor
cmpsl
movsb
repnz
push
sub
xor
wbinvd
or
les
sbb
push
pushf
ficomps
adc
or
cmp
or
xor
mov
addr16
mov
clc
imul
and
xor
pop
adc
fdivr
popf
or
mov
mul
test
movsb
xor
test
popa
xchg
xchg
push
jb
js
imul
cmp
mov
aas
inc
insl
mov
aas
dec
shll
into
sub
stc
cwtl
mov
std
xchg
sahf
mov
jne
inc
mov
std
fdivrp
addr16
cmp
sbb
into
jns
popl
daa
daa
xchg
dec
iret
or
mov
insl
fdivs
ret
test
mov
push
int
push
dec
test
jne
push
xchg
xor
dec
ret
push
dec
pop
or
cmpsb
inc
adc
jp
lret
xchg
stos
add
subl
mov
mov
sub
arpl
or
fbstp
mov
lock
dec
mov
insb
scas
fstpt
xchg
out
out
mov
sar
or
xlat
bound
xor
mov
mov
fiadds
pop
xchg
mov
repnz
pop
adc
push
lods
sub
test
or
sbb
loopne
mov
xchg
or
pop
xchg
flds
cs
jbe
adc
pop
out
adc
js
sub
lock
sbb
orl
call
push
pop
cmpsl
loopne
dec
or
das
dec
push
popf
int3
push
mov
add
das
xchg
mov
mov
lret
mov
inc
je
out
shlb
out
js
in
fldcw
iret
lcall
pop
and
ret
adc
enter
push
shlb
adc
pop
fists
mov
int3
in
and
gs
jo
fs
jge
add
xchg
out
adc
decl
in
adc
fcomps
mov
in
jbe
mov
stc
lds
addb
push
and
inc
fcmove
jo
clc
outsb
mov
fldcw
adc
mov
aas
aaa
ror
pop
bnd
sahf
mov
jmp
add
push
dec
es
movsl
mov
aam
in
std
popa
popf
or
icebp
mov
xchg
xchg
pop
dec
enter
inc
lret
sbb
das
pop
addl
dec
mov
aam
lea
or
lcall
and
das
pop
test
scas
pop
insb
add
clc
xchg
push
jo
in
push
jle
sub
loop
or
hlt
and
and
xchg
jge
sub
sti
jns
or
fcomps
push
icebp
pop
xlat
jle
flds
xchg
adc
dec
jg
das
in
jae
pop
jle
cld
xor
aaa
fstl
iret
daa
sbb
test
je
xchg
mov
lds
fcmovne
dec
xor
push
push
fs
scas
movsb
pminub
sbb
scas
aaa
aas
xor
adc
cmpsb
xlat
cmp
add
mov
ret
pop
push
sbb
inc
inc
lcall
push
xor
pushf
lret
js
push
mov
insb
aaa
shll
in
fs
mov
pop
idivl
inc
push
mov
push
leave
scas
cmp
scas
mov
or
and
cld
movsb
outsb
xchg
push
xorl
xchg
loopne
aaa
lahf
stos
stc
movl
pop
sub
sbb
sub
jge
out
inc
mov
pop
adc
xchg
jnp
sub
sbb
mov
cmc
push
jecxz
pop
cmp
mov
fs
icebp
and
adc
ljmp
pop
cwtl
sbb
pop
pop
pop
inc
sub
dec
xchg
subb
add
jnp
cmp
mov
inc
stc
fsin
jns
sub
gs
loop
sbb
addr16
mov
movsl
imulb
daa
pop
or
data16
in
pop
call
or
cltd
sbb
gs
jo
lea
enter
iret
push
mov
in
int
mov
xchg
xor
sarl
arpl
push
andb
and
sti
sub
sbb
lret
testb
imul
insl
jo
mov
in
cmp
jbe
inc
jno
xlat
lock
lods
cltd
ljmpw
mov
imul
pop
sub
data16
dec
pop
out
loop
mov
out
lock
push
mov
incb
and
ret
jg
movsl
stc
int
out
push
push
decl
push
jecxz
dec
adc
frstor
push
adc
outsb
xor
push
xchg
pop
retw
or
cmp
in
xor
inc
ficoml
pop
xor
inc
xchg
cmp
push
mov
scas
and
and
inc
cmpsl
sub
fsubrp
hlt
ja
fimull
js
fwait
xor
mov
nop
jns
loopne
hlt
stos
je
out
mov
mov
mov
fdivl
jl
pop
push
sahf
add
mov
inc
and
fnclex
in
in
pop
mov
dec
dec
cmp
ljmp
stc
dec
mov
push
ja
mov
xchg
sbb
enter
xor
pop
fcmovnb
or
adc
jbe
outsl
rcrl
mov
inc
push
pusha
adc
ja
and
sbb
push
adc
cmp
mov
jne
movsl
dec
and
jbe
jnp
shrb
xor
pop
push
xor
fiaddl
xor
push
movsb
or
pop
popa
stos
add
cmpsl
jne
and
and
and
add
adc
sbb
frstor
mov
es
fistpl
enter
jl
bound
xor
push
leave
or
xchg
mov
mov
cmp
popf
les
outsb
and
cmp
fstps
mov
wrmsr
out
jo
frstor
pop
lret
sbb
xor
sub
test
out
push
mov
or
push
mov
ss
call
clc
loopne
repnz
outsl
jmp
fcoms
adc
shrb
sahf
xchg
mov
aas
lcall
lea
shl
push
fidivl
mov
notl
hlt
mov
js
mov
andb
lret
test
fpatan
outsb
ret
cmp
mov
je
inc
xor
addr16
fmuls
mov
mov
inc
xlat
mov
jmp
stos
mul
addr16
shlb
mov
inc
loopne
es
adc
adc
mov
les
pop
dec
mov
jns
cmp
orl
aaa
cmp
test
push
icebp
or
mov
cli
shll
gs
mov
sub
jg
popa
lcall
fwait
loopne
repnz
dec
paddb
ret
lahf
and
adc
mov
push
sbb
out
cmp
insb
xor
jb
mov
outsl
rolb
mov
mov
iret
sub
aas
stos
mov
popf
in
gs
sub
lods
aas
stc
orl
mov
lea
scas
cmp
add
and
jno
jb
icebp
cmc
jae
sbb
sbb
or
movsl
pop
call
aad
rol
push
gs
push
fucomp
dec
sbb
jl
into
inc
xchg
data16
fstpt
in
cmp
cmp
mov
mulb
cmp
or
cmpsb
scas
mov
pop
test
movsb
das
add
lods
mov
int3
jecxz
or
mov
jmp
mov
mov
das
lds
add
inc
sbbl
aam
dec
repnz
inc
sub
xchg
int3
in
repz
or
dec
ds
xchg
lahf
shl
out
mov
popa
das
shr
out
jo
loopne
mov
das
inc
je
pop
sub
daa
adc
jae
arpl
adc
sub
xor
pop
fwait
mov
gs
and
ja
pushf
cmp
jb
sub
pusha
add
mov
sub
and
popl
sbb
in
mov
adc
cmp
cwtl
lcall
loope
inc
in
ret
inc
out
adc
adc
inc
shr
out
xchg
fwait
xchg
push
loope
gs
mov
outsb
inc
mov
add
sub
movsb
inc
test
inc
cmpsb
cwtl
popa
sti
loopne,pn
stos
push
lods
out
scas
mov
popa
stc
pop
pop
xor
or
sub
mov
loope
shr
xchg
sbb
popf
arpl
mov
inc
aam
loopne
sub
pop
loopne
mov
jl
inc
pop
sti
sbb
push
dec
outsb
data16
pop
call
and
mov
mov
lret
pop
xor
insl
imul
stos
adc
inc
pop
sahf
sbb
rorl
xor
push
data16
lret
jno
pop
mov
mov
pop
repnz
sub
cli
out
stos
adc
adc
cmp
pop
mov
lcallw
das
inc
push
jbe
and
add
dec
leave
shll
scas
int3
xchg
imul
icebp
aas
leave
sub
in
sub
mov
dec
mov
pusha
pop
popa
xchg
out
scas
in
cld
jno,pt
jo
cmp
gs
in
push
fiaddl
lret
jp
inc
insl
adc
push
outsb
pop
jnp
xchg
inc
push
fs
repz
adc
testl
outsl
lret
sbb
jno
testb
fnsave
je
popa
stos
xchg
or
push
loop
pop
jle
out
mov
shr
xchg
mov
cmp
in
int
xor
cmp
jne
pop
aam
test
xchg
mov
add
add
fnsave
in
mov
mov
dec
xchg
and
pop
aam
jge
scas
push
cmp
orl
jae
jbe
test
stos
shrb
mov
in
cli
add
in
push
leave
jne
lret
pop
pop
jecxz
outsl
pop
inc
jg
andl
cli
ss
mov
sahf
mov
and
push
cli
sbb
mov
push
mov
pop
outsl
adc
out
adc
fists
mov
sbb
aas
pop
dec
push
incl
inc
pop
push
mov
jne
sbb
inc
repz
cmp
xchg
lea
mov
add
aaa
loopne
cmp
sbb
hlt
xor
and
stos
adc
mov
test
lcall
and
push
fs
insl
or
and
std
sub
cltd
push
lret
lret
push
dec
loop
pop
xchg
mov
dec
fisubl
mov
mov
shl
lret
into
aaa
mov
outsb
xor
xor
add
testb
out
mov
and
fidivs
mov
jecxz
in
mov
ss
scas
ljmp
cmpsl
mov
rclb
adc
xchg
inc
mov
mov
pushf
jno
jo
adc
fcomps
out
push
ljmp
movsb
shr
sbb
mov
ss
je
xchg
fs
or
push
inc
xchg
test
mov
lcall
jns
jecxz
outsl
sbb
out
jbe
scas
divl
lret
insb
mov
lods
daa
jle
popl
sbb
out
insb
je
inc
sbb
sti
jnp
sub
cmpsb
jo
and
or
icebp
fwait
mov
push
inc
fs
jecxz
push
mov
sub
jmp
add
data16
mov
out
mov
mov
mov
cmp
lret
xor
xlat
aaa
ret
xchg
and
int
stos
mov
and
xor
rolb
out
cs
fistl
sarb
jmp
jge
cmpsb
movsl
pop
pop
sbb
xchg
mov
lcall
push
add
cmpb
dec
addr16
icebp
aaa
jmp
inc
cmp
jne
stos
fldenv
mov
sub
xchg
in
xchg
arpl
and
xchg
push
xchg
gs
pop
sahf
loop
repnz
sbb
push
aas
in
mov
popa
ret
jg
loop
inc
lsl
jg
sub
cmpsl
lods
dec
in
mov
lock
int3
ja
rcrl
or
mov
push
pop
pop
adc
mov
xchg
xlat
jl
repnz
pop
fidivs
je
hlt
sahf
jns
cmc
mov
fwait
cld
pop
daa
pop
lcall
aam
or
cli
scas
jnp
out
xchg
sbb
push
fsubs
je
loope
push
xorl
mov
dec
mov
push
dec
push
es
bound
es
xor
clc
out
insb
jecxz
mov
out
outsl
inc
add
xor
push
outsl
mov
mov
loopne
ret
add
fcmovne
nop
pop
cwtl
pop
add
and
inc
and
rcll
mov
mov
mov
xchg
sbb
mov
sarl
inc
outsb
dec
cmp
push
fadds
add
hlt
xchg
push
or
or
inc
ret
incl
das
inc
fldt
clc
loope
jae
cmpsl
sub
inc
rclb
nop
jae
out
mov
push
pop
das
pop
arpl
in
push
xor
push
lds
pushl
pop
imul
sti
fucomp
flds
jo
in
out
rcrl
inc
scas
adc
inc
xchg
mov
out
cmc
pop
push
inc
dec
arpl
movsb
fidivrs
scas
div
aam
mov
xor
sub
cs
mov
data16
pop
rclb
sarb
xchg
cld
sub
inc
popa
sbb
adc
adc
aaa
addr16
pop
and
pop
gs
mov
mov
lret
adc
mov
data16
and
mov
sbb
cmp
int3
mov
xor
adc
aas
or
lret
scas
scas
xchg
cmp
lods
rcrl
ds
xor
pop
and
add
negl
mov
sbb
mov
xchg
fcomp
inc
lea
xchg
incl
sub
adc
test
shll
sbb
xor
rcrb
push
pop
mov
pop
rclb
leave
jmp
xor
push
popa
std
mov
inc
pop
scas
roll
ljmp
outsb
fdivrs
cmp
xchg
stos
insl
and
adc
scas
xchg
push
or
scas
ja
push
jae
iret
test
out
fnsave
xor
lock
idivl
cmpl
inc
test
push
decl
and
mov
mov
test
cs
shll
imul
push
in
cmp
mov
fisttpll
fcmovnbe
push
push
or
scas
dec
add
rorb
ret
cld
pop
xorl
in
sti
mov
fldt
mov
adc
pop
pusha
dec
shr
and
pop
inc
push
andb
dec
push
or
add
test
jecxz
into
pop
pop
lds
mov
ja
arpl
fwait
or
into
push
push
xchg
icebp
leave
xchg
pop
shl
call
call
sub
aad
jp
dec
push
pushf
add
xorps
xchg
mov
cmp
and
mov
jb
mov
adc
mov
mov
imul
and
sub
sti
cmp
out
or
and
fnsave
or
adc
dec
xor
imul
pop
int
mov
lret
insl
decl
sub
adc
mov
nop
into
lea
cld
xor
int
mov
mov
dec
stc
inc
mov
lea
lret
mov
pop
push
cs
mov
xor
int3
adc
shl
xchg
dec
loope
cli
jnp
mov
sarl
idivl
imul
push
loopne
and
sub
pop
nop
cmc
and
fcoml
pop
pushf
movsl
lcall
push
cltd
imul
in
sti
xchg
inc
push
dec
or
push
jge
xchg
xor
out
mov
adc
data16
sar
rcrb
sub
data16
jns
fnstsw
int
mov
mov
stos
xchg
icebp
js
jns
test
iret
xchg
push
inc
xor
mov
in
shlb
push
jg
out
fadds
stos
or
xchg
rcrl
add
push
dec
push
dec
popa
push
dec
inc
push
cmp
std
fldl2e
cmp
int3
mov
andl
mov
add
negl
mov
and
mov
lock
and
into
xchg
xchg
mov
ret
test
jmp
sub
out
xchg
and
xor
out
jbe
add
fs
data16
data16
jmp
movsl
jle
in
add
pop
cmc
dec
pop
mov
push
in
adc
push
cwtl
push
and
cmc
fcomps
pushf
jmp
jae
int3
jbe
mov
sbb
sub
in
push
pushf
int3
mov
inc
add
pop
xor
notb
int
pop
push
int3
jae
mov
cli
leave
mov
add
xor
and
push
adc
fmul
orb
push
ret
inc
std
rolb
xchg
out
test
xlat
cltd
ds
push
popf
iret
ficoms
pop
sbb
int
xlat
aad
adc
cmc
jp
xchg
xor
sbb
and
cmpb
ljmp
lret
nop
xor
mov
add
xorb
dec
sbb
lahf
xor
mov
mov
dec
push
mov
push
push
mov
je
jno
popf
mov
call
dec
bound
sarl
cld
stc
out
jns
faddp
enter
fiadds
mov
hlt
xchg
push
loope
mov
ret
insb
or
inc
fs
mov
jns
das
and
out
mov
call
lock
lea
mov
xor
mov
lret
xchg
outsl
cmp
add
and
rol
shll
mov
cltd
ja
xchg
sub
ret
out
sub
mov
lcall
lock
or
xor
jmp
pop
roll
jae
lds
mov
mov
stos
mov
jns
lea
sahf
in
cmp
and
ss
jo
pushf
push
xchg
push
jge
das
inc
dec
mov
mov
dec
call
sub
outsb
fcmovu
dec
sahf
nop
and
dec
adc
cmp
shlb
outsl
mov
and
push
mov
repnz
cmpsl
test
mov
rcrl
jno
fs
shll
adc
scas
andb
and
cmp
xchg
mov
imul
fcoms
mov
xor
cltd
mov
pushf
mov
enter
fcoms
das
xlat
popa
and
pop
cwtl
cmp
push
add
dec
les
data16
and
ss
pop
adc
mov
loopne
cmc
loope
mov
sub
inc
xor
sub
out
xchg
xor
push
push
pop
es
cmpl
cmpsl
sub
adc
in
dec
push
mov
lcall
inc
mov
push
cltd
mov
cmpsb
loop
jne
xchg
jge
xchg
fs
push
and
sub
sbb
push
stc
idivl
fdivr
adc
dec
adc
ja
sti
adc
repz
call
jae
rcr
in
jge
fcoms
fldenv
push
jle
ret
inc
mov
sub
je
fadds
mov
lods
mov
pop
pop
out
xchg
ret
sub
mov
in
mov
je
xchg
xor
sahf
jg
jmp
stos
dec
xchg
addr16
movsl
jle
add
fsubl
mov
in
jecxz
add
sbb
gs
inc
popf
sbb
lret
outsl
jo
mov
stos
sar
jno
rorb
in
enter
or
lahf
imul
aam
lcall
cmp
sub
jae
icebp
mov
xchg
pop
jl
xor
and
pop
stos
jge
icebp
jp
xchg
xchg
mov
std
pop
clc
mov
cmp
push
and
rorb
xchg
je
imul
and
and
xchg
xchg
jecxz
leave
and
std
and
xlat
subl
hlt
cmpsl
aam
or
inc
mov
sub
loope
xchg
cli
dec
xlat
call
pop
or
adc
adc
in
ret
sbbl
xor
adc
aaa
mov
or
enter
or
cmp
pop
fsubrs
jg
jl
pop
jp
sbb
testl
fucomip
inc
cmp
or
adc
lds
and
fmull
sahf
xchg
or
xchg
sti
jle
sbb
push
push
or
call
mov
sub
adc
out
out
push
pop
dec
test
or
pop
movsb
into
daa
xchg
push
test
addr16
popf
into
fwait
pusha
mov
gs
adc
or
or
dec
pop
fs
xor
fdivrl
gs
cmp
arpl
dec
xchg
stos
add
fisubrl
and
push
mov
mov
sub
xor
xor
mov
es
dec
and
fdivs
or
and
cmc
jg
mov
shlb
arpl
xor
mov
ja
in
jmp
push
out
mov
jnp
lock
xchg
ds
scas
sub
inc
jbe
pop
mov
cmovp
jg
andb
jne
iret
mov
dec
lock
pop
lea
mov
mov
divb
cltd
and
pop
shrl
rcr
pop
lahf
insb
in
pop
stos
xlat
rorb
pop
xchg
rorb
push
hlt
aaa
cmp
rorb
xor
imul
fidivrs
jle
sub
jl
fmull
adc
mov
pop
fwait
mov
mov
cmpsl
dec
mov
push
mov
movsb
inc
cmp
mov
iret
fdivrl
cmpsb
push
or
xchg
jg
sub
xor
dec
rcr
mov
mov
xor
mov
mov
icebp
fs
rcll
arpl
aas
and
roll
mov
push
xchg
jmp
test
hlt
cmp
adc
arpl
aam
arpl
xor
xchg
mov
aad
jb
adc
push
or
jg
out
ret
insb
inc
rcrl
or
lds
repz
sbb
es
adc
jge
mov
cmpsb
inc
sub
jge
enter
fs
xor
adc
testl
insb
into
les
jmp
out
leave
aaa
push
mov
data16
inc
jae
rolb
lret
sti
or
jne
das
fs
ljmp
push
jp
mov
cmp
je
hlt
pop
orb
mov
xor
jb
ds
movsl
ror
in
ljmp
xchg
mov
in
sbb
sub
sub
inc
les
shl
or
jge
pop
call
in
add
add
popf
mov
sub
js
jecxz
xor
fwait
std
mov
repnz
lahf
cld
mov
outsb
ljmp
fs
scas
adc
jle
jo
pop
fdivs
hlt
push
js
pop
subl
or
stc
xlat
xchg
sub
dec
faddl
cmp
xor
dec
call
sub
inc
jb
in
in
lods
jae
jno
aas
es
dec
pop
std
pop
xor
in
sarb
push
loop
out
into
adc
mov
push
test
shlb
jecxz
insb
subb
jae
cmp
into
je
push
das
shlb
rcrl
call
sbb
das
push
xor
mov
les
and
lret
lods
ds
rol
sbb
mov
imul
push
fs
jle
sarb
xor
cld
xlat
imul
dec
xchg
jns
jmp
out
rcr
scas
int
lret
push
movsb
rorb
push
xchg
insb
imul
sub
dec
jp
sub
dec
mov
aas
gs
mov
mov
push
mov
shll
xchg
in
push
dec
ds
or
std
jp
add
cmpsb
stos
sub
inc
push
jp
mov
mov
cwtl
and
sbb
push
cmp
sbb
inc
pop
clc
push
stos
aaa
push
das
adc
mov
xchg
loop
cmpsw
loope
push
repz
inc
jge
mov
push
fistpl
cmp
jge
jnp
push
dec
dec
hlt
loopne
push
ss
decl
jp
jg
scas
cmpsl
add
adc
cmp
push
push
inc
imull
xor
lds
rclb
les
imul
cs
adc
sbb
jae
fsts
stc
scas
hlt
pop
icebp
jmp
xor
sbb
jne
aam
mov
sub
incb
push
dec
xor
add
cltd
rolb
push
mov
addr16
mov
fsubrp
cmpsl
sbb
sub
push
lea
in
aam
and
shl
push
and
or
mov
or
in
sbb
rcr
mov
jge
pop
xlat
jns
aaa
xchg
arpl
jnp
sbb
rorl
insb
add
sbb
sbb
test
mov
notl
jne
test
sub
push
sub
mov
push
jns
pusha
mov
and
add
push
arpl
sbb
jns
adc
dec
jle
mov
popf
adc
xor
mov
add
xor
test
sarl
push
rcr
movsl
mov
insb
enter
and
xor
mov
xchg
pop
repz
in
orb
in
xor
ds
jge
ss
lcall
pop
fcompl
cmp
pop
mov
push
cmpb
dec
test
adcb
mov
clc
cmp
lods
arpl
mov
int
cmp
loopne
mov
xor
stos
adc
sub
icebp
mov
pop
mov
push
pop
rorb
ljmp
fidivs
push
add
or
sbb
adc
pop
adc
fidivrl
jp
shll
cltd
mov
mov
dec
mov
add
sbb
stos
rorb
movl
mov
adc
popa
adc
mov
xchg
jg
into
xlat
das
cltd
mov
jae
shlb
test
movsl
or
clc
jge
nop
mov
bound
repnz
mov
shlb
xchg
cld
int
js
mov
adcb
fstpl
push
pop
fs
sbb
or
shl
xlat
aad
mov
mov
or
mov
and
cld
mov
call
fadds
sub
mov
in
add
jno
add
and
cmp
iret
xchg
pop
or
nop
jne
cli
xlat
mov
pushf
pop
aad
outsb
cmp
sub
lock
xchg
push
mov
es
dec
adc
out
add
or
push
and
add
cmp
jge
test
push
lock
loopne
ret
cs
scas
push
inc
mov
lock
shlb
inc
repnz
mov
in
rorl
jo
inc
sbb
pop
stos
cwtl
inc
daa
inc
pop
mov
stc
mov
jg
insb
inc
or
test
rcrb
jae
in
adc
into
pop
rcr
in
mov
mov
ds
insl
dec
mov
imull
jns
ds
stos
mov
stc
les
and
cmp
movswl
inc
cmp
lahf
pop
dec
cmp
pop
pop
mov
xchg
js
inc
test
cmp
mov
repnz
push
movsl
arpl
mov
add
lcall
sub
test
xlat
cmp
in
imul
jb
xchg
sahf
and
popa
xchg
push
iret
inc
xor
std
aaa
shrb
push
jmp
mov
ficoms
xchg
stos
push
sub
popf
mov
cmp
scas
mov
lcall
and
push
xchg
fwait
cmp
sbb
adc
out
scas
dec
xchg
sbb
lods
stos
stos
push
loopne
popa
xorl
pop
fsts
dec
test
aas
push
stos
jne
lock
mov
mov
movsb
pop
aas
xchg
xor
jb
imul
rcll
xor
decb
mov
cld
lds
add
mov
or
jno
rcll
out
add
enter
int3
push
xchg
add
mov
xchg
dec
dec
icebp
lea
testb
bound
es
xor
and
mov
fwait
int3
out
jecxz
imul
daa
aaa
mov
in
xchg
lock
je
ds
and
outsb
movsl
mov
nop
push
into
out
mov
pusha
in
pop
ljmp
stc
ret
push
xchg
scas
xchg
add
push
ret
mov
mov
pop
call
insb
mov
pop
cmpsb
cli
add
mov
ja
xchg
and
call
aad
lods
jae
sbb
rorb
data16
cmc
pop
loop
sub
es
pushf
bound
and
icebp
mov
add
mov
inc
shlb
mov
in
or
gs
pop
mov
fistpll
fcoml
xchg
jne
dec
lea
cmovno
xchg
jb
insb
inc
jl
xor
repnz
push
lods
dec
aas
add
jecxz
push
cmpsb
jo
cmovl
mov
pop
push
cmp
rcrb
push
push
shrb
shrb
mov
push
inc
subb
xchg
xor
inc
push
push
sbb
adc
int
iret
stc
xor
or
imulb
das
repz
xchg
shrb
jl
dec
mov
cmpsb
cmp
addl
mov
jnp
push
mov
xor
dec
push
push
out
aad
inc
sbb
xchg
sbb
lods
rcll
fimull
pop
std
mov
stc
lret
fcmovne
ds
mov
jmp
pop
xchg
std
pop
xchg
out
divb
sub
mov
lods
xlat
in
push
int
fcompl
sbb
adc
pop
xor
loope
repz
cld
jge
xchg
sbb
cmpsb
inc
subb
inc
push
lds
cmp
xchg
jae
fld
addl
push
cmp
pop
mov
les
sbb
ds
pop
sbb
stc
add
xchg
mov
ljmp
pop
xchg
stos
rcrb
jno
gs
mov
jae
scas
adc
mov
jl
icebp
cmp
lods
out
mov
or
lret
mov
adc
push
jmp
in
shlb
shrl
fwait
ror
mov
sub
dec
cmovp
in
mov
mov
dec
add
jnp
adc
aas
into
inc
scas
add
xchg
out
mov
loope
pushf
mov
mov
mov
nop
mov
mov
mov
dec
adc
shll
ds
adc
push
outsl
adc
or
pop
lahf
jmp
xchg
fadds
test
mov
icebp
fildl
daa
push
push
addr16
cmpsb
daa
and
out
or
jnp
lcall
dec
or
out
and
inc
int3
out
xchg
scas
popf
jae
stc
and
shl
xor
fcmovnb
call
pushf
lea
sti
sar
pusha
cmp
jl
pop
pop
dec
data16
fisubrs
mov
bound
or
inc
lahf
bsf
fisubrl
sbb
bound
ret
jmp
cmp
frstor
jo
mov
les
movsb
mov
cmpb
movsb
jns
repnz
push
push
push
out
sub
repz
sti
jae
mov
push
xor
sahf
jge
adc
stos
fistl
dec
and
sbb
cld
aad
aam
push
sahf
add
and
pushf
lods
push
ja
jbe
rcr
mov
cmp
cwtl
and
fwait
mov
mov
push
dec
push
dec
cmpsl
popa
gs
hlt
cmp
jmp
ss
cli
movsb
lock
shrl
xchg
daa
push
sbb
jbe
or
rorb
je
sub
cmpl
push
in
es
lods
stos
inc
jge
adc
les
mov
xor
arpl
pop
in
dec
jno
dec
mov
pop
mov
pushl
cmp
dec
and
inc
push
pushl
ss
jg
lcall
xchg
push
jo
daa
push
nop
cmp
or
cmp
add
pusha
mov
push
sbb
xchg
cwtl
mov
mov
js
dec
dec
enter
mov
loope
cld
and
jp
in
push
ficoms
test
cmpsb
xchg
adc
jecxz
push
and
cmp
fstps
pop
adc
hlt
jae
sbb
int
lret
std
jne
inc
jecxz
nop
mov
je
addr16
lret
push
xor
into
sub
aas
add
mov
cmp
pop
pop
cmpsb
imul
ja
je
sbb
mov
shrl
stos
pushf
ja
sub
and
push
movsb
aam
pop
push
jge
pusha
lods
or
jecxz
mov
enter
xor
scas
stos
ficoms
aas
mov
cwtl
jge
adc
hlt
push
pop
pushf
cs
fbld
push
mov
popf
leave
jns
mov
leave
lea
xor
fwait
pop
mov
xor
out
cmp
push
cwtl
inc
flds
int3
push
jnp
les
cmpsb
roll
mov
inc
mov
adc
mov
xchg
jno
mov
mov
mov
mov
outsb
xor
cld
movsl
lock
fsts
xchg
adc
add
movsl
mov
push
pop
sub
ja
and
daa
enter
or
fcmovu
pop
test
mov
and
push
popf
andb
mov
iret
mov
repnz
pushf
sti
adc
leave
es
and
adc
inc
divl
and
xchg
js
mov
imul
jle
push
popa
mov
mov
cmc
stos
arpl
cmp
imul
dec
shrb
jle
inc
icebp
test
and
in
scas
shlb
and
pop
leave
inc
mul
jno
sub
fwait
nop
jge
xchg
mov
or
popa
jp
jg
daa
int
repz
rcll
mov
movhps
and
xor
adc
stos
dec
test
scas
jno
inc
add
mov
test
mov
lods
jnp
push
lcall
pop
sarl
and
popf
insb
pop
stos
mov
jae
invd
xchg
fnstenv
or
rorb
sub
or
into
fidivl
mov
out
dec
pop
vsubss
xchg
in
xor
push
push
jmp
push
sbb
push
es
mov
movsl
cmp
pushaw
adc
push
push
out
clc
nop
dec
mov
xchg
fisttps
cmp
loop
into
push
in
int3
clc
ja
jo
add
std
imulb
aam
xchg
fucomp
fcmovb
cmp
daa
mov
pop
imul
pop
add
inc
scas
leave
fdivrs
mov
shr
dec
dec
clc
pop
leave
mov
mov
ds
lahf
stos
outsb
push
mov
cmpsl
cmp
and
ds
fs
mov
xchg
pop
enter
subb
or
cld
xchg
push
in
mov
rcll
add
push
clc
dec
cli
pusha
mov
test
sub
cmc
sahf
push
loope
sub
addr16
imul
xlat
xchg
push
daa
jne
andb
ja
dec
push
nop
xor
pushf
movb
popa
mov
jge
sahf
faddp
dec
pop
loope
dec
js
sub
pop
in
pop
adc
hlt
xlat
mov
fwait
rcrb
lods
xor
jnp
rcll
jmp
pop
sub
shll
stos
int
fs
sbb
jbe
mov
insb
stos
lahf
fsubl
call
ret
sbb
int
cwtl
insl
push
shl
dec
jg
mov
adc
adc
mov
call
fldcw
std
mov
sahf
enter
xlat
sub
dec
pop
lods
mov
add
xchg
push
shrb
mov
mov
push
out
cmp
mov
mov
xor
pop
inc
lret
aam
fbstp
add
fs
xor
inc
int3
cmp
jne
outsb
leave
push
jp
scas
jmp
and
pushf
js
xchg
test
mov
inc
mov
add
xchg
xor
and
inc
sbbb
lea
fildll
jp
cmpsl
and
add
xor
mov
mov
push
xchg
add
divb
xchg
jmp
pop
into
mov
mov
and
and
add
pop
push
icebp
xor
jnp
inc
adc
push
sub
popl
pop
mov
lret
mov
add
adc
xor
je
ljmp
jp
or
leave
mov
push
int3
and
inc
sahf
add
andl
repz
cmp
mov
mov
inc
mov
fidivs
xchg
mov
jbe
imull
orb
xchg
sub
cmpsb
or
mov
in
xchg
cld
stos
inc
xor
decb
jno
movsb
mov
fwait
cs
sbb
call
jp
pop
pop
test
mov
movsl
xchg
imul
mov
loop
push
xchg
xor
insb
adc
arpl
pusha
ret
pop
rcll
add
push
cmpb
out
mov
jp
dec
in
push
shr
cmc
nop
dec
ud2
filds
sarl
jle
sbb
mov
ss
leave
aam
mov
icebp
adc
cld
sub
pop
pop
mov
dec
cli
xchg
and
in
outsb
jo
stos
aas
dec
mov
out
adc
loop,pn
add
movsb
cmpsb
pop
cmpsb
xchg
icebp
mov
scas
dec
sub
inc
outsb
xchg
and
mov
xchg
pop
dec
and
scas
and
aad
push
xor
out
lods
popa
nop
lcall
inc
and
loopne
insl
in
sti
sbb
popf
dec
bound
xchg
aaa
test
push
dec
pop
out
repz
test
test
icebp
aas
test
pop
mov
adc
mov
insl
imul
xor
sbb
push
pop
daa
jg
lret
xchg
jmp
dec
test
cmp
mov
outsb
mov
iret
xchg
imul
sbb
ljmp
out
xor
cld
mov
dec
mov
mov
cli
cs
xchg
lods
popf
sub
mov
loope
cld
xadd
sbb
and
inc
cmpsl
or
xchg
test
dec
lret
xor
test
jns
adc
data16
andl
lods
push
mov
xchg
ret
pop
add
or
add
fstl
cmp
mov
pop
mov
jnp
lret
hlt
imul
aas
add
mov
jbe
inc
lods
or
pop
out
push
inc
push
mov
jmp
inc
cmc
push
or
popf
jmp
or
in
loope
arpl
mov
sbb
dec
pop
xchg
fwait
xor
sti
out
adc
sub
imul
xchg
xchg
sub
in
dec
lcall
subb
out
sub
mov
dec
arpl
loop
mov
ret
sbb
cmp
xchg
jne
ja
sbb
out
mov
mov
gs
cmp
mov
bound
push
or
mov
xchg
daa
xor
pop
arpl
iret
sub
imul
lods
in
mov
jp
gs
mov
lods
cmp
lret
filds
aam
lahf
push
ret
loopne
xorl
rclb
mov
mov
pop
lods
dec
out
xor
jecxz
call
adc
jg
ss
loop
sub
mov
inc
cmpsl
push
lcall
rcl
cmp
shlb
jg
or
outsb
jg
adc
mov
cli
add
pop
sbb
movsb
sub
orb
sahf
jge
fisttps
and
aam
push
push
movsl
adc
lods
in
mov
js
push
and
out
clc
inc
and
xchg
lahf
negb
lods
jp
mov
out
dec
sbb
sbb
inc
fcoms
out
in
inc
fstpt
inc
out
loope
xchg
ja
add
hlt
movsl
pop
or
mov
pusha
sbb
push
fisttpl
outsl
inc
sbb
jne
aam
cmp
ret
dec
mov
cli
gs
inc
lods
into
pop
mov
jge
and
ds
xchg
in
sbb
cmp
cmpsl
cmc
jno
in
push
jecxz
xlat
sub
pop
insl
sbb
enter
fsubl
sbb
ja
adc
xor
xchg
mov
xchg
xor
mov
movsl
fcmovne
cmp
lock
dec
lcall
stos
add
hlt
adc
in
or
movsb
mov
andl
and
bound
popf
or
movsb
ret
popf
popf
cmp
xor
je
inc
push
mov
sub
jge
nop
int
fsubrl
dec
xchg
andl
lcall
mov
andl
pop
stos
or
sbb
add
pop
xor
loop
add
fistpl
dec
jae
sub
nop
shrb
or
mov
push
mulb
push
and
imul
clc
imul
enter
cmp
sub
pusha
pushf
jmp
mov
scas
cmp
popf
push
xor
scas
dec
inc
nop
sti
adc
xor
fisubl
cmp
add
pop
loopne
xchg
in
popf
push
test
jmp
jle
jb
and
inc
lahf
xchg
testb
mov
stc
xchg
sbb
adc
mov
mov
cltd
ret
aam
ficompl
nop
out
das
loop
xor
andl
rolb
xor
add
test
inc
cmp
pop
ror
lock
loopne
dec
add
aas
add
and
fsubrs
sbb
jle
ret
mov
js
jbe
shrb
cld
sub
jns
insl
dec
ja
js
cmp
adc
xor
pop
xor
adc
pop
or
jmp
adc
ja
inc
add
fcoml
jge
arpl
lcall
push
cmc
sbb
xor
lods
pushf
popa
push
or
jmp
push
outsb
repz
cmc
or
pop
hlt
push
xor
and
cmp
outsb
pop
push
mov
inc
lock
test
push
jnp
test
in
aam
jg
fwait
push
jo
subl
stc
or
sub
fs
roll
repnz
rorb
loopne
sub
xchg
movl
cli
sub
xor
cli
mov
cwtl
add
inc
xchg
pusha
xchg
push
les
sbb
jae
jnp
pop
and
push
rclb
repnz
rclb
sbb
xor
push
cwtl
subb
dec
sub
pop
fsubrs
rorb
push
gs
lods
aad
hlt
mov
mov
add
jmp
xchg
insl
dec
fldl
loop
xor
lret
pop
cmp
es
jecxz
popf
dec
fdivs
and
push
jb
das
adc
jle
or
add
out
fisttpl
scas
fdivs
fldln2
cmp
iret
mov
xor
add
popa
sub
shlb
hlt
sbb
mov
pushf
in
int
aad
cs
in
rcll
sub
pusha
ss
and
adc
inc
ret
xchg
jne
xchg
pop
push
icebp
fs
std
inc
gs
pop
adcl
sahf
mov
ds
data16
mov
mov
lea
fwait
lods
pop
pop
cmp
arpl
pop
xchg
jl
jae
cs
fidivs
rcr
sbb
cmp
xchg
mov
ds
out
add
jmp
popf
mov
popf
mov
xchg
mov
mov
jns
fcoml
and
pusha
or
cld
insb
mov
mov
aad
roll
ret
mov
in
push
and
pop
xchg
repnz
jp
cmp
orb
xchg
pop
call
add
jne
sbb
lret
out
jl
cmp
dec
lods
push
pop
cmp
jno
or
jg
fwait
cmp
std
lea
cld
mov
mov
xchg
push
lods
int3
adc
xchg
jae
push
shl
aad
mov
sbb
testl
xchg
dec
ror
add
pusha
push
mov
dec
fs
addr16
jge
cmp
je
xor
pushf
inc
call
adc
mov
dec
adc
jns
fld
lret
and
in
jns
and
lcall
imul
xor
les
shrb
fidivl
push
cwtl
dec
or
adc
and
fwait
aam
or
cmp
pushf
aaa
fisubrs
scas
push
pop
aas
lea
mov
lods
add
clc
sub
mov
rolb
and
pop
dec
sub
movsb
aam
sbb
mov
es
push
inc
mov
loop
aad
in
decl
inc
mov
mov
add
xchg
xchg
cltd
sbb
xchg
test
pop
or
iret
mov
lret
call
cmp
mov
xchg
fmuls
cmp
imul
arpl
push
lret
sub
out
ror
addr16
fildl
movsb
xor
leave
mov
cmc
iret
push
mov
jne
ja
sbb
cld
xchg
mov
hlt
jo
bswap
outsl
cmp
int3
lods
dec
inc
or
out
mov
sbbl
cmp
adc
aas
sbb
notl
ret
mov
jbe
mov
dec
out
stc
adc
xchg
jo
pusha
icebp
mov
jne
dec
test
sub
lret
lret
xor
bound
push
test
sbb
and
push
pop
orl
mov
dec
dec
mov
stc
jge
sbb
sub
movsl
xchg
pop
mov
stc
scas
jne
push
jnp
inc
jae
sbb
lret
nop
sbb
mov
popa
das
inc
int3
push
pop
cltd
jnp
jb
mov
rcl
cs
cmp
pop
push
jno
mov
dec
xor
cmp
sub
lahf
out
xlat
mov
mov
addr16
icebp
movsl
sbb
lock
movb
inc
bnd
loop
aad
enter
xchg
add
mov
nop
mov
push
cmp
lods
stos
into
inc
xchg
movsb
jne
jbe
sti
gs
dec
inc
sbb
gs
jno
xlat
out
xor
jle
or
sub
jp
loopne
jne
ss
mov
xor
inc
je
bound
push
mov
xchg
incl
dec
push
movsb
ror
mov
mov
insb
lods
adc
inc
popf
iret
dec
xlat
popa
pop
arpl
jg
cltd
dec
cli
outsb
es
outsl
or
xchg
cli
push
aad
pushf
adc
shrl
fsubs
ds
clc
orl
aam
pop
sbb
mov
dec
pop
pop
ss
sbb
imulb
cmpsl
push
js
jo
shrb
lret
pop
cld
nop
jg
sub
ss
mov
xor
xor
and
loop
test
stc
test
sbb
mov
mov
mov
push
test
pop
jl
inc
jne
pop
mov
sbb
ficoms
adc
pop
hlt
addr16
add
lahf
dec
adc
into
hlt
movsl
add
mov
inc
push
out
adc
jp
mov
xchg
lods
gs
cmpl
and
mov
push
pushf
shr
pop
cltd
pop
mov
shll
xor
loop
in
xor
or
hlt
mov
cmpsb
and
leave
test
lods
xchg
or
jmp
and
sub
pop
loopne
bound
push
mov
mov
mov
lahf
mov
clc
cmp
stc
aaa
mov
scas
or
mov
movsbl
jecxz
dec
lret
dec
movsl
mov
or
pushf
clc
hlt
pop
mov
cltd
aad
and
outsl
xor
xchg
sub
test
push
fdivrs
insb
mov
fnstsw
cmp
xchg
pop
xchg
jmp
movsb
aam
stos
mov
xchg
sbb
sub
push
clc
shl
rcll
icebp
ret
mov
and
in
aad
lcall
iret
push
ss
mov
cmp
scas
shr
shlb
adc
add
ficompl
enter
pop
mov
mov
lahf
int
mov
xchg
push
frstor
pop
mov
aam
popf
int3
xor
pushf
xor
and
mov
and
mov
mov
unpcklps
push
add
mov
jnp
dec
inc
or
jle
stos
ret
dec
sbb
ret
jge
sub
mov
dec
stos
dec
mov
push
call
dec
jo
xchg
push
jno
lret
xchg
push
cmp
add
add
loop
lods
pushf
jnp
xor
pop
push
out
nopl
mov
xlat
ja
int
cs
sbb
sub
mov
or
paddusb
sti
ret
jecxz
mov
xchg
jecxz
arpl
fs
nop
add
pop
mov
cmp
xchg
or
lock
aad
stos
sbb
mov
mov
iret
mov
cld
and
add
push
jg
js
add
mov
mov
mov
xlat
stos
hlt
and
inc
mov
jne
mov
fwait
rcrl
ja
scas
xor
int
je
xor
int
pusha
jge
sub
jbe
fsubl
jae
inc
jge
fdivrl
fidivrl
adc
fincstp
enter
push
push
jl
xor
adc
inc
push
push
push
xchg
xor
gs
cmp
fidivs
inc
sti
cmp
je
loopne
cmp
push
inc
and
sbb
sbb
lock
iret
fsubs
add
hlt
imul
push
xchg
in
push
ja
data16
jo
aad
adc
lods
mov
sarb
sbbb
loope
push
in
mov
lods
mov
push
das
sbb
pop
cmpb
adc
mov
cwtl
push
subl
adc
mov
insb
ja
push
jmp
into
loop
clc
sbb
popf
sub
ja
lods
mov
inc
dec
pop
sbb
rcrl
lret
inc
and
cmp
hlt
or
jg
xor
cltd
nop
test
inc
adcb
in
dec
inc
shrb
dec
adc
scas
out
add
std
int3
sub
imul
inc
std
popl
imul
clc
sbb
xor
xchg
or
lret
mov
shll
jne
aam
mov
icebp
nop
inc
lods
loopne
in
dec
add
shrb
loop
mov
mov
subb
test
icebp
pop
call
push
icebp
lea
sub
lea
cmp
arpl
dec
insb
outsl
je
add
cs
cmp
bound
pop
jb
adc
adc
jns
call
ret
test
ds
sbb
fsubrl
xor
iret
ss
or
daa
and
xchg
cltd
lret
xor
jno
cwtl
enter
inc
sub
outsb
or
test
stos
and
mov
push
mov
adc
xor
push
mov
shll
dec
das
mov
cmc
les
mov
int
and
push
hlt
out
mov
or
sbb
icebp
push
jle
mov
out
fdivs
pop
mov
xor
sub
loope
gs
fucomi
mov
push
fbstp
aad
pushf
xor
rorl
data16
cwtl
adc
js
test
add
rcl
xchg
ljmp
es
repnz
sbb
dec
inc
loopne
xor
mov
movb
cmp
jecxz
push
fists
jge
adc
add
shll
mov
leave
mov
aam
rolb
push
fs
xchg
fnstcw
test
adc
push
bound
push
push
sbb
adc
ja
jne
add
int3
push
jb
aas
sub
lods
jne
out
or
sbb
clc
stc
pusha
lcall
test
pop
sbbl
aaa
pop
pop
mov
jae
sti
pop
sbb
in
ljmp
js
mov
push
mov
jg
xor
sbb
mov
xor
stc
add
mov
xor
sub
rolb
push
inc
daa
nop
add
jge
jle
push
jbe
in
mov
push
pop
pop
jle
cwtl
and
fstps
push
jle
cmp
pop
mul
arpl
movsb
adc
das
pop
cli
jo
push
scas
jne
or
fwait
sub
idivb
sbb
addr16
adc
repnz
mov
movsb
or
not
test
notl
out
push
jae
mov
dec
mov
jl
repnz
dec
xchg
icebp
mov
sub
incb
and
mov
fisttpl
pop
push
push
mov
sti
lods
jp
mov
cwtl
add
jo
imul
pop
adcl
out
mov
and
ja
sbb
xor
push
fildl
test
xor
js
adc
insl
inc
test
and
jno
add
xor
sbb
cld
mov
add
push
pop
or
inc
mov
push
aas
repz
fldl
clc
stos
lods
nop
adc
jne
int3
mov
xchg
enter
rcr
sub
loop
scas
xor
and
int
lcall
push
divl
cs
rcrb
icebp
dec
xor
mov
popf
mov
jg
sti
cmpb
repnz
imul
push
jnp
fdivr
inc
mov
iret
dec
stos
ficompl
push
aam
jb
mov
push
xchg
stos
xchg
push
insb
and
jae
sbb
push
mov
and
mov
push
cmp
adc
mov
inc
sub
xchg
loope
lret
dec
push
mov
imul
bound
cmp
sub
imul
ret
out
in
stc
ss
das
adc
push
call
push
cmp
sub
adc
test
les
xchg
daa
inc
adc
sub
arpl
pusha
flds
ss
repz
jecxz
andl
and
and
pop
mov
push
divl
pop
cmp
fadds
mov
cmp
jecxz
fisttps
dec
add
repnz
jo
xchg
sar
pushl
cltd
aam
xor
xchg
push
jl
scas
inc
lcall
adc
push
iret
sidtl
push
scas
push
popa
ljmp
popa
push
test
push
addr16
jmp
clc
xor
pop
outsl
fwait
neg
inc
lods
pop
stos
push
arpl
push
lods
adc
out
pop
loope
aas
insl
sahf
daa
pushf
xor
add
int
fcmovbe
aaa
loope
xor
rorb
test
mov
sbb
and
test
add
push
xchg
pop
mov
fnsave
cmp
in
outsb
out
and
xchg
pop
jae
pop
or
pop
mov
mov
js
dec
icebp
jmp
lret
imul
push
fnstsw
push
movsb
js
sbb
out
add
outsl
add
inc
mov
scas
mov
mov
loope
stc
test
inc
cmpsb
popa
je
ja
pop
and
inc
jne
add
push
cmpsb
pop
aas
into
iret
mov
mov
jle
imul
fs
pop
add
sbb
jns
pop
push
fiadds
mov
adc
adc
dec
add
rclb
push
fwait
xor
fistpl
mov
adc
jge
fcoml
cltd
pop
cmp
in
mov
xor
mov
roll
pop
or
ficoms
out
xchg
cmp
stos
adc
inc
and
nop
push
imul
inc
loope
or
pushf
sbb
mov
ret
cld
jno
sub
ss
inc
mov
ja
lret
loop
and
sarb
ljmp
pushf
pop
ds
cmp
ds
mov
pavgw
xorl
sahf
jno
jb
loopne
shlb
or
push
mov
inc
negb
fildll
xorb
cs
aad
jmp
leave
lret
jns
rolb
mov
test
sbb
cmpsl
roll
inc
pop
lret
jns
and
dec
add
push
fwait
scas
leave
test
call
inc
mov
dec
pop
xchg
push
popa
dec
aas
cwtl
push
stos
or
sub
loopne
fists
stc
shrb
ds
nop
or
inc
push
sub
mov
je
sbb
js
mov
repnz
out
mov
call
pop
das
clc
adc
xchg
jecxz
jmp
imul
push
xchg
roll
fiadds
xlat
testb
or
dec
lret
jecxz
jecxz
jle
data16
jp
aas
mov
jae
aam
rol
lods
imul
enter
mov
pop
jnp
lahf
jno
xchg
test
xor
dec
push
cmpsl
in
loope
aaa
dec
loope
gs
xchg
xor
pop
fstpl
inc
shll
or
sbb
stc
jne
cmp
dec
mov
imul
adc
cmp
xchg
mov
cmc
pushf
push
fwait
mov
stos
mov
daa
ljmp
pushf
out
xor
sub
call
cmpsb
fnstenv
sub
popa
imul
loop
adc
shlb
mov
cmp
sub
sub
inc
movsb
sbbl
mov
xchg
sbb
or
cs
mov
cmpsl
movsb
fsubs
cmc
sub
notb
lahf
sbb
xlat
outsl
test
jmp
or
arpl
jbe
xchg
fnsave
or
and
stos
mov
push
inc
sub
or
mov
jo
push
adc
sbb
xchg
jecxz
stos
push
loop
stos
je
ljmp
and
push
pop
cmpsb
and
stc
jle
lahf
loopne
sbb
shlb
je
mov
and
mov
addb
in
xor
int3
mov
lds
aaa
movsb
and
clc
movsl
push
jecxz
fidivrl
add
or
hlt
icebp
cltd
add
and
mov
inc
xchg
ljmp
inc
ror
in
adc
enter
test
push
xor
fimull
jo
cmp
or
mov
data16
and
jns
mov
popa
test
adc
movsl
push
mov
push
jmp
int3
sbb
push
cmp
fs
popf
idiv
push
mov
mov
jg
in
inc
insb
cmp
jns
fdivr
xor
cld
es
scas
jae
pop
fsub
mov
out
out
pop
push
and
or
jns
xchg
je
das
jmp
mov
inc
mov
out
sbb
mov
jae
mov
sbb
lcall
adc
scas
lock
iret
stc
xchg
inc
addr16
cmp
jg
adc
xor
adc
fdivs
mov
iret
in
in
xchg
and
jecxz
sahf
cmpsb
mov
outsl
shr
fcoml
out
cmc
ja
jne
imul
faddp
xchg
cmc
js
arpl
lock
shrl
imull
rolb
inc
lods
inc
in
cmp
cmpsl
dec
repnz
pop
push
clc
lret
jmp
sbb
xchg
mov
adc
mov
shrl
mov
add
das
jno
pop
dec
push
int
std
mov
shll
scas
cmp
or
loop
mov
sub
test
add
adcb
and
pop
or
mov
imul
test
push
cmpsl
sbb
sub
es
std
out
pop
fs
das
pop
lds
mov
int
inc
es
push
xchg
or
sub
adc
fistps
mov
cmpsl
leave
dec
jge
jae
pop
std
xor
jno
pop
inc
mov
inc
push
jmp
jp
nop
test
inc
jae
push
xor
mov
jnp
mov
inc
rcl
and
sub
jmp
jmp
dec
xor
pop
pop
inc
insl
insb
pusha
shlb
sub
andb
mov
sar
lcall
jae
pop
pop
ja
fwait
data16
push
adc
loopne
lea
in
daa
pop
into
add
xchg
outsl
pop
mov
mov
mov
in
cmp
pop
ffreep
outsb
out
xchg
mov
and
dec
fwait
aad
cld
cmp
jb
ret
lds
fwait
dec
push
sarb
test
cmp
jns
xchg
sub
mov
sub
pop
outsl
xchg
mov
int
in
or
jb
rolb
aaa
mov
shrl
lods
imul
jge
sahf
lcall
xlat
les
js
xchg
jae
ds
xor
jbe
jmp
in
insb
jb
aaa
repz
xchg
loope,pt
movsl
dec
btc
lcall
cmpsb
mov
mov
gs
sbb
lock
ja
js
xchg
cld
addr16
sbb
gs
pop
sahf
das
std
loope
sub
inc
or
cmpsl
fs
mov
mov
out
mov
add
ljmp
jae
cmp
lods
ret
xorb
pop
es
dec
xor
sub
stc
mov
jns
jo
dec
jnp
jl
and
mov
pop
or
loopne
sbb
les
faddl
mov
lds
sub
movsl
out
mov
das
inc
push
jae
cmp
je
filds
mov
mov
test
fwait
jne
addl
ljmp
in
test
pop
fldt
pop
call
push
or
popa
push
add
push
lods
sbb
push
ljmp
fidivrs
jae
add
pop
aas
icebp
icebp
dec
test
test
jg
cmp
lods
sbb
and
mov
imul
imul
sbb
out
bnd
lea
fwait
xlat
mov
or
sub
pop
mov
cmp
fists
movsb
jle
mov
movsl
xchg
out
popf
ljmp
fs
add
notb
cmp
pop
mov
stc
rcrb
sbb
pop
xchg
add
fmul
mov
mov
jne
pop
push
inc
mov
fldenv
sbb
arpl
lock
and
andl
mov
push
ret
pop
in
adc
ja
faddl
gs
ret
mov
jmp
scas
iret
outsb
cmp
icebp
lds
sahf
mov
inc
sbb
inc
imull
pop
xchg
mov
call
ret
fs
jbe
push
loopne
xor
mov
jne
xchg
std
arpl
mov
aad
ret
dec
dec
mov
in
mov
lcall
mov
insb
mov
iret
rcll
bound
xchg
leave
sbb
mov
xchg
cmp
and
in
icebp
push
repnz
addb
test
or
cmp
test
fninit
jmp
push
xor
inc
sub
aaa
sbb
insl
ds
add
jae
lods
dec
dec
pop
mov
sbb
xlat
mov
jo
movsl
fisubl
mov
enter
lcall
popa
pop
mov
mov
pushf
in
cmp
xor
add
scas
push
movl
push
inc
loop
sbb
inc
das
in
mov
add
fwait
js
dec
xchg
out
adc
sub
pop
stos
pop
sbb
bound
and
mov
mov
mov
or
out
arpl
dec
or
popa
sti
fs
pop
or
leave
cmp
cmp
imul
or
pop
jnp
xchg
stos
jno
adc
mov
test
outsl
mov
repnz
jmp
adcb
call
sbb
rorb
loop
stos
popf
lock
pop
or
pop
stos
fwait
sub
jo
xchg
xorl
jno
xchg
cmp
mov
fildll
decb
das
neg
in
xchg
adcl
xor
jmp
push
movsl
pop
push
or
in
into
ficoml
adc
stos
out
rorb
fiaddl
pop
lds
fisubs
icebp
xchg
inc
ss
clc
jns
rolb
sbb
xlat
dec
imul
mov
cmp
leave
and
in
push
cld
lret
jnp
jecxz
cli
pop
popl
fwait
mov
aad
sub
push
mov
fwait
or
ds
xchg
add
cli
in
ret
add
aas
stos
rolb
mov
cmp
adc
jge
xchg
adc
jae
jno
ljmp
mov
bound
lds
scas
test
in
pop
sahf
dec
mov
pushf
cwtl
mov
jo
mov
data16
xchg
add
pop
fsubs
into
pop
xor
or
cmc
xchg
faddl
aad
lcall
cld
sub
xor
push
inc
dec
jne
outsb
out
mov
out
xchg
cwtl
xchg
insb
fbld
aas
dec
xor
adc
mov
lods
push
cmc
sbb
cs
lcall
jmp
push
test
inc
int
dec
ljmp
adc
dec
mov
mov
jmp
mov
je
rep
mov
push
ffree
cmpsl
fwait
jo
incb
das
add
pushf
pop
sbb
xor
cmpsb
and
jb
mov
inc
push
sbb
rcrb
push
mov
inc
mov
dec
add
adc
dec
jp
jmp
xor
iret
push
jnp
aam
movsl
gs
scas
mov
dec
ret
add
jge
mov
rcll
stc
xor
push
sarb
mov
sub
shlb
inc
add
adc
dec
adc
mov
into
data16
pop
xchg
dec
rolb
pop
add
sbb
push
scas
popa
mov
cmp
aas
fldcw
pop
out
xor
std
ds
xchg
and
adc
mov
mov
cmp
fiaddl
mov
in
lret
jmp
call
mov
adc
xchg
mov
add
pop
js
adc
xchg
pushf
add
lock
inc
xchg
out
bound
xlat
cmpsb
push
dec
clc
jp
sbb
shr
fildl
into
xchg
popf
inc
clc
shl
or
lods
lret
xor
mov
mov
popa
jl
sub
test
lock
movsb
loop
adc
clc
pushf
xor
fdivs
inc
adc
jnp
mov
rcll
jle
push
jbe
mov
sub
sbb
in
in
jno
push
loopne
and
movsb
mov
xor
mov
mov
mov
addr16
add
add
push
mov
cmc
idiv
test
jno
pop
lahf
cmpsb
std
xor
mov
movsb
leavew
mov
and
push
mov
jmp
aad
sarl
push
cli
mov
xchg
std
inc
push
cs
dec
sbb
repz
enter
loop
inc
mov
mov
shrb
and
pop
stos
repz
enter
adc
sahf
ds
sub
xchg
mov
mov
cli
popa
mov
mov
adc
stos
sbb
lret
lods
fcomps
cmp
pop
int
pop
lods
adc
scas
xorb
enter
lcall
push
stc
aas
inc
sbb
fistpl
xor
sbb
jp
mov
xchg
sbb
lock
ja
mov
sbb
or
pushf
push
hlt
xor
je
daa
inc
lret
mov
add
aad
mov
push
ficoml
pop
sbb
call
rolb
sub
pop
loop
dec
clc
movsb
fistpll
dec
sub
mov
mov
dec
pop
int3
mov
int
cs
sbb
jb
cmp
pmulhuw
adc
jp
push
lret
stc
mov
loopne
insl
insl
inc
sbbb
jle
repnz
stc
mov
add
fcmovbe
loope
test
mov
and
shrb
sub
sub
out
ljmp
and
outsb
popf
mov
gs
clc
gs
sub
or
mov
int3
mov
imul
adc
inc
js
sbb
dec
nop
shlb
cmp
jb
shll
dec
mov
jnp
pop
out
jnp
lods
or
xchg
rcr
cmp
jne
mov
mov
loope
jno
mov
pop
push
flds
dec
adc
lcall
sahf
xor
insb
mov
push
sub
add
data16
push
mov
cmp
aam
xlat
cmc
lds
adc
sub
or
adc
pop
movsb
mov
fcoms
shll
push
mov
js
mov
or
push
sbb
rol
test
push
fwait
push
xor
mov
inc
js
mov
mov
dec
mov
movsl
push
out
jbe
jo
cmpsl
jne
inc
xchg
fsubrl
dec
mov
leave
aas
lods
jnp
jle
fimuls
mov
out
loopne
ds
jae
sar
fsqrt
arpl
and
add
loope
hlt
arpl
stos
push
popa
stc
or
es
pop
das
roll
xor
pushf
sarb
cli
out
jl
leave
or
rcrb
jle
rol
and
push
jmp
lea
fs
in
or
xchg
movsb
movsb
jb
in
cmp
cmp
les
cmp
dec
fldpi
ret
movsl
pop
push
inc
xchg
jae
mov
push
cmc
push
jl
mov
in
mov
and
aaa
lahf
cli
jg
andl
out
clc
rcrl
arpl
add
fstpt
shll
sbb
add
aam
xor
mov
aad
cmpsl
cld
std
pop
or
fwait
dec
dec
inc
pop
push
test
add
fnstenv
lret
and
adc
mov
ret
inc
adc
jmp
das
xchg
sahf
xchg
fists
stos
fldenv
sahf
or
mov
ljmp
or
ljmp
pop
jle
test
jnp
scas
jb
imul
not
addb
jo
sbb
push
or
and
rcll
idiv
roll
adc
mov
sub
fs
jbe
aas
popf
test
adc
popf
dec
mov
mov
rcrb
clc
mov
pop
sbb
cmp
int
aam
pop
mov
movsb
frstor
jo
inc
in
push
add
pop
mov
mov
in
insl
out
out
xchg
adcl
pop
mov
mov
cli
jns
loope
fnsave
pop
mov
mov
mov
loope
popa
pop
subb
push
enter
ret
inc
out
sahf
ljmp
sub
xor
outsb
xchg
ret
sbb
xor
dec
pop
lds
test
mov
add
push
mov
mov
pop
test
xor
mov
jecxz
add
inc
mov
dec
push
jb
jb
je
outsl
outsl
outsl
sub
mov
mov
inc
xchg
leave
es
mov
icebp
inc
push
lds
xor
xor
mov
sbb
xsaveopt
shll
mov
mov
add
mov
ljmp
jmp
imul
pop
sub
mov
jo
cmpsb
test
call
rcr
in
sbb
das
xchg
mov
popf
pop
cmp
fwait
es
and
mov
int3
in
cwtl
adc
mov
cwtl
push
ret
iret
xchg
das
cmpsb
dec
cmp
jno
std
xor
cmp
mov
inc
dec
push
mov
out
inc
mov
lds
fistps
lcall
cs
xor
sub
mov
push
ret
sbb
push
mov
shr
clc
das
icebp
test
jno
cs
test
jno
sbb
daa
ds
mov
sbb
mov
inc
jle
cli
outsl
lock
fcoms
in
ljmp
sbb
jbe
hlt
pushf
out
xchg
sub
jecxz
mov
aad
insl
gs
stos
shrl
sub
jno
in
es
pop
stc
adc
ja
sub
sub
jg
cmp
mov
and
sbb
in
hlt
push
mov
sarl
loope
add
push
or
ja
sub
jmp
cwtl
xor
sub
cmp
adc
push
mov
je
fsts
inc
mov
xchg
stc
inc
mov
loopne
cmp
sarb
test
xchg
out
jno
andl
sbb
sbb
push
pop
mov
sbb
cmpsl
pop
imull
inc
dec
ds
notl
mov
cld
popa
dec
shr
mov
scas
imul
xor
in
popf
mov
outsl
dec
dec
pop
lret
das
mov
das
jl
outsl
xor
xchg
into
ja
in
ja
sub
idivl
jle
push
adc
inc
cmpsl
sbb
jmp
test
idivb
mov
pop
dec
gs
subb
push
pop
push
xor
xchg
and
nop
cmc
sub
and
repnz
mov
in
pusha
mov
aad
adc
fists
addl
icebp
xor
insb
dec
loopne
sub
sub
int
mov
sub
icebp
xchg
adc
shl
push
nop
cli
test
popa
cs
pop
cmpsl
pushf
pop
mov
mov
loop
test
push
mov
pusha
mov
pop
adc
hlt
adc
ja
and
scas
push
inc
pusha
push
out
sahf
ss
sti
lods
sub
js
lds
pop
pop
pop
call
gs
adc
lret
movsl
xor
fistl
adc
jne
push
in
mov
adc
fcmovbe
xor
outsl
ljmp
imul
add
cmc
mov
mov
mov
pop
insb
push
jecxz
cmpsb
test
adc
hlt
inc
mov
test
ret
or
xor
shl
scas
subl
xchg
in
fcoms
loopnew
movsb
decb
xor
mov
pop
fwait
dec
pop
jge
loopne
insl
iret
or
add
jo
add
push
sbb
mov
outsb
pop
xchg
cmp
nop
into
addr16
mov
fbld
movsb
and
add
jo
add
aaa
shlb
jecxz
sahf
push
sub
xor
xor
and
in
add
aam
fiadds
lock
add
xor
nop
mov
mov
push
dec
adc
mov
mov
push
pop
xor
inc
adc
dec
sub
dec
adc
mov
mov
roll
inc
fstps
fimull
inc
ficompl
cmp
dec
mov
mov
rorb
mov
pop
faddp
xor
fsubrs
pop
insb
xchg
fisttpll
addps
flds
push
sub
mov
addr16
dec
iret
xchg
ss
mov
sub
jl
sbb
filds
sahf
jb
jg
pop
imul
mov
mov
or
or
and
fstp
int3
popa
bound
sbb
pusha
aas
mov
popa
rolb
sub
out
ficomps
jbe
rol
fs
int3
xchg
pushf
cli
push
mov
shlb
in
push
and
imul
mov
mov
pusha
push
fldcw
push
xor
ret
pop
jns
je
or
fidivrl
das
jl
sbb
out
int3
fs
loop
xor
pusha
not
das
daa
mov
out
push
movb
dec
push
mov
adc
notb
mov
ss
xchg
mov
pop
inc
and
aam
clc
lods
sbb
adc
fs
lea
jmp
neg
pusha
fsubl
mov
xchg
les
sub
rclb
inc
and
shlb
sub
cld
clc
sub
mov
fisubl
mov
mov
test
jle
pop
dec
cltd
mov
pushf
fidivrl
add
mov
add
mov
ffree
mov
add
add
cltd
jmp
xor
mov
enter
sahf
xchg
xlat
sbb
cmp
pop
lods
in
popf
cld
aam
leave
or
pop
insl
inc
sub
or
sub
or
mov
lds
mov
inc
cmp
pop
push
jo
lcall
mov
and
mov
daa
dec
popa
jae
mov
pop
test
pusha
mov
into
fdiv
xor
mov
aad
mov
mov
and
popf
cmp
push
mov
jo
das
test
dec
add
dec
popa
popa
fwait
jp
fidivs
sbb
jno
mov
out
push
jge
jne
lods
xor
adc
adc
movl
daa
int3
xor
stos
push
xor
rclb
mov
call
out
das
ret
or
xlat
pushf
fistpl
and
pop
cmp
popf
fsts
loope
pop
mov
mov
jns
mov
ret
and
xor
mov
sahf
mov
mov
push
mov
xchg
mov
sbb
in
fisubrs
adc
and
pushf
cmc
push
xchg
push
fisubrs
mov
aaa
inc
insb
cmpl
in
inc
dec
inc
mov
repz
addr16
ljmp
add
push
outsl
testb
loopne
pushl
iret
aas
mov
lock
sub
subb
jge
loopne
adc
sti
jno
movsb
pop
repz
push
mov
pop
mov
aam
jle
push
lds
mov
inc
lods
pop
jmp
in
xor
mov
shl
dec
cld
adc
push
mov
mov
ds
movsb
cmp
negl
rcrb
jo
ret
out
mov
cmc
or
lret
dec
jo
outsl
mov
mov
rdmsr
or
push
dec
cmp
inc
fxch
lahf
ds
mov
push
adc
push
dec
or
scas
lods
enterw
xchg
roll
fdiv
js
sub
out
jne
imul
push
aad
inc
jnp
lods
push
inc
push
lds
mov
mov
repz
in
adc
jae
mov
add
lahf
imul
cli
pop
cmp
arpl
mov
xlat
in
roll
mov
or
xchg
xor
cmp
cmp
outsl
mov
fwait
adc
aad
into
movsl
pushf
bound
mov
xchg
mov
mov
mov
scas
xchg
mov
cmp
call
movsl
pop
mov
push
sub
or
stos
scas
sub
fs
and
mov
push
mov
sbb
sti
scas
or
repz
test
divb
mov
add
mov
sbb
dec
cwtl
hlt
int3
rolb
ficoms
push
cmp
lcall
fidivrl
lock
mov
jmp
dec
ljmp
adc
and
xchg
int
ss
roll
icebp
js
loope
cltd
icebp
nop
ss
leave
scas
int
jno
out
mov
jb
sbb
sub
fnstenv
mov
push
int3
shlb
scas
jge
inc
sub
fldt
outsb
dec
scas
jae
hlt
adc
inc
negl
push
push
or
mov
das
jbe
mov
std
movsl
into
aas
xchg
and
cmp
add
lea
mov
pop
fildll
push
or
rcr
push
or
lds
add
dec
mov
sbb
mov
jnp
fisttpll
add
out
mov
push
dec
xor
mov
out
mov
insl
or
jp
inc
mov
push
jg
and
mov
and
mov
repnz
lea
sbb
imul
dec
xor
pop
shll
mov
cmp
test
xchg
sbb
loope
cmp
dec
jle
push
mov
scas
push
repz
adc
leave
jg
bound
loope
out
or
loopne
xor
xchg
push
cmp
movsl
cmp
cs
pop
cwtl
js
adc
add
push
sub
test
cmp
dec
fs
scas
or
lret
xor
push
ret
xor
sbb
push
test
push
out
and
mov
inc
jg
cmp
xlat
leave
pushf
jne
cli
movsb
arpl
cmc
sbb
shlb
pop
pop
pop
mov
leave
insl
add
jno
xor
mov
dec
mov
xor
pop
fists
sti
lcall
mov
pushf
push
cmp
sbb
pop
jg
ja
lahf
cmp
push
dec
jb
pop
ljmp
out
in
aad
ss
repnz
cwtl
fdivrs
das
nop
das
dec
outsb
cmp
sbb
jb
jae
test
push
jnp
cwtl
lret
jg
std
std
ljmp
rolb
pop
mov
test
sub
andl
adc
pop
lcall
jo
xchg
testb
lock
inc
pop
fcomps
xor
xchg
xor
outsl
call
jle
pop
out
sub
push
ret
div
lcall
pusha
mov
xor
js
aam
loope
hlt
mov
scas
fldl
mov
sub
cltd
movsb
into
out
fwait
xchg
push
imul
test
push
sub
outsb
jo
sub
push
lods
ror
sub
scas
mov
or
push
inc
daa
fsub
fmull
bound
cmp
outsb
adc
sbb
hlt
and
inc
mov
mov
rorl
mov
sarb
cld
sub
and
xor
pop
adc
fdivrl
and
imul
popa
inc
popa
xor
mov
test
mov
add
cmp
in
fists
jle
cltd
clc
imul
sahf
mov
sarl
fstps
fisubs
cmp
mov
fimuls
fildll
data16
add
icebp
aaa
push
add
xchg
imul
ss
stos
sub
frstor
sahf
sbb
lock
pushf
or
imul
pop
mov
pop
cmp
jl
stos
call
or
lods
imul
jecxz
push
popf
pop
rcll
jge
jne
add
and
or
mov
sbb
insl
loope
jmp
stc
sbb
insb
mov
dec
jno
adc
shll
cmpsl
mov
shlb
lret
sahf
inc
sub
mov
cwtl
cld
xchg
add
clc
or
mov
movq
repz
xchg
in
ficoml
xchg
mov
out
mov
shl
push
cli
push
xchg
xor
xchg
fadds
scas
lret
jne
xor
mov
ret
jns
sbb
dec
ss
leave
rcrb
sbb
outsl
xor
adc
sbb
sub
mov
mov
push
clc
stos
sbb
mov
cmp
dec
pop
and
test
jl
test
mov
loop
or
movsb
mov
xor
dec
shrb
js
addr16
push
mov
mov
mov
int
scas
jmp
mov
lock
push
scas
cmpsb
fstpl
mov
andps
das
popf
inc
lock
out
xor
data16
insl
int
movsb
cmc
fisubs
mov
and
push
mov
into
popf
pop
fimull
out
movsb
xchg
sub
add
or
sbb
and
xor
cmpsb
inc
or
jno
mov
out
addb
test
and
pop
xchg
daa
pop
jo
add
xor
xchg
jns
mov
sbb
mov
shlb
fld
leave
pop
clc
mov
pop
iret
mov
or
jnp
jne
inc
inc
fsubrs
jle
mov
push
in
repz
das
mov
or
loop
inc
mov
push
stos
adc
out
sub
sbb
mov
loopne
int3
cmpsl
lahf
mov
jmp
mov
mov
adc
push
sub
int
and
sbb
nop
dec
stos
inc
in
repnz
inc
mov
inc
fiaddl
lods
add
jae
test
jecxz
pop
nop
inc
jg
jp
mov
in
mov
lds
jb
add
lock
stos
scas
push
jecxz
pop
mov
xchg
mov
adc
test
inc
dec
sbb
outsl
jns
pop
imul
push
je
das
adc
dec
inc
lods
push
ja
rorb
mov
aas
push
int
mov
jge
pop
orl
inc
lret
in
dec
cltd
sub
cld
aas
enter
adc
loop
fidivrs
iret
scas
dec
xchg
cmp
sti
lods
std
jmp
inc
outsl
xchg
das
shrl
insb
jb
cmp
movsl
out
push
pop
sbb
test
xchg
movsl
push
push
mov
loope
mov
xchg
out
or
add
jle
xor
mov
xor
push
cli
push
incl
inc
mov
repnz
sbb
pop
lret
iret
pusha
sbb
xchg
les
inc
scas
dec
sbb
pop
sahf
out
sti
mov
dec
pop
fwait
push
mov
stos
pushf
xchg
and
or
mov
push
jb
xchg
scas
sti
cmp
adc
adc
xor
in
xchg
or
jg
es
dec
jbe
xchg
mov
mov
xchg
das
add
push
pop
adc
fsubs
sbb
sbb
das
movsb
push
jbe
push
dec
xchg
jb
stos
popf
mov
mov
dec
into
test
fwait
rcrb
daa
cld
sub
int3
aad
test
mov
imul
mov
mov
pop
push
sbb
hlt
js
aas
push
icebp
jle
in
xor
nop
push
mov
push
xchg
pushf
andl
pop
adc
iret
adc
es
xchg
dec
add
les
dec
adc
jl
mov
jg
js
out
cmp
xchg
adc
or
xor
xchg
ds
insl
pop
mov
add
cmp
cmp
pop
hlt
out
dec
scas
fdivl
mov
fdiv
pop
sbb
inc
adc
repnz
adc
jnp
aam
sbb
clc
mov
insb
and
imul
pop
cld
sbbl
scas
cwtl
jne
stc
mov
fwait
ljmp
mov
jns
outsl
scas
pushf
push
dec
outsb
push
pop
sbb
loopne
xor
mov
enter
jnp
add
pop
pop
mov
pop
cld
pop
test
fs
mov
and
jb
stos
arpl
cmp
xchg
mov
pop
lahf
mov
jnp
into
popf
nop
push
imulb
push
es
ret
mov
jge
rol
cmp
sub
and
mov
mov
test
push
loop
ffree
lods
scas
rcrl
jp
push
inc
ficoms
fbld
jp
push
ljmp
unpckhps
lahf
mov
ss
sarb
cmp
icebp
dec
rolb
jge
xchg
mov
cmpsl
sub
loopne
mov
subb
pushl
cmp
push
and
mov
xor
jmp
jns
xchg
or
ljmp
ss
xchg
pop
pop
and
mov
int3
mov
add
dec
cld
mull
jne
mov
leave
cli
orl
mov
jb
jnp
mov
arpl
mov
arpl
out
mov
jp
cmp
mov
jbe
icebp
sub
popa
mov
out
mov
mov
push
dec
add
es
mov
gs
jns
push
out
pop
fildll
add
adc
sub
xor
lds
rcrb
and
pushf
insb
mov
pushf
dec
test
sarl
jge
jbe
pushf
or
and
gs
jnp
push
lret
ljmp
mov
sub
xchg
mov
sti
push
dec
das
imul
sub
inc
into
adc
cmp
in
inc
jle
and
mov
cmp
ret
mov
push
aad
fimuls
popa
icebp
mov
icebp
int
adc
push
loope
xchg
cli
ret
mov
push
cmpsl
push
mov
test
sbbl
sbb
rcrb
lea
in
std
cld
jns
sub
sbb
add
pop
jb
pop
mov
dec
sub
and
movsb
mov
add
jle
sbb
mov
adc
mov
in
hlt
loopne
mov
cmc
add
addr16
add
out
xchg
fidivrs
inc
es
inc
cmc
mov
cmp
mov
pop
sub
jne
jmp
xchg
pusha
std
push
lods
insl
cwtl
outsl
mov
pop
sub
fstl
xchg
inc
sub
mov
mov
mov
pop
sub
pop
push
gs
lahf
aas
xchg
sbb
test
sub
rol
negb
cmpsb
leave
enter
shlb
stc
pop
or
xchg
or
jg
add
ja
jge
das
dec
popf
pop
inc
jae
out
cli
popf
out
sbb
xchg
ret
ret
xor
enter
xor
fmul
sub
add
cmp
lods
pop
iret
and
sbb
pop
mov
and
xchg
scas
outsb
imul
sahf
fcoms
push
lret
mov
lods
jp
in
sbb
stos
stos
stos
sahf
sti
aaa
cmovae
jle
lret
out
mov
testb
xchg
sub
in
pop
out
orl
or
sub
pop
in
jl,pn
add
in
in
mov
lods
push
sbb
lock
ss
mov
mov
and
mov
inc
xor
xor
mov
hlt
out
adc
enter
add
cld
icebp
add
sub
ret
icebp
cmp
je
mov
mov
bound
inc
aas
jg
sub
push
out
xchg
aad
gs
dec
sub
in
je
pop
je
lock
cs
shl
lods
icebp
loop
xchg
mov
dec
jge
hlt
aaa
outsl
xchg
jecxz
inc
arpl
pop
or
push
icebp
pop
pop
mov
outsb
iret
jb
xchg
and
lods
pop
adc
xor
insl
sbb
sub
dec
mov
mov
stc
mov
mov
ret
shr
ljmp
pop
dec
out
adc
jne
es
mov
mov
jecxz
sbb
xor
sti
sahf
sub
popa
jno
cs
mov
jbe
movsl
lret
xor
sbb
callw
cmp
cwtl
dec
push
mov
pushf
inc
fisubl
sbb
sbb
outsb
ljmp
daa
jo
and
test
fstl
pop
dec
lahf
push
lds
mov
addr16
negl
xchg
nop
sub
mov
or
cltd
adc
stos
push
mov
push
push
fs
xchg
pop
stos
js
pop
inc
jmp
sbb
stc
sbb
dec
adc
mov
mov
stos
mov
xchg
bsr
mov
xchg
movsb
xchg
lcall
lcall
pop
dec
fsubs
push
lock
movsb
or
leave
pop
xchg
outsb
sub
ds
sub
imul
jp
insb
and
outsl
hlt
cltd
adc
jmp
sti
push
pushf
mov
mov
mov
xchg
sub
rorl
push
out
iret
fbld
inc
fldt
add
pop
fisubs
jb
lahf
rorb
loop
stc
faddl
cmp
data16
into
ss
jb
js
xchg
out
imul
js
jo
sub
sbb
int
xor
aaa
xor
sbb
in
lods
push
sbb
pop
jmp
xor
fmull
in
cmp
push
jmp
jne
cmp
lods
movsl
xor
popa
ret
or
shl
push
loope
pop
push
push
dec
imul
jl
jns
xchg
roll
jne
shl
sub
cmp
jae
jecxz
jno
pop
mov
fisubs
scas
adc
xchg
cltd
xchg
data16
cmp
arpl
inc
inc
int
mov
jg
out
sbb
add
shlb
fnstcw
je
xchg
in
jbe
fcmovnbe
pop
ret
and
mov
dec
stos
push
sbb
mov
mov
sbb
hlt
aam
ror
sub
or
shlb
jp
mov
fucomp
xchg
daa
cmp
pop
mov
loop
sti
cs
and
pushf
dec
fnstcw
inc
pop
jbe
sahf
inc
imul
lods
call
add
mov
jmp
mov
and
xchg
in
jne
cmp
mov
pop
mov
in
adc
mov
xchg
daa
data16
fs
mov
sbb
fdivs
adc
cmp
jle,pn
sbb
sarb
and
xor
addr16
loope
or
push
mov
shlb
mov
aaa
jmp
jp
std
cmpsl
or
add
in
pop
div
cmpsl
nop
inc
fdiv
or
daa
test
add
xlat
shll
aaa
add
das
imul
stos
sub
xchg
cli
sahf
mov
in
test
xchg
jnp
int
cmpl
push
test
iret
jno
mov
fisubl
jno
pop
sarb
push
lds
push
cld
sbb
clc
insl
jecxz
in
xchg
lret
sub
lock
and
xchg
shl
mov
jno
pop
rcrb
xchg
test
out
xchg
int3
outsl
adc
lock
lcall
jge
jmp
mov
jge
xchg
xor
pop
mov
loopne
dec
out
ja
lcall
sti
cmp
fnstcw
jge
mov
dec
shll
mull
kmovw
mov
adc
out
adc
rcll
aas
out
sbb
ret
xor
test
lds
push
fimuls
cltd
fcomps
mov
movsl
cld
pop
mov
stos
jge
dec
popf
inc
lcall
pop
xchg
add
test
call
je
inc
jle
jno
xchg
mov
inc
push
shll
pop
xchg
adc
dec
jecxz
cwtl
in
mov
cmp
xor
add
cmp
lds
cltd
or
out
fwait
jno
cltd
insb
aam
pop
and
jnp
insl
repnz
packuswb
xchg
jl,pt
cmp
call
add
push
and
push
rorb
sbb
mov
loope
sub
movsl
pushl
cmc
test
push
mov
xchg
xor
mov
jge
add
es
dec
out
mov
cmp
aam
or
shrb
push
cmpb
ljmp
fcompl
add
out
pop
push
test
sub
xlat
mov
rorl
sbb
lcall
sti
outsl
hlt
scas
adc
add
movsb
gs
test
adc
lods
mov
cmp
out
in
gs
cld
cmpsl
jns
inc
dec
lahf
lods
dec
repnz
loopne
fwait
stos
jg
xchg
test
arpl
rclb
pop
gs
mov
into
sbb
jl
stos
push
enter
bound
add
mov
push
loop
icebp
xor
leave
js
dec
ljmp
cmp
mov
sub
jae
je
repz
push
push
mov
push
or
stos
cmp
movsb
daa
pop
mov
std
roll
into
cmp
pop
xlat
xor
fsubr
inc
repnz
and
adc
xchg
int
mov
loopne
les
xor
mov
pop
loopne
mov
add
enter
mov
pusha
ljmp
popf
loop
popl
aaa
xchg
lock
xor
inc
xchg
sar
pop
out
jno
out
adc
push
nop
cmp
sbb
enter
add
push
ret
out
out
cmp
loop
jecxz
movsl
sbb
mov
cmp
movsb
lea
scas
call
insl
adc
push
mov
sub
sub
aaa
push
pop
bound
scas
das
aaa
movsb
out
pop
aad
fidivrs
jge
enter
push
fisttps
pop
or
inc
pushf
stos
xchg
in
push
sub
jp
enter
jp
movsb
popa
and
jecxz
popf
mov
shll
xor
das
int3
shl
jbe
loope
fcmovbe
out
lret
add
das
push
mov
mov
sub
xor
lahf
sahf
adc
gs
call
cld
sbb
out
and
cmp
mov
mov
loop
jmp
nop
je
stc
lock
cmp
stc
das
cwtl
arpl
mov
sub
pusha
inc
stos
pop
gs
std
popf
jp
in
mov
jge
out
icebp
aaa
inc
adc
add
push
imul
stc
jg
xchg
into
sti
sub
push
sarl
leave
or
adc
push
icebp
inc
outsl
dec
mov
sbb
push
popa
clc
dec
mov
mov
push
es
mov
sub
mov
pop
daa
mov
into
jp
cmpsl
enter
les
mov
shrb
sbbb
cmpsl
or
loopne
sbb
lret
jg
mov
lahf
fucom
fcom
adc
cmp
fldenv
xor
and
repz
sub
call
repz
in
mov
sbb
movd
cmp
xchg
pop
lret
pop
jmp
adc
push
push
pop
ror
pop
mov
cltd
push
bound
dec
stc
add
lock
jbe
xchg
or
cmpb
and
ret
push
test
mov
divl
inc
test
ljmp
test
movsb
mov
in
fidivrl
xor
ljmp
pop
pop
and
test
loope
and
lahf
jge
test
test
add
xchg
in
jb
stc
pop
pusha
js
and
cmp
xor
clc
bound
in
bound
cmc
fadds
add
out
mov
dec
dec
pop
out
push
jp
incb
cld
ss
inc
inc
cmp
bound
cmpsb
int3
mov
lea
push
cli
ret
es
xchg
in
scas
sub
int3
aaa
cmpsl
lret
mov
jecxz
add
pop
xchg
pop
inc
push
outsb
lret
je
popa
sbb
sbb
loopne
push
sbb
jo
adc
out
mov
lcall
mov
sti
mov
lret
jae
bound
mov
out
and
or
js
es
jecxz
mov
outsb
mov
pop
mov
jle
cwtl
loope
mov
ret
pop
iret
sbb
cmc
test
repz
sub
movsl
xor
sub
jbe
repnz
mov
lret
sarb
and
mov
imul
xor
loope
jno
sbb
xchg
dec
mov
leave
lret
fcoml
mov
xor
mov
push
aam
or
stos
xorb
test
pop
sub
dec
gs
scas
rcr
dec
sbb
pop
mov
jg
xor
cmpsb
sub
paddsb
xchg
sub
mov
xor
cmpsb
das
orl
add
pop
add
lcall
cld
sub
lcall
pop
pop
fidivs
jno
push
jb
sbb
xlat
adc
push
jge
ret
pop
out
dec
repnz
mov
in
add
mov
push
les
jns
aad
ja
test
mov
cmp
xor
imul
or
scas
pushf
fsubrs
mov
or
mov
cmp
clc
lock
sbb
cmp
fwait
push
enter
in
or
pop
icebp
dec
test
adc
cli
je
mov
inc
dec
lahf
leave
es
jp,pt
push
ds
stos
push
jp
in
das
frstor
sarl
cwtl
and
pusha
mov
cmp
or
add
idiv
inc
and
jp
jl
arpl
cs
hlt
loop
sub
cmpsb
xor
out
ja
fistl
ret
sub
stc
sbb
les
push
popf
sarb
loop
adc
inc
sub
xchg
ret
jno
lods
inc
arpl
xchg
and
stc
int
mov
inc
arpl
dec
add
insb
movsl
jecxz
xchg
ret
cmp
das
cwtl
imul
in
push
pusha
bound
mov
rol
insb
hlt
cld
aam
scas
xor
and
xor
repnz
mul
and
cwtl
mov
pushf
mov
arpl
cmp
or
cmp
push
lret
mov
subb
test
xchg
dec
jno
js
xor
lds
dec
lock
sbb
je
dec
xchg
imulb
in
mov
mov
lret
arpl
mov
shl
xchg
pushf
jge
inc
inc
xor
xor
mov
mov
pop
arpl
pop
push
sbb
add
ret
rorl
movsl
jg
mov
xchg
stos
cmpb
loopne
fs
xchg
adc
test
aad
sbb
mov
nop
shlb
imul
push
cmp
mov
call
and
jnp
stos
cs
mov
test
or
and
ror
fsts
mov
inc
and
adc
adc
xchg
push
mov
lock
xor
and
bound
jmp
or
nop
push
push
lds
pop
mov
int
push
lock
jg
pop
stos
sbb
or
push
lcall
jno
or
rorb
test
inc
fsubs
mov
jecxz
ret
pop
ret
pop
lods
or
sbb
push
fs
enter
xchg
cmp
add
icebp
add
mov
pop
xchg
add
sub
xor
sbb
jp
subl
imul
mov
mov
adc
scas
cmp
rcrl
mov
mov
jb
cmp
fwait
inc
jp
aaa
dec
sbb
ret
add
cwtl
xchg
out
sub
xchg
leave
pop
add
add
adc
ja
xor
xchg
xchg
std
lods
mov
sub
xor
jp
dec
push
xor
call
cmpsb
pop
cld
pop
imul
xchg
xor
ljmp
pop
xor
xchg
push
scas
popl
push
lock
pushf
cltd
xchg
bound
cmp
cwtl
mov
pop
mov
outsl
pusha
rorb
stos
loop
inc
and
loop
sbb
sub
stos
cmp
divb
fwait
mov
jle
xor
sub
aaa
pusha
push
dec
cmp
push
cmpsb
popf
xchg
scas
ret
ret
loop
sub
enter
pushw
pop
lret
je
dec
mov
lahf
test
insl
int3
sub
loope
iret
lock
adc
negl
xor
fistl
sub
jge
push
inc
cmpsl
mov
pusha
popa
sub
mov
je
jmp
scas
xchg
test
sar
inc
ret
bnd
adc
sub
js
and
bound
jnp
pop
dec
xor
push
and
lcall
nop
mov
inc
in
pop
ja
test
pop
dec
push
dec
pop
sbb
movsl
sbb
cmpsl
cmp
adcl
push
dec
dec
sbb
push
sti
jmp
nop
daa
mov
dec
stos
lds
cmp
into
dec
pop
out
xchg
imul
inc
scas
les
andb
pop
xor
clc
pop
loopne
mov
out
push
jne
lret
je
jmp
mov
adc
mov
hlt
push
lcall
adc
add
inc
inc
cwtl
mov
jge
test
lahf
stos
mov
ret
push
push
aad
rcrl
in
dec
xchg
bound
lea
jo
call
mov
out
or
ljmp
mov
test
xchg
and
mov
popf
mov
pop
rcll
dec
mov
xchg
and
and
stos
mov
imul
and
inc
dec
pop
in
test
mov
fstpl
aam
push
push
sub
cld
or
sbb
mov
outsl
jne
dec
into
dec
jno
stos
incl
xchg
dec
int3
ss
or
ror
popf
jo
ljmp
data16
mov
adc
inc
pop
call
shrl
cmp
mov
imul
sahf
stc
test
stos
xor
lahf
nop
lret
inc
test
add
pop
sbb
sub
lret
pusha
and
lods
jb
sub
dec
cmp
test
adc
cmp
jns
push
add
xor
arpl
arpl
push
sti
jo
push
in
push
int3
push
xor
mov
xchg
imul
in
stos
sub
test
mov
inc
inc
xor
push
and
mov
jo
fs
inc
push
test
jle
sbb
adc
jae
mov
mov
rcl
lret
sbb
mov
ret
xchg
mov
push
cmp
dec
inc
lcall
mov
cmp
std
push
lea
ja
adc
and
pop
xor
dec
xchg
pop
add
aaa
dec
xlat
inc
dec
in
xlat
cmp
enter
lret
dec
fwait
or
xor
lcall
jmp
adc
sbb
push
stc
daa
jmp
xchg
or
jbe
jecxz
lea
das
imulb
adc
mov
inc
add
cmp
and
stc
or
pushl
sahf
push
push
sbb
mov
mov
sbb
movsl
out
push
sbb
aas
dec
add
push
jb
xchg
cmp
xor
ljmp
outsb
cs
or
mov
idivl
lret
cmp
or
in
scas
fnstcw
aad
xor
push
shr
jg
mov
or
mov
aam
lods
rorl
dec
lods
mov
fsubrl
rolb
sub
in
or
push
adc
xchg
and
pop
call
sbb
arpl
adc
movsl
das
and
test
inc
mov
mov
xor
xchg
or
jg
fbld
pop
pop
xor
shrb
adc
jg
cwtl
jl
pusha
jmp
dec
sub
push
and
iret
or
sub
xchg
sub
loopne
push
inc
and
pop
push
adc
dec
movsl
out
call
mov
add
sub
mov
dec
aam
aad
test
dec
cmpsb
mov
ret
movsb
aad
cmp
loope
popa
xor
stos
push
inc
adc
and
jne
test
and
adc
jno
mov
inc
jecxz
cmc
rcrl
in
int
in
push
adc
je
and
cld
lret
lds
in
int3
cmc
iret
addr16
mov
mov
fdivl
sbb
scas
push
daa
pushf
jns
pop
push
ja
sbb
inc
add
mov
or
xchg
pushfw
xlat
into
in
movsl
sti
loope
dec
xlat
cmovne
fcmovbe
ja
addr16
sub
movsl
fs
insb
test
movsb
jo
pop
xchg
xor
es
cwtl
dec
pop
sub
dec
xchg
jle
incl
pop
lahf
out
mov
ss
cmp
loope
lret
inc
nop
lods
adc
jmp
mov
mov
aaa
inc
stos
fs
dec
ret
mov
xchg
pusha
cltd
stos
push
insb
lock
xor
rclb
ja
xchg
aam
sbb
dec
inc
mov
iret
mov
mov
adc
fisubs
jnp
cwtl
rcrb
xchg
ds
testl
ja
mov
lods
mov
mov
mov
add
out
out
mov
adc
pop
or
cwtl
or
or
add
arpl
dec
movsl
adc
pop
stos
lret
andb
inc
push
outsl
cmpsb
push
call
lock
mov
mov
push
sbb
enter
push
lods
cmpsl
inc
mov
sbb
mov
pop
mov
fwait
jns
cmpsl
push
in
dec
fwait
xchg
cmp
inc
and
std
mov
outsl
jle
pop
sub
js
jecxz
jns
mov
icebp
lahf
mov
test
dec
in
sub
cmpsb
pop
mov
dec
js
aad
test
dec
rolb
fists
pop
fstpt
dec
ljmp
push
das
sbb
push
call
pop
clc
sti
sbb
push
outsl
shlb
inc
repnz
jns
fsubr
movsl
sub
mull
or
or
xor
dec
adc
outsl
sti
popa
fmulp
and
aas
outsb
rorb
push
stos
adc
lcall
inc
mov
cmp
lods
push
inc
mov
cltd
adc
push
loope
and
cmp
fisubs
mov
jmp
cmp
je
mov
test
pop
mov
iret
jb
data16
pop
lahf
aad
stos
out
cmp
daa
pusha
scas
cmp
or
or
rorl
cmp
rcrb
dec
loope
cmpsl
nop
enter
cmp
ret
out
in
enter
idivb
xchg
fbld
fucompp
jp
mov
test
sarb
mov
ret
xor
jns
pop
rolb
cmp
sbb
push
sahf
inc
or
and
test
and
jae
mul
xor
mov
mov
repz
dec
iret
cmpsb
movsb
cmp
lcall
jecxz
leave
sbb
mov
in
sub
into
lret
mov
pop
mov
lods
icebp
mov
push
push
sub
push
mov
loopne
aam
jae
or
cmp
mov
ljmp
mov
inc
push
ss
jg
or
mov
sbb
mov
jne
push
scas
rcll
inc
js
xchg
mov
or
mov
mov
push
xchg
test
notl
cwtl
cmpsl
and
mov
xor
jns
push
push
gs
cmp
sahf
push
adc
jnp
push
push
je
loop
and
xchg
jae
xchg
cmp
test
mov
adc
bound
jns
push
cmp
jp
sbb
stc
push
mov
dec
mov
arpl
sbb
mov
pop
xorl
cli
filds
adc
pop
out
xor
or
or
les
inc
repz
or
or
push
cmp
xacquire
movsl
or
and
out
call
fisttpl
fidivs
xchg
stc
or
mov
popf
inc
pushf
adc
aam
aam
sub
add
jle
mov
fucomi
inc
cld
adc
idivb
pop
in
adcl
inc
pop
roll
push
sub
rcrb
int3
cs
push
xchg
cmp
lods
cltd
xor
scas
mov
inc
pop
mov
dec
cmp
outsl
inc
test
stos
and
mov
cmpsl
sbb
xorb
add
jl,pn
adc
push
imul
sub
add
pop
cwtl
insl
mov
jae
mov
imul
stc
jge
push
lcall
int3
or
mov
or
fimuls
push
mov
push
ret
sub
sbb
mov
add
inc
sarb
pop
fwait
cltd
lcall
inc
rorl
and
inc
loop
mov
fwait
mov
xchg
sti
adc
add
out
sahf
xchg
mov
sub
rclb
int3
cmp
stc
xchg
pop
pusha
cli
dec
push
mov
push
push
pop
push
sbb
cld
insb
std
sub
test
call
das
mov
jbe
xchg
add
dec
xor
xchg
pop
jp
stc
dec
mov
inc
or
add
cmp
and
aas
loopne
inc
daa
xchg
pop
stc
fcompl
int
int
insl
test
push
stos
mov
jge
cli
gs
daa
sub
push
pop
sub
or
sbb
dec
test
adc
mov
std
dec
jo
scas
scas
mov
cmpsb
and
idivl
xor
pop
adc
sti
mov
sbb
int
adc
xor
mov
push
push
jecxz
out
sub
mov
es
xor
sbb
sbb
or
loop
pop
in
call
pop
jnp
jl
or
std
mov
test
xchg
and
data16
les
sub
outsl
inc
fs
mov
mov
mov
es
nop
and
and
cmp
addr16
dec
outsb
movsl
outsb
sbb
fnstcw
clc
adc
cli
mov
lret
lods
sub
in
and
mov
jno,pn
jg
pusha
hlt
movsb
stos
jmp
daa
ret
sarl
pop
inc
repz
xchg
cmp
jmp
out
dec
stc
jl
lahf
jecxz
in
mov
repnz
js
lcall
dec
cli
add
sbb
lret
sub
sub
loop
subl
negb
addr16
cmp
mov
mov
mov
xor
mov
outsl
xorl
and
adc
or
push
xor
add
dec
mov
jo
les
in
or
or
rclb
add
pop
cmp
pop
cmp
sbb
insb
mov
fnstcw
mov
icebp
xchg
jge
psraw
dec
addb
pushf
sbbb
pop
sbb
icebp
data16
cmp
call
rorl
mov
dec
es
add
cmp
xor
movsl
xchg
pop
pop
lret
orb
stos
lret
rcll
inc
or
lret
xor
ret
cmpsl
lcall
fnstcw
outsl
pop
or
mov
push
arpl
cmpsb
cmp
cmp
repz
sub
jns
out
dec
jmp
stc
lods
orl
aam
xlat
test
les
push
lahf
ret
pop
dec
bound
stos
addr16
jnp
inc
fwait
lcall
lcall
ljmp
cmp
pop
movsl
call
mov
push
insb
and
stos
mov
jb
sbb
lret
dec
sbb
popf
mov
lea
imul
punpckhbw
insb
out
xlat
pop
add
and
icebp
inc
push
sbb
cwtl
inc
mov
das
cltd
cmp
adc
in
icebp
adc
jno
cmp
mul
push
push
bound
adc
inc
xlat
mov
jns
into
adc
jl
les
insl
and
push
jbe
and
mov
mov
in
adc
sarl
mov
or
pop
psrlq
call
sub
dec
sub
sub
addb
cltd
in
pop
adc
and
in
xlat
sub
imulb
ljmp
ss
pop
loop
aas
dec
mov
std
jmp
fisubrl
add
sarl
jmp
and
mov
jae
stos
sub
leave
xchg
stc
sub
cwtl
sti
imul
add
popf
jne
cmp
add
scas
lock
nopl
and
cmp
xor
daa
gs
fldenv
pusha
pop
push
and
and
inc
jb
shll
or
out
jne
mov
hlt
notl
mov
scas
jecxz
push
in
js
cmp
or
sbb
mov
cmp
enter
lods
movsl
cli
jae
push
hlt
ficoml
dec
subl
dec
jp
bound
dec
dec
icebp
inc
dec
lods
popa
int
insl
mov
scas
lds
adc
bound
lret
cmp
es
fwait
add
lret
xchg
or
cld
jae
bound
mov
push
je
adcb
lahf
mov
scas
jne
popa
fwait
jo
pusha
cmpsb
push
jne
cli
mov
dec
add
roll
mov
xchg
xchg
cmp
js
push
lea
daa
mov
push
cmp
test
ss
or
jmp
xchg
subl
sbb
lret
pop
outsb
outsb
jle
js
in
and
xchg
xchg
xlat
push
add
mov
rcrb
add
in
pop
sub
mov
jbe
insl
mov
aas
out
inc
or
xor
pop
xchg
cmp
mov
sbb
cmp
or
mov
jge
dec
cs
leave
loop
pop
inc
lret
jns
loopne
and
inc
outsl
add
jg
loop
xchg
arpl
xchg
dec
mov
xor
mov
inc
and
jl
mov
fcoml
push
add
ret
lret
or
fsubr
xchg
mov
jbe
cmpsl
or
add
cmp
cmp
ss
addr16
cmpl
inc
pop
inc
and
out
jl
clc
cmpsb
adc
mov
xor
push
push
adcb
xchg
xor
ljmp
sub
jmp
std
mov
and
jmp
mov
pop
sub
mov
sub
sbb
push
xor
xchg
dec
test
inc
sahf
mov
aad
lds
and
pop
mov
or
mov
iret
jb
mov
in
xchg
mov
inc
cmpb
ret
mov
add
les
movl
pop
dec
daa
mov
icebp
push
jmp
and
lcall
and
daa
filds
out
addr16
sub
test
cmp
mov
movsl
fs
or
repz
mov
mov
fidivrs
int3
rcl
pop
push
inc
adc
mov
push
sbb
pop
mov
ja
pop
mov
xchg
push
outsl
adc
pop
sub
adc
mov
jae
mov
mov
loope
scas
mov
ss
push
mov
mov
and
or
mov
pminub
mov
mov
mov
mov
aam
clc
lods
sub
add
fidivl
std
sub
and
mov
sarl
stc
rcl
mov
or
and
cmp
mov
inc
pop
ret
push
leave
fisttpl
add
lahf
cmp
or
scas
push
pop
mov
sub
jmp
mov
add
push
call
mov
iret
out
sbb
sub
fstl
lcall
and
cmp
ret
jnp
cmp
push
xor
fcompl
aam
push
push
ja
mov
or
inc
outsb
jp
cwtl
mov
and
xor
outsl
scas
cmp
push
sub
in
pop
fdivl
cmpsb
push
lcall
enter
add
xchg
add
fs
data16
loopne
in
mov
call
stos
clc
aaa
je
mov
add
inc
fisubrl
dec
sub
call
imul
test
call
sbb
push
aaa
aad
sub
or
ljmp
dec
stos
lret
mov
stos
mov
inc
xor
adc
and
cmpsl
or
ss
pop
stos
mov
jb
test
js
mov
into
sub
into
dec
mulb
repnz
fstps
dec
pop
mov
pop
cs
push
and
out
aas
out
cmovno
or
test
sub
loop
icebp
outsb
push
stos
pushf
push
and
mov
mov
bound
stos
outsb
sub
or
pop
ja
dec
mov
cld
clc
aad
jle
jge
mov
push
cmp
sbb
xchg
mov
sbb
and
mov
ljmp
int3
xchg
mov
clc
sbb
lret
mov
inc
sub
inc
cmp
call
mov
lret
mov
inc
and
add
fidivrs
popf
nop
push
insl
adc
movsb
lods
mov
dec
dec
lcall
clc
or
js
fadds
dec
lods
es
adc
mov
lret
outsl
adc
xchg
or
icebp
or
sub
pop
loope
push
adc
jge
mov
mov
stos
mov
rclw
push
lcall
pusha
int
fwait
cmp
lock
add
jo
jo
ret
mov
sti
jle
rcll
add
sbb
sub
mov
and
xchg
shl
dec
xchg
leave
xor
insb
mov
inc
and
push
xchg
sbb
call
cmp
popf
fadd
adc
or
mov
pop
sahf
fidivrs
or
adc
shlb
cmp
jmp
loope
shl
in
mov
sbb
pushf
popa
mov
imul
xor
fstpt
sbb
jle
adc
xchg
js
ds
loope
testl
repz
idivl
sub
xchg
cmp
mov
jl
lock
mull
out
cmp
cmp
cwtl
push
mov
sbb
mov
jge
or
sbb
cmp
sbb
ja
nop
lds
cmp
or
push
adc
adc
cmp
mov
adc
sub
cmp
les
and
lret
and
ja
faddp
pushf
popf
jge
stos
jl
or
aas
vmovhps
fwait
nop
popf
mov
push
loop
addb
cmc
mov
mov
icebp
lods
mov
push
xchg
adc
mov
inc
jo
mov
lcall
xchg
xchg
inc
loope
outsb
sub
addr16
ret
dec
scas
mov
movsl
dec
fwait
rclb
sti
inc
inc
mov
add
mov
and
inc
jmp
jge
fsts
movsb
or
popl
stos
cmc
or
mov
lahf
subl
je
inc
adc
xchg
jae
rcl
inc
push
stos
add
or
push
subb
and
lret
imul
movsb
cwtl
ficompl
cwtl
adc
lret
ja
xchg
inc
xchg
push
cmpl
sub
mov
add
sub
imul
roll
push
divl
push
lods
cmp
xchg
andb
lcall
repz
mov
mov
pop
dec
pop
cwtl
mov
lods
push
adc
fs
cmp
push
or
std
pop
hlt
faddl
push
pop
je
jge
mov
add
adc
jecxz
push
inc
scas
or
mov
push
fistl
cld
aam
inc
stos
loopne
or
push
inc
dec
and
mov
push
in
or
add
cmpsl
int3
ja
xor
daa
int3
adc
daa
mov
push
mov
xchg
mov
pop
out
push
jp
sbb
xchg
ret
mov
bound
shr
xchg
sub
negl
enter
fadds
lods
mov
sahf
push
dec
adcb
rclb
jne
out
push
push
fadd
int
popf
lea
sarb
lret
cmp
andl
jae
xchg
cmc
sarl
cwtl
or
push
mov
loop
daa
pop
stos
mov
sahf
pop
sarl
push
repnz
test
sbb
das
lret
data16
ret
cmpsl
pushl
dec
pop
cmp
cmp
clc
and
pop
cmpsb
pop
and
pushf
xor
jmp
jne
shr
pop
in
pushf
les
dec
mov
adc
xchg
mov
aam
aaa
and
mov
test
adc
ljmp
xor
mov
imul
mov
jo
mov
jae
cwtl
bnd
xchg
in
add
dec
cli
jae
or
outsb
lcall
mov
xchg
pmullw
mov
xor
addb
push
inc
push
cltd
movsl
leave
sub
test
inc
xor
dec
stc
jmp
cmp
mov
imul
mov
std
into
mov
stos
into
test
push
sbbl
lret
je
andb
pop
cmpsb
ljmp
subl
stos
repnz
loope
xchg
test
adc
sub
push
push
inc
push
or
push
cmp
fnstsw
and
aas
push
jl
daa
lret
data16
cltd
lods
push
loopne
ss
or
pop
rorl
lock
imul
aaa
pop
lcall
pusha
mov
mov
cmpsb
xchg
shlb
loopne
mov
std
sub
sbb
or
in
mov
aas
push
sbb
fidivrs
gs
nop
cli
out
dec
je
jo
pop
add
inc
nopl
push
sub
xchg
pop
js
fsubrs
bound
xlat
mov
les
dec
inc
add
cmp
int
mov
in
pop
mov
push
enter
cvtpi2ps
mov
out
enter
sar
into
adc
punpckldq
pop
negb
out
addl
jle
inc
add
jb
cmp
adc
inc
push
xlat
int3
dec
aas
pusha
mov
jbe
and
fnstcw
int
mov
mov
cs
add
ret
adc
inc
lret
cmpsl
dec
jo
mov
dec
pop
jmp
cmpsb
ja
fs
stos
loope
lock
leave
scas
popa
in
push
xchg
andl
jmp
xchg
inc
fistps
icebp
sbb
int3
xorb
pop
pop
sub
aas
jb,pt
pop
std
or
pop
sbb
sti
push
aam
sub
aas
mov
lock
lock
adc
fwait
loop
popf
shll
mov
add
test
into
mov
test
mov
jb
mov
in
and
and
mov
xor
imul
xorb
sarl
mov
scas
sbb
xchg
dec
outsb
test
cmp
adc
shll
jbe
xchg
sub
push
cli
les
pop
and
in
cs
adc
pop
sub
mov
scas
jns
fistpll
sub
sub
push
out
mov
pop
popa
sbb
pop
sbb
sbb
cmp
je
pop
pop
fidivs
mov
jl
addl
inc
push
pushf
inc
loop
out
jmp
aam
cs
push
out
mov
jle
aaa
mov
cltd
loop
int3
cwtl
test
dec
rclb
fsubp
cld
dec
mov
jmp
mov
fmull
stos
jle
addb
je
dec
out
and
aad
mov
fisubrl
pop
loopne
std
in
xchg
scas
loopne
hlt
ss
push
mov
mov
mov
loop
xor
push
cmp
dec
cmp
mov
xchg
mov
ds
rcrl
lcall
adc
mov
leave
cltd
stos
and
movsb
jecxz
adc
cmp
mov
fstl
ja
push
push
ljmp
xor
fwait
loope
inc
aam
rcl
adc
dec
mov
push
jnp
and
repz
fnstcw
les
add
mov
xchg
sti
pop
repnz
imul
ret
into
mov
and
in
cmp
shrb
cwtl
sub
movsb
mov
dec
xor
mov
xor
mov
lret
add
lods
adc
dec
out
or
add
pop
outsl
ror
nop
mov
lret
cmp
stos
loop
in
sbb
ss
add
cmp
add
cmp
cmp
jmp
in
out
push
xor
out
sbb
lods
insl
push
cld
mov
pop
jbe
sub
or
scas
ret
pop
push
sbb
lds
pop
pop
sub
lock
jmp
outsl
rol
add
cltd
mov
stc
lods
lret
rcrb
scas
sub
pop
fst
jns
int3
div
cmc
mov
add
pop
mov
dec
add
iret
dec
aam
or
inc
mov
stos
stos
outsb
push
sbb
mov
mov
and
pop
enter
mov
jmp
jns
push
fldenv
outsl
repnz
jge
loope
data16
sbb
inc
or
pusha
dec
clc
xlat
xor
xor
lret
inc
cmp
mov
ss
push
pop
int3
pop
dec
repnz
add
mov
mov
dec
jne
or
sub
inc
repnz
out
imul
add
mov
jbe
push
ret
sub
cwtl
cmp
xchg
outsl
movsl
push
dec
push
dec
outsb
cmpb
dec
and
rorb
pop
sub
cmc
cld
xor
mov
mov
outsl
xor
nop
xchg
xchg
es
mov
xlat
xchg
sub
scas
mov
mov
bound
mov
jbe
pop
mov
mov
mov
mov
stos
sub
mov
das
xchg
cld
out
sbb
dec
pop
xchg
add
sbb
mov
ret
dec
jns
push
ret
mov
jp
out
adc
xor
or
imul
in
sub
sbb
daa
out
loopne
inc
pushl
jecxz
dec
addb
pop
mov
pop
dec
xchg
int3
mov
inc
out
jecxz
sub
iret
add
in
mov
mov
adc
cmp
pop
popf
mov
fidivrs
jno
aas
sahf
pop
pop
gs
push
mov
jg
bound
arpl
dec
dec
enter
xchg
inc
mov
xchg
jle
es
pop
in
add
dec
outsb
inc
jns
mov
push
mov
fisubrl
cmp
js
imulb
cmp
mov
and
inc
xor
adc
insl
or
xchg
jge
pop
cmp
pop
mov
dec
scas
sub
xor
es
or
fsubr
pop
ret
mov
sub
clc
pop
dec
ljmp
push
stc
jne
aam
and
cli
adcl
mov
pop
data16
daa
call
mov
mov
addr16
rolb
sahf
add
or
and
or
fucomip
scas
mov
jp
push
jns
jo
mov
je
jb
mov
or
xor
rorl
ret
in
dec
xchg
rol
js
cltd
jecxz
imul
popf
insb
xchg
les
in
test
test
and
xchg
jg
neg
cmpsl
adc
mov
out
mov
stos
rcll
jge
sbb
je
movsl
dec
mov
cli
popa
sbb
cmp
test
stc
xlat
pop
loop
and
jae
xchg
push
xchg
inc
dec
sbb
and
cld
inc
push
mov
xchg
cwtl
pop
ret
rolb
daa
repnz
scas
dec
mov
cmp
xor
xor
mov
js
push
xchg
vmwrite
call
hlt
add
jle
daa
sahf
and
mov
sub
lods
std
repz
xor
test
pop
lock
inc
jmp
fstpl
and
shlb
sbb
iret
sub
ror
shrb
xchg
or
pop
xchg
push
pop
fadd
jmp
out
xchg
ja
popa
and
jns
orb
push
push
addr16
mov
js
pop
insb
testb
popa
andb
lahf
jb
pop
mov
sub
test
test
push
mov
or
xlat
test
mov
repz
andb
mov
dec
lahf
or
cmp
not
lahf
sub
pop
and
sbb
sbb
jp
cld
lret
mov
pop
inc
and
fadds
loopne
cmp
fimuls
out
and
pop
push
out
push
pop
mov
inc
and
fidivs
pop
mov
jg
xchg
lret
mov
pop
ficomps
push
cmp
push
jne
neg
push
adc
or
lods
out
rcrl
js
mov
mov
dec
mov
aas
pop
das
sub
testb
out
test
fistpll
add
cld
pushf
addl
shll
push
hlt
inc
xorl
mov
fldcw
sbb
imul
jle
dec
in
loope
or
mov
sarb
mov
or
aad
or
jae
jae
rcll
pop
pop
insl
data16
mov
pop
pop
add
inc
iret
cmp
repnz
push
loope
add
mov
out
adc
aad
pop
std
shll
xor
addl
sbb
push
push
mov
mov
jo
clc
push
jge
bound
hlt
mov
jmp
or
aad
mov
xor
adc
or
sub
and
lock
enter
stc
cmp
fwait
arpl
xchg
lds
jbe
pop
sahf
dec
pop
pop
movsl
test
rorl
push
lock
rorl
mov
dec
mov
xor
mov
mov
lret
out
in
pop
and
insb
enter
jb
lds
lahf
nop
cmp
scas
pop
push
icebp
pop
dec
xchg
iret
or
cmp
xor
popa
xchg
xchg
mov
push
adc
push
push
addl
pop
sbbb
fidivl
sbb
sbb
cmp
xorb
sub
scas
cmp
xchg
mov
rorl
out
sub
adc
sarl
ret
and
mov
into
xchg
outsb
push
pop
mov
jge
cmpsl
jnp
or
sbb
and
and
fbld
pmulhw
mov
jo
jne
lcall
test
xor
rorb
or
rcrb
push
pop
sahf
popf
in
in
div
aad
outsl
pop
xchg
aas
jae
rep
cmp
cs
inc
fstpt
stos
scas
test
jle
mov
shrl
mov
mov
iret
mov
sbb
mov
cmp
xchg
loope
in
jae
inc
pusha
mov
lahf
std
mov
sahf
cmp
popf
mov
lds
pop
lods
lcall
inc
jl
popf
cltd
test
sub
mov
fldt
and
mov
dec
shl
mov
mov
pop
or
sub
jmp
xlat
popa
aad
adc
lods
xor
dec
ret
in
imul
jae
rorb
fisttps
push
outsb
movsl
loopne
jns
or
cmp
dec
mov
test
ret
cmp
loopne
insb
jae
loop
mov
xchg
xor
add
or
and
iret
roll
jno
adc
pop
repnz
jl
loope
xor
mov
push
sbb
xor
mov
test
out
lock
gs
cmpsl
dec
int
fmuls
jb
add
popa
loope
cwtl
xchg
scas
lcall
arpl
insb
cmp
mov
inc
xor
loop
in
mov
sbb
inc
shlb
mov
adc
mov
fstpt
loopne,pn
mov
je
or
jecxz
fidivrl
sahf
lret
mov
cmpl
in
jmp
lea
test
test
or
or
push
mov
adc
mov
mov
data16
adc
cmp
movsl
cmp
and
cmpl
scas
stc
rcrl
mov
cmp
dec
pop
adc
sbb
mov
daa
data16
loopne
xchg
cmpsb
mov
mov
jl
mov
mov
inc
test
adc
inc
jo
in
lret
ds
mov
mov
cmp
dec
pop
test
pop
jne
jno
fisubrl
pop
fcompl
add
arpl
inc
lahf
cmp
sbb
xchg
inc
lcall
rorl
in
out
xor
jg
ss
leave
fldcw
mov
add
push
push
add
cmpsl
dec
jl
lea
mov
adc
cli
hlt
xor
xchg
out
dec
out
jnp
aam
js
mov
arpl
mov
and
shll
fldenv
xchg
lds
dec
outsb
pop
in
mov
fwait
sub
push
push
mov
outsl
imull
dec
jge
sbb
jns
movsl
lret
lret
dec
lods
mov
xchg
cmp
sub
gs
xchg
shlb
mov
lods
mov
stos
adc
dec
nop
clc
stc
mov
into
sbb
dec
pushf
or
dec
bnd
movsl
lret
out
insb
outsb
sbb
mov
cmp
addr16
pushf
mov
mov
aam
insl
es
sub
sbb
xchg
ficomps
jo
xchg
ret
push
cld
and
xchg
mov
cmp
or
xchg
fdivl
cmp
pop
adc
ret
adc
and
dec
fimuls
add
stc
mov
repnz
psrld
sub
or
scas
jne
cmc
sahf
loopne
arpl
sbb
dec
xchg
jnp
xor
sub
aam
nop
sbb
sti
xor
out
lret
sub
cmp
push
outsb
rolb
pop
je
xchg
pop
xchg
insl
mov
mov
fcoms
mov
pop
xchg
je
add
cwtl
xor
dec
mov
loop
sti
pushf
test
iret
xchg
add
and
shrl
sub
inc
int
addl
xor
mov
rcll
outsl
and
and
add
adc
pop
out
mov
imul
fdivrl
roll
in
sbb
icebp
or
imul
cs
or
sub
push
rolb
mov
cli
pop
scas
loope
repnz
lahf
adc
xchg
shrb
jns
shll
mov
imul
sarl
mov
shlb
out
outsb
cmp
fisubl
lock
out
sti
sbb
dec
daa
call
aaa
fs
sahf
or
jbe
jo
loopne
popa
pop
addr16
push
pop
icebp
push
sbb
bound
mov
sbb
xor
mov
cld
out
iret
iret
daa
nop
add
nop
sub
sub
test
andb
xor
sbb
mov
dec
sbb
int3
int
add
jae
inc
jp
mov
mov
sahf
add
out
cwtl
or
pop
push
push
sub
add
xchg
mov
popf
pop
shlb
xor
sbb
xor
push
jmp
shll
or
pop
daa
push
rcrb
jno
mov
cs
mov
jnp
cltd
jp
jns
mov
mov
fcomps
jbe
mov
scas
xchg
mov
push
rcr
flds
or
mov
inc
xchg
jbe
lds
xchg
call
sub
repnz
sub
and
les
sbb
dec
sar
repz
scas
push
or
xchg
cmp
or
xchg
jae
and
push
xchg
xchg
cmp
mov
clc
mov
arpl
insb
or
dec
or
xor
sub
nop
mov
xor
ret
icebp
lcall
sub
inc
adc
xchg
jp
arpl
out
jecxz
jp
xchg
jno
je
sbb
lahf
repz
mov
xchg
inc
hlt
pop
int3
imul
push
sbb
jmp
cmpsb
aas
xchg
jmp
lahf
jmp
or
bound
or
push
cmp
jg
out
loop
xor
sub
xlat
rcr
xchg
ret
int
pop
out
mov
xlat
outsl
xor
xchg
iret
cmp
std
bound
std
subl
jnp
clc
cs
push
mov
leave
out
jno
lods
lea
xlat
aad
sbbl
mov
inc
call
sub
fisubrl
dec
bound
mov
pop
pusha
int
fldenv
call
addr16
out
nop
sub
sti
cmc
or
cmp
aas
or
push
out
sub
ljmp
fs
in
mov
data16
inc
sbb
fucomi
pop
mov
insl
inc
pop
insl
jp
daa
jno
push
rolb
imul
lods
push
test
es
xchg
or
fcoms
lahf
sub
push
mov
loopne
pop
aaa
into
mov
pop
mov
add
pop
aaa
push
inc
out
inc
popa
cli
mov
jle,pn
and
inc
xor
and
fsubrs
xor
xchg
push
sbb
mov
ss
or
push
xor
mov
xor
or
sbb
mov
insb
xlat
push
rcrb
imul
xchg
dec
adc
rcll
dec
stc
ret
nop
orb
scas
xchg
and
sub
mov
sarb
sub
loop
cli
sarb
popa
xor
shll
je
test
movsl
push
gs
add
sub
mov
mov
mov
rcrl
scas
repnz
mov
test
adc
lcall
xorb
xchg
sbb
inc
outsb
sarb
scas
inc
jns
pop
rcl
jecxz
add
insb
sti
outsb
aad
inc
cmpsb
mov
fs
shlb
adc
js
mov
aam
adc
xor
cltd
pop
movsw
add
add
in
clc
insb
sub
mov
mov
movsl
cmc
aaa
mov
mov
cmpl
ficoml
daa
xchg
bound
push
sahf
sarl
pop
pop
inc
movsl
fs
jno
pop
mov
jne
sub
mov
jb
outsl
add
pushf
add
jge
xchg
push
lods
std
push
xchg
adc
subl
dec
or
mov
xor
inc
mov
cmp
xor
lret
fs
jmp
dec
push
inc
jecxz
cmp
sti
mov
aam
jle
inc
inc
mov
dec
mov
xchg
aam
sahf
push
repz
pop
stc
add
mov
mov
or
cmpl
adc
cltd
sub
fildll
xchg
cmp
and
test
mov
in
js
mov
out
mov
aas
dec
cltd
idivl
fisubl
sbb
stc
and
gs
adc
cmp
out
lret
jecxz
inc
movsb
out
xor
fstpt
mov
jge
lea
and
push
jbe
incl
ljmp
mov
lahf
std
test
jb
ret
xor
in
outsb
sbb
dec
xor
mov
push
rclb
pop
sbb
xchg
sbb
popf
xchg
xchg
xchg
xchg
pop
jp
dec
and
mov
xchg
jb
mov
sub
inc
mov
out
cld
dec
push
cmp
add
out
jno
fwait
jb
add
bound
adcb
push
mov
loope
imull
jg
pop
loopne
fnstsw
cmpl
js
mov
adc
xor
jecxz
mov
fdivr
mov
popl
shll
pop
pop
sbb
mov
pop
push
mov
loop
nop
and
xor
movsl
sti
subl
cmp
fildl
out
or
mov
ret
xlat
gs
cmpsb
loopne
xor
mov
inc
jmp
xchg
sub
add
pop
test
shrb
mov
aam
test
jnp
sarb
add
int3
arpl
mov
je
jp
out
xor
adc
enter
icebp
pop
cli
xchg
fwait
cmp
stos
pop
test
cmpsl
vmwrite
repnz
pushf
int
pop
insl
mov
inc
nop
mov
js
cmpsl
in
and
mov
jbe
ds
js
lcall
insb
jge
out
mov
push
scas
test
loop
cmpsl
inc
les
clc
sub
ret
cmc
out
jbe
outsl
rcr
and
pop
adc
in
imul
or
out
cmpl
cli
xorl
leave
clc
imul
test
insl
push
shll
pop
outsl
sarb
int3
fwait
dec
mov
scas
outsb
cwtl
pop
mov
gs
xchg
iret
dec
jg
xor
cmp
out
push
lock
sub
in
mov
inc
dec
mov
jl
xor
mov
sbb
mov
dec
fisubrs
pusha
cmp
lcall
jb
leave
inc
xor
sbb
add
dec
sarl
rcrb
xchg
xchg
xlat
jmp
sub
movl
call
test
xchg
repz
ja
out
daa
jmp
mov
mov
jnp
dec
es
fimuls
data16
jp
xchg
insb
xor
xor
loop
aad
data16
iret
sub
cmp
push
mov
cmc
adc
mov
cmp
adc
adc
sahf
shlb
cmp
xor
mov
push
dec
icebp
icebp
out
cmp
stos
pminsw
xor
cmpsl
js
xor
fadds
cmpsl
in
sti
lods
std
mov
in
int
sbb
je
repz
xor
movsb
loope
dec
fcmovb
add
movsb
das
insl
scas
dec
rol
dec
inc
enter
jb
std
push
mov
add
test
sahf
jbe
insl
jp
fldenv
push
mov
pop
cmp
movsb
mov
or
push
cli
dec
inc
or
adc
xchg
xor
fisubrl
sbb
mov
push
incl
cmp
pop
xchg
dec
lahf
int3
cs
movsb
fs
xor
adcl
mov
sub
cmp
cmp
test
dec
push
ja
mov
push
aaa
cmp
mov
jle
dec
les
inc
addl
je
push
mov
pop
adc
jmp
xchg
stc
leave
adc
das
pop
and
inc
imul
pusha
je
pop
push
das
insb
aam
shll
es
dec
jle
mov
dec
and
push
fiaddl
xchg
hlt
xchg
fbld
pop
lods
mov
pop
scas
leave
xor
std
push
repnz
sti
daa
pusha
inc
adc
push
fwait
test
subl
mov
mov
aaa
das
or
pop
dec
jne
dec
mov
jae
add
ja
xchg
dec
cwtl
pop
xchg
mov
inc
lods
hlt
cmp
negb
ds
sbb
loopne
out
lret
pop
shlb
or
icebp
out
pop
jl
rsqrtps
nop
fcoml
sti
mov
jno
xor
cmp
ret
pop
jne
mov
data16
cs
mov
rorl
stos
aaa
adc
add
xor
inc
add
pop
xchg
call
shlb
addr16
and
jmp
lds
imul
fildl
nop
sub
jle
push
repnz
arpl
and
fsub
int3
mov
clc
add
xor
cmp
imul
xor
sbb
mov
rorb
dec
inc
xor
mov
jnp
cmp
and
sarl
xchg
fsubrl
xor
aam
pop
ror
mov
jg
jo
fs
dec
movsb
or
loope
xchg
jp
test
xchg
ret
push
mov
xchg
xchg
jno
sahf
imul
call
or
call
dec
xchg
push
sbbb
add
fmuls
mov
fwait
rcrb
mov
mov
sbb
std
fbstp
push
and
xchg
fbld
xchg
cmc
test
pushf
sub
cmp
xor
out
dec
lcall
adc
in
lret
or
jg
movsl
cmp
insb
push
or
test
xchg
xchg
pop
mov
or
and
out
mov
inc
negl
enter
iret
ljmp
dec
and
in
fs
xchg
dec
lds
mov
clc
cmp
mov
loop
aam
lods
outsb
jae
mov
fiaddl
mov
jb
push
add
std
pop
rolb
mov
imul
jns
add
mov
scas
lock
leave
xchg
stos
push
pop
inc
mov
lea
jno
xlat
jb
sub
jmp
imul
dec
mov
scas
xor
out
lds
dec
push
adc
xchg
repz
cltd
mov
jbe
loope
out
xchg
sahf
mov
dec
push
fwait
jns
pop
inc
add
lcall
sub
out
ret
sub
mov
test
sbbb
jecxz
mov
sub
xchg
mov
and
xchg
imul
js
jo
mov
jecxz
xchg
and
dec
push
push
flds
push
adc
dec
sbb
inc
mov
daa
xchg
imul
push
cmp
inc
pop
imul
push
sub
leave
fucomp
repz
pushf
jb
xchg
jb
insb
out
ret
mov
in
jno
and
pop
mov
dec
xchg
cs
mov
and
mov
adc
dec
into
jb
sub
fs
loopne
push
jp
mov
cltd
mov
scas
push
push
imul
mov
xchg
push
and
xor
dec
nop
icebp
pop
dec
hlt
push
cmpsb
loopne
inc
sbb
hlt
std
push
xchg
sbb
sahf
lahf
or
outsb
pushf
cmp
or
mov
andl
mov
cmp
repz
xchg
jle
lock
xchg
rorl
cltd
mov
dec
and
add
mov
addr16
jne
addl
in
push
mov
je
adc
inc
sbb
sub
xor
mov
subl
inc
inc
fst
es
psrlw
mov
push
xchg
punpcklbw
jno
xchg
push
mov
in
push
xchg
inc
jmp
adc
in
cmp
std
mov
or
out
cmc
cmp
adc
mov
imul
mov
call
xor
sarb
xlat
or
sahf
jae
sub
mov
sub
inc
mov
lcall
mov
pop
mov
xchg
mov
leave
jg
push
jnp
outsb
push
fcmovne
push
jnp
aaa
pop
mov
js
in
stos
push
aam
cltd
cli
aaa
sbb
addb
call
pop
sbb
shlb
mov
in
aas
lock
outsb
and
imull
mov
xor
scas
cwtl
cmpsl
xorb
mov
icebp
push
rcr
nop
sbb
xlat
cli
push
push
add
mov
and
add
hlt
cmp
subb
or
fnstsw
cmpsb
scas
leave
cmpsl
dec
aaa
outsl
adc
mov
ret
or
outsl
mov
out
sbb
fnstsw
fiadds
mov
fildl
pop
popa
pop
adc
mov
cmp
jecxz
jle
jp
sahf
cwtl
sub
mov
xor
scas
xorb
pop
pop
push
cs
stos
dec
pop
mov
add
sti
mov
add
mov
outsl
aaa
inc
push
daa
icebp
push
xor
insb
or
lret
lds
mov
mov
jg
loop
push
iret
fidivs
aas
in
in
into
push
sbb
dec
enter
jne
fbstp
or
test
cmp
jge
mov
mov
repz
push
aam
cmp
cmp
aaa
insb
in
cli
adc
cmp
lret
clc
add
or
stos
lods
adc
sbb
mov
pop
shlb
in
xchg
imul
fwait
pop
mov
rorl
test
idivb
icebp
xchg
xchg
mov
cmp
nop
mov
ud0
int
lret
mov
lahf
out
push
pop
fisubrl
mov
cmp
pusha
mov
sbb
sbb
inc
fisttpl
adc
cmpsl
fsubl
mov
out
in
rcrb
push
rcl
pop
inc
mov
lea
push
mov
fwait
in
js
mov
jl
push
xchg
jmp
pop
pusha
mov
mov
xor
jmp
mov
out
sbb
push
cli
fsubp
push
lea
cmc
testl
sub
aam
jmp
ds
sti
test
dec
cld
xchg
sbb
lret
inc
and
shlb
xchg
jb
outsb
loopne
add
push
adc
dec
pop
mov
cmpsb
test
scas
scas
sbb
repnz
lahf
mov
adc
fwait
test
add
sub
outsb
sbb
push
and
cmp
pushw
sti
jbe
nop
jmp
pop
mov
xchg
outsl
push
cmp
out
mov
mov
imul
ja
xor
cmp
fadd
xchg
xchg
cs
dec
mov
mov
pop
cmc
cs
push
mov
lret
insb
jl
or
pop
dec
xchg
int3
push
pop
hlt
jecxz
sbb
int3
jp
shrl
jge
cmp
loope
and
pop
adc
dec
and
sbb
hlt
xorb
cltd
test
in
outsb
pop
nop
loope
add
sti
jl
jg
lahf
fstpt
sub
dec
sahf
push
push
lds
pop
mov
pop
mov
out
sbb
fucom
lods
jb
xor
out
adc
and
cmpsb
add
or
lods
in
or
int
aas
pop
ret
call
jnp
cs
lock
jge
dec
mov
subl
cld
lea
cmp
daa
lret
cmpsl
mov
sbb
outsb
popf
pop
adc
fsubs
test
pusha
fdivl
adc
jnp
aad
cmp
andb
jb
pop
in
xlat
repz
je
xchg
inc
loope
dec
pop
jmp
pop
outsl
sha256msg1
mov
xor
jmp
adc
fcoms
enter
fimuls
lcall
pop
mov
sbb
cmpsl
add
xor
cmp
testb
jg
aam
scas
outsb
lahf
xchg
jg
cmc
shlb
xor
xor
sbb
jne
adc
sbbl
xor
sub
or
data16
aam
incl
push
pusha
mov
and
jg
dec
sub
mov
cmpl
lahf
je
xor
gs
jb
faddl
loopne
adc
jecxz
js
xorl
xchg
pop
mov
hlt
ficompl
xchg
sbb
mov
push
jl
fsubr
jnp
push
movsb
mov
cwtl
clc
or
scas
lods
jno
mov
insb
cld
in
in
pushf
push
adc
jb
ljmp
out
stos
inc
sub
sbb
lock
sbbl
dec
push
mov
insb
ja
jge
add
sub
das
insb
test
aaa
pop
pop
push
ds
aaa
push
sbb
cmpsl
and
mov
dec
gs
fadds
test
je
negb
rorb
in
aam
jne
andl
sub
xlat
out
out
xchg
and
fwait
and
ljmp
daa
rcrl
outsb
sbb
into
or
inc
repz
push
fmuls
outsb
daa
int
loop
ss
shlb
fadds
pop
out
dec
scas
xchg
add
adc
int3
lock
out
addr16
shlb
inc
js
mov
jae
pop
arpl
add
loop
test
push
and
and
daa
leave
sbb
nop
pop
leave
dec
add
movsb
xor
push
shr
sbb
call
mov
iret
add
jne
dec
cmp
sub
add
or
rorb
sub
cmpl
subl
pop
and
pop
ljmp
mov
lock
iret
sub
push
or
xlat
jnp
cmp
mov
dec
dec
mov
dec
ljmp
push
mov
dec
jns
clc
test
ljmp
movsl
mov
mov
mov
test
pop
pop
stos
aas
data16
sarb
lahf
mul
push
adc
or
lock
fwait
call
pop
dec
mov
dec
es
sbb
fwait
dec
lods
daa
lds
cmp
adc
int3
xor
insb
sbb
cmp
aaa
es
inc
test
test
aaa
and
cmp
mov
andb
jmp
loope
lret
int3
add
sti
pop
int3
mov
lods
jmp
test
cmpsl
aam
nop
push
stos
sarl
cwtl
fs
adc
lock
pop
add
dec
cwtl
pop
fxtract
and
aas
cmp
repz
mov
xchg
cmp
jnp
push
and
adc
lea
cld
jle
inc
scas
pop
inc
hlt
cmp
int
paddusw
mov
inc
fs
jnp
das
push
sub
push
sub
push
dec
fcomps
clc
movsl
pop
xchg
test
xchg
adc
mov
mov
repz
icebp
pop
mov
pop
lock
ljmp
pop
out
jo
negb
fwait
mov
push
inc
arpl
xchg
faddp
pop
mov
xor
gs
push
out
push
xchg
jmp
pop
addr16
fldl
adc
dec
in
xchg
cltd
cmp
adc
outsl
filds
or
push
jmp
inc
add
jae
add
sbb
les
mov
movsl
lds
push
pop
int3
cmp
ret
call
fdivrl
in
js
pop
call
pop
loopne
and
es
add
mov
rclb
sub
adc
dec
adc
scas
shrb
mull
loop
add
or
fsubs
lret
mov
xor
xlat
int
fs
repnz
sub
dec
rorb
enter
sub
lock
frstor
scas
mov
imull
loopne
lcall
lahf
xchg
mov
sbb
jmp
jae
xchg
xor
add
int3
mov
arpl
sub
jae
mov
xchg
ljmp
and
pop
ret
inc
add
arpl
es
int
jge
leave
int3
lret
shlb
mov
inc
mov
lock
stos
fldt
ret
pop
int3
mov
je
or
es
cmc
jo
add
mov
lods
jb
loope
arpl
fcmovnbe
and
inc
fidivl
out
scas
iret
pushf
or
ret
xchg
jno
adc
inc
dec
add
jle
adc
push
sbb
jp
sbb
and
cmpb
outsl
pop
push
fstps
jb
xor
push
fldl
lods
pop
cmpl
mov
aaa
and
sub
lret
outsb
leave
scas
dec
mov
cmc
jecxz
gs
xchg
scas
push
adc
test
aam
push
popa
aaa
xchg
popf
pop
sub
sbb
push
push
add
inc
sbb
movsb
jbe
imul
cli
cs
fists
adc
push
inc
jne
jl
jmp
add
jae
test
mov
out
in
subb
cwtl
jb
sti
push
sbb
dec
add
int
subl
cmp
bound
xor
jns
jge
dec
adc
sub
pop
sub
int
js
mov
lret
sub
adc
dec
fnstsw
jmp
jle
pushf
xchg
cli
fsubs
stc
addr16
xlat
dec
popf
add
sub
shr
push
xchg
and
cs
jo
cmp
fldl
test
andl
inc
pop
push
dec
cltd
push
and
pop
bnd
out
aam
rclb
test
jmp
popf
mov
jg
stos
or
jb
push
lcall
lret
pop
cmp
lahf
push
fs
fcmovnu
imul
ss
pop
jns
scas
pusha
fdivs
push
sbb
xchg
loop
xlat
add
lahf
pop
fs
inc
hlt
xchg
sbb
jl
inc
arpl
loopne
in
jle
shll
sbb
mov
xchg
xchg
sub
mov
icebp
ds
call
pop
test
pop
leave
dec
sbb
pop
xchg
imul
mov
xchg
mov
pop
aaa
ljmp
dec
pop
mov
sbb
enter
popa
sbb
and
arpl
stos
filds
es
jbe
nop
mov
add
inc
sub
cmp
mov
xchg
jno
movsl
jno
or
push
aam
dec
xchg
and
sbb
add
xchg
jmp
pop
mov
mov
pop
and
inc
sbb
or
mov
and
jb
add
setl
incl
test
addr16
push
cmp
adc
imul
daa
xchg
loop
xchg
shll
adc
insl
push
add
call
lcall
add
ret
ficoms
mov
insl
or
mov
push
pop
sub
shlb
pusha
fmuls
fldcw
cmp
mov
mov
pop
add
dec
insb
sub
fdivrs
inc
and
inc
jle
and
mov
dec
cmp
push
mov
xor
lret
ds
adc
mov
fabs
out
lock
pop
push
mov
or
ss
inc
inc
xor
mov
inc
sbb
jmp
mov
jnp
mov
lods
std
jae
aad
clc
xchg
hlt
data16
in
popf
push
xchg
cmp
sub
js
fsubrs
fnstenv
mov
sub
cmp
out
stc
cli
icebp
cmpsb
push
push
pop
sub
imul
dec
xchg
xorl
xor
jnp
aad
lea
shl
cld
cmc
leave
jo
mov
sbb
mov
js
push
aas
in
mov
int
xchg
repnz
div
pop
popf
pop
imul
movb
inc
insb
mov
add
loop
and
outsl
adc
movb
xor
shl
or
add
xor
out
cmp
imul
pushf
loope
out
push
xor
jb
int3
mov
ljmp
sbb
int
cld
gs
stos
cmpsl
repz
add
rol
xchg
cmp
sbb
ja
cmp
mov
pop
cmpsl
fisttps
imul
and
cmc
clc
lods
or
loop
sbb
shr
jp
cmc
jb
repz
add
sub
cltd
cmpsb
mov
jmp
leave
sbb
xor
icebp
sub
divb
add
mov
pop
dec
xor
xchg
popf
fcmovu
inc
cmp
mov
insl
jge
cltd
in
add
mov
xor
dec
inc
xchg
rorb
xlat
push
call
xchg
mov
into
mov
arpl
daa
adc
push
inc
xor
xchg
push
dec
dec
and
hlt
xchg
test
adc
les
or
or
ljmp
test
push
xchg
scas
test
pop
inc
enter
cmp
push
or
call
lret
sub
test
ljmp
add
loop
mov
adc
pop
and
inc
lea
ret
mov
cld
adc
lret
lret
xchg
push
sahf
movsb
inc
jae
sbbl
imul
sahf
push
pop
fsts
push
pusha
push
in
mov
dec
in
sub
popf
dec
sbb
jg
or
ss
lea
out
pop
loopne
jo
aad
sbb
adc
movsl
dec
lods
loopne
sbb
inc
sbb
dec
jns
std
dec
dec
imul
lds
jge
fldcw
xchg
outsl
out
std
inc
sahf
pop
inc
rol
jle
add
xor
lea
test
xchg
pushf
aaa
lret
xchg
mov
push
insl
xor
xchg
xor
sbb
xor
jp
nop
jae
mov
inc
jne
dec
dec
dec
sbb
mov
sub
push
or
mov
shll
mov
adc
jne
and
test
sub
fwait
orl
movq
fwait
mov
sub
push
testl
sub
pop
sub
popf
jbe
jge
dec
je
adc
sub
popf
or
mov
cs
js
test
xchg
push
sbb
mov
push
les
aaa
insl
cltd
add
mov
cli
lods
ficoms
push
je
mov
sub
jo
xor
push
shr
dec
dec
out
dec
cmp
lods
nop
popw
ret
fdivrl
xor
aad
nop
ja
scas
xor
inc
adc
push
or
or
repz
jg
push
xchg
mov
add
jne
pop
adc
inc
xor
and
push
int3
xchg
aas
lret
or
repnz
outsb
ds
cmp
mov
data16
cmp
cwtl
xchg
mov
subb
jb
push
mov
jne
cmpsb
inc
sbb
ret
dec
flds
sarl
mov
lret
mov
lds
fistps
mov
push
cmp
shll
jp
add
sahf
mov
movsb
fcmovbe
xor
cmpsb
test
je
popa
add
jp
cli
fiaddl
xor
negl
mov
shlb
cs
xor
mov
push
shll
mov
cwtl
or
cs
popf
stc
xchg
xor
cmp
lret
mov
ficomps
mov
cltd
nop
insb
jbe
jo
dec
ja
xor
lahf
mov
inc
jnp
mov
fadd
jge
cmpsb
js
cmpsl
push
mov
sbbl
cmp
cmpsl
idiv
fwait
cwtl
cmp
sub
pusha
fidivrl
xor
clc
mov
stc
add
push
lahf
xchg
imulb
movsl
cli
movsb
int3
into
jle
dec
and
jecxz
adc
cwtl
jbe
xor
loopne
ror
nop
xchg
movsl
sbbl
mov
ss
xor
stos
rcr
mov
test
inc
jbe
clc
adc
sub
mov
test
push
fwait
pusha
dec
pop
lock
gs
push
rcll
aas
xchg
aam
cs
lods
icebp
mov
enter
ja
sbb
sub
and
rdtsc
stos
add
scas
dec
sbb
xchg
out
je
rcrl
cmp
movl
pop
ficomps
lret
icebp
sub
popf
sbb
test
clc
cltd
test
icebp
cmc
xor
popa
int3
or
enter
lcall
jno
xlat
out
pop
cmpsb
push
stos
xchg
out
loop
sub
push
sbb
dec
cli
jae
mov
jg
and
and
add
mov
mov
and
pushf
mov
dec
call
and
pop
repz
lock
cmp
addr16
mov
mov
pop
mov
mov
sahf
cmp
mov
arpl
jb
push
inc
mov
ja
xchg
push
bound
aas
adc
aaa
sbb
lcall
dec
jg
push
jmp
sahf
mov
xchg
hlt
sub
xchg
jg
xor
icebp
mov
xchg
adc
add
cmpsb
scas
sbb
mov
xor
inc
repnz
sub
daa
rcl
push
dec
sbb
jno
jle
sti
popf
divl
mov
xor
call
in
mov
mov
enter
mov
xchg
sbb
into
loop
xchg
call
jge
jecxz
lret
mov
daa
cmp
call
sbb
repz
or
sub
add
xchg
jg
test
adc
daa
push
jbe
jae
fidivrs
jbe
jns
daa
pop
mov
jbe
cwtl
cltd
outsl
ds
inc
mov
test
dec
adc
lret
xor
mov
mov
jmp
mov
incl
sarb
or
mov
adc
xor
outsb
sbbb
test
fisubrs
pusha
mov
in
xor
loop
xchg
jo
enter
xchg
call
pop
jl
jecxz
mov
cmp
aam
jne
adc
pop
inc
pop
cmp
xor
mov
mov
ja
push
inc
test
imul
ds
mov
mov
inc
add
jnp
xor
mov
addb
jno
jne
push
and
fs
cmp
xchg
roll
jbe
xor
loop
iret
add
mov
cmp
mov
hlt
add
stc
sub
aas
inc
enter
add
negb
lds
jg
pop
sarb
inc
mov
or
out
jmp
fs
mov
pop
push
pop
cmpsb
push
faddl
or
lret
xor
push
mov
push
push
pop
stc
out
mov
arpl
pop
mov
nop
mov
shlb
dec
xlat
sarl
test
sub
push
xchg
ja
fcomp
iret
fdivs
cmpsb
negb
xor
xchg
loope
repnz
call
aaa
std
dec
subl
jle
les
subl
out
push
dec
sub
jle
shrb
arpl
jmp
pop
mov
and
ljmp
fs
mov
mov
push
das
js
loope
xchg
and
movsb
repz
lcall
in
lret
pop
jno
xor
rolb
jle
sub
add
push
cmp
dec
imul
add
jecxz
arpl
dec
inc
sahf
and
jle
xchg
sahf
inc
out
xor
dec
shrl
mov
lock
sbb
dec
dec
pushl
mov
pop
cmpsl
pop
jae
rclb
mov
xchg
xchg
and
add
divl
fwait
daa
loope
and
mov
imul
jecxz
ror
lret
push
cmp
decl
dec
sbb
mov
xchg
jp
cmc
push
stc
enter
mov
mov
sarb
add
cmpsb
sbb
sub
sub
xor
sbb
mov
gs
out
cmp
push
sub
icebp
mov
sbb
add
ja
js
mov
mov
dec
in
jg
push
pop
lret
dec
pop
ss
cmp
cs
add
hlt
fucomp
loop
loope
and
and
jl,pt
cld
aaa
shrl
pop
jge
loopne
cs
mov
data16
mov
cmp
push
icebp
mov
sub
mov
out
lss
repnz
inc
ret
pop
and
dec
add
out
mov
add
push
push
in
imul
sahf
mov
push
into
aaa
mov
icebp
pop
mov
lret
jl
jge
les
adc
sub
movsl
into
pop
xchg
popa
cmc
fsubrs
sbb
dec
roll
and
inc
inc
inc
add
cli
loopne
aam
cs
xor
xchg
aam
dec
imul
xor
pop
fwait
lods
repnz
stos
pop
dec
sbbb
dec
mov
daa
sub
int
push
xchg
stc
or
xor
pop
lock
and
popf
and
xor
nop
push
add
cwtl
xchg
dec
dec
das
fwait
inc
nop
data16
xchg
call
xor
mov
scas
dec
rcr
popa
pusha
or
orl
pushf
ja
mov
mov
es
dec
push
or
test
adc
fsubp
jne
adc
fwait
push
sti
out
and
out
xchg
cwtl
jmp
cmpsb
sub
out
pop
add
inc
mov
adc
int3
sub
xchg
fadds
sub
push
std
cmp
fisubl
mov
push
xor
int
jmp
mov
or
or
fs
mov
dec
dec
out
xor
std
pop
mov
fbld
call
fiadds
ja
or
aad
aam
xchg
cli
pushf
jnp
jo
fs
aas
xor
or
adc
mov
sub
in
xchg
xchg
aaa
jb
fstpt
fdivrl
jge
jg
mov
mov
in
enter
arpl
adc
sarl
lods
sbb
je
jl
loop
mov
jae
and
out
cmp
xchg
and
add
mov
enter
inc
dec
or
sub
and
and
mov
in
add
addr16
loop
fistps
repz
jl
jns
cltd
mov
lea
cltd
in
inc
xchg
subl
inc
adc
stos
sti
xor
cmpsl
cmpsb
adc
jge
out
arpl
call
add
into
lahf
subl
mov
xchg
and
cmp
adc
lds
and
popl
out
add
xlat
xchg
aas
lock
mov
test
adc
push
stos
mov
inc
xchg
popf
scas
add
and
ret
sbb
out
aam
push
mov
sbb
shr
mov
insl
adc
outsl
cli
aad
aad
std
or
push
push
inc
inc
je
and
mov
shrl
xlat
pop
cs
mov
push
xchg
adc
fidivs
push
mov
mov
pop
lcall
mov
inc
mov
cmpl
sti
leave
adc
xchg
icebp
push
fcom
sti
test
flds
mov
or
jno
sarb
mov
jge
repnz
mov
jle
mov
sbb
mov
das
int
push
and
fsts
ljmp
push
cmc
pop
mov
adc
movsb
mov
out
lods
dec
push
movsl
or
jno
jae
fldt
call
add
and
and
push
out
sub
xor
jl
sti
test
mov
pop
enter
mov
icebp
test
xorl
scas
or
insl
call
mov
arpl
aam
sarl
mull
or
sub
lret
jbe
dec
adc
mov
jmp
adc
push
clts
dec
sub
mov
fstpl
addl
sbbb
in
mov
jmp
pop
fiaddl
add
out
sbb
cmp
inc
inc
inc
mov
adc
xchg
push
mov
xchg
and
and
inc
imul
test
pop
sahf
xor
data16
shlb
aas
or
sahf
adc
enter
xchg
lret
or
es
mov
sti
jnp
in
xchg
adc
xor
or
push
mov
push
lods
stos
test
stc
push
or
mov
int
out
push
lcall
jmp
repnz
ljmp
mov
add
inc
cmpsb
sub
mov
mov
test
push
into
mov
imul
dec
setne
lret
lahf
aaa
pop
xchg
sbb
stos
shlb
add
mov
jl
pusha
ffree
push
dec
or
cmp
ds
int
bound
rdpmc
sub
int3
stos
pusha
pop
mov
negb
push
xor
daa
rolb
lahf
jecxz
inc
xchg
ljmp
push
fimuls
shrl
sub
xor
sub
cmc
std
ret
daa
subl
dec
fs
fidivrs
adc
mov
push
add
fistpl
mov
sub
loopne,pt
dec
cmp
out
lds
aam
push
addr16
int3
stc
sub
dec
daa
stos
dec
add
mov
jle
stos
and
bound
stc
sbb
ss
into
les
and
rcr
mov
pop
push
sbb
imul
sub
sbb
frstor
add
sbb
popa
mov
mov
out
jo
and
movsl
mov
dec
popl
and
outsb
xacquire
push
add
je
out
pop
arpl
sub
mov
imulb
push
or
lds
mov
outsl
cli
shr
les
fisubrs
sbb
sub
bound
mov
icebp
js
pop
rcr
xchg
stos
or
addr16
jnp
and
pop
fmull
clts
lret
loop
dec
dec
enter
leave
cs
push
ljmp
imul
mov
cwtl
stc
dec
pushf
test
dec
sub
nop
sub
leave
and
sahf
xor
add
adc
fistpll
sbb
push
add
xchg
outsl
jnp
push
pop
mov
scas
or
jle
push
xor
or
mov
pop
sbbb
ror
mov
xor
rorb
and
movsb
cmp
cmc
xchg
jbe
or
push
cmpsl
outsl
repnz
xchg
cli
push
dec
aaa
popf
imull
mov
lock
sub
sbb
inc
add
jmp
je
xchg
sub
aaa
into
fsubs
mov
pop
lea
testb
fs
xchg
and
adc
push
test
xchg
cmpsl
xor
es
es
and
testb
mov
jmp
push
adc
insl
lcall
sbb
push
xor
cs
lret
call
cmp
push
mov
mov
outsb
ret
popa
mov
push
mov
outsl
lea
pop
xor
iret
aas
test
arpl
xchg
ret
jge
mov
jg
xor
jg
rcr
jo
sbb
cmp
lea
std
adc
jb
repz
sbb
and
and
lock
sahf
push
test
or
xchg
test
fs
mov
leave
movsl
or
and
sahf
movsl
xor
add
push
scas
xor
lods
mov
imul
ror
cli
inc
call
leave
and
ss
and
jne
aaa
jae
loope
cmp
push
adc
pop
sbb
inc
decl
mov
pusha
mov
fcoml
xlat
in
push
and
xchg
and
dec
ds
xor
outsl
test
dec
sbb
rolb
call
std
movsl
xchg
sub
adc
sbb
stc
imul
js
mov
sbb
sub
lods
ja
sbb
mov
hlt
xchg
mov
lret
and
out
inc
push
jle
test
pop
add
les
xor
push
scas
loopne
mov
popf
and
stos
cli
xor
jns
sub
out
adc
xchg
cmp
inc
loope
adc
loopne
jmp
es
das
xchg
cmp
push
mov
pushf
scas
push
sbb
fmull
dec
adc
pop
and
pop
iret
mov
mov
pusha
push
mov
test
aaa
loop
pop
jnp
sbb
aas
xor
jmp
in
lahf
sub
pushf
lods
push
push
cmp
ss
scas
loop
xlat
stc
cmp
rep
ds
sbb
push
jge
jno
cld
into
shlb
loop
addr16
xchg
fsubrl
enter
fsubr
mov
xor
mov
dec
add
cvtpi2ps
lret
push
sbbl
ficoms
bound
add
dec
and
pop
add
fndisi(8087
lret
sub
cmp
lret
test
cmp
pop
mov
cltd
cmc
stos
push
sti
dec
mov
mov
mov
lock
xchg
cli
sahf
into
sbbl
sbb
push
es
jbe
mov
mov
cmc
mov
dec
test
mov
jg
call
cld
pop
aaa
dec
sub
pop
lock
in
and
jg
mov
iret
xchg
cmp
sub
adc
pushf
std
subl
mov
add
and
lods
aad
fldt
add
lods
pop
dec
inc
push
add
mov
or
push
push
cmpb
sti
ficompl
inc
mov
repz
enter
ja
cltd
jg
mov
inc
leave
mov
inc
movsb
decl
mov
lret
add
sbb
ljmp
aad
jb
fiadds
inc
jnp
ljmp
mov
ljmp
out
add
cld
stos
and
aad
mov
out
jg
add
psubw
mov
jl
mov
add
loope
xlat
sbb
adc
push
ss
pop
das
xor
shll
cli
adc
xchg
dec
push
xor
in
pusha
xor
pop
or
push
pop
int
dec
roll
and
xor
push
dec
daa
stos
fstpt
stos
out
jl
fucomip
xchg
add
mov
mov
jg
lods
call
shlb
push
mov
push
push
cmp
dec
outsb
xchg
movsb
lcall
jnp
leave
test
push
addr16
cmp
jns
jo
ljmp
fnstenv
and
rorb
or
lahf
aas
test
cltd
jbe
insl
jmp
cmp
sbb
movsb
xchg
mov
outsl
mov
in
mov
lret
cmp
lcall
cmp
xchg
gs
and
aam
sub
add
mov
int3
test
inc
xor
into
ja
scas
mov
std
jecxz
inc
lahf
dec
aad
xchg
js
movsb
stos
mov
aaa
mov
test
in
fnstsw
cwtl
push
and
cwtl
mov
inc
xor
push
lods
adc
pop
in
mov
imul
mov
dec
aaa
hlt
mov
stos
cmc
loopne
arpl
xchg
jne
mov
push
push
jne
mov
data16
rcrb
cmp
and
mov
xchg
push
sbb
in
call
sar
mov
jnp
cmp
sbb
adc
xlat
shlb
push
jbe
stc
in
pop
fcomi
shlb
inc
add
pop
jns
xchg
and
add
xor
push
cld
sti
int
rol
and
cmp
hlt
pop
arpl
push
cmp
jae
je
shlb
fbstp
lahf
out
sbb
fucomi
sbb
movsl
fadds
outsb
mov
pusha
ret
mov
push
inc
lods
inc
js
mov
cltd
dec
test
cmp
nop
adcl
xchg
loope
cmpsb
add
filds
mov
sub
loope
cwtl
mull
and
mov
lcall
pop
pop
adc
jb
icebp
notb
xchg
dec
stc
ror
js
das
test
and
dec
push
es
test
imul
adcl
ja
call
or
push
or
mov
xchg
push
jle
sahf
andb
testl
jmp
mov
push
xor
adc
pop
inc
mov
xor
shll
sti
gs
sub
and
cmp
shll
mov
fsubl
jmp
addb
incb
sub
ret
xchg
jg
cmpsl
gs
jl
pushf
inc
lahf
in
jae
vfrczps
jae
rolb
jmp
xor
es
ja
pop
out
cmp
movsl
mov
lret
add
imul
mov
inc
xchg
rcrb
jp
sbb
xor
clc
pop
mov
mov
es
int3
pop
fs
pusha
enter
jb
std
add
test
aas
pushf
and
fiaddl
cmc
add
sbb
fisubrl
test
cmp
lcall
jp
adc
shll
repz
lcall
mulb
xchg
pop
mov
xchg
and
sbb
ljmp
and
jl
fmul
mov
cwtl
add
dec
pop
cmc
add
pop
arpl
cmp
push
clc
jns
cs
nop
mov
sbbl
in
xchg
fisubs
cmc
jmp
inc
mov
test
imul
aas
fstpt
shlb
pushf
bound
je
dec
adc
ja
loopne
sub
xor
sbb
jmp
stos
push
movsb
inc
push
movsb
xor
push
xchg
sub
cmp
imul
push
les
cmp
push
inc
popl
pop
pop
addb
ret
aas
xor
or
dec
inc
mov
jl
push
adc
cmp
enter
mov
sub
negb
sub
xchg
cmpsl
es
ja
jb
ss
sbb
push
lods
mov
mov
add
sub
sti
ficoml
jo
outsl
das
push
cmp
xchg
inc
mov
pop
mov
adc
loope
xchg
and
loope
push
outsl
mov
push
sbb
rorb
adc
jp
jle
pop
outsb
inc
adc
nop
fwait
lret
xlat
ja
adc
stos
andl
mov
jge
add
mov
jecxz
jb
or
clc
mov
pop
jae
ds
jg
or
add
mov
inc
ficompl
jno
in
outsl
push
mov
push
popf
pop
fisttps
movl
cmp
stos
cs
js
adc
or
sahf
shr
xchg
loopne
cmp
mov
loop
outsb
jb
add
stos
rolb
enter
inc
xor
movsl
fsubr
mov
jns
sarb
push
int
add
xchg
outsb
aaa
pop
jg
std
lds
lahf
inc
inc
mov
cmp
out
mov
or
xor
jl
lds
nop
xchg
loop
lods
mov
stc
sbb
adc
js
das
mov
push
cs
bound
dec
sahf
mov
xor
mov
cmp
xor
xchg
ljmp
jmp
and
outsb
or
mov
in
dec
mov
nop
jne
adc
cmp
jp
jbe
xlat
imul
push
enter
int
rolb
add
mov
xchg
adc
fnstsw
pop
ljmp
dec
adc
test
stc
notl
pop
scas
jp
mov
clc
mov
push
and
mov
arpl
mov
sbb
adc
dec
jp
sbb
pop
mov
das
pop
cmp
adc
dec
mov
popf
inc
mov
cmpsb
jno
pop
adc
push
imul
andl
nop
mov
aaa
imul
sub
testl
push
dec
jo
cld
fdivr
out
xchg
fimull
or
sti
loopne
and
daa
loopne
mov
clc
pop
jno
cmp
fcompl
jae
jns
mov
outsl
lock
mulb
popf
adc
in
push
mov
push
add
jb
pop
adc
pop
and
data16
test
cli
xor
dec
and
mov
mov
outsl
outsb
pop
cli
aad
aas
shl
xchg
nop
cmp
ss
dec
cmpsl
ret
pop
push
out
mov
fildll
ja
fs
insl
mov
pop
sbb
lcall
cmp
and
lock
ja
gs
jnp
js
ret
daa
shr
xchg
out
fidivrl
in
scas
test
push
sahf
ficoms
push
jle
fdiv
arpl
iret
adc
mov
xor
roll
mov
lods
loopne
push
insb
mov
in
shll
in
sbb
ficoms
loope
inc
fsubs
mov
add
cmp
dec
imull
mov
sahf
cmp
sbb
pusha
pop
into
adc
jno
daa
sahf
sahf
cmp
fdivl
divb
xor
lods
dec
push
icebp
add
push
rolb
mov
shl
push
mov
repz
outsl
lea
adc
mov
inc
xor
fmuls
jnp
mov
imull
insl
es
aaa
and
sub
clc
push
ror
clc
addr16
fucompp
in
inc
cs
and
jb
test
hlt
movb
and
sbb
iret
lahf
test
lds
fs
adc
dec
mov
cmpsl
pop
sbb
pop
mov
in
out
pop
inc
sbb
imul
test
add
aad
fsubl
add
xchg
mov
push
mov
movsl
leave
outsl
jge
repnz
test
and
mov
jmp
sub
imul
repz
cmp
movsl
lea
outsb
or
inc
pop
mov
sbbl
mov
lcall
lret
inc
mov
xchg
in
pop
pop
bound
sbb
mov
sub
mov
stc
pusha
pop
out
lds
nop
fsts
je
dec
push
pop
shrb
pushf
sbb
inc
in
pop
push
mov
push
fwait
pushf
js
out
js
sub
sahf
call
fwait
jo
mov
inc
cltd
frstor
push
push
lods
jbe
addr16
pop
dec
push
test
mov
xor
add
vpunpckhdq
je
fidivs
fs
inc
mov
mov
lahf
push
lock
sbb
lahf
gs
pop
xchg
int3
pop
pop
lds
mov
ds
outsl
xchg
out
adc
pusha
or
ss
mov
rclb
mov
call
or
sbb
cmpsl
pop
sbb
mov
and
add
stos
call
push
je
sbb
leave
sbb
gs
js
dec
inc
addl
add
insb
xchg
sbb
sbb
fdivs
lcall
push
fmull
ror
ret
fsubp
xor
mov
add
or
arpl
aad
rorl
sub
fs
arpl
lret
mov
insb
bound
xchg
mov
aam
mov
sub
ja
scas
pop
push
hlt
add
cld
test
mov
outsb
repnz
mov
and
inc
xorb
push
lret
fisubs
sbb
push
mov
push
push
test
adc
jecxz
hlt
xchg
and
repnz
ret
and
sti
jle
jb
cmp
cmp
push
jmp
out
call
fisubs
movsl
testl
leave
add
outsb
adc
mov
pop
mov
imul
gs
push
inc
sbb
mov
inc
mov
jmp
out
pop
cld
jl
leave
in
push
addl
std
sahf
xchg
mov
sahf
pop
not
push
inc
insb
mov
xlat
mov
out
dec
movsl
xchg
aam
subl
xor
sbb
cmp
jmp
gs
pop
scas
jbe
shr
mov
mov
mov
sub
mov
test
sahf
jne
pop
in
cmp
sub
lods
cmp
leave
out
and
outsb
int
sarl
in
ljmp
sahf
inc
stos
dec
sbb
xacquire
xchg
jns
push
add
push
in
std
aaa
push
add
pop
jl
sub
lock
outsb
test
jle
sbb
popf
add
jns
lods
and
ret
pop
dec
xor
in
sub
je
lock
testb
cld
inc
lods
push
mov
pop
icebp
sub
sub
xchg
addb
sbb
push
int3
jp
lret
xor
mov
inc
add
icebp
pop
loopne
addr16
popf
cmpsl
fbstp
jmp
mov
fwait
imul
aas
addr16
push
or
mov
insl
test
and
sub
fcmovnu
outsb
jns
dec
mov
mov
xchg
push
jae
xor
and
push
lahf
shrb
fldenv
and
mov
push
ret
jae
jne
push
fcmovb
lcall
mov
insl
mov
into
and
cmp
add
ds
sbb
lods
jo
pop
and
data16
cmp
jp
mov
insb
mov
in
inc
jecxz
adc
xchg
fs
mov
mov
add
fsubl
std
cli
fmul
xchg
mov
sbb
insb
out
inc
mov
ficomps
aam
dec
mov
lcall
ffreep
sahf
scas
adc
outsl
mov
loopne
cmc
stos
jge
pushf
jg
movsl
test
int3
test
jns
xchg
repz
pop
stos
sub
and
aaa
ds
repz
inc
jge
and
xor
loope
imul
jo
outsl
aas
pop
lret
mov
insb
fprem
cs
inc
push
stos
add
mov
divl
stos
add
enter
popa
inc
repnz
add
cmp
insl
jg
xor
sub
xchg
xorb
mov
stos
adc
addr16
cmpsl
and
jge
push
insl
or
mov
lods
in
cld
xchg
dec
mov
pop
cmp
add
inc
inc
push
int
and
cmp
lea
cwtl
in
adc
and
sbb
imul
iret
cmp
scas
lcall
loop
cmp
push
xchg
mov
inc
cmc
mov
jg
add
jl
jge
lret
pushw
sahf
lds
nop
inc
cmp
jno
push
mov
pushl
pop
sbb
or
dec
mov
mov
push
adc
sbbb
nop
dec
outsl
pop
loope
push
pop
cs
jp
xchg
mov
in
xchg
jae
cmp
repnz
test
or
mov
xorl
in
sbb
mov
call
push
mov
xor
xchg
call
push
rcrl
test
sub
dec
out
cmp
xor
imul
movsb
fwait
push
pusha
je
popa
pop
pop
mov
out
fimuls
mov
cwtl
repz
movsb
sbb
xchg
pop
push
inc
pop
mov
sbbl
inc
movsb
push
push
push
adc
cmp
int3
adc
insb
into
pushf
gs
and
and
lock
hlt
in
add
mov
mov
jb
inc
cmp
xor
data16
cmc
sbb
inc
push
pusha
ret
xorl
sti
fsubr
add
cs
sub
add
stos
gs
adc
shl
aas
xor
mov
shrl
test
movsb
jae
adc
clc
xor
addb
pop
and
mov
ret
jge
mov
les
fstpt
push
test
lahf
push
xor
rcrl
mov
ret
xor
dec
inc
xor
and
testb
or
ljmp
lcall
fyl2xp1
fsin
cmp
rorb
mov
jne
mov
push
dec
or
adc
inc
repnz
in
inc
enter
or
mov
mov
and
push
pop
hlt
add
shrl
inc
sbb
inc
frstor
adc
jnp
fcom
inc
repnz
notl
adc
cld
jnp
mov
sbb
sub
lret
add
test
cmp
adcl
arpl
xor
cmp
push
pop
cld
test
in
jge
cltd
jmp
xchg
and
pop
mov
push
inc
push
mov
fwait
mov
mov
push
into
cmp
mov
sbb
test
std
dec
mov
je
xor
sahf
adc
jae
dec
jns
xchg
dec
pop
fldenv
test
cwtl
add
jl
dec
aad
imull
push
mov
jp
shl
insl
addl
adc
pop
lret
scas
stos
and
iret
or
sbb
int3
test
jbe
cmp
call
cmpsb
std
fs
loop
jb
out
inc
inc
icebp
mov
pop
mov
fists
mov
push
and
cmp
enter
mov
mov
out
dec
or
mov
cmpsl
in
adc
push
into
aas
test
bound
inc
mov
enter
hlt
in
enter
add
js
dec
stos
int3
cmpsb
shrb
inc
and
in
pop
ja
inc
cmp
push
sarl
mov
mov
mov
ja
xor
jge
out
push
xchg
cli
sub
pop
dec
movsl
pop
ja
and
daa
sbb
movsb
nop
stc
loope
divl
push
rclb
cli
call
jnp
push
cmpsl
jl
nop
jns
mov
bound
pop
outsl
fistpll
xor
pusha
in
repz
notb
sub
dec
lahf
popl
push
shl
xor
cmp
sub
aad
add
outsb
icebp
jnp
pop
jbe
xor
and
cmp
push
sbb
xor
and
pop
or
add
aam
mov
cmpsl
popf
or
push
mov
or
in
ror
outsb
sbb
cmpsb
adc
lds
mov
and
enter
adc
cwtl
std
mov
cmp
jbe
jge
pop
xor
jg
fsubs
and
stos
jnp
or
or
mov
push
movb
jno
sbb
mov
cltd
push
sbb
aaa
or
cmpsl
add
aad
jmp
xor
mov
pop
and
ret
push
add
loope
test
movsl
jne
ret
int3
xchg
mov
mov
sti
fnsave
xor
pop
movsb
xor
push
test
sbb
mov
out
hlt
jnp
add
out
insl
cld
fistpll
scas
into
cli
bound
js
lahf
mov
xchg
out
shl
cld
negl
xor
pop
orb
rorb
outsb
mov
add
cwtl
xor
jo
out
pop
push
lods
xchg
jmp
or
cld
or
dec
adc
stos
sub
push
movsb
and
push
sti
popa
jmp
in
movsl
pop
rcl
mov
jb
cld
and
lret
out
lret
call
cmp
inc
pushf
xchg
imul
repnz
sbb
cmc
lds
push
sub
xor
xchg
mov
pop
jno
inc
mov
mov
inc
jle
mov
fucomip
out
stos
cwtl
sbb
out
jo
rcrl
mov
add
iret
mov
bound
and
ds
mulb
jg
mov
and
mov
jae
lcall
xchg
and
sbb
dec
dec
sbb
xlat
lods
xor
inc
push
insl
fidivrl
mov
lods
push
in
ss
mov
test
dec
xchg
mov
sub
and
pushf
push
xor
xchg
jmp
sbb
push
xor
cs
addb
adc
and
and
adc
fisubl
and
pop
js
rolb
es
ds
inc
movsl
or
mov
inc
cmp
mov
mov
push
sbb
leave
inc
pop
pop
push
repnz
push
mov
mov
ja
mov
pop
cmp
adc
mov
dec
mov
int
push
or
cmp
push
mov
and
dec
sub
mov
fldcw
nop
stc
sub
aam
jns
dec
adc
pop
inc
shr
pop
or
mov
shl
mov
les
loopne
jp
pop
leave
xor
ja
jge
rcrl
fisttpll
xchg
jmp
push
dec
dec
cmpsl
and
cmp
stos
push
adc
inc
mov
jae
clc
jne
shlb
repnz
pop
push
add
adc
xchg
stos
clc
mov
adc
add
add
lods
cmp
and
data16
and
sbb
add
hlt
and
cmpb
mov
jnp
rclb
cmpsb
andb
lret
int
mov
xchg
pop
sbb
dec
sbb
add
lea
or
rorb
inc
leave
fstps
inc
clc
adc
arpl
cs
in
push
pop
push
sbb
daa
cmp
sbb
mov
dec
inc
es
or
adc
cmp
shrb
jnp
imul
nop
lods
and
pop
lods
mov
rorl
cmc
mov
cmp
testb
rol
xchg
out
shl
gs
xor
adc
sahf
jg
mov
mov
or
jae
int3
inc
paddd
leave
in
cwtl
jecxz
inc
leave
jp
ret
je
mov
adc
scas
leave
stc
out
aaa
and
ss
xor
movsb
in
push
pushf
sub
push
flds
push
mov
inc
jp
inc
pop
js
pop
push
add
sbb
pop
iret
lock
adc
ds
movsb
fisttpl
dec
cmp
and
mov
shll
iret
push
icebp
push
inc
in
push
or
sub
jnp
jecxz
rcll
js
pop
jb
aam
bnd
cmp
sbb
fisubrs
cmpsb
or
out
xchg
xchg
cld
fistpll
mov
cs
lea
aam
sub
mov
inc
scas
mov
mov
jle
mov
adc
icebp
loop
adc
popa
sti
jl
jg
cs
cmpb
xor
lea
iret
popa
pop
leave
test
jne
push
pop
popw
push
pop
rorb
cli
in
insl
jge
insl
dec
mov
scas
js
ret
mov
pop
xchg
adcl
cmp
popa
mov
shlb
fdivrs
fwait
lret
test
notl
arpl
out
mov
mov
popa
cmpsl
movsb
loope
and
ja
sub
pop
push
outsl
or
sub
fwait
mov
adc
mov
or
je
repnz
xchg
int3
imul
dec
push
popf
nop
mov
pop
dec
test
cmp
scas
push
pop
xchg
mov
and
es
add
cmp
adc
jmp
or
push
dec
orl
push
popl
dec
fsubs
sbb
outsl
push
add
inc
xor
jb
cli
inc
nop
fs
jne
mov
pop
sbb
mov
cwtl
add
inc
inc
dec
ret
sub
xor
inc
lock
call
or
push
fists
xchg
cmp
xor
adc
inc
mov
add
int3
imul
int
and
dec
push
cmp
mov
jbe
adc
inc
inc
pop
cmp
push
or
push
ret
cli
or
xor
sub
xchg
dec
inc
jo
mov
lods
ret
xchg
jmp
imul
jbe
idiv
or
sub
lods
icebp
jae
jbe
test
test
movsl
daa
test
mov
and
sbb
fs
daa
int
push
mov
adc
std
xchg
into
dec
nop
imul
aas
or
addr16
data16
stos
lods
push
sub
scas
fisubrl
fdivrp
xchg
mov
and
sahf
xchg
add
pushf
mov
clc
inc
add
daa
inc
lods
xchg
xchg
sahf
sub
xchg
enter
gs
addr16
rolb
add
fwait
lods
cmpb
test
or
mov
and
outsl
push
mov
daa
sti
in
test
adc
dec
xchg
add
aam
jno
jge
sbb
shl
xchg
testb
fcomi
or
dec
sbb
fdivs
mov
sbb
jle
inc
pop
ljmp
sub
inc
arpl
jge
sub
mov
inc
test
mov
xchg
jnp
outsb
push
or
cmp
or
add
popa
out
pop
or
divl
xlat
sbb
test
adc
lcall
fmulp
notb
shrb
lods
sub
xchg
rcr
call
ljmp
mov
xchg
jle
hlt
push
shll
sahf
xchg
xor
pop
cmp
lock
pop
movsb
push
je
lret
outsl
adc
sub
imul
adc
sti
cli
mov
pop
push
dec
aad
outsb
push
std
pxor
sbb
push
scas
mov
gs
rcrl
out
pusha
pop
out
xor
or
bound
sub
sub
push
out
xlat
mov
or
sti
cwtl
ss
pop
lods
lds
mov
jg
fcom
push
sub
pop
add
ljmp
lods
fwait
inc
jo
pop
cmp
aaa
sub
out
sub
sub
jno
repnz
push
mov
add
int
stos
add
xor
lret
xor
outsb
mov
xor
cs
mov
push
jmp
jnp
shlb
lahf
fsubs
mov
mov
cmc
lods
imul
test
enter
rclb
pushf
add
jmp
xor
fisubs
jne
and
inc
aad
mov
inc
sbb
pop
repz
gs
xchg
xor
jne
cmc
cmp
jmp
add
push
jge
jo
and
into
xor
out
daa
or
cli
xor
mov
lods
or
add
imulb
jle
xchg
xor
lds
xor
xlat
lea
mov
lods
imul
js
ljmp
xchg
int3
mov
adc
and
mov
in
or
gs
int3
ret
aam
ja
jno
lcall
mov
jne
push
jl
imul
mov
mov
xor
mov
or
or
test
std
xor
fwait
addl
ljmp
or
popa
cmp
fs
pushf
les
lcall
je
mov
xor
in
shl
imul
adc
inc
and
mov
cmp
sbbl
das
jns
xchg
fwait
rorb
mov
add
sti
add
fisubl
iret
mov
jbe
inc
xchg
sub
insb
enter
jns
pop
add
push
loope
out
xchg
mov
xchg
les
xor
cmp
sub
ffree
ds
dec
pop
or
hlt
arpl
call
sub
sub
fimuls
nop
and
pop
scas
fcomp
push
nop
adc
rcrb
cmp
insb
adc
adc
mov
dec
in
push
repz
lret
mov
into
in
ret
lcall
lea
cmpsl
call
dec
sahf
dec
lock
lock
mov
jle
insb
in
jo
xor
ja
lret
mov
iret
xor
xor
dec
adc
xor
out
xor
lcall
mov
cmp
sub
xor
jnp
add
pop
push
adc
imul
push
jmp
inc
mov
hlt
mov
fs
aad
dec
mov
ja
or
xchg
out
lahf
nop
incl
scas
mov
out
lret
xchg
ds
push
bound
cld
and
jno
loop
push
mov
inc
xchg
gs
out
dec
mov
xor
xor
cltd
lahf
inc
mov
cmp
mov
roll
xor
jbe
mov
and
bound
xchg
icebp
mov
scas
mov
xchg
loop
mov
in
push
mov
roll
js
int3
jecxz
adc
lret
out
int3
inc
icebp
sub
stos
adc
rcrb
adc
and
into
fcomp
in
ljmp
iret
lret
push
mov
in
inc
dec
xlat
in
ja
fisttpll
aas
xor
out
int
pop
repnz
data16
popa
mov
mov
push
cmp
out
std
daa
push
xor
cmp
movsb
rcll
mov
push
loopne
popa
jae
jmp
xor
mov
sbb
jle
add
fisttpl
xor
and
aas
cmp
in
iret
mov
inc
add
and
lahf
notb
xchg
inc
mov
mov
repz
add
fdivl
jnp
jo
fdivs
xor
testl
mov
addr16
fs
xor
scas
jnp
ja
inc
jnp
xor
negl
push
imul
dec
es
sti
cmp
int
daa
movb
out
mov
mov
lret
dec
pop
or
mov
roll
xchg
insl
repnz
or
pop
mov
imul
mov
xchg
and
ret
hlt
cmp
add
cmp
into
jl
pop
pop
cltd
cld
roll
adc
xchg
pop
stos
push
repnz
stos
ret
js
ret
out
movl
loope
in
repnz
mov
sbb
ret
pop
sbb
xchg
mov
lahf
lea
adc
addb
rcr
negb
xor
dec
in
xrelease
sbb
fisubrs
out
fldt
xchg
lahf
jno
js
xor
inc
gs
push
in
push
mov
pop
icebp
jae
fdivr
push
or
pop
out
inc
cmpsb
lds
shrl
inc
xor
cli
ret
mov
aas
push
jmp
fisubrs
pop
or
xchg
bound
mov
xchg
fldt
sub
arpl
aad
cs
test
test
out
data16
jne
xchg
rcrb
mov
inc
lea
data16
inc
test
cmpsl
cmp
lcall
sbb
pop
cmc
scas
pop
sub
pop
mov
lock
loop
add
addr16
in
icebp
add
sbb
fimull
cltd
dec
jno
dec
stos
mov
gs
aaa
fisubs
dec
pop
cld
insb
pop
test
pop
aad
int3
sbb
aam
int3
jmp
hlt
jecxz
scas
cmp
xchg
dec
dec
les
mov
jle
inc
jp
push
xchg
cwtl
ja
je
mov
jne
xor
lods
sub
cmp
jb
sbb
js
push
adc
enter
xlat
std
loopne
nop
mulps
outsb
mov
mov
adc
cmp
ds
xor
cmpsl
fbld
shll
sbb
pop
mov
daa
stc
mov
add
lock
xor
nop
mov
mov
shlb
lea
cli
mov
push
lods
xor
sub
xor
xchg
xchg
je
push
xchg
push
lock
add
and
hlt
stos
leave
dec
dec
popa
fbld
outsl
cmc
inc
dec
lahf
js
adc
repz
sahf
mov
mov
xlat
xor
mov
push
nop
cmpl
cltd
gs
push
nop
adc
mov
xchg
fs
jno
dec
dec
cmp
adc
xchg
add
adc
aad
xchg
or
sub
lcall
add
movsl
push
lods
cli
push
xlat
inc
sbb
lcall
bound
test
xor
mov
adc
stos
lods
pop
xchg
cmp
adc
outsl
test
inc
popf
sub
nop
and
ds
pop
mov
insb
or
sub
cld
hlt
daa
cmpsb
ficomps
enter
jecxz
stos
jb
add
add
imul
cmp
movsb
add
cwtl
dec
inc
popf
fcoms
sbb
sahf
outsl
inc
mov
inc
cwtl
pop
xchg
cmp
aad
jge,pt
js
fldt
sbb
lret
push
add
xor
mov
or
cmp
pop
add
dec
cld
xor
and
rorl
sbb
dec
test
push
pushf
dec
mov
jnp
je
xchg
outsl
lea
mov
pusha
push
xor
imul
push
pop
fisubrl
cmp
add
adc
jp
jl
fdivs
addb
or
mov
and
int3
sti
lcall
sti
mov
jne
daa
icebp
mov
dec
pop
jb
lods
or
xchg
stos
jle
cmp
int
gs
push
pop
sbb
jecxz
xor
js
add
mov
scas
fstl
jo
insb
pop
decb
dec
mov
outsl
pop
mov
popf
std
pusha
or
std
repnz
std
fwait
shlb
mov
cmovae
in
imul
sahf
mov
mov
jecxz
icebp
mov
push
stos
adc
lret
movsl
add
stos
fldl
stos
xor
or
xor
jae
mov
orb
sbb
mov
sti
or
ret
mov
add
xchg
jno
sbb
leave
xchg
cmp
push
lock
and
xchg
in
xchg
clc
in
pop
enter
sahf
dec
sti
xor
aas
jne
clc
shrb
cmp
xchg
jb
pushf
jmp
out
jmp
pop
inc
jae
icebp
out
jecxz
pop
dec
iret
and
push
push
inc
lret
lret
add
in
push
nop
jmp
jecxz
divl
rcll
push
mov
out
jne
add
gs
insl
mov
lods
int
xchg
daa
jecxz
mov
xor
lret
mov
jecxz,pn
dec
int3
jg
adc
xor
rcr
leave
nop
mov
add
mov
or
xorb
jo
add
data16
and
add
cmp
jmp
in
addr16
scas
fcompl
inc
gs
pop
push
add
mov
cli
jg
sahf
insb
std
xchg
jg
sub
out
sub
sub
sub
jnp
shl
ja
sub
test
std
jle
insl
pushaw
mov
mov
sub
shrb
ljmp
push
sbb
dec
shrl
or
cmpl
sti
jb
dec
stos
mov
mov
adc
xchg
outsb
xor
sub
inc
and
pop
mov
pop
inc
push
insb
aaa
dec
popf
mov
enter
jae
adcl
in
xlat
ret
mov
xchg
mov
mov
outsb
lock
mov
push
xchg
cli
mov
or
push
lods
icebp
ret
add
cltd
insb
movsb
jbe
ror
add
mov
inc
mov
hlt
outsl
sub
mov
iret
mov
dec
dec
xchg
add
adc
flds
jno
jge,pt
test
popa
in
int
pushf
mov
inc
out
ds
sub
std
add
mov
cwtl
mov
mov
mov
hlt
jle
mov
inc
mov
xor
out
cmp
rcll
pop
cs
jo
xchg
popa
dec
add
pushf
cwtl
scas
sbb
jns
movsb
fwait
in
mov
mov
addr16
mov
test
mov
rcl
scas
shlb
ds
sub
aam
xor
outsb
pushl
adc
sbb
and
insl
loop
mov
test
lea
and
test
cmp
jl
aad
xchg
jbe
into
push
movb
pop
sbbb
daa
jmp
sub
inc
sub
lea
and
test
push
jbe
sub
popa
sub
mov
lret
fldl2t
arpl
cmc
cmp
push
sbb
pushf
test
loope
stc
scas
mov
xor
adc
sbb
vmovaps
pop
mov
and
popa
jnp
and
loope
push
jb
pop
cltd
mov
sbb
cltd
sub
xchg
test
out
pop
test
and
add
in
cmc
adc
push
leave
subb
xchg
pop
jae
xor
xchg
lods
push
sbb
sbb
into
stc
imul
or
mov
xorl
call
enter
add
inc
sbb
mov
xchg
xchg
dec
fwait
xor
sub
push
cli
add
push
test
popa
cli
test
data16
fwait
rol
push
xor
sub
or
inc
xchg
mov
flds
roll
loope
pop
inc
test
mov
imul
xor
mov
and
loope
and
test
or
stos
sub
lods
sarb
and
sub
pop
pushf
in
mov
dec
hlt
cwtl
into
lods
pop
jae
stos
out
jae
dec
shl
in
iret
mov
pop
cmp
jne
int
test
xchg
jp
xor
push
mov
test
inc
and
mov
lret
aas
sbb
fwait
xor
add
add
add
cmp
orb
lret
cltd
gs
lcall
addr16
xchg
mov
jg
mov
repz
sbb
shl
and
push
mov
andl
dec
add
loope
mov
aaa
inc
jmp
inc
in
mov
je
outsb
and
inc
out
mov
jle
jns
cmp
push
repz
fidivrs
aaa
roll
adc
push
call
ss
xchg
movsl
xor
cwtl
lahf
mov
xlat
jmp
mov
repz
sahf
les
sub
lahf
test
inc
dec
out
add
ds
fcompl
xor
cwtl
cmp
sub
pop
inc
mov
jp
or
or
jno
mov
enter
add
sub
cmp
repnz
jmp
or
int
jb
cmp
sahf
mov
mov
cmp
mov
push
lods
mov
stos
fwait
pop
or
inc
push
loope
in
out
fidivrs
inc
cli
movsl
xor
jle
inc
add
pop
popa
scas
push
or
ret
loopne
jae
inc
test
pop
scas
and
push
stc
sub
sub
movl
add
popl
daa
dec
push
mov
cmp
out
leave
dec
outsl
xchg
xchg
xlat
xchg
push
imul
scas
mov
gs
push
pop
push
inc
ljmp
jnp
stc
dec
cwtl
sub
mov
sbb
or
lcall
xchg
andb
mov
ret
cwtl
mov
xchg
push
cmp
sti
fwait
popf
sub
pop
push
jecxz
psubsb
xor
sti
push
sbb
cmpb
hlt
sub
es
call
pop
sahf
lcall
cwtl
and
push
test
xor
and
xchg
icebp
frstor
icebp
ret
push
or
cmp
dec
into
or
repz
pusha
push
adc
rolb
popa
lahf
aas
pop
mov
movsb
iret
jmp
movsb
roll
jne
jno
sub
mov
test
mov
and
ds
cmp
pop
add
inc
jmp
and
fwait
xchg
add
ljmp
jg
cmpsl
test
es
adc
fucomp
pop
mov
lods
js
jbe
push
sbbl
mov
adc
in
xchg
lods
jae
idiv
ljmp
sbb
mov
or
push
loopne
sub
or
test
fwait
mulps
aam
inc
imul
dec
insb
inc
jne
jmp
fnsave
scas
pop
out
lods
jns
inc
mov
mov
std
test
vmwrite
je
push
or
inc
in
jg
mov
xor
jne
xor
mov
aad
addl
adc
push
xor
jbe
js
orb
or
mov
push
fsubrs
push
ret
shl
lcall
jle
bound
xor
cmc
daa
and
jae
lret
gs
sahf
jno
sub
mov
cwtl
push
aas
or
xchg
jbe
cmp
push
lcall
lods
mov
cmpsb
jbe
in
mov
call
arpl
jo
adc
test
ljmp
mov
mov
pop
push
cmpsl
mov
dec
cmc
mov
pop
sbb
sub
adc
jmp
xor
ja
addr16
inc
sbb
jecxz
push
cli
aad
nop
cmp
dec
adc
xor
pop
adc
insl
gs
mov
jg
sub
divb
sahf
imul
push
insb
push
pop
push
mov
or
inc
pop
ja
sbb
jg
jns
xor
les
in
push
into
or
xchg
jmp
leave
xchg
jecxz
inc
push
lret
dec
push
in
jle
mov
inc
jae
leave
hlt
jbe
into
xchg
lea
mov
inc
fcos
or
push
push
mov
lds
fs
push
addr16
or
pop
push
jae
sahf
cmp
push
mov
fs
into
jecxz
sub
ficompl
into
int
jns
les
xor
cs
mov
or
jp
call
ffreep
sti
popf
scas
pop
movlps
push
ss
jbe
cmp
add
or
idivb
jp
subl
xlat
orl
repnz
pop
nop
adcb
cld
push
mov
loopne
push
push
mov
and
inc
mov
adc
mov
insb
sub
ja
push
jne
pusha
outsl
push
nop
test
imul
cltd
or
scas
sub
pop
shl
imulb
stc
sbbl
push
add
ret
in
fisubrl
or
lock
dec
ret
inc
sti
in
push
cmp
mov
pop
cltd
jp
fs
xlat
idivl
dec
fidivrs
push
sbb
addl
test
and
or
mov
roll
push
jp
pop
xchg
or
mov
fstpt
or
ret
push
mov
ret
adc
mov
sbb
push
sub
jecxz
aam
into
jle
lret
pop
fdivr
das
sbbb
or
test
pop
mov
insl
inc
xchg
cltd
lahf
subl
jnp
pop
or
inc
hlt
inc
mov
lret
mov
outsb
out
cmp
fistl
xor
cmc
rcrb
mov
inc
jnp
rcr
inc
in
push
scas
sbb
adc
mov
xchg
mov
je
and
xor
insl
clc
cmp
jl
cmp
jns
xor
movsb
lods
incl
mov
adc
xchg
sbb
fucomi
push
movsl
scas
push
sub
popa
loope
mov
or
mov
into
xlat
dec
xlat
pop
inc
xchg
pop
js
pushf
mov
mov
out
xlat
inc
mov
and
push
in
sub
hlt
push
or
es
repz
xchg
fdiv
jmp
push
fildll
add
mov
sti
dec
fldl
add
sbb
adc
adc
and
rolb
shrl
aaa
adc
jmp
dec
push
leave
push
cld
call
or
mov
jns,pn
iret
push
mov
stos
xor
pop
push
pop
add
out
out
pop
inc
out
and
adc
nop
xchg
dec
mov
es
stc
mov
xchg
and
sub
cmp
mov
mov
or
leave
aas
adc
cmp
mov
inc
and
ror
fidivl
dec
sub
in
popf
add
mov
xchg
fneni(8087
daa
aad
in
popa
pop
out
fisubrl
sub
adc
ss
cs
jne
mov
mov
pop
loope
lea
fs
aaa
cmp
lahf
in
mov
daa
mov
pop
lret
push
icebp
sbb
and
mov
inc
lea
test
dec
xlat
push
filds
xchg
leave
and
add
lods
or
lahf
loope
cmp
lea
mov
fwait
pushf
test
or
data16
push
test
inc
sahf
sbbl
data16
xor
cwtl
or
mov
mov
xor
bound
cmp
loop
mov
pop
fcmovu
stos
mov
jge
stos
and
adc
repnz
dec
bound
cmp
sbb
dec
in
pop
notl
into
dec
in
lcall
pop
call
repnz
push
inc
notl
mov
sub
sbb
cwtl
das
loopne
add
test
cltd
shll
mov
dec
adc
adc
dec
mov
out
push
mov
sub
repnz
xor
inc
xchg
mov
test
push
stos
cmp
andl
xchg
mov
jp
adc
add
stc
stos
sbb
adc
jno
push
shll
daa
cs
mov
jbe
xchg
xchg
enter
cmp
in
cmp
cmc
push
jns
dec
cmc
movsl
mov
lock
stos
ss
inc
or
xchg
adc
sbb
jb
dec
lahf
jmp
js
inc
add
xchg
lahf
push
syscall
jo
mov
subb
dec
cwtl
aad
out
mov
loop
mov
and
clc
push
leave
addr16
iret
jo
stos
rcll
movsl
cld
loopne
adc
jno
push
sbb
inc
cs
add
jne
cli
mov
jno
dec
jae
in
xchg
ret
cmp
xor
jmp
xchg
mov
stos
mov
sub
push
mov
xor
mov
fsub
call
add
shrl
sbb
out
mov
ljmp
jl
mov
pop
sub
mov
add
adc
sub
xor
cmp
push
push
pop
ljmp
ds
jo
push
imul
andb
das
repz
mov
push
fists
fsubl
add
loopne
mov
in
and
aad
dec
mov
xor
ret
mov
lea
iret
jmp
and
push
js
push
adc
add
pop
dec
mov
dec
xlat
pop
pop
xor
fcompl
repz
out
sahf
pop
test
std
repnz
negb
mov
popf
enter
inc
push
push
adc
test
add
test
paddusw
jae
mov
out
pusha
shlb
dec
int3
shll
xor
rcll
pop
pop
push
xchg
mov
push
sub
inc
mov
imul
ds
aaa
in
xlat
int
cltd
idiv
dec
ljmp
fbstp
pop
fisubs
call
into
inc
mulb
dec
lods
jne
popf
pop
fidivs
leave
xor
mov
scas
sbb
sti
mov
mulb
in
xor
test
lea
sub
loope
xor
lock
insl
incl
std
out
mov
cmc
ss
sar
pop
pushf
dec
pop
gs
jnp
scas
cmp
jno
or
nop
int
mov
jmp
bts
out
cld
lods
lahf
add
in
nop
ljmp
jnp
mov
push
jmp
push
xor
sbb
leave
mov
dec
push
je
dec
iret
stos
inc
add
ret
push
aas
inc
jecxz
inc
cli
sti
mov
xor
inc
dec
fists
js
sub
test
into
mov
repz
loopne
sahf
dec
movsb
nop
cmp
pop
mov
out
push
addb
leave
push
mov
push
filds
mov
shll
sbb
or
add
bound
ss
adc
stos
inc
push
fsubrs
push
loopne
pop
sub
pushl
lcall
in
jo
clc
dec
aas
push
movsl
ds
jno
mov
jbe
sahf
enter
inc
cli
pop
add
or
test
or
add
jg
adc
pop
dec
lcall
xor
popa
shl
repz
jo
xchg
pop
movsl
adc
inc
loopne
mov
int3
test
int3
fwait
push
loope
js
out
mov
mov
pop
or
test
jbe
lods
addr16
or
add
dec
rcrl
bound
jb
xchg
sbb
add
inc
sub
cli
cmp
cmp
and
add
loope
scas
push
mov
loop
jge
shrb
aad
push
in
lret
pop
jo
daa
arpl
or
xor
in
insl
dec
rcll
xor
scas
inc
mov
mov
and
stos
add
cmpsl
jge
cmpl
in
jle
aad
roll
sub
pop
out
xchg
sbb
xchg
add
bound
jmp
jb
movl
dec
mov
scas
sub
hlt
push
hlt
jae
daa
jl
mov
sbb
add
iret
fcmovne
jno
out
popf
mov
lods
xor
shrb
fistps
dec
push
movsl
mov
adc
xor
insb
adc
jmp
loop
loop
mov
mov
inc
push
gs
xor
mov
push
pushf
push
xchg
cwtl
pop
stc
push
daa
int
mov
icebp
test
repnz
jl
or
test
int
and
jbe
mov
cmpsb
inc
in
adc
sub
jmp
fcomip
test
subb
lods
mov
cmp
dec
push
or
lods
addr16
sbb
jecxz
pop
mov
push
pop
nop
and
out
adc
es
sub
fidivrs
jae
jg
ds
pcmpeqw
enter
push
cmp
pop
push
inc
jno
mov
inc
out
or
orb
jb
bound
cmp
and
shl
sbb
dec
inc
into
push
out
pop
xchg
shr
fbstp
adc
test
cli
pop
int3
cmpsl
addl
cmc
pushf
fs
pop
and
sub
cmp
xchg
or
dec
cmp
aaa
sub
inc
cmp
xchg
insl
adc
and
sbb
push
pop
dec
or
mov
inc
adcb
movsb
popaw
mov
fimull
dec
imul
pop
test
jb
call
test
and
add
push
sub
int
push
es
push
jmp
and
jg
inc
arpl
mov
data16
movb
pop
dec
decl
pandn
xchg
call
cmp
cmpsl
adc
mov
popf
pop
hlt
push
test
cmpsl
mov
lret
stos
sub
mov
sbb
scas
add
cmpsl
adcb
test
dec
cmpsl
fnstsw
pop
mov
mov
jmp
scas
sub
fbstp
jns
dec
and
sbb
adc
in
movsl
loopne
out
jae
xchg
iret
ret
mov
iret
push
outsb
scas
arpl
cmp
mov
dec
jge
mov
testb
jge
push
add
xchg
mov
jbe
sub
rclb
cs
iret
dec
sahf
or
cmc
lods
mov
add
adc
push
push
mov
pushf
aas
xor
in
cwtl
dec
pop
fs
jno
nop
in
lret
stc
and
push
pop
mov
or
pop
shrl
gs
arpl
pop
or
cmpl
cmp
xor
xchg
or
dec
xchg
push
add
xchg
or
xlat
inc
push
jae
repnz
rclb
mov
inc
mov
movb
push
addr16
xchg
mov
xor
mov
fadds
xchg
loopne
test
mov
mov
in
in
cmp
sub
mov
and
cltd
mov
pop
stos
mov
mull
pushf
dec
sub
cmpsb
push
addb
add
mov
fnstenv
scas
inc
push
les
in
popf
imull
les
xor
movsb
test
enter
inc
scas
inc
lods
mov
inc
clc
mov
imul
test
or
inc
fst
rol
jg
mov
lods
mov
popf
pop
xchg
xchg
and
out
sbb
jmp
mov
pop
mov
cld
dec
int3
int
aas
inc
lcall
mov
or
pop
cwtl
popa
in
adc
test
sbb
sub
push
fstpl
repz
cli
test
cmp
jp
lret
enter
lea
aas
xchg
ljmp
sbb
xor
cmpsl
cmpsl
fisubrl
stc
push
pushf
aaa
pop
jne
adc
inc
xchg
mov
repnz
int3
sbb
xor
inc
pop
sub
or
jl
arpl
test
iret
xchg
stos
fnstcw
push
daa
mov
xlat
in
xchg
es
add
outsb
sbb
add
and
xchg
push
ss
pushf
and
jbe
sub
jmp
aam
ljmp
cld
jecxz
ljmp
jb
aam
pop
cld
int
jg
ret
lret
jnp
dec
inc
pop
repnz
mov
pop
dec
add
aas
sbb
mov
cltd
xchg
and
fnsave
out
push
jo
sub
js
push
fnstsw
cmp
pusha
nop
hlt
inc
or
lods
stos
or
into
add
lock
mov
mov
leave
punpckhbw
adc
xchg
xchg
clc
test
push
adc
cmp
fcomps
and
popf
dec
dec
nop
mov
sbb
cmpl
push
stc
pop
jecxz
mov
adc
jno
jl
inc
xlat
and
stos
mov
setb
repnz
lods
ja
cmp
or
push
loopne
das
lea
lcall
fucomp
mov
push
sbb
xlat
adc
push
xlat
pushf
scas
popf
lret
xchg
or
popa
loope
sbbb
jo
xlat
loopne
jns
int
inc
mov
hlt
xchg
pop
inc
jb
and
fidivl
xor
fistpll
pop
enter
push
sbb
mov
outsb
or
adc
fcompl
jge
shll
mov
pushf
sbb
icebp
outsb
push
cmp
adc
push
jle
scas
jg
mov
mov
aaa
out
pop
pop
pop
push
or
dec
mov
daa
sub
lds
push
push
jns
repz
inc
cmp
sbbl
fcoml
fs
jnp
scas
xchg
and
push
stos
adc
test
dec
jo
insl
xorl
pop
divl
add
jmp
jno
fnstsw
dec
test
movsb
cs
push
dec
insl
js
ljmp
js
inc
jecxz
mov
inc
push
mov
fsubrp
repnz
rcrb
mov
jns
mov
jnp
sbb
fs
sub
xor
mov
test
mov
arpl
adcl
adcl
aas
and
pop
test
mov
cmpsl
or
mov
cmpsb
clc
jbe
mov
dec
or
dec
daa
sbb
pushf
je
push
jg
mov
xchg
icebp
mov
imul
les
jl
pop
cmp
jle
sbb
out
push
aad
xchg
jge
xor
push
sbb
add
mov
inc
sub
jl
pushf
jg
push
es
or
push
orb
xchg
mov
addl
movsb
push
add
or
mov
lock
dec
xor
push
scas
inc
and
das
cmp
mov
xchg
xchg
fmul
pushf
mov
jo
rdtsc
aam
lcall
push
pop
or
repz
andl
and
add
add
dec
mov
jae
int3
lret
xor
add
sub
or
or
push
xchg
jo
stos
cmp
or
mull
daa
pusha
mov
pop
mov
and
push
pushf
xchg
ret
xchg
jp
xchg
pop
das
aas
shlb
push
out
fidivl
fimull
and
leave
pop
adc
fimull
test
mov
push
iret
mov
fstpt
movsb
adc
addr16
addr16
mov
lock
add
lea
in
repz
jne
or
or
aaa
call
mov
adc
mov
loop
addb
cwtl
int
out
ljmp
sub
nop
test
pop
fcmovnb
dec
enter
jmp
std
cmp
adc
or
mov
stos
cmc
adc
mov
ret
daa
adc
or
cwtl
lods
inc
dec
mov
in
xchg
aam
jle
pop
or
fidivrs
loope
stc
push
sub
adc
sbb
and
into
idivl
scas
das
in
jb
in
adc
push
sub
dec
and
hlt
arpl
or
ljmp
lcall
xchg
xorl
cmp
cmc
in
aas
mov
mov
xor
xchg
shlb
mov
push
push
jg
das
scas
inc
call
dec
mov
sbb
inc
lret
je
push
adc
addr16
aaa
lcall
cli
enter
enter
mov
aas
popa
lret
aam
or
sub
xchg
dec
decb
into
inc
dec
ds
aas
jmp
xor
and
inc
xchg
ds
loopne
icebp
sub
dec
loope
jmp
xchg
imul
mov
fs
or
bound
xchg
cmp
pop
xor
cmp
test
and
xchg
cld
inc
xchg
out
and
cmpsl
xchg
ret
cmp
pop
fcoml
imulb
es
call
jnp
shlb
adc
mov
pop
adc
xor
push
mov
popa
stos
or
mov
fwait
cmc
arpl
cmpb
cmc
jne
leave
movsl
xor
outsl
rcll
push
inc
dec
adc
xchg
les
loopne
cmp
pop
dec
ret
fs
mov
lret
add
xor
xor
cmp
xor
sub
arpl
out
pop
sbb
and
fstpt
mov
mov
inc
push
out
cwtl
pushf
inc
dec
icebp
mov
xor
mov
test
xchg
pop
push
cmc
xchg
pop
jmp
mov
stc
lcall
pop
in
add
iret
roll
movl
cltd
test
jno
xor
movsb
test
sti
sbb
gs
out
xorl
pop
rcrb
fxch
stos
arpl
ret
jns
repnz
xchg
push
xchg
add
popf
lds
adc
call
mov
icebp
cmp
lds
loop
mov
push
cmpl
loopne
mov
dec
dec
adc
mov
sarb
add
mov
lock
or
aas
inc
ljmp
in
lret
js
outsl
in
mov
fidivrs
push
test
push
add
mov
mov
or
or
push
or
inc
jge
add
jecxz
or
out
popw
clc
push
xchg
cmpsb
and
pop
mov
mov
xorb
xchg
ja
rcrb
arpl
sub
sub
jmp
jmp
cld
gs
aas
inc
inc
insl
mov
or
mov
mov
pusha
adc
fldl
out
test
push
inc
pop
cwtl
mov
xchg
push
aad
and
imull
xchg
cmp
jp
add
xchg
out
ret
cltd
popf
sti
shr
ds
jge
fldcw
adc
jmp
lahf
stos
add
sbb
into
pop
push
in
push
or
stos
inc
or
xor
mov
aas
xchg
adc
mov
and
fprem1
inc
jmp
cli
mov
xor
or
sub
and
push
cmp
xchg
push
aam
ds
lods
dec
mov
and
mov
pushf
sti
stos
inc
push
jb
int3
push
es
cmp
iret
aas
outsl
std
lds
shrb
jno
fwait
mov
sbb
divb
aam
call
sbb
daa
jne
adc
lret
sbb
inc
sub
mov
push
jbe
jns
ror
into
int3
push
mull
inc
sarl
pop
fiadds
mov
stc
mov
pushf
sbb
leave
or
jl
aam
inc
mov
xchg
sarl
stc
xor
and
iret
sub
dec
repnz
or
cld
mov
mov
arpl
sub
dec
and
ljmp
ret
pop
iret
xor
push
cmp
lods
push
pop
push
call
neg
fiadds
mov
and
nop
test
sub
pushf
enter
aad
push
cltd
gs
repnz
imul
mov
sti
test
addb
daa
pop
or
inc
addr16
in
ds
push
ja
adc
inc
xchg
jge
xchg
fstpl
sbb
xchg
push
jae
or
shrb
inc
pop
dec
int
movsb
or
mov
and
mov
or
pop
test
notb
or
test
sahf
fadds
lret
adc
daa
es
gs
pop
ret
daa
leave
or
test
fwait
push
imulb
roll
push
out
inc
push
push
fdivrs
add
mov
adc
sub
imul
sub
in
mov
ret
mov
fcmovnbe
xor
xor
sbb
aam
xchg
inc
xorl
rcrb
repz
xchg
int
mov
loop
ret
js
push
enter
push
pusha
movsl
seta
orb
fs
inc
lea
cmp
ljmp
push
imul
sbb
pop
inc
add
fdivl
cld
lea
fsubrl
shr
sbb
push
add
xchg
sub
test
sub
sbb
testl
push
jp
cld
repnz
subl
dec
lcall
mov
mov
test
mov
hlt
testb
pusha
ds
dec
sahf
cmp
cmc
adc
aad
fsubl
clc
imul
stos
dec
xor
lret
in
mov
shl
int3
or
ljmp
call
test
mov
mov
cmc
xchg
aaa
movsb
adc
cmpsb
push
push
movups
dec
into
fwait
jo
imul
aam
aaa
xchg
mov
pop
fwait
and
xchg
subl
into
adc
aam
clc
cmp
scas
out
jo
xor
cmp
into
rcrb
ret
push
popl
push
inc
lock
jp
push
xchg
adc
fdivr
minps
mov
sub
pop
xchg
xor
fbld
repnz
fs
mov
add
push
rolb
mov
scas
lret
fs
inc
test
sbb
in
pushf
jae
fisttps
inc
or
mov
loopne
sub
std
ljmp
xor
scas
cmp
push
sub
pop
inc
pop
addr16
adcb
insl
pop
sub
pop
stos
xor
jno
xor
ss
and
aaa
and
fldcw
pop
dec
add
jg
clc
or
sub
dec
sbb
sub
out
loope
sahf
and
dec
lret
sbb
pop
or
xchg
adc
ljmp
fwait
sub
loop
out
xchg
stos
inc
popa
jns
jmp
sub
push
push
mov
xchg
mov
pop
mov
aad
cmp
or
mov
or
daa
sahf
flds
test
sub
add
sarl
test
jle
cld
mov
mov
cwtl
push
lods
lock
pop
fistpl
testb
xchg
cmovl
and
jns
or
mov
hlt
push
xor
frstor
stc
in
adc
mov
pop
sbb
addr16
xor
xlat
pusha
xor
inc
xchg
xor
jns
jb
fiadds
xorl
xchg
xchg
es
shl
in
xchg
fcos
test
sbb
clc
test
push
sbb
je
mov
cwtl
fstps
cmp
cmp
jg
adc
mov
test
pop
and
imul
and
xchg
dec
mov
in
push
xchg
add
mov
fdivrl
jns
hlt
arpl
cwtl
sahf
jnp
repz
sub
inc
gs
ljmp
mov
sub
jecxz
or
popa
movhpd
xor
mov
pop
ret
inc
push
mov
and
push
fistpl
dec
push
repnz
andb
cli
mov
cmp
inc
pop
fcomi
fistps
loopne
xchg
fstpl
sbb
daa
sarb
lea
xor
xchg
out
inc
xchg
adc
enter
push
jmp
and
dec
lea
dec
mov
shl
pop
push
mov
pop
lret
push
xorb
add
pop
jb
pop
cmp
ljmp
enter
push
jg
outsb
push
ret
mov
nop
cmp
mov
movsb
jne
mov
dec
pop
xchg
inc
sbb
mov
and
xchg
test
std
dec
je
jle
jecxz
ss
inc
xchg
lahf
into
adc
add
adc
mov
push
sub
cmpl
jbe
stos
xlat
mov
out
mov
lea
shll
jmp
dec
in
jns
mov
mov
or
mov
lock
add
test
stos
mov
cmp
mov
arpl
shl
stos
or
testl
js
xchg
enter
xchg
sbb
pop
push
out
xchg
push
lret
je
cmc
sub
pop
adc
pop
dec
push
rcr
cmp
xlat
xor
cmp
jbe
pop
sub
inc
daa
fadd
sub
adc
inc
into
push
cmp
dec
cmp
in
out
aad
xor
in
pop
outsb
scas
lods
movsl
aam
fldl
pop
dec
mov
or
xorb
ror
lods
aaa
inc
mov
sub
leave
enter
xor
mov
sub
std
imul
add
js
add
push
inc
aad
dec
outsl
clc
mov
jo
push
loope
popf
pop
xor
je,pt
xor
fmulp
int
xchg
ret
test
push
rorb
negl
in
lds
testl
dec
mov
xor
mov
mov
movsl
jae
inc
mov
out
dec
jl
pop
enter
lahf
mov
roll
decl
or
int3
sub
outsl
inc
rcl
insb
jge
shll
push
subb
xor
testb
push
sub
movsb
outsl
xor
aas
dec
xchg
or
out
pop
rorl
cwtl
xchg
addr16
push
pop
xchg
pop
sysenter
add
xor
dec
jmp
into
cmc
outsb
lahf
leave
sbb
mov
and
or
clc
or
push
shlb
in
xchg
icebp
scas
stc
jle
mov
enter
xchg
cli
loop
outsb
out
pop
mov
adc
mov
push
fistl
pusha
add
xchg
pusha
mov
lcall
loopne
jmp
sub
add
in
ljmp
or
sub
pop
sbbl
aad
or
push
pop
aad
xlat
or
push
pop
pop
mov
fimull
jae
sahf
mov
mov
or
sahf
outsb
xor
nop
mov
jns
inc
xchg
sbb
and
add
jb
cmp
stos
or
hlt
pop
mov
int3
push
dec
xor
out
inc
fidivrl
sarb
cmp
push
sarl
mov
stc
jnp
dec
daa
lea
sbb
repnz
or
pop
movl
mov
pop
mov
sbbl
jae
bound
push
bound
jae
pop
loop
sbb
sub
jle
iret
rol
mov
insb
loop
ja
add
pop
out
sub
jb
fistl
es
dec
scas
xor
inc
vpshab
dec
adc
hlt
fucomp
mov
mov
repz
outsl
dec
push
xchg
testl
fimuls
divb
mov
pop
xchg
mov
cmp
mov
lods
aam
or
fisubrl
scas
fcomps
in
mov
popl
dec
lahf
push
int
pop
and
scas
xchg
nop
jno
mov
shll
pushf
sub
imull
mov
shlb
mov
or
les
inc
xchg
movsb
push
pop
cmpsb
and
mov
adc
push
push
mov
add
jns
inc
ds
add
das
shlb
mov
push
add
aas
mov
sbb
lcall
repnz
aad
sub
dec
sbb
fdivr
xor
std
or
test
mov
test
subl
fdivs
cwtl
shll
or
sbb
adc
loope
out
mov
ret
sub
and
mov
dec
pop
jmp
xor
push
cmp
cmpsb
inc
in
jb
mov
dec
xor
xchg
sub
notl
sbb
loopne
and
icebp
cmc
or
lods
or
test
sub
daa
popf
repnz
mov
les
cmpsb
sub
pop
push
pop
stos
js
mov
xchg
jnp
call
xor
push
fcmovu
mov
outsb
inc
pop
lock
pop
es
or
popf
pop
jno
movsb
add
push
xchg
add
mov
dec
in
je
push
cmpl
jo
sub
fwait
adc
or
hlt
loop
xor
or
or
push
cmp
loopne
nop
push
xchg
inc
pop
add
stos
das
sub
movsl
dec
pop
dec
inc
lds
xor
loop
add
into
dec
jp
ja
popa
sbb
inc
aaa
sub
stos
xor
or
addr16
sbb
or
jno
add
sbb
mov
lret
sbb
addr16
imul
push
pop
clc
popa
lods
sbb
jg
inc
jle
cmp
in
iret
cs
sub
scas
popa
mov
movsb
pop
sub
lret
push
xor
dec
rcll
sbb
jmp
and
test
mov
xor
cmpl
dec
fsubs
adc
sbb
jle
mov
mov
movsb
cmp
inc
and
push
lods
call
movsl
popa
sub
fdivrl
xchg
lock
lret
dec
cmp
outsl
daa
int
fstps
push
xor
xchg
xchg
fdivrl
dec
add
hlt
and
xlat
ljmp
ficoms
hlt
stc
dec
push
xor
dec
add
or
call
hlt
enter
dec
pusha
sarb
test
mov
and
fnsave
jge
inc
mov
jmp
add
dec
push
pause
dec
inc
inc
mov
test
inc
adc
shr
ss
mov
jns
mov
adc
sub
into
rcrb
das
jmp
int3
dec
lcall
xor
mov
sbb
les
cmpsb
imulb
outsb
inc
sbb
adc
rcrl
rcr
sahf
lock
dec
movsl
jp
push
jge
cmpsl
xor
fistpll
mov
cltd
lods
cmpsb
cwtl
push
inc
mov
jg
sbb
cmp
inc
test
or
add
lret
push
out
es
pop
and
pop
pop
pop
pop
and
fidivs
xchg
fimuls
jg
adc
je
orl
push
test
ret
mov
xor
and
testb
js
push
push
shll
out
cmp
bnd
repnz
cmp
mov
dec
push
aad
mov
mov
or
mov
mov
push
lahf
mov
rcr
pop
jle
out
ljmp
sti
ss
out
fwait
pusha
pop
ficoms
sahf
mov
mov
mov
mov
add
loop
fwait
mov
add
cld
scas
in
dec
dec
sbb
xchg
push
cli
sub
jbe
cmpsl
sbb
push
pop
add
mov
add
add
flds
shll
js
jns
xchg
fcmovnu
xor
test
int3
lds
jp
pcmpeqb
jmp
and
mov
cmp
pop
fbstp
xor
pop
cs
mov
jl
scas
xchg
sbb
xchg
cmp
mov
in
testl
orl
add
dec
loope
cmp
xchg
outsl
push
xchg
test
mov
cmc
jecxz
div
cmpb
cmp
xchg
daa
mov
mov
and
loop
imul
jle
out
int3
jae
pop
cmpsb
pop
mov
inc
push
fs
icebp
js
xor
mov
outsb
cli
jbe
adc
adc
adc
repz
inc
insb
repnz
outsl
cmc
outsb
sbb
cld
hlt
pop
mov
inc
mov
jnp
pusha
out
mov
cmp
int
xor
pmuludq
add
xor
dec
sbb
jne
adc
repnz
jno
xchg
lock
or
jge
gs
pushf
das
enter
subl
fisttpll
dec
into
ret
cmp
jnp
test
in
cmp
bound
push
adc
and
shrb
mov
mov
aas
pop
stos
mov
aaa
jg
int
stos
push
loop
sub
and
inc
xlat
push
add
scas
stos
les
xorb
gs
and
test
xor
stc
fwait
lcall
scas
cmp
xor
icebp
jg
loop
mov
imul
lock
jle
and
mov
iret
push
cmpl
add
and
mov
or
insl
mov
repz
cli
pushf
push
xlat
or
lret
fdiv
mov
adc
icebp
cmc
into
ficomps
aad
mov
out
mov
and
mov
mov
pushf
push
and
ret
pop
xor
mov
clc
mov
cmpsb
bound
scas
cltd
jnp
bound
mov
push
ss
jmp
cmp
or
adc
push
das
mov
aad
push
mov
rolb
and
setb
mov
fstpl
pop
mov
pop
rcrb
sbb
jecxz
cmp
adc
sbb
dec
out
stc
ret
add
fucomp
int3
jae
test
jp,pn
dec
div
notl
add
iret
dec
xchg
cli
adc
sbb
aaa
pushf
lds
pushf
imul
fisttpl
xchg
mov
lret
out
push
mov
stos
aam
push
arpl
xchg
das
or
repz
jne
jg
jnp
lods
mov
jno
mulb
fwait
or
pop
ret
xor
mov
out
sub
mov
adc
subl
dec
pop
mov
int3
cs
std
insb
loop
gs
cmp
cmc
push
mov
stos
loopne
xchg
sub
je
imul
inc
setge
and
mov
or
out
outsb
imul
sarb
in
scas
pop
lea
fmuls
stc
fnsave
inc
dec
jmp
fwait
mov
pop
jb
cmp
or
mov
idivl
mov
xchg
cmpsl
jmpw
push
mov
cmpsb
xchg
pusha
inc
cmp
inc
mov
dec
xor
mov
int3
mov
jne
lcall
dec
push
mov
fildl
xchg
push
scas
mov
cmp
cmp
mov
push
notl
scas
in
lds
cli
loope
popf
jne
dec
sti
mov
pop
in
push
xchg
mov
or
add
pop
add
fisubrl
mov
xchg
pop
add
shrb
fs
in
fcoml
stos
into
loopne
loopne
hlt
inc
push
fdivr
jg,pt
mov
imul
dec
into
out
cmp
mov
xor
lods
dec
cltd
orl
into
and
pusha
dec
add
mull
push
pop
sbb
xor
aas
mov
dec
test
mov
mov
lods
insb
xorl
in
inc
ja
repnz
jb
popf
mov
inc
inc
imul
dec
inc
push
or
cmp
mov
jo
inc
ret
aad
fisubs
fcoms
sbb
movsl
xchg
pop
insb
in
or
sub
dec
sbb
je
pop
jns
fildl
mov
inc
xchg
and
pop
and
jecxz
dec
aam
and
lods
out
sub
inc
mov
nop
push
dec
and
aam
mov
sub
sbb
sbb
fidivl
jne
mov
inc
and
stos
jns
cmp
jecxz
cmpsl
loopne
xlat
or
test
adc
shrl
or
adc
pop
sbbl
inc
mov
adcb
sub
push
pop
mov
sbb
aas
sbbb
xchg
aad
dec
push
cli
popa
dec
xchg
pop
push
outsl
pusha
fidivrs
testb
sbb
fs
and
mov
loopne
add
xchg
sbb
cmp
imul
js
aas
pop
or
mov
xchg
cmp
insb
pushf
push
fwait
and
jmp
scas
sahf
movsb
rorb
and
cli
stos
rcr
sub
sub
push
dec
out
dec
mov
sub
jns
inc
lods
mov
or
repz
jo
arpl
add
and
mov
fiaddl
jae
bound
adc
inc
sbb
movsl
lds
cltd
jb
mov
jmp
psrlq
jge
ret
andb
loope
lret
xchg
xchg
cmpsb
add
mov
fdivp
sarl
sub
lods
sbb
cmpsb
inc
je
fnsave
sahf
xor
idivb
scas
pop
test
rorl
add
mov
scas
cmc
mov
adc
push
xchg
adc
rorl
stos
mov
mov
call
lock
insb
jmp
ret
leave
or
mov
movsb
out
bound
pop
pop
daa
bound
adc
gs
mov
push
cmp
mov
lcall
arpl
mov
xor
cltd
mov
xlat
push
subl
insb
out
pushl
push
lods
loopne
repz
mov
jecxz
xchg
call
decl
sbb
sub
sub
or
fisubl
pop
jb
inc
pop
sbb
fdivrs
std
add
inc
jae
leave
pop
jmp
adc
test
out
aas
mov
pop
ss
in
std
es
dec
outsb
cmpsb
repz
stos
fs
push
into
cltd
jecxz
dec
popa
cmc
lds
repz
fdivl
fcomps
mov
sbbl
inc
daa
outsb
rorl
xchg
int3
xchg
sbb
push
pop
cmc
mov
and
sub
push
testl
mov
test
aam
push
je,pn
fwait
imul
inc
and
pop
sub
mov
pop
mov
mov
cmpsl
sub
movsb
pop
jno
fsubrp
xchg
ret
out
push
lods
jge
jle
gs
inc
scas
cmpl
push
mov
add
mov
inc
sbb
mov
cli
out
inc
jb
xor
mov
adc
adcl
add
dec
pop
inc
iret
xchg
ret
or
jns
outsl
notb
repz
mov
scas
xchg
in
in
pop
out
sbb
out
mov
xor
jb
xor
xchg
sub
in
mov
adc
aaa
cmp
cmpsb
ds
jge
pop
push
repz
enter
mov
fisttpll
loope
mov
cs
adc
dec
scas
mov
arpl
adc
jae
cmpsl
sahf
jnp
inc
lcall
in
and
mov
fcmovb
mov
xchg
ljmp
fadds
les
sahf
xor
or
cmpsl
xchg
mov
and
inc
in
sub
push
mov
pushf
enter
repnz
out
xchg
leave
sbb
popa
cs
mov
add
pushf
test
popf
xchg
sahf
jne
out
movsl
orb
mov
pop
and
jle
imul
jbe
pop
push
or
cmp
xchg
bound
insb
sub
shll
lds
push
mov
or
mov
jbe
aas
adc
repnz
pop
adc
vpor
jne
sahf
mov
jl
and
and
dec
cltd
push
roll
outsb
xor
or
or
icebp
mov
pop
jb
sub
dec
rcrb
punpckhbw
shlb
das
dec
ret
adc
inc
scas
cmp
xchg
inc
lea
cmc
mov
pop
in
push
dec
fwait
pop
loope
jle
sbb
dec
mov
mov
cs
jne
clc
jo
cmp
cmp
lock
cmp
rcrb
xchg
stos
push
push
mov
addr16
adc
fs
push
mov
jns
andb
xchg
aas
and
dec
adc
outsl
sub
fbld
aad
add
in
fdivrl
scas
test
and
dec
es
lret
leave
mov
outsl
xor
imul
sbb
sub
and
test
dec
sub
xchg
es
sbb
int3
movsb
xor
lahf
icebp
imul
push
bound
rcl
fsubl
mov
mov
cmpsb
xor
out
pop
jecxz
sbb
xor
out
mov
lea
flds
mov
jmp
sub
mov
sub
ljmp
inc
repz
push
loope
inc
sub
rcrl
push
int
cmp
dec
sbb
ljmp
das
into
inc
inc
ja
cli
mov
and
push
fldenv
dec
dec
mov
mov
add
je
ss
and
mov
test
mov
or
mov
lea
fimull
sbb
je
jecxz
test
inc
bound
mov
mov
xorb
sbb
inc
mov
das
or
out
dec
xor
fcomps
jnp
mov
add
aaa
xor
cmpsb
adc
pop
pop
sahf
dec
cmp
mov
push
idivb
cmpsl
pop
hlt
aas
dec
sbb
stc
aas
xchg
mov
mov
push
jno
mov
rorb
inc
cmp
adc
rol
mov
push
jno
dec
int
frstor
add
mov
loope
mov
int3
push
adc
sahf
push
loopne
cmpsl
or
cld
xchg
xchg
adc
pop
inc
jne
call
mov
mov
and
in
and
test
ss
mov
dec
aas
fwait
faddl
mov
into
sbb
gs
stos
pop
push
fstpt
repnz
mov
les
xchg
jge
in
adc
aas
push
adc
mov
repnz
test
pop
mov
outsb
adcb
mov
jne,pt
mov
fwait
popf
cld
aaa
mov
aas
jbe
mov
outsb
mov
in
data16
and
mov
into
xor
inc
int3
adc
es
ret
pop
sub
push
std
mov
aaa
or
addb
bound
nop
sarl
and
jo
jmp
lea
pop
add
nop
jbe
dec
hlt
mov
add
aam
cmpb
mov
or
stos
sub
mov
test
in
lock
lock
cld
rcrb
jg
scas
loop
cmp
arpl
dec
andb
and
push
mov
loope
icebp
or
out
mov
outsl
lcall
and
and
lret
mov
in
push
sub
inc
dec
adc
inc
mov
push
repnz
mov
jg
aad
call
pop
in
div
mov
outsl
or
xchg
pop
mov
popf
xchg
or
jb
fcoms
cltd
pop
gs
cmp
cwtl
dec
sub
mov
push
or
xchg
js
push
das
je
inc
ret
outsb
mov
add
icebp
idivl
js
adc
push
xor
lock
mov
sbb
test
and
sbb
test
test
lods
fidivrs
mov
push
dec
sbb
mov
xchg
xchg
jmp
loop
ja
sbb
insb
shlb
xchg
push
mov
adc
cmp
shll
cmp
sbb
xchg
sub
and
jae
mov
icebp
in
fdivp
int
dec
fld
gs
lods
lcall
and
test
call
out
xchg
inc
daa
adc
ss
fmulp
shrb
mov
push
and
ret
inc
cmpb
repnz
pop
out
cli
pop
sbb
mov
or
lahf
dec
push
dec
int
pop
in
nop
jle
or
xchg
orl
xchg
in
rolb
push
lds
and
pushf
cmp
sbb
dec
sub
les
mov
lret
inc
nop
cs
jae
push
push
insb
lock
sbb
xchg
lds
xchg
aas
mov
push
scas
cmp
sub
cmc
or
jp
stc
lahf
xchg
test
and
cli
shl
or
mov
cltd
push
in
xchg
repz
cltd
push
std
or
movsl
jno
cwtl
imul
push
loopne
lock
jne
push
das
pop
data16
dec
xor
lahf
mov
jl
xchg
dec
cwtl
test
dec
mov
mov
cmp
pop
or
lret
inc
fcompl
mov
adc
mov
dec
mov
int
xchg
stos
xchg
dec
xor
ja
fbstp
push
ja
lods
negb
lock
sbb
jecxz
ljmp
xchg
rorb
xchg
and
mov
ret
hlt
hlt
mov
into
ds
pop
int3
sub
and
inc
jmp
add
xchg
insl
fildll
loop
shr
jno
fstpl
sahf
jo
int3
iret
popa
xor
add
cmp
jge
xchg
stos
mov
dec
mov
and
sub
insl
push
mov
xchg
push
and
test
xchg
sahf
jge
je
xor
adc
test
ficompl
cmpsl
outsl
insl
pop
es
cld
xor
pushf
lods
sub
mov
jno
fs
jecxz
push
jmp
fsubrs
arpl
push
jl
and
out
pop
mov
inc
mov
inc
and
jnp
push
roll
imulb
mov
fistpl
or
icebp
in
pop
mov
mov
scas
mov
dec
aad
imul
bound
in
dec
je
divb
cmpl
shrb
lods
mov
mov
lcall
ja
mov
sub
sbb
lret
out
scas
data16
loop
cmp
setae
popf
jg
sbb
dec
sahf
pop
loope
sub
mov
lock
mov
ljmp
int3
jbe
xchg
mov
hlt
xor
mov
dec
rorl
cmp
inc
pop
gs
mov
pop
and
push
push
cmp
mov
add
cwtl
pop
jmp
sub
icebp
dec
inc
pusha
sub
repz
lret
mov
jne
adc
add
cmp
jecxz
inc
inc
jmp
and
jecxz
cwtl
pop
mov
scas
in
insb
jecxz
pop
add
pop
fdivp
stos
rorb
jecxz
mov
add
ficoml
dec
pop
ret
in
ja
xor
jo
out
lock
push
lock
cmp
jno
js
jb
rcll
cmp
adc
orl
push
daa
mov
adc
in
in
xchg
imul
dec
out
pop
mov
scas
dec
sar
inc
loopne
mov
idivl
mov
jns
ficomps
mov
pop
inc
dec
cmp
aad
xchg
pop
bound
scas
dec
jp
jne
jg
lds
shrl
and
sub
mov
les
nop
in
xchg
add
jecxz
push
push
and
cmc
jns
dec
pop
out
cmp
xchg
cltd
mov
in
aad
popf
frstor
repz
adc
rcr
sbb
xchg
test
cli
xchg
cmpsl
jb
mov
cmpl
xchg
cwtl
mov
jmp
daa
mov
fwait
cli
adc
das
out
loope
loopne
decb
push
hlt
lret
hlt
andl
jge
jp
sub
mov
pop
cltd
mov
push
std
xchg
lock
sbb
adc
stc
jae
or
jae
insb
dec
adc
hlt
jns
jecxz
jmp
lods
leave
and
loope
add
and
daa
aaa
out
pop
push
mov
mov
aaa
pusha
inc
push
add
xchg
in
pop
cmc
scas
ss
jle
push
icebp
adcl
test
xchg
sbb
jnp
sub
test
daa
enter
add
adc
scas
fidivs
cmova
mov
pusha
out
cmp
gs
mov
icebp
mov
mov
jae
pop
sub
cmp
out
mov
pop
add
movsl
pusha
mov
movsl
push
jns
js
mov
mulb
jo
inc
pop
rolb
mov
dec
lret
xchg
popa
loope
cmp
fimuls
pop
lods
mov
insb
test
ja
movsl
or
sbb
and
add
pop
push
pop
push
push
add
and
push
jg
fidivs
sub
ss
rcll
xchg
shrb
lea
cmp
mov
or
test
cmp
insb
fs
inc
cmp
loopne
xchg
and
lods
inc
add
sbb
mov
stos
jmp
stc
fcmovnb
sbb
pop
daa
pushl
xchg
cmp
pop
fcmovnu
aas
xchg
dec
lcall
fs
jl
sbbb
pop
or
lds
loope
pop
pop
jnp
sarl
shll
std
mov
jno
cmc
push
lea
pop
leave
testb
xchg
sub
mov
mov
dec
nop
inc
jne
mov
xchg
push
fwait
cwtl
xor
icebp
fsub
addr16
jns
sbb
xchg
aas
das
jbe
adc
xor
insl
and
cmpb
into
addr16
mov
dec
lds
cmp
sub
pop
je
iret
mov
pop
stc
movsb
jmp
xor
pop
mov
adc
mov
outsb
cwtl
pop
and
jmp
adc
xor
out
lahf
push
frstor
mov
fsubl
mov
mov
push
pop
or
ds
scas
xor
fwait
icebp
in
inc
or
sub
pop
lods
mov
xchg
mov
popf
add
aad
xchg
push
xchg
or
loopne
mov
cwtl
dec
inc
imul
mov
lcall
pop
outsl
ss
lahf
dec
xor
jnp
inc
push
jl
add
adc
dec
fadds
insb
jno
pop
sarb
ffreep
movsb
pop
sahf
adc
cmpsl
popf
loope
cmp
cmc
ja
add
data16
adc
mov
insb
inc
sti
or
rcl
cmp
adc
iret
mov
stos
mov
pop
push
int3
sub
rorl
add
aad
cmp
lret
or
xor
sub
add
aaa
aaa
decl
data16
in
xlat
adc
mov
inc
inc
mov
out
popa
mov
mul
lcall
cmp
mov
jmp
test
out
push
stc
lahf
xchg
ja
je
inc
testb
int3
inc
pop
call
mov
insb
or
icebp
jnp
xchg
add
mov
or
stc
fdiv
aas
inc
pop
mov
jnp
leave
movsl
push
icebp
hlt
addr16
jle
mov
mov
pop
popf
ret
push
sub
out
aam
and
call
rcrb
adc
or
mov
cmp
inc
mov
cli
jg
movsb
enter
dec
mov
or
lods
aas
cmpsl
jbe
sbb
mov
jns
arpl
js
pushf
sub
inc
jg
das
roll
push
pop
mov
stos
sbb
frstor
aas
cmp
repnz
int3
jmp
fadds
and
inc
fidivrl
popa
insb
in
out
cmp
adc
outsb
xlat
push
push
ja
movb
dec
mov
shll
xchg
movsl
call
mov
mov
vmovhpd
jnp
nop
mov
std
outsl
imul
jmp
push
sbb
out
fistps
lock
pop
xchg
out
in
jnp
jp
push
arpl
push
movsl
movl
das
repz
inc
dec
xor
push
repz
nop
cmp
repz
das
mov
jne
lock
out
xor
xor
out
cmp
or
les
stos
rclb
scas
sbb
dec
cmp
pop
xchg
daa
in
popa
mov
pop
cmp
pop
iret
sub
pop
pop
loopne
add
add
js
mov
adc
bsf
dec
jl
xchg
mov
pop
test
repz
int
pop
dec
mov
stc
jecxz
mov
cmpsb
ss
lret
test
in
loope
orl
addr16
xor
pop
push
scas
test
in
aam
jnp
mov
stos
insb
fcompl
into
or
scas
jg
jbe
fs
cmpsb
ror
lret
mov
adc
mov
sbb
mov
daa
pop
jbe
decl
mov
jns
xchg
xor
sbb
sbb
std
js
inc
jge
mov
arpl
das
dec
mov
andb
data16
push
mov
mov
shr
sbb
js
inc
mov
mov
add
lcall
jno
sahf
pop
xor
out
push
cmp
adc
loopne
mov
sbbb
imul
std
hlt
lcall
dec
mov
push
jo
in
inc
sti
push
sarl
jge,pn
xor
xlat
insb
xor
mov
aad
insl
popf
clc
jae
rcrb
ja
pop
es
dec
in
jge
shrl
ret
inc
jo
popf
sub
sbb
mov
push
or
mov
addr16
push
sbb
repnz
push
xor
or
xchg
pushf
sbb
inc
icebp
imul
jg
push
fldenv
sub
jl
ds
faddl
mov
pusha
aam
mov
scas
xchg
mov
cld
fdivrs
pop
cwtl
or
push
push
add
mov
aam
lahf
movsl
pop
adcb
inc
fmul
js
mov
pop
push
xor
testb
insb
test
pop
lcall
sub
adc
pop
test
dec
xchg
mov
sar
lods
pop
jp
add
cmp
int
mov
aad
std
pop
jne
dec
mov
pop
jmp
or
sbb
nop
cmpb
cmpsb
loopne
and
aad
mov
js
push
jmp
cltd
ja
adc
ljmp
fistl
fidivl
mov
aad
aaa
repz
xchg
sbb
xorb
mov
sbb
ret
sbb
inc
inc
or
nop
shll
mov
mov
test
ficomps
movsl
ret
dec
out
xor
sbb
add
sti
scas
pop
jge
or
lahf
add
or
pop
xchg
xchg
roll
stos
mov
test
cmp
push
fwait
leave
mov
xchg
sub
inc
dec
lds
out
xchg
or
out
jne
sub
cmc
jp
fimull
cmp
fists
xchg
xchg
dec
push
mov
fldl
mov
cmpsl
imul
aad
sbb
cmpsl
inc
lret
mov
loopne
inc
cmpl
cmpsb
cwtl
mov
mov
dec
push
aas
push
lret
add
xlat
lcall
cmp
push
xchg
dec
fcmovnb
lcall
add
loop
repz
sbb
jne
sbb
xchg
mov
stc
rol
dec
mov
cwtd
in
and
repz
jge
es
out
jo
outsb
cmp
mov
sub
pushf
and
push
push
sub
lret
inc
dec
mov
andb
xchg
ror
push
mov
mov
fsubs
lock
movsb
sub
loope
dec
out
cmp
mov
push
aas
push
mov
jmp
mov
scas
sbb
mov
xchg
pushf
sub
xor
sbb
lahf
loope
mov
int3
out
sbb
leave
clc
stc
sbb
pop
xor
jae
mov
fcmovbe
mov
or
enter
vmovapd
ss
dec
cmpsl
ja
lret
sub
bound
xchg
jbe
push
es
mov
inc
xor
mov
icebp
cmpsb
and
bound
fisubrl
movsl
jbe
clc
lods
xor
xchg
mov
add
jmp
faddl
cmc
into
xlat
jns
xchg
testb
sub
add
fistpll
xor
jge
js
fdivs
jo
daa
mov
fdivl
repz
add
lcall
inc
push
jne
add
addr16
pop
sti
das
jne
xchg
dec
mov
rcl
fistl
movsb
pushf
push
mov
cvtps2pi
das
jne
loopne
fisttpl
xchg
test
fisttpll
xchg
push
xchg
popf
sub
push
dec
out
xor
or
cmp
xor
in
popa
int3
daa
std
shlb
xchg
mov
jne
cmc
add
stos
jbe
add
jno
lret
mov
cmp
push
in
push
xor
sub
sub
pop
xchg
int3
push
imul
and
in
aad
mov
stos
loopne
ja
ror
adc
movsb
xlat
add
iret
jl
add
cmpsl
add
push
mov
sti
in
jo
sahf
pop
mov
insl
out
arpl
add
int
dec
ffree
add
lods
adc
mov
xchg
add
movsl
jle
idiv
adc
pushf
data16
jl
cmpsb
dec
inc
pop
inc
leave
pop
jb
repz
jns
lock
ja
ja
lret
mov
ljmp
adc
push
fdivrs
scas
xor
adc
icebp
xor
dec
mov
fs
repnz
xbegin
jle
jo
or
popl
dec
lods
es
roll
fsubs
leave
std
inc
xor
loopne
ds
leave
popa
pop
adc
jl
cmp
push
adc
add
or
outsl
aad
scas
sub
pop
and
cwtl
outsb
je
lcall
mov
xor
sbb
or
lahf
inc
in
push
mov
cmpsl
imul
lds
jle
hlt
sbb
popa
outsl
roll
jbe
add
mov
data16
mov
adc
lock
cli
xchg
or
fwait
hlt
inc
and
jnp
add
aas
cmp
aaa
jmp
test
jns
mov
and
repz
stc
pop
movsb
add
jno
int
js
xor
cmc
sub
fcmovb
cwtl
and
push
push
fldenv
or
call
out
mov
div
xlat
xor
inc
addr16
rorb
dec
mov
push
stos
shrl
sbb
std
movsl
out
mov
insl
cmp
mov
addr16
loope
es
divb
and
inc
in
mov
push
pop
int3
lea
cmc
xchg
sub
push
adc
hlt
jp
or
xor
pop
xlat
ficomps
jo
pop
clc
aad
dec
ret
sub
push
ret
xchg
or
fwait
mov
xor
std
sbb
jbe
aas
sahf
pusha
mov
ret
dec
jmp
xchg
dec
shlb
js
test
cmp
xchg
push
out
bound
cmp
mov
pop
mov
shl
xchg
jne
sbb
fucomip
dec
or
xchg
inc
aaa
and
fwait
xchg
mov
enter
and
lcall
addr16
push
ret
push
sub
je
flds
int3
push
test
cmpsb
test
add
pusha
mov
dec
rcrb
aam
pop
sbb
dec
xchg
dec
ret
ja
adc
sbb
and
fs
pop
push
popf
sub
push
jg
push
sbb
fiadds
or
mov
or
psubq
orl
xchg
daa
fimull
inc
je
pop
mov
sub
fsubrl
orl
add
sub
mov
imulb
aas
xor
insl
xchg
ja
movsb
ret
jns
fwait
mov
cli
push
pop
add
nop
popf
xor
addr16
jecxz
stc
dec
sbb
push
mov
cltd
mov
or
push
pusha
leave
sbb
mov
cli
repnz
cmp
inc
or
mov
sbb
cmp
test
mov
adc
adc
aaa
mov
fpatan
pushl
push
dec
or
push
jno
dec
fsub
dec
lds
iret
enter
sub
lds
cwtl
stos
mov
xchg
xchg
push
sti
jg
call
sbb
aad
rep
pusha
int3
stos
lret
fwait
popf
rcr
cmp
sbbb
and
loope
stos
push
pop
dec
dec
dec
and
shll
xchg
mov
lock
int
and
inc
test
in
jge
push
out
sbb
jg
icebp
mov
mov
jle
rorl
mov
jo
mov
lock
into
add
push
xor
bound
test
and
rorb
mov
in
cli
insb
icebp
shrb
dec
or
adc
add
out
pop
hlt
pop
sub
es
mov
and
in
adc
popa
sahf
fdivs
jle
push
mov
ss
inc
xchg
insl
push
mov
xchg
ss
xchg
xor
int
loop
movsl
je
in
fs
jne
lods
cmp
add
jmp
cmp
jne
push
dec
jns
loopne
mov
test
and
fwait
adc
imul
fistps
fnstenv
jns
sbb
dec
xchg
and
lcall
dec
imul
ds
rol
adc
jle
mov
sub
in
inc
pushf
out
pusha
cmp
loopne
cwtl
or
sub
iret
sub
adc
shl
xor
das
es
mov
xchg
pop
mov
xor
cmp
sbb
push
sahf
ret
cli
sbb
mov
cmp
inc
test
ret
mov
ficoms
mov
push
test
push
in
jl
into
sbb
ror
xor
arpl
stos
mov
lock
je
scas
or
fwait
js
push
xor
jno
xchg
jl
movsb
imul
lock
in
repz
jnp
add
inc
cli
inc
add
pushf
or
es
push
loope
mov
test
fdivl
cmpb
jle
jg
push
fcoms
sub
aad
loopne
adc
dec
lcall
inc
inc
pusha
inc
outsb
aam
int
outsl
cmp
xchg
push
push
pushl
cmpsl
shlb
das
push
cmpsb
fadds
dec
stos
pop
pop
dec
ja
sub
data16
inc
mov
scas
xor
aaa
stos
add
imul
push
movsl
mov
jo
int3
or
jmp
mulb
cmc
in
or
mov
sbb
jne
push
ja
lret
mov
push
nop
or
in
sti
or
sub
mulb
inc
rcrl
out
jnp
and
lahf
subl
cmpsl
addr16
rorb
xchg
or
mov
xchg
and
fdivrl
repnz
xor
lahf
xor
repz
dec
xchg
test
scas
pop
repz
daa
lcall
fwait
lods
out
and
mov
lcall
cmp
je
xlat
aas
cmp
ficoml
cmc
sbb
push
pop
add
in
sub
in
ret
add
xor
fisubrl
test
hlt
bound
push
jmp
or
adc
mov
lods
enter
lods
hlt
std
adc
xchg
sub
pusha
aaa
nop
cmp
out
into
or
orb
jge
mov
sbb
or
addr16
cmc
jne
mov
add
push
push
mov
roll
sub
push
aas
ljmp
fisttpl
add
loopne
arpl
int
pushf
cli
push
push
xchg
fcmovnbe
lea
mov
into
jg
mov
sar
push
jnp
push
and
lock
pop
imul
loopne
mov
movb
in
fcmovnu
add
ror
jge
push
jmp
adc
outsb
faddl
jae
mov
inc
dec
sbbb
dec
and
and
dec
lods
daa
xchg
jmp
cld
mov
adc
stos
cltd
xchg
adc
xor
cs
mov
mov
int3
push
fcmovnu
fldenv
pushf
insl
mov
hlt
rclb
fdivr
lret
add
and
pushf
sarb
ds
push
mov
and
mov
mov
iret
push
cltd
push
stos
cmpsl
aad
push
pop
shlb
xor
and
sbb
test
mov
sbb
xor
adcl
je
sub
pop
mov
or
popa
jecxz
adc
dec
pop
push
mov
mov
sub
lret
andl
adc
xchg
jg
lods
inc
lret
pop
loopne
cmc
fidivrs
mov
mov
add
pop
addr16
jo
int
sahf
mov
pop
stos
sahf
add
xacquire
xchg
js
add
and
and
leave
enter
mov
mov
popa
mov
xor
adc
repz
mov
xchg
leave
ljmp
sbb
lret
sub
imul
lods
xchg
cmp
lds
aam
das
jne
xchg
dec
scas
xchg
add
roll
lret
ja
mov
iret
in
inc
cld
adcb
add
daa
lea
scas
arpl
movsl
call
lahf
add
add
btr
subb
dec
imul
cmp
sub
pop
add
jmp
cmp
mov
sbb
insb
and
inc
mov
push
mov
jmp
mov
insb
sbb
dec
jecxz
scas
loop
nop
xchg
addl
pop
into
cmp
cmp
jle
imul
aam
test
loop
imul
into
mov
in
test
pop
xchg
hlt
mov
xchg
push
xchg
mov
out
xor
subb
lret
fwait
adc
pop
sub
sub
lds
sub
xchg
aas
or
and
loop
stos
mov
push
pop
add
mov
push
inc
and
aad
hlt
lea
mov
out
outsl
filds
repnz
ficompl
adc
stc
mov
or
xor
rcrb
and
test
lcall
xor
mov
pusha
arpl
lahf
mov
js
jnp
mov
addr16
sub
dec
enter
addl
lods
aad
hlt
lcall
mov
ljmp
mov
cmp
and
jmp
or
orb
sbb
fmull
lods
dec
mov
ret
dec
test
xor
in
jb
cmp
into
push
xlat
jnp
xlat
iret
push
ljmp
mov
mov
fldcw
cmp
push
and
test
inc
add
push
ret
fisubs
cmp
cmp
push
add
int3
mov
jl
fcoms
cli
mov
sbb
push
aas
push
push
js
jl
pop
mov
mov
fwait
loopne
hlt
sub
push
sub
push
pop
addr16
scas
xchg
or
cmp
adc
mov
es
mov
xor
into
inc
test
stos
cld
das
fsubl
in
enter
or
mov
ret
pop
jnp
jl
push
or
jo
inc
adc
out
xor
mov
mov
mov
xor
mov
dec
or
cmp
cmp
fs
sub
lea
push
mov
sub
clc
sahf
repz
rolb
out
arpl
pop
popa
xorl
xchg
xor
jp
fldl
insl
movsb
xchg
mov
inc
xlat
jo
bound
sbb
test
add
adc
test
jmp
sbb
pushf
leave
and
shll
dec
lods
mov
mov
adc
jecxz
xchg
repnz
inc
adc
addr16
push
inc
outsl
gs
mov
mov
ss
xor
orl
mov
xchg
pop
dec
cld
add
outsb
sti
xor
fisubrl
hlt
mov
insl
dec
test
int
int
adc
clc
push
inc
and
mov
loope
dec
xchg
mov
movb
cmpsl
cmpsb
ror
ret
dec
pop
mov
out
fwait
mov
ret
repz
sbb
sbb
in
dec
out
xchg
stos
jg
xchg
inc
push
mov
in
pop
cmp
out
dec
and
xchg
fsubrl
sti
sub
fstl
leave
pop
stc
push
pop
push
out
add
add
cmp
dec
cmp
mov
stos
ret
jbe
mov
popf
mov
push
jle
xchg
adc
mov
xor
enter
sub
aas
stc
mov
lods
xor
bound
sub
test
xor
or
mov
push
push
and
bound
sub
push
sub
xor
cmp
rcrl
sub
stos
leave
rol
mov
gs
mov
mov
push
jbe
iret
push
int3
ds
mov
cmp
mov
shrl
std
shlb
in
shlb
jmp
mov
pop
mov
jl
and
dec
lahf
xor
movsb
loope
xchg
js
pop
mov
fnstenv
rcrl
mov
push
fisubrl
jno
sbb
imul
subl
push
outsb
pushf
lret
mov
cmpsl
mov
divl
add
leave
mov
push
in
lcall
imul
in
push
test
iret
xchg
push
roll
adc
insl
imul
add
movsb
xor
pop
out
jae
dec
jecxz
xchg
adc
ja
mov
sbb
and
sub
movsb
daa
ljmp
mov
les
negb
ret
push
test
mov
rorb
xor
mov
cmp
jae
bound
adc
xchg
push
lock
adc
scas
es
fs
and
push
pusha
adc
js
outsl
or
loopne
loope
enter
shlb
mov
adcb
mov
cltd
cmpsl
int
dec
int3
mov
mov
ss
call
mov
jns
push
sahf
sbb
ret
add
int
xchg
pop
std
shrl
push
cmp
jp
daa
clc
out
shrl
and
push
and
xor
sub
notl
add
sbb
cmp
cmpsb
es
test
nop
push
or
inc
push
outsl
es
inc
test
std
adc
loop
mov
pop
jnp
push
addb
andl
out
fmuls
stc
add
mov
fs
sub
outsb
push
stc
fwait
jge
mov
mov
jno
jge
mov
cmc
xchg
adc
jp
push
jmp
mov
and
mov
shll
jnp
and
push
loope
and
imul
imul
scas
flds
inc
imulb
stos
xor
std
pop
stc
sbb
aaa
popf
ljmp
jnp
xor
jnp
push
repz
orl
stos
sub
in
cmp
ret
jecxz
testl
cmc
into
dec
mov
sar
movsb
lea
cmp
mov
dec
and
xchg
mov
or
or
shrl
movsl
xchg
loope
mov
xor
das
sbb
mov
std
ljmp
mov
fcmovu
shr
cmpb
push
add
xor
cmp
jb
pop
ja
bound
rolb
add
or
pusha
repz
lock
or
sub
sbb
scas
inc
or
lcall
sub
dec
mov
and
mov
aam
pop
xchg
cmp
add
test
jl
dec
xor
aas
mov
jae
or
fistl
or
inc
lock
cmc
outsb
stc
enter
push
loop
dec
sti
xorb
or
xor
push
call
inc
sub
push
imul
testl
clc
add
fisubrl
adc
mov
or
ret
mov
push
fstpl
fimuls
out
mov
jns
add
cltd
add
and
adc
mov
pop
add
jle
sub
cmpsl
repnz
sbbb
add
outsl
jmp
mov
cmc
adc
dec
les
fiadds
mov
adcb
push
call
lret
xlat
imul
jbe
add
lahf
ret
ja
cld
jl
or
inc
leave
push
or
sbb
fisubrl
mov
das
das
ret
ret
mov
sahf
int3
mov
push
inc
sbb
jge
pop
into
xor
push
test
mov
out
clc
adc
pop
call
pop
and
xchg
jmp
xchg
pop
popa
ljmp
inc
jmp
push
cwtl
shl
mov
test
movsl
gs
aam
sub
shlb
inc
and
lds
lock
fwait
gs
add
sbb
add
jl
sbb
outsl
cld
adcb
test
mov
and
and
dec
popf
or
insl
insl
inc
inc
repz
pushf
test
lods
cmp
nop
inc
jmp
or
or
and
sub
std
inc
iret
mov
push
xor
and
adc
stc
jb
mov
arpl
loope
xchg
ret
cmp
jp
pop
inc
lahf
bound
cwtl
scas
push
push
fisttps
mov
xchg
push
push
mov
inc
dec
std
pop
andb
jmp
inc
mov
pop
mov
pushf
into
in
sbbb
or
xor
mov
inc
xchg
iret
dec
or
test
test
or
jp
and
stos
mov
and
sbb
jecxz
test
lods
adc
stc
add
out
cld
loop
adc
stos
and
rorl
inc
fildll
pop
lcall
dec
ljmp
dec
mov
repnz
gs
std
cmpsl
and
sub
int
pop
xchg
iret
clc
xor
repnz
dec
jbe
in
mov
sbb
jle
mov
fldt
int3
ret
pushf
ret
in
mov
cmpsl
sub
mov
xchg
pusha
mov
scas
pusha
and
xor
lea
and
mov
sub
pop
jbe
pop
jo
ss
xlat
mov
mov
mov
push
adcl
mov
fcmovne
add
cli
mov
pop
loope
xchg
loop
mov
and
mov
cmp
jbe
cmc
inc
cmpsb
shlb
icebp
fcmovb
adc
loopne
dec
paddw
pop
fdivr
xor
out
sti
mov
inc
in
mov
hlt
fs
shrl
sbb
repz
je
add
into
stos
mov
lea
aad
or
in
jp
arpl
movsl
lcall
pop
adc
sbb
loop
mov
imul
fucom
jg
shrb
jecxz
mov
fnsave
lret
sbb
mov
repnz
sbbb
cmp
out
push
sbb
ss
ficoms
fnstcw
xchg
or
add
loopne
and
in
bound
mov
xchg
insl
enter
and
shrl
and
movq
sarb
insl
inc
pop
add
mov
mov
pop
ret
push
push
lret
mov
cmp
loopne
xor
dec
dec
movsl
in
push
scas
cmp
inc
push
jae
test
outsl
xorb
mov
sub
lock
or
xor
sub
mov
jmp
lret
jne
xor
loope
pop
adc
mov
std
mov
jnp
jno
mov
or
ror
mov
and
or
inc
lods
mov
cmp
pop
cwtl
daa
fadds
pusha
cld
add
jge
out
inc
ja
test
outsb
pop
push
mov
scas
cmpsl
xchg
dec
sahf
mov
dec
shll
shll
add
and
push
pop
imul
sahf
lock
fnstsw
inc
add
cmp
int3
lret
cmp
jle
int3
sub
push
dec
sahf
pusha
std
sbb
push
mov
mov
outsb
cmpsb
cli
push
adc
dec
rclb
push
lret
popf
add
push
int3
fmull
push
mov
cli
daa
outsb
xchg
cs
pop
lods
jo
popf
test
stc
mov
xchg
mov
leave
insb
push
push
outsb
pushf
push
pop
add
add
clc
arpl
dec
mov
rorb
jno
jb
punpcklbw
shl
and
lahf
sub
lret
repz
arpl
jae
jb
jb
dec
pushf
pop
xor
and
mov
iret
sbbb
adc
pop
rcr
jl
scas
call
inc
add
imul
push
mov
ret
inc
lods
sbb
pop
add
rorl
mov
xor
mov
inc
jg
push
test
es
das
shrw
mov
or
cs
out
sbb
aaa
mov
and
pop
mov
sub
shr
adc
cwtl
outsl
arpl
test
xlat
push
mov
je
xchg
pushf
stos
mov
pop
idiv
sub
xchg
inc
adc
jle
xlat
int3
mov
cmpsb
xchg
jmp
into
mov
xchg
pop
insb
gs
push
addr16
push
mov
mov
pop
and
dec
in
mov
lret
insb
lret
fsts
mov
addr16
xorb
js
add
jno
mov
push
pop
sar
mov
push
mov
adc
loop
sarl
push
adc
je
or
adc
movb
push
ds
cmp
fsubl
or
mov
addr16
std
negb
dec
and
pushf
mov
cld
xchg
sbb
ljmp
sbb
fs
flds
mov
or
subb
in
cs
inc
push
loope
insb
dec
xor
stos
inc
loopne
mov
in
inc
leave
dec
xchg
cmpb
lahf
insb
pop
outsl
xor
mov
clc
pop
jb
inc
mov
and
nop
xchg
inc
jns
faddp
and
cmpsl
popl
push
sub
imul
pop
inc
mov
jno
add
aaa
lahf
sbb
xor
jp
lcall
and
sarb
or
cmp
int3
fsubrl
fwait
lock
std
dec
xchg
sbb
pop
pop
pushf
aas
add
imul
xchg
mov
xchg
add
dec
shll
pop
dec
add
out
jbe
or
ja
push
shlb
imul
and
lds
aam
mov
sub
jne
sub
lock
mov
jo
arpl
mov
sub
cmc
fsincos
pop
lret
dec
arpl
jne
mov
pop
jmp
adc
pop
lds
fwait
mov
xor
xchg
leave
add
cmpsl
cmp
and
sub
xor
outsb
insl
inc
rcl
shlb
push
jbe
or
add
xchg
jns
lea
cmp
popa
fisttps
in
mov
xor
xchg
sub
mov
dec
aam
or
jnp
leave
int
sti
inc
or
cmc
mov
ret
sahf
or
or
mov
das
adc
push
pop
and
add
dec
cmp
mov
push
sub
btc
enter
dec
cltd
add
mov
call
add
shll
mov
fisttps
lcall
stos
inc
rcrb
push
push
pop
jle
or
div
push
sti
shrl
fmul
scas
cmp
add
pop
dec
int
decl
fisubs
lret
pop
jnp
xchg
cmpsl
and
mov
lea
outsl
and
and
out
pop
xor
xchg
fildll
div
pop
hlt
add
lods
inc
scas
lea
shll
das
stc
aam
add
mov
mov
call
test
ljmp
outsb
xchg
test
cmp
call
inc
scas
cli
sahf
sub
xchg
pop
cli
xchg
jne
hlt
lret
xchg
mov
repnz
adc
xor
ljmp
iret
in
icebp
mov
mov
add
push
pop
faddp
lahf
cs
mov
mov
pop
xor
ds
xchg
lret
sub
iret
mov
pop
stos
repz
or
xor
pop
sbb
stos
dec
mov
pusha
lahf
sub
push
jno
mov
aad
xchg
add
sti
add
fsubs
jns
pop
inc
je
mov
sub
mov
pop
mov
pop
push
ds
sbb
ds
dec
xchg
pusha
add
jae
mov
mov
jmp
pop
mov
outsl
movsb
stos
mov
xor
cmp
cmpsb
pusha
pop
xchg
fimull
xor
adc
stos
sbb
mov
adc
inc
rcrb
pop
iret
cmp
lds
in
sahf
cmp
shl
jbe
dec
push
stos
out
xlat
cmp
arpl
pop
pop
cwtl
mov
xor
xchg
xor
xchg
pop
jmp
or
pop
not
in
inc
cld
int
aas
dec
mov
push
xchg
pop
cmpsl
js
test
xchg
xor
add
xchg
mov
faddl
inc
and
sahf
dec
sbb
and
popf
loop
cmp
jmp
mov
js
into
jbe
rcrl
mov
lds
push
and
jno
add
cmpsl
cmc
xor
andb
lcall
call
or
pop
adc
jbe
bound
pop
and
lcall
mov
testb
xor
mov
or
ja
movsb
xchg
into
xchg
iret
push
in
mov
popl
iret
lret
cs
cmp
aaa
gs
repz
icebp
xchg
jg
add
push
in
and
inc
sub
loope
sub
add
clc
int
lock
sbb
add
enter
inc
mov
sub
pop
jne
iret
mov
push
adc
movsb
clc
inc
sbb
int3
lret
mov
pop
ffree
fstl
xlat
xor
scas
int3
push
ds
xor
xchg
add
cmp
out
je
shlb
gs
arpl
test
push
out
xor
shlb
mov
dec
mov
ret
cmpsb
stos
cltd
lods
out
jle
inc
scas
cmp
adc
shrl
and
jb
js
xchg
faddl
movsb
cld
enter
je
cmpsl
sub
or
sub
lea
cmp
test
bndstx
dec
dec
push
loop
xor
jecxz
sub
dec
test
cmp
mov
imul
or
aaa
push
push
adc
lods
pop
loope
pop
dec
cmp
pop
push
inc
push
and
push
push
sub
and
pop
aas
jg
test
and
sbb
dec
pop
adc
mov
sahf
jg
iret
mov
icebp
or
adc
and
enter
push
or
std
pop
inc
jo
mov
lcall
and
or
mov
js
callw
stos
test
frstor
sarb
mov
add
je
frstor
js
mov
adc
test
xlat
sahf
dec
ljmp
dec
cmp
xor
test
jbe
loope
cmc
out
enter
aam
leave
scas
add
insl
mov
fcoms
sahf
add
fmul
add
jp
pop
divb
xchg
xor
sti
and
sub
mov
ss
fdivl
cmpsl
insl
pop
inc
iret
movsb
cmpsl
jl
cmp
ljmp
cmp
aam
pop
xchg
rcrb
mov
loop
scas
pop
cmpsl
test
xchg
sub
xor
inc
inc
mov
push
addb
mov
das
jbe
imulb
sbb
cltd
pop
addl
loope
sbb
pop
inc
aas
shll
jo
movb
mov
int3
les
in
adc
sub
sub
jge
push
or
dec
sbb
jg
inc
pop
pop
shl
lahf
testb
mov
lods
mov
lods
push
out
out
cmpsl
xchg
test
inc
xor
jmp
loop
jecxz
lds
push
rcrl
dec
lea
das
bound
pop
mov
jle
sar
and
lret
fiaddl
and
inc
jno
shll
fsubs
jae
fnstsw
mov
xchg
adc
mov
push
add
in
adc
leave
in
cmp
mov
add
inc
xlat
sahf
xchg
mov
sbb
lock
scas
insl
mov
cmp
push
add
or
and
sahf
es
xchg
dec
fstp
out
scas
out
sub
in
ret
ret
inc
aaa
mov
aad
pop
rclb
sbb
mov
fdivrp
mov
fisubrl
fiadds
or
push
and
lods
jmp
leave
mov
mov
mov
and
loope
xrelease
cmp
adc
xorb
jns
mov
jns
loop
pop
imul
call
sbb
sbb
mov
scas
mov
push
test
add
lcall
fmull
les
stc
push
lods
xchg
aas
out
cmp
aaa
ss
and
dec
cli
out
jmp
lret
jg
sub
inc
popf
mov
ret
dec
xchg
and
lods
xor
pop
in
adc
dec
cmp
les
repz
cli
jg
adc
pop
mov
lret
mov
add
adc
sub
sarb
and
cmpl
mov
decb
shlb
ficoms
add
inc
push
mov
push
pop
lds
fnstsw
mov
repnz
mov
mov
xor
add
xchg
rol
pop
ss
fistl
push
push
popa
xor
xchg
imul
sub
lret
iret
jmp
fstps
int3
gs
sarl
sbb
lea
adc
pusha
mov
xchg
cwtl
jns
stos
mov
xor
cltd
pop
fdivrs
or
push
js
ficoml
movsl
les
int
outsb
add
test
leave
push
xchg
cs
mov
xor
and
mov
push
mov
mov
jns
xchg
shll
jge
pop
dec
sub
lods
insb
jne
shll
xor
dec
pop
fidivl
aas
push
adc
das
enter
inc
jb
lret
stos
lea
lahf
aas
inc
popa
fnstsw
movsb
mov
int3
pushf
xchg
xchg
dec
mov
daa
cmpsl
test
xor
cmc
sti
xor
xor
pop
push
inc
imul
jb
int3
and
dec
xchg
push
cmc
in
push
push
cmc
sbb
test
jns
jmp
pusha
dec
test
push
lods
mov
sub
stos
repnz
daa
push
cmp
pusha
sbb
xlat
and
ss
out
rolb
push
mov
out
sar
mov
push
int
faddl
mov
aas
ss
shll
sbb
cmp
add
filds
mov
xor
dec
xor
sbb
imul
test
cmp
mov
popw
rorb
jp
into
aaa
ljmp
add
xor
out
sbb
mov
aas
xchg
pop
jge
lods
fsts
xchg
jb
in
xchg
jno
push
adc
jno
pop
dec
xor
lcall
pop
js
xor
ljmp
fbstp
jnp
movb
and
sarl
adc
jl
movsl
adc
adc
mov
dec
insl
and
jmp
push
jl
sbb
sarb
popf
sahf
repz
mov
cmp
dec
jno
jge
aaa
out
loope
loope
add
iret
cli
inc
movsl
bound
je
push
jg
pop
cmpsl
jno
mov
gs
sub
fnsave
xchg
jnp
arpl
xchg
popa
js
xor
shl
fnclex
mov
mov
popf
sbbl
stos
mov
push
or
dec
es
xor
mov
repnz
or
xor
xor
loope
xor
fdivrp
xchg
or
inc
mov
cmpsb
push
xlat
or
pushl
js
mov
adc
mov
or
mov
outsb
out
jmp
test
repnz
js
andl
cwtl
mov
and
xchg
mov
int3
ficoms
ret
mov
sub
add
inc
out
mov
fs
fdivs
ss
cld
notb
jno
cmp
and
push
jo
jb
mov
daa
shlb
jnp
lods
jmp
fcomp
cmpl
div
mov
adc
ret
adc
sarl
fistl
aam
jp
cmp
inc
mov
mov
or
ljmp
test
rorl
add
xor
xchg
and
out
mov
mov
sbb
div
mov
pop
add
inc
out
jno
or
xchg
push
stc
pop
fidivl
repnz
pop
xlat
data16
fcomp
stos
push
dec
sbb
sar
mov
push
add
mov
mov
repz
in
add
repnz
mov
cld
loopne
dec
lret
mov
stos
gs
enter
inc
and
ljmp
fs
pusha
lea
mov
xchg
dec
jge
leave
dec
xor
pop
lds
outsb
jnp
pusha
adc
popa
pop
inc
movsb
or
mov
gs
mov
ss
jns
add
push
mov
out
in
stc
ret
push
out
add
loope
dec
add
loopne
xchg
add
sbb
xchg
dec
mov
imul
insb
mov
mov
jno
mov
mov
inc
fsts
mov
adc
xor
aam
sub
xchg
cmp
std
lods
test
sbb
pop
push
mov
mov
pop
xor
out
addb
xor
mov
das
lcall
sbb
mov
negb
dec
cs
inc
inc
addr16
or
dec
push
imul
outsb
sub
daa
test
and
sub
andb
push
loope
in
xor
push
sub
jg
mov
jecxz
outsl
push
xor
test
pop
pop
cmp
push
adc
xchg
adc
sub
xchg
mov
lret
in
mov
xor
xor
cmp
pop
imul
mov
fdiv
repz
mov
out
sbb
pop
in
jnp
gs
popa
movsb
adc
push
pop
push
fbld
bnd
test
shlb
sbb
movsl
adc
dec
adc
mov
fwait
arpl
stos
movntps
xor
cmc
push
mov
in
sbb
adc
cmpsb
mov
dec
test
fldenv
sbb
xchg
ljmp
mov
jo
fdivrl
loop
mov
cmp
push
adc
inc
shlb
lret
or
pop
rcrl
cmp
jae
call
dec
ret
fcomps
push
xchg
fwait
push
mov
hlt
cwtl
in
pop
rolb
loopne
dec
sub
fidivl
inc
call
in
leave
jl
add
iret
test
xchg
push
dec
pop
xchg
jne
leave
or
repnz
pushf
fnstcw
test
lea
cmpb
scas
in
and
sbb
out
xorb
test
mov
cmp
add
jnp
lcall
mov
xor
pop
pushf
movsb
dec
jmp
adc
stos
xchg
repnz
pop
jg
add
xor
fistpl
ja
adc
rcrl
mov
fcom
jbe
push
jge
shrl
xchg
pop
dec
nop
inc
sub
mov
adc
mov
out
ret
jge
testl
lods
adc
pushf
inc
out
adc
mov
rcl
ljmp
ss
cwtl
jo
clts
pop
in
shrb
adc
fwait
mov
outsb
pop
pop
and
test
push
repnz
cwtl
imul
pavgw
sti
adc
scas
jmp
mov
jbe
lea
cmp
adc
addb
xchg
sub
sub
fucomp
mov
popa
iret
add
cltd
addr16
adc
jle
movsl
adc
lods
ret
sbb
fadds
popa
cmp
test
movsl
movsb
push
inc
loop
call
inc
daa
iret
outsl
sub
pop
popa
mov
ret
js
movsl
test
mov
mov
push
sub
aaa
outsl
xchg
and
es
dec
mov
lods
js
or
call
push
inc
pushf
aad
jp
xchg
fnstenv
xchg
test
mov
push
loop
dec
jecxz
insl
mov
and
hlt
pop
sub
lea
sub
popf
negl
adc
repz
xor
dec
gs
int
inc
adc
inc
xchg
cmp
cmpsl
xchg
push
fs
jno
rcll
inc
mov
pop
data16
in
enter
daa
mov
pop
mov
sub
lods
inc
lret
or
shrb
sub
nop
fsubp
iret
and
xor
fucomp
std
stc
stc
ljmp
popa
cld
aam
iret
and
cmc
inc
push
jg
push
pop
push
dec
jp
pop
mov
fmull
xor
into
shll
or
jmp
jmp
mov
lea
mov
mov
pop
cld
xor
roll
rcrl
imul
add
xchg
outsl
mov
out
ror
push
inc
cmp
out
cld
mov
mov
jmp
pop
fwait
cltd
dec
stos
mov
xor
pop
and
cmpsb
sub
into
jge
ret
test
test
sbb
push
add
adc
sub
ret
les
mov
and
pop
cmp
push
sti
and
cmp
into
subl
xor
rorb
into
scas
hlt
fwait
push
adc
aaa
incl
mov
add
jns
aaa
dec
mov
leave
xchg
xchg
dec
sbb
andb
adc
test
adc
sbb
flds
test
sbb
dec
and
fstl
test
push
xchg
outsb
jge
aas
cwtl
and
arpl
adc
pop
cmpsl
fdiv
sub
pop
popf
nop
aam
pop
ja
insb
xor
arpl
loopne
insb
popa
lods
mov
inc
mov
movsb
out
leave
jno
and
dec
pop
test
stc
lods
add
and
int
or
mov
fs
rorl
sub
lret
adcb
bnd
add
bound
ljmp
sar
mov
mov
mov
rcr
out
sbbb
jne
xor
cmp
add
cmp
dec
dec
adc
addb
adc
pop
mov
pushf
lds
cmp
insl
loopne
jle
in
and
icebp
sbb
fistl
loope
nop
aaa
imul
xor
pop
mov
movsl
xchg
adc
int
push
dec
xor
test
mov
mov
loopne
mov
xchg
inc
sbb
pop
xchg
cmp
mov
repz
insb
push
js
lds
popf
mov
pop
ss
lock
mov
out
push
pop
jg
lds
adc
test
aam
adc
sahf
sti
mov
jp
ds
cmp
jmp
inc
xchg
sar
jno
or
push
std
mov
in
push
je
xor
pop
stc
inc
stos
jmp
out
mul
dec
sbb
lret
ss
and
ficomps
std
movl
jo
faddl
mov
ljmp
cmp
mov
roll
or
add
mov
les
push
clc
adc
mov
aas
pop
and
add
and
incb
xchg
ret
xor
mov
es
test
adc
cmpsb
and
sbb
dec
inc
stos
cli
cmp
pop
test
lods
int
gs
or
enter
std
xor
loopne
cltd
jnp
iret
dec
ja
xchg
adc
xchg
xor
push
push
mov
es
in
into
je,pn
xchg
push
or
call
dec
in
xchg
fisubrs
mov
mov
adc
sub
fadds
sub
and
inc
dec
jecxz
xchg
mov
scas
cmc
sbb
gs
scas
stos
jl
hlt
xor
lret
sub
lahf
loop
mov
sub
int3
and
out
nop
aam
ror
push
iret
into
sub
sbb
sahf
lret
movsb
jp
jl
insl
pop
rorb
test
add
sub
ret
sbb
gs
cmpsb
cld
mov
xchg
jmp
add
loop
sahf
outsl
shrl
cwtl
mov
inc
mov
aaa
sbb
lcall
subb
cwtl
sbb
and
mov
inc
jnp
ret
nop
cmp
inc
lock
mov
imul
push
lret
sbb
mov
dec
adc
mov
orl
jge
jl
push
js
nop
jbe
jne
and
popa
cmp
xor
or
loope
mov
aaa
aam
mov
std
mov
mov
jg
data16
mov
stos
je
cmp
mov
sub
and
adc
add
xchg
cmp
fsubs
ret
xor
jo
test
cmp
arpl
adc
lds
pushf
sbb
shll
fsubs
icebp
imul
mov
mov
push
inc
cmpsl
sbb
or
cmp
xlat
dec
sbb
cmp
sti
mov
and
cli
mov
cs
out
push
fisubs
ja
jne
loopne
shrl
xor
call
icebp
fmuls
mov
cltd
fistpll
mov
adc
stos
pop
popf
mov
xchg
dec
lods
adc
cmpsl
je
out
lea
pop
ret
int
dec
pop
lea
mov
fldenv
adc
mov
or
int3
pusha
scas
xor
test
add
xchg
neg
jl
cmp
and
add
sbb
mov
push
pop
scas
roll
repnz
ljmp
cltd
icebp
mov
sub
movsb
or
add
lds
mov
enter
sub
sub
sub
daa
mov
pop
lea
fimuls
mov
pop
jmp
cmpb
scas
add
push
inc
mov
aam
enter
mov
into
push
push
cwtl
setp
ss
cwtl
mov
out
add
scas
and
mov
stos
mov
out
mov
and
cmp
das
mov
shll
mov
sarl
jecxz
inc
pop
cmp
bound
sbbl
mov
xchg
inc
mov
mov
rcll
aas
shll
xor
mov
clc
adc
mov
inc
fisttps
pop
int3
jno
pop
pop
scas
out
jge
daa
pop
cli
mov
cwtl
in
gs
clc
cs
xor
ss
xor
scas
loopne
mov
xchg
lods
pop
push
pop
mov
sub
inc
test
add
es
out
aas
lods
mov
sub
inc
mov
lahf
push
pop
and
repnz
lret
push
adc
daa
dec
loopne
insb
cmpsl
jnp
or
lcall
sahf
ret
add
sbb
pop
addr16
lea
loopne
dec
cmp
inc
daa
lcall
sbb
or
sub
pop
adc
mov
outsl
bound
inc
les
cld
xchg
inc
stos
mov
push
sti
std
pop
in
ret
jge
clc
cmc
push
pop
xor
cmpsl
sbb
sar
add
call
arpl
lret
sarb
imul
movsb
in
adc
adc
jmp
inc
faddp
inc
mov
dec
fisttpll
dec
out
xor
push
fldenv
mov
pushf
shlb
cmp
ret
mov
loopne
push
push
mov
clc
mov
xor
add
jmp
je
xor
out
scas
insb
in
dec
movsl
mov
rorl
repz
enter
jne
xor
mov
lds
push
pushf
sbb
push
push
or
cld
sbb
inc
aam
or
repz
js
jno
sbb
sub
push
mov
or
and
js
push
xchg
or
mov
cmpsl
sbb
movsl
pop
cmp
and
sbb
jnp,pt
ja
add
lods
sarb
cmp
stos
and
cmp
push
push
add
mov
test
inc
sbb
data16
lock
movsl
mov
add
movl
cmp
insl
mov
adc
xor
popa
idiv
and
imul
adc
pop
adc
or
divb
arpl
mov
xor
rorb
or
ja
ss
popf
cmp
jbe
jo
ficomps
movsl
and
pop
pop
mov
aam
mov
push
insl
bound
push
ja
mov
std
sbb
cmp
or
jbe
fwait
mov
mov
fbld
in
add
data16
addb
ja
sbb
mov
aam
popf
and
pop
jbe
xchg
cwtl
jl
jmp
inc
bound
cmp
fcoml
dec
filds
mov
sbb
and
pop
mov
pop
xor
mov
icebp
inc
fwait
cmp
or
or
push
add
aad
inc
stos
and
jl
pop
jne
sbb
in
xchg
push
fcoml
dec
enter
dec
xor
mov
aam
cmp
iretw
repz
pusha
iret
ds
sti
int3
cmpsb
fs
fdivr
cmc
fcoml
or
xor
mov
inc
pop
mov
cli
xlat
or
mulb
into
lret
out
sub
sub
and
cmpb
cltd
fldl
and
add
jo
xor
movsb
fwait
leave
pop
loope
pop
pop
out
cmp
dec
icebp
jge
pop
cltd
xor
lahf
pusha
pushf
cli
pop
imul
ds
or
imul
rorl
fs
mov
push
push
dec
mov
insb
cmp
or
ss
or
stos
loopne
lds
in
popa
sbb
pop
cmpsb
out
icebp
xor
inc
ss
bound
stc
cli
imul
sbb
pushf
out
mov
mov
adc
jno
in
and
push
int3
bts
test
xchg
dec
push
stc
xorl
lea
hlt
mov
adc
pop
push
lds
outsb
enter
jmp
ror
push
mov
fs
jg
xor
push
jp
xchg
andb
push
sub
fisubrl
stc
mov
in
stos
adc
cmp
hlt
add
xchg
adc
cltd
sub
and
jecxz
ljmp
neg
mov
dec
jb
cmp
pop
dec
std
cld
jae
sbb
pop
call
cltd
pop
ss
dec
and
mov
adc
mov
mov
int3
mov
dec
or
push
aad
lret
mov
scas
das
lcall
inc
push
mov
inc
dec
push
mov
push
push
and
jno
flds
push
sub
sub
call
xor
pop
adc
push
jecxz
or
into
testl
int
mov
js
mov
xchg
or
xchg
push
fistps
adc
pop
aaa
movsb
xchg
mov
movl
and
mov
lahf
data16
in
or
cmpl
lret
mov
test
stc
fnstenv
fmul
out
out
add
arpl
mov
clc
cmpl
js
dec
ret
scas
add
fcomps
shrb
cli
nopl
sbb
out
clc
or
xchg
xor
mov
dec
rcl
mov
xlat
out
insl
sahf
ret
xor
jl
push
inc
xchg
sub
and
and
push
out
sub
je
xor
pop
sub
jbe
out
sbb
imul
es
sbb
imul
mov
mov
subl
sahf
pop
das
lcall
xor
mov
mov
outsl
bound
sub
popf
push
ljmp
into
jmp
in
leave
bound
sbb
call
gs
adc
mov
clc
and
cld
or
fnstsw
add
and
les
rcr
movsb
pusha
inc
jge
dec
test
fmul
and
xchg
pop
shlb
lock
addl
push
loope
push
rcll
cs
ficomps
scas
adc
js
lds
cmp
fs
fwait
pop
cmp
cmp
fcompl
jmp
inc
xchg
and
stc
fs
bound
and
cs
fisubrl
jnp
mull
dec
adc
test
pop
push
insb
jnp
or
ljmp
mov
cmp
loop
jnp
and
jb
push
test
shll
fildll
bound
push
xor
cltd
scas
add
pop
mov
push
rcrb
scas
pop
mov
aaa
mov
jns
add
aad
je
adc
xchg
pushf
xlat
jg
out
pushf
in
repnz
or
mov
rclb
sub
shlb
ds
cmp
mov
xchg
push
add
jnp
mov
out
inc
lcall
les
xchg
mov
pusha
jbe
inc
mov
popa
adc
loopne
adc
add
jno
inc
dec
lret
push
sbb
cld
push
xchg
call
dec
dec
cmp
aam
rcrb
sbb
inc
roll
xchg
rorb
fldl
negl
sub
mov
sbbl
adc
mov
and
mov
pusha
test
cmpsb
test
es
insb
mov
cli
rcl
push
shlb
mov
xchg
mov
nop
mov
out
sbb
aam
lret
inc
jg
jne
in
shrl
dec
les
mov
icebp
and
inc
mov
fs
adc
jne
cld
hlt
xor
arpl
sahf
aas
adc
adc
dec
cmp
adc
xor
xchg
pushl
imul
mov
je
dec
xchg
movsb
push
sub
ficomps
jae
in
push
std
in
loop
xchg
cld
inc
or
xor
in
add
into
aam
pop
fs
fldl
es
fidivrs
aad
xchg
fcomp
jo
push
xchg
sub
xchg
push
jno
xor
rol
add
cmp
push
loop
fwait
test
jne
xchg
mov
sub
sub
lahf
scas
mov
aad
jns
andb
mov
sti
addr16
mov
xchg
pop
negl
adc
mov
ffreep
push
inc
mov
cmc
push
jne
mov
xchg
sbb
aaa
iret
je
pusha
mov
std
push
jb
popf
cld
inc
aas
add
sahf
and
gs
call
inc
ljmp
push
les
adc
sub
inc
es
js
xchg
dec
rorb
mov
insl
sti
mov
call
cmpl
inc
loopne
inc
lahf
mov
lods
gs
sbb
sbb
adc
imull
test
or
int3
pop
aaa
push
std
cs
das
shl
dec
testl
out
lods
bound
or
ds
fisubrs
cmp
cmp
insb
adc
cmpsb
push
jne
test
jl
sbb
xlat
addr16
outsl
jae
sub
push
cmp
test
xlat
push
out
fistpl
sbb
push
mov
fildll
push
lods
or
jb
sbb
inc
mov
shll
jb
xchg
xlat
jno
data16
cmc
jbe
inc
cmp
mov
mov
fldl
sub
icebp
push
in
mov
mov
xlat
sbb
ljmp
sub
mov
adc
bound
jns
mov
and
add
dec
fs
and
popf
add
mov
out
add
push
das
mov
ds
sar
lods
push
int3
daa
dec
int
mov
inc
es
jmp
inc
xchg
pop
js
adc
mov
cld
outsb
sbb
and
xchg
into
mov
mov
roll
and
xchg
mov
mov
mov
sbb
cmp
push
xor
xor
sarl
std
mov
mov
mov
mov
sub
or
leave
test
mov
popa
lods
pop
pop
dec
mov
lea
xor
repz
loope
out
ds
or
jecxz
imul
cmp
out
or
fmulp
or
sahf
and
imul
cmp
cmp
xchg
fmull
xchg
popa
cmp
daa
xor
int3
fsubrp
dec
stos
inc
mov
jmp
push
sbb
int
sub
popa
push
xor
outsb
lods
cmp
sarb
outsl
mov
and
xor
enter
jo
jnp
ljmp
stos
stos
lcall
lahf
dec
jle
out
push
out
pop
add
and
addr16
push
shll
test
lret
jno
sub
dec
dec
imul
imul
inc
xorb
inc
in
or
pop
jge
lds
pop
pop
cmpsl
cmp
dec
loopne
jnp
push
lea
and
jne
jb
jno
mov
xchg
addl
imul
xor
enter
pop
mov
sub
xchg
push
les
scas
pop
mov
jge
les
pop
test
xlat
addb
stc
dec
ret
jne
xlat
dec
out
xor
repz
and
outsl
int3
dec
mov
push
add
cld
xor
or
cmp
push
mov
enter
push
push
aam
pop
mov
adc
push
push
mov
add
movsl
mov
out
push
jecxz
lds
lcall
mov
jmp
adc
stos
out
cmp
mov
mov
add
popf
movsl
push
rorb
loope
dec
sub
add
loop
jecxz
or
dec
jno
push
add
pop
jmp
lcall
xor
movsb
icebp
jge
push
loop
mov
pusha
mov
lods
adc
rcrb
fsubr
imul
mov
in
int3
mov
stos
lret
loopne
jae
pop
dec
ds
pop
cmp
push
pop
mov
lock
push
pop
lret
icebp
lcall
push
nop
roll
inc
mov
cmp
mov
shrl
scas
adc
mov
scas
lret
xor
fisttpll
mov
fnstsw
psubsb
loope
out
xor
pusha
dec
das
and
ret
pop
adc
mov
mov
pop
imul
pop
mov
jns
jmp
les
in
push
mov
push
cmpb
pop
inc
xor
hlt
dec
sub
aad
xchg
clc
and
jbe
mov
add
push
enter
into
out
jbe
sbb
lods
test
int3
mov
dec
movsb
mov
and
cli
add
fcmovu
add
add
ja
retw
jbe
or
cmc
shrb
rclb
cmp
sar
xor
fadd
cmc
dec
leave
cmp
xlat
mov
mov
jo
sbb
and
outsl
pop
ror
adc
mov
dec
and
pusha
js
adc
mov
test
test
mov
lret
sbb
repnz
jbe
push
xor
mov
lock
adc
jp
xchg
add
pop
scas
jmp
shlb
add
jmp
jnp
push
or
jnp
inc
push
fdivrl
lcall
push
sub
movd
cmpsb
leave
ja
pop
arpl
in
push
add
pop
push
mov
aam
lahf
add
fcom
push
into
shr
or
xor
into
cmp
sbb
cmpb
outsl
sub
add
xchg
dec
xlat
mov
daa
mov
xrelease
dec
in
es
mov
xor
lcall
cltd
rol
adcb
jns
jnp
dec
in
push
pop
in
fbld
out
push
fs
inc
out
sarl
loop
pop
lret
in
in
mov
add
inc
testb
xor
test
lods
pop
shlb
aaa
push
and
stc
mov
lods
xchg
insl
dec
and
push
divl
push
mov
and
sbb
mov
or
push
sbbl
xor
data16
mov
xlat
push
addl
pop
jecxz
push
sub
jmp
rorl
nop
or
sahf
ljmp
fmulp
sbb
mov
pop
jns
jmp
xor
dec
mov
in
cmp
adc
mov
add
cmc
ret
add
cmc
ficoms
mov
loop
icebp
fs
sub
push
xchg
pushf
xor
xor
repnz
fs
jmp
leave
aaa
add
fs
pop
pop
imul
rclb
dec
ret
mov
in
ss
cmp
jmp
sbb
push
ror
mov
inc
lods
add
repnz
xchg
aad
pop
lret
jnp
iret
push
dec
int
rclb
arpl
repnz
push
dec
add
push
mov
int3
test
enter
dec
jecxz
jg
call
push
sti
sub
inc
mov
movsb
fs
cmp
test
dec
jbe
ret
sbb
nop
pop
enter
jmp
xchg
fimull
jb
cmp
cwtl
sbb
daa
bswap
lods
ss
cs
ret
sub
mov
lods
fsts
push
icebp
xor
or
pusha
dec
adc
shll
dec
orb
fsts
or
dec
or
mov
scas
scas
pop
add
fsts
arpl
loope
xor
stc
push
xchg
lods
add
push
sbb
xchg
sub
mov
sbb
shrl
aad
jge
and
sbb
xlat
repnz
aam
jg
push
std
mov
cmp
popa
push
pop
fcoms
test
push
fwait
lret
cli
test
adc
ss
jns
mov
call
adc
mov
scas
imul
lret
inc
clc
faddl
mov
aas
xchg
push
or
hlt
dec
or
addl
inc
mov
sub
icebp
xchg
xchg
and
xchg
leave
movsb
int
repz
mov
and
lds
in
nop
std
xchg
sub
mov
fs
jbe
push
lahf
mov
fs
jb
mov
mov
aad
inc
xchg
lret
push
imul
mov
mov
call
iret
mov
jae
mov
mov
push
mov
mov
fistl
sub
inc
sub
clc
loop
mov
adc
mov
cmp
loope
popf
dec
dec
sub
mov
dec
xchg
jge
jno
faddl
xchg
in
cltd
jnp
mov
pop
add
in
cltd
jne
inc
cmp
adc
sbb
cmpb
fbld
push
and
add
cld
cmpl
mov
or
lods
jno
dec
mov
fwait
inc
fs
mov
sub
mov
jmp
rorb
jb
or
mov
pop
icebp
pop
loop
or
adc
cli
shll
movsl
bound
scas
mov
jne
jle
outsl
cli
ljmp
popa
pop
mov
jbe
cltd
div
cld
cs
sub
hlt
insb
dec
aam
in
rclb
test
fwait
sub
fnstenv
cmp
push
in
mov
push
push
jmp
pop
cmpsl
xchg
push
int
arpl
push
xor
dec
xor
jmp
daa
inc
mov
fbld
mov
or
push
cltd
scas
adc
adc
push
dec
add
mov
sarl
lcall
mov
xchg
mov
or
test
jno
insb
imul
push
push
or
xchg
out
push
push
sbb
fisubl
add
xor
sti
sub
divb
ss
push
movsl
adc
sbb
pop
fninit
inc
lock
out
ret
aas
adc
data16
lahf
cmp
mov
sbb
loop
mov
movlps
mov
flds
pop
dec
popf
popf
xor
daa
pop
adc
jecxz
loope
icebp
into
rorb
push
pop
xor
lahf
out
lret
xchg
loopne
cmp
mov
in
popa
sub
mov
xor
mov
sub
sub
mov
and
adc
lods
orl
loope
rcrl
jg
sahf
in
test
mov
mov
jne
lock
add
adc
sub
push
and
addr16
pop
enter
dec
decl
mov
add
mov
into
fadds
and
clc
cmp
idivb
mov
sbb
and
adc
xchg
popf
movsb
push
rcll
mov
inc
or
inc
xchg
add
cld
arpl
add
outsl
outsb
mov
cli
dec
fs
cmp
clc
shrl
jmp
testb
dec
inc
mov
fdivrl
pop
inc
stos
fcomps
xchg
add
push
ds
cmp
call
outsl
xor
sub
pop
mov
pop
push
fmull
cmp
out
push
pop
xlat
cmp
icebp
stos
xchg
sbb
stc
dec
mov
test
push
inc
or
push
je
or
aas
aas
std
imul
cli
pop
imul
xchg
aad
jmp
push
movsl
inc
cwtl
mov
xor
mov
nop
add
into
dec
lock
cmpl
pop
ja
lret
lods
lods
stc
cmp
xor
fsubs
cwtl
jmp
je
dec
mov
sub
xor
mov
lcall
mov
dec
mov
outsl
inc
push
inc
mov
outsl
xor
popf
mov
or
rclb
fst
out
cmpsl
add
cmp
sbb
cmp
mov
pusha
adc
cmc
xor
dec
jne
imul
mov
mov
mov
inc
test
jmp
xchg
jg
ss
and
cmc
outsl
pop
filds
scas
and
sbb
sub
test
xchg
lea
sub
pop
cmc
xchg
inc
lcall
xchg
addr16
jl
sub
rclb
lret
loop
add
aad
mov
mov
dec
pushf
inc
repnz
repnz
cmpsb
xchg
or
sbb
adc
mov
imul
enter
jno
popf
sub
gs
xor
sahf
add
pop
hlt
adc
leave
lods
mov
xor
rclb
std
mov
mov
mov
mov
and
fsts
aad
insb
in
xchg
imul
arpl
or
xchg
push
out
sub
xchg
das
ret
lret
push
subb
lcall
jae
repz
mov
xor
adc
cld
jae
jo
inc
test
xor
xchg
lahf
mov
ret
sub
std
js
jle
loop
mov
lds
ss
les
jbe
push
sbb
mov
add
lea
or
adc
mov
push
fistpl
and
mov
repnz
in
sbb
in
nop
cmpb
call
pop
cmp
mov
les
jnp
shlb
in
mov
scas
and
push
cmpsb
scas
xor
aaa
push
xchg
jnp
clc
popf
pusha
cli
jo
sbb
mov
inc
sahf
repz
enter
dec
enter
add
pop
jne
push
mov
sub
pop
mov
mov
mov
sub
cli
das
inc
dec
push
and
add
dec
out
mov
arpl
insl
hlt
daa
pop
jg
push
pop
xchg
roll
jno
pop
xchg
sub
stos
push
add
xor
pop
pop
cmp
cmc
gs
rclb
jg
xchg
imul
xchg
mov
mov
or
pop
mov
pop
or
and
jecxz
arpl
fistps
cmpsl
aaa
js
clc
and
addl
fwait
mov
mov
sub
lret
and
je
enter
or
dec
ja
scas
mov
int
pop
push
sub
xchg
cmp
jbe
das
jecxz
xchg
jle
stos
test
cmc
shrl
dec
aad
xorl
es
mov
int
and
cmp
mov
div
lock
jno
fists
inc
in
push
mov
sarb
mov
cmp
jo
jecxz
adc
imul
xchg
xchg
icebp
aaa
lahf
jo
ja
mov
push
dec
std
fcoms
outsb
xor
cmp
iret
scas
dec
mov
roll
into
sbb
cwtl
add
inc
cmpsl
repz
adc
mov
push
call
pushf
scas
insb
aam
sbb
les
xor
aaa
mov
movsb
mov
sub
mov
fs
adcb
js
loopne
out
lret
push
cwtl
jb
negl
aam
mov
jge
and
dec
push
push
cmp
jge
inc
pushf
and
push
xor
mov
xor
test
sbb
or
in
or
sub
dec
sub
mov
shr
mov
sbb
push
icebp
and
and
ret
inc
movsl
cmp
or
rol
or
cmp
dec
int3
insl
sub
ds
push
pop
es
and
mov
in
call
jecxz
mov
push
addl
jbe
mov
lea
ljmp
dec
imul
fs
mov
jbe
arpl
mov
mov
lods
mov
fldl
popa
dec
ja
xchg
cmpsl
sahf
sbb
xchg
mov
mov
and
inc
sbb
imul
dec
jnp
xor
mov
outsb
or
stc
mov
pop
jnp
shr
sub
push
sub
shl
js
mov
mov
mov
stos
lahf
pop
shrb
test
xor
mov
push
insb
fisubs
adc
ja
test
mov
gs
mov
cmp
cmpsl
and
jne
into
and
jnp
push
aaa
pop
idivl
sbb
icebp
ds
movsb
mov
pop
mov
pop
andb
xchg
dec
vorps
xor
add
decb
jp
jnp
loopne
mov
xchg
cmp
cmp
mov
pushf
rcll
pop
aaa
ss
add
jb
sbb
sbb
pop
pop
loop
xchg
pop
ret
hlt
push
lds
cltd
mov
jbe
jmp
push
pop
ret
imul
pop
push
in
scas
add
mov
sbb
lds
or
sbb
cmp
sbbb
mov
jb
push
pop
ret
aas
mov
sbb
pop
sbb
jmp
mov
jno
lahf
enter
adc
lret
mov
addr16
and
add
test
je
pop
or
sbb
jp
mov
xchg
lea
inc
enter
in
ja
std
mov
or
or
icebp
dec
xor
lds
dec
and
cmpsb
aas
sbb
and
bound
movsb
js
lods
mov
jo
jp
movl
cmpb
push
pusha
fmulp
jns
pop
pusha
xor
shrl
test
out
ret
data16
test
inc
lods
inc
jl
mov
sub
and
nop
and
cmp
cli
jg
pop
pop
ret
push
dec
pop
aaa
pop
aas
adc
fcoml
mov
cmpsb
lods
cmp
lods
mov
xchg
or
inc
inc
or
jo
lods
fldenv
dec
jbe
in
clc
pop
jl
sbb
mov
push
push
cld
sub
insl
push
xchg
jg
rclb
iret
jle
je
addr16
fisttpl
lret
ljmp
sahf
lret
dec
fldt
bound
xlat
add
sarb
loopne
daa
mov
fwait
xchg
cmp
cmc
lods
add
in
push
xchg
shll
inc
clc
mov
cmp
jp
sbb
test
call
mov
fidivrl
fxam
lds
adcl
inc
stos
jo
jno
xchg
pop
inc
inc
mov
inc
movsl
insl
aam
jo
fwait
cld
xchg
and
movsbl
fs
cmc
lahf
in
dec
jb
aad
fistl
sub
sti
adc
sub
pop
pop
xchg
and
mov
mov
addr16
repz
sub
stos
ret
cmp
push
dec
divb
aam
arpl
sub
push
push
fmuls
jns
push
cld
ret
xchg
test
xchg
and
jnp
jge
movsb
dec
adc
fs
rorl
and
sbb
cmpsb
or
ss
and
call
mov
rolw
xchg
pop
add
gs
mov
xor
cmp
push
inc
adc
insb
or
jmp
aas
xchg
cmp
mov
lds
fmuls
mov
cmc
add
mov
daa
push
adcl
test
inc
cmp
add
mov
mov
mov
fcmovnbe
push
sbb
scas
fs
cmp
pop
pop
ror
pop
cltd
mov
push
mov
xor
inc
mov
and
lea
gs
ja
lahf
inc
dec
push
stos
adc
push
jbe
cmc
je
pop
sub
jmp
push
mov
shlb
jl
mov
pop
pop
leave
lods
fnstcw
pop
lret
pushf
ret
inc
mulb
out
jp
out
mov
fucomp
fldl
int
push
sti
dec
mov
popf
sbb
mov
push
mov
fldt
xor
add
dec
out
dec
inc
jecxz
xchg
mov
sub
jno
hlt
divl
xchg
insb
or
inc
mov
xlat
fucomp
xorb
push
cmpsl
pop
add
and
fs
mov
dec
lcall
mov
cmp
mov
mov
sub
daa
das
mov
aaa
push
ds
lret
daa
adc
mov
in
outsb
jmp
inc
mov
cmp
jns
xor
test
push
xor
andb
filds
shrb
pusha
fistl
jne
push
fistpll
xchg
out
adc
iret
cmc
lock
loopne
cmpsl
repz
or
fiadds
push
push
movsb
in
sbb
inc
sbb
add
mov
dec
cmp
lds
fidivrl
add
add
mov
jp
cld
mov
mov
clc
ret
pop
dec
roll
jecxz
in
mov
in
push
outsl
mov
inc
mov
inc
arpl
xor
inc
scas
inc
xor
shrb
iret
sahf
rolb
andl
es
xlat
pop
lahf
cmp
ret
pushf
mov
lock
mov
xchg
test
call
or
and
fnstenv
cmp
sahf
cmp
push
cmpsb
cmp
in
and
cmp
or
adc
sub
ret
sbb
or
outsl
test
aad
pushf
xor
inc
mov
sbb
add
fistpl
orl
sbb
movsl
cmp
xlat
sub
xor
ljmp
push
or
add
fadd
mov
out
adc
xor
mov
sbb
aaa
loope
and
jle
inc
mov
xor
paddsw
mov
mov
pop
sti
cmp
xor
mov
sub
or
adc
sbb
sbb
pop
lock
jge
push
jge
imul
leave
sbb
dec
nop
jnp
adcl
andb
test
sub
mov
imulb
pop
or
cs
and
fcomps
shr
xchg
mov
daa
inc
in
inc
mov
dec
dec
out
fcoms
mov
mov
lret
fldenv
test
xor
pop
jmp
cmc
jge
pop
call
dec
fdiv
scas
push
and
sbb
mov
out
in
pop
pop
jo
frstor
fisttpl
add
push
hlt
push
push
jp
mov
int
leave
test
cmc
xchg
test
sbb
cmp
sub
cmc
and
cmp
push
push
and
lods
lahf
push
and
inc
ja
cmp
outsb
orl
or
fstpt
cmp
shrl
nop
pop
arpl
orl
push
loope
cwtl
mov
gs
lock
or
pop
fldcw
cmpsb
outsb
ret
push
push
popa
popa
scas
jp
add
dec
fs
ss
rclb
xchg
pop
jno
xchg
adc
mov
push
mov
xchg
mov
or
mov
sbb
loope
and
fistpll
pop
dec
dec
aad
pop
cmp
jnp
leave
dec
push
mov
xchg
arpl
lret
inc
ret
adc
and
jp
adc
incb
iret
mov
out
jmp
push
mov
iret
icebp
pop
les
xchg
push
mov
sub
leave
or
iret
je
push
mov
or
adc
sahf
jns
aam
push
or
mov
popf
mov
inc
add
xchg
test
mov
mov
push
mov
mov
test
jle
jb
sbb
les
adc
aas
loop
repnz
jle
leave
and
fbld
push
add
cmp
jge
ja
sarb
mov
cmp
push
jle
and
jno
sbb
scas
jl
fldt
aam
jecxz
int3
add
dec
lcall
cmp
jmp
out
lahf
add
jbe
adc
adc
sbb
iret
and
push
xor
mov
ret
push
jmp
mov
jae
mov
dec
insl
cmp
cs
push
push
movsb
es
push
lret
sti
in
fdivl
sbb
fdivr
enter
jbe
dec
xor
cmpsb
push
sbb
imul
mov
push
mov
mov
inc
inc
mov
mov
test
pop
mov
dec
js
push
jae
ret
xchg
ja
fs
syscall
xor
inc
lret
or
rolb
in
pop
cmp
mov
add
jmp
sbb
jno
scas
fnstcw
xor
mov
xor
es
and
test
stos
adc
mov
jns
jecxz
jo
xchg
inc
into
cwtl
add
pop
push
jo
outsb
popf
cwtl
jle
pop
repz
sub
dec
sub
push
mov
adc
push
xchg
test
pop
dec
cwtl
cwtl
or
movsl
sub
cmp
scas
mov
xor
push
xor
imul
cltd
xchg
loope
or
fst
cwtl
ja
repz
fidivrl
inc
mov
cmp
lfs
cmp
mov
sbb
adc
aaa
lods
aaa
cmp
xor
push
stos
mov
rcr
bound
lea
call
sbb
sub
adc
repz
or
jae
xor
std
movlps
fcomps
xchg
push
and
mov
sub
cwtl
loop
cmpb
sbb
lret
jmp
push
push
cmp
lcall
or
movsb
repz
inc
adc
stos
sub
lea
scas
jns
sbb
inc
jge
out
ja
pop
test
mov
inc
mov
xchg
mov
pushl
push
sbb
aad
out
xor
pop
movsl
inc
imul
ret
std
fsubr
fdivrl
bound
xor
pop
jmp
cmp
leave
mov
daa
in
dec
ret
cmc
call
push
pusha
test
sub
pushf
adc
movsl
or
pop
stos
ljmp
jge
iret
fimuls
xchg
es
scas
sbb
push
call
fwait
push
notl
enter
hlt
gs
dec
testl
fisttps
out
or
inc
scas
pop
pop
push
cmp
outsl
ficoml
inc
std
cmp
pusha
push
sbb
shlb
stos
arpl
sbb
sub
lret
popa
dec
fsubl
test
mov
mov
mov
and
imul
call
mov
jp
dec
lret
gs
adc
dec
lret
cltd
jne
divb
lods
jp
stos
icebp
insl
jg
test
repnz
sbb
sbb
in
inc
adc
test
pop
cld
idivl
jmp
sub
adc
cmpsl
sub
lahf
mov
out
pop
lock
outsb
call
loopne
enter
bound
mov
es
aam
loopne
call
movsl
orl
test
cmpsb
add
outsl
add
dec
lea
and
jl
jne
mov
sub
lock
inc
jl
pop
sbbb
mov
stos
fisubrs
movsl
jne
xor
out
adc
mov
dec
movsb
fs
dec
push
mov
movsl
xchg
dec
lret
jo
popa
and
in
sbb
inc
and
and
test
mov
dec
test
ret
imul
ja
inc
adc
shrl
ud0
outsb
add
stos
adc
cmp
mov
fstpt
adc
jl
mov
call
pop
mov
push
daa
add
sbb
daa
jnp
stos
jp
mov
popf
imulb
out
push
cs
shrl
rcl
inc
pop
enter
mov
leave
sbbl
mov
aam
sub
push
push
push
adc
xor
xchg
stc
mov
or
insb
fisttpl
mov
inc
fs
and
mov
sub
rorb
repz
sub
sbb
sbb
test
jle
ljmp
in
xchg
fmulp
js
insb
cmpsl
mov
gs
mov
lods
outsb
push
push
popl
pop
xchg
adc
inc
out
mov
inc
out
sub
in
fildl
ds
and
std
pop
repz
mov
mov
xlat
jl
shr
cltd
out
jge
xlat
js
call
inc
mov
leave
and
mov
push
test
dec
scas
mul
sbb
xor
frstor
and
and
hlt
insl
xchg
test
xor
and
jnp
jge
adc
and
in
out
cmpsb
dec
sub
jge
add
mov
mov
cs
dec
into
cmc
cmc
push
scas
subb
loopne
cmc
inc
add
cwtl
js,pt
and
sbbl
add
lods
mov
mov
gs
push
lahf
stos
movsl
xlat
dec
xchg
mulb
sbb
enter
xchg
test
inc
stos
push
fimull
pop
inc
fsubrl
sub
pop
pop
xchg
out
jle
in
jmp
rcrl
adc
cltd
add
cmp
cwtl
mov
enter
mov
pop
pop
inc
jbe
xchg
xchg
fistpll
icebp
cs
add
test
daa
clc
bnd
sub
mov
and
cwtl
inc
inc
lods
or
leave
pusha
push
jp
pushf
out
insb
call
jge
pop
pop
mov
push
sub
js
rcrl
jns
mov
pusha
push
add
aam
sub
lock
imul
test
inc
lods
pop
int
clc
mov
sti
push
pop
xchg
or
aad
xchg
push
inc
test
fldenv
stos
fiadds
dec
add
xchg
push
mov
jne
imul
shrl
out
cmp
test
mov
lret
mov
popf
sub
lds
or
test
or
leave
push
jg
ds
or
or
jne
inc
pop
pop
mov
xor
push
pop
ljmp
add
lret
mov
sti
jbe
movsb
pusha
sub
or
into
insl
stc
out
adc
jl
addb
jge
inc
pop
and
cmp
ljmp
fisubs
divb
cmp
int3
push
daa
lock
pop
ret
push
or
pushf
in
out
cmp
mov
or
loope
and
out
pop
push
aad
incl
stos
push
aam
inc
sahf
ja
xchg
xor
or
push
sub
inc
mov
fcom
xor
pop
sahf
mov
aam
mov
xchg
pop
push
jbe
stos
sub
call
cld
mov
cmp
adc
cmp
jb
dec
pop
xchg
or
mov
xchg
lods
sbb
leave
sbb
std
loopne
int3
stos
fwait
mulb
push
outsl
scas
lods
lret
jne
fucomp
pop
jmp
and
test
sbb
loopne
fidivrs
add
xor
in
sub
std
jbe
nop
adc
call
add
int3
repz
or
xchg
xchg
or
mov
aaa
and
outsl
gs
insl
lds
out
xchg
jl
mov
das
xchg
outsb
cld
fnstsw
add
les
fs
mov
addb
xor
movsb
and
push
lods
or
jne
ljmp
xor
xchg
mov
mov
pop
push
dec
mov
cmpsl
shlb
fidivrs
mov
popa
icebp
mov
setno
dec
push
xor
inc
lods
adc
xor
stos
mov
xchg
loope
and
adc
xchg
cli
push
hlt
js
mov
jge
mov
loope
pop
mov
in
jmp
out
arpl
jmp
mov
dec
incl
xchg
push
xor
mov
jecxz
fcom
pop
or
cmp
adc
mov
lcall
repz
cli
cmpsb
sub
loope
jae
push
packssdw
mov
ja
cmp
andl
mov
fcompl
push
iret
sti
in
adc
scas
roll
adc
mov
out
and
js
stos
mov
aas
aam
shll
outsb
jnp
gs
clc
jmp
neg
jnp
addr16
adc
nop
mov
pop
cwtl
push
mov
push
push
push
mov
dec
out
aaa
push
dec
int
push
out
shl
sub
cwtl
lods
cmp
or
cwtl
jbe
cli
sbb
out
repz
shl
sub
pop
mov
sub
pop
and
data16
daa
aas
jp
inc
mov
add
aad
pop
pop
push
jns
scas
cmp
sti
icebp
xor
fwait
popw
xchg
mov
mov
xchg
push
out
mov
in
mov
add
nop
mov
xchg
addl
mov
pop
mov
or
imul
loop
add
aad
xchg
and
dec
enter
push
jnp
mov
mov
rorl
mov
je
insl
loopne
scas
ja
int3
shll
cmc
push
into
fmull
cmp
cmp
cmpsl
je
dec
pop
sbb
mov
xor
xchg
jne
pop
cmp
sub
cmp
mov
xchg
int3
xor
cwtl
gs
dec
clc
xor
in
cmpsl
es
push
movsb
nop
rolb
test
je
inc
nop
mov
lods
pop
inc
cmp
test
je
or
and
cmpsb
out
adc
sti
pop
in
mov
in
repnz
push
pop
sbbl
in
hlt
cld
mov
or
inc
pop
cmp
mov
xchg
jbe
iret
into
and
inc
mov
jbe
mov
out
cwtl
push
and
and
push
ret
outsb
dec
mov
sbb
inc
adc
sub
add
mov
ja
dec
fwait
push
gs
lret
iret
mov
and
in
daa
mov
lcall
pop
popf
outsb
lret
inc
cs
pop
fsubp
mov
adc
pop
inc
es
or
inc
xchg
repnz
sahf
aaa
mov
lods
test
out
ss
inc
pop
xchg
or
icebp
sahf
cmp
and
bswap
pushf
aam
daa
xorb
xchg
sbb
fldt
stos
mov
adc
or
cmp
jle
mov
xchg
fcmovnbe
jle
mov
and
sub
adc
insb
push
rcrl
lods
insb
xor
mov
and
jg
mov
dec
je
jl
xchg
int3
sahf
dec
xchg
aas
iret
sahf
shll
mov
xchg
adc
lcall
stc
jle
shrb
and
cmp
xor
divb
fdivl
pushf
xchg
shl
jle
bound
into
xchg
xor
adc
iret
sbb
pop
mov
or
xchg
sub
inc
xchg
push
xor
scas
adc
leave
and
sbb
adc
push
jl
mov
add
xchg
movsb
fwait
and
inc
xchg
sub
cmp
and
rcrl
aaa
dec
pop
sahf
jo
icebp
ss
not
cld
cltd
xchg
mov
dec
out
addr16
ficoml
jge
cmp
clc
icebp
push
pushf
xor
imul
push
push
daa
dec
out
insb
jp
sub
clc
pop
add
adc
inc
pop
or
mov
and
xchg
imul
ret
dec
and
jo
sub
push
dec
lods
dec
pop
les
push
fwait
pop
push
popa
or
outsl
idivl
push
daa
jns
in
pop
cmp
outsl
movsl
and
mov
stos
loop
jne
enter
sbb
ss
sbb
scas
dec
ss
jecxz
xlat
sub
adc
adc
pop
imul
sub
jno
lcall
push
jnp
cmpsl
leave
jge
test
mov
mov
jno
in
aad
lea
test
xorb
dec
repz
jmp
jno
cmp
inc
popf
fldcw
loopne
dec
fldl
mov
sub
aas
and
sub
sbb
lret
inc
fisttps
push
cmpsb
lods
push
int
lret
pop
ror
lods
or
push
add
sub
stc
cwtl
push
xor
mov
mov
adc
lahf
pop
lret
jae
add
adc
cmp
jle
mov
xchg
push
sbb
std
adc
dec
int
out
xor
shlb
in
lods
jnp
xchg
aas
xor
pop
subb
fsts
rolb
test
jae
and
or
mov
mov
sbb
fisttps
int
lahf
fstpl
sahf
push
xchg
jns
jb,pn
or
or
cmp
or
xchg
decl
xor
insl
sub
repnz
fcompl
mov
loop
dec
fucomip
add
js
sbb
and
cwtl
push
push
pop
xor
stc
popf
or
scas
sbb
mov
mov
shrb
inc
nop
adcl
dec
dec
je
outsl
in
mov
mov
jge
and
enter
cld
out
pop
cmc
imul
or
insl
and
aad
add
outsl
jp
aas
and
mov
pop
jecxz
test
push
dec
mov
testb
inc
pop
gs
sarb
mov
arpl
cltd
xchg
add
mov
xchg
jne
loopne,pt
sbb
fs
mov
aad
pop
xchg
aaa
push
mov
imul
and
pop
cld
repnz
mov
fidivrl
or
pop
mov
int
addr16
inc
lcall
mov
mov
aaa
mov
in
popa
mov
push
jb
inc
jb
sub
sub
cmpsb
adc
movsl
les
cmpl
pusha
in
ds
inc
mov
xchg
ret
xor
inc
dec
pop
mov
es
sahf
testl
mov
jge
ljmpw
mov
xchg
inc
scas
test
and
mov
cmp
imul
pop
fidivrl
xchg
add
mov
inc
insb
sub
out
mov
and
jecxz
in
fadds
add
loope
jge
out
xor
idiv
pop
imull
push
in
xlat
push
ljmp
shr
and
test
out
arpl
adc
or
mov
decl
add
xchg
nop
fs
mov
sub
jmp
fs
cwtl
aad
enter
xchg
mov
and
mov
cmpsb
push
xchg
mov
mov
icebp
mov
xor
push
aad
mov
sbb
insb
sti
mov
test
aas
rclb
jb
and
or
sbb
or
mov
push
and
loope
stos
and
push
sbb
mov
xchg
cmp
in
xchg
xchg
push
outsl
outsl
divl
jge
jb
and
push
dec
mov
cmp
mov
in
mov
cmp
nop
daa
lret
dec
mov
rcrl
mov
rcrb
loopne
or
xchg
xchg
lcall
inc
mov
adc
popa
mov
arpl
mov
fdiv
sub
ss
ficompl
or
mov
push
shll
test
inc
test
outsl
mov
mov
mov
repz
ljmp
and
cmpsl
fsubrl
xchg
cmc
paddusw
pop
cmpsb
nop
out
jmp
dec
insl
call
in
inc
ljmp
mov
arpl
shrl
or
inc
mov
out
fdivp
jmp
test
sbb
mov
and
sbb
push
in
nop
xorl
cmp
cld
pop
inc
pop
sub
xor
fnsetpm(287
xlat
jmp
inc
jmp
jmp
out
in
xor
mov
mov
mov
ret
loope
or
stc
in
adc
stos
inc
mov
lea
dec
xchg
mov
repz
dec
nop
imul
cmp
sbb
mov
cmpsb
cmp
int3
xchg
mov
cmp
aam
sub
inc
subb
mov
sbb
stos
xor
cmpsb
sbb
mov
mov
jo
dec
scas
aad
shlb
shrb
aaa
prefetch
add
js
fcoml
mov
dec
dec
and
ljmp
jne
nop
js
imul
pushf
inc
cmp
mov
xlat
add
xlat
icebp
jmp
test
xlat
sysret
decb
pusha
sarl
mov
xor
cltd
aaa
into
jmp
and
pop
insb
inc
pop
nop
ja
xchg
stc
hlt
rcll
test
loope
sub
pop
dec
bound
xchg
mov
pop
testb
cs
rol
sbb
pusha
bound
fstpl
inc
aas
repz
mov
mov
sahf
mov
in
fcompl
sahf
cmpsl
push
dec
ret
insb
movsb
jae
xchg
fbld
pusha
test
repz
popf
mov
xlat
in
push
cmp
sub
sbb
insl
neg
test
xchg
cltd
mov
mov
rol
mov
sub
test
insl
sbb
ljmp
cmp
stos
inc
inc
xor
mov
inc
lcall
and
mov
sbb
sbb
je
std
sbb
iret
push
iret
jecxz
cmp
mov
insb
jne
xchg
sub
inc
repnz
push
xor
icebp
rcrl
and
loopne
fistl
jmp
in
adc
mov
decb
mov
cmp
aad
stos
fldl
xchg
jp
xchg
repz
loop
lds
mov
stos
fildll
aaa
jl
out
orb
pop
xchg
mov
sbb
xchg
add
jb
out
in
sbb
mov
pop
out
pop
jo
push
pop
std
sbb
notl
and
and
jno
not
jae
jae
ja
mov
jg
jb
xchg
aaa
xchg
mov
push
add
ret
lea
add
insl
mov
in
out
mov
sub
sbb
rcl
jle
dec
lods
and
xchg
sbb
stos
mov
sbb
dec
sahf
jg
mov
subb
in
xchg
jecxz
movsb
mov
mov
sub
jl
add
or
pop
pop
xchg
clc
sub
aas
test
in
adc
rcl
in
push
xchg
es
mov
in
adcb
lahf
jmp
jp
or
dec
jo
movsb
push
leave
dec
loop
dec
pop
ljmp
pop
pop
loopne
and
cmp
inc
lea
mov
popa
add
test
mov
lret
test
add
inc
push
shrb
pop
cld
jle
dec
scas
mov
shrl
pop
clc
hlt
gs
xchg
push
or
imul
xor
fistpl
adc
repz
test
out
mov
insl
mov
and
addr16
jnp
adc
jnp
mov
les
mov
les
pop
mov
nop
out
xor
neg
sub
mov
mov
jns
or
cmpb
xor
sbb
dec
add
subb
dec
lret
je
xchg
ljmp
mov
rcr
mov
rclb
xchg
adc
test
pop
data16
mov
adc
lcall
dec
mov
and
add
xchg
scas
sbb
cmpsl
push
sub
push
int3
xchg
mov
mov
or
adc
sub
or
dec
jg
shlb
cld
and
insl
dec
jmp
mov
dec
and
ss
shr
aas
imul
movb
repz
inc
pop
into
rorb
add
test
jl
inc
icebp
notb
movsb
insb
mov
mov
popf
repz
xlat
cmp
lret
je
xor
pop
push
rorb
jmp
jp
loope
push
addr16
push
pop
xor
in
mov
xlat
lea
sbb
insl
push
mov
fsubl
pop
push
mov
mov
or
lods
xchg
xchg
xchg
sbb
push
dec
je
jae
dec
sbb
js
push
daa
lds
out
int3
hlt
add
sbb
aam
sub
nop
dec
pop
sub
inc
cwtl
xchg
rcl
inc
mov
cltd
cld
int
sub
xor
orl
xor
fcomp
inc
dec
xchg
inc
rcl
scas
xor
mov
cmc
mov
adc
mov
adc
in
test
out
mov
loopne
xchg
adc
mov
sub
notb
aam
testb
sarb
jecxz
arpl
pop
push
inc
andl
lods
mov
into
in
jae
adc
test
or
jecxz
mov
cmp
dec
out
fdiv
out
int3
push
lods
mov
lods
int3
sbb
out
jb,pt
mov
out
imul
aaa
fbld
or
mov
xchg
lds
mov
ja
repz
mov
add
mov
pop
pop
repnz
lcall
gs
xchg
pop
mov
pop
fdiv
shll
ljmp
cmp
push
sar
frstor
fwait
and
loop
jae
xchg
xchg
xchg
sbb
repnz
cltd
gs
fcompl
dec
or
enter
mov
dec
popa
lahf
mov
sub
fsubs
or
aas
sub
push
dec
mov
clc
push
mov
xor
mov
pop
ja
mov
jae
mov
mov
dec
xor
imul
movsb
fdivrl
xchg
jnp
subb
add
push
js
repnz
shrb
xchg
aaa
rorb
jle
negl
cs
js
mov
xlat
lret
xchg
ficoms
xchg
movsl
jmp
add
add
aas
and
int3
sbb
cmp
dec
ljmp
test
jecxz
ss
js
lret
cli
inc
xchg
mov
fldt
lcall
push
cmp
sahf
mov
movsl
sarb
cld
dec
mov
sbb
cwtl
enter
pop
sbb
jae
pusha
idivb
sub
lods
fxch
cwtl
pop
popf
jge
loop
inc
jl
test
add
fs
lret
adc
pop
jo
sub
add
or
jmp
cmpsl
inc
decl
fildl
cltd
das
dec
or
out
add
sbb
jns
sti
xchg
in
stos
call
sarb
repz
cwtl
rcl
loop
daa
inc
xchg
xchg
dec
sub
pop
aad
dec
pop
mov
push
lret
fcoms
mov
dec
adc
test
std
xor
mov
jle
lea
jne
push
push
lret
mov
rorl
xchg
push
movsl
leave
inc
dec
cmp
dec
clc
inc
jbe
push
sub
adc
scas
mov
xchg
pop
loop
or
and
add
jmp
shlb
negl
xor
xor
fstpt
aad
lods
lods
cmp
xor
sub
or
daa
mov
out
jmp
mov
idivb
pop
xchg
jge
push
shlb
shr
push
test
mov
cmp
in
add
ljmp
hlt
bound
std
dec
xchg
fdivrl
cltd
flds
in
mull
sub
mov
inc
scas
sbb
addl
cli
mov
mov
aad
inc
sahf
push
rcl
sub
adc
xchg
int3
mov
adc
pop
je
mov
imul
leave
adc
fistl
and
mov
pop
jnp
test
aam
cmp
icebp
testb
arpl
loope
jne
aam
push
cltd
out
fwait
mov
dec
lcall
scas
mov
cld
iret
mov
mov
lods
sub
scas
xchg
mov
jnp
subl
std
jmp
inc
mov
push
aaa
aad
adc
pusha
mov
int
mov
imul
mov
xchg
in
scas
jo
push
xchg
test
mov
push
ret
dec
lcall
out
add
inc
or
cmc
push
pop
int
pop
adc
jl
pop
rcrl
pop
xchg
fst
inc
mov
ds
std
pop
push
outsl
pop
pop
pop
in
dec
cmp
xor
mov
add
test
dec
cli
ss
push
mov
dec
pop
scas
lahf
lahf
pop
inc
sbb
scas
mov
sub
repnz
adc
fdiv
xchg
mov
sahf
adc
js
stc
mov
mov
imul
aam
orl
mov
jbe
cmp
lret
dec
pop
jo
test
or
repnz
push
mov
dec
push
pop
push
pusha
lock
inc
push
int3
push
out
fs
call
pop
repnz
sbb
pop
out
inc
adc
push
cmp
xor
inc
xchg
jbe
outsb
mov
push
or
fbld
in
mov
popa
push
mov
cmp
mov
push
stc
adc
cmp
mov
jmp
sub
sbb
mov
in
stc
jl
aaa
or
ffreep
pop
inc
outsb
imul
pop
dec
mov
mov
xchg
jl
insb
xchg
push
mov
out
aam
push
dec
or
mov
xlat
jp
scas
repz
cmp
lret
arpl
pushf
xor
jne
dec
xor
scas
mov
jle
push
pop
repz
aam
mov
into
nop
jbe
or
mov
jno
int
or
test
cmp
dec
xchg
iret
rcr
stos
ret
popa
xchg
xor
dec
mov
lcall
iret
je
fchs
push
into
push
inc
and
dec
jbe
mov
pop
sbb
imul
lock
in
movsl
xchg
sar
adc
mov
stc
ljmp
add
aad
jle
pop
add
pop
in
jecxz
cli
testb
test
test
stos
arpl
jge
inc
test
iret
scas
int3
dec
in
xor
rorl
fdivl
lahf
dec
mov
rorl
xlat
mov
jb
and
and
icebp
outsl
jge
and
loop
clc
jnp
insl
in
mov
sbb
mov
push
push
jecxz
dec
roll
pop
mov
ss
inc
or
faddl
adc
adc
mov
fcmove
lock
fcoms
jge
mov
in
cmp
pop
inc
push
sbb
mov
mov
push
mov
orb
fcmovnbe
sahf
fadds
ret
movsb
jno
arpl
mov
lock
mov
mov
aaa
push
xchg
mov
pop
mov
adc
lods
jnp
ljmp
iret
dec
push
lea
scas
jmp
adc
sub
xor
or
jmp
nop
mov
mov
push
inc
xor
sub
fisubrs
test
mulb
fs
sbb
push
out
push
mov
mov
pop
or
xchg
faddl
push
sub
lock
jae
test
cmp
add
cmc
push
test
mov
push
test
xchg
xchg
xor
insl
sub
push
pusha
in
pop
adc
inc
aam
stc
loopne
mov
sub
pop
call
mov
push
cmpsl
sbb
jge
aaa
mov
aas
push
xchg
dec
pop
fprem
into
cmc
mov
inc
int
ss
jo
test
in
shl
cltd
mov
fld
aad
or
mov
jecxz
sbb
push
imulb
push
iret
mov
mov
out
and
fmuls
xchg
cs
or
or
mov
mov
cs
mov
inc
jne
lds
lret
and
call
loop
xlat
das
xorb
sbb
outsb
xlat
je
push
jns
mov
xor
hlt
xchg
xor
pop
or
jmp
jmp
jl
mov
pop
daa
jb
xor
xor
mov
xor
pop
mov
cmpsl
mov
adc
fldz
inc
dec
mov
test
and
jge
sbb
cmp
fsub
or
dec
mov
loopne
arpl
int3
jo
addl
push
loopne
lret
fs
sbb
movsb
dec
sub
scas
inc
push
lcall
mov
push
sub
ss
imul
dec
push
xor
adc
xchg
mov
xor
add
rcrl
dec
jb
insb
testb
dec
adc
add
mov
mov
in
jno
ret
adc
rep
mov
sbb
and
cmp
and
lret
mov
cmp
dec
mov
cltd
gs
mov
aas
mov
mov
mov
sbb
fsubr
sbb
adc
ret
push
mov
sbb
mov
push
int3
pop
outsb
leave
cmpsl
pop
lea
pushf
scas
jle
dec
adc
aas
fsubrs
or
sbb
testb
mov
icebp
mov
hlt
dec
mull
jg
cwtl
or
fisubs
sub
xor
xlat
daa
shll
imul
jmp
inc
fsubs
mov
mov
add
addr16
invd
add
mov
cmp
xchg
rolb
enter
push
sbb
pop
mov
sbb
or
cmpb
subb
aas
sti
mov
mov
adc
cmp
popf
xchg
fwait
clc
fs
sbb
fisubl
fcomps
or
imul
sarb
sub
leave
pop
push
jo
int
mov
xlat
xchg
lods
jne
hlt
lods
popf
iret
andb
js
daa
int
jp
data16
pop
loopne
mov
push
push
mov
in
dec
and
popf
mov
mov
arpl
dec
in
movsb
les
pop
daa
rorl
inc
mov
cmp
nop
into
cli
mov
or
sub
sub
popw
mov
push
ljmp
loop
add
xor
enter
addb
push
push
mov
or
jge
xor
popf
mov
and
add
mov
movsl
in
stc
adc
fs
cmpsl
jle
ja
xchg
sub
repnz
sarl
popa
pop
and
nop
jnp
pop
cmp
int3
mov
sub
ja
roll
push
ficomps
dec
rsm
cmp
jne
lods
shll
add
inc
mov
cmpl
jge
mov
loope
gs
sbb
cmp
dec
in
movsl
adc
dec
or
xchg
add
sarb
cmp
mov
loopne
dec
cmpsb
xor
cmp
and
xor
movsb
dec
fldl
into
mov
push
pop
js
dec
sub
sub
sub
dec
or
cmp
sbb
jmp
iret
insb
sbb
fisttpl
fsubrs
fs
dec
lcall
rorb
sbb
dec
and
cwtl
adc
loopne
and
push
pop
inc
xor
mov
scas
lds
add
cmp
mov
in
mov
test
mov
or
mov
or
pusha
jle
cpuid
addl
cmp
mov
dec
gs
ja
imul
insl
push
stc
mov
fs
mov
mov
or
xchg
fwait
xlat
dec
mov
mov
test
jp
cmp
and
rcr
fimull
rcrb
sbb
or
mov
out
adc
les
push
outsl
popf
int
and
sbb
add
mov
dec
jae
pop
repz
push
and
scas
sub
cltd
arpl
or
fsubrp
pop
lahf
je
mov
loopne
test
mov
xlat
cmp
insb
lea
jne
shl
test
push
mov
sub
jle,pn
jno
lcall
imul
andb
sbb
imul
adc
in
add
out
cld
and
test
sbb
int
lret
push
adc
push
inc
inc
xor
movsb
mov
mov
mov
das
or
out
xchg
inc
jp
out
sbb
inc
mov
xor
ficompl
std
pop
fsubrp
cltd
aam
and
add
movb
adc
cmpsl
pop
nop
xchg
sub
arpl
xor
out
pop
in
cmp
xchg
mov
movsl
or
aam
popa
adc
adc
adc
mov
push
call
inc
leave
stos
stos
and
cmpsl
in
aam
pop
or
enter
dec
push
pop
cmpsl
xlat
repz
pop
jne
sub
arpl
scas
lret
and
adc
jmp
lahf
jg
movsl
xor
or
sbb
daa
mov
inc
psubw
shl
adc
aas
imul
mov
jl
seto
or
cli
lea
inc
jmp
jmp
cmp
xlat
les
push
push
testb
mov
add
cmp
mov
add
cld
pop
lahf
cmp
dec
fwait
push
int
jg
enter
lret
and
nop
sub
out
sbb
mov
test
xchg
cmp
xor
repz
outsl
fwait
clc
cmp
repz
sbb
xor
dec
clc
push
addr16
das
arpl
popa
xchg
daa
daa
enter
sbb
and
mov
fists
push
xor
les
clc
nop
add
sub
and
inc
pop
inc
mov
and
arpl
push
ja
gs
xchg
lret
xor
mov
or
mov
cli
lret
test
or
pop
add
push
xchg
xor
dec
ret
mov
aam
jbe
dec
imul
dec
sub
arpl
mov
push
xchg
jge
loop
lcall
call
jns
jg
stos
mov
std
pop
xchg
loopne
xchg
and
lock
cmp
inc
insl
push
xor
push
mov
cmpsb
xor
pop
and
xchg
pop
neg
cwtl
outsl
das
popa
sub
dec
cwtl
mov
mov
sub
push
cwtl
inc
pop
into
cmp
mov
jg
cltd
dec
push
fldenv
pop
imul
jo
outsb
test
pop
fiadds
mov
orl
out
xor
pop
pusha
out
ja
arpl
mov
dec
ret
dec
popa
repnz
xor
jmp
and
push
pushf
bound
sub
fs
or
adc
stos
jp
rolb
aaa
test
add
fildl
pop
inc
xchg
jg
or
xchg
scas
xor
movsb
cld
mov
add
sbb
xor
hlt
add
push
bound
xor
call
xchg
jbe
testb
je
ror
fcoml
jmp
aam
xor
jnp
cwtl
icebp
lret
push
fisubrl
jno
pop
arpl
dec
jns
and
leave
aam
test
insb
cmc
or
dec
mov
cmp
repz
shll
sbb
pop
push
mov
enter
es
lcall
lods
pop
add
xor
cmc
adc
add
aam
mov
sub
inc
and
xchg
mov
les
xor
mov
push
fnstenv
pop
inc
sbb
pop
fistpll
inc
adc
fistpl
sbbl
pop
int3
or
push
jno
pop
sahf
jecxz
mov
int
xor
jnp
cmp
mov
xchg
lret
or
pop
cli
jmp
adc
divb
idivb
out
push
jns
rcl
mov
pop
lods
rcr
scas
jne
stc
addr16
jmp
pop
push
shll
inc
cld
mov
pop
pop
add
icebp
lods
fs
or
add
shl
mov
pop
movsl
jg
jp
sub
int
js
jge
or
pop
jo
xor
js
bound
sub
adc
in
fadd
push
int
mov
jl
das
push
mov
pop
icebp
and
iret
pop
es
push
aad
int
lret
in
adc
ficomps
fwait
pop
add
mov
push
test
sub
out
sbb
imul
or
or
cld
scas
imul
ficoml
dec
lahf
loop
push
sbb
fdivrs
dec
jns
or
fisubl
xchg
adc
add
xorl
inc
cmp
in
je
sbb
inc
xchg
sbb
movsl
out
shrl
mulb
jns
rcll
push
bndstx
jmp
fnstsw
mov
xchg
inc
test
aaa
xabort
sahf
not
adc
imul
flds
adc
sarl
in
xchg
loop
sub
jbe
shll
lea
shlb
mov
bound
icebp
jo
xchg
inc
jge
fwait
push
pop
jg
iret
mov
sub
in
leave
rorl
inc
and
filds
add
sub
dec
cmpsb
xchg
jnp
sbb
mov
or
inc
scas
outsl
inc
mov
repnz
jbe
jbe,pt
pop
mov
xor
test
iret
pop
mov
mov
jle
pop
mov
mov
mov
cwtl
jnp
fxtract
and
jg
cmpsl
sbb
out
push
xor
fmuls
in
sub
add
idiv
lret
or
notl
addr16
adc
cmp
push
push
push
lods
mov
jg
sbb
sub
fdivs
mov
dec
adc
ja
push
inc
rcl
sbb
movsb
dec
call
lods
xchg
test
inc
cmp
xor
sub
cmp
insl
outsb
pop
dec
sbb
cmp
pusha
inc
or
mov
pop
cs
fldenv
leave
out
popa
or
push
sbb
pop
loop
adc
jmp
sub
add
cmpsl
rcrb
sarl
lock
fmull
fistpl
sub
in
mov
pop
jl
sbb
xchg
inc
les
add
push
data16
stos
adc
test
out
adcb
inc
pop
test
movswl
mov
pop
or
xchg
xchg
popf
mov
dec
mov
push
push
mov
mov
xor
cmp
mov
insb
gs
fdivrl
sti
xchg
push
jl
enter
outsl
fcomps
testl
dec
sub
jecxz
ror
or
lret
sahf
lods
add
andl
inc
out
ret
dec
sbb
stos
adc
mov
sti
test
adc
insb
push
orl
xchg
xchg
push
outsb
int3
push
in
xchg
call
leave
pop
pop
jge
mov
pop
dec
inc
or
mov
std
and
int3
and
movsb
or
iret
jb
aas
outsb
iret
daa
mov
pop
jnp
cli
sub
lret
jecxz
dec
mov
ret
lods
lods
out
push
fs
xlat
inc
pop
mov
push
int
inc
mov
adc
es
stos
dec
dec
cmpsb
sub
dec
adc
jle
cmp
stos
cwtl
lret
ds
push
scas
stc
mov
test
mov
push
insb
outsl
or
pslld
cmp
mov
repz
push
add
jno
inc
and
pop
xor
scas
imul
xlat
or
lahf
push
sub
test
mov
xor
mov
je
mov
adc
jp
out
cmc
repz
iret
loope
jge
outsl
mov
pop
cmp
mov
les
fnstenv
xor
mov
adcl
xchg
out
cld
pop
scas
mov
xor
push
push
xor
out
mov
mov
mov
xchg
or
test
sub
dec
xchg
xchg
push
or
cltd
rcr
adcb
fists
push
fsts
add
sahf
xor
jmp
pop
rorl
cmp
inc
sub
xchg
out
xlat
mov
and
ss
add
inc
sub
push
push
jae
sub
cmp
sbb
orb
push
add
pop
push
sub
push
pop
in
push
push
aad
and
int3
xchg
pop
in
cli
icebp
mov
lahf
sahf
imul
rcrl
cld
push
cmc
mov
inc
xor
loope
pushw
sub
xor
xchg
cmp
add
pop
enter
in
mov
loopne
popf
lods
adc
sbb
and
xor
adc
out
cmp
xchg
mov
inc
jns
add
xchg
rol
pop
mov
sbb
push
mov
push
daa
add
jg
mov
push
push
daa
add
ficoms
pop
cli
movsl
loopne
mov
je
loopne
mov
and
scas
inc
inc
imul
inc
or
out
sbb
add
xor
xor
sahf
shrl
cli
mov
adc
call
xchg
jb
popf
call
pop
gs
imul
dec
inc
sarb
push
sub
mov
inc
push
and
and
lock
push
inc
nop
and
adc
push
pop
shlb
dec
in
pop
mov
insb
sbb
xchg
aas
sbb
cwtl
xorb
cs
lds
lret
stos
jl
and
or
pop
mov
mov
iret
es
cmp
repnz
aam
pushf
das
cwtl
add
jbe
jo
lahf
and
out
jae
roll
sub
pop
mov
jmp
jbe
scas
ss
repz
adc
cmp
cmp
inc
mov
sub
insb
xchg
inc
and
dec
cmpl
cwtl
mov
push
movsl
sub
adc
notb
fcom
fcoml
add
andl
out
fcmovb
movsb
inc
lret
jle
xor
mov
mov
jno
cmc
jne
pushf
inc
cld
push
jno
or
inc
add
sbb
pop
leave
mov
fsubl
call
jne
loop
xchg
xchg
pop
adc
in
scas
or
cmp
jno
pop
cmp
inc
idivb
aas
xor
cmpsb
popa
xor
xchg
and
shl
icebp
ljmp
lds
sub
cmp
loope
sti
jge
lock
ja
adc
pop
dec
jno
xor
push
push
hlt
popa
inc
stos
ret
sub
push
xchg
sbb
call
mov
sub
push
lods
mov
sub
xchg
pop
adc
jmp
xchg
int3
jb
hlt
push
xchg
and
imulb
repnz
aas
loopne
inc
mov
mov
xchg
inc
mov
inc
mov
shrl
jecxz
xchg
sbb
sbb
add
imul
xchg
mov
adc
push
negl
stc
dec
pop
outsl
out
pop
std
int3
mov
and
pop
mov
adc
iret
jge
dec
loopne
aad
xor
les
dec
mov
orl
adc
sub
loop
clc
lret
dec
inc
pop
daa
bound
xor
fwait
ret
dec
ja
int
in
test
cmp
scas
push
stc
loopne
int3
outsl
aad
mov
popa
add
lret
es
mov
popl
sub
cmp
sub
jl
test
jns
daa
push
push
popf
jp
repz
bnd
sbb
lahf
rcrb
add
or
xchg
xor
bound
ja
fnstcw
xor
jne
scas
push
mov
data16
sahf
daa
cli
ret
add
fimuls
adc
sbb
inc
inc
xchg
adc
mov
ret
xchg
rorb
lods
int
lods
push
pop
xor
hlt
jo
in
outsb
xor
sub
pop
inc
shlb
cmp
lahf
cli
lds
and
inc
cmpsl
stos
mov
push
das
or
xlat
popf
mov
xchg
fwait
mov
loope
aaa
pop
dec
push
je
dec
iret
stos
pop
les
jle
out
adc
rcr
fst
push
dec
outsb
imul
lcall
scas
mov
rcll
sbb
int
outsl
xchg
jne
mov
dec
lea
add
jl
aaa
ja
repnz
scas
lcall
or
inc
lock
pusha
hlt
mov
push
cwtl
jg
push
xchg
or
push
xchg
or
mov
ror
stos
ret
adc
stc
sub
out
aad
out
popa
fistpll
dec
push
push
adc
jne
xchg
mov
add
add
lds
movsl
popf
ret
inc
ret
xchg
call
std
xchg
and
xchg
test
mov
jl
enter
push
and
pop
mov
jae
jmp
ret
adc
stc
in
cmp
in
xchg
mov
inc
mov
lock
shl
sub
int
inc
add
das
and
lcall
mov
adc
push
ljmp
sbb
xor
idiv
movsb
cli
ds
or
push
inc
js
pop
imul
ret
sbb
in
xor
xor
pop
and
das
mov
scas
jecxz
mov
shrl
cmpsb
setne
push
out
into
inc
sub
mov
arpl
and
rorb
hlt
rclb
test
fnstenv
adc
clc
cmpb
push
arpl
jbe
ss
cmovae
and
jg
popa
js
push
sbb
rolb
sbb
arpl
or
dec
fcomi
mov
or
ljmp
or
adc
jle
or
xchg
sub
add
outsb
mov
or
int
push
lods
jecxz
les
imul
out
bound
push
negl
mov
out
mov
aad
mov
pop
idiv
shl
xchg
jmp
daa
pop
mov
out
popa
xchg
pusha
pop
push
adc
push
pop
mov
mov
sarl
and
inc
and
lahf
and
fisubrs
rolb
add
xor
movzbl
or
cld
push
mov
mov
jmp
outsb
jno
sub
mov
movsb
jnp
jmp
mov
movsl
nop
xor
out
lret
mov
aas
push
int3
push
xchg
stc
jne
inc
lds
out
cmp
sbb
sti
popf
pop
jae
test
lcall
out
lods
mov
mov
inc
jmp
lds
testb
ret
and
pop
push
orl
call
shrb
sahf
jp
into
fs
jb
lret
jno
inc
ja
push
pop
sbb
jle
mov
and
int3
stc
cmpsl
mov
mov
cs
sub
popf
inc
pop
dec
dec
cmpl
jmp
pop
jne
mov
sbb
pop
movsb
fbstp
stos
cmp
and
dec
pop
mov
bound
cmp
xchg
pop
inc
inc
rorl
xchg
inc
and
flds
in
in
pop
pusha
data16
jae
sbbl
nop
adcb
adc
push
mov
or
cmpsl
push
mov
xchg
out
xchg
sub
xlat
into
rclb
push
push
pop
pop
adc
ret
es
push
mov
add
fcompl
push
mov
mov
mov
sbb
xchg
mov
adc
cwtl
dec
adc
pop
adc
in
jl
dec
mov
push
sahf
xchg
xchg
shl
adc
ret
jle
inc
inc
jnp
cmpsl
pop
xor
je
in
je
xchg
out
ret
popa
and
popa
nop
int3
fdivl
pop
dec
add
push
push
cmc
dec
mov
insb
xor
lea
ja
adc
inc
popf
out
into
gs
aad
adc
jns
push
jmp
hlt
push
pushf
bound
add
pop
xchg
aam
lods
push
push
pushf
dec
hlt
mov
and
lret
sbb
cmc
push
push
stos
pop
jecxz
out
testb
hlt
xchg
mov
xor
popf
xchg
jecxz
js
push
inc
incl
mov
rcll
xchg
loopne
xor
movsl
push
cli
movsl
add
inc
rorb
or
jo
fwait
jno
aad
mov
push
lcall
or
mov
jg
rcr
dec
xchg
loopne
das
cmp
test
lock
xorb
addl
mov
sbb
cmp
les
mov
sahf
mov
jo
lds
or
adc
repnz
sub
scas
xchg
fadds
imull
mov
adc
aas
cmp
pop
inc
stos
loopne
nop
sbb
jbe
das
add
ss
add
and
clc
pusha
pushf
jns,pt
out
or
mov
popl
fdivl
or
jbe
pop
scas
dec
sbb
gs
mov
push
cltd
sbb
pop
sbb
sbb
sbb
sub
int3
out
dec
popa
sub
jne
sub
push
lods
adc
add
fcomp
mov
xchg
push
js
leave
movq
aad
mov
inc
push
fiadds
das
cmp
add
loope
leave
inc
mov
jecxz
push
fists
outsl
adc
and
in
loop
mov
push
ficoms
jmp
ret
insb
inc
bnd
dec
xchg
cmp
in
fwait
pop
fisubrs
mov
in
adc
daa
cltd
mov
mov
and
pushf
inc
lea
pop
sahf
sub
test
pop
adc
shr
aam
in
xor
movsl
push
cmc
xor
rcrl
ret
repz
in
in
cwtl
stos
es
repnz
jmp
xchg
sbb
pusha
fistpll
pop
fwait
das
fisubrs
push
call
shll
sub
shlb
daa
shll
fnsave
hlt
lods
int
lret
stos
xor
and
aad
pushf
sbb
adc
fmull
notl
ret
inc
das
stos
sub
mov
push
out
xor
rcl
movsl
fdivrl
mov
das
push
mov
cmpsl
pop
nop
adc
fs
fwait
inc
sbb
sub
sti
and
inc
xchg
push
and
ljmp
push
jne
xchg
and
gs
push
lahf
pushf
outsl
setle
popf
mov
pop
out
call
add
pop
dec
mov
jle
inc
icebp
movsl
incb
pushf
xor
jbe
xchg
jns
cmpsl
adc
test
mov
xor
mov
lock
cmpsb
mov
in
sbb
cmp
or
dec
gs
and
sahf
pushf
inc
sub
sub
les
mov
fadd
pushf
xchg
bnd
mov
test
pop
les
test
mov
inc
lds
dec
mov
mov
inc
addr16
std
and
rorb
mov
inc
jns
adc
mov
popa
sub
mov
std
clc
xor
dec
es
js
or
pop
push
loopne
push
lret
sar
in
cmp
mov
cmc
jl
mov
test
jg
in
dec
pushf
mov
push
out
insb
inc
scas
push
pop
mov
push
adc
std
outsb
push
sbb
int
fistpl
push
sub
mov
sub
in
add
add
mov
mov
sbb
iret
inc
mov
loope
in
imul
xor
sbb
dec
mov
mov
and
mov
push
mov
out
push
dec
pop
pop
dec
lods
repz
dec
dec
push
pusha
ficoms
inc
insb
int
push
jl,pt
and
cld
push
arpl
hlt
sub
inc
push
cltd
add
sub
popf
jmp
daa
and
cltd
daa
sbb
das
das
enter
je
xchg
ss
xor
in
mov
mov
adc
lock
jne
dec
add
ficoms
and
mov
out
sbb
sub
add
iret
lock
mov
dec
and
inc
xchg
sbb
out
xchg
pop
outsl
iret
xchg
mov
arpl
cmpsb
adc
jo
add
mov
pop
dec
ret
fsubp
mov
lods
test
ret
push
div
add
jl
mov
mov
mov
push
movsl
jne
scas
and
dec
repnz
cmp
jge
movsb
cld
aas
sub
mov
movsbl
mov
dec
mov
je
push
push
dec
jmp
xor
insb
aaa
mov
icebp
mov
dec
mov
cmp
sbb
mov
dec
mov
or
loopne
nop
mov
or
hlt
scas
out
loop
xlat
or
mov
cmc
dec
ljmp
push
push
daa
mov
fisttpl
out
imul
pop
vmovsldup
sub
dec
loop
fwait
rcl
int3
outsb
and
ret
mov
and
lock
sub
mov
jne
push
fwait
push
xor
rol
xchg
faddl
sbb
test
js
das
push
jle
sbb
pop
mov
out
cmp
or
cmp
add
pusha
imul
and
lods
ljmp
lcall
cmp
faddl
push
sti
test
xchg
sbb
cmpsb
xchg
in
fwait
cs
pop
stos
rcr
loope
ljmp
push
cmp
mov
mov
mov
or
pushf
lods
or
mov
dec
jp
leave
xor
lret
cmp
jbe
inc
xchg
pusha
sub
xchg
aam
xor
cwtl
xchg
jnp
pop
mov
outsb
outsb
xor
jo
cmp
fisttps
gs
ds
mov
cwtl
inc
fidivrl
insl
scas
cli
dec
lods
test
mov
and
mov
lock
pop
leave
sti
cmp
adc
imul
cmp
mov
popf
lods
ficomps
pop
insl
pop
test
scas
popf
std
lret
and
iret
ret
dec
or
or
pop
mov
insl
adc
xchg
jge
add
mov
mov
mov
mov
js
push
push
mov
adc
mov
xor
mov
daa
mov
in
dec
inc
jmp
jno
repz
pushf
cmp
pop
lahf
push
add
cmpsl
in
dec
xchg
pop
xor
adc
addps
add
and
loopne
ds
aad
pop
scas
cmp
cli
mov
insb
bound
in
sbb
or
adc
mov
sbb
mov
lret
fnstsw
or
fsubr
cltd
inc
aad
mov
jmp
and
cltd
enter
fs
mov
adc
push
or
int3
xchg
popf
ds
int3
mov
ret
dec
ljmp
mov
dec
pop
mov
out
inc
movsb
mov
push
add
aaa
insl
add
ljmp
dec
ja
cwtl
xchg
mov
push
ss
jbe
or
les
cltd
frstor
and
and
xchg
rcrl
sub
dec
sti
into
fstl
add
lret
push
lahf
push
jg
in
mov
mov
xor
jl
lea
mov
shll
pop
cwtl
jg
imul
sbb
ret
pop
sub
out
call
leave
mov
ficoms
loopne
jne
ds
cmpsl
lret
mov
aad
iret
dec
xchg
xor
xchg
mov
lahf
jmp
subb
lret
scas
dec
push
fabs
ss
jl
mov
push
dec
andl
mov
in
dec
into
int3
jno
add
out
push
stos
xor
cmpsb
or
cmp
ss
and
das
mov
test
sti
inc
xor
mov
daa
add
icebp
pop
lret
shll
xchg
in
shlb
mov
mov
xchg
add
movsl
cwtl
mov
data16
fimuls
add
pop
jle
lea
jo
mov
out
jmp
mov
dec
in
mov
xchg
out
in
sub
lret
cmp
cmpsl
outsl
or
jae
in
cmp
inc
sub
cli
aaa
and
or
xor
aas
repz
nop
pop
cmpsl
test
out
jle
xchg
call
adc
loop
mov
inc
mov
xchg
sbb
addr16
push
ror
xor
sub
mov
adc
mov
sbb
and
lock
popa
mov
xor
xlat
adc
test
mov
push
and
cwtl
insb
mov
pop
cmp
sub
xchg
hlt
add
push
popf
call
push
rcl
lds
sbb
arpl
add
stc
clc
mov
jo
cmp
adc
sbb
mov
fs
sub
gs
xchg
into
mov
mov
pop
in
ret
cmc
xchg
pop
cli
jp
leave
fcompl
cmp
sar
popf
movsb
adc
sbb
mov
or
lret
sub
and
push
pushf
repz
mov
sub
pop
negl
fidivl
cmp
into
or
out
sub
push
lods
and
in
cld
nop
adc
cmp
pop
xchg
enter
xchg
rorb
gs
xchg
scas
inc
push
shll
pop
movsl
xchg
in
cwtl
shll
mov
repnz
sbb
lcall
cmpsb
dec
add
movsl
push
sub
daa
lret
mov
push
xchg
pop
mov
adc
sub
lret
lods
dec
mov
lahf
fwait
add
fldl
shrb
movsl
hlt
and
fwait
ds
dec
es
sarl
repz
add
and
mov
in
int
xor
arpl
jle
testb
fdivrs
push
cltd
cmp
ja
mov
dec
popa
sbbl
ret
pop
xlat
fimull
push
mov
hlt
pop
or
sub
test
in
ret
test
push
imul
aad
pop
pop
std
fdivrs
xor
adc
xchg
int
add
jecxz
xchg
in
hlt
sub
addl
jge
mov
mov
push
repnz
jmp
mov
stc
lahf
shlb
cmp
in
sbb
frstor
jle
ret
fcmovnbe
movsl
or
test
push
jbe
mov
cmp
insb
or
loop
jns
nop
add
cwtl
xchg
and
in
gs
inc
sbb
push
stos
ret
rolb
in
pop
mov
dec
scas
lahf
sbb
inc
add
test
stc
dec
jecxz
pop
shll
cmpsl
jnp
cmpb
addl
lcall
add
mov
push
lods
inc
aaa
aas
out
rcl
stc
push
add
dec
jmp
scas
jno
mov
and
repnz
nop
lock
xor
incl
and
lea
fisttpl
divb
sub
andb
loop
insl
push
insb
gs
mov
imul
push
mov
dec
pop
mov
inc
scas
adc
fmull
xlat
sbb
mov
inc
fdivp
mov
fistpll
sub
nop
rcr
sub
dec
stc
push
shll
repnz
push
mov
jnp
xor
pop
push
ja
xchg
movsl
inc
inc
pop
ret
dec
imul
cmpsb
sbb
mov
dec
adc
mov
mov
mov
lcall
xor
xchg
sbbl
in
inc
push
pop
pushf
mov
jecxz
fcoms
fists
ss
int
fistpll
mov
mov
pop
lds
dec
pushf
xor
xchg
loope
cmp
jbe
popa
push
sbbb
mov
sti
push
mov
js
insl
pop
adc
adc
lcall
lods
mov
mov
or
scas
test
fs
mov
pushf
sbb
push
mov
jle
mov
jbe
adc
mov
ja
outsb
out
lods
cld
push
fwait
jae
dec
out
jl
aam
test
inc
loopne
xor
inc
xchg
mov
push
add
lret
push
mov
dec
pop
ret
pop
rclw
pop
inc
xchg
or
xor
jp
add
or
inc
inc
jnp
mov
addr16
add
out
cli
mov
aam
add
mov
repz
orl
pop
fstpl
jns
imul
mov
popf
and
jbe
xchg
lahf
mov
mov
dec
lcall
push
and
into
xchg
sbb
loop
dec
mov
xor
mov
ljmp
inc
sub
or
sub
imul
mov
push
ds
push
jg
lock
in
and
jb
jbe
mov
inc
outsb
orb
dec
arpl
stos
fistpll
loop
mov
pop
and
lds
into
jns
insl
push
out
adc
push
arpl
int
jne
fstpl
jg
out
js
fcomps
sub
call
loopne
cmp
adc
push
jns
fcomps
xlat
mov
ficoms
push
mov
fcomp
xchg
xor
mov
int
sbb
loopne
push
mov
mov
insl
or
arpl
sbb
out
inc
pop
aam
push
je
jecxz
fadds
fnstcw
mov
popl
sub
test
pushf
ror
cmpsb
fidivrl
sti
xor
dec
add
sahf
mov
scas
mov
in
mov
dec
movsl
lahf
or
ja
and
inc
cmc
fsubrl
jnp
movsl
repz
mov
imul
add
not
icebp
mov
add
imul
dec
xor
ja
fsts
cmp
or
cmp
cmp
cltd
or
mov
xchg
sub
inc
insl
sub
jg
jno
cmp
cmpsl
jmp
and
mov
jbe
jo
je
or
inc
ds
addr16
jle,pn
mov
roll
cli
mov
js
clc
outsl
fmuls
cmp
imul
pop
add
xor
jae
xlat
in
inc
addl
jg
mov
push
push
int3
xchg
je
jmp
cld
xabort
imul
les
push
cmpsl
into
mov
push
mov
adc
dec
xchg
adc
mov
and
shrl
clc
and
ficomps
dec
fdivl
mov
jle
xchg
out
push
pushf
pop
lcall
cmc
out
cli
xor
lcall
jne
aad
push
daa
pushf
mov
ljmp
xor
mov
pop
aas
int
sarb
sbb
xor
test
pop
insb
mov
mov
dec
xor
dec
js
ss
pop
fisubrl
loop
cmp
out
aas
sub
push
dec
or
loop
push
sub
or
aad
bound
fwait
cmpsl
pop
enter
xchg
xchg
jnp
out
xchg
xchg
inc
fldcw
add
pop
mov
int
xor
loop
das
sub
sub
stc
mov
sub
stos
mov
lcall
pop
lcall
lahf
push
stos
loop
sub
mov
inc
movlps
push
pop
fildl
xlat
stc
loopw
mov
mov
movsl
movsb
xlat
pop
or
xchg
fwait
popa
outsl
dec
nop
test
pop
in
add
xchg
fs
dec
shrl
decb
addb
adc
in
lahf
mov
insl
jge
and
cltd
mov
mov
pop
jns
sub
or
iret
rcrl
stos
mov
pop
jge
and
fdivs
loope
filds
rolb
cmp
xchg
mov
jo
hlt
xor
out
mov
out
dec
clc
ljmp
add
jbe
sti
lea
outsl
stos
adc
lock
and
adc
pop
sbb
loopne
push
ret
outsl
out
clc
push
lcall
xchg
cltd
mov
pop
mov
pop
stc
xlat
aam
inc
scas
dec
mov
notl
enter
imul
and
mov
sti
jp,pt
nop
frstor
xchg
mov
mov
fldcw
pop
fcmovnb
test
mov
shrb
mov
xchg
cmc
xor
adc
cmp
sarl
in
ljmp
mov
nop
adc
push
dec
inc
pushw
xor
push
fildll
and
or
test
and
mov
mov
sbb
imul
xchg
push
adc
mov
jno
add
mov
insb
scas
hlt
mov
or
data16
add
inc
xchg
or
xchg
shl
xlat
add
mov
std
inc
cs
and
into
cwtl
cli
mov
test
pop
js
sbb
enter
and
and
pushf
jmp
pop
jae
add
fldt
ret
inc
jp
jb
sub
jo
faddl
pop
cli
xchg
paddb
mov
cmpsb
lahf
sub
out
or
ja
fwait
adc
push
loope
aam
fildl
mov
lahf
xor
and
dec
sub
cmp
sbb
aas
push
in
push
or
dec
out
sbb
sub
adc
outsb
in
dec
push
jmp
mov
das
jge
lods
cmp
xchg
repz
sbb
push
jp
loop
sub
push
sbbb
mov
setge
jns
jg
sbb
xchg
push
mov
repz
cmp
and
lcall
cmp
jmp
insb
mov
cwtl
add
or
jo
jg
dec
sub
cmp
out
rcl
ret
mov
jb
xchg
push
mov
out
mov
rcl
cmp
cmpl
scas
ret
lock
test
out
adc
popa
leave
add
testl
jne
jg
push
loope
cmpsb
cmp
dec
pop
outsb
in
loop
xor
es
mov
inc
imul
jmp
mov
jo
mov
mov
mov
stos
xor
adc
nop
jle
or
and
sbb
xor
or
cmp
dec
sub
in
out
sarb
cld
sahf
jle
sar
sub
mov
mov
mov
movsl
insl
movl
dec
pop
mov
test
push
pop
xlat
push
aam
out
pop
in
popf
push
ret
lock
inc
or
push
mov
mov
mov
xchg
mov
sarb
out
dec
xor
xchg
pop
mov
aad
or
icebp
push
pusha
aaa
xchg
add
mov
mov
test
in
repnz
adc
cwtl
sub
pop
loop
adc
sahf
jo
ret
sub
add
jecxz
jg
jne
addr16
mov
popa
ljmp
mov
jmp
fs
or
jnp
inc
cmp
scas
pop
xchg
xor
xchg
in
je
movsb
mov
jno
into
movsb
dec
out
jnp
mov
setl
mov
lret
lahf
in
adc
in
ljmp
fildl
hlt
add
int
out
int
and
ret
rolb
sti
pushf
iret
inc
inc
xchg
ja
xchg
insb
add
mov
xor
mov
scas
cmp
imul
gs
xchg
jo
cmp
aaa
mov
inc
fbstp
pop
xor
incl
mov
mov
xor
test
call
or
int3
loop
hlt
arpl
xlat
arpl
int3
mov
dec
adc
outsb
inc
sbb
mov
mov
cli
inc
loop
and
add
arpl
pop
std
dec
out
jno
stos
mov
xchg
fs
xor
add
divl
lds
test
in
lods
xchg
or
pop
dec
fs
sub
and
incb
dec
fdiv
pop
xchg
push
xor
mov
or
pop
ljmp
sbb
push
mov
jp
mov
pop
arpl
repnz
pop
out
aaa
and
mov
cmp
push
fldenv
add
cmp
sub
or
in
jle
test
aad
imul
adc
frstor
hlt
xchg
pop
aas
cmpsl
shlb
cli
dec
push
mov
lret
loopne
inc
daa
pop
pop
aas
sti
or
adc
or
out
int3
int3
cmp
add
jb
call
add
inc
xchg
push
aad
mul
and
and
jl
cld
js
inc
insl
std
scas
inc
xchg
jae
mov
sub
or
insl
xchg
mov
jge
ror
mov
aam
enter
mov
insl
lea
xor
sbb
inc
pop
fnstsw
lret
std
mov
aas
ret
dec
mov
adc
jge
mov
lock
outsl
test
dec
js
jae
xchg
and
push
sbb
push
and
roll
push
cltd
adc
ja
or
mov
push
and
push
push
cmp
loope
ret
sbb
shlb
xlat
and
pop
add
test
mov
jg
jmp
loope
mov
mov
inc
xchg
fs
and
repnz
add
stos
scas
add
pusha
add
jo
jno
mov
sbb
das
adc
xor
jmp
orb
xor
movsl
lcall
cmp
outsb
imul
jge
movsb
ja
test
test
nop
out
into
pop
mov
cs
jmp
rclb
xor
xor
xchg
sub
sbb
pop
push
fistps
push
jns
repz
out
jnp
jl
jg
cmpsb
jmp
addr16
sbb
es
jnp
dec
sbb
out
pop
stos
jle
cmp
rcrl
cld
add
cmp
jne
jg
cltd
jb
cmc
mov
sub
lcall
mov
or
imul
mov
lods
call
jnp
fidivs
jp
xor
dec
push
clc
sahf
inc
jnp
cmpsl
mov
and
ja
lret
add
push
push
dec
sbb
shrb
das
stc
arpl
bswap
cmpsl
xchg
push
frstor
jmp
sub
add
mov
or
pop
aas
jno
nop
dec
add
fldt
sbb
fld
mov
cmpsl
call
lret
loope
dec
call
subl
outsb
in
push
imul
pop
movsl
adc
mov
popa
sub
inc
sbb
cmp
dec
pop
push
std
pop
mov
out
loopne
test
mov
xor
aas
adc
rcrl
push
and
and
push
xor
rclb
fs
dec
push
icebp
aam
xlat
push
or
adc
outsb
fxch
mov
xor
ja
xor
pop
enter
push
or
in
int
movsl
jmp
jmp
cmp
hlt
xchg
insb
dec
xor
negb
mov
lahf
jg
into
xchg
push
fcomi
cmp
push
inc
int
aam
out
mov
add
not
mov
pop
push
popa
bound
les
push
cmp
push
dec
lret
stc
subb
mov
adc
mov
xor
xlat
mov
mov
sbb
pop
mov
cmp
sub
jbe
das
into
aas
push
and
push
xchg
dec
movsl
dec
xchg
push
or
imul
add
clc
nop
fs
out
jb
mov
scas
pop
sub
pop
mov
xor
cmc
test
xchg
push
addr16
cmp
cmp
dec
repz
inc
out
fldl
cmp
and
in
std
xchg
call
push
test
mov
or
mov
push
sbb
xchg
ret
sbb
cmp
jmp
in
cmpsb
adc
xchg
je
insb
in
es
clc
insb
adc
xchg
test
xchg
add
insl
sub
lret
push
fxtract
add
xor
imul
imul
pop
pop
xchg
push
xlat
push
cs
hlt
pushf
test
push
in
shrb
repnz
sti
enter
pop
leave
jns
push
pop
mov
dec
xchg
pop
out
jno
std
xchg
sti
das
les
mov
mov
fcmovnu
sbb
scas
outsb
in
mov
scas
subb
inc
int3
ljmp
mov
loopne
jb
popa
in
add
lcall
test
jbe
sbb
mov
lret
pop
fstpt
aam
sub
je
xor
and
fs
jge
aaa
loope
xchg
mov
sbb
add
adc
mov
jecxz
lahf
ss
jno
mov
pop
dec
int3
dec
ret
cmp
sahf
add
sub
mov
and
and
lret
fmuls
cmp
xchg
mov
fsubl
dec
or
pop
xchg
in
enter
aaa
sub
outsl
call
in
ss
movsl
hlt
repz
jle
fmul
aam
or
shrb
insb
push
sbb
outsb
rorb
cmp
push
adc
in
icebp
mull
lea
push
cmpsl
xorb
std
data16
mov
or
cmp
test
shl
cld
mov
xchg
int
fs
jae
inc
cli
arpl
aaa
cmpsl
stos
pop
enter
adc
test
adc
test
fidivrl
pop
jo
aam
inc
dec
fnstenv
pop
push
adc
pop
decl
lret
popf
rcr
loopne
je
mov
jae
xor
test
jb
dec
hlt
add
xchg
or
add
sub
je
sbb
dec
iret
push
lret
xadd
jmp
jns
movsl
clc
fldl
roll
lcall
push
es
jnp
cmc
inc
loope
test
rolb
mov
imull
xchg
cmpsl
andl
mov
jno
int3
sti
xlat
pop
xchg
mov
adc
inc
pop
ret
fwait
popf
push
imul
cmp
mov
mov
adc
push
fistl
add
ret
push
adc
jecxz
insb
add
fidivl
inc
mov
push
jp
inc
and
xor
arpl
or
adc
test
mov
mov
aas
push
addl
lcall
js
mov
push
jmp
and
fbstp
jns
dec
int3
sti
jb
inc
mov
pusha
mov
out
popl
cmc
xor
inc
movsl
and
sarb
mov
xchg
cmp
or
adc
xlat
les
cwtl
mov
xor
pop
hlt
jno
sub
pop
ret
pop
or
inc
mov
mov
mov
lods
xlat
jecxz
lods
mov
aas
pop
jne
call
test
xor
daa
leave
addr16
leave
xlat
cmpsl
xchg
adc
push
mov
aad
sti
mov
add
inc
cmp
pushf
or
sbb
sbb
mov
mov
mov
mov
inc
push
add
in
jnp
pop
xorl
inc
js
fwait
xchg
jl
adc
aas
cmp
cmp
inc
mov
jnp
cs
push
push
inc
loop
jg
jmp
lods
fcoms
int
dec
movsl
in
mov
mull
fidivl
aaa
iret
out
das
popf
pop
sbb
jnp
ja
pop
push
jecxz
dec
fsubl
or
sbb
mov
in
inc
stos
sti
add
inc
inc
stos
aaa
scas
mov
mov
mov
mov
xor
divb
push
push
andb
jle
mov
or
imul
clc
mov
cwtl
xchg
dec
cltd
out
inc
cmpsb
test
add
pop
rorl
cmp
fisubl
call
sbb
push
dec
inc
cs
bound
pop
adc
lcall
int3
clc
in
ror
cltd
push
cmp
jne
lods
loope
lea
jle
xor
mov
int
mov
bnd
or
push
movsw
adc
sbb
scas
loope
jp
jecxz
test
sbb
xlat
xchg
test
and
stos
jmp
adc
cmpsb
sbb
je
adc
or
jge
dec
mov
xor
sahf
test
inc
sub
lcall
out
nop
ds
out
fwait
cld
dec
jecxz,pt
pop
aam
xchg
fistl
push
lods
cmc
and
arpl
and
push
mov
mov
jo
mov
insb
or
inc
aas
push
pusha
sub
mov
add
jbe
scas
sub
js
mov
mov
fidivs
stos
jb
mov
sub
sbb
xor
int3
imul
fsubrs
xchg
fistps
cld
scas
and
scas
inc
aas
jae
mov
sub
push
or
sbb
fisttpll
dec
xor
pop
push
mov
mov
addb
insb
enter
adc
lret
test
xchg
dec
popf
mov
test
push
or
lret
mov
sub
cmp
test
loopne
inc
test
push
cmpsl
pop
cld
ret
leave
lret
jecxz
imul
icebp
fisttpl
jle
inc
hlt
iret
mov
and
int
sbb
cmp
xlat
inc
movsb
xchg
cld
inc
les
mulb
and
mov
daa
xchg
mov
les
mov
sub
pop
movsl
pop
bound
leave
sahf
stos
jae
fldl
and
cs
iret
sub
cwtl
pusha
adcl
dec
inc
ret
xlat
and
mov
sahf
cmp
adc
repz
fs
add
subb
mov
push
xor
sub
fucomip
dec
push
and
sub
out
shrb
fsub
push
jecxz
cmp
cmp
cli
roll
xorl
cmp
loope
repnz
inc
pop
dec
adc
mov
pop
xchg
xlat
inc
lods
xor
aas
dec
ret
mov
jbe
hlt
push
inc
jmp
imul
sub
test
dec
xchg
add
stos
xchg
or
shrb
inc
add
dec
shrl
addr16
shlb
mov
sub
inc
pop
cmp
inc
movsl
je
ret
jecxz
sahf
jge
xchg
sbb
bound
sub
push
push
dec
cltd
les
xor
les
sub
std
sti
shlb
jge
and
or
test
xchg
insb
cmp
repnz
popf
movsb
out
xchg
push
dec
adc
scas
or
test
test
mov
pop
inc
lea
sub
or
aad
stos
clc
push
jae
xchg
fdivr
and
call
or
rcrl
iret
pop
mov
adc
addb
scas
lds
add
stos
jg
sbb
pop
and
adc
xchg
jge
sub
adc
test
mov
cwtl
mov
jl
xor
xchg
sub
adc
cmpb
inc
imul
mov
test
test
cs
pop
xlat
mov
mov
imul
leave
aam
or
frstors
mov
movsl
movsl
stos
shl
add
bound
nop
loope
sbb
popa
les
scas
test
mov
jecxz
lret
std
mov
inc
rolb
aaa
pop
dec
scas
or
popa
xor
rclb
dec
stc
jecxz
add
enter
imull
mov
and
sub
leave
cs
push
idivl
bound
mov
pop
sub
sti
cmp
jno
sub
mov
popf
or
cmc
add
and
inc
dec
cmp
dec
cmp
fsubrs
jmp
sub
out
push
shll
sbb
pop
mov
movsb
popw
cmc
mov
sub
xchg
mov
stos
mov
jg
and
scas
scas
push
sbb
mov
popf
sub
lock
out
test
cwtl
lods
adc
into
shrl
add
push
xor
test
jg
pop
mov
daa
mov
insb
stos
jno
fcmovnu
mov
mov
loop
test
pop
push
jae
roll
cmc
mov
push
nop
cs
sbb
push
int
int
in
xlat
mov
call
xchg
mov
xchg
cmp
data16
mov
stos
inc
stc
out
and
sahf
data16
add
pop
scas
mov
cs
test
sub
mov
inc
xor
in
fstpl
xor
inc
mov
and
rcr
imul
lods
push
icebp
xchg
lods
mov
xor
dec
cmpsl
test
loope
mov
movsb
jle
fstp
mov
cmp
test
shrd
jo
mov
sbb
cmp
outsl
dec
js
cmp
sub
sub
xchg
mov
xchg
mov
cmp
mov
cmpsb
cmp
sbb
adc
xor
sbb
mov
stc
addr16
and
mov
add
or
xor
add
pushf
dec
pop
es
cwtl
pop
pop
mov
and
cmp
rolb
rol
sub
pusha
dec
jbe
stos
push
rol
rcrb
cmp
add
stc
ret
loope
pushl
sbb
and
pop
mov
fildl
leave
inc
ja
lods
inc
arpl
inc
mov
or
dec
ror
imul
add
cli
push
pop
sub
sbb
imul
lods
fs
dec
dec
int3
mov
sub
xchg
adc
mov
dec
and
xor
dec
sub
psubusb
xlat
jp
lds
fldl
arpl
cmp
dec
mov
je
inc
js
neg
sbb
out
popa
pop
cmp
mov
cmp
jmp
dec
push
inc
sti
repz
or
pop
div
cltd
es
daa
movsl
mul
cmpsb
js
jae
aad
dec
sbb
les
mov
call
pop
add
pop
lods
add
push
cmp
je
repz
jo
cmpl
sub
push
sub
icebp
insb
mov
push
adc
add
addr16
ljmp
je
clc
sbb
cmp
jle
xchg
ss
das
in
scas
in
mov
xor
inc
mov
shll
repnz
test
icebp
pop
lock
jg
ret
mull
mov
or
call
xlat
int
mov
xchg
jnp
sbb
xchg
mov
ds
or
and
clc
out
jmp
nop
stos
faddl
fisttps
pop
jg
subb
data16
scas
cmp
cmp
push
es
stos
or
lock
sub
pop
jnp
mov
daa
inc
lods
stos
std
imul
sbb
enter
pop
fsubl
mov
mov
pop
popa
js
out
aad
dec
dec
outsb
sti
push
in
mull
outsl
sbb
out
sahf
or
enter
add
ret
push
not
add
mov
sbb
adc
mov
scas
cs
push
cmpsl
and
mov
and
mov
outsb
xor
divl
mov
mov
call
fnclex
js
shlb
xor
cmp
mov
pop
into
xchg
or
dec
or
pop
adc
addr16
out
sub
cli
mov
stc
leave
sub
jmp
imulb
mov
fstpt
xor
mov
out
lret
negl
ret
push
mov
imul
mov
outsb
cld
cltd
xchg
les
mov
push
jp
pop
roll
int
push
int3
mov
xchg
jmp
adc
add
je
cmp
push
and
fwait
inc
sti
add
inc
push
or
fadds
loope
cwtl
pop
inc
sub
test
hlt
pop
xchg
pop
push
fs
dec
xor
scas
ss
xor
mov
jg
sbb
add
dec
jno
cld
xor
ret
ds
pop
js
aad
and
in
outsb
popa
cs
xor
mov
jg
pop
xchg
inc
faddp
rol
aas
pop
mov
push
push
add
lods
lret
mov
xor
in
insb
cmc
mov
sbb
mov
and
andl
lock
mov
fbld
push
pop
adc
jmp
push
inc
mov
bound
pop
lret
insl
dec
rcr
hlt
mov
mov
xor
or
or
mov
out
jecxz
or
leave
inc
popa
inc
sbb
bound
aas
lods
xlat
xlat
pop
sub
sub
jecxz
imul
jle,pt
jg
int
pop
arpl
popa
mov
inc
cli
pop
data16
lcall
out
lods
cld
inc
and
xor
jbe
in
pop
rorb
cltd
xlat
jbe
pusha
movsb
leave
xor
xchg
jl
lret
nop
pop
xor
insb
gs
lods
push
mov
arpl
sbb
out
xor
push
lods
mov
scas
dec
xchg
xchg
fisubrs
or
addr16
cmp
adc
pop
loop
ret
addr16
cld
sbb
idivb
mov
inc
insl
lret
fstl
inc
xchg
shll
pop
xchg
shll
das
imul
imul
aas
es
dec
ds
push
test
imul
fbld
enter
inc
cmc
or
jge
adc
outsb
jge
pop
cmpsb
xchg
jo
jg
loope
aas
cmp
hlt
cmp
inc
stos
shll
mov
mov
ss
in
inc
dec
pop
lahf
xor
and
sti
rolb
push
xor
bound
xchg
jb
inc
cmp
icebp
pop
mov
or
push
iret
and
xor
jae
lahf
cmp
insl
scas
inc
push
mov
jge
pop
xor
cmp
stc
enter
mov
loop
rolb
xchg
pop
ret
mov
jnp
aad
or
adc
push
mov
cs
aaa
insb
inc
leave
js
js
jmp
mov
lret
jno
jo
stc
cmp
andb
test
test
pop
lret
xorl
rcr
pushf
es
shlb
jmp
jnp
insb
insb
dec
rorl
mov
adc
xchg
outsb
into
sahf
imul
mov
dec
mov
or
or
jmp
insb
popf
aas
outsb
sbb
fwait
jnp
aam
cmp
pop
ja
rorb
adc
roll
xor
in
sub
pop
outsl
leave
or
ss
jnp
jl
push
aad
sub
push
push
mov
push
pop
mov
pop
jae
sbb
sbb
xchg
inc
dec
jl
loopne
lods
rcll
imul
xor
addb
stos
rclb
cmp
inc
or
xor
dec
inc
inc
mov
mov
inc
xchg
js
xor
loopne
xor
cltd
push
subl
mov
pop
loop
dec
and
lods
add
insb
ss
mov
xchg
aam
cmp
movl
rcll
gs
out
imull
mov
mov
cli
jne
mov
xor
sub
cmp
inc
insb
push
sbb
jno
inc
and
xchg
jge
sub
adc
sub
push
mov
sahf
sahf
push
jno
test
sub
fldl
out
testl
push
pop
outsb
pop
adc
inc
xchg
push
lea
jb
xchg
sub
pop
cltd
cs
add
jle
xor
jle
sahf
mov
aaa
push
sub
mov
jno
sti
jns
cmp
inc
lea
push
std
push
pop
mov
dec
gs
jns
out
cwtl
add
inc
out
xchg
push
push
fwait
jae
cld
push
fisttps
das
sbb
ja
loope
fsubl
sub
sub
loop
out
je
inc
sti
aad
scas
shrl
mov
lret
pop
sahf
les
and
jo
cmpsb
mov
ss
mov
mov
push
mov
adc
sbb
xor
push
sbb
adc
jp
adcb
adc
hlt
leave
lods
mov
out
xchg
call
lods
xlat
cmc
inc
popa
lods
in
cmp
cmpsl
aam
imul
add
mov
pop
into
xchg
ret
sub
pop
cmp
mov
mov
push
aad
mov
or
mov
pushf
in
pop
outsb
or
fs
aam
mov
int
lcall
add
push
lcall
pop
xchg
sub
xor
ret
movsb
mov
jmp
fsts
out
repnz
testb
xor
jp
insb
push
pop
dec
cmpsb
mov
dec
adc
into
insb
lret
inc
mov
xchg
icebp
adc
aaa
andb
xchg
outsb
xchg
push
in
ja
inc
imul
lcall
daa
dec
xchg
scas
imul
push
fbstp
loope
lret
jge
ret
incl
icebp
sub
rcrl
out
fldenv
insl
flds
mov
aas
and
fcompl
sbb
inc
mov
push
pushf
cwtl
add
jo
push
int
pop
or
aam
mov
inc
mov
out
std
loop
adc
lea
cltd
cmpsl
mov
add
push
push
and
test
cmp
cmp
shlb
aas
cmp
and
inc
or
mov
mov
dec
loope
xchg
mov
mov
sub
call
pop
mov
mov
jb
xlat
adc
cli
inc
inc
setl
test
jno
pop
adc
lds
das
notl
jle
lcall
gs
pop
xor
inc
lea
mov
cmp
pushf
jmp
pop
subb
push
jmp
je
dec
or
or
jno
dec
add
pop
test
adc
aas
sbb
xchg
les
pusha
fwait
sbb
jl
cmp
out
lret
lods
out
sub
jge
cmp
mov
bound
imul
bound
into
test
cmp
sub
or
adc
mov
push
mov
dec
mov
push
mov
addb
out
popa
shl
addr16
pop
mov
dec
pushf
mov
leave
mov
jne
rorl
dec
in
inc
pop
dec
mov
shl
dec
rolb
dec
arpl
jo
mov
gs
sub
stos
lock
add
jmp
mov
jnp
adc
fdivrl
add
scas
xchg
cmpsl
cld
and
int
cmp
notl
xchg
cmove
inc
clc
sbb
loop
loopne
adc
daa
inc
enter
xor
xchg
dec
arpl
push
loopne
and
mov
jle
jmp
mov
popa
fiadds
inc
mov
clc
xor
mov
xchg
stos
cmp
mov
add
je
in
cmp
jb
pushf
mov
jmp
and
sub
pop
dec
in
fs
test
sbb
insb
dec
aam
inc
cmp
add
mov
test
mov
add
or
pushf
movsl
add
test
and
js
inc
sub
xchg
scas
adc
into
jge
jmp
out
mov
test
add
rcrb
jbe
sub
xchg
ja
ficoml
test
sub
add
and
add
pop
mov
pop
in
add
out
sbb
int
mov
or
ljmp
mov
arpl
mov
test
cltd
scas
in
cmp
imul
pushf
xor
adc
rcll
iret
pop
fs
inc
inc
mov
cmp
push
xchg
xchg
jbe
mov
mov
mov
jnp
sbb
and
mov
into
inc
jns
out
out
sbb
loop
outsl
icebp
push
ljmp
inc
xor
push
or
fsubrp
pushf
and
lret
mov
pop
sub
in
mov
hlt
aad
jmp
pop
aas
loopne
or
ds
addr16
push
sahf
adc
leave
add
jns
lea
mov
push
ja
insb
mov
ret
adc
lea
sahf
cmp
push
xchg
cmp
xor
aaa
pop
xchg
into
pusha
sub
jo
outsl
stos
repnz
xchg
adc
push
daa
shll
inc
and
jecxz
pop
and
sub
cmp
sbb
lret
cmp
fldcw
repz
xor
rorl
insl
push
subl
dec
aam
pop
cmc
test
push
in
test
cmp
test
mov
std
or
xor
repz
jne
scas
sbb
ljmp
popf
fistl
stos
jbe
insb
cmpsl
mov
outsb
jp
cmp
popf
xchg
cmpsl
aam
xchg
push
pop
or
xchg
pop
cltd
push
inc
nop
jno
cmp
mov
and
mov
je
mov
add
cmp
inc
push
addr16
adc
subb
mov
push
xor
cmpsl
pop
dec
and
jmp
mov
ret
add
and
dec
jp
insl
mov
cmp
mov
pop
aad
dec
ss
inc
into
mov
xorl
sbb
jo
subl
test
lock
cmp
aas
push
std
outsb
cmova
sbb
mov
call
mov
push
cmp
aad
mov
movsb
mov
jne
dec
xchg
dec
leave
inc
jne
and
negb
fs
push
jnp
cmp
jns
add
mov
nop
outsl
notl
mov
and
in
cmp
mov
cld
pushf
jp
rcrb
gs
mov
sbb
mov
push
ss
pop
ss
cld
xchg
rcrl
lcall
lds
aas
dec
pusha
outsl
xchg
nop
add
divb
jne
lret
jp
scas
mov
outsl
int3
addl
lods
arpl
jnp
sarl
inc
fcompl
push
fwait
pop
loopne
lret
sbb
pop
jne
sub
imul
xor
scas
sbb
ja
add
dec
adc
sarb
imul
insl
scas
not
add
adc
add
das
imul
lock
inc
mov
sahf
push
inc
jge
mov
es
adc
jno
sbbl
push
loopne
rcrb
xchg
or
imul
inc
or
lahf
or
orb
inc
sbb
sbb
idiv
fimull
fwait
jle
icebp
aad
fdivp
mov
mov
adc
leave
dec
mov
xlat
mov
mov
add
and
sbb
jae
and
or
or
add
nop
daa
arpl
push
outsl
add
add
mov
pop
adc
mov
das
push
mov
sbb
mov
imul
sahf
push
lock
aad
enter
inc
fs
jecxz
pop
jmp
imul
ss
ret
shrl
add
xchg
xor
mov
push
xor
scas
cli
stc
fldt
mov
lcall
mov
sbb
sub
into
lds
bound
test
clc
pop
je
push
sbb
pusha
sbb
cmp
add
sbb
in
pop
xchg
popa
shlb
imul
pop
std
enter
cmp
fdiv
mov
or
rclb
fildll
dec
jbe
cmp
scas
jb
adcl
mov
jle
orb
out
cmp
out
pop
and
lock
push
mov
fdivp
mov
xchg
aam
jno
mov
js
sub
adc
es
test
iret
test
nop
popf
clc
sbb
pop
push
mov
or
sub
cmp
push
or
xlat
pop
das
aas
mov
movsb
cmp
jns
ss
int3
es
mov
adc
push
and
rorl
dec
push
sahf
aam
fs
xor
out
mov
mov
cli
imul
rcrl
ja
cmp
pushf
loopne
jmp
or
cmpsb
lock
or
inc
daa
add
lret
call
mov
mov
xor
push
inc
lret
dec
xor
push
xor
cmp
lret
bound
push
inc
add
xor
mov
xor
mov
pop
popa
rolb
add
add
lock
sbb
adc
mov
lock
push
push
inc
pop
negl
pop
mov
out
mov
adc
and
jnp
fidivs
call
or
aas
sbb
sti
dec
sti
mov
inc
cmp
mov
jg
pop
mov
jge
adc
imul
jge
or
add
scas
xchg
pop
fsubrl
jl
push
fistl
stos
fisubl
mov
add
xchg
mov
inc
push
sub
scas
or
ficompl
rcrb
add
mov
pop
and
pop
fdivrs
mov
xchg
xchg
dec
inc
ret
lods
dec
movsb
and
mov
clc
inc
call
outsl
sbb
lods
dec
cld
iret
cmpsl
call
mov
jns
push
loope
and
xchg
pop
stc
dec
mov
fildll
adc
mov
add
clc
mov
and
mov
inc
or
sbb
lret
cmp
sub
mov
pop
push
cmc
xor
pop
mov
std
sbb
lret
rolb
dec
pop
mov
mov
inc
xchg
loope
fwait
mov
dec
sbb
aas
mov
les
mov
mov
adc
or
outsl
sub
scas
popf
pop
jns
call
xchg
std
int3
sbb
aaa
push
mov
pop
mov
stos
dec
aas
pop
repz
or
outsl
sbbb
sbb
cmpsb
pop
icebp
sub
mov
cltd
sahf
fdivrl
rcr
stos
jl
dec
or
hlt
sub
jne
xor
mov
cmp
loopne
inc
cwtl
pusha
pop
in
mov
fldcw
mov
ja
xor
cltd
js
clc
movsb
out
dec
or
rcll
das
add
mov
inc
test
stos
cmp
push
rcrl
sub
bound
push
in
pushl
adc
jae
xchg
mov
dec
xchg
or
test
jge
dec
pop
lret
adc
aad
sbb
sbb
rclb
ret
push
out
movsl
xchg
pushf
test
iret
xor
xor
push
push
xchg
ret
loopne
test
aam
in
in
jno
outsb
dec
test
xchg
orb
enter
rcl
inc
mov
and
inc
pushf
xor
sub
lret
push
inc
xchg
jbe
cmp
jle
pop
and
cltd
mov
lret
pop
outsb
mov
push
fwait
pop
push
lds
lcall
push
xor
xchg
or
mov
mov
dec
pop
pushf
gs
in
rcrl
cmp
daa
dec
xor
add
int
cmp
popa
cld
imul
cmp
cs
popa
test
mov
imul
push
pop
adc
gs
mov
dec
data16
lahf
add
ss
inc
icebp
scas
js
es
pop
inc
xchg
sbb
mov
jae
out
fcmovnbe
xchg
or
mov
add
jns
std
jmp
bnd
dec
mov
cmp
xchg
dec
lea
lds
ud1
loop
pop
cmp
bnd
movsl
xlat
sbb
movsl
dec
xor
adc
js
pop
loop
mov
outsl
push
in
aad
xlat
jle
adc
bound
inc
xchg
jns
cmp
xchg
lret
clc
or
push
stc
arpl
punpckldq
mov
xlat
hlt
jb
jle
add
cmp
cwtl
mov
mov
lahf
or
lods
sti
in
inc
lcall
js
jbe
sti
mov
mov
mov
lahf
jno
popa
push
sahf
adc
decl
pop
mov
ss
int3
ss
sub
push
repz
movsb
jb
xor
push
cli
es
pushf
mov
mov
fisubrs
into
aam
les
cwtl
pop
sbb
inc
push
ror
orb
pop
ret
sub
mov
or
cli
jge
sub
cmp
xor
clc
lods
pop
fwait
insb
enter
imul
ret
and
fs
inc
loopne
cmp
pop
jle
repnz
xorb
sbb
nop
inc
ljmp
jmp
xchg
shll
movsl
dec
mov
scas
and
out
xlat
repnz
jmp
cltd
sub
jo
jge
dec
stos
or
jae,pt
rorb
xchg
dec
dec
inc
inc
push
cld
inc
push
xor
push
jno
out
repz
negb
fbstp
sub
fnstcw
sar
xor
cmp
popa
outsb
cmc
jp
mov
lea
mov
or
mov
insb
adcl
pushf
bnd
cld
out
scas
sbb
add
mov
in
in
in
aas
roll
ja
shrl
rcl
rorl
insl
roll
mov
add
add
xchg
push
leave
lods
push
nop
inc
xchg
loop
jo
mov
dec
jecxz
jge
or
cmp
fwait
pop
lret
aad
lods
mov
jb
pushf
icebp
lods
xlat
out
pop
push
out
xlat
lcall
nopl
and
pop
mov
sahf
add
cmpsl
xchg
cmp
jmp
cmp
loop
pop
xchg
dec
movsb
inc
sub
movsl
dec
test
repz
mov
cmp
pop
sub
sub
sub
ret
arpl
xchg
inc
popa
ret
and
lock
orb
pop
add
mov
mov
test
dec
insb
mov
cmp
sbb
xchg
xlat
iret
lret
xchg
outsl
dec
jnp
stos
aas
sbbb
inc
adc
inc
add
insb
lea
aas
stc
pushf
repnz
xchg
outsb
sbb
out
in
lods
repnz
mov
clc
pop
shl
xchg
cmp
push
push
and
test
scas
stos
pop
fsubrl
inc
cmp
lds
or
icebp
cmp
js
outsb
push
andb
pop
cmp
push
test
ja
std
fcos
mov
dec
mov
jmp
pop
mov
jle
in
adc
ret
adc
add
outsl
inc
int3
shl
data16
sahf
sub
dec
bound
nop
push
and
or
pop
adc
sub
cmp
stos
insb
push
cld
sarl
and
clc
and
jbe
outsb
std
push
mov
xor
xchg
test
cmp
and
push
scas
fs
jmp
ss
add
pop
pop
iret
jnp
das
sbbl
jle
mov
cs
adc
jne
xchg
ss
dec
lods
xor
js
mov
dec
stos
scas
stos
inc
daa
xor
add
push
or
sub
jp
dec
mov
loope
fidivs
cli
sub
dec
sub
out
push
shl
shll
in
adc
xchg
sub
mov
sbb
bound
leave
or
add
adc
negl
shll
mov
or
lods
xchg
loopne
mov
and
popa
movb
fidivl
aas
iret
push
and
out
test
dec
mov
les
mov
jge
std
popa
dec
fmul
mov
stos
andl
loopne
cmpsb
pop
mov
test
and
push
sbb
clc
lahf
and
div
pop
sbbb
ljmp
mov
push
xchg
aad
faddl
push
cmc
nop
aaa
push
push
adc
xchg
cmp
movb
cmp
vpslld
lahf
inc
popf
xor
pop
pusha
fdivr
push
fsubrp
jl
imul
sbb
jmp
stc
xchg
pop
jne
cmp
push
in
in
sti
popa
mov
add
adc
ret
mov
or
mov
scas
cld
fimuls
pop
imulb
mov
xchg
ret
and
add
sbb
mov
cmpsl
cld
sbb
dec
shr
testl
insb
aaa
push
adc
mov
stos
adc
pusha
lock
ret
dec
pusha
dec
mov
and
mov
pop
jmp
add
mov
xor
loope
jl
into
jecxz
mov
divb
call
out
out
rorl
rorl
jg
inc
or
cmp
andl
push
ljmp
xchg
je
inc
dec
cmpsb
aas
pop
mov
mov
das
dec
in
ret
mov
lock
mov
dec
add
pop
sub
mov
cmp
pop
mov
mov
dec
push
mov
scas
cmp
mov
pop
ds
shlb
jno
sub
testl
ja
pop
and
pop
push
and
stos
jo
in
cmp
js
pop
in
jle
mov
pop
inc
or
imul
push
push
test
dec
xorb
std
jae
sub
xchg
out
jo
push
js
loope
cmpl
hlt
fadds
push
repnz
adc
inc
out
jo
or
test
test
push
dec
shr
add
fstl
cld
mov
xchg
adc
in
clc
jmp
aas
mov
mov
lahf
sbb
out
push
cmp
mov
test
ret
dec
jge
or
push
sub
xor
pop
int3
cs
pop
cmp
loopne
xor
inc
pop
mov
jle
mov
ja
or
cld
js
jae
faddl
xchg
nop
jmp
jae
sarb
bound
in
push
fistpll
pop
fbld
xchg
lret
imul
inc
into
out
mov
sti
fmulp
arpl
fidivrs
lret
bound
jnp
scas
sbbb
inc
pop
jb
enter
stos
mov
mov
sbb
cs
outsl
std
xor
xor
leave
pop
enter
pop
lcall
clc
sti
xor
push
fadd
ja
dec
cltd
int
int3
jecxz
sub
lds
xchg
rorl
jo
sub
push
and
xor
dec
leave
ds
sbb
push
in
loopne
popa
cmpsb
adc
adc
mov
or
jns
test
push
mov
lret
xor
and
inc
xchg
dec
mov
adc
rol
stos
push
xor
pop
inc
pushf
and
pop
xchg
inc
insl
and
test
test
mov
or
gs
xor
xor
sti
int3
enter
sysenter
xchg
enter
cltd
test
mov
stc
jae
mov
call
es
xor
int
lcall
in
jo
xchg
outsb
pop
inc
add
mov
add
ja
pusha
cmp
data16
pop
fsubrl
sar
jo
das
xchg
or
xlat
negl
pop
adc
mov
pop
shlb
push
mov
sub
push
push
jecxz
adc
pop
das
jno
jl
and
pushf
aam
adc
mov
inc
data16
fiaddl
push
jg
das
jge
mov
and
mov
mov
jbe
xchg
cmp
mov
fildll
sub
pop
add
jae
lds
scas
shrb
roll
mov
lret
dec
lcall
cmp
into
mov
mov
jbe
fidivs
dec
ja
ja
hlt
fsubrl
push
mov
leave
dec
fucomp
sub
jo
cmp
mov
test
outsb
mov
push
in
mov
fidivl
les
mov
pop
inc
loope
xchg
push
add
enter
jnp
ljmp
dec
loope
lods
fdivrl
pop
clc
add
pop
dec
in
cmpsl
in
adc
xor
outsb
push
negb
or
or
mov
leave
pop
add
jnp
cmpsl
fcmovnb
cmp
or
or
lahf
scas
fiaddl
bound
push
dec
iret
and
sahf
loope
add
pop
pop
mov
xchg
or
ror
sub
lret
and
bound
sbb
and
jg
daa
xor
and
pop
xchg
mov
xor
xor
xor
pop
inc
push
pusha
adc
cs
inc
jmp
and
pop
or
xor
inc
out
out
mov
cmc
sbb
xchg
cli
je
ret
vmwrite
shlb
fildl
dec
add
notb
cmp
push
mov
cwtl
push
dec
lods
data16
jbe
stos
pop
rcl
test
xchg
loopne
movsl
js
xor
aam
push
or
inc
xor
inc
push
iret
rolb
mov
into
or
loop
mov
mov
daa
cmpxchg
nop
mov
in
adc
iret
xor
out
test
pop
ficompl
int3
lea
or
mov
mov
xchg
je
sbb
inc
jae
xorb
add
cwtl
testl
mov
movsb
jno
jmp
adc
jne
or
xchg
add
addr16
and
inc
adc
je
or
cmp
pop
jae
cld
lods
into
stos
mov
lock
outsl
dec
aad
push
movsl
scas
mov
jbe
insb
lret
scas
push
and
xor
lret
jg
loopne
fcomip
jnp
jo
and
dec
outsb
insl
pushf
push
je
xor
xchg
lods
dec
sti
mov
and
or
sarl
rcrl
cmpsl
pop
mov
xchg
test
sbb
and
lret
and
movsb
imul
stc
call
sti
mov
pop
or
push
repnz
inc
in
jnp
or
loope
int
or
pop
mov
lods
dec
adc
xor
rcrb
loopne
icebp
divl
or
adc
fildl
jmp
insb
inc
in
adc
xchg
lahf
xor
ljmp
in
push
test
rol
sub
dec
push
call
xchg
add
xor
pop
sub
sbb
or
mov
inc
rorb
add
cmp
fcomps
ljmp
push
sbb
test
shrb
in
sbbb
imul
jb
rcrl
inc
add
and
push
and
xor
jb
or
push
push
pop
mov
in
enter
mov
leave
cmp
add
jmp
cmp
repnz
popf
cmp
fcmovbe
cmp
cmp
cmc
mov
pop
fdiv
add
lcall
push
mov
add
and
pushf
cmp
pop
sub
mov
int3
sub
fcomip
idiv
das
mov
in
mov
call
push
pop
push
xchg
ss
push
rcrb
cmp
fimuls
or
in
test
lret
mov
lds
in
jge
negl
jge
xchg
iret
push
and
scas
es
jmp
into
push
sbb
and
addb
pop
int
in
cli
ficomps
lret
loopne
dec
dec
sbb
mov
fimuls
mov
rorl
add
shl
fs
mov
inc
cmpsl
push
pop
stos
faddl
jne
mov
pop
lods
mov
cmp
or
pop
ficoml
mov
xor
lahf
sbb
aam
insb
aad
jmp
jo
add
ss
cwtl
gs
push
pushf
inc
mov
adc
jnp
es
cli
xchg
lcall
or
add
mov
test
inc
mov
jne
sub
dec
fwait
sbb
and
das
ja
nop
mov
jae
push
dec
dec
xor
or
dec
clc
dec
ljmp
mov
mov
or
cmp
push
xor
and
or
loopne
inc
test
cmp
jbe
dec
xor
sbb
lea
iret
pushf
inc
sbb
jle
rcrl
mov
inc
jbe
add
sub
adc
imul
fwait
and
pop
daa
push
jp
push
aam
mov
or
jecxz
in
sbb
inc
mov
outsb
enter
movsl
hlt
xchg
pop
push
outsb
pusha
in
add
pop
out
lret
cmc
je
les
adc
fcoml
adc
mov
sbb
andb
mov
movsl
cmp
ss
add
sarb
iret
inc
pop
repnz
or
or
add
mov
jns
jnp
sub
in
dec
mov
outsb
mov
push
sub
sti
sbb
cmp
dec
pop
sbb
imul
les
lahf
lods
out
xor
sbb
and
pop
insb
push
insl
adc
or
push
jns
imul
ret
fsubl
inc
mov
je
pop
sbb
dec
mov
push
nop
fisttps
mov
mov
pushf
call
xor
push
in
in
mov
addb
jo
daa
push
fistpl
mov
push
mov
or
fcmovnbe
shlb
xchg
out
xchg
movsb
push
jo
jmp
mov
jb
xchg
mov
daa
or
jb
jmp
int
test
lods
gs
iret
test
dec
adc
push
gs
xchg
inc
cli
dec
fidivrs
or
shrb
cmp
or
mov
mov
xchg
out
lret
je
sub
inc
push
cltd
pop
test
imull
push
jnp
jmp
mov
mov
fxch
je
pop
out
cmpsl
vunpcklpd
shll
std
lea
jo
les
fwait
push
les
jnp
addb
into
sarl
mov
adc
das
mov
xchg
sbb
rcl
les
mov
push
imul
pop
orb
and
mov
jbe
arpl
mov
push
mov
or
scas
xchg
in
jmp
popa
push
lods
shlb
cmp
fucomip
inc
imul
popf
fstp
hlt
and
add
rcll
lods
das
dec
xchg
mov
enter
idivl
lret
and
hlt
testl
aad
popf
and
xor
mov
cld
jmp
xlat
push
mov
adc
mov
test
or
sbb
mov
inc
fdivp
subl
mov
roll
pop
fnstsw
icebp
into
loop
sahf
mov
xchg
mov
testl
fistpll
stos
xchg
out
push
lahf
cld
mov
rcl
pop
mov
cmpsl
xor
js
std
pop
mov
sbb
test
push
ror
cwtl
pushf
call
jb
movsl
xchg
jl
dec
sub
mov
adc
lea
sbb
sti
imul
and
mov
dec
lds
out
movsb
push
xor
rorl
mov
iret
mov
sarl
xchg
dec
js
subb
in
je
inc
mov
fsts
adc
and
lcall
jnp
push
mov
test
mov
fwait
push
mov
jae,pn
xor
adc
xchg
mov
pop
adc
xchg
sub
fidivrs
out
rcrb
rclb
pop
mov
adc
adc
addr16
sti
out
or
dec
adc
or
jns
in
adc
jnp
hlt
loope
sub
lahf
pusha
xor
adc
addr16
gs
cmp
mov
aaa
lea
xchg
cmp
in
outsl
fadd
dec
clc
and
cld
inc
clc
jl
int3
cmp
mov
sbb
pop
cmp
add
mov
or
mov
enter
fistl
push
push
int
loope
jle
jp
push
jno
in
xchg
stos
sbb
outsb
scas
orl
popa
sbb
ja
scas
adc
lea
popf
fistl
imul
aad
xor
or
sti
dec
mov
sbb
push
jnp
pop
mov
and
popa
add
test
imul
xchg
rclb
add
scas
cmp
xchg
daa
test
adc
pop
movsl
repnz
dec
js
add
cmp
xor
pop
mov
and
lds
ror
mov
mov
adc
and
ljmp
les
popa
dec
out
int3
sti
incb
out
mov
leave
jl
or
fwait
hlt
add
xchg
pop
sarl
cmp
push
stos
mov
fstl
ret
stos
subl
rol
fildll
movsb
cmpsl
inc
roll
das
es
inc
ja
mov
push
jae
shlb
movsl
sbb
push
mov
xchg
jno
shr
add
out
gs
push
sbb
xchg
fwait
push
mov
test
mov
pop
cs
fsubrs
push
pslld
and
sarb
sub
je
int3
sub
std
insl
jb
rorl
pop
mov
mov
repnz
in
dec
enter
testl
adc
lea
loop
mov
mov
imul
in
push
bound
movsb
mov
mov
repz
test
adc
pop
sti
out
xor
dec
mov
lock
test
in
out
insb
dec
dec
shlb
in
xor
cmpsl
out
lock
js
adc
cmpsl
cld
jo
call
mov
lea
xlat
mov
cli
pop
std
xchg
cmpsb
jg
xor
jecxz
pop
cmc
daa
xchg
sbb
xchg
xor
sub
sbb
add
imul
mov
ret
insb
sub
ja
adc
mov
push
xor
sti
add
mov
out
cmpb
imul
mov
sti
cmp
add
add
call
mov
mov
ljmp
aad
cmp
mov
rorb
mov
adc
sbb
out
dec
jecxz
daa
sub
jl
pop
mov
push
ja
das
leave
lock
clc
clc
cmp
push
inc
pop
fimull
push
and
lds
mov
fimuls
xor
ret
cli
nop
mov
mov
out
in
test
xor
jo
dec
and
rcl
mov
add
jle
jl
push
int3
and
jecxz
shrl
cmp
movsb
pop
aad
and
pushf
rcrb
in
dec
int
mov
out
movsl
add
cmpsb
mov
cmp
dec
pop
push
out
cmp
pop
es
lret
xchg
pop
lods
stos
loope
pop
jmp
and
mov
push
pop
inc
scas
mov
fimuls
pop
mov
test
iret
push
cmp
mov
cmp
inc
out
scas
mov
lods
push
popf
test
inc
stos
inc
inc
inc
xchg
mov
hlt
cwtl
jbe
test
cld
icebp
mov
mov
rcrb
push
fsubrl
jbe
ds
mov
orb
xor
inc
movsb
sbb
xchg
pusha
inc
negl
stos
jnp
cmp
dec
jp
jge
jmp
xor
f2xm1
mov
pop
outsl
int
sar
icebp
das
aas
mov
xchg
lahf
mov
add
in
mov
mov
mov
mov
dec
fsubr
pop
fildl
dec
pusha
push
pop
ret
adcl
out
ret
imul
cmc
imul
mov
adc
or
je
sub
inc
mov
mov
iret
push
cmp
push
dec
into
mov
movsl
faddl
in
lcall
scas
test
push
xor
adc
cmp
out
cwtl
inc
fwait
orl
roll
xor
popf
sbb
cmpsl
push
mov
jg
pop
test
jg
jle
repnz
jge
xchg
jbe
mov
divb
rcrl
pop
outsb
fcomp
sub
xchg
pushf
mov
les
sbb
mov
sbb
pop
out
rcr
cmc
sub
xchg
call
mov
stos
fwait
jle
and
xchg
push
shrb
jb
inc
xor
rclb
imul
adc
das
ss
testl
or
jmp
mov
je
pop
sar
cmpsl
nop
or
sti
adc
sarb
lods
mov
mov
mov
aad
xchg
cmp
mov
pop
mov
sbb
popf
clc
xchg
pushf
jmp
adc
mov
xchg
or
int
push
mov
adc
aam
push
sarl
jp
stos
or
ret
fwait
pop
push
lea
leave
ficomps
adc
mov
fists
jns
push
mov
xchg
in
test
out
and
push
cwtl
mov
pop
add
test
cwtl
sub
into
fwait
es
mov
lds
movsb
out
push
add
adc
gs
loope
sbb
pushf
cmc
mov
cmp
pusha
lahf
aas
lret
fsub
popf
add
rcrb
incb
pop
pop
add
movb
cmp
outsb
aas
es
or
push
push
das
or
jb
jnp
cmp
pop
mov
push
cli
inc
mov
fistps
push
jp
fcomps
and
mov
cltd
lret
cmc
pop
out
adc
hlt
and
add
xchg
jp
add
lcall
inc
enter
jl
push
mov
adc
inc
or
push
fsubl
call
dec
ret
push
lahf
rorb
xchg
insl
xchg
mov
dec
jb
sbb
stos
or
add
fdivrl
pop
faddl
nop
nop
rcr
leave
test
dec
mov
jo
scas
xor
mov
xor
mov
cmp
pop
pop
and
or
add
les
movsl
popa
sbb
ret
sub
mov
mov
sub
adcl
and
sbb
les
or
movsl
mov
mov
or
mov
push
sbb
outsl
push
and
adc
adc
add
sub
pusha
aaa
add
insb
pusha
pop
pop
adc
mov
add
std
jnp
jae
xor
faddl
negl
lds
add
pop
dec
sbb
adc
cmpsb
icebp
cld
jmp
and
testb
in
pusha
outsl
cltd
jnp
sbb
es
cmpsl
add
clc
in
cmp
pop
push
pop
pop
ret
outsl
push
xchg
jle
mov
add
lock
mov
out
xchg
ss
cmpl
fwait
and
xchg
lahf
data16
inc
dec
fadds
sarl
pop
mov
cmp
adc
fists
push
mov
fildl
aas
adc
sti
ror
or
pushf
mov
and
adc
out
ss
mov
test
jbe
mov
sbb
lret
jae
mov
outsl
cmp
sbb
sub
mov
jne
addr16
fwait
mov
out
pop
and
jnp
cmc
adc
mov
mov
in
test
cmp
fidivrs
jle
rcll
into
xchg
fisubrl
icebp
jecxz
in
movsl
es
push
rep
enter
lahf
pop
push
rclb
push
in
sub
rorl
cs
aad
push
add
mov
dec
push
std
push
jmp
into
xchg
xor
push
insl
insl
mov
jbe
xchg
adc
and
push
sbb
rclb
aaa
outsb
cmp
lock
jae
shr
std
and
mov
and
ds
mov
sub
cmpsl
dec
or
aad
enter
ljmp
es
insl
cmp
and
mov
sub
or
jp
pop
dec
jg
adc
or
ja
ja
hlt
jne
jo
comiss
and
sbb
into
rolb
and
inc
out
fisttpl
and
adc
cli
cmp
dec
or
test
mov
xchg
lret
pushf
jp
mov
adc
and
sub
xchg
rorb
movsb
movsl
les
shll
mov
outsl
roll
cmp
push
mov
cld
inc
or
and
mov
repnz
ret
adc
repz
or
scas
sbb
leave
cmpsl
jnp
lods
mov
inc
mov
ljmp
jb
xchg
inc
and
add
fisttps
insb
pop
cmp
inc
adc
scas
outsl
push
test
std
test
push
cmp
inc
movsb
xchg
dec
lods
imul
adc
inc
adcb
pop
jns
fadd
mov
add
les
inc
xchg
fs
and
out
push
jl
xchg
arpl
jle
cmpsb
push
xchg
add
in
outsb
push
sbb
loope
mov
addr16
dec
pop
std
aaa
jp
int
test
mov
ret
fidivrl
jnp
fs
inc
scas
cmp
inc
cmp
loop
movntps
inc
shrb
and
aam
iret
jb
push
add
and
enter
mov
mov
test
fnstcw
fnstcw
push
lret
jmp
clc
aam
stos
fidivrl
jmp
leave
and
ss
stos
aaa
ficoml
jp
mov
jmp
inc
bound
fwait
pop
insl
pop
test
mov
popa
xor
mulb
xchg
sbb
xor
imul
or
punpcklbw
mov
loope
cltd
mov
push
aas
in
adc
push
xor
mov
sbb
or
in
mov
push
push
push
std
lahf
ss
enter
lea
js
fistpl
nop
fadd
cs
push
mov
mov
lock
addr16
and
out
outsb
repz
dec
lret
push
bound
adc
inc
and
stos
pop
leave
or
jmp
fisubrs
adc
or
jle
inc
jb
xchg
push
mov
loopne
aam
std
clc
rorl
rcrb
daa
ret
mov
sbb
cmp
and
bound
lret
lret
mov
cld
addl
aam
stos
loop
pusha
into
adc
push
jecxz
cmpsl
dec
cmpl
hlt
jbe
inc
repnz
in
dec
icebp
stc
fwait
mov
sbb
mov
pop
aaa
lret
xchg
dec
rcl
in
push
shll
adc
mov
mov
in
ljmp
sub
stos
adc
imul
inc
ficompl
outsl
xor
divl
sbb
repnz
mov
push
dec
repz
push
sub
pop
xor
sbb
mov
out
stc
push
pop
cld
hlt
jne
adc
js
dec
pop
out
into
loopne
pushf
cwtl
cli
adc
xlat
sub
aad
lret
pop
not
mov
xchg
inc
fsubrs
or
and
js
shrb
jl
into
mov
mov
jl
outsb
jbe
mov
xchg
std
sbb
int
jo
inc
icebp
jecxz
mov
insl
aaa
inc
jge
sbb
mov
mov
ja
mov
adc
cmp
or
rorl
es
test
xchg
xor
out
fs
jg
rcrb
xor
mov
call
movsl
and
ret
mov
and
idivl
sbb
push
loope
sub
lds
pop
pushf
scas
push
push
aaa
mov
lahf
cmp
ljmp
lahf
scas
push
fstp
add
fdivs
andl
push
rorb
out
in
pop
mov
push
cs
mov
addr16
sub
adc
adc
xor
inc
xchg
es
jg
pop
sahf
push
arpl
inc
and
lock
dec
test
rcrl
inc
add
push
pop
nop
adc
cltd
orl
mov
aam
ljmp
lock
pop
lods
push
lea
inc
divl
pop
push
repnz
orl
jge
add
mov
scas
not
jno
sbb
push
xchg
insb
mov
rcrl
imulb
cli
push
cli
jg
cwtl
subb
inc
xor
lret
je,pt
cmpsb
jmp
js
mov
rol
shl
jno
test
pop
xchg
adc
add
adc
push
mov
dec
aaa
mov
push
and
sbb
mov
dec
ja
inc
cmp
pop
popa
je
mov
int3
and
in
push
in
cmp
cwtl
sti
lds
vpaddd
push
enter
ss
ss
dec
push
sub
loopne
sub
sbb
sahf
bound
mov
and
dec
fcoml
stos
mov
packssdw
rcr
push
pop
leave
jle
insb
cmp
push
cld
popf
mov
rolb
cmp
add
lahf
inc
mov
iret
mov
arpl
lahf
je
push
mov
sub
ret
push
test
inc
pusha
in
xor
cmc
push
sub
xchg
fadd
out
sub
js
dec
fmull
rol
fimuls
pop
pop
clc
xchg
in
imul
mov
lds
xchg
mov
push
jbe
pop
lcall
and
insl
out
in
js
mov
push
out
fildll
xchg
cmp
or
adc
stos
sarb
das
icebp
mov
testb
and
das
and
cmc
sbb
out
mov
push
mov
sbbl
cmpsl
loop
mov
cmp
cmp
daa
xor
xor
enter
mov
decl
sub
adc
stos
xor
cmp
in
sbb
sub
dec
stos
aas
int3
ret
sahf
and
pop
adc
push
lret
mov
mov
mov
pop
pop
dec
xchg
mov
imul
fsubrs
add
xchg
inc
inc
in
mov
push
insl
add
and
clc
xor
xor
mov
cmp
or
sbb
nop
push
jle
pop
es
push
inc
add
pushf
enter
and
mov
push
sbb
cmp
mov
push
insb
and
and
xor
xor
fcompl
mov
notb
mov
jl
mov
mov
and
and
jb
mov
sub
push
push
test
push
insl
mov
or
push
push
inc
xchg
mov
imul
sbbl
pusha
aas
inc
pop
popa
imull
fstp
test
lea
jg
cltd
jbe
mov
pop
cmp
mov
fsubl
push
sbb
push
dec
inc
fimull
add
ds
aam
lret
fisubrs
mov
scas
lret
add
mov
in
jge
repz
mov
int3
sub
jo
cmp
jg
jns
dec
inc
sub
es
hlt
pop
inc
lea
popa
fbstp
or
dec
ljmp
roll
pop
jns
xor
hlt
jg
insb
adc
add
out
or
or
mov
leave
jo
movsl
xor
scas
addr16
xchg
js
add
das
fwait
and
or
into
ret
cwtl
add
dec
movsb
jle
xchg
outsb
adc
fildll
cwtl
icebp
daa
push
jle
or
les
inc
rorl
ljmp
push
lret
inc
mov
test
cltd
sub
lcall
push
les
and
or
sbb
clc
mov
jmp
mov
jp
mov
adc
cmc
sub
add
je
xchg
stos
mov
jo
gs
rorb
pop
shll
pop
cmc
loope
nop
or
cmp
xor
test
popf
loopne
outsl
movsb
mov
push
add
and
addr16
mov
lahf
or
mov
test
sbb
hlt
call
mov
int
andps
xchg
scas
movsl
lahf
lods
addr16
sbb
les
jmp
aaa
inc
scas
cmpsl
pop
xchg
and
pop
adc
test
xor
outsl
sti
in
lahf
imul
add
out
pop
cmpsb
cli
shlb
and
push
mov
sbb
sti
in
pop
cmp
sbb
xchg
imull
stos
dec
adc
je
mov
jecxz
jl
ljmp
push
das
in
insl
and
das
push
fistpl
pop
lret
std
lds
rclb
in
dec
pop
xor
pop
lods
in
pop
inc
ret
movsb
sub
adc
add
cli
jb
movsl
cmpsb
inc
jmp
je
inc
imul
adcl
inc
push
mull
pop
stc
das
mov
dec
outsl
int
cmp
or
lock
enter
fsubl
popa
out
sti
push
outsl
shrb
adc
bound
addb
lods
jns
push
imul
or
icebp
jbe
call
and
shrb
lret
mov
shlb
ret
sub
adc
rdtsc
nop
push
hlt
push
ret
xchg
cmpsl
push
mov
inc
push
out
lods
mov
mov
cmp
adc
sub
enter
popf
lea
pop
mov
xor
jbe
cmc
movsl
push
and
rol
jp
fwait
adc
addr16
pop
sub
ss
out
jle
push
clc
popa
lea
cmp
data16
in
push
push
orw
loop
lods
cmc
mov
push
pop
fwait
adc
push
sbb
inc
lret
xor
test
cmp
je
fstps
pop
ret
jae
add
outsb
addr16
stos
aaa
lds
cmpsl
fldcw
or
addr16
inc
and
xor
daa
mov
rol
dec
add
adc
mov
add
mov
in
pop
dec
leave
xchg
sub
cmp
cli
xor
in
mov
xchg
shlb
push
or
stos
in
rcr
pusha
dec
ret
xchg
add
leave
push
xchg
cmc
jle
pslld
out
in
jae
mov
jb
xchg
add
mov
leave
pop
lock
inc
jle
cs
mov
les
sarb
push
jae
es
mov
pop
cmpsb
xor
and
or
ja
test
pop
aam
xor
popl
scas
xchg
in
gs
push
inc
push
or
cmc
sbb
inc
aaa
rorl
cli
jl
sub
jmp
mov
xor
mov
movsl
lods
lods
cmp
loop
test
rcl
data16
out
sub
add
aaa
fsts
dec
shrl
mov
mov
or
dec
xchg
loop
mov
jge
adcl
icebp
jae
xor
inc
jo
fmuls
fisttps
xchg
loope
pop
js
jge
xchg
push
orl
pop
out
push
mov
mov
cmpsb
fadd
sti
jnp
xor
xchg
push
and
jbe
push
scas
xchg
addr16
gs
fisubl
pop
sbbb
in
xor
jnp
cld
or
je
repz
mov
mov
sub
pushf
pop
repnz
cltd
enter
mov
aas
dec
jl
out
gs
inc
mul
mov
ljmp
outsb
das
mov
mov
push
pop
dec
scas
push
scas
test
and
scas
das
xor
cmp
xor
add
xor
fcoml
icebp
rcll
lret
fisubrl
push
add
ljmp
insl
adc
fwait
ds
mov
ja
ss
jb
or
cld
shlb
mov
data16
pop
mov
sbb
mov
sbbb
cmp
xlat
popa
jecxz
push
outsb
mov
insb
push
in
shr
js
aam
lds
sub
outsb
popf
and
mov
insl
fs
jno
cmp
sub
adcb
test
and
dec
into
mov
fstpt
or
push
cmp
aaa
xchg
or
sti
push
scas
jmp
lock
decl
fsubrs
mov
xor
shrb
rolb
or
in
sub
sbb
add
xor
adc
push
or
jp
and
or
and
subb
inc
lea
bound
pop
inc
jl
ret
lahf
cmp
push
aas
hlt
lods
out
lock
inc
ja
push
ljmp
push
jmp
sub
orl
mov
or
push
hlt
jbe
mov
mov
orl
xchg
mov
mov
sub
enter
fwait
dec
adc
fmul
dec
sub
push
lret
cmp
xor
shrb
les
xor
add
or
push
or
jnp
add
mov
sub
cwtl
call
push
stos
int3
jge
sub
push
int3
rolb
sub
xor
ds
mov
ret
jge
or
sbb
loop
sahf
out
or
jae
sbb
clc
dec
leave
gs
rcr
clc
jl
xor
lret
cmc
dec
jns
sbb
jmp
jbe
and
pop
sbb
mov
mov
dec
or
cltd
add
idiv
fisubl
xchg
sub
xor
cmpsb
iret
xor
iret
mov
out
xor
movsb
xlat
jno
setne
daa
xchg
xor
mov
xor
cmp
adc
call
fisttps
mov
inc
cmp
repnz
movsb
pop
sub
mov
std
mov
pop
pop
icebp
push
mov
adc
inc
call
or
add
xor
sbb
adc
pop
add
dec
inc
cld
std
jmp
out
out
mov
and
push
mov
mov
aam
pop
adc
movsl
es
lds
enter
jb
mov
sarb
leave
sbb
pop
sub
in
cltd
push
shll
sbb
in
popa
pop
jp
and
shl
lea
cmp
push
ja
adc
and
ljmp
push
jl
push
cwtl
cli
sbb
iret
xchg
jge
rorl
sbb
stos
movsb
mov
push
cwtl
adc
and
add
movsl
mov
lock
stos
dec
xor
push
cmp
ljmp
inc
cmp
jae
mov
cmpsb
mov
call
ret
fstl
jg
scas
jo
rcll
sub
lret
pop
cmp
popa
arpl
test
mov
lds
dec
scas
daa
and
orl
cmp
fmuls
mov
jbe
icebp
les
mov
pop
andl
cmp
scas
fcoml
cmp
add
mov
jbe
aam
aam
int3
jg
lock
fimuls
lock
sbb
stc
mov
in
inc
add
jb
fwait
push
insb
mov
mov
sbb
in
xor
dec
xchg
shrb
hlt
arpl
dec
mov
call
jp
cmp
mov
sbb
jecxz
mov
pop
or
jbe
lea
add
sbb
fadd
outsb
push
pop
js
xor
and
pop
mov
mov
loope
pop
xor
xor
icebp
inc
push
jbe
dec
icebp
in
add
mov
std
in
add
jne
sub
xchg
pop
and
jne
scas
sub
pop
sbb
cmp
aad
mov
out
sbb
xchg
add
inc
cmpb
testl
adc
cmp
mov
cmp
sbb
inc
test
pop
scas
xor
rcrb
fimuls
cmp
mov
fcompl
fdivrs
pop
roll
sbb
xor
negb
es
or
ljmp
sbb
lds
and
sub
pop
cs
add
sub
cmc
ja
lds
push
jge
in
sarl
inc
mov
clc
push
mov
in
lea
xchg
or
popf
jp
xchg
xchg
cmp
inc
or
mov
mov
xor
icebp
xchg
add
adc
stos
lret
and
xor
dec
adc
sbb
push
mov
mov
mov
insl
sbb
hlt
in
scas
jp
fdiv
sbb
aad
orb
rcrb
adc
and
imul
out
mov
mov
ret
mov
out
jne
mov
mov
mov
jb
and
xchg
test
pushf
add
pop
pop
or
cmp
shr
add
lock
adc
in
lret
or
test
mov
xchg
push
in
and
add
cld
fldcw
enter
push
mov
push
ret
fmull
push
mov
lods
jp
incb
sub
jg
jmp
nop
push
mov
mov
pop
adc
mov
sbb
mov
es
cld
push
sbb
jecxz
movsl
cmp
aad
mov
das
inc
inc
lods
dec
cmp
add
sbb
mov
mov
out
mov
repnz
andl
out
jnp
popa
push
arpl
mov
mov
dec
lret
test
lahf
in
xchg
push
and
dec
roll
repz
je
cwtl
xchg
cmp
addl
lret
in
lcall
lahf
mov
test
jp
fcmovu
das
adc
clc
pop
xchg
imul
andl
leave
clc
dec
mov
xchg
enter
jns
rcr
xchg
pop
or
push
stc
jmp
cmp
jl
sub
sbb
leave
loopne
sar
mov
dec
nopl
inc
push
pop
xor
in
pushl
cmc
mov
mov
add
in
mov
test
lret
loopne
enter
add
or
pop
inc
jbe
and
cmc
xchg
leave
mov
mov
mov
movsb
leave
lods
jp
mov
bound
dec
bound
mov
pop
push
ret
mov
mov
sub
fs
out
push
into
in
enter
push
sbb
cmc
cmpsl
add
rorb
dec
lahf
inc
pop
or
mov
jmp
pop
insb
cwtl
aad
lcall
sarl
aam
lret
jl
xchg
out
enter
dec
xor
add
lds
insb
mov
shlb
int
shlb
mov
push
pusha
std
mov
cmp
jmp
inc
pop
push
jne
xor
fwait
ret
pop
or
outsl
push
decl
shrl
sbb
rcrl
pop
repz
adc
in
mov
in
jo
jnp
fisubrl
lahf
sub
daa
sub
aaa
decb
aaa
je
mov
clc
pushf
jle
lret
push
adc
pop
dec
loop
xchg
movsb
or
cmp
lods
je
in
shl
cmp
jne
out
out
int3
shrl
rol
fisttpl
push
repnz
iret
xor
into
jb
mov
iret
add
jp
pusha
or
or
es
xlat
and
sub
cmp
loopne
push
adc
jp
pop
movsl
into
sbb
insb
push
sub
nop
inc
aad
outsl
dec
jecxz
cltd
out
lcall
in
mov
sbb
mov
movsb
popa
stc
cli
cli
ljmp
push
gs
inc
fdiv
or
mov
xor
in
leave
stos
push
lods
rcl
mov
cmpsl
lret
pushf
imul
push
ficoms
sarb
dec
add
sahf
cltd
das
jnp
test
pop
inc
ss
mov
and
int
push
mov
nop
push
roll
mov
adc
push
ror
add
bound
test
pusha
sbb
xchg
test
sub
lcall
sub
cmp
mov
out
std
daa
dec
fdivrp
add
test
stos
cmc
lea
sbb
dec
adc
ror
inc
push
push
aaa
mov
lahf
cmpsb
aad
outsl
sar
insl
or
pop
rcr
lret
jmp
jo
push
and
sbb
arpl
repnz
loopne
sub
outsl
inc
nop
dec
jno,pt
lcall
jmp
push
adc
mov
mov
cmp
mov
out
data16
xor
ja
clc
cmpsb
cs
shll
xor
push
test
cmpsb
xchg
dec
inc
jmp
in
xchg
pop
mov
push
popa
in
mov
fwait
test
xor
shl
mov
mov
ja
daa
cld
popf
jp
gs
pop
xor
sbb
cmp
cltd
add
add
xchg
mov
adc
int
sahf
in
and
mov
jmp
mov
fildll
inc
in
adc
cli
rcrl
adc
rorl
jecxz
mov
into
and
xor
leave
in
mov
lds
int3
loope
imul
push
or
adc
push
ja
adc
mov
adc
outsb
popf
repnz
sti
arpl
xorl
pop
xor
push
lret
add
mov
lds
repz
adc
imul
in
push
push
fsub
cmp
cmp
sub
daa
dec
ret
xor
push
imul
or
sbb
push
imul
sbb
or
dec
xlat
or
scas
test
lock
inc
cltd
adc
das
daa
imul
mov
sub
ret
mov
out
jb
push
inc
push
and
cmpb
dec
mov
mov
sub
pop
sub
jecxz
xchg
ljmp
inc
aam
pop
and
jecxz
or
pop
loop
dec
adc
insb
mov
jge
hlt
movsb
lahf
jbe
rcr
addr16
orb
lea
ljmp
nop
xchg
cmc
ds
push
jns
mov
xor
stos
stos
dec
ds
push
push
movsl
pop
and
icebp
mov
cmp
movsb
out
cltd
cli
in
bound
dec
xchg
jnp
clc
or
mov
push
movsb
push
xor
sub
push
mov
inc
or
popa
push
test
lret
cmp
jp
mov
add
mov
sub
jg
iret
push
or
in
shlb
rcrl
pop
xchg
dec
ljmp
js
cmp
fcmovnbe
inc
outsb
cli
mov
loope
inc
ds
pop
cs
mov
or
cmp
mov
clc
mov
adcl
rcr
add
jmp
xchg
jbe
pop
out
es
je
hlt
ds
sahf
cmc
xchg
fdivs
ljmp
scas
jo
inc
xchg
and
xlat
adcb
aas
adc
mov
inc
rorb
aas
sub
jnp
push
xchg
in
test
inc
sbb
ljmp
and
mov
jecxz
nop
out
hlt
mov
push
daa
pop
inc
sub
pop
nop
sub
movsl
xchg
and
stc
stos
add
cmp
rol
idivl
clc
ja
xor
cmp
aad
fsubp
mov
xlat
sar
adc
mov
sub
and
nop
imull
mov
inc
sbb
loope
sbb
ret
mov
sahf
mov
and
adc
push
and
fldcw
dec
aam
xchg
sbbl
popl
push
xor
jae
ror
jp
nop
sbb
shll
sub
mov
xor
jecxz
sub
xchg
xchg
mov
mov
mov
bound
gs
pusha
and
push
jnp
or
lahf
aad
cmc
and
nop
xorb
loop
stc
mov
mov
pop
arpl
mov
inc
jge
push
cmp
adc
dec
and
push
jp
mov
jno
iret
cli
and
adc
ret
test
es
lcall
insb
mov
cmpsb
xlat
stos
xchg
cs
jp
negl
insl
fs
adc
mov
rcr
cmp
jge
dec
push
push
push
mov
xchg
lea
std
arpl
jg
ss
stos
hlt
adc
das
mov
cli
shrl
push
enter
cmpb
and
ja
cltd
dec
loope
xchg
cli
jnp
mov
push
sbb
sub
jecxz
jg
mov
push
push
sti
push
xchg
mov
ror
mov
jp
fcoms
mov
sahf
lds
vprotd
dec
cmp
out
push
xor
cmp
jle
xor
dec
gs
nop
sbb
dec
jno
inc
shr
addl
lods
shrb
leave
mov
sub
mov
mov
add
dec
popa
xchg
add
xorb
mov
jne
mov
xor
cmp
shlb
mov
int3
push
pushf
std
add
xchg
ret
outsl
xor
sbb
or
xchg
lock
and
dec
sahf
ja
xchg
loopne
stos
or
btc
sbb
je
mov
out
int
std
das
cld
push
sub
js
cmp
jmp
sub
adc
xchg
and
into
rdpmc
xchg
test
jmp
out
je
out
outsb
pop
jnp
leave
test
sub
ret
adc
jo
xor
negl
xor
jae
les
andb
adc
into
dec
xchg
cmc
add
mov
sub
mov
mov
mov
cmpsb
cmp
ljmp
inc
frstor
jbe
jo
inc
cmp
movsl
pop
mov
nop
les
clc
push
fwait
mov
rcrb
cltd
in
repnz
mov
adc
mov
or
ds
inc
jle
sarl
sub
addb
inc
mov
outsl
lea
xchg
push
cs
xor
xor
mov
fwait
hlt
imul
lods
shll
ficomps
pop
jns
jb
adc
jnp
loope
loope
std
add
pop
fs
mov
and
push
lret
dec
mov
adc
mov
mov
push
cwtl
popa
popf
aas
cmc
inc
jno
scas
dec
fnstsw
out
mov
xchg
push
pop
insl
xlat
lock
stos
das
mov
push
push
imul
mov
icebp
orl
ficoml
mov
mov
jnp
hlt
push
cwtl
mov
ds
xor
ja
cmc
stos
mov
test
repnz
xchg
movsb
xchg
icebp
pop
xchg
mov
add
add
or
imul
xor
insl
lea
or
clc
cltd
push
test
loopne
imul
stc
mov
mov
shr
jnp
out
adc
lods
out
cmc
add
in
xor
push
popa
movsb
popf
dec
mov
push
xor
xchg
push
cpuid
out
data16
insl
sub
jge
test
scas
mov
xchg
scas
and
lret
push
mov
sub
push
popf
cmc
mov
int3
repz
pop
mov
mov
adc
shlb
or
adc
dec
sbb
adc
aam
repz
xorl
xor
mov
and
imul
jbe
ds
and
mov
scas
loop
mov
incb
idivb
cld
sahf
fiaddl
inc
pop
pop
inc
pop
sub
sbb
push
pop
iret
pop
xchg
mov
mov
add
mov
test
add
aas
adc
test
xorl
xchg
sbb
fisubs
inc
imulb
ret
rcrl
adc
cmp
mov
jge
leave
repz
cmc
push
pop
js
xchg
mov
bound
data16
push
loope
popf
dec
or
imul
mov
outsl
dec
ja
lea
jl
inc
fisubrl
jbe
jno
scas
lret
fiadds
cmp
push
fwait
mov
xchg
outsb
cmpsl
test
xor
in
lds
fimull
add
sbb
rclb
sbb
push
loope
into
roll
push
pop
into
mov
push
or
jp
jmp
cmc
adc
lcall
mov
cmp
iret
dec
mov
test
in
adc
stc
insl
push
jno
js
hlt
sbb
pop
lret
xor
add
push
push
jg
pop
out
pop
out
stos
mov
aam
test
outsb
push
cmp
scas
out
jo
or
jno
and
std
pop
xor
dec
push
movsl
es
lds
ret
cmp
roll
dec
loopne
sbb
imul
adc
jno
cmp
insl
pop
pushf
adc
lods
test
test
out
rclb
inc
mov
and
lret
ret
inc
aaa
xchg
pop
in
mov
sbb
push
push
jns
or
cwtl
inc
ret
dec
push
dec
xor
movsl
inc
lea
sbbb
pop
inc
xor
or
inc
pop
adc
sbbl
insl
dec
fistl
dec
shlb
call
hlt
pop
shl
inc
lret
jmp
lea
jb
xchg
cltd
and
pop
lods
stos
or
sub
ja
ljmp
xchg
daa
dec
out
push
clc
cli
inc
aaa
mov
xor
adc
cmp
push
jg
jae
push
arpl
loope
mov
sbb
clc
repz
mov
int
push
pop
js
lcall
popa
daa
cli
adc
mov
xor
idivl
int
push
mov
xchg
mov
sbb
ss
xor
popf
sbb
mov
mov
lret
lret
cmp
push
rorl
hlt
adc
jg
popa
ljmp
shlb
and
sub
fwait
mov
rolb
lcall
movsl
mov
addl
loopne
adc
lods
xchg
mov
fs
xor
inc
mov
test
test
popf
or
jns
inc
and
loopne
and
pop
iret
cmp
push
sub
xor
mov
popl
mov
cmp
sbb
popf
xchg
xchg
mov
gs
push
mov
xor
cmp
mov
xor
cmp
decb
test
mov
out
mov
cmpsb
adc
clc
sahf
jle
aam
jne
mov
jbe
dec
dec
jmp
es
adc
cmp
push
xchg
rorl
push
jle
or
imul
mov
mov
xchg
in
jnp
aas
and
lea
orl
mov
test
insl
add
and
jg
test
test
mov
lock
jbe
cmp
lret
mov
test
daa
adc
cmp
xchg
popf
cmp
pop
push
orb
xchg
jmp
cmc
pop
mov
lret
fmuls
fisubl
sub
push
aas
xor
rcll
mov
cmp
roll
push
stc
ret
sub
ret
mov
clc
jmp
or
outsl
inc
sub
clc
rclb
adc
and
test
xor
loopne
xchg
push
and
loopne
mov
lret
sub
jns
dec
xchg
movsb
sbb
jle
sarl
ds
cli
cmpl
add
mov
push
or
xor
mov
cmp
push
adc
pusha
movsl
nop
mov
jg
or
push
repnz
mov
out
outsl
mov
leave
sbb
xor
sar
ret
pop
cmp
pop
jno
dec
mov
xor
sub
std
aam
cmp
push
pushf
sbb
cmp
cwtl
jmp
push
out
ds
push
dec
push
bound
add
push
out
outsb
jns
test
movsb
xor
sbb
inc
and
mov
arpl
push
mov
je
divl
sti
loope
fiadds
iret
cmp
subb
hlt
out
dec
mov
in
sti
ret
inc
cltd
sub
bound
sbb
adc
movsl
outsb
dec
loope
out
pop
inc
outsl
jb
xchg
adcl
sbb
fsubrl
mov
fsubp
imul
daa
add
cli
aaa
icebp
push
icebp
push
out
adc
gs
sub
cmp
adc
xor
dec
out
add
ret
fadds
sarl
mov
stc
or
movsl
gs
notl
adc
xor
jl
jne
xchg
mov
ret
mov
mov
stc
xchg
insb
psubusw
push
insb
adc
xor
cmp
xor
jl
xchg
add
out
pop
insb
cmp
repz
jmp
rorl
je
out
lods
or
or
pushf
lcall
push
lods
or
cmp
mov
scas
mov
test
and
cli
daa
push
dec
enter
por
rcrl
dec
mov
dec
jmp
pop
adc
test
pop
andb
stos
les
mov
lock
leave
jno
dec
adc
std
outsl
ja
xchg
xchg
cmp
push
ficoml
sbb
pusha
lock
cld
std
lock
xor
mov
xor
scas
test
fisttpll
push
mov
mov
pop
dec
cld
xchg
xchg
gs
popa
aam
jecxz
rclb
enter
test
add
mov
mov
xorb
arpl
sub
mov
insl
leave
call
sti
ds
lods
aas
cmp
cmpsl
mov
negb
xor
sbb
repz
cmp
lahf
inc
insb
push
out
adc
push
pop
jno
adc
loope
fbld
rorl
call
shll
and
mov
rorb
push
mov
pop
cmp
arpl
insl
inc
cli
ret
inc
gs
out
inc
push
or
cmp
movsb
mov
int
push
xor
iret
das
lea
adc
insb
hlt
jnp
fadd
rol
bound
std
mov
sbb
cwtl
sbb
push
shll
jno
push
add
jo
pop
ret
popa
jne
sub
push
xchg
js
mov
in
sbb
adc
je
loop
push
loopne
sub
test
inc
cmpl
jno
add
fnstcw
mov
and
int3
subb
int
mov
cmc
or
cltd
jno
cmp
fnstsw
xor
sahf
jo
add
mov
mov
sub
xor
sub
mov
and
jecxz
gs
ror
add
pcmpgtw
xchg
subb
cli
mov
sbb
jne
jecxz
iret
push
leave
jns
xor
mov
cli
mov
les
sub
cwtl
mov
xchg
sub
cmp
lcall
repnz
xor
xor
fdivl
ja
dec
int
add
addr16
cmc
mov
mov
sbb
push
jge
ret
pop
mov
shlb
jo
pushf
inc
mov
insl
adc
popa
pop
or
out
data16
mov
add
sbb
cmp
mov
add
mov
cltd
test
mov
lcall
dec
cli
popa
repnz
mov
ret
push
and
xor
test
ret
fisttps
push
data16
jnp
pop
outsl
adc
jae
hlt
or
mov
enter
inc
xor
fistpl
in
je
cs
hlt
mov
and
out
xchg
push
xor
sbb
ret
ljmp
ss
pop
negb
call
push
xchg
adc
push
mov
mov
out
pop
adc
or
ds
stos
cmp
xor
mov
rclb
negb
xchg
and
mov
mov
stc
xor
addr16
push
inc
out
jecxz
mov
aaa
pop
jp
cli
adc
andl
test
movsb
loopne
movsl
xchg
subl
adc
mov
sbb
imulb
js
and
addl
xchg
leave
out
push
cmp
jbe
xchg
outsl
ds
dec
add
in
aam
lahf
ds
dec
inc
stos
dec
leave
add
mov
dec
gs
jb
xchg
cwtl
aad
fsubrl
int3
inc
leave
cwtl
adc
mov
rol
lods
aam
xchg
xor
fistps
popa
enter
and
jne
inc
ljmp
sti
stos
ret
and
ljmp
pop
and
pop
push
test
push
cmp
sub
sarb
xchg
aas
fcomip
cli
es
hlt
lods
cmc
aam
mov
mov
push
call
arpl
or
aam
sub
push
adc
adc
ret
es
push
jmp
or
stos
sbb
add
add
negl
icebp
pop
xor
mov
fsts
sub
sub
jl
sbb
out
and
inc
outsb
pusha
inc
or
lret
sti
pop
sbb
cli
inc
pop
cs
out
dec
test
sub
out
repz
dec
sub
push
push
sub
xchg
cmp
pop
call
and
out
out
and
testb
pop
jns
into
sub
pop
outsb
push
mov
aas
push
ss
mov
and
stos
or
rcll
mov
mov
mov
dec
and
jmp
loope
pop
out
sub
push
in
loopne
mov
or
in
push
js
in
lahf
adc
inc
xchg
pop
dec
push
jg
jmp
cltd
test
sbb
or
mov
pop
hlt
push
ljmp
cmp
loope
sub
pop
xor
lcall
cwtl
or
cwtl
jg
mov
inc
mov
in
int3
ror
add
enter
sbb
lahf
imul
std
jo
aam
int3
sbb
insb
adc
sti
xor
gs
xchg
mov
loope
in
jecxz
and
leave
les
mov
adc
stc
xchg
sub
add
enter
jb
mov
test
icebp
xchg
or
xor
add
adc
shll
incb
xchg
add
mov
test
xchg
lods
lea
mov
int3
insb
pop
subb
and
dec
fiadds
jae
fucom
add
jecxz
adc
mov
push
enter
pusha
inc
arpl
clc
lahf
push
je
adc
mov
push
xor
dec
sbb
clc
ret
jo
or
int3
pop
jnp
je
inc
adc
ret
mov
mov
dec
outsl
fdivrl
push
pushf
mov
pop
cli
or
loop
mov
fcompl
out
shl
mov
cmpsl
ljmp
xchg
mov
cmpsl
outsb
test
aam
mov
dec
xor
xchg
push
int
cli
cmp
sbb
cltd
mov
out
cmp
cli
aaa
lahf
sbb
xor
xchg
cmp
xchg
ret
call
pop
jnp
cmp
jnp
rorb
outsb
fistl
or
xchg
mov
inc
aam
sub
ret
arpl
in
add
sbb
mov
jno
outsl
cmp
pop
push
gs
pop
notl
repnz
or
loope
inc
lds
mov
inc
insl
dec
mov
dec
ret
ror
movsb
or
test
push
sahf
pop
pop
call
jo
cmp
repnz
mov
add
push
adc
test
je
mov
sub
or
mov
xchg
ret
ss
mov
inc
pop
pop
pop
dec
addr16
sbb
testl
int
repnz
mulb
dec
mov
adc
dec
xor
adc
sbb
xor
xlat
hlt
inc
push
mov
addl
sub
stos
shr
xor
imul
test
insl
popa
sbb
and
mov
mov
or
stos
mov
lods
fs
in
xchg
mov
imull
lret
jbe
fstps
pop
and
lahf
or
addr16
stc
jmp
xchg
cmpsb
mov
cmc
out
push
push
mov
lods
es
dec
push
push
arpl
or
movl
ja
sbb
mov
popa
pop
sahf
xor
push
push
jle
arpl
xor
test
incl
nop
stc
cmc
out
lods
inc
fadd
mov
movsb
jg
or
popl
pushf
test
push
mov
pop
addr16
inc
cmc
pop
imul
into
and
xchg
out
pop
in
mov
push
loop
pop
or
ficomps
jg
rclb
gs
cltd
fildll
jnp
inc
jmp
mov
and
xor
pop
sub
cs
xchg
inc
cmp
mov
test
sub
add
jl
dec
adc
inc
pop
push
xchg
sbb
fdiv
outsb
xor
icebp
cwtl
pop
hlt
sub
std
bound
adc
daa
xchg
test
movsb
dec
push
cmc
and
ja
scas
and
jo
jecxz
dec
imul
inc
ljmp
xor
pop
adc
inc
loopne
cmpsb
cs
adc
pop
pop
pushf
mov
pop
je
fcompl
cmp
adc
outsl
push
sbb
sub
add
dec
dec
out
loopne
fwait
rorb
cli
addr16
lahf
cli
sub
test
lea
push
jns
adc
aad
ss
loop
push
negl
cmc
clc
mov
xor
call
lock
int
add
sub
mov
scas
pop
pop
scas
push
clc
mov
fpatan
faddp
jle
lds
or
jns
adc
icebp
jmp
or
ret
jb
aaa
and
xchg
ret
cmp
lahf
jb
inc
pop
mov
sahf
jo
scas
ret
mov
insl
push
inc
js
sbbl
sub
jmp
xchg
mov
jg
dec
cmp
dec
mov
sbbb
mov
jp
pop
mov
or
frstor
cmc
push
add
mov
add
sbb
movsb
jle
add
decb
adc
out
outsl
or
mov
scas
sbb
pop
dec
mov
je
adc
out
dec
jg
inc
jbe
imul
dec
inc
imull
jnp
repnz
cmp
xlat
sbb
leave
mov
stos
sbb
mov
mov
fimuls
or
jle
inc
or
xor
test
mov
cmp
out
push
mov
sub
xchg
cmpb
sarb
pop
mov
push
in
sbb
leave
pop
cmpl
inc
inc
cmpsl
sbb
mov
movsb
fucomp
mov
push
es
in
xor
es
sub
jno
and
repz
cld
test
dec
cli
mov
cmpsb
sub
int3
sub
stos
jl
ret
inc
in
addr16
mov
test
sarb
mov
mov
xor
add
leave
ljmp
hlt
sbb
sbb
in
xor
xlat
jge
pop
cli
dec
pop
adc
xchg
lret
pop
jo
lock
call
mov
pusha
mov
and
dec
in
jl
push
mov
fisttps
out
jg
cmpsl
sbb
andl
loop
sbb
cmp
gs
test
enter
pop
in
add
jnp
test
dec
ss
add
out
insb
lock
cli
mov
dec
or
cmpsl
jns
loop
in
inc
ss
sbb
insl
orl
pop
dec
cmc
dec
mov
fldenv
mov
les
cmpsl
mov
xchg
popa
outsb
cmpsl
pop
and
into
xchg
add
mov
js
testb
jnp
xchg
add
cmpsl
popf
test
rclb
daa
add
push
roll
or
jg
ss
js
mov
clc
cmpsb
sub
ss
push
pop
cmp
inc
mov
test
mov
fldl
and
mov
roll
filds
lcall
fmull
inc
and
movsl
jae
unpcklps
shll
mov
popf
ja
lcall
mov
popa
mov
ss
pop
mov
jecxz
fmuls
cmp
dec
sbb
xorl
add
pushf
imul
add
cwtl
iret
icebp
sub
out
pop
sahf
mov
addb
jmp
test
in
mov
sbb
lds
push
insl
sub
mov
cmpsb
inc
bound
dec
fisubrl
gs
dec
xlat
mov
in
push
push
aas
push
ret
mov
sbb
jae
movsb
ret
call
out
mov
mov
sarb
push
ljmp
or
decl
sub
jg
xchg
lea
orb
stos
jns
sub
enter
loop
test
xchg
jns
repnz
dec
fstpt
out
adc
add
xchg
test
clc
mov
sub
sbb
daa
jbe
negl
mov
push
mov
mov
sub
repnz
cmpsl
and
scas
adc
mov
jns
cmp
popa
and
aaa
sub
add
adc
sub
call
pop
xchg
lock
ret
add
ficoml
fdivr
int
push
xchg
mov
in
cmpsl
fimull
popa
pop
xor
jnp
or
jae
out
ja
xor
mov
lcall
not
push
and
adc
dec
add
push
clc
pop
dec
cmpsl
mov
pusha
and
inc
mov
and
sahf
xlat
scas
mov
push
jno
andl
lcall
push
xchg
cmpsl
test
sbb
icebp
and
or
outsl
jge
rcrl
jg
jp
jl
sbbb
cs
mov
jb
dec
sarb
mov
ss
ja
mov
das
dec
test
outsb
sub
xchg
mov
and
fisubs
stos
ljmp
imul
imul
leave
mov
mov
sub
jbe
lea
outsl
das
jae
lcall
imul
pop
ss
adc
scas
data16
rorl
inc
sub
out
out
outsl
xchg
mov
fistpll
push
daa
or
mov
in
pop
aam
pop
cmp
mov
stc
lods
adc
jae
xlat
dec
cmp
sbb
jae
or
and
aam
xchg
mov
cmp
sub
hlt
push
push
scas
sbbl
aam
dec
ss
and
call
pusha
push
fists
add
fistpl
mov
into
add
cmp
mov
les
test
adc
jle
repz
pop
add
test
mov
iret
push
pop
cmp
mov
jp
test
adc
nop
dec
repz
push
or
enter
push
push
mov
insl
and
ret
and
jo
cltd
in
int3
inc
dec
insb
and
repz
hlt
arpl
cmpsl
call
pusha
xlat
sub
lahf
cli
cmp
xchg
scas
dec
out
popf
xor
andl
push
or
sbb
mov
and
out
notb
adc
gs
shll
jle
pop
add
adc
add
add
adc
test
cmp
add
xchg
and
cmp
in
xchg
push
test
ficoms
in
mov
mov
mov
repz
push
mov
mov
mov
sbb
into
or
pushf
stos
movsb
or
in
mov
cmc
jne
pop
icebp
push
inc
sub
cmpsb
addb
incl
stos
mov
mov
daa
push
int3
cmpsb
scas
and
pop
push
pop
cmpsl
stc
add
push
in
inc
aas
adc
imul
sub
int3
andb
push
mov
cs
insl
sahf
loopne
inc
push
lret
sub
xor
jo
cmc
clc
sub
sub
jmp
mov
call
adc
cmp
inc
jl
fisttps
aad
cltd
out
ja
addl
pop
or
fcomps
pop
scas
fcomi
subl
scas
lock
hlt
addr16
dec
push
mov
pop
lret
pop
fdiv
mov
sub
test
pop
out
xchg
sub
pop
pop
scas
into
adc
test
mov
add
or
aam
dec
retw
and
add
mov
in
test
sahf
inc
jnp
je
shll
shll
fsub
mov
popa
mov
in
pop
sbb
xchg
inc
cmc
and
ffreep
dec
mov
xlat
pop
adc
or
jmp
xlat
movsb
jbe
and
into
jge
into
dec
xor
mov
leave
cmp
hlt
inc
movsl
sub
dec
jg
dec
lock
add
ds
pushf
add
js
sub
scas
sti
push
mov
decb
flds
loop
or
test
mov
lret
and
push
jae
mov
mov
hlt
scas
adcl
test
cwtl
sub
push
js
mov
jle
or
dec
mov
imul
mov
adc
imul
jg
leave
jns
add
push
daa
test
fcmovnb
das
ja
and
sub
push
setle
fs
pmaddwd
push
jp
mov
js
adc
jmp
repz
adc
iret
mov
es
pop
sbb
nop
cmc
ds
jp
icebp
fldcw
pop
mov
je
call
imul
je
mov
iret
add
test
push
das
push
popa
mov
arpl
std
js
cmp
pop
push
pop
push
sahf
add
cmpsb
adc
xor
in
mov
ret
test
jmp
sbb
and
xchg
sub
call
dec
push
jg
and
das
shrl
inc
jp
cs
push
push
xchg
lock
ret
adc
sbb
push
xchg
pop
xchg
outsl
mov
pop
pop
or
arpl
inc
add
sbb
inc
pop
push
mov
and
sbb
sbb
adc
nop
std
fst
lods
push
inc
data16
daa
xchg
dec
mov
jns
loopne
ret
xor
imul
stos
test
ret
fs
mov
cmpsl
push
inc
jo
xlat
gs
mov
dec
inc
imul
repnz
mov
imul
lods
pop
aad
es
jl
inc
mov
push
or
push
icebp
jbe
jge
outsl
mov
or
outsb
mov
xchg
movsb
lret
push
jp
jg
fsubp
scas
lea
and
xchg
push
maxps
mov
sub
dec
inc
xchg
push
in
pop
in
adc
mov
leave
cmp
out
addr16
out
mov
rol
in
push
adc
adc
mov
not
jp
jne
jle
movsb
xor
ret
pop
in
fldenv
test
scas
dec
mov
bound
cmpsl
call
xor
call
sbb
iret
popf
bound
out
cmp
in
arpl
adc
sub
adc
in
add
aas
sub
fcmovnu
sub
in
mov
aam
ja
rorb
outsl
mov
data16
iret
jae
mov
mov
fnstsw
in
push
fs
pop
out
dec
xchg
jg
repnz
enter
into
rorb
push
push
pop
test
ss
jecxz
aaa
cld
lea
sbb
adc
sub
inc
inc
push
add
lahf
data16
pop
test
push
lods
out
lret
dec
mov
test
movsb
scas
adc
xchg
mov
stos
mov
jne
inc
xchg
sarb
iret
daa
mov
icebp
push
cmpsb
mov
stc
icebp
jno
imul
cmpsb
pop
add
lds
leave
das
test
sub
outsl
lds
lcall
xorb
insb
cli
pop
int
sbb
enter
xor
ror
sub
test
push
cmc
cld
cmpl
popf
repz
or
xor
fnsave
aaa
insl
fadds
les
fldenv
add
and
bound
pop
rclb
subb
add
scas
pop
fstpl
bound
popf
mov
pop
mov
test
fstpt
xchg
jae
mov
pop
outsl
aas
mov
hlt
xor
mov
clc
pop
mov
dec
imul
ja
cmpb
aas
fxch
jnp
jp
hlt
inc
lahf
push
mov
imull
push
push
and
xor
jne
cmp
xor
cmp
decl
add
mov
outsb
stc
inc
mov
scas
pop
mov
cltd
dec
ficoms
jecxz
push
in
cmp
lock
xor
int3
inc
cmp
jne
xchg
jae
fstps
idivl
and
cmc
inc
enter
and
scas
mov
nop
adcl
ret
sti
sbb
mov
mov
inc
std
shl
dec
add
pop
mov
inc
mov
int3
in
push
push
sahf
jb
sub
inc
test
lahf
out
ret
ds
sub
mov
dec
cli
imul
push
pop
sub
and
cmpsl
nop
sub
jno
pop
inc
fnstsw
movsl
es
add
cwtl
adc
jmp
dec
scas
aam
inc
fstpt
movsl
cld
mov
popf
mov
out
inc
push
mov
movl
fnstenv
fldcw
push
data16
je
and
push
adc
in
inc
xlat
jle
lahf
push
rcrl
sbb
dec
sahf
addb
xor
inc
call
xchg
mov
push
je
sub
cmp
jmp
push
into
jecxz
mov
mov
sahf
movl
sub
push
pop
add
call
adc
loopne
inc
or
push
int3
mov
jg
jp
adc
rcrl
in
pop
adc
pop
pop
lods
pop
jbe
pop
xchg
setp
ljmp
cmp
mov
andl
adc
mov
pop
push
xchg
inc
inc
inc
and
ja
jecxz
std
repz
dec
xchg
inc
fsubs
roll
sarb
out
iret
sbb
jecxz
mov
push
inc
or
cld
sub
dec
sub
fadds
jb
mov
test
mov
and
jl
lret
mulb
mov
pop
inc
xchg
xchg
cld
rclb
js
aas
mov
pop
inc
jb
or
bnd
aam
sub
cltd
cmp
out
cmp
lea
or
dec
movsl
mov
mov
bound
mov
xlat
and
push
dec
rcrl
add
xchg
jbe
adc
mov
js
repz
cmp
bound
clc
mov
popf
adc
or
sahf
push
pop
cltd
sub
ja
mov
pusha
dec
mov
lds
cmpsl
sub
jns,pn
int3
sub
sbb
or
push
jno
or
cmp
xchg
loopne
xlat
and
hlt
jns
fld
mov
mov
push
pushf
push
jp
ret
movb
cltd
adc
dec
push
out
cmp
jae
in
mov
mov
cld
fcmovb
push
cmp
bswap
outsb
add
xor
int3
cmp
shlb
push
iret
out
jnp
jno
outsb
in
test
inc
xor
pop
jnp
sub
mov
test
fcompl
aam
arpl
or
das
notl
insl
call
and
into
inc
out
repz
mov
scas
and
pop
repnz
mov
dec
aad
stos
lods
pop
mov
sbb
repz
pop
je
movsl
iret
sub
jns
fisttpll
or
loopne
xor
sar
into
call
test
cmpsl
stc
lcall
adc
mov
mov
lock
sbbl
xchg
cmpsl
inc
leave
jbe
test
outsl
pop
pop
cmp
xor
or
cli
and
int3
icebp
inc
or
out
push
daa
movsl
mov
xor
ss
jb
add
inc
xor
mov
or
dec
outsb
notb
xchg
push
int
dec
and
xor
xchg
arpl
dec
addr16
mov
leave
push
insb
rcl
xchg
jb
mov
bound
stos
nop
pop
out
dec
xchg
aas
insb
flds
xchg
sub
popa
pop
mov
sub
jno
and
in
xlat
lea
sub
iret
cmp
sub
int
adcb
or
pop
push
cs
ljmp
jmp
sbb
pop
aaa
inc
cs
push
icebp
xchg
xlat
mov
imulb
scas
call
int
push
in
ljmp
pop
sbb
sbb
ljmp
testb
ret
mov
lods
or
and
out
outsb
jle
or
fsubrp
fsts
cltd
mov
scas
or
nop
push
iret
test
sub
nop
cwtl
mov
cmc
ss
fadds
insl
and
ljmp
sarb
out
push
rcll
sub
dec
xor
mov
push
in
in
and
xchg
fdivrl
sahf
push
mov
mov
xor
push
loopne
jg
push
jmp
adc
aaa
aam
jmp
decl
pop
xchg
inc
push
pushf
or
stos
pop
xchg
in
sub
out
lock
aam
dec
sbb
negb
sub
push
xchg
cmp
push
data16
das
mov
xor
into
lds
or
mov
xchg
xchg
sbb
imul
cli
into
jno
adc
lret
xlat
add
adc
outsb
pushf
lahf
inc
ficompl
icebp
sbb
mov
roll
cmpsl
imul
dec
iret
jne
push
inc
scas
jns
mov
add
xadd
cmp
idiv
jns
mov
andb
ror
jl
xor
int3
adc
lcall
jl
leave
xchg
pop
stos
dec
jmp
js
ja
loop
clc
pop
xor
fwait
dec
pop
nop
mov
cwtl
xchg
mov
pop
les
mov
push
loopne
cltd
das
sbb
lock
aam
push
xchg
cmp
fwait
sbb
and
ds
in
mov
loop
adc
adc
xor
test
lds
int
sti
lods
inc
xor
lock
xor
ja
push
rcr
sbb
sti
ja
cmp
out
cmp
cli
xor
lods
into
leave
cmp
out
pusha
xor
xor
push
shlb
outsl
sub
add
sub
adc
rcrb
test
fists
subl
ficoms
insb
add
lret
inc
jb
insl
iret
sub
dec
lods
mov
cmp
inc
imul
push
daa
stc
insb
sub
scas
sti
lret
cmp
lods
icebp
inc
sub
mov
pop
repz
mov
leave
xchg
xchg
cmp
pop
jns
inc
xor
pop
xchg
xor
xchg
add
cmp
sub
sbb
push
jmp
loop
lods
and
and
and
mov
mov
xchg
cmp
scas
aam
or
aaa
mov
mov
push
pushf
adc
pop
or
inc
mov
setnp
dec
pop
outsb
sbb
aam
scas
pop
ret
imul
lock
jno
jl
mov
fs
sbb
push
adc
or
ljmp
cmp
fwait
xchg
out
inc
popl
stc
and
xor
mov
cmp
jmp
jle
dec
ds
push
test
fcomps
mov
inc
inc
cmpsb
outsl
test
mov
cwtl
test
dec
pop
imul
adc
and
jo
or
jo
es
inc
push
cltd
mov
orb
out
or
and
stc
push
in
ss
inc
or
mov
movsl
sub
fstps
pop
adc
jno
jb
ljmp
lods
das
xchg
cmpsl
mov
inc
or
pop
incb
daa
xor
daa
test
xchg
sub
jecxz
inc
inc
fadds
mov
filds
pop
xchg
adc
jge
inc
xchg
test
fistpll
and
and
cmp
fstpl
push
sbb
loope
pusha
push
rcrb
imul
arpl
test
dec
lods
dec
aaa
dec
popa
aad
mov
addb
fsubrl
popf
adc
pop
dec
iret
inc
sbbl
lods
add
pop
out
insb
in
int3
and
enter
or
or
jl
xchg
shl
sbb
dec
jmp
mov
cmp
out
pop
mov
and
loopne
lahf
gs
sti
sbb
ficomps
or
insb
xlat
jp
rcr
sarl
xor
nop
push
jge
add
roll
outsb
xor
in
sub
lret
push
or
inc
mov
add
xchg
xor
int3
adc
push
cmc
imul
cmp
cmpb
jl
inc
fisubrl
in
adc
jae
cmp
push
cmpsl
push
gs
dec
push
push
sahf
and
fxtract
repnz
adc
jns
adc
decb
dec
dec
xor
sarl
pushf
sbb
mov
out
sub
sahf
ljmp
dec
adcb
sub
int3
dec
cmpsb
shlb
psubsb
xchg
mov
repz
mov
outsl
in
js
shlb
add
shll
add
test
jno
xor
cmpl
dec
jge
sub
leave
cmp
sub
hlt
and
popf
mov
imul
mov
aad
fs
jne
sbb
jo
lods
jae
lret
push
fdiv
jb
jl
mov
jecxz
inc
push
dec
daa
sub
sub
test
fbstp
sbb
insb
mov
mov
mov
sub
pop
xor
add
aam
les
xchg
xor
sbb
jae
jne
cmc
lret
xor
jmp
sbb
insb
mov
fbld
jmp
nop
pop
xor
lret
dec
das
fdivrl
clc
xor
pushf
jns
cld
loopne
outsb
jnp
sbbb
push
pop
jle
adc
xchg
and
movsl
or
push
fs
popa
std
enter
sub
mov
mov
dec
pusha
push
ja
add
cwtl
jle
dec
dec
mov
loopne
out
stos
aaa
clc
sub
push
in
push
xor
in
jnp
out
je
pusha
inc
lock
mov
or
lods
jl
sbb
dec
fcmovbe
and
push
stos
sbbb
sbb
outsl
gs
stc
ja
lret
fs
lds
jae
and
sub
lods
ja
aaa
dec
mov
jne
mov
repz
test
aam
lods
add
cmp
inc
out
nop
xchg
enter
adc
mov
pop
cmpb
call
fists
xor
ret
xchg
ss
xchg
arpl
push
pop
jl
ret
arpl
loope
lret
and
adc
adc
jns
add
xor
adc
nop
jecxz
stc
inc
ljmp
aaa
and
cmp
xor
mov
lcall
fs
dec
outsl
loope
in
xchg
dec
and
fisttpl
push
push
out
sub
and
ja
cmc
pusha
das
dec
rorb
mov
jne
cmpsb
in
sbb
cmp
dec
sarl
call
insl
dec
leave
daa
xchg
test
add
or
xchg
mov
mov
je
ja
notb
or
in
cmp
mov
iret
sbb
std
shll
sbbl
mov
sahf
mov
pop
xor
push
or
sahf
xchg
ret
pop
inc
dec
pop
aam
mov
jecxz
push
xchg
and
frstor
adc
lahf
pop
dec
mull
push
pop
shrb
js
aam
dec
xchg
bound
pop
mov
pop
je
test
xorl
fidivl
adc
push
mov
adc
pop
adc
pop
or
in
sub
sbb
inc
xchg
push
fs
dec
pop
ja
mov
jb
sbb
lods
aaa
inc
jle
je
aad
sahf
push
mov
jne
and
mov
jge
fbstp
jge
pop
or
cli
or
mov
jb
imul
rcl
insb
imull
andl
dec
pop
jg
pop
cltd
mov
aam
and
jle
push
mov
inc
incl
push
xchg
xchg
std
loop
aas
ljmp
stos
xor
mov
in
push
mov
scas
fmull
stos
enter
repz
inc
jns
jle
adc
xchg
pop
xor
clc
test
jp
test
sub
push
stc
imul
in
bound
out
jnp
push
mov
pop
filds
or
aas
out
xor
jge
in
xor
out
aad
adc
xchg
add
pop
mov
enter
push
cltd
pop
mov
popf
pop
imul
xor
sbb
pop
push
out
addl
adc
shll
sbb
sub
xchg
cmpb
mov
loop
data16
inc
cmp
and
pop
hlt
add
add
push
cld
shlb
ror
pop
shrl
cmp
jg
xor
sahf
mov
xchg
mov
xor
jb
xor
cltd
sbb
or
mov
fiadds
pop
mov
cmpsb
mov
cwtl
ret
jl
push
loope
mov
les
cmovnp
jbe
icebp
sbbl
js
push
lods
cmp
push
sub
popf
xlat
pushf
jge
iret
adc
stos
inc
xor
pop
jge
shlb
sar
sub
incl
pop
iret
scas
imul
and
jecxz
push
insb
push
xchg
push
sbb
add
cmpb
stc
scas
dec
cmpb
inc
cmp
pop
fcmovnbe
xor
inc
xor
movsl
popa
jb
jmp
push
sub
cmp
cmp
movsl
outsl
or
out
xchg
pusha
negb
or
add
mov
push
xchg
sub
imul
dec
rcrb
jge
cmp
push
cmp
inc
adc
mov
inc
scas
leave
dec
dec
lods
repz
sti
or
js
push
cmp
and
ja
pop
xor
push
cmp
int3
cli
mov
mov
clts
movsl
mov
in
insl
sbb
insb
cltd
sub
push
inc
mov
jae
add
xor
dec
int3
inc
adc
mov
add
inc
clc
and
lock
rclb
movsl
and
in
and
fldl
adc
outsb
cmp
imul
sbb
jecxz
mov
sub
mov
push
mov
dec
add
ret
dec
roll
xchg
push
das
stc
out
pop
loop
push
or
sbb
jp
sub
popa
adc
aas
out
ret
xchg
xor
cmp
mov
roll
cmp
push
rcrb
addr16
cld
cltd
mov
lea
out
jno
fisubl
xchg
xor
fwait
jne
and
jo
pop
test
xor
ret
add
xchg
sub
gs
dec
xchg
xor
rclb
les
repz
bound
xor
adc
outsl
and
mov
dec
adcb
xchg
sbb
dec
dec
sti
mov
cmpsb
jmp
std
mov
and
out
into
addb
ret
js,pt
gs
push
jp
lret
idivb
aaa
pop
rorb
shr
xchg
and
testb
std
fmuls
and
or
mov
xor
movsl
push
fmuls
fstpl
jb
mov
clc
addr16
call
inc
movsl
pop
mov
repnz
ror
push
or
lods
fdivrl
popa
push
lds
jbe
loopne
sti
jns
push
loop
pop
outsb
jbe
and
addb
sbb
lds
test
cmp
adc
aad
scas
jbe
test
mov
sub
shl
jbe
mov
mov
mov
ss
add
fwait
mov
pop
inc
push
xchg
imul
adc
pop
mov
xchg
inc
xchg
jbe
pop
mov
aad
fcompl
aam
insb
js
inc
lds
in
sbb
daa
nop
add
jmp
loope
shll
and
out
inc
inc
movsl
xchg
inc
out
imul
ljmp
pop
ljmp
dec
test
fsubrs
push
lcall
sbb
imul
fcomi
push
sbb
push
jge
insb
cltd
scas
inc
mov
jg
xchg
cmp
push
xchg
cmp
cmp
sahf
jns
clc
push
add
and
sub
xorl
lcall
mov
repnz
jae
test
jae
arpl
push
cmp
dec
iret
xchg
test
loope
xor
add
gs
cld
fmull
aad
cmp
loopne
and
add
mov
push
adc
adc
or
push
ljmp
sub
inc
pop
cmp
or
rcr
jae
mov
mov
push
stos
push
pusha
notb
fadds
pop
lret
mov
dec
push
sbb
fidivrs
rclb
stos
xchg
aam
push
aam
fstl
add
cmp
inc
adc
mov
dec
inc
cli
subl
push
inc
pop
cmp
jle
jmp
bnd
gs
mov
pop
adc
js
frstor
jae
and
jae
fnstsw
inc
push
rcrl
lahf
inc
mov
pop
and
stos
shlb
push
decl
xor
mov
lods
cmp
bound
pop
dec
icebp
sbb
inc
outsb
cmp
movsb
xor
xchg
jg
fdivrl
test
mov
sarb
push
or
or
scas
inc
mov
cld
aas
jnp
mov
or
or
xor
fbld
cld
sub
cmp
cltd
pusha
push
dec
push
inc
popf
enter
scas
dec
inc
cmp
loopne
add
stos
add
mov
in
cmp
xchg
or
pop
cmp
fsubp
dec
jle,pn
and
sub
std
jbe
cmp
hlt
lret
cmp
les
insl
mov
inc
mov
xchg
nop
adc
mov
dec
loope
or
mov
dec
dec
fwait
mov
lods
roll
and
xor
inc
shll
jmp
cwtl
pop
cwtl
push
xor
insl
lods
and
jns
mov
jl
pop
mov
pop
lds
incl
sbb
je
rcrl
lahf
test
or
push
push
push
in
adc
mov
mov
push
lods
sbb
lods
iret
cltd
mov
sub
jno
xor
mov
cltd
adc
pop
cmp
ss
xchg
adc
dec
mov
fcomps
outsl
adc
addb
fistl
lods
ja
shlb
outsb
sbb
and
cmp
dec
xor
pop
imul
ficomps
adc
inc
and
nop
and
sbb
mov
les
or
jo
push
pop
roll
loope
testl
fwait
outsl
xorl
movsb
mov
xchg
lods
pop
cmove
shlb
or
mov
mov
aas
cmpsl
mov
sub
ja
and
add
movsl
ds
cmp
xchg
add
enter
les
arpl
or
dec
dec
shr
jle
sub
xor
pushf
or
push
aad
mov
out
es
hlt
pop
pop
cmp
gs
inc
imul
jl
mov
xchg
int
cmp
cmp
pop
and
aaa
fmull
sbb
iret
xor
or
pop
repz
movsb
adc
add
dec
xchg
pop
daa
jae
sub
je
mov
outsl
in
dec
jp
sbb
push
mov
fstpl
or
mov
pop
or
pop
and
faddl
jno
xchg
push
shl
add
fcmovnu
cmp
mov
test
add
adc
pop
in
mov
pop
jmp
fadds
das
xchg
push
inc
sbb
jp
add
jle
inc
sbb
out
dec
add
pushf
push
lods
pcmpeqw
mov
fs
cmpsl
push
in
stos
or
jmp
mov
in
insl
xchg
test
sbb
out
cmp
jl
or
fcompl
mov
mov
mov
popf
orb
xchg
loopne
adc
cmc
pop
inc
sar
fdivs
add
jo
inc
mov
pop
lret
cmp
jns
stos
xchg
es
fldl
lret
adc
test
fmulp
arpl
pop
movsl
cmp
popf
cli
mov
roll
cs
popa
mov
shlb
add
mov
pop
push
shr
arpl
jl
cltd
or
push
mov
and
les
mov
repnz
fcomps
xor
xchg
test
inc
into
je
stos
push
mov
cmpsb
add
mov
add
xchg
xchg
add
iret
jl
mov
enter
mov
adc
loop
inc
cmp
sbb
test
testl
sarb
sbb
xchg
inc
push
push
daa
jo
dec
jle
pop
cmp
xchg
pushf
sahf
sub
jg
fildl
jbe
fldcw
push
mov
xchg
pop
xchg
mov
mov
lret
jmp
fnstenv
nop
inc
pop
aad
add
daa
jmp
add
mov
loope
xor
nop
fsubrs
testl
repnz
push
movsb
js
out
xchg
pop
xchg
cltd
or
adc
jmp
mov
iret
jne
mov
lds
pop
in
inc
mov
hlt
nop
out
subl
sbb
negb
add
clc
bound
xchg
push
fadd
or
js
or
sub
mov
shr
fisttpll
jg
cmp
lahf
rcrb
xor
out
cmp
add
xchg
fxch
addb
mov
daa
loop
pop
mov
mov
insl
shr
popf
mov
adc
adc
insl
mov
push
cld
xor
push
mov
inc
lods
inc
lock
add
test
lods
out
xchg
lahf
cmpb
mov
mov
pop
cmc
push
pushl
cmp
iret
ret
pop
jae
dec
cmpsl
mov
mov
insb
aas
jno
dec
jl
movsl
bnd
xor
cli
and
sub
in
pusha
js
push
jp
roll
in
sub
pusha
sbb
repnz
in
sarl
mov
cld
mov
pusha
out
hlt
xchg
push
add
and
aas
shlb
call
mov
es
push
pop
daa
lock
in
cmp
lods
lahf
xor
cmp
mov
cmp
js
sub
repz
lahf
aad
pop
stos
dec
test
sbb
idivl
faddl
enter
mov
dec
jmp
pushf
adc
xchg
adc
push
and
mov
dec
mov
fs
mov
ljmp
orl
jo
pop
jbe
mov
xor
or
iret
imul
aas
mov
pusha
arpl
leave
or
add
cmp
lret
and
adc
into
movsb
mov
fucompp
mov
stos
fnstsw
je
and
cmc
mulb
xor
mov
mov
pop
aad
or
or
adc
test
fildll
sti
cltd
fnsave
pop
cmp
in
add
dec
adc
bound
adc
mov
mov
dec
xor
pop
insb
cmp
pop
sub
mov
sbb
test
dec
les
repz
inc
pusha
fimuls
rclb
jo
subl
out
sub
jle
gs
loop
loop
mov
lock
dec
aam
arpl
sbb
mov
mov
xchg
std
mov
arpl
pop
mov
mov
jno
mov
xor
popf
cmp
dec
ds
push
sti
ja
mov
mulb
sbb
dec
shll
roll
or
pop
mov
shl
push
aaa
js
loopne
pop
les
adc
lret
ja
data16
and
jg
out
iret
ljmp
cmp
pop
hlt
int3
pop
sbb
aad
inc
xchg
mov
pushf
xchg
fs
leave
mov
adc
mov
mov
adc
add
and
aam
dec
stos
sbb
pusha
les
or
lods
scas
movsl
push
mov
sti
ja,pn
pop
sbb
jp
and
sbb
in
insb
pop
jecxz
inc
sarl
ds
popf
data16
fwait
adc
push
sysexit
inc
push
pusha
dec
movsl
rol
xor
sahf
mov
mov
mov
lods
jmp
mov
push
ss
add
lods
dec
ss
xchg
cmpsl
cltd
or
stos
cmp
lret
dec
fistpl
mov
cmp
mov
aaa
stc
sarl
scas
add
dec
test
mov
movsl
fldl
aas
jge
jge
and
fs
stc
or
mov
dec
xchg
cltd
loope
fs
gs
xor
movsb
les
cmp
pop
stos
int3
adc
fnstenv
xorl
cwtl
jo
dec
sub
add
clc
insb
mov
setle
and
arpl
sub
dec
out
sbb
les
mov
mov
xor
roll
jl
lods
jge
fstl
sbbl
test
cli
push
jae
and
mov
outsb
fdiv
shll
xlat
pop
pop
mov
lods
sahf
jecxz
pop
enter
adc
xchg
mov
adc
pop
or
adc
push
and
xchg
adc
stc
adc
stc
aam
mov
jne
dec
xchg
test
inc
pushf
insb
jp
mov
dec
sub
sbb
sbb
push
jle
xor
mov
pop
xchg
addr16
insl
out
fsubp
adc
xchg
fisubrl
jns
sahf
std
stos
mov
ret
test
xorl
adc
popa
loopne
loope
mov
stc
fs
and
pop
pushf
mov
fistpl
inc
cld
sahf
jg
inc
xor
enter
lret
dec
dec
call
out
xchg
and
pop
sbb
pop
pusha
incl
in
test
pop
mov
jbe
scas
std
lahf
fs
cmp
rolb
and
xor
jmp
les
sti
dec
popa
xchg
and
jecxz
dec
xchg
je
push
mov
enter
mov
pop
mov
and
sub
stos
dec
sbb
cmc
fmulp
xchg
xor
das
test
push
cmp
aaa
dec
ret
icebp
jb
inc
lret
out
mov
cmc
mov
jae
inc
push
jmp
out
scas
jbe
xor
into
pop
xor
cmp
jmp
ret
add
pop
inc
movsb
push
dec
lcall
repnz
xchg
adc
dec
pop
adc
movsl
nop
push
or
mov
mov
fidivrs
sarb
ret
orl
cwtl
push
add
stos
lds
xchg
adc
sti
mov
mov
or
fwait
sbb
or
rorb
add
push
cmpb
xchg
mov
xchg
xor
cmp
stc
mov
fwait
push
ja
mov
aas
add
fldcw
and
or
movsl
pop
repnz
cwtl
xor
inc
lahf
mov
push
lea
and
mov
ja
mov
lahf
jp
pop
sbb
xor
cmp
push
adc
lock
lock
aaa
cld
jbe
mov
cwtl
xchg
test
mov
push
negb
xchg
es
pushf
sahf
jg
push
push
and
enter
cmpsl
jb
mov
sahf
jge
xchg
lods
jmp
in
mov
popf
in
mov
xchg
popa
or
popf
xor
ret
add
imul
xor
add
cmpsl
push
and
push
add
repnz
inc
ljmp
cld
pop
das
in
and
fdivrl
mov
cld
pop
cmc
ja
fcomp
dec
shll
loopne
outsb
dec
sub
push
push
aad
xchg
mov
mov
insb
in
cmp
dec
movsl
ljmp
sbb
dec
xchg
dec
push
stos
and
bound
and
std
mov
arpl
push
daa
push
lds
inc
dec
mov
push
and
jbe
daa
dec
push
mov
cmpsb
fs
or
sbb
idiv
inc
mov
push
xchg
xor
aas
out
lret
lods
sbb
cld
insl
xchg
addr16
das
pop
cmpsl
lahf
xor
inc
repz
pop
add
pop
nop
scas
xchg
bnd
cmp
stc
sbb
and
dec
nop
shll
in
arpl
arpl
sbb
pop
mov
mov
loope
push
cmp
ja
add
addr16
roll
push
enter
xchg
icebp
shl
cmp
stos
mov
pop
movsb
lahf
mov
xchg
insb
cmpsb
xor
jbe
imul
xchg
push
push
jp
xchg
push
arpl
push
shl
lahf
loopne
inc
addr16
xor
stos
mov
stos
mov
add
jne
jle
add
mov
rcrl
mov
lock
aaa
out
bound
mov
push
stos
dec
cmc
aad
ja
or
mov
cwtl
inc
or
in
imul
cmp
scas
xchg
xor
cmp
dec
mov
ljmp
scas
fs
jb
fdivrl
cmp
mov
mov
in
mov
js
mov
push
insl
sub
xchg
jnp
test
jl
xchg
lret
scas
cmp
xchg
push
xor
ljmp
xor
or
fcompl
lret
mov
mov
mov
test
push
popf
imul
pusha
test
add
stos
mov
xchg
repz
gs
orb
push
or
pop
sub
out
xchg
mov
test
sbb
gs
notb
xor
mov
jg
xor
sub
mov
das
jecxz
addr16
mov
and
and
cld
stos
push
pop
fs
pop
cmpsl
pop
mov
cmc
imul
mov
in
inc
mov
loop
jb
mov
add
and
loope
jno
ret
hlt
les
or
stos
aas
jp
std
inc
push
xchg
popf
pop
lahf
push
mov
mov
js
jne
aas
in
push
push
aam
pushf
jo
sbb
mov
dec
dec
popa
add
xchg
inc
cmp
dec
das
fbstp
add
pop
sbb
sub
sub
mov
xchg
pushf
inc
ret
push
jnp
sub
das
test
mov
jbe
lcall
add
ljmp
fs
mov
loopne
mov
cmpsb
fwait
pop
cmp
and
sub
pusha
add
ljmp
and
inc
lds
bound
pop
and
and
sbb
xor
and
push
lods
mov
lahf
add
dec
icebp
xchg
fcompl
filds
mov
cs
cmp
jbe
insl
dec
push
jmp
and
jl
mov
mov
pop
push
syscall
jle
add
sbb
cmpsb
push
ficoml
flds
jb
imul
xor
ja
push
sub
enter
mov
push
dec
test
dec
fildl
xor
mov
push
push
push
ds
mov
fcoms
mov
sbb
push
inc
cmpsb
outsb
lret
fwait
adc
arpl
inc
push
xor
in
adc
aam
scas
dec
lret
mov
adc
add
out
add
cmp
push
ret
mov
pop
mov
xchg
pop
fidivrs
outsl
jmp
jl
popa
push
inc
mov
lcall
out
lods
jp
cmp
xlat
ret
js
mov
push
push
dec
xchg
push
inc
mov
or
in
sub
add
rcl
mov
xchg
icebp
lret
call
mov
xor
sub
gs
xor
test
xor
pop
loop
cmp
rolb
cmp
or
push
je
negl
xchg
cld
adcl
gs
sub
lods
scas
mov
xor
cmp
dec
cmp
out
mov
cs
xchg
je
add
pop
lea
fldcw
inc
mov
ljmp
icebp
mov
in
xchg
push
notl
add
pop
imul
dec
xor
cld
mov
cmp
imul
pop
push
out
cld
fidivrs
mov
push
cwtl
popf
loope
mov
jo
jnp
xor
jl
inc
loopne
adc
lret
into
daa
push
ret
mov
push
jl
jmp
incl
add
pop
imul
stos
rcr
mov
xor
outsl
out
mov
cli
repz
and
sbb
cld
pop
ja
xchg
inc
cmp
jmp
dec
xchg
sti
lods
push
mov
stc
push
subl
or
adc
mov
push
mov
mov
js
cmpsb
add
dec
shlb
push
and
jge
filds
leave
fbstp
mov
fcoms
jge
mov
jg
aas
scas
aas
push
imul
pop
add
push
aam
aad
push
popf
pusha
add
cmp
pushf
loop
arpl
mov
and
fwait
mov
adc
xchg
pop
or
inc
daa
cmp
pop
loop
popf
or
les
mov
jmp
pop
loop
push
cmp
xchg
adc
jbe
jno
add
fdivrs
mov
xor
dec
je
sahf
jcxz
fstps
sbb
mov
sahf
clc
cmp
popf
ror
xchg
xlat
imul
sub
cmp
sub
pusha
sbb
js
mov
nop
or
jb
cs
push
pusha
inc
push
fmuls
sti
or
adc
pop
sbb
inc
out
popa
jo
inc
lods
or
push
lock
or
pop
leave
jp
daa
dec
cmp
jbe
jne
inc
push
push
mov
and
jb
mov
int3
in
sub
repz
dec
popl
pop
lds
sbb
jg
lea
inc
jnp
pop
arpl
lea
stos
je
std
lods
call
dec
mov
jle
jbe
adc
or
jecxz
inc
aas
jg
dec
mov
int3
sub
fisubrs
adc
cs
jl
adc
xor
data16
mov
in
hlt
mov
popa
lahf
insb
mov
xchg
push
adc
xchg
add
movsl
mov
mov
movsb
std
adc
fsubrp
pop
push
idiv
inc
xchg
pop
out
and
mov
movsl
jb
add
pop
rcll
dec
dec
lock
inc
sahf
jmp
addb
inc
jbe
test
flds
outsl
jg
xlat
mov
ret
scas
mov
xchg
cmc
das
rclb
aam
cli
insb
cltd
or
mov
test
imul
cmp
rolb
mov
loopne
sub
xor
mov
jbe
outsl
cmp
mov
mov
repz
scas
push
push
jb
xor
xor
cmp
mov
je
lds
jno
out
sbb
inc
mov
mov
add
jmp
dec
repnz
pop
aad
push
test
arpl
std
mov
inc
and
jge
and
out
aaa
fwait
xorl
sbb
das
xor
mov
sahf
inc
jne,pt
ljmp
pop
arpl
xchg
jmp
out
pop
sar
ja
push
xchg
js
mov
out
out
push
jae
mov
addl
or
clc
and
les
aaa
or
daa
cld
push
mov
adc
lods
data16
xchg
inc
sub
or
out
int3
xor
lahf
jns
mov
leave
inc
rorl
adc
mov
inc
push
mov
test
add
test
setns
sbb
cmpsb
jmp
push
jae
cltd
mov
mov
ret
in
or
cwtl
in
mov
mov
neg
jb
scas
push
out
ja
clc
mov
mov
xchg
xor
inc
mov
add
pop
rorb
jg
adc
sbb
xor
adc
outsb
push
pop
rorb
hlt
js
data16
ds
movsb
cmp
dec
ret
add
xchg
fcoms
sub
dec
cmp
fs
divb
cmpsl
es
lods
push
mov
pop
or
mov
les
in
pushf
add
sarb
ret
cmp
cwtl
cli
stos
imul
rcr
sbbb
nop
add
push
mov
inc
outsb
sbbl
sub
enter
add
pop
jb
push
and
and
daa
out
xchg
loop
sub
and
jae
sbb
mov
jo
fsubl
mov
pop
stc
and
mov
mov
icebp
out
dec
adc
mov
nop
test
sahf
mov
les
stc
jno
push
mov
ds
jmp
cwtl
mov
daa
inc
cmp
cmp
pop
test
pop
fidivrl
in
inc
xor
or
std
in
pop
std
out
and
hlt
movsb
mov
mov
orl
dec
cmp
bndstx
dec
and
cmpsb
and
mov
xor
aaa
insb
sbb
pop
addr16
addr16
inc
das
out
cmpsb
out
les
scas
pop
cltd
outsl
in
jae
inc
fmuls
lret
in
cmp
xlat
fistl
xor
lret
xchg
pop
or
call
rcl
clc
push
mov
fiaddl
fistpll
ljmp
push
loop
sub
data16
sub
mov
and
aad
xchg
mov
jl
mov
ffree
jo
and
in
cmp
popa
xchg
mov
pop
jno
stc
mov
test
xlat
xor
hlt
pop
xor
push
add
sbb
xlat
jge
and
mov
leave
inc
loopne
pop
dec
outsb
lods
enter
fdivrs
adc
repz
xor
fs
adc
inc
scas
pop
add
dec
stc
add
popf
adc
push
inc
mov
inc
in
cmp
mov
dec
sbb
and
xchg
fucomp
iret
jbe
xchg
aam
jl
daa
jge
fnstcw
dec
dec
int3
cmp
cmp
outsl
fstpl
in
adc
xor
mov
xor
loopne
jnp
or
push
cs
sub
rorb
gs
and
in
cs
imul
cmpsb
pop
lret
lret
orl
int3
lret
inc
jae
sarl
cmp
dec
in
fdivp
std
pop
ret
or
loop
push
mov
mov
std
pop
pop
pusha
cmp
add
aad
scas
jmp
pop
leave
pop
add
push
bound
out
xorb
pop
and
cmp
add
ret
xor
sbb
pop
stc
jnp
fmulp
and
add
add
add
enter
movsl
das
jl
xchg
mov
inc
adc
in
repz
stos
push
jl
cmpsl
fisubrl
push
imul
cmpsb
rcl
ror
out
jl
jmp
ss
fistpl
outsb
cmpsl
pop
andb
or
call
pop
sub
mov
sbb
aad
pop
insl
sbb
stos
cmp
arpl
aas
ds
pop
inc
shll
sbb
testb
xlat
call
xchg
jp
dec
sbb
sahf
lahf
pop
rep
sbb
vsubps
test
rcrl
mov
mov
push
sub
add
into
push
xchg
sbb
mov
mov
inc
repnz
loopne
out
fiaddl
mov
sub
ljmp
popf
adc
pop
and
faddl
aaa
jmp
ss
cmp
sbb
icebp
cmpsl
jp
out
cli
pusha
jmp
je
jmp
outsl
adc
adc
mov
dec
lret
pop
xor
push
ja
xchg
shrb
dec
ss
imul
push
mov
sbb
push
dec
xchg
dec
stc
and
add
cmp
xchg
pop
fs
fisubrl
mov
dec
push
pop
call
push
mov
psubw
inc
mov
pop
push
jb
into
mov
or
xchg
ja
and
xlat
es
sbb
insl
sbb
int
jne
dec
jmp
push
stc
mov
jmp
fucomi
pop
xlat
icebp
je
sub
sbb
imul
xchg
add
and
mov
cmp
outsb
jecxz
repz
lock
jb
cmp
out
cmp
xchg
and
mov
pushf
mov
inc
in
dec
andb
dec
movsl
sub
std
adc
aas
add
sahf
mov
in
insl
jno
cltd
lret
adc
inc
jge
and
dec
xlat
mov
or
inc
mov
into
add
push
jo
xchg
pushf
sbb
lods
fldl
in
mov
adc
mov
jg
pop
inc
sti
xlat
je
mov
xor
ss
push
shlb
inc
loop
jg
inc
add
loope
lahf
nop
orb
sub
outsb
cmp
xor
pop
jo
jb
repnz
mov
pop
mov
lahf
mov
movsl
mov
lock
je
fwait
adc
mov
leave
xor
lea
mov
loope
mov
rcrl
in
mov
es
mov
jnp
mov
pop
mov
push
mov
adc
in
daa
adc
fcmovb
dec
mov
lcall
cmpsb
fidivs
mov
xchg
hlt
movsb
sti
in
cmp
in
or
out
push
pop
mov
es
scas
mov
push
sub
lods
jge
cmpsl
mov
pop
add
and
xor
ss
inc
pop
ds
pop
xchg
pop
aaa
ljmp
data16
pop
xor
sbb
jns
rol
mov
mov
push
push
jns
jmp
jl
les
sbb
bound
or
loope
subl
jmp
nop
adc
push
movsl
and
adcl
cmp
mov
mov
fs
cmpsb
inc
xchg
jo
dec
mov
aad
xchg
push
and
ljmp
arpl
mov
mov
insl
imul
cmp
mov
adc
push
sub
in
inc
outsl
mov
pop
mov
xchg
scas
xchg
insb
shrb
mov
pop
je
pop
inc
scas
mov
push
add
popa
test
mov
loopne
ds
sbb
test
shr
sarb
push
clc
jle
pop
shll
xchg
push
popf
or
pop
pop
test
sar
mov
cmp
mov
push
cmp
dec
jbe
push
cmp
hlt
subb
cmp
sbb
lea
jp
js
xchg
sbb
dec
push
aaa
stos
jmp
cmpsl
adc
mov
in
or
dec
and
in
mov
jecxz
cmp
mov
loop
lea
lea
lods
mov
mov
pop
jne
lret
sbb
icebp
jbe
lea
test
jle
cmp
outsl
test
xor
push
xchg
in
jge
push
fs
xchg
add
aas
subl
fadd
adc
hlt
movsb
popa
pop
mov
mov
lahf
add
je
aam
pop
xor
in
jg
push
iret
jbe
xchg
mov
in
cmp
hlt
ret
dec
lods
repnz
rcl
std
sub
xor
out
repnz
pop
insb
les
adc
test
fmull
aam
pop
mov
jecxz
adc
aas
jo
inc
and
and
lret
enter
sti
mov
cs
aaa
pop
jl
fdivs
mov
mov
negl
jl
add
cmp
sub
jge
and
dec
mov
xchg
push
pop
xor
jnp
scas
sub
pop
stos
add
into
int
cmp
push
jne
dec
pop
aas
jne
mov
inc
push
leave
faddl
cmp
xchg
adc
xor
outsl
sub
jns
sbb
cmp
fndisi(8087
cmp
scas
imul
lock
adc
movsb
aam
aaa
jl
test
dec
int3
bound
or
shrb
jl
dec
or
je
scas
faddl
mov
outsb
js
and
sub
jp
lods
rol
xchg
and
fidivrs
sbb
push
inc
or
hlt
mov
imul
xchg
xor
sbb
push
gs
mov
xchg
lret
lret
imul
pushf
scas
in
cmc
dec
jge
fimuls
push
adc
xchg
jmp
lcall
push
jecxz
jp
sbb
inc
mov
outsl
les
and
out
in
pop
xchg
imul
std
mov
ret
ror
int3
cld
jmp
sbb
push
or
dec
jmp
or
imul
nopl
stos
nop
out
inc
adc
std
insb
std
scas
mov
daa
inc
sub
lds
pop
cmpsb
and
mov
cmpsb
pop
xor
mulb
ret
add
enter
daa
adc
loopne
mov
fmull
outsl
stos
imul
cmp
cmpsl
insb
cli
inc
jno
fstps
cwtl
sub
mov
inc
js
daa
mov
cltd
add
xlat
icebp
popf
mov
outsb
xor
lock
inc
jnp
jmp
and
in
lcall
jge
sub
in
pusha
sbb
mov
pop
jbe
sahf
push
lods
fldenv
and
jg
cmp
std
push
or
call
mov
insb
xchg
sarb
dec
fisttpl
lcall
inc
push
cld
in
mov
jl
ja
xor
jns
xchg
sbb
push
push
aas
aas
jb
lods
test
mov
dec
sbbl
cmp
xchg
ds
xchg
repz
push
imul
or
cmp
cmp
sbb
sub
outsb
mov
jne
jb
adc
xchg
shrl
pop
xor
pop
xchg
test
cmp
pop
mov
es
jb
std
test
sbb
aam
sbbb
test
shlb
cmc
adc
and
add
xchg
lods
cmp
cmc
add
loope
adc
sub
test
test
xchg
mov
jecxz
lods
mov
push
adc
pop
mov
mov
mov
mov
stos
cmp
push
fisubl
and
xchg
adc
dec
ror
pop
cmp
divb
inc
movsb
aam
sbb
jecxz
or
sbb
push
rorl
pop
xor
sub
mov
mov
xor
repz
out
cld
xchg
jno
dec
jae
stc
sbb
cmp
push
sti
lods
jb
push
scas
movb
or
insl
cmc
cld
add
push
movsl
sbb
mov
xchg
repz
add
xchg
lea
jb
call
call
loopne
cmpsl
jo
push
mov
add
inc
adc
insb
loop
sbb
imul
int
scas
imul
fxch
pop
mov
and
int3
add
mov
shrl
pop
jmp
test
sub
adc
adcb
aas
xchg
jle
xor
mov
and
scas
sahf
push
mov
pop
jae
out
add
cmpsb
loopne
lock
mov
or
test
lock
xor
bound
push
test
loope
push
cs
idivb
jp
push
inc
jno
sbb
js
dec
adc
cmp
add
and
jle
aas
mov
cmp
jnp
xor
mov
inc
pusha
sbb
cltd
arpl
loop
stos
jno
sub
xor
movsb
xchg
jge
insl
popf
jnp
aad
jae
xchg
sbb
adc
shrb
add
and
std
add
pop
pop
cmpsl
pop
das
dec
aas
in
mov
cmc
mulb
ret
loope
rorl
call
cmc
outsl
nop
sbb
cmp
stc
pop
test
xor
fsubs
sbb
loope
inc
mov
add
pop
mov
and
cmp
insl
dec
fwait
inc
into
mov
in
mov
dec
adc
mov
jge
add
lahf
sbbl
ficomps
jmp
out
jae
pop
xor
mov
jp
mov
jle
mov
mov
and
in
aad
cs
addr16
xor
mov
in
push
xor
sub
in
cmpl
add
out
mov
mov
add
inc
shlb
sub
dec
or
xorb
adc
pop
fstpt
imul
mov
insb
mov
xor
scas
popa
inc
js
pop
mov
push
ficoml
mov
test
jp
inc
lods
and
outsl
dec
mov
das
shr
pop
test
nop
out
mov
push
or
nop
push
sbb
xchg
in
std
or
xor
jb
int3
mov
add
dec
in
cmp
adc
mov
and
mov
add
push
sub
inc
scas
inc
mov
mov
inc
or
sar
cmp
iret
sbb
push
inc
cwtl
adc
xchg
js
movsl
movsl
pop
adc
pop
jae
push
sbb
cmp
mov
jo
mov
ds
xchg
pop
js
pop
je
or
dec
ret
sub
jle
repz
call
fists
cltd
sbb
push
fisttpll
rcrb
jo
xchg
inc
std
fimull
mov
hlt
sub
popa
mov
ret
add
cltd
leave
je
inc
dec
lods
dec
cmp
rcrb
jl
mov
aas
push
or
out
aaa
movsb
into
mov
icebp
fstps
lret
and
out
mov
in
mov
mov
lahf
es
pop
pushf
sti
pop
jno
daa
inc
outsl
loop
nop
sbb
push
push
clc
adc
arpl
and
jmp
push
jnp
mov
push
repnz
repnz
int3
mov
in
insl
shrl
subl
mov
or
xor
das
je
rcr
in
lahf
or
shrl
push
mov
or
loope
imul
test
imul
pop
push
shl
idivl
inc
sbb
sub
in
and
addb
pop
push
aaa
xchg
xchg
insl
ds
scas
dec
cmp
sbbb
sldt
or
int3
sahf
or
mov
cmc
inc
in
cld
lahf
lock
pop
dec
stos
adc
pop
mov
cmpsb
sbb
mov
imul
dec
scas
jbe
adc
and
adc
push
cmp
push
jmp
xor
andb
mov
mov
shl
cld
add
insl
cmp
stc
das
data16
repz
lods
push
stos
bound
enter
mov
and
call
icebp
dec
sub
fcomps
cmp
cld
frstor
nop
cmp
adcb
inc
sub
hlt
fdivrl
shlb
dec
in
test
pop
fidivs
dec
xor
stc
lods
jne
cwtl
rol
ret
iret
dec
sbb
mov
out
and
insb
pop
jmp
jg
push
push
sbb
mov
mov
cmp
inc
push
mov
shrl
aaa
call
cmc
or
testb
or
mov
lahf
shrb
cltd
dec
adc
inc
inc
mov
and
sbb
stc
out
pop
mov
scas
push
aam
sbb
pop
push
pop
sbb
inc
loop
ss
shr
push
sub
clc
out
sbb
lahf
cmp
ss
cltd
fldcw
adc
lcall
or
sub
dec
movaps
movsb
cli
and
dec
ljmp
xchg
xor
jne,pn
lea
es
in
cmpsb
sahf
shll
das
dec
jae
pop
mov
and
xchg
push
xor
repz
sub
mov
adc
adc
movsb
call
xor
jg
test
inc
test
cmp
in
add
cmpsl
divl
enter
xchg
scas
lea
test
push
sub
jb
and
xchg
int3
cli
insl
mov
mov
dec
inc
pop
push
sbb
mov
push
fistpll
int
sbb
addb
sub
sub
or
fsts
push
pop
mov
pop
rol
fcoml
dec
test
je
push
sbbb
pop
dec
pop
mov
aaa
aas
and
sbb
test
inc
inc
push
ljmp
iret
in
and
aam
into
cltd
mov
fs
xor
adc
dec
mov
inc
cmpsl
mov
adc
into
mov
fnstenv
in
clc
or
outsb
inc
mov
xchg
dec
sti
arpl
sti
jbe
or
ss
daa
test
adc
fildl
adc
stos
call
xchg
mov
cmp
and
adc
push
lods
loopne
ljmp
sarb
ds
repz
out
test
test
repz
xchg
mov
out
bound
roll
popf
insl
iret
pop
test
adcl
inc
stos
ljmp
ljmp
jbe
mov
dec
in
mov
mov
outsb
xor
loopne
insb
out
dec
or
mov
and
or
mov
pop
outsl
ret
or
je
cwtl
test
cltd
and
test
push
daa
or
sub
cld
pop
cwtl
push
add
cmp
lahf
test
imul
iret
addr16
mov
call
lods
adc
out
push
mov
test
in
test
push
cmc
in
jp
leave
mov
ret
fnsave
jmp
jbe
js
fs
inc
dec
push
mov
jno
lahf
lret
and
jg
cld
mov
sbb
call
in
into
inc
rcl
pushf
add
ljmp
sub
loope
or
inc
imul
and
mov
cmp
test
xor
mov
mov
je
rorl
jg
dec
fs
mov
jg
xor
inc
mov
daa
and
add
mov
popf
and
add
xchg
test
jnp
fsubrl
lock
mov
add
mov
mov
das
inc
push
inc
xchg
jle
xor
sbb
hlt
into
and
mov
popa
mov
loopne
xchg
xor
cmp
mov
movsb
lea
and
sbb
gs
insb
jecxz
idivl
in
dec
sub
lds
push
pop
cmc
push
into
mov
test
fidivs
xor
cmpsb
clc
mov
pop
je
lods
mov
add
pop
xchg
adc
es
push
fstpl
loope
int
loope
push
or
add
dec
push
or
mov
int3
push
mov
lock
pop
push
pop
setl
and
sub
test
inc
cmp
mov
pop
xor
xor
xchg
push
jae
or
push
std
imul
iret
or
test
pop
dec
fs
sahf
daa
push
xchg
lret
and
mov
adc
push
dec
imul
adc
fildl
aas
rcrb
lret
popa
aas
sub
les
in
aaa
xchg
sub
sbb
shlb
stc
pop
or
rorl
bnd
mov
hlt
inc
ret
aas
or
jb
sub
outsl
aad
stos
fst
cmp
xor
jle
dec
repz
pop
push
cmp
dec
data16
dec
mov
scas
jge
xor
sub
xlat
add
and
lahf
xor
xor
dec
xlat
scas
adc
pop
in
jl
add
xor
loopne
adc
add
js
xchg
dec
sbb
push
bound
es
mov
pop
xor
icebp
mov
mov
jg
and
mov
xor
popf
daa
ret
jecxz
add
insl
pushf
ret
divb
xchg
jecxz
outsb
hlt
adc
ds
and
push
push
and
lret
xor
inc
and
pop
shlb
subb
lret
insl
outsl
fidivrl
repz
cmp
fisubrs
and
push
dec
xchg
sbb
stc
dec
insb
or
dec
dec
or
inc
adc
and
outsb
add
imul
inc
xor
pusha
pop
or
filds
mov
pop
sub
adc
mov
and
into
push
inc
fwait
int
pop
dec
inc
sahf
pusha
and
loopne
push
xor
in
xor
aam
pop
pop
mull
cwtl
out
call
pop
inc
mov
mov
clc
dec
iret
pop
mov
pop
xchg
int
stc
insl
jbe
and
sub
mov
test
les
add
outsl
dec
adc
cmpsl
mov
xchg
pop
stc
addr16
sub
jge
lret
in
into
fdivs
or
pop
dec
sub
and
repz
or
xchg
jbe
test
mov
push
imul
loope
insl
inc
sbbb
cmp
pop
das
movsb
pop
push
mov
lahf
jae
stc
icebp
inc
test
test
push
arpl
into
insb
xchg
cmpsl
cmp
add
push
outsb
sbb
inc
push
push
shll
in
cmp
xor
cmp
mov
jbe
fucomp
xor
imul
in
push
xchg
pop
cmp
and
cmpsb
dec
sub
dec
imul
jmp
sub
or
inc
pop
xor
out
pop
dec
lret
mov
fdivl
aam
ret
pop
adc
push
lret
mov
jmp
ja
push
stc
cmp
imul
or
in
push
mov
dec
jl
push
mov
and
data16
mov
xor
test
pop
insb
xlat
lods
inc
pop
pusha
inc
jns
adc
mov
jp
insb
sti
mov
cmova
push
aaa
mov
pop
int
xchg
cmpl
or
jae
push
jae
cld
movsl
pop
xor
inc
pop
fldcw
icebp
cpuid
jg
fwait
stc
incl
adc
and
arpl
sbb
ja
sbb
cwtl
and
in
mov
lret
leave
cmp
in
test
sub
push
mov
mov
mov
repnz
push
cmp
in
icebp
mov
sbb
scas
mov
bswap
xchg
movsl
in
xchg
pop
addr16
mov
addr16
stc
clc
add
leave
sbb
stos
jno
mov
adc
cld
push
push
push
sbb
mov
daa
bnd
mov
mov
enter
cltd
aas
cmp
jmp
xchg
xchg
cmp
xor
cmp
jmp
xor
push
jge
pop
push
jecxz
fldcw
shlb
jns
adc
xchg
clc
aad
push
add
ret
dec
mov
push
inc
mov
loop
out
push
mov
andl
sarb
push
sbb
add
jno
push
cmp
jl
push
je
test
in
ret
repnz
push
rclb
out
insl
lret
ficoml
rorb
in
jmp
fdiv
add
inc
mov
or
mov
jnp
adc
int3
aas
aam
pushf
or
fmuls
shll
mov
jno
loop
inc
imul
pusha
cmpsw
sub
pop
loop,pt
fwait
out
int3
dec
mov
scas
inc
sbb
nop
insl
fisttps
xor
push
test
inc
cmc
jne
inc
mov
fldt
imul
push
lods
jae
add
jl
jle
xor
adc
and
pop
in
mov
loop
jl
adc
jns
or
outsb
cmp
mov
loope
xor
addr16
jp
mov
lret
cmp
shlb
cmc
shll
ret
in
inc
xor
mov
stos
sbb
ds
jl
les
aaa
sbb
jne
push
mov
add
mov
roll
jno
push
repnz
cli
sub
pushf
repnz
loopne
mov
sbb
repz
cmp
adc
cmp
cmp
sub
and
and
lret
sub
pop
cmc
pushf
aad
mov
psraw
repz
xchg
xchg
repz
xchg
andl
iret
mov
cmp
test
sub
xchg
addr16
popf
xchg
xchg
gs
movntps
mov
lea
enter
test
jp,pt
test
shll
in
mov
cmp
push
cli
jne
mov
mov
mov
dec
mov
mov
mov
sub
push
mov
fwait
xor
ss
sbb
out
mov
or
add
scas
dec
adc
mov
inc
push
sub
add
sub
lret
pop
jecxz
pop
mov
pop
les
mov
jp
add
in
rcrb
jo
test
xchg
adc
xor
sub
adc
movb
adcb
xor
pop
repz
inc
dec
dec
inc
popf
gs
inc
xor
dec
nop
cmp
test
cmpsl
mov
mov
cmp
inc
aaa
xor
lds
daa
insb
and
fcmovnbe
flds
mov
push
test
cmp
fnstcw
or
mov
subb
rcll
dec
es
je
xor
pop
add
dec
clc
mov
stos
pop
push
push
ss
test
pop
jge
push
jl
fbstp
cmp
cmp
sbb
bound
and
pop
fs
jnp
aad
cmp
jns
jl
push
cmp
cmp
arpl
inc
push
xor
lcall
mov
shlb
xor
lods
xchg
adc
jp
push
push
dec
addb
xchg
gs
fiadds
add
sbb
mov
test
cmp
fcoms
jnp
sub
imul
inc
mov
dec
negb
movsl
or
incb
sub
jmp
mov
push
mov
inc
cwtl
fsubr
and
insl
or
hlt
aaa
dec
mov
cmpb
movsb
pop
outsl
and
pushl
imul
pop
ret
add
testl
push
and
inc
xchg
rorb
leave
xchg
sbb
push
mov
mov
test
and
ja
jbe
gs
pop
mov
popf
shrl
es
mov
into
in
mov
rol
mov
fadds
xchg
inc
xchg
pop
test
scas
pcmpeqw
mov
pushf
and
loopne
or
pop
sbb
out
gs
adc
lds
sbb
add
fldl
andb
loop
sbb
out
int3
cmc
sahf
repnz
xchg
outsb
inc
inc
jo
sub
push
cmp
jmp
jl
out
dec
js
repnz
inc
mov
loopne
pop
adc
jae
ss
mov
fmull
xchg
jo
data16
pop
nop
fs
add
in
add
fldenv
jg
xor
cmpsl
pushw
xchg
fildl
jp
xor
enter
jecxz
loopne
lea
je
jecxz
jmp
loope
add
out
inc
xor
adc
sub
out
inc
ljmp
xor
ljmp
repz
mov
pop
xor
pop
data16
cmc
popa
mov
pop
addr16
leave
into
lds
clc
out
hlt
mov
rcl
cld
aas
adc
mov
dec
dec
jecxz
jb
jl
jb
dec
cmc
adc
test
lret
sarb
in
test
sbb
cmp
arpl
cwtl
aam
or
out
and
aas
add
pop
int
cs
loope
out
inc
xchg
lcall
loop
shrb
push
push
xor
jno
sbb
jns
test
xor
jp
cmp
stos
outsb
rorl
add
lahf
sbb
jg
mov
add
push
sahf
sub
out
enter
cmp
sbb
scas
xchg
lret
cbtw
movsb
sbb
mov
test
jp
in
pop
and
pop
xchg
sub
fadds
mov
pushw
test
int
jns
xchg
dec
mov
inc
add
repnz
cmp
xor
inc
dec
mov
test
cmp
mov
mov
push
jnp
push
inc
in
jecxz
iret
cmp
int3
push
mov
scas
pop
cli
pop
out
sub
mov
dec
adc
mov
test
and
lock
adc
loope
xor
fs
cmpsb
mov
mov
mov
dec
and
ljmp
fstl
inc
pop
dec
idiv
repnz
pushf
inc
jns
fnsetpm(287
dec
int
addr16
jb
daa
mov
mov
push
popf
test
test
inc
scas
add
std
fistl
jae
das
pop
leave
sub
sar
and
jnp
adc
xor
pop
pusha
xor
mov
or
add
and
lods
fiaddl
test
mov
mov
js
cwtl
jo
jle
insb
js
imul
and
adc
xor
aaa
inc
js
pusha
aaa
aaa
inc
repz
test
lret
pop
xor
adc
fimull
pop
mov
add
lahf
and
fwait
sar
pop
push
fs
scas
sub
adc
int3
outsl
rol
mov
or
dec
filds
xor
mov
jo
mov
out
cld
sahf
lcall
pop
push
add
lret
ret
outsb
insl
pop
imul
lcall
aaa
cmc
lock
pop
imul
clc
cltd
pop
xchg
xchg
repnz
jo
mov
pop
dec
pusha
and
cltd
testb
in
imul
call
sub
cmp
jo
into
sub
cmpsl
movsb
aas
sbb
lods
test
leave
idivb
out
dec
dec
rcrl
jb
lret
mov
cwtl
popl
lahf
fdiv
sahf
jge
cld
call
sub
jp
fisttps
scas
rep
aas
addr16
adc
xor
mov
pop
inc
cmp
stc
sub
ss
hlt
adc
sub
cld
dec
lret
das
lock
lods
popa
adc
andb
mov
sti
rcll
jmp
in
out
aaa
mov
inc
pop
imul
xor
xchg
xchg
faddl
fnstsw
mov
push
jbe
arpl
and
repnz
push
sub
pop
fldt
in
jne
pop
adc
icebp
subl
adc
inc
addr16
mov
and
jne
push
data16
gs
add
hlt
xchg
test
rol
mov
pop
shll
mov
sbb
fisttps
lahf
push
int3
push
out
test
mov
pop
roll
pop
xor
aam
cltd
xlat
mov
insl
clc
cld
mov
or
shrb
lret
push
mov
sti
xchg
jl,pn
rorl
add
push
mov
sub
sahf
aad
jl
addr16
add
ds
mov
std
mov
fcompp
scas
enter
cltd
int
cs
leave
jmp
data16
lea
hlt
rcll
dec
or
and
pop
or
xchg
sub
adc
int3
jb
daa
mov
imul
js
pop
inc
mov
enter
jo
call
and
and
dec
leave
fcmovu
push
push
sbb
rcl
sub
add
test
xor
push
cmp
sub
ja
and
push
add
es
repz
mov
or
cmp
push
fldenv
pop
in
mov
adc
popf
push
jo
push
jecxz
mov
push
inc
mov
test
mov
mov
mov
inc
cmc
lahf
xor
test
push
outsl
and
cwtl
out
pop
or
daa
jno
rcll
push
fcomps
xchg
movsl
and
adc
cmp
loop
inc
push
mov
inc
dec
jbe
jae
jno
addr16
adc
lods
repz
ss
pop
call
inc
sbb
jo
xchg
jg
in
and
pop
pushf
iret
jp
and
push
test
outsb
adc
lcall
add
test
push
xchg
hlt
pop
lods
gs
repz
pop
mov
mov
addr16
test
add
repnz
enter
leave
mov
in
stos
loopne
test
lahf
cmp
ljmp
cmp
ret
jmp
daa
push
xchg
pop
test
fnsave
inc
testb
sbb
pop
push
fisubrs
ficoms
mov
or
or
cmp
pop
cltd
push
push
xor
ret
xor
rolb
rclb
cmpsb
repz
jne
add
or
stos
call
dec
test
insb
push
push
stos
mov
movsb
imul
xor
xor
or
dec
jne
push
or
sub
popf
inc
and
cld
or
sbb
xor
push
subl
add
jae
sub
lock
mov
push
sbb
pop
jle
int
and
sbb
adc
cwtl
sub
cmpsb
mov
outsl
data16
mov
pop
das
loop
int
add
in
mov
ficomps
xor
pushf
mov
jns
mul
rcl
dec
fbstp
xorb
out
jnp
scas
imul
fsts
pop
pop
sub
cmp
out
jae
mov
std
mov
pop
scas
leave
sbb
add
lret
scas
dec
mov
call
cmp
cmp
rcr
out
push
push
xchg
std
or
out
test
data16
push
dec
pop
adc
in
mov
imul
fildl
or
ror
mov
scas
and
loop
or
lds
inc
push
xchg
dec
mov
shl
outsb
jmp
ffree
enter
dec
dec
push
xchg
repz
int
mov
in
and
outsl
mov
sbb
stos
mov
insl
movsb
mov
ficomps
clc
mov
mov
push
or
aas
fwait
pop
mov
jmp
cmpsb
shlb
push
xchg
stos
loop
lods
aad
mov
inc
cmpsb
addl
out
mov
aas
ja
adc
xchg
sub
movsb
daa
movsl
or
sbbb
in
sub
or
negb
insb
pop
sbbl
adc
lods
stos
shl
xchg
mov
add
sbb
fists
push
outsb
insl
inc
sbb
mov
xchg
mov
cltd
pop
push
test
adc
jmp
inc
stos
fwait
pushf
mov
xchg
xor
mov
push
roll
lods
test
enter
pop
add
movsb
dec
adc
imul
pop
popa
lea
js
inc
cmc
scas
xchg
ficomps
dec
pop
mov
push
in
sbb
add
adc
shl
ss
out
decl
jecxz
pop
mov
repz
leave
js
jl
das
mov
shrl
je
fcoml
gs
xchg
dec
fwait
dec
pushl
aam
jmp
mov
fstpl
mov
adc
mov
call
add
cmp
add
dec
lea
push
cmpsl
cmp
icebp
aas
out
xchg
loope
aad
adc
clc
test
inc
and
add
jmp
and
sub
jle
sbb
add
xorl
dec
jle
mov
cmp
dec
xlat
dec
ror
dec
push
jecxz
jmp
popf
sbb
or
into
inc
add
xlat
sbb
or
cltd
sub
add
outsl
lds
stc
stos
inc
jecxz
jno
add
inc
popf
pop
sub
jnp
and
mov
les
sub
into
cmp
ret
sub
movsb
mov
or
push
fcomp
in
sti
pop
imull
xchg
outsb
push
dec
jg
popa
fwait
mov
daa
test
fnstenv
jge
mov
js
jle
arpl
mov
sub
test
in
out
dec
mov
fwait
icebp
jbe
gs
pop
adcl
gs
sub
pop
cmp
mov
push
adc
loope
cmp
jle
add
aam
push
ljmp
loop
adc
push
xor
pushf
jo
cs
lds
mov
inc
xor
lods
add
ds
and
mov
push
mov
rclb
pushf
jg
pop
or
pop
decl
push
cmpsb
jl
insb
lods
jno
pop
fisubl
inc
lods
jbe
cmp
mulb
pop
push
adc
in
inc
jge
mov
mov
fidivrs
aas
inc
mov
jbe
in
js
fwait
and
jl
gs
push
sbb
mov
imul
fiadds
clc
push
sub
mov
add
out
sub
mov
jnp
cmp
xor
int3
xchg
push
and
pushf
or
sbb
repz
mov
push
dec
ss
xchg
add
or
push
nop
or
mov
add
add
xor
scas
sub
pop
leave
mov
mov
cmp
mov
pop
mov
jp
dec
dec
and
and
dec
adc
adc
mov
jne
push
shlb
cmc
add
ret
mov
movsb
xchg
sarl
fidivs
mov
pop
subl
jmp
dec
movsl
inc
and
push
xchg
mov
mov
add
mov
les
xchg
sub
rcll
into
push
jle
dec
pop
or
pop
lock
stc
adc
cmp
sub
rclw
push
imul
jmp
out
add
jbe
cmc
inc
out
ds
fnstenv
les
loopne
pushf
push
mov
lret
decb
out
add
icebp
cmc
bound
push
push
loopne
bound
bound
imul
inc
lods
dec
aad
jae
adc
xor
fstl
inc
push
pop
mov
and
and
hlt
mov
out
mov
fidivl
sarl
iret
cmpsl
inc
test
mov
fdiv
inc
and
xchg
sbbb
adc
jo
popa
cmp
daa
jb
adc
rorb
inc
lds
sbb
pop
aaa
rcr
cmp
ret
scas
stos
popf
mov
cld
mov
in
xchg
cmc
cmc
in
jns
cltd
jns
sub
pop
pop
xchg
test
ja
jne
int3
scas
outsb
jmp
mov
jl
push
push
sti
fisubs
adc
out
cltd
dec
lahf
jecxz
aas
jmp
cmp
rol
push
jbe
cmp
xor
cmc
xchg
inc
ja
shl
movsb
jmp
cmp
fwait
inc
mov
ja
push
call
scas
mull
stos
addr16
mov
dec
js
aad
sub
shr
aad
aad
push
in
cltd
cs
shrb
push
sub
fstpl
xor
adc
xor
xchg
sti
push
or
mov
ds
push
shr
sub
out
sub
dec
fistpll
xor
mov
push
cmp
popf
fadds
adc
sbb
lds
sbb
xchg
movsl
xchg
out
adc
in
stos
aaa
pop
addb
mov
cltd
xor
or
cld
dec
adc
movsl
adcl
xor
jg
insb
cmp
insl
shll
mov
hlt
dec
sbb
mov
popf
and
lahf
cmp
push
and
push
dec
rcll
xor
insb
mov
dec
int
xchg
push
inc
push
mov
andl
imull
ret
dec
jmp
mov
out
pop
xlat
dec
cld
les
out
xchg
hlt
or
mov
mov
add
add
jo
lea
pop
in
int
imul
les
adc
push
xlat
add
pop
arpl
xchg
jb
test
jnp
ret
xchg
sbb
or
push
xchg
test
add
gs
cmpsb
mov
sahf
testb
cmc
out
imul
or
xorb
repnz
pop
xchg
clc
xor
pushl
imul
add
in
movsl
in
lods
fisttpl
xor
adc
mov
shrl
mov
push
sarl
stos
mov
fs
leave
xor
lcall
fsub
fildll
jnp
pop
cmp
xor
scas
xor
add
xlat
pushf
iret
popa
adc
pop
sbb
jno
pop
push
and
mov
mov
and
arpl
ret
cmp
sbb
push
or
dec
ret
inc
xchg
push
nop
pop
test
push
inc
add
cmp
adc
popa
cmpsl
cmp
add
mov
lahf
outsl
hlt
scas
dec
jmp
call
jp
xchg
xchg
clc
mov
jmp
idivb
push
mov
dec
test
push
or
inc
mov
ja
cs
icebp
inc
imul
push
divb
loope
push
xor
or
jno
sahf
xchg
push
int3
cmpsb
push
mov
pop
idivl
xchg
xchg
xchg
cmp
clc
loop
sbb
xchg
or
pop
rclb
push
adc
ja
push
dec
shll
pop
fs
cmpsl
mov
xchg
mov
in
push
mov
sub
loope
or
movsl
push
insb
repz
inc
mov
flds
sub
test
push
mov
rcl
mov
sbb
pop
mov
pop
add
sub
fstpl
pop
shlb
push
out
xor
ds
shrb
lods
or
xor
lds
arpl
jnp
das
xchg
adc
and
mov
hlt
or
es
imul
in
mov
pop
and
xchg
clc
sbb
leave
sbb
cmpsl
adc
adc
add
fstl
xor
xchg
dec
hlt
fldl
dec
cmp
jp
dec
cmpsb
dec
sub
sub
int3
add
adc
dec
out
mov
push
lahf
mov
mov
rclb
sub
mov
bound
loopne
xor
cmp
mov
lea
aaa
jp
and
mov
call
fldcw
js
loop
jle
xchg
or
cmpb
stos
imul
hlt
fcoms
mov
cmp
shlb
shr
jg
jg
int
loopne
lret
dec
jl
mov
pop
push
jno
mov
jge
xchg
mov
sbb
arpl
and
xor
movb
ds
mov
jg
cmc
mov
xor
movsl
pop
fcoms
shr
mov
std
xor
inc
clc
pop
mov
rolb
xor
rolb
sbb
pop
movsb
and
and
out
sbb
jge
es
add
pop
imul
and
out
dec
ffreep
pop
inc
sbb
jmp
lods
cmp
push
or
cmp
rcrl
out
into
adc
push
cmp
lods
xchg
call
lods
cmp
mov
jb
sbb
jle
dec
lret
inc
add
xchg
arpl
adc
lods
js
repnz
push
pop
jno
sarb
push
sbb
loopne
xchg
mov
addl
jp
rclb
push
fs
sbb
cwtl
int
inc
popa
xor
daa
lahf
xor
add
orb
xchg
cmpsb
sub
sub
or
inc
pop
and
jo
mov
pop
adc
hlt
jl
jne
bound
xchg
movsb
xchg
pop
loope
add
push
mov
shrb
out
add
mov
aam
nop
repz
push
sbb
push
fs
and
inc
dec
inc
test
outsl
add
test
test
sbb
inc
jno
add
jmp
test
mov
ja
cmpsb
add
fwait
call
pusha
jmp
pusha
js
add
jb
mov
inc
bound
fsubrp
or
mov
mov
adcb
xor
inc
inc
mov
out
xlat
xchg
sub
addl
pop
stc
or
inc
ret
push
insb
pop
nop
or
jge
pop
out
push
iret
sbb
adc
sti
cli
pop
test
pop
mov
lds
add
testl
inc
dec
lds
insb
pushf
repz
xchg
xor
pop
repz
lock
arpl
jno
pop
in
daa
lret
pop
dec
mov
xchg
adc
add
mov
jae
mov
xchg
push
inc
pop
jmp
push
imul
movl
add
mov
lret
adc
and
mov
sahf
test
mov
sahf
std
and
sub
mov
xlat
sbb
out
xor
mov
les
pop
test
stc
push
rcrl
mov
gs
ds
pop
les
out
add
repnz
fistpll
adc
out
dec
inc
jge
inc
es
fs
inc
mov
ret
pop
pop
and
pop
sub
into
push
clc
iret
loopne
sbb
or
out
dec
xchg
inc
out
aam
add
xlat
bound
rep
cltd
xorl
mov
cmp
data16
filds
mov
in
cs
addr16
xor
pop
sbb
xor
xor
cmc
add
fcoms
fldl
and
bound
cmpsb
mov
mov
js
mov
movsl
lahf
inc
mov
mov
out
adc
inc
cmp
int3
xchg
lret
out
xchg
stos
mov
jmp
pop
cmp
jl
bound
ja
fdivr
lods
js
sbb
lret
out
fcoms
andb
adc
dec
loop
add
movsb
rolb
push
fildl
mov
jb
sub
mov
or
shrd
cld
and
jae
adcb
fsub
adc
lret
outsb
pop
mov
in
pushf
stos
mov
mov
xchg
ret
mov
push
aas
xor
rolb
leave
sbb
pop
enter
lods
sti
imul
pop
add
pusha
popf
add
call
pop
sbb
cs
lods
or
lock
daa
fsubl
aad
ja
push
cmp
push
mov
addr16
jl
mov
popf
and
mov
arpl
insb
cmp
mov
je
dec
roll
lret
sbb
add
imul
ss
repz
jns
xchg
push
jns
jmp
sub
cwtl
push
sbb
mov
je
shlb
add
test
jne
or
jp
mov
pop
std
out
out
push
pushw
ret
mov
or
lret
cmp
dec
and
jp
jp
incb
hlt
mov
sub
in
pop
cmp
mov
sti
xchg
mov
add
pop
clc
or
add
loop
cmc
stc
mov
pop
xlat
cmpsb
out
jno
mov
jnp
mov
dec
repnz
aad
sbb
mov
in
shll
pop
add
pusha
lret
jg
pop
inc
fistps
push
dec
rcrb
dec
mov
daa
mov
daa
sbb
dec
fsubl
ds
cli
loop
test
adc
popa
cmp
lahf
scas
adc
or
pop
mov
jae
popf
fldt
int
sub
push
dec
pushf
mov
rorl
add
and
lods
lods
int
lock
lret
out
push
adc
je
xor
mov
push
ljmp
push
xchg
outsb
roll
lahf
sbb
xlat
and
scas
sarl
std
pop
nop
fimuls
mov
ss
sub
add
cwtl
mov
mov
mov
outsb
jbe
imul
sbb
sbb
sub
inc
push
arpl
pusha
mov
mov
test
mov
cli
lcall
fsubl
jno
insl
in
dec
callw
repnz
movsb
mov
or
adc
ds
xchg
or
iret
mov
test
pushf
int
xor
into
xlat
mov
mov
add
cli
js
dec
xchg
sbb
xchg
jge
inc
loop
pusha
rcll
sbb
mov
ljmp
push
sbb
pop
out
and
xchg
xor
int3
daa
scas
push
push
in
cld
fdivs
sub
mov
jno
cmp
lock
push
stos
fcompl
test
cmpsl
lock
xchg
cld
or
jbe
shrb
adc
sub
dec
lcall
adc
dec
fcomps
dec
fbld
sub
iret
mov
xchg
movsl
jmp
lods
je
insb
or
adc
lret
imul
pop
les
jnp
dec
incb
mov
int3
dec
stc
fdivrs
addr16
add
xchg
daa
pop
pop
pushf
pop
fdivs
icebp
aad
aas
ret
sub
mov
pop
adc
sbb
dec
or
ja
jb
pop
mov
mov
loopne
outsl
or
add
out
adc
jo
in
popf
sahf
into
sbb
das
in
inc
adc
xchg
cs
sahf
out
add
es
adc
movsl
push
popf
out
add
int3
sbb
jmp
pop
std
lcall
pop
xlat
fnstenv
xchg
dec
lahf
in
das
in
test
mov
inc
cmp
xchg
pop
mov
shlb
stos
mov
mov
fmul
repz
pop
iret
movsb
jo
stos
test
mov
jne
cwtl
inc
fists
fisttpl
das
outsb
out
pop
call
jnp
dec
sub
int3
push
xor
popf
or
imul
add
popf
push
stc
jno
jg
fs
mov
pop
cmp
sbb
xchg
ljmp
jns
mov
std
adcl
jmp
xchg
cmp
lret
or
int3
dec
pop
push
cld
jne
pusha
repz
adc
sbb
cmpsb
jge
xchg
mov
outsl
ja
or
lret
mov
xor
mov
inc
lods
push
movsl
aam
mov
and
push
popf
cs
mov
sbb
mov
sub
movsl
nop
data16
leave
fsubl
out
dec
stos
jns
push
xchg
mov
lods
out
lret
pop
or
insl
xchg
ficompl
test
mov
movsl
vmptrst
filds
adc
into
push
aas
xlat
out
jno
nop
dec
out
sbb
inc
mov
jmp
pop
leave
jnp
push
mov
jbe
xor
shld
or
jne
inc
mov
mov
jo
mov
mov
mov
mov
jp
or
jecxz
ljmp
cltd
fisubrs
mov
inc
jnp
jmp
mov
loop
daa
les
dec
stc
shrl
sub
xchg
mov
aas
push
and
ss
sti
shrb
repnz
push
sbb
jbe
and
call
sub
mov
int
fldl
test
inc
shl
int
movsb
test
movsb
and
ja
pop
rolb
cmc
aas
sahf
mov
mov
mov
daa
add
int3
insb
out
add
inc
insl
out
mov
mov
mov
inc
outsb
mov
and
jle
or
inc
or
out
pop
enter
lret
xchg
scas
popa
loop
call
mov
adc
pop
xchg
imul
sub
dec
mov
lret
sbb
adc
and
adc
jmp
cmp
mov
out
das
scas
or
icebp
xor
fwait
cli
mov
call
insl
popf
inc
sahf
lret
sbb
push
xlat
jl
cltd
inc
pop
popf
jp
bound
inc
sub
xor
rcrl
gs
jmp
mov
std
cmp
push
lods
repz
js
adc
clc
sub
cs
repnz
lcall
fbld
and
jmp
orl
lahf
xchg
cmp
es
push
cmp
inc
pop
jl
sub
jo
push
mov
lods
call
mov
lcall
dec
daa
push
repnz
push
sbb
mov
jns
rolb
xor
mov
push
sub
fwait
jg
mov
aam
sub
mov
enter
push
mov
lods
cltd
inc
dec
xchg
fwait
or
add
gs
jbe
shr
mov
clc
les
mov
cwtl
in
leave
loope
adc
repnz
es
jl
dec
push
js
sbb
add
arpl
ljmp
ss
nop
sbb
push
push
lods
jno
ja
in
push
inc
xorl
in
xchg
repz
enter
hlt
mov
fmull
ja
repz
xor
adc
inc
xor
mov
jmp
or
sti
dec
jo
cmp
mov
mov
mov
ja
fistps
fsubrs
or
js
aaa
xlat
aaa
arpl
push
popf
push
fwait
out
out
fcoml
pop
cmpsb
sbb
jbe
stc
lret
in
xor
pusha
mov
in
cmp
lcall
sub
leave
pop
lret
sub
xchg
sbb
sbb
out
out
push
aad
mov
clc
jbe
cli
dec
jno
jl
sbb
cmp
add
inc
sub
div
iret
inc
xchg
dec
imul
mov
cmp
lret
sub
or
popa
jne
xchg
into
leave
sti
sbb
test
rcrb
addr16
or
jecxz
push
gs
adc
in
push
dec
je
mov
and
pusha
js
mov
lret
dec
mov
cwtl
and
jne
sti
rcr
loopne
push
ljmp
rcrb
ret
std
push
xchg
add
in
sbb
or
xor
subl
pop
xchg
cmp
inc
mov
ljmp
push
push
pop
ffree
mov
aas
jnp
xor
loope
add
push
fists
pop
dec
jae
repnz
jmp
sub
mov
jg
cltd
imul
jns
push
mov
std
dec
jns
fsubrl
iret
inc
mov
pop
mov
in
jno
ds
add
sahf
xchg
mov
xor
sbb
push
addr16
add
aas
aas
stos
iret
pop
cmp
mov
sbb
mov
mov
cld
lret
movsb
inc
pop
aam
mov
sbb
scas
aas
xor
inc
inc
cmp
and
jns
dec
and
sbb
arpl
sub
inc
xchg
or
jns
or
mov
add
mov
pop
dec
inc
test
or
add
incl
sub
pushf
mov
repnz
aad
in
sti
test
inc
mov
fildl
sbb
test
hlt
ret
arpl
sub
ja
mov
lea
jp
inc
push
mov
js
repz
rcrl
push
neg
mov
in
adc
mov
push
aaa
testb
aas
and
pop
add
lahf
movsb
lods
ret
xlat
data16
imul
pop
arpl
fstl
ljmp
loop
notl
scas
pop
rcrb
xor
aam
mov
cwtl
xchg
inc
sub
mov
lods
lock
or
cmp
sahf
push
arpl
cs
mov
gs
daa
test
mov
addr16
mov
popf
enter
insl
or
jo
pop
pop
sarl
xchg
ljmp
xchg
pop
xchg
loope
cmp
sbb
mov
js
and
add
xor
repnz
mov
frstor
clc
inc
ja
cmpb
stc
sub
mov
push
dec
pushf
sahf
and
cmp
xchg
movsb
in
fmull
sbb
mov
push
xorb
or
mov
loopne
jbe
cmp
js
clc
push
fisttps
push
mov
fadds
sbb
inc
stos
xor
sbb
add
xor
clc
fcoms
insl
mov
out
mov
in
ljmp
mov
mov
cmp
pop
mov
lods
mull
push
dec
adc
jbe
sti
lretw
and
imul
ficoms
cmp
push
sbb
cmp
stos
cmp
sbb
dec
jns
and
sahf
mov
sbb
scas
add
sbb
and
mov
cmp
sbb
stos
data16
sbb
out
test
sbb
pushf
push
push
adc
mov
mov
adc
fdivr
hlt
scas
inc
inc
jno
in
add
xor
pop
ret
xchg
repz
mov
mov
mov
cli
fisubs
leave
cmpsb
and
pop
jl
stos
jp,pt
mov
hlt
les
push
test
mov
mov
push
push
lahf
xchg
movsbl
jg
out
push
rclb
insl
in
das
je
add
jmp
lret
sub
imul
repnz
aam
push
mov
int
int
inc
cmp
fstp
call
push
or
jne
add
je
push
mov
inc
mov
add
call
cmpsl
loope
aad
dec
lret
jo
sti
add
dec
shll
fwait
add
inc
mov
dec
xchg
out
jecxz
cld
fnstsw
sahf
inc
leave
push
xchg
insb
pop
xor
popf
movsb
scas
pop
and
push
out
mov
and
pop
mov
pusha
int3
imul
xor
lcall
out
push
test
out
movsl
fistl
sub
scas
sbb
or
sub
pop
fcomps
rcll
mov
out
jle
mov
aas
insb
inc
loopne
or
sub
orb
pop
mov
mov
jge
vminss
cmp
push
std
fisttps
inc
xchg
xorb
xor
adc
jne
in
roll
dec
rcr
pop
shlb
lock
in
enter
dec
pop
mov
aas
repnz
cs
mov
sub
sti
adc
out
jmp
hlt
or
adc
mov
sub
xchg
scas
push
sub
shll
and
jmp
sbb
xchg
adc
mov
cmovnp
out
arpl
repnz
jns
or
ror
call
scas
in
movsl
xorb
dec
ficoml
pop
dec
mov
fwait
jnp
xchg
pop
xchg
shrl
pushf
sub
sub
arpl
pushf
push
or
popa
mov
jo
mov
adc
pop
and
jecxz
cmc
jecxz
insb
std
ret
hlt
push
xor
lcall
sub
and
loope
mov
jmp
mov
push
mov
push
xchg
sbb
inc
push
shll
int
clc
lahf
test
mov
out
das
mov
mov
mov
pop
ds
into
shrb
fistpll
scas
shll
lea
aad
jno
pop
mov
jmp
push
sbb
mov
push
stc
aad
addr16
inc
mov
shlb
arpl
subb
pop
in
sbb
mov
mov
xor
sahf
xchg
movsb
int3
and
repz
adcb
jmp
mov
xchg
xor
aad
push
pushf
cmc
shrd
xchg
push
fadd
push
push
loop
sarb
sbb
add
jnp
fs
into
pop
ret
pop
lods
mov
inc
sub
inc
lret
shll
sub
mov
not
mov
mov
mov
xor
aas
arpl
inc
out
idivb
sub
push
ret
mov
lds
ja
daa
inc
and
loop
jl
les
xchg
hlt
in
lret
sbb
add
ret
mov
mov
xchg
inc
adc
sub
stos
idiv
sbb
jge
cld
mov
cltd
lods
les
and
adc
sti
rcr
lcall
jne
xchg
fisubrs
or
xor
xchg
pop
push
sub
ljmp
jo
jge
jbe
jg
lcall
jne
and
fsubrp
repz
mov
cmc
int3
shll
xchg
stc
sbb
das
pop
jmp
psllq
mov
mov
xor
push
pop
into
je
inc
in
fs
push
xor
loop
adc
xchg
cmp
add
mov
enter
mov
cmp
gs
cmp
mov
dec
jp
and
filds
pop
je
stos
outsb
sahf
pusha
insb
xchg
mov
xor
addb
out
adc
call
mov
mov
dec
cmp
or
out
and
push
or
jl
fcmovbe
ret
das
ret
je
in
sti
mov
into
jecxz
clc
lds
sbb
lds
mov
ja
and
sti
popa
ficomps
xchg
loopne
cmp
into
xor
pop
xlat
ret
add
iret
sub
mov
es
mov
aam
fsubr
inc
test
lods
cs
cmp
imul
mov
push
xchg
sub
cmp
jo
and
and
imul
repnz
or
cli
jns
and
add
adc
mov
repnz
movsl
rcl
enter
rcll
insb
mov
push
out
sub
and
cmp
push
lods
xchg
pop
rol
int3
pop
mov
fs
jg
cmp
ds
test
arpl
push
vhaddpd
stc
push
xor
scas
lock
cmp
jbe
notb
frstor
or
dec
stos
pop
mov
pop
addr16
outsb
inc
shlb
jge
mov
fwait
mov
mov
mov
or
sbb
inc
fwait
stc
lods
notl
push
xchg
sbb
pusha
xchg
js
lods
xor
lret
jbe
mov
fldl
in
pop
dec
sti
pusha
and
mov
ljmp
test
icebp
das
push
mov
cmp
cmp
in
std
adc
mov
lcall
sub
xchg
xchg
les
dec
out
adc
lret
addr16
sub
lea
mov
aam
push
imul
sbb
lcall
js
js
mov
ds
gs
fnstcw
in
mov
mov
add
xor
xchg
inc
push
sti
mov
mov
ljmp
xchg
mov
mov
push
or
enter
mov
std
pop
pop
gs
cmp
nop
push
in
lods
cmc
pop
push
push
mov
pushf
out
and
and
and
jo
aad
cmp
adc
stos
repz
sub
add
or
ss
cmovo
mov
inc
dec
or
fdivrs
faddl
leave
pop
neg
pop
mov
sbb
inc
ds
mov
mov
or
jnp
cltd
clc
add
faddl
lock
jo
lcall
lods
xchg
loop
loopne
test
shrb
jbe
add
imul
lret
jno
xlat
jl
xor
add
dec
xchg
clc
lds
xchg
push
int3
imul
cmc
mov
push
fidivrl
push
mov
stos
cmpsb
icebp
pop
inc
xchg
cmp
dec
enter
adc
inc
pop
ds
clc
mov
sahf
mov
mov
jne
icebp
pop
cltd
clc
fcoms
mov
out
insb
imulb
jbe
inc
fsubl
jl
jno
jp
inc
daa
mov
lret
ds
lods
pop
fsubs
push
mov
push
test
fisttpll
stc
into
dec
cwtl
test
stos
data16
repz
repnz
lahf
xchg
pop
mov
repz
pop
adc
mov
loopne
jnp
es
stos
imul
and
int3
outsb
roll
add
push
addb
lcall
movsb
or
rcr
imul
mov
dec
inc
xchg
and
dec
pop
rolb
imull
outsb
or
push
inc
clc
mov
lahf
pop
xor
sub
stc
fdivl
mov
jne
js
mov
mulb
cmp
mov
sub
insb
dec
cmp
les
std
cld
sbb
in
pop
xor
or
jmp
cmp
mov
dec
jbe
push
imul
jno
inc
repnz
inc
lock
dec
xchg
push
pushf
mov
ret
pop
adc
ret
popf
in
movsl
mov
into
ja
gs
insl
push
adc
mov
xchg
imul
movsl
jmp
das
rcl
js
sbb
out
test
jp
jno
jmp
into
adc
and
cmp
ret
jne
stc
ss
adc
xor
or
push
pop
cltd
xlat
pminub
mov
inc
pop
cmc
hlt
cmp
mov
cmp
out
push
mov
sbb
rolb
jae
leave
or
xchg
mov
int3
mov
sti
push
mov
pop
xchg
xchg
test
imul
pop
jns
xchg
outsl
pushf
mov
lock
cwtl
jnp
addr16
cmc
shll
lahf
jl
icebp
fs
xor
mov
in
inc
jns
ja
sti
sbb
xor
jmp
xor
pop
and
pushf
pop
sti
shlb
mov
inc
cmp
or
mov
xorl
dec
xchg
test
mov
lods
inc
stos
pop
clc
fidivl
sub
lods
repz
jmp
cmp
mov
mov
addr16
or
rorb
mov
push
sbb
leave
loopne
inc
in
xchg
and
or
jp
ja
xchg
stos
in
out
ljmp
adc
popf
mov
inc
jns
mov
xchg
xchg
xchg
mov
or
mov
mov
xchg
dec
fidivl
xchg
xchg
add
adc
mov
mov
stc
in
gs
aaa
ja
push
push
imul
js
loope
out
icebp
cmp
getsec
mov
push
pusha
cmp
dec
adc
mov
cmpsl
sahf
fcoml
cmp
xor
mov
bound
inc
outsl
inc
cmp
nop
enter
sub
mov
jg
jecxz
sbb
in
imull
pop
xorb
jle
inc
inc
inc
xor
cmp
ss
push
inc
xchg
and
nop
sub
packssdw
xchg
mov
xor
scas
mov
sub
fs
cmp
jne
je
lahf
jbe
cmp
push
inc
shlb
cmpl
loope
lods
lret
jp
mov
xchg
fistpll
clc
inc
hlt
shll
adc
xor
mov
pop
in
jmp
ss
addr16
pop
mov
xchg
sbb
jnp
xor
sti
ret
mov
adc
jnp
xor
inc
std
pop
push
arpl
lret
stc
jg
push
test
and
inc
push
sub
insl
jb
cmp
pop
mov
test
in
pop
das
sub
bound
pop
push
ret
cs
jecxz
xor
lahf
inc
out
sub
mov
lcall
cmpsb
sti
mov
cmp
in
test
cmpsb
mov
and
xor
stc
aam
repz
xchg
fdivrs
dec
xor
fisttpll
repnz
fbstp
insl
stos
jns
mov
xchg
sub
mov
sub
dec
jmp
sbb
xchg
and
out
test
into
loope
push
jns
sbb
jbe
pop
jecxz
popf
lods
clc
int3
fdivs
mov
sub
dec
cmp
push
mov
mov
sub
insb
es
notb
mov
lea
xchg
pop
jae
pop
push
enter
jmp
fwait
push
addr16
rolb
mov
sub
or
mov
sbb
sub
jbe
or
rclb
out
sub
lret
in
pushf
scas
add
shlb
fsubp
mov
addr16
sbb
dec
push
push
filds
fwait
and
enter
pop
ja
insl
into
push
lcall
cld
dec
sbb
outsl
in
icebp
push
cli
mov
mov
dec
scas
sub
dec
les
xchg
pop
sbb
mov
in
iret
ror
cmp
pushf
sbb
outsb
sbbb
sarb
and
ljmp
lea
fcmovbe
bound
in
div
ret
jne
lret
jo
loopne
imul
sub
in
nop
pop
aas
jns
stos
or
shlb
jg
ljmpw
in
imul
cs
outsb
xchg
mov
out
mov
into
aam
jg
fldl
fldenv
jbe
cmp
into
dec
xor
enter
fistpll
xchg
test
mov
jno
mov
adcb
fwait
int3
in
xor
xor
jnp
mov
jne
jb
mov
push
clc
das
xchg
shll
ljmp
or
inc
scas
push
loopne
mov
mov
jne
xor
xlat
jmp
fbld
inc
jno
pushf
pop
pop
dec
aas
add
fidivs
shrb
cmpl
or
adc
outsl
bound
sub
push
cwtl
fs
imul
mov
pop
fnsave
or
aaa
sub
mov
bound
pushl
and
ljmp
pop
mov
and
xchg
adc
jo
ljmp
or
mov
pop
pop
iret
enter
sti
cmp
out
lods
lahf
pop
mov
sarb
loope
repz
test
shl
push
jmp
or
cmpsl
add
add
cmp
mov
xchg
into
jbe
or
push
outsb
push
movsl
push
sbb
into
lock
bts
cmp
div
add
jg
hlt
adc
jecxz
iret
jg
cs
mov
or
xor
stc
jecxz
in
cwtl
or
add
subl
fs
aam
push
push
out
out
cmpsb
jge
adc
jo
popa
loopne
push
outsb
sbbl
push
dec
les
xlat
cmpsb
push
lea
dec
push
xchg
add
icebp
xchg
into
clc
repnz
push
mov
jae
add
sahf
in
test
mov
sbb
or
loope
das
sbb
lahf
xchg
aam
jne
ja
dec
leave
les
addb
pop
adc
or
mov
add
xchg
add
pop
movsb
cwtl
repz
inc
jmp
xor
in
loope
or
pop
jnp
aad
adc
mulb
insl
fs
shr
mov
bound
popf
call
mov
sub
xor
jns
mov
bound
mov
xchg
xor
push
xchg
das
ret
mov
outsl
mov
xor
sub
loope
aam
push
inc
jl
mov
push
pop
cltd
and
inc
add
stc
test
lds
or
les
xor
cs
int
ficoms
repnz
xor
xor
and
pop
test
stos
sbb
out
div
mov
std
es
xlat
insl
dec
xchg
push
pop
movsb
ret
mov
daa
shll
out
hlt
ret
xor
jno
dec
ds
movsl
es
mov
addb
adc
fsubl
sarb
pop
clc
jne
lods
int3
in
mov
bound
add
sub
ret
xchg
andl
sbb
inc
loopne
pop
int3
and
xchg
movsl
mov
sbb
jmp
sar
xchg
and
loope
nop
insl
and
pop
pop
add
add
fisttpll
jae
loope
jp
mov
shll
mov
int3
adc
btr
mov
jbe
es
in
xor
cli
xor
jno
pop
movsl
and
cmp
call
in
dec
jno
ja
arpl
and
inc
mov
lea
add
loope
lods
push
dec
xor
lock
dec
mov
iret
inc
adc
add
jno
call
mov
popf
pop
cmp
push
xor
jge
and
adc
shrl
jmp
sbb
jl
sbb
lock
push
repnz
pop
mov
mov
push
out
adc
lods
movsb
mov
mov
lods
icebp
mov
cltd
or
fsub
jecxz
and
inc
push
lcall
in
movsb
push
ja
jns
or
xchg
cmpsb
adc
dec
outsb
pop
mov
sbb
and
mov
scas
xchg
adc
jl
ret
push
loope
rorl
cmpl
adc
nop
fistl
jae
mov
cmp
xchg
adc
or
nop
bound
imul
out
mov
add
imul
cwtl
add
scas
or
inc
std
rcl
xchg
dec
dec
ficompl
pushf
adc
or
arpl
movsl
stos
sbb
stos
lret
inc
pushf
pop
movsb
subb
and
jae
cmpsl
push
mov
push
mov
daa
pushf
jmp
add
push
adc
mov
test
cld
sti
int
mov
loop
add
jge
cmpsl
pop
hlt
insb
pop
add
dec
xchg
pusha
out
mov
repz
mov
and
cmp
jb
push
jo
sub
push
jmp
mov
in
into
cmc
jbe
scas
xchg
nop
mov
xchg
scas
xchg
orps
jae
data16
es
xchg
sbb
xchg
fsub
adc
jo
pop
sub
mov
mov
les
push
xor
or
cmp
bnd
mov
fisttps
leave
and
cmp
mov
or
cld
jo
loope
test
je
lds
adc
jae
xchg
push
pop
mov
mov
inc
call
outsl
add
pusha
inc
aas
rcll
jmp
mov
or
lret
lds
xchg
inc
or
cltd
into
pop
shlb
mov
ds
xchg
dec
sbb
scas
xchg
mov
aam
dec
fnstcw
gs
jo
mov
outsb
mov
sub
xchg
inc
out
and
inc
in
bound
xor
dec
nop
lods
clc
add
insl
outsl
test
mov
mov
negl
movsl
aad
xor
cmp
repz
mov
adc
addb
lret
mov
pop
stc
cmp
jle
sbb
push
lahf
cmpsl
inc
pushf
and
dec
subb
push
addr16
push
stc
push
mov
inc
or
fwait
rcrb
call
cltd
ss
pop
mov
lock
dec
pop
es
cltd
popl
push
push
out
ret
fsubl
subl
jb
loop
jne
xchg
rcrb
iret
in
rcll
paddw
in
movsl
in
and
add
push
jno
fnstenv
xchg
mov
jns
push
mov
pop
dec
repz
test
in
jo
jo
aad
insl
cmpsl
and
and
mov
pop
or
test
mov
mov
sub
daa
mov
fnsave
daa
ds
movsb
mov
clc
adc
bound
repnz
dec
es
xchg
inc
cmp
in
leave
call
iret
or
fstpl
lahf
xlat
mov
sub
bound
ds
jl
out
push
push
mov
dec
lds
mov
pushf
adc
mov
adc
sub
inc
test
das
shrb
loop
or
pushf
imul
pop
push
jecxz
pop
repnz
stc
cmc
rclb
arpl
adc
dec
out
sbb
jnp
adc
mov
test
mov
push
testl
push
jmp
pop
and
inc
incl
sbb
inc
addl
adc
ss
int
sub
add
lods
or
dec
mov
sub
xor
mov
pop
xchg
mov
mov
sbb
fs
inc
ljmp
sarb
lret
jecxz
cmp
aaa
inc
jns
cmp
push
or
fcmovnb
dec
movsb
hlt
loope
mov
icebp
sahf
popf
sub
out
inc
lahf
mov
sub
sbb
xor
pop
and
rcrb
scas
jl
and
push
addr16
les
pop
pop
push
sahf
in
call
mov
sbb
int
fadd
mov
push
mov
sbb
scas
mov
add
dec
je
pop
pop
pushw
pop
pop
or
es
xor
test
pop
cmp
or
jg
xor
push
sbb
mov
cmpb
sub
jno
cs
pushf
or
movsl
xor
mov
jl
call
jmp
aaa
sbb
out
jle
xor
movsl
push
daa
scas
mov
mov
mov
arpl
icebp
lahf
leave
jno
fdivl
stos
pcmpeqd
mull
xchg
sarl
into
sbb
jb
paddq
data16
inc
lret
push
xchg
flds
push
scas
test
fstps
outsb
insb
int3
sbb
push
shlb
mov
push
push
loopne
mov
dec
in
insb
sbbl
push
mov
jmp
sub
jo
in
repz
xor
xor
mov
adc
arpl
mov
loop
dec
int
push
pop
int3
leave
faddl
dec
arpl
xor
loope
pop
sub
adc
sbb
inc
sbb
xor
add
mov
cmp
pop
insb
mov
jp
push
scas
pop
imul
test
cltd
xchg
imul
test
data16
gs
adc
mov
sahf
inc
mov
and
test
mov
sarb
test
pop
add
fimull
xchg
std
in
mov
xchg
aam
loopne
adc
sbb
xchg
cmc
in
lcall
into
out
sub
mov
cmp
mov
js
jge
nop
adc
popf
push
vcvtpd2dqy
adc
jnp
in
xchg
call
in
lea
into
cmp
inc
stos
cld
movsb
call
sub
sbb
pop
sub
outsl
xchg
cvtpi2ps
xlat
mov
inc
and
push
jl
xchg
or
faddl
loope
mov
cmpl
sub
insl
dec
mov
pop
xor
test
ret
out
mov
cltd
jecxz
sbb
xor
push
inc
sbb
add
shlb
sbb
mov
insl
inc
bound
xchg
lods
push
mov
clc
pop
dec
sub
xchg
push
jge
lods
in
inc
dec
mov
ss
mov
push
daa
dec
cmp
mov
push
test
aad
clc
xchg
adc
ds
mov
or
popl
jo
jnp
iret
lcall
movsb
ror
add
xchg
outsl
xor
xor
int
jle
mov
dec
push
repnz
sti
and
test
bound
add
inc
pusha
out
add
inc
into
mov
add
fisttpl
test
or
inc
testl
jnp
mov
mov
addr16
jbe
sbb
fstpl
adc
shl
sbb
stc
int3
sbb
ficoms
imul
adc
sub
movsb
es
add
sbb
lods
mov
icebp
xchg
adc
inc
outsb
fwait
cmpsb
ret
shll
inc
stc
xor
mov
pushf
and
inc
mov
dec
add
shl
pop
mov
and
xchg
aam
mov
in
push
mov
roll
flds
mov
xchg
lea
mov
xchg
push
into
or
sbb
enter
jae
xchg
xlat
add
ret
lock
mull
sub
ficoml
rcll
sbb
imul
dec
xchg
aad
xor
mov
and
ret
shll
movsb
in
f2xm1
mov
mov
and
popf
jle
repnz
lahf
push
mov
cmp
inc
push
call
fmull
pop
lods
inc
mov
sahf
pop
push
fcomps
movl
insb
pop
xchg
mov
xor
xchg
sbb
rcrl
stos
mov
dec
pop
loop
dec
xlat
pusha
mov
scas
sub
cmp
pop
std
iret
jge
dec
enter
xchg
add
addr16
lret
test
push
or
fs
xchg
imul
xchg
ficoml
jge
jnp
pop
je
ss
jl
cmp
inc
iret
push
fldl
mov
dec
mov
xchg
xchg
jecxz
sbb
jg
clc
ret
push
hlt
sub
stos
pop
in
jl
jno
arpl
xchg
jge
sub
pop
cmpsl
mov
lea
jne
scas
cmpsb
push
xor
inc
mov
dec
aad
mov
add
jns
mov
mov
cltd
notl
dec
sub
or
xchg
mov
mov
lret
mov
xor
pop
inc
mov
jmp
imul
lods
add
loope
mov
cmp
and
and
data16
xchg
xchg
sbb
cmpsb
push
pop
ret
jmp
movsb
ret
xor
jbe
repz
or
or
or
dec
cmpsl
lcall
xchg
sahf
lods
xchg
or
icebp
jmp
or
fabs
outsb
ljmp
popa
stc
es
repnz
add
sub
mov
fstl
lcall
mov
sbb
jae
pushf
xor
test
cmp
stos
enter
mov
repnz
lock
lock
xchg
and
add
fsubrl
push
cwtl
or
sbb
mov
adc
bnd
ja
ret
pop
pop
imul
jp
mov
lds
scas
or
inc
lret
dec
adc
jl
pop
je
xor
add
rcr
xchg
aaa
cwtl
stc
jae
mov
out
add
call
stc
sbb
or
ficomps
push
rorb
adc
mov
ja
mov
nop
ss
pop
sub
imul
int
jl
outsb
popa
pushf
mov
xlat
iret
sub
daa
mov
jmp
inc
cmp
int
loop
cmp
aas
sarb
test
mov
ja
adc
movl
xchg
imul
sahf
mov
lcall
dec
lahf
or
in
arpl
sub
fmuls
xchg
or
jb
lods
leave
roll
mov
cmpsl
mov
aad
jp
enter
pop
inc
mull
stos
mov
shlb
arpl
sbb
test
jl
daa
pop
inc
daa
xchg
sbb
popf
filds
xchg
aam
add
mov
mov
push
popa
cmp
mov
xlat
leave
jns
lds
pop
jae
and
stos
jno
push
pop
push
stos
imul
gs
repz
addr16
adc
repnz
dec
mov
inc
cld
inc
cmp
imul
lret
imul
aas
mov
gs
jbe
jg
ljmp
push
jnp
mov
mov
mov
or
push
out
adc
pop
fistpll
out
push
sub
mov
pop
pop
test
or
fld
or
jge
mov
pop
mov
jns
movsl
mov
movsl
add
dec
mov
lcall
mov
in
mov
lret
push
cwtl
mov
push
add
aas
pop
mov
pop
clc
mov
aaa
jae
jg
adc
push
stos
popf
lds
loopne
xor
cld
push
movb
inc
loopne
ret
fsubs
ret
lods
inc
call
popf
loope
loopne
test
pop
je
add
mov
fsubl
inc
jae
icebp
bound
pop
inc
frndint
dec
in
push
cld
pushf
ljmp
loop
cmp
sub
adc
fwait
xor
jnp
mov
xor
cmp
xor
mov
pop
push
or
xchg
xor
loope
mov
shrd
dec
inc
xor
je
sub
lea
mov
jae
and
dec
cmp
je
stos
pop
push
loop
stos
xchg
out
push
dec
mov
mov
stos
xor
cli
jns
push
adc
fs
push
lods
push
pop
lret
clc
adc
test
enter
or
dec
xorl
ljmp
mov
lods
dec
and
jb
arpl
xchg
sbb
ja
nop
cmpsl
mul
xchg
mov
mov
xchg
mov
sub
int3
cmp
pop
dec
pop
ja
rolb
pop
es
mov
rcl
shlb
orl
dec
les
loopne
in
inc
push
dec
jns
mov
pop
fsts
and
ds
divl
or
pop
lcall
loopne
cmp
and
jno
test
stos
cs
sbb
fnstenv
mov
push
and
iret
dec
aas
push
insl
rclb
inc
popa
sahf
shr
cmp
cwtl
mov
lods
movsb
xchg
add
inc
cli
mov
pusha
sub
jl
inc
roll
mov
shlb
or
insb
jg
xor
inc
sbb
push
repnz
aam
cwtl
jle
decb
dec
pop
in
ret
sub
adc
pop
or
lock
std
xchg
inc
fcoml
ljmp
into
mov
stc
pop
outsl
push
push
loopne
adc
sub
pop
jp
cmp
jns
cmp
cmp
cmp
cmp
sub
divb
insl
fmulp
inc
xor
sub
leave
xchg
sbb
jle
fcomps
jns
jae
outsb
mov
ds
add
mov
pusha
sbb
sbb
movsl
xchg
leave
es
jge
dec
in
in
pushw
and
inc
push
cmp
dec
leave
scas
shrl
inc
mov
push
jns
sarl
lock
ret
rol
xor
movsb
xor
rolb
lcall
cwtl
out
cmp
call
pop
testl
adc
popf
pushf
ja
xorb
push
movsb
cmc
out
fildl
jmp
rclb
xchg
out
popf
adc
test
mov
pusha
fmuls
dec
xlat
xrelease
mov
out
call
pop
cmp
js
aam
ss
pop
lcall
es
and
xchg
adc
iret
cmpsl
mov
aam
jns
cmp
jbe
pusha
xchg
insl
clc
lea
pop
mov
aad
fs
test
push
mov
sbb
cwtl
mov
adc
scas
inc
sbb
rol
imul
scas
mov
add
jno
lcall
or
aaa
daa
sub
cmp
das
xor
fildl
ffree
das
cmpsl
ret
mov
stc
add
push
test
or
jns
popa
stc
xchg
dec
or
cld
inc
and
mov
shlb
ffree
loopne
push
pushf
sub
cmp
fwait
xchg
cmp
inc
dec
push
rorb
mov
push
push
and
dec
enter
mov
mov
insb
int
xchg
pop
and
mov
xor
sub
lods
sub
bound
jne
andb
inc
lock
shl
cmp
sub
outsl
imulb
mov
xorl
cld
jmp
or
lock
mov
and
jp
mov
pop
pop
mov
imul
mov
ret
clc
mov
jecxz
stos
loop
cmpsb
mov
rcrl
adc
repz
cld
cmp
stos
cmp
scas
jecxz
jns
adc
ret
dec
fldt
in
inc
dec
outsb
fwait
lods
xchg
jle
inc
add
inc
and
push
sub
mov
icebp
outsl
dec
test
arpl
push
dec
sar
inc
lods
push
xor
gs
pop
push
in
je
sbb
mov
jp
jp
test
mov
inc
pop
lea
sbb
lcall
xor
in
aam
test
movsl
fwait
cmpl
adcb
cmc
jbe
into
ss
or
sbb
pop
xor
xchg
lods
mov
adc
mov
and
lods
inc
mov
or
leave
pop
mov
out
xor
sbb
dec
jae
jo
dec
mov
hlt
jmp
pop
xor
push
nop
nop
inc
orb
ss
lods
shrl
popf
cmp
jno
dec
dec
and
bound
add
leave
add
mov
in
cli
sarl
outsb
aam
jb
jne
ret
mov
movsl
or
or
push
sbb
mov
mov
pop
inc
inc
xchg
xchg
and
cmp
into
dec
imul
dec
in
loope
test
sub
addr16
repnz
push
lret
xor
jbe
sar
fnstsw
jg
pop
mov
and
movsb
mov
sahf
dec
xor
mov
jecxz
ret
mov
dec
pop
jge
shrb
jmp
pop
sti
adc
imull
jmp
pop
pop
inc
cmp
mov
mov
into
icebp
adc
ss
out
push
orl
xchg
jle
stos
rolb
cmp
jg
mov
inc
mov
xchg
mov
orl
push
and
mov
or
in
cmp
js
nop
xchg
xor
out
dec
movsl
mov
jne
sbb
xchg
xchg
cmp
adc
icebp
outsl
mov
pop
cmp
mov
mov
jbe
loop
loopne
xor
ret
sub
sub
push
in
add
jl
lret
fidivrl
cmpsl
ja
enter
movsl
or
out
aam
pusha
fistps
dec
pop
push
inc
cmp
dec
mov
adcl
xor
out
lcall
push
fcmovnbe
jns
jns
lods
and
mov
xchg
sti
hlt
and
pop
xchg
aaa
aaa
aaa
add
xor
std
add
sbb
mov
sbb
jno
pop
inc
testb
sub
and
lret
jecxz
imul
pop
js
mov
lds
fwait
xchg
inc
jge
inc
lods
push
sbb
leave
inc
pushf
test
rol
inc
and
xchg
int3
cmc
ds
mov
pop
sbb
hlt
mov
pusha
in
leave
adc
adc
inc
pop
mov
fstpt
ja
adc
repz
xorl
pusha
push
sbbb
ljmp
flds
jecxz
push
incb
lahf
in
xchg
jns
in
inc
out
sbb
pop
test
lcall
jp
sub
fxch
adc
sub
mov
jmp
test
enter
lret
scas
pop
rcrb
pushf
insl
push
andl
stos
pop
mov
add
in
push
mov
fldlg2
jnp
fmuls
push
push
xor
adc
inc
test
mov
cmp
sbb
lods
negb
pmaxub
test
or
pushf
cld
xor
add
rorl
add
xchg
mov
shrl
in
inc
sub
dec
and
and
inc
not
mov
push
cmp
pop
pop
pop
xor
push
push
fisttpll
add
push
sbb
mov
push
clc
add
out
pop
push
loop
test
ds
cli
sub
or
imul
xor
aaa
jmp
inc
retw
test
daa
out
push
jae
test
xchg
and
inc
push
in
mov
test
mov
ljmp
sbb
divb
lock
jl
jae
mov
xor
jo
mov
pop
push
icebp
fcompl
pop
mov
jnp
pop
test
cmpsb
sub
shl
sbb
adc
or
jo
sbb
xchg
xor
dec
pop
push
insb
pop
mov
pop
lds
push
push
adc
ss
sub
or
imul
clc
lret
push
test
repnz
movsl
in
jecxz
add
mov
mov
ja
xchg
ds
mov
sbb
pushf
das
sarb
dec
xor
cmp
cmpsl
fwait
aaa
or
mov
out
out
xor
clc
fwait
in
in
sbb
rol
or
xor
mov
daa
stos
lahf
jmp
pop
cltd
sarl
fsubrs
push
ljmp
int
aaa
aad
enter
test
push
ret
into
xor
lcall
and
mov
adc
sub
fdivrs
popa
sub
insl
cld
repz
rolb
cmp
fwait
rorb
add
xchg
bound
or
rcr
dec
push
mov
repnz
rol
stc
data16
rclb
stc
add
adc
add
pop
mov
cmc
test
test
or
ljmp
jne
and
lds
cltd
stos
sub
pop
sbb
loopne
inc
mov
rorb
shrb
dec
ljmp
jle
mov
jbe
mov
sub
cmpsb
out
and
ficoml
loop
xor
test
adc
call
outsl
mov
mov
in
mov
outsb
xchg
dec
lret
mov
or
jbe
adc
rclb
daa
push
int
jo
rcll
outsl
push
xchg
and
enter
int3
push
sub
mov
xchg
das
test
loopne
test
sarb
sbb
stos
mov
aas
lods
jb
pop
dec
outsl
cmp
lea
scas
int
mov
popl
adc
xor
and
jns
jno
and
js
pop
pushf
mov
pop
in
cs
xchg
push
dec
loope
add
or
rolb
scas
dec
cmpsb
loopne
repnz
pop
cmp
iret
adc
inc
clc
push
add
xor
sub
lret
dec
xchg
negb
mov
dec
inc
out
xchg
ss
or
lods
xchg
js
fs
pusha
pop
inc
push
daa
into
int3
paddusw
loopne
aaa
loop
jge
jae
mov
and
cltd
mov
push
fsubl
aas
pop
pushf
fs
cmpsb
rol
sbb
pop
or
xchg
jns
lea
cld
int
adc
imul
push
inc
dec
mov
in
xor
in
call
xor
sbb
enter
add
or
mov
fs
mov
lods
icebp
int3
jbe
mov
sbb
stc
mov
push
xor
mov
out
push
mov
aaa
adc
xor
cmp
jno
sbb
lcall
scas
cmpsl
rcll
ja
test
xor
insl
add
mulb
xchg
setns
push
loopne
inc
call
or
push
fs
mov
loop
in
and
and
push
pop
xchg
push
out
push
adc
test
adc
push
cmp
push
xchg
push
push
add
xchg
add
and
sbbb
mov
out
mov
daa
and
fwait
add
jno
push
sub
test
lcall
push
lods
push
mov
dec
xor
insb
dec
dec
js
shll
ds
pop
loop
std
inc
cmp
daa
lods
pop
dec
ret
pop
cmp
int3
and
add
sbbb
push
popa
ret
pushl
and
xor
ret
aas
mov
stc
xor
add
inc
dec
fstpt
lret
rorb
fildll
xchg
leave
pop
movsb
int3
loopne
icebp
loope
mov
cmp
test
cli
hlt
inc
xchg
popa
mov
mov
icebp
mov
mov
sar
cmpl
mov
adc
push
adc
mov
in
xor
adc
and
pusha
pop
ss
icebp
jns
out
cwtl
pop
inc
out
sbb
mov
lock
add
aam
pop
cmp
xchg
cltd
std
mov
pop
xlat
mov
xchg
rorl
insb
inc
jb
dec
xchg
out
push
push
mov
push
jnp
sbb
sub
xchg
sub
pushw
sbb
push
xchg
stos
mov
leave
jp
jne
repnz
ss
loope
cmc
add
adc
cmc
cmovbe
push
es
cmc
gs
jecxz
adc
leave
jnp
ret
iret
sahf
push
aaa
sbb
and
pop
xor
leave
shlb
sbb
sbb
mov
rcrl
idiv
fcoml
jg
enter
push
xor
mov
jb
push
pop
scas
aad
leave
mov
fs
bswap
add
and
jae
pop
cltd
push
outsb
adc
addr16
in
imul
and
jnp
push
push
xor
mov
mov
repz
and
dec
pop
jp
cmp
xor
mov
insb
sub
sbb
or
sbb
dec
sub
shll
inc
push
dec
fwait
imul
adc
mov
lea
cmp
pushf
cmp
aam
xchg
sti
xor
pushf
fs
push
ds
push
cwtl
fadds
fdivrl
xchg
rcrb
leave
mov
push
inc
xchg
mov
pop
ljmp
aaa
addb
add
dec
and
mov
jecxz
out
outsl
scas
into
ret
lret
stos
fstpt
clc
and
xor
fs
adc
es
negb
sarb
jno
mov
pop
cmpsb
cmp
pusha
dec
lock
jo
fadds
imul
iret
add
and
adc
sub
cmp
xchg
mov
push
orb
arpl
in
inc
inc
loop
pop
lret
out
jg
sub
out
mov
cmpsb
sbb
xchg
lahf
pop
pushf
or
xchg
movsl
xchg
shrb
daa
lea
inc
adc
jns
loopne
xchg
in
sbb
cltd
lret
dec
sub
mov
outsb
popa
testl
or
test
xor
aaa
fadds
push
and
jg
push
shl
pop
lea
mov
mov
aas
pop
jne
loope
mov
pop
sub
maxps
adc
sarl
sarl
xor
adc
push
pusha
cmc
movsb
jnp
cmc
ljmp
pop
mov
nop
mov
dec
cmp
push
xchg
mov
movsb
cmp
shlb
insb
andb
mov
sti
push
fldenv
push
fistl
out
into
mov
jns
aas
js
fs
add
pop
adc
mov
arpl
mov
shll
push
rorb
loop
sbb
and
sub
bound
cmpb
dec
add
add
jbe
inc
mov
add
into
sub
jge
out
push
js
xor
mov
stos
popf
and
andb
sahf
nop
rcll
js
int
bound
mov
sbb
cld
fucomp
in
mov
mov
inc
shrb
mov
cmp
cmc
adc
test
or
in
push
testl
mov
mov
lahf
cltd
mov
xchg
push
mov
pop
push
cmpsl
int3
cmp
jnp
movsb
movsb
dec
cld
test
repnz
cmpb
xor
adc
sbb
mov
sahf
mov
mov
orl
cmc
dec
popf
lcall
lods
imul
ja
pop
add
rolb
mov
cs
ret
cmp
adc
jae
clc
push
mov
aas
jl
shlb
or
cld
scas
cmp
in
sub
fisubs
test
inc
jbe
movsl
cmp
aam
iret
int
mov
jno
fldt
ficompl
push
push
repz
addr16
idivl
xchg
pop
dec
jg
adc
out
es
ja
bound
pop
or
push
mov
je
stos
mov
mov
outsl
les
xchg
add
dec
adc
cmp
and
xor
jmp
outsl
fidivrl
xchg
in
ja
arpl
adc
xchg
dec
push
jmp
outsb
clc
mov
inc
cltd
push
or
adc
dec
fdiv
adc
xchg
repnz
dec
adc
pusha
scas
sbb
sub
push
dec
popf
lret
inc
sbb
mov
xor
stos
icebp
mov
hlt
mov
test
ja
push
add
cmp
call
jg
jmp
call
mov
pushw
or
jns
add
and
jo
jmp
xorl
aad
stos
mov
flds
pop
mov
push
mov
sahf
adc
mov
xor
mov
or
jae
ja
push
stos
inc
push
dec
push
not
or
nop
add
test
xchg
jl
cmp
push
dec
push
shrl
popf
dec
mov
cmpsb
stc
xchg
jmp
scas
rorb
cwtl
push
dec
lock
outsb
and
mov
int
or
cld
js
and
fisubl
fwait
jge
in
sub
mov
aad
xchg
jecxz
leave
notl
or
push
dec
pop
and
mov
and
outsb
je
movsl
aas
inc
add
outsl
adc
pop
and
push
repz
ret
insb
or
scas
add
cmc
lret
mov
loopne
mov
jnp
pop
cli
gs
loope
xchg
push
mov
mov
sbb
mov
ljmp
mov
mov
pop
xor
test
mov
pop
repz
mov
gs
adc
cmp
push
hlt
es
mov
cltd
mov
jae
sahf
rcrl
mov
lret
out
mov
cld
push
push
fisubl
outsb
mov
aas
xchg
pop
sub
repz
fwait
cmp
mov
pop
inc
adc
imul
xchg
cmp
es
aas
leave
cli
sarl
add
mov
and
fwait
pop
sbb
push
dec
repz
mov
sahf
je
ror
lcall
xchg
xchg
xor
fdivs
push
int
je
xchg
movsl
inc
leave
hlt
push
movsb
pop
mov
pop
sub
sahf
lcall
cltd
sub
sbb
pop
mov
and
lret
cmp
inc
jbe
arpl
sub
shlb
cs
inc
enter
jo
inc
mov
inc
xor
dec
jbe
sub
movsl
inc
push
cmp
vpsubw
mov
sar
cmp
inc
mov
outsb
mov
dec
push
push
in
pop
scas
push
mov
and
leave
pusha
xchg
mov
adc
and
scas
stos
jl
add
sub
hlt
fnsave
out
out
mov
cmovns
loop
sub
ljmp
push
daa
jns
ds
decb
xor
push
dec
mov
or
sbb
xchg
and
xor
das
push
icebp
insb
xor
lcall
xor
adc
xchg
or
int
lock
pop
dec
shlb
lods
je
fiaddl
mov
jae
push
cwtl
out
lcall
jo
dec
xor
mov
das
inc
and
std
scas
or
or
cmpsb
aad
and
mov
mov
movb
fs
pop
stc
sub
mov
hlt
pop
int
xor
xchg
fistps
or
cmc
ss
addr16
and
in
mov
out
es
jb
sbb
sub
ss
scas
inc
setge
sub
out
cmp
mov
mov
jge
out
xchg
mov
xor
mov
enter
push
jp
inc
and
insb
sbb
aas
test
dec
sub
mov
fistps
jb
push
pop
aas
fldenv
jo
sbb
mov
lea
or
xchg
mov
pop
shlb
stc
sub
mov
xor
rcrb
addr16
int
mov
loop
insb
sub
in
jp
mov
cmp
adc
cltd
cmp
pop
out
lret
and
inc
cmpsl
mov
xchg
jne
addb
inc
clc
lret
add
jge
pop
jp
das
mov
jp
inc
fsubrl
cs
dec
pop
repz
out
sub
inc
cmp
mov
fs
es
testl
aam
cmpsl
addr16
les
in
push
fldt
adc
outsl
or
and
repnz
push
andl
pop
push
ja
mov
jnp
sub
xchg
js
test
mov
jae
mov
xor
jecxz
pop
push
jbe
es
insl
or
jle
pop
cmp
cmp
in
mov
bound
jle
mov
test
pop
aas
xorl
mov
pop
addl
xor
push
pop
iret
jo
es
outsb
imul
mov
out
lock
jle
ja
xchg
imul
push
adc
lods
fcomip
out
xchg
mov
xor
ds
xchg
cmpl
outsl
ljmp
cmp
mov
jmp
mov
in
enter
ja
testl
xor
xlat
and
inc
jmp
adc
inc
sub
add
push
mov
out
mov
mov
aam
out
outsl
cmc
xor
jnp
sub
arpl
push
jo
aam
clc
outsl
rorl
mov
pop
or
adc
mov
cwtl
pop
xlat
adc
jne
and
fisubrl
ja
inc
pop
push
pop
pop
in
mov
mov
adc
and
inc
jnp
sub
movsl
es
mov
dec
cmp
cmc
sub
pop
enter
push
or
loope
stos
mov
push
mov
jo
pop
inc
mov
ds
shl
mov
scas
movsl
xor
and
xor
or
mov
xchg
sub
in
mov
cmp
sub
pop
cmpsl
and
sbb
sub
mov
add
xchg
lea
mov
fsubrp
mov
enter
popa
js
jp
test
ret
cmpl
js
xchg
hlt
inc
mov
lahf
xchg
call
div
inc
xchg
sbb
sub
mov
test
mov
repz
int
bound
adc
pop
cld
mov
sub
rcll
dec
and
xlat
fs
add
ds
aad
add
mov
push
pop
fwait
mov
mov
out
sbb
outsl
push
or
arpl
push
inc
clc
push
adc
pop
xchg
push
es
cmpl
cmp
shrb
adc
push
xchg
xor
std
add
clc
add
cmpsl
aas
dec
xlat
xchg
cli
mov
test
mov
pop
lret
dec
cmp
mov
xor
cltd
adc
sub
fidivl
cmp
pop
mov
jo
rol
pop
jl
ds
test
test
pop
cld
jg
loope
sub
repnz
pusha
fmuls
add
outsl
xor
out
xchg
and
push
or
mov
daa
adc
test
roll
sbb
dec
lds
pop
or
aas
push
cli
adc
jae
in
mov
jo
jge
loope
cmp
out
dec
rcrl
daa
mov
pushf
sbb
rcrb
test
sub
jne
mov
js
jp
and
mov
mov
cmp
add
fistpl
js
dec
nop
sti
pop
cli
stos
cmpsb
pusha
mov
jge
push
cmc
in
pop
scas
fs
add
lret
lret
clc
mov
iret
jp
push
out
insl
stc
pop
mov
push
sub
jno
xorl
rol
jne
jae
int3
cmp
or
adc
scas
jmp
jmp
push
push
mov
lahf
int
push
adc
rcr
test
pushf
out
cmp
xchg
mov
pop
inc
shlb
insb
push
xchg
test
call
mov
fistps
insb
mov
lock
cli
xor
test
dec
add
xor
and
xor
xchg
xlat
inc
stos
cmc
je
mov
pop
xor
sbb
sbb
push
aad
cmpl
lods
pop
or
in
inc
mov
jns
int
or
in
dec
arpl
mov
mov
test
ljmp
inc
sub
mov
sbb
stc
in
sub
ror
lds
imul
test
pop
dec
sarl
leave
cltd
inc
xchg
sbb
jle
imul
add
xorl
pop
aam
cli
jg
imul
push
cmp
inc
inc
daa
mov
jae
mov
push
lds
dec
fnstcw
test
xor
insb
outsb
in
pop
adc
pop
cmp
xor
dec
mov
xchg
loopne
xchg
mov
scas
mov
xor
fcoml
int3
int3
rorl
leave
cld
push
sbb
pop
punpckhdq
gs
cmp
jno
out
mov
mov
int3
push
jo
js
scas
hlt
loopne
lcall
ja
cmpsl
mov
jmp
into
lret
faddl
mov
ja
xchg
icebp
jg
mov
data16
in
movsb
sub
test
xchg
fstpt
mov
xor
call
mov
jbe
pop
mov
fisubrl
pushf
and
mov
je
stos
cmpsl
negl
push
cmp
imul
lods
mov
leave
iret
ficoml
fs
jb
cmp
pop
sub
mov
push
push
sbb
aaa
jo
mov
inc
pop
add
lahf
in
cltd
daa
and
mov
jge
lods
inc
mov
jmp
or
movb
shlb
jae
testb
xor
ljmp
iret
push
xor
inc
push
notb
push
pop
in
in
xor
addr16
mov
jg
andb
or
cmp
sbb
or
mov
push
arpl
outsb
xor
fisttpl
and
hlt
cmc
cmp
mov
mov
iret
es
mov
add
mov
cwtl
mov
insb
movsb
insl
mov
add
repnz
fs
lock
rclb
adc
out
inc
add
in
test
sbb
pop
mov
and
dec
ljmp
outsb
push
xchg
lret
test
ja
push
ja
xchg
sbb
and
inc
or
popf
mov
loopne
test
jne
orb
jae
popa
js
mov
pushf
dec
add
int3
and
call
stos
cli
mov
scas
mov
arpl
cs
xor
adc
in
xor
cmp
scas
fmull
fistl
sti
add
cmpsb
jp
stc
cli
or
sahf
hlt
xchg
mov
jle
sbb
pop
cmp
int3
cmp
add
push
pop
imul
mov
jae
mov
mov
dec
cmp
pop
xchg
pop
jmp
jne
inc
push
lods
popa
sub
aad
add
sbb
mov
add
bound
bound
ljmp
jecxz
rcll
jl
ret
out
xchg
push
xchg
ja
push
iret
cmpsb
nop
fs
jg
nop
jmp
es
xchg
cmpsl
dec
pop
jmp
sbb
add
loope
insb
lea
daa
mov
les
add
jns
ljmp
xor
sti
clc
ljmp
fsubs
icebp
jge
mov
inc
lret
ffree
xchg
mov
test
adc
shl
sbb
cmp
js
aaa
mov
push
movsb
xchg
lds
out
sarl
sbb
cmp
cmp
popf
shrb
icebp
xor
and
sbb
out
mov
mov
iret
push
fists
pop
mov
sub
sbb
cs
mov
lret
int3
test
sub
in
movsl
into
sbb
sbb
mov
and
mov
jg
imul
test
imul
and
add
pop
pop
jmp
movsb
xor
lds
popa
mov
dec
mov
mov
in
pop
pop
add
int
adcl
mov
cmp
xor
sbb
shll
dec
jns
jae
dec
inc
out
push
imul
lea
addr16
mov
lods
xor
out
mov
lcall
inc
mov
pop
mov
pop
fwait
or
nop
lahf
and
call
or
fldenv
test
pop
aaa
dec
adc
loope
or
aam
or
stc
sbb
lcall
std
inc
adc
jae
aaa
inc
gs
pop
push
mov
ret
shll
pop
dec
dec
xchg
cmpsl
mov
push
and
push
jno
cs
mov
jnp
gs
cmpsl
xchg
addr16
outsb
mov
cli
inc
mull
pop
call
dec
xchg
xor
aaa
dec
sbbb
and
mov
cwtl
mov
lds
stos
nop
adc
movsb
mov
mov
mov
out
xabort
repz
repz
inc
mov
jmp
test
xlat
icebp
inc
out
sbb
adc
js
js
iret
insl
cmpsl
push
test
ret
ds
dec
cwtl
and
add
mov
xchg
loope
xor
mov
fsubrs
jecxz
fisttpll
mov
push
pop
push
mov
add
insb
inc
std
int3
or
pushf
dec
sub
cs
jbe
insl
push
mov
dec
in
scas
pop
sbb
cli
data16
rolb
fwait
in
sbb
add
xor
add
cmp
stos
scas
cmpsl
in
sub
adc
mov
push
dec
popf
movsl
add
mov
pop
xchg
mov
lret
ret
adc
mov
jp
ja
mov
mov
stc
push
repz
push
pop
pop
push
lret
push
aam
push
inc
or
sub
push
in
ljmp
mov
fwait
mov
mov
xor
fimull
lret
cli
in
push
fbstp
cmp
and
jno
mov
and
mov
or
loop
leave
add
fisubrs
pop
xlat
mov
and
stos
pop
insl
adc
pushf
add
repnz
jnp
dec
jl
loopne
movsl
ret
test
idivl
dec
sub
imull
outsl
dec
nop
test
jl
and
dec
int3
shr
pushf
mov
push
scas
mov
js
dec
in
inc
in
pushl
mov
std
mov
aam
ret
or
arpl
fsubl
cmp
push
add
push
lds
cs
adc
jg
test
mov
ds
imul
icebp
call
movsb
dec
fistpl
jo
mov
stc
jg
shll
icebp
bound
loope
ficompl
testb
lret
mov
scas
xchg
sbb
mov
mov
cld
fisttpl
push
mov
sbb
pop
aad
mov
mov
add
add
pop
sahf
fnstenv
add
jge
xchg
jnp
mov
dec
xor
es
jl
xchg
arpl
dec
fisttpl
adcb
xchg
stos
lcall
mov
or
fstpl
ret
inc
jbe
push
xlat
outsb
push
or
mov
lahf
jmp
hlt
int
cltd
push
jecxz
pop
stos
int3
xor
xor
mov
inc
out
rcl
sub
push
fistpll
sub
jg
pop
inc
mov
scas
mov
xchg
mov
fcomip
jmp
in
push
es
test
mov
adc
aas
sub
sub
insb
cmpsl
in
adc
jbe
mov
jmp
mov
repz
scas
movsl
test
sbb
sub
xor
xchg
test
pop
test
mov
pop
jae
xor
rolb
push
pop
xor
mov
pushf
fstpl
add
or
inc
pop
and
xor
adc
and
push
aam
jl
mov
lret
cltd
xchg
and
pop
mov
jbe
add
mov
xchg
jnp
ss
pop
add
mov
inc
xor
js
js
sbb
ss
mov
aaa
xchg
shl
xchg
mov
add
mov
std
out
xlat
pop
mov
adc
and
and
mov
scas
out
inc
or
xor
inc
sub
xchg
sbb
mov
jns
add
out
jecxz
xchg
sub
mov
stos
jne
ret
fnstcw
push
stos
ret
mov
scas
and
rorl
incb
pusha
cmp
pop
loopne,pt
dec
pop
inc
or
mov
jmp
sub
movsl
inc
cmp
dec
push
jns
sahf
hlt
testl
push
add
outsb
fsin
shll
in
or
push
cmp
pop
fwait
ljmp
mov
add
cmp
push
pop
pop
jp
sbb
mov
scas
jle
push
fnstcw
sub
sub
xchg
cmc
lret
loopne
leave
icebp
dec
inc
dec
test
jo
mov
repnz
add
out
es
mov
movl
leave
and
or
data16
mov
out
aas
scas
aam
cmp
cmpsb
imul
xchg
in
std
in
ljmp
pop
pop
xor
dec
roll
addr16
lods
test
pop
sbb
and
or
cmp
mov
iret
insl
xchg
shlb
pop
sub
push
sub
cmp
jecxz
mov
xchg
or
sbb
add
rcrb
pop
and
inc
lods
imul
cmp
stos
icebp
scas
add
fyl2xp1
outsb
les
js
cmp
xor
push
cmpsl
sub
sarl
mov
dec
cmpsl
rorl
pop
cmc
fmuls
out
adc
imul
pusha
cltd
mov
lahf
mov
mov
push
in
and
aas
or
and
movsl
jo
mov
decl
dec
xor
cmp
sub
out
mov
jbe
jmp
inc
stos
xor
notb
fdiv
push
fisubs
adc
sahf
push
xlat
pop
ret
pop
xchg
xchg
or
mov
test
test
jle
jge
or
cmp
sbb
and
or
adc
pushf
adc
lcall
cmp
test
push
rorb
cwtl
in
adc
cli
adc
or
xchg
push
adc
dec
mov
mov
fbld
push
sbb
mov
inc
xchg
push
es
pop
mov
out
movsl
push
clc
xor
outsl
cli
pop
leave
jnp
mov
dec
xor
fcomp
jl
jp
lods
xlat
add
test
cltd
push
stc
dec
out
or
xchg
push
add
faddl
sti
xor
cmp
xor
packsswb
inc
mov
jo
aaa
lret
subl
mov
or
in
out
inc
in
addr16
cmp
xchg
mov
jbe
inc
sub
mov
mov
xchg
nop
test
cmp
je
jb
xchg
adc
pop
xchg
lods
jecxz
push
cmp
out
push
test
hlt
mov
sbb
adc
add
mov
jnp
mov
add
rcrb
xchg
sahf
inc
imul
xchg
int
xor
dec
ficoms
lret
inc
enter
out
pop
stos
pop
nop
jne
mov
and
loopne
mov
in
push
xor
f2xm1
sub
pop
jmp
enter
and
sub
push
cmp
jmp
fmuls
stos
and
popf
pop
mov
mulb
imul
mov
loopne
and
outsb
adc
pop
sbb
fadds
lock
mov
aas
jae
mov
cs
xchg
leave
and
mov
cmp
inc
stos
xchg
clc
flds
mov
push
push
adc
add
push
and
inc
push
mov
pop
or
jno
imul
es
cli
jecxz
and
pop
or
sbb
mov
sbb
add
mov
imul
adc
sti
xchg
mov
jg
icebp
negl
imul
sub
out
dec
and
stc
mov
mov
ja
lds
les
sbb
popa
call
dec
inc
xchg
sbb
jge
jno
sbb
xchg
mov
loope
dec
xor
mov
scas
imul
stos
push
push
loope
mov
rclb
push
faddp
testb
adc
xchg
arpl
mov
pop
add
xchg
inc
cmc
cmp
lods
pop
add
adc
mov
jbe
inc
shlb
pop
or
test
jne,pn
xlat
mov
loope
adc
insl
dec
fiaddl
daa
testl
hlt
sub
xor
hlt
pop
in
aad
mov
dec
cmpsb
pop
push
shl
xor
mov
xor
mov
dec
lcall
sahf
mov
ds
out
cld
sub
dec
rcl
mov
mov
mov
test
jb
enter
xor
movsl
test
mov
sahf
es
fists
jmp
inc
jmp
aam
icebp
push
jbe
xchg
shll
mov
imul
out
loop
xchg
dec
xlat
insl
add
xor
or
xchg
pop
fisubrs
inc
push
out
loopne
scas
sarl
jp
popf
adc
xchg
mov
mov
ja
loope
push
cmp
pop
xor
xchg
or
push
dec
pop
shlb
leave
sub
rcrb
pop
call
jo
pop
aas
outsl
pop
sti
ja
fimuls
outsl
pop
cwtl
xor
lea
mov
insl
and
cmp
xchg
push
stos
lret
int3
xchg
movsb
js
loope
and
repnz
test
lods
xor
cwtl
pop
pop
imul
adc
jnp
js
cmp
inc
inc
push
fisttpl
pushf
pop
add
sub
add
imul
lret
add
sub
xchg
leave
jbe
scas
xchg
add
movsb
jmp
cmp
pop
sub
add
fwait
add
ljmp
mov
js
out
jae
imul
mov
add
dec
or
mov
sbbl
imul
fsubs
cmc
out
fldl
mov
fxch
xor
push
cs
mov
jl
jae
jo
pop
or
in
sbb
sbb
inc
aam
push
lcall
mov
pop
cltd
xor
cld
mov
add
js
cmp
add
dec
cmp
sub
shr
repz
fucomi
push
xchg
and
mov
cmp
jecxz
shll
out
mov
add
sub
orl
mov
pop
jmp
ja
pmaxsw
test
ljmp
dec
xchg
mov
mov
std
jp
ja
adcl
push
aaa
mov
mov
lahf
add
in
push
subb
sahf
or
iret
inc
imul
and
dec
adc
jb
inc
adc
stc
xor
repz
pop
lahf
push
in
xchg
sbb
or
shrb
in
popf
or
mov
xor
push
add
jl
dec
cmp
js
scas
dec
mov
cmpl
add
stos
int3
into
xchg
in
xor
mov
inc
add
push
mov
dec
jno
xor
pop
adc
in
repnz
cmp
xchg
int3
enter
jl
xchg
ljmp
pusha
adc
or
pop
hlt
test
loop
rorl
xchg
mov
sbb
les
cmpsl
scas
ret
push
or
ja
in
notl
fildl
xchg
jns
rorl
xor
push
mov
sub
dec
nop
ljmp
and
and
dec
and
xchg
jns
push
loop
stos
clc
fildll
icebp
sbb
xor
inc
les
dec
aam
repnz
push
jmp
loopne
inc
dec
push
jbe
mov
pop
aam
aaa
mov
adc
jmp
sbb
push
repnz
inc
enter
xchg
shl
outsl
int
push
adc
push
and
push
test
ret
mov
xchg
push
xorl
aas
push
mov
fldcw
inc
push
es
shlb
inc
push
sarl
and
fs
repnz
pop
mov
mov
xchg
xchg
es
inc
mov
pop
repnz
lea
push
and
test
cmp
popa
ror
fisubrs
repz
out
sub
adc
adc
fldt
scas
fstps
push
pop
xchg
xor
pusha
lret
mov
pop
ljmp
nop
bound
lea
push
mov
push
add
inc
jle
arpl
mov
xchg
adc
pop
jns
lret
es
mov
mov
mov
dec
mov
dec
mov
or
or
mov
lret
fcmovbe
arpl
jnp
adc
icebp
je
lock
xchg
push
mov
mov
jmp
cltd
in
rorl
scas
sub
pop
cmp
test
push
sbb
in
gs
push
fucom
push
out
mov
shlb
int
clc
jnp
bound
cmp
jle
fnstcw
test
mov
fcomi
mov
jns
hlt
mov
lods
aas
pop
push
lret
out
inc
cltd
push
sbb
jmp
xor
in
shlb
mov
push
decl
leave
or
mov
icebp
cmp
xor
sbb
fnstenv
xor
rcl
bound
ljmp
frstor
fcoml
or
jae
cmp
movl
enter
int3
jbe
inc
call
dec
jle
push
aaa
inc
stos
nop
lret
inc
pop
insb
cltd
mov
add
nop
push
cmp
xor
or
gs
mov
push
dec
je
pop
pop
rep
sbb
lods
in
sub
jne
adc
and
iret
stc
scas
cmp
and
mov
push
sbb
mov
inc
insl
dec
fisttps
mov
mov
mov
cmp
jns
lea
dec
mov
mov
jecxz
cmp
jbe
mov
jno
pop
es
rorb
loopne
bound
adc
mov
enter
pop
mov
js
xor
and
push
xchg
jnp
out
or
insb
push
scas
cmp
xchg
sti
and
insb
int3
add
mov
pop
or
movsb
in
imul
or
sub
cmovp
xchg
xor
adc
imull
jg
and
mov
cmp
jnp
push
cld
inc
xor
fldenv
dec
inc
dec
mov
cwtl
add
sub
mov
std
shrb
sbb
mov
and
cli
les
or
stc
add
pop
je
repnz
jo
xor
cmp
xchg
les
in
mov
shrl
loope
call
in
or
shll
xor
push
cmp
fsub
aaa
sbb
ror
fbld
lret
sahf
sub
inc
ret
jno
stc
popf
mov
push
push
loope
push
push
inc
mov
sbb
add
mov
test
hlt
mov
fstpl
mov
jp
cmp
aaa
cmp
and
addr16
mov
sarl
pushf
cli
and
test
nop
mov
cmpsb
std
pusha
dec
xchg
sbb
xor
sub
jno
add
push
jb
scas
lods
es
pop
lcall
push
imul
stc
mov
scas
out
mov
sub
ss
mov
fnstcw
ret
adc
shll
push
fmul
nop
mov
cmc
ja
stos
jno
sbb
push
sub
cmp
imul
ljmp
push
push
cltd
insl
cld
xor
jnp
xor
xor
lock
cwtl
adc
in
bound
mov
cmp
pop
cmp
pop
xor
lock
dec
pop
outsl
mov
jo
pusha
or
orl
mov
dec
cmpsb
data16
jb
sub
xchg
inc
outsl
jb
fwait
je
xor
xor
xor
inc
push
jmp
lcall
dec
test
imul
hlt
pop
cwtl
fs
nop
mov
shr
sbb
fistl
push
in
xchg
int
fs
pop
fmuls
push
ret
vpmacssdqh
mov
js
daa
pop
push
icebp
or
push
data16
inc
negl
movsl
push
imul
add
and
cmpsl
les
xchg
cmpsb
or
mov
and
pop
cs
out
gs
cmp
push
outsl
lods
cltd
movd
or
mov
adc
sub
mov
mov
mov
cmp
repz
ds
iret
insb
sub
lea
add
adc
jl
lods
inc
sub
sbb
jmp
stc
mov
xor
js
mov
and
fstpl
test
ljmp
inc
insl
dec
loopne
jle
pop
enter
and
nop
mov
mov
mov
mov
ret
add
push
dec
mov
push
or
mov
imul
add
adc
aam
push
stc
mov
adc
push
xchg
bound
sbb
ret
stos
loope
sbb
lds
clc
aad
bswap
fistpll
pusha
lock
test
popa
push
pop
stos
jg
adc
dec
mov
mov
popf
or
inc
out
out
mov
loope
lods
ror
cmp
rolb
or
pop
movsl
xor
and
sbb
repz
call
sbb
lret
popf
cs
sbb
shl
xor
out
jp,pn
pusha
fnstenv
jb
testb
push
scas
jnp
xor
xchg
stos
aas
pop
dec
pop
mov
rclb
and
push
mov
push
hlt
mov
adc
inc
sub
and
sbb
or
gs
xchg
ss
ja
aaa
mov
fldl
mov
pop
and
int
push
test
xchg
lock
push
xchg
ret
fisttpl
leave
in
and
icebp
jb
aas
sbb
and
jne
int
lods
std
ja
cmp
into
add
dec
pushl
int3
sbbl
mov
push
and
aam
mov
push
jge
inc
mov
stc
mov
cmp
outsl
fistl
ret
push
cmpsb
pop
mov
lods
adc
sbb
dec
push
movsl
mov
push
pusha
cmp
aas
dec
in
mov
xor
orl
int
mov
imul
fcmovnb
xor
mov
daa
lods
scas
shll
xchg
fwait
mov
xor
in
inc
jecxz
aad
imul
int3
pop
divb
push
inc
mov
mov
pop
cmpsb
sarb
adc
push
pop
cli
lahf
lret
dec
fistps
fistl
std
pop
pusha
push
test
mov
pop
cmp
xor
xchg
xlat
outsb
xchg
mov
scas
push
outsl
or
into
aaa
mov
int
sub
gs
cmpsb
ret
stc
jne
lock
pop
decl
cltd
mov
mov
or
les
cmp
jne
or
push
sbb
cmc
or
mov
sub
out
sub
or
pop
pop
lret
fists
pop
mov
mov
dec
xchg
or
add
rol
mov
sub
icebp
or
push
loop
outsl
repz
mov
dec
mov
dec
data16
jne
addr16
test
or
add
pop
sbb
xor
lret
aam
cmpsl
ret
aaa
adc
fisubrl
shll
mov
mov
cmpsb
nop
dec
sub
xchg
xchg
outsb
xchg
inc
sti
cmpsl
dec
mov
arpl
int
jno
lahf
sbb
stc
mov
xor
mov
pop
or
push
in
mov
ret
mov
mov
jnp
mov
fwait
leave
jno
andl
lds
pop
mov
xchg
test
mov
sbb
mov
lds
mov
test
fwait
sub
subl
mov
push
iret
cmp
mov
adc
js
sub
sbb
leave
lock
jg
lahf
inc
movsb
or
jmp
sub
pop
addr16
jl
push
rcrl
test
mov
jns
jl
out
adc
cmpsl
jb
mov
sub
cmp
dec
mov
pop
aad
imul
mov
mov
call
cmp
inc
ja
jecxz
out
mov
xchg
out
add
shll
xlat
lret
cld
sub
lahf
or
cltd
xchg
cltd
add
mov
sahf
xor
in
jns
repnz
push
cmpsl
movsb
mov
mov
gs
inc
mov
mul
cmp
jae
sbb
ret
mov
repz
cmp
xchg
push
mov
xchg
js
fisubrs
xchg
inc
dec
lret
and
pop
mov
xchg
and
sub
xor
push
fistps
add
mov
xchg
std
cmp
adc
sbb
mov
xchg
xor
lods
int3
icebp
cmpsl
cmp
scas
gs
and
test
dec
mov
sbb
xor
insl
sub
ljmp
bound
pop
adc
and
int3
pop
fimuls
pop
pusha
or
cmpsb
inc
pop
mov
movsl
sahf
pusha
or
jae
imul
shr
mov
adc
and
insb
test
cmp
inc
and
inc
push
mov
mov
arpl
sub
nop
xchg
ja
jle
xchg
rorl
mov
or
testl
loop
nop
jns
inc
sub
cmp
xchg
sar
mov
lret
stos
and
adc
xor
fs
inc
leave
int3
lahf
inc
lods
leave
adcl
in
jno
into
pop
sub
pop
inc
xchg
inc
inc
adc
pop
aad
xchg
cmpsb
jno
mov
ss
sub
or
iret
ja
sbb
xor
lock
loopne,pn
mov
xor
xor
fimuls
or
add
mov
jmp
and
fdivrl
test
sbb
out
adc
das
fstpl
enter
rorb
int3
add
lods
fwait
mov
push
mov
push
mov
dec
ret
adc
shrb
adc
pop
stc
in
adc
xchg
je
lcall
pop
inc
lea
or
inc
adc
movsb
push
sahf
in
add
rclb
push
in
cli
lret
and
jmp
pop
push
out
mov
repnz
xor
sbb
mov
andl
scas
sub
jg
push
push
outsb
mov
movsb
mov
pusha
test
aad
xchg
bnd
loope
popf
jmp
push
or
push
inc
iret
lock
ja
mov
inc
fcoml
or
mov
int3
xchg
push
jnp
and
aam
sbb
pusha
stc
fcomp
jp
dec
ljmp
mov
or
out
pop
add
data16
in
sub
in
jle
and
jl
into
pop
iret
mov
mov
mov
dec
ljmp
dec
std
hlt
ret
sbb
mov
push
rcll
jle
sbb
and
push
cwtl
or
cmpsb
insl
fldcw
loop
sbb
pusha
adc
pop
lret
add
out
mov
jl
xor
cmp
cmc
mov
dec
cltd
decl
popf
xchg
fcomps
out
movhps
jle
aas
popa
push
cmp
mov
fcoms
popa
mov
lea
mov
push
inc
dec
sub
pusha
sbbb
cmp
jecxz
xchg
pop
dec
dec
push
fldcw
pop
sbb
aad
cmpl
cmpl
imul
in
jecxz
mov
hlt
inc
mov
pop
or
add
xchg
jo
xchg
and
mov
inc
mov
loope
ljmp
popa
cmpsb
mov
push
jecxz
adc
into
cmp
mov
jl
jnp
push
inc
dec
pop
stos
addb
ret
das
clc
inc
insl
stc
sahf
pop
pop
and
aam
mov
jo
mov
dec
inc
sub
sbb
ret
inc
jmp
cmpsl
stc
stc
add
and
jl
test
aaa
sbb
and
sbb
pop
mov
dec
mov
ljmp
leave
ljmp
jecxz
mov
or
lret
mov
or
pop
pusha
cmp
and
lret
or
iret
stc
inc
push
das
cmp
pusha
orl
jno
movsb
adc
mov
pop
jno
and
and
or
xchg
pop
cmp
sub
loop
xor
sbb
or
xchg
frstor
seto
sbb
and
orb
pop
in
xchg
in
fisttps
cmc
sbb
mov
mov
andl
mov
dec
pop
mov
out
dec
add
inc
fwait
outsb
std
xchg
adc
mov
lahf
repz
mov
xchg
das
mov
stos
cmp
pop
pop
sub
pop
rcrl
enter
iret
hlt
lcall
mov
push
jmp
in
into
pusha
fwait
lea
sub
repz
or
jns
imul
dec
psubd
loope
lret
cmp
pop
push
pusha
movb
xchg
inc
mov
lcall
lea
and
pop
jg
lret
adc
mov
shl
xchg
adc
inc
or
xchg
shr
mov
les
call
mov
and
ds
movsb
andb
idivb
gs
xor
sbb
das
fdiv
testb
add
scas
adc
cmpsl
mov
iret
sahf
pop
rclb
mov
xchg
int
or
or
pop
in
mov
lahf
fwait
add
pop
push
int3
rorb
addl
lahf
and
mov
dec
out
jae
shll
pop
fnstsw
inc
lret
icebp
sbb
add
inc
ljmp
xchg
cmp
icebp
dec
sarb
mov
pop
mov
js
adc
push
test
mull
addr16
fistl
pop
dec
or
push
lods
xor
pop
nop
dec
leave
in
xchg
xor
or
aaa
pop
test
pop
sbb
or
mov
adc
insl
xchg
jno
xchg
stos
inc
or
movsl
lret
outsl
fsubl
imul
jl
stos
cld
repnz
cmp
pop
insb
mov
xor
repnz
rcrl
mov
test
outsl
sbb
xchg
ret
cmp
or
mov
adc
shl
cmpsl
adc
jge
pop
lret
int
xchg
push
imul
addl
jb
xor
into
scas
decb
and
ds
aaa
push
cs
sub
jbe
push
jp
adc
sbb
xor
rcll
and
push
bound
mov
pop
scas
sahf
divb
call
xchg
inc
rcr
lods
and
xchg
sub
xchg
arpl
test
cwtl
stos
push
pop
lock
fisttpll
sbbl
cmp
xchg
sbb
add
cmp
fs
fnsave
fdivrl
insl
scas
cmpb
jl
add
enter
pop
add
pop
icebp
jp
pushf
aam
ljmp
addr16
adc
lea
jo
pop
es
push
lea
lret
imul
hlt
or
ja
movsb
mov
test
mov
std
or
jo
test
lods
mov
iret
fnstsw
push
je
inc
push
iret
xchg
inc
add
cmp
mov
mov
push
pop
dec
adc
pop
cmp
mov
icebp
aaa
pop
jp
loope
push
loopne
shll
pop
push
jb
dec
inc
cmp
pop
cmp
rolb
ds
push
in
aas
mov
popl
shlb
loopne
movsl
cld
lahf
jns
mov
sbb
repz
xor
rcll
or
xor
leave
cmpsl
sahf
mov
pop
in
pop
mov
push
pop
or
mul
mov
xchg
mov
test
mov
pop
pop
inc
lods
fistpl
fdivr
test
sbb
dec
imul
imul
addb
je
in
ret
mov
mov
add
call
into
or
sbbb
mov
xor
and
add
dec
test
es
outsl
or
call
push
jno
lcall
ss
push
sbbb
sarb
test
mov
adc
push
imull
jge
jo
and
bound
fprem1
and
mov
imul
add
in
pop
xor
ja
lds
mov
sub
icebp
push
iret
xchg
lea
mov
mov
stc
and
gs
fcoms
push
cmp
shll
loopne
popf
imul
xorl
rorl
jbe
test
enter
stos
push
sarl
out
fists
fcompl
roll
psubd
in
mov
jp
shrb
fwait
aas
imul
stc
jnp
pop
out
jecxz
fs
loope
aas
in
and
outsb
aad
push
mov
pop
xchg
mov
push
jmp
mov
repnz
pop
xor
jno
adc
out
fbstp
add
cltd
ficomps
addb
jns
inc
or
push
je
or
xor
aas
dec
pushf
je
push
subl
mov
out
shrb
push
cltd
jge
push
fdivrs
inc
ficomps
xchg
into
pop
xor
sbb
mov
pushf
lea
pop
pop
ja
stos
aam
outsb
loope
xor
sub
push
je
imul
ror
outsb
out
stos
pop
jbe
dec
dec
sbb
mov
adc
shlb
pop
std
push
idivb
jecxz
sti
lods
les
addr16
xchg
mov
dec
mov
scas
pop
outsl
imul
dec
mov
pop
sbb
cmpsb
int3
loopne
repnz
xor
jl
ljmp
leave
push
cwtd
jmp
push
lret
enter
sub
cmpsl
mov
sub
mov
sub
das
popl
mov
pushf
cltd
pop
ret
lret
shrl
fst
gs
mov
int
mov
in
mov
stos
or
imul
xchg
pop
or
clc
sahf
cmp
adc
xchg
mov
inc
lds
inc
xchg
imull
int3
inc
xor
xchg
sub
jnp
or
mov
icebp
sub
dec
jmp
decl
int
xor
stos
push
sbb
push
aas
aaa
idiv
jnp
inc
mov
sbb
sahf
les
popl
ds
xchg
ret
stc
sub
mov
sbbb
shll
enter
das
imul
ret
add
cld
cwtl
out
or
or
xlat
aam
mov
dec
sbb
shll
mov
sbb
repz
out
std
lods
inc
push
ret
xchg
jne
fsubr
cs
in
aam
fwait
push
and
test
shlb
jne
adc
pop
xlat
and
lock
inc
push
es
dec
adc
mov
inc
test
out
push
jge
pop
hlt
sbb
push
lods
jnp
dec
movsb
scas
cmpsb
pop
clc
pop
mov
mov
push
mov
xor
test
imul
pop
xor
popa
add
loope
adc
inc
out
xchg
ljmp
cs
push
mov
test
and
adcl
add
mov
push
dec
adc
jnp
ret
cmpsb
out
xor
pop
cmc
cmpsb
cmp
add
and
mov
inc
fadds
cmp
and
push
cltd
mov
mov
or
cltd
pop
das
insl
bound
fidivs
std
sarb
dec
and
cmp
pop
in
and
insl
sub
std
dec
inc
mov
lahf
xchg
inc
fs
stos
sub
mov
cmp
add
jb
popf
pusha
rol
pop
jbe
sub
out
and
lret
es
cmpsl
cmp
add
jb
mov
or
lahf
cmp
iret
pop
adc
inc
mov
sarl
inc
pusha
inc
es
and
mov
inc
orb
adc
shld
lret
dec
aaa
cs
add
mov
mov
jmp
mov
cmc
xor
or
push
pop
subb
jb
or
cld
pop
pop
sub
dec
stos
stos
sbb
test
cli
mov
jmp
mov
rcr
mov
repz
xor
fstps
fsubrl
ss
daa
aam
iret
dec
or
data16
sbb
jge
rclb
leave
hlt
enter
adc
enter
jne
jg
dec
pminsw
das
jae
and
cmp
int
sbb
das
call
dec
ss
insl
roll
jg
stc
testl
imul
in
rcr
aas
sti
dec
inc
lcall
sbb
jle
lods
xor
adcb
fs
iret
movsb
sbb
jl
sbb
pusha
leave
push
adc
dec
popf
es
sbb
jmp
xor
das
nop
inc
sub
xchg
mov
mov
sub
sbb
mov
jp
cmp
pop
aam
loop
lods
fs
sarl
cmp
mov
cmpl
in
fiaddl
fwait
sub
dec
fsts
fwait
mov
push
adc
and
cwtl
sub
fisttps
repnz
jo
fisttpll
out
mov
stos
lds
sbb
cs
popf
sar
in
sbb
push
aaa
out
dec
dec
pop
xchg
lds
or
pop
push
fnstsw
stos
in
lcall
rorl
inc
in
jecxz
fwait
mov
dec
inc
adcl
ret
orb
pop
cs
fidivs
cmp
mov
xchg
sahf
adc
xchg
xor
mov
inc
stos
add
es
fwait
arpl
aad
xchg
xchg
pushf
adc
adc
cmpsl
movsl
aad
dec
cltd
dec
fsubr
sar
adc
jmp
out
or
ret
test
pop
loope
adc
addb
movsb
repz
movlps
jbe
add
rorb
mov
pop
xor
jecxz
sbb
daa
xchg
adc
pop
cmp
lods
shrl
lret
pop
push
rclb
insl
xchg
test
mov
pop
cmpsb
cmp
shrb
lcall
jne
cmp
test
xchg
popf
pop
mov
xor
test
push
out
push
or
test
sub
push
jge
imulb
mov
in
dec
and
mov
popf
lods
cwtl
iret
pop
add
repnz
jnp
xchg
jge
adc
mov
xchg
pop
lgs
mov
test
in
lods
sub
add
test
mov
jmp
gs
dec
pop
dec
sbb
mov
and
mov
lahf
rcrb
into
mov
push
data16
mov
in
js
inc
mov
das
or
rol
and
cmp
and
lock
jae
js
adc
mov
lret
stos
stos
in
jecxz
dec
outsb
dec
push
dec
aaa
sbb
adc
leave
movb
xlat
inc
int3
jbe
cmp
jle
xchg
leave
push
repnz
fwait
jl
iret
fldl
ja
jmp
push
data16
jle
add
scas
fidivrl
call
add
data16
lret
dec
pop
or
fwait
push
fcmovu
mov
jo
in
xor
push
jno
dec
add
push
jo
outsl
mov
mov
fistl
xor
out
test
call
out
mov
ljmp
stc
add
loop
cmp
adc
repnz
test
scas
ljmp
lret
jp
pop
xchg
push
sbb
aam
adc
push
test
jne
and
mov
xchg
cmp
push
xchg
pop
sbb
fwait
mov
mov
jb
cmp
mov
xchg
jbe
push
xchg
push
fisttpll
inc
xchg
xor
push
pusha
cmp
test
and
scas
repz
sahf
out
incl
or
fstp
mov
pop
dec
outsb
cmp
out
push
push
or
mov
sbb
loopne
insl
xchg
mov
faddl
pop
lods
mov
test
lods
add
sub
push
popa
jno
test
lock
mov
mov
dec
cmpsb
xor
and
popf
mov
inc
xchg
fldl
mov
fldcw
pop
jl
mov
outsl
cmp
jge
and
arpl
int3
push
shlb
ss
imul
sarl
mov
pop
jg
mov
out
dec
xlat
pop
push
mov
inc
insl
pop
mov
add
mov
cmpsl
loopne
lahf
push
or
mov
cmp
cmc
push
ljmp
sbb
mov
cmp
adc
arpl
imul
inc
push
int
rorb
jecxz
jmp
icebp
and
mov
sub
dec
cli
dec
adcl
repnz
jnp
fbstp
cli
and
rcl
jns
jns
fstpl
xchg
jge
dec
aad
stc
loopne
int3
jp
and
sub
int3
xor
and
mov
add
dec
mov
repz
dec
xchg
cmp
aam
and
xchg
ds
push
mov
aaa
sub
aaa
cli
mov
adc
les
hlt
int3
cmp
fs
sub
dec
cltd
xor
lahf
clc
inc
push
sahf
aaa
cli
cmpsl
jle
mov
jmp
push
or
push
sub
int
push
scas
and
xor
jb
arpl
ds
push
mov
shrb
adc
pusha
fistpl
js
out
fs
data16
xchg
dec
add
mov
aas
ret
shll
sbb
aam
sub
push
rcrl
out
xorb
xor
xchg
cmpsb
shl
int
push
xor
inc
add
ficoml
pop
sbb
mov
gs
mov
stos
add
mov
insl
outsb
mov
pop
pop
adc
pop
xor
loopne
imul
mov
stos
ja
aas
pushl
lahf
mov
aam
ds
dec
xchg
cmpsb
push
addr16
addl
mov
inc
and
iret
addb
fidivrl
mov
inc
mov
mov
inc
scas
or
sbb
clc
xor
push
sahf
shll
xchg
mov
xchg
jecxz
xchg
jns
xchg
je
ljmp
jmp
jno
xor
cs
out
dec
shr
in
mov
add
fcompl
jo
aaa
in
push
and
fiadds
sbb
test
or
pop
cmp
add
cli
mov
mov
xor
fiadds
cmp
cmpl
pop
dec
mov
mov
clc
outsl
and
pop
xlat
scas
imul
adc
out
push
mov
xchg
add
xlat
dec
push
loop
xor
rol
popf
movsl
shl
in
mov
xor
dec
lahf
clc
jns
das
mov
lods
int
cs
add
sbb
inc
lret
xchg
xchg
jl
outsl
mov
loopne
and
test
mov
je
mov
xchg
xchg
inc
loop
aaa
sub
outsl
jge
dec
inc
out
jl
mov
aad
pop
out
fwait
imul
les
pushfw
mov
pop
clc
loope
adc
dec
inc
mov
mov
in
or
cmp
jmp
dec
push
adc
xlat
aam
imul
popa
jmp
arpl
mov
call
lods
mov
push
xor
xchg
xchg
insl
movl
int
push
add
cld
stos
loop
mov
out
insb
cld
sub
bound
lret
or
jp
cmp
jecxz
mov
cltd
and
cmp
imul
fldenv
pushf
test
cmp
jge
mov
stc
shll
arpl
fisttpll
hlt
lret
fcmovb
outsb
cs
xchg
xadd
sti
or
push
das
or
push
mov
je
test
sbb
adc
cld
stos
inc
loop
xchg
jp
mov
xchg
rcrb
out
mov
data16
addr16
idiv
sarb
fstpl
pop
inc
sub
jne
hlt
jo
es
jge
cmpsl
test
mov
dec
rorb
inc
std
push
iret
inc
icebp
cmp
addr16
stos
cs
add
push
aam
mov
push
pop
mov
pop
mul
pop
rolb
or
daa
popa
roll
into
int
pop
and
hlt
push
ret
pop
sbb
or
dec
test
adc
icebp
insl
xchg
inc
adc
repnz
sti
std
ret
mulb
xlat
pop
fsubp
push
addr16
mov
hlt
xchg
gs
pop
scas
pop
mov
sbb
outsl
mov
cmpb
shlb
sbb
mov
adc
imul
inc
add
add
mov
les
cmp
pop
mov
mov
test
dec
push
dec
das
mov
xor
dec
call
sbb
dec
add
mov
or
sub
loopne
mov
xlat
mov
lods
imul
jno
sub
fimuls
add
cwtl
xor
mov
or
data16
mov
fcmovne
push
push
aad
pop
out
adc
or
push
shrb
shl
jle
jp
andl
cs
mov
dec
mov
fs
cmp
adc
adc
outsb
mov
pusha
add
fs
sahf
dec
pop
inc
hlt
push
push
bound
es
rcrl
xor
or
gs
cmp
fwait
or
jp
cmc
push
out
ss
mov
mov
push
xchg
shll
jb
xchg
push
out
mov
lcall
stc
jae
mov
add
push
or
and
call
mov
inc
out
es
adc
fdivl
scas
cmp
jmp
daa
outsb
xchg
int
lea
ret
xchg
add
loope
daa
mov
sahf
icebp
fwait
data16
cmp
data16
stos
jge
add
lock
jle
mov
inc
sub
adc
ror
cmp
sub
dec
pusha
popf
and
sbb
xor
push
adc
push
jno
dec
dec
out
imul
inc
pop
mov
lahf
or
ret
js
sub
mov
sbb
imul
shl
imul
in
movsl
jecxz
mov
push
clc
mov
hlt
insl
data16
sbb
test
aad
inc
pop
rolb
inc
pushf
cmp
lret
lret
int3
mov
dec
shll
gs
dec
adc
push
xchg
add
sbb
fbld
mov
cli
xor
jns
mov
sub
in
unpckhps
ja
pop
jns
scas
sub
dec
mov
cmp
addb
pop
jmp
daa
pop
sbb
mov
or
aaa
fiaddl
cmp
sub
cmp
push
nop
mov
leave
scas
pop
aas
cmc
mov
ficoml
push
cmp
xor
rorb
mov
inc
sbb
push
clc
push
out
nop
and
and
mov
pop
int3
daa
push
sbb
xor
scas
jns
sub
insb
mov
jmp
dec
scas
pop
fcmovnu
fsubrs
jns
mov
in
out
and
es
je
sbb
addr16
dec
subb
daa
or
push
lahf
popl
scas
cmp
lret
aas
addb
stos
adc
adc
jo
pusha
and
mov
xor
lahf
xchg
jae
scas
in
mov
in
inc
call
xor
cmp
cmpsl
mov
fucomip
out
dec
inc
fsts
xlat
and
push
jg
mov
cmpsb
js
shrb
pop
pushf
mov
push
sti
mov
es
inc
insb
loopne
cltd
mov
test
sbb
insb
fnstsw
mulb
addr16
lea
xor
fcomps
jle
push
mov
fisubrl
loop
dec
int
test
lods
push
stos
rcl
data16
or
mov
dec
mov
add
outsl
cmc
pushf
mov
pop
je
call
addb
aad
inc
mov
shl
orl
xor
inc
jb
cwtl
inc
inc
in
mov
jmp
je
jle
mov
push
shrl
push
mov
inc
test
pop
pop
push
cmp
jle
mov
jl
and
lret
and
dec
fwait
adc
cld
sbb
shl
adc
dec
mov
mov
xor
and
inc
inc
out
push
lods
rolb
push
lret
sti
sub
push
test
lret
mov
cmp
inc
shl
mov
movsl
cmp
test
sbb
inc
mov
xlat
cli
loop
add
push
sub
xchg
test
push
dec
pop
nop
xor
cmp
mov
in
and
popf
jnp
mov
or
fbstp
les
xor
dec
cmpsl
ret
mov
clc
cmp
scas
push
sahf
push
jp
repz
mov
shlb
sbb
mov
lea
cs
cmc
push
insl
shll
jnp
paddd
daa
insb
rolb
inc
andb
inc
add
jecxz
cmp
popf
dec
pop
fcoms
dec
pop
pushf
lds
xor
push
testb
mov
jns
and
mov
mov
mov
aam
rcr
mov
cli
mov
jbe
adc
adcl
dec
aaa
outsb
je
cltd
jnp
push
mov
cwtl
inc
adc
xor
mov
ja
push
shl
sub
fldenv
sub
fs
push
sbb
sbb
loope
lahf
push
sbb
lds
push
cmpsl
fimuls
daa
adc
outsl
mov
jbe
and
mov
jmp
imul
fucom
repz
sub
lds
add
sub
mov
inc
push
int3
cmp
loop
out
pop
push
push
dec
xor
pop
sbb
out
lods
leave
sar
xchg
xchg
test
jb
lret
xchg
and
scas
lret
loop
out
xchg
inc
mov
nop
mov
jne
pop
sub
stos
testl
mov
pop
or
negl
jnp
in
pop
or
imul
mov
nop
sub
dec
jne
xor
push
xor
push
xchg
int
push
mov
mov
lods
fldt
mov
popf
sti
push
cmpsl
sbb
jnp
mov
and
cs
adc
lds
ss
je
sbb
mov
lea
xor
jg
pop
and
ljmp
popf
push
sub
das
in
rolb
push
pop
mov
jns
loop
pop
ljmp
rorb
fistpll
xchg
test
fisttps
mov
mov
sub
add
cwtl
mov
mov
mov
jle
and
jnp
inc
and
xor
push
sbb
push
add
cmpb
lret
movb
sbbb
mov
xor
jb
enter
push
cmp
sahf
jg
fbld
add
call
pop
sbb
out
pop
decl
jecxz
addr16
lds
mov
sbb
pop
imul
xor
aad
push
sub
mov
xor
cmpl
lods
sahf
add
scas
movsb
jle
pop
pop
stos
pop
adc
jmp
xchg
sub
xlat
cmc
bswap
ja
xchg
dec
cmp
ret
mov
lods
ja
cmp
or
push
xchg
popa
dec
adcb
out
pop
cmpsb
cld
lds
cli
xchg
test
call
ljmp
or
sub
sbb
aad
jmp
sub
stos
dec
or
push
dec
iret
lods
sub
pop
mov
cs
mov
pop
sub
outsl
into
inc
sbb
ret
jo
ret
sbb
cmp
les
mov
popf
test
dec
xchg
push
shlb
aas
jae
and
flds
pushw
sar
pop
sbb
jns
inc
ja
dec
movsb
adc
jne
sbb
aad
and
test
outsl
addr16
push
or
loopne
inc
out
lcall
push
aam
inc
pop
lcall
imul
push
aad
ret
push
scas
in
mov
push
test
daa
xor
cmp
fdivrp
cmp
mov
adc
popf
stc
xchg
nop
add
cltd
xor
loopne
push
loopne
mov
es
andb
test
and
xchg
or
aad
jno
and
loopne
arpl
mov
jno
shl
movsl
xor
pand
dec
or
or
ret
mov
sub
hlt
sbb
xchg
jg
ja
addr16
mov
cmp
or
jp
pop
pop
adc
inc
mov
test
or
xor
adc
mov
aad
and
pop
out
notl
addl
mov
outsb
push
push
mov
cwtl
mov
jae
aam
daa
iret
xor
cmpsb
jnp
push
hlt
push
leave
test
ljmp
push
nop
xchg
pop
mov
negl
add
push
lcall
mov
lahf
lock
into
cmpsb
sti
subb
aad
fsubrs
es
scas
call
lock
fistpll
push
pop
clc
aam
pop
repz
pop
cmp
adc
js
repnz
insl
or
test
int
inc
jo
inc
dec
adc
ret
sbb
mov
push
and
pop
repz
jns
fiadds
jle
xchg
rorb
mov
dec
stos
enter
xor
mov
mov
ljmp
sbb
lcall
and
inc
out
dec
add
jg
cs
cltd
out
mov
xchg
mov
fiaddl
sbb
out
hlt
sub
push
mov
xchg
fcoms
dec
sti
nop
xor
outsl
ljmp
dec
pop
push
jae
daa
cmpsl
and
xor
adc
jae
and
jp
incl
push
call
subb
or
mov
lea
xchg
push
ror
call
hlt
jmp
pop
adc
sbb
cmpsb
mov
je
lret
mov
push
je
sbb
mov
cmpsl
aam
idivb
mov
in
mov
sub
mov
and
push
out
cmp
xchg
or
fdivs
loop
pop
sub
push
roll
fs
add
pop
std
popa
xor
push
mov
push
pop
outsl
xchg
mov
sbbl
xor
cmp
cmp
xchg
and
test
adc
mov
repz
push
add
enter
xchg
int
mov
ret
xor
mov
ja
adc
aas
adc
fnstcw
out
scas
ds
testb
jmp
mov
jecxz
data16
add
jns
xchg
movsb
xorb
cmp
push
add
pop
adc
movsb
xchg
xchg
out
mov
test
pop
pop
notb
lds
arpl
pop
ljmp
xchg
sti
sub
test
jmp
xlat
stos
ret
and
xorl
in
aad
insl
jge
pushf
sub
jmp
jno
out
test
sub
pop
jg
pusha
push
mov
inc
das
push
jne
cmp
adc
ljmp
sbb
cmpsl
fcompl
and
mov
xor
pop
adc
xor
mov
shlb
neg
sub
adc
adc
add
dec
stc
arpl
xor
lea
jae
push
daa
ljmp
and
subb
mov
mov
ds
fistps
xchg
jno
xchg
mov
dec
out
leavew
or
enter
lods
ficoms
mov
lods
leave
cmp
fildl
sbb
not
inc
or
int
push
xchg
and
mov
insb
aaa
sub
mov
cmp
cmpsl
mov
sbb
mov
movsl
push
outsl
dec
push
fsubrl
sub
mov
mov
cmc
mov
orb
int
jp
bswap
sbb
aad
jns
and
mov
insb
icebp
pop
lea
adc
push
add
xor
jmp
push
popa
stos
not
rorl
dec
lcall
adc
js
mov
loop
inc
push
xchg
pop
int3
mov
inc
addr16
iret
fadds
xchg
rcl
or
pop
xor
and
popf
adc
pop
stos
int3
mov
fs
sub
hlt
and
pop
dec
fmull
cmpsb
mov
fisubrs
pop
stc
xabort
test
pop
pushf
hlt
ja
in
pop
cmp
mov
or
adc
lock
inc
pop
xchg
lret
jo
add
inc
or
aaa
js
gs
stc
sub
outsb
out
ds
push
adc
iret
cmc
and
fucomp
repnz
inc
and
jmp
fbld
repnz
repnz
pop
mov
sahf
adcl
push
or
fcomps
stos
sbb
jne
lock
cli
push
test
pop
nop
lahf
test
das
shlb
push
pop
pop
or
mov
dec
insl
pop
divb
popa
pusha
loope
sahf
add
push
pop
cmp
mov
pop
xor
adc
fnstenv
sub
xor
jae
sbb
mov
or
fwait
fs
sub
subl
pushl
mov
test
inc
ret
jecxz
aas
clc
out
movups
fsts
pop
cmpsb
dec
add
imul
cmpsl
nop
jp
lock
mov
fnstcw
stos
stos
addr16
push
xchg
mov
scas
jo
inc
jle
mov
ss
rol
or
xchg
or
jg
aas
pushl
push
pop
rcl
loop
int3
dec
xchg
xchg
ret
arpl
jecxz
jp
inc
movsb
mov
or
adc
pop
fstl
xchg
pop
in
add
not
aad
sarl
das
out
xchg
xor
jns
cmpsl
mov
and
jge
ss
mov
stos
es
aas
outsb
push
cmp
xor
mov
ljmp
inc
inc
adc
in
xchg
push
push
add
iret
xor
int3
je
cmc
sbb
and
pop
adc
sub
dec
mov
out
inc
rcrb
adc
imul
insl
cld
dec
jb
lret
in
inc
fbstp
cmp
out
loopne
mov
arpl
jne
adc
and
inc
iret
sbb
insb
pop
and
scas
jg
inc
cmp
fsubrl
out
pop
test
test
jl
sbb
call
cltd
in
xchg
insb
mov
xor
out
sbb
dec
sub
std
pop
mov
rcrb
stc
mov
cli
pop
add
mov
test
and
fmulp
lods
sbb
fucomip
out
inc
dec
jo
mov
lret
ja
pusha
out
mov
xchg
add
ljmp
inc
xchg
xchg
adc
mov
push
stc
cs
lahf
push
fistps
jb
cmp
out
adcl
and
out
sbb
adc
scas
jo
fs
aad
sub
mov
loopne
mov
inc
add
pop
cmpsl
out
jmp
cmp
push
jb
scas
sti
cld
std
push
adcb
lods
lret
cmp
inc
sbb
pop
test
xor
sbb
aas
xchg
das
pop
jo
jns
rcrl
or
and
out
dec
add
inc
inc
xchg
daa
cmp
sbb
cmpsb
sarl
mov
sub
iret
adc
mov
jge
mov
push
push
out
ja
inc
popa
jmp
or
ja
hlt
scas
add
jo
insl
lret
or
bound
inc
add
mov
rorl
mov
cmp
ss
jp
xchg
icebp
mov
das
mov
adc
mov
cmp
sbb
call
shr
pop
mov
cmp
cmp
push
or
iret
movsb
popa
mov
jbe
dec
lcall
fldt
test
xchg
movsb
js
adc
dec
add
ds
dec
scas
jmp
mov
jge
inc
pop
cmp
rcrb
jnp
cli
mov
cmp
jns
push
int3
mov
dec
inc
icebp
cmp
inc
ret
repz
inc
pop
xchg
push
xor
jle
sub
call
xchg
daa
pop
leave
outsb
push
jo
inc
jmp
in
in
mov
xor
and
adc
mov
lret
sub
in
push
pop
mov
mov
test
mov
push
popa
adc
jmp
push
fst
cvtps2pd
ret
fists
scas
popf
movsb
jmp
and
dec
fldt
in
pop
fnstenv
sub
outsl
mov
aas
jg
add
and
mov
cltd
cmp
fisttps
inc
cmp
xlat
dec
movsl
cmp
scas
stc
mov
subb
pop
hlt
addr16
je
lcall
xor
js
fstl
bound
aam
cmp
xor
xor
mov
mov
imul
and
mov
sbb
xchg
and
mov
out
xor
jb
mov
stos
rdtsc
push
imul
mov
push
adc
fucomip
and
pop
test
enter
call
cmpsl
pushw
sti
arpl
or
gs
inc
push
mov
and
or
pop
fsub
std
pop
lods
lods
push
mov
gs
sbb
sub
cmp
pop
fldt
movsb
cmp
in
mov
adc
sub
cmp
xchg
dec
mov
stos
mov
fidivrs
gs
pop
jecxz
out
hlt
int3
cld
aam
aad
ret
pop
cmp
outsb
andb
add
ljmp
and
movsl
sti
and
pop
push
fmull
sbb
mov
jb
subl
icebp
icebp
ja
addl
pop
and
cmp
and
xchg
push
lahf
pusha
enter
idivb
xchg
jecxz
xor
fistl
arpl
rolb
sbb
mov
mov
scas
or
push
fwait
xor
scas
dec
shll
imul
loope
cmpsl
lret
adc
arpl
das
xchg
xlat
mov
fwait
hlt
loopne
mov
and
jp
adc
imul
jns
sti
sbb
mov
xchg
into
lock
or
pushf
idivb
add
inc
jl
pushf
jb
sbb
popf
out
sub
mov
mul
xchg
aad
push
andl
or
sub
mov
mov
mov
push
daa
into
outsb
ja
mov
sub
push
out
or
fmulp
loopne
inc
dec
testl
push
push
mov
andb
add
jo
dec
cmc
mov
push
inc
mov
mov
notb
push
jp
mov
dec
push
mov
fildl
push
rorb
fsub
adc
xchg
andl
int
adc
jp
das
cs
push
das
mov
pop
testb
std
lret
and
push
mov
adc
jbe
jbe
jo
in
sbb
dec
movsl
dec
movsl
mov
xchg
aam
lret
inc
add
in
std
es
aad
mov
sub
cs
jmp
sbb
mov
push
fninit
shr
loopne
push
addr16
jl
pop
and
lret
movsl
rcl
call
or
ss
daa
inc
dec
dec
hlt
or
cmpsl
add
mov
jns
fidivs
mov
mov
xchg
inc
test
jg
add
push
daa
push
sbb
push
and
xchg
push
std
push
pusha
fsubrs
mov
hlt
sahf
das
into
ret
enter
lea
imul
fcomps
mov
aam
or
int3
sub
movsb
mov
fwait
loop
daa
insl
jae
adc
bound
dec
add
or
shlb
ljmp
xor
mov
in
jno
repnz
xor
fstpt
outsl
jg
pop
sub
fadds
jb
inc
sub
in
adc
push
loop
push
xor
popl
or
je
faddl
push
mov
dec
popa
shll
sbb
mov
dec
xchg
mov
out
bound
sub
add
aam
and
jecxz
fwait
lahf
add
push
int
mov
push
mov
pushf
test
sahf
insb
pop
mov
ficoms
arpl
or
inc
pop
jge
pop
divb
add
xor
xchg
inc
cmpb
sti
cld
and
mov
bound
cmp
int
out
ficoms
fisubrs
arpl
dec
sahf
mov
jl
data16
xchg
and
push
fisubrl
cltd
js
or
fadds
mov
es
mov
cltd
test
mov
pusha
push
xchg
cmpb
xor
inc
and
xor
cld
cld
sub
fdivr
test
pop
imul
jo
test
adc
mov
and
cwtl
bound
sbb
or
out
pop
push
lds
jb
ficompl
flds
xchg
and
mov
jns
jbe
lea
dec
wrmsr
jl
jno
jo
push
cmpsl
adc
push
outsb
fistpll
fs
mov
add
xchg
xchg
fisubs
jl
repz
sbb
scas
cmp
mov
fabs
cmp
push
js
rcrl
js
test
mov
inc
pop
clc
lcall
push
cmp
mov
loop
inc
sub
jp
mov
fdivrl
imul
popa
add
mov
xchg
cld
push
int
daa
mov
mov
out
test
xor
lea
inc
xchg
dec
sbbb
mov
stos
lret
dec
pop
and
mov
ret
pusha
sbb
pop
cli
icebp
out
push
sbb
fdivs
xchg
xchg
test
fldcw
call
push
cmp
fnstenv
int
dec
add
add
test
jg
insl
push
pop
pop
daa
arpl
in
push
dec
push
mov
jecxz
xor
mov
mov
add
in
and
jbe
xor
pushf
dec
fisubrl
and
pop
mov
popf
xchg
cs
push
popf
fcmove
aad
ds
out
mov
std
cmpsl
or
xorb
sahf
mov
rolb
cmp
int3
pop
pop
fildl
dec
push
push
mov
push
push
sbb
movsb
pop
stos
xor
cmp
inc
adc
sbb
mov
inc
adc
and
imul
mov
repnz
gs
push
xchg
test
inc
cmpb
stos
mov
mov
or
rolb
or
xchg
push
nop
shrl
leave
or
or
fldenv
stos
inc
sub
lcall
dec
out
push
loopne
je
jne
idiv
adc
popa
rolb
call
cmp
test
pop
and
and
jle
popa
xchg
mov
push
mov
in
jle
jge
pop
out
sbb
jo
cmp
dec
push
ja
jl
fcoms
jmp
stos
mov
inc
out
scas
adc
rclb
xchg
imul
out
enter
mov
push
adc
push
cmp
call
or
les
adc
cmpsb
and
mov
les
mov
aam
addr16
adc
in
in
into
clc
flds
mov
or
or
xchg
outsb
sbbb
bnd
lock
pop
mov
xlat
in
push
and
fidivrs
cli
shll
addr16
fistl
jne
sub
mov
adc
or
lock
std
adc
stos
ret
test
std
mov
and
sbb
das
mov
lods
in
jae
jo
dec
pop
mov
ljmp
addr16
mov
cmpsb
add
jnp
mov
push
stos
lret
and
pusha
loop
loop
fcoms
sahf
fiaddl
mov
sbb
iret
and
xchg
push
sub
adc
inc
and
fs
xchg
sbbb
imul
decl
mov
cs
add
and
jae
lds
or
jb
outsl
out
loop
push
movsb
xor
sti
cmp
icebp
fwait
ds
stos
lea
fs
subl
out
push
inc
cmpsb
sub
ljmp
mov
aam
insb
mov
jecxz
addl
or
adc
adcl
imul
and
dec
mov
mov
and
mov
sub
cmp
cmp
jnp
int3
dec
and
bound
mov
imul
xor
add
loopne
cmp
push
sbb
leave
aaa
je
or
cmc
into
lcall
inc
mov
sarb
push
cmp
repz
inc
movsl
lods
sbb
nop
jp
scas
push
pop
push
gs
adc
mov
out
mov
lods
leave
mov
mov
and
out
pop
and
mov
es
aaa
mov
ret
xchg
cmp
lock
andb
jns
push
push
push
push
jo
lahf
imul
lret
pop
clc
mov
or
push
ret
insl
push
fnstsw
sub
cltd
or
xor
repnz
xchg
sbb
xchg
lock
les
sbbb
lahf
cld
subb
cmp
icebp
xor
insl
jecxz
cmp
dec
cmp
sub
jge
aam
icebp
jg
ja
movsl
les
leave
pop
xchg
dec
lahf
lcall
pop
mov
out
sbb
xor
cwtl
xchg
pop
inc
push
aas
ljmp
cwtl
outsb
adc
enter
adc
movsb
shl
xchg
mov
mov
sbb
push
into
mov
jg
xlat
mov
mov
mov
xchg
jns
xchg
jge
cmp
insl
or
push
sti
lret
xchg
out
mov
fidivs
or
cltd
mov
js
jmp
insb
push
int3
cmp
dec
pop
sub
ret
push
sub
pop
and
mov
mov
sub
pop
ljmp
push
frstor
cmpxchg
sbb
push
mov
add
xor
push
aaa
jno
jp
hlt
ss
xchg
fsubrp
adc
sbb
add
cmp
inc
ss
push
divb
jne
daa
ret
stos
testb
repz
jb
mov
push
mov
xorl
mov
enterw
xchg
call
jae
in
call
int3
bound
mov
addr16
jne
ljmp
insl
xor
xchg
push
mov
push
movsb
into
test
jnp
scas
jl
stos
cmpsb
pop
cltd
movsl
or
les
aaa
popa
adc
or
out
and
fnsave
cmp
shlb
inc
dec
bound
mov
das
inc
dec
inc
rorb
xchg
mov
in
mov
shll
mov
movsb
lret
mov
hlt
jmp
or
shll
je
mov
bound
std
into
rcll
add
sbb
in
adc
or
sub
add
mov
jbe
idivl
lea
ja
fisubl
and
mov
pushf
inc
push
inc
out
fsubl
mov
pop
pop
push
and
loopne
push
clc
jge
out
and
adc
or
jp
push
cmp
xor
dec
sahf
mov
subb
xchg
xchg
sbb
jno
mov
prefetch
jo
cmc
stos
mov
in
enter
push
pop
jle
ret
sub
std
rorb
test
pop
out
sub
lret
pop
inc
sub
push
decl
lods
dec
lcall
add
xchg
pop
filds
jle
push
mov
cmp
aaa
cmp
test
mov
adc
loop
mov
bound
mov
mov
cmp
mov
insb
cmp
push
pop
nop
dec
mov
pop
imul
add
je
mov
sti
test
lret
fiadds
lahf
pop
je
pop
aas
clc
pushf
cmc
shlb
scas
mov
sub
pop
sub
dec
mov
jl
stc
inc
addb
stc
dec
push
pop
mov
mov
lcall
std
scas
inc
sbb
js
std
cmpsl
push
lods
arpl
cmp
pushf
dec
push
fcompl
pop
lods
mov
mov
cmc
mov
lea
sub
in
lods
sub
cs
movsb
push
push
ficompl
push
cmp
mov
adc
ss
jp
pop
idivb
pushf
rorl
mov
mov
popa
push
shrb
pop
jb
in
inc
push
es
arpl
add
aam
dec
and
addr16
jne
call
fstps
mov
or
pop
jne
pop
and
push
clc
mov
mov
sub
jno
sbb
adc
scas
adc
jb
popa
int
ret
push
mov
je
jmp
orl
fwait
loopne
sbb
dec
xlat
nop
mov
mov
shl
clc
push
cmp
and
mov
cmp
lea
push
stc
pop
std
out
movsb
push
clc
scas
jl
mov
mov
test
cmp
and
lret
inc
stos
jl
clc
xchg
popf
xor
xchg
xor
insl
lock
jg
add
mov
repz
outsb
and
jg
lods
push
cltd
pusha
arpl
in
clc
ss
mov
push
mov
outsb
sub
dec
push
xchg
pop
orl
xchg
mov
xlat
sbb
rcr
cmpsb
rol
out
pop
clc
mov
lret
cmp
sub
add
outsl
loope
arpl
adc
sub
ret
sub
sub
cmp
das
and
or
filds
push
aam
adc
xchg
mov
pop
popa
adc
sub
stos
and
add
xchg
mov
mov
mov
xor
mov
int3
add
int3
lea
lahf
inc
mov
pop
sub
and
sti
or
mov
out
mov
clc
inc
dec
jl
or
mov
mov
push
pusha
jbe
bound
pusha
adc
sbb
dec
mov
int
scas
adc
into
testl
cmp
insb
in
or
push
jbe
loopne
int
pop
fistl
adc
sbb
pusha
push
scas
movsl
and
je
popa
sbb
mov
adc
ret
int
jmp
cli
jmp
aaa
dec
sbb
xor
faddl
lret
aam
pusha
xchg
adc
push
xchg
dec
sbb
jp
inc
sub
mov
and
repz
hlt
inc
cmp
sbb
gs
push
jmp
jno
hlt
adc
fwait
mov
fldenv
shlb
sub
adc
or
and
clc
andl
loop
ret
lock
sahf
pop
lahf
jo
rcl
push
push
rol
mov
mov
jp
push
mov
cs
repnz
pop
imul
aad
in
in
jo
pusha
repz
or
inc
jecxz
ficomps
push
jno
xchg
das
add
cmpl
je
add
push
mov
push
mov
sbb
pop
jge
sub
pop
mov
in
aad
inc
dec
push
idivb
sahf
xadd
push
or
push
adcb
and
fwait
ret
fwait
insb
mov
cmp
movb
pop
pushf
mov
pop
push
divl
mov
sbb
test
pop
sti
jb
cmp
test
aad
dec
or
inc
sub
and
test
xor
dec
mov
jbe
cltd
jmp
test
cmp
mov
dec
xorl
lods
sbb
jae
leave
xchg
fcomi
adc
mov
and
fs
lret
dec
test
pop
sub
loopne
dec
push
cwtl
xor
mov
cmp
sbb
leave
jnp
test
lcall
repnz
or
xchg
inc
cmp
bound
dec
pop
push
lea
je
aad
cmp
xchg
and
stos
cs
jae
ljmp
outsb
andb
imul
gs
outsl
mov
inc
mov
inc
test
fadd
jp
aad
aad
add
xor
sbb
pop
cld
dec
pusha
push
fidivrs
scas
mov
mov
cmp
testl
sbb
xor
stos
push
jns
sbb
je
cmpsl
out
stos
fbld
fisttpll
inc
out
push
push
data16
jnp
inc
sbb
pop
mov
or
sti
jbe
dec
xor
ss
imull
pop
cmc
adc
jne
mov
fimull
into
jno
xchg
or
sbb
mov
jp
inc
cltd
dec
add
pusha
out
mov
mov
cs
popa
test
mov
fsubr
push
negl
xchg
mov
lea
jne
popf
push
mov
arpl
ret
xchg
mov
pop
outsb
adc
lret
inc
clc
in
lcall
rcl
and
aam
lahf
outsl
or
mov
add
rorb
or
je
cltd
rcrb
jmp
mov
cs
scas
mov
sbb
mov
dec
popl
and
mov
in
negl
les
sbb
mov
rcll
or
mov
stos
lret
pop
cltd
or
xchg
mov
hlt
int
cmpsb
mov
dec
xchg
add
in
xchg
loop
jb
out
mov
aaa
out
icebp
sub
mov
imul
mov
push
data16
sbb
sub
add
push
ljmp
mov
sbb
iret
mov
mov
xchg
mov
lds
xchg
pushw
or
repz
push
call
mov
add
fcomps
imul
loop
jns
pop
cmc
out
push
xchg
insl
push
imul
fucomp
aaa
jp
jp
adc
add
and
stos
mov
cmp
addb
les
clc
mov
test
add
scas
loop
jecxz
xchg
inc
cltd
mov
or
insb
jb
aad
xor
sbb
add
pop
push
xchg
leave
mov
sbb
stos
nop
mov
in
push
and
or
test
adc
popf
sub
fs
xorb
loopne
arpl
out
jno
sub
test
push
sub
andl
pop
jae
mov
adc
nop
mov
sbb
xlat
negl
cmp
hlt
cmpsb
imul
clc
js
xchg
sti
adc
lock
dec
sti
cmp
test
dec
inc
jecxz
add
mov
cmpsb
mov
loope
out
les
pop
lock
fildll
rcrl
ret
fstps
ss
cmp
dec
sti
cmpsl
xor
xor
in
mov
xorb
or
sarb
or
jbe
cmp
movsb
jmp
int
arpl
xor
sbb
sbb
cld
aas
dec
push
xchg
add
xor
jge
or
int3
popf
pusha
adc
ljmp
inc
test
popa
push
imul
std
mov
fsubrl
aas
sub
stc
mov
imul
stc
sahf
lret
jne
pop
cli
pushf
add
pop
nop
out
fidivs
mov
out
addr16
xlat
jl
sarb
call
adc
lods
sbb
test
in
cmp
inc
pop
pushf
sbbb
out
in
sbb
sbb
pop
sbb
push
mov
in
add
cmp
xchg
and
cli
xor
sub
call
je
add
add
fldt
insl
or
std
pop
arpl
insl
fnstcw
cli
cmp
sarl
int3
test
gs
mov
mov
add
inc
or
clc
fs
ljmp
lds
ficoms
into
mov
or
sar
cmp
cmpsl
adc
sar
jmp
sbb
sahf
addl
xchg
push
sti
jg
fisubs
pop
in
subl
ja
pop
stc
cli
popf
mov
and
xchg
cmpsb
xchg
mov
imul
and
ss
scas
cltd
ss
or
xor
push
fstps
pop
jmp
dec
sbb
cmp
mov
outsl
push
jecxz
xchg
std
popl
pushf
mov
push
xorb
xchg
stos
insl
mov
jae
mov
jnp
adc
mov
jle
inc
insb
push
inc
sbb
jle
xchg
mov
or
lods
std
sbb
xor
scas
addl
inc
loope
repz
mov
sbb
fwait
popa
rcrl
or
push
xchg
and
jae,pn
and
fnsave
call
pop
jns
gs
ss
into
pop
xlat
sbb
push
aad
push
push
mov
dec
pop
xor
mov
arpl
out
jmp
sbb
mov
jne
imul
ss
jbe
lods
scas
mov
in
sub
ret
ss
mov
push
fistpll
xchg
adc
mov
cs
fdivr
xor
notb
pop
aaa
call
inc
mov
sbbl
sbb
loope
mov
push
popa
mov
adc
and
jno
repz
jb
adc
add
daa
dec
das
push
mov
mov
ss
xorl
pop
mov
dec
aaa
sub
inc
sbb
cmpsb
pop
out
mov
adc
xlat
leave
repz
es
adc
loopne
lret
mov
mov
sub
pop
inc
test
push
adc
adc
cltd
lcall
dec
outsl
ss
enter
or
or
inc
xchg
mov
mov
push
push
pushf
inc
mov
xchg
ljmp
cld
leave
jmp
fildl
xor
imul
jg
adc
or
dec
cwtl
pop
adc
rorl
rorb
imul
and
adc
xchg
push
mov
jmp
pop
push
shrd
and
loope
push
push
mov
leave
and
dec
cmpb
mov
mov
jb
mov
mov
stos
sub
mov
cmpsl
jle
clc
jo
jae
xchg
jge
pop
xor
js
sub
sub
int
fnstenv
aad
cmp
xchg
out
push
outsl
pop
lret
inc
pop
mov
inc
jae
mov
mov
mulb
imul
into
dec
call
data16
out
xchg
cld
push
rclb
lods
aad
xchg
cmpsl
adc
or
dec
jne
pusha
fdivrl
jb
in
pop
xchg
jns
pop
jg
jnp
pop
addr16
in
out
cmp
sbb
xchg
movsl
ret
and
std
mov
ret
or
pop
pop
mov
int
in
fidivl
and
mov
aad
pop
shrb
dec
stos
push
adc
in
mov
lods
xchg
test
adc
cmp
adc
push
mov
out
lret
aaa
push
ret
orb
addl
dec
sub
adc
mov
rorl
stc
push
into
push
and
jne
cmp
out
test
sub
jbe
pop
and
fs
clc
loopne
xchg
cmc
dec
fs
sub
and
or
out
cmpsb
lea
add
pop
add
and
xor
lds
sub
xlat
mov
and
arpl
sti
jmp
pop
bswap
adc
cmpsb
inc
test
push
insl
movsl
data16
xchg
xchg
xlat
in
movsb
into
in
pop
jnp
loopne
add
bnd
dec
pop
popa
data16
mov
cld
inc
loope
push
mov
mov
push
cmp
rcrl
cli
mov
lock
fcoms
mov
mov
aam
and
dec
mov
xchg
fdivrs
jno,pt
push
cs
xchg
addl
xchg
lods
ret
xchg
sub
pusha
or
orb
xchg
cmpsb
icebp
cmp
iret
sub
in
jp
rorb
and
push
mov
or
jp
push
mov
jo
daa
out
enter
jne
push
mov
cmc
sbb
cs
dec
and
add
mov
repz
pop
push
mov
fcmovb
ret
je
sbbb
add
push
mov
adc
stos
arpl
pusha
sub
lods
push
dec
ljmp
rcl
sub
add
inc
out
fs
jmp
xor
aam
jecxz
sub
push
mov
aam
mov
jns
dec
imull
divl
ljmp
in
out
cmp
je
xchg
xchg
push
cmp
cmpsb
mov
cmp
xchg
sbb
js
ret
scas
sbb
mov
sub
inc
push
cmp
call
adc
mov
les
out
js
shl
lock
lods
out
fiadds
ja
mov
pop
idivb
pop
aam
cmp
cmc
mov
jno
repnz
int3
pop
imull
or
js
and
lods
arpl
mov
shr
xor
call
les
enter
adc
xchg
divb
jbe
daa
fdivs
mov
pop
sbb
push
addr16
and
nop
dec
adc
add
mov
sbb
movsl
into
clc
add
jnp
mov
insb
sub
pmulhw
in
mov
es
fstl
cld
push
pusha
int
or
sbb
xor
aad
jnp
test
aas
inc
pop
mov
xor
mov
push
fcomip
mov
decl
stos
jle
les
stos
xor
outsl
testb
fisttpll
daa
icebp
pop
in
pop
add
pop
in
in
cli
pop
mov
sub
into
inc
mov
inc
jecxz
mov
rorl
sub
div
xor
pop
adc
pop
jb
mov
xor
pop
in
jb
shlb
fcoms
cli
inc
out
rcrb
test
adc
inc
or
fs
mov
lret
mov
movsl
jno
cmp
or
mov
cmpsl
stos
cmovb
or
jne
bound
mov
mov
scas
ss
mov
leave
arpl
cld
mov
call
add
push
xchg
sarl
sbb
xlat
dec
adc
std
mov
lret
outsb
hlt
jb
xor
into
push
stos
fiadds
or
pop
arpl
test
popa
les
iret
adc
cmp
ret
mov
cmp
int3
test
adc
in
loope
push
orl
cs
test
fmuls
fisttps
neg
push
inc
and
xor
pop
dec
and
and
ret
xor
mov
ret
inc
jae
jns
cmp
gs
jmp
lret
xchg
mov
jle
or
adc
lods
ret
inc
daa
mov
push
popf
rep
gs
rclb
push
dec
in
hlt
cli
and
jg
movsw
sahf
mov
lods
and
push
mov
push
bnd
js
push
jno
insb
push
jp
jecxz
lock
movsb
or
mov
mov
sbb
mov
aas
jnp
cmpsl
add
out
packuswb
pop
dec
push
xor
aad
rol
fnop
push
push
add
shrb
cli
fwait
add
ljmp
in
je
adc
sbb
cmp
mov
inc
xor
andb
jl
lods
aaa
idivb
push
shrl
lock
mov
cmpsl
sub
or
ret
ret
mov
out
aam
dec
loope
jb
jecxz
incb
lea
inc
icebp
or
xacquire
div
movsb
and
lahf
xlat
lock
in
shll
call
fbstp
xor
in
sbb
out
cmp
cmp
xchg
pop
cmp
lcall
inc
push
bound
stc
imulb
movsl
stos
lcall
xchg
xchg
aaa
or
jo
out
rorb
xor
fmul
mov
ret
stc
cmp
sub
push
jae
cmc
pop
lock
scas
xor
sbb
sub
jp
ds
and
lret
out
mov
js
out
notl
cmc
movb
mov
cmp
inc
push
xor
mov
sub
jle
pop
mov
cmpsb
jne
ja
inc
mov
inc
cmp
inc
jo
jmp
xchg
lret
andb
xlat
aam
pop
popf
cmp
arpl
out
xchg
pop
mov
xor
je
aaa
clc
jecxz
jno
xor
add
sub
pop
shr
push
or
stos
xorb
idivb
and
clc
fwait
mov
and
mov
test
mov
test
xchg
push
loope
cmp
inc
cmp
mov
cmp
jnp
jnp
sbb
xchg
push
int
andb
popf
test
movsl
jg
jg
adc
add
icebp
insl
or
pop
inc
cwtl
add
fdivr
jo
xor
bnd
addr16
shll
push
enter
xchg
out
inc
xchg
imul
cmpsb
dec
or
adc
addb
daa
push
pop
mov
lods
ljmp
mov
xlat
div
jne
adc
and
std
pop
mov
pushf
sbb
les
xor
mov
adc
scas
jmp
jle
cld
mov
fstpt
and
daa
adc
out
cltd
pop
xor
mov
test
lret
repz
sub
dec
sbb
jne
cmp
fldl
mov
cmp
or
jae
mov
xchg
xchg
mov
mov
loopne
repz
inc
lods
jge
xor
les
sbb
jbe
xor
loope
xlat
mov
es
das
cmpsl
xchg
imul
add
push
pop
incb
pop
sub
push
jnp
sbb
aam
push
push
inc
cmpsb
ljmp
dec
lods
leave
push
lret
inc
sbb
jns
push
stos
fcmove
cmp
ret
push
sahf
xor
es
push
cmp
clc
sub
xchg
jecxz
ljmp
clc
mov
pop
mov
adc
dec
aas
cmp
mov
cld
xchg
div
nop
xor
or
sbb
les
ja
push
sbb
es
mov
xchg
adc
ret
mov
repnz
fsubs
and
orb
inc
je
mov
pop
mov
lcall
std
or
mov
mov
xchg
scas
ss
sub
fstps
xor
mov
or
in
inc
adc
leave
sbb
nop
mov
jo
sub
std
cmc
cli
pushl
jp
adcb
enter
pop
int
lods
sbb
sbb
jge
cmpsl
test
dec
fidivrl
jno
sub
sahf
adc
dec
out
out
mov
rcl
mov
je
push
mov
lcall
loope
imul
out
mov
daa
push
repnz
jmp
inc
xchg
mov
stc
loopne
addb
sub
shrl
cli
iret
lock
xor
mov
out
filds
mov
iret
rorb
xchg
stc
inc
pcmpeqd
mov
iret
xor
int
mov
int
sbb
adc
or
cltd
ss
movsl
mov
cli
dec
sti
sbb
mov
pop
push
pop
or
dec
mov
xlat
sbb
xchg
mov
cli
mov
outsb
xor
cmp
test
push
std
outsb
test
les
push
cli
sbb
lahf
filds
mov
add
jns
int3
sbb
mov
mov
mov
lock
cmp
les
aad
dec
daa
jle
and
lcall
test
dec
stc
test
mov
mulb
push
jb
jno
xchg
stos
lcall
cmp
push
pop
cmp
add
jp
lcall
test
outsb
je
loop
push
in
jo
test
xchg
jno
shrb
sahf
jp
cmp
pop
push
in
jno
adc
in
cmpsl
push
mov
sbb
inc
bound
out
and
in
in
xor
cmpsb
jg
sub
xlat
xor
fistpl
fdivrl
out
mov
les
or
mov
push
jae
out
adc
cmc
mov
in
xlat
cmpsl
mov
push
fmul
ret
lcall
adc
jne
pop
stos
or
or
push
pop
jle
cwtl
jae
imul
in
push
mov
inc
cmpsl
dec
les
loop
pushf
adc
adc
jl
lea
loopne
icebp
jnp
mov
outsl
mov
jno
push
sub
or
lcall
inc
pop
push
mov
rcl
pop
repz
insb
mov
fwait
add
lock
mov
mov
cmpsb
jb
fists
ret
pop
dec
cmp
sub
int3
popa
enter
loopne
xchg
mov
ret
stos
pop
sbb
fs
mov
inc
fsubrs
mov
mov
xor
mov
or
sbb
mov
testl
fwait
cmp
jo
inc
push
sbb
daa
fldcw
add
pop
sub
outsl
ret
scas
outsl
jmp
leave
and
movb
mov
xchg
sbb
test
lret
pusha
in
subb
jmp
or
push
jnp
cmc
xorb
shll
dec
int
fcomps
mov
scas
jg
cs
ljmp
add
sti
xchg
cli
cmpsl
push
or
pop
xlat
cmp
cmc
adc
xchg
nop
in
fidivs
pop
sub
fdivrp
test
fwait
out
push
mov
fs
aaa
popa
dec
sbb
in
add
inc
sbb
stos
inc
jo
and
push
fildll
clc
insb
sahf
xor
cmp
push
or
or
addr16
jnp
mulb
or
and
inc
xchg
dec
or
push
cmp
push
xchg
std
scas
cmpsb
push
xchg
cs
and
and
roll
pop
or
pop
addl
out
outsl
add
call
pop
aam
int
movsb
int3
cltd
lods
push
cmc
std
sahf
inc
popf
pop
out
push
pop
in
loop
push
or
push
les
xchg
clc
dec
xchg
sbb
hlt
mov
or
stos
and
loop
in
xlat
fwait
jl
jbe
add
lret
mov
sbb
dec
sbb
xor
sub
cmp
inc
fsts
jno
sbb
sub
int
daa
pop
add
push
dec
jg
xchg
in
mov
and
pop
sbb
inc
ds
pop
popf
mov
shrl
and
xorl
xchg
jbe
imul
lods
pop
mov
inc
inc
inc
jp
lcall
pop
imulb
jg
dec
aad
mov
aaa
mov
inc
pop
mov
shll
mov
fldenv
mov
jg
stc
lea
pop
mov
jmp
fwait
test
gs
cmp
mov
or
or
cmpsl
sbb
notb
outsl
imul
ds
out
cmpsl
push
cltd
stc
mov
sbb
sub
arpl
pop
or
mov
xchg
xchg
shrl
daa
xchg
in
int3
inc
sbb
icebp
jno
pop
push
data16
pop
push
iret
outsl
ljmp
push
and
mov
add
or
mov
insb
jmp
mov
pop
xor
add
test
cmp
inc
push
das
scas
jns
and
push
xabort
je
add
push
jmp
sbb
cmc
jl
mov
test
std
test
or
jle
cs
cld
xor
daa
mov
lahf
sub
inc
sub
mov
push
testl
sub
xlat
pop
jno
shr
xchg
mov
scas
sbb
fildl
push
daa
mov
stos
movsl
arpl
sbb
jmp
data16
xor
lret
cmpsb
aad
jecxz
imul
push
call
jo
subb
ljmp
or
ljmp
dec
cmpsl
lds
push
cli
adc
push
pop
into
movsb
or
movsb
add
cmp
dec
das
jns
sbb
jae
call
sbb
pop
js
or
cmp
jge
inc
filds
sbbb
shrb
pop
jo
add
cmp
sbb
or
xchg
cmp
daa
repnz
clc
jp
stos
imul
mov
sbb
test
push
sbb
push
movsl
dec
inc
adc
loop
in
push
adc
jmp
mov
imul
mov
lcall
sbb
call
mov
dec
jb
sbb
into
jmp
push
enter
cmp
aaa
je
xor
mov
mov
scas
and
dec
out
adc
fists
xchg
mov
jg
or
out
pop
inc
insb
in
sub
cli
out
sbb
insl
jne
push
push
mov
cmp
jg
inc
lcall
xchg
ret
adc
cmp
insl
pop
xchg
out
cmp
ret
aaa
mov
cwtl
int3
jo
mov
mov
mov
jg
adc
rep
repz
jge
mov
or
push
movsl
sbb
xor
jmp
pop
shl
mov
push
mov
or
sub
inc
call
jae
mov
xchg
mov
mov
aaa
inc
dec
dec
mov
sub
mov
add
rorl
lods
xor
sti
cmp
outsb
push
dec
daa
mov
or
pop
jecxz
lahf
jns
pop
fdiv
or
aam
in
xor
mov
and
shrb
mov
insl
mov
push
jbe
nop
repnz
out
mov
mov
into
jle
lahf
pop
lods
cmc
mov
mov
mov
nop
cld
jnp
mov
decl
int3
shrb
jmp
adc
clc
jo
xchg
add
aaa
sub
out
and
pop
mov
push
push
lods
push
mov
cmp
es
call
iret
cmc
xchg
xor
sub
rolb
inc
xchg
add
nop
add
push
adc
dec
lcall
fnsave
cmp
popa
cli
sbb
fdivrl
and
bound
inc
or
pop
add
sbb
in
add
stc
out
imul
lods
pop
adc
outsb
decl
xor
adc
es
enter
xchg
rcrb
loop
push
orl
fldt
pop
push
repnz
shlb
cld
xchg
mov
idiv
sub
dec
mov
ljmp
sahf
xchg
test
cmp
mov
inc
mov
dec
cmp
int
push
outsl
dec
popf
jae
fsubrs
stos
inc
push
mov
add
int3
clc
popf
xchg
jl
repz
loop
in
daa
je
sti
int3
jecxz
cwtl
adc
iret
lods
jne
iret
pusha
and
in
jp
push
fsubr
dec
jo
mov
jo
lds
negb
mov
or
pushl
add
popa
dec
shl
test
sbb
dec
ja
daa
xchg
mov
mov
insl
xchg
dec
fistpl
inc
inc
test
xchg
shlb
lret
jbe
test
pushf
lods
push
pusha
mov
pop
aam
out
mov
repz
mov
fcmovnb
cmp
and
jne
or
iret
call
dec
shrb
inc
sbb
test
add
cmp
mov
mov
pop
and
push
mov
repnz
jns
jle
jge
mov
cmp
fmull
pop
xchg
lcall
cmp
cmpsl
push
idiv
iret
sbb
fwait
jg
cwtl
popf
jg
sbb
pop
scas
jns
mov
test
jge
adc
mov
loope
cld
lcall
pop
sub
push
inc
mov
adc
add
incl
add
hlt
xchg
sub
sub
jg
or
loope
iret
or
out
lret
jle
cld
cvtps2pi
mov
xor
push
adc
push
xchg
add
clc
jmp
inc
outsl
cmc
pop
test
aaa
mov
pop
test
lods
push
jp
jge
fimuls
cmpsl
mov
sub
stc
sub
lcall
lea
add
std
cmp
addr16
outsl
pop
movlps
jns
fnstcw
mov
mov
mov
jo
inc
in
add
int3
mov
or
add
push
sti
gs
out
adc
and
adc
lea
lods
cwtl
subb
outsb
push
shrb
inc
xchg
mov
pop
icebp
adc
sub
add
enter
xlat
mov
jne
fildl
bound
iret
loope
subb
sbb
mov
pop
insl
cld
les
repnz
mov
lret
pop
push
fwait
sbb
sub
or
inc
fldcw
out
js
mov
push
negl
dec
xchg
add
jno
in
sbb
es
push
cli
lock
in
cmp
popl
add
mov
xchg
push
ja
xor
mov
dec
push
fsubl
notl
sbb
push
ret
out
shll
add
fnstenv
fwait
cmp
out
loopne
fsubrl
mov
scas
lods
cmp
push
xor
sbb
xor
pushf
jae
sahf
push
pusha
bound
mov
lsl
addr16
cmp
popf
and
push
mov
lcall
adc
aad
ret
movsl
aaa
ds
adc
push
lea
sbb
inc
lock
rolb
jge
push
push
mov
xor
push
inc
ja
xchg
mov
ljmp
mov
orl
push
adc
gs
lret
insb
out
jo
jb
dec
orl
addb
cmp
and
add
lret
push
push
xlat
ljmp
xor
add
ds
push
hlt
sub
aas
jecxz
jno
sbb
cmpb
into
inc
inc
sub
push
mov
inc
mov
inc
cmc
outsl
cltd
mov
arpl
mov
xor
xor
jno
jp
nop
fstps
jge
pushf
rolb
clc
jne
mov
add
mov
cltd
mov
push
add
inc
daa
inc
inc
cli
mov
call
int3
pop
stc
sub
aad
push
addl
pusha
mov
adc
out
jmp
xchg
lods
and
sbb
imul
or
or
imul
out
imul
ret
sbb
es
out
xchg
xor
aad
dec
call
xorl
jae
pop
mov
mov
test
test
xchg
stc
enter
and
xor
fdivl
push
faddl
xchg
or
in
int3
sub
out
repz
gs
push
add
xchg
or
cli
lods
xchg
in
lods
jge
xor
ljmp
repnz
lods
push
sub
scas
jo
loopne
mov
xchg
ret
test
ljmp
lock
xor
loope
movsl
push
xor
push
aad
mov
inc
ficompl
cmp
cmp
mov
out
lret
add
mov
mov
in
psubusb
xchg
leave
pop
stos
mov
jae
pop
orl
jge
jl
inc
and
or
push
xchg
fcmovnu
pop
fadds
fdivrl
mov
xchg
dec
xlat
fiadds
adc
sub
inc
push
mov
clc
stos
dec
leave
fcmovne
loopne
sub
pop
and
mov
lret
fmull
ja
mov
pop
push
jb
xchg
out
push
ffreep
lahf
icebp
xor
mov
adc
test
stc
pop
loopne
sbb
pop
mov
push
ret
pop
mov
nop
sub
mov
fs
adc
mov
dec
push
mov
jns
ficoms
pop
mov
loopne
insl
pop
cltd
pop
idivb
lcall
daa
jge
xor
add
insb
pop
jl
pop
loope
inc
fs
sbb
inc
es
dec
insb
adc
sbb
jle
jnp
xchg
mov
fxam
xor
es
sbb
add
jnp
sbbl
jecxz
fdivl
push
shl
insl
js
cmpsl
sub
cmp
aad
sarl
arpl
into
into
sub
lods
push
pop
in
in
je
mov
outsl
aam
ja
in
aas
or
popa
mov
mov
xchg
addr16
push
push
cld
arpl
icebp
or
test
lahf
subl
nop
ficoms
cmpsb
lcall
das
rol
push
push
add
pop
stos
jmp
pop
xchg
jmp
lods
shll
sbb
stos
addr16
sub
data16
mov
xor
insb
inc
xchg
test
frstor
sbb
loop
jnp
je
popa
xor
fldenv
jnp
cmp
adc
popa
and
cmpb
cmpps
add
mov
mov
lods
cmpsl
out
pop
loopw
fcomps
ja
ret
les
ret
xchg
scas
ja
mov
push
xchg
mov
lret
add
jmp
add
pop
call
sub
dec
dec
pop
mov
and
mov
xchg
ret
hlt
dec
ret
mov
in
repnz
sub
dec
sbb
xor
imul
cmc
addb
out
jns
sahf
stc
fbstp
sbb
adc
into
in
ljmp
jg
sub
inc
and
lock
dec
ljmp
stc
pop
ss
bound
push
mov
pushf
mov
mov
cs
or
add
fisttpl
and
dec
in
test
sti
iret
sbb
lods
fdivrl
fiadds
inc
lret
sbb
add
shll
or
test
adc
sub
outsl
inc
dec
test
pop
or
fstpl
xor
adc
xchg
mov
loopne
nop
mov
loopne
fisttps
cmp
hlt
fisttpl
mov
orb
ds
mov
arpl
xorb
jnp
test
mov
fs
fistpll
add
xor
orl
add
js
xchg
or
xchg
jnp
sti
sbb
bswap
pop
das
ret
test
inc
into
inc
addr16
cltd
sub
les
or
inc
test
xchg
outsl
lock
sub
or
jge
sbb
mov
aas
jg
call
jae
mov
jo
sub
in
or
cmpsl
test
mov
pop
leave
in
push
popl
sbbl
mov
loopne
sbb
sete
ss
out
imul
stos
bound
out
aad
push
xchg
mov
in
adc
xor
mov
sub
mov
dec
sahf
ror
mov
jae
add
movsb
dec
leave
mov
outsb
jno
mov
insl
xchg
test
mov
ret
fcompl
or
add
sti
push
jmp
imul
lods
xchg
add
mov
xor
adc
dec
sbb
xchg
xor
mov
jmp
inc
jb
mov
push
mov
xor
add
sub
and
jle
jmp
xchg
adc
ret
fwait
sbb
dec
mov
mov
sub
push
daa
rorl
insl
out
popf
insb
cmc
xor
sbb
mov
pop
add
sbb
and
fstps
pop
mov
ficoml
test
ss
sub
inc
push
mov
push
dec
stos
dec
mov
cltd
imul
sbb
mov
push
sbbl
fdivl
jle
adc
test
fmul
cmp
fildll
mov
cli
lcall
cli
and
or
outsl
inc
sub
pushf
push
shll
out
dec
xor
mov
mov
xlat
push
lods
add
push
push
adc
leave
cmp
cmp
insl
les
and
xchg
and
insl
and
mov
cltd
pop
pushl
scas
fisttpl
iret
dec
adc
cmp
mov
pop
sti
push
ja
ffree
in
jp
call
lret
mov
mov
add
pop
jb
push
hlt
xor
ret
sub
leave
jle
into
repnz
cmp
shl
xchg
dec
sbb
out
lcall
lahf
jle
fisttpll
ret
mov
mov
push
push
add
out
add
addr16
jnp
imulb
dec
test
das
inc
inc
xchg
movsl
lock
insb
jb
cmovne
xor
push
sub
add
addr16
push
lock
sub
mov
add
fwait
cmp
std
cmp
sbb
inc
aas
fdivrl
out
hlt
int
xor
jp
push
dec
mov
add
and
and
mov
shl
repnz
xchg
jbe
mov
mov
push
test
aas
push
inc
inc
cld
mov
movsl
dec
out
push
je
pop
sbb
es
nop
imul
sub
pop
adc
mov
jg
outsb
dec
gs
adc
shll
cs
fsubrl
pop
lods
aaa
jmp
adc
cwtl
dec
cmpsl
lahf
dec
push
mov
pop
push
mov
push
sub
jb
inc
xchg
jp
popf
add
loopne
xor
cmp
pop
sub
push
adc
cmpsb
sub
leave
les
sbb
in
xchg
and
xchg
mov
xchg
out
pop
mov
push
iret
insb
fcmovnu
jnp
fstps
and
arpl
or
cmc
xchg
iret
push
aad
iretw
mov
into
adc
and
add
shll
test
insb
mov
iret
sub
sbb
pop
repz
fsub
jne
shll
imul
pushf
out
ja
jo
out
in
lret
clc
je
sbb
mov
mov
xor
cmc
popf
or
sub
sub
pop
lret
xchg
pop
adc
and
cmp
inc
jle
mov
adc
arpl
shll
sahf
push
mov
xchg
and
lret
movsb
or
mov
mov
loopne
int3
imul
lahf
imul
repnz
and
mov
ret
xchg
lahf
insb
shlb
push
mov
es
fwait
cmp
in
jmp
adc
ficomps
clc
mov
cmpl
mov
sbb
gs
mov
mov
cmp
js
es
push
call
insl
push
inc
jp
jp
jmp
or
sbb
in
push
mov
jmp
cltd
hlt
inc
int3
mov
sarb
xchg
cmpsb
stos
and
xchg
jle
in
dec
add
mov
and
fwait
mov
shll
xchg
lock
mov
xchg
je
cmp
test
mov
pop
aad
lcall
adc
cmp
push
insb
jb
andl
push
test
and
xchg
push
xchg
iret
fiaddl
xchg
mov
mov
imul
int3
repz
cmp
adc
les
cmp
xlat
aas
dec
mov
divl
cli
rcll
sbb
outsb
sub
aas
aad
lock
aaa
mov
pusha
shrb
inc
xchg
pop
stc
fisubs
dec
ljmp
out
into
out
or
leave
stos
add
rorl
jge
neg
add
punpckhdq
test
and
rclb
adc
pop
push
in
testl
and
add
test
cmp
push
sub
adc
jl
mov
xor
lahf
add
jbe
jno
pop
cli
stos
mov
mov
xor
xor
in
pop
scas
fwait
rcrl
out
dec
cmp
push
das
lock
sub
pop
mov
dec
cltd
cmp
push
mov
cli
xor
and
insl
into
pop
movsb
inc
in
neg
aas
sarb
lods
cwtl
stos
push
inc
pusha
popf
fstpl
int
mov
inc
inc
cli
pop
adc
xlat
fwait
push
popf
addr16
xor
mov
rcrl
pop
xchg
pop
stc
mov
sbb
jo
jb
lcall
add
movl
daa
repnz
lds
add
stos
adc
cwtl
dec
imull
push
or
sbb
imul
cmp
cmp
mov
push
dec
adc
inc
push
outsb
xchg
or
int
mov
pop
mov
out
mov
adc
lret
lea
cmp
popf
pop
insb
dec
jo
inc
cld
mov
fnsave
cmc
dec
das
pusha
pushf
adcl
inc
mov
out
dec
push
aas
je
out
xor
jno
js
in
jmp
mov
push
lret
xor
xchg
mov
ret
cmp
xlat
or
aad
and
fmulp
mov
out
or
xchg
mov
scas
fisubs
outsb
jmp
push
adc
add
out
in
loope
sbb
or
lcall
inc
es
cmc
push
std
mov
movsl
push
fs
jno
mov
and
sbb
cmpsb
mov
lods
jne
dec
outsl
mov
iret
mov
fadd
jns
addr16
scas
out
mov
push
sbb
push
lods
imul
sti
sub
je
movsl
adc
push
notb
int3
clc
mov
stos
jecxz
inc
mov
push
mov
xlat
or
jno
out
dec
aad
aaa
jle
out
cmp
pop
lret
pop
jg
sub
imul
aam
and
adcb
pop
test
jmp
cmpsb
jg
mov
inc
xchg
push
movsl
loop
push
or
pop
movsb
movsb
jmp
dec
stos
loope
pop
jg
mov
xor
mov
mov
and
inc
sbb
xchg
in
adc
pop
outsl
movl
fcomip
pop
jae
cs
jle
test
into
outsb
cmpsl
adc
into
fidivs
pop
xor
adc
dec
fwait
and
sub
pop
mov
add
sub
pop
hlt
test
out
push
adc
sbbl
mov
rclb
sub
clc
xchg
mov
daa
js
sti
shlb
cmp
mov
test
push
inc
sbb
hlt
add
pop
fidivl
ret
in
inc
push
and
xchg
lret
les
add
mov
dec
jne
add
lods
push
pop
out
mov
lock
and
addr16
inc
push
add
aaa
and
cmpsb
nop
sbb
dec
pop
dec
movsb
repz
mov
pop
push
xchg
imul
clc
data16
mov
pop
add
sarl
popf
js,pt
adc
bound
ss
push
jmp
fisttpl
lret
cmp
jl
and
cmp
adc
data16
xor
xchg
xchg
call
je
ss
cmp
insb
das
out
int
fiadds
das
imul
adc
int3
lret
fdivrs
xlat
adc
movsb
jne
xor
aad
mov
sarb
push
jecxz
xchg
fwait
xchg
jmp
ret
dec
cmp
imul
insb
and
cwtl
lcall
sbb
in
mov
insl
dec
aaa
push
pcmpeqb
subb
fmul
adc
xor
pop
mov
fbld
push
xchg
sbbl
scas
add
test
xor
add
push
jb
xchg
mov
add
xchg
bound
mov
je
xor
ja
push
fisubrs
push
aaa
add
dec
cs
aas
sbb
ret
imul
push
cwtl
sub
int3
mov
lods
jle
js
pop
orb
bswap
adc
fnstcw
lods
xchg
sarl
bound
ljmp
cld
ret
and
flds
dec
pop
hlt
fnstenv
mov
cmp
pushf
test
imul
int3
add
sub
sub
add
loope
decb
xchg
xchg
mov
fisubs
fdivs
neg
or
add
mov
rcrl
je
dec
xchg
mov
sub
mov
push
sub
mov
xor
cli
cld
popa
xchg
sub
cld
andb
or
test
ja
iret
jo
sbb
push
sbb
lods
push
sarb
insb
aaa
in
shrl
sub
or
inc
cmp
pop
xchg
stos
lea
aaa
pop
pusha
lds
xchg
addl
sub
pop
std
sbb
adcb
lcall
call
stc
popa
and
xchg
xchg
xlat
xchg
es
pop
jo
pop
ja
shrl
sahf
ljmp
mov
shrb
dec
xor
push
jne
add
shl
xchg
pop
in
mov
fbstp
add
sti
and
dec
sbb
cmp
jge
bound
imulb
maxps
fisttps
sbb
sub
mov
push
jb
adc
pop
scas
inc
push
adc
cs
shlb
outsl
call
popf
add
cltd
fcmovnb
pop
mov
pop
les
xchg
push
cld
push
orb
movsl
xchg
into
sarb
addr16
popa
stc
jl
xchg
xor
mov
test
mov
shll
xor
dec
pop
or
stos
jno
ret
out
js
push
or
cmp
pop
outsb
push
jns
das
sti
rorb
xchg
push
push
cmpsb
mov
aaa
xor
pop
inc
xchg
sbb
xchg
aas
loop
add
pop
scas
inc
into
imul
insb
addr16
mov
mov
nop
push
jge
mov
mov
adc
mov
sbbl
sbb
lret
or
push
cmp
aad
cmp
mov
insl
xchg
testb
mov
jns
and
mov
and
push
jae
mov
xorl
fistps
dec
mov
clc
dec
pop
aas
cs
das
mov
call
stos
lret
mov
pminsw
pop
jb
aad
adc
and
ret
sbb
push
jnp
or
stos
out
jbe
jae
xchg
loopne
icebp
lret
mov
daa
movsb
sub
or
out
lret
jmp
movsb
jp
add
cmp
fimull
and
out
out
mov
cmpsb
inc
or
lods
mov
cmc
pop
or
add
xor
and
push
fs
dec
rorl
nop
nop
lret
mov
iret
or
rcrb
xor
sub
iret
sbb
xor
xchg
dec
sbb
jo
idivl
hlt
adcb
jno
pusha
pop
inc
cmp
ss
fmull
out
add
ss
fiadds
push
push
xlat
fs
icebp
in
or
push
test
lods
mov
sbb
stos
clc
arpl
cmpsl
out
xchg
aaa
xor
testb
xchg
das
add
adc
jl
mov
outsl
dec
ret
dec
cmpsl
mov
into
ret
icebp
sbb
mov
pusha
jo,pn
not
lahf
sbb
les
movsl
outsb
xchg
pop
mov
lods
sub
fnstcw
sub
jmp
sbb
arpl
pusha
push
clc
dec
and
jo
cwtl
adc
fistps
fs
sub
and
push
inc
insl
pop
push
sub
mov
addr16
adc
or
orb
pop
mov
xor
in
push
lret
in
dec
xor
cltd
fstps
loopne
mov
xlat
pushf
dec
xchg
jne
sub
ret
add
mov
mov
inc
xchg
xorb
cs
fidivrl
mov
cld
js
inc
sub
ljmp
mov
stos
mov
jne
push
push
jo
ds
pop
add
pop
cmp
rorb
or
push
mov
jnp
out
sbb
cmp
outsl
jecxz
mov
mov
push
movsl
lret
push
lods
std
pop
js
cmp
flds
jmp
jnp
pop
test
push
jge
pop
dec
testl
push
sub
xor
popf
sbb
adc
insb
mov
jbe
mov
sets
shlb
push
xchg
ffree
aas
cmp
and
popa
and
outsb
adc
ja
loope
cmpl
and
jbe
pusha
add
shll
xchg
movsl
mov
or
sub
jae
sbbl
cmc
pop
out
in
mov
jbe
pop
mov
insb
fildll
andb
cmpsb
xchg
in
sbb
inc
pop
adc
add
mov
leave
pop
push
outsb
push
jle
pop
pop
sbb
dec
or
push
in
mov
jo
or
insb
mov
outsb
mov
subl
fisubl
jg
test
push
sarb
out
out
or
mov
push
popf
insl
jo
int3
dec
inc
mov
pop
mov
cmpsb
icebp
cmp
aad
inc
add
sub
sub
mov
popf
popa
loopne
sbbl
rolb
mov
imul
pop
lret
pop
ljmp
js
xor
mov
mov
mov
cmp
xor
sarl
xchg
cmp
cwtl
es
stos
inc
jnp
daa
adc
inc
psrad
lock
mov
mov
enter
inc
fists
cmpsb
in
jmp
dec
mov
iret
in
xor
hlt
stc
sbb
xor
andb
cmpsl
jecxz
test
mov
or
fnstenv
sbb
mov
xor
dec
add
or
daa
icebp
hlt
gs
pop
or
lea
xor
push
cmp
adc
lret
jne
add
fidivs
enter
pop
mov
lds
in
jns
cmp
push
outsl
cwtl
ss
push
cltd
adc
cmpsl
jecxz
inc
add
std
inc
not
pop
pop
cs
dec
outsl
dec
jg
aam
fcomp
repnz
adc
bound
mov
add
aas
pop
test
stc
gs
cmp
stc
sbb
mov
jmp
inc
mov
inc
gs
pop
xor
dec
lods
mov
jo
xor
sarl
and
movsb
xchg
lock
push
fdivl
push
inc
icebp
outsl
outsb
fs
rclb
jbe
jle
xor
inc
out
sbb
fisubs
sub
xchg
pop
cmp
xchg
jle
sarb
inc
sti
adc
dec
stos
and
push
repnz
mov
sti
mov
sti
in
cmp
mov
movsl
push
jmp
xor
lret
cmp
jbe
scas
jmp
sub
andb
cmpsb
jle
push
pop
push
fxtract
sub
fsubrl
pop
add
xor
in
ret
add
mov
sarl
vmovd
sub
jge
sub
sbb
psrad
les
int
mov
testl
dec
cmp
xchg
mov
add
mov
ficompl
mov
nop
pop
cmp
dec
ds
inc
and
mov
mov
lods
insl
sub
mov
adc
shrb
lods
adc
aaa
sahf
or
pop
fimuls
fdivrs
pop
cld
dec
push
xor
adc
adc
mov
popf
sbb
pop
stc
push
shlb
imul
pop
dec
fidivrs
dec
jl
mov
and
pop
out
mov
scas
jae
jne
arpl
sbb
negl
dec
clc
call
icebp
insb
mov
sbb
decb
daa
testl
dec
or
cmp
mov
ret
xor
movl
sahf
or
out
rcrb
shl
mov
and
pusha
xchg
adc
mov
push
dec
or
xor
das
xor
xchg
fildll
sbb
lock
push
incb
pop
add
mov
xchg
daa
or
sbbl
out
sub
aaa
adc
xchg
ja
jmp
imull
fnstcw
inc
sbb
test
nop
lahf
es
ret
ljmp
inc
cli
ss
add
mov
fwait
cmp
out
add
mov
jge
push
daa
xor
xorb
mov
ljmp
test
dec
jp
xchg
shlb
fucomip
inc
inc
mov
in
lods
clc
pusha
cmp
mov
add
adc
testb
bound
jl
xlat
jne
xlat
jno
and
imul
int
add
xor
jmp
cmp
pop
lock
rcrl
out
adc
and
mov
inc
fnsave
add
dec
adc
loopne
xchg
insl
int3
rcrb
dec
je
push
inc
clc
imul
lcall
test
in
sub
popf
xchg
cmpsb
arpl
testl
mov
pop
stos
test
jb
pop
mov
aad
mov
inc
jne
ficomps
adc
or
leave
out
cmp
lret
lds
out
xchg
push
xchg
xchg
aam
mov
add
inc
xchg
mov
lods
mov
mov
cmpsl
sbb
sbb
jne
js
mov
lock
xor
loop
add
or
aad
sbb
in
push
cmp
loope
repnz
ret
xchg
xchg
mov
mov
pushf
pop
sar
sub
inc
clc
aad
jmp
clc
xchg
or
xchg
inc
xchg
mov
and
cld
jmp
es
pop
pop
lds
push
mov
enter
ljmp
xchg
daa
mov
loopne
xchg
stos
les
sbbb
xor
add
mov
in
xchg
lret
fsubs
push
pop
cmp
inc
or
popf
mov
xchg
aaa
mov
js
pop
ss
xchg
jge
cli
hlt
scas
ficompl
pop
xchg
stos
je
in
cltd
or
mov
add
add
mov
mov
rcrl
adcl
icebp
and
sub
jecxz
fiadds
mov
in
loop
fisubrs
mov
scas
roll
orl
xchg
cmp
sub
xor
orl
xchg
mov
adc
sti
js
imul
sbbb
outsl
outsb
jno
int
jg
std
scas
push
jae
cltd
out
filds
xchg
dec
mov
sbb
pop
mov
pop
cmpsl
inc
test
push
orb
imull
scas
cmp
js
fs
ja
add
add
pop
out
cmp
cmpsl
xor
pop
jecxz
cld
push
outsb
js
xor
shl
fcompl
test
add
and
mov
cmpsb
hlt
pop
or
popa
mov
lods
fnstsw
push
cld
ret
mov
sbb
fmull
sub
jl
movsl
mov
push
in
and
jmp
cmc
dec
pop
test
dec
sahf
pop
sbb
or
lcall
lahf
push
js
mov
xchg
ret
or
popf
add
outsl
imul
fcomps
adc
sbb
mov
daa
mov
xchg
iret
sbb
pop
mov
xchg
inc
mov
cmp
imul
mov
or
aad
test
scas
fwait
bound
and
insb
mov
fdiv
sbb
dec
dec
push
loop
insl
popf
and
sub
xchg
sub
sbb
dec
ficoms
dec
adcl
adc
into
pop
stos
mov
xchg
loope
add
pop
sbb
in
aaa
lock
ficoms
movsl
inc
xchg
sbb
jno
mov
xchg
pushf
ds
fidivs
inc
shr
xor
or
in
adc
outsl
out
mov
out
in
fildl
inc
and
push
push
sbb
aas
mov
cli
out
fcomps
leave
inc
push
in
pushf
mov
push
repz
sbb
cli
lret
test
adc
push
dec
xor
repnz
jne
add
or
push
adc
cmp
dec
imul
pop
sub
scas
push
xchg
sarl
and
sarb
and
lock
lret
mov
sbb
dec
or
mov
aaa
je
xchg
les
adc
outsb
sbb
out
xchg
mov
fstpl
pop
push
fcmovnu
cmp
rorl
inc
add
mov
adc
mov
jmp
add
test
adc
test
push
cmp
jns
pop
in
out
lds
pop
adc
ret
pop
rcl
sub
push
shll
dec
into
outsl
daa
xchg
or
xchg
pop
jmp
xor
mov
sbb
in
sbb
aas
in
push
out
xchg
mov
jg
shlb
jb
stos
or
ds
out
inc
xor
outsb
enter
lods
xor
adc
dec
ret
or
sbb
mov
and
out
adcl
push
je
addr16
ljmp
xchg
jle
lret
push
inc
loope
jg
nop
adc
fcomi
iret
aam
cmpsl
xor
and
mov
add
add
data16
scas
or
pop
test
je
inc
xchg
test
dec
cltd
dec
or
xor
fnstenv
fmuls
jae
add
pop
ljmp
inc
dec
inc
mov
imul
mov
inc
mov
adc
sub
mov
add
arpl
iret
jmp
fsubs
push
mov
cmp
xchg
dec
aaa
push
test
mov
xor
xor
in
aam
rol
sub
stos
pushf
xchg
mov
jge
mov
pop
js
mov
in
test
jl
mov
dec
jne
inc
xlat
push
sub
lcall
adc
out
xor
mov
xor
or
cmp
dec
cmpsl
pushl
mov
bound
mov
and
jg
add
daa
xchg
xlat
inc
aam
mov
fcomps
orb
pushf
fists
push
outsl
mov
mov
pushf
pop
loope
lahf
add
pusha
aas
add
mov
and
out
movsl
jmp
mov
rolb
nop
xor
cmp
and
mov
xchg
mov
lock
cltd
mov
fstps
inc
mov
test
cli
repnz
sub
jo
rcll
cmp
fwait
mov
cmp
shlb
test
sbb
mov
scas
or
call
sub
dec
sub
sbb
loop
fs
loopne
dec
adc
pop
stmxcsr
mov
or
pop
mov
in
aas
insb
adc
addr16
je
add
lret
repz
leave
or
pop
mov
adc
adc
clc
pop
stos
sbb
add
out
mov
mov
insl
cmp
add
push
imul
out
int
xor
pop
pop
idivb
push
mov
aad
int3
push
lcall
mov
fstpl
push
and
push
data16
sbb
adc
pop
lret
out
inc
add
fs
mov
out
inc
add
sbb
repz
scas
test
enter
xchg
imul
xor
mov
testb
pop
or
mov
lock
mov
ljmp
es
in
aad
loop
cmp
pop
repnz
testb
hlt
mov
push
decb
int3
inc
inc
cli
fwait
shlb
ds
mov
and
popf
shl
andl
ror
jae
xchg
and
pop
and
insb
loop
jp
call
push
inc
jl
xlat
dec
mov
xorl
cmp
testb
ficoml
out
sbb
lret
out
imul
inc
jg
test
pop
mov
jo
cmp
and
aad
add
movsb
subb
jmp
dec
push
jg
cmp
enter
sub
bound
push
xor
xchg
pop
adc
lds
das
push
daa
xchg
pop
mov
roll
mov
stc
mov
popa
mov
adc
jns
jbe
imul
mov
cmp
icebp
inc
cmpsl
dec
xchg
adc
roll
jnp
in
ja
enter
and
add
arpl
jb
rolb
pop
addr16
mov
sbb
shll
popf
adc
iret
fldt
push
in
push
jecxz
sar
pop
xchg
sub
cmpsl
lcall
arpl
loopne
mov
adcl
das
mov
cmp
cmp
rorb
inc
or
push
rorb
push
adc
out
jp
test
sahf
mov
popa
add
stc
lods
cmc
leave
incl
or
xchg
loop
xor
rcll
rorl
nop
dec
test
mov
lods
sub
add
pop
sub
push
fstl
cs
jbe
push
sar
jge
ss
mov
sub
mov
or
pop
xchg
loop
push
cwtl
pop
and
clc
pop
cmp
ds
stos
call
pop
popa
shlb
inc
enter
or
jge
ret
popa
inc
fcom
xchg
push
outsl
dec
fcoms
push
push
sub
mov
lods
xchg
ja
fnstenv
imul
lods
xor
jl
fs
rol
mov
jo
mov
mov
xor
pop
out
in
inc
adc
cmp
dec
mov
mov
mov
jae
fdivl
loop
fnsave
stos
bound
repz
aaa
incl
push
push
imul
loopne
jp
cmp
das
push
mov
ret
in
and
pop
cmpsl
insb
daa
test
int3
pop
loope
mov
lret
cltd
dec
jae
xor
and
inc
jge
out
xor
test
jp
sub
mov
cmc
add
jo
leave
in
cmp
enter
xor
fwait
lods
fs
xor
add
mov
outsl
icebp
xchg
pop
push
mov
sti
sarl
xchg
vmwrite
cmovle
sbbb
mov
cld
and
sub
xchg
outsb
cmp
loopne
fldenv
pop
inc
sub
sarb
add
aaa
rol
fstl
ss
stos
jmp
das
inc
pop
popf
mov
sbb
lock
jns
mov
and
rorl
mov
dec
loope
jl
mov
inc
nop
sbb
jp
fmull
arpl
ror
shlb
call
frstor
out
mov
adc
sub
mov
lock
cltd
in
lods
leave
inc
mov
dec
add
xor
iret
pop
int
lahf
adc
add
lea
jns
inc
push
pop
int3
adc
push
cmpsl
pop
rcrl
andl
dec
add
pusha
sub
mov
idivl
mov
jge
xchg
add
push
jo
lds
mov
xor
cltd
int
mov
fsubrl
hlt
sti
mov
imul
jmp
add
push
stc
inc
test
lret
inc
sub
dec
xor
sub
ljmp
jecxz
aas
cltd
negb
out
ret
mov
in
pop
clc
add
mov
jp
ljmp
ljmp
xchg
sbb
inc
faddl
sbb
lock
jge
ret
stos
cmp
cmpsb
adc
sti
cmc
inc
push
call
jb
sub
xchg
mov
cmp
sbb
aad
jmp
push
push
lahf
bound
mov
repnz
out
call
mov
xchg
or
jl
fldcw
lock
mov
inc
sbbb
cmp
ss
mov
cld
out
push
stos
out
testl
data16
aaa
or
enter
pop
mov
and
push
or
fdivrl
cmp
add
loope
sahf
jno
popa
clc
inc
mov
dec
mov
mov
jo
fidivl
pop
mov
repz
sti
xchg
jbe
sub
or
andb
xchg
or
cmc
gs
adc
test
imul
pop
push
dec
nop
jl
add
icebp
lds
leave
addr16
xchg
jmp
sbb
insb
xchg
xor
xlat
fndisi(8087
sub
inc
fwait
mov
inc
inc
aas
jmp
sbb
mov
and
ret
nop
jo
mov
sbb
xor
pop
into
pop
rorl
sbb
pop
add
jo
or
inc
insl
jmp
lods
insl
sbb
mov
notb
push
mov
add
cmp
jno
cmc
jns
fdivs
in
jecxz
cmp
imul
xor
fnsave
push
jne
and
mov
aad
cs
cld
ret
jb
or
rclb
or
pop
test
xor
lret
sub
mov
jns
cmp
nop
cmp
mov
xchg
push
outsb
fadds
mov
in
lea
ret
cmpsb
adc
mov
cltd
out
stc
adc
push
xor
jp
cli
sub
shll
xchg
adc
sub
and
cmp
mov
or
insl
lahf
xchg
xor
jo
cwtl
jle
shrl
pushf
xor
xchg
pop
call
mov
lcall
push
xor
pop
push
into
stc
std
jns
sbb
das
inc
sub
xchg
aas
xchg
lcall
into
outsl
bound
jb
push
test
cmp
loop
mov
dec
xchg
jne
jnp
cmp
jle
call
les
or
test
jmp
mov
arpl
jle
iret
dec
ljmp
insb
dec
sub
out
inc
or
push
cmp
inc
mov
dec
fwait
leave
and
rcl
or
pop
xchg
push
sbb
bound
mov
popf
push
aaa
out
or
aam
int3
out
enter
cmp
jge
test
cmp
and
push
jb
sub
pop
sbb
mov
stos
mov
icebp
ja
dec
dec
cwtl
notb
or
mov
jg
xor
pop
jb
stos
mov
gs
pop
and
fidivrl
xchg
inc
mov
fwait
xor
push
add
rclb
jg
into
iret
xchg
mov
imul
fldenv
decl
aam
adc
or
mov
sub
cmp
iret
ret
mov
or
cmp
mov
std
test
jo
in
outsb
jno
jbe
cmp
push
or
stos
incl
test
xor
clc
cmpsb
stos
sbb
push
out
push
mov
cli
or
mov
xor
jnp
fs
test
stc
aas
add
pop
js
out
stos
adc
sbb
sub
iret
hlt
xchg
aaa
sub
mov
sub
mov
push
sbb
imul
sbb
dec
out
inc
loop
and
inc
cmpsl
leave
js
fiadds
jge
dec
or
or
fimuls
imul
sub
aam
int3
sub
loope
ljmp
shll
hlt
dec
mov
hlt
push
mov
ds
push
mov
mov
int3
mov
test
int
ret
nop
push
push
fwait
pop
outsb
xchg
mov
dec
mov
cmp
repnz
sub
lahf
inc
jmp
xchg
fdiv
or
mov
xor
es
mov
loopne
lea
push
mov
subl
fldcw
loopne
cmpsl
test
ffreep
test
js
ror
stc
and
xor
ret
inc
pop
lret
mov
xchg
xor
sub
int
cltd
int3
popa
pop
or
sbb
adc
orl
mov
lea
scas
xor
mov
sbb
mov
dec
jno
stos
loopne
mov
and
ja
fwait
bswap
loope
lods
adc
les
mov
rorl
ds
out
mov
lods
insl
mov
xchg
mov
pop
push
cmpsl
ret
adc
xchg
fistl
repnz
mov
push
aam
xchg
sbb
incb
xor
fmulp
call
mov
movsl
test
push
out
dec
and
push
fs
mov
mov
push
and
or
test
pop
xchg
aad
dec
sbb
pop
orb
es
or
and
dec
and
or
lds
dec
sbb
aam
loope
sub
and
test
in
test
push
rcl
sub
fisttpl
and
mov
jno
popf
jecxz
cmp
loop
out
int
xchg
fistpl
cmp
push
call
jbe
xchg
pop
nop
clc
mov
dec
or
jne
mov
cmpsb
or
cmp
out
bound
pop
int3
nop
cmp
or
outsl
insl
arpl
inc
not
out
insb
cmp
outsb
cwtl
dec
test
inc
ljmp
sbb
lods
xor
mov
mov
xlat
mov
dec
mov
mov
mov
jmp
cmp
loope
or
arpl
sahf
sbb
decl
jge
inc
push
aam
or
sub
inc
sbb
outsb
push
jp
or
xor
or
fs
add
jle
aam
jle
cs
sub
clc
jno
test
pusha
popa
dec
sub
push
lret
sub
std
lcall
pop
rclb
xor
lcall
adc
sbb
syscall
pop
and
arpl
frstor
inc
roll
inc
or
pop
aaa
in
push
jecxz
cmpsb
jl
xchg
inc
sbb
repz
add
mov
cmp
out
scas
pop
shlb
fistpl
mov
cmp
jo
add
mov
add
hlt
rcrb
inc
push
sub
sbb
leave
mov
xor
rcll
jo
mov
dec
cmpsb
outsb
lock
fucomi
daa
ja
popf
jge
sbb
fidivrs
lods
ficoml
sub
cmp
or
xchg
pop
cli
repz
xchg
xchg
dec
std
daa
cmp
sahf
je
cmc
popf
ss
pop
ret
out
and
int
rolb
inc
push
loope
pusha
test
hlt
xchg
xchg
sub
fisubrs
push
add
dec
xchg
cmp
aad
imul
aam
pop
inc
jns
das
pop
push
popf
sub
cmpsb
lret
inc
adcl
mov
inc
sub
addr16
in
xor
into
std
sbb
aam
sbb
movsl
pusha
outsb
rolb
int
jmp
jle
fs
adc
aas
mov
add
cmpsb
cmpsl
cmp
push
fisubs
shrb
pop
int3
cmp
iret
add
mov
inc
or
lds
cltd
lcall
or
pop
shlb
bound
cmp
and
jbe
lcall
inc
mov
cld
and
iret
mov
jmp
rclb
add
pop
or
push
add
daa
xchg
dec
nop
movsb
xchg
xor
sbb
lcall
mov
in
xchg
or
mov
popf
or
inc
adc
pop
out
jp
cmp
jge
lds
mov
xor
xlat
icebp
mov
dec
and
cli
add
insb
pusha
movsl
xlat
stc
jecxz
jo
add
adc
or
cmp
jb
aaa
or
adc
inc
pop
cmpsl
push
inc
adc
add
jno
addr16
pusha
int
push
out
sbb
pop
stos
mov
jns
movsb
sub
and
cli
mov
lcall
xchg
inc
dec
nop
inc
out
jp
ret
jbe
enter
dec
inc
jnp
out
ss
mov
ja
xorl
outsb
mov
je
lret
out
xor
mov
jbe
movsl
lock
call
add
pop
jp
jno
jmp
in
adc
mov
test
jmp
shl
repz
fsubrs
jl
push
push
mov
push
pop
cmp
sti
mov
push
sbb
fisttps
fs
ret
fst
out
mov
jmp
mov
shrl
push
sbb
push
popa
out
int3
inc
inc
xor
sti
mov
call
mov
sbb
mov
mov
or
add
push
push
cmp
or
shrb
dec
repz
and
out
cmp
dec
jecxz
mov
cltd
dec
cmc
mov
adc
push
das
push
imul
jg
dec
jo
mov
jecxz
movsl
shr
movsb
cmpl
sub
mov
sub
bndstx
in
pusha
dec
mov
pop
in
or
mov
fs
lock
cli
xchg
sub
into
hlt
movhps
insb
imul
mov
aad
in
dec
mov
roll
or
inc
std
mov
popf
adc
frstor
jge
adc
pushf
add
adc
cwtl
or
call
push
insl
jb
pusha
xor
jmp
xor
lcall
jmp
repnz
or
sub
lods
dec
cmc
push
subb
icebp
push
add
nop
or
mov
in
push
iret
rcrl
dec
lods
lret
push
mov
or
movsl
pop
push
imul
adc
test
push
cli
ret
pop
rcr
das
lcall
imul
inc
sbb
insl
in
fcmovb
sbb
mov
dec
fnstsw
and
mov
iret
out
add
mov
xor
xchg
cmp
cmpb
mov
mov
mov
xlat
fistpl
mov
xchg
push
push
mov
daa
ret
daa
fs
jne
xchg
sbb
psllq
add
rolb
movsb
call
cmpsl
mov
fsubrp
cmp
push
cli
mov
mov
scas
xor
ffree
data16
jae
push
dec
cmp
push
lahf
cltd
jecxz
mov
or
adc
push
out
mov
xchg
aaa
mov
popf
sub
fnstenv
aad
int
lret
loopne
jnp
jo
xor
pop
cmp
scas
sbb
std
cli
je
gs
out
pop
jl
mov
clc
pop
leave
das
dec
jns
cmp
int3
les
dec
push
pop
out
and
jo
xor
sbb
test
fidivs
pop
lea
dec
shll
or
imul
imul
mov
test
mov
sub
fldenv
add
rorl
repz
call
shll
cwtl
xor
test
popa
cwtl
icebp
test
int
jo
inc
push
mov
sahf
lds
shl
xchg
stos
aaa
popa
sub
cmpsl
aas
mov
mov
sub
adc
push
push
adc
add
pop
cwtl
cmpsb
xor
lock
lock
sti
lret
sete
int
loopne
mov
mov
push
add
add
jg
out
and
jmp
mov
xchg
jge
pop
clc
ja
mov
inc
or
sahf
mov
mov
pusha
dec
jnp
xchg
sahf
popf
and
imul
pop
inc
out
mov
sahf
sub
jmp
xchg
jbe
xchg
in
movsb
jge
inc
jnp
repz
lods
rorl
jmp
sbb
orb
scas
inc
and
xchg
cmp
movsl
mov
mov
sahf
xor
mull
cmp
cmp
sub
add
lods
insl
mov
fs
daa
dec
xlat
je
lods
rol
cmc
or
loope
scas
movsl
push
je
jnp
sub
sub
cmp
je
les
test
lock
lret
xchg
push
cmp
insb
out
xchg
ret
aad
push
sub
std
dec
mov
dec
inc
pushf
sub
ja
cmc
cmovno
rcrl
cmc
hlt
xchg
sbb
add
ror
sub
cltd
or
imul
shrb
mov
cmp
cmpsb
lret
add
pop
int
mov
add
dec
mov
mov
ret
repz
jmp
pop
adc
mov
sbb
out
lea
lods
push
add
decl
inc
mov
inc
add
imul
outsl
cli
xor
test
insl
sub
push
lret
pusha
fdivrl
into
mov
pop
adc
sub
in
mov
mov
mov
mov
jge
subb
aam
scas
sub
jg
popf
fstl
pop
andb
or
mov
cli
divl
pop
adc
xchg
jbe
cmp
lock
out
lcall
xor
cli
stc
dec
mov
popa
out
pop
lea
or
xor
mov
mov
pop
loop
sti
mov
pop
xchg
jp
dec
sbb
xchg
sub
cmc
jmp
jae
add
fwait
xchg
lret
cmp
xchg
in
jecxz
push
push
test
cmp
cmp
sahf
cmp
ljmp
push
andl
push
sub
xchg
outsb
icebp
pop
mov
jle
neg
sarb
mov
jmp
ja
insb
push
fsubl
push
out
push
pop
cli
int3
rcll
jne
mov
mov
sub
and
int3
test
inc
mov
xor
dec
repz
mov
sbb
dec
test
call
test
cwtl
cs
pop
xchg
push
aam
inc
push
adc
fstpl
test
mov
sbb
out
ret
in
xchg
sub
mov
mov
stc
iret
mov
repnz
scas
xchg
lcall
dec
or
ss
fistpl
lea
inc
or
mov
jl
ljmp
call
loop
dec
insl
inc
jmp
gs
add
insl
daa
int3
mov
pop
mov
dec
mov
arpl
adc
sti
test
xor
and
fcompl
jp
decl
mov
pop
xchg
fwait
mov
std
push
xchg
mov
add
cmp
fnstenv
pop
call
popa
fistps
stc
in
and
xchg
xor
test
add
fcomps
add
push
dec
fsubrl
push
cli
bound
cmp
cld
enter
and
cltd
loope
mov
and
sub
mov
xchg
jno
or
jl
pop
testl
push
inc
or
ss
dec
out
add
jnp
inc
inc
jmp
sub
cmp
pop
fs
daa
sub
or
mov
ret
shl
nop
push
repnz
arpl
mov
push
jnp
ficompl
movsl
mov
and
call
jl
add
out
pushf
push
cli
loopne
cs
mov
jns
sbb
inc
pusha
int
or
and
mov
mov
movsl
fdivrl
and
cmp
jl
movsl
adc
push
imul
adc
add
cld
dec
sub
mov
xor
pop
and
js
lock
std
push
push
jne
idivl
loope
loopne
pop
lret
or
lea
clc
loopne
or
xchg
lret
sbb
mov
sarl
in
cmp
mov
loopne
fstpt
les
and
mov
jbe
faddl
mov
test
lcall
jl,pn
sbbl
add
and
dec
out
push
scas
push
add
push
jl
inc
jo
cmp
pop
cli
mov
fldcw
jbe,pt
lods
mov
lret
sub
scas
leave
jge
or
mov
sahf
scas
les
insl
push
jge
or
ss
insl
cmp
inc
movsb
jmp
add
test
push
jb
lret
xor
imul
insb
mov
ret
jbe
ret
es
and
fimull
push
inc
stc
loopne
pop
popa
sarb
pop
dec
ficomps
mov
fsubrl
test
xchg
xor
sub
mov
pop
insb
stc
in
imul
adc
clc
outsl
xchg
loope
pop
cmc
addr16
cmpl
adc
jl
push
jb
aad
sarb
fs
fldcw
jns
scas
js
jle
jnp
mov
and
int3
jp
inc
adc
jnp
and
out
sbb
clc
cmp
jne
sbb
inc
cld
sbb
sbb
psubq
dec
leave
jb
gs
ljmp
pop
repnz
dec
dec
lret
mov
cmp
pop
filds
daa
jmp
mov
in
xchg
rorl
mov
lods
icebp
imul
shll
jecxz
mov
adc
imul
mov
jbe
fstl
jne
stc
and
test
mov
jmp
hlt
sti
mov
jle
sarb
inc
cmp
cmp
xchg
xor
mov
add
jmp
fldcw
push
cmpsl
js
lds
sub
ss
cmpsl
inc
pop
pop
xchg
je
rorl
outsl
sub
shll
test
push
int
iret
sub
sub
scas
adcb
or
push
cwtl
aam
in
and
push
push
sub
ja
loop
ja
fmuls
dec
cmp
xchg
jle
aad
mov
xchg
mov
stc
sub
pop
sbb
cmp
dec
add
sbb
bound
lret
mov
jge
sbb
mov
sbb
shll
add
repnz
dec
cmc
cld
lods
push
gs
push
jmp
push
mov
fistpl
popf
lret
jnp
jnp
xchg
xor
cmpsl
addr16
cmp
pop
pusha
jo
ja
int3
hlt
repnz
and
movsb
mov
pop
rep
nop
lahf
pop
jbe
jbe
std
ficomps
popa
pop
jbe,pn
xor
mov
sbb
fsts
sub
push
jge
test
mov
xchg
mov
sbbl
mov
adc
lock
jp
ss
mov
push
jge
pop
inc
idiv
adc
testb
pop
push
fidivs
incb
gs
cwtl
repnz
lret
jmp
in
andb
aad
sysexit
aam
push
pop
push
sub
xor
ljmp
popf
inc
mov
xor
imul
ret
out
adc
cli
jne
mov
xchg
add
fists
ficoms
call
mov
sub
psllq
mov
imul
mov
mov
cltd
lret
jl
cs
in
iret
cltd
mov
mov
out
and
add
xchg
cmpsb
dec
repnz
je
xchg
cwtl
mov
out
fldcw
or
adc
ja
mov
aam
dec
cs
pop
sbb
dec
inc
loop
mov
jno
mov
mov
push
add
or
pop
or
lds
pop
pop
aaa
daa
xlat
lahf
mov
mov
or
movsb
dec
iret
cld
mov
mov
incl
gs
pusha
adc
cld
aaa
hlt
pusha
sub
enter
sub
test
hlt
out
jecxz
push
sbb
pop
xor
std
mov
dec
adc
jne
dec
cltd
int3
jecxz
xchg
pop
sub
stc
mov
mov
in
rcr
and
push
popa
cmp
mov
mov
psrld
or
mov
mov
jg
pop
dec
mov
and
and
mov
sbb
mov
call
js
mov
int3
cmp
inc
popa
fisubrs
add
lea
pop
push
push
lcall
test
adc
and
mov
push
cmp
fs
iret
mov
push
pop
enter
mov
pop
pop
push
inc
or
push
ja
add
cmp
ret
jne
xlat
push
rcll
inc
sub
leave
push
cmp
lods
xchg
cmpsb
inc
push
stc
mov
pop
inc
mov
push
insl
jp
lods
mov
mov
test
test
mov
pop
ja
pop
inc
shl
mov
aas
aam
stos
bound
stos
sti
add
xor
ud2
fistpl
mov
mov
loop
movsl
and
push
mov
ja
int3
push
repz
pop
lahf
jbe
inc
inc
mov
out
lods
jmp
dec
test
insl
repz
scas
inc
mov
xchg
xlat
inc
sti
lret
stos
repnz
cmc
imul
les
stos
sub
inc
mulb
and
das
out
dec
pop
cmc
or
lahf
mov
adc
sbb
pop
stos
testb
lods
clc
push
inc
jb
orb
cld
mull
mov
fdivrs
jne
push
and
cmp
mov
sub
xor
fildl
outsl
add
sub
es
lock
push
shll
cmc
jae
pop
scas
out
pusha
aaa
xchg
pop
jae
push
out
cmp
xor
add
dec
push
ret
pusha
inc
jmp
loope
bound
in
cld
fimuls
or
push
out
mov
insl
mov
sbb
xor
stos
mov
in
inc
sbb
mov
dec
sbb
pop
aaa
shlb
decb
pusha
sarl
popf
and
pop
ljmp
xchg
adc
testl
xlat
fld
mov
call
sbb
push
mov
jno
push
int
and
fimull
into
cmpsb
pop
loop
int3
outsb
nop
arpl
cs
into
cmp
imul
mov
mov
pop
xlat
adc
lea
pop
js
dec
lahf
cmpsb
xchg
fcoms
int3
movsb
xchg
mov
xchg
mov
or
adc
dec
bound
pop
pop
fisttps
add
inc
dec
add
adc
cmp
push
adc
pop
lret
lcall
mov
iret
cmpsl
ljmp
mov
scas
or
loopne
mov
stos
sub
cmp
in
xchg
xchg
rcrb
rcll
jmp
mov
fisttpl
in
in
mov
es
test
add
push
xor
inc
push
lcall
mov
repz
jns
push
add
mov
cmpl
and
roll
pop
push
push
mov
sahf
cmp
add
sub
inc
and
jns
xchg
xor
jnp
lods
dec
sbb
andb
pop
notb
insl
sub
test
jbe
sbb
dec
fimull
aam
idiv
inc
test
and
jbe
jnp
pop
and
fwait
jmp
mov
and
lods
shrb
fistps
shrb
aaa
into
pop
pop
cli
pusha
mov
jo
clc
or
dec
xchg
push
adc
ds
jmp
mov
and
add
or
insb
mov
pushf
and
bound
jecxz
pop
aaa
sub
add
push
arpl
cmpsb
dec
xor
or
push
jle
dec
jle
popf
lods
jmp
pop
ss
dec
insb
ss
xchg
mov
mov
xchg
outsl
cmp
jle
sub
popa
outsb
mov
jno
xor
jae
lods
lock
in
loop
push
sub
jecxz
jnp
xchg
sbbl
enterw
sbb
cmp
not
cmp
and
xor
mov
pop
pop
hlt
push
aaa
dec
push
and
push
inc
loopne
test
fwait
push
mov
sbbl
shrb
stos
loope
xchg
lods
faddl
add
arpl
fcomps
cld
shll
pop
sub
push
jb
xchg
pop
nop
inc
lret
or
sbb
dec
inc
mov
sbb
inc
add
je
push
add
mov
loope
jmp
mov
mov
mov
mov
ret
sarb
cmc
push
jo
jp
sbb
scas
push
and
cltd
into
fbld
lcall
sbb
cmp
or
insl
or
push
lcall
push
imul
mov
sbb
loopne
fldl
jg
jp
add
cld
scas
adc
jl
dec
mov
fsubr
add
movb
jns
shll
mov
clc
rclb
nop
fstps
hlt
mov
mov
push
sahf
rolb
aam
xor
mov
or
lods
loopne
cmpl
and
int3
adc
nop
lds
xchg
mov
pop
add
dec
jae
adc
gs
rep
lods
and
pop
or
sbb
cwtl
xchg
mov
pushf
xor
mov
js
mov
push
notb
sbb
testl
addr16
ljmp
das
or
xchg
push
mov
cmp
add
pop
lcall
in
add
jg
add
mov
cmp
das
icebp
sub
in
fsubrs
push
cld
repz
cwtl
xlat
orl
mov
test
mov
data16
iret
mov
cmp
leave
xchg
aam
mov
adc
lock
mov
jl
fsubs
iret
push
lods
jecxz
fidivs
or
pop
sbbb
pusha
nop
push
sbb
in
loopne
mov
mov
push
aad
test
jmpw
shl
loop
cmp
inc
outsb
sub
mov
mov
cmp
mov
push
push
sarb
lds
imul
iret
sbb
pop
pop
stos
incb
addl
mov
cmc
inc
enter
push
sub
cmp
sarb
mov
xor
sbb
test
sbb
jecxz
mov
daa
cltd
inc
shrb
dec
push
xor
inc
mov
and
mov
sub
iret
lods
xchg
add
sub
dec
add
ret
xchg
cli
inc
dec
pushf
inc
inc
sahf
cmp
inc
push
mov
enter
jnp
and
push
mov
sarl
xor
insl
jg
ror
or
jne
sbb
or
daa
cmp
jo
dec
adc
mov
adc
mov
adc
mov
lds
sub
mov
jg
jl
adc
adc
aad
mov
fs
xchg
and
dec
xchg
pop
pop
daa
push
sbb
lret
sti
daa
into
popa
lret
bound
sub
scas
test
inc
dec
cld
daa
sub
xor
cmp
sarb
push
or
rclb
xlat
xchg
or
jno
repnz
mov
and
dec
cmpl
aam
push
stc
push
adc
lds
add
out
rcll
and
dec
call
sar
into
repnz
fcoms
pop
fistl
lmsw
mov
xchg
pusha
test
mov
scas
pusha
sarl
inc
xchg
add
popa
movsl
das
fdiv
sbb
push
mov
push
in
or
test
lods
out
pop
cli
ficomps
sub
cmp
lods
add
loope
test
out
and
enter
fldln2
imul
insb
xchg
mov
mov
jge
lahf
jge
sbb
mov
int
pushf
dec
bound
xor
lods
cs
xchg
inc
mov
add
out
pop
push
jno
loopne
js
xor
loopne
jle
xor
adc
fs
arpl
insb
xchg
pop
mov
lock
nop
mov
sub
test
test
repnz
mov
lods
sbb
scas
pop
jl
xor
inc
sbb
mov
adc
dec
fdivrl
fsubr
popa
clc
xlat
mov
jge
test
mov
rcrl
call
cmp
cli
fwait
push
cmp
xchg
cmp
mov
push
xor
mov
fwait
or
cmp
mov
xor
jo
outsb
xchg
aam
or
xchg
jno
std
insl
out
les
jae
insl
or
fidivl
adc
dec
stc
movsl
popf
inc
push
pusha
mov
adc
mov
push
daa
ja
or
std
fucomip
dec
dec
dec
push
push
repnz
cmp
adc
dec
sahf
dec
sub
nop
sbb
adc
mov
xlat
lret
pop
inc
mov
sub
in
out
aad
or
cmp
mov
and
leave
sbb
xor
sub
cmp
add
inc
frstor
imul
push
cbtw
test
mov
inc
push
xchg
sahf
jnp
mov
das
or
mov
jle
das
mov
loop
mul
pop
adc
inc
das
jae
jl
jl
fcomp
sbb
je
inc
test
sub
cld
pop
add
dec
push
sar
and
std
test
jl
cmpsl
hlt
sbb
xchg
out
loop
sbbb
mov
lcall
imul
adc
dec
sub
or
movsl
xlat
inc
mov
inc
jp
cmp
sub
ja
xor
in
lahf
std
insb
xor
sub
add
pop
lret
cmp
mov
jmp
mov
out
xor
fldl
inc
inc
cltd
daa
inc
popf
into
xchg
mov
aad
dec
adc
sbbb
dec
fs
es
fmuls
add
push
jae
call
out
fimull
add
outsl
aas
ljmp
int3
insb
xchg
xchg
xor
btr
fdivl
push
ret
jno
or
lods
leave
and
daa
fimull
subl
inc
lock
push
xchg
cmp
jne
in
xor
or
jmp
test
jp
lret
add
wrmsr
test
mov
pop
dec
movsb
pop
je
int3
inc
movsb
stc
pop
sub
mov
add
stc
shl
lahf
sub
mov
popa
xchg
insb
sub
mov
int
pop
in
sub
jg
dec
imul
xchg
mov
xchg
dec
inc
inc
push
sub
mov
xor
outsb
or
adc
ds
fistpll
jle
push
ficoml
rcl
push
dec
scas
fwait
sub
xchg
push
ss
jnp
gs
cmp
xor
add
mov
out
pop
aas
test
lahf
insl
xor
fistpl
aad
jne
cmp
mov
out
sbb
mov
mov
movsl
or
pop
mov
xchg
nop
pop
repz
in
adc
leave
ss
sub
leave
cs
addr16
cld
inc
xchg
sub
push
pop
out
dec
loope
cmc
loopne
fstps
xchg
mov
es
sbb
sarb
mov
cld
xchg
sbb
es
add
or
add
imulb
jge
cltd
xchg
jle
sub
jmp
push
pop
cwtl
popf
mov
add
shlw
xor
adc
loope
dec
aad
mov
pop
imul
out
mov
mov
scas
adc
push
flds
dec
or
xchg
lahf
mov
das
sub
dec
insb
and
and
js
pop
ret
imul
stos
xchg
cmc
arpl
daa
sbbb
jl
dec
or
push
jl
push
adc
andb
repnz
cmp
jle
xlat
inc
mov
mov
xor
mov
dec
pop
enter
test
mov
out
push
mov
idivb
xchg
jb
pop
testb
fisubrs
sbb
cmp
dec
scas
inc
mov
lcall
jnp
je
cld
addr16
or
adc
scas
and
arpl
pop
sub
sbb
add
test
cmp
cli
dec
xchg
rolb
pop
push
insb
pop
imul
call
js
mov
ljmp
cmp
pop
pop
mov
insb
add
sub
sub
cmpsl
adcb
clc
divl
inc
jns
mov
add
cmpsl
std
jg
hlt
hlt
cmp
ret
pop
cwtl
or
cmp
int
dec
xchg
or
xchg
jle
ss
psubq
mov
dec
lret
push
mov
cmp
rol
or
mov
and
lahf
stos
outsl
pop
sub
push
xor
jg
mov
cmp
push
out
sub
test
call
pop
dec
dec
sbb
dec
push
sub
stc
xchg
push
es
aaa
aaa
lock
cltd
shrl
insb
inc
inc
fwait
inc
or
inc
gs
xchg
test
scas
scas
add
add
cwtl
xchg
ficomps
sbb
lret
int
dec
inc
add
nop
and
fisttpl
out
insb
mov
adc
scas
subl
jbe
add
jecxz
icebp
xor
lds
sbb
cmp
test
cltd
add
faddp
mov
ds
paddb
andb
pop
repnz
sarl
adcb
push
inc
and
test
mov
leave
cmp
stc
adc
inc
aaa
fsubp
popf
cmp
outsb
pop
jle
xor
cmp
enter
jno
mov
rcrb
or
pop
adc
mov
cmp
mov
ds
pusha
xor
mov
xor
stos
sub
cmpsl
jb
add
outsl
loope
popf
les
sbb
repnz
adc
leave
das
in
inc
sbb
inc
enter
test
xor
stc
sarl
fldt
inc
mov
push
mov
xchg
jge
sub
cltd
mov
xor
mov
jae
pop
inc
testb
adcl
xor
lds
idivb
push
je
ret
xor
icebp
jne
pop
dec
es
inc
xchg
sub
hlt
sbb
fbstp
lods
jae
das
fldl
add
rol
mov
jecxz
and
into
test
emms
sub
cmp
repnz
mov
cmp
mov
lret
ja
mov
enter
mov
les
xchg
in
fwait
xchg
mov
pop
jno
addr16
jle
stc
imul
push
xor
in
pop
adc
jno
aaa
test
and
loopne
mov
pop
xor
lret
div
cmp
inc
mov
lea
jae
popf
jp
adc
in
into
mov
mov
add
mov
dec
cltd
cmp
ret
pop
or
push
jns
scas
fsubrs
cmp
gs
pop
dec
fmull
xor
pushf
fldl
sbb
xchg
call
ljmp
adc
mov
jp
jle
movsl
jb
xchg
or
mov
push
ds
shl
shrb
pusha
push
push
adc
mov
push
mov
and
cmp
add
inc
sub
dec
imul
inc
mov
cmpsb
mov
out
mov
movzwl
in
out
out
mov
pop
pop
dec
pop
in
adc
jnp
mov
and
test
pop
and
leave
pop
shrl
xchg
sbb
sbb
icebp
bound
int3
jecxz
mov
cmc
aaa
test
fisubs
lret
scas
cs
in
xchg
and
shl
xor
dec
sbbl
xchg
ror
dec
jg
jno
xchg
into
and
int
inc
jno
outsb
push
sub
sbb
hlt
mov
or
add
in
int
inc
je
sbb
out
out
lcall
shrb
or
xchg
mov
sbb
lahf
pop
das
push
mov
inc
dec
idiv
movsb
pop
sbb
xchg
stos
mov
cltd
mov
popf
jge
jae
mov
xchg
push
dec
repnz
cwtl
and
jecxz
dec
or
cli
xor
cltd
incl
push
mov
fmuls
xchg
repz
xor
jo
dec
arpl
clc
in
jo
xor
cmp
jno
push
cmp
or
push
negl
add
sarb
leave
sub
and
aaa
jle
mov
rcll
pop
xchg
bound
stc
icebp
out
mov
inc
mov
pop
jo
mov
xor
sub
mov
xor
int3
push
mov
clc
and
ja
sti
cmc
iret
lods
push
jg
jne
and
nop
addl
mov
dec
out
push
pop
xor
and
gs
aaa
cmp
sbb
dec
fcomps
loope
adc
push
inc
test
popf
inc
stos
dec
sbb
lods
punpckhdq
movsb
int
repnz
imul
jle
and
insl
cltd
lea
xchg
ficompl
inc
pop
shrb
pop
std
inc
fisubl
add
sub
sub
xchg
rol
fisubrs
push
mov
std
nop
daa
mull
cmp
and
lea
dec
jne
mov
jecxz
aaa
jp
push
mov
xchg
inc
popf
jbe
cmp
jmp
push
pop
subl
popf
jb
cmp
loopne
inc
xor
imul
cltd
bound
mov
pop
mov
std
gs
pop
ficoml
jg
jle
iret
xor
mov
adc
loope
mov
sarb
and
lds
movsl
ficompl
testl
mov
mov
pop
test
lods
cmp
sbb
push
pop
test
sbb
jp
mov
sbb
test
loope
addr16
pop
or
push
lahf
aas
jl
or
imul
fadds
fdivr
mov
fsubs
xor
mov
inc
cmp
dec
add
inc
mov
or
adc
les
pop
sub
inc
shlb
push
cmpsb
in
arpl
les
add
cmp
cmp
dec
out
div
dec
fwait
sbb
out
push
xor
xchg
enter
nop
mov
mov
mov
xor
dec
pop
aas
ret
clc
lcall
imul
dec
cwtl
push
clc
sbb
int
cmpsb
insb
lods
out
lret
xor
rcrl
pop
sub
mov
loopne
xchg
pop
xor
out
scas
hlt
and
daa
cmp
sahf
mov
int3
dec
leave
ds
and
pop
cmp
cmpl
sub
mov
lods
adc
and
cmp
cld
sub
cmp
jmp
aaa
add
mov
lret
sbb
ror
mov
dec
ret
cmp
shll
leave
mov
test
fadds
das
lret
sbb
and
outsl
mov
call
fs
rcl
std
leave
push
stos
add
fimull
popl
push
test
int3
mov
in
pop
push
test
lahf
xchg
dec
mov
lods
xor
movsb
ljmp
adc
jns
mov
and
mov
jno
dec
mov
sub
stos
and
into
cld
lea
push
loope
lods
and
push
and
stc
pop
mov
inc
daa
es
fcmovu
fidivrs
sub
pop
movsb
xchg
push
push
pop
cld
inc
sbb
cli
mov
es
add
sbb
and
sub
jp
dec
add
mov
xchg
xchg
insl
xchg
inc
clc
pusha
xchg
test
jne
es
test
enter
mov
xchg
pushf
faddl
xor
pop
ret
add
pop
inc
es
bound
int
adc
leave
bound
pop
jle
xor
and
xor
pop
and
mov
add
icebp
or
ficoml
es
add
inc
mov
pop
mov
push
insb
push
sub
pop
xchg
fcomp
mov
ljmp
jne
pop
cmpsb
dec
mov
fistpl
push
lock
mov
ljmp
and
faddl
cmp
jo
mov
ljmp
xchg
or
pop
rorb
aam
aam
dec
inc
sarb
fcompl
notb
and
dec
xchg
arpl
adcb
cmc
dec
and
add
cmpsl
aaa
imul
lock
inc
sub
cmpsl
push
adc
and
add
and
pop
and
or
add
mov
sbb
jge
arpl
inc
movsb
adc
lock
pushf
icebp
lock
orb
test
mov
xchg
xor
lcall
pop
sahf
lods
loope
adc
adc
mov
out
pop
pop
jno
jecxz
jno
cmpsb
subb
sbb
push
push
xchg
jo
mov
out
dec
inc
std
or
sbb
clc
and
mov
or
int3
dec
orb
sbb
pop
mov
add
mov
imul
lret
scas
imul
pop
fstp
xor
sub
das
sbb
nop
push
fisttps
data16
movsl
push
inc
lods
rorl
sbb
adc
pop
pushf
jecxz
icebp
push
lds
mov
insl
inc
mov
xor
mov
mov
sbb
mov
lcall
ficoml
push
lods
call
push
cmp
fnstcw
mov
test
xchg
dec
pop
mov
add
out
js
icebp
pop
aaa
sbb
subl
pusha
jmp
aas
mov
fwait
jl
filds
lods
dec
shl
fcomp
jo
xchg
je
mov
dec
outsb
mov
mov
sbbl
mov
xorb
rcrl
cwtl
hlt
pop
stos
sub
inc
rcrl
add
dec
cwtl
stos
in
cld
and
mov
arpl
sbb
mov
ss
outsl
push
push
mov
jo
jecxz
dec
push
insb
or
nop
addb
stos
inc
add
ja
add
ljmp
xchg
inc
aaa
adc
outsl
je
ss
aam
faddp
div
and
push
push
mov
cmp
cltd
lds
out
push
rorb
push
add
jl
mov
and
sbb
fisubrl
jmp
sbbb
mov
xor
xor
xchg
xchg
adc
fcomp
push
mov
push
pop
xchg
testb
inc
pop
popf
mov
sti
mov
inc
cmp
out
mov
jno
mov
scas
stos
xorl
into
rcll
vpaddw
push
inc
or
mov
test
call
add
inc
fsubrs
mov
jmp
lods
pop
mov
cltd
mov
push
pop
aam
adc
mov
pop
test
xchg
mov
sub
cltd
xchg
xchg
sbb
ficoml
or
pop
lods
xor
jp
pop
aas
xchg
inc
stos
mov
test
je
in
shl
pop
lcall
sbbl
inc
les
mov
mov
lcall
lds
shr
out
mov
rolb
sub
inc
adc
pop
cmp
lods
inc
scas
addr16
shrb
pop
mov
or
js
mov
mov
ret
cmp
mov
icebp
mov
push
gs
ds
leave
and
sahf
pop
mov
adc
dec
cmpb
dec
mov
push
lret
inc
loopne
lds
addr16
cmp
enter
test
repz
inc
xor
fwait
mov
xchg
add
outsl
sahf
aas
or
fisubrs
jnp
loop
pop
push
sbb
lret
shlb
flds
out
cld
ss
mov
out
sbb
call
adc
and
pop
mov
jae
ret
aam
repnz
ljmp
mov
pop
inc
in
test
mov
lcall
imul
sub
int
outsl
data16
data16
loopne
mov
sub
ret
add
mov
das
dec
jg
adc
mov
mov
lock
sub
xchg
inc
and
cmp
dec
push
pop
repnz
add
pushl
jnp
mov
mov
fnstenv
or
pop
decl
mov
jae
mov
cmp
mov
out
add
movsb
dec
cmp
test
sub
adc
pop
lahf
push
das
call
adc
mov
movsl
das
or
addr16
push
xor
loope
cmp
mov
adc
sub
mov
xchg
out
in
sbb
add
popf
clc
xchg
adcl
sahf
negb
ss
aad
pusha
lret
sbb
insb
push
ficoml
cli
je
mov
data16
push
pop
push
in
push
scas
mov
ss
adc
dec
not
roll
inc
inc
pop
jnp
outsb
jne
mov
ds
pop
xor
ljmp
xchg
add
pop
sub
inc
cmp
daa
pcmpgtw
mov
dec
scas
orl
out
and
popf
pop
in
mov
bnd
mov
cltd
jge
dec
xor
test
out
adcb
mov
movsl
stos
pop
dec
lods
adc
push
lds
outsl
shl
mov
imul
mov
xchg
das
cli
pusha
push
mov
gs
std
sti
inc
cltd
adc
scas
lahf
cmp
ret
adc
mov
rolb
dec
in
rol
mov
or
gs
push
loopne
mov
pop
cltd
jo
pop
jmp
shl
stos
mov
and
stos
jno
mull
jg
dec
xchg
jmp
int3
cmp
insl
sub
push
and
out
inc
and
mov
je
mov
loopne
push
mov
or
sub
xchg
sbb
or
cli
ja
adcl
push
push
push
lods
jp
movsl
push
mov
roll
lods
das
pop
xchg
pop
lds
insl
out
cli
jg
or
add
mov
lock
dec
mov
sub
xor
ss
push
pushf
xor
repnz
xchg
stos
bnd
arpl
movsl
out
inc
xchg
dec
lcall
fdivs
sub
push
fwait
mov
sub
aam
fdivr
cmp
and
adc
or
xchg
mov
push
cmp
xor
out
movsb
jmp
adc
mov
ret
subl
push
aam
fldt
scas
lods
mull
lret
pop
add
aad
add
icebp
or
inc
icebp
js
rorb
xchg
and
fisubs
adc
add
pop
adc
or
pop
lock
clc
mov
mov
inc
hlt
mov
xchg
mov
loope
adc
add
daa
testl
mov
adc
sub
xor
or
pop
dec
divb
idiv
add
mov
outsb
rclb
xlat
ret
cmp
sub
adc
negl
dec
or
xchg
push
mov
and
fldpi
push
xor
xor
push
pop
scas
dec
loopne
sub
cli
mov
add
call
push
xor
leave
sub
ficompl
pop
dec
inc
adc
sbb
cmp
mov
ds
xchg
pop
loope
mov
jmp
sub
adcl
cld
mov
xchg
lea
xchg
in
fchs
fs
xchg
ret
xlat
jl
or
add
mov
sbb
iret
jg
shlb
mov
repnz
mov
ds
nop
mov
jno
popf
xchg
test
lods
push
sub
mov
xchg
sbb
cmp
and
cmp
push
lds
push
out
sub
inc
push
push
add
loopne
pop
mov
subl
fnstsw
cmp
push
incb
mov
fsubrl
sbb
inc
cmp
xchg
and
or
loopne
jecxz
jecxz
mov
cwtl
mov
iret
mov
clc
mov
adc
fbstp
dec
and
fidivrs
inc
sbb
nop
jae
push
loopne
jno
lret
xchg
jbe
neg
leave
sub
inc
dec
lock
flds
lret
std
pop
test
dec
loopne
movsl
push
add
mov
cmpsb
cmp
cmc
outsl
xlat
mov
arpl
ljmp
movsb
cmpsl
adc
and
bound
xor
js
in
xor
aaa
sbb
clc
inc
test
cmp
or
stos
dec
jp
test
repnz
loopne
pop
repz
sbbb
je
jne
mov
inc
push
call
sub
ss
cmpsl
inc
mov
aas
mov
add
inc
sbb
lds
pop
ds
adc
bound
dec
sbb
pop
push
cmp
lods
pop
scas
ror
and
test
cmp
pusha
mov
ja
out
xor
movsl
movsb
fnstcw
dec
or
mov
sbb
xchg
add
repz
mov
xor
daa
mov
xlat
in
or
test
js
bound
inc
cmp
mov
mov
or
or
push
mov
cld
cmpsb
or
or
jmp
push
sub
adc
and
sub
pop
in
pop
mov
subb
nop
mov
mov
mov
sbb
xchg
sar
enter
or
nop
addr16
fucom
jle
arpl
insb
aas
popa
push
mov
and
leave
fdivp
push
or
shrb
mov
cmp
imul
inc
imul
and
dec
push
clc
add
mov
hlt
pushf
mov
push
xor
add
les
icebp
loope
fbld
outsb
popa
jmp
inc
cltd
dec
popa
ret
cmp
out
arpl
rcl
add
xor
mov
cmp
push
rcl
adc
js
jno
fsubrl
aam
aas
jg
cld
sub
outsb
sbb
jmp
sub
mov
js
cmc
sbb
or
imul
jle
sbb
jge
addr16
mov
pop
mov
cmc
imul
mov
or
pop
push
into
mov
mov
gs
shll
pop
into
hlt
add
lcall
scas
popa
call
data16
pop
sub
lea
and
inc
jo
cmc
jp
push
dec
into
push
testb
xlat
int
mov
xchg
repz
xchg
mov
mov
movsl
pop
test
addr16
jp
out
jno
xchg
fdivp
xchg
dec
jne
sub
and
cmpsl
jne
mov
push
int
push
loop
outsl
popa
movsl
pop
mov
aas
pushf
cmpsl
loopne
movsl
and
dec
pop
and
adc
mov
mov
xor
bound
cmpsl
xorb
add
and
icebp
cmp
push
push
add
insl
add
sahf
inc
mov
mov
lods
mov
enter
mov
in
adc
jp
and
xor
rorl
dec
pop
repnz
sarl
cld
add
and
adc
and
mov
cmpsb
or
fisttpl
lcall
outsb
cmc
or
orl
jmp
stos
mov
or
jno
mov
push
out
fsubl
js
sbb
and
call
push
aas
jnp
pop
cs
jg
jl
xchg
ljmp
movsl
push
outsl
loopne
ja
les
and
mov
in
pop
push
adc
inc
adc
mov
cmpsl
pop
xor
incl
jae
and
dec
and
xchg
xchg
mov
popf
or
xchg
cmp
pop
jae
inc
out
aas
xchg
pop
mov
xchg
sti
sbbb
push
sbbl
jl
push
pop
push
jae
mov
stos
pop
push
jge
xor
and
jp
mov
loop
add
lret
bound
mov
stc
loopne
enter
push
jg
and
ljmp
lods
mov
xor
repnz
jne
ret
js
cmp
sahf
loopne
clc
daa
xchg
jb
jmp
push
imul
jle
dec
or
jnp
or
lret
or
dec
mov
rolb
dec
pop
add
xchg
std
out
or
xchg
push
sbb
popf
test
imul
aaa
dec
xchg
loope
or
std
sub
pop
lret
inc
push
ja
int3
lcall
addr16
inc
adc
add
cmp
cmpsl
cld
jo
cld
rclb
jmp
stos
imul
mov
lahf
jns
cs
fidivrs
xor
push
insb
mov
fs
cmc
xor
adc
dec
cmpsb
lahf
push
and
rorl
movsl
dec
pop
jle
fs
jmp
pop
inc
pop
mov
mov
push
sub
mov
sbbl
xchg
xor
jl
or
std
mov
test
es
add
divl
in
shrl
jbe
xchg
dec
pop
push
insl
push
ljmp
mov
ja
adc
add
add
in
mov
inc
enter
add
ret
lea
bound
inc
add
jg
sbb
inc
fdivl
inc
test
lahf
cmp
lods
in
sbb
xchg
cmpb
push
scas
lock
push
clc
ret
lret
mov
push
jge
ret
add
inc
in
test
js
fisubl
bound
push
mov
mull
jae
enter
pop
xchg
dec
loop
push
add
push
dec
outsl
xor
adc
or
test
jns
xor
stc
dec
jb
inc
xor
cmp
mov
pop
cmp
jp
jo
dec
cltd
and
push
lods
sbb
lock
mov
fisubrs
jp
orb
jb
in
ret
sub
or
sbb
insl
bound
imul
or
adc
pop
and
leave
nop
lock
inc
add
icebp
pop
leave
sbb
push
fisubrl
ds
cli
mov
mov
pop
inc
loopne
inc
addr16
jo
test
leave
insb
sub
orb
xor
xor
pop
xchg
aad
ds
out
ss
enter
or
icebp
in
sub
bound
or
sub
loop
mov
and
jo
cmc
out
push
pop
sbb
js
push
mov
mov
or
shll
xchg
cmp
mov
je
sbb
cmc
pop
sbb
xchg
mov
movsl
lods
aad
push
add
push
cmpsl
sbb
jl
cmp
inc
mov
imull
push
test
xor
inc
dec
fs
call
idivl
and
push
loope
mov
inc
ja
xor
push
iret
bound
subb
xchg
nop
mov
shrb
pop
loop
mov
xchg
scas
push
cmp
mov
shlb
pop
fstps
call
aam
in
cld
inc
std
enter
mov
pop
cmp
or
jecxz
cmpb
loopne
popf
dec
sbb
sub
xor
xchg
sub
xor
addr16
mov
es
inc
xchg
dec
jge
in
in
arpl
cmp
test
negb
lds
clc
or
jp
mov
xor
js
adc
add
leave
mov
push
in
cli
pop
xor
inc
arpl
sbbl
xchg
mov
aas
ja
shl
mov
mov
dec
cmp
inc
inc
and
inc
pop
or
rolb
lods
xor
leave
fisubrl
push
and
cld
or
dec
insb
and
rcr
pop
dec
sub
xor
ret
std
fadds
add
jbe
mov
pop
leave
inc
sbb
int3
lods
mov
call
cmc
pop
gs
les
int3
es
xchg
in
xchg
scas
pusha
and
mov
aad
in
pusha
and
test
dec
mov
sub
inc
sub
adc
in
cmpsl
xchg
movsl
js
scas
adc
hlt
and
arpl
scas
mov
mov
cmp
jne
imulb
mov
jmp
idivl
add
ljmp
add
lock
movsl
shlb
cmp
mov
and
mov
das
xor
push
push
sbb
jge
add
lods
push
aad
hlt
hlt
cmp
cmp
mov
jl
adc
adc
cmp
testb
scas
mov
shll
outsl
jns
rol
push
or
loope
push
shr
loopne
push
adc
inc
add
icebp
cmp
mov
lds
adc
dec
arpl
sub
xor
mov
sbb
outsl
adc
jecxz
sub
pop
outsb
adcl
xor
jmp
les
das
cmp
push
cli
xchg
jp
lcall
aad
adc
stos
add
jo
into
inc
adc
mov
lods
cmp
xor
repnz
stc
pop
ss
sbb
or
mov
push
pop
mov
jne
idiv
test
test
cmpsb
stos
cmp
out
imulb
cltd
xor
xchg
add
mov
add
add
in
sbb
pop
xor
push
icebp
mov
mov
fistps
mov
mov
ljmp
sbb
jb
gs
imulb
shl
mov
xchg
adc
adc
xchg
loop
mov
in
lret
pop
and
or
adc
xorl
pop
aaa
fildll
arpl
dec
shrl
pop
lret
scas
dec
pop
repz
push
jne
insb
xchg
adc
shlb
add
add
mov
cmc
out
mov
ja
loopne
add
push
fimuls
push
enter
cmpsl
sub
dec
cwtl
cwtl
aad
movsb
jne
movsl
fcomp
popf
xchg
lret
push
mov
test
in
add
test
dec
mov
jns
xchg
mov
cld
push
ret
add
inc
jg
or
popf
mov
shrl
add
loop
mov
sbb
call
sub
jmp
adc
jecxz
xor
imul
cmp
test
and
cmp
adc
orl
dec
std
test
movsl
sbb
cmp
adc
imul
xor
movsl
lock
test
jnp
adc
ss
jle
pop
imul
icebp
adc
dec
push
jmp
shl
negb
pushf
fnsave
in
push
inc
xor
jbe
imul
cmp
push
pop
add
out
mov
insb
mov
jp
int3
mov
dec
xor
sub
jae
mov
je
jp
les
jnp
lret
and
ret
pop
outsl
jg
shll
mov
mov
adc
push
cmp
jae
mov
inc
and
out
out
mov
dec
mov
test
int
or
iret
mov
int
movsb
add
mov
adcb
test
arpl
into
jp
dec
fs
faddl
incb
xchg
enter
jbe
push
jne
addr16
test
xchg
in
push
push
cltd
dec
mov
cmpsl
pusha
cmp
mov
lahf
fcomps
jl
fmull
push
xrelease
inc
loopne
lcall
fimuls
movsb
nop
out
loop
add
js
cmp
movsl
jmp
aam
and
mov
pop
fsubl
push
out
aas
cmp
leave
popa
mov
cmp
mov
in
arpl
mov
dec
ret
ficomps
movsb
test
clc
or
inc
and
lock
jmp
shrl
push
stos
mov
out
ss
loop
or
loope
clc
or
xlat
arpl
jge
pushf
pop
push
pushf
test
jne
cld
pusha
inc
mov
sub
nop
mov
cmpl
add
mov
mov
mov
pusha
js
cld
sub
test
xchg
sub
sbb
or
jb
xorb
shll
fnsave
leave
pop
fs
pop
and
test
and
fistpll
and
test
je
mov
cmp
pop
mov
push
lods
loop
add
imul
cltd
xchg
xor
sbb
xor
cli
inc
in
cmp
mov
or
jnp
jno
and
xchg
outsb
push
lea
mov
lods
imul
sarb
sub
icebp
enter
orl
sbb
pop
dec
mov
in
and
outsb
mov
adc
cmp
xor
inc
insb
sub
inc
sarl
ja
mov
inc
arpl
cmp
cmp
xchg
push
jne
sub
mov
popf
jmp
mov
xor
pop
ret
jne
pop
mov
add
test
arpl
push
into
shlb
cld
xchg
sbb
mov
jle
ljmp
jl
sbb
push
inc
push
das
shll
push
mov
jbe
aad
xchg
jmp
test
dec
lock
rol
test
adc
insl
in
addr16
push
adc
pop
adc
andl
cmpsb
sub
cmp
scas
loope
pop
es
shlb
lret
mov
testl
nop
jmp
push
xor
xchg
cmp
ds
and
jne
gs
jnp
iret
repz
add
jg
xchg
ss
fscale
cmp
cmpsb
arpl
cmp
inc
lds
jb
inc
loop
cmp
mov
xor
adcb
cmpsl
int3
pop
push
jg
enter
push
test
mov
sub
jnp
push
insl
mov
fisubl
nop
mov
aad
fs
push
jg
fisubrl
jb
push
push
add
arpl
cmp
mov
inc
or
icebp
push
inc
mov
stos
xor
movsb
inc
into
ret
add
jg
pushf
leave
rcrb
es
cli
arpl
sub
cmp
dec
aas
aad
mov
scas
jg
cs
or
sub
jge
adc
outsl
movsb
call
mov
std
xchg
mov
sbbb
ret
push
outsb
fdivr
es
cli
sub
push
jne
add
lods
xchg
dec
rorb
insl
mov
jl
aas
dec
int
scas
repnz
add
mov
shlb
es
incb
cwtl
mov
mov
adc
fimull
dec
pop
mov
int
add
jge
fsubs
test
cltd
dec
xor
inc
xor
popa
mov
dec
sbb
add
test
in
dec
inc
sub
mov
stos
inc
repnz
rorb
arpl
fildll
add
xor
cs
cltd
lea
fcoml
pop
or
in
popf
add
push
dec
xchg
pop
and
xchg
out
repnz
push
adc
mov
mov
mov
les
movsb
les
aad
addr16
roll
jmp
mov
hlt
pop
lcall
jns
arpl
addb
inc
jo
sub
sarb
call
add
inc
jge
and
jle
mov
inc
popf
jmp
scas
das
mov
push
mov
paddsw
push
iret
sbb
mov
fs
fxam
fiadds
pop
sbb
adc
pop
pop
jl
jnp
enter
cmp
out
repnz
scas
aad
dec
fiadds
or
mov
cs
lahf
das
rcr
xor
sub
movl
pop
sbb
and
cmp
add
mov
fcompl
push
out
mov
ds
cmp
pop
into
mov
adc
nopl
loop
insl
arpl
push
adc
push
lret
jmp
sub
in
ja
hlt
xor
inc
inc
jp
and
mov
fmull
mov
les
pop
int
inc
xchg
shrb
mov
rorb
les
dec
popa
std
mov
test
xchg
iret
push
aas
hlt
js
lds
mov
adc
and
cmp
cmp
jb
sahf
push
sbb
ja
jns
sar
cmp
mov
mov
or
or
push
lret
data16
dec
jne
adc
sub
in
sbb
ret
icebp
arpl
push
in
pop
pop
pop
and
std
stos
xchg
jne
xor
movsl
mov
push
gs
setb
xchg
mov
mov
jns
and
out
shr
push
mov
in
pop
mov
jo
fsubrs
cmp
push
aad
testl
clc
imulb
mov
add
into
bound
xchg
jbe
in
jle
addr16
scas
push
arpl
jbe
push
xchg
mov
xor
pop
inc
adc
popf
jecxz
adcl
stc
out
mov
jecxz
out
andl
inc
lret
jb
test
movsl
cs
aam
ljmp
dec
pop
cmpsl
bound
jae
lock
sarl
sub
xchg
xchg
ljmp
int
sti
push
push
inc
xorl
or
daa
in
icebp
cwtl
push
scas
pop
sbb
and
ret
cmp
into
daa
mov
insb
sti
push
mov
and
sbbb
sub
xchg
sub
jg
mov
or
idivl
and
jnp
arpl
test
xchg
push
aam
or
into
pop
scas
fistps
xchg
ret
in
sbb
push
scas
sub
outsb
cmpsl
mov
pop
pop
mov
jo
test
mov
nop
idivb
jae
rorl
cltd
lods
ljmp
jne
cli
sbb
xor
sti
jmp
bound
imul
fsubrl
les
ret
pop
inc
scas
hlt
bound
dec
in
out
stc
int
push
push
cmc
lods
fwait
jge
subl
sub
insl
dec
ror
or
aam
or
push
pusha
cmp
lock
mov
dec
cmp
xchg
sbb
jle,pn
or
xchg
xor
imul
mov
test
daa
stc
jo
cmpsb
adc
xchg
int
daa
sbb
mov
sbb
or
xor
cmp
insl
fwait
jo
or
fadd
lods
xor
mov
mov
dec
jg
clc
stc
or
cmp
fcompl
push
mov
stos
out
loopne
das
jle
test
and
ss
in
sarb
icebp
pop
insb
int3
mov
icebp
mov
xor
imull
and
cwtl
jbe
cmpsb
mov
mov
sbb
loopne
jbe
dec
out
das
jmp
inc
push
add
push
add
mov
iret
fs
cmc
js
cli
add
xchg
inc
xor
ds
and
loope
pop
sbbb
mov
add
repz
test
mov
and
xchg
bound
pop
sub
test
sbb
movl
fwait
push
and
push
repnz
cwtl
loop
push
dec
adc
repz
lods
out
aaa
push
mov
cld
mov
push
nop
jl
jg
mov
sub
addr16
sub
inc
dec
mov
test
ret
sub
cmp
jge
test
repz
fwait
je
jmp
mov
jg
cmpsb
mov
or
jnp
or
mov
add
pop
pop
imul
jl
jle
dec
daa
sub
mov
fcmovnb
cmpsb
sbb
nop
shrb
dec
push
aas
mov
add
jo
push
cmp
test
cmp
jmp
clc
sub
xor
push
sub
add
push
add
sbb
xacquire
ret
mov
lcall
mov
mov
aaa
adc
mov
out
jne
test
addb
mov
add
xor
cld
mov
out
test
in
test
adc
cmpsb
loope
ljmp
call
aam
clc
subl
cmpsl
add
pop
xchg
pushf
mov
fstps
pop
rcrl
test
addr16
clc
les
out
aad
and
adc
adc
out
jp
add
mov
popf
cmp
jno
jl
daa
mov
fucomi
shl
mov
push
stos
ficoml
lcall
mov
lea
add
loop
call
jmp
mov
xor
or
mov
adc
cli
adc
cmp
mov
movl
call
push
shll
decl
rcrb
mov
out
sub
cmp
in
push
fcmovne
outsl
and
push
adc
loopne
out
mov
mov
xchg
imul
shr
xor
ret
test
orl
jg
neg
jge
repnz
ss
pop
rcl
mov
xchg
push
lods
dec
mov
bound
inc
inc
and
cmpsb
lock
lret
pop
out
pusha
mov
pop
xchg
xor
or
negl
sbb
dec
mov
pushf
fimull
mov
xchg
rclb
fldt
pop
ljmp
ljmp
push
clc
sbb
mov
or
push
stc
lea
loop
jb
cwtl
test
nop
mov
xchg
or
enter
jl
outsl
mov
test
out
or
push
inc
lock
ja
push
repz
dec
inc
mov
and
in
xchg
addr16
sbb
loope
push
popa
sbbb
testl
and
inc
cs
jns
fcompl
pop
cltd
ss
xor
popa
leave
mov
sub
aas
sub
movsl
sub
mov
or
xchg
popa
and
mov
or
add
mov
push
stc
stc
inc
idivb
push
imul
sub
decl
dec
bound
movsb
mov
mov
ja
hlt
daa
js
ss
mov
rcll
rcll
movsb
jo
pop
je
pop
mov
add
xchg
in
mov
rorb
add
jge
mov
lods
movsl
jle
outsl
pushf
int3
incb
inc
sbb
imul
inc
frstor
push
xchg
movsl
xchg
mov
lret
cltd
dec
popa
mov
inc
lahf
fdivl
les
jne
xchg
fstp
jno
add
in
mov
jp
inc
mov
and
inc
scas
dec
mov
test
push
fdivrl
ds
adc
pop
xor
pop
or
push
decl
jno
or
stc
jl
xchg
movsb
jbe
outsb
jmp
int
imul
xchg
mov
mov
setbe
adc
aam
sbb
mov
mov
fnstsw
cmp
roll
stos
add
es
xorl
jg
xchg
in
pop
or
dec
call
adcb
sub
ljmp
mov
push
pop
lret
and
daa
adc
jp
xor
add
aaa
bound
js
shr
rcrl
jle
mov
iret
fimull
push
lds
test
shll
or
cli
rcrb
dec
and
add
pushw
push
int
jb
aaa
stos
out
movsl
jo
jnp
stc
movq
in
jge
adc
xlat
jnp
rcll
mov
xor
mov
sub
sahf
scas
mov
shl
or
or
push
add
cmp
xchg
stc
iret
shlb
jns
push
aas
xorl
mov
pop
xor
adc
cli
insl
stos
fdivrp
sub
stc
mov
arpl
popa
mov
aad
outsl
pop
shlb
test
ret
xchg
push
arpl
push
pop
add
sbbb
out
xchg
loopne
and
add
adc
lcall
sbb
push
mov
and
jne
dec
jmp
cmp
cmpsb
inc
adc
pop
fucom
repz
pop
call
insb
sub
add
sahf
xor
idivl
xchg
mov
mov
inc
and
and
pop
xchg
xor
rcrl
fdivrs
jge
in
add
in
outsl
and
push
bound
xchg
roll
dec
xor
jecxz
mov
jle
push
inc
dec
cmpsl
jecxz
cmp
and
int
movsl
push
sahf
repz
mov
mov
in
addl
fdivrs
xorb
adc
stos
pop
inc
fldenv
jnp
jecxz
inc
sub
inc
sub
andl
mov
repz
push
stc
sub
or
loope
jecxz
push
or
sub
pop
add
xchg
fildll
push
gs
mov
fcmovnb
dec
jbe
sub
fwait
into
mov
inc
stos
aaa
add
mov
repz
push
or
jnp
out
cs
xchg
mov
mov
jo
sub
add
adc
orb
lock
adc
fidivrl
aas
jb
xor
xchg
lock
sbb
into
sub
pushf
pop
lea
in
lods
jecxz
imul
inc
pop
jge
add
jg
xor
adc
imul
mov
or
push
mov
xlat
sbb
cmp
xor
movsl
imul
movsb
add
repz
add
scas
insl
lea
jecxz
test
gs
in
cmp
imul
jg
imull
popf
or
add
xor
popf
aam
into
mov
jge
ljmp
fbld
xor
push
sar
mov
lret
js
xchg
pop
int
fsubrl
cmp
es
into
dec
insb
scas
xchg
sub
fisttpll
xor
dec
cwtl
add
add
adc
pop
adc
pop
negl
and
out
inc
out
mov
insb
lahf
cmc
mov
jmp
icebp
ja
aas
fmull
lea
lock
popa
imul
arpl
push
sbbb
pop
addr16
dec
scas
mov
mov
adcb
fld
scas
add
mov
in
dec
cltd
loop
pop
push
cmp
subl
pop
pop
dec
fiaddl
fldl
pop
and
mov
shr
cmp
inc
aam
ret
inc
xchg
push
lahf
xchg
adc
lahf
fisttps
fst
sbb
mov
imul
lcall
shufps
popf
movsl
mov
iret
in
mov
xor
cmp
cmpsl
std
outsb
push
add
cmovno
mov
push
or
push
rcrl
aad
fistl
ret
and
orl
lock
push
push
mov
ja
jbe
addb
loop
test
lds
sti
mov
cmpsl
mov
mov
jno
jb
sbb
mov
mov
loope
cmp
shl
jg
cli
nop
je
push
xchg
rcll
or
xchg
cmp
lock
js
nop
mov
xlat
adc
xor
pop
adc
sbb
mov
or
sbb
das
mov
xchg
in
sbb
int
leave
in
jmp
sub
jb
into
or
jl
jae
cmp
xchg
aam
push
jo
adc
push
out
test
fwait
js
pushl
ss
movsb
mov
cmp
xor
jle
subb
and
ret
inc
sub
and
dec
in
inc
mov
fadds
js
cli
jmp
les
sub
lock
xchg
hlt
cmp
xchg
sbb
mov
aaa
iret
sbb
mov
mov
call
call
mov
sub
xchg
fsubl
outsl
stc
mov
pop
flds
leave
je
orb
mov
js
enter
xchg
adc
into
repz
cmp
aas
jle
or
xor
ja
pusha
or
gs
mov
mov
cmc
jb
and
xchg
leave
xor
cmc
mov
jmp
push
nop
lods
xor
enter
inc
dec
fimuls
cmpsl
sub
jge
repnz
or
push
cmp
jecxz
and
lret
bound
adcb
dec
adc
jnp
mov
in
jns
addr16
fwait
rol
daa
mov
mov
jo
xchg
cmp
std
adc
inc
das
inc
xchg
inc
cmp
shll
outsb
add
mov
addr16
or
adc
push
xor
fcomip
int3
push
scas
js
outsl
jecxz
mov
out
xchg
lret
push
sbb
xor
add
cli
insb
lret
cmp
jl
cmp
sar
out
sub
or
mov
and
inc
fidivl
aas
lret
mov
and
int
push
fsts
pop
push
jl
mov
jo
ret
inc
mov
mov
lcall
mov
xlat
sub
cmc
arpl
add
xchg
iret
mov
mov
ret
andl
lods
int3
ret
cmc
push
xchg
hlt
jo
aaa
pop
insb
push
jge
mov
add
fwait
mov
test
movsb
fsubs
jge
int
sbb
es
push
add
leave
and
sbb
fcom
fucom
call
lock
add
in
jp
fnstenv
hlt
std
das
jnp
or
sahf
lahf
xor
scas
mov
mov
imul
sub
movsl
add
and
cld
cli
jmp
pop
popa
lea
and
xchg
pop
adc
xchg
mov
cwtl
je
out
mov
call
xchg
cli
xchg
daa
in
add
adc
add
movsb
push
adc
xchg
xor
cmp
mov
jo
mov
or
cmp
nop
popf
ret
inc
mov
xor
aad
aam
and
jecxz
mov
inc
sahf
add
aad
mov
mov
fdivp
shrb
loope
hlt
mov
icebp
fs
rolb
jg
xor
or
xchg
mov
bound
xchg
js
das
adc
enter
or
das
sbb
add
int3
testl
mov
pop
sbb
into
stos
or
test
ds
jne
data16
or
sbb
scas
mov
push
mov
leave
push
cmp
lds
push
rorl
cmp
fsubs
mov
cld
in
mov
cmp
insb
xchg
test
mov
sbb
les
mov
iret
test
pop
inc
out
les
cmp
add
or
or
mov
insl
testl
in
xchg
aad
jl
imul
repz
imul
ror
dec
mov
dec
aam
adc
ret
sti
adc
and
push
push
mov
in
cs
adc
cmp
mov
pop
jge
sbb
fucomi
inc
or
insl
mov
jmp
fldenv
mov
gs
mov
les
add
push
jne
pop
das
inc
sbb
int
mov
lods
fucomp
aas
div
mov
stos
mov
xchg
insb
int3
cmpsb
ret
int3
inc
inc
jb
inc
iret
jmp
adc
add
shr
mov
nop
sub
inc
add
daa
push
mov
fiadds
pop
xor
fsubs
in
in
or
pop
push
add
arpl
or
ficomps
jnp
dec
pushf
adc
movsl
sub
in
ds
or
sub
sub
xchg
xchg
adc
and
mov
fstl
mov
rcrl
xor
repnz
adc
enter
fidivl
test
movsb
push
les
pop
and
push
mov
adc
sub
push
testb
scas
mov
mov
or
xchg
jbe
das
cmp
push
in
pop
mov
sbb
xchg
mov
jle
adc
pop
int
xchg
mov
xchg
inc
scas
rorb
scas
daa
in
jp
pop
cmp
insl
xchg
imul
jnp
xchg
xchg
pop
pusha
jbe
insb
cmpsb
mov
lock
les
pop
pop
sti
or
mov
sbb
add
jg
and
sti
insl
xlat
push
mov
and
inc
jmp
sbb
sti
je
ljmp
sub
cmp
mov
mov
addr16
xor
add
cmp
mov
int3
pushf
ljmp
inc
addr16
pop
add
data16
mov
and
sbb
cmp
mov
pop
jg
xchg
sub
stos
dec
scas
stos
in
pop
cwtl
gs
mov
push
and
mov
popa
sbb
push
sbb
adc
stos
cmp
jo
dec
adc
sbb
mov
jp
enter
jl
pop
jle
mov
push
stos
aam
jno
incl
rcrl
xlat
dec
adc
jb
push
cmp
pop
cmp
dec
and
pushl
inc
mov
test
inc
inc
mov
xchg
push
fmuls
imulb
jmp
and
mov
ljmp
popa
mov
pushf
ret
stos
hlt
xchg
jb
ret
aad
push
rcll
jle
push
jmp
cld
addr16
mov
pop
aas
inc
pushf
clc
xor
pusha
xchg
mov
adc
inc
xorb
out
insb
ret
and
outsl
mov
dec
cmp
mulb
fidivs
push
push
adc
adc
add
push
xchg
jb
adc
sub
repnz
mov
pop
test
lcall
push
jge
fld
outsb
shll
cmp
lods
shll
iret
popa
xchg
jne
ja
pop
jo
jmp
cwtl
clc
push
lds
sahf
jg
jne
cmp
fstl
sbb
sbb
dec
int3
cs
xchg
clc
add
pop
shlb
jae
xor
jecxz
out
fnstcw
mov
cli
iret
adc
les
sub
mov
shrl
ja
je
rcll
sub
ffree
mov
dec
or
sub
dec
add
dec
mov
push
adc
push
mov
push
push
pop
jp
cld
movsl
xor
jnp
ds
and
adc
loope
jecxz
or
mov
add
stc
cmp
push
pusha
mov
shll
daa
dec
xchg
fsub
xor
rcrl
inc
jns
hlt
ss
punpcklwd
mov
in
insb
leave
push
push
in
mov
fwait
out
add
lods
in
mov
mov
add
sub
push
mov
arpl
dec
in
mov
lahf
push
ror
sbb
mov
cltd
out
add
mov
jb
mov
pop
shrl
imul
cmp
or
call
push
pop
enter
cmp
aaa
cld
loopne
dec
mov
repnz
add
mov
push
clc
shrb
pop
into
popa
and
data16
and
push
ret
or
int3
sbb
mov
cmp
add
iret
sbb
dec
in
ja
mov
jno
popf
notl
js
jmp
mov
lret
in
pop
out
fwait
sbb
jnp
movsl
iret
out
xorl
inc
sub
xchg
notb
jnp
cmc
out
out
nop
mov
mov
jne
lahf
testb
lret
lods
add
inc
aam
rcrl
xor
std
icebp
insl
mov
sub
sub
lret
pop
push
ret
stos
pushf
shrl
nop
add
or
ds
mov
inc
add
or
aam
lock
adc
mov
pushf
subb
in
ja
in
cs
stc
sub
loope
loope
test
sub
push
fildl
pop
in
push
fsubrl
imul
loopne
roll
rorb
mov
lds
movb
addr16
shr
pop
push
mov
jmp
mov
jle
enter
aas
lret
inc
int
pop
aas
jae
inc
add
dec
enter
cmp
daa
in
ja
hlt
cmp
pop
xchg
fsubl
divb
pop
mov
push
cmpsl
pop
dec
rcrb
pop
shrl
xchg
dec
fldt
sub
clc
sub
pop
pop
jecxz
cli
lock
adc
pop
mov
xchg
out
vcvtsd2usi
xor
les
out
iret
out
cmc
push
ret
add
scas
mov
mov
and
mov
rcl
xchg
adcb
sbb
loopne
sbb
add
mov
push
push
insl
pop
pop
es
popf
mov
jl
push
adc
out
adc
push
pushf
jecxz
inc
aam
sub
addl
jns
lcall
sbb
in
mov
mov
dec
inc
mov
loope
lock
rcrb
xor
sbb
ljmp
jg
adc
pop
enter
dec
testl
ja
shll
dec
sbb
add
inc
test
inc
filds
mov
or
jge
outsb
or
outsl
mov
call
test
pop
idivl
insb
shrb
scas
repz
mov
sbb
or
flds
imul
jnp
sbbl
popa
xchg
mov
addb
mov
mov
mov
scas
test
jecxz
inc
push
movsl
mov
fistpl
shll
jb
outsb
mov
movsb
sub
and
loopne
roll
pop
sub
and
call
cmp
push
out
lods
outsb
dec
int3
dec
jo
inc
insb
sub
cs
stos
outsl
out
js
jl
dec
jecxz
mov
lea
enter
std
sub
inc
cwtl
pop
lock
fiaddl
add
rcr
xor
mov
or
sbb
mov
popf
popf
push
std
mov
or
ret
ret
das
inc
idivb
adc
mov
cli
add
int
repnz
clc
cld
or
dec
mov
xchg
xor
push
lods
push
or
adc
and
cmp
in
push
inc
jnp
shlb
stc
jbe
int3
loop
sbb
pop
pop
sbb
pop
lcall
cmp
bound
jnp
imul
dec
jns
mov
mov
movsb
mov
dec
jae
sub
mov
push
adc
pop
jo
repz
sahf
sub
and
aam
stos
aas
jmp
sub
jecxz
xchg
cld
in
cs
nop
jp
das
xchg
mov
sar
fs
or
pushf
das
dec
mov
imul
xchg
cmp
pop
loopne
dec
aaa
sqrtps
sbb
or
push
cwtl
sbb
lret
outsb
jo
adc
fldt
dec
xor
jl
test
adc
test
sub
loope
sbb
jne
cmp
mov
cmc
mov
jle
sub
adc
sub
stos
sahf
or
sub
xor
push
jae
out
lahf
jmp
sbb
mov
scas
push
inc
icebp
pop
scas
sub
aaa
jns
in
mov
cmpsl
outsb
xor
xor
dec
dec
not
inc
and
xchg
loope
loop
movsl
or
or
rorb
pop
sub
lock
jae
push
sub
or
out
push
mov
dec
lahf
jno
push
das
call
cmp
aam
testb
imul
test
movsl
das
dec
dec
shlb
jb
lock
adc
push
aaa
add
mov
les
aaa
xor
fists
stos
mov
int3
rol
add
data16
out
sub
in
insb
daa
dec
mov
add
mov
push
js
pop
lcall
mov
pop
pop
es
cmp
outsl
add
xor
popa
int
xchg
adc
jne
into
pop
and
notrack
pop
add
push
cmpsb
sub
cld
pop
mov
mov
or
andl
out
les
jle
add
jle
call
xor
pop
lds
fs
out
mov
shll
inc
mov
dec
pop
push
bound
sub
cli
mov
push
in
and
in
mov
and
mov
pop
aaa
xchg
xor
lock
sub
adcl
mov
push
int3
jnp
pop
add
mov
cli
je
push
jo
jo
in
push
mov
movsl
push
mov
ret
out
sbb
and
adc
loope
add
mov
cld
imul
or
add
mov
notl
pop
xchg
in
test
cmp
jl
dec
sbb
pusha
sahf
mov
es
mov
inc
in
add
fwait
push
in
lcall
push
pusha
push
adc
xchg
lea
xor
mov
shlb
jl
sbb
mull
std
push
mov
orl
hlt
popl
test
mov
fnsave
push
sub
fldt
dec
xchg
dec
pop
xchg
xor
jns
push
dec
cmc
mov
jbe
sbb
mov
ds
mov
icebp
dec
and
shll
ljmp
into
sbb
dec
arpl
sub
sbb
out
lds
shlb
cmc
test
out
inc
sbb
or
jle
fildl
filds
sbb
and
dec
call
xchg
adc
and
enter
pop
jmp
out
pusha
int3
je
inc
loope
dec
pop
pop
adc
orl
movsb
sahf
jge
insb
push
sbbl
lret
lock
gs
pop
test
xor
lods
in
adc
in
mov
pop
cmpb
inc
mov
into
sbb
sarb
lcall
insl
sub
addr16
or
popa
pop
cmp
jecxz
push
fadd
imul
fnsave
daa
lahf
mov
sti
mov
jb
repnz
sbb
mov
ret
xchg
mov
add
roll
stos
xchg
xchg
cmp
sbb
bound
mov
jge
mov
fldcw
lods
sbb
bswap
pop
cld
mov
cli
js
lds
xchg
xor
lock
mov
std
loop
or
jo
adc
push
pusha
daa
pop
iret
cmc
mov
cmp
jp
aam
in
js
lret
sti
inc
loopne
dec
inc
lret
int
out
gs
xor
dec
pop
push
pushf
mov
dec
or
leave
or
and
fneni(8087
arpl
push
cmp
popf
aam
aam
cwtl
dec
into
imul
fwait
cmp
jmp
mov
push
pop
mov
and
sub
std
jns
ja
repnz
repz
nop
loop
sahf
jmp
xor
adc
adc
inc
inc
xor
xchg
movsb
andb
sub
mov
or
sub
mov
sbb
mov
dec
loopne
xor
sarl
pusha
and
mov
xor
rorb
or
mov
popf
lret
mov
jle
nop
loop
test
jb
ds
mov
xchg
xchg
cmpsb
dec
popf
lods
decl
lcall
mov
cld
add
test
mov
jae
cmp
dec
adcb
dec
jg
dec
fisubrs
cltd
or
sbb
cmp
mov
inc
das
push
dec
fcmovnb
xchg
fstp
mov
andb
xchg
aaa
xchg
into
jnp
push
lods
nop
adcb
scas
mov
cmp
mov
jmp
sti
jg
jnp
jnp
loope
insb
test
jnp
out
and
cmc
fdivrs
loopne
addr16
lcall
sub
enter
inc
repnz
mov
lods
mov
xor
jne
fisubl
jmp
push
in
mov
jns
cltd
sub
pop
rcl
cmp
jg
fdivl
enter
and
shrw
push
les
push
mov
fwait
std
fsts
push
inc
sar
adc
es
xchg
dec
in
mov
iret
hlt
jge
mov
fidivrl
movsb
ret
scas
out
sbb
cwtl
cld
movsb
cli
mov
add
sbb
pop
enter
or
xchg
sbb
loope
ja
xorl
fcoms
mov
cs
pop
xchg
jle
fsub
or
adc
sti
mov
xchg
push
push
mov
dec
int
int
mov
or
xchg
sub
xchg
pop
roll
sbb
and
jns
ficoml
sti
sub
test
clc
lcall
leave
and
sbb
in
stos
jecxz
lret
adc
mov
or
in
push
test
lods
xchg
cltd
mov
adc
xchg
pop
test
je
jnp
inc
iret
pop
mov
sbb
stos
adc
and
mov
es
xchg
jmp
mov
fxtract
test
cmp
jge
ja
jo
mov
push
inc
or
iret
cmp
out
mov
cmc
dec
cmpsl
xchg
mov
ret
push
adc
roll
add
and
pop
int
sbb
bound
pop
push
mov
out
pusha
add
dec
push
lahf
mov
mov
adc
xlat
pushl
pop
hlt
test
jno
pop
inc
cmp
adc
loopne
and
lret
lods
pop
or
int
rol
cmp
push
cltd
in
enter
xchg
sahf
popf
jb
adc
out
test
xchg
inc
out
test
xchg
xor
xchg
or
inc
jp
lahf
xchg
lcall
cmpsl
into
sub
ja
push
mov
push
mov
mov
mov
lret
movsl
inc
pop
out
sub
mov
cld
pop
fs
ret
mov
jp
push
xchg
ljmp
dec
sbb
hlt
mov
ret
sbb
shll
out
into
cltd
add
adc
cmpsl
popf
add
mov
test
sbb
or
popf
sbb
mov
out
jg
adc
jmp
mov
pop
adc
pop
loope
cld
gs
std
repz
lds
pop
lahf
cmp
pushf
xchg
jp
test
negl
sbb
jo
insb
xor
mov
cmp
je
jmp
ja
mov
out
push
out
aas
pop
push
add
xor
inc
popf
or
push
lds
cmp
stos
or
out
push
push
jecxz
push
adc
dec
xor
xchg
stos
add
rcrl
jno
pop
ljmp
pop
mov
aad
mov
out
jecxz
dec
ret
sbb
sub
stos
sub
sub
xchg
scas
mov
sbb
mov
sbb
or
gs
pop
loop
push
jae
lds
fwait
mov
rcrb
sbb
mov
inc
std
and
rcrl
xor
lods
mov
clc
ja
inc
les
test
fildl
das
sar
sbbb
out
and
cmp
test
sub
mov
and
mov
loopne
add
inc
jg
xchg
stc
cmpsl
enter
js
stc
lret
shlb
and
ret
mov
out
adc
aad
test
mov
pop
xlat
inc
xor
jmp
mov
data16
cmp
imul
lods
push
add
adc
pop
cmpsb
and
insl
xchg
arpl
xchg
mov
rcrl
mov
sub
ret
mov
mov
aaa
in
in
pop
cmp
cmp
aam
adc
sub
add
ja
push
mov
inc
mov
in
mov
lods
push
fiadds
fwait
jnp
mov
repnz
dec
hlt
lret
mov
test
jne
push
sbb
xchg
stc
xor
mul
dec
pop
jmp
aas
mov
inc
hlt
inc
popa
inc
jbe
sub
push
sbb
outsb
sub
movsb
jne
mov
push
clc
incb
in
mov
mov
nop
xchg
in
je
lods
pop
arpl
in
dec
xor
sub
gs
push
std
jmp
nop
add
testl
cmp
pop
or
je
test
iret
in
push
hlt
int3
mov
loope
pop
dec
arpl
imul
dec
push
mov
outsb
mov
push
lahf
stos
push
fstpl
ret
jmp
jl
push
stos
hlt
jg
dec
std
and
ret
loop
ja
xchg
das
enter
xor
mov
fwait
out
repnz
adc
mov
rolb
mov
fwait
mov
pop
jle
jb
cwtl
call
push
xlat
clc
cmp
jg
dec
xor
mov
movsl
jle
cmp
dec
subl
lcall
push
mov
xlat
daa
push
js
data16
cmpsl
enter
cmp
pop
xchg
js
pushf
out
lret
and
inc
or
ret
mov
iret
adc
and
jle
add
pop
icebp
scas
lea
jmp
andb
and
out
and
ja
mov
out
jo
pop
adc
popa
out
push
loopne
mov
popf
jle
and
iret
inc
pop
xor
and
fwait
in
gs
ds
int3
fstpt
sbb
push
xor
sbb
mov
mov
pusha
or
call
mov
cmp
inc
add
mov
pop
xchg
mov
daa
jge
fbstp
cmpsb
lea
lock
sbb
pop
shll
adc
les
fistpll
push
mov
jcxz
stos
out
pop
cmp
add
adc
sbb
and
pop
hlt
in
lret
pop
adc
xchg
dec
add
out
inc
inc
test
jbe
and
sbb
mov
in
jne
ret
mov
ret
mov
lret
xlat
in
fidivl
mov
gs
inc
orb
pop
mov
loop
ret
or
mov
test
xor
add
fdivrs
sahf
dec
jmp
andb
imul
pusha
arpl
scas
movsb
sbb
jl
inc
add
lcall
sbb
xor
stc
in
in
insb
xchg
daa
pop
and
xlat
xor
xchg
cltd
icebp
xchg
fwait
sbb
mov
stos
sahf
pop
cli
pop
shl
cmpsb
sub
jl
xchg
out
insl
out
fsubrp
test
jmp
mov
xor
pop
and
dec
mov
imul
jecxz
daa
mov
xor
push
mov
jo
cmp
pop
ss
xchg
bswap
pop
jno
adc
and
sub
xchg
add
push
ljmp
sub
mov
add
sub
xchg
lahf
out
inc
out
arpl
mov
xor
dec
lret
sub
addr16
ror
and
mov
sbb
mulb
mov
mov
cwtl
xchg
push
push
scas
test
dec
in
xor
dec
cmp
movsb
jg
jl
or
pop
std
dec
daa
sbb
dec
les
and
mov
xchg
mov
imul
out
xchg
adc
push
scas
mov
shl
pop
push
shrb
mov
push
mov
mov
mov
jae
push
mov
arpl
pusha
mov
loopne
sbb
cmp
push
shll
shl
adc
pop
inc
pop
fucomi
and
cli
lds
inc
enter
dec
lahf
mov
shl
cmp
xchg
pop
test
les
xchg
xchg
mov
emms
jl
ja
push
inc
out
pop
mov
add
xchg
mov
add
popf
xor
xorps
int
ffreep
bound
stos
aaa
ficoms
sbb
and
outsb
xchg
inc
inc
lahf
mov
aam
pop
mov
mov
sub
or
test
sub
xor
mov
inc
jbe
fs
fbstp
pop
mov
add
std
or
add
jb
jmp
jb
in
ljmp
js
and
pop
sbb
inc
sti
push
cmp
jecxz
mov
push
xchg
sbb
movsb
mov
xchg
or
sbb
add
mov
xchg
out
sub
ret
sub
inc
dec
sub
cmpsb
add
mov
push
out
pop
and
repnz
sub
sarl
or
aas
xchg
lahf
push
lds
repz
lret
add
mov
push
inc
adc
xchg
or
out
leave
inc
dec
sub
dec
mov
xchg
ret
jnp
rolb
push
push
add
mov
add
out
lods
xor
xchg
sub
imul
sahf
ljmp
orb
je
das
xor
lcall
in
jb
and
mov
xchg
fildll
pop
xchg
sub
or
in
xchg
loopne
inc
adc
push
sub
shlb
addr16
mov
sbbb
push
xor
lds
or
jbe
adc
or
dec
out
and
dec
xchg
dec
inc
pop
dec
mov
mov
in
pop
arpl
pop
js
leave
aaa
in
and
xor
nop
mov
iret
pop
movupd
repz
outsb
adcl
push
pop
aas
add
and
jmp
add
out
lods
inc
popf
push
or
mov
fidivrs
in
sbb
outsb
incl
movsl
lea
add
popa
jecxz
lds
std
adc
stc
mov
test
push
rcl
xchg
fcmovnbe
and
mov
pop
out
int3
or
adc
rcrb
das
sbb
fs
jne
lret
sbb
pop
mov
push
clc
fs
jecxz
push
daa
test
test
outsl
mov
repz
xchg
mov
clc
enter
inc
sti
ret
lods
negl
add
mov
daa
lcall
lahf
mov
loop
adc
push
mov
nop
in
fcoms
loop
ljmp
inc
repnz
sub
out
sbbl
sbb
adc
and
movsb
je
hlt
jne
stos
or
mov
mov
xchg
add
cld
repnz
inc
inc
loopne
jae
sbb
dec
decl
and
lods
adc
jae
shr
scas
sarb
mov
cltd
adc
fwait
mov
push
out
icebp
popf
dec
sub
jno
out
pop
and
adc
je
dec
sub
mov
fisubrl
movsl
push
repz
or
pop
sbb
and
icebp
pop
xor
test
movsl
outsl
add
xchg
xchg
aad
stc
lock
dec
loop
push
adc
jno
imul
leave
or
push
shll
test
sbb
mov
cmp
ljmp
cltd
sarl
sub
sub
jbe
shrb
sub
mov
jge
sub
sahf
mov
ret
sub
mov
insb
jb
push
icebp
pop
repnz
mov
jg
and
clc
mov
dec
out
rcr
gs
scas
or
inc
fcmovb
stos
fidivrs
dec
call
cmc
add
adc
das
fidivl
aaa
imul
fwait
aad
sarb
mov
stos
and
jp
lods
std
sub
bound
jns
repz
dec
xor
push
out
xchg
rcr
push
cmp
repnz
shll
lods
inc
pop
leave
mov
js
ljmp
fisubrs
orb
adc
sbb
out
xor
movsb
jnp
sahf
call
jl
cwtl
test
mov
data16
enter
inc
jle
inc
into
jbe
mov
and
repz
inc
pop
loopne
mov
lret
test
pusha
aad
sub
jmp
lcall
mov
lods
outsb
pop
in
out
xor
add
clc
jmp
add
dec
enter
in
push
xchg
insb
xor
jno
pop
pusha
insl
rcr
loopne
adc
divb
jecxz
jns
shll
mov
imul
mov
pop
fs
das
mov
orl
repz
shll
dec
popf
dec
dec
pop
nop
inc
loopne
mov
mov
jbe
dec
and
add
push
and
pop
jns
popf
dec
stc
dec
frstor
pop
cmp
add
das
lret
jge
xchg
cmp
ret
mov
test
loope
repnz
jmp
imul
pop
xor
jno
imul
xchg
mov
inc
sbb
push
loopne
sbb
add
inc
lea
sahf
int
sub
jl
adc
mov
and
xchg
cmp
cli
or
cmpb
and
and
dec
push
or
out
cmp
out
mov
popa
in
push
cmp
repnz
imul
ljmp
rclb
dec
jecxz
dec
add
pop
fdiv
into
mov
sbb
rol
movsb
mov
pop
cmpsl
outsb
outsl
jecxz
aas
mov
lea
mov
sarb
jl
flds
dec
and
xchg
mov
das
xchg
inc
sub
or
mov
lods
pop
pop
ja
adc
push
stc
fwait
cmp
inc
dec
xlat
aam
push
repnz
addr16
inc
imul
js
and
lock
push
jmp
nop
jg
add
push
and
sub
cld
jecxz
ljmp
mov
mov
lods
inc
pop
inc
mov
jae
xlat
cmpsl
pop
adc
cmp
jo
adc
adc
lahf
adc
into
xlat
lret
pop
jno
sbb
jp
ja
and
ret
scas
sarb
adc
xor
inc
sti
loopne
sub
mov
scas
or
pop
ds
mov
xor
pop
xor
or
bound
and
mov
test
sub
in
int
pop
shl
xchg
lcall
call
inc
shrb
xchg
pop
das
sbb
and
push
cmpsl
addr16
mov
test
sbb
aas
ljmp
popa
test
xchg
jl
jl
add
fwait
cmp
dec
xlat
loop
mov
inc
xchg
in
dec
mov
xor
fisubl
add
out
out
out
nop
xor
mov
idivl
jnp
repz
cli
or
cmp
push
mov
outsb
rcll
fdivr
test
pop
push
incl
sub
cmpsl
mov
adc
jmp
fcomip
dec
cmp
aam
lock
in
jmp
adc
push
add
fxch
cmp
fidivrs
jmp
daa
adc
fwait
dec
scas
adc
sbb
loop
and
sub
mov
fldt
inc
xchg
rorl
xchg
not
xlat
insb
mov
in
add
pop
in
scas
outsl
jb
xchg
outsl
insb
je
ficompl
adc
mov
push
jnp
adcl
jno
scas
mov
lea
mov
shlb
fcoml
ret
inc
loopne
xchg
jo
dec
xchg
insb
add
mov
enter
and
outsb
lret
outsb
addb
fimuls
in
and
popa
lds
xchg
loopne
cltd
pop
addr16
push
lods
inc
xlat
jp
cli
xchg
repz
mov
jo
ret
mov
xchg
adc
pushf
cld
movsb
lea
push
dec
push
jno
sub
negl
ret
test
fwait
xchg
and
out
or
push
cmp
sbb
ret
ljmp
loopne
jp
cld
pop
cltd
cltd
sbb
sub
gs
sub
nop
adc
aaa
hlt
jle
pop
dec
and
pop
lret
sbb
mov
scas
and
push
adc
das
arpl
dec
mov
ljmp
out
stos
or
insl
dec
in
pushf
push
xor
adc
sub
cmc
pusha
sarb
xor
or
sti
je
dec
jns
or
cmp
cmp
loop
loop
icebp
xchg
loop
adc
dec
cs
lods
jp
nop
lock
mov
jne
inc
adc
xor
adc
pop
jnp
jno
icebp
aaa
sub
in
and
scas
pusha
test
pop
mull
test
jo
cld
pusha
inc
loop
mov
jge
movsl
mov
dec
cmp
jmp
cmp
shrb
push
stos
popf
jg
mov
and
push
dec
dec
bnd
arpl
icebp
pop
lcall
mov
ret
aaa
aad
in
dec
out
leave
enter
and
inc
jge
addr16
rcll
cmpsl
xor
mov
jne
mov
xlat
or
cmpsb
lods
js
aaa
dec
popa
jmp
loopne
add
das
mov
xlat
in
add
adc
sbb
mov
pop
and
sbb
xchg
inc
mov
lea
data16
push
inc
lock
movsb
inc
pop
notl
and
push
pcmpeqb
jbe
outsl
daa
rcrl
jl
push
aad
push
add
or
mov
jns
lret
push
rclb
xchg
std
cmpsb
push
sub
mov
fwait
insl
pop
dec
xor
xorb
sbbl
pop
subb
enter
jb
and
mov
je
lret
sub
dec
mov
xchg
ds
mov
repz
jecxz
pop
shll
jne
push
jo
lock
push
sbb
rcrb
push
cmp
int
push
fldl
ja
incl
test
fcmove
dec
mov
divb
andl
cmp
xchg
xchg
dec
scas
iret
repz
fistpll
push
push
xchg
xchg
push
add
cmp
das
pop
sub
ss
mov
push
xor
inc
xchg
sbb
mov
aas
jp
js
mov
rcrb
push
call
sub
inc
inc
out
add
inc
mov
ss
fisttps
iret
outsl
out
mov
inc
adc
fidivl
ja
movsb
xlat
les
cmpsb
xchg
sub
lahf
out
in
out
jb
ffreep
mov
aam
xchg
pop
push
aas
pop
mov
jl
push
inc
sbb
std
or
repz
idivl
adc
lds
xor
xchg
in
xchg
pop
xor
pop
add
icebp
fbld
and
xchg
pop
jno
xor
xor
or
nop
jecxz
fwait
or
mov
scas
pop
jnp
adc
int3
fildll
out
lret
int3
aad
je
frstor
mov
jo
and
xchg
jp
or
jb
jle
loop
jle
icebp
add
std
repnz
dec
mov
outsl
jl
cmp
jp
gs
lcall
add
lret
and
repz
xchg
rorl
jle
cmp
fxch
and
xor
cmp
xchg
lret
add
and
add
cli
inc
lea
call
push
xchg
jecxz
adc
loopne
or
pop
dec
mov
mov
lcall
in
inc
push
inc
pop
cmpb
iret
and
and
fstpl
push
sub
aad
inc
mov
cmp
inc
insb
xchg
mov
out
out
cmc
sub
popf
das
jae
movsl
insb
mov
lods
addr16
dec
and
aam
scas
or
add
out
xchg
aas
jle
mov
ret
cld
xor
mov
scas
into
pop
shll
lock
stos
mov
sbb
movsb
fisttpl
jno
push
popa
xor
jmp
pusha
das
sarb
mov
stos
push
aaa
fldcw
sub
push
test
je
pop
add
ja
mov
sbb
sbb
hlt
sarb
inc
ss
and
cmp
fisubs
xchg
pop
xchg
add
icebp
lea
mov
shrb
xchg
dec
test
daa
inc
mov
sbb
sti
sbb
lahf
mov
jnp
iret
fidivs
jle
push
cmp
xchg
aad
movsl
inc
scas
mov
divl
cmc
ja
fsubrp
neg
icebp
sbb
test
cmc
pop
fstp
inc
mov
or
iret
sbb
insl
dec
xlat
add
inc
sbb
push
out
mov
lods
into
fdivrs
into
jp
xlat
clc
xor
sub
push
jmp
mov
enter
fwait
or
int3
incl
cmp
dec
adc
and
repz
in
dec
and
dec
push
imul
dec
repnz
mov
xchg
add
insb
jbe
sub
repz
cmc
jecxz
and
das
jmp
in
xchg
mov
jo
pop
jl
push
push
es
arpl
and
movups
jb
pop
sub
sahf
test
sbb
fistpl
in
es
loopne
add
out
jmp
xchg
xor
mov
sub
and
add
insb
jno
filds
cltd
sti
imul
into
arpl
sbb
or
sbb
insl
jnp
ret
jae
inc
adc
lds
jmp
in
push
push
aam
jmp
pop
shl
push
mov
in
xchg
sbb
cmp
fwait
cmp
icebp
inc
lods
push
mov
mov
or
fsubrl
push
mov
inc
add
add
xor
cwtl
movsb
jb
pop
jae
clc
ficoms
add
mov
cmp
sbb
pop
xor
fsubrl
test
and
add
inc
push
pusha
ror
icebp
out
and
sbb
add
adc
imul
icebp
icebp
push
add
jb
inc
jae
pop
xchg
xor
add
jnp
xchg
push
sbb
call
push
push
mov
push
lahf
in
dec
add
lods
idivl
push
xlat
insb
xchg
pushf
fidivl
lcall
inc
movsb
lds
fisttpl
pop
mov
mov
jecxz
pushl
inc
mov
inc
out
js
inc
jecxz
aaa
xor
mov
cmp
mov
lea
sahf
mov
dec
lret
stos
xor
and
jle
in
sahf
xchg
dec
insl
arpl
jp
push
sub
adc
mov
sarl
lret
pop
pop
enter
test
cwtl
lods
mov
in
add
ja
jmp
and
mov
sub
push
addr16
pop
jle
add
subl
stos
mov
scas
insl
or
push
xchg
pushf
dec
ss
in
mov
mov
xchg
mov
push
xchg
jbe
pop
inc
inc
xchg
jmp
push
outsl
add
xchg
test
cs
lds
add
inc
adc
dec
or
sbb
dec
pusha
cwtl
xor
pop
aam
stos
pop
clc
or
orb
out
je
add
sbb
pop
push
jno
fwait
add
into
push
das
std
add
push
xchg
enter
rcr
dec
outsb
sub
jns
je
cmp
test
cld
lds
mov
push
inc
sub
jmp
addr16
xor
xchg
test
popa
ret
mov
push
cmp
popf
and
ljmp
cli
repz
or
or
jmp
div
mov
arpl
scas
sar
dec
sbb
pop
lock
imul
data16
cmpsl
pop
dec
or
xlat
out
push
cmp
in
jo
xlat
cmp
imul
adc
repnz
pusha
xor
ret
cwtl
pop
adc
push
sub
adc
in
mov
adc
js
clc
sub
ret
push
mov
aaa
jmp
std
icebp
mov
mov
jb
out
mov
ss
leave
test
sub
mov
and
shlb
dec
pop
jae
aas
pop
mov
cltd
in
jge
or
fisubrl
jmp
pop
and
cld
sbb
adc
jo
imul
pop
outsb
iret
imul
mov
leave
jb
imul
mov
mov
pop
mov
jmp
dec
jb
daa
push
pusha
xchg
fwait
push
testl
xchg
dec
cs
sbb
adc
in
jl
clc
mov
lret
jge
push
icebp
js
test
daa
bound
movsb
push
dec
pop
and
xchg
in
ucomiss
xor
add
sbb
and
lahf
xor
mov
mov
mov
mov
je
jmp
pop
and
rorb
fidivl
mov
pop
pop
out
pop
ror
adc
push
mov
out
pop
sbb
addr16
enter
or
fdivrs
jl
into
cld
insb
cmp
out
loop
out
imul
jbe
xchg
call
mov
xchg
pop
frstor
mov
inc
pop
xchg
jne
das
pop
aas
out
in
fwait
out
hlt
and
pop
ficompl
or
fwait
loope
sti
in
push
and
outsl
aam
stos
sbb
mov
jmp
mov
jnp
pop
mov
test
push
xor
pop
sub
loop
andl
std
xor
fs
mov
sub
cmp
mov
inc
arpl
mov
jecxz
add
sbb
mov
hlt
icebp
notb
mov
and
jle
in
iret
push
pop
sub
dec
push
sub
inc
xchg
lods
decl
dec
stos
jae
mov
movsb
sbb
clc
mov
shrl
and
add
mov
jno
and
call
mov
arpl
add
bound
push
mov
and
outsl
test
and
loopne
push
mov
fstp
sar
add
mov
jbe
and
mov
cld
mov
aam
xchg
dec
push
xor
and
or
dec
int3
int3
dec
scas
adc
sub
pop
push
or
movsb
lods
jecxz
mov
inc
scas
fiadds
adc
out
jmp
inc
mov
jmp
aam
sbb
push
jge
push
jmp
mov
push
aad
xor
xchg
jbe,pt
divl
push
xchg
pop
mov
fs
add
mov
pop
pop
out
loop
add
mov
test
adc
leave
sub
pop
mov
aam
gs
lods
jmp
ja
scas
jg
sbb
sub
mov
xorl
pop
clc
mov
lahf
out
stos
scas
sub
int3
loope
outsl
stos
fisttpl
xchg
ss
aas
je
dec
daa
inc
mov
sub
orl
pop
jbe
pop
xchg
mov
push
dec
adc
scas
lret
lock
ljmp
pusha
sub
mov
sbb
xor
cmp
cmpsb
push
jo
or
inc
iret
and
and
cld
xor
mov
negl
jp
mov
cmp
pop
and
mov
xchg
cmp
lahf
sti
cmp
inc
pop
or
sbb
cmc
mov
jbe
orb
js
mov
cmpsb
jge
and
shrb
push
xchg
lds
inc
push
mov
lock
push
mov
lret
mov
jbe
cmpsb
xchg
scas
push
inc
sbb
adc
fldenv
pop
lret
xor
out
clc
and
push
mov
fdivs
mov
shll
rorb
movsl
leave
xor
xchg
cmpsl
repz
mov
inc
cmp
repnz
push
inc
pop
pop
push
sbb
dec
xor
mov
in
sti
inc
push
sti
ret
push
push
out
and
inc
icebp
loop
fsubrs
int
mov
fimuls
fsub
xchg
das
shll
inc
ja
test
push
into
ror
cld
mov
pop
int3
pop
sbb
cmp
adc
pop
mov
test
or
ss
mov
repnz
xor
adc
aaa
add
xor
add
in
repz
add
pop
dec
sub
lret
std
or
sbb
mov
cwtl
mov
xchg
xlat
insb
ljmp
mov
mov
rcl
in
xor
sub
inc
lock
movsb
fistpll
int3
or
add
in
and
cmpsb
sbb
inc
jne
std
dec
sub
xor
jl
sti
icebp
sbb
into
mov
hlt
push
stos
dec
aas
mov
mov
mov
push
fwait
and
sbb
fdivs
loop
sbb
loop
int3
pusha
pop
sub
clc
inc
jae
jle
jle
leave
jle
pop
jp
cmp
push
adc
fdivl
clc
inc
pop
iret
adc
sub
stc
xor
lret
mul
popa
scas
jecxz
dec
jnp
adc
std
xchg
sbb
ljmp
out
mov
add
fwait
sub
xor
push
mov
insl
jg
push
xchg
push
cld
or
dec
cmp
adc
cmp
push
xor
iret
jl
cmp
jns
stos
fisubrl
enter
dec
pop
pop
jecxz
xchg
inc
inc
movsb
fstl
popf
bnd
mov
cmp
je
scas
xchg
shlb
iret
push
xor
dec
sub
push
fistpl
aam
mov
mov
aas
add
addr16
mov
sahf
inc
sarb
inc
jl
out
mov
push
mov
outsl
flds
and
je
mov
mov
cmp
and
dec
lock
adc
jns
push
mov
xor
les
sbb
dec
xchg
cmp
add
stc
inc
add
mov
push
jmp
dec
jb
repz
jno
call
pop
mov
and
iret
xchg
rol
stos
dec
inc
xchg
rcr
xlat
fldt
repnz
sub
adc
xor
sub
mov
or
push
out
icebp
push
mov
sub
xchg
sti
sbb
jl
clc
incl
mov
dec
xchg
int
jg
mov
mov
gs
adc
xlat
bound
pop
sbb
lods
loop
inc
pushf
sbb
mov
jbe
scas
fdivp
into
xor
jno
sub
push
xor
mov
mov
jbe
jge
daa
push
hlt
daa
and
sbb
jmpw
rcr
iret
aas
and
adc
sbb
inc
jnp
inc
lret
jae
jecxz
divl
call
push
fildl
add
inc
ret
adc
out
icebp
ja
test
test
fimull
add
cmp
ret
aas
scas
jbe
repnz
mov
xor
add
ja
enter
fdivrl
cmp
sub
ja
sbb
inc
fs
cmp
fidivrs
add
lock
adc
into
ljmp
mov
xchg
cmpb
std
jle
jp
out
int
jne
jle
stos
cmp
out
fdivrl
push
stos
filds
pop
mov
lds
aaa
leave
xchg
pusha
xchg
xchg
xchg
sbb
fldenv
movsb
repnz
and
cmp
gs
or
jmp
incb
push
adc
jl
inc
mov
in
dec
test
mov
adc
cmp
jge
add
sbb
seta
scas
push
xor
xor
adc
pop
mov
sbb
xor
inc
jg
or
cwtl
jmp
mov
inc
fcomp
rorb
inc
adc
push
je
jle
mov
sti
mov
cmp
xchg
repz
or
rorl
adc
adc
jmp
inc
loopne
shl
test
in
cmp
inc
hlt
je
inc
mov
loope
cmpsl
jne
jp
pop
arpl
das
sti
push
cmpsl
mov
push
jecxz
outsl
lods
jecxz
mov
add
mov
inc
inc
xchg
adc
jecxz
fcmovb
fnstsw
xchg
ljmp
inc
imul
loope
loop
adc
jp
pop
cmp
shrl
mov
mull
aam
inc
test
fmull
outsl
xchg
fsts
xor
fstpt
movsl
clc
inc
pop
cmp
push
xchg
clc
cmpsl
data16
mov
pop
and
and
rcrl
sbb
inc
pop
clc
sub
xchg
pop
pop
mov
das
in
shr
mov
int3
out
mov
or
outsb
aad
in
imul
mov
clc
add
sbb
pop
sub
out
mov
jmp
aas
push
cltd
mov
lahf
inc
lea
cmc
popf
movb
das
and
mov
andl
sbb
adc
lret
mov
call
fwait
dec
sub
adc
mov
bound
cmp
mov
popa
fcmovnbe
iret
adc
add
pop
push
call
repz
lods
lods
movsb
add
mov
jecxz
pop
int
or
aaa
push
mov
sub
add
push
call
mov
or
into
rcrb
ljmp
mov
push
adc
add
and
leave
fmuls
arpl
sub
adc
cmp
pop
in
es
or
gs
xchg
and
jns
subb
pop
xor
cmpsl
lcall
mov
das
pushf
ljmp
mov
stc
cld
shll
xchg
xchg
pop
xchg
movsl
adc
cwtl
adc
aaa
jp
jnp
sub
sub
jge
mov
xor
mov
in
jne
mov
addr16
js
addb
and
rolb
jno
mov
das
add
mov
test
js
ja
lods
es
shll
lret
iret
fisubrl
cs
das
scas
jno
cmp
shr
lret
adc
mov
sahf
sbb
test
int
jne
cmp
fsubl
pop
enter
lea
mov
mov
xor
jb
mov
push
mov
or
mov
mov
sbb
ret
and
mov
dec
xchg
pop
mov
in
shl
xchg
rcrl
xor
adc
mov
loopne
fbld
divb
add
mov
adc
jle
ds
push
test
inc
xlat
mov
push
int
outsl
daa
push
jno
pop
rcrb
pusha
jnp
cmp
shlb
out
rorl
adc
call
mov
push
adc
push
fsubs
call
popf
sahf
stc
add
xor
cmp
sarb
data16
pop
sub
repz
xor
lret
in
or
push
sbb
mov
loope
jecxz
scas
mov
push
in
fisubl
sbb
jbe
pop
adc
ja
inc
pushl
movsl
push
jmp
adc
andl
xchg
scas
subb
bound
mov
mov
mov
add
pop
scas
lods
in
je
mov
arpl
stos
xor
mov
outsl
test
cltd
sub
imul
xchg
xchg
mov
stc
in
cmp
dec
or
fisttpl
mov
dec
sub
dec
add
sub
imul
fs
cmc
gs
mov
mov
xor
jo
inc
adc
shrl
sti
mov
pop
pushf
sbb
andb
jl
flds
rcrb
xchg
lock
jp
cmp
xor
cmpsl
loope
sub
and
daa
fwait
and
xchg
push
das
sbb
adc
dec
jl
test
mov
jp
sub
fdiv
pushf
mov
repnz
jmp
sbb
ss
and
add
mov
stc
dec
xor
div
push
adc
icebp
or
into
mov
cltd
mov
mov
dec
icebp
loope
ds
mov
sub
clc
push
mov
ret
fsubrs
sbb
outsl
xor
pop
repz
sbb
stos
push
dec
xchg
cmp
add
push
jge
jp
pop
pop
jg
sbb
aad
imul
inc
je
or
xor
aad
call
cld
or
jnp
push
lret
cmc
bound
imul
mov
xchg
or
mov
mov
std
push
jbe
dec
push
scas
jne
imul
inc
jecxz
movsw
fcmovnb
mov
sbb
int
and
popf
add
into
mov
jmp
mov
jecxz
add
dec
cmp
inc
cmp
xor
mov
mov
shr
rcrb
test
stos
aaa
add
pushf
test
xor
fstpl
psubusb
or
sub
mov
xor
into
push
out
cmpsb
mov
scas
xchg
push
cmp
fisttpll
test
dec
icebp
mov
arpl
xor
inc
jp
push
repz
cmp
or
or
fwait
or
add
std
mov
jae
in
or
sti
sbb
stc
test
add
push
sarl
sub
pcmpgtb
scas
lock
out
pushf
je
xor
icebp
sub
imul
scas
or
adc
jne,pn
pop
std
jae
push
call
ror
lods
es
push
sub
dec
shlb
popa
xchg
shll
scas
dec
ljmp
adc
mov
push
xchg
aas
mov
mov
cmpsb
push
inc
ret
inc
jmp
and
mov
and
clc
jo
mov
push
int3
pusha
fwait
das
lretw
sti
push
nop
pop
xchg
std
int3
hlt
imul
mov
into
jbe
repz
shl
xor
fcomip
push
cli
mov
mov
mov
dec
adc
add
out
pop
outsb
dec
filds
fwait
and
sub
mov
gs
in
ljmp
mov
mov
lcall
and
popa
out
pop
nop
inc
push
mov
dec
pop
adc
aam
add
jmp
int3
or
mov
inc
inc
loop
stos
pop
hlt
sub
dec
call
jb
and
pop
in
and
adc
outsl
bound
pop
lods
or
push
ss
mov
pop
rolb
test
rcrb
es
sbb
aad
mov
pop
xor
xor
mov
shrl
cmp
push
lcall
jge
outsl
incl
repz
into
hlt
icebp
punpcklbw
or
fisubs
adc
cmc
adc
daa
out
pop
add
mov
sar
in
gs
xchg
in
test
incb
mov
loop
xchg
fisubrs
cmp
mov
aas
cltd
mov
push
dec
mov
outsl
xchg
mov
inc
fmulp
cltd
clc
mov
lods
sbb
aad
lock
xchg
aas
das
loope
dec
and
nop
and
cmpsl
enter
sbbb
fstpl
fcomi
or
and
sub
loop
sbb
dec
push
sub
sbb
mov
xor
or
mov
xchg
dec
push
cwtl
jnp
dec
cmp
movsb
and
movsl
xchg
or
xor
and
xchg
xchg
hlt
jp
das
cmp
add
pusha
push
test
loope
push
fbld
adc
ss
addb
dec
xchg
jecxz
cli
add
sub
fwait
cld
cmp
loope
push
sbb
lods
push
and
mov
or
jl
jle
push
stos
mov
xor
loop
roll
dec
sbb
mov
lods
cmp
into
clc
inc
inc
jg
sahf
imul
hlt
and
sbb
mov
mov
mov
jl
push
sbb
xlat
dec
mov
iret
dec
cmc
or
jnp
movsb
iret
outsb
lock
cmp
leave
pop
int
jle
add
push
inc
fldt
xor
dec
cmp
mov
outsb
adc
aas
mov
xchg
cwtl
inc
sub
ss
cld
dec
pusha
and
dec
jl
adc
mov
sub
in
repz
sub
lea
pop
jle
ss
adc
out
scas
fistpll
pop
loop
push
jae
sarl
popa
ret
push
fistpll
movsl
dec
fisttpl
mov
xchg
and
jo
add
cmc
jae
ljmp
cltd
mov
mov
stos
cmp
xor
in
inc
imul
loopne
or
and
mov
pop
pop
das
mov
xlat
cld
inc
mov
mov
fisubs
sbb
dec
mov
clc
lods
stc
push
shrl
push
cld
push
insl
je
jb
addr16
rcrl
dec
inc
fnstsw
sub
ror
out
rorl
jae
sub
lahf
sbbb
pushf
pop
aad
arpl
inc
or
inc
sub
enter
inc
push
cmpsb
int3
xchg
cwtl
push
std
mov
imul
push
test
insb
clc
mov
loopne
add
dec
xor
cmp
scas
cs
dec
or
lea
lock
aaa
and
clc
push
sub
pushf
das
dec
mov
push
adc
loopne
inc
mov
xchg
jb
jge
mov
fs
test
or
jg
stc
gs
sahf
jg
lret
dec
es
int
and
add
incl
fwait
in
push
mov
lods
inc
cmpsb
ret
je
test
sbb
cld
pop
mov
cmp
jg
cmp
std
mov
pop
adcb
popa
pop
loope
push
and
pushf
dec
fmulp
cmp
fadds
xchg
xor
sub
adc
test
mov
popa
inc
movsl
push
xorb
fimuls
fists
hlt
push
mov
and
lret
mov
and
adc
jmp
sbb
mov
add
push
jecxz
push
repz
adc
test
and
je
pushf
push
jne
js
es
mov
add
sbb
and
lods
sbb
and
and
fdivrs
dec
xlat
int
mov
sarl
aas
xchg
mov
hlt
mov
mov
shlb
pop
or
cmp
pop
sub
adc
and
jmp
xor
or
call
cmpl
mov
mov
dec
mov
add
fidivrs
sti
add
out
es
dec
call
das
or
in
cli
inc
test
adc
mov
and
cs
and
lret
xor
jb
sub
mov
sub
lret
in
mov
dec
call
das
add
inc
and
pop
movsb
jne
jl
fistpl
push
fsts
pop
les
xor
cmp
cs
int3
test
test
jmp
pop
fwait
xchg
cli
cwtl
int3
mov
outsl
adc
jne
jmp
mov
cwtl
pushl
add
jmp
cmpsl
mov
les
call
loopne
pop
loopne
pop
mov
cs
in
mov
andl
daa
xor
mov
jae
dec
pushf
add
std
cmp
test
adc
negl
lahf
ja
daa
addr16
inc
and
loop
out
roll
mov
sbb
cmp
dec
inc
push
nop
push
std
push
cmpsl
and
sbb
testl
insb
jl
xorl
popa
notl
fimull
subb
pop
lahf
mov
and
outsb
mov
aas
out
pop
push
push
or
fistps
jg
push
arpl
sbb
scas
clc
and
adc
add
pop
push
xchg
push
jae
out
arpl
inc
jecxz
pop
xor
lds
push
in
addr16
mov
push
or
faddl
cmp
pop
lea
pop
andb
shl
mov
adc
in
cs
jbe
pop
jp
xchg
mov
fs
cmpsb
sarb
test
push
ja
xchg
loopne
icebp
push
sbb
adc
enter
sub
adc
inc
pop
leave
sub
dec
clc
jno
ret
add
hlt
imul
inc
mov
jno
test
mov
fldt
negb
das
pop
lcall
or
mov
stos
add
inc
xchg
ret
mov
jnp
inc
in
add
pop
mov
and
pop
cmp
test
adc
mov
insb
xor
cmp
pop
cmp
sbb
inc
lods
xor
lods
sub
add
cmpb
inc
andl
mov
push
dec
shll
adc
std
sahf
pop
sub
fdivrl
stos
das
mov
out
test
adcl
loop
add
ljmp
inc
test
lret
insb
repz
mov
call
outsb
ds
mov
add
in
test
xchg
addl
xchg
xor
sub
xchg
imul
std
xor
aas
repnz
icebp
push
sbb
outsb
mov
push
aaa
fistps
mov
sub
mov
push
out
push
clc
xchg
jne
enter
cwtl
adc
ljmp
sahf
add
xchg
test
xchg
les
lret
sarl
cwtl
xor
push
aam
mov
adc
stos
add
jle
mov
cwtl
movsb
leave
dec
pop
ja
jge
popa
test
adcb
sti
push
sub
mov
xor
jbe
jno
add
xor
dec
and
dec
fists
mov
jnp
or
pmuludq
fisubs
stos
and
push
jl
cmp
pop
adc
fcoml
arpl
mov
dec
jl
aas
std
into
and
or
dec
or
lcall
int
shr
gs
xor
mov
fisttps
aad
arpl
pop
icebp
xchg
inc
fsubrs
jmp
pop
sbb
jae
fwait
lcall
out
xchg
imul
add
fcomi
xchg
jecxz
call
or
loopne
or
xchg
adc
fdivs
dec
mov
ret
pop
data16
mov
pop
lock
pop
xchg
sbbl
mov
pop
pop
and
lea
mov
sbb
lods
lods
xor
aas
ljmp
frstor
fdivp
data16
ljmp
insb
into
fcomps
add
scas
icebp
adcl
popf
in
mov
jae
out
repnz
xor
sbb
cmp
pop
xor
sub
mov
mov
mov
mov
aad
cltd
ss
aas
mov
in
stc
scas
or
pusha
and
pop
ffree
xor
pavgb
jmp
fucomp
and
push
stos
cmpsb
or
outsl
repnz
scas
negb
loop
fidivs
add
lods
xchg
popa
mov
xchg
xlat
js
inc
pop
xchg
cli
shrb
aam
jno
push
clc
gs
dec
add
dec
jae
clc
cli
fiadds
dec
mov
jmp
sub
ds
dec
xchg
sbb
cmpsb
cltd
or
inc
xor
pop
mov
les
pushf
cmpsl
pop
mov
and
lahf
mov
outsl
leave
pop
jle
inc
aas
call
xorb
cs
aam
fsub
cmp
sbb
pushf
sarb
sbb
lcall
mov
scas
data16
inc
test
out
mov
or
ret
punpckhwd
pop
and
rorl
stos
adc
sub
add
inc
jmp
cli
out
imul
stc
int3
mov
sti
test
cwtl
dec
shll
mov
xor
mov
andb
mov
popa
pop
jge
ret
fsub
aas
pop
cmp
mov
addr16
popa
lods
lods
cli
pminub
pop
cli
aad
push
shll
test
xchg
cmpsl
lret
mov
cld
repz
ret
or
cmpsl
mov
in
and
movsl
into
dec
inc
push
lahf
adc
out
lahf
pop
push
mov
pop
imul
gs
dec
push
and
fnsave
cli
adc
xorb
mov
and
jbe
mov
jge
decl
sbb
aad
ficoms
into
mov
and
pop
jp
jg
mov
repnz
out
fsubrs
popf
cmp
pop
jp
in
stc
add
sub
mov
cmp
push
add
lea
fcom
addl
jno
int3
xor
ljmp
nop
aas
mov
mov
das
aad
imul
xchg
stos
ja
imul
xchg
rclb
shr
hlt
fldt
xor
mov
dec
in
pop
or
lods
fdivl
test
cmp
cwtl
sbb
sub
cmp
sbb
sub
or
loope
dec
xchg
loop
dec
scas
adc
into
pop
int
addr16
stos
push
push
jne
xor
fcompl
mov
das
lods
mov
xorb
lea
lods
pop
outsb
cmp
rorl
jl
sub
mov
and
call
rolb
pop
jecxz
movsb
sti
xor
andb
add
imul
mov
mov
pop
cmp
push
push
cmp
inc
out
jg
mov
add
mov
cltd
popf
popw
stos
loop
xchg
call
mov
rclb
push
pusha
mov
clc
sbb
push
cltd
inc
push
outsb
pusha
push
out
fs
ja
mov
iret
jb
cmp
outsl
cmpb
mov
fldl
test
push
pop
stc
cmpsb
outsl
or
mov
dec
jecxz
or
lret
aas
sbb
clc
add
jl
cmp
mov
jmp
sahf
cmp
hlt
adc
pop
jno
add
or
adcb
push
add
add
popf
adc
sbb
das
add
out
sbb
or
push
sub
inc
test
push
out
or
sub
idivl
xchg
je
adc
xchg
mov
xchg
mov
cmp
orb
jge
leave
cmp
or
pop
mov
cmp
fstpl
enter
pop
lock
insb
decb
sbb
nop
sbb
sbb
and
sub
stos
pop
jbe
jg
movb
sbb
out
adc
pop
mov
push
mov
ja
sub
jno
leave
mov
in
lods
adc
mov
sbb
sub
sbb
stc
adc
fdivrl
sub
les
rcll
fnstcw
xchg
lock
push
jle
mov
cli
adc
adc
mov
mov
test
push
pop
lret
push
mov
adc
push
jecxz
daa
test
in
dec
in
sbb
and
sbb
lret
sub
stos
or
fsts
mov
outsb
insl
dec
icebp
je
arpl
fucomip
pop
sbb
ja
aas
pop
orl
dec
mov
loopne
aas
bnd
push
xchg
xorl
push
mov
div
ss
add
shl
out
incb
or
je
adc
sbb
call
int3
xchg
test
push
movsl
orb
test
inc
enter
jb
dec
sti
aaa
xor
push
popf
movsb
cmp
mov
leave
enter
pop
and
xlat
xchg
cmp
mov
cltd
or
fnstsw
bound
and
js
fildll
sub
push
dec
xchg
xchg
xchg
cmpsb
inc
cli
mov
add
xor
iret
cwtl
jl
loop
adc
repz
mov
mov
inc
ja
icebp
aaa
mov
je
and
jbe
dec
xchg
mov
mov
mov
and
pop
xor
mov
nop
xchg
xchg
lock
repnz
push
dec
int
cmpsl
sbb
dec
sub
fs
out
clc
fs
cld
daa
dec
dec
push
jp
inc
ret
test
sub
cld
cltd
and
imul
shlb
shll
out
cmpsb
fwait
inc
out
xor
inc
test
repz
scas
add
and
xor
xor
dec
cmp
pushw
pop
shll
pusha
fimull
jge
and
cmp
sbb
pop
xor
fcoml
xor
dec
pop
or
dec
fidivl
addb
xchg
insl
cmpsl
adc
lcall
cld
xor
out
and
push
negl
jae
jmp
pop
mov
imul
mov
sbb
cli
mov
popf
cmp
lock
mov
loope
int
pop
inc
jmp
lahf
mov
xchg
sahf
sbb
in
and
scas
add
mov
incb
scas
loopne
mov
sar
inc
xor
lret
lock
mov
cltd
int3
xchg
sub
ljmp
xchg
sbb
fisubrs
push
ljmp
test
push
in
add
jb
into
ret
cmpb
and
mov
cmpsl
jle
inc
loopne
xchg
orb
jno
cmp
cmp
and
pushf
add
mov
inc
insb
mov
orl
popf
add
adc
insl
popa
jge
mov
stos
mov
dec
push
sbb
lea
outsb
sub
dec
shl
das
and
mov
or
enter
cmp
mov
repnz
adc
js
push
fldcw
call
mov
loop
jmp
pop
dec
and
push
movsl
imul
ret
arpl
lock
out
rep
sbb
cmpsl
iret
imul
push
push
dec
xchg
and
int3
jg
inc
fmul
fadds
les
mov
sbb
adc
ljmp
mov
sbbl
sub
jbe
cmp
mov
adc
scas
or
fimull
add
mov
and
loop
cli
nop
xor
push
xor
jge
addr16
dec
or
repnz
mov
popf
sub
daa
mov
or
or
or
es
sbb
sub
mov
push
mov
mov
pop
or
or
push
jmp
cs
adc
fadd
and
jle
mov
fiaddl
iret
jmp
cwtl
pushf
jp
std
sbb
ret
js
lea
add
imul
daa
pusha
xor
cs
imul
xchg
mov
jb
push
mov
pop
dec
movsl
sub
jmp
popa
fsubl
jg
cmp
lea
adc
or
mov
jp
es
movsb
cmp
mov
fwait
dec
inc
xchg
js
mov
inc
jge
je
sub
sub
pop
mov
aad
in
mov
imul
icebp
lret
fs
add
pop
mov
mov
and
pop
push
mov
mov
cmpl
lret
and
xchg
aad
pop
xchg
or
mov
das
push
rcrl
cmc
cld
negl
inc
mov
add
pop
repnz
push
inc
sub
dec
sbb
push
cld
test
cli
pop
xchg
and
cmp
sbb
mov
jne
and
jecxz
push
inc
lret
xor
por
test
fwait
pop
bound
push
add
hlt
arpl
xchg
shlb
test
pop
gs
in
call
aam
mov
decl
inc
mov
mov
jbe
and
shrl
ss
sbb
repnz
subl
xor
movsb
mov
lahf
fxam
into
add
loopne
dec
jle
bound
add
movsb
inc
mov
or
lret
mov
lret
ds
dec
inc
sub
std
call
sbb
mov
int3
adc
cmpsb
fmuls
pop
inc
push
pop
cmp
mov
inc
or
addb
cmpsl
adc
mov
sti
leave
inc
jge
xor
out
add
les
mov
shl
in
xchg
and
mov
lret
sbb
and
clc
mov
mov
jg
cld
lds
lods
nop
and
push
hlt
pushf
insb
sub
push
stos
mov
inc
mov
sbb
cmpsb
ja
imul
repnz
adc
add
dec
add
dec
mov
inc
inc
addr16
pop
fbstp
cmp
mov
loop
push
cmp
sub
xchg
dec
mov
loope
jo
jns
mov
fprem1
mov
in
fcomi
jns
test
test
jecxz
xor
sbb
add
roll
mov
mov
test
cmp
inc
ja
scas
fimull
int3
stos
sbb
mov
in
pop
fst
jns
ret
mov
lret
fnstcw
fisubrl
xor
lret
lea
pop
mov
xor
je
ljmpw
add
mov
ret
add
xchg
pushf
mov
pop
xor
inc
shrl
aaa
orb
xor
mov
pop
lods
pushf
xor
mov
push
call
add
inc
xchg
pop
vmwrite
mov
jns
or
arpl
cwtl
pop
pop
mov
cli
or
movsl
mov
in
and
mov
jg
cmpsl
and
mov
mov
test
ds
mov
inc
mov
sub
out
jle,pt
sbb
xlat
pop
je
sahf
jno
mov
jae
pop
bound
ret
cld
pusha
and
xchg
jns
test
ret
pop
data16
mov
pop
xchg
ret
fisubl
ljmp
movsb
jbe
sub
mov
push
xor
loopne
idivb
dec
add
nop
es
jg
and
int3
mov
test
dec
jmp
jmp
xor
movsb
js
daa
jge
jmp
les
imul
dec
jo
mov
iret
hlt
icebp
int3
push
jl
setne
adc
push
ret
std
das
ret
xchg
sbb
inc
xlat
inc
lahf
ljmp
stos
into
or
pop
mov
mov
cwtl
mov
jnp
cmp
lock
cmp
xchg
nop
test
add
scas
shrl
xlat
js
push
xchg
sub
repnz
mov
add
std
mov
xchg
xchg
insb
push
jp
das
xor
leave
mov
out
shrl
xor
in
pusha
xchg
mov
iret
mov
add
fwait
cmpsb
das
dec
int
pop
and
push
popa
lea
bound
mov
xlat
and
sub
dec
xchg
mov
jecxz
out
and
stc
lret
push
ret
sbb
jg
fdivrl
in
xchg
jno
aad
pop
ret
xor
loop
xchg
fs
xchg
pop
scas
sbb
push
xchg
xor
mov
loope
push
sbb
ffreep
fcomps
and
sub
enter
and
sbb
stos
sub
and
mov
jne
call
push
jmp
xorb
mov
clc
or
addr16
neg
add
jb
mov
xor
loope
aad
out
sub
xorl
icebp
cld
dec
icebp
pop
test
jo
daa
push
push
fists
imul
xchg
jle
jb
jbe
iret
sub
dec
jg
sub
xor
cld
int3
inc
arpl
mov
rcrb
fcomps
adc
sbb
push
outsl
mov
lods
iret
insb
and
outsb
dec
jne
sarl
fisttps
mov
aad
add
xor
mov
jmp
bound
loop
lods
dec
push
dec
daa
hlt
scas
jb
shlb
psubq
cwtl
decb
sbb
negl
dec
movl
jp
or
leave
pushl
mov
fcoml
fdivrs
sbb
adc
cmp
push
loope
cld
loopne
fnsave
jnp
ja
xor
insl
push
jecxz
jne
push
hlt
nop
adc
jmp
dec
insl
jp
shrb
ds
pop
mov
jb
jo
aaa
push
pop
iret
cmc
jge
xor
and
popf
lds
pop
fistl
clc
ljmp
repz
xor
fdivp
push
ss
mov
mov
mov
xor
lods
loop
sub
mov
jecxz
ljmp
ja
cmp
inc
push
dec
std
sub
adc
ss
mov
jae
sbb
push
loop
adc
pop
int3
sub
mov
mov
fistps
inc
jns
xchg
and
leave
push
incb
and
loopne
add
sahf
or
lret
and
in
xchg
cli
mov
mov
mov
pusha
sbb
shrd
xchg
test
cld
stos
lcall
pop
aam
jecxz
adc
in
ja
in
test
dec
stos
pop
in
or
sbb
shll
push
jecxz
cltd
mov
sbb
out
cmp
out
dec
in
fdiv
out
in
mov
je
sbb
jbe
ja
movsl
pop
loopne
sbb
scas
dec
dec
inc
add
xor
lods
fwait
or
cmp
cwtl
push
decl
or
outsl
cli
test
and
push
adc
push
hlt
ss
xor
test
leave
dec
les
push
in
pushf
leave
push
mov
or
and
ret
iret
hlt
in
enter
sub
xchg
pop
adc
add
ret
shl
repz
es
mov
stc
fiaddl
or
fcoml
cmpl
pop
xchg
lods
mov
in
movsl
ds
push
xor
out
out
cmp
xchg
push
mov
mov
pop
mov
dec
mov
add
jno
xor
movups
sahf
daa
popa
insb
sub
nop
mov
inc
shrl
hlt
stos
jle
dec
orl
icebp
and
js
pop
sti
mov
cmp
stos
jb
add
or
jl
xchg
and
mov
mov
push
add
sti
std
fdivrs
mov
mov
pop
push
pop
mov
cmp
imull
fs
popf
adc
fpatan
test
aad
jno
shrb
jge
loop
and
mov
test
stos
sub
out
sub
mov
pop
movb
stos
sub
fnstcw
mov
lret
insl
je
shr
mov
pop
gs
jo
sbb
xor
jb
int3
jbe
xchg
cmp
mov
adc
mov
sub
imull
mov
cmp
lods
in
or
mov
jmp
addr16
loop
dec
ljmp
lods
pop
repnz
jp
sbb
test
sbb
xchg
xchg
push
test
es
cmp
add
cli
mov
std
mov
jns
push
xchg
mov
add
in
loopne
jo
cli
fstp
and
adc
jp
addb
enter
fwait
inc
mov
or
dec
xchg
mov
lret
dec
xchg
out
xchg
mov
mov
inc
cmp
xor
jge
or
lcall
jmp
sub
adc
sarb
jl
sbb
outsb
adc
dec
lahf
add
inc
or
add
fildll
sahf
inc
nop
stos
into
ret
idiv
mov
out
xchg
jmp
divl
adc
inc
into
sub
xchg
push
lahf
incl
ljmp
dec
or
nop
aas
mov
idiv
push
dec
jbe
aad
test
ja
adc
mov
loopne
ficoms
lcall
test
and
out
loope
xor
aaa
add
int3
fwait
jnp
mov
out
fwait
negb
cmp
push
cmp
shlb
ret
je
jg
test
test
fstps
dec
int
dec
xor
jmp
mov
add
outsl
arpl
ds
mov
lret
jae
aam
mov
imul
mov
lds
push
xchg
enter
cwtl
stos
add
add
mov
mov
inc
addb
icebp
int
pop
mov
lret
push
or
adc
jg
lret
inc
sub
push
in
add
rclb
gs
jecxz
pop
movsb
jmp
mov
jne
cmp
adcl
push
fstp
lea
sbb
ret
mov
ds
imul
sbb
inc
cmp
rolb
push
ss
sbb
inc
insl
mov
mov
sbb
xchg
scas
lcall
testb
mov
ret
fwait
fs
in
push
insl
dec
inc
arpl
lds
cwtl
insl
dec
imul
call
mov
in
mov
fcoml
mov
xchg
repz
xor
jecxz
js
in
jns
fcomp
mov
xor
or
cmc
pop
jg
cmp
add
fwait
cmp
in
nopl
jmp
arpl
paddq
jg
int3
cmp
cmpsb
or
bound
jo
pop
std
out
es
rcrl
cmp
out
sub
mov
icebp
rclb
lret
xor
dec
push
fs
insl
bound
pop
dec
and
insl
rcll
stos
cmp
dec
sbb
jnp
pop
nop
sbb
dec
hlt
or
add
jbe
or
add
push
lcall
in
add
mov
out
dec
xlat
pop
xchg
sar
sbb
rorl
cmp
sub
xor
mov
negb
jns
test
mov
mov
mov
fsubrl
sbb
jae
mov
out
or
mov
aaa
and
loope
dec
sub
sbb
lods
jo
test
or
cmp
scas
mov
bound
pop
inc
roll
xchg
pop
jno
push
or
push
mov
adc
sahf
mov
cmc
loope
icebp
mov
subl
lret
xor
out
int
aaa
std
sbb
out
jb
cmp
bound
xor
sarl
adc
lea
sub
movnti
jbe
mov
movsl
enter
xchg
jp
test
movsb
xchg
cmpl
pop
int
sub
or
aam
xchg
out
imul
adcl
inc
mov
jnp
fsubl
xchg
sub
inc
shlb
add
in
pop
cmpsl
mov
sub
imul
xlat
divl
mov
dec
cltd
in
jae
jl
or
pop
cmp
fldl
pushf
pop
cmp
insl
and
roll
or
lds
xor
int3
cs
mov
inc
in
pop
push
iret
mov
shl
aam
int
pop
lahf
cli
cli
mov
mov
adc
jp
xor
xor
mov
mov
and
xor
sahf
int
dec
and
or
les
xchg
mov
pop
rolb
arpl
jg
inc
out
test
sbb
stos
cmp
mov
mov
test
add
repz
add
cmpsb
in
mov
inc
cmpl
mov
stos
fxch
out
inc
sti
js
push
pop
cmp
lret
rolb
dec
sbb
lods
xchg
jbe
mov
xor
mov
in
inc
jl
add
mov
mov
testl
pop
or
ss
decl
add
fisttpl
mov
pop
sub
inc
fsubl
inc
shr
add
inc
cld
mov
xor
cwtl
xor
fidivrl
addb
loope
sbb
stc
or
dec
out
out
cltd
bound
movsl
jns
or
jns
mov
rcrb
mov
fidivl
roll
push
sbb
iret
jecxz
lea
xlat
lahf
orl
push
xchg
lret
out
and
dec
pushf
push
pop
jno
mov
aaa
inc
inc
pop
jb
popa
int3
daa
jmp
and
add
push
push
inc
fs
cmc
stos
insb
push
inc
fisubrs
iret
jnp
jb
pop
mov
test
notl
push
fiadds
cli
add
dec
cmp
out
push
ja
adc
xchg
or
cmpl
sub
fcmovnu
cmp
xor
xchg
pushf
jae
inc
mov
cld
cmp
outsl
jae
push
inc
add
test
cli
jg
std
xchg
jmp
es
data16
dec
inc
insl
add
movsl
inc
dec
mov
in
les
in
xchg
mov
out
sti
sub
add
pop
cwtl
aam
out
cwtl
push
clc
push
cmp
je
mov
xchg
subb
ret
insb
xchg
loop
gs
xchg
dec
call
movsl
stc
add
xchg
lds
cli
leave
xlat
mov
or
clc
inc
pop
ljmp
jnp
push
je
pop
dec
aaa
out
add
mov
add
pop
or
push
insb
xor
mov
push
or
mov
push
inc
insb
cli
ret
or
lods
mov
mov
fs
push
insl
inc
bound
sbb
dec
cmp
pusha
mov
jns
and
lock
sub
ds
fldl
ss
mov
sbb
push
jmp
sub
xchg
or
mov
in
iret
ret
sbb
xor
jge
ret
cmpsl
mov
std
mov
mov
sbb
data16
adc
aaa
xchg
xlat
dec
mov
out
or
test
jmp
sti
pop
and
mov
dec
testb
fwait
push
faddl
inc
fisubs
aad
stc
out
cmp
sbb
adc
inc
out
jle
xor
jbe
and
aaa
jns
cmp
jno
rcll
xor
adc
jnp
pop
xlat
mov
dec
xor
sbb
int
icebp
push
mov
inc
mov
mov
adc
jb
ljmp
cmc
or
fidivs
dec
mov
or
push
out
lcall
ss
xchg
adc
push
and
hlt
mov
dec
mov
repnz
incb
dec
fcmovbe
cmp
sbb
mov
mov
outsb
pushf
out
stos
out
pop
cmp
adc
sub
add
or
mov
int3
pop
xor
pop
and
addr16
inc
jg
jmp
pop
and
mov
inc
pusha
mov
in
arpl
ss
dec
cmpsl
in
repnz
mov
pushf
and
mov
xor
mov
or
je
mov
inc
arpl
mov
jmp
jmp
cmp
mov
in
xor
insb
scas
sbb
xor
dec
subl
sub
mov
jne
push
scas
lcall
imul
mov
stos
bound
xchg
jp
lahf
lods
cmpsb
dec
cs
jle
movsl
fdivs
and
sub
sub
or
stos
pop
repnz
cmc
je
inc
mov
xor
sbb
fcompl
sub
push
loopne
xchg
loop
or
adc
test
xchg
inc
loop
xchg
aam
cmc
ss
repz
jno
into
dec
push
sub
repnz
out
shlb
scas
mov
mov
cmc
push
rorb
sub
into
xor
test
imul
sbb
add
fldt
pop
out
push
xchg
insl
sbb
mov
scas
rorl
pop
out
popa
arpl
lret
mov
nop
cmp
das
jae
imul
cwtl
sub
xchg
cli
inc
shrl
lret
aas
xchg
jns
fstp
adc
rcrl
cmpsl
fnstsw
xor
stos
rcrb
movzbl
mov
mov
vpshuflw
mov
jb
test
hlt
clc
xlat
xor
stos
push
scas
sbb
dec
bound
mov
push
dec
sbb
sub
cmc
mov
mov
repz
sti
xor
pop
sub
dec
push
pop
mov
lret
stos
ljmp
push
cmpsl
inc
lock
ret
push
push
dec
dec
push
cmp
add
cwtl
dec
aad
or
in
testl
pop
xchg
push
push
add
mov
mov
sub
cld
hlt
inc
pop
ror
push
push
cmp
loop
icebp
pop
cld
hlt
fnstenv
stc
cmp
movsb
popa
leave
gs
loop
das
out
outsl
fbld
jl
rcrl
push
inc
stos
bound
rol
scas
incb
mov
jmp
and
xor
xor
fstpl
mov
lret
jnp
movsl
lea
stos
pusha
pop
lock
pop
and
cmp
mov
jne
mov
mov
or
adc
popa
cwtl
and
push
into
jns
out
gs
in
inc
popa
mov
mov
adc
std
dec
insl
cwtl
test
xlat
mov
cld
arpl
pop
dec
dec
in
fs
into
pop
jno
aas
popa
mov
inc
shlb
mov
mov
dec
cmp
lret
jecxz
in
or
cmp
pop
rol
or
and
cli
mov
push
cmp
cld
xor
xchg
in
sar
out
divb
call
nop
sbb
adc
fld
mov
add
cmp
insl
incl
cmpsl
mov
and
pop
add
jecxz
inc
insb
fs
xchg
inc
stc
mov
inc
aas
mov
fidivrl
mov
mov
mul
adc
ret
fwait
js
fs
pop
daa
lahf
cltd
jns
nop
mov
sub
arpl
daa
sbb
ret
dec
lahf
test
cld
pusha
shl
mov
mov
xlat
lods
mov
jno
cmp
sub
and
leave
jo
out
sbb
sbb
adc
push
and
movsb
repz
mov
jg
stos
in
enter
es
cli
rorl
outsb
xor
and
mov
fidivs
mov
mov
mov
jne
and
fnstenv
xor
mov
movsb
mov
out
xchg
test
xor
or
das
in
daa
ret
in
mov
jbe
add
lock
jge
lret
jne
inc
icebp
jmp
out
jl
sbb
pusha
inc
sahf
push
fisubl
cmc
sub
xchg
insb
cli
mov
lds
mov
mov
mov
fisubl
mov
daa
mov
cmp
inc
js
push
or
fxch
icebp
repz
or
cli
sub
dec
js
xchg
xchg
jbe
ret
ja
push
xchg
pop
and
inc
sub
in
fldenv
pop
jnp
movsl
out
and
sti
insb
pop
hlt
out
lock
fidivs
outsl
jb
jmp
pause
mov
bound
jecxz
push
jge,pt
inc
aad
in
sbb
jmp
sahf
jno
data16
lret
xor
push
xchg
mov
cltd
fucomp
outsb
cld
sub
mov
push
cltd
add
insl
adc
xor
adc
add
movsl
mov
sbb
mov
in
js
ss
and
adc
aaa
jle
adc
pop
push
popa
arpl
dec
sahf
jg
jno
stc
dec
mov
cmc
lods
xchg
leave
in
xor
adc
pop
pop
stos
dec
jle
mov
arpl
pusha
adc
mov
jo
pop
mov
dec
cltd
lcall
stos
pop
inc
pop
test
sti
and
int
ja
and
cmp
xchg
subl
cmp
fwait
dec
jb
mov
and
mov
int
mov
mov
dec
stos
jno
insl
out
js
mov
out
ds
xchg
xlat
lods
mov
push
xor
out
pop
sahf
jo
xchg
outsb
in
setnp
pop
or
ret
xor
jmp
xchg
sahf
pop
sub
out
add
repz
jne
xor
dec
inc
daa
and
out
inc
cmc
sbb
gs
jmp
mov
in
cmpb
shll
out
adc
hlt
ficoml
add
cmp
mov
cwtl
push
in
mov
xchg
out
icebp
movsb
pop
mov
fst
dec
sub
cli
pop
sarl
es
int3
loop
aas
das
pop
jmp
cld
rorb
xchg
in
orps
test
ss
rcl
shll
pop
pushf
cmpb
test
push
xchg
movb
ficompl
jno
pushf
xchg
outsb
dec
mov
lock
leave
cli
inc
mov
sahf
mov
in
or
shlb
test
pop
mov
push
and
or
pop
mov
call
cs
into
les
sbb
imul
outsb
lock
sub
cmp
mov
ljmp
jp
and
out
mov
jle
cmp
push
pop
ret
inc
dec
xchg
loopne
fcomps
sarl
call
iret
data16
arpl
pop
sbb
int
jecxz
test
or
or
sbb
xorl
repz
xlat
cltd
stc
ds
pop
repz
iret
es
mov
mov
add
cmp
add
loopne
sub
dec
adc
mov
out
adc
in
pop
iret
mov
jg
repnz
or
shrb
test
adc
mov
popf
pop
inc
dec
push
xor
out
mov
cli
imul
jnp
cld
aas
idivl
lcall
test
lods
jno
nop
fmul
les
sub
arpl
adcb
cmp
mov
out
ret
and
insl
ljmp
add
cmpsb
call
push
inc
mov
pop
add
jg
enter
cmp
pop
mov
call
push
gs
cmp
xchg
sub
push
sub
xchg
fwait
pop
adc
aaa
out
shl
mov
fwait
mov
mov
sahf
bound
lods
mov
cli
aam
adc
mov
stos
outsb
mov
jno
sahf
mov
xor
std
mov
les
loop
fisubrs
adc
not
outsb
int3
gs
xchg
mov
sbb
push
and
add
adc
nop
nop
notb
push
dec
jg
jno
rcl
mov
adc
rcl
lods
call
pop
push
stos
test
mov
lret
push
push
insl
cmp
pop
add
and
pop
scas
lret
push
aad
std
enter
adc
mov
push
sub
and
add
and
add
fmuls
cli
fwait
stos
and
into
lock
xchg
xlat
outsb
push
pop
adc
mov
dec
int3
pop
or
pop
cmpsl
mov
aaa
push
jns
xchg
adc
mov
dec
mov
ds
mov
push
js
out
sub
push
mov
insb
push
cli
mov
jnp
mov
adc
jb
nopl
outsl
mov
push
mov
cmp
mov
adc
mov
subl
pushf
sub
adc
ljmp
inc
adcl
insl
aas
cs
movsb
into
mov
test
das
adc
and
outsl
sbb
inc
mov
jne
out
xchg
sbb
movsl
leave
mov
out
sbb
cli
pop
push
sub
mov
movsl
xchg
and
loopne
pop
sbb
push
cmp
arpl
push
xchg
cmp
xor
insl
in
int
imul
mov
ret
xchg
imul
stos
mov
add
shl
jl
sub
out
ds
sbb
rol
jnp
lds
cld
xchg
leave
in
jne
test
sbb
inc
ret
sbb
in
in
pop
scas
jnp
jle
std
mov
and
sti
inc
jecxz
addl
jo
dec
out
test
mov
repz
mov
subb
jo
adc
clc
iret
mov
adc
fistps
add
and
arpl
decb
mov
pop
out
movsl
pop
fs
push
mov
push
mov
insl
test
mov
push
lcall
es
inc
lret
xor
out
dec
xor
mov
mov
sbb
inc
lods
push
mov
xchg
ds
imull
jne
imul
ficomps
mov
pop
xchg
fdivp
cmc
push
pop
and
jmp
push
ja
ror
frstor
addb
jp
aam
inc
int3
mov
xchg
insb
jae
add
dec
movsb
jl
push
pop
aam
cld
mov
push
mov
cs
mov
test
sub
sbb
mov
dec
cld
cs
out
and
insb
push
cli
aad
jg
adc
jae
xor
test
fs
xor
enter
inc
cmp
jle
shll
cmpsl
mov
fbld
and
ret
imul
sti
push
adcl
xor
stc
add
mov
repnz
push
pop
and
inc
sub
mov
out
mov
je
sti
cmp
inc
je
add
fsts
add
jne
inc
enter
sub
nop
ret
mov
dec
jecxz
nop
aas
dec
push
pop
leave
sarl
and
stos
imul
mov
cmp
cmp
mov
int3
test
mov
xor
cli
adcb
jmp
sbb
and
pop
pop
outsb
mov
shl
and
and
jae
mov
pop
mov
adcb
scas
imul
movsb
aas
call
pop
xchg
pop
pop
and
mov
ljmp
jnp
push
xor
jbe
mov
pop
in
imul
popa
sub
inc
repz
sub
lret
ss
mov
jg
loope
dec
popa
out
xchg
negb
fs
cmpsb
mov
xchg
or
push
aam
push
test
pop
mov
push
iret
dec
mov
jb
adc
das
mov
xchg
mov
cltd
jo
dec
add
jnp
lea
or
adc
notl
push
fsubrs
clc
adc
push
mov
sarl
shrb
cltd
jl
jmp
repnz
and
cwtl
loope
inc
pop
and
mov
mov
icebp
push
sbb
fimull
insb
rcrl
ja
in
in
mov
leave
out
daa
iret
shlb
pop
xlat
cmc
mov
dec
inc
push
fnstcw
fcmovu
jns
adc
and
aas
mov
xor
mov
cmp
sbb
cmp
ljmp
pushf
int3
dec
in
lods
adc
pop
es
call
std
imull
int
outsl
push
adc
adc
adc
mov
outsb
imul
out
adc
aad
xor
into
cmp
inc
imul
xor
aad
fcompl
xchg
movsl
loopne
xchg
call
mov
xchg
nop
test
loopne
shll
mov
and
roll
and
push
push
xchg
ss
mov
cs
xlat
mov
js
shll
mov
add
sbb
sti
adc
movsl
jge
fwait
in
fwait
ja
test
push
loopne
mov
int
loop
push
mov
jmp
scas
jl
mov
outsb
sar
xor
test
out
call
dec
xchg
shrb
ret
mov
lahf
push
add
mov
inc
pop
pop
dec
negb
testb
shll
sti
iret
mov
cltd
movsb
frstor
repnz
imul
test
sub
cmp
dec
jns
push
and
dec
add
dec
mov
fs
rclb
aad
popf
jl
jnp
xchg
out
sub
cs
dec
add
push
mulb
dec
adc
sub
hlt
leave
add
dec
cmc
stos
imul
xchg
fisubrl
call
mov
sbb
push
cmp
aad
shl
push
and
fsubrl
dec
jp
in
aam
xchg
insb
push
mov
ss
push
inc
loop
rcrl
xor
mov
repnz
and
or
lods
fnsave
dec
mov
cli
out
fdivr
outsl
add
jmp
lods
xor
sub
and
in
das
lcall
cmp
insl
cmp
add
in
cmp
out
add
fsts
jnp
xchg
cmc
or
dec
xchg
cwtl
in
adc
stos
js
incl
mov
jno
je
xor
mov
popf
or
mov
mov
sbb
in
es
push
in
out
pop
aam
inc
cmpsl
xor
shlb
scas
and
pop
in
rorb
addr16
push
lcall
or
das
subl
flds
in
into
fistps
push
loopne
jne
jno
aam
adc
pop
sbb
xor
pop
stos
and
stos
pop
push
adc
inc
sub
std
leave
cwtl
push
in
movsb
std
pop
lcall
jge
dec
sahf
adc
jnp
bound
sti
out
scas
dec
inc
cmp
aas
cmp
repz
mov
pop
adc
fld
sbb
out
mov
addr16
inc
fnstsw
mov
push
imull
pop
jb
jno
ja
mov
in
sub
push
repz
push
imul
and
push
fmuls
push
out
sbb
cmp
jl
mov
push
jg
repnz
rorl
mov
mov
mov
adc
sbb
xchg
pop
mov
pushf
dec
xor
lret
data16
add
jecxz
out
negb
iret
pop
xor
and
pop
repz
mov
out
mov
mov
jp
gs
add
dec
nop
leave
adc
mov
adc
mov
outsl
pop
lret
repnz
loop
addr16
repz
adc
cltd
negb
jecxz
or
loop
scas
fsubrs
adc
xchg
sub
pop
outsb
push
add
test
or
dec
or
inc
adc
inc
les
movsb
push
mov
jp
ret
int3
adc
repz
mov
add
mov
push
pop
inc
mov
pusha
cmp
sbb
cli
dec
or
bound
addr16
dec
sahf
pop
in
mov
sub
movsb
test
add
xor
pop
aas
jge
dec
jb
call
inc
arpl
push
xchg
data16
sbb
or
fnstsw
adc
mov
movsl
in
mov
in
inc
es
sti
roll
jns
test
cwtl
cli
mov
mov
or
mov
test
shl
out
jno
orl
inc
shrl
loop
cwtl
pop
mov
nop
popa
add
cmpl
cltd
iret
movsl
jno
fdivl
sahf
xchg
imul
inc
mov
mov
bound
pop
adc
sahf
xorb
aaa
xchg
ds
sbb
and
fbld
je
lds
pop
leave
out
push
and
push
test
clc
inc
das
dec
test
cld
push
mov
adc
adc
enter
dec
lods
dec
inc
push
ss
test
xor
insl
lods
push
jno
cmp
pop
pop
repz
mov
jl
mov
mov
push
lcall
lret
movsb
sbb
stos
and
cmc
mov
or
jno
fwait
or
xor
sahf
mov
aam
jp
xchg
inc
adcb
sub
loopne
stos
leave
sbb
and
push
fisubrs
cmpl
test
inc
xor
inc
movsl
test
add
das
pop
mov
dec
jo
incb
ds
insb
push
xchg
add
cmpsl
pusha
imul
cmpsb
adc
movaps
cmp
xchg
pusha
add
int3
mov
aaa
dec
movsl
push
push
fisubl
push
adc
xchg
adc
dec
push
mov
sbb
insl
and
out
cld
xor
js
ss
cltd
push
cmc
js
loopne
mov
cld
and
cld
mov
test
jge
sbb
jbe
mov
sbb
dec
mov
lods
cmpsl
sbb
adc
pop
xchg
adc
mov
push
sbb
push
inc
xchg
enter
cmpsl
pop
sub
repnz
sub
inc
inc
sahf
pusha
push
adc
inc
data16
mov
cmp
push
add
pop
aad
mov
xlat
test
xchg
or
shrb
mov
shl
sbb
xchg
jb
test
or
jb
insb
fwait
cmp
in
xchg
outsl
loopne
repnz
jnp
sub
or
std
sti
outsb
in
iret
inc
xchg
lret
xchg
sbb
jmp
jns
movsb
adc
inc
pop
push
cmp
mov
mov
inc
mov
adc
inc
leave
push
mov
fdivrs
lock
jecxz
sub
insl
sub
popa
mov
xchg
cwtl
mov
push
data16
jb
les
negb
mov
mov
jg
testl
adc
icebp
push
jge
daa
loope
pop
mov
loop
lds
popa
mov
mov
mov
jmp
mov
xchg
shlb
lahf
lea
pushf
stc
call
addr16
push
div
xchg
or
jge
outsl
out
jle
test
and
sub
pop
xchg
pop
dec
mov
and
lock
xor
push
popf
sbb
dec
jg
sub
nop
sub
jne
sahf
cmpb
jecxz
jl
mov
mov
call
movsb
push
imul
pop
jnp
sub
lahf
adc
inc
test
outsl
mov
and
lret
add
popf
mov
cld
stos
sbb
int3
pop
data16
adc
lahf
in
or
popl
mov
dec
movsb
in
jecxz
ljmp
push
lret
xchg
jb
stc
xlat
jnp
xor
mov
xor
out
dec
ss
dec
nop
stc
dec
sub
imul
mov
mov
and
mov
test
push
or
scas
out
movsb
mov
daa
cmp
pop
mov
or
jne,pn
outsl
enter
mov
pop
dec
cwtl
stos
mov
cmp
lahf
lret
jmp
fsts
mov
fldenv
jns
sub
pop
aad
mov
inc
aas
leave
leave
lock
xor
or
push
lcall
mov
lret
addr16
les
addr16
fidivrl
out
jno
push
fldenv
das
push
xchg
cmp
pop
lahf
xor
outsb
rorl
out
mov
insl
xchg
cmp
sbb
sub
pop
scas
test
les
push
call
ret
pop
jmp
dec
movsb
push
jnp
loop
repz
imul
cmp
je
inc
je
pusha
lea
stos
inc
mov
rorl
enter
cmp
mov
xchg
in
xor
into
cmpsb
gs
insb
cmpsb
nop
cli
jns
cwtl
pop
mov
dec
pop
sbb
or
inc
dec
inc
lret
icebp
pusha
push
shlb
fstpt
shl
push
les
pop
mov
mov
push
les
mov
jnp
fcomps
negl
sbb
jge
cs
add
sub
jl
jno
cli
pop
cmp
mov
out
cmp
mov
icebp
cmpsb
cmpsb
inc
out
adc
ljmp
jns
aam
pop
mov
add
jns
ja
sub
xor
jmp
sarb
ljmp
clc
xor
xchg
pop
bound
jae
ja
pop
lahf
xchg
and
repz
pop
ss
xor
push
pop
push
xlat
mov
incb
pop
push
jecxz
push
inc
mov
cmp
cld
mov
inc
sub
dec
out
xchg
imul
loop
mov
or
decl
addb
std
stc
lcall
popf
aad
aas
clc
push
clc
adc
push
repz
adc
and
and
into
fcoms
mov
mov
sbb
out
pop
out
xor
fcomps
aaa
int3
or
pop
xorb
arpl
push
clc
push
or
mov
cltd
pop
mov
shrb
in
or
or
loope
adc
testb
push
sbb
scas
mov
mov
adc
clc
ret
addl
movsb
insb
dec
dec
insl
xor
aam
cmp
jnp
adc
fadd
push
fs
sbb
stos
and
ja
adc
dec
std
mov
mov
pop
imul
xlat
pusha
stc
xor
mov
sbb
sbb
sbb
xor
loopne
fnsave
divl
adc
xchg
push
or
mov
fwait
push
repnz
push
sub
imul
fbstp
out
mov
sti
les
cmpsl
aad
jne
icebp
fwait
notl
aas
inc
mov
sub
dec
or
call
jl
leave
pusha
rcr
adc
or
cmpsl
fwait
mov
push
imul
outsb
add
inc
nop
pushf
cmpl
cmp
les
mov
or
ret
mov
mov
inc
les
fadds
jo
add
adcb
sub
adc
sbb
mov
js
cmp
test
outsl
push
movsb
test
push
gs
xchg
mov
imul
adc
cmp
and
mov
mov
jle
incb
movsl
fldcw
mov
out
pop
divl
jp
lret
and
bound
sub
mov
xchg
mov
gs
cld
and
lahf
sbb
pushf
mov
aaa
lsl
mov
in
mov
dec
dec
dec
jecxz
je
xor
adc
dec
or
mov
divl
std
cwtl
mov
fldcw
cwtl
jp
aaa
stos
hlt
inc
loopne
jns
repz
sbb
leave
icebp
inc
inc
inc
pop
mov
das
pushf
jle
mov
lds
lock
adc
out
sub
cmpsb
gs
mov
movsb
sti
lds
cltd
loopne
adc
cmpsl
dec
test
mov
mov
movb
int
leave
mov
cmc
pop
or
bound
fdivl
inc
scas
xor
sbb
xorb
lret
push
int
pop
test
fcoml
lret
or
xchg
inc
shl
es
adc
mov
inc
in
dec
icebp
xchg
call
mov
negb
test
push
pop
or
cltd
inc
dec
cmp
inc
jbe
pop
xor
mov
and
push
mov
aad
outsl
push
xchg
jo
andl
push
popf
dec
imul
insl
mov
and
iretw
out
cmp
pusha
insb
shll
bound
cmpsl
loop
push
mov
push
or
xor
mov
stc
sbb
mov
adc
push
js
inc
loope
setge
mov
scas
mov
jno
into
scas
mov
fdivr
jnp
push
push
popf
xorb
xchg
inc
insl
mov
adc
sbb
push
cmpsl
cmp
pop
jmp
pop
test
imul
inc
incl
lock
dec
das
call
xchg
inc
lret
mov
and
mov
and
fnstcw
jle
mov
jecxz
imul
xchg
insb
lcall
dec
mov
sub
sbb
je
stc
mov
arpl
repz
adc
and
and
idivb
jecxz
mov
das
repnz
scas
pop
mov
sub
jge
mov
mov
xchg
rorb
or
cmp
mov
jmp
mov
xor
outsl
gs
pop
dec
jl
lahf
movsb
push
push
inc
pushf
xchg
dec
mov
push
addr16
hlt
push
adc
lret
push
fisubrs
je
jne
xchg
mov
test
cmp
sbbb
mov
enter
xchg
jb
sarl
sbb
repz
mov
xor
jmp
sti
xor
mov
pusha
jo
xor
ja
gs
push
aas
sbb
testb
scas
mov
cmp
insl
sub
andb
mov
pushf
imull
fidivrl
sub
push
jno
mov
pop
sub
cmp
lret
cmp
push
in
mov
add
mov
decb
ret
cmp
jbe
addr16
stos
and
js,pn
cmpsl
pop
sahf
ja
adc
int3
adc
das
repnz
not
lret
lret
fmuls
sub
pop
into
pop
into
lahf
lock
pop
xchg
mov
or
imul
inc
push
push
shr
rcrl
scas
inc
and
pushf
push
pop
leave
std
aas
and
lret
orl
ja
divl
inc
jo
test
push
sbb
inc
call
les
std
mov
jne
aad
ljmp
imul
inc
or
add
call
shll
ret
in
mov
jbe
mov
in
ja
inc
iret
fimuls
fisubrs
inc
jecxz
or
bswap
mov
in
call
mov
xor
scas
in
and
cwtl
rcl
ret
pop
jge
aaa
call
add
push
sub
into
mov
fisubs
inc
insb
aas
js
test
push
mov
push
test
push
cmc
repz
mov
jae
inc
and
das
add
mov
call
xor
jb
dec
add
cmpb
fists
movsl
ljmp
cmp
addr16
out
fmuls
xchg
xor
int
pop
mov
inc
or
out
popa
out
leave
adc
sbb
mov
lahf
das
pop
jo
fbstp
push
loope
adc
pop
and
add
jb
stos
cmp
mov
dec
aad
xor
out
nop
add
std
ret
repnz
fs
push
sahf
in
cmp
pop
push
jp
push
imul
jns
push
add
je
cli
cmc
jo
inc
push
cmpsb
lret
addr16
or
xchg
or
sbb
pop
push
pop
push
rcl
imul
les
xchg
xor
xchg
push
mov
into
mov
dec
in
adc
push
xchg
jecxz
dec
imul
stc
lret
push
lea
in
aas
mov
ficoml
rclb
and
clc
jns
lock
ja
fmul
sub
movsl
popf
test
inc
sbb
xor
dec
dec
pop
lds
jge
fdivr
leave
dec
sahf
cmpsl
fidivrs
popf
adc
cmp
push
je
shll
jecxz
push
inc
adc
inc
hlt
adc
mov
insb
clc
sbb
fdivr
jecxz
sbb
push
add
imul
lret
lret
iret
lods
mov
mov
or
mov
push
adc
icebp
cli
push
pop
pop
inc
jno
rolb
gs
or
fcmovnu
jecxz
jno
scas
movsl
ret
jp
adc
mov
les
out
lahf
mov
adc
fcoml
lods
push
call
xor
mov
pop
shrl
jle
imul
dec
jecxz
pop
out
in
mov
aas
jp
das
or
lds
pusha
testl
or
jae
xlat
xchg
sub
pop
xchg
pop
or
lock
lods
enter
jns
mov
mov
sbb
cmp
sub
stos
sub
das
and
push
or
mov
popf
mov
aad
jp
add
sar
mov
test
std
cli
aam
pop
clc
loopne
scas
hlt
scas
cmp
pop
adc
ret
popa
mov
es
lods
mov
mov
xchg
int
ret
xchg
scas
scas
imulb
sbb
pop
lcall
in
xchg
adc
jae
pop
jbe
inc
fidivl
ljmp
ds
sbb
or
lods
mov
aas
dec
pop
xor
mov
xchg
cli
mov
inc
mov
js
popa
xchg
xor
pop
push
cmp
dec
dec
ja
arpl
aaa
xor
mov
andb
in
cli
dec
jle
or
sti
inc
addb
outsb
cs
mov
jns
add
push
in
jns
int3
xchg
mov
js
test
pop
adc
mov
cwtl
push
ret
cmp
cli
xchg
push
add
out
mov
or
inc
repz
imull
aam
jne
fwait
adc
xor
mov
leave
sar
mov
dec
aad
lahf
ret
sub
call
or
mov
out
push
es
dec
pop
and
inc
xchg
es
xor
stos
jns
inc
inc
inc
mov
clc
push
add
sti
std
int3
and
mulb
mov
mov
push
shrb
push
es
cwtl
cmpl
stos
cmp
cmpsb
je
call
push
ds
loop
imul
jo
insl
jo
sbb
lods
cmp
xchg
fs
fcomps
cmpsl
subb
add
sub
inc
xchg
cmp
std
repnz
into
dec
scas
push
movsl
inc
push
xchg
and
xchg
int
shl
xor
inc
cmp
jb
js
push
and
in
fnstenv
jge
pop
test
icebp
push
xchg
leave
adc
testb
and
mov
xlat
mov
jg
mov
mov
test
jo
dec
adc
xor
sarb
movsl
es
mov
or
jnp
sub
cltd
je
shl
loope
cmp
sub
lock
add
stos
sub
cmp
jle
jne
dec
mov
out
jb
mov
sbb
mov
adc
jl
movsb
sbb
loopne
adc
sahf
mov
jecxz
cmp
into
insl
mov
gs
jo
sbb
xchg
xchg
mov
xlat
and
jnp
sbb
add
cld
mov
cmp
cmp
cmpsb
sti
out
push
mov
mov
mov
lcall
jge
xor
std
xchg
insb
sub
xor
xchg
mov
mov
ss
xor
pop
repnz
dec
gs
xchg
jae
inc
xor
and
mov
andb
or
jmp
mov
sub
mov
pop
jecxz
or
mov
pop
add
sti
adc
mov
stos
xor
ret
mov
pop
inc
fildl
lock
int
cmpsb
inc
dec
shlb
cmp
and
mov
xor
aam
cmp
mov
lret
icebp
mov
ja
pop
arpl
jo
aas
mov
stos
push
sbb
pop
dec
xchg
fists
ljmp
fwait
mov
inc
or
cmp
or
mov
cltd
add
xor
fildl
mov
sbb
jae
movsb
pushf
push
into
dec
repnz
loope
lea
decb
dec
sbb
cmp
or
pop
in
push
inc
cmp
push
stc
sbb
andb
mov
mov
lcall
ljmp
mov
loop
cmp
outsb
push
mov
mov
fists
xor
pop
enter
aaa
inc
mov
or
adcb
loope
inc
daa
sbb
fisubl
cmp
jae
cmp
dec
test
nop
inc
jae
and
cli
hlt
jmp
mov
sub
or
adcb
cli
fisttpl
es
push
mov
nop
and
and
enter
add
in
xchg
popf
mov
xor
shrb
jae
push
call
jge
movsb
aas
mov
imul
dec
cmp
xchg
rep
lods
test
ds
in
test
das
outsb
jbe
out
dec
xchg
stos
pop
push
fdivs
push
and
mov
mov
push
xlat
inc
mov
pop
dec
lret
sbbb
or
sti
aas
in
cmpsl
cltd
add
mov
les
sbb
testb
cmp
push
mov
lods
mov
cmp
push
aas
in
in
insb
pop
shll
push
aas
xchg
inc
movq
sbbb
outsl
dec
or
aad
and
sahf
mov
repz
shll
shll
pop
lahf
dec
jg
sbb
shlb
sahf
push
or
push
in
push
dec
xchg
aas
cwtl
xchg
push
adc
aad
ja
repnz
mov
aas
call
fwait
push
inc
dec
test
notl
maxps
imul
xchg
push
movb
mov
mov
filds
xchg
add
dec
pop
enter
push
leave
iret
in
mov
cwtl
dec
std
fnstcw
insb
das
inc
popf
add
in
jbe
out
fidivrl
add
xor
les
insl
mov
test
aad
mov
add
jl
loopne
and
loope
fimuls
jae
adc
or
fld1
add
mov
jg
or
inc
out
xchg
sbb
fwait
add
repz
push
daa
jg
stos
mov
faddl
das
rorw
jae
xchg
loope
nop
sub
out
sbb
dec
loopne
xor
jbe
pop
dec
addr16
pop
loopne
jb
mov
dec
aaa
icebp
icebp
pushf
dec
lods
mov
in
bnd
ret
mov
dec
dec
cld
stos
mov
jge
je
adc
cmc
pop
je
mov
push
ficoml
lock
cmpsb
cmp
popa
or
pop
test
cli
not
loop
fdivrp
inc
push
test
in
js
ja
mov
mov
push
int3
sub
mov
sbb
jp
fs
hlt
mov
and
cmp
test
ss
js
adc
sbb
negb
dec
mov
out
cmpb
icebp
lcall
add
and
mov
int
test
frstor
pop
xchg
fs
xchg
mov
jp
xorb
cwtl
lock
xchg
jle
mov
test
decl
mov
rcrl
dec
sub
movsl
mov
cs
cld
fildll
outsl
dec
adc
lods
adc
imul
and
inc
pop
xor
call
mov
pop
cli
dec
add
sub
out
mov
jmp
mov
pusha
push
bound
ret
fs
sbb
cmpb
pop
jg
in
or
out
mov
push
popf
ja
sbb
mov
lcall
jmp
fidivrs
cmp
inc
or
xchg
mov
les
out
sub
rcrb
andl
leave
sahf
xorl
and
push
lcall
lods
jo
stos
test
push
cwtl
lods
sub
push
sub
pop
addr16
dec
xchg
or
or
mov
mov
jg
pushf
popf
cli
popl
outsl
xor
mov
in
and
sbb
jle
addr16
pop
or
loope
rorb
mov
clc
jmp
adc
cmp
or
cmp
mulb
push
xchg
pop
push
or
pusha
adc
dec
xchg
jne
lcall
adc
fimull
pop
cmp
xchg
add
or
or
loop
cmc
aas
push
adc
mov
fsubr
cmp
inc
xchg
jmp
xor
movsl
sbb
inc
add
lcall
xor
lahf
sahf
dec
jecxz
in
sub
jmp
ds
gs
dec
stos
popf
sub
adc
and
xor
sbb
mov
aam
gs
and
pop
and
ja
mov
pop
movsl
dec
cli
pop
pop
cmp
imul
test
hlt
das
arpl
adc
lds
xor
cli
cmp
jp
imul
rcll
mov
xchg
fisubs
push
jg
jle
addr16
xlat
jae
mov
dec
add
imul
push
adc
decl
add
les
gs
pop
out
or
loope
mov
sub
mov
stc
ret
out
repz
cmp
std
pop
sbb
test
cmp
xchg
xor
out
ret
inc
enter
xor
mov
add
test
test
jecxz
scas
pushf
call
loopne
fdiv
jno
sub
sub
sti
loop
out
or
mov
push
push
imul
and
mov
and
test
fwait
or
push
cmpsl
repz
mov
hlt
push
mov
mov
push
cmpsb
loop
loope
jg
or
cli
movsb
pop
cs
aad
cmp
pop
mov
fwait
mov
pop
xchg
mov
loope
xor
lds
iret
mov
popa
and
xchg
rolb
pop
repnz
ss
ret
jle
or
psubsw
in
aad
mov
nop
stos
outsl
ret
push
push
loop
scas
pusha
bound
sbb
sub
inc
sub
pushf
push
leave
sbb
xchg
xor
push
cmp
addl
cmp
pop
sub
popf
jmp
mov
mov
pop
fisubl
ret
add
adc
cmp
or
cmpl
sub
inc
in
cmp
mov
lret
push
mov
push
push
add
adc
les
aam
out
mov
add
lcall
outsb
push
ret
loopne
add
enter
push
mov
into
mov
or
push
out
jmp
mov
dec
and
jp
xchg
inc
lock
pusha
ret
insb
push
jl
inc
dec
jp
into
inc
pop
push
bound
lods
jecxz
xor
and
xchg
mov
aad
sub
and
jmp
pop
ljmp
ljmp
xchg
mov
or
mov
int
shll
adc
imul
inc
test
int
push
stos
jae
push
stc
sub
push
enter
jo
lock
add
jecxz
cmp
mov
popa
gs
xor
roll
andb
lcall
mov
mov
cmc
popa
aam
imul
imul
sbb
gs
inc
mov
jmp
fwait
push
cmpsl
cmp
cmp
inc
mov
outsl
cmpsl
sbb
adcl
mov
xor
mov
pop
xor
mov
addr16
or
push
adc
push
inc
jbe
je
dec
mov
fcompl
fiaddl
sbb
and
xchg
test
insb
mov
jle
sub
push
push
sbb
jle
movsb
adc
push
push
inc
in
movsl
xchg
jmp
push
nopl
xor
cmp
xor
sbb
out
mov
adc
mov
in
add
xor
and
scas
xchg
or
bound
jmp
sub
cltd
std
xchg
mov
mov
mov
test
popa
xor
or
dec
mov
xchg
cmp
je
xor
or
cmp
pop
or
adc
lret
xchg
lret
cli
cmpsl
scas
mov
jg
jb
inc
add
or
mov
and
mov
push
pushf
mov
xor
mov
dec
iret
scas
sti
and
out
push
shlb
jae
fidivrl
iret
add
je
cmp
xchg
lahf
or
stos
je
add
cmp
cmp
xchg
xchg
sub
sahf
pushf
cli
imul
fwait
and
out
jo
mov
xchg
nop
push
test
in
outsl
xor
insl
out
add
cmp
les
lock
int3
data16
repz
pop
stos
or
mov
jae
stc
dec
cmc
icebp
mov
dec
mov
sub
push
pop
and
pop
mov
and
out
inc
ret
add
stos
cmpl
sbb
das
mov
test
rcrb
inc
stos
or
std
pop
dec
rorl
and
popa
inc
fadds
xchg
rolb
mov
dec
mov
pop
in
sahf
inc
shll
daa
loopne
mov
push
xchg
cmc
je
test
or
inc
movsl
add
inc
hlt
movsl
repz
cmp
adc
aas
add
or
or
std
sbbb
rol
cmpsl
pushf
lock
xchg
outsb
icebp
fstpl
pop
pop
push
or
pop
jmp
jp
or
repz
cmp
mov
ret
loope
scas
xor
and
pushl
jb
test
jno
pop
sub
jmp
jne
jmp
push
divl
jae
and
fcmovb
adc
push
ljmp
dec
cmp
enter
out
lahf
xchg
mov
adc
mov
hlt
rol
nop
xchg
fstps
jp
nop
in
fdivrp
iret
clc
pusha
fsts
cld
jno
jle
leave
adc
and
adc
jbe
xchg
test
add
cwtl
mov
inc
fwait
xchg
pmullw
pusha
pusha
jge
sbb
sti
xor
in
mov
loopne
add
pushf
leave
add
cmp
push
outsb
incl
jae
in
jmp
xchg
arpl
movsb
mov
daa
add
incl
mov
mov
inc
ret
xchg
sub
xchg
and
aas
sub
inc
sub
lret
cmpsl
je
xchg
loope
mov
pop
pusha
popf
push
inc
add
cmc
adc
add
fistpl
int
icebp
inc
sbb
cmp
add
je
test
ds
ja
xchg
mov
outsb
sbb
jae
orb
outsl
in
imul
and
xchg
imul
lea
lret
mov
aam
cwtl
mov
xor
adc
lret
xchg
lahf
xor
lods
lret
js
mov
xchg
pop
cmp
dec
fcomi
push
sbb
sbb
jecxz
push
inc
xor
mov
out
jo
and
pop
push
out
or
lret
test
and
mov
int3
xor
add
imul
addr16
js
movsl
pop
into
cli
sbb
nop
push
or
sarb
add
mov
inc
dec
out
imulb
inc
shlb
fdivs
mov
sbb
push
adc
pop
sbb
ljmp
mov
dec
inc
push
inc
cmpsb
movsb
sub
pop
imul
rsm
aad
push
and
lret
dec
push
data16
dec
out
jg
push
std
push
stos
jnp
inc
adc
loope
jp
pop
and
ljmp
sub
push
aam
stos
and
test
fists
pop
jae
insb
aam
inc
cmp
jl
jno
cmc
xor
hlt
pop
in
push
push
dec
push
cs
daa
testb
mov
imul
dec
add
in
cmp
mov
add
add
lods
inc
xchg
push
pop
test
or
ljmp
mulb
or
or
jo
icebp
arpl
iret
mov
push
and
adc
dec
and
sti
xor
scas
movsl
out
fbstp
daa
and
sub
out
js
push
rol
cs
std
inc
pop
lods
xor
aaa
pop
adc
pop
rcrb
xchg
lea
loope
adc
mov
cmc
and
mov
xor
jg
insl
add
xor
mov
loope
inc
dec
cli
aaa
pop
stos
xor
mov
test
in
imulb
mov
cmp
aam
repz
inc
aam
sbb
aad
call
mov
loop
popa
cmp
push
push
cmp
roll
xor
pushf
das
and
pusha
fsts
add
iret
pop
pop
xchg
cmpl
cmc
xor
inc
jne
xchg
sti
or
out
mov
sub
stos
mov
dec
fmulp
add
push
in
sbb
leave
mov
push
dec
sar
sbb
pop
adc
loope
mov
adc
in
dec
and
xchg
cmpsl
dec
cmp
inc
jno
negl
sub
clc
pop
push
repnz
andl
mov
cmc
out
inc
push
and
mov
dec
ficoml
jmp
cltd
invd
pop
adc
or
jge
gs
and
add
mov
mov
lahf
pop
mov
add
mov
mov
ss
push
sti
pop
jae
loop
push
push
jo
push
outsb
dec
int3
cltd
insb
je
inc
sbb
inc
test
jecxz
xor
jle
neg
adc
ds
and
inc
cmp
push
cmp
xchg
cld
ret
sub
push
sub
lcall
cmp
sbb
fmull
jo
adc
fbld
jae
aam
lods
add
jmp
in
ss
sub
icebp
popl
shll
loope
orb
call
add
and
cld
insb
cld
push
xchg
sbb
jl
out
divl
repz
gs
lcall
popf
cli
pop
cmpsl
or
out
dec
popf
pop
js
in
dec
push
add
sub
or
or
jg
sti
mov
mov
jns
and
xchg
inc
outsb
adc
xchg
sbb
mov
inc
test
xor
fnstenv
xchg
imul
or
addr16
lods
and
daa
jae
test
add
outsl
outsb
pop
jno
lret
aam
pop
arpl
push
mov
sbb
aas
out
sub
cmp
pop
mov
icebp
ret
push
fsubrl
test
add
repz
fdivrl
pop
adc
adcl
sub
test
dec
mov
xchg
fs
add
ja
push
xchg
fnstcw
call
sub
dec
adcl
int3
push
cwtl
sbb
faddl
adc
rorb
push
mov
cmp
sub
subl
shlb
insb
test
imul
data16
fdivrl
push
adc
fucomip
lds
addr16
int3
xchg
inc
rorb
fiadds
repz
mov
and
inc
pop
xchg
sbb
sub
fnstsw
fsubs
or
loopne
xchg
and
pop
enter
push
xor
cmpl
jno
add
fildll
dec
cmp
daa
insl
push
imul
xor
out
fidivs
mov
pavgb
or
fwait
cmp
jmp
and
das
jb
cmp
lods
daa
add
sbb
sbb
hlt
ja
xchg
mov
insl
fucom
shld
js
out
xchg
out
mov
cmpsb
jae
mov
sbb
call
mov
xor
jno
jmp
xchg
jle
and
stos
pop
dec
test
fwait
int
loope
mov
pop
out
js
fstps
jmp
leave
clc
pop
lcall
test
jmp
mov
xchg
jns
fbstp
js
shr
pop
test
das
pop
pusha
xchg
stos
push
mov
out
sbb
push
jae
stc
filds
push
inc
mov
mov
ret
lcall
cmp
lret
sbb
adc
mov
enter
add
fwait
cmp
mov
aas
dec
es
divl
enter
xchg
pop
adc
clc
push
cld
lret
addr16
jo
xor
cld
pusha
leave
pop
or
in
jnp
cmpsl
push
push
enter
mov
add
push
test
daa
jp
mov
enter
arpl
lods
js
xchg
inc
push
andl
cld
jge
push
mov
mov
ret
xorl
frstor
mov
fdivrs
push
enter
fistps
pop
xor
sahf
sub
fistl
jmp
push
push
aas
dec
pop
pusha
jecxz
sti
outsl
push
out
mulb
pop
cmc
das
push
aad
push
notl
lahf
mov
or
or
cmp
int
add
fidivl
sub
dec
add
jp
push
cmpsb
cmpsl
mov
jo
jnp
pop
mov
push
lcall
mov
push
in
cmp
or
in
int
sub
dec
jle
mov
out
dec
cmp
scas
bound
add
dec
or
pop
imul
ret
sub
pop
sqrtps
sbb
iret
and
mov
int3
mov
cmp
fsts
pop
aas
sub
sbb
repnz
mov
jecxz
cmpb
loopne
cwtl
mov
leave
pop
cs
jnp
jns
inc
fwait
nop
sbb
fldcw
and
aaa
imul
in
daa
xchg
mov
pop
nop
cmpsl
lods
mov
add
test
inc
ja
inc
clc
pop
sbb
push
outsb
push
imul
out
fisttpll
loope
iret
outsb
fadds
notb
and
push
imul
fistps
push
jns
mov
out
pop
rolb
inc
fldl
fsts
out
sub
mov
inc
jl
inc
repnz
rcll
pop
xlat
jnp
imul
cltd
push
fistl
jp
cwtl
imul
shlb
scas
xor
mov
mov
sbb
adc
fsubs
mov
cmc
lea
insb
fisttpll
sub
movntps
add
jmp
sbb
insb
pop
inc
dec
inc
cmpsl
jb
iret
push
and
push
mov
dec
add
push
shl
into
jns
and
nop
dec
sahf
xchg
jnp
orl
mov
jmp
icebp
roll
xchg
test
mov
sbb
sub
add
jae
fcmovu
out
mov
xchg
jl
add
push
sbb
inc
mov
loope
xchg
ljmp
xchg
sbb
or
fwait
in
incl
mov
arpl
rolb
lods
sti
jbe
xor
xchg
dec
leave
cld
mov
push
into
xchg
incb
mov
jge
inc
in
jmp
mov
psrad
add
and
gs
xchg
pop
rcrb
das
sbb
mov
test
push
xchg
push
and
lahf
movsl
cmp
pop
cmpsb
cmp
pop
add
in
mov
xor
imul
aas
bound
pop
jg
lods
or
test
sub
sub
ficoml
rorl
xlat
xorl
cmp
fwait
pop
sbb
clc
push
pop
mov
cmp
std
test
mov
ficoms
fisubl
sbb
pop
sub
lcall
and
adc
pop
gs
mov
aas
push
repnz
pop
mov
mov
nop
ret
mov
rclb
lea
mov
std
dec
gs
push
inc
lods
xor
pop
repnz
out
cmp
ds
pop
dec
inc
sbb
fcom
pop
add
imul
mov
mov
sbb
mov
mov
es
mov
sub
mov
inc
add
mov
dec
in
popf
je
rol
ffreep
cmpb
das
pop
fidivrs
xchg
mov
or
xor
xchg
ljmp
xchg
mov
sti
outsl
out
jae
push
cmp
pop
pushf
or
das
scas
inc
cmpl
popl
xchg
ljmp
and
sbb
add
inc
mov
and
xchg
out
pop
mov
or
test
mov
push
out
fstl
lret
popf
into
fidivrs
mov
mov
mov
mov
xor
push
and
jg
xor
adc
dec
or
in
dec
push
lods
cltd
sarl
inc
push
cltd
sbbl
lcall
push
pop
push
int3
sbb
js
sar
lret
jmp
sti
xchg
in
testl
inc
and
into
xchg
fstl
mov
icebp
mov
push
add
mov
scas
addr16
pop
lods
mov
inc
out
icebp
fwait
sub
sbb
and
sub
mov
push
leave
xor
gs
fwait
mov
test
xor
je
in
cmp
push
add
es
pop
jns
cmp
imul
in
rorb
test
leave
add
out
in
mov
test
outsl
in
loope
pop
rorl
mov
aaa
stos
in
cs
cs
cli
push
roll
mov
mov
push
in
xor
inc
imul
sub
dec
lret
xor
sbb
and
sub
mov
movsl
mov
mov
or
loop
or
lods
inc
nop
cli
mov
daa
popa
das
push
mov
mov
pop
dec
pusha
clc
dec
insb
jl
add
psllq
push
in
in
fimuls
ljmp
mov
ds
adc
pop
inc
jns
push
fadds
int
js
fcompl
xchg
in
push
les
cmp
movhlps
es
jno
ror
out
enter
pop
insb
rcr
lock
dec
push
das
testb
js
jg
or
xchg
push
nop
or
xchg
pop
daa
adc
jmp
push
xor
sub
push
das
or
subl
pop
xor
jecxz
dec
mov
add
jns
pop
dec
jns
mov
loopne
sub
add
cmpsl
xor
inc
pop
sbb
ret
jmp
fnstenv
mov
cld
fnstsw
outsb
and
aas
mov
leave
and
inc
mov
data16
fists
mov
call
leave
push
ja
jge
push
xchg
lret
push
enter
dec
in
scas
addb
fidivrs
aas
sub
mov
lret
arpl
sub
xlat
pop
lods
data16
pop
cld
or
pop
xchg
mov
nop
sub
xchg
jl
fidivl
push
fstpt
jno
in
cltd
int3
xlat
and
aas
fldenv
int3
sbb
ja
adc
out
mov
bound
jb
sahf
enter
mov
arpl
and
jbe
loope
xchg
aaa
aad
mov
ret
clc
das
lods
sub
scas
jnp
aaa
sub
mov
pop
in
adc
test
iret
push
mov
inc
enter
mov
cld
pop
adc
mov
mov
push
dec
inc
shrl
pusha
pop
add
ret
mov
test
and
and
aas
sbb
bound
mov
adc
push
mov
or
jecxz
dec
and
pushl
mov
inc
cmp
and
inc
imul
xchg
icebp
push
loopne
test
pop
ret
sbb
or
das
mov
push
add
dec
out
stos
cmpsb
cmp
fldl
loop
int3
dec
mov
and
mov
sub
fisttpll
aad
pusha
jmp
cwtl
lcall
inc
jl
inc
push
insl
ds
stos
add
lret
adc
sarb
cmp
sbb
or
mov
inc
mov
insl
lret
or
dec
mov
jnp
icebp
cmp
decl
mov
add
adc
add
pop
sarl
out
push
inc
mov
stc
xchg
inc
pop
cwtl
aas
and
jl
jns
xchg
mov
xor
in
inc
xor
in
sahf
dec
out
int3
fcmovnbe
popf
sub
xchg
push
js
insl
out
fwait
lock
gs
sub
cwtl
hlt
decb
das
ret
sbb
test
sti
fildll
adc
inc
push
pop
add
pop
cld
and
loope
inc
or
mov
sar
push
and
popf
inc
dec
push
dec
cmpsl
push
out
call
xchg
mov
jmp
movb
fs
mov
xchg
sub
ret
jg
push
js
ss
fistpll
pusha
test
dec
in
add
inc
xchg
rsm
xchg
jge
sbb
mov
pop
sbb
xchg
dec
std
repnz
subb
adc
mov
xchg
arpl
sahf
push
mov
stos
jl
fnstenv
fstl
pop
rclb
dec
mov
mov
or
mov
into
out
jmp
jo
ljmp
mov
dec
xor
and
lds
xlat
jp
xor
das
mov
pop
or
dec
lcall
fcoml
es
sbbb
mov
lret
cmp
test
adc
push
repz
cld
cmp
sbb
push
jl
xchg
loope
mov
jge
cmc
ljmp
pop
cmc
sub
push
fcom
ret
or
repz
call
rcrb
push
push
in
add
imul
jae
pop
pop
cmc
mov
pop
das
je
rolb
ficomps
loop
shlb
sub
jecxz
mov
mov
stc
mov
push
sbb
xor
sub
push
jns
les
fcomps
mov
pop
fsub
pop
push
xor
mov
fnstenv
xlat
mov
mov
and
arpl
mov
mov
xchg
jae
jb
inc
cwtl
std
push
push
and
and
rorb
push
push
dec
and
cmpsl
mov
fcomps
jae
orl
mov
jo
lahf
shll
fistpl
fs
ret
notb
pushf
int
repnz
jg
push
outsl
dec
mov
sbb
sbb
pop
js
shlb
leave
inc
adc
lret
pushl
flds
iret
pop
loopne
or
jge
jne
add
jp
push
cmc
mulb
aas
dec
mov
ja
add
cmp
fsub
adc
cmp
xchg
mov
pusha
or
xor
and
adc
add
or
jne
push
adc
lds
aad
cmp
daa
hlt
subb
cli
mov
rol
ljmp
lret
mov
cmpsl
lahf
mov
xchg
jmp
lea
lret
and
aaa
mov
push
cli
daa
mulb
ljmp
retw
negl
sbb
in
imull
mov
xor
sbbl
and
cmp
nop
xor
test
ret
outsl
cmp
or
loopne
push
xchg
testb
mov
sbb
sbb
sub
xchg
sbb
nop
inc
loopne
fmuls
out
adc
xchg
push
pushf
xchg
out
ret
out
jmp
cmp
or
adc
pushf
xchg
lods
push
mov
or
jno
pop
and
mov
jle
out
mov
dec
scas
pushf
add
push
xor
loope
mov
clc
fstpt
int
dec
xchg
stc
sbb
cs
in
mov
push
dec
cmc
push
xchg
imul
movsl
inc
loop
dec
add
lret
mov
push
cs
cmp
out
mov
mov
mov
fidivrs
cmp
jno
shr
addb
add
adc
or
xchg
and
adc
rorb
into
jb
outsb
arpl
insl
or
mov
mov
jb
or
inc
xchg
mov
lods
jb
push
aad
xchg
xor
mov
pop
dec
push
mov
mov
pop
hlt
daa
adc
adc
mov
mov
loope
lock
and
xor
addb
jns
push
pop
iret
or
negl
clc
sub
mov
popa
out
arpl
daa
sbb
addr16
dec
push
mov
adcl
xor
pop
and
scas
mov
jne
repnz
ljmp
sbb
int
outsl
jp
dec
adcb
xchg
cmpsl
sgdtl
sbb
push
fsubrs
call
loope
cmp
dec
ret
adc
fisubs
or
cmc
int
xor
out
mov
adc
mov
fistps
cmpsb
subb
sbb
dec
sbb
cmp
inc
mov
loop
lret
inc
add
ljmp
iret
rcr
inc
lods
out
pushf
test
and
mov
mov
dec
cltd
sub
rclb
into
cmp
push
jle
imul
ret
fsub
add
lea
push
push
repz
test
nop
cmpsl
push
fwait
imul
mov
sub
fstpl
loope
jp
rcl
mov
repnz
inc
bnd
ljmp
adc
jo
movsl
into
jnp
mov
pop
fmuls
loopne
mov
cwtl
mov
or
xor
stos
mov
mov
mov
sbb
lea
mov
pop
xchg
sbb
arpl
rolb
xchg
xlat
and
sbb
jb
roll
aaa
cmp
mov
push
xchg
push
mov
rcl
push
icebp
or
movsw
adc
jne
imul
insl
jecxz
push
xor
jbe
mov
dec
outsl
je
daa
xchg
jne
dec
pop
hlt
dec
pop
outsb
arpl
lods
jbe
cmp
inc
sbb
cltd
in
jg
rcpps
and
imul
push
call
into
push
xor
xchg
sbb
into
mov
inc
xor
mov
cmc
or
mov
push
sbb
negb
fsubr
or
cmpsl
data16
mov
sbb
lahf
add
pop
xor
sbb
pop
lea
xorl
out
xchg
cmp
les
in
push
add
and
out
sub
mov
inc
arpl
xor
push
shlb
ret
or
scas
mov
xor
es
push
mov
add
ja
xchg
push
mov
in
pop
push
mov
in
jb
pusha
dec
stos
inc
out
jae
rorb
push
mov
xchg
sarb
pop
jbe
cmp
inc
repz
stc
pushf
push
out
mov
adc
jmp
movsl
rorb
mov
insb
imul
add
mov
sbb
jp
es
lahf
adc
cs
loopne
add
xor
jbe
lret
jo
mov
fldln2
psubw
push
push
aad
dec
fldenv
pop
mov
xchg
movsb
jge
mov
repz
and
inc
repnz
shlb
loopew
mov
mov
jl
pop
sub
int
add
jae
inc
dec
hlt
popf
push
mov
repnz
loope
pop
adc
add
mov
scas
lds
das
add
mov
in
and
add
add
and
out
jb
jl
and
in
loop
cmp
sbb
lret
mov
sbb
inc
stos
insl
ret
movb
les
in
mov
xor
insb
ds
jo
and
int3
sbb
aas
scas
inc
leave
in
jp
sbb
lret
out
hlt
mov
adc
and
pushf
ja
and
cli
cmpsb
pop
out
std
add
ja
pop
cmpsl
popa
gs
mov
mov
dec
in
les
cld
xlat
nop
cli
push
jno
lcall
sarl
inc
pop
sbb
mov
xchg
js
jmp
mov
xchg
dec
clc
leave
inc
movb
jp
rorl
imul
std
xor
fmuls
push
push
std
pop
cwtl
mov
out
ss
or
lods
jmp
cs
out
xorb
pop
jne
shrl
dec
in
sahf
imul
cli
outsl
imul
aad
dec
je
and
loope
cmp
dec
shl
or
mov
xchg
out
dec
or
push
adc
inc
mov
inc
movsb
loop
mov
pop
cmp
loopne
loopne
mov
mov
loop
sarb
imul
cs
add
aas
push
mov
adc
bndldx
ficompl
or
xchg
xchg
cmp
add
fisubl
orb
shlb
subb
cltd
scas
insb
gs
inc
xor
in
cltd
arpl
push
add
out
jl
adc
shlb
push
jecxz
jb
sahf
rcrb
dec
mov
insb
cmp
ja
inc
mov
movsb
xchg
in
inc
scas
enter
pop
xchg
lcall
mov
cmp
rorb
ljmp
cld
in
and
inc
sbb
or
dec
mov
test
movsb
dec
sub
push
nop
jmp
popa
push
sub
andl
stc
scas
sbb
sbbl
push
inc
cmp
aas
jnp
sub
jge
pop
popa
jle
out
pop
stos
bound
pop
pop
pop
ss
lock
rolb
mov
adcl
data16
xlat
add
push
imul
jne
lds
jle
ret
into
cmp
and
mov
popf
hlt
imul
hlt
xor
stc
dec
fs
mov
xchg
pop
mov
clc
mov
jecxz
fbstp
lret
mov
pushf
mov
sbb
mov
jnp
cwtl
push
inc
jo
mov
insl
sarb
xchg
or
push
lods
push
dec
sub
cmpsl
aas
scas
pop
jo
add
mov
xchg
icebp
loop
ret
rorb
jnp
std
ljmp
in
roll
dec
jbe
dec
xor
inc
dec
mov
or
add
fistpl
mov
xchg
xchg
daa
cmp
jecxz
rcrb
push
jb
fsubrl
mov
pop
lcall
adc
add
sbbb
addr16
mov
sbb
and
fs
lds
cmp
lea
jle
jb
orb
sbb
iret
dec
mov
pop
mov
lahf
scas
clc
in
inc
pop
popa
int3
pop
push
repnz
or
sbb
xor
add
std
dec
mov
popa
inc
mov
arpl
sbbb
les
mov
fsubl
cmp
dec
mov
cmpsb
xor
and
pop
inc
jno
sbb
mov
mov
enter
lods
xchg
jb
mov
das
cmpsb
push
and
dec
mov
sub
jne
adc
dec
cmp
sub
jecxz
cmpsl
loopne,pt
out
inc
cmp
dec
call
adc
fwait
dec
jle
clc
es
mov
std
and
sbb
ds
xor
ja
imul
lret
mov
inc
push
xor
lcall
adc
insl
add
imul
out
pop
add
cmp
jp
sub
inc
leave
pop
iret
or
bound
mov
andl
mov
insl
and
lea
pusha
mov
xlat
and
je
and
movsb
or
sbb
data16
imul
dec
sub
or
pop
adc
cmp
scas
addl
outsb
test
mov
outsb
notl
mov
enter
pop
lret
add
adc
out
stos
mov
dec
mov
push
pop
or
iret
or
das
adc
lods
cmp
pop
push
jmp
test
adc
jle
insb
mov
popa
mov
dec
jae
pop
sbb
cwtl
fdiv
xchg
sarb
xor
sub
aaa
lcall
mov
or
inc
push
mov
popl
aad
push
leave
pop
mov
xchg
push
pop
and
mov
addr16
adc
sbb
shl
idivl
mov
shll
pusha
mov
push
jbe
inc
sbb
mov
aaa
pop
xchg
lods
cld
mov
insl
cs
dec
dec
or
lret
inc
cmp
mov
mov
roll
sti
bound
jae
pop
mov
stos
into
jmp
repnz
cmp
mov
xlat
mov
loopne
or
arpl
adc
ret
push
es
icebp
push
push
test
sub
das
femms
pop
cmpsb
aad
addr16
xor
inc
mov
xchg
in
test
mov
fcoms
lods
mov
fnstenv
push
lcall
or
and
or
and
push
add
inc
ja
pop
aas
in
out
imul
int3
stos
lods
adc
loopne
nop
aad
mov
insl
ret
cltd
jae
add
and
pop
xor
jae,pt
fnsave
adc
mov
daa
mov
jb
outsb
dec
mov
mov
enter
cmpsb
mov
cld
mov
iret
push
jnp
sub
sbb
cmpsl
repnz
dec
pop
or
sbb
sbb
jbe
jbe
jp
loope
mov
mov
out
repnz
sbb
push
repz
sub
lock
mov
jno
scas
pop
lods
loop
out
xor
bound
add
js
mov
mov
in
mov
jbe
je
shrl
xor
mov
mov
cld
loop
jg
sbb
mov
rorb
nop
scas
jge
push
add
dec
arpl
addb
insb
movsl
xor
cmp
xchg
and
int
pop
xchg
mov
adc
or
sbb
cmp
adc
cli
daa
push
jne
mov
mov
imulb
push
mov
adc
adc
jnp
pop
or
and
pusha
mull
cmp
mov
and
lea
push
mov
mov
test
daa
xor
sub
aad
popa
mov
pop
mov
data16
sub
outsb
jecxz
adc
inc
and
pop
or
fwait
sub
cltd
or
push
adc
push
fnstcw
push
push
sahf
outsl
popf
sbb
mov
into
sti
xor
and
push
push
leave
push
cmp
sub
loope
mov
in
popf
test
aas
test
imul
inc
inc
jno
sbb
call
mov
xlat
fiadds
shll
jl
adc
sub
cs
out
jne
adc
mov
and
out
inc
xchg
js
out
push
xor
push
mov
test
pop
daa
dec
cld
std
fidivrl
sahf
inc
mov
push
and
mov
pop
cmpsl
jbe
fidivrl
testl
call
mov
test
out
ret
in
pusha
stos
xor
ss
ret
and
out
adcb
adc
xor
inc
mov
or
mov
fucomi
jo
je
or
push
xchg
dec
jb
popa
aaa
push
stos
xor
xor
or
ret
clc
sub
les
cmp
je
outsb
outsb
sub
mov
dec
clc
sahf
jb
mov
sub
mov
push
jne
scas
or
mov
jge
in
adc
bnd
cmp
lods
mov
fs
fs
enter
push
inc
pop
vcvtsd2ss
ss
insb
xchg
mov
jl
pop
add
pop
pop
rclb
mov
cltd
scas
mov
jb
cmp
xor
xor
shll
ret
ror
cmp
imull
lea
jecxz
push
cmc
jle
sbb
inc
lret
imul
sub
std
cmpsl
mov
xor
rorl
flds
xchg
and
pop
pusha
or
pop
int3
in
lock
addr16
add
loope
lret
adc
xchg
push
outsl
outsl
in
cmp
clc
xchg
mov
js
push
clc
and
sub
cli
and
enter
out
aaa
sbb
jb
xchg
inc
enter
sub
iret
int
loope
sub
sub
ret
cltd
sbbb
mov
and
fs
xor
scas
cld
adc
fists
stos
sub
mov
and
sbb
lock
enter
sub
bound
push
jg
adc
mov
adc
imul
mov
jbe
pop
cmpsl
xor
push
scas
iret
cvtps2pi
push
xchg
sbb
fcmove
aad
fidivrl
xchg
and
sub
clc
cmp
aas
scas
ja
into
scas
push
movsl
es
loop
mov
icebp
dec
or
mov
xor
xor
inc
cmp
inc
pop
mov
insb
xorb
xchg
aaa
ss
mov
int3
fsubrl
or
and
mov
xor
sub
dec
xchg
pop
testb
popa
cwtl
imul
je
mov
mov
ffreep
xchg
push
sahf
pop
cmpb
and
pushf
fadds
mov
jno
in
bound
mov
outsb
adc
xor
jl
call
and
dec
sbb
and
push
repnz
mov
xchg
out
cmp
aas
mov
insl
pop
cld
outsb
lcall
outsb
cmp
mov
push
adc
jno
orl
pop
jmp
sarb
jnp
mov
pop
jle
push
xchg
mov
mov
jecxz
pop
ljmp
stos
sahf
inc
int3
sbb
test
xchg
sub
and
or
stos
lods
jecxz
sti
xor
test
jno
cmp
out
adcb
inc
lea
dec
std
cwtl
scas
gs
mov
out
imul
sbb
mov
ljmp
mov
dec
inc
mov
addr16
fcompl
dec
xchg
mov
rcll
add
icebp
aaa
cmp
jne
std
jmp
push
push
incl
cmp
loopne
lea
dec
push
es
push
sub
mov
or
cmp
mov
dec
adc
jle
fstl
pop
inc
inc
fistl
adcl
cltd
ret
dec
std
ret
add
cltd
out
imul
clc
sbb
sahf
jnp
inc
mov
push
or
pop
nop
mov
movsl
inc
popf
test
jno
mov
mov
loopne
adc
pop
insb
sbb
jle
cmp
dec
outsl
inc
dec
jmp
gs
out
es
cli
fldl
dec
jmp
mov
cli
sbb
shll
arpl
iret
std
xor
clc
lea
pop
lods
jle
fcomi
lock
fwait
sarl
icebp
inc
xchg
test
and
jle
sub
pop
push
repnz
cmp
ficomps
and
add
add
outsb
jmp
dec
outsl
cwtl
call
sub
shrb
in
int
lret
adc
out
gs
data16
jg
aam
or
xor
lods
mov
push
icebp
xor
dec
sarb
jno
and
cmp
jecxz
xor
scas
scas
loopne
xchg
mov
filds
enter
adc
out
and
adc
cmc
push
shrb
js
pop
adc
mov
pop
sbb
sahf
xor
js
mov
test
push
movsb
mov
cmpsl
pop
or
and
repz
ljmp
subl
lods
pop
gs
roll
scas
in
scas
xlat
xor
dec
mov
dec
xchg
mov
xchg
lock
jno
jo
sbb
push
rclb
fildll
movsb
sub
pusha
scas
mov
daa
fwait
pop
dec
sbb
sbb
dec
insb
scas
enter
xchg
push
mov
mov
mov
add
jnp
testl
arpl
xor
shrl
xor
or
dec
sbb
add
imul
lea
bound
or
mov
pop
scas
idivb
pop
mov
xorb
mov
inc
push
rorb
pop
push
lahf
shll
or
push
out
pop
pop
or
pop
ret
mov
pop
inc
out
adc
lods
ljmp
adc
adcl
cmp
std
dec
outsl
lods
mov
out
mov
sarl
dec
push
dec
pop
fstpl
sbbb
mov
mov
popa
insl
enter
mov
mov
pop
jno
inc
sbb
or
pop
popf
lahf
pop
xchg
das
add
aas
xchg
int3
dec
xlat
insb
sahf
ja
xchg
pop
fistpl
jo
cs
jl
adc
cltd
or
call
fimuls
je
mov
or
andl
jle
pop
outsb
mov
sub
adc
outsl
sbb
jmp
xor
jnp
xchg
adc
pop
sbb
mov
stos
cmc
in
pop
sub
mov
dec
mov
icebp
inc
mulb
and
jmp
je
sub
out
movsb
xchg
cmp
push
nop
dec
in
fstpl
adcb
mov
xor
adc
les
cmp
movsb
data16
call
ret
xchg
and
xchg
sbb
pop
fucomp
jge
lea
sbb
stos
dec
jge
mov
out
nop
dec
sbb
inc
out
add
sbb
push
insl
in
jo
adc
fdivs
dec
adc
and
rcr
incb
add
and
test
push
ljmp
push
xchg
push
inc
cmc
dec
mov
sbb
lret
xchg
push
hlt
mov
mov
not
or
pop
je
arpl
sbb
int3
dec
pop
or
cltd
fstl
leave
inc
cmc
or
dec
stos
nop
mov
cltd
xor
fstl
movsb
pop
ja
xchg
fnstsw
jmp
add
mov
mov
jb
int3
push
inc
jns
ds
add
and
inc
xchg
mov
cld
jb
inc
dec
imul
push
add
mov
cwtl
push
repnz
jnp
fcoms
int
push
mov
dec
pusha
fcompl
lods
dec
fdivrp
jg
ja
test
pop
push
hlt
imulb
adc
inc
insl
das
lcall
fwait
out
jne
xor
cld
lahf
push
int3
mov
popf
das
insb
icebp
rcl
xchg
test
sbb
pushf
test
and
pop
xchg
push
fwait
std
jl
movsl
xlat
or
outsl
push
test
cmp
sbb
and
sub
pop
push
dec
sti
lea
mov
js
rcrl
push
lret
repz
fisubs
icebp
jg
cmpsb
movsl
cmp
inc
pop
cltd
stos
mov
loope
pop
xchg
fs
push
fbld
inc
xchg
cwtl
jl
cmp
jmp
loope
mov
lahf
aad
pop
rcl
and
cwtl
out
dec
adc
loop
lret
or
add
mov
cmp
dec
fdivrl
xchg
nop
cmp
subl
pop
mov
sbb
sbb
stos
les
enter
cmp
inc
xchg
dec
pushf
inc
aaa
inc
cmpsl
test
lcall
daa
pushf
jno
sahf
cmp
push
xchg
push
mov
imul
mov
jae
lret
call
cwtl
stos
mul
pop
pop
jb
std
jecxz
xor
addr16
cwtl
pop
bound
cltd
adc
inc
sar
inc
jb
popf
mov
ljmp
dec
rcr
jnp
xchg
sbb
jl
bound
das
ret
enter
or
mov
loope
mov
mov
sbb
test
sub
mov
push
pushf
cmpsl
inc
xchg
or
repnz
push
add
inc
fwait
adc
sub
popf
xchg
inc
mov
dec
dec
inc
and
ret
jle
test
leave
xor
mov
stos
xchg
lods
jb
iret
sub
xchg
aad
movb
outsl
cmp
addr16
repz
inc
notl
xchg
mov
inc
xchg
popa
dec
push
add
push
das
cld
jl
cs
cmc
mov
test
add
arpl
repnz
pop
loopne
sti
loope
lret
mov
aad
jmp
stc
rcll
fdiv
inc
add
fistpll
in
sar
cld
ljmp
sbb
add
sbb
mov
add
movsb
mov
out
jmp
push
push
repnz
xor
mov
lret
mov
test
mov
mov
fnstenv
loopne
xor
push
dec
or
sbb
jge
adc
into
fwait
xchg
xchg
or
cs
sbbl
adcb
mov
lds
in
pop
fwait
sbbl
loope
xor
ds
sti
mov
shrb
push
dec
mov
call
cmpsb
adcb
push
dec
fsubs
lcall
iret
scas
xor
popf
mov
lock
aad
jg
sahf
test
inc
inc
inc
pop
inc
dec
and
jge
repz
rcll
xor
out
mov
xor
xchg
push
int
and
jge
inc
in
outsb
add
mov
jmp
inc
imul
push
adc
repz
or
flds
mov
jno
es
cmpb
dec
pop
mov
iret
aaa
test
or
push
in
inc
sub
cltd
mov
stos
scas
or
cmp
mov
push
int3
inc
xorb
cwtl
adc
inc
or
push
popl
jecxz
pop
cmp
pop
inc
sbb
mov
or
insl
fnstsw
bound
mov
or
fnsave
divl
mov
push
in
mov
push
jne
push
les
add
rorl
sub
lcall
inc
pop
mov
cmc
pop
das
inc
xchg
or
pop
lret
arpl
xorl
jne
push
lcall
outsl
push
outsb
call
dec
mov
xchg
shrl
cli
push
pop
add
cld
mov
repnz
pop
inc
jne
push
clc
jg
push
icebp
popf
in
dec
dec
sbb
popa
in
loopne
mov
div
adc
pusha
leave
fidivs
cmpsl
cmp
dec
mov
mov
int
push
idivb
shlb
sbb
jae
fisttpl
arpl
fwait
pop
lock
mov
in
pop
or
rorl
mov
dec
out
test
into
pop
or
jecxz
movsb
clc
repnz
mov
push
scas
jge
adc
xchg
pop
add
leave
sbb
stos
push
int
jmp
push
aam
out
or
mov
jnp
rorb
push
dec
fwait
mov
ret
sub
pop
iret
movsb
add
mov
xchg
jo
fldl
ljmp
lods
lds
fwait
push
cli
push
xchg
pusha
sub
movsl
sub
mov
call
mov
and
cs
dec
sahf
mov
and
jae
dec
mov
stos
idivb
fistpll
inc
jge
jp
inc
dec
mov
in
push
add
cmp
inc
sbb
ret
enter
pop
push
pop
and
int3
sbb
pop
adc
lods
movsb
arpl
icebp
je
push
mov
push
jle
testb
xchg
push
lods
ds
pop
loope
clc
inc
and
mov
pop
js
sbb
and
lcall
nop
js
push
sub
adc
cmc
xchg
jae
mov
inc
inc
xchg
sbb
cltd
mov
fwait
iret
mov
pop
dec
iret
ret
in
notl
mull
jge
fwait
cwtl
pushf
rcrl
out
fdivrl
mov
test
ret
aaa
adc
aad
int
push
in
jp
aaa
out
lds
scas
add
test
pusha
lahf
jo
xchg
mov
shll
push
mov
inc
or
inc
in
imul
pop
outsb
pop
es
aas
imul
pop
and
sub
test
dec
cwtl
jbe
or
pop
aad
stc
mov
rorb
jbe
dec
mov
lahf
push
and
adc
pop
cmp
aas
mov
aas
addr16
ret
ret
fidivrs
mov
pop
mov
les
jle
jns
add
or
mov
push
jne
loope
xchg
push
cld
pop
ds
das
sub
pop
mov
nop
rcrb
jp
push
push
shl
push
adc
fxch
fistps
jecxz
jmp
lret
or
out
and
arpl
pop
inc
idivl
test
outsl
into
pop
add
sahf
push
call
pop
fs
pop
fs
mov
stos
call
lods
mov
fldl
jnp
mov
fdivrp
hlt
jl
test
cmp
fisubrs
repz
aad
mov
pop
push
push
xor
cmp
push
shrb
cmpsl
ret
mov
xchg
cmpsb
jae
pop
fadd
test
mulb
fistps
sub
dec
out
or
push
cmp
ret
add
cli
sub
in
sub
data16
jnp
dec
mov
mov
std
lret
insb
ret
out
ficoms
push
not
test
sbbb
jbe
testl
and
in
dec
xor
xor
or
lcall
add
movmskps
sbb
and
scas
rorb
push
sbb
clc
mov
pop
scas
into
popf
xchg
mov
pop
inc
xchg
leave
addl
imul
or
outsb
frstor
roll
hlt
pop
loop
mov
in
push
sbb
mov
adc
mov
inc
fisubs
sub
hlt
mov
cmp
push
lock
xor
mov
push
sbb
addr16
mov
xor
adc
inc
mov
push
and
mov
enter
jge
adc
inc
push
and
lcall
pop
or
icebp
vpsllw
jns
sbb
inc
xlat
jae
addr16
pop
adc
dec
inc
cs
lods
inc
xchg
pop
inc
inc
rsm
into
inc
sbb
loopne
sub
jmp
mov
scas
mov
ror
add
fstl
and
add
rol
cmp
xchg
cli
outsl
mov
jno
add
sub
dec
lods
cld
ljmp
int3
push
fldl
rolb
iret
out
in
dec
call
leave
fdivs
out
ja
into
lret
adc
push
dec
mov
mov
push
xchg
iret
dec
shll
inc
ss
xor
iret
les
and
fwait
adc
cmp
xchg
push
sbb
lret
movsb
popa
cmp
lcall
fmuls
dec
jae
pop
and
adc
ret
aad
dec
jmp
lret
xor
test
mov
das
dec
insl
in
cmpb
cmpsb
sub
adc
mov
sbbl
fs
aam
icebp
sti
test
mov
in
push
into
divb
mov
out
add
fnstsw
repnz
push
sbb
inc
int3
mov
dec
mov
cmp
push
into
cli
jne
mov
scas
dec
adcl
jl
xor
repnz
pop
pop
pop
inc
inc
test
jo
ss
xchg
mov
lods
lcall
in
hlt
push
in
and
push
mov
mov
test
setle
mov
push
mov
out
xchg
mov
call
xlat
dec
mov
pop
dec
or
mov
gs
sub
jnp
lds
jne
pusha
shl
rclb
xor
push
call
icebp
insb
add
sub
cmp
jb,pn
sub
xchg
aas
mov
faddl
movsb
mov
aad
fcmovnbe
arpl
lahf
sub
xchg
adc
ja
and
stos
fs
mov
jge
ret
arpl
adc
xchg
mov
clc
outsb
xchg
or
add
or
jp
ljmp
clc
jecxz
out
orl
adc
xchg
andb
sub
jl
dec
scas
dec
stos
rol
pop
jle
ret
dec
add
push
add
fnstsw
in
out
jnp
ja
pop
jns
pop
pushf
mov
rorb
sbb
fs
cmc
mov
fwait
test
push
daa
mov
pop
inc
mov
outsb
push
add
mov
lods
icebp
shlb
roll
mov
dec
mov
mov
notl
fbstp
pop
mov
cltd
jo
jno
fisubl
js
pop
dec
jne
jg
imul
pop
or
jle
cmpsb
sbb
mov
cmpsb
push
mov
add
cwtl
pop
out
arpl
xchg
nop
sahf
sub
shrb
lret
fs
test
cli
jne
ret
push
or
mov
test
sub
mov
jo
fcoml
in
mov
andl
inc
or
ds
outsl
test
add
xor
mov
lods
test
in
cmp
jnp
add
shll
or
int3
mov
pop
adc
sub
jnp
and
int3
lods
std
stos
dec
inc
inc
sbb
and
inc
addl
add
adc
lds
jp
data16
nop
or
adc
push
push
or
movl
inc
scas
or
dec
es
inc
dec
mov
pop
lcall
inc
ret
int3
jge
dec
pop
xchg
push
push
cltd
cmpsl
cld
xor
std
loope
inc
daa
es
rcrl
pop
adc
mov
and
xchg
pop
aad
cmpsb
push
fsubs
sbb
adcb
adc
setp
jp
and
lds
stos
and
or
pusha
cmc
sub
fidivrs
das
filds
xchg
cmp
dec
fidivrl
add
mov
lods
sarl
push
push
inc
cmpsb
lods
mov
in
add
push
push
jo
fldt
and
pushl
mov
addr16
mov
pop
fs
xchg
call
jb
mov
add
cmc
cmp
adc
add
out
movsl
cmp
dec
or
cwtl
mov
mov
ss
xor
pusha
add
inc
mov
movsl
push
sarl
into
dec
pop
arpl
jl
mov
hlt
lahf
and
or
inc
out
xchg
enter
inc
cmpb
mov
pop
jle
jmp
fstpt
scas
popa
xchg
push
icebp
leave
adc
icebp
dec
dec
mov
mov
scas
in
and
out
fwait
push
add
pop
mov
pop
sbb
imul
dec
xlat
push
cmp
mov
inc
stos
dec
into
outsb
loopne
pop
std
push
mov
or
inc
lock
mov
sub
dec
dec
das
inc
movsl
inc
ficoml
pop
pop
cmp
pushf
imul
jo
sub
push
adc
shrl
jge
jno
push
clc
cmp
jle
pop
xchg
mov
cmc
push
aad
ret
push
push
inc
int
fwait
dec
test
leave
addr16
ror
lret
xchg
aaa
lods
lret
scas
int
movsb
xchg
xor
mul
mov
cs
mov
test
ja
or
sub
inc
sbb
das
out
in
pop
dec
ret
test
add
rol
adc
jns
dec
cmp
ret
test
and
push
in
add
rcrl
shll
dec
popf
pop
les
addb
pop
xchg
fs
into
ljmp
xlat
rcll
push
sbb
call
out
xchg
dec
stos
sub
aaa
jb
hlt
pop
lods
stos
shrw
sub
imul
sub
and
js
or
jecxz
and
dec
aaa
push
lret
fisubs
xchg
cli
imul
push
xchg
adc
pushf
or
lds
adc
jmp
mov
add
rcll
pop
fimull
or
aas
dec
mov
into
jl
dec
scas
lcall
cld
push
jnp
mov
mov
cld
push
mov
pushf
dec
mov
fists
adc
add
or
push
add
pop
es
or
cmp
out
dec
call
cmpsl
and
fwait
pop
sub
movsl
jp
or
cmp
iret
cmp
stos
and
imul
fcomi
inc
pop
inc
pop
outsb
cmp
adcb
pushf
clc
nop
push
xor
cmp
jb
adc
in
or
divl
or
mov
fwait
sbb
sub
mov
jbe
mov
jecxz
or
sahf
jns
movsb
push
jb
test
sbbl
addr16
push
fwait
das
loop
lds
and
sbb
mov
pop
into
or
cmp
mov
sub
push
mov
add
cs
out
pop
sub
jnp
cmp
dec
int3
bound
and
cld
xchg
aaa
cmpsl
aaa
flds
add
mov
mov
cmc
leave
fidivrl
test
or
pop
orl
jne
stc
push
jecxz
pop
sbb
repz
fdivrs
insb
jg
insb
xchg
scas
mov
mov
test
aam
jno
cltd
mov
mov
in
cmp
inc
or
lock
dec
out
push
xchg
ret
cwtl
push
fsubs
les
xlat
and
mov
movsl
mov
dec
in
mov
add
add
out
mov
js
cmp
loop
push
mov
icebp
mov
hlt
inc
and
stos
jmp
popf
repz
repnz
test
icebp
les
jbe
ror
mov
push
push
pop
mov
out
mov
cmp
push
shll
into
sub
ljmp
inc
loop
out
dec
in
xlat
mov
shr
clc
or
mov
mov
cltd
fiaddl
adc
sub
loopne
cmp
cmp
add
pop
int
decb
rcll
ljmp
inc
popf
rclb
push
mov
xor
push
mov
enter
xchg
cltd
les
fnsave
es
xor
iret
dec
adc
sub
into
xchg
mov
out
add
add
jmp
push
pop
push
dec
arpl
jg
and
clc
mov
fildl
aam
lahf
iret
dec
jmp
lds
lret
mov
lret
movsl
insb
xor
fwait
add
mov
mov
sbb
daa
call
or
outsb
popf
out
xchg
adc
adc
dec
mov
xor
popa
inc
int
mov
mov
test
in
jno
lret
xchg
lods
imulb
pusha
xchg
mov
rolb
stc
xchg
mov
adc
and
inc
add
pop
push
ljmp
dec
jl
adc
fidivrl
shlb
out
mov
mov
popf
adc
xchg
dec
dec
lds
mov
jb
xor
mov
pop
loop
sti
shr
sbb
or
xor
stos
xchg
jnp
cld
and
adc
fldl
imul
dec
and
cmc
pop
clc
pop
aad
dec
mov
in
sti
mov
sarl
adc
jae
mov
in
mov
bound
adc
mov
sub
call
mov
mov
jae
xchg
lock
pushaw
iret
jns
movsl
cmpsl
jbe
clc
dec
call
fildll
fwait
mov
xor
xchg
pop
adc
fbld
es
xchg
repz
call
stc
mov
pop
jg
dec
dec
mov
or
pushf
push
test
movsl
mov
mov
fldt
sub
cmp
aaa
jb
sub
and
lahf
cltd
and
lods
dec
xchg
es
aad
enter
call
fbld
fstl
dec
pop
dec
aam
scas
rclb
pop
pop
fidivrs
and
sub
jno
mov
xchg
pop
stc
cmp
add
inc
cwtl
and
hlt
mov
sbb
add
mov
sarb
and
xor
arpl
scas
jge
outsb
adc
js
jnp
xor
inc
call
mov
sbb
mov
shrb
rolb
jecxz
xor
dec
push
mov
ja
and
dec
scas
mov
dec
movsb
inc
cmp
jp
cld
mov
sahf
cmp
fidivrl
movsb
xorb
imul
das
add
lea
or
dec
add
rcr
mov
ss
into
and
roll
push
inc
cltd
adc
cmc
cmp
pop
jmp
movsl
sahf
jmp
shl
mov
jp
xchg
std
jno
sbb
mov
lcall
adc
cmp
add
mov
push
mov
ss
int
hlt
and
sar
cmc
aaa
popa
xor
adc
repz
ss
daa
jmp
xchg
jl
fnstenv
cli
mov
mov
lahf
imul
decl
jle
adc
push
add
mov
jl
mov
shl
sub
addr16
mov
mov
aam
out
xchg
test
xchg
xchg
rclb
pushf
cmp
mov
iret
add
imul
stos
mov
lods
push
inc
cwtl
pop
pusha
std
sbb
pop
sarb
cmp
mov
mov
ds
or
jno
bound
in
jo
xor
ljmp
xor
pop
jl
lds
nop
xchg
cmp
and
orb
sub
inc
aaa
cltd
je
xlat
and
scas
inc
int3
ss
or
repz
mov
adc
lret
xor
cs
call
in
mov
popf
imul
jo
popa
jno
dec
bound
outsb
shll
shl
dec
adc
test
inc
lahf
pushl
add
and
jae
mov
movsl
xor
and
mov
ror
aad
cmp
mov
sbb
dec
loop
push
xor
pop
add
inc
out
arpl
ss
xchg
mov
aad
xchg
cltd
out
insl
negl
add
rcrb
xchg
sti
lahf
sbb
sbb
xchg
dec
les
std
push
jb
mov
pop
rcrb
jg
or
mov
jb
push
add
ds
mov
aaa
in
mov
clc
cld
xor
mov
cwtl
shlb
cli
inc
xor
mov
and
push
fdivrs
xor
sub
not
xchg
pop
dec
dec
mov
inc
movsl
inc
push
and
xchg
imul
add
adc
xchg
andl
pop
in
xlat
mov
mov
xor
int
scas
iret
push
repnz
lret
outsl
jnp
xorb
jl
inc
sti
stc
xor
adc
and
mov
sub
inc
inc
push
jmp
sub
dec
adc
cli
test
out
cwtl
scas
mov
xor
mov
xor
inc
mov
rolb
mov
pop
iret
add
test
mov
aaa
xchg
jecxz
cmp
sbb
pop
mov
mov
lods
adc
pop
mov
cmp
mov
fs
lea
add
mov
xor
pop
xchg
push
stos
ret
jo
fisubl
inc
test
xchg
ljmp
jb
pop
pop
inc
loope
sarb
jns
outsl
push
xchg
andb
sbb
pop
sub
aaa
lods
aaa
fists
fsubl
lret
in
aaa
loop
and
mov
mov
test
xchg
out
dec
leave
lcall
mov
enter
dec
aam
xlat
test
enter
fidivrs
mov
push
and
pop
repz
xor
cmp
pop
stc
xchg
addr16
adc
mov
mov
mov
xchg
pop
subb
icebp
sub
push
jns
mov
push
xchg
push
xchg
cli
inc
mov
cmp
push
es
shll
mov
mov
jbe
sub
movsl
scas
data16
mov
mov
rcrl
cwtl
out
aas
int3
cli
sub
inc
pushf
pop
and
jle
outsl
dec
shrl
sti
or
cmp
insl
ds
std
pusha
insb
sub
xlat
or
xor
sarb
mov
in
sarl
and
or
das
rclb
hlt
rcrb
cmp
or
mov
imul
cltd
xchg
inc
push
lret
cmp
dec
daa
jg
call
inc
movsb
lret
inc
movsl
ret
push
or
dec
or
negl
sbb
jo
lock
inc
add
cmp
jmp
sbb
adc
ret
stos
lock
lds
xor
out
xor
cmpsl
add
lock
inc
scas
xor
mov
into
adcl
and
mov
hlt
in
sub
and
outsl
dec
push
pop
xchg
cmp
fcmovne
in
test
pop
jmp
mov
push
int3
fsubr
stos
add
orl
dec
mov
push
sub
je
xlat
ret
add
addr16
ret
sbb
loop
ret
push
scas
mov
aam
dec
fwait
push
mov
aam
scas
nop
in
addr16
iret
cmp
addl
pop
jge
add
aaa
lcall
xchg
pop
mov
lods
bound
out
lahf
cli
fbstp
adc
sub
imul
dec
mov
xchg
cmp
mov
imul
mov
movsb
lahf
data16
movsb
jmp
pushl
mov
dec
inc
jmp
and
ds
sbb
outsl
popa
xor
sub
xchg
pop
mov
mov
lcall
jl
sub
pop
mov
add
mov
and
push
mov
dec
sbb
das
fisttps
pop
cltd
cmp
mov
sub
mov
inc
jg
popa
xchg
xchg
iret
mov
xchg
inc
nop
cmp
fidivrl
hlt
sbb
repz
sti
lock
ds
push
pop
scas
push
push
imul
clc
in
jo
sub
pushf
inc
push
mov
xorb
hlt
pop
dec
mov
pop
or
dec
sbb
xcrypt-cbc
cmpsl
push
mov
repz
lods
push
xchg
out
inc
lea
lea
inc
mov
inc
push
out
daa
fists
mov
enter
clc
add
cld
addr16
out
neg
fdivrs
adc
jne
pop
dec
cltd
hlt
fsubl
icebp
jne
ficompl
jp
faddl
pop
lods
rorl
les
movsl
lret
dec
push
push
cltd
aam
rol
aam
enter
in
inc
pop
fistpl
or
scas
ror
stos
add
jae
in
scas
js
sahf
orl
jl
mov
aam
fs
fdivl
xchg
pop
jbe
cs
imul
lds
stc
push
fstl
out
xchg
cmp
inc
sub
ret
cmp
add
jo
mov
aad
jb
es
gs
movsl
outsb
decl
daa
sub
sbb
fisubrl
jecxz
and
mov
inc
add
jne
subb
daa
fwait
xchg
lcall
push
imul
and
xchg
lcall
sub
pop
mov
mov
xlat
push
test
loop
pusha
outsl
testl
sub
cmp
jmp
sub
push
lods
mov
sbb
adc
icebp
xchg
mov
xchg
or
or
xor
mov
cmpsb
hlt
or
arpl
sbb
mov
xor
xor
fisttps
pop
jg
sub
popf
sbbb
push
push
adc
mov
incb
pop
ljmp
test
and
mov
push
lea
or
xchg
mov
mov
pop
pop
mov
dec
dec
xchg
xchg
mov
jl
adc
or
mov
sbb
arpl
icebp
dec
inc
sbb
sbb
aam
mov
int3
xchg
sbb
ss
dec
nop
dec
scas
scas
dec
shll
inc
pop
rolb
pusha
xlat
or
nop
dec
popa
cmpsb
push
pop
loop
inc
mov
fidivs
das
xor
test
icebp
icebp
lds
sbb
in
push
xchg
aam
aad
rol
jp
pushf
dec
sub
sub
pop
loope
adc
aas
mov
aas
sbb
imul
add
pop
popa
push
fbld
adc
flds
stos
out
jns
repz
sub
int
lcall
dec
ret
aad
push
cmp
add
frstor
mov
cmpsb
mov
cmp
in
adc
sub
cmp
fdivrl
dec
xor
mov
pop
sub
xchg
mov
cmc
mov
inc
bound
dec
adc
lods
mov
or
and
adc
jnp
popf
sbb
ds
inc
cmc
into
add
cmp
pop
fildll
xor
mov
inc
xor
rcr
in
test
sahf
test
xor
jmp
pop
add
mov
and
test
sahf
int3
dec
sub
js
pusha
push
sahf
std
repz
sbbb
xchg
stos
or
cltd
in
std
subl
bound
xchg
bound
repz
mov
shll
jns
cmp
cmpl
outsb
add
ljmp
pop
ss
jb
adc
dec
sbb
pop
in
std
mov
sarl
jbe
mov
mov
pop
xchg
and
xchg
iret
je
ja
mov
xchg
inc
loopne
sbb
rcr
add
fiaddl
sbb
loope
out
and
shll
decb
sub
into
lods
sub
mov
xor
das
sbb
xor
out
rcrl
and
fidivrl
pop
inc
outsb
insb
push
daa
ret
loop
jno
out
mov
jle
scas
clc
pop
pop
pop
mov
outsl
aas
icebp
xchg
in
sub
stc
mov
sub
xor
sub
sub
not
fdivs
jo
fnstcw
lds
pop
add
mov
jne
fstpt
pushf
adc
ljmp
add
cld
popa
repz
pusha
pop
test
cwtl
sbbb
shr
shrb
cwtl
dec
insb
sbb
push
int3
xchg
xor
je
call
lret
leavew
push
fdivs
jl
out
xor
pmullw
stos
pop
sub
adc
pop
cmpsl
push
jmp
jns
inc
clc
xchg
mov
jle
jp,pn
cli
mov
cmpsb
test
test
stos
mul
xchg
mov
jnp
sub
movsb
fdivs
dec
sub
dec
push
aam
xor
jae
or
fucomi
rcll
loope
std
xchg
push
add
fisttps
mov
pop
xchg
mov
insl
inc
scas
std
sarl
insl
in
mov
punpckhwd
dec
sbb
outsl
mov
xchg
daa
sahf
xor
call
iret
cmp
iret
lret
jae
jae
mov
subl
mov
mov
mov
pop
push
inc
push
push
fidivl
xchg
lret
push
dec
fcompl
cmp
out
enter
push
cmpsb
stos
rcll
or
in
insl
mov
int
sub
mov
jne
cmc
aam
cli
or
mov
jne
cmp
xchg
pop
xchg
mov
and
xchg
xchg
xor
or
in
jl
fisttpll
adc
and
or
add
imul
imul
in
jle
popf
add
mov
push
idiv
pop
add
mov
adc
aad
rcrl
cmp
mov
push
xchg
dec
mov
push
jp
negl
cld
fsubs
jmp
inc
enter
unpcklps
jns
push
dec
cmc
mov
test
shlb
outsb
dec
enter
dec
aad
pop
mov
dec
mov
pop
jl
call
out
xchg
pop
into
mov
into
xchg
pop
dec
ljmp
out
xchg
leave
leave
stos
and
xchg
mov
cmp
rclb
jl
arpl
mov
cmp
push
std
lret
in
leave
aam
sub
fcmovu
add
inc
lret
mov
int
sbb
pushf
insb
test
lahf
enter
lock
adc
sub
and
bound
push
test
jne
ret
fcomi
sub
pop
push
push
push
xor
or
pop
push
add
aas
test
and
enter
pop
add
call
cmp
add
cmp
aaa
xchg
es
xchg
or
mov
mov
push
scas
ret
hlt
mov
pusha
mov
push
test
push
mov
dec
iret
mov
cmp
sbb
dec
fldl
shlb
cs
xchg
lahf
jae
jp
pop
mov
push
jp
jne
call
sub
mov
mov
adc
adc
mov
out
dec
or
loope
sahf
cmp
jle
iret
movsb
cltd
in
scas
iret
stc
arpl
bnd
mov
jb
ret
cmp
and
fabs
mov
cmp
xchg
xchg
divb
jbe
jl
adc
inc
loope
in
ficompl
mov
jmp
add
fdivs
cmp
gs
sub
movsl
xorl
jl
pop
mov
je
cli
xchg
inc
out
mov
movsl
lret
das
xchg
and
add
dec
nop
icebp
cli
pop
mov
scas
or
loope
pop
or
repz
xor
mov
cmc
dec
push
divl
jno
repz
inc
popa
mov
mov
adc
stos
pop
ja
orl
sub
xchg
add
xor
mov
dec
es
out
and
jns
xchg
stc
sbb
sbb
and
jnp
leave
and
mov
inc
mov
xorb
pop
hlt
rcll
and
jns
add
testb
loop
mov
xchg
xor
mov
inc
inc
adc
xor
or
je
icebp
sti
es
mov
adc
push
loop
dec
gs
cwtl
shrl
leave
ret
mov
xor
loop
sub
sbb
jnp
add
push
lock
dec
scas
into
orl
fldt
ja
clc
ret
mov
mov
add
push
lret
lds
xor
out
inc
mov
repz
fcmovbe
dec
stos
mov
and
in
imul
addr16
and
xchg
xor
inc
dec
add
dec
ljmp
out
pop
outsb
push
xor
mov
or
lock
xchg
cli
lods
mov
sbb
cmp
shr
xor
stos
enter
push
cltd
hlt
mov
cmpsb
pop
mov
mov
sbb
push
dec
cmp
mov
inc
shll
inc
jmp
in
pushf
push
pop
pop
lahf
xor
cmp
js
lahf
inc
cld
jmp
scas
test
adc
cmp
mov
and
cltd
or
jle
mov
scas
hlt
and
jle
and
mov
iret
lods
xlat
xor
lret
aaa
in
std
bound
add
mov
pop
mov
lahf
sti
adc
or
cmpsl
in
mov
mov
adc
jne
lcall
sti
mov
pushf
add
jae
call
sub
xchg
sbb
dec
lahf
sub
xchg
cwtl
out
arpl
pop
in
imul
lret
cmpsl
dec
in
incl
lods
leave
aas
mov
imul
sub
adc
cmp
or
push
mov
dec
lods
mov
hlt
outsb
xor
ret
pop
js
cmp
insb
movsb
sub
mov
rolb
and
pop
mov
sub
mov
fbstp
sub
call
or
fwait
inc
inc
sahf
pop
std
hlt
xor
and
jo
pop
pop
cmp
dec
out
mov
push
cs
hlt
ret
and
int3
imul
fscale
xchg
pop
pushf
mov
out
add
enter
sub
insl
test
jns
jp
push
pop
jnp
xchg
push
fadds
fisubrs
adc
js
mov
out
out
daa
or
rcrb
jno
mov
adc
repz
loop
aas
sbb
mov
push
insb
lcall
adc
jmp
add
bound
aaa
popa
push
in
insl
jp
cmpsb
dec
xor
lods
bound
cltd
push
movsb
or
scas
sahf
jb
or
ljmp
cmp
sub
outsl
xlat
add
out
enter
in
lret
xchg
and
push
negb
iret
aad
mov
fisttpll
mov
in
and
inc
sbb
adc
cmp
call
icebp
jg
negl
push
push
push
dec
xchg
dec
mov
stos
mov
movl
je
mov
mov
mov
xchg
xorl
lea
push
ds
notb
pop
stos
leave
lret
adc
add
cmp
or
insb
ja
lods
aad
ds
push
add
iret
inc
lods
pop
stos
push
jb
stc
fs
mov
bound
outsb
mov
sbb
and
cmpsb
push
cmp
adc
aam
mov
push
sub
cwtl
cmp
out
mov
push
xchg
xchg
jnp
xchg
or
xor
xchg
or
movsl
cmp
xchg
sbb
mov
cmc
xchg
movsl
jle
mov
jmp
dec
pop
pop
mov
inc
xchg
xor
mov
pop
or
dec
loop
movsb
arpl
inc
inc
and
test
lock
aam
mov
lock
push
iret
pop
pushl
or
movsl
mov
loope
mov
cmp
jp
lods
and
add
les
jo
push
mov
or
sbb
xor
rolb
dec
or
rclb
mov
pop
lret
int
in
cmc
out
daa
push
jge
mov
je
lods
cmpb
ss
or
cmpsb
subl
popf
mov
into
add
sub
out
insb
push
iret
roll
imul
test
sbb
mov
dec
rcrb
jg
and
mov
mov
mov
dec
int3
popa
insl
mov
pop
es
xor
test
xchg
mov
data16
add
and
cmp
cmp
ret
pop
shrb
push
pop
or
int
jl
dec
dec
ja
popa
nop
in
xchg
cmp
adc
dec
sub
xor
sub
in
shrl
shlb
cmc
push
movsl
aaa
je
adc
mov
sti
cmp
leave
sub
or
push
sbb
pushf
or
xorps
mov
mov
stos
pushl
fildl
test
or
lret
xchg
inc
push
adc
dec
dec
cmpsl
push
aad
mov
cmp
push
add
lods
out
jae
adc
xor
add
cmp
stc
cltd
jbe
jecxz
out
push
dec
cmpsb
iret
insl
mov
jge
xorl
cmp
cmc
imul
mov
jp
lock
lods
dec
out
xor
scas
xchg
iret
out
or
push
adc
cmp
push
mov
push
pop
lahf
mov
daa
mov
ljmp
hlt
rcrb
xchg
mov
dec
mov
push
and
movsb
hlt
mov
mov
add
dec
cld
push
jge
lea
je
lea
test
add
stc
jge
inc
lahf
test
lods
jmp
lds
add
ss
in
arpl
imul
jns
mov
insl
push
push
aad
mov
sbb
jno
mov
cmc
sbb
mov
outsl
pushf
sbb
add
outsb
jmp
pop
pop
pop
stos
xor
or
dec
xlat
in
arpl
fcmove
push
ror
pop
mov
lods
adc
push
leave
lret
dec
ljmp
outsb
fidivrl
sbb
nop
js
cwtl
xchg
sbb
and
mov
pop
repz
cmc
out
mov
mov
cmp
adc
pop
sti
popa
test
dec
ljmp
mov
mov
test
dec
jl
mov
pop
xorb
ret
xor
mov
and
jne
pop
jne
clc
mov
int3
mov
idivl
mov
add
xchg
out
fistpll
cmpsl
ljmp
sub
call
call
push
inc
add
push
mov
add
aam
jae
push
mov
sub
mov
imul
ret
neg
sub
and
test
jmp
sbb
pop
jnp
mov
rolb
dec
inc
jle
xor
mov
icebp
lods
dec
mov
jo
orl
inc
mov
sub
lahf
jp
jo
loope
fistpl
ds
push
adc
pusha
sti
pop
xlat
sarb
jp
in
lea
sub
repz
xor
movsb
jnp
das
inc
sbb
jo
sub
movsb
pop
fcmovnu
cmpsb
lea
stos
xchg
sub
addl
ss
lea
test
and
das
cmpsl
fsubs
repz
fdivrl
es
adc
xchg
out
push
scas
xor
push
lret
mov
int
into
lods
pushf
lret
add
jae
pop
pop
pop
fldt
popf
mov
mov
adc
lods
loopne
negb
jmp
jp
imul
add
xchg
imull
orl
ljmp
pushf
xchg
movsl
ja
scas
adc
mov
ret
and
fdivs
fwait
ret
or
dec
repnz
xchg
xor
stos
push
inc
jns,pn
fcmovb
pop
dec
fldl
sub
stc
stos
outsl
pop
repnz
nop
lods
leave
in
repz
outsl
mov
jp
std
mov
push
mov
inc
dec
ljmp
insl
stos
fiadds
in
push
or
mov
jmp
mov
aaa
push
loopne
pop
pop
and
jb
jecxz,pn
and
inc
mov
mov
mov
mov
hlt
xchg
fsts
outsl
test
adc
test
jge
pop
fcoml
cmp
mov
pushf
loop
outsl
push
test
mov
jge
out
push
leave
pop
insb
jecxz
scas
repz
xchg
dec
jno
stos
scas
lret
aaa
lock
xor
repz
ret
loope
add
or
push
sbb
popf
sub
gs
lods
ja
orb
ljmp
mov
xchg
xor
fmuls
out
stos
pop
pop
mov
xchg
pop
clc
js
mov
hlt
mov
enter
mov
jle
shrl
mov
xchg
jne
mov
pop
xchg
mov
loopne
jle
fiaddl
daa
mov
cmp
aad
jae
or
xchg
mov
mov
ret
adc
add
sbb
push
or
jb
dec
adc
adc
fstpt
or
sub
pop
xchg
cmc
mov
in
cld
lahf
cmp
mov
lods
insl
inc
sbb
das
cli
xor
jp
jge
mull
in
iret
and
dec
cmp
jbe
sub
sbb
add
inc
and
inc
test
inc
sbb
push
loop
jbe
adc
lods
sbb
rcrl
fiaddl
fisubrs
jmp
fistps
mov
test
mov
jp
sbb
arpl
out
pop
cmp
mov
test
pop
pop
xchg
jmp
pop
addr16
scas
imul
xor
add
mov
pushf
jae
insl
pop
ljmp
mov
add
or
sarl
leave
fildll
cmpsb
sbb
loope
ljmp
mov
out
fdivrp
pusha
xchg
mul
pusha
leave
jp
push
cmpsl
or
adc
lahf
outsb
addr16
cmp
lret
cmpsl
dec
mov
fildll
or
push
stos
mov
sahf
mov
rolb
pop
push
xchg
pop
andb
mov
out
cmp
cmp
mov
and
inc
push
xchg
cltd
push
or
dec
push
pop
push
add
cli
outsb
xchg
lret
mov
lcall
das
jne
pop
pop
inc
push
jns
push
sub
jecxz
cmpsb
jae
sub
xor
xor
xor
mov
sti
aaa
jecxz
sti
sbb
fdivs
lret
xchg
sub
xchg
cs
or
leave
icebp
aaa
in
dec
mov
lret
test
xchg
sub
pusha
push
jae
das
hlt
mov
sbb
icebp
and
iret
inc
dec
call
daa
or
or
xchg
sahf
data16
ret
ficoms
scas
loop
xchg
mov
pop
orb
or
xchg
sbb
and
ret
or
or
call
sbb
jl
inc
lds
pop
and
pop
push
mov
push
add
jl
jp
mov
adc
add
sbb
jo
mov
xlat
dec
sbb
sbb
ret
push
cmp
xchg
data16
test
and
push
jbe
in
aaa
pop
out
xchg
ret
imul
cltd
and
into
mov
adc
inc
push
mov
and
addr16
xlat
jg
xchg
jne
adc
jne
adc
aaa
push
outsl
pop
pop
fstps
in
fimuls
pop
push
cmp
jl
lcall
movsl
test
or
popa
or
cmpsb
test
push
pop
lret
sub
shlb
fs
mov
inc
adc
cmp
jno
out
loope
gs
jmp
push
push
stc
dec
dec
pop
adc
lret
dec
and
mov
insl
mov
or
mov
sub
jo
ret
leave
dec
sti
and
inc
lods
inc
scas
cli
jae
dec
sub
jp
mov
push
cmp
test
dec
push
cltd
or
scas
in
adc
mov
dec
int
aaa
push
adc
stc
mov
ds
test
movsb
cld
xor
pop
scas
xchg
stos
sbb
xor
jg
cmp
inc
enter
in
pop
mov
sbb
xchg
xchg
pop
push
mul
mov
or
mov
pop
inc
ret
cli
pop
ret
mov
es
mov
dec
stos
lahf
ljmp
clc
push
aam
andl
and
sbb
test
imul
pop
cmp
test
cwtl
ss
jbe
subb
repnz
outsb
xchg
mov
neg
mov
adc
pop
decb
dec
sub
lret
xor
fistl
in
movsl
or
cwtl
add
dec
jb
push
pop
bound
scas
mov
mov
in
mov
dec
add
movsl
mov
cmc
mov
mov
mov
sbb
orl
outsb
and
repz
cltd
data16
adc
cwtl
shll
mov
mov
mov
cmp
lods
call
lods
test
roll
dec
adc
mov
out
mov
mov
xor
std
and
repz
push
add
movsb
stos
push
in
pop
aam
xchg
mov
pop
xchg
xor
push
loopne
mov
out
mov
bound
xor
push
and
dec
hlt
push
ret
cld
mov
sbb
sahf
imul
push
in
pop
shl
adc
int3
and
sbb
ja
lcall
fnsave
imul
mov
lea
clc
sub
push
inc
mov
adc
push
pop
shlb
ficoml
icebp
add
sub
pop
cwtl
and
xchg
inc
mov
sahf
mov
xchg
xchg
jbe
ja
adc
mov
and
enter
out
mov
in
xchg
ret
loope
ss
xlat
xchg
dec
xor
test
inc
dec
out
loope
fidivs
push
fcmovne
sbb
fdivl
cmp
popf
xchg
sub
dec
cmp
push
arpl
aaa
leave
mov
xor
mull
in
test
push
mov
mov
shlb
test
push
lods
mov
jbe
shr
cmp
lcall
std
inc
push
pop
jb
imulb
rorb
pop
dec
loopne
movsb
jno
inc
cmpsl
loop
lods
dec
dec
jb
push
ret
adc
repnz
enter
lds
dec
call
jo
lods
pop
push
xlat
jle
sbb
mov
iret
push
cld
mov
xchg
std
pop
ss
cltd
stos
mov
outsb
rorl
xlat
mov
cmpsb
sbb
and
cltd
cmp
inc
dec
inc
and
or
pushf
lods
jne
iret
cmp
clc
data16
stc
push
push
add
aad
dec
stos
jne
aam
gs
xor
popa
repnz
or
mov
ja
mov
divl
mov
aad
mov
xchg
push
jg
push
jle
in
lret
xlat
push
aad
jns
push
adc
inc
notl
mov
sub
popf
bound
out
dec
imul
push
or
andb
cmc
push
xlat
and
test
lods
mov
mov
mov
jl
cmp
inc
inc
bound
or
dec
xchg
pop
fistpll
das
pop
push
jb
sub
lahf
gs
fisubrl
mov
bound
jmp
xor
xor
jp
mov
mov
jns
mov
and
rcrb
mov
into
jp
mov
push
cmp
fwait
push
jnp
test
lret
xchg
data16
and
xchg
push
sahf
cmp
cmpsb
jmp
add
bound
jae
mov
daa
sub
adc
jmp
pop
cmp
in
cmp
cs
sti
mov
jge
int3
loope
add
xchg
jge
mov
jo
mov
cmp
or
icebp
dec
xchg
push
mov
lret
push
and
push
icebp
pop
loope
int
shrl
es
push
lret
inc
mov
sub
xchg
sub
push
lcall
fcoml
dec
test
pop
and
xchg
addr16
or
pop
test
imul
cmp
hlt
shlb
jns
pushf
sub
sub
inc
das
iret
push
fcmovnb
add
and
xchg
xor
pop
xor
les
or
jns
jbe
enter
xchg
jp
popf
push
xchg
inc
and
test
fwait
push
pop
aad
adc
adc
jno
adc
jmp
mov
xchg
cmp
push
nop
jno
int3
cmp
pop
mov
mov
repnz
ds
inc
gs
push
jge
sar
jb
call
ljmp
or
sbb
jno
sbb
gs
in
iret
mov
cld
sti
fisubs
stos
loop
ss
mov
dec
jne
fsubl
and
jl
or
sbb
push
xor
inc
insl
rorl
cli
bextr
jp
mov
rcrl
sub
sbb
push
fcomi
xchg
lahf
xor
flds
loopne
pushf
fcmovnb
mov
add
jle
scas
sub
imul
fmuls
lret
pop
ss
mov
fdivl
inc
stc
hlt
repnz
adc
insl
stc
jo
xchg
push
jge
xor
jae
popa
leave
inc
jo
ror
pop
loope
shll
call
leave
lret
fs
jne
xor
pop
xor
and
movsb
int
movsl
or
pop
mov
push
pushf
cmpsl
xor
jb
pop
push
sbb
jle
fisubrl
pop
orl
jmp
push
xor
nop
cmp
pop
push
inc
push
mov
pop
ret
loopne
cs
loope
fdivl
mov
popa
mov
pop
adc
cmpsb
mov
pushf
and
hlt
inc
cmp
cld
inc
in
scas
adc
xchg
mov
ret
fisubrl
dec
fcmovbe
dec
ja
and
je
xor
jne
js
dec
or
fwait
xchg
dec
lea
and
mov
add
mov
adc
mov
inc
imull
or
mov
insb
mov
ss
in
cld
lods
dec
or
lea
mov
lret
fmull
adc
test
in
scas
push
repz
rorb
xor
enter
gs
add
mov
jns
mov
adc
xor
lods
out
dec
mov
mov
mov
and
stos
dec
adcl
or
mov
outsl
mov
xchg
jbe
jle
shll
leave
pop
dec
insl
jae
xchg
stc
out
dec
pop
insb
leave
les
mov
lahf
std
mov
add
adc
imulb
jg
dec
stos
mov
jg
xchg
xchg
lods
adc
test
mov
js
addr16
aam
repz
loop
cmp
mov
or
fidivs
xchg
repnz
ss
inc
cmp
les
mov
jae
pop
movl
arpl
leave
add
or
dec
ficomps
test
in
aas
push
jecxz
or
fdivrl
mov
ljmp
adc
mov
dec
sbb
sbb
mov
or
pop
andl
xchg
mov
mov
rcr
pop
adc
adc
sub
cmp
sahf
xor
hlt
pop
jbe
or
iret
icebp
jmp
jp
lret
lret
cli
and
out
jns
sub
adc
xor
dec
mov
divl
lock
xchg
jb
dec
iret
jne
xor
js
add
fsts
mov
out
cs
dec
pop
jns
or
add
jnp
imul
enter
fcmovb
lds
inc
pop
dec
dec
push
mov
out
fnstcw
pop
mov
push
jno
out
xchg
sarb
xor
ss
mov
xor
mov
jb
punpckldq
cs
jbe
pop
add
push
mov
or
inc
in
sbbl
dec
pop
xchg
sbb
push
sbb
adcb
xorl
mov
std
outsb
mov
into
mov
inc
or
fwait
stos
xor
gs
push
xchg
fidivrl
cmp
out
dec
sti
mov
mov
imul
gs
xor
repnz
pop
sub
ja
jl
mov
jno
daa
std
xor
jns
cli
leave
int3
push
aad
mov
pop
sahf
fstps
fwait
add
add
adc
cmp
mov
jg
mov
cmpsl
cli
repz
stos
cmpb
xchg
cmpsl
push
and
xor
mov
or
shll
stos
push
movsb
add
cmp
mov
mov
push
ja
push
add
hlt
add
sub
int3
dec
mov
or
and
clc
xor
and
inc
and
pop
mov
and
inc
mov
fdivrl
push
mov
add
cwtl
xlat
shll
hlt
mov
cmp
repnz
inc
adc
aas
dec
ds
sahf
mov
jle
dec
sub
mov
sbb
cmp
xor
mov
sub
stos
xchg
jg
xlat
movsl
jl
xor
dec
push
out
lcall
sub
fidivs
punpckhdq
lcall
movsb
lds
andl
std
jne
mov
add
shlb
rcrb
int3
adc
or
lcall
fcmovne
jne
or
xorb
xchg
mov
inc
jo
adc
sub
mov
mov
es
lcall
fwait
lea
rcll
cltd
cmpsl
and
mov
sbb
lock
sub
jecxz
test
stc
in
inc
jmp
xor
shrl
mov
into
ret
and
dec
lods
sbb
push
mov
push
nop
pop
test
fstps
outsb
dec
jmp
std
mov
ja
jo
out
notl
add
ss
popa
mov
shrl
sub
mov
out
mov
mov
cmpsl
pop
scas
add
cmp
add
jmp
jae
call
add
mov
xchg
adc
mov
push
sarb
loop
cli
aaa
jae
popf
mov
push
lods
xlat
andb
jmp
sbb
push
shlb
or
int
push
cmp
pop
pop
stc
inc
jns
or
cld
cmp
mov
push
xor
pop
das
and
ja
es
jl
cld
imul
push
adc
sub
adc
jg
jb
jnp
jge
cmc
call
paddsb
ljmp
xchg
and
ss
ret
pop
repz
xor
adc
and
push
cld
sti
pop
push
mov
inc
push
cs
cmp
add
sbb
jmp
fcompl
daa
cltd
ljmp
incl
jne
repz
mov
out
add
out
arpl
pop
sarl
fnstenv
cmpsb
movsl
outsb
int
push
jp
sub
movsl
mov
pop
push
lcall
out
xchg
loop
fcoml
sub
fbld
add
xchg
imul
cmpsl
mov
loope
cmc
in
xor
sub
aaa
pop
test
icebp
push
arpl
xchg
arpl
or
xor
mov
and
bnd
stc
mov
xlat
cmp
jecxz
mov
out
cmpsb
ret
cmp
or
pop
call
ds
cmp
lahf
cmc
scas
pushf
mov
add
es
or
test
add
or
sbb
mov
les
jmp
mov
pop
test
adc
pop
pusha
mov
lods
mov
mov
xor
sahf
pop
xchg
jecxz
push
jbe
leave
mov
scas
inc
adc
addr16
in
sub
xor
ret
inc
mov
add
fdivr
mov
inc
pushf
xchg
pop
jae
mov
out
xor
adc
mov
or
insl
loop
les
pushf
call
xchg
jmp
nop
xchg
mov
jp
sbb
sahf
add
in
scas
lods
jb
mov
mov
pop
lea
mov
sbb
mov
scas
cld
inc
rcl
out
mov
adc
out
repz
arpl
pushl
dec
xor
sbb
xchg
pop
fstpl
adc
mov
cmc
adc
jne
xor
icebp
push
call
mov
leave
inc
or
shl
outsb
out
dec
xchg
popf
sbb
roll
insb
cmp
xor
xlat
sub
imul
pop
lret
xchg
loopne
gs
lcall
dec
cwtl
and
inc
xor
jg
sbbl
and
subl
leave
xchg
cmpsl
or
xchg
stos
mov
and
ljmp
jno
jne
mov
pop
mov
mov
rcl
enter
cwtl
fcmove
test
xchg
cmpl
pop
dec
sbbb
cmp
enter
sbb
lahf
sub
aaa
clc
xchg
mov
inc
or
mov
hlt
repnz
sbb
mov
bound
out
jl
add
js
mov
mov
pop
ret
in
cli
add
jg
inc
mov
scas
loopne
jo
in
add
add
bound
aam
ficompl
int
es
dec
jns
test
cmp
mov
jns
pop
cmp
cmp
aas
dec
lods
fucomi
ljmp
adc
push
xchg
aas
push
mov
std
in
xor
mov
xchg
enter
jge
xor
and
or
xchg
inc
push
jg
fdiv
stos
mov
orb
jmp
das
sbb
push
out
das
mov
xchg
lods
push
mov
xchg
add
or
in
test
cld
cmpsb
ds
mov
jns
subl
loop
mov
and
mov
stos
gs
outsl
add
dec
icebp
mov
test
movl
leave
movsb
xchg
push
fdivs
jp
inc
mov
ret
push
in
mov
or
xchg
daa
cmp
xchg
xchg
hlt
jnp
inc
and
xchg
cmp
in
popa
sbb
adc
test
sbb
inc
pop
cmp
mov
pop
add
mov
cmpsl
mov
fildll
cwtl
lret
leave
cmpb
insl
in
xor
fcoml
or
mov
lock
cmc
jns
inc
mov
rcll
mov
add
adc
push
jp
adc
test
mov
test
es
fisttpll
mov
push
out
in
icebp
shlb
inc
adc
lods
push
ljmp
popf
lods
push
push
fidivrs
in
push
sub
mov
push
pop
stos
push
push
mov
add
decl
sub
cmpsb
xorb
les
cmc
mov
arpl
sub
testl
mov
lcall
sub
xor
std
fisttpl
mov
pop
push
ljmp
push
stos
jge
test
lds
jb
enter
test
enter
dec
fwait
movsb
leave
jo
insl
pop
inc
out
or
rcrl
jo
jl
test
jno
lods
jmp
into
sbb
mulb
cwtl
and
jbe
lea
jne
dec
add
shl
inc
pushf
cmp
mov
dec
in
pop
push
out
rep
orb
fwait
xor
jno
jno
fisttps
stc
pop
jl
inc
adc
jle
mov
adc
jnp
shrb
lock
ljmp
and
aaa
js
push
jb
lea
out
and
or
xor
lret
adc
out
inc
adc
sub
push
sti
add
sbb
loop
jno
enter
fwait
loopne
mov
sbb
shll
sbb
mov
and
in
pusha
inc
in
adc
pop
rclb
sub
cmp
mov
test
mov
ja
dec
scas
mov
xchg
mov
pusha
pop
sarl
out
ljmp
mov
jl
xchg
rcrb
pop
push
jmp
jl
add
mov
jnp
push
scas
jo
loopne
repz
xor
mov
cmp
or
or
in
add
scas
jp
icebp
jl
aam
adc
jb
mov
fists
push
insl
pop
pop
sub
aad
pushl
out
xlat
fmull
cli
jg
push
and
xlat
mov
xor
mov
cli
fmul
cs
and
int3
lcall
xor
out
adc
mov
loopne
das
pop
lods
aad
fstps
jne
outsb
push
wbinvd
stos
movsl
mov
imul
rcrb
mov
xchg
mov
in
sbb
clc
sti
outsl
mov
int3
aam
add
shll
sbb
or
add
das
dec
lods
outsb
pop
push
pop
out
repnz
or
adc
cltd
jae
sbb
mov
int3
pop
mov
cmp
ljmp
lahf
pop
sti
sub
lret
xor
mov
movsl
pop
call
scas
xlat
addl
dec
movsb
mov
sub
dec
xor
xchg
push
les
dec
adc
xor
or
add
scas
cmp
inc
popa
jb
dec
fiadds
jecxz
pop
popf
sub
pop
sbb
in
rcrl
ror
or
push
cmp
insb
pop
xchg
out
outsb
into
icebp
push
insl
fsubl
mov
loope
add
cmpsl
movsb
pop
mov
adc
inc
nop
in
cltd
jecxz
and
mov
mov
ja
xor
mov
jnp
add
bound
addl
iret
jno
es
or
imul
notb
cli
movb
jg
add
mov
daa
and
enter
jb
lcall
sahf
inc
sbb
loopne
das
add
lret
and
xchg
cltd
fcompl
es
lea
push
inc
add
lahf
mov
mov
jnp
dec
pop
fsubl
out
sub
mov
out
xchg
es
rcl
mov
cmp
icebp
inc
ret
xor
ljmp
popa
sub
xor
sbb
fmuls
jae
and
push
add
inc
mov
and
xchg
mov
out
xchg
push
addr16
in
adc
push
in
sub
jae
mov
push
mov
sub
adc
xor
cmp
and
repnz
add
push
mov
lods
in
xor
loope
lock
popf
adc
mov
jbe
adc
add
xor
jge
les
in
push
xchg
clc
shlb
xor
mov
loop
xchg
insb
out
lret
gs
cwtl
in
add
repnz
mov
jno
fcmovnu
ja
flds
into
mov
xor
in
pop
fcomps
push
pop
rcl
mov
add
xor
popf
inc
test
xchg
or
pop
aas
in
xorl
xchg
mov
jp
cmp
sbb
push
shl
fwait
push
sbb
inc
sbb
ljmp
dec
roll
lock
lods
call
movsb
enter
add
pop
jns
add
push
pushw
xchg
push
and
movsl
add
test
cs
and
pop
divl
lods
mov
ja
stc
cmp
fcmovbe
xchg
mov
push
sub
jo
mov
jmpw
lock
pop
cltd
xchg
push
fsubs
jp
imul
popf
fwait
movsl
js
mov
pop
enter
dec
cmp
sub
push
fsubl
rorl
cmovbe
xchg
psrlq
iret
jbe
cltd
mov
adcl
lret
xchg
dec
add
hlt
adc
push
mov
mov
andl
sbb
cmp
movsl
xor
psubb
cmp
das
fnstcw
loope
jbe
loope
leave
adc
mov
mov
adc
scas
xchg
inc
std
addr16
pushf
sbb
rcl
jg
and
arpl
ljmp
inc
shlb
shrl
push
adc
sbb
dec
dec
dec
test
inc
ret
sub
push
stos
mov
js
cmpsl
and
mov
mov
into
jmp
cmpl
mov
mov
fldcw
sbb
mov
je
mov
ljmp
xchg
cs
adc
imul
scas
test
xchg
dec
xor
sbbb
sub
out
add
jb
xchg
or
lret
cmp
sbb
sti
jg
fcmovnb
mov
test
iret
push
orb
mov
repz
mov
aaa
cmp
pop
pop
scas
out
bound
mov
xor
adc
pop
fs
add
inc
mov
push
xor
in
xlat
fsubl
in
xchg
nop
movsb
mov
out
mov
sti
outsl
push
and
jge
push
sbbl
jbe
sub
jmp
xchg
adc
and
xchg
insl
fwait
jmp
cli
pusha
mov
sub
and
jle
and
dec
insb
mov
pop
std
scas
add
cmp
in
popa
adc
stos
adc
cmp
sbb
jmp
aam
xor
inc
movb
fistl
mov
das
fs
mov
push
test
ljmp
leave
push
lcall
push
xchg
das
loope
mov
fstps
imul
mov
cmp
lds
sbb
inc
mov
aam
imul
outsl
add
inc
dec
ja
or
out
fstpt
into
cmpsl
mov
aam
movsb
lret
inc
enter
aam
andb
iret
sti
fldcw
ds
inc
inc
mov
testl
lcall
cmpsb
push
xor
mov
mov
ret
mov
mov
jle
aam
or
in
mov
fistpl
lcall
repnz
xchg
cs
mov
jno
push
shlb
pop
cmc
and
push
in
jl
sti
pop
call
adc
test
adc
mov
jmp
dec
outsl
test
dec
pusha
mov
call
ret
outsb
mov
lock
dec
mov
and
xor
loop
fnstsw
push
dec
imul
mov
movsb
adcl
das
into
es
inc
sbb
in
lock
fsub
push
loope
out
lods
rcll
xchg
ret
int3
scas
ror
inc
adc
pop
mov
ror
lods
mov
jge
adc
push
push
outsb
pushf
into
andl
sbb
cltd
inc
sub
mov
inc
jne
add
dec
mov
pop
jo
cld
inc
shrb
add
loope
addr16
mov
jg
pop
arpl
scas
cmp
mov
pop
jmp
aam
pop
sub
insb
pushf
incl
stc
inc
mov
rcl
push
cmp
insl
jo
mov
lahf
inc
push
je
aas
inc
mov
hlt
lret
pop
or
mov
hlt
sbb
nop
push
in
insb
scas
inc
mov
mov
add
mov
jge
add
daa
xchg
push
pushf
popf
cs
mov
adc
imull
add
cld
in
inc
nop
mov
mov
sbb
push
fwait
iret
and
push
or
xchg
mov
and
jmp
sub
mov
jg
cld
mov
pop
mov
push
notb
scas
popa
xchg
jbe
or
push
hlt
mov
add
test
fstps
or
mov
pop
inc
loop
xchg
mov
shrb
cmp
ret
clc
mov
push
pusha
inc
pop
mov
rorl
into
dec
xchg
mov
xor
push
lock
leave
loopne
repnz
xor
add
test
sbb
aam
pop
std
je
or
leave
jns
mov
cmp
and
pop
push
iret
pop
int3
imul
shrb
sub
inc
cmp
sbb
xchg
rcl
push
ret
arpl
and
insb
mov
inc
sbb
arpl
xchg
cmp
pop
mov
ds
xchg
sub
lods
test
add
mov
pop
cmpsb
push
cld
mov
icebp
aaa
adc
sti
dec
jnp
sbbl
mov
pop
fadds
inc
adc
das
lods
pusha
xor
or
fdiv
and
pop
pop
inc
mov
sbb
xchg
lahf
icebp
mov
es
mov
cmpsb
fyl2xp1
idiv
repz
cli
ret
cmp
adc
fwait
cltd
jmp
in
push
in
mov
lret
push
jnp
sahf
and
cld
sub
stc
icebp
dec
fdivrp
jns
mov
daa
sub
mov
test
in
sbb
popf
jne
adc
lods
icebp
jmp
insl
mov
dec
sub
scas
mov
scas
mov
xchg
and
out
add
jl
mov
out
adc
enter
push
out
mov
xchg
mov
mov
cltd
xchg
repz
mov
movsb
xchg
repz
fs
icebp
jbe
test
pop
xor
push
scas
dec
sub
insb
sbb
pop
inc
iret
xor
clc
xor
sbb
call
pop
fwait
and
test
nop
sub
fisubrs
mov
push
pop
inc
ficoml
repnz
jno
jle
adc
cmp
or
sbb
addl
or
or
inc
cmp
icebp
in
jmp
push
pop
jb
jp
out
push
mov
fs
and
mov
jge
dec
movsb
add
jg
mov
sub
mov
std
ds
pop
gs
outsb
scas
adc
jmp
sbb
jns
nop
shr
xor
jmp
scas
inc
sahf
push
sahf
xchg
test
pop
bound
mov
mov
jp
lds
add
popl
inc
push
ret
daa
dec
enter
inc
xor
jbe
dec
sbb
or
push
push
sbb
inc
push
out
sub
inc
pop
jecxz
loope
scas
cwtl
dec
push
jmp
sarb
xor
out
out
pushf
inc
int3
popf
dec
and
add
mov
das
pushf
inc
dec
mov
loope
sub
xor
aam
mov
xor
fistps
xlat
pop
icebp
or
sbb
lret
dec
stc
test
add
arpl
cmp
out
xor
sub
rorl
inc
fimuls
mov
rcrb
dec
test
outsb
ja
jne
and
mov
sbb
cmp
cmp
or
add
pop
fst
mov
push
int3
jle
ret
cmpsb
cmc
inc
pop
inc
addr16
popf
dec
add
ja
inc
mov
mov
inc
imul
popl
rcll
shr
pop
and
gs
mov
stos
cs
jns
sbb
dec
gs
lahf
in
inc
aaa
jl
dec
sbb
out
rcll
mov
daa
call
add
shll
adc
cmp
xor
push
cmpsl
push
jp
fisubl
lock
in
jno
xchg
pusha
lds
mov
sbb
cmpsl
in
add
sahf
mov
jns
mov
lret
jmp
data16
jecxz
rorl
les
dec
add
fisubl
mov
lcall
push
pop
fmull
push
aam
sti
in
jmp
xchg
mov
xchg
sbb
das
ret
adc
mov
sbb
cwtl
mov
les
and
aam
leavew
pop
add
dec
dec
fcoml
in
stos
mov
cmp
out
push
cmp
cmc
or
jle
pop
fs
notb
popf
sti
cmc
test
mov
cmp
dec
mov
push
sub
cltd
dec
sub
sbb
ja
xchg
movsl
add
inc
pop
mov
loop
stos
out
mov
mov
out
pop
ljmp
enter
lods
stc
addr16
imul
aam
lahf
add
iret
xchg
data16
add
mov
pop
push
out
lret
jg
dec
cmc
sbb
test
inc
in
sahf
fstl
loopne
fidivrs
out
adc
mov
clc
and
loope
or
mov
stc
test
shrb
cmp
imul
cmp
xchg
icebp
mov
push
fs
jmp
push
and
in
mov
inc
sbb
pushf
cmp
imul
mov
push
adcl
int
jb
into
jae
mov
je
jb
jb
jg
pop
or
pop
bnd
adc
inc
adc
pushf
cld
insl
mov
mov
mov
enter
dec
add
xchg
mov
pushf
xchg
shlb
shll
xor
xor
xchg
mov
push
leave
insb
or
lods
imul
sbbb
out
cwtl
dec
js
int3
xor
jne
js
fwait
icebp
dec
mov
jge
lock
cs
mov
inc
fistpll
popa
repnz
add
shll
inc
sub
and
dec
inc
test
aam
movsb
sahf
fwait
lock
repz
out
add
jbe
cltd
push
in
inc
add
mov
add
sbb
xor
std
dec
xor
and
pop
or
cwtl
movsl
aad
lret
jns
out
push
mov
jmp
xor
push
inc
mov
xorl
mov
sub
adc
enter
dec
jmp
pop
adc
shl
in
in
test
outsb
or
push
repz
xchg
pop
mov
out
xor
aam
jmp
xor
out
fildl
and
and
jge
push
inc
mov
fwait
int
clc
sbb
sub
test
ljmp
and
jbe
push
cmpsb
lock
xchg
sbb
mov
or
adc
mov
enter
dec
jbe
test
shrl
xor
enter
mov
lahf
imul
insb
dec
faddl
out
push
sub
icebp
scas
push
or
pop
sti
xor
xchg
imul
push
lret
lret
cmp
andb
testb
sub
xchg
xor
adcb
pop
iret
call
xchg
ss
stos
lods
mov
cmp
adc
lods
out
inc
rcll
scas
sbb
adc
sub
faddl
ret
pop
cmp
adc
add
movsb
in
imul
dec
sbbl
pop
loope
stos
dec
test
xchg
insb
mov
cmp
repnz
ja
ljmp
out
inc
mov
sub
inc
aad
maskmovq
mov
xchg
fidivrl
pushl
jl
inc
les
imul
adc
xor
out
lahf
pop
dec
push
and
mov
cmp
insb
vmread
or
loop
ss
in
cmp
sti
repz
mov
fwait
mov
push
data16
stos
das
icebp
repz
inc
jo
cmp
add
pop
ja
cld
dec
push
icebp
pop
mov
sub
cltd
stos
int
out
xlat
pusha
addr16
mov
loop
fcompl
test
push
xor
adc
mov
push
loopne
lret
lods
in
enter
dec
stc
fnstcw
mov
pusha
daa
int3
lds
sub
arpl
test
cmc
repz
xor
sbb
mov
dec
cld
sub
pop
in
cmc
push
jp
movlps
lret
arpl
and
stos
and
shl
out
arpl
sub
ja,pt
repz
gs
xor
dec
pusha
jne
lock
sub
adc
xchg
mov
jp
inc
shll
pop
notl
stc
sbb
mov
decl
or
aam
push
rsm
bound
mov
loopne
aam
jb
inc
mov
les
or
cld
pop
push
and
out
out
in
dec
popa
jno
fs
jo
jae
xchg
into
mov
sbb
sbb
dec
push
pop
cmp
clc
into
adc
jbe
adc
out
dec
mov
and
ficoms
jg
xor
loop
cmpsb
adc
inc
or
push
arpl
nop
adc
test
mov
xchg
pop
push
inc
xchg
jne
push
std
jmp
and
mov
mov
push
push
dec
sahf
mov
je
test
in
pop
mov
mov
sub
cli
fmull
rcrb
dec
inc
int
pop
insb
jge
push
clc
lret
xchg
in
push
sub
roll
xor
insb
jmp
jge
shl
jnp
adc
xor
stos
mov
enter
test
pusha
cmp
lods
or
inc
adc
fisttpll
cltd
hlt
mov
mov
push
jge
cmp
movsb
add
jl
int
cmp
es
movsl
repz
mov
sar
pushf
or
jp
inc
enter
sub
pop
sbb
adc
cmp
add
repz
dec
ljmp
sub
bound
fisubs
and
gs
stos
or
popa
and
repz
adc
push
xor
cmc
cld
sub
sub
gs
test
xchg
das
shll
imul
pop
and
rcl
in
in
out
mov
aaa
pusha
cmc
les
out
mov
dec
les
and
jp
fs
inc
xchg
mov
sbb
mov
mov
fdivl
out
mov
js
mov
adcl
or
pop
rorb
dec
sbb
repnz
test
test
and
mov
xor
or
pop
aaa
out
jae
cmpsl
ret
popa
or
fisttpll
inc
pop
cltd
inc
es
mov
ja
out
pop
stos
cmp
push
int
jmp
add
sub
jo
out
loop
fwait
cmp
push
fcoms
sub
mov
dec
sti
mov
pushf
push
mov
mov
and
inc
lea
cmp
mov
popa
dec
sbb
pop
scas
push
outsb
mov
jnp
rcrb
lods
ficomps
or
data16
lret
xchg
cld
ja
xor
mov
cmc
dec
leave
add
inc
push
scas
jmp
push
xchg
inc
mov
test
xchg
add
ja
pusha
clc
and
out
mov
mov
jle
repz
pop
push
cs
cmpsb
jo
paddusw
jno
push
push
mov
fcmovbe
sahf
jb
xchg
pusha
adc
nop
movsb
mov
sbb
and
xchg
jmp
shll
movsl
cmp
add
ret
out
ja
sub
iret
lret
out
push
fcompl
jge
adc
gs
mov
js
inc
addr16
clc
gs
inc
dec
mov
add
bound
movsb
sub
mov
sub
pop
jg
ja
out
stos
jbe
out
cmpsb
or
add
addr16
scas
xchg
xor
push
fcmovb
xchg
into
adc
ret
mov
scas
sbb
cmpsl
push
pop
and
stos
hlt
movsl
hlt
or
movsl
inc
daa
jo
xor
jno
mov
fdivrs
in
mov
cli
movb
iret
cmp
pop
or
insl
xchg
mov
dec
sbb
insb
jecxz
or
scas
xorb
or
repnz
pop
outsl
xchg
sbb
imul
movsb
and
pop
cmp
pop
fwait
test
cmc
add
les
stos
mov
xor
mov
xor
jb
push
imul
jbe
out
or
sbb
test
push
inc
add
shll
push
sub
jg
bound
sahf
shll
sub
ljmp
rol
orl
xchg
push
in
int
stos
sti
push
lds
sub
testl
daa
outsl
add
push
jb
mov
movsb
xor
jb
pop
mov
popf
pop
stos
in
sahf
dec
mov
cld
stos
je
icebp
mov
and
mov
mov
mov
ficoml
xchg
call
cmp
test
jns
dec
shl
orl
cmp
ds
mov
xchg
mov
popa
adc
rcrw
movsb
xor
test
mov
cmp
ljmp
int
outsl
lea
sti
ja
pop
sub
or
mov
das
mov
jno
addr16
and
rorl
les
cmp
insl
clc
clc
shl
dec
lret
add
ss
sub
das
mov
push
enter
pop
test
pop
jbe
loope
fidivs
daa
cmp
test
test
push
cmp
and
adc
leave
push
inc
jno
cmp
fsubrl
xchg
repz
fdivp
pop
jno
gs
aaa
sub
or
inc
fwait
cmp
and
je
stc
cmc
cltd
push
xor
pop
pop
inc
loopne
inc
lret
jne
xchg
imul
adcl
xor
adc
or
or
dec
movsb
push
mov
mov
xchg
mov
xor
mov
or
sub
pop
rcr
push
xor
xor
or
popf
push
xchg
xchg
outsb
push
adc
cli
mov
cltd
and
adc
jns
inc
jno
lret
lcall
jno
jge
adc
push
gs
jno
ds
nop
adc
aaa
push
xor
pushf
jno
clc
xchg
fld
fdivr
mov
in
outsb
xorb
mov
cmp
jb
push
ljmp
loope
sbb
push
pop
add
daa
xchg
push
outsl
mov
in
lock
sub
stc
fcom
fadd
adc
push
mov
mov
sbb
mov
jp
mov
loopne
jb
sub
push
pop
outsb
jbe
pop
add
fadd
ret
loope,pn
mov
sub
ds
out
jae
cmc
pusha
push
and
jl
pop
bsf
ds
mov
xchg
sub
stos
mov
dec
test
xor
pusha
mov
push
inc
aam
arpl
aas
pop
xor
fldt
pop
in
cmp
pop
mov
in
mov
xor
add
mov
fsubp
add
aam
rcll
js
add
scas
dec
int3
ret
jbe
dec
ljmp
repnz
jno
dec
shr
sahf
addr16
movsl
pop
mov
cwtl
in
and
cmpsl
dec
leave
inc
dec
loopne
lods
pop
cmp
ljmp
mov
fcmovnbe
mov
xchg
push
pop
xor
jns
jle
in
and
or
xorb
fcoms
jg
jno
lods
xchg
lret
lret
pop
sahf
jl
imul
imul
cmpsl
pop
mov
aas
std
mov
in
adc
cmp
jle
lcall
std
shll
data16
insl
mov
mov
xor
add
es
ds
cmp
ja
int3
daa
xchg
sub
mov
shll
dec
dec
push
xchg
jle
mov
push
clc
insb
clc
insl
xor
add
xchg
inc
xor
dec
in
add
dec
aaa
jo
leave
xchg
jae
cld
fnstenv
data16
push
mov
je
inc
push
js
add
jp
cmp
inc
xor
imul
jne
stos
daa
ja
gs
outsb
push
imul
mov
mov
dec
or
subl
mov
mov
pop
xchg
push
rcl
jno
sbb
and
cmp
hlt
add
std
pop
shrb
aad
xchg
sahf
imul
fisubrs
icebp
inc
repz
xchg
je
dec
xchg
add
add
xchg
rcr
cwtl
fnsave
push
gs
js
fsub
adc
xlat
in
cmp
sahf
rcll
lcall
and
add
adc
cltd
or
mov
dec
ss
outsb
test
xor
into
push
divps
xchg
in
pop
mov
push
mov
pushf
ret
leave
mov
leave
mov
xorb
xor
jnp
mov
sub
xchg
jne
xchg
pop
and
adc
subb
repnz
push
push
mov
fiaddl
addr16
movups
push
into
xchg
mov
xor
cmp
mov
dec
stos
stos
lret
test
inc
out
or
mov
mov
lret
sti
or
mov
cs
lcall
inc
stos
cltd
pushf
pop
lea
pop
lods
or
dec
loop
cmp
decl
js
mov
inc
mov
ss
outsl
add
xor
je
pop
dec
jno
push
sbb
out
movsb
inc
inc
pop
daa
in
adc
les
lahf
adc
test
fldenv
sbb
loopne
push
and
aad
pop
xlat
jge
enter
jl
add
pop
fcoms
in
fsubs
fs
sti
outsl
outsb
xchg
aaa
lds
aaa
cmp
fimuls
pushf
outsl
xor
fldcw
push
mov
sub
push
mov
adc
sarb
mov
scas
jo
outsl
mov
cs
mov
dec
fcompl
add
shlb
cmpsb
div
ss
cli
call
ljmp
leave
in
cmc
push
rorl
sti
sub
mov
mov
pop
adc
adc
add
cmp
cltd
fwait
jge
and
mov
mov
out
imul
adc
mov
or
jbe
mov
mov
cmp
jge
mov
repnz
cmp
add
fs
mov
mov
jbe
les
jle
cmp
test
or
mov
scas
gs
push
xchg
and
leave
shl
dec
mov
cmp
cmpsl
push
pop
addl
xchg
daa
nop
call
xorb
loope
pop
jnp
movsl
out
and
mov
cmpsb
sbb
add
js
jae
in
scas
shrl
and
xchg
bound
adc
push
lods
mov
pop
fs
add
xor
scas
cmp
push
push
inc
or
loope
js
sub
mov
arpl
insl
lcall
into
adc
mov
repz
jmp
aad
push
jno
push
inc
into
xchg
and
cli
add
test
cmp
pop
fisubs
xchg
mov
mov
sbb
stos
dec
aaa
in
rcrl
push
dec
add
movsb
mov
mov
push
mov
icebp
jo
int
mov
pop
ficompl
call
cmp
mov
sbb
sub
fs
cmp
out
enter
dec
adc
pmovmskb
or
nop
jp
inc
int3
ret
mov
repz
rorb
mov
jnp
sbb
aad
push
mov
or
push
xor
mov
mov
ds
inc
or
cmp
lods
sti
int3
cld
int3
dec
cmpsl
xchg
lock
ficompl
lcall
xlat
pop
xchg
fiaddl
sbb
adc
adc
inc
push
and
ret
mov
xchg
lods
test
push
cmpsb
daa
add
loop
mov
pushf
sbb
mov
icebp
cltd
dec
shrl
and
mov
pop
mov
iret
in
mov
lea
mov
daa
sbb
js
inc
in
mov
pop
and
push
push
mov
stos
lcall
dec
mov
out
test
rcll
and
mov
inc
jmp
lods
jnp
lcall
lods
hlt
inc
loop
cmc
pop
pusha
lret
or
xor
push
lock
or
xor
mov
jb
or
inc
mov
shrl
stc
into
imul
dec
and
pop
lret
scas
testl
loopne
mov
mov
stos
jmp
aam
mov
push
xchg
setb
sub
mov
subl
xor
mov
dec
mov
arpl
pop
add
in
dec
xor
fs
aaa
int3
sub
mov
xlat
dec
inc
mov
inc
pop
inc
dec
ret
jge
fldt
in
ret
lret
dec
and
pop
call
and
push
fisttpll
cmc
adc
loopne
push
xchg
xor
xchg
movsl
sbb
sbb
cmp
mov
mov
fnsave
js
and
add
call
or
push
in
add
loop
dec
lock
fwait
lcall
idivl
inc
movsl
loope
fildll
push
sti
push
jne
das
clc
je
jl
into
mov
ljmp
cmpsl
xchg
sbb
enter
cmp
into
mov
addr16
out
xor
pop
xor
into
out
out
in
lret
or
xor
sub
test
push
push
arpl
in
sbb
adc
lods
fistpll
mov
jno
int
outsl
mov
sub
xchg
jle
jno
xchg
pop
nop
orb
sub
mov
or
jmp
shrl
add
mov
outsl
es
sbb
jle
cmpsl
pop
push
cmp
sti
shlb
nop
inc
xchg
int
sti
xchg
xchg
movl
jbe
repnz
lret
popf
inc
mov
or
outsl
mov
lcall
insb
lcall
cli
loop
xchg
mov
movsl
inc
mov
add
pop
inc
in
movsl
ja
addr16
imul
sbb
xchg
jbe
push
jae
jmp
fisttpll
stc
cmp
ret
xchg
mov
movsb
pop
mov
and
push
fs
dec
adc
addl
das
xchg
mov
fisttps
stos
cwtl
mov
jl
icebp
jp
test
rcll
xchg
incb
dec
lret
sub
das
jl
hlt
jno
dec
aad
and
pop
inc
pop
jns
ret
mov
mov
jo
mov
pusha
push
cmp
mov
hlt
sub
fdivrs
sbb
push
scas
jns
push
ffreep
icebp
cmc
aas
popl
pop
xchg
clc
les
shlb
out
inc
lods
fsts
fisttps
xor
shr
push
roll
sbb
sti
shll
jle
lret
xchg
adc
push
ljmp
mov
cmp
setp
fcmovu
mov
jnp
jbe
int3
aam
cmc
repz
stos
cmc
add
sub
pusha
mov
aas
push
lds
arpl
mov
lods
pop
cld
jno
sbb
lds
push
pop
mov
stc
mov
cmp
pusha
adc
xchg
or
inc
into
dec
push
jl
xlat
rclb
ret
into
lods
aas
cwtl
stc
inc
cmp
aam
adc
addl
mov
adc
adc
push
cli
jg
or
jg
lds
jne
fdivrl
and
push
push
mov
sbb
sbbb
or
cmpsb
or
fcmovnbe
push
stos
inc
shlb
cmp
adc
lahf
push
xor
fbstp
push
adc
movsl
or
jecxz
sbb
das
out
adc
mov
jns
daa
mov
inc
sbb
cmp
enter
jle
adc
push
aas
push
in
pop
dec
mov
addl
clc
mov
loopne
mov
popa
fcmove
lahf
mov
filds
xchg
dec
fstps
or
lock
movsl
lret
stos
arpl
sahf
sub
int3
ds
sbb
outsb
aad
push
fldt
bound
in
xor
cmp
and
divl
insb
pop
xchg
fadds
pushf
inc
adc
icebp
fsubp
in
orl
aam
jb
mov
mov
or
lcall
ret
popa
mov
outsl
lret
cmp
cwtl
insl
dec
lcall
test
movsb
cld
loop
imul
mov
stc
fadd
mov
inc
mov
sub
pop
ja
cmp
xor
lock
add
ror
push
subb
sub
push
xchg
add
aam
scas
rclb
xchg
and
xlat
iret
iret
xchg
lcall
gs
imul
into
int
fcomp
shl
mov
dec
add
inc
testb
push
pop
cmpsb
push
pop
ljmp
and
ss
pop
faddp
mov
sub
jmp
push
lahf
jmp
mov
xchg
push
fnstsw
ds
sti
js
cmpsl
mov
pusha
out
xchg
sahf
adc
jae
mov
in
dec
and
cwtl
mov
mov
xor
fs
aam
std
xchg
ret
pop
and
add
mov
pop
jo
inc
out
push
xchg
sbb
push
jnp
gs
xchg
inc
mov
sub
jge
jns
pop
cli
das
push
cld
cmpsl
and
pop
test
sub
cmpsb
div
inc
popa
pop
inc
jns
loopne
cwtl
ficoms
push
inc
out
cmp
sub
xor
movsl
insl
jno
or
scas
dec
push
inc
dec
adc
mov
in
xor
dec
shll
sub
push
xchg
push
popf
rclb
cmc
scas
mov
loopne
out
loop
jge
inc
jae
fstl
test
xchg
dec
adc
or
pop
cmovle
inc
xor
ja
inc
push
std
sbbb
hlt
pushf
push
inc
mov
sub
and
sar
addr16
fs
push
in
test
pop
out
jg
add
mov
insb
xchg
cmpsl
adc
andb
cmp
inc
pop
ds
sbb
sbb
das
test
sub
call
dec
std
lds
js
ljmp
popf
mov
jno
lret
insb
dec
mov
lods
cli
pop
xchg
or
pop
imul
fnstcw
mov
int3
dec
out
sub
xchg
test
xchg
push
es
cld
in
mov
cmp
shr
sub
loope
and
cmp
in
decb
and
jns
adc
nop
pop
adc
lods
and
lcall
aas
sbb
aaa
not
sub
add
leave
push
ljmp
dec
lock
and
cltd
aaa
xchg
inc
lahf
jmp
pop
push
xchg
leave
ss
inc
decl
sub
cmp
xchg
lea
jne
int
push
lods
repz
add
mov
mov
sub
mov
and
or
outsb
pop
data16
shrl
mov
mov
mov
das
dec
jl
mov
pop
xchg
and
jno
push
pop
jmp
mov
add
mov
in
pop
xor
mov
sub
push
mov
loop
rcrl
ja
push
js
jbe
mov
add
test
push
arpl
filds
insl
mov
call
in
xor
idivb
add
sbb
xchg
loope
or
inc
and
arpl
mov
sub
push
outsl
stos
and
inc
data16
xor
cmp
test
int
scas
adc
movnti
inc
hlt
jp
clc
mov
jb
dec
lret
jbe
sub
jl
and
add
les
mov
jecxz
lock
in
roll
cmpl
and
stos
dec
arpl
fs
and
xor
sahf
out
scas
movsb
cltd
and
sub
loope
and
int3
popf
out
sti
pop
push
out
mov
gs
pusha
add
shrb
inc
lret
movsl
int
mov
insl
jle
int
push
cmc
xchg
add
aaa
pop
xor
dec
mov
fsubl
mov
push
xchg
sbbl
jo
inc
inc
dec
nop
sub
jne
test
je
imull
adc
push
xor
add
push
movsb
sbb
mov
jae
and
xor
imul
cwtl
mov
lock
enter
arpl
iret
or
mov
sti
cmp
adc
pminsw
imul
cmp
pushf
and
popa
mov
jnp
movsb
cmpsl
and
jle
xor
cmp
js
mov
xchg
xlat
mov
dec
xlat
xor
inc
xor
or
push
xchg
cmp
cs
mov
rcrl
adc
cmpl
mov
gs
jb
cmpl
es
jmp
inc
daa
jno
push
jo
xor
jmp
push
repz
call
jge
ds
aam
or
test
loopne
js
mov
stos
mov
mov
jns
sub
jp
pop
mov
cld
sbb
and
add
cltd
and
fucomip
test
push
ret
cmp
scas
push
mov
call
inc
add
fiaddl
lcall
jge
add
xchg
icebp
fnsave
out
int3
subl
adcl
outsl
jns
add
sbb
test
add
js
or
sub
movsl
arpl
in
jns
xlat
or
outsl
cs
ret
ficomps
pop
pop
sahf
imul
mov
stos
pop
test
pushf
mov
daa
push
mov
add
inc
lret
sti
mov
repz
int
data16
sub
shl
or
popf
mov
stos
data16
dec
sub
or
xchg
xor
push
xchg
inc
imul
dec
sti
sbb
stc
loopne
jmp
mov
scas
fldz
repz
jl
hlt
adc
cmp
add
lea
xor
inc
jns
pop
ds
push
xchg
shlb
in
mov
in
popa
lret
sbb
in
pop
xchg
pop
lds
stos
xchg
out
pop
xor
and
cmp
push
scas
xor
or
lret
jno
insb
dec
jno
rolb
aas
and
loopne
int
inc
mov
mov
inc
jb
push
inc
imul
dec
pop
and
into
call
pop
adc
loope
aas
mov
sbb
inc
popf
fisubl
outsb
dec
push
jle
add
and
mov
lret
out
sbb
cmpsl
add
jecxz
fsubs
fcmovbe
sahf
sub
jne
gs
out
ljmp
out
in
jmp
stos
aas
pop
or
rcrl
xorb
xchg
pop
xor
scas
push
pop
add
sub
or
mov
push
sbb
sbb
jns
add
pmuludq
icebp
xchg
dec
aam
dec
xor
jo
lock
test
pop
jbe
adc
or
mov
out
push
call
xchg
sbb
jl
ret
sub
test
pop
mov
and
mov
inc
sub
cmpsb
cs
shll
ret
mov
mov
sub
fistps
wbinvd
push
pop
jg
stos
int
pusha
pop
out
pushf
push
inc
mov
sbb
or
in
mov
sti
clc
xor
and
or
loope
popa
repz
jns
sti
pop
gs
push
cmp
outsl
aam
mov
mov
push
pop
add
pop
imul
cs
mov
es
fldenv
jmp
push
les
or
cmc
sbb
mov
sbb
in
rcll
ret
movsl
lds
pusha
mov
mov
mov
jbe
shrl
or
and
loop
mull
inc
dec
pop
lds
dec
out
pop
repz
pusha
xchg
jb
lea
mov
mov
mov
add
sub
clc
addb
or
inc
and
push
or
jno
repz
cmp
mov
popf
inc
fs
xor
in
arpl
loopne
mov
or
mov
adc
fadds
out
adc
mov
push
inc
out
nop
rcrb
in
jb
nop
cld
cmp
push
out
pop
jle
mov
fimuls
mov
bound
sahf
adc
pop
dec
and
popa
in
iret
imul
and
cmp
push
flds
test
je
jae
add
test
jne
push
xor
lretw
shrl
dec
push
adc
js
inc
fistpll
pop
pop
out
stos
push
sbb
nop
fadd
nop
dec
in
icebp
test
cwtl
ljmp
out
sbb
insl
rcl
sahf
xor
ds
xchg
rorb
jae
callw
jmp
sbb
out
jp
nop
jo
sub
mov
adc
dec
lret
aad
cmp
gs
lret
test
mov
sbb
pop
mov
xchg
jg
nop
pop
incl
repnz
clc
xor
out
cmpsb
push
mov
fdivrl
in
std
mov
sbb
lock
jae
add
ds
jle
push
rclb
add
sbb
nop
stos
or
into
scas
or
frstor
int
out
testl
iret
ljmp
addr16
jecxz
cmp
mov
in
cmpsb
pop
fnstsw
scas
cmp
lcall
stc
aas
sub
aam
stos
pop
cs
add
das
mov
pop
data16
sbb
add
scas
sub
and
inc
les
loope
jb
clc
jne
outsl
sub
pop
pop
addb
shlb
lods
dec
adc
out
pop
cs
aas
xor
in
xchg
mov
xor
popa
push
lea
pop
xor
sub
adc
mov
cmpsb
hlt
jne
cltd
cli
mov
gs
pop
arpl
mov
sub
or
in
mov
pop
ds
and
cmpsl
imull
mov
sarb
aas
or
or
in
mov
inc
and
push
lea
stos
addr16
in
mov
pop
xchg
movsl
sbb
in
add
lock
pop
push
xchg
pop
loope
or
mov
in
jle
push
pop
pop
clc
ud0
jge
fiaddl
add
push
push
push
insb
jo
and
addr16
outsl
hlt
dec
dec
stos
mov
in
test
shll
in
fwait
add
mov
test
jmp
add
and
lret
jmp
pop
jmp
dec
mov
pop
sar
push
ljmp
mov
add
arpl
sbb
dec
xor
xor
hlt
je
aad
sti
mov
mov
cli
les
ljmp
push
ret
mov
data16
mov
in
mov
imul
jecxz
sub
mov
push
arpl
mov
xor
pop
repnz
jp
test
and
movl
movd
lds
fisubrs
jg
inc
pop
and
pop
push
data16
pop
cmp
cmc
std
ret
leave
dec
popf
mov
pop
push
adc
repz
rcpps
dec
or
and
jmp
lret
mov
push
xor
outsl
cmp
dec
mov
popa
shrb
stos
lcall
mov
xor
adc
out
jb
mov
cmc
sbb
jl
scas
lret
adcb
sahf
mov
cmp
popa
dec
mov
sbb
ret
mov
dec
push
daa
int3
adc
or
jle
push
test
dec
or
mov
pop
and
ds
movsl
lds
pop
dec
xor
clc
mov
movsb
adc
mov
push
mov
jge
stos
inc
push
fnstenv
xorl
cmp
iret
jb
cli
mov
push
repnz
cmpb
in
mov
inc
mov
mov
jno
icebp
ljmp
fdivrs
repnz
lret
notl
ds
xchg
jne
test
sub
push
div
push
arpl
xchg
and
enter
xchg
stos
jecxz
or
call
mov
imul
lds
in
xchg
xchg
xor
int
dec
pop
popf
sbb
adc
add
mov
xchg
pushf
push
fnsave
int3
incl
sub
js
jg
mov
scas
fdivrl
test
xor
insb
ret
int
aas
push
and
out
cmp
xor
neg
push
outsb
int3
test
out
bound
addr16
pop
fbld
rorb
mov
in
xchg
cwtl
fwait
lods
mov
mov
sti
dec
lret
jl
pop
jle
leave
dec
lods
dec
xchg
out
cwtl
cltd
mov
cmp
or
insw
jno
inc
push
sub
push
idivb
cs
in
out
popa
addr16
cmp
mov
lea
fucomi
mov
and
lock
stos
add
jnp
mov
ret
push
data16
jne
loop
sub
mov
out
pop
pop
rcll
jne
in
adc
xchg
cmc
jns
daa
outsl
cmpsb
jl
loope
movsl
imul
jo
test
push
or
mov
js
js
jno
xchg
lock
adc
mov
stos
stc
sub
mov
in
lahf
ss
fadd
dec
pop
arpl
jecxz
dec
jbe
pop
xorl
dec
sub
aad
arpl
push
jg
adc
jl
sbb
in
jp
daa
pop
or
jns
pop
dec
adc
into
pop
push
and
mov
lahf
jecxz
mov
mov
sbb
das
notb
push
add
insl
mov
inc
insb
add
ljmp
out
insl
jns
pop
ficompl
sbb
add
cmp
push
movsl
jae
incb
sahf
mov
mov
out
xor
push
enter
xor
lds
stos
and
and
andb
cwtl
dec
mov
xchg
adc
pop
movsl
fcoms
pop
dec
outsl
loopne
enter
or
jg
cmpsl
sbb
fnsave
cmp
and
arpl
pop
mov
in
jmp
pop
out
data16
shll
in
pop
mov
cmp
imul
xchg
mov
pop
dec
or
or
addr16
out
jp
rep
sti
lea
mov
xchg
scas
andl
xor
mov
rcrl
jne
xchg
test
dec
sbb
sbb
and
pop
enter
add
insl
and
push
cmp
jae
iret
fimuls
xchg
jg
bound
jns
push
or
jl
sub
test
dec
and
push
sarb
jne
sub
cwtl
push
test
xor
hlt
imul
loopne
je
stos
pop
jle
mov
scas
pusha
movsl
mov
xor
xor
inc
jb
dec
cmp
jbe
lock
fcompl
pop
mov
xorl
mov
inc
xor
mov
cmpsb
scas
mov
shrb
cwtl
mov
mov
arpl
push
pop
out
dec
js
popf
push
push
mov
adc
cwtl
fbld
jg
dec
sub
adc
add
inc
add
cmp
jns
mov
nop
stos
sbb
ret
push
mov
sti
incb
xchg
sub
sbb
aas
sbb
insl
sbb
mov
cmp
orl
call
sub
cmc
mov
repz
andb
sbbl
mov
sbb
add
xchg
sub
sub
mov
fistps
scas
repz
jg
icebp
xor
inc
mov
mov
mov
inc
aaa
push
push
mov
repz
hlt
sub
out
push
aad
addr16
mul
pop
jne
fildll
push
pop
xor
divb
dec
mov
jb
mov
pop
jp
stc
dec
adc
scas
in
add
push
outsl
lret
sbb
pop
stos
dec
add
lds
jmp
lea
push
je
dec
int3
xor
jae
pop
mov
sbb
xor
sbb
add
fnstcw
pop
inc
loopne
aad
sbb
cli
and
jae
inc
adc
push
stos
add
cmp
mov
cld
cs
jmp
add
es
lds
mov
movsl
add
inc
inc
sbb
sub
adc
mov
push
inc
sti
add
test
mov
scas
jmp
pop
addr16
mov
ljmp
jae
xor
mov
cwtl
jnp
mov
fidivl
fwait
sub
insl
push
das
pop
xor
jns
jg
sbb
add
call
addl
mov
test
in
xor
cmpsl
scas
jl
fdivl
push
mov
or
cmp
xor
and
or
and
xchg
jno
pop
dec
lahf
pop
cld
xorb
pop
cwtl
push
or
adcb
lret
ret
push
and
and
jle
icebp
filds
in
data16
out
adc
adc
scas
or
mov
ret
stos
cmp
pop
inc
mov
mov
and
add
jae
xor
lock
ljmp
push
aas
jle
mov
jge
adc
inc
rorl
push
sbb
jnp
pop
mov
fmul
sbb
cwtl
inc
shlb
jecxz
xor
scas
mov
fldcw
push
pop
dec
insl
inc
negb
ljmp
pop
aaa
push
out
loopne
stos
mov
stos
push
xor
dec
dec
clc
dec
idiv
jl
packuswb
out
pop
imul
push
orl
gs
push
xchg
jl
add
mov
flds
call
pop
pop
repnz
lds
fidivrs
add
gs
or
out
outsl
rcrl
lret
add
loopne
cmp
shlb
ss
jecxz
sahf
mov
cmp
repnz
push
push
movsl
mov
insb
push
xor
cmpsl
insb
mov
out
push
pop
scas
xor
add
fninit
mov
and
inc
xchg
in
idivb
lahf
pop
mov
pop
inc
addr16
mov
pop
lcall
ss
cltd
xchg
xchg
sub
repz
cmpl
mov
mov
mov
enter
jno
bound
add
cltd
or
or
int3
aas
cltd
andl
enter
std
and
hlt
push
mov
xchg
push
clc
sub
mov
scas
mov
mov
hlt
loope
sbb
fisubrl
mov
sbb
bound
push
fstpt
dec
jge
sub
subb
scas
loopne
mov
sti
push
frstor
movsb
and
sub
mov
sub
adc
cmc
and
mov
dec
es
inc
sub
js
sub
rcrl
leave
in
dec
pop
or
ljmp
mulb
xchg
cmp
call
ljmp
nop
cmp
inc
pusha
outsb
mov
inc
repz
outsb
ja
int3
fstl
jmp
scas
xchg
dec
int
or
pop
add
adc
lahf
inc
push
popa
cmp
lcall
push
push
not
filds
cmp
repnz
push
mov
mov
int3
or
test
sbb
repz
ds
or
and
mov
add
add
xchg
mov
inc
arpl
xor
pop
cmc
sub
insb
icebp
icebp
dec
arpl
sbb
js
mov
add
mov
pop
push
or
scas
in
mov
lret
adcl
cwtl
test
inc
mov
and
fistpll
addr16
stos
jnp
push
mov
jb
cmp
pop
mov
or
xchg
inc
add
dec
inc
dec
push
popl
push
mov
cmp
jb
and
clc
lods
cmp
scas
sub
mov
xchg
ss
sbb
andl
adc
icebp
dec
js
adc
xchg
push
push
outsl
lods
popf
js
jmp
xchg
popl
push
fcoms
push
push
mov
mov
out
lcall
or
xchg
repnz
movl
xor
pop
cmpsl
in
addr16
pop
xchg
dec
shrb
jg
outsb
dec
leave
mov
popf
lock
sbb
movsb
xchg
std
jae
pop
jl
repz
push
stos
adc
fcmove
cmp
jg
cli
cmc
dec
xor
push
sub
movsb
add
ja
lods
lret
inc
mov
pop
xor
add
sbb
shlb
data16
inc
push
rorl
cs
stos
mov
adc
iret
jae
popf
out
mov
push
std
sbb
leave
insb
xchg
sbb
jge
push
cmp
das
rcrb
mov
push
push
and
jmp
xchg
push
jb
adc
je
test
daa
loopne
test
stc
iret
xchg
into
rcll
xor
adcl
in
pop
push
and
mov
pusha
xchg
dec
pop
movswl
xlat
mov
mov
dec
mov
jns
test
shl
cmc
xchg
dec
xchg
add
dec
in
shll
into
scas
stos
sub
in
add
sub
and
in
fiaddl
adc
fs
add
push
mov
sti
jge
jo
ja
mov
mov
pop
mov
push
ret
dec
and
lock
lahf
pop
roll
sub
rorl
mov
imul
es
pop
mov
mov
dec
ljmp
mov
pop
and
scas
lods
lea
lea
leave
jecxz
mov
lods
stc
xor
loop
xchg
and
pop
dec
arpl
les
inc
sbb
popa
and
cmp
mov
or
enter
and
jne
clc
popa
push
addb
mov
cmp
rcrb
mov
jae
push
adc
ljmp
push
es
scas
cmp
add
outsb
loopne
or
fdiv
push
adc
jmp
jg
dec
pop
inc
jge
adcl
lcall
inc
sub
je
xor
push
stos
negb
jge
imul
lret
or
or
faddp
or
sub
pop
outsl
stos
pop
pop
xchg
ja
ss
add
or
xor
rorb
daa
pop
mov
mov
je
lods
push
add
add
jmp
lds
cmpsl
aam
std
pop
adc
mov
cmpsl
cmpsb
in
loope
pop
xchg
ret
xchg
inc
pop
mov
sti
xlat
mov
mov
andb
pop
stos
mov
repnz
or
xchg
aas
lcall
or
iret
enter
sbb
inc
push
dec
hlt
loop
cmpsl
add
xchg
fs
push
xor
xor
lock
pop
rclb
and
outsl
shll
andl
fcompl
mov
mov
cmp
ds
loopne
hlt
adc
cmpsl
lods
jp
in
addl
adc
mov
ficoms
pop
mov
imul
xor
loope
sbb
lds
mov
fs
in
clc
ja
popf
enter
fstps
jo
dec
lret
aam
pop
inc
jge
fstl
or
push
add
out
test
fcomps
push
mov
lret
ja
pop
or
lahf
in
addr16
mov
imul
movsl
sbb
mov
cwtl
and
mov
pop
mov
xchg
fbstp
add
push
inc
sti
and
rcrl
adc
or
stc
sbbb
fmull
imul
push
jg
push
xor
aas
adc
cmp
xchg
int
push
testb
sub
sub
inc
fstpl
xchg
mov
imul
jb
adc
cmp
xchg
and
nop
cmc
leave
jne
and
fiaddl
clc
mov
jns
adc
or
lcall
test
inc
aam
mov
add
jo
scas
in
cmpl
or
mov
fs
es
lea
icebp
icebp
scas
mov
faddl
cmc
test
out
repnz
sub
cli
movsl
ret
loop
and
push
outsb
subb
ret
pop
sti
sub
mov
inc
sub
jmp
ds
leave
iret
mov
jae
ret
jbe
jo
sub
sbb
jmp
lret
push
loopne
out
mov
add
cmp
and
into
pop
and
adc
lds
es
test
orl
add
imul
sbb
lldt
mov
pushf
out
and
les
push
fnstcw
call
xchg
mov
int3
sbb
hlt
and
ret
mov
push
jp
sarb
mov
jno
xchg
or
hlt
mov
adc
cmpsb
sbb
add
adc
mov
jecxz,pt
cmp
adc
incb
mov
push
and
or
dec
cld
mov
sarb
fnsave
ret
dec
pop
pushf
lret
mov
cmpsl
clc
movsb
fistl
insl
or
inc
outsb
shll
fldl
ret
jp
lcall
mov
in
jb
test
sarb
aam
pop
push
lds
pop
mov
mov
fnstcw
sub
sbb
iret
sbb
or
mov
adc
sahf
jmp
jbe
pop
mov
inc
sbb
push
fcmovnbe
inc
push
pop
incb
or
mov
xchg
dec
insl
andb
add
mov
mov
bound
das
xchg
mov
push
pushf
add
scas
push
ljmp
push
mov
sahf
sbb
fwait
jno
outsl
stos
jae
push
sbb
ljmp
mov
mov
cmp
dec
xor
add
mov
push
mov
fimuls
cmp
adc
jp
adcl
into
scas
xchg
mov
dec
ja
lcall
idivl
cltd
lret
repz
in
aaa
fdivs
add
in
cs
clc
shrb
and
inc
jne
mov
dec
mov
cltd
fstpt
lea
gs
mov
les
adc
pop
mov
ja
jae
inc
les
aaa
std
mov
nop
xchg
roll
mov
mov
int
stos
aaa
daa
test
or
movsb
jne
push
mov
push
cwtl
mov
lods
pop
imul
dec
and
popa
cmp
sbbb
mov
shlb
dec
cltd
lods
and
gs
fs
fsubs
jl
push
push
data16
stos
int
jae
adc
mov
or
mov
idiv
mov
xchg
dec
test
ljmp
xlat
xor
pop
mov
jl
repz
jbe
repnz
movsb
aad
xchg
fisubrs
arpl
sbb
mov
cwtl
movsb
add
mov
adc
adc
sbb
push
shrb
iret
inc
mov
add
test
push
mov
ret
jecxz
loope
cwtl
sarl
outsb
dec
fs
fnstsw
jl
pop
xchg
push
inc
sbb
mov
es
push
inc
jbe
cmp
and
aaa
scas
jae
pop
jns
popf
fstpl
mov
lahf
fdivrp
fnsave
orl
inc
sub
out
pop
push
inc
fists
pop
movsl
mov
dec
jecxz
xor
xchg
jno
sahf
jecxz
jle
and
addr16
ror
mov
ds
dec
lret
mov
fmuls
lods
int
jbe
lret
scas
pusha
mov
loope
fidivrs
mov
dec
push
add
lea
aad
mov
push
push
push
jecxz
push
jge
dec
adc
jns
addb
cmp
stos
xchg
and
push
mov
adcl
fists
push
das
fimull
gs
ja
xchg
cld
add
iret
filds
jmp
mov
push
idivl
mov
and
into
leave
in
out
or
cmp
and
xor
xor
mov
stc
call
enter
stos
ret
and
push
dec
jle
mov
pop
and
adc
xchg
mov
cmp
dec
sbb
jne
sti
xchg
aaa
cmp
call
pop
test
sbb
sti
push
mov
mov
sarb
data16
sub
bound
out
mov
sbb
sbb
adc
push
nop
xchg
mov
inc
dec
push
mov
icebp
ret
sbb
sbb
int3
push
into
out
cmp
rolb
imul
fcoml
cmc
out
movsl
popa
fnsave
xchg
enter
imull
push
jne
lods
sbb
cmp
cmp
inc
out
sub
ja
clc
out
fimuls
in
mov
mov
jl
addr16
push
sahf
push
xor
popf
xchg
mov
ljmp
inc
mov
push
mov
push
inc
dec
mov
jae
mov
push
xchg
mov
nop
lock
lods
iret
cmp
pop
mov
cmp
and
mov
mov
mov
xor
jge
dec
cmc
jmp
push
cmp
sbb
adc
jle
adc
andb
movsb
lods
inc
outsb
inc
stos
int3
jecxz
sub
xor
mov
out
ret
dec
cld
mov
mov
insl
cltd
or
pop
push
stos
enter
inc
mov
in
cmpsl
xor
xor
rorl
hlt
stc
icebp
push
push
cmp
or
leave
xchg
orl
enter
into
lcall
push
sub
xchg
cmp
sbb
ljmp
or
sub
cmp
add
add
cmp
cmpb
pusha
fwait
gs
test
or
push
pop
cmp
sub
and
aam
dec
jbe
icebp
scas
mov
dec
adc
mov
pushw
out
pop
jne
lret
notl
les
or
push
push
push
bound
mov
in
popf
push
ret
int3
bound
inc
mov
adc
out
rorl
push
xor
dec
cmpl
fs
shlb
std
icebp
lcall
rcrb
sub
pop
xchg
sub
das
xchg
dec
sub
jno
lcall
or
cmp
adc
mov
jnp
push
movsb
in
jl
cmp
cs
adc
jne
cmp
mov
ret
jge
in
sbb
sub
and
ljmp
ja
push
sub
icebp
xor
cmpsl
sti
and
ja
dec
adc
fildl
hlt
xor
std
mov
sbb
lods
out
outsb
in
fstpl
icebp
sarb
jecxz
xor
xchg
iret
jge
jle
stc
dec
mov
hlt
push
fldl
in
sbb
jg
mov
mov
cld
mov
push
add
sub
or
adc
adc
mov
sti
sub
adc
jle
popa
adc
inc
data16
sbb
jo
cmc
mov
adc
daa
mov
pop
loope
aas
bound
js
or
cmp
add
add
pop
in
pop
dec
ret
ret
jmp
shl
or
pusha
loope
movsb
cmp
js
adc
pusha
sub
mov
mov
cmp
leave
cmp
fs
mov
js
mov
and
mov
enter
divl
push
mov
mov
mov
dec
cmp
call
es
push
mov
rclb
out
jb
in
arpl
mov
fidivrs
ja
int3
and
xor
jb
xor
imul
sbb
scas
insl
xor
fisttpll
imul
mov
mov
pop
inc
push
stc
or
mov
xchg
orb
bound
out
shl
mov
repnz
mov
shlb
xchg
lret
sti
roll
sub
inc
lds
push
cmp
adc
dec
mov
adc
je
leave
mov
and
mov
add
lret
xor
adc
cmc
icebp
ljmp
mov
cmp
xchg
ljmp
sub
cmp
nop
jns
fbstp
test
jg
mov
test
add
lret
ja
jp
push
dec
and
mov
loope
call
cmp
cs
pop
push
pop
jl
xchg
ss
sub
or
xor
sarl
idivl
jle
out
ret
ficomps
int
out
mov
mov
mov
inc
jmp
cmp
imul
sub
jae
mov
dec
loop
repnz
movsb
inc
cmp
mov
mov
push
sub
out
out
popa
fs
shll
rclb
gs
jnp
push
push
cs
inc
xchg
dec
fdivl
adc
xor
pop
cmp
push
cmove
cltd
clc
pop
cmp
cltd
testb
xlat
stc
je
cmp
push
ret
mov
nop
orl
test
cli
adcl
les
jbe
add
fwait
and
clc
sub
inc
and
test
stos
ret
jp
stc
mov
mov
xor
dec
add
insl
popl
gs
notl
imull
xchg
in
sahf
fisubrs
xor
add
adc
mov
add
pop
or
jnp
cmpsl
push
xor
ss
xorb
stc
mov
jecxz
ret
stos
or
jne
les
sbb
hlt
jecxz
jne
xchg
or
hlt
fldln2
dec
data16
cld
lods
iret
adc
sub
dec
or
fdivp
loopne
iret
cltd
jmp
popf
les
push
sub
xchg
scas
cmp
leave
mov
mov
mov
or
mov
fsts
sub
das
fwait
dec
cmc
add
ds
and
faddl
and
in
aam
pop
stos
xchg
adc
mov
pusha
sbb
push
pushf
mov
in
dec
mov
jbe
stos
xor
fldcw
adc
or
inc
xchg
push
dec
xchg
popa
xor
add
sbb
jmp
insl
push
jbe
imul
outsb
xlat
imul
loope
jecxz
sub
sbb
ret
popa
pop
test
dec
xor
gs
leave
add
cmc
cltd
aad
scas
loop
outsb
jae
enter
jp
cmpsb
jo
shll
ficoms
mov
xchg
inc
xor
mov
xor
shrb
mov
stos
and
sti
mov
aam
cwtl
pop
mov
dec
adc
jo
adc
push
xchg
jg
outsl
cmc
or
pop
jp
pusha
inc
add
jo
xlat
mov
std
aaa
cwtl
jge
ja
cmp
cli
or
roll
out
sti
lret
add
aas
inc
imul
test
mov
test
pop
adc
repnz
lds
lea
popf
sub
jnp
sbb
test
dec
pop
mov
sub
sub
xchg
adc
ds
pop
xlat
sub
lret
jp
rorl
mov
xlat
push
fidivrs
xor
lcall
xor
lret
into
notb
pop
sbb
loopne
hlt
or
fchs
rolb
adc
cmpsb
or
cmp
sbb
seto
sub
sbb
repnz
fstpl
lds
lret
das
xchg
add
int3
xchg
and
pushf
pop
or
sbb
sarb
je
inc
jb
adc
pop
push
lds
or
lods
and
sbb
pusha
mov
cmp
jmp
jns
mov
cltd
data16
sub
push
push
mov
frstor
jo
in
push
xchg
or
push
bound
mov
bound
int
addr16
lret
popf
in
sbb
out
and
xchg
ret
xor
scas
es
xlat
cmp
dec
test
bound
ss
sbb
fdivl
pop
dec
xor
out
cli
mov
mov
ret
bound
daa
push
and
add
cmp
add
iret
icebp
xchg
movsl
imul
int3
int3
iret
mov
out
sbb
sub
movsb
aam
dec
xor
jge
stos
push
movsl
cmpsb
xchg
sub
aas
mov
outsl
push
icebp
fldenv
rcrb
hlt
xchg
jl
push
scas
push
cmp
push
mov
and
lock
jbe
push
mov
rorb
pusha
mov
mov
pop
cmp
or
adc
mov
push
or
aam
adc
xlat
outsb
sbb
pop
scas
repnz
movsl
sub
mov
repz
lret
fisttpll
push
int3
pop
into
jle
cmp
leave
loope
in
dec
cld
fstpl
pusha
jae
and
push
bound
in
out
scas
mov
jp
loopne
xor
outsl
enter
xor
cmp
jecxz
negb
pop
out
in
lahf
inc
loopne
push
loop
stos
push
out
popf
cmp
cmpb
jl
shll
es
sbb
cmpsb
test
fisubrs
dec
xor
insl
sbb
xchg
inc
push
int
cmc
adc
jge
mov
movsb
insl
push
imul
jmp
pop
sbb
sbb
inc
rcr
jnp
stos
pusha
xchg
inc
loope
lock
mov
sub
push
ljmp
sbbl
test
insb
jae
xor
andb
jns
dec
jle
lods
lea
xchg
add
enter
fiaddl
pop
mov
repnz
loopne
push
jecxz
shrl
pop
jmp
popa
mov
mov
sbb
jp
leave
fidivrl
sahf
fwait
mov
fidivs
scas
inc
std
mov
aaa
popa
ljmp
inc
ret
push
xchg
cmpsl
mov
pop
ja
dec
push
and
inc
movsl
shrl
popf
pop
or
icebp
cmp
adc
daa
jg
pop
stos
pop
push
xor
pop
and
lods
mov
stos
aam
sti
test
jne
sbb
sub
pop
cmp
lcall
sbb
mov
leave
stos
add
scas
adc
cmpsb
xchg
mov
insl
add
inc
in
xchg
sbb
orl
test
pop
cld
xchg
xchg
imull
test
out
in
pop
test
bound
arpl
cwtl
mov
push
push
es
push
pop
jae
xchg
subl
sub
sti
inc
jg
clc
shl
ret
dec
gs
inc
pushf
insb
jne
rorl
xchg
lods
js
jb
mov
cmc
imul
jo
leave
pop
mov
rolb
add
pushf
aam
cmpsb
and
mov
and
jp
add
out
cltd
aas
cltd
bound
es
and
call
dec
jb
mov
sbb
fnsave
das
mov
sub
push
pop
cwtl
add
imul
or
test
out
mov
inc
add
out
out
pop
sahf
fildl
fcompl
je
pop
cmp
mov
shrl
mov
adc
arpl
in
fisttpl
sarb
push
outsl
cmp
out
fnstenv
jns
dec
mov
outsb
mov
adc
stos
ret
pusha
in
or
das
mov
xchg
pop
fistpll
cmova
jecxz
cmp
aam
mov
arpl
or
mov
cs
push
cltd
lock
sbb
or
adc
mov
pop
or
fwait
in
cmp
insl
xchg
jge
sub
mov
aas
cwtl
out
dec
dec
adc
jl
divb
arpl
and
dec
xlat
mov
mov
push
ja
sbb
and
pushf
cmc
mov
mov
cmp
sbb
adc
aaa
fisubl
fidivrl
hlt
or
sbb
enter
mov
mov
movsb
inc
into
adc
mov
mov
hlt
jp
int3
cmp
ja
jne
or
insl
add
xchg
aam
add
xchg
dec
ja
inc
fistpll
mov
out
sub
repnz
pushf
sbb
mov
test
loopne
jo
inc
lock
xlat
cmp
decb
xchg
pop
mov
aas
xchg
add
clc
aas
scas
mov
mov
or
xor
push
add
stos
inc
xchg
imul
sbb
or
dec
dec
hlt
sub
push
in
lock
pushf
or
inc
xor
fs
jne
adc
loopne
gs
cli
mov
or
into
fwait
jns
mov
inc
cmpsb
imul
cmp
leave
mov
movsb
call
jecxz
test
loop
in
dec
out
in
out
out
cltd
jmp
pop
nop
xorl
sbb
mov
push
cmpsl
fsubrl
mov
sub
cmp
cwtl
mov
cli
test
xchg
popa
mov
fmulp
mov
dec
stos
inc
pop
call
out
cmpsl
adc
orb
lret
call
dec
or
repz
jbe
jns
adc
addl
aaa
arpl
cli
out
test
jecxz
xchg
shl
adc
fstl
sub
jae
int
xchg
pop
add
push
pusha
jmp
aad
bnd
dec
dec
pop
mov
sub
pop
push
test
dec
test
icebp
shrb
addr16
std
mov
and
pop
lods
jae
test
adc
pop
push
jmp
int3
leave
dec
jmp
pop
and
divb
cltd
std
mov
in
sbb
and
add
test
shlb
xchg
je
xor
outsl
leave
lea
outsl
filds
push
sbbl
inc
add
call
shll
push
in
js
aaa
cmpsl
and
pushf
pop
dec
xorb
daa
pop
orb
inc
inc
daa
mov
leave
out
fcmovnu
mov
jae
shll
cmpb
les
lods
shlb
clc
xor
dec
sub
cmp
data16
xchg
fsubl
sahf
ds
pop
add
lret
testb
push
hlt
ja
in
and
mov
pop
mov
dec
adc
aam
push
jbe
jp
inc
mov
aam
and
push
repnz
inc
rcl
movsb
sub
sbb
lret
and
xor
jns
mov
xor
movsl
pop
sbb
ljmp
sbb
xchg
in
iret
push
icebp
call
fcmovnb
int3
and
in
aam
mov
xor
mov
rcll
jbe
repnz
loop
push
pop
ret
adcb
inc
ficompl
pop
fldenv
and
daa
pop
pop
mov
pop
stc
mov
push
flds
aad
mov
mov
add
icebp
inc
push
mov
std
stc
in
lods
jo
fisttpll
loopne
and
pop
and
mov
dec
inc
test
js
and
shlb
adc
in
xchg
not
movsl
dec
repz
xchg
imul
mov
out
push
ret
test
std
xchg
lods
and
hlt
mov
dec
movsl
push
lods
and
push
fldenv
sub
jo
shrd
cmp
cmp
mov
or
mov
mov
imul
loopne
push
or
insl
mov
ds
in
push
sub
ret
ret
dec
mov
aad
sub
xchg
enter
insl
dec
mov
push
inc
dec
pop
out
adc
jbe
xchg
scas
cld
movl
iret
iret
jae
adc
xorb
clc
sub
lret
xlat
int3
jnp
adc
inc
xlat
lahf
orl
loop
mov
xchg
ret
cmp
mov
pop
xchg
ljmp
jle
add
jl
fsub
out
mov
mov
and
mov
pop
mov
or
cmpb
testb
mov
jge
and
into
adc
xchg
and
pop
aad
das
push
or
dec
std
mov
popa
push
push
inc
inc
outsl
xchg
xchg
mov
xor
jne
mov
push
dec
or
sub
pop
int3
daa
inc
pop
std
mov
mov
or
pop
cmp
sub
daa
in
cmp
popa
mov
pop
ret
int
fnsave
roll
loop
shll
sub
inc
add
je
ja
jg
daa
int3
xor
pop
mov
or
cmp
jne
outsl
cmpsb
mov
mov
lods
or
mov
sub
xchg
fwait
mov
les
adc
xchg
cmp
mov
mov
cmp
loop
push
xchg
outsl
xchg
js
and
mulb
and
rol
aad
mov
jo
insb
js
lahf
adc
sti
stos
mov
cmc
mov
insb
test
ja
repz
int
ja
xor
sbb
mov
mov
ss
sbb
fdivl
dec
or
sti
std
insl
jae
aas
ja
outsl
cmp
mov
fdivrl
les
cmpl
cltd
lcall
push
cltd
inc
imul
fdivs
push
mov
jmp
pop
cmpsl
out
out
sbb
cmpsb
les
push
jmp
jno,pt
in
xchg
jl
cmc
std
mov
inc
or
and
and
sub
loop
adc
lock
es
jge
jb
sbb
inc
pusha
idivl
cmp
imul
fimuls
pop
aaa
xchg
fcoms
cmp
aas
out
mov
out
or
stc
out
fsubrl
rorb
xlat
xor
adc
mov
or
lcall
jns
testb
push
mov
sti
jmp
fists
add
outsl
das
jae
les
pop
mov
cmp
mov
repnz
mov
mov
jns
xlat
nop
std
bt
dec
mov
imul
cmpsb
cwtl
sarl
add
aas
sti
fsub
push
pop
outsb
int3
scas
jl
jae
xor
adc
daa
cwtl
pop
sbb
fsubrl
mov
mov
aam
das
ds
cmp
hlt
adc
enter
cmpsl
adc
jle
xor
pop
pop
mov
in
ficoml
or
addb
out
sbb
insl
xor
notb
insl
pop
push
pop
mov
fnstcw
push
or
push
or
mov
adc
mov
sub
hlt
dec
add
hlt
xor
mov
mov
enter
xor
push
push
mov
in
jmp
dec
insb
mov
mov
les
fs
cmp
loopne
stc
icebp
dec
lret
mov
adc
and
inc
pop
ja
push
and
leave
icebp
loope
int3
sbb
aad
pop
mov
adc
xor
push
xorl
pop
cmp
stos
sub
popa
fisubs
sub
sub
fcoml
pop
loop
push
ficoms
cmpsb
scas
outsl
ljmp
cmp
imul
or
mov
xor
push
in
fistpll
js
push
xchg
inc
imul
data16
xor
adc
adc
jp
sub
jg
dec
sahf
ja
decb
adc
sbb
je
dec
inc
aam
inc
in
js
dec
out
cmp
test
cmp
xchg
mov
mov
push
jbe
jp
lods
mov
insl
cli
or
dec
xchg
push
ret
jno
fstps
cmp
sub
ss
jp
or
cmp
cmp
mov
scas
sti
xchg
scas
xchg
stc
hlt
das
outsb
or
xchg
ljmp
leave
lock
jmp
push
sbb
ss
imul
mov
adc
cwtl
int3
mov
inc
leave
shlb
mov
icebp
fucom
ret
mov
ds
cwtl
xchg
scas
sbb
mov
orb
fwait
sub
push
loop
xchg
or
or
out
push
cld
mov
aas
out
lods
les
jbe
repnz
lret
sbb
rol
adc
bound
imul
fdivs
xor
hlt
das
sti
mov
add
jle
dec
jo
das
mov
into
xchg
ret
push
mov
add
xchg
loope
movb
mov
cmp
or
ljmp
into
mov
inc
mov
testb
xchg
xor
andnps
aam
mov
mov
mov
jp
pushf
icebp
clc
lods
stos
jne
push
jo
hlt
mov
mov
xor
jmp
cli
xor
rol
out
dec
lods
stc
aaa
cmp
cmp
repnz
xor
and
or
ret
out
mov
mov
movsb
test
xchg
outsb
jle
inc
daa
mov
push
fs
ficomps
add
sub
or
cmp
sbb
outsl
out
jns
add
rep
jge
adc
lods
xor
in
stc
xchg
out
or
xor
pusha
mov
ljmp
fstp
jbe
jl
xlat
fwait
popa
jmp
sbb
pop
sarl
fidivl
cmc
iret
xchg
push
push
adc
sbb
dec
xor
adc
lahf
or
imul
sub
jecxz
addr16
inc
cmp
pop
sbb
inc
sub
xchg
adc
ds
outsl
stc
cmp
sbb
fisubrl
xor
popa
and
dec
pop
jae
nop
xor
dec
dec
mov
jne
scas
in
fdivrs
sub
inc
cmc
clc
pushf
pop
push
bound
arpl
enter
cli
pop
arpl
mov
sub
cmp
cli
cmp
aad
repnz
cmp
mov
adc
sub
fwait
cmp
cmpsl
dec
inc
jne
pop
popa
stos
adc
es
xchg
cmp
add
inc
ljmp
rol
test
fistps
push
push
lcall
fisubrl
test
out
insl
movsb
movsb
jmp
add
outsb
jb
push
cmp
xor
outsl
popa
cmp
push
xchg
cmpsb
jmp
dec
aaa
xor
mov
ret
iret
mov
sbb
push
jge
and
addb
and
jmp
xchg
aas
sub
int3
mov
jnp
dec
mov
addr16
ds
repz
mov
dec
pop
pop
lret
mov
mov
jb
sbb
pop
fistps
add
xlat
fidivs
jo
mov
pop
cld
test
mov
sbb
cmpsb
jns
xchg
push
mov
cmpsl
shrl
leave
imul
xchg
mov
sbb
arpl
pop
jnp
pop
or
xchg
cld
outsb
out
outsb
out
test
int
movl
push
mov
loop
or
andl
push
jno
out
add
aam
popa
pop
inc
cmp
sbb
sub
arpl
push
jbe
iret
addr16
popf
pop
test
push
jbe
pop
out
inc
mov
xor
push
pop
aas
ds
inc
popa
outsb
and
call
cmp
jnp
in
pop
repz
and
and
in
in
cmp
pop
add
cmpsb
lds
mov
pop
aas
jne
cld
push
fimull
xchg
nop
inc
testb
mov
test
call
ljmp
pop
jnp
xchg
mov
jge
cmp
jne
add
mov
or
insl
stos
test
add
mov
ret
xchg
xor
mov
pop
jge
pop
dec
out
xchg
xor
pop
pop
push
inc
xchg
adc
xor
xchg
push
fcoms
or
fcmovne
xor
cld
jp
cmp
inc
push
mov
iret
movsb
push
sbb
jb
mov
mov
cmpsb
hlt
shr
in
fwait
incl
pop
ds
xchg
inc
sbb
add
mov
push
sbb
ja
xor
xchg
in
cmc
bound
mov
lea
out
pop
pusha
nop
adc
sbb
mov
bound
mov
and
jno
addl
cmp
sbb
pop
out
push
int
mov
das
or
or
test
fmul
mov
pop
fwait
and
xchg
adc
imul
dec
or
jae
or
fdivr
xchg
hlt
push
int
hlt
fcmove
sbb
loope
mov
cwtl
jno
js
test
sub
lock
dec
mov
into
ja
jbe
mov
mov
cmp
data16
lds
ss
mov
push
shlb
jecxz
sbb
pop
mov
jmp
repz
ljmp
mov
jecxz
cld
out
cmp
loope
in
xchg
cld
pop
xchg
inc
pop
ret
pop
cli
xchg
mov
movsb
mov
jl
shlb
clc
adc
ds
ret
and
aad
or
fisttpll
mov
sbb
adc
arpl
jl
jb
leave
jecxz
hlt
or
sub
or
scas
lcall
dec
jns
jle
pop
dec
or
stos
lahf
mov
daa
xor
xlat
xlat
aad
fld
cmp
push
mov
cmpsb
jecxz
loop
aas
pushf
jbe
cltd
sub
pop
mov
inc
and
xchg
or
cmpsb
jb
rcll
int3
xor
xor
or
lret
xor
dec
mov
add
mov
and
sub
lods
outsb
cmc
ja
push
xchg
ret
aaa
cli
sub
pop
mov
dec
mov
jno
gs
addb
cmp
xorl
dec
dec
test
shlb
cmpsb
add
insb
mov
stos
imul
xor
subb
and
pop
mov
stos
add
pop
lods
inc
inc
scas
js
rcll
push
sub
push
std
int
fs
lods
lock
add
into
adc
dec
lods
loopne
add
dec
mov
xchg
mov
xor
fbld
push
lret
test
mov
fistpll
orb
hlt
xchg
mov
lods
ss
fdivrl
mov
jbe
or
jp
call
jb
sub
mov
popa
xor
lods
in
les
push
dec
sub
icebp
pop
cs
sbb
jb
aam
lret
insl
test
inc
shll
jge
adc
add
mov
stos
dec
dec
pushf
and
jmp
int3
loop
sti
sbb
aaa
inc
repnz
xchg
rorl
jnp
out
arpl
cwtl
dec
call
out
or
mov
push
jmp
mov
mov
push
loopne
sub
adc
mov
ss
and
lds
xchg
test
push
jmp
leave
lods
xchg
lods
mov
sbb
mov
rcr
orb
cmp
and
shl
into
test
mov
push
data16
xchg
push
jnp
xchg
mov
pop
das
aaa
sbb
cmp
xchg
lcall
pop
xchg
or
cmp
ja
sti
dec
pop
or
mov
call
push
cmp
lret
arpl
movsl
lods
mov
fs
add
lahf
mov
into
cmp
sub
loope
mov
mov
pop
cmp
out
mov
in
push
adc
sahf
mov
idivb
sub
jle
cmp
add
jmp
mov
add
mov
pop
and
pop
push
int
xchg
fwait
and
mov
mul
xchg
out
inc
cmp
xchg
mov
stc
fistpll
dec
jl
outsb
push
out
pusha
lahf
cmp
inc
sbb
popf
and
adc
ljmp
or
ret
cmp
loop
lods
sbb
movsl
mov
jle
lods
insw
dec
cmc
xchg
outsl
adc
xor
inc
lret
xchg
mov
dec
xchg
adc
hlt
or
std
dec
push
adc
and
mov
xchg
mov
inc
je
lock
jnp
lock
mov
lock
divb
popa
lods
out
lahf
rcrl
shrb
add
lret
push
jle
push
add
lods
cwtl
idivl
rcll
into
ja
jbe
jnp
and
xchg
bound
sbb
and
pushf
fdivrl
and
lahf
rcrl
mov
inc
pop
or
xchg
mov
mov
pop
loope
pop
lock
pop
sbb
std
lret
cmc
enter
shrb
push
mov
xor
into
mov
in
xchg
mov
loope
imul
stos
push
clc
rcl
repnz
aam
cmc
in
mov
mov
sbb
out
mov
insl
enter
outsl
mov
mov
enter
xchg
outsl
jo
or
jmp
adcl
aad
or
mov
jl
cmpsb
lods
lcall
je
pop
pop
test
pop
aad
fstl
dec
mov
mull
mov
in
into
fcoms
add
add
loope
xchg
lcall
sub
sbb
or
lods
sub
push
and
lods
out
shll
ret
mov
je
pop
insl
stos
idivb
in
mov
fimuls
push
push
adc
into
mov
cmp
sub
notb
push
xor
mov
add
push
xchg
add
xchg
xchg
outsl
cwtl
sub
xlat
cltd
insl
repz
or
and
fidivrl
mov
sbbl
fldt
and
pop
fs
push
mov
ja
mov
ss
push
dec
pminsw
sub
push
lret
pop
mov
out
sbb
mov
sbb
aam
enterw
test
push
ficoms
iret
push
push
out
loopne
out
xorb
loop
pop
mov
sbb
cltd
pop
out
or
test
das
jbe
jnp
lock
xchg
xor
mov
imul
dec
adc
das
xor
lock
adc
sub
shrb
cmc
testb
xlat
repnz
inc
cltd
insb
lods
repz
test
inc
xor
cmp
mov
rol
loop
push
loopne
adc
fldl
cmovp
pusha
insl
test
xor
adc
and
out
push
loop
xchg
cmp
out
xchg
test
xor
inc
add
pop
movsb
lcall
insb
add
imul
scas
push
xchg
popf
jecxz
stos
fcomip
xlat
nop
pushf
fdivr
cmpsb
pop
lahf
sbb
lret
jbe
push
mov
pushf
pop
jp
push
into
mov
add
cltd
mov
or
pop
insl
int
ljmp
pusha
add
or
out
fldenv
popa
xor
lsl
push
or
pop
stos
inc
out
bound
or
mov
xor
jns
cmp
sub
idivl
mov
push
fmul
loopne
mov
mov
lcall
jmp
pop
pop
pop
dec
sub
dec
je
add
dec
xchg
cs
decb
xchg
pop
es
addr16
lea
jp
cmp
add
xor
sub
out
out
stos
hlt
ljmp
sub
loope
jo
sbb
jge
add
xlat
cld
sub
jmp
popf
jae
and
or
jmp
jnp
loope
push
mov
andb
std
shrl
pop
pop
sti
aas
sbb
mov
inc
fwait
push
call
fnstcw
or
add
loopne
add
in
test
outsb
das
xlat
fsub
push
dec
push
xchg
cmc
sbb
dec
cmc
mov
scas
jbe
mov
shl
loopew
fnstsw
xchg
out
sbb
arpl
ret
rolb
enter
inc
insl
gs
shrl
adc
pop
push
cwtl
or
xchg
push
xor
and
adc
sub
mov
sbb
addr16
fs
adc
es
loope
dec
movsl
jno
aas
dec
shl
push
jo
fxch
adc
jns
lret
pop
mov
sub
movsb
in
sbbb
scas
andb
jns
int
out
into
and
and
adc
aaa
out
mov
cmp
fnstcw
cmp
and
sbb
iret
scas
inc
cmc
inc
adc
dec
notl
fnstsw
lods
mov
iret
insb
daa
mov
pop
imul
push
ljmp
pop
adc
push
in
sub
xor
jno
jo
pushf
scas
sti
mov
jp
std
push
xchg
ja
test
push
cs
lcall
call
mov
mov
adc
shl
mov
aas
inc
outsl
jne
lea
pop
push
rcll
popa
out
loopne
shrb
mov
cmpl
enter
jbe
les
and
xor
nop
inc
in
gs
jle
mov
arpl
mov
sbb
mov
pop
mov
cmpb
dec
adc
mov
sbb
pop
mov
push
mov
lahf
mov
int
mov
test
aad
lds
outsl
sahf
inc
jmp
out
mov
in
test
std
add
sbb
jnp
stos
ret
adc
pop
jae
mov
pop
test
or
dec
and
lcall
adc
xlat
fsubs
mov
xchg
imul
inc
pop
dec
add
sbb
aaa
lods
iret
jle
xchg
mov
int3
xor
loope
cs
jbe
mov
push
ret
adc
mov
out
clc
test
shrl
std
imul
subl
test
xor
mov
nop
xor
push
jne
mov
filds
roll
lods
dec
in
in
jle
fstp
jbe
cwtl
mov
and
cltd
or
ss
jno
cmp
jecxz
lcall
rorl
cmp
test
mov
inc
or
repz
dec
sbb
movl
negl
cwtl
add
lcall
mov
push
push
arpl
push
sahf
aad
fwait
adc
mov
or
cmpb
or
or
lcall
fstpt
jne
fldl
lea
popa
fcmovnb
bound
sbb
pop
scas
stc
xor
add
push
or
and
or
sbb
jae
push
popa
xchg
inc
imul
xor
sarl
xor
jno
pop
icebp
lcall
mov
fs
jbe
sbb
insb
push
mov
gs
mov
pop
mov
inc
cmpsb
or
in
xor
push
cltd
sub
dec
sub
mov
inc
cmp
inc
aaa
stos
gs
mov
fstl
js
loopne
mov
loop
push
mov
rclb
fistpl
push
jl
jg
int3
insb
dec
call
mov
add
push
idivb
loopne
pop
scas
test
xchg
fs
lret
cmp
adc
push
leave
js
pop
adcb
call
push
shrb
jmp
xor
mov
dec
in
test
adc
push
aad
leave
jmp
push
aas
and
add
xor
mov
mov
mov
dec
add
xchg
sahf
into
nop
js
dec
add
sbbb
shl
hlt
xlat
mov
fdivl
adc
shlb
lea
adc
cmp
add
push
enter
xor
mov
adc
sub
sbb
add
inc
pop
in
xlat
push
les
pop
inc
pxor
scas
mov
or
mov
imul
pop
rolb
xchg
out
ljmp
push
cmp
int
mov
lods
adc
bound
dec
stos
adc
mov
sbb
dec
pusha
aaa
call
das
inc
lea
mov
lret
lods
add
sub
and
test
adc
dec
outsb
mov
leave
xor
mov
shrl
lahf
int
adc
cmp
out
cmp
aad
and
jbe
push
gs
mov
xor
stos
orl
outsl
sbb
sbb
xor
daa
cmpsl
mov
dec
dec
jnp
sbb
mov
je
repz
xor
jae
pop
aad
mov
out
cmc
movsl
das
cmp
or
add
xor
in
cmp
je
lods
or
cmp
addr16
call
or
dec
test
adc
in
imul
pop
xchg
shlb
push
jp
pusha
lods
repnz
xor
mov
dec
int3
jbe
test
inc
adc
lods
mov
xchg
lods
pop
shlb
inc
in
xor
mov
push
mov
sub
xchg
in
stos
leave
aas
mov
and
xchg
mov
cmp
out
mov
lcall
pop
lock
pop
idivl
out
jg
mov
mov
aaa
cmc
test
leave
test
push
fstpt
jecxz
inc
shr
mov
stos
test
xlat
mov
dec
push
jecxz
call
jge
xchg
push
out
hlt
mov
stos
inc
jnp
pop
xchg
add
add
mov
fnsave
push
std
jns
sbb
inc
mov
inc
sub
arpl
fs
push
mov
sahf
pmullw
dec
les
pop
in
fisubrs
fsubrs
lds
mov
inc
arpl
out
scas
fwait
lds
push
push
pop
push
jl
or
adc
movsl
aaa
pop
cmpb
jo
inc
push
xor
pop
adc
push
dec
adc
repnz
inc
push
das
mov
arpl
leave
xchg
mov
pop
and
fcmovne
sub
loop
push
jmp
or
adc
dec
add
in
cmp
mov
dec
fstpt
push
mov
icebp
cmp
push
xor
scas
cmp
int
outsb
imul
sbb
lods
sbb
and
imul
sbb
test
shll
jae
in
test
inc
jno
jns
jl
in
push
jmp
test
jb
dec
inc
dec
inc
cmpb
jmp
cmp
jle
inc
loope
scas
sti
dec
cmpsl
inc
pusha
clc
adc
shll
enter
mov
jne
fwait
js
stc
mov
leave
cs
cmp
and
in
cmp
shr
incb
dec
aam
scas
push
pop
sbb
jae
sbb
das
and
adc
adc
fdivs
pop
jg
data16
pop
dec
add
sbb
sub
aas
bound
pop
jb
inc
out
cli
outsl
popa
mov
jg
loope
and
insb
and
fdivrp
or
mov
add
xchg
int
xchg
out
push
mov
xchg
hlt
addb
call
adc
cmp
pop
outsl
mov
jae
ds
std
addr16
loopne
test
mov
add
xchg
shrl
cmp
lret
fdivrp
lret
mov
inc
in
jns
imul
xor
cmp
dec
fucom
cmp
cs
fdivrp
imul
xchg
mov
int
in
jle
mov
shlb
jne
stos
add
mov
hlt
lock
gs
cwtl
fmuls
cmp
pop
add
push
lds
insl
xchg
fwait
int
adc
leave
lods
xor
dec
std
setp
cmp
mov
push
insl
mov
or
ret
test
sbb
add
mov
xchg
adc
notl
xchg
sub
call
lds
shrb
iret
dec
popl
out
or
mov
mov
cwtl
sub
xor
mov
mov
test
pushf
pop
and
and
ja
sub
dec
push
pop
xchg
in
lret
xchg
xchg
xchg
push
pop
sbb
daa
jg
cmpsb
jmp
fsubl
movsl
enter
incl
aad
pushf
scas
mov
push
adc
rolb
mov
xchg
xchg
das
ss
aam
adc
mov
test
push
pop
xchg
push
arpl
loop
dec
test
sub
mov
sbb
loop
pusha
stc
xchg
imul
mov
fadd
fsts
cmp
dec
cmp
inc
in
cmpsb
add
sbb
call
and
sarl
orl
cmc
fbld
inc
adcw
lods
lods
in
ss
sarl
push
pop
dec
imul
stos
push
add
pop
das
mov
in
jnp
out
sti
xor
sti
fadds
pop
hlt
repz
pop
pop
lahf
adc
mov
ret
stc
adc
mov
mov
call
add
loope
ret
xor
inc
cwtl
shr
mov
movsl
inc
mov
mov
mov
outsb
fiadds
jb
mov
lahf
out
or
icebp
cmpb
inc
cltd
lea
pop
push
and
mov
cmc
mov
stc
push
push
sbb
xchg
shll
ret
adc
push
inc
std
jnp
push
add
imul
js
cld
aaa
xor
inc
movsb
sub
in
jg
lret
pop
int3
sub
ret
outsb
dec
sub
cmp
sub
std
or
decb
sub
mov
push
pushf
lods
scas
in
mov
lock
xor
aaa
sub
in
stos
add
xor
push
call
scas
adc
loopne
in
je
sbbl
pop
add
push
dec
mov
outsl
ret
fsubr
repz
adc
mov
fcomp
lahf
das
repnz
leave
inc
mov
int3
ret
inc
mov
adc
sbb
subb
insb
aas
and
mov
or
pop
cmp
mov
lock
push
shrl
push
or
lahf
sbb
shl
jbe
push
mull
xor
sub
dec
jbe
mov
and
xor
lods
dec
mov
jp
pop
jns
sbb
sbb
sbb
lahf
xchg
adc
stc
adc
in
in
mov
jno
pop
mov
xor
xor
inc
shlb
xchg
andb
leave
xchg
xor
and
adc
inc
mov
ret
aas
lahf
inc
adc
mov
jo
push
jno
mov
mov
mov
sub
imul
push
xor
out
mov
jge
cltd
or
mov
mov
push
jmp
data16
aad
lds
mov
mov
and
aad
jbe
mov
in
stos
jnp
outsb
push
repnz
mov
les
pop
sub
inc
ljmp
mov
adc
sub
or
dec
movsl
mov
xchg
pushf
mov
shll
int
lds
mov
cmp
mov
jg
pop
out
mov
sbb
mov
or
xor
aad
test
pop
repnz
xor
in
loopne
adc
xor
and
sbb
add
rclb
and
mov
xor
mov
testl
nop
pop
push
mov
push
adc
fcompl
xchg
or
cmpsb
xchg
xor
ret
leave
push
imul
mov
loop
enter
sahf
les
ljmp
sbb
inc
xchg
cmp
push
mov
mov
shrl
pop
push
jnp
lock
in
dec
cmpsb
mov
scas
orl
lret
rcrb
pop
sbb
pop
mov
jge
rclb
mov
sub
mov
dec
adc
xorl
add
push
mov
cld
orl
call
pop
call
out
mov
hlt
push
xchg
aaa
ljmp
or
test
jo
mov
jg
xchg
out
fstl
popf
idivb
push
movsl
xchg
in
or
scas
ljmp
jmp
adc
mov
cld
add
pop
test
pop
cmc
ss
push
dec
cmpsl
insb
pushf
sahf
mov
aaa
push
int3
scas
inc
stos
ror
int
rcll
jle
push
xor
test
mov
mov
cld
scas
add
int
mov
xor
push
shrl
jbe
or
mov
pop
mov
movsl
push
or
insl
and
pop
add
ss
jle
in
jns
aaa
mov
subl
cmp
mov
cltd
pushl
mov
cwtl
push
pop
push
dec
cmp
dec
cli
enter
int
jle
jmp
dec
outsb
adc
xchg
mov
xor
aad
in
push
outsb
inc
inc
pop
scas
cli
mov
pushf
xor
push
lods
xor
inc
cld
out
push
sbb
adcb
ljmp
data16
pusha
cmp
clc
xchg
sub
test
jo
mov
fists
iret
mov
lret
leave
movsb
pop
aad
dec
movsl
lods
mov
shll
add
and
dec
cltd
lods
sarb
loopne
cmp
cwtl
insb
fcomi
into
push
dec
push
inc
mov
cmpsl
jo
movsb
adc
stc
jne
ljmp
rorb
incl
dec
pop
xor
rolb
mov
dec
imul
int3
jo
out
pop
pop
es
or
jl
in
insl
jae
push
jbe
cmp
stos
and
xor
xchg
xor
pop
mov
add
out
jmp
xorps
sub
loop
daa
dec
mov
test
outsl
js
addl
sbb
dec
sub
mov
mov
mov
int
or
and
cwtl
and
lock
pop
out
jp
pusha
arpl
jbe
xchg
and
xlat
push
jo
or
aas
mov
cmp
test
imul
lret
stos
xchg
rorl
in
jae
sti
jo
and
push
imul
movsl
lock
jmp
lods
sub
iret
xchg
dec
pop
mov
pop
addr16
shrb
dec
sbb
pop
xor
loop
cmpsl
dec
mov
popl
push
in
iret
rolb
loop
xor
nop
enter
xor
xchg
adc
jae
lahf
xchg
int
adcl
shrb
jg
out
mov
fdivl
lods
imul
sbb
arpl
push
sbbl
lds
pushf
mov
mov
jl
aam
arpl
mov
adc
inc
imul
xor
insb
cs
sahf
jns
clc
enter
loop
xchg
add
cmp
mov
cli
mulb
repz
pop
cmp
test
or
jecxz
dec
or
dec
cmp
fsubrs
add
imul
inc
mov
inc
sub
xor
sub
xor
loope
std
loop
sub
fldl
cmp
add
dec
xchg
repz
or
lock
and
nop
or
dec
jmp
shlb
test
lret
jmp
xchg
mov
push
clc
rcrl
mov
jnp
ret
loopne
data16
sbb
mov
arpl
aaa
lret
cmpl
pop
test
sub
xlat
adc
xchg
dec
test
xchg
je
jbe
adc
add
jge
inc
sbb
mov
out
inc
leave
hlt
pushf
hlt
push
push
or
push
and
push
push
or
scas
hlt
pop
adc
mov
in
loopne
fnstcw
sbb
shll
inc
cs
inc
cmp
push
xor
mov
shrl
je
fs
inc
pop
mov
mov
cmp
cmpsb
fsubl
pop
mov
cmp
js
imul
dec
je
xchg
icebp
jmp
iret
lret
pop
sbb
mov
out
pop
push
in
pop
xchg
mov
cmc
add
and
cmp
cmc
push
rcr
test
out
push
test
pop
loopne
fcoms
popf
jb
ja
in
add
dec
or
xlat
rcll
dec
jecxz
mov
xlat
aad
mov
mov
push
in
xlat
jle
push
sti
add
test
and
pop
pop
inc
inc
push
loopne
aas
or
jae
push
push
scas
iret
imulb
dec
dec
scas
dec
test
dec
sbb
clc
mov
nop
push
lcall
lahf
cwtl
add
or
jb
jmp
sahf
xor
or
xchg
or
jle
mov
xor
sub
pop
mov
push
mov
fwait
jmp
jns
xchg
and
cmp
fsubp
sbb
xchg
mov
enter
testl
jp
repnz
loope
add
mov
loop
sahf
idivb
inc
add
add
pop
adc
mov
pop
addr16
in
push
or
xor
fbstp
imul
pop
mov
adc
test
fbstp
and
js
lret
jno
lea
mov
rcrl
popa
mov
sub
xchg
push
pushf
adc
iret
sub
pop
dec
cwtl
jge
fdivl
xchg
inc
js
sahf
cmpb
cmp
test
push
lahf
out
sbb
xor
mov
imul
mov
push
daa
dec
jbe
mov
add
imul
out
add
call
mov
movsl
add
fnstsw
and
leave
das
test
cli
xchg
out
push
test
out
mov
fcompl
fldenv
push
iret
pushf
outsl
stos
orb
sbb
push
jnp
pop
push
stos
stc
inc
int3
inc
aaa
mov
icebp
lcall
sbb
pusha
jl
sub
mov
lods
and
insl
sub
pop
dec
inc
repnz
out
ljmp
adc
notl
repz
inc
insb
cmc
add
xor
push
xchg
push
nop
mov
movsb
sahf
sub
sub
icebp
outsl
mov
lods
mov
pop
fidivrl
stos
pop
jl
mov
ljmp
mov
xor
sub
imul
testb
jae
mov
ljmp
cltd
dec
mov
adc
test
mov
in
cmpsb
stos
mov
out
enter
fbld
jb
lcall
in
push
fst
out
mov
jmp
test
sahf
test
bnd
mov
aaa
data16
jp
bound
xlat
fisubrs
daa
mov
fsts
fidivs
daa
and
hlt
xor
stc
mov
pop
call
fisubrs
cmpsb
js
jb
jnp
icebp
jp
ljmp
sarb
lea
add
rcl
inc
dec
xlat
cmpsl
cli
dec
mov
jmp
inc
push
or
shlb
orb
cli
arpl
bound
mov
gs
mov
sub
jae
pop
cwtl
add
cwtl
xchg
add
xchg
dec
xlat
imul
lahf
sub
jmp
mov
and
push
add
repz
pop
add
or
imul
mov
xor
divb
push
icebp
dec
adc
or
mov
adc
mov
jb
je
push
jne
push
push
mov
lret
jnp
adc
mov
out
stos
cwtl
or
mov
outsb
cld
fs
lret
adc
and
jg
loope
sub
sbb
xchg
dec
and
imul
adc
or
dec
cmp
xorl
out
data16
addl
mov
xor
xor
mov
jne
lret
movsb
sbb
xor
pop
add
jb
dec
stos
mov
cmp
mov
fs
mov
mov
sbb
leave
pusha
pop
jmp
popf
gs
leave
insl
movl
ja
lret
xchg
adc
push
scas
sub
xchg
mov
add
sbb
inc
jp
fbld
daa
imul
sub
push
pop
aas
and
cltd
clc
psrld
mov
mov
pop
rcrb
xorb
xrelease
dec
cmovge
nop
lret
movsb
sbb
sar
dec
mov
adc
push
out
jno
sub
cli
movq
lods
inc
push
mov
sbb
jnp
jg
mov
xchg
inc
jne
dec
lret
push
into
sbb
aad
scas
fstpt
stc
dec
pop
in
ds
xor
jmp
jbe
or
push
stc
lock
mov
ja
movsl
rcll
adc
movsl
dec
lock
jne
sub
push
cmp
pop
dec
lret
push
push
and
jne
or
push
jno
add
addr16
jne
jae
pop
pop
scas
ret
stc
insl
mov
call
stos
pop
push
sbb
mov
shll
pop
mov
rcrb
inc
inc
fisubrs
xlat
repnz
sub
cwtl
ret
pop
and
sub
loope
lret
loopne
xchg
sbb
mov
cmp
pop
movsl
rcr
aad
pop
fmuls
or
test
inc
leave
cmpsb
push
dec
xchg
pop
ja
lahf
inc
cmpsl
cmc
push
es
pushf
or
int
fldl
push
jmp
fnstsw
outsb
fisubrs
mov
mov
dec
jo
mov
xchg
stc
adc
xchg
stos
int
adc
or
mov
mov
fdivrs
addb
adc
or
pop
mov
ret
xchg
mov
testl
adc
insb
xor
test
hlt
bswap
sarb
push
xchg
adc
iret
bnd
nop
shrb
mov
sbb
pop
iret
inc
pusha
sbb
add
pop
xchg
xor
dec
lods
sbb
pop
and
jo
xchg
or
or
and
and
subb
or
iret
int
mov
jbe
popa
in
in
pop
push
scas
fsubrl
sbb
sbb
ret
outsl
jbe
and
test
out
dec
andb
jecxz
es
fists
ljmp
inc
or
test
cli
jecxz
cltd
sahf
jl
jae
jo
cwtl
lds
jmp
test
shll
mov
cmp
sub
lods
mov
imul
pushl
mov
loop
sbb
xchg
dec
gs
xchg
negb
repnz
out
repz
mov
mov
pushf
xor
lcall
call
pop
sub
icebp
jns
ljmp
mov
inc
das
je
lcall
fmul
jb
out
sbb
filds
shl
mov
andb
hlt
sub
orl
pop
js
hlt
imul
clc
jne
ss
adc
in
sub
inc
ss
inc
jne
inc
sbb
ret
xchg
xlat
bound
and
sbb
or
lock
mov
outsb
fildll
mov
fwait
dec
push
sub
xchg
add
cld
out
cmp
aad
stos
push
push
nop
fimull
jp
ja
mov
add
xchg
adc
shl
mov
dec
lret
mov
add
cmpsl
subl
fwait
jns
push
and
cmp
xor
jo
xor
inc
cmpsb
scas
dec
mov
push
xor
clc
adc
xor
xchg
sub
mov
xchg
sub
cmpsb
xchg
lcall
clc
mov
xchg
out
cli
jle
push
testb
add
mov
mov
testb
jge
enter
inc
loope
add
mov
and
insb
or
add
loope
sub
pop
in
insl
cwtl
aaa
sti
imul
fsubl
gs
xor
xor
fimuls
xchg
and
dec
test
and
mov
pop
js
mov
test
push
cmpsb
jbe
xor
pop
arpl
lods
inc
jo
cmc
and
mov
jl
sbb
adc
lcall
pop
sarl
and
jmp
pop
aad
icebp
sub
sub
mov
ret
je
add
mov
loope
hlt
ret
imul
loope
jg
or
mov
rorb
mov
or
and
scas
shr
push
sub
in
mov
jne
sub
and
scas
and
mov
out
ror
mov
dec
repnz
mov
lahf
cmp
sub
xor
xchg
gs
ds
addr16
mov
hlt
push
outsb
shlb
in
lock
repnz
insb
mov
pushf
popf
jge
add
pusha
in
mov
push
add
xor
mov
cld
dec
fsubrl
test
pop
ret
cmc
jg
cmp
add
sar
fs
out
std
cmp
lcall
mov
aaa
mov
push
imul
scas
add
push
xor
in
std
jecxz
lds
and
sbb
imul
pop
cltd
ss
ja
imul
jmp
stos
xchg
scas
jecxz
pop
addl
add
clc
jecxz
ret
lods
movsl
dec
movl
dec
mov
pop
mov
add
mov
cltd
push
sahf
movsb
inc
jns
icebp
fiadds
stos
sub
add
sti
je
call
dec
mov
inc
arpl
adc
data16
jo
iret
rclb
adc
sbb
cmp
loop
xchg
cltd
arpl
ds
test
lock
jo
popf
inc
sub
push
lods
xchg
jbe
arpl
rcrl
fidivl
add
leave
stc
sbb
daa
and
subl
fwait
inc
pop
mov
stos
xchg
fstl
lds
scas
jo
stos
bound
fs
mov
pusha
xor
out
sbb
outsl
mov
je
ret
fists
scas
inc
cld
xor
lret
xor
xchg
dec
aad
push
pop
adc
sbb
lcall
and
mov
inc
outsl
xchg
movsl
ljmp
scas
sub
lds
push
sub
xchg
lock
daa
fdivrp
int
add
loope
or
mov
repz
and
jmp
or
ss
sbb
push
sti
aaa
scas
jb
test
adc
adc
int3
js
adc
xchg
ret
push
test
repz
aas
sub
add
sub
fcmove
icebp
or
nop
mov
test
in
sbb
xor
jge
ficoml
je
cmp
aad
jecxz
or
mov
jae
sub
pop
iret
mov
inc
scas
subl
xchg
adc
movsl
pop
xor
cmp
jno,pt
je
loope
jmp
jno
enter
add
call
jo
or
mov
adc
inc
mov
int3
stos
fs
cli
into
lock
inc
sub
xor
mov
lods
fdivs
cmp
xchg
cmpsb
add
xchg
in
push
and
mov
aam
aad
mov
hlt
add
in
inc
sub
bound
mov
loope
sub
in
clc
push
push
in
shl
push
adc
clc
leave
rcll
pop
hlt
add
lock
ja
cwtl
cltd
loop
mov
mov
clc
push
cmpl
test
rcll
out
inc
clc
movsl
insb
inc
adc
rcl
mov
cmp
mov
imul
and
cmpb
inc
outsb
shlb
shl
mov
dec
pop
adc
mull
push
sbb
aam
mov
fildll
leave
and
clc
loopne
es
pop
inc
lea
fldl
adc
lahf
movsl
out
lcall
sbb
ss
mov
sub
repz
jo
lret
inc
jno
pop
sti
dec
fstps
mov
mov
and
or
lock
adc
cltd
mov
pop
cltd
dec
bound
testl
sbb
ljmp
pop
arpl
js
inc
or
mov
sbb
nop
xchg
xor
cmp
push
psraw
mov
mov
xor
into
xchg
and
lahf
xor
out
push
jle
add
movsb
cmpsb
lret
sbb
or
inc
xchg
aaa
bnd
add
xor
negb
int
notb
shl
insb
push
cmp
add
push
jnp
lds
rcrb
mov
or
adc
jnp
adc
pop
sarb
jecxz
pop
call
imul
in
clc
adc
xorb
dec
imul
repnz
sbb
fcompl
pusha
mov
adc
sbb
jno
out
aad
push
sub
xchg
xor
mov
mov
push
mov
push
roll
pusha
push
pop
adcl
push
lods
into
xor
sahf
adc
cmp
pop
mov
pushl
xor
ret
jmp
sbb
imul
add
dec
loop
sbb
lock
fs
arpl
jne
insl
push
and
inc
xor
inc
int
dec
mov
push
add
pop
mov
pop
add
insb
mov
imul
imul
pop
movsb
jle
dec
dec
or
mov
xor
pop
cmp
lcall
mov
push
cmovle
aaa
ss
inc
add
and
inc
leave
jp
test
or
inc
dec
push
jbe
aas
xchg
mov
loop
mov
push
in
movsb
pop
mov
cwtl
jecxz
cs
sbb
ret
push
int
cmp
mov
jp
es
insl
xor
int3
roll
push
mov
or
dec
inc
adc
daa
sbb
loop
xchg
dec
ret
inc
push
xor
pop
pop
je
and
out
mov
fcomp
arpl
mov
push
fistpll
movsb
cwtl
sub
or
outsl
ret
inc
mov
addr16
inc
and
out
cmp
add
dec
pop
sub
push
cmpsl
sub
inc
fisttpl
jecxz
and
scas
xor
jne
and
dec
push
into
vpunpcklbw
sahf
sbb
dec
mov
jb
add
stc
loopne
lods
mov
jbe
lea
fistpl
and
in
and
cwtl
push
mov
lods
mov
sbb
jle
dec
hlt
adc
pop
adc
sbb
and
bound
movb
mov
xchg
mov
mov
lret
mov
xchg
sub
dec
inc
fdivp
xchg
movsl
push
outsb
cmp
or
mov
addr16
lea
adc
mov
jp
mov
lea
add
xchg
movsl
data16
aaa
adc
js
mov
data16
clc
jns
into
cs
leave
mov
sti
mov
out
and
shll
pop
testl
sub
xchg
ja
iret
insb
shrl
push
push
out
into
cld
das
and
and
dec
popa
push
test
out
dec
add
fimuls
cwtl
dec
push
mov
mov
fcompl
jne
xor
or
daa
or
out
xor
outsl
or
outsl
cwtl
sub
imul
dec
das
movsl
ljmp
fldenv
push
aam
add
sbb
mov
test
lcall
pop
mov
jecxz
fnstenv
xchg
jo
sub
jp
adc
insl
std
cmc
mov
pop
icebp
push
sub
xor
and
push
pop
adc
mov
jp
nop
outsb
mov
and
pop
sbb
xor
rcrb
mov
xchg
push
lret
outsl
out
mov
ja
scas
inc
xchg
xchg
or
jmp
call
mov
adc
and
pushf
dec
fsub
sbb
xor
jge
adcl
pushf
repnz
adc
add
sub
call
cmpsl
mov
cmpsb
pop
cmpsl
jns
mov
xor
sub
mov
pop
add
out
jns
ss
popf
sbb
jge
add
mov
movsl
xor
in
filds
mov
movsl
adc
movsl
stos
rcll
ret
inc
shll
mov
mov
aam
lcall
fwait
in
and
cmp
dec
daa
insb
cmp
outsb
push
pop
es
mov
push
pop
jecxz
mov
mov
or
sbb
cmp
sub
stos
fsubl
nop
or
push
mov
insl
arpl
hlt
stos
shlb
mov
mov
sbb
mov
into
fwait
out
xor
xor
adc
daa
ja
xor
addr16
shll
xorl
push
inc
xchg
add
in
mov
out
sub
sbb
dec
jp
mov
or
mov
mov
sarb
dec
nop
jbe
jb
jbe
push
in
sbb
jno
inc
push
push
push
mov
and
in
mov
loope
stos
rcl
jmp
out
divl
cmpsb
sub
jg
out
mov
mov
scas
mov
movsl
mov
mov
dec
mov
lret
icebp
ret
fsubrs
pop
jb
arpl
or
and
sbb
push
mov
xchg
xchg
pop
arpl
xchg
mov
xor
adc
pop
mov
mov
jne
mov
fcoms
outsl
cmp
add
cs
aaa
or
jmp
add
sahf
add
movsl
insl
and
sahf
dec
out
aaa
popa
clc
jecxz
aam
inc
xlat
mov
lock
mov
mov
movsl
push
push
hlt
mov
dec
dec
adc
fists
mov
inc
in
jne
imul
setle
mov
shrl
xchg
das
sub
jbe
sub
sbb
imul
xor
ret
and
add
pop
inc
or
or
fdivr
cmp
dec
adc
add
jbe
cmp
and
repz
sbb
lret
lds
mov
fistpl
inc
push
push
push
xchg
xor
scas
fs
icebp
cmpsb
adc
adc
lea
hlt
cwtl
push
imul
add
and
imul
cltd
push
dec
dec
xchg
in
push
pop
jmp
ret
add
dec
cwtl
mov
cmp
xlat
int3
xchg
scas
mov
fldl
xchg
jne
sub
in
lret
sbb
cmp
fwait
sub
mov
push
add
leave
addb
es
adcb
mov
daa
mov
ss
dec
mov
int
fisubs
mov
mov
out
cld
and
push
fwait
inc
xor
xchg
sbb
insb
fsts
into
dec
push
outsb
enterw
movsb
push
push
pop
fistps
mov
ss
xchg
repz
mov
push
xchg
je
jle
repz
pushf
repz
popa
clc
lods
out
add
pop
push
cltd
pushf
dec
adc
movsl
push
sub
fcomip
stos
add
or
dec
movsl
add
into
sub
fnstsw
shll
fiaddl
pop
pop
fnclex
sti
cmp
into
stos
adc
loopne
mov
mov
movl
lock
popf
mov
xor
inc
xor
hlt
fcmovbe
sbb
sti
sbb
out
lock
insl
inc
hlt
dec
arpl
mov
ficoml
xchg
scas
pop
mov
mov
int
inc
cmp
xlat
mov
mov
cmp
clc
out
mov
js
stos
decb
pop
mov
add
loopne
aas
icebp
mov
addl
cs
dec
inc
add
sbb
jo
clc
insl
pop
cmp
dec
cmp
iret
std
loop
mulb
sub
into
add
jo
add
xchg
bound
negl
push
stos
add
sub
sub
enter
scas
or
daa
arpl
mov
mov
dec
cmp
fisttps
push
inc
hlt
mov
fwait
sub
jnp
push
jae
jno
lret
lea
sbb
ja
and
idiv
and
jp
popl
xchg
out
iret
ss
xchg
cmc
mov
cmc
repnz
fdiv
add
cld
dec
daa
aaa
in
cmp
push
sub
xor
call
mov
xorb
incb
jmp
push
or
mov
pop
sbb
in
adc
outsl
fcom
fwait
sbb
add
mov
les
fidivs
fwait
mov
lock
test
mov
jmp
sub
jecxz
das
sbb
push
sahf
neg
loope
mov
pop
ja
jo
sbb
mov
dec
mov
imul
xor
xor
pop
lock
cltd
push
push
xor
jae
push
leave
add
out
pop
add
xchg
fs
stc
repnz
mov
dec
std
addb
cli
dec
mov
cmp
jle
insb
je
sub
sahf
push
push
inc
cmp
int
testl
shl
fs
adc
inc
pop
xor
dec
jo
lret
xor
ljmp
idiv
sarb
push
cmp
mov
cli
dec
cs
cltd
xchg
jmp
push
pop
mov
or
lods
fisubs
pop
or
test
cmp
jb
pop
ljmp
mov
movsl
pusha
adc
rcr
repnz
jecxz
pop
mov
sbb
push
les
int3
loope
mov
mov
add
add
sbb
imul
dec
push
push
outsl
fwait
mov
roll
mov
mov
inc
popf
cmc
stos
mov
popf
imull
sbb
xorl
in
fdivl
call
adc
mov
imul
inc
adc
xor
test
fdivs
mov
push
adc
pop
leave
pusha
stos
rcll
das
jle
enterw
cmp
lds
mov
in
aaa
outsl
dec
dec
pop
dec
out
in
fmuls
jae
pop
dec
sahf
ljmp
test
sub
mov
outsl
jae
imul
cwtl
popf
vandpd
test
jns
bound
stos
sbb
in
inc
loopne
and
jp
mov
leave
mov
mov
xor
in
scas
test
js
shlb
scas
sub
outsl
sbbb
jnp
in
repnz
push
add
outsl
movsb
fstpt
xchg
cltd
mov
cltd
cmpsl
and
adc
xor
insl
mov
popf
mulb
clc
mov
and
jecxz
lahf
jbe
ds
lods
push
sub
xchg
in
leave
xlat
xchg
pop
mov
and
ljmp
lock
adc
xlat
adc
xchg
cs
fmull
inc
out
arpl
mov
fmulp
jg
std
or
mov
xor
fsts
test
stos
jl
lahf
sbb
push
jno
dec
cmp
and
rorb
adc
dec
imul
in
pop
iret
pop
mov
dec
arpl
ret
and
in
lcall
ret
cmp
mov
cltd
fdiv
popa
jl
enter
pop
xchg
mov
stc
sbb
leave
in
adc
or
mov
mov
sbb
mov
dec
sub
mov
sbb
add
pop
mov
aas
inc
jbe
loope
push
scas
cmp
das
dec
dec
sbb
mov
addr16
inc
inc
insb
pop
pop
arpl
add
pop
imul
jg
or
in
roll
or
add
mov
jge
ficomps
pop
sub
test
out
call
xchg
push
inc
daa
cmp
mov
outsb
test
xchg
popa
test
shlb
mov
mov
mov
push
dec
leave
pop
pusha
es
xchg
adc
xor
loopne
mov
std
bound
mov
mov
inc
jle
scas
jb
stos
xor
xchg
adc
test
push
into
iret
mov
mov
dec
or
sub
inc
jo
xchg
mov
nop
pop
dec
cmp
push
fsub
pop
cld
push
scas
sbb
mov
xchg
mov
icebp
jmp
push
xor
repnz
or
lods
xorl
movd
mov
and
jns
sub
in
arpl
arpl
pushf
mov
xlat
add
mov
pushf
xchg
add
inc
out
ja
or
into
ljmp
mov
mov
fstpl
dec
mov
rcl
xchg
loope
mov
lcall
testb
std
adc
or
scas
pop
add
xor
jg
dec
mov
push
data16
and
xor
movsl
and
movsb
sub
js
sahf
push
and
mov
lods
loopne
cld
mov
andb
lock
icebp
mov
xorb
cmp
pop
xor
cwtl
enter
pop
push
pop
test
fistpll
sub
aaa
lcall
jae
popa
and
scas
ret
xchg
cwtl
or
add
sub
aam
adcb
out
data16
test
add
sbb
pop
mov
into
fists
popf
test
inc
movsl
pushf
jno
xor
stos
je
mov
mov
inc
mov
pop
or
mov
mov
or
mov
mov
aas
call
xchg
movl
and
push
fcoms
jmp
shrb
cmc
jmp
sub
xchg
jne
adc
nop
test
insb
stos
jp
cmp
dec
push
repnz
mov
sub
cs
xor
sbb
xor
pop
xchg
inc
sub
dec
cld
ja
fmul
in
add
jmp
lods
loop
out
sarl
mov
pop
cmp
push
jp
xchg
rcrb
xor
push
pop
mov
push
xor
ss
jecxz
std
cmp
dec
ds
sbb
push
add
cmp
inc
fistl
jns
lret
pop
add
mov
adc
and
sub
das
mov
and
bound
cmp
test
sbbl
test
inc
ret
mov
inc
cmc
adc
pop
sbb
mov
mov
pusha
pop
mov
mov
std
fidivl
mov
pop
push
rolb
test
sbb
sub
imul
push
jecxz
test
fisubs
push
xor
sbb
clc
dec
push
adc
inc
cmp
pop
in
and
out
pushf
add
test
stc
xchg
loope
fildl
jns
in
mov
cmp
je
es
lret
mov
inc
xor
daa
dec
xchg
mov
shl
mov
or
movsl
pop
pushf
test
bound
cmpsb
mov
leave
xchg
aaa
fsts
ret
sub
cmp
orl
mov
iret
ss
push
fnsave
push
cwtl
mov
lods
pop
pop
in
dec
iret
sub
lds
xor
sub
push
pop
and
pop
pop
mov
jge
insb
cs
or
mov
push
dec
add
cmp
add
cmp
clc
lods
jp
int
ss
cmc
inc
insl
cld
pop
ret
movsb
lea
rolb
negb
xlat
adc
or
repnz
js
cwtl
sub
es
cmp
mov
pop
push
mov
mov
shlb
pop
mov
repz
scas
ss
sbb
add
pop
inc
vmovaps
xor
jno
xchg
lcall
mov
sti
out
inc
gs
or
cmp
ret
testb
jns
fsubrl
cmp
jnp
in
lea
xchg
ret
pop
loope
testb
repz
xchg
test
mov
sub
arpl
and
aas
ret
cmp
cmp
pop
orl
add
jecxz
fstps
lret
inc
xor
push
sub
cmpl
or
cli
ret
sub
packssdw
mov
insl
inc
stos
mov
test
pop
push
lahf
pop
sub
and
adc
jmp
dec
xchg
cltd
add
int
push
shrl
into
rorl
jecxz
leave
hlt
sub
mov
pop
or
jae
dec
sub
sub
jge
fs
sub
mov
or
pop
pushf
mov
sub
push
nop
xchg
push
sbb
lods
stos
insb
adc
or
in
jmp
xchg
sbb
shl
hlt
mov
dec
fdivl
test
jecxz
movsb
push
hlt
xchg
pop
stc
ss
pop
das
jecxz
outsl
mov
ret
mov
cmpsl
cmc
inc
orl
loope
mov
sbb
cmpsl
add
push
dec
push
mov
inc
mov
push
ss
aaa
rcrb
xlat
mov
push
xor
flds
jl
int
pushf
sub
aad
cs
cmpsl
xchg
xchg
pop
call
push
and
xor
pop
lcall
adc
add
and
mov
mov
dec
mov
lret
cmp
test
mov
sub
adc
mov
mov
cmp
bound
mov
push
adc
movsb
js
add
cmp
sub
lods
in
insb
repnz
sub
lods
sldt
shll
in
pusha
ret
jge
add
shl
xchg
icebp
inc
inc
int
push
scas
jo
or
or
aas
lods
inc
jle
fxch
and
add
mov
leave
push
xchg
iret
sub
push
pop
fwait
lea
jge
adc
decb
leave
fiaddl
adc
outsb
imul
stc
daa
add
repz
jmp
into
outsl
sbb
lods
in
jl
push
or
loop
repnz
or
lret
dec
fs
incb
sub
jne
xchg
adc
inc
scas
test
and
mov
xor
pop
loopne
xor
push
cmp
add
xchg
pop
js
lds
jg
pop
fisubs
fsubl
aas
and
fwait
imul
mov
shll
aaa
hlt
stos
lcall
insb
add
test
jmp
addr16
push
adc
in
mov
push
mov
aam
and
pop
pushf
test
into
insb
mov
push
movsb
dec
ljmp
xor
push
mov
sub
nop
mov
int
lret
test
in
add
notl
mov
or
mov
xlat
sti
fisttpll
sti
sub
bound
pusha
stos
data16
fldl
adc
lds
mov
mov
mov
gs
sti
or
fstpl
jge
lods
icebp
ss
ss
dec
or
mov
dec
rorl
push
bound
ficoml
mov
cmp
pop
aas
shlb
insb
popf
out
jp
shlb
testb
scas
into
jp
lods
mov
pop
xchg
sub
mov
pop
hlt
add
sbb
mov
add
jg
fstpt
test
mov
sbb
arpl
stc
lret
sbb
sbb
cmpsl
lahf
cmp
push
sub
clc
cs
pop
sub
rol
sub
lahf
mov
stc
daa
popf
pop
mov
or
jbe
rolb
push
push
jne
sbb
cwtl
loope
fisubs
xchg
fcompl
sti
aaa
xchg
sub
or
push
inc
in
cmp
insb
xchg
daa
mov
movsl
xor
adc
and
icebp
jo
jbe
inc
push
sbb
cwtl
ret
sti
jnp
sbb
xchg
jne
or
int
jge
jl
leave
push
movsb
xchg
fs
sbb
aas
movsl
nop
scas
mov
clc
cltd
pop
sbb
enter
push
sub
sbb
std
test
pushf
push
sub
hlt
sahf
or
lds
add
sbb
out
lcall
inc
mov
ds
pop
lods
scas
pop
bound
lret
sbb
stc
jg
mov
movsl
es
les
push
scas
sar
cwtl
mov
sub
sar
or
cmp
insb
out
sub
fidivl
add
in
jg,pt
mov
adc
pushf
or
pushaw
es
ss
gs
mov
and
insb
fidivrs
popa
ret
inc
sub
aam
call
push
sbb
push
andl
mov
stc
push
adc
jle
mov
les
push
shr
pusha
in
fistps
mov
in
lds
lea
iret
lds
bound
push
lcall
cwtl
dec
lock
xchg
subb
mov
mov
sub
pusha
enter
push
sub
dec
xchg
push
xor
sbb
jecxz
xor
fcoml
sub
sub
push
adc
addl
loope
cmpb
shll
pop
fcomps
xchg
xlat
pop
or
mov
jecxz
push
wrmsr
mov
sbb
and
xchg
es
xchg
jmp
lds
inc
push
sub
fcmovnbe
xchg
je
xchg
pop
sbb
ficoml
xchg
js
lea
loope
cmp
xchg
imulb
rcrb
rcll
fwait
jg
lods
mov
add
movsb
shll
cmp
xorb
xor
xchg
hlt
mov
jne
mov
daa
imul
mov
std
repz
aaa
sbb
lret
mov
push
lcall
push
adc
push
jo
imul
into
lret
dec
hlt
in
data16
mov
sbb
test
lods
and
inc
mov
sti
jno
jecxz
push
stos
inc
sbb
cmp
cmp
push
or
lods
adc
jae
nop
xchg
pushf
rcrl
nop
es
iret
jle
mov
movsb
mov
adc
xor
inc
jg
dec
mov
sti
dec
in
lea
je
mul
pushf
or
push
fwait
loope,pt
sbb
orb
lock
pop
lret
scas
cld
loope
sbb
insl
movsl
cmp
mov
and
clc
lds
dec
sahf
inc
mov
pushf
popa
pop
adc
sub
or
into
cld
cmpsb
sarb
repz
xor
sbb
dec
jae
dec
in
lock
push
jns
repnz
nop
dec
jecxz
inc
imul
test
inc
icebp
push
fmuls
rorl
out
ljmp
movsb
mov
fsubrs
ret
mov
cmp
jb
es
sti
lcall
mov
dec
adc
cltd
arpl
jo
int
lret
cld
rcrl
lods
sbb
mov
popa
jmp
gs
imul
push
lcall
lods
jge
xchg
pusha
ret
adc
inc
mov
pop
sbb
push
out
pop
gs
les
lahf
mov
or
sbbl
aas
sti
push
sub
ja
orb
fnstcw
fsubl
fistpll
push
xlat
mov
jnp
xchg
std
add
insl
mov
lock
jns
cmp
fs
mov
bound
clc
inc
aas
adc
cmp
push
outsb
stc
sbb
pop
shll
xor
adc
fcmove
inc
hlt
mov
and
dec
inc
insb
sub
pop
or
jg
repnz
xor
rol
out
jge
add
cmpsl
xchg
ds
inc
push
lds
das
test
sahf
mov
pop
dec
lods
push
adc
sbb
fisttpl
mov
push
xor
lock
pushf
push
subl
pop
and
add
adc
insb
icebp
push
stos
dec
push
xor
pop
notl
jns
das
loope
adc
sbb
stc
pop
lods
sbb
shlb
dec
pushf
cld
ljmp
mov
js
inc
xor
cmp
push
mov
jo
push
test
xor
into
mov
stos
mov
roll
pop
jae
cmc
insl
mov
or
in
fbstp
adc
and
or
mov
push
fcmovu
push
xor
mov
xchg
int3
jne
pop
mov
mov
add
insb
xchg
mov
in
sbb
outsl
arpl
push
loope
cmp
jns
leave
int3
jns
xor
insl
push
lcall
call
aam
sub
pushf
sti
push
cwtl
push
mov
sub
outsl
sub
aaa
scas
call
lea
int3
jp
int
sub
mov
push
cmp
lock
pop
stos
mov
jnp
mov
pushf
lret
movsb
leave
mov
push
addr16
and
enter
fnstsw
shll
push
aad
out
pop
insb
das
or
scas
loope
cmp
mov
push
adc
mulb
mov
fs
in
xlat
cwtl
call
sbb
xor
mov
iret
shlb
loop
gs
inc
sub
xchg
cld
sbb
mov
or
sti
push
and
inc
or
enter
loopne
addr16
sub
icebp
mov
fdivrl
push
push
call
imul
xchg
inc
jp
stos
xlat
cwtl
xor
mov
or
shlb
cmp
lock
addr16
mov
or
negl
jae
add
jb
out
repz
and
xor
rolb
fmull
jb
ds
pop
js
xor
ffree
push
call
aaa
repz
test
jg
insb
push
lahf
mov
sbb
mov
mov
jl
rcrb
cs
ret
es
push
pop
push
lahf
je
mov
arpl
and
inc
xchg
jg
pushf
scas
xchg
cld
stc
and
add
outsb
pop
jno
imul
in
into
lock
dec
lcall
movsl
ja
xchg
out
jecxz
in
shlb
lods
mov
cltd
popa
jmp
aam
pop
pop
lods
adc
dec
insb
movsb
xlat
iret
push
adc
out
gs
lods
lods
stos
sbb
cwtl
push
fs
xchg
les
aam
divb
mov
subl
shll
or
in
add
cmpsl
push
mov
pusha
and
mov
inc
daa
rep
aad
jnp
or
in
mov
pop
inc
lods
mov
repz
scas
inc
dec
jo
test
xor
icebp
push
inc
subb
xor
mov
in
adc
stos
mov
pushf
adc
cli
fisttpl
gs
aas
jl
add
push
push
je
test
jae
push
sbb
pop
add
das
or
fisttpll
pop
adc
inc
js
pushf
mov
aaa
test
add
pop
push
rcll
cld
jmp
and
sub
or
mov
add
loopne
int3
sub
xchg
and
mov
sti
lret
mov
jmp
jmp
in
and
in
xor
sub
jg
push
push
cmp
add
hlt
addl
jl
movzbl
and
out
dec
mov
push
cli
inc
adc
popf
and
jns
add
or
cmpsl
xchg
xchg
in
and
imul
lods
fiaddl
in
xor
pop
push
pusha
add
shl
jp
mov
inc
xchg
outsb
pop
ret
push
ds
fsubl
pop
ret
out
orb
cmpsb
xor
pop
scas
push
jge
pop
popf
sbb
outsb
jbe
int3
mov
fidivrl
popa
rcrl
aas
dec
jbe
ds
clc
fninit
jg
aaa
out
fdivs
cmp
push
outsb
movsb
cli
in
xchg
cmp
cld
dec
cld
adc
dec
rcl
das
in
popf
xacquire
sub
movsl
lret
mov
iret
loope
mov
adc
loope
js
or
push
js
pop
jne
insl
adc
repz
mov
in
outsb
loopne
je
cmp
movq
jge
mov
out
stos
pusha
or
aas
lock
lea
movsb
add
lret
insb
stc
jno
sbb
add
ficoms
lods
cmp
mov
push
jae
jae
aas
jb
jbe
inc
push
mov
cmp
sbb
xchg
jae
fsubrl
popa
stc
les
pusha
push
xchg
idivb
sti
in
pop
pop
xchg
stc
inc
lcall
aaa
outsb
ja
mov
push
push
sbb
xchg
cmp
or
push
mov
out
mov
into
xchg
repz
dec
movsl
xorb
cmpsl
pop
outsb
roll
movsb
imul
inc
fcmovnu
std
movsb
add
xor
push
mov
lcall
out
pop
jno
sbb
or
sub
outsb
jae
es
inc
mov
and
and
fdivp
out
xchg
xchg
out
sbb
fmuls
js
push
push
cmpsb
int
sub
addr16
mov
lahf
cld
mov
mov
push
sub
ss
cmp
fidivrs
aad
dec
dec
movsl
aas
fs
mov
imul
sbb
push
movsb
and
lret
sub
jne
mov
imul
cwtd
jg
daa
iret
fstpt
dec
push
dec
sbb
xchg
rolb
sarb
loope
xchg
mov
sub
out
jae
bound
xchg
dec
pop
fidivs
ficomps
and
xchg
movsb
js
fdivr
call
jmp
dec
xchg
sbb
and
xor
arpl
mov
ss
loopne
and
into
xor
and
and
incl
sbb
mov
imul
mov
test
dec
bound
sub
scas
dec
nop
pushf
push
or
cmp
bound
in
data16
fstpl
xchg
mov
scas
ljmp
xor
hlt
adc
pop
and
or
insb
cmpsl
or
adc
xchg
test
and
push
and
insl
iret
xchg
xchg
xchg
and
add
fists
imul
rorb
ja
hlt
inc
add
pop
mov
adc
nop
pusha
ret
repnz
data16
popf
mov
add
jp
sub
push
push
inc
rolb
fwait
adc
imul
in
pop
jne
or
loop
addr16
shr
daa
cmpsb
fdecstp
in
ljmp
out
aaa
mov
jne
scas
js
sub
lods
cmp
pop
pop
or
add
loope
inc
push
cwtl
push
iret
push
stos
mov
push
rcr
cltd
cmp
inc
sub
push
push
cmp
mov
cltd
out
ja
or
lea
sbb
adc
and
gs
test
je
shlb
std
pushf
in
popf
cltd
adc
movsb
data16
mov
popf
jp
push
pop
in
push
mov
push
cld
sarl
loope
and
sub
lds
aas
cmp
lcall
stos
push
pop
or
xor
rcll
rcl
adc
push
cmpsb
popf
sub
rcl
xchg
cmc
jnp
xlat
xchg
mov
add
mov
rcr
xor
stc
sbb
icebp
sbb
repnz
push
addr16
in
or
and
jb
test
and
int
fwait
mov
testl
repz
in
xor
scas
std
xchg
dec
sahf
xor
pushf
or
add
shl
cmp
mov
mov
movsb
push
jno
roll
and
or
arpl
inc
bound
data16
mov
mov
out
call
out
loop
cli
jbe
sbb
fidivs
mov
call
in
mov
hlt
add
push
shlb
sbb
sub
inc
mov
movsb
or
push
loop
icebp
adc
xchg
les
into
sbb
push
cwtl
pop
xchg
fldt
es
lcall
addr16
stos
adc
pop
jo
add
lahf
push
aad
mov
jns
subb
das
or
jnp
aad
js
add
int
fmull
xor
xor
jecxz
in
daa
insl
pop
and
pop
in
jns
jno
sbb
das
push
aad
shl
sbb
pop
enter
mov
lods
sub
repz
xchg
std
lock
jb
sahf
repz
out
ficomps
ds
ffree
stc
out
scas
data16
jo
cwtl
pop
xchg
ds
shll
fwait
sbb
sarl
rclb
push
pop
repnz
scas
cmp
mov
sar
push
sub
cmpsl
sahf
pop
cmp
out
fs
in
popf
sub
in
fcomip
xchg
jb
inc
lcall
int3
dec
loopne
in
lods
jnp
fnstenv
mov
xor
cwtl
xchg
xorb
push
pop
mov
adc
or
cmp
jne
xor
mov
jnp
lds
sbb
shll
fisubl
lea
lock
xor
pusha
jno
les
arpl
je,pn
mov
jae
out
jo
out
loop
testb
das
fldt
stc
idivb
cmp
cs
cmp
das
adc
lcall
ja
repnz
jp
cli
mov
sub
lcall
mov
sbb
or
rorb
ffreep
mov
sub
lahf
ret
ljmp
cli
ljmp
fbld
sbb
sbb
push
sub
in
cmp
loope
es
sahf
inc
inc
cmc
lcall
enter
mov
jge
dec
jne
subb
daa
mov
popa
dec
out
cmp
jmp
popf
sub
mov
movsl
stos
rcrb
sbb
jp
mov
es
popa
push
movsb
lods
loopne
add
mov
pushl
out
pusha
in
pop
fwait
push
lods
int
cli
pop
imul
dec
jne
sub
fnsave
in
adc
mov
lret
out
jo
jmp
and
aas
call
push
and
pushf
pushf
mov
jo
pop
dec
sbb
jno
xor
mov
sbb
cli
jns
sub
dec
pushf
mov
test
add
je
lea
fists
loope
sbb
lahf
fstps
imul
sarb
pop
addr16
aam
dec
jne
dec
fistpl
orl
sub
xchg
cltd
inc
xor
sbb
mov
leave
sbb
dec
pop
push
adc
movl
cmc
std
jge
fisttps
inc
push
or
and
push
aas
je
push
jge
cmp
mov
push
sbb
and
pusha
mov
lahf
mov
cmpsb
xor
call
add
pcmpgtb
outsl
in
fsubl
mov
and
dec
mov
dec
push
ret
xor
sarb
imul
lcall
mov
rol
xchg
std
iret
push
les
inc
and
push
sti
or
add
push
outsl
imul
gs
jmp
cmp
sbb
cmpsl
or
inc
sub
les
jle
pop
mov
pop
add
cli
pop
cmp
repz
std
dec
xor
hlt
std
dec
cmp
aad
add
jecxz
mov
xchg
mov
call
negb
enter
push
in
jge
xor
xchg
and
push
xlat
fs
adc
mov
repnz
sub
loop
rcrb
shlb
mov
scas
lcall
loop
rorl
xor
das
scas
cwtl
xchg
pop
sbb
aad
xchg
and
addb
or
adc
mov
das
addr16
loop
call
and
imul
cli
lock
das
in
jo
or
inc
add
push
pop
and
xchg
jo
jecxz
pop
pop
gs
pop
popa
adc
inc
enter
adc
stc
cltd
add
adc
lods
shlb
arpl
cmpsl
ss
std
cmp
out
xor
scas
aas
ss
popa
jle
cwtl
orb
sar
xchg
sbb
fidivrs
mov
mov
add
arpl
mov
or
cmp
jo
mov
cmp
nop
outsl
mov
xchg
aaa
cli
lahf
jmp
nop
mov
popa
push
or
imul
adc
stos
xor
inc
cltd
loop
das
into
aas
mov
orb
push
int3
xor
aaa
cmp
push
in
jne
or
loopne
xor
jo
mov
pushf
pop
in
xchg
rcrl
les
lds
and
sub
fisubrl
sarb
mov
aam
mov
jge
jae
ret
jmp
jb
adc
cmc
sbb
or
addr16
adc
ret
xchg
xor
cs
mov
shlb
xchg
int3
add
fisttpll
and
test
push
xchg
test
jnp
scas
add
inc
dec
or
scas
xor
mov
xor
xchg
imul
pop
inc
in
push
in
pop
and
insl
gs
dec
push
lcall
push
stos
aaa
arpl
into
outsl
inc
mov
repz
jp
cmp
xor
je
mov
push
jp
ja
adc
push
or
rcrl
out
gs
xor
mov
dec
gs
lods
popa
inc
fbstp
cmpsl
repnz
test
dec
sbb
sti
cltd
pop
or
push
enter
jg
cmpl
cmp
cmpsb
pop
outsl
mov
xchg
mov
in
ljmp
and
inc
mov
sub
outsl
repz
nop
add
int3
out
xor
mov
push
sbb
aas
dec
sub
xchg
mov
adc
lods
push
inc
cmp
mov
sar
setnp
cmp
adc
push
in
in
loop
ret
cmp
xchg
mov
arpl
mov
stos
int3
xchg
sub
jge
mov
add
ret
xchg
sub
adc
or
fisubrs
fildll
xchg
pushf
icebp
insb
sbb
mov
push
loopne
mov
mov
mov
add
dec
push
insb
iret
mov
jecxz
mov
rcll
fstl
insb
jnp
mov
aaa
sbb
out
bound
hlt
aad
mov
stos
push
xor
shll
pop
or
paddw
cmp
adc
sub
ret
das
aaa
push
xchg
add
ret
rcl
jecxz,pt
xor
xor
lret
push
dec
or
jbe
inc
xor
clc
inc
aad
dec
dec
sbb
call
push
inc
ficoms
jle
inc
push
int3
xchg
push
mov
mov
mov
scas
xor
pop
insb
lret
pop
imul
jns
in
scas
adc
jo
dec
add
rcrl
push
ret
es
jecxz
fists
push
mov
test
lcall
lret
pop
jo
outsl
sbb
push
xor
inc
cmp
cmp
mov
cmp
inc
sarl
mov
mov
or
pop
cli
in
add
pop
testl
hlt
inc
mov
and
cli
dec
addr16
cli
popa
push
and
cmp
ficompl
lret
movsb
jle
dec
add
inc
movsl
scas
xchg
jbe
lahf
movsb
outsb
sub
scas
inc
test
pop
or
pop
adc
movsb
andps
sarb
add
mov
mov
leave
push
and
mov
dec
insb
lret
xchg
popf
xchg
sub
add
fwait
or
xchg
and
aad
dec
outsl
xor
add
inc
cmp
aam
fucomi
jle
add
mov
das
adc
mov
xchg
sbb
ja
mov
cmp
dec
cmc
push
lods
push
lods
mov
out
aaa
pop
lret
aaa
es
out
lock
and
mov
jne
divb
movsb
lods
xchg
nop
sub
dec
lods
aaa
push
outsb
inc
in
jb
xchg
xor
dec
and
xchg
or
cltd
jne
sbb
pop
jbe
and
dec
sub
movsb
jle
xor
jle
xchg
scas
fwait
adc
sbb
and
push
fnsave
enter
jns
adc
add
mov
iret
dec
sub
pslld
xchg
add
jmp
fidivs
lcall
out
sbb
imul
adc
jl
out
xchg
andl
adc
mov
push
jmp
or
and
out
push
xor
jg
popf
fwait
imul
or
test
cltd
lcall
add
fcom
mov
dec
pop
adc
xor
out
jnp
and
lods
mov
arpl
add
inc
push
js
or
mov
imul
movsl
pop
sub
dec
loop
or
movsl
mov
push
fsubs
adc
mov
pop
mov
popf
lret
je
mov
jge
mov
das
int3
inc
dec
mov
xor
and
mov
jo
mov
out
mov
fwait
stos
mov
sub
inc
lds
pop
leave
incb
cmp
inc
pushf
or
cmp
rol
pop
jp
fstpl
dec
popf
cmp
cld
ret
push
call
xor
mov
xchg
ljmp
out
xor
sarb
inc
adc
subl
sahf
mov
mov
call
das
inc
jmp
push
lock
and
test
mov
js
cmp
fsubl
cmp
movb
jnp
out
xchg
push
sbb
inc
jbe
adc
cs
mov
jnp
ljmp
cmp
lret
shll
jae
mov
fcomps
shl
sub
mov
les
push
js
add
ret
fsubp
mov
jg
mov
or
bound
xchg
subb
in
imul
insb
lea
cmp
aaa
mov
mov
stos
jns
or
leave
mov
lds
sbb
xchg
aas
dec
pusha
sub
push
mov
and
aad
popf
out
addr16
jp
aad
inc
inc
sbb
test
mulb
enter
pop
lea
std
jge
and
ss
and
sub
jp
xor
ljmp
lcall
mov
inc
dec
fildl
outsb
pop
in
xchg
gs
out
lock
lahf
inc
jge
cmpsb
pop
cmp
leave
cmpsl
out
repz
fs
cmp
cmpsl
outsb
pop
aam
loopne
dec
push
lahf
jne
sbb
outsl
dec
aad
xchg
sub
popa
pop
dec
pop
out
push
fnstenv
xchg
enter
pop
xor
push
mov
inc
mov
xchg
insb
push
or
sub
ds
sti
in
fwait
insl
jne
mov
mov
adc
or
leave
cmp
cwtl
cmp
mov
adc
jmp
push
and
shlb
cs
or
xchg
je
mov
jo,pt
icebp
loope
icebp
jg
ret
mov
mov
jb
jecxz,pn
fnstsw
push
jbe
insb
js
add
pop
cmc
mov
inc
cmp
push
add
divl
pop
xor
lea
mov
sbb
xor
subl
int3
pusha
and
insb
pop
call
ds
and
xor
jo
dec
sbb
or
mov
sbb
nop
stc
fistpll
pop
ljmp
and
or
popf
pushf
pop
adc
testl
loopne
mov
push
fwait
or
stos
push
jmp
mov
in
push
lods
jg
outsl
lock
xor
clc
outsb
xchg
pop
lahf
mov
push
out
loop
push
add
jge
inc
mov
movsl
mov
jo
sete
sbb
call
leave
mov
dec
sbb
out
cmp
mov
in
pop
dec
lret
mov
fs
push
jecxz
enter
mov
setle
cmp
fs
xor
xor
xor
mov
inc
inc
dec
xchg
lret
in
push
out
arpl
pop
test
sub
mov
push
xchg
sbb
popa
icebp
ret
adc
jl
pop
or
cmp
dec
sbb
mov
cmc
subb
dec
lahf
lcall
clc
test
push
jp
or
xchg
push
pop
dec
inc
add
and
out
sbb
push
mov
lret
leave
out
fwait
mov
dec
cmp
adcb
dec
inc
mov
cmp
imul
jns
fldenv
or
hlt
push
imul
mov
out
sbb
out
jg
insl
adc
mov
data16
into
xchg
adc
dec
add
into
jmp
push
movsl
test
pop
mov
and
mov
es
inc
jp
mov
cli
cli
mov
inc
dec
pop
popa
aas
mov
roll
clc
les
stos
int
xorb
add
and
dec
test
stc
ljmp
push
int3
sbb
or
movsb
mov
mov
mov
adcb
xor
xor
adc
mov
push
mov
mov
jecxz
lret
jnp
orl
mov
rolb
fsubrl
shlb
dec
xor
jae
push
out
mov
and
mov
loopne
pop
outsb
data16
mov
aad
add
push
leave
jp
adc
jbe
andl
sub
in
or
bound
and
add
fidivs
jecxz
imul
and
inc
adc
adc
shrb
adc
or
or
lret
sahf
cmp
push
rcrl
jne
fcompl
addr16
sbb
jo
lods
jne
lret
rclb
je
pop
stc
push
arpl
jne
shl
adc
insb
aas
rcl
stos
mov
rolb
xor
cmp
adc
sar
mov
in
lahf
imul
adc
jg
insb
pushl
cmpsb
movsl
imul
js
outsb
cmc
fwait
mov
in
push
push
ss
xchg
popf
ljmp
std
lcall
mov
fs
daa
add
das
sbb
sarb
cmc
or
icebp
jle
xchg
push
sub
mov
mov
into
pushf
mov
fs
lret
fdivl
out
icebp
insl
or
inc
mov
mov
cli
pop
inc
cld
js
adc
sub
lods
aam
adc
adc
xchg
push
scas
push
aaa
mov
mov
fldl
push
xchg
xchg
mov
in
xchg
aaa
addr16
inc
cmp
lock
mov
adc
push
in
ficoml
sti
pop
stos
sub
pushf
pusha
jb
movsb
mov
xchg
fldt
out
orb
pop
mov
mov
arpl
jl
frstpm(287
mov
xlat
scas
jp
gs
aam
jmp
sbb
sbb
or
stos
dec
jno
lods
sub
into
imul
pop
and
add
jle
pop
call
cmpb
int
cmp
inc
xorl
out
adc
mov
fmull
mov
imulb
or
sti
inc
in
jmp
and
mov
lea
jp
add
lahf
hlt
add
jecxz
pop
mov
jp
cmpsl
add
jmp
ret
mov
popa
mov
jg
push
sub
and
push
mov
mov
xchg
movsl
pop
pusha
out
sub
push
xchg
aam
cmp
fcomps
test
push
and
push
and
jl
push
push
adc
add
mov
insl
push
or
cmc
push
notl
push
ret
aas
aas
pushf
jge
das
xchg
ss
sarl
lahf
aad
xchg
out
popf
popf
and
mov
in
sbb
in
xchg
xchg
or
inc
cmp
lods
clc
test
dec
int
in
mov
sbb
insl
mov
leave
add
mov
fcomps
cmpsb
cmp
and
inc
and
aad
lods
push
push
and
test
or
ret
test
rol
push
jno
pop
pop
orl
aas
rorl
in
mov
movsl
mov
cli
out
sub
jmp
cmpsl
fdivp
stc
hlt
insl
pop
movsb
xor
sbb
fstl
mov
inc
pop
inc
es
insb
sub
iret
sbb
daa
mov
cld
lcall
push
iret
std
ret
sar
add
gs
dec
dec
mov
add
ja
iret
xchg
sbb
xchg
repnz
lret
rep
mov
mov
sbb
fisubrs
sub
xchg
popf
cmp
mov
sbb
fcomi
mov
fs
or
and
jg
dec
sbb
jne
push
lret
rorb
cmp
insl
jg
adc
add
insl
aaa
ficomps
sub
sbb
sbb
data16
mov
push
cltd
dec
jp
mov
mov
out
rorb
jbe
aam
in
orl
pop
sbb
arpl
mov
js
imul
out
sahf
pop
ret
jle
jnp
loope
pop
addr16
push
adc
stc
mov
retw
dec
cltd
jle
mov
push
sbb
sub
shl
fistpll
fsubr
insl
je
inc
out
inc
test
sti
dec
mov
mov
push
push
repz
call
cmpsb
adc
sub
leave
shll
popf
movsb
aam
arpl
pop
lret
xchg
push
mov
in
and
ret
or
ds
cmp
cmp
sbb
clc
outsl
add
and
loope
mov
insb
rcrl
mov
cmp
subb
jg
lea
loop
add
add
push
xchg
cmc
jg
fdiv
in
fprem
pusha
fstp
xchg
aam
bound
dec
in
push
popf
jns
add
lcall
dec
xchg
sbb
cmp
jmp
popf
int
fistps
movsl
shr
xchg
insb
out
adc
inc
ds
std
mov
in
xchg
js
mov
aaa
ret
and
in
rcl
xor
aam
lods
push
aaa
mov
lahf
xchg
cmc
sbb
cmpl
aas
fisttps
jne
mov
testl
jnp
scas
or
hlt
test
push
jno
cmp
out
mov
push
mov
fwait
mov
sub
sub
cmpl
mov
pandn
or
dec
fistpll
mov
mov
mov
sub
out
and
cmp
insb
jg
insl
mov
cmc
fst
push
aas
mov
shlb
pop
mov
shll
add
mov
and
notb
icebp
jle
push
ret
arpl
xchg
mov
or
lret
jnp
sbb
add
pop
mov
and
mov
adc
xrelease
test
push
lea
loope
cmp
adc
stc
mov
ds
bound
adc
data16
xchg
xor
and
loopne
xchg
dec
and
fiaddl
add
js
sbb
cmc
lds
inc
jb
mov
push
out
arpl
dec
sub
in
in
mov
mov
xor
test
lret
fstpl
vmwrite
push
mov
shl
pop
mov
aas
fwait
inc
adc
mov
sub
adc
jmp
push
pop
fistpll
je
lock
sub
xor
lcall
jg
mov
push
test
xor
mov
popf
shrl
rolb
popf
xor
mov
push
cmpsb
pop
test
lret
adc
jmp
ds
jo
adc
push
imul
pop
cmc
das
call
in
mov
insl
stos
je
movsb
addr16
inc
mov
mov
inc
pop
lods
addb
pop
sub
loop
add
add
stos
pop
aaa
pop
nop
adc
xchg
sbb
rolb
push
jnp
adc
std
sub
pop
xor
dec
mov
hlt
add
call
stos
jb
or
cmpsb
shlb
cmp
jg
shll
std
add
pop
jno
adc
pushf
push
clc
fstl
mov
and
xor
push
lret
test
mov
cmpsl
fldl
inc
mov
std
push
jl
cmc
sahf
pop
sub
out
jecxz
test
repz
jl
rcr
loop
int3
jl
in
mov
int
leave
jo
mov
testl
pop
xchg
or
and
xor
xor
in
orb
inc
xor
xchg
pop
fprem
addb
mov
test
ret
and
sbb
in
test
sub
dec
ja
or
insl
rcl
neg
cmpsl
fidivrl
and
xchg
lock
icebp
mov
cmp
mov
push
xchg
iret
sub
je
jo
xor
test
mov
out
fidivrs
and
out
inc
sbb
add
jnp
test
out
notl
testl
scas
hlt
daa
or
jl
insb
ja
inc
dec
jmp
jnp
call
ret
movsl
imul
dec
cmpsb
fsubs
ss
fiaddl
dec
cmpsl
lcall
outsb
jle
and
mov
dec
jp
mov
mov
pop
mov
mov
jno
xor
fcoms
stos
ss
mov
rcrl
fnstenv
fstpt
stos
sbb
clc
push
out
push
fdiv
bound
mov
fidivrl
or
mov
testl
mov
outsb
dec
fstps
sbb
iret
sbb
pusha
pop
outsb
movl
fmull
lea
or
inc
or
cli
ss
daa
or
pop
insl
push
inc
popf
xchg
cmp
mov
movsl
popf
xchg
js
jo
addr16
popf
mov
inc
aad
call
pop
xchg
pop
cmpsb
cs
adc
cld
fsubrs
pop
rcll
mov
sub
dec
icebp
add
jmp
jmp
fstpl
inc
dec
jns
fwait
mov
inc
ret
icebp
xor
loope,pn
xchg
test
outsb
jnp
sbb
int3
andl
clc
jne
cs
dec
cld
or
fistps
insb
js
mov
lret
and
jl
mov
icebp
xor
in
jmp
lret
sub
push
cmpsb
inc
repnz
sbb
jecxz
jmp
mov
xchg
pop
imul
iret
and
sub
mov
jle
mov
or
cwtl
mov
mov
sub
scas
outsl
frstor
lods
cmp
rclb
decb
and
or
xchg
aad
out
mov
xor
sub
mov
ret
aas
jg
sub
jmp
cmp
cmp
inc
lock
dec
cmp
mov
adc
repz
ja
xchg
js
sub
call
push
lods
inc
out
movb
loop
sbb
xchg
jbe
xor
add
add
sub
out
and
fs
sahf
push
pop
movsl
cmp
cmp
xchg
pop
aaa
fldcw
outsl
sbb
dec
jmp
xchg
mov
and
xchg
mov
or
jno
adc
xor
xor
js
lret
subb
jne
fisttps
js
cmp
enter
test
mov
mov
jmp
dec
icebp
cld
daa
popa
out
push
popa
pop
mov
dec
mov
xor
js
les
jnp
sub
and
jne
aam
outsb
adc
mov
adc
call
loope
mov
inc
inc
mov
mov
sahf
leave
sub
add
pop
aas
jae
adc
sub
stos
xchg
mov
out
ja
adc
lahf
pop
fidivrl
and
jecxz
xchg
push
mov
pop
mov
ja
adc
and
cmc
in
ljmp
sahf
sbb
push
xchg
and
mov
sbb
pop
addl
pusha
divl
and
lods
dec
sub
mov
adc
test
aaa
movsl
addr16
loopne
pop
pusha
xor
mov
xchg
shrl
aas
test
popa
inc
sub
or
lods
out
inc
cs
fists
mov
xchg
scas
inc
subb
or
lret
lret
iret
add
addr16
dec
cmc
or
nop
adc
inc
dec
and
bound
xchg
xchg
sub
dec
mov
dec
add
mov
cmp
sbb
jle
cwtl
lcall
inc
push
push
out
das
add
sbb
stc
insb
xchg
or
lcall
subl
or
mov
stos
in
lock
nop
in
pop
sahf
bt
stc
jle
cmp
mov
cmp
sbb
xchg
jl
pop
mov
ret
incl
mov
popf
ljmp
pop
add
popw
enter
push
sub
fstpt
ficompl
outsb
aaa
push
push
cltd
and
mov
pop
js
xchg
loope
iret
mov
jl
push
popf
sub
lea
mov
mov
cmp
add
fdivl
add
cmp
sbb
aas
loope
dec
or
sbb
mov
fs
pop
mov
mov
lcall
int3
cmp
inc
lcall
cli
mov
lods
mov
leave
xchg
or
push
or
cs
sbb
ficoms
adc
lods
or
subl
mov
aam
cmp
jmp
lcall
mov
mov
in
add
fstps
mov
gs
mov
mov
mov
arpl
test
xchg
test
out
test
add
lods
in
xor
push
scas
or
xor
cmp
jge
sarb
inc
inc
sub
adc
or
es
dec
xor
iret
lret
jb
push
push
xor
ret
pushf
adc
cltd
inc
xchg
or
fdivp
in
jecxz
jne,pn
inc
cs
loopne
mov
mov
mov
lea
pushf
mov
ljmp
cli
xchg
fwait
push
enter
aam
lcall
push
pop
pop
enterw
dec
xor
aaa
in
mov
mov
inc
push
pop
add
dec
push
dec
adc
or
cmpsb
inc
jb
mov
xor
mov
cmp
sbb
add
aad
cmp
push
sub
jl
fldl
push
dec
cmp
adcl
repz
fisubl
lahf
cmpsl
and
xchg
xchg
jl
jge
outsb
lods
push
ret
pushw
lods
mov
adc
scas
push
inc
inc
xorb
ret
mov
dec
or
bound
and
orb
in
js
addr16
lret
loope
daa
or
jns,pt
hlt
xor
and
repz
mov
aad
pop
mov
or
xchg
enter
or
call
daa
or
imul
mull
out
cmp
cld
mov
hlt
pop
ret
jecxz
mov
mov
xor
xchg
push
inc
inc
or
cmc
push
jl
out
daa
idivb
mov
sub
int3
repz
test
mov
inc
scas
aam
inc
in
push
mov
jae
push
into
mov
lock
sarb
cmc
adc
xchg
mov
xchg
push
imull
and
mov
inc
pminsw
fbstp
inc
les
jge
mov
pop
add
jecxz
xchg
inc
adc
scas
movsl
sbb
das
js
fstl
cmpl
cmp
ficoms
jns
push
mov
jno
add
mov
cwtl
dec
rclb
stc
mov
call
sub
jne
lock
and
pop
pushf
addr16
fistl
mov
mov
mov
out
outsb
add
push
sub
dec
mov
stos
nop
jl
scas
pop
cmpl
push
cmp
lret
pop
xchg
push
lock
das
sbb
add
jae
mov
jl
loopne
in
jl
cld
inc
rolb
mov
jo
es
inc
lahf
inc
mov
std
daa
mov
es
int
test
repz
dec
xor
andl
cli
loop
shlb
jno
cld
aam
dec
ja
lret
rorl
negb
lret
shl
jb
nop
jmp
push
test
jg
push
loop
adc
inc
lcall
or
dec
and
sbb
jmp
xchg
pop
dec
sub
hlt
lcall
jl
insl
pop
out
jno
scas
cmovo
xchg
push
stc
test
add
xchg
test
sti
lret
dec
popa
xor
sbb
adc
cmpsl
arpl
jle
shr
xchg
out
rcrl
or
sbb
mov
add
les
jl
mov
sbb
dec
cmp
sahf
cmp
addr16
les
lret
mov
inc
repnz
lcall
pop
xor
xchg
lea
mov
leave
push
fdivrl
fwait
push
push
add
mov
pop
mov
mov
insl
fwait
mov
jo
clc
lret
sub
lcall
mov
jl
jge
jmp
inc
xchg
add
pop
fincstp
or
push
mov
popf
enter
push
xchg
fs
mov
add
mov
pop
jmp
jmp
pop
clc
cmp
fs
mov
pop
scas
cli
mov
inc
xchg
xor
jle
inc
push
js
stc
push
popa
in
out
leave
loope
inc
jne
xchg
enter
pop
idivl
fstps
mov
pop
xor
pushf
loopne
loop
add
mov
fsubl
fisubrl
fucom
mov
cmp
ret
testb
cmp
pushf
xor
inc
ds
shrl
fcmovnbe
popf
in
and
cld
adc
xchg
fisttps
stos
ret
shrl
jns
pop
daa
mov
fcmovb
pop
addb
lcall
movsl
xlat
scas
inc
mov
jge
cmp
cld
pop
pop
psadbw
mov
mov
sbb
mov
cmp
mov
jl
dec
popw
xor
push
cmp
mov
xor
ljmp
pop
inc
fdivrl
mov
out
les
mov
enter
addr16
je
testl
movsb
cmpsb
sbb
xor
iret
movups
xchg
adc
outsl
adc
filds
xor
and
les
dec
test
sbb
jo
lds
das
adc
mov
dec
stos
mov
ret
cs
sub
test
aad
ss
in
add
out
jns
outsl
bound
rep
pop
push
fdivrs
pushf
nop
adc
mov
outsl
xorb
nop
dec
ja
xlat
push
dec
jge
push
mov
lret
rcrb
push
and
shll
clc
add
xchg
stc
or
hlt
ret
popl
frstor
mov
mov
int
inc
je
roll
add
jl
adc
rclb
fsubs
lods
pop
add
add
sbb
int
ljmp
cmc
sbb
pop
aad
in
jo
mov
scas
add
xchg
sub
enter
sub
and
movsl
pop
sbb
inc
xchg
and
xchg
out
sbb
insl
fsubrl
push
cld
sbb
imul
push
outsl
sbb
lock
add
mov
outsb
clc
enter
dec
xchg
xchg
lahf
sub
xchg
stos
mov
mov
sub
jae
pop
popf
out
out
je
inc
nop
push
xor
daa
adc
adc
push
mov
sbb
jmp
xchg
andl
mov
mov
cwtl
xor
add
push
iret
xchg
jbe
adc
addr16
lea
dec
stos
fadd
loope
fisubs
mov
adc
repnz
jl
mov
cmp
sub
dec
push
lods
pop
iret
and
mov
push
sbb
or
daa
sbbl
int3
mov
and
pop
inc
dec
daa
xchg
imul
xchg
pop
hlt
xor
and
lods
ja
repz
ss
mov
aad
loope
flds
xor
jb
ljmp
xor
xlat
movsb
sbb
aam
scas
fprem1
sub
out
adc
push
int3
cmp
sbb
dec
push
int3
jno
pop
sub
cld
fisubrs
cmp
std
shrl
jbe
adc
stos
stc
inc
fbstp
and
mov
jo
insl
dec
sub
out
sub
pusha
addr16
sub
movsl
mov
aam
aad
push
out
jmp
icebp
pop
lahf
xlat
cmp
xchg
arpl
sub
pop
xor
or
adc
push
sbb
hlt
mov
insb
push
fwait
sub
fs
lret
add
cmpsl
mov
je
adc
and
adcb
and
pushf
push
pop
or
mov
mov
cmp
xchg
xor
ja
popf
pop
sti
into
sub
lret
xchg
bound
adc
sub
xchg
shll
adc
mov
ret
sbb
cmp
test
daa
inc
xchg
xchg
lret
xchg
pop
sbb
mov
xchg
jl
pop
mov
xor
mov
cli
push
outsl
mov
and
jmp
popa
ret
mov
lcall
and
xchg
and
rcrl
adc
adc
in
cmp
test
cli
xchg
imul
pop
lahf
outsb
dec
bound
loope
hlt
xlat
std
lcall
repz
push
lahf
fadds
test
test
push
fcomip
jg
cmc
pop
mov
repnz
or
dec
lock
popf
adc
jae
push
push
cmc
xchg
jp
push
jmp
scas
inc
pop
and
imul
das
jno
jmp
cmp
push
xor
mov
jmp
mov
inc
jmp
inc
mov
inc
call
daa
xor
js
or
push
sbb
jbe
adc
jne
mov
pop
jnp
xor
adc
push
sub
xchg
insb
jne
adc
jns
dec
fldt
repz
jno
icebp
jecxz
out
or
dec
fildl
inc
js
lcall
out
rcrl
fdivs
test
push
jecxz
xor
sbb
in
outsb
inc
loopne
sbb
ds
and
push
sbb
xchg
fisttpl
xor
xchg
xchg
fmuls
dec
cmp
add
sti
pop
push
pmuludq
sbb
add
or
repnz
add
and
cmp
pop
inc
fwait
pusha
js
inc
mov
fs
add
out
out
fsubp
fadd
mov
subl
mov
mov
sbb
dec
movsl
sbb
pop
pop
imul
or
push
xorl
je
xchg
or
rcll
and
push
sarl
fisttpll
mov
mov
loop
loope
mov
or
idiv
lcall
jg
cmpsl
insb
fsts
jmp
enter
sub
inc
pop
sbb
insl
mov
xor
and
xor
adc
jnp
and
or
mov
jmp
and
push
pop
nop
or
pop
outsl
ror
mov
stos
negl
cmp
xor
loope
inc
and
push
pusha
mov
add
sub
nop
pusha
out
and
sub
sbb
mov
into
xor
daa
inc
aad
int3
mov
inc
add
jecxz
ret
mov
pop
lock
mov
ds
outsl
addr16
push
mov
scas
dec
js
movsb
loope
rclb
dec
loope
aam
mov
stc
xchg
outsb
push
xchg
cltd
lret
jae
sahf
icebp
lahf
movsl
and
add
adc
mov
mov
pop
les
lods
pop
fsubrs
rol
in
or
pusha
jnp
fbstp
sbb
jg
pop
sub
ret
push
popf
dec
popf
add
and
iret
mov
fildll
repz
push
out
ret
sub
add
fistps
lock
push
repz
xchg
push
bound
pop
imul
mov
lahf
mov
sub
hlt
ljmp
jp
aaa
adc
cmp
cs
or
xchg
adc
aaa
xchg
cmp
jo
cmp
pusha
and
inc
test
shlb
cli
inc
jmp
dec
inc
rcll
mov
lret
in
pop
xor
bswap
mov
push
iret
pop
imul
mov
rorb
in
fcompl
lds
inc
shll
iret
jecxz
adc
shlb
xchg
aaa
push
lret
inc
roll
pop
jp
iret
cmpsl
xchg
add
lock
xchg
leave
or
lea
cmp
jns
cwtl
mov
dec
dec
add
mov
aas
adc
addl
inc
addb
dec
pop
sub
popf
jecxz
pop
dec
inc
movsb
scas
hlt
iret
cmpsl
or
aam
gs
fnsave
std
andps
xchg
push
lds
mov
enter
lea
lods
shr
popf
jb
out
pop
xor
push
pop
jns
sbb
cmp
movsb
sub
push
xor
insl
pushf
and
xchg
cld
incb
mov
iret
push
mov
repz
loopne
lret
pushf
mov
andb
rclb
not
mov
xchg
mov
sbb
orb
cmp
push
xchg
xchg
xchg
dec
or
int
push
ljmp
mov
lods
pslld
gs
mov
mov
xchg
push
ds
adc
sbb
inc
mov
pushl
fsubs
or
mov
mov
iret
into
jno
mov
inc
lahf
ja
inc
fiadds
and
xorl
xor
mov
les
loop
sub
xor
push
xor
call
mov
or
mulb
ror
sub
jmp
mov
mov
or
xchg
int
add
sti
add
pop
lret
push
nop
lds
dec
test
xor
mov
out
cmp
lea
or
das
aad
jo
jle
aas
xlat
shl
jb
dec
pop
push
mov
fchs
lret
pop
ficoms
popf
mov
pop
outsb
dec
in
adc
inc
rorb
push
xchg
dec
outsl
sbb
fldenv
outsl
ret
sarb
pop
mov
jecxz
mov
jmp
xchg
and
mov
mov
jge
pop
jecxz
addb
push
jae
lret
or
inc
ss
stc
ds
sahf
inc
push
daa
inc
mov
call
pusha
push
mov
dec
rcrl
fisttps
sbb
push
ljmp
loop
dec
fldt
negl
pop
push
and
daa
sub
insl
mov
shll
cli
fsts
cli
ret
mov
clc
xchg
cmp
cmc
push
or
cld
sarl
cmp
push
lods
scas
ss
das
and
push
mov
jmp
fstpt
cld
mov
dec
pop
pop
loope
stos
int
test
addr16
ret
xchg
jo
cmp
adc
jmp
loopne
ret
mov
or
or
inc
dec
gs
jbe
mov
ss
out
sarb
mov
mov
gs
lds
movsl
call
mov
sarb
jns
mov
lods
mov
jae
push
rep
inc
mov
jmp
sbb
les
xchg
xor
mov
mov
leave
push
add
icebp
mov
mov
push
fcomps
xchg
cmp
inc
mov
or
pop
pushf
dec
pop
inc
xchg
outsb
scas
or
stc
pop
mov
pop
outsl
cli
aaa
jnp
cmc
ds
mov
inc
push
mov
sbb
add
icebp
mov
pop
cmp
sarl
lret
xchg
pop
mov
stos
test
mov
out
pop
mov
jbe
mov
and
or
outsb
fcomi
jbe
xchg
repnz
inc
stos
mov
pop
lcall
xor
cwtl
sub
xor
jecxz
and
mov
or
stos
icebp
in
imul
mov
ljmp
mov
aas
push
mov
mov
inc
bswap
ret
insl
inc
out
mov
mov
sbb
mov
test
call
outsl
mov
repnz
push
cmp
lea
clc
lret
mov
sub
xchg
adc
out
clc
jle
lret
lock
jbe
lret
jle
inc
pushf
es
outsb
and
xchg
sbb
roll
xor
xchg
ficoms
mov
sub
in
mov
dec
adc
inc
mov
lret
inc
ljmp
xchg
xchg
mov
daa
jl
dec
dec
outsl
out
cmp
rcrb
xor
cli
sub
adc
cmc
out
dec
data16
cmp
or
std
xor
mov
fs
mov
pop
nop
in
mov
repnz
mov
lret
movsb
clc
xchg
xchg
mov
scas
lcall
rolb
shrl
cltd
daa
jmp
jle
lahf
mov
leave
ret
shl
out
ss
dec
int3
fs
popa
into
dec
push
js
ljmp
fnsave
jle
add
add
or
jno
add
cmp
pop
iret
add
jecxz
sbb
je
addr16
out
repz
or
xor
mov
cmp
push
mov
jbe
pop
xchg
jno
pop
push
jo
aad
adc
fistl
mov
mov
cmp
pushf
popa
cmp
adc
jno
sbb
jg
dec
xorl
mov
nop
jo
test
leave
or
pushf
and
addr16
pop
jecxz
sbb
cltd
imul
cwtl
cmpb
pop
aas
jmp
pop
fdivr
movsb
mov
pop
lods
xchg
cmp
cli
dec
mov
or
and
pop
outsl
lret
lock
jo
xor
inc
push
mov
jno
stos
lds
subb
insb
mov
pop
and
call
sti
xchg
pop
cmp
std
arpl
xchg
inc
rorb
std
xor
cmp
cltd
fcoml
jl
pop
push
stc
ds
or
or
negl
cwtl
xchg
lahf
mov
ljmp
cli
mov
add
cmp
push
fmull
mov
pop
scas
test
adc
outsl
adc
xchg
sub
rol
scas
sbb
xor
lea
mov
push
fwait
or
pop
lock
cmp
pop
sbb
push
sbbl
aad
sub
test
sbb
aam
sub
daa
loop
pop
fcomps
inc
pop
xor
cmp
es
bound
mov
sub
mov
mov
and
or
cmp
imul
cmpsl
lock
movsb
inc
clc
pusha
call
jno
sbb
stos
lods
cmp
sbb
stos
daa
dec
lret
xor
outsb
in
ja
aaa
outsl
cmp
outsl
cli
js
shll
sub
in
jnp
push
call
orl
in
adc
test
xor
push
sti
sbb
push
add
out
into
rcrl
push
or
jbe
ret
fnstcw
jmp
push
mov
or
add
dec
imul
xchg
mov
push
inc
rcll
fs
push
sub
inc
negl
mov
aam
cmp
mov
mov
insb
push
fs
ljmp
mov
sub
ljmp
imul
lds
mov
int
loope
ds
jecxz
shll
gs
ja
mov
push
pushf
add
pop
mov
pop
push
fstpl
xor
ja
push
or
ljmp
xchg
mov
cli
pushf
or
dec
push
xchg
pop
test
cld
lcall
sahf
fwait
pop
mov
pushf
and
add
mov
pop
lods
lret
cmpsl
idiv
pushf
xlat
push
ja
divl
inc
mov
imul
jno
xchg
aam
mov
dec
or
andb
das
insb
repnz
aad
add
pop
and
adc
push
lods
loop
jmp
cmp
adc
and
pop
nop
out
sbb
icebp
adc
sbb
cmpsb
inc
inc
cltd
jge
jmp
xchg
imul
addb
cmp
enter
jmp
movsb
mov
je
ds
sbb
xchg
or
jns
pop
out
insl
aaa
je
jp
xor
shlb
in
dec
dec
mov
inc
cwtl
and
das
xor
int3
jge
xor
cmpsb
xchg
jl
je
leave
lret
test
pop
lds
push
addl
int3
xchg
lock
inc
mov
imul
cmp
mov
mov
movsl
push
shl
cmpb
jb
push
rcll
sub
aad
clc
mov
cmc
jecxz
adc
loopne
lea
add
enter
shrl
jge
ljmp
in
es
mov
into
call
add
xor
arpl
ss
insl
stos
mov
mov
adc
ficoms
pop
shll
jge
ja
cld
add
dec
es
xor
mov
adc
in
lds
xchg
mov
ss
scas
lret
lods
sbbl
mov
push
push
inc
adc
mov
or
dec
push
notb
mov
stos
fwait
sbb
subb
inc
daa
rolb
bound
aas
cmp
dec
das
dec
xchg
add
xor
testl
push
aad
jge
stos
test
sahf
ret
xchg
sub
cs
mov
sti
mov
cmpsl
xorb
mov
aaa
xor
rorl
dec
cli
add
nop
and
int3
adc
repz
inc
mov
lahf
rol
cwtl
lret
call
ss
rorb
in
push
cmc
or
movsb
cmp
mov
pop
ret
inc
movsl
inc
out
leave
int
cmpsb
aaa
pop
lds
rolb
aaa
inc
imul
scas
or
ret
cld
scas
pop
sbb
dec
cwtl
jbe
jg
jecxz
push
and
jmp
test
movsb
or
loop
sbb
inc
fwait
and
and
and
iret
push
push
adc
pop
pop
testl
mov
jp
dec
rorb
xchg
mov
or
push
ret
popf
insb
dec
call
push
fadds
lods
jge
jb
and
sar
testb
sub
ljmp
sbb
sbb
dec
and
jnp
push
push
data16
xor
dec
xchg
xor
test
jo
je
pop
faddl
ljmp
inc
sahf
jle
add
dec
xchg
or
or
and
lock
shl
arpl
or
push
jnp
enter
stos
jo
pop
cmpsl
sbb
fcmove
cmp
out
mov
out
mov
aam
mov
mov
mov
jae
cmc
jo
push
sub
test
mov
clc
sbb
mov
sbb
outsl
mov
inc
xchg
loopne
fs
fcompl
fs
into
mov
jns
inc
ljmp
loopne
xchg
orl
sbb
inc
add
outsb
popa
add
dec
jl
repnz
fidivrs
xchg
test
and
cmp
lret
testl
cmovnp
faddl
add
das
sbb
mov
xlat
lds
jbe
aaa
pop
adc
sub
and
cmpsb
sub
repz
and
test
aas
dec
call
rcrb
fwait
pop
les
ret
mov
dec
outsb
push
das
aas
mov
or
in
fisubrs
test
dec
and
xchg
ss
scas
mov
xchg
icebp
sbbb
sub
mov
dec
jno
mov
sub
push
imulb
push
sbb
pop
jne
inc
shrl
shll
mov
mov
mov
in
repz
mov
arpl
mov
mov
lcall
into
outsb
ret
adc
incb
into
adc
dec
test
jb
imul
cmp
xchg
cld
test
push
pop
aas
stos
ljmp
sub
adc
jns
mov
inc
out
fmull
ljmp
push
pop
and
xchg
std
in
sbb
sbb
adc
popa
fldt
mov
aad
cmp
nop
pop
and
fisttps
cmp
ds
sub
into
outsl
lods
stc
and
dec
add
pop
adc
cmpl
aaa
ret
pop
leave
aam
mov
mov
add
sub
mov
fdivl
lods
cmpsl
or
stc
push
xchg
ja
sub
lods
mov
xchg
js
ret
push
jbe
xor
sub
adc
jb
scas
mulb
jecxz
adc
jo
addr16
mov
fwait
jno
rcrl
dec
sub
inc
xchg
adc
hlt
push
pop
mov
jmp
sub
loope
outsl
mov
lods
rcr
dec
xchg
push
pop
repz
pushf
stc
push
mov
dec
mov
mov
shll
or
xchg
in
adc
les
orb
mov
mov
xor
std
add
ss
jmp
push
jl
sbb
adc
push
sbb
mov
or
nop/reserved
stos
test
aas
adc
ss
lea
xor
xchg
and
mov
in
push
sub
xor
mov
stc
in
xor
test
aas
js
add
movntps
xchg
push
ret
testl
sahf
push
shlb
das
sub
popf
idivl
repnz
lret
xchg
ret
sbb
xchg
repnz
rorl
std
cmpsb
mov
sub
lods
cmpl
movsl
mov
or
daa
inc
sbb
pop
ret
xor
cwtl
in
add
lahf
jo
cltd
xchg
lret
shll
mov
loope
jge
out
sbb
or
aaa
cltd
xor
call
jl
outsl
or
ja
push
lea
adc
jns
pusha
mov
cmp
mov
pop
mov
mov
xor
xor
cmpsl
pushf
ret
jae
jg
fs
add
and
or
xor
rolb
roll
jbe
xor
out
lcall
rolb
pop
data16
mov
js
in
dec
xor
jecxz
repz
push
and
xor
xor
dec
negb
loopne
mov
and
xchg
clc
mov
cmp
imulb
in
adc
adc
fiaddl
mov
or
cmp
das
loopne
inc
dec
inc
sbb
dec
ret
add
xor
mov
push
sahf
roll
push
or
sub
push
cs
cmp
cmpl
fldl
dec
sbb
cmp
pop
cmp
leave
adc
push
aam
cltd
pop
enter
popf
push
lea
adc
sbb
dec
jmp
push
lea
mov
xchg
lcall
movsl
mov
inc
test
xor
icebp
daa
sub
pusha
in
and
mov
push
jae
scas
cltd
mov
imul
divb
jnp
or
mov
and
shrl
xchg
push
outsl
stos
lcall
adc
jl
sub
ror
pop
js
sarb
ret
pop
subb
std
jp
jle
xlat
movsl
loopne
add
jl
mov
sub
pushf
daa
push
test
loope
adc
lds
push
or
push
es
sub
data16
dec
je
xchg
sahf
xchg
fildll
cs
or
sarb
out
pop
scas
idivl
cmp
mov
sbb
into
test
popf
adc
ret
inc
sahf
jns
adc
movsb
pop
das
bound
sbb
push
test
jg
imul
mov
insl
inc
add
xor
jns
mov
lock
mov
sbb
aas
sti
jo
call
js
push
adc
das
in
xor
ss
mov
ret
pop
jle
sbb
testl
fsub
mov
pop
test
inc
dec
insl
daa
or
adcb
fdivrl
or
mov
mov
dec
or
push
dec
clc
xor
es
aas
pop
bound
dec
ret
cmp
pop
mov
ret
mov
in
or
mov
out
and
rcrb
mov
mov
sub
cld
add
push
mov
dec
test
inc
rcrl
jmp
sti
cli
jmp
into
dec
jne
push
insl
lret
pop
mov
jecxz
add
mov
int3
pushf
call
adc
stc
sub
outsl
mov
cmp
into
dec
pushf
pop
out
in
rcll
nop
enter
nop
pop
inc
nop
ja
push
lods
jecxz
mov
popa
testb
aaa
xor
add
mov
in
loopne
addr16
addl
fwait
scas
push
into
xor
nop
add
loopne
fidivrl
in
pop
mov
imul
addb
jo
rorb
shl
pop
xor
dec
ret
into
push
orb
push
outsl
jmp
push
and
in
pop
mov
stos
add
scas
dec
or
out
jle
cltd
test
xchg
xor
out
add
fisttpl
imul
and
das
push
pop
not
or
repnz
test
insl
hlt
lret
push
mov
xchg
inc
or
add
mov
repnz
jle
rcl
mov
push
or
or
mov
pop
js
shlb
pop
or
pop
dec
mov
and
int3
pusha
lret
and
jae
lret
jb
xor
das
pop
mov
xor
dec
mov
or
sub
xchg
sti
push
mov
dec
fidivl
push
pop
jae
pop
push
in
stos
adc
adc
adc
insl
jo
mov
pop
sti
iret
into
jne
insl
pop
cmp
loope
pusha
xchg
jge
enter
cmp
mov
sub
dec
push
and
in
cmp
out
or
aad
mov
test
movq
sarl
ror
cli
das
loopne
lea
jecxz
in
push
cs
in
push
xchg
add
cmp
xchg
fcmovnu
ds
pop
stos
pop
lds
mov
or
cwtl
push
xchg
mov
test
adc
jecxz
aas
add
lfs
sar
dec
sbb
push
sub
aam
or
jge
loop
stos
jnp
in
mov
cmc
pop
jbe
in
sub
xchg
daa
or
xor
dec
sub
xlat
sbb
pushf
jnp
mov
rcrb
psubsw
cltd
fmull
movsb
xor
mov
jecxz
or
jge
pop
mov
mov
push
and
push
xchg
loop
movsl
bound
pop
sub
mov
pop
test
int3
in
push
aam
js
adc
inc
movsb
push
insl
dec
jbe
fs
imul
xchg
cmp
lea
fstpt
pop
jl
lret
cld
rorb
ja
mov
js
imul
add
clc
cmp
pop
push
jo
inc
xchg
arpl
out
push
pop
aas
push
adc
pop
pushf
dec
je
pop
fsub
insl
jecxz
push
rcll
repz
mov
push
jns
stc
xchg
mov
mov
mov
fadd
dec
mov
ss
loope,pt
negl
adc
loope
xchg
xor
dec
loopne
dec
xor
aas
out
sti
xchg
or
lds
sbb
xor
daa
addl
jge
inc
adc
fs
inc
sub
mov
pop
fs
ret
test
xor
push
imul
movsl
imul
ds
and
mov
lahf
xchg
push
cmp
out
cmpl
frstor
mov
xchg
or
scas
mov
insl
in
xchg
jg
lods
fistpll
addr16
jg
divl
in
pop
mov
pop
nop
and
ds
outsl
insb
loope
pop
pop
mov
cs
xchg
ret
add
mov
pop
pop
cmpsb
in
in
mov
fwait
cs
mov
adc
push
cmpb
sub
jp
out
loopne
mov
mov
pop
dec
mov
out
iret
bound
xchg
outsb
or
popf
imul
and
shlw
push
xchg
inc
cmp
cli
mov
insl
mov
push
sbb
nop
int3
call
jp
mov
cmp
cmpsb
out
add
sub
out
jmp
pop
cltd
mov
mov
inc
fwait
or
jmp
iret
repz
int
or
mov
jle
jg
add
pop
mov
rclb
adc
mov
add
add
ret
rolb
lea
pop
pushf
aad
sbb
or
in
mov
cmc
sub
lds
aas
and
cld
push
arpl
mov
insl
dec
hlt
mov
movl
imul
mov
mov
in
lds
cmp
mov
roll
test
fwait
mov
cmp
sub
pop
push
sbb
sbb
pop
ret
pop
scas
inc
push
mov
int3
dec
int
fildll
adc
cmpsb
shlb
pop
pop
sbb
pop
fsubl
push
jne
fsubrl
int3
mov
leave
sbb
loope
scas
fistpll
sbb
jb
cmp
jle
xor
sbb
ficoml
aaa
imul
enter
shrb
js
iret
stos
pop
xor
inc
cmp
sti
xlat
jnp
cmp
mov
jecxz
icebp
daa
jbe
mov
or
mov
idiv
bound
pop
mov
and
sarb
add
adc
out
int
adc
adc
nop
es
mov
jge
je
aam
inc
jno
insb
lods
nop
pop
xor
cmp
mov
mov
cli
push
ss
sbb
xor
mov
roll
cmp
jae
push
push
outsl
xchg
pop
rcr
xor
xor
or
imul
int3
xchg
push
push
xchg
mov
test
cs
add
add
fisubrs
lods
adc
and
arpl
sub
or
fisubrs
sbb
lea
sbb
sub
mov
sub
imul
xor
cltd
in
repz
mov
cmp
fisttps
int
test
mov
sub
pushf
fldt
mov
stos
mov
and
lock
lock
sbb
fmuls
jo
test
cli
dec
or
addr16
fnstsw
sbb
lcall
cmp
lret
daa
mov
std
push
or
inc
cmp
mov
cmp
adc
add
clc
test
push
jle
cwtl
sub
addr16
ljmp
out
push
jmp
pop
in
jbe
ficoml
mov
stos
fisttpl
and
jmp
dec
fwait
mov
sbb
push
es
cmp
mov
lcall
sti
lret
addr16
dec
jne
into
icebp
popf
or
add
xchg
cli
fsts
adc
cmpsl
sbb
xchg
lcall
mov
imul
cmp
outsb
scas
or
cmp
xor
push
jo
xlat
push
stos
sbb
stos
cld
popl
fiadds
outsl
jge
sbbl
pop
mov
or
sarl
mov
mov
sub
cmp
int
mov
movsb
cmp
mov
jg
inc
popa
jae
pop
in
inc
inc
lahf
fs
jo
test
xchg
rcrl
cmp
sub
int
ror
jecxz
sub
outsl
aam
or
cld
les
ret
jne
jb
or
sub
inc
fisttpll
adc
fstps
loopne
mov
scas
sar
jecxz
call
imul
jl
scas
cltd
lea
jp
insl
sub
adc
repz
or
rcll
addb
pop
orb
or
mov
stos
scas
sub
outsb
sub
dec
jo
push
repnz
cwtl
cltd
jb
mov
pop
xor
mov
cmc
sbb
adc
add
and
push
jnp
push
es
jge
aas
push
ficompl
fwait
pop
push
mov
cmp
imul
cmp
sbb
inc
jne
in
imul
cmp
cmp
add
jne
stos
lahf
stos
ss
push
push
daa
adc
and
scas
cmp
sub
mov
movsl
adc
pop
push
lcall
xor
and
push
or
lds
cmpsl
loop
insb
les
sbb
mov
out
push
rcrl
popa
test
in
pop
xor
out
sub
je
in
lret
sbb
sti
push
pop
mov
outsl
inc
xchg
jae
mov
repz
add
out
jo
repnz
lret
mov
or
ret
int3
sbb
in
stos
push
mov
add
cltd
icebp
sbb
xchg
xchg
notb
mov
idiv
sub
add
add
fcomps
cmp
xchg
imul
add
mov
push
out
aaa
scas
or
fs
je
or
or
stos
jbe
adc
cmpsb
xlat
ja
arpl
sub
push
mov
add
ret
loope
int3
push
mov
cmp
jmp
sub
es
xchg
in
lret
xchg
adc
fisttpll
pop
push
xchg
aad
push
mov
fwait
adc
inc
xchg
scas
fidivs
xor
fwait
sti
and
ret
mov
mov
out
pusha
mov
mov
in
roll
call
jae
sbb
sahf
inc
loope
mov
jae
aad
sahf
mov
and
orl
adc
pop
stos
sub
jo
int3
xlat
dec
outsl
in
das
jl
xor
adc
xchg
int3
push
lds
push
xor
test
cmpsl
es
fcmove
xor
iret
and
push
movsb
call
mov
test
jne
test
mov
and
xor
or
cmp
ljmp
frstor
flds
icebp
imul
cmp
cmp
pop
rcrl
lds
cmp
mov
loope
lcall
add
pop
rcll
dec
lret
jge
jp
rolb
mov
dec
pop
in
adc
movb
and
inc
mov
sub
push
addl
roll
sbb
xchg
ss
xor
mov
push
aam
ds
or
hlt
sub
adc
gs
push
into
mov
mov
cs
daa
call
mov
xchg
adc
and
gs
cmpsb
mov
lods
fisttps
and
loope
push
push
jl
push
jg
mov
adc
cltd
push
in
mov
je
jecxz
fld
sbb
sbb
push
push
lret
test
lds
xchg
adc
ret
shll
lret
inc
ret
dec
imul
dec
hlt
leave
je
jg
cli
dec
cmc
mov
sahf
cmp
repnz
mov
sub
lea
hlt
sub
jo
xchg
xor
shl
lahf
push
mov
xchg
push
shlb
add
cld
push
and
pop
negl
je
out
jnp
rclb
dec
add
push
jne
ja
shll
dec
outsb
ret
push
mov
cltd
outsl
insl
cmp
add
lods
ljmp
push
mov
mov
clc
fstl
fwait
idivl
test
dec
aas
push
arpl
jno
dec
ret
pushf
mov
mov
pop
inc
mov
mov
mov
cltd
and
aaa
add
pushf
popa
jbe
int
scas
push
outsl
dec
les
xchg
inc
fs
adc
and
or
push
sub
add
les
add
xchg
mov
inc
sub
test
stos
push
jns
xchg
scas
ss
insl
sarl
std
inc
lahf
jne
and
sti
ja
sbb
shlb
cltd
aam
iret
cmp
idivl
int
and
add
sbb
pop
movsl
out
lock
test
fldcw
add
pusha
xor
push
sbb
sub
push
into
and
cmp
add
push
insl
mov
das
cmc
jb
movsb
sbb
or
lret
aam
cmc
xchg
repz
loope
cmpb
jl
dec
cli
pop
psubw
adc
rcll
mov
jae
inc
mov
jp
pushf
lcall
leave
sbb
sbbl
mov
jbe
addr16
loope
mov
ret
mov
imul
mov
leave
adc
jno
push
out
in
sbb
cmp
std
adcl
les
jne
outsl
loopne
rclb
mov
mov
lock
mov
jno
sub
cmp
adc
imul
mov
xor
push
and
pop
pop
inc
scas
push
push
mov
dec
xor
es
inc
xor
incb
iret
pop
outsb
or
sub
mov
pusha
shrb
push
push
jmp
fidivl
pop
daa
ucomiss
and
lods
ficompl
add
insl
pop
movsb
mov
inc
inc
jbe
jno
adc
ja
jmp
jns
in
ss
sub
xorb
xor
lods
ja
ret
rcrl
cmc
jge
sbb
dec
enter
jge
insb
stos
clc
sbb
fisttps
or
fldcw
mov
ret
xchg
testb
adc
jno
imul
cli
push
sbbb
andl
xchg
dec
mov
and
jb
sub
push
cmp
pop
test
add
jmp
out
mov
ret
push
std
and
xchg
mov
cmp
sarl
add
not
cwtl
cs
xor
test
and
lret
xchg
pop
jno
sub
pop
sub
cltd
scas
mov
mov
mov
mov
gs
jne
es
pop
and
inc
dec
loopne
pushf
adc
out
dec
ja
and
lock
dec
mov
mov
sub
xchg
and
out
inc
adc
mov
mov
sbb
sti
dec
push
cli
dec
stos
mov
sbb
or
ret
mov
in
stc
sbb
dec
add
cmp
idivb
jnp
mov
jecxz
cmp
aad
in
dec
test
push
push
push
pop
inc
fisubl
xchg
push
dec
sub
ret
cmp
mov
jecxz
mov
loope
jg
sarl
jns,pt
in
sbb
or
repnz
in
xchg
cmp
ljmp
fsubl
and
insl
repnz
out
cmp
jb
cwtl
in
push
mov
outsl
adc
sbb
clc
pusha
sub
jl
dec
or
push
mov
xor
cmp
dec
imul
aaa
scas
cmc
popf
pop
cwtl
xor
inc
or
sbb
adc
rcr
cmp
loopne
lret
jmp
pop
lret
jg
push
ret
pusha
pusha
mov
pop
imul
push
sub
push
pop
jbe
jns
insl
adc
test
xchg
mov
lret
das
sub
scas
push
inc
into
sub
mov
mov
and
mov
and
sbb
fadds
jnp
inc
sub
dec
cwtl
push
cli
ss
adc
cmpsl
cmpl
or
mov
aaa
jl
icebp
or
mov
or
ret
mov
and
shrb
push
and
push
in
insb
aad
ret
add
mov
mov
jns
in
pop
mov
dec
xchg
divb
out
cmp
jno
mov
cmpsb
jge
or
fcomp
sbb
dec
decl
pop
mov
loop
mov
pop
sub
adc
cmp
ficomps
cmp
hlt
mov
cmpsl
cmp
sarl
add
push
push
mov
jb
mov
xor
cmc
setae
jl
xchg
cltd
fldcw
sbb
mov
mov
push
outsl
inc
jnp
pop
push
leave
out
cmp
sbb
xchg
adc
inc
mov
in
scas
daa
inc
frstor
adc
test
mov
and
in
fiaddl
jl
cmpsb
ss
dec
shlb
in
fsubrl
xor
rclb
shlb
std
out
dec
incb
push
int
push
dec
dec
es
aad
mov
mov
adc
or
push
les
ss
test
xchg
sbb
in
jg
out
test
cmp
ljmp
adc
and
imul
xor
xor
mov
xchg
mov
mov
enter
jecxz
aas
jp
popa
fldcw
add
mov
jmp
pushf
jmp
movsl
insb
inc
test
xchg
xchg
mov
jge
popa
pop
push
cltd
mov
jecxz
pop
cmp
addr16
dec
mov
fwait
popf
sbb
sub
inc
lahf
stos
mov
pop
jmp
popa
jno
sbb
test
or
jp
in
push
cld
mov
or
mov
xor
pop
sahf
push
mov
in
pop
sbb
lcall
or
push
mov
push
cmp
pushf
ja
mov
aaa
int
mov
rcrl
cmp
flds
xor
push
mov
sub
sbbl
jns
insl
xor
in
scas
and
sub
enter
in
test
and
mov
pop
xchg
std
out
mov
cmp
subb
sahf
jo
pop
subb
dec
dec
fstpl
pop
inc
and
lods
or
out
mov
xchg
inc
into
pop
jmp
cmp
push
insw
out
xchg
aam
jne
dec
cmpsl
lock
inc
lock
int
out
movsl
in
add
jns
add
hlt
shrl
jmp
dec
add
mov
icebp
jl
out
push
call
data16
mov
pop
pop
mov
bound
or
shrb
je
push
ss
rol
add
cmp
cmp
or
nop
movsb
int
sbb
shufps
dec
test
ja
jnp
push
push
stc
mov
shr
sub
mov
mov
fadds
sub
in
adc
loope
cmp
out
cmp
push
insb
ffreep
loopne
out
lods
out
repz
xor
mov
xchg
jae
fcoms
and
adc
js
into
aaa
dec
rcrb
dec
pop
sub
push
jmp
mov
xchg
aaa
xlat
sahf
fistl
mov
lret
ja
cld
mov
pop
gs
pushf
jmp
aad
jmp
or
mov
pop
or
xor
or
je
pop
mov
sub
mov
lods
xor
or
mov
cs
jb,pt
push
scas
xchg
out
inc
pop
adc
imull
pop
push
dec
jp
xor
xchg
mov
xor
mov
sbb
imull
in
pop
iret
and
cs
int3
scas
push
les
test
jno
cmc
mov
add
pushf
mov
push
push
jbe
jmp
xchg
xchg
sub
movsb
ffreep
decl
and
out
dec
sahf
shlb
jmp
inc
sub
lcall
push
outsw
roll
cwtl
cmpsl
dec
pop
mov
xor
shrl
xchg
scas
pop
jmp
jp
movsl
fists
ds
inc
push
loopne
dec
cld
and
in
gs
inc
popf
cli
mov
sub
inc
and
xor
inc
addr16
sbb
lods
mov
or
adc
sbb
jp
xchg
shlb
into
pop
sub
movl
rol
iret
movsl
jb
sub
repnz
inc
push
pop
dec
pop
adc
fwait
dec
fldenv
ret
push
lods
mov
mov
or
out
mov
aam
inc
leave
ficoml
mov
dec
add
push
cli
push
xchg
pop
lds
aam
cmp
xlat
fs
test
fmulp
mov
push
mov
push
dec
hlt
add
int3
sbbl
sbb
in
pop
mul
jbe
pop
sahf
stos
stc
data16
cmp
pushf
jmp
xor
push
cwtl
pop
test
lods
jae
test
aaa
xchg
xor
pop
in
test
out
mov
and
pop
add
mov
insb
xchg
add
mov
outsb
push
dec
xchg
xor
and
je
jl
cmpsl
xor
loop
scas
cwtl
insl
mov
push
inc
or
cmp
mov
xchg
dec
aam
cwtl
lods
push
jmp
add
fldl
int
sub
and
jp
cmp
jg
lret
call
bnd
das
adc
jno
sub
popf
adc
es
push
mov
fcompl
inc
sub
mov
push
cmp
and
jle
xor
icebp
push
xchg
jne
loope,pt
iret
jne
aam
or
pop
and
fs
xor
enter
push
clc
aas
movl
sub
xor
cltd
fmulp
decl
sbb
or
fwait
adc
xchg
gs
mov
jbe
inc
lcall
add
popa
and
out
or
and
ret
and
and
adc
sub
jle
push
push
dec
sbb
arpl
movsb
fstpl
xor
jge
sub
adc
inc
pop
cmp
testb
data16
test
and
adc
popf
pop
xchg
gs
lahf
movsb
leave
mov
jnp
push
mov
xor
inc
loope
cmp
aam
and
ret
test
stos
push
movsb
nop
shll
inc
icebp
jae
mov
mov
rorb
rorl
ffreep
pushf
or
xor
xchg
idivl
jnp
mov
add
popa
testl
push
test
cmp
mov
dec
sbb
and
test
imul
mov
dec
dec
insl
or
repz
jno
lods
std
dec
popf
mov
fcmovnu
insb
dec
sbb
push
cmp
xor
ret
and
mov
lcall
shr
pop
insl
dec
test
or
in
loopne
sbb
fdivs
lods
cmp
mov
rcrl
dec
popa
pop
jle
inc
imul
icebp
ljmp
rclb
mov
popf
int
hlt
jno
add
mov
mov
loope
cmp
add
mov
jbe
mov
ljmp
inc
adc
or
test
subl
mov
push
lret
mov
mov
mov
xchg
cmc
jg
inc
xchg
inc
or
testb
pop
xchg
lret
jmp
ljmp
or
fwait
add
or
shll
out
insl
mov
add
mov
int
or
pop
pushf
rorb
mov
push
mov
test
pop
lods
sbb
jmp
mov
jb
dec
xchg
mulb
in
into
fstpt
pushf
fstps
jmp
cmp
mov
xchg
popa
jb
shll
sub
idiv
out
sbb
pushl
and
fcomps
pop
js
adc
push
jecxz
adc
fstps
jb
cwtl
rolb
movsb
sub
add
repnz
ss
xor
inc
lock
call
cwtl
xor
push
dec
cmp
pop
das
jae
nop
mov
dec
add
aaa
or
shlb
ja
fistps
xor
cli
jecxz
fcoms
lcall
add
stos
or
dec
inc
jg
xchg
imul
sbb
cmc
ds
cmp
dec
dec
in
testl
ja
xor
adc
xlat
or
out
daa
fbld
ljmp
and
gs
push
jbe
mov
mov
jle
gs
push
add
inc
test
sub
pop
push
es
inc
popa
in
fs
test
sub
push
jno
dec
lahf
sbb
hlt
insl
inc
sub
add
lcall
jmp
lds
mov
pop
inc
movl
fbstp
jecxz
xchg
out
jl
pop
sbb
lock
mov
xor
push
inc
fs
mov
and
ljmp
sbb
mov
repnz
jge
jl
push
add
shlb
jge
mov
adc
sbb
add
and
test
lods
out
cld
loop
in
mov
pop
and
add
scas
mov
lds
shll
shlb
daa
adc
cmp
ficomps
clc
or
inc
push
jb
cmp
inc
jns
pop
adc
inc
cmp
fildl
sahf
out
xorl
imul
inc
lret
inc
dec
call
stos
pop
pop
jg
int3
insb
pop
mov
fs
into
push
out
sub
cmp
add
adc
jo
mov
jg,pn
or
cmp
movsb
ret
jg
rclb
and
pop
in
inc
cmp
stos
xor
push
in
pop
adc
sub
dec
xchg
and
jp
xorb
dec
call
daa
test
jnp
mov
rcll
out
xlat
ret
test
mov
outsb
dec
cmp
or
shr
xchg
outsl
shlb
sbb
dec
pusha
push
add
xchg
aaa
scas
mov
inc
mov
push
push
lods
mov
daa
jns
jo
add
mov
in
dec
or
outsb
add
ds
sub
sbb
jp
ja
sbb
clc
lret
fbld
jno
jmp
test
mov
mov
into
and
std
cmpsl
and
es
jb
and
push
inc
inc
push
add
xchg
movsl
fs
iret
cltd
push
mov
repz
dec
and
cmp
sbb
imul
add
pop
loopne
nop
scas
mov
movsl
jecxz
popa
hlt
out
sub
adc
jg
add
adc
mov
jl
push
sub
imul
push
push
pop
popa
and
fs
into
mov
cmc
add
or
mov
mov
push
ja
adc
mov
into
cmpsb
stos
in
add
dec
sbb
or
add
inc
jg
cmpsb
and
push
mov
shrl
sub
mov
in
mov
das
ror
xchg
mov
loope
add
pushf
adc
es
sbb
jne
jl
sbb
dec
mov
xchg
add
mov
jge
mov
popf
inc
add
push
cli
in
shr
shlb
jne
mov
pushf
shrl
inc
daa
push
xor
in
imul
jo
test
fcmovnb
std
or
cmp
jmp
fldl
xchg
int3
andb
daa
mov
sbb
daa
aaa
or
jecxz
inc
jecxz
cltd
dec
xchg
jmp
jns
cmpsb
insb
test
in
inc
ret
jg
lods
pop
aad
pop
pop
push
inc
adc
fs
add
jbe
dec
bound
mov
pushf
push
cld
lods
rol
lods
call
cmc
pop
xchg
xchg
jge
stc
out
dec
mov
jge
mov
or
jne
dec
add
xor
mov
daa
lea
xchg
mov
and
push
cwtl
in
inc
das
aam
in
icebp
or
push
js
xlat
cmpsb
mov
lcall
aad
scas
mov
insb
leave
in
mov
sbb
ss
fnstcw
or
lcall
data16
cld
shr
adc
jl
mov
xchg
mov
mov
pop
adc
sub
jmp
outsl
lahf
push
xor
inc
xchg
mov
outsb
shr
roll
mov
sub
ja
lret
lods
clc
loop
and
repz
xchg
pop
push
mov
mov
in
cld
ret
inc
lcall
leave
or
lcall
les
aam
dec
jno
js
ret
xchg
hlt
add
fs
mov
popa
shr
lahf
ficompl
pop
cmp
push
mov
in
outsb
or
pushf
mov
sub
jbe
das
or
stos
and
cmp
icebp
mov
js
divl
add
jb
push
enter
push
aad
aad
dec
sub
orl
mov
cmp
ja
stos
and
and
aad
aad
aam
push
and
xor
les
iret
stos
leave
imul
add
or
cmpsl
mov
repz
fwait
or
cmpsl
xchg
iret
js
jne
icebp
aad
push
mov
adc
mov
dec
cmp
xor
pusha
sbb
jecxz,pn
aam
popa
xchg
outsl
adc
dec
push
mov
imul
hlt
pusha
arpl
icebp
mov
jle
or
push
xorl
xlat
std
push
adc
inc
adc
mov
rolb
test
enter
push
inc
stc
test
mov
sub
and
testb
xchg
es
stc
push
insl
mov
lea
jbe
jl
mov
dec
ds
push
xchg
pusha
xchg
shlb
add
push
push
je
loop
add
pusha
add
push
insl
mov
arpl
pop
fdivrl
addl
adc
xor
adc
lret
dec
xchg
cmc
loop
in
in
daa
add
push
fisubrl
out
pop
mov
xchg
aaa
out
and
out
mov
xchg
les
inc
lcall
mov
cmp
xor
in
dec
push
jo
xor
inc
dec
mov
dec
pop
jmp
adc
inc
sub
sbb
mov
mov
sub
rcll
test
and
out
imul
in
xchg
or
nop
and
test
in
dec
jno
cli
pop
shll
test
sahf
jl
jbe
jb
ljmp
scas
dec
out
test
icebp
pop
repnz
adc
add
not
xchg
xchg
cmp
movsl
lds
shlb
mov
xor
sub
mov
dec
inc
daa
push
pop
jecxz
jge
xchg
cmp
xchg
popf
lock
lahf
inc
pop
jo
out
xor
inc
mov
cmp
stos
pop
je
or
push
sub
das
roll
mov
push
cltd
jnp
lret
jg
leave
lods
sbb
push
arpl
pusha
sub
xchg
sahf
sub
movsb
and
test
icebp
xlat
dec
mov
push
cmp
sub
repnz
int3
dec
je
and
pop
shlb
mov
jno
mov
fcoms
adc
daa
inc
sub
add
leave
sub
adc
int3
or
inc
fcomps
fisubl
sbb
orb
push
inc
imul
in
lock
or
adc
imul
ds
pusha
scas
xchg
int3
sarb
ss
pushf
js
outsl
push
add
sti
pop
inc
mov
xchg
mov
lret
jns
into
xlat
inc
outsb
fnsave
leave
lods
xchg
enter
xchg
mov
mov
xlat
scas
cmp
mov
add
dec
inc
cltd
hlt
aas
inc
sbb
fwait
lcall
lock
popa
mov
push
test
mov
sbb
cmpsb
in
cli
adcb
repz
inc
adc
sub
in
inc
mov
push
rcrb
push
mov
xchg
outsb
mov
nop
clc
cmp
inc
jmp
inc
lds
pop
jge
cwtl
ljmp
outsl
in
inc
sbb
jae
loope
leave
push
push
jb
and
loope
or
xchg
jle
push
hlt
cltd
popf
into
aas
mov
xor
adc
xor
mov
pop
jae
inc
add
add
das
pushf
lcall
xor
es
push
insb
mov
push
int3
popf
jmp
jge
clc
xor
mov
jl
cmpsb
dec
fistps
mov
imul
and
sub
std
mov
repnz
and
das
push
and
mov
mov
xchg
push
add
out
or
in
in
jbe
xchg
fldl
aad
das
dec
jg
ss
sbb
xchg
mov
or
sahf
mov
roll
dec
orl
xchg
xchg
push
popa
sub
inc
out
repnz
enter
insb
je
sahf
mov
xchg
lods
mov
and
xorl
pop
inc
dec
push
jbe
pop
fisubrs
sub
aaa
push
cwtl
push
popf
cs
or
cmp
ficompl
inc
call
adc
xchg
and
jb
add
mov
sahf
push
jo
mov
shlb
mov
adc
shl
fcoml
xchg
cmp
das
cmp
rcrl
jmp
adc
jns
mov
xor
mov
sub
push
stos
call
ljmp
mov
or
pop
and
repnz
xor
cld
popa
popa
jmp
pop
and
jl
hlt
push
scas
js
in
ret
pop
push
push
xchg
lahf
cwtl
xor
out
jecxz
in
notb
movsb
fsubs
fwait
mov
mov
xor
and
stc
pop
out
test
pop
mulb
pop
vmread
fnsave
daa
negb
loopne
sub
inc
js
pushf
mov
mov
shr
lahf
pop
cs
and
sbb
or
shll
xor
aaa
xchg
mov
addb
push
jl
xlat
inc
loopne
mov
add
loop
iret
sbb
lods
call
popa
mov
mov
test
rcrl
adc
add
inc
mov
cs
gs
fldln2
inc
popf
push
dec
xor
mov
adc
cmc
xchg
and
cmp
out
add
andl
movsb
jge
mov
xor
push
sbb
loope
int3
sbb
xlat
jmp
push
push
or
arpl
iret
mov
xor
cltd
clc
out
push
pushf
fwait
add
stos
mov
mov
dec
out
pop
aaa
mov
pop
mov
push
ret
xchg
std
andb
push
clc
push
jge
jae
pop
jae
leave
mov
lret
bound
into
sti
xchg
sub
mov
subl
mov
mov
repnz
xchg
pop
js
subb
push
cmp
cmpsl
mov
push
fistl
jle
test
loop
dec
lods
test
sbb
int
mov
xchg
nop
lock
add
adc
pop
pop
inc
addb
cmp
sbb
mov
out
cwtl
inc
imul
xchg
test
cld
ret
jnp
jnp
push
dec
outsl
sbb
shrb
aad
pushf
or
mov
fdivl
fsubrs
xor
icebp
mov
cmp
inc
fs
data16
inc
mov
ljmp
leave
ret
fs
in
pop
fistl
stc
sbb
addr16
divb
mov
cmpsb
pushf
xchg
jno
push
outsl
test
lods
out
fidivs
xchg
pop
jl
and
push
push
mov
push
xchg
fildll
cmp
cmpsl
lret
push
pop
dec
lds
mov
hlt
imul
cmp
push
mov
xchg
imul
movl
incl
or
inc
sbb
mov
push
push
push
or
aam
inc
sub
inc
push
mov
jg
aad
outsb
dec
lods
scas
jmp
js
int
sahf
sub
pop
stc
inc
push
xchg
lods
mov
jecxz
lret
cmp
aam
pop
push
enter
xchg
sub
push
push
pop
out
loopne
mov
outsl
and
aaa
cli
xor
mov
mov
jge
mov
inc
inc
xor
pop
jp
scas
pusha
pop
xchg
rol
mov
inc
fnsave
cld
mov
aas
dec
cltd
add
daa
roll
mull
arpl
lods
cmpsb
cmp
add
loop
push
xchg
lods
cmp
mov
add
ret
xor
mov
or
sub
add
pop
icebp
rol
and
jmp
lds
fimull
inc
insl
insl
test
repnz
cmp
xchg
stc
mov
xchg
sbb
mov
mov
addr16
add
loop
in
jmp
pop
stc
aaa
push
add
fildl
adc
int3
pop
insb
xchg
push
popa
cmp
into
and
add
outsl
popa
hlt
mov
loopne
lret
jns
sbb
inc
je
inc
jl
add
std
mov
std
mov
jmp
fists
ret
loopne
test
lods
pop
incl
mov
scas
or
movsl
inc
or
cmp
inc
push
mov
xlat
sbb
mov
mov
jno
sarb
add
jp
lret
or
pushf
lock
int3
inc
cs
jns
jmp
cltd
mov
xchg
add
adc
and
lock
imulb
stos
jge
or
lods
and
push
ja
stos
push
imul
fwait
aad
cmc
sbb
imul
lret
dec
jmp
jne
xchg
lahf
sbb
push
adc
pop
jmp
mov
cmp
push
or
push
lods
movzbl
push
push
ds
es
add
xor
loop
imul
xor
fbld
arpl
leave
mov
jno
xchg
push
cmp
ret
repz
push
ret
cmpsb
btcl
dec
adc
shrl
xchg
mov
sub
int
and
push
sub
in
out
jns
or
in
divb
dec
add
cmp
push
rcrl
fistpll
orb
cmp
imul
adc
mov
out
sbb
ret
outsl
cwtl
ljmp
xchg
cltd
inc
jne
cmp
xor
mov
dec
sub
scas
pop
shll
adc
sbb
jmp
stos
or
fsubl
scas
adc
stos
inc
addr16
imul
adc
aas
dec
js
jns
dec
sub
and
fsubrl
jbe
mov
xchg
das
jns
mov
fs
dec
pop
scas
cwtl
aad
hlt
sub
addr16
enter
out
adc
loop
inc
inc
push
sub
imul
and
fisubs
pop
ret
adc
cmc
jnp
pop
xor
js
sbb
sbb
mov
cmp
insl
and
pop
insl
clc
mov
mov
mov
cmp
aas
lret
loopne
mov
out
shl
push
and
inc
push
mov
cmp
js
push
std
inc
daa
push
out
and
push
or
cmpsl
and
add
stos
jnp
lret
jg
dec
mov
mov
scas
loop
dec
mov
enter
pushf
mov
loope
xor
sub
popa
aam
xchg
and
xchg
scas
sbb
lds
outsb
notl
ficomps
scas
push
decl
adc
pop
ja
sahf
xor
js
xchg
cmpsl
lcall
pop
cmp
in
and
lcall
je
push
xor
icebp
cmpsl
roll
mov
fildl
mov
mov
sbb
mov
out
mov
mov
push
int3
arpl
add
or
lods
fld
mov
pop
dec
and
cmp
popf
in
sub
adcl
adc
loopne
push
sbb
rclb
lock
andl
and
push
cmp
push
test
les
rorb
and
out
push
or
pushf
add
and
ljmp
shrl
xorl
ret
adc
xor
imul
scas
divb
pop
incl
dec
filds
loop
push
in
mov
pop
or
sahf
pushw
dec
test
aas
js
bound
cmp
test
adc
mov
mov
adc
mov
add
sbb
xchg
mov
cmp
mov
cmp
icebp
imul
xchg
mov
in
xchg
movb
cmp
dec
sbb
into
lds
lret
in
test
sbb
pop
out
pop
xchg
push
dec
aas
push
movb
rcr
into
ret
cwtl
mov
shlb
lds
lea
clc
sbb
push
jnp
adc
addr16
in
icebp
dec
jle
jns
mov
shlb
or
xchg
or
mov
cmp
icebp
fistpll
cmc
rorl
adc
lret
xor
lret
in
in
hlt
inc
ja
inc
pop
scas
pop
mov
pop
stc
pop
ljmp
inc
pop
inc
es
and
std
push
fwait
mov
fwait
jmp
out
sbb
dec
adc
subb
and
in
xchg
pop
es
push
mov
push
test
dec
icebp
and
cltd
jae
add
fyl2xp1
lret
test
mov
andl
ret
dec
sub
inc
shl
lods
test
xchg
cmpsb
pop
sbb
pop
pop
fimuls
mov
push
ljmp
ss
lret
fwait
scas
adc
and
lock
pop
and
sub
xor
clc
das
xchg
mov
scas
sarb
mov
cmp
clc
pop
jge
outsl
sarb
mov
popw
pop
pop
sbb
dec
xchg
adc
ljmp
cmp
nop
call
xor
hlt
mulb
aaa
pushf
outsb
fbstp
mov
dec
pop
aad
shrl
fsub
mov
jo
mov
inc
and
movsl
mov
imulb
rol
pop
adc
ltr
mov
adcl
out
lcall
stos
rcr
push
testl
outsb
sti
stos
mov
out
daa
insl
push
cmp
mov
jl
daa
mov
sub
mov
and
jb
orl
cmp
fbstp
dec
nop
aam
mov
jg,pt
push
mov
xor
jecxz
sbb
out
mov
shlb
mov
out
imul
notl
out
daa
notl
sbb
xchg
neg
int
and
test
cld
mov
aas
dec
jmp
sub
ret
jle
sbb
and
jmp
xor
or
fsubrs
dec
sarb
cmpsb
scas
inc
cwtl
xchg
add
jae
gs
inc
and
mov
lods
aaa
daa
sti
fwait
aaa
das
push
sbbb
adc
mov
and
shl
inc
dec
scas
rcrb
repnz
xor
or
add
xchg
or
mov
adc
lods
sbb
xchg
mov
mov
leave
push
aaa
push
repnz
mov
or
sbb
jnp
sub
push
pop
mov
xlat
mov
sarl
push
les
ret
jge
dec
jae
mov
dec
data16
mov
fnsave
clc
pop
cmpsl
pop
mov
sub
lret
push
subb
es
push
movsb
pop
rol
lock
mov
pop
imul
call
lcall
add
into
push
xchg
hlt
and
mov
sbb
mov
fistps
mov
out
jle
imul
or
sbb
jl
add
push
inc
jp
jecxz
inc
jg
insb
push
cmp
add
mov
adc
dec
das
add
in
clc
lea
leave
stc
mov
inc
es
mov
dec
fistl
mov
push
stos
push
xor
add
ja
stc
mov
inc
mov
jg
sub
or
daa
adc
adc
or
inc
push
xlat
or
cli
push
call
xor
xchg
call
mov
stos
out
push
push
pop
jle
aas
jmp
cmpsl
lods
imul
pop
ret
xchg
push
mov
pushf
mov
in
gs
les
sbb
pop
arpl
push
mov
mov
into
pop
in
dec
jbe
push
adc
sbb
jmp
or
adc
outsl
pop
iret
movsb
cmp
inc
jge
and
cld
jg
aaa
inc
jle
xor
mov
in
sbb
ljmp
movsl
stos
lods
dec
ja
cmp
and
loop
sbb
xchg
and
mov
add
dec
or
mov
fdivs
das
imul
lods
inc
pushf
test
xchg
push
aad
xor
mov
cmpsl
sub
in
pop
movntps
mov
sub
imul
fs
orb
outsb
jmp
es
arpl
sbb
cs
cmpsl
int3
jecxz
jae
fnstenv
hlt
das
push
xchg
fmull
sub
xchg
push
adc
je
xchg
bnd
out
fs
xor
notl
out
push
dec
fidivs
insl
sub
sub
stos
js
sbb
dec
dec
hlt
pusha
sbb
mov
cmpsb
bound
jge
scas
sub
pop
pop
or
mov
cmp
ds
mov
movl
repz
mov
shlb
mov
xor
pop
and
aad
mov
addr16
es
sub
and
lods
sahf
mov
sbb
sbb
add
mov
dec
cmpsl
rorb
out
ss
inc
and
fbld
mov
xchg
lcall
cmc
test
inc
in
stos
mov
mov
xor
pushf
inc
cli
sbb
mov
int
daa
pushf
mov
jp
jle
mov
sbb
scas
lret
orl
scas
xchg
pop
fmull
push
xor
outsb
das
mov
xchg
gs
push
dec
mov
mov
in
scas
dec
test
push
lcall
sub
pop
lahf
pushf
push
lcall
push
xor
sub
repz
fs
add
ds
cmpb
dec
fsts
dec
pop
stc
lods
jb
bsr
scas
push
dec
lahf
ret
iret
pop
inc
sbb
or
mov
addr16
xchg
or
repz
push
nop
or
adc
dec
pop
sub
mov
adc
mov
shlb
mov
jb
xchg
adcb
pop
movsb
sti
jl
lret
mov
aaa
daa
bswap
ret
shll
dec
cwtl
mov
bound
inc
mov
aam
mov
rcrb
mov
aad
xchg
rcrl
aam
xchg
stos
jnp
jb
pop
sbb
mov
fwait
xchg
jnp
mov
sarb
dec
mov
jo
and
std
pop
icebp
test
push
fsubl
adc
loopne
jmp
std
and
or
loopne
cmp
stc
xor
inc
popa
pop
mov
xchg
inc
push
das
inc
rcl
xchg
pop
outsl
loope
je
cmp
jl
sbb
cli
andb
div
outsb
xchg
or
push
and
push
mov
pop
adcb
mov
fdivrs
icebp
les
repz
addr16
xchg
stos
push
hlt
or
outsl
rorb
popf
enter
test
hlt
repz
insb
fisubl
adc
cs
push
fmul
pop
jecxz
sub
fcmovnb
repz
call
pop
rclb
add
test
mov
mov
sbb
pop
sub
scas
pop
dec
xchg
ljmp
push
adcb
les
aad
xor
adc
pop
scas
mov
mov
xchg
stc
push
std
xchg
int3
sbb
jge
xlat
loop
jge
inc
push
sbb
test
pop
push
xor
or
sub
lods
scas
outsb
loop
pop
and
into
adc
fsubs
sbbl
sub
jmp
and
aas
test
sub
xor
jge
std
push
dec
fucomip
jae
mov
out
imul
stc
movb
push
arpl
imull
negl
xchg
aam
xchg
push
ret
fs
not
ss
pop
mov
iret
add
scas
add
out
hlt
jecxz
pop
sarb
int
xchg
pop
push
popa
push
lcall
add
mov
stos
push
cmpsl
pushf
movsb
sbb
and
mov
lret
mov
loop
imul
adc
add
and
mov
addr16
imul
xor
leave
sti
inc
cmp
ja
repnz
addr16
xchg
adc
push
test
jmp
out
xor
dec
movsl
adc
insl
sbb
push
loop
pushf
outsl
jne
pop
sub
mov
xor
dec
lods
mov
and
mov
sub
iret
push
adc
mov
push
repz
jecxz
push
mov
out
jmp
mov
movsl
jbe
test
ret
ljmp
loop
shrb
test
jl
ret
hlt
fisttps
lock
test
dec
mov
and
pop
mov
jo
pop
adc
sti
mov
popf
sub
adc
pop
ret
xor
dec
fstl
in
aas
inc
cmp
fmuls
outsl
pop
and
xchg
mov
inc
sub
insl
push
xchg
repnz
les
stc
jmp
imul
xor
push
mov
sahf
stc
pop
add
fwait
inc
xor
daa
popa
xchg
xchg
mov
or
cmpsl
in
pop
or
xor
xlat
and
adc
xor
mov
test
inc
jne
ljmp
mov
adc
arpl
ret
jne
inc
pop
jmp
scas
mov
or
lock
std
jnp
mov
outsb
les
fsincos
jl
pop
lret
pop
icebp
mov
mov
gs
push
push
dec
mov
out
sub
and
fisttpl
fidivs
fnstsw
lea
cmc
fimull
sti
sub
xor
shlb
mov
addl
mov
out
dec
pop
and
clc
jns
mov
fs
inc
and
popf
clc
in
notl
repnz
aam
push
and
mov
ja
mov
lcall
fcmovnbe
fmuls
out
jae
add
adc
js
cmpsl
pop
pop
addl
and
and
add
enter
dec
xchg
mov
push
data16
or
push
subl
test
pushf
add
cwtl
ljmp
lcall
pop
push
fldcw
xor
insb
fistpl
pop
dec
xchg
and
or
push
dec
add
cmpl
aad
mov
mov
mov
mov
enter
add
mov
leave
imul
and
and
add
out
push
out
es
fildl
adc
clc
roll
aam
adc
xorb
mov
mov
dec
pop
ror
jge
dec
test
shll
xor
arpl
or
pop
pop
imul
dec
adc
push
les
push
popf
inc
jle
xor
pop
dec
dec
xor
lods
push
ljmp
arpl
adc
fcoml
sahf
add
imul
fistpll
nop
neg
adc
push
or
sbb
cmp
ret
cmpsl
test
imul
test
int
push
jl
in
ja
mov
mov
shlb
jnp
je
push
fucom
push
sbb
pop
cltd
addb
jno
loopne
xor
in
jle
fmul
stos
lahf
je
xor
loop
in
hlt
and
or
das
mov
dec
add
inc
push
mov
or
addr16
mov
mov
daa
push
push
cmp
and
fidivs
mov
xor
hlt
nop
or
je
insb
xor
inc
mov
mov
outsb
pop
pop
push
jae
faddl
xor
mov
sub
test
into
fdivr
xchg
aam
aaa
cld
sub
clc
xchg
inc
sub
jle
dec
adc
inc
inc
mov
xor
jmp
add
fsincos
dec
jl
sbb
pop
outsb
ljmp
out
fcmovbe
add
mov
mov
adc
xchg
dec
inc
test
cwtl
add
adc
imul
js
arpl
inc
adcw
push
xor
push
ficompl
mov
xchg
pop
mov
xchg
jo
lea
ss
pop
fs
in
mov
push
mov
int
cmpsl
ret
iret
data16
push
fmull
xchg
fidivrs
les
fdivl
adc
sub
add
out
or
call
jmp
jle
movsb
or
cmp
inc
rolb
push
loop
fldcw
pop
enter
inc
xchg
jb
outsb
jmp
test
sub
jp
fcmovu
xchg
js
mov
cmp
xchg
and
push
dec
mov
pop
pop
je
sub
shl
push
xchg
add
es
adc
jl
push
dec
test
add
mov
lret
jnp
adc
dec
daa
arpl
jmp
loope
aad
icebp
sub
dec
fdivrs
inc
inc
pop
scas
or
fs
cmp
or
add
test
adc
mov
dec
sbb
mov
fwait
mov
or
push
insl
cwtl
and
jb
int3
das
sbb
sbb
mov
mov
lcall
xchg
and
ret
jno
jo
decb
dec
mov
call
fisubl
outsl
mov
jbe
push
mov
in
mov
arpl
pop
sub
xor
cmc
xchg
dec
or
dec
pop
mov
fcomps
popa
adc
sarb
xor
inc
jmp
rcrb
inc
iret
mov
jae
jecxz
sbb
lret
xchg
adcl
mov
mov
hlt
mov
xor
scas
pop
fisttpll
xchg
mov
repz
sbb
sbb
adc
out
pop
jb
rorl
jmp
sub
jmp
ficoml
xor
or
shrl
dec
sub
dec
adc
je
aaa
dec
or
jnp
push
int
mov
mov
icebp
cmp
dec
data16
sbb
add
lea
fwait
or
ret
push
ljmp
xchg
stc
subl
mov
dec
data16
movsb
cmp
mov
dec
out
sbb
adc
addr16
push
aad
xchg
push
adc
es
cmpsl
mov
mov
mov
pop
fs
call
jg
push
inc
popa
push
gs
outsl
pop
mov
jge,pn
jmp
enter
clc
push
and
xchg
jne
mov
sarb
mov
inc
enter
mov
cmp
mov
xor
adc
inc
dec
mov
add
jmp
stos
pop
xorb
push
inc
or
push
repnz
fistpll
cli
arpl
in
mov
mov
mov
and
adcl
insl
jns
arpl
cld
daa
mov
pop
push
insl
fwait
arpl
loopne
outsb
dec
fwait
pop
mov
cmpsb
hlt
sbb
mov
cmp
hlt
hlt
pop
rcrl
loopne
daa
push
shll
xchg
dec
movsl
insl
push
lcall
push
test
inc
inc
ret
xchg
fmul
in
mov
lret
adc
xchg
add
xchg
outsl
xabort
add
scas
mov
cmpsb
and
and
and
mov
es
push
das
shrl
sbb
push
pop
cmpsb
push
push
mov
popf
stc
cmp
push
leave
popf
dec
sub
push
add
ftst
cmp
sub
dec
jb
mov
jne
pop
in
pushf
lcall
adcb
pop
xlat
aaa
fisubl
mov
aas
decl
inc
out
xchg
dec
ja
pop
leave
pop
popf
mov
out
jle
in
leave
adc
icebp
push
add
sarl
imulb
mov
jne
insl
imul
pop
add
or
mov
test
loop
fwait
scas
fisttps
sub
pop
test
mov
cmp
or
lret
xchg
inc
push
mov
mov
fucomip
xchg
sbb
sub
sti
jge
pop
sarl
or
cltd
push
jnp
inc
in
movsl
aad
and
xlat
pop
sahf
push
jecxz
add
mov
bound
rolb
mov
or
adc
xchg
mov
movsl
popl
mov
and
jle
jp
add
std
xchg
pop
repnz
fcomps
push
xchg
mov
or
jg
ret
mov
aad
mov
jne
mov
das
loope
inc
fs
jae
call
jmp
movsl
jmp
xchg
adc
adc
push
sahf
shll
stos
test
lods
scas
lods
adc
lret
call
cli
mov
xchg
dec
and
daa
rol
mov
cmpl
pop
test
jbe
jo
pop
test
lods
mov
movsl
jge
pop
jae
xchg
inc
dec
lods
push
fwait
inc
popa
mov
incb
add
push
rclb
sbb
pop
arpl
mov
add
pop
sbb
js
push
pop
pop
loop
cmp
or
xor
fninit
pop
popf
inc
inc
dec
cltd
xchg
jnp
jge
fnstsw
ret
mov
scas
xchg
es
pop
in
mov
sbbl
mov
stos
lock
adc
int
cld
pop
cmpsl
lret
xchg
lods
and
xor
shrl
insl
fmuls
adc
xchg
cmp
add
popa
fisttps
mov
ja
add
xor
adc
leave
shll
xchg
into
call
loopne
stc
sub
mov
sti
pop
cltd
movsl
add
mov
rcl
imul
mov
nop
shlb
leave
jl
add
les
adc
mov
push
pop
or
pop
ss
std
ljmp
push
fstpt
stos
int
inc
xorl
test
movsl
les
rclb
aam
in
cmp
fistpl
sbb
mov
scas
mov
out
cmp
jecxz
pop
sub
sbb
cwtl
cwtl
adc
aad
cmp
repz
fiadds
cmp
jg
test
shlb
push
mov
je
jno
mulb
cmp
and
jge
mov
pusha
dec
stc
test
xor
xchg
add
dec
fsincos
jmp
push
inc
popf
xchg
mov
ret
pop
loope
inc
push
in
das
into
insb
fsts
mov
test
retw
xchg
roll
adc
frstor
aaa
shl
test
sub
add
push
fistpll
test
fwait
shrl
mov
pushl
jg
daa
ja
add
xor
ja
lock
cwtl
test
xchg
pop
loopne
ja
das
and
loop
mov
lcall
jg
data16
jbe
enter
add
mov
push
and
cmp
jmp
lcall
rcrb
inc
cltd
and
and
sub
adc
and
loope
xchg
and
cmp
lret
adc
dec
xchg
fs
cli
imul
lods
sub
dec
inc
pop
pop
outsl
scas
or
and
in
data16
stc
cld
push
popl
pop
xor
les
pop
xchg
mov
cmpsl
hlt
inc
fidivrs
imul
mov
add
mov
js
fisubl
lret
and
cmpl
mov
js
mov
inc
imul
outsl
xlat
test
addr16
xlat
dec
loopne
movsl
mov
add
enter
stos
xor
xchg
inc
rorb
adc
out
subl
sub
icebp
ret
cltd
and
dec
ss
imul
dec
or
loopne
cmpl
out
xchg
jns
xor
lods
mov
movsl
and
mov
inc
ja
fcomi
and
test
lods
and
dec
test
mov
je
push
push
int
xchg
adc
sbb
je
les
lods
out
mov
xchg
or
cmp
push
les
ds
jmp
pop
add
fstps
dec
push
mov
sti
and
andb
inc
int
push
and
lea
es
notb
andl
add
mov
stos
sahf
bound
clc
int
les
bound
pop
addb
inc
or
popa
mov
inc
negl
jp
xchg
add
xchg
ficoml
movsb
pop
mov
cmp
flds
icebp
inc
jb
outsb
cmpsb
std
mov
scas
cwtl
push
xor
sub
sti
sbb
jb
in
cmpsl
jno
sub
sub
pop
mov
adc
xor
les
and
int
add
icebp
mov
outsl
lret
mov
cltd
leave
or
jnp
int3
pop
imul
xchg
adc
leave
jp
aam
cld
or
popw
sbb
mov
repnz
dec
mov
pushf
add
movsb
jg
dec
loopne
div
cmp
movsb
and
mov
ret
pop
mov
xlat
gs
mov
in
rcrl
inc
aas
pop
add
mov
pop
popf
add
and
fwait
cmp
xor
arpl
lods
add
add
idivb
xor
je
mov
jbe
aaa
pop
and
mov
pop
adc
jnp
outsl
test
jo
jp
iret
push
out
fstpt
mov
pop
shlb
xchg
lods
enter
xchg
push
inc
outsl
and
mov
cmp
push
or
pop
nop
sub
loopne
add
and
loopne
sub
cmpsl
add
in
js
mov
pusha
out
in
and
mov
pushf
mov
int
cli
jge
sbb
js
and
rcrl
stos
jle
leave
and
lcall
xorb
repz
inc
iret
daa
popf
pusha
imul
je
test
cld
insb
into
add
mov
sbbb
test
mov
xor
aas
jg
sahf
xchg
jmp
mov
sub
push
xor
fdivrl
cmp
add
lock
or
push
rcl
out
ja
adc
push
or
push
out
mov
in
push
leave
out
out
dec
cmp
xchg
adcb
out
out
fimuls
add
dec
fbld
xchg
adc
test
inc
xchg
data16
jl
pusha
xchg
fmull
test
lds
cli
scas
pushf
jo
enter
adc
movsl
test
out
inc
ret
cli
test
mov
mov
test
xchg
sbb
xlat
into
jb
ds
mov
int3
arpl
rcrl
loope
mov
push
push
jne
push
aam
jge
mov
popl
frstor
fidivrs
repz
popa
inc
pcmpeqb
jg
sbb
out
xchg
jb
xchg
sub
sub
test
push
inc
lock
push
and
push
mov
std
jns
icebp
faddl
ret
aad
jb
or
movaps
add
cld
lahf
in
add
xor
ja
pop
add
sahf
jmp
adc
push
mov
push
jp
fsubl
mov
and
and
into
add
inc
mul
repz
xchg
out
sbb
test
mov
pusha
sbb
mov
jne
pop
fldt
call
jle
xchg
ss
cmp
mov
adcl
cmc
fisubrl
dec
mov
es
lret
std
mov
inc
dec
mov
push
cld
or
test
and
shrb
test
jno
inc
ret
je
xor
aas
xchg
mov
inc
xchg
clc
mov
bound
pusha
inc
adc
hlt
popa
fisubrl
jbe
test
sbb
mov
sbb
jecxz
das
lds
arpl
pop
scas
sub
and
and
add
rcr
mov
mull
mov
decl
fisubrs
in
or
pushf
hlt
cmp
dec
nop
sub
pop
xchg
cmp
in
fistpll
fwait
sub
icebp
jle
mov
cmp
dec
and
pop
fldcw
dec
dec
or
not
clc
lods
lods
popf
cltd
and
xchg
jmp
cli
pop
ljmp
adcl
popa
cmp
cmp
mov
inc
stc
loopne
loop
and
jnp
xor
mov
jg
gs
jge
ficompl
cli
cmpb
bound
pop
movsb
fcmovbe
sub
arpl
or
xchg
mov
adc
cmp
arpl
dec
mov
in
ret
adc
stos
adc
test
pop
into
mov
jo
stos
lods
cmp
cltd
cmpsl
int
cmp
sbb
push
mov
push
mov
cwtl
int3
idivl
mov
stos
jbe
push
adc
into
call
ficompl
cmp
adc
idiv
cmp
mov
cwtl
test
inc
pop
testb
jnp
sahf
dec
and
cmp
insb
mov
pop
cmp
test
stos
cmp
mov
and
jl
adc
pop
mov
push
inc
adc
mov
or
imul
adc
lcall
pop
and
rclb
testl
or
mov
pop
xchg
xor
cmp
lret
jbe
fcompl
xchg
jg
mov
repnz
sub
pop
arpl
xor
push
loopne
repz
xor
add
lahf
loope
mov
or
push
icebp
xchg
fmulp
ret
sar
push
mov
mov
or
test
mov
ret
push
cmpsl
mov
sub
sub
pop
cmc
pop
dec
and
mov
shll
adc
jle
and
inc
sbb
ss
xor
bound
pop
xor
jb
fisttpll
data16
mov
mov
xchg
cli
pop
repz
pop
lahf
mov
adc
leave
jae
sti
es
outsb
stos
loope
push
fsubrs
jmp
add
aam
xchg
outsb
scas
jbe
or
sub
cli
in
mov
push
daa
hlt
in
scas
popf
pop
add
enter
in
xchg
leave
in
ficompl
iret
jo
mov
jae
scas
in
jb
sahf
add
mov
push
fildl
pop
lret
jecxz
mov
mov
adc
pop
adc
adc
outsl
mov
mov
mov
cs
jne
repnz
add
jle
clc
cmp
sar
aam
inc
cmpsl
scas
jecxz
movsb
add
sub
shr
jmp
std
push
sbbb
xlat
push
icebp
rcrb
rclb
dec
mov
lods
call
adc
arpl
xor
xchg
cmp
hlt
pop
xchg
out
fmuls
mov
sub
xorb
xor
dec
pop
into
std
aas
outsb
ret
jbe
push
jge
outsl
insl
arpl
pop
cmpsl
cmpsb
jo
lods
repz
push
xchg
dec
popf
bound
adc
sbb
cmp
pop
adcl
std
rcrl
mov
repnz
sub
mov
mov
rcll
jge
add
push
and
xchg
lods
fcoml
enter
mov
addl
xchg
mov
sbb
stos
pop
pop
mov
jge
sub
scas
xchg
aad
arpl
cmpsb
gs
xor
std
inc
je
ret
ja
push
loope
jmp
je
sub
mov
pop
or
icebp
sub
mov
dec
push
or
jnp
lds
jns
ljmp
repnz
je
jae
sbb
mov
and
mov
lods
mulb
inc
shrb
push
aam
cmp
movsb
jg
pop
sbb
lret
sti
mov
push
lcall
icebp
nop
shlb
sub
or
jne
add
jo
ja
add
dec
mov
loope
addl
xor
out
mov
xchg
xor
and
adc
jne
pusha
push
xor
mov
push
add
aaa
aaa
aaa
cmpsb
push
push
iret
sbb
lods
testl
pop
fstpl
divl
aas
push
rcll
outsb
push
pop
stos
les
test
xor
or
int
mov
push
jne
mov
psllw
pushf
fwait
addr16
mov
cltd
cld
jnp
or
les
cmpsb
mov
mov
test
jns
popf
add
dec
xor
inc
enter
pop
mov
scas
inc
test
pop
or
or
lret
xlat
jmp
xor
push
mov
arpl
stos
cmpsl
mov
scas
mov
in
mov
les
orl
push
nop
ss
mov
insl
or
andb
stc
xchg
enter
and
and
ljmp
shr
loop
imul
fnstenv
loopne
and
inc
jle
mov
inc
pusha
in
lods
scas
jmp
inc
pop
ljmp
mov
fnstsw
lahf
decl
sub
repnz
add
add
lcall
jmp
mov
or
notb
sbb
cmp
cmpsb
outsb
subl
iret
cwtl
jl
cmp
xor
adc
adc
sarl
add
pop
gs
js
movsl
push
idivl
call
pop
subl
scas
iret
xchg
cltd
cmp
testb
jp
call
loopne
lods
sub
mov
xor
js
sub
xchg
push
shlb
cmp
je
icebp
add
add
sub
push
jae
mov
hlt
xchg
adc
cli
xlat
cmp
repz
cmp
in
push
flds
jmp
int
jecxz
scas
pop
sbb
mov
cmp
lock
sub
sub
jg
mov
adc
mov
movsl
jno
insb
xor
add
sahf
dec
mov
outsb
cmp
ljmp
dec
mov
sub
or
inc
mov
inc
scas
pop
or
decb
mov
inc
repnz
cltd
lds
test
pop
in
mov
sbb
sub
out
clc
or
xor
imulb
pop
push
pop
xchg
fnstenv
lahf
sub
mov
push
jnp
or
sbb
out
stos
lods
cmc
cld
fildll
test
pop
loope
repnz
fildll
nop
sbb
sbb
das
inc
aam
xchg
test
cmp
xchg
mov
add
mov
in
pop
stos
fsubrl
mov
pop
or
adc
push
xchg
rol
and
xor
adcb
test
out
jo
fs
js
movsb
push
movsl
das
cs
push
pop
or
pop
mov
mov
inc
movsb
cmpsl
push
test
jge
es
divb
fisubl
mov
cmp
jp
push
iret
xchg
sti
mov
jle
pop
lcall
out
cld
sbb
inc
xchg
push
inc
inc
in
fisttpll
imul
clc
adc
push
mov
inc
insb
dec
sahf
ljmp
mov
test
push
cmp
push
inc
push
add
dec
pusha
mov
mov
clc
scas
addr16
push
fisubrl
pop
sub
pop
lahf
sarb
out
pushf
push
push
mov
pop
jp
xchg
jae
xchg
sbb
gs
out
js
mov
and
inc
mov
popa
cmpsb
push
mov
sti
es
adc
aas
fisubs
mov
sub
or
dec
lods
arpl
shlb
xorl
jecxz
movsl
cmp
dec
jp
in
cmp
and
rorl
xlat
scas
push
push
popf
sahf
stos
jecxz
mov
ja
mov
pxor
lret
sarl
rcrl
ds
clc
dec
inc
in
and
xchg
data16
push
xor
push
in
loop
or
cmp
sub
nop
sbb
jne
cmp
loope
xlat
pop
imull
aad
loopne
shl
dec
insl
outsl
cmp
aas
adc
and
test
adc
dec
test
sete
lock
notb
int3
imul
mov
sub
mov
xchg
and
mov
jmp
and
icebp
popf
pop
jp
mov
das
frstor
jecxz
sub
add
push
mov
push
jnp
inc
sarb
pop
or
xchg
xor
sub
lods
mov
ret
mov
pop
pop
ds
inc
es
or
lods
bnd
in
sbb
rol
ja
add
test
cmp
hlt
dec
fdivr
roll
lods
cltd
shlb
out
into
and
fsubl
or
repnz
aaa
leave
dec
push
aad
mov
imul
int3
and
in
shlb
test
lret
inc
arpl
jge
push
fstpt
pop
pop
add
mov
mov
out
jns
pusha
lods
add
in
fistpl
fs
into
add
pop
dec
stos
jno
fldcw
gs
mov
or
out
add
xchg
jne
repz
dec
imul
das
push
mov
cmp
mov
cltd
movsb
pop
inc
js
cmp
pop
xchg
shlb
pop
inc
dec
repnz
xchg
in
mov
cli
loop
xor
xorl
dec
or
in
sub
iret
shr
sbb
fsubrs
sub
inc
cmc
xor
rcr
hlt
das
into
adc
lret
adcb
cmp
imul
ret
test
dec
les
clc
push
mov
rcrl
mov
push
inc
xchg
test
mov
mov
enter
adc
cwtl
jmp
in
movsb
fisubl
ja
fs
movsl
es
or
sub
jmp
cmp
ret
in
shrl
push
pop
inc
push
lods
repnz
aam
test
mov
loop
push
subl
jp
sbb
adc
mov
mov
jmp
lods
mov
popf
stc
icebp
jns
dec
stos
les
and
lods
jne
popf
adc
andb
aam
jb
and
jl
cld
push
sahf
testl
cmp
xorps
insl
test
push
lcall
push
xor
fstpl
insb
popa
cmp
xchg
test
lcall
adc
icebp
lea
insl
xor
mul
mov
je
pop
mov
adc
xchg
pop
test
popa
jae
out
mov
pop
loopne
arpl
xchg
lds
arpl
inc
divb
leave
out
dec
stos
push
mulb
lods
into
pop
bound
dec
mov
insb
frstor
outsb
mov
mov
fwait
in
fldenv
sub
movmskps
mov
int3
cli
imul
mov
sub
sub
subl
daa
mov
sbb
int
les
jl
dec
jmp
cli
insb
mov
push
xchg
mov
adc
add
jmp
test
insb
testl
mov
jmp
pop
mov
mov
cli
xchg
sbb
fucomp
or
nop
jmp
cmp
sub
mov
test
neg
in
inc
push
cmp
cmpsl
push
or
es
movsb
xchg
push
mov
ret
mov
jno
and
cmp
outsl
mov
dec
out
movsl
push
jle
sub
mov
jb
push
test
push
xor
stos
bnd
cwtl
jl
pop
fisubl
pop
cmpsl
clc
mov
pop
aad
shll
pop
andl
sub
std
jmp
cmp
jmp
test
mov
dec
pop
and
ja
adc
shlb
sbb
mov
dec
cmp
mov
lcall
dec
test
sbb
jge
pop
ja
mov
and
int3
pop
jae
sub
ret
out
mov
push
cmp
sahf
movsl
leave
xor
add
sarb
inc
inc
pop
cli
jecxz
adc
lods
imul
addl
fadd
rcll
pop
jmp
sbb
pop
std
mov
sub
and
sahf
adc
inc
clc
mov
push
pop
mov
scas
iret
das
pop
clc
inc
push
xor
call
mov
xor
fnsave
mov
ret
test
jnp
js
xor
sbb
xor
and
scas
lahf
add
push
pop
enter
mov
call
pop
jb
jl
gs
in
sub
dec
inc
sub
jns
inc
jle
inc
inc
movsb
and
inc
pop
addr16
aam
in
in
and
mov
and
in
icebp
mov
icebp
dec
lods
lret
cmpsl
scas
sbb
add
cmp
sbb
mov
rcll
out
lods
mov
mov
in
mov
xor
push
push
or
jge
mov
lods
push
pop
icebp
pop
sbb
and
sti
jb
dec
dec
call
neg
xchg
bswap
push
mov
mov
arpl
pop
loope
lods
repnz
outsl
inc
mov
pusha
loope
sbb
push
roll
and
and
fwait
push
or
mov
arpl
inc
inc
cs
outsl
mov
movsl
mov
push
mov
enter
fsubrs
xlat
sbb
and
test
inc
mov
lea
jl
ljmp
cld
mov
imul
xchg
mov
movsl
sbb
cmp
cmp
aad
mov
xchg
pop
sub
xor
xchg
mov
push
icebp
mov
repnz
dec
pusha
push
push
sub
popf
clc
push
dec
xorl
mov
es
sbb
inc
mov
test
cmp
dec
dec
mov
xchg
jne
lahf
jmp
add
cltd
imul
fbld
es
xor
call
les
fsubs
mov
push
stc
xorb
lret
push
adc
adc
aam
push
nopl
int3
push
adc
jae
xor
cli
fdivs
fildl
fldt
je
pop
sub
lods
push
jne
jbe
sbb
add
outsb
or
lcall
or
sbb
cwtl
push
out
sahf
rorl
lods
mov
sbb
test
in
mov
cld
cmp
adcb
arpl
out
sub
cltd
arpl
cmp
cmp
lcall
leave
xchg
dec
sbb
pop
mov
fimuls
fildll
das
jns
sar
mov
cmp
xchg
jb
mov
imul
sbb
xor
sahf
imul
pop
mov
add
jnp
lret
ret
icebp
sti
fs
sbb
mov
inc
sbb
cmp
subb
cld
sub
fs
jecxz
push
stos
std
mov
cmp
iret
add
add
add
jb
push
lret
inc
test
jne
pop
divb
jl
lods
aaa
repnz
mov
js
cmp
outsl
pop
mov
and
aas
arpl
ret
jo
inc
xchg
mov
js
arpl
and
aam
dec
popf
sbb
lea
jle
loope
push
inc
adc
cs
mov
xchg
jbe
push
mov
xchg
xor
hlt
or
pop
cmpsb
cmpsl
xchg
pusha
lret
pop
testl
cwtl
ja
add
and
aaa
test
fwait
insb
std
add
and
sub
mov
mov
push
imul
add
cltd
mov
fldcw
cmp
fs
mov
mov
lcall
xchg
int3
sub
cltd
mov
clc
ljmp
nop
pop
in
sbb
add
insb
pop
js
dec
cmp
lret
push
fstpt
sbb
sub
leave
stos
call
mov
jg
dec
add
idiv
cmpsl
jle
enter
pop
mov
test
or
test
mov
arpl
jge
mov
addr16
xchg
fistl
adcb
ret
mov
das
call
sub
jg,pt
loope
lret
add
fsubl
pushf
mov
xor
cmp
rorl
das
xor
xchg
loopne
fdivs
mov
icebp
aas
dec
and
das
nop
mov
push
bound
sbbl
push
jmp
push
dec
and
sub
scas
mov
roll
dec
data16
adc
push
mull
mov
bnd
pop
ret
aad
cli
push
test
sti
subl
es
dec
push
or
mov
not
xchg
fsubrl
mov
fcmovu
adc
pushf
xchg
inc
xchg
fdivr
sub
test
cmp
pop
push
imul
add
mov
pusha
aas
dec
dec
push
push
mov
int
mov
push
imul
loop
push
add
pusha
test
fidivl
pop
push
and
popf
iret
pop
inc
jl
bound
jnp
out
and
divl
sub
add
mov
ret
xor
mov
ja
mov
add
lret
test
cmc
popf
dec
mov
mov
or
fisttpll
jg
mov
fadds
adc
cmpsb
in
leave
stos
imul
stos
pop
fcmove
add
mov
test
lods
push
and
push
in
test
mov
jb
and
in
push
shl
jmp
ds
repz
mov
or
ss
cmpsb
js
push
inc
pop
call
mov
inc
or
sti
notb
lcall
push
fidivl
pop
add
mov
lret
sub
dec
loope
dec
loop
clc
shrl
cmp
int
sbb
cmp
sbb
dec
dec
cmp
sub
loopne
negl
call
adc
add
stos
cs
mov
fidivs
push
push
pop
mov
out
daa
pushf
push
scas
push
or
mov
and
testl
jbe
ss
fnsave
lcall
iret
ltr
xchg
pushl
and
pop
push
lds
cmpsl
sbb
fwait
mov
jl
lock
add
pop
xchg
into
fwait
and
xchg
test
fcmovnu
mov
repnz
adc
cld
jecxz
xlat
lret
nop
imul
mov
ja
fcmovbe
mov
fwait
dec
sub
sub
cld
jmp
mov
cmpb
add
decl
ja
adc
cmpsl
adc
jp
test
fidivrs
push
jo
adc
lods
repnz
stos
xor
adc
lock
idivl
sarl
aas
sbb
mov
add
mov
imul
addr16
dec
lret
ret
push
mov
xor
xor
imul
in
das
mul
lock
clc
and
cmp
test
mov
arpl
cld
dec
outsb
mov
sti
lret
aas
sub
dec
jecxz
cmpsl
add
mov
sbb
jmp
xchg
pop
pushf
xor
dec
inc
rcr
pop
or
test
das
sbb
in
jg
xlat
loope
cmp
xchg
in
mov
push
mov
loopne
jnp
out
fsubs
lcall
sbb
ds
sahf
sbb
sbb
xorl
out
es
ja
jecxz
test
jmp
or
or
in
cmpsb
pop
xor
int3
inc
adc
fcmovu
test
mov
in
push
int
pop
scas
adc
or
pop
cs
adcl
adcb
ja
repnz
fs
out
pop
aaa
daa
popf
idivb
jno
sub
stos
cmp
cltd
sbb
push
sub
lcall
sub
ljmp
cmpsb
mov
jge
adc
int
adc
jg
pop
cltd
popa
mov
or
dec
scas
fwait
sahf
sub
mov
and
test
test
jnp
jbe
jge
mov
mov
or
or
cs
leave
nop
cmpsb
ret
jle
shlb
xor
fninit
cmp
idivb
jge
sub
stc
push
sbbl
mov
and
aad
cmp
mov
xchg
shrb
js
sbb
xlat
add
mov
repnz
mov
sbbl
mov
jnp
and
and
mov
xchg
test
fdivr
stc
out
in
adc
fcoms
and
ja
push
push
adc
fcomip
push
ret
push
inc
xchg
lods
push
mov
icebp
fists
and
faddl
out
jbe
movsl
test
shrb
int3
or
cwtl
add
add
inc
sub
inc
sti
dec
sbb
jg
mov
fidivs
pop
rclb
push
mov
jmp
leave
or
add
jle
sub
pop
inc
push
shl
rorb
inc
dec
dec
dec
dec
pcmpeqb
cmpsl
js
jb
or
cmp
test
xchg
lret
and
hlt
sbb
js
loope
lock
xor
mov
subb
push
popa
mov
sbb
mov
loop
js
decl
cmp
stos
add
mov
mov
jge
xor
pop
fldenv
test
xchg
movsl
adc
imull
ror
lcall
xchg
sbb
fdivr
sub
cmpsb
shrl
rep
cmp
into
in
fst
and
and
xor
cmpsl
jo
repnz
filds
into
into
push
jo
dec
sub
stc
mov
jbe
movsb
mov
lahf
sbbl
bound
mov
insb
int3
sahf
mov
fidivrs
and
scas
in
jne
popa
adc
lods
jle
jge
mov
mov
add
push
shll
outsl
loopne
call
imul
fcmovne
test
mov
insb
int
ficoms
sbb
cmp
enter
xlat
dec
sbb
pushf
std
aad
scas
cmp
and
adc
xchg
iret
push
dec
jnp
push
mov
in
xlat
pop
outsl
fsts
xchg
jle
ljmp
adc
xor
ret
jb
push
inc
inc
imull
mov
nop
lds
mov
or
fxch
push
arpl
and
dec
pushf
inc
fnsave
loope
pop
mov
into
mov
loope
cmpsl
hlt
xor
cwtl
mov
testb
add
adc
das
sbb
pop
pushf
fs
das
lea
jbe
jg
in
aas
jl
or
or
fsubs
fnstsw
repz
pop
dec
leave
fisttpll
dec
lcall
xchg
pop
insb
aaa
jmp
std
mov
outsb
outsb
cmpb
out
insl
insl
stos
dec
fisttps
lods
dec
adc
enter
repnz
inc
sub
fsubr
cmp
xor
inc
ss
sub
out
aam
and
in
mov
sbb
dec
loopne
adc
fisubl
das
cmp
mov
sbb
mov
mov
int3
xchg
dec
lds
xor
in
sub
mov
outsl
mov
lods
mov
mov
test
inc
mov
push
inc
dec
popa
mov
xchg
push
loope
cmpl
daa
fsubp
or
xlat
dec
fildll
pop
loop
lret
adc
mov
test
and
xchg
push
cltd
cld
lret
jae
aam
add
and
cmp
loope
inc
jmp
jle
xor
mov
xchg
addr16
bound
xchg
mov
test
xchg
pushf
mov
pop
nop
fwait
pop
stos
sbbb
adc
xor
in
ds
dec
dec
jl
jne
adcb
pop
pop
jmp
jge
ret
mov
sub
cmp
dec
push
mov
mov
in
inc
scas
xor
dec
lret
jp
push
pushf
popf
jnp
mov
sahf
add
int
push
in
mov
gs
test
xor
jge
repnz
adc
mov
or
cvttps2pi
pop
data16
inc
sbb
aas
in
pop
or
mov
out
cmpsb
jmp
jne
sti
mov
repnz
not
sub
sarb
das
add
sbb
xor
call
loope
das
in
sbb
cld
xchg
pop
dec
or
push
test
adc
sbb
sub
sbb
sbbl
sub
push
loopne
jmp
pop
pop
loope
repz
fucomip
shl
xor
testb
mov
adc
push
rorl
subl
scas
inc
out
shr
push
fldcw
stc
mov
outsl
mov
pushf
pop
and
mov
cli
push
jp
jnp
mov
sbb
sbb
addr16
jno
scas
sub
or
movsb
jmp
dec
nop
mov
push
xor
sbb
imulb
mov
mov
scas
out
imul
cmp
mov
mov
sti
or
jmp
mov
scas
rcrb
aaa
call
cmp
sub
mov
jmp
loope
lret
adc
lret
add
inc
cmp
xor
xchg
hlt
jne
dec
jl
test
iret
and
xchg
fwait
jmp
jae
add
insl
lahf
add
and
mov
mov
cmp
clc
pop
mov
loope
xchg
out
sub
xchg
cli
test
iret
mov
mov
pop
idivl
mov
or
mov
hlt
add
mov
inc
mov
incb
add
lods
cmpl
outsb
negb
push
lahf
pop
dec
movsb
hlt
jmp
push
dec
adc
and
add
rclb
push
call
jae
ja
sbbl
push
sahf
add
pop
insb
adc
pop
jae
imul
in
add
jmp
in
or
in
push
sub
sarl
iret
mov
inc
sbb
mov
scas
xchg
in
fs
ret
push
outsb
inc
dec
add
push
stos
mov
sbbl
xchg
out
xor
ficoml
hlt
xrelease
push
shrb
mov
fiaddl
xlat
cli
or
xchg
cmp
lds
test
jecxz
xchg
mov
mov
clc
xlat
push
bound
pop
inc
fiadds
adc
pop
movsb
dec
mov
push
xor
ja
and
mov
inc
gs
mov
cmp
out
or
shll
mov
mov
push
and
scas
sbb
push
or
jle
or
mov
mov
dec
jbe
pop
jne
push
int
in
mov
mov
fcoms
push
cmpsl
addr16
xor
fsubs
push
sbb
arpl
cmc
cwtl
dec
inc
insl
mov
xchg
xchg
xchg
mov
inc
inc
cli
cs
test
je
in
xor
aas
out
rorb
push
in
cmp
fildl
jle
sub
jp
xor
sub
xchg
jle
add
gs
pop
es
je
aam
movaps
push
xor
pop
int3
inc
mov
in
cltd
fisttps
mov
frstor
sbb
enter
nop
xorl
mov
lock
jmp
std
push
cld
push
jmp
push
sub
insl
inc
pop
leave
ret
ljmp
dec
jo
push
inc
sbb
add
mov
adc
mov
push
stos
int3
or
jg
repnz
xchg
add
mov
xchg
pop
jbe
dec
mov
xlat
adc
insb
aad
stc
pop
adc
mov
inc
stos
push
fcom
pop
les
mov
nop
je
cmpsl
fcom
mov
xor
icebp
into
lods
insb
jo
in
sub
jge
movsl
call
stos
push
loope
or
test
mov
inc
xchg
mov
jg
mov
lahf
pop
ret
inc
into
jne
or
fsubp
out
clc
inc
aas
fldt
push
pop
sub
xlat
jle
mov
mov
bound
push
in
add
pusha
test
jo
and
movsb
lea
into
movsb
nop
adcb
les
movsl
xchg
inc
leave
cmp
je
fucomp
jns
dec
aas
loope
cmc
cmp
add
xchg
inc
pop
and
sahf
push
rcrb
jecxz
push
dec
adc
mov
dec
leave
lock
sbbl
jge
lea
pop
cld
xchg
dec
loopne
call
mov
cmp
push
cmp
call
sbb
sbb
in
pop
sub
std
mov
inc
cld
aam
gs
out
aam
jne
pushf
jl
cmp
xchg
lahf
lret
push
jb
adc
int
mov
push
mov
icebp
ss
lahf
mov
aaa
shll
jecxz
stos
aas
out
loop
cmp
cmp
push
pop
dec
in
ss
sub
cmp
dec
test
mov
icebp
pop
fsubl
or
xchg
pusha
in
mov
out
ljmp
jb
pushf
lret
fldt
sahf
and
mov
les
add
in
mov
shl
sbb
loope
ljmp
dec
adc
cmp
imul
in
scas
jp
fdivrs
sbb
add
enter
cmpsl
mov
or
clc
pop
xor
dec
and
mov
xchg
mov
icebp
rolb
ret
scas
xchg
inc
mov
fcompl
nop
cmpsb
sub
test
dec
ja
les
cmp
stos
cli
add
cmp
jnp
negb
jp
test
nop
push
out
mov
jnp
call
je
push
cmc
cwtl
icebp
imul
sarb
lret
pusha
mov
sub
repnz
xchg
ret
sub
add
and
loop
aad
push
icebp
jp
add
adc
lods
cmc
lret
xor
movsl
shrl
inc
fs
es
aas
rcll
add
stos
add
lret
das
icebp
fdivrs
dec
dec
inc
sti
arpl
movsb
xchg
mov
jmp
js
sub
add
and
hlt
dec
sub
out
cmc
fadd
adc
mov
jb
imul
pop
adc
dec
stc
jg
aas
mov
stos
pop
sbb
xchg
insb
xor
xor
adc
aas
fistpll
outsb
sbb
es
cmpsl
ljmp
adcb
ss
fsubrs
mov
rcr
xchg
push
xlat
xchg
push
sahf
scas
cmc
lret
js
iret
or
add
sbb
pusha
mov
and
loope
adcb
jnp
clc
aaa
pop
cli
shll
rcr
xchg
frstor
sahf
call
jo
sarl
loopne
bound
mov
add
repz
ja
sub
mov
mov
push
mov
jl
outsl
sub
sarl
call
test
jbe
inc
repz
inc
pop
cmp
out
or
cmpl
mov
xchg
push
mov
cltd
ret
decb
dec
add
xchg
hlt
sub
movsb
sbb
int
call
out
insl
and
daa
repz
outsl
pop
mov
test
sahf
fimuls
pop
sub
xchg
sahf
mov
cmpsl
inc
loope
mov
shrl
mov
cld
lcall
lret
adc
cwtl
push
femms
outsb
push
or
inc
leave
push
mov
mov
xchg
out
sbb
or
mov
sar
stc
jge
popf
or
dec
push
adc
int
xchg
mov
ja
xorl
or
push
jo
rcr
xor
xchg
ljmp
or
pop
fcmovne
hlt
sbb
xorb
fs
adc
clc
inc
jno
cltd
lahf
test
loopne
addl
jb
lahf
out
add
std
or
repnz
hlt
mov
rcr
ja
mov
enter
lock
scas
cwtl
inc
arpl
add
lret
sbb
lret
cld
add
mov
enter
pusha
test
mov
inc
push
jb
push
call
dec
inc
xor
and
sub
psrlq
cmc
pop
lods
inc
jmp
xchg
xor
mov
xor
filds
pop
xor
out
sbb
adcl
mov
jnp
push
stos
hlt
jo
mov
das
lret
outsl
mov
fcompl
xor
in
out
repnz
inc
push
mov
xor
mov
ret
dec
cmp
adc
in
cmpl
dec
push
je
adc
add
add
mov
or
xlat
out
dec
xchg
insl
sbb
dec
cld
fs
data16
std
dec
cmc
add
testl
and
jnp
in
sub
divb
inc
cmp
jae
imul
adc
addb
in
repz
sub
jmp
nop
push
jge
mov
out
or
add
clc
incl
insb
popl
jne
push
dec
jo
sbb
iret
add
imul
movsb
loopne
int3
insb
popf
adc
fdivrs
xchg
xchg
jb
push
imul
cmp
int
add
sub
mov
rclb
xchg
lods
stc
cwtl
hlt
cmc
sahf
sub
cmp
out
sub
cmp
dec
inc
sub
lds
aas
add
daa
add
sub
jmp
sbb
xchg
push
mov
sub
aas
dec
sub
inc
mov
pop
add
addr16
mov
bound
ficoms
lock
mov
xor
adc
jno
jae
lock
cli
movsl
push
jae
xor
adc
jae
inc
js
sub
popa
jns
loope
mov
jecxz
jae
fisttps
xchg
repnz
and
inc
clc
arpl
jle
inc
out
push
xchg
vmwrite
and
adc
push
jo
mov
or
leave
insl
cmc
adc
lahf
xorl
dec
fcompl
jecxz
push
mov
jle
jp
cmpsl
ljmp
les
stc
pop
call
fists
sbb
fisubrl
ss
cmp
sbb
popf
mov
mov
aam
dec
test
and
js
mov
push
xchg
in
std
notl
cmpsb
dec
jge
push
test
mov
loop
sbb
comiss
or
pop
mov
shr
stos
sub
inc
fsts
fldt
mov
add
mov
pop
scas
mov
sub
adc
dec
jle
mov
pop
pop
lret
lea
les
push
pushl
pop
test
xchg
in
test
cmpl
adc
clc
rolb
mov
jno
popa
mov
scas
sub
loop
inc
div
in
sub
aad
cld
sbb
dec
push
xchg
mov
fcoml
mov
loop
pushf
and
mov
test
add
leave
push
lea
ljmp
loope
add
xlat
cmp
add
dec
pop
jecxz
mov
pusha
cs
add
mov
es
pop
adc
repz
jl
cmpsl
in
into
test
jmp
idivl
xchg
add
mov
pushf
push
and
cwtl
mov
je
sub
dec
imul
pop
cmp
cmp
aas
xor
jp
jecxz
jae
pusha
push
cmc
xchg
es
pop
jbe
jmp
clc
dec
sub
push
jmp
lret
or
aas
cmp
scas
mov
bound
scas
pop
lret
sti
sti
jo
push
adc
cli
mov
jecxz
notl
sbb
addr16
push
js
imul
fistl
sti
xchg
cltd
test
lock
pop
es
and
pop
xor
cs
leave
xchg
mov
pop
fbld
test
push
aaa
in
adc
or
test
movsl
adc
jmp
aaa
jnp
mov
adc
push
movsl
push
cmp
push
subb
push
xor
iret
sbb
ror
test
sbb
xor
ret
push
push
mov
addl
test
inc
sar
sar
pop
lea
lret
xchg
jmp
adc
cmp
pop
js
mov
sub
jle
pop
je
imul
pop
and
mov
mov
mov
fwait
test
test
das
dec
adc
add
lds
xchg
jp
xor
aas
pop
mov
stc
int
lds
push
sbb
inc
mov
out
sub
cltd
decl
mov
in
aaa
aam
mov
mov
iret
fisubs
mov
xor
push
fbstp
call
sbb
cmp
imul
or
lods
pop
add
pop
das
dec
push
push
mov
icebp
pop
mov
mov
call
cmp
outsl
aad
mov
in
cmp
pop
inc
addr16
aad
mul
les
shlb
jb
mov
test
xchg
test
popf
xor
das
clc
or
ss
dec
lret
and
sub
repz
adc
sbb
inc
iret
pop
outsl
mov
mov
xchg
sbb
lahf
sbb
int3
cmp
push
cmp
and
cwtl
mulb
mov
cmp
aad
adc
cmp
js
dec
push
or
adc
jmp
jne
lods
cmc
pop
pop
dec
jae
loope
mov
incl
shlb
xlat
jge
movsl
xchg
ja
out
or
push
push
addr16
std
or
xor
rcrl
jmp
jo
mov
repz
stos
pop
mov
out
sub
mov
push
mov
hlt
xor
jno
lock
lock
out
ja
add
push
dec
outsb
dec
mov
ret
getsec
insb
jge
call
cwtl
and
call
test
and
inc
adc
and
pop
movntq
lret
or
pop
pop
sbb
in
mov
xchg
push
scas
mov
jno
push
imul
push
repz
push
int3
sahf
mov
dec
test
std
push
add
fdivl
into
fmull
jle
addb
scas
xchg
imul
and
fnsave
lcall
or
mov
xor
pop
lods
jo
icebp
and
xor
fdivrs
insl
mov
push
int
mov
inc
stc
sub
xor
cs
shr
repnz
sbb
inc
push
xchg
popf
leave
mov
xchg
push
lods
sbb
nop
pop
dec
cmp
ret
or
cmpsb
xor
cmp
shlb
cmpsb
ljmp
fcmovnu
jns
outsb
loopne
cltd
lods
mov
mov
jge
jge
lret
sbb
inc
push
test
cmp
add
sbb
loope
data16
and
ds
clc
jbe
out
xchg
xor
xchg
test
xor
sahf
mov
scas
jo
cmpsl
aam
mov
mov
test
out
or
push
mov
in
or
std
mov
jae
xchg
nop
xchg
insl
fadd
mov
inc
ja
push
or
and
mov
jnp
pushf
outsl
in
sbbb
pop
xchg
cmpsl
jmp
aaa
mov
mov
shl
aam
aad
cmp
xchg
out
das
or
pop
dec
lea
pop
cwtl
mov
xor
and
dec
jecxz
dec
add
xchg
pop
dec
dec
scas
dec
sarl
push
adc
je
loop
jmp
popf
mov
cli
pop
pop
lods
add
std
cmpsl
test
mov
mov
sub
adc
add
sbb
xchg
into
js
cmp
aam
int
scas
repnz
testl
push
inc
test
mov
hlt
push
jne
xor
adc
mov
jnp
outsb
sbb
mov
popf
add
pop
loope
pop
add
add
jo
cli
cmpsl
popa
inc
mov
xor
cmp
sbb
cmp
dec
out
orb
mov
fldt
aas
pop
outsl
xchg
mov
xor
in
xchg
test
scas
jnp
mov
sub
sbb
insl
inc
mov
das
fstpl
jl
std
push
xchg
sbb
jg
dec
or
ficompl
ljmp
dec
test
andb
cmp
cmpsl
sbb
lcall
and
andb
mov
xor
sbb
sbb
std
mov
fbstp
sbb
fnstsw
sahf
adc
inc
pop
subb
decb
sets
sti
in
xchg
bound
xlat
mov
pop
sub
inc
mov
jle
xorb
cwtl
int3
int3
xchg
dec
pusha
iret
dec
mov
icebp
cwtl
jo
daa
xlat
insb
iret
xor
add
jl
cmpsb
add
push
test
cli
adc
sbb
inc
fisttps
xlat
sti
outsb
jns
xchg
or
jno
data16
mov
loop
insl
xchg
scas
dec
cmpsl
in
fdivp
out
inc
xchg
inc
sbb
xchg
sarl
cmpsb
loope
pop
jo
mov
ret
sahf
clc
push
cld
nop
ret
jmp
xchg
push
xchg
mov
mov
jo
sarl
lahf
insl
inc
test
in
add
sahf
push
mov
dec
push
or
jnp
dec
loope
xor
mov
mov
in
insb
mov
adc
hlt
cmp
fldcw
in
gs
mov
pop
out
pusha
dec
sahf
daa
shll
aaa
cmp
insb
ret
xchg
pop
pop
jg
cmp
cmp
push
insb
xchg
lods
and
lahf
push
adc
iret
aam
repnz
jp
dec
out
aas
jo
jae
xchg
movsb
sub
push
scas
sti
test
xor
xor
test
out
data16
mov
in
inc
rcrb
hlt
jae
inc
call
and
cmp
ret
jl
mov
mov
insl
lahf
xlat
mov
enter
sub
mov
jp
loop
aam
sar
xorb
sub
pop
sub
mov
test
dec
testl
lret
pusha
dec
imul
iret
movsb
sub
andb
or
jmp
add
sbb
mov
xchg
aam
lods
out
dec
xorb
lcall
std
aam
mov
dec
push
leave
je
lahf
ret
iret
aaa
outsb
xchg
push
lcall
popa
cwtl
dec
xor
mov
fwait
or
sub
out
and
pop
aaa
bound
mov
mov
jne
mov
test
test
movsb
cli
popf
or
roll
sbb
push
dec
in
dec
jg
xchg
rorl
push
pop
es
cmp
pop
adc
xchg
loope
in
icebp
pop
xchg
xor
sub
stos
addr16
rcrl
mov
vaddpd
push
xchg
mov
mulb
dec
rcrb
in
fwait
mov
lahf
popa
cmp
adc
xchg
fstl
clc
pop
mov
inc
fs
mov
les
adc
aas
xchg
stos
adcl
jne
pop
add
jg
cmp
aaa
daa
mov
iret
mov
mov
xor
out
sbb
add
inc
ret
pop
mov
idiv
ffreep
addb
inc
testb
sbb
xor
jno
loope
adc
mov
mov
mov
addb
xchg
jp
cs
mov
pushf
inc
mov
xchg
cmp
es
xor
xchg
push
icebp
mov
jno
call
sub
pop
add
nop
xor
xchg
and
mov
sbb
inc
add
sarl
xor
fsubrl
push
inc
or
xlat
mov
nop
ds
or
xchg
mov
fsqrt
gs
mov
js
sbb
cltd
stos
adc
test
repz
pop
jmp
mov
mov
xor
scas
pop
fidivs
dec
shll
stos
mov
inc
adcl
mov
ljmp
cltd
adc
subb
stos
sbb
push
repnz
and
pop
fisubrs
add
push
mov
mov
iret
inc
dec
push
imul
add
jae
iret
es
arpl
pop
cmpb
sub
mov
movl
lods
mov
lods
lods
mov
jge
cmpsl
out
pop
cmp
mov
mov
outsl
and
int
xlat
pushf
sbb
stos
pusha
pop
idivl
mov
jp
inc
sub
cmp
pop
push
in
and
adc
xchg
push
addl
cmpsb
aaa
jbe
jmp
xchg
bound
js
mov
into
inc
mov
pop
rol
jge
test
inc
xor
and
xchg
int3
xor
mov
mov
inc
cmpsl
icebp
mov
aad
shlb
mov
xor
mov
mov
into
stos
inc
leave
iret
insb
pop
fstpt
cmpl
inc
je
and
pushf
jno
std
pop
xchg
add
mov
xor
cmp
loop
mov
inc
lock
jnp
inc
mov
or
sbb
jl
xor
mov
xchg
outsl
cmp
mov
mov
pop
in
fdivrs
dec
jns
mov
loope
pop
pop
cmpsl
push
ss
inc
sbb
out
test
outsb
xchg
cmp
pop
mov
inc
pop
pushf
icebp
xor
arpl
push
jp
xor
dec
popf
bound
pop
leave
aas
cs
inc
push
pop
jno
mov
ljmp
jle
test
inc
pop
out
adc
cmpsb
popa
or
bound
notb
mov
pop
sti
dec
dec
je
adc
cmp
ss
xchg
sbbb
mov
enter
scas
insl
sub
movsl
ja
int3
xor
out
or
pop
repz
mov
dec
or
repz
jg
push
mov
mov
sbb
sbb
in
into
int3
loope
ljmp
sub
mov
daa
xor
jge
xlat
inc
jecxz
repnz
out
and
inc
lds
aam
push
sbbl
into
or
lret
push
and
daa
jno
out
jnp
mov
xor
mov
sub
aam
jo
je
call
jmp
movsb
dec
and
pop
or
mov
xor
pusha
xor
subl
pop
mov
or
ret
popf
ja
mov
flds
add
dec
mov
aam
dec
inc
jmp
mov
push
popa
stos
or
cmp
adc
cld
add
mov
ss
lods
xchg
or
or
cmpsb
jno
lcall
aam
sbb
push
push
pop
pop
jp,pt
lret
aad
jmp
mov
jae
loope
mov
out
push
cmp
stc
test
or
movsb
sahf
sbb
pusha
or
jge
pop
divl
out
cmp
das
cmp
ss
adc
pop
mov
into
dec
outsl
outsb
lods
sub
rorb
mov
mov
fisubl
leave
lea
ss
fucomip
sahf
dec
sti
test
push
shll
xchg
pop
jg
js
popf
mov
mov
push
jnp
add
pop
test
out
bnd
ss
jo
dec
insl
cmp
int3
mov
pop
xlat
mov
jb
bound
and
xchg
or
imul
std
test
jne
fimull
dec
xchg
sbb
inc
sti
in
insl
xchg
hlt
fs
cs
push
lock
test
ret
ret
outsb
sarb
pop
xor
push
scas
std
pop
decb
cltd
sbbb
ss
inc
adc
jl
or
sbb
sub
scas
dec
les
jmp
dec
imul
imul
mov
rcpps
inc
mov
popf
xchg
sbb
cmp
lret
sub
jb
shrb
or
ja
push
clc
xchg
in
mov
jle
addr16
daa
adc
cmc
idiv
int
scas
adc
rorb
xor
shll
and
or
pop
popf
or
lret
xchg
imul
mov
int3
insb
mul
int
pop
push
std
mov
push
add
out
mov
leave
repnz
in
cs
cmc
cwtl
or
andl
fs
pop
stos
outsl
sbb
add
gs
xor
xchg
lock
das
push
mov
and
adc
xchg
mov
sub
xchg
adc
mov
lahf
lods
int3
ss
xchg
jge
nop
mov
in
lahf
xchg
in
call
push
ffreep
mov
pop
or
fistpl
push
xor
sahf
cmp
mov
dec
cmp
or
adc
lahf
pop
dec
pop
add
mull
inc
cld
add
ss
adc
mov
xchg
sbb
xchg
lds
sbb
neg
jg
lds
inc
js
aad
jl
inc
outsb
ss
and
leave
push
int3
pop
mov
movl
add
scas
add
inc
jne
push
pop
mov
sub
test
test
sti
mov
les
stc
sub
inc
jae
imul
std
pop
mov
mov
xchg
cs
pop
push
jecxz
jge
es
fadds
scas
dec
mov
movsl
insl
mov
movsl
outsl
and
xchg
mov
lods
sbb
out
adc
lock
and
or
popa
cmc
jns
xchg
xchg
jge
loopne
inc
rcr
shr
out
inc
sbb
sbb
pop
je
ret
add
sbb
je
gs
and
jnp
cmp
repnz
int3
dec
int3
fidivl
pop
push
scas
sub
sub
sahf
inc
adc
adc
pop
push
jle
rcr
shlb
mov
mov
sbb
lds
xor
add
mov
mov
cli
cli
sub
cltd
mov
and
push
rorb
sub
movsl
sub
xor
adc
inc
sti
adc
mov
in
xor
popf
add
adc
add
inc
repnz
clc
movsb
lea
mov
xchg
nop
orb
pop
mov
scas
ljmp
outsl
pusha
jnp
jne
sbb
stc
call
mov
sahf
push
xchg
dec
cwtl
fwait
push
sarb
xchg
mov
adc
push
nop
inc
jl
push
sub
repnz
nop
push
sbb
scas
in
fiadds
or
sbb
out
stos
add
mov
jle
push
sarb
dec
stos
mov
repnz
mov
sbb
icebp
pop
popf
jno
test
or
xchg
lahf
inc
imulb
test
mov
dec
inc
es
ja
mov
out
adc
loopne
ror
push
add
mov
and
dec
adc
cmp
and
leave
sarb
fmull
jbe
adc
cmpb
fsub
ss
in
mov
or
or
xchg
xchg
aas
cs
cmp
sbb
mov
xchg
mov
loop
cmp
mov
pop
jge
mov
jp
mov
test
xor
aam
pop
cmp
jno
xchg
gs
fmuls
or
movsl
dec
daa
mov
bswap
mov
icebp
adc
cmp
sahf
jp
stos
data16
daa
push
pop
in
mov
cli
sub
pop
lds
push
adc
mov
inc
pop
pusha
xchg
lret
aas
mov
in
xchg
jno
jl
fadd
xor
pop
jge
mov
mov
jge
aam
sbb
xchg
mov
arpl
sub
add
jo
inc
into
push
dec
cmp
push
lcall
mov
mov
leave
push
jmp
in
imul
int
dec
aad
mov
outsb
or
cmp
icebp
jecxz
xchg
add
adc
mov
push
negl
jb
pop
pop
jg
jp
in
jae
fidivs
movlps
aam
xor
mov
pop
das
jo
sbb
adc
adc
lahf
mov
pop
and
shl
imul
fwait
int
inc
add
jg
test
adc
sbb
ret
jb
arpl
push
and
xchg
out
mov
es
or
mov
pusha
jmp
lods
data16
out
cmp
test
adc
sbb
fcomi
jecxz
cmpsl
fucomp
outsl
mov
out
add
xchg
push
mov
cwtl
push
fsub
lahf
push
iret
js
jns
fdivrl
lock
and
sub
out
or
push
sub
movsb
rcrl
outsb
clc
sub
xor
sub
xor
inc
clc
fisttpl
movsl
pop
jbe
xchg
xchg
pop
or
rclb
movd
xchg
pop
out
pop
test
aad
adc
enter
popf
inc
add
pop
dec
or
sub
xor
cs
or
dec
or
mov
pusha
xor
fsqrt
jg
das
orb
add
rolb
shr
mov
jmp
jne
ss
xlat
push
leave
xchg
sub
popf
cs
pop
adc
movsb
jbe
std
and
hlt
mov
dec
int3
in
inc
pop
mov
sbb
dec
jmp
adc
and
lds
add
clc
pop
shl
scas
lods
test
pop
cmp
mov
negb
xchg
outsb
mov
adc
ficoml
or
out
or
dec
aam
add
sub
add
dec
jecxz
push
push
sub
mov
mov
sbb
outsl
add
popf
dec
xor
std
adc
lock
or
adc
xchg
pop
sbb
jns
adc
cmp
mov
es
leave
outsl
ret
loopne
sbb
sbb
jae
push
cwtl
inc
int
out
fisubrl
ja
dec
pop
cmpsl
jecxz
mov
pop
xchg
fmull
inc
test
in
imul
lods
cmp
rolb
add
jbe
xchg
dec
xor
pop
faddp
cmp
jno
sub
popf
roll
lea
mov
in
dec
cmp
pop
mov
add
int3
push
lret
cld
jge
cmc
xchg
mov
pop
lods
and
jno
fldt
pop
mov
jge
stos
andl
out
push
js
rcl
sbb
mov
xor
sub
stc
rorl
inc
filds
aad
test
xor
rcrl
push
dec
cmp
push
or
loope
dec
into
inc
imul
mov
add
mov
mov
cmp
daa
jge
in
sub
mov
jge
movups
cmpsl
imul
stc
iret
or
cmp
sbb
fnstcw
ja
mov
mov
das
xchg
aaa
aaa
xor
mov
push
xchg
inc
xlat
movsl
mov
clc
push
cmp
ror
push
sbb
push
add
pop
popa
shl
mov
mov
mov
mov
and
xchg
arpl
pusha
sbb
inc
sbb
sub
jae
repnz
mov
stos
xor
mov
push
xor
std
ss
sbb
cmc
int3
rorb
test
out
adc
lret
xchg
pusha
out
popa
ss
inc
add
push
sbb
adc
je
push
pop
cwtl
stos
push
and
in
sbb
and
jnp
cmpsb
sub
andl
ja
std
adc
nop
add
jecxz
pop
push
lcall
or
xor
cmp
ss
jns
mov
add
pop
jae
dec
xchg
adc
mov
mov
pop
sub
cltd
push
fwait
arpl
xor
daa
rcll
in
push
fistps
ds
scas
imul
nop
jge
sbb
popf
loop
inc
add
mov
push
dec
fld
push
lcall
ficoml
xor
jl
inc
mov
adc
ret
dec
repnz
pushf
pop
jle
jo
adc
mov
repz
dec
bound
pop
das
sbb
jl
push
add
xchg
repz
fmull
push
out
int
jecxz
xchg
mov
ljmp
fwait
mov
mov
sbb
fwait
cmp
inc
daa
ficompl
mov
repz
add
sub
subl
cltd
mov
mov
pop
les
jo
add
js
into
mov
mov
imul
adc
je
mov
cld
cmp
loop
stos
enter
mov
push
mov
mov
sub
xchg
inc
jge
and
sti
add
insb
add
enter
fldcw
xlat
and
les
push
xchg
insl
adc
lcall
lret
mov
ja
leave
dec
scas
lods
lret
mov
shrb
dec
xor
loopne
into
aad
add
mov
mov
test
lahf
jnp
mov
rol
stos
xchg
fs
mov
add
outsb
inc
insl
jmp
jmp
in
mov
or
test
xchg
inc
mov
dec
xlat
jmp
fwait
jns
lods
loopne
ret
cmp
or
inc
pop
jns
inc
loop
loope
add
roll
pop
push
call
push
out
cwtl
lret
add
mov
jbe
popa
in
movsl
adcl
mov
ficoms
jnp
inc
stos
ds
sahf
dec
mov
pop
mov
mov
inc
inc
ds
mov
sub
loop
mov
stc
test
xchg
push
stc
lahf
fsubl
scas
jo
dec
xlat
mov
add
pop
adc
xchg
out
cmp
xchg
mov
adc
mov
inc
jl
fstpl
leave
sub
into
mov
xor
xchg
icebp
fsubrs
loope
xchg
dec
cmovae
xchg
sbb
lahf
gs
jmp
dec
xchg
or
push
sbb
insb
out
jno
cmp
xor
xor
loope
shr
inc
btcl
mov
xchg
adc
shll
xor
inc
sbb
jno
xor
pop
add
dec
ftst
inc
movsl
sub
icebp
cmpsb
sub
inc
xchg
bound
or
mov
jg
daa
or
ljmp
lahf
xchg
in
jl
pop
movsl
jg
add
inc
push
adcb
out
jb
push
es
shl
imull
sahf
mov
jge
sbb
aad
push
mov
pop
lret
dec
and
sbbb
lret
cmp
mov
xor
cwtl
fwait
in
jl
fisubl
xchg
fwait
inc
ret
out
xor
test
push
in
and
pop
xlat
cwtl
dec
jmp
cmp
aas
repz
adcb
push
pushf
mov
daa
pop
sbbb
ret
dec
jmp
inc
enter
push
lahf
adcl
and
adc
loopne
xchg
adc
or
jnp
fildl
sub
int
aad
stos
popf
fimull
fists
jecxz
add
out
push
mov
sbb
xchg
jle
cmp
jl,pn
daa
les
or
sub
mov
notl
xchg
or
sub
adc
xchg
addr16
mov
mov
out
lock
adc
dec
in
idivl
jno
dec
cmp
je
cmpsb
mov
sbb
std
dec
mov
sub
movsb
sbb
cmp
lcall
stos
test
adc
pop
lock
ds
sbb
mov
rcrl
and
jecxz
add
dec
outsb
inc
fs
mov
or
pop
bnd
adc
out
pop
in
add
push
fs
in
cmp
mov
mov
adc
add
inc
cmp
out
jo
mov
push
xor
or
idiv
lock
fists
hlt
rcll
ljmp
xor
sub
ficoml
pop
sub
lret
popf
adcl
mov
sub
xor
lods
adc
cmp
pop
mov
into
out
aaa
test
mov
adc
push
scas
pusha
push
psubq
adc
cmp
mov
das
jmp
adc
xchg
mov
jne
cmp
xlat
scas
add
frstor
mov
outsl
sbb
bound
out
sub
sub
push
pop
ret
faddl
inc
iret
and
pop
and
and
cmp
xchg
aam
leave
mov
jg
jno
scas
imul
pop
pop
mov
mov
leave
dec
jnp
call
dec
pop
xchg
mov
jp
xchg
std
ljmp
mov
js
mov
push
xchg
push
clc
lahf
pop
js
sbb
inc
xchg
sbb
add
popf
imul
outsb
ficompl
dec
imul
or
pushl
lods
dec
xchg
inc
push
loop
rep
int
or
xor
and
add
mov
daa
push
sub
ret
pop
adc
xchg
cltd
pop
xchg
loope
add
clc
mov
dec
in
xchg
or
inc
dec
lss
in
sbb
inc
xor
mov
movsb
test
lods
and
fimull
test
mov
loop
xorl
sub
push
and
scas
loopne
ja
inc
pop
arpl
or
stc
stos
cmp
int3
daa
ficompl
test
shlb
icebp
call
mov
mov
mov
cli
psubd
cmpl
dec
insl
ret
les
pop
and
iret
stc
out
fwait
rcrb
push
mov
pop
test
push
sbbl
hlt
insl
jo
fistps
xlat
out
lahf
xchg
or
adc
fadds
mov
jp
sarl
inc
in
test
dec
cmp
hlt
repnz
xchg
mov
pusha
pusha
leave
iret
fldt
push
outsb
cmp
sbb
das
mov
pushf
js
arpl
les
pusha
bound
sub
fsts
cmp
lock
rcl
add
outsl
pop
loopne
scas
xor
pusha
jns
daa
in
and
add
into
lret
jle
dec
sub
mov
or
pop
push
leavew
sbb
repnz
cmp
out
push
nop
int3
aas
cmc
mov
push
leave
movb
and
mov
jb
jne
pop
insb
xor
and
imul
jb
in
fsubrs
mov
data16
sbb
xor
add
pop
clc
xchg
mov
dec
pop
adc
dec
ficoms
and
sub
jbe
arpl
aas
ret
dec
mov
idivb
call
or
lret
jns
cs
mov
aad
aam
loopne
adc
jg
add
loopne
out
cmpsl
cmp
das
inc
jmp
fmuls
push
mov
push
cwtl
inc
push
and
out
xor
add
add
mov
xor
mov
add
xchg
inc
jge
sbb
scas
add
inc
scas
in
mov
fstl
dec
push
popf
addr16
stos
add
outsl
stos
sbb
repnz
push
test
out
push
push
sub
stos
cmp
ret
andl
push
ja
ss
sarb
lea
or
in
mov
lods
add
insl
rclb
insl
mov
out
das
push
mov
xor
sub
loope
popf
popf
add
sbb
jle
loope
loopne
mov
sbb
inc
addr16
inc
popw
fwait
jle
or
mov
pop
testl
pop
loop
xchg
mov
ja
lret
mov
gs
xchg
jae
inc
testl
rorb
push
mov
cmp
jg
sub
adc
sbbl
rcr
out
xor
mov
and
sbb
push
pop
push
sbb
cmp
ficompl
lret
repnz
rcrl
arpl
outsb
fsubl
divl
mov
sti
sub
cmpb
jbe
jecxz
mov
push
mov
aam
inc
sbb
jmp
dec
lcall
adc
vpavgb
xor
pop
jb
scas
mov
xor
sbb
jns
out
mov
lahf
inc
mov
sub
inc
inc
dec
jecxz
sbb
and
daa
sub
imul
push
jmp
push
and
out
cld
in
loope
sub
out
push
cmovbe
mov
push
shr
cmp
jbe
test
loop
push
cmp
inc
lock
xor
leave
enter
or
adc
shr
jne
out
nop
pushf
insb
int3
ret
loop
stc
lcall
sbb
or
pop
sub
imul
sbb
insb
jae
xor
outsl
in
ror
add
xchg
sub
ret
orb
lea
jle
sbb
jp
jae
nop
es
sbbb
inc
js
add
xor
push
cld
dec
jns
test
sbb
xchg
sti
push
xor
jmp
cs
and
lret
stc
mov
dec
mov
sti
cmp
sub
movsl
dec
pop
insb
mov
adc
jge
add
cmpsb
sbb
in
xor
in
test
stos
ret
cmpsl
stos
sti
push
fs
lods
xchg
jne
test
cmp
icebp
mov
movsb
push
popf
imul
mov
std
dec
jl
inc
adc
int3
dec
scas
xchg
mov
loope
ljmp
scas
int3
arpl
rorb
les
int3
data16
std
popa
imul
fisttps
mov
or
outsl
jns
add
iret
inc
in
sbb
cmpsb
leave
jae
push
pop
je
loope
dec
xchg
pop
sub
lret
mov
stos
adc
jnp
pop
jp
dec
les
sbb
mov
inc
lahf
add
mull
push
sbb
mov
cmp
fsub
bound
sti
sbb
jmp
outsl
out
xor
ds
mov
cmpsl
nop
int
xor
or
daa
repnz
xchg
or
movsl
mov
cmp
push
mov
inc
inc
das
mov
imul
sahf
xchg
shl
in
mov
mov
sbb
mov
in
mov
shrl
jl
ret
jl
sahf
lds
pop
lahf
gs
mov
divps
cmpsb
inc
dec
pop
sub
shrb
adc
ret
setns
pushf
aas
cmp
cmp
arpl
aam
sbb
ds
dec
frstor
jb
or
sub
xchg
dec
nop
mov
xchg
orb
in
aas
jl
out
mov
es
loop
sub
inc
mov
fs
testb
loop
adc
in
sbb
or
jecxz
dec
gs
mov
or
mov
js
sti
pop
loop
sbb
lret
mov
fwait
or
jno
mov
js
in
push
xchg
lea
mov
pop
cmpsl
add
hlt
rolb
insb
in
std
scas
ret
add
add
and
fisttpl
or
fimull
pop
xchg
xor
aas
adc
xchg
and
subl
int
rorb
decb
orl
ds
dec
inc
aas
loopne
mov
movsl
aaa
sahf
mov
das
std
or
pop
cmp
enter
mov
hlt
jmp
adc
clc
mov
xchg
setne
inc
pushf
ss
mov
test
fisttpll
xchg
mov
dec
xor
mov
mov
dec
adc
mov
cmp
cmpl
addr16
jle
clc
jecxz
fs
hlt
mov
push
es
xor
fldt
xchg
daa
jo,pt
or
sbb
call
in
pop
je
cltd
cwtl
sahf
jle
aaa
mov
clc
cmp
mov
mov
or
aas
pushf
mov
fisubrl
dec
sar
je
or
jp
out
test
imul
cmp
inc
mov
test
imul
xor
ret
sub
test
sub
pop
xor
mov
call
dec
pop
das
jns
jp
add
jns
fcomps
daa
inc
mov
mov
mov
xchg
outsl
mov
testb
sbb
dec
xlat
idivl
inc
jne
add
pop
push
enter
clc
lcall
out
mov
jne
fs
inc
push
cwtl
repnz
mov
push
pop
pop
ret
jno
gs
mov
sub
rcll
xchg
rolb
hlt
mov
iret
loop
shlb
jle
push
insl
insl
mov
adc
cs
or
popa
out
jl
mov
sub
imul
push
or
stos
and
insl
jns
mov
les
pop
pop
test
cmpsl
pushf
sbb
dec
in
loope
out
cmpsb
inc
fcomps
xchg
mov
test
scas
mov
jle
in
mov
js
jnp
arpl
xor
stc
ss
cwtl
or
adc
push
mov
jne
out
mov
enter
cmp
pop
test
rolb
enter
dec
int
movsb
mov
push
push
sub
xchg
cld
jns
sti
sti
dec
dec
cmp
mov
push
in
cmpsl
inc
adcb
sub
adc
in
cltd
repz
jge
dec
xchg
push
les
jae
mov
loop
add
arpl
xchg
push
pop
repnz
cmp
xchg
jnp
scas
out
sbb
cmp
inc
mov
and
je
xchg
xlat
sub
pop
mov
pop
mov
add
cmp
mov
jle
lock
ja
jno
movsl
mov
cmpsl
xchg
dec
jl
push
push
outsb
js
jmp
enter
retw
xor
inc
arpl
pop
mov
add
aad
adc
hlt
test
stc
jle
js
or
test
notb
popa
andl
scas
push
push
jne
lahf
enter
into
das
out
or
pop
push
cmpsl
and
jle
test
add
jmp
or
out
pop
ljmp
inc
arpl
mov
jle
roll
lods
fnsave
pop
push
cltd
jmp
jnp
sub
sahf
stos
xchg
add
ja
xchg
pop
int3
addr16
xor
pusha
cli
les
popa
fists
es
push
mov
push
das
std
rorl
cwtl
nop
ss
repz
scas
inc
into
or
and
cmpsl
ja
pop
mov
fnstenv
sub
loop
sbb
data16
int
inc
mov
dec
jg
pop
jg
mov
or
mov
subl
inc
fistps
xchg
insb
add
scas
pop
dec
pop
inc
out
dec
adc
pop
dec
insl
fisttps
fnstenv
or
outsb
xlat
ret
call
sti
fwait
sbb
idiv
xchg
into
lea
pop
push
dec
ds
inc
and
lods
in
xorb
jno
out
popa
jae
push
ljmp
stos
dec
xlat
mul
int
dec
fs
out
dec
add
std
jnp
cmp
xor
jp
cltd
cmp
orl
scas
sbb
cmp
adc
adc
or
sub
pop
mov
inc
cmp
lods
in
and
out
cmp
push
push
push
or
fldcw
mov
adc
xchg
pop
fldenv
cwtl
cmp
fs
xchg
insb
or
movlhps
aad
cmpsb
jno
loop
and
inc
fistps
mov
scas
js
sbb
ja
jnp
jmp
xlat
mov
sbb
jno
mov
leave
xchg
jno
mov
pop
call
into
cmpb
jecxz
jge
arpl
lods
dec
mov
seta
mov
mov
loope
rorb
xchg
adc
inc
lret
lret
cwtl
pop
jle
cld
aaa
pop
mov
or
in
jns
sub
jae
mov
out
sub
andb
sub
icebp
sahf
outsl
ljmp
fdivs
jbe
dec
sub
mov
imulb
daa
add
cmc
xchg
dec
jp
xlat
jle
adc
xor
mov
das
xchg
mov
xor
cwtl
xchg
jno
sti
xor
mov
cmp
ja
sub
push
xchg
dec
rcrb
insl
xor
xlat
sub
jbe
in
inc
adc
loopne
or
scas
mov
and
xor
pusha
xor
gs
in
movsl
loope
or
fwait
movsb
int
and
adc
repnz
inc
cld
xor
pop
ret
sbb
xchg
dec
arpl
fcmovnb
and
lahf
add
repz
mov
xchg
nop
into
fdivs
jnp
roll
jp
mov
lahf
add
xchg
scas
daa
mov
xchg
pop
and
sbb
pop
cmpsl
pop
lahf
pop
mov
in
cmc
int
or
jle
outsb
lods
push
pop
push
pushf
mov
les
and
stos
cmpsb
xor
mov
and
jnp
pop
push
sbb
jmp
adc
sub
mov
fwait
xchg
ret
mov
nop
sbb
imul
enter
test
add
mov
test
pop
push
std
jecxz
stos
xor
inc
adc
pop
nop
xchg
adc
lret
ja
or
or
sbb
les
xchg
insb
and
arpl
push
cmpl
adc
mov
es
pop
pop
jecxz
mov
xchg
jno
cltd
jns
jg
insb
lea
cwtl
mov
jl
cmpb
iret
push
xchg
push
sub
imul
mov
add
out
out
sarl
xor
inc
adc
adc
pop
xchg
dec
mov
mov
cmp
mov
add
jno
xchg
popf
leave
pop
das
sbbl
lea
lods
xor
int
int
jmp
sub
lcall
jno
xchg
shl
fiadds
sbbb
int3
push
lods
or
sub
dec
jg
dec
js
mov
xor
ret
inc
sarl
lods
xor
inc
insl
xchg
xchg
add
daa
push
jns
cmpsb
test
pop
stc
mov
mov
jo
push
adc
or
inc
push
sbb
mov
test
ss
sub
loop
idivl
jno
cmp
leave
test
ret
sbb
mov
outsb
popa
push
xor
or
jmp
divl
xchg
xchg
insl
daa
fmull
dec
in
jne
ficoml
mulb
aaa
mov
xor
int3
mov
jb
out
xchg
inc
dec
pushf
xor
mov
or
fadd
ret
call
jns
cmp
js
dec
or
pop
mov
ret
insb
mov
fmull
fidivl
push
xchg
rcrl
push
imul
scas
icebp
adc
sbbl
fmul
xchg
add
data16
jb
into
out
mov
mov
fs
rorb
repnz
dec
ror
fcompl
ja
mov
sub
mov
jns
das
and
pop
jno
adc
xlat
in
sub
sbb
jnp
ljmp
sub
adc
mov
pop
rol
lret
into
ds
js
scas
sub
cmp
sbb
xlat
push
push
cmp
adc
adc
inc
add
xchg
mov
xor
sbb
adc
adc
cmpsl
sub
mov
scas
stc
mov
and
mov
xchg
cmp
jecxz
add
sub
fcmove
push
ja
and
rclb
inc
mov
push
jp
and
mov
test
jno
lods
xchg
mov
pushf
jecxz
test
test
shrb
outsl
cwtl
xlat
pop
test
mov
dec
lods
push
add
cli
repz
das
mov
aam
and
add
leave
pop
jae
jb,pn
ljmp
mov
int3
pop
xchg
pop
repnz
sub
lret
xor
imul
loope
cmp
jb
jae
scas
or
inc
mov
add
mov
outsb
push
jg
and
pop
out
dec
mov
jno
test
adc
mov
subb
or
test
or
cmp
fwait
stos
das
popf
out
cmp
xor
and
sbb
lea
pop
aad
fdivp
mov
ds
pushf
or
dec
daa
rcr
flds
add
loopne
xor
int
and
cmpsl
inc
jl
cwtl
aad
jecxz
fcmovnu
sub
inc
je
and
xchg
adc
sbb
test
or
push
out
sbb
dec
mov
mov
arpl
movsl
push
add
or
das
and
js
call
jbe
xor
stc
das
ja
mov
dec
xchg
add
xchg
xchg
aas
xor
cli
lods
or
shr
icebp
mov
xor
mov
loopne
cmpsl
outsb
outsl
hlt
dec
mov
leave
mov
notl
dec
and
js
mov
xor
lret
sub
pushf
mov
push
pop
xor
jae
pop
addr16
sub
push
pop
push
mov
ror
out
imul
jecxz
cmp
repnz
sub
inc
rdtsc
mov
out
movsb
rcll
xor
mov
pushf
xor
mov
or
dec
add
lret
int
icebp
inc
dec
sbb
out
push
mov
add
sub
mov
add
fsub
dec
mov
pop
cli
jno
icebp
cmpsb
sub
cs
add
mov
dec
sbb
mov
mov
or
jnp
int
sub
ja
or
movsb
pop
dec
data16
mov
and
mov
jno
mov
mov
bnd
adc
das
xchg
dec
and
push
rcrb
cmc
mov
jno
and
lock
test
jno
leave
xchg
pop
pop
sub
dec
mov
jge
push
mov
cmp
or
dec
xor
sub
mov
push
xor
jo
lcall
hlt
cmp
popa
in
adc
push
push
ret
jne
imul
ret
push
pop
add
out
dec
cmc
xchg
mov
test
sbb
lcall
pcmpgtd
push
imul
lds
cli
sbb
mov
dec
lret
inc
insb
inc
mov
imul
lahf
lea
iret
xorb
sbbl
sub
push
inc
out
mov
sar
cwtl
add
mov
sub
ljmp
dec
jl
push
out
mov
movsl
dec
cmp
insb
movsl
pop
enter
xchg
bound
mull
add
or
cltd
dec
push
dec
sub
out
iret
loope
and
cmp
movsb
xchg
pop
xchg
inc
sbb
call
jo
lret
mov
popf
pop
mov
popf
ret
stos
jg
in
scas
repnz
sbb
ja
pop
push
jge
mov
je
pop
push
fdivrl
inc
test
insl
daa
xchg
ss
sbbl
xchg
cmp
aas
push
arpl
push
notb
dec
pop
inc
lcallw
or
pop
imul
out
add
mov
xchg
pushf
jp
cmp
lea
sub
push
lret
pop
es
lods
out
sub
aad
cmp
adc
scas
push
loope
scas
iret
jl
push
add
and
jl
out
cmpsl
push
out
enter
pop
movsb
stos
add
pop
or
jl
fidivs
adc
ror
or
mov
mov
fnstenv
xchg
iret
int3
js
adc
js
or
call
icebp
out
sub
mov
sub
jmp
pop
and
mov
roll
out
out
fwait
dec
sbb
iret
mov
pop
sahf
sbb
xchg
sub
and
movhlps
xchg
scas
insl
out
xchg
jae
xchg
test
push
xor
bound
in
mov
pop
out
inc
outsb
shlb
push
sub
sbb
clc
cmpsl
or
mov
jle
out
rcr
inc
leave
sbb
outsb
push
sbb
push
jb
mov
jecxz
std
test
imul
iret
insb
mov
out
stos
fisubs
mov
xchg
in
lods
out
clc
mov
adc
repnz
mov
xor
mov
stos
mov
ljmp
adc
fisubrs
sbb
or
rep
push
imul
subl
in
xor
inc
aas
xchg
mov
sti
xlat
push
jb
adc
popf
pop
cs
ret
push
cmp
mov
mov
fdivrs
rcrb
ljmp
push
mov
imul
ja
sahf
das
fdivp
jecxz
sahf
or
rclb
or
loope
mov
xor
jb
adc
cmpl
lea
xor
push
in
mov
test
pop
leave
jae
xlat
pop
mov
xchg
and
sbb
xor
enter
mov
movsl
daa
inc
and
pop
out
cmpsb
xlat
cwtl
mov
pop
adc
cmpsl
stos
sbb
mov
and
push
out
cmpsb
loopne
ret
xchg
add
fstps
xlat
adc
rcrb
popa
and
xchg
sbb
mov
xchg
insb
in
push
daa
aaa
xchg
icebp
xchg
sahf
sbb
movsl
test
stc
test
add
jbe
mov
lds
std
fimuls
xor
cmovl
pop
mov
push
stos
cmpsb
sbb
enter
sbb
mov
jecxz
loope
add
pop
xchg
aaa
pop
movsl
clc
cmp
push
aaa
in
add
lcall
and
push
mov
movsb
fdivs
rcrl
ja
int
xchg
rol
add
inc
in
or
pop
jo
push
push
xchg
mov
in
adc
mov
and
mov
mov
mov
or
adc
mov
into
mov
in
cmp
cli
mov
mov
xchg
dec
enter
je
push
aam
pushf
arpl
jnp
cmp
and
sahf
iret
jb
and
mov
ds
xor
sbb
mov
test
sbb
jle
push
repz
popa
xchg
add
roll
inc
andb
add
pop
rorb
jnp
sbb
lods
addr16
lahf
es
lea
outsb
dec
stos
sub
imul
mov
jbe
push
cmp
xchg
cmp
push
enter
dec
lods
addr16
cmpsl
js
clc
cld
sbb
sub
in
stos
clc
dec
push
inc
mov
rcl
negl
xor
adc
scas
pushf
in
xchg
push
decl
call
rcll
adc
xor
push
xchg
stos
push
xor
sub
scas
out
inc
stos
cwtl
test
mov
inc
push
xchg
std
xor
pop
push
popa
push
hlt
lahf
dec
mov
bound
and
lock
xor
daa
jg
enter
fsubp
bound
push
fistpll
mov
xor
xchg
aam
push
mov
mov
scas
addl
cmp
cmp
cmpsb
cltd
sub
push
pop
mov
jbe
pop
in
or
enter
adc
mov
xchg
gs
jnp
sarl
in
inc
popf
lock
sub
cmp
push
add
cli
popf
mov
dec
or
arpl
and
dec
xor
lods
xchg
inc
jb
movsb
xchg
inc
sbb
or
mov
pusha
inc
cmc
inc
int
rcrl
jnp
and
lahf
movsb
sbb
mov
mov
jge
hlt
mov
lcall
das
insb
dec
xchg
dec
lahf
cmp
sbb
mov
clc
sarb
aam
scas
push
je
jmp
cwtl
mov
push
in
mov
addr16
scas
mov
dec
sarl
mov
push
mov
push
fnop
mov
adc
aaa
insb
in
sub
adc
pop
push
push
xor
adc
fmull
out
xor
fnstcw
loop
jg
jge
sbb
mov
fwait
outsb
add
lds
stc
insb
cmp
scas
daa
hlt
push
psllw
cmp
mov
std
and
or
inc
push
out
popa
ds
js
push
icebp
aas
pop
ret
adc
adc
mov
mov
jo
add
mov
rcl
mov
lock
out
call
aaa
xchg
lock
mov
out
lods
sar
dec
aam
mov
arpl
aam
loope
jno
or
imull
pop
fs
test
dec
cmpsb
or
mov
mov
out
xchg
cmp
xchg
loop
inc
les
enter
inc
inc
cmp
sbb
mull
mov
push
scas
dec
mov
cmp
cmp
jne
xlat
ja
popf
sti
add
jae
in
mov
xor
xor
dec
sbb
enter
pop
mov
fstps
icebp
cwtl
pop
cmpsl
rcrl
lahf
test
sub
lods
movsl
mov
sti
cmpsb
jmp
push
sarl
and
cli
test
pusha
das
lods
push
into
insl
es
add
fiaddl
je
push
pop
xchg
xchg
add
ds
push
cmp
out
shlb
pop
jbe
xlat
mov
aad
ret
int3
jle
seto
cmp
sub
and
dec
jg
das
sbb
add
scas
cmp
cmp
sbb
addl
adcb
push
jp
outsl
mov
xchg
xor
push
ljmp
pop
into
push
aas
std
popa
xor
out
std
hlt
fsubrl
aaa
lahf
xchg
mov
pop
add
pop
movsb
pusha
add
jmp
and
fidivrl
dec
mul
dec
inc
inc
int
adc
mov
addr16
andl
mov
add
hlt
lcall
push
xor
dec
mov
ret
sub
adc
mov
mov
imul
std
jno
pop
pop
cs
or
popa
and
lods
pop
das
lods
inc
push
cmpsb
aad
push
clc
add
mov
div
or
sub
and
pop
dec
jp
clc
push
or
dec
cld
nop
stos
mov
in
shrl
add
cmpxchg
pop
jns
popa
orl
xchg
and
lahf
mov
shll
pop
call
inc
jl
sar
dec
repz
movsl
loopne
call
jp
or
cld
int3
pop
push
out
jb
xorb
and
jns
shrd
push
es
mov
or
rcr
adc
pusha
pop
pop
inc
jp
and
pop
inc
and
stos
mov
and
mov
cmp
push
cmp
imul
popa
fiaddl
sub
repz
fcoms
cmp
mov
fisubrs
or
xchg
mov
rcl
jno
hlt
mov
adc
mov
inc
sub
cmp
cmp
mov
movsb
or
cltd
sub
xchg
push
jne
push
mov
inc
bound
cmp
and
jp
cld
mov
out
inc
movsb
inc
lret
lret
popf
or
or
std
ss
cmovnp
push
push
add
push
fs
jae
jae
ret
jmp
mov
add
sbb
mov
xor
adc
clc
lcall
push
push
pop
or
aam
addr16
outsb
cmp
xchg
pop
mov
lahf
subb
fldenv
or
in
jg
inc
or
out
sub
nop
imul
shll
adc
mov
sbb
popa
sub
jg
leave
pushf
push
jo
cmp
ljmp
jp
stos
lret
jb
hlt
scas
cs
mov
mov
or
adcl
and
movsb
adc
cs
cli
mov
insb
movsb
outsl
cli
mov
mov
int
dec
lret
cmpsb
xchg
cmpsb
lret
jno
cld
je
mov
sub
sti
es
mov
sbbb
in
lock
add
lahf
out
mov
pop
fucom
stos
ljmp
mov
pop
aas
jle
test
mov
rorb
dec
int3
aas
xor
shrb
mov
mov
testl
dec
or
andb
out
adc
lock
adc
out
int
xor
loopne
ret
sbb
mov
in
inc
stc
inc
add
loopne
insb
pop
inc
lods
xchg
dec
push
adc
cmp
and
ffreep
xor
mov
xchg
repz
mov
je
jae
push
imulb
ja
adc
add
mov
push
loope
dec
enter
mov
cs
push
mov
lret
cmpl
ljmp
popa
pop
jecxz
xchg
sahf
aam
pop
push
cmc
fstps
cltd
cli
push
or
xchg
movsb
add
aas
outsl
xor
jmp
imulb
adcb
inc
jno
jl
sbb
dec
sbb
arpl
pop
pop
popf
imul
and
mov
add
jb
sbb
cmpsb
sahf
repnz
xor
jae
scas
xor
call
pop
faddl
rcl
push
inc
cwtl
adc
scas
addr16
scas
insb
dec
xchg
cmpsl
outsb
sub
inc
jp
jge
ss
add
stc
push
test
xchg
and
or
xor
or
cmpl
and
je
xchg
arpl
outsl
adc
fisttps
mov
loope
mul
sti
and
loopne
add
lea
js
sub
cld
bound
jp
dec
pop
xor
push
cmc
test
cwtl
xchg
pushf
ljmp
cmc
sub
add
jle
inc
icebp
fistps
sub
sahf
mov
sub
mov
mov
push
repnz
xchg
divl
adc
sbb
js
ja
ja
adc
daa
or
cltd
inc
leave
push
fisubrl
sub
sbb
insb
aad
pushl
dec
cmp
ljmp
push
sbb
incl
xor
in
mov
fcomps
fsub
push
outsl
hlt
imul
cmp
push
jne
xor
std
push
imull
jbe
out
mov
test
push
pop
xor
sbb
movsl
addr16
xchg
fs
pop
inc
out
jns
loopne
nop
or
cmp
std
lret
in
gs
pusha
test
data16
push
into
jle
stos
xchg
push
and
call
imul
pop
ret
sub
xor
pop
lcall
inc
dec
movnti
dec
aad
aad
add
filds
pop
lds
cli
mov
push
sbb
sub
mov
pushf
lret
test
int3
cmp
inc
cli
cmp
xor
out
sub
add
outsl
clc
pusha
enter
pusha
cmp
xchg
andb
les
inc
push
sub
popa
push
shll
pop
rcl
cmp
pop
movsl
sti
in
lds
xor
jns
mov
pop
loopne
bound
outsb
dec
xor
push
sbb
or
or
pop
icebp
jp
loop
clc
int3
jo
mov
iret
aaa
cmp
mov
cli
jecxz
mov
add
add
and
fistpll
fcomi
mov
and
xorl
push
dec
dec
cmpsl
enter
leave
cmp
adc
je
jl
test
pusha
jne
mov
aas
push
xchg
out
and
int
cltd
test
outsl
cltd
add
ds
mov
addb
js
xor
push
aad
jns
pop
out
xor
stos
leave
and
into
xchg
jle
aas
int
mov
addl
push
push
loopne
mov
sbb
and
xor
mov
dec
jg
stos
pop
lock
cld
adc
cmp
sbb
in
push
and
xchg
test
sbb
cmp
xchg
jbe
mov
dec
jns
dec
adc
outsl
add
jge
stos
sbb
hlt
or
xchg
or
sbb
je
jne
xchg
push
int
stos
ret
adc
adc
jmp
into
dec
and
fcmovnbe
adc
pop
pop
cli
push
data16
fiadds
popa
cmp
mov
js
jns
lea
int3
lds
pop
cwtl
lock
and
sub
push
ljmp
xchg
test
cmpsb
stos
add
sub
lock
leave
fisttpll
shlb
int
scas
sub
fsts
dec
inc
mov
inc
leave
ss
lods
dec
pop
div
stc
mov
call
rcr
out
add
pop
push
push
int3
pop
inc
out
inc
lds
jae
into
dec
push
test
mov
mov
push
fistpl
lods
push
ja
insb
adc
repnz
lods
mov
lret
insl
inc
xchg
dec
test
cmpsb
sub
xchg
xchg
xchg
ljmp
in
scas
fstpt
inc
into
sub
adc
mov
mov
and
xor
out
jno
sbb
lea
mov
imul
mov
ja
sti
jae
lds
fwait
push
ret
xor
add
movsl
repz
outsb
mov
ficoml
push
cwtl
dec
dec
fidivrs
repz
mov
movsb
inc
nop
cld
lcall
sub
push
cmpsb
xchg
lret
enter
in
in
stos
imul
lods
ljmp
jmp
hlt
xchg
dec
imul
movsl
mov
adc
push
adc
dec
pushl
inc
mov
imul
ljmp
jmp
ljmp
push
or
xor
vcvtsi2ss
pushf
cmpsl
fcoms
cwtl
xor
cmp
xor
lcall
cmp
test
iret
mov
fwait
data16
jmp
out
jae
sbb
push
dec
data16
and
fisubrl
shr
mov
mov
mov
sub
cli
ja
or
les
test
insl
cmpsb
and
pop
inc
add
cmp
int3
aam
daa
iret
out
lret
das
cmp
pop
incl
test
das
pop
and
lds
mov
xchg
fdivs
cmp
mov
inc
ret
pop
orl
sbbl
lcall
add
mov
xor
jo
clc
daa
subb
iret
addb
lret
inc
stos
setno
cs
popf
xor
cwtl
pop
nop
jnp
pop
pop
cmp
outsl
xor
sub
aaa
testb
rcrl
xchg
adc
or
imul
aam
out
xchg
xchg
addr16
and
insl
cs
mov
mull
movsl
add
jmp
push
shl
xchg
pop
std
dec
lret
das
push
pop
cltd
fs
cld
dec
dec
sub
pop
fisubl
cmp
pop
daa
test
rcrb
sub
frstor
das
jns
pop
les
stos
and
pop
add
pop
je
loope
movsl
fcomps
and
xor
ja
std
out
xor
pushf
pop
stc
adc
shll
mov
adc
mov
cltd
and
add
sub
les
and
inc
ret
repz
popa
in
xchg
xlat
inc
das
pop
or
and
cmpl
sub
cmp
in
rcrb
dec
mulb
inc
jp
lods
imul
out
adc
sahf
ds
cld
pop
imul
leave
pop
stc
jb
out
jbe
pop
stos
fcmovb
mov
jo
sub
xchg
in
les
cmp
cmp
out
rcr
ret
cmp
sub
inc
lahf
loope
adc
cmp
dec
addr16
movsb
inc
adc
pop
jbe
movsl
push
outsl
cmp
iret
xchg
and
sbb
or
sbb
lahf
jnp
push
fwait
cmpsb
int3
jmp
addr16
rorl
std
shll
fs
mov
pusha
dec
jle
cmp
xlat
or
mov
repz
lods
jle
out
mov
pop
js
mov
cwtl
nop
testl
push
xor
das
out
push
call
repz
jmp
pop
ds
add
pop
jb
add
mov
insl
pop
mov
loop
or
test
or
data16
push
cmp
push
sbb
sub
mov
jg
inc
pop
pop
mov
fsubl
jmp
arpl
test
mov
mov
xlat
in
mov
or
pushf
mov
xchg
push
out
pop
in
ja
lea
fyl2x
je
fcmovu
adc
jne
fwait
in
lock
cs
aas
push
adc
sbb
mov
and
mov
dec
cmc
or
jge
pop
xchg
xchg
mov
mov
cli
mov
push
cmp
test
scas
push
jmp
and
pop
jnp
call
push
mov
stos
ret
jg
jge
mov
mov
jbe
xchg
fcmovu
out
movsl
out
inc
xlat
jne
dec
cmp
or
ds
je
mov
shrl
outsb
or
jns
jg
ret
push
add
mov
fcoms
stos
pop
sub
ret
mov
fldenv
mov
pop
mov
dec
add
scas
lret
xor
xchg
or
mov
mov
lret
sub
test
or
divl
push
and
inc
sbb
sti
and
loopne
mov
addl
fcoml
or
jecxz
pop
add
inc
loope
fdiv
xor
xor
loope
mov
fistps
jge
mov
pop
sti
sub
test
aas
mov
insl
stos
ds
dec
jo
lcall
jns
scas
push
fnstenv
pop
adc
ljmp
popa
add
fdivl
push
test
push
cld
cmp
push
mov
int
pop
mov
lods
insl
inc
or
notb
and
andb
fildl
mov
sub
xor
mov
mov
flds
enter
mov
hlt
adc
scas
fisubs
movzwl
jmp
and
add
sbb
shr
xchg
repz
int3
cmp
mov
je
mov
bsf
mov
test
pop
mov
int
xchg
mov
nop
sub
outsl
in
xor
add
mov
pusha
jb
mov
pop
mov
pop
adc
movsl
in
outsl
or
aad
pop
filds
cmp
add
mov
pop
pop
push
xlat
and
leave
xchg
push
jecxz
jp
mov
cs
adc
fwait
mov
lods
dec
cltd
hlt
jge
inc
add
dec
mov
dec
pop
jns
leave
out
and
jecxz
push
xchg
scas
adc
in
repz
sahf
inc
add
jne
shll
or
imul
dec
or
movsb
dec
out
out
jns
scas
mov
push
shrb
in
aas
pusha
ss
cmp
mov
cmp
cmp
pusha
ss
pop
sub
loop
push
cld
imull
stos
adc
and
mov
xchg
adc
mov
inc
mov
dec
push
dec
lahf
dec
ljmp
or
divl
lahf
pop
xor
inc
mov
lret
cmp
inc
push
and
jge
xor
xchg
rcrb
push
popf
and
nop
sbb
and
xchg
sti
cs
repz
mov
or
inc
xchg
or
cmp
mov
xor
enter
push
test
rcr
sub
in
cmp
aas
iret
adc
pop
mov
inc
xchg
or
adc
andl
lock
jne
outsb
push
push
mov
cld
push
and
in
test
inc
mov
xchg
es
xchg
scas
mov
and
sarl
sub
in
pop
xchg
mov
pop
lds
insb
sub
mov
sub
and
negb
lds
cmpps
in
lods
mov
pop
pop
xor
aas
xchg
sub
shl
xchg
addb
lret
sub
pop
jle
inc
push
sbbb
xor
ret
xchg
rorl
pop
push
test
pop
mov
stos
aas
add
lcall
enter
ljmp
cld
pop
fdivs
mov
add
outsl
jo
or
inc
mov
test
jno
sarb
jns
cmp
fisubrs
inc
mov
xor
cli
dec
fisubrl
ljmp
pop
addr16
aas
pop
pop
and
adc
inc
push
adc
filds
clc
xor
test
or
pop
int3
int3
sbb
lret
dec
shrb
stos
pusha
mov
sahf
cmp
jae
call
icebp
or
or
lret
jne
imul
and
test
or
mov
pop
aaa
dec
in
xchg
mov
loop
sti
aas
insb
bound
xchg
xchg
lahf
pop
inc
jle
fidivrl
sarb
popa
xchg
mov
add
adc
hlt
push
lds
fstps
scas
insb
mov
xchg
mov
and
pushf
pop
cmp
daa
xchg
cs
aas
aad
lret
data16
xor
lahf
jecxz
mov
mov
xor
push
mov
aaa
jmp
enter
movb
insb
sti
ljmp
popf
sub
addb
lods
cld
in
xchg
cli
jp
lds
jbe
sub
jge
jo
es
fneni(8087
sub
xchg
push
and
or
or
es
mov
pushl
test
xlat
iret
jns
inc
fs
mov
mov
sub
dec
sub
jnp
shlb
or
daa
inc
xor
mov
push
or
inc
mov
leave
loopne
ja
fbld
pop
bound
loop
outsl
mov
fsubr
sbb
xchg
std
inc
or
add
and
mov
mov
xor
cli
mov
push
lret
cmp
pop
inc
sarl
cwtl
push
je
imul
jb
xor
pop
out
xchg
test
out
aas
test
pop
sub
mov
nop
and
sub
jge
insl
in
test
pop
icebp
loopne
cmp
jecxz
mov
adc
in
xchg
mov
out
xchg
mull
loopne
mov
roll
xchg
pop
jae
pop
mov
sbb
push
and
ret
push
lods
or
fwait
test
idivl
fildl
xor
loopne
mov
test
inc
xlat
mov
and
xor
pop
loopne
inc
icebp
arpl
repnz
sub
int
jl
lcall
shll
sti
into
pop
sbb
jae
and
lea
popf
mov
out
negb
jbe
iret
incb
xor
fnstsw
or
push
jo
mov
and
aad
xor
dec
xor
push
out
imul
adc
jge
cltd
jnp
mov
inc
fcompl
addr16
test
nop
lods
xchg
imul
dec
in
cltd
xchg
pop
mov
ja
push
or
pop
arpl
and
xor
xor
mov
lock
xchg
dec
xchg
sub
mov
adc
movsb
mov
dec
pop
sahf
notl
decl
fildl
or
mov
lret
pop
xorb
stos
insb
aam
cmc
xchg
cmp
sbb
cld
aas
push
push
lods
lods
imul
push
mov
fldln2
stc
push
stos
adc
mov
pop
sti
aad
push
aam
ret
divl
mov
fucom
fsubl
and
lret
lods
jo
in
sub
out
dec
sahf
dec
sub
pop
scas
xor
xchg
adc
cwtl
addr16
lods
sbb
test
jle
dec
mov
mov
pop
cld
push
aaa
inc
or
inc
enter
mov
sub
rolb
push
cld
jnp
sti
in
cltd
jae
es
pop
sbb
loopne
xchg
or
and
enter
push
sahf
enter
out
stc
jae
add
xchg
xor
and
loop
sub
in
push
push
imul
into
mov
je
cmpsl
decb
in
mov
add
cli
pop
mov
jle
add
inc
dec
les
inc
sbb
mov
dec
nop
jns
loop
rcrb
sbb
cmp
push
sub
dec
sbb
jae
fwait
imul
cmp
or
push
sbb
sarb
scas
aaa
sbb
xchg
imul
jl
fsubs
jmp
in
mov
aaa
out
adc
dec
cmp
enter
inc
int3
add
or
in
xchg
adc
mov
hlt
add
or
scas
cmpsl
push
imulb
jp
es
cmpsb
leave
push
in
cmpsl
pop
cs
xchg
repz
dec
and
test
dec
test
test
xchg
fistl
scas
or
pop
cld
gs
pop
cld
ja
pop
jno
inc
mov
mov
push
and
inc
inc
divl
sub
adc
xchg
add
imul
dec
xchg
dec
sub
jecxz
lahf
iret
adc
push
push
sbb
mov
pop
inc
xchg
push
jno
add
inc
cmc
cmp
dec
dec
dec
insb
sub
dec
pop
lret
das
and
adc
add
jge
das
jnp
out
jl
lret
fmull
sti
jnp
pop
iret
outsl
cwtl
jg
cmpsl
inc
outsb
pop
imul
push
jle
lea
adc
pop
filds
mov
jecxz
xchg
sarb
sub
mov
xchg
ret
loope
sti
aad
xlat
out
xchg
pop
sbb
je
imul
fmull
movsb
dec
movsb
dec
push
push
mov
hlt
jb
stc
mov
cmp
mov
enter
sahf
sub
movups
inc
ss
xor
testb
bound
hlt
push
insl
rolb
lahf
dec
pop
dec
inc
call
lret
es
dec
arpl
push
mov
dec
aam
popa
fistps
jl
in
inc
in
hlt
mov
fcoml
xchg
jmp
mov
push
dec
popf
adc
jmp
wrmsr
and
pop
icebp
cld
movlps
inc
xor
xor
into
sti
test
ficomps
xchg
cmp
cltd
inc
pop
xor
fdivrl
pop
dec
es
inc
mov
xchg
dec
lahf
rcrl
test
cmp
and
sub
adc
decb
xchg
ja
sub
lcall
ljmp
or
cmp
sub
pushf
mov
mov
jmp
mov
pop
outsl
push
ret
int3
mov
inc
stos
je
cmpsl
das
daa
dec
lcall
in
adc
mov
xchg
pushf
test
adc
lret
xchg
int3
out
add
ret
mul
mull
ljmp
xchg
xor
inc
cmp
std
jmp
mov
movsb
idivb
xlat
jo
sub
inc
mov
ror
daa
cmc
mov
pop
aad
xchg
mov
mov
loope
rorl
xor
lcall
fsubs
cmc
je
pop
icebp
fnstenv
mov
mov
inc
pop
cmp
jbe
cmp
mov
cs
pop
adc
loopne
add
dec
mov
inc
xchg
pop
repnz
adc
rolb
in
int3
shlb
ret
lahf
in
push
add
mov
adc
das
sbb
mov
pmaxub
sbb
and
mov
cmpsb
lret
ljmp
pand
adc
out
lds
mov
mov
sub
pusha
arpl
dec
sub
sahf
lret
push
mov
imul
inc
sub
jmp
ret
arpl
mov
sbb
dec
mov
xchg
push
xchg
add
pop
fisubrs
shll
sbb
repnz
jnp
or
and
sub
hlt
mov
cmc
mov
sbb
repz
test
mov
sbb
sub
sub
cmpsb
std
push
mov
sub
jp
add
aam
gs
and
stc
outsl
push
pop
rolb
into
sbb
adc
mov
imul
jb
push
outsl
pop
xchg
test
loopne
sar
xchg
jb
pop
and
iret
inc
cs
cmp
ds
pop
push
and
int
inc
jle
mov
adc
jae
dec
push
mov
arpl
movsb
movsb
jp
jo
jno
mov
xor
rcll
imul
add
popa
int
push
adc
movsb
lcall
xchg
sarb
cwtl
insl
and
mov
and
fdivr
pop
pop
ja
xchg
mov
inc
dec
xchg
inc
test
dec
loop
pop
mov
jl
pop
dec
mov
sbb
fcmovnb
lea
inc
sbb
dec
in
sbbl
xchg
jmp
mov
mov
aas
stos
pop
hlt
push
das
fwait
call
or
inc
adc
xchg
dec
cmp
cmpl
jo
stos
cwtl
push
mov
push
rorb
cmp
shlb
pop
mov
inc
and
sbb
ret
mov
fmuls
jns
jbe
js
xchg
cmpps
push
cmp
orl
mov
addr16
test
popf
mov
cld
or
xchg
mov
inc
stos
ds
mov
pop
movsl
lods
int
or
insb
test
stos
add
mov
jg
push
xchg
call
test
dec
mov
stos
mov
cmp
outsl
mov
and
mov
dec
pop
into
scas
cmpsl
cmp
pop
cmp
lods
inc
mov
into
test
je
pop
or
xchg
pop
addr16
fiadds
cmpsb
es
xchg
andl
les
xchg
shlb
addr16
dec
dec
mov
push
fidivrs
out
xlat
mov
cmpsb
jbe
adc
popf
adc
inc
frstpm(287
cli
xor
xchg
mov
mov
and
fs
add
xor
sbb
xor
inc
xchg
ret
ret
inc
push
cltd
jmp
in
lds
pusha
enter
mov
xor
mov
push
loopne
fisttpll
add
clc
pop
je
stos
in
mov
mov
mov
int
mov
insl
lods
addr16
mov
add
mov
inc
sub
and
sbb
sub
aad
inc
aam
push
outsb
pop
sbb
lock
or
movb
aas
in
inc
mov
mov
or
mov
xchg
and
add
jp
or
js
movsb
int
adcl
test
aas
lcall
mov
xor
push
loopne
ljmp
sbb
les
dec
pop
lret
push
movsb
mov
xchg
fsubr
or
jmp
mov
add
inc
dec
jns
push
cmpsl
cwtl
add
push
insb
cmpsl
shlb
cmpsb
popf
or
test
shrb
mov
ss
in
cltd
enter
cmp
les
push
sbb
sbb
xchg
pop
into
mull
outsl
add
sbb
lahf
mov
fstpl
test
mov
movsb
xchg
fistpl
ss
cmp
or
add
sub
cs
xor
rcl
stos
mov
fidivrs
adc
popf
shlb
pusha
or
mov
int3
bound
mov
scas
xchg
sahf
jns
and
inc
inc
sbb
mov
lods
movsl
push
add
lods
dec
pop
repnz
cmpsl
xchg
nop
sahf
sub
rcrl
cmc
adc
sub
or
subb
xchg
ret
xlat
hlt
push
pop
sbb
mov
ds
test
aas
push
xlat
enter
fdivrl
adc
sub
mov
lock
test
sub
jne
in
adc
mov
or
mov
mov
add
imul
fsubs
push
cmpsb
push
pushf
sub
dec
jb
sub
sub
push
xlat
sbb
out
and
mov
sbb
lahf
std
imul
mov
movsl
dec
out
sbb
dec
lods
push
adcb
sahf
or
push
pusha
pusha
mov
adc
fbld
pusha
icebp
adcl
mov
mov
pop
push
imul
iret
lahf
call
lods
in
adc
mov
fisubs
ds
mov
mov
inc
jb
adc
not
loop
dec
cmpsl
cmp
in
xchg
push
dec
dec
sbb
stos
or
inc
test
dec
xchg
sub
out
jge
jbe
xchg
xchg
fidivrs
nop
jnp
lds
jae
lds
rolb
jae
and
inc
xchg
pop
inc
jns
xor
in
lcall
out
icebp
xor
xor
mov
mov
test
lods
sub
js
dec
sbb
adc
hlt
xor
cs
push
lods
push
jae
insb
mov
inc
data16
jae
jb
jae
sbbl
mov
fnstsw
andl
arpl
inc
test
xchg
xchg
jmp
shr
mull
repz
outsl
dec
inc
inc
cmp
ss
rcl
hlt
out
fstl
cmc
sbb
hlt
shr
xchg
not
jno
out
fwait
int
cs
dec
cmp
scas
sub
mov
pop
sub
dec
gs
jp
cltd
lcall
xchg
movsl
add
xchg
adc
mov
fwait
loop
jbe
fwait
mov
hlt
mov
into
xchg
push
lret
mov
movsb
insl
cmpb
cltd
iret
ja
repz
push
adc
scas
imul
repz
dec
xor
mov
scas
fidivl
in
push
imul
addr16
jp
test
outsl
shlb
dec
or
inc
sbb
fnstenv
sbb
or
mov
xchg
lret
std
add
sub
repnz
mov
and
ret
iret
lock
pop
cmp
inc
jne
in
lock
cmp
rol
sbb
andb
cs
cmp
jecxz
lods
iret
cs
or
adc
dec
aad
hlt
mov
sbb
adc
sub
xchg
or
stos
xor
sbb
fsubrl
inc
pop
insl
std
cmpsb
fwait
popf
pop
ret
add
shll
add
fimuls
dec
mov
pop
fisubrl
in
fimuls
push
dec
xchg
ss
aam
cmpsb
enter
mov
xchg
int3
test
imul
stos
in
stc
pop
mov
rolb
and
push
push
pop
js
insl
adc
mov
es
outsl
loope
pop
loop
clc
add
nop
pop
out
xor
fidivrl
adc
adc
jo
sbb
fsub
std
sbb
sub
and
and
jns
lcall
movsb
cwtl
cmp
jl
ja
mov
xchg
ficoms
fdiv
adc
dec
ds
xchg
clc
and
adc
mov
data16
push
js
sti
inc
push
loope
gs
aam
sub
mov
push
in
std
pop
mov
rol
lea
sahf
lds
fwait
fs
cmpsb
ficomps
inc
dec
jle
dec
testb
add
push
xchg
out
xor
dec
push
fistpl
jns
sar
push
push
add
push
pushf
jo
sub
inc
pop
sub
jo
push
mov
es
ja
call
cmpsl
xlat
repnz
lahf
push
test
sub
push
inc
aam
and
push
xorl
jb
ret
cli
mov
into
lret
enter
jl
mov
dec
repnz
pop
push
mov
mov
popf
scas
adc
rcrb
pusha
cmp
cmp
insb
out
test
push
inc
xchg
push
jp
fs
fidivl
ljmp
cs
or
mov
fldcw
xchg
push
pop
kmovw
gs
lahf
push
daa
cltd
rcl
adc
jecxz
adc
fistl
adc
sbb
add
adc
cmpsb
pop
les
js
push
pop
sbb
dec
adc
xchg
cmp
pop
loop
jg
pop
sbb
insb
mov
adc
inc
push
inc
psubusw
test
in
jp
in
or
mov
sbb
in
aam
push
scas
pushf
bound
push
and
sub
out
pop
mov
cli
cs
jnp
sbb
inc
pusha
inc
hlt
add
and
add
gs
inc
jo
cmp
jo
addb
sbb
cld
xchg
sbb
mov
jl
mov
sub
lds
push
pop
push
stos
lahf
sti
mov
mov
and
push
cmp
shll
test
lods
out
inc
mov
aad
or
lea
sub
push
in
cwtl
movsb
popa
loop
mov
ja
xor
jno
test
mov
jae
pusha
insb
cwtl
das
jns
mov
call
xchg
out
leave
not
xor
out
fxch
push
xchg
es
movsl
lcall
and
sbb
outsl
daa
loopne
es
dec
aam
popa
fists
mov
inc
sahf
cltd
cwtl
dec
push
mov
mov
inc
aas
cs
rclb
push
test
push
adc
cmp
push
mov
ror
mov
pop
fcmovnbe
or
push
subb
mov
xchg
mov
xor
add
push
shl
jbe
aaa
lds
lods
xor
mov
incb
mov
adc
and
popa
push
and
xchg
sub
dec
arpl
mov
jp
dec
mov
out
xor
call
add
lds
mov
jge
dec
jl
jne
fsubl
lods
add
icebp
in
or
xor
push
cmp
ljmp
sub
popf
mov
icebp
ds
movsb
push
inc
out
and
inc
inc
xchg
dec
stc
jecxz
loopne
jle
fwait
adc
xlat
loop
int
ret
nop
dec
mov
gs
fistl
push
pop
jecxz
pop
popf
and
ja
lahf
scas
pop
jne
cmc
sbb
daa
inc
and
dec
sarl
jbe
jmp
or
cld
inc
dec
sub
mov
mov
test
inc
enter
insb
xor
mov
jbe
sbb
sub
mulb
pop
sub
sbb
lds
std
mov
repnz
cs
js
cmpsl
mov
shlb
sbb
mov
mov
aaa
mov
push
and
jo
shrd
inc
mov
xchg
pop
pusha
cmc
or
cwtl
mov
nop
lahf
ficoms
scas
lods
ljmp
sub
push
xchg
pextrw
xchg
jg
mov
inc
dec
ret
cmpl
push
jp
ror
stos
es
icebp
lea
push
ret
test
mov
mov
sbb
stc
loope
dec
shr
push
pop
push
push
lock
mov
push
call
dec
dec
int
jno
test
in
xor
and
negl
cmp
add
jge
dec
lahf
ljmp
mov
push
ja
adc
xchg
jmp
push
xchg
nop
xor
adc
call
sbb
pusha
push
add
hlt
in
fcoms
sbb
rorl
loopne
pop
xchg
and
mov
fidivrs
sub
test
cwtl
or
jnp
fidivrl
xor
pop
out
test
icebp
gs
dec
push
imul
clc
add
inc
loop
push
mov
mov
fmuls
je
dec
push
xchg
xor
push
outsl
xor
lret
pop
pop
popa
cmc
mov
mov
dec
cwtl
mov
mov
and
and
jl
cmc
mov
mov
je
fists
pop
jo
push
scas
sahf
not
mov
inc
das
ret
push
adc
mov
adc
jl
fdivl
mov
rcl
lods
xlat
mov
or
adc
ret
call
aad
cmpsb
fldl
insb
jecxz
jb
xchg
leave
mov
mov
fwait
xor
decb
adc
xchg
mov
imul
xchg
xor
xchg
aad
cmp
das
enter
inc
ficomps
andl
pop
xor
push
shl
xor
mov
repz
stos
dec
mov
mov
inc
outsl
mov
sub
mov
sub
in
mov
jbe
dec
or
adc
enter
push
xchg
sub
xor
enter
inc
scas
pop
cmp
xor
push
xchg
jns
mov
arpl
and
jo
jb
scas
sub
shll
jecxz
std
push
inc
pop
aam
insl
push
addr16
xor
or
clc
jo
in
mov
inc
adc
lea
movsl
inc
adc
push
and
daa
push
pop
popf
repnz
out
xor
push
jg
mov
rorb
rclb
or
mov
cmpb
movsb
and
aam
mov
roll
and
dec
imul
xor
mov
push
xlat
xchg
loop
dec
lods
out
pop
cwtl
cmp
inc
adc
fbld
dec
jp
cmpsb
insl
test
sbb
leave
movsb
mov
sbb
sbb
js
leave
lods
jl
fdivrl
out
dec
cmp
xchg
sub
cmpb
pusha
sbb
fwait
ret
in
in
mov
std
nop
jmp
inc
push
lds
pop
mov
inc
push
mov
and
cmp
pop
mov
mov
mov
addr16
cld
lahf
mov
cmp
mov
andl
jne
pushf
loop
fcomps
imull
movsl
in
sbb
je
imulb
mov
outsl
cld
jne
cwtl
mov
je
mov
lret
fsts
out
daa
sbb
mov
xorl
outsl
lods
jae
jns
movsb
adc
sub
lds
inc
bound
ret
mov
lods
jnp
movsb
add
gs
stos
pop
mov
aaa
mov
enter
enter
mov
notb
add
cld
xor
and
out
sahf
ret
xchg
cltd
xor
mov
es
sub
push
xchg
jb
insl
subl
addb
cmp
xchg
fsubs
fcmovnbe
add
sbb
dec
sti
inc
jp
inc
pop
dec
lods
mov
fsubrs
insl
mov
test
in
dec
ret
lahf
adc
pusha
inc
sbb
push
gs
mov
popf
add
sbb
push
jecxz
mov
cs
lahf
and
pushf
dec
jns
add
mov
into
int3
outsl
adc
aas
sbb
jb
xchg
pop
add
pop
jno
xchg
movq
je
pop
fisttpll
mov
out
nop
mov
roll
int
push
lret
adc
jmp
or
into
sbb
jle
adc
imul
sub
push
dec
aaa
cmp
mov
orb
ret
push
jge
push
sub
pop
sub
mov
ror
jns
xor
repz
push
mov
cmp
insb
adc
test
add
mov
cld
les
mov
sahf
hlt
addr16
loop
decb
or
and
xchg
add
and
inc
mov
dec
cmp
std
call
mov
iret
fisubl
cld
icebp
pop
mov
mov
sbb
or
int
test
mov
cmpsb
mov
es
cmp
pop
adcl
mov
das
out
mov
popa
and
test
mov
mov
icebp
jmp
cs
int3
push
pop
aad
adc
dec
loopne
movsl
push
jg
mov
inc
fbstp
popa
add
push
inc
xor
cmp
mov
aam
jmp
shll
cwtl
cmp
ficoml
sub
test
mov
imul
mov
stos
pop
insb
cmp
xor
or
pop
pop
xchg
or
jbe
push
push
and
cltd
loop
or
ds
and
sbb
fwait
mov
std
lret
cmp
out
loopne
pop
xlat
pop
mov
mov
lahf
ret
xchg
sub
dec
sub
mov
jl
lcall
mov
mov
cmpsl
andl
mov
repz
insl
popa
aad
rcrl
inc
sub
mov
add
aam
xorb
jne
pop
pop
and
xchg
ret
xor
iret
add
sbb
in
pop
lcall
dec
cld
sahf
pop
and
cmp
dec
cmp
mov
add
xor
cwtl
push
pop
sbb
nop
add
cmp
pop
pop
call
sub
lea
jb
and
mov
and
popf
or
or
push
test
movsb
mov
leave
sub
adc
jo
xor
jl
adc
or
mov
mov
jg
lret
xor
cld
mov
xchg
ret
sti
scas
fwait
cld
mov
sub
mov
out
enter
jecxz
js
dec
leave
cmp
bound
faddl
pop
test
ret
cmpsb
mov
mov
sbb
mov
nop
add
xor
jnp
xchg
mov
xchg
mov
pop
test
xor
add
std
cli
fisubs
hlt
and
mov
lods
add
xor
xor
mov
mov
repz
clc
or
ret
inc
mov
hlt
test
daa
ret
mov
mov
rcll
fildll
dec
sbb
fistl
rorb
in
pop
sub
pop
xor
mov
jns
das
mov
fldl
repz
test
es
lock
mov
xchg
testl
sti
shrb
push
mov
push
inc
jne
out
jnp
out
sti
dec
idiv
inc
repz
jbe
mov
mov
movl
or
test
ret
or
push
repz
mov
xor
inc
sub
inc
dec
jno
xchg
imul
stos
sahf
cmp
rol
imul
sub
fidivl
arpl
sti
and
jg
insb
fs
xchg
mov
mov
mov
or
pop
sbb
add
push
xlat
push
xchg
sti
xor
movsb
jne
es
xor
jns
cmpsb
in
dec
mov
mov
push
push
cmp
push
dec
sub
jle
mov
xchg
aas
cmpsl
dec
fidivs
lds
cmp
ja
adc
rorb
adc
lret
fsubl
pop
shl
call
cmpsl
cmp
xor
aas
inc
loopne
push
push
out
sub
nop
lret
aad
neg
mov
sbb
sbbb
lret
and
jnp
ror
push
xor
xchg
test
xlat
mov
push
aam
and
inc
cmp
xchg
cmp
aad
insb
js
sbb
setge
popa
xchg
lods
out
lock
jo
in
jmp
mov
test
or
xchg
xchg
shr
lock
pop
mov
test
jmp
inc
movsb
orl
xchg
roll
add
leave
leave
sbb
mov
pop
pop
fld
rcll
mov
pop
adc
dec
mov
into
adcb
add
xchg
jge
inc
ss
and
pushf
popa
and
lret
mov
rorb
add
or
ja
repz
xchg
push
xchg
mov
xor
negb
ss
mov
fucomip
movsb
lcall
jg
xor
rorb
repz
cmp
mov
sub
popf
pop
pop
scas
and
movsb
pushf
mov
push
leave
ret
movsl
dec
pusha
data16
mov
stos
jecxz
pop
stos
lods
jg
xor
inc
pop
pusha
mov
imul
lock
inc
jge
mov
data16
mov
adc
xchg
sub
and
mov
xchg
stos
dec
leave
movsl
cmp
insb
lcall
push
dec
add
stos
push
pop
mov
push
cmc
aaa
push
xor
aad
mov
out
push
jecxz
sahf
pop
push
xlat
repz
jp
add
mov
rcrl
repnz
dec
fstl
xchg
gs
pop
ror
push
es
xchg
mov
push
in
xorl
mov
xchg
aad
push
cld
xor
lods
das
jnp
sbb
shrl
and
push
cmp
cmp
leave
repz
ss
and
inc
jne
bound
adc
outsb
dec
hlt
je
dec
or
adc
cltd
sbbb
sti
pusha
and
xor
mov
shl
sbb
leave
in
lock
ljmp
cmc
pop
sahf
xor
loope
jnp
sahf
fidivrl
inc
cli
push
jg
or
cmp
sub
popa
shl
test
xchg
mov
enter
jns
vpmacsswd
dec
testb
add
mov
pop
cld
or
ret
decb
jae
cmc
cmc
popf
imul
pop
lahf
insl
loopne
pop
sbb
xor
ja
pop
dec
mov
jle
fnstenv
inc
mov
roll
dec
adc
imul
cmp
lret
mov
sbb
cmp
jne
decb
mov
lods
gs
movsl
out
add
mov
push
dec
xchg
inc
addb
arpl
push
mov
outsl
int3
dec
popf
sub
jmp
mov
test
lahf
push
mov
sub
ja
movsb
push
into
cwtl
out
mov
add
lahf
add
xor
mov
shl
movsb
sbbb
hlt
xchg
pop
add
nop
cmp
loope
adcl
pop
sub
xchg
jl
insb
cmc
inc
fdivl
cli
lea
outsb
mov
and
out
mov
add
lds
lret
addr16
dec
cmpsb
sti
lcall
adc
or
lods
mov
sti
sbb
jnp
out
sbb
loop
fnstenv
mov
scas
mov
xchg
insb
int
pop
mov
fwait
sbb
xor
mov
cmp
movl
loopne
fldenv
adc
mov
cltd
mulb
stc
xor
dec
add
cld
fsubl
push
nop
pop
pop
pop
pop
addb
sbb
cmpsb
setne
sub
sub
sbb
fisubrs
jp
mov
mov
dec
pop
popa
shll
icebp
in
jg
and
inc
push
add
scas
sub
mull
sbbl
movups
fbstp
cmp
popa
cmpsl
addr16
dec
or
or
icebp
popa
jl
sbb
stos
jmp
ficoms
outsl
int
fsubrs
add
lods
cmpl
push
nop
or
es
dec
cmp
frstor
dec
test
lcall
push
movsl
push
mov
pop
icebp
add
xchg
mov
fisubs
and
repz
xchg
dec
push
dec
jno
push
cmp
repnz
outsl
or
pop
clc
ret
in
imul
xchg
sub
or
sbb
xor
sbb
mov
hlt
dec
js
pop
pusha
rcll
popf
in
int3
add
mov
mov
xor
dec
mov
cwtl
jno
and
xor
or
xor
mov
dec
add
out
call
sti
int
mov
add
xchg
add
xor
pop
fnstcw
add
loope
dec
jecxz
popa
mov
xchg
adc
mov
out
inc
xor
xorb
aam
shlb
sbb
das
pop
pop
mov
aaa
inc
lods
es
cmp
fildl
aas
movsl
jecxz
stos
mov
fisubs
popl
ror
mov
sbb
mov
in
pop
push
fnstcw
aas
or
lods
xor
adc
sub
es
inc
cli
push
and
add
dec
cwtl
int
jae
cmp
dec
js
dec
cmpsl
cmp
stos
fcoml
jl
inc
push
lahf
pusha
clc
push
jmp
int
insb
add
mov
fadds
or
lock
xor
cltd
xor
and
jne
xchg
ret
mov
jg
aaa
leave
mov
testl
aaa
es
mov
test
cmp
rclb
cltd
xorl
pop
jge
icebp
test
mov
pop
mov
sbb
mov
add
and
fmul
jle
ret
adc
sub
fmull
pop
sbb
adc
dec
mov
lods
daa
mov
jno
int
adc
push
aad
cmpsl
paddq
rorl
inc
js
sahf
repz
out
inc
sbb
int3
cmp
xchg
fwait
push
push
std
push
jnp
arpl
fucomp
in
inc
paddusw
push
cs
mov
fistpl
mov
scas
insb
mov
ja
mov
ss
fistpll
cmp
jne
mov
xchg
popa
repnz
adc
cld
sub
inc
outsl
ss
jle
pop
xor
das
xchg
mov
lds
sbb
mov
fistpl
outsb
loope
push
xchg
jae
daa
fdivl
or
test
fists
and
ficompl
xor
jmp
fcmove
cmp
imul
mov
jbe
push
pop
cmp
xor
test
test
mov
ja
push
sbb
loop
int
mov
and
inc
pushl
xchg
hlt
int
inc
enter
sti
push
cmpl
rcr
mov
cmp
inc
fwait
add
or
bound
ds
mov
sbb
xchg
jo
fmul
in
ds
or
sbb
mov
scas
test
xchg
mov
in
fcmovu
cmpsl
push
push
sti
ret
mov
das
xor
pushf
in
mov
or
outsb
testl
jne
mov
pushf
scas
xchg
shlb
mov
cmp
xchg
sub
es
or
xchg
push
addr16
mov
jae
and
jne
cmp
mov
xchg
jns
dec
std
insb
mov
shll
sbb
xor
movb
add
sub
xchg
or
jo
pop
cmp
or
mov
sub
out
jp
xchg
cmp
push
add
in
inc
mov
mov
ljmp
lock
cmpsb
cmp
mov
mov
leave
adc
xchg
test
sbb
push
into
outsb
mov
xchg
mov
clc
lea
clc
fcom
mov
pop
push
fsubrl
dec
inc
xchg
pop
dec
sub
gs
mov
into
pop
pcmpgtw
sub
sbb
jne
sub
sbb
mov
sub
gs
clc
cmp
lods
sqrtps
push
cmp
inc
ret
gs
jg
xchg
jnp
mov
jp
lds
cld
mov
outsl
imul
and
aaa
pop
pop
cltd
je
mov
jg
mov
mov
aam
lds
outsb
push
xchg
imul
inc
xchg
pop
dec
in
jmp
ljmp
sub
xchg
scas
ss
test
jae
add
mov
xchg
inc
xlat
ljmp
sub
sub
in
stos
ljmp
jbe
imul
frstor
push
pushf
pop
out
xchg
out
push
rolb
mov
fisubrl
scas
pop
xlat
sarl
xor
push
movsl
inc
sahf
lods
cwtl
ficoms
sbb
sub
sbb
sbb
xchg
popl
inc
add
adc
add
int3
or
inc
leave
cli
test
test
adc
xchg
or
dec
jecxz
dec
dec
daa
xor
push
adc
out
pushf
pop
pop
xchg
add
or
adc
fisttpll
xchg
xchg
loopne
stos
sahf
icebp
and
xchg
adc
mov
pop
lahf
cmp
out
jg
and
xor
pop
push
test
js
out
and
jb
jne
xchg
paddusw
outsb
dec
les
and
sbb
or
xor
test
inc
pop
mov
or
push
push
pop
ficomps
jae
movsb
ja
insb
dec
loopne
scas
notb
adc
adc
daa
test
dec
stos
lods
jae
pop
in
insl
mov
sti
in
mov
or
pop
mov
rcrb
outsl
ljmp
lods
mov
push
je
aam
cltd
jno
addr16
test
sahf
ret
sbb
sub
outsb
movsb
test
outsl
sub
mov
outsl
pop
add
cld
mov
cli
cld
cmc
nop
ret
xor
sbb
lcall
fwait
mov
or
mov
push
stc
test
jns
pop
repnz
retw
sub
int
leave
mov
dec
pop
and
adc
xor
push
push
mov
test
dec
adc
adc
inc
icebp
xor
mov
movsb
sub
stc
test
cmc
mov
bound
lods
mov
and
mov
pop
shll
flds
xchg
adc
adc
cmpsl
adc
pop
pushf
popa
es
push
cmp
adc
js
dec
or
xor
cltd
push
push
enter
sub
adc
pop
mul
inc
and
sub
mov
in
outsl
inc
fstps
fnstsw
dec
lcall
out
mov
jg
les
push
int
xor
movsb
pop
or
jbe
or
in
mov
adc
pop
mov
insb
in
je
mov
insb
and
jno
or
les
dec
jne
in
xlat
sub
mov
jmp
mov
lock
adc
and
cmp
aas
ret
dec
pop
mov
repnz
out
insb
popa
cmp
push
cmp
sbb
push
sbb
adc
mov
rorb
nop
xchg
hlt
pushf
notl
dec
xor
push
out
shrl
mov
imul
rolb
rol
icebp
inc
pop
add
rclb
int
leave
das
lahf
lods
iret
fcmovu
lds
mov
xor
pop
jg
std
rcll
add
je
lret
inc
mov
popf
scas
ret
jg
xchg
je
adc
outsl
xor
fwait
into
mov
add
cltd
loope
mov
fistl
push
iret
xor
adc
inc
scas
stc
mov
test
xor
mov
insb
jmp
adc
mov
insl
push
les
push
in
scas
or
mov
jne
jns
sti
mov
movsb
push
jecxz
ret
mov
fadd
mov
adc
fdivr
pop
imul
fisttps
adc
inc
imul
ss
out
test
lea
xchg
jb
aas
lret
mov
jae
xor
adc
test
and
ljmp
sub
mov
sbb
xchg
mov
add
sarb
repnz
jb
ficoms
push
sahf
in
cmp
cmp
pop
xchg
in
testl
lcall
ret
xor
ss
xor
js
sbb
mov
sti
ret
adc
mov
cmc
add
cmpsb
outsl
aas
jle
jbe
ja
pop
aad
xor
repz
pop
sbb
sbb
lds
mov
xchg
inc
test
fbld
jns
incl
sub
mov
pop
add
mov
outsl
jmp
loopne
jno
xorl
sbb
mov
loopne
jg
adc
adc
nop
or
adc
mov
ds
mov
cmp
add
aam
inc
int3
jmp
ja
cmpsb
push
lcall
pop
add
in
push
shll
cltd
imul
loope
jmp
xor
sbb
ret
icebp
cmpsl
loopne
movsl
cs
iret
fildll
out
jb
jl
inc
inc
fiaddl
mov
inc
jns,pt
je
xchg
es
inc
sbb
xor
xor
cmp
nop
inc
xchg
dec
mov
js
test
sti
loop
ffreep
enter
add
fcompl
mov
dec
jns
aas
xchg
into
push
ja
xor
movsl
and
mov
and
cld
ret
test
scas
lretw
jo
pop
pop
adc
jne
mov
xchg
jnp
sahf
jecxz
rorl
outsl
mov
sub
xor
int3
pop
enter
pop
or
pushf
std
dec
cmpsb
out
jmp
insb
cmp
jge
fpatan
xchg
gs
outsb
int3
mov
and
dec
pop
stos
pop
leave
jnp
clc
and
popf
sub
pop
pop
fxam
imul
bound
imul
or
pop
cld
jne
mov
jmp
std
je
and
jmp
adc
out
adc
xor
icebp
shrb
and
scas
mov
loop
mov
in
xor
int
and
xchg
cmpsb
data16
push
mov
mov
mov
cld
lods
jnp
jge
rcr
popa
cmp
out
mov
pushf
add
dec
xchg
loopne
divb
pop
loop
daa
mov
add
testl
loop
es
arpl
xchg
adc
aaa
sub
data16
adc
loope
adc
sub
sub
or
dec
push
pop
push
mov
xchg
xlat
push
fsubs
mov
dec
sarb
pop
fidivrs
dec
pop
pop
pop
js
lods
or
mov
addl
lods
pop
repz
mov
jae
pop
adc
cmp
outsb
es
pop
add
lods
xor
inc
orl
cmp
in
das
inc
mov
add
insb
cli
imul
or
nop
ret
inc
dec
fnstcw
jns
imul
testl
outsl
icebp
clc
push
ftst
mov
push
test
add
sbb
cld
cmc
in
fisubrl
insl
lret
leave
mov
push
mov
in
ficomps
div
xchg
sub
inc
mov
rorb
sbb
and
imul
lcall
sub
lods
shl
cltd
scas
jmp
lahf
xchg
lods
dec
jns
shrl
or
dec
push
mov
fst
mov
shrb
stc
mov
sti
dec
mov
clc
xor
dec
sub
mov
outsb
inc
cmp
out
icebp
fdivl
add
pop
out
repz
sbb
lock
rcl
into
jle
ljmp
jnp
lods
xchg
insb
data16
jb
faddp
jno
inc
bnd
iret
out
outsl
fstp
push
test
xor
iret
dec
push
cmpsb
mov
test
jb
sub
or
incb
inc
lods
add
imul
aaa
fcom
pop
ror
sahf
mull
test
popa
out
in
fwait
sub
pop
into
jo
push
mov
test
inc
cmp
jnp
xor
inc
pop
sub
arpl
jnp
push
icebp
in
stos
or
jns
cwtl
jno
fwait
xchg
and
mov
shrl
sub
xor
jle
into
or
insb
sar
std
shrl
mov
or
ja
xchg
xor
inc
push
inc
test
mov
pushf
insl
inc
cmp
aad
adc
scas
add
mov
imul
jg
daa
sbb
lock
jg
and
out
aad
inc
leave
pop
subb
push
push
mov
push
shl
lret
insb
sahf
cmp
mov
ja
cltd
jo
sbb
push
jg
sti
jae
sbb
in
adc
ds
dec
sub
je
cs
pop
out
mov
arpl
sti
jle
addr16
addr16
pop
cmc
jle
xlat
clc
arpl
jge
pop
cltd
pop
sbbl
mov
push
mov
repnz
cmp
sub
xorb
sub
cmpl
add
test
or
rcll
xchg
lret
dec
imul
inc
cmp
xor
filds
sub
jp
or
js
bound
dec
call
adc
je
add
adc
out
sub
or
jne
incb
cmp
fildll
jne
inc
dec
cmpsl
inc
mov
jae
jmp
int
fwait
outsb
pop
lahf
rolb
mov
test
dec
rcrl
mov
push
or
jo
push
jns
outsl
pop
scas
add
dec
imul
out
xchg
xchg
sub
pop
pop
aaa
imul
push
xor
dec
push
push
pop
or
in
outsb
mov
inc
mov
pop
inc
push
shlb
icebp
and
add
pop
xchg
in
es
sbb
adc
cwtl
adc
add
cs
mov
sub
incl
cwtl
pop
adc
int
sarb
sahf
cmc
int
insl
in
lahf
push
pop
jnp
test
push
xor
in
fcomi
hlt
scas
fldt
sbb
or
popa
jmp
xchg
or
sbb
lods
xlat
xor
mov
stc
stos
push
sub
mov
notl
jecxz
inc
add
insb
popf
lcall
push
scas
sub
sbb
js
ss
insb
scas
icebp
cmpsb
push
mov
in
or
test
jns
cmp
sub
fistpll
in
adc
aaa
mov
idiv
pop
push
jae
mov
out
jbe
sbb
insb
setbe
jle
xor
movd
test
and
xlat
shr
mov
xchg
fcoml
or
mov
and
xchg
xchg
sbb
dec
scas
fmull
inc
and
imull
dec
scas
adc
add
mov
adc
dec
adc
add
jecxz
repz
adc
cltd
push
and
pop
jae
sbb
lret
pop
aas
rcrb
pop
fimull
pop
sarl
cwtl
orl
cmp
mov
outsb
adc
in
int3
dec
pop
inc
cmpsb
bound
fimull
stc
test
cmp
push
or
cmp
fisubl
pop
sbb
push
or
test
sti
push
fwait
sti
test
sahf
pop
fldl
sub
pop
outsl
adc
stos
ret
hlt
lahf
fisttpl
xor
pop
cmp
pusha
shll
xchg
jle
insb
mov
fucomp
adc
test
sahf
test
mov
xchg
mov
aaa
mov
push
mov
aam
pop
mov
aaa
enter
loopne
mov
inc
mov
out
aas
and
xchg
xlat
jne
adc
sub
loop
stc
popf
imul
and
push
fcmovne
sub
pop
add
lods
test
int3
mul
jg
mov
imul
leave
xchg
jns
je
inc
xchg
movsb
or
insl
and
pop
xchg
insb
and
testl
jg
jl
pop
ds
sbb
sbb
int3
mov
xchg
jne
test
mov
movsl
cld
push
shr
aas
push
or
popf
out
rolb
mov
mov
mov
xchg
xlat
sub
push
les
js
arpl
pop
js
outsl
scas
fcmovb
repnz
mov
inc
mov
data16
sti
pusha
sub
adc
mov
jecxz
push
fidivrs
arpl
xchg
push
lahf
pop
dec
pop
test
shlb
movsb
aad
add
xchg
lods
dec
rol
dec
jne
rorl
rolb
dec
ret
out
dec
fwait
sbb
push
xchg
pop
mov
fs
cmc
fld
mov
pop
or
mov
loopne
outsl
fldl
fsubl
outsb
cmpsb
cli
insl
jnp
jo
pop
loop
xor
cmp
imul
mov
sub
ljmp
icebp
mov
xchg
push
negb
js
inc
fdivrl
xor
outsb
jns
dec
and
inc
cmp
shr
inc
test
inc
push
xchg
test
notl
adc
pop
and
push
adc
repz
rorl
pushf
ror
or
and
adc
das
mov
and
inc
add
xchg
repnz
arpl
mov
lret
mov
mov
jg
jle
sub
out
shr
icebp
jns
shr
cmpsb
inc
xchg
cld
push
outsl
popf
cmpsb
or
aas
aas
jne
and
or
add
lret
cmc
push
cmpsl
movsb
and
popl
jns
push
adc
rclb
popf
inc
inc
xor
popf
push
mov
sub
ror
outsl
or
jge
mov
pusha
ja
mov
test
mov
mov
lahf
call
or
push
mov
or
mov
xchg
mov
lret
or
sahf
mov
lahf
addr16
outsb
inc
push
ret
ret
out
xchg
pop
pop
cwtl
rol
jb
outsl
aaa
das
and
in
js
pop
fs
out
push
pop
arpl
dec
aad
inc
mov
sub
mov
sbb
scas
mov
xor
clc
adc
clc
mov
xchg
stos
jmp
iret
cmpsl
out
adc
xchg
pop
je
pop
orl
repz
mov
jnp
sbb
push
cmp
push
pop
mov
pop
fisubrl
rcll
fadds
xorl
repnz
dec
pop
xchg
adc
mov
mov
pop
cmp
cmp
mulb
jl
outsl
das
inc
sbb
cmp
cmp
jl
jle
sbb
xor
mov
jae
addr16
lcall
rcll
pop
lds
mov
push
lretw
in
dec
pop
dec
dec
and
push
dec
pop
xchg
push
xor
jb
roll
imul
iret
test
pusha
adc
xor
mov
std
std
insl
movsb
pop
adc
pop
leave
sub
jo
add
push
xor
stos
scas
subb
aas
cld
and
nop
les
or
mov
xchg
jmp
mulb
adc
mov
leave
rorl
out
js
das
sti
mov
pop
mov
repnz
adc
addr16
aad
sub
das
mov
mov
out
negl
jno
dec
sbb
add
mov
jno
cmc
loop
ja
mov
pusha
mov
in
out
xchg
lods
jge
inc
mov
mov
push
in
cmpsb
sub
sti
stos
outsb
sub
mov
aad
mov
lcall
dec
pop
inc
mov
jmp
and
adc
jbe
mov
jg
rcrl
add
xor
movsb
stos
lcall
lret
xor
sahf
insb
pop
cmp
insb
pop
scas
stc
push
pop
xor
add
cmpsl
mov
fwait
xchg
and
bound
enter
ja
jae
aam
movl
loopne
adc
cmp
xchg
movsb
inc
call
push
dec
xchg
cmpb
jne
pushf
jecxz
mov
pop
push
adc
dec
sub
dec
sar
sarl
pop
shlb
add
mov
andl
add
add
pop
in
xlat
push
and
icebp
inc
mov
cltd
sbb
fwait
push
paddw
pop
cmp
lcall
sbb
push
inc
inc
std
mov
out
mov
sbb
mov
aam
pop
aas
pop
repz
outsb
sbb
adc
pop
inc
xor
enter
pop
mov
daa
sbb
or
lock
movsb
dec
mov
adc
daa
js
push
dec
es
and
fisubrl
jle
jle
inc
cld
xchg
andb
inc
mov
sbb
test
sub
and
xlat
add
in
inc
adc
aad
mov
xchg
rol
out
or
ret
add
sub
push
or
adc
enter
dec
dec
dec
fdiv
mov
filds
jne
jle
lahf
sarb
outsl
cli
cmp
cmpl
insb
outsl
pop
xchg
xor
mov
and
mov
xchg
jb
addr16
lret
loopne
pop
add
inc
mov
lcall
aas
loope
sbb
xchg
jnp
push
rclb
sub
fmuls
adc
jecxz
pop
xor
cli
mov
test
mov
dec
popf
jb
mov
mov
mov
xchg
mov
int3
in
mov
orb
inc
xchg
aas
or
mov
mov
or
stos
mov
loope
leave
pusha
lahf
in
pusha
cmpsl
fistpl
cmc
sbb
cmpsl
sahf
ljmp
shlb
add
inc
push
mov
ss
sub
out
ror
jae
and
shrb
and
sti
fistl
inc
call
sub
push
loope
adc
jp
nop
ja
hlt
stos
in
popf
and
imul
or
stos
fwait
push
mov
int
aas
movsb
mov
pop
fdivrl
cwtl
push
or
or
daa
pop
mov
fadds
push
das
push
addb
cmc
fldl
mov
sbb
cltd
sahf
sub
cmp
shrl
ficoms
add
lahf
aas
sub
loope
int3
stos
rorl
lahf
ret
in
std
in
add
push
xor
les
or
adc
mov
cs
mov
or
mov
xchg
ret
mov
or
es
pop
sbbb
rcl
push
jge
cltd
popa
push
orb
cmpsb
movsb
xchg
fs
lods
cmc
in
ret
sbbb
call
call
jle
lods
cmpsb
xlat
hlt
sbb
cld
push
mov
movsl
das
mov
loope
std
push
mov
or
fidivs
xlat
sahf
ss
in
pop
mov
in
and
mov
pushf
adc
push
test
movsb
add
push
jne
bound
imul
mov
and
xorb
fsubrs
lods
ja
fadd
shll
inc
add
push
push
mov
outsb
mov
testl
rolb
inc
jmp
jge
and
cmp
add
mov
in
rcll
icebp
sbb
cmpsl
inc
imul
insb
clc
arpl
adc
adc
sbb
mov
fndisi(8087
push
jno
cltd
or
int
inc
and
add
mov
daa
cs
xor
lret
pushf
inc
movsl
jmp
push
das
iret
call
mov
sbb
dec
lock
pop
clc
xchg
out
cmp
movsl
jle
lds
sbb
push
pop
mov
push
inc
jne
push
sahf
cs
mov
jmp
iret
add
pop
jmp
mov
test
push
ret
pop
mov
movsb
lds
ret
add
dec
xor
pop
mov
repnz
shll
inc
add
insl
xlat
aaa
cmp
xchg
add
sub
xlat
js
gs
bound
call
outsl
out
and
enter
in
dec
test
icebp
out
mov
pusha
cmpsb
repnz
xlat
in
sbb
outsl
les
loop
nop
outsl
xchg
stos
xchg
popa
in
xchg
mov
outsl
jo
cmc
inc
dec
sbb
jmp
xor
arpl
movsb
pusha
pop
das
int
ss
clc
bound
push
outsb
inc
mull
push
push
iret
xlat
push
pop
cmp
jne
cli
pop
repnz
jecxz
xlat
xchg
ret
mov
shrb
lock
inc
pop
cmp
popa
lds
dec
es
jecxz
push
sbb
les
and
into
out
stc
cmp
cltd
ds
jae
or
bound
inc
pop
sub
or
xchg
cltd
mov
xor
into
push
mov
repz
xchg
dec
mov
outsl
and
icebp
shlb
insb
cmp
jns
mov
jmp
mov
lret
mov
lahf
xor
xchg
into
cli
cmp
sbb
lret
add
xchg
movsl
pop
repz
test
cmpl
mov
and
sbb
inc
adcl
xor
adc
fidivrl
les
sbb
fcoms
jg
shll
lea
ss
test
dec
out
lcall
in
loopne
jbe
lods
sbb
push
and
mov
aam
pop
out
adc
xchg
or
inc
mov
clc
jbe
inc
fadds
sub
bound
jmp
jg
sarl
js
xlat
pop
xchg
and
gs
mov
sahf
scas
leave
sarb
int3
shrl
scas
pop
jg
scas
mov
incl
jle
out
bswap
mov
sahf
mov
mov
fisubrs
pop
aaa
lahf
lea
jmp
fcmove
pop
lods
cltd
or
push
pop
movsb
mov
les
xchg
orl
sbb
and
arpl
inc
mov
push
lea
rol
inc
in
testb
add
jno
add
cmp
inc
inc
mov
xchg
in
pop
sub
jg
adc
and
aad
cmp
mov
out
jmp
sub
inc
insb
outsl
mov
mov
lds
sbb
call
call
mov
aas
sub
or
out
ja
ss
mov
xchg
fsubs
and
stc
scas
push
inc
sarl
or
sbb
xor
pop
nop
imul
and
loop
aam
inc
sub
test
push
gs
imul
fdivrl
scas
push
cs
nop
and
jo
jmp
push
shlb
mov
sbbl
das
pop
and
sahf
add
cmp
xor
fdivr
inc
je
xchg
cli
xchg
sbbb
int
and
scas
jg
in
mov
aas
jae
adc
lret
mov
xchg
repz
movsl
mov
and
cld
inc
jne
test
xor
inc
je
jae
push
js
pop
xchg
or
jp
jbe
xor
cwtl
fistps
add
lret
mov
mov
xchg
es
pusha
stc
or
xchg
jge
jg
mov
ljmp
inc
push
jle
stc
or
xor
or
stos
addr16
push
lahf
enter
cs
movsl
lds
sbb
test
mov
xlat
daa
rolb
rolb
add
scas
cmovp
push
push
test
inc
inc
mov
or
mov
negb
dec
jnp,pn
pop
mov
xchg
rcrl
cmp
xchg
pushl
repz
pop
mov
xlat
out
sbb
add
sub
pop
sub
test
and
fiaddl
sbb
mov
fidivrs
aad
xchg
orl
push
test
inc
adc
loop
or
cmp
mov
pop
jne
inc
sti
mov
nop
into
mov
and
lods
jne
inc
outsb
jo
ret
cmp
push
ljmp
clc
aaa
push
popf
test
xorb
add
sbb
mov
or
ds
push
scas
or
add
in
jbe
out
xor
sub
movsl
gs
cmp
std
hlt
ds
adc
imul
sbb
xor
fucom
cmp
sub
mov
mov
gs
mulb
in
and
fisubrl
and
mov
popf
xchg
pop
mov
into
subb
sub
rep
idivb
push
sbb
sti
inc
std
lock
aam
out
and
int
shlb
orb
dec
dec
or
lock
inc
cmp
pop
lret
cmp
pop
outsb
pop
dec
movsl
ds
mov
xchg
cmp
je
jge,pt
jmp
sub
lret
popa
in
sub
gs
push
mov
fwait
cltd
mov
cmpl
enter
cmp
or
push
jnp
stc
fdiv
ss
outsl
stc
xchg
imul
jle
dec
xor
out
cmp
mov
lds
cmpsl
mov
js,pn
shl
ret
push
xor
xchg
xor
sbb
fists
in
call
mov
cli
inc
pop
fisubrl
scas
call
in
jle
mov
xor
jae
add
inc
xchg
push
mov
or
int
push
sub
pop
cmp
mov
fisttpll
mov
mov
lret
ja
or
leave
jle
and
bound
lret
adc
imul
daa
dec
pop
xorb
push
mov
stos
inc
inc
xchg
sbb
mov
orl
aaa
das
inc
mov
mov
cs
or
stos
mov
icebp
add
je
cmc
aaa
cmpsb
rolb
cmpsb
imul
aad
push
mov
xor
fmul
ljmp
cli
in
hlt
push
orb
sub
sub
cmp
or
xchg
cmp
jnp
insl
jne
adc
push
bound
xchg
outsb
mov
mov
jb
fsts
or
mov
mov
mov
inc
push
sub
cld
sbb
fsubrs
fs
pop
sbb
xchg
stos
adc
lods
push
xchg
out
xlat
xor
adc
cmpsl
lds
lret
fmull
add
inc
sahf
outsl
xchg
xchg
jmp
push
mov
stos
inc
jmp
sub
push
inc
push
pop
xchg
popa
xor
inc
inc
lahf
js
mov
push
cld
sbb
cld
and
inc
fwait
mov
mov
sbb
cmpsb
std
inc
jo
add
cmc
decb
es
subb
cmp
call
mov
ljmp
outsb
shlb
test
adc
popa
jne
jge
nop
icebp
stos
fyl2x
icebp
cli
in
ret
popf
rorl
lea
pop
arpl
jb
outsb
lds
cld
fmuls
sbb
jle
scas
data16
jmp
rcl
loop
loopne
jle
std
xlat
ss
add
jne
inc
pop
arpl
mov
mov
add
sub
push
daa
jg
test
fsub
ljmp
daa
in
sub
cmp
loopne
sti
fildll
iret
movsb
je
add
add
mov
pusha
pop
imul
add
pusha
incl
lds
outsb
sub
mov
inc
cmp
xchg
dec
jno
mov
iret
push
pop
adc
pushf
mov
pop
add
mov
divl
lret
popa
data16
mov
jp
push
or
dec
dec
int
sub
jnp
jbe
mov
xchg
dec
lods
repz
add
xchg
or
cmp
iret
out
aas
inc
mov
fs
or
fucomp
rcrb
inc
mov
shr
adc
sarl
cli
add
and
test
pop
mov
dec
out
aas
sub
mov
and
inc
jno
into
loope
xchg
xchg
pop
adc
add
sub
cmc
pop
cmp
lahf
cmpsl
dec
dec
dec
imul
jae
out
addr16
and
jb
sbb
loopne
pop
pop
jae
insl
sarl
push
and
cltd
roll
dec
mov
or
cmc
pop
jg
mov
pushf
ljmp
push
push
insb
jecxz
mov
test
aaa
int
rclb
aad
call
xchg
adc
inc
add
jae
out
sbb
xor
push
xchg
pop
push
jae
popa
les
sbb
jnp
mov
jge
mov
test
cmp
jb
cmp
std
inc
add
xchg
in
adc
pop
addr16
int
dec
ljmp
lds
push
sti
outsb
jp
pop
movaps
es
movsl
xor
aas
stos
sar
push
mov
cmp
push
repnz
push
fdivl
pushf
addr16
or
iret
test
cs
jae
scas
push
pop
mov
mov
push
je
jge
nop
jo
jmp
and
xchg
fwait
jbe
inc
adc
shlb
clc
lret
out
cwtl
inc
pop
cmp
jge
xchg
movsb
test
mov
xor
into
lods
cmc
js
les
es
push
es
mov
xchg
lahf
in
je
shll
push
jbe
inc
push
or
ret
cli
int3
iret
jo
xchg
xchg
pop
dec
fwait
outsb
fsubp
mov
pop
mov
cwtl
cmp
jmp
aas
mov
xchg
sub
xor
sti
lahf
and
aam
and
lods
xor
sub
dec
pop
mov
sbb
sbb
fidivrs
mov
inc
int3
inc
cmp
push
cs
lds
dec
hlt
dec
testl
xchg
push
xchg
xchg
jl
xlat
push
mov
out
push
into
jb
rol
mov
sahf
imull
sbb
push
inc
pop
adc
cmpsb
and
ljmp
in
xchg
rcrl
xor
cli
push
out
loopne
out
loop
int3
xchg
icebp
pop
rcrb
jg
mov
outsb
jl
aam
imul
sti
or
stos
in
mov
loopne
pop
dec
pop
mov
mov
in
cmp
inc
rorb
mov
push
ret
xor
sahf
inc
ficomps
xlat
pop
push
and
dec
jle
clc
aam
push
or
or
roll
ja
stc
enter
repz
adc
add
push
arpl
xlat
ja
mov
in
dec
and
cmp
inc
ljmp
ret
inc
dec
mov
in
and
movsl
jle
sahf
sbb
aam
adc
and
sub
test
pop
ljmp
xchg
cmp
pushf
cmpsb
divb
sub
lret
faddp
mov
cmc
and
insl
xchg
cmp
ret
xchg
cmp
shrl
push
out
pop
test
dec
out
arpl
mov
cld
out
dec
adc
xchg
mov
inc
into
xchg
orl
mov
push
repz
push
nop
scas
sbb
inc
cmp
cmpsb
add
jmp
js
xor
out
mov
push
inc
data16
fisttps
aas
or
lock
sbb
push
pushl
and
add
hlt
les
or
mov
pop
mov
sbb
stc
inc
hlt
lret
mov
xlat
ret
jb
mov
xchg
lcall
add
xchg
mov
and
repnz
test
mov
xchg
mov
divl
stc
shrb
dec
push
loop
mov
mov
ret
bound
js
sub
jbe
mov
insb
or
fidivs
mov
outsl
sahf
test
add
sub
sub
inc
stc
jmp
cmpsl
outsl
xchg
mov
sub
inc
movsb
gs
sbb
sub
mov
xchg
movsl
mov
arpl
ds
stc
aam
js
movsb
xor
cmp
outsb
pop
push
push
icebp
push
lods
fldl
cmp
xchg
adcl
sbb
out
fs
push
sub
addr16
fstps
iret
scas
mov
daa
ret
pop
xchg
cmp
or
outsl
outsb
jp
pushf
sub
mov
test
jno
gs
sub
pop
adc
gs
scas
mov
lcall
xchg
cwtl
xchg
jg
pop
mov
and
jne
sbb
adc
lea
sbb
adc
inc
mov
mov
jno
jae
sbb
notl
or
mov
fld
movsb
cld
bound
jg
cltd
stos
inc
xor
loop
adc
pop
dec
movsl
inc
pop
into
sbb
das
mov
mov
and
inc
lds
sbb
dec
movsb
add
pop
scas
mov
outsl
and
shrb
out
add
adc
icebp
mov
out
ds
mov
mov
mov
lret
bound
pop
and
xchg
jae
inc
pop
mov
mov
bound
iret
pop
mov
inc
lret
imul
ljmp
cltd
mov
mov
mov
lea
popf
iret
inc
mov
cmp
mov
repnz
push
mov
fisttpl
add
jns
add
jnp
lret
loopne
imul
scas
push
addr16
or
push
mov
fstl
out
add
addb
mov
jmp
pop
inc
int3
lods
pop
into
stos
dec
andb
aad
xchg
cmp
and
ja
adc
pop
cmp
stc
mov
xchg
fbld
ds
or
mov
addr16
xor
lock
add
rorl
pop
jns
je
cltd
or
sti
call
int
in
xchg
cli
loop
mov
xor
mov
enter
dec
xchg
mov
push
cld
aaa
cmc
notl
add
sbb
mov
adcb
and
inc
jp,pn
outsl
addl
xor
add
outsb
push
dec
push
sbb
xchg
lret
mov
cmp
mov
xchg
enter
in
call
das
xchg
xor
sbb
js
xchg
lret
adc
jno
sbb
or
mov
testl
and
dec
sub
sbb
cmp
stc
jbe
xchg
mov
fmuls
sti
shlb
sub
ss
cmp
aam
mov
mov
pop
cmpb
cwtl
or
dec
nop
jmp
pop
and
repz
dec
dec
dec
jns
xchg
shrl
cli
rcrb
leave
addr16
lcall
adc
mov
movsb
outsb
mov
in
and
pop
and
sub
shrb
jnp
inc
mov
out
stc
mov
mov
mov
sbb
cmp
add
cmp
and
mov
adc
movsb
inc
imulb
je
sbb
shlb
cmpsb
es
nop
mov
outsl
adc
add
repnz
sub
fs
inc
push
js
lcall
mov
cmp
sub
add
dec
pop
push
gs
sahf
shlb
hlt
jo
int
shr
repnz
pushf
or
sbb
push
sahf
leave
fwait
mov
cmp
jno
lock
addb
lea
pop
pop
cwtl
xchg
push
add
daa
pop
aam
sbb
push
add
add
ljmp
cli
enter
arpl
repnz
xor
adc
data16
pop
add
fildl
add
repnz
int3
pop
mov
aad
xlat
cld
dec
dec
add
enter
cmpsb
xor
test
xchg
dec
stos
int3
xor
icebp
icebp
shll
ds
mov
fs
ljmp
jns
lahf
in
inc
mov
dec
add
mov
dec
mov
dec
shr
and
rcr
mov
xlat
les
movsl
jmp
mov
rcll
mov
repz
cmp
inc
fcompl
sbb
sub
mov
pop
cltd
adc
jne,pn
fxch
add
enter
mov
bound
fldenv
fucompp
xlat
cwtl
xor
add
cmpsb
adc
stos
xlat
movb
mov
xorb
push
addr16
ja
mov
subl
pop
nop
pop
fsubl
loop
notb
fcoms
sub
jo
xor
dec
out
test
inc
daa
or
in
adc
and
hlt
sbb
pusha
daa
push
icebp
mov
call
jbe
cmpb
xchg
das
pushf
push
jle
mov
aad
test
jmp
mov
jno
out
rcrb
stc
mov
outsb
push
nop
dec
adc
pop
mov
leave
cs
mov
inc
mov
dec
cwtl
or
outsl
sbb
and
outsb
mov
xchg
stc
cmp
dec
push
stos
adc
xor
cmpsl
cmp
test
push
or
call
test
inc
and
mov
pop
es
and
mov
xor
mov
dec
xchg
push
mov
or
xor
fstpt
mov
rclb
loopne
icebp
fdivs
and
imul
mov
or
cmp
dec
dec
jb
pusha
scas
clc
inc
lar
inc
out
aas
mov
icebp
jle
rclb
push
mov
push
fs
lea
inc
mov
sub
das
and
jns
mov
test
xor
adc
addr16
testl
sub
jg
mov
and
das
bndstx
sub
ror
push
leave
cmp
in
add
cltd
jecxz
pop
mov
in
pop
adc
jae
jecxz
xorb
cmpsl
dec
lret
mov
imul
out
jns
adc
add
out
adc
mov
iret
shll
push
movsb
sbb
dec
sub
push
ljmp
loope
movsb
or
stc
gs
fmull
mov
dec
adc
xchg
loopne
in
push
mov
sub
outsb
nop
lods
fs
nop
adc
pop
and
rcl
mov
nop
pop
aaa
mov
push
inc
push
rcrb
mov
iret
sub
cld
lods
xchg
or
inc
andb
push
filds
pop
xchg
xchg
sbb
xchg
xorb
and
lahf
pop
lea
xor
test
movsb
sahf
pop
jb
sub
jae
arpl
adc
ss
inc
daa
sti
aad
dec
pushf
adc
fimull
cmc
std
add
mov
and
int
dec
jle
scas
fiaddl
mov
out
pusha
ljmp
mov
stos
loopne
add
paddd
pop
or
pop
cmp
aaa
dec
scas
into
mov
aaa
mov
out
ror
nop
inc
xrelease
push
xchg
in
mov
push
xchg
in
jb
or
dec
mov
pop
cmp
shrb
dec
inc
mov
pop
inc
cwtl
cmpsl
add
cmp
add
sbb
sub
stos
imul
mov
push
jmp
leave
xor
fdivrs
and
mov
movsl
into
fdivs
xlat
lock
in
lock
daa
xchg
xchg
and
je
jb
stos
cmp
in
test
cmpsb
imul
repz
shrl
scas
xchg
dec
adc
out
push
push
mov
loop
add
mov
into
test
mov
stos
je
js
push
push
jo
out
in
push
aas
mov
pop
mov
imul
test
mov
mov
dec
fldt
sbb
movb
stos
sub
lret
cmp
cltd
fucomi
or
jmp
in
xorl
adc
adc
out
call
mov
test
pop
pop
xor
cmp
pop
fldcw
dec
adc
xor
fmuls
mov
out
test
out
inc
mov
dec
aam
in
std
nop
inc
mov
dec
aad
cmpsl
out
pop
or
addb
pop
and
cltd
inc
push
in
and
dec
jae
sub
add
pop
fwait
mov
jae
and
push
or
sbb
jb
addr16
mov
out
push
cmp
xor
push
jno
dec
inc
mov
fnstsw
xor
jo
sbb
nop
cltd
arpl
dec
pop
hlt
mov
mov
mov
adc
shlb
inc
pop
or
stos
jnp
rcrb
mov
movsb
out
ss
fwait
popf
mov
idivl
popa
pop
inc
call
sbb
pop
xor
sbb
repnz
stos
push
mov
popf
push
inc
in
lea
xor
and
cmp
aaa
inc
lcall
sahf
mov
jb,pt
xor
cs
jle
jmp
add
loope
ss
and
sahf
shrb
out
and
mov
out
jnp
jne
lahf
enter
adc
or
das
jp
pop
xchg
pop
sti
and
mov
sub
lods
daa
xchg
pop
push
in
fcoml
dec
clc
jp
xor
and
leave
add
or
inc
or
lods
sub
pushw
fistpl
out
mov
xor
pop
mov
mov
xchg
push
push
icebp
idivl
dec
lret
push
jae
jg
lods
mov
out
jns
repnz
ret
ret
out
daa
imul
adc
and
mov
jg
mov
mov
pop
imul
adc
lock
adc
mul
stc
out
push
cmpsb
popf
ss
xor
repnz
daa
ljmp
cmc
xchg
insl
das
mov
fldenv
push
ret
xchg
push
inc
lcall
pop
push
inc
call
xlat
out
add
ljmp
jp
mov
xchg
jmp
xchg
add
outsb
shlb
sbbl
insl
push
jnp
and
in
andb
imul
xchg
pop
and
jo
int
insb
adc
imul
call
repnz
xchg
xlat
sbb
push
push
xor
out
inc
dec
sarl
out
popf
ds
pop
test
and
adc
add
and
mov
mov
test
loope
or
push
in
mov
cwtl
popa
xchg
dec
push
cld
in
and
adc
mov
cmp
pop
mov
repz
cmp
mov
fcomps
pop
nop
inc
cld
mov
inc
nop
sbb
or
inc
mov
cmp
mov
in
test
lods
lods
in
mov
cmpsb
ljmp
jmp
aam
scas
add
xor
inc
out
mov
loop
mov
xor
call
lahf
repz
es
outsl
push
cmp
inc
fidivrs
pop
jge
movsb
pop
pop
xchg
cwtl
xchg
adc
sti
inc
dec
sub
xchg
mov
push
cmc
push
xor
adc
prefetch
mov
test
fstps
pop
mov
inc
add
je
fadd
cld
or
push
jno
sbb
sbb
cmp
popa
cli
sbb
stc
jecxz
mov
xor
call
jge
add
ja
mov
xchg
outsl
push
loopne
jle
lods
pop
jae
cmc
insb
insb
or
lds
cmpsl
stc
cmp
int3
cwtl
shll
shll
jnp
xchg
or
and
std
in
js
cltd
dec
shrl
xor
test
sub
fs
inc
and
aaa
shlb
cwtl
xor
mov
inc
pop
adc
lods
sbb
aaa
scas
mov
aaa
icebp
adc
es
imul
ja
lods
fsubl
dec
pop
and
or
sarl
cwtl
xchg
dec
int3
lahf
rcrb
outsl
cwtl
inc
pop
mov
sbb
mov
jmp
repnz
xor
pop
pop
mov
sbb
lods
add
sbb
stos
push
and
leave
in
cmp
les
add
nop
sub
or
std
dec
push
pop
mov
js
pop
xchg
out
inc
xchg
ror
fisttpl
cmpsb
stos
inc
stc
mov
test
jnp
sub
jbe
jmp
addl
xchg
jnp
dec
jno
frstpm(287
aad
dec
or
je
and
dec
int3
lock
int3
sub
dec
jl
syscall
xor
in
outsb
stos
push
and
jns
orl
and
inc
stos
mov
mov
lds
cmp
xor
lret
stos
lock
movsb
nop
jecxz
fidivs
jl
mov
pop
ljmp
les
rcrb
mov
outsb
push
mov
sti
and
adc
jae
mov
push
pop
inc
pop
icebp
push
mov
in
add
sbb
pop
or
mov
sub
mov
jp
cltd
mov
cli
repnz
add
dec
add
jge
hlt
pusha
movsl
push
inc
inc
xor
inc
pushf
push
push
cs
inc
mov
shlb
dec
or
and
imul
imul
fsubrp
mov
out
flds
lcall
fdecstp
fsubs
inc
push
dec
cmpsl
clc
and
push
popf
mov
jl
loop,pt
dec
push
push
jp
xchg
sub
ds
into
mov
add
fs
dec
insl
xor
mov
std
add
ss
cmp
lcall
out
sbb
sbb
mov
and
into
or
in
inc
mov
icebp
jp
ljmp
xor
xor
mov
dec
cltd
mov
xor
mov
out
sbb
mov
cmp
sub
loope
test
fyl2x
inc
mov
pop
sbb
xor
imul
iret
sub
dec
cmp
fstp
js
add
inc
add
push
ds
cmp
repnz
hlt
out
insl
mov
in
leave
xchg
or
rcr
jg
test
inc
adc
movsb
pop
lods
into
and
lahf
mov
or
mov
outsb
lds
sbb
fdivl
add
cmp
int3
or
gs
ja
mov
adc
cli
sub
in
lahf
lock
loop
xchg
fsubs
mov
push
outsb
call
or
daa
mov
mov
xchg
test
cmpsl
daa
dec
and
xor
cmpsb
mov
or
test
push
xchg
xchg
adc
jnp
jmp
inc
outsl
jmp
fdivp
rcr
arpl
jle
inc
popf
in
outsb
pop
or
test
fwait
sbb
mov
mov
movsl
pushf
add
fcmovb
jae
jnp
leave
pusha
cltd
xlat
ret
fimull
or
mov
mov
mov
roll
pop
pop
mov
mov
push
and
in
xorb
pop
cmc
lret
int
insb
jbe
xor
inc
outsl
sbb
das
scas
cmp
lock
into
push
mulb
inc
sub
xlat
inc
add
or
mov
mov
adc
push
mov
cld
dec
sub
movsb
mov
out
pushf
pop
inc
adc
into
xor
cmpsl
push
out
push
inc
mov
mov
xlat
les
rcl
add
adc
mov
mov
mov
cmp
unpcklps
cmpsb
mov
mov
loope
lret
mov
push
or
push
mov
insl
popa
mov
fiadds
int
stos
aam
cmc
jmp
bound
fwait
les
xchg
imul
stos
insl
fmuls
inc
lea
std
push
sub
shlb
scas
mov
xchg
lret
inc
stc
xchg
push
sahf
jbe
nop
leave
sbb
mov
testl
ftst
scas
jns
and
or
lds
out
add
cmp
sbb
jle
sub
and
out
in
dec
rcll
add
popa
mov
sbb
dec
sbb
inc
data16
mov
shl
fwait
pop
add
xor
jns
lret
ss
jne
xlat
mov
fs
cltd
ds
test
and
fdivs
xor
js,pn
push
daa
adc
xchg
and
mov
imul
js
lock
pop
dec
add
rorb
ret
lret
mov
push
addr16
out
stos
mov
loope
leave
lds
pop
xchg
dec
mov
jbe
add
push
adc
filds
hlt
in
pushf
dec
add
call
mov
dec
cmp
add
cmp
inc
aaa
lea
xlat
ss
mov
jg
lahf
sahf
push
ret
stos
inc
popa
scas
gs
xchg
mov
push
jae
mov
or
mov
pop
shlb
outsb
jo
pop
and
xor
pop
lfs
loop
dec
cld
inc
cmp
rclb
cmp
stc
xchg
pusha
test
mov
xor
les
mov
inc
cmp
push
adc
cmp
pop
mov
mov
mov
loope
push
push
inc
les
rcrb
aam
shll
arpl
or
xor
std
fdivrp
cld
xor
mov
bound
push
clc
and
push
add
fisttpll
clc
repnz
sub
or
mov
out
loop
mov
mov
or
fcoml
xchg
cmc
xlat
sub
xor
jo
fiaddl
sub
pop
xchg
leave
inc
mov
inc
pop
adc
adc
mov
push
into
dec
or
or
jg
ret
sub
jp
xlat
pusha
mov
xor
sub
dec
push
cmp
mov
je
xchg
adc
add
push
xchg
or
jns
rorl
aas
sbb
aad
and
repnz
jae
and
div
push
out
js
insb
neg
fldt
cmp
cltd
xchg
xchg
test
loop
dec
adc
cmp
call
push
inc
or
movsb
mov
jp
cltd
test
push
and
xchg
sub
jg
xchg
int3
icebp
inc
rcrb
adc
int
rcll
loope,pt
cld
sub
pusha
xor
dec
sbb
out
adc
sbb
inc
je
aaa
je
int3
push
jmp
sub
mov
cmp
cmp
pop
adc
inc
lods
and
in
sarl
leave
inc
or
sub
insl
ds
mov
mov
ret
fists
aaa
and
repz
pop
pop
dec
incb
arpl
scas
insb
idivl
in
lcall
outsl
xchg
sbb
xor
fs
arpl
cmp
fwait
cmp
inc
ret
xchg
inc
inc
xchg
das
jb
and
fs
xchg
test
xor
stc
xlat
push
daa
dec
out
stos
mov
mov
jno
push
and
fdivs
push
rcrb
and
iret
out
dec
jb
fistpl
movl
dec
pusha
and
sbb
push
ret
js
dec
xchg
adc
scas
or
addr16
xchg
dec
dec
pop
cltd
xchg
mov
add
faddp
out
mov
stos
push
jle
fstpl
int3
add
mov
into
lret
setge
loopne
mov
mov
jmp
or
movsb
addb
dec
sbb
lret
mov
cltd
xor
shrb
dec
mov
mov
mov
lret
push
cmp
test
jl
cmpsb
mov
stos
and
mulb
adc
cmp
push
rolb
xor
jo
outsl
jnp
cwtl
sbb
sub
mov
fistl
insb
cmp
and
stc
mov
stos
maskmovq
idivl
mov
pushf
adc
cld
or
jno
mov
xchg
and
ror
call
or
or
arpl
inc
pushf
mov
or
cmpsl
sbb
inc
shlb
push
lock
xchg
pop
aaa
aas
ja
scas
sbb
dec
add
pop
mov
and
inc
rcl
jecxz
jge
xchg
xor
nop
stc
nop
xadd
cli
mov
mov
cmp
insl
xor
mov
das
dec
ja
fadds
xchg
push
test
mov
inc
jle
icebp
or
jae
loope
sub
xor
sahf
movsl
inc
jo
stc
pop
or
fldl
xchg
xorb
cmp
bound
push
mov
repnz
int3
xchg
or
xor
in
adc
cwtl
ja
in
test
push
ja
das
cmp
out
jmp
frndint
xor
ljmp
inc
sti
jg
icebp
sarl
push
mov
loopne
add
xlat
xchg
je
cmp
push
pop
push
enter
stc
push
inc
cmp
repz
ja
and
add
pop
mov
xchg
mov
fnstsw
imul
loop
pop
inc
cmpsb
dec
push
movsl
xchg
pop
xor
inc
pop
in
popa
push
add
loop
xor
cmp
push
popf
inc
jge
out
dec
xor
fwait
mov
pusha
mov
pop
add
inc
shrl
inc
xor
xchg
adc
mov
cmpsl
add
mov
adc
inc
fidivs
insb
imull
lret
push
push
shlb
mov
inc
cli
cmp
sarb
bound
adc
aam
jns
out
repz
mov
or
fstps
cs
jmp
les
xor
sbb
sub
cmpsb
cli
hlt
xor
jne
addl
cwtl
pusha
ja
xchg
mov
int3
inc
stos
jmp
adc
fcom
adc
inc
dec
jb
shll
pushf
std
outsl
mov
bound
mov
popa
xchg
mov
fdivs
js
push
loopne
add
jp
movsb
aaa
test
xchg
nop
cmp
notl
sub
sbb
ja
mov
push
cmpsb
pushf
xchg
sbb
movsl
or
movsl
pop
dec
hlt
sbbl
subl
add
roll
mov
mov
xor
mov
test
push
mov
outsb
sti
bound
lods
dec
mov
bound
xlat
pop
movntq
arpl
xchg
sbb
ljmp
bound
cltd
pop
sbbl
addr16
arpl
or
arpl
add
lods
mov
out
daa
jecxz
add
es
push
mov
jbe
jae
test
push
xchg
push
adc
xor
inc
lock
addr16
in
data16
mov
enter
push
fcmove
ss
ret
fs
sub
js
fmuls
mov
dec
mov
add
mov
mov
inc
decl
sti
jl
nop
jmp
dec
xor
popf
int3
adc
or
movsb
mov
scas
ja
inc
mov
loope
pusha
inc
fnstenv
mov
outsl
ret
in
addr16
test
mov
add
inc
scas
cmp
inc
cmc
inc
std
stos
add
mov
fdivrs
sbb
loopne
inc
fsubl
out
or
push
jp
outsb
stc
rcrl
cmc
push
fcmovu
hlt
dec
or
cmp
sub
sbb
xor
and
mov
push
jl
or
mov
dec
push
push
mov
adc
mov
jg
fs
add
movsl
pop
and
ret
inc
push
std
rcrl
sub
jno
jecxz
divl
sti
and
pop
das
xchg
loopne
ljmp
mov
sarb
movhps
push
js
test
mov
push
roll
aaa
aaa
dec
rcrb
icebp
pop
adc
cmc
sbb
jns
rcr
push
xor
iret
mov
pop
hlt
mov
sbb
sbb
add
mov
push
hlt
inc
in
cmpsb
inc
xchg
js
and
fisubs
dec
dec
mov
and
dec
and
pop
stc
sbb
or
mov
add
test
jl
jo
adc
xorl
shll
jl
xchg
movsl
mov
psrlw
push
loopne
fs
fcoml
sub
sub
lret
shlb
jb
jp
je
stos
negb
mov
or
shl
adc
dec
sub
cmp
lods
mov
mov
into
test
xor
xor
push
stc
adc
dec
dec
movsl
mov
dec
jne
fsubr
les
out
aad
outsl
and
lahf
xchg
dec
bound
or
mov
inc
leave
pop
sbb
sarb
pop
cltd
mov
mov
idiv
addr16
lcall
pop
call
adc
int
lds
and
fisubrl
pusha
adc
and
inc
push
adcb
jb
jb
xchg
or
outsl
pop
fcomip
mov
or
rcrl
dec
jg
ret
sbb
popf
xchg
mov
cmp
sahf
pop
out
ret
pop
into
push
fs
add
sahf
mov
das
fimuls
out
adcl
or
mov
stos
ret
pop
js
popf
pop
in
add
leave
mov
punpcklwd
xchg
fiaddl
outsl
shlb
addr16
in
cmp
lret
and
ffreep
push
enter
push
aas
mov
cmp
inc
jbe
leave
inc
nop
sub
ret
lahf
add
ficomps
mov
cmp
stc
insb
or
dec
jbe
mov
je
jge
out
jno
sbb
fwait
pop
dec
sub
mov
sbb
outsb
pop
mov
insl
ret
cmp
mov
push
inc
scas
call
mov
dec
push
repnz
sbb
xor
mov
wrmsr
lods
xor
sti
pop
movsb
fcoml
dec
fistl
test
push
jp
rcll
jb
cmc
testl
inc
jo
jnp
pop
cwtl
adc
lock
xchg
xor
leave
jl
test
cmp
or
nop
or
lahf
and
stos
pop
je
push
jbe
js
mov
clc
test
aaa
jge
orb
pop
mov
bound
aam
or
pop
mov
fadd
js
cmc
mov
lahf
lds
cmp
out
out
xor
fs
notb
enter
sahf
rcrl
mov
push
cltd
aad
push
shrb
repz
imul
push
inc
mov
call
jbe
stc
sbb
jb
pop
push
pop
pop
icebp
sti
adc
das
pop
js
hlt
and
cmp
push
sbb
xchg
add
jb
cld
dec
and
adc
es
pop
sub
loop
jge
aad
icebp
shr
popf
adc
dec
mov
adc
add
pop
rsqrtps
test
mov
ret
inc
jle
xchg
rcr
xchg
adc
iret
divb
push
jbe
sbbb
ret
int
jmp
lods
in
pop
addr16
aam
je
cmpsl
es
lods
sub
pop
mov
add
loop
sbb
mulb
mov
sub
and
lods
rep
mov
ss
xchg
inc
andb
js
sbb
mov
stc
and
loop
add
and
je
mov
loope
sbb
mov
shll
jge
cmp
mov
xor
cmp
mov
subl
xchg
fmuls
mov
mov
mov
push
inc
lock
xchg
fisttpl
int
inc
xor
jp
adc
sti
jmp
in
jae
cmpsl
popw
pop
xchg
cmp
arpl
pop
cwtl
sub
arpl
insb
pusha
scas
lea
inc
mov
push
cmc
outsb
jo
mov
adc
sbb
lret
aas
xlat
in
inc
cltd
out
mov
in
xchg
faddl
sub
dec
mov
mov
cmpsl
roll
inc
mov
testl
leave
and
stos
repnz
outsb
fsubp
sahf
outsb
ficoml
dec
fisubl
fsincos
pop
xchg
mov
mov
xchg
or
pop
pop
jae
out
cmp
pop
insb
adc
enter
jle
test
mov
mov
mov
ret
lcall
pop
clc
xchg
aam
test
push
push
stc
fisubrl
add
pop
cli
mov
dec
pushf
test
sbb
or
stos
fucomi
add
push
cmpsl
sub
cmp
push
ds
out
mov
add
icebp
loopne
push
lds
cmp
pop
dec
pusha
fsubl
inc
arpl
xchg
push
inc
xor
lds
insb
cmpsb
ljmp
mov
cmpsb
mov
sub
mov
jnp
insl
lret
add
leave
dec
leave
test
cwtl
push
mov
xchg
arpl
stos
cmpsl
adc
inc
sti
fs
cmpsb
or
mov
cwtl
das
sahf
cltd
mov
jl
mov
jb
dec
and
shr
push
mov
addr16
andl
or
test
sti
shr
imul
call
int3
or
neg
jbe,pn
push
cwtl
pop
and
out
es
xor
jmp
add
repnz
lahf
xchg
xor
pop
cmc
lods
jle
repnz
dec
cmc
aad
push
lds
mov
adc
repnz
push
sbb
or
add
push
mov
scas
jnp
arpl
push
movsb
push
mov
rclb
adc
fldenv
push
int
insb
cltd
enter
scas
pop
jmp
leave
jecxz
test
sub
inc
test
stos
inc
sti
add
mov
out
icebp
push
adc
lods
shl
xor
jmp
adc
lods
or
push
mov
add
xor
bnd
ja
aaa
push
je
das
hlt
daa
ja
sti
mov
sarl
adc
in
flds
push
mov
psrld
mov
mov
mov
add
scas
lahf
hlt
mov
loop
rorl
ret
xchg
bound
fnstsw
js
mov
sub
js
pop
push
mov
xchg
mov
adc
jle
mov
cld
sub
icebp
cmp
roll
or
add
push
xchg
lods
addr16
sbb
aad
out
loopne
out
insb
mov
mov
stc
mov
loopne
fdivl
pop
sahf
std
jae
mov
mov
cld
push
pop
pop
dec
sahf
into
mov
fidivrs
cmp
cmp
inc
cmpl
push
lahf
or
rcrl
shl
imul
dec
mov
arpl
f2xm1
or
lea
mov
mull
mov
stos
sub
xlat
stos
gs
adc
mov
and
sub
xor
push
xchg
or
mov
mov
aaa
pop
pop
aad
sub
dec
inc
and
xchg
test
adcl
mov
je
xchg
cmp
adc
out
cmp
mov
lds
adc
inc
mov
addr16
lcall
sahf
aas
cwtl
pop
aas
push
xorl
gs
dec
sbb
dec
out
push
push
mov
addb
push
cs
push
imul
add
subb
imul
sbb
test
sahf
mov
mov
imul
push
jae
andl
popf
fcompl
cmpb
das
mov
push
dec
push
mov
jnp
pop
xor
cwtl
gs
or
leave
mov
fsts
lods
adc
pop
mov
ret
jge
scas
lahf
push
sbb
xor
jmp
clc
fcom
out
mov
dec
and
fdivrs
push
ja
scas
push
test
jmp
cli
push
scas
mov
xchg
pop
adc
xchg
shrb
imul
insl
in
ljmp
les
mov
pop
inc
or
xor
sub
xchg
sub
xchg
jmp
push
nop
sbb
pop
pop
mov
aad
lret
or
fidivl
ret
pop
sub
out
push
lods
xor
jecxz
pop
inc
push
decb
idivb
mov
jp
mov
lods
addb
add
icebp
mov
arpl
clc
fs
xchg
mov
bnd
jg
adc
sbb
mov
cmpsb
xchg
addl
dec
aas
inc
shll
loope
inc
xor
or
cmp
cmpsl
std
push
das
addr16
in
mov
pop
lock
arpl
pop
test
orb
mov
cld
cmp
jo
das
aam
mov
or
inc
mov
daa
xor
mov
lret
sbb
push
dec
pushw
test
adc
addr16
pop
push
stc
or
mov
rclb
mov
adcl
fildll
loope
mov
aas
lea
lds
cmp
jmp
cmp
xchg
mov
lock
cmp
mov
or
je
testb
dec
adc
test
adc
or
and
in
cmp
bound
shll
xchg
mov
mov
lret
xchg
mov
faddl
lahf
mov
fldl
xor
imul
jae
pop
xchg
andb
nop
shrl
out
xchg
mov
sbb
cmpsb
popf
cmpsl
ret
mov
and
xchg
xchg
call
pushl
clc
sti
subl
aas
add
lock
lcall
jno
jo
inc
sub
pushf
je
mov
or
insl
mov
cmp
data16
push
inc
aam
sarb
ja
jno
std
aam
iret
mov
icebp
lcall
std
mov
mov
push
stos
xor
push
lds
mov
push
mov
dec
mov
jg
pop
xchg
popf
test
and
mov
das
imul
loopne
sbb
mov
add
stc
cs
ja
xchg
mov
jno
mov
insl
add
pop
mov
out
lods
ljmp
jno
test
xchg
ss
fldcw
jo
fisttps
cmp
ja
cmp
mov
mov
stos
or
test
fstl
push
push
and
cmc
mov
inc
pop
sbb
lret
xor
inc
cmp
stos
adc
push
mov
add
cmp
icebp
mov
or
fisubs
inc
jae
pop
sub
jnp
lret
lods
add
adc
iret
decb
inc
adc
scas
ret
pop
sbb
or
fldt
adc
out
mov
rolb
jl
cwtl
testl
xlat
lahf
jno
mov
push
jns
daa
sbb
mov
push
xchg
fdivl
adc
jne
pop
xchg
hlt
mov
les
pushf
sub
dec
out
leave
cltd
mov
outsl
jp
arpl
das
xor
sub
test
es
jge
je
ret
pop
test
pop
adc
cld
or
mov
fstp
inc
lret
hlt
mov
divl
int
repnz
mov
addr16
popa
or
das
mov
out
pusha
xchg
xchg
pop
inc
in
push
or
sbb
and
xchg
jo
int
xor
int3
add
rcrb
pop
loope
in
call
push
gs
ss
arpl
push
jbe
pushf
and
inc
sbb
add
mov
hlt
mov
xor
in
sub
cmp
lahf
jb
jmp
add
paddq
or
pop
mov
fiaddl
loope
xor
daa
and
ret
psubusb
loopne
iret
sarl
mov
fisubl
xchg
mov
dec
add
pop
mov
in
xor
out
xchg
and
test
xor
pop
cmpl
inc
in
icebp
add
dec
sub
dec
fdivrs
xchg
imul
and
mov
cli
rcrb
out
fcomps
lret
push
hlt
dec
lods
fwait
sub
popa
lods
mov
lcall
pusha
lods
jns
shrl
jmp
or
mov
mov
mov
mov
lcall
cmp
jmp
dec
sbb
das
lret
loope
outsl
adc
sbb
imul
xchg
jb
push
sbb
mov
call
mov
xchg
in
lock
test
sti
mov
in
int
mov
cmp
and
or
jno
cmpsb
sahf
fsub
mov
fstpt
jne
cltd
xor
cmc
js
in
je
xchg
mov
scas
or
repnz
pusha
inc
cltd
imul
dec
hlt
jo
xchg
adc
fistpl
ja
dec
mov
mov
test
add
xchg
mov
adc
jno
into
add
push
iret
lret
decl
sub
out
push
mov
cmp
jmp
cmc
xlat
xor
testb
pop
mov
jp
mov
push
or
cwtl
xor
cld
pop
sbb
stos
out
push
out
jnp
push
add
repz
pop
jns
lods
ret
in
sarb
fmull
cmpsb
pusha
push
mov
dec
sarb
push
push
addl
in
sti
mov
pop
movsb
mov
movsb
xchg
clc
jnp
mov
jae
inc
cmp
std
dec
sbb
mov
repnz
mov
pusha
dec
dec
cmp
test
out
lods
mov
mov
ffreep
pusha
adc
cmp
int
jl
stos
ficoms
pop
sbb
ss
pop
movsb
stos
push
loope
mov
sbb
push
jo
push
pop
sub
mov
popf
out
in
xlat
adc
add
movl
insb
push
xor
add
push
mov
aas
inc
pop
shrb
out
bound
adc
aas
fs
pop
inc
inc
mov
les
cs
lock
add
inc
inc
gs
xchg
ss
sbb
add
ffreep
jge
pop
out
fnstcw
lods
das
stc
add
pusha
es
add
cmp
pop
lret
dec
xor
sar
mov
push
pop
mov
jns,pt
mov
inc
in
mov
mov
and
scas
or
inc
popf
fimuls
movsb
fistpl
adc
sub
mov
aam
dec
pop
mov
lea
mov
pop
rorl
pop
leave
in
push
mov
lods
test
jo
mov
lcall
testb
pop
sti
mov
or
mov
jno
jnp
aas
nop
add
dec
jg
mov
cwtl
xor
ds
sbb
and
sarl
push
ret
dec
add
pop
mov
cmpsb
loope
pop
clc
xor
pushf
enter
in
push
cmp
jle
jns
xchg
mov
lock
pusha
mov
out
sbb
arpl
push
shr
jge
push
jnp
or
adc
adc
dec
mov
adc
mov
pusha
lods
inc
or
ret
jnp
inc
test
xchg
fisubrl
xchg
mov
inc
xchg
cmp
dec
inc
and
xchg
das
mov
add
mov
push
add
push
mov
sbb
das
dec
cmp
push
inc
cmpsb
push
xchg
loopne
lock
or
shrb
leave
xchg
pushf
push
lret
out
lea
jge
in
jle
jnp
loopne
jno
loopne
mov
cld
mov
or
vpaddw
loopne
mov
adc
push
ljmp
sbb
pop
fcompl
add
mov
mov
jae
insb
fsub
inc
outsl
out
call
leave
sti
in
jg
cmp
mov
sub
push
adc
or
shrl
and
popa
jbe
sbb
and
or
xchg
push
mov
jne
cs
jne
rcrb
xchg
fmulp
push
sub
fsubrp
jl
data16
mov
insb
lcall
mov
jns
push
push
add
adc
lock
cs
mov
and
test
sbb
pop
adc
in
sahf
popa
out
jg
mov
sub
mov
inc
sbb
rorb
adc
popf
push
xor
add
pop
xchg
xchg
adc
outsl
mov
jbe
ss
jno
mov
add
scas
hlt
rorb
outsl
test
insl
inc
pushf
mov
ss
mov
dec
ret
pusha
push
cmp
push
lods
adc
cwtl
aas
mov
lcall
push
dec
lods
add
lds
mov
outsl
adcl
sbb
pop
outsb
jb
mov
test
dec
popl
scas
bnd
out
adc
push
adc
in
jb
dec
add
out
add
jge
push
mulb
add
mov
dec
insl
movsl
mov
shlb
negb
adc
jl
aam
cmpsb
sub
cmp
fdiv
inc
pop
jle
adc
xor
les
das
cmp
lock
mov
jnp
ja
xor
mov
inc
into
stos
loop
sub
pop
cmp
mov
enter
std
shll
cmp
test
movsb
xor
cmc
mov
cmp
clc
es
push
rcrl
mov
dec
pop
in
in
loop
xchg
cwtl
jmp
inc
jmp
mov
jp
into
mov
daa
mov
and
inc
cmc
lods
shl
pop
sub
cs
inc
mov
test
dec
cmp
xchg
test
cmp
push
mov
push
lods
div
outsl
or
pop
mov
mov
push
mov
pop
rolb
add
xchg
mov
outsb
and
repnz
xchg
jmp
subb
shr
sbb
imul
rol
ljmp
mov
incl
mov
loop
test
mov
dec
pop
lods
mov
inc
enter
push
into
mov
ds
std
stos
inc
jg
aaa
mov
cs
xor
in
or
jno
std
inc
cmpsb
fisttpl
jmp
cld
jl
sbb
popf
cmp
mov
mov
sbb
xchg
or
jecxz
sbb
hlt
sub
xchg
sub
jnp
xchg
jnp
and
sbb
in
pop
jle
out
jge
loopne
push
mov
sub
clc
test
icebp
sbb
mov
inc
xorl
xchg
mov
push
sbb
sbb
sub
movnti
xlat
adc
inc
xchg
add
dec
add
sbb
jg
imul
pop
xorb
push
loopne
shrl
lock
loop
test
cmp
cmp
cmp
lea
dec
pop
mov
xchg
dec
pushf
xor
sbb
mov
ret
xchg
insl
icebp
push
mov
pop
add
lret
addr16
mov
fsts
mov
stos
sahf
inc
mov
dec
imul
xchg
push
repnz
lahf
out
fstpt
push
xchg
das
in
incb
xor
cmp
incb
mov
pop
mov
add
je
cmc
mov
inc
cld
rorb
ret
add
xchg
xorl
insl
pop
mov
repz
iret
montmul
cmpsb
add
add
mov
xchg
sub
decl
sub
es
fdiv
pop
adc
xchg
sub
mov
leave
mov
clc
stos
jl
pop
ds
cld
ljmp
dec
inc
stos
ljmp
dec
dec
fwait
pusha
lret
push
loop
and
mov
test
sub
into
sbb
sub
xchg
jno
sbb
jl
cltd
movl
inc
adc
stos
mov
in
mov
incl
xchg
aas
enter
pop
movb
adc
xor
add
add
fs
mov
jmp
pop
in
push
shl
les
cmpsb
ljmp
cmp
jg
in
mov
das
andb
ret
adc
xchg
cmpsb
test
and
xor
lea
mov
sub
aad
mull
repz
out
xchg
sbb
lret
es
movsl
dec
les
sbb
mov
cmpl
mov
int3
into
test
mov
cltd
fsubr
pop
outsb
mov
sbb
in
cmp
xlat
cltd
lock
hlt
and
pop
cmpsl
ret
push
adc
pop
xchg
iret
movsb
jecxz
into
adc
lret
inc
xor
jp
pop
sbb
cmpsb
lea
pop
cli
or
mov
jg
push
push
lock
add
dec
insb
clc
dec
or
mov
push
into
cmp
lahf
das
xchg
xor
stos
dec
js
hlt
shll
in
ja
jmp
shrd
mov
sbb
sub
jmp
push
or
test
and
pmaxub
addr16
mov
aaa
add
cmc
cmpl
push
or
mov
sbb
fst
mov
push
dec
pop
scas
mov
xchg
cmc
mov
sti
leave
arpl
and
cltd
stc
mov
add
adc
mov
fisubl
in
stc
add
ret
inc
mov
mov
cmp
cmc
shl
imul
xchg
cmp
popa
mov
pusha
add
jbe
inc
test
jecxz
pop
sbb
cli
cmp
jmp
pop
outsl
test
push
ret
bound
jo
lock
jg
jmp
ror
pop
mov
mov
lret
dec
mov
mov
sub
lcall
pop
mov
test
ficompl
ret
mov
mov
cli
cmc
cwtl
jnp
pop
out
fsubl
daa
pushf
sbb
in
sbb
xchg
incl
ljmp
add
or
in
jecxz
in
inc
adc
push
dec
add
unpckhps
shr
cmpsl
sbb
push
inc
in
mov
scas
jno
jg
dec
pop
sbb
adc
sub
xlat
das
ds
pop
mov
cltd
roll
shr
jmp
jo
imul
xor
jmp
inc
mov
popf
cmp
dec
pop
jp
fsubr
jge
sbb
add
adc
adc
nop
mov
dec
aam
push
je
bnd
fidivl
or
es
test
pop
mov
hlt
fsubs
hlt
setbe
and
cltd
dec
jns
shl
outsb
pop
push
es
adc
mov
mov
fnstsw
jno
jg
pop
cmc
mov
add
popa
arpl
pusha
jae
cmp
xchg
jecxz
in
add
std
fisttpll
xchg
out
sub
outsl
sbb
push
in
mov
out
xchg
mov
push
nop
out
pop
add
call
stos
dec
sbb
outsb
xlat
xor
stos
mov
dec
shl
mov
hlt
xor
loope
addb
xor
xchg
adc
popf
sub
xor
lahf
sbb
mov
jno
inc
rolb
mov
push
out
loope
lret
push
and
int3
xchg
aam
pop
and
mov
mov
adc
imul
lret
or
aas
outsl
inc
clc
jnp
clc
aad
lods
outsb
mov
and
int
xor
xor
jge
ds
and
pop
test
jecxz
sub
push
gs
pop
shlb
loop
neg
stos
lret
add
sub
sub
sbb
js
les
push
outsb
out
xor
jo
jmp
add
or
pop
imul
mov
xchg
shl
mov
testb
xor
mov
sub
sbb
int
enter
dec
fidivs
sahf
xchg
inc
or
pop
cmpb
and
das
fdivs
ret
or
dec
inc
loope
push
jb
nop
pop
add
push
and
push
dec
dec
adc
outsb
xor
jo,pn
in
adc
movsl
add
lea
pop
int3
adc
adc
mov
fbstp
mov
cmpsb
pushf
sub
testb
mov
and
mov
bound
ss
repnz
movsl
jns
inc
je
ftst
int
mov
add
mov
adc
arpl
shrb
js
xchg
pop
sbb
sbb
fists
sub
repz
insb
or
call
pop
cs
fsubs
cs
pop
insb
push
inc
cs
aas
push
fmuls
adc
xchg
lods
daa
test
pop
lds
pop
jns
nop
je
push
fstl
xchg
dec
faddl
jp
aas
clc
mov
pop
push
ret
pop
aas
popf
enter
cmpsl
cmp
or
and
inc
mov
fwait
sti
aam
ds
es
ljmp
push
mov
mov
scas
push
mov
scas
in
mov
call
xchg
cli
push
inc
jle
dec
mov
add
lret
movsb
hlt
lods
movsb
or
and
aaa
adcb
pop
mov
jge
pusha
lds
bound
jmp
out
sbbb
hlt
aad
pop
je
stos
mov
inc
leave
inc
stc
sub
addl
stos
jo
popa
xchg
xor
mov
sbb
aad
int
dec
xchg
cmp
ret
mov
cmp
inc
jg
jo
mov
ficomps
push
cmp
mov
test
movsl
mov
push
push
push
add
imul
pop
ja
jmp
mov
aas
roll
pop
shll
sets
pop
iret
nop
shr
sar
and
pushf
addr16
fwait
shll
pushf
loop
pop
push
ljmp
mov
aaa
cwtl
add
mov
mov
out
push
adc
jecxz
mov
ret
pop
loope
mov
push
lods
mov
mov
subb
push
hlt
out
pushf
aas
cmp
pop
jne
push
jmp
xchg
lods
mov
std
jecxz
pop
jne
shll
dec
shl
and
movsb
dec
xor
shll
mov
pop
pop
lea
ljmp
mov
popa
rolb
jl
dec
pop
add
imul
ret
repz
sub
pop
pushf
sbb
int3
stos
add
mov
mov
shlb
cmp
dec
mov
daa
push
pop
repz
outsb
pop
cli
fsubrl
xchg
pop
das
mov
arpl
cmpsb
daa
sub
loop
pop
insb
shr
gs
xchg
jns
xchg
pop
sbb
ja
sbb
pop
mov
add
sub
pop
xlat
mov
sahf
xchg
mov
pop
mov
cmpsl
and
push
mov
mov
fmull
aam
xchg
pop
sbb
xchg
repnz
or
xchg
push
cmc
add
popf
dec
enter
addr16
add
inc
roll
adc
fldcw
jb
add
icebp
xchg
insb
fwait
push
fstps
push
or
aad
pop
out
in
fwait
xchg
loopne
pushf
cmc
dec
jo
pop
fisubl
push
es
test
imul
sbb
jp
jne,pt
test
dec
leave
cmpsl
push
push
xor
call
dec
stos
jo
bound
inc
out
enter
adc
xchg
inc
adc
mov
cmc
mov
adc
das
arpl
sub
jecxz
jbe
dec
jge
cld
or
mov
aas
sahf
scas
jae
mov
int3
cltd
lds
push
icebp
sbb
mov
add
fadd
test
jbe
add
fs
pusha
les
imul
sub
shl
jp
ror
add
adc
pop
lods
ss
dec
ljmp
gs
and
or
fldt
jle
mov
pop
cmpsl
lcall
mov
pop
sub
dec
je
xchg
push
mov
pop
dec
data16
test
mov
cld
or
mov
adc
jnp
insl
cmpl
pop
or
imul
sbb
inc
lods
mov
mov
sbb
in
stos
jb
mov
cs
push
mov
pop
loopne
scas
aaa
xor
pop
pop
add
je
adc
and
scas
iret
gs
ficomps
mov
and
in
dec
stc
cs
pop
dec
insb
inc
sub
sbb
das
pop
and
xlat
push
pop
loope
and
jge
pop
mov
jle
adc
rcl
mov
jmp
xchg
lahf
inc
test
dec
insl
cmp
ret
xchg
sub
adcl
add
pusha
pop
mov
aam
lret
sti
sar
test
test
sbb
adcb
sbb
test
mov
sbb
imulb
ljmp
push
shll
stos
pop
xchg
stc
xchg
ja
lods
push
or
aas
jmp
out
gs
ret
imul
mov
lods
cmc
and
lret
and
shl
cwtl
ja
add
aas
add
and
ds
inc
mov
scas
test
lcall
in
jmp
data16
and
pop
ds
scas
xorb
dec
or
adc
mov
mov
dec
out
scas
mov
subl
and
pop
lock
adc
add
ljmp
xchg
sub
imul
mov
xchg
shl
jecxz
inc
jnp
test
pop
and
mov
adc
cmp
mov
in
lahf
or
arpl
xor
lea
pop
sub
sbb
or
pop
roll
mov
cmpsl
gs
loop
jecxz
or
loop
push
daa
mov
jmp
pop
ljmp
cli
es
ret
xorb
mov
cmp
push
dec
xchg
in
test
xorb
jmp
cmpsl
sub
mov
pop
mov
cwtl
add
cmpsl
fists
xchg
cmp
gs
out
xchg
mov
xchg
mov
mov
lret
push
call
filds
lock
out
jb
pop
cmp
mov
xor
sarl
cmp
outsl
pop
inc
mov
cmp
and
add
lret
fbstp
xor
and
jne
cli
sbb
mov
popa
dec
adc
mov
push
fcoml
jbe
dec
push
insl
add
mov
fcmovb
imulb
out
ja
xchg
pop
dec
in
popf
rcrb
sub
imul
cmpsl
or
jle
fsub
or
and
scas
mov
mov
iret
lods
loope
mov
lcall
fiaddl
xchg
sub
mov
lahf
aas
cltd
cmpsb
pusha
xchg
push
shr
mov
cltd
pop
fmul
cmpl
repnz
dec
xor
cmc
add
sbb
dec
push
loopne
scas
int
jno
lcall
fidivrl
jp
adc
mov
jp,pn
stos
inc
jnp
mov
ror
mov
pop
mov
cld
add
dec
cmpsb
aad
imul
push
xor
mov
sbb
lret
xchg
add
xchg
scas
push
ljmp
test
mov
and
adc
test
enter
pop
xor
or
lahf
mov
xlat
call
outsb
mov
or
or
int3
xlat
or
pop
sub
cmpsl
icebp
push
je
sub
repnz
mov
or
bound
dec
popa
and
jns
jl
xor
mov
jne
jmp
push
mulb
cmc
jno
jne
inc
push
push
add
insl
jb
xchg
mov
cli
add
lods
and
outsl
popf
mov
add
add
lcall
pop
sbb
jg
push
sub
imul
ljmp
sub
pop
cwtl
lret
mov
lret
movsb
inc
mov
mov
lods
xlat
xor
sub
iret
add
sbb
aaa
popf
nop
add
mov
les
push
iret
mov
mov
das
and
repnz
jle
inc
xchg
jne
dec
and
xchg
lock
inc
sub
mov
ret
mov
into
mov
in
cmpb
cmp
cld
pop
repz
inc
or
add
lret
or
ds
insl
sub
cli
pop
dec
mov
dec
fs
or
xchg
pop
test
mov
lret
push
or
mov
rclb
ret
mov
mov
aam
inc
popf
pop
andb
test
pop
sbb
push
fnsave
pop
or
in
mov
pop
sbb
sub
in
sbb
stos
arpl
pop
adc
mov
mov
push
cmpsb
and
mov
gs
fsubrl
mov
mov
insl
xor
mov
lock
xor
andb
pop
xor
pushf
adc
sbb
stos
add
xchg
mov
mov
dec
pop
pop
add
outsb
inc
jl
and
xlat
cli
mov
push
les
push
mov
push
inc
ss
adc
data16
je
add
lcall
mov
stos
xchg
rclb
insl
arpl
xor
out
in
xor
pop
sbb
adc
je
leave
xchg
fstps
out
mov
ret
js
repnz
std
pop
je
mov
cmp
cmp
sti
mov
fcmovu
pop
jp
pop
sti
pop
mov
jne
mov
xchg
pusha
jo
fcomps
arpl
mov
je
scas
push
add
ss
neg
fmuls
sub
cmpl
push
cmp
test
rorl
push
lods
imul
add
xchg
dec
dec
push
repz
and
test
js
add
clc
cs
aaa
sbb
sbb
rclb
mov
les
imul
cmp
ret
push
shl
shr
fidivl
dec
cmp
icebp
xchg
mov
jg
push
xor
cmp
jmp
mov
cli
mov
fsubrs
and
lods
int
push
xlat
cli
bound
jns
adc
pop
pop
pop
xor
clc
xlat
mov
pusha
loopne,pn
pop
mov
inc
jp
mov
jno
ficoms
mov
out
mov
adcl
in
pop
adc
xchg
fisttpll
mov
adcl
cmp
or
xchg
popf
mov
ret
gs
fstpt
push
addb
pushf
jnp
mov
add
incl
mov
xor
outsb
pop
and
fwait
jns
cs
mov
inc
inc
jnp
pop
sbbl
pusha
mov
jle
xchg
pop
mov
jnp
push
push
xlat
aas
and
push
lods
cld
ret
add
or
or
repnz
fildll
or
push
add
jbe
mov
leave
add
xorb
and
mov
fcoms
sbb
xchg
xor
pop
in
scas
arpl
xchg
mov
jge
out
sbb
dec
int
insl
push
fsubs
push
cmpsl
stc
dec
cwtl
repnz
xor
mov
fdivrl
mov
lea
jno
sbb
jno
idivl
fcmove
xchg
xor
fildl
cmp
inc
cs
pop
test
dec
adc
into
andl
mov
sub
pop
jmp
fistpl
xchg
or
mov
mov
fisubl
bound
pop
jno
push
lods
stos
js
cmp
sarl
mov
test
push
inc
lcall
sbb
and
ja
mov
or
push
and
in
sub
imull
mov
add
xchg
sbb
sbb
xchg
test
push
cmp
daa
sbb
rcl
daa
insb
sti
js
aas
in
and
stos
test
int3
pusha
adc
js
aaa
pop
xor
and
pop
pop
push
inc
stc
inc
nop
sub
jb
pop
rcrl
imul
add
addr16
in
mov
fmul
mov
jge
inc
xor
jle
mov
inc
ds
loop
daa
scas
xlat
fisubs
mov
mov
or
mov
fstl
mov
sub
sbb
cmpsb
test
adc
pop
into
fldl
xchg
xlat
add
mov
ds
xchg
cmpsl
nop
adc
adc
jge
clc
iret
subl
cmpsb
adc
jp
fcom
ret
pop
pop
fnstcw
push
ret
push
and
loope
cmpsb
mov
insb
gs
mov
pop
lds
or
push
iret
dec
icebp
sub
xchg
dec
sub
lcall
daa
arpl
lret
icebp
or
sub
je
pop
jmp
insl
cld
cmc
lret
mov
daa
insl
int3
xchg
sub
push
das
or
jns
fs
gs
loop
leave
push
rcr
gs
inc
std
fistl
decl
repnz
inc
push
xor
cltd
inc
popf
sbb
shr
pushf
mov
adc
ja,pn
fnstenv
jmp
sbb
les
jo
fdiv
sub
cmpsl
pop
movsb
popf
mov
pop
xchg
cmp
sub
addb
dec
decl
add
sub
cltd
or
pop
pop
bound
les
sbb
push
sbb
imul
adc
fbld
in
mov
repz
pop
stos
and
insb
lock
shrb
jb
dec
add
fwait
pop
clc
dec
sub
adc
cmp
cwtl
fstpl
inc
cmp
push
push
lods
add
jae
repz
dec
sub
insl
add
aas
mov
pop
add
aaa
or
adcb
jne
cltd
and
fildl
nop
cltd
loope
xchg
cmp
jne
ror
adc
sub
push
rorb
arpl
insb
xchg
push
lahf
lret
push
push
sti
dec
popa
add
push
pushf
add
sahf
sbb
jne
sbb
push
mov
seto
xchg
or
adc
fs
mov
orb
cld
jg
adc
ja
int3
and
pop
jae
jb
mov
cmp
ret
xlat
cmp
pushf
aas
jmp
jle
jl
dec
ficomps
inc
mov
aad
dec
inc
jo
test
std
loop
push
mov
js
or
clc
push
cmp
ljmp
loope
jns
test
lcall
in
popf
push
mov
jnp
push
lock
xchg
xchg
aam
call
mov
push
lods
outsb
xchg
cld
scas
mov
xchg
popa
and
add
test
sbb
ftst
mov
icebp
jnp
push
fsubl
mov
adc
sub
mov
dec
hlt
sti
lods
or
shlb
sbb
aad
pop
push
mov
mov
daa
and
dec
jp
fs
rcl
mov
sbb
xor
stos
xor
sub
divb
test
dec
inc
pop
pop
lods
imul
push
aaa
or
jnp
dec
mov
into
js
xor
in
aas
popf
jle
push
fdiv
push
xchg
adc
shll
and
jnp
out
xchg
inc
cmpsl
imul
test
imul
subb
inc
psubsb
lock
lods
ds
repz
loope
push
dec
push
jo
fldl2t
push
and
loope
cmp
jmp
stos
repz
jnp
lahf
jb
hlt
cld
fildl
cmp
cld
pop
adc
sub
xchg
cld
jns
lret
aam
lcall
and
out
adc
stos
outsl
dec
mov
js
cwtl
aaa
lods
fiadds
ss
repz
sbb
push
mov
sbb
into
sbb
xlat
lods
int3
xor
sub
xor
mov
mov
mov
mov
lds
icebp
adcl
mov
push
addb
inc
cmpsb
fadds
or
je
sti
imul
jmp
arpl
mov
push
push
popf
and
ror
push
cmp
insb
loopne
push
pop
insb
xchg
pop
sub
pop
in
popa
cmp
jg
pop
sub
loop
clc
xor
imul
lcall
sub
sbb
mov
iret
out
adc
inc
pusha
sbb
int3
pop
lds
sub
fsts
inc
icebp
sub
loope
ret
pop
sub
pop
lock
and
sar
sbb
pusha
mov
data16
insb
ficoml
aad
push
cmp
enter
repnz
pop
clc
ja
shll
pop
dec
movl
dec
and
cld
and
nop
inc
in
in
lret
sub
cmp
hlt
leavew
pop
and
cli
loope
rolb
icebp
xor
mov
mov
push
aam
rcl
fwait
and
xor
add
inc
xchg
xchg
jne
pop
lahf
dec
sub
movsb
mov
lods
jecxz
cmpsb
xchg
mov
lock
push
xor
lret
jnp
data16
push
popa
mov
xchg
push
xchg
fiadds
jns
pop
mov
mov
jbe
leave
adc
push
adc
popf
repnz
lods
pop
cld
ret
shll
push
add
lods
jne
xchg
jbe
fcom
pop
dec
rcrb
mov
fadds
je
inc
push
jno
test
in
rcrl
sbb
aas
cmp
dec
sbb
jne
push
mov
dec
and
outsb
stc
aaa
jnp
pop
and
flds
jo
js
inc
mov
rcrl
pop
scas
cmpsb
mov
lock
cmpl
std
insl
cmpb
inc
mov
mov
ret
arpl
clc
dec
lock
rolb
push
add
push
lahf
xchg
stc
je
mov
mov
jno
sbb
movsb
jb
xchg
xor
adc
shll
repnz
push
fbstp
push
dec
mov
mov
repz
in
stos
sub
clc
fidivrs
pop
into
cld
stos
inc
jae
dec
imul
sbb
imul
aas
lea
addr16
add
dec
cmp
xorl
orb
out
iret
ficomps
mov
xor
das
rcl
inc
lahf
fsubrs
movsl
mov
push
pushf
out
mov
bound
flds
cmc
jbe,pn
cmpsb
rorb
ljmp
adc
shll
fs
cwtl
lock
movsl
inc
pop
clc
and
jne
dec
mov
mov
xchg
in
pop
stc
pop
inc
out
mov
sahf
push
rol
sarl
fcoml
ljmp
aam
push
xchg
call
in
ss
pushf
mov
pop
xchg
daa
sti
fbstp
xor
sbb
mov
add
dec
xor
in
aam
mov
cmpsb
lret
cmp
cmp
mov
ret
add
xlat
data16
ret
lcall
das
and
into
nop
push
insb
mov
inc
scas
call
and
xchg
cmp
fsubl
inc
jbe
sarb
xchg
mov
xchg
xor
xchg
fstpl
fwait
cmp
jecxz
cmp
mov
xor
cmp
pop
je
popa
sbb
aam
or
push
movsl
filds
xor
pushf
jo
mov
lock
lock
fisubrl
pop
mov
ret
pop
sbb
leave
inc
iret
dec
ljmp
mov
iret
push
lock
cli
loopne
jl
imul
js
imul
cmp
xor
std
jmp
cli
xor
fsubl
dec
push
ret
cmpl
xor
xor
mov
pop
sbb
xor
cmp
xchg
mov
in
aaa
in
ds
sub
rolb
daa
out
loop
dec
sbb
leave
dec
movsb
xor
and
test
js
call
mov
imul
scas
pop
aaa
js
loopne
fcmovbe
pop
jecxz
hlt
pop
icebp
cmpsb
push
pop
movsl
mov
adc
imul
pop
test
add
lcall
mov
stos
dec
arpl
scas
cmovl
mov
or
dec
lods
mov
add
arpl
xchg
sbb
mov
and
and
xor
nop
data16
scas
data16
sysexit
shll
fsubl
push
stos
std
fs
loop
mov
sub
fnsave
push
add
dec
enter
int3
mov
cmp
sub
push
xchg
and
cmp
icebp
shl
mov
repnz
fsubl
inc
cmp
fs
adc
addr16
xchg
add
push
sub
jle
fs
scas
push
dec
insb
pop
divl
dec
sbb
loope
mov
std
ds
test
and
inc
outsl
in
stc
xor
cmpsl
test
sbb
cmpsl
push
movsb
lods
sti
in
es
and
xor
or
loopne
cmc
inc
in
cs
xchg
test
jge
ljmp
add
out
cmp
adc
jle
mov
shr
mov
sbb
push
sub
imul
pop
cmpsl
pop
or
push
jmp
push
sub
mul
lcall
arpl
testl
jae
sub
sub
shrl
ret
je
fcomps
rcrl
adc
xchg
or
out
mov
mov
mov
xchg
mov
lods
push
movsb
xchg
mov
jno
xchg
xadd
scas
and
pop
and
or
sbb
push
jae
pusha
inc
das
pop
loop
push
mov
xor
push
fidivs
ret
shl
stos
jne
in
in
cli
int
movsb
xchg
xor
loope
add
push
iret
js
pop
arpl
insl
add
pop
lret
and
test
lret
sub
popa
push
test
rcrl
xor
xor
lcall
push
sub
in
mov
xchg
sub
data16
dec
sahf
mov
aam
adc
hlt
clc
pop
jge
jno
sub
mov
or
jno
cmp
repnz
and
imull
test
xor
xorb
scas
shll
add
inc
ljmp
jb
insb
inc
ja
inc
pop
and
mov
nop
jl
sti
xor
pop
jno
out
adc
mov
cwtl
dec
int3
sub
into
dec
fcom
fwait
in
inc
pop
mov
xchg
xor
lds
mov
cmp
imul
cltd
xor
jg
mov
inc
subl
mov
mov
xor
in
movups
push
shr
mov
mov
cs
int
fdivrp
int
dec
jg
stos
sub
mov
fdivl
out
xchg
aaa
in
fs
lock
clc
xchg
jno
adc
add
sbb
bswap
xchg
out
fldl2e
mov
or
adcb
xchg
inc
sbb
bound
iret
ljmp
popl
adc
ss
lcall
pop
je
xchg
adc
ljmp
fsubrl
jae
inc
jo
int3
int
aam
ss
pop
sbbl
call
lcall
out
add
fidivs
or
cmp
inc
jmp
lods
das
pause
sbb
ss
adc
sbbl
in
pop
push
xor
lret
stc
pop
jmp
stc
and
push
or
enter
pop
clc
test
ud1
mov
in
daa
adc
push
sbb
xor
rorb
adc
loopne
push
or
mov
iret
int3
xor
rorb
jecxz
addr16
in
sub
mov
push
gs
test
faddl
push
adc
inc
mov
repz
adc
test
int
popa
rorl
sub
lock
insb
mov
push
in
adc
mov
cld
pusha
std
xchg
iret
cmovns
mov
ds
add
js
fwait
repz
push
pop
clc
and
or
outsl
jle
jecxz
and
ds
adc
jns
jg
jl
sarl
push
js
pop
in
xor
jmp
mov
je
testl
push
pop
push
les
lods
sub
out
or
mov
aad
in
aad
sub
mov
hlt
push
fdiv
ret
fisubl
fwait
cs
dec
push
mov
cmp
int3
out
mov
sub
insb
mov
out
mov
mov
mov
mov
add
sub
or
mov
lahf
aam
cmc
xor
xor
push
mov
dec
jmp
pop
shrb
movsb
push
pop
pusha
mov
dec
push
xor
test
pushf
jmp
xchg
fidivrs
inc
and
pop
sub
push
and
aaa
lods
rcrl
fmuls
push
leave
shrl
cmp
bound
inc
push
je
push
notb
sub
pop
add
pushf
cli
lods
es
jl
adc
cmpsb
test
call
mov
cmp
ja
fstpl
pop
jl
pop
jbe
test
shll
jne
movsl
lret
cs
jle
pop
xchg
jl
xchg
in
iret
movntps
cmp
xor
mov
cld
insb
cltd
add
jno
loope
cmp
dec
add
jecxz
dec
sarl
push
lock
or
cmp
js
mov
daa
jo
fld
cmpsb
repz
call
sub
sbb
xor
add
imul
mov
adcl
je
cmp
aas
push
mov
cli
cwtl
mov
js
cld
pushf
lea
and
xchg
js
cmp
pop
sahf
ret
mov
lcall
sbb
mov
push
fidivs
fiadds
mov
inc
inc
shll
mov
inc
movsb
xchg
repz
fldenv
dec
push
push
adc
in
andb
call
add
push
xor
pop
dec
push
mov
dec
movsb
rorb
lds
lds
insl
jecxz
mov
std
xchg
jmp
mov
stc
mov
add
fdivr
dec
mov
ret
mov
mov
cltd
in
dec
iret
lods
lock
inc
mov
into
or
out
mov
sbb
pop
xchg
out
pop
sbb
mov
add
cmp
lods
fs
adc
sub
dec
fs
test
movsb
dec
dec
adc
inc
aad
pushw
out
bound
test
jmp
stc
adc
xor
jbe
mov
pop
scas
test
test
lock
imul
push
movsl
out
add
gs
unpcklps
sbb
out
or
jnp
pop
stos
lahf
mov
push
fadds
add
sub
in
xchg
outsb
xor
jl
inc
lds
movsb
jecxz
pop
jecxz
add
xor
fwait
mov
fidivl
push
imul
stos
testb
subb
dec
fs
xor
cli
inc
ss
fcoms
and
and
jecxz
addb
xor
je
xor
nop
jae
mov
rcrb
xchg
xor
and
add
sbb
pop
in
pushf
in
mov
rclb
mov
test
enter
je
fsubrl
mov
hlt
or
mov
and
cmpsb
sti
mov
div
ds
and
movsl
push
in
xchg
sbb
repz
xchg
xor
jno
in
ds
push
mov
pop
sarl
jp
out
sbb
or
sub
mov
div
lret
mov
lcall
rcl
add
and
mov
xor
pop
inc
jb
adc
cli
ficomps
roll
xchg
mov
scas
xor
out
fs
sub
or
adc
jno
push
aaa
out
test
test
xchg
xor
sub
rclb
hlt
lea
pop
and
inc
test
hlt
mov
xor
scas
xlat
mov
ret
mov
je
cmp
xchg
sahf
jo
sub
roll
insb
out
cmpsl
sbb
imul
sub
add
jbe
mov
sub
or
pop
push
mov
mov
xchg
mov
sti
mov
xchg
imul
xor
dec
xchg
dec
mov
movl
mov
in
sbb
mov
mov
push
orb
cmc
lods
sbb
mov
je
pop
jne
insl
enter
lahf
dec
loop
lds
sub
in
cmpsb
outsb
shl
sub
cmp
scas
xor
sbb
insb
inc
jne
dec
push
aas
call
not
or
sarb
push
lcall
ja
inc
mov
dec
idivb
rcr
or
sti
gs
cmp
loope
cmp
dec
adc
loop
pop
fidivs
lcall
cmp
mov
pop
test
dec
aaa
inc
inc
test
pusha
mov
in
cmp
xchg
xlat
sbb
lds
movl
test
orb
xor
jnp
hlt
std
inc
inc
out
jmp
inc
add
pop
push
add
into
push
adc
cmp
xchg
std
rorl
sti
rclb
pcmpeqd
mov
mov
hlt
cmpsl
stos
jmp
mov
pop
xor
rep
inc
pop
inc
cmp
dec
xchg
es
xor
push
rcrl
xchg
jno
pop
pop
mov
in
testb
lahf
sbb
test
push
xor
xchg
sti
sti
call
stos
les
mov
adc
mov
xor
adc
nop
mov
adc
fs
bound
int
pusha
add
shll
leave
fsubl
inc
or
xchg
and
jl
pop
inc
mov
adc
lahf
inc
pop
in
adc
icebp
or
enter
sbb
das
inc
xchg
push
sbb
sbb
popf
rcll
cmp
cmp
lahf
pop
and
cwtl
dec
and
inc
cmp
xchg
stc
sti
mov
cmp
and
pushf
sub
loop
sti
cld
js
in
lods
xchg
pop
dec
lahf
mov
stc
mov
pop
xor
out
xchg
mov
or
popf
push
jmp
sub
int
hlt
pop
fdivs
pop
mov
repnz
jae
shlb
gs
cmp
fucompp
int3
mov
xchg
sbb
jle
fnstcw
jl
cltd
pushf
repz
decl
and
outsb
add
xchg
pop
into
xor
cmp
bnd
repnz
test
or
stos
fidivrl
scas
scas
adc
jp
std
cld
mov
xor
cmc
cmp
shlb
stos
in
ljmp
push
xchg
or
gs
and
jle,pn
cmp
fadd
and
loopne
sbb
push
test
punpckhbw
and
clc
push
xor
data16
sti
cld
push
je
adc
push
sub
pop
pop
test
push
mov
jl
insb
stos
lret
xchg
sub
sar
and
pushf
dec
mov
push
jnp
sbb
push
xor
xlat
cltd
aas
dec
jb
lcall
in
or
mov
mov
lods
pop
incb
popf
movsl
or
sbb
cmp
sti
cmp
aad
push
fisubl
sbb
mov
or
pop
mov
out
dec
lea
inc
mov
xchg
test
mov
adc
bound
insb
cmp
orb
mov
inc
pop
push
stos
ja
or
and
pop
int3
daa
scas
adc
mov
addr16
dec
adc
sbb
xchg
add
push
into
dec
rol
inc
das
movsb
mov
sbb
std
jb
fcom
loope
jmp
inc
and
imul
nop
jne
call
and
cmpsb
fstps
cwtl
push
adc
adc
xor
lahf
lret
in
arpl
repnz
push
mov
sub
dec
xor
push
or
in
movsb
cwtl
adc
xor
pop
mov
xchg
lret
dec
icebp
pushf
pusha
xor
out
cmp
sbb
pusha
push
int
stc
or
sbb
push
int3
dec
mov
mov
arpl
mov
and
push
push
add
dec
enter
jb
mov
sbb
jl
xor
out
mov
lods
aam
xchg
adc
inc
inc
and
nop
shrb
mov
add
dec
cmp
roll
inc
int3
dec
iret
iret
adc
sti
stos
sub
mov
inc
cmpsb
popf
bound
jp
mov
sbb
dec
xchg
ficoml
hlt
rorb
pop
inc
xchg
cwtl
sbb
sub
mov
sub
sahf
frndint
jne
in
push
adc
mov
or
mov
hlt
cs
or
idiv
test
pop
movl
mov
add
shrb
add
and
aam
and
xor
rolb
mov
insb
fisttpl
push
loop
sub
mov
pop
loopne
fs
ss
and
shll
sahf
in
mov
filds
es
adc
popa
inc
rcrb
clc
je
jns
push
push
fstl
xor
fcomps
or
add
inc
xor
stc
sub
cs
aas
std
jae
test
lahf
add
sbb
outsb
jnp
cmc
push
push
dec
push
cmp
fldenv
and
into
rolb
xchg
cmp
mov
pushf
icebp
test
jnp
movsb
add
repz
in
insb
push
faddp
pusha
fldl
mov
test
add
mov
mov
pop
lea
cli
push
xchg
or
or
or
xchg
fcoml
adc
xchg
mov
aad
fildll
lods
cmp
mov
mov
aad
das
jp
dec
mov
out
pop
ljmp
jmp
insb
pop
push
xlat
sub
mov
scas
inc
clc
or
xor
sbb
loopne
mov
pop
enter
ljmp
jbe
dec
push
cmp
add
jno
lcall
dec
cld
ret
rcrl
jmp
stc
test
jo
test
popa
shl
out
fdivs
jbe
call
xlat
push
or
stos
adc
pop
int
sbb
stos
ss
jne
test
adc
cltd
lea
fs
jecxz
fdivs
pushf
add
ja
loopne
inc
aaa
jg
cli
loope
cmp
xchg
aam
inc
and
inc
sub
mov
ret
test
lea
fmull
pusha
mov
jne
jmp
mov
and
es
cmp
int
lock
gs
sti
insl
popf
mov
mov
arpl
cli
adc
add
sub
jns
cwtl
mov
pop
ss
dec
xor
fs
xlat
jg
lea
sbb
les
xor
ja,pt
ja
ljmp
mov
cmp
mov
mov
hlt
mov
and
bnd
repnz
jmp
mov
loope
repz
and
adc
sub
xor
int
mov
fs
into
and
cmp
je
and
lret
inc
scas
mov
daa
ds
js
mov
jmp
in
jg
push
mov
jecxz
mov
lret
outsl
adc
and
out
in
negb
dec
pop
cmpsl
ret
push
xor
add
pop
xchg
adc
or
push
jae
mov
aaa
adc
lret
gs
cmp
out
divb
and
sbb
xlat
add
outsl
dec
sub
mov
push
and
cmp
cmp
cmp
repnz
pop
icebp
pop
aaa
stos
dec
in
add
jno
fimull
jl
mov
cmc
loope
dec
das
jl
ljmp
xchg
and
movb
fbstp
dec
shll
je
sub
fs
stos
jmp
dec
and
push
aam
scas
and
leave
mov
mov
fstl
jle
push
sbb
jl
push
mov
jns
mov
scas
push
adc
ljmp
movsb
and
and
sub
or
inc
ljmp
inc
bound
and
les
loop
sub
cli
xor
loopne
mov
mov
pop
ds
cmp
lds
sbb
sbb
jmp
or
mov
ret
jno
repnz
sbb
xor
daa
xchg
pop
mov
cmc
movsl
cmp
sub
jbe
test
and
or
popf
push
dec
or
jge
mov
push
xchg
push
ja
fucom
dec
xor
lret
mov
push
mov
call
push
sti
aam
jo
pop
mov
repnz
addl
stc
insl
inc
test
mov
jns
dec
int3
fistpll
bound
cmc
push
cmp
push
push
ret
cmp
outsl
test
push
jmp
dec
notb
add
aas
add
sbb
xchg
mov
push
jmp
stos
sub
mov
scas
shll
jge
mov
cmpsl
xor
ror
cmp
inc
ja
incl
xlat
or
sub
push
cmpsb
fwait
sub
inc
jmp
push
and
repnz
lea
jp
xchg
in
mov
lret
pop
mov
fistl
xchg
lods
es
mov
and
andl
mov
insl
out
cli
arpl
bound
mov
das
ja
push
and
mov
mov
push
cmp
sbb
in
lcall
mov
idivb
lcall
out
xchg
or
push
adc
dec
mov
xchg
jbe
in
fwait
mov
inc
out
shrl
add
fs
scas
adc
adc
dec
adc
test
jge
cmp
cwtl
divb
shll
xchg
sub
sbb
add
ss
mov
push
xchg
mov
imul
sbb
mov
or
sbb
add
stos
adc
and
sub
mov
sarb
xlat
cmpsb
push
sub
push
xchg
or
leave
push
cmp
imul
or
or
xchg
test
add
popf
ret
es
jnp
dec
popa
aas
mov
pop
stos
outsb
sti
je
and
fwait
cmp
xor
adc
out
sbb
mov
mov
inc
lret
test
dec
pushl
pcmpgtd
sub
movsl
bound
cld
push
push
shlb
sub
sbb
das
repnz
adc
popa
mov
and
js
fxch
lea
jae
pop
jle
mov
cmpsl
inc
mov
lret
add
adc
lock
fidivrs
inc
loop
cmc
ljmp
adc
lahf
hlt
add
call
lods
mov
roll
mov
mov
les
cmp
fisttpll
jns
pop
sarb
pusha
xchg
add
mov
test
pop
adc
adc
jge
fmull
stc
mov
cmp
and
js
sarl
sub
addb
iret
push
pop
cmpsl
pop
lahf
out
fidivs
mov
pop
rcrl
sub
mov
jl
sub
in
int
bound
scas
call
aaa
add
ds
loopne
dec
out
insb
mov
aad
adc
xchg
outsl
andb
popa
or
mov
loopne
insl
lods
push
aam
stc
or
xchg
fisubrl
add
lock
adc
pcmpeqd
sub
jmp
aam
out
into
xor
pusha
lods
lea
int
lea
shrb
push
or
ja
popa
adc
sbb
or
add
movsb
fcompl
in
cmpsw
and
bound
loopne
aam
hlt
pop
or
int3
jne
and
pop
sahf
scas
insb
xor
cmp
add
mov
ljmp
adc
mov
sbb
and
std
or
cld
mov
mov
xchg
sarl
jne
jns
xchg
pop
add
xchg
fstp
sar
insl
add
push
and
cmp
mov
repz
push
or
loopne
test
xor
rol
aas
mov
push
add
shll
mov
mov
in
enter
jno
mov
lods
push
mov
es
jecxz
mov
pop
xor
dec
push
mov
filds
mov
or
lods
in
dec
lcall
test
jl
push
pop
mov
data16
popf
and
outsb
sub
and
lods
cmpsb
dec
inc
sbb
xor
std
ja
sbb
ret
add
sbb
mov
insl
and
imul
sbbl
mov
test
mov
leave
xchg
in
cld
mov
xchg
mov
cmp
iretw
lcall
jmp
or
out
xchg
add
call
cld
jb
mov
jns
fwait
int3
movsb
dec
fdivrl
cli
mov
jbe
pop
jecxz
out
pop
outsb
sbb
push
sbb
mov
inc
pop
xchg
mov
sub
mov
shl
add
mov
ret
cmp
sarb
aam
pop
addr16
iret
pop
cmove
cwtl
xor
or
mov
cmc
push
jmp
sub
aad
pop
lock
test
out
pop
mov
mov
ss
and
popa
and
mov
ljmp
mov
mov
jo
iret
out
pop
lods
and
pop
mov
loopne
jle
nop
xchg
mov
or
lock
pop
inc
sub
xchg
mov
ret
xchg
in
rcrl
or
cmp
sub
jecxz
lcall
pushf
jg
mov
lods
xlat
cmpsl
pop
push
xchg
add
sbb
testl
adc
push
aas
mov
fstps
cmp
xchg
or
pop
mov
xor
in
dec
repnz
xchg
pop
mov
lret
sar
fwait
cmpb
fucomip
or
aas
xchg
nopl
aad
pop
notl
xor
out
mov
sbb
mov
mov
shl
loop
out
pop
xor
test
test
adc
mov
rcl
adc
add
dec
cmpsl
cld
clc
ret
xchg
add
test
or
cli
in
gs
xorl
pushf
pop
xor
mov
sti
pop
xor
dec
mov
dec
fdivrl
out
cmpsl
mov
lret
mov
fcmovu
call
test
push
pop
cmp
adc
xor
add
ror
mov
dec
sti
cld
cmp
test
xchg
in
rclb
sub
pop
xchg
insb
cmp
or
mov
dec
sub
lods
sahf
xchg
inc
fmuls
and
cltd
xlat
gs
loop
fs
or
pop
movb
xchg
pop
dec
push
gs
cwtl
cmc
xchg
je
dec
lcall
sub
xchg
lahf
mov
and
sub
mov
dec
cs
cmp
inc
aam
nop
out
adc
or
jp
shlb
xchg
push
adc
repz
lcall
rcrb
dec
xchg
sub
or
mov
xlat
xlat
aas
pop
loopne
fildll
pop
nop
adc
xor
xor
xchg
out
pop
inc
andb
das
insl
xchg
les
and
ja
and
xchg
inc
es
mov
lods
dec
inc
andb
les
sbb
push
fwait
jbe
lahf
rcrb
sahf
mov
xor
mov
fmull
mov
sbb
jmp
fistpll
and
lods
adc
loope
lcall
mov
adc
inc
push
cmp
pusha
mov
in
nop
push
rorl
in
les
inc
jne
jecxz
stc
push
andl
or
mov
jb
sub
jp
js
mov
sbb
cmp
jne
cmpsb
inc
cmc
xor
test
xor
jb
mov
loopne
dec
jbe
push
cmpsb
lahf
andb
dec
push
repz
aam
ja
popf
and
jp
shll
xchg
mov
insb
and
xchg
mov
fimull
xor
ljmp
pop
xchg
xchg
adc
es
mov
xchg
adc
popf
ret
sub
popl
ds
xchg
lods
in
adc
pusha
push
or
cmp
jnp
add
cmc
mov
in
aas
in
push
roll
adc
lret
insb
mov
lret
push
sti
repnz
mov
mov
arpl
fdivs
sti
roll
inc
shlb
pop
push
test
movsl
jl
pop
sub
daa
fists
lret
inc
out
xor
movsb
stos
add
jne
adc
push
psubsw
and
call
cmp
sub
cmp
fistpll
cmpb
push
dec
cmp
js
pop
scas
xchg
dec
jmp
dec
popl
into
mov
or
pop
aaa
ret
ss
imul
loop
hlt
in
adc
call
and
enter
sub
addr16
fldenv
xchg
mov
or
push
xor
shlb
push
rcll
gs
pop
icebp
xchg
cwtl
outsl
dec
xor
xlat
lahf
dec
jp
cltd
and
add
push
mov
xchg
pushf
stos
pop
push
mov
and
dec
cmp
and
adc
adc
mov
xchg
cltd
jnp
cmp
bound
lret
ds
xor
xchg
loopne
or
insb
in
pop
mov
sarb
or
add
push
jl
mov
repnz
roll
cmpsb
mov
rdpmc
xchg
hlt
lods
add
or
or
dec
shll
and
or
lret
pushw
push
mov
add
cmp
push
push
mov
xchg
xchg
dec
loopne
mov
inc
ss
adc
add
pop
inc
dec
das
xchg
adc
sub
adc
xor
std
orb
stos
pop
dec
flds
loopne
fwait
pop
add
lahf
push
and
test
leave
jle
pop
test
mov
gs
mov
cwtl
sarb
addr16
inc
call
outsb
subb
mov
mov
icebp
mov
aad
shrl
loope
test
mov
mov
and
mov
and
imul
push
xor
fisttps
inc
pop
mov
sbbl
out
dec
insb
aas
pop
fiadds
out
add
mov
addb
jnp
ret
dec
dec
aam
iret
sti
lahf
jae
insb
bound
cmp
js
mov
jns
mov
ret
popf
popf
xor
add
jno
cmpsl
lret
incl
outsl
cmp
mov
xor
and
fiaddl
cmp
sarl
in
inc
push
sbb
push
jns
idivb
fdivl
sbb
jmp
pop
pop
aaa
imul
mov
inc
bound
sahf
into
push
adc
shlb
mov
cmovl
cmp
pop
cmp
std
ret
mull
mov
push
mov
or
or
cmp
mov
xchg
movsl
push
mov
jae
arpl
pop
sbb
mov
jno
pop
lret
or
shrl
std
add
sti
sub
cmpsl
shlb
sbb
imul
ss
sub
imul
jmp
std
loope
enter
push
adc
fwait
mov
push
insb
mov
arpl
mov
jl
push
xor
cmp
rcll
ds
stc
sub
inc
sti
jo
int3
pushf
sbb
cmp
xor
repnz
and
pop
and
rorl
or
fstp
imul
inc
xchg
push
push
out
xchg
test
fwait
lahf
xor
imul
cwtl
pop
mov
or
shll
je
jae
pop
sbb
jecxz
int3
insb
dec
push
sub
sbb
mov
xor
mov
and
mov
push
pusha
cmp
adc
testb
pushf
cmp
pop
sbb
jp
or
mov
mov
aaa
push
pop
testl
shrl
pop
aam
xchg
inc
stos
jecxz
rcll
xchg
and
aaa
hlt
fst
mov
push
xchg
mov
cmp
popaw
xchg
call
xchg
and
sahf
mov
leave
test
lea
pop
call
mov
fsubrs
jl
fwait
sub
test
add
mov
icebp
sbb
fdivrl
roll
das
and
mov
xor
int
loop
cmp
mov
sti
pop
mov
inc
xor
lds
jo
sub
imul
addr16
into
inc
lret
leave
push
jl
dec
jmp
adc
mov
jo
sbb
iret
xor
adc
mov
int
xchg
xchg
lods
add
dec
xchg
arpl
sub
mov
push
mov
std
adc
std
daa
fidivl
pop
clc
fs
out
lret
lret
pop
lds
dec
sub
pop
movsb
mov
scas
push
mov
outsl
push
sbb
push
rorl
mov
add
sbb
xchg
outsl
mov
inc
popf
add
rcrl
outsl
adc
xchg
jbe
or
scas
mov
mov
push
mov
and
add
add
or
xchg
fidivrs
mov
pop
in
aad
jp
cmpsb
icebp
mov
mov
in
sbb
fiaddl
imul
mov
mov
xchg
adc
aam
xchg
into
icebp
push
and
cmc
jmp
loop
aaa
jbe
mov
lods
cmp
pop
lods
sub
cmpsb
addb
or
sub
cmp
inc
mov
cmc
push
pop
fistl
std
jnp
xchg
cmp
fcompp
mov
addr16
shrb
mov
inc
and
enter
and
cmpsb
iret
mov
fldenv
xchg
outsb
pop
lods
sbb
mov
push
push
push
xchg
pop
in
sub
cmp
or
xor
cmp
xchg
cmp
cltd
pop
sub
sahf
xor
add
mov
jp
sub
sbb
adc
mov
sbb
push
mov
pop
hlt
movsb
inc
xor
pop
sbb
xlat
test
scas
outsb
nop
imul
mov
ds
sbb
mov
mov
push
xchg
loope
mov
mov
jnp
call
or
xchg
dec
shrb
jmp
clc
lret
mov
dec
aas
pop
jg
inc
fwait
mov
sbb
cmp
movsl
aas
sbb
xchg
scas
stc
xchg
lcall
and
jge
call
stos
pop
sbb
mov
mov
cmp
or
xor
and
lcall
data16
sub
fcmovne
push
enter
cmp
outsb
adc
mov
fiadds
mov
inc
push
test
xchg
mov
xchg
mov
sbb
cmpsl
push
add
push
inc
imul
and
sbb
sbb
shl
pop
stc
xor
call
adc
adc
push
add
inc
jmp
xchg
sub
loop
and
inc
sub
push
outsl
pushf
cwtl
xchg
or
adc
pop
dec
xor
sbb
mov
add
xchg
out
cmp
daa
clc
cmp
xor
sbb
shrl
xchg
inc
jle
js
dec
cli
xlat
mov
mov
add
push
push
idiv
xchg
xchg
subb
popa
cmp
fcmovb
inc
sub
xchg
bnd
cmp
daa
insl
or
xorl
test
sub
xchg
in
jle
iret
add
insb
cmp
push
inc
repnz
push
sahf
mov
repnz
pop
pushf
mov
shr
in
clc
adc
xorb
fwait
mov
pop
sbb
and
iret
ret
ret
jge
div
mov
stos
in
adc
add
pop
test
lahf
loopne
sub
movsl
lret
dec
sub
in
dec
adc
and
xor
repnz
push
mov
sbb
cld
cmp
aad
adc
adc
pop
xchg
or
adc
cwtl
sub
mov
mov
sub
in
xchg
cs
pop
aad
stos
mov
and
dec
sti
test
mov
mov
jg
and
dec
or
lock
mov
adc
mov
push
es
add
inc
test
arpl
xchg
mov
enter
test
aad
inc
repz
dec
mov
jb
pop
clc
sbb
xlat
imul
pop
push
rclb
push
int3
xchg
mov
testb
ficompl
mov
out
xchg
pop
push
inc
shll
out
nop
cmovns
mov
dec
inc
mov
pushf
clc
outsl
sbb
lock
fcom
movsb
clc
in
adc
andl
dec
mov
jo
dec
cmp
lcall
imul
enter
das
mov
push
out
or
test
or
or
jge
stos
scas
push
sti
mov
inc
ds
sub
pop
add
mov
and
or
incl
lret
sbb
dec
cmp
push
das
mul
mov
adc
adc
push
and
adc
and
jl
sbb
mov
inc
adc
xchg
dec
cmpl
inc
sbb
outsl
pop
dec
mov
out
jb
cli
mov
leave
insl
inc
in
sub
push
cli
popw
mov
mov
dec
aam
cmp
mov
xchg
mov
in
mov
adc
fldt
aas
push
lret
ja
mov
or
push
pop
loopne
inc
imul
xchg
adc
mov
jecxz
add
fcom
xchg
shrb
in
cmp
xor
insl
xor
movsl
inc
stc
in
enter
inc
push
stc
adcb
clc
xor
clc
jbe
sbb
xchg
pop
push
cltd
cmpsb
stc
mov
add
mov
xchg
mov
pusha
inc
inc
adc
jno
pop
jns
sarb
xchg
stos
mov
push
push
mov
gs
cmp
loop
mov
icebp
cmpsb
push
xchg
add
ss
jbe
nop
xor
in
adc
movsl
movsl
test
sub
dec
jno
test
mov
mov
and
pop
out
and
add
pop
out
add
mov
cmpsl
cmpsl
loopne
jbe
bound
repnz
lahf
mov
sub
xchg
cwtl
add
fs
ds
in
xchg
fs
das
nop
mov
sbb
cmpb
out
mov
or
lods
repz
sub
xor
loope
ja
pop
jg
dec
es
in
in
out
shl
or
inc
js
das
dec
fs
xor
ljmp
int3
push
inc
push
or
add
cmc
mov
dec
push
stos
mov
lret
pusha
iret
mov
out
popa
xor
das
mov
mov
inc
lcall
inc
int
push
fldcw
and
in
roll
push
pop
dec
cwtl
or
daa
js
jl
es
pushf
xchg
mov
mov
sbb
negb
sub
loopne
add
xlat
aaa
xchg
ret
jb
enter
cld
lods
fs
jmp
xchg
filds
ja
fistl
fistpl
jo
fwait
push
xchg
sbb
pop
hlt
imul
shl
icebp
in
in
mov
cmp
adc
mov
or
rclb
cwtl
mov
mov
out
loopne
push
in
ret
dec
clc
bound
sub
xor
jae
cmovs
cmp
push
push
pop
and
pop
dec
outsl
aad
pusha
icebp
and
pop
stc
xchg
mov
rclb
jle
loopne
out
popf
addr16
gs
inc
int
loopne
jle
adc
pcmpgtd
add
pop
rorb
mov
adc
inc
movsb
shlb
sub
cmp
mov
mov
cmp
aas
mov
and
cmpsb
test
jb
pusha
sub
inc
inc
inc
in
adc
stos
xchg
aad
fildl
push
xchg
insl
dec
adcb
xchg
xchg
jns
divl
cmp
popa
jmp
or
call
mov
and
mov
aam
push
pop
xchg
aas
aas
test
push
mov
arpl
adc
jo
adc
out
ret
inc
jmp
fistl
shll
jle
sbb
int3
adc
mov
add
ja
push
mov
out
in
lcall
hlt
pop
fwait
outsb
leave
add
in
fmulp
adc
mov
push
pop
add
and
mov
jo
loope
dec
dec
test
enter
adc
sbb
dec
push
dec
cmp
xlat
mov
sti
jg
and
jne
mov
das
ljmp
iret
jns
cmpl
aaa
aad
push
mov
aaa
pop
pop
dec
pop
subl
xchg
mov
mov
sti
repnz
inc
aaa
add
aas
imul
and
sub
and
inc
inc
icebp
scas
in
lret
mov
in
xlat
pop
mov
xchg
mov
dec
out
popa
or
dec
lret
bnd
jmp
dec
addl
out
xchg
cmpsb
loopne
ret
cmpsl
out
lret
jmp
adc
dec
add
cwtl
leave
xchg
jmp
dec
sbb
xchg
fisubrs
sbb
lds
js
xchg
sub
insb
inc
cwtl
jl
push
jo
jnp
ds
pop
lock
and
mov
inc
stos
pop
scas
test
aas
add
add
inc
fidivl
bound
sarb
pop
sbb
cmp
push
out
das
imul
push
add
ljmp
jne
adc
cs
jle
mov
cmp
imul
cmc
aaa
divl
jp
cmp
adc
movsb
ret
pop
push
out
mov
inc
mov
aas
sbbl
xor
mov
inc
iret
xchg
adc
in
add
add
in
dec
jnp
lret
mov
push
xchg
dec
lods
xor
shll
je
lods
or
sbb
and
inc
pop
pop
add
mov
xchg
jl
jg
jno
push
jb
fcompl
shlb
arpl
mov
movsb
mul
in
pop
add
mov
push
or
cmp
sbb
leave
pop
sbb
popf
mov
out
test
mov
adc
cmpsb
loope
push
and
xchg
xchg
out
push
jno
push
aaa
mov
push
push
js
sub
add
pop
xchg
cmpsb
daa
in
loope
push
pop
xor
dec
lods
and
fistpll
imul
sbb
mov
dec
xor
mov
scas
and
data16
xchg
dec
loop
mov
lahf
xor
out
xchg
or
mov
je
add
xor
cmp
jp
icebp
lods
shll
adc
iret
lds
jmp
pop
sahf
pop
and
loop
sahf
xchg
sub
push
mov
out
mov
jg
add
pusha
xor
inc
test
push
cltd
les
push
outsl
jns
mov
and
dec
xchg
cmp
cmp
shlb
cmp
xchg
adc
shll
mov
insl
xchg
adc
movsl
stc
lock
or
iret
cld
push
xchg
xchg
cmp
test
sub
sub
mov
les
bnd
mov
add
lahf
or
cmp
insl
push
imull
mov
cmp
jg
popf
test
or
jb
mov
shll
mov
pushf
cs
xor
push
mov
mov
shll
cld
mov
andl
int
clc
dec
push
pop
mov
lds
and
or
jmp
icebp
enter
in
mov
aaa
xlat
enter
mov
jbe,pn
pop
sahf
cwtl
push
jno
fstpl
mov
jnp
loope
std
cmp
mulb
push
mov
icebp
fmull
fsubl
lahf
jecxz
bound
iret
push
stos
mov
mov
fists
fucom
cmp
sbb
add
adc
pop
outsl
push
xor
mov
dec
fsts
adcb
cmp
cmc
push
fldenv
mov
and
or
push
lahf
mov
sbb
xorb
js
dec
mov
fstps
xor
fs
mov
pop
movsl
rcr
dec
repz
mov
push
std
mov
loope
leave
mov
inc
mov
subl
das
lcall
sub
out
pushf
xchg
ret
in
sbb
fldenv
clc
js
sbb
loop
and
mov
mov
jne,pn
cmp
pop
je
fsubr
out
and
mov
pop
xor
jno
push
pop
push
leave
mov
xor
push
or
push
movsb
cmp
movsb
outsb
ret
scas
mov
movsb
lret
leave
aaa
mov
dec
inc
xor
mov
fs
aad
mov
xor
xchg
repnz
rolb
xchg
cld
rorl
adc
cmc
sub
ret
scas
push
mov
add
hlt
and
xor
sub
cmpsl
cmc
into
push
dec
xchg
outsl
ljmp
iret
pop
icebp
in
push
ret
pop
add
les
repz
xor
inc
addb
dec
icebp
lret
movsb
nop
lahf
pop
clc
sbb
push
pop
xor
mov
jp
rcrb
nop
adc
or
lods
ret
mov
fnstsw
mov
or
ss
lods
and
jno
mov
lods
scas
loopne
sbb
in
mov
mov
dec
mov
stos
adc
sbb
add
pop
nop
dec
lcall
inc
cs
cmc
les
sub
test
mov
inc
int
ds
mov
mov
in
xchg
mov
lods
pop
sbb
jmp
adc
jmp
mov
fidivs
mov
sbb
pop
mov
xchg
mov
inc
arpl
cld
inc
or
and
in
les
cmp
loop
add
ja
push
aas
jle
adc
mov
push
pop
ret
and
or
cmp
xor
jbe
adc
je
sub
sub
cmp
push
sub
ficoms
lock
jns
jl
jne
adc
mov
xchg
push
imul
xchg
sub
mov
fimuls
test
gs
enter
dec
gs
jae
call
sub
pop
loop
jno
pop
jnp
lcall
outsl
push
jae
popa
jp
ret
pop
xchg
js
std
nop
xor
xchg
or
inc
push
popf
push
mov
ljmp
repnz
aas
jecxz
cmpb
pop
test
shrl
cltd
ror
addr16
insl
subl
or
inc
in
mov
stc
lds
sbb
and
sahf
xchg
sub
ja
dec
and
jno
popa
xchg
nop
mov
imul
in
divb
ds
xlat
nop
mov
minps
jl
cli
mov
dec
sti
outsl
scas
push
mov
mov
incb
lock
push
mov
ljmp
or
lret
mov
or
sbb
sub
sarb
dec
mov
sarl
sub
std
xchg
imul
jae
cmp
inc
jbe
addb
lods
rclb
iret
cli
jp
out
fcomp
leave
xor
dec
and
push
cmc
je
out
and
test
lret
or
iret
push
out
sbb
loop
inc
or
push
xchg
lret
sub
adc
enter
push
out
and
xchg
out
stos
adc
ds
add
stos
and
stos
push
int3
fnstcw
iret
js
mov
mov
ret
xchg
into
jbe
fistpll
insb
sbb
mov
pop
out
cmp
into
mov
in
dec
and
push
inc
bound
rcll
xor
test
mov
inc
and
mov
mov
sub
inc
fcompl
test
rcll
sub
push
pop
ret
outsl
sahf
lods
xlat
dec
cmp
pop
mov
or
jg
push
or
sti
sbb
and
in
lods
and
pop
arpl
in
or
sbb
cmpb
inc
setp
jmp
sbb
mov
es
in
and
movsl
and
push
jnp
sbb
pop
and
jmp
je
lret
jb
in
adc
pop
adc
fdivr
cmc
sub
test
push
inc
inc
lret
stos
lods
mov
jnp
sbb
fldenv
pop
out
inc
jo
dec
push
lods
loop
sbb
shrb
mov
insb
pop
inc
jnp
stc
jae
jge
push
push
stc
pop
insl
ja
lret
xchg
fcmovne
jge
lret
dec
xor
push
and
sbb
inc
rclb
cmp
add
fists
lds
hlt
pop
pop
int
dec
or
rcl
cmpl
movsb
mov
mov
xor
xchg
daa
stc
arpl
pop
ljmp
sbb
jl
xlat
adc
fnstenv
cltd
pusha
inc
add
out
dec
xchg
stc
hlt
cmp
dec
jge
out
xchg
lods
push
xchg
push
push
shrl
dec
xor
insb
subl
pop
jae,pn
in
ljmp
add
xor
mov
pop
fimuls
ret
repz
mov
iret
push
mov
ret
std
dec
inc
insb
out
mov
mov
jno
sub
pop
ljmp
fsubp
je
loopne
daa
lcall
push
add
jp
icebp
fisttps
insl
mov
and
hlt
and
xchg
dec
sub
adc
dec
orl
or
stos
bound
sbb
jge
ljmp
mov
jo
leave
dec
and
imull
ds
jbe
dec
jl
cmp
mov
dec
mov
pop
les
add
imul
mov
mov
xor
fucomi
jp
outsl
pushf
cli
xchg
or
push
adc
popa
or
lock
lods
sti
dec
jmp
inc
jae
and
jecxz
rcrb
cmpb
pop
imul
sti
mov
fnstenv
add
je
loop
jp
mov
jno
dec
inc
in
xchg
stos
frstor
jo
neg
mov
imul
sbb
inc
jb
fdiv
fmuls
outsb
hlt
pop
cmp
jnp
xor
into
jg
cmp
or
in
das
lret
rol
ds
pop
jnp
inc
xchg
icebp
pop
hlt
dec
pop
rcll
mov
aad
stos
xor
repz
outsb
jecxz
adc
add
sbb
es
jns
cmpsl
mov
pop
rorb
lds
or
xor
das
xor
daa
imul
sub
and
insl
push
in
ds
pushf
inc
dec
xor
insb
mov
mov
fstps
jbe
pop
lods
mov
mov
pop
jl
ret
pop
dec
test
ficoms
out
xor
xlat
loopne
push
or
pushf
cmc
movb
mov
pop
int3
xchg
dec
std
pusha
in
add
icebp
fildl
data16
es
fldl
and
icebp
shl
scas
push
push
fdiv
mov
xchg
push
cmp
or
and
ficomps
int3
int3
mov
mov
imul
inc
repnz
pop
dec
outsl
in
xchg
popf
scas
mov
mov
pop
mulb
cmp
lock
mov
or
xor
adc
movsl
mov
xlat
dec
int
add
test
xor
dec
test
cmp
bound
mov
mov
push
push
dec
push
jne
call
jns
daa
cmp
fisubl
sbbb
pop
addl
out
pop
mul
sub
cmpsb
xchg
cmpl
and
roll
fisubrl
outsl
jp
out
xor
sub
xchg
adc
adc
mov
mov
inc
pop
push
pusha
std
sbb
push
sahf
fcmovnu
add
jmp
xchg
enter
stc
ret
stos
inc
cmp
jo
ret
int
leave
or
mov
mov
fcmovnu
cmp
es
push
adc
pop
adc
cmp
dec
popf
call
add
es
push
cmp
ficoms
jo
push
cmc
lret
mov
pop
mov
xchg
fdivr
aaa
mov
psubsw
stc
pop
and
jl
fs
imulb
push
mov
cmp
inc
sbb
xor
je
dec
outsb
cmp
push
movsl
adc
into
test
sub
adc
aam
sbb
mov
push
hlt
fiaddl
inc
fs
jecxz
or
sbb
pop
jne,pn
or
cmc
mov
push
mov
stos
or
enter
push
test
pusha
and
mov
mov
cmp
dec
mov
das
std
lret
mov
sub
int
movl
add
movsl
pop
mov
xlat
mov
pop
in
popf
mov
mov
pop
cs
jo
mov
imull
push
ss
xor
call
outsb
dec
dec
test
mov
pop
in
dec
xor
insl
dec
les
cmp
dec
clc
cmc
inc
test
mov
push
xchg
test
dec
inc
cwtl
inc
adc
test
push
mov
dec
mov
sbb
lar
out
or
add
adc
jae
ficoms
in
imul
sbb
mov
mov
and
loope
mov
push
xchg
mov
dec
fwait
push
insb
addl
dec
mov
add
adc
xlat
popf
out
jmp
jbe
jg
out
bound
jle
aaa
outsb
and
jno
stos
imul
dec
mov
mov
lcall
fistpll
ret
call
jae
es
mov
pop
fwait
ret
jmp
nop
insl
jmp
pop
imul
mov
inc
and
clc
pop
aad
push
cmp
xor
je
out
lret
dec
mov
cwtl
sarb
jb
xor
jmp
sbb
or
mov
dec
mov
xor
scas
fwait
jns
or
lea
add
cwtl
sub
adc
mov
mov
xor
repnz
arpl
sub
adcb
ret
sub
or
and
out
lds
jne
lods
stos
mov
mov
sbbb
loop
mov
dec
xchg
push
inc
jne
or
dec
aad
dec
push
popa
das
stc
push
lret
pop
pushf
add
mov
insl
out
data16
out
lods
int3
push
dec
int
and
das
outsb
sub
pushf
cwtl
repz
xor
push
add
adcb
xor
and
push
dec
mov
jle
push
stos
push
xchg
cmp
test
test
fimuls
xor
push
std
les
jnp
in
mov
pop
movl
push
cmpsb
or
movsb
push
dec
outsb
jp
add
mov
push
sahf
fcmovb
mov
sbb
mov
or
inc
scas
lcall
jl
sti
push
repz
inc
add
in
fwait
int
out
sub
outsl
sarl
and
sbb
shlb
push
pushf
xchg
mov
pusha
aas
adc
dec
repnz
jle
ret
jp
insb
arpl
in
sbbb
inc
shlb
mov
mov
mov
adcl
adc
fidivl
push
sbb
daa
pushf
shll
jae
and
sti
jecxz
mov
pusha
jae
hlt
js
outsb
mov
mov
pop
mul
enter
add
scas
loop
nop
fcom
loopne
push
mov
outsb
push
inc
pop
std
or
ja
clc
negl
bound
cmp
jo
pop
inc
cmovg
xchg
pop
push
stos
pop
mov
mov
outsb
sbbb
sarl
add
sub
jmp
popa
push
push
test
mov
out
test
pop
mov
xorl
lret
aad
pop
sarb
pop
cmc
ds
imul
cs
add
mov
inc
rol
mov
jae
sbb
mov
xor
int
dec
cwtl
imul
xchg
mov
jno
mov
sub
mov
int
xchg
clc
sbb
dec
int3
jge
pop
inc
testb
pop
jnp
push
icebp
je
xor
mov
test
mov
mov
push
popa
push
jle
dec
repz
in
test
push
mov
pusha
fsts
add
dec
add
stos
jne
in
in
ror
out
xchg
and
pop
jns
push
lods
dec
sti
mov
sub
mov
pop
imul
mov
daa
ljmp
out
mov
mov
movl
es
adc
das
sub
lods
jbe
push
or
mov
dec
xchg
push
mov
add
dec
mov
mov
mov
inc
sub
dec
xchg
into
sbb
mov
push
push
mov
jp
sbb
mov
fdivs
push
test
divb
movl
movsl
scas
sub
outsl
push
leave
testb
loope
adc
lret
rolb
and
cwtl
mov
insb
sub
testl
ss
cmp
ret
sub
or
lds
and
int3
fldt
push
pop
sub
lret
jmp
push
jo
pop
cmp
push
dec
cmp
mov
stos
js
pop
sbb
jp
xor
xchg
sbb
push
inc
add
xchg
lods
aas
popa
imul
sti
mov
push
pop
jg
or
inc
sahf
arpl
mov
dec
dec
xlat
in
clc
push
ret
aas
pop
fstpt
repz
dec
mov
mov
pop
js
cmp
or
jo
xchg
cltd
lcall
add
popf
fisttps
and
enter
pop
dec
inc
jecxz
pusha
adc
std
xlat
pop
in
outsl
cmp
jle
and
cmc
mov
mov
inc
andb
rcll
cmpl
pop
rcl
sarl
add
lcall
xchg
scas
or
pop
int
insl
add
mov
mov
stc
lret
std
sti
push
lret
test
call
pop
decl
jbe
or
sti
jl
icebp
pop
fmuls
push
sbb
push
xchg
in
inc
ret
dec
fsts
cmp
sarb
movsb
stos
pop
aaa
mov
and
adc
pop
fs
in
pop
leave
in
call
fiadds
scas
fidivl
mull
testl
xlat
sahf
push
adc
dec
sahf
pop
cmp
dec
mov
inc
inc
mov
add
mov
and
fimuls
lcall
shrb
mov
fwait
push
stc
in
push
int3
int3
sub
pop
fdivs
aaa
jmp
xchg
dec
mov
das
push
mov
mov
ljmp
rolb
push
nop
sub
shl
bound
pop
jns
aad
add
pop
and
test
enter
xlat
insl
mov
fwait
xor
pop
mov
sbb
jle
push
je
sub
lods
shlb
mov
add
xchg
out
adc
daa
and
xchg
nop
fcoml
rcl
sub
jge
jns
sub
sub
mov
outsb
into
inc
in
jecxz
cmp
inc
push
aad
push
repnz
and
popf
stos
or
in
fs
outsl
mov
cmp
fsub
pushf
jns
sbb
cltd
cmp
pusha
and
add
dec
sub
pusha
cmp
jmp
pop
jns
out
and
int3
das
enter
xchg
push
adc
cmpl
sub
cmpb
ds
shl
mov
sbb
xchg
jle
fildl
push
sarb
pop
adc
dec
mov
stos
ror
jmp
dec
dec
test
mov
mov
outsl
stos
insb
in
nop
shlb
xor
and
int3
push
xor
push
es
jnp
notb
adc
js
or
dec
mov
not
setb
sbb
push
call
sbb
fwait
sbb
js
fcomps
adc
sbb
pop
sbb
push
shrl
jmp
xor
popf
out
data16
lahf
pop
outsl
xchg
cs
lea
lock
shrb
xor
sub
xor
sub
cli
jno
mov
pop
ss
pop
add
sub
mov
pop
mov
jnp
mov
jl
or
enter
xchg
or
lahf
inc
xchg
repz
cmpsl
iret
fbld
negb
aad
ret
int
loope
lds
cld
loop
jne
fcomps
shl
sbb
iret
push
jecxz
add
jecxz
icebp
jne
jne
lret
mov
push
popf
dec
add
jnp
leave
ds
add
lods
jno
dec
daa
push
test
sub
lahf
xor
dec
in
aam
jnp
or
mov
add
fs
push
call
ficoms
add
int3
sbb
loop
fwait
adc
ret
fwait
push
xor
aas
xor
daa
iret
fildll
aam
aad
and
xchg
xchg
sub
xor
xor
lock
orl
add
sbb
sbb
addps
popf
mov
dec
das
imul
incb
jle
adc
inc
cmc
add
shl
mov
popa
in
pop
push
movsl
add
movsb
and
ret
push
outsl
ds
std
adc
bound
sbb
mov
adc
ret
jg
cmp
test
mov
fs
jnp
mov
aas
mov
mov
xor
loop
sbb
es
ret
and
xchg
add
add
jge
push
xor
push
mov
cmpsl
pop
dec
jg
or
mov
pushf
pop
sub
cmp
mov
sarb
pop
dec
inc
mov
cmp
mov
pop
push
adc
movsb
aad
test
mov
sti
cmp
out
or
mull
aad
sbb
jle
jno
addr16
fwait
mov
stos
sub
maskmovq
notl
pusha
cwtl
jo
rcrb
stc
pop
scas
jno
fcomps
mov
int3
and
cmp
pop
fstpl
jl,pt
imul
mov
push
out
lods
or
out
jno
call
push
lock
hlt
push
sti
inc
pop
inc
sbb
push
and
mov
or
mov
pop
ss
imul
insl
fidivrl
cmp
xor
add
mov
subl
fstl
sbb
aam
sbb
xchg
inc
adc
call
mov
pop
push
out
or
dec
xor
adc
inc
movsl
pop
add
xor
iret
sub
test
dec
fbld
mov
negb
cmp
into
push
aas
aas
sub
fsub
stos
mov
xchg
add
mov
mov
popf
lret
addr16
sti
inc
and
aad
aaa
add
push
test
repz
inc
push
or
or
dec
or
sub
xchg
push
jbe
imul
fwait
and
sub
cmp
inc
cmpb
mov
push
jle
lea
jl,pn
add
sbb
jle
jbe
mov
std
jns
dec
sti
int
jb
mov
push
fsubrs
adc
insl
cmc
jbe
je
fcmovu
movsl
xor
mov
mov
push
bound
lds
cmp
fnstsw
arpl
into
sub
stos
aas
and
and
dec
fwait
jg
rorb
push
push
mov
jp
insl
loope
mov
sub
pcmpeqb
sub
and
fistl
lods
jb
xor
daa
xchg
fiaddl
mov
out
iret
cmpsl
es
inc
and
repz
xor
data16
mov
cmpsl
dec
sub
xchg
push
out
pop
test
rclb
mov
stc
fs
out
movsl
mov
mov
ljmp
in
lods
movsl
cmc
sub
mull
push
mov
enter
push
adcb
rclb
pop
xor
push
mov
popa
and
mov
xor
rcl
add
mov
jp
into
mov
scas
pop
sbb
ret
adc
daa
mov
jbe
fcomip
mov
xor
stos
pushf
mov
mov
mov
scas
xor
mov
stos
movsl
push
notl
sub
mov
cmove
and
mov
dec
jle
fucomi
inc
lods
aam
sbb
pop
push
xchg
gs
pop
push
out
or
or
add
mov
nop
iret
xchg
dec
and
jae
xor
add
ljmp
mov
mov
cmpl
jo
int3
fstpt
negl
scas
dec
fs
stc
pop
push
shrl
movsl
or
mov
lret
das
inc
mov
shrb
mov
repz
xchg
sbb
sarl
dec
rcl
mov
data16
arpl
cmpsb
add
rorl
and
test
mov
push
pusha
iret
imul
xchg
sub
mov
push
sbb
jl
fwait
movsb
sub
es
shrb
int3
in
add
repz
push
movsb
fadds
mov
jp,pt
cmp
pop
mov
dec
shl
pop
push
std
fadd
ja
xor
push
push
inc
imul
data16
push
mov
xor
mov
sub
cmp
popf
pop
xchg
nop
cmpsb
fcomi
push
xor
push
mov
dec
es
mov
dec
sahf
or
dec
movsl
psrad
scas
test
mov
lcall
rclb
repnz
aam
sub
jb
jo
mov
add
addr16
insl
sub
lods
lods
fildll
push
rol
repnz
sbb
mov
loopne
push
mov
popa
mov
lret
cli
test
int3
mov
cltd
sub
das
sahf
lcall
fidivs
push
aam
pop
lret
lods
insl
or
cmp
xchg
or
enter
fs
cltd
stos
outsl
xchg
push
jae
xor
fcompl
mov
lods
jns
jg
inc
dec
mov
inc
adc
sbb
out
pop
push
imul
dec
inc
cs
xlat
ds
hlt
push
ja
clc
mov
in
push
xchg
add
jno
xor
adc
xor
ficoms
rorb
pop
jne
fcoms
cltd
pop
jno
rorl
inc
jbe
movsl
fsts
loopne
jmp
pop
xchg
add
fcoml
mov
mov
pop
out
dec
adc
aaa
sahf
repz
fidivrs
out
pop
movsl
out
sbb
push
test
scas
inc
jmp
sbb
and
daa
lods
mov
xchg
mov
data16
in
test
subb
data16
mov
clc
sbbb
pop
push
aaa
pop
int
loop
inc
jo
clc
daa
cs
and
add
addl
pop
xlat
out
fistpll
xor
lds
sarl
adc
add
into
insb
push
ja
lods
cmp
and
rcrl
sbb
mov
push
ja
add
dec
push
orl
mov
lea
jp
mov
scas
outsb
jno
or
mov
sbb
fiadds
aad
fs
adc
pushf
push
cli
rcrl
mov
inc
mov
cmpsl
faddp
cwtl
pop
jae
test
fisubs
sub
cmpsb
dec
push
add
and
mov
movsb
xchg
lret
test
ds
dec
int
stos
mov
mov
mov
outsb
lods
enter
cwtl
movsb
and
mov
adc
in
lret
popl
jb
dec
mov
xor
ja
dec
cwtl
push
mov
or
into
fmuls
xlat
push
inc
inc
sbb
mov
loopne
jae
jl
popf
dec
mov
add
les
jo
filds
test
ss
pop
stc
lret
cmp
add
pop
pop
sub
ljmp
fildl
xchg
mov
lahf
arpl
shlb
add
dec
test
cld
sbb
jns
push
popl
loop
sbb
cmpsl
mov
nop
and
sub
push
and
jb
push
out
xchg
cmp
or
gs
iret
shl
insl
js
nop
int
mov
fstpl
or
and
mov
dec
ret
push
in
xor
out
decb
int
xor
pop
sbb
fimull
add
jge
gs
lcall
fldl
dec
lods
call
inc
mov
dec
xchg
js
fists
mov
sahf
lods
sti
mov
pop
fsubs
jl
cltd
outsl
inc
pop
pop
mov
push
push
or
enter
std
inc
leave
inc
icebp
and
mov
es
popa
sub
adc
push
xor
jp
or
popa
data16
dec
push
xor
sbb
cld
out
and
sub
mov
in
or
in
sbb
jbe
sbb
push
mov
mov
xchg
jmp
cwtl
aas
hlt
sub
pop
test
dec
leave
out
sbb
push
in
daa
jmp
fadds
jb
pop
inc
or
stc
xchg
insl
jnp
int3
hlt
push
xorl
or
ds
mov
scas
dec
mov
adc
cmc
xchg
icebp
pop
sbb
lcall
test
mov
pop
mov
les
pop
scas
and
lret
xor
adc
dec
and
insl
call
repnz
inc
xchg
push
popa
mov
mov
das
scas
sbb
and
in
mov
xchg
and
push
sub
jb
cmp
jnp
jns
std
out
dec
push
inc
aam
fists
inc
call
stos
adc
adcb
inc
jle
outsb
push
push
xor
dec
pop
jp
mov
inc
pop
scas
jecxz
aad
into
cmpsl
pop
aad
fldenv
xor
sub
jl
in
sbb
jo
pop
test
out
ja
cmp
jae
cmpb
je
repnz
das
inc
dec
dec
xchg
xlat
lea
insb
stc
insl
scas
pusha
enter
icebp
push
xchg
sub
daa
sub
mov
in
mov
sbb
dec
aam
loope
adc
imul
gs
idiv
mov
lods
lods
inc
mulb
pushf
xor
iret
addl
fstl
mov
jno
xchg
and
cld
in
push
cs
cmp
jmp
jns
cmp
shl
xchg
mov
popf
in
pop
outsl
out
call
xor
lcall
roll
mov
out
and
inc
cmp
mov
mov
mov
mov
push
or
jno
arpl
das
mov
mov
sub
iret
inc
fistl
clc
ja
dec
pusha
sbb
push
mov
mov
pop
inc
dec
sbb
neg
psrad
pushf
aas
mov
xor
cmp
dec
cmp
add
lret
loopne
pop
push
aam
cmp
ss
repz
test
jns
dec
and
fs
pop
or
push
jecxz
pop
leave
adc
add
cmp
jmp
add
dec
stos
pusha
hlt
std
push
adc
jae
cmpl
xchg
iret
fstps
inc
sub
fimuls
ljmp
add
xor
sbb
sbb
leave
xor
iret
cld
pop
dec
cltd
mov
aam
cmp
jne
testb
movsb
les
sub
push
in
aad
push
jp
aam
pop
test
or
mov
iret
jg
adc
jmp
mov
iret
sbb
push
pop
add
cmp
out
xbegin
pop
aaa
jle
jae
xchg
insb
dec
pop
fwait
xlat
xor
mov
cmc
pop
and
data16
cmpsl
pop
add
xchg
dec
js
jmp
movsl
gs
data16
adc
push
and
adc
vmovd
mov
and
pop
sbb
inc
xchg
sbbb
int3
cmp
es
adc
bnd
mov
cltd
mov
or
xor
dec
loop
cltd
fs
test
stos
and
hlt
add
aas
imul
scas
in
ret
jno
adc
inc
gs
in
mov
fnsave
pop
cmp
and
push
push
dec
lods
mov
adc
faddl
xchg
mov
add
cmpsl
les
jbe
and
lods
test
pop
lcall
ljmp
sub
addr16
pop
pop
imul
lea
subl
lds
es
dec
and
push
das
pushf
adc
pop
test
inc
cs
ret
inc
inc
xchg
xchg
jg
mov
scas
rcll
push
mov
cmc
orb
jp
addr16
loopne
mov
dec
cli
fadd
jae
xchg
push
adc
mov
test
leave
push
cmp
push
mov
lahf
lds
or
repnz
push
mov
out
aas
xor
push
sbb
rorb
xor
push
aaa
cmp
xchg
pop
dec
xchg
push
ljmp
jb
fadds
aas
and
imul
fists
jecxz
dec
in
aas
sub
outsb
push
out
insb
int3
sbb
loopne
mov
enter
mov
sti
mov
mov
movsl
stos
pop
cmpb
mov
imul
add
jnp
push
xor
loope
notl
mov
dec
dec
popf
and
xchg
jns
push
fcmove
aaa
or
xchg
jno
mov
insb
aaa
mov
rorb
pop
mov
xor
fadd
push
bound
dec
fldl
push
lock
mov
cmc
sub
dec
xor
es
popa
and
jns
mov
dec
movsb
mov
cmpsl
sub
test
scas
movl
in
add
cmp
scas
nop
lods
dec
sbb
mov
outsl
inc
pop
lods
fmul
dec
aaa
add
or
sbb
and
fnstenv
and
ffree
into
and
xor
fisubrs
cmp
sbb
jns
mov
rcrb
mov
add
test
xchg
add
push
repz
mov
dec
mov
mov
adc
dec
mov
jmp
out
movsl
mov
pop
pop
and
in
nop
repz
cmp
mov
mov
icebp
bound
cmp
add
xchg
jo
dec
dec
test
cwtl
jae
mov
xor
jno
dec
shrl
and
das
xchg
add
iret
loopne
dec
add
out
cltd
clc
cwtl
push
cmp
rcrl
pop
fistpl
adc
les
sbb
cmp
das
sub
js
xor
xor
or
int3
lea
dec
pop
insb
mov
sbb
aam
pop
and
jno
call
negl
sub
lea
cmc
test
cmp
ret
rcrb
clc
push
xor
cli
in
fmull
fucom
ret
sbb
rcll
pop
ss
and
in
jne
popf
rclb
dec
es
lock
fisubl
inc
pop
adc
sbbl
rcrl
add
push
daa
andb
cs
int3
fdivp
das
xchg
inc
push
dec
popa
mov
cmc
sahf
xchg
pop
adc
jp
aam
inc
es
call
jp
lock
pop
push
or
out
mov
xchg
ja
jp
in
mov
inc
xor
adc
lret
outsl
xchg
fsubl
mov
loop
sub
ret
enter
cmpsl
pop
jo
popl
aas
pop
lock
pop
pop
lods
push
imul
and
scas
js
sub
es
lret
mov
add
mov
lret
cmp
mov
jae
inc
push
test
and
and
enter
pushf
lret
push
xor
sub
xor
xlat
mov
xchg
push
mov
xor
cmp
sub
xchg
andb
jo
fcompl
add
cmpsb
fistps
out
sbb
push
pusha
dec
in
mov
cli
mov
mov
adc
inc
sbbl
bound
pop
cli
push
or
ds
movsb
xor
pop
push
out
or
adc
stc
inc
adc
icebp
add
in
or
jb
mov
stos
adc
imul
jne
sub
loop
sub
icebp
fs
std
gs
mov
push
ret
xchg
fs
mov
push
push
shr
stc
test
dec
or
cmpsl
loop
hlt
xor
cli
mov
inc
out
jmp
rcr
iret
cmp
xor
stc
not
ss
dec
call
loop
test
cmovs
jecxz
mov
frstor
aaa
inc
pop
rcll
shll
dec
jno
dec
ret
scas
test
mov
inc
fsubs
sbb
sbb
lea
dec
in
add
in
clc
into
jo
mov
jl
pop
push
into
lea
test
mov
xor
in
jns
mov
js
lahf
jnp
gs
gs
jl
mov
sahf
shrb
insb
dec
ds
pop
inc
xor
cld
lea
and
lods
jp
jg
iret
jge
outsb
adc
cwtl
lcall
addl
xchg
lcall
stc
mov
adc
in
lret
add
adc
subb
pop
sti
sub
cltd
sub
in
and
test
mov
ds
or
cmpsb
push
push
jg
mov
mov
pop
pop
pop
jbe
adc
cmp
adc
jns
push
cmp
pop
stos
dec
mov
pop
add
mov
leave
push
test
xlat
cmc
data16
clc
jb
lods
jae
pop
push
stc
loopne
pop
cmp
leave
cmp
jb
les
mov
xor
jns
ret
jb
in
test
cli
rol
or
aam
jb
push
popa
push
sbb
xchg
mov
iret
lahf
jno
push
hlt
xchg
pop
xchg
mov
cmp
les
mov
cmc
and
or
xchg
and
adc
imul
in
push
lods
pusha
cli
test
jp
fldenv
cmpsl
ret
mov
jbe
sbb
cmp
sub
jl
pop
pop
mov
decl
xor
loopne
push
sbb
mov
aad
xchg
cmp
or
subb
cmpsb
mov
test
sub
cmp
jl
adc
or
jle
jb
scas
sbbb
rorl
push
test
int
ss
test
xchg
mov
xchg
push
mov
dec
mov
mov
lods
cmp
xlat
xor
xor
movsb
pop
data16
ja
jne
jmp
push
mov
mov
pop
pop
inc
out
movsb
js
push
movsb
cmpsl
mov
int
xor
cmp
jl
fwait
test
iret
sub
rcr
cmp
push
call
out
repz
jae
nop
ja
icebp
add
aad
cwtl
or
subl
xor
sbb
mov
mov
in
push
adc
push
loopne
test
call
inc
mov
mov
int3
lret
sub
push
call
push
mov
mov
mov
jmp
mov
sti
stos
xlat
mov
scas
lock
add
or
aas
jbe
add
jne
fnstenv
jmp
add
adc
inc
xchg
jge
dec
inc
mul
div
mov
jmp
iret
lret
out
jno
mov
xchg
mov
pusha
pop
push
ja
mov
push
pusha
leave
stc
loopne
sub
xchg
test
jmp
sub
lods
sbb
sbb
sub
sbb
mov
daa
adc
inc
xor
out
imull
arpl
mov
add
mov
xchg
push
cmp
repz
xor
repz
enter
jg
imul
imul
add
jl
lds
mov
mov
push
jb
in
mov
dec
sub
fsts
xor
mov
mov
cwtl
jb
fucomi
movsb
dec
xorl
xor
adc
jae
mov
cmc
ja
adc
inc
fadds
into
dec
test
jge
push
push
ds
mov
push
cs
jl
pop
ret
loop
je
testb
add
in
xor
out
xchg
fcompl
js
shll
mov
sbb
movsl
out
stc
ds
test
xchg
daa
fs
inc
out
repz
push
fisttpll
incb
cmp
mov
subb
cmp
or
inc
call
mov
xor
jo
pusha
test
mov
or
jg
sub
aam
mov
push
jbe
mov
pop
test
dec
call
pop
sub
jl
jo
pop
xchg
pusha
insb
ret
inc
scas
into
mov
jmp
and
pusha
push
jl
insl
mov
ljmp
push
out
add
add
repz
pop
stc
in
xchg
loop
mov
cltd
mov
incl
sub
xor
std
push
pop
cs
adc
and
mov
xchg
adc
push
cs
nop
scas
inc
pop
mov
add
xor
adc
mov
mov
std
adc
movsb
dec
xlat
ret
or
int3
test
arpl
or
add
and
xchg
jge
outsl
in
divl
sbb
je
mov
lods
xchg
push
std
adc
std
cmp
mov
arpl
jle
cltd
in
sub
lret
and
test
es
loop
int3
in
cli
fwait
and
inc
mov
jno
popa
subb
xchg
mov
repz
insb
daa
shlb
push
outsl
movsl
lcall
fcoms
cmp
cmp
lds
lods
in
out
push
push
push
rorb
cmpsb
std
cmp
loope
jns
stos
or
mov
dec
cwtl
mov
cmc
push
out
jle
jecxz
mov
sbb
das
loope
dec
imul
jns
cmpsl
or
push
mov
outsl
imul
xchg
jno
pop
add
cmp
lmsw
ljmp
clc
jg
loop
and
mov
mov
dec
gs
inc
aas
aam
iret
out
ficoml
push
push
testb
roll
pop
in
xor
pop
sub
inc
and
stc
pop
addl
jo
ss
xor
push
std
fdivrs
push
gs
out
dec
xchg
popa
data16
pop
into
popf
std
pop
dec
stos
cwtl
movsl
in
inc
sbb
cmp
sub
leave
xor
fwait
ja
fwait
mov
mov
xchg
or
ss
es
mov
je
stos
and
xchg
dec
movsb
xchg
mov
and
dec
fwait
inc
xor
lea
sbb
sarl
sbb
xor
sub
outsb
imul
push
or
std
push
push
pop
mov
jbe
cmpb
lds
inc
xchg
dec
cmp
aas
in
ror
cltd
sub
mov
pop
add
popf
mov
lods
jb,pn
mov
add
fwait
inc
jle
ljmp
mov
mov
cld
pusha
cmp
and
pusha
push
shlb
or
not
mov
inc
add
cli
sbbl
adc
and
cmc
xor
cmp
sbb
addr16
cmp
dec
jmp
in
negb
add
xchg
jg
adc
sub
jo
or
ja,pt
imul
add
cmc
inc
mov
push
push
mov
xchg
or
push
add
rorb
or
add
std
cwtl
ss
dec
sub
addb
jl
testb
cltd
outsb
insb
sbb
rorl
sbb
out
loop
jae
int3
push
shrb
mov
test
mov
stos
dec
das
pop
sbb
enter
xor
ret
mov
mov
sub
aad
orb
stos
ja
mov
gs
nop
mov
imull
icebp
inc
push
fstl
adc
sub
fdivs
cmp
mov
lcall
jns
and
jns
ret
loope
ljmp
jo
sbb
jl
dec
in
mov
jb
imul
scas
pop
ljmp
aad
inc
xor
gs
pusha
in
lods
adc
mov
jae
ss
jno
je
outsb
in
fwait
cs
nop
pop
insl
mov
inc
outsb
lcall
orb
movsb
lret
stos
rep
mov
mov
test
jno
outsb
mov
jmp
inc
push
xchg
shl
lock
xor
sub
add
mov
iret
inc
stos
or
push
cmpl
xchg
dec
nop
ss
cmc
mov
inc
inc
scas
and
or
pop
jne
nop
je
lods
mov
mov
mov
idiv
out
jl
sbb
mov
cmpsb
in
repz
mov
sub
loop
xchg
mov
push
push
adc
lds
test
fsts
stos
imul
sbb
and
popa
dec
popf
iret
xor
clc
in
je
mov
jnp
hlt
scas
mov
mov
inc
ficoms
lods
cmp
or
xor
std
xchg
sar
cli
nop
cmp
testl
pop
adc
xchg
pusha
mov
adc
shll
sti
cmp
and
mov
popa
test
sub
repz
outsl
and
pop
or
or
cmp
loopne
es
pop
mov
fs
jg
sti
sbb
pop
adc
pop
lds
mov
xor
mov
stos
call
ret
scas
out
push
lcall
mov
outsb
sbb
mov
loopne
add
or
and
fimull
sub
fwait
or
cld
add
mov
add
aam
das
insb
pushl
dec
cltd
pusha
clc
int
jno
inc
imul
xchg
mov
mov
jge
pop
in
stc
rolb
stos
lds
int
mov
js
sub
aam
sub
repnz
adc
or
and
ljmp
pop
xor
sarl
or
mov
pop
push
mov
repnz
aam
aaa
dec
push
mov
inc
popa
lret
sti
or
push
xchg
add
jle
inc
push
fldenv
fwait
popf
mov
inc
arpl
xor
or
mov
jecxz
xchg
decb
repz
int
pushw
daa
mov
sub
push
push
es
ds
and
adc
movsl
push
inc
mov
ret
bound
ss
popf
adc
mov
dec
push
add
dec
pop
pop
icebp
repz
xor
filds
or
adc
mov
mov
push
adc
pop
sti
cmc
dec
pop
lcall
lods
mov
mov
mov
or
arpl
ror
add
ja
pop
sub
repz
add
jecxz
inc
jg
fnstenv
je
pop
in
and
mov
loopne
cmp
push
xchg
and
int
push
je
xchg
dec
sahf
aad
mov
dec
xor
imul
sub
lds
jl
mov
filds
or
push
sarl
movsb
pop
sbbb
movsl
xor
and
shll
jnp
in
adc
lret
add
movsb
lret
sbb
ret
sti
fcoms
cwtl
adc
xchg
stos
pop
test
js
cmpsl
ret
jnp
into
aam
data16
roll
scas
not
adc
jnp
ja
pushf
or
lods
fdivr
sbb
xor
inc
xor
pop
cmpsb
dec
or
xchg
add
adcb
push
jbe
xchg
neg
loope
mov
and
jle
pop
dec
ret
int3
mov
test
ret
mov
sub
fs
mov
ljmp
insl
xchg
shlb
mov
cwtl
xchg
push
jbe
lock
test
out
or
mov
and
das
add
adcl
outsl
mov
mov
push
je
mull
mov
push
loope
popa
aas
jmp
xchg
test
mov
push
lret
sti
out
fdivl
mov
mov
mov
inc
push
dec
xlat
jg
aad
mov
lcall
ja
pop
push
cwtl
mov
mov
sbbl
jb
ret
stos
cwtl
cmpsb
fsubs
fidivs
push
out
xchg
sub
push
cli
sbb
fbld
loope
pushf
iret
sbb
rol
pop
xchg
sub
rcr
add
fs
lods
xor
mov
adc
in
pop
inc
movsb
sarb
std
arpl
in
adc
movl
lods
popf
sbb
mov
cmp
aaa
and
aaa
pop
mov
adc
and
inc
push
sub
xchg
int3
jno
ss
ret
adc
pop
fidivs
pop
add
fdivrl
inc
call
call
rcr
rcll
repnz
loope
xor
dec
sub
mov
sub
jno
inc
mov
adc
adc
mov
push
mov
inc
movsb
or
mov
dec
movsl
roll
test
std
icebp
mov
push
std
repnz
mov
dec
sarl
dec
xor
stos
call
or
or
imul
cmp
dec
lahf
dec
movsb
push
bound
inc
sbb
mov
jmp
jbe
dec
xor
push
adc
pushf
jge
and
sbb
dec
mov
aam
and
out
mov
sbb
rolb
adc
push
cltd
push
xchg
cmp
mov
cmc
cmpsl
cli
jb
sub
mov
dec
movsl
mov
js
and
std
test
sti
jae
aaa
or
push
shr
lock
movsb
xor
mov
outsl
out
mov
aas
add
or
pop
add
loopne
add
dec
xchg
push
cmpb
loope
xor
movsb
sbb
ret
add
pop
adc
push
mov
xor
sbb
shl
out
mov
sub
jge
es
pusha
movsl
sbb
or
dec
mov
dec
shr
arpl
sarl
jne
lahf
or
leave
xchg
sub
repnz
stos
mov
inc
push
fwait
cwtl
mov
mov
sub
inc
and
add
jecxz
fwait
es
ja
pop
ret
test
shl
jbe
xchg
dec
mov
repz
cltd
sub
push
jae
or
lret
xchg
clc
or
or
adcb
dec
nop
and
scas
dec
mov
xchg
ret
repz
mov
mov
js
push
inc
bound
pop
xor
arpl
mov
popa
adc
push
aam
or
xchg
or
shlb
arpl
nop
push
mov
and
cwtl
cmpsb
lock
outsb
add
or
xor
cmp
cmpsl
out
inc
mov
movsb
dec
mov
cmp
lods
and
loopne
jp
or
sbbb
mov
or
mov
xchg
push
fstp
adc
cwtl
sbb
cmpsb
pop
or
ljmp
pop
dec
inc
popa
scas
das
loopne
mov
popf
js
mov
xor
xor
xchg
mov
dec
adcl
xchg
lcall
inc
adc
push
test
ss
dec
mov
pop
andb
adc
mov
out
adc
cmpsl
xlat
add
add
and
repz
int
mov
cmpsl
jg
mov
cmp
mov
sbb
lahf
or
rolb
dec
mov
push
in
xchg
sub
jns
insl
sti
shr
shl
xor
mov
imul
cmp
xchg
xchg
ret
loop
xchg
outsb
mov
call
add
cmp
inc
aaa
outsl
add
into
mov
add
xlat
dec
inc
shl
in
enter
out
and
insl
adc
jb
fisubrl
push
dec
das
mov
sbb
insb
in
xor
aad
rclb
daa
push
iret
insb
or
pop
add
sub
jp
test
int
not
xchg
dec
xchg
xchg
inc
adcb
js
mov
lret
loopne
aam
in
push
mov
pushf
loopne
movsb
jge
push
mov
pmulhw
test
lcall
mov
lahf
sbb
pop
cmp
out
shlb
xor
inc
sbb
insl
push
xor
jbe
xor
inc
jae
es
jmp
insl
add
dec
daa
bound
jae
mov
xor
icebp
mov
aas
pushf
xor
xor
or
jo
inc
decl
inc
hlt
adc
fstps
and
out
imul
xchg
mov
mov
call
bound
es
push
lahf
fcompl
cmp
ds
add
sbb
lods
ret
lret
dec
lea
pop
cltd
dec
icebp
nop
insb
xchg
and
push
cmp
addl
sti
stc
and
or
adc
dec
or
sarb
push
stos
rol
je
sbb
aad
popf
mov
or
jl
imul
or
sub
jmp
mov
popa
fldcw
lock
or
xchg
add
add
rcl
jne
pop
bound
or
fnsave
clc
and
mov
cs
in
insl
out
cmp
addb
push
pop
mov
mov
push
out
movsb
pushf
or
or
in
ljmp
cmpsb
loope
data16
outsb
pop
mov
loope,pt
mov
test
fmull
rorl
fs
dec
out
iret
jle
and
out
aam
mov
aad
aad
xor
adc
outsb
add
sub
aad
cltd
je
enter
bound
mov
shr
rorb
nop
sbb
hlt
fcompl
xor
lgs
jb
xchg
or
outsl
mov
out
or
clc
das
idivb
add
sbb
mov
mov
push
dec
xchg
inc
scas
lds
js
lret
imul
cmp
outsb
and
mov
jbe
gs
sbb
jl
addl
adc
out
ds
cmp
and
repz
test
insb
lcall
mov
loopne
dec
mov
fcompl
cmp
dec
add
pop
pop
ljmp
xor
imul
push
xchg
outsb
lods
mov
pushf
cmp
mov
xchg
push
movsl
ret
hlt
inc
lds
xor
in
imul
and
lahf
mov
mov
jp
cmpsb
sub
mov
add
jg
adc
pop
hlt
mov
incb
pop
pop
icebp
sbb
les
daa
call
repz
sbb
inc
ja
cwtl
pop
cmp
loopne
push
cwtl
pop
iret
sbb
adc
cwtl
arpl
sbb
lea
push
mov
mov
enter
sbb
push
push
mov
pop
mov
shrb
lahf
inc
mov
imul
push
mov
movsl
insl
dec
icebp
dec
das
lret
add
jmp
cmp
stos
cli
lods
imul
push
sub
fsubrl
lock
pop
js
inc
mov
mov
fisubrs
ret
or
jl
cmp
out
jl
out
fidivrs
out
mov
cwtl
sub
add
stos
mov
pop
lcall
lret
decl
stc
mov
pop
enter
fdivp
cmpsb
mov
or
xchg
popa
cld
jecxz
adc
dec
mov
sbb
std
xchg
pop
sub
mov
outsb
andb
js
pusha
adc
xor
and
insb
sarl
stos
inc
jp
in
add
out
vpmuludq
out
pusha
movsl
adc
cmp
xor
pop
aam
out
popa
cs
enter
dec
jb
dec
push
repz
and
and
out
bound
xchg
mov
jmp
mov
mov
add
xor
int
sub
mov
lret
push
push
test
xlat
sbb
pop
sti
call
jbe
sub
scas
sub
cli
or
sbb
into
pop
ret
sbb
xchg
mov
in
inc
imul
add
das
insb
pushf
mov
ret
xchg
adc
mov
and
pop
xlat
in
adc
sub
and
mov
ret
xor
adc
xor
gs
adc
pop
xchg
mov
stos
sub
hlt
jno
mov
push
outsl
and
mov
addl
fildl
mov
add
addb
add
cmpsb
test
sbb
mov
call
mov
cli
sub
les
pop
pop
lret
lods
ds
stos
or
inc
jae
cmpsb
repz
xchg
dec
adc
mov
imul
in
daa
xor
pop
pop
xlat
and
enter
and
mov
stos
cmpsb
pusha
jp
movsl
icebp
jmp
fdivrl
arpl
loope
adc
imul
out
arpl
scas
xchg
cmp
sbb
dec
adc
lahf
sbb
jo
push
or
scas
inc
outsb
pushf
jmp
lds
ret
rcll
add
scas
mov
imul
dec
gs
and
sbb
ss
loopne
js
lret
das
ljmp
or
rolb
jb
daa
add
int3
cltd
loopne
jo
arpl
and
ljmp
icebp
mov
and
lahf
out
leave
inc
ljmp
adc
fists
mov
adcb
add
std
lods
cwtl
data16
xor
popa
sbb
jge
ljmp
push
cmpsb
xor
mov
jle
fsubrs
adc
add
pop
and
repz
xchg
cmpsb
fdiv
pop
mov
rorb
icebp
inc
mov
cmp
jno
or
mov
mov
mov
and
xor
pop
roll
dec
out
jmp
and
xlat
stc
xor
jg
and
jp
clc
sbb
dec
push
add
jne
mov
jmp
xor
fsubrl
cmp
out
inc
jg
or
mov
xchg
xor
push
fstpt
lods
fwait
push
add
jecxz
popa
into
hlt
je
cltd
xor
sbb
sbbl
orb
outsb
mov
and
jle
ljmp
add
or
fists
popl
out
pop
out
addr16
outsl
push
jnp
shl
jne
mov
std
jl
out
or
popa
enter
mov
pop
push
imul
push
pop
and
sahf
fcmovnb
and
mov
mov
ss
mov
mov
adc
sbbl
mov
ja
inc
xor
and
mov
pop
stos
mov
addr16
mov
andb
mov
in
xor
aam
clc
jecxz
adc
inc
js
cmp
inc
cli
fldenv
xchg
movsb
xchg
nop
jecxz
pop
mov
out
lret
and
outsb
jecxz
dec
push
push
mov
pop
inc
or
lea
imul
jns
repnz
insl
jb
jle
mov
push
and
dec
cs
jne
int3
in
xor
loopne
sarb
fldcw
mov
inc
fsubrl
aam
popf
mov
push
dec
jle
je
or
daa
xchg
cmp
mov
inc
daa
add
loopne
jle
mov
outsl
lock
outsb
sub
lods
sbb
stc
cmp
stos
dec
out
bound
xlat
sarl
stos
pop
inc
mov
insb
cmp
mov
stos
mov
nop
test
pop
sbb
jns
hlt
scas
dec
dec
idivb
scas
cmp
stos
popa
xlat
pop
cmpsb
push
pushf
cmp
icebp
inc
das
xchg
push
pop
cltd
movsl
sbb
into
xchg
fidivs
cmp
movsl
into
les
jp
push
stc
push
sub
shlb
mov
test
pop
cld
jecxz
pop
test
arpl
sbb
push
and
mov
xchg
les
das
push
mov
clc
mov
scas
addr16
xor
in
aas
adc
popf
sbb
idivl
cwtl
jb
dec
inc
jg
pop
sbb
cmc
push
stc
and
jnp
mov
pop
inc
repnz
int3
sbb
sub
mov
mov
inc
add
ja
cmp
das
test
xor
push
ret
lock
xchg
jb
mov
leave
pop
mov
icebp
cmpb
not
pop
imul
sbb
out
loopne
iret
sub
or
fimull
out
ret
xchg
lret
jmp
das
ficoms
aaa
in
xor
pop
sbb
imul
gs
dec
scas
cmc
popa
jl
lahf
pop
xchg
shl
mov
dec
mov
std
ret
mov
push
inc
xchg
js
xor
div
mov
mov
popa
cltd
movsl
stos
xchg
cmpsb
xchg
push
les
xchg
ljmp
cli
inc
rorl
std
xchg
leave
add
in
shll
adc
mov
bound
sbb
mov
pop
inc
hlt
inc
bnd
orl
dec
adc
cmc
xor
push
ret
fs
sub
inc
fidivs
pop
sbb
xchg
add
addr16
mov
std
fsubrs
adc
cltd
add
loopne
sbb
outsl
jge
and
xlat
jmp
pop
arpl
jns
fisttpll
shll
xor
insb
pop
adc
divb
push
inc
fwait
testb
fidivs
mov
stos
jge
loope
ds
aaa
mov
icebp
clts
mov
mov
enter
adc
inc
mov
cmpsl
iret
sub
xor
test
mov
push
stos
add
ret
or
inc
and
jo
cmp
push
stos
enter
andb
sbb
inc
leave
mov
es
add
aas
jl
stos
cmp
jb
jecxz
test
and
je
push
scas
mov
addr16
or
lret
mov
shll
xor
fsubrl
loope
mov
in
fsubl
ret
ret
mov
sub
das
push
add
das
jno
fnsave
inc
call
add
in
cmp
mov
in
ret
xor
xor
es
out
mov
xchg
fistps
sbb
out
jp
xchg
jae
test
aaa
fsubrl
cmp
sbb
lret
lahf
cs
cwtl
xchg
mull
outsl
arpl
int
movsl
inc
shrl
idivl
sub
mov
mov
inc
sub
sets
cmp
mov
mov
push
insb
bound
jge
adc
push
neg
pop
sbb
inc
xor
scas
mov
jne
xchg
inc
stos
mov
jne
les
and
repnz
jmp
test
sbbl
inc
mov
rcrl
adc
movsb
push
ljmp
or
pop
mov
xor
jae
cmp
xchg
sbb
pop
addr16
xchg
mov
into
faddl
adc
rcrb
ja
stos
addl
push
sti
pop
out
mov
ret
shlb
repz
imul
jg
xor
fs
mov
mov
adc
call
test
mov
jns
lret
sub
out
sahf
test
mov
jle
lcall
or
or
in
adc
sub
cmc
data16
mov
push
and
jno
pusha
adc
xchg
xor
out
loop
push
xchg
imul
adc
dec
orb
mov
outsl
mov
pop
sbb
sbbl
adc
mov
cli
gs
pusha
sbb
es
push
jle
xor
dec
es
call
in
push
cwtl
int3
rcll
mov
mov
out
shr
pop
insb
and
scas
cmpsl
xchg
cmp
pop
xor
rol
sbb
and
es
cmpsl
mov
rclb
dec
fadds
or
in
std
jecxz
mov
sbb
xchg
push
adc
iret
sub
add
lods
mov
push
lea
push
cmp
loopne
lcall
jns
imul
shl
mov
lret
addl
sub
mov
or
lret
xor
dec
std
add
inc
push
fs
jne
lcall
push
bound
adc
hlt
shll
push
pop
fildl
faddl
into
in
ficomps
cwtl
lods
mov
and
sbb
jmp
pop
cli
sub
into
sub
lret
insb
fldcw
and
lods
sbb
pop
jp
mov
incb
int3
popl
xchg
repnz
jmp
push
xor
pop
hlt
lds
jge
dec
addb
jge
cmp
xor
pop
sti
imul
in
scas
mov
push
mov
pushf
fidivs
jb
aas
aaa
xchg
aam
xlat
gs
cmp
sti
or
inc
test
jae
push
or
fsubrs
mov
das
testb
shlb
movsb
rclb
fwait
jb
jge
sbb
lods
dec
lock
bound
ljmp
movsb
cmp
cltd
pop
mov
and
out
xor
and
mov
dec
adc
dec
push
push
push
fs
inc
pop
popf
xchg
ret
shlb
mov
into
mov
push
dec
xchg
aam
push
std
and
scas
js
stos
out
mov
or
daa
xchg
mov
pop
cmpsl
outsb
les
addr16
jecxz
cltd
push
or
loop
mov
cld
scas
xor
push
dec
adc
add
or
cmc
lods
sub
cmpsl
adc
adc
outsb
cmp
sbb
cmp
outsl
jge
xor
out
addr16
push
out
iret
sbb
stos
pop
cmp
push
xchg
arpl
sbb
jmp
or
stos
shll
add
fiaddl
pop
dec
cld
pop
cs
insl
in
subl
push
add
negb
sahf
es
mov
sarb
adc
pop
dec
push
or
mov
test
inc
xchg
jmp
mov
test
stos
jne
mov
test
aam
arpl
fdivrs
sub
out
lret
dec
push
xor
push
xchg
xchg
ret
repz
dec
jmp
pop
pop
xor
js
mov
fidivrl
add
hlt
pusha
scas
sbb
jl
lret
sub
jle
scas
cmp
and
aam
aad
pusha
cmp
push
movsb
clc
mov
xor
shrl
cmpsl
ffree
and
dec
or
adc
mov
inc
loop
xchg
dec
sub
sbb
int
sub
cmp
mov
ret
sub
fsubp
shll
mov
adc
in
pusha
or
cmpsb
jae
fldenv
outsb
xchg
mov
mov
out
mov
mov
cmp
insb
push
jno
repz
inc
xchg
sbb
fsubrs
sahf
ret
adc
pop
popf
or
mov
inc
cmc
mov
call
mov
push
fwait
cmpsb
mov
dec
test
cmp
ret
nop
jno
xchg
push
sub
cmpsl
mov
mov
orb
push
shll
fcompl
les
xlat
or
jae
ss
std
or
ds
pop
jb
lods
shll
jle
out
mov
sbbl
fs
mov
xchg
mov
jb
frstor
cmp
inc
or
and
sbb
sbb
ds
mov
in
pop
adc
sub
adc
and
add
fs
testb
mov
push
and
sahf
adc
pop
pop
inc
insb
fdivrs
aam
mov
dec
hlt
shll
pop
movsl
pop
xchg
clc
jnp
dec
sub
lret
aad
jne
mov
les
sub
roll
lret
xchg
aaa
aam
sbb
test
std
cmpsl
outsb
ret
jns
mov
out
mov
xor
mov
cmc
cli
insb
fcompl
leave
lds
idivb
or
call
addr16
pop
leave
fs
loop
push
movb
stc
pop
int
pop
bound
xlat
jge
jmp
push
cld
push
adc
cmpsb
pushf
rolb
or
inc
push
popa
inc
faddl
mov
das
shlb
and
sub
jg
xchg
ljmp
mov
lahf
xchg
imul
enter
stos
xchg
xor
mov
popa
sub
xchg
dec
movsl
xlat
dec
cltd
imul
add
cltd
outsb
and
loopne
std
jb
les
imul
mov
push
jbe
and
dec
fsts
mov
es
mov
mov
mov
cwtl
lret
dec
insl
cs
enter
ja
sub
fisttpll
or
xor
jecxz
cwtl
lret
aam
push
and
mov
mov
ret
mov
xor
popa
leave
inc
mov
jns
add
js
push
clc
fwait
push
adcb
push
insl
xor
fildl
mov
adc
and
fsubs
xorb
test
dec
mov
xor
shll
mov
enter
jmp
add
pusha
je
xchg
mov
dec
pusha
jno
stc
repz
outsb
mov
adc
dec
pop
and
inc
lods
aas
lods
pop
fucom
mov
std
lahf
jbe
loopne
and
lret
xor
jbe
xlat
mov
movsl
pop
push
adc
or
mov
pop
mov
add
icebp
shrb
push
hlt
mov
jo
repz
xchg
xor
jmp
lret
test
push
test
rcll
fidivs
paddusw
lods
add
sbb
inc
mov
adcl
xor
cmpsl
adc
mov
add
imul
in
aam
dec
dec
adc
and
lock
jbe
inc
and
ss
scas
imul
and
adc
xor
fdivr
in
out
pop
mov
xchg
imul
imul
stc
fwait
and
jno
int
sbb
cmp
mov
mov
stos
les
out
jb
pop
sub
and
and
sub
dec
loope
xchg
lahf
push
daa
int
nop
push
pop
xor
imul
add
cmp
fcompl
mov
mov
push
inc
movsb
orl
mov
cs
add
sub
fisubl
or
pop
dec
jle
pop
xor
inc
movsl
xor
add
dec
int3
xlat
mov
pop
sbb
xchg
adc
imul
data16
inc
loop
push
sbb
fdivrp
out
inc
in
mov
addl
mov
and
push
mov
mov
jne
jl
repz
pusha
outsl
fiaddl
xor
mov
sub
adc
add
hlt
inc
frstor
xorb
or
mov
or
mov
dec
ror
mov
xor
test
xchg
mov
clc
add
mov
xor
out
inc
xchg
jns
fwait
out
dec
repz
mov
popf
push
inc
aaa
pop
mov
ljmp
xor
cmp
addl
ret
dec
sub
cmc
in
pop
lcall
sbb
pop
shlb
jmp
push
adc
mov
cs
xchg
and
ss
mov
or
xor
pop
inc
sub
ljmp
aaa
push
rorl
jb
sarl
mov
sbb
pop
pop
insl
pop
into
addr16
test
sti
lret
xor
les
repnz
or
hlt
mov
sub
pop
cli
inc
pop
sbb
dec
in
shl
mov
jl
rcrl
hlt
in
add
jecxz
ja
call
lahf
jae
leave
addr16
or
mov
test
fmuls
imul
mov
xor
pop
sbb
leave
dec
fidivs
shlb
inc
inc
mov
iret
dec
int
addl
pop
adc
js
into
aad
push
sub
in
pushf
jb
push
loop
xchg
adc
sbb
push
pushf
jbe
aas
rcr
loopne
or
mov
or
js
xor
out
xor
loopne
push
mov
jbe
xor
not
lcall
fucomip
adc
inc
cld
xor
jb
mov
or
repnz
stc
fidivl
pushf
push
sbb
dec
test
cmpsl
lods
jns
push
dec
dec
lret
test
sarb
push
aad
inc
or
rcrl
push
stc
mov
pop
cmp
pusha
push
inc
aaa
jmp
xchg
mov
addb
cmpb
and
aas
inc
push
subl
and
mov
inc
xchg
inc
xchg
jb
daa
mov
fldcw
into
test
push
pushf
sub
enter
sub
add
filds
push
sub
xchg
adc
out
arpl
mov
rcll
ljmp
add
cli
in
repnz
pop
pop
sahf
loop
sbb
jbe
pop
jg
mov
xor
rorb
push
dec
idivb
subb
orb
aam
mov
add
adc
add
arpl
jg
lods
ret
daa
test
or
sbb
mov
and
push
mov
xchg
xchg
fbstp
xchg
and
in
fsubrl
outsb
stos
sub
jmp
or
ja
mov
mov
int
pop
add
ds
and
adc
insl
jbe
nop
xchg
in
mov
sub
into
push
sar
imul
xchg
add
adc
adc
cmp
lret
sbb
fimull
jae
cmpsl
arpl
xor
cmp
inc
lahf
xor
or
xchg
mov
cmp
push
jnp
xor
loop
subl
dec
fidivl
fisubrs
mov
imul
out
in
mov
call
or
aam
shlb
pop
sub
lcall
sbb
sub
sub
jno
pop
dec
jne
cmp
sbb
ret
shrb
sbb
movsb
pop
fwait
out
cmp
cld
ret
in
ja
mov
sarb
ljmp
fisttps
fldenv
dec
xchg
mov
and
pop
cmp
ja
scas
pop
add
and
loope
out
flds
and
popf
push
aam
in
aas
movsb
shll
pop
sub
jle
lea
lods
add
int3
dec
icebp
bound
arpl
gs
gs
jmp
and
and
out
inc
mov
lock
push
ds
push
sub
test
negb
jecxz
in
jg
add
pop
mov
int
aam
adc
dec
cmp
dec
pusha
rorl
imulb
dec
sahf
pop
adc
ret
loope
xchg
sbb
js
xlat
sub
xchg
cmp
dec
jo
sbb
pop
mov
jne
add
sbb
leave
lds
scas
sbb
stc
cs
call
mov
ljmp
mov
jno
push
into
push
or
dec
inc
test
or
sub
clc
in
out
lahf
into
jnp
jno
sub
imul
rolb
cmpsb
inc
stc
mov
jg
mov
shlb
adc
lret
fists
pop
xorl
dec
mov
jno,pt
call
jns
lock
push
subl
mov
mov
dec
arpl
test
fists
lea
pop
les
cmp
in
dec
andb
lahf
fmulp
repz
adc
aam
pushf
sbbl
frstor
ja
mov
sbb
movsb
les
test
xchg
lds
mov
lahf
and
cmp
and
ret
jl
pop
cmp
and
sub
pop
pop
xchg
es
out
mov
dec
mov
sbb
scas
dec
mov
aas
rcr
nop
jae
cwtl
loop
mov
mov
out
mov
push
inc
add
pop
mov
cwtl
out
loop
gs
sub
mov
mov
addr16
adc
add
jns
lret
inc
lahf
movlps
pushf
sarl
testb
int3
lods
or
xor
icebp
flds
dec
pop
mov
pop
std
in
int3
outsb
sbb
add
scas
mov
lds
xor
xor
xor
push
mov
bound
and
jbe
cli
cmpsb
mov
insb
xchg
in
mov
mov
arpl
inc
mov
adc
cmpsl
dec
xor
mov
jns
sub
dec
sbb
jns,pt
xchg
fwait
cmp
xor
mov
cs
pop
dec
sbb
and
ds
jmp
inc
insl
push
sarl
mov
insb
dec
jne
mov
bnd
cmp
lods
adc
xor
aam
xlat
xor
sub
iret
out
sub
cmc
add
inc
jle
in
mov
and
les
mov
and
cmpsl
mov
stc
dec
and
sub
adc
mov
pop
mov
js
jne
pop
xchg
xorl
push
mov
pop
loope
fdivrl
xor
jae
xchg
sbb
cmp
jne
xchg
test
add
lods
in
xchg
rcl
rorl
xor
out
push
out
pop
in
jnp
pop
std
rorb
inc
add
fldcw
std
aaa
jae
pcmpgtd
fs
or
test
test
aam
mov
out
imul
xor
dec
movsl
sub
mov
jp
xchg
out
scas
call
test
out
sub
mov
out
or
sar
or
adc
aam
jecxz
add
hlt
and
es
dec
cltd
jbe
call
push
adc
cwtl
stos
daa
and
out
outsl
or
fmuls
inc
mov
pop
cmpsl
mov
es
or
mov
fs
pop
int3
push
push
sub
mov
pop
lahf
xchg
out
cmpsl
mov
stos
shl
cmp
mov
mov
inc
cmp
fmuls
sbb
or
dec
mov
dec
out
jae
mov
add
jmp
shll
push
adc
scas
xlat
jno
push
push
mov
rolw
add
shrb
popf
cwtl
jl
inc
mov
testb
pop
and
sbb
inc
jnp
int
test
test
add
and
movsl
push
push
mov
mov
cld
test
push
inc
arpl
fstl
scas
ljmp
push
rcr
cld
rcl
push
jecxz
cmp
cmp
shr
xchg
sub
subl
stc
aad
pop
pop
div
out
push
add
popf
bound
out
unpcklps
incb
iret
cli
adc
inc
daa
mov
out
jne
aas
sub
jno
clc
test
mov
icebp
dec
cmpsb
and
testl
das
lahf
sahf
call
or
int
cli
shr
lret
jnp
aam
inc
and
jb
jbe
xchg
ret
adc
les
shll
and
daa
jmp
nop
js
and
movl
sbb
inc
rorb
mov
cmp
fldl
mov
sbb
lret
repnz
js
mov
mov
fmull
aam
ss
shl
or
pop
call
mov
or
loopne
mov
outsb
and
dec
setne
lret
jg
testb
xlat
int
andl
stos
sub
test
mov
sbb
and
mov
das
fstps
add
les
loopne
iret
loope
outsb
or
and
add
push
lods
clc
data16
imul
pop
push
icebp
xor
mov
out
mov
mov
pop
jns
and
cmpb
nop
iret
xchg
mov
repz
ds
pop
push
xlat
inc
mov
cs
adc
sbb
in
sub
mov
sbb
lods
movsl
jmp
add
movsl
test
scas
lcall
enter
daa
xor
imul
arpl
mov
std
sahf
js
cmpl
sub
jae
in
and
les
orl
dec
imul
dec
jecxz
out
jno
scas
push
fdivrs
ss
and
insl
pop
enter
pusha
mov
lret
in
xchg
aad
xchg
popf
mov
insb
pop
sbb
cmp
add
out
inc
or
jle
xchg
pop
push
loopne
sub
stos
mull
loop
jns
mov
sub
fnstcw
fisttpl
or
add
hlt
cmp
insb
ds
icebp
jns
lret
dec
cmp
and
and
leave
push
adcl
repnz
int
ret
dec
add
jp
jno
test
aas
les
lcall
cmp
test
xor
pop
xchg
sbb
neg
push
fnsetpm(287
insb
push
push
push
push
cmp
jbe
xchg
hlt
aad
cmp
in
test
jne
outsl
sbbl
sub
push
test
loopne
pop
popa
and
in
pop
arpl
or
jae
fldenv
add
jg
sbb
pop
inc
out
stc
and
cmc
decb
jp
dec
add
mov
and
cmc
je
mov
fwait
in
movsl
pusha
cli
ficomps
cmp
out
sub
sub
sub
adc
ret
in
push
repz
push
insl
in
or
mov
pop
push
push
addr16
enter
imul
sub
test
xor
in
test
adc
dec
mov
jne
shll
imul
push
and
jle
push
jmp
shrb
mov
imull
xchg
push
je
movsb
dec
xchg
les
inc
ljmp
insl
cs
and
push
js
into
ljmp
sbb
leave
bound
ljmp
pop
movsb
pusha
pop
xor
icebp
jo
push
ds
jb
dec
fsubrs
adc
and
xlat
mov
gs
cmp
mov
jns
cltd
jecxz
cld
mov
fnstcw
inc
mov
cmpl
mov
test
ficompl
pop
es
mov
std
aas
dec
jb
inc
aam
lcall
adc
xor
xor
int3
jbe
movsl
mov
leave
xchg
sbb
xchg
sbb
cmp
into
out
push
imull
dec
mov
mov
xor
ret
mov
mov
hlt
aad
arpl
pop
adc
shll
cwtl
testb
jmp
leave
jl
ja
movsb
or
and
rcrl
mov
jnp
and
adc
pop
out
enter
lock
shll
xor
xor
mov
xor
aaa
xchg
insl
leave
jnp
out
ljmp
pop
lds
xorb
lods
xor
mov
xorb
pop
mov
mov
repz
pushf
mov
mov
loope
sbb
insl
mov
mov
push
push
sbb
pop
lret
pop
into
int
xchg
jb
repz
vpsubb
vmulsd
and
fs
dec
xchg
jb
jl
int
pop
cli
xchg
and
out
inc
fs
gs
add
jge
dec
dec
insl
movsb
fcomps
fisubrl
fcomps
sbb
cmp
test
or
frstor
shr
mov
adc
aaa
mulb
scas
scas
fsts
and
test
fwait
or
fs
mov
movl
cs
loopne
sbb
xor
xchg
loop
sub
push
pop
mov
cwtl
fldcw
mov
and
loopne
in
stos
push
stos
rcrl
jge
enter
ja
mov
xor
aad
bnd
rclb
xchg
sub
ss
aad
xor
xor
xchg
in
hlt
and
lods
mov
mov
out
jp
out
js
and
cltd
adc
mov
and
or
mov
popa
mov
inc
mov
dec
or
and
mov
pop
pusha
rcrb
xchg
push
jl
jge
data16
fistpl
cmc
cltd
cmp
pushf
nop
pushf
movsl
dec
push
rorb
sub
and
js
adc
enter
fmuls
shlb
fidivrl
cltd
sub
push
cltd
jns
ljmp
jno
lock
nop
and
or
js
dec
shlb
pop
jl
aaa
subl
xor
pop
add
or
dec
mov
adc
cmc
jp
fisubrl
lods
les
dec
sbb
push
out
mov
hlt
inc
inc
out
mov
mov
mov
xlat
bound
test
notb
push
clc
xor
insl
jl
insb
push
dec
mov
fld
out
add
and
cmp
mov
pop
lea
iret
adc
sbb
sub
cmp
lock
pop
jge
inc
push
sbb
xchg
test
call
inc
xor
outsl
rorl
mov
add
mov
loop
mov
xlat
mov
mov
jbe
jp
cmc
int
jge
xor
mov
pushf
sbb
ljmp
shrl
xchg
pop
fs
stos
aad
test
test
cmp
sub
cld
stos
sar
pusha
lret
mov
xchg
enter
test
movsb
pop
je
mov
les
test
sub
xor
fcoml
cmovb
push
or
scas
push
dec
adc
adc
xchg
push
adc
lahf
les
outsb
lret
cmpsl
lahf
push
es
jmp
and
fstps
cmc
jne
fcomp
in
jecxz
imul
jg
fiaddl
ret
cltd
cmc
mov
shrl
mov
cld
popa
xchg
dec
sub
loope
fwait
xor
mov
mov
loope
cmp
cltd
xchg
push
push
mov
mov
pop
pop
gs
pusha
outsl
or
sub
or
dec
add
pushf
pop
lods
mov
jecxz
sub
sahf
faddp
movsl
jo
jp
cs
xchg
addl
jns
out
std
or
xchg
adc
sub
sar
ds
and
idivl
clc
mov
call
inc
mov
jecxz
bswap
jo
inc
and
jno
mov
lahf
push
inc
test
fbld
insb
push
push
popa
mov
lods
inc
rorl
add
pop
stos
bound
out
inc
pop
jno
mov
dec
or
adc
fiaddl
lcallw
and
and
xor
movsl
jge
lret
xor
aaa
or
loope
jbe
movsl
jb
popa
leave
ret
or
or
lods
mov
ja
sbb
or
dec
mov
sbb
adcb
pop
scas
push
out
dec
sbb
cmp
or
cld
jb
call
das
outsl
dec
mull
cmp
je
fs
xchg
popa
pop
dec
or
add
loop
sbb
cmp
cmpsl
in
xlat
push
sub
adc
cmp
pop
jne
clc
push
mov
xlat
push
mov
sub
cmc
addr16
in
stos
roll
xchg
inc
adc
hlt
jno
jp
rclb
lahf
ds
loop
inc
int
mov
int3
add
sahf
cmc
inc
sub
pop
mov
pusha
or
repz
jecxz
dec
int3
leave
pop
pushf
pop
pop
pop
add
sbb
cmpb
lahf
cwtl
dec
mov
mov
push
cwtl
dec
cmpsl
push
popf
aaa
gs
adcl
rol
repnz
xor
or
das
sbb
push
dec
cltd
fsts
mov
mov
clc
sahf
leave
lret
mov
jp
mov
outsb
pushf
aad
stos
sbb
xor
inc
insl
push
cs
mov
and
test
lahf
hlt
xchg
arpl
lahf
mov
lock
xchg
push
pop
cwtl
out
cmpsl
shl
push
jo
fisubl
push
mov
cmpsl
sbb
or
jo
lfs
enter
xchg
or
repz
loope
dec
iret
sbbb
pop
mov
sub
lcall
push
and
repnz
xchg
lcall
push
hlt
stos
sar
lods
mov
addr16
add
jl
es
or
jae
stos
movsl
inc
push
or
comiss
sub
cli
loope
cmpsb
add
je
push
in
stos
xor
cmp
or
jecxz
xor
inc
xor
lds
and
in
add
loopne
xor
jg
insb
xchg
pushf
mov
int3
push
mov
lret
andb
pushf
out
adc
push
lahf
sbb
cmpb
repz
das
and
pop
into
test
mov
cli
movsb
mov
cmp
pop
cmp
adc
lret
jmp
adc
clc
popf
scas
cs
shlb
pushf
xlat
call
fsubrs
jge
ret
and
push
ss
stos
adc
das
loopne
stos
lret
pop
jge
out
stos
push
cmpsl
scas
cvtdq2ps
sbb
adc
jl
nop
add
sub
les
in
call
xlat
fidivs
imul
xchg
xchg
insb
and
fildl
clc
into
gs
sbb
movsb
push
pop
popa
pusha
fs
cmp
push
and
sub
into
jg
jnp
dec
jns
jnp
test
mov
mov
mov
jmp
dec
pop
das
pop
mov
dec
cmpsb
or
cmp
negl
xor
xor
sahf
dec
jmp
pop
lods
and
gs
xlat
mov
ret
dec
stos
adc
pop
icebp
dec
pushf
jbe
pusha
xchg
adc
jge
ffree
xchg
sahf
ljmp
sahf
dec
dec
mov
mov
or
shlb
sbb
jno
out
loopne
out
inc
ljmp
clc
push
mov
adc
fs
mov
sahf
aam
cmp
test
pop
xor
and
adc
dec
out
jb
inc
push
adc
lret
jp
push
sbb
dec
outsb
xor
mov
imulb
jmp
iret
rcr
pusha
push
rcrl
negl
pop
test
gs
dec
push
and
add
dec
inc
mov
mov
cld
xchg
lds
lock
cli
fs
mov
mov
and
mov
sub
inc
cmp
sbb
mov
mov
test
fisubs
addr16
jae
outsb
fstp
xchg
or
dec
add
addr16
mov
mov
in
adc
shr
scas
loop
or
and
or
sub
push
jg
test
mulb
lcall
inc
lods
repnz
ret
sub
out
jp
and
in
xor
and
mov
xchg
insl
movsw
shlb
sbb
jp
fldl
jns
add
insb
adc
sub
mov
jbe
jno
cmpsb
cld
dec
mov
cmpsl
xorb
xchg
xor
aam
je
jg
xor
je
mov
int3
jecxz
inc
mov
test
jle
push
jnp
sti
or
loopne
js
nop
int3
adcb
push
push
sub
add
ret
push
jl
adc
in
icebp
fcompl
outsl
mov
rclb
jp
ficomps
fbld
dec
aam
and
dec
jo
lods
pop
out
mov
call
aaa
pop
emms
xor
xchg
inc
bound
mov
addr16
cmp
fnclex
xchg
stc
nop
imul
outsl
sbb
std
mov
jno
fwait
pop
mov
je
jle
int3
ret
fwait
push
mov
int
add
aaa
and
sti
arpl
xor
xchg
dec
jno
in
inc
mov
and
add
xchg
scas
dec
ljmp
xchg
stos
push
ds
out
add
fimull
imul
xor
lcall
mov
je
xchg
or
dec
fnstenv
lcall
xlat
mov
inc
and
push
clc
and
loop
mov
push
scas
pop
jecxz
int
popf
jmp
sti
mov
dec
stos
xchg
test
xor
bound
pushf
sahf
sti
xor
xchg
jns
sbb
pop
mov
mov
ret
and
dec
cmc
into
inc
movsb
loopne
jmp
sbbl
sub
divb
cwtl
push
add
clc
outsl
pop
scas
sub
jge
mov
icebp
inc
adc
add
pushf
out
xor
test
loope
popf
pop
cltd
inc
dec
add
push
cmpsl
sbb
jbe
shll
dec
in
scas
hlt
mov
or
mov
xchg
and
or
cmp
negb
cmp
xor
and
inc
mov
push
mov
outsb
outsb
outsl
repz
dec
dec
fimull
daa
inc
addr16
jecxz
xchg
and
dec
arpl
mov
cs
and
mov
aaa
div
push
dec
fdivr
orl
rolb
mov
and
stos
out
insl
ret
dec
xrelease
mov
adc
mov
pop
test
mov
repnz
lods
inc
aam
test
in
in
inc
mov
lret
adc
inc
insb
jo
xor
or
lea
xchg
mov
lret
jle
dec
mov
cs
in
sbb
mov
pop
out
negl
add
push
dec
lahf
cmp
sbb
pop
in
jne
jne,pt
setbe
incl
add
mov
xchg
xor
mov
int3
mov
jbe
mov
dec
lds
jge
jmp
int
or
mov
jge
or
shl
and
in
scas
enter
les
fld
xchg
scas
push
addr16
std
and
movsl
adc
fisttpll
out
sub
aam
mov
add
xorl
mov
imul
ljmp
jb
push
pushf
push
fldln2
out
aam
loop
lock
cmp
gs
cmp
mov
mov
pushf
imul
in
jp
aaa
add
gs
add
jne
aam
push
push
lcall
ret
decl
aas
mov
pop
pop
add
pusha
jo
loopne
xchg
jne
cmp
or
and
fs
or
popf
mov
pop
cmpb
repz
mov
cmp
pop
pop
mov
cld
add
xchg
mov
sub
rolb
out
xor
sti
inc
lret
int3
cwtl
xor
sbb
dec
xor
divl
mov
push
imul
pop
repz
int
sbb
rol
std
or
fiadds
mov
out
and
jge
jp
mov
inc
mov
fisubrl
inc
repz
xchg
mov
pushf
xor
popa
icebp
flds
sbb
xorw
stc
mov
movsl
fcoml
enter
dec
fs
test
mov
mov
test
in
lcall
xor
add
nop
and
sbb
das
add
and
mov
rorb
inc
push
iret
popa
lahf
mov
sub
push
jne
das
dec
pop
pop
into
int
mov
pop
pop
inc
pop
hlt
cltd
aad
insl
push
icebp
addr16
lea
ficoml
std
push
mov
sbb
inc
into
dec
into
fdivrl
loop
xchg
jecxz
adc
popa
sub
pusha
dec
gs
adc
aam
aad
and
sar
xchg
mov
adc
out
sbb
bound
jno
push
dec
das
pop
mov
jnp
dec
and
dec
dec
fistps
lds
add
push
mov
add
xor
sti
push
sbb
mov
sbb
jp
mov
mov
jmp
movsb
and
mov
shll
xor
add
js
dec
adc
test
aad
addb
cmp
jl
and
jae
add
jge
mov
and
mov
jg
mov
add
xor
add
loop
cmpsl
aaa
pop
fcoms
or
xchg
pop
fiaddl
scas
sbb
fucomp
imul
das
outsl
inc
pop
rcr
mov
imul
jle
dec
xor
rclb
insb
inc
dec
imul
inc
fnstcw
out
and
loopne
popa
lods
jbe
dec
mov
or
jae
push
pop
icebp
lods
arpl
aad
and
dec
jecxz
cmpsb
jge
in
daa
pop
cmp
mov
sahf
lahf
call
or
adc
add
fstpl
int
mov
fistps
jge
fcmovnu
sub
inc
push
jb
fbld
push
adc
jmp
lgs
mov
loopne
mov
adc
std
jecxz
push
out
jno
daa
adc
mov
popf
sbb
xchg
xchg
pop
fldenv
hlt
jle
pop
push
add
sub
fimull
push
daa
lds
dec
shll
xor
imul
loop
jne
popa
repz
enter
jmp
push
pop
adc
nop
and
aas
and
dec
in
xor
movsl
flds
or
cs
orl
pop
and
xchg
adc
inc
xchg
and
and
xchg
inc
mov
cmpsb
ficomps
jno
fisubrs
xchg
movsl
das
fcmovbe
in
sbb
jl
inc
aaa
stos
fstpl
push
mov
sub
jo
xchg
pop
fdivrs
cmp
ret
mov
sbb
loopne
call
push
sti
mov
repnz
dec
sti
mov
sbb
mov
scas
decl
push
loop
inc
adc
xchg
dec
outsl
lcall
xchg
incl
repnz
and
cmpsb
xor
jno
dec
xor
cmpsb
ret
ds
imul
jae
lods
dec
clc
mov
mov
hlt
cmp
mov
xchg
adc
or
sub
cmp
lock
mov
popf
movsb
adc
fldenv
cmp
rcrb
testl
pop
xor
add
movsb
fxch
outsb
fldcw
inc
aaa
and
hlt
mov
out
add
cmovg
lods
lods
jle
bound
mov
pop
add
jmp
adc
push
mov
mov
pop
mov
cmp
aam
sub
addb
xchg
sarb
xchg
stc
lea
pop
jge
xchg
mov
dec
xchg
jae
mov
xchg
cmp
jl
out
and
nop
and
das
xor
insb
ljmp
jne
mov
push
sub
inc
rcrl
je
pop
xor
xchg
aam
mov
mov
or
pusha
aaa
dec
or
mov
pop
in
and
mov
fwait
es
push
xor
leave
mov
int
and
daa
mov
lret
push
adc
mov
ja
or
adc
popa
clc
mov
loope
jnp
and
aas
xor
les
or
xchg
dec
fwait
jle
adc
rcrl
sub
std
mov
xchg
mov
cmpsb
shll
bound
fstp
xor
pop
dec
mov
addl
jb
dec
jb
ds
xchg
lcall
mov
cld
mov
insl
mov
movsb
adc
sbb
push
adcl
sahf
mov
sar
jae
cmpsb
test
jbe
loop
je
adc
in
inc
adc
popa
mov
clc
dec
mov
lcall
stos
in
scas
mov
add
out
sub
push
movsl
cmp
xor
jmp
add
add
dec
test
in
std
push
sbb
sbb
xor
outsl
in
push
fildl
addr16
das
xchg
push
pop
ucomiss
mov
pop
mov
jns
push
icebp
mov
rolb
xchg
lock
inc
fwait
adc
mov
mov
stos
fstps
push
jns
test
mov
mov
outsl
not
lcall
in
cmp
or
out
fmull
xchg
inc
lods
cmpsl
cmpsb
out
cwtl
or
insb
and
jns
sub
and
lods
fucomi
lcall
jo
pop
push
push
jae
loop
sub
adc
sub
mov
addb
adc
pop
movsb
push
jl
fwait
jp
add
andl
push
push
xchg
insl
add
pushf
mov
mov
xor
jbe
cmp
imul
pop
dec
outsl
repz
rclb
mov
sub
outsb
xor
jecxz
mov
mov
mov
cmp
mov
mov
and
pop
scas
fadd
add
aaa
or
mov
push
mov
into
pop
mov
or
sarb
mov
dec
sbb
cmpsl
mov
cmp
ljmp
sbb
mov
loope
movsb
mov
mov
test
inc
xchg
sbb
ds
aam
add
mov
lret
sbb
pop
sbb
xchg
cltd
clc
xchg
rcrb
jbe
bound
push
into
popa
fmuls
jno
pop
cmpsb
mov
into
jmp
pusha
loopne,pn
bound
clc
sbb
push
add
mov
pop
shlb
jbe
jmp
sbb
cli
xor
jbe
roll
jge
push
lds
sub
rcrb
subl
xor
int
xchg
mov
jmp
je
data16
mov
inc
mov
and
xchg
cmp
mov
loopne
cmp
xchg
mov
pop
iret
popl
jmp
in
je
stos
jl
pop
into
int
mov
xor
pop
idivb
lods
fildll
cmp
adc
test
incb
pop
cmpsb
jnp
dec
arpl
push
jnp
sub
pop
xchg
cmpsb
shll
jecxz
mov
push
or
out
loopne
je
and
mov
lret
faddl
ret
fld
ret
jcxz
mov
lcall
test
cmp
lahf
mov
enter
mov
or
dec
xchg
jp
inc
fdivs
inc
repz
or
cli
mull
dec
adcl
iret
in
test
cwtl
lods
mov
cs
cli
std
add
sbb
push
pop
jp
pop
pop
lods
jne
jge
jo
push
sbb
fs
push
pop
cmp
popf
xor
and
faddl
cwtl
ljmp
out
jmp
xor
sub
sbb
rcr
rclb
mov
push
sbb
mov
les
jo
sub
in
sahf
repnz
cmpsb
mov
lock
jmp
and
lea
mov
stc
jecxz
bound
push
popf
scas
addr16
cld
rcrb
mov
push
inc
ret
jns
mov
sub
or
imulb
ja
rol
mov
inc
xchg
outsb
jbe
push
adc
icebp
hlt
mov
mov
adc
adc
add
out
es
test
idivb
push
lock
ss
rcrl
jbe
orb
imul
or
lea
jo,pt
test
mov
cmpsb
pop
in
and
movsb
push
int3
mov
dec
mov
dec
pop
dec
mov
mov
pop
sub
imul
sbb
adc
das
mov
or
cmpsl
lahf
sahf
push
clc
out
xchg
stc
repnz
int
sub
inc
mov
test
xchg
and
ds
jmp
mov
arpl
cltd
mov
icebp
xor
mov
lahf
stc
test
add
testl
inc
sbb
adc
pop
push
xor
stos
mov
push
add
popw
js
add
dec
jg
jb
mov
jl
int
mov
push
push
xchg
push
fidivrl
and
or
arpl
cmpsl
adc
add
and
mov
cmovae
call
xchg
mov
adcb
sbb
test
jne
ret
sbb
jg
sub
pop
gs
inc
or
shrb
ss
adc
ds
jg
lds
aad
in
push
les
cmp
push
dec
pop
pop
loope
xor
in
xor
out
or
adc
sbb
pop
mov
nop
test
jo
imul
or
sbb
popa
lods
insl
insl
inc
mov
inc
psubsw
pop
addr16
pop
cmp
cwtl
clc
lret
xchg
sahf
int3
and
cmpsb
adc
es
push
out
mov
lods
inc
insb
les
push
fstl
popf
cmp
mov
xchg
jae
cmpb
pop
pushf
cmp
and
das
ret
insl
mov
mov
stos
insl
mov
or
sbb
mov
push
lock
aam
lea
xor
push
mov
addr16
jne
inc
mov
jl
inc
adc
add
or
push
mov
push
imul
push
mov
mov
insb
jae
inc
sub
popa
add
test
cwtl
pop
pushf
rorl
lods
pop
fsubrp
mov
in
inc
mov
popa
pushf
xor
test
pop
neg
cmp
add
add
cmp
lods
sub
and
and
sbb
rorl
cmp
iret
mov
cmp
aad
ljmp
xorl
inc
jge
bound
xchg
push
mov
stc
and
mov
lock
sbb
mov
add
push
inc
adc
push
leave
pusha
addr16
sub
cmpsb
adc
and
add
lods
pop
lods
fisttpl
xchg
lahf
xor
sbb
or
push
jnp
mov
movl
es
pop
in
out
movsl
in
inc
push
and
mov
dec
mov
test
cmpsl
xor
xor
push
stc
xchg
xor
sti
loope
and
inc
xchg
imul
xorl
inc
cmp
add
add
dec
cmpb
dec
sub
rcr
mov
andl
jle
jne
add
bound
push
movsb
pushf
sub
mov
faddl
mov
mov
ja
pop
xor
push
sub
sub
mov
jb
sbb
lds
xchg
arpl
clc
bswap
jmp
lods
sbb
cltd
leave
inc
idiv
scas
mov
rcrl
fiaddl
add
pushf
pushf
pop
sub
nop
ret
pop
in
sbb
out
mov
push
js
adc
sub
hlt
test
out
cltd
inc
adc
cmpsl
mov
popf
inc
add
test
sbb
popa
in
mov
scas
pop
mov
xor
sahf
xor
test
loop
iret
push
out
test
adc
out
or
jmp
orb
outsl
popa
mov
jecxz
xlat
adc
jae
and
scas
inc
pop
mov
mov
or
xchg
jg
sti
mov
add
mov
xor
mov
jbe
mov
hlt
xchg
adc
xor
movsb
xchg
xchg
mov
xchg
sub
jo
mov
adc
nop
and
or
sahf
cld
sub
mov
fnstenv
jecxz
pusha
vpsllw
xchg
push
jmp
add
outsb
mov
mov
push
insb
sbb
jnp
mov
or
les
mov
dec
cmp
mov
or
enter
in
ret
icebp
sbb
les
scas
fidivs
or
cmp
mov
pusha
hlt
popf
lea
fsubl
dec
mov
jp
cltd
inc
jmp
push
xor
sti
cs
call
ret
lcall
test
test
jp
in
bound
icebp
loopne
mov
jno
lret
or
pusha
push
movsb
icebp
data16
lods
sbb
adc
out
mov
fwait
in
mov
or
mov
jge
sub
inc
inc
fs
mov
push
jg
jns,pn
lods
inc
and
mov
sbb
mov
orb
or
sub
aad
aas
fstps
pop
mov
fldt
adc
jb
or
repz
gs
test
das
mov
mov
stos
rcr
mov
fisubrl
adc
push
je
push
mov
fcomps
sahf
and
push
push
outsl
in
dec
jecxz
mov
xchg
adc
shll
xchg
cmpsl
popa
pop
in
iret
jo
and
pop
mov
pop
xor
movsb
sbb
inc
std
pop
ss
jecxz
mov
or
testb
dec
push
lods
andb
sti
dec
xchg
dec
jmp
cmp
ffreep
hlt
clc
pop
loopne
mov
mov
dec
in
add
inc
outsb
adc
pop
mov
sub
jo
pop
cmp
push
pop
jbe
mov
or
loope
push
mov
sub
inc
xchg
stc
outsb
or
pop
iret
test
inc
dec
into
mov
cld
dec
sbbl
pushf
or
fs
adc
fcomi
pusha
fsubs
lods
test
xlat
cmp
test
int
push
loope
out
xor
inc
or
push
je
imul
pop
push
cltd
pop
mov
out
lahf
and
mov
mov
inc
pop
jb
inc
pusha
push
jecxz
popf
ljmp
repz
in
test
inc
dec
lea
mov
pushf
jecxz
sbb
mov
loop
cmp
pop
into
in
xor
or
pop
daa
rcll
ret
mov
ja
cld
fs
dec
js
lret
andb
mov
hlt
les
dec
popf
test
ja
push
add
mov
jne
sti
mov
fadds
push
mov
push
insb
xor
dec
sub
in
repnz
nop
sub
or
inc
xchg
aas
sti
andb
loope
cld
fstl
or
lds
xlat
daa
mov
dec
xor
mov
mov
and
lcall
mov
out
out
inc
mov
cwtl
sti
inc
lods
rorl
mov
xchg
cmc
in
inc
or
push
dec
jl
add
xor
mov
adc
into
dec
cltd
int3
clc
pusha
icebp
fistl
fists
dec
lock
std
lret
in
in
add
gs
fistpl
pop
adc
jl
mov
mov
or
jl
xchg
andl
inc
repnz
iret
out
dec
dec
xor
inc
mov
jle
lock
nop
and
scas
imul
mov
mov
jl
mov
mov
aas
cmp
inc
jecxz
mov
cli
push
jle
adc
out
xor
shrb
pop
mov
imul
sti
bound
js
pop
mov
aaa
cld
push
mov
test
cmp
lock
movsb
or
add
adc
jbe
dec
cltd
arpl
in
popf
scas
pop
ret
iret
js
aad
mov
in
xor
pop
test
hlt
or
mov
hlt
sub
mov
repz
in
lahf
into
push
hlt
and
cmp
or
xchg
pop
int
inc
mov
int
icebp
push
aam
faddp
and
inc
sbb
cwtl
mov
scas
sbb
popa
lock
cmp
hlt
push
sub
dec
and
lods
lahf
or
mov
sbbb
fsubrl
dec
jmp
push
mov
mov
cmpsb
or
lea
pop
xchg
xor
push
cmp
xor
mov
push
xchg
insl
jae
or
daa
pop
pop
sbb
add
push
out
fsubrl
lret
cmp
sahf
test
rolb
aas
sbb
movsl
lods
iret
pop
divb
rclb
inc
test
shll
jl
ss
adc
jle
ficompl
jg
cli
sar
ffreep
cmp
movsb
lock
mov
out
scas
inc
ja
pop
dec
mov
stos
inc
in
sbb
and
cmpsl
or
mov
pop
and
pop
cmp
repz
adc
bound
xchg
cltd
cld
mov
xchg
mov
add
ljmp
fdivs
fadd
clc
es
int
mov
push
jl
lret
clc
or
or
adc
sbb
jne
jecxz
insb
dec
pop
data16
xchg
arpl
mov
sub
sti
jle
inc
test
add
inc
sahf
cmp
sbb
dec
ds
mov
jp
mov
mov
imul
ret
jge
jmpw
inc
cmpsb
sti
cmp
leave
lds
dec
adc
xchg
int
stos
lcall
in
push
enter
pop
mov
lret
xor
imul
dec
addr16
adc
movsb
cld
addl
push
sbb
xchg
lret
imul
scas
inc
xchg
mov
xor
jmp
leave
mov
and
testb
xchg
aaa
dec
lea
stos
in
shlb
add
call
mov
sbb
subb
xchg
ret
add
pop
imul
dec
sbb
xor
aam
mov
leave
mov
in
rcrl
in
repz
fdivrs
xchg
mov
loope
jnp
jns
cs
addr16
jecxz
repz
push
pop
pop
sub
dec
ret
and
xchg
sbb
call
and
pop
es
cmp
orl
les
pop
or
push
sahf
cmpsl
imul
xor
pop
mov
pop
divb
rcrl
sbb
xchg
test
push
xorl
jne
jnp
cld
ret
ficoml
fidivl
lea
sbb
fwait
in
fstps
in
cmc
mov
xlat
in
pop
lea
pop
aam
adc
push
pushf
push
fnstcw
adc
mov
cmp
push
fwait
pop
arpl
popa
fmuls
pop
pop
push
fiaddl
movsl
cld
push
add
sbb
jp
pop
or
iret
out
popa
jmp
insb
rcrl
add
loop
pop
jecxz
sub
pop
inc
jmp
jbe
ds
scas
imul
lahf
fldz
in
pushf
lock
xchg
jnp
cmp
jo
add
imul
mov
mov
jg
arpl
or
movsb
jns
add
cltd
mov
testb
xrelease
ret
iret
scas
mov
jp
sub
dec
jmp
ss
mov
mov
fldt
insb
mov
xchg
iret
popa
adc
xlat
mov
xorb
mov
push
sbb
fwait
ret
adc
and
inc
ret
dec
repnz
adc
sbb
mov
push
stc
test
ja
add
xor
test
lock
and
lds
rorb
and
je
xchg
mov
jle
xor
cmp
data16
ror
pop
mov
xor
out
pop
lahf
push
push
mov
push
mov
jnp
pop
lret
push
data16
xchg
cmp
xor
cmp
push
add
sub
or
pop
jle
sub
jmp
dec
push
mov
jns
lcall
xchg
pop
dec
sbb
push
loop
sbb
inc
cs
inc
test
mov
xchg
and
mov
adc
push
fdivl
fsts
pop
lahf
dec
mov
ficoml
xor
mov
into
dec
mov
ret
fcmovnb
insb
jmp
mov
aad
and
rclb
or
xchg
imul
dec
stc
push
call
outsl
inc
es
jle
jo
movsl
adc
mov
ja
gs
int3
mov
push
push
dec
jmp
or
out
mov
insb
pop
jp
jg
loop
xor
add
dec
movsl
in
shlb
imul
cmpsl
hlt
jo
sbb
push
inc
fimull
mov
xchg
pop
mov
sub
mov
in
ljmp
push
pop
mov
test
push
cmp
mov
dec
repnz
push
ret
int
incb
inc
shll
dec
ja
imul
fmul
test
xor
mov
or
and
xor
sarl
loop
jns
push
ss
ljmp
lret
add
dec
mov
push
and
mov
lret
lea
xor
sbb
mov
adc
sub
sbb
push
inc
xor
pop
out
jp
aad
icebp
insb
test
mov
jno
cmc
mov
ret
popa
test
adc
cli
xor
sub
jg
dec
mov
sub
pop
inc
int3
or
pop
push
in
pop
push
mov
dec
cmp
imul
shlb
out
add
ss
outsb
ret
clc
popf
xor
mov
sarb
xorb
je
out
das
aad
or
dec
adc
jne
lret
mov
sub
fs
mov
inc
mov
mov
sbb
repnz
divl
scas
dec
mov
iret
adc
mov
xor
incl
pop
outsl
test
sbbl
xchg
ret
push
mov
dec
cmp
shl
cs
jns
pushf
cmpsb
sarb
mov
jmp
mov
inc
lret
jmp
cli
sub
mov
out
lcall
je
addr16
push
inc
iret
arpl
popf
mov
cs
sbb
gs
cli
test
es
adc
mov
hlt
inc
pop
insb
pushf
ja
or
cld
fildl
int
xchg
mov
fwait
inc
repz
subl
and
xchg
cld
dec
std
scas
ss
fwait
je
jp
arpl
mov
insb
xchg
mov
inc
mov
push
mov
add
fwait
adc
cmp
xor
add
fwait
and
push
jg
xchg
insb
outsl
mov
cmp
icebp
scas
push
ret
sbb
cmp
rcll
jne
dec
xor
mov
btr
or
ja
movsb
mov
xchg
rcl
into
jae
daa
adc
loop
test
popf
mov
out
mov
mov
icebp
pmulhw
mov
pop
loopne
cld
or
sbb
data16
mov
loope
sbb
jne
jg
mov
sbb
sbb
xchg
mov
jae
bound
roll
leave
add
in
pop
inc
dec
add
push
hlt
pushf
and
push
pop
add
fists
and
push
popf
jnp
pop
push
or
mov
xor
loope
or
push
ret
repz
and
mov
cmp
enter
fdivrl
cmp
cmc
neg
and
pop
inc
push
lret
xlat
je
xor
incl
push
into
imul
scas
xchg
movsb
repnz
jae
mov
cmp
adc
daa
bound
dec
xor
or
in
stc
push
and
int
cld
sbb
push
gs
ja
shl
std
mov
jb
xchg
pop
sbb
xchg
cmc
mov
xor
mov
jp
cmp
add
stos
lahf
jmp
xchg
fwait
lret
and
mov
sarl
mov
sbbl
outsb
mov
push
nop
cmc
repz
pop
and
adc
mov
xchg
ss
lret
daa
mov
ljmp
pop
push
cs
fisubs
jno
cmc
pop
in
cltd
movsl
cmp
fildll
inc
in
mov
mov
mov
pop
enter
sbb
mov
jnp
or
cmp
cmpsl
call
popl
nop
insb
out
xchg
or
cld
push
push
xchg
push
out
incl
fnstenv
arpl
in
jnp
mov
hlt
les
pop
pop
fistl
mov
xchg
movsb
mov
push
adc
xorl
inc
in
xor
scas
insl
pushf
xchg
sti
adc
in
xor
in
stos
jl
lock
add
xor
mov
inc
cmpsl
xor
mov
inc
fnstsw
adc
fmuls
scas
push
call
in
sarl
std
inc
lods
das
dec
inc
movsl
xchg
movsb
inc
dec
je
out
add
in
icebp
clc
push
cmc
add
push
sbb
and
pop
push
inc
mov
adcb
mov
rorl
push
adc
ss
arpl
jge
mov
sbb
imul
insb
sub
into
xchg
xchg
andl
cmpsb
das
jno
push
mov
movsb
xor
adc
or
lods
add
je
or
xor
cmp
cmp
lret
pop
xchg
add
cs
cmp
ss
into
cmpsl
fwait
icebp
push
shrl
push
mov
cwtl
icebp
cltd
xor
ss
fsubs
mov
fidivl
out
fdivrl
sbb
mov
mov
pop
xor
lcall
daa
cs
out
out
insb
push
xchg
int
fdivrs
inc
jmp
into
xlat
lahf
adcb
lds
call
loop
fldcw
jae
aad
xlat
xor
pop
xchg
mov
add
mov
and
sub
pop
inc
mov
scas
shlb
loop
fnstcw
cmpsl
mov
vpand
shll
hlt
xor
ja
and
fcmovbe
inc
mov
imul
mov
pop
dec
mov
pop
loope
mov
cltd
jnp
addr16
in
cltd
pusha
rcrl
rcll
into
das
imul
and
aaa
mov
mov
test
mov
or
lahf
subl
movsb
xchg
into
push
mov
inc
arpl
push
mov
aaa
aam
push
push
add
out
mov
adcb
mov
adc
mov
fidivrs
jnp
aaa
daa
push
sub
push
cmpsb
mov
push
sbb
mov
mov
push
mov
je
xorl
ja
cltd
xor
push
push
or
lret
stc
aam
or
jb
cmp
push
repnz
popl
xorl
push
adc
aad
push
jno
iret
push
dec
pop
js
stos
orl
xchg
sub
jp
dec
outsl
les
xchg
xor
fsub
bound
int
mov
into
js
push
sbb
jmp
movsl
dec
push
movsl
sbb
enter
jnp
push
xchg
ficoml
cmp
xor
push
add
fwait
push
mov
mov
xchg
or
inc
jbe
sbbl
lret
fwait
roll
push
sbb
adc
sbb
inc
xlat
roll
mov
ficompl
movsl
jno
cld
test
or
gs
dec
es
cmp
cli
and
enter
out
or
cltd
mov
adc
aaa
repnz
xor
stc
push
iret
inc
ja
push
cmpsl
cmp
das
cld
pushf
ds
pop
dec
adc
adc
dec
fmuls
pop
mov
jns
push
lcall
test
aas
add
push
inc
dec
inc
xchg
push
sbb
inc
dec
push
mov
fld
push
push
mov
pop
loope
fnstsw
fsub
jmp
jecxz
jp
or
or
scas
xor
push
or
lock
daa
test
into
mov
sti
push
in
dec
inc
mov
inc
xor
lahf
adc
sbb
pop
addr16
mov
adc
cs
imul
jmp
lods
mov
jae
ss
add
xor
sbb
mov
pop
ss
pushf
aas
iret
push
sub
add
sbb
mov
and
mov
adc
or
or
lahf
pop
add
add
and
cmp
mov
data16
add
and
dec
cmp
dec
cld
push
into
inc
mov
pop
cmc
out
jmp
dec
push
pop
xlat
fmuls
cmp
scas
inc
jne
dec
bound
cmp
pop
je
dec
je
divl
icebp
test
lods
pop
dec
scas
inc
clc
mov
xchg
std
cwtl
sbb
das
sahf
psllq
or
dec
mov
stos
jbe
cmp
add
dec
testl
dec
int
bound
sahf
stc
mov
push
ljmp
adc
jge
push
bound
mov
mov
popa
push
pop
mov
daa
pop
cmp
dec
jns
add
or
loopne
test
add
arpl
sub
and
dec
std
sub
sbb
jecxz
addr16
xchg
imul
das
xor
les
aaa
mov
adc
and
mov
call
pop
add
mov
add
int3
loop
xorl
subb
add
fs
inc
push
mov
ficompl
in
clc
lahf
xchg
xchg
sub
and
std
fsubrp
popf
mov
mov
mov
sbb
jne
orb
stc
sub
lret
shll
xor
loop
out
and
call
mov
sbb
in
add
dec
sahf
insl
add
cli
ljmp
adc
jne
cmpsl
shlb
js
sub
aad
sahf
jge
sub
in
fsubrl
xchg
pop
xchg
scas
inc
shrb
adc
stos
outsb
add
or
sbb
ret
imul
inc
out
cmp
cmp
idivb
jmp
js
out
cwtl
stos
cmp
scas
sti
fnstcw
pop
push
xor
fisubrs
add
push
insb
fisubrs
jle
aad
repnz
enter
cmpsl
mov
adc
add
repz
inc
cmp
mov
iret
inc
cmpsl
or
cmpsl
data16
scas
add
ss
inc
es
ja
shl
out
push
out
inc
xor
add
pop
sbb
cmp
mov
cmpsl
mov
sahf
lcall
or
mov
lods
inc
hlt
cld
rcrb
aaa
insl
jns
mov
nopl
fmuls
shl
inc
xchg
mov
aad
jbe
sbb
fisttpl
sbb
ja
shl
pop
aaa
jo
xchg
fs
adc
or
cltd
ret
mov
jae
les
sbb
adc
notl
inc
adcl
or
stos
and
loopne
add
lods
add
sub
jl
addr16
sahf
add
xchg
jb
int
inc
aaa
dec
mov
adc
dec
and
gs
cmp
xorb
loopne
out
mov
outsb
push
shlb
jb
nop
mov
sarb
or
dec
cmc
xchg
mov
stc
cmp
mov
addl
sbb
xor
sub
repnz
mov
nop
pop
mov
movsl
movsl
js
push
sub
and
lock
mov
scas
adc
cltd
jge
je
nop
test
enter
sahf
mov
push
mov
jo
sub
sbb
scas
mulps
push
jnp
adc
fmuls
push
add
jge
dec
imul
fwait
cmpl
jno
scas
mov
and
das
cli
nop
pusha
jle
or
inc
push
dec
xchg
shll
mov
es
shll
incb
lods
cvtdq2ps
mov
lcall
das
iret
pusha
test
clc
jmp
lock
mov
mov
adc
sbb
popf
xlat
mov
mov
cmpps
dec
lds
movsl
xchg
cmp
out
sbb
dec
push
shll
rcrb
push
push
lret
insl
movsl
gs
hlt
repz
mov
into
enter
adcl
js
mov
cmc
adc
add
sbb
rclb
add
pushw
shll
fs
and
inc
pop
test
test
mov
leave
jbe
out
and
jns
dec
ds
aad
fs
jmp
bound
insl
and
and
xchg
and
add
sub
adc
data16
insl
jp
pop
push
mov
pop
push
aad
test
popa
lret
dec
hlt
push
scas
inc
jnp
jbe
xchg
xor
outsb
cmp
push
mov
std
cld
subl
jbe
dec
testb
mov
lcall
movsl
daa
inc
into
js
lods
jbe
icebp
or
add
loop
clc
sbb
mov
jmp
xor
jb
cmp
jg
jne
rol
inc
or
nop
je
sbb
js
lret
addr16
fs
sbb
insl
js
bts
pop
inc
sbb
jg
or
sub
enter
pop
cmpb
cmpsl
std
out
mov
std
pop
scas
loop
cmp
xor
in
out
mov
mov
mov
imul
loop
lcall
and
adc
cmp
dec
sarl
mov
mov
cs
and
mov
gs
int3
and
inc
push
mov
ret
jb
scas
fstl
mov
ss
xchg
aam
pop
mov
inc
sahf
mov
jnp
ret
rcll
sbb
adc
push
scas
add
jp
jno
xor
aaa
mov
push
pop
out
sahf
mov
mov
pop
pop
sbb
cs
xchg
xor
in
lea
cwtl
clc
jmp
jle
daa
lcall
dec
pop
adc
in
add
jne
scas
push
mov
rol
gs
push
adc
mov
test
push
frstor
mov
hlt
jno
cmpsl
mov
xlat
push
jp
in
inc
adc
cmpsb
xchg
jmp
js
hlt
shlb
mov
xlat
cmpsl
sbb
inc
mov
push
loope
xor
mov
imul
lahf
cmp
inc
cmp
scas
lret
push
inc
rsqrtps
nop
rclb
jge
imul
pop
jge
ret
aaa
add
sti
loope
pop
adc
cmp
xchg
orb
push
out
inc
shlb
leave
andb
push
int3
add
lahf
addr16
leave
adc
mov
xlat
mov
into
icebp
movsb
ja
xor
cld
in
xchg
dec
cmp
sbb
fs
lods
das
and
mov
rcl
movsl
icebp
fisttpll
inc
add
pop
popa
lock
xchg
bound
cmp
lock
stc
mov
lea
into
mov
xchg
jecxz
xchg
movsb
pop
fwait
add
mov
lret
aam
imulb
add
aad
shl
push
push
add
std
cmpsb
adc
xchg
addr16
leave
sub
insl
leave
sbb
mov
add
cmp
mov
xchg
cmp
or
cmp
push
bound
les
out
cmp
adc
cld
aas
out
mov
popf
in
inc
push
mov
orb
adc
subl
cmp
ret
cs
xor
popa
pop
clc
dec
cmpl
es
inc
out
mov
xchg
push
mull
mov
or
notb
in
cwtl
xchg
or
loop
adcb
jnp
push
and
test
mov
cmc
mov
sub
cmp
xchg
bound
push
sbb
xor
sub
push
and
or
xor
sti
push
jo
cltd
stos
push
xchg
xchg
and
xor
or
mov
lret
dec
pop
js
ja
and
sub
stos
jmp
and
mov
nop
cmp
sub
sbb
popa
mov
push
ljmp
pushf
adc
fs
xchg
loope
and
pop
pop
lret
int
cmp
lods
inc
or
or
insl
dec
inc
dec
fs
popa
lock
aas
jbe
adc
cmp
into
push
pop
sbb
cmp
lahf
pop
push
push
testl
je
or
lea
lea
mov
loopne
mov
xchg
test
fcoml
hlt
int3
add
mov
push
packssdw
fs
and
sub
add
or
jp
dec
inc
mov
xor
add
cmp
xchg
xchg
in
notl
lock
push
lods
and
pop
push
mov
xchg
scas
addr16
ret
in
jge
mov
out
jb
mov
das
int
xchg
out
mov
cmp
lcall
or
insb
adc
insl
pop
push
inc
fisttpl
mov
popf
loop
imul
add
and
out
mov
sub
dec
cmp
inc
imul
in
pop
pminub
shrb
mov
ret
js
sbb
roll
out
addr16
gs
add
mov
xor
xchg
xlat
jo
dec
and
sarl
adc
pop
push
adcb
ss
adc
test
pop
push
xchg
jg
lahf
cmp
jbe
std
mov
mov
in
mov
test
leave
stos
dec
out
lret
adc
mov
hlt
cltd
mov
sbb
push
and
mov
xchg
adc
outsb
fsubrs
xlat
and
adc
cmp
xchg
cld
adc
pop
dec
pop
pop
or
stc
xchg
mov
jae
sbbl
outsl
xchg
icebp
jmp
inc
dec
mov
cmc
jecxz
scas
mov
outsb
xchg
push
pop
in
dec
cs
and
sahf
jl
popa
stos
fwait
into
push
adc
std
mov
xchg
and
pop
addr16
mov
and
sti
loop
nop
jle
jmp
sub
inc
dec
mov
mov
scas
ret
lods
fwait
pusha
fidivl
pop
pop
repz
mov
in
xchg
into
mov
jns
stos
cmp
inc
cwtl
adc
mov
pop
fwait
or
push
inc
pop
cmp
imul
fdivs
xchg
enter
loope
and
insb
loop
sbb
dec
int3
cmp
cvtps2pd
push
inc
mov
push
adc
imul
mov
add
mov
sub
xor
mov
pop
test
scas
adc
push
inc
fadds
cli
daa
cmp
outsb
mov
das
cltd
in
mov
insl
jg
in
dec
int
mov
mov
outsb
add
xchg
mov
iret
popf
pusha
outsb
or
jecxz
mov
inc
pop
mov
push
inc
xor
scas
dec
sti
and
cmp
sti
sub
push
rcll
out
dec
pop
push
jbe
pop
sub
adc
inc
xlat
loop
and
jb
ret
stc
mov
inc
out
scas
insb
jnp
mov
sarl
out
imul
mov
sbb
ds
mov
je
mov
fdivs
push
pop
repnz
sbb
push
insl
rorl
fwait
lock
add
iret
popf
fldcw
popa
out
es
stc
pop
sub
sub
or
xor
mov
and
jno
shll
pushf
jbe
sahf
inc
xor
inc
or
ds
popa
xor
into
jl
xchg
lret
or
jl
inc
and
shll
mov
sarl
xor
xlat
jne
arpl
aam
xor
orl
mov
addr16
cs
xchg
test
insl
in
lahf
dec
xchg
call
mov
insl
gs
push
mov
mov
xchg
dec
mov
test
scas
fsubs
push
sub
cld
in
imul
mov
add
ljmp
jne
pop
mov
ret
out
sbb
push
lret
xchg
loopne
lahf
mov
cwtl
cwtl
push
shrl
sub
lea
sbb
outsl
fs
int
dec
xchg
jno
push
sarb
arpl
hlt
mov
jg
xor
lods
cmp
lds
jmp
jo
outsl
add
cmc
push
test
lcall
pusha
gs
pusha
mov
add
xchg
pushf
popa
fs
mov
repz
lret
ss
addr16
pop
mov
int3
adc
xchg
sub
xor
jne
push
and
jb
fwait
jle
adc
cmpsb
jnp
insb
rcll
jecxz
sbb
xchg
pop
sbb
lea
push
ret
or
mov
jg
mov
adc
mov
or
push
in
xchg
aad
movsb
pop
pop
sub
test
lahf
mov
adc
jno
adc
je
xor
mov
xchg
push
pop
pushf
outsb
xchg
in
mov
aaa
call
addr16
xor
xchg
mov
xchg
dec
fsubs
cmp
push
imul
leave
dec
jge
mov
push
popa
imul
andl
push
pop
xchg
jle
adc
movsl
subl
or
jno
aas
fwait
and
test
mov
bound
test
rcll
mov
ss
daa
xchg
idivb
cmp
bound
mov
rcrl
popa
test
stos
clc
push
enter
lock
repnz
ljmp
push
add
stc
xchg
sbb
sub
insb
mov
ja
inc
mov
in
xor
aas
mov
jle
sarb
pop
and
popa
pushf
cmp
mov
jno
test
data16
imul
inc
jne
scas
cmc
out
leave
loop
sub
jg
mov
ret
cmp
inc
cmp
lret
add
mov
jp
or
aas
stos
or
jns
push
mov
mov
mov
cmp
add
das
aad
xor
inc
fsub
loop
enter
imul
popl
push
sbb
pop
sbb
mov
mov
cld
add
xchg
into
xlat
pop
xlat
inc
xlat
and
pop
push
mov
sbb
mov
outsl
shll
or
cwtl
aaa
sub
or
mov
xchg
jae
mov
inc
and
test
sub
mov
mov
repz
sbb
mov
lahf
mov
lods
out
push
add
xchg
mov
rcrl
dec
cmp
mov
fs
sub
jb
mov
cld
jle
and
fistpll
and
aad
roll
je
pop
out
mov
sbb
jmp
jle
pop
ja
push
movl
aaa
xor
das
lahf
pop
arpl
or
xchg
ret
shr
mov
mov
gs
pushf
int3
pusha
pop
push
mov
fs
sarl
mov
insb
mov
es
cld
shlb
sub
sahf
stos
sahf
aaa
es
sub
stc
sbb
addr16
pop
push
dec
mov
fists
push
jg
out
push
jbe
lcall
xchg
sub
gs
mov
cmp
xchg
aam
inc
and
pop
cld
cmp
nop
jne
add
xchg
subl
loopne
shll
push
pop
mov
xchg
jbe
xlat
inc
xchg
mov
adc
fiaddl
ds
jecxz
xchg
push
jg
or
inc
adc
sub
bound
cmp
test
inc
push
pop
sub
sbb
rcll
arpl
mov
sbb
scas
mov
shlb
bound
cld
xchg
jne
nop
lahf
inc
daa
dec
add
dec
adc
pop
pop
insl
movsl
push
mov
sub
mov
mov
adc
mov
loopne
and
test
or
adcb
pop
jb
mov
dec
mov
fisttpl
push
mov
mov
jge
jle
outsl
push
fsubs
aas
test
imul
sub
xor
iret
clc
fsub
nop
xchg
mov
aas
mov
pop
sbb
andb
stos
mov
or
imull
jb
inc
stos
bound
adc
inc
and
fsubp
jo
sub
aas
nop
push
xor
andb
loopne
adc
popa
pop
pop
stos
dec
es
mov
sbb
pusha
std
sub
stos
dec
rcrl
cmp
lods
jae
adc
mov
add
sub
add
daa
das
inc
inc
push
sub
cmc
xchg
push
sahf
std
sti
movntps
outsl
sub
mov
or
pop
ja
dec
lcall
shl
xor
xor
xor
jae
dec
mov
xor
jns
mov
adc
and
cmp
dec
icebp
loopne
cwtl
sti
mov
inc
dec
and
mov
sbb
orb
xchg
and
cmpsb
add
xchg
mov
push
cmpsb
add
sbb
ret
addr16
inc
in
push
mov
mull
sbb
and
testb
dec
jo
aaa
push
pinsrw
or
dec
mov
scas
push
dec
fwait
lret
add
jp
loop
int3
ja
and
mov
pusha
xor
inc
nop
test
popa
movsb
or
fs
inc
mov
pop
int3
inc
lret
mov
mov
xor
push
pop
mov
movsl
je
cmp
pop
xor
bnd
bound
rcrl
sub
push
ret
fistpl
fdivr
jo
in
push
or
xchg
mov
push
xchg
ja
jo
in
js
mov
outsl
fcmovne
fs
jae
push
dec
mov
ficompl
dec
mov
xchg
mov
shlb
lret
add
jg
stos
pop
add
inc
xchg
adc
inc
mov
cmp
and
mov
push
dec
xchg
fsubrl
xchg
arpl
int
into
rcr
popa
mov
push
fmull
jo
and
cmp
insl
daa
xchg
stos
test
lods
xchg
cs
push
jno
int3
in
push
out
xorb
xor
dec
dec
aad
dec
xor
mov
mov
lcall
cli
xor
in
mov
divl
pop
pusha
jb
add
mov
icebp
xor
inc
outsl
push
sub
sahf
jne
imul
nop
sbb
or
pop
nop
push
adc
cld
and
lock
pop
shrl
jo
xchg
xor
mov
add
dec
push
fs
popf
call
test
icebp
sbb
fisttpll
sbb
fdivs
sbb
or
mov
jmp
dec
out
mov
pop
out
xchg
and
xor
les
jo
int
in
cmc
dec
push
mov
mov
rolb
insl
fildl
sub
fistl
push
lock
test
insb
sub
cld
inc
inc
jmp
push
into
pop
stos
stc
loope
jmp
mov
andb
mov
inc
pop
xor
arpl
jp
jns
pop
call
sarb
ljmp
jae
or
enter
jp
fdivrs
push
push
je
xchg
xchg
int3
pop
mov
mov
popa
xor
incl
jno
test
add
sahf
lret
inc
or
mov
fldenv
xchg
cmp
xchg
dec
mov
movsl
jge
adc
imul
and
sbb
enter
in
push
mov
cmpsl
jl
je
into
sbb
cmp
xchg
adc
pop
pop
lahf
ds
push
js
lahf
dec
imul
loope
xor
dec
les
jl
or
push
jp
adc
ret
nop
or
push
mov
adc
push
cltd
add
std
sub
stos
lods
mov
inc
arpl
mov
xor
aaa
pop
mov
add
and
test
movsb
cltd
jp
ds
and
pushf
mov
repz
pop
leave
xlat
dec
cli
out
push
int
and
call
in
or
lds
fildl
jle
test
xchg
clc
movsl
inc
fmull
cmp
cmpsb
fcomi
jns
lea
sahf
dec
cmp
stos
leave
loopne
jb
and
xchg
arpl
push
imul
ret
aam
loopne
xor
and
gs
mov
dec
sub
and
outsl
jo
repnz
es
aad
je
mov
dec
inc
sbb
fdivs
cltd
outsb
jne
das
mov
shr
and
adc
xchg
push
cmp
iret
stos
shll
dec
aas
psllq
xchg
in
push
xor
and
pop
in
and
fidivl
sub
sub
aam
hlt
or
ss
add
stos
mov
jb
add
push
sub
and
pusha
xchg
mov
stos
mov
int3
mov
jle
add
ds
inc
push
mov
sub
incl
jecxz
sub
mov
stos
test
dec
test
dec
sub
mov
adc
mov
rcll
mov
mov
push
movsb
mov
fbstp
sub
mov
js
and
out
sbb
sub
shl
out
xchg
push
int
cmc
movsb
mov
dec
push
and
push
push
test
shl
imull
inc
mov
xchg
or
cmp
xor
ret
sti
mov
push
cmpsl
mov
and
rolb
add
pop
adc
ljmp
inc
push
dec
sub
stos
mov
mov
mov
xor
dec
cmp
daa
aad
xchg
cli
jge
pusha
insl
push
xchg
jbe
cmpsl
mov
fsts
pop
mov
mov
cmp
or
cmp
andb
jg
sbb
shrb
cmpsb
mov
xchg
push
or
dec
mov
out
jmp
sbb
dec
outsb
leave
inc
mov
rcll
jp
int
out
icebp
adc
and
add
jbe
push
jg
das
sbb
push
sub
int
adc
mov
sub
push
repnz
add
incb
lret
lahf
add
sub
jbe
mov
push
jbe
and
push
add
jmp
fistpll
mov
andl
jne
out
test
fmull
cmpsl
imul
inc
adc
xchg
xchg
dec
mov
mov
cld
or
cmp
add
mov
gs
cmp
and
popf
mov
daa
sub
mov
pushf
ss
call
mov
sbb
xor
mov
outsb
xchg
fiadds
mov
add
add
scas
or
out
cmp
push
and
inc
repz
rcl
bound
push
popf
stos
pop
dec
mov
dec
inc
inc
xchg
jmp
lods
or
mov
xchg
jle
jae
mov
shll
sub
addr16
shl
movsb
mov
jmp
hlt
xor
stos
insl
js
mov
add
icebp
orb
jecxz
mov
adc
push
in
sub
mov
test
jle
inc
cmp
cltd
btr
push
push
sub
in
inc
push
test
out
aam
sub
jl
ljmp
clc
add
in
test
xchg
cld
in
or
repz
add
adc
mov
popa
jmp
sub
jmp
sti
lret
jbe
jb
fs
lahf
popa
sub
jno
jle
mov
push
sub
lods
sbb
xchg
sbb
xchg
xchg
add
ja
arpl
jbe
push
cltd
imul
cmp
enter
into
push
mov
sbb
inc
loop
push
loope
cmp
lcall
adc
lcall
outsb
flds
mov
inc
add
jg
in
jo
mov
mov
mov
into
dec
setl
enter
pushf
out
mov
stos
inc
sbb
fldcw
lods
dec
std
sub
call
stos
scas
stc
bound
ret
into
pop
rcrl
xchg
pusha
std
andb
popa
mov
mov
and
test
push
inc
sub
add
jecxz
and
pushf
dec
mov
xchg
ss
je
adc
adc
pop
fwait
adc
add
mov
aas
mov
jae
subb
shll
add
sub
or
lock
ret
xor
xor
popl
add
aaa
leave
jnp
push
pushf
aas
inc
leave
pop
lret
cmp
movsl
mov
or
dec
cltd
cld
pushf
imul
xchg
adc
movsb
subl
and
xchg
jecxz
xlat
xchg
sub
inc
and
cmp
jnp
xorb
xchg
cmp
inc
or
push
enter
sbb
je
movsb
popa
inc
mov
andl
ss
leave
or
lret
scas
roll
mov
mov
inc
xchg
in
inc
decb
icebp
fcmovbe
xchg
stc
or
jne
inc
dec
push
push
lock
and
add
repz
mov
cmovb
xchg
push
ja
inc
call
shrb
hlt
imulb
or
stc
mov
add
ljmp
cmp
test
push
jg
fdivrl
rcrb
rcr
sti
cmp
push
cmp
insl
stos
mov
jnp
fdivs
xchg
push
notl
loopne
in
aam
divb
repnz
arpl
ljmp
popf
cltd
adc
pop
mov
arpl
mov
xlat
sbb
cmpsb
rcl
jl
stos
xor
push
sbb
cmp
sbb
insl
and
std
inc
pop
jecxz
in
jge
ret
sarl
mov
xor
lea
sbb
sbb
push
sub
ret
dec
rorl
arpl
icebp
sub
popf
xchg
push
mov
mov
or
enter
popf
movsl
ds
dec
jp
mov
mov
ror
or
fimull
dec
js
sub
mov
jl
pop
ss
ret
cmc
loope
movsl
xchg
imul
dec
adc
mov
inc
xchg
sbb
ss
cltd
bound
or
ja
push
pop
popf
push
nop
pop
jne
divb
mov
and
js
fisttps
iret
cmc
lret
scas
push
mov
mov
pop
stos
daa
es
fstpt
cs
adc
je
mov
pop
sarb
mov
xor
repz
pop
adc
ficomps
pslld
cli
mov
jb
mov
mov
adc
cmpsb
hlt
in
cld
jle
mov
test
add
test
out
test
fwait
inc
mov
gs
push
cmp
jecxz
lret
into
push
lret
test
popf
mov
fstpl
mov
jp
push
pop
jge
inc
cmp
inc
jp
adcl
imul
nop
stos
loopne
push
or
sbb
scas
or
test
inc
pop
lcall
pop
pop
pushf
stos
sbb
popf
dec
iret
daa
push
jg
in
mov
ret
in
hlt
ljmp
add
sub
into
pop
lods
imul
xchg
out
jne
pop
into
push
fcmovnb
mov
push
and
bound
push
pop
jns
out
sbb
pop
add
lcall
pop
adc
ja
pop
hlt
ja
xchg
enter
xchg
pop
je
cmpsl
inc
and
dec
fdivp
jne
or
inc
fwait
push
jb
dec
out
stos
cmp
arpl
inc
test
iret
cmpl
dec
fsub
fimuls
xchg
mov
loope
loop
daa
sar
std
test
lret
andl
xor
scas
jg
inc
mov
mov
push
lret
mov
leave
lcall
out
sti
mov
fld
mov
sub
mov
sub
jg
das
cmpb
push
mov
xor
dec
movsb
jg
rcl
outsl
inc
iret
aaa
xchg
jae
pop
dec
stos
in
in
scas
ja
mov
std
pushl
sub
sbb
arpl
adc
movsl
push
sarb
fcomip
mov
push
or
movsb
fdivl
sarb
and
out
xchg
cld
outsb
mov
and
inc
les
cmp
daa
mov
cmp
cmp
push
or
ror
pop
or
lock
pop
and
dec
cmpsl
rclb
xchg
ja
inc
push
addl
icebp
inc
sbb
ds
loopne
adc
mov
cmp
faddl
sahf
pop
adc
clc
aam
sbb
icebp
inc
push
push
leave
sub
movsb
sahf
popf
adc
mov
lds
inc
mov
fimuls
dec
inc
js
sti
push
and
or
mov
add
es
cltd
xor
test
loop
xor
scas
mov
jno
sub
mov
mov
ret
ljmp
es
iret
inc
js
push
pop
fsubl
addb
pushf
das
xor
push
jl
jno
scas
les
into
ljmp
or
lods
jnp
pop
mov
sarb
ret
stc
adc
mov
les
cmp
icebp
add
fldcw
incb
testl
mov
cmpsl
push
mov
sbb
adc
ss
inc
scas
ss
shll
jecxz
mov
add
rcr
popa
push
jp
stos
lds
test
andl
or
pop
or
or
cli
lock
sub
fwait
out
lods
sahf
out
loope
arpl
mov
cs
sbb
adc
imul
push
dec
mov
pop
divl
mov
mov
shrl
push
push
std
push
mov
jg
xor
add
fsubrl
stc
pextrw
mov
pop
ret
es
filds
mov
stc
jle
test
fmull
fidivs
xorl
add
into
pushf
or
invlpg
pop
cmp
mov
xlat
adcb
ficoml
push
nop
pop
imul
push
xor
mov
sbb
daa
icebp
cltd
ret
ret
xor
fsubr
out
cltd
pushf
adc
shll
rclb
fcomps
mov
or
sub
lock
xchg
cmp
outsl
in
pop
xor
push
jmp
or
pop
push
cs
jecxz
cli
xchg
shrl
popa
cli
mov
adc
jge
insl
popf
xchg
or
mov
inc
and
sub
test
push
leave
out
icebp
or
out
or
mov
or
or
hlt
add
stc
dec
lea
sub
mov
mov
and
push
xor
scas
sub
lods
fildl
ja
movsb
mov
fistpl
rorb
jno
jno
movsl
aam
sbbl
inc
lds
mov
push
push
mov
cs
jp
jge
or
adc
push
adc
movsb
mov
les
sbb
mov
mov
cs
pop
and
mov
loope
xchg
or
in
sub
es
sahf
mov
xchg
mov
outsl
jb
ret
sub
dec
mov
cmp
pop
movsl
out
and
outsb
xor
mov
xchg
mov
push
imul
pop
mov
cmp
mov
and
notl
dec
dec
outsl
aaa
aas
mov
mov
shll
mov
jge
push
push
lds
rcrl
push
loope
push
mov
in
fnsave
jecxz
dec
arpl
bound
jge
dec
addb
leave
jmp
fs
mov
mov
jl
xchg
pop
imull
sbb
sbb
pop
scas
cltd
mov
dec
enter
lea
pop
xor
jae
cmp
jge
push
js
out
outsb
dec
jmp
sarb
imul
add
lret
insl
sbb
push
ss
and
inc
movsl
pop
dec
leave
inc
les
mov
sar
bound
sahf
loopne
test
mov
loope
push
ja
dec
data16
xchg
and
mov
mov
in
push
xchg
xor
jb
mov
jbe
cmp
pop
cmpsl
push
imul
ja
mov
outsl
pop
mov
pop
hlt
cmp
or
sub
dec
pop
imul
enter
sub
sub
pop
int
inc
xor
xchg
pop
jge
jb
in
sub
fstpl
push
pop
les
xchg
jge
xchg
sub
jne
adc
rorl
adc
pop
jmp
mov
lock
mov
sarl
popf
mov
mov
and
add
aam
pop
add
fwait
jp
sub
int
xchg
add
mov
mov
dec
adc
xlat
test
inc
inc
movsb
rcr
mov
jmp
jnp
dec
adc
hlt
lds
sbb
dec
jmp
fs
outsl
xchg
jbe
sbb
push
in
and
jg
hlt
jbe
push
outsl
dec
fiadds
enter
pushf
loopne
test
lret
getsec
in
mov
ret
inc
pusha
inc
pop
bound
adc
push
jp
fdivl
fsubrp
gs
jmp
cmp
les
int3
test
xchg
insl
fst
into
sahf
fdivrl
push
dec
xor
out
loop
sub
adc
bound
mov
inc
pop
mov
imul
cmpsb
push
push
cmp
imul
push
movsb
xor
loop
pop
cmpsl
add
scas
or
sti
push
adc
sahf
cmpsl
mov
shlb
aaa
das
or
out
insl
xchg
push
popf
movsl
je
aas
mov
or
sub
pop
data16
pusha
sti
pop
sti
aam
rcrb
adc
fwait
pop
lock
xchg
mov
nop
sti
and
push
adc
sub
sbb
aas
xor
movsb
ljmp
stc
dec
mov
mulb
mov
sbb
aam
mov
sbb
insl
movsb
push
out
out
adc
cmp
nop
jle
inc
push
mov
xchg
loop
aam
push
jo
adc
loopne
inc
mov
adc
mov
out
mov
je
dec
pop
pop
jo
icebp
scas
cli
pop
popf
cmpsl
cmp
mov
stc
push
aas
cmc
pop
aas
sti
sqrtps
cmpsb
sbb
mov
dec
pushf
push
cmpsl
and
xlat
enter
mov
mov
push
gs
into
fdivrs
scas
aas
repz
fs
lock
test
test
push
aam
ljmp
push
negl
pop
in
andb
adc
call
pop
stc
shlb
sub
js
or
or
loope
and
cmp
push
xchg
push
mov
fisubrl
fs
push
add
loope
mov
in
popa
push
fdivr
inc
les
pop
nop
xchg
adc
mov
mov
scas
sub
xor
imul
push
fidivl
test
or
scas
push
push
shll
sub
pop
xchg
sbb
mov
pop
sbb
out
fnstcw
cmp
xor
xor
push
xor
imul
fs
inc
jge
xchg
xchg
adc
pop
ficoms
push
add
cmp
push
shlb
rorb
xchg
mov
jae
add
jl
stos
add
xchg
mov
mov
xchg
pop
stos
sbb
test
jb
stos
test
ds
lret
fdivl
mov
xor
add
les
adc
sub
and
cwtl
sub
xchg
xchg
sbb
je
inc
fisubrs
mov
pusha
ss
xor
xchg
mov
add
test
push
lds
pop
out
dec
cmp
pop
mov
adc
mov
jo
add
insb
dec
xchg
lret
ds
jle
inc
mov
sub
in
arpl
dec
jnp
sbb
jb
add
jo
sqrtps
int3
std
in
pop
rcrb
les
fistl
xor
aam
orl
mov
subb
aaa
inc
fs
mov
jmp
in
test
pop
mov
push
decl
aad
cmp
jmp
and
icebp
std
mov
mov
fcoml
inc
mov
lds
test
clc
shlb
jns
or
aad
std
dec
hlt
xchg
or
or
pop
pop
mov
lret
add
jge
hlt
clc
jbe
inc
call
mov
nop
xchg
xchg
and
or
cmpsb
sti
lea
cmp
inc
inc
icebp
push
mulb
dec
add
aas
dec
push
mov
xchg
pop
movsl
or
xor
dec
test
jmp
movsl
test
popf
xchg
ret
xlat
mov
mov
sbb
mov
jno,pt
push
in
mov
lea
add
adc
pusha
pop
bound
pop
add
mov
push
add
aam
aad
push
dec
call
addr16
popf
jb
outsl
inc
sbb
inc
out
or
ss
cld
mov
mov
xor
or
pop
dec
dec
aas
testl
xor
mov
cmpsl
mov
xor
sub
xchg
pop
jns
pushf
ret
add
xor
stos
inc
test
in
xchg
les
loope
fdivl
sbb
clc
iret
xchg
pop
mov
mov
mov
xchg
jle
rcl
fwait
loopne
lret
shrb
pop
xor
sub
mov
outsb
ja
jg
movsl
pop
dec
push
xor
outsl
sbb
xchg
mov
push
push
sub
xchg
jp
mov
xchg
and
inc
icebp
dec
loopne
pop
jg
popf
pusha
sbb
fs
add
fisttps
daa
rolb
daa
test
push
adcl
cmp
std
popa
lea
sar
or
ficompl
lret
xor
ja
ljmp
pushl
pop
mov
subb
xchg
test
adc
cs
repnz
lcall
mov
js
sahf
pop
movl
sbb
cltd
movsb
cmp
addl
sub
in
cmovns
mov
das
mov
sub
inc
mov
mov
icebp
cmp
gs
stos
mov
clc
mov
ret
xchg
cli
adc
aas
imul
jb
xchg
test
xchg
jp
jecxz
and
push
fsts
or
rcr
sti
xlat
sub
lret
sub
mov
ss
insl
fs
pop
cmpb
or
pusha
in
cmp
jle
out
and
rcrl
ret
mov
xlat
push
mov
in
cmpsl
sub
add
push
pop
mov
cmpsb
test
adc
call
cmp
loope
jne
aaa
andl
push
mov
add
sub
sbb
test
xor
mov
xor
in
xchg
test
in
pusha
mov
pop
jmp
arpl
pop
cwtl
xor
adc
not
xchg
dec
cmp
and
hlt
fwait
test
aas
je
xor
stc
imul
add
shlb
inc
bswap
pop
sti
adc
push
mov
dec
ljmp
stc
sbb
incl
aaa
outsl
jmp
inc
ja
jnp
sbbb
push
pop
insb
loope
inc
stos
aaa
pop
mov
inc
or
test
mov
mov
jl
sbbl
xchg
push
bound
xor
sub
scas
or
lahf
add
aas
cmpsl
xor
ljmp
xor
into
mov
ret
push
insl
int
mov
or
xchg
push
iret
sbbb
sbb
ljmp
repnz
stos
lods
add
inc
aad
and
add
incl
xor
clc
push
fs
jecxz
mov
or
pop
cli
mov
mov
mov
enter
adc
mov
enter
mov
inc
sbb
call
call
iret
fcoml
loope
cmp
jge
movsl
ja
sti
mov
jle
cmovl
int
or
movsl
mov
stos
pop
aas
cmc
aas
adc
push
loope
or
dec
movsb
mov
loope
pop
out
pop
xorl
or
enter
inc
rcll
imul
xor
pop
dec
xchg
jg
mov
lahf
rcrl
pop
sbb
push
rol
inc
subl
cmp
je
test
or
sbb
push
or
movsb
pop
add
les
or
pop
dec
push
add
sbbl
loop
das
pop
cltd
in
out
sbb
ds
loope
mov
xchg
mov
pusha
test
test
in
xor
dec
mov
or
xchg
push
inc
js
jp
les
iret
ret
cmp
les
iret
and
adcb
mov
or
loop
cmp
bound
cwtl
ficomps
movzwl
mov
cmp
sbb
push
daa
adc
jle
adc
js
jne
or
ljmp
dec
in
mov
mov
repnz
inc
aaa
imul
loopne
sbb
mov
call
mov
lret
adc
pop
les
xor
imul
pusha
cmpl
or
sub
xchg
cmc
and
adc
cwtl
push
mov
and
cltd
dec
mov
je
int3
imul
loopne
dec
lahf
cmp
and
jl
xchg
test
fdivrl
lea
cmpl
movsb
add
aam
or
imul
mov
and
fwait
mov
les
dec
xchg
mov
pop
jb
lods
mov
xor
inc
lds
add
mov
cmc
gs
lcall
pop
daa
cld
sub
jmp
mov
rcrl
sub
xor
loope
pusha
out
xor
mov
lret
push
mov
cmc
ficomps
std
es
xor
mov
push
iret
outsb
add
sti
outsb
dec
xchg
repz
movntq
push
out
lds
cmpb
bound
in
movsb
and
or
mov
mov
cmp
imulb
jo
insl
icebp
popf
fcmovne
mov
popf
jns
ss
rcl
push
mov
xchg
cld
sar
inc
mov
sbb
imul
push
sbb
inc
mov
outsl
roll
jge
lods
and
scas
fwait
sbb
adc
lret
pop
outsb
xorl
mov
push
shl
jne
in
sbb
mov
inc
dec
mov
add
mov
lock
leave
mov
xchg
cli
pop
and
xchg
hlt
fst
movsb
cmc
cmp
cmp
sub
ficomps
iret
inc
aam
lea
stos
int
xor
out
push
les
addr16
xchg
lock
jo
jno
fbstp
in
lea
dec
jp
cld
dec
or
out
setp
out
push
fcom
push
insl
ds
lahf
insl
ds
js
and
sahf
sbb
pop
das
or
mov
inc
pop
pop
mov
jecxz
push
jp
loop
repnz
cld
mov
and
cld
insl
mov
and
mov
or
fs
sub
negl
jmp
cmpsb
stc
in
and
ss
cmp
sub
sbb
and
fsts
icebp
add
jno
insl
mov
stc
ds
inc
loope
xor
out
in
insb
push
mov
jne
test
xchg
jne
sbbb
push
out
jae
rcrb
mov
xor
adc
mov
xorl
push
mov
pop
adc
cld
push
and
and
add
pusha
push
aad
jns
jo
fstl
fldl
and
xchg
sti
fmuls
lock
jae
adc
jno
pop
inc
mov
and
add
push
mov
mov
popa
push
adc
sbb
adc
inc
jne
icebp
push
push
pop
cmp
repz
dec
shl
in
dec
mov
sub
mov
adc
lds
lock
cld
cmp
pop
test
test
lods
jbe
out
mov
cltd
dec
pop
mov
inc
xchg
gs
in
cmp
add
hlt
inc
scas
mov
stos
push
and
inc
fmull
mov
movsb
lods
sarl
mov
aaa
shr
and
scas
jns
push
out
mov
cmp
mov
nop
add
ja
jbe
mov
pop
daa
ret
idivl
sbb
dec
rclb
icebp
sbb
lods
ss
add
sub
cmp
jp
or
out
shll
cmp
aad
divb
dec
sbb
mov
std
pop
sbb
fxch
mov
xchg
ljmp
mov
mov
addr16
inc
fistps
popa
cmp
adc
cmp
inc
out
jge
mov
xchg
and
cmp
mov
jge
es
and
je
sti
adc
inc
int
fstpl
popa
sub
jmp
mov
fcmovb
mov
lcall
or
cli
xor
pop
cmp
fs
inc
inc
fimuls
push
xchg
imul
mov
divb
mov
stos
or
cltd
mov
leave
mov
sbb
or
sub
xchg
mov
roll
aaa
movsb
iret
inc
mov
sti
push
int3
push
cwtl
je
cmp
adc
xchg
mov
jb
jle
sahf
push
lret
movsl
xor
adc
icebp
aaa
and
movsl
adc
aas
jl
push
mov
movswl
push
in
mov
stc
push
mov
call
mov
dec
inc
outsl
into
ljmp
mov
andb
dec
or
inc
mov
rclb
jge
cmp
enter
push
es
cmpps
inc
sub
inc
bound
sub
sahf
xor
sub
or
pop
or
add
ret
arpl
mov
divb
out
cli
push
outsb
in
pop
sub
mov
aas
inc
fs
xor
xchg
pop
cltd
jne
test
ds
scas
cmpsb
or
push
pop
add
inc
jmp
jne
dec
sti
sbb
pusha
mov
push
xor
sbb
adc
jmp
fsin
aad
scas
mov
cmpsl
in
cmc
mov
mov
jl
cmpsb
out
aad
pushf
insl
pop
cmp
adc
insb
movsb
cmp
sub
sbb
sahf
leave
imul
or
test
pop
jmp
push
or
lods
shrl
mov
sub
scas
adc
push
pop
and
out
cmp
push
cli
inc
dec
push
rcll
je
bound
je
int
mov
push
mov
jp
jmp
hlt
push
pusha
arpl
imul
fdivp
xlat
adc
add
cltd
xor
aas
xchg
nop
jl
cld
pusha
gs
gs
out
fnstsw
jae
js
testl
inc
xchg
mov
in
mov
movsb
mov
jo
mov
or
lds
fldcw
inc
sub
pop
add
jle
stc
stos
xchg
fmull
mov
sbb
aaa
xor
or
xchg
adc
stos
out
adcl
sub
and
cmp
inc
popa
cmpsb
out
push
jae
test
mov
mov
daa
push
outsl
popf
push
mov
inc
jne
fsubrs
les
push
icebp
pop
pop
sbb
push
inc
cmp
push
pushf
or
jecxz
into
pop
sti
push
mov
xchg
inc
sub
push
nop
cltd
pusha
jnp
sbb
out
movsl
xchg
or
loope
sahf
mov
inc
xchg
adc
lret
insb
pop
adc
dec
cmpb
push
mov
call
int
mov
xor
adc
rclb
cmc
jne
mov
test
mov
nop
sbb
sbb
and
pop
jns
dec
call
fldenv
xchg
ficoms
or
add
pop
pop
ret
cmp
push
fwait
enter
mov
gs
icebp
std
mov
aaa
push
adc
mov
inc
cmp
lahf
cld
and
pusha
pusha
xlat
into
mov
ret
pop
mov
notb
jno
pop
adc
arpl
in
imul
stos
mov
into
mov
cmp
ljmp
inc
lods
mov
fbld
inc
out
xchg
and
das
jne
inc
mov
xchg
mov
imul
rcll
inc
add
mov
sbb
mov
mov
bound
nop
ds
pop
mov
fwait
fmulp
enter
iret
xlat
or
sbb
decl
dec
outsb
and
addr16
mov
xchg
pop
sub
loope
cmp
jp
xchg
mov
dec
inc
xor
dec
shlb
mov
mov
das
cs
out
xchg
mov
push
xor
das
dec
push
pop
sbb
mov
xchg
jns
lret
lods
push
daa
xchg
mov
in
mov
xchg
test
iret
dec
add
pop
lahf
adc
cwtl
jg
in
xor
jle
into
cmp
aas
or
add
je
inc
in
fwait
mov
sub
sbb
jb
xlat
insb
cltd
jnp
fldl
in
push
movsb
aam
shll
xchg
adc
xchg
lahf
mov
pop
push
push
add
sub
or
mov
insb
lahf
lods
lret
in
mov
jnp
sub
inc
lret
add
pop
push
inc
cli
cli
test
adc
cltd
sbb
sti
pop
xchg
out
xchg
mov
jecxz
add
xchg
outsl
mov
mov
mov
jnp
adc
jne
and
rcrl
shrl
dec
shll
jecxz
sub
sub
or
stos
xchg
outsl
mov
mov
ret
pusha
jns
fcomps
fwait
push
je
pop
ds
dec
and
mov
testb
or
iret
jo
sub
and
adc
jae
ret
call
mov
insb
push
fldt
insb
out
lea
outsb
inc
subb
mov
sti
mov
sub
inc
ds
mov
inc
mov
cmp
push
mov
mov
and
bnd
jns
daa
scas
xchg
or
in
je
fstps
aam
pop
frstor
push
sub
sub
fildll
xor
imul
pop
ljmp
adc
pop
xor
int
imul
pop
int3
jbe
jnp
notl
or
mov
inc
shrd
dec
push
sti
mov
mov
fsub
mov
sti
xor
jl
addr16
in
jns
pop
xor
lods
fsubs
gs
cli
icebp
in
aaa
in
rorl
and
sahf
inc
lds
js
mov
mov
addb
jb
adc
xchg
or
inc
push
stos
cmc
inc
mov
daa
out
xchg
es
jp
jae
int
psraw
cmpl
int3
add
mov
xchg
loop
and
aaa
and
outsb
mov
add
or
dec
mov
mov
stos
inc
xchg
and
mov
shll
or
ljmp
inc
push
cmc
dec
cmp
in
outsb
jl
leave
cmp
mov
insb
and
rorb
jae
mov
and
cli
int3
mov
inc
shrb
inc
jp
fcomip
jge
frstor
jg
nop
mov
cwtl
add
adc
push
jmp
sub
push
inc
sub
mov
or
std
fisttps
daa
pop
jno
sbb
enter
lret
push
xor
push
je
push
or
sarl
inc
pusha
repnz
iret
xchg
loop
imul
xchg
test
imul
call
push
push
mov
lods
and
add
push
cmp
cmp
sbb
xlat
or
dec
mov
shlb
pushl
notl
pop
jne
addr16
cmp
insb
xchg
inc
outsl
mov
loop
loopne
repz
dec
dec
inc
inc
dec
jne
pop
ljmp
adc
int3
adc
xlat
sub
mov
add
mov
adc
dec
dec
xor
adc
call
dec
int
mov
mov
dec
outsl
stos
push
sub
roll
repnz
cmpsb
out
repz
popa
loopne
outsl
shll
stc
xchg
lods
mov
mov
or
repz
lods
sbb
adc
sub
loopne
sub
cmp
stos
outsb
inc
xchg
pop
mov
xor
mov
popa
ret
push
das
enter
into
jae
ss
push
mov
jbe
push
adc
push
xor
fwait
aam
add
test
jp
ss
call
loop
jno
pop
push
hlt
push
movsb
sahf
andb
cmp
test
je
out
jb
lods
lea
imul
and
xor
pop
aas
mov
mov
jnp
repnz
call
fildll
in
fcmovnb
adc
or
cmc
fldln2
xchg
or
lret
pop
mov
push
sbb
jns
pop
inc
fwait
mov
addb
jle
mov
push
pop
rcrl
pop
test
sub
add
mov
sub
filds
push
pop
add
cmp
xor
mov
mov
push
xor
mov
popa
push
arpl
sub
mov
out
imul
sub
lret
xor
dec
jl
arpl
mov
loop
mov
dec
fisubl
call
mov
ret
push
iret
fdivrp
mov
or
mov
das
mov
mov
movsb
cmp
jle
into
sub
and
bound
pop
fldenv
in
inc
pop
add
adc
add
jnp
push
rorb
fs
mov
cmpl
loope
mov
hlt
inc
leave
or
dec
fistpll
sub
mov
xchg
mov
sahf
push
sub
pop
lcall
sub
dec
mov
sub
xor
xor
push
outsl
inc
inc
ljmp
dec
fnstenv
push
jno
jne
jb
mov
stc
mov
pop
fmuls
cmp
mov
and
jnp
cmpl
popf
pusha
icebp
sti
movsb
jo
addb
push
push
pop
lcall
dec
sbb
enter
push
sub
jnp
pop
sbb
push
clc
in
push
adc
test
nop
fstpt
mov
out
insl
int
dec
dec
push
push
sarl
sub
pop
cmp
pop
xor
cmpsl
mov
mov
inc
adc
xorl
popa
pop
sbb
std
inc
lods
sbb
cmp
dec
sub
cmpsl
ret
fiaddl
jmp
lock
xchg
loope
lret
cli
push
sbb
jae
negl
lret
jnp
jno
xor
mov
lcall
pop
jnp
inc
dec
shrl
add
jnp
inc
lock
pop
es
out
push
push
pop
mov
adc
pop
sbb
sub
or
imul
call
dec
add
mov
cmpsl
loope
jmp
loope
adc
sub
jge
lahf
push
iret
out
mov
mov
stc
lea
in
pushf
cwtl
cmp
sbbb
add
xlat
xor
jmp
sbb
arpl
xor
ljmp
roll
mulb
lret
out
mov
je
jl
jle
andb
sarl
xchg
xchg
push
jae
es
cmp
push
push
push
je
test
scas
cs
loopne
inc
cmp
jbe
shr
pop
mov
jecxz
jmp
mov
push
or
mov
das
xor
xor
stos
mov
cli
add
dec
push
xchg
repz
adc
push
in
sbbl
inc
sbbl
sbbl
or
jo
sbb
inc
pop
ds
sbb
and
sub
mov
cmc
inc
repz
cmpb
mov
mov
dec
jl
xchg
mov
xlat
jecxz
dec
jno
mov
daa
movsl
push
pop
push
bnd
push
gs
test
das
xor
dec
add
cmc
jae
into
mov
xchg
iret
in
and
and
mov
jns
mov
inc
dec
add
cmp
data16
imul
sub
or
dec
fwait
cmp
pop
cmp
aam
sbb
jb
dec
rorl
xlat
leave
pop
and
sahf
mov
push
mov
and
cmp
xchg
sub
lret
pop
sub
inc
mov
and
or
imul
add
mov
lods
xchg
add
movsb
push
stc
aad
daa
stos
imull
jmp
sub
icebp
popa
cs
push
mov
xor
or
cmp
mov
leave
mov
lret
mov
mov
mov
cmc
sti
sbb
mov
mov
and
test
pop
or
cltd
rcll
js
fldl
lds
popf
jmp
inc
sub
mov
push
mov
and
cli
ja
mov
sub
fwait
stos
jbe
pop
leave
mov
popf
push
iret
pop
mov
dec
mov
mov
loop
data16
jne
xlat
mov
cltd
cmp
jne
xchg
mov
push
clc
ret
mov
xchg
movsl
pop
mov
add
xchg
cmp
mov
mov
movl
daa
cmc
sbb
push
mov
or
pop
scas
subb
dec
shll
inc
or
cmp
xor
cmp
pusha
or
mull
arpl
sahf
movzbl
leave
js
mov
les
xchg
xchg
clc
sbb
out
sbbl
mov
push
fldl2t
test
sub
or
repnz
js
fnstcw
xchg
js
pop
call
push
adc
test
add
jns
xor
push
or
dec
gs
out
or
jmp
or
out
int3
out
inc
test
leave
fcomps
push
dec
sahf
mov
lahf
push
cli
or
repnz
xchg
push
pop
add
cli
imul
ret
pop
inc
lret
add
dec
pop
mov
or
fisttpl
in
fisttpl
stos
bnd
sbb
push
jl
mov
pop
sub
cltd
cli
jmp
imul
cmp
loope
adc
lds
movsb
xchg
mov
sub
adc
add
jmp
add
xchg
pushf
lret
imul
pop
sub
push
sti
xchg
and
scas
and
jb
push
jbe
add
dec
push
pop
pop
inc
arpl
setge
or
push
jp
movsl
xor
test
daa
bound
in
aaa
aad
dec
adc
movsl
fcmovb
xchg
out
pop
jg
mov
mov
pop
jbe
jp
in
adc
loopnew
cmp
jmp
add
mov
xchg
fisttpll
jmp
loope
add
int3
aas
inc
ret
mov
inc
push
adc
push
ret
movsb
and
fists
cmpsl
jb
sbb
cli
push
aas
push
sub
jo
fnsave
sub
enter
ljmp
inc
mov
mov
mov
in
shll
into
lcall
les
and
push
fcoml
lret
dec
or
cmp
pushf
nop
xor
pushf
sahf
jno
or
pop
iret
mov
lds
add
xlat
mov
sub
lds
fnstenv
jns
jnp
jmp
cmp
mov
andl
cmp
mov
mov
int
inc
pop
add
xchg
das
mov
sti
std
cmpsb
or
fidivrl
lret
mov
fcoms
scas
mov
je
cmp
imull
add
fdivrs
xor
xchg
enter
jge
add
xor
negl
shll
push
inc
mov
lret
pop
adc
aad
sub
enter
xchg
or
shrl
adc
loop
cmpsb
adc
std
and
and
scas
jle,pn
fdivl
mov
jp
scas
add
and
shll
nop
faddp
lahf
lea
iret
and
daa
mov
mov
inc
scas
cmpsb
mov
mov
and
rolb
jecxz
or
jnp
fwait
dec
push
dec
stos
ss
push
sub
stos
fidivs
rcll
xchg
add
add
push
aas
inc
fstl
dec
jo
mov
js
pop
lret
movl
inc
nop
into
push
xchg
sbb
imul
into
sub
stos
decl
xabort
sub
mov
ja
sti
fidivrs
cmc
fdivs
inc
inc
add
sbb
cmovno
push
push
das
and
jecxz
mov
subl
in
jmp
push
jl
shrl
push
pop
pusha
es
inc
push
pop
bound
push
sahf
pusha
lock
sub
jb
inc
loope
and
faddl
cmp
pop
mov
je
js
sbb
sub
shr
and
loopne
into
iret
sarb
lahf
not
xor
mov
xor
out
rclb
adc
push
push
cltd
jmp
pop
mov
pop
fstpt
mov
adc
push
mov
pop
xchg
lods
decl
and
int3
in
rorl
mov
jecxz
cmp
push
sbb
movsl
xor
xor
lock
aad
es
xor
pop
mov
fisttpl
dec
xor
cmp
iret
dec
test
jge
adc
pop
insb
in
lret
shlb
mov
jbe
stos
test
add
fyl2x
sahf
aad
and
pusha
std
mov
aaa
jmp
popf
into
xlat
push
mov
pop
mov
fiadds
lock
clc
sub
shrb
pop
fwait
in
push
xchg
adc
jb
jge
jb
cmp
push
mov
sbb
movsl
test
lods
pop
cmpsl
rorb
mov
cli
or
xchg
xchg
push
fstps
ja
inc
data16
mov
repnz
add
lret
sahf
cwtl
insb
fwait
sub
cmp
test
push
daa
mov
inc
repnz
shlb
push
notb
lret
aaa
add
adc
cmc
lea
hlt
movsl
adc
inc
int3
scas
inc
and
xchg
dec
mov
sti
sti
das
dec
jb
dec
pop
outsl
jmp
xor
jecxz
jbe
stc
and
mov
out
or
leave
push
gs
popa
cltd
add
mov
cmpsl
pop
popa
loopne
inc
cli
mov
push
lods
sub
rcrb
out
nop
cwtl
stc
adc
test
insb
mov
adc
add
rcll
mov
mov
clc
roll
fcomi
sbbb
jp
jo
lds
push
pop
push
sbb
inc
xchg
mov
icebp
into
popa
aas
adc
ret
jg
sbb
pop
icebp
jl
add
mov
iret
shl
sub
cmp
rolb
mov
lds
mov
lods
mov
mov
andl
fwait
ret
in
push
xchg
ret
xor
cmp
or
push
das
adc
cs
ljmp
jl
nop
and
sbb
jl
stos
sub
sub
mov
mov
sub
gs
dec
les
aas
cmp
xchg
cmc
aaa
out
jo
aam
insl
cmpsl
gs
fxch
cmpsl
sbbb
sub
and
fistpl
ror
jp
pop
jbe
cmpsb
cltd
dec
out
nop
cmc
pop
jmp
insl
mov
sub
bound
sbb
sbb
mov
aaa
ss
rorl
or
fincstp
shlb
cmp
pop
pop
call
xlat
jb
ss
jmp
mov
pxor
inc
mov
adc
divb
mov
mov
jbe
dec
jbe
cmovo
test
mov
xchg
in
jbe
sbb
sub
pop
push
and
sub
sbb
aam
push
mov
test
lret
in
lret
jecxz,pt
dec
mov
and
rcll
xor
xchg
call
cld
lcall
sbb
ja
gs
mov
xor
jne
dec
aas
addb
iret
push
dec
imul
mov
xor
xlat
inc
and
stc
rcrl
and
xor
ret
das
or
scas
pop
stos
cltd
inc
xchg
fidivl
fcomip
mov
sarb
push
or
mov
add
loopne
adc
xchg
cmpsl
adcl
inc
dec
sbbb
scas
movsl
out
pop
fs
push
push
icebp
mov
mov
or
pop
pop
shr
rorl
fsubrs
jle
mov
jo
stc
fsubrl
sbb
repz
adc
inc
adc
out
rclb
xchg
pop
xor
outsb
clc
insb
xor
add
js
mov
testb
adc
jecxz
push
dec
sbb
add
leave
inc
jno
sub
add
xchg
add
adc
adc
inc
icebp
xchg
test
bound
cmpb
mov
int3
cmp
mov
imul
test
arpl
jecxz
mov
cmpsb
add
add
add
xor
xchg
push
movsl
dec
inc
adc
pop
cmp
mov
nop
and
sub
lret
int3
movsb
cli
fadd
cmc
cltd
mov
sub
push
es
add
int3
xor
in
cmc
std
xlat
sub
mov
cmc
mov
pop
push
stos
popf
ret
cld
testb
push
je
adc
push
aad
loopne
aaa
loopne
jne
std
push
sbb
enter
xchg
mov
nop
cmpsl
add
pop
insb
shrb
cmp
lods
fs
pushf
rorl
xor
adcl
mov
xchg
inc
cmc
pop
fcmovne
add
outsl
fwait
xor
mov
sarl
sar
cwtl
or
data16
push
test
dec
xlat
movzwl
not
sub
push
mov
mov
jae
xchg
push
and
hlt
jmp
cltd
push
outsb
pushf
xchg
popf
xchg
fstpl
fwait
mov
imul
push
pop
lds
adc
and
adc
inc
int3
sbb
jle
test
js
add
cmpsl
lret
pop
cmp
fldt
push
mov
mov
stos
and
neg
inc
scas
push
ja
imul
inc
sbb
pop
out
sahf
push
in
cmp
or
add
xchg
mull
or
dec
lods
lahf
sti
jb
pop
push
cmp
popa
aas
jns
loope
test
pop
std
dec
pop
dec
lret
in
js
cmp
push
pop
inc
je
mull
cmp
inc
lock
fistpl
sub
shrl
ljmp
aaa
add
xchg
dec
scas
int
in
fsubrs
faddl
xchg
add
xchg
xchg
loop
dec
stos
movsb
dec
push
icebp
mov
cmp
jecxz
jecxz
std
pop
int3
inc
adc
or
or
lea
and
clc
flds
add
shlb
cld
arpl
cmpl
shrb
insl
pop
xchg
add
jo
or
or
and
push
outsl
ja
adc
stos
sbb
iret
jp
sbb
or
adc
mov
and
data16
sbb
icebp
iret
pushf
add
enter
andl
loope
jle
jl
cli
xor
pop
hlt
clc
add
xchg
das
or
bound
dec
loopne
sti
pop
mov
lcall
decb
mov
movsl
js
mov
cmp
repnz
mov
jnp
xchg
mov
loope
mov
stos
outsl
mov
mov
add
add
xor
fsubs
pop
das
es
mov
psubusb
iret
lahf
test
rclb
add
pop
rdpmc
push
imul
add
push
fstpt
lods
insl
es
das
dec
pop
jnp
fldenv
movsb
xchg
ds
sub
stos
xlat
xchg
in
pop
xor
and
mov
mov
aam
testl
sub
das
push
loopne
nop
out
cmp
dec
movsb
ljmp
mov
stos
mov
xor
cmpsb
mov
cltd
lret
add
dec
add
cmp
jmp
sti
lret
pop
mov
push
add
pop
cmc
inc
shrl
orl
outsb
or
cmp
push
nop
cmp
incb
je
cmp
adc
outsb
dec
xor
and
pop
lock
cmp
cmp
mov
xchg
cmp
pop
mov
mov
sbb
jg
insb
imul
insl
fidivrl
in
jbe
gs
scas
pushl
mov
repnz
mov
and
inc
mov
in
jmp
pslld
mov
ss
cmovo
dec
push
arpl
cli
cmc
inc
mov
pop
mov
icebp
xor
push
test
push
cld
dec
arpl
repnz
inc
out
and
lea
scas
arpl
add
scas
xor
xor
push
push
sbb
sub
mov
fcompl
imul
addl
pop
fisubrs
dec
loop
cwtl
aas
movsb
out
sub
inc
loop
jae
test
mov
pushf
sbbb
push
into
and
pop
lea
jb
add
call
bound
adc
adc
bound
mov
xchg
mov
sbb
push
mov
int
notl
rorb
daa
lea
lcall
mov
out
mov
lret
ja
cmpsl
mov
in
sub
jno
push
push
sbb
fcoms
cmp
inc
outsb
mov
ljmp
mov
pusha
push
mov
fwait
and
xchg
fistpl
push
inc
mov
call
ds
and
push
pop
pop
xchg
mov
leave
xor
lret
fcoml
xlat
test
xor
push
in
mov
pop
jmp
jb
divb
repz
sbb
sub
fistps
xchg
mov
or
ljmp
mov
loop
ljmp
jecxz
es
loopne
mov
lock
out
les
pop
es
shrb
adc
cmp
and
cmc
push
xchg
jle
scas
xor
fcoml
jl
xchg
mov
dec
xor
jo
fbstp
popf
add
mov
jp
call
cmp
inc
in
leave
sub
jle
fcoms
test
insb
fadd
rorl
sbb
fiaddl
clc
repnz
or
mov
gs
cmp
enter
lret
jecxz
outsb
sbb
sbb
pop
lret
dec
lret
outsl
fwait
sub
inc
cld
xchg
inc
push
cmpsb
dec
sahf
mov
repz
lahf
jecxz
jl
xchg
jae
repz
mov
mov
mov
push
jns
pop
imul
sbb
pushf
mov
pop
xor
dec
or
jae
ret
add
cmp
mov
xchg
jp
mov
clc
add
cwtl
xchg
leave
add
jmp
dec
adc
dec
mov
inc
or
xchg
push
cs
pop
ljmp
cmp
cmpsl
imul
and
jl
sbb
xor
test
inc
sub
add
lcall
cltd
xchg
cmc
cltd
hlt
add
inc
rolb
sub
dec
rcrb
inc
xor
shrl
jnp
or
addl
cmp
sub
shrb
lds
mov
mov
sahf
inc
pop
fdivr
add
les
arpl
ss
lods
es
mul
subb
inc
mov
inc
jp
lret
aam
rcl
sbb
or
adc
inc
mov
xor
add
inc
insb
nop
imul
mov
int
mov
push
icebp
cltd
inc
je
repnz
cld
mov
shr
jge
mov
and
push
enter
sbb
movsb
jge
jecxz
dec
cltd
mov
into
push
fidivrl
cmp
inc
mov
mov
jae
stc
push
cmp
mov
lcall
rcll
andb
mov
sub
inc
inc
movsw
pusha
enter
push
mov
std
ds
test
mov
sar
bnd
sbb
shll
mov
outsl
jmp
add
mov
adc
cli
push
iret
jns
add
add
and
gs
jge
out
nop
xlat
lock
loopne
push
movsb
cmpb
stc
push
mov
push
push
cmp
out
mov
call
inc
ljmp
fs
xchg
and
cmc
inc
jmp
or
leave
push
push
adc
mov
scas
std
pop
movsb
mulb
push
mov
inc
ljmp
shlb
push
leave
fmul
inc
jns
and
pop
insb
nopl
sub
pusha
imul
mov
cld
mov
pushf
fdivrs
loopne
push
pop
or
cmp
stos
dec
stc
pop
cmp
mov
fdivs
inc
pop
add
movsb
mov
adc
gs
jge
cmp
xchg
push
jns
mov
pop
add
mov
add
xchg
loope
cs
jp
fsubrs
imul
incl
outsb
jecxz
push
pushl
jl
je
xchg
fwait
pop
mov
cmpsl
jne
mov
pop
adc
jbe
pop
dec
add
lcall
push
jnp
mov
rolb
push
inc
jns
pusha
xchg
call
dec
scas
mov
add
cmp
or
xchg
andb
jmp
xor
push
lret
sub
shrl
push
test
dec
add
sarb
jmp
les
ret
sahf
sub
add
lea
xchg
sub
fbstp
test
idivb
or
loope
lock
pop
xchg
mov
or
and
inc
je
cs
clc
stc
mov
jmp
or
gs
push
cmp
xor
shlb
adc
nop
cld
pop
hlt
cmc
lock
call
mov
jle
inc
inc
inc
outsl
into
mov
adc
pop
ficomps
imulb
xchg
jl
stc
arpl
rol
mov
dec
jle
dec
pop
fldcw
clc
pop
xchg
insl
inc
out
pop
jg
push
shrb
adc
and
ret
cmp
out
mulb
imul
faddp
xchg
cmc
addl
push
jns
pop
sbb
fdivs
cmp
push
and
sub
xchg
dec
sub
aas
repz
mov
jo
jns
mov
pop
test
pop
loop
xchg
mov
jmp
arpl
or
push
inc
jne
pop
xor
mov
jne
test
cmp
popl
inc
test
sub
xchg
mov
cmpsl
push
pop
sbb
ret
mov
xor
xor
out
xlat
xlat
xchg
and
imul
sbb
lods
sub
cmc
fs
aam
fimull
dec
ljmp
adc
xor
leave
xchg
rclb
or
xchg
stos
dec
out
push
lea
mov
mov
cltd
scas
or
push
out
cmp
dec
dec
xchg
sti
xchg
dec
xchg
lahf
mov
mov
ficoml
inc
inc
popf
aad
les
scas
pop
pop
mov
jo
push
js
adc
bound
and
test
insb
sub
ss
daa
out
inc
icebp
fstl
clc
fidivrl
jne
test
enter
cmp
sub
stc
adc
mov
or
jae
jne
into
sub
out
xchg
mov
in
imul
and
jecxz
sub
inc
cmp
mov
mov
mov
pushf
lock
mov
push
and
mov
push
jne
inc
sub
aad
mov
ret
dec
insl
mov
adc
data16
mov
sub
add
mov
inc
and
es
fists
jmp
sub
adc
push
jmp
scas
js
or
and
and
fwait
pcmpeqw
adc
xor
lret
inc
notb
and
inc
lds
pop
ljmp
into
call
push
pushf
test
iret
cmp
push
out
or
gs
xchg
pop
xchg
lock
orl
pop
pop
addb
scas
stc
popf
sbb
add
push
add
cld
inc
stc
mov
mov
out
stos
xchg
lea
arpl
repnz
push
cmc
out
jns
idivb
int3
test
push
or
in
xchg
je
into
cmp
xor
incl
std
xor
out
xlat
mov
fwait
push
jns
das
push
lcall
mov
orb
push
xchg
ljmp
push
sbb
xchg
xchg
mov
pop
and
xchg
les
insl
test
sbb
add
push
out
or
leave
cmpsb
in
add
sub
shll
insb
enter
adc
out
sub
pop
mov
popa
push
pop
xor
in
jo
sahf
jmp
aaa
or
ror
ret
and
popf
push
in
insb
movsb
sbb
sub
cmc
inc
out
push
add
or
ds
and
rorl
insb
cmp
int
imul
inc
fisubrs
loopne
out
movsb
nop
pop
int3
scas
pop
dec
inc
shrb
sub
clc
cmpsb
mov
cmp
or
sbb
xor
lret
ret
sub
push
cwtl
mov
push
mov
lea
fsubl
jp
jnp
sbb
mov
ja
pop
aad
in
xlat
test
push
sbb
jmp
leave
arpl
sbb
adc
mov
and
fdivs
mov
cmpsb
cmc
xor
mov
lahf
enter
negl
in
filds
leave
sbbl
outsl
xor
xchg
stos
mov
bound
jno
mov
stos
mov
dec
inc
movsl
shl
cmp
inc
xlat
or
mov
add
cwtl
mov
inc
push
repz
test
das
stos
lods
and
fldl
jmp
mov
xchg
ss
scas
popfw
xchg
dec
ret
mov
sahf
rcrl
dec
jb
ds
fidivrl
ds
in
or
iret
jp
dec
ficoms
mov
xchg
xchg
imul
push
jge
dec
sbb
sbb
rclb
dec
outsb
aam
test
or
imul
jmp
xor
add
cmp
insl
push
pop
insl
sbb
mov
adc
lcall
andl
cli
jle
in
fldt
stos
sbb
mov
mov
je
cmc
pop
mov
jl
cwtl
add
cmp
xor
testb
inc
adc
fcomps
xchg
or
cmp
mov
jno
mov
imul
sub
sti
aaa
jb
dec
push
cmc
dec
jl
std
and
in
js
test
inc
adc
lds
pop
divl
loope
sbb
sbb
mov
repnz
sub
jns
testb
mov
iret
lods
lea
sahf
push
test
mov
dec
pop
aaa
jno
mov
out
sub
push
or
sarl
mov
mov
xchg
cmp
lret
dec
arpl
push
jmp
cmp
fs
adc
nop
or
inc
stos
fists
cmp
rcrl
push
or
or
repnz
icebp
mov
xlat
lahf
mov
xchg
inc
pop
sti
in
push
lcall
xchg
cli
sbb
inc
cmp
and
fimull
mov
sti
lds
out
jne
xchg
xor
and
push
mov
jns
loope
inc
loopne
sahf
inc
lahf
lea
dec
std
dec
and
mov
daa
loopne
xor
xor
or
test
lea
dec
xchg
in
inc
insb
fwait
loopne
sti
cmp
sbb
psubq
and
cmpsb
enter
mov
dec
mov
xchg
addr16
insl
aaa
and
and
jo
push
std
ds
mov
repnz
sbb
fsubs
movsl
mov
lods
sbb
and
fldt
repz
test
mov
lret
pop
mov
xor
imul
pusha
xchg
push
cwtl
fsub
mov
or
inc
pop
lock
cmp
lods
jmp
movsb
mov
push
gs
sub
cwtl
xchg
push
cli
pop
pushf
inc
gs
out
outsb
scas
cs
mov
xor
loop
xlat
cmp
hlt
arpl
mov
jmp
loope
mov
stos
cld
push
inc
pop
daa
push
push
mov
aam
cmp
pop
xchg
push
sbb
out
mov
popa
mov
add
ljmp
cltd
or
dec
test
mov
data16
xor
push
mov
push
int
imul
mov
add
jle
add
popa
icebp
in
aas
leave
dec
decl
ret
jno
dec
std
das
repnz
adc
xor
aas
pop
push
lahf
mov
sub
jl
mov
idivl
repnz
out
std
in
je
add
pop
xchg
into
pusha
dec
mov
xchg
sbb
pop
out
aas
jo
jno
mov
jmp
test
jmp
push
sub
cmp
inc
push
mov
dec
mov
jle
dec
cltd
sbb
fs
adc
and
js
cmp
call
xchg
daa
ror
mov
push
xlat
push
and
aaa
mov
fsubl
ds
into
into
jl
popa
es
pop
ret
or
mov
jno
xor
pop
je
mov
sti
jbe
test
xchg
dec
xchg
add
cmp
xchg
jg
rolb
int
pop
aam
je
add
mov
sub
fistpl
loopne
mov
push
xor
dec
xchg
jl
aam
xor
fbstp
xorb
xorb
out
out
or
and
sbb
out
cmp
dec
lret
adc
jmp
fsubl
push
aad
and
addr16
sti
dec
out
clc
add
xchg
dec
fsubrl
data16
ret
adc
inc
sbb
sbb
jb
sbb
icebp
push
dec
add
mov
inc
push
cld
dec
cmp
stc
fnstcw
ljmp
xor
jb
int
repz
outsl
adc
push
lods
sbb
movzwl
pop
push
je
and
sbb
dec
repz
and
jp
loop
mov
pop
dec
or
pusha
lods
jp
call
jns
pop
aaa
push
xor
dec
lret
mov
lcall
js
rclw
jno
shrb
mov
popa
mov
mov
sub
jne
sbb
out
pop
inc
pop
ds
repnz
out
lods
imul
pop
les
mov
cmp
jae
sub
rcr
fldl
add
fdivrs
stos
cltd
sbb
push
push
subl
mov
sbbl
cmpsb
cli
lahf
sub
std
or
xor
popl
jp
xor
out
fnstcw
dec
sar
dec
pop
into
jnp
jl
movsl
push
mov
adc
lock
pop
ja
loopne
cltd
jnp
xchg
dec
add
test
jge
pop
dec
out
pushf
mov
movsb
daa
es
mov
test
xor
jl
xchg
call
jge
xchg
loope
cltd
inc
add
mov
imulb
mov
inc
hlt
divb
jle,pn
add
in
test
sti
cwtl
push
xor
or
shll
cwtl
movsl
sub
jle
pusha
or
out
lock
das
flds
stos
ss
sbb
loop
lods
shlb
aad
or
in
pop
inc
pop
fcoml
push
add
shll
add
cs
pushw
lret
loop
mov
sbb
push
cmp
xor
fnstenv
pop
adc
sbbb
adc
jmp
cmc
sbbb
sbb
pop
mov
mov
adc
jnp
pusha
test
xchg
cmp
mov
stos
push
pop
hlt
xorl
jecxz
jne
nop
lahf
test
mov
jo
sub
add
xchg
jnp
pop
dec
pop
std
sbb
loope
and
add
popf
hlt
pop
pop
or
sbbl
inc
fistps
dec
sahf
call
test
push
pop
cmp
icebp
xor
dec
mov
rol
and
sbb
ret
cli
cli
mov
in
hlt
xchg
cmpsb
mov
push
imul
mov
cmovnp
push
push
negb
sahf
shl
cmc
xor
cmp
lods
sahf
add
and
fistpll
mov
addb
mov
shrb
rclb
in
adc
lcall
fldl
js
mov
ret
sbb
sbb
pop
dec
fistpl
inc
incl
popa
bound
push
mov
in
dec
jae
clc
xor
jle
inc
out
jae
dec
inc
push
cmp
outsl
inc
xchg
sbb
aaa
lds
mov
shll
lret
cld
call
mov
push
dec
mov
js
pop
cmp
mull
dec
jne
and
mov
in
mov
shrl
lret
sbb
ss
cmp
in
mov
orl
pusha
cld
shll
cmp
lahf
sbb
xchg
iret
loope
pmaddwd
adc
lret
je
xor
xchg
or
push
aas
fistl
fisubl
sbb
test
cmp
lock
adc
push
cltd
or
bound
dec
ss
sub
and
add
fistpll
fsub
pusha
inc
mov
mov
dec
mov
iret
adc
sub
push
sbb
outsl
lea
add
lods
js
inc
jo
cwtl
fcompl
xchg
push
subl
lahf
js
cmpsb
stc
in
xchg
gs
mov
and
je
push
bound
pop
xchg
xor
jecxz
push
and
adc
stos
xchg
xchg
in
mov
mov
inc
add
add
cld
hlt
stos
dec
push
mov
mov
cmp
jle
pop
sub
add
sbb
pop
mov
cmp
fidivrs
rol
pushf
repz
test
pusha
push
and
std
add
sahf
jbe
jnp
popf
stos
jnp
test
xchg
mov
mov
push
insb
icebp
leave
inc
add
lock
imul
out
icebp
in
sub
vsqrtsd
jmp
lcall
push
pop
sub
mov
cmc
ret
jnp
mov
adc
or
or
or
mov
xlat
mov
idivb
stos
dec
clc
sub
repnz
adc
roll
push
jo
bound
jmp
cmc
mov
inc
aam
jne
repz
and
sbb
push
add
sbb
arpl
jmp
movsl
iret
sbb
mov
xor
push
pop
addl
xlat
pop
sub
lock
addl
jecxz
push
daa
inc
outsb
add
adc
dec
or
sbb
cld
xlat
add
data16
xchg
pop
or
in
mov
pminub
loope
sub
and
pusha
mov
lods
mov
and
outsl
sbb
xchg
pop
inc
out
shlb
ret
lahf
iret
fldenv
xchg
cmpsl
jbe
imul
cs
cmp
call
int
mov
pusha
push
xchg
sub
adc
mov
std
inc
mov
jns
fsubs
fwait
mov
lods
xlat
jg
dec
jg
es
imul
xchg
movsl
loopne
adc
pop
mov
inc
lahf
andb
shr
roll
cmpsb
xchg
lret
push
ret
pop
aad
hlt
test
adc
push
jns
das
jp
in
adc
or
test
enter
jno
push
lahf
ror
je
fucompp
xchg
aam
dec
cmp
push
test
push
jg
push
pop
lahf
xor
loopne
pop
cmc
popa
xchg
js
sub
sbb
xor
hlt
sbb
nop
in
jne
mov
in
adc
arpl
int3
test
outsb
cmp
imulb
fldl
mov
jmp
inc
inc
or
cmc
add
cmp
dec
into
sub
cltd
add
inc
data16
lahf
stos
ret
daa
aas
xchg
imul
insl
sub
shlb
jl
ficoml
inc
fcomp
stc
insl
arpl
mov
jne
jnp
add
xchg
das
or
mov
push
sbb
inc
negl
and
in
imul
loop
sbb
test
mov
ret
mov
in
int
adcl
jo
mov
imul
mov
inc
inc
pop
xor
dec
dec
xor
mov
xchg
pop
imulb
insb
insb
add
rcll
movsb
xchg
cmp
mov
cmp
lods
cmp
push
mov
int
inc
push
movsl
in
insb
sti
int
push
lahf
stc
mov
pushf
jno
mov
dec
data16
cmc
sub
jg
pop
push
jl
xchg
es
or
dec
imul
ss
imul
test
add
cld
sub
push
cmpsb
jo
in
mov
aam
inc
mov
jns
divl
test
cld
mov
negb
inc
movsl
cmp
or
jo
cmc
dec
test
cli
pop
rorl
jmp
orb
push
into
adc
fimull
push
lret
and
ficoml
gs
in
and
jge
mov
pop
mov
fcmovnbe
mov
xchg
push
scas
int
test
and
lahf
sub
sub
push
sub
jae
movl
jmp
test
scas
repnz
adc
mov
jnp
push
adc
xchg
sub
roll
sbb
mov
and
mov
shlb
mov
sbb
je
or
jl
push
xchg
xor
dec
addr16
cmovno
iret
sbb
lahf
push
dec
jnp
cmpsl
dec
adc
js
xchg
clc
and
loop
mov
mov
lret
loope
xor
xchg
cmp
dec
adc
lret
xor
push
push
or
iret
push
pop
mov
roll
stos
xchg
aad
mov
pop
push
in
pusha
pushf
lahf
pop
call
fiaddl
loope
mov
imul
fcoml
or
call
xchg
mov
jl
mov
cmp
pop
jl
push
cmp
iret
pop
adc
adc
sbb
lods
sbb
and
pop
shl
add
repz
xchg
leave
mov
inc
cmc
cs
xor
js
fnstcw
popf
or
cmc
andl
sbbb
add
cmp
mov
insb
inc
fmuls
enter
outsb
jmp
mov
or
mov
shrl
pop
rcrl
jb
add
shl
add
mov
test
cld
push
jnp
dec
push
pop
arpl
dec
mov
cli
dec
mov
lahf
add
or
stc
pop
add
add
jmp
out
sub
adc
in
pushl
fs
das
test
shll
call
dec
adc
outsl
jbe
jl
addr16
lret
jecxz
xor
shlb
out
mov
loop
movsl
adc
dec
jmp
imul
or
lret
push
mov
mul
sub
cmp
inc
addl
ljmp
leave
dec
daa
and
or
les
mov
inc
outsl
or
lahf
in
mov
adc
int
xor
in
push
enter
subb
cmp
sub
call
js
mov
rcll
and
je
cmp
xor
and
test
sub
mov
jno
add
test
rorb
xchg
cmpsl
mov
sar
pop
data16
add
sub
dec
and
sbb
sub
jb
cmp
xor
cmp
or
pop
outsl
push
dec
aaa
ja
mov
js
xchg
push
and
ror
push
popf
lret
rcll
out
fstpt
inc
outsb
or
xor
shlb
xor
and
xchg
xlat
stos
jecxz
adc
xor
cmp
out
lods
mov
aad
mov
xlat
pop
sbb
aam
xchg
sub
mov
mov
pop
call
push
hlt
xchg
mov
mov
adc
incl
jno
xchg
inc
and
call
shr
lea
sbb
out
movsl
mov
insl
sarb
dec
inc
imul
filds
sbb
insb
addr16
add
mov
cltd
arpl
fbld
dec
inc
movsb
les
das
rcrl
loope
mov
jmp
je
roll
or
aad
imul
call
hlt
mov
xchg
imul
pop
jmp
in
cmp
lods
xchg
mov
push
stos
mov
cmpsl
lods
aam
lahf
jp
pop
jno
push
inc
sub
adc
sub
iret
stos
and
into
sbb
jo
dec
jecxz
das
dec
daa
leave
sbb
dec
add
in
cltd
jl
mov
mov
mov
xchg
lods
arpl
push
out
mov
call
jb
aaa
stos
pop
jo
sub
fstp
sbb
xchg
fimull
and
add
stc
mov
repnz
arpl
dec
mov
lea
daa
xchg
lahf
jb
ss
arpl
cli
cmp
lcall
stos
cmp
rcrl
jl
xchg
lea
std
scas
dec
popa
mov
imul
push
mov
test
lret
loop
fnstsw
fcmovnb
xor
loopne
pushf
or
mov
dec
mov
fwait
ret
rcll
scas
fs
pop
int
int3
add
sbb
mov
fsts
inc
add
mov
and
iret
test
cld
xchg
out
add
push
jno
push
movb
ret
stos
aaa
jl
xchg
testb
adc
push
movsl
mull
adc
inc
jno
sti
sbb
fwait
mov
mov
sbb
xor
xchg
insb
clc
lock
mov
movsb
mov
loope
mov
push
pop
cli
xor
and
mov
sbb
fisubrs
insl
xchg
iret
pop
xchg
test
mov
inc
adcb
mov
imulb
call
dec
mov
cli
mov
sub
clc
mov
repz
pmuludq
jae
das
jns
cmp
sbb
mov
adc
inc
xchg
add
fsubrl
dec
jo
ret
sub
xchg
into
and
jge
int3
addr16
lods
int
ret
insb
negl
pop
adc
cmpsb
leave
mov
enter
adc
push
mov
aad
test
sbb
shll
and
sub
mov
jge
iret
lret
inc
pop
inc
movsb
scas
add
ja
out
clc
xor
inc
dec
test
cmp
sub
repnz
push
xchg
cmp
stc
in
sub
mov
stc
es
cmp
mov
enter
mov
pop
bound
enter
adc
or
sbb
dec
ss
jne
and
pop
xchg
fnsave
inc
push
push
call
fsubrl
add
mov
or
in
and
push
pusha
push
cmp
iret
add
add
insb
lahf
xchg
jnp
pop
fildl
xor
push
jb
sbb
lret
jne
test
ret
jo
out
push
js
incl
and
or
and
jae
cs
mov
loop
int3
push
inc
test
ss
add
mov
cmp
negb
sub
dec
std
sbb
mov
dec
dec
loope
and
shll
adc
insl
sub
mov
int
or
ds
xchg
push
mov
lcall
dec
xchg
aam
das
mov
lods
or
je
les
jbe
mov
pushf
inc
pop
aam
dec
jae
in
cltd
fwait
out
pop
sbbb
lods
mov
cmp
add
into
das
pop
add
lahf
jo
xchg
jo
out
pop
pop
cmpsl
dec
xchg
rcrl
cld
jge
mov
inc
mov
and
xor
andb
and
loopne
sub
sahf
shl
cmp
repz
imull
sbb
mov
adc
mov
clc
push
xchg
xlat
adc
inc
lods
sbb
push
inc
inc
test
sti
or
pushf
es
cmpsl
clc
sti
into
sub
out
fstpt
js
or
hlt
ret
iret
xor
jp
fmull
jbe
inc
pop
adcl
sub
test
fstpt
cmp
or
lock
mov
outsl
inc
adc
xchg
cmp
and
mov
je
jns
or
add
scas
mov
enter
mov
inc
jmp
daa
adc
aas
sub
outsb
pop
sti
inc
dec
or
fdivs
rcl
adc
adc
mov
push
mov
std
adc
into
add
movsl
loope
mov
mov
rolb
xchg
mov
or
jo
jb
and
shl
mov
mov
cmp
inc
jb
push
cmp
cs
mov
xchg
adc
adc
inc
ret
inc
mov
push
or
xchg
cmpsb
clc
add
jo
loop
sahf
imul
pop
dec
lods
or
cmp
or
out
lcall
xor
inc
xchg
inc
fldl
dec
pop
inc
mulb
xlat
inc
fwait
pop
aad
imul
or
cli
out
sarb
inc
cmpsl
fildll
mov
push
mov
out
xor
add
fninit
mov
xchg
outsl
hlt
xorb
push
lods
xlat
jae
les
out
dec
adc
jb
push
flds
fcoml
cli
movsb
push
add
cmp
in
mov
and
addr16
outsb
ljmp
or
xor
cmp
add
add
test
repnz
mov
loope
add
xchg
mov
das
mov
outsb
push
xor
repz
jbe
int
lods
ljmp
fsts
dec
negl
mov
sub
mov
push
xorb
scas
mov
mov
in
cld
xchg
std
int3
inc
imul
and
dec
xor
xchg
sbb
or
cli
out
push
dec
jnp
fisttpl
bswap
push
test
sub
mov
outsl
stos
and
adc
adc
mov
xchg
cs
inc
fnstsw
test
pop
cmpsb
dec
adc
dec
jg
or
aam
icebp
in
das
das
iret
shll
adcb
repnz
xorb
mov
js
adc
fcomps
mov
bound
xchg
or
aad
inc
sarl
aad
pusha
ss
push
inc
shlb
push
and
imul
cld
mov
or
call
cmpsl
fimuls
adc
push
jbe
lea
and
pop
test
pop
pusha
imul
call
jg
adc
addr16
adc
sbb
ret
repnz
jbe
mov
dec
data16
cmp
dec
and
jae
or
and
xchg
in
test
lahf
shrl
stos
pop
jno
in
popf
outsb
and
xchg
daa
jb
mov
scas
jns
insl
lds
sbb
jb
cmpsb
push
adc
mov
bound
xchg
addl
push
fistpll
aad
lds
xor
inc
xor
les
xor
mov
xchg
adc
adc
lret
mov
xchg
out
mov
cmp
jp
dec
jne
dec
jmp
pop
shr
aam
cmp
cmp
les
jns
cmpsl
xchg
jne
mov
fimuls
jmp
cmp
fiaddl
xchg
sub
rcrb
fistl
jns
or
xor
cmp
bound
insl
cmpsb
in
push
les
ret
cmp
mov
and
test
jecxz
out
sbb
jae
dec
hlt
mov
arpl
push
sbb
push
aaa
lods
push
or
mov
gs
nop
je
movsb
add
insb
sub
inc
std
mov
jge
pop
ljmp
jnp
xorl
fstpt
shl
cmpsb
inc
inc
test
add
rorb
lea
jae
push
rcll
sahf
in
into
cmp
stos
dec
mulb
mov
movsl
pop
sub
sbb
fwait
out
cmp
ss
fwait
sti
ret
cmc
test
int
dec
stos
xchg
sti
setb
fdivr
out
xor
xchg
or
mov
popf
or
cltd
xor
adc
fucomp
ja
fldt
push
std
sbbb
inc
enter
sub
jne
testb
mov
fnstenv
packuswb
add
xchg
sub
sub
or
pop
add
sar
cmp
sub
mov
sub
mov
mov
lods
stc
mov
call
adc
sbb
clc
jg
data16
pop
fldl
outsb
arpl
push
loopne
pop
sbb
jbe
fiaddl
pop
js
jl
test
imul
movsb
push
push
cwtl
mov
pop
lods
add
xchg
mov
hlt
cmp
push
adc
dec
mov
inc
pop
scas
or
push
jb
add
sbb
pop
sbb
insb
stos
sbb
cmpl
jns
inc
sbb
call
in
pop
out
popf
ljmp
xlat
rclb
and
inc
adc
sti
mov
jge
xchg
lret
xchg
ja
lea
std
js
psrlq
mov
test
pusha
mov
lcall
inc
adc
scas
inc
repnz
sbb
xor
dec
shrb
xchg
fstl
xorb
mov
idivl
jb,pt
inc
fildll
cli
lret
mov
dec
les
sub
mov
pop
ss
arpl
pop
int
jmp
push
test
adc
jl,pn
add
es
test
aam
fistps
pop
mov
mov
mov
popf
test
push
xor
and
mov
dec
push
xchg
xchg
aaa
inc
mov
adc
or
dec
aaa
xchg
and
add
rorb
pop
arpl
lds
push
dec
mov
dec
mov
loope
lahf
out
mov
fstl
fcomps
arpl
aas
push
ljmp
ss
push
or
sbb
mov
ret
dec
add
cmpsb
mov
xchg
add
andl
xor
movsb
push
xchg
jo
add
cmpsl
jmp
pop
into
stos
ljmp
aas
jmp
dec
subl
clc
dec
cmp
jnp
lahf
rcrb
mov
lock
mov
aaa
jmp
scas
push
jle
cmp
addr16
sahf
and
jg
lods
pop
jmp
adc
popf
push
in
das
mov
adc
push
jnp
inc
pop
fsub
fsubrs
in
jl,pt
arpl
ret
or
mov
cltd
or
jl
std
xor
push
enter
adc
mov
mov
fistl
mov
fisubs
addr16
cmpsl
clc
xchg
xor
je
jns
cmp
into
jecxz
stos
fldenv
add
rolb
cli
negb
jmp
cmpsl
and
mov
mov
and
cwtl
sahf
cs
lods
inc
sbb
std
imul
or
popa
lahf
jno
jnp
jbe
add
add
dec
movl
sub
add
sbb
mov
add
aam
mov
or
jmp
push
cmpl
xlat
push
and
xor
xchg
fwait
xorl
dec
pop
adc
hlt
leave
fnstenv
adc
mov
pop
mov
push
addl
in
bnd
rcrl
lds
cld
xchg
mov
mov
add
out
sub
in
mov
ret
mov
stc
cmp
shlb
in
pop
jmp
mov
sub
pop
jo
dec
xor
sub
push
cmp
aaa
xchg
jno
loop
and
lock
loopne
inc
arpl
mov
ret
arpl
int3
scas
xchg
out
inc
cmp
test
mov
ljmp
xchg
adc
outsb
xor
pusha
imul
popf
enter
data16
mov
shll
notl
vminps
fisttps
dec
in
sub
xchg
push
add
insb
insb
fisubrl
loopne
mov
incb
xchg
fmulp
popl
and
ss
mov
lahf
push
xor
xchg
inc
jnp
add
jo
scas
out
in
and
cmc
fmull
fnstcw
pop
push
jge
andl
mov
dec
call
dec
sub
sbb
dec
mov
sbb
sub
into
outsl
push
ds
popf
mov
je
insl
rcll
pop
jecxz
jle
xor
pop
cmc
dec
pop
out
add
push
inc
lret
add
and
dec
or
dec
shrl
movsl
enter
test
sub
pop
and
jle
jae
std
inc
test
fdivrs
push
imul
stos
xchg
loopne
pop
pusha
sbbl
mov
rcrb
fs
jp
cmp
push
in
stos
pop
xor
cli
dec
xchg
or
ret
and
insb
push
inc
test
test
call
sub
ret
cmp
pop
shr
mov
addl
test
mov
or
divl
add
stc
insl
lret
cwtl
cli
xor
icebp
sarb
sbb
sti
dec
ds
mov
lea
sub
insl
add
cmp
popa
fists
jne
push
outsl
cmp
cmp
es
daa
inc
test
int
add
cmp
cltd
adc
gs
mov
inc
shl
push
mov
in
mov
insb
sub
out
sub
cmpsb
inc
out
mov
xchg
aam
or
or
mov
fisubl
in
mov
repz
fstpt
cwtl
bound
imul
les
aam
cmp
movsb
or
lods
push
mov
mov
ret
mov
push
mov
adc
pop
es
mov
aad
xor
cmp
mov
insl
jp
in
mov
mov
xchg
xor
xlat
fdiv
mov
outsl
xor
xchg
xor
rcrb
out
xor
lret
lds
int3
out
jmp
dec
sbb
and
adc
push
sbb
pop
fmull
negl
and
insl
sti
das
mov
mov
mov
mov
mov
out
in
push
popa
or
pop
xchg
pop
xchg
push
popf
sub
dec
sarb
or
aad
lea
imul
int
popa
loopne
push
insb
mov
mov
pop
adc
icebp
pop
xchg
add
inc
ds
stc
sub
out
add
repnz
push
add
sbb
lret
xor
or
xor
daa
aas
sub
dec
inc
fsubl
aas
rcrl
inc
add
xor
push
iret
sub
pop
fiaddl
orl
push
inc
mov
and
sbb
out
dec
or
lods
pop
cld
jb
jae
hlt
add
cmpsb
pop
movsl
mov
enter
lods
lret
or
dec
xchg
rcrb
jo
sahf
es
pop
movsl
jbe
iret
imul
fists
pop
stc
pusha
xor
lods
jg
xchg
lock
xchg
mov
mov
fstpt
xlat
cmc
lahf
imul
dec
test
adc
sub
and
and
mov
btrl
aam
popa
push
inc
shll
int
aaa
or
iret
and
aaa
sbb
cltd
pop
mov
test
lock
sub
pushf
or
adc
test
cmp
dec
sub
dec
sbb
fmull
sub
popa
pop
adc
cmpsl
lahf
mov
fdiv
mov
jp
aam
sbb
daa
ret
jns
dec
jne
cmp
mov
and
adc
or
fdiv
in
inc
es
add
pop
xchg
mov
enter
add
in
sbb
push
movl
pop
sarb
cli
cmp
mov
das
mov
inc
jo
mov
xor
pop
jge
mov
sub
jno
jb
flds
jecxz
or
repz
push
inc
out
cmp
cmp
mov
loop
dec
addr16
add
xchg
or
sub
loopne
out
sub
mov
je
mov
cs
push
mov
xchg
and
inc
pop
or
dec
mov
hlt
test
sbb
dec
or
je
jge
inc
cmp
dec
mov
in
mov
sub
mov
cmpsl
or
mov
andb
pop
roll
mov
mov
mov
clc
add
test
jbe
loop
sbb
lahf
mov
jnp
mov
sbb
add
loope
lret
mov
loop
fmull
inc
jecxz
cmp
repnz
stos
pop
lahf
inc
lahf
test
push
test
cmpsl
fdivrs
outsb
inc
jecxz
cmp
scas
inc
mov
into
cmp
xor
and
cmpsl
cli
xchg
lcall
jp
ret
loop
push
xchg
mov
test
sub
loope
pop
lret
and
pop
cld
in
cmp
in
add
mov
add
cmp
jnp
rcll
mov
stos
fistl
push
push
stos
dec
inc
in
sbb
xchg
decb
scas
mov
insl
sub
jl
aad
out
mov
xchg
push
out
push
hlt
testb
add
mov
ret
dec
mov
sbb
in
add
xorl
jp
inc
stos
push
scas
imul
adc
fsubl
frstor
jae
in
mov
jno
xchg
clc
adc
fwait
sti
cli
inc
sarb
sub
mov
fucom
lods
xchg
pusha
scas
inc
inc
pop
jbe
mov
xchg
or
sub
mov
das
adc
inc
xchg
mov
push
icebp
and
and
pop
inc
into
les
cmp
dec
ljmp
mov
mov
dec
push
and
mov
popf
in
bound
pop
xchg
jle
or
dec
mov
mov
les
pop
inc
fstpt
sbbl
add
subb
pop
pop
adc
std
adc
mov
dec
rorl
dec
sub
push
mov
dec
int
int
push
xchg
lahf
mov
xchg
movsl
imul
push
insl
sti
rcrl
bound
stc
stos
adc
bound
incl
xor
push
inc
sarb
lret
xor
xchg
fwait
inc
bnd
mov
jle
sbb
fidivs
xchg
and
mov
imul
stc
ret
dec
cmp
movsb
jl
sbb
add
mov
test
iret
push
mov
push
das
jmp
mov
cmpsb
jo
notb
adc
dec
stos
dec
inc
and
jg
mov
adc
cmp
mov
idiv
sub
xlat
leave
fisttpll
cmp
ficomps
rcrl
jl
clc
scas
and
jne
out
push
inc
fwait
push
pop
xchg
pop
lock
aas
lods
sub
pop
repz
xor
pop
mov
sarl
jmp
sub
loop
mov
add
popa
mov
pusha
shl
daa
gs
aaa
pop
mov
ror
push
sbb
loope
in
sbb
stos
clc
pushf
jmp
stos
xlat
inc
xchg
cmp
inc
in
add
hlt
inc
filds
aas
jo
les
loop
cmp
adc
cs
jg
shrl
std
aaa
xor
call
dec
dec
sbb
mov
cmp
rolb
pop
mov
addr16
push
loope
or
imul
add
jb
in
push
and
pop
flds
nop
mov
out
inc
imul
mov
pop
pop
mov
xchg
xchg
xchg
mov
ds
cmc
add
aam
inc
fildll
pop
add
insb
mov
pop
adc
jnp
sub
xchg
xchg
ja
lret
jbe
xor
stc
pop
inc
ss
sbb
jg
pop
lahf
into
fwait
nop
sub
fisttpl
ja
pop
rcl
lret
inc
xlat
mov
dec
in
xor
inc
add
push
cltd
fisubs
int3
flds
xchg
outsl
sahf
add
sbb
add
fadd
das
mov
addb
lds
jno
out
or
sbb
cmpb
add
fcoml
in
mov
outsl
notb
adc
adc
xor
xchg
mov
movsl
mov
addr16
ljmp
jge
pop
push
test
es
push
pop
lods
inc
leave
insb
stos
cltd
lods
inc
jb
push
loopne
or
dec
aad
lea
repz
test
sahf
nop
jnp
pop
inc
adc
in
push
push
add
add
addr16
int
sub
in
mov
mov
mov
cmpsl
call
stos
xchg
jecxz
pop
xchg
pop
push
xchg
ds
xchg
sub
or
mov
addb
cmp
mov
aam
in
idivl
inc
dec
cmp
addl
mov
movsb
jns
sahf
daa
scas
mov
add
stos
std
jb
jmp
enter
mov
xor
in
cmp
sub
mov
sub
xchg
outsl
mov
xchg
jge
fisubs
mov
pop
adc
add
fs
cmpb
cmp
sub
jp
rcll
pop
xor
stos
ret
int3
mov
lea
jmp
ss
mov
inc
xor
fldcw
sbb
or
mov
mov
cmp
mov
ficoms
cwtl
pop
mov
xchg
inc
inc
push
in
and
imul
mov
shll
add
shrl
push
dec
mov
pop
or
dec
inc
sbb
out
test
in
shll
or
dec
push
dec
enter
jbe
push
aas
add
xor
jge
rcrl
jo
cltd
daa
or
mov
xchg
test
ret
fld
jle
cmpsb
movsl
inc
lock
incl
cs
pusha
shr
jmp
and
repnz
stc
add
inc
daa
xchg
test
aam
mov
cs
xchg
lahf
test
test
popf
lcall
xlat
cmpsl
jl
cmp
or
repz
and
mov
outsl
cmp
js
xor
mov
rcll
or
inc
adcl
sbb
into
cmp
repz
inc
jbe
pop
jle
and
iret
cld
data16
sbb
stos
mov
jle
dec
jb
gs
sbb
hlt
jae
in
push
pop
in
pop
aad
scas
jns
fwait
pop
repz
outsl
nop
hlt
rcrb
cli
imul
mov
cli
lods
dec
sub
jns
imul
xlat
fucom
daa
in
mov
outsl
cmpsb
loopne
cmp
jno
fbld
stos
cmpsb
xlat
pop
jmp
pop
pushf
xchg
int3
mov
jno
jmp
sub
test
fdiv
mov
mov
stos
addb
jl
cmpsl
pusha
lds
ficoml
cmpsl
js
jmp
test
mov
data16
pop
enter
dec
push
outsl
shlb
dec
and
clc
mov
xchg
enter
loopne
jge
out
sbb
mov
pusha
rorl
pop
dec
js
insl
jbe
and
pushf
mov
cmpsl
fdivl
ja
dec
hlt
mov
leave
jp
loope
push
push
fcmovne
mov
push
call
cwtl
ss
push
xchg
std
dec
xchg
pop
or
nop
repz
mov
mov
not
adc
fistps
jnp
dec
repnz
push
inc
movsl
adc
scas
pop
test
inc
popa
pushf
clc
jb
subl
mov
lahf
inc
and
cli
jl
pop
in
jl
leave
shlb
movsb
std
sbb
iret
lret
stos
mov
add
lret
cwtl
bound
test
jmp
cmp
aaa
push
mov
fdivl
mov
aaa
leave
pop
mov
mov
insl
mov
in
jno
jns
inc
mov
mov
dec
leave
scas
cmpsb
xor
mov
stos
or
jne
fisubrl
stc
cmc
insb
lret
lods
adc
push
mov
fisttps
or
adc
sub
cvtpi2ps
outsb
cld
addl
fadd
or
adc
mov
pop
and
cld
stc
add
dec
es
gs
push
sbb
jne
push
mov
popl
dec
xchg
gs
clc
dec
test
out
cmp
sti
inc
notl
pop
out
rorl
dec
push
pop
mov
sbb
jg
bound
or
sahf
insb
shll
sub
jbe
cmpsl
test
xchg
adcl
jg
cld
out
cwtl
sahf
nop
imul
mov
aam
and
and
sub
testb
rcl
jnp
sbb
addr16
cmc
xlat
xchg
cmp
cmpsl
andb
dec
psadbw
dec
mov
cmp
jmp
or
dec
cld
fcoml
and
and
dec
xchg
mov
das
fldt
xlat
jb
daa
enter
loop
inc
aam
xchg
sbb
xchg
mov
mov
mov
and
mov
fcmovb
or
sbb
mov
add
cmpsl
scas
fcos
jo
scas
cmp
pop
pop
pop
hlt
push
jmp
ret
sub
icebp
sti
jmp
dec
outsl
sbb
movl
in
add
inc
or
add
and
dec
dec
pop
jge
pop
lods
imul
sbb
jmp
cmpsb
icebp
push
outsb
sub
pusha
jae
es
pusha
insl
xor
pop
aas
dec
xor
xchg
add
sbb
aad
das
or
movsl
pop
movsl
imul
mov
je
dec
adc
arpl
adc
and
in
and
dec
xchg
lods
int3
mov
or
cld
loop
xchg
lods
test
pop
adc
call
push
stos
loopne
mov
sub
jno
fwait
aad
in
scas
fwait
xorb
inc
add
call
mov
sarb
push
fiadds
lds
push
jo
jp
mov
lods
sub
dec
push
xchg
imul
or
sbb
mov
sub
mov
sub
fidivrs
jecxz
xchg
bnd
outsb
and
sub
and
testb
cld
jbe
ret
stos
lret
xchg
andb
pop
test
loopne
lods
movsb
lret
dec
out
inc
pop
or
insl
mov
sub
sub
mov
addb
movsb
divl
call
jo
repnz
fwait
adc
sbb
mov
movsl
bound
inc
mov
pop
fdivl
jl
lock
sahf
and
mov
xor
sbb
mov
lea
sbb
aad
divl
test
gs
sbb
jne
jle
jno
imul
dec
mov
xor
push
fbld
sahf
jmp
in
aad
cli
inc
jge
rcll
sub
jbe
sbb
popa
mov
xor
mov
jmp
dec
cmp
out
test
int
mov
inc
lds
dec
lds
lods
in
js
jle
lret
lahf
fiadds
mull
dec
jle
repz
push
cmp
popf
mov
xor
dec
jae
call
movsl
stc
or
and
add
std
pop
scas
ret
xlat
je
xor
pop
fcoms
lcall
ret
mov
bound
mov
push
ret
lcall
mov
faddl
lea
pop
scas
movsl
push
push
mov
sbb
dec
push
and
mov
push
sub
rorl
fcoml
sbb
cmpsb
js
jo
call
das
sarb
cmp
out
ffree
or
mov
ret
add
aad
lods
fldenv
add
or
mov
je
call
in
andl
mov
insb
push
in
xchg
jge
mov
adc
mov
mov
in
pusha
movsl
lret
divb
into
ret
add
sub
pop
repnz
lea
cmovbe
ret
outsl
cwtl
adc
hlt
enter
jle
push
jae
stos
ss
inc
jbe
ficompl
xchg
es
testl
mov
pop
jg
push
xchg
add
popa
xor
add
test
lahf
test
rcl
insb
shl
mov
adc
andb
ljmp
cmc
fcmovb
and
aam
fmulp
ds
mov
sarl
aam
gs
enter
mov
inc
sbb
push
rolb
cmp
cmovno
push
pushf
xor
pop
mov
test
hlt
in
dec
add
nop
dec
add
fisttpl
inc
xor
mov
xchg
add
jbe
or
out
fiaddl
pop
call
xor
cli
or
cmc
insb
cmp
push
cltd
push
dec
add
fmulp
in
add
mov
add
sbb
xchg
xchg
add
out
or
aas
sbb
push
fbstp
sub
aaa
popf
stos
jmp
pop
fwait
je
insl
pop
push
xor
mov
enter
mov
lahf
sbb
pop
nop
es
mov
cltd
and
inc
xchg
mov
orl
mov
jb
pop
pop
jmp
pusha
insb
lret
or
inc
fmull
shll
popf
es
shl
mov
mov
inc
ss
mov
pop
mov
in
jo
and
mov
or
xlat
pop
insl
test
cwtl
push
sbb
mov
fisttps
jb
unpcklps
das
ja
mov
mov
icebp
pop
jne
adcb
xor
push
mov
push
xchg
mov
lahf
ret
adc
mov
jecxz
xor
jb
adc
ss
dec
insb
pop
xor
fwait
test
add
mov
mov
pop
js
lods
adc
push
xor
repz
icebp
push
test
inc
addl
shl
sub
outsl
xor
adc
cmp
mov
cmp
lods
sbb
out
sahf
jp
xor
pcmpeqb
stos
dec
and
pop
cmp
mov
rorl
fidivrl
adc
aam
stc
gs
aad
mov
insl
sbb
idiv
clc
mov
testb
sbb
cmp
mov
ja
add
repz
jno
add
add
pop
lds
fisubs
adc
sub
sbb
pop
lods
int3
out
ss
pop
dec
mov
mov
mov
inc
arpl
mov
pop
test
mov
lret
cmp
test
adc
movsb
popa
in
pop
inc
jns
push
lret
ret
or
mov
enter
cmp
pop
pushf
cmp
and
mov
outsb
in
test
adc
or
rolb
mov
jl
cltd
lcall
mov
push
addr16
mov
pop
mov
cmp
movsl
cmp
icebp
mov
icebp
shll
inc
stos
fdivp
cmpl
cs
pusha
mov
insb
jbe,pn
js
rclb
xor
xor
repz
mov
imul
inc
sarb
cmc
pop
scas
notl
imul
test
movsl
rorb
sti
inc
pop
mov
cmp
es
or
or
xor
cli
jle
pop
and
test
and
sub
stc
push
ja
addl
adc
cltd
and
data16
lahf
mov
and
jae
test
mov
ret
aad
fiadds
add
test
dec
and
inc
imull
daa
xor
fnstcw
add
jmp
insl
fs
cmpxchg
mov
popa
shlb
lods
mov
dec
ss
in
pop
cltd
enter
notl
std
cmp
jae
sbb
or
mov
xor
clc
mov
rorl
popl
mov
inc
sub
addr16
xchg
lds
pop
fstps
clc
push
push
lock
imul
mov
jge
lea
xor
je
fs
cmpsb
outsb
jge
xor
icebp
xchg
fisubs
pop
jmp
mov
cwtl
in
mov
pop
and
xchg
pop
outsl
aad
lods
mov
cwtl
repnz
pusha
mov
sub
ror
add
adcl
int3
dec
out
cmp
movsb
pop
sub
dec
inc
loope
mov
adc
mov
cmp
out
jno
dec
mov
sbb
cwtl
test
jo
jnp
jno
out
ret
imul
pop
push
sub
sahf
push
mov
out
pop
adc
jle
or
push
insb
std
loopne
fwait
stc
dec
mov
pop
xor
mov
pop
lock
int3
nop
lret
cmpsb
hlt
mov
stc
xor
aaa
cmp
mov
mov
mov
ret
out
mov
sbb
mov
ret
add
push
mov
add
test
jo
sbb
and
push
or
fisubrl
sub
leave
orb
cltd
cld
dec
jnp
mov
jbe
jle
in
pushl
cmpsb
mov
pop
outsl
cmp
mov
mulb
icebp
arpl
xor
addr16
sub
out
js
cmpsb
aad
jmp
mov
out
sbb
jp
xchg
nop
subl
pop
popl
sub
enter
addr16
sub
sbb
les
mov
pop
lods
add
jp
add
jo
xor
bound
iret
sahf
push
xchg
dec
add
out
ret
imul
xchg
push
dec
aaa
adc
pop
inc
sbb
inc
aas
mov
mov
insl
divl
add
lahf
adc
mov
fs
jge
cmp
lahf
fwait
ret
shrb
ljmp
mov
fidivrl
push
jp
xor
popa
sbb
mov
je
adc
mov
jb
idiv
rorb
sub
aaa
popa
lods
aad
inc
ret
ljmp
scas
sbb
sbb
mov
lds
sbb
inc
adcl
loope
sub
test
out
pop
loopne
jmp
cld
cmp
dec
pop
push
les
xlat
xor
call
pop
scas
push
mov
test
popf
lahf
imul
fucom
pop
dec
scas
adc
cmpl
jno
and
sahf
or
cmp
je
enter
mov
fdivrs
lahf
mov
lret
sar
in
scas
repz
inc
test
adcb
pop
sbb
cmp
lods
add
js
adc
pop
dec
mov
sub
sbb
daa
pop
shlb
loopne
ret
lea
push
dec
cmp
jp
int
pop
dec
out
mov
xchg
fcomip
pop
mov
push
jmp
fsubr
xchg
out
push
hlt
adc
adc
mov
mov
movsb
sub
mov
dec
sbb
in
dec
inc
and
push
lds
sbb
cmpsb
out
or
ret
mov
ret
and
adc
push
push
xchg
cmp
stc
loop
xchg
sub
int3
lahf
add
outsb
mov
repnz
out
sbb
cmp
xchg
sbbl
cs
pop
loop
cmp
pop
repz
andl
fmull
sti
cmp
add
xchg
cmpl
mov
mov
push
and
or
fmul
mov
pop
inc
lds
sahf
loopne
mov
add
jb
xor
xchg
jae
xchg
cwtl
push
mov
inc
mov
shll
mov
sub
jae
fld
jno
enter
ds
out
cltd
movsl
mov
adc
jne
dec
lahf
and
jbe
push
or
loope
fildll
adc
xchg
in
es
jecxz
push
pop
mov
aas
or
lahf
cltd
ds
mov
mov
inc
xor
jno
ss
in
addb
nop
leave
je
jl
cwtl
nop
pop
adc
mov
aam
movsb
sbb
call
sub
inc
add
adc
cmp
push
arpl
mov
pop
push
mov
mov
es
jno
test
stos
xchg
leave
stos
aad
push
add
out
dec
adc
cmc
in
loope
jmp
mov
mov
pop
xor
sahf
cmc
sbb
jmp
cmp
imul
shl
pop
mov
adcl
lds
push
addr16
push
aam
pusha
or
jae
loopne
jmp
test
iret
gs
push
mov
jmp
out
popf
pop
mov
pushf
fisubs
out
std
leave
stos
test
and
outsl
lfs
sub
push
stos
fdivrp
scas
loopne
loope
lcall
mov
xor
add
popw
rclb
mov
aad
fadds
push
nop
sub
neg
dec
mov
jb
nop
lds
cmp
test
mov
idivl
xor
xor
scas
outsl
in
arpl
push
inc
pop
push
pop
lahf
mov
shrb
in
jle
sub
and
ja
xchg
xor
ss
rcrl
dec
lods
lods
lods
pop
mov
stos
loope
mov
in
push
add
mov
push
lods
outsb
jmp
movsb
je
les
rcll
scas
fdiv
pop
in
fadds
add
and
and
xchg
gs
fnstsw
xor
inc
les
inc
sbb
fdivrp
imul
pop
cld
int3
pop
inc
cmp
jg
sbb
mov
pop
scas
jae
js
les
fstp
cmpsb
rcrb
pop
pop
sbb
cmp
inc
mov
rorl
xchg
cmpb
inc
shl
cmp
mov
pop
inc
and
push
je
pop
in
xor
pushf
insb
pusha
sub
js
push
mov
sbb
push
rorb
sbb
insb
xchg
jmp
andl
pop
hlt
ja
sbb
and
sbb
sub
jle
jge
addr16
jbe
mov
jne
mov
loope
stos
mov
xchg
outsl
mov
test
lret
enter
ficompl
jmp
push
ret
out
inc
hlt
mov
ficoml
jo
jp
popa
xor
xchg
sbb
mov
int3
and
mov
rorl
in
cmpsb
lea
xor
mov
in
pop
push
cmp
js
mov
jp
pop
or
jne
adc
and
test
out
std
outsl
sahf
mov
aam
cmp
mov
scas
cltd
iret
sbb
mov
in
inc
lods
idiv
mov
dec
jmp
push
xor
fnsave
sub
sbb
imul
jecxz
jne
xor
xor
mov
jo
or
sarl
das
sub
fists
jae
dec
mov
pushf
in
lds
adc
and
fsubr
or
mov
mov
jg
jo
outsl
int3
or
das
mov
and
pop
inc
jnp
in
scas
push
jbe
loopne
bound
cmp
sahf
dec
cwtl
pop
push
mov
cwtl
aad
pop
mov
jo
in
or
xchg
jne
mov
data16
ds
jecxz
lcall
bound
insb
rclb
repnz
or
inc
sysret
fidivl
rcrl
inc
ds
jne
enter
sub
and
fcomip
inc
add
mov
mov
sbb
mov
call
xorl
sarl
cmp
mov
outsb
shrb
fisubrs
into
cltd
or
pop
jb
pop
jecxz
lock
mov
mov
sub
cmpsb
sbb
jnp
pop
adc
cltd
aas
sbb
push
sub
adc
mov
cmp
push
cmp
mov
je
mov
mov
sahf
lods
adc
mov
pop
jle
and
fwait
out
cld
stos
or
inc
mov
js
aaa
inc
add
mov
sub
out
mov
jbe
fwait
xchg
mov
stos
add
adc
and
dec
jo
mov
xor
ds
pop
leave
loope
pop
test
push
stc
mov
loopne
xchg
or
and
add
mov
mov
lcall
mov
das
sub
or
adc
call
nop
adc
pop
cli
add
out
cmpl
jmpw
icebp
cli
sub
cmp
int3
aaa
in
and
fwait
btr
cmp
jo
sbb
xchg
xchg
lods
adcb
dec
aad
or
test
inc
xchg
mov
jmp
loope
mov
fdivrl
lahf
dec
jae
mov
xor
xchg
loopne
sti
sti
data16
std
int
sub
jl
mov
cli
adc
call
mov
gs
cmpl
lcall
push
mov
sub
insb
fwait
cld
xor
arpl
add
testb
pop
push
push
xor
push
scas
call
idiv
pop
call
rorl
fidivrs
push
out
js
add
pop
xchg
stos
out
mov
loope
and
je
int
scas
push
push
jg
popa
push
test
sbb
push
adc
aam
gs
sbb
fnstenv
and
sbb
mov
mov
arpl
jp
sub
loop
stos
jge
sub
lock
imul
mov
lods
lea
sahf
mov
sbb
and
movl
bound
pusha
ja
cmpsb
ljmp
dec
cmp
mov
mov
inc
stc
movsb
add
shll
inc
push
mov
ret
push
aam
pop
dec
xchg
inc
insb
test
or
es
sub
sti
cvtdq2ps
add
in
adc
pop
cmp
jmp
pop
lret
scas
or
pop
jno,pt
fcomps
jecxz
sbb
repnz
inc
pop
mov
cmpsb
push
repnz
int3
jge
sub
mov
test
fnstcw
ss
fwait
pop
aam
sarb
mov
mov
xor
fcoms
mov
mov
inc
and
in
lea
push
cmp
sbb
xchg
sub
mov
xchg
mov
aad
pusha
pushf
push
push
out
int
ja
sbb
adc
push
test
pop
jp,pn
pop
jmp
push
push
pop
std
cmpsb
rolb
jno
ja
sbb
jne
test
insl
xor
jae
pop
xchg
xchg
cwtl
out
test
ds
out
xchg
mov
test
lods
add
es
xchg
xor
mov
in
cmp
int3
data16
cwtl
bound
adc
pop
andb
mov
cmc
sbb
push
ds
cld
cmp
and
add
mov
xlat
mov
sbb
push
sub
int3
jecxz
loop
and
jnp
aas
and
fdivl
adc
pop
mov
add
and
pop
divb
fimuls
fwait
inc
dec
sbb
outsb
adc
into
pop
adc
in
sub
sbb
jno
jo
loopne
fists
ss
rorb
arpl
outsl
adc
jb
jge
movsl
xlat
testb
adc
cmp
push
loopne
or
jne
fs
enter
mov
adc
arpl
adc
or
dec
pop
and
lret
out
cmc
lea
dec
lahf
pushf
xchg
loopne
mov
aam
orl
outsl
stos
mov
mov
popf
jae
mov
inc
inc
mov
out
inc
notb
inc
lcall
int3
jp
mov
in
cld
xor
jbe
stos
in
mov
out
push
add
sub
mov
xor
jg
ret
hlt
pop
aad
in
and
lcall
pop
iret
sub
lods
and
test
sub
adc
rclb
daa
mov
lcall
in
xchg
and
xchg
fldcw
les
lods
loopne
cltd
mov
jno
lea
jb
inc
loop
mov
mov
aas
clc
xbegin
inc
mov
jp
out
sub
es
and
daa
mov
into
fwait
out
js
add
imul
out
mov
sbb
sbb
push
das
adc
bound
rcrl
cmp
out
add
jp
xor
xchg
mov
cmp
add
cld
cli
ljmp
mov
cmp
sbb
or
ret
cmp
xchg
popf
sti
shll
xchg
adc
out
mov
inc
lahf
into
fs
pop
lcall
mov
xchg
lret
push
adc
fbld
cwtl
xor
sub
lret
fucomi
cmp
aad
lret
pop
or
gs
dec
add
cmp
mov
dec
mov
ficomps
aad
xor
int3
jge
fs
dec
sub
sarl
mov
dec
ss
sub
rcrb
jns
cmp
in
sub
push
and
sti
ret
mov
mov
sbb
mov
pop
test
cli
fdivrs
inc
fcomip
and
stos
out
add
mov
jb
mov
mov
test
pop
jecxz
dec
rcrl
inc
ljmp
sub
push
jg
and
jno
xchg
lret
jnp
fisttpll
es
xor
cmp
sbb
sub
xchg
jbe
mov
jno
sbb
in
dec
cmp
movsb
push
mov
xchg
jae
push
sub
ss
pop
mov
lahf
xchg
mov
xor
adc
fs
leave
push
cmp
sahf
mov
hlt
mov
in
addl
cmp
cmp
lahf
cmc
adc
test
mov
cmp
mov
pop
and
movsl
jo
mov
xchg
hlt
insl
in
or
shll
push
cltd
out
insb
mov
inc
mov
and
aad
idivl
xchg
fstl
stc
scas
mov
scas
popf
out
inc
xor
cmp
jecxz
imul
or
sarb
adc
cmpb
jns
mov
mov
add
je
movsl
xchg
outsl
pop
push
sub
lret
stos
dec
stc
jg
xchg
pop
jno
jmp
shrl
sub
and
cmp
subl
cltd
out
pop
pusha
js
fists
clc
and
pusha
pop
cmp
bnd
jmp
mov
cmpsb
or
mov
lods
rcl
jbe
test
imul
sbb
ljmp
dec
push
mov
in
xchg
xchg
inc
bound
outsb
stos
cmp
xor
pop
cmp
mov
xor
xor
inc
push
xchg
xchg
cmp
lss
ret
xor
cld
std
fdivrp
mov
adc
push
pop
outsb
lea
outsl
inc
add
jo
call
add
push
in
outsb
mov
push
or
popa
insb
jecxz
gs
push
jb
mov
xchg
push
sub
push
mov
inc
mov
call
shlb
data16
das
loope
push
test
test
pop
repnz
pop
push
adc
xchg
push
aam
cwtl
nop
mov
sub
sub
xor
mov
xchg
fwait
popf
outsb
jne
jmp
adc
add
jae
fisubrs
lock
xchg
xchg
je
pop
xor
stc
inc
aaa
push
fdivrs
aad
fmull
mov
cmp
jl
lret
or
dec
mov
mov
and
je
std
sub
ret
dec
popf
into
stc
stc
enter
sbbb
dec
lds
pop
pop
push
lea
sbb
sub
mov
fnsave
mov
loop,pt
fdiv
shll
xchg
jmp
in
mov
fists
sti
inc
xchg
stc
cli
mov
jmp
movsl
ja
rclb
enter
mov
aaa
out
and
movsb
adc
dec
and
cmpsb
pop
aam
andb
mov
push
mov
mov
les
daa
test
cmp
aam
mov
cmpsl
add
adc
xchg
xchg
xchg
dec
sbb
data16
cmp
stos
or
cmpsb
bound
jg
lret
mov
sub
fimuls
or
loope
jae
push
repz
repz
xor
mov
jmp
lret
push
cli
inc
aam
jns
imul
jecxz
insb
sub
cmp
hlt
ljmp
adc
xor
sbb
adc
repz
pop
inc
jecxz
into
arpl
mov
sub
cwtl
movsl
pop
and
loopne
arpl
rolb
test
mov
lods
xchg
push
lock
sbb
and
xor
in
jmp
scas
cmpsb
lahf
les
clc
mov
aaa
lret
lds
xor
mov
lret
pop
xor
xor
orl
and
jmp
into
push
ds
xchg
ljmp
outsl
popl
ljmp
mov
sub
adc
rcll
pop
ljmp
pop
add
mov
mov
pop
movsb
cmpsb
leave
daa
sbb
mov
arpl
shlb
sub
adc
jg
xchg
in
fwait
mov
stos
add
pop
aam
in
xor
mov
pop
pop
mov
and
stc
mov
xor
int3
negb
or
lods
push
mov
cli
inc
push
dec
sbb
and
push
push
sub
mov
xor
stc
fs
cld
inc
adc
pop
dec
bound
rcl
mov
dec
inc
sub
adc
outsb
push
loopne
in
sbb
cli
sbb
aad
clc
cli
dec
in
mov
icebp
lods
push
inc
movsl
es
in
xchg
jl
dec
hlt
das
cmp
out
leave
jno
lret
call
daa
jae
iret
jle
mov
and
mov
mov
mov
push
iret
dec
popa
inc
mov
lods
popa
mov
sbb
addr16
xchg
mov
hlt
push
push
out
idivb
mov
cs
inc
in
push
xor
lret
jb
sub
aas
stos
inc
or
bound
aam
or
inc
stos
sbb
loopne
xchg
loop
insl
lods
jp
clc
add
or
xchg
insb
inc
inc
add
jge
das
cmpsl
sbb
lea
sub
inc
add
and
inc
dec
das
xor
pop
xchg
xor
fildl
int
rcll
mov
add
inc
push
push
icebp
or
das
sbb
test
std
xchg
mov
fisttpll
loopne
mov
lds
cmp
rolb
fnstcw
lock
fs
mov
cmp
iret
push
imul
ret
and
divl
stc
lds
push
sbb
cmp
fcom
push
stc
filds
rcl
test
sbb
lods
sub
mov
adc
stos
inc
jo
adc
setb
shrl
inc
xchg
test
sub
shr
jl
cwtl
or
in
pop
iret
fs
pop
mov
aaa
cmp
lahf
mov
ret
pop
add
inc
mov
push
adcb
pushf
sahf
aaa
loop
aaa
out
pushf
or
mov
xor
mov
test
adc
test
pop
mov
pop
xlat
ret
fwait
xchg
add
xor
jno
inc
push
enter
add
inc
insb
mov
jbe
das
rcl
das
jb
fbstp
jnp
rorl
pop
sub
gs
mov
mov
or
pop
in
dec
jnp
jbe
fsubr
jno
cmp
lock
dec
loopne
ffreep
sbb
mov
popfw
int
push
ja
jg
imul
test
xor
push
jle
movsl
gs
movsl
xchg
inc
outsl
in
scas
adc
cmp
sbb
push
in
pop
pop
daa
or
or
mov
pop
jb
nop
or
out
pushf
lcall
jp
mov
testb
adc
lods
in
xor
fisubl
jp
xchg
scas
xchg
dec
mov
xchg
pushf
mov
mov
into
mov
sti
adc
fisttps
sbb
call
adc
aad
lock
popa
dec
out
iret
frstor
nop
xor
jns
repnz
pop
int3
xor
mov
inc
pop
arpl
mov
fidivrs
fbld
inc
fpatan
or
mov
sub
daa
ficoml
mov
in
sbb
inc
dec
push
add
cmc
ret
adc
dec
mov
fisubrl
cmpsl
sub
and
loope
cmpl
xchg
scas
add
add
sub
push
vmwrite
enter
push
lock
cli
mov
push
test
xchg
out
test
cmp
mov
test
scas
dec
outsl
sub
icebp
cwtl
aaa
out
and
dec
scas
lcall
mov
cmp
filds
pop
std
addr16
loopne
movsb
xor
sbb
rclb
sbb
mov
and
in
mov
cmpsl
pop
cmc
jno
shrb
test
addl
cmc
cmpsb
pop
out
add
repz
push
sarl
popf
dec
xchg
aas
add
xor
dec
fdivr
jmp
mov
clc
out
mov
mov
jae
mov
test
and
and
stc
mov
pop
add
inc
mov
xchg
pop
xor
sar
shll
sub
frstor
lods
cmp
fcomi
add
lea
dec
aas
fldl
push
jbe
mov
and
xchg
mov
ret
jbe
pop
jo
pop
mov
pusha
jo
lret
flds
leave
cmp
add
popf
shll
sbb
cwtl
mov
push
xchg
test
xor
fdivp
mov
lods
fnstcw
xchg
aas
sahf
xbegin
iret
mov
mov
rorl
xchg
out
add
inc
xchg
aam
lret
idivl
or
sub
pop
inc
pop
sub
add
sbb
add
mov
out
xchg
lock
ret
adc
clc
cmpl
add
shl
xchg
xchg
sub
loope
ret
pop
xchg
xor
mov
mov
ss
std
sti
add
loopne
fstl
mulb
scas
sbb
mov
fcoml
jb
mov
movsb
mov
ficoml
hlt
cmp
sbb
ret
idivl
scas
and
call
mov
insl
outsl
and
js
sbb
pop
ja
cmp
arpl
arpl
aaa
das
ret
stos
xchg
fsubs
cwtl
jp
test
stos
push
int3
mov
clc
test
movsb
sbb
cmp
pop
imul
mov
ja
mov
pop
lahf
or
mov
cmpsb
dec
dec
or
stc
int3
stc
gs
es
adc
test
pop
or
inc
ss
test
mov
test
mov
icebp
sub
out
addr16
xlat
pusha
jge
pop
repnz
mov
mov
pusha
jp
sti
push
lods
sub
pusha
sbb
jmp
and
sbb
mov
mov
fdivs
mov
in
add
repz
jmp
int
imul
sbb
push
ljmp
out
push
mov
xchg
ret
fmull
adc
and
fisubrs
mov
jbe
ss
lock
push
mov
xor
aam
sub
int
push
mov
int3
clc
cs
aas
sbb
mov
mov
xchg
mov
pop
pop
lahf
and
pusha
push
sbb
mov
jl
das
jb
add
jp
and
sub
cmpsb
push
push
out
cs
lds
ljmp
ja
mov
aam
mov
push
adc
jp
dec
insb
inc
scas
sbbl
and
nop
mov
fiadds
cwtl
out
out
xor
dec
dec
aas
jg
gs
stc
push
ja
imul
int3
in
push
cmp
int3
dec
mov
mov
fistps
popa
clc
or
ret
inc
jl
addb
xor
mov
pop
in
ret
adc
and
int
fst
movsl
sub
mov
sahf
ret
pop
lock
int3
orl
into
cli
ss
cmp
mov
addr16
subb
xor
sbb
mov
scas
or
dec
dec
push
mov
inc
mov
and
mov
lods
clc
pusha
lock
out
lock
cmpsb
mov
pop
adc
mov
rcrb
or
insb
xor
loopne
mov
mov
out
cmp
ret
in
in
push
cs
cmp
push
lret
sub
in
inc
or
mov
mov
fstpt
call
jle
xor
mov
sti
sub
add
mov
xor
cmp
hlt
or
je,pn
pusha
ja
mov
add
cmc
fsts
inc
testl
sub
xchg
jg
stos
dec
and
mov
daa
in
cmpsl
push
test
push
mov
imul
mov
pop
popf
cmpsl
ret
add
xor
outsl
popf
sti
insl
mov
mov
outsb
loop
cmp
or
adc
out
pop
jno
lret
stos
icebp
int
pop
jge
stc
outsb
pop
xor
fs
lods
pusha
xor
mulb
and
cmpsl
adc
xchg
sub
ja
jne
or
adc
cwtl
sahf
adcb
jno
xchg
test
xor
push
es
add
pop
out
ret
sub
adc
test
test
jne
jo
mov
add
lods
out
jne
std
sub
loopne
loopne
int3
cmp
ljmp
cld
dec
sahf
push
js
jmp
je
xor
insb
xchg
fs
jl
inc
ja
aad
cmp
cld
test
shll
lret
push
test
mov
or
inc
dec
mov
cmpb
cmp
xchg
loopne
or
sahf
cmpsl
xor
and
lods
aas
mov
imul
cld
in
adc
and
and
mov
cmp
stos
cltd
sbb
lea
xor
mov
mov
push
test
add
out
jno
insl
pop
inc
xor
xor
jbe
lret
in
in
lret
inc
jns
mov
stc
mov
loopne
fisubl
jge
cmp
mov
adc
xchg
push
dec
and
mov
shrb
xor
fldt
xor
hlt
jae
mov
xor
sub
cltd
push
adc
pop
add
test
add
jge
lods
jge
dec
or
lret
daa
into
adc
test
and
mov
or
bound
push
pop
in
ja
sbb
int3
call
jg
inc
push
jnp
add
into
and
mov
insb
mov
repnz
xchg
mov
cmpsl
faddl
imul
aad
lahf
cmpl
xchg
xor
xorl
arpl
cmc
int3
inc
roll
push
or
or
fiaddl
push
mov
ret
subl
cmp
movsl
adc
xchg
lahf
dec
mov
lds
push
xor
aam
fnstenv
and
and
sbb
ljmp
add
fisttpl
mov
jae
mov
jnp
inc
pusha
fcomp
xor
mov
jmp
int3
gs
sbbb
cmp
clc
pop
loopne
faddl
int3
push
mov
inc
add
inc
lcall
out
hlt
inc
das
shrl
or
jecxz
in
push
cmp
cmp
xchg
inc
jnp
ds
add
lahf
push
inc
xchg
adc
mov
inc
xor
das
idivb
in
mov
xchg
pop
xor
pushf
and
add
shlb
sbb
xchg
ja
pop
call
outsl
pop
dec
dec
shrb
or
jp
adc
inc
or
pop
test
ret
jne
fmuls
pushw
mov
sbb
and
cmp
jmp
enter
dec
flds
stos
lods
clc
sbb
daa
loope
jae
ret
xchg
pop
enter
mov
movsb
cltd
shrl
push
sti
dec
cmp
mov
ljmp
inc
aas
shll
pop
xor
std
int
mov
repnz
das
mov
or
repnz
mov
mov
and
sub
mov
inc
mov
xchg
xchg
push
pop
cs
mov
xor
popf
sti
lret
jno
in
pusha
movsl
adc
jg
sbb
sbb
xlat
fdivl
sbb
push
adc
sub
subb
testb
xlat
pop
stos
mov
push
lock
mov
add
pop
lea
fdivl
shrl
pop
cmp
lret
dec
dec
test
das
push
sub
std
mov
inc
ret
jno
xchg
js
sbb
pop
adc
stc
test
adc
jb
sti
and
out
cltd
hlt
fxch
jp
cltd
cmp
push
mov
jmp
icebp
push
jo
je
test
adc
xlat
or
inc
je
cs
lea
add
add
ss
mov
les
xor
idivb
mov
or
stc
pop
mov
es
jecxz
int3
jo
sbb
jmp
or
nop
icebp
cmc
push
xor
jl
add
pop
mov
pop
sarl
or
adc
or
adc
fnstenv
outsb
aam
movsl
dec
rol
arpl
pop
cld
std
lret
out
shrb
push
icebp
ret
adcb
adc
icebp
in
adc
inc
mov
loopne
jle
mov
jg
iret
jae
or
fdivrs
sbb
call
aam
jnp
cmpsb
sub
dec
fildll
rcrb
mov
mov
push
sub
mov
add
lret
daa
gs
push
pusha
arpl
sub
adc
pop
dec
rcrl
int3
int
decl
aad
jge
std
cwtl
cmpsb
scas
push
xor
stos
sbb
out
adc
inc
inc
das
push
into
enter
sbb
mov
jno
incl
pop
push
pop
mov
lret
mov
loope
pop
repz
sub
jmp
stos
mov
int
or
scas
sbb
xchg
dec
jnp
popa
xor
enter
cmp
stc
insl
cmp
sub
faddl
sub
add
mov
xchg
mov
mov
insb
popf
mov
mov
add
push
arpl
out
ret
sarb
jae
das
lods
pop
cltd
xor
mov
outsl
pop
ret
sub
cmp
add
xor
std
mov
adc
xchg
movsl
pop
and
jnp
daa
inc
mov
mov
sbbb
es
jge
cli
jns
jmp
push
enter
or
mov
pop
cmp
pop
cmp
imul
incl
mov
and
stos
iret
mul
outsl
pop
in
or
mov
xor
cltd
and
cmovg
adc
mov
push
sub
or
xchg
daa
lods
testb
and
movsl
mov
cli
xor
lea
div
mov
mov
scas
mov
pop
mov
mov
shrb
jecxz
mov
sub
mov
mov
mov
out
fbstp
add
lds
and
xchg
mov
lahf
fisttpl
inc
and
pushf
popa
cmp
dec
jns
sub
aaa
xchg
cli
hlt
movsl
decb
aad
cmpsl
adc
fiaddl
sbb
lock
scas
notb
adc
inc
mov
push
in
fdivr
push
lock
rolb
xor
test
out
sbbb
jo
fdivrp
lods
pushf
jns
pop
pop
ljmp
loopne
ja
fldl
lret
pusha
jns
popa
std
call
or
mov
out
lea
rorb
and
inc
int
sbb
xchg
les
inc
push
ja
mov
out
ret
add
adc
or
imul
popf
inc
cld
mov
dec
icebp
sarl
ret
dec
xor
mov
pop
push
fnstsw
and
push
out
pushf
stc
outsl
faddl
xchg
test
and
push
dec
out
std
fistpll
jns
scas
aaa
pop
daa
pusha
adc
inc
data16
pop
into
mov
clc
and
cmpsl
or
and
and
inc
in
add
jb
mov
lock
mov
ss
cmc
xlat
lock
jae
pop
push
inc
sti
lret
cmp
cmpsb
jae
jno
adc
dec
scas
leave
fnsave
push
adc
add
and
lret
jmp
jecxz
in
lret
sub
push
xchg
mov
stos
mov
adc
roll
pop
xchg
jl
lds
inc
roll
movsb
jl
fwait
or
shl
test
stc
pop
shl
inc
mov
clc
xchg
pop
sbb
xchg
xchg
ret
dec
dec
pop
insb
mov
je
dec
adc
xchg
add
mov
push
mov
sbb
jae
inc
and
sbb
loopne
jo
outsb
std
inc
mov
fucom
push
sbb
popf
jmp
xor
repnz
mov
cs
test
push
push
stos
ss
dec
inc
dec
imul
ljmp
lcall
jnp
pop
add
inc
js
lods
inc
rolb
fstps
ret
xchg
jp
sbb
in
cwtl
popf
lret
pop
mov
pop
mov
in
dec
mov
adc
cmc
dec
push
lods
xchg
cwtl
rcrl
xchg
lods
or
fldt
sub
cmp
add
cltd
mov
cwtl
xorl
cmp
adc
into
lea
lods
inc
mov
popa
xor
loop
div
jecxz
nop
add
inc
insb
fwait
dec
rorb
std
xchg
ret
adc
push
fisubl
cmpsb
sub
push
rcrl
scas
dec
push
or
cmpsl
inc
pop
pop
mov
pop
cmp
or
jne
jb
jns
ret
fidivl
sti
cmp
xchg
xor
mov
loope
mov
mov
out
jecxz
stos
es
out
lret
lcall
pop
test
rorl
or
scas
adc
sub
sarl
roll
lret
mov
push
pop
scas
rol
push
fistps
mov
pop
jae
inc
shll
in
sub
mov
jo
mov
mov
mov
notb
das
adc
and
fildl
mov
sbb
inc
cmp
sub
inc
fs
mov
xchg
sbb
icebp
add
xchg
leave
rcrb
imul
lcall
push
sub
lret
ds
lcall
pushf
gs
shrb
je
cmp
xchg
or
dec
xchg
aaa
scas
lock
scas
xor
cltd
sub
adcb
stos
lret
das
movsb
pop
xorb
fcmovnbe
add
sub
popf
shl
pop
mov
xchg
insb
call
pmaxub
std
sbb
test
push
adc
mov
sbbb
pop
mov
pop
stos
cwtl
call
ss
aad
cld
xorl
and
sbb
lds
test
mov
sub
add
call
jnp
sub
shlb
mov
and
pop
cs
into
jae
in
sub
xchg
scas
adc
xchg
push
mul
aas
push
imul
paddd
inc
notl
adc
out
insl
sub
push
icebp
in
add
stc
enter
outsb
cmp
inc
jo
call
sub
cmpsl
mov
mov
mov
dec
add
pop
shl
inc
data16
sti
repz
sahf
in
testl
rclb
insb
cmp
lods
pop
and
mov
shll
lea
xchg
sub
xor
repnz
push
cs
cmp
mov
dec
lret
pop
stos
xlat
pop
pop
mov
cs
sub
jne
push
push
js
bound
sub
xor
inc
mov
into
aam
pop
mov
push
adc
test
gs
lret
fadds
fs
push
sub
cmp
mov
adc
jecxz
lods
and
inc
cmp
shl
dec
jecxz
test
pop
hlt
pop
dec
repnz
add
ss
or
mov
nop
loopne
pop
cmp
mov
xor
pop
ja
dec
scas
js
cs
cli
and
icebp
adc
nop
sbb
cwtl
push
add
or
repz
sbb
std
nopl
lock
out
testb
dec
pop
das
mov
in
dec
xor
xchg
shrb
mov
scas
ljmp
loop
gs
mov
dec
orb
nop
mov
cmp
shr
divl
add
loope
pop
lea
fadd
cmp
pop
icebp
pop
mov
lods
outsl
in
jge
lods
jnp
mov
xor
aaa
pop
pop
xor
push
jb
enter
inc
hlt
dec
adc
les
push
sbb
ret
lock
loopne
sahf
adc
lock
and
jge
jo
mov
js
dec
mov
dec
test
push
insb
xchg
test
or
out
cli
jae
ljmp
push
add
mov
out
mov
lea
in
imul
stos
mov
pop
inc
jo
mov
out
push
mov
or
add
mov
inc
stos
mov
pop
jmp
jle
ret
add
cmc
add
flds
nop
xor
ja
lods
and
shl
lret
push
add
outsb
xchg
iret
inc
mov
inc
inc
jmp
mov
pop
xor
mov
loopne
enter
in
jbe
cmp
rcll
adc
jge
movsb
outsb
movsl
sahf
mov
pop
insb
test
insb
jbe
push
fimuls
sub
pop
cmp
xor
push
jp
cmp
sbb
add
cmp
movsb
adc
xchg
dec
sbb
ret
adc
xchg
mov
aaa
pop
xor
out
ja
daa
and
and
mov
or
fincstp
dec
pop
add
jo
mov
imul
std
cltd
or
xchg
movsb
sbb
insl
mov
rol
test
xchg
scas
or
cmp
sbb
pop
aad
mov
sub
cli
sahf
int
std
fisttpll
adcb
pop
jno
jmp
mov
and
mov
or
cmpsl
jae
push
sub
xchg
or
imul
test
lret
add
testb
sub
repnz
repnz
push
fs
and
outsl
mov
inc
iret
push
dec
jmp
mov
and
ja
les
leave
xor
mov
cmp
cwtl
or
adc
hlt
sub
dec
call
jecxz
dec
std
mov
loopne
sub
cli
pop
mov
pop
push
add
xor
shlb
in
stos
mov
xor
mov
inc
cmp
lds
xchg
testl
idivl
mov
xor
mov
iret
sbb
sbb
cmpsb
loope
mov
loope
fidivs
xchg
push
addb
inc
pop
cmp
pushf
pop
outsb
jo
ret
std
mov
sbb
outsl
lcall
lods
subl
popf
xchg
sub
sahf
loope
pop
and
xor
xor
rcl
addr16
imul
outsl
mov
stc
push
push
jl
jle
in
test
sbb
lds
fidivrs
icebp
lods
or
dec
clc
out
mov
jno
fstps
mov
push
fstl
scas
ss
xchg
xchg
cmpsl
sbb
jbe
getsec
add
and
fcompl
cld
sbb
xchg
xlat
rolb
leave
push
mov
jmp
fimuls
add
dec
xchg
inc
xor
in
cmp
dec
insb
out
or
xchg
bound
jecxz
push
ret
gs
mov
mov
outsl
xor
testb
outsl
jecxz
test
stos
dec
xchg
push
loop
lods
shll
stc
sbb
outsl
jne
cmp
inc
rcll
cmpsl
popf
outsl
xchg
mov
xor
into
pusha
cmc
pop
test
and
jge
test
mov
xor
add
addr16
mov
push
mov
fcoms
mov
add
fxch
sub
les
jmp
mov
add
sbb
enter
icebp
cmp
jecxz
imul
mov
push
bound
insl
dec
xchg
mov
add
test
lret
or
shll
mov
and
sbb
inc
das
enter
jmp
test
clc
leave
mov
push
insb
ja
adcb
push
jmp
and
push
mov
lret
jl
je
or
fsubrs
leave
cmp
arpl
das
dec
loopne
gs
sti
mov
mov
mov
push
pop
imul
fsubrs
push
js
add
mov
mov
sub
adc
scas
add
push
or
or
test
aaa
mov
or
std
sti
mov
mov
xchg
and
sbb
jle
xlat
ja
inc
movsl
sbb
dec
push
jo
cmpsb
aad
dec
ret
in
sbb
pop
pop
inc
lahf
ljmp
call
sbb
lock
pop
in
sub
add
pop
dec
xchg
push
ss
pusha
stos
adc
cltd
xchg
pop
jg
repnz
and
les
sbb
lcall
mov
add
jns
push
mov
dec
loop
cld
cwtl
imul
imul
jae
add
cmp
cmpsl
loope
xor
in
xorl
xchg
cld
cmc
les
clc
adc
dec
push
loopne
mov
and
arpl
mov
cmc
jnp
out
loopne
pusha
mov
add
push
icebp
fdivrs
inc
enter
push
scas
mov
out
out
js
or
xchg
rolb
push
cmp
or
jle
add
stc
add
daa
adc
mov
push
jbe
inc
cmp
xchg
into
push
fwait
shlb
addr16
outsb
ss
rorl
xor
faddl
push
je
lret
inc
mov
loope
jb
mov
dec
add
repnz
mov
sbb
dec
sub
ljmp
rorl
sub
ret
xchg
movsb
fcomps
add
rol
mov
xlat
jno
call
jns
and
js
mov
fidivs
inc
fwait
cmp
add
lods
outsl
adc
out
xchg
data16
xor
pop
cmp
push
xchg
cmovg
hlt
push
xchg
push
mov
loopne
cltd
inc
in
mov
mov
cmp
adc
xlat
pop
add
rcrl
xchg
add
shlb
or
pop
sub
aam
les
sti
dec
sahf
xor
mov
jmp
je
fcompl
rcrb
fmull
dec
sbb
loop
xchg
cmp
push
push
in
cld
jg
inc
lcall
pop
push
cmpsb
sub
add
daa
dec
filds
lret
std
mov
cmp
jae
bound
mov
fwait
shrl
aas
cs
insb
mov
mov
das
in
mov
test
push
jge
ss
nop
xchg
into
pushf
pusha
and
scas
rcl
mov
jne
arpl
insb
shll
pop
aas
mov
imul
fistpl
in
cmp
dec
adc
lret
sbb
or
pop
xor
out
push
fbstp
pop
jl
dec
pushf
cmpsl
pop
xorl
insb
fdivr
mov
test
jp
add
subl
sbb
clc
fstpt
lock
add
call
shlb
addr16
cmc
push
into
push
jmp
rorl
xchg
and
jp
in
clc
movsl
push
pop
mov
pushf
rcll
mov
and
cmpsl
into
xor
adc
push
sbb
adc
jne
ret
out
in
call
ror
mov
xchg
jge
test
adc
je
popf
inc
jae
sbb
sbb
stc
pop
nop
rolb
and
inc
push
pop
jo
shr
xor
test
out
lods
hlt
std
xchg
mov
cmp
jb
inc
enter
mov
sub
cmp
out
imul
je
mov
loop
sbb
xchg
cmp
mov
mov
icebp
sbb
push
xor
mov
or
jb
adc
inc
or
insb
jl
lea
cwtl
shr
hlt
in
cmp
push
jbe
aaa
in
pop
jge
mov
add
cld
ljmp
xchg
call
ret
adc
lahf
xchg
mov
bound
and
shll
cmc
mov
ja
stos
jno
loope
or
xor
daa
mov
sub
rcrb
add
xchg
inc
cmp
roll
mov
sub
mov
pop
push
add
lea
sbb
fwait
mov
int3
stc
sbb
fisttps
insl
insb
test
shll
mull
push
adc
shrl
jo
outsl
mov
out
scas
vunpcklps
mov
push
mov
xchg
mov
lods
xor
jns
out
push
imul
fs
ficoml
in
dec
test
mov
pushf
in
sub
imul
jns
xchg
mov
mov
lret
repnz
and
sahf
sub
or
xlat
adc
add
cmpsb
sbbb
dec
outsl
pop
xor
test
add
sbb
insl
in
out
sarb
dec
add
xlat
cmp
mov
lods
sbb
ret
and
push
pushf
and
out
add
int3
frstor
movsl
mov
pop
sbb
dec
sbb
pop
cltd
push
lea
pop
mov
push
test
jge
das
push
cwtl
shl
jmp
lods
lods
sbb
in
push
sbbb
ljmp
jns
movsl
sti
sbb
aam
cmpsl
mov
lds
jg
aam
loope,pn
xchg
sbb
fstps
and
add
xchg
arpl
cwtl
andb
in
insl
cs
sti
xor
nop
test
jnp
jnp
lcall
mov
xor
in
jb
test
inc
stc
hlt
sub
leave
jmp
jno
add
imul
jae
inc
inc
aaa
xor
arpl
mov
xchg
sahf
push
inc
repz
xchg
ss
test
hlt
stos
push
xlat
inc
xor
out
movsb
mov
out
dec
xor
inc
das
xor
sub
fwait
sub
sbb
ss
sub
repz
mov
mov
xor
enter
cmp
mov
shrl
push
cwtl
icebp
and
xor
loop
popf
lret
fwait
mov
shrd
popf
lds
push
push
mov
int
mov
add
mov
inc
cltd
cwtl
mov
lret
or
imul
lret
test
push
lret
mov
mov
dec
cmp
pusha
fistpll
cmp
sbb
cld
adc
test
push
out
sti
hlt
ds
rorb
sub
jbe
push
cli
mov
cmp
daa
gs
gs
and
lea
shrb
push
add
xchg
jns
stos
and
cmp
and
adc
cltd
sub
and
cmpsl
push
popa
add
xor
js
jb
push
out
lock
je
jno
leave
jle
fwait
lret
sti
mov
dec
pop
inc
mov
test
dec
mov
fdiv
pushf
mov
and
mov
aam
adc
xchg
in
testb
jns
add
data16
clc
pop
push
inc
or
and
test
movsl
scas
leave
jnp
pop
dec
std
repz
gs
outsl
aam
xor
outsb
ret
push
and
push
imull
scas
cwtl
mov
out
mov
mov
aad
cmp
iret
aaa
lods
ss
cli
mov
pop
push
adc
shll
mov
mov
outsb
fisttpl
jle
or
xor
mov
cli
inc
adc
lock
clc
adcb
js
push
adcl
lds
and
rclb
shrl
imul
mov
mov
xchg
mov
cwtl
xor
dec
pushf
out
rol
mov
xor
cmp
adcb
or
fsubp
stc
faddl
in
push
repz
inc
jle
mov
sbb
ret
pop
push
mov
loope
and
add
stos
fcompl
ja
sub
and
outsl
insb
sub
in
push
lahf
mov
loop
jbe
xchg
mov
clc
pusha
imul
adc
mov
and
cmpl
add
jae
mov
xchg
dec
pop
push
dec
mov
test
jo
aas
enter
xor
xorl
cmp
xor
daa
in
sbb
rcrb
fdivrp
in
dec
sbbl
leave
push
cmpsl
inc
jae
bndldx
insl
jno
das
cli
sbb
pop
push
sbb
nop
and
fnstsw
cli
ret
subb
fwait
sbb
lock
movsl
lcall
dec
and
jle
inc
je
xchg
mov
xchg
packsswb
mov
xchg
add
outsb
or
pop
icebp
les
test
push
mov
imul
add
push
imul
sbb
stos
inc
pop
lds
sub
push
scas
xor
test
lock
aaa
aad
and
cwtl
inc
adcb
jno
lods
dec
cmp
jp
movsl
jp
push
mov
mov
mov
sbb
jg
ss
push
cmp
idivb
inc
sub
aas
dec
pop
pop
sbb
and
gs
xchg
lods
mov
aas
cmp
mov
iret
xor
adcb
or
repnz
cltd
xbegin
cmpsl
push
ja
mov
negl
jp
popa
fwait
sub
lret
sub
mov
mov
push
xor
sbb
xchg
ljmp
cmpl
lcall
or
adc
sar
push
sti
add
shlb
xchg
xor
mulb
lcall
xor
cmp
test
inc
movb
cmp
loop
std
push
gs
insb
movsl
mov
aas
pop
push
and
adc
out
or
out
int3
int
sub
mov
mov
push
push
int3
sbb
scas
pushf
push
mov
sahf
pop
lahf
and
xor
fnstsw
notl
mov
into
cmp
jmp
popf
dec
pop
sahf
outsl
pop
push
sbb
push
dec
fnstsw
sub
cltd
jmp
cmp
jae
nop
movsl
lea
jnp
push
or
adcb
ss
jmp
test
pop
cltd
pop
loop
push
add
dec
pusha
mov
lock
or
jmp
dec
mov
ds
jno
das
dec
or
sbb
lret
inc
fdivrs
lea
ret
and
and
lahf
or
push
jo
notb
repnz
xor
aas
mov
sub
add
jne
or
dec
xchg
aaa
fisttps
push
sahf
dec
and
inc
fmuls
and
rcrb
add
xor
adc
add
shrl
dec
cmp
lcall
xchg
mov
jnp
outsb
add
mov
loope
dec
and
rcrl
adc
inc
xorl
inc
and
data16
cmp
stos
jecxz
leave
xchg
stos
scas
shl
jl
fadds
push
pop
mov
pushf
lods
mov
push
mov
inc
and
xchg
dec
sub
mov
dec
cmp
jne
sti
mov
pop
movsb
push
ss
inc
imul
movsl
les
or
dec
lds
jmp
lock
das
scas
fisttpll
mov
out
sbb
jb
cmpsl
pop
leave
add
insl
add
mov
scas
dec
jne
inc
jmp
xor
mov
mov
outsb
aas
pop
xor
int
push
in
or
jne
push
cmpl
lods
dec
ror
int
lods
addr16
and
addb
icebp
mov
jge
leave
sub
xorl
addr16
ret
inc
movb
aam
or
sbb
test
dec
sub
pusha
pushf
aaa
aas
adc
cmp
rolb
dec
mov
jne
add
out
pop
aad
mov
pop
push
pusha
sub
add
and
mov
and
push
and
nop
cld
cmpsb
repz
xchg
xorb
ljmp
pushf
bound
scas
in
pop
pop
fsubr
add
ljmp
out
xor
out
xchg
or
aam
adc
ljmp
inc
movsl
dec
fdivp
pusha
rcrl
rclb
cs
leave
pop
les
xchg
sub
addb
xchg
imul
sub
lcall
add
push
xchg
insb
or
fs
lcall
imul
rcll
adc
je
int3
scas
inc
ja
add
das
or
jecxz
jae
mov
ds
pop
insb
fcoms
es
test
repnz
lret
scas
pop
outsb
inc
in
mov
arpl
jo
fstp
dec
enter
and
in
cltd
pop
lods
add
int
mov
lods
movsb
stc
jle
sahf
loop
jl
out
mov
ljmp
adcl
xchg
jmp
push
lahf
pop
jo
push
mov
xor
lahf
add
cwtl
or
or
cmp
testl
fcompl
popa
sub
mov
arpl
shll
add
js
pushf
aam
push
pop
mov
repz
jge
test
mov
cltd
cwtl
aas
js
mov
push
dec
push
popa
add
xlat
aas
push
loop
loopne
inc
mov
pop
or
stc
in
cmp
shll
orl
xor
jmp
sbbb
loop
cld
fdivrl
mov
addb
out
and
push
push
add
xchg
insl
mov
mov
xchg
fcoms
dec
dec
into
push
or
fs
sub
ljmp
lahf
loope
push
movsl
xchg
gs
outsb
push
out
push
mov
rcl
sbb
inc
lea
test
out
test
pop
mov
test
ficoml
cld
push
enter
xor
add
das
xor
cmp
mov
push
imul
add
popf
sub
cmc
push
into
imul
int3
jnp
and
shl
int3
push
imul
jnp
lea
enter
push
cwtl
jb
fwait
mov
lock
sbb
cmp
cmc
inc
mov
ficompl
insl
inc
enter
cli
dec
mov
outsb
int3
mov
test
in
das
js
stos
dec
les
adcl
push
xchg
push
scas
jne
fidivrs
test
test
cld
popf
mov
pop
sbb
in
mov
stc
sbb
push
loop
add
in
dec
mov
xchg
bound
movsb
rorb
movsb
xchg
imul
mov
add
lcall
adc
nop
cmc
roll
adc
and
adc
nop
mov
je
ret
mov
mov
fldcw
mull
inc
mov
fcomps
mov
outsl
cmp
dec
inc
js
mov
fldl
and
cmp
leavew
inc
lea
int
mov
sbb
pushf
dec
lahf
outsl
cmp
in
xor
sub
lock
jl
data16
jnp
dec
mull
mov
add
and
mov
dec
cmpb
aad
push
add
out
mov
das
mov
sahf
push
adc
mov
movsb
push
pop
mov
fwait
sub
dec
sbb
enter
out
ret
pop
pop
push
xchg
sahf
call
and
dec
push
clc
sbb
shll
xchg
pop
mov
std
mov
sahf
add
mov
ret
ss
cmp
push
popa
fstps
shrl
imul
xchg
jge
out
push
movsl
enter
mov
mov
dec
sub
mov
mov
fwait
mov
daa
cmp
push
ss
or
dec
pop
mov
jmp
adc
test
in
mov
xor
sub
mov
xor
mov
nop
sti
test
inc
jns
ret
cmp
icebp
pop
mov
rorb
shl
aad
xchg
push
rcll
fidivrs
loope
pop
cs
add
and
add
pop
mov
adc
mov
dec
and
jns
jnp
inc
push
popf
dec
xchg
sub
mov
dec
cmc
out
push
jbe
into
mov
lods
clc
stc
mov
scas
adc
xchg
mov
inc
repz
xor
and
cmp
std
fisttps
cmpsl
or
cmp
jae
enter
movl
les
sbb
xor
and
fildl
fstl
test
xchg
push
clc
cmpsl
xchg
mov
sbb
cltd
cmp
jns
sub
fidivl
push
push
aaa
dec
test
subb
mov
outsb
loop
sbb
mov
jno
fs
iret
pop
cmpsl
inc
mov
outsb
ficompl
and
fldcw
add
pushf
nop
mov
loop
and
ljmp
or
enter
ljmp
sarl
movb
call
xor
dec
inc
ficoms
inc
mov
mov
rcll
xchg
in
sub
outsb
je
mov
in
dec
stc
sbb
iret
dec
cmpl
add
mov
loope
dec
and
jo
sub
inc
xchg
pushf
pop
js
mov
out
xorb
and
gs
addr16
inc
and
movsb
js
fdivs
out
jne
inc
cs
icebp
daa
jnp
or
icebp
or
fs
jno
in
jo
sub
mov
roll
xor
ljmp
mov
ret
fs
mov
mov
pop
rclb
in
and
xchg
lret
and
pop
mov
push
movd
inc
jb
imul
nop
ret
pop
iret
enter
pop
mov
popa
mov
sub
pop
inc
imul
aad
or
int
xchg
or
adc
mov
mov
insb
jae
jnp
mov
pop
and
mov
sahf
inc
jns
adc
dec
add
dec
mov
std
iret
inc
imul
testl
lahf
xor
and
fwait
and
ljmp
in
int3
jmp
mov
jle
mov
out
pop
mov
push
dec
pop
adc
fwait
sbbl
mov
sub
ljmp
xchg
in
add
add
xchg
lods
sarb
cmp
inc
aas
or
ss
push
mov
inc
or
pusha
inc
mov
adc
hlt
lret
movsl
push
push
cmpsl
mov
daa
inc
cmp
movsl
icebp
xor
fwait
push
inc
data16
cmp
push
into
mov
add
or
nop
out
into
orl
mov
out
mov
gs
pop
cltd
movsb
js
and
pop
sbb
adc
cwtl
push
xchg
fdivl
repz
sarb
or
addr16
jmp
sub
pop
pop
ret
imul
lock
mov
pop
ds
adc
popa
sbb
and
test
cmp
adcb
mov
icebp
aas
nop
imul
pusha
mov
jns
lret
xchg
movsl
push
imul
dec
fisttpl
hlt
and
inc
inc
mov
call
mov
mov
movsl
fnstsw
shll
fidivs
int3
add
mov
cwtl
xor
lret
mov
mov
mov
outsb
sub
push
out
mov
jg
mov
push
dec
cwtl
clc
push
leave
jo
mov
xchg
xchg
add
stc
lock
in
fsubrl
inc
movsb
pop
test
or
push
orb
ret
pushf
fnstsw
pop
sbb
fs
jbe
jo
out
xchg
mov
out
dec
popa
mov
mov
aad
scas
cwtd
sbb
cs
cld
mov
idivl
in
repz
xor
gs
add
xchg
mov
mov
add
pop
mov
inc
pusha
fwait
aad
pop
sbbb
mov
stos
les
stos
adc
xchg
push
sbb
inc
jmp
ret
mov
repnz
shrl
icebp
push
push
mov
ret
dec
mov
faddl
popa
jo
xor
imul
xor
lods
or
dec
push
add
in
arpl
cs
loop
dec
popa
aas
enter
js
gs
inc
add
dec
dec
lods
pop
leave
fnsave
roll
data16
fwait
xor
push
daa
pop
jnp
aad
shlb
cmp
sub
dec
nop
enter
rcll
std
jo
and
cwtl
inc
mov
adc
inc
cmp
pop
pop
adc
mov
jne
jne
jmp
dec
inc
leave
cmp
aas
cmpsl
movsb
cmc
xchg
stos
xor
imul
push
xchg
jbe
hlt
aaa
mov
out
mov
popf
dec
or
ja
mov
rcl
in
aam
pop
add
pop
jno
pop
jae
nop
stos
xor
push
or
hlt
cmp
incl
scas
adc
push
ret
lcall
xor
jge
pushf
mov
cmp
or
fcomps
push
leave
aaa
xchg
es
cmp
loop
pushf
stc
popf
std
mov
shlb
add
loope
sbb
xor
and
and
add
dec
pop
maskmovq
notl
and
pop
jp
test
ficomps
dec
popa
add
stos
call
ret
or
jne
cs
xor
pop
push
cwtl
adc
fcomip
cwtl
xor
ljmp
loopne
xchg
test
out
sbb
ja
aad
fisttps
inc
mov
dec
mov
gs
sub
mov
dec
jns
enter
enter
cltd
mov
pop
mov
gs
outsl
jle
or
or
idivb
pushf
pusha
xchg
stos
aad
fnstenv
sub
repnz
push
leave
push
mov
jb
adc
dec
xlat
sbb
std
imul
sbb
mov
cmp
aas
rorl
sbb
adc
lret
push
cwtl
imul
mov
and
jl
loop
xlat
int3
data16
test
lahf
ds
daa
fidivs
xchg
or
xorb
notl
push
stos
shr
gs
aad
movsl
ljmp
lds
or
sbb
mov
sbb
sarl
aam
iret
fstpt
cmp
add
lret
adc
std
repz
mov
pop
pop
movsb
lods
and
dec
aad
ficoms
or
xchg
push
dec
adc
lret
sub
pop
mov
pushf
bound
jnp
fwait
test
sub
in
adc
xor
cmc
pop
or
mov
pop
inc
sbb
pop
ret
sbb
fcomi
mov
es
xor
enter
mov
push
pop
popf
push
mov
push
das
inc
sbb
test
cld
cld
xor
xchg
arpl
sub
out
lcall
lods
jb
pushl
mov
mov
out
push
shll
dec
dec
mov
mov
int3
pop
test
repz
gs
in
cmpsl
leave
test
push
stos
stos
jno
push
push
jno
push
push
mov
dec
cmpl
adc
lahf
xchg
fidivs
add
ja
mov
fmul
leave
cli
push
scas
cmp
pop
lds
xchg
mov
in
xchg
test
jl
and
icebp
ss
mov
adc
or
mov
and
sbb
mov
leave
xchg
imul
std
out
int
lods
or
sbb
scas
int3
roll
fisubrs
ja
inc
rol
push
add
jecxz
mov
mov
fwait
sub
inc
rorb
cmp
push
loopne
mov
dec
add
push
leave
or
bnd
cs
iret
inc
jae,pn
hlt
lods
icebp
mov
cmp
movsb
jbe
sbb
fsubrs
shlb
notb
rclb
and
frstor
xor
seto
mull
in
stos
xor
cmp
inc
pushf
mov
dec
sbb
dec
movsb
and
imul
xchg
cmc
jl
jecxz
xchg
sub
push
sub
xor
icebp
outsb
jp
jmp
dec
mov
xchg
bound
pop
adc
lock
cmpsb
xadd
xor
js
sbb
shrb
adc
push
testl
iret
jne
test
sbb
cmc
cmp
push
rcr
jnp
mov
xchg
mov
xor
arpl
ds
rclb
dec
pop
lcall
adcl
daa
adc
adc
pminub
sub
int
push
jb
xor
movsl
dec
mov
cmp
fs
sub
adc
add
ljmp
popa
les
push
insl
idiv
dec
shrb
and
sub
push
sbb
imul
fcmove
sbb
mov
loop
movsb
add
sub
ret
pop
pop
push
lock
mov
mov
out
pop
xor
insl
sbb
fists
xor
flds
mov
xor
out
mov
es
cld
xor
pop
int
iret
sbb
and
std
sbb
test
idivb
push
fxch
mov
mov
sub
fnstcw
ret
sub
pop
mov
jns
ss
insl
jp
fucom
in
in
mov
or
pop
sub
sub
insb
mov
gs
dec
xor
enter
stc
push
sahf
adc
imul
stc
add
loopne
jle
xchg
sarl
pop
inc
add
dec
sbb
mov
pop
adcl
enter
jb
dec
mov
inc
push
clc
pop
adc
movsl
enterw
daa
xor
outsb
loopne
cmp
lret
dec
shrb
adc
call
imul
pop
lods
ja
aam
hlt
ljmp
mov
sti
add
nop
in
cmp
lds
xchg
cmc
roll
pop
loopne
dec
dec
xor
xchg
dec
or
sub
cmp
pop
push
jl
push
addl
je
push
call
cmp
pop
xchg
loopne
aaa
jbe
insb
mov
xchg
movsb
outsb
fmuls
pop
xor
inc
mov
mov
push
xor
clc
mov
pop
je
int3
push
jl
mov
push
addb
mov
inc
outsb
inc
dec
loope
mov
mov
adc
insl
leave
xchg
add
sub
stos
into
mov
and
mov
iret
out
cmc
mov
lock
out
pop
mov
sub
cmp
adcb
mov
mov
mov
push
inc
xchg
mov
jns
adc
repnz
sbb
pop
pop
pop
into
mov
fstpl
nop
iret
xchg
jb
push
mov
sub
and
outsb
sub
and
xchg
xor
add
js
pushf
pop
repz
sbb
cmp
fisttps
sbb
call
lods
cmp
stos
stos
cmp
and
or
div
xor
xor
add
loope
dec
fisubrl
xlat
cmpsb
mov
xchg
popa
fs
adc
in
or
jno
stc
sbbb
mov
push
scas
mov
adc
jns
pop
popf
int3
pop
jb
loope
sub
mov
push
repz
ret
mov
pusha
dec
addb
xor
jl
and
cmpb
mov
cld
je
xor
xorb
xchg
movsb
sahf
jmp
pop
dec
mov
xor
cmpsl
in
pop
cmp
add
inc
movsl
pusha
jno
movl
xchg
or
mov
sbb
cmp
je
imul
or
inc
inc
push
jno
dec
adc
pop
push
fwait
inc
mov
push
movsl
addr16
shlb
outsb
xor
jp
mov
rorl
jecxz
daa
out
pusha
pop
scas
xchg
rcrl
shrb
push
pminub
push
jbe
sub
dec
js
lcall
xlat
fnstcw
or
aad
pop
mov
repz
lock
mov
cmp
push
out
sti
pop
fistpll
sbb
repnz
xlat
lods
jle
and
dec
inc
lcall
pop
call
jo
dec
jne
push
dec
orb
sub
jmp
pusha
insl
outsb
xchg
out
xchg
push
mov
sti
xor
jb
push
loop
inc
imul
gs
aam
adc
ljmp
jmp
mov
jb
ja
mov
fwait
xor
icebp
adc
jno
or
push
mov
push
movb
push
pop
inc
ljmp
test
xchg
iret
jb
sub
jbe
cmpb
adc
jae
in
popf
aas
jbe
xor
loopne
iret
addl
push
in
jg
or
insb
nop
mov
mov
ficoms
xor
or
je
mov
push
pop
push
xchg
adc
mov
loop
mov
loope
call
or
iret
inc
in
jmp
sub
xchg
clc
inc
mov
iret
subl
das
lock
push
push
mov
repz
mov
push
sbbb
hlt
cld
cmp
mov
mov
inc
into
sti
sbb
stc
scas
incl
push
ffreep
test
jl
sub
xchg
pop
sbb
pop
fwait
push
and
inc
inc
mov
nop
push
mov
xor
jl
or
subl
xchg
push
aam
mov
inc
fs
bndldx
dec
mov
mov
div
in
leave
aam
adc
pop
hlt
pop
jb
mov
sbb
js
aaa
loopne
loopne
xchg
adc
outsb
ror
mov
jne
repz
in
xchg
xchg
mov
inc
jno
std
add
out
movntq
inc
gs
divl
sti
dec
out
ret
push
shlb
pop
dec
imul
aas
cmp
xor
or
cmpsl
add
and
movsb
dec
imul
jnp
xor
mull
cwtl
push
inc
jne
sti
dec
or
mov
jnp
out
ljmp
mov
in
rclb
aad
lcall
mov
lahf
cld
ret
xchg
test
push
jge
ret
movsl
push
gs
lret
inc
fildll
mov
cltd
adc
dec
or
jb
mov
pop
dec
out
icebp
mov
xchg
cmp
pop
push
sub
xcrypt-cbc
cmpsl
xchg
hlt
sbb
shl
popf
adc
cmp
xor
movsb
mov
pop
dec
adc
push
add
mov
jae
mov
jl
inc
mov
insl
adc
out
cltd
or
push
sub
inc
mov
mov
pop
add
cmpsl
mov
mov
sar
lcall
push
es
scas
adc
mov
dec
xchg
push
jns
movb
or
adc
mov
fstpl
adc
mov
hlt
loop
clc
ss
dec
pop
or
cmp
aaa
inc
stos
into
mov
xchg
and
ds
dec
mov
mov
push
mov
andl
mov
arpl
inc
std
push
mov
js
xor
sub
inc
mov
jp
fiaddl
fsubl
and
push
pop
mov
test
out
shlb
cmpsl
dec
aad
or
out
cmpsl
sbb
dec
lds
out
imul
outsb
push
add
mov
scas
and
mov
and
push
cwtl
sbb
cmp
xchg
inc
aaa
inc
mov
push
das
push
xchg
cmpl
sarb
and
push
pop
jns
or
xorb
aaa
ljmp
daa
sbb
in
mov
sbb
ds
aad
xchg
fwait
sarl
ror
pop
roll
dec
jle
push
push
ds
push
jns
dec
or
jmp
shlb
mov
mov
jbe
cmp
pop
pop
inc
cmp
jnp
popa
sub
orl
jbe
xchg
scas
aaa
sub
xchg
fcoms
mov
or
mov
cmp
out
push
sarb
adc
mov
loopne
outsb
xchg
das
out
ret
xchg
xorb
int
dec
inc
jmp
or
adc
mov
jp
pusha
out
cltd
dec
push
lea
lret
sahf
scas
xchg
leave
push
pop
inc
sub
adc
loope
aaa
iret
imul
cmpsb
dec
out
cmpb
push
pop
cli
cmp
jmp
jno
cmp
xchg
pop
and
adc
std
enter
add
pop
pop
xchg
sbb
rolb
dec
or
inc
insb
stos
outsl
adc
jns
popa
lods
shrb
sub
push
pushl
xchg
pop
jb
jae
adc
sbb
aaa
loopne
jmp
outsb
cmpsl
pop
xchg
in
sbb
sbbl
nop
pop
out
sub
stc
jb
ficoml
int3
in
lret
xchg
or
repz
data16
inc
inc
xchg
pop
jge
jbe
push
jg
cmp
dec
mov
rol
fidivl
bound
arpl
push
sbb
adc
sbb
les
adc
or
cli
or
jge
nop
sbb
imul
rcl
and
rcr
clc
movntq
addb
xor
dec
mov
xlat
clc
jp
jne
clc
mov
inc
sbb
rolb
pop
sbbl
test
adc
push
sub
cmpsb
and
xor
adc
bound
sti
imul
rclb
mov
inc
add
dec
aaa
and
push
sbb
aam
test
or
inc
mov
mov
repnz
dec
push
popf
sbb
add
inc
das
in
in
push
in
xor
ss
cmp
mov
ficoms
jmp
fcoms
test
push
lret
ret
cwtl
dec
jmp
sbbb
xchg
xchg
scas
mov
dec
or
jp
nop
jno
add
aaa
cmp
fisttpll
icebp
cs
stc
sub
ja
xor
imul
ror
sbb
mov
cmc
sbb
cmp
add
data16
iret
mov
pop
dec
mov
add
arpl
jnp
mov
ja
push
xor
or
ja
mov
gs
lret
jp
ja
dec
cmpsl
sbb
pop
add
adc
mov
jmp
pop
sbb
testb
mov
xor
repz
mov
pusha
sbb
push
inc
xchg
push
inc
das
in
lds
pop
repnz
sub
mov
pop
jns
inc
in
sbb
adc
pop
jb
fiadds
mov
jmp
jns
and
jb
lret
aad
lret
aas
sbb
ss
lea
mov
cltd
mov
dec
mov
inc
inc
movsl
mov
ja
sar
dec
adc
jae
push
adc
and
and
ss
sbb
movsl
mov
cmp
sbb
jmp
mov
sub
mov
pop
ret
jne
scas
pop
jne
push
add
sbb
les
ss
xor
int
iret
rclw
ficompl
xchg
xchg
or
xorb
sub
pushl
pushf
loopne
push
jns
mov
xchg
in
jp
mov
dec
jns
or
pusha
icebp
cmc
addl
sbb
aad
mov
add
cmp
pop
pushf
pop
add
jne
gs
jb
ret
xchg
cmp
mov
cs
mov
sbb
xorl
in
jno
fcmovnb
xchg
roll
ret
sub
cli
jl
mov
aaa
das
jecxz
nop
xchg
jno
mov
je
cmp
cmp
push
inc
sbb
fistl
lea
jns
push
pop
mov
mov
lds
add
xor
out
fcmovnb
clc
pop
aad
ljmp
xor
dec
scas
cld
mov
into
cmp
icebp
or
mulb
xchg
fwait
cmp
pusha
push
jae
mov
scas
neg
push
mov
and
pop
push
xchg
dec
das
pop
xor
or
imul
nop
iret
push
test
push
sub
sahf
sahf
or
sbb
jno
ss
mov
push
rorl
mov
stc
inc
scas
stos
jmp
test
iret
dec
aad
popf
je
dec
jecxz
sbb
lea
mov
mov
fistpl
or
stc
inc
fidivrl
sub
daa
push
fdivrp
mov
cmp
rclb
aam
call
leave
adc
ret
daa
push
clc
pop
dec
in
dec
test
lds
mov
out
sbb
lcall
cltd
jg
int
sbb
push
sub
dec
inc
and
enter
movb
pop
mov
add
adc
clc
inc
mov
pop
or
mull
sub
cs
sub
ljmp
loope
mov
call
aam
fists
and
aam
lahf
imul
fs
data16
rclb
jecxz
mov
loop
pushw
sbb
and
adcb
push
testl
test
es
pop
repnz
mov
pop
xchg
dec
xor
outsl
mov
adc
push
imul
lahf
push
sub
punpckhbw
push
fiadds
int
mov
jno
xorb
inc
mov
adc
sti
xchg
test
outsb
dec
test
and
fwait
hlt
movsl
rcrb
push
rcrb
outsl
xor
imul
cmp
pop
jge
mov
dec
sahf
lock
imull
xor
fwait
arpl
and
pop
mov
loop
fists
push
fwait
in
push
jp
pop
into
mov
push
pop
out
in
dec
leave
subl
inc
loop
cld
insb
or
dec
pop
cmpsl
aam
bound
std
notl
xor
fs
movsl
jle
push
in
stc
mov
adc
mov
es
mov
into
dec
outsl
push
or
imul
cmp
pop
scas
loopne
dec
test
push
es
mov
jecxz
push
xchg
xor
or
ljmp
push
mov
scas
repnz
scas
and
movsl
jae
jb
dec
push
mov
add
and
dec
sub
pop
xchg
push
pop
xchg
out
or
mov
jno
arpl
inc
cld
iret
clc
fcompl
rorb
and
rorl
iret
mov
xor
push
add
imul
mov
xchg
add
fcmovnu
repz
dec
mov
sbb
sbb
jns
adc
fwait
lods
mov
clc
inc
and
push
fsubrs
test
or
es
sbb
lret
jmp
clc
jno
jbe
enter
rorl
dec
cltd
jecxz
test
cmp
fstpt
xorl
mov
mov
cli
and
jge
add
sbb
rorl
sub
lods
ljmp
pop
cld
sti
sub
push
inc
mov
lret
mov
push
dec
lock
xor
mov
adc
lock
add
xor
gs
sub
mov
scas
xchg
add
cs
push
xchg
pop
mov
mov
inc
push
mov
daa
jae
sbb
mov
ret
sub
test
pusha
sub
in
pop
cmp
sub
sub
jmp
inc
sbb
pop
jecxz,pt
adc
mov
and
shl
mov
ja
dec
push
pop
andl
add
mov
sub
mov
mov
mov
repz
jmp
inc
jae
inc
rorl
and
xchg
xchg
sub
je
or
divb
adc
cmp
je
pop
lods
push
daa
push
aam
sbbl
repz
add
mov
hlt
mov
mov
dec
and
adc
pop
adc
pop
jo
fstps
push
stos
fidivs
lret
mov
cmpsl
xchg
lods
inc
jmp
adc
push
sub
xchg
jns
insl
outsb
adc
inc
xchg
add
and
cltd
out
and
and
outsl
pusha
lea
xchg
aam
cmp
sub
add
push
jle
test
xor
shl
fdivs
imul
add
mov
jne
aad
stos
daa
add
and
xlat
pusha
cmp
cmp
add
sub
pop
mov
add
repz
cwtl
and
cmp
lahf
xor
pop
pop
ss
sahf
les
loope
sub
cwtl
stc
test
sub
fwait
pop
mov
int
int3
and
sarb
xor
xlat
fisubs
xor
mov
std
mov
push
add
aaa
mov
ret
scas
cmp
fdivr
adc
jae
and
aas
int
push
out
fwait
mov
mov
popa
jecxz
inc
fmull
xor
popf
mov
pop
pop
add
popa
stos
mov
cs
jge
adc
mov
pop
ja
hlt
jecxz
sarl
pop
xchg
and
adc
test
xor
and
and
and
in
lcall
shll
mov
mov
push
add
fwait
mov
jp
and
adc
and
push
sub
dec
out
ja
shrb
rolb
sti
sbb
mov
dec
lods
push
aas
mov
add
lea
pushf
pop
test
ret
loopne
call
cs
outsl
insb
imul
dec
push
adc
aaa
sub
sbb
rcll
jge
mov
stc
test
jmp
shlb
iret
imul
out
lahf
push
pop
fwait
xor
setl
xor
sbb
mov
call
xchg
mov
cmpsb
aam
lret
nop
mov
scas
xchg
mov
mov
pop
lcallw
push
sub
dec
aas
adc
pusha
xlat
pop
pop
jmp
sub
imul
pop
push
inc
add
adc
inc
push
xor
mov
or
push
aam
sbb
xor
test
cli
fwait
xchg
push
test
sub
pop
in
fisubs
in
mov
sbb
mov
inc
cmp
iret
xor
imul
lea
dec
hlt
cld
mov
mov
mov
sub
xchg
test
xchg
and
push
cmp
cmpsb
pop
sbb
cmpsl
repnz
rolb
aad
aam
add
sub
addr16
lods
inc
sbb
xchg
lret
jno
daa
xchg
xorb
mov
xchg
inc
xor
das
scas
mov
addr16
push
xor
sbb
push
daa
fmul
fists
pop
mov
jmp
lret
dec
std
push
xchg
and
mov
andb
cmpl
cmp
cwtl
mov
gs
dec
in
arpl
fsubr
shll
jnp
in
pushf
sti
sbb
xchg
jge
jno
lret
jo
jp
mov
add
jg
cmp
xchg
mov
rolb
ret
out
notb
int
adc
fistps
movsb
push
jl
pop
les
imul
and
lret
stos
xchg
imull
xchg
loope
cltd
mov
addr16
test
sti
ds
rcr
inc
push
pusha
cmpsb
push
ja
mov
in
lock
stos
push
xchg
dec
divl
andl
jle
mulb
push
add
adc
sbb
lret
xor
mov
inc
int
outsl
push
sub
xchg
test
xorb
sbb
push
aaa
outsl
ljmp
test
mov
negb
icebp
mov
pop
and
test
xor
repnz
fnstenv
dec
iret
pusha
cmpsb
fmulp
fnstsw
loope
inc
test
lods
out
lahf
dec
in
cli
jle
push
cmp
aam
or
addl
pop
imul
es
pop
sbbb
aam
jo
sbb
cmc
mov
sbb
jmp
cltd
pop
sbb
push
repnz
cmc
mov
out
push
int
cmp
dec
sub
pop
xchg
push
xor
xor
add
mov
mov
xchg
mov
popa
xor
xor
sub
dec
adc
sub
xor
push
iret
lahf
add
stos
cmp
fcomps
pushf
adc
and
dec
mov
cwtl
jl
xchg
sbb
mov
sub
stos
add
adc
dec
ror
stos
scas
mov
fcoml
mov
call
mov
cmp
loop
lock
imul
je
lcall
push
outsl
and
push
cs
out
xor
xchg
out
dec
iret
jb
hlt
inc
cmp
in
pop
jle
jno
call
fdivs
popf
or
cmp
ret
ljmp
bound
shl
adc
sub
and
xor
sbb
jne
inc
or
fdiv
add
jno
xchg
xor
subb
sar
insl
fmuls
push
xor
aad
adc
dec
not
mov
test
scas
mov
xchg
bound
or
int
jbe
lret
push
pop
insb
sub
loope
jg
daa
int3
push
int
push
lods
sub
push
mov
js
aaa
popa
das
pop
incb
xchg
jecxz
outsb
cmpsl
addr16
repz
mov
stc
pusha
sub
push
imul
lds
mov
xor
lret
xchg
mov
icebp
sbb
mov
push
lock
mov
popa
jmp
mov
pop
scas
add
mov
imul
push
leave
add
xor
jmp
lods
jno
je
lds
add
jne
push
sub
test
cmpsl
out
in
fbstp
dec
add
lds
adc
pop
jecxz
jnp
pop
lret
jecxz
andb
sbb
fwait
sbb
inc
push
xor
xchg
cmp
sbb
scas
dec
inc
out
aam
pop
cmp
jo
pop
divl
out
je
lds
adc
cmpsb
or
sbb
movsl
mov
mov
add
in
popf
sahf
add
in
mov
sub
insl
push
jae
mov
ret
mov
cwtl
add
out
xlat
add
ljmp
jl
dec
out
mov
aaa
movsl
sbb
pop
push
clc
inc
mov
mov
sub
cmp
out
scas
and
sbb
pop
push
pop
or
iret
pop
test
call
sarb
daa
daa
adc
es
or
es
fstpt
sbbl
or
dec
mov
imul
adc
hlt
lods
add
lret
sub
shrl
ljmp
xchg
lea
inc
push
rcrl
insb
imul
pop
mov
push
fwait
adc
cmpsb
shrb
adcl
jmp
add
add
test
dec
stos
not
cmp
frstor
or
mov
or
pop
pop
push
inc
adc
sbb
xor
mov
ljmp
ja
xchg
sub
movlps
imul
and
mov
std
mov
stc
scas
adc
and
and
and
lods
fs
push
daa
leave
addb
jmp
hlt
aam
add
cmp
shrb
iret
jns
mov
imul
or
sub
imul
dec
fcomps
adc
aam
dec
push
sarl
sbb
cmpsb
out
lods
loopne
xchg
push
mov
lahf
adc
sub
or
adc
mov
subl
xchg
loop
stos
imul
pop
sub
mov
daa
pop
outsl
xor
divb
pop
jle
mov
sbb
jno
cwtl
jecxz
mov
test
imul
cltd
sub
cmpl
lahf
sti
fldt
stos
popa
push
mov
mov
flds
xor
fistl
inc
add
xchg
das
sbb
dec
sbb
or
subl
sbb
loope
dec
sbb
jle
and
cs
mov
les
call
jbe
xchg
dec
xor
pop
xor
jae
int3
enter
xor
adc
xchg
or
sub
mov
pop
add
stos
pop
dec
adc
add
add
push
jbe
jmp
xchg
push
cmp
pop
dec
push
xchg
jbe
add
leave
pop
in
frstor
or
adc
add
jecxz
in
mov
and
pop
jnp
in
mov
loopne
jmp
mov
rcrl
pop
fcmovnbe
cmpb
or
iret
ja
xchg
xor
cmp
daa
push
adc
adc
mov
std
mov
pop
ja
popf
repnz
cmp
jg
lret
inc
enter
cwtl
xchg
int3
lea
sbb
daa
lahf
cmp
lods
xor
mov
inc
xchg
cmp
mov
test
xor
lret
inc
inc
pusha
push
xchg
dec
mov
push
mov
scas
inc
loope
insb
xchg
mov
jge
adc
dec
adc
sbb
in
adc
call
pop
or
jge
sbb
mov
push
addr16
inc
push
pop
test
divl
sbb
movsl
lret
jge
xor
mov
test
mov
ds
jae
in
sbb
inc
lahf
lcall
repz
std
stos
inc
fsubs
lods
xchg
jae
and
pop
jno
pop
fwait
jns
inc
popa
jmp
repz
and
subb
dec
mov
xor
call
icebp
mov
and
xorb
sub
and
shll
sub
inc
lea
or
add
mov
or
mov
sbb
es
mov
xchg
das
xor
dec
xchg
add
scas
out
push
int3
sub
hlt
jge
lods
sbb
pushf
int3
gs
xor
cmp
pop
and
and
adc
cmp
test
mov
push
sbb
loop
or
inc
jbe
push
cmp
or
pushf
jne
xchg
jo
sbb
pop
jl
jbe
xchg
insl
jae
leave
in
popf
sbb
and
lock
cmp
mov
addr16
and
cld
xchg
sub
out
and
mov
xchg
lcall
push
cmp
cmpsb
fldl
imul
mov
push
scas
mov
push
out
data16
js
rol
inc
pop
hlt
scas
push
sbb
mov
jp
aaa
data16
add
decb
mov
pop
add
in
sub
jns
jne
js
push
cmpsl
test
adc
mov
xchg
xchg
or
cmp
negl
xor
ret
xchg
sti
imulb
cmp
mov
cmp
xchg
dec
leave
xchg
sub
jnp
cmp
cmp
sbb
sub
es
stc
out
scas
stos
push
jne
push
mov
pushf
mov
mov
xchg
repz
in
mov
and
ret
pop
push
fisttpll
cld
xor
subb
call
mov
in
xchg
stos
aad
mov
out
ss
test
xor
add
ror
and
mov
sbb
mov
mov
test
and
sub
or
mov
mov
xchg
outsl
add
lds
rorl
pop
xchg
ss
xor
xorl
popf
sbb
loopne
mov
or
jp
sub
or
stos
push
push
into
push
cmove
mov
mov
lods
mov
sbb
mov
dec
jbe
inc
push
sbb
enter
out
jecxz
lods
inc
movl
scas
popa
fdivs
fidivl
adc
sbb
pop
xor
cwtl
stos
fwait
pop
mov
sub
sbb
bnd
fiadds
cmp
fpatan
add
roll
js
sbb
test
cmpsl
mov
mov
pop
pop
popa
and
sti
outsb
mov
iret
std
xor
jle
nop
jp
xor
cltd
sbb
push
add
or
sahf
dec
sbb
mov
adc
sbb
add
lods
adc
cli
outsb
jnp
leave
jl
orb
hlt
mov
std
lahf
lret
sbb
pusha
inc
mov
mov
cld
ljmp
cli
mov
daa
insb
jbe
or
push
ss
imul
and
fildl
in
lods
pop
in
inc
dec
lret
mov
sub
or
xlat
popf
std
mov
in
enter
mov
lcall
mov
pop
push
mov
jmp
lret
mov
lods
int3
ss
sar
je
leave
jb
mov
pop
dec
and
push
insl
inc
je
fadds
bound
ljmp
mov
cli
dec
jno
jo
loope
cmp
stos
mov
push
in
xor
inc
add
lahf
test
and
pop
jne
push
xlat
and
pop
inc
stc
and
pop
nop
ljmp
aad
inc
cmp
jl
xchg
cmc
lock
cmpsl
mov
ljmp
push
aam
inc
xlat
lock
pop
insl
jl
scas
mov
sbb
inc
xchg
add
loope
lcall
shlb
cwtl
add
stos
ss
dec
xchg
xchg
cmpl
xchg
push
pop
sub
loopne
dec
sbb
lea
lods
les
xchg
add
push
sbbl
cmp
xor
mov
push
out
test
mov
cltd
xchg
sub
dec
sarl
mov
xor
push
mov
push
push
loop
pop
or
aad
adc
sbb
aas
rorb
movsl
sahf
ret
std
xchg
loopne
mov
and
loop
unpckhps
cmp
cmpsb
fistpll
fldcw
cmp
psubb
pop
mov
jbe
add
xor
cmpsl
adc
adc
xor
scas
test
lds
iret
mov
insl
sub
aam
cmpsl
pop
out
lds
cmpsl
lcall
cmp
dec
push
or
and
mov
xor
sub
add
push
push
sub
mov
in
xchg
sub
out
mov
xchg
clc
push
lret
popf
scas
xchg
aas
jbe
sahf
xchg
daa
jns
xchg
cs
mov
xlat
or
dec
gs
pushf
or
stc
pushf
and
or
push
rolb
pop
lret
outsl
adc
jge
mov
repz
pushf
pop
jge
ds
pop
ja
adc
outsb
xor
out
jp
xchg
mov
negb
add
xor
imul
jne
icebp
push
mov
jb
lods
pop
mov
add
lock
enter
jb
dec
xlat
jae
ss
sub
stos
pusha
cmp
jp
xchg
lret
sbb
add
iret
or
js
cmp
fldcw
inc
and
aas
fwait
cmpsb
sbb
arpl
mov
imul
push
mov
insl
jg
ljmp
pop
js
add
adc
lcall
and
sahf
lods
fadds
inc
cli
jo
lods
sarb
push
push
jge
add
adc
push
xchg
xor
ret
int3
movsl
es
daa
aam
xor
dec
dec
jb
inc
add
fimull
cwtl
rcll
aad
popf
push
xor
insb
mov
mov
js
cmc
pop
js
hlt
mov
movsb
add
icebp
mov
xor
and
test
lret
fnstsw
ja
fwait
mov
add
gs
aam
fnstenv
jnp
inc
pop
xlat
stc
dec
cmovae
jg
fistl
out
mov
andb
push
jecxz
outsb
cmp
xchg
in
arpl
jae
pop
adc
hlt
les
movsb
add
shrl
or
xchg
push
repnz
mov
enter
push
int
les
pop
fisttpl
test
mov
inc
dec
push
cwtl
add
inc
iret
lret
sar
cmp
sub
lahf
mov
fcmovnb
sub
xor
fucom
outsb
or
jle
mov
fdivrp
add
dec
rolb
jo
cmp
leave
cmp
scas
loopne
lcall
jmp
pusha
addb
jl
sar
dec
add
insb
adc
push
dec
popf
adc
inc
mov
shll
jno
sarb
rclb
jnp
push
inc
push
sbb
lret
inc
inc
ss
push
mov
add
adc
jno
and
xchg
js
fs
sub
addl
mov
sbb
mov
shll
push
mov
je
fmulp
sbb
cwtl
push
xchg
xchg
pop
imul
fs
loopne
sahf
xchg
fbld
mov
pop
cltd
mov
loop
rorb
addr16
roll
lahf
inc
rorl
sarl
add
lock
adc
add
pop
mov
aad
test
ficoms
lea
imul
mull
xchg
in
jg
mov
adcl
loop
sbb
dec
jbe
and
mov
js
outsb
jecxz
xchg
int
mov
add
fwait
dec
mov
out
xorb
cmp
add
imul
subl
js
mov
push
bound
movsb
dec
mov
xchg
sub
orb
sub
outsb
cld
hlt
mov
aas
mov
push
popf
or
jns
fldcw
mov
push
decl
adc
mov
imul
aaa
dec
mov
add
movsl
fisubrl
and
hlt
je
push
dec
ret
push
in
add
dec
push
not
jecxz
push
arpl
or
lock
les
mov
lea
xor
fldt
jb
ret
push
shrl
imulb
inc
jne
cmp
xchg
add
in
inc
ret
dec
push
loopne
jnp
cmp
gs
mov
stos
addr16
or
or
cmp
mov
out
dec
push
or
inc
int3
mov
push
out
add
or
movsb
loop
cmp
data16
sub
mov
sbb
or
mov
jge
pusha
inc
lret
test
mov
dec
std
cwtl
pop
dec
sub
cmp
or
nop
mov
push
inc
iret
in
fistps
sahf
and
sbb
out
rorb
xchg
addr16
loope
jo
js
lock
leave
and
sub
mov
jb
aad
in
int3
push
dec
test
pop
loop
daa
jle
lcall
stos
xchg
jns
jle
js
pop
lock
dec
jne
fsub
mov
cltd
sbb
int
dec
xchg
push
xlat
and
pop
daa
aas
gs
cwtl
inc
jecxz
cmc
xchg
aaa
jne
xchg
in
mov
mov
dec
or
test
push
fidivrl
into
gs
inc
hlt
dec
insl
and
call
xlat
popa
inc
and
and
mov
adc
inc
sub
arpl
inc
lds
clc
add
loope
aad
cmpl
data16
notl
and
pop
jp
mov
sti
push
pusha
ret
std
xchg
push
adc
loop
fsubs
aaa
lea
cmp
and
adc
inc
or
popa
mov
xor
pop
scas
jp
xchg
sbb
movsl
scas
insl
mov
shll
fsubrl
add
int3
sub
insl
dec
and
or
subl
mov
and
jecxz
add
sub
inc
pop
adc
enter
push
pop
pop
sbb
cld
lock
push
mov
cmp
or
mov
in
sbb
pop
mov
pop
jnp
jp
lahf
out
inc
in
pop
data16
lock
ljmp
or
pop
mov
bound
push
push
jb
jmp
out
int
and
iret
lods
dec
sub
andb
or
sti
xor
dec
jmp
and
mov
cmp
pusha
roll
stos
lea
int3
and
rolb
lret
das
push
outsb
out
aas
test
inc
out
dec
add
scas
ds
sti
adc
inc
stos
dec
jecxz
jp
jle
lods
lods
mov
jne
xchg
jge
jne
pop
push
mov
stos
push
popa
outsb
in
add
sbb
sbb
sbb
lea
insl
out
sbb
xor
hlt
mov
mov
fiaddl
push
cmpsl
or
mov
mov
jmp
lahf
push
cmp
pop
cmp
sub
xchg
push
fiadds
xchg
push
xor
mov
jge
orb
sub
aas
dec
cwtl
nop
addl
jp
scas
push
cltd
push
lahf
inc
push
dec
dec
scas
pop
pusha
ficoms
mov
and
jb
leave
cld
cs
loope
jo
popf
dec
pusha
lods
xchg
xchg
lods
add
cld
or
sub
lds
cltd
call
add
sahf
push
xchg
pushl
dec
repz
mov
pop
andb
das
popf
and
add
cmp
xchg
cwtl
inc
fcompl
add
mov
out
not
stc
rol
pop
ficomps
or
mov
lods
scas
aas
sahf
cmp
call
rolb
push
call
or
sbb
adc
inc
adc
push
lds
mov
and
cwtl
xchg
shrb
inc
outsl
push
rcrb
cmp
push
out
cwtl
sub
ljmp
insl
in
cltd
inc
mov
icebp
or
gs
cmpsb
and
add
lods
and
sub
cmp
mov
or
jecxz
int
push
adc
mov
ret
push
sub
roll
sub
push
lcall
in
fsubr
cmp
aaa
dec
push
mov
cmp
sub
and
stos
mov
pop
pop
das
mov
std
add
xor
div
test
jb
jne
repz
adc
int
inc
pop
callw
push
add
dec
mov
cli
shl
mov
xor
dec
arpl
inc
cmpsl
mov
scas
xorl
js
and
mov
movsb
adc
push
leave
dec
lret
mov
add
cmpsl
cmp
jmp
sti
movsl
fsubrl
sti
mov
ror
imulb
loop
push
test
inc
out
std
xor
hlt
or
cmp
lods
test
std
pop
push
pop
add
sub
and
fwait
cli
mov
and
pop
imul
mov
or
aam
cmp
ret
inc
testb
js
cmc
fistl
jns
lahf
data16
movsb
dec
pop
cmp
das
push
pop
mov
xor
or
dec
movsb
mov
lods
inc
or
js
cli
jp
inc
lcall
imul
dec
sub
loope
iret
xor
sahf
xchg
mov
js
movl
sbb
xlat
dec
mov
jae
or
add
nop
out
sbb
icebp
jp
pusha
shl
or
enter
hlt
mov
push
jecxz
in
xor
sbb
jb
push
sub
ss
xchg
pusha
push
xchg
das
add
lock
ret
pop
mov
mov
mov
inc
lods
xor
and
push
jae
mov
cmp
cmp
cmp
ljmp
cwtl
aad
repz
lret
popa
xchg
mov
cmp
shrl
shll
popa
cli
fistpl
movsb
pop
jecxz
sub
mov
andb
popa
stos
xor
lds
mov
in
stos
imul
mov
aad
nop
hlt
cmc
cwtl
cmpsb
andl
int3
sbb
push
pop
iret
add
xor
mov
inc
mov
xor
or
rclb
mov
call
sub
pop
mov
cmp
les
loop
in
push
int3
mov
xchg
dec
inc
in
hlt
mov
movsl
lret
movsl
loop
fadd
and
inc
cmpsb
push
xchg
sub
push
mov
sbb
insl
lds
xor
push
push
pop
imul
clc
add
test
or
sub
mov
adc
dec
std
outsb
fcmove
jmp
stc
sub
fadds
jae
or
mov
mov
dec
mov
scas
mov
fs
mov
add
jge
cmc
scas
mov
fiaddl
loope
jle
es
test
add
hlt
hlt
scas
adc
dec
sub
ja
mov
lock
loop
jmp
inc
cmp
aaa
fsubrs
xor
jecxz
ljmp
enter
ds
and
cltd
sahf
mov
and
cmc
in
cmp
jl
mov
enter
push
or
push
into
ret
imul
fwait
inc
xchg
or
aam
pusha
cmc
push
movsl
dec
js
in
push
pop
pop
push
and
lods
les
in
mov
lret
adc
vpunpckhqdq
movsb
mov
mov
sbb
pop
shl
fwait
test
sub
sahf
imul
popf
mov
lret
sbb
mov
repz
stos
cltd
push
cmp
jl
jmp
mov
lcall
jo
inc
cmpl
push
or
mov
testl
mov
mov
js
pop
sbb
ljmp
aas
pop
ret
fisttpll
scas
xor
std
sub
lcall
pop
and
inc
jno
out
jne
xchg
int3
or
addr16
stc
test
inc
lret
mov
push
je
mov
negb
jl
hlt
ja
dec
rcrb
pop
mov
xor
lcall
loopne
cmc
test
insl
add
xor
lds
jg
sbb
data16
jns
outsb
sub
or
in
lods
repz
test
xchg
xchg
ret
jno
mov
mov
aaa
dec
push
jo
jmp
pop
into
lcall
out
pop
fs
push
dec
or
inc
sti
stos
xchg
adc
jle
sbb
insl
push
cld
adc
xor
mov
mov
ja
xorb
inc
mov
popf
icebp
clc
cmpsl
pop
push
adc
mov
subb
mov
cmp
or
mov
and
or
es
out
dec
cwtl
cmpsl
xchg
pop
jnp
test
sarl
insb
dec
pushf
mov
orl
or
loopne
mov
test
xchg
pop
mov
xchg
aad
fdivl
lcall
dec
and
sub
cmp
fisttpll
and
cs
xchg
xor
xor
jge
hlt
lds
lock
fdivrs
adc
sub
xorb
mov
inc
adc
cmpsb
into
ret
dec
push
sub
inc
adc
push
xor
jne
cmp
sbb
inc
shl
or
pusha
inc
xchg
mov
cmp
arpl
jp
aas
movsb
jl
outsb
in
inc
adc
insl
cmp
inc
pop
mov
testl
xor
push
addr16
pop
mov
incl
leave
pop
lea
xchg
leave
sbb
push
cltd
or
fwait
mov
lcall
mov
mov
fs
inc
lods
adc
out
gs
sbb
fistpl
enter
push
xchg
scas
push
inc
cli
cli
mov
xchg
negl
pop
mov
push
test
push
mov
pusha
jns
and
add
test
mov
sbb
dec
add
pop
mov
arpl
mov
adc
daa
insb
ds
inc
repnz
inc
in
test
inc
cwtl
fistps
xchg
popf
cmpb
je
jp
ret
cmpsb
fmuls
jge
fbstp
int
test
pop
lds
add
insb
sahf
movsl
pusha
fcomip
out
inc
rorl
js
mov
icebp
out
stos
or
popf
and
call
dec
mov
ds
fstpt
insb
pop
mov
iret
cmp
sub
jp
xor
sbb
loop
les
adc
dec
test
dec
xchg
mov
cli
cmp
rcll
jae
test
dec
punpcklwd
std
fisubrl
sti
mov
sti
push
and
cmp
scas
hlt
pop
cmp
insl
and
sti
insl
rol
sbb
jecxz
adc
sbb
in
insb
popa
lds
cmp
sub
xchg
popf
xchg
dec
sbb
dec
mov
imul
das
xchg
sbb
and
repz
and
mov
pop
xor
inc
mov
jb
fwait
aam
mov
decb
and
shl
popa
mov
xchg
xor
fcomip
movsb
push
xchg
sbb
jno
jmp
das
jecxz
rclb
daa
mull
aaa
outsl
cld
mov
inc
push
vminps
xchg
int
aad
jl
scas
aad
lret
cmpsb
jmp
loopne
mov
pop
push
shrb
or
mov
mov
std
pop
leave
out
mov
fildl
inc
fmulp
jmp
aas
fsubl
sub
push
mov
push
in
aaa
mov
mov
outsb
cmp
repz
add
mov
dec
mov
test
xlat
movsl
hlt
imulb
cli
inc
data16
shll
mov
es
or
les
hlt
fldt
dec
xor
mov
jne
inc
mov
stos
mov
loopne
adc
cmpl
adc
movsb
repz
mov
loop
sub
sbb
or
rcr
jnp
test
cmpb
daa
sub
mov
pushf
jo
jnp
mov
jl
cs
scas
mov
push
inc
inc
mov
mov
fsubr
data16
test
es
pop
mov
push
lods
xor
movsb
scas
sarb
mov
fisubrl
std
daa
pop
mov
inc
cmpsb
dec
mov
push
push
cli
ljmp
fs
push
orl
lock
push
jns
xchg
fcomi
mov
mov
jge
dec
jg
int3
xorb
push
xchg
js
mov
andl
sbb
call
movl
inc
cwtl
cwtl
jmp
in
cmp
call
jbe
sub
mov
dec
mov
ja
and
add
add
test
and
mov
cmp
mull
test
aam
dec
push
cmp
repz
jno
dec
aam
mov
pop
adcb
inc
mov
popa
outsb
fcmovnb
mov
sbb
sub
dec
xchg
lahf
pop
push
jae
jecxz
sbb
enter
mov
jbe
subb
int3
repz
xchg
pop
add
inc
mov
icebp
in
lahf
pop
mov
sub
repz
dec
pushf
or
and
cmp
pop
push
lods
mulb
xchg
dec
mov
jo
jo
mov
lahf
movsb
xor
repz
adc
fnstcw
int
dec
test
cmp
in
mov
jmp
insl
inc
gs
xchg
sub
pop
xorb
sarb
hlt
sub
stos
pushf
sub
cmpsb
stos
cmp
lods
out
int
xor
sbb
cs
cltd
jbe
call
out
mov
mov
mov
mov
movsl
lock
mov
in
ljmp
fiaddl
push
xchg
mov
inc
and
cli
push
push
int
clc
js
js
in
pusha
mov
jns
adc
scas
arpl
mov
adc
movsl
aad
inc
leave
sarl
rol
in
ds
scas
and
inc
lds
mov
lret
xor
sbb
int
add
xchg
fcoml
mov
cmp
in
shlb
cs
jge
and
aad
dec
nop
in
or
lea
dec
je
addb
sub
out
test
add
shrb
sub
rorl
jmp
sub
or
push
inc
xor
push
pop
or
sbb
cld
push
out
adc
inc
into
dec
pop
or
aaa
aas
sarl
in
push
sub
lcall
inc
jle
xor
jns
scas
sbb
cmovo
xor
sub
lock
cmc
lahf
cli
xor
in
test
leave
mov
mov
pop
aam
mov
test
xor
cli
aaa
jns
and
pushf
arpl
xchg
clc
inc
rcr
clc
inc
jae
push
std
addr16
pop
call
sub
sbb
or
sub
andl
and
push
decb
mov
addr16
inc
jle
mov
dec
xchg
mov
push
push
pop
jnp
mov
sarl
addb
jle
inc
or
jecxz
mov
adc
cwtl
push
add
fmuls
adc
adc
or
adc
inc
add
push
jno
js
cmpsl
shlb
pop
int3
xor
adc
xor
iret
scas
arpl
adc
push
fdivrl
out
adc
push
push
xchg
test
call
and
dec
jg
pushf
test
mov
push
subl
or
jns
adc
les
push
outsb
test
rol
xchg
xor
mov
cmp
out
inc
jno
enter
gs
and
cmp
ud1
arpl
ja
mov
sbb
rclb
xchg
cmpsl
daa
mov
sbb
cld
in
lods
dec
or
jb
sbb
cmp
mov
xor
sbbl
dec
shrl
pop
jns
outsb
in
mov
mov
push
xchg
jbe
push
sub
sbb
pop
in
aam
mov
in
push
fstps
xchg
mov
repz
cltd
pop
push
or
or
dec
push
mov
pop
ror
add
das
fs
pop
js
or
filds
inc
mov
dec
adc
inc
fldl
lcall
mov
jae
pop
inc
mov
mov
adc
xchg
and
sub
leave
aam
push
sbb
dec
stc
cli
int3
ja
ljmp
push
sbb
mov
insb
xchg
mov
cmc
push
arpl
inc
repz
or
and
fucom
sbb
test
fcomps
sahf
fstps
dec
test
xor
xchg
std
ja
push
mov
sbb
insl
stos
cmp
sub
aam
sub
push
jmp
popa
mov
push
ret
test
jg
fmulp
pop
mov
rcrb
xlat
mov
dec
xchg
mov
mov
sbb
xchg
inc
hlt
aaa
mov
cmpsb
imul
xor
inc
cmp
jmp
mov
std
stos
shl
push
inc
sub
repz
lea
jns
rcll
pop
mov
cmpsb
inc
popf
mov
pushf
subb
daa
fwait
xchg
mov
repnz
les
lods
xchg
xchg
es
in
and
aas
adc
push
cmpsb
pop
pop
sub
mov
dec
shrl
cli
aaa
xchg
sub
inc
mov
or
fnsave
fisttpll
rol
fldl2e
fsubr
popf
ret
arpl
jne
xchg
orb
fucomip
cmp
push
fisttpl
push
add
es
xchg
pop
rcrl
cmpsl
cmp
mov
inc
aad
sbb
arpl
sysret
pop
in
and
xor
jl
icebp
dec
xchg
out
mov
hlt
adc
adc
cmpsb
jbe
push
sbb
lds
jo
xlat
pushw
inc
cli
dec
pop
xchg
sub
sbb
jge
nop
lds
loope
call
stos
clc
pop
fsubr
leave
push
inc
insb
pop
ljmp
inc
or
out
cmpsl
shrl
push
lret
xchg
jo
in
lret
sub
push
inc
bound
push
inc
cmc
and
dec
loope
dec
rorl
testl
pop
xchg
insl
push
mov
jb
mov
pop
add
mov
push
fdivr
rorb
cmc
jl
mov
ret
cs
clc
lods
out
mov
pop
jns
push
stos
adc
test
jp
repnz
test
jl
sub
inc
out
inc
xor
in
adc
or
push
xlat
cmp
aam
outsl
subl
push
sahf
testb
add
sbb
clc
mov
pop
negl
jg
mov
mov
pop
sbb
xchg
push
pop
cli
sub
ja
jl
mov
add
jae
adc
xchg
sbb
popf
pop
mov
pop
call
xor
leave
add
mov
dec
mov
sub
rolb
push
fisubl
sub
adc
sub
into
int3
dec
scas
add
or
jnp
lcall
mov
dec
cmp
daa
add
mov
and
jbe
pushf
jae
dec
int3
lods
pop
outsb
add
sub
cli
shlb
inc
test
dec
mov
mov
sbb
xchg
sbb
prefetch
dec
arpl
ret
mov
push
pop
addr16
gs
adc
dec
xchg
sahf
arpl
push
outsb
mov
xor
outsb
and
decb
cmpsl
xchg
lods
pop
pop
shll
out
fstl
push
cmp
jbe
ret
lret
jbe
addr16
popa
sarb
fistps
adc
sahf
movsl
daa
cmp
cs
fs
dec
pop
xchg
push
inc
lock
and
pop
test
mov
cmpsb
testb
ret
fwait
aaa
mov
mov
or
popf
ret
mov
jb
jno
lahf
aas
xchg
add
pop
adcl
aam
pop
adc
lods
negl
and
aad
mov
popa
inc
adc
mov
out
cmp
xchg
sub
mov
pushf
xrelease
xor
cwtl
sbb
and
out
adc
mov
notb
mov
hlt
pusha
test
mov
push
add
shrl
addr16
lret
icebp
outsl
mov
mov
cmp
inc
andb
push
test
lods
xor
std
fldcw
pop
pop
mov
cmpsb
mov
pop
mov
fsubp
pop
repz
mov
xor
or
sub
gs
sub
mov
ror
cmp
sub
loope
adc
push
xor
cltd
repnz
push
mov
dec
ret
xchg
or
outsb
stos
sbb
adc
orl
leave
outsl
dec
fcom
xchg
adc
stos
or
lahf
mov
fwait
jb
lcall
dec
jb
dec
icebp
mov
and
add
ja
stos
inc
adc
mov
iret
xor
loope
xchg
or
nop
or
dec
dec
jle
out
sbb
inc
sbb
cs
call
inc
push
fimuls
add
and
stos
xchg
mov
fistpl
jbe
mov
and
xchg
cmc
inc
loop
ret
push
sti
push
es
adc
arpl
sub
mov
ret
push
dec
dec
xor
sub
mov
hlt
jg
jmp
clc
jle
in
dec
mov
jle
pop
ret
mov
shrb
jne
icebp
rorl
in
in
loopne
inc
mov
sub
pop
in
jns
jo
xchg
loop
aas
ret
mov
mov
clc
add
aaa
in
jne,pt
inc
sti
aad
int3
sub
je
shrb
int
cld
lods
xor
xchg
js
jns
cmp
repnz
mov
dec
cs
xor
lret
add
cmc
inc
mov
cmp
leave
js
scas
addr16
leave
fnstenv
cmp
jno
push
xor
xchg
scas
std
daa
and
and
cmpsb
xchg
add
fsubs
pop
lds
jl
loop
mov
or
lret
insl
pop
sbb
cld
cmp
sbb
iret
sbb
aam
cwtl
imul
jb
mov
je
fwait
lods
in
xlat
add
jle
sub
jnp
stos
ret
test
jecxz
adcb
scas
dec
scas
add
loopne
fsubs
icebp
bound
aaa
mov
mov
imul
push
cld
sahf
gs
es
ljmp
das
mov
inc
add
shlb
js
sbb
fnstcw
inc
repz
push
add
inc
call
enter
xchg
cmpsl
cmp
mov
test
call
insb
pop
dec
cmpsl
into
sbb
loop
cmpsl
pop
lahf
ljmp
xlat
faddl
insl
adc
retw
mov
or
xor
idivl
mov
jecxz
jmp
in
hlt
xchg
mov
stos
dec
mov
sbb
jmp
push
pop
addb
sahf
jmp
js
mov
shlb
sub
sti
les
inc
pop
mov
xchg
adc
lds
xor
mov
inc
aas
add
repz
lcall
and
lds
mov
into
mov
add
fstl
mov
jne
adc
add
scas
jnp
xor
jns
in
mov
jmp
int3
mov
aad
add
and
jne
aam
arpl
jmp
lret
cmp
shlb
cwtl
sahf
sub
push
add
lcall
leave
sahf
sub
and
scas
pushf
clc
or
outsb
mov
rolb
js
sahf
add
push
aas
dec
dec
or
test
sub
push
dec
lods
mov
cmp
push
pop
ficoms
repnz
adc
pop
ljmp
sbb
out
pusha
xchg
pop
loop
add
std
or
test
mov
xor
adc
shlb
jecxz
cmpsb
mov
das
outsl
std
hlt
fdivp
imul
pop
movsb
outsl
outsb
cld
lds
loopne
jp
jns
mov
loop
aaa
push
movsb
jno
cmp
out
or
push
sub
jg
pop
adc
mov
jle
cmp
aas
ja
push
mov
mov
sub
fwait
test
mov
adc
mov
stos
adc
arpl
out
and
add
pop
xor
das
mov
cmc
test
jno
xchg
mov
int3
btr
lret
daa
and
adc
or
jp
lret
mov
cmc
push
mov
push
out
jg
fbstp
popf
jle
insb
outsb
cmp
lret
sub
push
jl
lret
cld
mov
sub
aas
sub
inc
popa
scas
pop
scas
mull
fwait
outsb
fadd
movsb
call
out
jg
fdivrs
xchg
sub
cwtl
sbb
sahf
dec
pop
in
push
ficompl
ret
loope
pop
mov
test
pop
inc
cmc
add
vpmacsswd
xor
xchg
outsb
fwait
fs
jo
jnp
icebp
dec
mov
jl
pop
mov
lcall
adc
add
mov
test
ljmp
shrb
inc
dec
paddusb
or
xor
push
roll
sbb
xchg
test
mov
mov
or
inc
pop
jnp
push
mov
sub
xchg
pop
and
out
jb
and
mov
mov
dec
xchg
ja
and
dec
fldt
jmp
mov
sbb
sbb
push
jne
sbb
testb
outsb
es
scas
push
daa
mov
in
jno
or
iret
lods
mov
mov
jno
mov
test
cmp
shll
jle
sbb
adc
inc
cld
imulb
mov
xchg
jne
inc
loopne
adc
sbb
pop
xor
pop
ljmp
xor
xchg
imull
sbbb
and
pop
jmp
lds
push
xor
or
push
subb
cmp
cmp
or
insb
inc
mov
dec
xor
in
inc
xor
sti
push
cmpb
test
cmp
jp
sub
cmpsl
loopne
sbb
jle
xchg
addr16
pop
cmp
push
insb
ss
fdivrp
call
xor
cli
cmp
and
std
es
push
repnz
das
pop
pop
push
in
shl
lret
loopne
out
rolb
add
and
ret
insl
or
stos
adc
dec
inc
cwtl
jmp
sub
pop
jns
add
ret
daa
pop
lret
loopne
insl
rcll
mov
xchg
mov
mulb
aad
adc
sbbl
decb
add
xchg
adc
int
push
add
cmpsb
fildl
and
push
arpl
test
scas
adc
adc
xchg
arpl
pop
inc
jo
mov
test
lods
and
in
ret
or
push
mov
or
out
pop
push
in
sub
adc
cli
pop
xor
cmpsl
mov
inc
lods
sub
rcrl
sti
or
cmp
sub
and
xor
test
pop
ret
data16
dec
sahf
xor
sbb
cmpsl
jnp
inc
fimull
repz
and
and
pop
cmp
adc
daa
ljmp
insl
inc
dec
dec
cmpsl
gs
scas
leave
cli
cmpsl
insl
js
lods
add
mov
add
aad
mov
xchg
dec
int
test
daa
mov
loopne
xchg
or
js
jbe
pop
sub
lahf
cmc
int3
sbb
vandnpd
pop
insb
cltd
xchg
add
out
inc
out
fidivrl
in
pusha
int
and
fsubr
dec
and
jnp
mov
test
pop
ja
adc
or
jns
xor
xchg
sbb
movsl
pop
cmp
or
inc
fbld
lods
xchg
pop
shlb
icebp
out
xlat
daa
xor
sbb
add
sbb
iret
rorl
leave
lcall
sub
mov
inc
popa
loopne
fucomp
test
jge
push
js
xchg
jle
cmp
mov
inc
xor
rorl
pusha
pop
fimuls
jle
ret
aas
int
sbb
add
scas
out
imul
loopne
jo
push
cs
cli
mov
jecxz
leave
adc
rcrl
pop
out
sbb
and
mov
or
divl
out
dec
mov
pop
add
xchg
out
xor
pusha
inc
jge
repnz
mov
mov
push
test
cltd
mov
jl
stos
mov
jmp
xchg
add
mov
dec
int
push
adc
cltd
inc
out
dec
hlt
bound
jl
test
hlt
dec
shll
push
outsb
sbb
xor
sub
jno
pop
push
inc
dec
mov
inc
lret
push
inc
push
sub
cli
xor
out
push
adc
dec
jmp
or
pop
int3
mov
inc
fldenv
xor
sub
pop
dec
inc
fcompl
push
sti
stc
inc
dec
mov
xor
add
push
mov
lret
xor
in
popf
sahf
cmp
jge
call
mov
test
cs
aaa
and
add
dec
push
hlt
jl
pop
out
ljmp
leave
clc
inc
outsl
sahf
jmp
test
sub
lock
jl
mov
sarb
es
sub
mov
add
imul
aad
sub
dec
rdmsr
or
sbb
lds
and
fnstenv
in
pop
loopne
decl
mov
cmp
sbb
dec
aad
scas
xor
fwait
pop
and
scas
cmp
lcall
leave
mov
pop
add
js
cwtl
cmp
lcall
cmp
jmp
pop
scas
add
fldt
fisttps
les
sub
jae
pop
repz
push
pop
insb
mov
test
mov
xor
jno
or
or
inc
test
push
popa
rcrb
jp
mov
out
jno
dec
inc
push
hlt
stc
mov
and
lcall
outsb
popf
dec
push
das
sahf
xor
add
or
fsubr
fcoml
and
mov
add
xor
inc
pop
ljmp
add
ret
stos
inc
mov
data16
lahf
push
std
dec
and
or
cmp
stos
ds
les
cmpsl
cli
add
xlat
in
aam
cmp
es
nop
mov
mov
cmp
shrl
inc
inc
and
mov
je
std
xor
sub
xor
push
pop
test
pop
repnz
in
mov
pop
cmpsb
push
sbb
add
iret
dec
pop
adc
nop
mov
add
aaa
mov
clc
fs
fnsave
fimuls
out
cmpsl
arpl
push
aad
xchg
xchg
mov
in
mov
xchg
xchg
sub
mov
inc
sub
xor
pop
pop
push
ljmp
xor
lods
mov
fldl
in
outsl
sub
cmp
daa
mov
or
dec
andl
xlat
mov
add
out
inc
sbb
enter
cmp
cwtl
sbb
xchg
cmc
repnz
xor
inc
test
sub
sub
mov
cltd
sub
mov
pusha
add
cmpsl
aad
xchg
add
scas
and
mov
or
push
jecxz
mov
xchg
in
das
pusha
imul
add
dec
pop
pop
lods
dec
xchg
fwait
rcr
imul
or
addr16
pop
je
fldcw
sub
cld
fistps
jmp
xchg
mov
cmp
mov
mov
inc
jecxz
lcall
push
shll
cltd
jmp
out
aas
ret
clc
addr16
lds
push
out
out
loope
jge
inc
ss
xorl
or
test
aas
xchg
push
push
cld
mov
sub
out
aad
push
das
push
jne
push
insb
ss
test
repz
fs
push
pop
sub
add
iret
je
cmp
int3
mov
hlt
mov
and
push
jno
iret
xor
test
rcll
es
cmp
addr16
mov
stos
sbb
imul
stos
leave
xor
es
dec
sub
inc
push
xor
adc
jnp
fs
shll
mov
fisttps
insl
sbb
cld
add
or
dec
cmpsl
call
jecxz
loope
repz
add
adc
cld
xchg
je
pop
sub
dec
addr16
int3
cmp
mov
loopne
xor
in
cmp
ds
sbb
test
fisubl
mov
mov
mov
mov
add
mov
jge
or
pop
push
popl
cmp
jle
adc
lods
or
inc
mov
fstpt
mov
mov
jge
cmp
pop
mov
and
adc
jle
inc
mov
lret
jg
jb
or
mov
jp
ljmp
jmp
jmp
ret
fnstenv
jg
jb
dec
cmp
mov
mov
imul
ss
mov
xchg
xchg
dec
jmp
xor
and
or
mov
dec
xchg
leave
std
mov
out
jno
push
movsb
mov
inc
gs
push
js
mov
cmp
std
std
movsb
pop
pand
pop
ret
dec
repz
pop
pop
or
cmp
push
ret
or
andl
mov
stos
dec
mov
test
testb
aas
shl
lahf
arpl
pop
enter
or
jae
movsb
clc
ljmp
mov
mov
pop
jae
adc
lea
dec
je
pop
adc
mov
inc
jmp
daa
mov
fsubs
movb
xrelease
pop
sbb
ret
sub
add
jns
mov
orl
divl
repz
cmp
xchg
xor
xor
popa
pop
cmp
lods
sub
xchg
jns
fwait
test
xchg
pushf
inc
xlat
mov
lds
in
cmpsl
mov
dec
std
subb
repnz
lods
dec
mov
arpl
stc
dec
mov
xchg
add
sub
lcall
ret
push
ja
pop
mull
inc
ficoms
mov
sub
mov
jg
jge
adc
dec
jmp
cmpsb
shl
mov
cli
fdivrl
jno
xchg
dec
test
lcall
push
ret
cmpb
cmpsb
std
mov
or
ret
fstpl
adc
sbb
xchg
xor
stc
das
sbb
stos
jns
and
xchg
or
sbb
xor
inc
and
arpl
imulb
incb
mov
mov
xor
sbb
call
in
sub
in
mov
lahf
stos
movsl
imul
push
testb
dec
mov
loop
jne
push
rorb
loop
inc
push
addl
sbb
rclb
mov
pop
mov
or
je
sbb
cmpsb
add
js
mov
lcall
push
jg
repnz
mov
cli
push
jns
jmp
lret
popa
mov
xchg
jbe
je
in
cmc
mov
mov
jge
insb
add
mov
out
push
pop
outsl
push
ljmpw
shll
pop
mov
cmp
lock
jno
and
cs
jge
add
push
lret
jge
mov
test
mov
sub
scas
iretw
cmp
xchg
push
je
out
movl
inc
pop
push
pop
lea
pushf
mov
outsb
aas
mov
cmp
dec
outsb
insl
mov
pushf
jg
sub
mov
jnp
fistpll
outsb
mov
sub
ficompl
les
adc
gs
sahf
jecxz
add
jmp
je
aaa
adc
pop
mov
xchg
mov
in
adc
mov
jecxz
ret
add
leave
sbb
push
insl
jae
shlb
lock
fldt
les
cmp
mov
lds
inc
mov
sbb
fbstp
inc
mov
je
xchg
mov
js
jp
movsl
mov
loop
add
enter
lods
mov
leave
xchg
sub
pop
mov
aaa
in
test
movsl
adc
cwtl
sub
inc
pop
imul
dec
addl
sarl
in
xor
jb
sub
cmc
out
in
mov
mov
je
mov
aam
jne
fsubs
loopne
imul
aas
mov
ss
sbbl
fmull
popf
shl
jge
jno
das
adc
mov
js
cmp
shll
inc
xor
scas
aaa
cli
push
dec
dec
sbb
insl
scas
test
and
in
xlat
lock
cld
pop
rep
jbe
sbb
out
arpl
orb
dec
mov
cmp
push
mov
in
pop
mov
add
lcall
add
lods
clc
dec
add
sahf
mov
push
out
rolb
pop
mov
or
mov
daa
jno
jo
cmp
mov
adc
xor
dec
sub
cmpsl
mov
filds
fiadds
sti
dec
insl
add
sbb
jne
jnp
repnz
sbbb
inc
outsb
jbe
arpl
fwait
insb
mov
shlb
inc
movsl
jg
jno
popa
loop
pop
inc
xchg
rcll
out
or
push
stos
xchg
out
cltd
loope
jmp
push
clc
mov
das
sub
adc
int
or
mov
jle
lds
bound
movsl
addr16
lret
mov
repnz
cltd
adc
mulb
cmpsl
sahf
lds
adcb
fdivl
inc
lds
jo
sub
sub
sbb
jg
mov
inc
mov
ja
jbe
mov
testl
rclb
lret
sbb
fdivs
shll
clc
jp
xor
ficomps
in
adc
bound
lret
inc
std
aas
inc
cmc
incl
or
ljmp
xchg
xchg
popa
outsl
subl
xchg
loopne
in
mov
cmp
add
fists
mov
fdivr
and
clc
outsb
sarl
or
addr16
gs
push
inc
jne
jecxz
jp
push
adc
adc
movsl
add
enter
cs
es
lds
inc
lods
jb
mulb
mov
and
sbb
push
inc
and
jl
jle
sahf
out
fdivs
push
inc
stos
sbb
aas
pop
add
int
jno
xchg
ror
mov
dec
jmp
push
sub
adc
jecxz
mov
push
aaa
jecxz
dec
dec
xor
dec
imul
xor
outsl
push
adc
mov
adcb
insb
lahf
test
mov
xchg
dec
fdivp
inc
lret
add
ja
cwtl
movlps
mov
ret
pop
jg
leave
xchg
jp
mov
cmp
mov
sbb
push
out
inc
xchg
aaa
xchg
mov
jnp
pop
je
inc
outsl
push
jbe
sbb
dec
xchg
sbb
rol
or
push
popf
cmpsl
inc
mov
mov
rdmsr
cltd
nop
in
push
adc
cmp
aas
mov
jb
aaa
in
mov
inc
cmp
rcll
push
ja
cmpsl
sbb
loope
aaa
and
or
mov
xor
mov
insl
inc
sbb
in
push
ds
call
idivb
pop
pop
into
jbe
pop
sbb
or
insl
loop
xor
jmp
lods
test
pushf
add
ds
sbb
adc
inc
out
push
xor
inc
hlt
adc
mov
pop
outsl
xorb
push
inc
call
repnz
pop
cmp
fstpt
shll
and
pop
out
xchg
pop
sbb
insl
dec
jb
movsb
ljmp
jnp
test
pop
sbb
or
push
inc
dec
push
cmp
testl
jp
push
mov
mov
inc
sub
mov
rorl
lret
ss
sub
popf
push
mov
sub
xor
test
icebp
in
pop
mov
movsl
jl
and
push
and
stos
pushf
es
and
scas
fisttpl
inc
sbb
push
pusha
cmpsl
les
pop
dec
mov
xor
insl
push
mov
inc
xchg
jge
inc
imul
adc
add
pop
pop
jle
roll
jnp
stc
or
inc
or
loop
push
cmp
fldt
addr16
pushf
loopne
fisubrl
mov
stos
stos
inc
aaa
jbe
ljmp
test
pop
sti
lea
rorb
mov
xlat
adc
cwtl
mov
icebp
xorb
lods
subl
jmp
mov
pop
push
lea
cld
aaa
cmp
sbb
cltd
adc
fs
cmp
pop
sbb
cld
cmp
xlat
sbb
xor
test
dec
mov
jno
int3
imul
stos
ljmp
sbb
in
pop
sbb
adcl
int3
cmpsb
pop
inc
sbb
pushf
xchg
andl
pop
and
data16
fs
test
push
mov
stc
inc
sub
mov
adc
jg
daa
inc
pushf
add
sub
shrl
adc
mov
add
test
cmp
shl
cwtl
push
scas
and
mov
test
mov
dec
push
pusha
mov
inc
xchg
orl
mov
vmovss
pop
dec
imul
sarl
aad
iret
adc
js
sbb
cltd
in
add
xchg
xor
jbe
mov
not
sbb
fstps
std
lods
mov
loopne
fs
inc
jne
mov
ljmp
mov
mov
scas
cmp
daa
adc
mov
jl
fwait
pop
push
add
lcall
cmp
push
xchg
fstps
hlt
dec
jle
ss
mov
out
daa
add
adc
jnp
popa
dec
sbb
clc
nop
into
xor
lock
xchg
jl
dec
dec
out
int
xchg
and
repnz
xchg
cs
jo
add
cmpsb
jne
lea
lds
push
les
adc
inc
nop
fiaddl
loop
aaa
and
sbb
xchg
push
ljmp
in
shl
test
inc
jbe
mov
lock
sub
dec
jg
les
push
and
repz
push
inc
lds
rorb
inc
in
sahf
push
pushf
mov
push
jbe
inc
in
pop
arpl
pop
mov
sarl
inc
or
shr
cmp
mov
inc
in
sar
stc
popf
dec
ret
adc
popf
jge
pop
xor
shll
adc
inc
cltd
imul
pop
enter
aas
dec
es
imul
adc
das
mov
rolb
add
stc
jg
xorb
or
addb
mov
inc
dec
cli
in
pop
mov
cs
inc
cmp
hlt
imul
ja
rorl
cmp
add
mov
push
lahf
inc
pop
pop
lret
dec
xchg
mov
gs
push
jo
lret
dec
int
inc
shrl
xor
dec
dec
cmp
mov
push
test
cmp
or
ja
shr
sub
iret
jecxz
and
mov
sti
push
addr16
push
shl
and
mov
dec
movsl
xchg
mov
xor
ss
sub
inc
cmp
shl
and
ja
sbb
dec
sbb
popa
shl
sub
outsl
xor
stos
sbb
pop
jb
pop
mov
cmp
mov
in
sbb
and
in
adc
pop
insb
xchg
push
lret
cmp
vpor
inc
mov
ds
adc
mov
jge
or
hlt
adc
xor
ret
in
mov
rolb
fldenv
mov
push
cld
xor
int3
dec
pop
enter
outsb
or
pushf
repz
cmp
xor
xchg
add
mov
xchg
mov
nop
ljmp
ror
mov
inc
cmp
popa
inc
push
lret
outsl
mov
incb
dec
jno
imulb
pop
test
xor
cmp
clc
jl
inc
jecxz
inc
test
lret
cmc
ret
xlat
lcall
test
fsubl
mov
sar
lea
test
add
shr
push
outsb
sbb
das
jge
test
mov
test
dec
call
lret
mov
push
andb
xchg
push
xor
jge
js
pop
lahf
and
jo
inc
imul
in
inc
ss
xchg
push
jmp
les
ds
pop
pop
push
fadds
sbb
push
ror
push
mov
ret
loop
mov
sbb
hlt
pop
mov
jb
push
fldt
xor
inc
ret
mov
sub
sbb
sub
sarb
cmpsb
js
xchg
shll
aaa
sbb
clc
adc
mov
xchg
outsb
mov
wrmsr
push
mov
leave
mov
adc
or
pop
xchg
mov
iret
inc
imul
fcmovb
aas
and
push
jo
dec
pop
inc
or
jp
out
cltd
push
add
mov
adcb
cmpsl
arpl
lret
mov
pop
lea
push
repnz
and
ja
sahf
mov
sbb
mov
out
sub
cmp
push
sbb
dec
add
xchg
cmp
adc
jne
jg
test
aas
lock
jo
sbb
test
cmp
xor
dec
repnz
imul
fstl
jl
stos
test
jp
xchg
jmp
pop
fs
adc
add
lock
mov
aas
popa
test
push
filds
pop
test
sbbb
sub
pop
jns
sbb
daa
insb
xor
ret
add
sub
sbb
aaa
in
ret
andb
neg
push
pusha
or
dec
xchg
xchg
mov
stos
mov
pop
adc
sbb
daa
push
hlt
incl
mov
pop
in
iret
xchg
addr16
inc
or
xlat
push
mov
push
sub
cmpsl
fcoml
push
sub
xchg
jo
jg
or
add
repz
sti
jo
inc
inc
cmc
or
push
in
adc
sbb
pop
imul
arpl
inc
inc
sub
sub
mov
insb
mov
xchg
sbb
jns
lock
xchg
or
cli
sub
inc
cs
push
push
in
mov
subl
push
ljmp
mov
lds
jb
cmpsl
mov
int
adc
loope
inc
cmc
xor
mov
daa
es
mov
jl
and
sbb
inc
push
push
xor
stos
cmp
mov
pop
fidivs
pop
jecxz
xchg
cmc
clc
and
daa
pop
loopne
sub
rclb
mov
lea
daa
in
sub
cltd
les
xor
pop
ljmp
or
outsb
mov
scas
push
jle
push
cmc
push
ja
repnz
lcall
jmp
mov
and
gs
andl
push
sbb
jo
popa
adc
rolb
add
pop
outsb
in
leave
hlt
js
call
add
sub
inc
sub
and
insl
add
adcl
out
cwtl
push
rorb
lods
ds
mov
test
js
jle
cmp
add
add
dec
in
in
pop
push
pop
fisubrl
jb
mov
adc
rcrb
ds
cmpsb
xchg
lock
sub
push
scas
push
or
inc
es
clc
call
sbb
pop
xchg
loopne
mov
pop
sbb
dec
imul
xor
sub
jne
mov
lock
hlt
inc
or
and
mov
out
cmp
stos
push
xlat
xchg
mov
sahf
loope
mov
sbb
ss
lahf
inc
jne
mov
lret
lahf
adc
xor
cmp
cwtl
inc
ja
loopne
cld
sub
aad
mov
jns
jb
sbb
inc
sub
adcb
dec
loope
jo
out
gs
out
dec
and
sub
push
adc
inc
pop
cltd
push
lret
inc
bound
subl
enter
movsl
dec
es
data16
cltd
mov
fsub
popa
inc
ficoms
jno
mov
out
stos
pop
mov
andl
and
fidivrs
cmpsb
add
mov
or
mov
in
dec
lock
pusha
sbb
into
jmp
les
xchg
push
cltd
idivb
mov
mov
sub
pop
jae
jge
aam
cs
mov
adc
xchg
mov
mov
insb
push
shll
cmp
cmp
fldl
call
pop
dec
and
lret
push
fcmove
push
mov
cmp
xchg
iret
movsl
xorb
cltd
clc
dec
mov
jns
jbe
movsl
pop
hlt
and
and
in
or
stos
xor
insl
stos
pop
sbb
repnz
xchg
add
and
mov
shll
xchg
jmp
or
pop
push
pusha
shll
rorl
sbb
movd
mov
out
ret
sbb
fcmovb
aas
inc
fstpt
push
mov
sbb
dec
xchg
loop
push
lcall
jle
pop
movsl
inc
iret
xchg
mov
ds
rclb
mov
mov
bound
cwtl
sbb
sbb
cmpsl
mov
mov
fistpl
push
call
sbb
mov
jnp
add
pop
gs
rolb
ljmp
jmp
sbb
aaa
test
or
add
jp
pop
sbb
rcrl
loope
cmc
mov
js
std
lahf
leave
mov
cmpsl
imul
sub
push
jno
gs
push
arpl
mov
sbb
mov
cmpsl
loopne
jnp
mov
in
pop
mov
cmp
cld
scas
or
adc
imul
xchg
xor
loopne
pushf
ljmp
dec
ljmp
test
ret
sbb
sub
lods
stos
sub
sbb
xchg
cmp
adc
in
sub
xor
add
fwait
lods
in
clc
rcl
sahf
jmp
push
pop
outsl
jmp
pop
stc
cld
out
loope
xchg
in
mov
pop
dec
cmpsl
sub
fcomp
mov
lcall
out
mov
stos
sub
lret
adc
or
lds
jl
jp
cmp
shrb
mov
mov
cmp
cmp
adc
xchg
push
mov
out
es
test
sub
inc
sbb
pop
outsb
call
aam
cmpsb
sub
mov
int
jbe
in
inc
mov
cli
sbb
mov
jp
mov
cltd
pop
add
and
inc
xchg
stos
xchg
lods
and
sarl
cmp
and
lods
cmpsl
subb
sar
and
xorl
shll
jbe
aam
mov
push
daa
adc
dec
nop
in
cld
xchg
jns
into
lods
mov
mov
dec
aaa
les
test
pop
mov
loopne
sarb
mov
xlat
lea
aaa
adc
sbb
imul
xchg
fidivrs
rorl
cmp
ret
sub
sbb
xor
je
and
testl
fidivrs
hlt
pop
repnz
pop
mov
in
scas
pop
stc
cmpsl
mov
pop
sahf
and
lahf
or
fisubl
jbe
xor
sub
inc
out
aaa
mov
lahf
imul
jl
sbb
out
xor
sbb
je
adc
test
jo
cwtl
leave
sub
mov
xor
mov
pop
clc
push
mov
mov
sti
xchg
push
dec
pop
ss
pushf
xchg
loope
loopne
cld
push
stos
leave
movsl
js
pop
jae
sbb
clc
lods
aad
xchg
int3
jp
scas
or
pop
mov
popa
repnz
inc
jo
fwait
testl
adc
pop
fnstsw
aas
fwait
or
push
jae
mov
sub
mov
shlb
mov
xchg
mov
cmp
insl
and
ss
jle
xor
sbbl
mov
daa
cmpsl
and
xlat
jnp
movsl
sahf
xor
xor
stos
in
xchg
lods
pop
mov
jmp
mov
lods
add
lretw
and
jne
mov
out
int
aad
adc
push
xchg
sbbb
inc
jne
mov
rcr
xchg
loop
lock
fwait
test
push
xor
rclb
lods
stos
lahf
movsl
xchg
sbb
sbb
xor
and
notl
sub
nop
repz
pop
jmp
push
xor
pop
jbe
xor
repnz
ret
and
xchg
ja
adc
dec
mov
push
ret
and
jmp
enter
pop
nop
jp
mov
insl
and
add
mov
add
push
es
ljmp
fisubrs
sub
cwtl
dec
test
cmp
pop
ljmp
ss
mov
inc
sbb
or
fs
inc
and
out
inc
fsubl
ja
es
mov
add
lock
cmp
sub
test
in
sbb
negb
stc
lds
mov
jge
mov
push
data16
mov
lret
mov
push
adc
lret
add
int
dec
or
inc
push
dec
mov
out
sub
fs
hlt
popf
sbb
les
lods
cmp
jbe
stos
cltd
stc
movsl
scas
aas
inc
mov
sbb
je
loope
push
adc
sbb
loope
out
lock
leave
mov
rcr
inc
push
insb
sbb
fdivl
lcall
xchg
inc
jns
cltd
mov
inc
inc
test
or
mov
mov
jecxz
sbb
pop
sub
xor
pushf
cmp
cmpsb
lds
shll
xor
ljmp
mov
fistpll
pop
jnp
int
xchg
ds
add
test
inc
sub
and
or
cltd
clc
xchg
sbb
mov
mov
sub
xchg
xchg
pop
mov
cmp
sub
push
dec
cmpl
insb
or
inc
andl
jnp
jae
push
jmp
dec
das
cmp
push
xor
dec
fwait
shlb
or
mov
jmp
ret
cmp
pop
pop
in
push
or
stc
cltd
mov
inc
sbb
sbb
mov
xchg
xor
cmp
jle
movsb
pop
sarl
sbb
mov
adcl
mov
xchg
testb
inc
push
push
jmp
lds
rcrl
jae
push
lret
push
lods
fs
daa
adc
add
push
mov
jge
call
imul
iret
fimuls
add
adc
aad
iret
inc
mov
rolb
fmuls
and
mov
xchg
cmp
sub
push
sub
or
dec
mov
std
push
lock
pop
mov
cmpsl
outsb
in
testl
xor
adc
in
ljmp
rcr
leave
enter
daa
pop
cmp
xchg
enter
adc
ret
add
dec
test
lods
add
add
push
fcoml
pusha
sbb
cmpxchg
lcall
or
test
int
fucomp
jg
mov
loop
cmp
jnp
sub
hlt
mov
mov
push
add
popa
int3
xchg
pop
movsl
cmp
push
aam
ds
scas
jecxz
repz
xor
cs
add
inc
adc
popa
rcll
aas
add
sarl
insl
or
push
sahf
adc
test
ja
xor
cs
xor
sar
ret
mov
pop
mov
and
adc
loope
mov
xor
push
lret
dec
cmc
rcl
mov
push
inc
in
sahf
je
and
aam
addr16
add
js
les
pop
dec
xchg
push
add
xchg
fstps
je
jle
and
int
mov
int
mov
testb
adc
jno
mov
pop
xchg
push
arpl
cmp
xchg
dec
push
sbb
je
pop
xchg
mov
lods
inc
or
inc
jp
push
mov
dec
rorb
bound
repnz
mov
imul
xor
xchg
int3
nop
sbb
das
scas
sti
jbe
je
push
ljmp
sub
daa
xor
sbb
lahf
rol
lods
mov
jp
cmpsl
pushf
inc
jle
mov
icebp
xor
ficompl
cmc
cmp
ret
xchg
enter
xchg
xor
test
pop
xor
jmp
into
in
jp
out
xor
push
std
lock
hlt
xor
dec
jg
fsubs
sbb
jmp
arpl
adc
xchg
jne
in
push
xor
push
clc
ficoml
sbb
fcmove
mov
subb
lret
lret
nop
dec
icebp
dec
lret
pop
outsl
sub
out
gs
out
popf
sbb
jle
or
andb
mov
hlt
add
mov
pop
sahf
mov
scas
lahf
aad
adcb
sub
lea
sbb
lret
and
clc
mov
lcall
mov
mov
jmp
clc
push
push
sarb
arpl
sub
pop
pop
or
or
daa
jnp
cmp
fidivs
mov
mov
lods
andb
adc
dec
popf
pop
shrl
cmp
pop
mov
mov
shl
and
out
int3
bound
xchg
arpl
xchg
push
xchg
xchg
jle
cli
adc
xchg
adc
sbb
xchg
mov
movsb
jb
mov
add
cmpl
bound
jb
xchg
and
or
xchg
fsts
lods
lds
outsl
das
sbb
ds
imul
cmc
mov
cmp
push
pop
cmpb
fs
mov
jo
loop
sbb
xchg
cmp
cmp
push
dec
les
daa
push
mov
pop
xchg
mov
in
data16
and
fs
nop
shl
ret
add
imul
pop
jnp
stos
movsb
mov
xor
xbegin
mov
sti
imul
inc
pop
int
outsb
fmul
outsb
sahf
mov
ss
inc
pushl
dec
inc
leave
sbb
xor
leave
dec
push
cmp
add
mov
lret
pop
js
icebp
cwtl
daa
aas
data16
add
rcll
loopne
jb
imul
sti
jno
sub
jmp
xchg
es
or
push
mov
popa
lods
sub
or
fiaddl
test
mov
cs
mov
sub
sbb
and
negl
xchg
jle
push
enter
fiaddl
and
or
jl
cmp
or
shll
xor
cmp
sbb
add
orb
ljmp
xchg
pop
mov
loope
sbb
push
outsb
jecxz
inc
sub
mov
daa
int3
ret
xchg
xor
mov
jecxz
or
xchg
stc
add
xor
xchg
sbb
andl
push
nop
or
push
cmp
mov
sti
arpl
mov
or
inc
pop
and
cmpsb
sbb
mov
scas
cmpsl
xchg
mov
dec
adc
push
mov
mov
pusha
rcll
pop
imul
je
scas
jb
mov
les
xor
ficoms
addr16
jns
fldt
sub
pop
lock
sbb
jmp
out
xchg
jp
movsb
push
out
pushl
cmp
adcb
dec
out
inc
jo
das
inc
push
jl
adc
filds
popf
dec
pop
pop
imul
xor
xor
add
and
in
mov
inc
xchg
cmp
mov
jg
sub
lret
adc
pop
arpl
sub
arpl
or
bound
adc
in
xor
cmp
or
mov
push
mull
loop
cmp
es
mov
cwtl
mov
mov
pop
sbb
xchg
adc
clc
sub
in
adc
add
negl
stos
dec
cs
mov
add
adc
sahf
cmp
xrstor
mov
xor
insb
mov
test
cwtl
cs
shrl
mov
int3
lods
int3
setle
and
subb
pop
cmp
pop
adc
inc
in
and
popf
dec
sbb
out
mov
jg
ljmp
cmp
popa
cmp
inc
lods
in
in
cmp
test
arpl
adc
subl
pop
aad
mov
push
in
repnz
icebp
fistl
pop
nop
out
and
leave
dec
xchg
xor
lret
pop
push
lret
mov
inc
int3
jb
sub
stc
pop
pop
push
jbe
lahf
ja
test
hlt
incb
lods
into
xor
adc
imul
cli
jmp
in
ret
pusha
push
loopne
push
and
push
in
push
mov
jns
data16
push
and
mov
push
movsb
insl
ds
mov
cmp
cwtl
or
mov
lcall
enter
push
test
sub
fdiv
enter
ja
adc
int
cmpl
pop
fcom
dec
xlat
pop
push
stos
inc
sub
daa
movsl
jnp
mov
fs
ss
cmp
sub
nop
lcall
test
inc
shrl
mov
lock
mov
nop
lea
mov
xor
mov
mov
jbe
sub
jns
mov
leave
jge,pn
jp
add
lods
xor
pop
popf
aas
sub
in
pop
lea
in
push
push
in
in
arpl
shll
addb
push
jno
adc
std
sub
jle
frstor
dec
jae
fmul
jb
pop
notl
fidivl
div
lcall
hlt
icebp
imul
int3
push
inc
cmp
leave
dec
mov
sbb
inc
mov
pushf
xchg
in
jb
lcall
xorb
or
mov
adc
rcr
push
cld
sbb
adc
mov
push
push
cmp
fbld
pop
dec
cld
std
cmp
stc
mov
mov
add
cmp
push
insl
xchg
movsl
popa
mov
add
add
movsb
xchg
stos
xchg
jo
xor
lahf
mov
inc
insl
cmp
stos
arpl
mov
out
andl
pop
jge
rorl
sti
test
cmp
dec
pop
les
lahf
rcrl
inc
mov
into
cli
rcrb
cwtl
adc
mov
dec
push
sbb
cli
xor
push
dec
cmp
pop
shrb
mov
mov
cltd
popa
jno
je
mov
add
mov
push
and
mov
je
mov
inc
pop
xor
adc
int
xchg
aad
into
ret
mov
lods
mov
daa
in
gs
xchg
sets
add
lahf
or
mov
inc
sbb
or
sbb
das
enter
sbb
aas
out
sub
loopne
jg
jb
inc
mov
push
inc
fbstp
dec
cld
fidivrl
stos
add
push
fsubrs
sub
mov
test
cmp
das
dec
mov
movsl
rcrl
imul
add
xrelease
dec
leave
add
lds
les
mov
repz
xchg
sub
mov
lahf
addr16
mov
mov
mov
aaa
adc
inc
js
fnsave
shr
mov
jmp
push
popl
iret
cmp
push
or
sub
pop
stc
and
sarb
insl
fld
daa
xchg
dec
bound
mov
adc
xor
sbb
push
ss
adc
xlat
pop
jno
dec
push
mov
and
fdecstp
inc
cld
es
push
adcb
adc
test
push
stos
imul
jp
pop
inc
inc
iret
push
int
jl
sbb
jne
and
es
mov
sti
fnstcw
roll
aad
ds
mov
cmp
repnz
clc
adc
scas
leave
rorb
mov
dec
push
lcall
inc
test
adc
aas
add
loop
adc
leave
mov
xchg
in
xor
jo
stos
mov
into
movsl
push
scas
cmp
dec
sahf
popf
out
mov
jnp
int3
xchg
test
dec
dec
mov
test
out
movsl
sbb
loopne
iret
test
push
jp
and
cltd
xchg
mov
cmp
clc
js
dec
lahf
sub
push
and
in
mov
dec
je
adc
xor
mov
push
pusha
pusha
pop
fcomi
iret
push
push
xchg
xchg
cmp
outsl
inc
test
sti
loop
push
adc
mov
sub
sbb
pop
insb
out
push
xor
int3
mov
mov
nop
adc
js
cmp
sub
outsb
stos
xlat
push
push
adc
inc
mov
push
push
inc
rclb
pop
jl
and
in
loop
jae
push
add
pop
fsubrs
jecxz
fidivl
inc
loopne
jmp
lret
divb
xchg
inc
adc
mov
xchg
flds
clc
ret
mov
xchg
loopne
mov
in
fs
push
push
and
sub
inc
xor
push
stos
inc
xchg
add
cmp
push
xor
push
pop
mov
jo
inc
and
dec
fidivl
je
lcall
pop
xchg
icebp
in
push
push
js
add
nop
sti
xchg
dec
fildll
divl
fmull
jnp
cs
outsb
loopne
pop
fisttps
jo
xor
aaa
or
das
push
mov
jo
test
inc
sub
pop
xlat
lcall
add
clc
inc
arpl
xchg
je
js
cmc
push
arpl
andb
xor
dec
jg
lods
dec
scas
movsl
loop
inc
fisttpl
ja
test
arpl
push
das
mov
push
loope
inc
hlt
and
jle
iret
fmull
loopne
push
stos
adc
cwtl
leave
pop
sbb
fs
sbb
mov
adc
mov
fwait
ret
xor
sarl
addr16
pop
and
or
rolb
or
shlb
pop
dec
ss
mov
or
into
xchg
jae
loopne
sbb
push
insb
lea
pop
jecxz
mov
push
xlat
scas
aad
das
adc
mov
das
push
push
inc
and
out
loop
sub
cmp
in
jl
sahf
pop
and
add
sbb
ret
pusha
les
cld
jbe
cmp
movsb
in
adc
lods
out
ja
jge
mov
adc
add
sub
sub
rcrl
xchg
push
push
in
add
sub
mov
jp
lcall
jnp
mov
sbb
loop
out
nop
fwait
stc
iret
and
ds
loop
in
push
dec
ljmp
mov
shr
inc
xchg
push
sbb
in
mov
scas
pop
and
mov
cmp
mov
hlt
or
stc
lret
lock
or
test
jno
dec
int
loopne
xchg
mov
movsl
les
jb
ja
add
ret
cmp
flds
jns
push
push
fs
aaa
xchg
mov
inc
and
popa
xchg
sbb
in
aam
mov
test
mov
sub
jp
test
mov
jno
push
addb
sub
daa
push
ror
popfw
dec
xor
lahf
aas
push
adc
mov
dec
push
clc
cmp
icebp
sub
mov
popa
cld
sub
adc
hlt
xchg
gs
mov
sub
xor
or
mov
clc
inc
jg
dec
lods
and
push
lret
jge
test
call
dec
xor
push
mov
cmp
jle
fsts
les
movsb
lcall
or
loope
fdivrs
jecxz
and
sbb
mov
negl
dec
dec
xchg
scas
rorl
push
adc
call
sahf
jl
mov
clc
inc
adc
push
test
sahf
shrb
mov
dec
dec
cwtl
js
cmc
cmp
mov
inc
fs
cmp
pop
popf
xchg
out
xor
mov
add
popf
pop
mov
arpl
adc
push
mulps
sbb
in
fcmovb
mov
jle
loopne
lret
push
fiadds
mov
and
inc
pop
mov
adcb
repz
cmpsb
mov
or
mov
lahf
or
push
push
push
lock
sub
xchg
clc
sub
cmp
push
es
sbb
cwtl
out
adc
mov
xchg
mov
adc
pop
stos
enter
mov
sbb
xlat
mov
jb
cmp
dec
cmp
or
jmp
pusha
mov
mov
adc
jns
pusha
fdivrl
roll
stos
arpl
pop
mov
test
inc
lret
cmp
inc
add
pop
repnz
outsb
int
lcall
xchg
fsubrp
dec
in
jecxz
dec
jno
or
sbbl
sbb
and
lret
sbb
ficompl
sub
adc
cwtl
pop
frstpm(287
and
test
xchg
jae
shll
into
or
addr16
sbb
jns
movsb
adc
dec
jae
jmp
fsts
fidivs
pushf
mov
rorb
in
movsl
mov
fdivs
in
fsubl
movb
mov
mov
call
lds
or
jno
mov
xchg
adc
mov
pop
dec
mov
lret
push
xchg
mov
test
ljmp
xchg
fldl
js
pop
and
or
mov
xchg
iret
lds
mov
push
mov
adc
jmp
shlb
lods
xchg
ss
or
sarl
in
push
out
stos
rcrb
out
add
jmp
cmp
jbe
sub
pop
lea
mov
out
mov
sub
pop
or
cmp
in
fidivl
lea
xchg
fimull
rolw
xchg
cmp
andb
ret
jp
add
es
pop
mov
pop
les
repnz
jbe
xchg
sbb
xchg
pusha
cmpsb
mov
cmp
xor
or
cli
cmp
lret
lret
mov
into
sbb
pop
ds
mov
lret
sbb
shrl
enter
xchg
cmp
add
test
pop
add
push
adc
xchg
fcmovb
out
cmp
add
xchg
loope
pop
ss
out
jbe
cmpl
shrb
mov
popa
sub
lock
sub
outsb
jmp
jmp
pusha
inc
lahf
imul
and
add
dec
out
jg
push
mov
mov
inc
sbb
shlb
dec
setl
in
stc
idivl
inc
scas
pusha
les
int
push
mov
lea
and
daa
icebp
mov
incl
cmp
rorl
orb
xor
rclw
fisubrs
out
push
or
jo
xchg
xchg
jge
mov
mov
mov
mov
test
xchg
popf
loope
sbb
mov
adc
mov
sbb
int3
dec
jb
xchg
adc
inc
adc
clc
fildl
in
outsl
outsl
cld
sti
push
or
and
fwait
dec
sbb
sub
lods
inc
in
cli
push
xchg
xchg
sbb
mov
rorb
loope
mov
cmc
sub
movsl
in
bound
or
into
mov
or
das
lock
cmp
mov
testl
mov
pushf
stos
adc
jb
cltd
lock
stos
cmp
sbb
pop
or
fcomp
inc
sbb
mov
jmp
adc
test
test
sarl
out
sahf
std
mov
rolb
jo
push
in
iret
push
enter
cli
inc
pop
mov
and
pop
pop
jno
ds
mov
xor
push
sbb
rcrb
arpl
push
add
js
out
pushf
test
jnp
mov
push
push
xor
iret
cmp
pop
inc
or
add
insl
push
hlt
cmp
inc
pop
mulb
mov
mov
fimull
adc
mov
fistpll
icebp
iret
cli
pop
lret
data16
lea
call
jmp
jl
cmc
loop
pop
add
mov
jb
add
or
hlt
push
inc
inc
and
push
xchg
sub
cli
sbb
pop
mov
aas
lahf
mov
adc
shlb
xchg
std
sub
int3
push
adcb
jge
xor
cmp
insl
fiaddl
cld
mov
dec
adc
ljmp
js
adc
jns
jne
lods
and
lods
mov
jl
in
shlb
je
imul
inc
imul
or
ret
lods
jno
cmp
fwait
pop
lods
xchg
add
adc
cmc
jnp
pop
sub
leave
mov
or
les
sarl
lods
jns
lods
fwait
adc
fdivl
sub
lock
pop
mov
xchg
arpl
stc
loope
mov
xchg
mov
xor
mov
mov
and
mov
lcall
int3
arpl
xor
dec
add
loopne
cmp
cld
push
insb
cld
lock
fisubrs
xor
push
loope
cmp
out
stc
bound
js
and
shll
sbb
mov
mov
ja
enter
aad
and
cwtl
ret
in
push
xor
sbb
cli
scas
pop
jecxz
insb
or
lds
sbb
sub
cmpsl
push
mov
pop
dec
push
or
or
gs
add
lret
rolb
outsl
int3
js
push
add
insb
mov
push
repnz
xor
cmp
daa
adc
scas
stos
pop
push
mov
and
and
arpl
xchg
rorl
lds
divb
or
sub
pop
imul
xor
lret
pop
and
fwait
not
mov
dec
shll
xor
lcall
xchg
xlat
je
jl
enter
jne
sub
cltd
ret
lcall
mov
ljmp
sbb
mov
jecxz
push
fstps
fimuls
xchg
rol
xor
pinsrw
sbb
call
int3
mov
ret
test
dec
cld
popa
cmpsb
mov
aaa
xor
sbb
pushf
insb
out
ds
loopne
test
lods
or
push
cmp
pop
movsl
int3
and
test
or
xchg
adc
std
xor
xchg
jbe
loopne
or
adc
jo
pop
das
popa
std
fmull
ja
xchg
sub
inc
cmpl
jl
push
insl
sbb
das
in
clc
shrb
ror
cmp
adc
movsb
push
in
mov
int
mov
jmp
mov
mov
add
adc
gs
mov
jg
pop
xchg
adc
test
mov
xor
jp
add
xor
test
out
dec
xor
idiv
cwtl
or
sarl
pop
divl
adc
dec
iret
faddl
hlt
out
je
out
leave
rclb
jl,pt
pushf
loope
out
sub
cmp
push
test
ret
sti
or
adc
cmp
push
loope
std
dec
arpl
gs
dec
insb
dec
xor
mov
jnp
xchg
add
mov
js
or
dec
pop
call
leave
dec
xcrypt-ctr
cmpsl
pop
jns
or
stos
mov
addr16
rcll
sub
aam
jecxz
aam
stos
xor
lock
sbb
push
pop
jnp,pn
sub
or
cmp
mov
hlt
stos
out
push
xchg
movsl
in
fwait
jl
mov
fisttpll
jp
ret
jno
fnstenv
int3
data16
stos
mov
jae
icebp
outsl
push
sbb
mov
pusha
xchg
inc
test
cmc
test
stos
mov
sub
sub
adc
pushf
sbb
and
or
push
mov
out
scas
pop
pop
mov
cmp
mov
clc
mov
sbb
mov
push
loop
out
and
xor
push
orb
xlat
mov
adc
aam
pusha
mov
scas
aaa
xchg
rcrl
mov
cmpsl
icebp
lods
lcall
or
orb
setl
mov
push
ja
lcall
dec
movsb
mov
int3
jo
and
xor
xor
imul
aaa
jb
jle
into
sbbb
sbb
pop
lods
dec
inc
push
push
mov
ret
add
shll
mov
insb
outsb
push
arpl
hlt
addl
sub
cmp
clc
jae
mov
data16
and
sti
and
flds
enter
lahf
pop
sbb
sub
inc
mov
mov
test
and
leave
push
leave
or
insl
mov
dec
mov
clc
pop
adcw
add
pop
into
jne
jno
hlt
cmc
mov
push
pop
mov
or
push
data16
dec
adc
add
xchg
stos
shrb
and
iret
lea
lahf
lea
pop
les
lea
fcomps
lahf
adc
xchg
mov
arpl
mov
lods
stc
mov
jo
pop
cmc
xlat
xor
aad
adc
mov
data16
jne
xor
sbb
in
enter
pusha
iret
mov
pusha
fildll
inc
cmp
mov
movsl
popf
and
mov
loop
das
imul
andl
scas
bound
xchg
clc
push
jno
insb
sub
cltd
aam
adc
push
ljmp
dec
and
pusha
xchg
push
seta
js
lock
cmp
les
mov
jo
movsb
or
test
mov
orb
dec
cld
fldt
rcrb
mov
mov
push
and
sub
sbb
sub
clc
pusha
mov
jae
inc
dec
push
adc
mov
adc
push
sbb
mov
ja
shrb
mov
xchg
dec
rorl
and
add
sub
sbb
sbb
fdivl
cli
sbb
mov
xchg
shr
ljmp
popf
dec
repnz
lcall
test
jns
andl
test
icebp
stos
fidivrl
cwtl
sbb
mov
shrl
int3
xor
ja
and
push
jne
xor
gs
gs
xchg
dec
fs
fcmovnu
nop
imul
ret
mov
jmp
xor
xor
ss
icebp
mov
dec
pop
out
hlt
clc
js
jle
sahf
inc
xchg
xor
sbb
mov
or
stos
test
dec
notb
repnz
insl
arpl
std
cmp
repnz
popf
es
and
mov
dec
mov
lock
xchg
inc
jb
hlt
mov
outsl
dec
dec
sub
sbb
inc
hlt
pop
ja
push
push
ret
xchg
cmp
add
inc
cmp
popa
outsl
nop
cld
inc
jno
popa
iret
sbb
jo
mov
sahf
dec
in
cltd
or
adc
std
push
pop
push
fdivr
mov
jae
nop
inc
sti
mov
out
xchg
add
add
push
cmp
outsl
cmp
push
lahf
cmpsb
add
sub
mov
pop
ja
stos
fldz
mov
mov
adc
mov
insl
psadbw
roll
dec
pop
mov
dec
mov
ret
xchg
out
iret
out
sbb
pop
pop
jnp
test
test
mov
mov
aad
mov
sbb
xchg
jmp
jae
dec
outsl
gs
std
adc
push
nop
data16
mov
mov
cwtl
cmpsl
popa
lock
clc
cmp
and
cltd
dec
call
stos
es
rcll
mov
aam
inc
inc
pop
and
xchg
pop
xchg
xor
push
iret
push
repnz
scas
inc
push
mov
sbb
lahf
mov
inc
pop
cmc
cld
lock
sbb
insl
test
out
addr16
test
inc
iret
cwtl
lcall
push
dec
push
jnp
int3
add
push
inc
jo
sahf
jbe
aam
push
push
xchg
scas
ljmp
lahf
inc
std
mov
hlt
pop
pop
decl
popaw
xor
scas
lods
pop
jne
and
aam
cmp
push
or
test
std
fsub
adc
stos
mov
js
xchg
stos
cmp
ss
and
and
fcoms
mov
and
push
and
imul
sbb
sub
mov
lods
inc
jl
cmp
loope
sub
test
ja
shrl
lahf
jbe
xchg
jg
add
cmp
jae
sbb
call
ret
fisubrs
daa
xchg
mov
scas
push
mov
daa
jle
test
jo
mov
pop
mov
sub
mov
cld
push
int
lods
or
dec
shll
xchg
cld
ja
stc
mov
icebp
jge
and
aas
ret
push
negl
repz
mov
sbb
add
add
sub
xchg
fisttpll
iret
push
mov
or
out
xchg
movsb
push
test
lea
pushf
movsb
fmul
or
mulb
and
orb
repz
lcall
bound
and
js
and
adc
ds
inc
mov
pop
pop
popa
shrl
orb
cmp
in
notl
aad
ljmp
sbb
nop
loope
xchg
test
stos
inc
loopne
pop
jae
push
or
dec
push
inc
pop
inc
clc
xchg
push
imulb
or
aad
repz
dec
push
pop
xchg
enter
dec
test
jbe
mov
and
sub
mov
inc
movsl
lods
cmp
rorl
xor
sbb
test
mov
bound
mov
dec
mov
add
adc
dec
mov
dec
loopne
pop
mov
xchg
popa
xchg
fincstp
mov
or
lahf
in
scas
orl
push
mov
pop
cmp
jmp
in
pop
lods
mov
add
pop
jae
xchg
aaa
out
inc
rcll
or
and
nop
jg
adcl
loope
int3
inc
dec
sub
test
cltd
xor
popf
mov
xchg
rclb
imulb
sti
mov
push
aam
add
in
bound
lods
out
std
xchg
out
xchg
mov
es
cmp
subl
ficompl
push
leave
rorl
adc
call
decb
jmp
fbld
add
jmp
cltd
adc
fimuls
outsl
repnz
push
rorb
adc
add
arpl
adc
sbb
fsubrl
dec
repz
pushf
jb
inc
nop
dec
mov
nop
xchg
pop
inc
subl
adc
inc
pop
push
xor
xor
pushf
mov
sahf
aaa
pushf
inc
or
pop
lcall
push
lods
pop
inc
push
sbb
incb
lcall
mov
dec
ret
mov
fwait
dec
lahf
dec
in
push
xor
jmp
xor
pop
fsubr
out
iret
or
pop
pop
adc
ret
xor
push
push
in
mov
test
aaa
test
cs
out
jmp
push
sub
pop
stos
or
xchg
mov
jl
aad
xchg
ret
mov
pop
mov
popf
sub
testl
push
mov
pusha
mov
jmp
test
pop
add
scas
xor
data16
popa
nop/reserved
dec
std
inc
test
or
les
fimull
jg
and
std
scas
cmp
or
dec
pop
movl
andl
scas
fcomps
cmp
cmpsb
or
xor
lea
test
sub
jmp
or
mov
jne
add
cmp
ret
lcall
loopne
rol
scas
pop
cwtl
testl
mov
jae
xor
adc
clc
in
push
sbb
repnz
sbb
mov
stos
push
push
fsubrp
and
xchg
sub
mov
jmp
sar
test
mov
add
mov
sub
adc
jnp
inc
lds
leave
mov
bound
icebp
jo
hlt
fcomi
es
mov
sbb
outsb
adc
add
mov
lret
cld
adc
adc
and
lods
loopne
dec
mov
fdivrl
out
addl
mov
pop
arpl
negb
cmpsb
ja
dec
push
pusha
clc
pushfw
inc
push
xchg
cmp
cmpsl
shl
inc
mov
nop
sub
ss
fs
shlb
les
scas
mov
adc
and
out
cmp
aam
lahf
mov
shll
mov
icebp
xor
mov
sbb
inc
pop
subb
leave
ret
nop
adc
adc
pop
adc
inc
test
push
cmp
xchg
loop
in
and
dec
adc
insl
and
and
jecxz
fcom
ret
jecxz
xor
mov
sub
inc
or
inc
subb
loop
fildll
nop
and
pop
mov
fstl
repnz
adc
or
xchg
and
mov
ret
lahf
cwtl
ficoml
dec
or
lods
sbb
dec
push
stos
fisubrs
jle
leave
lods
test
pop
add
ds
je
mov
push
lods
mov
sbb
mov
rolb
in
jnp
or
ficoms
pop
lahf
jl
fsubrl
pop
mov
mov
clc
aad
or
cli
adc
lret
cld
ret
mov
push
mov
mov
mov
jmp
in
test
rorb
adc
lds
cmp
mov
pop
test
or
dec
daa
mov
mov
xor
mov
cmp
and
add
or
lds
sbbl
fstpt
xlat
adc
idivb
out
jbe
sti
sbb
fucomi
and
ror
loopne
jae
cmc
jmp
jne
stos
imul
int3
cmc
data16
jecxz
jnp
stos
enter
pusha
add
es
pushf
mov
cwtl
aaa
adc
mov
aaa
xchg
out
or
call
mov
inc
stos
fadds
xorb
shlb
or
sbb
pop
mov
lcall
loop
daa
mov
jns
cmp
outsl
sub
push
shlb
int3
xchg
data16
sbb
push
mov
or
loope
mov
jns
add
mov
mov
and
lcall
cltd
xor
push
xchg
push
fcoml
add
les
mov
ds
sti
fs
inc
sub
inc
xorl
mov
push
mov
unpckhps
dec
xchg
mov
int
jge
pop
mov
sbb
dec
adc
pop
test
fcmovb
mov
call
xor
mov
adc
call
in
test
movsl
imul
pop
xchg
push
xchg
xor
outsb
in
imul
aam
fisttps
or
icebp
dec
pop
outsl
imul
lea
hlt
sbb
gs
insl
lret
lock
jle
nop
cmp
scas
mov
sbb
loop
dec
xchg
movsl
push
mov
dec
into
lods
ss
ljmp
push
loope
out
jae
or
cmp
mov
aas
cld
pop
push
pop
js
aas
inc
xlat
testl
stc
aaa
inc
in
inc
jl
mov
jp
pop
push
sbb
push
push
mov
push
sub
add
ds
push
dec
dec
mov
xor
ret
addr16
push
dec
push
push
jb
inc
pop
cmc
dec
hlt
int
mov
sub
or
shrl
mov
adc
inc
pop
xchg
call
stos
dec
mov
test
scas
mov
sbb
loope
ss
mov
into
dec
cmp
pop
or
pop
sti
leave
andb
fsubl
inc
adc
lods
sub
and
and
sarb
inc
icebp
outsb
shrl
fisttpll
lea
sbb
insl
or
adc
test
sti
push
cmp
cmp
jmp
pop
jb
es
lods
sbb
xchg
lds
dec
adcl
push
lods
lods
adc
roll
in
sahf
or
repz
adc
lret
subl
mov
movsb
in
scas
dec
sbb
and
sbbb
jle
add
shll
das
inc
sahf
sbb
pusha
inc
xor
jecxz
and
arpl
sarb
clc
xchg
push
mov
sub
add
inc
rcll
lea
push
cmp
pop
add
xor
adc
add
ljmp
cltd
cmp
jge
es
jmp
repz
lock
sbb
rorb
inc
jmp
cs
decl
and
push
lds
mov
outsb
xchg
mov
mov
mov
and
pop
lods
roll
pop
in
sub
ret
or
mov
mull
pop
dec
xchg
js
sbb
in
cmp
add
scas
xchg
dec
test
fimull
jl
pop
push
icebp
fdiv
push
cmp
xchg
add
inc
mov
cmpb
inc
aad
pop
pop
push
or
push
jp
popa
xor
add
sub
out
lret
icebp
mov
mov
mov
jecxz
aaa
xor
sub
ja
in
stc
pusha
movsb
pusha
lods
fdivl
aad
int3
in
mov
jns
test
popf
gs
es
adc
test
push
ffreep
mov
daa
mov
jecxz
out
cmp
inc
js
adc
in
shll
addr16
fucom
repnz
add
pop
mov
sar
cmp
data16
lret
cmp
lahf
add
aam
fildll
dec
mov
addr16
test
jnp
mov
pushf
mov
xchg
loope
mov
leave
pop
sar
jmp
xor
ss
jae
cmp
or
mov
xchg
aaa
push
es
repz
sub
push
mov
sbb
scas
inc
add
lret
and
jg
push
pop
ljmp
xchg
or
adc
incb
insb
push
fscale
mov
mov
cld
xchg
xchg
jno
add
push
pusha
lret
lods
pop
or
lcall
pop
xchg
sub
cmp
jp
add
dec
fsubrl
mov
jmp
hlt
sub
mov
mov
cli
lds
dec
and
mov
xor
cwtl
jmp
mov
shl
mov
pop
sbb
jnp
lods
fcoms
ret
mov
mov
leave
leave
mov
addl
jmp
mov
mov
lret
ret
stos
bnd
sub
cmp
test
jb
mov
inc
into
pop
mov
aad
inc
push
imul
mov
mov
adc
je
repz
repz
xchg
pop
mov
jp
adc
aad
push
in
repz
pop
or
dec
pop
in
push
sbb
xchg
inc
sub
mov
int
pop
adc
jns
stc
push
sbb
jg
movsb
xchg
mov
push
in
xlat
int3
xor
xor
in
mov
push
sub
ret
das
call
mov
mov
adc
mov
mov
mov
leave
pop
jecxz
cmpsl
scas
enter
inc
inc
sbb
int3
bound
inc
inc
pop
frstor
mov
int3
sbb
add
int3
xchg
mov
andb
movsl
and
push
jmp
mov
and
pop
mov
loop
loop
cmp
mov
cmp
sub
push
pop
rcrl
and
jae
sub
mov
out
jno
sub
cmpsl
movsl
mov
cmp
fstpl
aad
push
addr16
sarb
xor
cmc
mov
xor
dec
stos
xlat
dec
sbb
out
test
cmp
lcall
mov
xor
orl
in
pop
lahf
shr
sub
ret
test
mov
repnz
xor
xchg
xchg
mov
sub
jne
leave
jns
xchg
nop
call
sbb
push
mov
mov
scas
add
mov
jmp
dec
jne
jb
dec
scas
mov
inc
xchg
pop
or
sub
inc
andb
lret
cmp
popf
adc
jne
jmp
scas
add
nop
sbb
in
xor
jmp
sti
mov
lcall
mov
jno
shlb
add
lods
or
inc
sbb
mov
fisubl
in
mov
in
jns
push
jge
arpl
fstps
adc
dec
ds
adc
cmp
push
fisttpl
outsl
xor
sbb
jo
mov
in
hlt
sbb
jno
leave
and
pop
data16
sbb
ror
pop
mov
rcrl
sub
mov
push
sti
fbstp
stos
aad
jb
jl
adc
out
hlt
pop
cltd
jmp
mov
and
inc
cmpsb
sub
not
jae
sahf
insl
jb
cltd
sub
inc
data16
push
aam
sti
adcb
in
dec
int
mov
je
push
add
jecxz
jge
inc
cmp
and
sbb
sub
clc
fsubs
aaa
push
hlt
shl
scas
shlb
jo
inc
add
xchg
std
aas
jle
mov
outsl
jle
xchg
mov
xchg
push
std
add
xchg
test
jecxz
and
mov
add
mov
mov
sahf
pushf
cmp
das
push
sub
jo
jecxz
jp
push
push
or
sbbb
xchg
mov
xor
fwait
mov
in
pop
test
inc
mov
cs
jae
subb
insl
mov
sbb
mov
movsb
dec
lret
sub
lahf
push
jnp
xchg
fsts
addr16
mov
lcall
mov
jb
pop
or
ss
push
lret
imulb
cs
cmp
cmp
xchg
hlt
rcll
xchg
push
add
lcall
notb
shlb
js
inc
repz
cli
mull
loope
outsb
ficomps
and
dec
ljmp
aad
roll
cmc
iret
add
mov
mov
mov
int3
add
dec
or
pop
cli
loope
lds
lods
mov
mov
subb
or
add
mov
aas
sbb
dec
or
add
jl
out
jbe
in
out
pop
add
rclb
inc
dec
mov
pop
mov
dec
sub
in
pop
out
filds
or
repz
cmp
mov
dec
jne
sbb
in
mov
lret
add
xchg
sub
addb
clc
ds
setp
gs
xor
lods
push
stc
xchg
mov
cmp
push
int
push
inc
mov
lret
enter
xchg
dec
roll
into
fstpt
dec
aam
enter
jns
add
imul
inc
out
iret
test
mov
xor
cmc
imul
lahf
call
stos
mov
shrl
pop
scas
leave
mov
aaa
and
out
jbe
fistps
pop
movsl
sahf
jno
adc
mull
in
push
sub
lahf
add
clc
jno
dec
fwait
inc
arpl
add
int
aam
jmp
or
ja
add
inc
or
inc
mov
sbb
loope
or
sub
je
std
scas
dec
iret
call
mov
loop
ss
sub
mov
mov
aas
lcall
lahf
es
lods
pop
dec
pop
hlt
shrb
and
mov
cwtl
in
dec
sbb
and
sbb
cmp
imul
mov
cli
js
mov
sub
aad
aad
mov
add
loop
cmpsb
sahf
xor
adc
lods
nop
push
pop
sbb
pop
testl
std
xchg
sbb
lock
addr16
js
ficompl
mov
in
mov
pop
dec
cmc
pop
fwait
mov
nop
rcl
cs
fisubs
enter
or
mov
sub
ss
lret
jp
pop
jae
mov
frstor
cmp
test
lods
fwait
jecxz
inc
mov
movswl
inc
addb
xor
dec
adc
push
jns
xor
pushf
inc
jge
das
stc
jl
je
push
adc
cltd
pop
mov
enter
adc
mov
mov
enter
loop
sarb
cmpsb
cmp
inc
push
jmp
pop
push
sbb
sarl
call
sub
scas
mov
orl
iret
xor
pop
ja
cs
out
and
sub
inc
sar
ficoml
mov
mov
mov
aad
push
int3
loopne
movsl
jne
js
and
mov
aam
mov
aas
add
in
jne
mov
fwait
jnp
mov
stc
add
repz
fwait
and
aam
rcrb
movsb
out
xchg
outsb
rcrl
xchg
scas
movsb
pop
rclb
je
cltd
mov
pop
push
adc
ret
iret
push
and
fcmovb
mov
aad
fcoml
mov
pop
negb
leave
div
ss
jne
cmp
jb
clc
punpckldq
mov
mov
scas
mov
add
push
and
fdivr
mov
push
xchg
scas
add
jno
and
rcrb
pop
pushf
lock
shr
push
pminub
mov
clc
mov
mov
or
push
push
fstps
mov
rcr
rcrb
outsb
jmp
xchg
pop
pop
test
jp
mov
or
in
xlat
les
xor
jp
lods
sbb
inc
jne
xchg
jle
es
mov
sub
xchg
and
or
test
add
push
cli
in
inc
xchg
lods
mov
fistpll
xchg
push
cmp
adc
mov
jo
mov
ret
pop
movsl
gs
cld
bound
fcomip
lods
push
pop
mov
into
insb
push
and
pop
push
fcompl
ss
jmp
add
mov
sub
mov
mov
adcl
cmovge
mov
xor
mov
add
inc
rolb
dec
lea
daa
and
mov
xchg
xor
bound
pop
icebp
or
mov
add
nop
out
add
cwtl
jae
push
xor
popf
jl
mov
decl
add
decl
xchg
in
add
mov
stc
inc
repnz
call
inc
lahf
jnp
xorl
nop
cwtl
mov
mov
pop
dec
pushf
cwtl
enter
xlat
test
jnp
enter
add
loopne
sbb
fucomi
mov
mov
pop
push
es
in
sti
repnz
subb
sub
mov
sbb
loop
je
jge
mov
pop
repz
xchg
jecxz
sti
lods
mov
adc
cli
pop
sub
repz
movsb
sahf
pop
addr16
es
test
leave
mov
repz
int
xchg
pop
or
in
pop
jg
xor
push
inc
scas
cmp
push
sub
sub
bound
sub
hlt
test
sbbl
ss
shrl
cli
cmpl
lea
jge
pop
paddd
lods
cmp
aam
data16
push
mov
es
jb
shrb
adc
adc
lahf
cmpsb
pop
scas
aad
mov
xor
jns
jne
and
out
cmc
xor
cmp
mov
add
rorl
mov
mov
lret
or
lcall
add
xor
scas
mov
jle
fisubl
les
loopne
and
sahf
lea
adc
adc
scas
adc
rcr
inc
mov
xchg
insb
mov
loopne
mov
jge
in
push
mov
pop
fbstp
pop
arpl
int3
dec
sub
mov
cs
mov
push
inc
xchg
or
ds
jns
push
mov
push
jp
cmp
jecxz
mov
dec
sbb
popa
cld
pop
push
addb
cltd
dec
daa
mov
mov
mov
or
mov
lret
loopne
out
test
loope
fildll
inc
and
dec
or
sbb
fstp
lahf
pop
pop
and
adc
popf
adc
aad
and
add
aam
stos
xchg
out
andps
loopne
dec
std
pop
jp
pop
lods
jmp
aaa
push
sbb
repz
out
sahf
mov
test
scas
or
sbb
cs
cmp
ja
mov
ret
or
clc
push
sbb
and
jl
sub
or
mov
rorb
int3
and
lcallw
jg
enter
mov
jge
lcall
in
imul
icebp
out
xor
inc
ror
mov
or
mov
jp
pop
negb
mov
pushf
push
pop
das
xlat
mov
repz
mov
es
cli
inc
iret
lods
add
lret
jno
xor
enter
aam
aam
and
inc
push
jns
sbb
cwtl
andb
lcall
and
sti
popf
push
pushf
sub
fsubs
fldt
inc
iret
iret
add
lock
cmpsl
push
mov
movb
hlt
push
add
push
pop
sub
or
mov
xchg
jns
sbbb
lods
xchg
xchg
testb
out
cs
aad
sub
loop
int3
inc
or
call
scas
mov
mov
fisubs
adc
push
push
xchg
dec
shlb
out
pop
stos
ret
sarb
popl
mov
arpl
pop
out
popf
and
enter
sahf
adc
in
popa
inc
aas
test
or
aam
arpl
insb
xor
daa
push
jl
icebp
dec
mov
push
push
in
mov
lods
and
pop
arpl
repnz
ss
xor
xchg
shll
cld
pop
sbb
testb
dec
cmpsb
mov
enter
or
mov
pop
xlat
pop
js
enter
jbe
mov
sbb
jecxz
push
rcl
sub
in
xchg
sub
cmc
test
mov
movsb
neg
mov
sbb
push
xchg
out
sbb
icebp
pop
jg
sub
dec
inc
out
sub
inc
and
mov
lea
adc
xorb
pop
inc
cld
sub
mov
outsb
popa
add
pop
addb
flds
frstor
pop
rcll
push
pop
add
cmp
sbb
mov
pop
mov
dec
sub
xchg
js
jae
push
movsl
ror
push
lcall
or
mov
pop
add
imull
into
xlat
clc
xor
loope
hlt
fcompl
jge
orb
lret
ja
pop
lcall
dec
mov
xor
xor
bound
fimull
fsubs
test
adc
jp
rcrl
out
rclb
out
clc
cmp
fbld
xor
xor
bound
in
fildll
adc
and
cmp
add
inc
add
add
andl
sub
mov
popf
mov
sub
dec
add
es
call
add
inc
arpl
loop
jae
push
and
push
les
jmp
xchg
cli
popf
arpl
dec
xchg
insb
dec
into
imul
iret
cmp
mov
push
insl
jns
cmp
or
test
insl
cmp
out
jle
sub
div
xchg
lock
addl
and
loop
push
xchg
bound
cld
or
jns
add
fiaddl
xchg
xchg
sub
mov
test
push
clc
clc
sub
pusha
sti
sub
dec
xchg
and
jae
cmpsb
call
fcmovnb
cmp
cwtl
sbb
dec
jno
lret
pop
xor
mov
cmpl
cltd
or
push
push
out
push
aam
aaa
mov
cs
pop
pushf
ret
cmp
and
test
adc
lret
or
stos
or
push
dec
jo
inc
fisubl
push
add
cmp
jl
dec
repz
iret
and
insl
cmp
push
cmp
jg
mov
lahf
dec
push
adc
lret
add
dec
adc
dec
xchg
mov
inc
movsb
push
fisubrl
mov
pop
repnz
jno
arpl
sbb
cs
or
and
adc
lret
lea
sahf
sbb
negl
gs
enter
popf
loopne
scas
sarl
dec
jno
jae
xor
mov
fistl
push
jo
jnp
mov
loopne
mov
pop
in
nop
test
and
movsl
outsb
sarb
dec
call
repz
cmp
jbe
push
xor
mov
xor
xor
or
cltd
clc
inc
imul
frstor
add
inc
jno
push
xor
inc
add
push
xabort
imul
jmp
cmp
xlat
test
mov
sbb
in
call
cmpsb
ja
daa
aaa
dec
push
loope
sub
out
test
mov
stos
lcall
pop
orb
xchg
xor
add
mov
push
pop
test
icebp
or
test
mov
ret
mov
dec
lds
fdivrs
adc
push
push
sbb
xor
std
mov
nop
mov
popf
jnp
cmpsl
fdivrs
sub
push
in
bound
xchg
xchg
ljmp
add
sub
xchg
cmpsb
int3
and
sub
mov
int
lods
sub
pusha
push
ret
cmc
push
mov
sub
jecxz
andb
mov
cmp
pop
cmc
mov
clc
mov
adc
or
scas
push
repnz
lods
leave
add
dec
out
outsb
and
fld
mov
sbbb
push
outsl
add
fiaddl
mov
rorl
adc
mov
stos
gs
add
scas
out
or
add
jecxz
xor
sti
lods
scas
popa
pusha
popa
out
lods
movsb
jae
outsb
outsb
adc
enter
lea
or
sub
jp
movsl
test
fstps
mov
mov
mov
xor
aas
mov
pop
movsl
jge
mov
inc
ficoms
or
adc
es
in
mov
in
pop
nop
mov
adc
xor
test
insl
pop
mov
loope
sub
das
sahf
mov
xchg
lret
mov
push
mov
adc
and
std
mov
fs
and
xor
mov
xchg
xor
popf
push
push
ljmp
jns
pop
fwait
pop
imul
sbbb
or
les
daa
push
jns
lods
cmp
fs
cwtl
jae
mov
xorl
mov
pusha
lret
mov
and
lea
dec
in
push
ja
or
xor
xchg
cltd
iret
inc
lea
fs
roll
inc
inc
ljmp
ja
shll
inc
jns
in
dec
dec
mov
movsl
test
nop
cwtl
sbb
int3
out
test
insb
pop
jmp
aaa
mov
add
stos
mov
lret
xchg
mov
xlat
jg
and
fsubs
cli
adc
mov
adcb
popf
push
stos
pop
das
insb
cmpsb
dec
aaa
jno
fcomps
sub
in
dec
push
lret
mov
add
push
call
push
ficoms
enter
add
pop
pusha
pop
mov
add
pop
adc
and
or
pushl
sti
mov
out
mov
stos
into
jmp
shll
mov
sahf
dec
mov
jmp
adc
pusha
mov
insb
inc
in
out
jmp
jg
cmp
cmp
mov
mov
mov
jb
cmpb
aad
shll
ljmp
rcrb
mov
clc
jbe
adc
loop
xchg
aad
and
sub
jbe
add
mov
rcr
fdivr
popf
mov
mov
mov
jmp
inc
les
push
push
lods
pop
test
sbb
pop
and
xchg
das
mov
or
sbb
pop
testb
je
mov
or
xchg
inc
push
mov
or
jae,pt
push
jae
inc
sbb
lret
subl
stos
jae
sub
gs
cmc
test
xchg
xchg
mov
xor
adc
push
xorl
inc
adc
leave
mov
xchg
pop
enter
inc
pop
mov
pop
adc
adc
ljmp
aad
out
faddl
mov
sub
incl
sub
lcall
adc
cmp
dec
or
lods
int
pop
out
rol
and
jecxz
push
out
jb
adc
addl
jns
jecxz
out
jns,pt
ja
lods
daa
lea
leave
push
xchg
inc
imul
shl
loopne
mov
sub
fs
andb
cwtl
sub
loopne
cmp
sti
push
jl
faddp
pop
fldl
push
inc
fs
push
arpl
xor
inc
mov
aaa
sbb
push
aas
test
mov
and
add
mov
imul
lock
adc
js
or
sbb
pop
or
data16
cld
pop
test
sub
nop
decl
sbb
pop
pop
stos
jb
ljmp
or
sbb
aam
sti
notb
les
hlt
add
sbb
pop
push
js
fisttpll
sub
adc
fadds
pushf
icebp
adc
jl
vrcpss
mov
xchg
pop
sbb
pusha
add
or
inc
mov
mov
test
test
mov
lods
in
imull
andb
rcrb
bound
adc
shrl
flds
daa
push
pop
mov
push
push
cmp
aas
int
pop
add
push
inc
cli
lea
push
mov
fldt
lds
testl
or
aas
ret
mov
aaa
xor
data16
sub
dec
test
mov
xchg
outsl
pop
stos
push
insb
test
xchg
gs
pop
fwait
daa
mov
in
leave
outsb
mov
hlt
and
in
dec
xchg
jp
out
daa
aad
jge
leave
negb
out
dec
loopne
lods
jp
orb
mov
mov
xchg
pop
and
inc
cmpsl
xor
sub
cwtl
pop
out
cli
roll
mov
mov
jge
mov
lahf
dec
sbb
xor
add
lea
push
xchg
add
or
mov
lret
cmp
push
cmp
clc
dec
fiaddl
fcomp
jne
add
shrb
ret
xchg
cmp
jae
or
ljmp
mov
imul
cmc
mov
lods
lret
sub
outsb
andb
inc
hlt
inc
scas
add
mov
les
pop
mov
aad
sub
or
adc
cmc
sbb
add
mov
insb
sbb
scas
inc
push
jmp
cmp
test
testl
push
push
xchg
fdivs
or
jae
jge
ret
pop
adc
cmp
jns
sub
bound
mov
cs
mov
xor
pop
jo
rcl
mov
out
push
mov
cltd
jne
jo
pop
dec
or
dec
gs
push
mov
lret
cmp
jmp
lea
dec
jmp
or
pop
shlb
bound
jle
fndisi(8087
mov
sub
xchg
sub
shrl
xor
js
fcomip
jae
pop
push
repz
fwait
or
pop
icebp
popa
jb
pop
outsl
jle
cwtl
and
or
sahf
fidivs
or
xor
mov
ficoml
test
addr16
xchg
rclb
jns
ja
fcoml
sub
adcb
mov
xor
repz
mov
lahf
inc
rorl
call
dec
mov
in
pop
and
add
cmp
js
sub
jge
cmpsb
in
das
stos
dec
and
lods
leave
push
stc
inc
add
cmp
test
xchg
lea
mov
cmpsb
mov
xor
pop
decb
hlt
mov
arpl
mov
mov
xor
and
inc
inc
sub
or
movsl
rcrl
test
inc
ds
gs
inc
push
shll
push
sub
aam
test
out
xchg
and
movl
in
or
ret
xor
test
cld
mov
add
sbb
push
fisubl
mov
das
popf
les
mov
ja
inc
sbb
fsts
out
leave
or
xchg
push
lock
xchg
jne
pop
andl
popa
mov
dec
add
mov
jae
mov
mov
xchg
addr16
xchg
or
nop
nop
insl
insb
mov
sbb
mov
mov
jae
ror
mov
loop
mov
je
push
data16
mov
in
mov
mov
pop
pop
or
jne,pn
mov
or
mov
scas
push
mov
push
repz
jmp
and
aad
cmp
sbb
cmp
or
imul
adc
mov
bound
in
stos
mov
in
sub
inc
mov
pop
add
sbb
xchg
jmp
ret
sub
xor
xor
or
xchg
scas
mov
loope
push
lea
xor
push
sub
xchg
loopne
leave
sbb
in
mov
xchg
sbb
repz
mov
cmc
roll
stos
inc
inc
lcall
dec
xor
add
jae
inc
xchg
or
and
test
leave
push
xchg
stos
mov
push
fwait
ret
movsl
and
adc
lds
add
sub
or
dec
pusha
stos
icebp
mov
icebp
sbb
push
jno
inc
xchg
xor
pop
nop
mov
aam
arpl
lahf
sarl
shrb
iret
push
jbe
inc
outsb
leave
sbbb
dec
test
lock
cwtl
mov
mov
jge
in
sarl
adc
push
je
cmpsl
pop
push
mov
add
lock
mov
gs
cmpsb
push
jae
call
stos
add
pop
js
nop
mov
test
fwait
int3
xor
mov
es
cmp
jp
xchg
int
leave
mov
xchg
das
sbb
xor
push
xor
mov
sahf
jle
and
es
jp
pop
out
dec
nop
add
cmpsl
shl
dec
mov
mov
arpl
dec
pop
xor
gs
adc
mov
inc
out
sti
sbb
lods
test
or
outsl
mov
xchg
mov
shll
jmp
repnz
divb
or
cld
push
pop
mov
inc
inc
adc
int
lds
xchg
movhps
ss
call
sbb
sbb
jge
dec
pop
push
sbb
ficoms
aam
out
mov
loop
insl
mov
cs
adc
mov
push
fildll
das
xor
push
jmp
pushl
rolb
ficoms
push
xchg
mov
jge
jl
call
imul
add
sbb
andb
xor
aam
sbb
sub
sbb
mov
xchg
pop
jecxz
rcrl
out
or
fimuls
cld
mov
sbb
icebp
sub
dec
xor
dec
mov
fbstp
orl
ja
outsb
jno
jmp
call
and
sbb
xchg
adc
mov
xorb
fldl
and
dec
fcoml
sub
shlb
jecxz
lds
cmpsl
xchg
lods
mov
popa
pop
iret
imul
add
sbb
orb
xor
dec
sbb
jmp
add
pop
in
pop
pop
stos
pop
xlat
pop
lods
lret
popl
cld
js
ror
mov
shlb
divps
test
jl
xchg
js
loopne
mov
jp
and
and
scas
inc
aad
inc
jl
add
xchg
cmp
or
jnp
ja
int
xchg
in
mov
adc
xchg
lods
add
mov
and
sbb
mov
loopne
sub
dec
aam
push
dec
xchg
les
inc
addr16
add
testb
cmc
repz
sub
jo
bound
or
vprotb
call
shl
add
lea
add
test
scas
stos
cmp
lret
js
ret
scas
cli
xor
lcall
cmp
cmpsl
shll
into
mov
sbb
jb
hlt
fs
push
mov
sbb
iret
jbe
pop
or
repnz
jno
push
add
mov
or
in
nop
pop
in
fdivr
inc
xor
jmp
ja
mov
jg
lock
and
mov
xor
aad
xor
dec
pop
push
xor
shl
adc
pop
jb
xchg
mov
pop
test
mov
mov
and
les
mov
xchg
xchg
mov
aam
pop
pusha
loopne
insl
into
dec
scas
or
aas
or
mov
mov
dec
or
push
das
fimull
mov
int
push
mov
fmuls
add
je
mov
stc
jmp
mov
push
arpl
cmp
out
xchg
sub
aam
test
push
sbb
mov
adc
cmp
jno
add
fwait
push
lds
sbb
in
orb
out
fstl
cmp
mov
mov
and
in
xlat
jo
in
mov
pop
xor
push
hlt
ljmp
sbb
ss
out
xchg
mov
mov
or
addl
mov
sahf
cmp
pusha
mov
dec
jne
pushf
push
xchg
sub
push
mov
fnstsw
xchg
or
ja
jmp
jne
xrelease
pop
mov
test
les
inc
icebp
dec
jg
mov
dec
out
sarl
inc
and
fdivs
aam
mov
sub
lcall
addr16
mov
idivl
sub
sbbb
mov
bound
imul
imul
or
jle
adc
add
add
ret
jns
inc
mov
xchg
dec
in
sub
mov
pop
lret
adc
mov
sbb
jbe
ja
addw
push
inc
in
cltd
mov
not
mov
push
push
loop
inc
sbb
and
stos
sbb
cld
or
or
inc
pushf
int3
sti
cwtl
adcb
sub
push
ds
or
pop
cli
inc
inc
mov
in
mov
add
ret
inc
sbb
les
dec
cmp
lcall
fld
add
or
cmpsb
fcoms
jge
inc
cmc
jne
mov
xchg
push
pop
cltd
push
mov
mov
dec
inc
xchg
cmp
or
jo
lahf
stos
push
push
push
pusha
add
cmp
lret
test
add
rcll
jae
int
inc
jle
cmc
ja
and
mov
fadds
push
pusha
ds
and
iret
xor
movsb
test
cmp
repnz
lret
xor
adc
shll
pop
jo
ljmp
xlat
push
out
fs
sbb
add
mov
shll
std
js
inc
jne
mov
sahf
fisubl
sbb
gs
mov
cld
jmp
fcom
movl
test
out
mov
push
mov
adc
loop
push
cmpl
mov
in
test
jno
sahf
fildl
push
in
pop
dec
mov
mov
xchg
or
or
ljmp
fnstenv
mov
mov
pop
and
and
repnz
push
js
jmp
dec
nop
cltd
jmp
jbe
fwait
and
lock
cmp
aad
mov
cld
test
fsubs
sarl
and
mov
xchg
sub
lcall
syscall
sub
mov
xchg
cld
cmc
push
je
lret
inc
push
cmp
jno
andb
inc
xor
cwtl
fsubl
out
cmp
addr16
pushf
popw
outsb
mov
mov
jbe
jecxz
jns
adc
neg
sbb
xchg
aas
add
sbb
xchg
std
sbb
sbb
dec
cmp
mov
insb
xchg
push
ret
test
and
pop
daa
in
popl
sti
adc
int3
add
fmul
cmpsb
dec
pushf
mov
xor
cmp
sub
insl
xchg
test
mov
and
dec
dec
fwait
pop
and
lret
mov
stos
inc
out
mov
repnz
xlat
push
out
in
mov
mov
inc
jno
pusha
xor
or
into
mov
sbb
mov
arpl
test
pop
jge
sbb
ss
jns
mov
mov
cld
out
leave
dec
sbb
jnp
mov
fs
lods
es
pop
mov
mov
xchg
pop
outsl
mov
int3
push
fs
lret
push
insb
dec
addb
imul
adc
add
stos
mov
dec
xchg
dec
lock
jae
lds
or
pop
jb
push
sub
sbb
dec
insb
inc
sbb
inc
jmp
jge
icebp
dec
sub
xchg
jae
xor
cmp
xlat
imul
jmp
test
lods
jb
adc
movsb
adc
pop
rol
xor
lea
cmp
pusha
mov
sbb
pop
jb
inc
aam
cmp
fwait
fs
cltd
inc
iret
stc
and
popa
mov
fcoms
mov
mov
adc
test
in
arpl
ret
mov
inc
mov
push
mov
call
sbb
lea
xchg
scas
jns
daa
lds
xor
mov
xchg
int
jbe
jle
sbb
mov
adc
xor
sbb
nopl
adc
test
jo
mov
mov
imul
aaa
xor
cmp
sbb
loope
jle
jge
sarl
ret
add
movsb
pop
dec
or
jmp
fcomip
inc
dec
fcmovu
inc
out
pop
pop
aam
add
inc
call
fldenv
jne
fiaddl
cld
inc
mov
jle
mov
ja
xor
movsb
sub
mov
scas
std
push
sbb
push
leave
cmp
aaa
hlt
call
mov
cli
xor
shlb
xorb
sti
or
fbstp
or
xchg
fwait
xor
pop
mov
das
jl
push
scas
scas
sbb
test
shlb
cmp
scas
xchg
sub
push
stos
rorl
jne
jecxz
jnp
scas
mov
mov
xor
setno
insb
jns
aad
lds
jbe
into
dec
jns
out
mov
sti
sbb
push
loop
arpl
push
insb
xchg
cli
call
divl
sbb
lods
inc
imul
lock
lods
cmp
xchg
pop
fildll
xchg
scas
xchg
and
incb
gs
add
movsb
jae
jmp
xor
loope
outsl
dec
or
das
rcl
xchg
xor
and
mov
mov
jge
test
hlt
fwait
sbb
movsb
stc
mov
test
xlat
out
xor
xor
rdtsc
push
jno
lock
ds
bound
lahf
cmp
jnp
cmp
xchg
ja
dec
pop
add
pop
xor
push
xchg
xchg
jmp
or
fisttpll
lds
jmp
jo
out
movsb
sbb
push
xchg
sbbl
and
pop
lea
ror
in
ljmp
cmp
lret
das
clc
sbb
pop
push
jo
mov
ljmp
or
movsb
fs
insl
ja
loop
call
sbb
shl
lahf
dec
in
cs
mov
cmp
sti
pushf
sahf
test
loope
mov
lods
test
cmp
pop
pop
jmp
sbb
sub
or
lret
jno
mov
pop
pop
mov
sti
dec
mov
rolb
mov
cs
das
cmp
lea
pop
mov
int3
call
fcoml
push
frndint
rorl
dec
sub
lods
adc
dec
mov
inc
sub
xor
lcall
cmp
loope
aas
insb
mov
mov
clc
movsl
insl
or
fstpl
hlt
sbb
mov
add
sbb
push
insb
repz
arpl
ljmp
sar
shrl
mov
fsub
fisubl
adc
inc
and
pop
loope
imul
out
adc
or
lock
sbb
rolb
and
mov
inc
jmp
in
test
sub
dec
mov
and
inc
fisubrs
xchg
mov
icebp
cli
push
clc
dec
fldt
notl
mov
stc
mov
xor
in
cmp
adc
cmp
test
call
fucomip
xor
aad
fists
pusha
mov
insl
gs
je
daa
push
ret
mov
pop
popf
add
popf
lods
ret
xchg
push
mov
je
arpl
gs
xchg
push
push
cmp
out
pop
les
fcmovb
adc
jne
mov
cli
scas
inc
inc
pop
mov
hlt
add
jge
ja
std
clc
and
sbb
mov
sub
pop
movsb
or
jb
test
push
addr16
add
adcl
not
cmp
shrb
jp
insb
ret
push
xchg
sbb
dec
mov
xchg
mov
mov
das
out
cmc
leave
pushf
das
arpl
pop
jno
into
dec
sbb
jno
inc
and
pop
inc
insl
sbb
mov
sbb
jp
stos
sbb
es
push
inc
jl
ret
mov
cmp
loope
test
lahf
jns
mov
fcmovb
pop
sbb
movsb
aaa
loop
and
pop
inc
sbb
lahf
jp
fisttps
add
dec
sbb
jnp
movsb
xchg
jp
adc
and
inc
cmp
out
call
dec
pusha
addw
outsb
addr16
pop
xchg
popf
dec
popf
pop
sti
xchg
test
or
push
or
sub
jno
out
sbb
add
adc
xchg
outsl
pop
lock
stos
pop
fdivr
mov
jnp
add
xchg
ja
nop
lahf
inc
in
sti
push
movsl
rorl
pop
jnp
mov
ljmp
cld
dec
mov
push
inc
jb
push
std
enter
test
jbe
mov
pop
pushw
pop
ficoms
inc
jl
xchg
pop
sbb
imul
out
add
sbb
mov
push
outsb
inc
icebp
push
adc
mov
pop
int3
and
bound
pusha
fisubrs
jb
lcall
cli
adc
ds
jecxz
aam
movl
rcll
dec
jmp
push
adc
or
jg
in
aad
les
push
push
or
loope
gs
push
addr16
enter
fiadds
std
int3
andl
jle
leave
shrb
rcrl
xor
inc
lods
adc
add
jnp
push
rcrl
jecxz
icebp
inc
std
push
push
je
data16
dec
lret
in
jp
fcompl
ds
xor
push
pusha
sti
rorb
in
adcb
adc
inc
decl
aaa
xor
xchg
cmp
push
insb
fsts
xchg
out
call
xor
loop
bound
aad
adc
add
jno
xlat
mov
scas
push
mov
iret
scas
stos
xchg
jo,pn
sbb
std
test
in
gs
jmp
pop
mov
ss
and
add
or
and
movsb
jnp
sbb
ffreep
imul
sbb
mov
aaa
jmp
jnp
mov
div
lret
inc
pop
imul
xchg
cld
enter
sub
mov
ret
adc
fisubs
popf
jmp
std
sahf
pop
adc
pop
in
and
jge
jae
and
xchg
jne
jbe
pop
or
mov
aaa
pop
mov
sub
xor
push
mull
mov
lds
fs
push
mov
sub
movsb
stos
jae
pop
mov
in
xchg
mov
mov
or
sbb
mov
add
mov
push
sub
lock
mov
cmpsb
or
in
icebp
fucomip
std
movsb
xchg
add
data16
ret
icebp
repnz
push
jnp
sub
add
or
adc
daa
xor
addr16
jne
fcom
nop
popa
repnz
int
mov
pop
cmp
mov
lcall
sub
insb
pop
sbb
sbb
push
fsubl
ret
mov
sbb
mov
fstl
or
sub
sub
adc
scas
mov
ja
jmp
sub
sbb
popf
mov
sub
insb
mov
push
je
xchg
mov
aaa
jle
ss
fwait
outsb
push
inc
into
subb
enter
add
cmp
jmp
pop
dec
es
movsl
js
in
jle
jmp
into
dec
push
xor
push
sahf
enter
push
or
dec
orl
insb
pushf
aam
mov
sub
testl
pop
ljmp
jb
and
test
xor
adc
mov
int3
icebp
jge
test
cwtl
dec
and
and
cmpsb
and
inc
aaa
pop
scas
je
cmp
cmp
das
jbe
test
adc
addr16
lods
ss
mov
mov
pop
sbb
mov
ret
cmp
arpl
mov
sub
popa
insb
pusha
sbb
iret
push
das
outsl
into
inc
stos
inc
push
shll
stc
lcall
pop
mov
push
fsubl
sub
and
sahf
sahf
addr16
cs
in
pusha
mov
mov
lret
mov
stos
sub
cmp
jb
pushf
ljmp
cwtl
into
sbb
js
dec
push
mov
mov
stos
xor
fidivl
stos
sti
stc
mov
or
int
jle
loopne
mov
mov
xor
fildll
xchg
jb
enter
test
mov
js
clc
punpckhwd
aam
pop
movsb
out
cmpsb
loope
sti
fldenv
lds
pop
xchg
lds
sbb
popf
sub
inc
jae
fdivr
lcall
js
mov
or
ret
scas
push
adc
cmpb
stos
aad
test
ret
jecxz
mov
icebp
cs
and
stos
je
in
sbb
xor
pop
inc
sbb
jno
bound
sbb
lea
fisttpll
int
jge
mov
sahf
mov
inc
mov
xchg
and
cmp
clc
add
cli
loop
notb
jecxz
and
insl
pop
mov
leave
sub
mov
jnp
ljmp
dec
and
xor
rolb
mov
cmpsb
dec
xor
stos
sub
xor
add
xchg
jnp
push
addl
lock
imul
ret
scas
imul
jl
lock
push
cwtl
jne
stos
repz
rep
jmp
cs
mov
mov
lods
xor
add
dec
sbbl
mov
xor
inc
mov
dec
dec
ficomps
mov
push
std
cmp
inc
jns
lret
cmp
rep
cmc
ss
out
xor
sti
out
jecxz
dec
pushf
imul
lods
pop
in
rorl
push
cld
xor
pop
cmp
mov
repz
push
icebp
ds
or
add
cmp
and
mov
add
aaa
lret
mov
push
adc
loop
dec
mov
cmpsl
sbb
cmp
pop
hlt
sbb
out
jge
adc
cmc
add
dec
fcomp
lock
movsl
mov
push
mov
pushf
outsb
or
mov
jle
stos
mov
or
fistps
or
mov
xchg
out
mov
jmp
fwait
stc
pop
hlt
sbb
cmp
scas
test
xor
xchg
scas
cld
repnz
mov
pop
rolb
xor
aas
mov
fistpll
adc
sbb
test
lods
pop
mov
xlat
push
sbb
shl
neg
jle
and
pop
es
pop
pop
mov
test
ret
push
push
shll
mov
cli
leave
aaa
insb
mov
imul
inc
cmp
out
or
mov
push
jne
pusha
data16
iret
dec
cs
xor
jbe
arpl
jge
sbbb
loope
pop
out
cs
inc
cmp
inc
jnp
xchg
sbb
mov
push
in
adc
or
nop
aad
addb
shll
sbbl
insb
cs
leave
mov
out
neg
lret
lds
sub
pop
xchg
inc
pop
sbb
test
fwait
notb
adc
xor
push
mov
sub
out
dec
and
jo
mov
cld
sub
sub
jbe
xchg
test
push
ljmp
fsts
cmpsb
dec
rcrb
addr16
mov
mov
sbbl
or
mov
add
mov
and
sub
fists
aas
aam
dec
scas
sub
daa
dec
xor
insl
jns
js
test
inc
adc
int
pop
sahf
rcrl
fdivs
jae
cld
cld
or
clc
movsb
mov
fwait
outsl
lock
mov
adc
icebp
jp
inc
and
dec
loopne
xchg
gs
sub
adc
rorb
ljmp
mov
hlt
xor
xor
repz
vmread
inc
inc
imul
enter
dec
jl
inc
xchg
and
add
jge
ficompl
mov
subb
test
push
dec
mov
insb
add
cmp
jge
movsb
movsb
cmp
in
mov
mov
shlb
jl
push
popa
iret
scas
xor
add
mov
shlb
push
xor
sub
or
push
cmpsl
dec
mov
cmp
push
nop
mov
out
sbb
jne
jmp
mov
xchg
pop
xchg
add
scas
dec
or
das
mov
fdivl
test
mov
aas
mov
or
cmpsl
addr16
lcall
mov
nop
adc
dec
nop
pop
and
mov
push
aas
jo
popf
pop
xchg
pop
sub
int
mov
int
ffreep
loopne
roll
subb
fs
add
jmp
sub
mov
in
jae
shl
loop
pop
outsb
aad
jb
xchg
xor
dec
or
insl
jb
mov
in
test
movsl
sub
fwait
or
xor
sbb
sub
cli
lahf
xchg
push
sub
fs
andl
push
js
lahf
jae
cmp
arpl
pop
push
sub
mov
xchg
sub
adc
cmp
test
cmp
jmp
sub
movb
bound
push
test
jno
mov
add
ret
push
sbb
mov
mov
aam
or
bound
popf
cmp
insb
test
adc
push
addb
push
in
mov
push
jo
lahf
je
jno
mov
sbb
shl
add
int3
test
hlt
das
push
popa
and
mov
mov
mov
mov
xchg
fwait
push
inc
mov
aas
push
push
lret
push
inc
movl
dec
repnz
mov
xor
pop
mov
popa
xchg
inc
cmpsl
adc
cmc
xchg
sbb
icebp
inc
sub
xor
push
pop
mov
adc
les
adc
call
pop
xor
mov
xor
stc
arpl
mov
scas
clc
jp
sub
testl
mov
ret
lret
lahf
sub
push
jmp
shrl
add
call
mov
xor
mov
pushl
pop
enter
pop
pop
inc
push
sahf
icebp
push
pop
movsb
dec
adc
add
mov
add
in
mov
sahf
mov
cmpb
hlt
leave
or
xchg
out
aas
pushf
pusha
ror
outsb
xchg
dec
jecxz
dec
dec
lods
fimull
in
int3
sbb
add
mov
fwait
jmp
pop
fists
cmp
and
popa
imul
mov
insl
mov
imul
xor
sbb
aam
sbb
pushf
sbb
or
ret
leave
add
mov
jnp
jge
push
or
xor
pop
lret
xchg
int
cli
pop
mov
jl
jge
fdivs
sahf
fstl
or
sub
bnd
les
xchg
outsl
or
xor
pop
and
jecxz
cmp
aaa
gs
push
add
mov
sub
enter
jb
inc
adc
mov
iret
sti
andb
ds
sub
pop
fsts
jmp
mov
imul
loop
and
push
clc
inc
stos
adc
inc
pop
das
jg
add
nop
out
sub
xchg
das
sar
xor
inc
dec
in
rcr
addl
loope
inc
iret
adc
fwait
mov
jns
mov
sub
push
nop
push
jp
ja
inc
pop
jp
test
xchg
cmp
mov
pop
dec
push
inc
ret
aam
rcrl
ss
pop
push
jns
sub
dec
push
inc
div
push
mov
sbb
dec
push
add
sub
imul
mov
bound
push
lret
aaa
dec
out
sbb
adc
test
adc
and
das
mov
ret
popa
sub
mov
jecxz
cmc
sar
jns
mov
adc
mov
stos
mov
mov
scas
lea
pop
mov
sub
ds
mov
push
and
fwait
jb
test
test
stos
outsl
jb
lcall
sahf
das
aas
icebp
pop
loopne
insb
arpl
inc
cmp
insb
icebp
mov
js
test
sub
pop
cltd
cli
divl
imul
adc
test
jmp
into
addr16
add
jb
aas
ljmp
inc
cli
in
out
pop
in
clc
jae
pop
jge
out
inc
push
loope
dec
and
cmc
jmp
repz
cmp
movsb
xchg
rorl
xor
iret
mov
xchg
popf
or
adc
add
push
mov
sub
cmp
fs
outsl
adc
fisubl
hlt
mov
or
out
mov
jecxz
xchg
in
cli
adc
iret
xor
mov
mov
rol
aas
ret
or
shrb
xlat
inc
fwait
xchg
daa
clc
int3
jno
cld
test
push
xchg
lods
pop
xchg
movsb
leave
test
pop
or
add
mov
sub
mov
imulb
jg
outsb
cmp
sbb
ja
shll
test
jns
xchg
in
sarl
lock
xor
fdivrl
inc
mov
js
jnp
xor
push
pop
imul
aas
jmp
xor
enter
fists
out
and
pop
cmp
mov
jo
aad
pop
or
out
or
scas
shll
pop
push
or
jp
enter
insb
in
arpl
dec
sbb
into
clc
sub
or
cmp
test
out
lret
neg
pushf
imul
sub
adc
push
ljmp
rcrl
shrb
leave
push
mov
sub
imul
in
add
cmpsl
dec
xchg
sti
pop
cmp
jle
stos
jl
dec
lret
inc
push
fsubrs
push
insb
outsb
sbb
das
cld
ja
jne
mov
mov
sub
jae
sar
or
xor
xchg
insl
add
mov
push
cmp
add
loope
mov
inc
sub
adc
mov
leave
sti
sub
add
movsl
sub
lock
jnp
std
lods
mov
scas
ja
repnz
and
mov
outsl
cmp
sti
rorl
add
sub
mov
push
sub
sbb
lret
mov
or
fnstsw
and
mov
fcmove
and
lods
fsts
pop
push
sub
in
push
jg
fnstcw
jge
lahf
scas
push
pop
jmp
lds
mov
repz
test
scas
xchg
jp
and
daa
xor
cmpsl
add
lods
clc
lret
dec
fldcw
add
mov
pop
out
sbb
add
push
pop
push
enter
mov
jl
mov
movsl
ja
adc
push
scas
cmpsl
jle
mov
shlb
xchg
pop
lret
cmp
xchg
pop
nop
xchg
pop
jno
inc
outsl
push
sbb
sub
mov
out
mov
add
das
jg
cmp
scas
dec
mov
sahf
and
mov
les
dec
ja
jo
data16
add
vpshab
sub
xchg
adc
movsb
sbbb
loop
jg
pop
jbe
xorb
jns
adc
pusha
std
mov
outsl
jl
aaa
rcrb
fcomps
push
mov
iret
and
xchg
jecxz
cmp
shl
ja
iret
sbb
jecxz
out
or
mul
jl
add
lods
clc
sbb
sbb
cmpb
imul
cwtl
jno
out
add
dec
adc
icebp
iret
cmp
pop
stos
xorl
push
out
mov
roll
mov
inc
jbe
stos
cmp
dec
pop
add
add
mov
sti
aaa
call
gs
testl
push
gs
xor
or
iret
dec
mov
loopne
dec
inc
notb
sbb
adc
push
pop
jnp
mov
cmpsb
jl
icebp
repz
dec
ficoms
or
fimull
xchg
adc
sarb
pop
ss
jge
cmp
pop
jl
push
jno
add
xor
pop
jno
jo
inc
xor
sub
fxch
and
adc
adc
incb
jb
push
sbb
mov
into
lahf
jb
jmp
or
push
inc
fs
lods
push
imul
cwtl
and
pusha
sub
cmp
popf
jo
cmp
and
jnp
inc
jmp
ror
lcall
stos
pop
sbb
je
and
pop
aas
ss
push
in
cld
imul
popa
leave
ficoms
xchg
lret
add
jmp
bound
dec
out
lret
fsubs
mov
adc
mov
inc
fwait
sbb
and
dec
fisubrs
push
clc
mov
jne
lret
in
lds
inc
das
aam
push
test
pop
mov
sub
lcall
inc
nop
inc
adc
rorb
cmp
push
mov
push
jb
lods
dec
mov
mov
cmpsl
inc
dec
scas
mov
xchg
and
sahf
sub
or
out
hlt
and
and
dec
ffree
popf
inc
push
pop
adc
ret
cs
pop
mov
mov
lds
ja
fidivs
xchg
cltd
xchg
andb
call
add
sub
mov
and
into
xchg
dec
aas
dec
iret
ret
jmp
mov
cmp
icebp
adc
pop
andl
lahf
fadd
adc
inc
add
and
pop
mov
pushf
inc
inc
fnstcw
jl
adc
mov
add
mov
xor
fmuls
sub
int
and
push
or
push
mov
out
xchg
fld
in
xor
loope
and
sbb
add
xchg
push
pusha
loopne
sbb
xor
addb
test
in
dec
insb
aaa
popa
je
push
test
push
stc
incb
xor
sahf
dec
mov
pop
cli
stos
std
inc
andb
femms
divl
outsb
cli
mov
call
adc
xchg
sbb
jno
jo
jecxz
repnz
stos
cmc
mov
cmpsb
enter
pop
cmp
ja
rclb
mov
push
testb
orb
loop
pop
out
addr16
out
popa
inc
lret
add
pushf
cmc
inc
sub
jge
add
dec
stc
leave
xor
cmpsl
mov
je
inc
into
xlat
leave
sbbb
push
out
int3
shlb
mov
sbb
xchg
push
mov
and
int3
pop
jg
lcall
push
push
sbb
push
in
ret
arpl
outsb
das
neg
mov
in
adcb
pop
pop
mov
add
mov
btr
pop
xchg
xchg
loopne
out
jecxz
xchg
aad
mov
push
cmp
loope
pop
xchg
inc
lcall
xor
inc
mov
sahf
xlat
xor
or
sahf
fnstcw
test
or
add
loop
cmp
or
enter
push
test
adc
fsubp
mov
sub
xchg
xorb
push
cmpsl
arpl
fsub
call
add
dec
orb
scas
push
mov
xchg
adc
negb
in
popf
dec
ds
cmpsb
push
jp
fdivl
mov
dec
stos
out
rorb
insl
dec
xor
mov
cld
mov
gs
mov
push
xchg
cmpsb
mov
dec
je
xor
xor
xchg
movsb
dec
jno
xchg
or
mov
dec
mov
jg
pop
xor
movb
or
jp
xlat
dec
insb
jmp
popa
rcrl
xor
jmp
ds
int3
sbb
jno
std
filds
dec
dec
es
test
pop
orps
lods
leave
mov
std
inc
sbb
xorl
pushf
lea
in
jno
cli
lock
lock
jge
popa
jns
push
xor
sbb
xor
mov
cmp
call
nop
inc
pop
mov
dec
jl
add
xchg
pop
push
adc
xlat
add
subb
es
xor
and
lcall
int
sub
pop
fisubl
dec
outsl
pop
xchg
loopne
stos
mov
inc
sub
out
arpl
jmp
or
sub
push
adc
fdivs
push
or
mov
push
jns
aad
shlb
fucomp
dec
xlat
pop
and
leave
stos
hlt
test
sbb
xchg
hlt
xchg
inc
psllw
adc
loop
xor
addl
pop
jecxz
pop
dec
mov
mov
dec
insb
scas
or
sahf
call
notl
xor
in
xor
jmp
sbb
or
cmp
fimull
pop
lods
inc
mov
arpl
mov
out
outsl
es
in
jge
jecxz
cwtl
shlb
mov
mov
jne
and
push
sub
ret
jmp
pop
sub
in
repz
pop
push
idivb
dec
pop
mov
cli
jg
bound
dec
lods
adc
mov
cmp
mov
xchg
arpl
jno
dec
mov
cwtl
repnz
xor
xchg
testl
sub
mov
out
adc
jb
mov
pop
test
push
inc
mov
mov
jb
lret
xor
or
in
insb
push
cmpsl
cmp
int
cld
cmc
lret
sar
fiaddl
xchg
into
lock
repnz
cmp
and
sbbl
fs
mov
pushf
push
int
xor
in
mov
jp
dec
sub
dec
ss
pop
push
adc
adc
dec
cwtl
shl
cmpsl
ja
sbb
push
dec
mov
cmpsb
mov
dec
repnz
and
sbb
in
fldcw
mov
fisubs
xor
jb
cmp
or
adc
ror
dec
je
push
das
mov
fs
sub
data16
arpl
pop
cmc
lds
push
mov
cmp
jmp
add
sbb
mov
popa
cmp
jl
pop
scas
adc
pop
jle
test
clc
dec
int3
dec
loop
adc
and
je
mov
push
repz
loope
mov
and
daa
or
cmp
sub
jns
lds
or
sub
lret
mov
hlt
sbb
add
lods
cmp
in
inc
fs
sbb
adc
xchg
cwtl
mov
js
cmp
mov
xchg
sub
stc
add
jb
mov
pop
sub
mov
or
dec
sbb
mov
es
jg
int3
push
ljmp
mov
jmp
xor
shrl
fwait
mov
xchg
lahf
dec
ret
push
mov
cmp
add
int3
inc
and
lods
mov
or
mov
adc
aam
dec
jo
out
ja
xor
fisttps
mov
lods
mov
mov
movsb
mov
jle
or
xchg
add
mov
mov
sub
pushf
movsb
aad
jmp
test
lock
ss
and
les
test
test
adc
jne
cwtl
repnz
cltd
insb
leave
jae
adc
imul
cmpsb
gs
cltd
mov
push
sahf
mov
or
mov
push
adc
in
cltd
adc
ds
out
lock
xchg
xor
sub
push
cld
pop
out
jg
sbb
adc
ds
add
movb
xchg
mov
subb
xchg
fs
or
and
xchg
shll
negl
mov
mov
mov
xchg
xlat
add
pop
jmp
outsb
xchg
xorb
inc
sti
push
lods
dec
dec
addr16
cmp
fdiv
sub
jge
orb
cmp
fstpt
cmp
inc
jmp
cli
into
rorb
fstpl
hlt
loop
andl
int
jnp
fstps
dec
sub
inc
imul
ss
sbbl
sbb
mov
cmpsb
dec
test
jae
or
and
jmp
icebp
fisubl
int
push
pop
mulb
notl
cmp
jge
stos
lret
pop
jmp
out
ja
sar
rcr
sbb
push
mov
movsb
scas
or
add
mov
bound
aad
jle
pop
out
js
jmp
sti
pushw
mov
adc
fimuls
cs
sahf
xchg
out
mov
aas
cld
jb
rcrl
pop
testl
imul
dec
stc
pop
inc
daa
adc
xor
mov
cs
cmp
or
orl
jl
in
pop
imul
out
outsl
add
mov
xchg
mov
cwtl
xchg
add
push
pop
ljmp
mov
cli
out
mov
jmp
jno
and
cmp
and
xor
into
in
mov
mov
xor
xor
inc
and
hlt
test
mov
aad
jg
xor
out
mov
push
cs
jmp
out
xchg
mov
je
les
adc
cmpl
fiaddl
pop
add
push
push
aas
mov
adc
xor
cmp
mov
mov
out
aas
shlb
call
ds
inc
int
ljmp
dec
and
out
xchg
or
insb
mov
inc
ss
sti
jnp
mov
inc
xor
mov
push
and
xchg
mov
pop
jge
jecxz
iret
add
test
iret
push
out
ss
mov
aam
insb
jmp
push
js
repnz
loopne
bound
out
inc
cmpsb
nop
stos
into
nop
dec
pop
ret
jmp
mov
xchg
negb
dec
inc
sub
gs
cld
pop
pop
icebp
fdivs
sub
sbbb
test
cmpsb
das
adc
sub
leave
out
xchg
int
test
sbb
xchg
fldenv
mov
push
and
cmp
xor
jae
pusha
dec
popf
iret
or
outsl
add
aas
jp
cmp
push
jno
mov
movd
dec
xor
sub
pop
es
mov
pop
jp
cmp
insb
sub
lods
pop
mov
xor
jecxz
adc
loopne
ret
mov
fcoms
sti
push
mov
in
mov
cwtl
ret
xchg
fstps
mov
fs
inc
ds
sub
test
or
call
or
outsl
lock
call
cmp
jne
xor
sahf
insb
leave
movsb
mov
dec
fsubl
stos
xchg
sbbb
std
fwait
in
scas
adc
jbe
stos
or
fldcw
outsl
push
fldcw
rcl
sub
lahf
stc
pop
ds
dec
sub
push
mov
stos
ret
int3
jb
fisubrs
inc
push
js
stos
sub
push
outsb
ret
je
clc
outsb
xchg
insb
xor
push
ret
in
cmp
inc
add
sbb
bound
xor
sub
scas
mov
add
lahf
notb
add
mov
dec
test
orl
adc
dec
pop
xor
push
int3
cmp
add
push
arpl
gs
cltd
xchg
xor
in
outsl
ret
jmp
mov
shrb
repnz
inc
adc
lods
test
mov
pop
mov
inc
mov
xchg
dec
daa
mov
cmp
stos
adc
pop
sbb
mov
out
daa
lret
fisttpl
pop
jle
pushf
push
sub
xor
bound
dec
push
js
or
aam
movsb
enter
out
ret
icebp
xor
roll
iret
mov
jmp
sti
lcall
subl
adc
fs
rcrb
mov
testb
dec
aas
lods
inc
fbstp
fcmovbe
outsl
les
sbb
add
les
cmp
xchg
out
jge
dec
mov
or
xchg
pop
xchg
mov
mov
xchg
sub
decb
xchg
comiss
mov
sti
cltd
inc
insl
xchg
lret
push
inc
lea
push
test
sub
mov
es
inc
pusha
cmp
pusha
adc
pop
mov
sti
leave
add
dec
cmp
lods
inc
pop
lret
gs
mul
jl
inc
push
mov
jb
jb
pop
enter
sbb
jb
in
pusha
inc
in
notl
cld
cltd
in
scas
add
inc
outsb
mov
aaa
loop
int
dec
movsb
inc
inc
add
inc
lret
inc
cmp
jp
inc
cmp
adc
mov
mov
jbe
dec
sbb
and
int
dec
mov
or
xchg
scas
fimuls
or
div
add
test
jo
mov
xor
mov
xor
jle
aas
mov
rclb
movsb
adc
std
insl
lea
lea
imul
push
pop
aam
xor
sbb
rcrl
or
fnstsw
faddp
aas
jp
sub
add
pop
xchg
sub
pop
xchg
cmp
push
lret
out
ss
or
xchg
addl
xlat
adc
xlat
call
hlt
sub
cs
sahf
lods
jecxz
adc
divl
popa
mov
push
mov
jbe
xchg
push
mov
hlt
std
pusha
mov
and
rorl
insl
addb
sarb
pop
rcrb
cmp
lds
aas
inc
mov
into
in
loope
mov
pusha
pop
ja
insl
mov
pop
jecxz
or
sbb
push
shl
fwait
and
call
popf
ret
sbb
xchg
cmpsb
aaa
into
bound
mov
cmpsl
dec
push
jno
pop
mov
mov
sarb
pusha
aas
dec
rcr
inc
mov
in
mov
insb
push
mov
add
jge,pn
xor
and
aas
sub
clc
xchg
divl
daa
xor
or
sarl
push
sbb
cld
aas
push
lret
test
movsl
jmp
imulb
and
cmpsb
cmpsl
mov
and
sub
out
push
pop
mov
pop
mov
in
andl
inc
and
sbb
mov
mov
dec
xor
xchg
stos
int
gs
les
push
out
pop
sbb
jge
inc
inc
lahf
cmp
test
xor
jae
and
outsl
cmc
mov
push
mov
xchg
addl
jecxz
scas
jo
xor
pop
mov
ljmp
and
daa
push
sarl
fwait
push
mov
jge
in
jne
jle
cmp
jnp
pop
loopne
es
add
sub
fisubs
or
lods
cltd
mov
adc
mov
lds
clc
js
push
mov
pusha
loope
xchg
and
inc
adc
loop
cmp
push
or
repnz
fdivl
mov
and
and
test
xor
es
push
sbb
sti
fmuls
jp
mov
xor
mov
mov
ds
clc
jb
fstp
out
leave
outsl
movb
dec
xor
pop
outsl
outsb
sub
cmp
arpl
sbb
add
mov
or
push
mov
lods
shl
sub
nop
sbb
mov
testl
popf
sbb
pushf
dec
adc
lods
fwait
push
ret
nop
dec
lock
pop
dec
mov
cwtl
lret
mov
inc
pop
int
sbb
jl
sbb
mov
shlb
sbb
mov
jne
testb
ljmp
jae
lock
xchg
rcll
mov
ljmp
push
xor
mov
lret
cmp
ret
ficomps
dec
arpl
pop
adc
addb
andl
jmp
or
and
into
dec
cli
testb
popf
jnp
clc
loope
and
int
xchg
push
cmp
pusha
mov
xor
in
xchg
jb
in
push
scas
and
push
popf
lea
stos
and
sbb
lods
lcall
lret
movsl
inc
xor
jo
cwtl
pop
insb
mov
mov
jne
popf
mov
mov
jne
push
sub
iret
lret
shrl
gs
int
push
push
add
add
test
repz
lock
fwait
lods
out
fwait
insl
adc
rcrl
mov
shl
sarb
xchg
in
dec
jb
scas
adc
or
xorb
sti
push
pop
mov
pusha
or
jbe
scas
popf
fsubrp
sbb
sub
or
xchg
mov
push
fstpt
sub
fbld
or
jecxz
jmp
add
push
jnp
loopne
aaa
lret
pop
addr16
loope
cmp
add
popa
scas
jb
jg
mov
mov
cld
int
je
sahf
pop
test
xchg
and
int3
xchg
adc
in
jbe
pop
ljmp
cmpsl
mov
xor
xlat
pop
ljmp
pop
sub
add
push
cmpsl
push
orb
fcoml
sbb
mov
pop
mov
sti
xchg
test
add
xor
das
or
lock
scas
and
or
or
addr16
and
pop
ficompl
lods
cmpsl
cmp
mov
adc
cmpsb
callw
adc
mov
mov
shlb
cmp
popa
sbbl
push
cmpsl
jmp
and
sub
sbb
mov
shll
stc
or
xor
rcll
or
sbb
lret
cmp
xchg
js
jle
loope
fildl
or
sub
jg
xor
aad
mov
add
push
push
jle
stc
xchg
leave
sub
sarb
out
add
push
movsl
daa
aas
mov
mov
mov
call
inc
and
fmull
mov
jmp
sub
jmp
mov
stc
jge
loope
dec
lea
cld
outsb
out
testl
pop
jp
xchg
jge
adc
lahf
loop
in
add
xchg
xchg
aad
cmp
pop
fsubrs
les
js
or
popf
sub
xor
add
jne
dec
sahf
xchg
lods
cmp
dec
iret
lret
cwtl
sbb
and
jmp
jg
mov
inc
lods
cwtl
test
pop
pop
scas
inc
xchg
loope
and
xor
jle
xor
jge
iret
sbb
mov
cmp
mov
and
lock
outsb
movsb
push
xchg
loopne
das
push
push
jmp
int
jno
and
jbe
add
push
add
dec
adc
jl
cmp
xchg
pop
mov
inc
mov
sub
push
in
fisubs
add
jle
adcl
pop
add
pushf
jmp
xorl
mov
ds
imul
sub
aam
sbb
push
xchg
sbb
push
movsb
sub
ja
jae
sti
mov
int3
sub
in
mov
add
sti
test
xchg
aad
mov
or
stos
pop
andps
add
aad
cmp
out
sbb
ret
lret
dec
shr
iret
inc
lahf
xor
icebp
jg
in
lret
hlt
mov
out
mov
ret
pop
fisubl
push
ret
rorl
adc
bound
les
sub
adc
inc
roll
cmp
cmp
ficoms
push
test
jl
cmc
mov
mov
push
ss
cmc
or
shl
push
cltd
pop
mov
adc
xor
daa
test
outsb
sub
das
add
or
dec
or
test
adc
mov
jne
mov
ljmp
popf
test
dec
and
jbe
jecxz
flds
xor
dec
mov
mov
cmpsb
dec
popa
inc
pop
aam
pop
sub
cmp
mov
push
js
adc
sub
push
push
cmp
pop
inc
add
imulb
or
leave
bound
mov
insb
or
mov
adc
sub
sbb
fistpl
ss
pushf
mov
je
jb
sub
mov
add
or
add
ret
push
lds
or
les
inc
dec
movsl
imul
xor
aam
out
jecxz
push
inc
pushfw
cmp
pop
shlb
sub
inc
add
clc
stos
sbb
fs
jbe
inc
pop
adc
mov
mov
push
mov
lret
cmp
pop
test
or
in
dec
fnsave
mov
ss
xor
mov
xchg
ja
push
popa
in
push
sbb
int
cmp
push
cmc
pop
aam
loopne
shrl
icebp
fwait
shlb
shrb
pop
push
or
adc
sbb
inc
bound
lods
mov
push
fidivrl
adc
in
dec
mov
lret
dec
fisttpll
int
jle
lods
or
mov
aad
loop
jno
mov
xchg
pushf
adc
in
jl
rolb
xorb
push
rcl
loopne
je
xchg
add
out
mov
push
xchg
sbb
mov
subb
jno
stos
lods
push
scas
rorl
fmulp
jae
xchg
subl
in
and
or
in
or
jae
inc
iret
pop
sbb
movsb
shlb
fs
push
mov
jge
add
dec
mov
icebp
cmc
or
or
adc
sahf
cmp
xchg
fldt
add
stc
dec
lea
enter
adc
inc
sub
pusha
xchg
lock
sarb
mov
push
cmp
cltd
inc
out
mov
lds
stc
inc
sti
xchg
in
lret
pop
les
sbb
das
adc
push
pop
andb
add
sbb
daa
lods
jbe
shlb
add
sbb
push
or
push
and
xor
cmp
add
push
push
repz
sub
lret
cwtl
sub
iret
adc
xor
inc
arpl
push
in
fs
lds
cmpsl
push
add
bound
shlb
in
mov
fsubrl
enter
lock
enter
fcmove
pop
loope
idiv
push
push
pop
aas
jl
popf
push
frstor
dec
xor
shlb
jl
out
push
frstor
les
repnz
jmp
jno
or
dec
sub
aas
daa
sub
mov
in
xor
jl
sahf
dec
gs
inc
xor
mov
mov
ljmp
aad
js
xchg
pop
mov
mov
ljmp
pop
mov
in
dec
sarb
ds
pushw
xchg
cld
sbb
jp
fcmovbe
push
fs
dec
ljmp
mov
aam
and
fcompl
scas
sub
pop
mov
sar
add
lahf
fs
add
pop
sub
push
inc
js
and
xlat
pop
dec
jle
cltd
inc
sbb
mov
jns
cld
and
aam
add
js
mov
mov
inc
xor
fs
jl
push
jbe
icebp
dec
negb
lds
xor
mov
in
testb
mov
xchg
and
push
mov
out
mov
stc
mov
fcmovne
das
hlt
fiadds
push
imul
pushf
nop
popf
popf
stos
push
pushl
pop
jb
adc
insb
mov
mov
das
sub
into
mov
daa
movsl
ja
mov
pop
js
mov
xor
push
mov
and
pop
cld
stos
movsb
aad
hlt
jmp
sbb
xor
out
je
fsubs
divl
inc
push
add
push
insl
sbb
jl
jle
loopne
inc
popf
sbb
add
lcall
addb
stos
lods
cmp
xlat
loope
xor
mov
addb
jae
movl
or
and
sub
xlat
pop
insl
pop
mov
fcmovbe
dec
movsl
loopne
mov
add
fbstp
inc
sbb
pop
pop
inc
jp
inc
jns
ret
add
int
dec
je
cli
xchg
lock
lea
imul
push
push
mov
iret
sub
sub
imul
fadds
adc
mov
idivl
ret
sbb
xchg
jb
fbstp
sbb
not
or
mov
pop
mov
scas
nop
ret
fldt
add
insb
and
seto
push
in
int3
fisubrs
jmp
jl
sahf
js
jnp
outsb
insb
mov
jnp
arpl
les
jge
outsl
mov
xchg
dec
mov
in
or
rdtsc
sub
ret
sub
in
mov
adc
movsl
into
xchg
pop
je
add
and
hlt
in
fistpll
and
lret
jb
mov
clc
sti
movsb
cwtl
in
xor
iret
in
addr16
jnp
and
jle
cmp
mov
rclb
push
jb
cwtl
repnz
xor
inc
rorb
jmp
cmp
jl
sub
into
push
stos
mov
icebp
jmp
orl
cwtl
xchg
ffree
addr16
iret
lahf
testb
mov
int
and
sahf
mov
aad
lret
push
inc
pop
inc
gs
dec
subb
aad
mul
test
test
in
jle
shrl
xor
mov
jl
in
dec
push
push
call
in
cmp
fisubs
fistpll
adc
lret
xchg
call
dec
ja
add
adc
mov
out
lahf
push
cwtl
ljmp
test
scas
pop
leave
cmp
mov
into
sub
dec
dec
or
ret
flds
adc
bound
sbb
and
inc
aam
dec
aam
sti
xor
std
dec
in
jno
cld
into
faddl
loop
and
or
and
jne
out
push
sub
xchg
out
repnz
lds
iret
xchg
and
cmp
adc
dec
movsl
mov
lds
enter
pushf
dec
xchg
pop
int3
je
sti
nop
and
adc
adc
push
push
out
xor
andl
mov
loop
out
imul
bound
cltd
mov
xor
push
lods
jbe
int
or
mov
dec
jbe
adc
sbb
inc
leave
push
idivl
xlat
push
inc
rcr
pushf
mov
inc
daa
push
fsubrs
xchg
and
mov
add
mov
imul
iret
sbb
pop
lret
and
xchg
mov
sub
or
sub
cltd
mov
nop
fldl
xchg
cmpsb
push
les
repnz
sub
imul
les
lret
sub
push
push
shrb
dec
adc
cmp
mov
adc
and
fcoms
lret
mov
jnp
xor
mov
adc
push
sub
xor
aam
jae
inc
mov
lret
inc
enter
xchg
loope
leave
aaa
pop
fisubrs
sahf
loop
negl
addl
lcall
cmpsl
mov
lea
mov
fisttpl
mov
js
movsb
sub
imul
xchg
xchg
rorl
subb
jbe
mov
iret
cmp
add
add
inc
push
push
sub
punpckhbw
jp
lcall
outsb
xchg
push
xchg
mov
mov
jns
jnp
sbb
dec
dec
mov
jl
jg
pop
sbb
cmp
fdivrp
mov
sarb
sbb
dec
xchg
xor
orl
push
push
xlat
sti
xchg
hlt
fs
test
pop
scas
mov
stos
je
loopne
lods
mov
adc
or
int3
test
add
xchg
lcall
xchg
push
sbb
push
adc
popf
test
shll
xchg
lret
insl
cwtl
dec
ja,pn
cmp
inc
mov
insl
jns
in
sub
dec
xchg
push
pop
adc
mov
push
fucompp
jbe
sbb
shrl
mov
insb
xor
movsb
push
cmp
xchg
dec
xchg
push
mov
in
addl
inc
popa
cmp
imul
cmp
and
push
push
bswap
test
jg
mov
arpl
or
mov
sbb
push
push
sub
nop
lret
scas
pop
das
loop
in
lds
shlb
pop
add
mov
ret
and
xor
cmp
cmp
mov
cmp
jl
lds
and
mov
lock
jg
in
imul
sti
std
jge
into
or
add
xor
mov
or
push
subl
ret
add
test
cmp
popa
pop
jecxz
clc
and
adc
xchg
jmp
pop
cli
les
inc
push
stc
loope
mul
lds
push
adc
sar
das
fnstenv
xchg
in
lods
jbe
ret
idivb
aas
mov
mov
fistps
test
into
int3
mov
cld
or
iret
sbb
xchg
jne
popa
xor
cs
das
test
push
cmp
mov
jo
mov
pop
nop
xchg
loopne
sbb
add
in
inc
lret
mov
jno
lahf
cld
mov
scas
jg
xchg
imul
xor
xor
popf
pop
push
jge
fdivrs
lea
add
out
dec
stos
push
addl
inc
dec
and
subl
lds
je
int3
push
cmp
mov
pop
ss
mov
mov
sbb
sub
jp
sbb
pop
pop
xchg
test
pop
dec
ret
inc
test
hlt
cs
sbbl
movsl
mov
cwtl
ja
enter
aad
mov
loop
cs
lret
fwait
mov
mov
push
insl
call
repz
sbb
std
jns
sub
jnp
add
cmp
in
push
mov
in
xor
lret
mov
mov
pop
imul
jp
push
mov
jecxz
dec
aas
inc
lret
sub
cmp
mov
call
xor
and
jecxz
inc
dec
addr16
jo
add
jmp
pop
es
imul
dec
rolb
dec
outsl
repz
das
add
cmp
xchg
xlat
xorb
enter
cmp
fstpl
cmpsb
and
pop
arpl
jmp
sbb
push
int
mov
mov
dec
fldt
dec
pusha
lea
mov
pushf
rorl
inc
xchg
push
sti
bound
pop
xor
stc
add
arpl
popf
xlat
inc
mov
cmc
outsb
ljmp
push
sbb
fstpt
stos
test
in
lock
ss
add
nop
push
mov
jae
fs
mov
jle
pop
pop
subb
push
aad
loope
xor
sub
cmp
add
adc
movsl
cmc
mov
fcoml
pusha
xor
push
fnsave
mov
xor
xor
mov
and
pop
movsl
cmp
imull
shrl
aam
dec
mov
push
mov
fyl2x
jnp
mov
fs
pop
ret
mov
jbe
mov
pop
adc
and
orl
add
in
sarb
or
out
lcall
mov
dec
mov
outsl
lea
outsb
push
enter
jecxz
js
in
push
add
inc
popa
mov
dec
push
addr16
lret
pop
jg
lea
and
and
imul
mov
pop
xor
sbb
in
roll
sbb
lcall
clc
movsb
xor
sbb
sub
add
xchg
jbe
jo
cmp
aaa
dec
cltd
ljmp
mov
jle
mov
add
jns
pop
push
xchg
jne
or
jle
adc
andb
in
mov
cmc
shlb
sbb
arpl
enter
jge
jecxz
mov
mov
mov
cld
sbb
fidivl
or
sub
clc
stos
mov
lea
leave
mov
cmp
pop
mov
out
popa
fs
add
dec
addb
xchg
ljmp
das
fsts
or
xor
mov
nop
outsl
aad
mov
push
add
aad
mov
or
lock
adc
jp
inc
fbstp
mov
cmp
adc
cltd
out
loope
jnp
or
ret
mov
mov
or
je
jg
cmpsl
mov
stc
fistpll
push
mull
pop
push
lods
mov
cmp
push
mov
xor
popa
movsb
ror
pop
sub
and
out
stos
jbe
inc
pop
pusha
sub
xchg
stos
mov
fmull
push
add
sub
in
adc
and
or
out
outsb
popa
addr16
jle
dec
dec
mov
sbbl
dec
mov
jns
push
subl
mov
xchg
mov
pop
ds
das
scas
add
mov
push
mov
lret
push
cmp
lea
xchg
sbb
sbb
hlt
sti
out
hlt
pop
fisttpl
xlat
outsl
adc
rcl
jecxz
mov
add
xchg
repz
popa
pop
jle
pop
fcmovne
out
cmp
je
xor
push
add
shld
add
loop
jmp
loopne
jns
lcall
xor
inc
ja
cld
push
pop
xchg
push
iret
and
mov
decb
sarb
xchg
lock
sub
ja
cmp
aas
sbb
pop
push
push
enter
out
sub
fistps
cmp
jg
adc
jne
push
fs
xchg
add
in
cmp
mov
jno
repz
std
cltd
xor
mov
loope
lea
cmpsl
imul
and
fcoms
lahf
cli
ljmp
iret
and
loop
sti
add
sub
out
dec
lods
and
and
imul
scas
sbb
mov
xchg
sub
movsl
inc
fmull
add
fcomps
push
shll
into
jmp
push
lods
icebp
pop
push
jo
or
fs
in
lods
sub
or
cmp
shll
sbbb
arpl
ss
iret
or
push
cmpsb
out
sub
notl
adc
test
jge
sub
fcompl
mov
xchg
sbb
in
or
in
aaa
mov
ret
cmp
clc
mov
clc
inc
sti
xor
imul
fstpt
jmp
push
xchg
sub
xchg
xor
pushf
loope
mov
push
loope
hlt
xchg
inc
xchg
ds
je
sub
les
daa
push
jns
jmp
mov
and
cmp
in
or
xchg
mov
incb
jl
lahf
ljmp
mov
mov
fcomps
std
fdivrl
lret
arpl
jle
in
mov
or
inc
dec
xor
aad
or
fimuls
sbb
clc
ret
popa
push
das
cmc
scas
pop
mov
xor
out
int3
imul
inc
or
xor
iret
dec
mov
aam
add
pop
sub
out
fistpll
in
add
icebp
ljmp
mov
testl
or
xor
mov
int3
sti
loopne
xor
test
or
std
ffree
xchg
aas
cmpsb
leave
dec
cli
scas
std
lock
push
xchg
insb
in
mov
jg
mov
inc
stos
test
dec
in
sbb
stos
imul
adc
push
jb
roll
inc
scas
mov
rcl
jp
sub
jge
std
addb
mov
inc
xchg
sub
add
shl
test
and
adc
push
jae
sub
lret
clc
inc
pop
mov
or
pop
jg
ret
clc
clc
xchg
scas
pop
cmpsl
or
cmp
hlt
sub
adc
push
mov
adc
out
dec
mov
int3
inc
fisttps
mov
xchg
sbb
outsl
push
or
bound
or
add
push
pop
xor
std
cmp
movsb
insb
jle
add
add
test
gs
xchg
imul
cmp
push
mov
test
das
inc
data16
fsubrs
iret
sub
jp
into
js
fisttps
mov
jle
or
in
or
out
xchg
mov
sbb
add
jl
test
or
dec
fsubs
fwait
lea
lret
in
xor
imul
or
mov
sub
icebp
adc
scas
mov
scas
add
jle
test
ret
or
or
inc
sbb
test
dec
cmp
mov
sahf
call
sub
mov
jbe
fwait
push
ret
addl
aas
hlt
and
mov
in
cmp
push
sub
sbb
push
jns
push
jl
inc
inc
push
mov
or
out
andl
sbb
rcrl
repnz
jl
cltd
fidivs
outsl
iret
mov
lods
daa
lods
nop
lods
sub
cmp
inc
xor
sub
fldenv
adc
add
dec
jae
daa
mov
cmpsb
push
mov
jg
mov
scas
fs
push
arpl
js
jo
cmpsb
aas
xchg
xchg
mov
mov
pop
xchg
xor
and
mov
xor
inc
dec
mov
test
aad
sub
sub
mov
and
scas
cmpsl
push
mov
lret
inc
push
fcomps
popa
mov
enter
out
jg
rolb
fiadds
xchg
push
push
mov
push
sub
pop
push
push
xchg
adc
sub
cmp
ljmp
jecxz
ret
lahf
jl
pop
add
mov
jmp
jle
lds
jge
xor
xlat
push
lea
cmp
js
mov
lds
into
push
xchg
bound
fsubrl
and
xchg
push
andb
outsl
xorl
dec
jbe
nop
fs
or
push
sbb
sbb
push
sub
lods
stc
jmp
cmp
mov
or
add
push
out
cmc
push
in
mov
jnp
movsl
push
aad
arpl
push
add
js
popl
inc
sti
test
xchg
or
arpl
loopne
rorb
add
push
mov
sub
mov
into
lds
pusha
addr16
arpl
loop
lahf
pop
das
movsl
insl
sub
ficoms
mov
insl
cld
and
mov
xchg
fldenv
lahf
call
mov
lcall
jmp
cmp
loop
cmp
or
dec
jmp
andl
cmp
stos
jnp
and
lods
int
insb
cmp
xchg
jae
int
cmc
neg
jo
push
sti
fdivrl
xchg
fnstsw
fstps
cmp
or
lock
xlat
jecxz
loopne
sub
std
lea
sub
mov
sub
pushf
inc
jmp
push
addr16
loopne
jecxz
ds
rclb
std
out
inc
andb
sti
jae
ret
popf
sub
inc
push
jge
push
rcr
add
pop
add
pop
push
jmp
std
pextrw
jg
pop
mov
mov
imul
ffreep
cld
mov
and
sub
push
xor
pop
add
xchg
or
mov
push
cli
pop
rcrb
and
jbe
int
int
cmp
loopne
test
ret
mov
jae
xor
jae
mov
push
icebp
out
bnd
mov
jns
fnstcw
dec
outsl
mov
mov
subl
or
mov
adc
cmp
jg
stc
push
inc
inc
into
dec
inc
aaa
or
cld
pop
hlt
cmp
iret
cmp
aas
dec
xchg
push
push
jl
aam
sbb
lret
jo
xchg
jnp
int
iret
outsl
out
xchg
sahf
pop
jns
outsb
js
daa
insb
pop
inc
mov
or
xchg
push
mov
sub
mov
rcrl
out
shlb
mov
lds
dec
ja
xchg
cmpsl
lcall
sub
dec
mov
cmp
push
in
test
subb
js
mov
or
cmp
lahf
cmp
out
mov
add
stos
test
fisubl
push
lcall
or
mov
jle
lods
adc
mull
inc
pushf
pop
push
dec
hlt
hlt
ss
rolb
pop
and
or
or
and
jne
add
push
push
or
stos
mov
jmp
in
or
inc
dec
stos
xchg
mov
mov
mov
jb
scas
adc
fcompl
push
nopl
or
mov
cltd
out
cld
sbb
mov
and
out
imul
dec
pop
sub
nop
enter
div
pop
jno
mov
bound
lcall
lods
jo
adcb
into
dec
test
popl
ds
rorb
ja
imul
or
and
es
dec
push
xor
adc
jle
pop
and
adc
iret
lods
inc
cs
call
inc
stos
cmp
outsl
iret
push
adc
shrb
jmp
dec
insl
stos
mov
in
and
arpl
and
mov
popa
cmp
adc
pop
xchg
outsl
xor
sub
adc
xchg
jl
pop
mov
push
ljmp
push
adc
or
out
jecxz
test
int3
sub
int3
sbb
into
mov
enter
cmp
cmp
outsb
cmp
lods
push
pmulhw
popa
imul
lds
dec
mov
clc
into
sub
jge
xorb
lahf
sbb
push
out
cmp
cmpsl
decb
pop
repnz
popa
test
cltd
scas
push
mov
push
push
or
and
bound
fldenv
lods
and
add
aad
test
popf
dec
bound
rolb
xchg
jle
test
jmp
sbb
push
leave
jo
stos
sti
testb
popa
push
cmp
cmp
and
push
cli
inc
push
scas
dec
es
xchg
scas
out
xchg
in
fisubl
jae
lahf
xchg
shr
sub
adc
sbb
mov
dec
mov
fwait
mov
aad
jbe
pop
ret
call
mov
pop
jle
add
lahf
test
sbb
lret
push
mov
cmpsl
pop
pop
push
sbb
push
xor
sub
dec
cmp
jle
dec
push
popa
cwtl
xor
imul
or
out
or
xchg
fs
push
sbbl
xor
cli
pop
add
call
shl
add
push
gs
inc
jbe
stc
dec
pop
push
cmpl
sub
repnz
sbb
and
mov
xor
sahf
jecxz
pushf
sub
adc
in
xchg
mov
aas
pushf
in
in
insl
adc
rolb
lea
push
xlat
ljmp
sub
push
hlt
add
or
xorb
cmp
stos
and
jle
xchg
enter
mov
fst
mov
jmp
sub
in
mov
xor
inc
pop
add
lds
pop
in
mov
inc
xor
sbb
xchg
or
fists
push
inc
mov
sahf
in
xchg
and
push
or
scas
fistps
fcmovbe
jmp
adc
mov
xchg
out
bound
outsb
repz
cmp
mov
mov
dec
mov
test
enter
adc
mov
ret
inc
xchg
fcoms
pop
pusha
cmp
mov
lahf
mov
push
push
and
adcl
clc
push
int
xor
jae
in
aam
sbb
cld
cmp
sub
xchg
jle
out
push
lret
add
sti
sub
inc
ljmp
rcrb
pop
fldz
mov
pop
lds
pop
aaa
pop
ret
sahf
cs
push
and
mov
mov
std
xor
xor
imul
xor
js
insb
sahf
mov
mov
leave
pop
insl
pop
xchg
jl
pop
sub
adc
notl
decl
cmp
mov
dec
mov
out
test
stos
sub
pop
pop
scas
or
shrb
or
xchg
inc
es
aas
jp
cmp
daa
aad
push
adc
jne
rorb
mov
jne
push
or
nop
jae
ja
mov
sub
aaa
fsubrs
test
xlat
movsb
pusha
push
jmp
aas
hlt
inc
jnp
out
pop
loopne
imul
mov
into
lods
fstl
dec
js
mov
mov
sub
fidivrs
adc
and
test
sub
jo
adc
cli
jns
inc
dec
shlw
and
xor
mov
clc
mov
mov
and
mov
js
sbb
mov
lcall
inc
or
mov
or
jnp
out
or
stc
lcall
shrl
cmp
cmp
iret
sub
mov
in
sub
lods
scas
adc
pusha
pusha
das
outsl
sbb
std
jns
cld
ret
sbb
sub
mov
adc
sahf
cli
lret
hlt
sti
dec
aam
sub
aaa
addl
ljmp
add
add
jecxz
shrb
vcomiss
mov
pop
jmp
loop
inc
xchg
pop
mov
jne
mov
jne
push
std
xchg
jno
add
test
stos
jnp
pop
out
in
into
adcl
jmp
outsb
or
mov
iret
push
xchg
jb
fidivrl
loopne
mov
jae
pushf
repnz
enter
pushf
cmp
push
cmp
fwait
xor
nop
adc
xor
inc
pop
mov
pop
test
cwtl
sti
mov
clc
jb
xor
fsub
cmpsb
icebp
xor
dec
out
divb
sub
xchg
cmp
in
jne
inc
push
cmpsb
adc
push
cltd
sbb
out
push
and
mov
xor
jb
dec
inc
or
repnz
sub
neg
mov
int3
aad
int
imul
out
cmp
lea
nop
sub
pop
adc
inc
repz
xchg
in
pop
clc
popf
mov
cmp
aad
out
and
clc
xchg
out
int
test
pop
pop
cli
and
xor
or
int
xlat
mov
dec
lea
dec
adc
insb
imul
out
mov
xlat
pop
sbb
in
xchg
gs
cmpsl
sub
push
or
push
into
xchg
imul
xor
fisubl
jg
xchg
popa
push
jno
scas
fistpll
jl
cmpb
mov
or
ret
ret
in
push
movb
lret
jl
or
orl
pop
jne
mov
adc
aam
sub
addr16
js
pop
movsl
rolb
jg
in
hlt
lods
cmovns
lods
jb
sbb
pop
data16
xor
sub
mov
stos
mov
sahf
lock
ljmp
sbb
adc
lret
outsb
add
mov
subl
enter
jmp
sbb
jmp
outsl
jmp
add
outsb
sahf
adc
mov
insb
push
shlb
in
outsl
lods
aam
ds
sub
dec
int3
dec
aad
jl
mov
add
push
add
jne
fiaddl
xor
imul
mov
test
rcrb
push
xor
jmp
ja
or
or
sub
clc
ljmp
mov
dec
push
mov
icebp
mov
jne
test
cmp
sbb
cmpsl
sbb
mov
adc
test
mov
jl
lret
movsb
xlat
or
push
lods
sub
es
repnz
fadds
push
mov
shlb
adc
movsl
push
rcr
cmp
sbb
ret
lds
mov
push
mov
push
stos
aad
les
jb
sub
mov
push
push
xor
or
xlat
and
sbb
add
sbb
xor
fistps
ret
inc
adc
leave
xor
push
jge
into
and
mov
mov
repnz
mov
xchg
jne
pop
sarb
std
mov
out
dec
lcall
fs
loop
sarb
or
movzbl
sub
iret
iret
in
pop
lods
xor
cmp
push
mov
lahf
cmc
and
adc
and
pop
repnz
lret
stc
aaa
dec
pop
adc
insb
std
or
dec
inc
mov
imull
cld
fimull
mov
mov
orb
mov
xchg
jp
push
fistpl
incb
xor
inc
mov
or
jle
repz
inc
jb
push
loope
inc
pop
dec
mov
jb
inc
and
inc
mov
inc
jecxz
scas
mov
xor
jg
jne
jge
fsub
adc
shlb
mov
and
mov
inc
mov
push
push
test
jae
lret
xor
lahf
inc
cmp
cld
jmp
push
jns
push
lcall
mov
ja
xor
cwtl
or
gs
xor
ret
push
sub
ret
and
adc
xchg
aam
sbb
mov
mov
in
jbe
mov
pop
add
ja
imul
inc
fwait
lret
cmc
xchg
movsl
sbb
fsubrl
add
out
xchg
mov
ss
dec
dec
dec
xlat
sti
mov
inc
mov
sub
mov
pop
outsl
ss
mov
pop
sbb
and
cli
mov
cmp
mov
lahf
sub
push
pop
mov
mov
pop
push
adc
and
lret
stos
mov
shll
enter
cli
sahf
inc
insl
and
mov
inc
inc
mov
les
push
pusha
cmp
sarb
int
pop
leave
xor
test
dec
mov
stos
sbb
lock
loopne
mov
ret
jno
movsb
mov
inc
lods
imul
adc
add
add
jb
jb
mov
jb
fisubs
push
sub
lods
xchg
push
xchg
and
inc
ja
insl
jp
or
inc
sbb
pop
stc
cmpsb
lods
xchg
int3
aam
cwtl
fstpl
pop
xchg
adc
leave
mov
add
inc
mov
jl
popf
movsl
int
les
enter
inc
mov
xchg
sbb
mov
jp
sub
mov
mov
jns
xor
pop
cmp
pop
pop
bnd
jbe
movsl
dec
or
mov
rorl
loopne
push
ss
add
or
cmp
push
xlat
lret
and
sbb
leave
sbb
cmp
dec
pop
dec
roll
xlat
stos
dec
test
lcall
push
std
les
mov
push
mov
mov
fwait
add
mov
test
mov
ficomps
outsb
out
inc
arpl
push
push
adcl
fisubrs
jno
cmc
stos
xchg
bound
jo
mov
inc
repz
push
mov
push
push
xor
sub
leave
out
mov
gs
push
loopne
mov
sbb
cmp
cmc
movsl
pop
fwait
stos
in
mov
test
sbb
repz
fldl
push
cmp
push
xchg
int3
mov
cmpsl
enter
ss
stos
lcall
inc
dec
sub
data16
cmp
rolb
inc
aaa
jae
test
stos
imul
clc
sub
rcl
imul
in
repnz
pushf
dec
sbb
pop
test
cmp
mov
push
dec
mov
imul
adc
mov
int3
test
repnz
lahf
adc
inc
ss
push
mov
aad
cld
push
push
xchg
mov
dec
pop
mov
mov
ljmp
jge
lret
data16
aad
sub
cmp
xor
jp
fdivrs
cmp
pop
je
xor
inc
fsubrs
or
scas
xor
mov
mov
in
cmpb
cmpsl
sbbl
ja
dec
pop
decb
xor
xchg
cwtl
clc
ret
sbb
ljmp
sbb
mov
scas
movsb
pop
stos
or
mov
out
iret
xor
fstl
dec
shrl
lock
dec
lcall
or
cwtl
jb
sub
lahf
loop
repnz
in
sahf
sbb
add
bound
imull
mov
mov
inc
in
cmp
int3
cmp
sbb
je
xlat
je
jno
dec
cmp
lods
xchg
out
jmp
outsb
jo
sbbb
jbe
and
in
cmp
mov
mov
lret
lea
push
imul
mov
mov
mov
std
loop
cmp
push
mov
push
fadds
faddl
out
enter
or
pop
pop
jle
mov
dec
and
loopne
test
and
sbb
and
jp
jno
or
out
mov
orl
pop
jge
scas
or
push
aam
test
addr16
push
bound
dec
icebp
test
pop
or
cmp
pop
arpl
jns
dec
outsb
sub
sahf
ljmp
fdivrs
insl
or
jg
xor
cmp
pop
dec
ret
xchg
xlat
frstor
pusha
push
pusha
dec
cli
les
push
lcall
sbb
pusha
add
loopne
sub
stos
or
leave
ja
pop
xor
sbb
out
cltd
scas
and
or
enter
shll
jbe
ss
jle
mov
sub
fwait
push
cmp
outsl
and
push
sub
std
or
pop
inc
adc
inc
adc
dec
pushf
mov
pushf
test
test
adcl
sbb
sub
adc
jae
jb
fdivs
xchg
jp
frstor
out
cmp
pop
sub
jg
push
out
aam
sub
sub
push
mov
cmp
xor
shlb
lcall
adc
lahf
fstpt
sub
push
inc
lock
jnp
sub
call
call
jge
aam
mov
pop
jmp
cmp
bound
mov
lcall
xchg
in
cmp
jno
sbb
sbb
leave
inc
movsb
and
mov
in
push
jl
dec
pushf
xor
cmp
jne
popa
dec
leave
insb
sbb
cmpsl
lods
pop
aad
pop
push
push
push
aad
xchg
mov
pop
lahf
mov
sub
pop
push
dec
pop
insl
imul
xchg
cltd
mov
mov
pop
mov
sbb
mov
mov
dec
iret
rcrb
lods
xor
xchg
aas
sub
ja
imul
movl
pop
cmp
jg
inc
mov
call
inc
mov
add
imul
xor
inc
cli
xchg
scas
aas
dec
ljmp
add
in
incb
movsb
pushf
push
dec
into
int3
push
dec
leave
xor
sub
jge
cwtl
push
or
lret
xchg
add
pop
lcall
cmp
lcall
lds
push
pop
lcall
xor
jp
daa
int
xchg
cwtl
jne
addl
mov
test
cmp
fs
push
cmp
push
adc
into
ss
and
jg
push
sti
aaa
jbe
jbe
adc
lods
cld
adc
adc
pop
adc
inc
repnz
bound
and
leave
xchg
ljmp
add
je
cmpsb
xor
idiv
pop
fldt
aam
and
mov
cmc
add
ja
lret
leave
or
es
mov
repnz
stos
sbb
push
and
push
push
or
cmp
ret
cmpsb
int3
les
xor
ret
sbb
aaa
sbb
std
loope
int3
scas
loopne
push
add
dec
test
xor
sub
es
mov
add
sbb
jecxz
iret
ljmp
std
push
and
stc
daa
pop
fdivl
mov
repnz
pop
lahf
cmp
hlt
mov
add
pop
inc
cmp
sbb
jne
mov
je
xor
lods
mov
je
aam
insb
sub
pop
daa
add
in
cwtl
adc
add
push
xchg
or
mov
fmulp
rcrb
test
data16
lret
push
pop
pop
pmaxub
mov
jg
adc
xor
push
xchg
and
cmp
xchg
ret
mov
loopne
inc
into
pop
in
push
inc
jg
jmp
rcrb
mov
std
xor
push
out
push
adc
push
mov
hlt
xchg
jne
jp
inc
aaa
xchg
mov
jb
pop
mov
mov
into
xor
jae
pop
sbb
int3
pop
push
fcompl
jae
push
jns
xchg
jae
cltd
jns
gs
adc
cmp
push
mov
adc
dec
icebp
rcll
leave
push
xchg
pop
jmp
mov
fwait
inc
cli
das
pusha
jg
iret
test
add
cmc
pop
enter
mov
test
stc
cld
xchg
arpl
ss
imul
idivb
and
xchg
mov
bound
mov
add
dec
aaa
popa
fsubrs
cltd
push
pop
add
nop
mov
jle
jl
lock
mov
in
daa
and
or
icebp
rcrl
fbstp
sub
mov
xor
jb
mov
and
mov
mov
shlb
mov
add
cmp
cmpsl
dec
pop
xor
rcrb
cld
mov
mov
pop
std
in
or
xlat
fwait
stc
shrb
mov
sub
iret
mov
inc
rcrl
call
mov
pop
cmp
lods
fwait
out
clc
inc
in
loopne
lds
icebp
decb
inc
or
mov
xchg
mov
pop
or
repnz
push
lahf
mov
or
dec
call
push
aam
aam
mov
scas
add
and
and
cmp
and
out
lret
pop
push
inc
mov
cmp
inc
pop
inc
push
sbb
shll
movsb
adc
xor
nop
jae
jne
sti
lds
dec
dec
mov
mov
pop
and
mov
in
push
lahf
enter
pop
sub
fistpll
mov
jl
and
icebp
imul
imul
or
fdivp
mov
adc
hlt
pop
pop
popa
sub
movsb
js
sbb
mov
out
xchg
and
fistpll
sbb
stos
pushf
mov
dec
pop
mov
lret
enter
cmpsb
or
xchg
push
bound
pop
test
lock
mov
mov
testb
out
or
and
xchg
clc
push
loope
frstor
xor
adc
mov
adc
and
jo
pop
or
pop
cmp
mov
sbb
mov
mov
int
add
fdivrs
ficoms
in
lcall
out
in
inc
ds
xchg
movsb
test
repnz
fs
out
push
xchg
orb
add
jp
insb
push
mov
inc
jb
fisubrl
out
lcall
int3
mov
jecxz
cwtl
hlt
pop
xchg
add
or
sub
jl
adc
sbb
mov
push
sub
adc
inc
sti
jnp
bound
push
dec
ds
and
cmp
cli
xor
push
fisubs
outsl
enter
pop
and
aaa
ror
stos
hlt
pop
cld
jmp
push
lods
cmpb
addr16
stos
js
repz
inc
dec
outsb
mov
or
aad
mov
shll
pop
out
push
push
out
jne
mov
mov
mov
repnz
and
sbb
jns
fmulp
fabs
jp
outsl
dec
sub
in
and
cmp
movsb
out
or
out
dec
adc
loope
adcb
repnz
push
xorb
cli
stc
mov
push
lea
push
sbb
enter
lea
jne
out
mov
jl
mov
ficomps
mov
xor
adcb
imul
lds
sbb
cmp
xchg
nop
cmp
std
and
xor
cmpsl
xchg
call
aaa
add
lds
int
xchg
cld
or
aas
or
pop
out
pushf
daa
dec
das
and
sbb
pop
push
mov
sub
xor
icebp
xchg
icebp
in
adc
idiv
pop
hlt
movsb
sbb
arpl
mov
test
cmp
shl
outsl
cmp
scas
ret
xor
sbb
adc
pop
push
xor
push
sub
js
data16
inc
pop
push
cmp
jno
mov
xchg
xor
and
add
js
or
rcrl
dec
dec
movsl
add
mov
sub
jo
pop
js
jecxz
or
mov
adc
push
fsubl
or
test
mov
sbb
xchg
xor
inc
pop
sbb
or
mov
push
daa
lret
and
jg
outsl
iret
sbb
jbe
in
in
test
adc
jg
jp
iret
fidivs
cmc
xor
sbb
loopne
clc
and
iret
push
sahf
int3
int3
jg
inc
xor
jge
fwait
data16
xlat
aas
mov
pop
rcr
mov
test
lds
cmove
addr16
mov
or
ret
inc
idivl
mov
xchg
fs
push
add
xlat
xor
daa
and
jno
pop
adc
xchg
mov
inc
dec
push
xchg
mov
cmpsl
adcb
cltd
enter
dec
rclb
inc
ret
pusha
jno
push
pusha
add
loopne
scas
xchg
psubd
inc
adc
jmp
mov
adc
mov
mov
repnz
stc
push
inc
pop
mov
sti
arpl
in
xchg
and
sub
pop
out
dec
dec
lret
fldenv
into
imul
add
push
jge
repz
cmp
dec
iret
addr16
stc
ret
scas
in
mov
and
sub
rolb
push
enter
inc
stc
jo
lock
pushf
or
dec
mov
jno
fnstcw
imul
call
add
push
mov
xlat
and
test
bound
mov
mov
lret
lret
cltd
into
roll
dec
int3
jmp
mov
loope
adc
sbb
into
mov
and
test
pop
adc
jo
ret
pop
fldt
jne
dec
jns
mov
mov
fisubrl
daa
das
jnp
mov
jmp
arpl
mov
mov
stos
xchg
push
mov
pushl
stos
jno
gs
push
mov
jne
dec
inc
in
inc
test
mov
mov
in
das
mov
inc
pop
out
sbb
fcoms
cld
mov
mov
lret
hlt
lods
insb
lahf
js
jne
cwtl
adc
inc
and
push
nop
ret
jmp
loope
arpl
or
ffreep
ffree
lea
int
sub
sub
ffreep
sbb
jb
shl
cld
ret
daa
fwait
test
xor
cmpsl
xchg
int
jmp
lods
xchg
pop
or
jg
or
push
cmp
aas
outsl
mov
pop
push
fistl
out
outsl
cld
mov
cmpsl
pop
inc
lret
in
lock
pop
mov
jb
mov
repnz
or
or
in
inc
push
adc
out
jbe
dec
push
leave
das
pop
ret
or
mov
in
fisttpl
and
sti
std
cmp
add
mov
adc
push
sub
gs
push
std
or
pushf
xchg
jl
sahf
jge
sbb
stos
or
adcb
ljmp
inc
mov
push
inc
mov
nop
adc
leave
pusha
lods
call
pop
arpl
xchg
or
jge
push
xchg
sub
bound
jmp
arpl
inc
pop
stos
pushf
mov
adc
or
jl
or
enter
sbb
pop
stos
xchg
mov
jg
mov
leave
hlt
cmpsb
fisubrs
adc
mov
mov
pop
adc
loope
fs
sbb
inc
xor
scas
enter
push
mov
addr16
push
pop
addb
outsl
xchg
jge
xchg
ss
leave
cwtl
adc
and
cmpsb
push
mov
cmp
sub
fnstcw
test
mov
add
pop
xchg
push
roll
and
out
insb
fadds
lea
cwtl
sub
test
rcrb
nop
leave
icebp
add
jle
jge,pt
addr16
jecxz
scas
inc
dec
inc
xchg
xor
icebp
je
xchg
sbb
dec
decb
clc
inc
adc
sub
bound
push
nop
pusha
sbb
push
jge
test
cmp
and
sub
push
lahf
test
arpl
xchg
in
add
outsb
in
stos
repz
and
mov
sbb
push
mov
mov
aaa
cmpl
imul
xchg
hlt
popf
dec
ss
pop
inc
jmp
test
andl
adc
mov
mov
lock
mov
das
mov
stos
push
outsb
adc
inc
into
add
mov
xor
sbb
insl
cmpsb
push
xchg
cmc
sub
jae
sbb
inc
push
inc
add
enter
je
inc
mov
push
icebp
cmc
mov
cwtl
pop
cmpsb
dec
push
shlb
push
das
or
lods
gs
sti
mov
mov
mov
jae
xlat
mov
lock
mov
pop
inc
les
sub
fcmovnu
xor
scas
cwtl
cmpsb
imul
gs
xorl
mov
add
xor
dec
les
push
scas
in
mov
jae
out
filds
jmp
cmp
shrb
push
outsb
dec
data16
inc
mov
out
je
inc
xchg
and
test
cs
ss
into
fmuls
ret
inc
test
loop
inc
fs
xchg
and
mov
fst
aam
int
adc
mov
pop
into
push
dec
ret
sbb
arpl
pop
push
mov
sbb
jmp
loopne
add
cmp
xor
or
ds
pop
in
int3
lret
mov
push
scas
popl
and
pop
lret
push
imul
std
mov
cmp
dec
pop
repz
je
pop
cld
add
fmull
pop
mov
inc
scas
fs
sub
push
mov
mov
sarl
jns
stos
cltd
pop
push
pop
lea
fsts
push
xchg
sub
sub
subb
test
movsl
inc
mov
jbe
mov
mov
xor
popl
mov
pop
lret
fsubrs
push
imul
je
push
lds
sahf
add
xor
aam
jne
jbe
fistl
stos
sub
jmp
ds
std
lret
jecxz
pusha
mov
dec
aaa
pop
fs
pop
sbb
loope
shrb
fnstcw
dec
lock
push
cs
push
dec
jbe
xchg
scas
adc
or
jb
int3
into
incl
fs
dec
gs
imul
mov
inc
fmuls
dec
or
popf
mov
jns
into
aas
mov
sbb
mov
std
pop
fcmovnu
mov
mov
mov
imul
mov
test
out
sub
rcl
fsubs
dec
jl
ret
sub
sarb
pop
lahf
cmp
cld
cli
ret
push
or
nop
sub
enter
cmp
ss
jp
xchg
inc
jne
dec
dec
jne
mov
loop
bound
call
and
movb
mov
mov
cmp
jl
inc
inc
push
int3
fstpl
push
sub
jl
jo
pop
hlt
mov
popa
insl
lock
lahf
icebp
xor
or
jmp
pop
add
int
loope
jne
and
xchg
in
clc
popw
clc
enter
out
lcall
push
mulb
pusha
movsl
jmp
sub
xor
mov
sarl
mov
test
lret
dec
pop
shlb
testl
std
scas
gs
or
cmp
push
dec
ficompl
xorb
sbb
adc
sti
lock
xchg
push
ret
rolb
push
das
inc
mov
or
ss
dec
icebp
sub
jnp
int3
out
sub
and
lret
dec
mov
add
hlt
sbbb
or
rcll
fbstp
dec
mov
es
test
cmp
xchg
mov
or
pushf
lcall
jge
inc
out
cmp
testb
mov
or
sbb
icebp
into
daa
or
outsl
push
pop
xchg
out
fldenv
or
repz
push
cs
xchg
fistpl
cld
leave
out
ffreep
xchg
sbb
dec
push
es
lcall
sbb
mov
push
imul
or
iret
cmpsb
xor
or
or
mov
mov
or
and
or
dec
fcoml
cmp
add
mov
pop
dec
subl
and
in
es
dec
or
aas
mov
jle
stos
cmpsb
lret
jle
xor
rcrb
hlt
mov
sub
or
jle
ffree
mov
inc
stos
ljmp
mov
mov
sbb
fcompl
and
out
les
adc
sbb
fidivl
push
xchg
sarb
inc
fcompl
or
fstpl
jge
add
and
jle
jge
add
and
lods
mov
mov
in
ja
cmp
xchg
xlat
adc
in
sub
outsl
pop
xor
inc
xchg
jae
mov
test
js
mov
jecxz
add
int3
pop
icebp
mov
cvtps2pi
ss
idivl
inc
push
roll
pop
jle
sub
popa
push
push
mov
roll
repz
lods
cli
cmp
mov
jo
stos
nop
pop
jmp
cmp
mov
or
inc
push
enter
mov
mov
in
addr16
pop
xor
inc
push
test
pop
sarb
or
push
jb
insb
push
stos
and
sub
and
mov
pop
arpl
je
or
orb
xchg
sahf
testl
sub
inc
mov
in
and
testl
xlat
xor
add
in
leave
insl
push
jb
cmp
sbb
pushf
loope
adc
lcall
enter
ja
mov
add
inc
cmpsl
std
dec
imul
inc
bound
mov
outsl
dec
mov
sbb
sub
sbbb
add
push
imul
nop
xlat
loopne
dec
dec
mov
and
xor
push
fmul
aam
mov
xchg
jmp
and
mov
mov
jecxz
xchg
xchg
es
push
insb
pop
sahf
sbb
xchg
mov
in
add
aas
mov
shrb
test
push
sub
std
enter
div
sub
lret
push
je
mov
std
jbe
test
arpl
es
gs
aaa
jle
jmp
or
iret
sbb
mov
push
xor
xor
adc
and
xchg
and
ja
test
ret
loop
and
or
int3
xchg
pop
enter
and
cwtl
adc
out
ss
lahf
aad
push
pop
add
dec
xlat
sbb
test
sub
mov
std
pushf
xchg
lret
aas
xor
call
psubq
jns
and
lcall
and
insb
pushf
shr
mov
mov
test
push
inc
fistpl
mov
scas
push
insl
jns
and
popf
popa
je
pop
dec
into
in
mov
or
sub
jbe
pop
sbb
cmp
xor
cmp
stos
sub
mov
bound
leave
es
sbb
mov
jg
jbe
push
mov
push
jecxz
sahf
inc
adc
cwtl
cmp
inc
imul
fnstenv
sub
adc
inc
xlat
orl
jmp
pop
mov
mov
push
push
mov
push
lcall
pop
fidivs
aam
stos
not
and
in
fs
ret
jnp
repz
and
addb
xchg
mov
jo
lahf
lods
pop
in
in
jp
and
mov
xor
xor
cmp
insl
imul
ljmp
jecxz
fs
test
lods
and
or
mov
outsb
cmp
shl
rol
shr
outsl
add
xlat
and
fdivs
cmpl
rclb
pop
adc
arpl
dec
mov
mov
push
cmp
cmp
xchg
sub
mov
and
lcall
push
jecxz
shll
jl
data16
mov
adc
inc
mov
push
lods
cmp
lock
push
fdivrs
mov
js
test
push
mov
fiadds
mov
mov
nop
mov
xor
inc
scas
clc
stos
repnz
movsl
popa
cmc
xchg
lods
clc
popa
or
sbb
addl
cs
popf
adc
mov
adc
insb
jb
mov
icebp
into
scas
cmp
test
xchg
sub
pop
scas
pusha
aaa
inc
mov
mov
je
lods
pop
daa
mov
ret
das
jb
in
icebp
fidivrl
lods
or
imul
setno
mov
out
jg
add
dec
mov
std
push
and
or
or
xchg
mov
add
sbb
fsqrt
push
pusha
xchg
cmp
idivb
sub
std
jno
inc
add
mov
aas
adc
in
in
sbb
mov
ds
cmp
dec
iret
mov
inc
fprem
xchg
loop
xor
xchg
mov
bnd
repz
iret
jns
cmpsb
negb
mov
lahf
push
or
xchg
icebp
scas
roll
or
lds
or
cmpsb
hlt
dec
and
outsb
pop
mov
mov
sbb
inc
mov
sub
pusha
dec
push
push
dec
xlat
popf
es
ret
pusha
push
cmpsl
gs
pop
adc
inc
inc
push
test
pop
dec
shr
scas
inc
mov
jl
gs
stos
ret
es
es
jo
xchg
stos
dec
jp
repz
push
leave
and
popf
ja
push
shrl
loope
sbb
xchg
lahf
mov
inc
jae
push
out
pop
leave
test
xor
bnd
pop
inc
and
mov
and
lret
mov
mov
xchg
xchg
cmpsb
hlt
mov
lods
int
movsl
xor
push
add
jno
inc
and
enter
test
fldcw
mov
ror
sub
pop
mov
cli
jno
mov
sub
inc
mov
nop
jle
call
sub
jno
lret
inc
jl
bound
push
pop
iret
pop
ret
jmp
mov
cmp
xor
mov
ret
out
jnp
sub
xchg
pushf
mov
in
or
xchg
push
and
insl
xor
mov
xchg
cmpsb
lahf
lock
cmpsb
xlat
and
jo
and
test
mov
lock
sub
or
mov
push
cmc
stos
inc
pop
xchg
xchg
stos
or
enter
mov
icebp
push
mov
pop
sub
mov
dec
stos
ficoml
sti
mov
out
int3
movsl
jge
and
lock
mov
adc
mov
add
fwait
pop
loopne
sub
orb
imul
testb
ja
les
push
mov
push
fsubl
xchg
xchg
arpl
mul
loop
push
cmpl
nop
jecxz
and
mov
adc
inc
jge
leave
adc
pcmpeqb
inc
jbe
sbb
scas
out
adc
and
repnz
and
add
add
ja
mov
and
dec
iret
stos
std
mov
cmp
imul
out
xchg
add
push
jecxz
or
pop
xorl
clc
pusha
push
pop
jl
in
xor
ja
dec
cltd
fnstsw
inc
cmp
outsl
loop
je
xlat
or
or
xchg
dec
mov
cwtl
stc
imul
cmp
mov
add
sbb
jle
mov
add
ffreep
mov
mov
mov
cmc
mov
lods
fwait
dec
int
sub
pop
call
test
addr16
mov
scas
sub
push
outsl
sbb
xor
or
stos
and
dec
inc
cmpsb
jbe
ss
mov
clc
lret
mov
pop
pop
shlb
scas
jbe
fmulp
mov
xchg
xchg
stos
int3
push
add
pop
jge
out
push
cwtl
int3
xchg
cmpsb
mov
push
popf
add
cmp
adc
mov
xchg
clc
xchg
cwtl
popf
mov
mov
sub
pop
xor
and
shr
es
and
cmpl
pop
lcall
xor
stos
sub
jns
cmp
arpl
jae
gs
in
or
mov
or
ss
cwtl
inc
lods
push
lds
sti
call
out
push
cmpsl
jp
aas
pop
sub
xlat
inc
cmp
xor
lahf
test
sub
mov
dec
lds
cmp
imull
cmc
mov
scas
adc
xor
mov
orl
or
inc
xor
out
adc
scas
test
push
jp
int3
fistl
xor
jnp
js
arpl
inc
pop
inc
mov
and
pop
das
das
add
add
inc
cwtl
xor
pop
arpl
addr16
add
pop
enter
inc
popf
push
jg
cld
jo
lcall
push
pop
ret
xchg
stos
repz
and
jmp
roll
jmp
push
push
out
mov
cld
aam
push
pop
lds
adc
push
push
pop
mov
pusha
enter
fs
stc
cld
push
mov
mov
pop
adc
pop
or
inc
add
mov
orl
jnp
fwait
inc
pop
xchg
pusha
sbb
jo
dec
cmp
imul
pop
nop
jnp
or
mov
mov
dec
push
jecxz
jg
sti
sahf
cwtl
pop
jbe
call
cmpl
push
leave
in
shl
mov
repz
bound
mov
sahf
cmp
lahf
pop
push
push
out
loope
lods
out
test
shl
jnp
jo
sbb
push
mov
push
cs
icebp
adc
int3
pop
mov
popf
or
xchg
lret
arpl
push
jge
and
mov
inc
cmc
sub
mov
pop
movsb
mov
in
jno
lcall
inc
push
ficomps
cmc
adc
dec
sti
enter
push
movsl
and
movsl
sub
popf
in
xor
xorl
dec
mov
sbb
stos
das
push
lods
and
and
sub
xchg
popa
setbe
fstps
cmp
mov
das
pop
loope
sti
pop
icebp
outsb
cmpsb
pop
xor
adc
mov
cmc
shufps
and
sbb
adc
mov
pop
popa
push
lret
int
test
jae
mov
lret
fdivl
lret
mov
movsb
xchg
xlat
mov
jo
loop
scas
pop
rcr
xor
adc
loopne
lea
pop
lcall
ss
fmul
jmp
cmc
fcomps
xor
aas
mov
and
sbb
jg
push
fsubs
push
push
add
sub
fnsave
push
inc
or
adc
add
in
cltd
cwtl
adc
xchg
iret
mov
mov
aam
cmp
sbb
xchg
or
cmpsb
movsl
jns
jmp
add
dec
lods
aad
fstl
dec
adc
sbb
sub
aad
lds
cld
cwtl
push
in
dec
mov
out
test
and
sub
jbe
fwait
and
jnp
push
jmp
jno
and
add
int3
add
hlt
fnstsw
jns
adc
jecxz
cwtl
in
les
ret
or
jb
adc
add
jle
fcmovnb
out
cmp
sbb
cmpsb
and
shlb
out
sub
jb
lret
or
push
shlb
or
loop
adc
fwait
ljmp
lahf
inc
outsb
orb
arpl
cmp
ret
lods
sub
jbe
xchg
cs
imul
inc
fnstenv
and
xor
popa
clc
jle
test
or
inc
jo
jecxz
xchg
shll
rclb
in
mov
add
sbb
stos
ret
pushf
icebp
fwait
mov
call
in
dec
mov
pop
cmp
cmp
das
mov
pop
pusha
dec
out
inc
pop
icebp
jb
mov
mov
adc
test
int3
inc
add
xor
test
mov
jmp
xor
icebp
push
lcall
mov
call
cmp
mov
les
xor
or
jl
xor
xchg
scas
mov
sub
in
fadd
mov
pop
cld
cmp
movsb
push
dec
mov
les
inc
pop
jmp
gs
scas
lea
sbb
nop
aad
lcall
insl
and
cmp
iret
stos
pushf
xchg
mov
fwait
or
icebp
mov
sbb
iret
rcll
sahf
xlat
imull
sti
add
add
adc
lea
das
stos
cwtl
jmp
push
and
sbb
addl
push
push
idivl
clc
xchg
loop
jge
jecxz
test
ret
add
mov
pop
jecxz
and
dec
out
mov
mov
mov
mov
lcall
mov
mov
adc
mov
mov
dec
sti
adc
or
shll
adcl
pop
inc
push
push
mov
jbe
pop
out
and
cmp
out
pop
adc
insl
inc
push
sub
cli
divl
dec
adc
imul
inc
call
cmpsl
mov
imul
xor
push
cwtl
mov
jno
mov
lret
stos
adc
inc
cmp
sbb
sub
arpl
test
xchg
mov
push
out
nop
add
stos
addl
std
shlb
sti
inc
jge
xor
in
jo
mov
addr16
fisubs
sarb
mulb
aad
addl
adc
ss
mov
lret
lock
inc
push
int
insl
xor
inc
out
pop
cs
lea
mov
mov
shll
cs
pusha
jl
xchg
mov
in
subl
cmp
fdivl
xchg
lock
fldt
and
sbb
mov
movl
push
add
mov
sbb
in
inc
testl
sbb
add
mov
push
fisubl
icebp
pushf
add
jnp
inc
lock
push
movsb
subl
cmp
cli
repnz
pusha
jae
shrl
jns
xchg
aad
sti
rcr
xchg
call
xor
dec
inc
sbb
lret
mov
add
mov
mov
data16
ja
push
nop
and
mov
add
outsl
mov
lea
push
xchg
testl
add
xchg
cmp
push
aaa
in
inc
hlt
mov
dec
in
mov
mov
cli
gs
sti
jg
mov
push
cld
add
ret
ja
lret
clc
push
sti
add
or
dec
inc
imul
pop
fwait
mov
outsb
adc
out
and
xor
lea
mov
ret
dec
inc
xchg
aam
xchg
popf
jo
sbb
popa
enter
divl
test
es
mov
xor
mov
jmp
sbb
loopne
bound
cmp
test
sti
pop
cmp
in
push
dec
pushf
loope
mov
ror
movaps
mov
mov
cs
jmp
xchg
sahf
jle
popa
icebp
sbb
cmp
add
jmp
hlt
lcall
mov
add
dec
in
data16
add
mov
xchg
out
dec
lds
or
cwtl
push
imul
xor
pop
xor
jmp
sarb
xchg
test
ss
ljmp
mov
xlat
les
xlat
lock
rolb
icebp
dec
rcrb
push
stc
fsubp
push
gs
inc
dec
ja
cltd
dec
or
aas
insl
mov
cmpsb
pop
cmovno
je
pop
mov
shrb
fisubs
ss
movsb
add
inc
test
sbbb
addr16
shll
popa
mov
je
mov
pushf
sub
iret
fists
sbb
in
xchg
mov
pop
lcall
rclb
xchg
push
js
lret
sub
jns
mov
pop
popa
mov
aaa
or
push
iret
jp
inc
push
je
push
lds
adc
mov
ret
cltd
icebp
movsb
xchg
push
pxor
xor
dec
and
cmc
jp
mov
mov
sub
imul
insb
push
sbb
movsb
stos
cli
sbb
push
lock
adc
inc
inc
lods
orl
mov
rorb
pop
cmp
xchg
mov
lcall
pusha
add
push
xor
push
fwait
cs
mov
mov
aas
fs
ljmp
push
movsl
add
and
repnz
lds
pop
add
sub
push
pop
mov
ja
js
pop
stos
js
mov
movsl
sbb
or
xchg
nop
push
ret
or
xchg
mov
inc
xchg
or
das
xor
xchg
ret
es
adc
enter
fwait
outsl
jl
out
mov
xor
rcr
data16
pop
movsb
addr16
mov
xor
mov
jge
jbe
inc
cmp
ret
xchg
in
imul
cmc
clc
stos
mov
lcall
mov
ds
cld
adc
stc
cmp
jb
mov
sub
repz
xor
xchg
mov
lcall
insb
das
push
dec
dec
mov
mov
pop
mov
push
mov
mov
xchg
int3
ret
insl
fbld
leave
fisttpll
mov
mov
out
xor
aam
xchg
inc
mov
jmp
push
sbb
insl
mov
and
outsb
fisubl
mov
inc
pushf
in
pushl
test
inc
sbb
xor
jo
inc
mov
fsts
sub
sti
push
sub
cltd
daa
mov
mov
dec
adcl
jp
decl
test
pop
and
aad
in
lret
xor
xlat
pushf
andl
mov
mov
xchg
inc
lds
lcall
cli
sahf
sub
xlat
pop
outsl
mov
xchg
push
pop
movsl
xchg
fwait
int
pop
pop
xchg
xchg
and
add
dec
ljmp
mov
ljmp
pop
insb
jae
dec
sahf
sbb
fidivrl
scas
and
mov
push
xchg
and
mov
adc
xorb
jmp
dec
adc
mov
pop
add
cmpsb
adc
loopne
jnp
add
mov
movsb
push
aad
hlt
mov
andb
loop
testl
fstps
lods
jmp
std
push
mov
out
sub
int
sub
mov
jae
out
cmp
out
pop
mov
sbb
pop
pop
push
sbb
push
loop
cmpsl
cmp
xchg
lods
addr16
inc
sbb
xchg
sub
stos
jb
inc
ja
sbb
pop
sub
adc
das
mov
enter
or
or
pushf
je
mov
pop
aam
pop
dec
sub
daa
mov
and
add
and
lahf
scas
scas
xlat
loopne
mov
lock
adc
adc
insb
cmp
arpl
xchg
mov
push
fcomps
mov
cltd
ja
lea
add
jns
inc
cmp
xchg
fistps
jecxz
inc
cmp
jno
cmp
gs
outsb
mov
or
mov
mov
jno
sti
jnp
inc
outsl
mov
mov
lret
inc
leave
clc
pop
push
scas
sbb
sar
cmp
stos
pop
repnz
faddl
movsb
xchg
lods
sti
out
cmpsl
clc
push
fidivrl
ret
imul
test
stos
jl
jge
in
jne
add
inc
adc
pop
sbb
push
jge
inc
in
and
lahf
rclb
cmpsb
loope
shlb
scas
mov
aas
mov
xchg
enter
rorl
xchg
sub
leave
sarb
jo
cltd
in
data16
dec
xlat
push
or
into
imul
sbb
adc
jl
rorl
popa
cmp
es
pop
sub
outsb
out
aaa
lret
pop
mov
xor
test
sbb
push
test
cwtl
sbb
or
jl
push
push
dec
mov
lea
faddp
mov
add
dec
sbb
repnz
xchg
pop
pop
inc
ret
pop
jg
xor
fidivs
cmpsl
out
jbe
jae
inc
mov
xchg
sub
inc
aad
bound
nop
adc
add
cwtl
sbb
and
out
and
and
std
and
dec
mov
cmp
out
flds
xchg
dec
sub
mov
daa
ja
sbb
lock
arpl
mov
adc
mov
jl
out
subl
mov
sub
mov
inc
pushf
icebp
dec
lret
xchg
pop
leave
mov
mov
mov
test
or
call
mov
jmp
lock
aad
mov
and
mov
jg
inc
and
sbb
test
and
repnz
dec
ret
test
push
push
sub
pop
cmp
sub
push
aam
pushf
into
sub
mov
sub
pushf
jl
add
popf
movsb
mov
cltd
adc
inc
dec
sbb
lret
std
mov
pusha
sub
mov
pop
jnp
mov
lret
sbb
out
xchg
mov
cld
lds
mov
cmpb
xchg
jp
movsl
pop
mov
push
fwait
xchg
pop
pop
stc
or
stos
mov
arpl
jecxz
mov
test
inc
popf
mov
and
enter
movsl
inc
push
fwait
icebp
push
lods
fsubr
xor
xchg
pop
ds
aas
and
leave
jle
pop
cmp
sub
jb
cwtl
adc
repnz
cmp
mov
sbb
and
xchg
out
xor
sahf
dec
xor
data16
xchg
loop
ss
fidivl
bound
pop
and
xchg
stos
loopne
int3
cli
inc
mov
rclb
push
jp
add
pop
lahf
dec
xchg
xchg
cmovbe
bound
fs
mov
not
sub
pop
movsb
inc
jno
cmp
aad
mov
int
dec
push
sub
add
int
aas
rcrb
cmp
xchg
xchg
mov
add
push
mov
sub
filds
std
jns
sarl
es
sti
fwait
dec
mov
popf
or
cmp
adc
cmc
leave
out
mull
sub
testl
adc
loopne
cwtl
cmpb
testl
xchg
xor
xor
jl
addr16
jge
lea
xchg
lcall
mov
push
fnstcw
push
iret
setbe
out
xchg
mov
sbbl
enter
add
push
push
mov
push
movsb
push
ror
idiv
fnsave
mov
push
push
mov
jmp
xchg
mov
out
xchg
loope
inc
push
cmp
mov
sub
xchg
iret
or
cli
lds
fxch
mov
das
int
jae
cmp
insb
jo
xchg
push
dec
inc
stos
mov
and
pushf
data16
dec
fstl
sbb
lret
jmp
fdivrp
and
dec
pop
cmp
cmpb
cmpsl
sahf
test
shll
inc
shlb
lcall
xor
repz
jnp
dec
insb
cmp
test
mov
xchg
pop
ret
xchg
cltd
imul
ds
pop
nop
mov
out
sub
inc
sbb
pop
dec
pop
xchg
xchg
push
mulb
insl
outsl
shll
mov
and
xchg
cwtl
xchg
adc
pop
or
out
pop
ret
sti
arpl
popa
add
push
test
fnstenv
dec
repz
push
popa
cmc
popf
ret
mov
aam
dec
mov
fimull
add
mov
cmpsb
stos
mov
and
push
jae
icebp
out
subb
cmp
xor
push
push
sarl
cmp
mov
shr
int3
repz
dec
inc
jae
scas
cmpsb
adc
out
in
mov
or
andb
shll
xor
in
fstpl
xlat
add
pop
adc
sbb
gs
jle
bound
cli
jmp
jae
sbb
mov
cmpsb
pop
xchg
mov
or
xchg
jo
aas
jbe
add
mov
adc
xchg
scas
and
addl
fwait
mov
and
jnp
xchg
or
push
scas
inc
fmuls
mov
test
rcll
leave
add
adc
adc
in
repz
fwait
ret
cmp
ds
lods
jle
loope
cmp
orl
scas
mov
cmp
xchg
jnp
sub
jmp
sub
loop
mov
out
bound
movq
or
and
mov
inc
test
lret
mov
cmovbe
ror
aam
or
in
and
bound
inc
and
cmpb
or
sbb
pop
xchg
push
fcmove
pusha
scas
pop
out
push
loope
out
inc
cmpsb
push
iret
hlt
xchg
xchg
aam
repz
cmpsb
push
mov
mov
and
mov
dec
addr16
lods
sub
das
mov
insl
dec
cmp
in
sub
pop
test
aam
cld
mov
movsl
mov
jle
add
out
es
les
aam
cwtl
ss
jnp
mov
pop
mov
cmp
lahf
fwait
pause
pop
dec
lret
movsb
lahf
icebp
aas
inc
int
ja
sarl
jl
xor
stc
jp
aad
cmp
inc
pop
pop
dec
cmp
movl
pmaxsw
fcmovnbe
lea
push
jp
mov
les
mov
mov
mov
clc
adc
std
mov
add
stos
jmp
sbb
and
pop
std
int3
mov
clc
hlt
call
std
leave
cld
mov
mov
mov
cmc
cli
sub
add
pushf
inc
mov
mov
scas
xchg
pop
inc
pop
fwait
lods
imul
jg
push
push
cmpsb
in
xchg
test
jb
adc
xor
fwait
sbb
nop
punpckldq
mov
sbb
adc
in
jl
pop
jmp
ficompl
and
lock
fwait
add
test
mov
xor
sbb
jno
popa
cmp
dec
pop
xor
fmuls
inc
outsl
sbb
lds
cmp
push
sub
cs
jno
or
dec
sbb
in
or
inc
repnz
dec
push
and
fwait
xchg
mov
jae
lea
mov
and
movsb
inc
aaa
jne
adc
imull
pop
stos
push
push
jb
xor
pop
xchg
popa
jnp
mov
push
es
or
cmp
mov
mov
pop
fwait
mov
mov
out
jo
fistps
test
iret
out
pop
or
sub
orl
out
sbbl
imul
jle
cmp
jecxz
xchg
jmp
add
scas
nop
lret
gs
cld
adcl
inc
pop
ret
es
fwait
cmp
imul
insb
pop
xchg
add
jge
adc
sbbb
sub
sub
xor
test
scas
xchg
push
xor
leave
les
mov
shrw
pop
dec
and
dec
ss
mov
xor
xorl
mov
sbb
pop
nop
and
repz
cld
jecxz
in
cwtl
aaa
xor
test
cs
aam
pop
aas
mov
fucomip
test
mov
in
mov
xchg
or
pop
dec
loopne
popf
xor
mov
cld
repnz
mov
sarb
sbb
mov
or
xchg
shl
add
jne
leave
ja
outsl
push
imul
sub
mov
cmpb
add
jle
ja
ficompl
mov
gs
lret
or
cmp
xchg
xchg
out
adc
scas
imul
bound
repz
xchg
sub
in
test
daa
outsb
outsb
movsb
push
addr16
int
lgs
adc
out
push
dec
imul
adc
lea
lcall
mov
adc
repnz
mov
sbb
insb
dec
dec
mov
adc
inc
xor
dec
ss
pop
call
int3
in
push
xchg
add
jg
scas
sub
sbb
cmp
pop
mov
leave
cld
jns
push
sbb
mov
gs
cmpsb
mov
call
rclb
or
inc
ret
in
fcmovnbe
push
add
and
ds
shrb
int3
shrb
popa
lea
lcall
pop
pop
and
jns
ret
jbe
sbb
fiadds
or
cmpsl
mov
jg
fsubrl
out
sbb
or
ljmp
hlt
xor
and
push
dec
je
lods
loope
out
icebp
sbb
pop
push
dec
pop
sub
pop
cmp
mov
xlat
push
fst
add
adc
dec
xlat
stos
aad
shll
xchg
sub
dec
dec
out
and
lcall
and
sbb
xor
fsubr
mov
jle
push
ds
mov
adc
push
call
jne
movsb
mov
jo
mov
lahf
sti
and
xor
sbb
lea
or
inc
mov
mov
lock
sbb
jbe
or
ret
sub
jl
push
sarl
enter
xor
pop
imul
sub
sbb
andl
iret
popa
push
sahf
std
mov
cli
xchg
les
aam
inc
push
lds
inc
mov
sti
jmp
loopne
icebp
jae
fdivs
scas
test
pop
lock
mov
adc
inc
leave
leave
test
push
mov
loopne
jmp
xchg
lock
lock
mov
leave
sbb
das
jb
packsswb
inc
xor
or
dec
daa
pop
pop
popf
lahf
xor
mov
mov
push
push
and
xorb
or
je
pop
daa
mov
out
dec
jo
or
sub
in
mov
in
movsb
fdivrs
cld
js
pop
mov
cmpsb
mov
aad
aam
out
sbb
add
mov
xchg
and
fcmovb
push
adc
xchg
xchg
pop
cmp
outsb
jl
inc
sbbl
int
stc
jno
pop
mov
inc
dec
adc
es
xchg
insb
js
mov
insl
push
cmp
push
mov
sbb
pop
popf
mov
inc
lock
cmp
dec
jp
subb
mov
sbb
scas
cmc
jb
test
mov
push
xchg
pop
jle
fptan
sub
xchg
mov
xor
je
stc
fimuls
push
mov
jae
in
cmp
mov
cmp
hlt
imul
clc
sbb
or
stos
jmp
fcomps
jnp
adc
cmp
and
sub
nop
scas
xchg
cli
out
es
cwtl
addr16
xchg
mov
sub
mov
add
test
mov
mov
sub
sbb
fs
pop
sahf
test
sub
adc
push
fistps
xchg
movsb
hlt
or
jl
xchg
dec
les
push
rolb
xchg
mov
inc
fs
dec
jne
cmpsl
push
xor
xchg
sbb
stos
pop
loope
dec
into
scas
jo
cltd
adc
fcomp
sub
adc
fwait
mov
test
mov
add
hlt
hlt
pop
xor
inc
push
pop
adc
push
mov
mov
fstpl
insl
jecxz
pop
mov
mov
and
xchg
mov
mov
pop
dec
xor
lds
pop
outsb
adc
aam
stos
leave
lock
jg
repz
mov
and
add
cmpsb
jmp
mov
mov
xchg
outsb
clc
push
fwait
mov
xchg
mov
test
mov
sbbb
fidivrs
cmpb
scas
push
addr16
stos
std
dec
adc
inc
icebp
lret
sar
push
sbb
ds
mov
and
push
ds
mov
lcall
int3
push
push
add
and
leave
sub
and
repnz
jno
bound
lret
jge
dec
or
xchg
inc
push
mov
mov
cmp
inc
pop
mov
xor
mov
jae
sti
mov
push
mov
jb
sub
imul
sub
jb
cmp
adc
xchg
stos
jle
pop
mov
push
lcall
fwait
sti
or
xchg
jle,pt
inc
inc
inc
dec
mov
xchg
cwtl
cmc
xchg
test
xchg
mov
mov
xchg
sbb
fstps
inc
lods
xlat
add
push
xchg
mov
xchg
pop
sahf
repnz
imul
iret
dec
jp
adc
adc
cmp
orl
mov
icebp
dec
subl
lahf
ja
lea
test
bound
pusha
jmp
imul
cmc
pop
insl
mov
jge
adc
jbe
push
outsl
mov
inc
mov
in
out
xor
fcoms
xlat
and
cs
stc
cltd
push
lods
adc
mov
dec
xchg
in
in
mov
scas
pop
jmp
xor
aad
and
inc
sub
pop
imul
xor
aaa
lcall
loop
lods
daa
or
or
pop
add
xlat
cmp
ja
push
mov
pop
dec
add
fwait
inc
lods
xchg
sub
mov
out
test
cwtl
and
in
inc
inc
xchg
or
cmpsl
addr16
inc
dec
repnz
mov
mov
aas
loopne
xor
push
mov
outsb
push
push
xchg
in
out
jns
fisubrs
xor
and
cmp
mov
mov
ja
xor
sahf
or
push
aam
insb
or
mov
pop
pop
loop
gs
mov
dec
lods
ljmp
rorl
call
shlb
adc
xchg
cmp
push
jg
jl
aam
orl
enter
push
mov
mov
sub
inc
ret
ret
adc
fstpt
jb
lret
pusha
and
je
cltd
mov
addl
xor
aad
loopne
pop
cmp
fstp
outsb
add
ret
sub
inc
sbb
mov
add
mov
xchg
push
jmp
and
rclb
push
push
cmp
int3
sti
inc
jbe
dec
sarl
ljmp
lock
pop
pop
mov
xchg
sbb
test
and
mov
mov
xor
ljmp
jg
cmp
jne
cmp
bound
pushf
test
les
jl
pop
jb
out
adc
call
pop
jmp
subl
addl
jl
pop
pop
mov
jnp
push
int3
push
loope
icebp
dec
mov
jmp
inc
push
push
sbb
dec
pop
push
hlt
mov
loopne
lret
inc
into
gs
insl
cs
pop
inc
movsb
es
shrb
dec
sbb
int3
lret
xchg
pop
sub
lea
cmp
jno
in
imul
and
sbb
and
mov
cmc
pop
sti
jns
jns
icebp
or
aam
loop
nop
pusha
inc
inc
cmpsb
rcr
mov
xchg
stos
mov
xchg
fcmove
mov
mov
movsb
mov
jl
outsb
inc
ret
cmp
lds
dec
xor
xor
cmp
jmp
data16
sub
and
out
jge
cmpsb
pop
arpl
stc
loop
adc
lock
xor
push
sahf
fadd
sidtl
je
lods
repz
push
in
xor
stc
xor
xchg
adc
popa
repz
sti
nop
push
enter
lods
sbb
shll
pop
mov
mov
mov
cmpsb
ret
fwait
loope
repz
aas
cmc
addb
xchg
xchg
testb
faddp
sub
push
sbb
add
stos
xchg
mov
cli
lcall
test
push
aam
test
pop
mov
repz
mov
lods
xchg
mov
jbe
nop
dec
inc
js
jno
xchg
mov
mov
mov
pop
push
mov
rolb
stos
cmp
cwtl
jge
mov
push
mov
push
sahf
ret
int3
xchg
movsl
aas
push
push
inc
sbb
mov
ss
mov
popf
inc
xchg
add
adc
dec
jp
repnz
movsl
into
mov
push
mov
lea
sub
popf
jl
in
in
jecxz
fnstsw
insl
mov
pop
dec
mov
push
push
in
call
loop
pop
dec
adc
mov
lahf
stos
ds
mov
cmp
nop
out
pop
mov
lea
in
dec
addr16
stos
insb
mov
fnstsw
mov
lret
mov
jbe
rclb
cmp
push
add
js
mov
jbe
xchg
and
jmp
pusha
out
add
mov
xor
jg
sub
xchg
sub
jl
decb
push
jns
dec
dec
sbb
aaa
out
mov
pusha
hlt
xor
outsb
jmp
shrl
mov
outsl
xchg
shll
movsb
ljmp
fcoml
adc
sub
xchg
clc
leave
cmp
jnp
mov
mov
imul
push
aas
mov
shlb
test
sbb
or
cli
push
arpl
mov
pop
jns
sbb
push
movsb
into
test
in
sub
mov
or
mov
sahf
adc
sbb
jp
push
sbb
dec
cmp
cwtl
faddl
xchg
cltd
enter
fistl
out
fwait
inc
adc
jae
push
jb
mov
cmp
xchg
imul
push
pop
dec
add
ret
imul
lcall
push
xchg
iret
dec
in
std
dec
dec
mov
lea
push
test
mov
xor
inc
jg
dec
dec
jne
adc
push
stos
and
daa
and
adc
je
addr16
into
gs
lret
push
cmpsb
mov
ljmp
jns
mov
hlt
orl
ret
inc
test
cmp
pop
fcompp
inc
stc
lret
pop
bound
inc
xchg
lret
pop
leave
insb
push
xor
mov
dec
push
fwait
stos
cmp
shl
push
mov
ds
lahf
jns
lret
lock
sbb
xor
push
xchg
sub
clc
jg
jb
insb
push
shrd
fsts
inc
jnp
shll
and
xlat
sbb
enter
call
ja
add
adc
mov
push
sub
or
movsl
inc
stc
mov
sbbb
jns
outsb
testl
pop
mov
add
popa
xchg
cmp
lret
pop
mov
or
outsb
pop
dec
xor
repz
xor
fwait
sub
mov
xor
jge
or
xor
jb
cmp
or
js
cltd
sti
jns
lds
scas
mov
sub
xchg
xor
pushf
or
mov
mov
pop
add
xor
idiv
cmpsl
imul
sarb
mov
mov
out
push
fs
jno
mov
enter
in
lds
and
adc
add
leave
mov
sahf
enter
mov
cmp
shrb
jne
jb
and
ja
stos
in
dec
sbb
mov
fstpt
inc
pop
cmp
push
repnz
inc
loope
sbbl
clc
add
xchg
ret
jle
dec
les
lock
sahf
lods
cmp
add
adc
mov
insb
add
cltd
or
mov
sarl
jle
push
sbb
mov
jb
scas
inc
sub
in
aas
repz
xchg
hlt
into
movsb
add
movsb
stc
xchg
lea
lret
xor
dec
addr16
pop
popf
cmc
jne
call
icebp
adc
ja
or
jmp
jbe,pn
sahf
std
xchg
cmpsl
aam
in
dec
inc
mov
xor
cld
lods
loop
loope
out
mov
cmp
jmp
gs
orb
fs
iret
jne
ljmp
add
or
xchg
dec
int
and
sbb
bound
add
stos
mov
pusha
jecxz
rcrb
jb
adc
rclb
test
cmp
aam
adc
push
lea
inc
lds
sub
jno
jb,pn
outsl
add
popa
xchg
adc
test
sbb
pop
repz
xchg
and
mov
xchg
sarl
iret
jmp
imul
jo
enter
cwtl
rorb
pop
adc
iret
into
lret
dec
sar
ret
int3
mov
fcomps
rclb
ja
sbbb
or
loop
out
test
sbb
sub
lcall
pop
femms
icebp
mov
les
cmp
xor
test
dec
lock
call
add
inc
or
and
lahf
das
pop
or
mov
data16
xor
repz
in
outsl
fmulp
or
jne
pop
jo
movb
in
shrb
mov
mov
es
mov
sub
mov
mov
fbstp
jae
or
jb
xor
pop
sub
mov
mov
cli
and
sub
popa
scas
dec
mov
xor
mov
mov
cmpsl
sbb
ja
sub
sub
inc
das
rorl
adc
xchg
sti
push
push
cmp
jae
daa
jns
pop
inc
test
mov
mov
stos
es
fidivl
cld
cmp
and
aam
fwait
cmp
test
orl
out
jg
sub
rcrl
insb
inc
mov
ljmp
cmp
outsl
inc
std
scas
loopne
mov
imul
imul
add
out
jle
sbb
int3
inc
shlb
mov
pop
sub
lcall
adc
sbb
inc
sbb
rcrb
test
sbb
xor
jmp
xchg
dec
data16
or
nop
jge
jo
xchg
cs
inc
cmp
rcrl
es
jmp
cli
rorl
jnp
imul
cs
fwait
inc
pop
insb
mov
push
nop
sti
add
push
ret
movsl
aaa
loopne
imul
lea
aaa
push
sahf
dec
cs
test
pop
and
stos
xchg
icebp
dec
pop
jo
mov
mov
mov
adc
dec
dec
lock
cwtl
test
jns
enter
hlt
pop
xor
fcompl
or
daa
sub
push
test
xchg
dec
jo
cmp
in
int3
add
jbe
dec
dec
mov
dec
xchg
std
mov
push
mov
fs
das
xchg
sbb
xor
sti
fists
push
pop
es
outsl
lea
ret
scas
add
or
mov
int3
icebp
jecxz
arpl
push
fiaddl
int
mov
fstl
cmp
add
mov
movlps
outsl
call
out
add
fiadds
and
imul
decb
sub
and
adc
sbb
pop
pop
imul
repnz
sbb
mov
mov
mov
jns
scas
add
fiadds
into
inc
jle
xor
inc
jns
aad
pop
data16
fidivrs
pop
stos
test
mov
inc
out
fcom
push
jne
lods
adc
inc
and
lcall
lea
out
and
fdivl
pop
mov
popf
out
daa
addr16
jae,pt
mov
outsb
xor
jae
mov
jb
cwtl
jmp
cmp
xor
xchg
push
cmp
mov
xchg
xor
mov
push
xor
ficomps
add
push
push
mov
or
mov
cwtl
sub
fadds
mov
loopne
push
test
mov
cmp
mov
xor
adc
and
movsl
sti
dec
lret
and
dec
outsb
js
mov
mov
xor
je
dec
fs
shrb
ja
dec
int
inc
out
psubw
jecxz
pop
dec
adc
je
adc
xchg
pop
jge
repz
cli
sub
mul
fdivp
xor
aad
out
xchg
xlat
sbbl
cs
jb
fwait
jle
dec
lds
mull
out
push
dec
push
in
iret
aaa
mov
imul
inc
pop
notl
and
mov
loope
mov
pop
test
cwtl
adc
jle
lds
data16
mov
out
ss
lds
jl
or
icebp
pusha
cmpsl
jg
movsb
ja
mov
ret
push
inc
mov
xchg
mov
popf
xor
or
mov
mov
push
inc
pop
ljmpw
mov
faddp
imul
cwtl
push
ror
push
rclb
and
in
mov
popl
sbb
sahf
xchg
imul
popa
dec
cmp
cli
jno
arpl
mov
scas
fcompl
xor
mov
popf
dec
fldcw
out
pop
pop
leave
shl
push
aaa
xor
cmpb
in
jle,pt
push
stc
je
mov
cmp
mov
clc
push
add
sub
xor
jae
nop
and
clc
dec
das
shl
inc
and
mov
mov
pop
fwait
dec
push
and
or
jge
cwtl
es
nop
push
inc
rcl
or
jle
and
gs
or
mov
and
push
sub
aad
dec
scas
hlt
repnz
aad
cmpb
mov
adc
loope
mov
dec
hlt
popa
je
in
mov
repnz
jne
lcall
xchg
dec
jmp
adc
and
pop
popl
out
inc
cmp
xchg
fnstsw
sub
cmpsl
test
xchg
pop
and
ret
xchg
je,pn
push
or
jno
mov
dec
notb
mov
movsl
push
das
imul
outsl
and
dec
adc
jl
cmpsb
fwait
jno
insb
clc
and
and
ds
dec
pop
xchg
xor
sbb
cmp
jmp
pop
add
pop
movsb
es
stc
jnp
lret
xchg
sub
mov
jnp
sub
cld
scas
repnz
adc
jb
ret
cmp
dec
or
dec
adc
faddl
divl
jecxz
bound
ljmp
mov
and
xchg
in
sbb
xchg
push
cwtl
imul
dec
and
fsubrs
cmc
add
movsb
ficoms
cmp
arpl
jae
pop
pop
add
add
mov
aad
jno
xor
mov
cmp
adc
mov
test
lret
mov
mov
mov
dec
cmpb
adc
popa
lret
insb
enter
subl
aaa
push
outsb
pop
test
mov
pusha
lods
div
ret
add
cmc
outsb
out
or
push
jae
sti
mov
rcrb
mov
lea
cmpsl
or
lods
dec
xchg
cltd
popa
stc
outsb
and
lret
xor
cld
lret
cmp
nop
cmp
jne
pop
push
adc
mov
mov
inc
repnz
mov
out
popa
push
pop
lods
cmp
adc
mov
flds
daa
xor
pop
jle
out
jge
sub
or
jae
jp
mov
jle
aad
sub
das
in
mov
cwtl
call
push
cmc
int3
jno
imul
in
jp
loope
inc
jo
jecxz
sbb
push
inc
aad
aam
mov
repz
xchg
out
enter
popa
mov
out
cltd
xor
stos
mov
adc
std
pop
shrl
cltd
jle
jbe,pt
xchg
sti
addb
add
pop
inc
insb
jnp
push
lods
sti
mov
adc
iret
adc
xchg
out
cmp
mov
fcom
mov
in
push
lret
popf
pop
shlb
mov
add
imul
mov
dec
adc
add
ret
xchg
imul
push
push
or
mov
inc
jp
mov
mov
lods
pop
aaa
hlt
insl
mov
xor
sub
and
sub
mov
mov
clc
sub
ret
loopne
jle
cli
out
mov
sarb
push
adc
xor
pop
test
repnz
out
jp
ret
jns
jmp
mov
arpl
jge
xor
xor
pop
pop
cmp
xchg
mov
mov
inc
pusha
lds
pop
fwait
add
xchg
sahf
stos
sub
imul
sub
mov
mov
aam
jno
fiadds
push
stos
xchg
insb
lret
rep
in
jne
out
cltd
outsl
xchg
sub
out
notl
inc
pop
xchg
sbb
sarl
bound
sti
shlb
mov
std
ljmp
pop
pop
mov
add
or
sub
aad
mov
bound
scas
jg
bound
sbb
mov
xchg
dec
sub
sbb
and
add
pop
fidivrs
sub
popa
pop
ljmp
dec
push
testl
inc
fwait
dec
stc
jno
subb
push
outsl
sbb
in
sbb
lds
cmp
adc
inc
jnp
cmp
addr16
mov
call
pop
mov
push
add
out
mov
les
shrb
jns
mov
inc
or
stc
push
ret
sub
and
cmp
movsb
mov
push
mov
iret
push
and
sub
shll
pop
es
scas
or
outsb
imul
addr16
add
xor
rorl
out
fdiv
fiaddl
mov
popa
das
jnp
and
cmp
mov
dec
push
and
pop
or
or
lcall
xchg
sub
xor
shl
dec
ret
mov
cld
push
add
inc
test
adc
pop
pop
adc
hlt
lcall
push
cmpsb
out
pop
sub
sub
push
xchg
mov
jmp
into
test
mov
pusha
sub
aad
std
jge
popa
movl
cld
stc
lea
mov
ljmp
push
movsl
aaa
and
in
lods
inc
add
incl
repnz
adc
cmp
popf
mov
add
push
sahf
jmp
mov
sbbb
push
jno
push
cmp
jb
xchg
scas
inc
mov
scas
fildl
mov
sbb
repnz
sub
xor
aam
outsl
add
push
incl
aaa
test
rorb
test
add
and
das
xor
es
xchg
jno
jb
stos
inc
mov
cld
fwait
push
out
int
in
adc
sbb
dec
in
inc
cmp
or
mov
adc
leave
cmc
and
in
popa
mov
cmpsl
lods
std
jp
mov
xor
adc
outsl
mov
xchg
mov
nop
sahf
hlt
add
jo
cmp
lock
clc
pop
arpl
dec
pop
imul
cmpsl
arpl
mov
jns
paddd
stos
adc
inc
gs
and
arpl
cld
xor
nop
inc
lds
xor
sahf
add
push
dec
mov
push
rcr
mov
mov
cmpb
jg
cmp
adc
mov
mov
mov
bnd
mov
pushl
std
das
mov
pop
ds
daa
stos
fisubl
mov
push
movsb
fisubl
inc
es
push
das
push
enter
lret
mov
cmp
sub
add
sub
and
mov
clc
pushf
mov
inc
inc
cltd
jmp
and
repz
push
popa
xor
cmp
inc
ss
shlb
mov
and
js
cltd
and
loope
xlat
cmpsl
icebp
int3
aam
jbe
jae
adc
in
mov
or
jle
jns
pushf
out
xor
jl
pop
and
xchg
lock
int
mov
sub
mov
cmp
inc
shlb
icebp
std
or
mov
dec
out
cmp
cmp
jecxz
jbe
ret
jge
add
sarb
loope
pop
inc
push
pop
mov
add
mov
inc
jmp
cmp
mov
lods
mov
jno
std
jge
xchg
lds
mov
xor
mov
mov
js
lea
adc
xchg
jg
adc
rcrl
stos
or
stc
push
rcll
dec
nop
repz
add
in
fdivs
scas
adc
mov
cmp
inc
cli
into
inc
push
mov
pushf
and
pop
mov
es
dec
fldt
sbb
clc
sub
sub
aam
push
sub
sub
jne
paddusw
push
out
xlat
pop
pop
addr16
xchg
popa
sbb
leave
les
stos
dec
incl
cmp
xchg
and
lret
inc
inc
sub
mov
add
into
insl
add
cltd
or
aam
jl
cmc
adc
add
gs
aam
iret
sbb
cltd
in
out
ss
jge
pop
cwtl
jno
adc
stc
ret
cmc
out
adc
mov
mov
data16
xlat
sbb
xchg
loope
pop
mov
ss
into
xchg
sub
roll
jbe
jbe
pop
adc
bnd
int
sbb
mov
mov
jle
sbb
add
cmp
dec
mov
les
roll
xor
push
or
iret
aam
js
jecxz
and
cmp
enter
ljmp
movsb
jo
push
push
mov
es
xor
inc
loop
std
xchg
pop
mov
addr16
outsb
mov
aad
xchg
sub
jp
or
rcr
add
neg
inc
out
sbb
and
pop
jmp
fmull
scas
lret
xchg
ret
jb
in
push
fwait
jle,pn
sbb
es
sbb
adc
imul
adcb
jae,pn
sbb
push
inc
aas
ds
jnp
adc
stc
test
jmp
shrl
and
inc
push
push
lcall
push
in
aas
cmp
push
cmpsb
lods
xchg
cmp
lods
insb
xchg
in
xchg
mov
inc
jl
mov
es
push
int3
cmpsb
pop
rep
ret
lds
das
dec
cmpsl
xor
sbb
dec
xchg
sub
dec
mov
sti
sbb
or
or
insb
lahf
in
or
cmp
jne
mov
dec
lret
sbb
movsb
add
fsubs
imul
and
or
imul
lcall
add
pop
cmp
add
push
ret
gs
add
ret
out
mov
cmp
dec
mov
ficoms
push
imul
xor
jg
dec
or
xchg
mov
out
cmp
outsb
js
fwait
scas
inc
dec
push
jae
stc
fwait
xor
mov
jnp
mov
lcall
pop
push
imul
mov
mov
popa
cmp
andl
cmpsl
dec
cmp
mov
pop
lret
inc
xchg
cmp
mov
popa
mov
pop
repnz
mov
jge
jmp
adc
das
or
in
adc
das
push
fsts
jg
cmp
popa
mov
push
insb
jne
scas
sub
in
mov
ja
fidivl
cli
xchg
cmp
fwait
outsl
into
lcall
imulb
mov
sub
stos
out
xchg
shl
xor
sbbl
dec
inc
mov
push
and
lret
movl
xchg
cmp
mov
inc
add
mov
add
and
mov
push
jecxz
cmc
jl
test
or
mov
or
loop
pop
lret
push
jmp
test
gs
add
push
pusha
mov
push
pop
daa
out
test
nop
scas
repz
mov
std
and
and
adc
setp
movsb
inc
das
jno
adc
les
add
jbe
add
ds
outsl
cmpsb
repz
adc
sbb
pop
shlb
aas
lret
lods
mov
mov
or
jnp
dec
sub
dec
jb
sbb
js
inc
pop
sub
xchg
jecxz
or
inc
stos
jle
sub
push
popa
js
adc
pop
lods
dec
int3
aaa
and
jg
mov
dec
mov
aaa
mov
daa
mov
movsb
xchg
cmp
mov
cmp
xchg
mov
test
cmpb
cmp
fidivs
jo
mov
lock
inc
add
mov
enter
imulb
es
lret
or
xchg
cmp
mov
xchg
sbb
nop
in
dec
hlt
adc
and
lock
ret
push
lahf
jp
orl
xor
sbb
jp
cmp
mov
lcall
jecxz
popa
fsub
xor
push
xlat
xchg
or
fimull
cmc
push
in
jp
aaa
adc
push
rol
roll
and
ret
and
mov
rorb
add
mov
hlt
sub
out
pop
shll
sbb
bound
push
inc
test
mov
xchg
aaa
mov
test
lods
das
pop
or
and
sbb
sbb
mov
fistl
pop
inc
cld
inc
mov
jne
dec
xor
lock
xchg
rcrl
cmp
cld
push
or
xchg
je
cltd
movb
jb
scas
sbb
dec
sarb
mov
iret
xchg
adc
inc
dec
call
adcl
cmpsl
push
xor
inc
xchg
js
xor
dec
mov
xor
jbe
repnz
out
mov
out
lcall
fisubrs
adc
pop
or
mov
cmp
xor
jmp
jp
insb
in
les
cmp
mov
out
cmpsl
jne
imull
mov
test
test
jle
jo
fisttpll
ljmp
sub
out
ret
stos
faddl
cmp
jne
push
mov
lds
or
aaa
lods
pop
mov
pop
fldcw
test
mov
mov
xchg
and
adc
inc
sbb
lds
dec
add
fwait
addb
add
shlb
sub
mov
insb
inc
mov
xor
pop
adc
popa
imul
or
lret
sbb
imul
jmp
pop
mov
xchg
push
xorb
scas
cmp
pop
movsl
mov
jne
arpl
scas
push
jns
sbb
push
dec
jno
sub
adc
jmp
cmp
pop
inc
sbb
or
mov
mov
push
adc
sbb
adc
popa
xchg
dec
ja
xor
repz
lahf
lret
pop
lret
enter
mov
xchg
mov
add
fcomip
cwtl
out
loopne
es
sbb
stos
inc
jge
pop
pop
dec
cmp
rolb
push
dec
xchg
in
negl
sarb
cmp
inc
fidivrs
cmp
sarb
sub
adc
push
ja
stos
inc
shrb
addr16
push
mov
mov
and
inc
cmpb
cmp
inc
inc
inc
xchg
mov
shlb
imul
insb
and
movhps
push
add
out
aas
into
mov
into
sub
inc
arpl
pop
jp
and
inc
inc
mov
rcr
pop
jne
ss
pop
test
cs
cmp
orb
aaa
pop
inc
test
or
rol
sti
aaa
push
push
lock
mov
aas
lcall
leave
push
std
jns
inc
or
xchg
test
aam
pop
and
inc
sbb
ret
adc
in
jl
adc
add
incb
dec
jmp
test
out
sbb
add
and
dec
aam
insl
ds
cmp
pop
xchg
sbb
stc
iret
and
sbb
fisttps
daa
and
iret
mov
sbb
inc
ret
pop
jbe
or
sub
cmp
xorl
push
sbb
into
and
xor
fmull
push
or
and
push
cmp
dec
imul
sub
mov
cmp
call
and
sbb
int3
dec
mov
mov
adc
lds
mov
jno
or
les
adc
test
dec
pop
cmc
je
pop
js
and
fld
sbb
int3
mull
or
sbb
in
mov
jnp
sub
popa
roll
push
mov
cmp
lea
test
or
jecxz
add
js
popa
xchg
mov
push
adc
mov
xor
clc
xor
aad
es
out
leave
out
mov
mov
push
das
lds
shl
add
sbb
or
mov
push
aaa
fnstsw
sub
xchg
outsb
push
jns
dec
pop
dec
dec
leave
mov
stc
add
cmp
push
imul
xchg
fildl
push
jbe
lahf
repz
xchg
cmp
inc
out
mov
xchg
adc
fimuls
aas
push
mov
in
pop
in
pusha
es
jno
decl
std
sub
leave
mov
adc
adc
jl
inc
mov
ss
xor
jl
add
mov
xor
aaa
adc
aas
push
lock
mov
out
cli
inc
adc
add
cmp
jl
xor
test
xlat
sbb
add
test
jnp
inc
push
add
xor
sti
ljmp
psllw
lods
daa
clc
dec
pop
cmp
cli
nop
test
jmp
sahf
shll
mov
mov
arpl
enter
call
add
bound
jb,pn
fadds
mov
lret
or
out
arpl
push
and
shrb
add
ja
mov
xchg
mov
inc
aad
orb
incb
cmp
mov
aas
xchg
faddl
mov
scas
into
mov
mov
pop
popa
adc
ret
gs
sub
inc
mov
jmp
aam
xchg
mov
dec
dec
and
sbb
jne
jg
or
sub
lcall
mov
test
enter
pop
sbb
pop
imul
movswl
cmp
mov
int3
dec
imul
or
into
sti
mov
insb
cs
ficoms
loope
out
sbb
imull
test
aas
bound
hlt
or
mov
out
test
dec
cmp
popf
push
or
xlat
imul
push
cmp
or
cmpsb
or
ret
ss
js
or
divb
jb
fnstcw
sbb
mov
and
pusha
push
inc
ror
scas
loopne
pop
popf
dec
test
inc
push
andb
sbb
out
inc
jle
sbb
mov
pop
inc
lods
dec
js
mov
and
xor
insl
xor
call
push
hlt
sub
daa
jo
lcall
jnp
jae
push
mov
jnp
stos
fsubrp
loop
stc
lods
mov
mov
outsb
jae
sub
sarb
inc
sub
jmp
je
test
cmp
inc
fsubr
push
stos
jb
std
test
xchg
fwait
add
mov
push
push
push
mov
movsb
mov
pop
add
mov
push
jg
or
cmpb
inc
sbb
fdivs
sahf
cld
mov
push
es
scas
jbe
xchg
mov
neg
mov
lock
sub
push
xor
aam
aad
xchg
imul
frstor
cmp
jbe
in
jp
lods
insl
enter
mov
call
jecxz
inc
add
push
andb
dec
sbb
xchg
icebp
aaa
ret
insl
pop
add
gs
mov
popa
mov
adc
jne
mov
sbb
fildll
out
pop
lods
add
mov
lods
lret
fwait
mov
xchg
jge
cmc
mov
faddl
xor
nop
les
roll
rorb
jo
cmpsl
stc
negl
loopne
jle
fcmovbe
das
not
add
and
dec
mov
pop
clc
sbb
out
jnp
aam
movb
mov
fidivrs
xchg
push
xor
pmullw
adc
outsb
pushf
sahf
lgs
mov
pop
fnstcw
lret
ficompl
adc
das
aas
mov
pop
test
add
addr16
repz
adcl
mov
test
pop
push
mov
pop
and
out
outsl
jmp
pop
ds
jl
loope
filds
or
lds
enter
sub
jle
lods
cmpsb
fs
mov
ja
xchg
or
dec
dec
test
dec
sub
and
movsb
push
in
and
ss
lods
jmp
mov
roll
push
sbb
cmpsl
jge
popf
js
dec
mov
or
sub
out
push
std
ss
outsb
cld
xchg
jns
jmp
inc
in
dec
pop
jmp
push
or
in
fldenv
pusha
cmc
xchg
mov
push
cmp
or
push
test
cltd
mov
jo
jle
inc
nop
fs
in
mov
bound
fucomi
push
push
pop
add
mov
cwtl
sbb
and
add
sar
in
dec
hlt
movsb
lahf
imull
dec
sbb
inc
mov
mov
cmp
cs
jp
fcom
cmpsl
add
and
add
cmp
out
add
add
sbb
sub
pop
das
stos
test
mov
daa
jo
mov
mov
add
rorb
sahf
sahf
std
or
xchg
dec
imulb
xchg
sarl
jbe
push
gs
inc
pop
test
xchg
xchg
xor
jl
push
aad
aas
xor
and
xchg
sbb
fnstcw
push
popf
ja
es
cmp
cld
fwait
notb
xchg
push
ret
cld
adc
in
jmp
xchg
pushf
repnz
mov
add
jle
mov
jmp
jnp
scas
clc
dec
pop
fstpl
fs
flds
lds
add
push
pop
push
mov
fcoms
arpl
aam
lea
fnstcw
cli
jp
lock
pop
fstl
dec
adc
pusha
call
xor
ficompl
jb
fcom
dec
hlt
xor
jle
pushf
test
orl
stos
cmp
lahf
ja
es
ss
leave
xor
aas
cltd
adc
mov
pop
shlb
mov
or
mov
arpl
loopne
push
xchg
mov
add
dec
call
dec
stos
fcoml
pop
arpl
fcomps
add
pop
filds
jbe
or
lret
stc
push
roll
in
adc
cmp
sbb
inc
es
pop
fbld
int
mov
filds
sahf
arpl
push
xor
jbe
mov
repnz
push
scas
cmp
ret
vprotb
jmp
js
adc
add
add
pop
test
push
push
push
in
ljmp
xchg
sub
scas
repz
xchg
mov
mov
outsl
mov
negb
push
cli
cmpsl
loopne
xchg
push
stos
jno
mov
xor
das
lidtl
sahf
aas
lea
test
jb
scas
xchg
xor
push
push
xor
enter
jge
adc
dec
call
add
push
or
sbb
in
dec
cmp
into
inc
push
in
cmc
dec
lods
xchg
push
push
daa
and
loope
xor
jle
ret
and
mov
inc
sarb
cmp
pop
test
cmc
jnp
iret
inc
js
mov
sbb
popa
es
mov
aaa
mov
lock
push
arpl
sub
shr
mov
pop
ret
clc
mov
jge
pop
push
cld
shl
outsl
sbb
rclb
call
movsb
imul
dec
mov
sub
push
jmp
js
daa
add
into
popa
sbb
lret
xor
stos
dec
hlt
jmp
std
add
jne
xor
fwait
jmp
je
scas
scas
pop
mov
repz
mov
imulb
or
jg
add
mov
loop
pop
ss
lahf
insb
sbb
push
fdivs
sub
sbbl
adc
test
push
popf
ret
and
repnz
and
sbb
add
cmp
or
nop
hlt
fs
inc
or
pop
nop
or
mov
mov
shlb
sub
jmp
push
negb
les
sahf
sub
jge
loop
daa
xlat
xchg
std
jno
mov
and
dec
lcall
daa
adc
std
jnp
cmpb
stos
incb
lds
sbb
xchg
outsl
pop
dec
push
fs
mov
jle
push
xchg
push
jge
out
cld
sub
push
fstps
cmp
dec
mov
jp
movsl
sbb
in
xchg
xchg
sub
push
adc
addr16
add
mov
mov
inc
push
test
cmp
loop
imul
mov
shll
sbb
rcrl
shr
sub
subb
aaa
mov
adc
out
jns
mov
daa
cmp
mov
jo
pop
call
jo
pushf
mov
mov
testl
test
jo
mov
cli
cwtl
inc
mov
cltd
sub
aas
push
jnp
push
jmp
movl
fadd
jmp
pop
pop
pop
sahf
xlat
jns
pop
insb
inc
xchg
pop
call
cmp
dec
jmp
loopne
jne
inc
cmp
je
jbe
notl
je
arpl
lea
outsb
inc
shll
sbb
and
outsb
jl
push
push
or
push
das
scas
sub
and
outsl
lahf
mov
lcall
pop
popa
pop
mov
std
xchg
addl
mov
cmp
lahf
inc
ds
pusha
sbb
mov
or
adc
adc
lds
or
adc
lods
adc
fisubrs
adc
dec
cmp
loop
clc
insl
jnp
cmpsw
hlt
addr16
mov
ds
xor
sbb
pop
xor
jne
adc
cmp
adc
mov
mov
int
outsb
add
shll
imul
jge
mov
or
mov
cmpsb
add
sub
cmp
xchg
xchg
cld
or
and
jle
jbe
mov
test
ss
adc
pusha
ljmp
mov
jns
and
inc
jmp
inc
xchg
mov
fldl2t
lods
mov
stos
sub
lcall
xchg
subl
mov
pop
adc
in
inc
push
sbb
or
aaa
mov
inc
dec
mov
ret
and
daa
stos
es
in
jge
movsl
or
xchg
inc
notb
adc
fsubrl
mov
rcrl
popf
jbe
pop
inc
mov
or
lsl
fsubrs
mull
mov
cmp
iret
dec
xlat
dec
out
lret
sbb
in
rclb
mov
and
test
inc
lock
ret
clc
in
mov
mov
iret
xchg
negl
or
ret
hlt
xchg
sbb
cs
inc
jnp
cltd
push
push
testl
push
rcll
addr16
in
fbld
push
testb
aam
push
xchg
movsb
mov
push
jne
mov
lods
inc
hlt
idivb
xchg
sbb
fdivrl
mov
inc
dec
in
xor
xor
xchg
mov
hlt
imul
inc
jae
leave
fs
je
sub
scas
cs
mov
mov
je
sahf
adc
add
test
iret
lods
ljmp
shlb
aaa
cmp
dec
clc
xchg
lods
repnz
sbb
sbb
icebp
ss
mov
lods
pushf
jo
icebp
jg
fsubrs
fdivrp
ds
inc
cmp
mov
and
cmp
cmp
cmp
cmp
out
int3
pop
loopne
and
inc
sub
push
inc
lcall
stos
das
adc
pop
lea
ss
pop
syscall
call
mov
cmpsb
mov
subl
scas
lcall
xchg
sahf
mov
scas
adc
mov
and
xor
xchg
lock
pop
out
cli
in
cmpsb
es
rcrb
adc
popf
cmp
xlat
pop
push
jecxz
sbb
xlat
cmpl
cmp
inc
into
fimull
out
cmpl
hlt
mov
mov
push
fs
sbb
repz
pop
dec
fwait
repnz
pop
int
enter
push
cmp
sub
imul
push
adcb
subl
int
cltd
rcr
push
mull
outsb
ljmp
test
adc
popf
push
fwait
mov
roll
push
enter
repnz
cmp
repz
push
iret
mov
inc
sbb
bound
aas
xchg
jp
in
ss
push
xchg
leave
xor
pop
sbb
pop
out
push
fisttps
jo
dec
inc
xchg
jno
inc
shlb
in
ljmp
jmp
and
sub
jne
pop
sti
test
and
fmuls
pop
clc
push
fnstenv
bound
sub
cmp
outsb
ret
stc
jge
es
xchg
cmpsl
adc
cwtl
ja
fstpt
lock
mov
xchg
xor
ds
lds
pushf
aad
jp
xor
xchg
jb
insb
adc
pop
adc
pop
cli
neg
scas
cmp
mov
sub
ds
xor
mov
repz
int3
loopne
jl
lret
fwait
cmpsl
inc
or
add
cmp
in
xchg
out
sub
mov
cmpb
fisubs
ret
std
mov
adc
add
dec
fstps
push
mov
insb
sub
jecxz
mov
fbstp
push
mov
je
daa
ds
dec
add
mov
mov
lahf
xchg
ja
mov
inc
pop
jl
mov
jo
hlt
xchg
and
nop
add
mov
movsl
repz
and
dec
ljmp
fcomps
sbb
daa
pop
testl
flds
fisubl
push
in
ja
shlb
mov
rolb
clc
mov
loopne
jg
int
aaa
outsb
into
push
pop
out
scas
das
inc
cli
sbb
cmpsl
mov
mov
fiaddl
adc
jp
fdivl
pop
mov
mov
and
dec
imul
mov
les
mov
add
cmpsl
mov
pop
mov
inc
sti
inc
addl
addps
call
popf
xchg
lcall
bound
pusha
mov
xchg
leave
sbb
das
or
lods
xchg
loop
sub
cmpsl
xorb
int
bound
sub
les
pusha
xlat
cmpsb
add
mov
fsubrl
jnp
mov
jl
loope
xchg
mov
or
jmp
push
xchg
push
test
xchg
out
test
int
shr
enter
lods
addr16
bt
pop
std
sub
sub
jmp
push
jns
jbe
sbb
xor
cmc
icebp
push
mov
test
lea
xchg
cmc
dec
mov
pop
stos
pop
hlt
sub
or
pop
pop
pusha
lds
jmp
xor
mov
add
into
in
test
xor
popa
nop
mov
push
hlt
mov
or
xchg
fnsave
movsl
cmp
cmp
mov
add
xchg
xchg
xor
fwait
int
lea
push
sub
mov
xor
aaa
ja
mov
cmpsl
int3
dec
add
js
incb
aas
cmc
aaa
test
fnstenv
xchg
add
mov
xchg
jbe
cmpsb
out
sub
scas
rorb
add
cmp
fsub
jecxz
rorl
mov
xchg
mov
xor
push
out
shll
mov
sti
or
xchg
out
out
loopne
xor
adc
rcr
into
shll
fldl
inc
sbb
dec
es
or
mov
es
in
xchg
cmc
icebp
and
sbb
rorb
pop
roll
fwait
out
pop
mov
adc
jbe
mov
ret
out
decl
test
ja
imul
test
xor
shll
mulb
push
and
jmp
push
scas
jb
out
inc
es
xchg
and
inc
cld
stc
add
cmp
xor
lods
sbb
sub
mov
push
or
shll
sarl
xchg
pop
addr16
cmpsl
outsb
repz
mov
add
jg
cmpsl
loop
mov
or
mov
and
mov
rcr
inc
dec
mov
in
je
xor
nop
push
dec
orb
push
mov
testb
leave
daa
mov
and
clc
loopne
push
add
dec
mov
jbe
inc
jmp
mov
xchg
xor
push
mov
pop
std
movsl
loopne
and
out
mov
and
lods
andl
stc
test
shll
movsb
cmp
mov
mov
mov
mov
cltd
repnz
push
and
lods
push
jl
sub
xchg
insl
pop
lahf
cmc
and
sti
lods
cmp
jl
pop
ret
dec
cwtl
insb
mov
aaa
jl,pt
adc
lahf
jl
jp
and
xorl
xchg
loop
mov
sub
lea
test
outsl
xchg
sub
negl
mov
push
lret
inc
add
scas
push
out
sti
and
xchg
into
or
fdivs
dec
adc
ficomps
into
mov
sub
and
cs
pop
push
cmp
inc
dec
outsb
mov
popa
fstpl
add
cmp
add
or
mov
mov
pop
push
mov
cwtl
inc
test
pop
mov
daa
aaa
dec
cmpsb
pcmpeqd
sbb
xor
gs
insl
sarb
aad
clc
sub
xchg
loop
stos
loope
std
arpl
jbe
or
mov
cmp
scas
lcall
pop
stos
fstpl
sbb
mov
push
cmp
sub
adc
jae
push
pop
mull
add
cmp
pop
sahf
mov
inc
loope
xor
pop
sub
cmovae
ficoml
push
notb
test
ljmp
rorb
sub
cwtl
push
fdivrp
mov
mov
call
repz
mov
cmp
sbb
movsl
adc
pop
pushf
cli
nop
push
mov
or
inc
lcall
inc
sahf
in
mov
cmp
lea
inc
xchg
idivb
xchg
sbb
sbb
mov
add
shll
jb
out
push
push
cs
sub
xor
jmp
cmp
movb
int
dec
cmp
outsl
and
test
xor
adc
out
lods
adc
loop
mov
scas
aad
jne
pop
loope
stos
jnp
test
and
fwait
cmp
mov
xchg
mov
add
mov
dec
popa
or
dec
mov
pop
push
mov
cli
and
mov
insl
lea
mov
int
cmpsb
push
and
jmp
adc
or
test
sub
in
lret
and
sbb
dec
insb
mov
add
and
cltd
sub
dec
dec
cs
gs
push
repnz
mov
add
outsl
fs
dec
and
negb
push
jae
jge
mov
xor
jmp
std
adc
scas
add
xlat
jns
and
sub
int
cmc
xor
xor
lahf
lea
rorl
in
pop
stc
out
loop
lock
and
imul
fdiv
add
cltd
sbb
push
push
push
les
push
dec
pop
push
sbb
out
ds
xorl
and
out
sub
push
daa
lcall
cmp
xchg
out
fcmovne
push
lret
xor
ljmp
adc
scas
shlb
xchg
pop
mov
ss
loope
pop
jp
daa
cltd
and
imul
push
ret
sub
add
add
stos
stos
test
mov
das
int
lcall
lds
cmpsb
mov
call
scas
jmp
icebp
sbb
ja
shrb
cmc
js
scas
in
into
pushf
xor
lock
push
mov
mov
out
mov
int
rorl
push
or
orb
jg
jmp
jae
cs
pop
push
sbb
dec
je
mov
mov
stc
je
cmpsl
and
lcall
je
inc
and
mov
dec
mov
lret
gs
adc
movsl
pop
jl
in
and
sahf
cmpsb
lea
jmp
jb
push
mov
fucom
data16
pop
orb
hlt
loopne
int3
mov
or
insl
mov
aaa
fdivrs
jecxz
dec
push
mov
mov
in
sub
sarl
dec
sti
test
cmp
push
adc
out
adc
int
dec
sub
cld
cltd
out
dec
mov
in
rclb
frstor
fsubl
roll
push
shl
inc
es
ficoml
xor
sbb
and
sub
mov
inc
mov
lahf
and
xchg
filds
and
push
fsubrs
push
jmp
sub
push
dec
push
adc
push
mov
inc
rolb
add
mov
sub
shr
ds
pop
push
and
push
adc
shl
cmp
lods
sbb
es
in
xor
jb
dec
mov
popf
push
bound
xchg
mov
ja
into
and
pushf
rcrb
into
test
add
adc
ret
pop
jecxz
and
cmp
add
fmuls
bound
mov
dec
or
pop
sahf
sbb
daa
and
das
enter
es
sar
test
add
pop
pusha
mov
mov
sub
dec
sbb
out
xchg
sub
mov
sbb
xchg
arpl
push
inc
lret
xchg
sbb
inc
cmp
cmp
idivl
add
testl
scas
sub
xchg
push
loop
sub
mov
cmp
mull
jbe
out
inc
pop
sbb
aam
mov
lea
das
divl
push
pusha
aam
rcr
bound
push
insb
xor
mov
stos
jle
or
shrl
mov
jecxz
andl
dec
and
xor
clc
sub
mov
in
das
scas
adc
hlt
pop
mov
stos
std
stos
repz
jmp
jmp
sti
mov
sahf
jno
adc
loop
cmp
movhps
lret
outsl
js
sbbb
mov
fcmovnb
jne
xor
and
inc
mov
ret
pop
scas
aaa
adc
popa
cmp
inc
andl
sub
inc
pop
cs
and
jg
rcl
xchg
push
test
fildll
cmp
stc
lahf
notl
or
outsb
arpl
push
out
sar
cmp
repnz
sbb
mov
and
into
outsb
sub
jecxz
scas
in
mov
out
adc
cmpxchg
cltd
iret
xor
mov
test
dec
jmp
pop
dec
inc
out
ss
xor
loop
xchg
xchg
not
and
mov
pusha
push
cmpsl
sbb
enter
and
and
mov
add
imul
mov
jg
movsl
push
or
push
push
cmp
xchg
sbb
adcb
filds
mov
push
addr16
jmp
ror
add
xor
and
push
sub
push
mov
outsb
or
les
sbb
gs
adc
push
xchg
mov
pop
inc
xchg
outsl
fwait
xor
cltd
mov
add
mov
jns
jle
loope
push
fnstsw
mov
inc
cmp
int
mov
idivl
stos
push
loop
cmpl
xor
lcall
inc
scas
cwtl
adc
out
sub
xchg
dec
add
pop
mov
and
jno
ja
fcompl
sbb
fsub
pop
pop
ret
clc
push
aam
and
imull
cli
cld
and
lea
pushl
jb
loopne
orb
xchg
loope
or
inc
les
pop
adc
xchg
in
cs
and
or
into
xor
cltd
adc
into
out
mov
in
lea
adc
pmaxub
lcall
ja
dec
fsubrl
adcb
dec
adc
push
bswap
cs
dec
faddl
or
xchg
adc
enter
popl
in
nop
mov
push
icebp
push
or
pop
push
out
or
aam
repz
nop
push
repz
xor
stos
pop
dec
mov
andb
insb
sbb
ret
pop
dec
sahf
leave
dec
pop
test
bnd
dec
negl
dec
jo
daa
ljmp
test
jo
or
sub
xchg
aas
mov
outsl
mov
sbb
cmp
test
push
out
pop
fisttps
mov
lahf
add
lock
popa
xchg
xchg
xchg
enter
xor
inc
jb
xchg
xchg
push
cmc
in
jne
mov
xor
fwait
mov
push
add
sbb
pop
pop
lods
push
jnp
mov
xchg
or
and
or
pop
inc
movsl
arpl
adc
mov
gs
mov
outsl
adc
jb
add
adcl
out
inc
gs
fnstcw
or
flds
sub
in
mov
sub
stc
sarb
loope
icebp
adc
mov
dec
mov
fldcw
jge
xchg
mov
inc
call
js
xchg
pop
jmp
orb
ss
inc
adc
add
add
adc
das
call
clc
pushf
data16
shlb
mov
xchg
fs
xchg
mov
push
sbbb
mov
rcrl
repnz
add
fidivrl
dec
mov
lea
jp
xor
lods
call
or
dec
and
mov
mov
dec
cmp
das
outsl
and
and
faddl
jp
dec
fs
imul
and
pop
dec
je
imull
and
mov
adc
xor
add
outsl
daa
dec
pop
aam
fldcw
scas
icebp
icebp
sahf
add
cmpsb
test
stos
xchg
push
je
mov
push
pop
inc
popa
add
outsl
leave
cmp
add
ret
fcmovu
add
mov
sbb
mov
lret
pop
inc
loopne
push
ret
or
gs
push
int
push
lds
and
mov
lcall
dec
dec
pop
mov
pushf
xchg
adc
inc
xchg
ss
out
add
hlt
xorb
mov
sbb
mov
push
or
push
xor
jno
mov
stos
xchg
into
xor
lcall
pop
repz
add
and
or
push
shrl
push
bound
lods
cmp
inc
jmp
sub
mov
sbb
mov
out
rorl
cmp
rcr
xchg
lret
repz
dec
inc
dec
pop
arpl
leave
loop
scas
push
daa
mov
jle
jmp
jnp
jl
pop
xor
test
ja
cltd
je
insb
mov
sub
or
push
mov
xlat
fdivrl
inc
mov
dec
in
les
addl
shll
jno
testb
jne
cmpsl
mov
mov
jo
dec
das
sub
imul
dec
pop
and
mov
jne
add
test
dec
in
mov
imul
mov
inc
fbstp
adc
in
dec
mov
or
push
iret
imul
int3
aaa
jp
jo
rep
sbb
scas
jne
pop
pusha
ds
push
aam
insb
mov
xchg
mov
push
ja
mov
jge
jmp
hlt
sub
gs
les
xchg
mov
push
pop
gs
add
cmpsb
lcall
jmp
stos
mov
mov
mov
cmc
xchg
push
call
sub
and
and
cmp
mov
pop
dec
fimull
mov
and
push
cmp
bound
popa
orb
mov
adc
fiadds
aas
xor
loop
inc
xchg
stos
sbb
rcl
ds
loope
sub
push
push
ja
inc
or
stos
stos
mov
or
mov
jg
inc
rcrl
push
pop
jbe
pop
roll
gs
ja
loope
jbe
addr16
xor
add
dec
dec
cmpsl
or
ret
jmp
mov
testl
stos
xchg
fcomps
xlat
or
insl
mov
or
dec
sub
dec
imul
and
sbb
cmpsb
mov
lcall
rcl
loope
xchg
pop
sahf
mov
fcomp
and
imul
mov
mov
loope
neg
jle
loop
cli
adc
jbe
loopne
in
in
jle
xchg
add
jecxz
push
fcomps
test
repz
xchg
inc
mulb
add
jne
mov
and
jp
cmp
sub
scas
inc
xchg
std
testl
adc
adc
shll
or
arpl
arpl
icebp
aaa
mov
mov
popl
out
sub
sub
xor
lock
leave
arpl
nop
mov
push
pop
std
loop
xchg
jg
inc
fldenv
cld
mov
mov
mov
jmp
mov
scas
dec
add
repnz
push
popa
jae
lcall
out
and
pop
inc
clc
pop
testb
sti
jecxz
fsub
pop
xchg
dec
pop
adcb
pop
filds
movsb
adc
inc
add
inc
mov
idivb
cs
std
int3
cld
mov
sub
out
sets
sbb
xchg
or
int
pop
add
subb
add
lods
cmp
mov
adc
roll
arpl
mov
jae
loope
pop
fsubrl
jne
push
ret
cmp
xchg
add
jne
icebp
insl
jnp
cmp
roll
lret
dec
sbbb
outsl
inc
enter
rcrl
inc
sahf
cmc
scas
into
adc
xor
shrb
dec
mov
mov
mov
mov
push
mov
mov
lahf
fnstenv
pop
fimull
clc
inc
pop
jecxz
jg
fsub
inc
xor
daa
stc
hlt
or
ror
ja
shl
je
lods
inc
xor
into
jge
clc
and
js
inc
mov
mov
mov
mov
jb
or
mov
jle
inc
loope
int3
js
pop
xchg
rdtsc
inc
neg
push
and
xor
pop
push
inc
xchg
in
xchg
test
cld
fstl
ret
ret
scas
sarb
repz
scas
incb
xchg
repz
sbb
or
add
ret
imul
aaa
sahf
push
lea
mov
gs
and
and
aam
xchg
dec
mov
jb
rcll
sub
sub
out
cld
lret
mov
shrl
push
inc
sarl
dec
push
stc
and
int3
imul
aam
ret
inc
xchg
inc
xor
out
insb
subb
inc
popf
jg
xor
cld
shrl
push
xchg
sbb
jecxz
shrl
push
addb
mov
mov
cmp
sbb
and
int3
std
and
push
loopne
aas
call
dec
add
scas
in
cli
sbbb
jno
mov
dec
cld
cmp
mov
test
or
aad
inc
cmp
rcll
xchg
sbb
hlt
outsl
dec
mov
mov
xlat
roll
scas
ret
mov
adc
out
sbb
pop
dec
in
je
loopne
addr16
out
mov
ret
xchg
mov
jl
jmp
push
imul
mov
arpl
sbb
scas
adc
push
xchg
loop
jno
xchg
pop
or
xor
pop
push
mov
stc
mov
outsl
mov
lock
fstl
mov
mov
in
mov
lock
lods
add
dec
es
ljmp
in
lret
fldcw
ljmp
sbb
sbb
push
out
into
mov
mov
fwait
push
and
adc
dec
lods
ljmp
pushf
cmovae
adc
roll
pop
sub
rcr
mov
or
das
mov
xchg
mov
jmp
sbb
sbb
sbb
mov
xchg
je
ljmp
mov
sbb
dec
xor
lock
sbb
sbb
mull
fwait
in
cmpsb
sbb
or
int
dec
dec
xchg
lahf
fidivrl
in
cmp
jno
and
bound
ja
jb
add
add
adc
cmp
sub
scas
hlt
sub
mov
gs
ss
inc
das
xor
in
addr16
cmpl
sub
add
popf
jbe
or
cmp
int
and
push
jne
cmp
stc
dec
lods
dec
dec
mov
sbb
fsubrl
push
or
push
hlt
mov
push
mov
or
notb
mov
mov
inc
pushf
xor
jo
cmp
testb
inc
sbb
out
daa
pop
xchg
in
or
ret
sub
sub
inc
fstl
and
xchg
insl
outsl
add
jp
daa
in
addb
or
lret
sub
inc
lds
cmp
je
and
jg
or
in
in
rcll
data16
scas
dec
adc
push
in
jg
insb
cmp
mov
push
popf
scas
lcall
popa
out
inc
pop
scas
cli
xchg
pop
sbb
pop
push
js
xchg
out
loop
xor
mov
ja
sti
je
test
lahf
xor
addr16
mov
out
adc
sbb
pop
loope
aas
and
and
lahf
hlt
icebp
mov
cmp
shlb
ljmp
inc
jecxz
data16
mov
jl
out
repz
inc
mov
lds
mov
jns
ja
sub
sbb
ret
call
ss
fbstp
add
arpl
pusha
out
lret
mov
sbb
push
outsb
enter
cltd
or
loope
cmp
xlat
es
fs
imul
cmp
push
sbb
test
sti
das
cmp
dec
dec
pusha
pop
jae
or
imul
pop
push
sbb
testl
inc
sbb
jecxz
jno
std
jns
imul
lret
xor
icebp
es
sbb
push
iret
add
push
scas
orb
pop
and
jnp
sub
mov
imul
dec
sbb
push
xchg
jmp
adc
out
or
inc
int
cs
pusha
xchg
std
push
adc
mov
fcoms
mov
in
outsb
dec
xchg
shlb
jno
mov
ss
imul
xchg
jmp
or
mov
imul
mov
mov
cmp
push
sbb
test
out
fistpl
dec
iret
fwait
popf
cmp
add
int3
mov
sbb
aad
sub
lahf
mov
lods
jg
ficompl
fsub
aad
pop
xchg
and
adc
mov
xor
loope
repz
fldt
pop
dec
and
xchg
rolb
mov
xchg
jbe
cld
mov
jbe
jge
inc
es
mov
roll
mov
shrb
lret
loope
or
addr16
sahf
xor
jnp
into
and
push
mov
out
imul
imul
iret
xchg
add
adc
pusha
xor
pusha
test
mov
mov
imul
pusha
dec
xor
mov
lahf
cmp
inc
aam
sub
xchg
or
dec
lods
lea
mov
lock
bound
cmc
jmp
or
or
dec
xchg
jle
outsb
in
and
inc
sub
lahf
xchg
lock
mov
inc
cmp
pop
aam
pop
sbb
int
xchg
adc
sbb
sbb
fsubrs
int3
loope
add
ljmp
sub
aam
xchg
into
into
mov
outsb
push
add
jecxz,pn
cld
xchg
jecxz
lcall
dec
and
and
mov
xchg
mov
pop
insl
dec
cmp
ret
sbb
inc
pop
sub
pop
sub
sbb
inc
xor
mov
imul
gs
inc
stc
mov
jge
notb
sub
jge
mov
fadd
adc
es
push
aaa
sbbb
test
out
orl
imul
inc
movsb
repnz
dec
xchg
xchg
lcall
dec
xchg
add
jb
pushf
lcall
out
sbb
out
sbbb
xchg
dec
adc
push
adc
add
les
sub
pusha
mov
mov
inc
jmp
xor
adc
jnp
push
and
and
mov
push
sbb
and
lcall
xchg
xchg
std
xchg
in
fisttpl
inc
fstl
pop
pop
inc
mov
inc
aas
insl
sub
push
fidivrs
cmc
lcall
and
push
aaa
aaa
out
out
mov
stc
imul
ja
loopne
lahf
lret
adc
cmp
push
sbb
loop
test
jl
loope
or
dec
pushf
sbb
add
in
and
cs
sbb
push
jle
pop
xor
rcr
xchg
mov
xor
jno
add
mov
push
push
cli
imul
loopne
xor
ljmp
pop
dec
add
dec
ret
in
xchg
mov
cwtl
roll
mull
fisubrs
repnz
jmp
cmpsl
subl
inc
jl
mov
and
pushf
push
call
jg
sbb
inc
sub
pop
icebp
add
jns
bound
inc
fstl
mov
loopne
sar
pusha
push
sub
imul
and
and
out
call
xchg
sub
mov
shll
mov
test
push
pop
lea
ja
out
and
xchg
adc
sti
sbb
or
call
outsb
in
lcall
lahf
test
mov
xor
cmpsb
adc
pop
faddp
outsb
in
out
cli
pop
push
xor
fucom
adc
mov
lahf
cmpb
xor
cmp
ret
ret
sub
fdivl
lcall
or
cmp
or
hlt
jg
mov
loopne
dec
fstps
dec
inc
mov
ljmp
mov
shrb
adc
jnp
pop
fisttpll
clc
or
cmpsl
xchg
imul
push
rcl
and
push
gs
loop
or
jbe
pop
push
mov
or
mov
mov
test
add
testb
inc
and
mov
rcrl
pop
es
ja
sbb
outsb
cmp
stos
push
test
or
iret
mov
push
mov
cmpl
inc
mov
jl
add
pop
xchg
jge
enter
fwait
lret
cli
add
fbstp
in
push
out
adc
cmp
cld
jbe
loope
aad
adc
sub
ret
sub
stos
sar
bound
stos
imulb
fnsave
fsubl
repz
aaa
cli
and
arpl
push
insb
int3
sub
mov
aas
ret
fdivrs
stc
cmp
sbb
mov
push
push
movsl
inc
xor
adc
jno
fs
fbld
lea
jno
repnz
outsl
xchg
jl
jg
popfw
dec
les
adc
and
push
fcmovnu
arpl
mov
popa
push
in
mov
push
or
fnclex
insl
rep
or
mov
mov
add
enter
mov
pop
popa
insb
fistpll
sub
push
into
dec
mov
xchg
sub
cld
repnz
adc
mov
pushf
sub
xchg
pop
cli
dec
out
cs
test
mov
aas
and
mov
sti
fisttps
jecxz
adc
xor
hlt
fisubrs
insl
push
jmp
adc
sub
das
sbb
out
inc
and
nop
mov
adc
inc
cmpsl
jecxz
ja
and
push
popf
dec
xlat
add
sbb
jo
roll
lds
mov
adc
cmpsb
cmpsb
xor
xchg
push
pop
dec
adc
aaa
pop
push
je
aad
scas
std
mov
mov
ss
aaa
das
or
pop
push
aad
xchg
xor
dec
outsl
inc
add
out
pop
outsl
out
jmp
sbb
jbe
outsb
mov
xchg
adcl
or
mov
into
cmp
add
std
mov
and
addl
sub
inc
pop
dec
cmp
vsubsd
test
xchg
sub
and
iret
jmp
addr16
or
adc
iret
in
fnstcw
sbb
test
movsl
jo
add
fidivl
cmp
bound
sub
jbe
test
jae
ret
mov
cli
mov
cwtl
dec
inc
push
xchg
mov
pusha
sub
adc
aas
out
nop
pop
ds
loop
pushf
pop
aad
xchg
loopne
mov
movsl
mov
fcoml
sahf
mov
fmuls
mov
xor
outsb
lods
mov
inc
aas
dec
sar
sti
dec
out
cmp
clc
leave
inc
xchg
in
sbb
arpl
cmp
icebp
cs
cs
fistpl
xchg
mov
stos
push
xchg
pusha
mov
cli
push
mov
xchg
movsb
push
push
outsb
sarl
dec
or
pop
mov
xor
jecxz
pop
and
mov
mov
ss
inc
imul
sahf
xchg
repnz
xchg
or
pop
cltd
dec
rorl
lods
or
dec
popf
movsb
mov
js
mov
repnz
repz
push
insl
cmp
fucomip
sahf
shll
mov
out
mov
out
jns
outsb
out
lahf
sbbl
stos
mov
out
and
jp
shrl
lds
fs
pop
and
xor
aaa
dec
pop
test
scas
sub
pop
add
fdivl
jge
jecxz
sub
pop
mov
stos
out
sub
jae
adc
add
popf
adc
aas
xchg
nop
xchg
into
sarl
out
sarb
jmp
xchg
pop
sahf
lds
stos
mov
mov
scas
fdivrs
stc
mov
mull
pop
xchg
clc
aad
and
xchg
fistps
xchg
lods
and
mov
jp
aad
mov
cs
mov
stos
xlat
mov
inc
mov
lock
mov
push
loop
sbb
jp
cs
lock
imul
cmp
ficoms
lock
and
rorl
fs
mov
push
dec
push
sahf
fs
insl
fldenv
xor
adc
loope
xor
rcll
loope
sarl
popa
pop
push
mov
xor
dec
mov
lret
xor
rcrb
in
mov
mov
pop
dec
xor
xor
push
test
stc
scas
fdiv
inc
call
adc
stos
push
mov
sbb
cmp
insb
xchg
repnz
lods
fnstsw
divl
repnz
jns
roll
jnp
std
pop
out
hlt
ss
mov
movb
mov
jmp
xor
sbb
sbb
nop
data16
out
mov
xlat
pop
ds
iret
popa
inc
pop
insl
sarb
xor
aas
mov
dec
xchg
inc
lock
mov
fldcw
scas
arpl
leave
mov
ret
mov
mov
lock
lods
pause
and
dec
cmpsb
scas
out
idivb
call
shlb
mov
aad
iret
jae
lret
jne
mov
lcall
ss
jne
rorl
or
clc
fldcw
mov
or
sahf
dec
mov
test
mov
and
in
scas
ret
add
in
jle
adc
in
out
and
clc
pop
in
jl
xor
jge
lods
daa
int
sbb
push
jecxz
nop
dec
scas
ja
out
bnd
mov
xchg
ret
fidivl
fcmovnu
inc
adcb
jns
or
sbb
js
cmp
jae
test
and
pop
xlat
ret
sub
push
mov
insb
jecxz
dec
pop
fimuls
cs
jmp
push
adc
lock
mov
pop
xor
cmp
icebp
xor
ds
fists
xchg
or
push
cli
into
jge
daa
aad
add
add
cmc
pop
jne
sub
pop
movsl
adc
adc
cltd
xor
and
mov
aam
jae
pop
pop
jecxz
in
xor
sbb
xchg
jns
pop
add
pop
into
sub
mov
les
sbbb
imull
cmc
cvttps2pi
jp
sub
test
loop
lahf
mov
ror
dec
push
outsl
fsubr
test
ss
pop
aam
sbb
xchg
add
sub
lret
jo
bound
repnz
add
stos
mov
pop
mov
rcrl
pop
icebp
shll
sarb
dec
icebp
fwait
cmp
mov
mov
cmpsl
scas
mov
repnz
mov
mov
pop
addb
sub
push
xchg
dec
dec
push
std
mov
xchg
xor
ss
push
pusha
out
loop
xchg
jl
pop
das
dec
testl
xchg
xchg
mov
dec
not
jb
lods
sbb
lcall
sub
lret
mov
cmp
rcl
fidivrs
mov
shl
sbb
pop
repz
dec
sub
jp
xor
and
jnp
or
cmpsb
in
nop
enter
fld
gs
and
testl
pusha
ror
jno
mov
jne
xor
aaa
hlt
gs
cmp
pop
ret
push
es
jg
pop
dec
popf
ljmp
hlt
sahf
cmp
xor
insb
sbbb
adc
dec
movsb
inc
add
movsl
movntq
push
xchg
out
sbb
inc
sub
ret
out
mov
add
out
popfw
add
rorb
jbe
shlb
push
je
pusha
ljmp
mov
mov
xchg
add
mov
imulb
test
mov
fsts
mov
insb
or
jp
and
fstpl
js
subb
jbe
xchg
popl
sub
xchg
lahf
inc
pop
jp
push
fdiv
fdivl
imul
insl
test
icebp
movsb
shll
sahf
inc
push
mov
out
xchg
mov
nop
fdivl
or
pop
xchg
inc
dec
jno
pop
add
ret
jbe
mov
inc
cmp
sti
in
sub
loop
mov
mov
pop
test
or
cmpsb
xor
pop
scas
ror
adc
ss
dec
fs
cwtl
xor
mov
add
fsubl
mov
insb
xor
out
and
adc
sbb
adc
test
cmp
sub
jecxz
inc
xchg
xchg
loopne
or
popl
xlat
push
mov
pop
and
addr16
mov
mov
into
add
jle
adc
dec
xlat
mov
mov
movsb
push
addr16
and
fcom
fimuls
push
or
cltd
push
dec
dec
push
xor
or
xor
sbb
cmpsb
mov
and
pop
jb
sbb
ljmp
mov
js
pop
std
push
mov
cwtl
jnp
in
hlt
sbb
lods
lret
xchg
xchg
addb
cmp
das
inc
daa
ss
fsubl
and
push
pop
subb
sbb
iret
fs
dec
xchg
inc
mov
dec
aas
or
loop
jns
or
xor
int
das
addr16
stos
cmpsl
rcl
cli
arpl
xchg
sbb
sahf
jg
lds
mov
insb
pop
add
push
xchg
mov
add
into
ret
mov
aad
add
jbe
sbb
cld
divb
loope
data16
xchg
jb
data16
cld
adc
push
dec
pop
sbb
inc
addr16
arpl
sbb
xchg
in
jmp
iret
jae
hlt
scas
mov
jg
lahf
jbe
mov
jb
or
add
mov
and
and
pusha
jne
dec
testb
lods
push
jb
mov
xor
movsl
inc
push
fadds
jnp
mov
mov
mov
mov
xchg
lret
inc
scas
push
rorb
pushf
sahf
add
pop
aam
cld
cmc
xchg
and
inc
or
pusha
pusha
popa
es
or
aam
int
ss
cld
jae
jecxz
aas
sub
pop
or
subb
push
cmp
cmc
add
outsl
pop
pusha
mov
add
add
into
ja
out
inc
mov
cmp
adc
and
pop
lds
movl
dec
jnp
pop
jae
scas
dec
test
jns
inc
lods
in
push
rorb
xchg
iret
stos
les
mov
outsb
outsl
cmp
or
popa
and
jmp
sbb
cs
in
dec
mov
inc
es
push
in
mov
xchg
cli
dec
outsl
int
cmpxchg
xchg
sbb
xchg
test
mov
out
mov
scas
cmp
addr16
sub
xchg
inc
lods
filds
xchg
cmp
push
test
roll
loopew
push
xor
cs
and
pop
les
int
xchg
mov
and
aam
insb
outsb
ljmp
sub
call
sub
xor
adc
es
jg
popf
add
sar
mov
xchg
pop
mov
sbb
jle
sbb
addb
mov
incl
xchg
pusha
sahf
sbb
xor
push
out
jnp
cmpsl
fsts
push
inc
mov
push
sub
adc
notl
insl
jge
inc
add
and
out
bswap
es
push
sub
cli
mov
stos
fwait
inc
outsb
lds
mov
icebp
jg
mov
jp
sti
jle,pn
inc
sub
mov
mov
lcall
in
out
mov
aaa
push
mov
adc
scas
xchg
test
shll
lret
xchg
in
mov
shl
jge
out
notb
scas
sub
fnstsw
xchg
test
xor
mov
mov
push
leave
out
sbbb
popl
subb
pushf
fistpll
rcrb
add
inc
push
jge
daa
push
sti
adc
lret
scas
add
call
sbb
in
push
in
sbb
pushf
test
cmp
aaa
mov
mov
mov
sti
push
cmpsl
dec
jecxz
inc
popf
adc
ror
pop
inc
xorl
mov
mov
pushf
sbb
dec
adc
neg
aad
testl
arpl
shlb
std
outsb
js
adc
xor
or
loop
pushf
mov
jnp
adc
outsl
cld
fwait
push
dec
arpl
push
inc
out
outsl
pop
cmp
cmc
das
mov
add
out
shll
test
add
push
mov
and
adc
cmc
in
test
dec
or
aas
cmp
or
addl
xchg
scas
pop
scas
jb
push
and
in
cmc
dec
sub
daa
or
popf
inc
jl
cmp
in
push
mov
mov
cld
cmpsl
mov
pusha
jecxz
imul
adc
rorb
mov
push
xor
cmp
sub
xchg
daa
daa
jecxz
mull
scas
mov
sub
xchg
jns
aad
movsb
mov
adc
sbb
push
insb
sysexit
inc
mov
mov
call
pusha
adc
stos
mov
and
xchg
int
or
into
outsb
dec
pop
or
xchg
mov
jns
push
xor
mov
cmpsl
cmpb
lret
push
xlat
dec
cmp
xor
adcl
ljmp
inc
inc
ljmp
pusha
jle
iret
jno
xchg
es
icebp
cld
dec
push
ljmp
fistps
jns
dec
scas
mov
cmp
mov
repnz
push
pop
lcall
out
pop
scas
sub
addl
adc
lods
sarb
mov
adc
lds
xchg
jmp
inc
lret
faddl
lea
push
bound
jno
and
fisubrs
jmp
cltd
arpl
xor
push
vorps
lock
addr16
nop
inc
add
gs
xor
pop
xor
jae
ljmp
loope
out
mov
hlt
jae
and
adc
loopne
pushf
imul
jmp
aas
cltd
push
aas
or
sti
outsb
pop
jne
cmc
dec
sbb
popa
shlb
das
and
cmp
das
xchg
fstpl
decl
mov
push
and
mov
mov
addr16
adc
jno
ja
cmp
mov
notb
mov
add
lock
fisttpl
add
in
mov
xor
add
mov
jae
and
xchg
sti
dec
cwtl
jge
jnp
xchg
rorl
xor
sbb
imul
push
jecxz
xor
test
xchg
push
xchg
out
sbb
adc
mulb
cmp
outsl
push
ljmp
xlat
cmp
xchg
pop
leave
dec
lds
jge
mov
call
sbb
dec
loopne
es
mov
cwtl
ss
sahf
push
mov
sbbb
and
adc
cli
dec
or
mov
add
jo
sarb
inc
outsl
fidivrl
cmc
push
mov
dec
push
enter
jne
cmpsb
sub
cmp
lods
in
push
cmp
sub
enter
jo
xchg
or
lcall
inc
xor
idivl
jg
sbb
mov
out
fwait
xchg
shrl
addr16
repz
loop
inc
in
rcl
jg,pt
sahf
jmp
cmp
je
lock
sbb
push
lds
pop
leave
cld
fwait
mov
out
fprem1
inc
mov
loopne
mov
test
ja
add
movsl
cmpsl
lock
sbbl
mov
jl
mov
and
push
xor
push
xlat
cmp
stc
rcr
pop
xchg
inc
push
mov
test
ja
mov
test
mov
outsl
test
out
sub
inc
stc
mov
dec
cmp
rolb
inc
ret
outsb
js
or
and
call
je
ret
jmp
mov
nop
sahf
dec
stos
addr16
mov
sub
push
lods
and
adc
adc
mov
ret
xchg
lods
push
dec
imul
ja
mov
sbb
dec
or
paddusw
out
mov
sarl
push
popa
pushf
jno
stos
ret
in
mov
movsb
xorl
and
sarb
aad
and
xchg
aad
jns
and
ret
sbb
push
movsb
push
aad
out
std
xor
and
loop
xchg
mov
sub
sub
js
push
and
iret
out
int
fidivrs
push
pop
or
jbe
mov
inc
sub
es
aad
mov
mov
lods
clc
inc
push
std
adc
pop
fs
jmp
xchg
xchg
cmp
cmp
stos
dec
je
int
int
je
addr16
clc
adc
test
pop
or
stc
in
leave
test
jle
jns
sub
sbb
inc
ret
mov
jl
dec
and
loopne
push
and
insl
insl
in
mov
test
adc
ret
xchg
jns
mov
pop
xor
leave
loop
xchg
inc
jecxz
nop
jp
add
ss
cmp
pop
or
sbb
and
cli
jno
fldl
xor
lds
xchg
cld
int
pop
pop
adc
lea
inc
filds
xlat
and
sarl
mov
loop
lahf
xor
pushf
adc
jns
lcall
mov
mov
pop
daa
sarb
cmp
or
inc
fs
xor
add
dec
adc
inc
inc
call
mov
push
add
inc
or
mov
jne
sti
or
daa
sub
insb
or
adc
adc
add
dec
into
into
jo
shll
pop
ss
add
dec
dec
sbb
sub
xchg
add
insl
jb
mov
push
mov
fwait
gs
scas
orb
add
or
out
inc
cs
pop
add
add
jne
cwtl
xor
test
mov
scas
rclb
xchg
out
xor
addr16
in
add
daa
sub
in
mov
cmp
fbld
pop
inc
and
or
sti
adc
xor
inc
or
adc
lcall
xchg
test
fildll
cltd
inc
add
mov
test
ja
jle
lret
into
cmpsl
cmpsl
sahf
mov
jo
sub
stos
dec
mov
xchg
test
pop
xlat
lahf
ss
arpl
mov
dec
in
aad
adc
roll
sub
jle
notl
ja
mov
sub
pop
inc
push
sub
aaa
mov
adc
and
add
pop
dec
fdivrs
cmp
mov
xor
sbb
adc
mov
or
cmp
pop
out
lds
inc
mov
xchg
push
rclb
mov
sub
out
out
push
xor
divb
arpl
popa
and
or
sahf
popf
js
jge
and
mov
ss
or
cmp
add
pop
cmp
out
add
dec
sub
jecxz
addr16
dec
out
sti
xchg
inc
cmp
test
jl
inc
pop
or
mov
cmpsb
jle
sbb
jne
cmpsb
and
lods
or
fcomps
xchg
test
jnp
cld
sub
add
add
subb
pop
cwtl
movsl
shrl
and
insl
jns
jl
out
ret
cmp
xor
into
aaa
into
sub
dec
or
jl
test
xor
out
ror
mov
mov
sahf
loopne
mov
mov
and
push
add
mov
ljmp
clc
mov
jns
mov
out
sub
adc
je
xchg
fidivl
out
mov
cld
add
dec
stos
clc
stc
stos
insb
sub
addr16
inc
xchg
pop
out
and
movsb
lods
mov
rcrl
iret
and
mov
cmpsl
imul
bnd
jg
cli
aas
mov
or
mov
shlb
cmp
dec
inc
jmp
sub
ss
movsl
jbe
mov
das
in
xor
and
pop
imul
sbb
sbb
xor
or
jns
xchg
mov
mov
pop
pushf
cmp
icebp
mov
push
bound
adc
mov
jge
xor
sub
mov
mov
jmp
push
ja
clc
adc
adc
xcrypt-cbc
cmpsl
push
jp
int
push
call
xchg
bnd
xor
idivb
or
loope
ficoml
dec
sahf
cli
adc
pop
outsl
mov
inc
cmp
push
shlb
xchg
jmp
sti
mov
sbb
fildll
aaa
or
mov
cltd
filds
frstor
lea
push
sub
mov
ds
adc
jp
jle
aam
push
dec
or
lods
shlb
xor
jns
aas
in
xor
pop
mov
sub
addr16
jecxz
sub
push
shll
sbb
mov
or
xor
xor
add
sub
inc
pop
in
or
lea
sti
in
mov
jmp
or
pop
ja
popa
push
mov
inc
and
cmp
inc
jne
adc
xchg
xor
call
jbe
jb
push
stos
mov
aaa
cmp
pushf
mov
ds
dec
mov
rcr
cmpsb
adcl
push
sub
jno
xor
ret
nop
dec
sub
cwtl
insb
nop
mov
inc
mov
lods
push
int3
daa
fsubrl
call
sbb
insb
or
loope
cs
shlb
out
xor
rol
cwtl
add
shlb
cs
imul
dec
pop
push
fdivp
inc
adc
mov
adc
icebp
cmpsb
scas
aad
push
push
std
pop
fisttps
xchg
mov
fs
cwtl
inc
dec
fstpt
jbe
out
jmp
subl
movsb
lock
push
pop
inc
popf
test
pop
cmpsl
fidivrl
jb
pop
cmp
nop
movsl
shrl
xchg
mov
iret
cmpsb
pop
mov
xor
scas
pop
adc
js
cmp
pop
dec
push
cwtl
push
inc
inc
jns
dec
in
hlt
pop
enter
js
or
mov
xchg
push
dec
jo
xchg
jne
xchg
and
add
dec
mov
xchg
cltd
push
fcmovne
dec
mov
jecxz
mov
jle
stos
divb
imul
stos
sbb
dec
push
jnp
xor
fs
aaa
mull
jecxz
lret
cmp
add
mov
cmp
sti
in
xor
mov
das
popf
inc
sbb
lahf
aas
xor
shlb
sahf
mov
arpl
push
xchg
xchg
push
jecxz
scas
adc
jns
roll
test
xor
rcrb
lahf
mov
dec
sbb
mov
in
mov
or
xchg
xchg
subb
xchg
jno
xchg
sti
frstor
popf
pushf
cmp
add
push
xlat
mov
div
add
popa
jl
xchg
mov
push
push
jnp
in
inc
pop
aas
fdivl
je
inc
dec
insb
xor
ficoms
movsb
inc
imul
sahf
sub
sub
mov
push
sub
or
push
repnz
popf
push
in
adc
and
cltd
sub
mov
adc
pusha
push
xchg
aad
jne
in
shl
sbb
inc
ret
sbb
mov
or
pop
pop
outsb
dec
push
ss
or
mov
dec
lods
out
shl
stos
cwtl
stc
loop
popf
jne
xchg
cmpsb
andl
decb
out
or
push
and
fs
push
mov
sub
mov
sti
sub
jne
sub
mov
fucomi
push
dec
in
mov
add
in
std
xorb
iretw
cmp
popf
lods
and
ret
sub
sbb
pop
out
imul
mov
mov
push
mov
dec
sbb
fildl
rcrb
mov
mov
inc
jmp
pop
outsl
inc
fisttpl
ret
fidivs
cmp
int3
push
addr16
mov
jo
xchg
inc
inc
call
out
test
mov
add
jb
mov
fistl
data16
rcr
xor
jnp
sub
enter
and
shll
loop
push
stos
mov
int3
popa
push
out
cmpsl
mov
and
sbb
mov
jb
push
gs
jmp
in
cld
add
pop
or
fs
xchg
in
pusha
mov
xlat
or
mov
inc
pop
enter
lods
rcrb
jno
ljmp
das
mov
fdivr
pop
pop
xchg
dec
in
adc
movsb
dec
fisttpl
sarl
lods
mov
out
nop
gs
fbstp
mov
mov
int3
or
ja
push
into
mov
xchg
aam
pop
or
push
test
shr
cmpsl
adcl
sbb
lcall
sbb
or
cmpsb
iret
lret
je
mov
shl
stos
stos
sti
push
cmp
lahf
sbb
jns
lock
mov
sub
loopne
mov
mov
pop
mov
xchg
test
fisubrl
mov
ss
test
int3
aas
jl
leave
and
cmp
mov
ret
mov
gs
adc
test
clc
scas
mov
paddd
push
add
jae
rcll
pop
jns
jo
fcomi
or
sahf
sbb
hlt
insl
and
inc
ss
enter
lret
aad
cmp
pusha
sub
push
dec
and
mov
fs
sub
popa
out
repnz
sub
mov
aas
shl
xchg
ja
cwtl
das
test
jge
cltd
adc
push
jo
jl
push
jp
imul
mov
icebp
push
int3
mov
or
cmpsl
daa
cs
repnz
popa
xlat
jge
push
pop
ja
hlt
mov
dec
or
pop
ljmp
lahf
push
sbb
push
xchg
shlb
andl
in
mov
xor
push
cmc
xchg
roll
sub
popf
mov
outsb
mov
dec
sbb
test
adc
shrb
lcall
sub
std
push
rsqrtps
lret
mov
sbb
in
scas
out
adc
pop
adc
push
dec
loope
out
gs
out
outsb
ficoml
ror
outsl
addr16
and
mov
gs
fstpt
insb
push
xchg
mov
pop
test
dec
mov
test
ret
cwtl
hlt
pop
clc
mov
mov
push
ds
sub
dec
movsb
push
sbb
fdivp
mov
out
jns
pop
scas
sbb
xor
push
add
cmpsl
js
lods
inc
ljmp
adc
mov
movb
push
enter
push
mov
pop
or
enter
jno
jbe
insb
fldl
push
enter
mov
mov
divl
in
xlat
cmp
jmp
loop
pop
jne
push
dec
lcall
scas
inc
sub
popa
mov
outsb
push
xor
adc
decl
mov
dec
or
test
negb
pop
jge
cmp
push
push
xor
push
jmp
adc
dec
and
fsubr
add
xchg
sbb
mov
lahf
pop
inc
push
mov
dec
popf
pop
xor
aaa
icebp
into
cmpsb
inc
cmp
test
ret
mov
xchg
aaa
xorps
cmp
xchg
inc
push
popf
pop
mov
inc
mov
stos
stos
sub
fcomi
xor
adc
call
mov
mov
stos
and
xchg
scas
xor
push
int
pop
or
daa
push
js
mov
out
jno
in
enter
cld
lods
cmpsb
dec
int
ret
cmp
mov
push
repnz
adc
and
push
push
jo
mov
loopne
sbb
xchg
xchg
in
ss
rclb
rclb
mov
pop
pop
cs
push
push
and
pop
mov
or
cmpsb
sub
jmp
addr16
lods
stos
inc
popa
fldcw
dec
mov
ret
call
mov
push
mov
mov
inc
jne
jno
ss
jl
push
icebp
pop
dec
jg
sub
mov
fidivrs
test
dec
push
cmp
rcll
sub
call
ret
es
jne
test
out
out
xchg
mov
add
mov
pop
mov
cs
test
xchg
cli
bound
jmp
cmp
sub
test
pop
out
add
cmpsl
mov
ds
sub
gs
fmul
call
adc
add
lret
popa
and
je
mov
into
mov
or
mov
test
incb
or
xor
lea
pop
repnz
or
xchg
inc
jecxz
push
dec
add
mov
sub
ljmp
fists
adcl
push
pop
mov
inc
cwtl
sub
scas
sub
je
dec
xor
xor
loope
bound
pop
cmovp
and
out
and
jbe
adc
sbb
arpl
cmpsb
jge
insl
mov
add
pop
das
sub
cmp
mov
test
jns
fidivrs
jae
orl
xchg
test
jne
jmp
lret
pop
cld
jne
and
in
jp
jns
add
mov
and
pushf
fisubl
add
cmovns
rcrb
test
bound
aas
or
gs
and
enter
dec
aam
iret
push
xor
pop
stc
lds
shlb
popf
dec
iret
xor
or
jmp
adc
or
loop
enter
jmp
lcall
adc
push
push
movsl
xchg
and
insb
cltd
xor
push
roll
cmc
jmp
xchg
add
mov
jnp
adc
test
and
shlb
mov
sbb
data16
sahf
or
xchg
inc
sbb
in
dec
and
lock
inc
js
lock
mov
inc
jmp
inc
jnp
sahf
pop
dec
into
sub
lds
adcb
adc
mov
sbb
sarb
or
cld
sti
inc
mov
and
push
fldenv
enter
into
aaa
adc
les
scas
test
cmp
adc
sub
jno
aam
adc
jns
and
sub
push
jmp
sub
ja
dec
cltd
fsts
je
or
jne
imul
into
pushf
dec
lea
pop
aad
lcall
repz
inc
sahf
or
push
in
lret
or
sbb
mov
inc
cmc
shrl
xor
xchg
adc
fdivs
sbb
sti
in
pop
push
jmp
mov
outsb
subb
jne
xchg
ret
sub
cli
lods
sbb
in
loopne
jge
push
lods
xor
stos
push
es
cmp
rolb
mov
or
dec
jne
and
shll
xor
test
mov
xchg
xor
jle
mov
outsl
fildll
mov
int
xchg
pop
roll
call
jl
mov
xor
pushf
inc
outsb
jno
out
ds
pushf
push
mov
jae
movsl
mov
je
and
or
cmc
scas
mov
xor
xchg
cmp
push
inc
mov
push
ss
aam
sub
adc
mov
in
aam
jbe
cwtl
and
ficompl
jle
dec
or
gs
xor
shrl
jnp
mov
jmp
stos
pusha
push
or
xor
and
xor
ret
mov
pop
jmp
xlat
or
sbb
mov
xchg
into
push
jno
dec
int3
xlat
inc
pop
push
faddl
test
sub
push
and
mov
stos
jo,pn
xchg
cmp
sbb
daa
mov
test
jae
lea
addr16
or
add
hlt
push
dec
scas
mov
push
aad
shll
inc
cmc
push
das
jecxz
add
sbb
jo
sbb
daa
jo
xor
sub
pop
mov
dec
xor
add
movsb
stos
test
std
cli
lret
mov
add
out
rcrl
push
sbb
je
int3
xor
cmp
fisttps
gs
imul
into
push
sub
fisubrl
or
pop
and
cmpsb
adc
loope
lahf
adc
pop
insb
mov
imul
and
popf
fdivrl
dec
hlt
lret
aam
test
int3
int
jb
mov
inc
xchg
jbe
movsb
push
sbb
addr16
nop
mov
or
into
sub
mov
arpl
call
push
call
and
cmp
mov
jge
out
ret
jnp
xchg
out
mul
push
fnstenv
orl
dec
pop
rolb
xchg
mov
pop
xchg
lods
push
cmp
repz
or
sbb
inc
dec
inc
sbb
imul
aad
push
jmp
aam
push
sub
xor
insl
rcrb
jbe
mov
fldt
js
inc
clc
loope
push
icebp
mov
xchg
lcall
pop
jp
push
jae
sti
adc
or
aam
aas
mov
mov
add
std
add
ja
mov
das
dec
jl
flds
xchg
repnz
pushf
cs
xchg
sub
fwait
inc
test
and
and
sahf
mov
cmp
out
adc
cmp
orl
movsb
xchg
test
mov
fldt
dec
or
mov
adc
pop
repz
push
scas
push
xchg
xchg
insl
add
rcll
sbb
aas
repz
notl
mov
mov
in
jns
pop
ret
mov
jbe
cmpsl
lret
in
mov
enter
cmp
jge
mov
lret
inc
fidivrs
lock
fs
out
mov
daa
xchg
mov
dec
pop
imul
mov
mov
dec
insl
frstor
stos
and
push
jmp
xlat
push
sub
mov
mov
cs
leave
adc
aas
repz
cmp
lods
ret
inc
repnz
xchg
adc
xor
and
xor
shll
jg
xor
shl
mov
xchg
mov
sub
and
sub
dec
pop
mov
dec
adc
add
in
lea
in
mov
add
or
notb
and
inc
push
pushf
into
fisttpll
sub
shrb
xor
jle
fwait
push
and
jbe
add
jmp
jecxz
test
faddp
pusha
dec
scas
mov
negb
in
insl
inc
hlt
xor
scas
lds
insb
jb
xchg
add
adc
mov
jmp
mov
leave
sbb
daa
fcmovb
jbe
lret
fimuls
and
jne
pop
mov
jnp
popf
mov
dec
lss
mov
bound
int3
sti
mov
push
repz
iret
cmpsl
out
mov
dec
dec
mov
addr16
add
jle
add
and
push
xchg
cmp
jmp
and
xor
jbe
or
popa
stos
fwait
popa
jo
sar
sub
leave
dec
inc
xchg
popw
in
stos
call
mov
inc
push
jl
sub
aad
imul
xor
jo
adc
fidivl
stos
push
mov
fcos
jl
int
dec
sub
mov
gs
insl
adc
adc
inc
mov
shlb
mov
in
es
mov
roll
addr16
jb
cmp
mov
fildl
mov
pushf
arpl
test
into
std
fs
mov
add
aaa
in
sbb
xchg
xlat
cmp
jecxz
jl
dec
je
mov
dec
into
push
out
inc
pushl
insl
mov
sbb
imul
adc
jp
sbb
and
daa
ja
xor
icebp
jmp
mov
imul
enter
adc
in
adc
xor
add
or
mov
cwtl
leave
jl
inc
fldcw
shrb
add
stos
in
jecxz
pop
sub
cmp
jns
lods
xchg
or
out
push
sbb
add
push
les
sub
test
add
in
and
stos
call
out
mov
adc
imul
pop
add
les
stos
shlb
out
jbe
divl
outsl
ss
xchg
popl
sbb
into
mov
dec
and
shrl
mov
pop
fmull
test
roll
movsl
adc
push
sahf
shrl
mov
aas
xchg
xchg
inc
cmc
mov
test
movsl
into
in
mov
xor
xor
and
roll
scas
pusha
rolb
fists
pushf
cwtl
push
test
sbb
loopne
mov
jg
inc
out
and
push
cli
loope
push
xor
in
pop
jmp
jle
fldenv
cmpsb
adc
nop
mov
mov
popa
aaa
jl
fsubl
ret
cmpl
ret
xchg
inc
sbb
in
mov
mov
push
fxch
cmpsb
xchg
ds
out
inc
cli
or
ret
jns
sbb
and
pop
cmp
xchg
and
fistl
clc
in
movsb
insb
mov
or
xor
or
mov
int3
jmp
push
mov
inc
cmpb
sar
cwtl
ja
push
mov
jp
pop
js
jae
scas
bound
aas
mov
sbbl
ficoms
cld
aaa
jl
mov
out
jnp
add
xchg
push
movsl
outsl
sbb
inc
ficoms
inc
jmp
sti
sub
mov
push
sbb
push
rclb
and
cs
sub
add
aad
jno
decl
or
mov
inc
mov
imul
fimuls
sub
push
push
repz
js
push
fiadds
dec
add
iret
scas
sbb
jne
movntq
sbb
into
xchg
fdivs
lea
pop
into
inc
mov
sub
ja
sbb
cli
sbb
cmpsb
dec
push
aas
leave
pop
lds
test
sub
fsubrl
lret
cmpsb
jp
orb
add
enter
movsb
out
push
lcall
inc
decl
insb
xchg
pop
push
push
dec
dec
fadd
adc
pop
mov
mov
fs
icebp
fdivl
sbb
mov
sub
xor
mov
mov
loop
test
mov
shl
roll
cmpb
ret
or
xor
nop
mov
imul
mov
sub
xor
xor
fisttpl
mov
lock
push
lret
dec
rorb
test
ffree
repnz
sti
vpsllq
jp
lods
xchg
cmp
fs
or
or
pushf
adc
mov
int3
fwait
mov
enter
repnz
mov
jo
push
inc
sub
adc
fcomps
pop
inc
push
or
insb
out
and
lds
xchg
mov
inc
dec
insb
jl,pt
into
jl
ja
adc
push
adc
mov
adc
or
xor
scas
add
lods
inc
movsb
jmp
lcall
and
sbb
jne
ret
add
mov
test
adc
dec
popa
jge
cmp
and
andb
sar
aam
jp
mov
pop
xor
cmp
sbbb
nop
leave
jbe
sub
sti
frstor
lock
cli
mov
fisttpll
jno
repz
sti
adc
inc
cld
push
jbe
inc
xor
fwait
jo
ret
mov
iret
cmp
dec
sahf
cmp
jmp
imul
cmp
mov
imul
sub
mov
push
push
in
hlt
jne
imul
push
insb
cwtl
das
jmp
popf
jb
mov
jg
fs
les
js
fnstsw
outsb
or
movsb
outsl
cltd
loopne
jae
mov
inc
stc
lcall
lret
shlb
dec
rclb
mov
dec
sbb
test
xorl
pop
in
nop
mov
push
outsl
shll
leave
scas
mov
test
test
roll
adc
out
adc
cmp
in
push
arpl
lcall
rorl
leave
sbb
xchg
fwait
jno
in
push
mov
adc
leave
repnz
adc
pop
mov
lds
scas
add
cmpl
mov
lods
sub
gs
push
jne
sub
adc
nop
adc
test
fnstsw
rol
cmp
push
sub
pop
jno
sub
jg
icebp
test
pusha
ror
scas
xor
cmpsb
and
sbb
fmuls
add
jmp
mov
shrb
clc
rcll
lods
outsl
and
pop
adc
pushf
lods
loopne
pop
push
sub
repz
rorb
movsl
inc
cmp
pop
add
cmc
xchg
lahf
add
popf
push
movsb
out
pop
nop
cwtl
ret
push
loop
xor
xchg
xchg
and
rcrl
lahf
mov
das
jl
cmp
stos
pusha
inc
cmp
leave
ss
pushf
test
in
cwtl
or
scas
and
xchg
int
nop
sahf
jo
insb
jbe
inc
sub
add
fstps
pop
add
jl
jno
sub
xchg
mov
mov
je
cmp
lcall
or
dec
outsb
scas
call
test
dec
mov
aam
sbb
pop
out
lea
inc
scas
ds
mov
xor
into
add
ss
cli
inc
test
dec
sbb
mov
push
add
inc
xchg
sub
push
dec
cli
add
pop
orl
mov
push
in
xchg
shll
xchg
fidivrs
dec
aam
in
mov
xchg
imul
loop
pop
bound
xchg
lods
cmp
std
ja
sbb
xchg
add
mov
movsb
roll
mov
pop
pop
sbb
stos
clc
mov
pushf
and
xlat
fdivrl
mov
cmp
outsb
test
xor
std
xchg
push
testl
mull
mov
loopne
jo
fdivrp
aad
dec
lcall
inc
mov
loope
sbb
lea
sahf
outsl
adc
jle
leave
sbbb
sti
sahf
xor
mov
fisttpl
mov
pop
ja
jmp
and
subb
lds
jmp
ljmp
adc
add
mov
movsb
int
in
ja
jno
insb
sub
pop
loope
rolb
sub
sub
jle
jmp
rdpmc
fisubrl
adc
cmpsb
insb
mov
mov
inc
or
cltd
lret
xchg
sub
arpl
cmc
enter
jo
cmp
dec
xchg
mov
dec
xchg
mov
mov
dec
fsts
sbb
fsts
into
pop
lods
popa
hlt
fimull
mov
mov
push
inc
jns
push
lods
cmpsb
mov
push
mov
jl
xor
orl
sbb
jae
adc
mov
arpl
cwtl
cld
scas
add
or
shl
xchg
les
jbe
jae
loopne
ret
outsb
xor
pushf
xchg
out
pop
sub
sti
fwait
lods
sub
nop
inc
leave
push
ret
or
aas
popf
push
gs
mov
outsl
cmp
loopne
and
pop
cs
sub
movsl
jns
add
or
mov
outsl
in
js
or
fildl
imul
lret
lea
loop
aam
or
cmp
or
xchg
int3
iret
call
jecxz
lcall
jmp
enter
out
jmp
aad
jge
jbe
enter
or
jecxz
adc
inc
call
test
pop
pop
in
push
sbb
push
add
cmpsb
add
mov
mov
cmpsb
jecxz
in
push
daa
adc
addr16
jl
lcall
arpl
aam
sub
pushf
mov
push
sbb
or
movsb
neg
xor
outsl
int
sub
icebp
repz
xchg
nop
sbb
push
test
inc
ss
movsb
jg
ljmp
repnz
orl
lret
push
movsl
adc
outsb
lds
and
jp
cmp
adc
cmp
cmovbe
pop
out
repz
xchg
mov
loopne
dec
rclb
ds
imul
jne
sti
ret
stc
adc
repz
cmpsl
cli
test
mov
ret
inc
mov
int3
push
and
xchg
out
and
mov
fidivl
adc
in
jg
cmp
fdivrs
dec
les
push
cmp
fwait
sbb
mov
lret
lods
in
jp
testb
scas
sbb
mov
mov
mov
test
les
dec
mov
test
cwtl
jno
sbb
movsl
das
or
adc
mov
lock
fimull
clc
dec
int
push
test
outsb
dec
lea
lea
mov
negl
dec
xor
xor
out
jle
push
je
add
mov
xlat
inc
push
dec
cld
frstor
mov
sub
mov
and
xchg
stos
add
cmp
mov
je
fcmovu
push
arpl
xchg
hlt
iret
xchg
cmp
lahf
or
push
pop
icebp
sub
cmp
cmp
dec
sbb
inc
pop
sub
xor
scas
pop
gs
jb
scas
mov
arpl
ds
sti
sbb
imul
nop
iret
int
ja
mulb
mov
xchg
fstl
loop
faddl
and
fistpll
xchg
ja
outsl
dec
jbe
das
pop
pop
xchg
xchg
call
and
or
xchg
add
arpl
sub
inc
push
add
or
xor
xchg
dec
fcoms
push
int3
push
icebp
lods
and
test
pop
in
ss
sbb
cmpb
or
pop
sbb
sar
add
xchg
xor
out
cmp
shll
ror
add
pop
mov
push
iret
pop
lret
fld
mov
stos
mull
mov
popa
adc
pop
sub
jo
clc
outsl
fstl
stos
scas
xor
jle
mov
dec
xchg
aas
xor
sbb
sti
xchg
je
push
mov
sub
rorl
push
push
icebp
sti
lcall
push
dec
fisubrs
push
outsl
in
dec
mov
out
sub
dec
mov
mov
rcrb
mov
push
fidivrl
fst
dec
hlt
mov
sti
dec
adc
andl
das
cmp
rdpmc
stos
jns
popa
sbb
xor
add
call
nop
fwait
lret
dec
xabort
mov
stos
mov
dec
jp
cmp
repnz
cmp
cli
xchg
ljmp
imul
aas
or
test
xchg
movsl
in
jbe
push
cmp
adc
sub
xchg
xor
aas
scas
hlt
inc
xor
or
rcll
icebp
dec
mov
jl
xchg
cmpsb
idivb
movsl
fnstcw
ljmp
cs
xor
lret
pop
into
ja
mov
mov
sbb
stos
arpl
pop
push
xchg
mov
xchg
rcl
stos
jnp
nop
dec
or
ss
test
mov
or
add
or
or
lea
cmp
notrack
mov
inc
fsubrp
add
add
mov
pushf
js
xchg
xlat
cmp
rcrl
xlat
into
or
pusha
fsubl
pop
and
xorl
push
jns
and
movsl
hlt
or
scas
pop
or
rorl
popa
mov
mov
mov
insl
mov
insb
or
mov
scas
sub
lret
mov
ret
sub
out
sbb
mov
gs
sarb
push
in
jae
in
cld
stc
cs
adc
add
dec
push
xchg
adc
cld
mov
imul
movsb
shlb
jnp
gs
sbb
add
xchg
sub
in
shlb
cmp
sub
cmpsl
inc
loopne
cmp
pop
jne
repz
sarl
push
test
inc
mov
ret
jbe
mov
or
icebp
fdivs
mov
pop
mov
pop
iret
test
and
pop
lds
movsl
lret
push
clc
mov
add
sar
xchg
mov
dec
in
pop
inc
stc
push
rdtsc
xor
mov
pop
dec
mov
mov
cmp
and
out
addb
call
bound
dec
mov
testl
jl
out
movsb
xchg
lret
fstps
mov
add
lods
jg,pn
jecxz
ja
xor
repnz
std
mov
sbb
rcr
jge
mov
ljmp
jecxz
lret
mov
loop
in
in
xchg
or
test
adc
bound
fcomps
cltd
lds
repz
loopne
int
out
sub
sbb
fcoms
int3
sbb
out
leave
outsb
int
mov
cmpsl
lret
and
dec
xor
movsb
inc
push
imulb
sbb
insb
insl
outsl
nop
lcall
lock
shld
mov
cmp
adc
mov
jmp
divb
jns
jo
inc
fsub
dec
sti
sub
mov
push
arpl
aad
inc
hlt
les
stc
jns
push
xor
lret
mov
cmp
add
or
mov
pop
sbb
test
je
fs
mov
stc
arpl
cmp
xchg
mov
insl
fstpl
xlat
and
mov
ds
stos
nop
add
nop
sub
rcrb
xchg
jae
jbe
jle
xchg
cltd
nop
inc
inc
mov
jmp
push
jge
es
inc
mov
adc
xchg
mov
mov
in
sbb
cmp
mov
xchg
push
jns
add
outsl
add
fucomi
mov
imul
lock
mov
mov
and
cmp
inc
mov
or
dec
iret
std
shll
cmpsw
ja
lds
pop
imul
xor
and
int3
int
mov
lods
les
inc
int
out
mov
iret
and
lret
cmp
sti
fidivl
out
add
cmp
jae
rorb
adc
mov
ds
jb
cwtl
test
cltd
mul
inc
ljmp
add
push
cs
out
mov
test
mov
fimuls
orl
gs
popf
mov
pop
addr16
pop
mov
les
inc
cmp
mov
inc
sbbl
mov
aad
adc
sbb
jb
divb
dec
rolb
iret
inc
mov
outsb
test
frstor
les
jnp
stos
mov
xchg
mov
or
inc
loop
pop
mov
lahf
cltd
out
dec
insb
shl
sahf
cmc
enter
mov
dec
push
pop
push
adc
int3
mov
pushf
and
mov
sub
mov
roll
push
lock
or
push
cmp
ffreep
mov
xchg
adc
pop
std
imul
xor
mov
fimull
cmc
dec
cli
incl
cmp
pushf
jno
push
and
cmpsb
jge
ss
adc
mulb
cmp
orl
out
aas
jo
jae
pop
and
sti
iret
ffreep
sub
mov
addr16
pop
out
mov
xor
dec
lea
pushf
mov
mov
arpl
push
sub
jmp
test
xchg
dec
fdivrl
insl
dec
gs
adc
jmp
shlb
scas
daa
pop
mov
in
dec
jne
mov
and
out
mov
fldcw
arpl
and
imul
rcrl
ss
sbb
in
mov
sub
icebp
lods
std
push
cli
jecxz
mov
arpl
and
mov
pop
and
jno
stc
sub
lret
ret
dec
mov
mov
and
and
push
inc
or
lea
test
filds
out
adc
call
test
push
inc
pop
xchg
mov
mov
addl
lods
stc
mov
inc
outsb
pusha
insb
jge
gs
insl
jnp
fwait
addl
xchg
outsl
sub
mov
cli
ror
es
dec
rcrb
aaa
fisttpll
in
sbb
xchg
cmpl
jns
test
ja
jo
sahf
jecxz
inc
lret
mov
es
xchg
pop
adc
ret
push
sbb
rolb
cmp
push
out
std
mov
scas
fsubrs
xor
cmp
rcrl
das
mov
and
inc
pop
add
dec
pop
cmp
mov
xorl
push
jae
das
sbb
aam
xor
mulb
outsb
jmp
inc
dec
movsl
push
test
adc
mov
push
push
sbb
or
push
mov
int3
push
enter
xor
jp
ficomps
les
xor
ffreep
sub
stos
sbb
or
xchg
pop
mov
or
dec
dec
mov
inc
cmp
cmc
jp
and
hlt
add
xchg
mov
push
inc
add
push
sub
fldenv
inc
fadds
mov
fnsave
add
ss
adc
pop
ret
jle
dec
fisttpl
adc
arpl
jmp
push
push
sarl
push
pop
mov
call
push
out
daa
in
sahf
push
fadds
dec
mov
sub
mov
aaa
inc
mov
mov
cmp
rcrb
les
mov
dec
or
sub
and
mov
pop
ss
adc
dec
or
cmp
test
lret
aam
pop
repnz
lahf
jp
push
pop
ror
call
pop
nop
sub
xchg
es
mov
push
xor
addr16
mov
jp
jg
jge
lcall
test
loopne
sbb
or
scas
xor
call
inc
stc
test
xchg
enter
cwtl
fs
add
pop
mov
add
jne
in
cld
repnz
lock
loope
inc
push
mov
insl
ds
inc
fiadds
clc
xchg
loop
and
jbe
pop
stc
push
sbb
push
and
xchg
add
mov
cmpsb
mov
ficompl
xlat
daa
inc
out
outsb
filds
test
fs
rcrl
xchg
dec
inc
sub
mov
pop
xor
rclb
sbb
xchg
add
pop
std
jne
sub
sub
fstpt
dec
fbld
je
push
repz
pop
cltd
and
mov
in
xchg
aas
outsb
test
test
loopw
mov
push
adc
push
sbb
push
mov
lds
ljmp
xorb
xchg
xchg
push
sti
push
orb
imul
rcrb
aad
popf
inc
lds
das
test
sub
shlb
ret
cld
dec
dec
out
jnp
adc
and
cwtl
inc
in
sbb
insl
out
pushf
sbb
loop
fwait
sbb
out
or
cmpsl
adcb
ljmp
push
mov
popf
aas
xchg
ret
arpl
test
add
stc
sbb
lock
dec
mov
loop
sub
mov
aam
mov
jmp
sub
insl
insl
popf
stos
xor
mov
adc
xchg
stos
jg
sbb
pop
aaa
enter
push
push
push
sti
pop
mov
ret
stc
shll
cld
leave
popa
adc
push
pop
fbld
std
pop
add
aad
sub
sub
ja
sbb
scas
dec
mov
add
xlat
popf
mov
xchg
or
ret
sahf
repnz
call
das
ss
movsb
lds
stos
fnstsw
mov
inc
adc
in
push
je
mov
popa
mov
mov
lds
lcall
mov
or
int3
jge
and
inc
arpl
adc
xor
aas
xor
bound
out
push
mov
pop
insl
sbb
outsl
mov
cmp
pop
inc
ja
in
xchg
fcomp
roll
dec
cmp
popaw
out
push
xor
or
sub
mov
push
pop
addb
icebp
ficoms
lcall
adc
jp
icebp
pushf
mov
repz
or
push
xor
add
pop
pop
pop
cmc
ss
xchg
sub
inc
adc
cs
push
out
subl
test
ja,pt
mov
das
push
push
cwtl
xchg
movsl
arpl
cmpsl
cmp
dec
lret
movsb
movsb
adc
adc
cmp
mov
lcall
popf
pop
imull
rorb
out
inc
mov
jg
sti
gs
push
xchg
sbb
mov
into
cmp
xor
pushf
out
sub
or
xlat
popf
iret
orb
xchg
and
daa
jl
rclb
sub
in
lret
dec
sti
fiadds
test
sbb
loopne
push
xlat
les
mov
fnsave
push
addr16
mov
xchg
in
sub
or
jle
cmp
daa
scas
sub
divl
xchg
popa
stos
enter
inc
out
lock
xor
sahf
mov
xchg
cmpsl
jns
pop
mov
xchg
fiadds
jp
sub
je
pop
cmp
lds
mov
push
loopne
xor
cwtl
imul
inc
outsb
addl
adc
rclb
pop
xchg
ret
lret
cmc
ss
pmullw
and
mov
dec
rclb
nop
ja
fidivrs
and
adc
add
clc
pusha
mov
test
repz
nop
mov
push
fwait
mov
dec
adc
mov
or
lcall
shll
pop
lods
mov
mov
ss
insb
mov
push
mov
add
clc
ljmp
cmp
push
push
shll
mov
dec
or
movsb
mov
sub
loop
cmp
fildll
repnz
fisttpll
push
enter
jp
cmc
xor
imul
in
loop
je
mov
imulb
leave
xchg
pop
push
aaa
jnp
pusha
dec
int
or
jnp
mov
lods
lret
mov
xchg
xchg
cs
add
xor
mov
jp
fistps
das
xor
fs
jo
pop
test
pusha
lahf
lahf
pusha
xor
in
or
jle
jl
add
out
cmp
mov
push
clc
aam
xor
movsl
adc
cmpsb
xchg
fwait
push
lods
cmpsb
xor
mov
or
ds
divb
inc
jno
movsl
punpckldq
inc
fstp
push
jne
pop
fistpll
and
ja
mov
icebp
push
cli
add
cmp
sti
cmp
cmp
data16
aad
mov
cmpsb
pop
iret
aam
aaa
fisubrs
inc
lock
leave
in
lock
inc
pop
mov
pop
call
icebp
movsb
mov
xor
aaa
repnz
out
lea
sub
fnstsw
add
push
and
cmc
xchg
pop
jnp
imulb
xchg
jp
insb
loopne
and
jge
cmpb
into
sbb
iret
xchg
adc
mov
pushf
testl
or
repz
push
dec
sti
fwait
das
data16
dec
dec
fmulp
iret
repnz
rclb
aas
xchg
pop
stos
scas
rcl
and
aaa
lahf
push
aad
cmp
mov
adc
fisttps
aas
adc
clc
or
fldenv
cmp
mov
jp
je
fsubl
push
pop
mov
push
jle
jge
dec
pop
xor
jmp
or
dec
push
imul
imulb
bound
sbb
jecxz
mov
or
shl
mov
ret
adc
enter
add
xor
test
into
mov
movsl
adc
outsb
xchg
cmp
test
inc
dec
pop
mov
bound
xor
mov
ds
xor
or
xor
push
mov
xlat
sbb
inc
faddl
out
sbb
fstp
and
outsb
stc
push
mov
dec
push
in
cmp
pop
and
sub
adc
test
out
adc
add
aas
inc
add
shll
jg
and
sbb
and
sahf
mov
or
pop
mov
ljmp
jle
mov
stc
shrl
leave
cmp
fsts
fistpll
dec
ret
ret
push
icebp
hlt
std
bound
mov
or
mov
bound
call
out
insl
out
xchg
cmpsl
movsl
jmp
testb
sar
inc
mov
hlt
addr16
xor
arpl
xlat
aas
inc
sub
ss
xlat
sbb
cmp
and
xchg
and
jmp
xchg
sub
xchg
push
mov
popf
push
sub
dec
shlb
stos
cmpsb
addr16
iret
cmp
jno
cmp
fwait
bound
cmp
scas
pop
shrl
int
mov
dec
ficoms
mov
mov
into
adc
adc
pusha
adcb
adc
fidivrs
lds
es
push
or
jbe
sub
clc
pusha
jmp
fwait
adc
push
mov
fcomps
jne
lea
xlat
bound
adc
test
pop
out
outsb
pop
dec
lcall
cmc
inc
dec
outsl
or
jl
push
aam
adc
cs
sbbl
sub
flds
mov
shll
sbb
adc
xchg
js
aas
pop
adc
push
clc
cmp
outsl
xchg
push
outsl
sub
call
sahf
in
pop
sub
sbb
mov
mov
sbb
jno
sbbl
sarb
rcl
movsb
dec
rclb
jnp
nop
xchg
test
mov
subl
inc
add
outsl
sub
jno
inc
gs
in
cltd
and
pop
inc
rol
negb
out
scas
insl
test
stos
sbb
adc
xor
sti
cmpsl
xchg
mov
mov
hlt
scas
movsl
xlat
std
sbb
js
add
dec
fists
xlat
cltd
ja
pop
and
sahf
daa
insl
adc
std
push
jg
add
js
pop
add
lret
dec
adc
push
in
mov
sub
gs
and
sub
push
enter
notl
push
push
les
xchg
mov
add
movsl
jmp
and
xchg
and
pop
repnz
je
mov
mov
mov
jle
das
sub
xchg
hlt
cltd
leave
mov
idivl
jle
jecxz
dec
lods
jge
jg
imul
xchg
sbb
adc
mov
das
push
icebp
push
mov
sub
scas
xchg
push
lret
into
inc
and
jmp
sahf
cmp
rclb
add
std
imull
mov
repz
mov
js
adc
inc
dec
push
mull
push
rep
out
adc
popf
pop
loopne
xlat
cmpl
xchg
fs
imul
scas
add
adc
cli
bound
iret
mov
push
inc
ja
sub
mov
push
pop
mov
roll
js
pop
push
push
dec
xchg
fwait
and
clc
cmc
push
iret
jl
mov
fabs
pop
pop
lret
sbb
lahf
cmp
sbb
stc
icebp
cmp
mov
int3
mov
sub
aad
pop
mov
test
lock
or
arpl
mov
xchg
cmp
int3
nop
pop
cmp
mov
faddl
add
iret
mov
jl
and
int3
js
gs
inc
js
xor
jmp
lods
cld
and
cmp
nop
mov
or
sbbl
push
loop
mov
sub
dec
aaa
lock
pop
or
add
arpl
cltd
addb
leave
adc
insb
sahf
push
mov
test
mov
cmpsb
out
js
pop
adc
cli
dec
pop
add
cs
xor
jno
outsl
loopne
stos
stos
mov
mov
mov
xor
in
out
test
pop
jns
adc
aad
mov
sub
pop
int
pop
or
xchg
mov
cmpsl
add
push
jnp
rcll
cmpl
xor
push
sahf
loope
fbld
popa
mov
mov
nop
adc
ret
inc
testl
cmpb
int3
es
push
dec
mov
cld
pusha
push
xor
pop
push
mov
cltd
sub
inc
mov
aad
xchg
rcrl
mov
fstps
icebp
fldl
pusha
mov
nop
xchg
pop
sbb
arpl
out
dec
sbb
sub
out
inc
inc
pop
jns
pop
in
shl
insb
shl
and
idivl
sub
cmp
add
xchg
daa
jl
mov
sbb
stos
mov
fcmovbe
stc
imul
xchg
add
testb
faddp
js
push
pop
outsb
xchg
sbb
jns
nop
mov
movsl
dec
pop
sbb
imul
les
dec
test
adc
xchg
add
cmp
and
jns
pop
inc
xor
fsubs
cli
push
call
mov
cmp
ljmp
pop
xor
popa
jl
add
pop
pshufw
std
adc
push
addr16
jbe
push
jbe
aaa
arpl
fisubs
sti
aaa
sub
sub
test
pop
jo
and
shr
test
int
xchg
cmp
inc
arpl
fs
pop
pop
xchg
pop
dec
mov
mov
mov
sar
xor
sub
fcomip
fisubrl
and
push
ss
xor
or
mov
test
aaa
pop
adc
dec
inc
and
xchg
std
sbb
mov
mov
notl
js
jmp
fs
fistl
inc
jmp
and
scas
mov
aaa
pop
mov
shl
sarl
dec
pop
pop
popa
ds
mov
inc
xchg
aad
ljmp
out
sub
les
cmp
lds
cmp
repnz
je
cwtl
test
stos
sti
mov
add
inc
sub
dec
int3
mov
jo
dec
sbb
jge
pop
push
dec
mov
cmpsb
fimuls
push
pusha
fstpl
cmp
lahf
enter
add
pop
sub
in
andb
nop
adc
xor
jmp
ret
pop
lret
cmp
inc
in
mov
sub
shlb
xchg
ds
add
pop
jp
iret
int3
mov
cwtl
inc
bound
xor
ror
data16
stc
jnp
stos
lret
sarb
or
and
es
scas
js
xchg
lahf
out
sbb
arpl
add
ret
mov
rcrl
xor
pop
test
or
daa
adc
enter
push
std
jb
sahf
jno
sbb
jl
aaa
dec
add
int
add
sub
mov
and
imul
iret
adc
lret
test
ja
or
jecxz
sub
scas
scas
dec
lds
add
mov
sbb
mov
push
gs
cmpsb
imul
or
jbe
cld
pop
add
mov
lods
scas
sub
mov
xor
rcr
pop
insl
stos
push
pop
mov
mov
push
movb
jecxz
inc
mov
and
jnp
sbb
repz
sbb
mov
inc
sbb
mov
dec
xchg
cmc
or
push
jns
xchg
lea
inc
test
push
mov
insl
jmp
je
pusha
popa
or
daa
or
xchg
ret
and
mov
cmp
and
or
mov
por
fsub
fstpt
cmp
sub
inc
jae
cmp
pop
sbb
test
pop
jae
jl
daa
pop
mov
mov
int3
push
imul
stos
in
sbb
jae
cmc
ds
in
xchg
cmovnp
mov
pop
shl
das
sti
sbb
pop
cmc
shrb
test
int3
pop
fdivp
pusha
or
lods
mov
pop
ret
incb
aas
jmp
and
xchg
and
sbb
repz
cmp
leave
sbb
and
cwtl
jmp
mov
adc
mov
pop
pop
in
lods
lret
sub
call
popa
sbb
dec
sarl
out
insb
cmp
mov
inc
ficoml
mov
mov
idivb
jmp
je
inc
mov
orl
pusha
loopne
push
jno
sbb
sahf
fwait
inc
xchg
and
insb
scas
pop
jne
mov
pop
jg
movsb
scas
imul
push
lcall
push
cli
jbe
or
scas
cli
cmp
ja
ja
dec
cmc
fisubs
push
inc
mov
sarl
or
jg
or
fst
inc
sub
cmp
pop
sbb
test
lret
es
xor
rclb
addr16
jge
shl
push
xchg
in
mov
xchg
mov
js
adc
js
sub
cmp
cwtl
adc
bound
lret
test
cmp
sbb
and
fmuls
testl
outsl
dec
add
and
add
aas
clc
fnstsw
in
mov
adc
sub
sbb
add
enter
test
push
mov
lret
jb
mov
add
hlt
aam
push
mov
mov
mov
mov
ljmp
jg
ds
ds
adc
js
jnp
insl
enter
stos
cs
sahf
insb
cmovbe
mov
jae
mov
adc
out
shll
xchg
jno
fbstp
pop
daa
cmp
mov
mov
test
aad
aad
test
in
jne
add
out
out
fwait
mov
pusha
sub
gs
jne
outsb
xor
lret
mov
push
cmp
xor
outsl
ljmp
inc
mov
in
mov
adc
imul
lret
sub
push
and
sbb
cltd
repnz
loopne
mov
sahf
dec
mov
add
pop
inc
mov
xlat
lods
out
popa
sub
xchg
in
pusha
and
inc
push
inc
push
push
das
fs
call
mov
je
pop
xor
xchg
dec
sub
inc
shlb
rolb
jno
mov
sbb
pop
ret
scas
fcmove
xchg
jne
mov
ficoms
jno
ja
lcall
pop
inc
jmp
push
mov
mov
mov
xchg
shrb
sti
stos
inc
fsubs
fidivs
mov
daa
dec
neg
add
cmp
ret
loope
mov
popf
popf
mov
div
jg
int3
lahf
cmp
scas
mov
je
xorb
and
fs
rcrl
stos
subb
rolb
popa
sbb
iret
mov
adc
sahf
xchg
adc
ja
pop
imul
cld
popf
sbb
mov
in
sbb
fcoml
adc
push
dec
fmull
cli
rcrb
lea
mov
push
mov
bound
jnp
add
cmp
jno
push
repz
aas
inc
dec
and
cli
hlt
adc
insl
gs
mov
pop
test
push
mov
lea
jmp
es
pop
cmp
das
sub
pop
fistpl
std
jmp
imul
cmp
push
mov
add
mulb
inc
xor
mov
mov
leave
jg
imul
jnp
lret
dec
outsl
jg
pop
or
cmp
and
cmp
iret
loop
mov
cmpsl
add
or
sbb
and
sbb
inc
sub
int3
or
sbb
lcall
mov
das
sub
pop
loopne
or
add
fisubrl
mov
roll
or
lods
mov
and
test
stos
dec
inc
jns
push
pop
ljmp
jmp
repz
ljmp
mov
sub
rcr
xchg
mov
imul
sub
js
int3
mov
adc
dec
lret
jmp
addr16
arpl
fisubrs
pusha
sbb
movsl
es
das
xor
jnp
in
cmp
lock
icebp
fsubs
andl
cltd
push
push
xor
jns
test
jnp
push
dec
cmp
hlt
rcl
or
inc
arpl
fidivs
xchg
test
inc
lcall
sti
jecxz
xchg
adc
or
enter
or
sub
mov
sbb
rorb
call
or
mov
inc
sub
ljmp
sub
pop
popf
cmpsb
movsb
mov
cmpsb
outsl
popa
in
push
outsb
out
test
nop
xchg
inc
movsl
push
and
xchg
les
jp
fs
popa
mov
xchg
or
daa
fiaddl
xchg
mov
mov
ret
and
mov
lret
jnp
xor
movsl
lea
inc
mov
lods
mov
divl
sbb
dec
add
sub
mov
inc
ss
roll
ret
popa
repnz
das
lock
cmp
xor
lcall
and
adc
popf
cmpsb
mov
xchg
notb
xor
int3
popl
pop
sti
adc
xchg
mov
popa
std
mov
pushf
rolb
test
push
xor
cmpb
scas
loop
aam
dec
adc
mov
xlat
mov
cli
inc
mov
jb
adc
or
es
push
or
jne
inc
push
lahf
inc
movsb
push
test
out
subb
addb
sub
lret
cmpl
in
mov
mov
stos
sub
cmp
push
in
or
mov
lret
aad
notl
adc
int3
cwtl
aam
bound
and
mov
imul
xor
push
rclb
into
inc
ret
sub
in
pop
vdivpd
or
inc
mov
xor
jp
push
jle
js
pop
dec
insl
outsb
cmp
pop
push
cli
adc
fs
jle
ds
stos
or
lods
popf
pop
mov
iret
je
popa
insl
push
lea
jg
jno
mov
insl
cmp
stc
push
jno
movsb
ret
jo
adc
lret
fmulp
sti
sub
clc
repz
adc
xor
push
ja
inc
addl
iret
jle
jb
jl
jnp
sub
fstps
sbb
adc
adc
enter
mov
jnp
sarb
scas
inc
pop
stos
dec
jne
stos
xor
lret
cld
sbb
scas
in
and
adc
arpl
push
push
jbe
idiv
push
pop
stc
adc
mov
outsl
and
lahf
enter
cld
out
dec
mov
xchg
pushl
outsl
imul
jbe
pop
outsb
sbb
jge
scas
and
outsl
sub
inc
mov
jl
shlb
out
cmpsl
pop
pop
mov
xchg
bound
mov
xchg
subl
inc
jg,pt
and
push
scas
sbb
rorb
and
ljmp
cld
xchg
push
lret
mov
iret
les
out
in
lahf
dec
sub
add
inc
iret
pop
sbb
or
adc
in
ret
xlat
rorb
aas
daa
pop
and
xor
mulb
lcall
jns
addr16
mov
sub
add
jbe
cmp
pop
mov
dec
sub
xor
fildll
inc
mov
loope
mov
leave
push
mov
sub
push
mov
aaa
gs
les
in
js
cli
cwtl
xor
popa
xchg
test
mov
inc
mov
cld
cli
mov
jge
xchg
rcr
cltd
stos
sbb
mov
pop
jp
pushw
fimuls
and
xchg
fstl
fldcw
test
data16
lock
test
bnd
adc
cmp
mov
cli
aam
push
fwait
sahf
xor
popf
mov
arpl
add
sbb
xor
or
xchg
adc
xchg
xchg
fs
sub
aaa
mov
sahf
stos
mov
cmc
sub
fs
pop
rcrl
sub
das
mov
test
xor
pop
dec
dec
and
pop
movsl
sub
arpl
pop
sub
aas
adc
aad
xchg
dec
mov
lret
and
fmul
mov
push
pop
movsl
xlat
xchg
inc
fwait
adc
adc
mov
sarb
les
stc
std
mov
or
sbb
rolb
inc
bound
sub
sub
insb
pop
xchg
test
in
xchg
jb
push
cmp
add
sub
push
xor
xchg
jns
lcall
cltd
sub
xchg
rorl
xchg
mov
jg
dec
jg
push
mov
jecxz
adc
add
or
js
lahf
push
adc
clc
out
mov
fbstp
push
daa
addr16
fs
mov
ds
lahf
xchg
fcomp
jo
inc
or
mov
fstl
or
cmp
push
movsb
fidivl
xor
cld
out
add
movsb
jb
and
in
int3
mov
imul
popf
mov
dec
mov
outsb
popa
jae
lcall
jecxz
xchg
in
xchg
lret
adc
cli
movsb
jo
aad
movsl
in
imul
mov
adc
lods
pop
jecxz
lret
push
mov
mov
cltd
or
sub
cmc
daa
fsubr
adc
lods
inc
push
int3
fistps
cmp
cli
mov
imul
cmp
push
xchg
test
shl
push
test
subb
pop
shlb
adc
dec
xchg
dec
add
jge
test
jb
cmpsb
popf
mov
xor
mov
and
ja
cmp
stc
mov
inc
roll
inc
into
jne
clc
pop
pop
mov
dec
push
imul
cmp
dec
aam
mov
pop
cmpsb
filds
mov
out
dec
mov
scas
push
dec
sub
js
and
fildll
add
push
shrl
xchg
mov
or
fists
sub
fsub
nop
xor
das
mov
out
jp
ja
lret
sahf
adc
in
jno
movsb
or
mov
loop
and
adc
call
pop
leave
hlt
inc
int
or
mov
add
dec
add
pop
xchg
int
js
rorb
iret
lret
dec
xchg
je
mov
out
out
cmpsl
xlat
lret
cmp
pop
mov
in
cmpsb
sub
pop
sub
das
inc
or
test
in
mov
cmp
insb
pop
pop
jg
xor
inc
add
xchg
idiv
push
push
in
je
in
cmp
and
lods
xorb
out
test
push
push
daa
repz
push
clc
lea
push
and
add
dec
incl
pop
mov
sbb
jmp
or
sbb
adc
mov
add
int
push
sub
mov
inc
pusha
cmp
adc
jl
jmp
jge
inc
cmpsb
notl
mov
xchg
mov
and
adc
out
clc
cmpsl
mov
mov
jnp
loop
clc
rcrb
dec
popa
neg
xlat
popf
adc
ret
adc
movaps
aam
movsb
leave
pop
or
mov
push
jmp
mov
inc
mov
jg
inc
stc
jp
icebp
mov
les
data16
subb
adc
push
xchg
lods
into
push
lods
cmpsl
sbb
int
sub
outsb
dec
jae
addr16
mov
add
jo
iret
xlat
je
fsubr
adc
xchg
clc
sbb
inc
nop
mov
loop
cmpsl
aad
arpl
push
daa
dec
loopne
mov
mov
mov
mov
push
cli
xchg
in
xor
rcl
dec
dec
jmp
add
push
pop
mov
iret
dec
xchg
inc
mov
jl
or
adcb
cwtl
xchg
cmovl
xchg
adc
int
cmp
pop
mov
mov
stos
mov
into
jecxz
clc
andl
jp
mov
ds
adc
push
scas
add
sub
pop
js
mov
xlat
repz
push
inc
jno
rcrb
data16
clc
pusha
lea
push
mov
setp
dec
push
repz
lods
mov
pop
addl
pushl
mov
test
mov
jo
and
mov
repnz
push
sub
cld
jb
jbe
mov
add
das
aad
push
pop
and
pop
out
pmulhw
mov
jo
movsl
lea
movsl
inc
add
jge
pushf
adc
cmpsb
sbb
imull
cmp
out
arpl
fcomps
and
mov
cmpsb
clc
imul
insl
pop
inc
inc
shrb
cmpsl
dec
add
loope
jb
cs
cwtl
push
in
xchg
pop
xlat
jmp
out
loop
addr16
adc
or
xchg
ja
adc
mov
mov
xchg
jno
fwait
add
test
iret
adc
in
jno
dec
xchg
cmp
outsl
cmpsb
or
loopne
std
lods
mov
mulb
fnstcw
lods
or
mov
and
sbb
xchg
mov
fisubrl
fisubs
push
in
mov
sub
mov
jne
pop
dec
pop
adc
xchg
xchg
mov
cmp
sbb
push
mov
lods
shl
test
out
pop
pop
pop
push
aaa
push
imul
jnp
pop
clc
repnz
push
sti
pop
fcomps
add
mov
fdivs
gs
sbb
imul
push
ljmp
add
add
out
daa
cmp
ret
orl
ret
xor
push
mov
shll
popf
aaa
arpl
cwtl
xor
aad
lret
ret
mov
push
shlb
push
mov
add
jo
jb
nop
shr
jo
xchg
push
push
aam
fwait
into
mov
out
add
push
sbb
es
xor
jnp
fdiv
je
push
dec
cmp
and
mov
std
jo
aaa
test
push
in
sub
insl
fistl
inc
subl
clc
sbb
sub
inc
fnsave
mull
test
popa
dec
fdiv
scas
mov
or
mov
test
adc
ret
nop
xor
xchg
mov
mov
fnstsw
nop
push
popf
ja
adc
ss
xchg
jo
aam
sub
jmp
and
in
xchg
push
cli
jge
adc
xor
sbb
popf
inc
mov
sahf
push
ds
out
je
rcrb
mov
jnp
pop
inc
lods
pop
sub
sub
aaa
out
popa
leave
jge
in
xchg
repnz
aas
mov
xlat
loope
cltd
xchg
adc
enter
push
or
pop
ja
push
xchg
out
mov
jbe
cs
sbb
aas
and
lock
in
in
cmc
push
mov
or
add
jge
cwtl
fstpt
fstpl
inc
popa
mov
test
cmovo
mov
ja
rsqrtps
sbb
ret
inc
aas
xchg
or
sarb
sbb
push
inc
push
dec
fisubs
cmp
dec
insl
repz
and
loop
add
mov
pop
sahf
mov
cs
dec
inc
push
xchg
mov
xchg
inc
hlt
mov
aaa
leave
aas
jns
cmp
jne
adc
xorb
dec
test
lcall
push
dec
hlt
fistl
sbb
popf
push
pusha
insl
jge
aas
lahf
jle
cmp
inc
push
lods
leave
sub
mov
push
orb
addr16
sbb
hlt
daa
adc
out
sub
sbb
mov
js
xor
mov
sub
lcall
mov
repz
scas
adc
push
mov
test
ret
dec
add
pop
in
frstor
fmul
rol
xlat
inc
aad
popa
repz
push
test
inc
int3
int
insb
push
mov
push
add
adc
xor
testl
push
mov
add
jge
push
jg
pop
cmp
lods
add
or
sahf
xchg
cmp
rolb
pushf
movsl
xor
lret
pusha
aad
xor
mov
and
shl
or
xchg
in
lods
adc
mov
ret
jl
sbbb
je
lret
or
mov
xchg
dec
bound
cli
or
iret
cmp
ljmp
filds
fcomps
stos
icebp
jmp
ffree
sarb
shll
push
add
rcrb
pop
xchg
arpl
test
out
mov
dec
xor
or
xchg
mov
or
call
test
pop
sub
inc
cmp
sub
loop
and
sub
jg
pop
cmp
xor
mov
inc
dec
jge
mov
push
hlt
mov
je
pop
nop
pop
loop
mov
jge
js
push
mov
mov
test
cmp
testl
mov
fdivrl
inc
cld
or
aam
lcall
or
inc
mov
loopne
inc
rclb
cltd
es
sbb
mov
push
xchg
loope
push
adc
mov
mov
inc
int3
push
test
push
dec
imull
and
sbb
mov
jnp
inc
xor
dec
out
outsb
aaa
ret
or
sbb
repz
or
sbbl
xor
call
inc
jge
mov
inc
or
stos
shlb
jg
in
imul
div
cmp
aam
out
mov
push
outsl
das
sbb
shlb
cld
gs
adc
lock
into
push
mov
notl
test
pop
sub
cmpsb
sub
inc
scas
mov
or
and
mov
push
xchg
addl
daa
loop
out
mov
jae
or
movsb
pop
scas
xor
lcall
popa
jmp
add
aad
mov
mov
mov
jnp
push
pop
pop
cmc
in
out
cs
hlt
ret
push
pop
fiaddl
addr16
int
clc
dec
sub
inc
mov
pop
icebp
sbb
pop
loop
sbb
fcompl
outsb
or
popf
hlt
imul
mov
pop
out
push
fistpl
std
popf
mov
shlb
jp
stos
jmp
inc
ret
call
push
subl
cmpsl
jmp
add
inc
push
dec
push
mov
mov
popa
cs
lret
xor
loop
mov
push
push
cmp
cmpsl
jmp
fldenv
fidivs
push
sahf
or
outsl
std
test
sarb
and
pop
pop
add
in
pop
leave
pop
jns
add
pop
dec
xchg
lahf
shlb
les
sbb
inc
push
jp
sbb
cmp
sub
push
xchg
inc
ret
mov
out
not
or
stos
ja
or
into
push
repz
xlat
icebp
rorl
sub
stc
clc
mov
xchg
cmp
daa
push
push
dec
xchg
mov
push
btr
dec
mov
enter
ljmp
scas
in
enter
inc
addr16
lcall
mov
cmpsb
das
daa
lahf
pop
adc
push
pusha
sbb
jbe
xor
lods
or
sahf
cmp
mov
clc
scas
popw
aad
int
sbb
mov
inc
sti
addr16
sbb
into
push
ret
les
popf
push
gs
lods
add
sarl
jle
mov
sbb
mov
mov
sbb
push
das
lahf
lods
xchg
loopew
js
adc
jae
es
xor
jae
jmp
push
mov
jp
rcll
xor
rcr
dec
adc
push
sub
xchg
xchg
mov
jns
mov
sbb
adc
cmc
sbb
inc
je
push
jb
pop
pop
inc
push
pop
movsb
roll
repnz
shrl
mov
push
adc
pop
pop
mov
imul
mov
fwait
in
lret
and
enter
mov
fisubl
jbe
out
pop
xchg
mov
arpl
add
in
pop
mov
lods
jbe
mov
mov
mov
xchg
dec
sbb
xchg
sbb
or
adc
mov
into
shr
fimuls
orl
lret
mov
jl
cmc
or
jno
xor
or
jg
pop
or
in
push
sbb
cltd
loop
mov
mov
mov
dec
pusha
inc
pushf
xchg
push
sbbb
xchg
mov
jns
addl
xor
dec
add
ret
stc
xor
mov
imul
and
mov
jns
sbb
inc
and
cmp
andb
mov
push
xor
mov
mov
lock
aaa
jns
sbb
cli
clc
movsl
push
mov
nop
ret
adcb
aad
cs
inc
jnp
mov
push
jo
and
aaa
andb
lahf
test
das
fcomi
sahf
push
lret
imul
inc
lahf
jmp
rcr
xchg
gs
imul
lea
test
xor
lahf
loopne
dec
sub
daa
sbb
xchg
fs
push
sahf
adc
ds
decl
jbe
and
aad
bound
out
aaa
scas
shlb
mov
sub
shll
mov
roll
dec
dec
pop
sub
popf
test
lods
mov
les
inc
mulb
cmpps
lret
stc
cmp
or
ret
cwtl
lds
icebp
arpl
jae
rorb
stos
fs
std
les
mov
xor
and
push
pop
popa
pop
call
aaa
xlat
xchg
pop
add
test
inc
xchg
out
xor
add
les
xor
jge
mov
arpl
ret
dec
sub
mov
mov
iret
and
rcr
mov
pop
mov
xchg
lcall
fmull
ds
mov
jmp
icebp
sti
push
cmpl
pop
push
mov
pop
and
cmp
cmp
and
sbb
aas
pop
inc
mov
add
pop
movsl
pusha
cli
dec
out
mov
adc
movsb
lcall
mov
ljmp
add
pop
adc
in
out
dec
push
inc
mov
jb
adc
sbb
aas
sub
mov
stc
test
mov
mov
mov
mov
mov
sahf
adc
js
out
jmp
mov
adc
ds
insb
cmc
es
mov
push
and
dec
cmp
in
aam
fdivs
ljmp
push
jne
add
and
jge
xchg
aam
cmp
mov
cld
jo
xchg
mov
out
rclb
add
test
inc
ljmp
into
imul
jecxz
mov
sbb
insl
and
sub
aas
stc
scas
inc
repnz
and
push
xor
test
je
add
mov
ljmp
sub
xchg
cmp
pop
ss
ljmp
jl
inc
lea
jne
cmc
popf
in
lret
aaa
sarl
leave
test
and
adc
inc
addr16
mov
in
xor
pop
mov
jp
sub
pop
lods
aaa
push
ds
mov
sbb
outsb
iret
jg
jg
sbb
inc
push
xor
dec
mov
test
bound
cld
imull
push
enter
jnp
movsl
cmp
in
mov
roll
mov
dec
push
xchg
inc
push
xorl
aas
out
mov
adc
add
cmpsl
xchg
cmp
lahf
ljmp
mov
mov
push
aad
add
pop
sbb
jp
in
sti
into
hlt
pop
neg
push
fsub
roll
jne
repnz
repnz
test
lods
cmpsb
insl
and
das
jp
mov
aad
inc
sahf
outsb
mov
and
add
sbb
loopne
pop
or
push
pop
test
ljmp
sbb
mov
pop
test
fldenv
gs
aaa
xor
fidivrs
xor
jb
test
and
push
xor
addr16
sbb
movsl
push
push
dec
hlt
mov
scas
cltd
int
pushf
aaa
push
dec
enter
js
fcoms
dec
dec
jp
mov
ret
ja
jne
cwtl
and
andl
pop
mov
sbb
cmp
and
mov
cmp
or
aaa
push
gs
lcall
mov
fstpl
pushf
es
mov
cmp
test
test
cmpsb
jmp
iret
cmp
xchg
cli
add
imul
nop
aad
mov
mov
insb
aaa
jno
mov
mov
das
fdivl
mov
pop
xor
push
inc
dec
xlat
or
and
cmp
xchg
insb
mov
xbegin
pop
xchg
movsl
sarb
jecxz
adc
sbbb
cmpsl
pop
push
or
jmp
or
fsub
adc
outsl
cld
xchg
out
pop
pop
in
arpl
leave
push
gs
lock
popa
js
repz
add
xor
arpl
decl
pop
fadds
arpl
jbe
imul
lret
loope
mov
aad
pop
stc
xor
out
mov
stos
xlat
or
mov
pop
cld
shl
sahf
xor
dec
push
mov
sub
mov
cmp
in
push
imul
push
xchg
ret
aam
lcall
push
jae
stos
mov
xchg
imul
xchg
xor
xorl
cmp
loope
test
lret
fbstp
sahf
jmp
push
dec
iret
sub
cltd
mov
movsl
mov
xor
or
add
das
mov
dec
movsl
repz
fisubrl
out
dec
mov
mov
adc
fwait
andb
sbb
sub
cwtl
xor
fmul
sahf
pop
xor
push
mov
inc
adc
fadd
dec
sbb
adc
dec
sbb
xor
rcr
xchg
and
and
sub
movsb
out
sbb
mov
push
cwtl
js
add
cltd
xchg
add
aam
mov
mov
xor
test
mov
popa
imul
cmpsb
cltd
mov
insb
scas
inc
push
jb
sub
movsl
jbe
pop
jo
lretw
in
inc
fs
scas
std
outsl
fwait
call
mov
pop
ljmp
inc
scas
pop
xor
xchg
mov
sub
xchg
xchg
push
cmpsb
push
push
in
pop
mov
pusha
inc
adc
in
mov
cmp
mov
data16
leave
pop
gs
mull
imul
jp
movsb
enter
fnstcw
cmp
cmpsb
sbb
aas
xchg
sbb
cmpl
mov
cmp
mov
jnp
jmp
leave
les
mov
xchg
fisubl
cmc
and
ss
iret
lock
rolb
xor
mov
mov
addr16
into
push
mov
repz
sub
xchg
out
ja
push
adc
cld
clc
and
pop
push
mov
cmpsl
sbb
std
icebp
pop
sub
testl
or
jne
mov
insb
sub
inc
sub
enter
test
add
mov
int3
into
fucom
scas
mov
imul
xchg
push
jne
inc
mov
and
sub
push
xor
nop
push
adc
ret
push
jmp
xchg
loopne
test
or
outsl
jne
pop
aaa
icebp
push
mov
mov
fldl
sub
pop
pop
ja
mov
sbb
ljmp
sub
jo
aas
sub
jmp
mov
insb
mov
in
mov
cmc
xchg
aaa
sbb
dec
or
pusha
mov
xor
sub
push
pop
gs
shll
fwait
test
xor
push
cld
sub
mov
nop
lock
fcoms
fbld
roll
pop
dec
mov
test
test
inc
dec
outsl
mov
sbb
inc
xchg
jns
or
rcrl
loop
inc
fsubrl
insl
out
add
add
in
incb
aaa
out
es
cwtl
repz
call
int3
mov
xor
push
leave
mov
mov
shll
loop
or
sub
adc
jge
ja
imul
adc
cli
daa
lret
insl
lahf
jp
test
mov
in
mov
fwait
mov
or
jo
mov
xchg
daa
push
dec
rolb
sbb
xchg
call
lock
mov
push
sbb
shlb
imulb
jbe
bnd
out
xor
add
das
gs
sub
push
cs
mov
jno
repz
jno
jmp
and
push
fimuls
ret
mov
lea
icebp
or
rcrb
adc
sahf
les
jle
or
shlb
shll
lret
fisubs
xor
movsb
test
dec
aam
fimuls
iret
and
fwait
xchg
mov
pop
lds
sub
nop
ljmp
xchg
cwtl
push
mov
loop
enter
pop
fcomp
add
push
push
mov
jge
or
mov
fdiv
dec
dec
test
inc
stos
dec
inc
pop
insl
jecxz
jb
cmp
add
xchg
adc
out
jg
xor
push
nop
inc
jp
dec
cld
addb
stos
jnp
push
mov
addl
ljmp
adc
iret
ficoml
cli
cs
std
dec
lcall
inc
dec
mov
xchg
std
mov
sbb
ret
lds
jp
mov
fbld
lret
mov
push
and
es
test
push
cmpsl
and
aas
lock
sbb
mov
mov
jno
pop
imul
adc
out
cmp
sub
jg
ljmp
movsb
cltd
mov
adcb
bnd
or
add
jo
adc
lea
adc
xor
movsb
and
push
insl
inc
cld
ret
cwtl
popa
or
add
aam
addr16
in
pop
iret
jnp
in
pop
push
in
divl
imull
sub
int3
pop
scas
pop
icebp
jb
je
mov
aad
int3
icebp
mov
lret
mov
popf
rcrb
sbb
pop
gs
gs
scas
inc
push
add
aad
mov
sahf
out
cmc
rcll
add
sti
mov
sbb
pop
cs
mov
ret
aaa
sbb
test
idivb
cwtl
mov
mov
fnstcw
gs
orb
push
cld
daa
rcl
shll
out
sub
inc
pop
add
fimull
sub
adc
cmp
sbb
outsl
faddp
jns
jnp
adc
mov
cmp
jnp
or
call
inc
mov
or
mov
inc
out
data16
in
addl
arpl
adc
adc
icebp
push
cwtl
dec
xor
add
mov
xor
sub
adc
int3
push
and
pop
mov
mov
shlb
mov
push
inc
pushf
aad
xchg
mov
leave
inc
or
sti
out
cmp
test
mov
pop
rcll
push
mov
imul
mov
add
dec
or
and
fs
lock
cmpsb
stc
lret
push
push
js
lret
inc
data16
nop
cmp
cwtl
xorl
inc
pop
movsb
popa
push
or
and
ret
cli
hlt
popw
sub
jmp
jecxz
insl
sarl
mov
test
outsb
jl
cld
mov
xchg
das
jecxz
pop
xchg
ficoms
dec
add
jno
cld
push
sub
sub
xor
das
xchg
sarb
mov
sub
cmp
sub
adc
rorl
in
push
test
loop
xchg
pop
add
cmc
das
mov
into
xchg
push
push
nop
pop
xor
push
inc
mov
xor
and
mov
xchg
cltd
cltd
inc
jg
cmp
push
mov
mov
cmp
into
mov
push
and
mov
lods
mov
and
addl
mov
roll
fstl
and
roll
jg,pt
outsb
fbld
idiv
xchg
mov
inc
insl
push
sbb
in
movsl
fmulp
insb
in
adc
jmp
in
sub
add
ljmp
fwait
push
adc
pop
sub
roll
addr16
cmp
sahf
scas
loope
inc
pop
sbb
lret
mulb
aaa
adc
inc
jle
imul
enter
xlat
sub
push
fdivrp
mov
and
enter
jbe
std
test
cmp
mull
aaa
jle
jne
call
scas
movsl
add
fs
shll
into
call
inc
bound
lcall
push
add
stos
push
sub
push
sbb
mov
pop
mov
push
fdivr
pushf
dec
outsl
ret
enter
lahf
mov
mov
adc
xchg
and
ja
sbbl
pop
daa
sbb
sub
xor
scas
ret
mov
in
fidivl
clc
mov
adc
outsb
inc
mov
jecxz
sbb
test
enter
ret
mov
adc
pop
repnz
cmp
push
fcomp
cli
call
pusha
frstor
push
int3
fldt
add
int
push
loop
dec
das
test
push
cmp
pop
rcll
jp
xor
in
lret
js
or
cld
mov
jbe
fwait
and
popf
in
xor
adc
pop
scas
movsl
xchg
aaa
xor
mov
xchg
loop
es
xor
add
fnop
rolb
inc
dec
ja
jecxz
jg
stc
stos
lock
shrb
test
jno
and
icebp
pop
fimull
into
lods
xchg
call
xor
lods
scas
ds
jge
ret
clc
push
mov
stos
pop
stos
sahf
dec
popf
fldcw
lea
shrl
das
rcrb
popf
cmp
insb
xor
sahf
imul
sarl
ja
sbb
rol
insb
and
popa
dec
or
out
out
dec
iret
mov
stos
test
jmp
out
fistpll
leave
js
repnz
sbb
dec
cmp
out
les
sub
dec
fwait
pop
cmp
cmc
pop
pop
inc
cli
aas
xchg
mov
mov
loope
pop
mov
mov
sbb
inc
stos
xchg
xlat
stos
outsl
ficoms
sub
dec
push
daa
sub
jb
mov
jge
sbb
loope
sarb
xchg
mov
pushf
jbe
pop
dec
aaa
push
push
jecxz
pop
push
jo
add
popf
outsl
outsl
movb
call
adc
mov
mov
add
adc
enter
xchg
dec
push
push
sub
stc
xacquire
rorb
pushf
dec
les
repnz
insb
hlt
movsb
in
cli
and
icebp
pop
push
pop
and
call
sub
cmpsl
mov
popl
lds
out
scas
xchg
jbe
mov
sarb
lret
pop
pushf
int
repnz
or
push
arpl
sub
xchg
mov
dec
cmp
cmp
pop
pusha
add
mov
fcomi
mov
push
cwtl
lods
rorl
in
loope
loop
adc
out
mov
push
ret
and
sbb
adc
fdivl
les
loope
jo
sub
mov
sub
jbe
int3
int3
xchg
leave
xchg
pop
test
jo
jne
xor
push
ljmp
push
sti
xor
into
ret
sub
cmp
orl
cmp
pop
pop
lret
push
hlt
mov
in
push
adc
int
cld
je
sbb
xor
fisttpll
xor
icebp
aaa
loope
and
aaa
out
aas
add
out
and
hlt
fld
cmc
push
ja
out
push
enter
loop
ret
test
cld
sub
adc
cwtl
es
xchg
outsb
dec
sbb
pop
sbb
insb
push
stos
shl
mov
cmc
aas
cmpb
jnp
fstl
fisttpl
mov
sub
mov
xchg
imul
cli
das
adc
stos
inc
push
pop
jecxz
mov
cmp
insb
mov
dec
cmp
sbb
cld
xor
outsl
xchg
in
fisubrl
aaa
leave
push
js
iret
gs
repnz
fdivrs
fildl
jbe
popaw
pop
sub
xchg
iret
inc
jne
and
std
popa
cmp
test
icebp
cmp
push
ljmp
negb
cltd
lahf
xchg
or
test
hlt
jmp
dec
pusha
roll
mov
add
fcoms
gs
lret
push
lods
fiaddl
imul
pop
mov
mov
jbe
sub
clc
cmp
sahf
xor
add
xor
psubb
out
fistl
adc
ljmp
lds
mov
addr16
pusha
and
jbe
imul
lods
inc
nop
xchg
dec
cltd
dec
hlt
inc
jno
fidivrl
mulb
pop
lea
ret
xchg
mov
and
mov
lods
hlt
orl
je
lock
jmp
sbb
inc
insl
loopne
out
sahf
icebp
scas
scas
jge
jae
cmp
jbe
dec
stos
mov
dec
and
cld
ds
das
xchg
cmp
mov
sbb
fsubs
adc
repz
out
cmpsl
je
stc
out
fs
pop
cltd
repz
int
sub
xor
mov
mov
xchg
pop
in
cmpsl
sti
in
or
jb
mov
xchg
add
imul
or
xchg
add
mov
mov
jae
stc
mov
mov
mov
roll
add
pop
lahf
inc
push
call
xchg
adc
stc
add
sahf
xor
outsl
rorb
sbb
xchg
into
mov
mov
out
std
cmp
jne
aaa
mov
jmp
lds
inc
cmp
arpl
push
ljmp
out
mov
adc
bound
add
loopne
dec
cmc
ss
mov
add
pop
cli
iret
add
lcall
or
add
add
shll
insl
mov
mov
lods
scas
repnz
lods
dec
insl
lods
cmp
leave
nop
ja
loop
dec
adc
es
orl
sub
loop
sbb
ja
adc
jne
fnsave
dec
inc
dec
mov
sub
jno
inc
scas
mov
aaa
cmc
dec
mov
and
out
into
shlb
adc
inc
jae
imul
mov
dec
xor
inc
or
or
nop
pop
xchg
sbb
push
mov
out
lock
cli
aam
and
or
sarl
xor
loopne
cmp
lcall
icebp
sub
mov
roll
test
cwtl
push
dec
fldl
xor
movsl
mov
into
test
clc
ds
nop
dec
inc
jmp
aad
insl
adc
out
aas
aad
lret
adcl
cmp
jns
cmpsb
or
cmp
inc
jg
mov
fisttpll
xor
test
shll
into
test
es
cmpsl
mov
pop
dec
ss
cmp
popf
pop
or
sbbb
inc
pop
dec
gs
jecxz
xor
ret
rcrb
push
cwtl
insl
int
xor
negl
sub
jmp
inc
cmpsl
stc
dec
outsb
icebp
out
and
pusha
mov
push
cmpsb
cld
call
sysexit
dec
out
sahf
imul
test
aaa
cmpsb
adc
int3
cmc
frstor
add
stos
stos
jmp
pop
push
mov
cmc
xorb
or
mov
adc
pushf
sbbl
addr16
mov
loope
popa
clc
notb
stos
adc
mov
inc
inc
lcall
rcrb
adc
pusha
push
pushf
daa
fisubs
xor
push
into
xchg
add
into
push
mov
sub
fistl
push
inc
cmp
and
in
cltd
mov
dec
xchg
fdivs
sbb
inc
aad
outsl
loop,pn
jmp
adc
iret
jnp
jg
fsubs
mov
push
in
xchg
add
dec
das
jg
adcl
pusha
ret
enter
sti
jno
mov
mov
test
or
pop
adc
jecxz
pop
push
lcall
or
xor
icebp
rorl
cs
outsl
push
ret
leave
mov
mov
aam
pop
adc
push
push
fimull
and
imul
or
push
testb
cmpsb
fsubp
cmp
pushf
mov
test
lock
inc
in
movsb
sbb
movsl
add
xchg
repz
pop
pop
iret
jb
adc
cs
cltd
jge
fisubrl
addr16
loop
or
ja
aas
lahf
std
jle
inc
fisttpl
pushf
ret
jl
jo
jge
mov
and
jno
jmp
data16
dec
ds
jle
jl
iret
add
pop
aam
out
mov
mov
pop
lods
mov
sub
daa
popa
add
iret
jnp
lods
sbb
xchg
add
aaa
das
add
sti
sub
lods
out
sub
push
inc
inc
pop
mov
add
test
stos
or
cs
outsb
mov
divl
cmp
sub
push
dec
or
das
fisttpll
sbb
das
dec
lods
jle
stos
inc
xor
jne
pop
add
insl
xor
aad
mov
movsl
dec
in
js
sub
sub
iret
or
into
dec
stos
stos
add
in
push
push
sbb
rcrb
xor
imul
cltd
or
das
insb
fildl
js
pop
xor
cmc
test
jbe
inc
jl
pop
dec
and
xchg
int
mov
jp
loopne
adc
sbb
iret
es
jno
or
add
add
pop
pop
adc
insl
dec
repz
dec
xor
mov
imull
in
dec
loop
sub
jb
jg
jg
jb
xchg
push
jecxz
lock
mov
add
jp
cld
adc
xchg
pop
fiadds
test
mov
jge
sub
push
push
pop
mov
inc
inc
add
xchg
call
das
cli
ja
jecxz
push
inc
fwait
adc
into
ss
ret
xchg
inc
mov
sbb
ficompl
sbb
add
fs
and
add
js
mov
sahf
adc
or
pop
dec
cmp
daa
lahf
sub
movsl
lods
cli
imul
loope
adc
inc
mov
jmp
stos
xorl
push
add
bound
sub
mov
stc
cld
dec
dec
fldl
ds
pushf
sub
jecxz
mov
inc
rcll
mov
mov
push
xor
dec
cli
inc
stos
push
or
add
mov
divl
mov
outsb
inc
fnsave
sarb
add
pushf
push
xchg
jno
popa
aaa
jo
cs
mov
mov
outsb
in
aas
test
out
das
out
mul
ja
mov
in
int
mov
sti
sbb
xor
cld
pusha
and
xor
insl
sarb
mov
das
dec
test
int
or
pusha
push
adc
sub
popf
cmp
imul
cld
add
mov
lret
dec
cmpsb
js
sti
mov
mov
test
fisubrs
fucom
gs
movsb
mov
mov
jp
aad
lret
mov
or
xchg
mov
pop
pop
or
bound
xchg
or
pop
je
mov
or
test
es
xor
xchg
or
outsb
jbe
or
adc
cmp
fiaddl
sbb
movsl
pop
push
das
push
xor
in
push
pop
sub
or
mov
cmp
and
jge
flds
lods
sub
xor
jne
lcall
and
inc
rclb
pop
add
in
mov
xchg
inc
xor
loope
pop
mov
lds
xchg
add
js
or
testl
imul
mov
and
jo
or
lret
inc
jl
xor
aam
add
jg
mov
fucomip
mov
icebp
push
mov
imul
push
in
mov
pop
mov
maskmovq
mull
cmp
adc
mov
sub
sub
xor
lahf
mov
in
xchg
or
std
or
iret
test
mov
aaa
out
stos
inc
mov
rcrb
movsl
pop
ja
mov
sti
or
add
cmc
sbb
fidivrs
enter
mov
aas
jmp
outsl
and
dec
push
xchg
mov
inc
incb
dec
dec
cmp
insb
cmp
mov
daa
push
xchg
push
add
mov
xchg
incb
icebp
mov
push
push
or
dec
gs
mov
lock
hlt
mov
stos
clc
cld
test
pop
jbe
bound
pop
icebp
movsl
push
in
cmpsb
push
test
nop
imul
fbstp
push
pop
stos
adc
icebp
mov
mov
in
jecxz
push
mov
push
inc
sbb
sbb
sbb
imul
ret
data16
mov
push
cld
repnz
jns
inc
imulb
jge
and
sbb
fsubp
sbb
cmp
stc
mov
loop
movsl
jecxz,pn
jo
std
dec
cmp
movsl
lret
outsl
cmp
in
xchg
mov
mov
push
mov
loopne
mov
dec
pop
dec
test
cmpsb
clc
pushf
loope
outsb
pusha
rcrl
aad
inc
pop
xor
add
jnp
and
push
les
imul
inc
xchg
call
cmp
push
lret
add
jge
and
push
cli
pop
mov
mov
addr16
push
xlat
jne
xor
add
mov
faddp
in
loope
xchg
push
pop
jo
mov
shlb
negl
repnz
push
fnstenv
bnd
pop
aaa
shll
xchg
iret
lea
lahf
in
cmp
out
mov
cld
test
adc
adcl
hlt
mov
mov
test
in
lea
mov
push
inc
and
pop
scas
xchg
bound
dec
aas
setnp
loope
stos
xchg
mov
jnp
gs
mov
jb
xor
es
push
sbb
sbb
mov
out
lods
sbb
lret
cwtl
loope
sub
xor
xchg
nop
mov
mov
pop
jl
sbb
mov
out
sahf
mov
mov
cmp
outsb
adc
in
testl
mov
loop
loope
pop
pop
pop
jle
out
sub
jle
push
ljmp
daa
negb
mov
insl
lahf
lret
pusha
add
cmpsb
mov
in
sbb
mov
xchg
movsb
adc
ficompl
iret
xor
push
mov
dec
sub
mov
cli
ret
pop
or
es
cmp
out
mov
and
mov
fisttpll
push
repz
test
and
in
push
cld
xor
and
std
xor
push
mov
cli
outsl
ret
mov
mov
cmp
dec
inc
sbb
ret
out
frstor
rcll
adc
repz
xchg
test
es
and
lret
fstl
add
loope
movsb
mov
pop
dec
sub
xchg
ret
jbe
js
mov
push
and
sub
lcall
loop
jns
loope
sub
in
jle
adcb
lea
call
and
ficompl
sub
cmp
stc
cmp
test
and
fnsave
mov
cs
mov
inc
inc
in
xor
mov
xchg
rcr
mov
xchg
test
inc
fdivr
fldl
mov
sbb
bound
sbb
imul
fisttps
xor
push
rcll
sarb
xor
pop
and
mulb
sarl
or
sarl
cmp
mov
xlat
gs
in
movsb
inc
sbb
push
xor
mov
sub
nop
das
mov
pop
lcall
mov
insb
mov
stos
inc
jo
adc
cmp
sub
add
mov
ret
daa
repnz
je
test
outsb
mov
mov
jae
sti
inc
test
stc
test
mov
cwtl
cmp
stos
arpl
aaa
repnz
sub
push
in
adcb
mov
and
addr16
cmp
cwtl
scas
pop
hlt
sbbb
addr16
push
lret
mov
icebp
mov
dec
add
or
mov
daa
jns
loope
fcoms
dec
mov
jb
fdivp
lods
imul
into
mov
jae
icebp
adc
sbbl
in
pop
mov
sub
repnz
or
mov
and
imul
rcll
pushl
mov
in
sbb
stos
cmpsl
cmp
xchg
xor
mov
mov
in
ss
scas
adc
pushf
fsubs
testb
xlat
cmpsl
and
push
sub
mov
mov
push
mov
loope
stos
inc
enter
mov
mov
lea
ss
mov
fs
mov
into
xchg
push
mov
jle
inc
push
inc
repnz
mov
add
push
jae
adc
jge
lods
sbb
call
imul
xchg
and
inc
or
push
and
movl
lock
adc
add
pushw
sub
mov
aam
test
cmp
outsb
sbb
int3
mov
dec
push
es
push
lahf
loopne
lods
cmp
jo
sbb
fldl
nop
mov
in
insl
mov
repz
pop
push
and
mov
push
pop
pop
gs
jno
dec
push
sub
sbb
imul
leave
add
jmp
add
in
mov
cmp
jg
cli
add
pop
out
cmp
xchg
add
sahf
dec
sbb
mov
dec
pop
sub
add
fsubp
xlat
lods
mov
outsb
outsb
cmp
pop
sub
adc
pushf
jl
xchg
shl
imul
sub
cwtl
jnp
bound
scas
clc
clc
sub
stos
fcompl
lds
push
loop
call
mov
insb
cmp
dec
mov
test
or
popa
gs
cld
dec
js
clc
push
pop
jle
inc
mov
and
in
div
in
jno
xchg
repnz
adc
sahf
push
push
pop
mov
add
hlt
dec
sbb
sarl
ja
movsl
je
sub
sbb
mov
xchg
xor
outsb
dec
jbe
imul
adc
xchg
imul
and
sbb
xor
loop
cmpsb
movsb
popa
aam
ja
adc
into
rcll
lds
inc
pop
jg
and
add
add
pop
orl
test
mov
xchg
adc
xchg
gs
hlt
jnp
pop
std
stos
add
nop
leave
add
fmull
xchg
xor
loope
dec
clc
sbbl
icebp
andl
mov
subl
leave
arpl
loope
dec
mov
adc
ljmp
adc
xchg
jae
dec
mov
lods
pushf
sub
fists
mov
add
dec
pop
test
mov
inc
push
int
push
pop
xchg
int
fwait
push
sub
pop
movsl
push
shrb
dec
ficoms
fs
es
mov
fs
cmp
ret
cmpsb
xor
mov
adc
adcl
loopne
cmpsl
jecxz
popa
sbb
cmp
mov
mov
push
scas
hlt
fstps
and
into
dec
pop
inc
loop
stos
cmc
jmp
loopne
or
rcll
mov
je
pop
mov
ss
ja
fistpll
std
jnp
adc
adc
push
xchg
jmp
add
jno
pop
pop
idiv
rolb
push
jle
fsubrp
jp
cmp
pop
arpl
rcll
or
adc
lea
fadds
add
inc
std
or
mov
dec
cmp
xchg
arpl
data16
in
and
jp
mov
int3
or
lea
xchg
mov
aaa
lahf
or
bound
or
cmp
imulb
adc
addb
cmpsb
lahf
sbb
sbb
jmp
pop
jnp
push
jbe
mov
in
push
fs
popa
push
lods
neg
xor
inc
data16
in
cmp
insl
aas
testl
out
sub
mov
push
mov
add
inc
test
xor
jge
addr16
xchg
mov
inc
pop
adc
jnp
std
pop
push
shlb
fisubs
ffree
xchg
nop
add
push
mov
or
ret
mov
cmp
or
push
push
data16
call
imul
int3
dec
stc
jno
hlt
mov
jns
mov
push
sbb
dec
inc
xorb
add
mov
xor
adc
cmp
sub
mov
outsl
icebp
call
jae
xor
lods
dec
inc
mov
dec
sub
mov
arpl
outsl
mov
sbb
or
xlat
cld
push
mov
mov
cmp
and
es
mov
mov
aas
and
stos
inc
xor
cmp
nop
cmpsb
and
sub
mov
jmp
pop
mov
add
hlt
add
jge
and
xchg
outsl
test
into
into
frstor
jae
xchg
jge
into
insl
dec
pop
popf
out
mov
loopne
mov
test
insl
inc
stos
fimuls
add
dec
jle
adc
sbb
push
mov
lds
out
add
dec
lcall
push
sbb
inc
inc
ds
fdivp
fsubr
nop
in
dec
pusha
imul
out
loopne
sub
mov
test
in
xor
mov
bound
jbe
fsts
pusha
inc
jns
fsubrs
push
adc
add
pop
lahf
repz
sub
push
lea
and
ja
jl
ljmp
andl
inc
lret
pop
outsb
lret
dec
pop
adc
push
xchg
xchg
jp
lods
arpl
cs
mov
pusha
jo
enter
jmp
mov
stos
loopne
testl
dec
xchg
pop
lahf
mov
dec
jle
mov
sbb
ret
mov
adc
cmpsl
jp
ja
hlt
sti
adc
pop
cmp
inc
dec
mov
jp
aam
push
ret
mov
outsl
movsb
insl
xchg
push
scas
dec
sbb
pop
jbe
insb
or
das
or
loop
addr16
rcll
xchg
inc
repz
stos
aaa
fwait
arpl
lods
xor
mov
mov
adc
mov
or
mov
ret
sub
dec
pushf
xor
scas
push
jge
test
lods
and
in
into
xor
sti
in
pop
pop
xchg
mov
in
movsl
lods
insl
adc
sub
cs
xor
mov
pop
test
cwtl
movsb
movsl
js
lret
jns
mov
or
and
push
ret
outsb
mov
sub
or
adc
fiadds
addl
cld
adc
pop
test
fwait
mov
rol
ret
sub
ret
cli
sahf
jns
dec
mov
sbb
inc
icebp
mov
fwait
aad
add
clc
outsb
mov
pop
push
adc
mov
fsubrl
adc
out
inc
add
lods
inc
add
mov
inc
jbe
sub
inc
sarl
mulb
xor
inc
mov
mov
pop
ficomps
repz
add
cmp
mov
add
scas
andps
mov
push
std
ret
rcrl
pop
enter
ljmp
dec
xchg
cmpsl
nop
xchg
cmp
addr16
shr
mov
inc
cmpsb
xor
inc
xchg
jg
rcll
mov
cli
bound
outsb
inc
sub
push
jnp
dec
aad
ficomps
into
xchg
jns
pop
arpl
aas
out
out
cmp
outsb
push
push
mov
sbb
out
xor
mov
push
jo
mov
sbb
shrb
dec
insb
jnp
cmpsb
jbe
or
test
repnz
ss
cmp
dec
lods
cmc
or
sub
out
rcrl
xor
push
sbb
jl
jb
pop
adc
cmp
push
jae
je
pop
jl
scas
sbbl
sbb
mov
and
push
movl
imul
pop
flds
mov
scas
cmpsl
dec
cltd
adc
lock
mov
cli
int
xchg
fnstsw
jecxz
sbb
or
xchg
ja
stos
mov
jns
scas
scas
std
jl
out
les
cmpsl
push
jg
inc
sar
mov
in
sub
cmp
in
mov
or
ds
mov
lcall
cwtl
leave
in
pop
or
scas
test
scas
pop
inc
pop
inc
cmp
stc
lds
cmp
and
sbb
fcoms
stc
mov
imul
sbb
arpl
jo
imul
cmp
repnz
int3
test
mov
clc
mov
rol
test
xorl
cmpb
sbb
testl
xchg
lret
pop
iret
cmp
jns
jns
fcompl
out
adc
jno
jo
mov
shl
push
aam
out
fcompl
jmp
fisubrl
outsb
push
lahf
hlt
fcmovbe
adc
mov
mov
std
mov
cmp
push
js
rorb
lock
iret
cmc
pushf
mov
in
xchg
or
sub
inc
int
pop
insb
ficoml
xchg
jecxz
dec
jp
rclb
lods
clc
subl
das
ret
pop
jo
lret
push
out
sbb
mov
jae
out
dec
sbb
shrb
jnp
mov
lock
mov
cwtl
push
push
sbb
mov
ss
rolb
int3
xor
ss
aaa
push
in
jae
mov
mov
xchg
and
aaa
push
fsts
inc
ret
mov
lret
lds
lcall
and
dec
sbb
out
mov
pop
lret
repz
xor
je
hlt
jno
pop
sub
mov
cmp
xor
sub
lods
add
inc
inc
pop
cli
cmp
popf
sub
scas
data16
jnp
pushf
ret
mov
jno
cwtl
ljmp
fisubs
out
cmp
repnz
gs
hlt
jns
mov
add
pop
push
rolb
out
sub
or
fimull
mov
ss
aam
pop
jecxz
jmp
es
cs
pop
sub
sub
adc
sub
mov
addr16
test
lret
js
pop
lds
push
push
orb
pop
lock
and
dec
mov
sbb
daa
push
adc
scas
in
mov
jle
push
sub
clc
ja
jb
lock
pop
notb
in
repz
xor
dec
shrb
ja
aad
rcr
lods
int
test
jbe
aam
sub
jle
mov
jmp
inc
mov
loopne
jmp
and
xchg
sub
mov
idivl
out
scas
in
fidivrs
or
aaa
ds
jae
cs
popa
mov
xchg
pop
shl
ja
ret
mov
fwait
xor
popf
jnp
test
sti
imul
push
lods
xchg
es
sub
shlb
stos
add
pop
call
into
inc
cmp
fs
int3
xchg
adc
rorl
jb
sub
fistpl
hlt
dec
push
ds
dec
inc
and
les
xor
mov
movsl
pop
mov
push
or
add
or
mov
pop
xor
pop
push
xor
jmp
jl
dec
mov
mov
mov
addr16
test
in
mov
adc
cwtl
push
cmp
leave
addr16
mov
pop
sbb
pop
mov
gs
cmpsb
dec
jle
jecxz
int
shll
cmp
xchg
aas
jg
mov
lret
fs
repz
rcll
push
sbb
cmpsl
aaa
scas
je
push
cwtl
inc
mov
jp
jmp
mov
aad
sub
mov
imul
mov
push
jl
mov
arpl
or
pop
decl
cmpsb
pop
pusha
iret
adc
jno
sub
cmpsb
adc
lcall
mov
cmpsb
repnz
inc
fsubrs
cmp
outsb
movb
sarb
mov
xchg
je
scas
inc
xlat
dec
and
adc
inc
ja
lret
jmp
sti
mov
ret
and
jle
inc
sbb
je
es
scas
lea
mov
ljmp
cmpsl
lcall
iret
cwtl
ret
cmpl
sub
lcall
xlat
add
cmp
xchg
jmp
xchg
negl
pusha
pop
sahf
xchg
sahf
or
mov
aam
mov
jle
rorb
xchg
sub
jns
xlat
aad
and
daa
insb
pop
cmp
sbb
adc
jg
stc
daa
enter
pop
popf
mov
nop
jbe
push
inc
jo
cli
test
mov
jne
mov
scas
in
or
lock
std
rorb
push
xchg
sbb
loope
insl
aas
loope
jp
sbb
cmc
scas
sbb
or
jp
xor
rorb
imul
push
pushl
sbb
or
push
inc
lret
movsb
or
gs
lret
jne
and
push
add
ljmp
jmp
cmp
daa
sub
cmp
mov
pop
mov
jo
rol
stos
cmpsl
inc
inc
sbb
or
sahf
sbb
icebp
std
cmc
lds
scas
out
pop
test
adc
or
leave
sub
imul
mov
test
es
and
mov
fdivr
adc
addr16
xchg
sbb
push
stos
sbb
iret
xor
push
and
mov
inc
stos
mov
lods
in
jecxz
xor
int3
xor
aas
xor
pusha
shrl
lock
aam
xchg
ret
and
stos
movsb
sbb
icebp
mov
jmp
mov
testb
out
dec
iret
test
rcr
scas
loopne
testb
aam
push
jge
cmp
fadd
shlb
js
stos
sarb
sub
jge
pop
lods
icebp
cmp
int
rolb
cli
push
lds
xchg
cwtl
mov
out
ds
arpl
ficompl
imul
jge
insb
sbb
cltd
mov
jl
loopne
stos
aas
loope
xlat
je
xor
into
adcl
mov
sub
jle
pop
dec
inc
adc
mov
sub
stos
xor
int
js
shll
cmpb
xchg
pop
fidivrl
pop
dec
mov
add
fisttps
stos
nop
pop
mov
xchg
adc
dec
loop
mov
jg
pop
loop
inc
xor
adc
fs
push
pop
mov
loop
xchg
in
mov
cmp
cmp
ss
xchg
jmp
and
in
jb
cmpsl
push
inc
mov
add
pop
in
push
pop
sub
pop
mov
sti
fs
push
fwait
aad
iret
inc
negl
dec
push
not
bound
or
bound
inc
aad
repz
orl
cwtl
or
adc
rolb
jno
adc
sub
test
xchg
mov
imulb
fcomi
inc
scas
lds
fmul
popf
sbb
push
jo
push
ss
mov
and
stos
pop
sahf
pop
rorb
xor
js
jo
iret
cmp
aas
pop
jmp
test
and
outsl
sar
orl
pop
mov
sub
fcoms
adc
pop
movsb
xchg
fnstcw
mov
jge
cli
dec
fstl
push
outsb
mov
aas
mov
icebp
js
out
dec
pusha
sbb
mov
cmpsl
or
sahf
aad
sub
sbb
insl
jl
cs
fcmovu
adc
inc
in
lret
daa
aam
nop
sti
mov
testl
xor
adc
sub
xor
repz
sbb
out
cmp
aad
push
leave
pop
or
xor
sbb
popl
lahf
push
jne
ja
lods
in
jno
mov
js
push
jns
fadds
or
popf
out
dec
jp
out
cmpsl
push
cmpsb
jne
push
stos
cmp
mov
xchg
or
in
mov
cmp
inc
inc
ljmp
imulb
loop
push
or
inc
push
testl
rolb
xor
mov
test
lods
fstpt
lret
cli
jmp
pop
add
jb
xchg
ret
int
and
mov
xor
dec
repz
jge
or
insl
mov
js
pop
pop
adc
loope
test
adc
int3
addr16
xor
pop
push
sub
mov
out
inc
leave
fidivrl
or
cmp
dec
push
movb
aaa
icebp
enter
mov
push
xor
ja
daa
xorb
sub
push
push
imul
pop
sbb
mov
mov
pop
fmulp
cmp
cmpsl
mov
mov
fnstsw
bnd
pop
aas
outsb
adc
push
adc
xchg
adc
dec
and
insl
aam
insb
sub
or
mov
ja
mov
and
dec
mov
cld
outsb
sahf
jle
lret
js
shll
or
push
pop
loope
push
aad
lcall
cwtl
daa
mov
mov
pop
pop
dec
mov
lret
xchg
xchg
and
mov
push
inc
jb
fdivrs
rcrl
adc
push
pop
mov
jo
scas
xor
out
add
and
push
push
pop
jnp
call
mov
into
mov
lea
nop
cmp
or
xor
sub
mov
push
mov
lds
cmc
test
lods
int3
scas
xchg
mov
push
cli
stos
leave
lret
push
xchg
sahf
test
andb
das
ja
push
sbb
test
lods
pop
stos
sar
js
cmc
mov
xchg
cwtl
call
and
daa
scas
dec
in
insl
shr
inc
and
mov
stos
bound
stos
pop
fidivl
xor
rclb
adc
mov
jo
stos
push
inc
pop
fsubl
iret
das
pop
aad
mov
data16
int
mov
xchg
rorb
shl
mov
cmp
in
ret
adc
cmp
inc
cmc
lods
jg
sbb
jmp
rcr
push
push
outsb
insl
scas
leave
inc
aas
or
fcoml
sub
repz
insl
fwait
xorl
mov
call
test
int3
fs
cmp
imul
sahf
and
cltd
xlat
mov
idivl
popf
insl
fdivrl
jae
je
sub
inc
jne
mov
jmp
cmpsb
mov
stc
movsb
mov
sbbb
mov
ljmp
hlt
xor
bound
sbb
push
jge
add
fwait
dec
push
fisubrs
pop
push
cmp
arpl
ja
loop
and
int
ds
mov
mov
push
imul
xor
fiaddl
and
mov
dec
bound
or
mov
cmp
adc
jmp
imul
pop
movsb
inc
xchg
mov
fs
test
or
lods
pop
push
outsl
shlb
mov
idivb
cwtl
mov
jno
shlb
jecxz
cwtl
xor
adc
mov
scas
dec
icebp
xor
lods
sub
mov
dec
pop
loop
lret
dec
jecxz
and
mov
pop
call
xor
pop
sub
jo
push
mov
mov
xlat
dec
pop
mov
push
clc
adc
shrl
pop
iret
mov
lock
in
push
dec
stc
rcrl
testb
gs
cwtl
in
mov
xlat
adc
cltd
xchg
sbb
aas
stos
pop
sub
lret
lock
pop
aam
mov
jg
repnz
outsl
mov
das
mov
sub
sti
dec
sub
xor
xchg
iret
xchg
leave
mov
enter
jmp
jl
jg
stos
outsl
mov
mov
out
jecxz
cmpsl
pop
fwait
jbe
js
mov
jg
or
mov
add
inc
jmp
jno
jmp
cmp
in
je
push
adc
out
es
mov
inc
pop
cli
sti
fdivs
scas
sub
mov
sbb
mov
xchg
push
pop
jns
addr16
dec
inc
out
dec
fdivl
imul
mov
cmpsb
imul
mov
nop
add
pop
push
xor
cld
pop
sub
or
mov
sti
rcr
aad
sti
imul
xor
xor
mov
xchg
cmp
js
movsb
sub
test
xchg
es
mov
movaps
shr
mov
mov
dec
sub
inc
mov
outsb
push
jmp
out
test
push
push
arpl
subl
xor
mov
and
repz
gs
pop
or
cmpsb
push
mov
xor
mov
shr
push
pop
movsb
lahf
mov
and
inc
loopne
sbb
inc
shlb
mov
push
inc
mov
mov
mov
icebp
jbe
jg
jno
pop
in
adc
pop
dec
shr
fsubs
insl
or
pop
dec
add
dec
jne
push
test
aam
lret
stc
cmp
cld
es
mov
dec
xchg
arpl
clc
lret
mov
fildll
pop
inc
pop
xlat
enter
cmp
gs
cmp
push
xchg
out
out
nop
iret
ret
lahf
cwtl
inc
adcb
jg
lret
add
outsl
cmp
lea
jae
bound
jl
out
xlat
mov
jbe
or
or
dec
mov
sti
leave
or
mov
xor
or
jbe
jmp
cmp
dec
in
xor
xor
inc
jecxz
test
or
cmc
lea
xor
lds
fstpl
fstpt
mov
inc
aam
pop
movsb
mov
out
aaa
out
loopne
push
jmp
sub
movsb
sbb
dec
jmp
adc
mov
ja
icebp
mov
pop
cmp
xchg
pop
lcall
testb
arpl
xor
cs
bound
scas
ss
inc
xchg
mov
adc
mov
sbb
popf
sbb
in
xchg
sub
mov
cmp
xchg
dec
xchg
sub
jecxz
sbb
lea
sbb
cmp
sbb
xor
xor
ror
xor
int
daa
movl
scas
data16
xor
cmp
mov
idivl
push
cmp
or
push
jno
mov
jge
add
cmp
out
jno
aas
lock
or
mov
xor
cli
movsb
xor
mov
sti
imul
and
push
or
xlat
xchg
ret
cmpb
and
mov
dec
or
or
mov
sub
xor
shll
jns
cmp
mov
xor
outsb
lods
out
jecxz
arpl
push
es
cmp
aad
xor
pop
cmp
and
ret
inc
lea
pop
addr16
hlt
cmp
clc
xor
call
neg
sahf
add
sar
loopne,pn
in
push
sbb
fsubr
pop
and
jecxz
daa
mov
out
push
sbb
xor
test
mov
std
aaa
mov
mov
or
call
adc
xor
or
mov
lds
stc
int3
or
push
lret
mov
xor
icebp
jl
dec
ljmp
pop
pushf
in
icebp
fstpt
jmp
jae
loopne
and
lock
pop
into
mov
xchg
rclb
xor
jno
add
sub
shll
loop
and
repz
cwtl
mov
repz
mov
es
movsl
shrb
bound
neg
loop
push
and
daa
push
stc
call
je
idiv
jo
sub
cmpb
pop
mov
sub
mov
pop
hlt
jae
outsb
es
push
mov
lahf
or
xor
dec
inc
sbb
icebp
push
push
pop
movsl
fdivp
or
ficomps
bound
cmp
xorl
hlt
add
xchg
xor
leave
sbb
jge
jl
ret
inc
dec
mov
jnp
daa
into
and
xchg
repnz
aas
btc
push
imul
push
xor
div
loopne
into
hlt
xchg
lret
fldl
out
insl
xchg
pop
or
cmc
jg
repz
movsb
ret
mov
mov
and
sub
rcll
push
arpl
push
dec
hlt
mov
stos
inc
cs
movsb
fisubl
enter
and
loop
arpl
cmp
insb
mov
icebp
dec
xor
fimull
mov
mov
mov
and
and
outsl
insb
loop
loopne
in
jmp
push
inc
lock
das
into
push
push
dec
fmull
rcll
push
mov
jae
fcmovnbe
int3
xor
xor
and
or
pusha
mov
roll
leave
ss
push
pop
pop
adc
cld
inc
fnstsw
insl
lods
mov
cmpl
dec
adc
popf
ja
insb
sti
pop
mov
adc
or
jbe
lds
inc
and
nop
inc
xchg
dec
jg
and
add
sti
xchg
xchg
bound
push
cwtl
imul
nop
int3
icebp
adc
mov
jg
arpl
scas
inc
mov
lea
or
mov
sarb
lahf
sarb
push
aam
dec
push
lret
test
das
jmp
push
add
mov
bound
dec
int
lds
mov
push
ljmp
rorl
leave
fildll
je
sub
adc
ss
popl
cmp
pop
out
repnz
stos
mov
lret
dec
insl
imul
mov
stc
arpl
push
sub
mov
sub
ret
adc
jge
out
jnp
inc
cmpsl
fimull
sbb
hlt
iret
adc
or
sub
xchg
mov
out
mov
nop
out
scas
and
fsts
jecxz
pop
jg
mov
popf
sbb
xchg
dec
cmpsb
int3
stc
adc
outsl
push
lcall
mov
sbb
and
pop
js
scas
add
mov
loopne
jl
popa
sbb
cmpsl
mov
mov
lahf
xor
mov
xor
mov
ret
es
adc
int
icebp
divl
rolb
adc
and
nop
add
adc
out
ss
adc
inc
aas
push
and
dec
es
mov
jmp
pop
orl
xchg
addl
or
inc
mov
sub
decb
js
mov
jae
out
in
popa
out
adc
xchg
or
xchg
ret
lds
push
cs
push
pop
leave
cli
scas
scas
xchg
dec
shrb
jnp
pop
push
adc
insl
or
inc
notb
dec
pop
into
sub
pop
push
out
sahf
pop
and
ljmp
and
xorl
push
int
xor
push
rep
rcrl
sbb
fcoml
cs
jno
adc
sahf
sahf
add
test
jl
nop
shl
push
hlt
leave
jne
sub
fisttpl
movsl
or
gs
ret
les
ss
lock
pop
gs
dec
inc
inc
icebp
testb
call
fsubrs
mov
outsl
lock
mov
jno
sbb
lods
les
xchg
rcrb
mov
mov
inc
daa
and
movsl
push
mov
sbb
dec
add
or
push
add
ret
mov
ja
repnz
jmp
imul
nopl
dec
stc
xchg
or
dec
pop
cltd
jge
dec
stc
push
dec
ret
push
and
pop
inc
adc
push
and
lret
fldt
mov
dec
cwtl
ja
xor
subl
adc
shr
and
fcoml
not
or
outsb
xchg
push
shrl
imul
mov
dec
xor
xchg
lds
or
or
cld
lret
mov
addr16
mov
gs
out
sbb
xchg
rolb
and
push
xchg
insb
scas
pushf
jae
pop
jo
pop
xlat
cmp
cmpsl
cmpsl
xor
sub
movsl
les
sbb
adc
and
add
loop
mov
aas
cld
inc
xor
pop
inc
sbb
xchg
or
imul
jb
sub
repz
sbb
mov
into
jle
fs
les
push
repz
mov
in
mov
sbb
test
cwtl
pop
push
shll
int3
fldt
fs
jecxz
loopne
test
in
jle
imul
addr16
add
dec
push
fldt
xor
insl
cli
lea
cmp
jp
mov
xchg
fwait
dec
xchg
jmp
jae
mov
cmp
cmp
jl
leave
movl
cmp
jnp
inc
pop
pop
inc
jnp
xor
loope
xchg
or
mov
mov
pop
push
pusha
into
int3
shlb
pop
pop
push
and
lds
sub
adc
xchg
mov
mov
adc
popf
gs
and
in
arpl
mov
adcl
mov
jnp
sbb
adc
mov
outsb
push
inc
push
push
hlt
xchg
mov
hlt
xchg
std
sub
push
out
and
popf
xlat
loopne
dec
in
inc
enter
mov
fwait
inc
out
adc
jnp
aam
inc
sub
add
adc
sub
call
in
out
add
sub
adc
aad
add
sbb
lock
jne
add
xor
or
cmpb
call
jl
lcall
adc
xor
mov
add
ss
icebp
or
dec
xor
outsl
repz
fstpl
or
and
jl
filds
adc
movsb
rcl
jne
inc
dec
lcall
xorb
cld
sbb
xchg
add
sbb
push
xor
fwait
loopne
cmpsb
xchg
push
and
mov
jmp
mov
and
adc
test
add
sbb
in
pop
les
lret
pop
xchg
xor
rcll
shl
push
mov
cmp
push
fnstsw
mov
imul
cmp
fwait
lcall
jne
mov
adc
aas
lods
loopne
repnz
inc
scas
dec
xchg
pop
icebp
push
mov
mov
ret
lock
cld
scas
filds
dec
es
mov
ja
mov
aad
sbb
xchg
jno
lds
aaa
pop
insb
dec
stos
or
cmpl
dec
xchg
dec
orl
outsl
iret
push
movsl
lods
fwait
stc
ds
jmp
sbbl
outsl
and
sub
orb
sub
lods
xchg
push
dec
push
fnsave
dec
xor
cltd
fs
dec
daa
rcr
fdivp
dec
xor
sub
les
psrad
mov
or
ret
hlt
cmc
mov
sti
sbbb
cmp
ret
sbb
jecxz
sub
fisttpl
cwtl
cld
push
popa
pop
fidivrl
jge
ss
dec
out
mov
adc
in
into
cmp
test
dec
push
mov
lea
out
ret
int
dec
and
lods
and
xchg
clc
out
push
mov
jo
movsl
sub
xchg
mov
fistpll
lods
inc
enter
mov
jg
aam
xor
in
cltd
adc
adc
jb
iret
je
out
data16
test
lock
jle
mov
test
mov
inc
icebp
ret
push
mov
subl
shll
jne
add
imul
mov
xchg
add
dec
push
mov
inc
adc
xchg
inc
pop
pmulhuw
sahf
xchg
ds
pop
dec
shl
enter
ja
lret
jno
jae
or
mov
in
outsb
test
push
mov
arpl
mov
lods
push
decl
daa
test
cltd
lods
cltd
orb
mov
fisubrs
cs
call
xchg
repz
xlat
inc
xlat
shrl
icebp
cltd
mov
pop
push
loopne
gs
pop
add
imul
sub
fwait
fs
dec
cmp
push
fbld
dec
xor
pusha
iret
xchg
mov
mov
pop
notl
jle
scas
pushf
loope
sub
rcrb
add
imul
std
jbe
repz
mov
xchg
data16
mov
sahf
add
inc
out
outsb
pop
pop
inc
add
sbb
mov
mov
mov
ss
mov
jo
ret
push
jge
push
mov
sub
inc
pop
imulb
gs
mov
mov
lds
data16
mov
xor
adc
hlt
outsl
int3
stos
pop
nop
push
sub
scas
daa
fldt
repz
jno
adc
and
enter
dec
add
dec
and
adc
addr16
mov
jne
push
aam
push
mov
xlat
pop
or
xor
shlb
mov
push
int
inc
idivl
fs
mov
push
sub
pop
lret
inc
out
cmp
push
ds
je
imul
fdivrs
insl
lret
lods
cmpsb
fmul
mov
out
clc
push
or
push
sbb
leave
add
movhps
shl
cmpsb
dec
test
fwait
sub
mov
xor
mov
mov
lret
daa
scas
xorl
lea
or
and
add
hlt
xor
cmp
test
das
adcb
daa
mov
outsb
xor
and
mov
fistpl
jno
cmp
and
ffreep
insl
aam
loopne
sub
rcll
push
mov
stos
cli
mov
pop
mov
jecxz
cld
insb
rol
fdivrs
inc
add
adc
movsb
ja
ffree
dec
mov
sti
xor
notb
mov
dec
rolb
std
es
stc
movsl
popf
jg
push
lea
mov
lods
xchg
dec
sahf
xchg
push
rol
fcomp
test
add
movsb
cld
add
stos
sbb
sbb
test
inc
in
mov
mov
aad
mov
lds
clflush
cmpsb
cmc
or
movsl
jl
xor
sub
xchg
push
jle
test
add
xor
add
push
sbb
cld
lahf
loop
sub
sub
lock
push
push
sbb
insl
mov
add
sub
shlb
leave
and
inc
shlb
fnsave
fisttps
lock
xor
xchg
sbb
adc
cmp
mov
ret
int3
adc
jle
or
xchg
nop
xor
insl
adc
mov
mov
loopne
mov
js
aad
rcrl
add
cmp
jge
loop
lock
pop
sbb
outsl
fistl
loop
ret
pop
xchg
arpl
xor
out
int
fwait
js
ret
test
mov
jnp
push
leave
xor
xchg
mov
subl
cmp
test
int
into
test
movsb
mov
es
arpl
notl
daa
nop
sbb
stos
std
imul
and
aas
jae
pusha
jne
ljmp
sbb
inc
fadds
or
push
das
mov
fsub
stc
sbb
fnstsw
cli
insl
incb
fdivp
inc
mov
dec
mov
mov
stos
sbb
sahf
inc
inc
popa
sbb
out
cmp
inc
sahf
or
aad
sahf
das
mov
jnp
out
push
adc
mov
pop
cmp
push
sbb
sbb
sbb
dec
pusha
scas
sbb
mov
ret
adcb
aas
enter
mov
iret
test
outsl
arpl
pop
jno
shl
mov
popa
pop
xor
mov
ret
mov
mov
sbb
popa
stc
shr
jbe
outsb
jbe
sub
mov
mov
sar
mov
in
inc
jl
adc
or
inc
arpl
test
repz
and
rcr
sbb
or
dec
push
std
pop
movsb
push
push
jp
jne
mov
inc
lret
and
into
loopne
movsb
repnz
ds
cmp
and
cld
mov
mov
cmp
inc
mov
mov
je
out
push
xor
and
xchg
ret
cmp
inc
jb
inc
push
push
mov
repz
pop
cmp
push
push
fcmovne
add
loopne
dec
dec
pop
aas
pushw
rcr
dec
popf
adc
inc
in
daa
fadds
inc
inc
out
addr16
dec
js
iret
xchg
push
mov
and
shll
xchg
push
rcrb
cmp
shlb
dec
cmp
idivb
inc
dec
inc
data16
xchg
mov
mov
stos
pusha
jg
mov
push
gs
add
stc
cmp
push
and
xor
cli
shlb
arpl
mov
mov
mov
aaa
xchg
push
ret
repnz
jnp
push
xchg
cmp
adc
push
push
lea
sbb
add
pop
push
insb
cmp
iret
pusha
arpl
insl
and
push
or
sbb
sbb
in
shl
push
cltd
pop
push
call
pop
dec
dec
out
data16
ja
lock
out
scas
push
outsb
mov
ds
and
sub
push
jl
loopne
enter
push
mov
ret
adcb
and
test
pop
insb
aad
shld
scas
sub
cmp
cmc
loope
roll
lods
jg
mov
xor
xor
es
sbb
sahf
ss
push
push
xchg
lock
and
insl
in
movsb
bound
adc
push
test
imul
popl
out
icebp
pop
pop
mov
cld
pop
pop
aas
sub
adc
in
mov
mov
inc
aad
je
xchg
push
mov
dec
inc
mov
pushf
int
and
outsl
outsb
inc
inc
xchg
and
pop
xchg
sub
fstps
fiaddl
pop
jmp
lea
pop
lahf
jb
jne
leave
cltd
push
inc
test
ds
lret
aam
in
cmp
sbb
std
xor
jbe
fistpll
mov
pop
ret
inc
jl
aaa
jmp
call
js
iret
mov
in
movsl
xchg
into
scas
dec
ret
adc
add
jb
mov
sub
outsl
xchg
pusha
scas
cmp
jns
mov
dec
mov
in
in
add
movsl
pop
imul
add
jno
leave
jne
rcrb
dec
add
aad
jle
sub
popa
push
xor
adc
fs
push
aaa
jg
loop
addr16
mov
lea
add
push
or
cmp
dec
stos
push
mov
cmp
jb
nop
cli
hlt
xor
sub
push
out
sbb
xor
cmpsl
mov
sub
jnp
inc
mov
lods
sub
in
sbb
in
arpl
sbb
mov
ljmp
sub
test
repnz
outsb
pusha
pop
add
xchg
call
fidivl
add
loopne
cmovg
andb
das
mov
mov
pusha
test
aam
and
lcall
and
int3
push
mov
cmp
pop
mov
mov
fdiv
mov
dec
dec
iret
jecxz
dec
or
pop
inc
aad
jb
cmp
push
scas
mov
sbbb
pop
or
outsl
lods
mov
rorb
imul
jmp
mov
loope
xchg
jno
jmp
test
dec
and
inc
push
cltd
pop
pop
js
loop
adc
mov
or
in
jne
sub
xchg
test
mov
fsts
lock
xlat
lock
add
sbb
clc
xchg
dec
jns
fimuls
lea
test
cmp
adc
add
inc
inc
cmp
inc
adc
xchg
ret
stc
xor
pop
push
pop
dec
fildl
mov
iret
lods
jbe
dec
jl
mov
sbbl
ljmp
mov
pop
xor
cmpl
or
push
or
jl
sbb
out
xorl
push
out
adc
leave
mov
adc
flds
jle
leave
sbb
aam
jnp
int3
cmp
int
jp
jne
dec
stc
fucomip
mov
sbb
sub
fistpl
and
call
into
mov
pop
mov
movsl
mov
xorl
mov
data16
mov
pop
leave
cli
inc
stos
mov
ret
add
popa
xchg
les
scas
sbb
push
mov
add
sti
push
inc
jno
cli
dec
xor
mov
shl
mov
ds
mov
and
testb
mov
scas
cmp
aad
outsl
pop
mov
repz
loope
mov
lcall
je
std
daa
jecxz
fidivl
adc
or
jo
mov
pop
pop
divb
and
mov
loope
mov
fwait
fwait
pushl
pusha
repnz
cmp
mov
nop
add
sub
xchg
cli
sub
mov
stc
imul
dec
inc
mov
aaa
pushf
xlat
bound
shrl
inc
mov
xor
xchg
nop
push
xchg
mov
jmp
pop
lock
cmp
jno
in
cmc
inc
cmp
scas
cld
lahf
xcrypt-cbc
cmp
sbb
movsl
arpl
pop
push
aas
cmp
xchg
add
imul
daa
popf
xor
pop
imul
jae
xchg
aaa
jp
or
in
int
clc
in
sbb
adc
shll
aam
repnz
fst
fstpl
mov
cmc
mov
push
mov
sbb
ret
mov
push
pop
jg
xchg
add
sub
lahf
sbb
push
test
sarb
jge
mov
xchg
dec
adc
xor
out
and
arpl
fisttpll
jle
add
inc
icebp
test
xor
mov
jmp
lds
int3
push
testb
cmpsl
jge
enter
xor
dec
rcrl
pop
push
nop
incb
std
fldcw
pop
enter
mov
sub
dec
ds
ffreep
subb
inc
add
fdivs
mov
mov
jo
adc
int
or
push
push
stc
and
or
mov
adc
enter
xor
pop
movsb
inc
inc
pop
inc
sub
jne
push
lahf
int3
leave
test
or
jae
adcb
cmp
rcll
arpl
jnp
or
cs
adc
shlb
and
mov
xlat
pop
dec
jb
pop
pop
lret
dec
xor
vphaddwq
ds
into
inc
mov
arpl
sbb
inc
fwait
icebp
loope
clc
daa
xchg
lahf
add
pop
addl
test
movsl
test
cmc
add
rorb
adc
xchg
test
daa
std
loope
or
fcompl
dec
lds
adc
loop
xchg
mov
adc
aas
or
hlt
adc
and
sub
ljmp
das
cld
adc
ret
xchg
jb
jmp
jns
ficompl
aas
cmc
sbb
sub
xorl
hlt
push
dec
push
jne
movl
loopne
and
ja
sub
dec
stos
cmp
sub
sbb
mov
sbb
imul
aad
out
out
jb
and
dec
mov
pushl
push
and
lds
push
mov
loopne
cmp
gs
jecxz
repz
decl
add
stos
fsts
popa
push
cmp
dec
mov
ret
mov
lcall
inc
jne
mov
enter
dec
and
stos
loope
jmp
add
ret
notb
mov
ss
dec
je
hlt
lcallw
pop
mov
push
pop
lods
into
in
popl
pop
or
or
insl
not
je
or
inc
push
jle
stos
mov
bound
addr16
push
ja
or
inc
into
lds
insb
je
push
jl
fwait
pop
push
loopne
into
xchg
loopne
shr
cmpsb
jg
pop
jge
cmp
fs
fildll
fcomps
adc
or
sbb
idivb
fcoml
out
sbb
stc
ja
inc
sbb
inc
add
outsb
rolb
and
xchg
aaa
aad
decl
lahf
or
mov
add
loopne
incl
push
mov
cld
or
xchg
adc
arpl
fisttps
les
fsubl
add
nop
roll
or
outsb
xchg
stos
sbb
mov
xor
pop
ja
insb
dec
jle
mov
js
cmp
pop
xor
add
push
lods
in
movsb
pop
movsb
repnz
mov
rorb
xchg
xchg
inc
mov
mov
ljmp
dec
daa
loop
mov
lea
dec
or
jge
cmp
imul
in
enter
jge
lahf
dec
mov
inc
lods
mov
in
sbb
rcrl
xor
or
add
and
xor
mov
ljmp
imul
push
dec
adc
bound
cmp
sub
cs
sbb
dec
pushf
inc
pop
xor
test
cli
ficoml
inc
sbb
incl
cmp
mov
add
jl
push
jecxz
fnop
xchg
cmp
lahf
mov
push
daa
or
sub
lods
sbb
rcl
xchg
mov
cli
movsl
mov
jno
xor
dec
sbb
dec
cmpl
push
dec
cltd
cmp
mov
sub
lock
roll
lds
in
ret
test
lret
sbb
iret
cli
nop
and
mov
or
mov
and
cmp
pop
mov
inc
js
arpl
push
rcrb
dec
insl
xor
pushf
sub
lock
xchg
add
xor
push
and
jb
pop
cld
jmp
enter
lcall
les
call
aas
scas
push
add
ret
test
fwait
call
push
or
add
inc
insb
call
mov
addr16
gs
and
ret
xchg
ljmp
addr16
stc
std
inc
jl
xor
sti
or
sbb
dec
pop
cmp
sub
xchg
push
data16
cmc
pop
mov
gs
inc
inc
and
call
sbb
jecxz
in
lret
subl
sbbb
inc
cmove
cmpsb
lods
mov
mov
sub
mov
pop
test
mov
test
sbb
in
pop
lahf
stos
fldl
out
push
push
sub
mov
lcall
js
cmp
pop
or
fdivs
aad
outsl
je
adc
insl
rorb
fistps
out
stc
ret
sbb
add
sbb
jmp
mov
jge
into
jne
lock
push
xor
stos
out
mov
mov
imul
movsl
dec
shlb
and
lock
aad
cli
cltd
inc
sahf
fsubrs
xchg
in
mov
fbld
imul
imul
xchg
mov
dec
shl
inc
out
sti
push
ret
cmp
lret
test
inc
mov
mov
dec
add
mov
xchg
sti
jmp
ret
pushf
cmp
inc
jge
lock
negb
or
pusha
test
std
aam
push
and
push
adc
in
sbb
cmpsl
cmp
jle
ds
pop
xor
ud0
xchg
cmpsl
mov
xchg
movsb
pop
stos
sub
aas
sub
lret
addr16
cmp
cld
in
lcall
inc
aad
scas
or
mov
sti
or
ja
push
xchg
push
push
lss
xchg
movsl
arpl
stos
jno
test
sbb
cs
test
test
arpl
les
dec
ss
stos
lds
lret
int
dec
mov
xor
sbb
in
sbb
in
clc
rcll
xor
imul
and
sbb
adc
xlat
mov
mov
cltd
xchg
cltd
or
xchg
call
adc
pop
jl
ss
xchg
lahf
scas
jg
jb
adc
push
addb
mov
in
movsb
lret
je
movsb
aas
shlb
inc
cmpsb
push
fisttpll
sbb
add
mov
push
fnstcw
mov
mov
adc
outsl
sub
inc
adc
ror
ret
outsb
dec
cmpxchg
xor
inc
push
cmp
repnz
insl
ljmp
movsl
push
jnp
xchg
mov
lock
sub
mov
cs
fistps
mov
jbe
int
mov
cltd
mov
test
stc
cmpsb
rorb
aaa
outsb
lret
ljmp
xorb
add
push
sbb
into
inc
popa
cwtl
cli
test
dec
pusha
or
xor
stos
cwtl
pop
hlt
push
inc
lcall
dec
repnz
xchg
adc
bound
ror
jae
adc
or
ss
stc
aam
test
jecxz
adc
sub
orb
test
pop
dec
sbb
cmp
pop
xor
or
testl
sub
sbb
and
xchg
stc
or
inc
and
fcompl
mov
mov
out
dec
sbb
and
rcrb
in
subb
testl
xchg
add
dec
and
inc
jmp
fs
mov
int
mov
adc
cmp
xor
ss
loop
push
pushf
loop
add
mov
xchg
rcrb
or
inc
jne
or
push
pusha
jae
mov
sbb
sbb
call
xchg
xchg
out
sbb
mov
xor
test
sub
and
stos
mov
pop
inc
int3
sbb
outsb
pop
loopne
jb
jl
fwait
cmpb
and
mov
mov
cmp
xchg
cmp
pop
push
add
dec
loop
test
in
xchg
pop
out
insb
insl
jecxz
cltd
rclb
mov
mov
xor
stc
stc
les
lret
scas
or
movsb
test
enter
jp
sarl
stos
lahf
scas
popf
sahf
in
xchg
fistl
pop
adcl
sti
cs
repnz
jmp
arpl
outsl
ss
adc
test
shlb
mov
pop
xchg
pand
jns
inc
jp
popa
cmp
cmpl
push
sar
aas
adc
lea
mov
xor
in
xchg
subl
sbb
inc
push
xor
dec
jns
or
test
ret
sti
rcrb
int3
test
mov
cmc
sti
mov
pop
ja
scas
lret
scas
icebp
sbb
and
inc
hlt
push
loope
loope
xchg
sbb
mov
xchg
add
std
mov
cmp
loop
les
out
and
fildll
jne
cmp
cs
xchg
pandn
sub
mov
arpl
cmp
pop
es
jge
shll
jo
jge
mov
rcrl
cmp
mov
jecxz
and
cmp
movsb
adc
call
stc
pop
out
loope
out
and
mov
adc
ret
imul
xchg
mov
pop
inc
lock
subb
popf
pop
movups
aaa
xorb
mov
mov
cmp
dec
inc
adc
xorb
sbb
ljmp
adc
dec
stos
xchg
ljmp
dec
sti
push
jecxz
enter
leave
xor
lods
divb
loopne
stos
inc
add
dec
fs
loop
sbb
loopne
lds
jl
sub
dec
or
sub
and
sub
hlt
sbb
fiadds
adc
inc
ds
gs
and
or
aam
cwtl
mov
jo
lret
mov
cmp
gs
xor
jl
ret
sub
lods
push
mov
movb
dec
sbb
jg
pushf
cmp
or
psubd
mov
adc
jno
adc
jb
fildl
adc
repz
or
adc
lea
inc
pop
jmp
sbb
mov
or
and
stos
dec
adcl
fwait
push
shl
push
push
push
xchg
fimuls
fcoms
adc
and
scas
andl
lahf
inc
rol
outsb
mov
push
mov
lds
hlt
cli
push
rcr
cmp
in
enter
mov
ret
add
jb
and
stos
xchg
cli
or
sub
roll
mov
xor
mov
pop
lahf
and
dec
sub
jo,pn
insb
cmp
cwtl
int3
popa
jb
mov
adc
mov
js
push
sub
or
jno
aas
shlb
out
aad
stos
fsts
cmp
movsl
in
outsb
fs
xor
outsl
imul
dec
fimull
rcr
xor
lods
mov
movl
sarb
push
cwtl
fisttpll
ds
sbb
lret
mov
inc
push
push
scas
mov
pop
push
bndstx
aad
cs
test
inc
arpl
repnz
and
shl
xor
movsb
clc
cmpsl
movl
cmpsb
iret
dec
add
test
dec
popa
mov
mov
add
mov
mov
mov
mov
or
cmp
clc
je
push
int
mov
pinsrw
ja
pop
and
movsb
xchg
mov
fnstenv
dec
jne
dec
pop
insl
stc
icebp
add
jecxz
jno
dec
daa
xchg
fcoms
das
mov
or
je
dec
pop
in
sbb
loop
bound
pop
xor
push
xchg
call
int3
push
sbb
push
pusha
jbe
fildll
imul
xor
shlb
scas
pop
pop
mov
xor
mov
addb
xchg
aas
dec
sarb
add
data16
or
push
xchg
repnz
xlat
pushf
hlt
fildl
xor
mov
cmp
add
mov
dec
sub
cld
jb
movsl
inc
cmp
add
lcall
sub
mov
pop
pop
out
xchg
push
jb
imul
push
mov
out
and
or
xchg
in
repz
inc
dec
xchg
lret
or
ja
notb
push
push
divb
lahf
and
sub
mov
rclb
or
in
bound
adc
imul
push
pop
int3
scas
dec
lods
lock
das
in
cmc
stc
sub
jnp
push
push
jne
dec
or
imul
mov
pop
fcompl
lret
fstps
jg
jbe
pop
iret
inc
aas
push
mov
add
popa
fsts
jmp
mov
sbb
sahf
mov
cltd
rclb
cmp
push
mov
xchg
call
xchg
rcrl
enter
pop
jg
push
xor
loop
cmpsl
push
and
in
insl
push
dec
or
or
xchg
jg
mov
stos
push
insl
inc
jmp
das
or
mov
in
stos
mov
dec
in
ss
cltd
mov
add
mov
jnp
pop
iret
add
dec
xlat
mull
or
int3
cmp
fs
jno
lahf
mov
xchg
shll
fdivs
sbb
jae
leave
jno
rol
dec
mov
adc
xor
ljmp
mov
mov
adc
and
pop
mov
jmp
pop
xchg
and
dec
aad
jecxz
popf
pushf
gs
testl
test
loop
pop
inc
fildl
dec
in
mov
cmp
in
push
mov
add
aad
mov
or
fwait
adc
xchg
or
test
call
lock
fwait
inc
sbb
stos
push
xchg
dec
jmp
int
jo
lock
leave
and
xor
or
xor
cmp
mov
xor
dec
jp
inc
cmp
adc
pop
fstps
movsl
cld
movsl
outsb
popa
jle
sub
xchg
test
lahf
xchg
into
adc
imul
aad
stc
mov
lret
mov
fldenv
jl
pushf
xchg
test
adc
imul
mov
sub
cmp
push
lahf
xor
and
je
lahf
and
dec
repz
mov
push
xor
scas
test
loop,pn
mov
and
popa
jle
jg
popf
popf
leave
movsb
insl
cld
notl
dec
xor
sbb
cmp
aam
inc
dec
xor
clc
mov
mov
jecxz
clc
fidivs
and
cmp
jl
mov
jns
cld
daa
int3
outsb
addr16
xchg
test
lea
pop
add
clc
out
clc
sbb
popf
pop
leave
mov
jmp
pop
divl
dec
in
mov
mov
out
cmpl
adc
lods
rcrb
push
out
repz
pop
sub
lahf
jmp
mov
sub
lock
inc
pop
mov
adc
jno
push
mov
add
dec
out
sbb
pop
jp
sbbb
pop
sub
add
dec
imul
out
fbld
inc
and
dec
push
mov
cmpsl
stos
notb
negl
lods
and
adc
mov
jge
xor
lods
mov
mov
arpl
int
int
or
insb
jo
inc
xlat
mov
fcoms
jo
push
xchg
push
adcb
jnp
test
jle
lods
xchg
fadd
pop
mov
mov
orb
mov
jg
jb
shl
out
cmp
sbb
ds
scas
push
dec
ja
xchg
inc
pop
aad
test
adc
xor
repz
sbb
cs
movsb
xchg
ja
and
push
pusha
sub
pop
cmp
psubq
or
sbb
mov
sub
inc
inc
daa
sub
pop
adc
xor
jp
cmp
cmp
push
mov
pop
sbb
shrb
sbb
fcomi
jns
xlat
cmpsb
sbb
push
jmp
bound
jl
scas
popf
sub
sahf
imul
ret
mov
inc
icebp
or
xor
in
je
imul
adc
bound
and
fcompl
and
enter
rclb
ss
shlb
sbb
mov
xor
push
xor
addr16
sbb
pop
fidivs
out
dec
pop
dec
inc
and
leave
scas
lock
aad
cltd
and
jne
sbb
jle
jne
les
sbb
xchg
dec
jne
sub
aaa
out
inc
pop
pusha
fxch
push
cltd
adc
out
cmp
fildl
pop
loope
or
dec
or
or
adc
fisttpl
in
xchg
js
dec
mov
movsb
addl
cwtl
push
das
test
aam
or
pop
and
fsubrs
or
push
shr
jb
and
or
mov
dec
inc
jo
inc
add
scas
aaa
push
addr16
in
mov
movsl
out
stc
jo
mov
jle
sub
add
fisubl
movsl
mov
dec
aam
mov
jp
fisubrs
xchg
add
cmpsb
mov
ret
bound
add
mov
fsubrp
xchg
dec
push
int
jmp
dec
mov
insb
cli
sar
cwtl
mov
pop
pop
in
std
sub
mov
aas
cmp
pop
ret
dec
xchg
faddl
out
aam
xchg
lods
dec
adc
cmp
fwait
test
mov
dec
cmpsb
inc
lret
fcoms
icebp
xor
inc
loope
leave
pop
mov
mov
aad
ss
fnsave
test
scas
aad
cltd
add
inc
sbb
addr16
in
push
aam
pop
push
add
test
pop
mov
cli
push
mov
cmp
cltd
mov
xor
repz
mov
mov
add
aad
adc
pusha
inc
mov
cmp
gs
imul
pop
xor
xchg
cmpl
sarl
mov
leave
packssdw
out
xor
jne
xor
outsl
clc
jg
in
movsl
fstpl
fbld
fwait
jbe
pop
sub
xor
push
cmp
add
stc
iret
ret
std
shll
or
or
lods
adc
mov
test
xor
call
push
shl
xor
or
cmpl
jecxz
out
dec
pop
lahf
dec
push
test
cwtl
cmc
push
sbb
mov
xor
ficoms
cmp
push
hlt
packsswb
xlat
jmp
daa
mov
ljmp
push
ljmp
ja
daa
stos
arpl
cmp
xor
out
jnp
lret
and
ja
or
dec
ret
mov
dec
sbb
popa
sbb
out
push
sbb
test
sbb
outsb
mulb
jo
mov
mov
idivb
cmpsb
mov
decl
in
pop
pop
ja
es
js
mov
pop
int3
stos
mov
mov
aam
arpl
jle
jle
push
inc
mov
pusha
faddl
pushf
xor
rol
fwait
and
das
test
xor
lods
lcall
shrl
lret
jnp
pop
pop
aad
or
loope
das
add
ja
xor
mov
jecxz
int3
sbbb
stos
push
pop
pop
imul
pop
push
movsl
leave
sbb
push
outsl
pushf
sbb
or
xor
fwait
mov
mov
mov
cli
add
dec
imul
mov
out
mov
xor
shrb
cltd
mov
stc
test
in
outsb
iret
fstl
mov
mov
lret
push
pop
jmp
clc
mov
ljmp
fwait
xchg
lcall
mov
in
js
pop
and
mov
or
cmp
adc
pop
cmovnp
pushf
mov
jb
mov
shlb
mov
out
mov
bound
mov
fs
sbb
adc
xor
fiadds
pop
mov
and
mov
xor
rclb
jno
inc
adc
imull
jns
cmp
pop
mov
enter
in
push
rorb
fs
inc
add
dec
sub
mov
jmp
lahf
push
mov
ret
xor
inc
test
mov
xor
sub
mov
cld
cld
pop
dec
lcall
and
shrl
push
pop
in
test
int3
stc
ds
xchg
call
cmp
rorb
and
je
push
leave
jno
lret
pop
sbb
push
test
rcll
int
xlat
fs
fistpll
icebp
out
mov
push
pop
notb
gs
iret
sysenter
ja
and
push
out
lea
insb
mov
adc
gs
fsubl
enter
inc
iret
inc
cmp
cltd
ja
jp
xchg
xor
fdivrl
pusha
test
movsl
mov
cld
jmp
mov
pop
es
in
mov
pop
and
and
inc
xor
jne
pop
add
xor
out
movsb
cltd
inc
push
xchg
mull
push
mov
shrb
stos
ret
pop
push
mov
pop
popf
mov
ret
pop
dec
ret
and
xor
mov
ja
sbb
mov
movsb
lods
dec
rorl
hlt
sub
mov
add
mov
lret
loope
cltd
dec
lret
int3
xchg
or
fld
ljmp
push
inc
aam
add
inc
xor
enter
mov
dec
scas
pop
shr
jmp
mov
add
inc
fisttps
fnstcw
jb
leave
mov
lret
mov
sahf
xchg
mov
dec
les
mov
lcall
pop
divb
or
dec
jge
je
mov
adc
pushf
stos
mov
xchg
push
and
loopne
mov
xor
push
mov
sub
xchg
outsb
imul
push
rorl
out
loopne
cltd
push
or
pop
outsl
jge
sarl
and
lds
iret
mov
xor
sahf
and
mov
mov
or
and
mov
repz
lds
pop
xchg
je
lods
out
mov
mov
and
lods
aaa
aaa
sub
push
mov
fwait
add
xor
push
dec
xor
push
mov
adc
js
jle
bound
mov
pop
pop
jne
sbbl
sti
or
xchg
stos
imul
shll
dec
mov
andb
mov
mov
pop
inc
sub
cmp
mov
mov
pop
mov
rcr
xor
leave
mov
imulb
fwait
ja
mov
and
and
xchg
outsb
jl
sbb
push
push
xchg
sub
shrb
and
pop
sub
stos
sub
pusha
xor
rolb
mov
or
fs
jo
outsb
sub
xor
clc
sbbl
adc
push
dec
pop
dec
xor
xchg
je
or
ljmp
aad
mov
dec
sbb
fidivrs
lods
pop
sub
pop
nop
mov
arpl
andl
sbb
push
repnz
and
stc
push
movsb
dec
mov
add
scas
mov
push
fadd
xchg
mov
mov
leave
add
arpl
out
aaa
mov
pop
sub
jo
stos
xchg
jmp
xchg
andb
cmp
and
xor
sub
movsb
pop
mov
fwait
or
adc
push
fwait
jp
add
sub
mov
inc
scas
xor
pushf
push
mov
aad
data16
inc
cmp
test
fcomps
mov
cld
dec
gs
lods
xor
add
or
xor
or
adc
ffreep
xor
cld
adc
gs
fimuls
test
xor
mov
adc
clc
notl
pushf
rcrl
in
sbb
cmc
push
and
jne
push
les
and
mov
shll
js
je
xor
pop
fstl
fcmovnb
pop
stc
jne
test
xor
add
out
adc
adc
cmp
or
dec
repz
arpl
pop
call
ja
shrb
in
fisttpll
out
or
add
insl
push
push
cmpsl
mov
push
subl
je
les
or
inc
pusha
gs
mov
push
in
or
cmp
int
sbb
or
and
and
or
sub
add
and
iret
sbb
popa
ljmp
daa
fs
mov
sbb
ja
cmp
push
lret
add
loope
mov
sti
adc
mov
inc
push
aam
cmp
mov
mov
roll
cmp
jo
xor
push
pop
movsb
and
lret
cmp
cmp
std
call
pop
movsl
lock
and
stos
dec
and
jns
loopne
add
sbb
test
movsb
sbb
cld
mov
dec
or
mov
jns
cltd
jge
push
sti
pop
pop
testb
add
stos
jno
lcall
les
test
cmp
sub
pop
mov
jecxz
pop
push
pusha
mov
int3
dec
xor
arpl
or
jb
xor
pop
cmp
jmp
sbb
sbb
mov
dec
into
jne
fwait
or
bswap
mov
xchg
and
test
adc
push
outsl
push
xchg
hlt
and
into
and
adc
sub
lods
int3
lock
outsb
shll
scas
cmp
push
in
sbb
mov
push
shlb
sub
lods
jg
push
mov
pop
call
mov
bndldx
lret
jno
dec
and
mov
jnp
mov
out
jns
insl
inc
inc
aas
sbb
lahf
push
mov
mov
pop
sub
cltd
xor
xchg
push
in
bound
nop
cmpsb
movsl
leave
and
sub
int3
imul
ret
dec
jb
stos
and
mov
add
bound
push
jmp
inc
inc
jne
popa
inc
pop
cmp
sub
lret
cmp
jnp
ja
mov
sub
sub
popf
sbb
loope
rcll
test
pop
adc
push
adc
mov
scas
mull
fbld
ss
out
cltd
xor
xchg
adc
mov
xlat
mov
sbbl
cmp
cmpb
push
scas
mov
data16
out
sub
test
clc
and
sbb
dec
jge
pop
or
lods
clc
bound
stos
iret
cmpsl
stos
jle
lods
xor
dec
out
int3
xchg
or
lret
mov
psubb
ds
iret
jns
mov
in
sub
jp
mov
push
push
aas
mov
lahf
pop
jne
or
insl
add
pop
int
xchg
jp
lahf
mov
outsl
dec
push
fsubrl
mov
push
addr16
push
test
nop
ds
xchg
jnp
xlat
push
or
daa
outsb
dec
aaa
jecxz
and
dec
icebp
jae
adc
es
push
xchg
jns
xor
ret
jle
movsb
adc
mov
mov
mov
xchg
test
test
cld
jnp
je
mov
movl
into
dec
stc
insw
xlat
sub
ret
scas
add
and
xor
cmc
jg
dec
xor
daa
addr16
jg
push
and
test
fs
pop
xlat
cmpl
sub
mov
arpl
cmpsb
cmpsl
push
aaa
mov
int3
mov
addr16
xchg
int3
pop
nop
mov
ja
out
mov
imul
scas
cmp
in
out
pop
ss
aaa
cmp
dec
mov
lods
lret
xchg
aam
test
push
inc
jnp
or
jp
adc
scas
test
push
nop
cmp
outsl
and
pop
pop
pop
orb
cmpsb
jp
arpl
fdivr
lea
or
into
cmp
fisttpl
bound
inc
jne
test
xor
aas
mov
cmp
mov
aam
adc
mov
std
mov
sub
nop
cwtl
push
addr16
xchg
push
lret
movsb
test
xor
cmp
pop
or
jp
and
sub
fldenv
test
push
lods
mov
icebp
dec
mov
jle
mov
imul
cmpsb
jae
jg
jg
jl
pop
fstl
std
jp
push
shlb
ja
push
ret
rol
js
cmp
dec
jg
lahf
adc
dec
sti
je
out
lret
inc
xor
push
sub
int
xchg
shll
jno
push
out
divl
pop
jmp
shll
roll
jne
fld
add
inc
jo
inc
xchg
cld
lret
dec
push
pop
xchg
repnz
cli
loope
sbb
xchg
mov
mov
lea
aas
mov
pop
xchg
mov
aaa
push
insb
and
lods
cmp
inc
pop
push
sbb
fimuls
fstps
or
mov
cld
daa
push
push
int3
lock
or
or
pop
in
sbb
int3
add
aas
mov
repnz
inc
inc
xchg
repnz
adc
rcrb
call
mov
js
insb
cltd
mov
das
pushf
outsl
imul
adc
lods
sub
call
mov
testb
dec
shlb
jne
scas
mov
repz
push
push
jecxz
adcl
mov
pop
hlt
xchg
add
cmp
imul
and
push
pop
dec
mov
cmp
in
sbb
lock
in
add
add
mov
test
jmp
popf
add
out
add
dec
ret
inc
inc
cmp
mov
mov
cmp
xor
mov
or
or
hlt
sub
mov
mov
xchg
fwait
xchg
in
stc
addr16
cmp
mov
fistl
mov
scas
push
lret
aas
mov
aaa
mov
jae
pop
adc
xor
jno
and
insl
dec
mov
ficoml
std
incl
out
dec
fs
mov
xchg
int
cmp
sti
jne
call
loop
cltd
inc
in
fists
out
out
cmpl
inc
mov
out
or
and
ljmp
mov
fcompl
dec
cmp
hlt
dec
sbb
pop
sbb
flds
fdivs
inc
push
mov
pushl
iret
movb
shr
add
mov
push
rorb
into
mov
ljmp
pop
in
adc
idivb
mov
adc
iret
dec
mov
cltd
sbb
xchg
cmpsl
jg
push
push
imul
xor
fdivr
cmp
scas
sub
repnz
mov
std
inc
and
int3
fiaddl
add
cld
outsb
addl
mov
shl
stos
push
ds
call
movsl
in
scas
inc
and
negl
jno
pop
movsb
leave
pop
pop
sub
out
adc
aad
fmul
or
and
into
and
xlat
xor
add
pusha
leave
fnstenv
push
jb
pop
inc
shrl
mov
dec
and
sub
js
pushf
jno
loope
mov
or
mov
or
xor
push
scas
mov
mov
int3
pop
dec
or
not
fstpt
add
pop
add
das
dec
mov
mov
lcall
sbb
aad
push
and
ljmp
stc
loope
outsb
mov
jb
xor
xchg
jmp
or
jbe
lret
cmp
cli
sub
cli
mov
inc
inc
loope
or
sbb
leave
jmp
outsl
jmp
xchg
shll
mov
lret
inc
push
mov
cmp
xchg
lret
mov
ljmp
inc
daa
and
dec
das
ss
inc
cmpsl
int
push
mov
push
ficoml
sti
pop
dec
adc
in
rcr
push
adc
adc
jae
dec
int3
lret
cltd
mov
mov
fbstp
out
in
lret
fnsave
xchg
pusha
mov
and
out
inc
cmovl
iret
pop
sarl
loopne
ljmp
sub
in
and
inc
hlt
lcall
mov
in
push
pop
xchg
lret
dec
dec
or
push
mov
insl
mov
add
repz
and
insl
xchg
cmc
add
dec
test
cmp
int
jne
daa
adc
cmc
xchg
push
jo
and
mov
test
aam
pop
sub
xchg
sbb
xor
push
mov
lcall
or
lcall
jb
or
sub
xchg
rolb
add
push
jb
sub
js
mov
mov
xchg
mov
or
out
lahf
test
sarl
jmp
cmp
push
das
lret
push
insb
dec
stc
aaa
sub
mov
lcall
ds
mov
cmc
jmp
mov
mov
fisubrs
mov
adcb
and
add
xchg
jnp
fs
insb
mov
add
pop
xor
arpl
mov
cmp
js
arpl
or
out
adc
mov
shr
add
in
cmp
ja
adc
add
sbb
jo
mov
popa
cmp
xchg
movsb
push
repz
pop
push
lret
sbb
mov
test
adc
jg
ss
inc
jo
scas
aas
sbb
mov
push
mov
pop
inc
jnp
mov
and
out
xchg
cmp
mov
jae
out
nop
pop
ret
pop
dec
fidivrl
xor
daa
fsub
adc
mov
cmpsl
loop
or
dec
sbb
js
push
stc
into
dec
pop
lcall
sbb
sahf
mov
adc
and
xlat
and
or
inc
test
stc
jo
pop
cmc
ret
mov
arpl
das
push
push
roll
mov
jg
out
test
mov
jecxz
loope
movsl
fstl
imul
test
bound
sbb
xor
shll
mov
out
aaa
push
mov
xor
movaps
sub
sbb
outsb
stc
arpl
je
mov
cltd
rolb
pop
fcomi
sti
mov
dec
xor
cld
sbb
cmp
mov
in
sbb
adc
call
jmp
inc
shll
subb
imull
mov
in
shr
push
mov
das
outsb
aas
mov
jp
sub
gs
sti
dec
inc
fdivrl
pop
mov
xor
fs
mov
mov
stos
test
gs
cmp
cld
mov
setbe
xchg
cltd
clc
jnp
push
jl
add
stos
dec
icebp
or
pusha
je
xchg
jmp
sti
pop
mov
jae
idivl
or
pop
arpl
cli
sbb
xchg
cmp
xchg
cltd
sbb
sub
jne
aas
xchg
insl
jb
leave
cmp
aas
dec
subb
push
lds
inc
maxps
int3
daa
in
cmpl
sub
into
ds
mov
cwtl
test
jno
lahf
pop
cwtl
lahf
aaa
pop
jle
out
nop
sub
jnp
dec
xchg
push
cmpsb
int
sarb
arpl
repz
and
inc
lahf
push
ret
xor
sub
mov
dec
dec
sarl
lret
int
fidivrl
mov
popa
clc
mov
sub
lret
xorb
subl
push
scas
movsb
inc
ljmp
push
popa
notb
adc
pop
dec
pop
inc
push
add
cmpl
mov
roll
adc
pusha
pop
inc
mov
cwtl
lds
jl
mov
xchg
std
cmp
mov
xchg
pusha
mov
adc
dec
ret
jno
xor
lock
fwait
js
pop
fildll
and
mov
pop
arpl
jmp
push
ficompl
push
incl
mov
stc
mov
out
fwait
inc
mov
and
es
jae
and
sbb
mov
out
or
and
repz
xor
adc
test
andb
xor
push
xchg
bound
pop
imul
cmp
fstp
in
jae
icebp
leave
imul
xlat
popf
int3
cmpsl
fcoms
adc
push
mov
lahf
pusha
mov
jb
mov
lret
or
dec
clc
test
fsubrs
mov
add
jl
cs
test
pop
sbb
push
inc
pop
and
pop
rcrb
dec
mov
pop
fcompl
scas
mov
sub
es
push
jge
xchg
inc
add
loop
sbb
or
sub
mov
cwtl
pop
scas
pop
aaa
lea
add
das
xor
enter
lcall
rcrl
leave
cmp
push
mov
adc
xchg
and
pop
orl
mov
inc
and
in
js
push
pop
inc
adc
subb
enter
negb
xchg
add
pop
test
in
in
gs
and
test
sub
arpl
xor
cmp
push
mov
and
test
loope
lahf
outsb
stc
lock
mov
mov
fmull
pop
adc
cmp
cmp
inc
loope
clc
je
and
mov
pop
addl
lcall
ret
arpl
mov
imul
inc
lcall
addr16
fisubs
fistpll
int3
push
cmp
sub
cmpsl
lock
push
mov
and
and
movsl
pop
dec
hlt
bnd
mov
add
push
mov
add
push
mov
pop
jno
out
pop
pop
dec
dec
pop
pop
xchg
jp
sub
int3
add
sub
mov
hlt
xchg
mov
icebp
in
xchg
dec
rcrb
cmp
jmp
mov
xchg
inc
sub
jp
incb
dec
mov
inc
jecxz
push
dec
int
std
xor
inc
sub
stos
mov
inc
jmp
mov
jnp
xchg
flds
ss
adc
inc
mov
and
das
xchg
cmp
cmc
das
push
fmuls
insb
push
dec
mov
mov
test
insb
dec
inc
fmull
lret
je
in
cmpsb
out
cmp
pop
jbe
push
and
loopne
dec
mov
push
imul
cmp
mov
mov
dec
into
jae
jo
loop
call
testl
cld
or
pop
outsl
jle
aaa
push
popa
dec
fs
lds
addl
es
fwait
mov
cwtl
jo
dec
gs
stos
cmp
out
imul
imul
pop
jg
dec
dec
in
mov
int3
inc
mov
enter
dec
pop
jecxz
leave
mov
mov
sub
bnd
cmpsb
push
aam
mov
sbb
jmp
dec
xchg
dec
roll
into
jbe
cmp
xchg
mov
jnp
shlb
lcall
daa
icebp
xchg
xchg
sbb
and
inc
fadds
push
jecxz
cwtl
sahf
ss
fildll
mov
dec
push
movsl
sbb
lods
inc
push
mov
dec
aad
jp
mov
mov
loope
pusha
dec
sahf
loop
and
nop
sbb
out
cmpsl
add
push
in
out
out
mov
sub
lds
add
pop
daa
or
call
add
push
mov
dec
jae
insl
pushf
sbb
insl
dec
cmp
inc
imull
mov
cmp
push
cmp
push
push
xor
adc
add
roll
cmpsb
add
push
mov
pop
inc
fistps
iret
pop
fisttpl
int
popa
jecxz
dec
fwait
popa
adc
xchg
push
int
in
xor
cmp
xchg
cli
enter
inc
pop
mov
sub
jg
js
lret
cwtl
fists
xorl
arpl
in
push
mov
fstpl
or
popa
daa
stos
sbb
add
mov
loopne
dec
xlat
and
aad
cmp
mov
pusha
mov
push
jno
push
in
call
or
push
inc
xchg
mov
iret
xor
rcrl
shlb
cmp
sbb
push
lret
adcl
gs
xchg
rcr
xor
lcall
testl
push
imul
hlt
cmovp
sub
loope
dec
add
jnp
insb
mov
inc
mov
pop
dec
and
ret
mov
pop
push
shlb
mov
andl
les
jge
js
icebp
mov
mov
jmp
in
inc
or
cltd
cmpsb
xor
add
xcrypt-ofb
cmpsl
lods
into
inc
xor
sahf
movsb
push
pop
in
les
rcr
lcall
xlat
dec
mov
sbb
into
sbb
cmc
add
sub
pop
fs
push
rcrl
and
js
sbb
push
fs
mov
add
pop
adc
ret
pop
rorb
jg
ja
mov
jecxz
test
add
dec
addr16
movsb
pop
rcrb
xor
jnp
xor
cmp
push
imul
mov
pusha
cwtl
adc
jmp
sbb
pop
movsl
push
jb
fldenv
jl
or
jae
push
sub
hlt
outsb
iret
aaa
pop
mov
lods
in
nop
imul
sub
sbb
js
test
sub
xchg
pop
add
lahf
sub
lods
xchg
ljmp
cmpsl
ret
outsl
call
das
int
outsl
and
cld
and
push
stc
cmp
mov
pop
pop
mov
push
loop
fbld
cmp
add
jno
ss
push
push
jmp
test
cwtl
xor
adc
das
pop
ret
add
repnz
ret
in
scas
and
test
lea
xor
sarl
xchg
mov
and
scas
mov
mov
faddp
mov
pop
and
or
jl
xor
dec
adc
mov
scas
ficomps
repz
xor
mov
dec
jb
loopne
mov
out
pop
push
push
rcll
ss
adc
mov
stc
subb
test
dec
mov
dec
neg
sarl
push
push
cwtl
mov
jo
mov
and
pop
xorl
imul
enter
filds
or
ljmp
cmp
rol
andl
ds
mov
lea
orl
pusha
mov
push
sbb
cmc
adc
xchg
adc
stos
push
adc
notb
dec
pop
je
sahf
loopne
add
aam
out
adc
push
mov
inc
out
mov
xlat
dec
movsb
cs
fildl
je
pop
in
adc
cmp
gs
dec
testl
or
test
fbld
ffreep
cmp
ficoml
test
jbe
loop
adc
insb
subb
frstor
imul
sahf
adcb
mov
rcll
add
mov
mov
sub
xor
jbe
je
test
pop
popf
cld
shrl
mov
in
fs
adc
push
jmp
sub
cmpsb
sti
mov
mov
mov
mov
mov
pop
jb
inc
jl
inc
testb
leave
adc
mov
shr
out
testl
fadd
mov
cmc
test
adc
sub
add
and
push
lea
jl
js
lods
ds
insb
push
adc
jle
jle
fs
cld
hlt
ds
ret
jmp
loop
cwtl
outsl
ret
insb
inc
fimuls
cmpsb
not
sub
ret
xchg
push
fldcw
push
ljmp
inc
jno
xchg
lods
fcomps
js
and
rcrl
mov
mov
xchg
hlt
pop
das
xor
add
enter
je
dec
sti
sub
fistpl
xor
loop
inc
daa
dec
xor
lcall
stos
mov
rcrb
sbb
cmp
mov
filds
scas
add
lods
ss
pop
in
jmp
dec
das
xchg
xchg
push
jg
xor
mov
loopne
lds
jno
subb
xor
loop
ret
push
add
xchg
and
hlt
cmp
sbb
push
test
dec
jo
std
mov
adc
in
add
push
dec
inc
outsb
cmp
and
mull
insb
call
inc
loop
xor
aam
and
dec
add
pop
mov
cmpsl
inc
pop
xchg
sub
or
loopne
sbb
jno
sti
push
add
xor
ljmp
jl
ljmp
push
mov
sahf
in
repnz
lret
push
jbe
inc
jno
cld
in
jge
mov
insl
addr16
cli
fsubr
xor
jmp
cmp
add
push
xchg
into
inc
imul
ficoml
adc
ja
cmp
in
xor
hlt
sub
cmp
stos
xor
pop
sub
mov
inc
sbb
out
int
sar
rcll
imul
adc
cs
into
int3
in
leave
xchg
cld
sub
ret
cmp
loopne
sarb
std
dec
test
push
mov
cmp
cs
pop
movsb
add
out
mov
pop
xor
jno
leave
pop
adc
fadds
pop
push
gs
or
enter
insl
in
lods
lock
cmc
xor
push
in
xchg
fcomp
addr16
mov
repnz
loope
scas
int3
rclb
loopne
mov
jl
call
and
out
push
mov
and
dec
mov
rcll
cmpl
add
mov
jecxz
sub
dec
jns
jae
ljmp
mov
xchg
and
cmp
cmpb
cmp
add
or
inc
int3
mov
xchg
mov
cmp
push
jg
cli
mov
mov
lock
add
mov
stos
dec
inc
jle
mov
lcall
leave
mov
call
mov
dec
pop
mov
adc
cwtl
idiv
pop
lret
lds
sahf
push
ret
inc
lcall
push
jl
into
xchg
xchg
popf
fmull
push
xorb
xlat
pop
hlt
scas
xor
dec
jge
ret
jl
loopne
jo
pop
jle
mov
pushl
aam
xchg
and
icebp
dec
inc
pop
mov
and
std
imul
xchg
into
ret
scas
cltd
cmp
js
fnstenv
in
stos
add
cmp
and
movsl
pop
filds
out
aas
jns
jns
dec
call
add
mov
int
andl
push
popf
add
out
scas
pop
daa
cmpsl
jo
push
hlt
sub
in
mov
leave
or
repz
xchg
xor
adc
sbb
jno
and
jb
cwtl
les
mulb
mov
shr
pop
outsb
cwtl
out
aam
cli
mov
sbb
lods
adc
call
mov
in
das
arpl
fbstp
adc
mov
outsb
cmpsb
repnz
in
xchg
scas
cwtl
lods
push
xlat
clc
add
mov
stos
js
mov
mov
lds
push
ds
punpckhbw
in
xor
dec
in
mov
insl
sub
outsl
cmp
dec
hlt
js
ret
gs
xchg
jmp
cld
insl
adc
or
pusha
arpl
aas
dec
cmp
movsl
test
pop
mov
xchg
ror
and
in
aaa
xchg
pop
mov
nop
push
mov
xchg
out
fwait
stos
mov
aam
dec
mov
pop
sbb
jns
cltd
jbe
inc
jns
jmp
xor
ret
inc
adc
andb
sub
push
jg
mov
lret
les
pop
jp
in
dec
shlb
inc
scas
xchg
fsts
and
out
in
arpl
fmuls
xlat
push
cwtl
loopne
imul
and
fcmove
xchg
lock
out
rorb
pop
sub
pop
ret
mov
cli
cli
cmp
int
sbb
sbb
sbb
or
jae
into
mov
mov
xor
cs
xchg
lods
incl
jg
pop
pop
sbb
aad
je
mov
xchg
shr
pushf
dec
lea
lea
sub
aas
dec
inc
mov
mov
adc
ret
sbb
ljmp
mov
dec
imul
fsts
int3
lea
inc
push
jbe
push
pop
loop
dec
les
sub
sub
cmp
lahf
shll
fs
imul
sbb
pusha
dec
cmp
pop
push
ss
loope
xchg
movsl
mov
push
fucom
sahf
fadd
dec
add
addl
adc
out
mov
xchg
cmpb
mov
or
idivl
push
ss
push
cmp
cs
push
or
mov
inc
loope
jns
ljmp
mov
stos
std
push
and
aas
inc
bound
lret
mov
fsubrs
fsub
xchg
adc
push
and
xchg
out
cltd
outsb
push
std
movb
pop
xchg
das
pop
repnz
mov
mov
cmp
in
cmp
sub
xchg
aas
addb
cld
je
mov
mov
repnz
je
mov
and
shlb
mov
ljmp
xchg
rolb
or
psubsb
daa
pusha
add
mov
cmp
je
pop
push
pop
ja
mov
push
mov
outsb
adc
repz
or
out
jl
lcall
or
cmp
shl
mov
push
test
jbe
inc
outsb
pop
popa
in
pop
or
sub
icebp
and
test
mov
inc
cli
dec
pop
or
sub
lret
fldcw
jp
sub
fs
lcall
jmp
mov
test
sub
jmp
push
dec
sbbb
sti
xor
inc
cs
inc
or
gs
adc
je
ret
mov
jecxz
lret
gs
dec
fidivs
enter
divb
popf
test
inc
lret
add
lret
fisttpll
gs
pop
sti
jecxz
cmp
insb
push
sub
iret
mov
pop
sub
iret
ret
inc
pop
mov
adc
loopne
lret
dec
pop
mov
jnp
fsubrl
sub
pop
fisttps
xor
and
scas
xchg
pop
les
push
sub
jne
les
pop
jmp
add
push
xor
loope
jg
daa
push
shll
jge
insb
jbe
pop
dec
icebp
stos
adc
andb
add
loopne
sbb
negb
push
loope
into
sub
or
sub
fsubrl
or
push
adc
jmp
lahf
shrl
bound
in
push
mov
pop
shrl
or
loop
cmc
gs
xlat
cmp
ds
push
lods
leave
sar
mov
push
fimull
test
cmp
fstl
pop
adc
lock
dec
daa
jg
push
sub
or
into
leave
xor
adc
iret
sahf
add
mov
sbb
push
pop
xor
jp
scas
dec
movsl
inc
push
jmp
pop
dec
xchg
mov
adc
leave
dec
push
jg
cmp
sar
push
pop
pop
addl
adc
cmp
dec
sub
jbe
add
test
mov
pop
arpl
pop
sub
push
sub
outsl
and
dec
cltd
pop
pop
imul
jecxz
cmp
or
lret
rorb
jmp
js
mov
xchg
ds
cmc
out
fwait
mov
arpl
dec
je
xchg
mov
xabort
cli
push
in
stos
dec
or
mov
test
inc
jl
mov
push
sbb
scas
pop
cmpl
add
and
das
in
or
mov
fidivrs
xor
in
xchg
push
std
sbbb
fs
into
insl
pop
push
lds
ljmp
adc
adc
mov
inc
movsb
add
dec
push
js
cmpsb
sub
ljmp
push
mov
xor
mov
lcall
cmp
and
leave
jecxz
lcall
xchg
cmp
jne
cmpsl
cmp
cmp
xchg
inc
insb
xchg
cmp
adc
ds
xor
or
push
sub
adc
cmp
jmp
xchg
lds
cmpsb
insl
stos
mov
add
cmp
insb
aaa
in
and
push
jl
fildl
lcall
push
push
pop
ret
or
mov
jmp
jecxz
stc
ret
xor
daa
cmpsb
sub
jmp
sbb
test
mov
lret
sahf
dec
add
pop
lahf
rorl
inc
xchg
seto
lock
dec
sbb
pop
sub
ret
rol
push
hlt
jns
sti
test
loop
sbb
sbb
sub
pop
vpcomw
inc
sub
xchg
daa
add
sub
bound
push
ds
cmpsl
push
pop
cwtl
cmp
outsl
nop
xchg
mov
popl
nop
pop
cltd
sti
mov
sahf
cmp
cmp
mov
rcll
leave
dec
into
jp
into
dec
push
ss
pop
popa
clc
mov
adc
lods
sub
pop
or
ss
cmp
jle
xor
dec
xchg
mov
inc
outsl
int3
fsts
aad
cs
xor
rorl
pop
jne
sbb
sub
pop
aas
and
inc
sbb
mov
int
pop
rcrb
adc
insb
shrb
fnstenv
sbbl
cmpsl
hlt
mov
cld
dec
mov
fldenv
xchg
lret
lret
shll
std
mov
mov
push
cwtl
nop
and
cmc
out
je
xchg
mov
stos
rorb
push
mov
data16
push
bound
mov
push
aas
mov
add
mov
jns
insl
mov
adc
in
inc
or
stc
mov
push
sar
xlat
and
xchg
mov
add
pop
out
aas
inc
ljmp
das
pop
sbb
jl
out
xor
push
pop
adc
and
outsb
in
fneni(8087
lret
mov
insb
xor
xchg
rcr
lcall
scas
fmull
mov
push
xchg
cmp
insb
mov
je
loope
sbb
ja
mov
add
pop
pop
add
repnz
lret
jp
adc
scas
inc
stos
aaa
or
enter
cmpsl
repz
aad
cmpb
notl
xchg
movsl
mov
and
fwait
dec
ja
push
sbb
add
sub
scas
clc
dec
jae
mov
mov
and
js
movq
cwtl
sub
fdivs
add
out
js
push
pop
cmp
or
pop
nop
and
fisubrl
in
push
bound
jp
and
loopne
outsl
mov
jnp
jp
cli
dec
in
loop
movsb
in
add
adc
les
dec
repnz
sbb
stos
sub
pop
mov
lods
cwtl
push
lea
push
push
ds
mov
jnp
pop
mov
in
lret
lds
imul
mov
fwait
mov
cmp
mov
in
xchg
or
ljmp
xor
xor
mulb
and
dec
inc
nop
shll
jnp
stos
xor
fisubl
jmp
shll
jle
mov
shrl
mov
insb
mov
inc
pop
jmp
cs
adc
mov
sbb
cmc
mov
add
xchg
jp
mov
inc
dec
xchg
rorl
imul
fldenv
inc
std
lods
mov
jo
inc
test
mov
fwait
movsb
sub
jae
shll
add
sbb
xor
xor
ret
mov
fwait
sbb
add
adcb
or
jbe
and
dec
adc
adc
stos
test
pop
fwait
lret
test
js
cmp
ret
ljmp
daa
loope
add
sbb
pop
mov
out
movsl
rorl
rcrb
jno
inc
rorl
pushf
sbb
lahf
or
ljmp
insl
adc
cwtl
push
dec
mov
shll
jmp
rcrb
fs
push
or
mov
cmp
popf
xor
jle
xchg
fimuls
pop
imul
popf
lret
addr16
int3
and
lods
push
pop
leave
inc
cmc
lret
push
jne
push
jb
pop
jnp
ja
cmp
js
push
cmpsb
je
es
and
mov
xchg
mov
sbbb
dec
xor
dec
popf
fs
sbb
fcomps
or
jge
push
cmp
loop
xchg
data16
cmp
mov
pop
cmp
pop
xor
pop
push
aam
lret
mov
pop
andb
dec
lods
inc
test
aaa
and
mov
je
mov
pop
insb
dec
jg
sarb
push
in
ljmp
das
out
mov
sbb
dec
xchg
push
and
and
rcrl
dec
sub
out
jo
scas
cmp
xlat
mov
imul
jne
je
jle
pop
sub
lret
adc
ljmp
cmp
cmpsb
mov
jne
dec
fwait
pop
inc
jae
push
inc
mov
and
add
adc
mov
int
push
xor
adc
fsubrl
sub
jbe
mov
mov
in
adc
jo
sbb
loope
push
jo
pop
mov
sarb
mov
push
push
mov
ret
push
stos
test
adc
cmp
jecxz
ret
jno
mov
add
stc
push
lods
cmp
fwait
xor
call
mov
ret
and
pop
mov
mov
jmp
mov
adc
repnz
inc
rclb
jae
in
mov
adc
fcmovb
jo
xor
and
xchg
int3
popf
add
jno
fsts
pop
daa
fwait
ret
nop
int3
cltd
imul
lods
mov
mov
movsl
jae
dec
inc
arpl
xor
ljmp
lret
ret
fidivrl
jo
daa
std
scas
sub
cmpsb
push
mov
mov
xor
sbb
mov
mov
into
enter
push
syscall
ja
lfs
ja
call
fstpl
cmp
loopne
push
inc
andb
pop
in
mov
and
add
fistpll
insb
mov
data16
cmp
add
movsw
xor
shrl
popf
cmp
aad
jb
cmc
jns
mov
gs
loopne
cmp
inc
movsl
fstpt
push
xchg
xchg
movsl
mov
int3
mov
fsubl
adcl
push
adc
aam
add
xchg
add
test
inc
jno
lret
xor
adc
push
dec
push
clc
mov
test
inc
sbb
dec
xor
cwtl
sahf
cmpsl
pop
lods
fs
mov
rcrb
sahf
cwtl
mov
dec
cmp
or
imul
loopew
clc
sub
fldcw
pop
cmp
sub
fimuls
imul
int
sbb
test
push
jmp
dec
mov
pop
mov
dec
sub
call
mov
jbe
dec
cli
daa
mov
call
adc
lock
stos
in
ja
sarb
leave
rorl
popa
psrlw
fsubrl
hlt
sbb
orb
mov
and
lds
shrb
daa
add
inc
mov
sbb
dec
shlb
adc
add
sbb
shll
sbbl
and
push
orb
inc
xor
stos
sub
and
notl
jmp
mov
adc
fstps
enter
adc
cmp
loopne
scas
push
jl
pop
jnp
lret
push
mov
sub
xchg
lds
jb
push
mov
mov
mov
push
mov
mul
jg
rcl
arpl
xchg
cli
pop
adc
mov
rcrl
pop
jg
cmpsl
inc
jbe
sbb
mov
add
scas
sub
push
pop
push
adc
insb
jle
add
rcl
popa
xchg
push
sahf
xor
adc
sarb
xor
dec
cmp
sub
scas
jne
test
repz
leave
es
jae
hlt
insb
imul
and
pop
mov
sbb
sar
jne
nop
fwait
je
jne
mov
lret
sub
les
outsb
xchg
jae
loop
jge
test
and
mov
insl
mov
insb
xor
jg
or
inc
ja
fdivp
nop
dec
mov
aad
lds
xchg
and
cmpsb
ret
aas
add
inc
and
mov
loope
aaa
mov
add
js
les
lahf
lods
jb
fs
mov
sahf
mov
xchg
mov
adcb
sub
cmp
repnz
repnz
cli
push
xor
add
shll
and
xchg
or
cmpsl
insb
sub
mov
mov
push
fmulp
inc
cli
lcall
add
fstpl
mov
inc
pop
cmpb
mov
xchg
std
push
and
aam
mov
lahf
sysret
mov
or
xor
add
dec
mov
mov
inc
push
icebp
insb
loop
fwait
cltd
rcrb
cmp
loop
xor
lcall
xor
jbe
nop
inc
xchg
add
jns
shl
pushf
cld
push
jbe
aam
jl
lcall
cmpsb
mov
adc
testl
adc
lds
lods
mov
sbb
xlat
jg
xor
xor
sti
mov
mov
sar
and
aas
cs
aas
mov
mov
cmpb
insl
cmpsl
in
cmp
sbb
fidivl
js
sbb
sbb
jne
insl
imul
ret
icebp
sub
ret
ds
or
divl
aaa
cmc
sqrtps
jecxz
dec
inc
daa
decb
cmp
loopne
and
stos
xchg
sahf
mov
push
inc
rorl
cmp
inc
and
cmpsb
push
clc
jo
repz
push
scas
dec
addb
addr16
leave
pop
push
dec
xor
push
xlat
mov
data16
and
jle
add
es
movsl
sub
jmp
out
xchg
aaa
dec
inc
add
imulb
cmp
shll
aam
inc
lock
ljmp
cmpsl
outsl
cwtl
push
popf
xchg
push
lcall
sub
rcrb
dec
roll
and
negb
jecxz
pop
stos
cltd
in
xor
test
adc
push
enter
xor
sub
call
mov
dec
sub
pop
mov
cmp
mov
push
stos
imull
cltd
sub
popa
test
push
jae
mov
lahf
add
mov
cmp
inc
push
sbb
lret
jecxz
push
sbb
dec
dec
fnstenv
jmp
sti
test
pop
addr16
fldcw
dec
scas
jo
das
inc
pop
and
into
js
adc
and
repz
push
lods
mov
inc
pop
add
data16
sbbb
fucomip
out
cld
shrb
pop
stos
mov
cmpsl
mull
das
inc
push
loope
push
adc
cmp
ret
sub
or
rcrb
enter
mov
and
adc
lods
lret
cli
push
jns
mov
adc
pop
dec
jbe
and
std
shll
repz
mov
mov
in
test
cs
sbb
int
xchg
lds
inc
mov
pop
aam
jo
roll
in
inc
ficompl
xor
mov
cmp
sarl
out
not
outsl
movb
cmp
or
push
sub
sbbb
or
roll
xor
add
mov
int
cmp
mov
push
mov
mov
jge
cmp
pop
xchg
push
push
cmc
and
pop
pusha
cmp
pop
gs
in
xchg
jo
in
sti
sbb
dec
jo
sub
jp
sbb
dec
and
xor
mov
fdivr
or
fstps
out
push
mov
or
out
adc
sbb
sarl
push
loope
insl
dec
enter
out
mov
cmp
hlt
jg
int3
sbb
cs
adc
pop
loopne
mov
xchg
mov
add
movl
out
stos
cmp
pop
cmp
xor
popa
and
rcll
jno
xchg
xchg
jmp
ja
popa
sub
std
std
and
subl
ror
pop
ret
mov
sbb
mov
pushf
fsubrl
sbb
mov
push
and
clc
cmp
mov
test
cmp
loope
loopne
adc
cs
add
jnp
xlat
jb
stc
and
insl
push
in
and
daa
xor
test
cld
jp
sub
xchg
gs
xchg
jl
ss
inc
popf
sarb
sahf
outsl
xchg
lret
jnp
je
push
pop
push
push
andb
sub
mov
sub
push
cmpsb
pop
in
jne
mov
es
outsl
adc
and
mov
sbb
js
mov
inc
xchg
cmpxchg
mov
mov
js
or
xchg
xlat
sbb
loop
cmpsl
scas
jp
shrl
leave
mov
test
mov
jbe
push
xor
push
mov
hlt
jecxz
hlt
mov
cli
push
incl
and
iret
mov
xchg
push
lock
arpl
pusha
push
push
jl
lret
push
sub
and
lods
inc
mov
cld
inc
mov
movsb
insb
pop
rol
jge
test
fdivs
repnz
mov
mov
insl
jp
xor
cli
add
rcrl
add
pop
xchg
mov
loop
divl
mov
addr16
xor
cmp
dec
push
in
roll
lods
in
sbb
cld
adc
ss
adc
in
pop
lahf
dec
inc
fnstenv
inc
pop
add
stos
fcompl
gs
mov
cmpsb
hlt
inc
mov
iret
jge
sbb
lea
cltd
fisubrl
nop
test
mov
push
lea
mov
loopne
cmpsl
movsb
sub
lret
mov
test
popa
push
sbb
lods
cmp
es
movsl
mov
dec
mov
pop
lock
xchg
add
push
sbb
in
fstpl
lahf
push
rorl
rorb
mov
dec
mov
cmpsl
das
dec
scas
stc
into
sbb
in
imul
push
xchg
mov
adc
xchg
add
lret
pop
dec
ficompl
fwait
test
xor
add
adc
jecxz
jb
fidivrs
add
or
test
sbb
push
adc
in
mov
mov
mov
sbb
je
xchg
inc
pushf
pop
leave
push
je
ja
jg
ja
stos
xor
inc
cmpb
rorb
mov
clc
fs
dec
mov
xchg
mov
inc
mov
pop
mov
enter
repnz
push
pop
inc
xor
xchg
xchg
hlt
sahf
and
mov
pop
jb
xor
or
mov
xor
xor
mov
or
jo
fdivrs
mov
push
jbe
outsb
xor
mov
xor
mov
lds
mov
enter
inc
mov
mov
jg
sbb
xchg
pop
jge
push
xchg
push
mov
push
fwait
sbb
inc
pushf
leave
ret
je
dec
insl
shl
xchg
pop
jnp
sbb
mov
mov
icebp
sub
hlt
jne
clc
pop
mov
aad
inc
mov
insl
inc
xor
inc
adc
arpl
loope
aad
push
xor
inc
sahf
cmpl
fdivl
or
push
ret
js
sahf
inc
or
sub
imul
jl
cmp
stos
sbb
psubsw
dec
sahf
popl
lds
fs
mov
lcall
mov
adc
addl
push
xchg
ficoml
pop
int
mov
cmp
pop
mov
push
cmp
in
xchg
outsl
dec
mov
mov
popa
mul
sbb
shrl
daa
cld
mov
inc
push
adc
adc
icebp
mov
pop
negb
ljmp
outsb
push
mov
inc
test
cmp
pop
and
stc
insl
adc
xchg
fistpl
pop
mov
out
jnp
addr16
mov
shl
adc
push
jg
jecxz
js
lods
dec
pop
inc
push
adcb
sub
sub
push
jne
cltd
mov
cmp
sub
mov
cmp
pop
or
xor
lret
inc
mov
imul
ror
cmpsl
and
out
enter
pop
sbb
das
jnp
add
shrb
push
mov
outsb
sub
stos
cwtl
cmpsb
push
pop
out
shrl
dec
mov
push
aad
into
fisubrs
popf
mov
dec
sub
jg
xchg
call
sub
mov
jecxz
addr16
ret
jbe
cmp
popa
mov
incl
pop
jae
mov
arpl
test
mov
pop
mov
cmp
insb
je
dec
mov
sub
mov
push
insl
add
jae
adc
out
fnstsw
mov
lahf
das
push
jne
rolb
fs
push
cmpsl
aam
lock
out
jg
add
fnstcw
shll
xor
and
out
scas
pop
xlat
jg
and
xchg
mov
addr16
sbb
cmp
push
mov
mov
incb
push
pop
iret
hlt
or
fiaddl
loopne
add
sbb
shll
ret
mov
ja
push
cmp
pushf
fimull
popa
mov
inc
adc
icebp
negb
push
mov
jg
aaa
xchg
sbbl
sub
mov
int3
out
cld
cwtl
repnz
mov
inc
mov
mov
mov
jno
mov
fmul
mov
lds
lds
mov
fdiv
ret
lds
sbb
inc
or
stos
es
or
flds
jbe
pop
adc
dec
pushf
add
mov
fdivrl
shl
xchg
fsub
sbb
shrb
jmp
jl
pop
jle
repz
lds
xchg
push
shlb
push
sbb
arpl
or
pop
jnp
jo
outsb
xchg
ret
ficomps
xor
or
je
cltd
test
pop
and
addps
popa
sahf
fadds
mov
pushf
inc
mov
pop
xsaveopt
into
sbb
cmp
dec
dec
mov
loopne
shll
mov
ficoms
aad
je
mov
or
xor
cmp
sub
adcb
rcrl
jmp
adc
jo
fisubl
shrb
and
out
jns
outsl
mov
or
lds
push
addb
adcb
addl
sub
ret
imul
inc
fdivr
rcl
pop
add
dec
jbe
scas
fimuls
mov
xor
clc
out
imull
ds
xchg
xor
cmc
or
rclb
outsb
push
adc
mov
xor
jae
in
jmp
aam
push
mov
gs
inc
mov
push
pop
xor
ja
push
push
les
mov
jg
mov
movsl
xchg
test
sbb
fxch
cltd
push
jb
jne
repnz
test
jb
pop
and
jecxz
xchg
cmp
lds
in
pop
insb
cmpsl
push
mov
aad
xor
std
cwtl
and
stc
jge
aas
clc
mov
fidivrl
dec
push
xor
mov
or
mov
leave
fists
ret
in
mov
sti
adc
arpl
lds
testl
jp
outsl
or
lret
iret
aad
cmp
divb
jge
inc
mov
add
sbb
mov
lcall
xchg
enter
dec
cmp
push
push
mov
adc
in
cmp
imulb
xor
sahf
roll
fisttpl
shl
sub
lret
clc
cmp
popf
xorb
das
push
mov
cmpsb
lea
cmpsb
sbb
fbstp
outsl
mov
xor
jo
and
cli
sbbl
gs
rorb
test
fadds
sbb
imul
fcmovnb
dec
pop
mov
pop
push
nop
adc
mov
cli
outsb
mov
pop
scas
aas
cmp
jae
pop
test
int
push
fisubl
mov
test
mov
les
loop
lock
adc
push
cmp
inc
lock
call
jb
ret
insl
and
add
pop
outsl
mov
call
pop
inc
cmp
jbe
lds
bound
test
mov
sub
into
mov
xchg
int3
or
or
test
ficomps
stc
pop
mov
push
adc
push
xchg
mov
fidivs
repz
nop
cmp
lcall
add
shr
lret
dec
cltd
mov
lahf
adc
fwait
btr
fists
push
lea
and
jno
call
jmp
add
push
cmp
inc
mov
mov
dec
aad
xor
in
dec
mov
ljmp
mov
jle
stos
push
inc
cli
les
lret
push
fs
test
add
jp
ds
inc
faddl
inc
jae
inc
cs
les
pushf
insl
add
xlat
sbb
jl
mov
js
lret
loope
and
mov
pop
enter
out
push
rclb
jns
lcall
sbb
adcl
int
or
frstor
cmp
js
gs
daa
jnp
pop
scas
cmp
fcomip
inc
push
push
lods
std
sbb
daa
ret
movsl
adc
xchg
or
jg
xor
and
stos
push
in
and
fucom
push
xor
mov
or
pushw
push
test
test
xchg
mov
loope
push
push
ja
xchg
pop
jns
fbstp
aam
imul
jbe
out
mov
fstp
jg
inc
jbe
ficomps
mov
push
sar
or
mov
test
lods
lcall
mov
xchg
cltd
mov
fisubrs
das
cmp
xchg
daa
sub
scas
mov
xor
mov
sub
mov
mov
ss
push
lea
or
jecxz
pop
andl
jge
push
pop
mov
jle
out
movsl
mov
lods
or
mov
or
or
xor
rcll
add
movsl
jo
or
fnstsw
jecxz
jmp
outsb
shlb
daa
cmpsb
decb
xchg
sbb
aas
repz
and
insl
call
mov
stc
jne
out
push
mov
dec
mov
shl
or
mov
imul
add
orl
dec
icebp
dec
rcr
jo
test
repz
clc
mov
jmp
inc
rol
imul
inc
pop
sti
or
push
das
mov
add
push
mov
pop
mul
xor
jnp
std
mov
push
ds
add
pop
pop
inc
divl
adc
cli
mov
cmp
inc
jl
ljmp
lahf
fdivs
clc
mov
sbb
fnstsw
jbe
movsl
in
and
push
push
mov
dec
inc
mov
mov
aad
icebp
sarl
in
pushf
push
inc
ret
mov
gs
lcall
jo
mov
pushf
clc
push
fwait
mov
mov
sbb
outsl
icebp
dec
inc
dec
enter
cmp
push
cld
add
mov
push
fistpll
iret
xorl
mov
icebp
and
pop
push
hlt
sub
xlat
pushf
adc
int
testl
mov
in
pop
fisubrl
iret
xorl
jne
hlt
add
enter
mov
cwtl
imul
xchg
mov
pop
movsl
inc
mov
rolb
popa
scas
push
rorb
enter
xchg
pop
sahf
xchg
or
lods
gs
mov
ljmp
popf
clc
popl
insl
ljmp
or
sub
push
ficompl
cmp
add
fstpl
aaa
fadds
fcoms
sbb
fisubl
mov
jle
fwait
out
test
icebp
xchg
push
push
xchg
cld
ja
lret
pop
xchg
xchg
pop
xor
xchg
pop
lahf
inc
repnz
das
mov
fldcw
andl
push
push
fmuls
sbb
jo
fiaddl
stos
push
pop
and
fidivrs
mov
push
nop
push
jl
xor
lcall
outsb
test
lock
mov
mov
xchg
xlat
sub
xchg
mov
ljmp
in
loopne
pop
in
jbe
cltd
bound
or
sbb
xchg
rcl
jns
mov
rolb
pop
adc
outsl
movsl
pop
repz
pushf
push
inc
imul
xor
mov
shll
arpl
pop
pop
mov
pop
mov
sub
pop
jb
sti
mul
pop
loope
lret
movsb
jno
lds
bound
fistpl
jae
in
mov
imul
icebp
sub
xchg
mov
pop
jmp
xchg
outsb
xchg
mov
mov
xor
aam
cmpsb
jns
cmp
sub
repz
sub
cmp
cmp
fmuls
cmp
mov
in
fsubrs
enter
out
xor
mov
mov
ljmp
cmp
lock
int
int
jecxz
pop
push
enter
or
dec
inc
movsl
push
pop
inc
in
sub
ds
mov
out
ss
mov
cs
vpunpckhdq
dec
jl
pop
and
shl
xor
iret
mov
add
pop
push
mov
pop
sbb
push
xor
iret
in
aas
call
bound
cmp
int3
mov
dec
pop
nop
mov
iret
test
repnz
push
sbb
mov
cld
mov
das
insb
hlt
and
std
xorb
ds
orl
pop
add
push
in
sbb
insb
xor
push
test
shlb
mov
mov
cmc
rcll
leave
cmc
pop
jno
imul
test
dec
int3
fstpt
and
or
pop
mov
xchg
in
aaa
repz
cli
clc
jmp
aad
test
push
mov
and
mov
mov
dec
je
push
repz
fcompl
gs
jg
or
sahf
gs
inc
adc
or
movsb
imul
mov
adc
inc
jge
fcoml
mov
xchg
mov
mov
adc
pusha
std
xor
addb
mov
push
pop
icebp
out
jmp
loope
pop
add
insl
mov
test
add
repz
into
stos
insb
mov
mov
xchg
icebp
jae
lock
cmp
inc
pop
xor
jnp
clc
jg
mov
lods
in
insl
sarl
xor
addb
cmp
cltd
inc
aas
jg
dec
push
add
cmpsl
int3
lret
daa
shrb
mov
and
mov
lea
in
iret
sbb
inc
stos
pop
xchg
gs
jo
inc
sub
add
xorl
aaa
sub
mov
xor
aaa
xchg
mov
arpl
stos
out
pop
cmpsl
mov
jge
sahf
add
lret
inc
push
add
mov
pop
loopne
xchg
xor
pop
mov
rcrl
inc
mov
aad
icebp
sub
xor
inc
cmp
jae
outsl
pop
cmp
out
jmp
xchg
pmulhuw
insl
fwait
push
movsl
rorl
ror
jo
in
gs
call
sbb
cmpl
sub
pushl
rolb
cs
push
pop
js
int
adc
dec
mov
shlb
cmp
aas
adc
sbb
popa
test
sti
sti
or
movsl
or
leave
or
out
xchg
jnp
adc
push
int3
xchg
or
out
lahf
imul
out
lcall
outsl
pop
orl
adc
lret
inc
dec
and
xor
dec
cwtl
xor
jmp
cli
lods
xor
push
leave
or
out
cmp
ret
sbb
mov
fs
add
jl
adc
add
pop
lods
repnz
add
adc
jmp
mov
mov
in
push
nop
cmpsb
roll
jmp
sub
ficoms
and
adc
lret
dec
xor
xchg
push
in
cmpl
daa
jg
mov
ret
sub
lds
mov
cmp
jne
mov
fnstenv
adc
xchg
mov
stc
mov
pop
mov
movsb
jecxz
xchg
inc
das
cmpsb
sub
and
pop
xor
jno
xlat
mov
es
hlt
hlt
rorb
movsl
mov
std
push
jae
mov
jle
add
sub
mov
mov
sbb
mov
and
in
aas
add
mov
mov
js
mov
cwtl
call
sbb
scas
aam
pop
sbb
loop
xor
push
leave
dec
mov
pop
scas
sbb
mov
rclb
movsl
jbe
in
shl
mov
xor
push
ja
cmp
jecxz
filds
stos
lcall
inc
iret
dec
cmp
setae
jmp
xchg
adc
xchg
xor
and
adc
pop
xor
iret
pop
push
inc
es
shrb
test
leave
cmp
test
mov
rolb
mov
pop
dec
add
rcl
inc
jnp
fisttpl
stos
jbe
mov
xchg
dec
bound
aaa
lds
je
xor
mov
ljmp
mov
test
cmp
dec
call
inc
mov
rcr
mov
orl
cmp
cmpsb
ljmp
push
sub
ror
outsl
pop
mov
inc
out
nop
add
mov
xchg
mov
cld
frstor
fcmovu
hlt
pop
icebp
inc
lret
push
mov
negb
mov
jb
call
fcoml
fistl
adc
push
xlat
dec
cli
leave
adc
rclb
xorb
xchg
lds
icebp
movsl
jmp
mov
outsl
inc
loop
push
mov
sub
lret
int
call
pop
lret
xor
lods
dec
movsl
adc
inc
out
ret
jecxz
hlt
ret
repz
pop
sbb
aas
sub
iret
xor
jecxz
enter
aad
jne
mov
push
pop
icebp
xor
push
iret
xlat
leave
in
arpl
cltd
pop
jp
sbb
and
out
pop
pop
push
dec
loop
mov
mov
or
cmp
push
and
adc
cmp
adc
dec
test
adc
pop
jns
out
mov
mov
repnz
pop
cld
push
daa
subb
dec
int
cmp
cmpsl
adc
lahf
aam
dec
inc
dec
pop
and
sbb
arpl
xchg
into
push
sbb
daa
and
push
pop
out
scas
test
push
jae
jnp
rclb
adcb
sub
cs
rorb
sub
dec
ja
or
xor
inc
inc
xchg
pop
sbb
shrl
icebp
mov
pop
inc
jae
push
sub
dec
cmp
xchg
lret
je
stos
stc
iret
fiaddl
mov
push
mov
push
xchg
jo
mov
lahf
dec
pop
lahf
xchg
mov
dec
int3
adcb
push
sbb
rsqrtps
pop
mov
aas
fildl
mov
pop
nop
xchg
lds
aaa
les
sub
pop
cwtl
or
sbb
and
mov
stos
mov
inc
frstor
xchg
iret
aam
mov
cs
jbe
mov
repnz
dec
pop
in
and
cmpsb
xorb
mov
out
scas
lods
lret
adcl
scas
das
pop
ret
lret
out
cmpb
incb
add
jae
adc
xchg
pop
orl
hlt
inc
sar
push
cwtl
adc
fisttps
loopne
cmp
loope
cmpsb
lret
pushf
scas
pop
fxch
sbb
xchg
cmp
mov
enter
adc
fistl
js
jp
outsb
push
xor
imul
or
fsub
mov
mov
out
outsl
je
loope
insl
xchg
ss
inc
les
hlt
test
std
loop
inc
movsl
fmull
aam
adc
sub
cmp
push
ja
inc
xchg
xchg
or
pop
jmp
subl
inc
stos
mov
mov
in
mov
sbb
lret
xor
leave
int
xchg
fwait
movsl
fcompl
popl
cmp
xor
ret
jbe
addr16
ret
inc
mov
pop
lds
lds
mov
mov
ljmp
or
or
inc
hlt
andl
mov
out
adc
mov
in
adc
mov
push
movsb
jne
fcomip
push
mov
push
lock
test
mov
jge
xlat
hlt
xor
mov
loopne
andb
push
ja
cmc
or
mov
push
aam
insl
mov
inc
xchg
repz
add
or
sbb
test
cs
sbb
mov
xchg
sub
ret
mov
insl
nop
cs
jb
pop
xor
sub
pop
mov
int
stos
iret
mov
add
sbb
adc
aam
jns
hlt
rorb
icebp
jle
sub
and
sub
dec
lcall
and
mov
jmp
xlat
mov
faddp
or
lods
and
mov
jns
xchg
push
mov
pop
cmp
mov
call
aas
adc
fs
in
negb
loope
ja,pn
imul
mov
fldenv
popf
repz
or
insb
mulb
cwtl
pop
push
scas
scas
fistps
mov
pop
call
mov
push
icebp
ds
shll
loop
and
adc
xchg
xchg
sub
mov
xlat
sbb
es
sbb
icebp
mov
mov
jecxz
out
jg
arpl
lret
sub
and
lret
in
and
cmp
ds
mov
jnp
stos
sub
imul
movsl
fidivs
stos
push
int
sub
push
and
xchg
mov
mov
pop
addr16
out
fsub
pushf
in
adc
cmpsl
pop
cld
xor
dec
fldt
or
nop
mov
push
xchg
jp
icebp
add
lahf
sti
xchg
adc
pop
sub
and
in
sbb
push
stos
mov
sbbb
repz
pusha
mov
sub
dec
xor
rcl
xchg
aas
pop
addb
and
cmp
pop
mov
jle
mov
or
enter
cmpsb
lea
push
sub
cltd
push
adc
inc
add
stc
mov
stc
jno
sub
push
icebp
out
aam
sub
ss
arpl
and
out
sbb
adc
xor
pmulhuw
mov
into
or
inc
cld
lds
dec
decb
mov
pcmpeqb
dec
arpl
xor
gs
fdivl
push
mov
xchg
sti
xchg
leave
div
int3
mulb
dec
jo
inc
in
cmp
movsb
sub
addr16
push
add
bound
cmp
shl
bnd
push
xor
push
daa
cmp
sbb
loope
pop
popa
test
in
or
mov
mov
movsb
cmp
gs
xchg
repnz
int
loope
inc
sbb
push
cwtl
or
repz
sti
mov
lcall
and
jmp
jl
add
jnp
mov
or
push
outsl
mov
mov
mov
push
loop
mov
mov
add
bound
fmull
or
pusha
sbb
sbb
push
cli
jg
js
int3
xchg
popa
cmpsb
or
icebp
xor
cmp
fwait
cltd
dec
inc
sbb
push
add
mov
ja
test
orl
outsl
data16
or
jae
mov
dec
adc
lods
das
cmpsb
mov
push
in
ret
adc
dec
jecxz
add
cmp
push
enter
negl
mov
popa
mov
mov
add
ficompl
sbb
xlat
in
inc
fbld
mov
stos
cmp
push
test
pop
jp
ficoml
pop
repnz
mov
mov
sub
push
hlt
lods
out
daa
and
add
pusha
leave
test
mov
xchg
add
std
sbb
cmp
cmpsl
lea
xchg
dec
rorb
or
add
xchg
mov
cmp
outsb
int
jae
inc
cli
fildl
shr
jb
xlat
std
insl
rol
jmp
stos
mov
dec
aam
xor
cmp
testl
sbb
insl
xchg
adc
mov
popf
jg
mov
sti
loopne
and
xorl
xchg
sbb
and
addb
push
jge
pop
clc
jmp
push
in
xchg
mov
xorb
loop
sarb
mov
jmp
out
jns
push
mov
cmp
xor
jg
clc
dec
test
add
mov
clc
pushf
test
xchg
xchg
insb
inc
loopne
arpl
into
pop
inc
xor
push
or
js
xchg
mov
sahf
pop
jg
int3
rcll
fnstcw
cmp
out
xor
or
pop
sub
enter
enter
ljmp
cmp
mov
dec
mov
data16
sub
fnstcw
sahf
add
mov
mov
mov
aas
insl
call
arpl
add
and
pushf
jnp
push
cmp
mov
mulb
test
jbe
test
cmp
ss
dec
loope
cwtl
xchg
mov
mov
pop
push
xor
insb
dec
int
cli
stos
subl
ja
pop
testb
sbb
jo
or
dec
xor
jae
pop
divl
bound
aam
daa
lret
pusha
push
nop
and
ja
mov
and
push
sub
cltd
mov
push
push
popf
daa
jne
enter
out
mov
and
pop
lods
fdivrs
cmpsl
or
xlat
and
aad
imul
jle
jne
rorl
rclb
test
sbb
adc
xchg
inc
shlb
jl
pop
jge
out
jbe
outsb
mov
mov
cmpsl
loope
jmp
int3
lret
mov
pop
div
outsb
nop
ja
pushf
inc
stos
adc
rorb
or
ss
pop
sbb
fcoms
and
mov
stc
and
jp
stc
ljmp
xchg
outsb
or
xchg
into
inc
jp
arpl
int
leave
aam
lret
jb
mov
jg
aam
ficomps
out
and
fstpt
adc
pushf
push
mov
fwait
mov
mov
sti
inc
in
sub
dec
mov
inc
mov
mov
mov
call
aam
or
inc
lahf
xchg
sub
add
inc
rorl
inc
movsl
and
in
add
cmp
lods
outsl
inc
jmp
popl
out
sub
sahf
jg
decl
iret
adc
loope
icebp
leave
icebp
lods
loope
mov
mov
and
push
iret
mov
inc
das
push
push
sahf
jb
cmpsl
or
add
repz
js
push
and
jecxz
gs
jmp
movsb
dec
cmpl
stos
xor
cmp
push
jae
ffree
mov
fwait
popa
pop
lds
dec
mov
mov
mov
aaa
repz
sbb
pusha
cs
stc
lds
popa
fsts
out
xor
push
fldenv
mov
data16
icebp
jge
js
or
push
lea
inc
loop
mov
jle
iret
sbb
cltd
into
sub
nop
sub
orl
xlat
mov
pop
movl
sbb
in
sub
jl
and
jo
movsb
cli
jge
and
cmp
dec
loop
xchg
int
sbb
sbb
fcoml
push
xchg
pop
jmp
push
jg
loope
cmpsl
imul
shll
outsl
aad
cwtl
mov
popf
pop
mov
cld
mov
xor
push
lret
leave
pop
add
xor
cmpsl
pop
imul
dec
add
data16
popf
sar
dec
call
sub
sub
mov
xor
mov
xor
push
jecxz
leave
mov
mov
shll
scas
incb
xchg
xor
call
mov
pop
lds
mov
push
fucom
std
push
imul
mul
jb
les
inc
or
pop
inc
imul
xchg
mov
xor
fidivrl
sbb
pushf
test
xor
push
iret
inc
push
fld
push
or
xchg
inc
cld
leave
sbb
push
xor
and
mov
gs
inc
mov
xor
xchg
pop
sti
jge
sub
insl
stc
xor
mov
not
lret
push
jnp
pop
pop
adc
cmpb
push
jne
test
mov
jae
and
mov
int3
sub
cltd
mov
arpl
push
lock
cmp
adcb
pop
and
push
xchg
cmp
iret
sub
adc
iret
je
add
cmpsb
add
push
neg
and
jne
sbb
pop
mov
push
xor
fisttpl
sbb
gs
cmp
ret
ret
push
jb
fldt
cltd
in
xor
push
xchg
and
push
shrb
outsl
xlat
test
loop
mov
fstpl
jne
xor
aaa
aaa
andb
mov
in
and
sub
pop
pop
pop
xchg
fs
leave
mov
jbe
or
mov
mov
inc
jb
adc
scas
lods
stos
xlat
ret
xchg
pop
outsb
jo
inc
and
mov
xor
mov
mov
test
pushf
mov
mov
add
xchg
cmp
mov
dec
popa
jecxz
dec
stc
imulb
mov
adc
inc
jbe
jl
test
lods
push
jnp
xchg
xor
loop
inc
sbb
nop
rcrl
popf
dec
and
pop
outsb
ror
inc
mov
les
dec
or
sti
jl
mov
insb
jge
mov
cmc
sub
mov
cs
stos
insb
push
in
sub
repnz
aam
adc
cmpsb
stos
into
cmp
pop
xchg
pop
jae
sbb
ds
pop
jmp
xor
js
jne
or
outsb
jmp
bnd
and
lcall
aad
cs
inc
in
aaa
pop
int3
aas
inc
adc
in
fildl
out
movsb
mov
mov
test
mov
enter
pop
cmp
inc
outsb
iret
shlb
mov
sub
in
mov
scas
adc
adc
ret
cwtl
xor
mov
mov
add
xor
fs
ljmp
sub
jp
negb
dec
and
xchg
sti
pop
mov
and
loop
xor
cmp
xor
and
daa
cmp
jg
xorl
cmpsb
js
into
aad
mov
xchg
lret
and
shl
inc
or
je
jl
push
cvtdq2ps
push
sub
mov
out
fistpl
add
addb
or
add
xchg
add
into
jns
int3
pusha
in
lods
sbbb
lret
jns
adc
test
into
mov
mov
mov
mov
sub
pop
mov
mov
mov
push
out
pop
jle
fisttpll
fxtract
push
ss
cmpsl
mov
ret
mov
sbbb
ss
int3
decl
jae
lods
adc
jle
dec
mov
cltd
adcb
int3
cld
lea
inc
adc
jae
jno
xchg
cmpb
pop
sub
inc
cli
xchg
repz
xchg
sarl
aas
popa
pop
repz
xchg
dec
fsts
cmp
cmp
pop
cmc
lea
into
imul
mov
shlb
les
leave
xchg
stc
insb
push
mov
loopne
xchg
fistps
jg
into
das
push
lcall
xchg
lea
jns
or
push
jnp
xor
enter
pop
scas
dec
dec
push
pop
xchg
inc
inc
in
mov
aas
aam
daa
mov
gs
add
insb
jbe
gs
jnp
sbb
pusha
inc
add
pop
ror
ret
lret
test
and
notb
or
xchg
or
leave
jg
call
movd
sbb
jecxz
leave
add
es
mov
push
lods
inc
test
jb
push
js
loope
aaa
inc
in
iret
aas
sahf
mov
sahf
push
xor
fistpl
in
jo
sub
fistl
xor
fidivs
das
or
xchg
and
mov
mov
inc
dec
xor
pop
cmp
insb
xchg
jp
xchg
pop
adc
pop
into
mov
jl
movsb
sbb
mov
xor
jbe
add
inc
sbb
or
inc
out
lods
lock
dec
sub
xchg
mul
or
inc
mov
xor
or
loopne
xchg
jecxz
xchg
xchg
push
cmp
leave
mov
psllq
xor
push
rclb
or
out
or
xor
dec
ret
incb
xchg
mov
lods
imul
fadd
jmp
mov
enter
inc
adc
add
cld
in
push
cmp
insl
adc
or
testb
mov
inc
cmp
and
les
sti
das
js
imul
cmp
stos
rcrl
mov
mov
jae
push
aam
jg
pop
add
mov
push
test
mov
jno
inc
mov
mov
add
repnz
cmp
mov
cld
cltd
jbe
call
mov
aam
sub
aam
mov
jns
inc
pop
daa
inc
xchg
sarl
out
pusha
fisttpl
pushf
dec
pop
ret
gs
icebp
mov
mov
loope
or
mov
iret
jl
fs
rcrl
lock
ds
out
push
loopne
mov
and
xor
jns
mov
popl
fcmove
sbb
shr
and
test
cmp
aad
inc
xchg
ja
scas
xlat
or
icebp
scas
fcomip
dec
xchg
lahf
imul
sub
int3
xchg
test
cmpsl
push
lret
xor
pushf
mov
aas
cmp
movsl
mov
stos
sahf
xchg
paddsb
lret
icebp
repz
or
push
xchg
xor
ret
imul
inc
into
fldenv
imul
inc
jo
mov
dec
sarl
lods
dec
in
add
inc
sub
loopne
arpl
or
mov
push
xor
push
sub
sub
std
xchg
adc
push
lods
and
inc
lret
cmpsl
mov
sbb
in
adc
repz
pushf
push
negb
mov
jae
js
sahf
push
pop
or
test
repz
std
jle
pop
sbb
js
cmpsb
popa
adc
adc
add
sahf
dec
adc
sub
inc
test
scas
mov
push
pxor
ja
jecxz
fwait
shl
outsb
icebp
jae
enter
cmp
xor
clc
and
add
sbb
stos
jnp
int3
fs
std
loop
fidivrl
mov
out
xor
pusha
fdivr
testl
add
out
hlt
jns
es
cmp
nop
test
jge
mov
inc
test
or
sub
xchg
jle
in
push
pop
ds
xor
add
dec
addb
mov
pop
mov
outsb
mov
adc
jmp
mov
mov
or
in
scas
push
dec
lds
dec
imul
data16
adc
fisttps
xor
movsl
sub
or
mov
mov
mov
add
mov
cmp
cmpsb
sti
xor
lods
int
lods
lahf
cmpsl
test
lea
push
sub
cli
shrb
or
lods
cwtl
pop
sub
js
or
push
in
mov
loope
push
shr
mov
mov
mov
popf
fistps
popf
movsb
inc
and
pop
xor
jno
mov
fimull
push
xchg
inc
xchg
lret
mov
mov
adc
mov
push
push
lds
dec
clc
xor
and
and
lret
jb
inc
lds
arpl
xor
outsb
fsubrl
icebp
mov
pushf
ljmp
jmp
mov
fidivs
jp
jns
xor
push
adc
adc
in
cltd
ljmp
mov
or
enter
push
cmp
push
shrl
push
or
xchg
movsb
addr16
cld
popa
push
stos
cltd
jmp
or
pop
out
lea
xor
rorl
in
adc
mov
xor
imul
or
mov
sbb
or
repnz
sahf
addr16
sbb
or
mov
adc
cltd
add
cld
mov
cmp
daa
push
in
loopne
insl
dec
addr16
dec
daa
dec
imul
daa
hlt
cmc
test
and
loope
cmpsl
cmp
cmp
test
movsl
xchg
fisubs
pop
mov
cwtl
cmpsl
out
shl
xchg
cs
popf
pop
lea
lods
push
cmp
pop
cmp
inc
sbb
or
or
sub
inc
ja
inc
and
pop
rorl
mov
mov
and
xchg
xchg
cmc
pop
mov
outsb
mov
jae
mov
mov
xlat
push
lret
ret
aaa
lret
dec
decb
pusha
movsl
pop
lcall
jmp
imul
fadds
push
sub
test
push
jl
xor
jl
add
and
pop
dec
mov
pop
cwtl
je
mov
cmp
mov
xchg
das
or
xor
les
xor
mov
out
jo
cli
dec
xchg
insl
sub
js
and
add
pop
daa
push
clc
or
out
mov
mov
hlt
push
adc
inc
inc
mov
xor
insl
xlat
rclb
dec
notb
xchg
dec
add
insb
das
sub
addr16
mov
repnz
ret
mov
xor
xchg
mov
fimuls
adc
pop
mov
enter
xor
hlt
daa
cwtl
xor
and
adc
jbe
adc
hlt
jne
movsl
push
rorb
push
test
fsubrs
mov
inc
gs
mov
inc
insb
push
mov
push
js
dec
std
fst
add
sub
loope
or
pusha
jle
push
cmpsl
mov
jl
repnz
or
out
dec
clc
sub
imul
pcmpeqb
sbb
lcall
mov
sti
pop
and
fucomip
in
fs
dec
adc
push
dec
xor
push
or
bound
jnp
mov
scas
aaa
cmp
in
mov
insb
mov
and
dec
enter
out
dec
roll
arpl
push
dec
lods
pop
jno
sti
mov
sub
nop
out
scas
imul
fistpl
mov
sbb
pop
push
mov
cs
outsb
and
in
leave
cwtl
cli
xchg
rolb
test
pop
pusha
call
mov
nop
in
stos
mov
xchg
jle
or
rcll
dec
test
aaa
mov
dec
push
iret
dec
add
jp
mov
loope
mov
pushf
ret
xchg
icebp
inc
push
xchg
aam
out
ja
stos
push
sti
sub
lret
push
xor
repz
std
lock
mov
imul
sbb
mov
cmp
lods
jo
fldl
cmp
cli
aad
in
rcll
pop
mov
pop
cltd
xor
or
js
fcompl
inc
and
in
jecxz
mov
or
dec
pop
cmc
jnp
jecxz
sahf
sahf
mov
mov
shl
jnp
pop
mov
popa
lcall
sar
shll
sbb
ljmp
mov
aad
push
movsl
push
cmpsl
std
sub
rcl
popa
add
test
lret
lret
pushf
adcl
inc
daa
call
sti
out
rcll
lea
es
and
incb
stos
shrb
sub
push
inc
stos
dec
sti
push
test
push
shrl
pop
nop
sarl
sub
sub
cli
xor
push
sbb
cmp
getsec
dec
adc
xor
dec
push
outsl
add
push
pop
inc
dec
fisttpl
test
into
data16
and
mov
orl
lock
mov
movsb
lcall
aaa
mov
xlat
repnz
addr16
mov
aas
xor
punpcklwd
mov
xchg
jecxz
clc
fs
dec
xchg
shr
inc
xchg
imul
add
pop
scas
daa
fsubrl
out
ja
loopne
xchg
mov
xor
jle
inc
vmovaps
sub
fwait
enter
push
jp
and
pop
xchg
int3
gs
sub
sub
mov
movsl
divl
arpl
popa
jp
ss
pop
scas
jle
mov
mov
out
stos
lds
sbb
add
mov
and
cmp
inc
dec
int
cmpsl
xchg
mov
mov
stc
push
ret
dec
and
lahf
out
imul
add
outsb
pop
arpl
dec
test
pop
cmc
aas
loopne
add
jo
mov
je
lcall
mov
jbe
dec
int
xchg
gs
lea
cmp
jne
pushf
pop
mov
cltd
push
aam
cld
inc
or
fildll
pusha
cld
rcr
mov
pushf
sbb
pop
mov
mov
jmp
out
int3
mov
jmp
dec
jg
mov
xchg
jno
cmp
pop
out
xchg
sbb
shlb
dec
jnp
ljmp
icebp
xchg
push
negb
wrmsr
outsb
popa
jp
pop
movsb
fcmovbe
or
dec
jge
sub
and
jl
in
addr16
js
inc
mov
test
push
and
add
mov
test
cld
arpl
xor
sub
aaa
push
or
add
xchg
adc
mov
mov
dec
imul
lret
sub
pop
andl
push
insb
outsb
mov
arpl
jmp
cmp
xchg
pop
jg
push
push
lea
test
mov
cmp
ret
ds
popf
lods
movsl
inc
sbb
pop
in
sub
adc
mov
mov
cmp
mov
pop
pop
jmp
dec
xchg
or
movl
gs
in
add
push
je
or
jns
or
xchg
and
loope
mov
test
add
xchg
andb
inc
loope
dec
sub
sbb
divb
xor
test
repz
sub
out
cmp
jnp
add
das
sarl
jl
xchg
push
fistpll
mov
pop
js
or
ds
hlt
lret
dec
aaa
jge
cmp
dec
imul
mov
fsubl
repz
cmp
cli
shrl
ja
pop
stc
mov
mov
and
addb
xor
mov
fbld
outsb
jns
aam
cmpsb
push
push
xor
inc
xchg
push
add
xchg
push
rclb
sub
jo
pop
out
xchg
push
call
fwait
and
inc
sbb
dec
fisttpl
pop
pushf
pop
cmp
fstpl
xlat
adc
sahf
and
mov
int
lret
call
dec
ljmp
xor
jl
sub
mov
dec
aam
out
in
or
cli
ret
pusha
lahf
addr16
fcompl
jle
adc
pop
and
adc
icebp
cmp
cs
adc
ja
cmp
es
sahf
rclb
int
std
pop
in
shrl
xchg
cmc
fs
orb
das
pop
mov
repnz
pop
inc
inc
adc
idivl
xor
cmp
mov
xor
jo
sub
sbb
jl
push
out
add
rcll
fwait
stos
inc
arpl
ret
xlat
jecxz
aam
sub
in
dec
js
lods
sarb
jnp
cmpsb
mov
insb
mov
jae
imul
js
mov
movsb
mov
pop
and
repz
dec
sahf
mov
bswap
fwait
dec
dec
inc
mov
dec
add
pop
jg
sub
dec
stc
pusha
loop
ret
negl
adc
inc
mov
sub
rcll
jae
js
mov
xchg
outsl
in
pop
outsb
jle
xchg
imul
sahf
adc
lds
mov
scas
shlb
mov
scas
hlt
fistps
fs
dec
jno
pop
mov
int3
fwait
mov
or
lret
cmc
or
cmp
or
sub
fidivl
sbb
int
mov
mov
sbb
fcmovu
cmp
xchg
ds
pop
add
pop
mov
fstpt
sub
adcl
cld
fists
add
mov
decb
test
into
add
cmp
ja
pop
lock
enter
insb
stos
ja
or
imul
sbb
sub
sti
jne
ficompl
pop
mov
imul
jmp
je
popf
adc
pop
cmp
xchg
icebp
xchg
mov
push
sbb
outsl
data16
arpl
mov
sahf
inc
push
cmp
loope
mov
pop
movsb
lds
pop
out
pusha
cld
mov
pop
out
cmp
jne
ret
add
pusha
mov
lds
inc
or
xchg
les
cmpsb
push
shrl
dec
mov
inc
aas
mov
nop
push
jecxz
sbb
push
and
pop
adc
and
gs
or
adc
and
jmp
lods
outsb
mov
mov
iret
pop
ja,pt
push
cli
push
sbb
push
inc
mov
mov
repnz
outsb
and
inc
enter
sbb
push
dec
sbb
sub
aas
movsl
leave
wbinvd
aam
pop
push
outsl
aas
jno
or
js
popa
ss
bound
daa
ret
sub
insb
aas
rcll
add
int3
test
mov
imul
mov
xor
adc
imul
lret
rolb
xor
rolb
sbb
mov
imul
mov
mov
jns
ret
mov
es
inc
push
adc
add
mov
mov
lret
or
dec
pop
xor
xchg
int3
dec
or
mov
mov
incb
cld
aam
fcmovnu
cltd
pushf
mov
call
stc
push
push
arpl
mov
mov
inc
jmp
fbstp
cmp
aas
fcomp
icebp
xor
inc
mov
jmp
js
ret
cli
data16
sbb
int
dec
adc
pop
call
mov
push
rcl
xchg
pop
dec
outsb
lret
es
outsb
sbb
pop
push
adc
cs
fdivrl
lret
push
mov
lahf
imul
adc
and
jge
aad
cmovnp
lods
mov
pop
xchg
mov
push
pop
scas
test
iret
fistl
mov
loope
xchg
rclb
inc
in
mov
icebp
leave
in
add
push
lds
cmpsl
jp
cmp
push
daa
jecxz
mov
cld
out
inc
or
inc
in
fnstsw
mov
or
cmp
stc
shrb
lods
xchg
add
xchg
sarl
push
mov
mov
mov
cmc
js
add
dec
sbb
cmc
clc
pop
add
cld
lds
add
xor
pop
ljmp
mov
mov
shrb
and
daa
insb
dec
cli
cmp
call
mov
pop
fdivs
or
jmp
or
in
imul
pop
out
jg
out
sbb
adc
and
cli
pop
mov
push
aam
mov
or
cli
call
out
mov
pop
jl
jl
jge
bound
xor
xchg
push
ss
sub
in
movsl
imul
inc
lret
pop
mov
std
ret
sbb
jle
ret
orb
inc
adc
mov
cmc
loopne
inc
das
add
fwait
ret
pop
push
movb
cmp
mov
mov
inc
movsb
loopne,pn
cmp
mov
bound
pusha
cltd
inc
mov
pop
loope
out
repz
inc
adc
dec
inc
jo
popa
sbb
push
mov
mov
cli
aad
sbb
shll
jo
lahf
std
mov
sub
fstl
gs
push
rclb
sbb
cmp
push
popa
mov
sti
or
cmpsl
dec
mov
push
xlat
push
mov
js
mov
jle,pn
add
push
cmpsl
nop
mov
mov
sbb
sub
outsb
cld
adc
pop
sub
jge
mov
jns
out
pop
cmp
and
jae
lods
dec
in
aad
shrb
ljmp
in
lret
cmp
nop
lock
xor
out
cltd
lcall
add
loopne
scas
mov
mov
xchg
mov
fnstcw
lods
jb
inc
loop
pop
iret
push
inc
lret
jge
and
insl
icebp
fidivs
mov
pop
int
das
into
out
fisttpl
ret
xor
inc
push
insl
out
sahf
fistpl
or
into
setnp
jmp
push
insl
add
pop
fisttps
push
push
in
dec
dec
paddusb
pop
int
jmp
add
cmpsl
mov
xor
jbe
or
pusha
cmp
lock
mov
int
sbb
pop
or
mov
push
loop
sbb
stos
popa
pop
push
insl
inc
aas
sub
inc
loope
add
xchg
lods
push
shr
mov
sub
xchg
fwait
cmp
std
push
sub
push
mov
jns
test
imul
shll
adcl
mov
dec
ja
jp
xor
idivb
xor
pop
test
push
xchg
cmpsb
push
fldcw
push
js
push
jae
je
lret
jle
pop
fimuls
pop
jge
loop
push
push
inc
mov
into
fs
cmc
jns,pn
xchg
in
push
inc
cwtl
cmpsl
jnp
jl
inc
xor
xchg
dec
inc
mov
out
mov
cmpsl
loope
mov
test
pop
mov
jne
add
or
mov
xchg
push
cmpsb
shld
mov
cltd
testb
ficomps
shlb
xor
jns
jno
jmp
push
jne
ljmp
sbb
jp
pop
mov
icebp
mov
inc
aad
mov
xlat
sbb
sub
aaa
and
or
pop
mov
ja
sarb
mov
lock
adcb
mov
sbb
mov
lods
mov
jns
xor
popa
out
dec
adc
sbb
repz
orb
add
dec
and
lea
adc
loope
out
sahf
pop
inc
test
pop
xchg
sub
or
dec
and
mov
out
test
mov
sbb
and
jno
pop
test
lds
stos
test
test
push
xorl
test
pop
lret
mov
cmc
jb
xor
jne
mov
pop
xor
and
inc
and
cwtl
cmp
ljmp
mov
push
in
in
push
xchg
mov
mov
enter
test
sbb
dec
mov
sbb
mov
pop
aam
rcrb
sbb
xor
ja
cmc
mov
xchg
jge
leave
daa
and
lret
std
sub
push
leave
pop
cs
mov
in
aad
rclb
movsl
in
divb
movl
cmpsl
inc
js
and
and
cmp
and
add
mov
mull
sub
sbb
rcrb
mov
cltd
sub
scas
sub
cli
in
out
nop
or
mov
mov
pop
sti
aad
add
xchg
mov
xor
sbb
fistpl
ds
iret
add
fcomip
sub
push
into
dec
in
adc
add
das
cmpsb
sub
call
clc
add
rolb
mov
mov
fs
ljmp
mov
pusha
jl
aaa
xor
cmp
sbb
mov
jmp
je
push
sbb
ret
shr
sbb
cmp
add
push
mov
aad
xchg
lahf
pushl
pop
int
mov
lods
std
and
cltd
adc
cmpsl
mov
dec
xor
or
into
int
lret
orb
imull
fnstsw
fistl
push
dec
shl
ja
imul
data16
xor
jnp
or
jns
repnz
sbb
fnsave
insb
mov
pop
int
inc
lods
mov
sbb
adc
xchg
xorb
sub
mov
arpl
sbb
test
int3
adc
out
dec
pop
cmp
jae
xor
fwait
push
test
xchg
add
inc
xor
xchg
xchg
adc
fyl2x
aam
sbb
add
adc
fdivs
rol
leave
sub
out
orb
int3
or
addr16
incl
or
xchg
xor
and
cmp
shrb
xchg
xchg
cs
xchg
mov
mov
addb
xchg
mov
cmp
cmp
fmuls
addl
or
lds
bound
push
scas
mov
push
inc
push
cli
jmp
dec
enter
pop
std
mov
stc
stos
lea
pusha
incl
shrl
xor
xchg
pop
cmp
repnz
testl
les
fiaddl
ss
xchg
es
push
mov
cmp
pop
or
cld
lret
pop
cmpsb
pushf
loopne
push
jns
test
cmp
inc
and
adc
fisttps
sub
repnz
add
roll
xchg
dec
addr16
or
adc
pop
mov
push
xchg
push
popa
jns
cmp
jg
rolb
pop
out
pop
inc
push
cmp
pop
and
dec
int3
xchg
sub
adc
jg
test
mov
inc
scas
ficomps
mov
stc
pop
clc
in
jo
or
popa
push
dec
push
fadd
jno
mov
cltd
pop
int
mov
jmp
or
inc
std
dec
das
lahf
fnsave
lods
sbb
and
add
rcl
inc
lock
pop
sub
jg
into
insb
iret
std
iret
out
fsubrs
aad
push
mov
ficoms
mov
inc
inc
lret
ja
sbb
mov
mov
js
mov
push
and
repz
subl
and
and
sti
stc
dec
add
aaa
or
pop
or
jle
test
movsl
jns
sbb
movups
inc
push
pop
adc
pop
jb
lcall
jmp
xor
sub
sbb
pop
insb
inc
dec
sbb
jl
cmc
dec
add
je
dec
mov
insb
adc
in
imulb
pop
and
sub
dec
aaa
sub
push
fdivrp
mov
aas
xchg
and
jae
add
push
es
cmp
lods
pop
fbstp
inc
add
push
fnstcw
out
push
push
cmc
inc
mov
scas
jmp
test
pop
push
sub
cwtl
das
sub
insb
ficoms
pop
subb
movsl
psadbw
lahf
add
sbb
mov
out
sub
push
inc
dec
mov
xchg
jns
aam
push
dec
xchg
mov
es
out
inc
lods
push
sub
add
push
pusha
negl
sbb
xor
jecxz
movsl
adc
fldl
out
add
dec
inc
imul
xchg
xor
mov
push
cmp
call
cmp
push
popf
sbb
push
dec
loope
jg
xchg
js
jnp
add
mov
jno
in
sbb
lret
cmp
adc
add
mov
jnp
mov
push
repnz
ljmp
and
xchg
lahf
popf
mov
aam
xor
push
inc
call
fldln2
rol
icebp
pop
inc
jno
mov
add
shl
leave
mov
cmp
in
ss
aad
or
xor
popa
xchg
mov
cmpl
es
mov
mov
out
stc
xor
pop
out
xor
mov
push
mov
sbb
cmp
mov
and
jb
lds
addr16
xchg
std
xchg
sub
dec
loope
popf
fsubrs
inc
js
cmp
sbbl
nop
repnz
gs
adc
cmpb
xchg
cs
cmp
cwtl
rolb
xchg
lods
das
sub
mov
fadds
test
mov
cmpsl
iret
in
fcomi
cmpsb
pop
loop
jo
cli
into
fs
outsb
in
lea
mov
and
mov
push
xor
sub
mov
mov
out
test
in
es
fsubrl
push
nop
out
movsl
inc
cld
inc
cmc
pop
cltd
pop
lret
rolb
xchg
sub
xor
mov
orb
lea
jns
pop
fcoml
imul
mov
iret
push
mov
cltd
jb
pop
or
or
repnz
lock
push
sub
cmp
pop
outsb
mov
cli
aas
sbb
ret
add
js
sub
lods
lret
xor
push
jp
mov
sarb
popa
inc
fs
mov
xor
cmc
push
aam
fsubs
mov
sub
mov
mov
sub
mov
lea
mov
inc
jne
ret
loope
shlb
add
ret
adc
xor
cwtl
mov
std
cmpsl
xchg
jecxz
mov
mov
outsl
testl
push
inc
mov
outsl
adc
mov
iret
xor
and
xor
or
xor
lock
push
sbb
fcomip
pusha
ret
or
adc
cs
cmp
mov
or
mov
cmpsb
fdiv
out
popf
shl
xor
push
ss
lods
arpl
lock
cmpsb
sub
or
cmp
or
jg
loopne
mov
ja
xchg
lds
pop
sub
outsl
mov
test
das
sahf
cltd
push
sbb
lods
sbb
movsb
or
push
fwait
xchg
pop
in
sub
push
cmp
adc
jge
pop
shrd
ja
inc
ret
ss
fcom
imul
jmp
mov
sub
insb
mulb
popf
inc
shlb
xor
sub
clc
incl
push
push
lcall
dec
dec
cmp
orb
ret
mov
dec
cwtl
or
and
adc
test
sarl
sahf
cwtl
das
stos
shrl
fisubl
xlat
xchg
inc
lahf
iret
fsub
rclb
popa
pop
mov
inc
test
mov
and
xor
stos
xor
cmc
sbb
and
xchg
int3
cs
pushf
cmc
movsb
fistpll
or
push
mov
stos
lods
sti
imul
mov
test
subl
ja
mov
xlat
add
push
mov
jbe
imul
sub
xchg
scas
mov
jne
aad
lahf
jmp
sub
jp
jnp
mov
lcall
jle
aam
mov
fildl
das
adc
adc
push
mov
jg
rcll
test
inc
xor
pop
les
mov
mov
mov
mov
cmovge
inc
jbe
jle
or
push
popa
mov
mov
xchg
push
xor
lea
mov
dec
xor
jmp
and
mov
pop
insl
aad
mov
jnp
xlat
int
push
or
pop
mov
stc
xchg
push
xor
mov
push
dec
jns
xchg
cmc
and
push
lods
cmp
jge
aam
or
outsb
xchg
add
orl
xor
in
cwtl
cmp
cmp
popf
pop
bnd
jmp
pop
xor
pop
jecxz
inc
mov
pop
imul
push
jnp
ficoml
push
mov
stos
dec
sbb
add
cmpl
test
or
pop
xchg
loop
cmp
imul
movsb
sub
adc
jl
mov
pop
sahf
cli
add
push
mov
jns
push
dec
out
xchg
mov
cmp
mov
ret
mov
into
ficoml
inc
out
xchg
mov
daa
ja
ja
push
inc
in
sbb
loopne
cmpsb
fwait
push
nop
sti
stc
ret
out
add
fldt
pop
hlt
mov
push
jbe
aaa
icebp
out
outsl
sbb
xchg
icebp
xchg
cs
add
loopne
push
sub
xchg
stc
jbe
jle
popa
sbb
int3
sub
das
leave
xchg
xchg
jne
push
in
out
inc
inc
ds
dec
and
cmp
mulb
sahf
xchg
cwtl
push
mov
ss
ljmp
and
push
and
xor
lds
rcrl
sar
test
xchg
add
ja
call
jae
inc
xchg
aas
loope
xor
aam
das
call
cwtl
cmpsb
dec
out
shlb
leave
mov
xchg
adc
dec
sub
sbb
insl
mov
push
movsl
fldl
dec
imul
test
lea
fidivrs
sub
or
mov
push
push
add
mov
js
add
pop
aaa
mov
repnz
and
ljmp
subb
cltd
mov
lods
adc
jmp
rolb
ret
out
and
rcrl
loopne
lock
xchg
sub
out
out
or
out
mov
addr16
int
out
enter
test
xor
pop
inc
push
mov
xor
lret
stos
cltd
mov
cmp
sbb
dec
add
ja
aaa
lahf
dec
je
mov
inc
pop
push
loope
sub
sahf
push
movsb
or
cmpsl
fldt
jbe
ljmp
add
xor
out
into
lock
and
dec
gs
cmc
or
leave
mov
dec
les
sbb
fnstsw
push
arpl
icebp
mov
ljmp
mov
mov
xchg
sub
add
add
push
gs
jb
push
or
int3
xlat
jg
je
dec
sub
cld
jb
cmpsl
imul
mov
hlt
fwait
std
cld
aas
insl
pop
mov
xlat
inc
mov
ja
out
mov
cmpsb
dec
adc
inc
mov
rorb
xor
mov
sbb
cmp
bound
cmp
in
xchg
pop
test
xor
mov
aas
loopne
test
xchg
stc
sub
sbb
loop
pop
cltd
xchg
sbb
stc
imul
arpl
inc
add
ficompl
add
xchg
pop
stos
jl
or
cmp
jno
andl
xor
push
scas
cmp
ror
leave
cmp
shll
lods
mov
push
mov
shll
int3
mov
stos
dec
push
icebp
rorb
cmp
aaa
xchg
cmp
dec
sahf
cmp
add
xor
repz
lret
dec
add
cli
sub
mov
leave
fwait
out
inc
push
jo
push
xchg
xor
push
sub
stos
mov
sbb
sahf
pusha
add
fs
xchg
and
outsb
sbb
daa
inc
aas
nop
cmp
mov
lods
rcl
sahf
pop
and
mov
jecxz
or
leave
aaa
adc
dec
xor
clc
imul
scas
loope
or
dec
pushf
orl
hlt
mov
aaa
push
lret
lcall
stos
jmp
inc
inc
cwtl
cmp
shll
pop
adc
cmp
scas
cmpl
xchg
inc
lods
lret
jge
mov
in
add
add
inc
enter
pop
incl
dec
out
cmp
adc
inc
rorl
jno
out
leave
leave
inc
xlat
outsb
scas
test
jle
jne
test
testl
sahf
or
aas
dec
inc
cs
aam
in
ljmp
mov
rcl
scas
and
sti
testb
mulb
pop
test
test
ja
rol
pop
int
fists
sti
jle
int
push
dec
ds
jl
pop
fbld
or
gs
adc
xchg
mov
notb
push
push
push
adc
movsb
sub
inc
mov
cltd
jae
cld
fisubl
jmp
add
lods
cmp
xor
mov
and
mov
mov
or
rcrb
loop
mov
or
ret
decl
push
cwtl
mov
outsb
es
inc
fidivs
scas
sbb
ret
inc
mov
outsl
xor
jae
jp
xchg
in
or
test
cli
addr16
or
add
jecxz
ret
gs
nop
dec
lahf
mov
sub
xor
jno
sbb
inc
test
test
mov
jae
fldcw
divb
nop
int3
jecxz
int3
into
mov
inc
mov
cli
lds
jno
sbb
das
mov
mov
push
stos
inc
sub
mov
loope
inc
je
and
int
adc
rcll
add
shlb
call
fisttpll
popa
fdivrl
mov
xorl
lock
out
mov
fsts
mov
dec
ss
cmp
daa
add
cmpsl
add
xchg
inc
repz
test
adc
cwtl
imul
clc
pop
js
inc
insb
mov
clc
popa
enter
mov
stos
clc
dec
loope
push
add
push
lret
add
xchg
fidivrl
add
fbstp
mov
insb
rcr
mov
into
sub
jo
and
cmc
add
test
aas
out
scas
in
mov
leave
mov
xchg
aam
jp
add
or
pushf
xchg
xchg
dec
daa
sub
cs
push
and
push
insb
sbbl
les
xchg
rclb
mov
cmp
cmpsl
cmp
pushf
inc
lock
js
pop
xchg
enter
cmp
jo
cmc
xchg
cmp
xchg
bound
sbb
dec
mov
add
sti
out
jmp
es
inc
push
sti
xlat
or
rcr
or
loopne
push
jecxz
xlat
xchg
dec
xor
movsb
das
jbe
dec
rorl
ja
pop
push
test
aaa
std
xchg
sbb
leave
adc
dec
iret
adc
arpl
xor
push
orl
out
dec
loop
mov
cmpsl
push
aad
aam
mov
lods
jb
fisttps
sbb
mov
clc
bound
cwtl
cwtl
pop
mov
outsb
addb
and
in
leave
push
mov
jae
rcll
addb
push
faddl
enter
jo
test
pop
push
cmpsl
dec
es
cmpsl
and
and
push
cmpsb
ds
jae
lea
mov
add
mov
mov
leave
sbb
sub
jge
mov
mov
imul
insb
xchg
sbb
xchg
roll
inc
int3
sub
push
push
fcoml
popa
sahf
push
push
mov
rcrb
cmpsb
shrl
xlat
test
stos
sarb
dec
or
sub
lods
shll
loope
mov
mov
lret
repnz
push
cmpb
sbb
pop
imul
or
xchg
inc
and
cmpl
subb
sbb
cmp
xor
je
and
addr16
pop
popf
lods
out
arpl
scas
clc
pop
cmp
xchg
addr16
scas
xchg
cwtl
inc
push
xchg
ljmp
jbe
int3
cmp
mov
xchg
xchg
pushf
loop
and
cmp
sub
mov
mov
xchg
inc
jns
add
rcl
dec
add
icebp
mov
jb
mov
sub
dec
push
or
or
jp
cmp
push
pop
pop
mov
les
sbbb
fwait
movl
mov
je
cmpsl
cmp
push
sbb
xchg
sti
movsb
pop
cli
es
xor
adc
rclb
pop
loopne
jp
sarl
jge
icebp
loop
cwtl
pop
inc
pop
xchg
sub
movsb
mov
pop
insl
and
mov
mov
test
shrl
daa
or
iret
mov
mov
sub
je
push
inc
cmp
into
fdivr
and
cmp
fmull
dec
pop
ja
jo
pop
mov
jo
pusha
xchg
adc
jle
cwtl
cmp
mov
xor
shrb
popa
and
mov
sbb
cmpsb
push
jle
mov
add
jo
test
mov
stos
movsb
call
lods
sub
and
jno
outsl
dec
clc
sbb
test
sbb
int
sbb
xor
testl
add
out
push
cmpsl
pop
pushf
out
das
mov
ffree
add
xchg
mov
aad
push
pop
stos
push
imul
add
iret
js
pusha
mov
cmpsb
and
mov
ja
mov
scas
scas
popa
and
push
inc
cmp
in
orl
mov
leave
in
pushf
dec
aad
stos
imul
mull
callw
shll
cmp
pop
je
cld
add
testl
add
add
clc
pop
movsb
insb
add
mov
nop
jp
or
adc
dec
push
dec
and
fwait
in
jns
push
je
ret
sbb
xchg
mov
aad
xchg
inc
cmp
mov
mov
std
cli
mov
test
xchg
and
mov
pop
mov
xchg
sbb
add
pop
daa
lahf
cmp
aas
in
cmp
scas
ja
mov
test
and
je
mov
push
popa
inc
inc
jecxz
leave
xor
jl
fucom
add
jns
ror
repz
jo
ret
inc
jecxz
adc
mov
pop
push
call
in
cmpsl
lock
jle
shrl
fxch
pop
pop
or
clc
scas
cli
push
mov
sub
pop
xor
adc
addl
mov
push
popa
lahf
pusha
cmpb
mov
jg
lods
scas
mov
setb
pusha
jecxz
dec
pop
call
in
stos
insb
cmp
sub
pop
cltd
push
sub
dec
jno
cli
inc
in
xchg
popa
dec
in
add
jae
lcall
insl
mov
jb
push
fucom
rorb
fidivs
xchg
and
add
mov
ror
sub
xor
sub
out
les
dec
pop
ret
fld
lods
cmp
jb
mov
cmpsl
sbb
ljmp
insl
add
imul
add
ljmp
adc
out
xchg
adc
jno
jb
adc
push
mov
idivb
fistpll
lods
test
jle
test
aas
fisttpll
pusha
pushf
pop
loope
pushl
sbb
jmp
cmpsb
je
idivl
mov
mull
or
outsb
xchg
jae
cs
mov
popf
sub
adcb
jne
jp
ljmp
xor
push
mov
into
sub
push
movb
dec
repz
out
push
pushf
cltd
or
adc
fcoms
je
fdivl
loope
mov
fildll
xor
imul
lret
sub
mov
fisttpl
xchg
testb
or
mov
icebp
bound
lret
add
push
dec
out
mov
mov
mov
outsb
stc
out
andl
outsb
fimull
xchg
mov
int
popa
out
or
cmp
outsl
dec
xchg
sub
rcl
push
adc
and
adc
pop
jns
cmc
lods
outsb
or
test
jae
sahf
push
pop
insl
mov
mov
mov
lock
in
negb
test
jg
pop
and
aas
mov
add
insl
mov
cmp
movsb
push
jmp
mov
mov
sbb
dec
pop
push
aam
push
inc
addl
je
insl
xor
data16
sbb
pop
or
loope
nop
test
iret
insb
mov
ja
call
mov
push
popf
push
sti
cwtl
jl
aad
mov
mov
mov
fldl
pop
icebp
pusha
pushf
cmp
pop
sti
inc
dec
pop
loope
sbb
pop
mov
repz
bound
xchg
jne
pop
loope
push
scas
xor
test
mov
fldcw
inc
pop
cmp
mov
lahf
lods
ficompl
pop
lock
lret
stc
sbb
pop
shl
lock
add
mov
pop
push
mov
fdivrp
enter
inc
xchg
mov
ja
pop
xchg
imul
dec
test
aas
mov
mov
jne
loope
jnp
pop
push
xchg
rcr
sti
icebp
jmp
or
and
shlb
sti
jnp
sbb
mov
xor
cld
icebp
add
stos
push
test
mov
iret
and
int
ficompl
dec
jge
push
nop
leave
xchg
add
pushf
pop
xchg
ret
shrl
lods
ja
dec
or
icebp
addr16
inc
xchg
js
lds
outsl
jnp
lret
int3
adcb
pop
sarl
dec
cltd
or
imul
mov
mov
and
pop
stos
or
mov
sahf
jp
adc
cmc
aaa
jle
test
in
and
test
xor
mov
mov
cmp
inc
xchg
ret
and
and
pop
inc
or
xor
sbb
and
mov
sub
int
jp
lods
sbb
lods
cmp
int3
out
dec
push
int3
push
hlt
jb
std
addr16
xor
xchg
in
das
xor
outsb
pop
or
jg
xchg
xorb
mov
cmp
push
jb
push
sub
mov
cmp
dec
inc
inc
add
sub
test
popf
inc
in
frstpm(287
inc
aaa
movsl
xchg
dec
out
push
push
movsl
out
fdecstp
mov
jne
dec
jb
subl
and
mov
pop
add
adc
popf
mov
andl
sti
push
or
out
insl
jnp,pn
xchg
mov
jl
mov
std
jnp
call
stos
or
jmp
jle
xchg
data16
adc
cmp
adc
mov
or
outsb
je
and
ret
outsl
leave
out
popa
movsb
mov
pop
mov
test
ljmp
pop
cmp
pushf
jne
mov
jge
and
or
int
in
movsl
jecxz
stos
hlt
jmp
inc
cmp
pusha
jmp
sub
adcb
cmp
mov
xchg
mov
jle
out
xchg
out
sbb
dec
jl
ja
xor
test
in
stos
xchg
add
mov
xor
push
ds
addr16
fnstsw
arpl
fs
push
mov
loope
xorl
mov
mov
mov
aad
dec
sti
push
add
mov
lret
sbb
and
sub
dec
push
gs
mov
iret
sbb
das
dec
rorb
pusha
adc
push
nop
aad
lea
rcrl
ljmp
jae
movsl
jne
and
xchg
shll
or
in
rcrl
xchg
mov
mov
je
inc
lcall
mov
add
ret
pop
jmp
out
mov
ljmp
push
mov
ja
cld
rcrl
or
add
push
add
aas
mov
pop
repnz
stos
pushl
jg
adc
movsl
insb
pop
mov
mov
insl
adc
inc
loopne
jecxz
cmp
je
loop
lcall
jae
cmp
ja
stos
mov
test
inc
or
dec
hlt
inc
mov
adc
inc
lods
push
sahf
fstpl
hlt
out
ret
outsb
std
mov
ret
jle
sarl
idivb
xchg
mov
add
mov
sbb
out
sub
or
mov
mov
jg
ss
arpl
imul
pop
jb,pt
pop
jge
loope
std
aas
pusha
cmp
lahf
dec
test
das
mov
test
imul
in
mov
or
sbb
arpl
mov
sub
test
ficompl
imul
incl
inc
pop
sbb
ja
pop
stos
dec
push
dec
xor
sti
popf
add
ja
fcoms
push
or
adc
xchg
call
lret
test
mov
outsb
mov
xchg
gs
cwtl
jnp
push
lret
xchg
push
jmp
fildl
xlat
iret
pop
sbb
mov
ljmp
mov
negb
mov
inc
add
or
mov
add
clc
jo
loopne
jg
daa
add
pop
loop
adc
sti
into
fdivs
push
aam
loop
gs
rorl
imul
test
in
inc
sahf
xlat
cmp
jno
xor
push
mov
push
push
into
pop
mov
lea
cmp
into
dec
mov
int
pop
mov
in
loope
push
or
rcrl
lea
sbb
push
lea
mov
xor
ret
or
repnz
shlb
mov
shl
sbb
mov
hlt
jns
repnz
jg
bound
dec
inc
pusha
scas
xchg
pop
cmp
xlat
std
sahf
test
and
int3
pop
popf
enter
iret
js
gs
out
jmp
pop
mov
add
test
xchg
jge
icebp
xor
inc
aaa
dec
sub
jmp
das
in
jbe
scas
dec
sub
daa
mov
popf
push
xlat
dec
xchg
push
mov
push
cmp
push
pusha
lahf
test
dec
daa
lods
pop
jne
mov
jb
jp
adc
pop
push
out
out
je
fcoms
inc
xor
jecxz
xor
sbbb
cmp
imul
scas
and
jno
pop
pop
push
nop
add
push
cwtl
sbb
inc
data16
lods
xor
jnp
imulb
sub
cmp
fucomip
jb
dec
or
sbb
fstpt
and
shrb
push
pop
in
repnz
jmp
test
ja
iret
pop
lods
bound
out
bound
loope
mov
cs
and
or
lods
xchg
jnp
orl
ljmp
lret
push
gs
pop
cmp
jl
jp
std
dec
xchg
ss
inc
jecxz
push
sub
pop
jns
xor
jp
ds
fistpll
testb
test
dec
stc
push
pusha
repnz
lret
cld
add
push
pop
pop
push
popa
cmpl
dec
adc
imul
mov
nop
inc
cltd
pop
cmp
xor
push
pop
pop
call
nop
mov
mov
xchg
test
mov
mov
std
and
mov
lcall
and
lret
aas
insb
sti
dec
mov
dec
imul
mov
jp
push
adc
popf
push
dec
adc
xor
popa
dec
ss
push
xchg
popf
ds
xchg
sub
hlt
lds
out
addb
push
je
cmc
dec
std
xchg
xchg
ljmp
push
cli
pusha
xor
cli
cmpb
es
hlt
xlat
push
inc
add
fsubrl
ljmp
call
dec
ret
cmp
out
jp
inc
jo
xor
push
pop
sti
and
push
lods
inc
in
out
push
sti
xchg
xchg
lock
push
dec
fldenv
mov
ljmp
stos
push
ss
mov
add
add
jmp
addr16
inc
cltd
inc
idivb
popa
or
shl
pusha
pop
sbb
push
test
or
xchg
inc
ror
dec
xchg
adc
jecxz
mov
ljmp
in
aad
andl
and
popf
int
addb
sahf
inc
test
cltd
cmpsb
or
addr16
out
loope
sbb
fldenv
out
int
adc
pop
fldt
or
lret
or
push
or
xor
sub
sarl
xor
popa
and
jmp
rol
jbe
sub
out
mov
cmp
push
cld
outsb
rcll
dec
pushf
jb
movsb
cld
adc
cmc
jge
sub
xchg
fisttpl
adc
sti
hlt
test
dec
mov
out
mov
pop
cld
jmp
ret
inc
test
or
test
out
cld
out
test
sub
and
fs
dec
and
test
es
lea
inc
je
loope
add
cli
clc
xchg
out
scas
and
cmc
fucomi
cmp
test
mov
scas
push
nop
mov
cld
gs
dec
hlt
lods
xlat
pop
jo
stc
mov
int
add
xchg
les
ljmp
adc
push
dec
ljmp
cmp
shll
xchg
aad
mov
repz
jbe
mov
pop
sub
mov
rcr
cmp
xchg
je
jno
dec
je
xchg
sub
mov
lahf
in
movsl
mov
loop
bound
loopne
and
xor
call
pop
icebp
mov
cli
and
sbb
out
xchg
sub
jbe
rcrb
add
sub
cld
int
or
sti
mov
xor
xor
push
das
xchg
js
push
mull
xor
test
dec
and
or
int
push
jl
pop
sahf
push
out
cmp
loop
outsb
lret
incb
pop
xor
cmc
mov
pop
push
add
dec
rcr
lret
stos
pop
inc
loop
jecxz
add
add
loopne
push
mov
nop
test
mov
or
ja
jns
xchg
jae
nop
push
in
sbb
out
push
loop
cmp
mov
inc
or
aad
into
mov
inc
test
add
mov
dec
outsl
cmpsb
lahf
fisubl
cmp
xor
add
cltd
aad
fs
les
into
lea
xor
xor
mov
cmp
mov
cmp
hlt
and
mov
sbb
and
push
pushf
pop
inc
sbb
test
stc
and
adc
and
cmp
sub
sbb
pop
add
cmp
movsl
insb
out
cld
or
add
add
add
jnp
cwtl
inc
cmp
aad
daa
xor
sbb
lret
das
dec
adc
add
or
fbld
loop
test
incl
mov
xchg
dec
out
stos
ja
fs
adc
mov
add
jno
jnp
xchg
js
in
ja
aad
mov
jecxz
sbb
push
es
mov
add
fcmovnu
or
repz
aad
test
pop
addr16
rol
dec
and
das
jnp
repz
mov
sbb
int
jno
adcb
hlt
jge
and
enter
int
adc
stos
dec
cmp
call
imul
mov
sub
cmpl
mov
add
jb
mov
aaa
add
test
aas
pusha
scas
mov
mov
leave
add
in
or
stos
or
xor
aam
jge
sbb
xchg
adc
or
push
sbb
imul
jns
popf
test
sbb
js
mov
mov
icebp
lahf
dec
ret
pop
xchg
mov
pop
dec
loope
pop
scas
sbb
xor
test
shlb
xchg
inc
dec
in
sub
xor
fsub
stos
mov
cmp
dec
xor
fstl
xchg
aam
sub
push
popa
mov
xor
xchg
sbb
addl
sbb
es
lcall
cwtl
xor
sub
pop
jb
iret
js
inc
imul
ret
and
xchg
rcll
mov
into
cmp
inc
adc
rcrb
lods
repnz
in
jmp
test
jmp
movsb
arpl
call
pop
dec
popf
inc
test
jg
fdivrs
mov
cltd
mov
movsb
sub
and
aam
push
cltd
out
mov
in
mov
bound
into
jae
fcoml
test
fsubrl
jg
cltd
mov
cmp
or
jp
inc
jbe
nop
cli
in
dec
mov
ret
xchg
mov
dec
sub
mov
imul
rcrb
ret
daa
cwtl
pusha
lds
ljmp
mov
xor
jo
dec
xchg
movsb
xor
bound
mov
test
cmpsb
ret
imul
inc
cwtl
aaa
stos
pop
popa
push
mov
mov
in
or
sub
test
andl
add
mov
xor
cmp
sbb
add
pushf
in
loopne
sub
mov
incb
into
xchg
push
subb
pop
out
call
xor
push
sbb
mov
push
mov
cltd
sub
dec
cmpsb
and
dec
jae
pop
add
insb
test
mov
repz
push
adc
jge
rorl
mov
test
xchg
aad
dec
aam
mov
mov
jmp
fisubrl
cmp
leave
push
xor
popa
cmp
enter
xorl
es
loopne
rolb
shrl
repz
jae
lcall
dec
jb
jp
sub
fsubrl
mov
mov
jmp
sarb
and
inc
push
pop
inc
push
inc
ret
jecxz
fs
and
fnstcw
jno
pop
ret
stos
shlb
dec
fwait
fwait
enter
clc
std
flds
inc
fcmovne
push
xchg
imul
jno
xchg
pop
aaa
dec
pop
clc
cmp
pop
dec
mov
or
lret
popf
jmp
ret
inc
pop
sbb
je
jmp
sbb
add
or
mov
dec
add
and
mov
mov
sub
cmp
or
jb
cli
js
mul
add
hlt
fisubs
lods
dec
push
test
push
xchg
icebp
addr16
lret
xor
test
out
das
loope
nop
push
fisttpll
mov
addr16
cmp
adc
lds
xor
cltd
sbb
ds
mov
mov
pusha
nop
icebp
outsl
addb
fcmovnbe
imul
mov
lea
ja
ret
xor
je
in
mov
jbe
out
jecxz
test
and
jl
dec
bound
mov
cltd
nop
or
adc
dec
fwait
ds
mov
sub
mov
push
jp
jnp,pt
xor
ss
adc
jne
mov
pusha
xor
lods
cmp
test
cmpsb
xor
aad
leave
stc
mov
sbb
mov
push
cmp
cs
dec
adc
dec
or
and
int3
out
outsl
and
das
mov
loopne
repz
lahf
dec
xchg
push
loope
loopne
adc
push
mov
sub
rcr
pop
or
mov
add
insb
in
dec
addr16
inc
mov
or
std
nop
mov
cltd
pop
mov
xor
rcl
clc
repz
ljmp
pop
mov
push
lcall
lods
mov
sbb
sub
mov
lret
imul
scas
insl
dec
dec
and
add
loop
sub
add
pop
push
popf
in
fildl
inc
insb
pop
sub
or
inc
mov
and
sbb
fildll
mov
call
mov
outsl
push
imul
lahf
mov
ret
ja
pusha
stos
mov
shr
movsb
jl
xchg
sub
adc
adc
ret
xchg
das
mov
das
cmp
inc
xchg
cmovns
push
xor
mov
mov
and
cmp
xor
dec
xor
cwtl
add
test
mov
mov
jb
jns
in
xchg
je
cmp
xchg
out
dec
inc
or
mov
and
and
mov
dec
dec
push
pop
arpl
pop
lds
fstl
sub
adc
ljmp
cs
mov
addl
xor
lahf
out
add
lods
pop
push
mov
sbb
sbb
lods
jecxz
xchg
iret
loopne
jae
cwtl
dec
jbe
cmp
jge
pop
mov
cltd
add
mov
sbb
jae
into
lds
adc
sbb
push
bnd
repnz
xlat
and
decl
ljmp
ljmp
cmc
xchg
loop
rdtsc
add
aaa
mov
lcall
gs
test
xor
shlb
jl
dec
and
clc
hlt
pop
mov
push
cmpb
push
stos
jo
push
into
daa
movsl
xchg
inc
pop
int3
sub
dec
or
mov
dec
push
movsb
mov
cltd
and
iret
out
aas
sbb
push
ds
cli
dec
xor
xchg
cmpsb
mov
cmpsb
cld
lds
fmuls
sbb
adc
movsb
cmp
lea
push
insl
xchg
mov
addr16
cmp
lret
imul
popf
pop
inc
mov
mov
sbb
inc
call
lcall
jmp
push
test
cmp
xchg
adc
add
movsl
and
mov
out
inc
mov
mov
ret
leave
push
lods
orl
outsl
push
mov
iret
jp
push
test
push
repz
xor
or
add
inc
jmp
jae
into
cmp
pop
jle
sub
sub
imulb
popf
dec
inc
inc
psrlw
aam
mov
sub
mov
push
pop
xor
add
into
addb
xchg
inc
push
xchg
push
clc
incl
mov
fildl
lods
into
mov
add
les
mov
mov
push
enter
mov
push
popf
xor
inc
xchg
and
adc
scas
sarl
cmp
mov
mov
fimuls
or
in
icebp
dec
mov
sub
insb
sub
in
adc
adc
xchg
cmp
inc
call
jo
ja
cltd
mov
push
or
xchg
jnp
in
stc
pop
into
jno
dec
pop
aas
cld
jmp
sub
cmc
rcrb
cwtl
cmpsb
data16
add
sti
inc
clc
stc
mov
loop
popf
hlt
mov
pop
aam
dec
clc
scas
cmpsb
sub
lods
rorl
mov
mov
adc
int3
dec
push
jle
ljmp
in
add
ljmp
fcomi
lds
jb
mov
push
jl
and
je
adc
mov
push
or
push
xchg
mov
jns
int3
ret
pushl
enter
jle
bound
cmp
mov
cwtl
or
inc
pusha
mov
ss
lret
test
ret
lds
rorb
les
das
aas
sahf
push
int
aaa
call
jp
rolb
jp
pop
dec
and
adc
es
enter
add
imul
scas
inc
cmp
repz
shl
inc
imul
ja
cwtl
add
in
sahf
push
push
xor
push
jae
mov
mov
sub
repz
enter
jle
les
imul
ss
inc
ds
push
sbb
adc
pusha
fidivrl
sbb
pop
mov
icebp
mov
cltd
enter
imul
andl
enter
cmp
mov
cmc
mov
fcmove
dec
and
outsl
xchg
insb
repz
movsb
xor
stc
stc
mov
fistps
arpl
shrl
inc
roll
push
cmpsb
mov
popa
loopne
jp
lods
sbb
and
mov
jp
popl
ret
movsb
cmp
call
mov
int
adc
push
lea
movsb
leave
sub
xchg
push
cld
nop
push
stos
xchg
xchg
ds
xchg
sub
mov
sti
nop
mov
mov
dec
pop
inc
xor
iret
inc
mov
sub
sub
stos
dec
cmpsb
idivl
sub
test
dec
push
xchg
adc
mov
cmp
jp
mov
mov
mov
shlb
out
cmp
push
dec
cli
inc
aas
in
xor
incb
ret
add
mov
jbe
shrl
jo
jl
jmp
pop
jb
cli
notb
mov
das
jge
es
lock
loop
pop
lds
add
mov
pushf
sti
xor
icebp
aas
sbb
jmp
dec
aas
ljmp
out
leave
mov
mov
mov
cmpsl
outsb
mov
loop
int3
or
mov
mov
cmp
xchg
xchg
imul
sub
lock
shrb
push
outsb
xchg
pop
subl
rclb
mov
cmc
xchg
adc
popf
das
pop
mov
push
ror
jmp
mov
inc
adc
inc
pop
popa
push
shrl
jp
cmpsl
mov
jle
dec
push
rcl
ret
xchg
sbb
out
test
scas
daa
lcall
xor
jne
pop
mov
scas
ret
pop
loopne
jle
rep
fsubrs
lcall
and
aad
clc
or
cmp
mov
mov
pop
cmc
mov
aam
sahf
jl
mov
call
or
dec
les
push
and
and
out
ljmp
jle
or
repnz
stos
cmp
push
mov
arpl
lahf
ljmp
repnz
test
push
inc
testl
push
add
mov
lret
mov
stc
lret
lods
adc
rclb
mov
lds
psrad
mov
fldcw
repnz
push
ds
mov
mov
mov
add
nop
push
out
test
inc
aam
add
imulb
xorl
pop
xor
stc
and
mov
lea
cmp
clc
cmpl
pop
lret
icebp
mov
out
xor
cld
mov
fdiv
xchg
repz
push
into
cmpsb
mov
inc
push
adcl
stc
xorb
sub
sub
xor
and
es
xchg
mov
adc
sbb
call
call
pop
push
subl
jl
lcall
mov
push
adc
lahf
nop
les
push
pusha
pop
sub
cmpsl
ret
cmp
jge
jne
adc
cmpb
js
xor
les
sub
xchg
test
adc
push
lret
push
inc
push
popf
pusha
mov
dec
enter
inc
add
lods
lahf
sbb
jo
fadds
jno
dec
out
add
add
add
jecxz
mov
imul
jne
fwait
stos
mov
inc
pusha
shll
loop
xor
sub
sbb
leave
sub
idivl
and
mov
imul
adc
pop
fcoml
popf
loope
out
push
mov
popf
mov
push
mov
mov
mov
loope
xchg
jnp
pop
sub
test
push
cmc
add
dec
div
add
lahf
jns
inc
pop
rcr
pusha
in
rcl
xchg
sub
icebp
pop
xchg
mov
add
mov
les
arpl
sub
sahf
mov
dec
cmp
lea
add
jmp
add
cmp
sbb
lods
push
enter
cwtl
pop
and
iret
mov
dec
mov
and
adc
stos
fisubs
popa
sbb
mov
pop
int
bound
mov
inc
jmp
xor
cmp
frstor
adc
mov
loope
inc
sbb
xor
or
fisttpl
repnz
and
xchg
sub
icebp
push
inc
bound
cwtl
pop
adc
sbb
jge
les
lret
rorl
gs
adc
xchg
push
and
dec
repnz
sarb
out
jbe
mov
stc
dec
or
add
xchg
push
loope
dec
jns
sti
scas
xchg
xlat
jg
andb
jmp
xchg
sar
sbb
mov
pusha
pshufw
inc
dec
or
std
lcall
cwtl
inc
cli
sbb
dec
rcr
leave
and
sbbl
scas
gs
cs
fnstenv
xorb
mov
fwait
cmp
mov
dec
push
daa
inc
sti
out
fsubs
sarl
shlb
fs
pop
adc
adc
add
cmc
xor
sbb
sbb
mov
clc
add
lret
test
xchg
popl
pop
sub
sti
and
cmpsl
pop
test
mov
inc
cmp
xlat
mov
pushf
pop
ja
cmpsb
mov
enter
repnz
and
ffree
cwtl
test
popf
jne
out
xlat
dec
insl
push
cmp
sbb
dec
aam
fxam
scas
add
ljmp
aam
xchg
add
xor
inc
addr16
sbb
mov
sbb
outsl
mov
aas
mov
data16
leave
and
es
lcall
jo
pop
mov
cld
test
xor
mov
mov
mov
xchg
jge
mov
or
hlt
cmp
push
push
or
xor
sub
js
lcall
loopne
dec
iret
out
mov
lahf
adc
dec
in
loopne
mov
lds
movsb
mov
push
xchg
js
bound
mov
sbb
in
pop
movsb
insl
daa
lds
fiadds
fs
dec
xchg
push
jecxz
xor
test
insb
outsb
incb
dec
inc
mov
out
pop
mov
sbb
clc
push
mov
les
and
push
adc
rcrb
or
cmpsb
or
ret
mov
mov
movsb
scas
mov
lods
sub
fsubrs
lcall
mov
lret
fistps
cwtl
add
lret
and
sub
sub
jnp
lds
mov
add
lret
and
sbbl
ja
adc
scas
fs
xlat
push
jge
mov
ret
in
movsl
aaa
into
inc
mov
mov
in
mov
sub
mov
arpl
push
dec
dec
fisttpll
mov
test
in
jge
sahf
jno
or
inc
or
fdivrl
push
or
adc
repz
sbb
xchg
pop
push
sub
clc
inc
adc
inc
lret
fabs
or
fists
add
dec
mov
mov
lods
mov
lock
pop
adc
aam
mov
or
nop
push
xchg
bound
lret
pushl
es
movsb
jnp
aad
inc
pop
and
mov
dec
das
dec
out
int
es
xlat
ret
mov
cmp
push
std
in
adc
fbstp
outsl
mov
push
int3
test
push
cmp
sub
push
aam
add
inc
addr16
xchg
push
std
and
xlat
mov
push
mov
fcmovnbe
in
es
mov
xchg
lods
sbb
dec
stc
or
fistps
out
sti
test
mov
mov
mov
and
dec
mov
mov
aas
xchg
push
mov
xor
out
jmp
and
fldt
jmp
movsl
orb
mov
cmpsb
frstor
gs
notb
push
shr
ss
xchg
je
nop
sub
mov
inc
or
nop
adc
jo
cmp
inc
jb
aad
ljmp
dec
and
lods
xchg
cmp
mov
leave
and
sub
leave
lods
cwtl
inc
and
jmp
es
fstpl
test
add
cltd
sbb
iret
loopne
mov
cli
xchg
push
or
in
jge
sbb
push
fldt
std
mov
out
shrl
mov
inc
mov
jo
mov
packuswb
xor
je
std
add
mov
sub
or
jecxz
lods
sbb
jle
aaa
dec
xchg
jge
inc
or
movsb
daa
push
aam
outsb
sahf
pop
arpl
sub
enter
stos
mov
shlb
push
sbb
mov
push
loope
mull
and
insl
fdivr
mov
xor
fidivrl
pop
inc
dec
outsl
pusha
inc
out
imul
clc
lret
fcomps
mov
or
movsb
hlt
mov
sub
shlb
cmp
iret
repnz
push
sahf
jnp
xor
cmp
ljmp
shlb
jne
jb
insl
scas
dec
aad
cwtd
imul
jno
dec
adc
dec
in
iret
ret
dec
xchg
ret
outsl
orb
fwait
mov
lret
bound
int
mov
mov
jbe
in
sbb
in
mov
sub
lahf
orb
stc
and
jmp
pop
adc
sub
mov
adc
cmp
shrl
pop
lret
push
in
xor
mov
mov
lret
int3
and
mov
pop
inc
std
std
xchg
dec
sub
cmpsl
mov
notb
jne
nop
mov
shll
ja
jno
ret
jns
push
scas
aad
scas
mov
out
xorb
pop
outsl
rorb
adc
jae
or
clc
stos
in
aaa
cltd
sub
arpl
fcmovb
xorl
inc
mov
and
push
pop
add
test
pop
cmp
icebp
cmc
in
repnz
in
in
jl
add
mov
jle
jmp
add
sub
outsl
rcll
sub
and
inc
dec
hlt
inc
jge
pushf
mov
push
jmp
lock
repnz
gs
movsb
xor
das
mov
mov
stos
xchg
mov
mov
xor
lret
mov
inc
in
imul
ss
xor
adc
popa
cmp
aaa
lods
out
xchg
or
mov
bound
fcom
or
sbb
imul
movsl
jo
jno
pop
adc
data16
jno
push
jns
xchg
or
push
insb
pop
leave
sbb
push
mov
push
out
subb
xor
ss
mov
daa
cmc
mov
into
push
dec
test
invd
sti
mov
jp
fcoml
xlat
pop
lret
and
stos
push
cmp
adc
and
sub
inc
icebp
call
xor
mov
cmp
in
cmc
arpl
xor
lret
je
lret
pop
ror
inc
push
movl
sti
or
jge
shll
push
pop
in
sbb
dec
push
daa
in
mov
ds
dec
sahf
dec
cltd
push
mov
arpl
cli
icebp
sbb
popf
ljmp
mov
push
test
cmp
sub
movsb
xor
jbe
add
pop
ja
inc
mov
jno
outsb
pop
pop
test
cmpsb
loope
xchg
test
clc
loope
pop
adc
push
adc
stos
js
mov
mov
jae
es
pop
push
outsl
mov
std
cli
dec
and
lret
jl
inc
cmp
gs
addr16
scas
dec
sarb
idivb
xchg
cmp
mov
jl
jle
sub
mov
add
scas
ffreep
add
js
mov
mov
scas
jmp
or
inc
sbb
or
negl
adc
addb
int3
outsl
inc
lret
sbb
or
testb
jg
xchg
je
xlat
pop
sub
and
adc
adc
push
in
dec
pop
sahf
xor
push
xchg
stc
mov
addr16
mov
jmp
cwtl
hlt
enter
lock
mov
push
mov
rclb
iret
into
movl
scas
arpl
hlt
lea
mov
aad
and
pop
xchg
inc
pop
pop
dec
sub
out
or
sbb
inc
leave
pop
mov
lcall
inc
lcall
cmp
popa
fisttpll
sub
popf
cmp
push
daa
out
leave
shlb
jb
stos
xor
push
sahf
adc
int3
add
inc
incb
mov
or
inc
adc
inc
lea
lds
pop
and
pusha
loope
adc
repz
movsl
ficoms
mov
lret
popa
les
ret
and
cmp
mov
cs
cmp
push
push
xlat
dec
add
dec
leave
mov
mov
xor
daa
sub
mov
jb
cmc
fidivrs
addr16
jge
xor
pop
mov
stos
sub
lret
repz
aam
and
pushf
lcall
or
xor
xchg
push
sti
xlat
call
inc
arpl
mov
dec
dec
push
cwtl
out
add
jle
push
in
push
push
lock
dec
fmull
aam
sbbl
inc
mov
inc
sbb
mov
push
insb
lret
pop
cwtl
cs
jne
jnp
mov
data16
mov
aaa
pop
push
outsb
dec
push
and
push
inc
aam
fildll
jb
leave
fldenv
xor
xchg
push
cmp
test
mov
fsubp
pop
mov
or
mov
xor
cli
repz
dec
ljmp
nop
cmp
adc
add
into
xchg
lcall
cli
jae
dec
jae
scas
insb
fcoms
ljmp
and
push
stos
adc
add
andnps
dec
mov
jns
xor
les
out
add
insl
imul
or
push
je
inc
rcl
xor
and
lcall
inc
std
gs
pop
sarb
cmp
shlb
in
pop
dec
mov
xchg
dec
mov
sbb
pushf
fidivs
scas
pusha
outsl
imul
adc
cli
inc
or
or
cmp
cmc
adc
int3
xchg
mov
pop
mov
adcl
imulb
adc
out
sahf
inc
mov
mov
test
sti
add
dec
inc
hlt
les
pop
inc
sub
es
loope
jp
adc
jecxz
pushf
movb
jae
sub
xor
xchg
jns
insl
add
mov
das
adc
jno
sahf
outsb
pop
aas
sbb
cwtl
in
lahf
dec
xchg
mov
jno
cmp
inc
into
int
rorb
xchg
popf
test
sbbl
pop
and
movsl
pop
imul
cmpsb
sub
les
incl
jne
jmp
jecxz
test
mov
gs
mulb
leave
jmp
push
dec
push
fiaddl
mov
add
push
out
lret
pop
stos
mov
xor
adc
sbb
push
cwtl
dec
subl
aaa
xchg
mov
nop
mov
lock
inc
gs
repz
mov
ret
mov
ss
xchg
gs
xor
inc
jae
xor
and
mov
and
mov
pushf
and
inc
xlat
sub
arpl
and
mov
aas
stos
inc
movb
addb
cltd
push
sub
xchg
sub
lcall
shrb
mov
nop
dec
sbb
xchg
cmp
push
push
jnp,pt
fidivs
xchg
and
insb
push
repnz
lret
out
jp
cmc
loope
les
ficoml
ljmp
fmul
xor
aaa
fiadds
cli
sub
gs
mov
cmp
fs
cmpl
gs
mov
std
mov
hlt
nop
scas
pop
adc
gs
int3
bts
arpl
push
mov
inc
xchg
push
xchg
push
pop
mov
cmp
aad
jnp
mov
cwtl
fisttpl
mov
mov
mov
arpl
imul
ja
movsl
lods
outsl
dec
sbb
add
and
inc
loop
mov
jne
fisubrs
or
push
inc
push
and
stc
jno
inc
pusha
or
andl
and
mov
sbb
xor
or
or
fnstenv
adcl
pop
in
mov
data16
sbb
pop
push
pop
mov
insl
and
or
cmpb
push
shl
mov
scas
add
cltd
xchg
ljmp
popa
mov
mov
leave
pusha
negb
jg
mov
addr16
adc
adc
sbb
insb
mull
fistpll
mov
loopne
call
iret
imul
stos
bound
sub
ficomps
jg
pop
or
xor
jmp
addr16
mov
rolb
sarb
mov
lret
cs
nop
ljmp
aas
add
mov
repnz
ss
les
sti
xor
jae
mov
pop
push
addr16
jnp
sbb
xchg
cmp
sub
fdivl
shrl
ret
xchg
dec
lret
xor
xor
jne
rcl
push
adc
mov
pop
ret
mov
popf
xor
cltd
loopne
push
aaa
xchg
push
or
sub
push
mov
cmp
call
add
movsb
in
iret
jns
inc
ret
and
pop
adc
out
ds
push
lret
push
dec
imul
ret
imul
cs
arpl
test
arpl
xchg
loope
int3
push
getsec
pop
test
imul
std
loope
iret
rorb
and
push
icebp
mov
or
loope
xchg
pop
scas
adc
jns
add
mov
int3
sbb
add
repnz
pop
mov
fsubs
sub
loopne
leave
sbb
inc
or
dec
inc
sbb
jle
and
mov
daa
dec
rorb
sbb
call
dec
push
xor
push
jbe
mov
out
pushf
movsl
and
stos
mov
push
jmp
xor
mov
add
mov
xor
pop
sub
pop
jl
mov
aaa
cmp
cmp
inc
out
hlt
cmp
pop
js
mov
add
stos
adc
das
sub
xor
xchg
shll
sbb
jl
xchg
iret
lcall
and
sub
xchg
adc
int
lds
mov
xorl
inc
sar
loope
cmpsl
in
push
int3
fists
gs
pop
dec
push
std
inc
aas
nop
pop
cmpl
jge
adc
test
in
sarb
pop
xchg
sbb
adc
mov
aaa
add
fbstp
dec
adcb
in
pop
jno
push
sbb
addb
adc
es
rol
xor
lret
test
popa
mov
xchg
jge
adc
jg
mov
sbb
jl
mov
insl
dec
mov
subl
notl
xor
icebp
jp
mov
pushf
mov
pop
sub
dec
jl
mov
jecxz
ja
mov
add
stos
lds
lods
and
xchg
ss
loopne
mov
hlt
ss
cmp
or
lock
jecxz
stos
pop
out
mov
jmp
mov
xchg
pop
mov
or
sub
adcb
push
mov
push
jbe
push
mov
push
or
sarl
and
xchg
xchg
mov
push
popf
adc
xchg
ja
xchg
fisubs
xor
nop
insl
mov
and
in
sub
inc
lea
dec
jbe
test
jmp
mov
cld
and
int3
mov
inc
jbe
pop
mov
cli
jg
jo
mov
stos
mov
movsb
fwait
std
inc
push
or
lcall
dec
movb
cmp
sbb
push
xchg
inc
out
sub
mov
sahf
jle
lcall
shll
std
add
enter
inc
pop
ret
cmpsb
pop
xchg
xchg
inc
or
mov
jg
jo
insl
sbb
or
lret
inc
pop
sub
xchg
test
jno
mov
lock
into
out
fwait
mov
jo
push
pop
push
outsl
aas
jne
push
push
ljmp
mov
repz
fidivl
lock
leave
mov
xchg
addl
aad
in
cmpsb
shr
rorb
test
mov
mov
and
lea
mov
push
cmp
stos
ret
push
xchg
cs
cmpl
stc
dec
aam
out
lcall
popa
stos
cmpsl
cmp
mov
es
movsb
adc
loope
mov
loopne
jbe
scas
pop
sub
flds
xor
lcall
jge
mov
xchg
jg
lret
stos
sbb
add
jb
or
int
jno
or
mov
pop
push
or
cs
xchg
jo
and
and
lret
xor
filds
push
test
mov
xor
std
les
int3
sbb
in
sub
mov
add
push
push
notl
add
fdivl
jmp
push
jnp
lahf
out
lret
mov
sahf
cwtl
or
sbb
pop
das
mov
test
es
xchg
imul
rcl
in
pop
mov
stos
ss
aam
and
bound
aas
addr16
jg
psrld
shll
out
stos
sbb
cmpsb
int3
stos
mov
fnstcw
lods
mov
nop
repz
bound
mov
cmpsb
cli
and
je
sub
or
mov
jecxz
and
out
or
jl
int3
add
mov
ds
in
mov
in
mov
xchg
xchg
push
jmp
push
push
push
add
divb
loope
andb
mov
add
lods
out
leave
lods
stos
or
cmpsb
mov
shrb
pop
add
pop
dec
and
stos
mov
sarl
test
push
xchg
cmp
insl
nop
push
insb
aam
js
pop
push
pop
push
adcb
clc
push
push
mov
shll
mov
sub
cmpsb
lds
outsb
jg
or
mov
adc
jno
sub
out
inc
cmp
sbb
xchg
add
add
add
ljmp
push
pop
cmc
outsb
push
sbb
fs
add
sub
lcall
dec
mov
loop
stc
cltd
in
push
nop
mov
sarl
shrb
pop
xchg
pop
nop
jge
mov
jo
inc
xchg
mov
rclb
sbb
bound
addl
jae
push
adc
ljmp
xchg
xor
inc
cmpl
add
cmp
mov
cmp
and
xor
dec
cli
rorl
mov
movsl
or
pop
lret
cmpl
add
mov
je
push
mov
fwait
subl
xchg
mov
imul
dec
arpl
sbb
and
add
mov
in
mov
jne
lock
in
pop
mov
mov
rolb
test
sbb
pop
fldt
inc
jmp
js
shl
rol
ja
ficoml
lods
mov
push
test
mov
out
lahf
fcompl
sub
les
ret
testb
inc
inc
dec
jo
push
xchg
call
mov
stos
repz
aad
rcrl
mov
xor
inc
leave
movsb
testb
movhps
mov
mov
and
cmp
decl
cmp
push
icebp
mov
lock
mov
dec
test
xor
in
test
shll
insb
js
jp
xchg
dec
lock
sbb
dec
int3
imul
adc
jns
ljmp
mov
cmp
imul
roll
push
inc
adc
pop
or
sub
bound
mov
sbb
mov
pop
daa
scas
sub
push
gs
add
pop
xchg
xchg
xor
jecxz
mov
xor
or
ja
cmp
or
push
dec
popa
xchg
xchg
jg
leave
test
sbb
sub
cs
push
icebp
dec
mov
ret
xchg
pop
les
cltd
mov
push
fwait
sub
jmp
jmp
pop
into
aam
sbb
dec
xchg
mov
sub
dec
xor
fisubs
inc
sub
inc
jb
xorb
lret
out
in
mov
sub
movsl
pop
jbe
cmc
sahf
jns
hlt
arpl
inc
push
mov
cld
sbb
mov
xor
out
push
pop
jno
cmp
test
push
mov
loope
in
xchg
shlb
adc
mov
push
shll
mov
les
stos
cmp
bound
inc
jmp
popf
imul
out
test
int3
stos
fcoms
arpl
or
mov
scas
jo
outsl
leave
leave
repz
dec
xchg
sub
push
lods
pop
ret
mov
adc
vpextrw
cli
cmp
mov
push
out
pop
mov
xor
jae
pop
xchg
pop
xchg
lret
mov
sarb
mov
mov
sbb
aam
popa
sub
cmc
sub
loope
mov
into
push
jnp
imul
mov
sbb
out
pop
int3
es
dec
dec
push
pushf
pop
dec
cmpsl
sub
pop
lods
lods
js
das
mov
rcrl
sbb
mov
insl
xchg
inc
andb
gs
jl
shrl
xor
xchg
xor
repz
das
inc
rolb
and
mov
and
lds
add
or
aas
inc
jo
mov
aad
push
adc
sbb
lret
add
stc
push
jle
inc
cmpsb
insb
xor
lea
into
jl
push
mov
cmp
mov
add
cmp
xchg
jecxz
dec
mov
jmp
dec
push
stos
jae
mov
pop
xchg
mov
xor
enter
and
xchg
cmp
out
aas
jmp
dec
cmc
mov
imul
jp
ret
pop
out
xchg
enter
rcll
lea
and
mov
ljmp
cmp
xchg
dec
or
fiaddl
orb
outsb
push
repnz
mov
sbb
rcll
xchg
icebp
movsb
test
popa
xchg
sub
sbb
push
cmc
je
fwait
mov
or
ret
mov
test
push
daa
aas
sahf
imul
sub
mov
adc
repnz
ret
ret
xchg
push
mov
jecxz
test
or
pop
scas
xor
in
addr16
je
sbb
adc
mov
loope
fistpll
movsb
ds
data16
adc
sbb
push
jo
jge
jmp
cmpsl
insb
aaa
jg
test
je
inc
inc
lcall
lods
cmp
test
mov
or
jl
sub
ficompl
lock
fbld
sbb
sbb
insb
loopne
loop
sarb
sbb
test
adc
aad
fsubrs
leave
xchg
jl
push
stos
ficoml
ss
in
repz
jbe
js
sbb
mov
fisttps
jmp
nop
inc
inc
push
ja
inc
xchg
out
adc
fwait
push
cltd
out
out
mov
jle
insb
lcall
hlt
test
sbb
ret
mov
dec
daa
arpl
mov
jne
fcmovb
incl
dec
test
int
inc
xchg
ds
je
xchg
pop
jae
repnz
jmp
pop
movsb
sbb
and
icebp
in
imul
mov
movb
loop
imul
ja
sbb
jecxz
inc
rcll
into
mov
xlat
daa
fists
dec
add
dec
ja
and
jno
mov
xchg
mov
pop
xor
insb
dec
jb
add
mov
clc
adc
stc
insb
xor
or
cmpl
push
fs
and
cmp
fisttpll
adc
mov
loope
xorl
gs
push
ljmp
pusha
ret
dec
in
aad
aas
je
xchg
add
or
je
add
push
movsb
pushl
imull
pushl
jmp
into
push
mov
fsubr
fwait
sbb
jbe
lea
mov
mov
sub
out
testl
cmc
rorl
mull
aaa
imul
dec
mov
sub
sbb
xchg
mov
push
rcr
movb
xor
in
dec
jne
loop
stos
scas
into
jmp
inc
inc
jmp
push
aam
jle
xlat
jae
mov
fldl
jmp
or
divl
xor
in
sar
xchg
mov
xchg
pop
insl
sub
pusha
out
pop
enter
cmp
push
add
inc
addr16
lret
fsubl
mov
sbb
test
or
sahf
js
loop
pop
push
int3
jno
push
sbb
or
fcmovne
in
jae
cmpsb
mov
clc
sbb
pop
leave
sahf
aas
cmpsl
sahf
outsb
add
mov
dec
cmc
test
cwtl
insl
inc
lea
lahf
jno
adc
push
jne
mov
mov
or
repnz
push
lods
push
mov
das
enter
aad
cmp
adcl
mov
scas
xor
mov
mov
inc
out
push
orl
or
xchg
xor
lea
adc
xlat
sub
and
adc
xorl
adc
rol
int
into
out
jno
jge,pt
add
mov
popf
fnstsw
cli
rolb
aad
scas
and
push
clc
out
popf
iret
push
les
aam
subb
fbld
adc
jp
in
jle
or
cmp
cmpb
icebp
mov
fmuls
pop
popa
fdivrl
ret
test
pop
pop
lret
push
loopne
xor
sub
sti
or
inc
push
das
mov
pop
out
dec
es
out
leave
or
fsubrl
dec
pop
sbb
dec
pop
in
xorl
lods
iret
cs
inc
sub
rcrb
into
iret
mov
pop
jecxz
cmpsb
mov
dec
inc
sbb
pop
mov
in
sbb
mov
mov
clc
xchg
ret
in
call
dec
aad
pop
jno
in
ret
sbb
imul
repnz
inc
pop
ds
mov
sbb
lret
movsb
inc
movsl
push
xchg
lcall
pop
add
push
ljmp
bnd
mov
sbb
andl
shr
cltd
call
pop
cmpsl
mov
ret
call
lds
fstpl
mov
xchg
call
pop
add
cmp
cld
fs
inc
sub
xchg
push
push
imul
stos
sbb
sub
fbstp
ret
jp
ds
adc
testb
movsb
cmp
sub
int3
test
add
notb
out
sbbl
in
repnz
out
add
inc
dec
sbb
mov
xchg
fsts
jae
and
add
fucomi
imul
ficomps
xchg
push
pop
pop
movsb
sti
cmc
das
je
test
pop
out
jnp
push
test
or
es
les
mov
popa
xchg
nop
rorb
cltd
adc
les
scas
dec
ljmp
cmp
sarl
push
push
and
mov
mov
arpl
sbb
xchg
adc
daa
jp
mov
fildl
push
popa
in
inc
ja
mov
ret
insl
push
xchg
or
dec
lret
jl
mov
fsubr
call
xchg
mov
mov
cwtl
mov
xor
sarl
lea
in
sbb
fwait
xorl
fwait
dec
mov
insl
push
loop
adc
cwtl
sbb
test
or
test
jns
subl
mov
stos
ret
fidivl
lcall
cwtl
push
or
jmp
jbe
add
pop
lcall
inc
call
lods
dec
mov
popf
adc
outsl
sbb
or
dec
or
push
xchg
cmp
jae
ja
mov
ret
in
jle
xchg
cmp
and
shr
fdivp
push
idivl
and
and
into
xorb
xchg
dec
xchg
mov
add
sbb
jmp
ret
xor
ss
fmull
fsubs
rclb
aam
add
cmp
call
int3
xchg
ljmp
xor
adc
mov
jg
push
cmp
in
insb
int
fstps
push
test
xchg
movsl
dec
imul
fmuls
test
jne
jno
scas
imul
inc
sub
sbb
mov
mov
pop
fldt
or
shl
arpl
xchg
jl
push
cltd
pop
dec
leave
idivb
sbb
div
in
shrb
movsl
fcoml
mov
push
rolb
movsl
pop
sbb
add
cmp
repz
jne
ss
mov
jge
pop
insl
mov
mov
adc
and
xlat
addr16
shlw
push
mov
adc
aas
dec
into
js
xchg
hlt
aam
movsl
aad
lret
mov
out
cmp
mov
jcxz
and
scas
imul
inc
clc
mov
call
xor
nop
push
xchg
stos
out
mov
xor
inc
mov
xchg
pushf
or
or
dec
jbe
mov
ja
sub
add
mov
push
imul
repnz
pop
jmp
xlat
idivb
call
push
lods
loop
xor
jbe
adc
mov
fiaddl
mov
push
xor
out
dec
iret
pusha
sbb
mov
jo
push
clc
xlat
les
sahf
jne
popf
add
inc
jl
sub
sub
lcall
nop
pushf
test
jae
stos
rcl
stos
nop
int3
dec
sub
stos
lods
add
mov
call
inc
or
xor
xor
or
dec
imul
sbb
push
push
lcall
ljmp
inc
nop
xchg
out
rcrb
pop
int
fwait
mov
imul
push
mov
or
adc
jle
fisubs
imul
js
jnp
out
mov
xchg
jecxz
mov
adcb
xor
add
pusha
fwait
mov
mov
add
mov
imul
xchg
sahf
stos
pushf
movsb
push
xchg
cmpsb
addr16
mov
fisubl
dec
clc
jae
push
ss
cmovl
xchg
into
shrl
les
mov
cltd
push
inc
jb
mov
mov
jge
js
mov
stc
sbb
mov
adc
stos
mov
shrd
fwait
mov
loop
mov
pop
lods
sbb
mov
sbb
adcl
push
and
clc
xor
outsb
bound
jnp
mov
rorb
sub
jp
xor
out
daa
and
outsl
lock
sbb
or
scas
push
test
and
pop
sub
cmc
mov
pop
mov
sbb
dec
xchg
or
inc
loop
xor
lods
dec
pushf
arpl
jbe
lds
aam
loop
lcall
ret
rorl
cli
xor
sbb
mov
stc
fs
movsb
lock
and
sub
sbb
cmpsl
mov
inc
inc
sub
dec
test
and
adc
scas
lods
test
mov
or
inc
arpl
mov
xor
xchg
lret
out
push
fiadds
xchg
add
or
leave
fnstenv
push
or
mov
adc
pusha
ret
popa
sti
movsl
jae
jnp
fbld
sub
loop
out
lock
js
sbb
in
fcomps
aad
inc
push
mov
and
and
jge
adc
pop
sub
pop
loope
sbb
outsb
jp
cmpsb
lods
mov
fmull
mov
call
sbb
pop
mov
iret
cmp
stos
xlat
push
and
cmpsb
dec
in
insl
sub
adc
sub
jge
adc
lods
pop
nop
push
scas
pushf
testb
xchg
jle
push
fwait
clc
enter
addr16
xor
je
repz
aas
cs
roll
push
pop
cmpsb
imul
negl
cmp
sbb
in
mov
xchg
lcall
pusha
cmp
add
and
in
aam
mov
cmp
xchg
mov
dec
not
enter
sbb
jb
and
int3
iret
push
push
lahf
cmpsb
sub
jle
outsb
mov
pop
stos
push
imul
inc
xor
int3
xchg
dec
dec
sahf
or
mov
add
pop
pop
pusha
gs
movsl
xchg
jbe
inc
stc
arpl
and
stos
ds
scas
push
rcrb
ret
dec
outsl
rclb
cmp
adc
ss
mov
inc
pop
push
dec
lds
leave
push
cmpsb
pop
out
data16
adc
fbstp
push
cwtl
adc
movlps
or
lea
dec
push
push
inc
repnz
mov
popf
lods
xchg
lret
push
push
test
and
xchg
popf
xcrypt-ctr
cmpsl
push
dec
outsb
ret
xchg
xchg
pop
inc
xchg
arpl
gs
jbe
fisubs
sub
outsl
xor
pop
pop
sub
sbb
out
mov
push
ret
add
xchg
cmp
mov
ror
sub
test
and
addr16
push
mov
jecxz
sbb
mov
sub
ljmp
fcom
pop
push
cmp
mov
xor
scas
enter
repnz
xor
fistl
lret
pop
xchg
fistpl
dec
xor
lods
cmp
clc
jg
call
test
out
aas
cmp
nop
je
jb
aas
shlb
push
bnd
push
xchg
mov
fstps
inc
mov
negl
mov
ficompl
ljmp
test
xchg
jg
cltd
dec
ret
and
xchg
lods
dec
jo
xor
pop
xchg
xor
inc
add
or
sbb
test
out
push
jmp
stos
pop
test
outsl
cmp
inc
sbb
adc
adc
jmp
adc
arpl
es
rorl
gs
or
sub
xlat
jge
mov
inc
mov
sahf
jle
xor
test
and
sub
movsl
or
or
lods
stc
dec
imul
add
pop
add
dec
jl
xchg
fmul
and
stos
or
pushl
xchg
outsb
mov
fisubs
sbb
movsb
mov
mov
jl
cld
jecxz
js
test
jge
testl
sbbl
pop
mov
adc
imul
xor
imul
add
lods
ljmp
punpckhdq
into
mov
in
test
xor
and
lods
cmp
arpl
cwtl
pop
pop
xchg
adc
push
jno
shlb
out
and
pop
dec
cmpsl
loope
ljmp
cwtl
popf
jbe
xchg
les
mov
sbb
sarl
inc
fs
jmp
mov
in
mov
xchg
mov
fdivrl
adc
in
xor
loop
fbstp
out
push
lcall
sub
hlt
inc
mov
cmp
or
add
sbb
shl
lea
sbb
lods
xor
lcall
loop
in
loop
or
sahf
mov
jo
call
cwtl
pop
paddq
mov
outsl
or
sbb
cltd
jl
xor
stos
push
repnz
rorb
jg
push
mov
jnp
adcl
and
stos
jmp
inc
fstpl
ja
mov
adc
fdivrs
adc
pop
aas
mov
das
lea
push
sub
lret
xor
pop
pop
add
fcomps
push
push
cmp
jge
sbb
mov
pusha
out
or
in
bound
mov
push
xor
add
nop
or
out
getsec
in
fmulp
xor
js
sub
lret
jne
mov
push
xor
hlt
or
aad
sub
add
xlat
and
mov
js
push
pop
cmpsb
enter
push
cmp
lret
dec
movsb
mov
repz
mov
sub
xor
xor
popa
into
sub
cmp
ret
pop
out
call
add
inc
jp
cmp
or
jns
pop
mov
jge
ljmp
jl
pushf
pop
dec
dec
inc
mul
loopne
sbb
inc
cmp
divl
mov
add
pop
xchg
repz
bnd
inc
jmp
stos
aam
inc
lds
adc
popa
inc
mull
movsb
out
scas
sbb
je
shrb
xchg
cwtl
mov
add
xchg
xchg
lcall
test
add
and
mov
push
aaa
mov
mov
ret
dec
inc
xlat
cmp
lock
je
mov
sahf
inc
stc
bound
fcmove
jl
in
mov
mov
mov
and
adc
pop
mov
push
add
imul
mov
and
movsl
frstor
in
fistl
fstpt
mov
dec
cmpsl
out
dec
int3
or
xchg
dec
js
mov
cmp
or
in
cmpsl
pop
test
aad
andl
pop
jns
xchg
xchg
nop
or
mov
bound
cmpsb
push
or
std
mov
cmp
pop
cli
shl
out
pushf
mov
aam
popf
xor
test
push
std
xor
sbb
xchg
xchg
dec
xor
jmp
jns
push
cmp
xchg
and
mov
cmpsl
inc
cmpsl
es
mov
cld
roll
repnz
shll
scas
cmpl
pushf
dec
shll
pop
and
and
outsl
int
inc
inc
jne
ds
stos
out
mov
adc
sbb
xor
pop
fdivrl
bound
test
jmp
xchg
test
test
add
push
lahf
lds
mov
jno
data16
adc
in
inc
aaa
outsb
xor
dec
cltd
pop
ret
xor
sbb
push
push
out
pop
sahf
sbb
loope
rcrl
push
test
dec
repz
test
sbb
addb
fnstsw
test
cli
cmp
mov
or
xchg
popa
bound
xor
clc
xor
into
and
rcrb
cmpsl
xchg
pusha
subb
add
fildl
dec
jne
nop
loopne
add
in
bound
aad
stc
out
jb
inc
hlt
jb
xor
inc
dec
mov
outsl
xchg
in
outsb
mov
and
mov
cmc
adc
mov
stos
pop
lahf
mov
dec
not
and
int3
loope
adc
cs
iret
jbe
push
iret
mov
sub
mov
je
nop
or
sbb
inc
jg
je
into
nop
pop
ret
fidivs
xlat
pop
mov
imul
inc
inc
cmp
popf
stos
fisubs
inc
stos
mov
xchg
rcr
int
or
push
aas
ret
fstps
xchg
cli
and
push
xchg
sbb
dec
pop
bound
cli
shl
imul
sbb
in
cmpsl
aad
or
dec
insl
dec
or
pusha
das
cltd
aam
dec
inc
loopne
mov
sub
test
into
push
xor
xchg
test
jae
mov
imul
sarb
in
xor
push
inc
adc
adc
cmp
adcl
dec
push
jecxz
cmp
mov
push
mov
mov
pop
int3
movnti
inc
aaa
es
or
test
add
xor
jns
notb
or
lss
cli
push
xchg
dec
aaa
leave
repnz
sahf
adc
ficompl
cli
xchg
js
push
and
jg
popa
jnp
dec
sbb
pop
cmp
rclb
pop
cmpb
push
mov
push
mov
out
cmc
and
hlt
movsl
or
pop
xor
lret
or
sbb
mov
ret
xchg
out
sub
mov
out
fistl
mull
popa
data16
daa
xchg
outsb
xchg
dec
jbe
aas
jl
or
or
dec
inc
jo
and
scas
fwait
pusha
test
and
dec
imul
testl
shlb
imul
push
mov
sbb
and
out
into
jae
fistl
dec
mov
in
dec
jno
mov
xchg
mov
mov
cwtl
jne,pn
out
adc
dec
add
js
lret
pop
divb
sbb
dec
shl
lret
xchg
xchg
daa
sub
imulb
ss
cmp
cwtl
mov
push
mov
adc
and
xchg
and
inc
push
jl
int
arpl
out
and
aaa
jb
sbb
sti
cmp
insb
int3
movb
outsl
subb
adc
das
inc
cld
ds
bound
mov
pushf
lahf
or
mov
stos
jge
fstpl
fcmovbe
or
cmp
das
call
in
sti
mov
daa
dec
je
cld
orb
mov
add
inc
scas
sti
sti
mov
or
mov
cmp
int
pusha
fistpll
fistps
mov
movsb
pushf
sub
cltd
mov
in
dec
jo
aam
inc
adc
jns
xor
insb
sbb
test
data16
cld
lods
pop
adc
out
push
roll
push
sti
addb
push
adc
mov
xchg
fmuls
xor
sub
jnp
mov
in
ja
adc
scas
lret
mov
stos
sub
test
scas
xchg
xchg
aaa
or
mov
xchg
cmp
pop
pop
ret
add
sub
cmp
int
inc
xlat
popa
imulb
test
cmpsb
clc
inc
in
fidivs
jle
into
mov
xlat
or
out
stos
cmp
xchg
mov
ds
leave
inc
xchg
cmc
mov
loopne
cmp
mov
cmp
add
inc
lock
dec
stc
jmp
sub
cmp
add
jge
outsl
fidivrl
arpl
mov
mov
cli
push
js
in
mov
jb
inc
lods
js
jp
int
push
fwait
rorb
add
dec
adc
jmp
nop
lea
ljmp
pusha
push
fldcw
add
pop
jae
shrl
aaa
int
jo
xchg
loope
cmp
sbb
jp
sub
std
mov
dec
es
adc
outsl
mov
jecxz
rcll
hlt
mov
pop
test
ror
inc
and
mov
cld
pop
cmpsb
das
stc
scas
xchg
push
hlt
ds
or
lds
daa
call
push
shlb
push
jecxz
movsl
mov
test
mov
into
xor
or
insb
mov
cld
or
ret
stc
pop
mov
and
mov
push
leave
xor
test
mov
dec
lret
fnstenv
or
jae
pushf
mov
bound
dec
push
push
or
xchg
pusha
testb
push
xor
lods
scas
bnd
add
daa
xor
fmul
ja
push
adc
push
test
sysexit
xchg
mov
addl
fwait
in
lods
and
and
mov
mov
orb
mov
insl
mov
rolb
push
jae
sub
test
dec
fldcw
cli
mov
inc
add
pop
dec
pop
sub
sarb
cmp
jb
in
jge
xchg
repnz
subl
and
outsb
movb
inc
or
push
cmp
adc
xorl
std
jno
test
mov
or
mov
cs
aam
pop
sti
sbb
orb
jo
mov
jg
in
xchg
and
xor
mov
fldl
lcall
and
mov
inc
sub
stos
in
add
adcb
push
mov
les
lods
and
ret
out
mul
gs
in
mov
mov
pop
jecxz
jl
or
adc
xchg
dec
and
jge
xchg
out
xchg
test
sbbb
jo
mov
pop
xor
mov
fcompl
mov
iret
lea
lods
hlt
imul
mov
cmp
shrl
push
jle
pusha
and
out
cmp
inc
das
mov
shrb
lcall
in
ss
mov
pop
xchg
and
jp
imul
mov
sbb
cmp
lock
call
into
pop
jns
aam
mov
adc
xchg
notb
mov
aad
adc
stc
clc
test
jno
iret
out
andl
ss
stc
xchg
ds
adc
loope
scas
adc
cmpsb
sbb
mull
cmp
inc
fsubs
inc
xchg
adcb
xorb
lret
pop
fistl
xor
movsl
jbe
cmpsl
mov
xlat
outsl
fs
add
jecxz
imul
testb
ret
cs
out
pusha
loopne
mov
or
xor
aas
xchg
xchg
inc
cld
icebp
out
dec
adc
incl
movsb
aam
int
mov
rolb
inc
and
sahf
adc
ds
movsb
pop
pop
pop
cli
ljmp
cmp
push
idivl
sbb
adc
mov
lcall
and
popf
cmp
add
and
cmpb
push
or
xchg
stos
mov
jge
loopne
ret
cmp
addr16
rorb
data16
test
mov
sbb
or
std
stc
lods
dec
lock
pop
addr16
test
cmp
aad
adc
into
mov
subb
and
push
dec
xchg
pop
cmp
mov
adc
lock
hlt
das
js
ljmp
pop
mov
mov
into
out
mov
popf
sahf
sub
jecxz
xor
add
jbe
sub
push
mov
cmp
repz
enter
pop
fistl
jl
and
loope
subb
sti
mov
pop
xchg
lahf
iret
push
xchg
dec
xor
fimuls
aad
push
sub
xchg
cmp
xor
mov
push
mov
dec
outsl
xor
lods
add
mov
fwait
inc
vcvttss2si
push
xchg
lods
xor
rorb
xchg
stos
jnp
shll
sbb
or
stc
shlb
lret
inc
loop
xlat
pushf
xchg
push
xchg
scas
mov
adc
int3
push
addl
ss
sub
jmp
and
mov
cmp
scas
push
dec
xchg
adc
xor
je
pop
cmp
mov
mov
pop
pushf
inc
repnz
out
sub
lds
mov
sub
cmpl
fisttpll
repz
dec
test
pusha
xor
pop
inc
lock
xor
fcoml
cmpsl
cs
mov
pop
in
mov
cmovbe
cmp
les
dec
mov
clc
jge
add
xor
add
imul
les
and
popa
in
mov
out
inc
lret
adc
adc
icebp
push
xchg
rcl
nopl
jecxz
and
push
ret
bound
lret
stos
pop
mov
xor
fistl
aam
or
mov
mov
outsb
cmp
out
and
mov
push
les
aaa
out
sub
dec
aaa
js
mov
push
inc
outsb
fdiv
arpl
jo
jge
and
sub
push
and
jge
sbb
lar
in
jge
jle
sbb
daa
mov
test
jmp
shrb
jae
hlt
add
adc
push
fdiv
adc
mov
fs
fdivr
scas
and
das
arpl
shll
loopne
sbb
pop
fsubrl
pop
mov
xorb
rcrb
dec
loop
push
pushf
sub
sub
mov
fiaddl
icebp
xchg
cs
add
js
mov
test
mov
sti
push
into
and
mov
nop
and
mov
aaa
aaa
movsl
cmc
lcall
push
out
jmp
int
add
dec
dec
and
sub
sbb
sbb
sahf
mov
push
rol
jns
dec
bound
mov
jmp
add
push
push
cmp
cmp
xchg
fwait
shrl
xchg
outsl
ja
icebp
hlt
shrl
jns
cmp
arpl
sub
arpl
cmpsb
push
movsl
insb
mov
cwtl
stos
sub
push
dec
in
inc
das
pop
sub
sbbl
mov
sbb
popa
xchg
push
rorb
in
fbld
jecxz
adc
or
imul
imul
ljmp
dec
cmp
addr16
and
mov
jnp
test
inc
mov
lea
pop
adc
sbb
inc
movsb
popa
imul
arpl
fnstcw
mov
hlt
pop
lea
out
cmp
clc
and
push
mov
jb
hlt
cmp
enter
push
call
jbe
pop
or
rolb
inc
lahf
mov
dec
sbb
cli
cmp
int3
ja
xor
adc
loopne
cmp
dec
or
xor
das
cmp
sbbl
jp
mov
lcall
inc
notl
lods
inc
sbb
int3
push
add
pop
pop
push
or
test
lds
imul
leave
movsb
adc
addr16
add
jbe
orl
pop
hlt
or
cmpsb
fidivs
loopne
xor
cmp
pushf
push
lea
mov
loop
xchg
pop
ret
movsb
cld
push
push
repnz
std
dec
mov
inc
adc
icebp
cltd
pop
pop
cmp
lcall
mov
sub
test
and
mov
mov
cs
test
aas
test
push
ljmp
cmpsl
iret
or
and
lds
js
psubusw
rcll
mov
es
sub
sub
daa
daa
mov
jb
sarl
xlat
imul
das
mov
cmp
add
gs
mov
dec
or
into
add
xchg
push
into
dec
es
fstpl
popf
rol
pop
sarb
outsb
pop
inc
ds
shll
loope
push
sub
outsl
jb
push
inc
jne
insb
pop
add
nop
fldt
nop
pop
sbb
add
cmpsb
or
sub
insl
aam
pop
sbb
push
add
pushf
cmc
divl
ret
enter
fdivl
or
cmp
dec
dec
scas
aam
es
push
jnp
mov
popf
xor
int3
rcr
or
sahf
mov
or
sbb
xor
outsl
xor
push
jmp
mov
mov
mov
cld
inc
mov
xor
pinsrw
and
pop
dec
mov
aaa
and
faddp
call
push
mov
out
pop
adc
mov
push
imul
int
testl
dec
jbe
into
cmp
mov
xchg
imul
mov
sub
fnsave
loop
push
es
popf
jne
adc
shrb
daa
mov
test
fsubrl
gs
jae
push
cwtl
cmp
and
adc
loopne
xchg
in
cmpsl
nop
cmp
dec
aas
xchg
in
mov
dec
les
mov
test
cmp
jl
rorl
and
pop
adc
or
add
cli
enter
sub
int
push
mov
mov
or
or
in
jnp
push
cltd
repz
test
add
push
sub
fsubs
dec
xor
imul
mov
into
jnp
enter
inc
sti
xor
push
imul
sbb
lds
sti
data16
pop
rcrb
xchg
push
scas
dec
cmpsb
pop
add
test
cwtl
mov
jmp
rcll
push
adc
sbb
pop
inc
add
jg
test
xchg
shrb
out
outsl
lock
sti
jge
in
push
inc
mov
mov
clc
js
js
iret
add
nop
mov
fsubs
pop
jo
stos
loopne
push
mov
test
mov
or
jle
clc
xor
fsubrl
movsb
jmp
pop
sbb
sub
cld
jnp
cli
xlat
out
pop
movsl
pop
add
movsl
adc
imul
ss
in
rcl
int
add
pushf
push
sbb
pop
addr16
inc
lock
inc
sub
jae
adc
push
mov
jns
sbb
mov
fsub
in
xlat
jl
imul
cmp
loop
push
pop
and
xor
cmc
xchg
pop
mov
mov
popf
xchg
cmp
insb
mov
es
sahf
pop
rorl
insl
sbb
je
pop
insw
xor
sbb
mov
popf
mov
out
mov
orl
std
adc
hlt
cltd
or
leave
mov
jne
lods
loopne
mov
dec
dec
or
out
fs
cltd
aaa
fisubrs
pop
and
pop
pushf
or
pop
mov
popa
nop
in
out
add
clc
cmp
dec
shrb
cmp
or
mov
cltd
movl
mov
or
sub
dec
aam
dec
and
dec
dec
mov
je
into
dec
cmp
repnz
popa
hlt
cmp
sbb
fdivs
sbb
arpl
dec
fisubrl
jg
mov
sbb
lcall
movsl
dec
xor
inc
clc
es
adc
and
or
cmpsb
aas
mov
ljmp
push
or
push
pop
movsl
dec
adc
fistl
cmp
sub
cmp
push
mov
sbbb
iret
mov
lcall
imul
mov
jnp
iret
ss
xchg
xor
adc
add
mov
insb
pop
pop
fmul
dec
mov
loop
xor
sub
inc
pusha
inc
dec
test
sub
test
inc
pop
rolb
mov
mov
fcmovnbe
nop
divb
adc
scas
rclb
leave
push
mov
call
pop
sbb
push
cmp
pop
cmp
dec
pop
scas
mov
mov
loopne
lea
add
sbb
test
aad
in
pop
jne
add
mov
inc
jmp
fisubrs
mov
jb
js
pop
pop
jl
test
pop
cmpsb
aad
cltd
dec
mov
aaa
jmp
lcall
dec
mov
test
test
xchg
in
fidivl
jbe
mov
mov
pusha
mov
xor
jbe
cli
int
cltd
jecxz
push
jle
or
mov
and
inc
sbb
subb
sbbb
stc
pop
mov
nop
push
cmpsb
push
mov
jb
mov
mov
pop
mov
orl
pop
mov
sub
cmpsb
add
test
sbb
push
mov
inc
add
xchg
pop
or
push
out
pop
cld
cmp
outsl
add
inc
push
es
inc
ja
pop
inc
cld
cli
xor
movl
xchg
jge
adc
lea
addr16
icebp
sub
push
dec
mov
inc
pop
jnp
xlat
mov
jno
icebp
or
dec
jno
testl
out
jmpw
loopne
jae
mov
cwtl
aaa
pop
mov
xchg
jae
add
xchg
int3
mov
xor
and
add
pop
and
sbb
ja
cmc
adcl
mov
inc
jb
mov
icebp
movb
dec
mov
fwait
push
or
and
push
push
push
xchg
mov
repnz
sub
mov
loop
and
mov
sub
dec
xchg
insl
scas
xchg
cwtl
mov
adc
jns
cltd
out
sub
mov
sub
repz
pop
fistpll
popa
ret
popl
push
aad
add
gs
cltd
mov
jl
sub
mov
loop
xor
dec
inc
movsb
xor
lret
and
int
add
leave
xor
adc
sbb
fwait
movsb
outsb
cmp
faddl
in
cld
mov
adc
shr
sbb
mov
repz
dec
loop
aam
iret
scas
cmpb
inc
xor
in
push
xor
mov
clc
mov
push
repnz
and
or
mov
adc
addr16
in
loope
aad
push
shr
out
mov
jmp
loope
fs
fsub
fistl
mov
jp
sub
mov
outsb
cs
push
cmp
in
push
jae
out
rcrb
fsubrl
pop
lock
sbb
lea
or
nop
sahf
mov
cmpsb
add
jo
jmp
inc
dec
or
ss
out
inc
ret
sbb
cmp
stc
ja
fwait
lods
mov
inc
xchg
add
cmp
and
sti
clc
sbb
cmp
push
jp
pusha
es
cmp
les
sbb
cmp
clc
cwtl
orb
aam
es
pop
dec
sub
test
nop
inc
mov
test
sub
jg
or
push
pop
xchg
sbb
inc
adc
push
push
stos
scas
xor
std
aas
andb
in
popa
xor
arpl
inc
xchg
idiv
cld
stos
xor
dec
and
stos
cmp
andb
scas
fimuls
inc
andb
lret
in
or
in
jo
add
aad
add
mov
pushl
fs
ja
aas
or
ds
mov
mov
ret
dec
sub
jo
and
mov
pop
mov
and
loopne
inc
adc
sub
mov
das
cmp
pop
xchg
in
jno
push
mov
push
dec
pusha
jp
push
cmp
fdivp
repz
cmpsb
addr16
jp
icebp
pop
fisubrl
jns
jle
or
pop
cs
test
es
push
fwait
test
loop
stos
dec
jno
push
sub
cmp
pushf
xchg
push
popa
cli
fsubl
and
repnz
scas
in
ret
sbbb
in
cmp
std
out
rcll
xchg
stos
add
adc
xor
mov
xor
and
fistps
add
outsl
scas
pop
and
or
mov
xor
in
ds
xchg
lcall
mov
dec
jle
cmpl
fs
push
adc
mov
jecxz
leave
fildl
inc
mov
or
adc
ja
dec
jo
inc
cli
ss
push
outsb
push
ss
inc
pop
sbbb
jl
mov
out
push
pop
sub
cmc
shll
lret
xchg
push
jmp
cmp
or
ss
inc
xchg
and
jae
lods
push
gs
mov
jmp
dec
dec
push
add
push
idivb
loop
cmp
jb
insl
pop
sahf
gs
mov
scas
leave
mov
lret
jge
inc
stos
ljmp
or
test
xor
and
inc
lret
jg
inc
iret
mov
fbld
cmpl
or
notb
fucomi
mov
xchg
out
das
dec
movsb
dec
xor
inc
arpl
fnsave
loopne
pop
cli
jns
out
cmp
cli
js
mov
pop
outsb
adc
push
lods
orl
pop
add
loopne
int
mov
pop
pusha
aam
fwait
sbb
jbe
add
jbe
mov
add
leave
iret
add
cmp
into
pop
mov
inc
scas
inc
loop
arpl
pop
outsb
push
cmpsl
inc
aad
nop
jmp
stos
push
adc
xlat
cwtl
push
sbb
in
dec
cmp
xlat
dec
out
xchg
shll
mov
je
xchg
pop
roll
jo
push
orl
mov
pushl
loop
aad
or
inc
scas
dec
mov
sub
jb
xor
and
mov
fstpl
xlat
rsqrtps
pop
inc
mov
nop
xor
shll
in
lcall
aaa
jae
cmp
pusha
inc
xlat
pop
mov
out
lea
sbb
xor
xor
sub
sti
std
mov
xor
cmp
dec
stos
stos
xchg
sub
jns
pop
scas
xchg
xor
in
outsb
pop
xchg
cmpsl
mov
sarl
lcall
lods
or
push
imul
xchg
cmp
jp
dec
adc
dec
mov
cld
mov
daa
lahf
and
syscall
cltd
inc
mov
dec
pop
movsl
mov
out
mov
fildl
loope
sahf
test
popa
imul
mov
popa
aas
scas
es
cmc
push
and
mov
fwait
jb
rol
sbb
or
push
jne
mov
inc
out
lcall
int3
arpl
inc
adc
pop
adc
xchg
xor
push
jmp
push
into
cmp
sbb
in
ret
iret
scas
mov
push
ds
xor
jae
mov
aad
xlat
sbb
add
lods
dec
pop
ret
inc
test
cmpsl
inc
sub
sbb
in
repnz
dec
int
pop
inc
and
xor
cwtl
inc
test
xchg
cwtl
test
sti
ret
leave
push
mov
mov
inc
dec
stos
adc
int3
test
imul
aad
add
std
dec
dec
bnd
mov
cmc
jns
data16
shl
xor
dec
inc
dec
dec
loopne
push
fsubr
dec
int
cwtl
pop
fists
orl
dec
cmp
pop
pop
cld
sub
aas
out
idiv
rcll
shrl
sub
dec
inc
mov
inc
add
mov
pop
fnsave
popa
dec
sti
fisubrs
leave
push
or
and
addr16
dec
loop
push
test
or
mov
push
out
xor
cli
daa
mov
movsb
lcall
adc
xor
das
mov
popa
fsubrl
pop
xlat
insb
inc
insl
jge
lret
scas
pop
subl
push
dec
cmc
leave
ret
inc
test
shll
cmpsb
mov
sbb
pop
cmp
pusha
test
lcall
sbb
sub
cmpsl
negl
lock
mov
or
nop
mov
movsb
ret
sarl
jmp
dec
mov
mov
shrb
shr
push
in
cltd
and
xchg
mov
das
mov
push
insb
jl
fstpl
xor
popf
in
inc
mov
push
cmp
shrb
or
sahf
pop
jmp
in
out
xchg
mov
aaa
dec
test
sbb
sahf
rolb
sub
pusha
mov
jns
cs
sti
lock
pop
push
std
iret
addr16
data16
fistps
out
int3
mov
mov
pop
mov
push
mov
cmp
mov
cwtl
hlt
dec
pop
lea
sub
jmp
repnz
pop
pop
sub
int
push
adc
cwtl
out
fninit
jb
ret
and
outsb
jns
fdivrs
icebp
imul
cs
iret
mov
jb
out
roll
faddp
lahf
bound
ret
sbbl
mov
mov
sbb
in
lock
pop
das
sub
add
cmp
sti
xchg
bound
movsb
lds
pop
mov
pop
or
or
push
mov
mov
sbb
xchg
lret
not
fidivrs
sub
idivl
xor
mov
outsb
sbb
mov
shll
push
adc
sub
inc
scas
enter
imul
jns
sub
repnz
xor
pop
jo
cmpsl
lea
pop
sbb
xchg
xchg
dec
mov
data16
jp
mov
pop
int
cmp
jno
ss
mov
or
jl
jmp
je
pop
add
and
mov
sbb
dec
mov
mov
addr16
jmp
insl
cld
lock
mov
lods
es
int3
mov
mov
shll
pop
lcall
xchg
cs
imul
xchg
and
dec
pop
test
fstl
sub
and
fidivs
jmp
jmp
inc
int3
loop
loop
mov
xchg
sbb
sahf
jmp
fistpl
sahf
sbb
shll
shll
and
fcmove
add
out
inc
addr16
movsb
int3
cmp
cs
mov
gs
lods
dec
pop
xchg
in
cmp
imull
jne
popf
pushf
inc
pxor
add
push
pop
scas
mov
fsubs
pop
loopne
es
jo
push
in
push
xlat
je
lock
and
jns
aas
pop
pop
sbb
popf
jmp
movsl
sbb
and
dec
test
xchg
add
pop
xchg
cmp
sarb
adc
fcomi
in
shll
repnz
int3
xchg
mov
icebp
fidivs
mov
jle
mov
ljmp
and
adc
xchg
or
shl
cmp
in
or
cmp
cmp
cmpsl
outsl
js
call
sub
push
push
pop
mov
cmp
push
loope
jmp
ret
sbb
mov
test
mov
lret
stos
faddp
push
mov
fs
fucomi
std
adcb
xchg
xor
subb
out
sub
pop
adc
fdivs
addr16
pusha
ja
jmp
inc
out
orl
mov
mov
test
popa
xchg
int3
hlt
push
mov
sub
pop
dec
cmpsl
pop
aam
adc
repz
add
scas
movsb
ljmp
mov
fists
test
in
push
adc
cmpsb
mov
sbb
jp
ss
shrb
aaa
push
xchg
bound
jo
dec
and
add
inc
push
push
addb
xor
rolb
leave
sbb
add
or
outsb
insb
push
out
inc
in
jle
or
and
int
out
xchg
xchg
inc
adc
jbe
pop
cs
xor
jmp
add
push
loopne
dec
xor
jae
pop
inc
pop
daa
subb
xchg
push
lods
repnz
pushf
mov
sub
adc
mov
xchg
pop
mov
jmp
push
cmp
fadd
sub
sti
jp
fs
add
sbb
mov
lea
jp
sbb
in
dec
loop
leave
inc
pushf
lock
pop
jge
imul
and
cmc
cli
push
sbb
bound
mov
xchg
dec
pusha
cwtl
movb
inc
loop
scas
push
andl
popf
xchg
push
cmpsl
lea
cmp
push
nop
cmovg
sbb
testb
jmp
push
sub
fidivrs
xor
iret
adc
push
xorb
or
sti
test
es
pop
out
cltd
sti
dec
daa
ret
out
out
loope
lock
xor
and
cmp
je
or
inc
and
clc
ds
andl
sub
ror
sbb
mov
inc
or
push
xchg
sar
in
xchg
cmp
int
cld
push
push
push
sub
pusha
sti
xchg
and
outsb
mov
xor
xor
faddp
jb
test
int3
push
or
mov
adc
in
ds
fnstsw
pop
rclb
test
pop
sarl
or
cmp
adc
xchg
push
nop
std
mov
shlb
add
xchg
cwtl
add
test
fs
movsl
rclb
sub
cmp
int
xchg
aad
gs
sub
popf
sbb
mov
push
pop
rcll
dec
in
popa
stos
adc
mov
mov
add
jo
and
xchg
aaa
sbb
imul
cmp
push
lods
out
dec
repnz
inc
js
sub
sbb
movsl
sbb
jb
push
pop
and
aaa
mov
dec
adc
mov
addr16
stos
lahf
jl
test
les
xor
push
mov
push
imul
jae
or
daa
jns
cltd
fisubs
cli
add
fbld
add
pop
jae
push
sub
cmp
hlt
outsb
jns
xor
cli
lret
aas
in
jmp
cmp
push
xchg
cmp
pusha
sbb
dec
jae
push
std
ror
ret
imul
jg
cmpl
ss
cbtw
mov
mov
out
pushf
out
sahf
xor
fnsave
sarl
pop
mov
cmpsl
cmpsb
mov
loope
outsb
inc
int3
sbb
sti
lret
dec
test
dec
push
loop
shrb
call
neg
xor
push
dec
cs
icebp
mov
sar
test
pusha
daa
scas
push
popa
jp
jae
icebp
and
jns
jg
fmulp
push
inc
cltd
movsl
arpl
ret
lret
pusha
popf
pop
mov
mov
test
in
dec
dec
xor
enter
bound
cmp
stos
mov
push
arpl
jmp
or
aad
push
lods
scas
lods
inc
or
gs
lea
loop
cmp
fwait
sub
mov
inc
dec
out
jle
inc
adc
insb
jb
scas
outsl
sbb
sahf
xchg
adc
or
sbb
fnstenv
and
popf
in
repz
jecxz
test
jno
xchg
or
inc
mov
mov
mov
bound
ret
jl
push
pop
xchg
cmpsl
push
shl
stc
repz
arpl
xor
adc
mov
or
pop
fs
into
sbb
push
cmp
inc
addb
fistpl
pop
dec
push
test
test
aad
lahf
pop
sbb
mov
mov
iret
adc
or
stos
push
or
add
pop
inc
pop
ljmp
sub
pop
outsl
pushf
push
lock
mov
dec
adc
sbb
sbb
sbb
sub
push
loop
lahf
enter
inc
cmp
push
cmp
jno
or
cmpsb
rolb
popa
pop
push
loopne
inc
outsb
movsb
shr
ljmp
and
inc
mov
dec
mov
xchg
cmp
and
movsl
imul
std
je
pusha
loop
call
call
les
jge
xchg
je
push
push
pop
loop
cmpsl
out
dec
adc
mov
sub
mov
repz
xor
pop
mov
fadds
mov
mov
aas
aaa
iret
aad
lret
sub
mov
jno
jae
lock
pop
call
rcr
adc
sbb
add
xor
shlb
push
push
xlat
ret
jne
dec
ds
cmp
mov
or
push
je
hlt
or
popa
xchg
sarb
sbb
or
mov
stos
cmp
lds
cmp
mov
neg
or
jb
fstp
popa
jg
pushf
jbe
add
sahf
xchg
and
xlat
data16
mov
dec
rclb
icebp
repz
and
pop
aas
fisttps
std
pop
jne
jmp
imul
inc
mov
shl
xchg
push
rclb
loopne
cmp
jl
test
add
cmp
mov
pop
in
inc
jo
dec
xor
lcall
mov
pop
ss
add
clc
mov
fsubs
sbb
mov
enter
pop
push
imul
add
sti
push
dec
cld
mov
rorb
dec
test
or
sbb
add
daa
mov
mov
outsl
mov
sbb
outsl
push
pop
aam
add
mov
rorb
jge
out
jae
lods
and
push
sahf
or
cltd
inc
cwtl
les
movsl
sub
sbb
sub
imul
outsb
dec
cmp
or
push
mov
insl
test
cli
jle
popf
in
iret
icebp
jg
inc
int
hlt
daa
jbe
sahf
movsb
mov
test
mov
jg
cwtl
data16
fisttpll
enter
cmp
mov
aaa
jp
dec
mov
xorb
mov
ljmp
cmc
push
lahf
and
sub
inc
xchg
xchg
mov
fs
test
insl
mov
xor
pop
jbe
jmp
in
push
mov
cmc
outsb
ja
es
pusha
inc
dec
cltd
ds
popf
in
scas
mov
hlt
inc
adc
cs
daa
push
jbe
mov
test
rolb
inc
pop
addb
pandn
push
aam
dec
mov
sbb
xor
scas
push
orb
lret
mov
es
jae
out
mov
sahf
xorl
cmp
ret
out
jp
addb
loope
shrb
ja
dec
inc
es
cmp
scas
jge
in
les
ret
push
inc
ret
mov
out
iret
push
cmpsb
icebp
stos
xor
mull
inc
ss
jmp
xor
jno
cli
les
cld
push
pop
subl
xor
dec
mov
or
push
mov
jne
mov
pop
aad
xchg
pushf
cli
inc
negl
mov
sarl
sbb
mov
add
fsubl
or
push
pop
and
xchg
loopne
loop
push
jle
dec
lret
lcall
xchg
adc
push
jle
popf
pop
rorl
sub
pop
mov
fs
mov
leave
jmp
movsl
pop
mov
cmpsl
in
clc
mov
xor
dec
inc
push
call
int
into
cmp
ret
jmp
ret
iret
jno
xlat
lock
test
pop
mov
adc
out
inc
out
popa
test
test
pop
mov
test
add
js
sub
xchg
add
ret
or
fmulp
push
sbb
ja
jo
sahf
cmpsl
xor
xor
out
lods
ss
aad
mov
ret
insb
jnp
mov
inc
dec
mov
push
mov
push
jne
movsb
pop
or
mov
sub
jae
leave
pop
mov
push
mov
sti
icebp
or
jno
push
push
adcl
xchg
movsl
xchg
sub
imul
repz
test
dec
mov
cmp
movsb
jns
cmp
push
rclb
adc
gs
jmp
add
dec
shll
add
cmp
sub
mov
iret
add
push
shl
lds
mov
out
add
jge
pop
data16
jg
dec
les
fsubl
iret
adc
xchg
repnz
add
nop
xor
enter
mov
int3
add
fs
andl
icebp
jb
mov
push
cwtl
lcall
xchg
popa
out
push
xor
arpl
ja
push
out
mov
in
out
adc
pusha
inc
aaa
loopne
push
pushf
inc
repnz
movb
stos
jle
lcall
and
mov
mov
sub
outsb
lret
insl
fwait
mov
cmp
rcr
cmc
adc
lock
jae
int3
xchg
out
negb
push
adc
mov
sub
fcoms
xchg
loopne
dec
mov
inc
mov
lock
je
xchg
push
pop
mov
and
push
jle
in
dec
jbe
push
out
enter
cmp
imul
pop
test
adc
sub
inc
or
push
mov
fwait
mov
mov
test
inc
cmp
xchg
add
loope
cltd
rorb
int3
insb
and
out
pusha
fldt
dec
test
outsb
pop
cld
out
sub
pushf
orb
daa
shll
sub
fwait
jle
adc
mov
negl
stc
jg
int3
fs
cwtl
lcall
jp
cs
lds
dec
jo
adc
mov
daa
xchg
jne
jg
sbb
push
push
pop
jno
dec
mov
xor
adc
cmp
pushf
insl
dec
inc
mov
or
and
jecxz
jle
dec
adc
jo
das
lcall
jp
stos
sbb
outsl
dec
push
enter
adc
aas
lcall
dec
xor
adc
pusha
ret
dec
repz
xchg
or
mov
and
lock
sbb
out
sarb
xchg
push
inc
mov
das
dec
xor
rorb
add
add
fcmove
dec
cltd
push
aad
dec
add
adc
push
sbb
sbb
jo
pop
in
sbb
out
mov
dec
push
and
mov
pusha
hlt
shl
mov
cmp
scas
jp
sub
ja
notb
push
lods
xor
sbb
mov
xchg
shr
hlt
popf
fimull
and
pop
rorl
flds
mov
xchg
call
cmp
cld
sub
jnp
nop
xor
sbb
or
jno
sub
adc
xor
or
aam
sub
push
lods
jmp
mov
adc
in
xor
mov
inc
dec
xor
jecxz
loop
cltd
dec
insl
dec
pop
fisttpl
xchg
xor
push
pop
add
pop
rep
notl
add
lret
mov
movsl
gs
xchg
clc
pop
icebp
push
cmpsl
push
lds
mov
dec
fwait
xor
adc
xor
pushf
pop
inc
xor
insb
mov
jg
jno
pop
stos
bound
ds
adc
lahf
subl
and
mov
repz
out
pushf
mov
lea
mov
cli
sub
call
mov
ljmp
pop
and
adc
in
push
repz
pop
mov
cli
lret
lds
mov
pop
add
in
mov
cs
inc
add
dec
call
jo
xor
mov
inc
data16
mov
mov
xor
cmp
addr16
mov
fwait
shrb
inc
sub
push
sbb
mov
sub
std
es
push
addb
into
mov
inc
push
fildl
cmp
mov
sbb
mov
jl
bound
in
jle
mov
test
insl
lret
mov
fdivl
adc
js
inc
sti
jns
mov
push
and
jbe
popf
insb
out
inc
repz
cmpsl
into
push
fdivr
loopne
rclb
dec
push
and
cltd
sub
xlat
movsl
movl
movsb
daa
push
mov
mov
lock
jae
loope
xchg
cmp
outsl
test
ds
out
push
xchg
cmp
ret
test
push
in
inc
loopne
sahf
add
sbb
or
xlat
cmp
les
push
into
nop
sti
imul
bound
pop
or
nop
imul
mov
push
addr16
mov
pop
pop
pushw
jle
xchg
jns
dec
cmpsl
lea
stos
push
popa
out
es
ret
jle
sbb
xchg
add
in
insb
out
push
aas
push
movsb
fndisi(8087
inc
jne
push
fcmovb
addl
pop
cmp
cmc
push
jo
or
fcmovnu
stc
mov
adc
push
stc
repnz
pushf
add
lods
mov
mov
mov
insb
je
pop
add
into
xchg
lret
dec
gs
mov
iret
push
test
cwtl
enter
loop
loope
lcall
lahf
jp
add
mov
ds
fs
inc
ds
mov
mov
cltd
mov
mov
cmp
fisubrs
mov
out
jecxz
push
add
jmp
adc
jo
fbld
andb
in
push
pop
mov
inc
and
xor
mov
dec
je
push
mov
push
cmp
cmp
mov
and
ror
or
lahf
js
sub
mov
fcoms
xchg
pusha
sbb
sub
xchg
ja
jno
push
data16
lea
jb
out
adc
mov
sbb
mov
xchg
dec
xchg
mov
shl
sub
dec
pop
fmulp
ret
push
daa
add
outsb
stos
pop
mov
out
xchg
lds
imul
push
cmpsb
xchg
sub
imulb
insb
nop
or
adcb
test
pop
jp
cmpsl
inc
xchg
icebp
pop
add
add
mov
je
mov
pop
xor
clc
scas
or
stc
jp
lods
gs
cmp
pop
dec
jo
inc
add
aas
push
sar
jno
popf
and
pop
xchg
repnz
add
dec
inc
hlt
mov
add
adc
adc
adc
fucomp
jl
test
mov
mov
sbb
mov
hlt
es
inc
mov
pushf
mov
inc
jno
dec
xchg
mov
jge
jae
mov
jne
mov
mov
cmc
outsb
scas
pop
cmp
mov
push
xor
xor
cmc
push
jle
sbb
mov
int3
dec
xchg
and
sub
addr16
push
leave
xchg
dec
test
cmp
outsl
sbb
dec
js
or
vminsd
jp
je
repnz
movsb
ret
in
mov
scas
testb
inc
push
lods
sub
add
cmpsl
push
or
in
ror
xchg
or
cmpsl
test
jnp
insl
outsl
push
jns
es
hlt
or
push
add
mov
fimull
mov
lods
pop
lret
cmp
cmp
push
and
jae
pop
call
dec
add
loop
out
aad
sub
int
imul
clc
je
shll
sub
ljmp
dec
mov
int3
dec
mov
gs
hlt
das
inc
push
or
mov
xchg
cmp
orl
add
push
cmc
stos
int3
mov
outsl
and
outsl
rcr
sub
add
stos
cs
add
std
repz
shl
pop
pushf
subl
push
out
adc
cmc
push
pushf
pushf
inc
lret
in
in
dec
fwait
and
xor
sbb
inc
lods
xchg
test
or
xchg
xor
or
add
push
lea
cmp
lds
pusha
mov
repnz
jnp
lret
in
mov
lahf
dec
add
cmpsl
daa
les
sahf
scas
adc
leave
jle
sti
add
push
jmp
xchg
fistpl
and
cmp
ret
mov
mov
cmp
lods
lock
sub
test
xchg
and
and
stos
int3
jl
lods
daa
push
std
iret
pop
mov
test
seto
mov
fsubs
mov
pop
xor
lret
mov
sti
mov
enter
adc
shlb
mov
push
pop
sbb
lds
ja
xchg
cmpsb
xchg
mov
testb
inc
leave
into
data16
in
inc
jnp
xchg
repnz
pop
or
in
xor
jge
xor
xor
sub
mov
js
in
mov
pop
or
adc
insl
scas
lods
jl
cli
hlt
adcl
or
adc
in
sbb
je
aam
adc
ja
jmp
out
jns
loope
adc
xor
push
xor
repz
jecxz
sarl
and
xchg
aas
jle
js
push
mov
pop
push
dec
iret
fmull
inc
dec
push
test
mov
mov
test
repz
adc
pusha
xchg
test
add
std
xlat
cmp
pop
ss
add
inc
movsb
cld
jmp
in
dec
fucomp
or
fsubs
test
jge
xchg
outsb
cmp
lret
xor
divb
cli
test
cmp
out
movsb
in
loop
xchg
sub
xchg
test
sub
lret
xchg
mov
push
lds
pop
mov
inc
sub
mov
sbb
mov
subb
push
scas
dec
pop
adc
pusha
inc
lock
xchg
cmp
ss
pop
notl
sbb
std
push
mov
iret
hlt
push
sti
scas
sbb
sub
adc
lock
out
cmpsl
xchg
inc
cmp
mov
shll
leave
out
sbb
enter
iret
or
clc
sub
sarl
and
es
lods
leave
test
out
shrl
imul
mov
leave
sbb
adc
repz
je
lods
pop
adc
push
lret
in
or
lods
push
sbb
pushf
movsb
div
pop
or
mov
fisttpll
data16
shlb
jne
pop
cmove
outsl
jmp
sub
inc
and
ljmp
push
add
js
les
mov
das
xor
icebp
push
add
ja
sub
jnp
mov
mov
push
inc
icebp
lods
xor
xchg
andb
mov
inc
and
out
fldl
das
push
lods
cmp
sbb
jle
pop
push
inc
adc
stc
xchg
mov
sub
push
and
dec
fucomip
insb
ljmp
jle
popf
hlt
shl
in
arpl
push
mov
xor
dec
xchg
sbbb
push
cmpsl
cmpb
jecxz
adc
xchg
jg
adc
scas
out
frstor
mov
and
dec
dec
dec
imul
inc
mov
mov
scas
mov
icebp
inc
or
int
enter
enter
fwait
nop
lea
sbb
and
insl
dec
inc
test
bound
pcmpgtw
jg
adc
in
jne
test
mov
fldt
insb
sbb
leave
in
fildll
push
loop
adc
lret
add
sub
outsl
in
jbe
ficoml
rcl
adc
add
out
imul
cmp
jl
xor
imul
sbb
cltd
push
xorb
push
shl
daa
inc
push
adc
pop
loopne
mov
mov
adc
xor
and
mov
mov
xchg
lret
sbb
mov
dec
lock
mov
mov
jnp
or
pop
jmp
lds
sarb
or
dec
dec
sti
push
pop
ds
std
gs
fwait
das
cmpsb
in
mov
push
push
loopne
fs
xchg
mov
arpl
inc
pop
bound
int
cmpsb
mov
sub
or
frstor
mov
fwait
jle
jmp
pop
xchg
ret
out
fst
or
mov
push
add
ds
js
lods
inc
mov
repz
or
in
ljmp
fbld
dec
jne
sti
jp
jle
or
mov
imul
and
cmp
fs
fnstsw
outsl
cmp
scas
aam
enter
mov
sub
mov
mov
add
jb
imul
shlb
mov
mov
xor
jae
hlt
cmpsb
imul
jge
aaa
pop
and
movsb
lock
cmp
xor
aaa
imul
pop
dec
cmp
popf
and
xor
push
iret
mov
movl
sti
idivb
xchg
push
sahf
jmp
mov
repnz
scas
dec
sbb
imul
adc
push
or
adc
sbb
cmpsb
fistps
dec
mov
mov
and
mov
test
ror
jno
cs
add
cmc
pop
add
xchg
mov
xchg
push
xorb
and
lods
rorl
bound
sbb
in
nop
and
icebp
jno
or
dec
sub
shl
sbb
dec
mov
and
in
mov
out
sahf
std
xchg
adc
push
cmp
mov
dec
cmpsl
xor
imul
dec
mov
sbbb
pusha
js
loope
add
push
xchg
and
lcall
test
mov
push
into
ret
loope
sbb
fildll
insb
or
scas
xor
sbbl
daa
jecxz
xchg
sub
xchg
push
imul
sub
sub
jmp
shlb
push
dec
mov
ljmp
add
xor
jbe
push
js
jno
sti
mov
jmp
add
xor
or
or
mov
sub
mov
mov
mov
xor
cmp
ja
push
sbb
stos
aaa
pop
xor
mov
stc
mov
xor
jmp
js
je
repnz
gs
cld
mov
and
leave
es
sahf
and
lret
xchg
mov
sbb
imul
mov
push
out
repz
outsl
inc
imul
pop
inc
xchg
ret
mov
xor
adc
lcall
adc
sub
icebp
cld
dec
addr16
shll
push
out
mov
push
ss
sbb
icebp
hlt
das
jle
lds
lods
jmp
cld
or
or
cli
mov
int
lods
and
dec
xchg
and
rcr
inc
popa
bound
mov
mov
dec
xlat
xor
xchg
lock
or
rorl
sbb
pop
push
push
and
pop
or
mov
repnz
push
ficoml
mov
aad
test
adc
sbb
sub
lcall
stc
sti
mov
fldenv
mov
cmpsl
sbb
and
outsb
aam
xchg
mov
and
jb
pop
or
loope
inc
xchg
or
das
adc
and
popl
mov
dec
inc
jno
fstp
sbb
cmp
sub
or
arpl
mov
jmp
cld
mov
fsubrl
ljmp
out
push
dec
ret
out
dec
sbb
out
xor
mov
fcomp
sahf
pop
mov
cmp
subb
mov
mov
sbb
pop
pop
push
andl
inc
lods
nop
pmullw
ja
jb
das
shl
or
mov
xor
es
and
into
dec
adc
mov
cmp
cmp
push
sbb
mov
push
outsl
enter
add
pusha
cli
dec
sbb
push
cmp
cmpsb
add
mov
cmc
jp
fimull
mov
dec
fdivr
inc
dec
inc
lret
mov
sub
or
lods
pushl
mov
dec
inc
pop
gs
xchg
add
repnz
mov
leave
sbb
out
adc
pop
dec
push
xchg
xor
fadd
in
and
or
pop
ja
frndint
scas
fsubl
in
add
sbb
bound
neg
stos
btc
test
scas
call
fimull
in
xor
inc
out
jmp
test
sub
cltd
xchg
adc
rcl
fbld
iret
cmp
icebp
dec
inc
mov
mov
outsl
lahf
xchg
mov
sub
daa
test
popf
pop
std
mov
std
pop
inc
jns
lcall
jmp
je
enter
lret
inc
mov
cwtl
dec
dec
adc
mov
xor
pop
dec
out
inc
pushf
cmp
jno
clc
add
insl
and
rorb
ss
mov
int3
sarl
lcall
adc
xor
enter
or
inc
xor
pop
jecxz
pop
test
xor
inc
dec
scas
fidivrs
inc
mov
mov
iret
popf
mov
xlat
fldcw
sbb
and
mov
or
rorb
push
mov
lods
dec
push
mov
es
imul
insl
mov
sub
leave
jle
jmp
out
shlb
int3
mov
xor
rcr
je
push
dec
inc
ret
or
std
je
or
push
ret
or
adc
jmp
pop
push
mov
in
sbbl
out
roll
filds
fstpl
movsl
jae
mov
incl
xchg
leave
sub
in
adc
js
mov
sub
movsl
sub
out
pushf
insl
or
outsb
mov
imul
repz
ljmp
icebp
push
ds
dec
dec
add
or
ret
mov
jmp
mov
pop
das
imulb
mov
mov
pop
inc
jb
adc
pop
jae
mov
or
add
push
loope
jl
cmp
mov
pop
das
push
lea
das
adc
ret
push
or
sarl
ret
in
mov
fcoml
testl
mov
jns
negl
jecxz
or
popa
leave
aam
lret
mov
push
inc
mov
mov
sbb
jno
shl
cmpsl
mov
cmpsl
jl
out
leave
xor
cmpb
arpl
add
mov
adc
xchg
enter
scas
sarl
stc
pop
std
mov
pop
aad
and
bound
into
shlb
fsubl
pop
mov
insb
mov
aam
pop
mov
jbe
jbe
lods
cmp
rcr
xchg
cld
daa
mov
sub
orl
adc
xor
js
mov
cmp
popa
mov
jae
lret
arpl
inc
cld
sub
fstpl
xor
aad
cmpsl
sbb
outsb
mov
inc
inc
sub
sbb
in
dec
cmc
lahf
jle
repz
mov
dec
or
mov
dec
or
ljmp
ficoml
dec
aaa
cwtl
inc
dec
outsb
subl
xor
mov
and
jbe
insl
gs
lahf
and
fcompl
mov
ja
ja
sub
outsl
sahf
or
dec
xor
cmp
cwtl
lock
out
clc
js
std
loopne
sub
fs
or
cwtl
jg
pop
push
aam
xlat
ljmp
and
fisubrl
and
dec
fisttpll
adc
loop
sub
cs
arpl
mov
add
pop
and
in
outsb
pop
int3
arpl
mov
pop
dec
lcall
xchg
fbstp
nop
push
movsl
sub
push
inc
cmp
cltd
xchg
out
dec
xchg
inc
fldt
pop
rcll
aas
int
daa
xchg
mov
lret
out
add
mov
jl
mov
ret
inc
divb
ret
jo
es
clc
inc
pop
jmp
sbb
adc
jb
mov
in
lcall
mov
inc
in
inc
popa
pop
sbb
popa
test
sub
or
xchg
sub
jl
dec
xchg
xor
mov
in
fsts
aad
outsb
leave
dec
push
jbe
mov
push
scas
stos
sbb
lods
adc
pop
push
daa
cli
int
xchg
mov
jge
js
jns
pop
daa
mov
xchg
jle
fmull
hlt
ret
out
adc
ljmp
nop
in
ror
mov
fs
lret
mov
xor
rorl
xchg
cmpsl
jge
pop
pusha
ja
dec
inc
push
xchg
bnd
std
ss
inc
fsubrl
stos
mov
rolb
mov
cli
mov
mov
push
negl
cmp
daa
mov
cmp
pop
cli
cmp
inc
and
loopne
movl
inc
aam
and
sarb
fs
stos
mov
push
ss
inc
iret
xor
adc
cmp
jno
dec
shll
mov
sbb
push
cmp
cmp
push
xchg
imul
push
mov
stos
and
push
dec
mov
mov
mov
repz
int3
and
cmp
cmp
loope
cmp
iret
mov
xlat
and
mov
inc
mov
fldenv
adc
aad
mov
inc
mov
divl
push
jnp
int
in
pop
mov
sub
fninit
out
insl
xor
inc
pop
mov
incb
std
dec
cmp
mov
cmp
sub
xlat
add
test
test
jnp
xchg
xor
push
dec
std
scas
rcr
insb
enter
out
mov
or
divb
sub
insb
stos
decb
in
pop
int3
mov
inc
ja
insl
pusha
or
xor
js
mov
cli
dec
out
roll
dec
cs
push
push
ljmp
mov
add
xchg
sbb
mov
fsubrl
fwait
mov
mov
mov
xorl
sbb
rcrb
push
cmc
fwait
mov
pop
or
fs
pop
jg
add
es
icebp
mov
or
mov
aaa
enter
mov
rclb
cmp
push
mov
inc
sbb
into
jl
jle
cld
pusha
push
push
jp
imul
aam
repz
sub
mov
in
sbb
stos
cmpl
cmp
sbb
shrl
sub
shll
icebp
mov
imulb
xchg
add
int3
jbe
out
mov
sbb
or
movsb
or
sbb
jb
push
hlt
sbb
mov
push
jmp
nop
mov
out
push
xchg
jbe
clc
sarb
and
aaa
add
or
arpl
imulb
lret
push
mov
adc
pushf
jle
cli
xor
or
sbb
sbb
and
pop
dec
sub
call
inc
bndstx
lea
sub
sub
xchg
mov
push
pop
imul
lds
push
xlat
push
lcall
scas
sub
inc
push
shrb
cli
verw
das
and
or
inc
add
cld
lock
xchg
pusha
push
int
mov
sbb
pop
aas
add
rolb
xchg
jb
rol
xlat
push
imul
dec
jle
into
call
xchg
arpl
int
test
xchg
adc
out
lds
fisttps
mov
xchg
cmpsl
pop
and
and
sub
pop
mov
mov
cmp
xchg
jle
push
ret
pop
shrl
mov
mul
or
cmp
shl
movsl
mov
js
aas
addl
dec
clc
ja
and
adc
inc
or
add
jge
std
jecxz
scas
lods
cmp
inc
mov
addr16
shlb
jns
lock
add
mov
sbb
ljmp
mov
push
ret
aam
adc
pop
call
pusha
int
add
jnp
popa
imul
in
pop
out
ret
push
orb
lods
or
int
jnp
xchg
dec
imul
mov
into
jno
mov
repnz
mov
js
cmc
gs
and
xchg
fnclex
out
nop
mov
mov
sahf
add
iret
and
mov
lods
sbb
sub
outsl
jnp
in
repz
xor
dec
out
and
cmp
fmul
and
out
cmpsl
rorl
mov
jno
cmpsb
pop
test
in
or
mov
imul
and
push
mov
aas
push
or
cmp
mov
mov
loopne
aam
int3
mov
pop
fcoms
data16
pop
sbb
fadd
lds
rclb
es
les
je
dec
mov
pop
mov
shrb
cmp
dec
in
jbe
lock
mov
add
es
cld
xchg
popa
ljmp
pop
xor
pop
insb
jno
sbb
mov
scas
pop
into
or
dec
xchg
xchg
xor
mov
pop
jmp
leave
add
sub
inc
jae
jp
dec
lret
aad
pop
sti
inc
mov
sbb
and
dec
leave
pushf
mov
out
fldenv
sbb
push
gs
movsb
jnp
add
stos
roll
fcoms
enter
ja
in
ss
or
jle
add
sub
jl
sub
cltd
cmpsb
popa
sub
cmp
int3
subl
sub
jbe
pop
push
xchg
pop
jmp
outsb
fildl
adc
mov
icebp
pop
cmpsb
push
jmp
fbstp
in
mov
add
js
mov
lret
mov
rclb
push
lods
addl
xchg
inc
mov
cld
in
push
mov
cs
xlat
je
rclw
dec
pop
mov
es
xchg
push
daa
sahf
lcall
imul
pop
arpl
pop
stos
stos
ja
repz
out
add
ljmp
xor
cmpsb
and
fcompl
dec
xchg
lret
push
dec
lahf
pop
or
out
out
imul
push
sub
push
mov
out
int
dec
int3
add
fsubs
bound
jle
push
jns
test
xor
out
and
push
sar
cmp
pop
loop
jno
dec
mov
mov
lret
sbb
popa
pop
stc
sub
dec
xchg
adc
mov
sbb
add
ja
push
cltd
call
push
mov
mov
jmp
jmp
mov
idivb
ret
xchg
xor
pop
sbb
ficoms
pusha
jge
jae
mov
sbb
inc
mov
and
scas
xor
dec
lahf
stos
cmpsb
shrl
es
iret
popf
insl
sbb
push
mov
and
mov
fstpl
push
fs
sbb
fldl
shlb
dec
pusha
lahf
loop
pop
repnz
adc
push
lea
sub
sub
rol
push
icebp
sub
rcl
imul
or
cmp
cld
in
js
pop
pop
mov
fadds
ds
test
and
sub
enter
xchg
mov
sbb
fldcw
popf
pop
mov
andb
jp
xchg
xchg
pushf
cmp
stos
adc
ret
xchg
and
inc
es
xchg
lret
sub
or
xor
jne
ss
leave
and
jo
aam
jae
jne
mov
in
jb
lods
push
in
into
jp
gs
cmc
pop
xchg
fsubrl
inc
fxch
cmp
mov
mov
outsl
mov
test
jno
adc
fwait
dec
lods
push
pop
fistpl
xchg
into
cli
in
dec
out
xchg
push
movsl
loope
pop
inc
push
xor
sub
mov
mov
pop
cmp
daa
les
xlat
xor
fcmovnbe
icebp
lret
lods
out
scas
nop
push
xor
adc
nop
call
cmp
data16
ss
xchg
clc
add
mov
jmp
dec
mov
mov
cs
rolb
cld
test
xchg
addps
cmp
stos
push
mov
cmp
push
push
inc
lods
mov
jmp
sti
inc
lret
add
inc
addb
add
lret
out
sbb
rcll
shll
std
mov
lret
and
ljmp
pusha
sbb
adc
adc
sbb
sti
pop
jmp
clc
jae
push
das
xchg
fidivrs
popf
push
orb
adc
rorb
int
addr16
lds
and
dec
dec
mov
movsl
push
mov
sbbl
mov
sub
loope
mov
or
cld
ret
jbe
iret
add
scas
pop
adc
xor
pop
pop
adc
push
pop
sub
and
adc
adc
call
lcall
adc
lcall
icebp
xor
mov
call
or
rolb
aas
insb
mov
inc
ljmp
outsb
pop
xchg
fldt
xchg
scas
shll
push
popf
lcall
scas
inc
repnz
pop
popa
out
mov
jo
in
ljmp
repnz
push
dec
enter
adc
mov
inc
xchg
mov
adc
in
push
jge
outsb
lret
aas
add
lahf
cmp
push
inc
mov
leave
iret
pop
mov
ret
cmp
and
and
loopne
jge,pt
and
inc
cmp
cld
mov
enter
pop
ja
xchg
push
pop
add
cs
pop
xchg
pushf
inc
leave
cmp
mov
mov
cmp
jl
jge
imul
inc
sub
adc
rcl
scas
insl
jmp
test
sub
or
stos
shlb
loop
cs
mov
stos
pop
pop
xchg
push
ret
mov
cmp
out
xlat
and
popf
and
or
or
adc
stos
and
or
and
int3
cmpl
xchg
iret
daa
add
mov
int
es
xchg
lods
cli
cmp
xchg
cld
jle
test
lea
ss
pushf
jg
jno
bound
dec
loopne
js,pt
dec
shr
sti
addr16
and
mov
add
adc
pushf
adc
fwait
xlat
mov
pop
pop
cmp
xchg
mov
or
test
pusha
push
nop
push
popf
repz
shrb
cmp
jno
xchg
pop
xchg
mov
popa
xchg
test
push
jnp
and
shl
into
inc
mov
xor
pusha
outsb
pop
ret
lret
jmp
lds
outsl
inc
lcall
cs
mov
sbb
inc
push
jno
mov
outsl
xchg
cltd
shll
xchg
movsl
hlt
mov
sub
es
aas
mov
testb
fldt
pushf
push
and
sbb
mov
insb
sub
push
cmpsl
scas
inc
sub
aam
outsl
popf
jnp
pushf
push
dec
aaa
and
sub
fisttpl
sub
mov
lods
repnz
aas
dec
repnz
sub
xor
shrb
lods
pop
iret
adcb
or
push
mov
inc
or
mov
arpl
lds
add
lret
xchg
dec
dec
mov
cmp
add
daa
mov
fstpt
movsl
mov
xchg
sub
and
xchg
lcall
xchg
jo
pushf
add
cmp
sahf
shrl
add
jmp
sbb
cmp
repz
fmulp
xor
sarb
sub
xor
mov
jne
push
push
cmc
push
xlat
jb
adc
out
push
jbe
cmp
out
jno
xchg
add
mov
sub
xchg
xchg
mov
lock
mov
loopne
add
sub
stc
jb
movsl
sbb
subl
add
adc
add
mov
adc
sub
adc
xchg
cmp
jge
add
or
sbb
mov
test
idivb
les
dec
sub
xchg
test
fwait
adc
sar
es
rcll
and
and
stc
pop
clc
jne
mov
int3
pop
mov
insl
mov
push
das
insl
or
stc
jnp
ret
cltd
xchg
out
fsin
adc
loopne
push
mov
adcl
popa
jbe
and
xchg
pop
ljmp
jmp
jb
adc
push
je
mov
insb
out
scas
aad
sub
jp
imul
lret
ds
lock
pop
fcmovnb
out
or
mov
sub
in
fsub
mov
mov
mov
bound
lods
out
pushl
mov
push
xor
cmpsb
rcrb
push
jns
pop
cmp
push
mov
ja
dec
cmp
xchg
mov
je
gs
jge
cltd
push
movsb
mov
pop
enter
add
pop
xor
cmpsb
pop
out
fsts
pop
inc
add
nop
into
sub
notl
outsl
add
dec
sub
js
push
or
mov
bnd
fdiv
add
out
sbb
iret
mov
jg
movsl
inc
inc
repz
pop
add
orl
fdivl
mov
icebp
inc
sub
mov
in
lds
loope
outsb
lock
xchg
xchg
idivb
add
push
fcom
sbb
cmp
mov
stos
adc
aad
lahf
mov
and
lods
orl
push
in
retw
dec
rorl
fs
pop
pop
or
xor
ljmp
scas
in
je
mov
pop
push
sahf
nop
loopne
add
outsl
push
in
adc
xor
add
test
xchg
rorb
inc
addr16
cmp
les
mov
jg
mov
fcomps
inc
int
sbb
jmp
js
or
fs
addr16
mul
and
push
mov
fcmovb
int3
xchg
scas
aaa
movsl
lcall
push
loope
out
fmul
or
insb
pop
repz
and
out
mov
aas
push
sub
pop
jge
jmp
add
mov
hlt
cmp
sahf
jo
jns
xor
adc
js,pn
int3
ret
inc
lock
sub
insl
cmpsb
movsb
dec
and
jp
sub
test
push
push
cmpb
lea
mov
iret
mov
cld
or
orl
test
in
je
stc
xlat
pop
bound
pop
fisubrl
cs
add
jge
jnp
mov
cmpsl
push
sub
xor
fidivs
add
leave
fwait
or
ret
faddl
add
aad
mov
push
shl
jle
dec
ret
insl
dec
jae
cmp
mov
push
bound
adc
xchg
adc
jne
insl
out
sbb
ds
outsb
cmc
into
aam
push
std
addb
dec
xchg
inc
stc
push
mov
mov
arpl
inc
into
mov
movsl
lcall
add
xchg
lods
push
xlat
cmpsl
or
adcb
daa
ret
mov
movsl
inc
je
insb
sbb
xor
sbb
lods
mov
xlat
test
xchg
das
jae
lcall
out
fsubl
in
push
mov
xor
sbbb
dec
divl
pusha
divl
xor
mov
in
xchg
pop
call
push
outsb
in
mov
scas
and
mov
pop
inc
lret
mov
mov
pop
popa
leave
jo
jbe
les
js
mov
push
mov
sub
pop
int3
push
add
out
push
cmpsb
loopne
jmp
int3
lret
add
jne
scas
and
hlt
push
loop
insb
add
pop
xor
scas
push
mov
outsb
andl
dec
jbe
into
xchg
rorl
cmp
adc
pop
inc
jmp
sti
jge
int3
loope
xor
mov
sbb
sahf
pop
sbb
xor
mov
stos
push
xchg
out
negb
icebp
jp
jecxz
pop
jno
sub
cld
outsl
ret
stos
ljmp
fwait
out
test
test
xchg
in
mov
outsb
xor
jmp
push
ror
mov
mov
add
fidivrl
jnp
adc
push
xlat
fiaddl
addr16
ret
inc
adc
mov
adc
push
jge
stos
mov
fisubrl
push
loop
std
mov
in
xlat
mov
dec
scas
insb
mov
inc
push
cmpb
lret
popf
ja
rcll
jbe
add
scas
cwtl
mov
pop
ljmp
or
shll
mov
add
fidivrl
enter
mov
jae
and
aad
test
xchg
xor
pushf
sub
inc
xor
cli
cmc
and
lcall
repz
clc
outsl
push
dec
testb
and
and
sbb
into
nop
mov
xchg
jecxz
idivl
out
fisubrl
xor
or
dec
daa
pop
pushf
xchg
pop
hlt
subl
mov
cmp
push
inc
push
pop
add
loope
or
xchg
xchg
adc
stc
fcomip
and
dec
cmp
push
std
frstor
jbe
jne
jb
stos
sub
xchg
push
shll
sbb
call
jno
rorl
fstl
mov
stos
scas
ret
adc
dec
ficoml
sub
and
push
adc
ror
data16
jge
sbb
outsl
jmp
mov
push
inc
enter
fbstp
lds
jnp
outsb
leave
add
shrl
mov
cmpsl
sub
mov
jecxz
pop
int
sbb
fucomip
popf
cmc
addr16
sub
mov
push
call
into
or
and
fabs
jne
sbb
mov
fisttpll
aaa
add
sti
mov
xchg
cmp
cli
jne
lock
mov
xchg
js
xor
mov
dec
jnp
out
test
mov
shlb
dec
aas
and
jge
cwtl
dec
sbb
inc
jne
das
cltd
fistl
outsb
lods
adc
and
addr16
ds
inc
inc
movsb
jge
xchg
or
adc
pusha
add
arpl
sbb
mov
mov
push
mov
pushf
loop
shll
std
ret
mov
std
inc
xor
stos
fdiv
sub
dec
insl
gs
fimuls
cmp
sti
push
cltd
nop
mov
test
sub
jae
call
sub
mov
fcompl
or
sarl
adc
pop
xchg
fsubrl
cli
mov
inc
xchg
jle
je
fiaddl
std
or
and
cmp
ds
in
arpl
sub
mov
pop
mov
inc
in
add
dec
jae
ror
dec
movsl
mov
test
xchg
pop
jmp
adc
mulb
sahf
into
stc
test
mov
or
or
imul
inc
xor
ja
imul
fnstcw
adc
ror
pop
es
xor
inc
push
sbb
js
dec
add
in
jge
sbb
jmp
lret
push
sub
int3
mov
push
std
mov
add
push
jg
mov
pop
adc
mov
movsb
shll
mov
daa
push
lret
aam
jmp
mov
cmp
call
push
repz
lods
push
pop
xor
jge
mov
xchg
mov
in
jge
icebp
xchg
or
daa
in
xlat
cltd
xchg
or
iret
inc
inc
add
push
and
cmp
mov
adc
fildll
lret
push
cmp
cltd
je
ret
cmp
add
push
cmp
jmp
xchg
aaa
stos
mov
sarb
adc
sbb
cmp
sti
adc
stc
daa
loop
testb
inc
jnp
fnstenv
and
inc
js
test
int
push
jl
lahf
sbb
hlt
inc
and
inc
outsl
or
or
mov
inc
add
imul
bound
dec
or
xchg
jmp
out
mov
xchg
loopne
jg
or
inc
aas
dec
cs
jnp
jbe
push
jno
push
jmp
in
outsb
icebp
and
enter
ds
loope
aaa
mov
rorb
les
cltd
push
pop
sbb
mov
mov
push
movsl
imul
and
xchg
push
xor
mov
push
repz
sahf
xor
xchg
jno
xchg
or
mov
bnd
shrl
lock
adc
pop
and
dec
in
into
xchg
in
pushf
inc
fucomi
sub
inc
adcl
out
or
mov
cmp
arpl
stos
jmp
cmc
ljmp
inc
orl
negl
out
xchg
clc
or
dec
mov
xor
pop
sub
imull
inc
add
in
rcr
enter
aam
xor
addr16
hlt
adc
xchg
aas
sub
rol
out
inc
insl
mov
or
pop
mov
mov
sub
ret
ja
movsl
mov
xor
std
rorb
adc
dec
loope
jmp
sbb
scas
cmp
xchg
dec
das
sub
data16
jns,pt
sbb
lods
sti
mov
test
add
mov
das
roll
add
sti
mov
sarb
sub
pop
aaa
mov
imul
cmp
push
add
inc
shll
push
mov
mov
inc
lods
arpl
mov
pusha
fnstenv
sub
inc
mov
push
js
outsl
cwtl
xchg
xchg
push
sub
inc
in
jp
loope
xor
mov
loope
mov
sarb
mov
popa
ret
add
loop
sbb
inc
xchg
cmp
ficomps
test
decb
addr16
mov
aam
adc
sub
loop
add
inc
aam
xchg
in
mov
and
mov
xorl
sarb
lods
test
adc
push
rorb
xchg
and
pop
push
mov
rcl
and
fistpll
push
add
and
fisubl
imul
jo
adc
popa
and
cmp
imul
jb
lock
andb
mov
push
jne
add
jmp
out
mov
jb
andb
std
test
mov
mov
hlt
mov
in
jmp
rcrl
dec
stos
out
push
cmp
mov
add
iret
lahf
movsl
push
xchg
push
nop
dec
dec
dec
sbb
or
add
daa
insb
jl
stc
int3
mov
scas
mov
and
or
pushf
mov
dec
iret
cmc
jnp
push
enter
jecxz
cld
jp
rcrb
push
pop
and
lea
sbb
pop
dec
fisubs
inc
lret
adc
iret
loopne
in
std
mull
jnp
mov
es
sbb
sbb
arpl
flds
outsl
test
imul
cwtl
adcb
loope
xchg
and
sbb
jl
rol
xchg
out
mov
movsb
and
hlt
xchg
repz
add
push
sarb
and
pusha
dec
dec
xchg
ret
lahf
dec
mov
lret
inc
mov
xchg
xor
adc
xor
stos
es
gs
push
fcmovnbe
addl
les
jp
std
jae
inc
adcl
dec
int3
in
loop
pop
jns
and
inc
je
rolb
int3
notb
insb
pusha
mov
out
jns
sbb
fsubrl
inc
fisubrl
dec
sbb
push
dec
outsb
add
dec
and
dec
pop
dec
fstps
data16
push
pop
aaa
insw
cltd
fs
push
mov
aad
hlt
inc
repz
mov
push
and
ss
lea
fstps
pop
mov
sbbl
cli
push
insl
in
icebp
loopne
add
pop
push
cmpsb
dec
jo
and
mov
jl
xorps
pop
inc
and
int3
jmp
xchg
jge
imul
mov
cltd
ss
test
or
gs
ret
out
sbb
lock
inc
xorb
je
push
xor
mov
or
dec
jl
mov
cwtl
enter
ret
or
push
jg
jl
and
adc
test
stos
jp
pop
mov
inc
repnz
std
pop
bound
push
and
pop
std
add
dec
jecxz
or
and
inc
repz
pop
cmp
xchg
incb
fmull
xchg
dec
jmp
lret
mov
jmp
rorb
out
jp
fistps
fldt
ret
push
sbb
fs
cld
sahf
mov
loopne
inc
outsl
jae
paddsb
xor
cld
roll
adc
pop
sti
add
popa
out
outsl
int3
sbb
loop
cwtl
out
mov
into
out
fdiv
dec
xchg
loope
lods
sbb
xchg
pop
pop
pusha
mov
movsb
pop
xor
mov
add
sub
or
in
out
out
int3
mov
or
adc
loopne
shlb
jne
les
insl
add
pop
add
shrl
sbb
mov
dec
outsl
rcrb
or
xorb
push
cmpsb
mov
subl
mov
jno
rorl
push
xchg
test
adc
stos
daa
scas
and
jbe
nop
xor
fdivrl
sub
and
xor
cwtl
icebp
pop
mov
std
sti
loope
stos
cmc
inc
push
enter
jbe
insb
repz
ljmp
add
pop
cli
sbb
jmp
into
call
mov
cmp
fwait
pop
or
push
mov
sbb
jno
es
pop
js
mov
cmp
ficomps
gs
mov
cmpsb
sbb
rol
fnstenv
sub
call
outsl
rorl
xor
adc
jle
movsb
adc
and
cs
outsb
and
loop
jo
and
gs
add
mov
sbb
jmp
aad
pop
rcrb
int3
aad
push
mov
adc
leave
icebp
inc
add
jae
bound
fsubs
add
sbb
xchg
and
lea
jne
fst
ffree
sbb
fs
mov
xchg
testl
mov
mov
sbb
fildl
dec
lds
and
shrl
sarb
xchg
enter
pop
mov
mov
jne
rcrl
dec
add
pusha
xor
mov
jo
sbb
sbb
adc
or
into
loop
push
xor
ffree
push
test
mov
jno
dec
or
imul
je
imul
movsl
adc
in
inc
sbb
sub
fisubl
cmp
pop
pop
push
jp
dec
outsl
aaa
popf
and
xchg
test
je
inc
jae
popa
mov
jmp
mov
aas
or
cmp
es
fstpt
sarl
insl
mov
pop
scas
test
loop
movsl
sbb
sarl
or
jle
mov
push
ja
fsubl
or
sbb
outsb
adc
test
xchg
push
aaa
dec
rcr
push
fadds
jnp
push
fldt
cmp
xor
xchg
xor
xchg
cmp
fildll
cltd
jmp
cmpsb
push
mov
scas
dec
xor
dec
stos
mov
es
fisubrs
inc
fadds
xor
sub
call
ficomps
jb
test
out
or
pop
jecxz,pn
mov
lret
and
inc
xor
ret
stc
repz
adc
imulb
movb
call
ret
adc
das
pusha
mov
push
mov
fidivs
cmpsb
push
imul
mov
fwait
and
pop
mov
mov
add
sub
clc
sbb
lahf
mov
jmp
shr
lret
ror
sti
ss
mov
inc
push
pop
add
adc
into
add
sub
scas
mov
sbb
ss
and
lea
dec
add
imul
movsl
push
mov
dec
je
mov
clc
inc
lcall
lods
mov
xchg
repz
add
sbb
cwtl
mov
sti
rcll
je
loopne
fcmove
arpl
test
pop
ds
pop
mov
sub
jge
push
stc
jo
inc
add
pop
pop
push
js
xchg
mov
xchg
jne
jge
xchg
push
orl
inc
cltd
pusha
aas
dec
sbb
adc
sub
aad
pop
fwait
adc
xchg
push
cmpsl
je
mov
mov
mov
xor
push
jnp
or
sub
ret
jo
test
loop
mov
mov
cld
cld
lds
int
insl
add
jle
test
icebp
test
mov
notl
xchg
sbb
stos
mov
xlat
sbb
in
movsb
pushf
xor
pop
xlat
insb
push
negb
addr16
pop
adc
mov
xor
loop
dec
add
stos
roll
push
cmp
cmc
test
mov
sahf
inc
lret
jnp
lret
ds
cmp
cli
je
mov
adc
push
pop
scas
adc
stc
clc
jle
push
ficoml
pop
mov
mov
outsb
mov
inc
stos
je
sub
adc
outsb
dec
pop
xchg
cmpsb
jno
lods
and
push
sbb
shr
xor
jle
or
movsb
inc
test
lock
scas
mov
out
mov
xor
subb
inc
mov
jge
clc
mov
pop
inc
idivb
mov
push
dec
std
popa
lds
movsb
dec
lahf
cmp
xchg
dec
sub
or
aad
mov
and
lods
data16
insl
pop
aas
lret
xor
testl
lahf
cltd
add
nop
scas
push
xor
call
fucompp
call
push
mov
or
sub
mov
push
cmp
inc
inc
mov
lahf
mov
adc
dec
pop
push
mov
push
pop
sbb
dec
xchg
xchg
aam
ja
mov
andl
mov
pushf
out
jb
xchg
fnstsw
dec
sbb
cmpb
and
pushf
nop
int3
gs
icebp
pop
xchg
dec
sub
lret
xchg
mov
test
imul
cmp
pop
xchg
test
adc
sub
pop
xchg
mov
mov
dec
xor
push
push
add
mov
cmp
aaa
lods
insl
jne
dec
xchg
sub
add
mov
imul
repnz
or
mov
xchg
fwait
sub
les
mov
adc
dec
and
mov
cmp
sub
lock
addr16
sarl
xor
and
mov
xchg
imul
fwait
push
test
sub
pop
xchg
xor
sbb
fcomip
fiadds
push
aad
mov
push
push
xlat
mov
das
xchg
or
push
dec
enter
mov
cmp
xchg
push
loopne
mov
sub
outsl
mov
add
jbe
push
push
jne
test
loope
xlat
movsl
or
mov
sarb
rcrb
jns
mov
mov
dec
cs
test
insl
or
jge
sarl
subb
jbe
xor
mov
dec
aam
stos
mov
adc
inc
xchg
movsb
dec
cmpsl
idiv
fucom
movsb
notl
sbb
sub
inc
dec
out
push
shrb
mov
sbb
ja
dec
rol
dec
mov
jge
out
jmp
in
adc
xor
mov
jbe
fwait
jge
movb
mov
insb
dec
aaa
leave
pop
dec
rcrb
in
bound
in
shrb
mov
or
mov
xchg
data16
inc
std
pop
xchg
push
das
popa
inc
xchg
cmp
xchg
aad
in
mov
jecxz
inc
and
push
es
out
xor
fdivs
cmp
imul
std
orb
push
stos
fnstenv
int
test
cmp
cmp
ds
repnz
cmp
sub
xchg
in
mov
fisubrs
addr16
jns
jne
add
inc
call
add
push
loope
push
fisttpl
cmp
ret
imul
js
add
push
scas
mov
fmul
xchg
sbb
fbld
jae
icebp
insb
xchg
lret
fcmovnu
cmp
sarb
jge
addl
add
loope
push
lea
scas
add
clc
push
pushf
call
outsl
sti
jb
jo
inc
imul
repnz
cmp
pop
in
iret
mov
dec
push
sub
xchg
xchg
inc
push
lea
cmp
or
aas
mov
pop
jecxz
int
fcomp
jle
xchg
xchg
cmp
mov
xor
adc
popf
out
xchg
push
sti
mov
jg
pop
mov
shr
mov
std
lods
jae
or
lret
fs
bswap
inc
dec
mov
mov
sti
test
or
mov
mov
jle
fdiv
jp
xchg
sub
or
and
pop
les
push
pusha
and
sub
fucom
jbe
aas
repnz
ret
stos
test
add
push
cmpsb
sub
mov
mov
xchg
enter
addr16
mov
mov
scas
xor
ds
cmc
mov
lret
mov
sar
add
hlt
inc
cli
pop
pop
pop
insl
jg
or
jnp
divb
push
sub
sub
bound
sbb
pop
out
scas
movsl
inc
xorb
xor
mov
inc
iret
jecxz
jge
hlt
cltd
inc
js
sub
int
jbe
jecxz
cmp
jbe
push
mov
enter
insb
inc
sbb
fisubrl
push
fbstp
push
fildll
mov
xorb
std
mov
dec
mov
dec
pop
fwait
cmp
out
outsl
out
lock
repnz
cmp
orb
scas
sub
out
and
fdivp
punpckhdq
mov
jno
daa
xchg
sarl
mov
movsb
mov
imul
xchg
sbb
xchg
ficoml
ss
and
roll
push
pusha
and
jp
fbld
pop
clc
push
and
cli
dec
xor
mov
addr16
in
fsubp
fcmovu
jb
push
mov
rcr
add
enter
push
inc
cs
stc
leave
mov
mov
lds
xor
push
fldt
jno
push
repnz
leave
mov
adc
iret
in
xor
jp
sahf
movsl
movsl
cmp
adc
pop
addb
inc
jns
mov
push
repnz
bound
lahf
pop
add
jne
cwtl
decl
cmpsl
lret
cli
mov
push
imul
mov
adc
bound
add
shr
lcall
mov
lret
pop
lock
mov
sub
scas
leave
sub
ja
inc
inc
and
clc
jnp
push
jae
dec
fs
movsb
mov
xchg
pop
and
outsb
aaa
cmpsb
sbbb
test
pushl
mov
dec
popf
add
pop
cmc
mov
test
mov
mov
test
cwtl
and
dec
cmp
in
scas
cmpl
xor
xor
adc
lahf
cmpsb
lahf
xchg
std
jne
es
stc
pop
arpl
inc
fdivrs
mov
mov
mov
or
jmp
pop
or
mov
adc
into
test
int3
and
insl
jl
arpl
mov
das
push
lds
cmpsl
or
lods
jne
sub
cmc
xlat
je
cmc
mul
sbb
jmp
mov
int3
pop
sarl
jno
cwtl
add
add
ficoms
incb
mov
cli
xlat
inc
fucom
inc
dec
cld
push
int3
insl
enter
loop
pushf
mov
into
fxam
sar
in
pop
add
mov
shrb
add
gs
push
lcall
sbb
mov
aam
enter
lahf
xor
mov
fistpll
test
stc
xchg
pop
js
adc
cmp
repz
mov
pop
out
aad
xlat
xlat
sbb
and
popa
dec
arpl
mov
cmc
gs
pusha
stos
sti
add
pushf
xor
lahf
outsl
pusha
aaa
dec
iret
xor
repnz
push
scas
nop
arpl
sbb
xchg
lcall
mov
lods
fsubrs
shrb
push
pushf
adc
pop
outsb
cltd
push
or
push
jae
lods
daa
dec
xor
sub
pop
push
pop
sahf
ret
or
divb
add
sub
punpcklwd
adc
xor
xchg
ljmp
sub
cmp
test
scas
jo
in
xor
jecxz
add
xchg
lret
xchg
xchg
and
lahf
aaa
cs
in
sbb
adc
and
mov
push
cmp
mov
and
sub
iret
pop
pushf
addr16
insl
mov
lea
xor
std
in
jmp
shrl
ret
xor
ret
adc
xor
xchg
inc
aam
cld
jp
fdiv
pusha
dec
cltd
sub
fnstsw
bnd
mov
enter
aad
popf
push
push
mov
sub
jmp
pop
mov
jo
hlt
mov
and
in
test
cmpsl
mov
xor
out
sbbl
outsb
in
in
les
mov
mov
fwait
and
xchg
insl
jl
and
je
fnstcw
icebp
sub
sub
mov
je
shl
or
decb
mov
fmuls
lea
jb
insb
inc
popa
fiaddl
insl
jnp
fsubs
sbbl
cmp
push
nop
mov
mov
out
dec
icebp
fstpt
add
jmp
mov
cmpsl
mov
jb
mov
or
scas
sti
adc
jbe
mov
sbb
movsl
cmc
pusha
js
inc
push
popa
cmp
and
mov
testb
xor
repnz
rolb
or
pop
sub
loope
adc
lea
or
jecxz
mov
scas
cmpsl
mov
shlb
lahf
mov
push
lds
sbb
mov
loopne
enter
fnsave
mov
and
push
sbb
adc
and
sahf
scas
jmp
outsl
xchg
jg
in
or
int
test
or
dec
jle
scas
sub
out
and
movsl
xchg
test
adc
push
push
sbb
sahf
shlb
lahf
pop
and
repz
or
ljmp
cltd
icebp
push
jb
js
ret
out
outsl
fs
pop
test
mov
sub
cs
cs
sbb
fisubrl
fdivrs
mov
jne
inc
dec
inc
scas
cmp
popf
jno
add
jno
cmp
test
lahf
jl
adc
aam
sbb
inc
or
shlb
jle
icebp
stos
push
sub
jnp
inc
xor
loopne
es
pop
rcll
cltd
fidivrs
lods
adc
add
mov
clc
inc
or
xchg
xchg
fstps
sti
in
cltd
sbb
sbb
lods
rorb
mov
scas
mov
cmp
pop
xor
call
popa
push
mov
aad
ljmp
fisubrl
xchg
sarl
push
in
and
dec
and
lahf
sub
pop
push
arpl
mov
shlb
ds
cmp
cmp
adc
mov
aam
pop
arpl
cs
das
aad
sbb
ljmp
cwtl
cmp
lods
clc
aaa
pop
adc
jmp
jne
std
mov
loope
scas
sti
mov
push
xchg
ficompl
and
mov
push
leave
adc
add
outsl
or
in
jne
jecxz
jnp
mov
sub
fsub
bound
cld
loope
or
mov
negl
adc
pop
inc
mull
cmp
bound
push
adc
mov
imul
mov
out
jb
ds
mov
xchg
loope
jl
cld
and
loop
repz
dec
ficoml
jmp
mov
popf
push
xchg
sbb
imul
andb
and
mov
pop
or
pop
mov
movups
xchg
lods
xchg
adc
push
cmc
or
in
stos
and
out
into
test
mov
lea
sbb
aaa
jae
mov
movl
hlt
xlat
das
adc
pop
cmp
jo
inc
imul
out
ret
js
lret
rolb
push
repz
inc
xchg
lcall
adc
mov
or
andb
jbe
ljmp
arpl
pop
das
mov
mov
xchg
shll
inc
dec
movsl
data16
cmc
cmp
push
aad
imul
mov
call
cmp
inc
mov
imul
and
cmp
xor
outsb
adc
sarl
enter
xor
mov
std
stc
xchg
pop
dec
cmp
test
neg
push
xor
popf
xlat
test
pusha
and
or
mov
or
or
jl
and
call
inc
data16
dec
jmp
adc
int3
loope
filds
rorb
sub
std
and
lods
das
xor
inc
pop
pop
aaa
xorb
push
or
push
dec
out
jne
into
mov
adc
dec
cmc
xor
dec
jl
mov
cli
stos
mov
xchg
lods
fsubs
inc
je
into
lahf
pop
scas
ljmp
test
fidivrl
pop
sbbl
push
insb
jp
jp
adc
aas
cmc
mov
loop,pt
cltd
jb
push
mov
mov
adc
insl
pop
fidivs
adc
cmp
test
jmp
sub
imul
sub
xchg
icebp
xchg
mov
cmp
adc
out
lahf
sar
dec
add
repnz
xchg
xchg
pop
rcll
and
mov
enter
ficoml
pop
or
pop
mov
mov
loop
cld
repz
inc
or
aad
sub
xchg
outsb
rorb
stos
pop
mov
mov
fcmovb
jb
xchg
mov
fwait
push
mov
xor
mov
mov
arpl
pushf
ss
dec
test
clc
add
movsl
pop
addr16
popf
sub
cmp
negl
mov
adc
xorb
inc
jmp
inc
rclb
notb
xchg
cmp
andl
inc
outsb
jge
lea
or
incl
fldl2e
xchg
cmpsl
lret
stos
nop
jecxz
dec
and
mov
adc
and
add
add
jmp
fmuls
pusha
add
xor
mov
fdivs
pushf
repz
cmc
add
les
adc
jno
add
mov
lods
or
pushf
iret
pop
push
cmc
mov
dec
lods
dec
dec
inc
sub
cmpb
jge
sub
push
jb
in
sbb
int
adc
sub
repz
sar
mov
aam
fstps
or
sbb
mov
inc
stos
clc
insl
add
mov
sahf
loope
cwtl
test
adc
mov
idivl
data16
inc
in
out
cmpsl
jns,pn
lods
or
or
xor
cmp
sbb
out
push
fimull
mov
ljmp
sub
movsl
fwait
mov
sbb
mov
and
shlb
popf
test
or
mov
pop
fidivs
jle
adc
mov
ds
imul
ja
mov
mov
ja
xor
lods
cld
dec
stos
addr16
test
sbb
out
cmp
dec
pop
mov
lret
pop
test
inc
push
daa
mov
lcall
loop
mov
and
xor
popa
lea
pop
push
std
addb
mov
div
nop
mov
lret
pop
xchg
adc
ret
pop
fistpl
dec
adc
xor
gs
notl
ljmp
adc
add
sub
jns
xor
jge
cmp
orb
push
pop
cmp
push
push
mov
lea
dec
and
call
add
cmp
jmp
insb
mov
xor
rcrl
mov
or
fisttpll
clc
inc
xlat
sbb
xchg
lret
cmpsb
test
add
lock
pop
push
mov
ljmp
stos
lds
inc
sar
or
sti
gs
pop
sub
jg
daa
lods
pushf
js
lock
and
push
int3
movsb
int
xor
call
fnsave
imul
sbb
aam
les
jmp
dec
in
test
push
xchg
xchg
aas
and
sahf
cmpl
and
add
pop
mov
jne
cmp
daa
pop
lahf
fidivs
arpl
ds
jo
cli
lcall
sub
dec
jecxz
or
bound
bound
js
jnp
mov
push
imul
outsb
mov
pop
dec
lds
outsb
or
inc
lcall
xchg
int3
je
push
mov
loope
inc
dec
mov
sub
dec
shll
fnsave
aam
lret
jae
add
in
ret
adc
lea
or
int
lahf
sub
add
jns
ja
cld
js
add
imulb
ds
popa
movsl
adc
stc
xor
inc
add
fnsave
nop
inc
sub
in
push
cmp
arpl
adc
lcall
sti
sbb
jbe
or
jns
cltd
inc
cli
adc
insb
sbb
fildll
cld
and
pop
cltd
in
add
or
cld
insl
dec
icebp
mov
loopne
test
pop
mov
dec
mov
push
xchg
popf
cmpsl
cli
sub
mov
mov
pop
inc
rorl
testb
in
xchg
not
mov
inc
add
push
or
shll
out
xchg
mov
dec
popf
pusha
aaa
mov
lahf
pushf
and
out
lret
and
jge
stc
stos
sbb
cmp
cmpsl
in
insb
aas
sub
jge
fnsave
xchg
xor
cld
arpl
mov
sub
aad
dec
jb
out
in
inc
sbb
loope
test
dec
xchg
ljmp
jne
loopne
mov
dec
ss
js
cmp
test
cmpsl
xchg
add
mov
aaa
mov
push
push
mov
jle
repnz
push
shr
insl
in
in
inc
or
sbb
jle
stos
imul
mov
push
mulb
sti
fimuls
ret
dec
pop
dec
fwait
in
add
sahf
xchg
sub
push
adc
jno
popf
mov
dec
push
sarb
repnz
orl
fsubrs
cmp
fisttpl
or
sbb
push
jbe
jmp
mov
cltd
sbb
xor
loopne
mov
stos
das
insl
xor
fimull
jno
adc
push
int
imul
mov
popf
repnz
inc
add
inc
jle
in
dec
mov
jg
mov
daa
cmpsl
dec
inc
pop
psubusb
arpl
push
mov
push
repz
fcoml
adc
pop
inc
mov
rcl
and
jbe
jo
dec
cmpsb
pop
or
in
adc
shrl
mov
movntpd
es
loopne
outsl
pop
rcl
mov
fdivrl
cmpsb
scas
inc
jne
mov
push
dec
mov
adc
add
inc
mov
sub
xchg
or
loope
lea
sti
pusha
cmpsb
jmp
es
jge
int3
pusha
loop
pusha
sbb
aam
xchg
js
push
pop
mov
mov
cmp
adc
cli
inc
xchg
push
and
clc
mov
xor
lahf
xchg
movsb
lods
mov
in
fidivrs
lret
or
adc
dec
lret
jle
jno
inc
ss
mov
push
cs
stos
in
sahf
fs
test
into
sub
dec
mov
icebp
mov
int
inc
pop
arpl
mov
inc
mov
add
sub
mov
in
add
loop
and
push
mov
xor
push
jbe
in
mov
and
or
sbb
lea
and
cmp
sub
lret
or
sub
xchg
int3
and
xor
scas
je
out
in
outsl
inc
sbb
jb
push
adc
xor
and
jne
rol
mov
dec
icebp
ds
xor
in
jo
adc
nop
xchg
cmp
loope
test
jae
push
clc
shlb
stos
lcall
push
faddl
rclb
cmc
in
in
sub
dec
inc
dec
jp
mov
das
add
sub
pop
xor
inc
or
cmp
pop
cmp
std
sbb
xchg
mov
mov
or
push
pop
mov
jnp
aaa
lods
loope
test
clc
xchg
xor
orl
aad
push
jge
testb
mov
xor
sbb
pop
xor
movsl
dec
cmp
mov
ja
pusha
pop
outsb
mov
and
insl
insb
sub
fistpl
cmpsb
push
pop
aam
jno
cs
lcall
or
push
cmpl
xor
cmp
push
sti
jge
cmp
lcall
sti
loope
xor
flds
xor
test
cwtl
push
mov
cmpsb
xor
addr16
je
mov
dec
rcrl
insl
or
scas
pushf
mov
rcrl
sub
sarl
adc
repnz
jo
mov
je
push
loop
in
arpl
cmc
cmp
mov
jbe
dec
cmpsl
aam
xlat
test
push
loop
jae
pop
pop
stc
mov
lcall
fwait
dec
push
push
mov
out
dec
je
hlt
les
xor
and
sub
loopne
mov
adc
inc
sub
mov
cmc
sti
lret
cltd
fwait
rolb
xlat
inc
dec
int
pop
inc
in
lcall
cmpsl
add
push
gs
je
jns
cmpsb
mov
popf
nop
insl
sbb
mov
cmc
in
shll
ja
int3
pop
pop
and
fmul
or
fldt
in
pop
movntps
push
es
lahf
dec
mov
add
jo
test
mov
cmpsb
dec
pop
push
ret
xor
mov
dec
lods
mov
push
mov
aaa
in
or
push
sub
movsl
ret
push
adc
mov
sbb
or
jmp
adc
jo
orl
lret
add
stos
cwtl
xor
test
call
mov
jb
or
or
imul
xchg
icebp
lock
call
dec
mov
fimull
jmp
popa
sbb
dec
jl
sti
adc
inc
scas
push
add
repz
dec
xor
pop
or
add
xchg
cwtl
sbb
xlat
xchg
cltd
icebp
divl
sub
push
cli
mov
rcll
xor
or
sub
adc
push
push
stos
call
out
sbb
jbe
aaa
pushf
jns
and
test
add
xchg
mov
int
fnstsw
lahf
inc
and
imul
adc
inc
dec
fimuls
bound
inc
jne
add
ljmp
inc
pop
loope
stos
push
in
mov
sahf
jmp
sahf
push
and
push
pop
aad
sti
jb
pop
clc
xchg
ja
je
ja
rolb
mov
or
call
cmp
push
cmp
dec
pop
push
sahf
push
jno
aam
push
mov
call
pop
pop
sbb
jp
xor
xchg
cmp
xor
cltd
mov
and
sbbl
insb
push
in
xchg
jmp
nop
jno
adc
cmp
pop
lods
xlat
pop
daa
mov
shrb
ror
ja
lods
xor
inc
pop
or
or
les
dec
or
mov
adc
cmovo
push
sub
addl
or
out
pusha
les
pushf
roll
inc
mov
xchg
sbb
ja
xorb
pop
sbb
bound
leave
test
inc
inc
jns
and
fsubs
and
dec
int
data16
lods
loope
xchg
or
popf
lahf
adc
inc
lods
cwtl
mov
xchg
add
iret
push
push
movsl
in
fs
or
test
scas
lods
adc
out
pop
into
insb
fs
fidivs
push
hlt
pop
lds
iret
mov
mov
jl
adc
pop
xor
pop
jecxz
cmp
jmp
pop
scas
jns
cmp
push
mov
jp
andb
mov
stc
inc
xor
pop
mov
call
jbe
stc
cmpsl
lret
push
ljmp
mov
and
adc
adc
in
pop
aaa
pushf
mov
mov
pusha
cmp
cmp
sbb
loope
lahf
ja
lock
stos
sbb
or
imul
jae
inc
aad
push
call
xchg
xchg
and
pop
xorl
pop
lea
loope
push
arpl
mov
cmpsl
push
adc
pop
sbb
lret
mov
cmp
lods
inc
movsl
inc
loopne
sub
adc
cmpsb
das
adc
cmpsb
std
sub
cmc
mov
imul
and
repnz
aas
leave
cmp
imul
dec
jp
jecxz
test
add
loopne
imul
jb
loop
testl
cli
sub
int
loop
inc
push
and
popf
pop
cmpsb
mov
xlat
adc
jb
dec
dec
popa
dec
jecxz
or
mov
jnp
jg
jae
movsb
push
aaa
movsl
mov
push
incl
inc
int3
int3
mov
in
pand
into
jns
rcll
pop
bound
push
xlat
push
ret
test
out
stc
rcrb
push
jbe
xor
pop
mov
scas
roll
dec
pop
daa
repnz
push
lods
mov
cmp
inc
mov
mulb
cs
pop
test
sub
push
inc
pop
sub
pop
mov
jle
push
cltd
mov
mov
stos
lods
or
pop
test
sub
fcompl
fstpt
push
xlat
dec
ret
test
imul
loop
adc
divb
xchg
push
lahf
inc
jge
push
dec
pop
loopne
xor
imul
xchg
adc
jbe
sub
mov
popa
xor
cmc
adc
std
cli
lcall
pop
push
jp
adcl
ficoms
or
mov
push
jmp
add
and
jmp
fisttpl
xor
data16
mov
xchg
push
mov
aad
leave
mov
dec
shrb
sub
mov
cmp
cmp
lods
inc
mov
imul
into
jnp
cmpsl
push
sbb
push
aad
ret
or
mov
sar
adc
mov
xor
add
or
repnz
scas
cmpsb
sahf
mov
jmp
les
scas
aaa
dec
sub
les
out
lret
xor
shlb
sub
imul
inc
xchg
roll
int3
push
pop
cmpsl
insb
or
xchg
or
mov
imul
int3
xchg
or
inc
lock
mov
push
sub
ror
dec
push
ficoms
jmp
add
and
push
adc
pop
add
in
sub
bound
loopne
sbb
pop
and
lods
sub
lret
sbb
rcr
fbstp
aad
lahf
push
fists
fwait
out
jecxz
sub
jne
or
adcb
icebp
inc
or
call
and
xor
xor
repz
mov
push
mov
or
lods
dec
imul
xor
and
mov
jbe
xchg
and
addb
daa
pop
ljmp
sbb
sbb
std
int3
imul
ljmp
adc
fdivrs
xchg
int3
jnp
sub
mov
pop
mov
pop
lret
push
jnp
cli
aas
pusha
mov
sahf
xchg
adc
jg
rcr
je
and
pop
call
shl
jnp
mov
dec
test
pop
cmc
aam
mov
cmc
lahf
mov
push
push
sub
das
xor
mov
pushf
cmc
inc
adc
pop
pop
insl
test
and
loopne
xchg
mov
dec
xchg
loopne
sub
or
push
scas
in
cmp
dec
mov
dec
jge
inc
xchg
push
repnz
subl
cmp
mov
sbb
lret
sti
lcall
sub
fs
and
jnp
cmp
or
sub
cmpsb
mov
dec
in
aad
or
cmp
mov
mov
out
mov
mov
and
cmpsb
cmpsb
adc
adc
test
xchg
lcall
xor
das
lock
and
mov
ret
add
pop
leave
mov
mull
data16
cld
repz
int
mov
adc
lds
std
sub
push
shrb
or
mov
push
sti
mov
xor
xlat
ret
or
insl
or
stos
jl
mov
and
leave
movsb
push
aaa
mov
xor
sub
loop
addl
mov
jne
in
int
push
xchg
lock
sbb
pop
stos
adc
imul
add
xchg
stc
pop
sbb
pop
icebp
mov
cld
pop
ljmp
or
xchg
mov
mov
lods
adc
xchg
add
fimuls
xchg
and
sbb
outsl
push
fildl
inc
out
and
adcl
add
mov
loop
sub
js
cmp
loopne
lock
xchg
pop
xor
out
aas
ljmp
flds
scas
mov
mov
lcall
xor
sbb
pop
push
hlt
jae
icebp
and
int3
cs
xchg
rcrb
es
inc
xchg
repnz
sbb
jl
mov
pop
jmp
iret
sub
adc
outsl
pop
popf
and
push
inc
mov
out
xlat
adc
or
call
adc
mov
jecxz
fistl
push
and
push
sti
add
jo
push
and
rcll
jmp
pop
lcall
adc
ficompl
jo
jp
adc
add
rcrl
mov
inc
shlb
xor
mov
mov
cmpsl
fcomps
test
xchg
sbb
xchg
push
inc
adc
jg
adc
push
push
jo
nop
out
inc
lods
out
jl
or
mov
scas
stos
pop
lds
sbb
mov
adcl
lock
ret
fwait
les
jmp
ljmp
inc
push
loope
cs
lds
cs
nop
int
inc
popa
mov
in
push
add
sub
cmc
loopne
mov
and
fldt
adc
mov
sti
and
sub
or
lea
out
in
mov
iret
out
es
adc
mov
and
fs
ret
daa
rcll
fiadds
pop
push
xchg
jno
stos
fwait
mov
stc
daa
jp
jns
outsb
or
jle
bound
mov
sbb
stos
pop
push
rclb
sbbb
jle
cwtl
inc
mov
push
imul
and
xor
jae
add
and
lods
xchg
sti
dec
pop
test
pop
jg
or
iret
jg
and
mov
cmc
jecxz
mov
inc
ret
mov
jg
sbb
xor
pop
outsl
inc
mov
sub
jge
das
cmc
fcoml
jns
add
inc
push
mov
mov
test
test
lahf
sub
movsl
or
sub
jo
movsb
imull
das
sub
stc
jl
lahf
jo
sbbb
inc
adc
jnp
arpl
push
pop
stos
inc
and
jns
pop
jnp
xor
gs
lock
pop
mov
pop
cmc
sub
pop
insb
inc
into
pop
pop
or
inc
repnz
cltd
scas
outsl
mov
add
jp
push
jecxz
sbb
inc
popf
dec
jmp
add
lods
loope
add
andb
mov
fadd
and
es
xchg
pop
notb
cmc
aam
in
push
xor
out
xor
orl
fs
xor
mov
aas
nop
lcall
nop
or
pop
sbb
fdivs
clc
cmovg
xchg
pop
fidivrl
cmp
sub
mov
movsl
cmp
insl
and
inc
or
ljmp
push
adc
mov
mov
fwait
dec
adc
arpl
mov
fwait
movsb
mov
cmc
es
shr
mov
and
sbb
mov
sub
or
push
imul
pop
rcr
sub
int
cmp
and
retw
jp
fdivs
xor
movsl
xor
idiv
mov
cld
pushl
and
adc
enter
adc
xchg
cwtl
in
decb
hlt
inc
es
out
cli
push
push
sub
sbb
shll
mov
xchg
std
and
mov
lock
xor
mov
bound
dec
arpl
and
fs
push
mov
out
bnd
fs
xchg
dec
ficoml
and
fdivl
fiadds
dec
aad
pop
push
lds
repz
pop
ror
sub
pop
dec
cli
iret
add
test
gs
arpl
popf
mov
mov
push
push
inc
in
mov
pushf
aas
adc
in
test
es
sub
daa
push
icebp
or
cmp
push
mov
sub
pop
out
rclb
ret
fbstp
cli
cmp
inc
inc
je
xchg
push
cltd
fistps
sub
add
or
fs
dec
out
inc
jg
enter
dec
aam
out
out
mov
shl
mov
test
push
mov
shl
lret
ret
push
jns,pt
adc
xor
les
aad
aas
std
push
mov
xchg
jns
fdivrl
icebp
lahf
jno
aad
xchg
sub
hlt
xorl
fidivrl
ds
pop
lods
cwtl
sub
mov
add
rorl
sbb
jp
or
adc
fwait
sub
in
fwait
cmp
popf
jne
clc
movsb
push
sarl
rcrb
fistl
sbb
push
dec
mov
mov
and
cld
fsubrs
xchg
aad
xor
xor
popf
pushf
stos
add
push
std
push
popf
and
les
aam
movsl
jb
push
push
lods
dec
sbb
loop
icebp
xchg
rclb
add
pop
cmc
push
imul
push
jl
sahf
adc
icebp
dec
lret
cmp
icebp
push
mov
in
xlat
inc
cli
mov
jp
out
jno
pusha
popa
out
mov
jl
mov
wrmsr
pop
push
xchg
or
test
fwait
mov
or
cmp
xchg
adc
das
repnz
dec
sub
jne
popf
push
adc
lds
sub
adc
push
sbb
adc
and
adc
mov
je
repnz
incb
inc
in
and
ljmp
mov
or
lahf
xor
test
testb
push
sub
shll
push
leave
dec
push
sahf
aad
mov
movsl
sbb
rcr
xor
roll
outsl
rcrb
aad
pop
mov
out
scas
repnz
neg
cmpsb
ds
mov
subb
test
mov
roll
nop
rcrb
add
fsubrs
inc
fsub
adc
pop
sarl
add
ret
ret
mov
add
inc
xchg
ret
add
pop
ret
popa
aas
inc
jno
jns
mov
rolb
add
push
push
rcrl
cmpsb
addb
shrb
movsl
in
aaa
push
lds
mov
mov
or
jns
jns
inc
hlt
in
sub
sbb
in
mov
jecxz
fsubl
pop
mov
lods
dec
in
or
push
pop
pop
xchg
push
jne
repz
xchg
cltd
orb
stos
mov
sub
mov
ljmp
add
sub
mov
test
aam
xlat
pushfw
jmp
adc
scas
mov
push
mov
add
xor
popf
mov
pop
fstps
sbb
scas
jno
mov
xchg
test
sub
iret
mov
mov
pop
cmpsb
int3
loop
jnp
jo
iret
push
add
imul
push
adc
xor
xchg
lret
jmp
mov
pop
inc
out
lods
mov
push
popf
sub
add
jp
fcmovb
xchg
cmp
push
xchg
stc
xchg
mov
push
daa
cmp
ffree
mov
js
xor
and
adc
das
shll
cwtl
int3
mov
clc
push
rolb
negl
movsb
aad
pop
inc
xchg
test
loope
cmpsl
sub
out
data16
inc
test
push
mov
int3
push
mov
sub
outsb
incl
jo
scas
mov
mov
rcrl
shr
sub
sti
ret
pop
fcomp
movsb
cmp
loope
cli
in
sub
inc
cmc
pusha
adc
mov
clc
xor
testb
fcoml
fimuls
loop
adc
add
fs
bnd
xchg
sti
int3
gs
xchg
outsb
push
jnp
xchg
push
pop
dec
mov
test
mov
push
or
or
fisubrs
sub
mov
add
push
sbb
fnstenv
add
ficoml
insl
mov
jmp
movb
dec
sub
cs
xor
xor
test
cmpsl
shrb
and
or
stos
aaa
mov
mov
push
out
orl
popa
ret
incl
dec
es
icebp
cmc
outsb
dec
cli
leave
mov
xchg
into
lds
mov
pop
sahf
xlat
xchg
push
dec
nopl
push
xchg
inc
dec
or
lea
insl
jp
aam
push
stos
sub
adc
pop
scas
aam
loop
mov
imul
test
jb
popf
push
js
jecxz
dec
mov
cld
cmp
scas
sbb
test
bound
xchg
push
cltd
cmp
xchg
and
jb
fnstsw
mov
and
ret
dec
push
loope
cmpsb
xchg
push
repnz
jmp
pop
cwtl
test
hlt
inc
and
lahf
mov
inc
inc
orl
lods
add
insb
adc
ret
call
dec
dec
dec
arpl
cmp
sub
dec
sub
in
in
rorb
imul
bound
out
cmc
shll
dec
xchg
sub
push
cwtl
push
xchg
movsl
jle
jp
clc
xchg
das
sti
mov
sti
jno
mov
pop
daa
imul
pushf
call
scas
daa
fcom
or
jmp
decb
jp
xor
jge
sbb
and
xor
mov
pop
dec
add
inc
int
sbb
data16
mov
data16
dec
not
inc
rorb
repnz
pop
dec
and
mov
adc
fwait
jmp
jnp
ljmp
mov
ffreep
outsb
adc
cmp
xchg
xor
outsl
dec
into
sub
stc
sbb
ficoms
add
lods
push
push
mov
sbb
pop
xor
aam
test
and
jnp
inc
pop
mov
icebp
scas
mov
xor
incb
call
inc
add
shll
jno
push
sbb
fidivl
push
outsb
outsb
fistl
pop
pop
outsl
adc
popa
and
das
push
pop
mov
mov
push
pop
pop
xor
je
jl
cmp
pop
cli
adc
popa
pop
add
sub
lcall
rol
ret
or
pop
mov
xchg
std
mov
fidivrs
out
lcall
fs
and
pop
rcrl
sub
or
js
pop
aaa
push
clc
push
and
fdivrl
in
hlt
mov
inc
stos
xchg
out
aaa
scas
int
mov
xor
cs
addr16
jp
pop
push
jle
in
sub
insb
and
loop
add
cmp
inc
mov
bound
aaa
mov
popa
in
mov
xor
xchg
cmc
mov
mov
daa
int3
pop
in
shlb
movsl
aad
sbb
xchg
inc
cmpsb
stos
xor
test
pop
mov
jns
push
shl
inc
and
push
bound
push
xchg
push
mov
jle
lods
movsl
lds
pusha
icebp
imul
das
in
lcall
adc
mov
push
pop
sbb
mov
cmp
mov
mov
inc
and
ds
js
or
out
cli
fidivrl
ret
gs
sub
dec
push
imul
rolb
jnp
push
mov
or
pop
sarl
loope
mov
test
out
outsb
dec
push
xchg
or
cli
sub
push
cmpsl
lret
hlt
shll
xor
loope
cltd
mov
push
mov
dec
push
call
pop
inc
xchg
lret
and
outsb
adc
xchg
lcall
unpcklps
nop
scas
int
mov
mov
dec
lods
push
cwtl
incb
jns
jecxz
sub
lods
aad
idivb
jg
pop
mov
inc
pusha
ret
dec
add
popa
xorb
and
mov
inc
mov
aaa
pop
rcrb
arpl
push
dec
arpl
data16
mov
popf
jp
rclb
jmp
or
pop
adc
int3
and
mov
and
push
xor
dec
enter
pop
data16
push
mov
sub
or
adc
push
loopne
scas
fisttpl
lcall
sub
fcmovu
push
idiv
push
mov
int
leave
inc
sti
mov
mov
loope
push
ja
stos
mov
xor
imul
dec
pushf
aam
movsl
add
pushf
andb
jns
pop
add
or
and
xchg
mov
mov
mov
sbb
or
aas
mov
out
sahf
bound
mov
cli
dec
fucom
mov
aaa
into
fcoml
loop
mov
jmp
pop
xor
adc
and
adc
jp
jne
and
cmp
add
add
shrb
mov
cld
out
ret
and
sub
mov
or
adc
xchg
pushf
mov
mov
xchg
dec
clc
movups
or
es
xchg
mov
push
push
and
mov
jge
shrb
push
push
lret
scas
test
rcll
push
xor
or
dec
rcll
movsb
mov
loop
or
stos
sti
lds
addl
jno
icebp
dec
repz
push
push
mov
movsl
inc
lret
inc
rorl
sbb
lret
add
int
xchg
push
ror
pop
jle
add
pop
int
test
test
xchg
gs
out
ljmp
mov
mov
mov
adc
scas
mov
jbe
pusha
sbb
add
jl
adc
ficoms
xchg
outsl
ja
cld
cltd
xlat
mov
and
cmp
xchg
orl
mov
xor
test
lods
inc
lds
int3
mov
xor
xlat
leave
call
and
test
jp
nop
lock
sub
lock
movsb
dec
lods
adc
inc
inc
xchg
insl
sub
mov
stos
stos
pop
test
outsb
push
sbb
mov
out
push
dec
hlt
sbb
cmp
decb
not
xchg
cmp
mov
rcrb
push
lahf
cwtl
adc
inc
fcmovnu
pop
popf
movsb
jno
mov
les
cmp
arpl
mov
jne
push
push
and
cmp
mov
push
push
jae
and
mov
push
pop
sbb
lcall
push
push
xchg
push
mov
into
push
adc
sbb
jnp
sub
in
scas
pushf
cld
cmp
lods
into
jae
mov
aaa
ja
lret
sbb
cmp
lods
pushf
loope
ljmp
push
cmc
mov
into
or
xor
adc
jl
lock
lret
xor
pop
jmp
dec
cmpsb
pusha
bound
loopne
cmpsb
push
pop
mov
push
xchg
xor
or
sbb
scas
mov
es
in
mov
sbb
mov
lds
cmp
mov
es
dec
mov
or
add
data16
scas
lock
cmp
inc
jae
cld
mov
les
xor
mov
xor
shlb
ret
add
jl
andb
or
pop
jmp
or
in
cmp
jg
xchg
pop
adcb
sbb
sahf
xchg
fldcw
scas
dec
push
adc
adcl
cmp
sub
into
cmp
int3
ja
mov
mov
inc
call
das
scas
dec
jmp
push
outsl
loopne
mov
and
cmp
push
adc
ret
mov
std
stos
pop
lods
fistl
loopne
cmp
jno
les
mov
test
xlat
sbb
adcb
jge
pop
ja
and
push
sti
inc
xchg
movsl
add
lods
fstps
xor
mov
jno
shr
leave
adc
add
or
mov
rol
and
sub
add
insb
mov
ja
push
push
add
adc
ret
pop
adc
ret
xlat
aad
mov
push
sub
in
cmp
pop
aaa
push
jp
inc
mov
les
xchg
mov
dec
in
cs
fstpt
xchg
jp
and
out
outsl
pop
arpl
stc
mov
daa
fmulp
fnstsw
jle
addb
addr16
xlat
loop
cmp
lea
lcall
popa
xchg
loope
jle
icebp
jmp
or
sarb
mov
pop
or
pop
push
imul
call
aam
pop
ds
inc
lds
push
mov
testb
fldcw
dec
fs
mov
cmpsb
je
jg
sbbb
mov
mov
mov
pusha
je
in
sbb
orb
sbb
test
push
mov
jo
xchg
push
outsl
mov
dec
fdiv
inc
xchg
xor
xlat
jg
add
js
ret
shlb
mov
in
out
xor
xor
mov
imul
cmp
icebp
mov
inc
push
mov
aam
dec
and
repnz
and
hlt
das
sbb
daa
pop
xchg
lcall
js
stos
xchg
sbb
and
movsl
pop
rcll
fmuls
sub
inc
stos
test
and
mov
mov
in
fs
out
pop
and
out
lods
std
jp
inc
cmpsl
jge
xor
xor
or
ljmp
loopne
and
rcl
cmc
ficoml
dec
lcall
cs
subl
sbb
cltd
sbb
pop
mulb
leave
xchg
data16
ret
push
dec
add
dec
out
int3
insl
xchg
and
test
cli
xchg
pop
mov
adc
xchg
jmp
sub
shrl
add
mov
lds
jecxz
or
or
mov
ljmp
outsb
fxtract
cmpsl
mov
jnp
lea
jb
xor
fistps
jl
cld
inc
push
jl
push
mov
shrb
xlat
jnp
add
testl
inc
mov
iret
mov
and
decl
fidivrl
scas
pop
lahf
jne
inc
xchg
enter
insb
lods
mov
iret
sbb
sbbb
fldt
dec
ret
and
addr16
rorl
mov
sbbl
leave
add
jns
mov
sbbb
xchg
jno
dec
or
popa
and
jmp
loop
das
push
ror
xchg
xchg
jle
jns
push
sub
cli
xor
daa
xchg
rorl
inc
adc
andl
out
push
dec
lahf
jge
mov
aam
add
out
fldenv
pop
ficoms
mov
mov
sub
adc
ret
jnp
xor
and
aaa
mov
add
movsb
cli
aam
aaa
lret
test
loop
pop
dec
dec
lods
mov
fneni(8087
test
daa
jle
inc
sub
bound
xchg
lds
jo
cmp
pop
push
sub
mov
sbb
cmp
addr16
cs
sbb
sbb
or
mov
push
mov
rorl
out
popa
push
add
arpl
shll
dec
push
push
mov
pop
jp
adc
loopne
mov
mov
and
lods
out
jb
gs
icebp
push
out
scas
cli
pop
loop
pushf
push
aas
jo
test
mov
xchg
aas
pop
push
mov
cmpl
xor
cld
inc
jo
mov
jge
mov
push
test
pop
lods
xchg
cmp
sub
sub
gs
lret
fcomi
sub
dec
mov
sub
mov
mov
xor
jmp
bound
mov
mov
add
jnp
mov
mov
cmp
dec
out
and
in
data16
imul
fists
fadds
ds
lahf
gs
nop
cmp
mov
push
lret
fdivp
cld
mov
xchg
idivb
or
in
es
push
sub
outsl
enter
and
mov
outsb
imul
sub
shlb
imul
dec
mov
and
out
lahf
mov
sub
das
inc
addr16
adc
stc
pusha
roll
int3
lea
push
lock
sub
xlat
mov
mov
pusha
ror
les
imul
mov
sar
stc
sahf
jne
add
sbb
std
adc
stos
clc
push
aaa
xor
xor
mov
dec
scas
aas
lcall
and
stc
jbe
ret
or
hlt
jl
mov
movsl
std
mov
pop
test
cwtl
jns
ret
rorb
cwtl
movsl
jbe
mov
adc
jbe
inc
xchg
mov
and
scas
scas
pop
ss
pop
cmpsb
rcl
cs
xor
xor
jo
push
jbe
insl
cmpsb
ret
pop
test
or
jbe
fwait
imul
rorl
xor
xor
mov
xchg
ss
addr16
icebp
mov
sbb
mov
or
stc
int
mov
xchg
fisttpll
test
xchg
popa
mov
inc
jno
cld
xchg
inc
in
mov
lcall
outsb
shlb
adc
fildll
jo
push
and
mov
fucomp
cmp
dec
dec
fisubrs
fldt
dec
jmp
out
sbb
fisttpll
cmp
cmp
add
aaa
aas
fmuls
leave
test
jecxz
jo
into
jle
mov
cmp
sbb
call
cli
inc
mov
jo
paddsb
fwait
add
and
fisttpll
negb
push
add
dec
pop
adc
jne
loope
xchg
popf
sti
movsl
pop
ret
fstpl
stos
sub
pop
int3
dec
adc
cltd
dec
sahf
je
out
jae
dec
test
fld
xchg
push
and
mov
sbb
xor
inc
mov
scas
in
or
fs
imul
sub
outsl
sahf
shlb
mov
cltd
sbb
jno
icebp
jmp
cmp
pop
or
cmp
test
or
pop
mov
out
mov
hlt
movsb
mov
mov
dec
add
dec
mov
out
stc
dec
and
hlt
clc
out
loope
aam
cmpsb
dec
je
sub
nop
xchg
imul
xor
and
or
in
out
fsubs
mov
and
getsec
push
pop
pop
jl
xchg
lods
mov
xchg
and
or
stos
sbb
std
repz
pusha
fsubs
stos
ret
daa
filds
adc
inc
mov
sbb
js
dec
xchg
xchg
mov
pusha
outsl
lds
and
xchg
sub
or
mov
mov
cld
push
sar
mov
out
out
xchg
push
outsb
test
cltd
push
sbb
mov
mov
add
clc
dec
sub
sbb
stos
mov
in
rcrl
aas
xlat
mov
lcall
loop
xor
or
lret
pop
mov
sbb
ret
pusha
aam
add
add
ss
scas
int3
xchg
add
cmp
push
cs
add
mov
pop
xor
jle
push
adc
ja
xchg
movsl
lret
push
rcrb
in
iret
mov
out
insb
or
in
fwait
jg
in
pop
jo
xchg
je
jl
add
adc
or
push
mov
mov
xor
scas
mov
or
push
inc
cmp
cmpsl
aaa
test
mov
je
pop
xchg
xchg
cltd
add
inc
mov
dec
loop
dec
cli
adc
mov
xchg
inc
xchg
or
xor
idivl
mov
and
xchg
push
nop
sub
in
iret
loop
xor
mov
add
push
outsb
push
js
mov
inc
inc
or
leave
loop
sub
push
push
push
popa
fsubrp
cmc
stos
inc
sbb
stc
fmuls
std
sti
mov
add
ljmp
or
in
jno
in
shr
push
ss
push
inc
ljmp
fcomps
jle
test
xor
stos
arpl
int3
int
or
outsl
pop
push
stos
push
rorl
inc
add
push
push
adc
pushf
adc
jae
inc
loope
and
or
mov
adc
stos
xlat
inc
add
add
lret
sbb
movsb
mov
adc
lea
pop
cmp
incb
movsb
nop
or
fcmovnbe
fadd
aas
pop
or
dec
lds
sbb
in
add
push
push
icebp
lret
or
xor
adc
add
loop
movsb
push
fcmovb
fcompl
frstor
testb
push
sub
inc
push
fnstcw
call
leave
out
pop
les
adc
add
pop
ljmp
inc
dec
sbb
jge
xor
fs
movb
rcrb
iret
push
sub
mov
add
jle
push
sub
stos
insl
cmpsb
jle
or
scas
mov
lods
adc
mov
lahf
nop
int3
xchg
int
into
xchg
mov
mov
inc
push
test
hlt
imul
rcll
dec
sar
sub
pop
sahf
sbb
inc
loop
iret
test
rcr
cmp
insl
inc
test
sub
fimuls
adc
fstpl
xchg
imul
xchg
sti
jg
xor
filds
in
icebp
dec
jae
jl
lods
cli
jne
shrd
test
sub
addb
insl
jl
test
test
and
add
in
movl
add
jmp
jmp
adc
adc
push
pushf
push
inc
inc
jp
sbb
out
dec
dec
sbb
add
push
mov
jns
mov
xor
or
adc
jge
and
test
lcall
push
pop
bound
ja
dec
or
iret
push
icebp
mov
cld
and
jp
fnstsw
addb
jo
mov
rcrb
inc
jae
or
mov
dec
scas
sub
out
in
cli
push
out
jae
in
and
repz
outsl
scas
jmp
pop
pop
lret
jmp
push
cmp
jo
inc
pop
inc
push
or
je
sti
pop
sbb
inc
in
jmp
sub
out
xchg
imul
sti
mov
jle
add
shll
jns
inc
or
icebp
mov
lret
xchg
int
xchg
pop
jae
cltd
or
cmp
les
mov
and
jae
and
jle
frndint
je
fistpl
xchg
mov
sub
inc
jle
dec
sub
dec
push
or
xorb
adc
cld
loop
into
jge
dec
mov
sub
js,pn
inc
test
or
fisttps
aad
pop
push
mov
cmp
xor
loop
scas
push
dec
add
sbb
inc
sbb
ret
movsb
cwtl
cltd
xchg
lock
mov
out
aas
lret
popf
scas
cmpsb
mov
popa
les
loopne
lds
ja
xchg
mov
inc
add
out
push
dec
ja
dec
push
out
mov
sub
fldcw
test
push
cs
lret
iret
and
ret
out
lock
cltd
stos
leave
xorl
push
lahf
xchg
jnp
cmpb
mov
nop
inc
mov
push
add
roll
fmull
jo
ss
insb
nop
sbb
mov
dec
pop
or
xchg
scas
jne
movsl
dec
ret
out
cmpsb
dec
jge
mov
imul
push
cwtl
inc
repnz
adc
iret
jg
xor
adc
jg
jge
aad
js
jle
lcall
and
dec
jle
lahf
stos
cmpsb
pop
inc
sbb
xchg
jecxz
jns
pop
arpl
pop
popf
dec
daa
jge
shl
movsb
fs
icebp
cmp
orb
movsl
xchg
mov
ljmp
add
jo
int3
jnp
clc
data16
sub
push
daa
adc
and
mov
es
loop
and
push
sbb
push
mov
out
aaa
pushf
xchg
push
adc
js
lds
rcrb
loop
rcrb
dec
mov
ret
jnp
fisttpl
jnp
adc
or
jp
iret
lods
aad
bsf
jmp
jae
add
fidivl
and
push
xchg
stos
mov
push
in
mov
jg
add
adc
or
es
scas
jns
mov
test
add
loop
adc
in
out
imul
push
sbb
inc
outsb
mov
cmp
iret
pop
loope
sub
daa
int3
add
inc
stos
add
in
sub
ss
hlt
xor
stc
push
pusha
imul
testl
repz
inc
xor
repz
shrb
cmp
les
fs
push
push
and
mov
add
or
push
mov
mov
mov
fnsave
and
andb
cmp
push
incl
nop
mov
int3
pop
inc
clc
mov
into
andb
rcl
xor
or
mov
testb
cli
jne
xor
mov
mov
dec
add
mov
push
push
pop
nop
dec
pushf
mov
pop
push
sarl
cmpsb
faddp
adc
arpl
enter
xchg
xchg
cwtl
mov
imul
addb
mov
inc
movq
addr16
or
hlt
adc
scas
xchg
xor
mov
mov
push
dec
pop
out
andb
aam
fs
sbb
xchg
mov
add
sahf
xor
lods
in
fwait
ret
add
lret
fwait
adc
dec
mov
fstpl
mov
loopne
into
packssdw
xchg
sub
jmp
mov
jo
cmpsl
adc
adc
dec
add
xchg
xor
ret
mov
mov
or
into
or
addr16
pop
adc
jno
in
sbb
fs
dec
mov
or
sbb
ja
push
arpl
pop
popf
push
in
sub
je
sbb
clc
outsl
jl
dec
mov
fdivl
jns
xor
ja
mulps
ss
push
cmpsl
shr
xchg
mov
inc
sub
xor
sbb
add
push
xorl
xchg
inc
adc
ret
mov
jnp
push
fwait
stos
test
cltd
dec
ret
sbb
js
outsl
lret
cmp
test
pop
inc
jl
lds
dec
out
cmp
aam
push
pop
xchg
pop
ja
add
mov
mov
dec
mov
mov
xor
cs
adc
cld
sbbl
imul
push
test
pop
push
jbe
nop
dec
xchg
pop
adc
xchg
pop
mov
iret
xor
ss
dec
dec
mov
dec
movsl
push
push
mov
jnp
sbb
push
andl
adc
dec
icebp
xchg
cmp
test
inc
or
cld
pop
adc
sbb
cmp
and
iret
sbb
push
movsl
cmp
nop
push
inc
sahf
or
sbb
icebp
das
cmp
xchg
lahf
jbe
and
inc
jae
push
xchg
int
fdivrl
pushf
mov
jmp
aas
xchg
pushf
fucomip
int
dec
ficompl
xchg
in
ss
mov
push
out
lds
mov
fisubs
pop
test
xchg
aad
mov
mov
dec
lock
mov
cmp
push
andl
push
cwtl
orl
fisubrl
daa
jae
dec
push
adc
mov
jmp
mov
dec
mov
xor
pop
xchg
jmp
add
sarb
fldcw
xchg
or
lea
pop
rcl
jmp
jns
push
and
mov
jns
repz
dec
push
lea
pop
cmp
jp
jge
xchg
bnd
fsubrl
shlb
cmp
sti
ja
arpl
dec
jl
js
jecxz
cmp
ljmp
loope
shlb
push
mov
xchg
add
xor
cli
scas
negb
es
jnp
mov
andb
sub
inc
aam
inc
lret
mov
pushf
sub
cli
push
inc
push
lea
cmp
and
stos
imul
jnp
sub
pop
jae
test
sbb
sbb
jns
and
or
sbb
mov
push
sbb
cmp
insl
movaps
jo
daa
loop
test
sbb
jne
mov
ret
or
pop
aad
sbb
add
mov
and
lret
lock
cmp
mov
negb
bound
pop
les
or
lahf
jae
js
add
scas
sub
pop
aad
mov
cli
loop
dec
jae
inc
jecxz
dec
dec
movsb
jl
subb
cmpsl
add
ljmp
std
gs
repnz
test
push
pop
mov
push
cmp
sub
sbb
xchg
xor
mov
xor
or
loope
inc
inc
sub
mov
jae
ja
add
cmpsl
pop
nop
js
mov
jmp
jecxz
mov
mov
add
int
lcall
subl
loopne
inc
fidivs
fsts
inc
gs
outsb
jbe
mov
arpl
dec
pop
gs
pusha
fsubs
in
mov
dec
and
sub
jmp
xchg
mov
push
sub
imulb
ret
outsl
ret
aam
sub
jno
addb
adc
dec
push
xchg
mov
xchg
addr16
lock
xor
jno
dec
andb
test
clts
arpl
rorl
lret
bound
das
cli
pop
dec
in
es
js
cmpl
pop
or
xchg
cmp
push
notb
inc
aas
aas
lods
mov
push
pop
xor
cld
sub
cmp
negl
cmc
cmpsb
cmp
push
mov
xor
cmpl
jp
mulb
sub
pop
loop
sub
jmp
cmc
bound
push
push
push
xorl
test
inc
ror
mov
jo
in
add
xchg
repz
test
pop
push
cmp
mov
mov
xorb
push
inc
xor
push
jne
xor
cmpl
out
push
dec
stos
jb
xlat
mov
fsubrl
sahf
lods
rcl
aad
dec
dec
mov
jmp
mov
ret
xchg
adc
or
pop
xchg
outsb
inc
orl
repz
rolb
inc
in
lods
sub
or
mov
or
lahf
popa
test
hlt
xor
scas
in
rol
add
mov
xchg
inc
push
ficoms
jb
push
and
xor
and
clc
push
js
sti
or
xchg
rcl
push
pop
or
clc
mov
jo
xchg
test
add
insl
push
sub
rorb
jecxz
das
xchg
jb
cmpsl
jmp
cmp
push
and
js
rcrb
cmp
aaa
xchg
mov
mov
hlt
stos
sbb
sub
outsb
jbe
je
dec
sahf
in
jnp
pop
pop
leave
dec
or
mov
cmpsb
ljmp
mov
idivb
rcrb
adc
stos
xlat
pop
out
pop
aaa
jge
mov
sbb
hlt
add
aad
push
loope
sub
daa
rcll
push
shll
push
cmp
xor
scas
sarl
outsl
jp
stos
lock
adc
xlat
inc
pop
lods
out
and
dec
push
and
js
push
loop
ret
dec
into
in
cmp
ljmp
mov
push
and
sbb
mov
mov
mov
dec
pop
arpl
out
daa
cmc
stos
mov
out
lcall
push
je
pusha
sub
dec
xchg
adc
loope
mov
xlat
jecxz
pop
push
jl
aaa
add
pop
cmp
pop
sub
lret
or
jnp
inc
dec
mov
xorb
and
int3
dec
mov
fidivrl
sub
jno
push
xor
push
mov
dec
jge
and
fsubrl
add
loope
loope
shrb
nop
dec
int3
pop
insl
sub
pop
in
push
cmp
in
lcall
aam
inc
fwait
out
xchg
jb
lret
sub
and
stc
repz
sbb
add
gs
leave
push
or
mov
aad
test
sbb
push
bound
dec
add
stos
je
push
push
comiss
lds
gs
xchg
shl
aam
mov
cmc
push
shlb
das
in
iret
ja
xorl
jl
cmp
aam
scas
adc
add
inc
lret
cmp
sbb
imul
cmp
cld
mov
dec
mov
subl
pop
inc
jg
fs
jmp
fs
push
divb
and
inc
call
jnp
fcompl
fisttps
movsl
cmp
sbb
pusha
xor
aad
ss
mov
mov
push
mov
into
add
sbb
ljmp
mov
movzbl
sbb
out
or
or
addl
jl
int
ds
aaa
lods
ret
pop
xchg
push
in
adc
insl
pop
xchg
in
xor
sbb
iret
hlt
insb
mov
cmp
cld
xor
lcall
xlat
imul
outsb
inc
mov
lods
or
test
cmpsl
test
test
mov
test
jecxz
add
xlat
ret
rcll
call
xor
jae
mov
xchg
mov
test
jnp
jno
call
scas
mov
cwtl
out
fwait
adc
push
inc
mov
sub
xor
mov
popf
hlt
fs
add
dec
xor
cmp
in
mov
std
daa
or
jle
addr16
ret
pop
push
shll
popf
xor
js
push
inc
push
ds
cmp
fldenv
cmp
sbb
std
aas
mov
imul
cmpsb
xchg
add
aam
jae
jne
or
movsb
push
lea
in
push
lds
pop
imul
test
jmp
or
pop
jmp
mov
ljmp
rolb
movsl
mov
and
les
pusha
jno
jne
int
out
mov
popa
out
dec
pushf
cmp
and
jp
push
add
lcall
push
mov
pop
inc
jmp
push
cli
adcb
pop
xchg
xor
jno
or
push
int
jmp
mov
push
ds
in
in
xchg
mov
push
scas
mov
shlb
clc
or
jg
mov
sbb
aam
mov
aam
hlt
out
test
mov
repnz
xor
mov
mov
pop
scas
dec
lret
cld
arpl
sub
adc
daa
cld
cld
add
or
mov
and
mulb
lods
cmp
in
push
sahf
and
inc
xchg
repz
addr16
or
in
jns
add
divb
dec
mov
test
push
shlb
je
std
adc
lock
push
mov
jo
out
idivb
test
ret
imul
in
js
sub
mov
pop
stos
loopne
cmp
mov
sub
or
hlt
push
mov
mov
imul
pminub
cmp
int3
outsl
int
dec
dec
cld
shr
testb
out
out
adc
xchg
mov
ret
insl
and
cmpsb
pop
ja
fisttpll
mov
mov
mov
push
jge
loop
mov
xchg
push
cli
sbb
add
je
lods
shlb
xor
or
mov
dec
mov
ds
xchg
pop
inc
xor
imul
out
mov
mov
sub
loopne
imul
mov
mov
fldt
dec
or
mov
and
inc
aam
incb
dec
ds
insl
dec
mov
or
lcall
dec
mov
das
mov
mov
and
mov
mov
js
inc
or
testl
mov
inc
or
mov
mov
xlat
mov
lock
lods
lahf
jmp
dec
lea
neg
out
inc
popf
fldt
jbe
stos
sbbl
xchg
add
or
push
les
ss
xchg
jecxz
dec
leave
stc
les
ret
mov
dec
shll
pop
sbb
leave
xorb
mov
in
xchg
repnz
push
out
adc
jg
adc
loop
pusha
cwtl
mov
dec
sub
xor
fwait
xor
aas
mov
push
push
and
mov
outsl
imulb
inc
mov
div
push
sub
push
sbb
gs
out
add
push
das
mov
fwait
lcall
cmp
int3
adc
and
cmp
call
sbb
xor
or
call
outsb
add
loop
icebp
cwtl
es
mov
icebp
icebp
sarb
or
cmovnp
js
pop
jae
xor
cmp
jbe
cmp
es
dec
in
xchg
fmull
push
fmull
xor
adc
outsb
clc
stos
inc
int
loope
inc
xchg
fwait
inc
mov
mov
xor
jp
outsb
ja
mov
pop
ret
adc
jecxz
mov
sub
pop
movsb
adcl
movaps
adc
pop
jno
insl
aam
movl
jb
mov
fistpll
fcoml
push
nop
xor
push
inc
inc
scas
icebp
mov
jns
xchg
jmp
xchg
in
jle
xchg
jne
adc
arpl
out
jno
jmp
add
in
cmp
mov
and
pop
inc
sbb
test
fstl
mov
pop
popf
mov
inc
mov
mov
pusha
fdivl
push
inc
mov
add
outsl
stc
mov
inc
xchg
hlt
adc
loop
loopne
into
data16
mov
xchg
aad
into
pop
in
xchg
and
xchg
in
push
cld
sub
or
fidivrl
test
daa
jne
and
mov
in
cltd
aaa
and
inc
mov
repnz
add
inc
add
cmpsb
fwait
pop
sarl
movsl
cld
add
pop
fsubl
mov
les
or
lret
sub
cmp
incl
mov
pop
ss
ja
arpl
pop
pop
loopne
xchg
movsb
test
insb
push
rclb
out
sbb
adc
and
lods
adc
sbb
outsb
les
aas
aam
pushf
and
repnz
test
jmp
pop
imul
lahf
and
enter
push
push
aaa
fidivl
out
cmp
add
pop
and
repz
push
push
or
push
pushaw
mov
js
add
xchg
and
aam
mov
out
sbbl
idivb
mov
int3
loop
leave
xchg
mov
adc
dec
inc
repnz
into
or
push
cltd
incb
data16
loop
dec
xchg
lcall
insl
subl
mov
aaa
xchg
pushl
out
cli
clc
mov
push
xchg
addr16
sti
out
push
push
fwait
test
push
inc
fsubs
loop
adc
xor
out
pop
dec
js
std
push
adc
push
mov
notl
adc
shlb
in
je
xor
mov
cmp
pop
aam
loopne
ret
popf
or
in
sbb
ds
cmc
cmpl
xor
das
mov
loop
scas
sub
xchg
loopne
or
mov
outsb
shl
sbb
sbb
aaa
adc
sbb
in
inc
jmp
jge
push
jo
xor
xchg
xorl
dec
cmp
pop
mov
sbb
adc
jnp
lret
out
push
imul
xchg
inc
sub
mov
jae
test
and
inc
outsb
out
mov
ja
add
aad
sub
gs
and
or
and
pextrw
dec
mov
jbe
insl
lahf
pop
in
fwait
shrb
dec
int
or
adc
mov
add
lock
leave
mov
es
gs
xchg
pop
inc
inc
pop
sbb
stc
mov
pop
push
cmp
lods
loope
out
es
mov
inc
fiaddl
or
xor
add
pop
lea
dec
hlt
dec
in
incl
popa
lcall
push
pop
lock
imul
outsb
test
test
dec
lods
dec
addr16
cld
sbb
lods
dec
popa
test
test
jg
push
iret
xor
adc
fsubl
out
pop
loope
push
sbb
stc
mov
sub
in
ja
orb
fnsave
jecxz
adc
pop
xor
mov
repz
push
imul
icebp
fisttps
std
test
fs
aas
stos
mov
int3
in
movsl
rcrb
or
add
pusha
pop
xor
insb
loope
lds
pop
xor
pop
test
jne
xor
jmp
pop
add
jbe
ja
or
test
inc
jo
push
sub
adc
in
pushf
xchg
xchg
jo
dec
push
inc
and
push
test
out
add
daa
scas
loope
sbb
fbld
cmp
ss
fwait
mov
jnp
cltd
movsb
xor
loopne
cltd
and
xchg
int
rcrb
sub
jnp
lock
das
and
mov
add
xchg
leave
or
jnp
int
xchg
xchg
xor
mov
and
je
fdivl
and
inc
test
xorb
decb
aam
scas
push
add
lock
inc
sbb
adc
jge
push
jmp
out
mov
pop
and
gs
push
inc
push
and
mov
xchg
pop
je
xor
sub
xlat
loop
pop
aad
pop
cwtl
add
test
int
imul
lea
jns
insl
jecxz
fwait
cmpsl
addr16
add
cli
sahf
mov
test
dec
mov
aad
movsb
cmp
or
es
in
xor
cmpsl
jo
jmp
popf
push
and
cli
daa
xchg
add
pop
outsl
mov
sarl
es
xchg
push
jnp
mov
outsl
add
mov
and
call
imul
mov
lods
push
shlb
je
lods
movsl
iret
mov
decl
insb
aad
cmp
mov
sarl
and
xchg
aam
insb
aas
ss
dec
iret
rorb
roll
push
inc
int3
sbb
jae
jl
rol
loopne
mov
fdivrp
jne
cmp
cmp
xor
es
xlat
adc
mov
andb
dec
sub
pusha
pop
add
popf
xchg
ret
clc
mov
gs
pop
pop
adc
fnop
fwait
aaa
and
imul
ss
insb
imul
ret
and
imull
ret
fmull
sar
and
insb
aas
lods
mov
jns
addps
outsl
test
mov
addb
idiv
xchg
aam
sbbl
jnp
das
mov
sub
sub
jne
and
les
ds
mov
xchg
test
test
sub
lret
push
or
push
push
mov
lret
adc
in
lcall
and
popa
mov
aad
cltd
or
cltd
xchg
ret
jae
js
daa
lods
testl
cmpsb
pop
aaa
mov
push
lahf
pop
rclw
sbb
pushf
in
mov
xor
clc
xor
lds
loope
add
or
and
outsl
mov
cmp
sub
xchg
in
lods
lcall
pop
mov
mov
scas
mov
add
add
lret
sti
mov
jl
cmp
scas
adc
bound
push
adc
mov
pop
lods
add
repz
in
mov
in
or
push
leave
and
adc
lea
sbb
das
xlat
mov
xchg
jle
rorb
aaa
inc
add
inc
dec
insb
dec
es
sub
sbb
into
outsl
jae
dec
test
rolb
sbb
in
mov
jl
jmp
mov
xchg
in
push
enter
push
jne
jle
sbb
movsb
push
jnp
xor
test
pop
cmp
cmp
mov
lret
cmp
rorb
and
ds
mov
outsb
mov
cmpsl
pushl
mov
pop
xchg
in
add
inc
stos
or
jne
pop
ds
jbe
xchg
insl
xchg
movsl
push
pop
gs
mov
ret
mov
mov
xchg
or
loope
in
or
lods
call
sub
mov
iret
rol
mov
jmp
rorl
jp
adc
mov
xchg
adc
mov
dec
xchg
popf
mov
cmp
scas
lods
fdivs
aas
test
cmpsl
xor
out
ds
out
mov
movsb
jp
jp
test
mov
cmp
mov
repnz
sbb
xor
push
jle
mov
loopne
mov
out
push
clc
jns
mov
xchg
sub
jbe
cmpsb
adc
test
mov
lods
xor
mov
sub
pop
jl
fidivrl
or
mov
xor
call
shr
dec
xchg
in
mov
xor
xchg
add
fwait
mov
dec
ja
in
xor
mov
aam
lret
mov
jg
es
xlat
lea
idivl
xor
je
out
je
fildl
push
leave
pop
mov
cmp
cli
scas
mov
and
fdivr
stc
repz
pop
addr16
push
dec
pop
mov
jno
lahf
cmc
int
gs
and
adcl
mov
jp
ljmp
jecxz
icebp
pop
push
push
lock
pop
inc
cli
leave
push
push
in
in
lods
pop
enter
jbe
mov
loop
in
inc
rcl
jmp
pop
test
or
xor
int3
mov
jmp
or
mov
rcrl
dec
adc
jl
push
pop
and
mov
cmp
sar
in
bound
sbb
shl
and
mov
scas
and
cltd
stos
push
mov
or
xchg
inc
dec
sbbl
push
add
aad
outsb
jbe
cmp
push
lahf
subb
fistpll
test
lock
mov
fldl
pop
std
push
stc
mov
or
push
mov
out
ja
imul
and
cmp
sahf
cmc
cmc
dec
push
sub
out
push
jp
rcl
push
mov
bound
xchg
push
cmp
stc
push
or
cmpb
movsl
push
and
ret
scas
push
aaa
inc
iret
je
or
and
lcall
movsb
or
jge
ret
fsin
enter
imul
push
aaa
insb
testb
mov
fs
add
in
inc
xchg
jo
mov
or
add
not
push
jo
cmpsb
push
push
cmpl
insb
push
push
mov
add
xor
aam
negl
int
das
ret
ljmp
loope
das
push
fs
ss
sti
js
sbb
notb
sti
xchg
sbb
jp
xor
cld
imul
xor
adc
cmp
lahf
pop
iret
hlt
scas
outsl
inc
rolb
sbb
loop
xor
xchg
cmc
mov
jge
je
inc
push
mov
ja
jno
pop
rcll
cmp
push
js
add
jns
pop
rcll
leave
call
mov
cmc
imul
lock
fildll
push
pop
arpl
sti
pop
popf
insl
test
sub
mov
pusha
xor
sub
cmpsb
das
mov
jmp
cs
add
cmpsb
inc
cmp
jno
aaa
into
es
inc
mov
sbb
pop
std
aaa
or
mov
int
jns
jg
jno
in
fcmovnb
in
push
ret
jae
cmp
fldl
push
lods
pop
jp
stos
mov
push
lret
and
jmp
dec
movsl
jo
mov
push
bound
cwtl
lds
test
mov
js
cld
pop
and
sar
cld
push
pop
aad
and
xor
test
mov
xchg
fdivrs
movsb
xchg
mov
lods
ficoms
xchg
out
and
push
fldt
and
insl
daa
stc
loope
and
fmul
mov
mov
mov
xchg
adc
int3
sub
or
or
add
or
mov
cmpsb
and
xlat
jmp
xor
add
lahf
fbld
mov
inc
neg
mov
jne
sub
add
js
ss
dec
imul
xchg
fs
imul
incb
stc
pop
mov
xor
pop
loope
xchg
popa
ret
lret
outsl
repnz
jl
inc
adc
shl
test
xchg
imul
xor
xor
cmp
jmp
cs
or
jecxz
pop
shrl
out
xchg
aam
adc
pop
cmp
fwait
mov
lods
sbb
xchg
pop
lret
cmp
dec
aam
add
scas
dec
cmp
mov
mov
push
and
adc
push
push
in
jmp
outsb
mov
clc
mov
int3
jo
cmp
loope
test
jp
pop
xchg
jmp
mov
movsl
rorl
jg
testb
pop
push
in
cmp
insb
push
loop
test
shl
push
das
push
xor
jmp
andb
xchg
int
cmc
adc
jle
dec
call
fisubs
insb
mov
xor
pushf
add
jo
sub
and
arpl
testb
push
xchg
cld
xchg
pop
sahf
mov
cli
add
fnstsw
jne
dec
dec
push
js
pop
xchg
out
jge
aaa
lea
xchg
stos
mov
out
jp
jp
push
jae
repnz
jae
enter
lock
inc
sub
sbb
mov
push
iret
sub
shl
fwait
cmp
xlat
mov
test
mov
shr
xchg
cltd
mov
inc
test
jo
insl
mov
in
or
pushf
aaa
jns
dec
adc
cmc
dec
and
data16
jns
bound
inc
cs
das
pop
mov
enter
add
cmp
js
mov
test
and
add
inc
sub
sbb
rol
jns
negl
loop
inc
mov
adc
xlat
dec
loop
sar
in
out
inc
int
inc
cmp
int3
sahf
cli
push
testb
mov
insl
push
or
push
sbb
mov
lods
repz
push
mov
cmp
std
xor
mov
mov
adc
ss
lods
stos
push
mov
ljmp
sub
adc
and
loope
mov
mov
cmpsb
mov
add
jp
in
test
dec
cs
aam
add
ljmp
insl
pop
push
dec
rcrl
scas
pop
ret
jl
movsb
js
cwtl
jp
push
ss
stos
push
push
int3
lea
lods
mov
repnz
sbb
pop
jecxz
clc
flds
mov
and
pop
mov
clc
push
fidivrs
sti
xchg
aas
mov
sub
loopne
xchg
sti
or
in
pop
push
and
es
sub
pop
sub
and
or
inc
cmp
xor
lea
mov
call
sbb
jne
aas
pop
faddl
or
out
cmp
into
adc
pusha
ret
sarl
stc
sbb
mov
pop
shl
add
test
fisttpl
sub
mov
decb
add
pop
rcrb
or
jmp
fcoms
sub
shll
mov
dec
inc
ds
fstl
sbb
mov
sbb
mov
cmp
lahf
lret
xor
ds
sub
push
mov
mov
mov
and
js
cmp
sbb
inc
xchg
loopew
xor
cwtl
cmp
cmp
ss
inc
es
inc
in
adc
jne
or
or
stos
adc
int
xor
sbb
and
jo
jne
pushf
lock
popa
mov
xchg
xor
movsl
adc
std
cmp
pop
ljmp
dec
pop
mov
jns
lret
clc
push
pop
xor
cmp
incl
add
pushf
shrl
scas
imul
cmp
cmc
je
pop
jbe
popf
sub
mov
aad
adc
push
int3
outsb
scas
push
adc
adc
sub
loop
test
into
jmp
push
mov
bound
ret
fidivrs
bnd
xlat
jno
cmpl
and
xorb
and
arpl
xor
lds
fs
cmp
lods
sahf
mov
fsts
sub
mov
xor
fildll
cltd
mov
or
out
mov
cmpsl
leave
lock
push
inc
adc
inc
sahf
push
mov
mov
je
cwtl
test
fsubrs
or
daa
fwait
sub
loope
push
inc
outsb
out
shrl
shrl
push
lcall
xchg
jnp
movsl
xchg
pop
xchg
arpl
xor
dec
sub
imul
inc
pop
inc
cmp
push
mull
insb
mov
jnp
fnsave
xchg
out
stos
inc
adcb
lcall
mov
mov
std
fstpt
sub
test
cld
push
cmp
sbb
out
in
bound
jbe
gs
aad
pop
call
imul
mov
pusha
fcmovne
rcl
inc
in
xlat
cmc
adc
inc
inc
bound
jb
push
cld
cmp
fldt
or
sbb
hlt
addr16
adc
ja
mov
sbb
mov
fs
mov
xor
popf
push
xchg
test
aam
dec
mov
jle
mov
xchg
cwtl
xchg
pop
cwtl
jmp
dec
xor
pop
or
pushf
addr16
outsl
imul
addr16
js
je
out
clc
in
cmp
lock
cmp
pop
inc
in
jo
fdivl
in
pushf
cmp
add
and
out
or
and
ret
lods
test
mov
push
adc
adc
xchg
adc
dec
mov
and
lret
xchg
xchg
mov
idivl
mov
sub
aas
cmp
iret
inc
adc
sub
lods
add
ja
bound
xchg
push
ljmp
mov
aad
xor
movsb
pop
sbb
stos
std
add
sti
cmp
inc
dec
pop
xor
inc
mov
nop
push
pushf
cmp
popa
xor
or
repnz
sub
fdiv
insl
test
mov
add
lcall
insl
mov
movb
sbb
sbb
fisttpl
pop
fwait
sbb
mov
xorl
out
sub
nop
mov
fidivs
aaa
ret
mov
sbb
pop
enter
sub
hlt
pop
mov
add
jae
mov
negb
push
push
push
test
xor
mov
pop
inc
sbb
pminub
dec
or
subb
push
jmp
mov
cmp
lea
cmp
ret
mov
stos
pop
cmp
ss
out
jecxz
inc
fwait
xlat
loope
pop
fistpll
mov
xor
xlat
sti
popf
sub
add
xor
std
dec
jnp
cmpl
xchg
dec
adc
ja
repnz
mov
mov
js
sub
rorb
push
jnp
outsb
xor
std
cmp
xchg
sar
sbb
test
in
mov
add
test
add
int
aad
lret
mov
mov
cltd
cltd
xor
mov
jae
cs
sub
js
and
mov
daa
insb
sbb
push
rorb
iret
movsl
push
popl
and
in
icebp
aas
sbb
cmove
mov
lret
cmpsl
cmpsl
addr16
push
movsb
popa
shrl
lds
stos
shrb
xor
leave
xor
xchg
and
xor
out
cmpsb
mov
sub
push
jnp
and
or
or
pop
leave
lahf
sbb
int
mov
pop
rorl
mov
shrb
out
cltd
lods
or
dec
jg
jne
pop
iret
mov
fidivrl
pop
mov
ret
addr16
fcomip
push
xor
js
pop
push
fcoms
lods
sbb
or
mov
cmp
fwait
push
xor
lahf
inc
and
cltd
imul
mov
repz
jecxz
xchg
sub
mov
stos
mov
out
jmp
fmuls
add
fbstp
in
fmull
cmp
dec
int3
jle
mov
jle
push
hlt
push
add
sbb
sbb
pop
and
ds
jno
dec
cld
lcall
in
dec
xlat
stos
dec
in
pop
cmpb
rcll
popa
jg
mulb
fwait
dec
jns
and
adc
mov
push
lret
sahf
orb
imul
lea
or
out
testb
dec
mov
lret
mov
mov
inc
xchg
les
outsb
in
cmc
mov
jl
xor
inc
sbb
cmp
mov
stc
jmp
xchg
xchg
push
ds
bound
stos
and
test
mov
dec
repnz
and
pop
mov
and
xor
arpl
add
cmpsb
adc
push
popl
cmc
ljmp
lahf
mov
inc
sub
pop
lea
test
pop
cmp
cmc
fucom
gs
jnp
inc
cmp
rcrl
or
popf
inc
stc
lea
adc
mov
xor
inc
inc
pop
inc
clc
push
push
sti
sbb
loope
xchg
in
sti
and
int
mov
cmp
jl,pt
addb
xor
xchg
pop
scas
cmp
es
sub
fcmovu
adc
fsubp
or
and
mov
dec
cltd
pop
sub
fcoml
jecxz
xchg
push
imul
add
repz
mov
jne
aas
out
int
pop
inc
xor
sbbb
mull
lds
mov
mov
jmp
dec
in
fldl
jle
scas
aam
mov
mov
fnsave
push
add
pop
in
fs
push
and
inc
xor
test
add
mov
mov
addr16
lods
mov
lock
pop
ja
xor
adc
xchg
adcb
pusha
test
cmp
and
jp
stos
mov
ljmp
lea
and
imul
jp
cltd
cmpsb
cli
subl
out
cltd
mov
pop
adc
stos
pop
xlat
push
adc
filds
xor
dec
int
mov
push
add
enter
sbb
gs
outsl
pop
mul
push
jb
push
daa
cwtl
push
lods
rorb
arpl
out
push
rep
lcall
loop
mov
pop
popa
xchg
xchg
jecxz
arpl
cmp
repnz
mov
iret
jo
sbbb
ljmp
imul
mulb
xchg
xchg
mov
cmp
inc
sub
iret
dec
pop
jp
jno
lret
xchg
out
mov
jmp
es
jp
mov
inc
add
insl
out
and
test
shl
lock
out
iret
dec
and
ja
inc
in
pushf
or
mov
inc
shrl
xchg
jmp
sti
pop
in
fwait
test
sahf
out
mov
mov
aad
ret
je
pop
dec
sub
lds
jb,pn
shlb
add
sub
outsb
in
pusha
das
frstor
or
adc
cmp
aaa
sahf
insl
les
xor
cmp
enter
ljmp
stc
jae
into
rcll
cli
mov
pop
stos
xchg
xchg
pop
jecxz
aad
lcall
rorb
popf
pop
aaa
negl
fdivs
andl
clc
into
push
addr16
aad
ficoml
push
cmp
and
out
xchg
shr
popf
insl
push
scas
in
lret
dec
adc
lods
in
sbb
push
hlt
sub
dec
add
clc
aad
notl
in
cmp
or
mov
in
ljmp
cmp
icebp
mov
aam
pop
fs
call
and
aaa
aaa
adc
pop
or
lods
jp
push
xchg
insb
and
aam
cwtl
ja
jno
icebp
and
fdiv
or
push
fnsave
lock
rorl
pushf
lock
nop
jne,pn
pusha
popa
sub
pop
add
and
clc
cmp
aad
rcr
mov
push
xor
mov
out
pop
mov
daa
aad
xlat
push
sbb
lcall
cmc
frstor
xor
jle
push
inc
sbb
add
push
pushw
aaa
push
mov
fadd
rcrl
arpl
adc
test
aam
call
hlt
insb
fldl
cmc
loopne
or
push
add
inc
leave
repnz
mov
sub
enter
fs
and
cmp
mov
jl
ds
cmp
fiaddl
sbb
imul
pushf
outsb
mov
mov
mov
jg
popf
xchg
push
das
int
loop
lret
scas
sti
dec
mov
and
cmp
add
adc
jge
mov
push
and
or
cmp
xor
sbb
lcall
jle
add
mov
fldt
in
mov
imul
hlt
call
jb
in
insb
push
sbb
lea
in
and
adc
push
mov
cltd
sub
xor
in
test
push
cli
adc
inc
lcall
rorl
dec
lods
test
xor
cmc
lret
popf
das
xrelease
add
add
loop
sarl
loopne
leave
addr16
mov
jo
popf
shll
aam
aad
cld
addb
in
lret
lret
xor
add
xchg
xchg
jle
mov
out
aad
ss
or
mov
mov
mov
pop
mov
ds
bound
into
leave
in
xor
mov
in
add
shll
out
jg
dec
mov
push
sbb
or
mov
or
in
imul
fstl
aam
cmc
jo
mov
sub
and
movsl
lret
out
cmp
and
mov
cmp
outsl
sub
or
aad
mov
test
dec
xor
adc
mov
jmp
xchg
sbb
sarb
leave
std
ret
aad
cmp
sub
jae
popa
enter
mov
les
cs
imul
mov
iret
decb
pusha
test
test
xor
idivb
repz
lods
call
pop
shrb
sbb
push
ss
nop
aad
cli
adc
xor
arpl
in
mov
movsb
sbb
mov
lods
jo
and
mov
bound
and
xor
subl
cld
ds
cmpsl
cmp
les
pusha
or
shrl
pop
es
xor
repz
inc
cmp
cmp
sti
cli
xorb
adc
jge
js
push
fisttpll
push
ljmp
adc
mov
and
inc
and
jmp
jle
in
mov
mov
cmp
dec
movsl
fcomps
insl
mov
mov
sub
imul
insb
xchg
jno
out
ror
repnz
test
inc
mov
mov
mov
bound
pop
test
pop
popf
pop
xor
fsubl
cmp
cmc
lods
addr16
jb
out
fdivrs
pop
add
jno
push
jb
xchg
outsl
mov
stos
out
add
mov
movsb
repnz
jle
dec
int3
mov
sub
dec
sti
sub
or
dec
je
std
xor
dec
ret
dec
xchg
sub
xchg
imul
xchg
test
fildl
pop
mov
testl
jbe
in
roll
push
movsb
sti
cmpsb
mov
bound
jns
mov
repnz
and
movsl
dec
mov
lahf
insb
fistps
inc
cld
rorl
sbb
lods
icebp
imul
push
mov
fldt
addb
mov
jns
mov
cld
jb
inc
fisubl
fldenv
rolb
test
test
jno
xchg
rorb
push
repz
mov
mov
fwait
jp
into
and
cmp
insl
cmpsl
jns
pop
cli
or
or
ficompl
test
test
jne
adc
push
push
addr16
out
xor
in
jnp
sbb
dec
imul
dec
js
leave
sbb
xor
mov
jp
adc
int
pushl
fidivs
jle
push
and
aas
repz
sub
insb
dec
stc
icebp
insb
bound
fdiv
cmpsl
push
add
pop
push
scas
callw
inc
xchg
sub
xchg
pop
mov
lcall
push
shrb
jns
in
fadds
test
pop
gs
jne
xor
sbb
mov
push
push
icebp
repz
cmp
stc
scas
sbb
or
jg
test
cmp
mov
dec
imul
out
pop
lea
or
sarb
xchg
cwtl
jno
aas
jmp
cmp
out
mov
sbb
xor
ret
insb
add
ffree
ja
loopne
pop
js
add
test
sahf
cmp
jno
leave
fdiv
xorb
cmpsb
in
lret
push
push
or
xlat
push
adc
stc
or
pop
out
push
out
pop
lods
pop
mov
je
mov
or
movsl
js
leave
ss
or
fstpl
loop
aaa
bound
iret
add
cld
mov
ret
and
dec
mov
and
movsb
aam
add
pop
jge
dec
icebp
mov
cld
pop
dec
dec
sub
add
push
pop
sbb
pop
xchg
dec
xchg
jb
and
hlt
mov
inc
push
imul
ss
orl
pop
adc
jo
std
xchg
mov
mov
jae
outsb
adc
mov
cmc
loop
xchg
jns
and
inc
repnz
mov
insl
ljmp
popf
and
add
cmp
inc
jnp
pop
add
adc
test
lods
cmpsb
or
test
jne
dec
jmp
scas
inc
out
insb
sub
mov
repz
or
lock
fstps
dec
in
jg
loopne
scas
add
and
pop
add
lahf
imul
mov
stc
cld
cmpsb
xor
push
lods
out
clc
out
stc
sub
lahf
adcl
pop
push
mov
jmp
push
push
pop
sub
in
jmp
pop
mov
fidivrs
lds
cltd
outsl
xor
scas
imul
push
adc
mov
sub
movb
addr16
push
adc
popl
hlt
mov
ja
addl
shll
gs
shrl
mov
imull
xor
cmc
xlat
pushf
xchg
jle
cli
test
adc
cmp
push
nop
idivl
pop
sarl
jp
pusha
aaa
jg
inc
imul
xchg
jl
adc
fdivl
int
sub
dec
aad
imul
arpl
add
dec
ljmp
push
pushf
push
ss
test
push
sbb
mov
mov
mov
jecxz
push
pop
hlt
xlat
popa
test
std
mov
push
mov
mov
rcrl
mov
into
cmc
xchg
ret
push
outsb
dec
js
into
cmp
popf
mov
inc
sti
outsl
and
popa
ficoml
imul
lret
jl
jb
cltd
stos
pop
mov
pop
pop
xchg
xchg
mov
sub
in
push
sub
scas
stc
sbb
das
sub
in
stos
dec
int3
push
pop
jle
cmp
inc
push
and
fmuls
repz
pop
test
xor
negl
mov
mov
sbb
mov
pop
cmp
xchg
aas
fistpll
add
repnz
sub
repnz
and
sub
fiaddl
pop
cmpsb
aaa
gs
inc
fisubs
movsl
cs
push
sbbb
cmpsl
sarb
push
xchg
pop
sub
cmpsl
push
stc
add
pop
jno
sub
aas
lods
fwait
cmpsl
pop
or
test
out
gs
clc
insb
cmp
adc
and
aad
mov
mov
sbb
mov
enter
je
call
daa
xor
jmp
stos
pop
inc
push
dec
jns
scas
sbb
lds
cvtdq2ps
push
xor
mov
test
mov
adc
loopne
cmp
mov
fdivr
addr16
fsub
movsl
xchg
xor
mov
aas
rorl
cwtl
aad
sub
pushf
mov
push
jmp
sub
sub
ljmp
adc
popa
imul
out
sbb
cli
mov
outsb
sub
mov
adc
addr16
rolb
sbb
push
imul
mov
inc
iret
and
ret
ror
ret
outsb
sti
dec
pop
jne
daa
dec
ja
movsl
xor
shl
inc
or
iret
pop
adc
push
test
sub
fwait
ror
adc
movsb
clc
fwait
sub
mov
jmp
push
mov
cmpsl
adc
push
rcl
sub
cmp
jl
mov
adc
add
scas
dec
push
jge
push
or
inc
icebp
jae
cmp
repnz
and
fisubrs
push
mov
fdiv
sub
cld
in
outsb
inc
mov
cmp
add
clc
jge
addr16
mov
aad
div
adc
subb
jae
aas
aas
insb
mov
jo
dec
in
inc
cmc
xor
ror
icebp
idivl
xchg
inc
inc
int
xor
icebp
xor
lahf
int3
adc
outsb
and
add
jns
divl
lret
pop
sub
out
pop
lea
sbb
xchg
add
mov
jg
adc
adc
xchg
sar
and
test
cltd
mov
int3
push
jmp
icebp
mov
and
push
pop
in
dec
xor
and
xor
inc
aad
pop
aaa
pop
jmp
sub
fcmovu
xchg
jp
sbb
push
mov
jp
int
je
loope
ds
lahf
scas
repnz
xor
sbb
rolb
mov
dec
inc
out
xor
sti
ret
shrb
rorl
jne
add
test
add
out
stos
mov
sti
mov
lret
aas
orb
fbstp
jne
mov
out
in
push
jge
aas
xchg
adc
sbb
pop
push
shrb
cmc
icebp
add
scas
aad
lret
fucomip
testl
xchg
fadd
mov
incb
aad
test
sub
dec
push
adc
stos
mov
mov
lret
mov
loope
es
cmpsb
mov
sub
fwait
jmp
mov
lahf
stos
lds
std
inc
std
lock
or
inc
lods
std
mov
add
mov
mov
xchg
pop
xor
and
out
xor
sub
data16
aam
sbb
mov
sub
clc
push
in
ret
rcrb
sbbl
into
mov
incl
push
mov
ret
mov
cmc
inc
mov
xor
push
jae
dec
iret
mov
push
pop
mov
out
sbb
mov
mov
and
xor
mov
idivl
add
sbb
xor
jecxz
push
push
and
fisubl
inc
test
fdivs
push
add
fwait
inc
pop
rorl
pop
xchg
inc
mov
add
mov
xchg
push
jg
xor
mov
movsl
adcb
mov
dec
add
pop
xor
or
jge
pop
jp
mov
inc
xorl
dec
and
leave
loope
lds
int
leave
aam
xor
loopne
cmp
cwtl
stos
mov
xchg
arpl
mov
enter
cmp
dec
idivb
jbe
sbb
add
mov
and
sub
scas
adc
adc
cmpsb
pop
in
jmp
push
rcrl
loope
scas
addl
add
jae
sub
and
push
mov
mov
xor
pop
mov
mov
mov
das
push
dec
iret
inc
aaa
xchg
lods
cltd
sahf
sbb
pop
sbb
out
sahf
sub
and
inc
js
jns
jle
cs
dec
sarb
rclb
mov
add
sahf
xlat
mull
sbb
dec
jecxz
and
mov
xchg
add
cld
and
fisubs
xchg
sub
inc
test
xor
loope
popf
lret
ss
nop
push
hlt
stos
mov
pop
xchg
jmp
mov
test
cmp
cmpsl
into
in
mov
adc
aam
jae
cmp
int3
adc
lret
inc
insb
ds
movsl
lock
and
or
test
ss
movsl
out
inc
mov
sbb
and
jg
pop
andl
jmp
jno
mov
fildll
adc
inc
lods
sbb
aaa
sub
sbbb
outsl
sbb
push
fmuls
mov
xchg
jg
es
jae
cltd
repz
pop
mull
mov
int
inc
adc
mov
sbb
cld
out
call
bnd
fwait
testl
or
lods
sub
call
fcoms
mov
xor
stos
mov
push
jnp
and
or
imul
sbbl
mov
lret
lods
mov
adc
mov
out
test
jge
fsubp
lret
xchg
inc
dec
add
mov
mov
and
push
in
xchg
jne
adc
icebp
flds
mov
fcomps
je
insb
xor
adc
aam
dec
pop
pop
or
dec
sub
out
movsb
setg
mov
mov
arpl
xchg
push
push
jmp
mov
test
std
inc
mov
aaa
inc
sub
cmp
cmpsl
std
add
jecxz
rorl
jl
shll
xorl
lahf
pushl
sbb
jp
fdivl
into
pop
xchg
pop
xchg
in
fldcw
jmp
std
push
insb
inc
inc
hlt
outsl
sti
jbe
jl
sub
jmp
shll
int
jb
xchg
inc
pop
mov
ljmp
es
inc
int3
sbb
ja
pop
sbb
inc
jl
nop
xchg
shl
sub
push
out
daa
dec
push
cli
mov
cwtl
scas
pop
mov
mov
movl
scas
cwtl
push
sub
inc
popf
push
es
push
leave
xchg
cmpsl
lock
out
pusha
jo
sbbl
mov
out
jle
push
inc
aam
sbb
lret
mov
and
shlb
addr16
roll
sbb
xchg
aad
mov
jp
outsl
fsubr
lock
push
dec
add
cwtl
jbe
mov
sarb
and
es
push
test
or
push
lock
sarb
scas
mov
xorl
sbb
cmp
scas
into
imulb
stos
fistl
shl
shrl
mov
es
cld
ljmp
push
ret
and
es
or
add
data16
cmpsb
xor
push
into
pop
and
xchg
lret
sub
push
repnz
pop
aam
xor
das
aam
dec
cs
cmp
fst
and
mov
push
cmp
inc
pushf
sub
fucom
dec
ret
jmp
mov
and
mov
fidivl
mov
lds
inc
jmp
movsl
sub
leave
pop
stos
adc
lods
stos
in
stos
xchg
xor
lock
cld
xor
jbe
xchg
into
sahf
push
cwtl
lods
push
dec
mov
cltd
je
xchg
cmp
push
xor
cmp
cmp
scas
fdivrl
xchg
xchg
iret
icebp
aam
gs
jl
sbb
pop
mov
cld
sub
addr16
add
movsb
inc
xchg
inc
rolb
mov
jle
aad
popf
leave
fdivrs
int
add
push
xchg
jmp
push
dec
add
xchg
inc
sbb
imulb
call
mov
sbb
jnp
bound
loopne
jl
or
pop
ret
xor
or
or
mov
scas
or
or
lcall
imul
and
jecxz
xchg
test
jbe
or
lock
add
clc
orb
testb
jle
or
xchg
mov
ds
pop
ss
mov
dec
test
inc
je
leave
lds
add
sbb
adc
jbe
and
repz
inc
test
xor
mov
xchg
cmpsl
pop
sbb
lret
in
out
mov
jp
push
ljmp
sub
cltd
sbb
sub
cld
inc
cmp
arpl
in
inc
aad
jbe
rorl
xor
out
outsb
jbe
loop
gs
sub
push
pusha
shrb
clc
fldenv
lret
xchg
pusha
mov
repnz
aam
pop
mov
or
jns
stos
inc
out
stos
hlt
in
ja
fldcw
cmp
mov
fdivl
mov
cmp
jb
dec
mov
int3
cmp
pop
mov
daa
and
mov
call
sbb
shl
jecxz
jge
mov
movsb
gs
jnp
xchg
fcoms
out
mov
inc
js
popa
movsl
and
test
cmp
loop
pop
lea
or
out
sub
xor
int
jecxz
ds
neg
fcmovne
xchg
mov
sbb
mov
sbb
mov
rorl
xor
dec
adc
adc
adc
fcoml
stos
mov
ss
cltd
jns
adc
out
adc
adc
movsl
fisttpl
lods
xchg
jp
out
ds
cmpb
jno
dec
jecxz
out
pop
shrl
imul
sub
dec
test
adc
sahf
sbb
mov
stc
sub
stos
push
cmpsb
push
add
dec
sub
jmp
dec
in
iret
sub
and
fildl
jl
lcall
xchg
xchg
mov
fwait
fwait
aas
mov
pushf
dec
cmp
xchg
insb
jle
in
sbb
inc
adc
insb
lret
or
pop
push
decl
jge
push
scas
sarl
push
mov
or
data16
fxch
test
pop
jb
push
mov
pop
cld
cltd
xor
cmc
add
cs
jl
in
ret
sub
inc
fisttpll
bnd
lret
inc
mov
xor
aaa
inc
push
clc
repz
and
roll
xchg
rorb
mov
jge
cli
jp
add
push
imul
mov
xchg
movsbl
adc
js
int3
sbb
jnp
push
push
push
icebp
pusha
add
mov
cmp
add
or
dec
lahf
cmpb
mov
sti
jbe
test
add
lock
and
fldlg2
out
movsb
and
pop
stos
cmp
stos
adc
mov
lock
push
rclb
pushf
fdivrl
xchg
daa
mov
shl
mov
mov
sub
aaa
jl
push
or
data16
adc
mov
shl
xchg
adc
inc
popf
push
dec
xchg
fs
sub
xlat
and
dec
std
dec
testb
ss
cmpsl
and
xor
jbe
xchg
hlt
inc
push
mov
add
mov
push
and
mov
adc
idivl
fbld
sti
add
insb
inc
jbe
mov
out
or
add
mov
js
in
jno
push
int
mov
and
mov
xor
or
popf
stos
es
adc
daa
adc
out
adc
jp
sub
push
fadd
mov
mov
jg
inc
ffree
push
leave
in
pop
ss
mov
push
cmc
lahf
and
and
or
xorb
xchg
addr16
leave
mov
lcall
cmpb
imul
mov
jae
insb
fstpt
push
sbb
mov
mov
and
jmp
shrb
mov
orb
leave
movhps
nop
addr16
and
loope
out
icebp
jns
filds
mov
hlt
jae
jge
cmp
push
add
call
push
add
test
fsubrl
jnp
icebp
rcrl
add
mov
sbb
xor
xor
and
int
pop
pop
int3
and
adc
in
sub
mov
cmp
sbbl
std
and
mov
in
test
out
jle
nop
mov
scas
mov
idiv
jo
loop
inc
aas
mov
add
pand
xchg
mov
dec
shll
jnp
xchg
xor
mov
mov
adcb
mov
jo
mov
jb
mov
or
ret
out
fs
incl
lret
stc
ds
cmc
pop
pop
sbb
rorb
cld
call
arpl
cmpsl
inc
ret
push
lfs
xor
push
int
pop
mov
and
out
mov
das
cmp
and
roll
pop
ffree
push
cmc
scas
cmpsl
sti
sub
lds
push
mov
fidivl
je
iret
xor
int
dec
and
lea
popa
sbb
and
fcomps
out
cmc
imul
ret
shl
add
fnstcw
loop
adc
jmp
dec
icebp
lods
jg
ja
mov
adc
outsl
lahf
bound
movl
dec
pushf
or
ret
xor
test
aaa
jg
out
imul
mov
lods
fnsave
cmpsl
mov
push
push
scas
jae
mov
ja
mov
mov
lcall
jo
sahf
add
pop
dec
adc
mov
and
popf
adc
and
dec
test
imul
inc
pusha
push
aam
nop
jge
or
jg
mov
roll
outsl
into
or
sti
iret
push
adc
mov
incl
add
pop
stc
inc
inc
pop
push
rol
dec
cmp
inc
xor
ljmp
outsb
jbe
iret
lds
test
ds
or
out
inc
sti
pop
add
int3
lock
dec
int
inc
xchg
cmpb
pusha
push
daa
repz
rcrl
mov
sahf
subb
cmp
adc
sbb
mov
iret
popf
dec
adc
lret
lahf
and
xor
stos
fst
pop
add
ret
cld
jmp
push
daa
sarb
xchg
and
adc
mov
mov
popa
sbb
ret
daa
jb
push
xchg
mov
push
and
daa
inc
and
inc
cmp
cli
subb
sub
jge
push
and
addr16
mov
mov
cwtl
mov
lods
daa
loopne
std
cmpsl
mov
xor
shll
jne
or
adc
mov
inc
adc
mov
xor
out
imul
mov
ss
pop
imul
push
xor
cli
sbb
jbe
stos
iret
inc
xor
inc
stos
test
mov
in
pop
push
aaa
jnp
jns
gs
insl
cmpl
lea
push
loopne
sub
jae
mov
push
lret
mov
dec
xchg
int3
xchg
sub
add
jmp
push
adc
outsl
or
pop
je
cld
dec
or
imul
popf
dec
ret
mov
stc
fcmovne
imul
test
insl
push
dec
ljmp
push
in
jge
pop
mov
std
aam
ret
push
fisubrs
inc
xchg
sti
out
pop
pop
jg
mov
ficoms
fs
imul
filds
jne
mov
inc
jmp
gs
jg
jmp
cmp
int
out
and
mov
sub
add
popf
sahf
and
setp
std
mov
cmp
repz
lea
mov
divl
repz
mov
pop
int3
inc
mov
adc
mov
pop
test
test
jb
shlb
sbb
out
jne
xchg
dec
mov
dec
std
jns
pusha
into
les
push
fstpt
inc
jmp
mov
iret
mov
lret
jnp
dec
and
add
mov
mov
std
das
call
aaa
dec
dec
testl
mov
stos
add
pop
xchg
jp
enter
cmpl
mov
ret
mov
xor
xchg
jmp
jnp
and
ja
fdiv
scas
enter
mov
lea
push
mov
or
sbb
push
fsubl
int3
push
mov
mov
jo
xlat
or
and
dec
xchg
sbb
cmpsb
fsubs
nop
jb
mov
cwtl
loopne
push
ret
pop
sub
jno
mov
in
push
sti
cld
clc
lret
imul
das
fdivrs
xor
mov
and
lcall
pop
xlat
sti
sub
cmp
mov
pop
test
addb
fwait
inc
xor
push
jge
and
aaa
pushf
push
adc
test
gs
insl
rorb
and
mov
mov
sbbb
push
push
sub
push
sbbb
mov
into
mov
sbb
fmul
cld
out
mov
mov
or
nop
push
lods
xor
mov
cmp
lea
sbb
inc
adc
faddp
sbb
xor
cmc
stos
mov
add
sub
lcall
mov
sbb
data16
cmp
push
sbb
lret
fdivr
mov
hlt
mov
and
mov
adc
inc
jp
dec
movsb
add
and
sbb
xchg
out
or
jecxz
xchg
cmp
inc
push
mov
clc
call
xor
or
sub
cmp
dec
clc
adc
in
push
mov
sub
xor
sbb
sbb
pop
inc
xchg
jno
sahf
xchg
sbb
fstpl
out
sbb
js
push
mov
jmp
xor
enter
aaa
loope
sub
dec
out
outsb
inc
dec
inc
and
fimuls
lds
fcmovnbe
je
mov
or
mov
jl
xlat
enter
xchg
dec
dec
push
mov
mov
mov
jg
clc
jne
xchg
out
int3
pop
scas
cmc
add
data16
fld
pop
subl
into
loopne
jg
sub
and
sbb
inc
test
test
bound
and
add
dec
lea
mov
lahf
cmp
fucomip
or
sbb
push
adc
outsl
ret
mov
dec
jl
push
sti
repz
jnp
cli
out
mov
mov
call
nop
lds
mov
lahf
and
and
xchg
stc
fs
sbb
jp
mov
mov
leave
or
sub
fdivrl
daa
xchg
ljmp
lods
aad
ret
pushf
jae
es
jle
lret
jg
adc
aaa
mov
push
inc
lock
rcll
mov
mov
jge
fsubl
or
xorb
push
sub
ss
jae
cmp
sbbl
jg
popf
pusha
call
mov
sbb
lcall
push
jbe
push
pop
jns
imulb
das
lahf
sub
push
pminub
and
inc
push
daa
xor
rcrb
jnp
dec
aam
fimuls
cmc
mov
and
cld
dec
ss
rclb
mov
aaa
jno
jne
push
ret
hlt
subl
aaa
test
loop
and
int
pusha
fisubrl
xchg
inc
sbb
push
psadbw
cmpsb
jmp
clc
shll
inc
hlt
or
mov
gs
pop
sbb
xor
mov
lcall
pop
enter
add
mov
scas
dec
aas
rcl
dec
insb
mov
sub
inc
mov
fwait
adc
mov
fs
xchg
insl
out
adc
mov
cmp
icebp
lret
inc
push
inc
push
clc
mov
mov
jmp
loop
mov
scas
push
mov
inc
xor
imul
cmp
and
mov
out
jo
cmpsb
roll
and
mov
inc
hlt
push
imul
push
les
scas
and
mov
repnz
mov
xchg
xchg
enter
xchg
pop
sbb
in
enter
fisttps
add
dec
sbb
sbb
jmp
adc
jl
jmp
xchg
loop
adc
ret
mov
and
jecxz
jmp
jbe
fs
loope
leave
cmp
xchg
repnz
xchg
in
fld
pop
ja
mov
cli
shll
push
mov
in
ja
out
lret
insb
out
cmpsl
ljmp
inc
loop
sti
inc
cli
inc
push
adc
pushf
xor
int
sub
adc
loop
outsb
xor
and
idiv
insl
jp
and
loope
pusha
enter
idivb
jo
in
popa
cmp
icebp
insb
and
cli
mov
or
es
dec
ds
in
mov
mov
push
push
lock
outsl
je
mov
pop
dec
sbb
and
stos
dec
push
ss
pop
jmp
mov
push
and
in
mov
sti
pop
cli
lret
push
lods
cmp
cmpb
jo
inc
and
mov
inc
add
movsl
push
leave
mov
jno
mov
into
pop
jnp
sar
cmp
sub
stos
lds
call
das
loopne
test
mov
adc
fcomps
pop
aad
dec
add
add
sub
or
arpl
dec
iret
mov
stos
outsl
cmpsl
ret
lds
out
notl
lea
test
ror
dec
imul
xor
xchg
testl
mov
dec
sub
pop
ljmp
in
sub
and
xchg
lock
xchg
mov
mov
push
jmp
or
cmp
fs
rorl
sub
lods
cwtl
push
divb
inc
movsl
aam
ds
or
outsb
outsb
mov
cmc
loope
lahf
dec
aaa
pop
xchg
adc
cmp
inc
xchg
fwait
daa
mov
aam
sbb
jno
cmp
mov
pop
pop
sub
push
fsincos
push
cmpsb
iret
mov
test
punpckhwd
aad
mov
inc
call
into
add
ficoml
sahf
xor
cltd
xlat
lcall
jne
mov
cmp
test
pop
ja
cmpsl
or
mov
call
fistl
jl
cmc
dec
sbb
aaa
inc
add
and
push
cli
inc
fucom
nop
das
cltd
int
outsb
repz
lcall
and
inc
outsl
call
int3
shr
xchg
xchg
cmpsb
xor
xlat
mov
or
lea
mov
fmuls
jle
inc
jp
adc
scas
xchg
test
stos
cs
xchg
sbb
mov
test
into
arpl
mov
mov
xor
scas
js
cmp
in
xor
sub
inc
adc
adcl
xchg
jge
xchg
inc
int3
aam
push
inc
mov
jl
jge
jg
add
int
cwtl
or
insb
cmpsb
lahf
pop
loopne
inc
mov
mov
adc
mov
out
rcr
lods
dec
xchg
jne
and
cs
arpl
out
mov
mov
xor
xchg
daa
ss
pop
push
inc
or
add
cmp
or
adc
push
lock
ljmp
mov
xchg
fstl
sub
call
dec
inc
adc
in
mov
jl
mov
rcll
fbstp
pushf
test
cmp
sub
xchg
xor
push
out
cmp
jl
sarb
sbb
and
pop
vmread
dec
add
ret
lock
mov
jb
movb
mov
bound
or
sahf
sbb
test
cs
lock
sbb
imul
in
jecxz
ds
xor
add
loopne
test
repz
inc
dec
xchg
mov
mov
sub
push
or
add
xor
mov
mov
testb
outsl
pop
scas
sbb
xlat
fbld
inc
je
cmc
lock
push
add
outsl
xor
ljmp
sbb
mov
out
dec
lods
pop
add
je
ret
scas
rolb
add
sub
pop
mov
mov
ret
sysenter
dec
jb
xcrypt-cfb
cmpsl
jecxz
inc
dec
das
into
sub
in
loope
data16
sbbb
mov
push
jo
dec
std
daa
xor
push
jp
aas
loope
lods
nop
rorb
xchg
into
inc
outsl
mov
insl
or
inc
cltd
push
rorl
xchg
jno
sahf
jbe
lret
arpl
lea
adc
in
mov
sbb
mov
cmp
movsl
dec
or
sbb
pop
adcb
jb
or
adc
or
sub
out
pop
ficoms
cmpsb
incb
push
lea
fstpt
cld
test
mov
dec
lcall
movsl
aam
xchg
mov
pop
xchg
std
mov
into
xchg
mov
in
pop
xorl
add
and
cmpsl
mov
rorl
pop
or
add
shrb
mov
fnsave
xchg
movl
sarb
dec
push
pop
fildl
and
inc
mov
dec
loope
or
mov
inc
je
and
shrd
and
cmp
adc
test
movsl
inc
movl
push
pushf
adc
pusha
jmp
mov
sub
into
mov
ss
in
xor
dec
div
adc
push
mov
jo
ret
jb
cmc
inc
add
add
sahf
mov
sti
mov
mov
shlb
mov
cmp
movsb
push
xor
lret
jg
jmp
mov
adc
lret
sbb
cwtl
shll
xchg
scas
lret
punpckhwd
ljmp
shl
jbe
add
cmpsl
aad
push
jbe
std
orb
mov
push
mov
cld
and
add
xchg
test
rcll
mov
push
and
sub
lret
sti
push
jp
fdivl
pop
je
pop
add
gs
inc
adc
push
dec
neg
inc
in
mov
xchg
imul
add
shlb
and
fcompl
jbe
mov
add
jge
sub
in
or
sub
mov
jne
ret
pop
xor
xchg
out
repz
sub
test
xchg
mov
xchg
cmp
pop
or
js
push
add
add
popa
inc
mov
mov
lcall
daa
aad
or
mov
fdivrs
push
int
es
xor
popf
xchg
fs
mov
ret
jnp
sbb
add
mov
push
xor
inc
push
incl
push
pop
rol
dec
dec
adc
aas
sbb
ficoms
shl
mov
mov
bound
cmc
inc
movsb
mov
fcoml
test
jecxz
dec
nop
xchg
ret
sub
shll
push
cli
dec
mov
sbb
movsl
loope
data16
xor
loopne
rcr
jl
sub
inc
or
xor
adcb
enter
add
mov
cld
icebp
mov
xor
add
int3
mov
imul
pusha
ja
cmp
das
outsb
in
ficompl
mov
push
idiv
add
mov
fimuls
in
mov
jle
mov
push
inc
lea
sub
push
fidivs
jge
aam
dec
rcr
xor
int
ja
dec
cld
xlat
cmp
xchg
push
xchg
sbb
dec
ja
fstl
decl
jge
add
fmull
ja
and
stos
inc
and
push
sub
testb
js
cmp
mov
sbb
or
push
cld
xor
stos
in
scas
inc
sbb
imul
out
int
inc
lret
and
push
scas
testl
mov
push
sbb
add
adc
fcoml
pop
cmp
push
loop
inc
mov
jnp
add
pop
imul
aam
popa
out
adcl
pop
push
pop
push
sahf
jns
out
cld
push
or
mov
sbb
test
ret
sub
cltd
aas
cwtl
mov
sub
aaa
mov
push
ss
xor
cmp
dec
movsl
mov
movsb
add
jns
fs
sbb
cltd
or
sub
xchg
cmc
std
adcl
push
push
mov
inc
inc
scas
mov
mov
cmpsb
lcall
and
sbb
jl
gs
adc
mov
and
sbb
adc
xchg
mov
test
dec
jne
mov
xchg
js
inc
xchg
inc
push
xchg
scas
add
pop
xchg
in
loopne
sub
sbb
lahf
push
push
repnz
xchg
or
popf
aam
inc
mov
popl
or
out
lahf
in
sbb
xchg
dec
ss
add
andb
inc
cmp
sti
and
xchg
outsl
xchg
out
cmp
push
loop
or
cs
dec
fstps
sub
dec
psrlq
push
or
mov
jb
cmpsl
ficompl
outsb
and
mov
lock
pop
fucomip
ret
repnz
ja
mov
xor
inc
leave
xor
xlat
sub
jle
push
xchg
pusha
jg
arpl
pop
inc
xor
vmovshdup
xchg
loope
mov
lret
mov
fadds
pop
cmpsb
mov
lea
test
pop
loope
inc
rorl
imul
cmp
xchg
iret
mov
or
lcall
inc
jle
lods
push
fwait
stos
mov
dec
or
add
push
push
das
les
adcb
jmp
repz
sbb
jo
addb
xchg
push
xor
int3
das
je
and
stc
daa
loopne
addr16
lods
loop
mov
into
sub
stos
xchg
ds
int3
or
cli
cmp
xchg
mov
out
mov
or
fistpl
adc
das
popl
pop
xchg
cmp
ret
lds
lods
shrl
incb
push
loope
sbb
lods
std
lea
sub
mov
push
mov
je
outsb
and
outsb
and
xorl
roll
cmc
call
fs
jecxz
or
pop
shrb
jg
mov
test
jecxz
jnp
push
icebp
mov
xchg
hlt
lds
test
lds
sti
sub
add
jb
push
dec
test
test
xchg
clc
jp
jne
add
out
ret
pop
imul
pop
sub
jmp
addr16
push
adc
sub
rolb
imul
imul
and
pushaw
cmpsb
cmpb
add
mov
mov
sbb
shlb
cmpl
cmpsb
mov
stos
sub
int
std
jo
popa
cmp
enter
rclb
xor
lods
mov
pop
lea
sub
insl
cmpsl
and
cmp
mov
and
out
lret
inc
add
lds
inc
pushf
adc
movsl
daa
sbb
adc
test
call
or
cs
dec
and
wrmsr
ret
fldl
sub
mov
pop
and
or
fwait
sarl
cmp
and
cwtl
data16
stos
push
roll
mov
cmpsl
gs
and
mov
outsb
scas
mov
mov
ss
add
adc
add
test
test
subl
ja
lea
mov
mov
addr16
adc
mov
inc
cmp
dec
lret
mov
out
xor
lock
add
or
ret
jecxz
dec
pop
ret
movsb
pop
pop
push
fbstp
jle
or
aad
imul
mov
outsl
cmp
jmp
dec
js
cld
pop
cmp
jne
cmp
cmp
xor
lods
push
add
xor
enter
repnz
mov
sahf
xchg
movsl
fcomps
adc
test
xchg
jae
fdivl
ret
cmp
cmp
ret
stos
out
test
xor
incl
xchg
adc
pop
pop
mov
pop
add
movsb
lods
fld
into
jle
and
fcmovu
aam
and
mov
movsb
fstps
dec
adc
lock
daa
or
dec
dec
sbb
clc
cli
adc
dec
inc
mov
mov
imul
xchg
xchg
xor
or
push
fucompp
out
movsl
fcoms
in
dec
jp
pop
lret
inc
pop
lock
fbld
jne
sbb
sahf
hlt
fsubrl
pop
xchg
cld
sbb
adc
bound
mov
inc
cli
subl
jge
clc
shlb
pxor
iret
push
ret
leave
bound
rcr
stos
mov
jo
nop
jl
push
pop
jg
jp
cmpsl
push
adc
mov
cmc
pop
clc
movsb
dec
fsubrs
cmc
int3
mov
xchg
xor
subb
dec
dec
js
mov
pop
dec
mov
push
imul
mov
in
fwait
push
imul
jmp
add
sti
cs
lahf
scas
or
icebp
or
add
test
leave
rcll
sbb
dec
lcall
ljmp
hlt
adc
inc
xchg
out
mov
jl
xchg
lds
cmp
and
and
popf
das
mov
pusha
aam
rcll
jae
pop
xchg
mov
mov
xor
sarb
mov
push
pop
dec
adc
lahf
add
jecxz
sbb
imul
cmp
in
movsl
ljmp
ficoml
or
js
adc
pusha
mov
loope
cltd
cli
mov
sti
clc
sbb
cmpsb
push
pop
push
cltd
jo
mov
in
mov
dec
mov
mov
adc
mov
das
int3
popa
mov
push
jge
jmp
push
cmp
adc
ljmp
xor
or
lds
sbb
scas
add
xchg
shll
int
mov
xchg
xchg
les
or
int3
mov
fs
dec
iret
nop
mov
das
sub
adc
cmp
pop
in
fimuls
and
iret
add
movsl
jmp
jns
loop
sti
in
arpl
andl
pop
orb
shl
adc
push
shll
daa
add
sub
inc
test
lds
subl
push
xchg
lret
inc
push
adc
aad
and
lods
inc
inc
cmp
cmp
mov
out
jl
ja
or
rolb
inc
jo
pusha
jecxz
outsb
xchg
iret
xor
mov
and
arpl
lods
inc
arpl
jnp
mov
push
test
pop
lods
mov
aad
lods
dec
ficoml
sbb
ret
lds
fsubr
pusha
sub
or
stos
testb
sbb
lret
mov
inc
je
divb
cmp
xchg
out
xor
push
pop
mov
push
sarl
or
test
sub
jmp
or
loop
sub
repz
sub
and
xchg
cmpsl
popf
subb
jl
aaa
adc
xor
pushf
int
mov
jbe
jns
push
pop
loope
pop
enter
pushf
sbb
lds
mov
push
sbb
movsl
inc
and
mov
outsl
pop
out
jg
int
adc
nop
mov
push
xor
loop
mov
push
gs
subl
nop
and
popa
add
imul
pop
popf
add
mov
out
gs
es
sub
pushf
inc
push
pop
push
xchg
in
fisttpl
out
testl
cli
seto
loop
lds
popa
sbb
add
xchg
pop
xchg
pop
lahf
cmp
test
xchg
loope
movsl
cmp
ret
scas
jne
add
int
fistpll
jg
or
test
sub
cwtl
test
dec
dec
adc
xor
cmp
jbe
or
mov
shrb
insb
jl
push
aam
push
push
cmovle
mov
dec
jns
adc
push
and
mov
cld
and
pop
je
push
insb
sbb
cmpsl
mov
or
lds
data16
dec
hlt
sarb
and
push
mov
adc
or
jno
push
lret
and
adc
push
icebp
rorb
es
bound
movsb
jmp
mov
addr16
cwtl
out
insl
mov
mov
jae
dec
mov
out
loope
xchg
dec
stos
push
xor
or
xlat
repz
stc
stos
mov
jl
and
fs
cmpsl
push
hlt
inc
imul
lret
iret
rclb
jl
mov
popf
rclb
xchg
add
or
loope
ljmp
aaa
lret
sbb
jne
pop
dec
jnp
push
xlat
lcall
movd
icebp
call
adc
adc
stc
push
ss
stc
repz
outsb
out
mov
inc
or
pop
sub
jne
ja
jae
sti
cmp
push
mov
pop
xlat
cmp
inc
adc
xchg
jno
cmpsl
cmp
clc
sbb
nop
dec
add
xor
shlb
lcall
out
rolb
mov
pop
loop
arpl
pop
clc
scas
pop
faddl
sbb
lods
cwtl
inc
pushf
cmp
dec
dec
js
fwait
mov
lock
mov
pop
inc
dec
xchg
imul
push
sarb
dec
ret
push
and
daa
lock
fwait
cwtl
sub
in
bound
fadd
adc
arpl
fstpt
push
addr16
xor
enter
cmpsl
jp
sub
in
outsb
mov
test
jg
fadd
leave
sub
leave
add
xchg
xor
sub
push
mov
mov
test
xor
adc
xchg
or
stc
int3
lret
xchg
aam
fwait
xor
andl
push
sub
push
iret
iret
ret
movsb
je,pn
inc
pop
test
dec
add
clc
pop
inc
jecxz
xor
push
mov
xchg
pusha
push
sti
mov
xchg
dec
cmp
jg
xchg
xor
iret
mov
in
jge
or
fwait
pusha
cmpsl
inc
loop
adc
ja
repnz
mov
out
push
add
xchg
jo
or
mov
sbb
mov
cmp
mov
push
stc
cmp
push
xchg
push
sar
mov
fisttps
sbb
jbe
imul
dec
sbb
xor
push
cwtl
mov
in
sbb
cmpsl
std
sub
sti
nop
push
jns
call
nop
in
dec
push
stc
lds
bound
in
push
ss
xor
or
js
or
push
aad
adc
mov
std
xchg
mov
push
sub
rep
sbb
or
xor
cmpsb
imul
inc
inc
add
sub
iret
jae
fiadds
mov
mov
jae
dec
jge
cld
int
push
loopne
jne
aaa
cld
pushf
mov
std
sbb
push
adc
sbb
pusha
pop
sahf
mov
xor
shll
cmpsb
and
std
push
sub
inc
lods
add
push
xchg
in
pushf
xor
xlat
insl
loop
les
push
push
rcr
loop
ljmp
jae
jne
mulb
cld
mov
jge
jo
ljmp
mov
mov
cli
insl
xchg
mov
rcrl
arpl
sbb
pop
mov
pop
icebp
inc
ja
adc
out
cs
in
fisubrs
dec
inc
pop
inc
negl
cmp
push
sbb
xlat
test
pop
mov
adc
sub
pop
shrb
push
cmp
mov
add
imul
daa
cmp
cmp
dec
pop
pop
xchg
cs
ret
mull
xchg
mov
pop
jecxz
stos
pop
mov
and
pop
mov
sbb
ljmp
hlt
pushf
mov
js
jae
push
push
insl
inc
xor
xchg
lret
cmp
ficoml
in
mov
pop
mov
pop
hlt
lret
xor
and
push
and
stos
bnd
jge
pop
adc
lods
or
out
push
mov
xor
test
test
cmpsb
push
xor
into
das
cmp
adc
mov
pop
and
adc
fmuls
inc
aad
pop
cmp
or
lods
xchg
jmp
mov
adcl
xchg
jle
pop
clc
mov
sub
xor
rclb
xchg
inc
divb
xor
mov
or
int3
out
dec
xchg
inc
movsl
lahf
mov
test
ja
push
dec
push
xor
or
enter
sbb
repnz
lds
push
daa
addb
imul
sbb
cmp
cwtl
push
iret
mov
add
pop
sahf
rclb
pusha
add
add
sbbl
or
inc
lret
cmpsb
push
or
pop
xchg
xor
dec
andl
jecxz
sub
dec
cmpsb
mov
movsb
pop
bound
adc
inc
and
or
dec
xor
sahf
lahf
mov
mov
adc
int
push
or
push
push
hlt
ljmp
dec
mov
lock
cmp
jp
cli
xchg
push
lds
ud2
ljmp
mov
lahf
jp
fwait
test
loop
sbb
cmc
je
mov
in
jecxz
aad
sub
call
repz
mov
sbb
mov
push
lods
sarl
adc
jno
cmp
jle
inc
iret
icebp
inc
xor
xor
test
push
xchg
jns
push
loop
sti
stos
xor
pop
cmp
inc
push
mov
test
cwtl
xor
ret
and
stc
pop
in
mov
jae
adc
out
int3
or
fdivrl
out
and
cmp
xor
jmp
test
and
daa
out
loop
mov
movsb
maxps
in
push
mov
and
fidivrl
movsb
inc
repz
adc
iret
jge
test
sbb
mov
rol
pop
push
rclb
nop
leave
mov
jg
xor
lcall
mov
mov
aas
les
and
lret
mov
cmp
sbb
xchg
cmp
add
mov
mov
in
inc
imul
or
popa
pop
jecxz
dec
ja
ja
add
arpl
inc
stos
mov
das
test
dec
mov
push
shlb
rol
xor
daa
jmp
call
dec
sub
rcll
in
imul
aam
xor
dec
mov
cmp
imul
cli
or
cmp
insl
nop
std
sub
xorps
mov
js
xor
or
hlt
lods
and
mov
adc
cmpsb
cld
cld
pop
inc
sub
jmp
add
adc
mov
movsb
andb
in
mov
int3
cmp
imul
sbb
xor
es
mov
ret
lcall
xor
sub
xlat
inc
es
ds
push
cmp
push
loop
ds
cld
es
sub
ret
adc
nop
mov
jne
test
sbb
mov
mov
stos
shll
jle
cmp
ficoml
add
sbb
pop
in
jmp
imul
mov
xchg
sub
dec
popa
xchg
fcoml
int
pop
ljmp
cltd
pop
xor
sub
ja
dec
lods
fnsave
xor
movsb
xchg
xor
std
mov
sahf
ret
or
xorb
movl
mov
push
scas
add
add
jmp
repz
std
outsl
add
popf
scas
repnz
mov
outsl
nop
aas
hlt
in
push
xor
cmp
addr16
aam
fwait
sub
sahf
arpl
sub
ret
stos
sahf
movsb
mov
xor
mov
insb
sub
pop
lods
inc
lret
sub
add
fstps
sub
mov
mov
call
and
loope
outsl
and
test
mov
stos
shrl
jp
cs
adc
mov
pushw
imul
dec
outsb
test
inc
ss
jne
pusha
fldcw
push
inc
roll
fisttps
andb
decb
xchg
add
in
repnz
idivb
js
movsl
hlt
scas
sbb
cmp
hlt
ljmp
leave
xor
and
inc
scas
adc
ljmp
push
scas
and
inc
ja
into
xor
push
repz
divl
stc
inc
add
mov
insb
pop
mov
sbb
xchg
sub
dec
retw
mov
xorb
dec
ss
popf
out
mov
push
push
cli
push
push
sbb
addl
lahf
sub
cltd
sbb
cli
xchg
xchg
jb
mov
mov
dec
inc
out
fwait
xor
mov
lods
rcrb
std
daa
adc
outsl
in
xor
ficoml
sub
stc
das
gs
fcompl
pop
jg
or
pop
mov
sub
push
ret
push
jg
lods
test
pop
cs
xchg
or
xor
cltd
mov
fistl
fstpt
inc
push
lods
mov
pop
xlat
aaa
ja
cmp
xchg
jecxz
stos
fwait
aas
xchg
dec
inc
mov
loopne
add
pop
rolb
sbb
push
push
outsb
cmp
je
xor
pop
xor
cmp
lods
mov
popa
jl
adc
rorb
push
cmp
xchg
push
test
aas
roll
cli
sub
movsl
add
mov
mov
inc
lock
popa
cmc
leave
cmp
mov
leave
test
or
inc
push
add
push
pop
cmp
lahf
stos
cmp
xor
xchg
mov
push
ljmp
sahf
adc
xchg
xchg
inc
sub
adc
cmp
ljmp
rolb
mov
cmp
js
and
mov
mov
inc
jb
sbb
loop
cmp
dec
sbb
movsb
dec
sub
movb
enter
stos
add
syscall
out
ljmp
sbb
or
test
out
test
aas
out
clc
push
xor
cmpsb
addb
mov
in
or
clc
push
lea
mov
xchg
add
orb
rorl
test
dec
mov
lret
and
test
bound
push
cwtl
jge
xchg
in
das
dec
cwtl
mov
imull
adc
pop
sub
cs
or
sub
add
pop
imul
insl
rclb
inc
repnz
stos
loope
int3
push
mov
addb
arpl
scas
adc
mov
das
clc
adc
call
cmc
mov
sbb
movsb
or
das
repz
xor
inc
cwtl
jns
jecxz
inc
mov
fisubl
pop
mov
dec
ss
rolb
jns
push
pop
mov
lret
jno
cmc
pop
sub
or
pop
hlt
jmp
aaa
daa
pop
push
cli
shl
mov
jae
push
jns
leave
mov
notb
mov
rclb
mov
aaa
adc
fsubp
int3
add
in
cmp
in
rolb
add
cmp
sbb
cmp
inc
jecxz
xor
inc
repz
sbb
inc
mov
mov
sbbb
sub
dec
dec
mov
add
out
push
test
pop
test
xchg
mov
xchg
mov
inc
mov
adc
shll
sub
push
into
mov
jnp
push
jne
adc
sbb
cmc
pop
push
out
add
adc
daa
repnz
pop
test
jmp
cmp
or
movsl
inc
syscall
mov
lods
call
insb
ret
imul
loop
insl
lock
lahf
add
cmp
arpl
adc
xorl
icebp
icebp
sbb
lret
imul
or
sub
inc
in
push
scas
mov
movsl
adc
inc
push
sti
pop
push
in
hlt
stos
inc
inc
stos
cli
inc
out
pop
fiaddl
arpl
leave
jg
test
and
std
inc
cli
and
and
xchg
sub
icebp
inc
lret
pop
push
subl
xchg
ds
loopne
jne
pop
xchg
jnp
in
nop
sbb
enter
jno
or
xor
jge
sahf
in
icebp
pop
vcomiss
pop
outsl
pop
shlb
cli
lret
dec
sbb
sti
negb
push
sub
shl
mov
mov
popa
mov
and
mov
add
movsl
lods
fldcw
test
jge
adc
and
xchg
xchg
imull
mov
push
div
xchg
sub
xor
or
shl
inc
in
pusha
xchg
les
dec
xadd
dec
mov
frstor
cltd
or
inc
outsb
inc
imulb
cltd
fistpll
jg
adcb
lds
imul
or
mov
mov
adc
out
stos
pop
xor
aas
mov
cmc
fcomps
sbbl
mov
or
ljmp
aaa
movsb
imul
arpl
xlat
icebp
pop
mov
movsl
sbb
cmpl
loope
outsl
lcall
jne
mov
pop
clc
inc
fnsave
cmp
test
lret
daa
add
sahf
jmp
rorl
xor
movsb
aas
xor
jmp
sub
imul
aad
jae
xor
push
push
pusha
mov
imul
push
mov
xchg
dec
mov
and
lcall
mov
roll
jne
outsl
jne
lcall
cmpl
mov
and
jg
sub
xor
xor
lods
or
ss
or
sub
mov
mov
pop
dec
js
mov
dec
in
push
add
scas
xor
leave
pop
call
jl
loope
rcrl
leave
ret
mov
push
pop
sub
aaa
je
into
lahf
xlat
mov
mov
into
xor
imul
sub
fstpl
insb
sbb
idiv
push
mov
and
cmp
sub
or
dec
lret
int
fisubl
and
iret
sub
int3
out
pop
ficoms
repnz
test
pushf
push
push
fdivrs
sbb
int3
jns
pop
add
int
lea
mov
in
sub
xor
div
or
adc
out
cmp
dec
rcrb
mov
inc
jmp
mov
pop
jecxz
loopne
xlat
pop
adc
lds
pusha
fsubrs
and
adc
sahf
add
test
mov
push
pop
xchg
jae
ret
xor
and
or
push
shlb
mov
fidivl
hlt
add
pop
repz
aad
mov
push
movsl
push
inc
pop
or
mov
lds
test
js
sub
push
fwait
pop
mov
pushf
adc
push
fcmovbe
add
lcall
inc
or
pop
test
jmp
mov
and
mov
sub
aad
loop
add
jns
xor
and
lret
test
pop
pop
mov
cli
iret
pop
inc
je
pop
aaa
lret
iret
dec
fdivrp
je
push
pop
jle
pop
rorl
fsubrl
xchg
jno
andb
fs
pop
in
xor
pop
xchg
lret
popl
push
add
das
jb
cli
push
fs
add
loopne
cmp
or
imul
inc
cwtl
sub
and
jecxz
push
mov
movzwl
and
jo
and
jp
jecxz
or
adc
add
aam
cwtl
push
ljmp
out
fldl
pop
fadds
negb
xchg
rclb
push
add
in
jmp
xlat
add
dec
scas
or
repnz
inc
mov
cmp
pop
pop
mov
push
adc
ljmp
mov
test
rclb
mov
fs
push
adc
and
in
mov
push
lods
decl
cs
cmp
fidivl
loop
repnz
ljmp
cmpb
and
mov
mov
clc
push
comiss
xchg
cmp
notl
mov
jle
in
push
mov
daa
jle
imul
pushf
loop
ss
add
cmp
scas
mov
stc
int
inc
stos
sub
pop
mov
ficoml
pop
push
push
rolb
mov
test
and
test
mov
cli
mov
adc
jecxz
fnsave
loopne
ss
push
cs
dec
mov
mov
mov
mov
jns
ljmp
cmp
and
jmp
addr16
mov
add
repnz
add
ret
rorl
int
or
xchg
sbb
ljmp
xlat
pop
xchg
mov
and
mov
sub
dec
or
imul
rcrl
in
cmp
jae
dec
loope
push
call
inc
xchg
in
xchg
notb
rcll
mov
sub
and
fwait
sahf
lcall
mov
sbb
or
test
jge
imul
rcl
outsb
insl
dec
stos
mov
xor
push
inc
inc
xchg
push
pop
inc
lret
ljmp
orl
inc
fildll
push
cmpl
imul
mov
leave
jbe
push
or
or
shl
and
popa
mov
inc
lods
ret
es
das
test
mov
adc
test
jecxz
jle
scas
adc
and
pusha
mov
push
jecxz
shrb
mov
stos
push
cmp
jae
leave
jmp
adc
hlt
dec
xchg
jg
push
jmp
int3
test
adc
xchg
fdivp
mov
push
imulb
shrl
xchg
adc
hlt
jp
repz
cmp
mov
mov
sbbb
pop
mov
iret
push
loop
dec
sbb
out
push
mov
xor
enter
inc
xchg
pusha
in
hlt
fs
dec
jbe
xchg
repz
icebp
push
push
xchg
jmp
cmpsb
xlat
fdivrs
fidivl
int3
cli
lcall
cmp
mov
aaa
int
nop
sbb
xchg
mov
arpl
cld
test
sbb
loop
and
addr16
dec
jne
mov
dec
test
jle
mov
rorb
aas
iret
mov
in
sbb
add
mov
push
cmp
outsl
popl
arpl
ja
mov
lcall
dec
jecxz
cwtl
popf
add
and
repz
ss
mov
imul
mov
inc
daa
not
sub
popa
xor
mov
mov
pop
push
xchg
push
addb
popa
mov
fistps
lods
cmc
pop
filds
xor
sar
jb
in
repnz
and
or
bswap
imulb
dec
call
repz
inc
mov
mov
icebp
aaa
iret
xchg
into
ds
and
out
loope
fwait
inc
mov
shlb
push
push
add
inc
pop
inc
lret
ficomps
jo
loop
xor
and
or
mov
movsb
sahf
push
ljmp
repnz
or
outsb
pop
mov
ret
adc
fmul
subl
jne
and
or
outsb
fbstp
mov
in
pop
push
pop
mov
push
jns
push
inc
aad
mov
setp
add
shll
sub
cld
lods
lret
shll
inc
dec
shll
mov
jb
leave
pushf
test
mov
ss
xor
push
rcr
sbb
jo
lret
adc
fildll
aas
mov
xchg
int3
push
cmc
mov
enter
adc
xchg
xchg
or
cmp
in
xor
mov
in
dec
jbe
out
push
sub
outsb
jle
push
jb
imul
dec
enter
jge
dec
mov
mov
jo
sub
popf
repnz
mov
in
ret
lret
vmwrite
dec
adc
sbb
fadds
push
jp
test
push
sub
lea
and
pop
fidivs
add
mov
repnz
in
scas
sbb
pop
repz
and
in
fldenv
shll
or
sarl
int3
cmc
arpl
test
pop
stos
mov
push
jge
jo
in
cmpsl
out
dec
fcos
xor
dec
dec
push
jb
adc
mov
cmp
xchg
mov
fidivrl
inc
mov
loop
mov
add
sub
cltd
repnz
mull
dec
xchg
mov
adcb
push
cmpsb
lahf
pop
out
dec
push
lahf
dec
shrb
inc
in
sti
int
arpl
xor
mov
cmp
pop
insb
adc
xor
sub
cli
mov
sti
mov
shlb
incl
lret
test
inc
pop
outsl
mov
stc
mov
cmp
aaa
sbb
repnz
adc
cmp
pop
js
repz
push
sbb
insb
lds
or
dec
std
xorb
xchg
movsl
fwait
imul
int
popa
lret
push
or
outsl
and
pop
mov
loop
test
hlt
sahf
lret
inc
cwtl
dec
fsubl
test
hlt
dec
rcrb
mov
jge
nop
fcompl
adc
inc
in
cmp
mov
adc
jnp
loop
inc
xchg
orl
lods
add
jl
adc
test
enter
std
dec
int
cld
lds
idivl
mov
adc
mov
pop
cmpsl
aas
mov
mov
stc
xchg
pushf
mov
xlat
lcall
cli
sbb
shrl
jl
jmp
and
bound
stos
xorb
hlt
faddl
pop
leave
jns
sub
aad
faddp
sub
and
jmp
in
test
test
push
sbb
in
inc
jno
jmp
sbb
call
add
xchg
aas
outsl
add
dec
xchg
mov
mov
push
mov
mov
lret
test
mov
dec
jbe
mov
imul
xor
aad
jnp
pop
sbb
jae
mov
sbb
stc
or
fnstsw
std
mov
inc
cmpsl
scas
outsb
sub
or
out
jnp
imul
inc
dec
mov
sbb
test
adc
mov
cmp
fistpll
or
js
sub
out
add
fdivr
sbb
xchg
sub
jecxz
push
les
out
push
aas
pushf
inc
cmp
mov
cmp
loop
scas
outsl
sbb
push
ja
outsl
pop
aaa
mov
sbb
mov
push
jnp
addr16
lret
sbb
fidivs
pusha
iret
mov
imul
mov
pop
testl
push
aas
cmpsb
enter
aam
pop
daa
lea
enter
pushf
test
aas
cmp
mov
sub
mov
and
ret
add
sbb
fidivrs
sub
lcall
adc
push
fwait
js
cmp
lea
push
sbbl
cwtl
cmc
push
pusha
movsb
lcall
pop
cmc
mov
popf
xchg
cmpb
lds
jp
cmpsb
ror
test
in
jno
adc
ret
mov
sarb
push
sbb
inc
es
fstpt
mov
xchg
jmp
andb
xchg
add
sti
cmpl
movsb
insb
out
pop
xchg
lds
mov
cmp
jbe
mov
fnstcw
sbb
inc
cmp
dec
bnd
pop
or
sub
jns
jecxz
dec
sete
fmulp
and
add
inc
sbb
lea
adc
or
bound
popf
insb
shlb
rcrb
xor
xor
and
aad
and
pop
bound
cmp
push
sbb
shrl
dec
mov
or
cmpsb
aad
mul
in
sbb
xor
dec
xchg
sahf
inc
xchg
xchg
popf
aam
fwait
je
or
mov
xor
es
incl
jmp
pushf
mov
push
je
pusha
daa
add
mov
out
shl
adc
xchg
cs
bnd
lds
inc
sahf
pusha
jns
ljmp
xor
lret
lds
aas
stos
aas
and
inc
pop
hlt
xor
mov
xchg
push
sbb
insb
push
cmp
dec
add
mov
add
pushf
dec
movb
jmp
mov
imul
andl
mov
dec
xor
fs
jae
dec
or
sbb
mov
jp
xor
pop
mov
sub
xchg
data16
daa
inc
addr16
sub
out
xchg
pop
mov
cmp
fidivl
cld
pop
aam
mov
mov
and
hlt
inc
or
lahf
mov
mov
mov
adc
das
fisubrs
jg
aas
cmp
mov
add
cmp
jp
inc
xchg
inc
lds
cld
cmpsl
mov
pop
sahf
add
jmp
call
mov
mov
mov
adc
testb
incb
lods
ljmp
add
sub
lahf
rclb
xchg
ds
cli
rorb
fistl
movsl
ret
fdivs
sub
pop
nop
xor
sub
dec
fdivp
subl
fcoml
sub
sub
fldcw
mov
xchg
fistpll
mov
or
dec
pop
or
rcr
pushf
push
mov
dec
inc
divl
cmc
shrb
pop
mov
jmp
test
and
fs
and
ja
mov
test
subl
mov
mov
cmpl
jle
push
adc
test
sbb
sbb
mov
xor
mov
pop
xchg
ds
sub
arpl
mov
lahf
js
adc
lods
test
lret
add
iret
dec
mov
aas
mov
xor
mov
in
push
in
ret
xor
xor
pop
ja
cmp
leave
jae
lods
xorb
dec
sbb
cmp
je
inc
imul
ljmp
adc
push
fdivrs
adc
adc
stos
jecxz
dec
insl
push
pop
lcall
lret
mov
mov
mov
je
and
enter
xchg
bound
loopne
inc
lcall
mov
add
jmp
cmc
daa
pop
cli
rorb
pop
jge
push
sbb
rolb
ja
aam
dec
hlt
lods
xchg
negl
scas
insb
inc
jge
pop
pusha
sub
pop
fst
jnp
pop
sahf
xor
icebp
xchg
loop
stc
imul
inc
cmc
add
in
ss
jl
and
jb
xor
jne
scas
xchg
jmpw
into
es
inc
iret
fstl
test
stos
push
out
pop
shlb
into
int
sbb
add
xor
rcr
mov
inc
fildll
incb
add
mov
outsl
aad
xchg
pop
pop
lea
cld
jns
call
cmp
repnz
insb
cmp
sbb
in
lds
sbb
test
sub
jnp
jo
cmp
jbe
pusha
inc
cmc
fcompl
cmc
out
js
icebp
stos
jo
scas
mov
lods
jmp
add
jns
jns
out
pop
cmp
adc
mov
xchg
test
ret
jl
ret
push
je
pop
xor
sbb
setle
pavgw
mov
cmp
dec
nop
bound
cmp
jmp
roll
jp
xchg
add
sbb
fnstcw
ret
jle
sbb
js
js
or
aam
jl
lea
xchg
push
cld
xor
mov
loopne
cwtl
or
shr
lret
mov
mov
sub
popa
das
xor
xchg
mov
mov
or
fimuls
or
sub
fisubrs
cmc
xchg
pop
out
add
outsb
pusha
aad
bound
adc
jge
in
push
outsl
shll
imul
pop
jge
addl
dec
ret
push
xor
inc
add
scas
sbb
xchg
shl
and
repz
int
add
adc
mov
xchg
pop
mov
push
or
in
push
popa
xchg
test
and
in
jle
push
adc
adc
subb
add
sbb
jno
adc
and
lcall
jne
cmp
pop
insl
leave
sti
lahf
in
xor
jp
imul
pop
lret
push
xchg
sub
je
pop
sub
ja
mov
arpl
mov
arpl
std
loope
inc
das
sub
leave
dec
cwtl
push
or
jno
xchg
sub
out
std
mov
mov
rol
out
pop
add
or
and
cmpsl
dec
add
adc
inc
push
imul
pop
and
sbb
sbb
enter
xor
rcrb
pusha
cwtl
or
add
cmp
out
pop
aas
push
mov
mov
imulb
shlb
out
jnp
sub
cli
sub
mov
aas
pop
or
es
lods
sarl
pop
in
cmp
add
mov
cs
xlat
outsb
stos
push
inc
jmp
std
mov
rorb
aaa
xor
fidivrl
nop
pop
xchg
insb
ret
mov
inc
pop
add
mov
insb
cmp
jae
popa
mov
ss
push
cs
push
jae
in
xchg
adc
dec
loop
ja
sub
sbb
fstp
add
ja
mov
arpl
jo,pn
xor
add
mov
hlt
sbbb
sub
ds
sub
push
aas
hlt
das
push
icebp
sbb
loop
flds
scas
sub
inc
inc
std
push
lcall
idivl
incb
mov
or
push
ret
and
inc
movsl
js
imul
mov
inc
fildl
xchg
dec
or
adc
aam
pop
mov
stc
and
jne
xchg
jno,pt
fwait
xchg
mov
bnd
mov
push
lds
add
into
mov
mov
adc
sub
fsubl
je
sub
inc
cmp
and
push
pop
jl
push
cmp
jb
gs
in
cld
mov
mov
jbe
mov
cmp
ret
sbb
in
and
mov
xor
push
fwait
push
pop
jnp
orl
mov
sbb
adc
jno
cmp
cs
insb
repz
adc
jp
cmp
xor
jbe
jmp
sahf
lahf
fwait
addr16
out
sbb
jns
loop
dec
cmpsb
clc
pusha
ret
mov
movl
adcb
lcall
cs
sbb
aaa
cmc
jle
pop
mov
imul
mov
call
xchg
dec
arpl
fistl
dec
gs
cwtl
sbb
jl
push
jp
js
xor
cmc
mov
add
mov
icebp
test
xor
xlat
aas
push
movsb
hlt
sbb
fmull
ret
jno
cld
inc
in
push
xchg
ret
sti
cmp
push
xchg
xlat
mov
mov
bound
ja
mov
std
sbb
mov
fcmovu
mov
or
mov
xlat
imul
push
push
or
and
mov
mov
mov
leave
in
push
and
add
sub
pop
adc
push
ss
adc
pop
or
dec
sub
adc
ret
cmc
in
mov
movsb
fs
inc
jno
sub
stos
test
or
pop
adc
lret
shr
stos
sub
jnp
movsl
daa
out
adc
sub
mov
adc
in
dec
pop
fiaddl
add
jnp
sbb
xchg
or
pushf
inc
lahf
movsb
ss
jmp
and
std
fmull
hlt
insl
insb
cmp
dec
and
ret
in
faddl
in
insb
test
imulb
mov
mov
icebp
pop
in
mov
sub
sub
imul
fs
dec
adc
push
mov
xor
rolb
stos
sbb
call
sub
dec
mov
sbb
jecxz
ljmp
fsubrs
and
ret
add
test
lret
lcall
mov
xlat
cs
lahf
add
cltd
mov
aas
and
pop
push
loopne
mov
les
or
push
push
sarb
lahf
dec
fmul
push
and
push
imul
lcall
dec
inc
mov
int3
popf
dec
mov
fcmove
les
dec
gs
loop
mov
stc
sbb
jb
mov
fisttpl
repnz
push
inc
xchg
mov
das
adc
or
je
fs
and
or
aad
cmc
in
jb
mov
mov
add
test
lock
icebp
icebp
js
push
jl
or
push
mov
push
xchg
fadds
adc
vmovdqa
adc
popf
sbb
scas
push
jnp
mov
xor
je
sbb
ret
inc
lret
pop
int
sbb
xor
add
cmpsl
out
int3
fcomi
xchg
inc
mov
popa
ret
xor
mov
xchg
popf
jno
and
inc
xor
popa
xor
arpl
add
rol
pop
sub
sbb
hlt
add
inc
enter
and
xchg
lret
mov
lea
fidivl
sbb
cmc
arpl
mov
inc
sbb
sbb
insb
mov
int
cmp
fnsave
daa
clc
addl
xchg
test
rcr
push
fmulp
xor
and
push
mov
adc
insl
or
ds
test
lock
cmp
cmovl
and
add
icebp
sbb
pop
mov
iret
dec
push
xor
add
mov
mov
mov
out
jno
in
mov
or
add
sub
mov
addr16
push
add
xlat
jmp
mov
insl
cld
je
or
leave
test
dec
dec
pop
lahf
mov
pop
adc
mov
bound
rorb
dec
xchg
or
and
sahf
pop
stos
inc
repz
or
pop
in
push
push
pop
popf
jns
and
cmp
inc
mov
fstps
mov
pop
iret
or
xchg
sbb
flds
lret
or
or
mov
pushf
sub
cmpsl
out
in
pop
aad
faddl
xchg
pop
popf
popf
add
clc
repnz
jae
pop
pop
inc
ja
ja
mov
adc
cmp
in
jle
mov
outsb
mov
aad
mov
mov
jmp
adc
ljmp
mov
arpl
mov
mov
push
adc
fdivrs
inc
test
in
mov
test
rcrb
push
scas
adc
es
jo
sarl
popa
jecxz
jnp
inc
push
pop
jo
cmc
test
aad
sub
push
les
fbstp
mov
fimull
mov
int
sbb
std
fadds
and
andl
in
push
ljmp
sbb
pop
jae
out
mov
test
out
jb
out
daa
jns
rcrl
sub
pop
lds
add
and
sbb
fs
ss
dec
xor
pop
mulb
or
movsl
cmpsb
std
pop
fs
roll
icebp
js
jnp
shlb
pop
cmpsl
movsb
in
cmp
and
pop
or
sub
pop
push
xchg
push
or
cmp
mov
andb
popf
imul
adc
mov
repz
pop
mov
sbb
les
call
and
push
clc
gs
xchg
stos
inc
mov
jl
sbb
pop
adc
add
test
adc
jp
addr16
inc
push
repz
pop
or
imul
dec
mov
repnz
sub
fdivr
in
outsb
push
push
pop
pop
test
xor
jns
sar
mov
loope
aad
daa
scas
jge
addb
jo
dec
scas
test
dec
dec
cltd
aas
mov
or
xor
cmp
out
repz
jo
lcall
xchg
mov
dec
fwait
xchg
xchg
adc
scas
scas
or
in
dec
xchg
stc
test
xchg
pop
dec
int3
push
push
data16
and
or
movsl
or
test
stos
clc
xchg
loop
lcall
outsl
icebp
mull
shl
sub
scas
ret
nop
xchg
xchg
adc
cmp
jb
jno
mov
xlat
sub
mov
test
inc
mov
sbb
pop
lods
xor
lods
push
je
popf
push
loope
dec
in
ret
inc
jg
vdivps
push
mov
pushf
iret
xchg
xor
pop
xor
inc
aaa
or
hlt
movsl
inc
sahf
rcrl
aad
cmp
mov
iret
or
adc
sti
jb
xchg
mov
rep
push
lret
mov
mov
fmull
push
aas
dec
xorl
outsl
dec
sbb
pop
ret
ret
xor
subl
pop
iret
aam
pop
js
push
in
imul
add
push
push
into
mov
shlb
mov
pop
xlat
faddl
shrl
inc
jae
xchg
rcrb
movsl
add
mov
in
mov
lret
xor
sub
sub
mov
add
ret
lds
xor
je
sahf
or
mov
jge
mov
cwtl
pushf
dec
pop
mov
mov
out
and
mov
pop
sbb
mov
jmp
mov
jge
and
lahf
xchg
pop
mov
testb
sub
popf
mov
dec
ja
pusha
js
and
mov
repz
gs
cmp
arpl
fsubrs
shlb
iret
jecxz
out
xchg
push
xchg
fmul
aad
fiadds
inc
aaa
add
sbb
repz
jb
mov
pop
pop
cld
pop
push
sub
bound
pusha
jle
insl
lahf
or
pushf
sub
mov
or
ja
xchg
iret
sub
out
clc
or
loopne
push
scas
mov
xor
jns
push
mov
sbb
mov
into
icebp
mov
ss
sahf
jb
or
xor
add
out
ljmp
ret
test
sub
push
stc
insb
and
dec
js
jnp
adc
jg
xlat
xchg
popa
cmp
cli
jbe
inc
xchg
pop
andl
jns
mov
out
sti
popa
aaa
aad
mov
ja
xchg
or
cwtl
xor
test
hlt
popf
mov
insb
push
testb
aad
push
adc
out
dec
and
xor
push
mov
and
adcb
leave
in
mov
cmp
mov
rorl
clc
leave
testb
xchg
xchg
je
clc
xchg
fnsave
arpl
lods
adcl
fiadds
mov
into
dec
xchg
push
cmp
xor
push
movsb
loop
out
adc
push
inc
push
jge
pop
inc
pop
and
add
xchg
push
mov
pop
pop
pop
pop
dec
imul
cmc
mov
fdivrl
in
les
cli
adc
jae
mov
fsubr
iret
lret
fucompp
or
mov
mov
repz
and
mov
jb
loope
daa
movsb
pusha
sub
mov
jne
fisubs
pop
test
lea
in
xchg
lahf
lock
mov
arpl
sub
adc
pop
test
and
popf
push
inc
loope
mov
sbb
or
or
mov
mov
sbb
fcomps
adc
jge
mov
int3
mov
push
push
lods
lods
adc
xor
mov
inc
pop
repnz
xchg
sbb
out
cmp
jnp
sbb
testb
in
clc
rorl
cmp
mov
inc
dec
add
lods
cmp
jns
inc
or
test
push
mov
outsl
inc
cmpsl
add
fldl
or
pop
inc
ss
xlat
inc
xor
jb
mov
sbb
add
xchg
mov
push
loopne
mov
lock
push
mov
add
mov
or
fisubl
cmp
in
shll
jbe
ror
imul
aam
and
repz
rcll
mov
add
mov
adc
movsl
shrl
pusha
iret
lods
stc
js
cmp
stos
xorb
mov
push
sahf
sub
popf
ja
daa
jne
sbb
pop
pop
mov
int3
aam
pop
in
jnp
add
es
ss
sbbb
arpl
sub
add
jmp
in
xchg
aam
rol
mov
mov
sahf
adc
sub
jno
sub
xchg
aam
dec
xor
loopne
lret
sub
hlt
lcall
jbe
mov
rcr
xchg
lods
fiaddl
push
sbb
insb
dec
jb
push
push
movb
sar
outsb
stos
stos
cmpsl
movsl
movsl
mov
push
ja
scas
cmpsl
xor
adcb
mov
imul
lock
jp
test
ds
pop
or
dec
loope
loop
in
xchg
xchg
mov
das
mov
add
or
cli
sahf
test
stos
roll
ds
xchg
ficoml
test
dec
rorl
mov
sub
test
movsl
push
mov
mov
scas
push
ret
xor
mov
fimull
scas
hlt
add
or
dec
stos
sub
mov
cmp
and
jge
inc
cmpsb
mov
sahf
mov
mov
jmp
or
mov
std
das
setnp
imul
pop
lcall
mov
out
pop
test
rorl
aas
mov
mov
pop
sbb
pop
mov
mov
test
movsb
lods
enter
pop
faddp
and
ds
cmpl
cmpsl
mov
sub
inc
mov
hlt
inc
jbe
stos
lods
jmp
rorl
test
cltd
sub
repnz
push
pusha
ror
inc
lods
push
fsin
addl
outsl
jb
jle
test
mov
mov
mov
fwait
mov
nop
inc
add
or
dec
mov
pop
lock
iret
mov
fcomp
mov
and
loopne
xor
outsl
loopne
ror
loope
mov
jnp
and
mov
mov
movsl
add
sub
dec
mov
mov
int3
pop
pop
jnp
add
and
cmp
or
pop
subl
or
push
test
cmpsl
push
mov
or
adc
mov
aaa
fldl
movhps
sub
push
stc
and
faddp
push
ret
fwait
adc
imul
outsl
sbb
inc
out
xor
pop
fidivrs
push
cmp
mov
or
in
mov
push
add
xor
xor
sub
js
daa
add
ds
or
ljmp
pop
jns
ret
xor
mov
popf
int
popa
or
cmp
dec
roll
fistpl
xorb
mov
pop
sahf
xor
and
jl
mov
insl
in
sbb
or
pusha
das
xlat
jecxz
xor
push
pop
sbb
xchg
push
xchg
bound
test
mov
jmp
test
pop
jbe
mov
insb
scas
push
lahf
xor
test
xor
or
cmc
jbe
popl
push
lock
sub
xchg
pop
sub
loop
int3
mov
lock
hlt
fldenv
aad
lea
imul
hlt
dec
js
or
lcall
loope
gs
mov
mov
leave
enter
fisubrs
or
cmc
mov
and
mov
arpl
cmp
lods
mov
fidivrl
fisttpll
mov
and
js
enter
push
xchg
or
int3
xor
enter
mov
mov
adc
filds
lahf
in
mov
mov
cmp
xchg
rcr
je
test
decl
sub
jmp
jo
movsb
movsl
xchg
mov
pop
mov
or
mov
inc
adc
mov
inc
sti
mov
or
loope
ret
mov
fadds
sbb
and
leave
xchg
sub
mov
rcll
push
xchg
jno
sbb
sub
push
imul
out
cmpb
or
mov
inc
add
and
mov
lods
mov
lods
sub
xchg
stc
stos
add
cmp
sbb
adc
aam
mov
or
xor
test
leave
xor
in
clc
sbb
pusha
roll
push
jmp
mov
or
ja
insb
insb
loope
pop
sbb
push
mov
push
lret
lahf
xchg
int3
push
stc
rclb
mov
subl
add
cmpsb
inc
cmp
sbb
outsl
xchg
dec
and
inc
mov
out
es
jae
jle
inc
stc
aas
adc
add
xchg
xchg
or
addr16
mov
push
and
pop
into
jnp
cld
xor
xchg
in
arpl
cmp
or
loop
pop
test
imul
adc
lea
shrl
adc
push
roll
mov
subb
jecxz
sbb
adc
test
ss
adc
sbb
bound
in
pop
cmpsl
xor
sbb
xor
dec
or
add
stos
mov
mov
das
stc
in
or
add
sbb
lret
ficomps
stos
and
mov
xrelease
sbb
cmpsl
and
ljmp
cmp
adc
lods
cwtl
in
xchg
pop
adc
mov
push
enter
jmp
gs
es
cmp
pop
pop
push
and
cmpl
sub
cmp
js
xchg
mov
xor
cwtl
inc
aas
sbb
movsb
fwait
push
ja
bound
out
fcomi
adc
aas
xchg
sahf
lahf
and
cmp
sti
adc
rcrl
pusha
inc
add
das
pop
jne
mov
xlat
push
pop
addr16
arpl
pop
or
neg
and
xor
push
mov
jmp
pop
push
lock
lret
mov
pushf
imul
mov
pop
xchg
call
fs
fs
in
sub
out
or
xchg
fdivr
and
fisttpl
mov
movsl
lods
adc
out
jp
mov
mov
mov
test
inc
stc
test
mov
sbb
sub
dec
or
daa
mov
bound
mov
hlt
push
out
sbb
cmpsb
shrb
mul
mov
add
or
inc
sti
cwtl
leave
lock
insl
xorl
into
sbb
sbb
loop
sub
lcall
scas
ljmp
pop
sub
ss
xlat
cmpsl
pop
mov
aaa
in
out
fwait
out
xor
mov
iret
mov
ret
aad
cld
push
mov
xchg
inc
orb
out
mov
out
cwtl
cmp
jno
xchg
bound
push
mov
inc
pop
jle
mov
iret
invd
push
jo
aad
popf
cmpsl
jl
sub
movsl
add
xchg
hlt
loope
jmp
xor
fists
jg
jge
into
cmp
or
pusha
daa
cmpsl
mov
addr16
je
lret
cmpsl
inc
pop
jmp
mov
and
mov
packuswb
sbb
sbb
mov
push
in
lods
jmp
cmc
repnz
adc
adc
jle
mov
stos
loop
sbb
lods
movb
subl
mov
lahf
jg
sbb
dec
mov
loope
adc
testb
mov
mov
xor
sub
hlt
fwait
and
mov
insl
test
adc
ljmp
in
add
out
mov
sbb
pusha
imul
xchg
lea
aas
and
xchg
or
jle
and
jo
loopne
stc
jp
fsubl
mov
jge
or
jne
outsb
stc
push
push
sahf
icebp
rcll
ret
cmp
mov
cmpsb
xor
cmp
stos
test
sbb
shrl
aad
sub
fldl
cltd
pop
xchg
stos
sbb
aam
sub
cmpl
iret
xchg
and
dec
pop
push
mov
push
hlt
jmp
pushf
mov
adcb
inc
cltd
jmp
fisubrs
je
and
lahf
push
sti
mov
mov
jnp
dec
push
mov
data16
pop
sbb
push
and
mull
or
outsb
sbb
mov
xor
jp
cmp
imul
push
xor
jp
bound
insl
ljmp
push
in
mov
movb
loope
faddp
pop
stos
in
jmp
aas
pushf
pop
mov
jp
es
lahf
add
test
or
mov
cmp
inc
xchg
rcr
pushf
jbe
push
jns
or
mov
and
mov
in
sbb
mov
jns
mov
mov
ss
pop
movsb
enter
pop
fs
fisubrs
in
xor
ja
rolb
add
dec
das
pusha
cmpsb
inc
ficoml
cltd
mov
movsl
test
sbb
xor
inc
testl
add
int3
adc
xchg
notl
jb
xchg
out
dec
push
adc
mov
cs
stos
dec
xor
sub
pop
daa
cmpsb
sub
pop
outsl
and
hlt
sub
inc
ljmp
push
out
and
mov
xchg
incb
pop
nop
jnp
imul
or
lea
xor
mov
clc
push
enter
xor
lock
daa
jg
bswap
mov
rcrb
in
ret
cmpsb
mov
push
movsb
dec
jns
nop
rcll
loope
mov
rolb
insb
pop
fidivrs
adc
test
aaa
fists
leave
push
in
add
sub
push
xorl
sbb
aas
jne
jmp
pop
insl
fldt
insb
cmpsb
push
insl
sarb
xor
shll
and
daa
jmp
or
cmp
jno
add
cmc
incb
xchg
pop
arpl
int
pop
xlat
sub
daa
in
add
push
inc
add
enter
pop
jecxz
mull
mov
pushl
sub
loope
adc
adc
lods
in
sbb
mov
mov
insb
sti
jl
adcb
xor
fwait
icebp
jmp
jns
mov
cmp
cmp
sub
les
xor
xchg
mov
push
daa
outsl
xor
xor
push
sub
pop
sub
int3
stc
iret
in
shr
popf
loopne
add
out
or
sti
jno
push
pop
adc
aas
cltd
inc
arpl
cld
test
jb
lock
stc
aaa
ljmp
dec
shl
push
fwait
mov
scas
push
cmc
xchg
xor
jbe
jp
xchg
cmp
invd
push
cli
lock
les
sub
mov
dec
stc
mov
data16
pushf
sbb
add
sub
jne
xlat
mov
cmc
add
aas
lret
mov
subl
lods
imul
mov
push
inc
push
mull
rolb
stos
and
jmp
and
xchg
mov
test
sbb
pop
in
int3
imul
pop
xchg
xor
loope
cmp
cli
adc
mov
mov
lock
xchg
pop
lods
cmpb
add
popa
push
ror
mov
aam
ja
rorl
add
add
mov
or
insb
push
hlt
push
mov
test
jl
imul
stos
add
pop
ret
shlb
ret
sbb
into
outsb
xchg
push
imul
leave
js
pop
in
jo
lods
xor
mov
test
iret
int
lcall
adc
repnz
inc
pop
nop
icebp
mov
cmp
pop
push
inc
sub
add
mov
jg
data16
lcall
add
xchg
dec
cmp
mov
out
mull
testl
aas
xlat
icebp
icebp
call
imul
jecxz
loop
add
push
insl
or
movsl
flds
dec
mul
popf
popa
enter
push
decl
mov
stos
iret
movsl
lods
fs
addr16
dec
mov
movsb
scas
jmp
stc
xchg
push
dec
lea
cmpsb
adc
insl
pop
add
cmp
in
adc
fwait
cmp
cmp
daa
or
repnz
pop
mov
inc
in
pop
dec
sbb
cmp
cmp
jbe
mov
xchg
arpl
fistpl
ret
gs
das
sbb
lcall
or
mov
push
enter
jb
daa
sub
dec
pop
ret
pop
xchg
in
mov
popf
scas
xchg
or
gs
int
pop
pop
xchg
or
les
sbb
in
stos
cmp
ljmp
std
mov
cmp
xor
inc
dec
iret
movsb
scas
out
mov
sbb
push
mov
lcall
inc
pusha
jns
xchg
arpl
and
nop
cwtl
mov
arpl
out
or
sub
mov
jecxz
frstpm(287
xchg
pushf
adc
adc
xchg
out
test
mov
sub
cmp
sbb
inc
stos
out
nop
jb
bound
pushf
pop
out
dec
jns
ds
shll
in
adc
mov
sbb
sbbb
mov
and
loop
stos
jle
mov
nop
sarb
scas
std
add
aad
jge
pop
push
jno
xorl
inc
cmp
shrl
aam
xchg
sbb
mov
ja
add
jno
ret
add
xor
bound
fnstsw
fdivr
cmp
jae
repnz
pop
cwtl
lret
inc
lods
sub
shll
fldt
sub
test
push
repz
fidivrl
outsl
adc
adc
aas
dec
and
pop
outsb
cld
pop
std
cwtl
cs
stos
out
pop
xchg
daa
scas
mov
lods
lods
inc
fs
mov
dec
loope
fucom
mov
hlt
sahf
aaa
loop
xchg
inc
es
jl
sub
jle
mov
lods
mov
push
xchg
and
jle
push
dec
clc
jge
fstpt
ficoms
inc
and
popf
add
push
mov
cmpsb
std
cld
mov
pop
shll
adc
jg
mov
jle
cmp
aad
lret
insb
cmpsb
cmp
ljmp
repz
cmp
mov
mov
insb
inc
xchg
jg
xor
mov
adc
jmp
mov
loope
push
adc
cld
in
xor
inc
push
das
add
cli
cmpsb
outsb
pop
jmp
ret
jbe
js
imull
lahf
mov
cli
icebp
cmp
fcmovu
mov
enter
adc
add
popa
loopne
lcall
cmp
add
in
jno
jmp
pop
repz
mov
add
jecxz
xchg
outsb
xor
push
sti
sub
or
push
clc
inc
adc
sub
jae
shrb
or
mov
mov
mov
sub
xor
pusha
jo
out
mov
testl
out
push
add
push
or
rcrl
and
pop
mov
int3
inc
xchg
data16
fmuls
jg
pop
xchg
cmp
xchg
nop
call
bound
test
xor
imul
xor
stos
into
jbe
or
jg
mov
adc
inc
subb
pop
rcrb
and
cmpb
mov
jae
xor
pop
lods
mov
loop
pop
loop
pop
out
jp
iret
jbe
jmp
enter
jecxz
js
mov
lods
mov
mov
scas
lret
push
sub
ja
pop
xchg
lods
or
pusha
jns
addb
inc
push
sti
jp
out
in
stos
pop
loopne
sbb
sub
aad
pop
test
rorl
or
and
and
mov
mov
in
jecxz
test
adc
xchg
or
inc
push
mov
enter
lahf
push
dec
jo
dec
movsb
stc
sub
add
repz
data16
popf
jg
dec
mov
lahf
nop
jmp
testb
xor
enter
mov
mov
inc
inc
jecxz
shr
dec
lock
or
pop
adc
inc
ja
sub
loop
jae
or
cli
and
shlb
iret
imul
dec
aaa
push
in
jle
mov
add
lret
lock
dec
xchg
int
push
mov
arpl
pop
xchg
inc
lcall
mov
dec
in
test
mov
js
xchg
xchg
mov
xchg
add
cmc
jns
jmp
pushf
mov
mov
and
dec
mov
in
sub
jge
push
cmp
xor
sub
and
lahf
mov
or
and
sub
xchg
dec
aad
in
sbb
inc
jbe
js
sbb
setg
jle
enter
sub
scas
mov
push
in
add
shrl
xchg
data16
lods
sbb
addl
jnp
iret
mov
add
push
mov
divl
leave
loop
push
into
test
cmc
pop
pop
pop
pshufw
stos
arpl
inc
movsb
jno
jp
pop
mov
jge
inc
or
enter
dec
push
outsb
or
fs
add
popf
adc
insl
in
fdivr
mov
aad
or
int3
mov
bound
xchg
das
dec
int
mov
and
mov
dec
movsl
fmull
mov
mov
add
mov
pop
push
repz
ret
gs
sbb
dec
test
sub
xchg
and
data16
pusha
xchg
pushf
decl
and
cmpsl
movsb
mov
sub
sbb
insb
or
ss
mov
pushf
lock
jbe
bound
testb
xchg
xchg
pop
lea
mov
orb
idiv
jno
or
out
xchg
jnp
adc
roll
cmp
lret
cmp
jno
dec
jns
adc
movb
out
inc
push
outsb
lret
mov
sti
stc
adc
sub
add
test
xor
das
push
pop
push
mov
movsb
mov
xor
add
xchg
mov
mov
dec
mov
dec
dec
mov
pop
cmpsb
jb
fwait
inc
iret
imul
int3
jno
arpl
scas
adc
or
sbb
lret
lahf
test
mov
pop
sbb
ret
dec
in
mov
fldl
adc
test
mul
fldenv
fcomp
sbb
ret
gs
in
add
and
aam
adc
mov
push
pop
sbb
pop
subb
push
pop
out
mov
orb
nop
inc
dec
andb
xor
out
neg
pop
push
push
ret
sbb
xor
movsl
cmpsl
pop
mov
inc
aas
cmp
lock
pusha
push
mov
xor
rorl
adc
lods
sbb
in
mov
lods
outsb
cwtl
daa
push
mov
repz
mov
cmp
sbb
or
xor
mov
nop
sbb
adc
enter
loopne
shrl
xor
jae
imul
sarb
push
scas
fs
aad
lret
out
out
push
setge
icebp
iret
call
cmp
in
xor
sbb
cwtl
mov
add
jae
cmpsl
sbb
mov
in
test
xchg
mov
dec
push
mov
push
cmp
inc
js
rcrb
xchg
cmp
xor
lock
mov
and
cltd
in
dec
push
mov
hlt
loopne
xor
iret
mov
lret
iret
loop
in
jl
lret
or
adc
inc
inc
mov
sbb
cmp
pop
dec
mov
lock
mov
inc
faddp
mov
xchg
xorl
jg,pn
sbb
test
sbb
push
xchg
push
pop
or
shrl
adc
pop
pusha
leave
in
sub
scas
lods
cmp
push
sbb
mov
and
xor
pop
addl
dec
lds
stc
xchg
or
mov
sub
jmp
scas
adc
scas
inc
dec
mov
or
xchg
es
icebp
and
push
or
movsb
inc
add
decb
loopne
or
clc
je
mov
inc
sbb
ja
inc
and
notl
icebp
call
insl
std
cli
jns
sarl
mov
pop
lcall
xchg
cmp
outsl
adc
xor
sbb
xor
inc
jmp
fisttpll
mov
xchg
ja
incl
arpl
cmc
or
jmp
sub
aam
jecxz
adc
mov
add
movsl
sbb
jl
jecxz
mov
into
push
stos
jge
orb
lahf
sbb
or
mov
out
adc
sbb
test
rorb
mov
popl
and
aad
das
fistl
inc
pop
mov
cmp
push
test
fisttpl
jne
xor
arpl
push
push
and
movsl
pop
roll
idivb
mov
repz
shrl
ret
scas
inc
xchg
cli
faddl
out
into
rorl
mov
aaa
pop
and
xor
lods
andb
push
hlt
jg
dec
ror
call
mov
hlt
mov
dec
mov
mov
jp
scas
sbb
stos
ja
jb
outsl
fnstenv
loope
cmp
xlat
jns
into
inc
add
cld
or
outsb
adc
add
adc
jl
scas
dec
je
and
das
sub
ficompl
popa
test
jo
push
push
cmc
mov
prefetcht2
mov
cld
sbb
push
aad
icebp
mov
mov
add
mov
xchg
or
cmp
jmp
cmp
movsl
pop
push
push
pop
and
inc
mov
aad
xchg
out
ja
sbb
and
aaa
sbb
outsb
arpl
imul
fdivrs
inc
cltd
sub
xchg
push
pop
dec
loop
push
mov
test
mov
pop
xor
jecxz
mov
lock
int
repnz
pop
ja
jb
lods
in
fistpl
loopne
add
fsubrl
in
lret
xchg
or
mov
mov
daa
hlt
repnz
and
push
jae
bound
jecxz
popa
adc
test
xchg
filds
cmpsb
jae
sbb
call
mov
adc
iret
xchg
push
mov
daa
inc
xor
imul
push
pushf
fdivl
sbb
mov
adc
ljmp
mov
xor
sub
inc
inc
lea
pop
les
xchg
arpl
add
mov
in
dec
inc
ljmp
mov
hlt
test
and
mov
das
sbb
cmp
add
icebp
and
cmp
adc
in
movsb
fldenv
xlat
subl
inc
push
rcrl
dec
push
jae
dec
jl
into
sbb
inc
test
fisttpl
fstpl
or
call
je
xcrypt-ofb
cmpsl
push
in
in
out
lods
rcrl
or
sub
xor
addb
inc
loop
inc
in
pop
jge
cmc
jbe
push
cmp
mov
fistpll
lcall
adc
lret
rclb
lahf
test
pop
mov
fdivs
xchg
xor
loop
stc
jae
add
inc
js
fidivrs
es
jl
cmp
loop
xchg
sub
pop
jecxz
std
out
mov
fdivrp
cwtl
or
fstpl
sbb
insl
clc
cld
cmp
fnstsw
or
imul
lcall
jnp
inc
mov
or
test
in
xor
push
jns
dec
rcrl
lods
xor
fcoms
adc
loop
andb
leave
cwtl
sbb
out
fcompl
dec
mull
addr16
addb
mov
jecxz
inc
aam
push
mov
adc
ffree
sub
fwait
outsb
mov
push
imul
jp
dec
and
push
inc
mov
enter
movsb
xchg
xchg
loope
sbb
xor
xchg
xor
dec
mov
mov
shr
mov
dec
out
xchg
pop
in
movsb
pop
xor
mov
out
scas
gs
cs
ljmp
add
pop
out
and
xor
push
jl
cmp
orl
and
cmp
rcrb
xchg
dec
adc
cmp
push
js
push
xor
addr16
arpl
jo
dec
mov
push
cmp
add
xchg
pop
adc
xor
jp
jns
cmp
dec
in
jb
sbbl
outsl
cmc
test
jl
dec
push
aas
and
hlt
aaa
test
cli
xchg
sbb
mov
mov
cmc
aad
imul
into
sbb
cwtl
je
cltd
out
lret
cmp
pop
lret
rcl
jmp
pop
movsb
movsb
neg
xchg
lods
mov
jbe
divl
push
adc
push
mov
xchg
pop
icebp
dec
and
mov
xor
shl
xchg
mov
lcall
and
push
rorb
fs
cli
inc
inc
addr16
cmpsb
and
fnop
mov
and
lods
ret
adc
add
jl
std
rorb
stc
xor
mov
jne
mov
stos
push
xchg
xor
out
cld
or
inc
mov
push
sbb
pushf
inc
mov
push
pop
add
add
imul
aas
in
or
repz
xchg
xchg
es
shl
dec
xchg
fisttpll
pop
fisubrl
add
loop
stos
loopne
mov
mov
arpl
mov
in
jne
inc
dec
and
xor
xchg
jecxz
test
xchg
stos
mov
sbb
cmpsb
lret
mov
fidivrs
cmp
sbb
ret
ret
mov
ja
pusha
out
repnz
scas
xchg
push
cmp
jl
fisubrl
xlat
dec
lods
arpl
imul
repnz
imulb
sbbl
outsl
inc
xchg
scas
push
sti
daa
push
lahf
xchg
fnstsw
leave
inc
dec
mov
lret
pop
inc
popf
sahf
outsl
jg
movsl
adc
and
icebp
mov
cmp
jge
xchg
fsubs
imul
sub
pop
pop
insb
adc
aam
pop
jnp
es
cmpsl
fdivrp
iret
pop
mov
test
cmp
jmp
mov
jp
in
test
xchg
gs
mov
pop
xchg
js
ljmp
push
clc
popf
pop
test
fwait
xor
lds
dec
inc
ficomps
ss
and
xor
xchg
add
xchg
dec
xor
inc
mov
movsb
cs
pmulhw
in
ljmp
inc
aam
mov
push
xor
sbb
mov
pop
mov
mov
rcrl
aad
lea
mov
inc
jnp
xor
dec
in
add
inc
push
insb
add
pop
xlat
push
loope
mov
dec
mov
ss
outsl
mov
outsb
add
lret
lcall
jns
xchg
xchg
ja
shrl
adc
dec
scas
adc
test
in
repnz
or
jg
mov
fwait
sbb
cltd
fldl
fsubrl
mov
push
or
bswap
cmpl
loopne
push
cmp
mov
mov
jecxz
popf
rclb
mov
mov
loopne
ljmp
jb
mov
call
sahf
test
or
stos
or
and
fidivl
push
push
lret
into
sbb
inc
mov
popf
daa
push
mov
add
mov
jge
push
and
pop
mov
xchg
push
outsb
jne
fnsave
dec
sbb
cs
push
in
jae
vunpcklps
lds
shrl
cmpsb
aad
lret
aad
insb
mov
sbb
sub
rol
ljmp
dec
xchg
jg
lods
jb
mov
sub
stos
pop
stos
push
test
shr
pop
cmp
std
rcll
jg
xchg
sub
lret
idivb
mov
dec
outsl
fidivs
and
xchg
xlat
dec
adc
shlb
fwait
mov
lds
aaa
xlat
enter
popf
daa
aas
imul
xor
rcll
inc
jl
adc
inc
lods
das
lods
mov
cmpsb
hlt
add
mov
ficomps
jne
in
call
jl
in
data16
jae
xor
sbb
xchg
dec
out
mov
add
les
pop
aam
popf
adc
mov
daa
inc
jecxz
cmp
mov
xor
nop
jmp
arpl
fwait
scas
shlb
jmp
mov
ret
test
xchg
loop
push
xor
jle
pop
lods
ret
adc
inc
movsb
mov
in
clc
jno
lret
leave
hlt
lods
sub
jae
push
push
push
out
xchg
push
and
sub
loope
dec
add
add
faddl
mov
mov
test
stc
shr
test
js
orl
mov
popa
shl
mov
mov
mov
dec
fwait
push
adc
push
popl
pop
call
inc
icebp
adc
jecxz
out
mov
ss
xor
mov
push
adc
sbb
pop
push
stos
stc
in
inc
outsl
leave
jge
sbb
test
and
inc
push
popa
jne
cmc
jnp
or
jmp
push
sub
outsl
stos
test
push
jno
sbb
ds
cmp
xchg
ret
sbb
adc
pusha
cmc
inc
sti
or
adc
ja
bound
out
dec
pop
pop
aaa
mov
std
mov
push
imul
push
sbb
dec
stos
getsec
fists
inc
mov
mov
faddl
filds
pushf
jmp
push
mov
and
in
and
lret
shr
cli
push
testb
and
inc
faddp
rcpss
lods
cmp
cmp
jge
adcb
jne
add
add
ficoms
sub
loopne
aas
mov
gs
stos
fcomi
sti
sbb
shrb
jp
fsubr
punpckhwd
xlat
addb
out
sbb
jb
gs
mov
pop
mov
jl
jbe
shlb
ljmp
out
loop
loopne
repnz
es
insb
inc
faddl
jp
jno
rcl
add
jmp
fdivs
ds
call
scas
pop
xor
adc
xchg
jle
dec
dec
dec
mov
fdivl
xchg
mov
ja
add
out
scas
cmp
insb
pop
fwait
hlt
sbb
jmp
aam
push
push
imul
mov
pushf
cmp
cmp
xchg
mov
push
pop
test
mov
xor
sbb
pop
mov
popa
mov
repz
repz
push
lock
rcrb
add
sbb
sub
repnz
jbe
imull
ds
jo
cmp
push
push
push
xchg
ss
mov
inc
fdivrp
in
cmp
push
addr16
fdivrs
xor
scas
pop
data16
sbb
jecxz
fistpll
fidivs
fdivrl
stos
jnp
adc
jo
dec
sbb
push
ds
rcr
cs
cwtl
lea
adc
or
insb
imul
sbb
cld
mov
outsb
outsb
mov
inc
xor
sti
imul
add
push
pushf
or
in
jp
fidivrl
in
lods
adc
imul
pushl
sub
arpl
inc
shrl
mov
cmp
aad
or
push
mov
mov
jge
pop
mov
dec
shrb
int
insl
cmp
jl
test
lcall
mov
fistpl
mov
mov
cmp
jb
cltd
cwtl
mov
xchg
gs
cltd
test
adc
mov
gs
dec
inc
int
adc
and
clc
jo
mov
xor
inc
test
sti
inc
push
sbb
fmulp
jb
scas
out
adc
inc
jg
jae
mov
out
dec
lock
pop
movsb
es
sub
js
inc
cmc
sub
in
jl
adcl
lahf
cs
mov
nop
stos
jmp
or
orl
divb
out
mov
repz
dec
mov
js
jns
mov
and
jmp
fdivrp
loop
pop
push
mov
add
mov
lods
push
mov
inc
icebp
mov
loope
mov
roll
fsubs
xor
lods
xchg
dec
xchg
iret
sbb
dec
insl
sub
push
sub
imul
inc
pop
daa
sub
cwtl
loope
cld
clc
les
push
sti
pand
jo
and
lods
test
pop
test
lcall
xchg
xlat
xchg
adc
dec
pop
out
add
sbb
xlat
push
call
push
pop
push
shrl
inc
xchg
pushf
cwtl
or
cs
push
ss
ds
push
pop
add
in
or
push
fdivrp
or
cmp
in
dec
mov
mov
std
js
sbb
cmpsl
pop
repz
in
into
mov
dec
mov
jecxz
adc
cli
mov
sahf
dec
jecxz
loopne
lret
loop,pt
jg
lods
push
mov
pop
xchg
nop
xchg
mov
cli
inc
out
mov
jae
daa
leave
or
int
sub
sub
inc
in
sahf
sub
das
adcb
xlat
out
out
mov
inc
test
mov
jl
xor
ljmp
int
test
daa
sbb
fwait
xor
mov
pop
lds
mov
push
push
lock
andb
in
sbb
mov
out
repnz
jmp
lock
xor
pop
repz
cmc
mov
sub
adc
push
inc
dec
scas
inc
xchg
or
jge
mov
icebp
mov
mov
enter
lret
test
aam
adc
nop
orb
sbb
lcall
cmc
or
inc
movsl
mov
or
clc
cld
adc
jp
ret
sub
inc
dec
adc
shll
adc
test
fucomp
test
not
std
add
imul
sbb
cmp
and
hlt
jp
in
fdivl
lods
xchg
xor
push
push
movsl
mov
and
and
mov
inc
popf
jle
fsubrs
sbb
sbb
fucom
pop
mov
xor
jecxz
lret
clc
mov
push
out
adc
cltd
xor
inc
stos
adc
test
mov
add
mov
jle
es
push
push
mov
ja
jne
jl
daa
outsb
lods
push
call
lds
jns
sbb
in
mov
sbb
cmpsl
sub
cwtl
push
rclb
mov
dec
mov
pushf
stc
cwtl
addr16
pop
inc
mov
cmpsl
pop
pop
sub
je
jle
leave
mov
fcompl
xor
inc
rorl
lods
test
push
sub
jae
cmp
into
jg
push
mov
add
int
and
imul
call
adc
std
pushf
adc
roll
cwtl
jne
out
lahf
pop
scas
clc
testl
inc
xchg
xor
dec
mov
push
xor
in
fdivrp
cmp
mov
loopne
mov
js
mov
jp
call
btc
push
aaa
push
dec
and
out
addr16
adc
cmp
lret
popf
dec
dec
lods
lret
sbb
ret
adc
push
das
sub
idivb
adc
fsubs
cld
dec
mov
adc
xlat
or
inc
adc
scas
dec
and
repz
sbb
jge
loop
lcall
xchg
dec
cmp
pop
sub
int3
cwtl
jb
out
sarb
cmc
fld
push
pop
sbb
push
add
sbb
test
xlat
in
inc
dec
ret
push
push
jg
jl
data16
aas
into
fs
ss
add
xor
cmp
mov
mov
push
rclb
xor
pusha
inc
je
rcr
lods
mov
dec
or
addr16
cmpb
in
daa
push
fwait
mov
pop
ret
jecxz
cmp
js
lret
fldl
sti
iret
mov
clc
int
dec
arpl
cmp
mov
xchg
push
sub
aam
jp
or
ja
in
into
or
sub
roll
repz
fs
adc
mov
inc
and
cmp
add
mov
js
add
jb
mov
adc
mov
jge
std
arpl
push
test
cmpl
add
adc
jmp
aaa
bound
sub
loop
rcll
popa
adc
push
cmp
ret
mov
nop
sbb
sub
leave
or
jno
adc
ljmp
adc
mov
sbb
dec
xchg
stc
mov
mov
out
jl
pushf
arpl
aam
sahf
sub
xor
pop
shlb
adc
xorl
outsl
sti
jmp
lods
push
mov
test
imul
negl
fdivl
ss
mov
andl
mov
xchg
imul
xchg
imul
dec
imul
lds
test
ljmp
jmp
cmp
pop
cmc
jae
fucomp
mov
aam
jb
sub
xchg
and
mov
mov
cmpsl
xor
and
test
dec
inc
dec
shlb
lcall
or
mov
negb
dec
in
aas
insl
mov
adc
jnp
loope
mov
aaa
scas
lea
stos
sahf
add
call
pop
movsb
mov
mov
xlat
and
push
cmp
aaa
xchg
cmp
mov
xchg
jg
loop,pt
insb
shll
and
mov
dec
adc
sbb
imul
push
mov
jno
add
push
pop
sarl
in
stos
ret
sub
sbb
add
lahf
mov
mov
jmp
out
and
scas
jb
inc
inc
sub
out
sub
sub
stos
cmp
call
ss
loope
pop
clc
in
mov
adc
sub
xlat
jecxz
xor
xor
outsb
fistps
push
nop
fwait
push
sarb
jg
test
cld
sahf
cmp
cmpsl
mov
scas
pusha
mov
sbb
pop
aad
cmpsb
add
cmc
xor
sub
mov
jns
cmpsb
pop
pop
and
fbstp
in
pop
push
pop
mov
jo
in
sbb
adc
xor
in
mov
dec
fdiv
inc
cmpb
out
jecxz
xchg
and
cs
xchg
or
out
loopne
inc
leave
cmpl
outsb
or
loope
ficomps
stc
or
pop
les
data16
adc
and
clc
leave
iret
std
mov
and
imul
xor
xor
push
imul
mov
or
push
mov
pop
cltd
mov
loop
mov
add
pop
fiadds
inc
pushf
jno
mov
arpl
icebp
movsl
jo
xchg
jne
mov
inc
inc
in
movsb
dec
cmc
cmp
insl
inc
daa
scas
iret
loop
das
push
das
jbe
ja
scas
mov
imul
jmp
jnp
es
adc
push
jo
inc
inc
in
sbb
mov
loope
or
inc
mov
test
fiadds
inc
aad
shlb
loopne,pn
repnz
stos
fnstsw
mov
push
repnz
inc
cmp
mov
clc
jg
out
or
mov
or
cs
xor
inc
and
jns
scas
into
outsb
sbb
adc
cld
jae
lock
test
cmp
lods
jo
add
mov
add
mov
pushf
ss
pop
jg
jnp
pop
or
mov
jp
cmp
test
insl
dec
sub
inc
and
jns
ss
ss
aad
cmp
jae
inc
movsb
pop
aam
mov
loop
int3
inc
mov
jmp
add
xor
jl
inc
mov
sbbl
push
leave
into
jno
mov
inc
fwait
icebp
aam
lret
pop
adc
and
push
and
jle
push
cmp
test
push
movsl
dec
xchg
decb
das
enter
insl
rclb
sarb
popf
dec
icebp
ss
pop
adc
into
into
and
dec
push
aam
mov
aaa
test
xchg
mov
dec
cmp
rolb
lcall
mov
mov
mov
pop
push
jns
sub
cmp
rcrl
or
inc
push
movsb
mov
ss
add
sub
cmp
push
inc
in
mov
dec
xchg
es
mov
pop
fcomps
mov
addl
aam
sbb
cmp
bound
or
inc
das
sbbl
inc
mov
push
imul
aas
pop
pop
push
push
int3
push
mov
push
sbb
dec
mov
dec
insl
pop
dec
mov
sbb
jne
and
xor
and
inc
movsb
push
clc
rcrb
pop
push
adc
pusha
insl
cmp
je
icebp
xchg
push
insl
add
ret
lods
inc
test
add
test
test
push
cmc
leave
cmp
xor
and
cli
pop
mov
xor
in
fdivs
fcmovbe
sarb
mov
in
xchg
dec
mov
mov
into
sbb
subl
test
fcoms
add
mov
mov
add
push
sarl
or
adc
xchg
dec
or
jmp
add
xchg
cmp
cltd
mov
dec
loop
inc
stos
shlb
push
cmpsb
inc
mov
push
in
icebp
mov
xchg
insb
fmull
aam
ret
jg
fisttpll
inc
sub
sbbb
shl
es
in
iret
jne
mov
jp
pop
jne
add
loop
push
mov
and
fnsave
loop
jl
dec
fisttps
mov
sub
int
loop
jle
inc
insb
test
mov
xor
mov
push
push
xor
jmp
push
je
jns
pop
pop
scas
sbb
mov
sti
sub
stos
inc
mov
fstl
or
mov
sbb
cmp
jno
fdivrl
stc
lods
repz
jle
mov
jg
mov
out
ds
xlat
jns
mov
test
pop
aas
sub
je
push
mov
ja
xchg
movsl
rcrb
push
push
add
fiadds
bound
and
pop
jne
aam
int
out
scas
out
and
test
stc
mov
pop
js
iret
dec
mov
cmp
sub
bound
int
jecxz
rclb
push
in
lds
cli
mov
pop
jo
sbb
push
pop
mov
jle
xor
into
sub
popa
xchg
ljmp
mov
ret
shl
cmp
pop
sbb
nop
or
or
sbb
jne
lock
pop
pop
loopne
jmp
andl
dec
das
sti
cli
fwait
or
insl
xchg
dec
mov
enter
or
mov
repz
xchg
cmc
mov
lahf
popf
aam
pushf
dec
into
inc
test
stos
cmpsl
adc
push
push
subl
and
xchg
xor
cld
mov
mov
or
xchg
xchg
loope
or
pop
lahf
dec
sub
xchg
les
pop
add
pop
mov
sub
xchg
cmc
in
mov
cmp
fistl
inc
jg
dec
mov
stos
dec
mov
push
push
jbe
jmp
jmp
rcrb
sbb
cmovp
scas
xchg
daa
test
adc
push
repz
bound
das
sub
cmp
push
sub
adc
push
push
jne
pop
jmp
push
dec
dec
pushf
mov
xchg
mov
add
cli
or
shll
fsubrl
movsl
pushf
out
fwait
xchg
mov
rcrl
jno
test
in
sub
push
jbe
test
pop
subb
rol
aad
aas
pop
xor
nopl
push
and
add
repz
movsb
pop
leave
popa
xchg
cmp
and
arpl
cld
fiaddl
fiadds
rcrb
lret
jmp
jl
mov
xchg
inc
fs
imul
xlat
test
in
and
call
inc
cmpsl
or
pop
xchg
and
ret
arpl
loopne
test
add
pop
loopne
in
mov
cmp
push
and
adc
mov
jne
dec
into
fimuls
add
sbb
xchg
sub
int
aad
jl
dec
orb
or
pushl
dec
mov
mov
xorb
mov
jnp
movsl
adc
xor
pop
cmp
mov
out
or
sub
xchg
mov
sub
lret
testb
psubsb
stos
repz
add
add
jmp
js
jecxz
out
stc
outsb
ss
mull
int3
stos
pop
or
jmp
pop
out
cmp
ret
push
into
sti
xor
cltd
ret
inc
sub
cld
out
ret
repz
mov
xchg
jle
daa
std
clc
fsubrl
pop
jp
xor
inc
xor
neg
cmp
lds
jo
rolb
or
out
mov
movsb
outsl
jle
iret
fldenv
enter
iret
or
adcb
imul
lods
outsb
leave
mov
addb
push
movsl
cmp
sub
mov
out
xchg
lods
mov
ss
push
in
xchg
inc
push
test
sbb
xchg
out
xchg
mov
adc
jnp
scas
sub
mov
int
shrl
add
fisttpll
ja
addb
xchg
aaa
hlt
lret
data16
inc
xchg
iret
cmp
fcmovnb
mov
push
xchg
cmpsb
jns
push
sub
xor
lock
xchg
inc
test
mov
pop
pop
push
jp
add
bound
cmp
and
push
inc
cmp
xchg
pop
inc
fstpl
sbb
sbb
pop
push
mov
inc
push
cwtl
fldcw
bound
test
cmp
out
sbb
rcrb
push
adc
lock
cld
in
stos
jo
inc
in
cmpsb
mov
lea
add
dec
sbb
jne
movsb
add
sub
jle
cmp
mov
test
xchg
xchg
cmpsb
inc
add
call
mov
adc
imul
dec
fmull
hlt
dec
daa
data16
ret
ja
cmp
iret
flds
cltd
into
mov
fucomp
ss
jp
outsb
pop
stos
add
cltd
pusha
out
sti
push
lret
cs
popf
mov
or
lods
cld
push
push
mov
dec
inc
into
int
scas
lds
filds
in
sub
lret
inc
loop
cmp
mov
pop
mov
jmp
cmp
sub
repz
notb
fs
jge
sub
ljmp
mov
rorl
jp
jns
cmp
test
hlt
mov
mov
sbb
sbb
imul
pop
fimull
fmuls
mov
and
jb
lahf
shll
mov
sti
es
and
mov
out
fnsave
pop
out
mov
inc
push
adc
xor
sub
test
push
push
inc
stc
movsl
int
vpmacssdql
je
push
testl
std
jmp
mov
dec
sbb
insl
mov
imul
dec
iret
es
sub
mov
aam
lahf
jle
loopne
mov
fnstenv
movsl
xchg
jae
or
mov
pop
add
not
mov
jge
int
ret
adcl
mov
push
cmpsb
xchg
sub
mov
sub
push
sti
hlt
es
icebp
dec
adc
xchg
movsl
pop
stc
es
add
idiv
adc
pop
enter
cmp
imul
int
hlt
std
jecxz
test
roll
adc
mov
movsb
xor
adcb
in
rcll
cmp
jno
adc
inc
sbb
cmp
jnp
mov
cmp
loope
cmp
add
mov
mov
cmc
pop
sbb
mov
ja
movsb
lds
pop
mov
icebp
push
mov
insb
add
cld
in
idivb
bound
call
cwtl
popf
jo
cld
lds
aad
imulb
out
or
movsl
lret
shll
sbbb
push
mov
ror
push
push
mov
add
jle,pt
popf
inc
sbb
xchg
sbb
mov
lret
cmp
dec
ljmp
push
test
xor
push
ret
pushf
xor
icebp
sbb
in
pusha
mov
jnp
jnp
mov
and
ljmp
aaa
aam
adc
sub
push
sahf
add
mov
xchg
insl
adc
int
xchg
divb
cmp
jge
mov
mov
sbb
xchg
jae
and
sarb
add
pop
sub
imul
pop
mov
das
iret
jl
int
or
jo
sbb
xchg
push
add
insl
or
inc
mov
insl
sbb
cs
mov
call
sub
cli
xchg
incl
pop
adc
sub
pop
out
and
jae
out
cmc
or
inc
jp
push
dec
cmp
pusha
gs
push
push
mov
sbb
push
inc
loope
xor
aam
sarb
pop
inc
push
mov
or
mov
cmp
cltd
pop
push
das
inc
fdivrs
mov
sbb
xchg
push
gs
in
adc
add
jg
inc
sub
cmp
rclb
mov
repz
in
repnz
movsb
jb
leave
mov
adc
xchg
addr16
sub
cmp
adc
cmp
in
std
faddl
bound
out
jbe
jae
int3
xor
and
inc
mov
movsb
in
popf
sahf
dec
mov
and
mov
gs
incl
dec
dec
aad
in
mov
sahf
pop
jo
jle
repz
shlb
jl
rcll
mov
imul
rcr
enter
in
add
xor
pop
or
xchg
cltd
aas
sbb
cwtl
inc
mov
lahf
adc
push
rorl
mov
pop
lods
cmpsb
push
popa
lods
mov
cld
cmp
insb
pop
mov
fmul
mov
es
dec
mov
mov
adc
push
sub
je
xchg
fsts
mov
or
incl
mov
xchg
gs
mov
dec
int3
pop
jle
pop
xchg
sub
fistpl
fistpll
adc
xchg
add
fcoml
hlt
sub
adcl
add
mov
pop
mov
iret
mov
sbb
es
fs
pop
xchg
popf
lds
adc
add
or
or
pop
imul
mov
cmc
cmp
jle
outsl
jbe
add
repnz
mov
and
jmp
js
movsl
push
ja
sub
aad
mov
cli
pop
call
xor
cmpsb
insl
xor
xor
cs
repnz
or
mov
push
icebp
xor
cmpsl
enter
or
clc
sub
jae
cmp
ss
cmc
cmp
mov
inc
std
add
or
xor
mov
mov
scas
or
int
jmp
mov
test
sub
mov
cmp
hlt
out
inc
cmpsl
xor
out
icebp
sub
nop
arpl
out
out
int
cmp
mov
adc
sbb
ss
icebp
mul
fsubs
xchg
cli
cmp
shlb
fistl
hlt
scas
push
add
dec
jbe
xor
dec
outsb
test
fstpt
adc
js
or
sub
sub
sub
mov
imul
cmpb
jb
and
adc
lea
adc
inc
in
aad
push
xor
sahf
jno
pop
mov
mov
or
adc
sub
pop
imul
movsl
arpl
iret
and
push
outsb
xchg
stc
dec
mov
mov
repnz
aas
imul
ficomps
cmp
adc
jmp
lcall
lock
mov
sbb
or
mov
push
pmuludq
jl
adcb
shll
push
aad
add
fcomps
lds
dec
mov
push
push
push
or
cmp
mov
xchg
mov
lret
outsl
inc
inc
popf
pop
adc
inc
inc
mov
xchg
dec
ds
push
int3
aam
xor
xchg
addr16
mov
or
dec
mov
jbe
jle
pop
push
mov
mov
pop
push
dec
ljmp
loopne
jo
insl
mov
inc
loope
dec
cs
or
arpl
jns
ret
mov
push
outsb
cwtl
mov
iret
pop
outsb
xlat
in
hlt
push
cmpsl
or
jb
xchg
push
adc
lea
sti
cwtl
shll
pop
movsb
and
xchg
mov
aaa
addr16
inc
mov
xorb
inc
and
xchg
imul
cmp
cmpsl
ss
call
mov
add
imul
dec
roll
ss
addr16
and
and
xchg
cld
mov
xchg
inc
inc
cs
dec
test
and
pop
call
rcll
aas
aas
inc
xor
sub
jp
mov
out
into
xor
inc
les
cmp
orl
movsb
xchg
test
xchg
adc
jne
mov
in
aas
in
sti
sahf
lock
scas
lds
in
movsl
in
fisubrs
cli
xor
fmull
enter
mov
cmpsl
pop
sarb
test
xor
je
js
xor
into
push
mov
cmpl
sbb
dec
xor
jmp
int3
xor
leave
mov
ja
lahf
sbb
jns
push
mov
push
dec
fdivrp
addr16
mov
xor
and
xchg
movsl
stc
mov
xchg
aas
xlat
lods
repnz
xor
xor
ss
add
push
test
xchg
out
cwtl
movsb
cmp
mov
mov
or
and
sub
xor
inc
add
push
leave
mov
mov
inc
inc
negl
mov
fdivp
leave
loope
ljmp
jmp
orl
mov
sbb
bound
or
stos
or
adc
ds
jno
jno
xlat
test
sbb
push
add
pusha
loope
pop
lea
inc
cli
fucomip
aas
scas
xchg
aam
fisubrs
movsb
xchg
leave
xchg
cmp
xor
push
jno
mov
mov
stc
sbb
mov
xchg
ss
xlat
ret
jmp
jmp
ror
sbb
push
inc
dec
lea
sahf
mov
cmp
and
iret
pusha
pop
pop
dec
sbb
pop
mov
push
cwtl
and
ss
adc
push
nop
stos
xchg
or
mov
dec
out
mov
popf
cmc
mov
lcall
add
mov
push
div
call
push
ljmp
sub
gs
fidivrs
jno
push
imul
loope
ljmp
push
mov
xor
or
jl
inc
xchg
mov
mov
lcall
cmp
or
insb
xor
mov
push
sbb
pop
jbe
add
add
outsl
std
cld
pop
cmc
xchg
out
daa
sbb
in
ja
push
or
repnz
data16
fadd
es
cmp
dec
mov
dec
icebp
stos
nop
repz
lcall
das
inc
shrb
mov
pop
inc
enter
js
push
or
inc
mov
scas
or
pop
adc
hlt
into
dec
inc
aas
sub
jb
aas
xchg
ds
test
fildl
mov
sahf
pop
cs
mov
or
fistpl
lods
sub
imul
xlat
mov
fcmovnbe
mov
rorl
das
fidivrs
test
lcall
mov
out
jmp
cmpsb
sbb
adc
fs
int
movsl
jnp
push
outsb
sahf
inc
leave
cmp
xorb
xor
loope
test
pop
push
repz
aam
mul
push
fsincos
lock
fmull
imul
leave
das
int3
loope
rorl
xchg
adc
lahf
ficomps
sarl
fs
xchg
mov
cltd
filds
je
enter
add
pop
xchg
rclb
cmpsb
hlt
xchg
sub
dec
ss
xor
adc
cmp
xchg
enter
movsl
rolb
adc
ffreep
clc
xor
push
je
test
xchg
inc
filds
dec
int3
rol
adc
lods
mov
int
pop
jbe
inc
in
into
int3
test
lret
mov
movsl
cli
add
repz
test
dec
pop
pusha
mov
or
arpl
fistpll
lret
sbb
xchg
fadds
test
mov
into
adc
fists
and
mov
mov
push
mov
fs
sarb
sub
sar
repz
stc
mov
and
js
or
inc
sti
mov
hlt
in
mov
into
sub
add
xchg
inc
outsb
out
add
mov
arpl
lods
sbb
cmpsb
mov
cmp
xchg
test
or
add
adc
mov
xor
in
fsubs
scas
mov
icebp
insb
jne
sti
and
add
or
nop
lock
ror
push
adc
cmp
adc
rorl
scas
cmp
pushf
pop
and
pop
gs
pop
aad
jp
loopne
orb
insl
push
add
xchg
inc
jge
sub
and
sub
outsl
adc
stc
mov
push
jmp
movsl
nop
shlb
pushf
js
xor
das
ret
test
xor
sbb
dec
add
je
mov
mov
jmp
bound
sahf
push
rcll
cmp
daa
pop
pushl
adc
rcll
gs
stos
mov
push
mov
jb
gs
ds
dec
addr16
je
jp
or
fmul
mov
inc
cmp
or
es
loop
pop
fucomip
out
jb
pmuludq
es
addr16
add
mov
sub
mov
lret
sbb
aam
pop
add
fidivrs
aaa
ljmp
add
jae
push
negb
fsubrl
jle
mov
test
fistl
andb
sub
sub
dec
sub
xchg
ret
or
scas
push
std
mov
fimull
dec
cmp
inc
lods
mov
mov
cld
push
jmp
push
mov
sub
dec
fs
mov
sbb
fdivs
out
cmp
sub
xchg
or
adc
push
mov
mov
sarb
mov
xchg
int3
lret
cmp
movsb
and
imulb
xchg
pop
jecxz
push
or
shr
push
in
push
pop
add
sub
fsubrl
arpl
xchg
jae
shlb
inc
push
bound
or
clc
popa
jg
mov
push
fwait
pop
dec
clc
xchg
into
dec
ja
xchg
pushf
xor
call
paddb
pop
int3
and
daa
in
sub
in
push
jno
sbb
mull
adc
mov
test
mov
popf
add
dec
fwait
mov
xor
xchg
clc
add
cmp
and
out
and
ljmp
mov
mov
outsl
xchg
subb
aad
decb
cwtl
lret
add
test
cmc
addr16
pusha
js
xchg
sahf
into
repz
int
add
test
mov
push
pop
cwtl
movsb
in
push
cwtl
jmp
iret
or
add
mov
mov
ficoml
scas
addr16
sahf
ja
jns
xchg
shrl
fs
shlb
mov
nop
lahf
std
mov
ljmp
sbb
lods
mov
xchg
push
or
insl
lret
insl
gs
add
sti
and
jbe
out
push
pop
push
das
xor
fmulp
les
dec
gs
pop
ljmp
xor
push
or
mov
fimull
push
inc
js
push
and
or
into
jmp
or
push
mov
push
insl
or
fnstcw
es
mov
mov
add
loope
xor
push
outsb
dec
mov
push
aad
cwtl
push
mov
lds
je
or
daa
nop
outsl
scas
jae
xor
jmp
inc
shrl
xor
enter
or
and
xchg
xchg
stos
jle
or
scas
xor
push
xor
or
mov
dec
call
and
xchg
aaa
inc
mov
mov
cmp
xchg
scas
mov
call
push
mov
pop
pop
test
lock
roll
outsb
adc
pop
fnsave
jb
scas
aaa
and
cmc
das
add
lret
rcpps
dec
test
jmp
or
ficompl
adc
test
addr16
add
stos
adc
stos
mov
scas
sti
cmp
jge
test
mov
ret
orb
sub
aas
mov
daa
mov
out
mov
adc
push
mov
int3
in
jle
sbb
icebp
ds
or
dec
and
jg
jbe
xchg
mov
ja
mov
es
cmc
push
jbe
mov
out
dec
push
jl
mov
mov
out
pop
pop
xchg
stos
cld
dec
jge
cli
and
insb
add
sbb
adc
in
into
sti
mov
xor
and
dec
or
jge
xchg
rcrl
xor
mov
lahf
mov
mov
xchg
fs
or
cmp
pop
xchg
add
sbb
push
mov
add
xchg
pop
mov
mov
cwtl
adc
lahf
pop
gs
in
loopne
dec
fwait
pop
outsb
mov
cli
cmp
test
daa
dec
in
pop
mov
pop
inc
aam
xor
cmp
test
scas
ret
loopne
imul
jg
and
jbe
pop
cmp
into
aaa
dec
aam
xor
push
stc
mov
push
outsb
push
sub
stc
adc
mov
test
pop
inc
cmpl
lret
cld
dec
mov
popa
mov
push
dec
xor
adc
fwait
repnz
test
xor
ret
cli
and
in
test
int
mov
add
fadds
xchg
inc
and
xor
jb
lods
dec
mov
ljmp
jns
mov
mov
scas
push
shrb
add
ret
outsl
jmp
xor
pop
inc
outsb
sbb
mov
jmp
adc
sub
pop
cmp
movsb
dec
pop
lea
add
xor
inc
bound
mov
xor
adc
push
jl
sbb
bndldx
or
inc
mov
and
cmp
loopne
xchg
dec
cmpl
sbb
jne
mov
ss
cs
jns
mov
sub
mov
adc
js
pusha
mov
inc
arpl
repnz
cli
in
insl
mov
lcall
lret
mov
mov
add
fsts
mov
leave
imul
dec
sti
xchg
jmp
push
push
jp
in
adc
inc
pushl
mov
popf
shr
les
mov
pop
in
aad
cwtl
shlb
jnp
jb
mov
jle
lret
add
movsb
fisubrs
xchg
mov
pop
movsl
daa
lahf
inc
add
iret
leave
clc
lods
daa
inc
sub
dec
rcrb
inc
in
cltd
aaa
test
ret
mov
out
loop
push
lods
jl
pop
int3
dec
repnz
sbb
push
jl
fildl
cmp
clc
jae
jecxz
jne
mov
stos
xchg
jp
imul
iret
pop
pop
mov
movsl
leave
push
jne
popf
lock
mov
push
repnz
sarb
lcall
lods
sbb
test
mov
insb
rorb
push
pop
dec
loop
out
xor
stos
mov
adc
daa
addl
popa
adc
imul
add
mov
in
mov
cmpl
mov
xchg
jno
nop
xor
lods
cmc
mov
xchg
jecxz
and
adc
pop
js
mov
je
test
dec
out
mov
cmpsb
push
mov
popa
sub
pop
js
jnp
test
pop
fisubs
xchg
add
push
push
mov
push
sbb
or
es
pop
sar
movsb
sbb
bswap
rcll
add
xchg
clc
push
leave
sub
pop
and
mov
popa
ret
dec
xlat
adc
repz
pop
or
push
mov
cmc
cli
pusha
sbb
mov
cmp
stos
mov
add
icebp
data16
rorl
mov
cwtl
dec
out
dec
ret
mov
in
mov
lods
inc
arpl
imul
mov
in
mov
daa
or
in
adc
les
scas
xor
mov
adc
pop
add
or
stos
xor
popf
jno
mov
rolb
mov
dec
daa
push
dec
or
dec
fimuls
push
call
xor
mov
mov
call
xorl
insl
jae
jmp
repnz
sbb
fstps
mov
shlb
dec
daa
stos
rcrb
out
or
adc
out
inc
fs
push
inc
sbb
adc
test
jb
inc
push
movsl
jecxz
lea
push
inc
ss
cmp
dec
sub
dec
leave
xor
cmp
push
cmpsl
fsubp
mov
dec
cmp
jmp
mov
xchg
cmp
xchg
sbb
les
and
sub
ret
leave
int3
add
popa
mov
pop
pop
imul
inc
lea
popa
push
adc
push
pop
insb
loop
xchg
mov
sbb
and
cs
lods
xchg
push
dec
sbb
mov
adcl
into
mov
ret
push
xchg
ja
add
pop
push
mov
hlt
push
xorl
jl
mov
insl
cmpsb
ret
lcall
dec
inc
inc
icebp
jg
push
jmp
into
iret
push
pop
ret
jmp
mov
cmpsb
es
test
dec
pop
jae
inc
pop
bound
lods
lret
pop
cmp
xor
fisubrl
xchg
jg
xor
mov
andl
adc
or
in
push
jns
mov
arpl
aam
dec
icebp
sub
leave
dec
insb
out
adc
int
push
jne
es
outsl
lcall
jb
dec
jg
gs
nop
cmpsb
dec
mov
jl
cmpsb
sub
mov
dec
iret
xchg
push
outsl
lret
cltd
pop
test
inc
mov
popf
rcll
inc
adc
mov
dec
sub
jp
lea
cmpsb
mov
mov
sbb
inc
and
xor
cmc
lret
insb
xchg
push
stos
push
clc
pop
into
bound
shrb
pop
lret
subl
xchg
mov
mov
pop
xchg
jne
add
mov
lret
out
imul
xlat
xchg
popf
cmp
fnsave
loope
mov
push
lahf
pop
cmpsb
nop
ret
adc
sbb
cmpsl
pop
cmp
xchg
outsl
jmp
adc
lock
lcall
push
sub
push
into
jno
adc
hlt
push
jnp
lcall
mov
add
lods
jnp
inc
pop
aam
xchg
mov
xchg
pop
and
clc
jbe
scas
pushf
fisttps
xchg
cltd
popf
mov
jge
cmpsb
pop
aaa
popf
add
lds
stos
sbb
orb
pop
mov
pop
inc
call
test
xchg
cmp
lds
inc
faddl
mov
mov
aad
adc
xchg
test
jmp
fnsave
in
es
dec
push
sbb
loopne
push
test
jne
mov
xchg
sahf
pop
mov
mov
fs
inc
testb
adc
or
fidivs
insl
mov
xchg
xor
fsubs
xor
es
inc
cmp
imul
cs
das
mov
pop
xor
and
mov
daa
mov
inc
mov
adc
jno
in
pop
lahf
filds
outsb
adc
movsl
pop
jnp
imul
xchg
xor
xchg
cmpsb
stc
popa
mov
dec
push
std
mov
and
pusha
clc
fistps
xchg
lret
jb
fdivrs
sub
mov
cmp
psubb
pop
mov
out
mov
pushf
mov
out
stos
jbe
or
loop
and
or
mov
xchg
aam
cmp
mov
xlat
inc
test
mov
mov
loopne
add
push
sbb
sbb
out
popf
push
mov
inc
imul
jg
rcl
mov
ret
ja
fisubs
mov
adc
hlt
jmp
or
dec
mov
lret
mov
sub
out
out
pushf
inc
enter
dec
iret
add
xchg
loopne
jmp
mov
out
sahf
std
sbb
push
test
sahf
pushf
mov
or
cmpsb
and
mov
push
out
fmul
das
fldenv
aam
popf
mov
dec
and
add
aam
cmpsl
inc
jmp
mov
xchg
lea
outsb
mov
cmpsl
cmp
addb
arpl
and
sbb
fstl
std
sbb
fwait
push
sub
mov
lock
dec
leave
adc
mov
test
mov
xor
pop
mov
jae
xor
jae
loopne
addr16
call
fsubrl
xchg
aaa
inc
push
fstpt
icebp
and
cmc
and
je
mov
lods
insb
jmp
stc
inc
sub
ret
bound
insb
pop
lcall
sub
out
stc
in
test
leave
out
jnp
and
cwtl
push
popf
xchg
imul
scas
testl
push
jp
int
push
mov
lcall
mov
dec
cmpsl
xor
mov
jo
xchg
out
adc
cmc
popa
or
out
sbb
xchg
push
jo
pop
fs
jno
sti
mov
pop
cmpsb
fistpl
push
mov
pop
xchg
cmp
fwait
push
icebp
inc
xor
add
push
imul
lahf
in
cmp
pop
adcb
lods
icebp
sti
es
jbe
arpl
aaa
jmp
pop
popa
rcrl
scas
lods
mov
scas
or
or
mov
add
inc
bound
cmp
mov
mov
stos
add
sub
rorb
iret
iret
lcall
push
shrb
xchg
and
rcll
mov
push
iret
fisttpll
sub
pop
cmp
test
fstpl
test
adc
aam
loop
push
out
sbb
push
mov
scas
movsb
cmpb
add
pop
test
pop
nopl
ret
mov
aad
in
loope
test
lock
shll
sub
mov
scas
in
xor
sub
xchg
mov
sbb
jb
push
pop
outsb
mov
invd
jnp
stos
lahf
fwait
vcvtsi2sdl
inc
jecxz
jb
icebp
xchg
jo
fnstcw
and
and
divb
sub
pop
jecxz
decb
ret
popf
es
xchg
dec
aas
push
iret
in
inc
es
pop
jb
test
loop
dec
dec
and
jg
clc
insw
add
mov
jl
divb
shl
fwait
sub
cmp
xchg
sbbl
nop
jmp
addr16
and
mov
xchg
stos
test
shll
push
out
push
imul
add
jmp
jecxz
inc
mov
xor
and
out
popa
iret
mov
outsl
pop
adc
in
sub
xor
or
loop
sbb
pop
out
dec
cmp
push
xchg
mov
sub
adc
in
hlt
push
mov
aad
lretw
sbb
add
fs
xor
movl
insb
jb
pushf
inc
mov
xor
sub
lret
scas
or
sub
push
push
mov
sub
test
mov
scas
sbb
lcall
clc
les
lret
out
adc
dec
pop
fisttps
xchg
mov
sbb
orb
iret
fnstsw
xor
pop
incl
loop
or
pop
mov
loop
xchg
ret
test
xchg
push
lcall
dec
into
cltd
push
or
aam
jno
sub
sbb
cmpsl
std
mov
fnstcw
jns
pop
faddl
pop
sbb
stc
insb
inc
ret
push
pop
cmpsb
and
les
cs
enter
js
sbb
xchg
mov
ss
rcl
mov
xor
cmc
popf
filds
sub
adc
int
pop
sti
sarl
pop
int
enter
nop
out
push
mov
jns
cmpsl
ljmp
sahf
sub
jns
loop
xchg
xchg
adc
shr
push
stos
out
mov
dec
hlt
imull
in
test
subb
dec
jle
rcr
lret
out
test
in
or
sbb
or
mov
outsl
inc
insl
lahf
or
cmpsl
pop
sub
xchg
xor
xor
xchg
mov
in
adcb
mov
ss
mov
popf
xor
aaa
cmp
sbb
pop
int
push
sbb
sub
jo
cmp
dec
cmp
and
mov
test
out
xchg
mov
enter
sbb
mov
push
jge
data16
or
push
add
push
pop
inc
push
jo
hlt
inc
pop
arpl
sub
bound
jmp
imul
sbb
test
es
and
push
pop
cld
pop
fucom
and
adc
dec
push
sub
pop
sbb
add
int3
xor
sub
imulb
push
fiaddl
xor
pop
adc
pop
xchg
jb
sbb
std
mov
adc
dec
incb
nop
or
shlb
mov
fistps
es
ror
cmc
xchg
aas
xchg
lock
mov
ds
test
repnz
test
cwtl
jge
and
ss
adc
iret
aam
cmpsb
sub
sbb
jg
lea
or
mov
test
jecxz
ja
leave
pop
pushf
roll
cmp
jae
push
sub
inc
adc
in
push
jle
cs
sarl
dec
mov
push
inc
mov
jno,pn
rcrl
adc
cld
rcl
dec
sub
xchg
pushf
pop
fldenv
sbb
adc
test
add
shrl
cmp
sub
insl
je
inc
shl
int3
mov
mov
test
xor
mov
shrb
rorl
or
imul
dec
aas
mov
sub
xor
xor
mov
cmp
add
push
ss
mov
push
dec
pushf
shlb
cmp
pop
outsb
dec
add
mov
shl
push
in
out
and
lods
dec
xor
sbb
lea
add
test
mov
fmuls
arpl
mov
mov
sub
sbbb
lret
fsubrs
aaa
js
mov
and
mov
ds
mov
or
mov
pushf
cli
leave
jge
jl
xor
jge
imul
or
aaa
xchg
xor
sub
push
dec
mov
jne
or
xor
ss
xor
es
es
or
jnp
mov
scas
inc
out
js
push
push
sbb
pop
fbld
inc
or
or
mov
pushf
push
pop
and
jns
clc
les
dec
out
notl
inc
mov
fstl
mov
mov
ret
aad
movsb
fcmovbe
cwtl
pop
sub
cmp
roll
cmp
xor
cmp
dec
popa
and
adc
testb
mov
imul
mov
popf
and
sub
jbe
and
pop
movsb
pop
inc
pushf
pop
mov
cmp
in
adc
xchg
test
ret
xchg
pushf
movsl
mov
mov
dec
stos
jg
fldcw
psraw
cld
divb
rcll
cmp
sub
fcompl
es
arpl
in
pop
es
sbb
aas
pop
jmp
mov
xor
daa
or
pop
xchg
icebp
repz
mov
in
in
repz
test
dec
push
xchg
mulps
add
jle
or
lcall
inc
jns
popf
mov
xor
out
mov
and
in
adc
xchg
and
lods
inc
fs
push
cmp
fwait
and
cmp
sub
les
sbb
pop
clc
or
test
cmc
insb
pop
arpl
xchg
int
orb
adc
mov
xchg
pop
in
test
addl
mov
movsb
gs
loopne
xor
adc
or
jg
aam
sbb
inc
ja
mov
lahf
sbb
adc
pop
mov
xor
imul
into
xor
lahf
jp
push
or
icebp
mov
pop
cmp
cmp
inc
jmp
rorb
cmp
mov
mov
loopne
js
mov
jns
add
hlt
cli
cmp
inc
mov
les
iret
faddl
adc
cmp
push
xor
hlt
and
notb
push
push
sub
pop
add
not
fildll
and
cld
adc
or
jl
hlt
dec
pop
rcrl
jge
inc
mov
cmp
sbb
xor
push
cmc
ret
xor
andb
add
dec
mov
pop
pop
add
jbe
mov
repz
subb
push
inc
insl
xchg
fdivrl
leave
mov
adc
lcall
push
sub
push
int3
stos
sarb
pop
loop
jno
sub
cwtl
mov
mov
jl
mov
rorl
adcl
leave
hlt
xor
sub
or
call
xchg
jmp
pop
jb
out
lahf
unpcklps
push
xchg
in
push
xchg
popa
bsr
or
cmpsb
int
movsb
jnp
ret
and
jb
push
loope
or
mov
je
test
sahf
push
jnp
nop
jnp
xor
call
or
pusha
xchg
xor
sub
imul
pushf
idivl
or
clc
mov
fcompl
sbb
daa
dec
sbb
lret
mov
bnd
adc
shrb
ss
cld
stc
mov
push
fistpll
iret
jg
dec
pop
je
popf
call
mov
popl
data16
shll
inc
icebp
pop
and
jmp
xlat
mov
xchg
mov
inc
aam
pop
in
dec
add
jecxz
xchg
nop
pop
or
in
or
mov
xchg
jg
adcl
ss
inc
stc
mov
push
lea
mov
mov
fsubrl
pop
xor
mov
mov
jno
scas
pusha
xchg
mov
pop
pushf
pop
xor
fs
stc
xor
xorb
inc
sbb
nop
inc
push
mov
jl
jae
jecxz
dec
dec
loope
loopne
sbb
mov
mov
aad
mov
jecxz
push
movsb
dec
popa
pop
push
mov
xchg
sub
stos
imul
or
pop
add
cli
jbe
and
mov
or
imul
enter
mov
clc
or
push
sbb
inc
cmp
jae
sub
aas
jge
mov
mov
push
sub
in
lods
fwait
shll
jg
inc
or
mov
xor
scas
jg
out
mov
in
sub
jp
lret
stos
adc
fists
cmp
push
pop
inc
push
int3
sub
mov
rorl
and
dec
das
pop
and
adc
mov
or
or
ljmp
or
test
and
jb
neg
aas
sub
call
xchg
adc
rorl
popl
jle
cmp
xchg
cmpsl
les
pop
popf
in
dec
daa
jp
add
aam
add
stc
out
test
xchg
pop
lret
clc
mov
xorb
into
mov
xor
fistpl
pusha
nop
push
mov
mov
lods
xchg
lret
popf
xchg
addl
jns
mov
out
sbb
iret
out
jp
jb
pop
adc
push
and
xor
ja
int
xor
and
addl
push
jl
mov
cmpsb
nop
mov
mov
sbb
shlb
outsl
sub
adc
ret
lods
sub
lods
xorl
xor
clc
dec
ficoms
sub
jmp
lods
or
pop
fsub
loopne,pt
sub
cs
sbb
ficomps
sbb
fnstcw
mov
and
xor
and
nop
dec
ficomps
sub
adc
add
das
fnstsw
not
mov
cmpsb
pop
fsubp
xor
pop
or
in
add
repnz
dec
push
jne
sbb
or
data16
insl
cli
xchg
pusha
pop
xchg
gs
shlb
jge
cmc
out
rorb
add
pusha
shrb
out
test
sub
fnstcw
popf
call
adc
fdivrl
in
fcom
loope
aad
jmp
fwait
test
mov
dec
mov
add
test
adc
push
xchg
fisttps
andl
shl
popf
orl
mov
mov
iret
mov
jnp
pop
and
mov
mov
sub
pop
sub
push
and
sub
rclb
adcb
pop
adc
sub
cmpsl
shlb
cmpsb
adc
dec
call
add
cli
push
adc
pop
adc
faddl
jmp
push
xchg
repnz
jb
inc
cmp
fisttpl
insb
shll
shlb
dec
mov
movsl
mov
leave
hlt
mov
xor
sbb
fidivs
adc
and
shr
sbb
push
inc
adc
inc
loopne
rorl
push
pop
or
dec
int
mov
daa
clc
andb
lret
repnz
xchg
mulb
leave
es
lock
sub
inc
push
sti
fstl
fcomp
ss
adcl
stos
sub
test
cld
mov
add
addr16
test
cmpsb
dec
mov
out
out
stos
stos
xor
mov
out
rolb
popf
xor
cmpl
pop
xor
fimuls
movsl
xchg
cmp
mov
pop
insl
pop
mov
imul
incb
and
je
popa
push
push
lret
jge
mov
pop
xchg
inc
shll
cwtl
cwtl
pop
outsl
push
or
imul
std
jge
repz
and
dec
shll
sbb
jmp
mov
sbb
xchg
add
mov
pop
cli
push
push
add
cmp
cmp
popa
inc
jae
sub
pushf
fisubs
xchg
int3
add
xlat
and
pop
mov
data16
es
jo
lret
imul
pcmpeqb
fcom
stc
aaa
dec
mov
call
add
scas
pop
lahf
pop
sub
ret
xchg
sub
push
sarb
test
xchg
inc
push
repz
cmp
xor
es
int3
movsb
cs
bound
cmpsl
pop
xchg
xor
pop
call
js
add
pop
jl
imul
sub
mov
adc
sub
clc
adc
dec
aad
ds
or
lret
sbb
outsb
dec
inc
mov
sbb
imulb
push
iret
in
add
push
movsb
mov
mov
into
inc
adcl
pop
fwait
inc
mov
fidivl
push
jecxz
outsb
clc
stos
and
fidivs
dec
aad
mov
call
std
mov
cmp
jb
cmp
enter
dec
dec
mov
mov
sbb
xlat
fiadds
adc
gs
adc
cmp
shlb
mov
xor
js
ds
inc
mov
or
inc
push
inc
lock
inc
mov
sub
sahf
mov
js
stos
jp
push
clc
in
jmp
pop
inc
pop
bound
xchg
mov
sahf
call
xlat
shl
mov
lods
push
in
mov
imul
cwtl
add
aas
out
fsubrs
xchg
jecxz
or
gs
movsb
lcall
insb
cmp
shrl
sub
iret
cmpsl
ds
call
lcall
mov
push
jmp
cld
rclb
mov
xchg
nop
sub
sbb
test
push
xlat
filds
mov
adc
cmovno
cmp
xor
pop
mov
in
incb
test
out
outsb
ja
movsb
jp
pop
mov
xor
pop
lcall
mov
dec
push
dec
mov
fsubrs
mov
add
jmp
stc
bound
inc
mov
xor
repz
sbb
fst
xchg
xor
xor
notb
lahf
cmpsb
enter
cmp
sub
jp
adc
lds
addps
add
aam
out
pop
ljmp
push
push
push
and
enter
stos
mov
cmp
outsl
hlt
push
fst
ja
jns
cs
lods
adc
shll
xor
or
stc
sbb
inc
xchg
cmp
inc
popa
xchg
std
xchg
push
out
imul
xor
mov
mov
clc
or
jge
jg
dec
ljmp
out
into
fstl
mov
or
inc
rolb
decb
pop
out
mov
std
sbb
testl
mov
repz
dec
add
es
adc
adc
xchg
xchg
push
hlt
jp
jb
popf
add
mov
in
mov
xchg
insl
push
jae
in
xor
adc
ljmp
inc
enter
stos
test
push
addr16
clc
mov
lock
fcom
mov
cmpsl
jae
mov
cli
les
dec
popa
and
add
cmpsl
xchg
lret
mov
adc
shrl
pop
test
mov
add
ret
or
loopne
ret
push
subb
dec
jge
popa
mov
clc
data16
xor
mov
mov
sbb
dec
and
and
inc
iret
repnz
aaa
adc
ljmp
cltd
mov
xchg
shlb
add
jne
icebp
hlt
fldenv
push
rclb
mov
xor
aam
das
mov
mov
in
mov
sbb
test
mov
xor
push
addr16
mov
sub
jl
jbe
cmp
aam
out
cmpsl
outsb
push
fldl
imul
xor
rcrb
mov
push
dec
or
sub
scas
out
pop
sub
movsl
mov
cmp
hlt
dec
mov
shll
push
push
ljmp
jge
loopne
push
outsb
pop
outsl
je
adc
xor
jne
out
ret
push
rolb
jo,pt
and
sub
mov
sbb
popw
xor
dec
xchg
push
sub
and
push
pop
push
in
pusha
cmpsb
lds
pop
push
loop
clc
mov
pusha
fiaddl
mov
inc
add
mov
pop
outsl
push
aas
mov
jp
fldl
fisttpl
popa
add
ljmp
imul
mov
repz
test
inc
xor
loop
pop
xchg
xchg
jge
mov
pushf
into
fs
out
arpl
pop
xchg
add
mov
test
pop
xor
sbb
xchg
in
lcall
js
jnp
jo
add
pop
lock
xchg
mov
push
dec
pop
jns
aam
arpl
mov
push
or
adcl
mov
add
lock
stc
aam
idiv
pushf
sub
pop
aad
insl
mov
int3
xor
xchg
adc
or
cltd
cmp
fcoml
les
fcoms
jne
bound
pusha
js
scas
or
imul
gs
adcb
sub
and
xchg
mov
mov
inc
sub
loope
pop
add
lcall
adc
popfw
test
imul
icebp
cwtl
fs
lret
sub
es
mov
aad
adc
clc
or
inc
jp
xor
adc
xchg
xchg
sti
cli
icebp
lds
jp
rcll
icebp
adc
sub
loope
clc
pop
sbb
mov
dec
lret
push
xlat
insl
daa
out
pop
cs
and
rorl
lcall
in
fildl
xor
fwait
or
add
loopne
mov
and
inc
jno
test
enter
shl
mov
mov
jge
jne
mov
cli
test
push
mov
stc
repnz
ss
dec
ja
push
cmp
sti
fistpl
pop
jns
mov
sub
vpaddw
sbb
xor
jmp
xor
andb
jg
fs
dec
xchg
scas
insb
xchg
push
cmc
sbb
nop
fisubs
push
add
pop
dec
repz
push
cld
jno
icebp
or
addr16
fmuls
fistl
in
xchg
loop
inc
cmpsl
dec
add
loopne
mov
xor
mov
adc
jne
test
mov
out
xchg
xchg
int3
push
sbb
pushf
ja
add
push
incb
cmp
jo
jmp
scas
mov
aam
adc
mov
add
and
ret
adc
or
addr16
lods
jge
jne
sbb
inc
sub
adc
sbb
in
pop
xor
sub
pop
cmpsl
xor
leave
or
subb
inc
int3
loopne
push
add
xchg
hlt
and
inc
push
sub
clc
cmp
enter
fs
sbb
cmc
dec
imul
aam
mov
call
xor
sub
mov
xchg
inc
xor
add
or
sub
cmp
add
xchg
dec
or
in
dec
pushf
pop
sti
js
cld
loope
mov
cmc
cmp
and
cmp
jbe
cmp
repz
mov
xor
decl
out
stos
pushf
add
mov
jo
mov
aas
shrl
push
sub
jmp
mov
cld
or
sub
jle
sub
pop
lock
imul
aaa
xchg
les
mov
cmpsb
mov
jae
mov
idivl
or
inc
gs
add
inc
nop
lcall
xlat
xor
adc
adc
cltd
pushf
or
lods
dec
fcomp
sar
push
nop
fbld
dec
repnz
sti
push
mov
push
push
cmp
and
jmp
push
or
incb
movsb
xchg
daa
push
jmp
or
jg
jg
xchg
nop
inc
inc
mov
cld
adc
mov
cmp
push
in
push
divl
nop
mov
repz
stc
pop
test
sub
inc
or
push
mov
mov
lock
nop
int
aad
int
jle
or
outsl
and
xor
mov
pop
repz
mov
sar
push
push
xor
fcmovb
in
pop
cs
lods
test
aam
push
dec
mov
enter
sub
mov
ret
pop
rorl
or
xor
mov
js
ds
add
imul
repnz
in
jb
dec
xor
pop
jnp
xchg
hlt
in
jb
or
push
je
xchg
call
mov
stos
jmp
dec
mov
aaa
sub
push
sub
sbb
or
loopne
sub
xchg
mov
xor
lahf
xchg
nop
jnp
jle
mov
cld
lds
push
les
mov
sbb
push
push
mov
fndisi(8087
dec
pop
cmpsl
pop
sbb
int
sbb
mov
out
push
fwait
ss
orl
out
addr16
xor
mov
jne
ja
sarb
das
int3
mov
inc
insb
pop
dec
xor
outsl
push
push
push
dec
das
dec
call
loop
movsb
sti
subl
outsb
adc
sub
stc
out
enter
or
push
or
jg
and
pop
sbb
test
imul
or
dec
mov
mov
lret
ljmpw
stos
xor
pop
std
xor
test
mov
jp
push
dec
test
jl
scas
dec
and
adc
add
imul
leave
cmpsl
adc
jg
jbe
cmc
shlb
or
mov
roll
fcomps
aam
stos
push
sarb
cmp
jo
fwait
pop
pop
ss
mull
cs
mov
das
cmp
and
ja
stos
inc
jecxz
test
xchg
sbb
cwtl
inc
dec
adc
and
mov
imul
xchg
fldcw
lret
and
jb
adc
lcall
cmp
adc
push
mov
add
insl
mov
int
or
push
iret
mov
mov
loop
xor
and
dec
aam
repnz
popl
or
adc
xor
push
jmp
push
push
jnp
in
fisttps
loope
add
sbb
push
mov
pop
mov
or
imul
sarl
insb
sbb
mov
dec
push
iret
int
pop
jle
test
outsb
and
and
imul
jae
shr
jmp
lret
dec
cli
lcall
out
ss
mov
xlat
sub
movsb
imul
lret
push
stc
idivl
mov
jno
inc
xchg
sub
sub
mov
mov
data16
add
sbb
sbb
iret
mov
mov
scas
in
and
mov
ret
push
fstl
jne
cmp
inc
idiv
pop
cmp
add
pop
inc
push
aam
inc
adc
aam
das
movsb
rcll
pop
fsts
out
mov
call
subl
jne
add
or
aas
stc
pushf
xchg
cli
or
push
mov
cmpsl
xor
pop
outsb
sbb
lea
daa
fistl
cli
into
stos
cmc
or
fdivs
lret
ja
cmp
jge
fidivs
mov
loope
ljmp
data16
in
adc
pop
mov
cwtl
test
std
clc
mov
shll
jge
test
rorl
jno
out
cmpsb
or
fstpl
mov
jl
push
sub
add
xor
lods
jmp
mov
jp
call
mov
sub
push
xchg
insw
ret
les
sub
movsb
lret
stc
insb
addr16
lret
mov
daa
movsl
and
xor
lods
mov
jmp
cmp
push
xor
dec
pop
or
sbb
and
imul
icebp
jb
test
in
div
sbb
jp
push
xchg
rolb
imul
xor
loope
jns
in
jns
inc
je
cmp
outsl
stos
xchg
es
pop
sub
imul
ret
inc
cli
adc
lea
add
movsl
mov
lock
adc
nop
cmp
enter
sub
movsb
jmp
add
mov
ljmp
icebp
cmpsw
push
les
jecxz
lahf
cli
loop
out
scas
jnp
mov
pop
fldl
adc
adcb
stc
ss
jg
cmp
cs
lods
adc
pop
add
mov
jno
jle
adc
mov
adc
in
pushf
int
in
mov
js
xchg
imul
mov
jnp
push
push
lods
mov
cld
lock
jg
mov
jle
inc
je
adc
jns
pop
mov
iret
and
pop
in
jl
adc
fbld
adc
cmp
mov
arpl
mov
bound
in
in
and
sbb
mov
ret
rolb
test
das
ss
and
xchg
push
es
pusha
movsb
sbb
ret
popf
mov
shll
xchg
popa
shl
or
stos
mov
cmp
popf
lods
shlb
xor
inc
mov
aad
or
pop
push
add
mov
jmp
mov
adc
or
iret
dec
dec
pop
add
and
outsl
xchg
hlt
mov
adc
add
fcompl
inc
jno
mov
and
jae
add
jno
adc
push
stc
scas
sub
cmc
int3
fadd
jl
pop
push
jmp
sbb
jno
inc
dec
mov
sbb
test
jecxz
mov
push
lahf
nop
in
adc
jb
je
out
loope
jno,pt
loopne
imul
fsubrl
in
movsl
movb
dec
adc
loopne
incb
inc
push
das
out
in
mov
mov
cmpsb
mov
mov
or
adc
stc
enter
push
insb
out
pusha
or
aaa
call
xlat
sub
sbb
dec
adc
icebp
jg
mov
loope
or
pop
cmp
mov
sbb
mov
xor
sti
cmp
push
push
js
sbb
push
push
aas
imul
jne
pop
adc
outsl
cmp
shlb
fcompl
pop
int
cmpsb
mov
mov
mov
inc
mov
push
xor
lret
xor
addr16
cmp
adc
fsubs
cli
testb
jo
jo
mov
jno
in
insb
xchg
adc
jecxz
repnz
push
mov
add
sub
les
out
lret
addl
mov
sbb
cld
mov
pushf
jnp
in
mov
mov
mov
or
mov
adc
nop
das
jge
sahf
pop
jecxz
xor
idiv
mov
imul
inc
lcall
or
xor
mov
outsb
cmpsl
xchg
sti
sub
repz
or
and
sbb
jge
stc
sbb
push
sub
jbe
push
dec
or
push
mov
in
adc
fnstcw
xor
and
cmp
int3
sbb
jne
sarl
stos
jbe
lret
lods
add
or
das
push
adcb
insl
test
out
xor
mov
js
pop
into
dec
out
stc
dec
jb
cmp
xchg
mov
xchg
mov
fwait
ds
scas
out
jns
ljmp
fistps
aas
jns
sbb
add
test
or
sti
cmp
test
test
push
test
xchg
inc
divl
negb
in
lds
push
jecxz
push
enter
dec
mov
test
dec
mov
rorl
adc
jnp
xchg
mov
imul
cmp
fcomp
sahf
mov
xchg
fisubs
pop
jge
bound
clc
cli
das
fs
imul
add
popa
or
rorl
dec
adc
inc
jbe
and
call
sub
dec
xor
mov
push
add
fisubrl
fdivr
push
mov
mov
ljmp
in
jnp
subl
sbb
inc
dec
sahf
pop
ja
fwait
jmp
push
out
inc
std
fucompp
out
sti
aaa
dec
enter
addl
inc
jo
inc
cmp
xchg
repnz
popf
or
orb
mov
out
loop
pusha
mov
sub
repz
add
push
push
jbe
leave
sbb
inc
js
xchg
inc
mov
insb
or
lret
and
loop
mov
dec
adc
out
adc
jle
xor
mov
or
sarl
movsl
cmp
and
cltd
orl
into
test
out
cmpsb
sbb
mov
adc
mov
mov
xchg
and
fiaddl
and
xlat
push
push
int
mov
aad
xchg
jp
clc
or
mov
popf
and
ds
jmp
mov
cwtl
sub
pop
xchg
imul
stos
push
aam
pop
dec
sbb
cli
add
xchg
psubsw
pop
adc
push
mov
and
orb
xor
jp
insb
mov
or
repnz
or
imul
mov
sbb
mov
adc
pop
loop
mov
xor
not
int3
add
clc
inc
and
mov
inc
jae
or
pop
jge
mov
iret
xchg
int
adc
and
leave
dec
cltd
stos
mov
mov
pusha
pop
jge
add
mov
mov
fstpl
fisttpl
cmp
fucomp
leave
aam
std
add
loopew
daa
or
jnp
inc
ficomps
mov
dec
insl
add
loopne
sbb
loop
addr16
mov
inc
or
pushf
pop
or
insl
dec
ja
les
and
push
cmp
xchg
in
leave
adc
dec
xor
sarb
and
leave
add
mov
inc
xor
ja
push
cmpsb
imul
push
daa
mov
out
lcall
imul
mov
pop
in
jb
sbb
rcl
rolb
mov
leave
mov
jmp
movsb
icebp
push
add
sahf
mov
roll
bound
loop
dec
lea
xor
lahf
add
sub
lock
cmp
pop
fstp
and
movsl
mov
dec
fsubrl
mov
inc
lret
xchg
xchg
sahf
adc
and
mov
idivb
push
ja
roll
or
or
sbb
cmp
dec
sub
cltd
in
ds
sub
push
test
in
and
adcb
dec
orl
repnz
and
cmp
pop
in
jbe
fs
cmp
dec
es
pop
mov
lds
jno
pop
mov
pop
sub
add
mov
mov
push
iret
mov
bnd
loope
add
push
imul
fdivrs
ror
flds
adc
jno
jp
or
add
add
jbe,pn
or
into
adc
lret
mov
mov
lret
or
in
std
pushf
mov
outsl
js
hlt
std
jnp
es
aam
stc
lods
ja
stc
loope
cmp
iret
xchg
test
imulb
cli
jae
sub
pop
arpl
jb
addr16
add
cld
pop
add
mov
jno
xchg
mov
push
ret
mov
push
sub
mov
push
in
stos
lds
jbe
test
gs
mov
mov
push
rorl
adc
sbb
fsub
in
test
jnp
sbb
subl
bound
cwtl
xor
dec
pop
vmulpd
jg
adcl
or
lds
mov
fsubl
xchg
push
pusha
test
lock
testl
test
cmp
jmp
jnp
hlt
mov
push
xor
lods
faddp
ljmp
sbb
inc
pop
sub
xchg
lret
flds
mov
jg
dec
inc
cmc
sbb
push
and
fistpll
and
jo
popa
fwait
inc
and
ret
xor
lock
es
fld
loope
outsb
out
aas
sbb
push
inc
loopne
pop
mov
sub
push
dec
xchg
jp
adc
mov
and
stc
mov
sbb
jp
jo
lds
mov
je
xchg
xor
mov
xchg
imul
or
lret
pop
xchg
popa
pop
data16
stos
push
inc
mov
dec
ret
jno
dec
mov
push
es
insb
aas
sbb
outsb
mov
or
cmp
sbb
add
lret
fldcw
pop
ds
sbb
or
sbb
cmc
jmp
push
push
mov
aam
mov
jns
add
es
sub
adc
lock
std
es
and
repnz
add
add
out
outsb
daa
pop
test
adc
aad
test
jne
jnp
adc
rorl
ljmp
mov
mov
jg
dec
shlb
or
sbb
mov
inc
or
shlb
repnz
mov
out
fwait
popf
cmp
push
lcall
xor
es
mov
xchg
pushf
ja
or
pop
fdivrl
xor
mov
or
push
sub
pop
imul
stos
push
xor
dec
fiadds
mov
insb
cmc
inc
mov
popf
cltd
push
in
jo
outsb
js
or
ljmp
aad
dec
pusha
and
cmpsl
sbb
or
add
pop
inc
call
mov
jmp
lods
add
leave
ret
inc
cld
aas
daa
adc
cmp
and
pop
pop
sub
das
sub
mov
shll
sub
std
mov
cmp
fmulp
adc
stos
mov
pop
stos
mov
les
pop
popa
sbb
lcall
movsl
rol
jp
fwait
and
pushf
in
outsb
push
and
sbb
cli
ds
mov
cwtl
lahf
adc
pop
pop
xor
pop
out
and
scas
pushf
cmc
dec
mov
notl
testl
jmp
in
or
in
add
push
ret
mov
or
add
fs
mov
sbb
and
push
jge
clc
test
popf
mul
popf
add
inc
sub
js
jb
adc
mov
jb
sub
icebp
rorb
pusha
push
iret
and
std
fiadds
xchg
fstps
cwtl
or
cmp
icebp
cmp
jne
cli
mov
mov
jle
fcomip
dec
mov
ja
add
sub
mov
imul
mov
loopne
xlat
cmp
dec
cwtl
cmp
push
pop
jb
mov
or
push
cmp
or
sahf
iret
mov
ljmp
jle
jge
lea
sub
test
push
in
mov
cli
push
push
lds
ret
nop
or
push
pop
pop
fstl
bound
movsl
push
mov
hlt
ds
imul
popa
sub
push
xor
enter
mov
mov
jle
pop
xchg
icebp
cmp
out
fstl
adc
sbb
pop
inc
or
enter
test
jnp
push
cmp
cli
adc
mov
ret
out
pop
xchg
lcall
or
iret
out
call
sub
xor
loope
imul
cltd
dec
and
or
jbe
push
add
adc
popf
mov
popa
xor
outsl
and
inc
sti
mov
ret
popf
push
orb
mov
sbb
call
pop
fcom
mov
and
sahf
push
pop
cmp
adcl
xlat
jmp
sahf
jbe
subb
fs
fstl
stos
mov
test
xchg
sbb
inc
repz
and
inc
mov
mov
dec
pop
sar
xchg
cld
int3
cmpsb
jle
divb
xor
and
mov
jl
pop
jae
rep
std
push
push
mov
mov
mov
cli
xchg
nop
addb
mov
pop
sbb
xlat
sahf
lcall
adc
cs
xchg
cmpb
pusha
cld
cmpsb
cmc
jg
shll
xchg
pop
fwait
stos
jno
adc
pop
adc
and
je
mov
out
shlb
stos
pop
stc
popf
int
mov
add
mov
mov
xor
fdiv
aaa
aaa
pop
fistl
leave
out
or
or
and
bound
sbb
in
add
lret
daa
and
mov
xchg
or
push
std
jecxz
mov
mov
xor
dec
push
jg
cmc
out
imulb
mov
lock
sub
jmp
jp
jb
cld
mov
sbb
lret
aaa
or
inc
ret
cmp
push
cmp
push
cli
xchg
les
jecxz
insb
jbe
ficomps
shrb
outsb
mov
pop
daa
repz
hlt
dec
jno
add
adc
pop
rorl
push
ret
rcrb
push
or
inc
ret
idivl
ret
or
push
aam
mov
sub
mov
jecxz
push
jbe
aad
push
sub
mov
out
pop
in
daa
sub
sbb
pushf
inc
adc
loop
sbb
xchg
mov
subl
jo
fdivrs
pushf
out
xorl
pop
push
aas
mov
pop
sub
add
or
pop
push
jg
pop
inc
into
imul
xchg
or
outsb
data16
std
stos
xorl
js
pop
stc
mov
std
cmpsb
fmull
addb
pop
sub
dec
lock
mov
mov
mov
out
add
xor
pop
fsubrl
pushf
push
lods
mov
lcall
into
mov
lret
rcll
cmp
cmpsb
dec
sub
ja
in
pop
mov
dec
xchg
das
scas
push
popa
psubsw
stos
mov
les
mov
dec
lods
push
insl
mov
enter
mov
mov
test
adc
cmpsb
fs
icebp
mov
jo
sbb
dec
mov
popf
xchg
or
mov
adc
sahf
xor
and
popa
cmp
xor
push
sbb
data16
ja
dec
outsl
jge
mov
and
arpl
xchg
lods
xchg
int
adcb
cmc
add
gs
jb
cld
push
or
movsl
jb
bound
mov
dec
ja
mov
mov
dec
sbb
daa
add
or
fisubrs
jmp
cmp
movsl
out
add
xchg
outsl
into
inc
pop
pop
xchg
xor
mov
mov
lret
pop
jmp
jle
sbb
jle
lcall
out
xlat
imul
mov
fisubrl
jecxz
pop
xchg
js
and
mov
inc
js
loopne
push
cld
adc
addr16
add
arpl
mov
sub
dec
add
jl
cmp
adc
jg
mov
mov
sub
mov
icebp
dec
or
inc
xchg
jmp
enter
dec
lock
movsl
pop
inc
pop
ss
cmp
inc
or
fsubl
cmp
push
mov
and
gs
lret
mov
mov
orl
jmp
pop
leave
test
ffree
aas
roll
jo
lahf
and
mov
push
xchg
mov
adc
cld
xchg
lea
lcall
pop
pop
xchg
lds
nop
test
adc
bnd
or
cmc
test
and
mov
mov
pop
adc
sub
lcall
push
imul
test
pop
sbb
add
cltd
cmpsb
jae
mov
fimull
mov
lods
sar
xchg
clc
ret
jno
imul
cwtl
rorb
clc
push
xchg
add
repz
xchg
lea
fldt
mov
adc
lahf
das
dec
xchg
cmp
mov
xor
jmp
shlb
std
cmp
jae
out
cld
dec
pop
lea
mov
sub
mov
hlt
cmp
pop
mov
xchg
jbe
imul
inc
pop
sub
push
push
out
xchg
sti
mov
push
inc
xchg
iret
mov
push
fidivs
stc
dec
lcall
scas
mov
mov
sbb
pop
and
dec
dec
daa
push
lret
ret
popa
push
nop
pop
push
push
pop
gs
sahf
iret
lods
xor
cmp
jle
loope
xorb
imul
ja
sti
loope
popa
mov
aad
pop
es
pop
pop
or
cli
sub
repz
sub
dec
imul
or
cmp
adc
lcall
pop
sub
jnp
repz
rclb
imul
fabs
inc
pop
inc
mov
push
pop
sbb
jno
xor
cld
call
cs
and
sbb
or
imul
icebp
mov
fildll
jns
pop
sbb
adc
sub
push
into
fsubl
je
jmp
aas
cmp
mov
mov
lods
add
ret
notb
incl
mov
pop
out
sahf
and
mov
pop
pop
cwtl
and
jnp
stos
mov
mov
mov
shrb
sbb
scas
lcall
test
xchg
fwait
popa
mov
daa
iret
popf
cmp
les
or
mov
fld
movsb
int
pop
and
push
mov
addb
shll
xor
mov
adc
mov
cwtl
je
mov
inc
jb
bound
stc
imul
repz
fs
pusha
js
sbb
jnp
sbb
mov
arpl
jns
testl
push
adc
cmp
xchg
add
insb
idiv
inc
sarb
inc
repnz
adc
or
jle
mov
adc
inc
adc
in
cs
and
adc
mov
push
cmp
cmpsb
mov
mov
mov
arpl
cmc
out
lret
sub
repnz
jle
mov
mov
mov
shlb
push
stc
sbb
inc
sub
mov
inc
fsubrs
nop
jno
xor
jmp
int3
ror
aaa
or
out
fisttps
fwait
push
mov
ss
je
clc
sbb
jbe
pop
fcmovu
lea
mov
inc
adc
les
inc
push
test
jle
pop
lods
ret
in
pop
arpl
fmuls
xor
arpl
mov
adc
add
jb
pop
mov
fistps
cmc
jne
sbb
mov
push
call
cmp
ja
or
fwait
outsb
fcmove
std
popf
jge
pop
loope
shlb
mov
stc
insb
lds
dec
insb
aad
sbb
cmp
and
sbb
shlb
nop
jae
mov
xlat
mov
fs
subl
dec
jp
test
mov
push
cwtl
insb
lock
push
cwtl
or
xor
les
mov
adc
inc
test
xor
cmp
andb
xor
sbb
and
sub
inc
xor
fisubl
fmul
pop
adc
adc
push
mov
lds
daa
addr16
inc
inc
sub
int3
sar
cmc
push
lods
clc
mov
outsl
mov
jg
sub
in
test
loope
inc
mov
pop
push
lock
int3
mov
sbb
jnp
jle
and
push
sub
dec
pop
es
adc
fistps
lret
or
cmp
out
lret
scas
sbb
scas
leave
hlt
add
out
stos
cmpsl
dec
ljmp
ljmp
push
dec
pop
cmp
adc
mov
push
mov
out
cmp
mov
cmp
cmpl
addb
lock
jb
mov
push
xor
fwait
jl
frstor
nop
test
mov
dec
roll
mov
add
jne
pop
data16
nop
in
cmp
pop
or
mov
imul
push
cld
adc
rcrb
pop
adc
dec
or
jle
adc
push
int3
mov
mov
test
adc
test
pcmpeqd
sub
testb
push
add
xor
lods
enter
dec
push
cmp
pop
adc
frstor
int3
cmp
sbb
nop
lcall
adc
dec
repz
filds
aaa
mov
cmp
pop
jp
xchg
cmpsl
sarb
aam
fisubs
daa
xor
inc
popl
jo
test
in
dec
cltd
sarb
push
jmp
mov
shll
inc
add
popf
xchg
jnp
jb
roll
mov
fs
or
repnz
lock
cmp
cmc
loop
cmpsl
cmp
and
into
cmp
add
dec
lods
icebp
cli
pop
stos
and
repz
nop
aad
jg
fsubrl
push
xchg
push
mov
xor
xchg
xchg
notl
lahf
addr16
int
pushf
sbb
mov
cmpsl
push
add
xor
sbb
fwait
stos
jno
in
adc
or
mov
mov
aam
sbb
push
add
in
mov
jb
sub
cmp
inc
xchg
movsb
jnp
les
test
loop
sub
or
inc
dec
and
cmp
jmp
shrl
mov
or
nop
mov
lea
dec
repnz
jae
scas
mov
jno
jl
loop
test
popl
stos
pop
out
and
jecxz
jle
push
jp
mov
shl
out
add
outsb
out
cwtl
mov
xor
xchg
pusha
add
mov
mov
cmp
dec
mov
ja
cmpsl
jmp
push
iret
shlb
pop
mov
xchg
in
loope
jb
movsb
in
icebp
mov
rolb
ljmp
in
lock
ljmp
xlat
xor
pop
sbb
push
pop
adc
sub
jne
sbb
cmp
mov
inc
dec
idivl
loopne
dec
jle
cli
sbb
or
fildll
hlt
cs
add
mov
cmpsl
mov
add
out
icebp
and
outsl
fnsave
sub
push
lcall
mov
cmc
cmp
rorb
jno
call
out
aad
or
adc
in
pop
add
inc
in
inc
xor
cmp
mov
das
scas
add
sarb
and
lea
or
les
inc
fidivs
mov
stc
and
xor
pop
mov
jge
mov
fs
inc
cmp
rorb
jne
inc
cli
std
pushf
push
adc
aad
mov
aas
add
add
gs
jle
jae
aam
daa
and
repnz
int3
lcall
sbb
repz
je
mov
imul
pusha
cltd
dec
inc
and
mov
sub
std
pop
arpl
insl
sub
stos
cmpsl
add
dec
pushf
cmp
dec
mov
cmp
test
pop
push
xchg
push
notb
cmp
test
and
ljmp
js
inc
mov
scas
cmc
mov
or
jne
leave
mov
sbb
adc
imul
dec
and
shl
aas
pop
cltd
xchg
enter
lods
pusha
and
loopne
xor
mov
lea
jp
cs
pop
cs
pop
ja
loop
push
mov
fisttps
dec
or
lods
fldt
adc
cmpsl
add
push
cmc
xchg
jecxz
rcr
jo
pop
test
sub
and
mov
das
jge
rcrl
sbb
je
cld
pop
in
rcl
push
hlt
mov
mov
out
or
xor
cmpsb
adcl
pop
call
leave
sbb
inc
adc
mov
push
ficoms
scas
sbb
sbb
jge
adc
mov
lds
add
inc
ficoml
repnz
test
cmp
pop
xlat
xchg
icebp
lahf
add
mov
push
inc
aaa
aad
and
rcr
or
push
test
mov
inc
movsb
sar
popa
leave
xchg
xchg
and
pop
sub
int3
jmp
mov
in
fistpll
and
movsl
mov
mov
lret
popf
lods
popf
push
sbb
mov
jle
jmp
xlat
adc
xchg
pop
push
movsb
popf
lea
lret
outsb
jl
stos
scas
adc
push
pop
dec
xchg
lret
clc
cmp
cmc
pusha
push
into
mov
jle
inc
lods
incl
in
sub
inc
jno
mov
jo
xchg
iret
or
cmpsb
mov
loope
inc
fisubs
inc
js
xchg
pop
jl
les
mov
out
fnstenv
push
incb
or
je
stos
insb
cmp
mov
fs
addb
pop
xor
mov
adc
jb
out
lock
xchg
ficompl
scas
cmpsb
jp
mov
idivb
jg
scas
shll
sbbl
mov
in
in
add
ret
clc
leave
add
repz
call
push
lods
push
cld
mov
jp
outsl
xor
in
rclb
or
movsl
outsl
sub
lods
or
xor
push
mov
mov
adc
adc
jae
dec
mov
arpl
shlb
mov
and
in
mov
call
mov
and
add
jne
mov
jmp
xlat
pop
pushf
mov
or
in
fmuls
sbb
pop
mov
jnp
fldl
xor
cli
insb
lods
mov
add
cwtl
push
adc
pop
jecxz
mov
cmpsl
push
jnp
sub
add
pop
out
sub
push
popa
dec
sub
and
jge
call
sub
pop
outsb
mov
inc
dec
or
test
jmp
pop
mov
in
sub
mov
filds
nop
inc
push
mov
mov
dec
mov
mov
movsb
add
jae
imul
inc
adcl
cmp
cwtl
sbb
scas
sarl
pop
mov
inc
in
or
add
int3
aaa
jmp
mov
in
push
dec
inc
pop
xchg
or
xor
cmp
jno
and
in
mov
sbb
das
add
js
mov
dec
mov
sbb
fstpt
test
push
pop
or
add
addl
repnz
xlat
nop
insl
ja
je
or
arpl
add
mov
cmpsl
pushf
jmp
nop
jle
mov
sti
lds
or
xchg
and
mov
adc
xchg
mov
mov
xchg
adc
rorl
stos
pop
ds
outsl
jecxz
fisubrl
iret
lret
xchg
mov
cmp
stos
push
mov
mov
shll
shll
mov
dec
scas
jbe
adc
lods
jecxz
das
jae
xchg
stos
xchg
aas
iret
xchg
out
mov
or
jg
xchg
jns
mov
pop
sub
cmp
loope
pop
test
jp
imul
loope
test
push
pop
cmpsb
loop
jle
rorl
js
or
mov
add
jnp
loopne
enter
lods
loope
shrl
inc
push
loope
xor
stos
out
dec
leave
xchg
loop
sub
jg
repnz
cmc
cmpsb
sbb
cli
je
or
jle
inc
xchg
mov
sub
xor
pop
or
das
test
stc
xlat
inc
popf
pop
sbb
push
test
sbb
mov
add
js
repnz
add
int
push
fisubrs
scas
and
pop
orb
enter
cmpsl
or
cld
insl
es
xor
sbb
cmp
das
jno
mov
mov
jo
cmp
inc
inc
mov
movsb
dec
xor
mov
adc
mov
fmulp
cwtl
lahf
sub
fisttpl
sbb
cwtl
into
mov
mov
mov
shll
jg
xchg
push
mov
imul
xchg
fcomip
sbb
leave
fidivs
xor
or
aas
pop
js
daa
mov
outsl
jnp
sub
lea
mov
push
in
fs
iret
mov
add
lea
mov
fldpi
or
jo
push
dec
scas
lds
xchg
mov
aam
adc
mov
faddl
mov
data16
pop
inc
xchg
dec
aaa
fsts
or
mov
or
cltd
data16
ds
in
jl
cmp
outsl
mov
xor
pop
lahf
inc
dec
fwait
pop
cmpsl
fwait
lds
xchg
ret
mov
mov
scas
cmp
hlt
sbb
mov
mov
jmp
repz
test
mov
addr16
or
push
das
xchg
cmp
sbb
xor
icebp
popa
sub
pop
into
cs
out
mov
mov
mov
mov
cltd
and
jg
push
repz
mov
add
mov
popf
and
shrl
outsb
add
add
push
pop
fsts
outsb
out
roll
add
mov
xor
xchg
jl
js
ljmp
in
sub
inc
cmpsl
das
jg
rclb
mov
adc
inc
cmc
sbb
xchg
fnstenv
sub
xchg
push
mov
xor
popa
xor
or
jg
pop
fildll
jbe
pop
lret
dec
pop
jns
mov
sub
fstpl
lods
adcb
xchg
xchg
inc
movsb
mov
mov
sub
lods
cld
sbb
xchg
mov
inc
cmp
mov
sahf
jns
xor
sbb
jae
fwait
aam
lahf
mov
addr16
outsb
push
or
dec
test
aad
jns
push
xor
push
sbb
cmp
jl
dec
gs
sbb
sub
bound
ret
cmp
call
inc
adc
in
out
stos
fcomip
sarl
scas
sub
xlat
dec
ja
iret
add
mov
xchg
pop
jae
idivl
dec
dec
inc
test
xor
adc
leave
pop
cmpsl
int
lret
sbb
into
jge
adc
int3
or
lcall
sbb
out
pop
outsl
sub
aas
bound
movsb
out
dec
push
cs
aas
hlt
dec
sub
sub
mov
cmp
lahf
push
jle
and
adc
shr
jo
cmp
sub
call
inc
mov
push
ds
and
pop
dec
test
outsb
decb
lods
into
pop
jp
mov
inc
cmc
jo
cmpsl
imul
stos
mull
sarb
add
rol
sbb
cmp
xor
mov
out
inc
sub
cmpl
mov
jns
les
push
sbb
out
movsl
adc
mov
cmp
xchg
or
filds
nop
fs
xchg
mov
adc
scas
pop
push
xchg
mov
arpl
jmp
pop
lock
jo
sti
and
lock
sbb
ss
or
ret
jnp
clc
stos
add
sub
out
xor
minps
jl
sbb
cld
rorb
insb
dec
loopne
mov
aad
sbbl
sarl
sahf
ret
test
mov
jp
or
dec
lds
mov
push
inc
mov
xchg
repz
aas
cmc
xchg
cmp
mov
mov
stos
cltd
inc
into
ljmp
repnz
dec
arpl
frstor
iret
cmp
sub
cmpsb
inc
sbb
inc
jo
cld
dec
sbb
lock
xor
lret
mov
and
push
xchg
mov
sahf
mov
sbb
in
add
pop
sub
stos
push
mov
dec
cmc
out
and
mov
pusha
dec
movsl
sbb
leave
testb
mov
mov
mov
rol
je
adc
xchg
rorb
mov
test
inc
les
cmp
xchg
fmul
js
xor
cmp
int
mov
leave
call
push
repnz
lods
aad
push
push
test
div
enter
adc
loop
xchg
jl
popf
or
pop
mov
loopne
movsb
out
sub
into
cmp
xchg
pop
pop
mov
aam
push
mov
or
inc
mov
cmp
nop
movb
shlb
jns
repz
add
loopne
call
test
sbb
int
shl
pop
stos
sarl
gs
std
mov
ret
das
fadd
insb
out
inc
movsl
daa
jo
push
ds
enter
adcb
push
push
jno
sti
cmp
pop
dec
movsb
dec
add
roll
push
push
mov
sbb
adc
jnp
cmc
pushf
inc
lods
ss
mov
push
popf
ret
iret
insl
icebp
test
mov
iret
ja
mov
aaa
or
inc
mov
sahf
pushf
cmp
push
or
insl
sub
sahf
push
aam
dec
mov
push
jnp
jge
and
int3
dec
xchg
sbb
adc
xor
add
enter
idivl
iret
dec
push
adc
lahf
sbb
dec
insl
rcrb
mov
sub
push
and
aam
pop
outsl
pop
test
nop
add
adc
push
add
lock
jmp
ljmp
popl
loopne
out
cld
add
pop
mov
andb
and
popf
loopne
adc
rorb
decl
jecxz
out
xor
cltd
cmp
sbb
push
or
hlt
push
mov
test
les
and
pop
push
pusha
fisubs
mov
mov
and
dec
mov
xchg
cmp
lock
jg
aaa
fldcw
pop
jecxz
mov
inc
addr16
js
xchg
test
and
sub
sub
fnstcw
dec
pop
fnsave
daa
pop
cmpsl
xchg
lret
dec
push
cmpsl
call
sub
mov
js
xchg
cmp
inc
enter
cmp
push
inc
icebp
inc
outsl
stos
stc
push
pop
sbb
jmp
rcl
shrl
or
pop
inc
cmp
inc
shlb
test
pop
es
fwait
jle
push
jle
add
rol
push
adc
xlat
pop
aaa
das
dec
adc
xchg
popa
mov
loopne
mov
ret
imul
adc
lea
sarl
je
es
or
or
ret
ficomps
daa
addl
stos
nop
inc
inc
push
insb
sbb
jmp
imul
or
or
fisubrl
xor
pop
mov
in
lock
movsl
xchg
inc
inc
loope
mov
aam
sub
pop
pop
xlat
repnz
jg
gs
lock
sarl
mov
add
test
std
fimull
adc
mov
cmp
push
jge
pop
arpl
xchg
cmp
into
les
data16
cmc
push
lahf
cmpsb
enter
int
out
sub
mov
jbe
imul
gs
mov
add
lret
sub
mov
mov
outsb
stos
add
xchg
ret
mov
sub
pop
sbb
mov
lret
rcll
aaa
xchg
lods
pop
mov
push
push
or
cmp
xchg
sahf
mov
inc
xlat
addr16
aas
jg
jg
push
out
pop
push
dec
sub
icebp
insb
mov
add
pop
xchg
pop
mov
inc
sub
mov
nop
jp
in
sub
repz
mov
xchg
cmpsb
jp
jp
pop
cli
mov
and
rolb
pop
cmc
stos
pop
leave
and
daa
loope
loop
in
fisubrl
jo
push
pop
sbb
pushf
out
test
sub
leave
jns
xchg
flds
lret
stos
jns
jg
mov
add
push
mov
dec
and
scas
bt
mov
cs
sti
and
xchg
rcrb
das
push
xchg
dec
es
loope
int3
outsb
pop
cli
popf
xchg
xor
cltd
addr16
pop
inc
mov
cwtl
in
fwait
cmp
or
lods
push
out
out
js,pn
xchg
mov
xchg
je
mov
xchg
rorb
test
in
imul
inc
out
fwait
aaa
inc
out
rcr
push
mov
and
inc
mov
adc
mov
out
sub
out
leave
and
ja
sbb
inc
cs
pop
in
lcall
test
lods
lea
shr
pop
in
mov
jbe
mov
ss
fisubrs
jge
jnp
arpl
mov
sti
push
dec
js
ret
in
xor
add
aam
jmp
testb
pop
xchg
and
test
sub
push
pop
ret
sbb
lahf
lods
xchg
mov
mov
jmp
xchg
stos
scas
push
sbb
pop
stos
aaa
movsl
xchg
cmp
jo
push
fstl
into
cmp
cmp
daa
subl
mov
lret
mov
inc
adc
lahf
or
pop
inc
shl
dec
je
xor
cmpsl
jb
data16
sahf
iret
mov
mov
push
fidivrs
je
cmp
dec
pop
scas
repz
pop
mov
mov
stos
sbb
jle
mov
xchg
cld
adc
mov
int3
lahf
push
test
out
lock
out
mov
movsb
pop
ds
mov
out
mov
out
mov
xchg
cmpsl
dec
push
clc
mov
dec
cld
xor
jbe
outsb
call
inc
sub
push
sub
add
mov
xlat
pop
loope
mov
xor
xchg
xchg
xchg
cmc
cmp
jae
js
mov
icebp
xchg
add
fisubl
pop
ror
shlb
jl
out
add
sahf
inc
cltd
adc
xor
pushf
aas
xor
aas
ja
imul
aas
in
dec
clc
mov
pop
ljmp
dec
inc
cmp
in
push
fidivrs
mov
pop
inc
out
mov
enter
insb
adc
jb
add
hlt
shll
test
jp
cmp
enter
xor
jbe
fbstp
pop
add
inc
cmpsl
jnp
sub
push
push
xchg
dec
adc
mull
adc
jns
push
icebp
out
sub
and
dec
adc
js
pop
div
pop
mov
cmp
out
popa
cmp
mov
sub
enter
sub
outsb
and
adc
ljmp
minps
mov
inc
out
cmp
mov
les
popf
outsb
pop
jae
add
and
in
roll
xor
inc
fmuls
jb
and
fsubrs
push
dec
test
negl
dec
push
push
sbb
mulb
das
cmp
mov
inc
sbb
adc
loop
gs
inc
loop
mov
insl
mov
sub
fiaddl
sub
and
add
xchg
sub
mov
out
push
sub
cmp
shll
pop
test
rcll
popf
roll
icebp
cmpsb
or
adc
shrb
leave
sbb
rcll
ds
or
xchg
push
xchg
sbb
xor
jae
add
int3
aad
dec
scas
lock
lret
mov
iret
push
test
popf
push
adc
popf
into
test
ret
pop
dec
push
rorl
js
popa
sbb
add
pop
mov
stos
sub
xchg
xchg
in
or
stos
pop
movsl
ja
fisttpll
fwait
mov
mov
sub
int3
in
mov
sbb
sbb
popf
int
jbe
pop
cmpsb
mov
or
mov
subb
adc
xchg
popf
test
cmpsb
jmp
add
mov
sub
adc
jb
add
fdivs
lods
add
lock
in
fidivrs
std
xor
dec
jl
push
daa
mov
mov
or
hlt
enterw
test
push
sbb
or
movsbl
hlt
jne
and
xor
mov
push
notb
ljmp
cltd
and
shll
mov
mov
push
xchg
data16
inc
cli
sbb
rcl
sbb
pop
sbb
mov
ret
push
jo
sub
ljmp
popf
imul
xchg
mov
jns
jl
mov
pop
loop
mov
adc
sub
or
sub
jns
push
movsb
dec
aaa
sub
lea
ja
adc
hlt
loop
sub
lea
fistpl
or
jmp
mov
push
push
xor
les
shrl
dec
imul
sbb
loopne
cmpsb
xor
mov
jne
test
loope
loop
cmp
sarl
shll
fdivs
addr16
test
mov
sbb
ss
sub
das
outsb
repnz
getsec
jnp
sbb
xlat
add
and
adc
adc
adc
mov
xor
sub
and
mov
imul
cmp
pop
adc
xor
inc
stos
add
xor
xor
out
movsl
cmpsl
sti
outsl
mov
sbb
in
cmp
cmpsl
jl
xor
mov
or
cvttps2pi
mov
push
cwtl
ficomps
push
cmp
xchg
jbe
inc
mov
mov
shll
ret
mov
sub
repnz
push
stc
mov
xor
push
sarb
sbb
xchg
aaa
rorl
dec
sbb
jl
push
dec
mov
or
cld
adcb
cmpsb
movsb
fcmovnu
out
xlat
adc
loop
sbb
dec
xchg
mov
xorb
lahf
bound
push
lods
mov
lock
mov
pop
inc
jns
sbb
xchg
xor
mov
inc
inc
and
inc
jo
lds
out
jns
jns
mov
sub
cmp
js
cmp
xchg
pop
or
addr16
xchg
dec
imul
sub
sbb
jns
enter
hlt
ds
out
je
pop
js
sub
insl
iret
cld
mov
fldenv
iret
je
rcr
jae
pop
add
idivb
data16
cmp
int3
cli
mov
mov
pop
lods
sbb
sub
push
lock
mov
jmp
in
js
in
push
pop
inc
daa
fadd
imul
adc
mov
leave
push
fdivp
roll
pushl
fwait
lock
push
js
mov
out
pop
pop
pop
jb
adc
test
sbb
hlt
test
push
gs
mov
dec
mov
dec
jne
pop
mov
push
imul
inc
fs
jle
int3
push
imul
sbb
out
pop
sbb
jo
nop
jae
cmp
or
int3
sub
cmpl
rcrl
or
imul
fsin
dec
inc
mov
and
ss
sbb
mov
push
mov
popa
xchg
dec
mov
cmovne
sbb
insl
adc
faddl
insl
enter
sub
icebp
inc
xlat
mov
sbb
mov
cmp
outsb
aad
dec
gs
repnz
sub
leave
mov
fs
mov
bnd
in
in
adc
cmp
repnz
rcll
stc
sub
push
je
jg
mov
in
popf
pop
and
add
dec
leave
fsubl
inc
daa
mov
pushl
stos
fdivr
sub
scas
xchg
outsl
call
mov
cmp
push
movsb
pop
jb
or
in
enter
movl
xor
loop
push
mov
mov
insb
sub
xor
je
jge
xchg
cwtl
mov
or
push
adc
fcomps
add
gs
in
push
mov
cli
into
push
push
adc
mov
cmp
jno
daa
xor
sahf
jle
jno
cmc
pusha
ss
jbe
fs
jl
and
mov
nop
adc
jecxz
mov
or
push
jno
outsb
xor
or
cmp
das
or
das
ret
xchg
inc
and
mov
cmpsl
testl
mov
mov
in
andl
jnp
in
jo
add
testl
lea
pushf
js
idiv
lea
loop
rcrl
or
stc
lods
std
loop
jns
dec
lds
push
adc
cmp
dec
adc
pop
shlb
loope
dec
add
sub
mov
add
in
push
mov
jns
mov
xchg
mov
push
ljmp
pop
popf
cmp
sahf
jecxz
inc
sar
push
movsb
cmpsl
insb
or
leave
push
sub
nop
test
sub
lds
out
xor
jb
mov
push
fpatan
mov
and
sahf
daa
cmc
int
or
xchg
call
imul
lds
jle
or
mov
test
pop
mov
jo
pusha
push
nop
sbb
movsl
pop
lds
push
add
dec
pop
subl
lahf
aad
shl
xabort
xchg
loopne
loop
inc
pop
ja
jbe
std
repnz
ss
mov
cwtl
ljmp
adc
jo
pop
aam
lock
ror
xor
aam
add
dec
data16
daa
cwtl
add
imulb
xchg
mov
jae
lock
or
inc
fiaddl
imul
jb
adc
cmp
ret
or
test
sub
mov
jl
lods
shll
cmp
mov
orl
clc
cmp
mov
mov
sub
and
int
pop
movsl
jb
stos
mov
dec
push
fistpll
imul
mov
repnz
lods
imul
negl
ljmp
lods
mov
dec
dec
sbb
inc
pop
cmp
jl
call
adc
mov
aam
cmp
outsb
push
ljmp
fdivrs
out
popa
mov
insb
addr16
lahf
add
mov
frstor
fimuls
pushl
add
sub
dec
jp
pop
enter
mov
decb
jl
xchg
xchg
cmp
fcmovb
fildl
outsb
out
popf
ret
push
push
lcall
jb
out
dec
rorb
daa
lret
shll
mov
shlb
mov
adc
xor
push
movsb
pop
push
pop
jl
pop
sbb
inc
test
pop
lock
les
ret
loopne
fsts
stos
les
sbb
int
fs
mov
and
hlt
pop
mov
movsb
stc
jmp
push
push
into
cli
ret
or
cmpsl
and
outsl
sub
mov
push
setb
xchg
mov
or
cli
dec
lcall
test
jl
cmp
mov
inc
jnp
jo
pop
dec
xchg
movsb
cmp
fidivrl
addr16
repnz
push
jmp
mov
shlb
sub
xor
mov
int3
scas
inc
das
stc
cwtl
and
cmp
push
jge
add
jge
adc
shlb
jmp
or
mov
lret
pop
dec
sahf
or
inc
lcall
push
pop
pushf
or
xor
lahf
cmp
lock
dec
mov
aaa
cmpsl
jo
cmp
mov
ds
lret
fdivrl
out
es
ljmp
cmp
xor
push
and
xchg
jns
pop
cmpsl
push
xchg
imul
fnstcw
ficomps
in
jecxz
cli
lret
mov
lds
jb
push
adc
dec
test
adc
push
xchg
mov
add
cltd
jb
or
int
lret
in
lret
push
es
test
div
mov
adc
cld
loop
mov
sbb
xor
and
insl
push
movsl
out
xchg
pop
mov
adc
xchg
xchg
pop
xor
pushl
ljmp
out
call
adc
and
mov
fstl
imul
ja
scas
xchg
inc
jae
mov
jg
jp
inc
int
out
or
sub
inc
cmp
add
xchg
sbb
pop
imul
stos
cmp
jl
and
xor
jl
lret
lret
adc
pop
sub
test
sub
enter
dec
mov
dec
mov
mov
cwtl
jmp
fsubp
dec
pop
xor
push
xchg
adc
ror
jno
sbb
scas
fs
sarb
lret
ja
scas
shll
push
cmpl
xchg
pop
out
std
push
dec
pop
jecxz
sahf
bound
testl
jnp
fistl
adc
into
aas
xchg
ret
mov
daa
adcl
fdiv
jnp
ds
cltd
mov
push
int3
orb
pop
pop
jno
cmp
adc
int3
icebp
scas
xor
push
js
cmp
lret
cwtl
out
xor
mov
fisttps
iret
xor
pop
rcr
popa
inc
or
shlb
dec
out
fwait
outsb
lret
mov
or
xchg
push
lcall
rcll
fistl
pusha
xchg
or
lea
scas
test
ja
jae
jbe
orb
test
loop
aam
dec
sub
push
xchg
lahf
xor
testb
push
into
out
shrb
jle
and
or
hlt
testb
in
in
fs
je
mov
iret
ret
xchg
cmp
mov
push
cmpsb
int
xor
jge
gs
pop
es
jne
xchg
jg
jecxz
out
cltd
lahf
pop
jmp
inc
std
sbbl
and
cmp
mov
fnstcw
mov
sub
loope
push
pavgb
xor
adc
outsb
loope
stos
pop
cmovae
inc
inc
popa
cmc
fwait
jle
ds
mov
addr16
nop
sbb
dec
je
or
lods
or
scas
xchg
add
das
sti
jns
lods
movsb
ja
call
mov
jnp
mov
adc
dec
scas
aad
mov
push
icebp
or
xorb
adc
and
cmp
inc
dec
jp
inc
mov
push
popf
or
mov
and
lds
xor
mov
add
cwtl
loop
or
js
outsl
inc
fwait
sbb
je
shlb
insl
nop
outsl
movsl
test
mov
push
rorw
xor
addr16
xchg
push
and
adc
scas
dec
mov
stos
loope
sbb
movsb
sub
xchg
pop
mov
inc
dec
imul
add
mov
push
mov
adc
sar
shlb
outsb
loop
loop
mov
push
or
rcrb
fdivs
sahf
jle
hlt
movsl
test
out
xchg
movsl
jmp
pop
cltd
mov
xor
cmpsl
imull
lods
int
xor
ret
iret
scas
mov
popf
aas
or
lret
mov
in
int3
xchg
jecxz
or
fs
test
xchg
mov
jb
sub
test
ss
jae
popa
adc
pop
and
pop
mov
jb,pt
outsl
fists
test
in
cmp
pop
inc
test
and
add
fisubrl
mov
rolb
push
adc
pusha
xor
mov
mov
mov
inc
xchg
inc
pop
test
arpl
jge
mov
push
flds
or
pop
int3
jns
push
dec
push
fidivs
lea
add
mov
or
fsubrp
shlb
push
filds
lock
or
push
call
std
add
fsub
mov
hlt
cmpsl
mov
lock
repnz
test
adc
add
testb
mov
aam
mov
std
mov
in
xchg
out
loopne
es
fdivl
bound
mov
pusha
cld
push
adcl
sbbb
cmp
and
xchg
pop
jno
sbb
repz
add
pop
inc
mov
jg
mov
shr
dec
fnstenv
lcall
mov
addr16
add
xor
mov
dec
pop
mov
lds
sub
lret
inc
pop
outsb
gs
or
add
addr16
aaa
mov
hlt
cmp
jae
sbb
mov
dec
sbb
pop
sub
fildl
or
icebp
xor
lea
sub
test
xchg
push
mov
sar
dec
inc
mov
xorl
popf
aam
mov
out
sbb
or
mov
jl
xchg
lcall
xor
xchg
sub
lods
call
js
pop
jecxz
popf
xlat
mov
pop
lcall
clc
xor
insb
and
inc
and
xchg
mov
jbe
data16
dec
xor
dec
pop
inc
mov
mov
out
dec
mov
or
jecxz
sub
add
sti
xor
lcall
xchg
inc
pushf
or
mov
rcrl
mov
mov
xchg
xchg
xchg
inc
fdivrs
cmp
jle
and
sti
sbb
dec
xor
jmp
fstl
nop
mov
idiv
mov
test
mov
jae
jne
add
psrlq
and
inc
jnp
fdivs
cmp
cmp
pop
add
mov
cld
inc
and
orl
sar
jg
clc
mov
jl
call
jmp
jmp
ljmp
aaa
pop
inc
and
mov
ds
imul
popf
shrb
inc
aam
lock
or
jl
xchg
xchg
das
inc
and
cs
clc
ret
enter
sbb
dec
in
xchg
das
aas
cmpsb
sbb
scas
frstor
shl
push
daa
fstps
fsub
lret
pop
mul
outsb
out
insb
ss
daa
and
and
or
adc
mov
add
mov
adc
sti
ret
xlat
es
add
outsl
repnz
mov
sarl
imul
mov
jmp
push
mov
repz
push
mov
dec
cltd
fwait
shrb
addr16
lock
das
pop
xlat
ret
mov
mov
inc
outsb
test
movsl
into
jp
enter
jae
mov
ljmp
mov
inc
ret
push
out
xorl
aaa
sub
add
repz
stos
ja
arpl
fisubrs
mov
mov
sbb
jno
jecxz
icebp
movsb
repz
and
inc
inc
hlt
insb
mov
push
mov
jne
mov
imul
mov
mov
jle
push
test
ljmp
inc
push
jl
inc
rcrb
nop
inc
push
xor
push
sbb
inc
push
out
mov
jg
pop
and
cmc
daa
sbb
aas
dec
clc
push
out
test
lahf
in
pop
into
pushl
xchg
mov
sub
fstpt
inc
pop
and
dec
inc
les
cmp
imul
xchg
sar
mov
das
push
xchg
or
aam
lds
fwait
pop
repnz
and
stc
popf
repnz
adc
lret
nop
out
cmpsl
adc
inc
sti
dec
call
xchg
lods
sbb
jmp
mov
pop
adc
jb
or
hlt
stc
jno
cwtl
push
adc
ljmp
inc
lahf
neg
ds
sbb
adc
jae
jb
arpl
and
cwtl
sub
and
inc
mov
lock
sbb
enter
ljmp
mov
inc
sub
lret
lds
push
xchg
sbb
mov
out
inc
out
iret
sub
in
jae
add
mov
xchg
fst
inc
sub
mov
shl
dec
push
sbb
xchg
push
mov
call
scas
stos
stos
or
jnp
scas
jmp
jge
mov
or
or
shl
rcrl
xor
cmp
sbb
test
std
dec
imul
rcr
ret
inc
mov
add
aam
or
in
lahf
push
ret
fcoms
push
std
adcb
jns
jmp
xchg
rcrl
lea
mulb
sbbb
xchg
out
and
aad
mov
clc
jnp
ljmp
pop
sub
mov
mov
xlat
sbb
imul
mov
insb
ret
push
les
shll
frstor
movsb
xchg
sub
das
sbb
add
mov
lcall
out
xchg
mov
cli
incl
xchg
pop
jns
and
jecxz
ljmp
xor
cmp
sub
xchg
aad
inc
mov
pusha
sub
idivb
jecxz
cli
adc
mov
jge
xchg
andb
test
pop
gs
cmp
mov
bound
insb
mov
jbe
mov
jmp
ja
mov
sbb
jae
hlt
fisttps
pop
sbb
pop
scas
mov
xor
push
adc
and
mov
imul
adc
xchg
push
or
fs
or
lret
leave
bound
movsl
dec
test
sahf
xor
cmp
lahf
std
sahf
testb
adc
out
push
inc
addr16
adc
fs
push
cmp
das
cmp
cmp
lods
addr16
mov
and
cmp
mov
aas
std
jecxz
sub
add
mov
xchg
pop
push
mov
dec
xchg
dec
sbbl
sbb
xchg
xchg
cld
fs
scas
xchg
enter
and
outsl
je
test
or
lods
aad
popa
icebp
int
push
lret
lock
cmpb
mov
dec
mov
incl
cmpl
add
cli
sarl
mov
test
cs
cmp
xor
lods
ja
cs
xor
jb
loope
jno
clc
mov
arpl
push
cmp
jmp
sbbb
pusha
or
daa
cmc
repnz
push
cmp
pushf
add
jl
lea
bound
mov
sub
test
add
pop
jno
xor
adc
loopne
loopne
pushf
push
jbe
sbb
add
mov
sub
shl
mov
ds
movsb
lcall
adc
popa
pop
in
mov
cmp
cli
mov
push
ret
dec
pop
insb
out
jne
jnp
push
fisttpll
arpl
lods
push
adc
jge
push
fbld
jge
mov
fdivl
lcall
dec
into
inc
sub
dec
adc
mov
js
aad
imul
add
mov
push
jl
mov
call
inc
outsb
daa
cld
sub
test
fiadds
dec
repz
aaa
jnp
shlb
sbb
xchg
add
rcll
or
add
mov
jg
fs
pop
enter
icebp
xor
add
jns
movsl
scas
mov
aaa
movsl
stc
push
mov
fdivl
daa
movsl
sub
out
or
fcoms
push
dec
cmpsl
lods
repnz
cmpb
lds
adc
subb
popa
mov
out
jecxz
add
sbb
and
xchg
pop
dec
push
aad
xlat
dec
jbe
cmp
arpl
pushf
ficoms
in
aad
in
and
add
cmp
fmuls
in
jne
xchg
mov
rcrl
arpl
adc
enter
push
and
pop
jl
jmp
jp
mov
xchg
std
scas
cli
push
sbb
scas
in
add
dec
mov
test
sbb
in
mov
push
cmp
xor
shl
jo
aaa
ret
sbb
cmp
adc
push
push
push
push
mov
xabort
cs
mov
jno
lahf
xlat
clc
cltd
lahf
sub
aaa
incb
je
dec
rcr
xor
inc
mov
xchg
pop
add
lahf
sub
lods
cmp
test
pusha
xchg
and
ficomps
in
sbb
leave
mov
xchg
ja
pop
push
adc
and
rcrb
dec
mov
test
lret
sbbl
and
cmp
in
jae
ret
int
xor
lahf
incl
ffree
hlt
insb
leave
sub
and
fcomps
pop
mov
imul
push
cmp
adc
fstps
icebp
push
or
mov
and
xor
pushf
jge
xor
lea
add
dec
cmpsl
sub
xor
ljmp
out
jbe
mov
cmp
popa
sub
lea
add
cld
ret
pop
dec
sbb
sbb
pusha
rcll
lahf
or
ljmp
ja
and
in
aaa
cmpl
es
daa
movsb
std
bound
aad
push
fisttps
mov
jnp
repnz
push
fbld
jo
ja
sti
ret
lea
test
popf
pop
shlb
imul
les
xchg
adc
mov
repz
fsubrl
movd
ret
test
es
lcall
sbb
int3
ss
cmc
aas
popa
call
and
sahf
sub
test
outsl
popa
dec
sbb
push
or
movsl
cmc
mov
push
pop
lock
xchg
xchg
jns
push
rcll
sub
jp
lods
rcrl
jge
test
adc
jbe
lret
mov
add
ss
xor
adc
aad
jae
cmp
inc
jmp
fcmovbe
dec
fstl
adcl
pminub
test
jle
ret
xchg
lods
push
jge
or
lret
pop
mov
jg
ja
rorb
faddp
mul
idivb
cmp
test
xchg
mov
mov
cli
mov
sub
lock
pop
lds
ja
push
sahf
je
mov
test
mov
mul
imul
je
pusha
mov
jae
int3
and
dec
rorb
pop
mov
pushf
sbb
test
fwait
pop
add
pop
inc
test
adc
jecxz
pushf
icebp
insb
mov
sbb
mov
jb
imul
mov
mov
push
inc
iret
pop
push
das
sti
addr16
sub
dec
mov
sbb
cwtl
or
xchg
pop
js
push
sahf
js
pop
pop
and
jo
insb
or
stos
int3
jle
call
mov
jns
outsl
add
mov
push
push
pop
in
in
fbld
dec
or
or
test
cs
incl
inc
mov
and
pop
cmp
insl
push
pop
mov
jb
dec
out
or
and
mov
jge
adc
push
repnz
unpcklps
inc
or
pop
cmp
out
pop
mov
sbb
roll
mov
mov
mov
jb
jmp
and
xor
xchg
dec
adc
adc
out
sbb
and
xchg
mov
imul
jo
lahf
dec
mov
leave
cmc
stc
push
pop
sbb
push
mov
push
in
xlat
cld
test
xor
es
pop
lods
mov
or
jb
jns
cmp
dec
scas
mov
fsts
js
push
es
sbb
out
adc
cmp
leave
pop
rcl
insl
adc
sub
sub
aas
movsb
jne
sahf
cmp
mov
loopne
test
cltd
or
scas
pop
lea
addb
in
mov
jbe
inc
xchg
dec
cmpsb
sub
outsl
cmp
test
fwait
push
out
testl
adc
cmp
lds
rcl
repz
imul
pop
pushf
push
pop
daa
jg
xchg
add
jns
xlat
std
mov
rcll
sub
jge
lock
dec
aaa
mov
xor
jp
in
pushf
aas
insl
int3
lods
sub
iret
lcall
das
jg
clc
ljmp
ljmp
push
ficomps
pop
sub
add
addr16
jns
mov
mov
pop
xchg
pop
jmp
aad
lret
js
push
lret
add
scas
dec
cmc
or
sub
push
mov
xchg
ljmp
outsb
lods
popa
out
das
push
ljmp
xor
mov
and
outsb
inc
or
push
and
mov
mov
sbb
insb
in
pop
mov
scas
int
and
mov
in
mov
jns
int3
cmp
fistpl
in
test
cs
test
jae
loopne
inc
push
sbb
push
jo
fdivrs
test
sti
insl
imul
mov
fs
mov
mov
xor
cmp
inc
adc
mov
xlat
add
dec
or
les
sti
test
lock
loope
jnp
mov
shlb
popf
sub
inc
dec
repz
mov
fadds
jnp
or
xor
mov
and
gs
adc
cmpsb
mov
mov
pop
movsl
in
mov
stos
pop
shr
fsubrl
aam
arpl
fstl
inc
pop
test
out
mov
adc
pop
je
subl
mov
push
mov
and
mov
clc
andl
rolb
insl
ja
fldt
ds
adc
popf
push
sub
mov
in
aas
jmp
in
and
xor
jne
in
xchg
mov
rorb
mov
loope
adc
add
inc
fwait
std
iret
jo
cmp
mov
add
vpaddusw
in
sub
mov
fmuls
jle
mov
das
sbb
sub
mov
mov
fwait
xor
iret
xchg
mov
xor
push
and
or
js
lods
scas
pop
out
pop
mov
aas
pop
push
cmp
nop
add
pop
inc
add
imul
push
clc
addl
mov
sub
fimuls
icebp
push
fstpt
je
data16
iret
push
outsl
push
lret
mov
sar
mov
lahf
xchg
mov
insb
idivb
ds
out
ret
stos
std
mov
popa
fisttps
out
imul
movsb
and
xchg
cmp
push
fnstsw
mov
vmread
insl
pop
sti
loopne
mov
ret
push
jne
mov
aad
pop
out
lods
test
lock
mov
gs
dec
push
sarl
ss
das
jmp
out
inc
testl
outsl
or
push
sub
clc
popf
das
out
addr16
les
stc
shll
icebp
repz
faddp
test
xchg
mov
sub
cwtl
test
shrb
sbb
out
and
jg
mov
mov
jp
jbe
lea
cmp
sub
xor
push
push
sub
into
js
or
fcmovne
sarl
addb
xor
fisubl
cmpsb
adc
adc
jecxz
cwtl
jp
out
popf
mov
lret
and
ss
call
jle
scas
push
gs
lret
add
mov
call
je
jge
cs
sub
ds
mov
mov
cld
jge
dec
dec
cmp
mov
mov
push
in
pop
push
push
mov
mov
iret
out
mov
subb
les
repz
sub
cmp
xchg
out
pop
call
pop
popl
les
subl
in
add
mov
mov
xor
cmp
or
cmp
and
dec
sbb
pop
out
jl
adc
xchg
sbb
lods
lret
jns
cmp
xorb
sarb
mov
xor
test
inc
loopne
xchg
pop
push
cmpsl
push
xchg
sub
jae
test
scas
popa
lea
inc
das
pop
mov
data16
adc
push
inc
mov
out
insb
sbb
or
and
mov
ljmp
sti
xchg
insb
shll
and
xchg
jg
decl
in
mov
ja
mov
push
mov
mov
or
add
push
aad
movsl
rcll
rcrl
scas
call
xchg
stos
add
or
xchg
fidivrl
rcr
adcl
es
imul
pop
pop
js
ret
inc
jge
mov
int3
push
lret
incl
fbstp
cli
shll
cmp
lahf
rcrb
jp
daa
inc
aam
js
cltd
aaa
xor
not
jne
push
dec
dec
mov
push
mov
sub
movl
test
dec
mov
loopne
push
loop
jno
imul
lods
xor
mov
lds
mov
bsr
adc
out
add
stc
fimuls
fisttpl
mov
fwait
dec
mov
pusha
cmpsl
hlt
jno
fnstenv
sti
push
dec
stos
jb
sub
arpl
insb
and
pop
mov
jbe
xor
mov
leave
dec
jle,pt
xchg
pushf
sahf
xlat
jno
pusha
aam
stc
fimuls
int3
dec
and
push
push
xchg
jns
test
jge
mov
out
cmpsl
pop
pop
dec
ret
and
rcrl
mov
and
push
push
loopne
mov
fistps
loopw
divb
dec
mov
ja
push
xchg
fildl
sti
lea
popa
shlb
inc
pushf
icebp
push
xlat
negb
push
andb
jle
sub
aad
sbbl
dec
adc
jb
stc
pop
int3
shrl
lock
jge
loope
pop
adc
mov
cs
xorl
cltd
imul
sbb
pop
mov
lcall
sub
sbb
mov
or
shlb
sub
push
aaa
jbe
or
mov
insl
stc
mov
add
movsb
mov
je
or
jbe
cli
data16
sbb
filds
xorb
push
mov
jle
inc
jnp
push
jb
xor
xor
mov
xchg
pop
lds
cmc
cmpb
in
lcall
ljmp
mov
mov
popf
cmc
cmp
loopne
fadds
mov
dec
fsubrs
inc
in
shrb
imul
xchg
stos
adc
cwtl
cli
ljmp
xchg
in
imul
repz
or
sub
ljmp
test
out
sbb
jle
jo
mov
or
call
sbb
pop
xor
sub
aas
cmpsb
clc
mov
pop
enter
adc
mov
rclb
test
repnz
insb
push
mov
rcrl
stos
sbb
mov
orl
push
mov
int
mov
mov
xchg
sbb
andl
loopne
pop
mov
ds
cwtl
mov
xchg
sbb
sbb
aaa
js
mov
mov
mov
and
inc
push
je
add
dec
add
imul
lcall
jb
sbb
pop
test
cmp
jb
pop
inc
add
movsb
mov
xchg
lahf
fdivrp
xchg
pop
mov
or
addr16
mov
add
in
scas
adc
imul
push
cmpsb
sti
fucomp
xchg
lods
xchg
mov
mov
test
aad
lock
mulb
fnstenv
dec
test
dec
mov
jmp
push
or
and
inc
int3
adc
lea
xchg
lahf
movsb
fldt
leave
daa
xor
xchg
push
cmp
cmp
stc
jb
clc
lock
cmp
enter
ljmp
pop
mov
xchg
mov
xor
xor
pop
cs
out
mov
stc
xor
mov
add
xor
mov
out
gs
mov
cs
push
ret
divl
sub
mov
dec
cmpsb
cmp
in
hlt
das
mov
adc
cmp
mov
ror
and
stos
mov
mov
and
lods
shlb
xchg
jle
inc
jl
js
cmp
leave
fbstp
into
aad
mov
inc
cltd
push
jnp
adc
sub
sub
push
mov
icebp
and
mov
xlat
pop
jge
push
into
mov
mov
rorl
bound
mov
inc
imul
in
scas
call
cltd
insl
xchg
gs
adc
test
mov
xor
jo
push
or
mull
sub
sti
cmp
push
stc
lea
xchg
adc
out
jo
adc
shrl
lret
stos
or
mov
iret
jge
cmc
in
push
mov
outsl
cmp
fnstcw
jae
inc
mov
mov
aad
adc
dec
and
or
adc
push
push
inc
pop
movsb
loopne
mov
push
adc
in
cmp
inc
loope
xchg
inc
loopne
push
repnz
sub
or
push
jge
push
pop
gs
pop
xchg
mov
enter
inc
scas
loop
and
lods
jg
adc
mov
cld
dec
push
fimuls
imul
ds
add
rcl
or
dec
mov
sub
jns
mov
stos
sbb
pand
dec
nop
pop
and
rcl
call
push
hlt
cld
out
pop
add
arpl
cmp
mov
test
xor
jo
lds
or
or
push
mov
push
orl
call
xor
repnz
js
rolb
das
ja
pop
jb
pushf
push
pop
int3
mov
enter
jle
push
inc
loopne
loopne
cmc
arpl
cs
loop
push
cwtl
xor
stos
xor
scas
cmp
pop
add
repnz
xor
repnz
sbb
lea
cmp
cmp
es
stc
les
add
imul
jbe
add
inc
fsts
movsb
xchg
sbb
int3
pop
shll
arpl
and
mov
sub
push
test
fadds
insb
lds
push
mov
add
pop
sbb
es
ja
enter
push
je
out
xlat
inc
cmp
sub
sbb
mov
xlat
repz
cmp
mov
popl
ss
push
push
aam
fcmovb
jle
rol
pop
je
or
mov
iret
and
cmpsb
jne
rclb
mov
dec
daa
xor
jbe
mov
push
stos
inc
mov
jg
fcmovbe
lods
mov
sbbb
mov
xor
enterw
or
mov
pushf
adc
in
in
es
and
jb
or
dec
jp
mov
mov
jp
outsb
outsb
cmpsb
jae
push
jb
and
fidivs
mov
pop
inc
cli
or
jp
adc
fcmovb
clc
mov
fisttpl
cmp
gs
push
jo
or
aam
mov
xchg
sbbb
sbb
rcr
sahf
in
pop
xchg
dec
dec
lcall
mov
out
jne
mov
test
mov
into
xorl
cmp
xchg
dec
inc
xor
mov
or
inc
enter
paddusw
push
insl
cmp
push
push
pop
pop
mov
out
and
xchg
pop
adc
lock
xchg
shll
jno
fwait
add
test
inc
mov
push
ror
aam
dec
int3
shlb
jbe
test
mov
outsb
fstl
dec
leave
push
mov
js
and
xchg
mov
sub
sbb
mov
mov
loope
jl
test
lret
mov
rcll
mov
dec
xor
pop
cmc
outsb
enter
adc
loope
or
cmp
jmp
mov
push
adc
daa
xchg
dec
adc
mov
jecxz
loop
scas
pop
or
ds
in
mov
pop
xor
xchg
inc
jmp
lods
dec
dec
inc
decb
push
lcall
scas
add
push
push
or
sbb
inc
xchg
cmpsb
sbb
rolb
xchg
mov
rcr
out
nop
sbb
testb
mov
stc
insl
imul
aaa
in
enter
cmpsl
mov
add
sahf
pop
sub
imul
cs
loop
insb
or
jns
aas
adc
mov
inc
mov
xchg
stos
pushf
sbb
push
push
jb
bound
mov
dec
insl
mov
pop
das
xor
jb
subl
stos
push
imul
idivl
cwtl
mov
ret
sub
outsl
scas
sub
push
shl
fldt
or
jnp
lods
mov
fcoms
mov
and
mov
arpl
push
fnstsw
repnz
inc
fsubs
fnstenv
mov
push
inc
and
pop
jp
xchg
in
add
mov
adc
lret
jecxz
outsl
dec
ret
das
pushf
aad
pop
or
into
lcall
ret
xchg
dec
scas
ljmp
lea
mov
orl
data16
xchg
jo
out
dec
int
push
cmp
cwtl
sbb
sub
jp
push
inc
sbb
dec
mov
sti
xchg
shll
out
push
push
pop
jg
add
imul
mov
icebp
adc
xchg
adc
push
dec
adc
or
fwait
jo
jae
pop
mov
jg
fwait
bound
lret
xor
and
dec
xchg
iret
ds
push
sbb
cli
add
xor
andb
xor
mov
xchg
dec
add
ret
cmp
call
sti
sbb
mov
lods
sub
jno
in
rcrl
xorl
lcall
test
js
xchg
jb
roll
pop
imul
adc
add
lcall
ljmp
cmc
push
movsb
ficoms
mov
insb
dec
cld
insl
pop
or
lods
dec
dec
movsl
cld
jno
jo
jecxz
jb
push
roll
mov
xchg
in
movb
fsubs
and
mov
arpl
imul
adc
ds
fs
xchg
lods
jo
mov
inc
pop
out
xchg
ljmp
mov
sbbb
xor
jg
fldt
and
es
arpl
cmpsb
xchg
idivl
negb
lahf
inc
fnsave
aas
pop
jg
das
adc
ret
gs
fxam
in
mov
pop
cmp
mov
pusha
lods
xlat
push
sub
push
shll
pop
dec
pop
and
xchg
daa
lret
iret
or
stos
jge
psrlq
inc
lea
sbb
inc
adc
cmc
jp
push
mov
xchg
into
push
hlt
and
adc
enter
lcall
push
dec
pop
push
repz
dec
cmp
imul
push
outsl
push
hlt
out
sub
inc
mov
mov
pop
rorl
pop
shrb
jle
xchg
cmpl
aaa
push
in
xor
and
in
dec
cltd
aaa
mov
or
lea
mov
xchg
sub
lret
xchg
push
sub
mov
clc
int3
imul
jne
nop
xor
in
or
int
repz
loope
mov
out
sti
leave
test
mov
add
in
push
std
dec
push
fimuls
dec
ret
lds
dec
dec
mov
and
popf
pop
das
push
pop
mov
xor
negl
or
push
pop
daa
imul
cmp
or
mov
and
mov
mov
sub
adc
cwtl
mov
pop
sti
add
or
pop
leave
jae
ret
xor
or
and
adc
fisttpl
ljmp
adc
cld
fcmovu
test
jbe
jbe
push
push
leave
jecxz
xchg
inc
cmp
aaa
movsb
pop
shl
xchg
mov
scas
mov
sbb
lods
mov
dec
les
add
jns
mov
popa
lcall
inc
or
stos
cwtl
add
ffree
movl
sbb
sti
imul
and
out
sbb
mov
loopne
cmc
es
inc
sarl
outsl
dec
rcrl
xchg
popf
ret
aad
mov
push
cmp
addl
fnsave
in
movsl
xchg
ljmp
shll
das
ss
add
cmp
into
rclb
jno
sti
add
sbb
sbb
push
aaa
xor
imul
inc
sti
xlat
stos
aad
sub
xor
loop
xor
jb
das
fsqrt
cmp
negb
sub
sti
fucomp
mov
sahf
outsb
inc
pushf
in
push
scas
sbb
inc
or
jmp
shl
outsb
mov
or
es
into
pusha
adc
mov
push
mov
jmp
or
adc
sbb
add
fbld
or
sti
sahf
out
sbb
mov
xor
pop
aas
int
aad
jno
lahf
sub
cmpsb
dec
call
decb
or
movsb
dec
loopne
imulb
dec
pop
pop
enter
push
cmp
or
in
outsl
imull
cmpsl
and
cltd
lock
mov
or
popa
and
pop
cld
movsb
scas
pop
hlt
jns
movsl
or
ret
adc
jno
or
jnp
mov
push
popf
xor
push
add
push
fs
je
leave
adc
loop
and
pushf
stos
push
mov
jno
icebp
pop
adc
insl
bound
push
mov
sub
mov
fisttpl
inc
int
lret
xor
and
pop
loop
mov
sbb
inc
gs
jg
fwait
xlat
jo
mov
xor
inc
fdivrs
maxps
cmp
mov
dec
lret
xor
sbb
xor
lret
xor
decb
add
outsb
lods
movsb
jae
cmp
push
dec
stos
mov
pop
jmp
lret
mov
cs
subl
icebp
mov
push
bndldx
pop
mov
call
int
aam
lock
push
xchg
jp
neg
adc
out
scas
xlat
inc
xchg
das
cs
loop
mov
lcall
mov
adc
mov
fdivr
adc
scas
mov
pop
clc
and
sub
adc
test
cmp
push
sahf
je
xchg
inc
mov
push
lock
scas
push
mov
aaa
push
inc
repz
int
jno
arpl
mov
mov
inc
jp
mov
daa
dec
adc
pop
mov
jb
cs
dec
xchg
shlb
xchg
sbb
rorl
and
loop
pop
adc
add
mov
or
sub
mov
jp
mov
adcb
jecxz
ret
in
pop
jae
cltd
enter
add
aad
lds
xchg
enter
mov
jbe
into
mov
mov
dec
shll
sbb
stc
pushf
in
insb
adc
les
repz
mov
pop
adc
push
out
dec
int
test
dec
negb
std
pop
test
xchg
cld
or
dec
sub
std
add
mov
movsb
mov
inc
les
mov
jns
in
add
push
push
jae
rorb
push
ret
loopne
or
imul
imul
jo
lea
cmp
out
lods
sahf
shlb
sub
mov
cmp
pop
cmpsl
xor
aam
std
cmp
jge
dec
lahf
popa
les
inc
jnp
mov
cld
add
iret
adc
icebp
xchg
int3
out
inc
sbb
adc
cwtl
xchg
ljmp
cmp
movl
mov
pop
test
and
es
mov
rcrb
incb
xor
inc
cltd
xorl
adc
pop
or
ds
insb
pop
push
and
sbb
dec
sbb
icebp
xor
dec
and
mov
fstp
push
cmpsb
in
inc
push
lahf
pop
or
adc
dec
sbb
adc
inc
or
sub
dec
enter
pop
add
xlat
cmp
test
loope
cmp
je
jb
in
xchg
pop
pop
xchg
lods
ds
jle
leave
in
fwait
lea
and
ljmp
push
and
xor
or
xchg
or
push
pop
mov
or
lds
test
loopne
sub
or
jne
orb
cli
stos
sub
mov
mov
inc
scas
add
sbb
gs
pop
sti
mov
iret
lret
int
inc
in
popf
insb
pop
add
inc
xor
inc
adc
cmpsl
jns
into
ds
mov
mov
and
rcrl
stos
lock
repz
ja
fsubrl
cmp
je
scas
sub
insl
into
insb
mov
sub
jb
mov
mov
fs
push
push
sbb
push
call
stc
mov
cli
jbe
or
pusha
xchg
lea
push
out
push
cmc
mov
xor
jno
ljmp
mov
push
scas
bound
dec
push
cmp
mov
pop
mov
or
cmpsl
push
das
ret
ss
repnz
xchg
mov
jo
daa
and
or
jmp
and
adc
sub
mov
and
scas
inc
cmp
push
lods
push
mov
xor
cmpl
lret
add
icebp
fucomp
pop
repz
or
cmp
mov
jge
icebp
fwait
addr16
sub
mov
jb
insl
stos
mov
jge
ja
sbb
inc
add
ja
clc
das
cwtl
xor
lret
cwtl
in
test
push
mov
ljmp
pop
ja
stc
jbe
fstpt
xchg
xor
mov
pusha
dec
pop
shll
cmp
jne
lret
xchg
outsl
test
enter
cmp
icebp
inc
add
adc
aas
cmpsb
xchg
inc
subl
es
xchg
sub
push
aam
lahf
sub
cmp
loope
sub
test
xlat
add
sbb
pop
shrb
lods
or
pop
out
pop
pop
imul
dec
in
cwtl
fisttpl
dec
mov
addr16
shrb
sub
imull
xchg
loopne
xor
mov
fidivrs
or
mov
mov
ja
pop
insb
movsl
jp
das
sub
adc
cmp
xchg
daa
and
mov
int
jo
insb
pop
lea
mov
clc
lahf
jp
shl
sub
or
lret
dec
pop
addl
ficoml
adc
insb
push
out
btr
rolb
push
mov
add
or
subb
xorb
mov
movsl
or
out
adc
call
sub
push
or
rolb
add
dec
imul
lahf
pop
fyl2xp1
xor
stc
fs
push
jbe
push
mov
adc
and
pusha
mov
sbb
out
cs
xchg
sbb
mov
mov
lcall
mov
or
faddl
nop
ret
jecxz
mov
popf
jmp
or
mov
js
jp
rol
test
sarb
ljmp
aam
sub
out
out
stos
sbb
shrb
mov
jae
add
xor
push
sbb
jne
pop
dec
jl
pop
div
jne
stos
push
bound
or
lock
inc
jmp
std
cwtl
or
add
jne
lea
sub
sysret
add
hlt
lds
cli
std
test
push
mov
and
negb
or
and
push
push
push
push
in
mov
addl
xor
sbb
sub
scas
dec
testb
loop
cmp
and
mov
in
add
in
loope
test
sahf
stos
inc
adc
les
shll
lret
or
sub
stc
xchg
or
inc
arpl
sbb
pop
xor
inc
push
aaa
adc
inc
mov
add
iret
lret
outsb
outsl
mov
cmpb
xchg
push
bound
inc
xchg
push
outsb
mov
fcmovnb
pop
int
sbb
jle
ret
idivl
aaa
inc
outsl
out
iret
cmc
loop
scas
add
data16
fstps
xchg
cld
jo
ljmp
mov
or
popf
aad
or
jp
pop
pusha
fmull
stos
xchg
push
push
mov
or
aam
xor
icebp
int
mov
ja
mov
adc
std
jg
in
pop
aad
rclb
jle
push
dec
add
jmp
xorl
mov
movsb
js
clc
iret
inc
shll
lods
push
sub
adc
arpl
int
ja
ret
pop
mov
lock
adcb
dec
daa
pusha
loop
out
cmp
or
out
fimull
mov
jmp
incb
xchg
sti
jne
pop
das
loope
pop
or
sub
pop
push
mov
loopne
ds
and
jo
xchg
push
les
pushf
aam
xchg
xor
test
sub
lods
mov
ljmp
loope
cmp
daa
add
dec
pop
cmp
pop
mov
mov
lcall
lret
out
lock
test
xchg
and
out
xor
sub
add
das
xlat
mov
adc
subb
insb
orl
inc
add
pop
in
pop
imul
pop
clc
in
out
and
xlat
arpl
cmp
xchg
jle
mov
rolb
mov
scas
test
and
jg
sub
adcb
testb
and
and
or
rorb
ficoml
movsb
pop
popl
cmp
add
xor
xchg
fsubp
xchg
xchg
daa
rcrb
ljmp
ds
and
adc
add
shl
lret
mov
add
cmp
inc
pop
jae
imul
sub
xchg
mov
or
mov
pop
jecxz
pop
sub
mov
sbb
cld
int3
sub
shlb
push
jge
push
push
fildl
insl
addr16
and
mov
mov
out
mov
divl
adc
adc
call
fnsave
incl
cltd
jl
push
stos
adc
dec
jns
loopne
dec
int3
pop
ret
stos
scas
xor
jne
mov
push
sub
xchg
stc
shl
cmpsl
out
cli
xor
jne
ja
fisubl
mov
add
sarb
shlb
add
repnz
inc
push
xchg
cmp
fidivs
leave
fldenv
sbb
fs
jge
push
inc
pusha
cmp
inc
jb
sub
ret
lahf
xor
fwait
das
mov
jle
jno
adcl
out
pushf
inc
aam
les
mov
lret
xor
xchg
das
repz
leave
adc
outsl
dec
pop
or
sbb
mov
cli
lahf
and
jnp
fwait
cmp
sbb
push
push
jo
mov
cmp
sub
jecxz
sbb
out
rcl
orb
aaa
adc
push
and
hlt
aad
nop
sub
push
mov
push
jle
fcoms
cmp
adc
pop
jge
rcl
push
ret
xchg
inc
test
mov
sub
add
imul
cmp
inc
sub
clc
pop
inc
vpacksswb
mov
out
dec
arpl
mov
cs
xor
cmpsl
imul
adcb
mov
pop
pop
les
inc
xchg
movd
mov
arpl
test
adc
mov
pop
in
in
stc
mov
push
pop
mov
and
or
or
mov
imul
mov
enter
mov
or
jbe
fsubrp
mov
adc
add
sahf
es
cmpsl
mov
mov
ret
movsb
sbb
mov
cmpsl
fstpl
mov
sub
outsl
mov
rcrl
pop
aam
lahf
inc
pushf
dec
iret
sti
xchg
clc
rcrw
or
loope
mov
dec
popf
pusha
sahf
mov
dec
mov
cltd
outsl
faddl
daa
mov
aad
mov
loop
aad
mov
pop
sti
fcomps
lods
out
push
orb
stos
leave
push
call
cmc
aam
aas
sti
cmc
mov
outsb
cli
sub
push
loopne
es
lcall
inc
jle
push
mov
sub
js
xchg
push
push
out
enter
outsl
sti
gs
fdivrs
in
aas
push
lds
mov
repnz
rcrb
iret
ret
or
in
inc
mov
stos
loop
sti
int3
dec
lcall
xor
mov
push
imul
insl
xchg
incb
cmp
push
sub
xorb
popa
int
adc
lcall
shll
xchg
mov
dec
cmpsl
xorb
leave
pop
sbb
mov
sub
and
insb
sar
cltd
sti
adc
cld
mov
push
inc
mov
mov
fs
cltd
or
call
into
pop
sub
aad
gs
fs
sti
sub
mov
xchg
jl
mov
icebp
xchg
push
cs
jmp
vpcmpgtb
push
out
loope
in
pop
mov
pusha
pushf
clc
fcoms
mov
adc
gs
adc
xlat
pop
lret
cmpsb
ja
roll
insl
pop
scas
mov
xor
pop
mov
insb
mov
sahf
cs
lock
mov
push
iret
pop
clc
jbe
into
es
das
dec
dec
shrb
sti
pop
inc
pusha
dec
mov
fistpll
cmp
int3
and
adc
dec
mov
add
add
mov
lds
data16
dec
sbb
inc
add
lock
mov
in
popf
mov
andl
loope
std
xlat
adc
push
divb
cmc
call
imul
sbb
mov
insb
xlat
cld
jns
ret
lods
pusha
and
cmp
push
pusha
xor
sub
popf
lahf
push
cmp
sbb
mov
fwait
mov
sub
in
ja
and
dec
gs
mov
idiv
pop
mov
jp
lret
and
arpl
jge
pop
push
push
sti
outsb
out
arpl
mov
mov
mov
mov
mov
jp
pop
int
xchg
push
popf
cmp
loop
hlt
sbb
repnz
in
jp
or
push
push
or
adc
add
cmp
ret
adc
fnstsw
add
add
mov
xchg
and
mov
in
push
icebp
mov
or
scas
pushf
scas
xchg
pop
bound
lds
jno
pop
lds
pop
fimull
rcrl
ficompl
popa
sub
scas
jecxz
jecxz
mov
int3
sub
test
iret
shll
sbb
insl
fwait
lcall
outsb
loop
jbe
mov
inc
sub
mov
cmpsb
ficompl
iret
leave
push
xchg
cmpsl
popf
arpl
fwait
sbbl
push
popa
mov
lret
frstor
sub
push
sbbb
pushf
jp
je
push
sbb
psadbw
daa
jle
or
test
sbb
mov
hlt
mov
fildl
add
cwtl
cli
in
push
and
adc
fisttpl
xchg
dec
lret
clc
lea
cmp
lds
pop
jl
es
cltd
mov
adc
add
dec
xchg
xchg
out
loope
inc
pusha
push
ja
in
xchg
xor
mov
adc
fs
and
adc
cmpsb
mov
pop
inc
insb
adc
daa
pop
push
push
fimuls
mov
pop
cltd
cmp
xlat
adc
xchg
jp
movsl
call
sub
jmp
pop
inc
cmp
call
dec
das
std
cmp
addr16
rolb
imul
and
push
outsl
test
sbb
bnd
jne
pop
add
and
lcall
add
lret
xchg
outsl
push
test
jno
in
mov
or
xchg
and
sbb
vphaddubq
mov
and
mov
outsb
scas
xchg
sbb
pusha
mov
mov
add
sub
loopne
jp
repz
or
add
insb
mov
or
fsubrl
in
sbb
sub
jg
ss
push
mov
jecxz
sub
dec
roll
iret
push
inc
pop
shlb
mov
vcomisd
popf
out
adc
xor
repnz
add
fwait
addr16
mov
or
outsl
pushf
sub
lds
jge
divb
insl
je
jae
ds
arpl
jnp
and
lcall
fcoms
fs
xor
lahf
jo
out
xchg
xchg
cmp
loop
push
cwtl
mov
dec
mov
or
movsl
lods
adc
jecxz
sub
inc
add
jmp
movsb
popa
pop
mov
loop
lds
std
or
lret
xor
sbb
shlb
ret
and
pushf
push
fidivrl
out
call
fs
dec
fwait
clc
test
and
out
roll
xor
pop
ss
sbb
mov
adc
ds
or
cmp
and
arpl
mov
loop
push
test
mov
repnz
inc
imul
xlat
jne
out
fisubl
out
pop
jo
rolb
mov
push
or
sub
insb
push
cmp
ret
xchg
imul
push
mov
mov
push
int
push
jnp
andl
mov
xchg
sub
out
js
sbb
pop
adc
mov
push
icebp
dec
cltd
popa
xor
or
fimuls
inc
es
dec
gs
into
dec
or
xor
fldl
cli
dec
ss
pop
and
test
aas
xchg
mov
mov
imull
ffree
outsl
dec
jmp
in
mov
shrb
pop
scas
rorl
pop
stos
inc
push
test
mov
jg
push
int
shlb
js
popa
mov
mov
out
out
clc
xchg
cmpsl
inc
inc
sarb
out
cpuid
fiadds
gs
cmp
xchg
fwait
xor
pop
and
stos
pop
xchg
push
pop
and
cwtl
jno
dec
test
add
xor
push
push
and
and
mov
pop
idiv
int3
push
mov
xor
or
push
ja
movsl
mov
jmp
pop
stos
dec
sub
mov
xchg
cmp
sbb
fxch
inc
jo
pop
ds
push
mov
movsb
scas
mov
jp
mov
xchg
push
sarl
sub
inc
inc
aas
fsubrl
or
mov
sub
arpl
cmpsl
push
xchg
mov
sbb
outsl
inc
mov
add
dec
imul
pop
out
movsb
jecxz
pop
sub
ror
and
filds
xor
mov
cmp
xor
movl
and
cli
rcrw
jecxz
xchg
ret
push
imull
xchg
pop
lods
ret
enter
dec
mov
dec
xchg
or
mov
xchg
imul
aaa
cmp
jo
jns
pushl
jo
sub
push
fistps
in
ret
cmpsb
pop
les
data16
mov
fstps
test
push
sbb
int3
icebp
add
add
mov
stos
sbb
adc
xor
and
jns
je
jecxz
cmp
sub
dec
js
xchg
xchg
ljmp
inc
xor
enter
adc
jnp
lret
outsb
aam
jae
fimull
adc
aad
push
rcrb
in
xchg
inc
dec
fwait
test
push
fucomp
and
dec
sub
mov
add
leave
and
xchg
aaa
or
and
and
or
je
jo
pusha
daa
flds
outsb
int3
xor
sub
gs
push
pop
roll
sbb
leave
add
add
mov
dec
add
cmpl
leave
daa
and
lods
shrb
outsl
loopne
xor
movsl
jb
xchg
dec
sub
or
gs
fists
mov
stos
xchg
test
cs
mov
out
adc
dec
bound
cld
aad
subb
sbb
jno
jp
inc
push
scas
sub
inc
jle
mov
or
es
ds
aas
shll
roll
hlt
sub
xor
movsb
rclb
cmp
dec
pop
jge
or
es
outsb
jle
xor
int3
pop
popf
daa
dec
aas
jp
shl
adc
std
aaa
sub
push
xchg
loope
fildll
xchg
xor
adc
in
sub
out
sbb
lret
jge
stos
lods
sbb
int
or
sub
sbb
loop
aas
add
xor
rcrl
test
inc
in
jne
and
ss
push
mov
inc
bound
pusha
std
leave
and
std
test
inc
add
mov
movsb
pop
mov
loop
mov
pop
jb
cmpsl
mov
jmp
xchg
mov
test
mov
out
test
xor
mov
cltd
sbb
loope
stc
dec
cmp
sub
inc
flds
loopne
jle
lock
fbld
cmp
outsb
push
xor
fsubrs
fst
in
loope
cld
xchg
adc
mov
jmp
sbb
movsl
mov
adc
leave
push
xor
int
cli
pop
stos
in
push
pusha
ror
rcrb
xor
scas
in
imull
popf
ljmp
jno
mov
cli
fs
sbb
negl
ret
push
shlb
jno
cmpsb
int
jge
int
sub
dec
bound
pop
jb
inc
into
pop
fdivrs
sbb
cmp
add
sub
rcrb
push
pop
aam
dec
xchg
testb
mov
sub
push
pop
cmpsb
push
lods
xor
add
pop
add
sbb
xchg
sub
jno
bnd
inc
inc
daa
and
jl
orl
or
dec
les
pop
stos
aad
mov
fcomip
mov
mov
pop
and
dec
push
sahf
xor
ret
cmp
add
idivb
ds
test
dec
insl
out
nop
sub
xor
fwait
lahf
inc
into
push
add
lret
mov
or
and
push
and
test
sbb
sub
lret
lcall
adc
mov
sbb
inc
mov
ss
mov
pop
arpl
xchg
fimull
pop
dec
sahf
cs
jle
test
xlat
adc
or
push
pop
push
sbb
adc
mov
int
mov
mov
aam
hlt
lds
scas
divb
push
imul
push
mov
xor
outsb
mov
outsb
sbb
and
ret
fdivs
in
push
adc
pushf
mull
and
sahf
pop
mov
xor
test
and
stc
les
arpl
std
pusha
xchg
sbb
sti
or
je
dec
sub
xchg
cmpsb
xchg
jae
test
push
mov
loop
jp
add
loopne
out
iret
adc
jne
mov
pop
push
call
fildl
cmpsl
mov
call
aam
lds
push
push
xchg
mov
and
into
pushl
sub
cmpsl
sub
lods
fs
xor
jbe
pop
in
push
aas
in
ret
arpl
test
pop
jne
and
outsl
nop
xchg
mov
jb
pop
inc
mov
push
in
sbb
aas
ficompl
mov
jne
movsl
outsb
les
and
mov
bound
out
scas
jle
cmpb
mov
push
pushf
cmp
pop
lods
movsl
rorl
bound
pop
iret
sahf
and
into
popa
push
aas
lods
mov
fstpl
out
fcomip
cwtl
fs
xchg
mov
hlt
inc
xchg
imul
mov
repz
shll
ds
xchg
sub
sub
sbb
loope
out
dec
mov
cs
pushf
dec
lods
fimull
loop
fs
cmc
movsb
add
cmpsb
jg
inc
cmpsl
pop
dec
push
hlt
xor
push
and
adc
sub
xor
lock
call
xchg
mov
and
pusha
lea
xchg
scas
pop
daa
mov
inc
arpl
outsl
push
bound
pop
insb
fbstp
sbb
xor
pop
or
lea
add
jg
lret
or
cmpsl
addr16
adc
outsl
add
dec
mov
scas
insl
pop
inc
ficomps
dec
pop
insb
in
shl
xchg
arpl
cmp
pop
dec
sbb
andb
xchg
push
scas
jmp
sbb
jo
mov
sub
and
push
mov
xchg
orl
cvtps2pi
addr16
mov
push
fs
and
pusha
pop
jmp
sbb
inc
sbb
inc
aaa
addr16
bound
push
mov
divb
adc
sub
les
sbb
sub
xchg
pushf
stos
les
sub
xor
mov
sub
cmp
in
inc
mov
movsb
js
cmp
dec
add
and
jnp
repz
mov
mov
fmull
ja
mov
stos
sub
lahf
ja
add
data16
pop
and
sahf
fcomi
aas
dec
pop
sbb
pop
inc
lods
imul
inc
mov
outsb
mov
call
inc
mov
push
arpl
and
mov
mov
xchg
xlat
mov
push
rcl
pop
sbb
cmc
repz
lahf
fcomps
cmc
rcll
scas
mov
add
pop
mov
xchg
clc
fwait
outsb
ja
into
stos
mov
lock
xor
jno
ja
and
and
inc
aad
xlat
pusha
in
scas
inc
add
iret
adc
test
adc
negb
jno
hlt
mov
jnp
addr16
cmp
orl
aad
fstps
scas
jle
mov
clc
mov
xchg
mov
dec
dec
sbb
cmp
xchg
push
jns
inc
out
pop
shlb
push
mov
dec
mov
xor
cmpsb
repnz
mov
rcr
cmpsl
sub
xlat
xor
jecxz
sub
push
ja
sub
fcom
loop
aaa
les
call
jecxz
lret
enter
or
popf
xor
sub
test
aad
call
popa
popa
sbb
out
sti
stos
pop
dec
mov
out
dec
dec
lds
sub
fldl
cmpsb
outsl
imull
sub
mov
dec
dec
sub
pop
scas
adc
nop
in
push
and
js
push
fdivrs
push
push
mov
dec
xchg
mov
sti
aad
push
xchg
and
xor
inc
inc
insl
pop
sbb
gs
mov
test
sub
push
lds
fdiv
pop
test
ret
imul
push
fadds
push
inc
add
fsubrl
fisttpll
dec
sahf
jbe
sub
pushf
dec
out
adc
out
insb
int3
pushl
inc
stos
inc
das
movsb
imul
mov
orb
dec
enter
cmp
pusha
dec
xor
addr16
cmc
sbb
lods
lret
movsb
jmp
ficoms
sbb
fildl
dec
jge
lods
push
mov
jg
loopne
daa
jp
test
add
xor
imul
xor
lock
sti
and
inc
movq
and
fs
xchg
push
push
pop
mov
lds
outsb
pop
xorl
mov
and
mov
push
jmp
shlb
int
push
dec
into
bnd
ss
int
mov
stc
sbbl
out
push
out
and
pop
mov
out
imul
mov
out
push
jno
sub
xor
repnz
or
mov
xchg
fldl
add
sub
arpl
sahf
out
xchg
mov
cld
xchg
mov
xchg
dec
dec
into
scas
pushf
jmp
cmp
push
xchg
cwtl
xchg
pop
pop
mov
xchg
mov
bnd
mov
loope
add
mov
incl
insb
js
and
dec
lahf
mov
aam
fdivrl
inc
push
xchg
enter
or
mov
mov
add
orb
cs
push
sarl
ljmp
out
or
idivb
cltd
adcl
cmpsb
pop
cmp
xor
test
lret
les
fwait
int
mov
js
or
mov
mov
movsl
and
mov
inc
cld
adc
jge
loopne
and
push
sbb
outsl
or
lcall
shll
mov
sbb
inc
xchg
or
push
push
addr16
aam
pop
insb
mov
push
test
add
or
mov
or
fdivs
sarl
cltd
xor
inc
push
imul
pop
ret
sub
sbb
ds
mov
sti
inc
cmp
and
into
div
pop
ret
cmpsl
call
pushf
gs
xorb
mov
lret
stos
pop
mov
xchg
jg
mov
mov
shrl
sbb
mov
outsb
dec
xlat
mov
mov
mov
xchg
sahf
repnz
les
pop
fldt
lds
dec
push
jecxz
pop
lods
mov
adc
jg
cwtl
jle
mov
ds
loope
or
sub
jl
out
popf
addr16
mov
sbb
repnz
mov
frstor
roll
xchg
cmp
push
dec
xchg
es
sub
loopne
nop
jbe
aas
out
clc
add
add
and
mov
sbb
jmp
push
int3
arpl
push
mov
inc
mov
test
int3
mov
cmc
dec
jo
stc
or
icebp
sbb
fidivrs
mov
xchg
aas
nop
and
xchg
sbb
jo
push
aam
add
xor
jg
arpl
mov
dec
filds
push
aas
cltd
xlat
sub
out
out
into
xchg
loop
dec
rolb
adc
mov
loop
dec
dec
or
int3
xor
outsl
pop
adc
gs
cltd
cmp
inc
jmp
xor
enter
inc
ficompl
xor
daa
fistl
mov
outsl
mov
imul
stos
mov
pop
leave
sbbl
jmp
cmp
scas
add
rcll
sti
sub
out
sbb
ds
shl
arpl
outsb
mov
subl
outsl
ss
jle
cmp
add
lret
lock
int
imul
lea
lods
xor
jae
adc
cwtl
pop
fwait
stos
mov
inc
fs
std
pop
fldenv
mov
cmp
ret
jg
adc
push
lahf
scas
arpl
jne
or
in
in
aad
sti
outsb
stc
jbe
inc
add
cmp
imul
jmp
leave
call
pusha
mov
jmp
xor
lods
push
pop
aad
push
jmp
push
cmp
and
jne
sub
fildl
sarl
scas
xor
sbb
and
pop
loop
in
out
int3
sub
xor
ret
incl
mov
push
mov
aaa
cmpsl
loop
daa
sbb
push
pop
sub
lcall
cmp
fwait
pop
xchg
enter
and
push
testb
mov
mov
hlt
fbld
pop
xlat
mov
fidivrs
in
aad
mov
ret
or
mov
mov
outsb
xlat
lahf
pop
pop
sbb
xchg
pop
lock
fcmovnu
aam
push
add
nop
outsl
sub
mov
in
nop
insl
icebp
andb
clc
and
dec
ds
cld
pop
inc
mov
ds
xchg
es
addb
xchg
adc
iret
leave
iret
lahf
es
sub
movsb
das
mov
in
outsl
out
popa
ficompl
xchg
mov
xorl
mov
in
popa
pop
fsubrp
pop
or
cld
pushf
int
jnp
push
xchg
xchg
je
push
popa
push
fdivs
daa
mov
les
jecxz
inc
dec
scas
sbb
push
movsb
test
and
addr16
sbb
mov
jno
or
test
ret
sbb
jb
mov
pop
mov
inc
stos
movsl
lcall
dec
bound
data16
sub
and
insl
lret
pop
pusha
lahf
test
cmc
mov
sarl
jge
adc
pusha
adc
adcl
jnp
dec
cmp
add
outsl
hlt
shll
jl
test
outsb
xchg
mov
out
cltd
ror
fadd
data16
inc
pushf
adc
jmp
jmp
push
les
mov
lods
daa
jno
imull
inc
fistl
sub
fisttps
or
jmp
push
sub
pushf
sahf
stos
xchg
jge
cmc
pop
test
jmp
pop
cs
and
inc
xor
pop
adc
iret
xor
mov
movsl
insb
imul
mov
jns
xor
or
xor
jno
or
inc
pop
loop
dec
mov
adc
and
insl
stos
cmp
loopne
std
lret
push
imul
pop
in
mov
pop
stos
sbb
jg
cmc
or
outsb
aas
imul
movsl
stos
popa
jmp
adc
rorb
jp
scas
mov
jbe
int
jns
aas
jmp
cmp
iret
jbe
sbb
mov
sub
add
sub
popf
and
loopne
dec
xchg
orb
shl
cmp
pop
push
xchg
mov
sub
iret
movsl
mov
xlat
sbb
insb
dec
xchg
je
jnp
jge
push
jecxz
jne
fldcw
pop
fdivrs
pop
inc
jne
and
dec
push
cmp
fiaddl
xchg
outsl
fnsave
sub
jb
push
xchg
int
sbb
mov
push
inc
das
xchg
or
jns
mov
andb
addr16
sbb
ds
xlat
mov
xchg
pop
scas
jp
ret
cmp
jmp
scas
lods
out
into
filds
fisttpll
add
repnz
subl
sbb
xorl
ret
push
call
or
or
gs
sub
hlt
sbb
test
push
mov
mov
jae
and
adc
dec
cmpsl
jmp
repnz
dec
outsl
push
cmc
push
out
std
pushf
scas
mov
push
mov
xor
sbb
sub
jge
outsl
pusha
push
loopne
fwait
das
repz
or
hlt
test
cwtl
add
lea
std
jmp
sub
pop
sbbl
in
sbb
inc
or
aaa
cmpsb
cwtl
in
int
or
dec
mov
xchg
mov
mov
mov
fcoms
lods
fmuls
inc
pop
pop
es
insl
jmp
adc
xor
stc
stc
xorl
subb
bound
data16
add
fcomps
mov
push
sbb
enter
cmpsb
test
inc
xchg
push
add
inc
push
js
clc
cwtl
add
inc
leave
push
mov
xchg
lock
int
mov
ret
add
dec
mov
cmp
lahf
test
xor
xor
add
xchg
and
pop
cmpsl
lea
cmpsb
dec
xorl
in
lcall
dec
adc
sar
and
sti
push
cmpsb
jp
lods
jb
inc
pop
jae
adc
mov
push
imull
nop
cmp
ljmp
pop
fcompl
inc
clc
jno
aad
in
add
sub
mov
push
aaa
aaa
adc
jo
pop
xor
dec
push
mov
pushf
test
mov
push
lock
add
imul
sbb
and
rorl
sbb
mov
call
in
mov
sub
fidivrl
pop
leave
fildl
pop
fnclex
mov
pop
divb
test
in
cmp
clc
mov
loopne
jnp
test
xchg
icebp
mov
cmp
es
andb
mov
test
fdivrs
cld
icebp
xor
gs
aaa
adc
inc
jp
test
xor
fsts
jbe
paddq
sub
out
rorb
sbb
sbb
in
dec
or
or
rcrb
xchg
mov
les
cmp
rorb
in
cld
xorb
push
jecxz
push
pop
movsl
fs
or
and
cltd
nop
out
push
in
jecxz
cmp
sub
js
repnz
or
fisttpll
clc
pop
mov
cltd
filds
mov
xor
or
push
stc
or
mov
mov
jecxz
add
mov
mov
jbe
aad
in
lods
mov
int
test
fisubrl
sbbl
push
ja
jb
mov
push
in
mov
jg
cld
data16
stos
call
repnz
hlt
push
mov
cwtl
adc
rcrb
xchg
test
in
mov
xchg
loope
lods
jb
sbbl
out
mov
dec
mov
xlat
stos
sti
or
lahf
cltd
out
int3
push
sbb
fisttpl
notb
pop
mov
aam
outsb
lods
stos
std
sub
aas
dec
xor
enter
jle
adc
xor
cmpsb
cmpb
pop
jmp
mov
fldt
push
and
dec
mov
movsl
fwait
or
cltd
cs
das
fwait
pop
dec
ret
das
push
out
insl
jne
mov
inc
mov
xchg
arpl
mov
cli
ss
fdivrp
add
cli
mov
jl
shr
mov
push
iret
stos
mov
or
sbb
add
sub
andb
xor
dec
mov
xchg
inc
adc
les
jb
pop
xchg
lret
scas
pop
push
fwait
and
ret
jno
in
sub
inc
add
fs
adc
xor
sub
add
sbb
testl
lock
inc
cwtl
sub
inc
xchg
and
mov
jae
in
pop
cmp
dec
pop
push
ljmp
adc
data16
les
push
data16
sbb
ja
aas
push
push
inc
add
mov
sub
mov
in
mov
adc
xor
add
aaa
icebp
push
orb
pop
ja
cmp
push
fists
nop
in
jge
mov
jne
loop
xchg
fldt
aad
sbb
idivl
adc
lods
loop
pop
jae
jb
arpl
cmpsl
and
push
jl
pop
sub
lods
add
lahf
fdivrl
cmpsb
mov
out
mov
cltd
jne,pt
idivl
jno
je
cmpsb
stos
inc
in
jg
cld
mov
or
je
sti
test
jge
sub
roll
loopne
js
inc
in
test
or
jb
fidivs
sub
fiaddl
loope
jecxz
in
mov
icebp
int3
fwait
mov
add
js
jae
test
pop
sbb
cmp
add
aaa
adc
mov
rcl
sbb
add
xchg
inc
lock
out
subl
stos
adc
adc
pop
mov
or
std
fwait
jmp
push
and
xchg
loop
mov
adc
xchg
dec
or
cld
and
stos
dec
movsl
or
cmpsl
push
cmc
subl
daa
jmp
sbb
dec
pushf
inc
inc
xor
mov
jb
out
mov
dec
lret
leave
lcall
jle
cmpsb
jns
loopne
add
mov
ss
test
imul
cs
pop
mov
fiadds
sbb
pusha
stos
sbb
jb
dec
stc
xchg
and
pushf
into
jge
pop
leave
inc
inc
push
pop
mov
xchg
pop
push
push
mov
jb
es
dec
dec
jg
in
clc
into
jns
and
scas
jp
out
pushf
inc
and
inc
cmp
into
sbb
xchg
movsl
push
push
mov
xchg
xchg
pusha
shlb
arpl
xor
adc
add
push
inc
cmp
repnz
pop
cmp
movsb
pop
je
out
ficoml
cltd
mov
sub
mov
arpl
jne
inc
xchg
add
xor
xchg
jae
aad
or
sub
push
pop
xor
push
pop
push
roll
in
sub
outsl
jne
jecxz
fisubs
enter
pop
inc
push
mulb
sub
push
into
jmp
jnp
aam
stos
sbb
fidivl
fwait
xlat
insb
lret
sub
sub
xor
pop
sbb
sub
or
add
out
scas
int3
iret
mov
xchg
or
add
jae
imulb
add
addr16
movsl
xchg
lock
in
cmp
in
inc
ret
pop
add
arpl
xchg
sub
aaa
lock
push
aad
push
or
mov
adc
adc
add
adc
mov
lret
pushf
in
jecxz
mov
sub
mov
xor
scas
add
int
lret
mov
mov
jns
hlt
lods
pop
dec
lea
dec
pop
push
push
pop
push
lds
dec
or
incb
hlt
adc
test
push
std
sar
rcrb
ds
jnp
add
aam
xor
mov
cmp
jae
ret
mov
outsb
das
fnstcw
xchg
jbe
bound
hlt
jno
or
dec
cmpsb
jmp
test
loopne
sub
lahf
jne
aas
clc
dec
lods
in
pop
adc
fucomi
and
in
sub
repnz
mov
popa
iret
and
lea
mov
mov
leave
sarl
jmp
add
xorl
lds
jnp
hlt
cmpsl
sub
bound
cs
pop
mov
dec
loop
mov
and
push
fmuls
test
cltd
insb
test
inc
inc
std
sub
inc
je
or
jnp
jge
mov
shll
and
mov
sbb
mov
jp
push
popa
in
jp
mov
inc
mov
xchg
subb
into
jns
out
mov
pop
aad
fisttpll
xchg
jl
loopne
ret
out
push
jl
icebp
sub
push
test
icebp
ficoml
aaa
sbb
push
mov
sub
sbbl
xchg
push
imul
lods
inc
lret
or
sbb
add
jmp
sti
mov
xchg
inc
cmp
cs
dec
out
js
into
in
adc
into
and
sub
or
xchg
subl
stos
dec
bound
fnstenv
arpl
ficompl
aas
inc
xchg
aad
out
ds
xchg
subb
sbbl
loop
dec
dec
testl
push
xchg
adc
lock
lods
sbb
add
push
orl
filds
nop
cmp
xor
test
mov
mov
jge
xchg
sahf
aam
nop
fcomp
loope
cmp
aad
add
xlat
inc
mov
sub
jne
xchg
cwtl
mov
sbb
stos
jne
sub
pop
lcall
jle
pop
scas
enter
xchg
or
pop
repnz
aas
fcomi
out
sub
loope
hlt
es
pop
xlat
cmp
or
jmp
dec
jmp
fwait
or
hlt
insb
into
cmp
push
or
stos
dec
std
lock
dec
sarb
xchg
repz
mov
dec
push
insb
sbb
dec
mov
int3
loop
iret
jle
sub
clc
iret
lea
rcrb
dec
ret
sahf
mov
lock
aas
cmp
pop
xchg
fwait
into
xor
push
jbe
pmullw
test
pushf
sbb
mov
cmp
lret
or
movsb
out
outsl
mov
out
mov
or
jl
aam
pop
add
imul
fwait
push
pop
lds
aas
stos
xchg
jmp
mov
shlb
sub
loop
mov
stos
cmpsb
mov
mov
in
mov
add
lods
addr16
jbe
test
cmp
in
adc
mov
pop
xchg
and
fsubrs
cmpl
mov
leave
dec
ja
fsubr
movsb
xchg
ficompl
std
push
xchg
mov
xchg
adc
insb
addr16
xchg
push
sti
push
jno
adc
enter
int3
test
cmp
xor
shrb
fildll
cmp
cs
jo
sub
xchg
mov
cmc
push
shll
pop
jnp
mov
jg
push
and
lods
xchg
lock
ja
sbb
sub
jl
xchg
sub
fmul
aad
enter
inc
icebp
push
scas
sti
sbb
into
cmp
loop
xlat
dec
pusha
enter
stc
sbb
lock
lcall
fcmovne
fwait
and
lock
sti
test
aas
jp
test
lods
fcoml
aas
into
and
int3
out
mov
mov
jnp
xor
push
loop
xchg
pushf
sub
clc
jl
addr16
out
pop
push
add
mov
movsl
dec
repz
add
ja
sbb
insb
jle
jo
jb
ljmp
push
cmp
jmp
xor
cmp
cmp
sbb
lahf
or
cmp
lock
mov
inc
stos
mov
outsl
int
cmp
fdivrs
lret
fsubs
in
or
test
out
imul
xchg
fs
push
adc
jb
xor
mov
inc
pop
lock
fnstcw
inc
fmuls
out
outsl
cmpsb
gs
sub
xor
fwait
loop
dec
xchg
cltd
pop
fbstp
jb
jecxz
jb
test
inc
xchg
divb
or
push
lea
in
push
inc
in
ljmp
jb
outsl
cmp
dec
cli
inc
lds
pop
mov
xorl
push
popf
in
scas
pop
test
mov
mov
sub
and
sub
fs
sub
in
xchg
in
pop
jp
jno
repnz
stc
push
mov
lahf
lret
fxam
push
sub
leave
lret
mov
mov
cmpsl
cmp
sbb
aad
inc
dec
jno
test
repz
dec
add
inc
pop
jno
mov
push
push
lcall
hlt
icebp
dec
fcmove
mov
cmp
jg
mov
loope
jp
out
pop
mov
psadbw
orb
dec
shl
mov
test
mov
jno
xchg
adc
mov
outsl
lods
stos
sbb
aad
nop
xchg
sqrtps
dec
fs
call
jne
inc
outsl
fidivrs
xchg
jne
test
sub
and
fdivrs
cmp
test
fbld
rcrl
out
add
bound
fld
mov
lret
cmp
sub
loopne
fwait
or
and
cltd
test
shl
shlb
ficompl
into
sbb
movsb
and
xor
dec
inc
xchg
and
sbb
lret
out
outsb
sub
mov
dec
sbb
mov
add
fwait
incl
mov
sahf
insb
xchg
dec
dec
xchg
ror
mov
inc
lret
fwait
xchg
pushf
xor
shr
sbb
flds
pop
arpl
xchg
jl
mov
subb
call
cli
cmp
in
push
mov
icebp
pop
addr16
pop
sub
hlt
adc
dec
loop
xor
loopne
out
in
dec
jo
adc
out
ds
shrl
add
stos
mov
jae
loope
aas
add
lcall
adc
test
inc
stos
sahf
outsl
scas
jmp
lret
hlt
mov
stos
popf
push
cli
mov
mov
jecxz
imul
cmp
push
mov
mov
aaa
ds
pop
les
push
pop
sub
sarb
and
push
cltd
lea
cmc
push
loope
sbb
dec
leave
stos
jnp
mov
fwait
inc
lds
fwait
xchg
pminub
lods
call
enter
dec
cmp
sbb
daa
xchg
sbb
jns
enter
and
sub
lret
adc
cmp
enter
push
adc
call
and
cmpsl
inc
or
inc
sbb
xchg
mov
push
and
push
xor
adc
mov
mov
push
test
mov
aad
inc
push
cltd
jno
mulb
repz
test
push
sub
xor
insl
and
arpl
push
cmpsl
xlat
in
ljmp
daa
pop
sbb
mov
xchg
sbb
mov
in
jno
cli
out
pop
push
push
push
xor
sbb
adc
cmc
data16
shrb
push
decb
ret
jb
mov
jg
daa
out
lods
movsl
test
repnz
and
rorb
mov
mov
pop
xchg
pop
ss
cmp
out
hlt
insb
int
adc
push
inc
mov
lcall
int3
and
add
mov
sbb
mov
les
adc
xchg
jns
filds
cmpsb
push
mov
mov
sub
mov
jnp
inc
pop
sub
pop
popf
test
movsl
xor
jae
or
lret
ja
and
pop
test
bound
pop
and
pop
mov
add
int
pushf
lahf
pusha
mov
movsb
mov
and
mov
pusha
cmp
or
xor
std
or
inc
mov
mov
adc
xor
rol
fstps
pop
dec
push
inc
imul
repz
pop
mov
sahf
pop
pusha
push
push
icebp
push
push
lret
icebp
rorb
mov
rcr
add
jno
cmp
cmpsb
ret
push
mov
push
sbb
enter
dec
in
aaa
cmp
stos
inc
lahf
cld
adc
xor
rcll
scas
out
addr16
test
jne
xchg
and
repnz
pop
pop
mov
insb
mov
mov
sarl
dec
mov
push
cld
cli
sub
arpl
mov
cmp
cmp
movsb
or
movsl
push
aaa
mov
lds
lahf
enter
cmp
stc
clc
mov
xchg
in
xor
repnz
pop
dec
jl
inc
mov
daa
mov
or
lea
xchg
jno
sbb
jo
sarl
inc
lods
pusha
movb
jnp
xchg
ja
ja
lea
pop
dec
mov
adc
mov
cld
xchg
loopne
jg
xlat
xchg
cmpsl
ds
dec
loopne
jo
insl
jle
fldcw
xor
pop
jae
xor
and
aas
arpl
testb
test
pop
inc
in
or
cltd
xchg
mov
mov
push
popf
mov
jg
lret
ss
rcrb
aad
xor
add
jle
dec
xchg
inc
scas
mov
testl
xor
imul
push
xchg
and
push
daa
popf
fistps
pop
lods
or
sbb
invd
fstp
mov
jno
insl
jno
mov
push
push
or
imul
push
bound
popf
xchg
and
in
scas
mov
data16
movsb
push
arpl
inc
lock
lahf
scas
jo
lret
dec
adc
test
std
mov
mov
pusha
sarl
or
xchg
push
cwtl
add
jbe
into
into
into
sub
jo
and
push
push
sahf
xchg
dec
xlat
gs
push
dec
xchg
sbb
sub
repz
test
clc
mov
jl
inc
jbe
inc
rolb
test
rcrl
xchg
roll
jb
imull
xchg
nop
mov
pop
mov
fcoms
xchg
bound
jae
xor
mov
test
fwait
clc
int3
fdivl
sbb
je
mov
xchg
or
add
xchg
mov
out
jbe
mov
mov
push
scas
push
scas
mov
lret
sbb
pusha
ror
iret
daa
orb
mov
jge
push
lods
imul
lods
mov
ficompl
sub
sti
add
cltd
int
xchg
inc
jp
xchg
ja
hlt
xor
icebp
addr16
push
xchg
test
or
jmp
mov
fidivs
adc
test
adc
stc
inc
out
or
lcall
mov
jo
test
mov
and
fwait
enter
aam
xchg
es
filds
test
xchg
nop
mov
push
add
add
scas
in
pop
jg
fildl
pop
push
icebp
pop
push
cmp
lahf
andb
iret
pop
sub
mov
or
mov
in
icebp
stos
pop
cli
rol
add
push
fcompl
xor
subl
inc
andl
sbb
repz
mov
outsl
out
pop
loope
xorb
dec
nop
and
cmp
aas
subb
and
lret
sbb
out
sbb
out
stos
lock
rcrb
outsl
call
dec
scas
xchg
gs
add
test
leave
dec
jo
gs
push
add
cmpsb
xor
fnsave
jbe
cmp
xchg
inc
int
mov
inc
fistl
jo
adc
lret
adc
loopne
pop
aaa
loop
daa
out
out
sti
rcr
push
xchg
pop
mov
sub
push
daa
ja
inc
cltd
pop
lods
pop
js
bound
jmp
push
gs
jmp
cmp
lea
out
rdtsc
mov
in
mov
test
pop
shlb
dec
or
pop
lock
int
pop
jmp
rclb
insl
mov
jbe
daa
pop
push
out
shlb
pop
push
test
cmp
push
fstpl
imul
dec
or
pushf
inc
dec
mov
aas
xor
dec
pusha
mov
push
bound
in
mov
aas
jbe
out
fldcw
enter
cmp
out
pop
mov
in
adc
test
in
pushf
insb
cmp
pop
cmp
add
shlb
inc
push
dec
jb
dec
aaa
sub
out
outsl
addr16
lret
lds
pop
or
pop
sbb
mov
fcoml
inc
cwtl
xchg
pop
in
jnp
push
push
sub
jbe
fildll
xchg
jne
je
lds
dec
bswap
xchg
out
stos
mov
stos
pop
pop
aad
scas
add
jge
sti
enter
jae
mov
jne
dec
sarb
out
test
mov
fcoms
push
popf
shr
ret
mov
add
mov
incl
fwait
out
cmc
xchg
lock
ljmp
flds
out
push
or
jno
pop
in
dec
adc
fstps
cltd
in
sbb
test
into
test
push
imul
sbb
push
or
mov
rorl
enter
and
es
pop
push
pop
cwtl
mov
jmp
out
shrb
lcall
xchg
dec
pop
xor
cwtl
add
jns
cmp
fsubs
lea
mov
sbb
mov
dec
bound
add
mov
adc
dec
enter
movsb
lahf
sarl
nop
cmp
pop
inc
nop
jge
jge
hlt
cld
push
push
xchg
rcl
mov
mov
lret
and
or
int3
arpl
or
sbb
les
mov
pusha
pop
incl
push
pop
mov
mov
imulb
jge
clc
in
mov
pop
pop
lock
jne
mov
icebp
xchg
sahf
xor
jle
fcoml
xor
outsl
xchg
pop
sub
sbb
mov
mov
add
sub
mov
or
pop
xchg
imul
dec
inc
shrl
loop
xchg
out
inc
cmp
sti
and
xchg
jno
in
mov
jno
int3
push
pop
adc
inc
sbb
cmp
outsl
sti
fwait
push
je
xchg
cmp
jbe
mov
adc
mov
push
cltd
ds
and
cmc
push
sbb
jp
jmp
out
pop
mov
int
push
jb
cmp
jb
mov
popa
push
jnp
xor
mov
sub
pusha
fisttps
lahf
sub
cmpsb
cmp
pop
pushf
sti
arpl
loope
pop
pop
dec
push
inc
jg
stc
cltd
loopne
jbe
sub
adc
incb
or
sbb
shll
jmp
das
outsb
imul
sub
mov
mov
fisttpl
mov
lea
popf
aad
adcl
sub
mov
mov
movsl
inc
es
repz
jns
mov
in
fistps
jo
aam
add
outsl
lcall
adc
inc
or
or
data16
jbe
clc
xlat
mov
mov
addr16
mov
jge
and
mov
mov
and
fnstsw
or
ljmp
adc
dec
mov
repz
mov
int
mov
ljmp
fimull
rolb
xchg
ds
test
pop
stc
bound
popf
mov
outsl
push
mov
shll
mov
mov
cmp
mov
push
imull
sbb
mov
lcall
mov
adc
aas
fiaddl
mov
push
dec
xchg
pop
imul
rcl
outsl
lods
pop
daa
mov
data16
pop
adcl
andl
xchg
or
fs
loope
clc
into
test
das
in
push
fisubrs
pop
pop
pop
dec
out
mov
or
push
sub
cmpsl
lahf
or
or
push
inc
xchg
testl
jp
mov
cmc
lahf
mov
xor
fstl
lret
xlat
lods
hlt
xstore-rng
cmpsl
ret
mov
cmpsb
push
xchg
push
jle
orb
xchg
movsb
mov
push
cmp
into
cwtl
jns
mov
les
xor
jns
jl
xor
into
or
xor
cmp
pushf
push
inc
add
adc
dec
adc
push
nop
mov
arpl
cmpsb
xchg
icebp
les
xchg
push
fldl
or
loop
loop
sub
loopne
mov
ret
addr16
aam
out
sbb
mov
inc
stos
pusha
rcrb
xchg
sbb
int
fistpl
loop
mov
mov
xchg
xor
mov
daa
xorb
add
push
lahf
xor
gs
mov
je
repnz
mov
test
sahf
popf
clc
or
or
cmc
out
outsl
or
icebp
xor
psrlq
mov
popa
loopne
stos
mov
sbb
outsl
or
lods
push
add
dec
les
xchg
push
imul
bnd
insl
xor
cmpsl
lock
sahf
nop
shll
leave
and
std
out
fsubrs
enter
mov
xchg
push
rcrl
mov
outsb
mov
das
mov
lea
mov
pushf
xor
clc
xor
xchg
faddp
in
shl
xor
or
sub
popa
imul
insb
xchg
adc
dec
or
cmp
jmp
or
movsb
sti
jmp
mov
mov
test
lods
lds
es
cmp
lcall
pop
fmull
xor
dec
dec
aam
xchg
gs
mov
xchg
test
sbb
loope
mov
cmpsl
cmp
lahf
mov
pop
add
xlat
adc
int3
inc
fistl
push
add
fwait
push
adc
inc
lret
imul
fiaddl
mov
jmp
add
repnz
ja
aad
dec
inc
cmp
test
xchg
mov
test
iret
jmp
loop
xor
or
out
int3
jne
cld
clc
mov
fistps
cmp
sub
add
ror
xchg
sub
sbb
xchg
into
pop
lahf
fcomi
mov
jl
xor
mov
xchg
push
push
jo
mov
orb
push
lret
shlb
cmc
xchg
lret
inc
lret
pop
pop
mov
mov
test
sbb
data16
out
dec
xor
and
call
jmp
insl
popa
into
cmc
cmp
pop
or
sbb
push
cmpsl
popa
and
movsb
mov
or
sub
sub
mov
iret
mov
add
pop
js
cmp
pop
push
dec
pop
sbb
mov
sbb
lahf
icebp
push
xchg
popa
movsbl
inc
clc
push
xchg
jne
into
arpl
sub
test
mov
sbb
lds
lds
std
int
push
lods
lret
es
inc
clc
mov
push
fdivrl
sarb
flds
inc
sbb
ss
call
adc
inc
sbb
int3
imul
sub
mov
imull
and
call
fwait
sbb
stos
mov
gs
push
ja
mov
loopne
dec
sbbl
stos
push
mov
pop
mov
mov
stos
cmp
pusha
test
sti
jo
out
or
cmpsb
inc
icebp
push
ss
int3
insb
in
mov
push
fs
fidivrs
fistps
dec
pop
mov
lret
mov
sub
add
adc
xorb
sub
lret
cli
inc
jno
loopne
cmc
rolb
les
rcr
xchg
add
andb
jo
jg
adc
adc
testl
movsb
push
inc
adc
jno
into
mov
fcomps
out
mov
push
cmp
adc
in
jno
inc
leave
out
adc
inc
cmp
lret
aaa
and
fnstcw
fcompl
cmp
fs
mov
or
sub
adc
jle
inc
mov
inc
imul
pop
pusha
jno
fcomp
jne
jae
in
jo
sti
inc
popa
and
idiv
inc
sbb
test
add
add
cmp
cmpsl
push
fisttpl
repz
cltd
std
lret
negl
leave
pop
xlat
ret
push
mov
sub
add
stos
add
inc
stos
mov
sub
push
addl
ds
cmc
cmc
xchg
mov
shll
ret
cmp
test
dec
fwait
mov
stos
inc
jb
js
cmp
mov
shlb
cmp
out
test
pop
test
incl
scas
inc
mov
or
mov
push
fs
inc
jp
iret
mov
mov
insl
js
and
pop
icebp
ds
in
std
aam
mov
gs
mov
daa
rcrl
in
mov
rorl
cmc
je
mov
mov
mov
stos
mov
sbb
test
cmpsb
mov
or
sbb
inc
sbb
pop
test
scas
adc
xchg
shr
movsw
push
mov
divb
xchg
in
imul
sbb
sub
int3
fsubrl
add
clc
xor
mov
xchg
mov
or
jg
popf
orl
loope
add
lods
mov
mov
add
mov
push
dec
add
int
adc
mov
dec
int
cmp
add
xor
push
sub
xchg
movsl
xchg
mov
push
iret
inc
sti
lcall
mov
ret
andl
imul
enter
out
cmp
mov
mov
ret
cli
mov
jb
mov
stos
and
ljmp
loop
cmp
pop
xchg
and
sbb
push
ret
sbb
mov
pop
xchg
out
aad
fwait
mov
xor
orl
imull
sub
movb
aas
test
shlb
or
mov
or
push
arpl
stc
jns
push
add
andl
mov
mov
ljmp
ss
mov
in
add
cmp
push
cmp
sub
jecxz
into
mov
call
std
push
dec
rcll
filds
jbe
push
adc
jns
int3
pop
insb
shlb
out
mov
loope
mov
decb
repnz
fisttps
mov
mov
ret
cwtl
testl
dec
aam
test
cli
es
pop
sub
rolb
push
mov
add
lds
jl
fcmovb
fs
and
cwtl
adc
imul
sbb
lcall
add
or
cmp
inc
outsl
enter
inc
jne
sub
popf
fdivl
mov
lret
add
je,pt
rdpmc
cmpsb
mov
arpl
fdivs
leave
or
movsl
push
arpl
add
cmc
sbb
jo
inc
and
lea
pusha
jns
adc
sub
mov
xchg
add
iret
cmp
jns
xchg
in
loopne
or
lahf
adc
mov
test
xorl
inc
int3
rclb
push
and
push
popf
dec
gs
cld
lea
test
sub
punpckldq
gs
daa
lods
fwait
cmc
mov
out
mov
xor
sbb
stc
nop
movsb
lret
movsl
adc
out
cmp
push
stc
test
std
mov
push
sub
jl
mov
mov
arpl
outsl
roll
pusha
test
cmpsl
cmp
jnp
mov
enter
loop
adc
ret
mov
mov
scas
iret
shl
in
mov
popf
xorb
add
inc
fildl
shl
jbe
xchg
sub
mov
test
jmp
stc
aaa
insl
add
inc
push
fndisi(8087
jns
call
and
insb
jle
push
test
mov
orl
jge
scas
mov
rclb
mov
ljmp
adc
lds
pop
gs
mov
inc
insl
jne
and
sub
xchg
adc
or
cmp
hlt
add
cmpxchg
jge
pop
sub
xchg
stc
add
xchg
test
push
and
add
jl
lret
das
imul
sbb
sarb
into
pop
xchg
pop
insl
dec
dec
xchg
mov
xor
fwait
cmpsl
cwtl
sub
mov
lret
andb
xchg
add
pop
mov
or
dec
xor
lret
xchg
loope
add
add
add
lods
fwait
adc
popf
xchg
xor
popa
xor
inc
shrl
xlat
jg
lds
push
inc
lods
adc
subl
push
loopne
or
xor
aaa
in
aaa
push
sbb
mov
insb
cmpsb
cmp
fwait
scas
ss
cmp
push
js
jnp
push
enter
mov
jb
push
or
push
dec
pop
popf
or
jl
jns
jne
sahf
mov
pop
jge
lcall
cwtl
xchg
out
ret
mov
xchg
jno
dec
jbe
inc
cmp
jl
pop
into
test
jl
jp
pop
cmp
mov
mov
ret
imul
adc
jbe
push
stos
jns
sbb
fwait
mov
cli
jg
mov
or
cmp
enter
shll
setl
rclb
sbb
sbb
scas
test
in
and
fsts
sbb
mov
push
jns
adc
out
push
repz
adc
jb
push
adc
cmpsb
cmp
iret
inc
loop
cmpsb
jecxz
cwtl
adc
and
leave
ja
dec
cltd
aam
sbb
jnp
cmc
push
scas
pop
sbb
sub
subl
cli
xchg
cmp
cmp
xchg
dec
jo
je
popf
push
add
sub
mov
cli
add
sub
fisubl
mov
dec
adc
mov
sbb
push
xchg
pusha
sbb
orb
mov
and
xchg
jae
xlat
adc
pop
mov
xchg
rorb
inc
rcrb
adc
jno
xchg
inc
std
out
dec
stc
adcb
unpcklps
xchg
lods
std
je
cmp
scas
add
stc
sbbb
inc
mov
and
int3
pop
jge
push
cli
and
imul
daa
mov
pop
lods
adc
mov
rorb
mov
jl
insl
add
fs
loopne
xchg
into
mov
cmp
stos
mov
test
or
dec
jo
mov
fcoms
mov
jo
imul
xor
jnp
fwait
sub
add
adc
xor
sar
ja
insb
in
outsb
add
push
xchg
loopne
adc
add
jae
sbb
insb
iret
idivb
dec
sbb
fs
push
in
mov
lahf
push
jge
popa
dec
or
sbb
and
inc
jo
fnstsw
jge
lods
rclb
nop
repnz
ss
push
dec
addl
daa
mov
movsb
movsb
pop
mov
dec
aam
lret
out
sub
mov
sbb
xchg
add
imul
mov
mov
inc
in
push
test
mov
and
fwait
xchg
int3
dec
or
lret
dec
pop
sbb
into
lea
shlb
mov
push
inc
cmpl
fcompl
push
mov
rorb
cmc
in
mov
data16
repnz
popf
in
cmp
inc
xchg
adc
dec
mov
jnp
lahf
sbb
adc
jo
lcall
push
adc
sub
ja
push
dec
inc
mov
cmp
orb
push
lock
jnp
jmp
mov
repz
jecxz
test
cs
jbe
addl
mov
pop
xchg
pop
lock
fiaddl
cmp
add
jno
dec
sub
mov
hlt
rcrb
mov
stos
sbb
loope
mov
add
gs
ficompl
ror
dec
in
movsb
pop
int3
and
sub
out
pop
pop
jne
and
xor
lods
sub
xchg
clc
add
dec
jne
xchg
cmc
sub
pop
inc
jge
cwtl
out
lock
xchg
add
cli
and
dec
insb
mov
dec
int
outsb
jge
insb
mov
cmp
ret
or
rcrl
mov
cmp
push
dec
mov
push
lret
sbb
push
clc
mov
and
and
or
xchg
das
dec
inc
fistpll
nop
shrl
pop
lea
fmuls
xchg
dec
mov
je
push
ret
divb
sub
mov
les
mov
pop
fwait
mov
outsb
rcl
addr16
stc
jle
lods
setge
jmp
sar
lds
push
xor
or
mov
adc
and
push
sub
xchg
rcr
adc
test
pop
sub
or
incl
jmp
loope
cmpsb
adc
ret
inc
adc
mov
sub
adc
out
dec
jae
jns
scas
sti
iret
mov
inc
movb
sbb
das
xor
mov
jo
daa
mov
lahf
adc
imul
popf
lds
in
pop
mov
rclb
rcrl
cmp
pop
negl
orb
fwait
andl
pop
les
jne
mov
repz
adc
imul
movzbl
jge
adc
in
and
push
pop
mov
pop
push
and
imul
shll
sbb
mov
pushf
stos
sbb
cmc
mov
gs
notl
jno
call
mov
lret
dec
aas
add
out
jle
sbb
or
xor
je
push
push
push
sub
xchg
icebp
out
sbb
dec
add
stos
jl
push
dec
jae
add
out
test
shll
pop
add
and
cmpsl
jae
pop
and
iret
pusha
sbb
repz
push
fs
rcrl
dec
popa
xor
test
es
sub
fsubrl
sbb
lcall
test
stos
in
in
leave
ds
lret
sub
jmp
call
xchg
mov
xor
push
les
out
push
xchg
scas
notb
and
jb
jnp
in
mov
and
out
js
pop
and
pusha
cltd
sub
cltd
imul
push
hlt
xchg
inc
mov
out
xchg
inc
mov
adc
sahf
and
adc
push
xchg
cmp
jne
lods
and
inc
push
arpl
mov
xchg
negl
stc
inc
out
sub
add
mov
sarb
lods
ds
xchg
ljmp
lock
adc
adc
xchg
jnp
or
jnp
pusha
xchg
mov
inc
movsb
pop
push
mov
mov
imul
cmp
mov
cs
push
inc
xchg
in
andnps
fdivs
sub
adc
xor
popa
in
sub
sbb
std
dec
movsb
cwtl
into
in
push
into
adc
mov
mov
fisttpl
push
mov
mov
das
loop
adc
mov
lods
fwait
mov
xor
inc
add
loope
xchg
inc
cmc
lods
sahf
or
inc
ficomps
dec
aad
test
out
add
gs
mov
jmp
sub
out
outsl
data16
pop
scas
sbb
mov
mov
adc
pop
ror
test
mov
pop
or
aam
add
lcall
xchg
push
mov
addb
sbbl
sub
or
dec
and
mov
ret
push
mov
mov
std
push
out
aaa
fwait
inc
pushf
cmp
imul
sbbl
add
adc
cmp
sub
xchg
mov
pop
sbb
or
xorl
xlat
mov
add
adc
and
loopne
mov
ja
and
push
mov
mov
jl
pop
mov
or
mov
xor
leave
cs
lret
sti
ds
addr16
jmp
mov
push
std
in
sbb
fisttpll
add
ja
sbb
xor
mov
std
cmp
out
cmpsb
test
dec
add
jae
stos
inc
push
inc
xor
mov
mov
sarl
imul
push
es
cmp
push
jb
mov
push
insl
popa
dec
inc
sbb
ret
and
sbb
cmp
mov
dec
or
sub
test
pusha
aas
daa
mov
hlt
fcompl
inc
outsl
push
or
and
push
mov
jae
in
leave
cmp
addr16
xor
repnz
mov
mov
pop
ror
mov
or
sub
pop
repnz
int3
xchg
jno
fiadds
movsl
in
xchg
mov
jl
pop
psrlq
fisubrl
sbb
int
xlat
ljmp
pop
lea
lret
stc
mov
movsb
adc
std
pop
pop
mov
mov
call
scas
ret
fwait
repz
sbb
daa
xor
or
push
les
inc
and
pop
cli
or
fsubrl
cmp
sub
jns
inc
lahf
aam
adc
jge
push
daa
pop
and
pop
push
outsb
sbb
mov
or
jne
enter
out
xor
cs
push
int
push
mov
mov
in
out
push
jne
adc
adc
sub
xchg
jb
or
mov
mov
push
pop
loope
xlat
pop
ficoms
mov
in
outsb
xor
pushf
out
cmc
repz
jne
xchg
call
add
dec
es
loop
add
testl
mov
or
or
in
mov
jbe
je
mov
imul
pushf
popa
inc
inc
xchg
add
mov
cmp
nop
popf
cli
pusha
push
push
cmp
fdivs
sbb
cmc
fwait
popa
rcrb
xorb
jne
in
mov
mov
mov
mov
adc
sbb
mov
pushf
dec
inc
push
lea
fwait
daa
jmp
repz
sub
pusha
jnp
cmp
adc
sbb
mov
adc
and
adc
clc
fsts
outsb
sub
mov
bound
test
adc
inc
lock
out
and
xchg
int
push
mov
testb
push
push
test
or
lods
jb
movaps
jmp
mov
push
xor
pop
inc
xchg
and
or
ds
stc
into
mov
add
mov
shlb
hlt
mov
push
fidivrs
mov
mov
cmp
add
pop
fadds
clc
inc
xchg
adc
dec
jp
jo
int3
mov
rorl
lea
mov
nop
adc
sarl
jo
adc
shlb
or
popa
js
mov
cmp
add
addr16
xchg
pop
adc
push
cld
pop
xlat
jo
cmp
xor
leave
testb
std
test
inc
arpl
and
insl
shll
addr16
mov
movsb
mov
dec
adcb
adc
nop
jo
sbb
daa
mov
xor
out
jmp
repnz
xchg
add
sbb
push
lret
and
mov
mov
sti
aam
push
xor
cmpsl
xor
mov
inc
xchg
inc
mov
push
js
pop
sub
sbb
cmp
imul
scas
sub
fs
shll
jne
repnz
mov
mov
test
and
lock
mov
je
xchg
adc
movsb
push
insb
cli
sbb
mov
jnp
jbe
stc
sti
jge
mul
xchg
mov
shrl
fdivrl
add
pusha
mov
outsb
ffree
sub
lret
jo
jno
xlat
enter
pushf
pop
cmpsb
pop
stos
xchg
xor
cmc
pop
movsl
into
mov
icebp
pusha
pop
seto
mov
test
pop
std
cmp
lods
dec
out
sub
xor
xchg
enter
cs
dec
cmpl
ljmp
leave
stc
lods
aas
mov
fists
cwtl
cmp
cmp
mov
and
addr16
jp
mov
or
gs
and
pop
aas
je
int
sub
in
in
cld
xchg
mov
test
lods
add
cli
push
bound
test
insl
cmp
fistpl
mov
sti
jle
push
push
ja
jne
cld
cmp
push
ret
stos
push
imul
or
out
push
fsubs
je
scas
push
cmp
enter
xchg
cmp
rclb
xchg
inc
mov
in
iret
add
cmp
leave
adc
popa
es
mov
inc
std
sbb
xchg
inc
cli
xchg
popa
sbb
lea
xlat
andl
push
repz
jl
ja
data16
orl
cld
testb
mov
sbb
fistps
scas
pusha
dec
or
push
or
add
mov
xchg
icebp
mov
and
ret
in
pop
subb
cmpl
mov
push
push
push
out
lds
fimull
stos
pushf
icebp
inc
dec
mov
aam
outsb
xor
gs
daa
dec
test
mov
cmp
shlb
movsl
add
gs
or
cmp
mov
hlt
ds
or
push
xchg
daa
sub
loop
jmp
aas
dec
sbb
dec
aad
dec
jb
mov
ljmp
and
les
mov
pusha
mov
sub
sub
cwtl
rclb
xor
pop
pop
mov
pushf
dec
fstl
in
out
and
daa
mov
pop
cli
xchg
push
mov
mov
push
or
es
or
push
jecxz
addr16
iret
cmpsb
in
mov
outsb
jmp
xchg
loope
mov
outsl
out
test
jo
mov
adc
push
into
orl
xor
stos
adc
iret
push
enter
mov
popa
test
cmp
inc
scas
push
adc
inc
mov
outsl
imul
xlat
fwait
cmp
cmpsb
or
mov
arpl
adc
fsubl
cmp
int3
push
push
shlb
dec
pop
mov
sbb
and
rorl
jae
mov
jp
stc
adc
maxps
mov
jno
jns
mov
iret
xchg
or
repz
jns
push
mov
je
or
mov
sbb
and
cs
mov
mov
rol
pop
mov
jb
popa
push
mov
popa
cwtl
cmp
fldcw
mov
iret
dec
push
xchg
jle
pushf
bound
dec
mov
add
pusha
and
fisubrl
lret
movsl
lahf
push
js
aaa
in
aam
shrb
sar
pop
inc
pop
jle
pop
mov
cmp
ret
cmp
call
pop
push
sbb
pop
sbb
pop
mov
mov
add
je
sbb
scas
mov
jecxz
out
pop
adcb
push
pop
pusha
xchg
mov
fnstsw
inc
mov
xchg
orb
add
mov
fcom
ds
lret
mov
xchg
cmpsl
orb
and
mov
fidivs
mov
aad
nop
jb
inc
mov
pop
lds
pop
popl
addr16
mov
arpl
lock
stc
push
adc
cmp
mov
and
fldcw
test
popf
rorl
mov
add
push
mov
daa
mov
aas
and
out
jp
mov
shrl
pushf
lahf
fwait
dec
loop
inc
mov
inc
addr16
mov
cmpb
enter
pop
dec
push
inc
mov
mov
mov
adc
out
rolb
add
jno
int
inc
and
lds
sbb
push
out
cwtd
fstpt
lods
ja
dec
cmpsl
pop
dec
dec
js
mov
push
cli
ret
cmpl
jg
shrl
cwtl
cmp
shlb
sbb
daa
mov
popf
fsubrl
fdivp
ss
lret
dec
xor
aas
mov
mov
insb
jge
mov
shl
and
add
test
pushf
mov
xchg
lods
fstl
mov
jo
jl
and
sub
pop
jmp
jne
enter
ret
lcall
mov
scas
imul
xor
fs
lcall
xchg
adc
fbld
add
sbb
jmp
aad
int3
int
imul
cmpsl
outsl
mov
pop
rolb
dec
pop
dec
lods
push
xchg
outsl
push
outsb
mov
repz
rclb
inc
out
adc
and
jo
dec
mov
into
std
cwtl
dec
pop
inc
pusha
dec
sub
adc
lock
fmul
psllq
in
clc
lret
push
test
inc
fisubl
xchg
repnz
pop
mov
leave
test
xchg
mov
mov
loop
arpl
add
sub
mov
sub
hlt
scas
inc
insb
mov
push
movsb
outsl
pop
push
cmp
cmp
cmp
dec
lods
inc
cmp
bnd
pop
sub
fstpl
out
sbb
xchg
dec
pop
sbbb
test
pop
xchg
cmc
fsubrl
scas
sbb
popa
push
push
jb
cld
rcll
fwait
pop
mov
sub
imul
mov
add
push
rorb
push
mov
cmp
lods
mov
test
pop
sbb
sub
xchg
int3
arpl
test
orl
xor
stos
lret
sub
push
or
fidivrl
pop
std
mov
and
pop
push
add
and
mov
mov
xor
in
out
lds
push
cld
out
push
rclb
mov
popa
cld
mov
cmp
test
cmp
mov
pop
hlt
pop
out
andb
jne
push
dec
in
bswap
xlat
daa
pop
repz
dec
xor
mov
xor
jg
arpl
call
push
out
lea
lahf
rorb
or
in
jb
test
jge
imul
movsb
pop
adc
punpckhbw
pop
sub
dec
adc
and
imul
or
je
sbb
pushl
dec
fs
fcomi
pop
dec
lahf
outsb
mov
pop
dec
out
aaa
std
mov
or
dec
dec
lahf
sbbl
psrad
sbb
shlb
pop
aam
rolb
out
cmp
loopne
andb
sbb
adc
cs
xchg
cli
pop
mov
jecxz
sub
sbb
inc
arpl
pop
test
jecxz
in
jl
jbe
inc
dec
cmp
sub
xchg
and
repz
sub
add
into
lods
cmp
bound
dec
lret
std
out
pop
xchg
stos
dec
lock
ret
pop
aad
xor
scas
pop
loope
pop
xor
sub
sbbl
jnp
push
mull
push
rcll
dec
pop
ds
lods
pop
add
addr16
ret
pusha
pop
jbe
dec
fs
mov
jle
jl
cmp
pop
loop
lea
pcmpgtd
popa
inc
push
jo
push
aam
popf
push
mov
and
sub
jp
popa
lds
mov
xchg
imul
sbb
add
cmpsl
out
pop
push
mov
inc
test
adc
push
ret
mov
pop
inc
adc
lcall
stos
and
in
ret
sahf
jns
mov
pop
lods
and
fimull
fsts
and
fnstsw
ret
addr16
mov
sub
jl
xchg
nop
aaa
push
mov
fs
xor
mov
jo
popf
push
xor
lods
adc
dec
lcall
xchg
loope
sub
jg
mov
sarb
push
xchg
inc
sbb
jg
shll
mov
mov
pop
push
mov
int
mov
dec
or
push
pop
adc
lret
sbb
int3
and
mov
out
inc
push
push
cmpsb
into
movsb
jge
cmpsl
cmp
sub
icebp
mov
loop
cmp
jb
into
ss
xor
cmp
das
aam
mov
dec
lcall
sub
add
sub
mov
cmp
fs
or
in
add
fnstcw
xchg
xlat
xchg
cmp
icebp
mov
xchg
cmp
enter
ret
inc
push
out
push
jg
and
add
cmc
xchg
subb
adc
cli
fbld
or
in
inc
inc
gs
pusha
rclb
inc
mov
outsl
in
or
cmp
psubusw
mov
lods
dec
xchg
add
xchg
add
mov
and
cmp
xchg
inc
adc
jnp
popa
sub
outsl
out
add
test
fimull
js
or
sbb
xlat
addr16
loope
sub
addr16
pop
mov
add
out
inc
loop
inc
inc
fnstsw
xchg
testw
dec
and
flds
movsl
push
pushf
sbb
sahf
addb
jnp
in
lds
cmpsl
lret
arpl
nop
adc
push
cmp
pop
and
imul
jmp
push
dec
test
pop
lds
sbb
xor
sub
or
xor
jmp
shll
or
shl
xchg
or
sar
or
sti
fildl
xchg
push
cld
dec
cltd
cld
pop
cltd
aaa
fwait
int3
mov
pop
or
je
add
jno
test
xchg
push
les
pop
pop
lods
loopne
jl
test
cmp
inc
mov
xchg
loope
ja
mov
movsl
push
adc
sbb
mov
xor
xor
aaa
jg
pop
test
dec
xor
sbb
jb
mov
fstl
cmp
lret
xor
push
je
pop
idivb
add
dec
mov
rcrb
icebp
insb
test
push
dec
mov
cmp
lcall
xor
push
inc
das
dec
cmp
iret
push
stos
pop
cwtl
dec
in
icebp
push
xchg
pop
daa
repnz
sbb
xchg
call
out
and
cmpsl
shrb
daa
fmull
sbb
inc
ret
sub
repz
pop
mov
mov
push
lcall
fsub
jg
lret
mov
xor
mov
call
cmp
lods
lods
jbe
or
adc
xor
mov
out
mov
ja
push
nop
and
aad
les
iret
es
repnz
inc
fidivrs
roll
int3
arpl
les
sar
aad
lods
ljmp
bound
fistpll
mov
lock
pop
pop
je
les
ljmp
mov
hlt
cmp
in
or
mov
loop
lcall
xchg
ds
jbe
repz
sbb
sub
mov
ljmp
hlt
scas
jmp
call
fbstp
nop
inc
push
cmp
fabs
pop
leave
mov
in
enter
fsubrl
xlat
test
mov
jmp
dec
addr16
cmp
adc
fsts
add
add
or
lock
call
leave
add
inc
inc
or
pusha
pusha
mov
pop
mov
cld
filds
xchg
inc
xchg
add
mov
ret
mov
or
adc
cmc
and
out
sbb
test
inc
sub
insl
inc
push
mov
ljmp
cmp
xchg
lret
call
mov
inc
enter
cmc
mov
mov
xchg
xor
mov
jl
adcl
push
and
ficomps
cmpsl
push
lds
pusha
pop
pop
aas
inc
xchg
clc
ljmp
lea
push
cld
adc
dec
pop
dec
aaa
pop
push
cmpsl
in
mov
sub
pop
pop
sbb
out
pop
mov
xor
cmp
aaa
push
and
addb
into
push
cmpsl
xor
add
mov
movsb
fimull
sbb
sub
mov
shl
test
jae
and
gs
pavgw
inc
and
cmp
mov
sarl
cmp
inc
or
hlt
inc
add
fdivl
mov
xchg
shrb
push
mov
ljmp
xor
lcall
repz
mov
push
dec
jle
lea
push
lods
and
mov
mov
xor
out
xor
lea
ljmp
or
xchg
add
frstor
and
jg
cmpsb
mov
scas
mov
inc
je
iret
in
xchg
push
mov
and
fildl
cmp
fsubrl
add
sbb
pop
imul
inc
pop
bound
add
pop
sub
pusha
jle
scas
sub
and
cmc
pusha
xchg
dec
xlat
insl
popa
jo
aas
test
push
sahf
sbb
imul
ficomps
pop
out
push
and
mov
sbb
dec
movsl
inc
nop
aam
into
pop
pushf
xchg
dec
xor
jg
jg
loope
sbb
std
stos
pop
push
sbb
pop
addr16
lret
insb
and
push
int
out
imull
sahf
aam
sbb
mov
addb
ljmp
add
or
int
out
inc
movsl
mov
or
sub
dec
xor
mov
das
inc
aad
jl
ss
or
xchg
pop
sub
pop
lcall
jmp
or
aaa
mov
aad
hlt
jb
push
add
jmp
jae
pop
sub
addr16
add
sbb
stc
jl
loope
lock
pop
ds
pop
out
mov
rorb
js
dec
ret
push
dec
adc
xor
in
or
aam
jecxz
push
dec
xlat
icebp
inc
std
dec
mov
or
mov
jo
inc
xor
jmp
jmp
push
test
mov
add
mov
pop
aaa
mov
mov
in
and
cmp
int3
xor
insb
sbb
repz
push
in
mov
jmp
jo
mov
adc
and
mov
mov
in
add
lcall
mov
fsubs
pop
push
mov
aam
ljmp
js
xor
sub
aaa
cltd
pop
pop
sub
adc
mov
jbe
push
test
jecxz
lahf
outsb
xor
stos
jnp
ds
cltd
xlat
cmpsb
mov
xor
xchg
ret
dec
and
ret
pop
xor
push
xorl
push
sti
lods
xor
fdivr
inc
xor
jge
lods
pop
enter
movsb
pop
push
push
rorl
push
add
pop
cmp
xorl
nop
pop
add
rclb
mov
inc
popf
loop
cltd
leave
hlt
lahf
aas
jp
mov
pop
inc
test
arpl
cltd
arpl
add
xchg
jbe
fdivl
rolb
rclb
aaa
scas
sub
imul
mov
shl
pop
and
out
loop
inc
inc
cltd
push
inc
add
out
and
mov
and
jnp
adc
xlat
push
fnstsw
call
popa
inc
push
stc
pcmpeqd
inc
fbstp
mov
setns
dec
jl
mov
push
inc
movsl
pop
test
fisubrs
pop
stos
shl
je
addl
push
cmpl
jmp
lahf
addr16
mov
cmp
repz
daa
popa
xchg
dec
jb
sub
mov
pop
and
push
nop
enter
icebp
enter
roll
xchg
jg
inc
cmpsb
jns
lods
jecxz
hlt
and
xor
xchg
mov
gs
pop
xor
xor
adc
push
dec
cmp
sahf
cmp
add
pop
sub
push
and
dec
aaa
jbe
mov
mov
or
rorb
pushf
inc
ss
dec
lods
mov
pusha
clc
sarb
adc
jl
aaa
leave
dec
cltd
ds
adc
and
xor
dec
cs
sbb
sti
push
out
mov
mov
pushf
rcl
cmp
inc
ds
adc
fcomp
filds
and
fnstenv
mov
in
mov
sub
lcall
fsubl
ja
jo
idivb
and
pop
or
mov
stos
mov
dec
dec
mov
es
mov
enter
sub
mov
pop
xchg
es
sbb
mov
std
add
add
cmc
adc
mov
inc
cmp
mov
jbe
sti
xchg
cmpl
test
out
test
mov
push
loopne
pop
jg
mov
scas
mov
jb
xchg
pop
pop
lret
xor
and
jns
dec
inc
xchg
push
in
cmp
sti
test
scas
out
mov
sbb
repnz
xchg
rolb
loopne
dec
and
push
and
add
das
icebp
cmp
fstpl
movl
push
fsubrl
mov
aas
sub
mov
mov
aaa
adc
sub
hlt
xor
cmp
xlat
js
subl
mov
lods
movb
inc
xchg
and
in
add
mov
insl
mov
pop
cmp
aad
testl
outsl
mov
mov
fs
ja
leave
push
jle
pop
push
ret
sbb
cmp
out
push
or
xchg
rcrb
jae
test
aas
ret
and
cld
dec
lods
cli
and
sahf
cmp
push
dec
mov
pop
xor
inc
enter
adc
lods
adc
int3
xor
outsl
inc
pop
push
mov
rorb
cmc
sti
jmp
pop
and
pop
fnstsw
add
or
cmp
pop
and
lret
adc
lock
lret
hlt
dec
jmp
push
or
fisubrl
dec
cmp
loop
fwait
mov
aas
nop
jle
or
or
adc
leave
imul
cli
daa
inc
mov
adc
fcomp
pop
sbb
push
sub
mov
push
sbb
rcl
pop
xor
aad
dec
fidivrs
and
lods
lcall
sbb
popa
loope
shl
jo
inc
xor
pop
xchg
ret
xchg
lcall
in
jbe
outsb
sbb
mov
mov
cmp
iret
popa
lret
jae
xchg
sub
sbb
insb
leave
int3
jno
inc
cmp
adc
insl
fwait
push
filds
adc
xchg
cs
xor
xor
push
xorl
add
in
fcomip
and
aad
comiss
dec
pop
xchg
loop
sbb
mov
pop
popf
inc
mov
gs
test
mov
jp,pt
in
pop
cmp
scas
push
ss
cmc
data16
mov
fidivrl
iret
cmp
xchg
mov
mov
xchg
js
popa
pop
xchg
leave
inc
jl
jns
xchg
in
sub
shrb
in
pop
inc
loope
pop
pop
fcmove
fstps
stos
jnp
xor
cmp
lcall
cwtl
in
add
out
call
in
jne
es
inc
test
xchg
sub
frstor
sarb
jg
pop
repz
in
iret
push
sbb
repz
or
add
mov
jne
sbb
test
loop
in
addr16
pop
ret
push
sub
jge
scas
xor
cmpsl
push
jae
aam
out
fstpt
push
cmc
fs
repz
add
xor
adc
fucom
es
pop
mov
pop
mov
imul
mov
pop
dec
test
mov
rolb
sbb
sti
push
popf
test
pop
mov
and
sub
loope
xlat
mov
lret
ja
lahf
lcall
jp
sbb
mov
das
fs
cmp
jl
popa
popa
jbe
pushf
mov
fwait
sbb
or
testb
lock
fimuls
inc
andb
loop
fnstcw
inc
pop
and
test
inc
out
sbb
adc
into
xor
loope
cmpsl
out
in
pop
sub
ds
fsubrs
fwait
xchg
xor
stc
int3
dec
pop
sub
jg
daa
xchg
xor
rcrl
xor
aaa
shll
inc
dec
or
sub
dec
mov
jge
dec
ja
adc
xchg
in
jg
xchg
ds
inc
mov
notb
js
mov
push
sbb
int
mov
daa
pop
push
aam
mov
dec
testl
addl
addr16
or
push
ret
push
mov
mov
mov
xor
test
in
adc
pop
push
pop
lds
rcrb
or
pop
push
push
push
daa
scas
xchg
in
in
xchg
test
mov
enter
mov
sbb
repnz
imul
inc
sub
lock
popf
lock
xor
stc
xchg
jnp
cmp
mov
subl
push
push
cmp
stc
and
fcmove
xor
movsb
add
into
hlt
dec
aad
jge
or
jns
repz
xor
mov
fadds
sti
xlat
sbb
mov
push
add
xchg
outsb
sub
gs
call
in
in
out
addr16
ror
jecxz
test
fsubrp
mov
sub
mov
sub
or
inc
inc
push
nop
daa
leave
push
adc
inc
nop
dec
xor
aaa
fwait
cmpsl
out
and
jns
jo
adc
iret
cmpsl
pop
cld
cmp
outsb
insl
es
std
mov
sbb
mov
xchg
push
dec
popf
xchg
xchg
test
fwait
shlb
stos
push
adc
add
push
mov
inc
mov
sub
data16
inc
jmp
lds
test
cwtl
je
cltd
daa
cmp
dec
scas
mov
or
inc
mov
sub
cmpsb
push
mov
and
inc
rorb
insl
aaa
adc
test
aas
js
mov
mov
les
repz
pusha
xchg
ret
lods
mov
inc
sti
sub
sub
push
stos
fs
pushl
sahf
lea
cmp
jnp
test
jnp
add
cwtl
or
dec
je
inc
jle
ret
jo
mov
sbb
addb
fsts
icebp
insb
daa
mov
lods
mov
xor
fcoml
cli
pushf
test
dec
mov
mov
dec
jno
dec
sub
pop
ss
and
mov
insl
add
mov
jne
cs
cmovle
xchg
aas
jp
cs
lret
add
push
or
test
shr
pop
jns
rcrl
mov
mov
mov
leave
lods
mov
mov
push
les
jp
int3
mov
lods
out
jno
xor
imul
add
pusha
xor
fcoms
shlb
hlt
cmp
outsl
push
cmpsl
out
mov
in
adc
repz
ficoms
and
fnsave
cmp
mov
scas
out
xchg
mov
mov
leave
xor
pop
faddl
pop
push
inc
push
inc
sub
push
push
out
mov
sbb
ret
ljmp
loopne
das
stc
lret
push
aaa
fldcw
aam
in
hlt
and
or
adcb
mov
dec
sahf
mov
sbb
int
cmpsl
xlat
cmc
imul
lds
adc
loopne
lea
jl
shlb
and
das
sbb
push
mov
sub
push
mov
inc
stos
jge
test
and
xchg
test
push
int
pmuludq
jmp
mov
mov
jg
repnz
inc
out
shr
movsb
and
adc
imul
pop
iret
and
lods
shrl
push
jg
cmpsb
sub
and
sub
add
adc
inc
and
pop
mov
mov
pop
out
adc
clc
mov
in
jmp
mov
pop
aam
inc
or
ja
test
cmp
xor
out
or
sbbl
cld
lods
cmp
inc
dec
cmpsl
les
add
gs
js
je
mov
sarl
adc
lock
jp
popa
cmc
test
outsb
cmc
push
dec
cmpsl
lods
sub
mov
negl
and
inc
mov
mov
xchg
xor
dec
mov
adc
pop
movsb
sbb
int
mov
cmc
cmp
dec
inc
mov
mov
pushf
or
mov
push
dec
or
fs
jecxz
stc
lods
xor
xor
or
mov
jge
xchg
mov
hlt
fldcw
push
xorl
mov
xchg
loope
or
shrl
add
mov
je
test
shrb
in
push
mov
pop
or
call
add
shl
or
ds
and
daa
mov
sarb
push
mov
es
fsub
loopne
data16
rcr
xchg
push
inc
jp
mov
mov
push
les
sbb
jge
insb
hlt
gs
scas
cli
and
mov
adc
lret
xchg
insb
nop
repz
push
test
sbb
jnp
mov
push
rol
fdivrl
fdivp
sti
mov
aas
sti
aas
mov
pop
cmc
sub
daa
out
outsl
divb
mov
cs
sbb
loopne
jecxz
adc
aas
arpl
cmp
xchg
fchs
lcall
sbb
ret
jle
xchg
xor
pop
mov
jbe
mov
dec
jmp
jg
pop
jbe
lahf
out
and
test
adcb
push
inc
std
out
cwtl
and
cmp
repz
in
jae
mov
mov
lahf
mov
pop
inc
xor
ljmp
ss
cmp
add
mov
sub
fs
or
mov
std
xor
cs
sbb
test
lahf
loope
cld
fsubl
mov
and
xchg
rcll
mov
outsl
xchg
fiaddl
aaa
rolb
push
imul
xlat
arpl
cmp
ret
add
jl
sub
dec
mov
xchg
dec
jl
sub
fistps
jbe
inc
xor
xor
les
pusha
push
jecxz
adcb
call
leave
jmp
inc
push
xchg
dec
scas
dec
add
mov
xchg
cld
ret
insb
cmp
mov
pop
dec
fistpll
jecxz
hlt
pusha
sbb
ljmp
xchg
andl
pop
cmpsl
cmp
sti
jmp
xor
xchg
imul
ret
daa
mov
stc
pop
ret
mov
jl
sub
mov
and
idivb
lods
bsf
in
testl
icebp
out
int3
shl
insl
push
jnp
adc
daa
lret
jmp
cmp
pop
cli
jns
mov
xchg
mov
nop
xchg
mov
movsl
pop
dec
mov
iret
xchg
push
push
aas
int
xchg
jp
adc
out
ljmp
jmp
in
loope
in
inc
sarb
popf
testb
pushf
les
pushf
jnp
dec
cmpsb
adc
xor
xlat
or
lds
jnp
push
dec
mov
push
sub
mov
or
pop
mov
stos
nop
sbb
mov
adc
push
and
push
into
cmp
movsb
cwtl
stos
add
in
imul
push
xor
pop
dec
dec
cs
dec
daa
enter
dec
js
pop
mov
jmp
dec
lea
jmp
pop
sub
mov
cmp
adc
daa
cmp
jno
pusha
insb
adc
jle
add
in
cli
popa
pop
xor
jbe
inc
cli
and
adc
sub
jp
jle
sbb
add
adc
out
or
es
loop
dec
call
dec
in
mov
jno
jle
flds
in
int
jecxz
cli
push
fldenv
scas
leave
frstor
popa
push
mov
and
xchg
and
fldt
fwait
inc
pop
ds
cmp
mov
mov
mov
into
or
mov
scas
sbb
aad
pop
sbbb
in
popa
mov
sub
ja
push
aam
cmp
jmp
jecxz
std
push
mov
cli
sub
add
inc
sub
jge
mov
int3
or
data16
sub
in
hlt
jbe
cmpb
sub
adc
test
and
dec
mov
hlt
mov
adc
clc
jmp
pop
cmc
or
out
inc
adc
adc
scas
dec
jg
push
repz
pusha
cltd
xchg
lea
cli
dec
sarb
fldenv
pop
xchg
xchg
and
mov
outsb
sbb
cmc
fiadds
adc
fisttpl
xchg
lods
pusha
mov
popf
in
ja
pop
adc
mov
test
or
inc
lods
fadds
mov
inc
ljmp
sub
mov
ja
stos
loop
sbb
sbb
decb
movsl
fadds
dec
pop
dec
mov
mov
out
pop
testl
adc
or
mov
lds
insb
xchg
mov
or
call
aaa
in
imul
cmp
xchg
fwait
pop
popf
mov
add
sub
cli
xor
scas
push
or
addr16
mov
mov
mov
mov
das
mov
daa
cmp
jle
daa
mov
mov
add
aaa
arpl
mov
mov
bound
cmpl
xlat
test
and
jns
mov
cs
jbe
insl
mov
cmp
cmp
mov
fwait
stos
add
dec
nop
sbb
mov
jmp
into
xor
movsl
fnstcw
rorl
cmp
jge
push
mov
jecxz
fs
xor
or
scas
scas
sbb
stos
push
dec
pusha
iret
imul
fs
lahf
jl
nop
cld
aaa
icebp
mov
stc
insl
xor
lods
cmp
jge
mov
cmp
cmpsl
movsl
mov
jns
adcb
xor
or
add
int
push
adc
dec
or
and
pop
inc
movsl
sahf
test
pop
sub
dec
sbb
bound
adc
pop
dec
dec
mov
mov
repnz
test
notb
in
add
jbe
xorl
mov
aas
xchg
jle
icebp
std
lcall
and
cli
mov
pop
loop
insl
test
ja
mov
test
test
test
inc
add
fsubl
xor
repnz
das
cmp
or
mov
cmc
fs
adc
mov
aaa
push
and
rolb
cmpl
dec
mov
repz
dec
sub
mov
fchs
jb
icebp
test
call
jbe
pmullw
out
xchg
mov
sbb
mov
push
sbb
xchg
sbb
push
out
cmpl
repz
jle
rorl
mov
and
xchg
cld
stos
dec
and
ret
push
mov
sub
ljmp
push
mov
aad
cmpsb
xor
jbe
imul
test
in
cmp
aad
adc
dec
inc
xor
mov
pop
das
imul
mov
lahf
pop
ljmp
outsb
add
div
cmp
repz
sub
pop
sbb
xor
addb
rcll
sbb
fwait
js
pop
in
ss
dec
cmp
sbb
in
stc
and
xor
mov
sub
ficoml
and
loop
clc
cmp
lods
fmulp
sahf
cmp
jmp
sti
or
repnz
lcall
pop
inc
or
jbe
cli
enter
ret
inc
pop
jl
and
iret
subb
cs
jmp
xor
fsubs
mov
jl
cli
push
gs
ja
jb
lret
pushf
roll
cmp
inc
and
lds
lcall
ficoml
jb
sub
mov
xchg
fdecstp
orb
jmp
adc
xlat
sub
jp
imul
std
or
cli
and
sub
cmp
jl
jb
dec
repnz
push
xor
jo
aad
int
push
outsb
push
in
and
pushf
iret
mov
push
sbb
cmp
add
out
add
inc
subb
stos
sbb
pop
into
bound
lahf
mov
test
mov
lods
popa
insl
jmp
adc
pop
and
dec
leave
ss
pop
push
pop
lahf
sbb
cld
sbb
jmp
cmp
cmc
dec
shr
xchg
imul
movb
sbbl
es
adc
lahf
rcrl
pusha
lods
rol
or
add
mov
cmpsb
mov
ss
mov
mov
popf
mov
add
mov
xchg
add
mov
push
scas
js
out
shrb
jle
dec
xor
das
lcall
cmp
mov
outsl
lcall
jns
xor
inc
out
jns
cmpsl
mov
imul
mov
icebp
xchg
xor
fucomi
out
pop
popa
push
push
jo
xchg
cmc
fcmovnu
xor
iret
fstp
and
xor
test
pop
xor
pop
add
ret
add
das
outsl
je
and
pop
xchg
mov
addr16
xor
ljmp
orl
sub
xchg
or
and
in
and
in
mov
test
and
nop
jns
lea
flds
scas
jp
sahf
fs
xor
add
adc
sbb
test
add
fdiv
scas
imul
jae
addr16
jmp
dec
mov
cmp
imul
xchg
cwtl
jmp
fnstenv
shlb
std
pop
add
fwait
stos
rcrl
mov
in
loopne
jne
mov
jne
inc
push
repz
xchg
cmp
mov
push
repnz
fwait
sahf
jle
push
pop
sahf
bound
xchg
jne
sbb
mov
daa
add
movsb
pop
adc
push
dec
mov
les
loope
lods
xchg
dec
ffreep
sub
je
or
mov
pop
out
mov
ljmp
out
and
jns
fs
inc
sbb
dec
or
mov
pop
pop
push
xchg
inc
push
call
push
adc
or
pop
sahf
adc
lret
inc
jbe
push
sbb
sub
push
shl
xstore-rng
cmpsl
lds
jae
xor
lock
dec
cmp
push
aad
mov
roll
jno
push
and
scas
stos
sti
jnp
jmp
les
cmp
ja
or
xor
movsl
popl
or
mov
mov
dec
xchg
clc
hlt
pop
mov
pop
adc
into
lds
push
mov
inc
adc
xchg
adc
mov
in
mov
cmpl
ljmp
jb
fbstp
cmp
jo
outsl
das
or
add
repz
push
or
push
in
sti
jge
repz
cli
cld
shr
push
test
cmp
push
outsb
outsl
mov
xchg
iret
out
out
subl
xchg
dec
shrl
adcb
data16
jo
cmpsb
mov
and
je
pop
fs
es
loop
inc
nop
fwait
and
mov
inc
cld
mov
sub
idivb
or
orb
xor
stc
idivb
push
mov
sbb
clc
lods
lds
in
test
stos
imul
ret
sub
mov
loopne
xor
sbb
mov
fisttpll
fiadds
mov
aam
and
aam
sub
xor
dec
xor
mov
nop
push
jmp
pop
pop
dec
in
mov
pop
call
sti
movsb
sub
dec
sbb
roll
ficomps
adc
jl
adc
scas
xchg
inc
pop
dec
rcr
jnp
lret
iret
jmp
je
mov
movsb
push
fwait
in
test
cltd
jg
lret
test
out
orb
cmp
jecxz
lret
mov
push
decl
cmpsl
pop
jns
out
jecxz
jg
iret
mov
or
les
sub
jnp
aam
in
push
mov
pop
ds
xchg
ror
jge
sbb
inc
dec
cmpsb
sbb
xchg
bswap
pop
notb
repnz
loopne
mov
sahf
ret
ss
sbb
cmpsb
add
push
dec
call
andb
repnz
pusha
test
popf
addr16
fwait
cmpsb
repz
shlb
test
lahf
adc
cmp
sbb
inc
jmp
jbe
into
aaa
xchg
repz
jns
notb
addb
hlt
leave
in
enter
mov
dec
sub
or
inc
sahf
dec
and
ss
pop
mov
stc
and
push
xor
inc
loop
jecxz
sbb
daa
lds
outsb
addr16
inc
cmpsb
jb
ja
imul
mov
leave
test
xorl
test
xchg
lock
arpl
pop
lds
pop
mov
sub
mov
cmp
shrl
push
and
cmp
pop
aad
push
jle
cmp
scas
aas
add
in
rolb
dec
test
pop
mov
pop
icebp
mov
das
ret
popf
cmpsl
hlt
cmp
push
push
in
shll
push
mov
pop
data16
xchg
pop
add
rcrl
sahf
test
std
sarb
clc
sub
sub
cmp
pop
mov
jecxz
and
add
xchg
or
or
inc
push
mov
sbb
das
push
mov
or
test
mov
xlat
into
mov
adc
cmpsb
insb
insb
pop
ljmp
sbb
lods
mov
add
lret
xchg
int
das
cmp
dec
test
add
int3
inc
adc
daa
aam
inc
and
inc
add
inc
mov
xchg
sarb
loop
cmp
out
stc
aas
sti
inc
xor
pop
testl
sbb
xorb
in
daa
push
push
sbb
idivb
out
lods
rol
hlt
in
xor
in
adc
xor
cld
sarb
and
ret
inc
xchg
add
mov
mov
mov
adc
ss
mov
and
jbe
mov
push
sub
ljmp
sti
mov
or
and
xchg
arpl
call
sub
pop
daa
movsb
mov
mov
mov
cmp
dec
loopne
jne
fldt
jns
cmpsb
sbb
push
cmc
shr
adc
jns
dec
jns
push
imul
cli
cmpsb
movsl
sti
aad
or
push
je
cltd
sub
cs
inc
orb
out
mov
hlt
xchg
pusha
adc
add
push
and
in
rcrb
stc
push
xchg
jae
es
or
cli
jbe,pt
sub
mov
popf
scas
jl
xor
pusha
xchg
in
popa
int
mov
cmp
in
add
mov
jl
ljmp
rcl
cmpsl
insl
pop
in
das
pop
jb
inc
sbb
mov
cmp
dec
jecxz
adc
subb
or
pop
dec
ret
roll
test
xchg
ret
or
mov
rolb
push
xor
pop
lahf
pop
mov
hlt
xchg
jge
ss
jno
sub
out
mov
sbb
imul
add
repnz
test
sbb
xlat
js
fidivs
mov
mov
mov
stc
push
movsl
sbb
mov
in
and
jle
or
push
inc
int
dec
jae
mov
inc
adcb
sub
inc
lret
sub
cltd
cwtl
xor
cmpsl
jne
cli
fisttpll
or
push
aad
add
fpatan
push
mov
ds
cld
pop
push
add
imull
add
ljmp
mov
fs
and
jl
pop
imul
loopne
adc
or
dec
fabs
cmpsl
imul
adc
cmp
imul
sbb
sbb
pop
mov
imul
mov
xor
lods
ret
pop
fmull
sbb
cld
jb
mov
or
dec
test
movb
fs
into
mov
or
lahf
loop
mov
push
mov
push
test
cmp
push
pop
sbb
out
icebp
imul
out
jl
mov
sbb
arpl
hlt
mov
push
mov
cmpsl
in
rcrl
fiadds
jno
in
xchg
adc
sub
aas
or
sbb
xchg
and
cmp
ds
push
xor
aad
gs
outsb
mov
fcoml
adc
mov
pcmpeqw
cmpsb
test
jo
ja
xlat
ds
xchg
dec
faddl
in
loopne
mov
stc
rorl
push
das
xchg
aad
fisttpl
lahf
mov
out
and
aaa
aas
int3
add
jns
or
fisubrl
adc
daa
test
mov
xchg
fsubrs
cmp
mov
jae
xchg
pop
adc
xlat
nop
movsl
fisttpll
stos
sahf
das
lret
inc
je
rorb
imul
xchg
negb
push
mov
jno
sbb
mov
mov
push
adc
je
loope
roll
dec
push
sahf
loopne
mov
mov
bound
cmp
cmp
xor
out
dec
xchg
test
jbe
fucomp
inc
clc
or
sub
clc
ret
sbb
loop
cld
inc
mov
jmp
pop
dec
mov
je
mov
mov
aas
jle
cmpsb
call
shr
xor
or
lds
cltd
int
movsl
push
xchg
aas
sbb
pop
sahf
repz
out
repnz
and
cwtl
aad
push
subb
pop
negb
lea
imul
lahf
cmp
insl
pusha
ret
aad
xchg
pusha
cmpsl
or
cli
xchg
mov
pop
sbb
mov
test
inc
push
xchg
rolb
mov
aam
mov
testb
ss
add
ljmp
push
int3
jae
leave
cli
loopne
jle
xchg
push
adc
es
mov
mov
outsb
xor
push
sbb
mov
sbb
clc
xchg
repnz
inc
outsb
cmp
mov
mov
ficomps
mov
xchg
push
mov
daa
out
mov
lret
add
pusha
push
les
push
cltd
push
sahf
fs
scas
stos
aas
hlt
jbe
in
adc
sbb
loopne
push
inc
pop
cli
int3
sub
lods
mov
push
jns
sub
sub
sbb
dec
mov
pop
or
sub
jns
and
int
mov
out
ret
add
and
and
rolb
inc
sti
popa
cmp
jl
cmp
sbb
xor
stos
movb
jbe
cmc
sub
out
stc
xchg
out
sub
out
bound
rorl
cmp
insb
pushf
popa
repz
cwtl
or
subb
add
sahf
rclb
std
mov
xor
dec
js
mov
rorb
dec
and
xchg
push
push
clc
sub
push
les
pop
insl
sub
int3
pop
jno
mov
andb
jb
pop
xchg
mov
iret
decl
fldt
or
les
inc
mov
cltd
arpl
fisttpll
mov
adc
fwait
cmp
in
insl
divl
mov
jne
jno
icebp
xchg
into
adc
aad
inc
xor
or
add
jo
dec
loope
jns
cmpsl
mov
push
and
jg
subl
in
pop
pop
popf
loopne
js
rorb
imul
call
bound
test
fstl
test
mov
test
cmp
mov
add
xchg
popa
cltd
mov
jb
xlat
arpl
mov
xor
cmpsl
mov
daa
cwtl
ss
and
loop
add
xchg
jle
mov
fdiv
xor
dec
repnz
fldenv
in
testb
add
xor
xchg
gs
repnz
cmp
aad
adc
cmpsb
dec
mov
sbb
aas
stos
lret
int
inc
outsl
and
push
pop
out
pop
lock
inc
mov
jg
addl
in
cmpl
stc
decb
movsb
insb
lods
not
jecxz
bound
mov
adc
outsl
cwtl
scas
cltd
subb
mov
and
sub
outsl
add
cld
pop
dec
int3
movsl
dec
imul
mov
mov
push
fcomp
loopne
and
pminub
cmpsl
popf
imulb
jecxz
mov
push
mov
es
enter
out
add
add
ljmp
pop
gs
insl
int3
sub
pop
sbb
sahf
inc
test
lret
xor
push
cmp
inc
test
add
fidivs
adcl
push
jno
imul
xor
fnsave
add
insb
fsub
mov
fs
rorb
jp
push
je
or
movsl
outsl
or
les
and
jmp
iret
pop
ret
rcrl
xor
push
push
xlat
shll
and
push
fs
pushf
jns
jmp
dec
adc
sub
pushf
jecxz
push
cltd
cs
add
hlt
jbe
mov
pop
mov
in
pusha
xor
movsb
xchg
cs
fimull
rcr
mov
cmc
in
xchg
out
mov
jmp
fidivrl
inc
mov
push
outsl
lods
lods
test
mov
push
ret
pop
repnz
scas
sbb
dec
movsl
and
out
inc
insb
dec
out
jmp
or
pop
jl
popf
lock
adc
aas
inc
es
je
push
insl
lret
and
or
ret
psrlw
xchg
adc
inc
pop
jle
inc
jl
jnp
jo
dec
sahf
fsubrl
jg
fidivs
mov
in
adc
inc
mov
pop
cmp
out
insl
js
iret
sbbl
movsb
mov
inc
imul
mov
ret
mov
mov
push
out
ds
adc
pop
andb
shrl
das
cmp
push
and
ds
pop
mov
xor
pop
out
mov
sarl
incl
adc
jp
aaa
stc
stos
imull
xchg
xor
xor
call
and
cltd
jo
lea
pop
mov
sbb
pop
xchg
mov
rcrb
mov
push
and
lret
push
ljmp
test
xor
dec
or
cmp
icebp
add
shrl
add
xor
cmp
psubsw
xchg
cmp
pop
or
mov
frstor
cmp
xchg
repnz
sub
clc
mov
shrl
pop
xchg
sub
push
mov
pop
mov
imul
imul
dec
test
xor
mov
xchg
cmp
or
add
xlat
mov
sbb
es
mov
mov
jno
xchg
jnp
push
push
ja
pop
lret
call
aaa
shlb
mov
mov
cmpsb
js
jg
sbb
push
test
mov
mov
loope
jno
lret
mov
gs
xchg
push
fnstcw
pop
into
cmp
jne
movsb
aaa
xor
adc
das
push
insb
insb
movsl
test
lock
std
outsl
out
orl
lds
push
xor
mov
inc
ja
mov
mov
xor
xor
lcall
adcl
jmp
pop
inc
dec
mov
std
fdivp
push
pop
cmp
and
or
and
adc
inc
test
adc
xor
inc
ja
push
xchg
fidivl
mov
sbb
in
ret
mov
not
add
arpl
jge
aaa
jne
mov
inc
ficoms
imul
lahf
push
and
push
push
jno
mov
dec
dec
cmp
sub
insl
inc
inc
push
mov
int3
notl
dec
mov
jns
push
xor
ret
adc
jb
mov
mov
pusha
xchg
ret
cmpsb
xchg
rorl
stos
call
sub
dec
pop
jne
jg
mov
cmp
xor
mov
ss
pop
ret
stc
call
pop
popf
jp
shrl
shll
fs
pop
inc
jns
stc
pop
add
jne
test
pop
jp
int3
ja
xchg
int3
mov
sub
in
mov
xor
cmp
int
jecxz
mov
test
dec
cmpsw
andl
imul
jmp
or
movsb
inc
rcl
cmp
sbb
sbb
pop
sub
push
jmp
ret
cmc
aas
mov
add
scas
aaa
lds
jb
aam
xchg
jno
xor
pusha
out
cli
mov
sbb
out
les
mov
out
jae
ror
push
or
outsb
jle
in
sbb
xchg
sub
inc
mov
data16
pop
mov
movb
push
inc
into
andl
add
add
pop
mull
lahf
mov
dec
mov
mov
test
lret
sub
mov
fchs
push
sbb
mov
aas
popf
mov
mov
dec
xor
adc
rcr
add
ret
cmpsb
jnp
in
jmp
fisubs
pop
sbb
xor
ret
mov
mov
sarl
mov
dec
adcb
dec
adc
rcl
cmp
jns
jae
fstpt
lods
inc
push
test
dec
jp
outsb
stos
push
imul
push
sub
jne
mov
rcl
push
sbb
daa
adc
lahf
ss
and
cmpsl
popf
inc
adc
mov
mov
movsb
cwtl
out
aad
mov
push
stos
ljmp
ja
ljmp
test
lea
lret
lahf
pop
or
xchg
adc
fs
mov
inc
fnstcw
adc
scas
insb
adc
mov
xor
outsb
push
aaa
xor
dec
dec
lret
mov
popf
dec
imul
mull
mov
aas
cmp
push
movsb
ficoms
and
stc
les
out
movsl
lret
pop
mov
sbb
ja
jp
stos
cmp
inc
cmpl
scas
xchg
inc
js
cmp
mov
sbb
adc
subl
addr16
shlb
inc
lods
jae
insb
dec
xchg
pop
mov
cmp
pop
jnp
jae
mov
dec
or
sahf
adc
inc
and
lret
aaa
mov
shl
enter
ret
add
jno
inc
xchg
idiv
mov
out
pop
dec
inc
lods
enter
fmul
popf
cwtl
dec
xlat
loop
or
rclb
xor
pop
pop
sub
push
mov
mov
and
push
faddp
add
add
scas
sbb
jge
pop
xchg
or
xchg
dec
or
mov
and
pop
xchg
cmp
or
and
push
icebp
add
xchg
pushf
js
add
notrack
and
stc
fwait
mov
fdivrs
sbb
repnz
icebp
mov
sbb
daa
ja
into
push
xlat
ret
js
cmc
fs
jb
sub
cmpsb
xor
xchg
imul
dec
out
das
into
inc
jl
mov
les
je
repz
inc
and
not
jno
mov
dec
or
aam
std
inc
ret
lahf
add
and
mov
and
cltd
shrb
pop
or
jae
xchg
mov
movsb
jnp
int
test
pop
xor
adc
adc
jnp
cmpsb
sub
xor
mov
cmpsb
js
cmp
sub
sbb
aam
ficoms
dec
cmp
mov
imul
fwait
mulb
in
adc
pop
das
in
shl
enter
addr16
push
or
loope
out
xor
or
hlt
dec
adc
and
mov
sbb
lret
dec
mov
mov
mov
in
out
sub
out
pop
mov
jle
push
fbstp
loopne
jg
sub
push
cld
mov
push
sbb
sbb
in
fs
mov
inc
pop
ss
push
pop
inc
mov
xor
call
cmp
lret
inc
and
dec
testl
mov
aad
sub
ja
sahf
cld
xchg
insb
loopne
negl
in
sbb
repz
fstpt
rcr
or
loope
mov
orb
imul
jge
cmc
push
xchg
pusha
or
loop
mov
xor
pop
fisttpl
icebp
in
adc
fildl
dec
es
icebp
nop
push
adc
or
xor
jle
mov
or
out
pmaxub
int3
add
or
lret
mov
test
repz
push
mov
xor
or
cmpsb
je
dec
xchg
push
daa
or
xor
pop
add
ss
fisubl
movsl
mov
idivb
ja
add
jmp
xchg
hlt
test
jb
jl
sub
idivb
and
rcll
or
push
jmp
lcall
jle
add
mov
ds
loopne
cmc
mov
push
sub
insb
rorb
mov
mov
insb
bsf
add
sub
jg
dec
and
cwtl
out
and
stc
xchg
cmp
addr16
outsl
sbb
movsl
enter
cmp
fnstsw
xchg
jl
sub
mov
mov
adc
iret
xchg
clc
test
mov
add
adc
and
inc
cmp
cmp
std
jbe
xlat
jmp
push
cmc
stos
or
sbb
xor
mov
out
cltd
test
lret
mov
idivl
es
cs
andb
test
cmp
pushf
jb
mov
cmpl
das
push
mov
outsl
mov
js
pop
mov
add
js
das
sarl
xchg
sahf
and
inc
sub
pop
sbb
in
cltd
push
inc
les
adc
je
ljmp
pop
push
data16
cmp
test
xorb
hlt
fs
loopne
lahf
xchg
or
aaa
divl
adc
test
imul
mov
int3
test
pop
mov
fadds
ds
mov
sub
test
mov
mov
jle
jns
and
ja
cld
mov
mov
sbb
inc
lock
sbb
insb
outsl
mov
into
hlt
sahf
adc
or
gs
adc
aas
xchg
fwait
loope
inc
movsb
mov
adc
cmpsb
in
ljmp
mull
jno
shlb
sbb
push
adc
stos
push
js
cmpsb
dec
scas
in
xchg
pop
imul
lea
int
pop
dec
mov
dec
in
fcompl
xchg
pop
scas
test
pop
mov
inc
stos
sarl
mov
pushl
cmp
pop
add
sbb
push
outsl
ljmp
xchg
dec
cmp
imul
add
outsl
inc
mov
das
imul
sub
jmp
into
adc
adc
add
xchg
pop
lods
loop
lds
dec
lcall
add
add
nop
add
fcoml
inc
cmp
cli
lret
mull
inc
sbb
fstpt
rcrl
daa
dec
dec
leave
or
rorb
loop
push
data16
out
and
insl
test
mov
repz
sahf
rclb
push
ljmp
jge
leave
out
push
jns
stos
adc
subl
pop
es
xchg
lret
mov
add
xchg
cmp
mov
cmp
aaa
mov
inc
dec
xlat
enter
dec
arpl
jne
and
stos
in
mov
movnti
cld
pusha
movsl
ss
xor
xchg
xor
sub
pop
clc
lcall
stos
pop
ss
cmpsl
mov
and
inc
aas
cmp
test
push
ret
pop
lret
xor
jnp
inc
lahf
jecxz
push
testb
cmpsl
inc
mov
xor
loope
xor
or
jae
xor
outsl
and
xchg
dec
scas
jns
repnz
rcl
mov
push
sbb
rorb
imul
out
push
jmp
in
pop
cmp
jl
enter
mov
subl
outsl
daa
jb
std
jo
dec
pushf
xor
shl
sbb
mov
bound
or
rorb
out
mov
imul
shr
or
sub
push
push
stos
or
fs
dec
mov
jg
lds
pop
imull
data16
lods
xchg
nop
pusha
cld
xchg
adc
cmp
rol
imul
scas
add
xor
sub
pop
xchg
inc
xchg
stos
movsb
pop
mov
mov
insl
leave
push
dec
jmp
or
xor
cwtl
dec
stc
mov
fcompl
cmp
ror
shl
mov
out
int
imul
in
into
and
add
cmp
fdivl
mov
icebp
fmul
out
inc
orb
mov
xchg
pop
jecxz
jecxz
stc
mov
test
les
pop
sub
dec
imul
lods
lret
push
push
fs
dec
call
pop
lods
lods
cmp
dec
mov
sub
repnz
in
sti
test
xor
insl
stos
cmpsl
mov
xor
repz
inc
lret
movsb
fisubrl
outsl
sbb
push
cmp
aas
inc
pop
sub
outsl
in
push
xchg
dec
inc
add
sub
add
insb
xchg
mov
ret
jmp
je
ret
pop
call
stc
push
subl
das
push
cld
mov
jns
icebp
in
mov
inc
pop
pop
jp
stos
mov
jno
and
mov
lods
das
sbb
mov
push
pop
inc
or
inc
rcl
cmpsl
rcll
pop
pop
shlb
dec
test
push
jb
mov
add
cmp
outsl
in
or
insl
mov
pop
shll
inc
test
lahf
cmc
adc
in
pop
xor
sub
jecxz
jb
mov
cmp
push
jmp
fists
insl
stc
mov
cmp
mov
mov
jns
sbb
push
xchg
push
pop
sbb
adc
arpl
shll
jl
mov
call
negb
clc
or
sub
inc
dec
jp
sbb
pop
jmp
cli
mov
jns,pt
inc
lock
lcall
inc
mov
rcr
rorb
jo
mov
adc
mov
jnp
icebp
dec
inc
ret
popa
dec
outsl
inc
lea
add
pop
xor
mov
cld
ds
sbb
sub
mov
xchg
pop
pop
inc
adc
jnp
fsts
mov
cmpsb
pop
pop
test
lahf
shlb
mov
mov
icebp
cmp
add
icebp
mov
fisubrl
aaa
icebp
fldl
fwait
or
imul
lret
xor
stos
push
aas
jae
callw
fdiv
inc
xor
std
out
cmp
adc
dec
aam
or
nop
hlt
ret
negl
jge
loopne
adc
movl
leave
jmp
push
xchg
adc
clc
imul
scas
push
aaa
mov
in
push
lahf
divb
sub
push
mov
stos
inc
pop
cltd
cmp
jnp
test
mov
cmc
adc
popa
push
jecxz
pusha
cmp
fisubl
mov
test
std
mov
nop
ja
out
and
popf
call
lret
mov
orb
movsb
std
arpl
jne
in
hlt
leave
fdivr
lcall
into
xchg
or
fsubrs
jne
ss
mov
push
out
adc
mov
cld
sbb
mov
subl
popa
into
mov
inc
push
and
inc
int3
adc
or
sub
sbb
sub
push
inc
dec
xor
sub
mov
fsub
xchg
je
loope
pop
cltd
push
cmp
adc
mov
imul
lods
arpl
inc
pop
fistl
cmp
inc
xor
mov
and
rcll
lea
cmp
ljmp
mov
rcl
fstp
lock
cmpsb
daa
jbe
inc
aad
ret
xorb
pop
jae
movsb
lock
sbb
and
sub
add
xchg
jne
xor
imul
xchg
int3
dec
sbbb
pop
je
ja
push
fs
mov
mov
cmp
xor
scas
push
xor
mov
xchg
hlt
movb
and
xchg
jns
leave
xorl
mov
jp
xchg
cmc
stos
xchg
std
aam
add
shl
add
insl
mov
push
jbe
fldcw
iret
cs
mov
mov
pop
dec
rcrb
movsl
daa
inc
dec
jb
sbb
repz
rolb
fprem1
dec
adc
mov
and
test
jb
les
xor
inc
out
popa
mov
and
fisubrs
inc
enter
xchg
aas
hlt
in
lock
mov
mov
imul
aam
jle
jge
test
sahf
inc
adc
sbb
fwait
addr16
je
sub
das
lods
test
out
or
sbb
mov
sub
popa
test
cmpsb
or
mov
aam
iret
jo
std
test
movsb
xchg
fcomps
movsb
sbb
pop
repnz
bound
mov
jns
pop
and
sarb
subb
and
adc
mov
inc
shll
xor
aas
call
cmp
fistl
pop
inc
add
xor
sbb
mov
sbb
lea
pop
fs
and
fsubrl
sbb
shl
rolb
rcll
sti
push
int3
scas
je
pop
out
add
pop
pop
fnstsw
ljmp
out
jo
es
lcall
jp
push
mov
into
xor
push
mov
xor
inc
inc
xchg
adc
test
fucom
out
out
push
fisttpll
jp
adc
das
aam
xor
subb
fldl
mov
jecxz
mov
cmp
test
cmpsb
adc
inc
add
loopne
mov
sbb
fiadds
push
inc
sub
add
cmp
insb
push
pop
cmp
imulb
pop
inc
cltd
add
add
xchg
test
in
mov
mov
xchg
cmp
add
or
out
push
or
pop
fsts
mov
cmpsb
popa
out
mov
sbb
xchg
or
jl
sbb
mov
test
jl,pn
sbb
push
test
lea
push
ljmp
jno
inc
js
shll
pop
jo
std
push
cmp
sbb
cmpsl
lahf
xchg
jmp
lea
lcall
push
sub
sub
jmp
cmp
cmc
jns
add
mov
pop
pop
leave
and
ljmp
stos
jmp
ljmp
dec
jl
jne
in
lods
mov
xor
or
std
aas
fisttpl
daa
idivl
into
mov
jns
enter
scas
add
add
clc
inc
shll
jmp
xchg
mov
les
int3
int3
fcomps
popa
lcall
push
mov
pop
dec
out
in
cmpsl
sbb
mov
les
cs
pop
add
addb
pop
call
lret
sbb
jmp
icebp
popf
mov
fs
adc
sarb
mov
mov
fsubr
xchg
xchg
les
dec
test
enter
lret
add
push
push
mov
sub
mov
into
ljmp
outsl
cld
sub
rcl
aaa
jns
sub
jg
shr
jmp
cmp
cmp
jb
orb
inc
cmp
pop
add
pop
hlt
push
and
insb
xor
inc
xchg
xchg
and
adc
shll
aam
movsl
mov
out
rcrl
test
jns
dec
xchg
lods
call
je
inc
mov
or
xor
xor
sar
sbb
or
inc
sub
test
add
stos
mov
inc
sub
mov
xchg
sbb
arpl
mov
cmp
nop
cmp
xlat
insl
lods
loope
nop
pop
or
int3
dec
adc
aam
lds
outsl
push
std
mov
daa
cmpsl
bound
ficoms
push
pushf
xor
mov
xor
ss
mov
fisubs
xlat
xlat
push
mov
aaa
add
lods
hlt
mov
in
in
mov
pop
lret
stos
xchg
dec
test
cmpsl
inc
push
push
dec
daa
pop
xchg
push
jecxz
push
stos
ret
or
add
dec
aam
into
cmp
and
movsl
ljmp
repnz
lret
lods
scas
xchg
inc
and
das
pop
push
ljmp
sub
dec
sub
ja
int3
fwait
cld
xor
ret
dec
lret
and
fwait
adc
push
jnp
orl
sbb
lods
scas
movsb
add
fdivs
test
jne
pop
push
out
iret
cmp
in
lret
push
jae
push
gs
cmp
xchg
xchg
add
sbb
push
lock
sbb
ret
arpl
sbb
aas
mov
adcb
xchg
mov
push
lock
insb
lods
sbb
inc
aam
stos
loopne
ja
mov
cwtl
xlat
test
push
jge
andl
fwait
xor
ljmp
add
mov
xor
pop
cmp
pop
lahf
scas
dec
dec
pop
inc
push
pop
lock
fnsave
sahf
repz
call
mov
mov
movsl
sub
shlb
jno
sbb
das
adc
mov
add
jle
and
mov
adc
fildll
dec
cs
jp
add
loope
pop
cmp
fdivl
inc
mov
dec
cmp
int
jp
sub
or
jge
xchg
xchg
add
out
jl
pusha
mov
stc
cld
scas
xor
push
out
sbb
bound
dec
pop
jbe
xchg
out
pop
pop
lea
sub
cli
mov
jae
mov
inc
mov
dec
stos
and
pop
mov
gs
fsubrs
es
mov
mov
adc
out
mov
xchg
jl
stos
mov
addr16
arpl
pop
outsl
in
cli
in
push
xchg
mov
and
cwtl
je
lds
push
xlat
sbb
mov
pop
cs
fsubl
sti
fmuls
aaa
push
out
cmp
push
fstpt
adc
ss
mov
cmp
cmp
lods
mov
arpl
setl
clc
push
cmc
out
loope
lea
lret
sbb
xchg
jnp,pt
leave
jbe
xchg
jmp
mov
loope
add
mov
xchg
inc
adc
add
stos
in
push
mov
push
xchg
jnp
add
std
xchg
jo
push
mov
vcvtps2dq
loopne
cmp
cmp
mov
out
jnp
cli
cwtl
sti
mov
out
mov
push
js
jnp
cltd
shlb
hlt
push
push
mov
push
cli
loop
das
in
push
sbb
push
adcl
daa
xchg
or
andb
lea
repnz
mov
nop
or
insl
add
and
shrb
mov
pop
pop
or
sub
fdivr
add
jecxz
lret
cmpsl
dec
ja
sub
pusha
sub
test
js
sti
cmp
jg
adc
icebp
sub
pop
fldenv
jle
xchg
mov
aaa
add
aad
sub
xor
adc
sti
adcb
ja
data16
bound
test
add
les
add
mov
mov
pop
fs
push
fldenv
jge
movsb
mov
nop
dec
adc
pop
pushf
aaa
jecxz
add
notb
add
mov
or
mov
movsb
stc
and
push
mov
gs
sub
addr16
das
xchg
repnz
xchg
das
inc
xchg
adc
cmp
sbb
sbb
push
insl
xchg
xchg
and
xchg
js
movlps
xlat
test
cs
cmp
clc
test
mov
shlb
out
pop
je
cli
out
movsl
sub
mov
fisttps
pop
arpl
mov
xchg
scas
fwait
mull
fs
addb
aad
out
adc
inc
loop
repz
dec
ja
es
pop
rcrl
pop
xchg
lret
sbb
mov
push
test
les
lods
int3
cli
jnp
icebp
and
sahf
test
dec
inc
adc
fidivrl
pop
shlb
mul
fldl
pop
pop
adc
pop
dec
out
enter
ss
xchg
cmpsb
sbb
lret
or
adc
cmpsb
xor
xor
fisubrl
inc
push
pop
faddl
lahf
nop
sub
aas
dec
repz
sbb
dec
pop
stos
sti
iret
movsl
scas
push
sbb
leave
cmpsl
inc
pop
inc
je
pop
lcall
hlt
ja
mov
cmp
add
pusha
mov
mov
cmp
mov
cmc
call
jns
cmpsl
sub
jge
cs
gs
outsb
rclb
inc
imul
mov
mov
cmp
or
mov
cmc
call
adc
mov
dec
push
pop
mov
cltd
and
sub
lods
push
popa
fiadds
add
cmc
xchg
lods
cs
mov
es
nop
xchg
insl
inc
adc
push
inc
nop
adc
mov
loop
mov
sbb
add
mov
ljmp
or
jne
ds
jg
sbb
lds
jmp
inc
ud1
xchg
clc
push
cld
sbb
adc
call
inc
mov
ss
cltd
or
int3
pop
mov
mov
iret
push
mov
dec
dec
push
out
inc
lods
lds
out
ljmp
sub
inc
and
in
repz
test
and
inc
fsubs
leave
mov
mov
out
jmp
pop
outsl
stc
mul
movsl
push
or
inc
mov
mov
pushl
xor
kmovb
inc
fucomip
xor
xchg
cmp
push
out
outsl
sub
mov
inc
push
lret
or
xchg
pop
pop
lds
arpl
mov
loope
scas
dec
jno
stos
inc
dec
pop
inc
in
xchg
mov
xor
cmp
dec
xchg
mov
les
pushf
loopne
int3
insb
inc
and
sub
and
movsb
icebp
mov
pop
loopne
int
je
fisubl
or
scas
xor
call
jb
js
out
and
cmp
pop
or
out
es
mov
aas
push
or
mov
out
pop
aas
rcr
lcall
in
std
daa
shrb
push
add
movsl
mov
push
popf
icebp
dec
into
or
push
mov
push
dec
fistpl
push
mov
testb
filds
loop
sub
push
push
add
mov
cmp
rcll
add
out
test
add
mov
int3
stos
and
jp
sahf
push
jnp
fmuls
cmp
icebp
popa
fdivr
es
mov
mov
sub
sbbl
add
xchg
xchg
lret
fcmovb
pop
sub
add
ficoml
inc
int
pushf
jne
mov
add
rcr
pop
bound
aam
icebp
cs
dec
sbb
lret
scas
out
mov
sbb
adc
adc
add
jno
lds
stos
into
lahf
es
sbb
mov
loopne
and
fsts
mov
or
test
mov
add
cmp
mov
mov
push
xlat
jnp
add
mov
mov
push
jbe
sbb
int
outsl
mov
sar
sub
ret
shll
outsb
out
adc
or
xchg
push
das
es
jl
jnp
cwtl
sar
or
jmp
xorb
cmpsl
lahf
int3
adc
fcomi
lods
add
mov
inc
mov
pop
js
xchg
nop
fnstcw
and
in
mov
imul
cld
sbb
rcrb
jne
mov
arpl
add
pop
lea
mov
dec
push
test
add
lods
mov
xchg
add
lock
adc
pop
cmpb
xlat
inc
std
iret
xchg
xor
adc
cmc
jl
push
imul
clc
inc
pop
mov
pavgb
sahf
push
jne
jl
jns
fstps
cmp
mov
mov
gs
sub
inc
pop
outsb
jno
push
test
and
lret
push
jns
test
fcompl
pusha
xlat
sub
dec
mov
loop
sbb
push
adc
mov
lods
in
sbb
xchg
cwtl
ret
int
negl
lock
dec
hlt
mov
jns
jp
cmp
orl
xchg
xchg
loopne
ret
lea
add
shrb
and
pop
dec
or
aaa
or
test
repz
xchg
lock
lds
stc
pushf
out
mov
jle
out
scas
xchg
into
insl
mov
std
lock
je
lea
adc
fs
push
xchg
nop
cmp
or
out
mov
dec
test
sarb
xorb
mov
aas
in
orb
or
jb
imulb
inc
xor
fistl
mov
into
es
and
xchg
jg
in
pop
pop
sarl
dec
jno
bound
aas
cwtl
pop
mov
mov
daa
fcmovnbe
pop
xorb
outsb
lret
fwait
shr
mov
adc
in
inc
movb
or
xor
mov
jg
or
mov
lcall
xor
clc
inc
sbb
pushw
idiv
or
loop
push
sbb
xchg
jns
in
pop
imul
adc
incl
fstl
or
sub
push
in
add
leave
push
mov
fucom
popf
and
sub
in
movsb
cmpsb
ret
add
loope
ss
lods
pusha
jbe
mov
add
lcall
pop
inc
test
xchg
mov
push
mov
enter
pop
xor
loop
fs
add
pop
inc
sbb
loopne
outsb
fiadds
jbe
sbb
jmp
adc
mov
xchg
mov
cmpsb
test
mov
lods
popf
push
daa
cmp
gs
jno
aas
cmc
mov
popa
xlat
fstpl
iret
fstl
and
fimuls
mov
push
scas
sub
fisubrl
pop
pop
lahf
lahf
icebp
jnp
jne
pop
and
lods
repnz
mov
mov
in
lock
lcall
sbb
or
pop
int
mov
mov
dec
adc
aaa
je
mov
daa
pop
sub
test
shrl
dec
sbb
movsb
add
rcll
sub
and
popf
out
loope,pt
sbb
mov
pop
push
icebp
jns
cltd
push
mov
or
and
fdivp
jmp
fistl
daa
jl
int3
push
mov
lds
add
sub
iret
jmp
push
testl
sbb
inc
jp
push
dec
es
outsb
fmuls
inc
sbb
popf
dec
daa
inc
xor
test
rclb
jnp
or
push
call
movsb
inc
and
jmp
lret
jle
cmp
and
pop
aad
adc
sub
jge
lret
cmc
jne
daa
stos
pop
mov
ja
mov
jb
mov
sahf
xor
into
jg
daa
movsl
cmp
jae
sub
outsb
sub
in
ss
mov
xchg
dec
ret
movsl
push
add
rorl
rolb
stos
cltd
inc
ficomps
push
movsl
and
sub
pop
mov
mov
je
das
sub
cs
pop
nopl
andl
ja
cmp
inc
popa
hlt
add
stc
imul
test
jg
nop
mov
inc
rcll
dec
sahf
in
repz
mov
adc
xor
fs
in
fstl
testl
mov
xchg
jne
leave
loopne
jle
aas
test
mov
pop
stos
push
iret
fadd
xchg
jnp
xor
add
cltd
fwait
xchg
push
cmpb
sbb
sbb
jae
xor
and
push
fstpt
push
push
inc
push
jb
adc
push
mov
shr
inc
sbb
out
xor
out
loop
jecxz
pop
lock
xor
sub
sub
mov
cltd
xchg
xchg
cmp
push
mov
mov
mov
repz
xchg
arpl
cld
push
lret
gs
push
push
mov
repnz
push
cmpsb
aaa
scas
lea
xchg
addl
pop
outsl
outsb
into
out
pop
aam
mov
adc
xor
jns
movsl
pop
ja
push
pusha
inc
jp
js
int3
mov
xor
pushf
mov
sbb
push
add
xchg
push
push
aad
lahf
imul
mov
add
das
dec
xchg
in
pop
push
push
cltd
dec
lods
sbb
jle
mov
bswap
into
call
sub
fldcw
mov
mov
push
push
imul
imul
mov
cmpsb
sub
dec
xchg
xor
xchg
aam
xor
pop
dec
cs
shlb
shl
sbb
lods
dec
xchg
nop
jne
rcrl
mull
mov
lock
adc
add
cmp
stos
xor
cmp
pop
int
push
and
out
jnp
xchg
cmpsl
aad
addr16
inc
movsb
pop
rcl
mov
dec
into
xchg
xchg
popf
lahf
cmp
mov
pop
aaa
add
cmc
in
in
test
add
shr
mov
cmp
outsl
xor
in
mov
pop
and
or
aad
sub
incb
movsb
fisttpll
in
aam
popf
icebp
mov
xchg
pushf
lea
xor
fdivrl
sti
push
das
int
dec
mov
nop
push
es
testb
xchg
sbb
lahf
xorl
or
inc
lock
jne
adc
int
add
and
es
test
test
sahf
mov
aaa
std
mov
jge
shl
sbb
pop
cld
in
aas
or
fnstenv
or
xor
pop
adc
jecxz
gs
mov
dec
aad
jno
lods
stc
sbb
push
aam
in
jp
fiaddl
mov
push
pop
add
sub
mov
cli
pop
or
jmp
in
xchg
push
and
sub
mov
mov
cmpsb
cmp
jecxz
jg
push
inc
inc
cld
sbb
jne
pop
mov
xor
adc
cs
fistpll
mov
pop
cwtl
adc
push
xchg
mov
or
cmpsb
adc
insb
js
lcall
xor
dec
inc
xor
sub
lods
jmp
jo
xor
push
jl
rclb
enter
mov
ljmp
adc
jle
iret
xor
fbstp
std
mov
sub
mov
sub
or
cwtl
insb
xlat
in
iret
xor
je
adc
sub
mov
call
jge
lock
push
aaa
push
dec
int3
insb
push
or
arpl
leave
inc
cmc
lds
sub
mov
scas
movsl
pop
pop
mov
sub
inc
mov
mov
into
cmp
dec
mov
cmp
popa
push
shll
bound
add
insl
and
sbb
insl
jbe
popa
arpl
jecxz
out
mov
jbe
dec
cmp
inc
jae
mov
daa
sub
push
mov
xor
loope
push
adc
sahf
stc
jmp
cmp
addr16
pop
add
mov
bound
fimull
lahf
pop
pop
fwait
aaa
ja
xchg
push
aaa
test
dec
mov
and
push
or
inc
gs
fists
stc
xor
xor
mov
dec
test
orl
fsubr
mov
xlat
jg
pop
xor
sub
or
mov
aaa
sub
pinsrw
lods
adc
jge
jnp
icebp
xor
in
lret
mov
leave
mov
sbb
popa
mov
add
and
dec
test
push
leave
jp
rolb
lods
push
inc
movb
scas
xor
xor
mov
sbb
loope
cs
test
xchg
test
push
mov
xchg
sub
xchg
cwtl
mov
out
mov
jg
jmp
stos
int
mov
xchg
ror
out
out
je
mov
push
push
repz
ret
mov
inc
jecxz
cmc
add
leave
push
mov
stos
and
out
scas
hlt
iret
cmp
leave
dec
jne
lret
jae
out
jnp
outsb
dec
lock
cmp
sub
ljmp
rclb
xor
add
cmp
cmp
sub
mov
jg
push
into
fwait
xor
xchg
pop
sub
add
pop
fisubrl
pop
mov
push
movsl
pop
mov
int
mov
xchg
push
inc
inc
fisubrl
and
fwait
push
or
into
sbb
in
jb
js
faddp
sti
sbb
push
ret
scas
aad
mov
sbb
lock
adc
pop
loop
add
push
xchg
dec
scas
pop
shrl
mov
push
adc
ficoml
icebp
inc
popa
lds
jae
out
mov
pusha
or
cld
outsb
addr16
daa
sbb
jo
in
mov
pop
aad
xchg
mov
mov
je
cmc
dec
das
pop
outsl
ss
test
lods
lods
ljmp
call
popf
push
loopne
xor
fstp
mov
pop
cmp
or
mov
lock
sbb
push
cmp
ljmp
push
mov
mov
jl
orb
dec
dec
mov
fisttps
test
ret
into
cmpsb
add
mov
adc
push
je
in
jo
xchg
je
jo
out
jmp
mov
jp
mov
fs
cmc
in
and
push
jo
cld
stos
mov
sbb
lock
clc
call
lods
ret
adc
inc
das
ror
pop
and
mov
arpl
scas
xlat
cld
lret
leave
xor
shrb
inc
cmc
push
test
or
aas
mov
mov
push
mov
jne
loope
mov
sbb
sbb
inc
loop
mov
mov
jo
andb
dec
popa
xor
xchg
fcompl
add
hlt
cmc
sub
popa
rcrb
xor
inc
and
cltd
xchg
sbb
jno
xor
insl
sbb
push
mov
push
add
cmp
repnz
std
ja
loopne
mov
dec
push
in
push
jns
ror
jge
lods
fucom
out
add
int3
inc
popa
nop
pop
xchg
or
repnz
push
adc
xchg
fdivs
push
or
fs
mov
or
jb
call
add
aaa
stc
inc
sub
cmp
in
cmp
ffree
in
enter
arpl
int
int3
nop
testb
dec
sbb
enter
cmpsl
mov
and
jbe
lods
ror
or
lods
nop
mov
jg
fstpt
fldcw
fistpl
inc
jno
mov
push
pop
scas
cmpsb
lds
or
loop
sbb
fstl
in
aad
dec
fists
in
cmp
xor
add
dec
dec
sub
ficoms
xchg
jbe
and
addr16
jge
jle
andb
and
and
nop
jp
dec
cli
or
push
mov
das
divb
mov
pop
sub
gs
ds
pushf
loopne
shrb
gs
pusha
fs
push
sub
mull
test
or
pop
adc
testb
dec
js
cmc
mov
add
popf
dec
imulb
insb
cmp
sbb
pop
sbb
sub
fs
pop
mov
or
testl
aas
loope
jecxz
imul
jne
adc
mov
mov
adc
insb
lahf
loope
mov
sti
pop
or
pop
xchg
jo
sbb
pop
cld
aas
fsubrs
imull
or
aas
jg
cld
xchg
dec
mov
sub
jae
add
xchg
jns
mov
test
push
pushf
outsl
push
add
ret
cwtl
dec
xchg
cmp
jge
or
jno
js
aaa
jo
mov
cltd
or
add
idivb
in
cmpb
cltd
rcll
aas
cwtl
jmp
mov
les
sub
mov
test
outsb
jl
pop
mov
orl
inc
out
cld
add
or
inc
je
adc
mov
pop
sti
stos
mov
loop
push
mov
iret
sub
stos
fmull
test
cmpsb
jnp
inc
or
shr
fcomi
inc
mov
mov
mov
pop
mov
mov
mov
pop
sbb
movsl
push
icebp
out
fs
xchg
mov
mov
mov
out
lret
popa
rcrl
in
lahf
movsb
cwtl
lret
int
shl
push
fisubs
in
mov
cmp
ret
mov
pop
adc
subb
stos
cmc
sbb
les
fsubr
push
xorb
ds
movsl
dec
xchg
loop
repnz
addr16
jp
cmp
inc
mov
pusha
stos
mov
jae
xor
js
lds
cmp
imul
dec
lahf
test
xchg
repz
fucomi
xchg
cs
mov
cmp
push
inc
pushf
mov
cltd
and
addr16
out
jmp
sub
xchg
xor
mov
inc
sub
roll
bound
inc
pop
push
xor
sub
jae
add
dec
mov
nop
adc
pop
sub
push
loopne
clc
push
mov
movsl
cs
daa
mov
les
int
je
popa
inc
repz
syscall
aad
inc
jo
mov
cltd
push
sbb
scas
nop
call
stos
mov
iret
out
ljmp
dec
mov
pushw
mov
xor
add
aad
imulb
mov
out
das
sbb
insl
or
lret
in
xlat
sbb
pop
dec
pop
add
pop
scas
sbb
push
xchg
outsb
mov
insl
mov
or
sub
fldl
scas
mov
jbe
pop
call
in
xor
fnstsw
mov
inc
sub
push
fs
fists
jge
mov
jo
scas
fidivrs
clc
dec
f2xm1
addb
in
scas
and
mov
test
jmp
or
lret
or
jg
xchg
pop
mov
xchg
xorl
cli
rorb
and
cmp
push
loop
jle
scas
in
mov
wbinvd
pusha
xchg
inc
inc
cmp
adc
dec
jle
xchg
aas
push
rorb
inc
fsubrp
push
test
lcall
mov
mov
sbb
dec
ja
push
insl
cs
rolb
out
rcrl
jno
ret
aaa
xlat
fidivrl
rclb
cltd
inc
mov
adc
repz
or
dec
mov
xor
jl
and
adc
or
push
movsb
enter
test
pop
push
sub
mov
je
pop
ret
adc
ret
testl
jb
jae
mul
xchg
jecxz
lcall
mov
jnp
mov
in
lods
daa
xchg
inc
inc
push
mov
or
or
add
and
mulb
rorl
loop
mov
fisubs
icebp
repnz
push
mov
and
pusha
or
and
out
stc
add
cltd
iret
leave
insb
add
and
or
add
hlt
lret
xor
adcb
mov
xlat
mov
hlt
sub
adc
sbb
rol
pop
dec
or
stc
xchg
mov
rcrb
mov
sbb
iret
stos
int
fdiv
inc
stc
mov
jmp
insl
xlat
xchg
inc
inc
mov
hlt
sbb
movsb
dec
push
nop
repnz
cli
inc
mov
xchg
aaa
or
xor
inc
or
and
pop
jp
pushf
pop
sub
or
iret
mov
mov
push
hlt
call
add
dec
push
lret
test
inc
std
push
cmp
outsl
cli
push
movsl
cli
xchg
stc
and
call
push
fidivs
inc
adc
jp
lcall
in
iret
push
push
bound
xchg
cltd
data16
cmp
push
mov
push
lea
aad
int
fmuls
push
inc
and
dec
loopne
mov
call
push
stos
or
jnp
mov
loop
lods
sbb
imul
in
fstl
mov
lret
jmp
in
movsl
cs
xchg
cmp
xor
xor
push
inc
lods
pushf
xchg
jecxz
sub
mov
popf
lock
dec
imul
xchg
sbb
das
rorb
mov
xchg
loope
movsl
cmpsb
xchg
test
shlb
fadd
push
add
insl
pop
mov
pop
int3
out
addr16
push
xor
jae
jl
pop
dec
cmp
inc
movsl
ret
lock
inc
aaa
xchg
mov
jo
stc
xchg
xor
js
xor
out
pop
in
mov
rcrb
xor
lea
cmpsl
mov
int
push
lods
sbb
xor
in
loopne
scas
sub
mov
xor
stos
push
outsb
jecxz
fstps
rcl
rcrl
pop
xchg
inc
loop
mov
fdivp
in
dec
orb
fsubl
cli
repz
push
mov
add
out
jle
pop
mov
jle
pop
sti
mov
ss
inc
sbbl
pop
fld
sbb
push
pushf
les
fwait
mov
jp
incb
jecxz
jle
out
cmpsb
mov
aaa
ret
clc
push
fisubs
shlb
sbb
movsl
xor
test
mov
in
mov
orb
xor
jp
adc
pusha
inc
push
sbb
xlat
packsswb
push
push
push
cmpsb
cmp
sbb
cmpsl
pop
xor
sub
sbb
aad
lods
outsb
mov
lret
addb
jp
mov
jo
fsubl
lods
dec
mov
insb
mov
insl
ret
aad
fistpll
test
insb
psllq
addl
mov
inc
inc
pop
inc
or
pop
lds
fildl
mulb
push
cmp
push
ljmp
lods
sbb
cmp
push
add
or
adc
mov
out
negl
fs
adc
push
lods
aaa
in
outsl
aas
jae
mov
pop
push
jmp
sbb
call
popa
inc
cs
add
xchg
mov
dec
adc
cmp
jne
or
repnz
pop
aad
push
and
js
popf
ss
in
cltd
push
stos
orl
fistps
lds
dec
inc
xchg
jecxz
dec
enter
fs
sbb
cwtl
in
xchg
xchg
ja
pop
stos
cmp
leave
imul
ret
lea
in
outsl
pop
test
jno
dec
dec
sub
adc
test
jmp
mov
insb
mov
xorl
enter
mov
ljmp
les
jmp
jne
aad
sbb
fisttps
adc
xchg
push
ret
sahf
daa
fwait
jg
test
mov
cmp
jb
pop
dec
inc
pop
pop
inc
xchg
or
das
rcrl
pop
inc
popf
and
push
cmpl
shrb
jno
pop
cmp
enter
adc
fistpl
jns
sub
jge
cmc
stos
stc
ds
dec
jle
inc
clc
in
cmp
add
pop
adc
dec
cmp
add
xchg
cmpsl
mov
or
or
or
cmp
clc
sbb
lods
adc
mov
push
out
and
inc
andl
pop
xchg
idivl
mov
out
lcall
push
add
mov
out
mov
sub
popa
sahf
xchg
mov
nop
movsl
gs
sbb
add
and
stos
lea
das
in
mov
subb
aas
jnp
mov
aas
xchg
rcrl
mov
jl
adc
out
fs
or
ds
test
push
scas
dec
outsb
sub
or
loopne
out
rorl
cld
shlb
xor
add
jmp
pushf
dec
movsb
mov
add
jp
mov
repnz
iret
cs
jmp
sbb
fstps
jmp
testb
mov
jmp
pop
ss
xor
adcl
out
mov
and
hlt
pop
pop
or
je
in
mov
in
xor
daa
rolb
xor
xor
dec
pop
and
fnsave
sbb
lret
xchg
int3
sbb
imul
into
jp
and
sbb
sub
xchg
test
sub
and
mov
push
sbb
inc
jno
stos
into
jl
cmp
dec
pop
call
dec
pop
lret
sub
out
or
das
push
or
testb
fisubl
sbb
jl
call
orl
adc
inc
fwait
push
adc
jo
xchg
addr16
cmp
jg
or
imul
andl
xchg
mov
test
add
jecxz
outsl
mov
pop
stc
push
loope
sub
xchg
pop
add
sti
fnsave
pusha
pushf
mov
pop
js
jns
aas
inc
jnp
jg
dec
cmp
iret
sub
fnstenv
xor
out
or
cmp
out
xor
cli
ret
adc
mov
dec
out
daa
xchg
hlt
mov
push
mov
cwtl
adc
mov
popf
or
mov
scas
push
jb
leave
in
repz
mov
es
mov
fildl
inc
push
addr16
mov
test
xor
inc
insb
and
into
pop
mov
jb
and
mov
adc
popf
and
cmp
xor
add
cli
adc
data16
jle
sbb
iret
mov
lds
testl
out
inc
jecxz
outsb
fisttpl
jae
or
sbb
push
mov
sbb
pop
clc
adc
pop
jl
insb
leave
je
shrb
cltd
xchg
jge
adc
lret
out
clc
or
insl
pop
adc
sbb
inc
repnz
imul
stc
push
dec
pop
lret
in
mov
sub
jl
mov
int3
mov
mov
dec
inc
cwtl
push
xor
stos
js
pop
dec
push
adc
push
es
cmpsb
mov
and
sub
xchg
push
ret
sahf
shl
sub
mov
jne
sub
jle
sbb
or
rcrl
sbb
daa
out
add
stc
test
sub
lds
push
negb
notl
arpl
mov
xchg
dec
dec
loop
hlt
cwtl
fdivrl
dec
pause
ja
adc
lret
adcl
stc
or
jmp
jg
fcmove
mov
push
rorl
imul
lret
addr16
pop
mov
mov
ss
or
mov
jecxz
aad
xchg
inc
mov
inc
rclb
int3
rcll
add
xchg
or
es
iret
out
orl
enter
sub
lcall
addb
pusha
stc
pusha
int3
mov
test
jge
push
out
inc
pop
mov
leave
adc
rorb
dec
dec
adc
jo
mul
sub
add
loopne
jp
jge
pop
jl
cwtl
aam
add
inc
pop
mov
std
int
cmp
aas
push
or
popf
push
sub
cli
mov
lret
pushf
or
cwtl
data16
inc
cmpsl
push
andl
or
mov
lods
fnstsw
cmc
test
xor
arpl
js
mov
pop
and
shrb
pop
sub
out
xchg
xchg
pop
xchg
test
and
lret
jb
adc
mov
and
scas
mov
frstpm(287
xchg
ret
out
inc
xchg
pop
mov
leave
dec
loop
pop
dec
inc
sub
arpl
out
dec
rcrl
ss
xchg
icebp
daa
pop
cmp
fcmovnbe
pop
ja
push
xor
pop
lahf
stc
jns
imul
into
inc
rsqrtps
ror
mov
jne
in
icebp
pop
mull
shlb
or
inc
push
dec
add
mov
dec
inc
cmp
shlb
jb
test
dec
sbb
and
xor
add
pop
into
sbb
hlt
xor
push
pop
mov
xchg
push
inc
lcall
jl
cmp
sbb
fwait
incl
mov
test
clc
or
add
push
pushf
or
sub
icebp
movsl
out
outsl
mov
jb
mov
das
or
cs
adc
inc
fcmovnu
inc
rcr
aaa
loopne
call
ret
jo
cli
and
mov
jp
sub
fstps
addr16
add
and
cmpsl
mov
or
lcall
add
xor
mov
scas
mov
lahf
xchg
lods
adc
scas
xchg
cmp
xchg
rorb
mov
ret
push
in
fs
xlat
adc
stos
or
pushf
and
adc
mov
mov
inc
jo
or
mov
mov
push
dec
dec
popf
dec
mov
and
es
pop
stos
mov
lods
popf
daa
mov
dec
cwtl
jnp
icebp
fbstp
jmp
inc
xchg
ja
cmpsl
xchg
mov
pop
fwait
int3
push
cmovne
jno
push
sbb
jecxz
in
adc
mov
or
fmull
gs
and
cmp
sub
pop
and
loope
insb
ss
fisubrs
pop
jbe
or
and
outsl
xor
jb
lock
mov
iret
jo
cltd
lcall
mov
sbb
xchg
xlat
xchg
icebp
inc
ds
sahf
out
inc
xchg
sarl
loop
aaa
mov
or
mov
or
mov
aad
jae
ds
bound
push
cmpsb
jge
adc
lcall
xchg
xchg
mov
push
xchg
scas
es
loope
xor
inc
jns
int3
mov
outsb
cwtl
add
icebp
jns,pt
aaa
push
cmp
sub
push
leave
push
push
sub
jg
scas
sub
into
cmp
lret
rcll
jp
adc
mov
icebp
repnz
cmp
pushf
push
xlat
or
mov
je
pop
ret
push
ret
jge
push
lock
push
mov
sub
mov
jmp
and
mov
pop
mov
lret
mull
inc
push
cltd
aam
mov
out
into
fcomi
scas
loopne
addr16
jmp
push
dec
sub
cmc
pop
shll
stc
pop
mov
ret
dec
jle
cltd
ret
arpl
rclb
fisubl
or
sbb
pop
pop
or
xchg
in
out
cmpl
sub
insl
ret
mov
mov
xchg
cmp
sbb
pop
cmp
int3
cmpsb
lea
mov
or
rcl
out
loop
sarl
mov
jle
lahf
test
cmp
sub
pop
pop
and
movsl
inc
bound
fwait
bound
pop
ja
shlb
dec
mov
dec
push
das
jge
add
inc
sbb
arpl
xchg
mov
pop
mov
repz
push
mov
xchg
nop
enter
inc
gs
jne
dec
cld
test
jne
std
gs
lret
or
adc
pop
bound
hlt
jb
push
or
jnp
lret
sbb
pop
push
loopne
pop
aaa
inc
dec
jge
lea
aas
add
aas
fisubrs
jp,pt
repnz
sub
xor
daa
add
repz
jecxz
movsl
int
inc
jmp
jl
aaa
xchg
or
cwtl
mov
mov
dec
call
leave
push
inc
push
sahf
out
or
movswl
dec
sbb
cmpsl
insl
lahf
hlt
iret
leave
enter
xchg
cltd
push
pop
popf
mov
xor
and
ss
xchg
cmp
aam
cwtl
adc
jbe
clc
push
lds
cmp
cld
scas
fstpl
lret
inc
notl
aaa
mov
sbb
les
out
stos
or
in
stc
ljmp
or
push
jge
mov
out
xor
xchg
xchg
fnsave
pop
jno
cmp
rcrl
xchg
cmp
pop
mov
bound
jne
inc
pop
lods
adc
js
lods
filds
cwtl
jo
das
sub
jmp
daa
out
or
push
int
or
dec
stos
add
loopne
leave
mov
imul
push
sub
sub
sbb
out
jb
ljmp
and
ret
lahf
push
mov
cmpl
ljmp
dec
xchg
cltd
inc
daa
inc
jmp
inc
jle
imul
add
ret
testl
inc
mov
ljmp
add
xor
sbb
jno
sbb
loop
cwtl
push
pop
sub
or
rcll
test
push
pop
push
mov
xchg
mov
inc
cmp
movb
fsub
adc
loop
scas
mov
gs
adc
in
stos
xor
std
prefetch
scas
loope
clc
je
mov
sbb
sarb
push
lret
or
cli
mov
push
ret
push
pop
pop
dec
jnp
adc
fxam
aad
and
mov
pop
xlat
dec
setl
ja
lret
cs
mov
xchg
sub
filds
xor
nop
popa
call
ficoms
repz
hlt
pop
push
cmp
mov
mov
hlt
push
mov
in
sti
and
sbb
dec
fmull
nop
adc
jbe
mov
add
adc
push
inc
pop
or
out
or
or
push
cmp
or
movsb
out
lcall
pop
pop
push
mov
push
xchg
ds
call
cld
mov
xchg
dec
mov
jmp
stos
push
sub
outsl
fmulp
pushf
mov
jae
addl
ror
mov
js
je
and
loop
aam
and
movsl
pop
into
movsl
pop
ss
imul
popa
push
arpl
pusha
push
ficompl
les
out
sub
adc
or
xchg
pusha
sub
xchg
push
daa
hlt
mov
cld
fsubs
repnz
and
loope
mov
lods
mov
pop
in
test
dec
adcb
sbb
xorb
ret
sahf
adc
sahf
xor
xchg
mov
jno
test
add
or
dec
out
add
lret
lcall
rol
out
xchg
addr16
xchg
daa
loope
sbb
cmp
iret
mov
xlat
popa
inc
int3
cmp
scas
loope
ja
ss
decl
lock
sub
sarl
xchg
sbb
inc
xor
pop
pop
insl
frndint
dec
popf
decl
outsb
dec
clc
fisubs
sbb
loopne
push
clc
mov
test
xor
mov
loope
and
mov
int
inc
mov
pop
pop
icebp
jecxz
aam
scas
imul
sub
fistps
fimuls
inc
inc
daa
leave
in
fistl
into
jnp
adc
std
pop
jno
fnstcw
call
inc
mov
ss
mov
or
ja
dec
sbb
gs
daa
mov
mov
mov
lods
push
outsb
mov
fistps
jns
push
rcll
mov
inc
bound
pop
stos
mov
std
lret
mov
scas
call
outsl
mov
xlat
rcrb
in
sub
lret
dec
add
jl
push
xchg
imulb
add
popa
mov
jnp
test
xchg
cs
ret
mov
hlt
ljmp
mov
inc
scas
mov
popf
sub
mov
fnstenv
popf
clc
cli
pop
gs
push
mov
popa
scas
fcoms
lods
dec
adc
fcomip
inc
xchg
repz
jecxz
push
lret
push
mov
int3
icebp
jmp
or
pop
aaa
lret
push
or
loope
cmp
daa
dec
xlat
int
hlt
jb
sahf
push
inc
jae
ljmp
push
lret
fdiv
or
push
cmpsl
jmp
lret
add
sbb
sbb
sti
out
xchg
insb
int3
dec
test
sahf
mov
jecxz
cmpsl
icebp
lods
pop
int3
jne
shlb
lods
xor
cmpsl
jecxz
mov
int3
in
insl
xchg
fxch
xchg
pop
mov
pop
xchg
out
jl
ficoml
sbb
xchg
aam
jo
cmp
and
jmp
cmpsl
popa
or
loop
int
mov
xchg
imul
aas
inc
ljmp
push
sbb
cmp
mov
xchg
loopne
or
pop
xchg
sub
nop
out
and
jmp
cmp
mov
ljmp
sbb
jecxz
sub
mov
inc
or
push
sbb
cmp
sub
xchg
mov
push
jle
push
jno
push
and
out
and
rolb
nop
in
jg
cmp
pop
movsb
xor
leave
hlt
arpl
ja
enter
mov
stc
jecxz
cmpsl
sahf
dec
lock
movsb
lods
orl
daa
push
cmp
ret
jle
mov
sub
xchg
lcall
pusha
mov
aad
xlat
jae
cs
mov
imul
aas
cmp
push
adc
mov
inc
mov
es
inc
cmpsb
or
xchg
adc
cld
mov
arpl
insb
pushf
or
xchg
push
loope
sub
pop
fwait
inc
test
lock
dec
pop
adc
insl
movsb
xorb
pshufw
pop
jle
xor
xchg
std
lret
adc
mov
mov
rcl
jnp
pop
or
movsb
ja
insb
pop
int3
fwait
out
push
mov
sub
sbb
sub
cwtl
or
and
mov
aad
jne
stos
imul
xor
mov
cmc
clts
jno
push
pop
fcoml
jp
adc
enter
pushf
pop
daa
lods
les
add
stos
lods
adc
cmp
iret
popf
fdivrs
daa
loopne
enter
test
outsl
aam
sub
sbb
inc
sti
and
les
stos
adc
mov
cmp
cmp
fldenv
cld
scas
cltd
ss
and
cmpsb
dec
mov
xchg
lret
sarb
adc
test
mov
mov
stc
outsl
rclb
add
pop
je
mov
add
inc
iret
pusha
lock
lods
dec
fisttps
iret
test
add
add
out
jg
lods
mov
fiaddl
lock
jb
xor
jg
inc
cli
out
mov
sub
add
mov
push
or
jg
adc
lods
lcall
add
pop
push
ret
push
inc
adc
aam
mov
xlat
mov
inc
pop
fistl
jl
test
push
sahf
fcoml
mov
fs
test
in
sub
pop
mov
outsl
ljmp
insb
hlt
adc
and
test
inc
mov
jbe
out
incb
push
adc
stos
xorl
or
sub
xor
cli
dec
scas
pop
xchg
and
fdivrp
test
pop
fildl
mov
jle
adc
push
pop
std
inc
test
les
pop
xor
fisubrs
js
lahf
inc
xor
jns
and
jp
pushf
scas
sub
flds
or
leave
test
cmpl
nop
repz
xchg
pop
fucomp
cld
sbb
cwtl
mov
inc
cltd
stos
call
jnp
dec
fcompl
fs
fcmovne
fisttps
sbb
xor
mov
xchg
loope
les
push
sbb
or
pop
gs
int
mov
xchg
inc
add
inc
int
pop
add
pushw
pop
or
into
sbb
repnz
dec
addr16
and
add
pop
mov
insl
xor
leave
clc
es
in
mov
and
sub
pop
outsl
adc
nop
pop
jbe
pop
pmaxsw
rclb
mov
or
fisubs
inc
or
xor
fsubr
mov
xor
sub
xor
sbbb
shrl
aas
les
adc
mov
rcrl
jns
xchg
arpl
pop
les
out
dec
icebp
jbe
in
mov
cmp
mov
test
fsub
int
pop
jnp
and
cli
addb
xchg
or
imul
sub
dec
mov
les
popf
or
mov
std
xchg
out
adc
adc
sbb
jp
div
lds
subl
scas
ja
outsb
mov
lds
std
dec
addr16
bound
aaa
jmp
loop
pusha
imul
inc
mov
das
clc
pusha
sbb
pop
cmpsb
cmp
dec
or
dec
fdivs
cmp
andl
jp
xchg
imul
repz
jp
iret
inc
xchg
mov
pop
stos
daa
cmp
dec
mov
pop
mov
inc
test
pop
mov
fcomps
stc
inc
jmp
lea
outsl
ret
rcr
ret
je
pop
fsub
sbb
or
ja
das
mov
cmc
adc
pop
and
test
and
pop
ss
fimuls
arpl
or
xchg
ret
pusha
mov
pop
inc
cli
mov
test
add
into
gs
xchg
jo
test
add
mov
fxch
icebp
dec
imulb
js
in
ret
inc
add
adc
ljmp
inc
pop
icebp
jg
fnsave
lcallw
shlb
mov
dec
fmul
cmp
repnz
xor
xchg
dec
cwtl
mov
cmp
jmp
add
lods
call
inc
cmp
lods
pop
lods
shrl
popa
shr
sbb
add
hlt
dec
jle
mov
jge
movsl
pop
sbb
and
into
xor
and
jne
mov
adc
imull
or
mov
hlt
stos
inc
cmpsl
cli
and
inc
cmpsl
fs
pop
insb
mov
mov
cli
pop
repz
push
ja
sub
xor
ret
outsb
insl
imul
jmp
mov
xor
cld
imul
sbb
xlat
pop
lods
mov
and
push
or
mov
push
mov
out
or
mov
pop
and
inc
inc
test
cmpsb
fisubrl
std
fnsave
les
mov
loope
out
cmp
lahf
mov
bound
nop
add
xor
adc
fisttpll
sbb
rcrb
scas
sub
push
shll
cltd
jl
sub
push
sub
fcoms
and
cwtl
push
sbb
push
jp
scas
jne
fldcw
push
mov
sbbb
push
sbb
sub
ret
ljmp
adc
adc
out
stos
outsl
in
arpl
fwait
jnp
movsl
add
test
add
in
mov
and
je
rol
shll
out
fwait
push
dec
xor
orb
push
sbb
mov
pushf
xlat
sub
xor
stos
gs
dec
addb
fs
xchg
jp
aas
cwtl
hlt
pushf
shl
pop
dec
iret
inc
or
jne
mov
movsl
mov
jae
xor
pop
hlt
dec
shlb
scas
faddl
and
out
movsl
and
dec
loopne
daa
lock
mov
push
xchg
push
and
sbb
mov
jb
popf
cltd
inc
cltd
in
sub
jns
ja
in
fs
jae
push
stc
dec
sti
jmp
enter
adc
mov
jg
add
and
inc
sbb
sbbl
pop
pop
push
adc
lcall
les
out
push
xchg
loop
xor
mov
pop
xchg
fildll
lret
imul
add
call
fsubs
mov
rorb
sub
sbb
loopne
lcall
in
call
jbe
mov
out
dec
xchg
stos
cmc
sbb
sahf
xchg
xchg
test
jl
push
xchg
leave
fs
xor
in
out
dec
std
mov
mov
add
adc
dec
add
sti
je
es
fstpt
icebp
iret
xor
sbb
pushf
inc
mov
push
and
scas
cltd
ret
xlat
pop
xchg
out
aas
insb
shl
pop
in
sti
xchg
scas
out
sarb
lcall
mov
mov
jge
outsb
push
cmpsb
adc
inc
jb
mov
sub
push
adc
push
ljmp
cmpsl
dec
jp
sbb
xor
push
enter
pop
stos
iret
lret
js
pop
incl
mov
xor
mov
mov
jns
ds
cli
mov
outsb
xorl
ffree
jnp
aam
push
pop
xchg
pop
mov
xchg
jecxz
insb
cltd
dec
xchg
add
in
add
fcomip
imul
call
jo
push
cmc
outsb
arpl
cmp
movsb
pop
fldt
aas
fs
das
add
je
xchg
jbe
jnp
unpckhps
and
or
imul
pop
es
ds
dec
loope
shll
pop
adc
das
jmp
sub
loopne
aas
int3
mov
adc
inc
push
mov
in
mov
xlat
mov
pop
pop
outsl
add
sub
scas
mov
lret
frstor
dec
inc
jno
pop
mov
incb
jmp
sbb
lret
jnp
pop
cmp
or
insb
xor
pop
dec
cmp
out
int
out
mov
sub
cmc
ficoms
pushf
sbb
out
sub
and
or
ret
mov
in
je
and
hlt
cmp
and
xchg
mov
aam
inc
xor
test
xchg
sub
repz
mov
mov
jg
mov
inc
add
shrb
sti
aaa
pop
sbb
lahf
cmpl
cwtl
push
cli
sub
ja
jmp
mov
repz
in
inc
sbb
sub
inc
rorl
nop
and
cli
fwait
mov
sub
mov
inc
lock
xlat
pop
arpl
sub
jnp
mov
add
push
incl
mov
add
call
or
movsb
dec
mov
sbb
jb
ret
or
xchg
lock
mov
push
and
fsubrp
pop
xor
jge
in
repnz
sbb
xor
cli
repnz
popf
and
stos
sti
mov
adc
xor
xchg
dec
mov
jnp
cmp
lret
mov
mov
test
aas
jl
inc
cmp
push
push
iret
mov
adc
mov
nop
sub
add
das
insl
and
xor
stos
xchg
stos
js
repnz
gs
gs
sbb
add
adc
cld
into
fsubp
insb
lock
add
in
in
adc
int
lret
sub
cmp
mov
das
adc
dec
jns
sub
ficompl
into
and
xchg
cwtl
dec
ret
scas
ljmp
jno
ret
in
aaa
push
dec
xor
jge
inc
outsl
dec
lds
fisttps
cli
add
aad
pushf
jo
xchg
sahf
int
mov
lds
imull
in
fsub
out
jg
in
mov
cmp
adc
adc
mov
add
cmp
push
mov
jle
popa
sbb
adc
push
dec
sarb
sbb
lcall
mov
adc
subb
sub
mov
gs
push
cmp
cmpsl
push
movsl
icebp
rcll
xchg
push
jl
popf
enter
xchg
dec
mov
adc
cltd
test
add
push
jnp
xchg
push
xor
xchg
xor
sbb
xchg
fdivs
and
cmp
mov
cmp
fcmovu
ja
jge
lds
in
in
jne
and
cmp
insb
xchg
test
cmpsb
jno
xchg
sbb
dec
mov
orb
lock
xor
ds
lcall
jae
and
test
add
cmp
xchg
mov
mov
cmp
aad
push
xchg
gs
test
push
pop
enter
cld
sub
inc
adcl
push
adc
add
lods
movsl
popf
xor
mulb
ss
pop
inc
pop
popf
cmc
scas
add
icebp
jae
vpmadcsswd
mov
pop
enter
jae
shll
jecxz
jne
jae
jl
jp
jno
incl
mov
addr16
push
clc
sbb
test
pusha
jecxz
mov
scas
and
pushfw
inc
xchg
sub
popl
js
shrb
xchg
icebp
cmpb
xor
aaa
xchg
sub
int3
movsb
aam
or
pop
out
push
pusha
sub
cmp
fisttps
negb
mov
cmp
loope
mov
xor
rsm
fcomi
jl
jo
rolb
ja
ds
int3
lea
push
and
xchg
rorb
cmp
mov
repz
mov
sbb
or
stos
bound
push
fstp
mov
cmp
sbb
insb
sbb
popa
mov
in
sarb
push
test
fcoms
sub
jmp
mov
push
dec
and
mov
or
imul
xor
adc
cmp
xchg
or
jmp
mov
in
out
mov
in
pop
movsb
cmc
pop
push
mov
cltd
add
in
imul
mov
lahf
lcall
cmp
adc
cmp
dec
pop
push
sar
cmc
mov
pop
add
mov
cmp
sbb
mov
mov
scas
in
lret
adc
or
mov
stos
sub
mov
outsb
pop
incl
pop
jnp
mov
arpl
pop
pop
push
scas
jecxz
dec
cmpsl
mov
out
mov
or
sbb
sti
inc
cltd
in
cmc
pop
fidivrs
sbb
iret
pop
mov
pop
cmp
lods
xchg
jl
stos
xlat
insl
iret
push
xchg
xchg
pop
mov
jb
daa
mov
mov
inc
ret
mov
es
or
gs
mov
adc
psubusw
cmp
outsl
dec
lods
int3
xor
insb
inc
jmp
lock
dec
gs
scas
mov
push
xor
lods
les
repnz
mov
cmp
mov
add
sub
mov
cld
mov
and
cmpsb
jl
xchg
test
in
xchg
ds
es
pop
or
es
adc
inc
jne
fstps
mov
mov
mov
fisubs
cmp
cmp
bnd
dec
lock
inc
add
adc
pop
mov
roll
outsb
cmp
test
inc
repnz
sub
adc
mov
xor
scas
dec
jmp
movsb
into
cld
test
insb
shll
ljmp
ds
outsl
or
test
adc
sti
push
sti
dec
lds
add
inc
jbe
jbe
xchg
sub
mov
fdivs
add
nop
ds
sbb
or
ljmp
xor
pop
sub
and
loop
out
in
rdpmc
outsb
push
stc
mov
sub
enter
dec
fdivrp
sub
dec
sbb
inc
push
xchg
lahf
movsb
inc
or
jbe
roll
dec
pop
movsb
jl
ljmp
inc
inc
fs
nop
pop
cmp
sbbl
data16
test
jae
push
adc
icebp
add
ficoml
mov
sti
dec
or
cmpsb
mov
pop
jae
pushf
mov
pushf
fists
mov
inc
loopne
lret
ja
adc
jle
cmp
xchg
xor
lds
inc
xchg
enter
hlt
outsb
dec
lcall
cmpsl
shrl
cwtl
ljmp
mulb
xor
mov
out
pushf
pushf
mov
inc
int3
scas
insb
mov
popf
dec
daa
roll
pop
pop
or
pop
jne
cmpsl
push
popf
rclb
add
cmpsb
add
insl
mov
fwait
pop
inc
xchg
rcll
pop
shrl
sahf
lds
jl
jno
test
test
jmp
fstps
inc
int
out
cmp
call
xchg
insl
js
movsl
and
push
push
mov
jbe
es
lcall
je
scas
jo
pop
stc
in
xchg
mov
notl
in
dec
push
mov
in
clc
xor
mov
xor
xor
adc
out
cmpsl
pushf
ret
lahf
mov
xchg
jo
xor
dec
pop
call
dec
mov
test
pusha
in
jle
test
jo
mov
mov
xor
divl
rcrb
inc
xchg
cmpsb
shl
imul
loopne
or
rorl
cmp
mov
jl
adc
out
shl
les
ja
cld
in
xor
pop
outsb
out
out
jle
push
inc
and
xor
cmp
inc
into
pop
push
lods
xor
adc
ljmp
mov
cltd
sbb
ss
test
fmuls
mov
sub
fcmovbe
xor
insl
insl
loope
sarb
in
push
sub
test
fstl
rorb
mov
sbb
or
push
lods
les
push
sub
adc
mov
call
stc
test
push
sbb
xchg
arpl
loop
lods
fstpl
loopne
pop
jne
push
push
jne
sar
out
mov
jmp
int3
gs
dec
inc
push
mov
icebp
or
xchg
or
jp
sbb
jp
es
add
movsb
in
cmpsl
push
add
jno
jb
loope
fwait
inc
xchg
and
int
stc
pop
icebp
orl
in
mov
adc
stc
pop
fs
popa
xchg
cmp
imul
lahf
stc
inc
enter
movl
shll
pop
jo
adc
sbb
xor
mov
add
pop
cmpsb
subl
fprem1
fildll
enter
scas
cltd
push
int3
lret
scas
and
jle
xor
cmp
lods
inc
add
jns
mov
mov
adcb
lods
mov
push
jmp
movl
jmp
push
sub
cld
mov
arpl
add
inc
cmp
jnp
je
xchg
hlt
fmuls
imul
loop
xchg
int3
nop
push
sub
and
adcb
rclb
pop
sti
addr16
push
scas
mov
cld
jb
mov
sub
jecxz
mov
fidivs
mov
stc
sub
into
iret
out
sub
add
scas
inc
lea
xchg
ret
dec
pushf
add
inc
sbbb
lods
add
fidivs
and
cmp
ret
sbb
xor
rolb
mov
shlb
stos
jns
mov
adc
push
sti
out
cld
mov
jnp
ds
ror
lret
andb
adc
ds
sbb
sub
cmp
rcrb
add
jno
aad
xor
nop
out
scas
pop
mov
repnz
mov
jno
or
outsb
gs
pop
xor
mov
jmp
shll
sbb
fcoml
mov
mov
mov
test
movsb
es
adc
jnp
mov
js
out
jge
insb
insb
lret
in
mov
or
add
jnp
mov
mov
aam
daa
push
addb
xlat
int
stos
mov
mov
cltd
jb
and
popf
dec
int3
out
daa
lcall
aam
mov
add
imul
aad
dec
sub
sub
pop
push
lods
jb
in
dec
adc
hlt
push
cmpsl
adc
push
pop
in
pop
adc
es
lret
xlat
cmp
or
nop
addl
movsb
dec
dec
adc
loop
stos
cmp
ret
cmp
repz
outsl
ja
or
sti
push
rcrl
gs
aaa
sbb
dec
addr16
add
jge
jnp
inc
dec
inc
dec
pop
push
out
int3
cld
ret
pop
cmp
cld
cmp
sbb
aaa
mov
push
repz
shrb
mov
xchg
or
mov
aas
dec
dec
inc
dec
cmpsb
mov
int3
inc
cmc
pushf
pop
xchg
clc
jb
mov
fcomp
movsb
dec
mov
nop
out
out
push
ret
dec
pop
push
inc
push
inc
cmpsl
push
shlb
repnz
adc
mov
roll
inc
xor
leave
xchg
mov
or
test
jl
ds
mov
push
clc
clc
dec
pop
stc
mov
cmp
cwtl
sbbl
ret
inc
mov
imull
and
out
cli
pop
push
loop,pt
ja
ds
mov
jl
jae
or
dec
out
call
imul
mov
es
imul
mov
dec
hlt
das
loopne
jo
addr16
movsb
bound
dec
js
add
stc
stos
mov
stos
cs
out
pop
fs
sub
sbb
mov
leave
aas
sub
out
leave
inc
imul
andb
cltd
subb
ja
or
idivb
xchg
xchg
cmp
aas
roll
push
arpl
lea
mov
push
xchg
cld
push
jl
cmp
negb
cmp
mov
test
fimull
imul
aad
pop
sbb
sub
shl
jp
fbstp
dec
lock
pop
mul
jmp
add
pop
push
lock
insb
lcall
sub
adc
adcb
or
inc
pop
dec
mov
shl
outsl
jb
lods
pop
inc
das
rorb
adc
push
or
inc
inc
mov
rcl
push
add
sarl
insb
lods
loopne
bound
adc
push
nop
aaa
out
jl
and
fnstenv
fistpll
and
das
inc
out
ret
repz
pop
std
cmp
fcomp
and
mov
sub
push
add
mov
jb
jb
jbe
pusha
mov
jno
ret
shll
jb
loope
insl
add
push
xor
divps
mull
xchg
sti
jno
nop
gs
add
sbb
push
xchg
inc
ss
xchg
push
fadd
in
popf
mov
xchg
xor
pop
pusha
push
jg
jle
mov
jne
jle
cmpsb
lahf
outsb
cs
xor
lcall
add
imul
jle
mov
lock
inc
call
push
mov
imul
xchg
mov
cmp
pusha
dec
inc
inc
imul
mov
sub
pop
loop
inc
cmc
mov
lods
fwait
orl
inc
mov
shlb
or
js
or
mov
lods
out
ret
pusha
mov
xchg
and
jp
xor
sbb
xor
insl
pop
subl
aam
dec
arpl
jg
jns
cld
ja
jo
xor
push
pop
dec
pushf
decb
scas
sub
push
sbb
xlat
loop
adc
fs
or
and
dec
jge
sbbb
cwtl
mov
mov
gs
sahf
adc
icebp
mov
rol
aas
push
hlt
pop
out
inc
fstps
add
jge
orl
test
and
jno
push
mov
xor
enter
fdivl
jge
pop
push
rcrb
das
push
scas
adc
divb
jae
aas
cli
mov
out
cmp
lock
out
mov
pop
shlb
cwtl
ror
mov
jge
cwtl
ljmp
fidivl
jns
int3
lock
mov
fidivl
pop
in
cmpsb
add
es
adc
gs
outsl
cli
jge
outsb
mov
les
fcoml
mov
cld
icebp
cmp
enter
movsb
xchg
orl
popf
mov
loopne
pushf
pop
cmp
mov
jg
adc
out
and
mov
inc
push
sti
fildll
icebp
stc
adcb
xchg
xchg
dec
fwait
enter
sarl
pop
mov
lret
sub
movl
repz
jle
fiaddl
inc
xchg
fnclex
push
lock
sub
loop
test
ret
pushf
and
pop
xchg
mov
dec
fwait
push
jp
stos
cmp
push
push
xor
fs
cmp
cltd
or
dec
cmp
jb
inc
cmpsb
lahf
stos
push
stos
mov
add
aad
cmp
cwtl
mov
inc
pop
sub
add
out
loope
jno
ja
inc
push
sbb
xchg
rorb
and
xor
push
out
fwait
mov
cmp
or
adc
aas
push
add
mov
sub
repz
pop
divb
pop
and
or
ljmp
push
xor
ficoms
sbb
sar
imul
mov
push
repnz
iret
and
or
mov
or
mov
cltd
pushf
push
mov
push
mov
dec
out
xchg
cld
mov
pop
sbb
xchg
scas
push
sub
mov
sub
das
add
out
inc
popf
pop
dec
outsb
fnstcw
xchg
inc
imul
jecxz
hlt
adc
cmp
cmp
insb
inc
push
pop
adc
sub
mov
mov
mov
movsb
lods
in
mov
or
cmpsl
xchg
add
xlat
push
pushf
fildl
call
test
movsb
or
jo
pop
xchg
cmp
cmpsl
jp
mov
cmp
outsb
dec
cmp
jp
push
inc
inc
cmp
sahf
std
idivb
and
push
push
ficoms
icebp
adc
lret
push
fistpll
sbb
movsl
pop
out
adc
pushf
lods
fmul
lods
in
rol
decl
jae
dec
jne
out
jmp
les
cwtl
lods
ss
add
cmpsl
add
or
cs
mov
fildll
rolb
jle
jno
stc
inc
scas
lds
ret
or
outsl
or
and
lcall
mov
nop
add
cmp
test
enter
add
push
fcmovne
mov
lods
addb
adc
orb
cmp
movb
inc
lcall
push
mov
inc
jb
sbb
adc
int
mov
mov
int
or
out
mov
push
out
fstp
xor
sahf
push
or
pop
inc
xor
adc
bound
inc
cmp
mov
popa
sahf
decb
inc
inc
fsts
faddp
in
mov
mov
ret
ss
cs
aaa
dec
xchg
test
jae
add
stos
test
mov
mov
das
addb
sbb
inc
push
sbb
fisttps
cmpsb
lea
sub
mov
cmp
push
jmp
fwait
xorb
sub
xchg
add
loopne
in
inc
inc
and
jge
jmp
add
pop
popa
dec
pop
add
stc
dec
jb
cmp
call
pop
sub
adc
repz
mov
mov
xchg
call
addr16
jge
xchg
call
fs
dec
add
mov
outsb
pop
ret
push
ret
aas
pusha
aas
std
aas
cld
push
push
mov
ljmp
orl
jmp
not
dec
mov
icebp
sbb
mov
into
push
sub
std
and
or
lock
test
inc
orl
in
int3
mov
lds
inc
leave
inc
in
jge
std
mov
xchg
andl
push
in
inc
push
dec
sbb
movsb
bound
add
popf
int3
and
jg
insl
push
dec
aas
push
stos
mov
rclb
and
das
jbe
push
out
inc
aad
in
into
loopne
pop
mov
cmp
jbe
sub
in
inc
fadd
push
repz
or
nop
sbb
inc
dec
add
add
add
cmp
scas
fs
adc
hlt
pop
and
lahf
mov
cli
sbb
cmp
jge
and
pop
pop
ja
lret
shr
mov
pop
xchg
adc
rorb
mov
popf
jecxz
pop
and
pop
adcl
cmp
mov
sub
loope
pop
fildll
movsl
test
insb
xchg
add
enter
into
jae
sub
cmp
push
push
mov
mov
loop
into
mov
jns
push
lret
popl
push
mov
int
cli
mov
mov
dec
add
ja
std
lret
mov
add
cmp
jp
lock
sub
and
sbb
cld
pop
int3
inc
inc
dec
fwait
sbb
pop
repnz
into
pop
and
mov
ret
insb
cmp
addr16
sti
jmp
enter
add
pop
into
aad
cmp
push
sub
push
nop
mov
xchg
cld
sbbb
push
ljmp
cmpsl
mov
jo
jge
shll
in
inc
xor
inc
jmp
in
cltd
inc
lea
adc
xchg
pushf
aaa
xlat
inc
push
push
push
jl
mov
dec
xchg
lock
cmp
cmp
pop
hlt
xor
jno
xchg
xchg
in
xor
push
fldcw
add
sbb
mov
cs
int
lods
pop
testb
adc
addb
fs
stos
cmp
shrl
int
sub
push
mov
adc
stos
les
xchg
nop
fwait
pop
jns
sbb
push
add
in
and
pop
add
mul
fadds
mov
mov
xor
cld
mov
xchg
int
mull
idivb
fisubs
mov
scas
push
xorl
into
lret
std
out
push
jmp
inc
xchg
adc
jno
idivb
mov
incl
cmc
and
shr
mov
lret
sbb
adc
cmp
repnz
xor
or
int
sub
push
push
shlb
rcl
inc
sbb
movsb
ret
mov
xlat
pop
out
adc
idivb
and
test
hlt
inc
fsubl
mov
dec
ja
ret
jns
mov
cmp
mov
mov
stos
add
sbb
fsubl
jecxz
dec
cwtl
cmpsl
inc
sub
dec
pushf
call
rorl
inc
in
insb
inc
out
dec
lock
addr16
xchg
sahf
push
movsb
mov
mov
jmp
imul
xchg
mov
lock
push
cld
mov
jge
aaa
jno
fabs
sub
add
int
jo
add
add
pop
les
movsb
sbb
je
in
add
xchg
daa
adc
nop
pop
loope
ljmp
out
mov
mov
out
xchg
or
lahf
sbb
xchg
leave
in
lret
push
add
loopne
popa
jno
cld
js
cmp
or
in
add
fisubs
lods
scas
xor
sub
pop
jbe
into
pop
lods
setnp
int3
jmp
or
iret
into
test
ret
cs
bound
jb
iret
cmc
xchg
ficomps
inc
outsb
std
insl
sbb
xorl
pop
dec
jae
faddl
rclb
jae
leave
aam
add
lds
adc
ja
jne
dec
mov
ss
inc
iret
in
push
mov
cwtl
cld
cmp
fsubrl
gs
jle
cmp
push
adc
fcompl
fcmovu
loopne
test
bound
cltd
sbb
shlb
int
pop
outsb
inc
or
push
sub
insl
pop
pop
fists
lret
push
xchg
ret
ss
mov
pop
mov
sub
fildll
mov
ljmp
mov
inc
nop
out
nop
sub
lods
add
push
xchg
aaa
pop
ss
push
cli
push
mov
mov
xchg
cmpsl
fcmovnu
push
insl
cmpsb
push
jg
stc
jge
mov
mov
jns
push
push
scas
push
sub
push
psadbw
nop
push
xchg
movsl
roll
jne
jmp
sub
push
pop
ss
scas
or
sbb
cwtl
mov
cmp
push
mov
movsb
dec
clc
es
sar
push
enter
icebp
shrl
out
fs
out
shlb
fnstcw
scas
sahf
scas
popl
fstpt
sbb
aad
test
xor
sti
fwait
xor
mov
data16
in
sub
dec
lahf
xor
insb
movsl
inc
hlt
mov
imul
cmp
mov
pusha
mov
mov
fsubrs
jbe
aam
sub
je
mov
push
scas
ds
ret
les
push
jp
push
repz
cli
leave
inc
fmul
insb
fsts
ja
movsb
dec
stos
mov
add
inc
movsb
fbstp
xlat
dec
cwtd
adc
outsl
fmuls
dec
inc
std
pop
lahf
inc
sub
dec
mov
stos
push
scas
hlt
inc
test
ficoml
dec
scas
jecxz
xchg
adc
xchg
pop
add
sbb
or
xor
cli
test
rep
pop
scas
stos
mov
movsb
cmpsb
fs
push
shrb
mov
xchg
mov
xchg
or
add
cmp
push
sbb
push
add
cwtl
and
ret
jb
mov
mov
jne
out
fidivs
and
hlt
dec
popw
call
push
out
add
sbb
and
and
imul
and
out
gs
aad
dec
cmpsb
loope
mov
lret
call
je
ljmp
cmp
insl
sub
inc
push
data16
in
iret
add
rcl
cmp
cmp
notl
mov
lcall
inc
xor
add
frstpm(287
leave
inc
push
sbb
xchg
push
daa
enter
loope
inc
dec
mov
sub
lret
sahf
jge
mov
adc
inc
imul
add
add
mov
test
xchg
inc
adc
hlt
mov
leave
iret
movswl
imul
ret
out
inc
jp
test
pop
test
jge
adcb
pop
jno
pop
aas
fmul
and
and
adc
dec
pop
lock
lcall
push
jne
adc
or
ss
stos
mov
xchg
icebp
mov
sub
adc
sub
inc
mov
sub
mov
ss
in
loope
fdivrs
or
add
sar
gs
pop
leave
xor
jb
cmpb
add
ja
leave
xchg
xchg
cmp
or
push
jg
adc
mov
jecxz
mov
aas
data16
dec
push
mov
mov
fwait
sub
and
pop
cld
adc
and
arpl
daa
sub
pop
push
cli
xchg
jo
pop
fs
roll
push
adc
xor
pop
outsl
in
push
adcl
repz
pusha
or
or
test
out
xchg
pop
cmp
iret
in
ja
pop
movsl
mov
xchg
test
shr
inc
inc
jbe
pop
push
mov
ja
add
test
aaa
jnp
sub
push
mov
adc
adc
mov
or
rclb
enter
xor
xchg
cmpsl
sub
imul
fistpll
ficompl
mov
aas
adc
pop
ja
and
push
aad
sbb
mov
aam
cmpsl
in
mov
xchg
mov
mov
jle
popa
mov
sub
push
mov
icebp
shll
dec
std
mov
xchg
ljmp
popa
mov
int
rorl
push
sub
les
push
je
mov
ret
out
xchg
jbe
movsl
fiadds
ret
roll
or
cmpb
adcb
push
iret
dec
cmc
out
insl
jbe
mov
pop
mov
mov
sub
lods
sbb
out
iret
pop
rcll
movsl
sub
scas
in
lret
jmp
add
sub
dec
movsl
mov
mov
mov
sbb
xchg
sbb
inc
out
daa
out
iret
push
sub
pop
jle
pop
dec
cmc
dec
adc
lds
aam
and
lds
sarl
xchg
lock
pop
or
inc
adc
pop
setno
push
insb
sub
aaa
out
out
mov
test
shlb
mov
push
inc
mov
iret
push
jnp
xchg
popl
es
dec
shlb
leave
mov
dec
ja
jmp
pushl
stos
aam
sub
mov
inc
into
das
test
mov
jae
and
std
and
push
lahf
sub
mov
mov
popl
adc
popa
mov
in
sbb
adc
lds
mov
mov
stos
in
repnz
ja
mov
mov
inc
lahf
aam
add
fwait
push
cli
repnz
ja
notl
filds
pop
cmp
leave
push
sub
push
in
int3
testl
add
lret
fdivr
mov
sbb
ret
ja
pusha
scas
push
loop
clc
mov
inc
fs
das
out
and
adc
arpl
jnp
addr16
iret
in
mov
adc
dec
lcall
fsts
jo
insl
loopne
adc
je
xchg
shrl
pop
add
loope
add
or
ss
cli
pop
mov
ret
push
aad
sbb
push
popa
pop
mov
jmp
fsubl
xor
roll
lock
adc
add
les
lods
pushf
dec
push
aas
popf
scas
jmp
movsl
fistl
loop
mov
xor
pop
lcall
mov
test
imul
aad
mov
mov
sbbb
movsl
jnp
imul
es
movsl
loop
leave
clc
insl
pop
rcrb
add
dec
in
daa
mov
cltd
pop
shll
push
cltd
push
fldlg2
orb
nop
popf
push
sbb
mov
mov
sbb
stos
call
mov
jmp
and
push
sub
leave
jle
mov
xor
in
pop
fstp
lock
push
call
movsl
mov
cmp
push
fisubrl
mov
mov
push
or
inc
adc
add
fcompl
cmp
mov
lahf
icebp
xchg
fisubl
daa
movsl
mov
sbb
enter
mov
jns
pop
fnstsw
jge
movsb
push
gs
xchg
mov
das
push
cmc
xor
xchg
stos
push
outsl
inc
xor
scas
mov
or
jg
pushf
call
decl
dec
lods
shr
mov
decb
jnp
fs
mov
fmull
mov
cld
ds
adc
sub
int
mov
jbe
fisttps
and
or
les
or
pop
mov
mov
jge
les
mov
xchg
xchg
sbb
mov
or
sahf
dec
int3
jnp
cmp
leave
jnp
repnz
cmpsl
inc
push
shlb
pop
outsl
hlt
cli
xchg
mov
adc
hlt
les
pop
ret
loop
mov
insb
in
inc
xchg
push
in
scas
dec
sub
cmp
mov
adc
mov
xchg
cmpsl
mov
cmp
cmp
stc
add
pop
inc
and
repnz
xchg
pop
rcll
cmpsb
jnp
int3
loope
jp
in
sub
std
cwtl
out
dec
push
popa
jecxz
cli
dec
sub
adc
mov
lret
fwait
jae
mov
enter
aaa
push
rclb
sarb
push
xchg
cltd
pop
sbbb
push
bound
xor
decl
cmp
fwait
data16
popa
sub
aaa
or
shrb
mov
sbb
cmp
cli
mov
loope
loope
shll
dec
xchg
hlt
fmuls
scas
gs
xchg
cwtl
dec
jecxz
cmc
sbb
xorl
push
mov
outsl
nop
sub
xchg
xchg
std
loopne
rcl
mov
add
or
js
pop
jl
andb
int
repnz
cmp
cmpsb
pop
movsb
outsb
mov
xchg
xor
cwtl
test
bound
push
or
or
ss
and
add
pop
clc
cld
lods
fdivrs
sbb
or
sub
inc
je
mov
into
ret
cmpsl
call
push
shlb
cli
inc
addb
es
int
popf
daa
rclb
ss
into
les
mov
cmpl
sbb
xchg
jle
loopne
lock
les
add
in
rclb
mov
pop
arpl
pop
sbb
sbb
repz
out
jecxz
or
cmpsb
mov
fcoml
mov
aad
cmpsb
xor
add
lds
sub
insb
cli
pop
adc
inc
lea
clc
std
xchg
pop
mov
jmp
cmp
push
and
movsb
loopne
in
sbb
aaa
jb
mov
pop
gs
mov
out
cld
arpl
dec
js
cmp
inc
xorb
fnstenv
sbb
call
cld
or
test
add
movaps
ficoms
push
inc
ds
insb
sub
clc
mov
cmpsb
sbb
movsb
xchg
jo
out
mov
mov
nop
rcll
jge
out
or
mov
iret
aaa
dec
data16
dec
mov
fidivs
push
andl
mov
xor
test
sbb
inc
divl
inc
xchg
inc
mov
test
xchg
add
sub
add
mov
outsb
fdivl
jmp
sbb
cmp
icebp
adc
jl
addb
fildl
jae
sub
sub
es
dec
aad
int3
jecxz
aaa
push
mov
pusha
mov
sub
cs
movzbl
daa
mov
add
cwtl
add
or
pop
int3
ret
out
btc
lahf
jmp
sub
nop
stos
cmc
jnp
nop
arpl
mov
mov
mov
leave
push
jno
inc
push
sub
sub
cld
punpckldq
movb
sub
mov
icebp
pop
cmp
sbb
pop
and
push
jge
movsl
inc
dec
push
push
push
pushf
sbb
push
push
lds
and
mov
add
sbb
das
add
xlat
sbb
fisubl
hlt
sub
cld
push
adc
sbb
addr16
std
in
add
imull
xor
jle
adc
fistpll
repnz
fistps
imul
pop
in
xchg
inc
data16
clc
push
push
inc
and
jbe
dec
cmpsb
mov
lret
or
pop
mov
bound
je
dec
or
roll
mov
mov
repz
xchg
es
pop
sub
insb
dec
out
repz
sub
inc
out
jle
aam
je
mov
mov
jbe
mov
mov
xor
dec
pop
test
aas
lock
adc
in
adc
jg
mov
icebp
push
xchg
dec
sahf
xor
les
xlat
xchg
pop
repnz
xor
fnstcw
cmp
ret
call
sbb
or
les
cmpsb
outsl
es
loopne
push
lods
sub
call
fistps
add
xchg
test
push
nop
js
lret
mov
dec
sbb
jge
mov
sub
cmp
test
out
push
les
leave
outsl
push
bound
idivl
sub
adc
mov
outsl
and
pop
shrb
cmpb
jbe
pop
push
dec
inc
sub
adc
out
or
mov
mov
pop
inc
add
addb
test
loopne
sbb
jg,pn
jmp
xor
in
loop
jg
pop
push
jae
out
pop
adcb
mov
inc
dec
out
addb
xor
pop
cmpb
jg
mov
bound
mov
add
inc
movsl
fidivrl
fadd
mov
lds
vunpcklps
ja
sbb
mov
mov
out
pop
testl
addr16
mov
jne
pop
lret
cltd
sub
lahf
out
inc
xchg
aas
pop
js
pop
dec
mov
inc
aam
test
jne
fnstcw
pusha
iret
lods
mov
rolb
and
jg
mov
stos
mov
gs
dec
filds
sbb
addb
out
adc
ss
sub
outsl
jp
sub
sahf
int
cs
fimuls
lahf
lods
aam
inc
mov
andb
fwait
in
lahf
cmp
or
mov
mov
icebp
hlt
xor
jp
lret
or
mov
ret
and
sbbl
jg
pop
lahf
pop
outsb
sub
insl
in
xor
jne
pop
push
or
push
and
scas
ljmp
add
lds
test
loopne
into
aam
inc
xchg
test
dec
push
jg
lea
lcall
mov
out
pop
and
ds
sbb
je
jmp
in
jne
pop
sarl
xlat
xchg
add
imul
xor
nop
scas
out
loop
xchg
inc
inc
and
int
sub
xor
mov
xchg
aaa
aas
ficoms
pop
mov
jecxz
pop
out
stos
push
aad
out
outsb
fwait
sbbb
dec
pop
push
pop
pop
inc
push
mov
dec
xchg
ret
mov
xchg
data16
xchg
hlt
clc
pop
cld
sub
subl
fcompl
push
fwait
push
inc
or
std
xchg
pop
into
fiadds
mov
dec
popa
dec
pop
push
mov
xchg
out
lcall
lret
jp
xchg
cld
inc
jle
daa
movsb
push
pop
lcall
int
fldl
sbb
lods
pop
vphadddq
fdivrs
pop
cmp
into
mov
js
aam
arpl
mov
cltd
test
je
jno
imul
xor
cmpsb
mov
inc
fs
and
inc
cmpl
jle
std
inc
xchg
pcmpeqb
cmp
repnz
mov
pop
mov
xorl
push
pop
dec
test
inc
les
jmp
lcall
jmp
pop
cli
jmp
sub
pop
movsl
push
add
jg
adc
jmp
scas
jnp
in
jle
cmp
push
push
sbb
pop
sbbb
js
mov
pop
lcall
aad
lea
cmp
sbb
insl
idivb
ja
in
icebp
fisubl
data16
sbb
aas
aam
xchg
mov
cmpsb
sar
push
inc
mov
mov
sub
mov
out
fwait
sahf
inc
ljmp
pop
insl
sub
sbb
jo
aam
in
lods
int
cwtl
arpl
pop
rcrb
xchg
incb
int3
mov
outsl
jo
into
mov
sub
leave
dec
jp
pop
dec
filds
inc
lock
mov
xchg
xchg
in
jns
sub
aam
dec
addr16
dec
lcall
xor
into
into
lea
sbb
lods
lds
mov
xchg
xor
sub
imul
pop
cmc
sbb
notrack
int
adc
jnp
das
jmp
or
ja
test
pop
sahf
mov
imul
jno
hlt
push
inc
inc
fwait
lea
cmp
stos
lret
lods
adc
cmp
shr
pusha
xchg
adc
addr16
xlat
xchg
lea
movb
dec
loopne
mov
add
addl
clc
aas
cmp
push
repz
lret
xchg
xchg
ret
push
push
mov
out
bound
stc
sbb
imul
mov
in
cwtl
inc
mov
scas
shll
cmpsl
fimull
loop
bound
aas
and
jmp
push
xor
xor
sbb
jg
dec
dec
and
dec
add
sbb
test
cmpsl
mov
xlat
sub
jo
xchg
jo
jp
clc
sbb
cmp
jl
or
loop
shlb
stc
sbb
cmp
sbb
adc
inc
test
mov
aad
lods
int
jno
jns
lods
pop
movsl
test
insb
pop
push
in
pop
jl
mov
int3
outsl
outsl
adc
mov
lret
aam
inc
lds
daa
xchg
mov
mov
imul
xchg
jp
add
jmp
and
sub
dec
stc
inc
mov
dec
or
push
int
mov
push
movsl
repz
sbb
lods
sahf
mov
or
loopne
jae
scas
xchg
es
mov
dec
or
xorb
movaps
fsubrl
cmpsb
in
dec
call
push
sbb
fdivl
or
cli
cmp
jle
adc
sbb
dec
push
and
fld
clc
movsl
mov
and
ror
fs
sbb
icebp
arpl
leave
pop
sub
lock
mov
mov
pop
mov
bound
mov
pop
scas
xor
push
in
test
int
mov
jne
mov
pop
mov
mov
xor
xchg
push
fucomi
clc
pop
out
pushf
and
scas
andl
adc
inc
sti
fstpl
icebp
inc
or
xor
aam
mov
adc
shl
cmp
sysenter
pop
pop
movsb
outsl
scas
inc
fmuls
std
dec
mov
iret
lds
cmpsb
jecxz
in
or
aad
jecxz
mov
jb
fcomps
sub
popf
mov
rclb
sbb
loopne
scas
fisttpl
popa
push
jge
inc
out
test
test
xor
ljmp
pop
dec
xor
add
cli
fidivrs
mov
or
repz
notl
mov
jbe
pop
loop
cli
out
jmp
lret
and
mov
in
mov
mov
xor
add
sub
sub
scas
sbb
xor
adc
test
xchg
mov
divl
adc
or
lods
sub
push
cmp
shlb
mov
mov
addr16
or
testb
mov
dec
fs
jb
mov
jnp
pop
or
push
or
or
in
imul
leave
std
inc
lret
lods
xchg
mov
mov
push
dec
aad
in
mov
out
out
cmp
idiv
cld
repz
adcb
xlat
xchg
movsb
sub
aas
xchg
out
jne
fwait
or
add
arpl
jg
push
hlt
push
jmp
dec
sbb
mov
jnp
ficoml
jae
push
and
scas
fiadds
ficoml
jecxz
movsl
jge
aam
fsubs
leave
mov
faddl
cs
call
es
leave
cmp
and
je
or
mov
stc
inc
inc
inc
incb
test
out
orl
push
cmp
mov
lock
jnp
jmp
decl
mov
jecxz
mov
pushf
insb
in
xchg
out
in
out
push
pop
insb
dec
mov
push
and
pop
cmp
pop
pop
popf
rolb
mov
dec
xchg
mov
inc
out
imul
pop
out
push
sub
pop
pop
insb
jmp
cmp
insl
add
jae
fxch
sbb
rcrl
shlb
inc
sub
push
pop
icebp
dec
dec
xchg
mov
jae
add
shl
jle
cmp
lods
jae
pop
and
loop
rorl
mov
xor
test
bound
jo
mov
jns
not
movsb
pop
pop
sti
lds
xor
or
jge
sbb
push
sahf
add
push
ret
outsb
xor
sbb
xor
int
xor
push
rol
fistpl
add
js
adc
xchg
push
out
pop
in
xlat
add
rcrl
mov
sbb
and
ror
and
pop
jmp
dec
and
int
mov
cmc
mov
mov
pop
inc
bound
push
shlb
xchg
sbb
daa
insl
sti
pop
movsl
or
mov
lods
vunpcklps
cmpsb
das
scas
pop
mov
pop
adc
push
cmp
mov
adc
fwait
jl
xor
stos
add
mov
mov
push
push
test
cmp
aaa
je
mov
daa
sub
cmp
jne
xchg
lods
xchg
dec
jge
inc
inc
push
leave
pop
cmp
idiv
jg
fwait
xor
mov
xchg
push
sbb
cmp
jno
mov
in
addl
outsl
jns
ret
pop
pop
fnstsw
pop
test
mov
loope
hlt
xlat
mov
imul
lahf
test
mov
inc
in
mov
out
xor
inc
push
lret
mulb
cmp
jl
in
out
scas
jge
movsb
push
mov
inc
sbb
popf
pop
inc
pop
add
add
js
repnz
jo
lcall
jb
aas
xor
shlb
loop
pop
and
mov
repz
loope
dec
test
test
lret
aad
sahf
mov
test
sub
cmp
cs
testl
fldcw
iret
lods
fistpll
or
inc
inc
sbb
jge
jecxz
xor
sahf
jne
mov
addr16
and
lds
inc
mov
fsubl
je
adc
ljmp
xor
pusha
pop
push
leave
aaa
jb
out
jge
inc
or
aad
push
outsb
push
icebp
or
cmc
mov
push
jecxz
cs
les
sub
push
sbb
rclb
clc
sahf
outsl
sahf
xchg
bound
outsl
cmc
test
js
add
lret
mov
es
add
cmp
fmull
sbb
push
xlat
cld
add
xor
or
popa
in
mov
pusha
int
mov
insl
mov
dec
cmp
push
inc
nop
dec
xor
lods
loopne
nop
jae
ret
imull
and
repnz
psubusw
fnstsw
les
aaa
mov
cmp
mov
adc
cs
movsb
xchg
xlat
cltd
ss
cmp
stc
movsl
pop
cwtl
divb
sub
push
pop
into
mov
mov
dec
fst
popf
xchg
movsb
add
or
jb
je
cmpsb
jb
inc
mov
negl
cmp
jo
adcb
sbb
xlat
adcb
or
jg
adc
inc
mov
inc
adc
test
dec
sbb
not
into
clc
out
iret
mov
in
int3
stc
faddl
ret
fnsave
aad
aas
push
add
fsubr
out
jl
mov
movsb
jne
cs
ss
das
mov
push
mov
push
cvtdq2ps
into
sub
mov
mov
mov
int3
out
pusha
xor
or
dec
shlb
pop
shrl
into
push
mov
scas
push
icebp
jle
mov
inc
loopne
into
mov
idivl
push
dec
mov
mov
or
adcl
and
jg
sbb
idivl
xchg
fcmovb
insb
popf
fisubl
lds
loope
xchg
gs
fistl
cmp
pop
or
into
sti
negl
mov
dec
es
push
and
mov
mov
jle
sub
push
jmp
test
std
in
and
pop
adc
psubw
pushf
fcoms
cld
in
test
imull
adc
iret
adc
push
add
push
rolb
mov
and
jecxz
pop
adc
push
push
add
repnz
leave
cmp
repnz
insb
les
adc
ret
loope
mov
or
or
inc
mov
gs
or
icebp
inc
pop
sbb
loope
adc
stc
xchg
push
jno
dec
fistps
lock
and
fnstenv
adc
cmp
lcall
adc
jge
sbb
cmp
bound
jg
fidivrs
push
test
imul
out
xchg
pop
shll
inc
and
pop
les
fisttpl
adc
fsubrs
inc
test
add
mov
jns
jp
and
jo
aas
in
push
test
push
adc
add
loope
pop
nop
fs
dec
fistpll
mov
ds
inc
pop
imul
ljmp
add
mov
mov
push
fdivrs
mov
aad
and
arpl
mov
and
test
jnp
xchg
js
pop
mov
data16
cmp
int
or
fidivl
mov
mov
stos
pop
pop
mov
ret
sbb
out
icebp
jmp
push
push
out
mov
add
loop
aad
pop
dec
or
add
cmc
testb
add
test
int
pop
in
scas
or
lcall
leave
sbb
push
lret
enter
sarb
insl
scas
loop
cltd
jge
pop
cs
rclb
and
imul
push
scas
dec
pop
lcall
cmp
data16
ljmp
leave
sarb
in
jmp
fisubl
and
sti
repz
and
int
or
mov
or
jb
jmp
adc
xor
aad
add
add
pop
in
filds
rolb
xor
cmp
in
fisubl
mov
mov
lds
insb
push
sbb
mov
lods
adc
push
push
cltd
dec
aaa
in
movsb
adc
out
add
mov
or
stos
jl
push
es
jp
xchg
xchg
into
push
repnz
iret
and
inc
and
lock
xlat
cmp
adc
xor
jle
xchg
fwait
outsb
or
fs
push
in
inc
loop
add
dec
inc
adc
pushf
jle
xor
outsb
or
add
cltd
adc
inc
xchg
insl
mov
int3
aaa
in
out
ret
stos
out
shlb
fwait
cwtl
sub
cmpb
mov
and
mov
in
push
xchg
and
or
cmp
xor
mov
insl
imul
sub
test
xor
sbb
sbb
cwtl
out
adc
mov
pushl
fadds
popf
cli
scas
pop
les
pop
mov
or
sahf
into
outsl
dec
pusha
mov
lods
hlt
outsl
dec
outsl
rcll
mov
arpl
int3
scas
icebp
push
out
adc
std
sub
mov
xchg
pusha
les
aad
dec
mov
sbb
fstl
leave
movl
add
mov
out
mov
xchg
or
mov
mov
lock
xchg
loop
insl
mov
test
movsl
xor
sbb
adc
loopne
stc
inc
aad
pop
adc
pusha
and
mov
sbb
mov
add
and
jge
pusha
jge
sub
mov
adc
popa
js
jp
ror
push
sbb
test
sub
sbb
dec
imul
insb
adc
ficoms
repz
cs
jmp
jge
sti
jno
in
adc
xchg
fadd
das
jns
adc
jne
fdivrl
pop
shlb
cmpsb
push
movsb
outsl
stos
mov
mov
jb
mov
ss
xchg
lds
jne
daa
jno
pushf
stos
jbe
mov
imul
or
mov
bound
push
mov
fwait
add
mov
lret
adc
push
nop
mov
hlt
add
scas
in
sahf
mov
pop
jno
mov
xchg
mov
jg
call
inc
dec
adc
xor
sbb
hlt
enter
cwtl
sqrtps
jb
rorl
xchg
test
lret
dec
xor
mov
jbe
cld
mov
sbb
cs
cmp
mov
subl
jno
outsb
test
call
popf
stos
sbb
inc
lret
test
pushf
xor
es
int
lock
xor
mov
frstor
iret
xor
aad
fadd
or
notl
ret
xor
push
jns
scas
or
xchg
stc
nop
arpl
ret
adc
js
inc
dec
pop
jle,pn
lea
mov
scas
mov
mov
idiv
out
ljmp
clc
loopne
sub
sbb
add
jecxz
outsb
pop
push
jg
in
mov
into
push
and
and
fs
fstpt
out
pushf
std
les
daa
sub
sbb
fdiv
jmp
fisubrs
mov
clc
and
in
mov
ret
lea
and
pushf
mov
mov
aad
add
sbb
insl
mov
and
mov
gs
adc
out
mov
mov
mov
add
out
jbe
data16
pop
bound
in
call
pop
jb
and
add
mov
movsb
lahf
in
sub
out
adc
jns
jne
add
dec
mov
decb
addr16
xchg
hlt
jg
cmp
loopne
idivl
fiaddl
loope
jl
popf
inc
sbb
mov
or
push
icebp
xchg
dec
imul
inc
enter
data16
mov
ret
iret
fidivl
scas
nop
xor
adc
cs
call
jecxz
jo,pn
jmp
and
loope
mov
stos
movq
daa
repz
mov
xor
aam
movsb
inc
inc
jl
inc
push
shrb
or
cmp
out
lds
pop
movsl
mov
jg
or
sub
fsubs
mov
nop
dec
add
sbb
dec
out
mov
mov
mov
loop
bound
jmp
lods
xchg
pop
adc
insl
out
xchg
movsl
cmp
mov
ret
ret
cmp
or
stc
cmp
mov
lret
sbb
xchg
cmp
inc
mov
mov
dec
adc
jno
dec
or
jnp
push
sbb
push
lods
jg
mov
inc
decl
cmp
mov
pop
cs
or
push
data16
push
inc
mov
fbld
sbb
pop
jo
and
add
mov
dec
fisttpll
arpl
adc
outsb
rcl
mov
pop
fs
leave
jbe
xchg
push
cmpsb
add
mov
jle
push
sbb
out
mov
or
inc
sub
into
push
xchg
mov
mov
push
jg
loope
test
lret
aad
movsl
pop
out
stos
cmp
pop
mov
mov
pop
inc
push
mov
and
popa
sub
xchg
into
aad
test
jge
xchg
popf
dec
in
into
cmp
hlt
es
nop
out
xchg
mov
mov
adc
cmpsb
lret
repnz
add
mov
nop
out
clc
cmpb
bound
out
fnsave
lret
stc
mov
in
dec
cld
xor
aaa
and
adc
jb
push
add
dec
jbe
std
mov
sub
inc
loop
icebp
in
dec
xchg
jbe
data16
jae
mov
mov
les
or
addb
imul
mov
aam
imul
rcrl
push
mov
movsb
sbb
mov
jno
sub
dec
dec
xchg
rcl
test
xchg
mov
lret
inc
jbe
xchg
leave
leave
outsl
push
dec
sbb
popa
loopne
data16
aad
jb
mov
cmp
mov
jae
lcall
insl
cltd
rcrl
pop
jle
or
and
adc
cmpsb
mov
lds
sbb
mov
pusha
sub
dec
dec
inc
inc
xchg
xchg
xchg
insl
dec
jns
cmp
jg
fcoml
loop
cmc
cmp
pop
loop
jecxz
pop
cmp
sbb
in
out
mov
mov
jge
outsb
mov
mov
mov
pop
idivb
out
add
push
pushf
movsl
in
mov
and
push
inc
adc
xchg
loope
aas
pop
xchg
mov
push
inc
inc
mov
xor
dec
xchg
ret
sbb
wrmsr
ficompl
popf
ret
popa
loope
pop
jmp
loopne
stos
inc
fcomps
mov
mov
stos
lahf
mulb
pop
or
imul
xchg
pop
mov
cwtl
jns
movb
cld
xchg
jl
adcb
inc
leave
dec
mov
lods
test
mov
pop
dec
scas
pop
or
scas
dec
mov
add
lret
test
sbbl
cmp
mov
inc
sub
jmp
dec
sbb
sbb
jne
jns
popf
and
loope
andb
jg
xchg
xor
sahf
movsl
icebp
fcmovb
test
mov
jle
adc
fs
pushf
push
inc
popa
dec
push
scas
js
test
mov
cmp
pop
xor
pop
popf
iret
inc
cmp
icebp
mov
loop
js
xor
popa
negl
loope
push
loope
jp
pushf
mov
inc
dec
jo
lds
nop
or
adc
cmpsl
pop
mov
xor
push
cs
sub
testb
jmp
test
mov
or
gs
mov
bound
stc
lds
pop
jl
cmpsl
aaa
movsb
and
pushf
pop
imul
ljmp
mov
loopne
in
push
pop
cmpsl
addb
or
jae
lret
lcall
fld
out
nop
xlat
pop
lcall
cmpsl
mov
rcrl
mov
nop
adc
movsl
mov
jnp
out
add
lret
xor
add
cmc
icebp
xor
test
pop
mov
cmc
loop
xlat
in
xchg
lds
push
int
nop
fcoml
cs
testb
mov
mov
imul
bswap
scas
out
fdivs
xchg
nop
sbb
add
in
jno
out
xchg
and
add
je
jge
or
punpckldq
cmp
xchg
subb
pushf
push
xchg
cmp
cmp
subl
mov
es
das
dec
jbe
cmpsl
dec
jns
inc
loop
in
adc
sub
inc
inc
andb
pop
cmpsb
loope
push
mov
mov
xor
jecxz
scas
stos
jecxz
push
sub
jo
xchg
xchg
mov
scas
inc
in
pop
js
sarl
nop
jae
cmp
xor
dec
adc
pop
cmp
imul
dec
jo
test
inc
cmp
ljmp
stc
test
aaa
mov
adc
xchg
nop
nop
dec
push
sub
pop
arpl
mov
sti
dec
xchg
or
sbb
cmpsl
test
and
ret
jp
mov
fucomi
xor
inc
fdivr
mov
insl
pop
push
sub
lds
jmp
inc
sbb
xchg
mov
movsl
lret
out
addl
mov
mov
jle
xchg
dec
loope
jmp
outsl
sub
popf
out
mov
decb
xor
push
imul
pop
mov
or
cltd
ss
outsb
addr16
mov
mov
arpl
push
es
or
adc
cs
xor
mov
mov
cmp
fnstsw
pop
sub
and
push
mov
inc
sbb
ss
dec
in
adc
mov
push
stos
jg
xchg
pop
add
mov
add
dec
orl
pop
cmp
xor
stos
sar
mov
cwtl
or
jle
pop
sbb
mov
jg
repnz
mov
in
mov
add
adc
dec
xchg
mov
ja
pop
in
jnp
push
adc
das
mov
add
add
jg
stos
mov
jg
sti
sbb
xchg
out
sub
mov
inc
xor
adc
lret
push
xchg
repnz
pop
in
xchg
jmp
pop
rcrl
pop
inc
inc
repnz
movsl
xchg
jns
push
push
cmpsb
push
in
fsubs
jnp
xor
enter
cli
cld
popf
xor
sub
sti
cwtl
fimull
adc
out
push
mov
ret
cmpsl
dec
mov
mov
xchg
pop
das
xchg
jmp
repz
jl
mov
xor
xor
sbbb
inc
jg
inc
inc
jg
lcall
inc
mov
dec
pop
pop
int
stos
push
cmpsl
mov
bound
cmp
addr16
test
mov
add
pop
cli
pop
jmp
sbb
adc
dec
xchg
test
adc
xor
loop
test
fwait
js
aas
dec
adc
ds
sub
push
adc
fbstp
mov
daa
ja
jmp
decb
xchg
aaa
or
mov
and
sbbl
scas
mov
les
andps
pop
sarl
fildll
jnp
jmp
add
mov
mov
negl
and
xlat
cwtl
mov
fstpt
test
jecxz
arpl
clc
popf
jle
mov
mov
xor
sub
call
or
mov
push
push
fmul
clc
in
pusha
and
jmp
push
jl
imul
xchg
jecxz
negb
lahf
loop
rolb
ss
test
lret
mov
shlb
pop
outsl
or
sub
pop
shrb
mov
loope
pop
in
cs
pop
xchg
gs
pop
int3
stos
popf
mov
and
lret
test
sub
mov
or
loopne,pt
outsb
cmp
decl
mov
jle
sub
and
adc
and
sub
call
movsb
mov
xor
xchg
pushf
adc
mov
inc
and
daa
lret
cmp
pop
pop
mov
mov
jmp
mov
xchg
add
ror
loop
mov
pusha
adc
fidivrl
fcoml
cmp
xchg
cmp
mov
and
sarb
and
mov
cld
call
loopne
leave
jne
stos
pushf
and
fsub
stos
cmpps
jp
aas
dec
pushf
mull
sbb
cli
push
mov
dec
aam
and
mov
xor
aam
std
jbe
pop
lahf
xchg
push
inc
mov
jb
outsl
das
stos
jp
ret
mov
lcall
in
mov
inc
imul
xchg
into
sbb
cmp
fnstcw
fstp
fs
rcrl
lds
add
pop
add
or
dec
mov
clts
inc
roll
dec
lcall
fidivs
adc
imul
mov
gs
jge
scas
push
arpl
adc
push
xor
pop
mov
cs
cmp
dec
adc
aam
fcoml
fwait
cmpsb
push
ds
jle
into
repz
jl
daa
stos
xor
mov
cli
in
sarb
sbb
rcrb
icebp
lds
outsl
addb
sub
dec
jge
fisttpll
pop
push
imul
fstps
fimull
hlt
and
pop
scas
lahf
into
add
inc
xor
mov
pusha
add
jl
xchg
pop
int3
out
jmp
fcom
ret
xor
xchg
dec
push
mulb
adc
subl
mov
adc
mov
push
movsb
or
insl
sbb
int3
fistps
stos
lock
call
aad
add
jp
mov
add
push
mov
cwtl
icebp
sub
ret
sub
orl
sbb
aam
adc
xchg
adc
in
shll
adcb
cmp
insl
cmp
cmpsl
imul
lcall
in
in
aas
xchg
jle
loopne
fistpl
jo
mov
or
pop
sub
push
mov
rcrb
mov
pusha
push
hlt
jl
out
xor
mov
into
or
pop
add
dec
push
lods
inc
cmp
outsl
dec
mov
xchg
sub
outsl
aas
in
sarl
mov
xor
sub
dec
ljmp
jp
sbb
call
rcrb
pop
hlt
push
mov
stos
in
in
enter
ret
rolb
imul
mov
push
cmc
inc
pop
loop
inc
fldt
rclb
jns
std
xchg
xorb
xchg
mov
outsl
repz
jg,pn
dec
xchg
inc
loop
jne
leave
popa
mov
mov
filds
hlt
push
call
jle
push
scas
cmp
mov
mov
jae
xor
inc
sub
pop
movsb
fs
push
sbb
jmp
pop
push
mov
add
pop
or
out
lret
dec
cli
jg
jae
lahf
sahf
or
add
push
xchg
add
ss
aas
mov
mov
repz
adc
and
sbb
adc
pop
or
dec
inc
in
and
outsb
mov
notl
or
pusha
int
ret
js
dec
xchg
jno
daa
push
push
pop
test
dec
xor
nop
insb
stos
movsb
xlat
pushf
cmp
xchg
sarb
popa
adc
mov
push
jns
enter
in
push
nop
adc
pusha
jnp
rorb
dec
mov
into
shlb
mov
or
jne
rcrb
xor
jecxz
ret
fst
mov
dec
cwtl
push
push
pop
das
xchg
adc
push
fsubl
push
and
adc
nop
pop
pop
mov
ss
test
repz
push
and
outsl
neg
xor
rolb
ret
cmp
repnz
aas
jbe
jl
push
add
imulb
sbb
jno
popf
xor
mov
push
adc
inc
test
add
mov
push
xlat
pop
stos
push
jl
loope
pop
xor
jbe
jbe
scas
lock
cmp
mov
out
and
fimuls
mov
insb
es
cmpl
mov
and
mov
sub
cmpsl
lahf
pusha
aas
dec
fwait
clc
mov
mov
push
lods
sub
jnp
inc
sbb
pop
xchg
gs
push
adc
cmp
or
push
and
adc
and
movsb
lock
ljmp
orb
jnp
mov
xorl
jecxz
into
repnz
add
icebp
inc
adcb
sub
jmp
ret
jge
daa
inc
mov
or
adc
inc
arpl
add
pop
mov
clc
hlt
nop
sbb
xor
lret
push
aam
dec
pop
jns
pop
fmull
push
sarb
and
cltd
add
cmp
stos
outsb
cmpsl
jg
dec
lcall
lahf
loope
pop
pop
mov
insl
data16
cmp
cmp
pop
gs
outsb
fldt
repnz
in
in
push
fnstcw
xchg
xchg
lods
xlat
lods
jb
fwait
sbb
xor
stos
push
sbb
enter
jno
mov
mov
xlat
fadd
pusha
js
push
cmp
xor
and
inc
scas
mov
xor
lahf
jne
lods
outsl
les
or
cmpsl
pop
xchg
aad
into
cwtl
xor
push
sub
ljmp
loope
cmp
xor
sbb
jle
pop
inc
or
jg
push
out
xchg
call
xchg
jg
dec
test
shll
nop
hlt
daa
daa
repz
negl
xor
nop
push
cmp
lahf
jmp
aas
fisttpll
fdiv
int
jle
cmp
pop
aas
inc
cltd
or
mov
repnz
cmp
test
repnz
int
sub
cltd
jecxz
and
ret
cmp
push
or
sub
push
jp
pop
call
mov
dec
stos
or
aam
aam
lcall
stos
mov
add
adc
into
ds
stos
mov
or
cli
nop
sub
inc
lds
push
sub
lret
pop
sbb
repz
sbb
out
xor
mov
lcall
jmp
xor
test
push
xchg
lods
xor
adc
and
sub
mov
push
push
fdivrl
arpl
xchg
mov
out
jle
mov
sahf
ljmp
cmp
mov
pushf
dec
lods
xlat
mov
mov
pop
cmp
imull
das
pop
or
sub
mov
loope
push
dec
sbb
pushf
xor
rcll
add
push
into
pushf
mov
adc
lods
adc
and
xor
pop
imul
shl
int3
outsb
and
pop
or
hlt
mov
roll
inc
mov
jae
fstp
fisttpl
sbb
sbb
out
out
cmp
hlt
xchg
mov
adc
inc
mov
cmp
mov
outsb
cwtl
push
addr16
mov
sbb
and
push
insb
mov
jnp
adc
ja
pushf
adc
ret
imul
inc
jmp
cli
ss
mov
mov
inc
cmp
sarb
cmc
pusha
jp
inc
jae
lcall
fstl
jmp
and
bound
iret
inc
into
out
adc
and
ja
addl
jae
lret
mov
setg
cltd
fstpl
loope
or
in
pop
xor
sbb
mov
mov
mov
psubusb
je
lds
icebp
sub
insb
ljmp
or
imul
mov
mov
push
pop
sub
dec
mov
gs
inc
pushf
movsl
aaa
clc
pop
inc
jno
lcall
mov
js
xchg
and
jno
test
in
out
test
add
ficoms
jae
lock
pop
inc
mov
sub
push
xchg
xor
jmp
sub
or
jecxz
cmp
mov
xchg
out
mov
sub
lret
xchg
mov
stos
jmp
jl
stc
es
mul
out
movaps
sbbl
enter
push
scas
push
je
fs
mov
sbb
mov
lea
dec
icebp
xchg
mov
dec
jno
jnp
and
adc
xchg
cltd
xor
in
cwtl
sti
pop
add
sub
xchg
mov
and
jb
rorl
cmp
nop
lods
lcall
mov
lods
or
dec
iret
mov
xchg
adc
bound
pop
repnz
sub
cwtl
lahf
ret
lcall
shlb
iret
out
xchg
mov
mov
stos
in
fildl
xchg
outsl
jmp
das
mov
lcall
jno
repnz
in
and
mov
push
std
jl
dec
push
and
andb
lahf
rcrl
movsb
adc
xor
mov
or
movsl
adc
clc
mov
cmpsl
arpl
mov
insb
ror
pop
sbbl
or
sti
mov
xor
jns
das
fcmovnb
mov
push
scas
dec
mov
xchg
sbb
out
mov
int
cmp
push
js
out
popa
mov
mov
inc
fildll
in
dec
jo
or
loopne
enter
push
test
aad
xor
roll
aas
mov
fwait
popa
inc
int3
imul
jmp
push
iret
cmp
inc
js
es
sbb
pop
sbb
sbb
and
loop
in
les
xchg
leave
test
scas
add
nop
ds
fcomp
add
dec
xorl
test
pop
or
xchg
jnp
push
adc
sahf
lds
orb
mov
xor
jo
adc
shlb
pop
sbb
dec
rcll
iret
mov
push
sbb
xor
test
xor
hlt
sub
push
filds
test
push
inc
addl
ja
cli
pop
je
clc
notl
repz
pop
and
adc
cmpsb
xor
inc
mov
xchg
out
test
adc
in
sub
add
clc
dec
mov
jp
leave
pop
lods
out
sub
mov
leave
fistps
adc
or
inc
testl
add
das
push
mov
dec
stc
scas
xor
fiadds
je
arpl
adc
mov
pop
pop
or
or
cmp
out
sub
push
push
cmp
daa
cmpsb
shll
dec
mov
jno
out
ret
cmc
and
inc
in
mov
push
decl
or
leave
xor
or
in
lret
in
and
sub
mov
ljmp
cmpsl
test
gs
dec
xlat
mov
or
and
cmp
lret
pop
fisttps
aas
inc
and
sbb
mov
jnp
scas
bound
push
enter
pop
sbb
test
insb
pop
out
xor
dec
dec
stos
jnp
cmp
int3
fnstsw
push
icebp
and
mov
push
enter
lahf
cwtl
pop
mul
mov
lret
fstpl
inc
mov
out
or
and
inc
addr16
adcb
dec
pop
sarl
cmc
lods
cmp
cli
lods
pop
ficoms
mov
mov
rol
adc
jne
jno
push
cwtl
mov
js
hlt
sub
jno
leave
jg
inc
in
inc
pushf
sahf
mov
adc
lods
ds
push
popa
jecxz
adc
shrb
fsts
adc
cmp
sahf
cs
shlb
or
insl
popf
mov
movsl
loope
fs
mov
sbbl
pop
push
bound
mov
loopne
shl
imul
dec
xor
jle
test
mov
test
test
std
sbb
loop
jae
mov
jae
push
fiaddl
movlps
int3
and
mov
add
fldcw
roll
or
popf
and
mov
addr16
inc
adcb
dec
in
push
shll
je
mov
xor
mov
sar
xchg
mov
cmp
mov
xchg
loop
xchg
push
push
mov
inc
dec
ds
in
mov
add
pop
loope
data16
jae
imul
push
lods
test
mov
adc
mov
adc
jge
imul
and
stos
sub
out
faddl
lret
stc
ljmp
sub
mov
shll
adc
or
sub
mov
or
add
xchg
mov
cmpsb
movsb
repnz
sahf
insl
push
pusha
sub
fwait
xchg
xchg
add
cltd
or
inc
cmpb
push
testl
dec
add
jns
mov
pop
xor
inc
iret
pop
pop
shlb
loope
popf
add
xor
aad
lods
mov
test
sbbl
xlat
jbe
test
fdivrl
nop
popf
das
setae
push
xchg
test
shlb
jmp
mov
mov
mov
xchg
push
inc
hlt
je
test
pop
out
insb
xor
ds
outsb
pop
mov
xchg
push
inc
add
push
pop
enter
cmp
lds
push
js
push
add
mov
imul
scas
out
loop
inc
cmp
mov
sbb
int
inc
xchg
jp
in
mov
ret
mov
ror
pushf
comiss
int3
shrl
sahf
mov
mov
push
cld
in
je
or
pop
in
sbb
jbe
inc
or
icebp
add
imul
adc
adc
rol
sub
aam
push
cmp
xor
out
push
les
jg
or
dec
pop
dec
ljmp
xchg
aam
in
fcmovu
int
add
sub
sahf
sub
pop
add
sub
cltd
pop
mov
pop
mov
icebp
xorb
mov
mov
cld
out
jmp
cli
and
fwait
stos
in
and
push
int3
xor
push
out
in
adc
ds
cltd
sarb
lret
test
pusha
inc
jns
xor
fs
xor
test
mov
jae
xor
push
xchg
in
pop
push
mov
push
stos
dec
pop
mov
fdivs
xor
in
jg
arpl
pop
out
notl
cmc
add
mov
cmpsl
sbb
lahf
xorl
sub
push
in
push
xor
into
loop
xchg
lock
xchg
xlat
mov
sub
or
jp,pn
sahf
ja
arpl
add
add
xchg
divl
hlt
movsbl
push
jl
adc
jg
js
inc
jbe
mov
outsl
mov
ds
lret
jle
mov
loopne
or
mov
push
cmp
mov
xor
test
repnz
jo
xor
filds
dec
adc
out
xor
fildl
mov
mov
rcrl
push
loop
jbe
pop
mov
popf
sbb
xchg
imul
roll
push
out
addl
xlat
adc
mov
cld
and
sub
dec
mov
adc
jb
mov
xor
stos
pusha
fsub
adc
incb
cltd
jp
xor
jne
push
ficompl
daa
das
xor
les
push
stos
int3
hlt
sbb
cmpsl
in
and
dec
subl
in
pusha
xor
xchg
repz
lret
pop
dec
out
scas
cli
ds
in
sub
ja
cmpsl
outsb
pop
sub
call
data16
fstp
xchg
pop
jo
dec
js
jbe
mov
lret
pop
adc
sbb
pop
add
mov
ret
push
aas
inc
mov
aas
add
jne
shr
lods
pop
out
movsl
pop
pop
movb
dec
pop
xor
bound
ret
sbb
orl
add
loope
mov
cmp
jno
fldt
sub
and
dec
mov
lods
sbb
sbb
mov
std
jmp
aam
xorl
iret
cmp
mov
adc
xorl
loopne
icebp
test
jnp
sbb
in
pop
sub
lods
sbb
lcall
test
ds
add
in
add
sub
in
lahf
mov
jecxz
and
lds
sbb
nop
xchg
jns
cmp
movsb
clc
cmpsb
outsl
adc
int3
js
mov
pop
xchg
rorl
gs
loopne
dec
and
sub
adc
lahf
push
in
enter
jge
push
sub
dec
loopne
push
jb
dec
shrl
sub
shll
out
nop
sbb
in
and
jecxz
je
add
xchg
cmp
outsb
mov
xlat
test
jo
inc
shrb
out
mov
loope
ds
and
push
mov
mov
mov
inc
out
inc
xor
cmp
insb
scas
sbb
movsl
inc
xorl
inc
pop
test
xor
jg
outsl
mov
sub
fidivs
insl
lds
repz
pop
dec
pop
jnp
mov
lds
mov
je
and
mov
mov
xchg
mov
mov
mov
mov
ret
icebp
xchg
push
sub
test
imul
push
repnz
scas
push
scas
sbb
cli
jl
int
jge
jo
movsb
out
add
notl
or
in
add
jl
mov
dec
cltd
cmpsl
std
mov
sub
shrl
fcoms
stos
jns
xor
mov
mov
in
sbb
je
jnp
lods
xor
xchg
nop
les
sahf
lods
outsb
push
push
lods
add
imul
mov
out
call
dec
jl
stos
or
xchg
push
dec
xor
loopne
stos
cmpsb
cwtl
mov
xchg
inc
pop
lcall
fs
jp
xchg
inc
add
inc
pop
add
arpl
pop
push
xchg
in
repz
sub
pop
in
out
movsb
xchg
les
adc
or
inc
jmp
mov
sbb
push
jns
push
data16
stos
lret
rorl
leave
cmp
xor
outsb
and
pop
cmp
pushf
sbb
dec
movsl
fists
xlat
das
adc
cs
pop
fs
fnstsw
or
cs
pop
cli
mov
cmpsl
fsubs
ljmp
pusha
add
jnp
aaa
cltd
out
inc
mov
mov
nop
jge
inc
pop
push
cli
pusha
sub
arpl
inc
cmpsl
sti
ret
pop
xor
out
in
dec
addr16
add
adc
xchg
out
jnp
mov
sbb
cmp
jbe
notl
cmp
cwtl
fisttpl
daa
mov
aam
mov
aam
sub
iret
dec
fbstp
or
xor
lds
or
sbb
sub
mov
popf
mov
lock
fdivl
cltd
and
out
push
jb
sub
push
sub
push
lret
push
xor
in
inc
xlat
jne
out
xchg
xchg
pop
xchg
mov
idiv
jne
ret
add
ret
push
xlat
sahf
xor
cmp
cmp
fildl
rcrb
frstor
push
leave
rolb
add
xchg
jns
pop
std
push
loopne
or
xchg
sub
mov
sub
repz
and
pop
sub
movsl
sbb
imul
cmp
leave
xor
or
jecxz
sub
fstps
jl
shrb
ja
pop
cld
dec
rcl
lret
leave
push
jnp
mov
adc
pop
in
fcomps
iret
sub
jbe
fisubs
mov
pop
cmp
dec
push
pop
xlat
in
loope
dec
test
out
adc
inc
imull
inc
mov
xchg
decl
mov
mov
in
sti
imul
fidivrl
mov
stc
adc
xor
call
adc
xor
xor
mov
mov
pusha
gs
test
pop
xchg
bndldx
jmp
daa
movsb
xlat
inc
rcrb
mov
fsubl
mov
mov
aam
pop
scas
aam
sbb
cmp
pop
test
jecxz
or
mov
mov
pop
aas
sarb
nopl
and
xchg
ss
sbb
cmp
sbb
push
push
xor
pop
inc
adc
test
inc
adc
out
xor
adc
dec
fiaddl
push
jg
jne
lock
call
stos
test
rcll
popa
sub
xchg
pop
adc
adc
arpl
lea
jmp
sarb
cmc
inc
mov
and
fmuls
sub
mov
adc
std
aaa
test
jg
xor
data16
cmpsl
xor
imul
mov
xor
mov
add
mov
gs
mov
btcl
cld
outsl
mov
not
imul
in
jns
lods
jno
sbb
into
daa
lock
adc
inc
lods
add
adc
lea
imul
in
jo
insb
cld
leave
mov
cli
pop
xor
pop
sbb
or
cli
fwait
dec
sub
test
cmpsl
adc
pop
leave
out
mov
cmp
pop
adc
lahf
js
loopne
repz
xchg
lret
shlb
xchg
xor
add
push
loope
pop
jae
data16
out
mov
mov
lea
das
lock
push
rol
lds
xor
mov
std
shl
fldcw
jo
push
stos
and
xchg
or
pop
mov
pop
js
mov
les
test
cmp
or
dec
idivl
cmp
inc
pushf
sti
cmpl
sbb
je
outsl
sub
pop
fsubrs
xchg
add
push
stos
push
xchg
xchg
test
jmp
add
addr16
dec
cli
push
mov
inc
pop
xchg
lods
outsl
xchg
rcrb
data16
scas
cmp
sahf
mov
fisubrl
enter
xchg
sahf
cmp
lods
cmp
mov
fbld
cld
sbb
ds
jno
xchg
into
mov
or
xor
xor
jno
inc
bound
rcrb
ja
cmp
push
pop
sub
jmp
cwtl
dec
in
bound
popf
pusha
aad
mov
out
repnz
divb
push
or
sbb
jle
pop
fs
pop
xchg
and
out
mov
xchg
imul
stos
fsubrs
sub
dec
inc
mov
sti
jge
pop
sub
jmp
sub
lcall
push
rol
test
ds
mov
adc
or
inc
les
mov
dec
xchg
enter
push
rcrl
repnz
sti
arpl
pushf
adc
pop
dec
cli
xorb
jecxz
imul
pop
out
jbe
adc
inc
ret
jecxz
subl
inc
xchg
adc
scas
jns
dec
add
cld
pushf
pop
sub
xor
sub
jb
pusha
pop
in
repz
sub
inc
movsl
and
inc
cwtl
xchg
push
iret
xchg
std
gs
test
fwait
adc
pop
cmpsl
roll
cmp
rcr
mov
repnz
push
xchg
cld
insb
shr
sub
mov
sub
addr16
test
jl
lock
inc
aas
or
fmuls
je
pop
adc
or
pop
pop
adc
movsl
jg
sbb
mov
mov
int3
push
jmp
or
push
sarl
dec
test
mov
mov
dec
movsb
xor
out
addr16
lcall
jmp
inc
aaa
hlt
inc
inc
cwtl
push
in
push
sub
faddp
push
faddl
sub
stos
mov
pop
inc
pusha
pop
pop
adc
sbb
dec
test
shrb
mov
fcos
std
ret
mov
xor
std
adc
aam
mov
enter
arpl
xchg
in
mov
pushf
inc
pop
inc
jnp
scas
adc
and
testb
sub
pop
dec
jmp
xchg
loopne
adc
adc
bound
repz
out
lods
out
sbb
mov
in
leave
fs
adc
and
adc
xchg
lret
loope
mov
xlat
std
mov
out
mov
sahf
imul
add
mov
xor
sub
mov
mov
lods
fstps
sbb
mov
xor
xor
push
dec
fdivr
and
or
shlb
jb
push
call
mov
test
or
mov
jne
fwait
adc
mov
push
mov
push
lds
call
cmp
mov
lds
jo
ret
mov
xor
sub
add
outsb
mov
lret
fwait
in
sbb
jns
stos
xchg
dec
es
lea
mov
lea
int
hlt
bound
xchg
dec
add
movsl
in
lds
bnd
sti
sbb
xor
aaa
pop
or
cmp
inc
xor
mov
mov
adc
stos
push
clc
pop
push
scas
adc
in
xor
or
jne
xor
pop
movsl
or
in
mov
loop
addr16
and
in
cld
mov
mov
jo
add
lods
and
cli
shlb
xor
into
push
psadbw
cmp
xchg
imul
mov
inc
pop
loop
jmp
mov
mov
lds
sbb
xlat
adc
call
xor
lret
mov
xor
cmc
mov
test
nop
mov
jnp
andb
cld
sub
call
out
rolb
sub
aaa
fcmovnu
int
subl
stos
sub
add
aas
pop
es
add
pop
pop
gs
sub
aaa
std
mov
pusha
jmp
ret
pop
lcall
loop
dec
in
xchg
xor
ss
repnz
pop
sbb
cmp
and
mov
mov
xchg
lock
dec
jg
ss
aaa
cld
fs
mov
fldenv
or
lock
in
sti
push
mov
add
fsts
pop
and
hlt
adc
int3
ja
push
dec
dec
jae
ds
scas
xor
push
mov
push
mov
lods
mov
repz
and
insb
inc
cmp
repz
aas
inc
aad
ds
icebp
test
xor
jecxz
test
push
out
xchg
rol
cmp
push
ljmp
hlt
cmpsl
inc
cli
adc
jae
iret
mov
jmp
mov
push
in
test
cmc
shl
mov
sbb
sbb
lods
add
cmp
test
push
xchg
lret
jmp
fcmovu
push
shrl
xchg
push
cmp
jno
cmc
lock
je
pop
std
jmp
test
or
dec
repz
push
je
dec
cmpsl
fs
jecxz
lcall
aas
out
les
and
mov
jp
inc
fldenv
jae
je
js
jg
push
adc
sbb
hlt
rcrb
stc
nop
rclb
clc
push
xchg
pusha
in
add
mov
roll
aam
sub
fistl
rclb
cmpsb
xchg
inc
bound
mov
data16
push
inc
ja
sbb
inc
scas
xor
inc
in
cmpsb
mov
outsl
fwait
rcrb
dec
mov
fstp
cmpsb
cmp
sbb
cmp
lds
les
jns
jne
lds
pop
mov
stos
and
mov
jne
and
enter
cmp
mov
movsl
int
pop
mov
movsb
dec
stos
lds
hlt
cmpb
arpl
or
fimuls
imul
sub
pop
jecxz
popf
cmp
and
xchg
adc
int3
addr16
mov
mov
sbb
and
mov
lock
mov
shlb
push
int
scas
jp
orl
mov
add
in
pop
fisubl
sub
cmp
jae
adc
pop
ror
loope
sbb
dec
pop
mov
fbld
les
xchg
movsl
testl
sub
xor
aad
shll
repz
jg
lcall
add
mov
pushf
sbb
or
movsl
shrb
jns
lods
or
cmp
xchg
out
pusha
adc
dec
daa
xchg
mov
add
mov
adc
jecxz
divb
and
mov
pop
jne
aad
jp
das
in
sahf
iret
add
and
dec
jb
xor
sbb
or
jns
mov
mov
and
insl
xor
cmp
enter
adc
sbb
nop
out
push
xchg
push
int3
addb
fcoms
mov
pusha
add
cmp
test
jnp
int3
stos
jb
enter
mov
xchg
sarb
or
mov
mov
pop
cli
jge
lahf
mov
xchg
std
fstp
andl
jbe
or
jmp
testl
push
fs
hlt
out
inc
out
jg
push
or
dec
xor
cmpsl
stos
mov
lods
scas
insb
dec
mov
add
loopne
or
insl
or
pop
mov
enter
cmc
jne
hlt
sbb
xchg
adc
mov
test
add
in
sbb
xor
ds
adc
and
xchg
repnz
dec
cmp
inc
mov
imul
orl
out
loop
loopne,pn
xor
push
out
jle
loop
mov
mov
cmp
jae
addb
jecxz
push
les
pop
clc
cmp
inc
xchg
xchg
stos
sub
mov
pop
inc
jo
push
jb
insb
dec
inc
int
in
insl
leave
xor
pop
jl
mov
sub
gs
insl
jg
xor
popa
jmp
dec
sub
jmp
and
xchg
lahf
sbb
cld
sar
dec
xor
jbe
cltd
loop
sub
sbb
xchg
scas
sbb
ss
ret
xchg
push
jno
pop
sbb
movsb
fsubrp
les
bound
out
jg
fwait
out
mov
jns
ja
shll
inc
lods
jns
mov
add
loop
dec
shr
jb
push
push
scas
aaa
shr
call
xchg
xlat
aas
ja
stc
lahf
jg
cld
mov
in
xchg
pop
jmp
adc
or
cmpsl
dec
out
sub
mov
test
sbb
dec
sbb
dec
or
inc
dec
push
and
adc
mov
mov
andl
jp
add
js
aaa
push
and
sub
notb
push
sbb
cmpsl
adc
je
cmp
jg
inc
inc
xchg
mov
insl
outsl
inc
pop
adc
aam
in
inc
inc
dec
movsl
add
out
fisttpl
nop
jl
into
test
and
stos
dec
stos
or
jbe
fsubr
pop
cmp
movsl
arpl
sarb
jecxz
jge,pn
aam
fimuls
xor
or
mov
mov
jae
add
pop
cwtl
jne
push
outsb
js
std
sbb
mov
inc
mov
jbe
repnz
inc
fimull
push
loopne
cs
shll
cmc
popf
adc
push
mov
hlt
ficompl
sbb
lahf
inc
idivl
js
dec
push
aam
or
jo
push
xchg
mov
loopne
xchg
addr16
mov
mov
mov
jmp
push
lret
pop
subl
in
pop
and
sti
add
sbb
fsub
xor
and
js
push
pop
adc
sbb
xor
push
nop
sahf
dec
mov
add
ret
jbe
dec
cmp
lcall
adc
mov
mulb
push
pop
shrl
mov
inc
adc
out
cmc
xor
pop
outsb
or
es
inc
xchg
push
or
jl
test
inc
into
mov
inc
fcmovnu
lds
bound
out
add
cltd
test
pop
xchg
push
mov
xchg
mov
mov
shlb
loop
mov
inc
je
ja
jp
insb
insb
out
leave
xlat
stos
inc
xchg
and
fsubr
fsubl
xchg
dec
add
inc
cmp
lods
outsb
pop
and
dec
push
sub
rorl
fistl
dec
pop
fdivrs
repnz
adcb
stos
out
and
rorb
mov
push
jecxz
cli
push
or
gs
cmp
cmp
jno
pop
js
mul
das
xchg
adc
jl
xchg
pop
sbb
or
nop
jns
jg
cmp
inc
insl
pop
push
fisubs
mov
add
cs
cli
pusha
lods
mov
jb
mov
rcl
and
xor
mov
or
mov
out
xor
notb
fisubrl
iret
adc
out
pop
cwtl
or
andl
fcoml
mov
push
repz
aam
ljmp
mov
jae
stos
and
int
shl
sbb
bound
pop
jecxz
pop
pushf
jmp
movsb
jns
inc
xor
jle
sbb
leave
aas
push
mov
out
lods
lock
and
ret
push
stc
jg
movsl
stc
sbb
call
add
add
or
dec
cmp
or
xor
adc
fs
mov
or
sub
xor
test
mov
sbb
cmp
ss
call
jmp
jns
iret
inc
or
lea
mov
sahf
xchg
xor
sub
fstl
imul
out
xchg
xchg
cmp
xor
imul
push
pop
daa
lea
fucom
test
push
push
xor
bound
mov
xor
lcall
sub
jne
sbb
cmp
in
pop
loop
pop
add
cmpsb
pop
inc
flds
pop
cmp
push
leave
dec
mov
addb
gs
push
or
bound
or
test
jg
movsb
stc
daa
mov
dec
xchg
xchg
jl
cmp
mov
scas
pop
sub
hlt
sub
mov
stc
pusha
cli
sbb
jmp
scas
adc
in
test
mov
push
xor
outsb
aaa
fs
xor
and
dec
aas
inc
inc
cmc
and
fs
or
and
mov
outsl
fadd
inc
jbe
or
ret
enter
sub
int
push
popfw
stos
cmp
push
fisttpl
loope
stos
xchg
jnp
jge
and
fdivrl
repz
je
push
shrb
xor
test
cld
push
mov
cmp
lret
xchg
das
popa
bound
ret
ds
insl
or
lcall
out
or
cmc
stos
sbb
push
mov
pop
push
cmp
xor
js
cmp
mov
jne
bound
fists
cs
out
movsb
test
lds
xorb
insb
bound
repnz
out
xchg
cmp
popa
test
jmp
mov
xchg
xchg
hlt
sbb
xor
int3
jle
adc
sbb
test
fdivrl
mov
pop
shlb
fsubrp
js
cmp
mov
ds
mov
xor
into
sub
mov
out
insl
mov
insb
jp
inc
shr
test
imul
or
into
mov
jb
add
cltd
sub
fs
xchg
sub
push
mov
mov
mov
pop
std
popa
sbb
push
xchg
insl
add
ret
cwtl
loope
aam
add
mov
stc
cmpsl
sbb
pop
lret
jecxz
loop
jae
ja
scas
mov
out
mov
mov
dec
mov
movsl
jo
push
int3
or
das
stos
and
pop
push
sahf
gs
inc
jecxz
inc
inc
adc
test
jno
outsl
dec
xor
xor
leave
cmp
leave
xchg
movsl
out
aam
xchg
je
mull
jmp
sbb
hlt
jmp
pop
or
outsl
inc
jo
jl
test
mov
pop
dec
mov
test
cli
push
or
out
or
movsl
and
sub
jle
outsl
fwait
mov
fidivs
addr16
nop
ds
inc
mov
out
adc
das
fxch
cmpsb
clc
jecxz
cld
jbe
idivb
push
mov
xor
mov
xchg
add
sub
mov
cmp
mov
pop
dec
xor
inc
enter
inc
imul
outsl
das
dec
xor
xor
sbb
in
fcmovb
jbe
xor
test
pop
mov
push
mov
pop
push
jle
in
pop
sbbl
aad
jle
adcb
mov
or
xchg
xor
push
cs
or
and
mov
lea
mov
rclb
gs
sbb
mov
ja
sbb
out
or
inc
mov
rcrl
mov
mov
inc
sub
or
repnz
mov
aam
cltd
and
inc
cmp
jle
shlb
dec
xchg
lret
add
mov
inc
and
cmp
push
xor
ljmp
pop
push
ljmp
or
aam
inc
dec
test
xor
mov
xor
pop
mov
and
stos
out
sub
test
cltd
mov
cmp
adc
and
sbb
add
fisttpl
cwtl
xlat
dec
mov
xor
cs
jp
add
mov
imul
xor
xchg
stos
cltd
or
lret
adc
lea
sub
cmpsl
lret
and
in
add
sahf
and
dec
js
mov
out
mov
nop
bound
test
mov
pop
in
ror
imul
bound
xchg
jle
mov
daa
mov
cmp
scas
arpl
daa
xor
sahf
in
or
xor
and
cmc
xor
sar
nop
push
adc
pop
cwtl
out
push
ja
imul
test
pop
es
xorb
negb
mov
xor
adc
cwtl
arpl
int3
pop
cbtw
int
fimuls
pop
adc
sub
movsb
mov
jge
jge
push
test
aas
sub
xchg
cmp
clc
pop
ss
popf
push
addr16
and
test
cmp
xlat
dec
out
es
pop
and
pop
les
stos
out
push
xchg
stos
es
notl
sbb
jne
mov
gs
sub
cmpsb
out
sub
jbe
mov
daa
aam
mov
push
jns
cld
fmull
repnz
pop
aas
add
insl
cmp
loop
movsb
loopne
jb,pt
lods
cmp
xchg
xchg
movsb
cmp
add
aam
leave
adc
and
lods
jns
int3
mov
sbb
scas
pop
push
push
or
outsb
jle
jbe
arpl
jne
push
stc
hlt
adc
sub
and
test
sub
mov
jb
lret
sbb
clc
push
test
mov
scas
and
push
inc
push
or
stos
ljmp
jno
push
lea
mov
popf
xor
push
pusha
add
push
mov
mov
lods
movsl
shl
loopne
push
fldl
pop
inc
lcall
pop
cmp
ret
add
jne
and
dec
jl
xor
inc
in
or
fbstp
add
imul
dec
mov
adc
ja
cmpb
lods
out
adc
loop
mov
stc
jmp
adc
clc
addl
lea
loopne
scas
lea
jle
push
push
add
cwtl
and
outsl
jnp
rclb
mov
add
cmp
xchg
movsb
into
mov
jl
jo
int
add
xchg
lods
mov
inc
leave
out
xchg
mov
cmp
dec
jbe
stc
outsl
rolb
arpl
pop
fnsave
mov
push
fdivrl
scas
es
cwtl
push
push
pushf
mov
sbb
xor
pop
dec
adc
stos
cli
call
pop
fadd
rcl
cmp
mov
in
xchg
mov
out
push
inc
fwait
mov
and
mov
test
mov
fdivrs
dec
pop
mov
iret
test
jo
mov
inc
adc
inc
jl
dec
cmc
pop
mov
mov
push
mov
pop
clc
sahf
mov
int
test
decl
xchg
fldt
inc
outsl
icebp
adc
cmp
out
cmpsb
pop
inc
or
xor
nop
mov
clc
les
test
adc
rcll
inc
mov
hlt
lods
and
xchg
out
inc
shlb
cs
arpl
shl
push
mov
push
bound
bound
jle
adc
das
mov
repnz
push
push
loope
adc
inc
cmpsl
ss
lcall
adc
imul
aad
inc
lea
mov
adc
in
sub
mov
add
pop
stos
pop
mov
hlt
cmpsl
jle
inc
data16
repnz
fdivp
mov
bound
int3
sbb
leave
or
loope
jge
ja
sbb
fldt
ficompl
popf
inc
andl
fdivs
mov
dec
ret
lret
daa
ds
movsb
xchg
je,pt
push
mov
sbb
movb
int
lods
mov
movsl
sarb
fcmove
test
sbb
cmp
jl
jmp
call
test
jge
pop
adc
aam
push
outsb
hlt
pop
out
xchg
test
roll
push
push
and
popf
mov
repnz
rcll
xchg
mov
and
push
jp
pop
jb
and
js
and
cmp
icebp
outsl
xor
out
mov
mov
daa
add
xchg
dec
into
mov
mov
cltd
xchg
xor
pushf
scas
xchg
sti
addr16
orb
out
mov
cltd
sarl
andl
xlat
dec
test
testb
imul
jp
test
loop
inc
dec
push
movsb
roll
xor
sbb
pop
inc
mov
xor
mov
adc
icebp
mov
movsb
adc
movsb
test
pop
mov
lds
sub
mov
jl
mov
inc
int
arpl
sbb
sar
cmc
das
scas
mov
cmpsl
jmp
rclb
sahf
out
mov
leave
jae
mov
stos
lea
sub
sbb
out
insl
jae
cmp
daa
outsl
pop
mov
inc
xor
cmpsb
scas
fcomi
pop
mov
rolb
pop
cmp
mov
pop
and
jg
jmp
xor
dec
push
int3
pop
push
jp
inc
rorl
push
mov
jmp
xor
setbe
add
mov
cwtl
pop
cmp
mov
or
mov
inc
sbb
fstl
mov
and
push
mov
mov
mov
pop
out
rorl
add
adc
aad
xchg
jns
fistl
clc
shlb
or
xchg
add
popa
mov
xchg
stc
js
fadds
mov
push
dec
es
fnstenv
test
pop
xor
mov
push
out
mov
in
pop
inc
das
pop
movsb
jae
daa
xchg
sub
inc
js
in
xor
ret
test
xchg
ljmp
jb
pop
fildll
aaa
inc
fcom
lock
int3
sub
push
js
cmc
imul
cmp
xor
ret
cmp
clc
lahf
out
ds
mov
sti
lds
jl
pop
dec
out
or
mov
insl
or
adc
ret
jns
xchg
addr16
adc
adc
pop
jge
sub
pop
xchg
fwait
bound
call
imul
xlat
ljmp
in
dec
lret
arpl
rorb
ljmp
jo
or
das
loop
inc
icebp
testb
lcall
pop
mov
fwait
push
mov
xchg
pop
inc
jg
mov
fprem
cmp
push
push
and
adc
mov
lods
push
sbb
out
stc
add
jnp
ret
out
pushf
push
jb
pusha
incl
dec
and
xchg
int3
xor
out
test
in
and
add
pop
repnz
xchg
mov
mov
mov
add
sbb
ljmp
ja
bnd
pop
shl
pop
jp
ss
call
lds
ret
or
int
testb
sbb
jp
jns
lds
mov
sub
stos
testb
xchg
and
mov
mov
test
add
rolb
fsubr
addr16
in
and
testl
fidivrl
mov
mov
add
cld
lea
in
cwtl
loopne
test
sarb
sahf
mov
pop
push
cmc
aam
in
pushf
sub
or
xlat
pop
lahf
loope
in
xchg
imul
outsb
das
aad
add
stos
mov
lock
cwtl
loope
adc
mov
sbb
shrl
cltd
cltd
pop
icebp
test
nop
fsubl
cmc
sub
sbb
pop
pop
loope
sbbl
jg
pop
test
and
fmull
xchg
sti
mov
xchg
jno
push
bound
or
call
bound
xchg
data16
cmp
jl
push
mov
mov
push
sub
rorl
xchg
pop
and
sahf
mov
or
inc
or
sbb
insl
pop
stos
outsl
dec
push
mov
movsl
divb
loop
jno
cmp
jmp
mov
pop
mov
jbe
cmp
inc
and
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
call
je
dec
test
out
cwtl
xor
sub
jno
sub
in
addr16
inc
adc
arpl
sbb
lock
push
mul
icebp
add
lcall
and
jmp
inc
jp
bound
pop
cs
pusha
cs
lret
push
push
shrb
in
cli
ret
rorl
inc
push
arpl
in
out
stos
inc
inc
mov
enter
fistl
bound
roll
inc
jle
fistl
testb
jg
cld
cmp
lds
add
std
inc
std
iret
gs
cmpsb
in
and
pop
fmull
fcmovb
cmpsl
into
bound
push
daa
pop
stos
lds
insb
push
fisubs
nop
fadd
outsl
mov
int
sbb
call
scas
or
hlt
popa
insb
int
mov
ret
sbb
cmp
mov
mov
add
dec
cmp
mov
sub
bound
fs
shll
fcomps
mov
push
iret
inc
movq
or
into
idivb
int
adc
adc
sbbb
call
loopne
xor
jmp
sbb
rorb
mov
popa
and
js
ret
test
popa
shrl
push
aas
lods
add
push
or
pop
jp
lret
pop
mov
enter
in
adc
push
arpl
mov
or
mov
cmp
cmp
lret
mov
das
cmp
add
std
mov
cltd
and
js
nop
inc
and
jns
inc
sbb
and
rep
sbb
jo
fwait
cmp
xchg
int3
lret
mov
mov
int
push
cmp
imul
out
pop
imul
or
and
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
outsl
add
outsl
