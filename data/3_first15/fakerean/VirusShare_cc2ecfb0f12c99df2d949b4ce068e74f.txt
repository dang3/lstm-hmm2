push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
das
inc
inc
add
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
frstor
inc
add
push
lea
sub
mov
xor
mov
push
xor
add
dec
or
dec
js
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
mov
add
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
cs
add
add
inc
mov
push
xor
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
xor
scas
push
adc
scas
push
adc
adc
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
repz
add
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
sbb
push
lea
mov
test
je
cmp
push
inc
add
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
bound
push
adc
or
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
cmp
push
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
and
inc
add
add
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
add
inc
add
call
mov
lea
call
add
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
xor
inc
jmp
call
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
push
jne
mov
cmp
jne
mov
cmp
mov
jne
lea
movl
lea
push
push
push
movl
mov
call
push
push
push
call
add
add
decl
jne
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
test
mov
push
call
jmp
push
mov
sub
push
mov
push
mov
push
push
pushl
call
test
jns
push
xor
cmp
ja
movzbl
mov
jmp
movl
jmp
push
lea
push
push
push
movl
call
movzbl
and
mov
mov
pop
pop
pop
leave
ret
movl
jmp
mov
movl
jmp
call
jmp
mov
jmp
mov
movl
jmp
movl
jmp
call
neg
sbb
inc
jmp
push
mov
call
test
jns
jmp
mov
jmp
mov
jmp
push
call
add
mov
push
adc
roll
adc
roll
adc
aaa
aas
adc
aaa
aas
adc
rolb
adc
push
adc
aaa
aas
adc
aas
adc
aaa
aas
adc
aas
adc
push
adc
push
adc
push
adc
push
adc
roll
adc
aas
adc
aaa
aas
adc
rolb
adc
push
adc
roll
adc
add
add
add
pop
add
or
or
movups
adc
adc
inc
and
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
push
push
mov
mov
mov
mov
call
test
je
cmpb
jne
mov
mov
call
cmp
je
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
movb
movb
fildl
xor
cmp
fidivl
push
setne
mov
fstpl
call
test
pop
je
flds
lea
push
lea
push
movzbl
push
push
movzbl
push
push
fstps
pushl
fldl
push
push
movzwl
fstpl
push
movzwl
push
movzbl
push
mov
call
pushl
mov
push
mov
mov
push
call
test
je
incl
mov
test
mov
jne
mov
mov
call
cmp
pop
sbb
pop
and
pop
leave
ret
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
lea
fstps
push
lea
push
call
add
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
push
mov
movl
jne
mov
push
call
add
testb
movl
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
xor
cmp
je
mov
mov
cmp
jne
cmpl
push
mov
movl
jne
mov
push
call
add
push
movl
call
add
pop
mov
mov
pop
pop
pop
ret
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
xor
sub
cmp
je
cmp
je
push
mov
cmp
je
mov
cmp
mov
jne
mov
mov
push
lea
lea
movl
mov
call
mov
pushl
mov
mov
push
pushl
push
call
lea
mov
call
mov
pop
leave
ret
push
mov
mov
sub
test
je
andl
push
push
push
mov
mov
mov
test
jbe
andl
movl
mov
mov
mov
test
je
andl
push
lea
call
mov
test
mov
je
mov
push
call
mov
lea
push
pushl
push
call
cmpl
jne
lea
call
incl
addl
cmp
jb
pop
pop
xor
pop
leave
ret
mov
mov
mov
push
call
lea
call
jmp
push
mov
sub
push
mov
orb
xor
cmpl
push
sete
andl
push
push
push
mov
mov
mov
lea
push
call
test
jne
lea
call
jmp
mov
call
test
jne
push
inc
mov
call
test
je
push
call
test
pop
je
andl
andl
mov
pushl
mov
push
push
call
test
jne
inc
dec
inc
add
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
cmpl
jne
lea
call
mov
mov
shr
lea
lea
xor
and
inc
shl
or
cmpl
je
lea
call
andb
xor
inc
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
xor
pop
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
lea
push
push
xor
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
lea
and
mov
call
add
test
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
push
xor
lea
call
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
inc
add
test
inc
or
jne
mov
movl
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
pop
xor
pop
ret
cmp
je
cmp
je
mov
mov
call
test
jne
mov
mov
call
test
je
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
mov
pop
jne
cmp
je
mov
lea
push
mov
push
push
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
push
mov
call
test
pop
je
mov
xor
mov
mov
mov
mov
mov
scas
inc
inc
add
dec
and
push
lea
push
lea
push
lea
push
push
xor
push
inc
push
mov
mov
mov
call
add
test
je
cmp
jb
andl
lea
push
lea
mov
mov
push
push
push
push
mov
lea
call
add
test
js
cmpl
ja
xor
cmpl
ja
xor
mov
push
push
push
xor
lea
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
lea
push
pushl
push
call
test
js
mov
push
push
xor
lea
call
xor
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
jne
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
jmp
mov
mov
jmp
push
mov
and
push
mov
push
push
push
xor
push
inc
call
test
je
mov
lea
mov
test
je
mov
mov
push
push
call
test
je
test
je
mov
push
call
mov
mov
movl
testb
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
push
mov
call
test
jne
cmpl
je
push
push
push
or
push
mov
call
jmp
or
mov
mov
test
je
mov
test
jle
lea
mov
call
xor
push
inc
mov
call
test
je
pushl
pushl
call
pop
xor
pop
inc
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
lea
push
movb
call
test
je
andl
mov
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
cmp
je
jb
movl
mov
ret
push
mov
sub
test
push
mov
je
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
xor
lea
push
mov
mov
mov
mov
mov
push
call
mov
mov
cmp
je
mov
add
add
mov
mov
cmp
je
mov
add
add
mov
test
jne
pop
leave
ret
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
push
mov
call
pop
jmp
push
mov
sub
push
mov
mov
call
test
je
mov
cmp
pop
jb
or
call
test
je
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
sub
add
push
lea
push
call
leave
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
pushl
mov
pushl
push
call
cmpl
mov
jne
mov
mov
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
mov
mov
andl
mov
mov
movl
mov
movl
push
mov
call
pop
pop
pop
ret
mov
mov
mov
mov
mov
movzwl
mov
or
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
xor
call
mov
out
pop
out
lcall
jle
imulb
in
enter
add
lahf
xchg
push
loope
xchg
fyl2x
push
add
add
xlat
fcmovbe
imul
in
add
push
push
push
push
lea
push
push
push
push
push
push
call
cmpb
xchg
mov
stos
mov
add
add
pop
add
repnz
add
push
add
add
lahf
add
fiadds
in
roll
jb
pusha
loopne
cwtl
adc
mov
add
push
mov
add
add
xchg
add
cmpsb
test
jae
add
int3
add
les
fs
movl
and
popl
push
push
push
lea
push
push
push
push
push
push
push
push
call
mov
add
lods
add
jmp
in
lds
add
add
fistps
add
mov
lods
enter
add
xchg
add
mov
cmc
nop
ljmp
js
add
mov
popf
test
mov
lea
pop
push
push
push
push
push
push
lea
push
call
fadds
aad
add
push
mov
rol
lods
mov
jb
add
jl
add
lret
scas
xchg
add
xchg
lods
outsl
add
mov
jle
insb
icebp
add
add
out
jge
add
pushf
insb
add
int3
mov
add
test
mov
add
pop
push
push
push
lea
push
push
call
add
mov
shl
jnp
sbbl
add
arpl
add
add
push
enter
leave
add
add
je
test
push
xchg
add
flds
jmp
out
nop
cwtl
add
add
imul
add
out
add
mov
mov
lea
pop
call
push
push
call
add
mov
add
jecxz
add
mov
add
add
jb
scas
add
lods
add
pop
std
pusha
aam
mov
mov
leave
add
scas
add
sti
add
add
mov
lea
pop
call
push
push
lea
push
lea
push
call
jbe
jmp
je
movw
incb
int3
loop
xchg
mov
lock
xlat
mov
jl
movsl
add
fwait
add
aad
int3
add
insb
add
loope
fstps
imul
cmpb
movsl
fcompl
mov
lea
pop
push
push
push
push
call
cmpsl
add
lods
mov
add
add
in
add
jb
xlat
add
add
add
mov
fwait
pushf
pop
add
cwtl
add
addb
lods
add
incb
jp
ret
jbe
imul
shll
mov
add
fiaddl
fxam
add
lods
add
add
mov
add
xchg
fmull
pop
call
push
lea
push
call
mov
cmpsb
lds
mov
test
mov
stos
add
add
pop
mov
pop
into
mov
cmc
pop
into
add
hlt
roll
add
mov
outsl
shl
lea
add
shrb
push
mov
std
pop
lods
out
add
xchg
hlt
add
loope
fiadds
add
mov
fs
cli
stc
add
add
add
cmc
push
add
hlt
lea
pop
jmp
push
push
push
lea
push
call
jmp
pop
add
add
test
mov
pusha
xlat
add
jnp
add
lret
roll
lock
add
xlat
add
add
add
mov
out
add
mov
popa
adc
mov
push
lea
push
lea
push
call
add
pop
pop
arpl
test
pop
lcall
into
add
add
loope
xchg
ret
push
add
bound
mov
fiadds
jae
call
sar
add
jns
mov
cmc
fldenv
add
mov
add
mov
lea
pop
mov
push
push
lea
push
push
push
push
call
push
arpl
out
pop
outsl
int3
lahf
push
test
add
shlb
ret
mov
out
add
add
jl
mov
add
jmp
add
rolb
subl
jl
add
clc
push
negb
mov
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
push
mov
fistl
add
add
xchg
ljmp
add
push
enter
add
add
lods
sar
add
add
negb
imul
out
ljmp
jo
call
out
add
rcrb
xchg
jbe
cmc
add
mov
push
pop
int3
add
lods
in
add
add
sub
ret
add
add
add
push
lea
push
push
push
push
push
call
fs
mov
add
ficoms
in
mov
popf
xchg
js
add
filds
add
mov
ljmp
shl
movl
mov
add
add
mov
nop
add
add
push
add
add
clc
rcr
mov
add
jmp
call
pop
js
into
mov
arpl
rolb
add
jle
add
push
add
pop
mov
xor
push
push
xor
add
push
sub
add
sub
sub
lea
pop
not
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
cli
add
rcll
in
add
sbb
mov
add
mov
roll
rorb
add
stos
fildll
push
mov
jbe
add
add
pop
lcall
lcall
pop
pushl
call
push
push
push
push
call
ret
push
pop
pop
add
cwtl
add
add
mov
sti
add
cwtl
out
add
lcall
leave
xchg
add
out
pop
out
leave
cmpsl
neg
add
add
jge
add
je
pop
lds
push
popf
enter
ret
jae
add
sarl
add
push
add
mov
pop
fildl
add
jb
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
call
mov
mov
jns
jo
add
add
in
xchg
add
pop
add
add
add
push
sahf
add
fldlg2
add
add
flds
mov
add
xlat
addl
add
add
and
inc
loopne
add
add
xchg
mov
jne
sub
push
lea
push
push
push
call
jmp
mov
xchg
in
add
pusha
mov
nop
add
pop
mov
xorl
scas
stc
add
leave
mov
add
addl
add
into
add
addl
add
mov
pop
push
pushl
push
lea
push
lea
push
push
call
test
pop
add
jnp
add
add
out
fisubl
imul
cltd
into
add
out
add
add
mov
jmp
add
push
add
lods
in
mov
mov
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
in
add
roll
roll
add
addb
test
shl
add
jo
xchg
in
xchg
loopne
lock
add
std
cmpsb
add
icebp
xchg
add
xlat
add
add
in
je
or
add
mov
add
add
lock
add
jb
add
jecxz
push
and
add
jns
pop
pusha
aam
add
pop
mov
lea
pop
call
push
lea
push
push
push
lea
push
push
call
add
test
test
ljmp
call
popl
clc
mov
push
movsl
lea
mov
jb
xchg
sahf
add
pop
add
cld
add
out
jecxz
iret
pop
fadd
cld
pop
mov
lea
pop
pushl
pushl
push
push
call
add
mov
mov
push
pushf
jle
add
lds
pushf
incb
pop
pop
push
add
push
add
add
lret
add
mov
mov
pop
add
les
or
push
push
add
add
sub
push
or
not
add
sub
rol
sub
pop
pop
push
push
call
add
add
add
cli
add
test
add
add
add
mov
push
aad
jnp
ret
pop
push
add
add
pop
stos
lahf
xchg
js
add
popf
mov
xchg
add
mov
popa
add
add
imul
leave
in
add
jl
popl
std
add
add
pop
pushl
push
push
call
add
je
add
lods
add
into
ret
add
add
add
add
pusha
add
ljmp
lret
add
xorl
add
jl
addb
add
add
lods
add
icebp
pop
jno
cld
lea
pop
call
push
push
call
jne
fdivs
jno
lcall
mov
loop
add
add
scas
hlt
out
jle
jmp
outsl
xchg
out
push
jno
out
je
fiaddl
je
pop
push
jae
test
add
add
add
outsl
mov
cltd
movsl
mov
mov
sahf
push
fs
add
push
movsl
outsl
sahf
add
test
call
cwtl
add
test
add
mov
lea
pop
push
push
push
shl
add
shl
push
push
pop
add
ror
shr
not
sub
shl
pop
lea
not
pop
push
push
call
add
pushf
mov
cmpsb
mov
popf
xchg
cmpsl
add
mov
add
imull
test
ljmp
scas
add
push
or
push
lea
push
push
push
call
add
add
clc
add
add
add
add
mov
fsts
mov
cmpsl
mov
lods
add
add
andl
add
jnp
add
lea
pop
push
call
push
push
push
lea
push
push
push
push
push
call
push
add
mov
mov
into
add
in
mov
add
rolb
test
jne
pop
add
repnz
add
xchg
add
add
add
andl
add
jmp
jo
mov
add
add
movb
add
jnp
mov
arpl
pop
mov
push
push
push
push
push
lea
push
call
add
add
xchg
add
mov
lcall
scas
add
mov
jns
jp
sti
lahf
xchg
add
scas
pop
subb
add
call
add
jge
fldl
add
jo
add
add
addr16
add
mov
loopne
jae
int
fdivs
cmpsl
add
roll
add
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
fcmovbe
clc
out
loope
add
enter
into
add
test
iret
pop
ja
outsl
add
icebp
add
add
xchg
fwait
jo
fbld
add
int3
jbe
add
js
xchg
mov
out
cld
lea
pop
mov
add
push
push
push
push
push
call
add
in
lods
outsl
mov
push
ja
jle
movl
ja
mov
add
in
add
jbe
int3
lea
pop
add
lret
je
icebp
roll
mov
rcrl
lret
xchg
fwait
add
jge
les
ret
add
add
add
push
lea
push
lea
push
push
push
push
call
mov
pop
idivb
stos
add
pushf
jecxz
add
negb
movsb
add
insb
int
mov
fs
addr16
in
add
push
add
mov
jge
add
clc
mov
mov
add
jecxz
add
jno
mov
orb
jl
add
stc
cmpsb
add
in
jge
roll
add
cltd
std
xchg
add
pop
cwtl
sbb
xor
jb
push
push
push
lea
push
lea
push
lea
push
call
into
add
add
nop
jle
cli
mov
add
aad
xchg
add
mov
mov
xchg
add
int3
add
jecxz
add
cltd
mov
cld
incb
pop
mov
cld
lea
pop
add
push
push
push
push
push
push
push
call
lods
add
ljmp
push
repnz
add
fisubrl
je
add
mov
out
out
add
rolb
jmp
add
add
jl
add
add
add
push
add
pop
push
mov
push
push
push
push
push
push
push
lea
push
call
add
mov
mov
add
in
mov
add
jmp
add
ja
add
dec
add
add
in
mov
xchg
idivb
pop
xor
push
lea
push
push
push
push
push
lea
push
call
add
add
ja
out
hlt
add
add
add
mov
int
mov
out
fldl
push
add
out
add
fwait
push
jne
add
add
sahf
js
mov
jmp
stos
leave
scas
add
push
add
lahf
add
mov
add
add
cwtl
int
lods
fs
jns
in
add
rolb
test
cld
lea
pop
add
push
push
push
lea
push
push
push
push
push
push
call
lahf
add
xchg
outsl
out
out
cmpsl
mov
add
add
cltd
add
add
test
hlt
out
add
addb
add
add
add
test
xchg
loopne
add
hlt
push
xchg
mov
fnop
je
out
jns
xchg
aam
bound
add
pop
push
push
call
loope
add
add
add
les
add
push
add
in
nop
add
test
xchg
mov
add
shl
push
arpl
add
test
pop
pop
icebp
push
ljmp
arpl
pop
mov
xor
push
push
call
mov
push
out
popf
add
add
jnp
add
stos
jp
into
add
testb
xchg
mov
add
xchg
les
mov
pop
loope
add
add
lock
xchg
imul
cmpsb
push
add
jge
mov
add
add
add
xchg
or
mov
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
xchg
stos
add
add
into
add
shl
add
jge
add
int3
add
ret
lock
mov
aad
cld
add
adcl
add
add
cli
data16
mov
fldl
xchg
jmp
mov
add
mov
mov
mov
lea
pop
xor
push
push
push
push
push
call
fstl
mov
loopne
add
add
add
scas
mov
fildl
push
lret
add
in
loop
mov
add
mov
cwtl
add
xchg
fstl
fmull
les
push
push
push
push
call
rcrl
add
add
xchg
add
add
lret
add
add
add
add
push
mov
add
add
mov
mov
sti
add
jae
add
cmc
add
scas
add
mov
lea
pop
sub
push
push
lea
push
push
lea
push
push
push
call
add
sarb
lret
add
jns
push
add
roll
pop
add
mov
add
in
int
jne
add
add
add
add
test
leave
fs
add
add
int3
ja
add
insb
add
sahf
add
add
jp
push
mov
add
lret
xchg
add
popa
sbb
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
xchg
add
lods
add
add
add
pop
int
add
mov
add
icebp
idivl
js
add
add
xorb
add
mov
add
add
mov
lea
pop
rep
pop
push
push
call
add
add
rcl
add
movsl
add
jecxz
arpl
pop
mov
push
add
popa
mov
mov
push
lea
rcr
add
push
add
test
add
mov
xlat
add
xchg
add
add
add
pop
mov
push
push
call
xchg
mov
push
add
add
in
in
add
sarl
out
push
add
add
fldl
mov
push
add
add
pop
add
push
xchg
ljmp
jl
mov
xchg
add
add
mov
cld
lea
pop
add
push
push
lea
push
push
call
add
imul
popa
in
mov
rolb
jno
fcoml
add
xchg
mov
jnp
std
js
in
hlt
movsb
add
pop
cli
popf
test
add
xchg
je
roll
mov
nop
out
jp
lahf
add
sahf
xchg
jae
out
loopne
add
add
pop
add
add
jo
jnp
add
std
xchg
stos
in
mov
lea
pop
add
add
push
push
lea
push
push
push
call
out
lcall
mov
leave
nop
xchg
mov
testl
sbbl
push
add
pop
add
loopne
add
push
fiadds
add
add
test
pop
xorb
pushf
xchg
ret
pop
xlat
add
js
fidivrl
add
add
mov
lea
pop
mov
xor
push
push
lea
push
call
add
data16
mov
mov
mov
fwait
add
cwtl
add
add
jno
jge
add
add
mov
add
add
add
pusha
add
add
into
add
mov
xchg
repnz
add
add
mov
enter
mov
add
scas
add
mov
clc
xchg
cld
in
mov
int3
enter
arpl
mov
push
push
push
push
push
call
in
add
add
mov
sahf
add
jmp
add
popa
add
out
jns
add
imul
imul
fwait
add
add
add
add
pop
popf
cli
add
add
mov
popl
ficoml
add
add
add
scas
stos
mov
lea
pop
xor
push
push
push
lea
push
push
push
call
mov
jle
loopne
xchg
add
add
add
popf
add
mov
add
into
add
pop
jmp
add
lahf
add
add
add
add
add
add
add
add
add
push
xchg
add
add
xlat
mov
sbb
les
add
push
push
push
push
push
push
call
insb
add
cmpsb
add
add
add
pop
add
loopne
mov
jmp
mov
pop
lds
addl
add
jl
test
roll
lahf
enter
out
add
mov
test
add
pop
mov
push
push
push
push
push
push
call
nop
mov
lea
add
popf
fsubs
gs
addr16
call
add
jmp
cld
add
add
loope
add
add
lret
mov
add
icebp
mov
cltd
scas
lods
mov
add
pop
rcll
lret
imul
ljmp
lea
pop
xor
push
push
push
push
push
lea
push
call
loopne
jo
ja
pop
add
xchg
add
add
js
out
popf
stc
add
mov
add
pop
add
push
mov
fists
addb
add
lahf
lahf
add
add
loopw
add
stos
add
lock
out
add
mov
imul
add
add
mov
lea
push
push
push
call
mov
add
jmp
add
add
add
in
data16
pop
add
mov
mov
mov
push
ljmp
enter
cmpsl
int
out
popl
fsubrp
stos
popf
sahf
add
test
mov
push
mov
add
add
pop
add
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
std
add
add
add
mov
add
add
add
jecxz
add
popa
push
mov
test
mov
cld
add
mov
lea
pop
add
push
push
push
push
push
lea
push
call
jnp
add
mov
rolb
test
add
mov
fwait
mov
add
jo
add
add
scas
add
js
add
push
add
pop
add
add
add
mov
movb
add
mov
mov
fildl
add
stos
testl
push
add
repnz
lds
loop
push
xchg
mov
lea
pop
mov
push
push
not
ror
push
push
pop
add
shl
add
sub
not
pop
xor
not
pop
push
lea
push
push
lea
push
call
mov
add
lcall
jbe
mov
add
xchg
out
add
popf
add
add
add
mov
stos
add
faddl
push
into
add
mov
lea
pop
pushl
push
push
push
lea
push
call
lock
push
add
add
int
sti
jb
mov
lods
std
iret
add
push
jecxz
mov
int
shll
push
loop
add
add
mov
mov
add
add
data16
enter
add
add
pop
call
push
push
push
add
ror
push
sub
add
xor
sub
xor
dec
ror
pop
rol
inc
pop
push
push
push
push
call
add
push
add
mov
xlat
pop
add
in
pop
push
xchg
add
add
add
add
lahf
test
add
xchg
pop
fiadds
rol
je
mov
jae
jge
jmp
jo
push
movsl
mov
gs
pusha
neg
add
pusha
mov
ret
add
int
in
add
fildl
mov
mov
add
out
push
in
fiadds
add
lea
pop
push
push
push
push
push
push
lea
push
push
call
xor
pop
add
add
pushf
clc
add
lret
out
in
fdivrl
add
add
add
loopne
data16
cwtl
popf
jl
pop
jne
jmp
push
add
mov
add
xchg
add
popa
cmpb
fiadds
pushf
stos
add
popa
mov
sbbl
jo
add
pop
call
push
push
push
push
lea
push
push
push
call
add
push
imul
pop
scas
pop
add
test
mov
pop
add
addl
add
stos
add
mov
add
add
ffreep
add
call
sbb
mov
push
push
push
lea
push
push
call
mov
push
add
int
add
add
add
filds
add
add
jnp
add
add
jge
add
lret
add
int
add
and
add
mov
mov
xchg
std
mov
mov
lea
pop
push
push
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
in
cmc
add
add
testb
ficoms
sti
imul
mov
pop
jl
fwait
jo
jmp
pop
mov
add
imul
add
jns
mov
scas
mov
icebp
cmc
test
addb
shrb
add
mov
lea
pop
mov
push
add
ror
inc
sub
pop
add
push
xor
xor
pop
add
push
push
push
push
push
push
push
push
push
call
add
test
add
mov
incb
js
add
add
les
jl
pop
js
jae
jne
push
filds
mov
test
add
add
mov
hlt
jns
add
mov
pop
add
jns
mov
add
cld
lea
pop
add
push
push
lea
push
push
push
push
call
add
push
pop
add
ja
add
scas
je
rcl
decb
add
xchg
mov
ljmp
jge
add
pop
add
movl
call
popa
lds
push
add
add
sahf
add
add
fwait
test
add
aad
in
jb
add
add
xchg
add
cltd
iret
mov
add
lods
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
add
jle
mov
out
movsl
leave
add
add
add
cli
lahf
in
jmp
mov
bound
add
out
add
nop
add
mov
add
in
lock
add
add
fwait
je
add
fistpll
test
pop
jne
imul
add
add
scas
lods
pop
add
add
add
jmp
lea
pop
xor
push
lea
push
call
mov
int
mov
add
add
mov
xchg
pop
add
mov
stc
les
push
mov
add
jl
jnp
add
popa
xchg
jge
add
add
shll
add
cmc
data16
js
pusha
je
les
les
add
push
push
push
push
push
push
lea
push
call
jmp
add
call
add
pop
add
movsl
incb
mov
add
pusha
int
mov
add
add
mov
mov
push
loopne
add
mov
add
mov
pop
add
mov
add
hlt
data16
mov
lock
cmpsb
add
lcall
mov
add
enter
add
mov
lods
add
add
mov
lea
pop
add
push
push
push
push
push
call
mov
push
add
push
add
jne
js
jmp
jae
outsl
mulb
rorb
add
sahf
ror
icebp
lret
mov
add
fmull
push
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
in
mov
test
mov
add
lds
mov
test
sti
add
mov
jae
mov
push
push
add
add
pop
pop
add
pop
pop
add
add
push
loopne
add
pop
xor
push
lea
push
push
push
push
push
call
add
xchg
add
add
add
popa
nop
add
mov
sahf
add
add
push
add
idivl
xlat
push
add
add
add
add
sarb
leave
fcompl
int3
mov
lea
pop
add
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
testl
add
push
stos
imul
xchg
add
cli
add
mov
mov
scas
add
mov
add
add
add
leave
add
mov
xchg
pop
les
xlat
mov
add
lret
ja
lds
jbe
cld
lea
pop
add
push
sub
lea
add
not
pop
pop
mov
push
push
push
lea
push
push
call
pop
mov
jge
cltd
push
add
ljmp
aad
add
push
mov
add
lret
push
std
push
addb
add
fcmovne
add
sahf
cltd
int3
stc
icebp
add
int
mov
roll
sahf
add
mov
fwait
add
testl
icebp
bound
adcb
mov
mov
lea
pop
xor
push
lea
push
push
push
push
push
lea
push
push
call
fstpt
cld
add
pusha
add
add
cmp
leave
add
movsl
stos
cwtl
add
add
add
notl
outsl
mov
popf
test
add
loopne
cmpsb
or
filds
add
clc
mov
xchg
repnz
add
jno
out
mov
jecxz
cld
lea
pop
add
push
sub
sub
not
pop
rep
push
add
pop
mov
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
add
add
popaw
ret
add
test
cltd
add
ret
lahf
add
mov
mov
add
add
pop
sahf
add
mov
imul
mov
add
mov
and
xor
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
mov
cwtl
push
icebp
xchg
std
xchg
lods
ja
mov
add
lcall
pop
add
mov
pushf
pop
int
cwtl
repnz
pop
add
loopne
mov
mov
fadds
add
mov
push
jle
push
loopne
add
shrl
add
mov
lea
pop
add
push
push
lea
push
push
call
mov
popa
xchg
mov
jl
push
add
add
mov
mov
loope
add
cltd
jmp
cwtl
imul
push
pushf
pushf
add
pop
in
add
popf
cmpsl
mov
xchg
push
add
add
stos
add
stos
out
mov
add
add
add
push
mov
fbstp
add
filds
jno
loop
pop
incb
fadds
enter
add
mov
lea
pop
or
je
push
lea
push
lea
push
push
push
push
call
add
mov
icebp
imul
mov
add
mov
add
aam
mulb
add
cmc
test
push
add
mov
int3
lea
pop
mov
xor
push
pop
mov
push
push
push
call
jp
jno
add
add
add
lds
add
cwtl
lcall
add
mov
mov
push
add
out
add
ror
mov
mov
mov
lea
pop
xor
push
lea
push
push
push
push
push
push
lea
push
push
call
fs
loopne
stos
popf
add
js
add
xchg
xchg
push
add
add
test
add
roll
mov
fwait
sbbb
add
jnp
jno
loope
outsl
push
js
loope
add
lcall
pop
add
push
push
push
lea
push
call
add
flds
mov
mov
push
rolb
fadds
mov
add
cmpsb
mov
gs
add
addr16
cli
aad
add
add
jl
aam
bound
pop
add
push
rol
pop
add
push
sub
ror
pop
push
push
inc
dec
shl
pop
mov
xor
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
pop
movsb
jbe
add
add
mov
add
add
icebp
jle
movsl
imul
add
fbstp
jp
mov
lea
pop
add
push
push
lea
push
push
push
push
lea
push
call
shll
add
int3
mov
test
mov
pushf
xchg
add
mov
add
mov
add
addr16
jbe
mov
add
sti
cmpsb
mov
lock
hlt
bound
add
add
cwtl
mov
lea
pop
pop
push
lea
push
lea
push
call
or
add
add
pop
add
add
add
rolb
add
jp
gs
add
stos
pop
cld
sahf
mov
add
xchg
add
add
addr16
fdivrp
jecxz
in
add
mov
lea
pop
rep
push
add
pop
mov
push
push
push
push
push
push
push
lea
push
call
lret
insb
in
add
fsubl
xorb
add
mov
out
cmpl
cmc
mov
add
xlat
in
rolb
add
int3
lock
loopne
jecxz
cmpsb
add
in
adcl
sbb
xor
push
lea
push
push
push
push
push
lea
push
push
call
out
add
xchg
rorl
mov
out
add
add
add
add
mov
aam
mov
add
roll
loop
add
scas
lret
add
xlat
out
pop
xchg
add
add
xchg
popf
roll
popl
mov
les
les
add
push
push
push
call
test
scas
pop
mov
add
shll
popf
jp
push
mov
test
mov
add
add
xchg
pop
loopne
add
jmp
jmp
add
add
testb
or
je
push
rol
add
shl
pop
mov
push
add
ror
pop
add
add
push
push
lea
push
push
push
push
push
push
call
pop
insb
xchg
jae
cltd
add
loope
cld
add
add
add
jne
enter
jmp
add
jbe
incb
mov
add
pop
add
lret
filds
jp
lock
outsl
aam
mov
mov
mov
lea
pop
rep
pop
push
push
not
dec
push
sub
add
rol
sub
pop
pop
push
sub
pop
pop
push
push
push
push
push
push
call
xchg
loop
add
lock
add
shlb
rcrl
push
loopne
add
add
mov
movsl
add
push
xchg
loope
sti
jae
add
add
repnz
movb
std
faddl
scas
xchg
out
out
repnz
lea
pop
mov
push
push
push
lea
push
push
push
call
lret
push
add
test
rolb
add
int3
add
flds
pop
sarl
add
add
add
data16
aad
popf
add
push
into
fs
movl
cld
popa
pushf
push
add
int3
lea
pop
mov
mov
push
lea
push
lea
push
push
push
push
lea
push
push
call
xchg
mov
mov
jno
shr
add
sahf
repnz
stos
add
add
add
add
roll
add
xchg
jbe
mov
cmpsl
pop
imul
jmp
xchg
enter
jmp
add
add
add
xlat
roll
push
fwait
xchg
add
nop
add
arpl
loopne
add
scas
add
add
add
test
cli
add
pop
jmp
push
ror
sub
pop
push
mov
push
push
push
push
push
lea
push
push
push
call
add
cmc
mov
in
cmpsb
add
lahf
add
add
mov
add
xchg
mov
fwait
ret
add
cmc
push
fs
roll
add
add
add
rcll
jmp
fisubrs
add
arpl
add
je
add
arpl
add
jmp
stos
xlat
out
lods
enter
mov
lea
pop
add
push
push
lea
shr
not
pop
push
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
jmp
mov
add
add
pop
add
rcr
into
push
xchg
add
add
stos
add
lods
cmpsb
add
push
subl
lea
pop
push
mov
push
dec
add
add
shr
pop
pop
pop
push
add
lea
ror
ror
pop
pop
pop
push
ror
sub
pop
leave
ret
push
add
not
pop
push
push
ror
sub
pop
mov
push
push
call
pushf
data16
add
call
add
add
add
add
add
cmpsl
data16
movsl
add
push
mov
pop
add
add
fiadds
add
mov
mov
imul
or
clc
push
push
rol
ror
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
pop
test
push
jno
add
repnz
stc
mov
loope
pop
lds
add
popf
xchg
push
add
add
jmp
jb
add
jecxz
mov
scas
fdivrs
lret
add
jae
roll
fldl
mov
lea
pop
push
movl
push
lea
shr
add
pop
addl
test
je
push
rol
shl
pop
mov
push
push
push
push
lea
push
push
lea
push
call
mov
fldl
cmc
add
add
rorl
add
add
mov
add
stos
add
mov
push
add
lea
push
add
jmp
mov
add
sar
add
add
pop
pop
push
push
call
mov
add
add
add
mov
mov
add
add
add
add
ret
leave
jmp
mov
out
cld
add
flds
add
add
stos
stc
jno
add
add
add
mov
fsubr
jns
mov
add
add
nop
in
aam
mov
jbe
add
add
gs
lea
pop
pop
push
ror
pop
pop
push
push
push
push
push
push
push
push
call
add
lods
add
jnp
cwtl
add
test
xchg
add
jb
movsb
ror
pop
lcall
insb
jbe
add
test
add
add
jp
add
aam
add
add
add
leave
lods
xchg
in
mov
les
leave
push
xor
pop
ret
push
push
call
mov
jns
add
sahf
add
mov
stos
add
push
out
test
shl
push
fisubrl
fsubl
std
arpl
leave
add
xchg
mov
cmpsb
repnz
cltd
add
add
mov
cli
jmp
lds
lret
add
jnp
ffree
add
mov
jge
add
add
push
xchg
mov
lea
pop
push
push
push
lea
push
call
icebp
add
add
pushf
mov
shl
xlat
lock
pop
outsl
push
add
loop
adcb
out
pushf
add
mov
add
pushf
add
add
push
loop
ljmp
add
test
add
movsb
mov
lea
pop
mov
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
jnp
add
add
mov
pop
gs
add
xchg
pop
push
enter
add
add
add
add
xchg
lea
add
add
mov
mov
stos
jmp
add
clc
cld
scas
add
pop
sti
add
jp
pusha
mov
add
add
cmp
add
data16
add
push
shl
pop
push
push
push
call
mov
xchg
add
xchg
add
jo
add
call
add
fninit
out
add
pop
add
cwtl
aam
push
add
shll
add
xchg
imul
add
pop
cltd
int3
add
mov
lea
pop
push
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
fcmovbe
lret
shll
add
add
add
add
push
mov
mov
movb
add
add
fildl
rcl
ljmp
xchg
add
add
mov
lea
pop
push
push
inc
dec
add
pop
testl
push
push
push
push
call
jnp
in
cld
in
add
add
mov
add
add
add
out
pushf
shl
pop
cltd
mov
add
add
add
fwait
repnz
movsb
add
add
add
add
add
mov
add
add
clc
add
jns
xchg
jno
add
subl
mov
mov
lea
pop
addl
push
push
push
push
lea
push
call
add
nop
add
jnp
add
mov
xchg
popa
mov
imul
jp
cmc
xchg
add
icebp
add
add
call
add
add
add
outsl
mov
pop
xchg
pop
js
add
add
jp
add
cwtl
mov
lea
pop
push
push
shr
pop
call
mov
push
push
call
scas
add
pop
push
addl
add
add
jns
pop
pop
add
push
jle
add
out
jo
add
add
add
pushf
add
fildl
pop
push
out
filds
lods
test
cmpsb
add
pusha
mov
lea
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
je
pusha
stc
jno
cmc
add
add
jecxz
loopne
jmp
repnz
add
add
mov
xchg
add
cmc
clc
push
add
add
add
jp
mov
mov
add
add
mov
and
push
push
shl
ror
add
rol
pop
call
push
push
push
push
push
lea
push
push
lea
push
call
cmpsb
add
pop
add
add
jecxz
add
shrb
js
add
add
outsl
add
add
xchg
add
roll
imul
aam
add
jno
add
nop
add
add
add
pusha
add
cmc
add
add
popa
and
jge
add
test
add
add
pop
pop
push
lea
push
call
add
mov
pop
jae
add
jmp
stc
add
add
push
mov
push
adcl
add
add
add
mov
data16
in
popa
mov
add
lods
add
add
fucomp
mov
ficompl
xchg
mov
add
or
pop
push
push
lea
push
push
push
lea
push
lea
push
call
scas
je
mov
jnp
add
mov
addr16
mov
test
pop
add
add
mov
fiadds
out
movsb
add
add
test
add
add
add
iret
aam
xchg
add
add
gs
ret
add
add
lea
pop
pop
push
dec
pop
leave
push
lea
push
push
push
push
push
lea
push
call
jb
iret
popf
mov
xchg
popf
iret
addl
cltd
popl
xchg
jmp
add
lds
add
add
xchg
jecxz
call
xchg
rolb
add
imul
mov
add
jecxz
add
movsb
movb
roll
mov
ficompl
add
js
add
pop
ret
push
push
shl
sub
pop
mov
add
push
not
pop
push
push
push
inc
sub
pop
push
push
push
push
lea
push
call
ret
pop
add
roll
add
int3
add
add
add
pop
pusha
jle
pop
cltd
add
rcrb
mov
ret
incb
xchg
add
fsts
add
stos
test
data16
movl
push
push
lea
push
push
lea
push
lea
push
call
faddl
xchg
mov
cli
jne
add
add
jae
fsubl
add
add
add
lock
add
add
jo
add
lea
add
mov
add
cmpsl
not
in
test
mov
add
jns
movsl
xchg
add
push
add
movsb
jno
nop
mov
lea
pop
push
push
sub
ror
shr
pop
call
push
push
push
call
nop
lcall
add
add
in
add
fs
jl
jbe
insb
add
mov
jp
data16
bound
add
mov
add
bound
add
jmp
xchg
cld
add
sbb
jb
xchg
scas
roll
fmull
or
push
push
push
push
push
call
add
outsl
add
mov
add
sti
faddl
add
xchg
mov
out
mov
std
add
cmc
mov
insb
add
add
mov
add
add
lcall
mov
aad
repnz
insb
pop
bnd
mov
insb
mov
lea
add
add
std
add
mov
call
mov
cwtl
mov
lea
pop
call
push
add
pop
subl
cmpl
jne
push
sub
sub
dec
pop
pop
push
push
push
push
call
add
add
data16
in
pop
add
iret
add
add
out
add
add
arpl
andl
loop
add
jbe
mov
add
add
add
mov
add
test
icebp
sahf
xlat
push
mov
lea
pop
pop
pop
push
rol
pop
pop
leave
push
push
push
push
call
stc
in
enter
mov
add
shrl
scas
in
cmpsl
movsb
lock
lock
enter
jne
add
testl
pop
add
lds
int3
add
mov
mov
add
sarl
fiaddl
jecxz
add
int3
add
orl
push
push
push
push
push
lea
push
call
loop
add
addl
add
jne
shl
cli
add
ljmp
fiaddl
movsb
add
mov
out
add
add
add
pop
mov
flds
rcrl
lret
je
add
add
int
mov
lea
pop
mov
push
lea
pop
add
push
inc
pop
push
push
pop
push
push
push
push
push
push
push
push
push
push
call
lret
add
add
add
push
add
add
jecxz
add
sarl
add
jae
add
add
outsl
lock
jno
add
loope
xchg
mov
lea
pop
push
mov
push
push
call
add
mov
add
fldl
mov
add
jmp
rcrb
add
mov
add
faddl
mov
pop
stc
ljmp
add
in
fcomps
add
add
jge
fadds
add
jb
xchg
mov
push
push
arpl
mov
loopne
xchg
add
aam
jno
add
aam
bound
pop
lea
sub
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
out
lcall
add
xorb
lea
out
add
pop
call
xchg
pop
rorl
mov
add
incb
test
repnz
iret
fs
rorb
pop
mov
push
rol
pop
shr
push
push
push
push
lea
push
call
negl
add
add
mov
add
add
popa
mov
mov
add
in
add
cmpsb
push
add
add
hlt
pop
add
pusha
mov
mov
les
inc
or
add
shl
pop
mov
mov
push
lea
push
push
push
push
push
push
push
push
lea
push
call
mov
jae
jp
add
call
movsb
add
sti
add
xchg
cwtl
add
add
je
faddl
cmc
add
pusha
sti
add
pop
add
add
fwait
add
jb
add
popfw
mov
xchg
add
in
mov
add
int
add
xchg
mov
lea
pop
add
push
push
push
lea
push
push
call
lods
jecxz
fildll
mov
pop
add
add
add
xchg
fildl
hlt
sarl
pop
add
lcall
add
filds
xchg
jne
mov
xchg
jo
mov
lea
pop
add
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
add
lret
call
add
add
stos
scas
add
stos
call
data16
add
add
add
mov
add
add
fisubs
push
jae
add
xchg
cwtl
cltd
mov
fcompl
popl
mov
mov
jb
sti
sahf
add
test
add
mov
fmull
nop
nop
nop
nop
push
push
push
push
push
push
lea
push
lea
push
call
add
movb
popf
add
push
mov
aad
cld
add
pushf
add
rolb
add
imul
add
add
lea
pop
add
add
mulb
push
add
mov
mov
aad
add
jno
add
enter
add
add
test
add
add
mov
mov
lea
pop
cmp
jne
push
pop
cmp
jne
mov
push
add
pop
movl
jmp
push
sub
shl
pop
mov
push
shl
not
pop
mov
sub
jne
push
lea
add
not
pop
mov
push
sub
rol
shl
pop
movl
push
xor
sub
sub
pop
jmp
mov
push
push
push
push
push
lea
push
push
push
push
call
push
add
mov
push
add
mov
js
mov
push
add
fwait
push
shl
out
imul
inc
repnz
add
push
cltd
add
push
pop
ficomps
xlat
add
jo
push
add
pop
mov
push
push
call
jl
addr16
mov
orb
repnz
imul
add
scas
add
add
roll
add
add
jl
xchg
clc
xlat
jge
stos
mov
test
popf
popf
gs
pop
bound
add
mov
lea
pop
cmp
jne
push
lea
push
push
push
call
add
arpl
push
add
ret
add
push
add
jp
push
add
jno
pop
mov
out
pop
add
push
leave
fs
add
mov
cltd
loopne
xchg
add
add
mov
add
movsl
add
fmull
inc
adc
add
add
add
leave
clc
ror
sub
pop
jmp
push
lea
pop
mov
cmpw
jne
push
ror
ror
dec
sub
pop
mov
push
push
push
push
push
push
call
bound
mov
add
add
les
les
add
add
cltd
lock
push
fstpt
add
mov
insb
add
push
cli
add
fwait
data16
add
pop
mov
ret
add
aad
add
mov
outsl
pop
xchg
pop
add
sbb
add
mov
push
push
push
push
call
mov
loopne
add
pushf
movsb
cmpsl
hlt
add
stc
fs
lret
lds
add
out
rcll
push
flds
xchg
pop
pop
into
add
push
push
adc
add
ljmp
add
int
scas
mov
cmp
xchg
shr
mov
mov
adc
pushl
pop
push
push
call
test
arpl
add
add
ret
pop
jbe
add
fildll
cli
mov
pushf
add
add
addl
fdivrp
add
call
jns
std
add
mov
jne
pop
int
add
add
mov
stc
add
add
add
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
call
add
add
fildll
add
fnsave
leave
mov
push
add
jo
mov
outsl
mov
mov
jb
push
add
add
push
mov
fcompl
addr16
lret
in
add
add
add
push
pop
add
add
add
add
add
add
sti
add
jne
hlt
loope
popf
add
add
add
pop
mov
mov
push
push
ror
push
push
pop
add
sub
sub
add
shl
inc
shl
pop
shr
sub
pop
push
push
push
push
push
push
push
push
push
push
call
arpl
lods
ja
add
add
push
call
jo
cmc
pop
add
add
fscale
xchg
add
pop
add
call
jp
add
add
outsl
xchg
stos
add
mov
ficoml
xchg
lea
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
fadds
add
ljmp
add
js
add
fwait
mov
pop
pop
xchg
add
jecxz
xchg
ret
rcrb
add
sar
xchg
shr
add
add
test
add
fistps
push
ret
outsl
add
cmpsb
jae
popa
add
add
push
add
sahf
mov
aam
push
lea
pop
call
push
push
call
insb
add
add
add
push
xchg
fdivrl
mov
add
add
add
jecxz
add
pop
scas
data16
loopne
ficomps
add
mov
mov
add
xlat
cli
fcmovbe
add
out
fmulp
fisubrs
add
add
stos
xchg
mov
mov
or
js
int3
fldz
ret
push
or
add
call
shr
shl
push
xor
add
shl
dec
sub
ror
pop
not
pop
push
push
push
lea
push
push
push
call
add
lods
mov
add
add
add
mov
add
add
lret
add
add
xchg
add
add
add
clc
in
mov
add
shlb
lods
jge
add
test
add
add
add
add
mov
fmull
push
add
pop
call
push
lea
push
push
push
push
lea
push
push
lea
push
call
popa
jne
add
push
hlt
add
add
mov
xchg
mov
mov
into
add
mov
add
jae
add
call
add
lds
xchg
push
add
push
pop
scas
add
add
jl
add
mov
add
mov
and
js
int3
fldz
ret
and
add
push
push
add
add
push
xor
add
sub
rol
sub
add
dec
sub
ror
pop
rol
shr
not
shr
pop
push
shr
pop
push
push
ror
lea
add
pop
call
push
sub
add
pop
cmpl
je
push
push
shl
push
push
pop
add
xor
sub
sub
rol
pop
inc
pop
push
push
lea
push
lea
push
lea
push
push
call
add
fs
ljmp
insb
test
cld
ret
mov
add
add
pop
add
add
addl
cli
add
mov
add
fmull
push
push
push
push
call
mov
push
imul
add
add
add
add
in
add
cwtl
add
in
icebp
add
pop
add
fstl
add
add
testl
add
add
add
aad
mov
mov
add
add
mov
lea
pop
call
cmpl
je
push
push
sub
dec
rol
push
or
inc
add
shr
shr
sub
rol
dec
add
pop
add
pop
push
add
inc
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
in
mov
fiadds
pushf
add
shlb
imul
mov
lret
add
add
lahf
push
add
xchg
add
je
fs
movsl
cmc
lea
mov
add
test
fildl
add
data16
add
add
add
add
in
add
ja
mov
lea
pop
call
cmpl
je
push
push
not
sub
shr
sub
push
or
not
add
dec
add
sub
shl
dec
pop
pop
push
lea
push
push
push
push
push
lea
push
call
lret
jl
lret
jno
add
loope
jmp
add
fiadds
rcl
add
add
out
add
popf
out
add
add
add
add
jno
add
add
add
loop
xlat
sarl
pop
add
add
int
xlat
add
mov
add
xchg
add
mov
fdivrp
bound
cmpl
das
cmp
add
and
adc
hlt
and
rcll
jg
push
push
push
call
mov
add
mov
add
popa
test
add
jle
loope
rolb
lds
jmp
add
add
sarb
add
movl
mov
jns
add
add
lds
jns
add
lock
fcmovnb
roll
add
mov
lea
pop
cmpl
je
push
push
dec
add
push
xor
add
shl
sub
add
shr
pop
sub
rol
pop
push
push
lea
push
call
ljmp
add
scas
add
iret
xchg
into
add
out
arpl
jl
xchg
mov
mov
popf
add
add
cld
add
mov
lret
add
jl
add
add
add
add
lret
add
pop
jbe
mov
add
jecxz
mov
fmull
call
push
ror
shr
pop
cmpl
je
push
push
sub
shl
push
xor
add
not
sub
sub
sub
shl
shr
not
pop
dec
pop
push
push
push
call
add
bound
lock
add
mov
jl
lock
add
or
add
out
mov
jl
add
movsb
mov
into
popl
cltd
out
insb
pop
jecxz
ja
pop
mov
add
add
add
or
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
jns
xchg
pushf
fs
add
add
add
add
add
repnz
jbe
hlt
add
mov
add
mov
add
add
add
add
iret
add
add
rolb
fistl
lds
xlat
lea
add
push
add
lods
jne
add
cld
lea
pop
call
cmpl
je
push
push
not
not
push
sub
add
ror
xor
sub
add
pop
xor
xor
pop
push
rol
lea
dec
pop
push
push
sub
lea
pop
call
push
add
pop
cmpl
je
push
push
push
sub
add
add
inc
sub
ror
add
not
pop
lea
pop
push
dec
shr
pop
push
push
inc
add
pop
call
push
push
push
lea
push
push
push
call
je
stos
out
outsl
jl
add
aad
add
fldl
add
mov
aad
add
leave
test
push
add
cld
add
in
lcall
add
int3
lea
pop
cmpl
je
push
push
sub
inc
xor
push
and
add
shr
sub
shr
sub
sub
pop
rol
sub
shr
pop
push
lea
push
call
add
data16
cwtl
imul
mov
andb
pop
sti
arpl
testl
hlt
scas
lahf
add
loope
popf
out
add
push
add
add
add
jae
stos
add
cmpsl
stos
lods
adcl
loope
loope
xlat
xchg
lcall
add
jge
les
add
outsl
lock
add
lcall
or
push
shl
sub
pop
call
cmpl
je
push
push
xor
dec
lea
push
or
not
add
not
sub
add
lea
sub
lea
dec
add
pop
sub
lea
sub
pop
push
add
inc
pop
push
push
dec
pop
call
push
lea
dec
pop
cmpl
je
push
push
sub
push
and
add
sub
add
sub
not
sub
dec
sub
pop
not
add
add
pop
push
ror
pop
push
push
lea
push
call
push
jecxz
mov
icebp
shlb
imul
mov
mov
in
jno
add
add
xchg
mov
mov
xlat
push
add
sbb
add
mov
outsl
push
enter
iret
add
xchg
xchg
ja
add
out
lock
mov
or
pop
add
push
ror
add
xor
pop
cmpl
jne
push
sub
shr
shl
lea
pop
mov
movl
push
push
call
add
movsb
shlb
lahf
add
les
push
xchg
loopne
add
fldl
lcall
add
imul
jno
test
mov
add
pop
jmp
push
push
push
call
add
stos
int
mov
sahf
les
add
xchg
scas
add
bound
pop
mov
insb
in
add
add
add
mov
mov
add
addr16
add
fs
mov
jmp
add
pushf
mov
add
rolb
aad
fcmovnb
hlt
mov
xchg
push
mov
lea
pop
xor
push
lea
push
push
push
push
push
call
add
add
rorl
add
in
pop
add
arpl
xlat
add
add
add
push
out
add
add
push
movsl
ljmp
mov
jb
pop
cwtl
add
xchg
mov
lea
pop
pop
push
push
lea
push
lea
push
push
push
push
call
mov
jmp
jae
mov
add
mov
stos
ret
add
mov
add
add
rolb
xchg
mov
add
stc
aam
push
enter
fwait
iret
push
imul
add
mov
pop
xchg
add
add
add
add
add
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
pop
add
mov
add
add
shl
jp
push
add
fwait
loopne
popf
pop
add
add
cmpsb
out
add
xchg
add
add
pop
mov
add
add
pop
add
incb
add
add
out
add
pop
lods
in
mov
add
add
add
add
test
addr16
pop
pop
push
rol
add
dec
pop
leave
ret
push
lea
push
call
xchg
add
add
popf
frstor
add
add
add
rolb
add
add
je
push
jmp
xchg
mov
rcr
add
add
leave
stc
jecxz
add
popl
mov
add
add
add
hlt
pop
pop
mov
pop
add
jmp
mov
lea
pop
push
push
push
push
push
push
call
mov
and
mov
mov
pop
clc
popa
add
test
lret
add
add
arpl
nop
add
aam
pusha
push
add
push
lods
add
add
add
lods
movb
aad
add
add
std
mov
lea
pop
mov
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
jmp
loope
add
mov
cli
lods
jle
mov
cwtl
cltd
bnd
call
mov
cmpsl
mov
shrl
jne
popa
jno
int
addb
jmp
jl
shll
push
fs
jno
add
roll
add
add
mul
add
add
fldcw
add
test
pop
cmpl
jne
push
push
push
or
not
add
inc
sub
add
inc
pop
ror
pop
push
push
push
push
push
push
push
push
call
jo
add
add
add
add
lea
add
pop
loope
rol
jo
jmp
push
mov
in
add
xchg
mov
add
push
fidivrl
lods
pop
add
mov
mov
add
add
add
cmpl
add
push
ret
lea
pop
pushl
push
push
push
lea
push
push
call
add
xlat
pop
add
mov
add
add
mov
popa
add
lea
arpl
mov
add
pop
add
add
lea
arpl
test
add
fdivs
xchg
add
add
jo
pop
jecxz
add
stos
push
mov
lea
pop
call
push
push
lea
push
call
test
in
pushf
add
add
lahf
xchg
add
add
loope
add
add
add
add
std
movsb
add
add
int
fiadds
add
mov
clc
scas
lock
xorl
aam
add
jae
add
fs
lea
pop
push
push
push
push
push
push
push
call
mov
fcoms
xchg
add
add
into
jecxz
arpl
xchg
add
add
add
jns
add
add
lret
mov
add
jno
push
pop
pop
add
add
xchg
pop
add
add
add
int
mov
pusha
lret
loope
mov
push
add
pop
into
aad
xlat
add
add
stos
mov
ljmp
call
jmp
push
push
push
push
push
push
push
push
push
lea
push
call
fnstcw
add
push
add
add
add
cli
xchg
add
add
add
jmp
rcll
push
hlt
mov
mov
mov
push
add
mov
lret
add
jmp
add
add
out
mov
xchg
add
fucom
add
loope
mov
add
pop
cmpl
je
cmpl
jne
push
inc
rol
shl
pop
leave
push
rol
pop
add
pop
push
ror
inc
pop
pop
push
sub
xor
pop
pop
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
in
fnstenv
je
mov
add
add
add
test
pushf
mov
lods
movsl
idiv
mov
movb
push
mov
mov
add
add
in
out
stc
in
scas
into
add
add
jge
push
add
jnp
les
push
push
push
push
push
call
mov
add
add
push
movb
out
add
add
ret
add
add
push
fwait
ret
lahf
into
lret
repnz
push
add
add
into
mov
lods
stos
ret
add
pop
leave
push
push
push
push
push
call
add
xchg
into
xchg
testb
flds
add
add
push
add
add
add
loop
outsl
cmc
add
lods
mov
jecxz
xchg
add
imul
fwait
add
jecxz
mov
repnz
fcmovb
mov
lea
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
call
bound
out
in
add
loopne
int
lea
insb
movsb
add
test
orl
lret
push
add
add
lahf
testb
fwait
loope
scas
mov
mov
fiadds
jp
mov
mov
add
mov
jae
add
jb
mov
add
hlt
add
mov
pop
add
add
mov
lea
pop
ret
jmp
push
lea
push
push
call
jbe
add
xchg
sub
add
add
shll
out
lahf
jne
add
divl
xchg
add
add
addl
scas
shrl
lret
mov
lea
pop
cmpl
jne
push
push
sub
lea
push
or
not
add
lea
sub
lea
add
sub
pop
lea
add
inc
pop
push
push
push
push
push
push
push
push
call
add
nop
push
add
mov
movsl
jmp
add
push
add
loop
add
cli
add
xchg
leave
add
jp
add
pop
add
add
fcmovu
pop
push
xlat
test
xchg
pop
test
mov
add
enter
fmull
jne
push
shr
xor
pop
call
push
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
mov
lods
addl
pop
negb
std
add
add
faddl
fistpll
add
add
insb
add
mov
jp
stos
jae
loop
je
call
fiaddl
rolb
aad
mov
movsb
jl
add
xchg
add
add
lahf
clc
loopne
faddl
add
jge
mov
testb
add
jbe
aam
bound
pop
call
push
add
add
pop
jmp
push
xor
pop
cmpl
jne
push
push
call
into
add
add
les
out
mov
mov
push
push
popa
add
pop
add
in
add
imul
xchg
push
pop
add
mov
add
repnz
addl
add
jge
add
in
add
cld
add
movb
cld
int
adcl
add
movsb
add
mov
adcl
arpl
les
add
add
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
add
loope
add
jl
lock
add
add
roll
int3
aad
add
add
addl
jno
add
push
ja
sarl
roll
add
pop
mov
add
add
mov
lea
pop
mov
push
lea
push
call
enter
push
icebp
lahf
add
add
push
add
add
jnp
add
add
add
add
sahf
jno
lock
pop
add
int3
pop
je
cltd
push
enter
push
add
add
bound
outsl
lret
add
mov
add
cld
lea
pop
push
push
push
ror
push
xor
add
lea
sub
shr
sub
pop
add
dec
shl
pop
push
rol
add
pop
pushl
push
lea
push
push
push
push
push
call
add
mov
jge
mov
add
mov
add
jno
add
pushf
mov
jne
add
mov
add
repnz
add
add
add
scas
jnp
add
popl
filds
add
hlt
fsts
cld
mov
pop
call
push
shl
not
pop
push
push
dec
xor
add
inc
pop
call
push
push
rol
push
or
inc
add
lea
xor
inc
sub
dec
dec
shl
pop
add
dec
not
pop
push
push
push
lea
push
push
push
push
call
rolb
add
pushf
bound
add
add
fmuls
in
mov
outsl
add
add
jae
xchg
xlat
mov
jp
add
xchg
mov
pop
add
cmpsl
popl
data16
pushl
call
push
push
push
push
push
call
add
jge
add
cmpsb
pushf
icebp
pop
jb
add
rcr
mov
jp
add
int
in
add
repnz
add
rclb
add
jae
divb
fidivs
add
enter
add
faddl
jp
arpl
fdivrl
pop
add
pushf
in
mov
not
push
je
xchg
in
aam
bound
call
push
push
not
shr
sub
add
push
xor
add
ror
lea
add
sub
rol
lea
pop
shl
ror
shl
lea
pop
push
push
push
push
push
push
lea
push
push
call
push
mov
jnp
add
mov
in
add
std
pop
call
pop
jnp
mov
add
jp
test
mov
add
add
add
add
movl
hlt
movsb
decb
pop
pushl
call
push
lea
rol
pop
call
push
lea
push
push
lea
push
call
pop
popf
icebp
lcall
add
add
pusha
cmpsb
add
add
add
lahf
mov
in
lcall
pop
mov
add
add
pushf
jb
cld
shr
call
mov
lods
imul
add
jno
iret
add
out
addr16
mov
add
pop
lea
push
push
lea
inc
push
xor
add
not
sub
add
pop
shl
add
sub
pop
push
lea
push
push
call
add
lods
movsb
filds
into
lret
add
add
lds
jmp
test
fstps
xchg
add
vsqrtps
mov
stos
jae
jmp
movsb
outsl
lahf
add
aad
out
loopne
xlat
add
add
out
bound
int3
lea
pop
pushl
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
add
not
movsb
mov
jno
hlt
add
aad
add
xchg
repnz
add
pop
mov
loopne
jge
add
jnp
icebp
jmp
add
add
test
pop
jb
int
lea
jmp
mov
mov
lea
pop
call
push
push
push
lea
push
push
call
mov
add
loop
mov
jns
jb
add
add
add
add
scas
add
out
add
add
add
add
pop
rol
stos
add
ja
add
les
call
push
push
sub
lea
shr
add
push
push
pop
add
dec
sub
sub
add
sub
pop
add
add
rol
not
pop
push
sub
shr
shr
pop
pushl
call
push
push
call
stos
add
sahf
xchg
xchg
lock
add
push
add
add
aad
add
cmc
mov
add
into
jbe
add
add
add
rolb
add
pop
add
call
add
pop
call
push
push
lea
push
push
push
call
rolb
add
mov
add
pop
xchg
ret
lock
add
mov
add
mov
data16
add
fists
add
jle
add
mov
add
fcmovnu
add
cwtl
add
mov
push
add
add
stos
jb
add
add
add
lea
pop
mov
push
push
add
xor
dec
push
xor
add
dec
sub
add
sub
sub
ror
pop
pop
push
inc
pop
pushl
push
ror
shr
sub
pop
call
push
sub
inc
rol
pop
push
call
push
push
inc
add
push
and
add
xor
inc
not
sub
xor
pop
shl
pop
push
push
call
imul
shl
addl
cwtl
mov
fadds
xchg
pop
add
scas
mov
add
out
popl
push
add
test
jmp
add
add
out
mov
jge
fadds
add
loop
add
add
add
push
imul
xchg
lret
add
mov
fwait
xlat
scas
cmc
ja
add
add
add
or
jne
push
sub
shl
pop
call
push
add
pop
push
pushl
push
push
lea
push
push
call
clc
add
jmp
push
add
mov
jl
add
push
mov
add
mov
add
movb
cmc
jns
fidivl
xchg
stc
mov
imul
add
aam
bound
pop
call
push
push
push
xor
add
lea
sub
ror
pop
shl
pop
push
rol
dec
pop
pushl
push
push
call
push
add
mov
jecxz
mov
add
cli
cltd
pop
fiaddl
subb
mov
test
shll
data16
nop
add
rolb
mov
hlt
subl
add
lea
pop
call
push
push
dec
push
sub
add
lea
shl
shr
sub
add
lea
pop
lea
rol
pop
push
push
shr
rol
push
or
inc
add
add
xor
sub
ror
shl
pop
rol
pop
push
sub
lea
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
call
jne
in
mov
add
rcll
jb
add
add
rcrl
jecxz
add
in
add
je
lods
pushfw
add
fnstsw
push
push
add
add
out
add
jnp
mov
lea
pop
pop
push
xor
pop
dec
jne
call
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
mov
push
add
add
cltd
mov
mov
leave
loopne
movsl
add
add
mov
fsubrl
add
add
add
aad
outsl
jp
shr
jnp
mov
add
ljmp
pop
jmp
push
sub
pop
call
push
push
ror
not
not
push
push
pop
add
not
shr
sub
sub
rol
not
dec
pop
not
rol
pop
push
lea
push
push
push
lea
push
call
ja
xchg
fxtract
les
fildl
add
add
into
leave
icebp
add
fucomi
jmp
push
add
add
mov
add
mov
les
add
mov
add
faddl
add
mov
lea
pop
pushl
call
push
lea
push
lea
push
push
push
call
mov
popa
add
add
add
scas
push
add
mov
add
mov
push
sahf
cmc
xchg
add
cld
add
add
add
add
jmp
mov
lea
pop
push
push
push
push
push
lea
push
call
add
pop
out
negl
mov
jno
int3
add
repnz
out
push
jmp
adc
add
add
into
xlat
into
add
cmpsb
aam
pop
add
fmull
rclb
dec
or
mov
dec
add
add
stc
push
push
call
pop
lea
filds
roll
mov
add
add
add
jo
enter
add
clc
add
jbe
add
fs
add
test
enter
sti
leave
xorl
sti
add
rol
test
add
lahf
add
aam
add
out
add
sar
add
jne
int3
lea
pop
mov
push
ror
shl
shl
pop
lea
push
push
inc
sub
ror
push
or
inc
add
xor
sub
rol
pop
inc
pop
push
inc
add
pop
pushl
call
push
push
lea
push
push
push
push
push
push
lea
push
push
call
arpl
lods
lret
push
mov
iret
popf
add
jns
add
add
roll
rcll
add
in
push
add
in
outsl
add
in
rolb
add
sahf
filds
jae
jp
ret
add
add
in
add
addl
add
add
out
mov
pusha
sub
call
push
push
rol
push
and
add
ror
dec
dec
add
sub
sub
xor
shl
pop
rol
add
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
ret
lods
push
cwtl
stc
outsl
push
cltd
xchg
imul
add
jbe
add
add
jb
pop
add
call
add
add
add
cld
lea
pop
pushl
call
push
lea
xor
pop
call
mov
push
ror
pop
lea
push
push
push
and
add
shr
sub
rol
lea
dec
pop
xor
sub
pop
push
push
push
push
lea
push
push
call
add
bound
add
pop
add
add
add
ljmp
popa
lahf
add
iret
add
push
lahf
add
push
jp
add
mov
mov
add
add
lea
pop
pushl
push
push
call
add
stos
xchg
add
cmpsb
mov
roll
scas
add
add
stc
add
in
mov
jmp
push
add
add
add
mov
lods
jmp
add
xchg
add
call
add
push
add
jl
add
add
add
xchg
stc
int3
jp
mov
testl
jge
mov
pop
call
lea
push
shr
shl
inc
pop
push
push
push
lea
push
push
lea
push
lea
push
call
jmp
add
add
popf
add
lret
jno
add
rcr
jle
add
imul
pusha
xchg
out
test
add
add
repnz
loop
fwait
mov
lea
pop
push
push
add
sub
not
dec
pop
pushl
push
push
shl
xor
push
and
add
shr
shl
sub
ror
sub
not
pop
add
xor
add
pop
push
lea
push
push
push
call
add
add
arpl
roll
rolb
add
add
pop
js
loope
add
mov
imul
iret
add
add
movsl
call
out
les
push
shr
pop
call
push
push
sub
not
push
push
pop
add
add
sub
add
pop
sub
lea
dec
pop
push
xor
pop
pushl
call
push
push
push
push
lea
push
push
call
cmc
lahf
mov
shll
loope
add
add
mov
add
add
mov
jnp
add
rolb
add
movsb
add
lcall
leave
xchg
add
add
push
add
jne
add
sarb
lea
pop
push
push
push
lea
push
push
call
jle
add
add
add
loopne
adc
add
add
mov
add
ftst
cmpb
mov
stc
add
add
cltd
stc
aad
mov
lea
pop
call
push
push
shl
push
sub
add
ror
sub
sub
lea
shl
pop
lea
shr
lea
pop
push
push
push
push
push
push
push
push
push
push
call
pusha
leave
mov
imul
cmc
add
flds
nop
stos
mov
push
add
cmpsb
imul
out
fcomp
add
mov
loop
out
add
mov
cli
lods
stos
xchg
pop
out
lock
ja
add
xchg
add
mov
lea
mov
lea
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
call
scas
mov
fiaddl
jl
add
cli
push
mov
hlt
imul
push
imul
enter
add
jo
addb
add
xchg
fwait
add
add
int3
lea
pop
call
call
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
pop
add
add
incb
add
add
xchg
add
test
push
fcomp
mov
push
hlt
add
mov
jo
mov
lea
pop
jmp
push
not
lea
pop
pushl
mov
push
add
shl
sub
pop
jmp
push
push
shr
not
rol
push
sub
add
add
add
sub
shr
shl
pop
shl
pop
push
push
push
push
push
push
push
push
push
call
shll
push
add
mov
cmpsb
add
stos
add
lods
test
gs
clc
movsl
mov
jae
push
add
arpl
xlat
jnp
addr16
lea
pop
pushl
push
lea
push
push
push
push
call
mov
add
aad
mov
mov
jl
add
add
add
out
add
push
add
add
mov
bound
popa
mov
lea
pop
call
push
push
sub
pop
call
push
push
add
push
and
add
dec
rol
ror
add
sub
shr
lea
add
not
pop
inc
pop
push
push
push
push
push
call
loop
add
mov
loop
lods
add
data16
add
arpl
pop
filds
insb
add
add
mov
fbld
fs
mov
test
add
add
mov
adc
pushl
push
push
lea
push
push
push
push
call
add
icebp
add
add
fidivs
mov
add
enter
jno
add
in
pushf
mov
add
rcrl
add
cmpsb
popf
pop
loopne
mov
mov
out
call
push
add
fimull
mov
lea
pop
call
push
push
push
lea
push
push
lea
push
push
push
call
add
add
ficoms
mov
fists
mov
add
mov
lret
test
add
fstpl
xchg
add
add
add
add
in
add
loopne
hlt
add
add
push
pushf
add
in
push
add
stc
add
mov
movsb
push
cmpsl
arpl
lea
out
les
push
lea
push
push
push
call
add
scas
add
add
cld
mov
loopne
add
add
add
add
add
mov
jge
jne
add
xlat
add
mov
scas
cld
add
push
in
pusha
testb
xchg
jnp
add
mov
lea
pop
call
push
shr
rol
dec
pop
leave
add
push
push
push
push
push
push
call
clc
add
pop
jbe
add
add
loop
add
bound
add
icebp
add
mov
out
pop
add
addr16
pop
add
scas
mov
nop
repnz
push
add
shlb
add
add
bound
idiv
mov
lea
pop
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
add
add
test
add
out
mov
mov
scas
rolb
add
movsb
add
clc
in
out
add
add
scas
add
movsl
nop
lret
add
pop
pop
push
sub
sub
xor
pop
pop
leave
push
lea
push
push
push
push
lea
push
call
jmp
add
stos
push
mov
pop
adc
add
add
add
cmpsb
rol
push
cwtl
add
add
push
in
add
rol
mov
lea
pop
add
ret
push
push
push
push
push
lea
push
call
add
stc
push
movl
addl
notb
xchg
mov
add
add
stos
shlb
add
fcmovu
jb
add
add
popf
scas
jmp
add
add
hlt
roll
add
add
test
lcall
mov
lea
pop
leave
push
shr
xor
sub
xor
pop
ret
push
add
xor
pop
push
push
add
pop
mov
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
mov
popa
fwait
mov
push
add
add
add
add
mov
cwtl
lcall
add
jmp
insb
lret
lret
add
fwait
fs
add
int3
jmp
add
test
mov
sti
rcrb
mov
lea
pop
cmpl
jne
push
push
lea
push
lea
push
push
push
push
push
call
add
rolb
push
testb
mov
je
add
jle
mov
add
shlb
lcall
add
add
add
add
mov
xchg
add
int
lahf
add
jle
add
movb
add
add
fbld
add
add
imul
add
fsubrl
arpl
pop
mov
push
push
call
addl
divb
add
cmpsl
stc
push
movsb
add
repnz
add
add
add
loope
ror
add
insb
add
add
add
add
add
lods
add
jmp
push
ffreep
stc
add
push
add
ja
mov
add
mov
pop
add
add
mov
lea
pop
jmp
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
addl
mov
xchg
push
push
add
xchg
mov
shlb
int
add
cld
scas
jae
add
mov
add
jnp
jae
mov
push
push
std
icebp
add
add
rolb
scas
add
pop
push
cli
xchg
xchg
ret
add
add
cwtl
xchg
cmpsb
add
pop
mov
lea
pop
mov
push
ror
rol
pop
and
push
shr
lea
sub
pop
xor
push
lea
push
push
push
lea
push
call
add
jne
add
sahf
int3
pop
add
enter
imul
popf
jae
jno
movsl
stc
ret
add
stos
lods
test
add
xchg
addl
add
in
lock
mov
lea
pop
xor
push
add
pop
add
xor
push
push
push
push
call
add
mov
pop
ret
push
add
cld
jbe
mov
push
leave
mov
add
push
add
xchg
mov
mov
lock
test
mov
pop
pop
xchg
fsubp
mov
popf
mov
roll
fwait
test
imul
rol
add
mov
arpl
add
sti
mov
cld
lea
pop
dec
push
push
call
out
jp
shll
sahf
mov
add
out
out
mov
mov
push
clc
jp
add
fnsave
aam
loopne
jmp
add
mov
add
add
add
add
enter
loopne
bound
add
int3
sahf
lret
add
mov
add
mov
hlt
xchg
aam
aam
bound
pop
sub
jmp
push
not
pop
sub
push
push
push
lea
push
lea
push
push
lea
push
call
mov
add
sarl
loope
add
int3
mov
add
mov
xchg
pop
gs
sti
add
faddl
lret
add
pop
mov
stc
testb
push
shl
xchg
call
xchg
cltd
lock
lea
pop
pushl
pop
push
lea
push
push
push
push
call
add
shrb
jmp
jl
in
test
sahf
add
cwtl
add
iret
add
add
xchg
leave
mov
fstpt
jmp
push
mov
mov
add
test
cmc
add
mov
in
iret
aad
add
lcall
addr16
lea
pop
sub
push
lea
push
push
push
push
push
push
push
call
fs
add
add
mov
stos
enter
add
add
xorb
cwtl
push
add
leave
out
pusha
fldcw
xchg
xchg
mov
jns
push
push
popl
add
add
scas
call
push
lods
add
pop
add
lcall
add
fiaddl
mov
lea
pop
cmp
jne
mov
push
add
shl
xor
pop
lea
push
not
add
sub
not
pop
sub
mov
push
push
push
push
push
push
call
add
xlat
lret
jb
out
mov
in
push
add
in
pop
add
addr16
mov
add
insb
fbstp
add
xchg
cltd
leave
add
fsubrl
add
add
rcrb
add
add
lea
pop
shr
push
shl
lea
pop
add
push
push
lea
push
call
xchg
arpl
add
pop
add
pop
sti
add
mov
sti
add
addl
cltd
add
add
add
xchg
shlb
push
add
add
aad
add
scas
loope
add
add
test
add
add
sarb
add
add
lods
mov
lea
pop
sub
push
ror
rol
dec
pop
pushl
push
push
push
push
push
push
lea
push
call
add
add
lds
sahf
add
out
popa
add
add
testl
movsl
add
add
add
lea
xchg
stc
pop
out
mov
jecxz
fldl
enter
add
addr16
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
int3
outsl
pop
add
push
mov
pop
xchg
xchg
shrl
aam
add
mov
jb
cwtl
int
add
in
imul
add
nop
xlat
xchg
add
aad
loop
imul
add
mov
lret
iret
add
test
lock
scas
hlt
add
sub
jmp
push
fdivr
adc
ljmp
lea
push
push
call
add
add
xor
test
jp
ljmp
cmpsb
into
mov
add
add
loope
xlat
imul
xchg
add
add
add
subl
test
lahf
mov
add
pop
pop
imul
add
mov
lea
pop
and
push
push
call
jo
add
mov
push
jbe
cwtl
add
outsl
pop
movsl
mov
mov
std
add
mov
add
enter
xchg
add
mov
mov
xchg
out
popf
jl
add
jecxz
mov
int
jecxz
add
lcall
out
add
mov
lea
pop
sub
cmp
jne
push
rol
sub
xor
pop
leave
push
lea
push
lea
push
call
test
push
pop
add
add
add
mov
mov
push
add
add
ret
jae
ljmp
xchg
add
out
add
add
add
outsl
les
xchg
addb
add
jo
out
add
les
add
push
lea
push
push
push
push
lea
push
push
push
call
mov
lret
add
jne
ror
add
jp
push
add
in
fwait
rcr
xchg
add
cmpb
add
add
add
scas
out
popa
add
jnp
add
lods
scas
add
testb
add
add
fs
test
add
pop
push
mov
push
push
push
call
add
js
push
mov
in
mov
in
out
add
imul
fildl
stc
add
sarb
add
fadds
in
jp
in
add
js
xchg
add
cltd
mov
add
add
add
mov
push
les
add
add
mov
lea
pop
add
push
xor
shl
pop
push
push
push
sub
lea
sub
pop
push
push
push
shr
shr
not
pop
push
push
lea
shl
ror
pop
mov
push
push
push
push
push
lea
push
call
jb
add
stc
add
add
mov
mov
sahf
int3
cli
add
out
roll
lea
andl
stos
pop
lret
add
jb
popf
add
test
add
pop
push
mov
in
push
out
jne
push
nop
xlat
add
add
lock
mov
jns
popf
add
jp
mov
push
mov
lea
pop
lea
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
movsb
mov
mov
jno
add
cmpsb
lea
add
xchg
cld
jl
add
popa
leave
lahf
add
add
push
xchg
icebp
add
pop
mov
fildl
movb
cld
add
add
pop
lea
push
add
movsb
popa
add
loope
add
scas
add
add
repnz
clc
push
rolb
mov
lea
pop
sub
push
push
push
push
push
push
push
call
icebp
mov
mov
outsl
add
cli
fwait
add
icebp
add
push
add
mov
pop
mov
xchg
pop
add
divl
bound
add
sti
roll
xlat
mov
add
cli
in
jo
fiadds
cli
add
mov
add
imul
je
aam
int3
lea
pop
mov
push
push
call
mov
mov
cltd
out
pop
add
lret
mov
jecxz
add
lods
push
pop
pop
mov
mov
lea
add
add
mov
mov
add
add
push
add
loopne
add
pop
add
or
ljmp
pop
add
add
add
out
roll
cltd
mov
jb
add
add
sahf
add
lret
fidivrs
int3
add
push
add
add
add
add
test
fldcw
stc
add
add
mov
add
scas
add
jns
pop
lock
popa
or
fwait
addb
add
pop
or
lret
mov
push
ror
dec
pop
add
push
lea
push
lea
push
push
call
int
sahf
add
jp
jmp
lds
add
xchg
ja
add
subb
mov
shlb
addr16
add
movsb
mov
push
faddp
mov
data16
add
add
add
pop
xor
mov
push
sub
add
ror
pop
and
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
sahf
add
add
jl
addr16
jecxz
iret
lock
test
lret
notl
fildl
mov
mov
or
add
mov
addr16
pop
div
add
add
add
mov
fmull
rolb
xchg
dec
pop
pop
rol
push
lea
push
push
push
push
lea
push
lea
push
push
call
call
add
rolb
push
jmp
add
add
mov
xchg
add
add
cmc
xchg
push
add
rclb
outsl
add
push
aad
aam
add
mov
jmp
lods
addb
mov
add
add
out
add
movsl
mov
add
xchg
xchg
mov
add
jne
jl
add
pop
xor
push
add
pop
inc
push
not
ror
pop
cmpb
jne
add
push
push
push
push
call
add
ljmp
clc
hlt
mov
jmp
add
lds
lods
int3
push
pop
icebp
add
jge
shrb
cli
add
fiadds
mov
add
adcb
add
fcoms
jo
add
jnp
add
add
movl
add
add
add
xchg
in
jb
mov
mov
lea
pop
cmp
je
push
inc
pop
add
push
ror
not
shl
ror
pop
cmpl
jne
xor
push
push
call
add
add
add
xchg
add
jge
add
push
add
add
cwtl
mov
add
sarl
fcoml
bound
mov
mov
push
add
lea
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
jno
gs
fildl
mov
sahf
add
add
cmpsl
push
add
push
mov
add
addl
test
mov
rclb
int3
mov
jp
andl
lods
mov
je
add
pop
xorl
lods
add
add
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
int3
jmp
hlt
test
cmpsb
jp
add
add
jnp
add
jecxz
mov
in
add
stc
mov
mov
add
movl
cli
add
movsb
jmp
mov
add
fs
imul
faddl
lea
pop
pop
push
shr
pop
pop
push
sub
add
add
pop
pop
push
shr
dec
pop
leave
push
lea
push
push
push
push
lea
push
lea
push
call
add
lret
add
outsl
call
add
jae
add
add
cmpsb
xchg
imul
xchg
stos
popa
mov
jbe
subl
cmc
add
add
add
stos
aam
lock
add
scas
rcrl
out
fneni(8087
add
jge
repnz
rcl
fmull
or
push
add
lea
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
pushf
lea
add
jl
push
pop
data16
in
mov
in
add
xchg
push
add
mov
cwtl
repnz
mov
test
add
div
push
pushf
fiadds
mov
in
add
addl
add
add
add
lret
jo
movsb
xchg
mov
data16
add
push
lea
shr
ror
rol
pop
push
push
xor
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
enter
add
jne
rolb
fnstsw
jno
mov
add
cld
add
aam
leave
add
add
mov
add
jge
push
cltd
add
add
cwtl
jl
stos
popf
sahf
add
outsl
add
mov
add
pop
add
mov
test
add
lods
add
mov
lea
pop
add
xor
push
sub
lea
pop
add
testw
push
lea
push
lea
push
push
push
lea
push
push
push
call
push
roll
repnz
add
xchg
xchg
add
add
movsl
add
add
roll
add
mov
aam
pop
push
mov
xchg
out
mov
in
add
xchg
add
add
repnz
leave
pop
lahf
les
add
mov
mov
jb
add
add
mov
fiaddl
add
add
add
and
pop
push
sub
ror
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
add
add
shl
lahf
jnp
movsb
cwtl
push
insb
add
add
nop
mov
arpl
out
add
pop
add
mov
fisttpl
out
add
sahf
xchg
add
ja
add
ljmp
add
addr16
add
pop
shl
mov
stos
add
add
popa
sub
call
push
lea
push
push
push
push
push
lea
push
push
call
add
add
test
mov
out
sti
lods
add
mov
ljmp
sahf
out
add
jne
add
jae
jno
lock
rcrb
mov
mov
lea
pop
xor
pop
push
lea
push
push
push
push
push
push
push
push
push
call
fisubl
mov
push
add
push
add
add
add
ja
bound
add
mov
add
jnp
mov
loopne
lea
add
jecxz
fnstcw
add
add
bound
add
clc
add
test
mov
lea
pop
pop
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
les
push
add
add
add
add
imul
add
mov
push
pop
add
pusha
add
add
add
stos
ja
add
mov
loop
sahf
jp
add
add
add
test
add
icebp
data16
into
add
xchg
mov
into
in
mov
mov
add
mov
lea
pop
pop
pop
push
ror
xor
shl
pop
pop
leave
push
lea
pop
ret
push
push
lea
push
push
push
push
lea
push
call
cld
push
lock
add
add
lea
sti
add
int
mov
xchg
jp
add
leave
lahf
mov
in
lock
mov
add
add
pusha
add
int3
lea
pop
push
mov
push
push
push
push
lea
push
push
push
call
lahf
xchg
cld
jb
mov
add
add
add
cmpb
xlat
xchg
add
push
test
out
xchg
jno
outsl
je
push
out
in
cld
lea
pop
add
push
lea
push
lea
push
lea
push
call
les
add
imul
enter
add
mov
ror
out
roll
mov
jl
movsl
sti
add
add
jl
insb
add
add
scas
lahf
leave
add
add
xchg
jno
jo
add
add
pop
add
rolb
mov
movsb
in
stos
push
mov
add
xchg
add
mov
adc
push
push
push
call
int
push
mov
xchg
add
repnz
mov
rcrl
add
add
leave
shl
mov
mov
add
add
out
jecxz
sahf
jecxz
fistps
mov
add
stc
jne
les
out
out
pop
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
call
std
add
std
mov
iret
rolb
cld
out
add
mov
xchg
add
in
add
testb
sar
test
lcall
lods
test
icebp
cmpsl
add
xchg
add
negb
mov
lea
pop
push
push
push
push
push
call
mov
faddp
mov
arpl
imul
add
mov
add
add
push
mov
add
jo
fs
add
in
add
iret
jp
add
out
add
mov
mov
lea
pop
push
push
add
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
clc
add
stc
mov
add
js
popf
add
jb
add
add
mov
test
ficoml
mov
pusha
and
pop
push
push
push
push
call
andb
add
add
fsub
xchg
lahf
fwait
add
mov
loopne
add
fs
out
js
push
out
mov
add
in
add
lea
pop
lea
push
push
push
push
call
add
mov
add
jno
out
add
fmull
clc
jns
stc
addb
add
lds
add
add
rolb
add
into
jl
mov
add
add
add
cmpsb
jns
pop
hlt
xchg
xchg
mov
add
pop
add
add
pop
add
jge
stos
aam
add
xchg
push
add
int3
fidivrs
ret
mov
lea
pop
sub
mov
push
not
pop
shr
push
lea
pop
add
push
push
call
les
add
mov
in
add
pop
icebp
push
imul
into
mov
rolb
add
add
add
cmp
shl
push
movb
mov
lea
pop
mov
push
dec
pop
add
pushl
push
sub
inc
pop
popl
mov
push
ror
ror
pop
add
xor
push
push
push
push
push
push
push
lea
push
call
movsb
add
js
pop
jl
add
mov
iret
lods
shrl
movl
push
lea
add
mov
add
add
add
add
add
faddl
lret
mov
mov
testb
add
mov
lea
pop
lea
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
in
add
icebp
add
pop
jl
mov
push
add
rolb
popf
add
add
add
push
fldl
in
add
add
rolb
data16
add
add
xchg
add
add
add
iret
out
add
out
jl
xchg
add
add
pop
mov
push
add
shr
pop
add
xor
push
push
push
push
push
call
lahf
repnz
je
add
xlat
add
ja
jecxz
mov
stc
add
pop
testb
test
add
add
add
pop
movb
subl
add
imul
popf
add
add
add
jecxz
add
add
fsubs
add
add
pop
rol
push
shl
inc
sub
lea
pop
nop
push
add
shl
add
pop
nop
xor
push
shl
dec
ror
pop
nop
push
rol
rol
pop
nop
push
shl
not
pop
inc
push
not
shl
pop
nop
push
sub
add
sub
pop
nop
cmpb
jne
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
gs
add
add
movsl
imul
roll
mov
xlat
outsl
fs
add
lahf
loope
mov
add
mov
andb
out
lret
add
pop
clc
ljmp
pop
je
mov
jge
xchg
add
cld
lret
ret
xchg
mov
aad
test
fmull
pop
add
push
push
push
lea
push
call
add
insb
add
add
add
mov
out
add
jbe
mov
mov
add
popf
add
cmpsb
mov
add
cli
add
cmpsb
fistpl
add
clc
pop
add
add
jne
add
fidivl
add
jl
int
add
add
add
mov
jbe
push
fnsave
add
fimuls
pop
nop
push
lea
push
push
lea
push
call
clc
mov
mov
xchg
loop
pop
add
add
add
add
add
push
test
add
test
add
stos
add
add
fcomip
add
add
jmp
add
mov
popf
mov
add
pop
add
mov
add
add
rolb
roll
add
add
je
aam
bound
pop
nop
push
ror
sub
not
shl
pop
cmp
je
push
push
push
lea
push
lea
push
push
lea
push
call
add
sarb
add
insb
out
mov
jle
add
mov
out
mov
incb
mov
lcall
jb
int
add
add
shlb
add
movl
pop
add
pop
nop
push
push
push
call
add
push
add
ret
loopne
add
fidivl
add
add
outsl
mov
fmulp
rorl
mov
cld
scas
add
add
add
into
lcall
push
jnp
add
mov
pop
leave
add
mov
mov
lea
pop
nop
push
push
push
lea
push
lea
push
call
mov
add
movsl
roll
pop
je
mov
mov
pop
xchg
div
imul
mov
nop
push
push
out
push
add
add
jbe
lds
fwait
icebp
leave
shlb
scas
xchg
add
add
int3
lea
pop
inc
push
ror
xor
pop
nop
push
push
lea
push
push
push
push
push
call
xchg
add
add
add
jle
mov
add
pop
xchg
push
stos
pop
add
filds
add
add
flds
add
cmpsl
xchg
add
push
jne
add
mov
addl
add
cld
lea
pop
nop
push
add
lea
pop
cmp
jb
xor
push
push
lea
push
push
lea
push
push
push
call
add
icebp
in
add
add
mov
add
add
add
stos
jmp
add
int
add
xchg
iret
add
add
add
shl
add
add
add
sti
add
add
test
add
add
into
add
xchg
mov
mov
popf
mov
pusha
fistpl
movsl
cwtl
add
into
jge
lds
data16
jmp
mov
push
add
shr
pop
add
push
push
call
into
add
add
add
add
add
xchg
lahf
add
add
popl
push
add
add
pusha
icebp
mov
jae
loope
add
mov
add
ljmp
int
pop
add
lock
hlt
into
add
pop
movzwl
push
lea
push
push
push
call
mov
jo
test
jo
xchg
add
add
rolb
add
xchg
add
lea
push
add
add
jbe
addr16
imul
mov
add
push
add
out
movsl
nop
mov
add
mov
mov
push
out
add
add
add
add
add
add
les
inc
sbb
sub
pop
add
mov
push
push
call
xchg
pop
stos
add
pop
fsts
jne
lcall
add
jno
add
xchg
jae
imul
aam
jns
add
popa
add
cmc
lods
aam
mov
add
popa
icebp
out
add
add
lods
add
add
pop
pop
jge
add
cmpsb
add
mov
lea
pop
xor
xor
push
not
pop
shl
push
sub
not
sub
pop
xor
shl
push
lea
push
push
push
lea
push
call
add
mov
add
mov
add
add
xchg
jl
clc
add
out
add
movsl
push
mov
add
pop
add
popf
add
push
add
push
aad
test
flds
add
mov
add
loopne
mov
add
roll
mov
mov
jmp
add
xchg
bound
cld
add
jnp
fildl
leave
add
add
pop
xor
push
sub
shr
xor
pop
shl
push
lea
push
lea
push
call
xorl
std
mov
add
nop
mov
nop
add
jo
loop
add
add
enter
loope
loope
pop
add
fcmovne
scas
addl
mov
mov
mov
ret
add
lock
add
add
div
ffreep
lcall
lahf
add
mov
or
xor
push
add
inc
not
sub
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
xchg
jae
add
xchg
push
add
out
add
jmp
add
add
add
mov
add
pop
mov
add
pop
xchg
jl
add
push
enter
nop
add
add
add
jo
add
push
push
ror
mov
add
add
in
jno
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
call
add
cld
add
add
imul
filds
mov
jp
imul
add
jb
xchg
lds
add
stos
push
fwait
test
push
add
mov
nop
add
mov
lea
pop
pop
pop
push
lea
push
push
push
push
lea
push
call
add
repnz
je
add
add
stos
popa
xchg
mov
jb
add
add
add
in
stos
sti
imul
mov
out
in
pop
xchg
add
add
sarb
xchg
mov
add
lods
add
aad
loope
add
mov
lea
pop
pop
push
lea
pop
pop
leave
push
push
lea
push
push
push
call
add
add
add
add
fwait
add
mov
pop
add
add
icebp
lea
std
mov
fwait
stos
add
jns
add
add
jno
lret
enter
add
add
movsl
negl
add
add
int
add
test
add
mov
lea
pop
ret
push
push
add
shr
add
pop
mov
push
add
shl
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
jbe
arpl
add
mov
add
add
lret
sti
xlat
jno
lea
pop
add
pop
mov
in
add
push
add
stc
xchg
sarb
add
iret
mov
add
add
add
fiaddl
add
add
mov
jb
add
test
lret
add
rolb
add
add
add
cltd
add
cmpsl
mov
lea
pop
push
push
shr
pop
push
push
push
push
push
lea
push
push
push
call
add
jecxz
add
add
add
imul
mov
jb
fiadds
mov
xchg
add
fcompl
add
add
scas
add
mov
add
add
fcmovbe
add
add
mov
push
pop
std
lret
iret
stos
arpl
add
push
jb
jmp
loop
negl
add
add
add
mov
lea
pop
push
push
push
lea
push
push
call
add
fcoms
mov
jne
iret
sbbb
push
mov
add
repnz
stos
flds
jbe
add
int3
push
in
add
xchg
add
iret
jl
mov
movsb
mov
add
ficoms
mov
loop
fistpll
add
pop
add
popa
test
stc
mov
lea
pop
mov
push
push
push
push
push
call
pop
ja
add
mov
jae
jne
add
int3
andb
push
mov
fadds
add
mov
mov
scas
shrl
push
idiv
mov
pop
push
add
aad
xchg
into
add
add
pop
mov
push
push
push
push
push
lea
push
lea
push
push
call
jnp
out
cld
mov
cld
ffreep
add
add
add
call
test
loopne
add
jp
mov
push
fbstp
popa
add
data16
jge
push
rol
sub
sub
pop
test
je
push
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
icebp
pop
add
mov
cwtl
push
fdivrl
jp
jbe
stos
mov
add
movb
add
add
pusha
pop
jl
mov
add
enter
fdivrs
add
add
push
jecxz
lea
sti
mull
lock
xchg
add
add
add
add
add
xchg
fadds
add
ja
mov
lea
pop
test
je
push
not
pop
mov
mov
push
push
push
lea
push
push
call
roll
add
mov
add
mov
add
lcall
add
add
test
rcrl
push
pop
add
add
fildl
fucomp
outsl
cmpsb
mov
cmp
add
cltd
lock
sti
mov
ljmp
loop
test
lea
pop
mov
push
rol
pop
inc
push
push
push
push
push
push
push
push
push
push
call
xchg
cmpsl
add
mov
roll
mov
mov
add
add
add
push
rolb
mov
xchg
jle
add
addb
data16
add
mov
lea
pop
cmp
je
push
sub
shl
ror
pop
test
je
mov
push
xor
pop
inc
cmp
je
push
push
call
mov
add
js
add
cltd
xchg
pop
mov
jae
addr16
faddl
gs
add
add
add
test
jns
add
xchg
out
add
add
push
jns
add
scas
ja
hlt
lea
pop
test
jne
xor
push
push
lea
push
push
call
movsb
add
lock
mov
addb
cmpsb
xchg
in
mov
bnd
mov
mov
jo
add
int3
test
add
in
push
jns
xchg
out
mov
fiadds
pop
stos
jge
imul
lds
jp
mov
jge
add
leave
fildl
add
pop
pop
pop
push
dec
sub
pop
pop
push
shl
sub
rol
shr
pop
pop
leave
push
push
push
push
push
push
lea
push
push
push
lea
push
call
jp
add
jne
add
add
add
add
add
addl
push
add
les
fprem1
add
fildl
lcall
xlat
cmpsb
pop
pop
add
add
pop
les
fcomp
jge
aam
bound
pop
ret
push
push
push
push
push
push
push
push
lea
push
call
add
add
lcall
add
add
mov
lea
add
push
cwtl
add
addb
xchg
add
clc
mov
lea
pop
mov
push
xor
pop
inc
push
lea
push
call
push
popf
lahf
add
add
push
fcmovnu
sahf
add
cmpsl
test
push
add
add
add
fwait
test
sbbb
lods
lock
mov
fwait
pushf
add
add
add
in
iret
mov
add
add
sarl
rcr
in
int
add
add
flds
push
fldl
mov
pop
add
lea
add
mov
jmp
arpl
mov
or
lock
lea
push
push
push
push
call
lods
add
add
add
add
xchg
add
popf
test
add
mov
add
add
outsl
add
fwait
add
roll
in
jmp
add
jecxz
cmpsl
add
add
xchg
cmpsl
bound
lods
mov
lea
pop
mov
push
add
sub
pop
test
je
push
inc
shr
pop
mov
push
ror
pop
add
push
sub
rol
pop
cmp
jne
push
pop
mov
push
add
xor
shr
pop
test
je
mov
push
lea
push
push
lea
push
push
push
push
push
push
push
call
cwtl
add
add
add
add
jl
lret
loop
int3
test
popl
mov
out
add
pop
pop
xchg
add
in
test
out
add
mov
mov
xchg
out
mov
hlt
test
add
add
mov
out
addb
add
mov
xor
popa
sub
roll
push
push
push
push
push
lea
push
push
call
fadds
mov
add
hlt
lcall
jl
xlat
jno
add
arpl
add
add
add
aad
pop
add
outsl
add
stc
jge
insb
repnz
ret
add
add
test
in
add
mov
call
jnp
mov
hlt
lea
pop
cmp
je
push
lea
xor
pop
jmp
push
push
call
add
add
loopne
stos
pushf
push
popf
cmc
add
mov
test
xchg
cmpsb
add
add
add
jl
data16
jbe
test
stos
cld
out
loope
in
mov
mov
add
rorl
int
ja
mov
mov
lea
pop
xor
push
lea
inc
pop
pop
push
push
lea
push
push
call
add
out
mov
add
test
lds
mov
add
mov
add
add
ret
add
popl
mov
add
jge
xchg
add
xlat
jo
mov
out
iret
add
add
mov
lea
pop
pop
push
lea
push
push
push
push
call
add
add
add
pop
add
xchg
jns
add
fldl
add
xchg
add
add
lret
mov
jmp
push
movsl
jo
pop
ret
mov
subb
add
popa
cltd
add
add
shll
pop
movb
pop
add
int
mov
enter
fmull
push
lea
push
call
enter
add
out
mov
add
loopne
mov
pop
add
add
mov
call
add
add
mov
lcall
mov
cmc
add
mov
add
leave
iret
int
mov
stos
stos
hlt
fldpi
add
add
movb
arpl
pop
pop
push
push
lea
push
push
push
push
call
js
add
outsl
add
jp
push
add
pop
mov
add
in
add
jnp
mov
pushf
test
je
testb
cld
cmpl
movsl
add
add
add
lea
pop
leave
push
push
call
movsl
cltd
sti
add
mov
js
test
add
icebp
data16
lock
mov
sbbl
cli
fldl
add
add
mov
push
repnz
mov
add
pop
imul
insb
popf
add
pusha
xchg
add
aad
add
out
push
mov
ljmp
fldenv
lahf
mov
lea
pop
ret
lea
push
push
push
lea
push
call
pop
mov
mov
aam
test
cmc
add
jne
ja
loope
mov
imul
stos
jo
bound
fsincos
add
mov
movsl
call
push
lcall
push
push
pop
lods
add
add
movl
mov
enter
sahf
mov
mov
lea
pop
pop
pop
push
push
push
push
push
push
push
push
call
add
aad
adcb
out
add
add
mov
jns
xchg
add
mov
add
mov
test
add
mov
std
std
ret
lea
pop
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
imul
jb
add
jne
add
jne
add
add
mov
add
lds
add
out
mov
add
call
add
mov
add
shlb
jnp
cmc
test
addb
mov
fildl
add
jb
push
fldl
iret
stos
mov
lea
pop
leave
push
pop
ret
push
lea
push
lea
push
push
push
call
incb
add
js
pop
jbe
push
pusha
xchg
mov
add
add
fsubr
jmp
cmpl
lods
outsl
add
imul
in
push
ljmp
add
add
pop
in
mov
mov
lea
pop
mov
push
add
lea
pop
pop
pop
push
lea
push
push
push
push
push
lea
push
call
jae
add
mov
xchg
xchg
lcall
xchg
xchg
addb
out
pop
imul
pop
push
add
add
add
rolb
add
mov
add
add
mov
add
movsl
int3
add
add
pop
add
add
stc
clc
cmc
add
into
push
fcomp
add
add
add
hlt
lea
pop
pop
push
push
push
push
push
push
push
push
call
add
pop
add
add
add
fnstenv
jmp
lcall
add
popf
add
xchg
xor
add
int3
add
ja
rorl
ljmp
add
add
fadds
iret
mov
add
jp
fbstp
mov
and
push
inc
pop
leave
push
rol
pop
ret
cli
js
jb
test
jb
push
pop
jb
mov
pop
jb
push
pop
jb
pop
pop
jb
hlt
pop
jb
xchg
pop
jb
imul
pop
jb
add
add
cmp
mov
adc
cltd
fnsave
out
jo
int
movb
scas
add
mov
adc
mov
js
mull
add
xchg
shrb
or
test
scas
jmp
dec
hlt
mov
cwtl
rclb
sbb
in
enter
gs
mov
push
cmc
mov
pusha
jae
jg
xchg
lret
sub
lock
mov
shrl
dec
cmp
nop
xor
shlb
inc
and
add
les
push
in
sub
ss
mov
dec
faddl
lret
movsl
push
int
mov
cs
mov
test
rorl
pop
add
dec
or
lock
jns
xchg
negl
jmp
outsb
jg
dec
pop
dec
mov
sub
jno
jae
lds
jle
adc
mov
push
xor
dec
test
mov
push
push
and
popa
xchg
movsb
jl
leave
subl
int
pop
xlat
in
mov
in
mov
xor
dec
mov
push
hlt
push
lahf
sbb
pop
jb
mov
test
or
push
subl
out
notl
mov
cmpsl
dec
inc
mov
lock
jb
stos
jno
pop
repz
aas
cmp
stos
sbb
pop
sbb
xor
add
movsl
gs
inc
push
enter
test
fwait
or
nop
and
sub
leave
jmp
dec
cltd
or
xor
int3
nop
add
inc
sbb
and
fs
pop
jge
aas
xor
pop
mov
iret
xor
push
out
jo
jne
ret
adc
into
or
outsb
cmp
int3
outsb
jb
js
adc
outsb
int
cmc
inc
ja
push
push
pop
cmp
xchg
mov
or
clc
scas
cli
cmp
and
or
or
fsub
call
xchg
int3
inc
adc
test
mov
movl
cmc
lods
cltd
shr
jns
jbe
fmull
sub
loop
gs
out
scas
jnp
sti
and
adc
fldcw
xchg
inc
inc
loope
mov
test
xor
sub
rol
cmp
addr16
int3
call
aas
lock
lret
pop
fcmovnbe
jmp
jo
push
sbb
inc
insl
popa
stc
les
outsl
and
scas
aad
sahf
push
jae
cmpsl
jne
and
ret
inc
mov
dec
add
dec
fbld
jle
adc
incb
sti
shrb
movsb
xchg
cs
add
out
cmp
cmp
sub
ss
aad
repnz
lahf
lods
divb
dec
jne
cwtl
ljmp
or
inc
test
dec
push
shlb
fistpl
add
add
or
in
out
mov
ss
sbb
in
push
add
lods
sbb
sbb
mov
and
shlb
pop
in
arpl
pop
push
mov
inc
xchg
loope
add
aad
adc
daa
aaa
hlt
pop
mov
xchg
xor
jle
xchg
test
add
ja
cmp
or
mov
cli
xor
inc
test
aaa
or
lcall
cmc
add
xchg
test
insb
inc
fsubrl
inc
bound
xor
in
or
cwtl
enter
test
mov
jne
subl
sbb
sbb
push
shll
mov
or
ja
inc
out
push
out
loope
mov
mov
scas
mov
push
push
push
xchg
fsubrs
jae
add
data16
je
ret
shrl
into
adc
add
push
test
pop
jbe
dec
repnz
pop
mov
out
and
xor
pop
sub
jno
pop
jo
inc
dec
jne
pop
mov
fwait
scas
mov
mov
xchg
int
xchg
push
mov
cmpsb
movsb
pop
aam
bound
ja
cmp
cmp
jbe
test
push
repnz
sub
push
jbe
pop
movsl
jb
sbb
dec
call
lret
shlw
popf
pop
ret
xor
rcll
fadds
inc
push
jmp
cmp
fwait
add
jb
xor
adc
or
sbb
xor
cmc
out
dec
sbb
out
inc
mov
cmp
xor
or
movsb
sub
or
lret
das
sbb
sub
lea
mov
iret
push
inc
and
pop
mov
jnp
rcrl
cmp
adc
lcall
mov
cmc
lret
fildll
test
xor
sbb
xor
cli
xchg
jecxz
mov
jge
and
repnz
ret
stos
cli
loopne
sbb
in
ret
pop
inc
sub
mov
out
xchg
leave
xchg
push
push
sbb
pop
andb
add
das
stos
xor
jg
dec
stos
repnz
adc
sbb
xchg
push
mov
cmp
je
arpl
pop
xor
jns
jle
jp
ljmp
and
rclb
pop
push
push
xor
push
leave
mov
test
push
dec
mov
cmp
xor
xchg
cmpsb
es
rcrb
stc
imul
xor
ss
aad
sbb
jbe
pop
movsl
adcb
imul
ljmp
loopne
nop
cs
std
lcall
cmpsb
dec
xor
imul
test
xor
mov
inc
aaa
add
jno
and
fisttps
dec
and
lods
lock
add
sti
sub
das
pushf
add
push
data16
mov
or
inc
xlat
fs
xor
ret
lods
xchg
out
cmp
mov
xchg
dec
mov
push
lds
les
outsb
jl
jge
inc
lcall
sahf
mov
lret
popa
dec
outsb
inc
jno
notb
xor
jl
add
mov
adc
sub
fnstsw
ja
loop
cmpsl
nop
mov
pop
lock
mov
mov
in
decl
mov
cli
xchg
xchg
js
das
out
lret
push
adc
cld
inc
mov
mov
inc
aaa
lods
ss
lret
xchg
pop
push
mov
test
or
jmp
inc
jnp
mov
imul
jge
add
cmp
bound
xchg
mov
fnstsw
jle
je
jb
pop
jbe
std
dec
pop
ret
jle
or
jno
sub
xchg
push
lret
sub
pusha
inc
rcl
scas
into
mov
cmp
mov
push
out
mov
or
pop
addr16
and
fidivrl
cli
cwtl
les
scas
mov
push
jg
jo
jns
mov
fstl
mov
adc
outsl
dec
in
cltd
stc
in
add
sbb
pusha
repnz
push
stos
xchg
dec
jge
jmp
repz
cmp
pop
pop
jle
dec
dec
stc
or
pop
add
sub
mov
or
push
je
mov
jns
adc
pop
fnstsw
repz
and
imul
in
xchg
enter
add
lock
subl
lahf
std
enter
mov
inc
mov
mov
push
sub
pop
int3
dec
or
mov
std
jecxz
insb
ficomps
pop
imul
pop
mov
dec
inc
jne
push
add
xor
inc
cmp
orb
cltd
xchg
je
push
addr16
loop
dec
or
fcmove
mov
ja
addr16
mov
xchg
mov
loopne
pushw
push
jge
leave
sbb
or
movsl
test
insb
cmp
mov
cmc
xchg
call
lods
xor
in
xor
jne
push
mov
pushf
xor
loopne
and
pop
sarl
popf
outsl
cmp
je
and
test
jecxz
inc
cwtl
mov
adc
ja
sbb
mov
ds
jle
sub
iret
or
aam
push
jno
pop
jae
stos
daa
mov
das
pop
sub
sbb
mov
xchg
and
out
and
mov
les
dec
dec
ret
push
cli
out
dec
imul
std
call
dec
mov
sub
cmp
movsb
aam
xor
jo
aad
cs
pop
adc
xor
inc
int3
incl
mov
outsl
scas
fldl2t
aam
xchg
gs
imul
stc
sbb
mov
cmp
and
sub
and
lods
xor
sub
pop
call
pushf
andl
dec
adc
mov
dec
clc
push
iret
pop
and
pop
sub
pop
fcoms
xor
pop
fcoms
fistpll
and
xor
xlat
jbe
and
jno
scas
shll
loope
sub
sbb
xchg
fstpl
in
mov
add
orl
je
sub
adc
stos
jle
sbb
adc
add
out
or
mov
fnstcw
aam
in
es
and
rcl
mov
push
mov
call
clc
push
mov
jle
inc
hlt
push
cmp
test
lea
mov
adcl
dec
int
shrb
mov
mov
add
pop
jmp
out
adc
adc
cltd
clc
jge
dec
inc
or
mov
jmp
test
sbb
sub
sub
adc
in
cmp
adcb
add
lea
xchg
jmp
rcl
jmp
outsb
bswap
xor
dec
cmp
fcomip
roll
jle
ror
jno
and
adc
dec
mov
popf
jae
or
ret
pop
mov
daa
stc
sbb
pop
cwtl
fmull
daa
mov
adcl
ds
dec
mov
cmpsb
pop
xor
in
jae
inc
ljmp
iret
mov
sub
pushf
lods
loopne
mov
xor
cmc
inc
insl
xchg
xor
scas
jb
or
adc
out
and
insl
adc
aad
pop
ret
sbb
push
in
cmp
stos
hlt
dec
insl
mov
orb
adc
out
mov
fwait
add
jne
in
xchg
rclb
mov
or
movsl
aas
jge
loop
xor
fcomps
or
jmp
lock
sbb
dec
pusha
push
dec
idiv
fsubl
int
pop
xor
arpl
aaa
add
sbbb
fstpl
mov
aam
add
loop
dec
add
xor
jle
adc
loopne
xor
sub
stc
leave
fs
inc
xchg
decl
cwtl
inc
pop
aas
add
std
pop
pop
inc
sub
aad
ret
add
xor
pop
sbb
xor
jo
dec
xor
inc
ljmp
adc
push
jmp
dec
wrmsr
jmp
jo
das
xor
add
and
fsts
fnsave
cmpsb
jg
cmpsl
xchg
cmpsb
cmpl
xlat
out
adc
jp
push
lds
enter
push
daa
std
inc
mov
xor
push
ficompl
or
roll
cltd
je
icebp
sbb
xchg
lods
dec
call
sarb
xchg
ja
inc
negb
jl
mov
push
push
into
mov
movsl
lea
hlt
pop
push
inc
dec
or
test
rcll
push
imul
xchg
and
jl
xor
in
sub
sbb
push
test
outsb
lds
adc
fisttps
fwait
test
in
jl
mov
stos
aam
out
fstl
mov
pop
xorb
xchg
in
ljmp
push
call
ret
cmp
jnp
mov
add
jle
sti
pop
test
cmpsl
iret
ljmp
mov
and
addr16
and
adc
ja
cmc
push
daa
and
inc
or
or
out
sbb
xchg
push
movsl
call
xchg
jecxz
xchg
js
sahf
call
xchg
lret
jmp
mov
test
fstps
cmp
xor
xorb
clc
ds
mov
dec
cmp
inc
mov
jl
movsl
lods
loop
jge
push
xor
dec
jns
xchg
cli
mov
out
mov
mov
xchg
ss
andb
mov
xchg
sbb
shlb
or
mov
repnz
push
ljmp
sbb
xchg
push
xor
daa
or
mov
cmp
inc
mov
outsl
sahf
dec
lds
das
fisttpll
xlat
int
ljmp
nop
pop
or
dec
cs
mov
inc
dec
rcrl
js
mov
push
repnz
popf
push
lcall
mov
xor
mov
cmpsl
ja
pop
fwait
inc
sbb
addl
xchg
test
mov
popf
or
rclb
xchg
int
ja
popa
jmp
cli
in
cmpsb
and
mov
mov
mov
imul
xchg
lods
xchg
ljmp
mov
mov
mov
adc
int3
pop
repnz
inc
mov
jmp
cmpsl
pusha
mov
iret
jecxz
mov
mov
push
inc
dec
mov
pop
add
cmp
mov
jne
xchg
jne
adc
xor
stos
mov
push
push
fwait
sbb
int3
sub
push
jmp
mov
cli
pop
aaa
ret
xchg
add
cltd
dec
xchg
or
test
leave
dec
adc
xchg
mov
and
dec
jle
leave
ret
pop
add
xorb
clc
push
lds
outsl
aaa
hlt
jb
mov
mov
mov
into
adc
jns
test
sub
ds
sti
mov
dec
scas
lods
cmp
aam
repnz
mov
aaa
pusha
jae
pop
andl
add
cmp
das
inc
cmc
aaa
leave
inc
mov
testl
dec
sbbl
push
std
iret
aaa
shrb
cmp
enter
xorb
cmp
sub
adc
loop
testb
ja
sub
sub
inc
inc
mov
sbb
orb
outsl
iret
adc
mov
les
movsl
leave
jns
adcb
lret
loope
es
cmp
push
jl
mov
aas
pop
pop
int
lret
imul
xchg
cltd
movsb
or
adc
xor
pusha
sarl
jb
mov
mov
adc
cmc
push
scas
mov
insl
mov
push
mov
dec
repnz
div
lods
ljmp
sub
xchg
jecxz
ds
jp
push
mov
testb
inc
mov
outsb
push
jp
mov
cmp
leave
mov
cmp
cs
jns
test
xor
jno
cmp
in
movsb
adc
mov
mov
xor
mov
insb
out
sbb
sub
aaa
stc
xchg
lahf
ss
sbb
pop
add
push
je
divb
push
mov
inc
add
push
addr16
mov
cmp
mov
jb
ja
mov
xor
mov
imul
dec
inc
aas
cmp
xchg
jae
jbe
sbb
dec
mov
ret
mov
jmp
inc
andl
lods
orb
pop
sti
pop
mov
lahf
pop
lods
icebp
aad
push
dec
jp
adc
xchg
sub
out
fisubrl
inc
sbb
or
mov
mov
lret
cltd
xor
std
orl
sti
cmp
test
pop
adc
dec
aaa
sti
mov
ficoms
sbb
mov
xor
or
mov
cmp
push
js
popf
jne
addr16
xchg
subl
idivb
xchg
push
loopne
mov
je
daa
mov
or
cld
movb
divl
jecxz
pusha
stos
mov
inc
fadd
fdivs
sbb
pushf
mov
pop
adc
pushf
lret
add
sub
stc
or
pop
cmp
sub
pop
cmp
pop
and
fst
fldenv
imul
lret
pop
idivb
rcrl
lret
jmp
popf
inc
push
ljmp
mov
xchg
pop
ret
or
mov
mov
pop
mov
jo
cs
jge
and
mov
and
shl
sarl
pop
insb
sub
loopne
cli
out
data16
mov
imul
inc
and
mov
add
pusha
and
popa
inc
xor
mov
ret
xor
inc
sbb
xchg
iret
mov
push
leave
pop
ljmp
inc
call
clc
mov
mov
mov
xor
stc
pop
dec
lahf
cmp
mov
cmp
mov
sub
rcll
fmuls
xor
mov
arpl
ret
push
in
dec
jle
iret
inc
in
leave
sbb
repz
adcb
mov
in
jl
stc
pop
dec
mov
mov
pushf
aad
repz
cmp
cs
mov
dec
loop
jb
jns
ss
sbb
or
test
shrb
jae
add
mov
xchg
jnp
cs
inc
sbb
clc
loop
add
icebp
push
and
xor
stc
fdivs
fwait
cmp
dec
sarb
or
dec
or
xor
scas
in
fbld
sbb
sti
xor
leave
sub
and
mov
mov
mov
lret
adc
mov
sub
sti
out
xorl
cwtl
xchg
fwait
into
mov
pop
adc
dec
rcll
mov
sbb
mov
inc
aam
repnz
bound
or
jecxz
and
lods
icebp
adc
pushf
aaa
mov
dec
fwait
test
out
add
add
dec
jns
fs
sub
dec
movsb
out
dec
dec
sahf
lahf
dec
aaa
data16
ljmp
push
sarl
mov
mov
inc
push
out
or
mov
cmpb
dec
out
mov
rclb
jb
iret
jbe
mov
add
jl
mov
jge
aaa
in
lcall
xchg
adc
push
lods
xchg
into
dec
pusha
in
pushf
lods
mov
push
inc
mov
pop
jle
mov
and
dec
rcr
lret
mov
aas
add
je
addr16
cmpsl
in
lds
or
add
int3
mov
sahf
enter
and
push
mov
inc
repz
add
sbb
mov
loop
sub
sub
mov
cmp
dec
pop
imul
mov
dec
mov
sub
es
imul
sub
jae
pop
mov
int3
aam
sub
imul
add
push
es
loopne
pop
ds
mov
sbb
cld
jg
mov
hlt
and
stc
rcrl
pushf
nop
dec
pop
rcll
xlat
pop
gs
jg
dec
fidivl
mov
fldcw
xor
stos
jp
pusha
sub
sbb
lock
mov
scas
push
add
pushf
fdivl
andl
adc
int3
out
test
jecxz
repnz
push
addb
sbb
mov
sbb
enter
push
mov
call
ljmp
repz
fcoml
jmp
ss
inc
jb
gs
clc
idivl
xchg
cmp
sub
sarl
cmp
outsb
xchg
lcall
test
cmc
hlt
into
ds
inc
test
mov
xchg
cmpsb
push
test
das
pushf
test
pushf
mov
adc
push
dec
mov
in
lds
dec
pop
shr
sbbb
ss
mov
nop
mov
fldenv
mov
ss
mov
ss
jae
adc
loope
jae
cmp
xlat
repnz
push
add
imul
imul
mov
push
mov
test
dec
int
stc
mov
jnp
jne
dec
fidivrs
sub
or
int3
dec
jbe
mov
aaa
sbb
jl
rorl
ja
jp
fistl
sbb
aaa
push
movsb
jecxz
addr16
inc
aaa
push
or
ficomps
cli
outsl
mov
pop
jle
les
mov
cmp
cs
enter
mov
aaa
add
loope
cmpsl
jmp
xchg
jae
mov
dec
cmpsl
xchg
lcall
sbb
dec
push
mov
pusha
inc
and
clc
popf
into
lret
rcrb
cmpsb
lea
jg
jnp
xlat
test
insb
dec
cmp
std
cwtl
adc
add
jbe
aas
outsl
popa
mov
pop
outsl
daa
leave
and
dec
xchg
bound
in
and
jno
test
push
pop
sub
fildl
lret
push
movsb
sbb
adc
in
xlat
out
pop
pop
and
lret
shrb
mov
xlat
addr16
push
sub
arpl
outsb
inc
addr16
xor
dec
push
out
xorl
mov
adc
mov
mov
mov
les
loope
insb
or
pusha
lret
insb
sbb
dec
pop
xor
scas
adc
jb
sbb
pop
mov
negl
fwait
enter
hlt
mov
and
rol
pusha
xchg
xchg
stos
sub
xchg
fidivrl
aas
mov
dec
sub
pop
les
jg
ss
inc
pop
mov
jo
xchg
sbb
jecxz
arpl
xchg
mov
dec
stos
test
and
cmc
and
dec
mov
mov
push
push
out
add
sub
in
mov
jmp
jecxz
pop
push
je
mov
adcb
push
testb
pusha
out
sbb
hlt
das
xchg
xchg
shll
frstor
push
mov
push
not
xor
shll
push
stos
mov
xchg
add
test
lods
xor
insb
ret
cmp
out
mov
lret
add
pop
adc
or
sarb
adc
insb
lock
dec
xor
out
jne
es
repnz
aas
adc
push
in
call
jb
es
mov
adc
fisubrs
push
dec
popa
and
pop
push
ljmp
nop
je
sbb
shl
add
sbb
ficomps
mov
sahf
jle
stc
xchg
add
pop
adc
sub
or
jo
push
sbb
cld
stos
dec
loope
outsb
fdivl
into
sbb
cmc
xchg
and
adc
xchg
inc
js
pop
mov
sbb
and
push
mov
inc
jge
push
mov
std
jmp
cmova
cmc
mov
xchg
fcmovnbe
inc
pop
mov
stos
xsha1
call
mov
jo
imul
xor
pop
je
loop
sbb
imul
inc
loop
add
xchg
mov
cmp
pusha
cmp
ja
subl
mov
movsl
inc
test
inc
ja
jno
jae
jno
or
lret
enter
out
mov
sbb
push
lods
scas
sbb
push
insl
es
jnp
mov
inc
push
adc
les
dec
push
dec
repz
mov
arpl
xchg
mov
xor
in
xchg
sub
xor
in
mov
or
sub
jmp
iret
loopne
xlat
testb
cmp
inc
popl
in
scas
mov
mull
xchg
dec
in
xor
inc
popa
cwtl
and
mov
and
loope
mov
add
mov
shrb
loop
lcall
imul
test
scas
loop
adc
push
repnz
pop
and
dec
iret
sub
xor
push
add
push
dec
and
xor
ss
sbb
mov
mov
jmp
pop
ret
popl
sub
add
cmpsl
sub
mov
xchg
andb
sbbl
sub
fmuls
lods
xchg
shll
or
fwait
cltd
jmp
mov
rcr
daa
and
stos
icebp
add
movsb
mov
dec
je
dec
jl
enter
sub
adc
enter
inc
push
push
sub
dec
or
jnp
testb
cmc
arpl
fwait
lret
add
xchg
jno
fldcw
cmp
adc
in
js
imul
jmp
jp
cmpsl
mov
add
fidivrs
dec
mov
inc
les
mov
mov
aad
and
ret
mov
sub
aaa
addr16
gs
dec
lret
pcmpeqb
mov
mov
add
outsl
xchg
mov
mov
cld
inc
push
pop
int
fdivr
repnz
cmp
push
or
sbb
insb
cltd
jecxz
add
repz
xor
sub
xchg
push
dec
xchg
call
js
gs
push
and
push
xchg
add
add
mov
imul
xchg
rolb
cmp
in
in
cmp
and
dec
clc
sub
or
bound
pop
test
mov
or
loop
ffree
ljmp
fisubs
pop
test
dec
sbb
icebp
inc
mov
in
loopne
sub
ds
mov
jg
int3
xor
inc
mov
cli
push
imul
fscale
xor
ja
js
add
sbb
loopne
call
adcb
mov
jg
push
daa
xor
loope
xlat
jecxz
andb
xor
and
mov
lods
std
push
rcrb
mov
fstpt
or
daa
sti
inc
cmp
sub
scas
mov
fcompl
ret
dec
jno
mov
dec
in
ljmp
inc
dec
aam
inc
xor
fmull
test
mov
bound
mov
lret
push
std
ds
mov
stc
add
sahf
insl
fists
fwait
in
dec
sahf
inc
icebp
cmp
mov
xor
add
das
fstpl
inc
sbb
ja
adc
pop
jb
icebp
push
das
lock
or
mov
popf
in
mov
test
mov
push
fsub
add
fisttpll
xor
or
aam
aaa
pop
outsl
adc
pop
and
insb
jne
jle
jae,pt
bound
and
lods
xchg
and
sti
and
mov
aaa
pop
testl
inc
jge
or
adc
scas
sbb
xchg
aaa
pop
mov
aam
lds
orb
jg
sti
fs
stos
mov
push
fabs
popl
lds
test
cli
jo
inc
sbb
shlb
or
inc
in
ljmp
mov
imul
outsl
or
sahf
das
xor
cmp
movsl
mov
bswap
push
fbstp
fldcw
rolb
ds
push
add
cli
stc
mov
or
dec
or
push
cmpb
sbb
or
xchg
call
aas
adc
adc
mov
lds
mov
pop
push
dec
test
sub
lret
shr
into
add
jo
scas
push
mov
sbb
cwtl
dec
pop
mov
loope
mov
lret
andl
add
sar
sbb
fdivr
ds
jne
out
xor
mov
inc
mov
adc
rorb
push
jecxz
dec
cmc
sti
mov
imul
add
sbb
das
add
xchg
pushf
mov
mov
xchg
or
pop
popf
cmp
jg
cmp
xchg
fmuls
adc
lock
mov
inc
xchg
ja
mov
fs
gs
out
mov
loopne
mov
push
add
jp
add
ret
sbb
subb
adc
inc
fcompp
sub
xchg
out
cmp
inc
pop
rcrb
lods
and
mov
inc
pusha
adc
pop
mulb
in
mov
outsl
int
mov
dec
jp
cmp
push
scas
movsl
cwtl
shl
lret
jp
sub
imul
mov
pop
xor
push
sbb
or
mov
popf
or
test
jae
xor
push
mov
inc
jge
push
push
sbb
jo
xor
test
mov
leave
inc
hlt
enter
add
decb
xor
adc
sbb
xchg
lds
cmpsb
inc
aam
and
jg
add
fildl
sub
inc
push
ret
test
lret
fdivl
xlat
jmp
cmp
dec
or
lods
xchg
jmp
negl
push
sbb
mov
adc
or
mov
push
jmp
or
sbb
push
mov
and
adc
inc
call
arpl
pusha
pop
cli
into
loope
and
mov
cmp
fwait
mov
repz
lret
jno
push
cwtl
outsl
insb
and
das
es
cs
pushl
rcl
inc
sbb
call
xor
and
dec
cld
adc
or
cmp
and
adc
imul
jns
mov
inc
mov
push
xchg
adc
sub
movsl
pusha
int
pop
nop
dec
int3
push
inc
xchg
fldcw
imul
enter
test
cmp
cld
cltd
inc
in
in
mov
mov
pop
ss
push
pop
fwait
cs
aaa
jmp
std
or
and
sahf
xor
out
jns
jecxz
mov
divb
lret
push
les
sub
movsl
mov
push
adc
jecxz
cmp
cmp
iret
in
or
shlb
insb
fsubrl
insl
rcr
out
add
cltd
fwait
cwtl
dec
bound
dec
push
addb
mov
or
shlb
mov
jecxz
mov
and
sbb
push
jp
xor
mov
ljmp
repz
jo
fstl
popa
inc
imul
shll
pop
in
scas
mov
call
adc
int3
in
mov
lock
sbb
or
mov
pop
push
mov
and
adcl
iret
inc
mov
and
push
daa
jmp
out
add
orb
movl
xchg
mov
sub
xor
cmp
push
icebp
jns
push
dec
mov
inc
push
dec
int
mov
popf
cs
les
jg
lds
ficomps
aam
sub
push
sub
and
xchg
or
cmp
aad
xlat
mov
bound
inc
addr16
ret
in
push
inc
mov
xor
mov
cmpb
xchg
mov
sub
cmc
stos
out
lds
dec
out
imul
repnz
jo
jns
dec
push
mov
pop
cmpsl
sub
test
fiaddl
push
inc
add
pop
lock
rorb
call
std
push
lret
imul
sti
cmp
cmp
das
pop
xorl
jl
sub
lret
popl
outsl
cwtl
and
push
inc
daa
sbb
cmp
pop
shl
dec
and
and
cmp
and
ja
inc
xchg
jp
scas
mov
pop
in
popl
loope
in
add
lret
mov
add
mov
mov
sub
push
mov
js
out
pop
dec
mov
orb
sbb
jl
sti
ret
mov
popa
nop
ljmp
icebp
loop
add
jl
inc
insb
add
add
stc
jecxz
les
and
sahf
xor
push
push
xchg
arpl
push
mov
test
mov
in
int
dec
ret
mov
rcrb
push
push
shlb
dec
pop
mov
push
stos
ss
into
push
movsl
rcrb
jno
cltd
out
mov
inc
add
outsl
add
mov
lret
notb
jnp
mov
pop
jg
fwait
mov
imul
or
pushf
fsub
push
clc
push
stc
mov
sbb
push
inc
xchg
enter
loop
xchg
dec
sub
ja
incl
std
adc
jmp
sbb
int
lock
mov
stc
push
add
gs
dec
fs
cmp
mov
sahf
sub
repz
push
loopne
sahf
xlat
mov
incb
xorb
stc
repnz
rolb
outsl
lods
mov
jmp
clc
jns
bound
add
mov
and
mov
push
in
add
in
out
loope
sub
push
cwtl
cmp
mov
sub
inc
out
inc
out
psrad
xor
test
mov
std
dec
xchg
out
cltd
in
jbe
pop
stos
insb
je
sahf
repz
aas
ds
and
int3
and
adc
test
fs
sbb
shl
add
les
jae
out
in
shl
out
push
imul
inc
sub
push
pushf
movsb
leave
mov
js
cmp
xchg
call
adc
lcall
jge
shl
lret
std
outsl
cmp
mov
mov
movsb
xor
inc
lret
imul
or
add
ja
je
inc
pop
inc
test
xor
pop
push
scas
ret
push
sbb
mov
dec
repz
xchg
mov
fnstsw
stos
pop
inc
pop
in
jl
daa
xchg
push
lods
fiaddl
push
aas
ljmp
fwait
outsl
imul
gs
push
loopne
test
jmp
loopne
fisttpl
insb
test
mov
cld
fimuls
cmp
cwtl
sahf
ja
ficoml
fldt
ss
sub
std
cmp
pop
cmp
pusha
xchg
ds
arpl
mov
push
mov
outsl
test
loopne
fs
mov
xor
fstpl
lds
dec
arpl
and
inc
je
xor
add
leave
dec
nop
or
sbb
jp
cmpsl
pop
cmp
out
inc
xor
push
pop
mov
fisttpl
arpl
imul
sub
cld
or
jecxz
fcmovnb
xor
pop
filds
les
lock
call
enter
bound
or
pop
dec
fisttpl
xchg
aad
lds
test
inc
inc
pop
jae
push
addb
pop
str
sbb
into
in
out
sbb
sbb
pop
and
insb
es
mov
stc
and
sub
imul
push
inc
mov
jne
aam
add
dec
imul
adc
or
sub
push
imul
fdivrl
cmp
arpl
xchg
dec
mov
inc
and
call
jmp
imul
mov
fisubrs
clc
push
pusha
loop
push
or
repz
sarl
imul
into
dec
fs
sub
cmp
jbe
or
xlat
cltd
mov
movsl
add
push
paddb
mov
sub
mov
fdivs
cmp
push
jne
jp
or
in
sti
push
int
addr16
cmpsb
xor
sti
shlb
cmp
jg
cwtl
mov
das
add
mov
ficoms
pop
mov
jl
push
in
lahf
mov
ss
insl
pusha
dec
out
adc
popf
lcall
fisubl
movsb
loop
lods
ret
int
push
les
sarl
xor
int3
sub
lock
dec
cmpsl
outsl
jns
pop
adc
scas
mov
cmp
xor
mov
jg
lcall
jbe
cmc
shr
dec
adc
arpl
or
mov
mov
pusha
lcall
sti
add
mov
add
or
or
cmp
sub
rorl
dec
cmpsb
outsb
inc
into
sahf
xor
rorb
cmpl
fimull
push
xlat
xlat
mov
nop
pop
dec
scas
and
push
lret
arpl
loop
ss
xor
xor
aam
int
add
mov
mov
fidivrs
inc
jl
test
pop
shrb
dec
mov
bound
pushf
nop
mov
sahf
mov
pop
mov
or
mov
mov
fs
into
jns
out
call
mov
ss
cmp
sbb
sarb
adc
clc
daa
lods
mov
mov
ljmp
mov
jb
xor
push
or
xor
mov
imul
or
test
cld
cli
mov
sbbl
stos
imul
leave
add
in
push
adc
sub
pop
add
jmp
sub
push
mov
fstpt
mov
out
push
adc
jl
and
cmp
mov
xchg
outsl
sbb
fxtract
jb
mov
jp
push
jb
aad
bound
or
xor
cmp
not
xor
jbe
sti
push
aad
inc
nop
stc
mov
stos
movsl
sub
fnstenv
lods
test
fldl
sahf
cmp
ret
ljmp
out
test
mov
add
int3
test
xor
in
stc
mov
add
cmp
xchg
fwait
mov
adc
fucom
arpl
sbb
test
dec
jg
push
push
lfs
mov
xchg
sub
inc
jbe
jecxz
call
or
stc
push
mov
jecxz
lahf
or
iret
and
xchg
push
into
mov
lcall
xchg
xor
dec
push
dec
dec
sub
mov
mov
daa
and
nop
sbb
scas
orb
add
push
enter
daa
int3
leave
fwait
rorb
ficomps
mov
aas
cmp
pop
repnz
outsb
adc
or
jmp
pop
lret
pop
mov
test
mov
insl
popf
pop
or
in
jne
sbb
cmpsl
xor
fildll
add
jg
xchg
into
add
mov
xor
hlt
jl
and
je
xchg
bswap
jge
mov
sub
loopne
inc
out
lahf
or
pop
fldcw
cmp
ret
sub
xchg
clc
sub
xchg
pop
arpl
mov
loope
push
adc
fnsetpm(287
dec
sub
sbb
pushf
jbe
and
and
cmp
jle
sti
insb
fwait
pusha
sahf
loopne
xlat
pop
mov
inc
sbb
pop
inc
lock
mov
repz
int3
jl
fwait
xlat
test
add
sub
xchg
lock
aas
sbb
push
jle
scas
cmp
add
xchg
out
mov
pop
mov
sbb
mov
lods
cmp
call
nop
insb
mov
outsb
push
or
adc
fcomp
loop
loopne
sti
sub
mov
mov
push
enter
js
mov
jle
lea
orl
enter
js
subl
jo
push
rcll
mov
mov
ret
or
add
fwait
sarb
push
ljmp
mov
sub
inc
mov
cli
nop
ljmp
rclb
mov
xchg
sbb
adc
xchg
pop
loope
cltd
pop
jae
and
or
out
sub
in
lret
jno
stos
sbbl
ljmp
sbb
cmp
jl
push
mov
lods
stc
and
cmp
xor
cmp
call
xlat
or
and
adc
pop
int
je
dec
mov
xor
xchg
xchg
cs
add
int3
ret
pop
shlb
hlt
add
aam
ds
add
std
ret
imul
jo
mov
and
sbb
andb
push
test
mov
mov
test
xor
jle
faddp
push
mov
jl
jbe
add
sti
leave
pop
scas
add
movsb
push
in
mov
movsb
adc
push
xlat
in
pop
dec
xor
cli
cmc
dec
xor
mov
xor
ror
inc
in
pop
cmp
cmc
sub
mov
dec
sub
stc
js
ret
or
lock
or
divl
mov
mov
dec
jno
jnp
dec
sahf
add
leave
mov
xchg
aam
and
inc
push
mov
mov
repnz
fsubs
mov
scas
mov
sbb
rcrb
mov
dec
pop
pop
mov
pop
jl
into
mov
fnstsw
jb
or
scas
mov
aad
mov
pop
neg
scas
std
stos
out
jo
push
sbbb
and
rcll
mov
add
adc
dec
mov
push
mov
mov
lcall
and
imul
or
adc
jg
adc
dec
and
add
jp
into
jo
lods
cmpsl
xchg
shlb
fwait
nop
sti
mov
call
test
add
pushf
scas
jecxz
clc
ljmp
ja
lret
imul
orl
pop
movsl
jb
pop
inc
test
pop
popf
sbb
ljmp
inc
ds
testb
adc
dec
xchg
add
in
inc
js
dec
ljmp
cmc
fidivl
call
call
hlt
hlt
shlb
adc
pop
nop
fstpl
cmp
inc
jp
and
clc
mov
jbe
aam
and
out
sub
cli
pusha
cmpsb
mov
aas
dec
sti
jbe
in
les
ret
loope
mov
jmp
pusha
mov
cmp
mov
insl
addr16
adc
iret
mov
aaa
scas
mov
arpl
sarb
outsb
ds
popf
sbb
cmp
insl
xor
stc
jbe
movsl
aas
aad
cwtl
pop
insb
or
mov
aaa
mov
inc
add
add
push
inc
jne
pop
es
push
cmp
popf
xchg
nop
scas
imul
mov
scas
test
xor
inc
int
dec
cmp
push
and
jns
ret
xchg
xor
into
sub
inc
fwait
mov
mov
pop
pop
ja
mov
push
int3
daa
or
movsl
mov
inc
movsl
out
and
push
adc
sub
arpl
fwait
cmpsb
pop
cld
out
mov
cli
inc
sub
xor
cmp
jle
test
aaa
pop
add
leave
dec
adc
inc
and
scas
sbb
sub
scas
shl
subl
inc
jg
insl
dec
adc
stc
clc
sub
loope
int3
jle,pt
std
pusha
pop
cmpsl
pop
outsb
dec
xor
in
inc
ret
xor
dec
popf
in
fcompl
push
jl
fsubr
int
in
dec
addb
fwait
inc
push
ljmp
pop
sti
cmp
movsl
push
xor
sbb
outsl
mov
imul
test
xchg
cmp
rolb
sahf
loopne
pop
lock
scas
mov
xchg
in
pop
icebp
stc
roll
add
or
out
out
mov
mov
sub
fwait
mov
cmc
lret
sarb
push
push
ret
lds
xchg
mov
sbb
cs
clc
test
sub
jmp
xchg
dec
or
test
xchg
jb
fwait
pop
out
outsl
repnz
inc
hlt
push
mov
sub
jl
mov
int3
test
loopne
cwtl
out
xor
fstl
dec
sbb
xor
ss
and
mov
jnp
jnp
and
insb
into
dec
jae
popf
jg
mov
fildll
loopne
mov
stos
das
arpl
pop
daa
pushf
and
pop
fildl
or
movsl
jmp
inc
bnd
cmpsb
dec
push
sbb
mov
addr16
xor
push
push
aas
pop
ljmp
xchg
fs
push
sbb
sarl
iret
inc
xchg
mov
mov
out
mov
in
mov
pop
das
sub
jecxz
pop
jne
hlt
mov
push
pop
vmaxsd
inc
mov
or
jp
pop
loopne
push
shrb
xchg
shrl
mov
xchg
icebp
mov
add
inc
arpl
gs
and
jmp
and
jle
cmc
add
stc
dec
dec
jbe
mov
sarl
cld
push
fisubrs
hlt
cmpb
lods
xchg
les
jg
or
inc
aam
jbe
es
push
mov
cmp
adc
mov
dec
shll
aas
mov
in
xchg
push
and
daa
jnp
pushf
in
mov
jns
fildll
inc
add
stos
test
aas
push
loop
cli
movsl
dec
jl
stos
js
jmp
divl
lds
out
jne
xor
cmp
into
into
and
sbb
jge
mov
push
aad
jae
ret
mov
push
std
into
xor
push
add
nop
rcrl
cltd
adc
xchg
int3
movsb
fistpl
dec
mov
clc
subl
rorl
and
or
cmc
popf
add
leave
test
adc
jno
pop
test
loopne
cmp
pop
orl
sbb
sub
cltd
add
adc
cwtl
lret
or
sub
inc
stc
push
into
test
cmp
pop
mov
mov
cmp
inc
add
js
xchg
adc
lret
cmp
pop
jmp
dec
lcall
loop
fdivrl
out
fs
or
leave
stc
das
leave
mov
xchg
pop
sub
dec
in
lock
test
mov
jo
popf
loop
add
das
mov
test
push
pop
addl
insb
sti
and
push
roll
fimull
popa
stos
pop
or
enter
pop
cld
lea
mov
xor
enter
ja
mov
aad
mov
adc
loope
or
adc
sbb
pushf
fbstp
js
daa
push
xchg
mov
lret
dec
push
lcall
outsl
mov
hlt
ss
pop
and
je
test
pusha
sub
scas
in
mov
fs
movsl
out
movl
movsb
push
popa
mov
cltd
xor
or
add
xchg
testb
mov
insb
repz
mov
mov
clc
sbb
sahf
icebp
mov
bound
sub
pop
sbb
daa
lret
mov
cmp
mov
inc
mov
pusha
mov
movsl
inc
xor
mov
dec
lret
in
rclb
jno
cmc
add
insl
negl
ja
dec
push
scas
mov
aas
or
pop
roll
jne
notl
lds
push
fidivs
xor
push
cmp
cmp
jns
and
pop
mov
push
adc
jge
pop
outsb
xchg
xor
in
sub
fcmovne
jno
arpl
push
test
scas
sub
mov
in
push
push
loopne
cmpb
movsl
leave
jmp
inc
mov
rclb
sbb
testl
jle
ret
std
ljmp
xor
ds
dec
int3
loop
test
push
push
outsb
std
sti
sbb
jp
xchg
jno
dec
aam
inc
push
jne
mov
mov
push
jns
daa
dec
das
addr16
sbb
pop
insb
repz
f2xm1
std
into
adc
dec
push
xchg
mov
push
fisubl
xor
lcall
in
shrl
mov
mov
pop
aaa
or
mov
neg
mov
xchg
icebp
out
int3
arpl
jecxz
movsb
xchg
add
imul
clc
mov
jae
pop
rcrb
mov
inc
je
push
xor
aam
or
outsl
mov
clc
push
jo
mov
sub
out
mov
sarb
xchg
outsl
and
jecxz
sub
fisttpll
movsl
rclb
dec
sub
imul
inc
es
mov
and
outsb
dec
cmp
mov
mov
cmpsl
lret
out
sti
out
jecxz
aas
lret
mov
push
pop
in
aas
ret
fwait
mov
push
imul
enter
ja
adc
loope
rcrb
inc
sub
xor
dec
and
ds
sub
std
repnz
push
cmp
sub
xor
ds
addl
push
cmp
lock
int
mov
or
imul
cmp
mov
subps
imul
lea
ja
sub
jmp
push
stos
sti
sub
xor
iret
pop
sti
in
mov
lods
sti
ljmp
add
jne
or
push
lret
lahf
sahf
loope
les
loop
repnz
repnz
popf
sub
fsub
push
or
xchg
mov
pop
lcall
lahf
jmp
scas
data16
mov
and
pop
sub
mov
pcmpeqb
shl
add
sarb
shll
ja
popa
lds
out
xchg
das
cmpsb
and
iret
pop
test
stc
cmp
mov
pop
sub
fwait
das
test
mov
movsl
mov
add
shl
mov
fisubl
sbb
mov
mov
sbb
out
sbb
repnz
call
sub
ljmp
xor
add
stos
out
iret
jnp
push
add
scas
push
sti
push
sbb
mov
pop
lahf
lret
daa
or
push
xor
ljmp
std
dec
hlt
pop
jns
test
dec
fistpl
cmp
lahf
xor
inc
mov
les
aas
and
xchg
jcxz
mov
loopne
pop
push
popa
lea
rorb
std
movhps
rep
push
jp
push
jnp
fldcw
and
mov
mov
adc
stos
stc
mov
out
push
clc
cmp
in
call
insb
pop
faddl
lret
add
fisubrl
leave
in
inc
popa
dec
push
scas
adc
fidivs
xchg
xchg
inc
cwtl
jno
pushf
mov
cmp
mov
in
jp
cltd
addr16
sub
add
sbb
scas
push
dec
ret
push
lret
ss
add
insl
mov
flds
call
mov
call
mov
push
jbe
push
test
in
jle
scas
mov
loope
dec
adc
roll
int3
insl
inc
mov
cmp
dec
and
fnsave
push
mov
xchg
out
jecxz
mov
shll
nop
mov
inc
inc
rorb
push
inc
sbb
into
fistpl
rcrb
jl
cld
out
push
add
stos
jmp
std
pop
pop
fcomps
and
inc
mov
jne
sbb
adc
or
mov
imul
stc
jb
jae
mov
xchg
xor
dec
mov
push
push
mov
mov
pop
movsb
push
in
pop
aad
mov
pop
push
jns
jnp
cli
jno
arpl
dec
inc
out
xchg
es
inc
aam
sbb
fadds
sbb
jecxz
add
nop
lock
xchg
in
movsl
pop
adc
add
je
mov
gs
inc
adc
cs
add
loopne
adcb
sahf
mov
cmpsl
xor
jb
dec
push
pop
or
femms
gs
sub
sbb
arpl
sbb
cmp
inc
lock
cmc
lret
jmp
stos
cmpsl
and
ss
mov
inc
inc
inc
xchg
jns
repnz
cltd
cmp
mov
xchg
fdivl
inc
popf
fcompl
pop
fbstp
adc
mov
add
test
dec
mov
sub
sbb
movsb
jo
stos
push
andb
pop
mov
mov
mov
pushf
or
jle
sbb
dec
data16
cld
push
inc
shlb
sbb
sub
sbb
insb
pop
sarl
push
rol
dec
cmp
dec
pop
inc
dec
imull
jns
push
mov
test
xchg
aad
add
cmpsl
xchg
outsl
pop
mov
clc
jbe
adc
push
adc
faddl
inc
clc
dec
inc
aad
repz
popa
sbb
cmpsl
rcr
int
pusha
and
xchg
xchg
fmull
pop
cmc
xchg
jno
jle
shrb
pop
sub
daa
pop
sub
fs
into
outsl
adc
repz
jmp
pop
pop
ficoms
cmp
inc
xchg
nop
cmpsb
pop
mov
xor
xchg
ljmp
movsb
nop
std
mov
not
ljmp
cltd
test
adc
xchg
lahf
adc
rorl
sbb
popf
ds
ret
or
xchg
rorl
neg
dec
sbb
rol
popa
sub
fcmovne
lea
adc
pushf
add
mov
inc
dec
inc
pop
jmp
lods
jmp
xor
mov
lcall
xchg
bound
push
orb
mov
icebp
aad
fiaddl
loopne
lea
and
dec
cmp
add
nop
aas
mov
sti
enter
les
mov
adc
sbb
shll
es
iret
pop
addr16
mov
and
test
jle
jg
fidivl
out
repnz
dec
in
mov
and
jge
int3
aam
or
sbb
out
faddl
shlb
jle
mov
gs
fisttpll
dec
clc
or
lock
sub
push
cmc
call
xchg
out
jecxz
xor
push
and
mov
fidivl
push
aam
out
push
mov
push
scas
mov
cmpsb
inc
mov
cmp
push
inc
mov
mov
sbb
jecxz
add
mov
xchg
xor
addr16
pop
inc
mov
xor
dec
roll
lods
out
iret
adc
pusha
or
dec
out
mov
in
inc
mov
or
jb
imul
pop
jno
mov
mov
mov
lds
jge
mov
or
push
pop
xor
bound
ja
mov
or
into
mul
pushf
sbb
add
push
into
adcb
es
mov
jmp
jl
xchg
divb
adc
mov
add
out
cltd
push
dec
adc
popa
aam
xchg
and
sub
or
lea
out
and
arpl
sub
aam
mov
mov
xchg
mov
das
rol
inc
mov
mov
daa
out
arpl
out
repnz
and
fs
sbb
jb
arpl
inc
adc
add
aas
cld
negb
adc
lret
mov
mov
cmp
dec
loop
faddl
and
test
xchg
dec
jno
cltd
or
adc
dec
out
inc
push
fcmovbe
mov
mov
fcoms
cmp
mov
dec
cwtl
fwait
test
stos
adc
push
jns
movsl
rclb
adc
push
add
rcrl
dec
lods
call
add
cmp
js
mov
pop
cmp
into
addr16
lds
mov
adc
call
mov
cmp
arpl
mov
insb
loope
sbb
lea
mov
loopne
and
add
xor
subb
inc
pop
movsb
test
fimull
pushf
aam
xchg
xchg
pop
and
mov
push
or
adc
sub
add
xorl
pop
mov
pop
repz
pusha
xchg
arpl
xchg
push
cltd
movsb
cmp
cmc
cmp
pusha
lea
cmp
xor
and
pusha
or
or
popf
dec
sarb
push
cmp
rdpmc
dec
inc
pushf
movsb
out
insb
cld
or
sub
mov
repz
add
dec
sub
rorl
inc
xor
push
aam
outsb
cmp
addr16
daa
jno
shrl
push
in
enter
sub
lret
test
jb
xchg
sbb
lock
pop
xor
or
or
and
out
subl
or
sbb
and
fildl
sub
cmc
jne
shlb
clc
xor
lock
cld
or
leave
sub
or
pop
pop
jbe
out
xchg
push
push
repz
jge
xchg
mov
adc
cmp
fcomi
xor
shll
pushl
inc
rcll
jae
dec
jle
xor
lcall
hlt
inc
insb
imul
clc
shll
mov
mov
sbb
lahf
clc
lock
fstpl
lods
pop
shlb
fildl
test
inc
mov
mov
pop
aas
insl
push
xor
xor
push
pushf
inc
add
pop
pop
bound
out
lea
xor
fs
jge
jge
xlat
fidivrs
pop
mov
gs
cmp
dec
ficoml
cwtl
cmp
xlat
pop
jns
fistpl
mov
shll
pop
imul
or
jge
dec
lret
inc
ja
mov
pushf
arpl
sub
jp
mov
mov
mov
mov
mov
addr16
cmp
mov
pop
mov
inc
inc
test
test
adc
cmp
imul
and
imulb
jecxz
int
cmpsl
push
cli
and
or
sbb
stc
das
stos
jae
mov
lret
push
stc
push
lock
mov
std
cmp
sbb
dec
or
fwait
imul
jl
cld
push
xchg
mov
pushf
pop
sub
push
mov
push
sub
mov
jg
test
test
adc
mov
shlb
fadd
sub
test
daa
insb
repz
jg
jmp
push
aaa
dec
and
aam
cwtl
gs
insl
cltd
lods
push
inc
push
ret
dec
mov
in
cmp
sub
fists
sbb
loop
xor
xchg
dec
loop
xchg
aaa
cld
in
xchg
fldl
cmp
outsb
out
inc
add
adc
testl
add
mov
stc
mov
jl
and
rolb
xchg
xchg
dec
lea
decb
aas
cmpsl
arpl
loopne
mov
js
mov
jo
mov
xor
fsubs
fbstp
test
push
mov
loopne
inc
cli
xchg
sbb
mov
adc
xor
jg
push
popa
inc
mov
pusha
and
loop
loopne
jp
pop
inc
sub
pop
in
lods
sbb
out
daa
pop
jge
lea
xlat
stos
inc
sbb
jns
dec
aaa
test
imul
dec
or
fmull
add
shrb
dec
ljmp
outsl
bound
pop
ss
ds
add
mov
sbb
cmp
aaa
xchg
mov
xchg
in
jne
iret
push
cltd
sbb
and
call
vmread
push
mov
mov
dec
inc
or
outsl
repz
or
mov
popf
stc
das
push
cltd
sbb
xor
cmc
mov
xchg
push
pop
push
mov
je
push
mov
mov
js
sahf
and
dec
inc
sbb
rcrb
adc
push
jo
out
in
lock
xor
dec
loop
push
or
add
aas
sbb
xchg
xchg
or
push
hlt
mov
xor
adcl
into
cmp
sbb
cmp
repnz
xchg
fists
loope
jae
xchg
mov
aam
aaa
push
push
cmp
xor
pop
xor
lahf
shrl
sbb
jo
daa
aaa
xlat
jae
push
push
mov
in
ficompl
xor
jns
sub
dec
into
or
sbb
cmpsl
sub
or
mov
dec
int
jb
sub
xchg
push
jns
pop
movsb
xchg
push
adc
jp
lret
cmp
dec
nop
bsf
jmp
inc
loop
xchg
lret
loope
push
mov
popa
cmp
adc
sbb
add
bound
pop
or
repz
int3
mov
scas
cmp
xchg
lahf
aas
es
adc
cmp
je
push
mov
cmp
add
std
ljmp
ds
xchg
push
pop
push
sub
jne
iret
sti
and
xchg
push
lock
out
xor
cmp
pop
jnp
scas
sbb
enter
mov
add
es
xor
sbb
adcb
in
pop
scas
cmpsl
push
xor
cli
cwtl
in
popf
jbe
add
mov
push
mov
ljmp
mov
outsb
gs
in
std
mov
rorl
sub
inc
shr
lock
les
xor
mov
mov
cmp
xchg
pop
test
lcall
sbb
test
data16
out
mov
out
imul
into
push
adcb
xlat
ja
or
bound
mov
loopne
add
dec
xlat
mov
xlat
outsl
aaa
pushf
inc
aas
xchg
sbb
fsubs
xchg
repz
pop
jmp
leave
test
in
fnstenv
call
push
pop
ds
je
mov
xchg
faddl
cmp
sub
jne,pn
test
cmp
js
frstor
test
hlt
pop
adc
mov
scas
xchg
cmc
out
mov
sti
adc
pusha
xor
aad
jecxz
xor
or
pop
rcrl
pop
pushf
push
iret
test
jg
xor
adc
push
xchg
sbb
pusha
inc
push
popf
int3
add
out
push
pop
and
js
cltd
imul
jae
in
push
clc
mov
xchg
dec
aas
fs
pop
cltd
adc
pusha
push
mov
mov
aaa
mov
xchg
lret
xor
xchg
pusha
in
and
mov
sub
iret
or
push
add
loop
and
mov
and
testl
loopne
cmpsl
dec
xchg
pop
mov
mov
mov
sahf
sub
and
dec
sbb
jmp
das
fsts
ss
push
dec
inc
gs
jge
pop
mov
dec
divb
das
jle
sub
iret
fidivs
mov
cld
aam
inc
out
xchg
sub
pop
xchg
sub
cmp
in
call
pop
push
xchg
xor
fnstenv
xchg
xor
test
jge
inc
add
dec
sub
sbb
mov
mov
mov
das
pushf
andps
xor
pop
sub
xchg
fnstcw
cltd
idivl
idivb
lods
push
ret
xor
push
mov
jno
jne
or
adc
ljmp
gs
aas
out
fidivs
dec
gs
dec
fisttpl
pusha
mov
mov
jne
sub
push
insb
into
xchg
mov
orl
pop
pop
cwtl
scas
pop
loope
adc
dec
scas
scas
mov
fimuls
data16
inc
loopne
movsb
sti
into
leave
pusha
scas
loop
fwait
push
subb
adc
jp
mov
sub
movsl
enter
and
xchg
fisttpll
les
jecxz
or
lds
mov
lret
mov
mov
lods
add
and
add
subb
out
fdivrl
hlt
xor
xor
sbb
and
in
das
inc
push
dec
mov
into
dec
repnz
push
cmp
dec
push
mov
fmul
sbb
sarb
fldcw
fsubr
or
mov
mov
adc
test
or
out
inc
dec
stc
pop
pop
js
out
enter
lcall
pop
sub
je
sub
pop
dec
std
ret
lds
push
inc
jecxz
and
jge
inc
dec
mov
sbb
jne
mov
scas
call
shl
test
stos
cmc
movsl
imul
aaa
mov
inc
inc
mov
int3
ljmp
fsubrl
dec
mov
mov
out
stc
rcr
xor
sbb
push
mov
mov
and
sbb
icebp
fwait
mov
call
mov
mov
mov
out
add
out
sub
inc
inc
pop
xor
and
xchg
popf
mov
cmp
cmp
mov
out
mov
push
add
sbb
xchg
aad
sbb
rcr
add
pop
push
divb
jmp
jbe
pop
mov
outsb
fstpl
dec
sub
mov
sub
xchg
ja
mov
scas
pushf
enter
cmp
mov
jl
inc
add
jg
test
sub
mov
pop
jl
and
xchg
dec
ljmp
dec
jns
or
cltd
jp
add
jb
leave
xchg
rol
imulb
and
movsl
ret
icebp
mov
adc
stc
mov
push
jle
and
aas
lret
outsl
lods
cmc
in
inc
icebp
sbb
rorb
cmp
push
nop
test
andl
pop
aad
aam
lret
mov
xchg
out
stos
push
mov
adc
cmp
shrl
jl
jns
inc
pop
xlat
sbb
or
mov
mov
mov
and
adc
rclb
addr16
dec
pop
sub
or
repz
ja
popf
arpl
cwtl
pop
ds
sarl
das
loope
mov
inc
popa
rol
jo
inc
inc
sub
repnz
js
enter
cmp
sub
inc
iret
sahf
add
cmc
cmp
cltd
mov
jae
sub
mov
rol
mov
in
mov
pop
xor
das
sbb
pop
aas
outsb
sbb
cltd
in
pop
insb
inc
and
in
push
cmp
gs
lods
adc
push
imul
adcb
sub
xor
sbb
xchg
add
mov
or
xor
xor
cmpsl
mov
je
pop
cmp
pushf
mov
or
test
mov
loopne
outsb
int3
adc
mov
adc
sub
data16
mov
sub
rorb
in
sbb
add
dec
faddl
or
lret
push
mov
lds
cmp
mov
rcll
test
mov
lret
sbb
sti
pop
add
fldt
push
ljmp
cmp
lds
imul
movsl
hlt
add
fsts
out
push
inc
cmpsl
enter
add
loope
enter
mov
push
add
fscale
cmp
jg
aam
dec
sti
shll
stc
jno
mov
rclb
cwtl
pop
mov
popf
lret
fwait
cmp
stc
mov
sbb
imul
pop
sub
mov
jecxz
lahf
movsb
dec
mov
inc
das
sbb
es
hlt
jmp
jge
mov
sbb
ja
in
push
rol
imul
in
ret
sub
shl
popa
sub
js
sub
bound
or
cmpl
jno
cmp
cwtl
xorb
xchg
jle
push
cmp
stc
inc
out
popa
dec
rcr
push
imul
out
pop
out
mov
divb
dec
cmp
or
je
cmp
pop
out
gs
shlb
jp
testb
in
pop
jge
cmc
xor
xchg
mov
xchg
out
ds
push
lods
cmp
jb
or
sub
dec
push
stc
dec
and
andl
ljmp
xchg
sub
cmp
push
xor
dec
xchg
aam
stos
cltd
add
ss
inc
inc
jmp
test
push
mov
mov
daa
cwtl
push
insb
mov
adc
popf
and
test
mov
adc
fidivl
clc
push
out
rcl
jmp
testb
aas
inc
aaa
shlb
mov
jae
pushl
rol
sub
repnz
sub
jecxz
dec
mov
fnstcw
or
adcb
push
stos
das
stc
stc
dec
jb
test
xchg
jo
xchg
sahf
jo
mov
inc
cmp
ja
sub
scas
test
out
adc
shl
call
mov
iret
or
ficoms
sti
hlt
je
pushf
pop
mov
cmp
cltd
loope
sub
jne
and
int
mov
repnz
clc
data16
jp
push
int
in
add
in
mov
fnsave
adc
push
test
jbe
int
arpl
cmp
and
sbb
sbb
xor
cmpsl
fldl
stc
dec
jmp
jg
rorl
adc
test
leave
cmp
gs
pushf
into
cmpsb
xchg
pop
push
addb
in
push
test
into
jb
clc
push
ja
mov
nop
test
cltd
inc
mov
mov
mov
or
mov
sahf
int
mov
test
fcmove
add
scas
pop
jle
fwait
stc
xor
xchg
scas
aad
sahf
and
sarl
mov
jae
jns
pop
jg
inc
add
sbb
dec
mov
rorb
xor
out
subl
or
adc
inc
jne
xchg
test
sbb
xor
xchg
mov
daa
test
and
dec
test
mov
inc
subb
das
sub
or
cmp
mov
stos
int
ret
mov
and
notl
movsl
fidivl
clc
push
addb
adc
loope
repz
sbbb
stc
inc
push
xor
aad
jnp
jns
mov
xlat
and
pop
into
aam
rol
movsb
sar
dec
push
fwait
mov
mov
mov
mov
push
jecxz
mov
cmpsb
jl
push
sub
lcall
dec
adc
outsl
xor
sbbb
movsb
cmp
scas
cmpsl
fwait
mov
orl
mov
clc
clc
mov
sub
inc
inc
dec
sahf
incb
pop
dec
cld
jl
pusha
xchg
add
push
popl
sbb
call
sbb
idivl
scas
mov
push
mov
sti
negl
mov
add
xchg
mov
xor
cwtl
mov
cmpsb
ds
jae
pop
out
in
xor
add
sbb
sahf
push
adc
lret
cmpsb
fdivrp
stos
xchg
mov
nop
push
pusha
mov
and
cld
clc
dec
xchg
bound
stos
cmp
jbe
nop
es
ret
mov
fcomi
enter
cmp
iret
push
dec
mov
stc
sbb
xorb
cwtl
lahf
jecxz
mov
sahf
ss
sbb
push
std
mov
js
add
or
push
outsb
test
dec
ret
xchg
mov
cli
rcrl
add
ret
push
out
out
jle
push
fildll
out
jmp
in
call
rcrb
or
jmp
push
add
xchg
aaa
cwtl
shrl
or
negl
mov
cmp
jnp
sbb
fidivs
sbb
ja
add
imul
aam
les
mov
or
subl
enter
fstps
fists
fildl
push
dec
ja
incb
adc
fisubs
adc
cltd
jo
hlt
pop
mov
cmpsl
fisttps
xchg
ja
sarb
cmp
repz
hlt
pop
movsl
addr16
in
sbb
mov
push
in
or
xor
in
cmpsb
addr16
movsb
insl
out
cli
inc
mov
xor
pop
in
cmp
sbb
dec
pop
cmc
adc
jbe
je
xor
nop
xchg
insl
inc
outsb
aad
daa
adc
test
and
or
mov
jge
sbb
gs
dec
push
push
xchg
jnp
cmpsb
cmp
push
mov
int
arpl
fs
and
shrl
dec
mov
or
test
push
ret
mov
pop
fmuls
pop
mov
jbe
popa
and
mov
inc
and
mov
cmp
sub
adcl
cmp
aad
jo
arpl
mov
sub
push
mov
adc
sbbb
fcomps
lods
add
xor
cmp
lret
mov
cwtl
repz
mov
daa
jnp
out
jp
add
outsl
pop
mov
push
pop
xor
adc
xchg
cwtl
jns
mov
fs
loop
sub
xlat
jecxz
imul
xchg
xchg
dec
cltd
adc
test
jnp
lods
enter
inc
xchg
test
pushf
sub
ficoms
inc
shlb
or
lahf
push
jae
stos
aas
sbb
jmp
cmpsb
mov
out
sub
xchg
push
ljmp
js
insb
cmpsl
xorl
sbb
lret
aad
stos
pop
jecxz
mov
cmp
sub
add
int
sbb
pop
or
jle
dec
sub
out
addb
in
xlat
insl
rcrl
lods
sbb
pusha
stos
mov
sbb
push
sti
int
or
ds
cwtl
lods
ja
or
adc
jno
adc
nop
xchg
mov
movsl
pushf
jne
out
sbb
jecxz
jl
pusha
dec
and
push
mov
cmovae
xchg
sbb
movsl
jg
cld
cmp
es
stos
jo
sbb
mov
adc
test
xor
mov
dec
mov
pusha
cli
push
adc
loop
jns
fcmovbe
ret
adc
sbb
inc
jge
sub
or
add
mov
imul
bound
xor
adc
cmpps
imul
mov
dec
jno
xchg
pop
and
xchg
mov
xchg
mov
push
test
mov
sbb
fimuls
cld
mov
push
imul
fldt
dec
outsb
or
adc
sbb
xchg
rorl
rcll
jle
shl
sub
inc
into
dec
xor
mov
pop
test
jp
in
sub
or
testb
xchg
pop
xor
cmp
jge
int3
orb
jp
pop
pop
ja
sub
ljmp
iret
test
dec
mov
and
jg
push
testl
mov
xchg
addb
repz
push
roll
mov
fsubrl
inc
shll
sbb
fs
push
push
fcom
inc
divb
mov
das
mov
in
xor
dec
push
pop
adc
adc
loopne
dec
into
xchg
pop
pop
mov
mov
dec
pop
orb
insb
dec
jge
stos
jno
das
xorb
lret
and
fcoms
test
pop
int3
cmp
sub
andb
in
add
cwtl
push
insl
mov
sti
dec
mov
sahf
mov
shrl
dec
roll
sarb
into
call
push
movsb
pop
lock
cmp
fbld
movsl
sub
sub
mov
dec
jne
xchg
or
cmp
push
xchg
sbb
js
and
sbb
dec
jno
lods
mov
gs
shlb
push
jb
lahf
rclb
scas
pop
stos
rcrb
pop
xor
rorl
push
dec
mov
dec
mov
jp
mov
or
cmp
cltd
lods
mov
fisttps
call
and
sbb
push
ret
movups
mov
mov
mov
iret
lock
pop
lock
adc
sbb
bound
test
fidivl
mov
sti
in
rcl
adc
inc
stos
gs
jo
fstpt
test
xchg
mov
cmpsb
addr16
mov
ljmp
adc
mov
add
sub
ljmp
and
ss
roll
subl
and
mov
pop
das
inc
mov
adc
cld
cld
stos
popa
std
lret
or
loope
fdivrl
xchg
mov
mov
pop
das
shll
inc
adc
adc
jecxz
mov
aaa
push
mov
stc
roll
jns
clc
ret
movsl
lds
jb
popa
addb
addr16
rolb
xchg
jle
xor
dec
mov
jle
repz
xorl
cmc
jle
cli
mov
cmp
dec
sbb
popa
pushf
mov
in
dec
bound
in
into
inc
daa
mov
mov
dec
sbb
push
jnp
xor
shll
mov
call
jp
loopne
push
push
xchg
jle
sub
je
push
mov
pop
xor
xchg
push
jb
cmp
in
push
adc
enter
cwtl
neg
adc
cmpsl
jne
sbb
fildl
movsl
hlt
ljmp
inc
out
adc
sbb
jne
movl
nop
cmp
pop
inc
out
mov
pop
loopne
out
sti
pop
sahf
inc
sub
xchg
mov
cltd
mov
dec
mov
mov
or
hlt
lock
fisttpll
ficompl
in
ljmp
sbb
inc
loop
add
loope
popf
add
repnz
testb
mov
and
fimuls
sbb
ss
test
mov
stos
ret
or
cmc
jae
aas
shr
loope
fldenv
add
adc
ret
inc
lret
hlt
push
and
rcl
fcomps
faddl
jb
pop
into
and
out
adc
and
nop
scas
popf
les
aaa
jnp
repnz
inc
xchg
hlt
bound
aaa
lret
or
scas
xlat
testl
dec
lds
das
outsb
lods
xchg
mov
mov
mov
and
add
xchg
cmp
lods
dec
push
mov
shrl
jl,pt
xor
outsb
pop
jne
into
cmpsb
fsubr
jns
dec
iret
cmp
sti
push
jb
test
cmc
sti
lret
int3
xchg
sti
insl
fwait
call
mov
shll
mov
xor
cmp
xor
js
cmc
ljmp
sbb
repz
cmpsl
jbe
adc
nop
std
or
iret
jecxz
pop
xchg
outsl
jl
adc
jecxz
arpl
add
clc
sahf
jno
lret
xchg
pop
mov
adc
lods
test
push
aad
mov
xor
loop
lret
mov
sub
test
push
cwtl
out
fwait
add
aad
jnp
bound
loope
jo
cmp
fiadds
addb
pop
xlat
mov
loope
ds
mov
and
imul
cli
and
xchg
popf
sbb
daa
or
adc
or
imul
and
jecxz
adc
aas
mov
add
fwait
xchg
cmp
push
cmc
xchg
jbe
fldt
mov
pop
dec
xchg
enter
pop
lods
imul
pop
insl
inc
pusha
std
pop
leave
rorb
xchg
pop
stc
aas
fisttpll
pop
jb
fwait
xchg
xor
data16
inc
push
icebp
mov
test
cli
mov
mov
lods
xchg
shll
cmp
or
jl
int
daa
mov
rcrl
stc
jbe
push
inc
and
adc
test
and
in
jmp
rclb
movsl
insb
adc
inc
cmp
cmp
mov
nop
or
adc
push
sbb
add
xchg
repz
inc
pop
jne
push
out
fs
jmp
loope
fwait
movsb
int3
gs
xor
mov
jne
adc
popa
jge
cld
dec
fdivs
sbb
push
insl
jecxz
test
sahf
jne
data16
sub
add
mov
inc
sub
popa
test
movb
jo
xor
mov
mov
sbb
subl
shll
dec
fsub
imul
jns
mov
adc
out
out
repz
cmp
push
xchg
and
or
dec
sub
cmp
scas
cltd
lea
repnz
mov
sbb
lds
call
push
fs
les
push
push
adc
loopne
lock
mov
xor
push
sahf
or
outsb
push
add
mov
mov
or
sahf
xor
sbb
into
in
out
je
jne
jecxz
cmpsb
out
sarb
int3
cld
addl
in
pop
filds
imul
xor
and
adc
sahf
xor
aad
adc
push
loop
jns
aad
or
push
push
inc
rol
sbb
push
addb
sub
mov
icebp
fidivl
sub
ret
pop
jnp
jmp
push
jnp
cmc
push
leave
jb
jae
ljmp
pop
add
adc
lds
jle
fisubs
shlb
icebp
stc
jb
dec
mov
sub
dec
int
mov
cmc
push
mov
nop
lcall
jp
scas
and
test
rcr
cmc
xor
add
dec
imul
mov
ja
xchg
ja
xchg
inc
iret
mov
xor
xchg
cli
je
jge
or
push
jo
fsub
popa
cmp
lahf
xorb
movb
inc
mov
rorb
mov
insl
dec
je
in
imul
movsb
inc
jmp
loopne
aam
shlb
out
dec
bound
xchg
jecxz
sub
adc
test
rcrb
stc
mov
sbb
scas
or
pop
in
mov
fucomi
lock
add
std
dec
psubq
jp
and
mov
iret
pop
push
add
adc
sub
push
outsb
add
rclb
push
cmpsb
jl
jbe
scas
mov
mov
gs
mov
jb
lahf
xor
sub
imul
in
push
cmpsl
cltd
mov
pop
add
push
pop
mov
jns
lret
loopne
in
push
push
fdivr
add
cmpsb
sti
push
jnp
push
lock
mov
sahf
or
mov
cmpl
pop
or
cmp
lret
loope
nop
ret
stc
xor
xchg
or
mov
test
sbb
push
sub
jmp
xchg
out
cwtl
adc
or
dec
icebp
lock
mov
addr16
xchg
out
test
int3
ljmp
jl
adc
xlat
xchg
loop
or
xchg
pop
jl
adc
subl
in
data16
push
fwait
into
sbb
xchg
xor
push
gs
cwtl
cmp
bound
test
dec
and
repz
mov
daa
sub
shll
adc
popf
mov
cli
sar
insl
jmp
into
mov
aad
mov
and
sub
adc
test
adc
jmp
jl
fstpt
into
fwait
mov
loop
push
stos
jne
mov
aas
and
jne
daa
mov
fimull
sahf
cmp
sub
or
shrl
xor
xor
pop
gs
imul
dec
cld
inc
js
out
lret
stos
fisubrl
push
fidivrs
cwtl
loope
inc
pop
ja
mov
push
loope
and
fsubrp
push
pop
lret
mov
sbb
push
cmpsb
dec
adc
add
and
push
ret
pop
je
push
decl
test
stc
jp
dec
pop
or
fs
in
shl
jmp
xor
cld
sub
inc
push
add
mov
push
shrl
add
cltd
inc
xchg
repnz
int
test
jp
mov
aaa
fimuls
stos
add
adc
mov
sbb
call
scas
ja
adc
test
push
inc
jb
movsb
pushf
sub
dec
arpl
dec
aas
and
adc
jnp
rcrl
mov
sbb
xchg
xchg
push
loope
and
jmp
es
mov
or
fs
and
je
xchg
sub
cs
es
mov
lods
xor
lods
xor
out
sahf
or
mov
test
cwtl
daa
inc
test
inc
push
sub
loope
cmpsl
clc
mov
push
inc
fs
rcll
pmulhw
inc
mov
jae
inc
mov
mulps
xor
jnp
das
push
push
das
hlt
add
mov
dec
fwait
les
out
xor
movsl
cld
out
aad
sub
mov
int3
rorb
cltd
jnp
out
andl
mov
sti
fmuls
add
mov
inc
out
and
add
bound
mov
adc
pop
inc
mov
cltd
pusha
cmp
jmp
repnz
jmp
dec
add
mov
sub
iret
jne
cmp
sub
shl
divb
faddl
icebp
stos
inc
ljmp
leave
push
icebp
mov
cmp
aad
jp
lea
inc
pop
std
sub
xchg
jne
ret
scas
addb
xchg
in
cmpsl
inc
mov
jg
cltd
loopne
in
xor
shr
push
out
pop
push
movb
xchg
add
mov
neg
popa
std
xchg
xchg
call
adc
imul
lds
fwait
icebp
in
push
and
xchg
pop
or
push
out
cld
out
add
mov
fdivs
int3
jae
push
cmc
mov
ret
lret
jne
icebp
shl
leave
jge
loopne
nop
rcll
adc
adc
cli
repz
pop
jmp
xchg
xlat
mov
cmp
cmp
push
cs
inc
pop
sbbl
inc
cs
pop
rorb
hlt
shrb
loope
pop
sbb
pop
xchg
fidivrl
rorb
fbstp
dec
sbb
push
imul
cmp
leave
sub
adc
mov
rol
mov
inc
pushf
sbb
movb
xor
subb
pop
jo
jo
push
leave
in
pop
mov
icebp
sub
pop
push
mov
ja
xchg
sbb
dec
cmpsl
inc
push
adc
imul
xchg
mov
cmp
xchg
std
stc
or
fstl
stos
dec
lret
add
add
mov
jbe
fwait
addr16
prefetch
jno
mov
mov
call
std
insl
or
xlat
test
gs
leave
xor
jb
xor
push
imul
mov
push
push
cmpsb
into
sbb
rcr
pop
out
sub
or
movsl
in
pop
mov
std
adc
push
jge
lcall
fnsave
movb
jmp
or
lea
xor
jns
ljmp
push
mov
les
sbb
out
jnp
xchg
loope
jae
push
dec
call
pop
adc
push
cmp
je
or
cmc
and
jg
pop
pop
mov
fidivl
dec
fstps
jmp
in
push
cmpsl
pushf
inc
inc
push
out
popf
mov
xchg
jle
push
enter
inc
aas
mov
in
lahf
add
cmp
stos
std
movsl
rorb
inc
or
insb
inc
mov
push
loop
inc
jl
daa
and
js
shl
xchg
jnp
jmp
jg
mov
mov
cmpsb
jmp
rcrl
and
mov
mov
fcmovnb
lahf
adc
inc
int
and
insb
push
cltd
leave
lods
lret
dec
cmp
pop
in
and
fwait
cmpsb
adc
lret
push
mov
lock
add
fs
xchg
pop
pop
mov
xchg
cld
dec
inc
jnp
int3
imull
or
cmp
mov
push
add
test
push
adc
movsb
xor
cwtl
arpl
fs
addr16
adc
imul
imull
pop
xor
mov
adc
popa
adcb
lds
pop
xchg
jl
arpl
inc
fmul
cmp
sbb
frstor
mov
push
insl
cmp
and
pop
in
imul
or
shlb
lret
movsb
cmp
fidivs
pop
aaa
fwait
or
popf
insb
push
add
test
sahf
adc
lods
xchg
adc
inc
jp
jmp
scas
cli
sbb
xor
andb
adc
add
lret
cmp
movsb
outsb
mov
sub
icebp
jge
mov
iret
outsl
sub
sbb
loope
inc
add
add
sub
xchg
mov
push
sub
sub
pusha
xlat
jns
and
pusha
and
outsb
aad
xor
mov
rclb
int3
adc
add
mov
fnstsw
call
ret
dec
test
push
addr16
pop
popa
pop
sbb
sbb
add
cmpsb
ljmp
cmpsl
pushf
add
xchg
cmpsb
add
jns
rcll
push
cmpsb
mov
out
xor
call
mov
or
pop
ljmp
mov
imul
sub
outsb
jbe
ret
or
icebp
pop
test
xchg
cwtl
fwait
loope
test
fistpl
ljmp
lcall
inc
loope
mov
jno
mov
outsl
dec
cld
decb
and
pop
addr16
vpsubw
sbb
mov
xor
or
add
pushw
add
addl
xlat
dec
adc
push
and
out
arpl
sub
sti
push
popa
jl
outsb
inc
jb
xchg
jg
sub
shr
or
xor
dec
cmc
fsts
jge
pushf
push
enter
into
or
out
jle
xchg
rcrl
jo
mov
mov
cmpsl
cmp
repz
stos
jle
xchg
fstpt
pop
loope
cld
fistpll
pushf
iret
cmpsb
mov
push
cmp
fwait
ret
test
int3
pop
mov
andl
rorl
adc
cmc
mov
popf
push
es
mov
mov
pop
js
push
shrl
and
jmp
and
dec
mov
pop
dec
mov
and
test
jbe
jo
push
lcall
sub
leave
fidivl
cmpsl
sbb
pop
mov
mov
mov
cwtl
dec
out
dec
fcomps
enter
stc
lods
mov
inc
xchg
push
mov
addr16
dec
mov
mov
sti
lret
movsl
add
mov
add
in
mov
or
scas
or
iret
das
pop
jp
xor
xor
sbb
sub
filds
and
fcomps
xchg
xchg
pop
cmp
iret
or
sub
dec
mov
adc
jne
xchg
push
xorb
pop
jo
movsl
jle
xor
dec
sbb
cmpsb
sub
and
dec
ja
mov
sti
push
dec
sub
adc
dec
mov
adc
out
xchg
daa
orb
and
xor
cmp
adc
sbb
push
jmp
insb
imulb
push
aas
jae
cmp
and
inc
dec
dec
pop
pop
mov
cmp
aaa
insl
sbb
pop
jb
div
dec
cli
push
rolb
jns
dec
movsb
pop
test
or
push
dec
popf
mov
jno
jne
bnd
mov
mov
hlt
jecxz
push
jmp
scas
add
out
or
hlt
dec
ficoms
mov
or
jnp
mov
mov
sarl
or
fiadds
test
out
cld
stos
push
rcl
add
xor
or
pusha
rcll
lods
in
push
cwtl
scas
lds
inc
fcomp
imul
mov
aam
add
mov
sbb
jle
jo
dec
sub
or
repnz
iret
sarl
dec
push
test
cs
imul
mov
xor
ficoml
add
jnp
pop
push
clc
movsb
xor
xchg
sub
jmp
sarl
movsb
xchg
inc
sub
add
shlb
mov
xchg
ror
cmp
mov
hlt
jo
rclb
pop
cmp
imul
sub
cmp
mov
push
data16
inc
mov
sbb
into
leave
mov
jo
sbb
decl
mov
ss
dec
sub
mov
lock
orl
mov
add
add
sbb
ss
imul
aam
fmul
mov
add
and
xchg
jecxz
add
inc
adc
jns
test
ds
mov
iret
mov
mov
pop
cmp
pop
inc
ljmp
mov
cmp
jnp
pop
je
testb
xor
scas
lea
jge
ret
pop
aaa
push
push
mov
mov
sbb
jns
lods
adc
pop
add
mov
aad
mov
test
aam
push
cs
repz
mov
popa
sub
sbb
ss
adc
enter
mov
and
push
jle
into
outsl
mov
ret
mov
test
mov
fldenv
addr16
inc
mov
fwait
ret
xchg
mov
lods
and
jne
inc
jmp
mov
pop
stc
pushf
xor
add
fistps
pop
cmpsl
sbb
imul
stos
aam
cmpsl
jmp
cmp
mov
test
cwtl
int3
cmpsb
mov
xor
or
add
push
inc
cmp
mov
push
pushf
xor
ret
enter
int3
rclb
dec
mov
dec
fnstcw
imul
pop
mov
inc
jbe
int3
mov
cmpsb
add
daa
push
div
movsb
xor
dec
icebp
mov
sbb
xor
pop
movd
fstpl
fs
jmp
in
mov
outsl
sar
mov
and
xchg
insl
inc
aad
in
dec
lret
mov
or
dec
inc
out
or
dec
ljmp
or
or
xchg
sti
xchg
xor
pop
fidivs
mov
jl
pop
or
cmp
in
and
insl
enter
or
test
fxch
cmp
test
mov
leave
mov
cmp
mov
adc
das
pop
and
fstps
jp
mov
imul
push
mov
insb
pop
leave
fs
jbe
in
sub
lahf
gs
add
jmp
mov
xor
pushf
out
adc
mov
sbb
or
mov
jne
out
filds
push
jne
je
or
jne
add
insb
fidivl
psubd
inc
bound
das
inc
fidivs
bound
cmpsl
mov
lds
mov
daa
sub
and
mov
xor
insb
in
sub
icebp
jo
jge
and
sub
mov
xor
movsb
rcrb
andl
push
mov
mov
dec
push
loop
mov
mov
xlat
mov
jnp
aaa
pop
ffree
lahf
add
fcmovb
mov
in
push
xchg
push
lods
frstor
dec
and
fidivs
jne
sub
das
lahf
in
movsb
fbld
lret
outsl
fnsave
sbb
adc
and
pop
dec
mov
iret
imulb
repnz
adc
shrl
lods
jp
fcompl
jge
push
lods
cli
fcoml
arpl
cmp
test
test
mov
add
popa
lea
test
ret
mov
rorl
ja
sar
push
mov
cmp
cmp
cmc
xor
fildl
and
mov
fnstcw
call
jle
and
pop
push
sbb
adc
xchg
push
jne
rcll
jae
dec
cmpsb
mov
dec
andl
add
push
andb
adc
call
and
add
adc
mov
enter
testb
push
cs
std
xchg
inc
ds
add
add
out
ljmp
sar
imul
cmp
dec
xlat
jo
ss
imul
adc
mov
out
mov
mov
int3
push
xchg
jmp
sar
sub
sbb
cwtl
es
aas
mov
shl
push
cmp
xchg
push
jle
adc
pop
out
out
sbb
stos
jne
cmp
inc
addl
loopne
insl
imul
fiadds
and
ja
cltd
xchg
pop
jnp
xchg
jle
sub
aad
cmp
mov
jge
inc
ficomps
jge
cmpl
push
ds
and
add
imul
clc
pop
sbb
subl
xrstors
leave
in
jle
xchg
xor
std
dec
sub
pusha
add
sbb
leave
gs
in
roll
add
mov
push
mov
and
test
mov
push
jmp
jbe
mov
cmc
mov
sub
nop
push
jmp
add
xchg
dec
pop
xchg
cld
cmp
jns
cmpb
in
ljmp
pushf
adc
and
mov
popa
aaa
in
mov
mov
add
outsb
loopne
pop
mov
je
mov
clc
and
mov
fwait
mov
jae
fstl
xchg
jb
shrb
sub
push
call
xchg
lret
add
pop
dec
addl
pop
sub
dec
jns
lods
pop
fisubs
mov
sbb
btc
rcll
jmp
pop
mov
mov
lcall
jg
ljmp
ljmp
pop
mov
mov
daa
in
sbb
pushf
sub
pop
jmp
sub
hlt
jns
cmp
jns
ret
pop
sbb
adc
cmpsl
mov
xor
mov
ljmp
mov
cli
addl
cli
arpl
test
sahf
sub
xor
push
popa
mov
pop
lods
mov
sbb
es
js
aam
ja
roll
jecxz
sarl
test
push
or
mov
or
stc
and
in
in
jns
xchg
dec
add
call
rcll
push
popf
dec
sub
sbb
je
popa
xor
lds
fldt
ret
add
push
push
mov
push
mov
popa
cmc
or
popf
sub
and
jns
stc
mov
enter
imul
insl
mov
js
dec
pop
mov
pop
sbb
mov
out
pushf
gs
mov
mov
nop
lds
push
push
pop
dec
mov
popa
ss
sbb
cmp
lahf
dec
jmp
inc
insb
testl
and
fistpl
mov
add
aas
sub
cmp
jle
lcall
fcomps
push
cs
jbe
repnz
sbb
daa
shll
rcrl
lds
insb
nop
test
push
sbbl
or
jae
cli
push
mov
mov
fs
incb
dec
outsb
data16
in
sbb
mov
test
pushf
mov
or
icebp
pop
das
pop
xchg
pop
insb
or
cwtl
adc
jg
rcl
shrl
jbe
inc
cli
das
mov
xchg
or
outsl
adc
mov
fcmovnbe
daa
lock
std
inc
shl
push
fstps
xchg
jecxz
or
shll
mov
movsl
jb
popf
xchg
loop
cld
ljmp
sbb
fsub
xor
push
jmp
cltd
dec
lock
insb
push
shlb
aas
xchg
imul
xchg
mov
adc
aaa
and
lahf
jo
cmp
inc
lret
out
or
pop
fidivl
xor
ds
jo
daa
push
outsb
inc
adc
gs
mov
sahf
rcll
pop
in
cld
cmp
ss
pop
inc
gs
loopne
inc
lret
in
ret
std
loopne
aad
xor
addb
mov
push
pop
popa
fnstcw
mov
scas
mov
cmpsb
mov
vpshufhw
pop
sbb
mov
loop
jnp
sbb
leave
subl
cmp
lcall
cld
lock
popf
out
int3
rcll
out
add
lret
test
push
icebp
sarb
lods
roll
push
ret
clc
pop
inc
adc
rclb
xor
test
jbe
inc
xchg
sub
and
push
repnz
cmp
lcall
xor
inc
inc
push
xchg
xor
sbb
and
xchg
mov
lret
icebp
fadd
jl
lahf
je
xchg
cs
ss
or
push
dec
xchg
xlat
pushf
shll
hlt
loop
stos
xchg
into
lods
mov
cmp
pusha
ficomps
sarb
sbb
in
dec
xor
inc
loope
call
adc
dec
jo
cmp
mov
or
scas
outsl
mov
sbb
pushf
dec
xor
lods
sti
xchg
mov
xor
sbb
lods
scas
scas
adc
fsubl
jns
pop
pop
cltd
mov
mov
call
std
aad
movsb
jne
in
arpl
push
pop
cli
js
shll
repz
pop
ret
adc
es
icebp
loop
dec
and
sbb
inc
mov
mov
dec
mov
imul
outsl
outsl
jmp
enter
pop
mov
addr16
mov
push
pop
mov
inc
mov
inc
pop
lret
call
and
sub
mov
pop
add
cmc
and
lret
dec
dec
jnp
loop
paddusb
push
mov
test
into
sbbl
stc
cmp
xchg
push
scas
cs
push
imul
push
push
or
shr
dec
je
mov
sahf
xchg
clc
in
xchg
aad
ret
push
fcoml
mov
cmc
loopne
pop
xchg
mov
add
add
cwtl
data16
jnp
fisubl
xchg
mov
sti
into
xlat
icebp
ret
cli
xor
fidivs
loope
jg
xchg
pop
in
outsb
repz
lahf
icebp
clc
int3
mov
insb
into
shll
loopne
mov
lock
int
xor
fsubrl
fists
rcrl
aam
ror
push
adc
out
je
rol
push
push
loope
aad
aaa
fistpl
mov
add
sbb
mov
jmp
or
movsl
je
daa
iret
insl
ret
pushf
call
or
lret
insb
std
imul
adc
in
cmpsb
add
sub
xor
les
dec
mov
stos
test
inc
or
jmp
sub
sbb
push
sahf
sub
inc
shr
hlt
addr16
lds
jl,pn
sbb
sahf
mov
pop
push
in
xchg
push
add
xlat
pop
sub
shlb
insb
xorb
dec
out
loope
cwtl
repz
adc
mov
jge
iret
jb
ret
loope
int3
adc
mov
cmp
inc
mov
ljmp
aaa
leave
mov
cmpsb
les
iret
mov
xlat
icebp
sub
jmp
rcll
jge
mov
xchg
fs
inc
testb
cmp
push
je
inc
pop
enter
jg
sub
adc
std
xchg
push
out
rorw
mov
lea
mov
push
mov
or
jge
sbb
cmp
xchg
dec
and
sub
in
fstpt
mov
inc
mov
leave
loope
xchg
dec
adc
mov
fistps
or
and
lods
ds
cwtl
lds
mov
lcall
xor
cwtl
imul
imul
outsl
enter
dec
sbb
fwait
out
dec
fcoms
cmpsl
inc
ret
rorb
push
push
fsubp
dec
js
xchg
lds
jb
hlt
popa
sub
in
dec
insb
push
mov
lar
or
push
push
adc
dec
pop
int
add
add
popa
push
push
mov
or
fadds
dec
into
pop
cmc
and
mov
jns
aas
roll
lds
shrl
adc
nop
xchg
cli
loopne
imul
out
mov
ljmp
pusha
mov
dec
xor
mov
orl
cwtl
push
mov
mov
mov
mov
adc
push
ret
or
pusha
sub
mov
hlt
test
lret
mov
push
std
call
mov
dec
or
adc
or
xchg
add
mov
cs
push
lea
pop
ss
fcoml
stos
adc
hlt
sub
push
fnstsw
sbb
jecxz
push
jle
ret
addr16
pop
sahf
and
add
push
adc
ret
test
xchg
lods
adc
testl
jns
xchg
in
adc
rol
xchg
fldcw
jp
cmp
insb
push
jb
jbe
imul
leave
or
test
addr16
ljmp
xchg
jnp
fwait
sarb
cmp
sbb
ljmp
pop
pop
mov
addr16
in
dec
add
or
mov
mov
out
pop
sub
sub
fisttpl
mov
loope
je
ficoml
or
pop
cmpsl
dec
push
sbb
int3
clc
into
xchg
add
popl
pop
adc
movsb
adc
pop
bound
fisttps
insl
addb
repnz
sbb
lods
add
mov
sub
sahf
jae
sub
scas
in
xor
xor
mov
or
dec
aaa
cld
psllq
mov
das
jl
bnd
inc
daa
and
je
fwait
loop
push
push
pop
fmuls
mov
mov
lcall
jl
insl
sarl
pop
les
and
add
ret
dec
sub
cmc
mov
xlat
dec
jnp
mov
mov
rolb
xchg
imul
aas
inc
mov
push
lret
mov
inc
fnop
gs
into
in
cmc
jae
pop
mov
cmp
repnz
push
daa
or
sbb
xchg
ret
jmp
daa
or
push
jae
cmpsl
push
and
jb
sub
jle
sub
fbld
imul
ds
mov
and
cld
pop
pop
push
data16
add
mov
icebp
aam
cmp
mov
inc
mov
jns
ja
dec
int3
fmull
inc
inc
sub
fists
mov
inc
lods
sub
js
rcl
or
mov
out
out
call
push
inc
push
and
adc
mov
nop
cmp
xchg
add
jmp
in
popf
in
push
bound
popf
cmpsl
add
out
mov
lahf
jno
rorb
sbb
or
jge
lcall
push
fisubs
jecxz
aad
dec
xor
sbb
mov
pop
filds
jg
jnp
cmp
push
sub
pop
jo
shr
dec
sub
adc
mov
cmp
sbb
xlat
push
pmullw
xor
xor
repnz
fwait
popf
in
stos
mov
das
xchg
cmp
push
movsl
dec
or
mov
mov
jbe
cmp
or
mov
lods
ss
ja
mov
cmp
push
mov
sti
and
push
rorl
fiaddl
andb
ds
inc
ja
mov
lock
sub
push
test
notl
dec
pavgw
cmp
ja
adc
insl
data16
mov
jp
ficompl
test
cs
in
sbb
repnz
sti
mov
mov
mov
fsubrs
lods
repnz
aam
imul
lret
ret
mov
mov
sub
xchg
cld
cmpsb
dec
cmp
sbb
push
movsb
out
call
and
daa
jle
dec
mov
mov
adc
xor
test
mov
fmull
mov
in
mov
push
jb
add
shrb
fcoml
movsl
mov
jno
dec
sbb
ljmp
mov
rolb
repz
aad
fwait
lds
mov
mov
rol
fisttpll
mov
lods
push
jmp
mov
scas
mov
jge
sub
mull
and
and
rcl
cmp
push
xchg
or
fmuls
sti
or
in
inc
xlat
adc
xor
mov
xchg
jb
shr
adc
shlb
in
shlb
ret
and
int
into
sarl
out
fadds
mov
mov
dec
and
scas
dec
insl
lea
xchg
push
lods
pop
mov
push
mov
dec
sbb
xor
pop
pop
mov
loop
inc
fbstp
pop
push
xchg
mov
out
andl
sbb
sahf
imul
mov
popa
and
xor
push
repz
inc
add
cmp
dec
out
xlat
adc
icebp
call
sti
cmp
lret
fcmovb
adc
rclb
incb
cmp
xchg
inc
frstor
and
cwtl
jno
pop
pop
inc
or
add
vpsllq
mov
nop
mov
insb
testb
scas
loope
test
int
jge
add
push
jge
loope
pop
lock
lcall
mov
mov
or
mov
sbb
jb
sbb
mov
cmpsb
mov
jns
pop
sbb
inc
js
mov
lock
pop
pusha
jle
add
mov
fnstcw
jo
add
sub
testl
call
mov
inc
xor
jle
out
ss
fimull
shr
ljmp
jae
inc
aas
enter
fnstenv
shl
and
lock
in
jge
or
mov
out
test
xchg
push
pop
lea
in
std
int
dec
decl
inc
mov
shr
xchg
mov
dec
mulb
aad
sarb
cmp
dec
and
sub
add
jp
stos
in
xchg
and
inc
insl
cmc
outsb
and
fwait
mov
les
icebp
mov
test
mov
mov
inc
imulb
dec
push
jle
push
enter
call
jp
jecxz
popf
loope
mov
sub
dec
mov
dec
stc
xor
ja
outsb
pop
mov
push
shlb
mov
mov
icebp
movl
dec
mov
sbb
fcmovbe
div
inc
sbb
call
or
dec
mov
cli
pop
cwtl
imulb
xchg
fiaddl
mov
imul
mov
lods
iret
mov
xchg
int
adc
adc
inc
mov
mov
icebp
sub
into
in
in
xor
test
and
pop
mov
icebp
mov
call
or
aad
mov
pop
add
scas
sbb
pop
movsl
loope
cli
mov
dec
out
gs
jecxz
sarl
imull
xchg
xchg
loopne
sbb
jg
add
inc
xor
fcompl
inc
lods
lahf
nop
sub
xchg
test
pusha
dec
loope
movb
or
bnd
pop
push
loop
push
insl
ds
test
or
aad
enter
mov
xor
cmp
and
or
or
mov
push
imul
pop
or
arpl
std
push
xchg
pop
test
clc
stc
mov
cmp
push
jns
jle
jmp
mov
push
leave
pushf
stos
sbb
mov
fdivr
je
test
js
xor
sbb
cmp
ss
nop
ret
add
popf
lds
mov
pop
into
or
outsl
clc
std
push
sbb
notl
xchg
pop
icebp
mov
jbe
nop
add
jne
into
scas
inc
inc
addr16
fisubl
stos
mov
pop
sahf
hlt
dec
dec
jg
push
in
sub
adc
test
cld
test
popf
dec
mov
jge
imul
inc
out
sub
jns
xchg
push
sbb
imul
and
jle
mov
mov
and
inc
jb
push
aam
pop
test
mov
add
scas
std
jmp
aaa
pop
fildll
in
icebp
pushf
lods
test
gs
scas
je
les
incl
mov
adc
mov
call
insl
push
clc
lea
jno,pt
stos
xchg
movsl
or
inc
outsb
jb
xchg
incl
clc
into
pop
sub
sbb
and
inc
fs
jbe
imul
mov
loop
test
mov
or
xchg
lcall
scas
xlat
mov
pop
push
mov
dec
in
push
xchg
test
mov
push
jae
int
inc
inc
dec
inc
inc
int3
pop
xchg
out
push
xchg
hlt
add
pop
lahf
testb
jmp
add
push
xor
inc
mov
sets
sbb
mov
xchg
inc
loopne
sbb
add
or
sahf
leave
pop
push
je
int
xor
mov
fwait
xchg
jl
out
mov
sahf
push
sub
movsl
fcmovbe
fcomi
data16
clc
popf
pop
mov
adc
mov
ret
ret
dec
movsb
xor
sahf
pop
xor
nop
inc
test
push
xor
push
out
outsl
cmp
adc
pop
test
loope
out
popa
shlb
or
roll
ret
jle
iret
inc
out
mov
adc
in
inc
dec
or
mov
pop
push
imul
pop
jge
test
scas
push
sbb
mov
pusha
out
or
jb
aaa
mov
leave
xchg
inc
or
insb
jbe
mov
xor
jno
arpl
mov
pop
jb
test
push
sub
fmull
aas
into
lea
xchg
adc
or
and
bound
ds
aas
mov
mov
pminub
pushf
or
push
or
adc
or
dec
jae
in
pop
jmp
add
and
dec
cld
sub
stos
lcall
adcb
shl
stos
adc
jecxz
inc
ret
adc
lret
out
sbb
cmp
cmpsb
jecxz
mov
lahf
hlt
sarb
mov
jbe
mov
jl
ljmp
mov
cmc
add
mov
in
mov
lds
mov
pop
fwait
xchg
insl
dec
popa
jne
scas
sti
push
cmp
mov
dec
imul
lock
lods
jns
jo
mov
fisttpl
loop
ljmp
cmp
xlat
dec
repz
stc
pop
push
leave
aaa
mov
sub
inc
pop
arpl
ret
rol
shl
mov
sub
dec
sub
mov
jo
loop
xchg
cmp
test
mov
adc
jb
push
mov
icebp
cli
icebp
lock
orb
int
cwtl
in
int3
pop
mov
jecxz
xchg
xor
in
enter
popl
jecxz
xchg
sbb
in
enter
jo
or
xor
xor
orb
cli
roll
stos
dec
mov
sub
lret
and
popa
sarb
movsl
sub
out
xchg
mov
pop
dec
jp
dec
pop
add
xchg
pop
sbb
adcl
sub
pusha
push
dec
into
and
popf
mov
push
sbbb
xor
add
sbb
cmc
fcoml
imul
xchg
cltd
push
idivb
mov
sti
and
test
idivl
dec
cmpsb
xor
enter
mov
sbb
sub
sub
cmpsb
ja
dec
sti
xchg
orl
je
jle
xchg
fbstp
pop
adc
insl
scas
jmp
gs
and
sbb
notb
mov
cmc
jb
outsl
int
jg
xchg
push
fwait
das
xchg
ja
call
fsts
jl
leave
loop
mov
cld
aas
sub
mov
cwtl
and
and
inc
or
pop
inc
adc
xor
pop
cmpsl
cs
hlt
cld
lds
or
xchg
xor
mov
aaa
aaa
push
in
push
cmc
stos
or
outsb
push
push
pusha
mov
cmp
cmp
das
jl
jo
push
cmp
fadds
pop
inc
dec
mov
enter
jb
mov
rcrb
cmp
adc
movsb
sbb
mov
adc
or
cltd
mov
gs
faddl
push
es
jle
adc
pop
repz
stos
icebp
mov
jmp
dec
je
mov
jmp
cmp
ja
sub
out
sbb
and
mov
lods
je
sub
mov
ret
and
sbbl
pop
sbb
mov
movb
mov
jbe
or
jbe
cmp
add
negl
ss
inc
icebp
adc
jg
les
sti
xor
jnp
mov
mov
sarl
adc
out
lret
push
incb
jae
lock
test
adc
push
jbe
pop
and
pop
scas
mov
adc
idiv
and
mov
sti
cmp
addr16
or
mov
lock
repz
stc
mov
push
scas
sahf
sub
stos
fists
xchg
inc
es
shlb
lret
bound
loop
sti
lret
in
cmpsb
imul
incb
inc
jnp
mov
add
mov
test
dec
fadd
jl
out
inc
rorb
xlat
cmc
xchg
lods
cmpsl
js
hlt
clc
cltd
rorl
mov
cmp
addr16
jecxz
push
pop
out
imul
andl
push
jns
push
add
cwtl
cmp
cmp
iret
push
popf
xchg
mov
arpl
enter
sub
push
sbb
jbe
mov
pop
jnp
sub
into
imul
pop
iret
mov
icebp
ret
jmp
testb
cmp
cltd
mov
scas
ja
loope
mov
cmpb
sub
sbb
loope
rcll
mov
inc
dec
loop
idivb
les
fadds
and
enter
add
and
cmp
lea
rcrl
push
jns
push
push
jns
jecxz
xor
repz
xchg
mov
in
mov
das
pop
mov
subl
stc
xchg
outsb
xor
pop
sub
sarb
repnz
or
push
scas
xor
jecxz
adc
inc
push
sbb
sbb
pop
pop
out
aaa
js
and
cmpsb
orl
ss
sub
or
aaa
scas
and
hlt
or
xchg
ss
scas
test
in
pushf
push
out
fldz
dec
mov
inc
addb
pop
push
cmp
rcl
sub
mov
repz
je
sbb
push
push
nop
jecxz
sub
imul
sub
lods
loope
ds
push
imul
mov
push
mov
test
lds
mov
sub
lock
mov
xor
dec
dec
xorb
bound
bound
or
repnz
sbb
cmp
push
pop
stos
cmp
cmp
cmp
lahf
in
mov
inc
xchg
and
sbb
nop
loopne
rol
insb
mov
aas
push
pop
out
call
sub
jne
scas
insb
xor
stos
xlat
pop
inc
addr16
mov
out
pusha
outsl
daa
imul
xor
pop
inc
inc
add
cmpsl
sub
pop
sub
sbb
std
mov
cli
out
jmp
mov
inc
adc
cld
push
inc
cmpsb
and
adc
aad
leave
inc
popa
enter
por
bound
jle
in
push
add
in
add
dec
pop
mov
negb
jns
scas
imul
jae
add
cmpl
jbe
test
in
sub
mov
jg
jle
in
xor
push
add
gs
sbb
leave
mov
mov
jmp
loop
fstpl
lods
mov
inc
cmc
mov
paddw
rcrl
dec
sbbb
mov
inc
test
pop
ss
xor
fcomps
mov
rcrl
lods
or
and
mov
jecxz
cld
movsl
imul
out
mov
xchg
icebp
clc
or
out
shll
call
mov
fcoml
adc
test
inc
sbb
or
or
xor
imull
jno
xchg
fsubrl
fcoml
into
fstpt
cmpb
inc
adc
psubb
out
add
data16
sbb
push
lock
push
scas
leave
fbstp
jno
in
mov
push
cmp
mov
jg
push
mov
das
ret
xchg
adc
hlt
ret
repz
aam
aad
stos
les
mov
ss
and
mov
cwtl
cmp
jo
int3
pop
add
ret
mov
data16
mov
insl
mov
sub
or
jae
nop
add
sbb
dec
xor
testb
lods
loopne
pop
mov
pop
adc
aad
outsb
fwait
stc
test
mov
inc
push
inc
ficoml
sub
aaa
decb
aad
pop
xchg
enter
insb
push
xchg
cmp
cmp
out
imul
imul
mov
mov
stos
xor
aam
scas
mov
sbb
mov
add
xor
cmpb
and
sbb
sub
pop
fsubs
mov
mov
stc
loopne
jl
mov
or
iret
sbb
je
adc
cmpsl
xor
shlb
xorl
cmp
loopne
loopne
inc
pop
and
shl
jae
add
or
sub
dec
out
imul
xchg
dec
adc
cli
int
or
mov
add
fisubrl
cmp
es
lcall
pop
sub
pop
mov
rcrb
iret
push
xlat
lds
test
into
push
ret
mov
jne
push
bound
and
mov
mov
dec
jbe
cld
fsubs
sbb
xlat
push
fwait
pop
popa
pusha
test
shrl
xor
pop
push
xor
push
or
in
or
mov
push
mov
or
movsb
dec
insb
mov
xchg
lock
and
aam
int3
test
sub
inc
shrb
pop
stc
insl
fcompl
cwtl
pop
stos
jbe
xchg
push
adc
xchg
xor
dec
add
insb
inc
hlt
jbe
xchg
jp
jl
pop
jno
add
push
shrl
cmpsl
xor
lcall
arpl
and
in
int
jo
mov
in
rcr
cmp
daa
aad
mov
sahf
clc
push
test
pop
dec
xor
rolb
mov
mov
mov
pop
adc
in
mov
or
iret
or
iret
jno
jge
or
in
jecxz
sub
jnp
jmp
rclb
clc
sub
cmpl
stc
std
add
loope
cli
test
adc
insl
js
xor
sarb
dec
xor
test
test
or
imul
iret
mov
inc
push
mov
sbb
bound
sbb
push
mov
inc
mov
pushf
pop
fisttps
cmc
fbld
fcmovnbe
movsb
xlat
gs
aad
cmc
push
lods
cmp
cld
adc
adc
sahf
shrl
dec
sub
es
clc
or
fwait
mov
jle
fnstenv
rcrb
movsl
iret
mov
push
xor
sbb
lret
mov
dec
sahf
jae
icebp
or
test
inc
xchg
leave
icebp
inc
aam
or
fsubs
add
hlt
adc
arpl
xlat
and
stos
sub
fldcw
sub
cmp
jle
push
aas
mov
cmp
mov
out
jmp
fisttps
ficompl
xchg
adc
mov
ret
and
aad
cmp
iret
inc
cmp
mov
dec
sti
pop
pop
test
jge
and
sbb
xchg
aad
or
or
push
pop
jnp
repnz
lds
imul
adc
pop
cmp
jno
ljmp
fnsave
mov
push
dec
out
jl
inc
aas
hlt
mov
adc
jo
into
xlat
or
sub
jecxz
enter
bound
inc
stos
gs
xchg
sbb
inc
pop
push
inc
adc
pop
mov
notl
cmpsb
jmp
xor
rcr
nop
loopne
sbb
leave
jge
mov
sbb
sub
add
testl
in
pop
ljmp
mov
scas
test
dec
fisttpll
mov
mov
test
and
adc
sub
in
adc
je
das
and
jno
enter
mov
jno
cli
insl
cli
out
fs
rcrl
popa
mov
movnti
hlt
cmpsl
sbb
out
rcrl
or
inc
lcall
sbb
fstpl
push
jecxz
mov
arpl
ja
stos
scas
imul
jmp
hlt
sbb
jo
or
sti
inc
insb
mov
jb
and
aad
repz
push
push
test
mov
sbb
jno
ror
ret
rol
jmp
fimuls
loopne
in
mov
lret
cmp
lods
mov
adc
sub
hlt
and
lret
loope
adc
int
inc
mov
in
jecxz
cld
sub
cs
in
xchg
pop
addr16
inc
push
rcll
xchg
data16
test
mov
jmp
shr
je
push
mov
data16
pushf
dec
stos
sub
cmp
mov
dec
mov
js
sbb
je
mov
inc
xchg
sbbl
aaa
adc
push
sarl
mov
xchg
jne
mull
add
lahf
fwait
cmc
mov
xchg
mov
addr16
sbb
sbb
test
xchg
push
dec
ficomps
arpl
flds
jmp
ret
ja
xchg
test
xor
mov
ljmp
insl
fiadds
lcall
test
mov
out
mov
sub
pop
sbb
pop
push
cmc
ret
jmp
cmpsl
xor
clc
cmp
daa
movsb
jno
insb
adc
adc
fists
add
leave
lret
push
dec
int3
leave
fldl
pusha
mov
sbb
inc
cmpb
lahf
jbe
jp
bnd
pop
mov
and
cmp
sub
rolb
xchg
aam
mov
cmp
mov
mov
clc
rcll
orl
les
adc
inc
add
out
leave
add
mov
jecxz
pop
dec
pop
into
mov
dec
inc
shlb
lcall
test
mov
inc
xor
cwtl
mov
leave
adc
repnz
pop
mov
faddl
popa
jno
lds
pop
rcrb
into
fldl
scas
scas
pop
pusha
test
xor
mov
mov
jge
hlt
jne
sub
stc
in
inc
jge
fists
mov
int3
adc
pop
mov
sub
add
cltd
insl
push
in
out
adc
mov
aam
mov
hlt
cmpsl
ds
inc
repz
cmp
int3
push
clc
push
push
fwait
mov
add
jle
dec
mov
adc
and
jae
das
lahf
or
sub
lds
and
push
mov
out
add
mov
jns
mov
push
adc
aad
ret
and
adc
cmpsl
mov
push
add
sarl
jb
mov
or
add
int
push
push
jae
mov
mov
aad
pop
dec
ret
inc
adc
ss
mov
jne
clc
cld
inc
pop
sub
cltd
inc
or
rol
cmp
sbb
jno
mov
and
xor
sbb
popf
push
jecxz
adc
hlt
jmp
xor
test
xchg
push
lds
add
aam
out
push
xor
jg
scas
test
mov
in
xor
sub
mov
push
fbld
fnstcw
add
leave
loope
fs
jle
mov
mov
push
and
popa
rcrb
imul
js
out
push
ja
dec
es
xor
pushf
iret
sub
sahf
jmp
jge
enter
out
movsb
fsubs
repz
push
sub
mov
mov
add
gs
shl
enter
cltd
aad
dec
xor
cli
xor
jbe
aaa
dec
sub
add
orb
dec
ret
mov
sti
push
jmp
aam
out
jnp
add
lods
arpl
les
push
pop
jno
dec
into
aad
pop
add
mov
push
mov
mov
imul
mov
pop
add
xor
mov
test
dec
sti
call
cli
popf
cmp
out
ja
sub
sbbb
mov
push
fldenv
mov
out
sbb
fadds
cmp
pop
add
jnp
cmp
inc
aad
xrelease
into
mov
mov
mov
pushf
daa
into
shlb
sbb
sub
xorb
shrl
and
dec
lcall
ss
fcomps
pop
not
adc
mov
jge
mov
test
push
fwait
insb
push
push
mov
outsl
jmp
pop
cmp
sbb
sub
ror
add
or
add
movsl
in
pop
and
das
lock
repz
pusha
add
outsl
cld
jge
mov
or
xchg
mov
cmp
int
add
mov
imul
call
loope
inc
push
mov
popa
push
lock
imul
div
sti
shrb
ficomps
mov
push
adc
sbb
jo
and
pop
mov
lea
out
jb
adc
ret
push
rorl
jnp
cmpsb
mov
cmp
mov
sbb
xchg
add
xor
dec
pop
xor
push
mov
dec
dec
inc
xchg
and
adc
je
test
sbb
das
mov
inc
inc
pslld
cltd
xor
jae
sub
shlb
rcrb
testl
fnstenv
pop
and
push
push
std
ja
aas
jne
push
inc
sub
jne
xchg
cmp
cmpsl
pop
dec
je
inc
int
stos
sbb
inc
shlb
lock
scas
out
or
jl
cli
das
push
dec
movsb
test
shl
stos
cmp
ljmp
xor
rolb
mov
shrb
mov
inc
lods
xchg
fildll
out
cmp
xor
push
xchg
stos
movsb
xor
pop
and
movsb
insl
adc
cmpsb
incl
repz
daa
cli
cmp
sub
dec
jp
stos
jle
repz
stos
roll
jp
pusha
rcrb
stos
shr
or
jae
add
sti
push
xlat
dec
insb
aaa
mov
imul
aaa
sub
mov
mov
mov
rcr
and
cmpsl
push
or
call
jne
sbb
inc
or
push
flds
xor
push
add
sbb
sbb
fpatan
sub
jno
ljmp
jl
add
int
mov
dec
in
clc
push
and
dec
inc
out
fldl
add
and
test
dec
xor
gs
push
cwtl
daa
sbb
cmc
mov
add
adc
ljmp
mov
cs
and
shll
xchg
cli
sbb
jbe
inc
inc
xor
xchg
mov
out
push
rorb
js
jmp
and
fisttpl
jb
add
xchg
xor
push
ja
inc
xchg
cmp
jne
add
dec
mov
les
inc
and
fbld
stos
dec
push
inc
loopne
ds
xchg
inc
in
in
in
repz
pop
jno
sub
mov
push
mov
or
sub
mov
pusha
fwait
dec
out
outsb
das
sub
test
stos
ja
dec
push
cmpsb
lcall
and
xorl
imul
stc
popa
lret
stos
aas
and
in
repnz
test
add
lcall
fcomps
cmp
jae
add
jp
addr16
inc
lods
cmpl
in
repnz
fistl
or
xor
xchg
sbb
jle
cmp
jb
jge
js
cmp
ja
mov
mov
pop
mov
cmpsb
sbb
jge
mov
inc
adc
cli
leave
arpl
mov
sbb
aad
orb
enter
push
and
mov
pop
sbbl
and
pop
lahf
rcl
movsl
push
icebp
aad
xchg
xchg
ficompl
and
jae
jne
dec
scas
cmp
arpl
fmull
mov
mov
cmc
mov
inc
push
popa
inc
dec
lods
lods
sbb
add
add
pop
arpl
arpl
imul
orb
pusha
push
rol
test
in
aam
sub
insl
mov
mov
pop
out
sbb
stc
psubusw
cwtl
sub
fdiv
enter
out
roll
jle
add
std
fsubl
ret
cmpsb
mov
add
cwtl
loop
xchg
jl
js
in
cmp
outsl
fnstsw
mov
xchg
jp
inc
pop
repnz
or
jno
les
mov
adc
repnz
xchg
fnstcw
das
mov
dec
inc
push
pop
push
fstl
in
daa
push
mov
fists
mov
rcrl
mov
mov
dec
dec
push
mov
mov
roll
mov
pop
into
pop
fidivrl
enter
xchg
les
rorb
dec
and
cmp
jns
lret
int3
xchg
jne
test
xchg
and
fstpt
das
in
xor
sahf
rol
push
cs
mov
push
sti
or
aad
inc
xor
lret
test
mov
imull
sub
cmp
sbb
xchg
hlt
nop
in
adc
sub
add
xchg
mov
push
mov
cmp
jae
mov
jb
sub
push
sti
push
add
mov
mov
sbb
loop
pop
adc
inc
daa
mov
cs
mov
pop
test
mulb
arpl
jp
and
sub
in
push
sub
je
daa
inc
ret
clc
cltd
sbb
call
lahf
push
ret
mov
and
mov
out
lds
arpl
mov
leave
cld
push
push
jno
lock
fisttpl
neg
es
lods
mov
arpl
iret
dec
sti
int
stos
aaa
rorl
aam
scas
mov
sbb
mov
dec
pop
jb
mov
jae
ds
js
xchg
mov
mov
pushf
sub
aam
daa
pop
lods
aas
fldenv
iret
dec
arpl
dec
add
mov
popf
dec
mov
xchg
les
sbb
pop
jbe
fcoml
mov
scas
push
dec
int
mov
pop
clc
lahf
daa
pop
xchg
cwtl
sub
cwtl
pop
js
xchg
xchg
add
out
and
or
push
add
dec
test
sub
imul
int
mov
and
test
mov
add
adc
loop
mov
stos
into
push
addr16
in
xchg
es
out
mov
icebp
cmp
add
fidivrs
or
clc
pop
clc
jno
orb
mov
ret
fsubrl
jnp
xchg
add
mov
push
cld
push
jp
or
mov
mov
aaa
or
mov
adc
mov
ds
xchg
test
cwtl
jno
cmc
stos
addr16
cmovbe
psubw
mov
push
inc
sbb
arpl
sbb
and
adc
into
adc
xchg
xlat
pop
and
jns
cmp
cltd
jge
mov
test
rclb
push
pop
and
cmpsb
jle
ret
sbb
inc
sbb
je
ret
cltd
and
inc
int
out
hlt
xchg
lods
jge
jb
popf
dec
das
or
sub
cld
repz
jmp
mov
adc
xchg
mov
mov
or
je
lahf
inc
js
fnsave
inc
sbb
stc
mov
cmp
sub
in
mov
loope
hlt
loope
cmp
jae
icebp
aad
aam
adc
ds
decl
lret
mov
mov
pusha
sbb
add
push
es
mov
pop
aaa
dec
stos
jns
sti
pop
movb
js
add
cmpsb
push
inc
jecxz
adc
sti
mov
gs
push
cmpsl
fisubl
into
pop
cmp
not
fbld
fdivrl
int
cwtl
xor
pop
pop
cmpsb
sbb
shl
icebp
push
sbb
retw
aad
mov
jne
je
movsb
sub
push
rorb
sti
mov
inc
jae
pop
fisubs
rcl
sbbl
adc
xchg
xor
cmp
add
cmp
hlt
pop
sti
ret
clc
pop
mov
mov
mov
in
pop
xchg
mov
adc
xchg
sbb
dec
cmpsb
arpl
mov
out
scas
adc
inc
mulb
dec
inc
cmp
dec
cmp
sub
xor
mov
inc
fisubrs
nopl
imul
clc
rolb
dec
mov
or
cmc
std
xlat
xor
pusha
mov
xor
mov
sub
idiv
jle
mov
sbb
test
sbb
shrl
cmpsl
pop
push
mov
ror
rcrl
nop
mov
lods
cmp
sbb
pusha
ja
insb
adc
rcrl
movsl
jae
ljmp
inc
cmpsb
frstor
shl
sbb
and
aam
add
mov
loopne
mov
out
fbstp
add
pop
mov
div
into
sbb
inc
adc
ds
xchg
mov
shll
enter
movsb
in
mov
ret
jno
fwait
repnz
jp
cmp
mov
xor
pop
idivb
push
sbb
shl
cltd
sub
jle
divl
sub
pop
sti
std
xor
scas
scas
sub
lret
sub
dec
fistl
sub
lea
xchg
ss
insb
xchg
arpl
int3
dec
mov
dec
mov
sub
jbe
scas
rcll
push
push
cltd
and
xor
jp
notl
lret
cld
lcall
test
cmp
scas
scas
loopne
mov
aam
xchg
lret
in
outsl
repnz
lods
aas
xchg
inc
xor
mov
mov
jne
fisttpll
cmp
or
sbb
js
cwtl
xor
pop
mov
fidivs
and
popf
jb
mov
mov
punpcklwd
mov
and
lahf
in
aam
ret
mov
add
and
pop
adc
mov
fcmovnb
jp
sti
push
jo
sbb
xor
cli
hlt
das
inc
loopne
popa
les
movsb
loope
popa
ret
mov
and
nop
xchg
fbstp
mov
adc
jle
ficoms
push
mov
arpl
in
ja
push
add
mov
out
mov
mov
cwtl
cmpsb
data16
imul
fdivr
and
ds
popf
lret
sbb
xchg
cmc
mov
add
sbb
rcr
decl
xchg
cmp
adc
sub
aad
jbe
dec
xor
mov
xchg
add
pusha
int3
pusha
in
push
push
popa
adc
add
imul
hlt
insl
jbe
lcall
outsl
push
jae
sub
stc
mov
or
into
in
or
push
xorl
pop
adc
adc
mov
mov
inc
add
push
sti
lahf
lret
mov
cmp
pushf
sbb
out
adc
and
fmulp
lods
repnz
ja
data16
sbb
jecxz
push
fistpll
cmp
pop
pop
leave
mov
ror
aas
push
lcall
pop
add
dec
jl
loopne
mov
and
dec
aaa
mov
pop
call
shrl
outsb
adc
and
jne
shll
push
pop
inc
adc
pusha
xchg
cwtl
shll
loope
test
into
imul
mov
dec
movsl
add
sahf
pop
hlt
fidivl
mov
adc
fldt
and
push
pop
sahf
scas
or
push
push
sbb
jle
push
fldt
or
mov
add
aaa
jne
mov
xchg
jl
cmp
roll
lea
mov
xor
jne
insl
or
mov
dec
subl
push
inc
xor
lods
ja
mov
movsl
pop
pop
stos
jge
push
aaa
cmpsl
cltd
subl
scas
in
ja
cli
mov
jns
lcall
adc
je
loopne
mov
mov
xchg
mov
addb
stc
into
inc
pop
xor
or
fiaddl
or
pop
sub
sub
or
cli
loope
ss
sub
or
mov
cli
clc
mov
jae
push
fstps
les
fmulp
sub
push
adc
mov
popa
push
fistpl
xor
int
push
scas
fldt
cltd
repz
jle
mov
lods
insb
mov
mov
sub
movsl
roll
cmp
jecxz
pop
add
pinsrw
or
and
in
xor
xor
and
loope
adc
mov
ds
mov
outsb
dec
mov
in
mov
dec
sti
xchg
or
pop
incl
adc
pop
push
or
or
inc
cmpsl
sti
cmpsb
fisubrs
ljmp
mov
sbb
mov
cli
and
inc
cmp
fidivrl
xchg
pop
push
in
enter
stos
popa
push
clc
sbb
nop
jae
mov
out
es
fscale
push
xchg
mov
int3
aam
orl
leave
mov
xor
jnp
push
and
push
add
jle
jl
lret
pop
add
add
pop
sbb
mov
pop
ret
mov
jbe
fldz
or
mov
mov
es
and
mov
mov
daa
rcrb
jg
rorl
dec
inc
mov
fildll
pop
jmp
imul
adc
pop
out
je
push
mov
dec
rsm
outsb
add
mov
jg
into
dec
cmp
jnp
scas
mov
adc
push
jmp
roll
push
stos
and
mov
rcll
ror
pop
xor
mov
les
mov
lods
insb
sahf
push
inc
cwtl
cmp
fiaddl
adc
and
cwtl
aaa
mov
mov
sub
movsl
mov
cmpsb
std
aas
insb
cwtl
and
fld
jmp
push
sub
loop,pn
and
popa
or
cmc
mov
stos
add
data16
stc
in
scas
jo
data16
test
sbb
insb
aam
and
mov
cmp
iret
sbb
fimull
dec
sbb
xor
xchg
mov
test
add
ds
out
test
cmp
mov
movsl
cmp
jbe
pop
imul
rclb
cli
mov
cld
lret
aas
or
scas
push
dec
push
cs
inc
sub
imul
fwait
neg
dec
adc
fiaddl
mov
loopne
and
mov
push
push
mov
mov
xor
imul
jne
add
mov
add
sbb
adc
adc
outsl
xor
add
and
cld
int
sub
fildl
in
mov
fildll
add
stos
cmp
sbb
cmpl
push
es
pushf
movsb
sahf
fsubs
push
fistps
jmp
leave
sbb
push
dec
imul
cs
lock
mov
jl
or
cli
mov
cmc
cmpsb
lret
fstpl
sahf
cmp
pop
jnp
fwait
cmp
aad
and
pushl
sub
jecxz
ds
dec
pop
lret
loope
xchg
sub
dec
mov
fisubrs
sub
gs
cltd
push
lret
adc
xchg
lret
xorb
cmp
stos
push
pop
adc
pop
das
add
inc
xchg
outsb
sub
push
ret
jae
adc
mov
ret
ret
test
xchg
sbb
in
loope
insl
movsl
lret
cmp
mov
lock
inc
mov
jl
jle
aad
in
mov
rep
inc
add
inc
pusha
neg
add
imul
xchg
in
rcr
pop
pop
cmp
inc
test
arpl
pop
sbb
js
xchg
inc
mov
je
pop
imul
ret
mov
and
lahf
das
daa
or
xchg
into
clc
push
xor
enter
subb
xor
pop
outsb
pop
mov
cli
enter
mov
std
je
inc
aaa
and
jecxz
aad
fisttpl
and
mov
mov
mov
bound
arpl
pushf
pop
mov
inc
xchg
xchg
sub
push
je
inc
aaa
adc
and
adc
mov
add
or
dec
lret
mov
aam
cmp
add
mov
xchg
jmp
std
add
jle
orl
push
mov
int
lock
in
call
mov
pop
cmp
mov
stos
pop
mov
dec
call
push
shl
sahf
movsb
inc
lock
mov
inc
xor
mov
lcall
lods
jbe
push
sahf
out
xchg
out
or
xchg
fstps
mov
scas
les
test
and
fsubs
fisttps
movsl
notl
fmull
enter
enter
movsb
push
jg
dec
mov
movsl
arpl
es
out
rol
mov
add
pop
xor
inc
pop
adc
and
pop
cli
push
cltd
insl
mov
lcall
jne
jns
pop
sbb
xchg
jecxz
dec
repnz
sbb
ds
xchg
pop
add
int3
xor
shll
mov
cld
cmp
jo
insb
push
or
in
dec
jl
stos
cli
gs
nop
jmp
cmpsb
gs
push
pop
push
sub
push
sahf
push
imul
inc
sbb
jg
mov
mov
out
xchg
sub
xchg
shrb
mov
mov
rorb
pop
pop
fs
mov
xlat
std
push
cmp
sub
jecxz
fwait
repnz
out
mov
jg
test
pushf
scas
xor
mov
and
or
pop
pop
cmpsb
fbstp
cmp
jne
push
jmp
pop
inc
out
mov
add
jmp
fsubrl
cltd
sub
dec
mov
movsl
sub
in
and
cmp
out
mov
mov
or
dec
push
mov
add
adc
in
call
les
pop
js
scas
push
xchg
ss
push
push
mov
xchg
bound
ja
cli
aaa
xchg
fcmovnbe
dec
mov
mov
jnp
cmp
jmp
and
addr16
jp
jb
mov
ret
ficoms
mov
sarl
dec
add
in
sbb
jnp
jge
dec
imul
ficomps
fistps
xchg
rol
or
cmp
scas
ljmp
dec
xchg
sbb
push
xchg
jg
sub
mov
aad
je
cmpsb
in
insl
mov
es
and
rolb
mov
mov
inc
push
push
test
aad
aaa
sbb
sub
jnp
inc
js
addr16
xchg
movsb
mov
or
stos
adc
pop
out
mov
dec
mov
cwtl
clc
int3
aad
lock
inc
push
outsb
xchg
test
and
mov
ljmp
or
add
jo
push
fwait
sbb
and
cmp
pushf
adc
addr16
gs
aas
adc
out
cmpsb
ja
jecxz
mov
or
int3
subb
mov
sub
cltd
outsb
dec
notl
push
repnz
sub
and
push
pop
insl
andl
rcrl
enter
repnz
inc
imul
sti
cli
xor
jmp
lds
std
push
xchg
sub
pop
stc
out
adc
fwait
mov
ja
dec
mov
mov
inc
mov
xlat
movsl
jge
inc
aam
popa
push
pushf
cli
cs
mov
dec
cmc
mov
pop
lock
loopne
fisubrs
mov
xlat
pop
add
loopne
jl
test
ja
sub
aad
sti
in
pop
fwait
insl
jo
pop
xor
or
xorb
in
mov
das
scas
mov
mov
sub
adc
push
xchg
in
sub
push
inc
int3
jb
fcmove
xlat
dec
adc
add
xorb
ret
nop
clc
mov
mov
jae
stos
call
push
xchg
popa
adc
out
mov
adc
jle
xchg
mov
fsubrp
hlt
pop
push
adc
jae
xchg
test
push
inc
cltd
xchg
movsb
sub
andl
inc
ret
rcrl
insl
ja
arpl
pop
fsubrl
mov
jg
repnz
xor
jle
cld
xor
mov
dec
sub
lods
cmpsb
mov
and
xchg
rcrb
fildll
imulb
inc
xchg
cwtl
ds
das
nop
push
cmp
test
bound
jae
mov
cmp
push
mov
cmp
add
test
xchg
pop
adc
pop
xor
cmp
dec
jbe
int
sahf
rolb
nop
sub
and
fldcw
lods
push
es
add
add
mov
adc
arpl
lds
jb
mov
sbb
clc
sub
and
sub
pop
xchg
imul
divl
xor
aam
jbe
jp
dec
mov
pop
pop
mov
jnp
ret
add
ds
cmpsl
rolb
dec
cmp
jno
loopne
inc
rorb
pop
test
cmpb
mov
sub
xchg
inc
cmp
sub
pop
xchg
mov
push
orb
push
mov
loop
ja
imul
in
add
mov
dec
or
stos
popf
mov
jp
cltd
lock
int
stos
cld
arpl
jle
pop
xchg
ja
push
mov
loop
jecxz
cmpsl
and
push
pop
push
mov
sahf
cmpsl
iret
mov
or
xlat
inc
lea
push
notb
scas
jo
and
lahf
push
push
test
pop
filds
mov
mov
push
cmp
cmpsb
lods
sbb
and
rclb
push
xlat
gs
mov
mov
jg
test
cmpl
aas
loop
adc
loop
fmuls
fwait
jbe
stos
cmp
and
mov
repz
jge
push
arpl
mov
push
shrb
xchg
stos
dec
inc
sub
push
mov
loope
out
dec
scas
jns
push
sbb
add
movsb
repz
push
shr
and
fcmovb
or
jp
mov
sbb
orb
dec
gs
shll
hlt
out
pop
sbb
incb
inc
inc
pop
mov
hlt
scas
mov
lds
repz
jbe
sub
xchg
xchg
es
lahf
xchg
cwtl
arpl
inc
loope
jmp
lds
mov
jne
dec
push
pop
pop
push
inc
out
mov
pop
js
fcmove
jge
mov
arpl
nop
scas
scas
xchg
jmp
and
cmpsb
pop
cmp
dec
mov
aad
fstp
inc
jle
loop
lods
scas
adc
mov
mov
pop
or
test
adc
mov
jnp
outsl
rep
push
movsl
sbb
stos
clc
lret
popa
jp
add
es
testl
out
int3
and
clc
inc
mov
push
or
outsl
dec
jns
xor
dec
lcall
inc
xchg
inc
lds
or
inc
mov
mov
ljmp
int3
xlat
dec
xchg
sti
popa
js
bndldx
ror
sbb
je
mov
pushf
mov
rcrb
lahf
nop
push
push
orb
inc
sbb
mov
push
out
in
imul
das
pusha
out
out
lods
mov
repz
mov
inc
push
out
and
sbb
adc
adc
xchg
sbb
int3
pop
pop
lcall
insb
lret
and
into
aam
mov
mov
aam
add
rol
push
pop
push
push
sub
mov
loope
repz
mov
or
mov
jg
adc
fsubrp
insl
xchg
jp
lds
inc
pop
mov
mov
testb
mov
xor
xor
xchg
outsl
repnz
add
add
add
mov
add
sbb
mov
es
add
lret
mov
mov
mov
pop
popf
pop
lock
sti
les
scas
ret
and
jg
jno
mov
or
adc
add
adcl
stc
dec
cmpsl
jge
lret
notl
pop
adc
sbb
ja
filds
bound
cs
fs
lds
jp
js
and
rcl
loopne
hlt
fsubrs
out
aad
inc
cmp
mov
call
mov
xchg
cmp
mov
jg
sahf
movsb
or
loop
jno
and
loope
xor
push
je
mov
loope
sub
out
cmp
std
fs
or
jge
lds
mov
mov
xchg
jnp
out
mov
fs
mov
es
in
outsb
mov
sarb
mull
jle
mov
dec
rcrl
pop
pop
fstl
cmpsb
movsb
mov
sbb
test
lds
jns
test
ret
mov
sbb
xlat
mov
divb
cli
mov
push
sbb
lds
scas
mov
pop
lock
ds
pop
jle
jbe
cmc
xchg
add
sub
push
arpl
test
cmpsb
shl
xor
stos
mov
push
notb
and
addr16
xchg
dec
cli
sub
js
test
jae
push
push
out
ret
movsb
pop
loop
jmp
or
gs
jnp
std
clc
and
mov
cs
jl
jg
and
outsb
sub
fwait
dec
sub
mov
pop
cmp
pop
push
adc
inc
or
and
jae
sti
mov
paddusb
jp
push
in
jo
loopne
add
pop
mov
outsb
sbb
inc
jo
lret
jge
pop
cmp
ds
adc
pop
mov
sub
xor
sub
dec
cld
sub
iret
test
xchg
inc
loopne
cmp
mov
push
mov
cmpl
idivb
sbb
ret
cmpsb
mov
jge
popf
js
jg
and
pop
icebp
sti
cmp
shr
test
cmpsl
mov
or
or
cwtl
mov
shr
fdivr
sub
adc
divl
insb
scas
inc
xchg
cmp
xchg
pop
jb
cmp
sti
xchg
leave
push
dec
loope
subb
inc
mov
xor
or
sub
loop
andb
add
lds
jp
cltd
scas
sbb
xor
push
mov
xchg
fwait
jbe
push
imul
push
test
mov
bound
pop
insb
adc
cwtl
out
xor
xchg
hlt
xchg
stc
clc
out
jnp
stos
xchg
xchg
inc
push
mov
dec
cmpsl
mov
pop
jge
data16
mov
dec
gs
rcrb
out
lahf
lds
inc
xchg
and
rclb
inc
push
jmp
add
jmp
ljmp
adc
in
aam
iret
out
mov
in
scas
fdivr
enter
arpl
xor
sub
jns
call
or
das
adc
and
jno
xchg
mov
mov
inc
pop
xor
push
push
outsl
and
mov
fistpll
fmuls
mov
outsl
imul
mov
sub
pop
sub
into
mov
or
shrl
cld
fwait
ds
jmp
fsubl
fucom
out
shll
pop
in
cmp
push
inc
mov
lret
push
loopne
cmpsl
mov
jmp
jg
sub
insl
jns
jmp
loop
jecxz
push
inc
dec
aam
sub
iret
test
cld
fdivs
shll
jg
gs
clc
jl
ja
jns
and
mov
cmpsb
cld
ljmp
je
pcmpgtw
cmp
sbbl
repz
xchg
inc
shll
cmpsl
and
lds
push
lahf
orl
add
les
xlat
sbbl
addb
sub
enter
cwtl
aaa
adcb
adc
xor
stc
inc
mov
pusha
sub
add
jl
out
jp
jno
bound
cmpsb
popa
lods
adcl
mov
scas
imul
in
cltd
jle
mov
mov
test
mov
mov
sub
mov
fsubs
add
or
dec
aam
pop
xor
fs
fisttpl
mov
mov
inc
adc
fisttpll
cmp
dec
pop
inc
int
lds
push
push
add
sti
mov
push
movsb
cli
rorb
jbe
xchg
and
fildll
pop
mov
jns
outsb
jae
sub
jb
test
and
lds
jg
sar
js
insb
jbe,pt
xchg
test
ret
push
test
jb
das
repnz
rcll
xchg
mov
adcb
add
outsl
cmp
adc
outsl
test
filds
dec
jle
push
and
fildll
add
xor
sbb
mov
rcrb
cmp
fadds
sbb
adc
mov
enter
sbb
outsb
jmp
sbb
movsl
setl
dec
js
pop
or
adc
cli
int
pop
xchg
mov
push
mov
inc
stos
into
stc
sarb
nop
ss
outsl
cmp
sbb
push
dec
cmc
pusha
add
add
ss
into
pushf
jo
pop
xor
fwait
mov
xchg
cmpsl
scas
jecxz
pushf
loope
out
pop
rep
mov
mov
cmp
outsl
dec
mov
xchg
pusha
leave
or
iret
mov
xchg
cmp
imul
cwtl
int
inc
adc
ret
leave
jmp
add
dec
out
addr16
fdivl
cmp
test
sub
fstl
sub
cmpl
sbb
add
jl
push
push
cmp
fisttpl
sahf
adc
gs
pusha
ds
pop
pusha
and
cmp
xchg
mov
popa
pop
cmp
push
mov
mov
mov
xchg
adc
mov
in
or
popa
sarb
pop
or
clc
es
mov
cmpb
cli
mov
mov
int3
es
add
and
in
imul
add
fcomps
mov
shrb
mov
loope
push
ss
pop
jecxz
xchg
jb
inc
xchg
lea
fldt
test
cmpl
ret
xchg
rorl
add
fidivrs
pop
inc
lahf
cmp
popf
dec
xchg
xchg
mov
cmp
pop
andl
sub
insb
adc
dec
popa
sub
lret
fcomip
sub
fcoms
fs
test
dec
push
lahf
mov
in
popf
mov
not
imul
cmp
adc
inc
in
jb
and
dec
bound
out
and
xchg
pusha
mov
sub
lea
cmp
cmp
bound
mov
cmc
and
adc
jae
adc
enter
pop
into
fdivrp
jl
dec
pop
aas
sbb
fwait
cmpsl
dec
fistps
push
int3
ficompl
push
and
or
jecxz
sub
bound
fnstsw
movsb
rorb
enter
push
mov
sub
scas
pop
frstor
adc
jp
dec
push
call
lock
dec
jno
pop
loop
ret
popa
add
pop
inc
lcall
pop
fildl
dec
cwtl
adcl
nop
jg
push
xor
pop
mov
cmp
push
hlt
cmp
lcall
cmp
insb
cmp
cmc
push
xlat
pop
push
and
inc
in
ja
loop
sub
mov
lds
mov
iret
xor
mov
loope
fcomip
gs
sub
jae
fwait
jnp
pop
adc
dec
jp
daa
jp
flds
sub
jle
xor
sub
jle
pop
xor
jg
rcr
in
lods
repz
sub
and
fsubrp
mov
and
or
dec
cmpb
mov
sti
call
mov
and
lahf
ret
dec
call
sub
insl
cmc
sub
mov
dec
shll
fadds
and
or
add
lret
cmp
orb
rorb
ret
dec
or
fs
mov
xor
jecxz
imul
cmpsb
sub
sub
add
std
gs
push
pop
fmul
jo
xchg
mov
cmp
out
aas
adcl
jg
shlb
add
js
shl
bnd
mov
fwait
push
xor
jle
arpl
adc
stos
xor
xchg
fnstsw
js
ret
loop
scas
sub
xchg
fisubl
cmp
mov
push
cmp
mov
add
and
and
jl
arpl
cs
jnp
clc
fcomps
outsl
push
cli
sti
in
mov
jmp
add
jle
inc
jle
or
cmc
in
loope
push
adc
sub
and
add
dec
push
ja
jmp
xor
test
sbb
jle
fcomi
dec
icebp
or
push
adc
pop
das
inc
test
inc
dec
fmulp
adc
ss
mov
scas
sbb
and
popf
sub
int3
loopne
lret
mov
cmp
mov
ret
adc
fimull
insb
jns
insb
dec
lea
je
sahf
mov
mov
mov
inc
or
pop
rcr
sarl
dec
xchg
push
jne
mov
xorl
mov
push
cld
enter
cmp
rcrb
out
loop
ss
in
inc
inc
cmpsb
das
cmp
lea
xchg
fadd
mov
outsl
adc
sahf
and
nop
lcall
add
in
jae
mov
fsubrl
mov
add
addl
iret
cmp
push
mov
mov
or
push
push
pop
sahf
mov
inc
push
outsl
shlb
ret
lcall
pop
cmp
jg
xor
loope
js
push
xor
mov
js
stos
rcr
fsts
cmp
mov
out
test
xor
loopne
cmp
pop
sub
nop
pop
out
stos
iret
jp
mov
xchg
xchg
dec
adc
lcall
pusha
mov
adc
leave
push
and
sub
and
push
fiadds
xorb
stos
loope
add
enter
jns
aad
mov
adc
pop
mov
imul
adc
daa
sub
js
push
sub
sub
xor
jmp
add
lret
fadd
cmp
or
mov
and
xchg
std
jo
std
add
in
sbb
xor
xor
cltd
and
pop
jae
and
and
mov
std
cld
sahf
dec
add
cmp
sub
cmpsb
orl
cmpsb
cltd
movsb
adc
ret
jmp
sub
repz
rolb
adc
inc
sahf
cld
xchg
xor
push
mov
or
lahf
imul
das
mov
add
dec
sbb
dec
inc
jge
pop
add
dec
pop
cltd
push
mov
xchg
imul
mov
jbe
sbb
xchg
ffreep
fs
adc
leave
add
jl
adc
cltd
mov
inc
jg
mov
push
adc
mov
outsb
cmp
clc
jle
out
lods
mov
repnz
out
or
outsb
or
fstp
pop
cmp
aaa
test
cmp
cs
imul
lock
fildll
int3
mov
cmp
dec
sub
push
inc
push
lcall
loopne
cs
cmp
inc
cmp
fs
pushf
sbb
test
addb
jno
data16
push
movsb
or
les
xchg
sti
outsl
inc
flds
in
jno
and
stos
std
mov
mov
fwait
cmp
insb
dec
outsl
inc
aad
add
mov
out
add
cmp
push
arpl
and
mov
lds
ds
mov
push
push
pop
sub
mov
xor
mov
and
inc
push
lea
stos
xchg
ljmp
sti
fadds
dec
inc
int3
pop
cwtl
out
and
pop
xor
in
mov
adc
inc
movsb
mov
and
bnd
fistpl
sub
subb
and
cwtl
inc
sub
jbe
adc
xlat
mov
lods
sbb
and
mov
mov
adcb
dec
shl
pop
pop
push
cmp
sti
and
int3
xor
daa
pop
inc
xlat
lods
cld
dec
or
stos
clc
iret
outsl
bound
in
xchg
pusha
fsubr
cmp
xchg
add
call
lds
lods
xchg
bound
arpl
nop
jbe
dec
fbld
and
mov
sarl
push
sbb
sti
pushf
inc
mov
pop
addr16
lods
in
dec
in
inc
frstor
sub
push
mov
xchg
out
mov
sub
and
test
sub
mov
out
sahf
inc
shrl
cmpsb
add
dec
and
mov
push
xchg
pushf
mov
lds
in
and
cmpsb
pop
test
lret
call
mov
mov
pop
jl
fnsave
sbb
mov
fs
iret
add
sub
bound
aam
in
jae
sbb
mov
or
mov
rorb
add
push
aad
sub
aam
cmc
xchg
pop
leavew
cltd
ljmp
pop
fistl
push
add
and
xchg
insb
jge
sub
pop
mov
popa
or
mov
gs
bound
in
inc
notl
push
sub
int
enter
push
aaa
add
outsb
aad
or
out
fisubl
fwait
push
add
pusha
rcll
xchg
test
les
add
iret
out
adc
xchg
in
out
mov
dec
xlat
int
dec
xchg
fnsave
nop
lods
shrb
fldl
xor
fdivs
sub
icebp
popa
sub
sbb
inc
fisubrl
ja
jno
rolb
or
mov
les
cmp
lods
sbb
jne
sahf
cli
mov
inc
xor
jne
sbb
lods
addr16
in
rorb
push
xor
xor
cmp
pop
or
in
push
jmp
jbe
jo
popa
xor
je
sarl
mov
or
pop
cld
sub
lahf
cmp
mov
call
jmp
cs
clc
xchg
fwait
or
mov
fisubrs
mov
pop
out
and
mov
or
dec
into
aaa
loop
test
dec
pop
xchg
inc
cmp
movsl
lods
test
rolb
lcall
mov
sar
int3
mov
add
cmp
fsts
jb
int
das
mov
pop
cli
jbe
dec
sub
jae
push
push
xor
cmp
repz
push
dec
fprem1
lret
dec
sahf
dec
mov
insl
stos
jmp
dec
add
pop
icebp
sub
pop
sbb
imul
outsl
lds
cs
dec
gs
rcr
xchg
cwtl
ret
adc
sahf
xchg
popf
cli
arpl
out
ja
push
mov
xlat
and
and
pusha
inc
xor
mov
pop
adc
xor
dec
cmpsb
push
fstl
out
pop
mov
pop
push
pop
enter
inc
cmp
les
dec
fsubrs
jmp
jo
dec
jno
push
cmp
jae
xlat
mov
sti
ficompl
add
mov
sbb
push
push
cmp
outsb
pop
mov
clc
xor
stc
and
clc
fisttpl
adc
nop
in
out
data16
js
mov
inc
inc
lock
pusha
pop
mov
pop
dec
add
mov
fdivrl
sbbl
ret
add
addr16
pop
cld
add
rcll
cmp
call
jo
rcl
pop
mov
les
dec
das
data16
loopne
loopne
xor
pusha
ljmp
push
into
sbb
rorl
xchg
push
stc
and
ss
lcall
or
jae
inc
and
add
in
mov
xchg
jl
negl
mov
fldl
pop
mov
jmp
mov
push
adc
fidivrl
push
and
iret
xchg
insb
addr16
jecxz
lods
push
into
and
sub
shll
push
add
ds
jmp
lds
adc
testl
xchg
and
pop
mov
push
pusha
int3
pop
daa
mov
jns
add
std
mov
jne
cltd
jg
cmpb
fbstp
push
ja
in
aas
xchg
jg
mov
out
jecxz
iret
shlb
test
or
mov
or
test
sbb
in
jbe
jno
dec
add
outsb
or
gs
cmpsb
pop
cs
mov
fistpll
in
xlat
pusha
xchg
dec
xchg
mov
mov
data16
scas
inc
mov
rclb
xor
pop
lret
ret
lahf
sub
cld
adc
push
mov
lods
add
mov
mov
cmp
adc
jmp
loope
rclb
nop
loope
xlat
fisttpl
push
ss
mov
add
push
int3
in
scas
or
enter
pop
xlat
mov
lret
loopne
mov
lret
pop
fdivrl
cmc
pop
rcl
xor
das
push
testl
das
cmpsl
add
ja
jns
testl
dec
imul
aas
push
and
lods
ds
push
sbb
mov
pop
push
std
jne
cmp
xor
in
jnp
stc
adcl
sarl
jecxz
sbbl
imul
data16
fmuls
test
insl
shlb
cld
push
mov
repz
lods
and
xchg
xchg
push
test
mov
sti
testl
aaa
iret
jno
sbb
pop
int3
clc
cmpsb
popa
scas
mov
push
inc
scas
nop
xchg
or
rolb
push
pop
sbbl
xor
stc
movsb
aas
enter
rcr
stos
jmp
add
mov
lret
jae
btc
or
jno
adc
in
adc
cld
sub
and
and
fmuls
pop
push
pop
mov
add
outsb
loope
popf
mov
cld
mov
and
jb
gs
push
mov
push
jns
call
sbb
and
stos
xchg
jmp
stos
outsb
das
push
mov
test
mov
cmc
fnstsw
enter
cmp
sbb
sub
pop
mov
lea
or
mov
sbb
movsl
imul
lods
scas
cli
popa
jp
cltd
sub
add
les
jno
xlat
ja
push
sbb
test
insb
subb
scas
xchg
notb
lahf
mul
sbb
ja
inc
mov
sub
gs
mov
pop
push
in
add
test
push
icebp
mov
sbb
and
std
ljmp
ret
sarb
push
add
sbb
mov
pop
sahf
rorl
add
mov
sub
xlat
movsl
cmp
lock
out
js
jbe
sub
gs
sbb
pop
jecxz
mov
fcoml
negl
ljmp
and
xchg
xchg
icebp
fildl
lret
add
adc
pop
fwait
cwtl
fsubr
push
jne
inc
mov
es
mov
mov
notl
xor
mov
sub
aam
je
leave
roll
add
push
mov
in
into
sti
cwtl
add
insb
pop
dec
xchg
movsb
pop
push
cltd
iret
cmp
lahf
adc
sti
mov
xor
pop
addr16
aad
movsb
inc
test
popa
mov
and
jno
inc
pop
inc
aad
dec
adc
hlt
sbb
jmp
xor
push
dec
into
lret
adc
jnp
mov
adc
push
cmpsl
jo
mov
xchg
mov
cld
imul
fmuls
cmp
daa
scas
and
mov
pop
lcall
fildll
mov
or
jecxz
pushf
and
arpl
jp
add
mov
repz
xchg
cld
xchg
repz
lock
dec
jmp
mov
enter
or
aas
not
fdivl
icebp
test
lock
fisttpl
test
stc
leave
outsl
repnz
in
or
add
jnp
adc
ficomps
inc
leave
in
mov
push
stos
fnstsw
fs
push
std
fsts
or
mov
insl
jne
stos
mov
clc
mov
adc
add
stos
cmpsb
sarl
sahf
inc
mov
dec
push
sub
or
jb
loopne
daa
aam
cltd
mov
lahf
sbb
out
jg
jecxz
aam
scas
mov
pop
jbe
jle
adc
and
lret
es
test
pushf
sub
mov
mov
dec
rcrb
jecxz
pushf
int3
add
pop
scas
add
push
jg
mov
dec
aad
or
int3
rorl
lds
pop
xor
fsts
out
cmp
repnz
xor
das
mov
inc
sbb
jno
mov
hlt
push
in
push
sbbl
mov
les
bound
mov
dec
stos
enter
aad
mov
mov
jmp
pop
jl
xlat
call
add
jae
adc
int3
cli
aam
xor
add
insb
cs
mov
xchg
adc
or
xlat
xor
add
lock
sahf
out
adcl
in
arpl
adc
das
test
adc
out
mov
cmp
push
mov
xlat
pop
fbld
addr16
cmp
iret
jmp
scas
push
repz
dec
in
lds
fsubrl
or
idiv
jno
pop
outsb
icebp
rol
inc
xchg
xor
stc
lret
xchg
ja
mov
jp
movsl
in
push
fwait
jl
sbb
inc
mov
out
popf
push
scas
push
ss
pop
mov
jo
cs
xchg
cld
inc
arpl
dec
subl
js
mull
sub
adc
fs
cmp
aam
jnp
sarl
sub
stos
cs
cwtl
inc
xchg
int3
cmc
test
in
inc
aad
and
insb
pop
in
ss
cmp
roll
xlat
aas
push
pop
pop
std
mov
loopne
cmpsl
or
in
mov
jle
mov
aad
xor
js
movsb
pop
push
push
adc
xor
jno
xor
mov
lcall
nop
mov
and
jge
jp
pop
mov
sbbl
and
js
sub
mov
gs
xchg
push
dec
push
mov
sahf
xchg
ficompl
sarl
jle
insl
xchg
xchg
ds
dec
xchg
push
inc
outsl
pushf
fimull
inc
or
xchg
mov
sarl
or
mov
rorb
movsl
push
ret
xchg
cmp
mov
lcall
ss
xor
in
out
mov
xchg
es
sub
lret
cs
and
loopne
inc
xor
fimull
sbb
popf
ljmp
jge
call
push
or
aaa
and
sbb
mov
xchg
or
add
sbb
addr16
call
ret
pusha
pop
cmp
pop
sbb
sar
cmp
cmp
out
or
xor
ljmp
lahf
fildll
movsb
imul
adc
pusha
dec
loope
insl
insl
and
pop
sbb
push
scas
xchg
cltd
cli
aaa
cmp
xchg
add
or
push
and
pop
cmp
lcall
das
mov
lods
call
sti
sub
ljmp
push
ljmp
mov
push
fcoml
scas
lock
leave
ss
and
inc
gs
lods
push
ja
pop
push
frstor
inc
daa
insl
int3
sbb
cs
xchg
xlat
pop
xor
push
adc
test
pop
add
stc
jne
jne
icebp
cltd
in
mov
xorb
inc
in
hlt
mov
jno
push
cld
popf
dec
adc
clc
lret
popf
rolb
daa
sub
push
pop
ret
rcrl
jl
fsub
mov
cmpsb
icebp
dec
fcmovb
iret
pop
lahf
xor
aad
repnz
mov
mov
mov
mov
or
outsl
xchg
or
mull
in
test
adc
dec
loope
sub
mov
add
sub
lock
ret
pop
xchg
cwtl
outsb
xchg
and
icebp
xchg
jbe
nop
dec
aam
out
xchg
roll
frstor
in
jo
stc
xor
scas
enter
out
cmp
repnz
lcall
out
sbb
mov
popa
ss
stc
lock
sub
add
pushf
xchg
push
subb
cmpsl
jbe
stos
xchg
lret
inc
mov
insb
xchg
jp
mov
rorl
mov
jb
ljmp
andb
inc
divl
mov
lods
push
sub
lahf
xchg
es
repz
xor
jne
pop
mov
test
js
inc
dec
or
mov
jo
sarb
adc
inc
xor
clc
pop
scas
push
sub
stos
xor
jge
insb
xchg
and
or
iret
outsb
add
loopne
stc
fimuls
dec
shlb
test
dec
enter
jmp
cld
and
inc
into
push
push
testl
and
dec
mov
jb
ffreep
mov
push
fsubrp
push
xchg
scas
xchg
sbb
test
mov
in
xor
mov
test
push
or
push
subl
dec
dec
popa
lahf
cmp
das
arpl
out
jmp
sub
jo
pop
into
loopne
cld
jg
in
dec
mov
scas
adc
lods
ss
inc
mov
std
inc
iret
clc
shl
dec
sbb
in
popf
sbb
and
int3
jne
ja
lds
sbb
fwait
xor
loop
pop
test
out
mov
insl
add
roll
cmp
pop
push
jns
jp
lods
in
pop
out
sub
icebp
jnp
jl
sbb
pop
lret
shrl
int3
movsb
lods
jo
jmp
mov
cmp
add
cmp
das
cmp
popa
pop
test
xchg
call
adc
or
jp
mov
mov
jg
add
inc
dec
negb
into
daa
jnp
jecxz
pop
adc
mov
adc
mov
inc
mov
shrb
inc
add
dec
imul
mov
shll
sahf
add
mov
fwait
movsb
ljmp
imul
add
push
movsbl
fwait
mov
xchg
sbb
hlt
jno
movsl
pop
mov
mov
pop
sbb
pop
je
xchg
in
loop
add
push
sub
sub
inc
das
pop
adc
xor
sub
jmp
outsb
xchg
xor
test
repz
sbb
push
pop
stos
rclb
adc
push
ljmp
pop
movsl
cld
lods
loopne
enter
and
push
mov
lock
mov
inc
loopne
add
lahf
sbb
loop
into
pop
inc
jbe
mulb
mov
mov
std
xlat
gs
int3
adc
mov
fldcw
sub
mov
cmp
sbb
popa
or
push
leave
mov
rcrb
jns
scas
call
cmp
je
mov
inc
or
adc
cmpsb
scas
xlat
jae
push
adc
fs
in
add
jbe
mov
mov
push
mov
dec
cli
xchg
pop
cli
test
cmp
adc
pop
aam
mov
mov
aad
mov
xchg
aad
dec
gs
and
aas
clc
rol
push
stc
adc
sub
std
dec
fidivs
jb
cmp
cmp
cli
and
dec
fucomi
xchg
js
xchg
test
fistpl
pop
cld
dec
xor
sbb
xlat
ja
inc
mov
pop
xor
mov
out
mov
and
push
and
and
jle
mov
adc
shll
and
xor
rorl
cmpsl
xchg
mov
mov
rorb
inc
xor
mov
push
jl
xchg
push
bound
inc
les
dec
push
adc
push
daa
pop
insb
lcall
leave
int3
sbb
xor
rcrb
ffreep
xor
inc
mov
jae
xchg
push
xchg
sti
daa
adc
jl
cmp
adc
adc
jle
cmp
and
inc
leave
mov
push
ds
lds
pop
pop
pop
je
jle
sbb
inc
inc
dec
stos
ret
inc
or
xchg
dec
cli
movl
inc
cli
push
pop
and
pop
inc
outsb
or
pop
sub
cli
mov
into
repnz
pusha
mov
test
loope
add
out
dec
imul
adc
mov
pop
ja
ret
cmp
inc
jg
xchg
inc
mov
insl
cs
test
ds
mov
add
cs
fbstp
sbb
jno
and
push
sub
rorb
dec
ds
icebp
movsl
mov
mov
cmc
or
inc
mov
mov
sarb
add
pop
add
gs
push
int3
aas
pop
pusha
sub
lahf
inc
aas
mov
gs
push
jle
ret
xchg
sbb
lret
jb
pop
cmp
mov
mov
xor
adc
jecxz
mov
or
push
dec
sub
stc
insl
xor
add
cwtl
pop
and
ljmp
daa
movsb
add
cmp
jbe
mov
mov
clc
aam
incl
xor
pop
cli
aam
sbb
mov
cli
idivb
sahf
sarl
sti
jp
mov
sarl
popf
cmp
push
in
or
aam
inc
dec
fs
hlt
repz
imul
es
jge
jmp
push
inc
js
jo
lcall
out
jne
dec
mov
dec
gs
test
and
bound
xor
fyl2x
inc
mov
push
sbbl
xor
push
mov
mov
call
clc
dec
jg
and
sbb
cld
mov
aam
dec
push
adc
cmp
push
test
add
fnstcw
scas
lahf
fst
aad
push
inc
mov
lcall
or
fidivs
mov
or
inc
mov
data16
in
jmp
call
and
bound
rcrb
enter
jb
inc
sub
inc
pop
xor
mov
adc
call
out
mov
js
lods
out
aaa
js
add
xor
and
push
into
xchg
or
dec
loop
push
dec
sbb
aaa
pop
add
scas
mov
shl
icebp
sbb
sbb
xchg
dec
stc
xchg
gs
loope
rolb
outsb
int3
adc
icebp
repz
push
or
je
dec
xchg
leave
mov
out
leave
pop
lock
cmpsl
sub
add
imul
loop
mov
push
repz
xchg
mov
jmp
cmp
js
sub
dec
jl
adc
mov
aaa
test
mov
gs
cwtl
call
not
add
cmp
loop
add
cmp
jbe
push
push
int
cmpsl
leave
lods
jg
push
add
sbb
repz
outsl
dec
popa
aaa
mov
xchg
clc
and
ljmp
inc
in
xchg
addl
fwait
jl
enter
cltd
add
push
sahf
push
jp
aas
jge
xor
shlb
pop
fstps
sbb
insl
push
rolb
mov
pop
jl
arpl
movl
push
push
hlt
call
fldt
xor
iret
dec
lahf
notb
inc
jne
push
js
pop
inc
mov
fdivl
sub
sub
mov
leave
into
xchg
jg
jecxz
mov
add
xchg
fstp
ja
data16
cmpsb
push
push
mov
jecxz
jge
sbb
shlb
or
cmp
sti
adc
in
outsl
stc
iret
mov
jl
outsl
push
mov
jno
push
mov
mov
data16
lcall
lea
add
sahf
xchg
jle
push
outsb
sbb
adc
inc
std
inc
xchg
push
ret
inc
inc
mov
loop
je
pop
push
movsl
pop
pusha
subb
inc
in
xchg
mov
addr16
mov
add
cwtl
shl
sbb
inc
insl
jp
adc
imul
into
or
cmc
stc
and
mov
flds
xchg
popl
loop
test
jl
mov
push
sbb
jp
test
insb
xor
in
test
mov
or
cmc
int3
pop
mov
std
out
cmp
lcall
add
rcrl
xor
mov
ljmp
dec
ss
fs
popf
out
inc
push
js
xchg
stos
stos
fs
sbb
jb
inc
repz
mov
pop
or
nop
mov
sbb
add
inc
flds
daa
cmc
mov
insb
xchg
xchg
or
jbe
int
sti
dec
cmp
lahf
xchg
rcrb
xchg
cmp
push
push
jnp
jg
insb
cmpl
lea
popf
and
pcmpgtw
outsb
loopne
out
dec
addr16
hlt
mov
lds
push
cmp
mov
out
inc
push
mov
mov
lcall
cmp
add
sbb
daa
js
mov
jle
les
mov
imul
xchg
sub
sub
inc
jne
push
jne
push
imul
cs
mov
ret
gs
insl
loop
out
repnz
sbb
stos
push
je
cwtl
je
in
push
jle
sub
pop
ja
dec
aas
sbb
jo
icebp
cmpsl
mov
push
sbb
xchg
lea
ret
push
lret
add
imul
lds
addb
das
daa
fnstsw
xchg
inc
mov
jno
bound
push
inc
xor
lea
sub
push
xchg
pop
jp
fstpl
shrb
insb
lods
xor
out
lods
data16
xor
mov
xchg
mov
lock
fs
pop
push
repnz
or
sbb
pop
inc
mov
mov
nop
push
scas
cmp
sarb
fstpt
push
cwtl
inc
mov
and
mov
push
pop
pop
jnp
lea
lock
mov
rclb
lcall
mov
push
hlt
or
aad
mov
fsubs
jbe
push
jno,pn
xor
test
jp
mov
xchg
or
push
mov
pop
push
adcl
pop
rcl
icebp
out
fsubrl
dec
fisttpl
imul
add
movsl
cmpsl
fucomi
push
inc
sbb
mov
adc
xor
adc
mov
mov
mov
hlt
orb
movsb
lods
sahf
push
jle
push
xchg
mov
add
add
mov
or
jo
push
fnstcw
popa
loopne
loopne
and
xchg
adc
dec
mov
call
lret
cwtl
jbe
mov
out
fwait
std
test
shlb
cmpl
jg
in
repz
dec
rcr
fldcw
pusha
inc
jnp
xor
js
insl
rolb
cmp
clc
mov
cmp
mov
xchg
repnz
dec
adc
loop
jb
cmpsb
xor
popf
outsl
mov
jae
xchg
imul
lret
jp
enter
inc
add
xor
cmp
rorl
cli
jp
cmpsl
fdivrl
enter
mov
mov
sarl
arpl
mov
or
xor
pop
jg
cltd
test
in
out
in
jne,pt
testb
test
xor
adc
stos
xchg
mov
jmp
fcomi
sbb
dec
addr16
movsl
push
inc
mov
ja
and
sbb
arpl
iret
out
enter
test
push
clc
xchg
add
xchg
test
push
testl
js
sub
sub
cmp
test
mov
push
das
pop
mov
sub
addr16
cmpb
inc
test
fisttps
push
jg
push
mov
mov
mov
popl
leave
inc
mov
clc
jbe
add
int
int
addr16
scas
test
nop
mov
mov
je
pop
dec
repnz
sub
sbb
fcoml
push
ss
xor
mov
arpl
cmp
lods
mov
aam
in
or
pop
mov
out
jae
push
pop
mov
lods
fcomi
sub
jns
aaa
inc
xchg
sub
inc
hlt
faddl
nop
xor
push
or
pop
cmp
dec
mov
mov
call
lock
stos
xchg
out
inc
aaa
or
daa
cmp
and
jns
pop
mov
xlat
or
and
and
pop
movsl
insl
scas
pusha
lea
xchg
inc
int
jae
std
and
jb
mov
fdivrp
rorl
or
push
pop
inc
lods
test
xchg
jl
lcall
cmp
jge
mov
outsl
sti
xchg
mov
aaa
add
push
sbb
push
sub
std
imulb
mov
push
fadds
sbb
orb
out
jb
repz
stc
out
push
xchg
stc
mov
ret
daa
sbb
push
loopne
pusha
aam
cld
inc
test
mov
outsb
lret
out
insl
lret
ja
out
or
jecxz
and
adc
jecxz
std
dec
scas
xchg
inc
call
ret
or
mov
mov
inc
fdivs
mov
nop
jnp
or
lods
mov
xchg
jno
ljmp
icebp
stos
push
jmp
cwtl
add
sub
daa
decb
xchg
inc
cli
jns
and
pop
fcom
cltd
cwtl
aad
enter
push
sub
outsl
pop
xor
xchg
sub
fistps
ret
push
xchg
pop
mov
cli
sub
jge
fs
fistps
inc
jge
pop
mov
inc
out
pop
call
testl
jge
jp
lock
xchg
ret
imul
mov
lea
mov
fidivrs
mov
sahf
and
repz
cmp
pop
sbb
icebp
push
xor
adc
xchg
pop
xor
dec
je
ljmp
in
sub
or
inc
js
out
jmp
xor
adc
je
mov
aaa
mov
mov
xchg
mov
icebp
and
rol
stc
jecxz
or
and
in
rcl
loopne
shlb
jo
add
sbb
add
inc
xchg
adc
pop
out
push
mov
mov
es
pop
test
and
sbb
lcall
sti
and
mov
mov
neg
addr16
enter
xor
xor
xchg
mov
jbe
mov
pop
xchg
xchg
js
inc
sbb
jae
jnp
fildl
ja
cmpsb
cmp
inc
sbb
mov
push
arpl
and
xchg
jmp
cmpsl
mov
mov
sti
jns
cmp
dec
in
pop
pop
test
lea
inc
cmc
pop
sub
adc
fucom
dec
nop
mov
pop
push
adc
sub
sarb
xor
mov
add
add
fldcw
fisubrl
shl
cmc
mov
xchg
mov
mov
adc
sahf
ret
int
xchg
lock
mov
inc
cmp
pop
mov
out
leave
ret
dec
and
pop
sti
fbld
cmc
in
xchg
xor
loop
add
jge
xchg
bound
dec
push
sub
mov
sahf
aad
dec
les
loope
push
pop
loop
repz
addr16
jo
ret
cld
xor
dec
cmp
pop
in
push
or
jnp
xor
pushf
adc
sahf
adc
push
pop
inc
movsb
bswap
dec
jbe
stos
in
mov
mov
stos
lret
pop
mov
shlb
pop
popf
push
mov
orb
loop
in
or
outsl
adc
les
jae
rorl
inc
add
scas
push
jge
repz
and
or
ficoms
push
cmp
jbe
adc
test
inc
test
fstpl
cltd
inc
xchg
hlt
fwait
aaa
cltd
out
mov
dec
out
mov
xchg
fimull
xor
or
mov
jb
cltd
adc
js
mov
jg
pop
iret
int
push
pop
cs
sarl
xchg
mov
adc
jns
mov
and
cmp
fs
dec
jae
adc
sbb
nop
pop
hlt
nop
sub
push
push
add
pop
pop
icebp
sbb
inc
orl
lea
lock
jle
pop
outsb
pop
mov
adc
xchg
insb
cld
push
sbb
movl
enter
sbb
xchg
jp
mov
test
setp
pop
jbe
mov
mov
aas
jo
xor
std
sub
push
mov
lahf
out
jbe
xchg
mov
jg
lret
push
xor
nop
mov
and
enter
pop
scas
popa
fstl
lock
outsb
loope
pop
or
shll
xchg
sbb
xor
xchg
repnz
dec
sub
push
jbe
inc
hlt
aas
pushf
js
bound
sbb
fcomps
loope
xchg
mov
iret
jp
add
and
lds
in
mov
mov
jge
repnz
and
stos
adc
popa
mov
aaa
int
add
sub
outsl
or
popf
xchg
stc
test
jmp
adc
push
mov
fsts
das
add
cli
cmovs
ja
outsb
sti
mov
adc
lcall
inc
jmp
jne
push
mov
addr16
dec
sub
popf
mull
js
cmpsb
bound
cli
out
or
imul
in
enter
xorb
leave
mov
mov
mov
xchg
imul
out
enter
inc
testl
jbe
dec
cli
mov
dec
inc
insl
mov
dec
or
cmp
cmpsl
jle
stos
outsl
daa
cmpsl
inc
or
push
div
sub
arpl
popf
dec
imul
iret
push
adc
sahf
addr16
jp
mov
adc
xchg
addr16
pop
xor
nop
sarl
mov
call
mov
mul
push
mov
and
aad
imul
out
inc
fldenv
out
das
andb
pusha
xor
sysexit
pop
out
jnp
les
leave
pop
in
inc
fmulp
mov
loop
mov
or
stos
sarb
sbb
in
movzwl
jbe
jmp
cltd
cltd
mov
inc
mov
inc
test
dec
ret
push
sub
cli
repnz
add
mov
mov
add
dec
pop
in
fs
fisttpl
mov
pop
daa
jnp
adc
out
add
push
push
test
and
enter
mov
in
ss
inc
aaa
xchg
or
lods
mov
xchg
add
jecxz
adc
add
pushl
or
xchg
mov
and
es
pop
cmpsl
xlat
or
add
xchg
add
into
xlat
dec
cmc
or
shrl
je
or
stos
wrmsr
sbb
popf
lods
test
push
adc
inc
lahf
test
scas
in
sahf
cmpsl
clc
mov
shrl
outsb
lahf
repz
mov
lret
in
xlat
pop
ljmp
mov
imul
ljmp
loope
push
out
iret
int
sub
adc
sub
xor
mov
scas
cmp
pop
js
outsb
gs
add
sub
data16
jb
inc
push
pop
out
pop
pop
xchg
sbb
xchg
ja
fdivr
fsubr
mov
sub
pop
rol
add
push
gs
and
fwait
out
pop
sub
rcrb
insb
out
adc
fwait
into
cmpsl
int3
and
inc
cmpsl
mov
pop
xor
rorb
lret
bnd
mov
cmc
popa
mov
mov
or
sub
xor
xor
xchg
aaa
xchg
nop
add
dec
movsl
mov
imul
jp
mov
outsb
vcvtsi2sd
add
lret
lods
jb
push
dec
sub
jae
pop
iret
jns
jl
insl
leave
int
add
lcall
xor
ret
ficompl
cmp
and
push
stos
or
mov
lahf
xor
aaa
popf
cmpsb
jmp
xchg
insl
cmp
push
lods
bound
sub
add
sbb
sahf
pop
mov
adc
dec
push
mov
push
xchg
xchg
fnsave
dec
fisttps
pop
and
xchg
outsl
mov
sbb
testb
movups
sarb
mov
xor
loop
in
or
sbb
fcoml
insl
mov
cld
or
mov
xchg
xchg
sub
iret
lret
xchg
mov
mov
mov
jae
xchg
jmp
data16
cmp
cmpsl
sbb
sub
and
dec
rclb
dec
xchg
je
add
ja
mov
xchg
lods
outsb
test
fs
mov
xchg
mov
pop
cmp
and
sub
and
std
adcl
or
xchg
xor
inc
adc
in
enter
xchg
add
in
sbb
xor
mov
push
add
cmp
and
inc
and
cmp
roll
clc
mov
push
sbb
adc
fdivs
data16
fstl
pop
lahf
pop
mov
mov
rorl
inc
adcb
inc
xor
gs
out
cmpl
insl
sbbb
mov
rcrb
jle
sbb
mov
xchg
xchg
xchg
dec
or
popw
dec
xor
aaa
bound
fcomps
xor
mov
pop
lret
popa
dec
mov
scas
in
push
inc
imul
xchg
ljmp
test
int3
adc
dec
mov
pop
adc
inc
stc
cli
sbb
into
mov
mov
in
sbb
ret
pop
cld
mov
flds
lods
jg
insb
add
fs
jmp
mov
std
fnsave
jo
sbb
xor
daa
mov
cmp
sbb
or
xchg
mov
cli
mov
lea
mov
and
mov
addb
jb
xor
sbb
popa
adc
test
outsl
arpl
imul
mov
sub
inc
mov
xchg
pop
ret
lret
mov
sbb
jle
mov
repz
data16
ds
mov
and
cmp
mov
sub
scas
jb
or
and
push
ljmp
outsb
dec
aam
mov
sub
repnz
xor
adc
push
flds
addr16
inc
sbb
sbb
sbbl
test
fiadds
inc
jb
loopne
out
sub
inc
or
rorl
in
pop
dec
push
aad
dec
add
mov
js
in
or
or
mov
shlb
aaa
sub
int
xor
adc
jbe
push
shll
fwait
mov
and
dec
jmp
mov
push
imul
sbb
or
jae
xor
xchg
add
cmp
insb
lea
push
fstp
or
mov
aaa
jns
mov
sahf
push
adc
xor
ret
outsl
xlat
into
sarb
mov
mov
xchg
aas
sub
xor
filds
jge
lret
xor
js
fsubrs
cmpsl
and
test
sub
mov
cli
div
insb
mov
or
cmp
lods
xlat
push
out
push
push
fidivs
mov
mov
adc
es
gs
gs
lods
cmpsl
enter
jb
mulb
stos
mov
cmp
jl
xor
mov
adc
fsubrs
fs
stos
push
pushf
cmp
add
mov
sbb
dec
iret
jge
lock
push
call
jp
ror
imul
es
jo
sub
jb
insb
sbb
std
mov
inc
and
cwtl
popa
add
mov
int
jecxz
xchg
jp
cli
sub
pushf
mov
aam
enter
shlb
mov
divb
sarb
cmpsl
mov
mov
daa
cmpsb
scas
xor
dec
sub
fisttpll
stos
call
test
jb
sar
adc
sbb
xchg
scas
push
insl
inc
unpcklps
loop
adc
loopne
sub
js
mov
outsb
xor
xor
mov
sahf
repz
sbb
es
aad
push
mov
enter
dec
loop
push
cmpsl
mov
hlt
push
push
mov
lret
and
or
pop
sub
fisttpll
inc
mov
mov
mov
mov
lret
sbb
and
mov
insl
rolb
dec
sbb
call
xchg
add
cltd
and
mov
addr16
mov
lods
popa
xchg
cltd
rcr
and
mov
cmp
pusha
xchg
into
adc
lock
lods
inc
ja
orl
adc
ret
add
or
div
push
fidivrl
mov
mov
ficomps
arpl
dec
not
loopne
or
dec
pop
xchg
xchg
xor
roll
sub
jp
stos
mov
dec
mov
les
std
fcoml
mov
mov
clc
or
lret
repz
or
and
pop
es
popf
or
outsb
fisttpl
add
imul
hlt
bnd
mov
aas
repnz
inc
xchg
mov
int3
push
xor
popf
imul
jno
cmp
xchg
push
repnz
pop
ss
adc
mov
pushl
add
add
mov
enter
loopne
lret
sbb
fs
repz
ret
push
pop
mov
ljmp
loopne
addr16
push
dec
dec
loope
fwait
cwtl
pop
les
push
jnp
sbb
add
sub
add
pop
push
jnp
push
cltd
inc
and
test
add
movsb
mov
xor
ljmp
aad
sarl
lret
and
mov
aam
lods
jp
aam
ljmp
cmpsl
pop
adc
inc
or
movsb
scas
jns
cmp
inc
push
push
ljmp
mov
stos
in
jo
and
fadds
test
push
in
mov
dec
or
mov
dec
mov
sbb
push
mov
mov
aas
iret
daa
das
ss
and
cmp
stc
xlat
es
sub
js
sbb
arpl
fwait
xchg
movsl
fldt
fidivrs
in
inc
ret
xchg
in
push
fsubrl
mov
cmp
imul
jnp
xor
xchg
adc
test
rcr
pop
je
mov
cmp
mov
fstps
mov
je
or
pop
mov
pop
pop
movsb
sub
popa
or
inc
mov
push
mov
xor
adc
jb
push
arpl
xor
or
test
sti
cld
mov
dec
les
pop
add
addl
xlat
xchg
xor
add
sub
fdivrl
mov
iret
sbb
xchg
add
cmpsb
push
or
sub
sub
fcoms
popf
test
xor
mov
mov
xchg
dec
push
push
mov
cmp
pop
push
scas
sbb
loopne
icebp
sti
dec
movsb
clc
and
nop
sub
mov
pop
imul
stos
dec
or
push
xchg
inc
test
ficompl
insl
mov
in
aad
add
cli
mov
jbe
aad
pop
faddl
or
jecxz
and
stos
out
adc
int
push
sbb
int3
mov
or
xchg
lahf
jns
inc
pop
jle
add
into
or
enter
and
jbe
push
daa
lret
loopne
aaa
cli
jae
callw
test
add
loopne
in
ret
inc
mov
jbe
xchg
push
mov
jbe
cld
ds
dec
lret
scas
pushf
fildl
andl
out
fcomps
lea
mov
push
push
out
dec
mov
xchg
xlat
out
fsubs
xorl
popa
sar
cs
mov
inc
inc
pop
mov
lahf
loop
mov
add
xor
out
insl
outsl
inc
adcl
push
int3
mov
pop
or
inc
xchg
lea
jecxz
stc
push
mov
out
popa
sbb
fwait
out
cltd
scas
adc
fs
xchg
sub
cmp
inc
aad
push
mov
adc
jg
cwtl
cwtl
push
xor
and
fsubrs
pop
dec
sti
outsl
cmp
push
sub
push
lods
push
jne
subl
cmpsb
mov
mov
xchg
cwtl
mov
scas
lea
jo
xor
inc
stos
sub
dec
cmpsl
lods
stos
repz
push
int3
push
or
sbb
lcall
xchg
cmp
push
mov
xchg
nop
mov
fcom
int
adc
pop
test
subb
xchg
lods
cwtl
mov
aad
call
notl
pop
loope
je
and
ds
dec
sbb
out
lods
cwtl
fistpl
adc
jge
aam
stc
sub
add
sbb
xchg
jnp
cltd
and
sbbl
insl
mov
sbbb
mov
xchg
inc
outsl
adc
popa
imul
js
jecxz
scas
mov
imul
mov
test
mov
jae
mov
add
cmp
les
dec
sub
mov
mov
add
les
fsubrl
inc
or
push
and
ja
hlt
dec
mov
es
xor
mov
or
mov
bound
adc
int3
and
call
outsl
test
mov
repnz
not
dec
sub
pop
aam
mov
inc
lret
adc
adc
push
lahf
mov
imul
cmp
inc
jmp
pop
xor
std
daa
xchg
sbb
data16
sbb
fisubl
outsl
and
test
std
in
addb
and
push
fneni(8087
iret
sub
test
mov
pop
imul
and
add
sub
jno
addr16
out
inc
inc
fwait
ss
dec
addr16
jns
mov
in
sti
xorl
mov
adc
les
add
arpl
pop
imul
inc
out
fimull
ret
xchg
adc
outsb
cmc
in
pop
push
add
jmp
jl
sub
xor
push
or
in
rorl
mov
xchg
outsb
pop
push
mov
xchg
popa
jns
cmp
add
dec
push
inc
testl
addb
xchg
in
mov
and
add
pop
lahf
shlb
loop
jae
pushf
push
call
cltd
adc
cmc
xchg
shll
bswap
loope
push
mov
push
arpl
in
imul
inc
je
mov
lods
and
in
cmp
popa
cmpl
stos
add
mov
sbb
vcvttss2si
test
cli
ret
sbb
mov
cmp
dec
sar
sbb
xor
adc
lods
imul
push
popa
push
stos
movl
push
or
pop
sub
test
lock
inc
shll
ja
lahf
aaa
aas
jae
loope
and
inc
dec
es
iret
adc
push
int
icebp
xor
sbb
sbb
orb
mov
inc
push
cmpb
mov
mov
and
fistpl
idivl
sub
xchg
lcall
dec
push
adc
push
std
les
dec
imul
push
inc
add
loope
sbbb
lock
lret
fdivs
out
repnz
dec
in
and
addps
adc
jb
fimuls
push
cmp
sub
jmp
xor
add
outsl
jle
div
les
shlb
mov
jl
pushf
push
or
std
xor
aaa
mov
sbb
mov
jmp
int
add
negb
in
pushf
popf
shll
ret
sbb
push
shrb
int
pushf
out
loop
jecxz
jb
out
and
ror
xor
lock
das
add
dec
gs
in
arpl
loop
scas
movsb
mov
out
add
pop
push
and
jge
sbb
cwtl
icebp
iret
lahf
jecxz
adc
loope
xor
mov
shlb
daa
gs
je
jle
jl
push
ret
int
mov
ljmp
inc
pusha
xor
xorb
push
dec
nop
lret
mov
repz
mov
lods
inc
cli
jnp
sarl
ljmp
outsb
push
adc
xchg
lahf
aam
mov
into
nop
mov
or
and
cmpsb
inc
push
mov
jae
or
lret
in
fwait
aaa
and
sbb
sbb
add
es
or
movb
pop
lahf
nop
mov
add
out
dec
xchg
test
cwtl
pop
cli
mov
testl
pop
jbe
into
xchg
daa
insb
fcmovne
mov
adc
pop
in
inc
sbb
sbb
pop
mov
inc
notb
fisubl
push
add
icebp
cmp
pop
xchg
in
xchg
les
dec
test
iret
test
xchg
idivl
mov
pop
jnp
pusha
pusha
int
inc
popf
mov
xchg
inc
mov
fisttpll
mov
int3
inc
fwait
roll
or
pop
mov
popa
xor
mov
int
mov
xor
inc
cld
push
scas
pusha
cmpsl
cmp
hlt
cmp
adc
and
ja
js
divb
inc
jmp
dec
ret
aas
cld
mov
dec
cltd
lcall
jge
inc
mov
jmp
in
test
sbb
iret
push
xor
and
lret
add
or
cmp
mov
rcll
shll
mov
stos
jae
push
rorb
pop
xchg
pop
inc
sbbl
xchg
or
or
in
test
add
mov
in
sbb
sub
mov
out
dec
cli
repz
std
jae
lret
mov
dec
xchg
xchg
sbb
and
inc
in
cmp
jo
jmp
adc
cmp
adc
xchg
ficoml
and
cmp
inc
mov
shrb
cmpsb
arpl
jns
xchg
ret
adc
mov
repz
fsts
sbb
jbe
push
lahf
sbb
jbe
mov
pop
jb
xchg
fists
xor
xor
in
inc
lods
sub
jl
jne
in
fwait
stc
ds
mov
sarb
jp
xchg
das
call
xor
call
repnz
dec
sahf
sbb
loopne
mov
jp
pop
insl
nop
pop
ret
adc
jp
repz
xor
cld
scas
jmp
fstpl
sarl
daa
cmp
adc
mov
outsl
cs
inc
pop
das
adc
push
xchg
rorb
dec
icebp
stos
jl
nop
js
or
test
cmpsb
test
mov
lcall
jmp
mov
jg
xor
and
jp
lock
lahf
out
test
jle
mov
or
jne
mov
mov
mov
and
or
sbb
push
icebp
or
sub
sbb
dec
movsl
mov
fldenv
lock
pop
jo
xchg
mov
mov
xor
cmc
leave
dec
scas
jnp
popa
out
call
sarb
hlt
sahf
idivl
xchg
jg
lock
and
jle
daa
mov
int
push
sti
add
clc
inc
xor
ja
dec
jmp
inc
inc
add
iret
sbb
xchg
test
pop
or
insl
clc
pushf
inc
popa
mov
dec
int3
fsubrl
inc
dec
sbb
mov
pusha
outsl
in
test
push
xchg
es
push
mov
aam
sti
int3
ficoms
lret
out
enter
fs
add
add
add
sub
inc
and
inc
addl
and
mov
fwait
xchg
xor
repnz
js
dec
dec
arpl
xor
mov
jnp
jecxz
in
cmc
ret
popa
cmpsb
sub
pop
das
pushf
cmp
ja
sbb
pop
subb
inc
fildl
mov
sub
cmp
fidivrs
movsl
push
subb
inc
and
hlt
int
xchg
and
int3
scas
fwait
sbbb
mov
popf
js
and
lcall
fs
ret
or
into
mov
rcrb
mov
out
xor
jne
clc
or
pop
mov
test
xlat
sahf
repnz
sub
push
push
mov
push
pop
mov
cld
ret
pop
add
imul
dec
inc
rcr
cmp
stc
mov
testb
inc
popf
lahf
fwait
xor
lret
cltd
or
popf
pop
enter
mov
mov
dec
push
cmp
shll
and
lret
out
sahf
popf
mov
jecxz
iret
in
lds
inc
xchg
rcl
leave
mov
clc
clc
and
fisubl
jmp
jmp
es
lret
and
dec
and
sahf
dec
test
push
sub
sbb
push
orb
enter
xlat
stos
pop
and
pop
jns
ja
roll
jecxz
inc
cmc
mov
sbb
imul
mov
fs
xchg
loop
test
repz
push
mov
cmp
lahf
mov
adc
rorb
nop
pop
leave
lahf
dec
clc
stc
pop
push
ss
xor
sub
lea
mov
enter
jb
xor
push
ljmp
push
enter
and
outsb
sub
jl
cmp
dec
into
js
push
dec
daa
out
call
push
lret
or
cwtl
push
enter
sar
lds
lock
xor
sub
push
add
cmp
mov
jns
cmp
daa
push
xchg
into
cltd
cmpsl
sarw
sbb
subb
pop
dec
loop
dec
push
pop
xchg
and
movb
sub
jns
in
sbb
inc
adc
cwtl
ret
fcomps
mov
mov
add
dec
gs
or
adc
jle
push
ljmp
enter
jns
hlt
add
subb
push
mov
loopne
mov
fadd
push
ds
xor
push
sub
ss
mov
ss
stc
or
repnz
out
jecxz
jge
pop
std
mov
pop
xor
test
sbb
popf
add
adc
rolb
cli
jp
mov
scas
pop
cs
lret
movsl
or
mov
fsubl
loopne
mov
pop
cmp
fs
lret
ffree
mov
or
sub
movsl
jmp
insb
xchg
or
outsb
test
out
jae
bound
jmp
mov
cmp
icebp
adcb
and
arpl
ret
nop
and
add
incl
hlt
out
out
out
nop
dec
jne
jae
repnz
inc
xchg
jl
rcll
nop
pop
data16
aas
xor
sub
movsb
sub
push
imul
lods
insl
pop
jle
jp
into
add
cmp
ficomps
ret
stos
jnp
add
mov
pop
leave
inc
xor
xchg
inc
jne
loopne
or
cs
push
cmpsl
dec
push
test
stc
xor
xlat
sbb
fidivrs
dec
scas
repz
in
push
adc
das
loope
fidivrl
adc
es
popa
ficompl
mov
cld
movsl
cmp
imul
lock
jl
jo
out
js
adc
adc
aaa
cmp
cmc
sbb
js
cmp
or
and
pop
idivb
adc
xchg
pop
push
mov
lret
stc
mov
jne
xchg
mov
xchg
sahf
pop
in
fldt
xchg
or
xchg
cltd
movsl
out
scas
shlb
ja
inc
jns
xor
adc
mov
int3
xchg
das
sub
jae
jp
sarb
mov
mov
rolb
pusha
pop
or
and
js
pop
xchg
sub
mov
int3
in
push
cmp
add
xor
test
loope
mov
cmp
out
jl
jno
mov
pusha
push
out
push
mov
or
lcall
movsb
xchg
pop
push
insl
jle
test
pusha
mov
adc
mov
inc
mov
xor
jae
and
push
xor
jae
adc
lcall
test
and
popf
dec
lods
lods
mov
or
xchg
jmp
mov
jnp
leave
xchg
mov
push
dec
push
cmpsb
iret
int
jg
dec
sbb
shlb
sub
xor
ds
xor
xor
xor
movsb
dec
int3
inc
dec
addb
test
mov
hlt
loopne,pt
jle
pushf
jns
icebp
mov
data16
out
jnp
shr
push
icebp
dec
dec
fsub
dec
enter
test
xchg
sbb
and
stos
jbe
test
lods
mov
fsub
arpl
aad
and
and
loopne
or
adc
in
mov
fstl
movsb
scas
shrl
mov
xor
sahf
push
mov
add
into
sub
ds
idivl
scas
maxps
or
loopne,pn
cld
std
stos
shlb
in
add
loopne
out
dec
jecxz
pop
xchg
in
push
cmpsb
dec
adc
sahf
cmpsb
cmp
push
jo
in
movsb
cli
shlb
mov
mov
out
sub
pushf
dec
in
int
dec
hlt
std
add
cmp
jmp
adc
fsubl
sarl
jge
int
daa
lret
aad
xchg
loope
push
stos
cmp
in
aas
add
arpl
std
xchg
push
es
mov
fmull
sbb
push
adc
icebp
or
jl
push
sbb
jmp
bound
lods
data16
add
mov
rcrl
shll
das
fildll
pop
mov
rol
or
cmp
daa
pop
mov
and
add
sbbl
pop
js
mov
movsl
sbb
mov
mov
inc
movsb
or
sbb
xor
shrb
dec
stos
adc
divl
xor
lods
push
pop
pop
jmp
stc
pop
and
fdivl
enter
fidivrs
mov
sbb
cmpsb
into
je
inc
xor
lahf
jge
fiaddl
mov
push
out
dec
xchg
push
mov
int
filds
lret
adc
mov
cli
push
sarl
mov
mov
movsl
mov
test
xchg
enter
mov
cmpsl
pop
divl
js
xlat
mov
popa
xlat
xchg
jl
adcb
cmp
ret
mov
nop
fwait
int
xor
cld
loop
repnz
inc
loopne
jae
add
adc
dec
mov
push
cmp
mov
sarb
mov
test
lcall
out
push
fwait
sbb
sub
or
push
and
pop
cltd
aad
mov
push
inc
dec
fmulp
jbe
enter
into
push
cmpsb
cmpsl
pop
push
and
shrb
pop
arpl
fwait
and
cmpsl
add
lea
pop
xchg
shlb
out
push
mov
mov
jg
aaa
movsb
cli
je
inc
dec
jne
out
jge
jmp
icebp
sete
jns
fisubl
subl
and
mov
push
test
push
or
push
inc
scas
adc
sub
test
lahf
push
std
insb
and
cltd
orb
sbb
sub
mov
mov
xor
or
push
leave
call
mov
add
adc
sahf
inc
sar
popf
cltd
imul
mov
pop
outsb
or
loope
loopne
add
stc
lcall
push
rcrb
outsl
stc
aam
mov
xchg
arpl
cmp
sti
push
test
test
mov
pop
sbb
xchg
jle
aam
sbb
ret
mov
add
xchg
inc
lcall
and
push
cld
sahf
jae
sbb
sub
and
subl
ljmp
or
int3
lods
arpl
ret
std
jnp
fprem1
mov
stos
sbb
jle
repnz
sbb
push
jbe
inc
jnp
js
add
decl
stc
xchg
pushf
sbb
andl
mov
inc
test
adc
mov
and
dec
inc
add
xor
adc
cmp
jne
ret
lahf
or
out
pop
dec
insl
adcl
and
out
mov
aad
and
xor
mov
mov
popa
ss
andb
lcall
lcall
cmp
ror
daa
loopne
jp
lret
out
scas
mov
in
jbe
inc
mov
xor
xor
xor
xchg
xlat
je
push
push
push
dec
mov
cwtl
xchg
out
gs
dec
aad
scas
push
sahf
test
loop
pop
dec
xchg
pop
sub
movsb
rol
sub
pusha
push
jne
xchg
out
adc
int3
inc
js
jbe
fwait
jns
push
push
sub
mov
sahf
mov
mov
mov
imul
pop
inc
fneni(8087
shll
loop
test
and
cli
movlps
iret
ds
movsb
jp
sub
pop
fwait
test
es
sahf
sbb
mov
xor
lcall
cmp
repnz
leave
mov
movsb
inc
dec
paddsw
leave
xor
imul
mov
sbb
inc
sbb
cmp
lahf
push
inc
sbb
je
add
pop
xor
mov
push
sub
sub
in
xchg
hlt
xor
pop
call
cmp
or
movsl
or
test
imul
cld
sub
subb
leave
pop
mov
in
ljmp
and
inc
divb
scas
int
out
dec
pop
xorl
lock
pop
push
sub
xchg
jecxz
and
scas
data16
iret
mov
jnp
je
jne
mov
addb
cmp
pop
bound
xor
adc
or
aas
fiaddl
lret
inc
jp
mov
fcomps
mov
pop
jns
pusha
cmp
ss
and
cmc
loop
push
cltd
and
ss
decb
xchg
or
mov
insl
ja
test
sub
jge
xlat
subb
jg
push
inc
lea
mov
bound
or
out
xor
mov
adc
lahf
popf
insl
jo
stos
push
mov
sbbl
push
dec
fstps
lods
lret
les
lret
mov
and
push
add
adc
cmpsb
rol
das
adc
push
ss
paddsw
add
data16
jmp
fwait
ds
and
in
cli
outsl
xor
data16
cltd
fsub
xchg
cmpl
mov
inc
or
lret
sbb
hlt
sub
cmp
mov
dec
inc
xor
pop
shll
cld
cltd
jno
push
dec
pop
jmp
fcomi
mov
fcomp
lds
cmpsl
sub
xlat
cmpsl
test
cltd
inc
negb
mov
and
int3
push
js
fwait
adc
mov
repz
nop
je
fisttpll
in
push
in
mov
lods
sub
int3
scas
ret
int3
sti
mov
clc
lock
xchg
cmpsb
xchg
adc
aad
mov
mov
mov
xor
les
push
hlt
data16
sub
lods
jmp
xchg
and
lret
shlb
cmp
pop
sarl
xchg
js
adc
dec
call
test
je
test
out
test
add
test
jmp
nop
sbb
orl
push
pop
cmc
rol
cmp
jnp
stc
add
pop
gs
jo
subl
dec
sub
cmp
popf
jmp
pushl
add
in
leave
mulb
leave
addr16
clc
cmp
outsb
pop
cld
popa
xchg
dec
gs
or
sbb
or
fstps
sbb
adc
cs
dec
sub
mov
jg
xor
add
dec
popa
adc
outsb
xor
inc
loop
xor
sub
daa
cwtl
push
dec
in
mov
lcall
jo
mov
cld
pusha
loopne
cmp
stc
test
int
sub
sub
mov
nop
mov
and
mov
cmpl
mov
dec
icebp
sahf
addr16
push
hlt
inc
xlat
mov
mov
movsb
lds
xchg
and
cs
jg
mov
in
les
pop
pusha
inc
cwtl
sbb
out
adc
cmp
fmul
gs
imul
mov
fiadds
fwait
je
jns
or
aad
ja
test
xchg
fldenv
sbb
fs
clc
push
sub
jl
loop
loopne
incb
mov
or
cmp
hlt
mov
push
popa
dec
shlb
mov
testb
out
call
pop
fmulp
cmpsb
int
daa
mov
lahf
xchg
stc
outsl
push
sbb
bnd
jns
dec
cmp
call
add
push
mov
add
push
scas
repz
jns
iret
inc
in
addr16
or
in
add
loope
cmp
push
mov
inc
dec
adc
repnz
movsb
adc
mov
fwait
sub
xchg
outsl
jl
cmp
inc
pop
aam
push
movsl
call
xchg
push
push
sahf
pusha
dec
or
dec
dec
dec
fildl
lret
jb
pop
inc
xor
xchg
popa
xchg
cld
dec
jg
mov
sarb
imul
js
add
and
inc
lea
lock
outsl
or
or
pop
jbe
push
ret
std
es
jo
jne
mov
sbb
orb
adc
xchg
inc
addr16
jnp
pop
mov
push
enter
cli
ja
and
add
cmc
stos
adc
andl
mov
push
sub
rorl
and
jle
adc
in
ret
shll
lea
scas
dec
xchg
cmc
mov
and
sub
inc
inc
mov
push
cmc
pushf
jo
push
or
jmp
xchg
cli
lret
sarb
or
stos
cmp
incb
int3
jbe
mov
lea
jl
pushf
pop
mov
jge
incl
dec
sbb
inc
xchg
mov
add
push
mov
in
jo
or
pusha
xlat
mov
pop
add
mov
sub
lcall
pop
std
out
int3
sub
push
cmp
jmp
mov
mov
sti
mov
je
out
mov
adc
cltd
mov
dec
outsl
and
rcrl
movsl
push
icebp
lret
pop
push
dec
pop
fstp
rcll
xor
dec
adc
std
in
test
mov
add
es
test
xchg
fstl
setp
stos
xchg
jo
mov
inc
lds
test
mov
inc
adc
popa
cs
stos
add
and
add
es
sarb
jmp
dec
adc
dec
es
or
mov
xor
dec
ror
int
push
dec
arpl
jmp
std
roll
ret
ret
imul
adc
enter
mov
into
gs
inc
push
pop
push
mov
jne
cs
sub
add
int3
inc
test
int
pop
cmp
cmp
and
mov
jae
sbb
outsl
push
push
lahf
nop
sbb
pop
or
jge
inc
scas
or
fistps
sub
nop
scas
scas
pop
push
add
dec
in
sbb
es
je
mov
inc
cwtl
imul
xchg
loopne
stos
mov
leave
repnz
in
outsb
mov
or
shrb
imul
xchg
in
shr
mov
mov
xor
xchg
or
sbb
and
inc
pop
pop
sbb
in
adc
mov
add
int3
inc
iret
push
sbb
xchg
or
push
jnp
pop
dec
loop
xchg
fstpt
xor
or
xchg
ret
cld
ja
repnz
fs
sbb
xchg
cmc
adc
sub
fisttps
scas
mov
in
cli
insl
data16
pop
pop
sbb
cltd
faddl
mov
inc
sbb
ljmp
cmp
xchg
mov
pop
testb
xor
dec
cmpsb
repnz
xchg
nop
repnz
sub
adc
mov
loopne
jmp
bound
pop
and
sbb
test
filds
popa
popa
aam
push
xlat
decl
adc
ret
pusha
test
icebp
and
outsb
push
popf
orb
scas
and
inc
dec
lret
dec
mov
inc
mul
add
dec
cli
push
scas
inc
cltd
rcll
adc
loopne
rclb
jge
sbbl
mov
mov
incl
fstcw
cmp
aam
xlat
call
lahf
loop
xchg
xorl
icebp
add
jns
adc
cmp
sub
negb
in
stc
movsb
fdivs
sti
mov
daa
adc
sbb
out
dec
aam
cmp
insl
int
sbb
imul
sbb
adc
xor
and
ftst
shlb
lcall
lock
inc
or
inc
ja
fsubr
fdivl
stos
sub
mov
pop
in
mov
mov
and
je
imul
adc
cmc
jle
and
movsb
xor
insl
inc
jb
stos
int
add
xor
ss
nop
in
pushf
sbb
fmul
add
push
mov
fldenv
sbb
dec
out
inc
pop
aad
ja
rcrb
divb
les
xor
pop
push
xchg
dec
scas
lahf
mov
lds
das
nop
leave
inc
into
mov
add
into
or
adc
or
daa
adc
sbb
sarl
mov
addr16
negb
rolb
aad
mov
out
or
mov
or
daa
and
testb
cmpsb
lret
pop
sbb
fidivrs
shl
push
jne
popa
cmpsb
jg
int
adc
loopne
addb
push
js
lahf
sbb
push
mov
out
sahf
sub
sbbl
cmpsl
inc
neg
cli
lock
bound
or
movsl
or
test
mov
icebp
cmp
mov
ret
push
movsb
out
push
adc
xchg
in
aad
pop
inc
out
pop
scas
mov
repnz
push
sbb
push
test
add
rorl
lahf
insb
add
fistl
adc
inc
loopne
mov
lret
mov
and
pop
mov
sbb
cmp
xor
adc
jle
jae
sarb
arpl
aam
push
xorl
ret
lods
xchg
ss
clc
leave
mov
adc
and
adc
dec
xchg
xor
or
iret
push
lock
jmp
adc
xchg
lock
ficompl
popf
adc
cmpsb
fldlg2
xchg
popf
sahf
fsubrl
jns
cmp
jle
enter
adc
neg
mov
pop
xchg
cltd
pop
pusha
sbb
add
smsw
int3
addl
bnd
shlb
and
and
mov
aas
rcll
adc
negl
imul
sbb
xchg
push
add
push
xchg
dec
sub
daa
push
cmp
xchg
test
movsb
jnp
dec
sub
jne
mov
cmp
dec
gs
fs
pop
enterw
out
aad
and
dec
mov
inc
ja
in
loopne
sub
add
adc
arpl
scas
js
xchg
ja
mov
js
outsl
and
and
dec
lret
sbb
bound
pop
test
aad
or
cmp
ss
cld
inc
mov
inc
std
js
jecxz
mov
sbb
popa
cmp
sbb
shl
and
jns
sbb
ret
xor
and
clc
insb
lods
mov
iret
or
rcrl
add
mov
push
mov
in
inc
push
adc
lea
fisubrl
loopne
adc
cmpsb
das
std
pop
cs
pop
xor
sub
sbb
das
xchg
insl
sbb
or
call
dec
fistl
adc
addr16
mov
sahf
push
mov
xor
jecxz
lcall
jbe
imul
in
or
or
ret
inc
ficompl
outsl
xlat
outsl
xchg
inc
and
in
pop
mov
loop
mov
jge
pop
mov
inc
int
inc
push
or
iret
into
mov
call
add
out
dec
int3
mov
xchg
mov
pop
mov
xor
aas
imul
test
pop
sub
sarb
push
inc
push
adc
cltd
jne
ret
sbb
lahf
sub
and
incb
xchg
jl
push
lods
stos
ficomps
sbb
inc
or
push
test
or
pop
mov
sub
test
aam
fldcw
inc
fisttps
mov
jecxz
loop
cmp
dec
xchg
orl
fldenv
insb
das
addr16
push
mov
ja
add
sbbl
cmp
sbb
jmp
jne
xchg
imul
dec
fstps
inc
dec
xor
or
rol
sub
fwait
sbb
iret
xorb
and
sub
jbe
xchg
or
mov
ret
inc
mov
or
movsb
sub
sbb
xorb
int
test
js
ljmp
xchg
lock
sub
sbbb
mov
or
flds
inc
xor
adc
gs
rcrl
lock
xchg
mov
pusha
pop
push
and
insl
outsl
aas
push
popw
aaa
outsb
sahf
pop
mov
push
cmpsl
pop
cmpsb
out
sbb
cmp
jne
pop
push
or
aad
sbb
enter
cli
call
loope
mov
mov
in
lret
orb
cli
and
les
dec
stos
xchg
fwait
pop
and
in
dec
jmp
inc
loop
stc
xchg
fwait
mov
add
scas
sub
ds
xchg
jp
mov
scas
jo
xor
pop
lret
ret
mov
mov
dec
sub
imul
movsl
test
cmpsb
xor
jbe
aas
inc
push
scas
enter
xor
xchg
inc
cmp
mov
jle
insb
xor
test
das
in
cmp
dec
mov
clc
adc
call
mov
in
dec
out
xor
mov
clc
jae
imul
xlat
push
mov
sbb
mov
fidivrs
call
mov
subb
push
jge
sub
mov
jmp
js
sarl
dec
mov
fsubr
shll
lret
loop
mov
push
mov
int
mov
xchg
and
fidivs
adc
ds
pop
mov
xor
push
dec
stos
mov
sub
or
aad
push
mov
cmpsb
lret
idivl
das
mov
jl
repz
dec
lock
xchg
in
mov
test
insb
inc
lcall
fstpt
cmp
sahf
and
orl
cmpsl
cmp
push
or
movsl
mov
lcall
js
dec
stos
mull
xchg
push
popa
movsl
pop
in
ljmp
cmpsb
and
add
pop
mov
es
pusha
jge
int3
cmp
adc
in
sub
xor
inc
dec
adc
sub
pop
mov
insb
xor
push
jl
jmp
test
mov
shll
fs
and
aam
push
pop
sbb
dec
add
pop
mov
pop
mov
loope,pt
rorl
sbb
outsb
mov
ret
outsb
jo
fildll
test
push
imul
adc
mov
adc
fprem1
push
sti
lods
outsb
dec
sbb
lahf
dec
dec
arpl
aas
mov
js
mov
xor
cmp
mov
pop
xor
jns
and
jl
cli
fnstenv
jp
data16
jbe
or
push
sub
addr16
and
adcb
cmp
add
add
xchg
dec
xchg
or
push
sbb
jno
loopne
sbb
xchg
cmpsb
mov
mov
sub
dec
test
lds
pop
aaa
push
dec
inc
xor
stos
enter
pop
add
jb
xor
lret
stos
sti
movsb
dec
loope
jl
inc
sbb
shl
clc
fsubrs
add
movsl
out
aad
push
push
and
pop
inc
mulb
decl
mov
mov
mul
out
ds
adc
loopne
stos
fmull
data16
sbb
sub
lahf
cmc
pop
sahf
xor
das
dec
jl
push
inc
pop
xlat
les
ljmp
xor
test
dec
movsb
out
ds
mov
or
jl
les
inc
aad
aam
nop
repnz
cltd
ret
out
mov
cmpl
pop
push
mov
sbb
jnp
movsb
jg
out
push
xor
iret
cld
out
jnp
xor
cwtl
enter
adc
xchg
mov
xor
js
outsb
inc
les
stc
mov
sub
stos
jecxz
xor
or
push
push
xor
or
mov
lret
or
sub
xchg
and
cli
outsl
xor
lahf
jbe
mov
dec
xchg
push
popl
decb
xor
daa
and
repnz
adc
lea
inc
dec
mov
push
dec
sbb
jb
pop
frstor
mov
push
xor
dec
adc
push
insl
xlat
mov
decl
sbb
jecxz
cmp
dec
jl
cmp
mov
fsubs
pop
out
int
push
popa
lods
jge
sahf
mov
lea
cmp
cmp
inc
js
mov
imul
fbstp
jb
pop
lods
int
xor
mov
daa
je
call
xchg
lret
stos
popa
pushf
sbb
mov
pop
stos
sub
inc
inc
and
test
sub
cmp
lds
fsubrs
std
in
dec
sbb
xchg
gs
fisttpll
push
addl
xchg
sub
cmpsb
and
mov
mov
adc
xchg
add
xchg
xchg
jl
fnstsw
jmp
shll
xor
mov
adc
xchg
mov
add
pushf
jns
lock
cs
mov
jno
adc
clc
clc
nop
dec
and
insb
xchg
mov
sbb
and
into
xor
stc
ss
adc
mov
stos
cld
pop
sbb
shrb
adc
aad
mov
mov
or
out
mov
movsb
sub
cs
sub
repz
xchg
imul
in
shrl
or
xchg
gs
mov
or
stos
inc
fstl
hlt
addl
push
sub
sbb
push
mov
push
fadd
shl
insb
fidivl
push
imul
out
into
nop
shlb
aas
add
pushaw
shll
icebp
aam
mov
mov
into
lret
aas
add
adc
ficomps
sarl
lret
push
mov
fnsave
pop
loop
fwait
xor
dec
sub
mov
nop
jecxz
fldt
fbld
iret
test
cmp
subb
pop
outsl
xor
sbb
sbb
jno
jno
dec
sub
pop
mov
xchg
repz
inc
adc
xchg
nop
inc
fldt
clc
cmp
xor
ficomps
mov
jle
sbb
add
inc
xlat
loop
mov
loopne
jp
add
jp
fnstsw
dec
nop
dec
fwait
dec
stos
shl
push
fmuls
daa
pop
pop
out
in
mov
xchg
xor
daa
mov
push
cmp
scas
test
icebp
xor
jge
movsl
cmp
rcll
inc
lods
in
or
push
push
adc
cmp
insb
repnz
xor
jmp
and
sub
fisubs
xor
testb
lret
sub
jecxz
stos
sub
adc
mov
out
or
mov
fdivl
nop
and
push
mov
pop
jne
popa
loopne
out
test
mov
push
dec
jae
sub
sub
cli
lods
xchg
clc
push
fistl
out
lea
test
test
adc
inc
lahf
clc
cmp
mov
lahf
loope
iret
push
shll
and
enter
idiv
sbb
ss
mov
adc
xor
mov
and
mov
pusha
popf
cwtl
inc
lcall
rcrl
pushf
test
jae
std
mov
sbb
fadds
cmpsb
out
mov
std
add
or
aas
shlb
inc
test
add
shrb
lods
out
in
shll
inc
std
dec
fidivs
sub
dec
fcmovne
push
aaa
dec
push
shl
shr
add
jo
xor
adc
lahf
pop
sbb
dec
lods
xchg
mov
mov
xor
mov
aam
mov
mov
daa
xchg
ja
jg
daa
js
movsb
dec
loope
xor
mov
pop
push
xchg
jbe
repnz
xor
arpl
cmpsb
xchg
mov
cmp
jp
ljmp
lods
or
sbb
outsb
or
xor
adc
push
dec
and
fwait
sbb
std
lcall
std
xor
into
cmpsl
test
lds
and
lea
adc
jmp
cmp
dec
push
aad
dec
inc
add
or
mov
es
jle
rcrl
das
movsb
inc
mov
fcoml
dec
mov
jb
pop
mov
out
jge
call
mov
jo
mov
cmpsl
adc
dec
sbb
in
clc
repnz
adc
popa
dec
pusha
rorl
lods
mov
pop
fimuls
addr16
imul
mov
insb
push
rcl
mov
inc
sub
outsb
sbb
push
je
lcall
in
pop
rcrb
movsl
sub
xchg
enter
das
in
xlat
fwait
push
push
aam
imul
add
or
outsb
ds
movsl
cmp
fsubr
ret
mov
inc
jns
enter
xor
dec
sub
outsb
jle
sbb
mov
aam
leave
inc
repnz
dec
das
loope
ss
shll
jecxz
xchg
out
out
out
dec
sbb
lcall
and
pop
xlat
fdivrs
mov
mov
je
fld
leave
repz
aas
jle
jge
jnp
and
je
addb
and
sbb
in
enter
adc
inc
insl
int
cmp
aas
mov
push
sarl
pop
rcrb
xchg
mov
stos
inc
dec
inc
or
loopne
push
sbb
cli
adc
mov
push
lret
inc
ror
js
xchg
das
jno
lods
add
push
mov
mov
xchg
mov
mov
iret
ljmp
adc
bound
xchg
pop
cld
push
fidivs
xchg
and
cmp
xchg
dec
xor
cmp
out
jge
xchg
loopne
or
arpl
xlat
inc
adc
jmp
xchg
mov
push
fsubp
cmp
push
xchg
push
dec
mov
aaa
sub
inc
mov
pop
or
pop
arpl
ss
sub
cmp
lea
andl
mov
mov
inc
movsb
movsl
ja
out
les
subb
jp
movsl
shrb
stos
mov
pop
mov
es
and
push
lods
xchg
cs
enter
incb
mov
shll
mov
loopne
jnp
jecxz
sub
repnz
cmp
cmp
mov
lock
rcrl
dec
cmp
cmp
lds
aam
stos
xchg
adc
lock
or
movsb
or
adc
lret
sbb
int
sub
test
lahf
jmp
cwtl
dec
xchg
push
xchg
add
sub
mov
mov
inc
mov
add
jecxz
mov
ret
scas
or
popf
sbb
jnp
adc
fdivs
or
fbstp
jb
adc
ljmp
cmp
xor
aaa
xor
pop
dec
and
gs
jp
repz
hlt
adc
add
clc
not
dec
lret
stos
adc
push
push
push
dec
cmpsl
mov
addr16
dec
jns
mov
push
lret
fcmovu
ljmp
xor
sub
add
cwtl
push
hlt
aad
pop
push
cmp
pop
ret
jnp
pop
jle
ljmp
das
xor
out
push
iret
cli
dec
outsb
inc
push
lcall
pushf
and
or
fidivrs
mov
lcall
and
cltd
test
shrl
push
dec
push
mov
pop
pop
fdivs
and
rcr
test
cmp
mov
xchg
cltd
movsl
movsl
inc
imul
mov
cwtl
or
dec
push
je
mov
sub
into
jb
xchg
or
push
pop
repz
dec
cmpsb
jb
push
aad
mov
ja
mov
lcall
leave
and
xor
daa
movsl
push
aam
mov
iret
ret
mulb
addl
xchg
mov
push
adcl
fstpt
mov
and
jo
cld
pusha
je
and
jbe
in
sbb
fwait
es
dec
jmp
push
scas
xor
mov
jl
ret
gs
jp
insl
call
xlat
gs
and
call
fstl
adc
das
int
lods
repz
imul
movsl
xchg
jg
dec
imull
int
add
adc
cld
cmpsb
cli
lcall
lahf
lods
lahf
test
outsl
mov
lret
sub
dec
lcall
fldt
dec
push
data16
ficomps
je
or
ja
out
rolb
cmp
mov
jnp
in
inc
lret
jg
xchg
lock
or
push
leave
jecxz
jne
mov
xor
jbe
adc
out
ljmp
shl
loopne
sub
loop
jp
enter
cwtl
jnp
mov
mov
int3
fs
push
fsubl
inc
pop
leave
js
aas
push
cmp
scas
dec
lahf
mov
push
pop
out
cmp
jp
popf
mov
mov
xchg
mov
xor
insl
pop
popf
xor
sbb
push
sti
call
ficoml
inc
and
xchg
out
jge
cld
das
adc
aaa
out
hlt
pop
leave
xor
nop
sub
fmuls
xchg
mov
cmp
xor
pop
int
dec
push
loopne
pushf
fsubl
cmp
cmp
sub
dec
sub
in
mov
dec
stc
xor
repz
incl
adc
sub
cld
mov
cmp
and
fisttps
test
add
push
cmp
jmp
xchg
shlb
dec
xor
or
incb
lcall
inc
bound
sbb
les
incl
mov
fildll
shl
inc
cmp
ja
cwtl
pop
stc
push
mov
pop
xor
or
xor
add
lods
dec
xchg
adc
jle
sbb
fstpl
in
movsb
arpl
inc
adc
aad
sbbb
xchg
dec
sbb
xchg
jecxz
aam
daa
cmc
ret
and
dec
rcrb
xchg
mov
jnp
xor
sbb
cmpsb
popa
and
adc
and
inc
xchg
cmp
and
jne
rorb
mov
mov
jns
loope
mov
scas
sub
pop
sbb
pushf
push
fcmovbe
outsl
dec
jnp
mov
pop
jg
mov
test
jmp
ror
mov
push
rcrb
enter
xchg
inc
or
cmp
or
jnp
push
stc
fildl
test
adc
mov
mov
aas
adc
repnz
out
lods
ja
int3
pop
test
and
mov
jg
sti
pop
rcrb
in
scas
add
stos
mov
push
lcall
aad
jno
fs
sbb
xchg
inc
jbe
mov
pop
loopne
sbb
and
mov
push
and
adc
or
repnz
test
cmpsb
pusha
call
mov
out
aas
cmp
hlt
sub
jns
pop
mov
fwait
js
dec
sub
push
sbbl
or
cmpsl
mov
outsl
mov
daa
shr
mov
clc
mov
jge
js
jb
mov
in
or
or
push
das
outsl
enter
and
jecxz
inc
xor
mov
hlt
sbb
mov
push
outsl
jle
mov
shlb
out
mov
addb
or
and
test
adc
dec
push
ret
push
add
and
sub
out
and
adc
call
or
dec
out
jbe
pop
sub
push
mov
pop
or
mov
mov
aam
jle
adcb
jno
add
in
jo
push
pop
push
mov
mov
xor
testb
inc
add
shl
inc
push
cmp
rcrb
inc
leave
push
call
dec
adc
adc
cmp
lds
pop
fadds
cmp
sbb
cmc
xor
adc
movsl
mov
xchg
nop
lods
inc
jmp
out
jge
lods
and
or
xchg
iret
icebp
mov
popf
into
mov
mov
push
push
jecxz
mov
or
pushf
pop
push
or
clc
popf
cmp
and
lahf
out
ret
push
push
sbb
stos
xor
jecxz
mov
shl
insl
dec
lret
ficoml
jmp
cmc
clc
or
fwait
sahf
in
fldenv
scas
adc
mov
sar
dec
adc
sub
mov
ret
pop
out
jno,pt
aam
shll
mov
mov
adc
pop
add
adc
lret
jns
cli
xor
and
mov
outsl
mov
mov
mov
add
dec
pop
sbb
dec
dec
or
dec
inc
nop
cld
fsubp
pop
mov
sbb
cmp
sbb
lret
daa
ja
adc
ret
and
stos
test
das
mov
push
es
roll
add
das
jg
and
inc
add
jae
js
ds
lea
iret
sbb
test
call
lea
cmp
sub
xor
lret
sbb
cmp
mov
inc
scas
jno
lret
add
ja
pop
fdivr
jp
hlt
or
inc
ja
leave
sub
lds
sbb
pop
jmp
push
mov
cmpsl
leave
mov
jnp
mov
add
fcmovnb
lcall
adc
mov
movsb
lahf
or
pop
scas
dec
and
cwtl
inc
or
xchg
movsb
xchg
jb
call
or
fidivs
sub
popf
and
das
sti
dec
jle
idivb
cmp
xchg
mov
pop
scas
adc
imul
ret
je
lret
aaa
pop
in
lds
outsl
je
decl
stos
fnsave
imul
bound
pop
mov
ds
mov
jge
sub
lock
mov
aas
sbb
push
push
mov
fimull
out
and
cwtl
cmpsl
out
mov
sub
mov
push
xchg
cmp
rorl
adcb
int3
jne
mov
outsl
movsb
dec
cmc
xor
stc
dec
and
ret
mov
push
jmp
lds
push
jb
and
lret
sbb
outsl
sahf
std
jg
loopne
cwtl
inc
mov
mov
adc
arpl
xchg
aam
xchg
inc
mov
loopne
fidivrl
out
bound
and
sarl
add
mov
sbb
fdivp
mov
adc
ret
or
cwtl
sbb
test
popf
cmpsl
cmpw
aaa
mov
jb
sub
and
cmp
push
cltd
pop
sti
lods
mov
push
mov
fdivl
add
xchg
cltd
xchg
or
dec
rcrl
out
cmpsb
inc
pop
push
add
mov
out
jns
and
sub
popf
pusha
jp
cmp
test
scas
sti
inc
push
mov
js
je
imul
shl
incb
into
psubusb
in
dec
nop
jecxz
std
mov
or
les
mov
jae
dec
in
test
enter
adcl
cmp
inc
ds
lods
pop
scas
call
mov
push
jge
jnp
cs
rolb
aad
inc
filds
shll
xor
mov
sub
pop
or
xchg
and
popa
dec
les
mov
adc
and
dec
mov
sub
shll
xor
mov
in
shll
lea
nop
dec
xor
cmpsl
pop
mov
xchg
xor
pop
or
dec
movsb
xchg
mov
add
and
mov
jne
jg
dec
cmp
and
js
or
jecxz
jmp
sub
and
loope
mov
push
dec
jno
jmp
dec
adc
shll
jecxz
adc
or
test
ret
xchg
dec
daa
adc
mov
mov
jns
adcl
or
ds
mov
pop
jb
mov
std
jns
insb
data16
mov
aas
jmp
arpl
cmp
dec
mov
cmp
dec
and
push
or
in
cmp
mov
testb
out
inc
les
jmp
je
jmp
jns
fcoms
sbb
xchg
push
sub
decb
jnp
push
push
cs
xlat
cmp
in
pop
cltd
xchg
hlt
loop
adc
dec
lock
mov
lcall
mov
sti
in
pusha
sahf
and
cmp
call
inc
ja
or
popf
loopne
and
loope
sub
sbb
or
aas
mov
lret
adc
or
mov
xor
subl
pop
jnp
outsb
push
push
mov
pop
cs
dec
mov
mov
aam
aas
mov
jmp
stos
lret
ret
cmpb
adc
js
cli
sub
in
sub
sub
dec
fwait
repnz
jmp
adc
jl
pop
xchg
mov
ret
fcmovnbe
pop
pop
fisttpll
xor
insb
xchg
jg
mov
in
mov
cmpsb
cmp
repz
ss
push
cmp
in
call
or
mov
sub
sbb
rol
pusha
data16
int
cmp
mov
mov
mov
sub
bound
mov
in
cmp
test
sahf
fldcw
dec
dec
xchg
jl
lahf
cmp
xchg
mov
cli
out
dec
lods
in
cs
push
popf
notl
push
mov
aad
xor
shlb
mov
pop
xchg
mov
fiadds
xchg
adc
fwait
adc
mov
cmp
push
fidivrl
in
fcomps
cmpsl
enter
cmp
lahf
ret
adcl
outsl
adc
call
sub
insb
ret
shrl
sub
dec
test
or
lods
jp
jge
leave
popa
mov
xchg
mov
xlat
adc
xchg
push
add
adc
cs
mov
fdivrs
push
xchg
xchg
push
xchg
and
add
jns
jecxz
jnp
jo
je
xchg
xchg
push
nop
jl
inc
xchg
xor
stos
or
jnp
mov
jno
rcrb
jbe
xchg
stos
cs
dec
and
lret
dec
push
mov
xchg
pop
test
hlt
ficomps
jns
push
mov
sarb
fmul
insb
jmp
push
jecxz
loopne
and
pop
sub
xor
inc
dec
dec
xor
pop
dec
imull
fbld
out
dec
gs
rorl
jns
sbb
sbb
jmp
xchg
bswap
mov
js
cmp
ds
jle
pop
and
imul
sub
dec
xor
jge
lgs
lahf
push
imul
aam
imul
pop
out
jbe
push
adc
dec
pop
movsb
mov
repnz
shll
push
cld
inc
mov
add
mov
mov
push
js
jbe
cmp
aad
test
mov
or
gs
lea
idivb
lods
lods
repnz
push
push
pop
add
push
mov
into
xrelease
js
aad
cmp
js
pop
dec
rcll
adc
mov
popf
adc
sub
mov
dec
mov
xchg
adc
int
nop
jbe
enter
ja
mov
shl
popf
push
in
cmpsb
and
jo
ljmp
iret
jns
mov
lret
pusha
mov
inc
xor
fs
js
adc
rorl
adc
inc
mov
lret
pop
cmc
addr16
push
sbb
sub
push
rorb
ret
xchg
lods
sbb
je
push
movsl
or
and
mov
addr16
dec
and
mov
in
cmp
xchg
add
js
stc
inc
dec
mov
andl
mov
push
mov
js
adc
lea
sbb
sub
out
push
sti
sub
jne
les
cmp
inc
fcmovnb
push
sarb
movsb
bound
rcr
stos
xchg
sub
pop
test
mov
cwtl
sbb
pop
subb
sarl
xchg
shlb
and
sbb
pop
in
in
push
fwait
pop
cwtl
std
daa
cli
cltd
and
gs
test
xor
add
aam
pop
scas
cmc
sar
popl
enter
pop
js
mov
mov
lods
lret
jae
mov
adc
jo
mov
dec
adc
jmp
pop
push
or
adc
xchg
pusha
dec
mov
xchg
testb
mov
ss
nopl
and
cmp
aad
scas
mov
into
mull
movsb
shll
xor
imul
nop
je
insl
jnp
subl
js
loopne
dec
jns
repz
and
insl
lret
mov
jle
jmp
aam
sub
cli
xchg
jo
pop
nop
adc
imul
in
mov
shrl
pop
dec
mov
into
loopne
subb
xchg
mov
fcmovu
pop
fidivl
sbb
mov
das
loope
mov
mov
xor
pop
mov
xor
loope
popf
test
or
pop
dec
mov
pop
sub
das
inc
cmp
inc
push
fstl
dec
mov
sbbb
loopne
scas
push
or
mov
stos
fwait
out
sub
gs
cli
mov
movsl
sub
pop
lahf
add
sahf
push
mov
loop
xor
sti
jnp
jl
loopne
insl
jmp
repz
lods
addr16
and
orl
es
repz
push
pop
ficompl
sbbb
or
bswap
gs
push
test
or
push
mov
jg
xchg
in
fwait
cmp
lea
test
dec
cmpsl
adc
sbb
sbb
dec
and
hlt
xor
lahf
add
fsubl
cld
mov
cmp
cmc
nop
mov
add
pop
pop
or
es
and
test
lahf
adc
jge
sub
fwait
fs
sub
dec
dec
mov
outsb
sti
les
cltd
mov
push
movsl
in
test
mov
mov
push
mov
arpl
mov
js
push
in
xor
inc
pop
or
mov
pop
mov
pop
sub
push
pop
adc
xor
data16
sti
dec
sub
std
jns
xchg
hlt
xlat
adc
dec
and
out
insl
jne
mov
sub
mov
cltd
sahf
out
xor
add
mov
mov
ror
pop
andb
std
dec
xor
cli
cmp
add
push
fildl
scas
lods
cmp
jge
dec
add
out
mov
pop
sti
mov
clc
fnsave
sti
xor
sub
test
lret
mov
push
xor
cmp
dec
sub
mov
jnp
cs
fcoml
fbstp
push
addr16
mov
add
lock
xchg
or
jns
jl
sti
shr
jecxz
cmp
pop
pop
sub
xchg
mov
lds
out
ljmp
nop
outsl
pushf
mov
dec
ss
repnz
cmpsb
push
add
mov
adc
aad
icebp
inc
xor
sub
pusha
popf
arpl
jl
pop
rorl
pop
sbb
cmp
ret
mov
sti
arpl
arpl
push
scas
stc
sbb
inc
repz
enter
ljmp
jmp
test
adc
sbb
mov
leave
pop
nop
dec
adc
cmc
mov
and
xchg
lods
mov
mov
mov
mov
pop
repnz
dec
mov
or
in
popa
sbb
sbb
fsubrp
fmull
or
jle
ret
mov
jle
mov
jge
scas
mov
scas
shlb
mov
iret
jno
inc
pop
pop
or
jae
sbb
xor
dec
lahf
loop
pushf
addl
add
and
icebp
mov
inc
aam
dec
xor
scas
push
stos
sub
jle
lcall
cmp
pop
sbb
jae
mov
or
incb
arpl
xchg
pop
xor
stos
arpl
push
shl
or
sbb
adc
mov
lret
test
rorb
mov
push
or
sbb
lods
xor
shl
mov
bswap
testl
mov
fistps
inc
mov
cmp
mov
sbb
sbb
xchg
or
movsb
jmp
inc
cmpsl
inc
dec
push
pop
cmp
mov
jbe
jmp
lcall
jp
in
cs
jmp
cmp
sbbl
mov
sbb
xchg
nop
pop
test
xor
jb
lahf
or
push
leave
xor
lea
leave
aam
cld
xchg
push
shrl
clc
scas
push
and
or
adc
push
aaa
xchg
mov
xchg
xchg
pop
aad
sarl
loopne
ret
adc
or
mov
fmuls
out
pop
test
idivb
lds
and
roll
lret
dec
dec
or
jecxz
les
imul
push
sarl
push
pop
fstp
adc
fwait
leave
sub
int3
ret
cltd
cmp
fwait
mov
mov
dec
ja
fisttpl
dec
add
or
jg
xchg
mov
ds
neg
clc
pop
and
mov
lods
sub
fidivl
lahf
call
xor
inc
pushf
add
ja
mov
or
sbb
cs
inc
cli
fildll
dec
sub
mov
rcrb
cld
cmp
nopl
jmp
pop
rorb
and
mov
movzwl
roll
xor
push
jle
inc
xor
insb
adc
xchg
test
push
push
push
das
jmp
sarl
clc
jle
xor
jmp
inc
clc
bound
jp
movsb
dec
push
loopne
cmp
lods
mov
jmp
sbb
lods
cltd
rolb
fists
cmp
xor
pop
insl
and
sbb
cmp
popa
cltd
lret
scas
popa
mov
inc
aaa
jmp
dec
push
xchg
and
or
lea
shrl
mov
mov
and
lret
push
mov
inc
sub
fsubr
cwtl
jp
jl
cwtl
cmp
push
std
lods
dec
fsub
mov
xor
lahf
in
pop
nop
adc
xchg
in
lock
mov
xchg
push
out
xor
enter
xchg
pop
lds
xor
cmpsl
movsl
pop
mov
push
test
sub
sbb
lea
dec
sub
or
cmp
lods
mov
adc
pushf
xchg
or
int3
pop
leave
stc
push
aas
js
adc
clc
loope
out
ss
xchg
jns
mov
add
cmp
rcrl
mov
loope
xchg
xchg
add
push
jp
dec
mov
jnp
cmpb
sbb
add
stc
mov
pop
push
inc
adc
inc
xchg
mov
iret
xor
les
dec
push
push
mov
xor
mov
movzbl
iret
repnz
test
cmp
jbe
mov
out
and
out
or
hlt
icebp
mov
mov
dec
lret
lea
dec
hlt
cwtl
mov
scas
add
je
pushf
insl
add
data16
stos
mov
mov
mov
pop
cmp
stos
inc
cli
iret
lcall
lods
loopne
lods
mov
xchg
lods
rclb
test
in
jl
test
inc
loope
iret
das
mov
fistl
jle
loop
imul
xor
dec
adc
or
addr16
dec
rcl
sub
loopne
ds
sbb
enter
jmp
pop
test
das
rclb
mov
icebp
imul
out
aad
insl
roll
push
mov
jnp
cmp
xchg
mov
hlt
add
shrb
push
jb
test
sub
fnstcw
sub
lods
setae
ljmp
pop
ja
mov
enter
dec
out
mov
sbbb
lret
jp
lods
jbe
push
jecxz
inc
filds
cmpsb
test
or
dec
out
pop
nop
jo
insb
ds
test
cmpsl
pop
lret
loope
xlat
aaa
test
sbbb
or
clc
icebp
xchg
push
and
test
enter
stos
sub
sub
aam
dec
pop
test
mov
bound
mov
dec
insl
mov
push
mov
mov
jnp
shll
sub
mov
mov
aad
cmp
add
dec
pusha
mov
sarb
jmp
aas
imul
ss
and
cmc
aaa
mov
lods
dec
pushaw
mov
cmp
mov
gs
xor
iret
push
pop
pop
jl
vpunpckldq
add
push
and
push
xor
add
test
pop
cmp
and
jg
pop
add
or
fbstp
pushf
ljmp
mov
std
addl
ret
mov
popf
push
push
xor
pop
outsl
adc
rol
sti
pop
sub
add
jl
ficoml
js
testl
inc
mov
test
jno
repz
loopne,pt
adc
rorl
inc
xor
jb
roll
add
popa
bound
or
inc
push
sarb
push
ja
pop
jge
ds
inc
sub
adc
inc
xor
xor
les
lds
aad
pop
push
dec
stos
cwtl
out
jl
ret
xor
sahf
mov
scas
stos
ret
push
inc
cltd
lret
push
mov
loope
jg
xor
addr16
cmp
mov
stos
mov
mov
loopne
jae
lcall
daa
sbb
test
in
aas
push
jo
mov
and
inc
mov
jge
adc
je
fs
and
mov
ret
push
xorb
test
add
pop
mov
xchg
jo
xorb
addl
or
push
adc
shrl
sub
sub
mov
leave
xlat
dec
sub
icebp
cmp
daa
outsl
insl
call
stos
mov
ret
bound
frstor
jnp
call
lock
cmpsl
fs
fsubs
jno
ret
or
leave
sbb
dec
rorl
push
or
mov
in
xor
inc
cmp
adc
adc
mov
jmp
lea
lcall
and
cld
jge
aaa
push
push
call
stos
push
dec
js
ret
lock
adc
xchg
xchg
inc
pushf
out
mov
sti
xchg
aaa
lods
ss
mov
gs
cltd
lret
jo
aam
scas
repnz
loope
sbb
data16
push
cmc
and
xor
and
repnz
xlat
inc
xchg
inc
adc
popf
pop
fdivrs
or
sub
fs
call
stc
lahf
push
dec
xor
cmp
and
repnz
roll
pop
dec
lret
sarb
mov
pop
push
ret
mov
adc
xchg
jnp
sub
gs
int
adc
xchg
test
lret
or
aam
inc
outsl
pusha
pop
sbb
cmc
or
mov
jno
repz
ss
loop
shrb
jg
sbb
mov
and
add
pop
sti
ja
pop
xchg
sub
or
cmp
mov
xchg
mov
adc
xlat
mov
dec
aas
adc
jo
pop
or
push
xchg
addb
push
mov
inc
leave
mov
push
push
xchg
into
notb
xor
xor
int3
outsl
fsubl
fstpl
popa
jae
adc
lods
or
dec
mov
psllq
into
incb
dec
cmp
rcrl
int3
stos
in
jmp
mov
mov
cli
roll
fidivs
inc
or
jo
or
xlat
jno
stos
ljmp
jns
popa
imul
mov
mov
cmp
push
mov
pushf
mov
mov
and
lcall
cwtl
mov
xchg
lds
int3
adc
leave
mov
dec
xchg
push
and
xlat
insl
outsl
push
pop
movsb
jl
adc
shll
adc
xor
xchg
sub
and
xor
pop
sbb
sbb
pop
mulb
adc
out
sub
dec
pushf
cmpsl
popf
movsb
rcll
cli
enter
mov
cmp
and
mov
sarl
sub
loop
jne
xor
jbe
sbb
cmp
mov
in
jb
aam
mov
loope
mov
out
fistpll
outsl
push
insb
inc
rclb
add
and
and
pop
cmc
inc
pop
daa
fucomip
and
jp
push
dec
cmc
push
lds
adc
mov
or
jl
repnz
inc
fstpt
loopne
fnstcw
pop
cmp
pop
arpl
mov
pop
inc
lahf
mov
adc
pop
push
sti
cmp
outsb
xlat
popf
call
and
cmpsb
and
mov
push
ret
bound
jno
aas
andb
inc
xchg
xor
arpl
rolb
stos
mov
mov
pop
add
std
or
inc
jecxz
push
sub
pop
mov
test
jmp
add
mov
decl
outsb
int3
pop
lret
xlat
popa
cld
and
sub
jns
cs
and
and
cmc
jl
aad
fs
je
sar
lods
mov
cvtpi2ps
imul
iret
xchg
and
dec
das
cmc
jae
add
xchg
jecxz
mov
call
stos
lahf
test
lret
rcll
stos
dec
out
jnp
dec
movsl
push
aas
iret
mov
dec
xchg
cmpsl
push
arpl
xlat
outsl
aas
in
and
cmp
dec
jmp
add
mov
std
mov
cmp
sub
mov
movsb
lds
fsubr
ss
js
enter
rorl
popf
sub
xor
inc
in
lods
test
push
addr16
cs
repnz
imul
imul
sbb
sbbl
shlb
scas
mov
test
sahf
xor
repnz
mov
mov
mov
xchg
cmp
pop
lds
cmc
aaa
leave
pop
jae
dec
icebp
jle
fistl
sti
xchg
mov
xor
pop
in
les
mov
iret
pop
into
fcmovbe
cmp
scas
cltd
sub
or
xor
icebp
sub
test
aam
pop
cmp
inc
lahf
mov
jb
xlat
and
adc
fldl
sarl
xchg
mov
scas
jmp
mov
sub
cmp
push
addr16
inc
pop
shlb
fs
inc
lds
enter
les
xlat
push
xorb
xor
or
ret
pop
xor
inc
mov
jp
mov
add
jne
jo
stos
loop
cmp
jnp
jb
test
lods
mov
add
std
xchg
push
mov
daa
stos
adc
sub
pop
test
mov
imul
lea
mov
sbb
and
loope
adc
arpl
lret
testl
mov
xchg
fucom
xor
cmp
inc
insl
shrb
lods
fsubrl
push
pop
mov
das
mov
xchg
shl
pop
in
sub
stos
pop
subl
test
stc
inc
ret
sub
xor
pop
xor
mov
fwait
pop
ja
test
mov
sbb
dec
imul
out
ret
ds
lcall
sbb
popf
jae
jae
push
jge
mov
imul
pop
in
inc
js
push
mov
lcall
mov
xchg
aaa
xchg
pop
gs
mov
xchg
inc
ret
imull
leave
dec
pop
and
inc
pop
loop
sarl
cmp
mov
adc
stos
pop
xlat
dec
movsl
jnp
cld
imul
xor
js
in
pop
adc
movsl
pop
jg
es
cld
arpl
mov
push
daa
push
into
mov
lcall
push
ficoml
push
sub
xchg
addr16
int
sti
cmp
adc
inc
add
out
pop
fdivs
ret
test
jmp
daa
fucomp
out
nop
and
in
cld
fcoml
movsl
jp
mov
lods
pushf
lcall
ret
sbb
and
scas
fucomi
std
andb
sbb
out
adc
xchg
mov
cmp
dec
sub
adc
and
lock
jae
push
sub
sbb
jp
int3
movsb
push
hlt
jbe
sbb
stos
lods
dec
push
scas
mov
jl
mov
push
dec
inc
push
insl
je
sub
mov
add
xlat
jbe
lret
add
out
gs
gs
je
cli
mov
outsb
popf
inc
xchg
push
imul
xor
into
xor
sub
int
inc
inc
mov
inc
xchg
cmp
cld
cmpsb
shlb
or
clc
inc
pop
mov
push
loope
pusha
fcompl
in
mov
dec
cli
add
lods
or
hlt
packsswb
mov
sbb
adc
jae
cmp
push
pop
clc
cmp
jmp
cmp
daa
adc
in
int3
cmpsb
adc
notl
loop
push
mov
adc
mov
or
outsb
nop
lret
popl
ljmp
xor
and
xlat
push
xchg
dec
mov
inc
test
fdivrs
push
xchg
scas
and
mov
sbb
mov
push
stos
mov
jo
stos
pop
lock
imul
sub
icebp
mov
or
jnp
test
hlt
jecxz
xchg
xor
ds
xor
lods
or
or
jp
mov
dec
xchg
fwait
arpl
pop
xchg
frstor
sub
jo
push
cmp
push
sub
or
adc
lcall
pop
dec
lcall
test
add
sub
pop
xchg
lods
test
out
adc
clc
bound
fwait
jmp
in
cmp
mov
dec
sarl
xor
cmpsb
ret
sub
in
dec
inc
pusha
xor
out
jp
inc
mov
xchg
popa
inc
add
mov
fsubs
lock
mov
mov
out
sysret
cmp
ror
jne
lock
sub
sub
mov
mov
sub
dec
rcrl
adc
insl
fsubl
popf
dec
add
enter
cmp
xchg
js
iret
in
sub
jae
popa
adc
or
loope
add
into
pushf
push
lret
mov
test
stc
add
out
and
add
andb
inc
add
pusha
cmp
mov
dec
inc
xchg
xchg
pop
loope
mov
aam
mov
lock
xor
pushf
negb
bound
and
test
sbb
push
popf
push
mov
push
leave
test
rcrl
mov
jg
sbb
cltd
in
in
mov
shrd
sub
xchg
jg
push
imul
mov
lods
outsl
pop
jge
movsl
filds
fldt
add
dec
add
cli
sbb
inc
in
lock
push
lcall
aad
inc
dec
daa
scas
and
mov
sub
call
mov
fisubrl
sub
leave
cltd
insb
leave
shll
mov
sub
or
data16
loopne
cld
jecxz
push
jnp
jns
incl
push
out
rorb
push
pop
lea
cmpsl
daa
push
sub
push
add
xchg
xchg
or
add
iret
mov
inc
and
mov
aas
inc
pusha
aam
dec
inc
xchg
iret
mov
fwait
testb
pop
adc
xor
adcb
aaa
lret
jp
sub
lods
insb
add
in
sub
push
es
add
xchg
rcll
call
xlat
pop
push
adc
cmp
loop
call
cwtl
rcrb
jle
mov
push
mov
cs
sub
mov
test
mov
xor
push
dec
psubd
mov
jp,pt
xchg
cmp
popa
adc
inc
sti
insb
out
addb
and
dec
add
adc
pop
cwtl
sub
daa
mov
xor
inc
sub
shr
xchg
mov
sub
stos
adc
pop
cmpsb
push
call
cmp
xor
pushf
daa
test
mov
inc
outsb
sub
lds
test
hlt
insb
out
mov
add
mov
mov
scas
dec
in
lods
lds
push
mov
repz
leave
or
xchg
shlb
or
push
adc
iret
adc
lret
fildll
fsts
ficompl
pop
jno
cmp
xchg
in
rcl
sub
in
dec
push
xchg
psubsb
lods
ja
stos
mov
mov
push
in
mov
dec
fdivs
sub
cmp
xchg
push
fstp
js
jle
aas
dec
addr16
pop
aam
and
or
hlt
gs
test
pop
xchg
repnz
stos
push
and
stos
and
daa
fmuls
pop
cli
or
dec
in
rcl
daa
daa
xchg
and
loope
scas
shlb
push
jno
push
sbb
insb
xor
or
add
xchg
cmpsb
cltd
cmpl
cmp
aas
test
sub
add
popa
add
pop
out
es
push
xor
aam
sahf
and
cmp
rclb
movsb
or
loopne
mov
les
call
stos
sbb
and
sub
stos
jge
or
inc
ret
out
dec
test
add
fldl
cvtps2pi
adc
call
leave
pop
scas
xchg
adc
lock
dec
cmpb
jle
pop
push
jb
jnp
jle
movntps
push
or
fisttps
sahf
std
xor
or
cmp
outsl
dec
movsb
pop
mov
mov
add
sarb
enter
or
mov
scas
clc
push
pusha
faddl
push
fldcw
test
ret
cld
or
leave
mov
pop
fisttpll
inc
pop
or
in
sbb
or
jno
icebp
xchg
stos
movsl
adc
xchg
push
inc
mov
test
or
lcall
cmp
add
mov
enter
stc
ror
ds
jmp
not
adc
mov
jo
mov
mov
sub
and
ret
jnp
dec
pop
int
rolb
inc
add
in
jmp
aad
and
cli
arpl
inc
bound
push
dec
jecxz
mov
or
inc
addr16
loopne
es
cmpsb
clc
js
fdivrp
jnp
sub
or
sahf
sub
push
leave
mov
out
pusha
and
in
push
ficomps
xchg
push
push
out
adc
add
insb
aam
sti
xchg
inc
xchg
xchg
cmp
fstl
lds
fidivl
cmp
repz
pop
fisubrs
jns
push
jl
adc
inc
add
xchg
xchg
mov
push
insl
enter
cwtl
inc
xchg
dec
jmp
lret
push
xor
pop
lods
or
insb
mov
out
pop
aad
dec
cmpsb
js
leave
sub
dec
je
into
js
cli
adc
mov
std
xor
mov
shlb
jbe
adc
or
int3
mov
xlat
insl
cli
jae
add
fisttpll
pop
xor
pop
mov
std
sub
mov
pushf
cmp
dec
dec
clc
cli
ficoms
and
xchg
outsl
xchg
or
in
fxch
loopne
pop
aam
pop
jnp
jae
imul
in
rolb
mov
and
nop
pop
xchg
sbb
cli
dec
xlat
jae
gs
scas
enter
cli
mov
add
or
test
mov
mov
pop
sbb
inc
adc
push
lods
jmp
ljmp
xchg
popf
call
jg
jno
les
rorb
add
add
ret
dec
dec
ljmp
adc
inc
xor
mov
stos
iret
cmp
adc
and
and
sbb
mov
and
test
pop
jnp
in
push
add
es
cli
daa
xor
sbb
pop
rolb
dec
lock
mov
loopne
imul
iret
push
mov
pop
jno
pop
inc
ret
or
mov
gs
ljmp
in
jno
push
jns
xchg
mov
fidivs
mov
mov
sarb
dec
enter
xor
or
daa
repnz
xor
push
fs
xchg
pushf
test
in
adc
xor
clc
out
jb
aad
pop
inc
cmp
arpl
xchg
sahf
je
out
jecxz
sbb
xlat
sub
arpl
fildll
les
push
jl
aas
ret
and
push
aam
in
sti
mov
xchg
xor
aas
icebp
popa
das
cmp
jmp
push
push
fstpl
or
mov
icebp
ljmp
mov
sbb
sub
dec
push
iret
jae
insl
in
xchg
and
cmp
and
out
imul
cmp
icebp
lret
pop
dec
out
out
pop
scas
ja
inc
xchg
cld
loopne
or
cmp
sbb
pop
rol
dec
jmp
mov
mov
pop
das
xor
add
and
pop
fsub
mov
sbb
stos
add
ja
add
aaa
cs
cmpsl
idivb
rolb
xchg
fnsave
cmp
push
out
repnz
push
dec
js
xchg
test
mov
sub
test
stos
mov
pop
nop
xchg
xor
xlat
dec
push
loop
xchg
xor
mov
lcall
jns
lcall
dec
adc
add
mov
add
pop
mov
out
andb
loop
es
cmp
sbb
sbb
scas
test
jae
add
inc
pop
mov
sti
mov
mov
xor
pusha
or
stos
xchg
popf
and
adc
pop
dec
test
push
faddl
pop
pushf
inc
cmpsb
adc
repnz
jne
pusha
add
jne
mov
add
jne
pop
push
inc
lock
pop
jns
add
add
test
adc
loope
daa
push
xor
cld
push
dec
shrb
xchg
and
cltd
scas
xchg
xchg
push
lods
pop
pop
pop
or
in
aas
daa
inc
and
or
cmp
lcall
lret
or
jbe
jnp
cmp
leave
xor
jbe
add
test
jle
dec
dec
push
add
cld
pusha
out
subb
or
xchg
sub
stos
lret
sahf
adc
loope
push
out
mov
fsubs
pop
lret
xchg
int3
fmull
jle
dec
mov
sbb
je
outsb
pop
jge
cmpsb
add
shll
jo
cmp
and
push
inc
jg
fimull
dec
andb
movsb
inc
fcomip
mov
and
lahf
lahf
mov
mov
mov
enter
gs
fwait
xchg
inc
js
xchg
jb
mov
arpl
jns
hlt
sti
or
xchg
bound
sub
lds
mov
inc
inc
ja
jae
mov
xchg
jnp
jp
int
dec
aaa
push
xchg
mov
inc
xchg
lods
and
fsubrp
and
inc
aaa
repz
xchg
sbb
inc
xor
jb
enter
jns
arpl
scas
mov
mov
mov
cs
mov
cmp
jne
call
lock
dec
into
xchg
mov
ljmp
mov
insl
stc
mov
push
or
lret
mov
lds
les
jo
hlt
xchg
mov
mov
pop
rclb
sbb
inc
shlb
dec
subb
pop
jecxz
xchg
cmpsb
shrb
ss
icebp
imul
clc
mov
cmp
or
cmp
sub
ljmp
mov
mov
addb
ss
ja
mov
fcomi
je
addr16
or
filds
jle
lods
in
inc
lds
mov
in
push
fists
mov
test
cli
addl
add
ljmp
imull
in
push
lahf
and
test
push
daa
push
sbb
outsl
sbb
rolb
cmp
in
call
inc
rcrb
pusha
je
pop
and
add
xchg
dec
add
std
cltd
xlat
jnp
adc
jnp
pushf
adc
pop
add
jae
mov
nop
push
mov
inc
inc
xor
mov
ret
fs
jl
cltd
test
inc
sub
arpl
adcb
fstpt
sti
pop
jnp
push
add
xchg
popa
mov
mov
jecxz
enter
add
xchg
push
jg
movsb
into
sub
sub
cmpsb
xor
jge
insb
test
sti
stos
sbb
lret
adc
jo
out
pushf
jo
and
cmp
fsts
lret
fistpll
mov
cmp
jnp
xchg
out
lods
clc
add
cmp
add
sbb
iret
inc
sub
out
xchg
xchg
push
adc
add
adc
adc
sbb
daa
lods
lret
and
fs
dec
fs
dec
fstpt
mov
jecxz
sbb
lea
dec
rcr
hlt
sbb
in
xor
icebp
mov
or
pop
loopne
insb
xchg
jecxz
adc
jmp
insb
and
insl
pop
jbe
outsb
mov
lret
or
push
sbb
rclb
fisttps
repnz
divb
jae
sbb
sub
loop
int3
fwait
mov
call
dec
or
daa
cmpl
pop
add
mov
pop
lea
out
push
jne
sti
xchg
dec
mov
pop
mov
lods
test
pop
sbb
dec
out
adc
push
arpl
rcrl
or
mov
add
push
cmpsb
aas
mov
pop
and
cld
imul
sahf
sub
out
push
fs
push
cli
sti
and
mov
hlt
xchg
dec
cmpsb
xchg
or
push
dec
out
xor
pop
dec
jecxz
jbe
imul
fimuls
inc
nop
inc
mov
js
cmpsl
pop
loope
insb
enter
out
cmp
dec
cmc
dec
inc
cmp
lret
inc
insl
push
or
mov
repnz
stos
ret
push
add
adc
adc
js
push
ja
test
xor
adc
mov
inc
cmc
cmp
fwait
mov
adc
sbb
sbb
imulb
addr16
test
cmpsb
clc
mov
pop
and
mov
push
cmpsl
popa
add
les
repnz
add
jne
sbb
push
imul
jmp
lcall
outsb
cmp
js
or
call
mov
and
les
fists
pop
push
das
sbb
stos
push
dec
cmpsl
movsl
mov
sti
sbb
cs
xchg
jno
rcrb
xlat
ret
inc
andl
dec
sbb
das
cmp
call
cmp
lcall
sub
sub
out
and
sarl
jecxz
popf
in
icebp
in
jecxz
xchg
andb
xchg
dec
incb
es
and
push
xchg
fistl
sub
adc
xchg
iret
pop
inc
in
jne
iret
dec
loope
fmul
inc
aas
cmp
jmp
jl
xlat
test
loop
mov
cltd
or
js
pop
mov
xlat
or
mov
jns
push
test
fsqrt
fnstcw
imul
pop
or
xor
test
xchg
xor
test
fwait
pusha
mov
fcoms
shll
rcll
cltd
sub
outsl
mov
mov
js
xor
adc
aad
das
inc
push
and
das
aaa
xor
ss
push
lods
lcall
pop
sbb
orl
stc
pop
ret
idivl
sbb
loop
add
jp
adc
leave
fwait
mov
jo
cmc
jl
pop
mov
movsl
xchg
xchg
lods
mov
xchg
jne
inc
leave
xchg
jl
bound
cs
scas
shl
push
pop
add
xchg
pop
scas
xchg
and
mov
xor
sbb
xorb
sbb
aam
mov
rolb
push
popa
insl
or
adc
push
and
call
shl
sub
sti
xor
dec
xor
sbb
jb
cli
rcrb
xor
adc
lret
jl
mov
pop
push
in
lock
and
inc
pop
roll
adc
call
dec
adcl
jmp
jb
cmp
hlt
leave
popf
push
inc
dec
mov
mov
pop
in
es
stos
aad
lcall
dec
push
sbb
cmc
sub
or
adc
jne
std
push
aaa
jno
mov
bound
jge
xor
push
add
sub
sti
testb
ja
pop
pop
cwtl
xor
int3
and
lahf
jle
cld
jp
sbb
add
out
cltd
push
push
pop
push
jo
mov
loop
xchg
in
jbe
repnz
adc
sbb
ret
mov
int3
mov
shlb
es
push
cs
jecxz
aam
or
pop
add
mov
push
ret
int3
insl
mov
jae
arpl
pop
add
enter
mov
mov
in
sbb
inc
sbb
mov
movsl
in
mov
and
adc
or
in
dec
icebp
or
call
lret
in
dec
arpl
mov
or
js
dec
iret
outsl
xor
mov
adcb
pop
and
xchg
lds
lods
xchg
or
mov
push
push
pop
xchg
ret
and
adc
js
push
data16
orl
rcrb
sbb
int
xchg
lahf
or
lds
mov
cltd
sbb
push
jecxz
push
sar
or
in
jbe
add
andb
call
xchg
xchg
orb
inc
inc
xchg
mov
js
jno
lods
insl
cli
mov
cwtl
scas
jae
cmc
rclb
fwait
pop
dec
jp
lods
cmp
insl
mov
xchg
add
stos
les
fwait
cltd
cmpsl
lret
insl
std
cmp
push
inc
mov
cld
lock
icebp
dec
mov
fldt
out
mov
mov
sbb
push
sbb
mov
pop
in
int
stos
in
mov
push
popa
pop
es
jb
gs
dec
xor
push
scas
mov
pop
ret
push
in
test
incb
mov
bound
in
in
xchg
lods
aad
push
shlb
xor
int
test
xchg
sub
add
adc
les
out
adc
jmp
outsb
ret
int
stos
xor
mov
sub
inc
push
push
mov
jmp
je
out
and
fstl
outsl
or
outsl
jnp
mov
push
bswap
bnd
out
mov
test
arpl
loop
mov
ss
jl
jne
sub
xor
cwtl
fdivrs
mov
mov
fs
mov
add
fidivl
and
imul
daa
pop
xchg
sbb
sbb
xchg
jge
or
mov
xor
aaa
xor
std
sbb
shl
mov
mov
out
jl
pop
fnstsw
lret
push
inc
test
push
ficomps
push
scas
add
js
pop
mov
in
popf
daa
neg
in
xor
cmpsb
jge
ffreep
xchg
lods
add
mov
and
leave
jb
adc
cmp
mov
mov
or
sbb
push
xor
shrb
push
push
jmp
or
std
cmp
fistpll
cli
mov
ret
stos
sbb
xor
jne
imul
dec
xor
repz
les
aaa
cld
and
pop
incb
shll
xor
mov
dec
cs
ljmp
fdiv
adc
movsb
loopne
jae
movsl
lret
sbb
mov
mov
fnstsw
jne
mov
jb
and
xchg
rcrl
sub
sarl
arpl
sti
adc
sub
pop
js
and
into
add
les
cmpsl
cmpsl
dec
xchg
gs
lret
mov
movsl
emms
std
icebp
push
push
xlat
cmpsl
movl
lret
inc
jp
fneni(8087
pop
mov
es
mov
sarb
stos
dec
pusha
push
xlat
in
and
mov
jns
inc
jmp
loop
lea
insb
test
sub
frstor
cmp
jl
mov
fisubl
cmp
stc
out
inc
mov
lods
pop
hlt
jmp
loop
pop
mov
cli
sbb
mov
fists
sbb
jnp
or
push
rorl
or
sub
aam
jnp
push
adc
xor
mov
test
or
cmpsb
mov
cmp
jo
subl
xlat
dec
xor
test
jo
ficompl
mov
jbe
arpl
sti
adc
shr
arpl
or
ljmp
pop
leave
adc
shl
stos
ror
mov
jle
jno
aam
imul
in
loop
cwtl
popf
test
shrb
aam
lea
repnz
jae
lods
into
int3
call
pop
or
popa
mov
ret
dec
pop
andb
into
or
pop
stos
mov
jo
out
xor
in
and
outsb
cli
push
dec
xchg
push
push
fchs
ret
shlb
loopne
and
stos
pop
xlat
out
cs
stc
mov
les
xchg
mov
push
sbb
daa
lea
in
test
daa
jg
xor
test
cmp
aas
xchg
add
mov
xchg
adc
xchg
inc
inc
iret
cmp
pop
xor
mov
push
cld
xchg
push
cmp
arpl
cmp
sti
mov
lods
imul
push
jne
mov
mulb
imul
jl
dec
push
cmp
sbb
pop
hlt
mov
dec
pop
rolb
int3
and
lds
outsl
popa
les
std
xor
mov
pop
jp
divl
movsl
ror
iret
or
mov
ljmp
fstpl
enter
xchg
cwtl
stc
pop
int
movsl
pop
lahf
in
xchg
xchg
mov
enter
lds
scas
xor
cmc
out
and
jp
sahf
enter
fcomi
cwtl
int3
lock
dec
and
lods
pop
mov
and
fdivrl
dec
fnsave
aas
popf
xor
imul
mov
jge
pcmpgtw
fyl2xp1
mov
repz
mov
lock
add
jo
out
dec
or
inc
inc
cwtl
mov
ljmp
inc
ffreep
cmp
xor
push
push
and
pop
into
iret
mov
xor
lods
mov
jge
out
nop
clc
adc
push
jae
dec
leave
inc
and
mov
vsqrtss
mov
sbb
sub
stos
jnp
cmpsl
sub
xchg
cmp
or
cmp
les
or
shll
push
lock
icebp
xchg
das
add
js
ja
mov
adc
addr16
loopne
mov
nop
icebp
push
inc
sbb
jno
imull
pop
repz
mov
pop
cmpsb
mov
sbb
test
in
mov
sub
mov
data16
add
xor
ja
js
test
repnz
or
and
and
mov
jle
jge
xlat
lahf
inc
movsl
rorl
sub
imul
mov
daa
xchg
xor
dec
sbb
loopne
dec
std
dec
sti
jne
sbb
or
insb
sub
ficompl
lret
sbb
add
mov
imul
xor
out
pop
mov
sti
loope
cmp
fists
and
testl
std
or
xchg
cltd
and
pop
in
scas
insl
and
sti
ret
pop
ss
mov
cmp
xor
sbb
dec
testl
bound
inc
outsl
sub
push
xchg
repz
aam
mov
push
test
arpl
cmp
fsub
push
mov
insl
mov
addl
fwait
sti
les
fistpll
mov
lcall
outsl
jno
and
leave
nop
jae
insb
lods
insl
ret
push
and
xchg
rorl
xor
jno
jb
aas
lret
cmp
xor
xor
cmp
pop
xchg
pusha
ret
adc
inc
dec
sahf
jecxz
jb
sub
hlt
ss
push
fldt
or
add
sbb
fwait
orl
out
js
sub
decl
sub
mov
ss
xchg
dec
xor
fisubrl
jbe
orl
or
add
out
daa
aam
fmull
push
and
add
fstps
int3
aad
call
pop
sbb
push
arpl
dec
or
iret
cmc
sarl
testb
mov
ret
stos
sahf
ja
mov
mov
dec
xor
pusha
jmp
xchg
call
push
jmp
movsl
dec
dec
movsl
xor
pop
scas
cmp
push
inc
pop
stc
out
out
xchg
sub
dec
jae
dec
sbb
and
test
imull
sbb
mov
mov
jmp
cmpsb
fadds
mov
mov
adc
je
jp
or
lds
mov
push
into
dec
or
cmp
aam
test
mov
push
aam
dec
mov
jbe
popa
xor
mov
jne
jb
mov
xlat
mov
icebp
pop
or
or
testb
sbb
pop
mov
lds
movsb
add
inc
xor
nop
push
lret
out
jns
dec
add
mov
xor
and
xchg
jae
inc
adcb
fimuls
adc
sarb
iret
push
mov
cmp
jmp
lds
pop
dec
jg
aad
lds
push
xchg
dec
cltd
adc
jo
testb
jb
push
or
pop
sub
je
daa
ljmp
xor
outsb
bound
jno
jne
jle
popf
jne
out
mov
loopne
cmpb
mov
adc
mov
int3
mov
rcll
icebp
dec
cmpsb
push
fisubs
sahf
cmp
xchg
dec
loop
pop
movsb
push
push
les
mov
jle
sbb
loop
ficoms
cli
roll
jne
mov
mov
lahf
inc
iret
dec
aaa
stc
jl
sbb
xlat
scas
dec
jl
repnz
in
mov
mov
sbbb
ja
shrl
cmpsb
jp
sbb
push
loop
aas
ljmp
shrb
fldt
loope
mov
sub
aaa
out
into
adc
sub
pusha
pop
loop
repz
xchg
mov
std
xchg
fs
mov
or
aad
mov
mov
dec
test
stos
sub
xor
push
in
mov
lds
xor
test
push
pop
loop
jb
add
sub
xor
push
outsb
mov
xchg
sbb
mov
jne
add
push
sub
lods
loope,pt
jb
cmp
ds
sub
in
arpl
cmc
out
add
daa
lcall
pop
xor
insb
out
xor
cmp
inc
cs
mov
xor
cmpsl
ja
addr16
push
sbb
cmp
sub
out
imul
sahf
into
xchg
push
and
or
cld
mov
pop
cmc
hlt
xchg
scas
mov
mov
lahf
xchg
scas
mov
ljmp
sub
sahf
and
xchg
sti
xchg
jl
inc
add
mov
fcomps
jle
lret
lcall
pop
pusha
rcll
ja
scas
add
std
sub
xchg
stc
cmp
mov
stos
inc
inc
stos
aas
push
imul
cmp
cltd
cmpsb
shll
mov
call
cli
adc
adc
pop
insl
jecxz
fidivrs
leave
pushf
inc
cmp
daa
sahf
push
aam
sbb
loopne
mov
cs
je
push
add
mov
jle
mov
mov
scas
test
repz
shl
out
je
les
xor
mov
jbe
notb
dec
iret
mov
test
sub
inc
lea
mov
xchg
popf
push
or
arpl
outsl
cld
jo
xorl
cmp
pop
cwtl
mov
mull
test
dec
stos
cmp
dec
sub
es
stos
mov
cmpsb
inc
jb
popl
cltd
jb
lcall
add
popa
ja
mov
adc
sarb
mov
inc
movsb
mov
cmp
pop
fwait
adc
dec
je
in
or
lret
pop
cmp
jge
sahf
xchg
stos
roll
filds
lock
cmpsl
shl
jecxz
stos
dec
xchg
mov
jg
divb
mov
sub
pop
test
insl
mov
xlat
jmp
into
fdivs
push
jns
pop
shlb
add
xchg
push
insb
push
dec
jbe
dec
movsb
dec
pop
outsb
int
jo
push
xor
cmp
movsl
push
lret
jmp
imull
push
loope
aaa
cmc
push
inc
ret
into
imul
push
mov
and
lds
fdivs
and
fwait
loopne
test
in
outsb
fsts
cmpl
xor
enter
push
xchg
daa
andl
repz
int
cs
ss
pop
xchg
data16
jne
sbb
inc
js
ret
aam
add
pop
rcr
mov
ja
sub
push
xchg
or
and
negl
lcall
cmp
inc
jbe
fidivrl
push
fcompl
dec
mov
lea
mov
stc
cs
aad
je
xor
leave
in
dec
fiaddl
iret
jmp
cli
pop
mov
pusha
and
push
jle
lahf
stos
aam
ret
jbe
pop
xor
mov
jg
int
or
mov
ret
jle
divl
push
addb
popf
cmpsl
loop
add
inc
ficoml
adc
hlt
sub
shlb
mov
jle
push
ret
or
push
push
pop
add
loop
push
adc
and
pusha
imul
mov
xchg
mov
xchg
mov
pushl
cmc
out
pop
push
pop
xchg
test
mov
call
cmp
xchg
lret
lcall
popf
popf
push
cld
xchg
lcall
push
dec
je
stos
movsb
subb
jmp
les
xor
push
dec
fdivl
pop
pop
movsb
pop
inc
dec
ficomps
lods
in
sub
mov
out
push
out
outsb
cmp
icebp
lds
add
fisttpl
pop
xchg
scas
jg
push
notb
iret
gs
xchg
push
push
xor
pop
cmp
pop
mov
add
sub
mov
das
dec
sub
mov
push
sti
lret
jp
int
mov
js
mov
sarb
pop
orb
or
imul
js
cmp
into
lds
mull
lods
push
pusha
mov
push
pop
dec
dec
popf
leave
fadd
cwtl
sub
cmpsl
cwtl
cwtl
les
dec
add
inc
adc
loopne
cmp
js
mov
pop
pop
ret
int3
xchg
aam
mov
scas
pop
push
fs
cmp
jle
dec
adc
add
fwait
data16
fistps
adcl
int
aaa
dec
test
pop
inc
inc
push
cmp
lock
mov
sbb
fs
and
flds
js
add
cltd
mov
lahf
in
or
loopne
cltd
mov
mov
cmp
xor
sahf
lret
mov
out
pop
arpl
mull
inc
xchg
adc
rcrl
push
icebp
xchg
pusha
jne
dec
push
cmp
xor
sahf
test
stc
das
insl
adc
loope
fsubl
shr
pushf
fmulp
mov
mov
lret
mov
scas
jl
scas
nop
pop
mov
push
pop
mov
mov
lods
inc
subl
sub
in
xchg
clc
shl
push
ror
call
jge
and
sub
stos
out
cltd
sub
dec
push
inc
std
jnp
cmp
dec
dec
insb
adc
sub
mov
out
and
jb
arpl
fldl
jg
lods
je
jle
jl
mov
cmpb
dec
push
jmp
dec
sbb
leave
and
rolb
and
mov
scas
sahf
and
inc
fs
adc
jne
cmpsl
mov
outsb
cmp
fists
mov
dec
gs
shll
or
mov
sti
push
xchg
push
mul
mov
imul
sub
mov
sbb
insl
push
dec
sbb
push
es
cltd
aad
dec
aaa
or
or
test
mov
scas
mov
xor
and
and
fucomp
jo
test
out
jbe
sbb
jecxz
xchg
mov
clc
out
dec
inc
xchg
push
jo
test
mov
sbbl
mov
icebp
cmp
cltd
mov
push
aas
push
movsl
insb
imul
or
jb
or
enter
lret
cmp
add
sti
in
add
loope
test
mov
into
push
sub
and
addr16
and
mov
decb
sarb
dec
dec
pop
jge
inc
lods
insb
push
mov
jge
mov
xchg
fistpl
sub
push
sub
jecxz
add
js
mov
out
fcmovbe
sahf
mov
clc
adc
push
or
add
out
cmpsl
mov
and
mov
pop
leave
cmp
and
mov
fisttpll
fwait
jne
cwtl
loope
mov
add
mov
insb
jg
or
and
addb
mov
cltd
xchg
test
fnstcw
sarl
sar
loopne
lsl
out
scas
inc
imul
and
mov
xchg
dec
jbe
lahf
hlt
xchg
lea
mov
mov
cmp
in
fistpl
jecxz
movsb
sub
das
inc
xchg
push
add
repz
adc
pop
push
mov
rcrl
fbld
js
mov
add
iret
ljmp
ds
outsb
out
rolb
or
jne
clc
cwtl
cmp
fsubr
push
fsts
sbb
into
and
pop
ret
jno
adc
imul
in
mov
push
push
mov
push
mov
push
mov
aad
adc
xchg
sbb
sub
in
inc
imul
mov
inc
inc
xchg
inc
out
cmp
test
sbb
ret
inc
dec
push
incb
icebp
jg
jne
pop
jae
dec
roll
or
fwait
pop
dec
popf
jmp
test
shrb
stos
fisttpll
pop
inc
bound
add
push
pop
sarb
fimuls
or
fldenv
adc
sahf
jmp
lods
bound
or
cmp
out
cmc
sub
push
xor
movsl
dec
sub
inc
clc
lods
cmp
in
or
test
lods
fisubrl
push
jp
pop
mov
jl
mov
sbb
adc
adc
xchg
push
add
lods
mov
enter
out
xchg
not
xor
mov
mov
jbe
pop
adc
mov
xchg
dec
push
inc
push
imul
add
js
pop
popf
mov
mov
dec
mov
out
mov
pop
pushf
repz
dec
je
inc
addb
xor
pushf
and
sub
in
push
gs
push
js
das
push
pusha
out
push
outsl
or
adc
xor
sbb
and
imul
idivl
into
pop
fists
test
push
sar
out
xchg
xchg
insb
icebp
inc
lock
notl
jle
hlt
and
mov
sub
lret
cs
nop
arpl
add
xor
sub
mov
mov
fs
rclb
fidivl
out
xor
dec
mov
gs
ljmp
inc
adc
repnz
jbe
push
or
inc
jae
pop
adc
mov
ja
sbb
jle
and
cmpl
ret
in
cmp
int
insb
ret
mov
pusha
mov
adc
xchg
fwait
push
cmp
mov
ljmp
sbb
mov
roll
jle
popf
xchg
ds
dec
or
jl
mov
cld
adc
pop
sbb
scas
dec
sti
divb
sbb
sbb
fiadds
outsb
rcl
mov
ja
insb
fdiv
mov
dec
mov
pop
int
xchg
mov
lret
pop
scas
and
or
out
rorl
clc
bound
nop
push
aad
das
jnp
cmc
fbstp
sbb
pop
aad
repnz
movsl
out
pushf
iret
loope
cs
loop
xchg
push
in
leave
xchg
add
and
cli
add
test
adc
gs
gs
jp
inc
clc
ds
inc
jge
adc
outsl
mov
push
pop
daa
inc
stos
lret
addr16
jge
cwtl
movsl
push
incb
arpl
aas
loopne
mov
sti
dec
and
xor
adc
test
mov
ret
cmp
aam
lock
sub
ljmp
lock
loopne
subl
sbb
sub
and
dec
lsl
cmp
out
sahf
lcall
test
push
and
loopne
cs
mov
cmp
je
mov
or
xchg
inc
cmp
out
jbe
in
push
int
pop
mov
cmp
cmpsb
sbb
dec
and
push
jge
std
mov
pushf
loopne,pt
icebp
ljmp
push
xchg
lods
dec
inc
push
xor
mov
lea
sub
imul
or
fs
negb
addr16
scas
mov
mov
lret
push
push
sbbl
dec
jecxz
add
orl
loope
jg
int3
cwtl
mov
in
orl
xabort
ljmp
push
popa
scas
out
sbb
nop
daa
mov
loopne
ja
jae
enter
adc
ljmp
loopne
jae
mov
mov
xor
push
xor
sub
add
ss
pop
or
shll
push
dec
dec
or
cltd
cmp
shl
cmp
sub
in
adc
jae
cs
push
cmp
sub
shll
and
nop
push
mov
cltd
cs
cmp
jge
sub
add
push
push
push
sbb
push
popf
pop
xchg
pop
jle
xor
adc
mov
pop
jle
lock
sub
xlat
or
and
or
imul
fcmovb
mov
outsb
or
xchg
adcw
imul
ficoms
or
leave
mov
popa
call
mov
jle
mov
aad
jb
dec
dec
out
xlat
aaa
pop
mov
fwait
pop
mov
push
icebp
loope
jmp
ds
or
addr16
into
cmpsl
push
adc
into
pop
mov
arpl
add
push
notb
mov
sbb
lds
xor
pop
mov
adc
xchg
out
mov
or
out
mov
xor
repnz
fdivs
outsl
pop
cmp
out
dec
pop
imulb
sbbl
and
push
mov
outsl
in
mov
sub
popa
mov
sbb
inc
pop
push
dec
jge
movl
push
lret
pushf
ja
das
jge
jb
dec
cmp
aam
mov
mov
cmp
fcomip
or
out
jle
repnz
push
or
ret
insl
push
std
xchg
mov
insb
into
hlt
popa
std
popa
popl
or
jbe
cmp
jns
push
mov
mov
fwait
sbb
sub
adc
cmp
jmp
inc
pop
mov
mov
shlb
cmp
sub
loope
imul
std
or
pop
rcll
dec
pop
or
dec
addr16
mov
mov
mov
std
cli
xchg
arpl
std
cmp
sub
adc
jl
aam
mov
in
js
imul
pushf
lock
jl
mov
orb
lds
mov
xchg
cltd
inc
fcoms
or
test
inc
outsl
sub
push
or
and
scas
lods
into
ss
js
movsl
mov
je
stos
jp
mov
or
add
add
pushf
in
mov
scas
xchg
sti
ds
aam
mov
test
cli
inc
lea
xchg
mov
cwtl
out
fdiv
repnz
insb
in
xchg
xor
mov
xchg
sub
rcll
jae
imul
outsb
test
jne
std
in
stc
fildll
pop
xchg
dec
push
movl
enter
or
add
ss
or
fiaddl
popf
stc
retw
scas
outsl
xchg
push
mov
scas
mull
jae
mov
jle
iret
xlat
clc
push
or
and
sbb
pop
or
or
or
mov
jp
sbb
inc
cmp
mov
bound
mov
test
shll
mov
lods
mov
repz
mov
jb
pop
ret
jno
jg
add
inc
std
push
pop
jge
cld
aaa
mov
in
inc
fidivs
jae
pop
sbb
push
call
dec
mov
outsb
adc
push
push
mov
and
push
pop
sub
int
sbb
gs
ja
xor
enter
scas
dec
xor
out
rolb
shll
repz
addl
addl
xchg
sahf
xchg
cmp
jl
mov
or
inc
add
ds
mov
and
js
ss
bound
mov
lret
outsl
add
pop
cmpl
fidivl
mov
stc
fbld
jmp
sahf
xchg
lock
gs
clc
push
stos
cltd
faddl
aad
lea
xchg
arpl
sub
or
xchg
jg
inc
inc
cmp
cwtl
adcb
movsb
cmp
sub
hlt
or
mov
pop
mov
arpl
adc
mov
xchg
inc
push
mov
adc
aas
rcr
lea
inc
das
xor
pop
or
test
sbb
test
loope
push
fwait
mov
ret
lea
pop
jne
ret
ret
int3
addr16
add
jnp
or
cli
js
aas
or
testl
jns
push
bound
xor
jno
test
ror
ret
outsl
test
pop
jnp
decl
mov
cltd
out
test
ret
add
lock
pop
clc
mov
jg
js
add
jmp
ja
pop
dec
js
shll
mov
mov
cmp
in
ljmp
sub
xchg
mov
enter
dec
das
dec
insl
mov
pop
cltd
xorl
mov
sbb
ds
popa
sub
pop
fidivrl
fiaddl
cmp
out
and
sarb
test
nopl
and
jg
setbe
stos
xor
leave
lahf
xchg
mov
xor
in
mov
push
inc
hlt
jecxz
test
add
popa
outsl
sub
in
lds
or
pop
xchg
mov
adcb
pop
or
cmp
or
jns
lods
xor
cld
outsb
mov
cmpb
cs
sbb
xchg
jp
subb
pop
pop
test
xchg
cmp
add
je
dec
lods
pushf
addl
in
pop
xchg
push
popf
sub
pop
mov
fimull
mov
fsubs
imul
out
repnz
stos
or
repz
lods
test
out
pop
sbb
mov
dec
inc
lods
mov
pop
inc
xor
cmc
push
xchg
xchg
std
loopne
push
pop
out
mov
mov
adc
jne
rorb
pop
mov
rorl
mov
xchg
sub
pop
aaa
push
mov
rorb
cmp
sahf
sub
ret
outsb
push
add
sub
outsl
inc
jbe
sbb
rcll
stc
insl
cmp
push
sbb
sub
xor
mov
jl
mov
sub
into
jns
ret
jno
insl
jo
lea
cli
movaps
lahf
mov
push
mov
lods
cmpsl
jno
sub
cmpsb
pop
popf
dec
negl
popf
lock
aad
push
mov
mov
scas
ljmp
les
ret
push
outsb
and
repz
rorb
pop
repnz
outsb
inc
add
aam
sarl
aad
adc
adc
gs
and
xchg
adc
mov
jl
pop
mov
test
sub
lahf
vandnps
jb
mov
call
es
xor
xor
call
leave
mov
dec
adc
ja
fldl
add
ljmp
pop
call
xor
or
ret
fimull
and
cltd
push
jl
jne
das
inc
xor
mov
push
popf
cltd
xchg
popf
fwait
cmp
sbb
inc
dec
push
xor
in
stos
cmp
fldt
mov
pushf
mov
in
mov
mov
mov
int3
pop
jle
fisttps
push
mov
push
inc
lret
dec
stos
jge
out
in
out
sbb
pushf
daa
adc
stos
aaa
in
lret
mov
int
fistps
xlat
jo
add
out
and
mov
pop
ljmp
mov
adc
jg
out
jns
cld
cli
cmpsl
fists
fnsave
and
adc
xchg
xchg
cmc
jg
sbb
je
mov
adc
sbb
inc
in
jb
addr16
adc
xor
xchg
sbb
push
insb
enter
jmp
out
dec
pop
cwtl
jecxz
adc
add
sti
fisubrl
les
insl
lahf
add
cmp
push
jb
sbb
fucomp
pop
adc
popf
shl
dec
xchg
jo
lret
xor
add
lahf
in
push
cld
inc
test
mov
arpl
cltd
or
jno
jno
or
daa
or
xchg
stc
xchg
jmp
scas
in
mov
ss
pushf
mov
lods
pop
fucomi
cli
rol
lock
call
push
roll
pop
inc
mov
jns
out
or
out
fst
cwtl
cli
xchg
insb
push
test
in
outsb
inc
out
pop
jo
out
aam
push
adc
cmp
cmp
jnp
mov
sarl
shlb
push
and
xchg
lahf
cld
fcomps
es
push
call
lea
sbb
dec
jge
xchg
inc
popa
inc
or
jo
cmp
pop
push
mov
inc
out
cmp
inc
mov
lret
adc
call
jbe
inc
push
inc
lahf
jno
dec
adc
jbe
jp
test
vcomiss
sbb
add
arpl
xchg
sub
icebp
and
mov
push
fcompl
in
mov
or
sub
jne
pop
add
lret
hlt
xchg
sahf
jge
mov
cmpsb
dec
mov
mov
jle
lret
push
dec
shll
ja
icebp
xchg
popf
or
je
pop
sub
pop
lahf
mov
ficoms
das
fyl2xp1
shlb
pop
test
pusha
mov
inc
sub
pop
mov
cmc
xor
shll
test
divb
loop
pusha
into
cmc
or
cmp
outsl
rcll
gs
pop
xchg
nop
fadds
rolb
fisttpll
mov
jle
and
cmp
inc
xor
cmpsl
movsl
dec
in
pop
cwtl
dec
dec
xchg
mov
js
push
daa
stos
sub
hlt
dec
pop
mov
das
dec
inc
lret
sbb
cwtl
inc
inc
inc
loopne
popf
dec
and
loop
and
xchg
sub
scas
mov
rclb
mov
mov
inc
push
mov
mov
ret
ja
nop
andl
add
inc
pop
out
fstpl
push
or
pop
pop
rcrl
cmpsb
fisttps
push
pop
insl
xchg
ja
xchg
xchg
jb
and
sti
dec
xor
jb
xchg
insb
mov
ds
sbb
jbe
sub
jmp
int
fyl2x
addr16
cmpsb
jae
js
mov
sub
mov
adc
fwait
or
cmp
je
push
test
repnz
js
adc
iret
inc
xchg
mov
lds
mov
jp
je
test
ljmp
je
loopne
int
inc
orl
sahf
rcrl
mov
mov
xchg
mov
stc
xor
rcll
xchg
and
jg
js
push
test
shlb
arpl
jo
mov
adcb
fdivl
ret
cmp
jg
and
jo
dec
loope
lahf
js
imul
add
xchg
pop
jmp
push
arpl
mov
jecxz
jne
push
dec
dec
test
inc
adc
insb
xor
and
xchg
push
bound
movsb
pop
clc
sbb
jne
addr16
sbb
mov
pushf
xor
jnp
cwtl
ret
mov
adcb
sbb
fidivrl
outsl
clc
fidivl
mov
ds
test
sub
sbb
lea
leave
or
push
out
jns
mov
cltd
cltd
arpl
jmp
push
stc
add
popa
ret
lods
xor
cld
popa
in
adc
into
mov
mov
jb
sub
and
pop
repnz
mov
sahf
fwait
inc
jns
jnp
dec
mov
jb
dec
es
pop
dec
pop
in
std
int3
mov
mov
cmp
pop
pop
imul
sub
jle
and
adc
xor
icebp
or
cli
mov
mov
mov
cli
sarb
into
mov
iret
mov
adc
popa
shlb
jge
jp
xchg
push
test
add
adc
cmp
aad
ja
push
dec
pop
pinsrw
enter
das
ss
jbe
inc
mov
rorb
jae
stos
lcall
fbstp
pusha
les
imul
out
xchg
sarb
fs
test
ret
je
rcrl
jb
mov
or
xor
cltd
and
sub
dec
dec
mov
adc
fldlg2
fwait
jg
sub
fnstsw
cltd
insb
enter
in
cwtl
in
cmp
insl
xor
push
test
mov
outsb
mov
dec
lock
pop
sarb
pop
in
mov
aam
popa
sub
jae
insb
mov
pop
push
jecxz
jae
pop
test
cmpsb
cmc
les
sbb
push
data16
inc
lock
xor
mov
or
repz
push
rep
mov
pop
cmp
xchg
enter
test
mov
push
mov
addr16
pop
sub
jae,pt
dec
xor
sub
mov
mov
outsb
add
and
pop
and
imul
repz
pop
pop
cmc
shl
cli
iret
mov
mov
es
adc
jecxz
add
sbb
scas
pop
xchg
addr16
ficoml
mov
ret
pop
popa
add
rolb
int3
xchg
sub
ljmp
push
xor
fcmove
pop
push
or
dec
cmp
jo
into
iret
mov
jge
cmc
inc
std
xor
jge
sub
jle
scas
pop
stc
adc
xchg
mov
inc
into
loop
pop
sbb
push
jo
push
jo
fdivrl
pop
pop
jns
and
and
mov
aas
xor
mov
insb
xchg
fnstcw
stc
subb
bound
sti
pop
daa
xchg
stc
push
or
jne
mov
ret
and
sub
xlat
push
xor
xchg
pop
jo
insl
mov
pusha
push
mov
or
sub
sbb
fists
into
andl
inc
and
subb
adc
jns
xor
xchg
xor
mov
lock
cmpsl
mov
cltd
dec
push
cmp
push
adc
pop
mov
sub
lods
xchg
addr16
push
gs
xor
das
fadd
hlt
lahf
popa
ss
stos
and
std
aaa
test
scas
and
adc
ret
xor
lcall
xor
mov
repnz
mov
in
cmpsb
aam
push
push
and
dec
ljmp
int
or
les
jle
leave
add
and
add
movsl
dec
je
dec
add
cmp
inc
sub
pop
mov
lods
inc
pop
adc
or
test
inc
cmp
dec
or
insl
out
iret
mov
stos
adc
std
test
or
xchg
popa
dec
int
movsl
xor
cwtl
or
add
cmp
push
jp
imul
test
mov
jne
xor
lods
jnp
test
fisubrs
test
lahf
cmp
adcb
pop
loop
loop
call
jb
or
pusha
sub
ljmp
ficomps
outsl
sbb
xchg
mov
ljmp
mov
sub
mov
cmp
xchg
xchg
jae
add
data16
ret
int
adc
and
pop
push
pushf
stos
les
add
fdivrl
movsb
cmp
sbb
outsl
leave
xchg
scas
sub
test
stos
mov
sbb
jge
fucomip
xchg
jp
hlt
insl
lds
popa
scas
scas
xchg
int
jmp
das
into
jno
jbe
jbe
sub
pop
int3
push
xchg
xchg
xchg
aam
adc
loop
lock
cld
cltd
daa
std
jae
or
add
fildll
flds
push
sbb
idivb
mov
mov
push
int
aad
ret
push
ljmp
into
vmaxpd
repnz
movsb
mov
ret
mov
decl
adc
imul
xor
add
aam
cmp
and
cmc
xor
mov
mov
pop
js
sub
mov
xchg
sbb
sbb
fs
inc
fs
push
jne
jmp
rorb
lds
in
les
adc
add
xorb
inc
iret
add
test
imul
cli
lret
decb
jge
xlat
insl
push
dec
mov
sbb
fildl
or
pop
int
int
daa
adc
movsb
stos
lods
xlat
jecxz
mov
push
adc
pop
fs
jo
adcb
sub
mov
adc
call
push
jl
jg
out
pusha
pushf
inc
pop
adc
push
xchg
and
fsub
std
add
xchg
loope
ret
add
aaa
mov
lret
jmp
mov
test
sbb
sub
xor
popa
dec
add
loope
outsb
lods
push
cmp
cmp
out
imul
dec
in
and
push
pop
outsl
add
ret
fwait
xor
push
dec
int3
adc
repnz
lahf
mov
lret
pop
jnp
xor
lcall
cltd
cmp
sbb
pop
dec
je
dec
jmp
lret
addr16
repz
sub
mov
leave
cmp
pop
cmovns
push
push
dec
or
cmove
fldt
sarl
dec
test
cwtl
mov
fwait
lods
mov
mov
xchg
lds
mov
or
jns
call
repz
mov
insb
or
jb
or
pop
add
cmp
stos
cld
push
push
mov
cmc
cmp
repnz
dec
push
in
pop
xchg
jp
in
lret
out
aaa
arpl
lods
push
roll
sbb
pop
xchg
mov
sub
pop
imul
jo
in
pop
aas
js
cmp
jne
fisttpll
push
add
mov
fldl
jle
mov
push
xchg
pop
xchg
and
push
jle
xor
push
lcall
adc
jae
les
jne
paddq
js
xchg
mov
mov
xchg
xchg
in
xor
push
mov
ja
xor
stos
dec
rorb
stos
sbb
and
mov
mov
xorb
es
cli
push
xor
les
ja
dec
stos
jmp
je
pop
inc
cmpsb
mov
fcoms
mov
sti
or
insl
test
stc
push
loop
jp
cwtl
pop
mov
adc
cmpsl
aas
sbb
mov
sbb
test
jo
lret
out
das
das
sbb
imul
dec
mov
imul
das
and
push
clc
fstps
ja
scas
in
pop
sub
cmpsl
arpl
loope
sahf
jno
repz
je
jbe
lods
mov
lcall
dec
mov
scas
in
lea
imul
cwtl
push
ljmp
xchg
sbb
cmp
mov
xchg
dec
lods
xorb
add
inc
dec
repnz
loopne
jnp
imul
sbb
cli
mov
daa
xor
lahf
scas
sbb
sbb
xchg
mov
xchg
mov
jge
dec
sub
jbe
pop
in
inc
test
pop
and
sbb
leave
loop
mov
or
jp
pushf
cmp
in
dec
mov
cmp
bound
add
add
mov
mov
mov
pop
or
or
and
cmp
jns
dec
pop
fisubrl
sbb
inc
popa
sub
mov
xlat
repz
mov
and
shlb
pushw
cld
mov
mov
inc
xor
imul
nop
out
jae
xchg
sbb
stos
lret
insb
out
lcall
inc
popf
std
pop
stc
inc
lea
stos
data16
fsubl
sub
pop
out
addr16
jns
add
sub
jns
push
pushf
stos
push
cmp
cmp
add
mov
pop
shrl
das
nop
imull
lds
shll
add
pop
ds
or
sub
push
jno
xor
stos
and
mov
add
jns
add
decl
stos
test
out
pop
fwait
inc
out
jns
xchg
sti
xlat
inc
mov
repz
loopne
mov
dec
clc
dec
ds
lcall
in
mov
jne
or
cmc
rol
adc
cli
mov
xor
sub
add
inc
mov
shlb
test
loopne
js
lret
test
std
adcb
cmpsl
rolb
lods
xlat
mov
scas
jl
sub
cld
mov
insl
lret
inc
lret
test
rcl
inc
push
pop
dec
in
out
pop
in
ds
loopne
sbb
in
mov
data16
shl
xchg
jge
mov
mov
mov
inc
jno
lods
pop
decl
inc
mov
test
jb
insl
mov
jns
test
icebp
lods
xchg
xchg
cmpsb
sub
mov
mov
inc
cmp
int3
fwait
add
sub
arpl
mov
mov
sahf
data16
lret
mov
ds
leave
gs
mov
out
popf
lods
in
pushf
mov
fldenv
mov
ja
jp
fstpt
mov
dec
xchg
and
push
inc
sahf
jp
es
mov
pop
pop
aas
and
mov
imul
and
jecxz
push
push
sub
add
mov
mov
iret
jp
xor
mov
movsb
popf
cs
fcmovnbe
push
jecxz
pop
push
popa
data16
lret
in
sahf
mov
test
jge
fwait
jmp
repz
insl
xor
fists
int3
scas
mov
test
test
jnp
cmp
adc
es
mov
inc
aam
mov
mov
popl
ja
cmc
das
push
call
mov
cwtl
fldcw
mov
sbb
mov
cmp
stc
in
xchg
sub
leave
cmpsb
mov
jg
push
xchg
js
jnp
jmp
jle
jnp
out
cmove
in
push
lea
int3
mov
testb
mull
jnp
push
shlb
inc
filds
imul
inc
dec
call
add
mov
mov
rorb
sub
shlb
mov
out
dec
icebp
jecxz
lods
out
mov
jbe
movsl
cmp
mov
mov
jno
mov
lods
rep
push
push
fisubrs
xchg
sub
out
jae
jne
lods
or
fisubrs
fisubrl
pop
xlat
ret
push
push
movsl
mov
leave
push
jecxz
cs
fucomip
xchg
sub
cmp
pushl
jecxz
inc
sub
xchg
xchg
push
stos
push
cs
add
jecxz
or
into
out
mov
inc
iret
fistpll
lock
dec
pop
pop
xchg
mov
cli
jbe
test
sub
jg
cs
jnp
aam
or
mov
push
fisubrl
mov
mov
jp
cs
into
fwait
jnp
inc
pushf
pop
pop
fdivrs
push
loop
addr16
inc
imul
popf
cld
xlat
sarb
ss
test
cmpsl
insb
dec
inc
shlb
js
fs
fnstcw
in
sbb
jmp
movsb
sbb
outsl
fldt
cli
and
adc
xchg
scas
push
in
scas
push
mov
jp
push
cmp
inc
sbb
in
mov
aad
jmp
cmp
rclb
stos
lods
add
jmp
sub
int
cs
orl
push
jae
cwtl
or
sub
repnz
sti
xor
jecxz
pop
rolb
jl
sbb
mov
cmpsb
sub
clc
les
test
mov
notl
out
insb
mov
lahf
add
mov
pop
adc
ja
sbb
jmp
ret
loope
dec
xor
cmp
cli
add
mov
stos
mov
outsb
aaa
sub
and
mov
xchg
imul
sti
andl
negb
inc
xorl
addr16
inc
add
add
lea
lea
jp
fwait
bound
dec
lret
push
sub
pop
cmp
pop
ss
faddp
testl
sub
push
wrmsr
hlt
pop
fidivl
fstpt
je
mov
push
pushf
jg
pop
push
sub
or
sbb
mov
in
xchg
addl
or
push
cwtl
es
add
push
xchg
jbe
inc
add
push
pop
fldcw
add
movq
in
xchg
mov
in
repnz
pop
and
adc
adc
push
xor
ljmp
lret
sbb
scas
nop
cmpsb
hlt
xor
in
hlt
insl
pop
cwtl
mov
mov
push
mov
sub
mov
mov
pop
jns
inc
icebp
or
cmp
inc
or
and
scas
cwtl
lcall
push
lcall
popa
or
int3
lcall
pop
aas
pop
fsubrl
inc
jns
jno
into
push
push
push
out
cmpsb
out
jmp
inc
pop
push
lock
daa
mov
mov
std
xchg
xor
inc
mov
cmp
sbb
daa
aaa
popa
andb
and
clc
cmp
add
loopne
adc
adc
cmp
movsb
test
cmpsb
movsl
or
aad
decl
inc
push
scas
pop
push
xor
sbb
or
push
xlat
dec
es
push
lret
add
pushf
fwait
xlat
iret
mov
add
or
inc
call
mov
mov
jb
sub
cmc
subl
push
or
sbb
inc
fisttpl
mov
pop
nop
sub
fidivs
aam
xchg
fmul
pop
aaa
pop
xchg
mov
out
cli
dec
push
out
jae
adc
dec
or
stos
loope
fisubs
roll
jp
sarl
icebp
jle
cmp
sbb
call
dec
xchg
dec
sahf
add
cmp
xchg
cmp
out
dec
testb
cmpsl
pop
iret
xor
loop
lods
jnp
outsb
iret
xchg
stos
incb
sub
xchg
into
out
fiadds
jbe
cmp
popf
int3
pop
mov
lods
mov
sub
jg
push
bound
push
push
pop
xlat
mov
loopne
mov
add
insb
push
pop
sbb
sahf
aaa
fwait
out
jns
pop
addr16
insb
test
jo
enter
xchg
jnp
jne
daa
lcall
sbb
sub
cld
jg
leave
adc
jmp
xor
inc
inc
mov
or
in
xlat
iret
push
ss
or
mov
out
je
dec
in
arpl
push
inc
fdivl
cs
push
int
cmp
jmp
hlt
fdiv
cmp
out
xchg
in
xlat
xchg
stos
ja
push
inc
divl
enter
sub
and
lcall
scas
lock
das
lods
xor
add
sub
and
enter
fnstenv
push
popf
add
ja
orb
cmp
xchg
loop
push
sarl
adc
or
stos
subb
jno
lods
mov
mov
mov
addr16
shl
ret
into
add
nop
cld
cmc
cmp
cwtl
incb
imul
dec
outsb
in
orl
push
mov
int3
xchg
popfw
adc
movsb
emms
xor
cmp
decb
mov
fdivs
xor
in
movsb
popa
outsb
sbb
adc
ja
push
jns
jmp
adc
call
clc
shlb
cmp
gs
inc
popf
mov
mov
xchg
dec
pop
jmp
mov
adc
fdivrl
lcall
es
mov
xorb
mov
les
add
stos
cmpb
add
mov
jns
mov
inc
cltd
out
dec
out
iret
scas
or
pop
hlt
adc
in
mov
adc
ret
xchg
hlt
pop
sti
int3
xor
jmp
dec
mov
fcoml
es
adc
sbb
lods
pop
mov
push
adc
xor
inc
aaa
outsb
mov
es
fstpt
or
pop
in
test
clc
push
or
clc
inc
mov
aam
add
pop
cmp
mov
addr16
jae
xor
in
mov
add
jl
mov
sbb
add
int
sub
and
lcall
mov
mov
sub
imul
out
lahf
inc
xchg
mov
mov
into
dec
inc
lock
in
movsl
stos
inc
fisubs
mov
movsl
in
sarl
add
hlt
jo
inc
fwait
push
iret
jae
sub
or
xlat
lods
out
push
add
xor
dec
stc
js
in
ret
daa
sbb
lods
imul
xchg
adc
cmp
mov
jp
les
and
popf
scas
arpl
cmp
inc
das
mov
mov
movd
aaa
and
movsb
and
mov
dec
xor
pushf
cs
add
dec
cmp
inc
leave
insb
aam
mov
cld
fmull
les
sarl
lret
jae
jle
dec
stos
inc
mov
jmp
and
shrl
lea
mov
lcall
mov
sti
int3
pop
cmp
arpl
adc
dec
xchg
iret
addr16
stos
addb
inc
pop
popf
insl
aaa
pop
mov
xchg
and
aad
mov
xchg
es
daa
mov
inc
fisubrs
ds
cmp
jle
mov
jae
int
in
enter
int
mov
out
rorl
push
xchg
fildl
jmp
mov
aas
pop
fldl
out
sbb
add
scas
repz
leave
inc
push
mov
push
xchg
mov
pop
pusha
pop
aaa
cmpsl
sub
rolb
push
mov
psubq
int3
lock
stos
or
mov
movb
cmp
mov
ffreep
xchg
pushf
push
out
outsb
dec
lock
mov
mov
movsb
sbb
mov
mov
cltd
or
dec
inc
test
stos
aas
pop
movsl
mov
stos
fucomi
pop
jne
jo
cwtl
mov
sbb
enter
cli
sbbl
test
add
loop
icebp
jecxz
jmp
add
dec
jno
aam
or
insl
loopne
mov
xor
add
jb
push
mov
ljmp
push
test
sub
mov
insb
jecxz
ja
dec
in
test
cmpsb
mov
inc
cmp
cli
pop
xor
push
mov
scas
aas
push
add
fcomps
addl
enter
aam
pop
and
jbe
je
push
out
jg
sub
push
pop
jecxz
fidivrs
lea
jle
ss
mov
adc
test
adc
adc
icebp
or
dec
push
lods
mov
test
jno
repz
jnp
das
les
imul
cld
mov
lret
mov
mov
cmpl
jb
or
sbb
shll
mov
adc
sbb
inc
mov
pop
sbb
pop
cs
fwait
cs
pop
popa
loopne
ficoms
arpl
std
cwtl
stos
jbe
xor
cli
ja
dec
xchg
iret
js
adc
test
rcrl
int
leave
out
in
mov
jb
stc
ja
pop
int
daa
mov
mov
mov
sbb
sbb
shl
pop
ljmp
add
repnz
out
aam
xchg
div
mov
or
xlat
push
lods
loope
negl
xchg
mov
dec
pop
cltd
push
jo
push
cld
pop
pop
shrb
test
jg
pushl
pushf
out
or
cs
mov
sti
xlat
adc
incb
addr16
lret
jp
sub
lods
loope
adc
test
push
data16
push
out
inc
push
jp
inc
cmc
sub
fbld
and
pop
dec
push
addr16
data16
xchg
pop
filds
mov
sar
sbb
sar
arpl
imul
aaa
jge
adc
sub
push
mov
and
sbb
xchg
pop
inc
inc
popa
mov
ds
bound
pop
rcrb
mov
xor
scas
sbb
bound
sahf
mov
cmp
lock
adc
xor
push
movsb
push
repnz
dec
data16
aaa
mov
cmpsb
shl
fwait
or
scas
sti
cltd
imul
xor
inc
imul
xchg
or
lods
outsb
xlat
add
pop
pop
adc
dec
scas
xor
xorl
incb
and
insl
pop
call
cwtl
pop
push
in
outsb
or
mov
test
je
pop
out
mov
and
sub
sbb
ret
mov
mov
nop
fsubl
xchg
cmp
imul
xor
cmp
call
dec
shlb
divl
incl
jmp
icebp
xchg
mov
pop
outsb
fcmovu
jecxz
and
cmpsb
loopne
pusha
xchg
insl
jne
mov
movsl
pop
inc
mov
sub
mul
imul
pusha
outsl
cs
ljmp
lahf
mov
ss
mov
test
fnstsw
loope
mov
xor
aam
repz
xchg
mov
ljmp
imul
or
cmp
and
pop
mov
xchg
in
hlt
popf
add
mov
loopne
lock
outsb
mov
sbb
and
testb
stc
jo
dec
imul
pop
ljmp
or
ja
lahf
mov
or
mov
add
lcall
roll
pop
cmpsl
test
cltd
mov
cmc
lahf
lcall
mov
mov
imul
mov
loop
sbb
xor
pop
cwtl
mov
mov
adc
jb
jnp
mov
push
add
or
xor
lcall
stos
dec
add
or
add
xor
mov
sub
les
push
xor
lahf
cs
ljmp
mov
jne
sub
fidivs
loope
pop
cmpsl
repz
ljmp
jl
xor
mov
adc
and
ljmp
rorl
mov
pop
sub
cmpsl
lea
lods
jg
mov
xor
dec
sahf
inc
dec
dec
cwtl
data16
repnz
mov
lods
and
cmp
or
push
mov
sbb
push
push
movsb
popl
lret
xor
cmpsb
scas
enter
jmp
push
xchg
dec
dec
sbb
sti
mov
dec
mov
faddl
fcmovnbe
inc
in
jnp
fwait
jo
cmp
ror
fisttpl
dec
push
hlt
adc
test
push
inc
movsb
jmp
jmp
mov
mov
push
jne
or
bound
les
sub
sbb
dec
push
pop
jno
mov
aaa
sbb
and
or
jmp
dec
mov
mov
shll
mov
xorl
sub
jb
pop
pop
pop
subb
or
mov
in
out
pop
push
dec
xchg
int
lods
jg
and
loope
sbb
mov
in
fidivrs
enter
outsl
xchg
sub
faddl
out
fcmovnbe
pop
pop
flds
xchg
call
mov
pusha
stc
shrb
lods
lret
cmpl
rol
push
jmp
and
adc
xchg
data16
gs
ss
mov
enter
fs
fistl
push
xchg
jp
or
andl
repnz
addr16
loop
sbbl
mov
mov
sahf
inc
loop
ss
push
pop
and
and
pop
subb
shr
mov
les
xor
cmp
stos
push
jnp
mov
idiv
pop
negb
daa
movups
adc
cld
sar
xor
xor
push
leave
mov
pop
mov
push
cld
mov
xor
test
fldcw
mov
mov
push
and
js
mov
test
sub
cmp
inc
nop
cli
repnz
test
aas
test
ja
mov
add
ret
sub
xchg
cmp
push
jbe
test
pop
clc
pop
mov
pusha
or
xor
push
mov
mov
jmp
outsl
push
pop
add
loop
mov
cwtl
inc
fmull
sbb
sub
jo
insb
iret
xchg
sbb
pop
in
sbb
and
xchg
popf
out
leave
loope
sub
or
sub
xchg
lock
sub
std
jmp
jo
mov
addr16
mov
loope
dec
ds
out
scas
jecxz
pop
shrl
push
nop
xor
dec
es
or
test
sbb
mov
out
sahf
dec
dec
jbe
inc
adc
clc
xchg
cmp
lret
mov
pop
dec
iret
fldl
xchg
pushf
dec
mov
hlt
ja
out
out
pop
cmp
paddsb
dec
mov
js
fmuls
icebp
add
notb
cld
icebp
push
xlat
sub
ret
pop
movsb
aas
popa
jge
mov
aam
lods
das
sbb
and
call
cli
mov
pop
jp
sbb
pop
dec
imul
mov
mov
or
repnz
clc
add
lds
adc
fcmovne
rcl
and
data16
es
jle
loop
mov
sub
or
outsl
fsincos
shrl
dec
cld
jo
xor
cltd
daa
cld
sbbb
mov
add
pop
fs
push
xor
or
mov
xor
mov
pop
icebp
outsb
into
add
jbe
cmp
sub
aaa
push
leave
jmp
inc
cmp
filds
bound
lods
data16
negb
add
loopne
mov
insb
mov
xorl
jecxz
clc
cmc
out
icebp
aad
pop
ja
mov
or
xorl
mov
insb
push
mov
cld
mov
inc
les
pop
aam
lahf
mov
and
mov
jne
orb
daa
xor
sub
mov
mov
mov
xorl
stos
fwait
jno
xchg
mov
dec
movsl
mov
mov
icebp
xor
adc
or
xor
pop
in
add
sub
push
jo
mov
scas
adc
sbb
push
adc
xor
sub
add
push
sti
pop
je
inc
add
repnz
rcrl
test
repnz
xor
jge
outsb
and
cmp
mov
mov
leave
add
jle
imul
int
cli
sbbl
in
push
sub
icebp
xchg
popa
daa
adc
sbb
popl
inc
or
dec
ret
iret
xor
jo
sahf
jmp
test
int
mov
out
mov
mov
or
dec
push
cmpsb
sub
rcrl
lock
lods
add
dec
outsb
fbld
add
xchg
mov
fisttpll
push
mov
xlat
in
not
mov
popa
lcall
add
jnp
lds
ret
aam
imul
out
mov
mov
push
rorl
xchg
addl
dec
sub
fsubl
push
into
xchg
mov
cltd
rorl
jmp
mov
mov
movsl
dec
jp
mov
out
ds
pop
pop
es
scas
jno
ja
sbb
ret
aas
lcall
jge
xchg
call
push
sahf
push
adc
adc
rorl
jae
or
dec
or
or
pusha
rcrb
push
arpl
sbb
ja
mov
xchg
addr16
mov
fwait
xchg
mov
daa
cwtl
aas
pop
mov
pop
loope
cmp
es
jmp
shl
add
shrb
aam
xor
aas
cmp
mov
pushf
cmp
pop
enter
lret
add
inc
daa
cld
leave
cld
lea
mov
sbb
mov
jmp
cmpsb
cmp
fisubrl
inc
dec
add
loopne
mov
sbb
cmp
cmp
dec
cs
aad
lahf
arpl
mov
fcoms
negl
dec
scas
rorl
cmpb
dec
cmp
jnp
jo
or
mull
sbb
mov
out
test
jo
or
pop
cmp
cmp
mov
scas
iret
xor
add
push
jo
mov
pop
gs
stos
sar
or
incl
xchg
shl
in
dec
cld
cmp
cmpb
in
sahf
lahf
test
lods
pop
loopne
xchg
pop
shlb
lods
inc
fisubrs
ret
push
in
mov
jno
xchg
ficomps
inc
mov
lods
mov
imul
ret
bound
adc
cwtl
rcl
mov
pop
xor
push
ja
inc
and
out
addr16
mov
lahf
and
xchg
enter
sti
leave
sub
fwait
lock
lock
andl
sbb
mov
inc
jl
push
adc
xchg
sbb
sub
clc
jnp
hlt
arpl
jns
sbb
out
ljmp
mov
dec
sbb
dec
loope
divb
push
xchg
andl
jnp
in
arpl
mov
lock
leave
fwait
insl
adc
xchg
xchg
fnstsw
cmpw
movsb
mov
int3
jnp
aaa
cmp
pop
insl
ja
xchg
pop
xor
push
lock
inc
sti
stos
outsl
lea
or
sbb
neg
xlat
cli
xchg
sbb
xlat
lret
push
adc
cmpsb
jbe
xchg
lods
jnp
imul
mov
dec
pop
ljmp
cmc
add
adc
fisubrl
pop
add
lock
fs
leave
lea
rol
loopne
int3
test
add
cwtl
pop
mov
cmc
mov
jae
loope
cmpsb
adc
mov
cmp
pop
add
jmp
lods
and
and
hlt
xchg
xor
into
pop
in
gs
shll
les
mov
mov
or
shlb
mov
mov
in
sbb
add
ds
test
xor
ljmp
mov
add
imul
push
fucomip
pop
das
mov
aam
sbb
adc
andl
notb
rorl
mov
xchg
mov
inc
in
daa
stc
dec
in
push
or
negl
subb
out
mov
aam
or
iret
lret
aad
movsb
xor
sahf
lds
popa
mov
inc
dec
cmpsb
cmpsb
fucomi
pop
pusha
cld
dec
xchg
push
lods
popa
subl
test
out
add
les
fldt
dec
or
sbb
jl
lcall
dec
mov
push
mov
lahf
inc
pop
mov
cli
xchg
das
xchg
pusha
mov
into
dec
xlat
pushf
es
rcrb
sbb
dec
pop
clc
dec
mov
out
je
adc
into
xlat
mov
test
addr16
scas
popf
xchg
add
adc
mov
fnstenv
out
mov
in
shl
test
cmp
dec
pop
das
clc
ror
pop
jle
mov
sti
scas
or
push
movsl
push
rolb
jnp
rol
or
and
call
stos
int3
sub
add
mulb
sub
fsubr
stc
or
inc
pop
and
sbbb
inc
insb
and
xchg
pop
xor
xor
popf
into
notl
divb
add
psubw
iret
xor
add
xchg
mov
jo
dec
sti
xor
mov
js
push
pop
popa
dec
push
inc
mov
repz
xor
lds
pop
subl
mov
push
adc
cmp
mov
imul
movsb
mov
cmp
ja
gs
aad
test
adc
or
push
lds
mov
icebp
ds
inc
adcb
mov
sbb
pop
ljmp
push
cmp
out
push
mov
sbb
in
in
push
push
and
mov
sti
mov
cmc
scas
xchg
ljmp
stos
inc
mov
cmpsb
mulb
adc
repnz
xchg
pop
in
pop
sub
xchg
packssdw
test
sub
sbb
cmp
mov
xor
mov
mov
pop
inc
sub
lret
mov
lods
das
shlb
mov
pop
sahf
mov
sub
mov
jbe
mov
mov
dec
pop
sar
dec
mov
jle
add
sub
and
jmp
add
sub
push
push
jne
or
xor
cmp
jnp
hlt
sub
xchg
in
dec
lods
test
rcll
mov
fs
ficoml
repnz
dec
aad
ja
movsb
cmpsl
in
xchg
xchg
lcall
fldenv
pop
cmp
cli
ss
jmp
xchg
aad
push
sti
and
sahf
popf
cmpsb
daa
push
xor
jbe
dec
idivb
pushf
ljmp
or
add
inc
adc
shrl
pop
inc
mov
push
dec
insl
hlt
inc
mov
jmp
and
loopne
adc
cmpsb
mov
int
fdivrs
aaa
sub
xor
pop
inc
orl
aaa
sarb
mul
dec
mov
lods
jbe
mov
icebp
push
mov
xchg
adc
adc
clc
xchg
push
xlat
pop
jbe
rcrb
in
cmc
xor
lods
je
and
aas
ss
jle
lahf
add
jp
adc
add
mov
loopne
shrl
rorl
push
aas
icebp
sub
or
test
loop
sti
push
jmp
stos
arpl
jmp
push
iret
mov
aad
sbb
or
adc
lods
adc
or
and
mov
pusha
testb
lea
mov
jae
fisubl
ljmp
std
ret
cltd
loope
imul
inc
dec
or
dec
jae
xor
jp
jnp
out
lds
pop
push
mov
and
fwait
dec
arpl
adc
lods
shrl
and
sbb
sti
insl
imul
or
cmpsl
iret
cmpsb
sarl
cltd
stos
push
insl
cmp
jge
cltd
lods
xchg
popl
and
or
loopne
add
test
push
pop
aam
stos
or
inc
push
sbb
fwait
rclb
sbb
cmp
jb
iret
sub
pop
mov
jmp
pop
mov
xor
or
sub
loopne
lcall
cmp
lahf
cmp
and
add
xor
cmpsb
shll
out
fwait
jmp
lret
jae
fisttpll
dec
sub
push
lods
mov
jle
inc
cmpsl
fs
mov
fdiv
jge
or
push
mov
pusha
iret
nop
popf
xchg
cmpsb
dec
lret
test
pop
lock
xchg
sbb
out
imul
pushf
or
jmp
jne
fwait
mov
add
addb
daa
test
lock
sub
mov
lcall
pusha
sub
jns
popa
dec
insb
lods
ja
fisubs
mov
gs
pop
enter
outsb
or
ret
repnz
in
shlb
xlat
mov
arpl
paddsw
cmp
xchg
jo
sti
mov
xor
jge
ds
pop
push
push
cs
mov
xchg
in
popf
sbbl
fwait
adc
sbb
add
andl
xlat
push
out
mov
push
jle
push
push
outsb
test
and
jecxz
pushw
dec
ret
xchg
lods
add
cmp
bound
add
dec
in
jmp
xor
pop
mov
mov
ljmp
sub
leave
pusha
xchg
adc
iret
mov
jb
das
push
shrl
andb
push
pop
xlat
int3
adc
stos
inc
or
loope
sbb
movsb
mov
push
scas
rclb
scas
dec
xchg
sub
xchg
mov
bound
xchg
test
dec
das
lock
int
mov
jnp
mov
or
pop
or
push
jle
addr16
pop
test
cld
lods
or
ss
cmp
loope
mov
xor
mov
cmp
sub
xor
insb
pop
push
and
mov
dec
ljmp
jnp
sub
fldl
not
pusha
pop
neg
ljmp
push
clc
movsl
inc
loop
hlt
xor
pusha
dec
loop
mov
divl
xchg
push
movsb
bound
cmp
idiv
push
xlat
or
pop
in
sbb
jle
cmp
pop
jg
scas
xchg
lea
sub
sbbl
ret
xchg
fcom
mov
into
xchg
sbb
movsl
inc
sub
ja
xchg
clc
shl
stc
jnp
adc
push
aaa
test
fisubl
xlat
ret
imul
pop
sbb
mov
fdivs
fcoml
mov
mov
hlt
stos
nop
push
jl
into
push
adc
jae
adc
pop
pop
pop
das
hlt
or
add
lock
push
sub
imul
sub
and
mov
js
inc
mov
push
add
lret
add
je
mov
push
mov
mov
add
bound
dec
cltd
xor
push
xor
or
rcrb
cmp
inc
int
cmp
jge
mov
mov
adc
das
insl
jecxz
push
jo
inc
jp
sub
mov
sub
int
test
ret
les
jb
cmpl
mov
in
jmp
adcl
dec
inc
ret
stos
movsl
test
mov
lds
jmp
daa
mov
popf
insl
lods
stc
mov
stos
je
lds
pop
fs
pushf
enter
or
xchg
aaa
push
mov
adc
and
inc
xor
filds
push
fstpt
ret
stos
and
sahf
stc
push
lea
xchg
enter
int
fcomps
xchg
push
xchg
daa
lret
inc
xchg
mov
iret
push
scas
add
mov
rclb
jl
in
cld
subb
and
cwtl
enter
push
sbb
scas
cltd
arpl
es
clc
clc
negb
dec
mov
mov
adc
inc
out
xchg
push
popf
mov
fstp
and
ss
sti
pop
mov
in
xor
cs
mov
or
pop
dec
bound
cwtl
aaa
adc
mov
xor
in
pushf
sbb
dec
dec
mov
pop
ret
repnz
dec
mov
daa
sub
sub
or
stos
mov
mov
int3
mov
xor
lods
test
bound
std
insl
add
mov
pushf
mov
lahf
push
and
andb
mov
sbb
int3
dec
sbb
imul
popf
sub
mov
jmp
aaa
scas
jmp
pop
jnp
hlt
push
dec
aam
ds
cmpl
jns
arpl
cltd
repnz
les
add
fisttpl
mov
cmp
stos
mov
sahf
mov
add
outsb
daa
cmp
call
or
cmp
int3
pop
fstl
out
jge
aaa
push
je
out
adc
insl
int
vshufps
xlat
jmp
cmpl
mov
mov
es
mov
pop
pop
lods
call
inc
stos
or
mov
xor
add
push
or
ror
cmp
insl
cmp
stos
fcompl
mov
mov
jmp
fsub
sbb
inc
dec
jmp
dec
sub
lret
push
shll
xor
sbb
clc
hlt
push
cmp
test
fucomp
adc
or
pushf
jl
cmp
into
jl
out
in
movsl
mov
in
or
sar
push
push
push
pop
lret
int3
out
loop
jp
enter
shll
fsts
and
xor
mov
or
jp
sbb
mov
sbb
loopne
fwait
fwait
jp
pop
data16
test
lock
bound
mov
fisubs
mov
xchg
push
ss
outsb
cmp
jns
sbb
adc
lret
iret
lret
ficoms
add
es
and
xchg
adc
lcall
jb
or
lahf
mov
lds
pop
adc
push
dec
and
inc
sbb
pop
cmp
orl
fmull
and
lret
or
inc
cmp
and
out
out
and
mov
push
stos
aam
outsb
xchg
rcll
psadbw
mov
test
push
add
enter
fnstsw
outsb
shll
adc
int
lcall
fidivl
aam
lods
andl
mov
cmc
cmp
rcll
add
inc
lods
int3
icebp
ret
mov
sub
add
sub
mov
cmpsb
or
sbb
adc
and
inc
bnd
adc
stos
das
insb
ret
and
je
pop
cmpsl
bound
daa
sbb
jl
cmp
in
lds
jnp
sub
aam
adc
or
pop
xor
jo
pop
mov
mov
xchg
sbb
jne
lods
loop
cmpl
add
arpl
xor
xlat
cltd
adc
enter
in
into
inc
jne
fwait
sub
mov
mov
hlt
push
cmpsl
jmp
inc
push
mov
sbb
jmp
call
add
cmpsb
loopne
shlb
push
dec
mov
pop
aas
mov
and
insl
into
aad
stc
ficompl
sbb
adc
cmp
mov
mov
xchg
lret
test
push
adc
mov
pop
inc
decl
fidivrl
inc
ret
das
adc
push
dec
es
sahf
cmp
daa
scas
js
mov
outsb
or
jb
ljmp
cmp
xor
xor
xchg
iret
fstpl
stc
leave
les
and
shl
icebp
push
and
out
testl
mov
fcompl
in
lds
cmpsb
pop
ja
add
mov
push
in
stos
jle
cmpsl
roll
push
xchg
push
and
inc
aam
sahf
sbb
xchg
lret
mov
inc
pop
cmp
mov
cs
loop
jnp
in
insl
inc
lds
mov
sub
into
cmpsb
inc
lcall
xchg
repnz
jle
or
mov
push
sbb
adc
test
out
mov
push
pop
andb
pop
xchg
inc
clc
and
xor
cwtl
jecxz
lret
in
cmpsl
mov
sub
mov
mov
add
cli
jns
xchg
fcoml
popf
mov
pusha
push
daa
sub
xor
dec
aam
pop
popa
mov
adc
cs
dec
sbb
jnp
push
adc
xlat
test
lret
xchg
fnstenv
mov
dec
dec
pop
sahf
fimuls
sbb
cmp
mov
out
inc
arpl
push
cmp
rcll
mov
hlt
test
mov
pop
and
push
sub
dec
arpl
cltd
pop
pop
push
fsubs
sbbl
push
pop
cld
push
pop
mov
test
mov
lods
in
mov
cld
add
dec
push
adc
fwait
aaa
fists
adc
or
mov
dec
pop
sbb
lea
lods
loop
xchg
jl
mov
pushf
loope
jno
jo
mov
jo
fdivr
mov
notl
sbb
xchg
xor
sub
push
and
loop
loop
pop
fstpt
and
les
push
inc
scas
ficoms
mov
add
jecxz
xorb
outsb
aad
ffreep
pop
add
popf
leave
and
sbb
jecxz
and
adc
inc
popa
dec
add
pop
mov
cmp
jge
mov
divps
stos
push
xchg
fcoml
in
xchg
hlt
loop
jne
add
jg
imul
jno
push
lahf
jno
xor
adcl
jb
aas
stos
call
inc
icebp
pop
aam
pop
ret
jp
push
stc
add
xchg
fsubl
mov
lcall
fsubl
ret
or
sahf
xor
push
cli
jns
xchg
orl
insb
add
pop
dec
mul
cmp
and
jp
fnstsw
pop
pop
or
clc
insl
aad
cmp
fbld
mov
pop
xor
je
cld
rorb
pop
mov
cmp
xor
inc
das
mov
mov
ljmp
cmp
cmp
lods
cltd
into
jecxz
sbb
xchg
mov
and
dec
or
xor
aam
pop
jns
sub
cmp
mov
dec
mov
iret
mov
push
xor
lods
adc
movsl
stos
jo
add
ja
mov
xchg
loopne
subb
inc
das
ret
cmp
mov
rorl
inc
popa
mov
or
push
lds
outsb
push
lret
ss
test
jecxz
int3
lds
cld
sub
insl
inc
les
adc
loopne
fldl
test
mov
scas
pop
std
popf
xor
or
xor
add
push
cmp
or
mov
int
push
mov
xchg
pushf
iret
adc
insl
paddusw
adc
mov
fnsave
out
mov
xchg
test
call
scas
cmpsb
push
jns
add
adc
mov
je
test
cmp
lahf
mov
mov
mov
and
imul
sbb
repz
fwait
xchg
iret
mov
adc
jmp
imul
ljmp
mov
ja
dec
jge
rol
int
add
jnp
addl
mov
fidivl
or
int
cltd
bound
mov
add
sahf
shlb
ja
and
pop
sub
cmp
mov
aas
pop
lea
xor
les
sarb
aam
ret
mov
mov
and
jne
loop
pop
out
sti
sbb
sbb
std
dec
push
push
mov
repz
fmull
adc
lock
outsl
mov
jbe
pop
dec
fisubs
mov
lret
mov
xchg
mov
adcl
mov
pop
clc
adc
pop
jmp
mov
mov
cli
gs
mov
test
inc
pop
loope
lods
mov
dec
push
in
xor
fnstsw
aad
fiaddl
mov
sub
cmpl
xchg
ret
mull
stos
lea
ljmp
call
lea
adc
js
sub
mov
cli
test
sti
cmp
pusha
push
inc
mov
arpl
cmp
push
test
xor
fmuls
jnp
jle
and
fstpl
xchg
cli
mov
ret
xor
and
or
jbe
inc
test
stc
repnz
adc
clc
stos
mov
or
xchg
je
sbb
imul
fisubs
mov
in
jne
xor
mov
cmpsl
sbb
loop
pop
xchg
adc
and
int3
js
insl
cmp
jl
pop
loope
inc
movsb
cmp
fnstenv
mov
xchg
cmpsb
jb
pop
mov
sbb
iret
in
lahf
cmpl
push
insb
sbb
loopne
and
rcll
cmp
or
inc
mov
cmpsl
outsl
leave
insl
sarb
call
jo
xor
out
sub
ret
ret
dec
sahf
int3
enter
es
int3
push
mov
nop
imul
xor
js
cmpsl
sti
test
ljmp
nop
sar
add
push
add
adc
notl
cmp
ret
sub
dec
mov
or
lods
fwait
sub
dec
push
jbe
mov
imul
push
jb
fists
jg
pop
data16
das
dec
adc
rcrb
cmpsb
mov
aam
and
xor
push
rep
push
insl
aas
jecxz
std
cmpsl
sbb
dec
lds
fldz
sbb
cli
sahf
adc
inc
cs
fbstp
aad
mov
and
add
leave
insb
dec
cmp
jge
push
loopne
inc
adc
xchg
aas
add
popf
fsubp
xchg
movsl
or
sub
mov
jmp
dec
cli
arpl
cwtl
sbb
or
mov
jge
mov
cli
rolb
inc
adc
cmpsl
ret
cmc
dec
jbe
xor
loopne
xchg
pusha
adc
cmp
mov
mov
movsb
jnp
bound
xchg
cltd
jl
xchg
fstpl
psubusb
jbe
push
dec
into
push
pop
lcall
jb
fisttpl
sbb
test
adcl
mov
xchg
push
stos
mov
mov
push
mov
outsb
cmp
lds
mov
jmp
add
leave
pop
xor
inc
dec
cwtl
icebp
pop
cmp
push
sbb
stc
push
das
iret
xor
lret
sub
loop
nop
out
cmp
or
mov
adc
fimull
and
in
iret
xor
mov
iret
push
loop
jb
lods
lret
arpl
data16
push
stc
dec
leave
sbbl
mov
add
pop
je
clc
stc
and
int3
and
rolb
adc
iret
and
gs
pushf
shll
loopne
outsb
or
dec
fiadds
dec
enter
fisttpll
xor
xchg
insl
and
and
fwait
mov
movsl
test
gs
adc
add
cmp
ja
cs
stos
je
inc
adc
push
int3
mov
pop
out
enter
dec
mov
xorb
mov
xlat
or
jecxz
in
icebp
les
pusha
push
or
mov
sbb
xchg
jb
or
or
test
ficoml
push
cmp
or
jo
loope
xor
or
nop
pushf
add
mov
xchg
fidivrs
xchg
add
adc
aam
ljmp
cs
sahf
xlat
popa
dec
icebp
push
xchg
outsl
mov
and
rcr
aas
loop
jae
dec
gs
mov
inc
sbb
lret
jp
xorl
lahf
jns
cld
lods
insl
lret
ret
cmc
nop
dec
fisubs
mov
sti
mov
adc
ss
dec
mov
call
push
testl
int
jge
dec
sbb
daa
out
lret
sub
or
enter
jne
pushf
rorl
jae
jle
pusha
enter
lret
shl
loop
mov
dec
sub
add
pop
xchg
dec
adc
xor
sbbb
mov
rclb
mov
mov
push
push
pop
cwtl
fcmovb
icebp
lds
pop
inc
push
cwtl
movsl
fs
and
jmp
adc
jne
fcomps
jne
xchg
mov
cmc
jo
cmpsl
std
cmp
pop
and
movsb
jle
cmp
test
xor
pushf
push
fsub
xorl
sbb
out
ret
xor
faddl
insb
sub
aam
xorb
jle
ds
insb
mov
xchg
cmpsb
xor
dec
mov
ret
push
mov
mull
aas
aaa
push
imul
insb
adc
stos
and
popa
xchg
xchg
xlat
rorl
add
mov
add
pop
jmp
mov
divl
jmp
fstl
in
addr16
xchg
cltd
add
sahf
cwtl
mov
and
popf
dec
shl
jmp
and
and
cmp
mov
int3
shrl
fs
dec
and
adc
pusha
add
adc
in
cmp
pop
in
enter
pop
repz
mov
xorl
jb
aaa
in
shll
cwtl
imul
push
hlt
add
pop
dec
ljmp
add
add
or
cmc
andl
test
ss
out
fxch
fimull
popf
mov
out
xchg
jb
sbb
pop
leave
xor
xchg
leave
inc
mov
mov
or
roll
lds
insb
lcall
test
mov
fwait
mov
imul
cltd
dec
mov
inc
imul
rorl
les
call
inc
data16
cs
mov
movsb
xor
stos
and
xchg
int
cmpsb
shll
int
inc
pop
lods
lods
inc
insb
lea
in
inc
or
xchg
pop
outsb
setl
test
and
loop
bound
out
mov
push
mov
dec
xchg
mov
iret
iret
or
add
adc
fists
dec
or
xchg
jl
fidivl
ds
test
push
dec
cmpl
pop
testb
adc
bound
lahf
scas
das
clc
or
add
fwait
test
popa
sub
shlb
test
out
popf
cmpsb
mov
push
scas
pushf
out
mov
fmuls
aam
jl
xorl
inc
xor
push
push
jmp
stc
or
mov
pop
jl
repnz
jno
adc
jbe
popa
xchg
loop
inc
xor
sub
aaa
dec
cwtl
in
jge
sbb
sbb
xor
out
scas
mov
fwait
xorb
sub
jmp
and
jl
cmp
imulb
mov
xchg
fstp
jno
mov
mov
sbb
cmp
enter
inc
icebp
insb
movsb
rorb
push
enter
push
test
movsb
cmp
xor
and
iretw
xchg
sti
cmp
jnp
mov
popa
pushl
push
mov
jge
fnstenv
add
repnz
loopne
mov
lret
or
out
xor
ss
pop
jae
ss
lahf
sbb
mov
js
movsb
mov
mov
pushw
xor
mov
adc
mov
bound
arpl
into
mov
mul
test
rcrl
inc
xor
loop
adc
std
or
idivb
xor
jl
push
dec
push
xor
mov
rcrb
arpl
fsubrp
jmp
aaa
mov
jbe
sbb
sbb
sti
sub
ja
or
test
js
jmp
imul
pop
adcl
ret
xor
insl
in
repz
inc
int3
inc
mov
cmp
push
xchg
lret
push
xchg
and
out
xor
cli
mov
cltd
push
stos
mov
jns
jae
neg
mov
or
test
lahf
cwtl
mov
shll
xchg
pop
jge
jo
dec
outsl
orl
jge
stos
ja
inc
pop
cld
popf
sar
adcb
cmp
pop
lods
inc
dec
mov
adc
jb
outsl
ja
stc
out
pop
std
pop
cmpsl
or
sbb
push
aas
sbb
loope
movsl
push
cmpsb
popf
cmp
addr16
xchg
fadds
push
loope
outsb
xchg
cld
inc
ja
jmp
test
sub
test
out
jne
fsubs
pusha
es
out
enter
sub
jp
pop
push
mov
cmp
mov
stos
clc
mov
lcall
cmpsb
rcrl
lahf
fcmovnu
dec
pop
int3
ret
fisubrs
loope
fwait
daa
dec
sti
push
and
loope
stc
mov
push
dec
mov
call
and
xchg
rorb
xchg
mov
shlb
es
add
daa
adc
sbb
std
jge
inc
bound
stc
orl
repnz
ret
inc
jne
pop
daa
ret
or
aam
mov
dec
adc
in
sbb
repz
or
push
mov
call
xchg
fwait
jecxz
cmp
mov
inc
dec
data16
enter
jp
pusha
hlt
jns
jg
xchg
or
xchg
pop
cld
sub
add
fidivs
movsb
sbb
mov
dec
scas
jbe
pop
adc
add
lahf
outsl
push
xchg
jbe
mov
inc
out
dec
and
ret
fcomps
mull
jmp
mov
mov
mov
sarb
mov
int3
jns
rorl
push
inc
andb
leave
mov
inc
sbb
mov
jbe,pt
inc
cli
mov
icebp
loop
cmp
sbb
insb
adc
inc
inc
in
iret
or
cmpsb
adc
push
jmp
scas
movsb
mov
sub
notb
mov
pop
outsl
push
clc
loopne
sbb
mov
mov
fs
cld
stos
jge
mov
jle
mov
cld
or
aam
cmp
jl
jg
inc
add
push
ss
lds
das
jl
jecxz
cmp
into
push
dec
push
xchg
push
sub
test
inc
aaa
mov
dec
pop
mov
jne
sub
popf
clc
sahf
mov
nop
fwait
dec
dec
adc
push
pop
ret
push
shl
cmp
test
mov
scas
or
sbb
mov
lret
dec
inc
sub
gs
cmp
mov
dec
ret
adc
jmp
cmp
std
lods
pop
sub
jl
out
mov
or
or
pop
mov
mov
rclb
call
addr16
xchg
dec
call
js
ja
sub
cmp
push
fcomps
ja
mov
pop
call
addr16
and
mov
mov
loope
fildl
das
lret
test
mov
jnp
xor
dec
xchg
mov
inc
sbb
mov
pop
sub
ds
mov
add
inc
dec
adc
std
mov
mov
adc
xchg
dec
mov
sti
ss
cvtps2pi
adc
lahf
jecxz
fdivs
and
inc
and
push
mov
add
sbb
enter
sti
in
popa
xchg
jcxz
lock
mov
daa
push
rclb
dec
jne
mov
mov
ljmp
jae
les
mov
out
jmp
pop
sub
popf
test
cmpsb
xchg
or
js
xor
or
aam
adc
cmp
lcall
xchg
or
mov
pop
cwtl
or
mov
mov
mov
ja
sub
out
jae
push
inc
jns
call
daa
rcrb
jne
push
xchg
daa
mov
icebp
add
out
cmp
int
jl
in
cmpsl
ja
cli
lock
lock
fwait
sub
test
xchg
and
mov
cltd
jle
xchg
push
and
rorb
dec
outsl
dec
cltd
out
bound
inc
sub
xchg
cltd
bound
call
int
and
in
insl
xorl
xor
xchg
add
ss
pop
out
aaa
insb
dec
out
dec
aas
jge
mov
outsb
jle
pop
jnp
lcall
mov
cli
sub
lcall
xchg
pop
fldt
insb
jno
xchg
sbb
jno
sahf
lea
loop
loopne
leave
dec
loop
jne
bound
fldenv
sub
adc
dec
jns
inc
insb
xor
sahf
mov
sbb
cmp
jmp
mov
push
cs
loop
pop
outsl
insl
jnp
mov
fmull
cmp
sbb
xlat
xchg
pop
sub
out
push
sub
mov
and
scas
mov
pop
adc
cmc
shr
mov
xchg
push
adc
mov
out
lret
and
or
stos
mov
adc
fisubrs
cmpxchg
mov
repz
mov
shlb
dec
out
cmp
mov
pop
push
dec
or
lahf
jp
push
fdivrl
call
fcoms
add
in
xor
fisttps
in
fadds
cmp
cmp
xor
xlat
pop
sub
jae
mov
cmp
aad
adc
mov
fsubl
pop
adcb
jmp
fsubrl
lcall
mov
data16
and
mov
cltd
push
push
fisttpl
jnp
add
dec
pop
or
jbe
adc
pop
repnz
cmp
nop
icebp
test
mov
inc
mov
pop
dec
sub
inc
idivb
je
mov
push
inc
and
inc
mov
push
ds
mov
aad
pop
enter
xchg
js
mov
lock
push
fdivs
pushf
data16
mov
mov
inc
test
js
in
mov
out
mov
mov
xor
dec
lcall
mov
test
xor
pop
cmc
movsl
fcomps
or
ja
mov
inc
sbb
aaa
push
aam
dec
aas
outsb
mov
mov
cmp
mov
dec
pop
lds
icebp
into
repz
out
fwait
mov
dec
in
aas
jmp
imul
imul
call
repz
mov
push
popf
in
pop
or
inc
insb
jp
pop
add
or
or
mov
sahf
loopne
loopne
aam
ds
jae
inc
movsb
push
cmpsb
add
add
mov
out
stc
push
push
push
mov
movsb
add
xor
jl
and
adc
inc
lds
out
inc
cmp
pop
out
movsl
mov
and
shll
rol
fmuls
lret
inc
cs
inc
lods
and
push
push
add
daa
xchg
and
repz
rorb
mov
pop
popa
lods
pop
setl
decl
push
test
subl
lods
xor
sub
repz
adc
out
jl,pt
or
imul
lea
pop
cwtl
iret
mov
mov
jmp
cs
mov
in
cmp
add
pushf
int
shr
fs
sbb
test
mul
cmc
sub
mov
in
xor
lret
and
lods
nop
sti
sbb
arpl
dec
repnz
mov
aaa
jge
dec
sub
sti
loopne,pn
xchg
mov
add
pop
or
jl
stc
fcoms
add
lea
pop
stos
adc
xchg
push
lret
or
addr16
inc
mov
test
mov
sbb
je
cmp
int
or
arpl
icebp
or
inc
lcall
xchg
jns
fdivr
out
adc
lret
or
lods
aaa
stc
pusha
dec
enter
cwtl
hlt
nop
and
data16
rclb
push
test
lock
xchg
addl
inc
loope
js
std
ss
or
aad
add
pop
mov
fwait
in
jle
xchg
pop
rorl
sar
cmp
push
mov
jmp
pop
mov
loope
mov
mov
out
push
add
lcall
fs
outsb
pop
add
stos
mov
sti
rol
aaa
scas
mov
xor
xchg
in
jmp
cmp
adc
outsb
inc
push
mov
add
lret
jnp
mov
stos
fcoml
mov
pop
push
xor
stos
or
les
cmpsb
movsl
sti
push
and
mov
pop
sbb
testl
adc
lret
and
mov
clc
xchg
sbb
fwait
and
inc
cmpsb
arpl
pop
mov
clc
sub
test
outsb
xchg
xchg
cmp
xor
mov
rcll
xchg
aas
sarl
sub
jbe
xor
out
popa
mov
mov
ljmp
test
sub
pop
mov
cld
dec
or
lahf
shll
pop
lds
mov
jae
mov
outsl
rcr
popf
cs
mov
loopne
dec
inc
mov
lahf
lahf
mov
ljmp
loopne
scas
stc
push
out
roll
pop
or
adc
mov
mov
test
cmpl
scas
lock
flds
xlat
sbb
push
xchg
fisttps
leave
adc
pop
fs
or
mov
push
mov
bound
mov
cmp
ret
movsb
cmp
jb
frstor
jp
movsb
lds
jne
repnz
xchg
fisubl
movsb
rorb
daa
xor
mov
pusha
sarl
and
mov
or
cmpsb
je
lahf
add
mov
fwait
test
ret
out
fisttps
aad
iret
hlt
sbb
mov
jno
fucomi
inc
gs
orl
jg
call
jns
adc
and
add
jae
aam
sti
jle
sub
mov
addr16
ljmp
mov
outsl
mov
cltd
ds
in
cmp
mov
sub
push
lahf
gs
fwait
das
push
cmp
sub
aaa
out
jnp
pushf
cmp
xor
clc
mov
adc
and
clc
and
adcb
cmp
loopne
bound
or
xlat
adc
mov
repz
mov
test
xor
jae
mov
inc
js
mov
movntps
or
divb
pop
push
jne
add
push
lret
test
push
jbe
pop
aam
les
rorb
inc
pop
pop
pop
test
mov
xor
decl
daa
cmc
push
pop
lret
test
stos
sub
and
sarb
jb
xchg
out
xor
jecxz
addr16
fisubrl
or
fstl
mov
dec
dec
sbb
cmpb
mov
sub
push
out
xchg
or
add
mov
repnz
jge
ficoml
cmp
popf
mov
or
dec
mov
push
daa
and
adc
sub
imul
sbb
andl
mov
mov
mov
outsl
in
xlat
lock
push
stc
in
pop
inc
pop
fistpll
or
sbb
push
iret
clc
bnd
mov
jno
enter
mov
outsb
push
cmc
bound
push
stos
repnz
or
cs
mov
aaa
adc
pop
add
sti
insl
popa
imul
mov
leave
andl
arpl
test
in
ret
adc
push
inc
fimuls
aas
int3
mov
fiadds
push
repz
add
jle
adc
cmp
out
imul
js
cmp
popf
xor
cmc
cltd
daa
jp
xchg
andb
sbb
xor
std
jnp
jo
add
mov
pop
shl
mov
icebp
stos
cli
mov
inc
inc
cmp
test
add
xor
ret
push
ret
fs
psrlq
dec
push
hlt
cld
das
pop
out
jl
mov
pop
aaa
push
cli
fistl
inc
in
mov
cwtl
pop
icebp
sbb
mov
ja
cmp
orl
jne
ljmp
stos
in
cs
sub
inc
lea
or
js
movsl
repnz
stc
movl
push
push
ljmp
enter
adc
sbb
gs
scas
out
mov
mov
repz
rorb
jnp
ds
adc
stos
push
lret
jp
jecxz
jae
hlt
cwtl
mov
sub
xor
or
jmp
xchg
pop
repz
xchg
dec
and
bound
loop
inc
fiaddl
inc
xchg
mov
aam
subb
mov
imul
cli
es
mov
ret
leave
rolb
arpl
add
xchg
cmp
clc
ret
cmp
push
jp
dec
mov
gs
pop
jge
in
adc
aam
adc
sbb
in
push
sub
dec
cmpsb
es
xor
aad
imul
push
inc
inc
adc
pop
lret
jns
movsl
ljmp
mov
movsb
and
test
imul
adc
or
pop
stos
cmp
jo
mov
pop
icebp
xor
xchg
mov
jp
je
mov
arpl
fisttpl
repnz
lcall
sbb
daa
ffreep
and
enter
dec
cmc
cmp
cmp
andl
test
into
in
fsubl
in
push
adc
in
fucomi
test
call
cmp
cvtps2pd
mov
inc
arpl
test
andl
ss
shl
aad
adc
sub
mov
jb
push
push
pop
jbe
fidivl
mov
dec
xchg
inc
icebp
sbb
das
out
int3
pop
cmp
xchg
js
lahf
paddb
ret
adc
inc
out
mov
xor
and
leave
repnz
and
stc
cltd
into
lret
jp
adc
pop
xchg
mov
push
shl
jge
pop
or
sub
aad
sub
push
xor
gs
jecxz
and
jg
mov
xchg
sub
inc
scas
mov
and
call
pop
and
dec
lret
mov
popa
cmp
bound
lret
fsubl
fwait
dec
lds
cmpsl
and
imul
or
out
divb
sbb
aaa
add
pop
jne
outsl
mov
sbb
mov
jbe
je
mov
cmp
sti
sub
inc
sbb
xchg
jp
fs
mov
jge
mov
jmp
push
or
lods
xchg
cmp
bound
rolb
loop
cmp
out
push
aaa
ret
jns
lahf
jne
jg
test
rclb
addr16
or
xchg
test
sbb
mov
imul
cmp
push
lret
add
xchg
pop
mov
mov
lock
dec
test
inc
fs
data16
and
je
mov
loope
adc
pop
xor
xor
sahf
xor
xor
movsw
bound
pushaw
mov
cmp
fsts
imull
ljmp
jo
pop
dec
push
add
pop
fsubrs
mov
or
cmp
lahf
ret
mov
mov
cmc
xchg
aas
mov
cmp
fucom
fidivrl
ljmp
outsb
inc
pop
adc
es
popa
dec
and
imul
inc
sbb
rorl
mov
mov
sbb
sbb
dec
cmp
push
dec
idivb
ljmp
pushl
xor
jecxz
insb
dec
lahf
xchg
adc
lcall
test
fildl
add
pop
insb
or
pop
pop
xor
mov
outsb
cli
rcr
push
fcmovnbe
push
daa
imul
xchg
les
or
and
adc
je
pop
add
mov
xchg
mov
dec
or
scas
cwtl
sbb
sbb
or
adc
inc
aad
xor
mov
pop
sbb
mov
adc
dec
pop
movsl
xlat
xor
fs
test
mov
rcrl
shr
outsb
scas
or
clc
out
xchg
jmp
add
lock
pop
insl
daa
rclb
ret
lods
shlb
xlat
test
sbb
js
stc
sub
lods
sub
mov
aas
jp
out
fs
xchg
pop
lods
push
stc
clc
ss
ret
and
lds
mov
jle
cli
mov
js
lods
fsubrl
cmpb
call
inc
fistpll
mov
and
shll
dec
scas
inc
out
or
mov
daa
into
adc
pop
jmp
add
fldcw
push
dec
dec
mov
xlat
outsl
movsl
pop
out
jp
enter
lahf
mov
mov
mov
sub
pop
lcall
lcall
or
jge
imul
cmp
cld
lds
cld
dec
ret
sbb
test
sti
rcr
cs
mov
push
and
jno
notl
cld
std
add
movsb
add
push
imul
mov
pop
ret
adc
dec
fcompl
popa
lea
sahf
push
outsl
push
mov
insb
sbb
inc
pop
std
push
sarb
sbb
sbb
popa
daa
cmp
xchg
sbb
and
loopne
push
mov
int3
add
addr16
das
cmp
call
mov
hlt
in
xchg
icebp
ds
xchg
ds
dec
fcomp
test
pushl
push
scas
pop
in
fisubrl
in
sub
xchg
mov
push
adc
jl
inc
int
and
mov
int
dec
mov
out
shrb
rol
xor
pushf
sbb
xchg
jo
out
loopne
mov
lcall
mov
mov
mov
cmc
mov
out
cmc
xor
repz
pop
fprem
dec
lods
adc
dec
xor
aad
js
hlt
cmp
cs
rorb
test
sbb
pop
push
xor
jae
inc
in
aam
jb
fimuls
xchg
or
shrl
pushf
push
sbb
in
mov
mov
inc
insb
push
mov
sbb
add
mov
rclb
jg
mov
mov
sub
lea
rorl
jle
dec
arpl
sub
xor
sbb
xor
or
xchg
or
cwtl
int3
jg
inc
add
jmp
sbb
push
inc
insl
xlat
mov
and
stos
push
jp
inc
lds
movl
movsb
js
lcall
add
cmpsl
in
fs
out
imul
xor
gs
dec
pop
and
sub
xlat
lea
jmp
aam
sahf
jle
gs
das
xor
mov
rcll
ss
mov
stc
mov
inc
ds
jno
mov
outsb
pushf
and
mov
mov
mov
xchg
adc
sbb
sbb
mov
loop
or
and
es
mov
sti
jae
sti
pop
movsl
shr
xor
into
enter
xor
outsl
lods
outsb
sbb
inc
pop
cmp
das
cltd
sub
es
jge
ret
cmpsb
sbb
sub
lods
repnz
pop
inc
cmp
mov
das
cmp
sub
loope
sub
fcmovb
push
cmp
cwtl
xchg
adc
jne
dec
sbb
nop
pop
or
mov
and
fsubs
sbb
sub
dec
dec
ret
das
sub
std
dec
fwait
addr16
cwtl
les
fisubs
xchg
adc
inc
fmuls
mov
out
inc
xchg
and
popf
push
sbb
xchg
loop
imul
mov
jge
dec
push
dec
mov
sbb
inc
repnz
or
push
lea
subl
lret
push
xchg
cwtl
aam
dec
es
daa
in
inc
mov
or
in
inc
popf
cmp
in
das
in
fucomip
mov
adc
jmp
cmp
shll
xor
popf
sub
hlt
aad
mov
pop
add
inc
cmp
xor
pop
jmp
ds
mov
push
test
cltd
xchg
pop
nop
mov
jl
ret
mov
movsl
outsl
cmpsl
jnp
test
in
pop
je
add
idivl
mov
dec
pop
xchg
mull
pop
loope
sbb
push
test
shll
inc
aam
cmp
inc
xlat
mov
cmp
jns
sahf
push
loop
sbb
and
adc
ja
mov
imul
std
add
scas
repz
rcr
jg
mov
movsl
mov
and
mov
mov
cmp
ljmp
lock
sbb
stos
repz
addr16
cmp
cmpsb
das
xlat
mov
insb
add
mov
add
pop
mov
inc
orb
push
mov
out
jb
fwait
pusha
sbb
repnz
cmp
and
jno
push
jo
arpl
es
sbb
sbb
fs
rolb
pop
scas
pop
push
leave
js
push
mov
sub
dec
jle
das
xorl
push
hlt
das
call
push
mov
sbb
jp
in
dec
sub
add
and
or
add
in
in
dec
fdivs
mov
lock
xor
jg
and
inc
inc
popf
scas
mov
mov
cltd
call
add
mov
out
jle
jne
or
xchg
lret
iret
imul
inc
adc
jne
sarb
inc
pop
js
aad
in
vmaskmovdqu
jmp
mov
fadd
test
mov
rcrb
add
and
pop
mov
in
popf
xor
push
scas
jno
aam
mov
test
cmpsb
nop
hlt
jbe
js
or
push
push
add
or
or
jmp
mov
sbb
push
sti
pushw
idiv
xor
popf
iret
lcall
xchg
and
scas
sbb
cmp
sbb
fmul
test
test
shr
popf
push
stos
adc
cmp
pop
or
xchg
insl
jne
jno
mov
stos
sbb
ja
int3
mov
lods
rorb
mulb
cmp
ja
mov
enter
mov
xchg
or
or
das
mov
stos
add
loope
push
stc
mov
mov
lret
adc
jmp
pusha
movb
xchg
jecxz
ret
jae
leave
cmp
xchg
sub
sbb
inc
mov
mov
and
xchg
jle
mov
insl
int3
dec
imul
pop
push
in
les
enter
mov
or
inc
movsl
cmp
dec
pop
lcall
push
pop
test
mov
test
iret
jg
dec
sbbl
movl
sbb
sti
dec
rolb
insl
stos
xchg
mov
js
inc
popf
cmp
mov
rcll
in
mov
adc
pop
inc
cmp
aas
xchg
jp
pop
jp
test
in
mov
xlat
ss
mov
insl
jecxz
insl
mov
mov
dec
aaa
mulb
sbb
pop
pop
fnstcw
push
and
inc
enter
sub
fs
cwtl
ret
scas
push
aaa
data16
dec
nop
push
ljmp
pushl
outsb
sub
xlat
mov
out
jge
into
mov
adcl
pop
icebp
xor
scas
popa
lock
sar
adc
sbb
loopne
pop
jnp
ret
cwtl
insl
scas
sub
scas
and
cmpsl
cltd
inc
jb
mov
inc
sti
push
cld
mov
xchg
add
xor
fldenv
sub
mov
rep
add
pop
xlat
popa
push
xchg
jns
mov
jge
aaa
in
and
lds
iret
out
dec
adc
push
pop
lret
xlat
bswap
test
xor
or
cs
pop
and
xchg
and
xchg
outsl
xor
mov
in
cmp
popa
adc
add
jnp
test
and
repnz
call
cli
scas
xor
pop
je
mov
sub
stc
cmc
fwait
stos
rcr
shlb
mov
inc
sub
aam
cwtl
push
bound
dec
xlat
int3
ficoml
lods
fiadds
test
fs
jmp
cltd
add
xchg
out
xchg
xchg
jg
addr16
and
and
into
add
push
xchg
dec
nop
lret
cmc
das
js
cli
lock
icebp
stc
xchg
aad
adc
mov
cli
out
inc
fnstsw
jge
mov
jmp
fwait
push
mov
xlat
inc
icebp
inc
xchg
mov
mov
mov
sbbb
mov
ja
push
and
add
cli
lods
sbb
jb
stos
sub
in
jp
jl
popa
icebp
cmp
push
adc
pop
ljmp
pop
pop
popa
adc
aam
dec
cld
mov
hlt
test
or
leave
sub
je
out
fwait
pop
fs
or
cmp
out
push
and
hlt
and
adc
mov
mov
cmpsl
dec
mov
daa
push
dec
push
push
in
mov
sbb
push
pusha
xchg
cmp
in
ret
repz
jmp
int3
sbb
pop
mov
inc
lods
cmp
xor
sbb
icebp
lods
xchg
in
inc
add
lock
and
mov
js
cld
push
lods
xchg
cwtl
cli
add
aad
mov
out
nop
xchg
scas
xor
lock
mov
xor
in
pushf
loop
lret
out
xchg
push
ljmp
mov
jno
pop
mov
fs
sbb
sbb
inc
and
xchg
add
jecxz
hlt
dec
lds
mov
xchg
loop
xchg
lcall
addr16
mov
test
stc
sub
repz
mov
pop
sbb
std
cld
push
ss
sti
sbb
imul
popf
inc
idiv
mov
cmp
jge
rcll
cli
mov
mov
shl
rolb
jmp
notl
push
inc
scas
rcrb
push
jp
ja
bound
sub
pop
lods
test
xchg
dec
inc
movsb
rorb
mov
dec
dec
push
push
cmp
lret
out
push
and
add
push
cmp
fdivrl
mov
jne
pop
imul
lea
jnp
cmp
fidivrl
xchg
aam
imul
insb
lds
repnz
mov
popa
inc
lods
dec
inc
jno
icebp
xchg
jae
pop
int
scas
jb
push
jns
testb
adc
out
or
outsb
add
aad
xor
frstor
xor
xor
push
xor
dec
and
inc
aas
cwtl
sub
jp
imul
jo
push
mov
fisttps
repz
jl
ret
fmuls
shlb
or
icebp
out
mov
out
das
leave
pop
inc
popf
popf
xor
sbb
jbe
mov
push
lret
push
dec
mov
fisubl
xchg
ds
cmp
stos
rep
mov
xchg
mov
gs
adc
add
pop
xchg
inc
push
inc
hlt
and
jmp
je
and
mov
aas
fsubp
xchg
mov
dec
mov
adc
lods
adc
mov
mov
mov
fdivrl
clc
stc
int
pop
and
or
cmp
shrb
xlat
les
dec
testb
dec
adc
dec
sbb
inc
jecxz
dec
mulb
push
cld
aaa
std
into
dec
test
sbb
fwait
jmp
push
les
xor
lea
je
jae
loop
adc
adc
xor
xchg
test
je
adc
mov
sarb
fiadds
adc
jns
call
das
fstpt
mov
je
fnstcw
dec
imull
add
ja
add
je
fwait
dec
mov
push
jne
movsb
push
into
out
inc
nop
and
sbb
mov
xchg
ja
int
sbb
add
loop
add
loop
mov
gs
fld
cmpsb
mov
jne
lds
gs
int3
ljmp
push
adc
inc
movsl
jo
xchg
aaa
out
pop
sub
fldt
mov
movsb
cmp
add
sub
iret
jns
push
test
mov
insl
cli
repz
push
pop
sub
sub
imul
dec
inc
inc
push
mov
push
lcall
mov
push
xor
lods
dec
js
cld
cmp
mov
lcall
push
pop
std
dec
fisubrl
arpl
out
lods
andl
jnp
or
mov
jmp
cmp
inc
idivl
enter
sub
push
xor
adc
cmp
mov
les
es
enter
adcb
loopne
les
enter
fwait
push
add
adc
xchg
fsubs
jle
shll
mov
xchg
insb
mov
out
inc
dec
les
arpl
nop
sti
cs
adc
shr
mov
mov
into
scas
js
nop
in
fwait
inc
pop
dec
gs
xor
jno
mov
fcmovnu
in
xor
test
adc
ljmp
dec
or
cwtl
adc
ss
cwtl
and
adc
imul
outsl
and
fdivrl
out
inc
orl
mov
js
test
popf
xor
push
pop
fscale
and
cmp
enter
xlat
fnstenv
subl
ret
jge
inc
push
jp
adc
jb
xor
rol
xlat
inc
sbb
rorl
stos
jbe
adc
push
bound
cmp
rcl
movsb
adc
cmp
rorl
mov
mov
mov
and
jne
pop
dec
push
cwtl
push
mov
jns
inc
call
push
or
mov
or
dec
xchg
adc
dec
bound
add
mov
inc
test
adc
popf
sbb
jbe
repz
dec
push
aas
insb
xchg
scas
addr16
mov
jle
lahf
jb
test
push
xchg
call
pusha
lcall
xchg
mov
bound
aad
shlb
sbb
out
jnp
divb
push
insl
xlat
lock
sbb
inc
loop
inc
push
mov
mov
int3
xchg
pop
lahf
or
data16
out
mov
xchg
jbe
push
pop
std
push
mov
cmp
mov
cmp
stc
xchg
lds
js
inc
xchg
push
cmp
dec
mov
and
rcrl
jge
sub
add
mov
and
sbb
ret
iret
xchg
mov
xchg
mov
pushf
xorb
sahf
lcall
inc
inc
push
push
sub
cmp
into
jl
and
outsl
pop
cld
push
cmp
and
daa
sbb
je
iret
push
enter
and
xchg
mov
mov
cmp
shl
shlb
fsubrl
lcall
sub
hlt
sahf
loope
jmp
push
mov
dec
adc
xor
and
je
xor
pop
ds
out
addl
fistl
stos
std
mov
sub
loop
dec
mov
test
add
inc
jbe
rcll
mov
cmp
cmp
andb
pop
and
xchg
xchg
add
mov
or
sahf
push
mov
in
xor
xchg
xor
sahf
and
sub
push
adc
mov
sub
sbb
xchg
fdivl
jne
pop
ret
mov
sbb
push
out
jmp
repnz
popa
push
sbb
out
add
jno
and
das
mov
pop
dec
addl
dec
lcall
pop
out
je
mov
mov
std
mov
test
int
test
call
stos
loopne
mov
mov
imul
push
or
clc
push
fstpl
mov
cld
aaa
int3
sbbl
xlat
cmp
lret
pusha
lret
gs
test
sysret
pop
fwait
pop
loopne
dec
add
xor
sti
push
incb
push
mov
push
lret
aas
or
inc
xchg
sub
inc
sub
das
jne
mov
popa
mov
insl
xchg
clc
push
rclb
lea
jl
lds
fs
shlb
shlb
fsubl
jmp
outsl
rcr
xchg
dec
fwait
mov
dec
jecxz
addb
xchg
cmp
sbb
cmp
or
js
popa
pop
out
sar
dec
fs
fcomp
rorl
and
and
and
lret
mov
shl
decl
leave
icebp
fiadds
inc
sbb
jge
or
std
push
jbe
lcall
sbb
pop
cmp
mov
pop
outsb
push
xor
outsl
fcomps
mov
icebp
lds
test
jno
lods
insb
add
aad
call
sub
cmpsl
inc
out
movsl
mov
jbe
loopne
jne
mov
add
jne
sbbl
mov
xor
mov
and
daa
xchg
leave
mov
loopne
cmc
or
mov
and
sbb
sbb
test
mov
jae
ret
fsubrl
into
es
js
sub
inc
jno
mov
jmp
fldt
ljmp
mov
or
ja
xchg
stos
or
mov
inc
push
cmpl
repz
pop
adcb
and
jne
dec
push
stos
int
mov
js
sbb
je
cmp
jecxz
lods
lds
sti
cmp
lea
out
movsb
imul
and
jne
add
test
rcrb
lret
fisttpll
pushl
push
jns
loopne
jge
jb
dec
mov
scas
pop
cli
mov
mov
incb
cmc
xchg
stos
jl
push
nop
dec
dec
mov
scas
out
out
lcall
insb
addr16
testl
rolb
jge
lret
pop
mov
jns
pop
and
cmpsb
fldt
inc
shll
ds
lods
loopne
enter
lods
cmpb
sti
loopne
je
rcl
inc
add
lods
pop
mov
cmp
sbb
loop
jle
mov
cwtl
sub
or
out
cli
sti
in
push
inc
mov
mov
jo
and
inc
push
xchg
pop
sahf
enter
out
imul
movsb
sbb
mov
mov
add
push
lahf
pop
aas
scas
push
jb
jp
pop
mov
and
pop
pop
imul
cmp
lods
adc
sub
add
outsb
pop
xchg
test
or
jae
sarl
nop
mov
adc
sbbb
sub
sahf
dec
aam
roll
aad
dec
lds
adc
into
pop
cli
dec
xchg
sub
into
xchg
sub
outsl
mov
pop
xchg
add
movsb
std
adc
jb
insl
fidivl
pop
adc
jp
dec
jne
cltd
dec
rcr
xor
adc
js
iret
xchg
add
aaa
push
xchg
xor
add
fisubl
call
mov
negl
pusha
jmp
pusha
popf
jno
or
lock
inc
dec
div
and
mov
and
xor
out
xchg
pop
jno
and
sti
ja
add
push
js
mov
mov
inc
push
mov
adc
cmpsl
jbe
popf
lret
test
pusha
or
repnz
xchg
es
test
lods
push
mov
pusha
adc
mov
mov
pop
and
andb
jae
gs
fmulp
add
or
cmpsb
adc
ret
gs
add
dec
ret
xor
subl
xchg
push
adc
dec
sarl
pop
ret
aaa
mov
les
and
lahf
mov
jge
scas
jmp
sti
cmp
ret
js
lret
sub
sub
ret
mov
in
mov
and
adc
push
push
movsb
push
arpl
add
pop
inc
sub
and
mov
mov
xchg
addl
jecxz
dec
xchg
sub
adc
xor
call
xchg
mov
andb
sub
incl
cli
or
idivb
mov
stos
or
insl
inc
mov
or
or
mov
stc
push
int
sub
call
out
stos
outsl
into
scas
mov
fwait
push
mov
pop
sub
stos
sub
in
and
push
and
pop
imul
mov
sub
jnp
jbe
or
daa
pop
add
roll
fnstcw
or
lds
mov
scas
ljmp
test
fwait
jns
sbb
and
xchg
pop
push
scas
sbb
fildl
pop
mov
outsb
push
pop
rcll
aam
addr16
mov
out
mov
mov
and
mov
sub
push
rcrb
add
lods
mov
sbb
lcall
mov
or
lahf
mov
stos
push
in
mov
test
in
xchg
inc
mov
pusha
xchg
sub
sarb
jae
sbb
dec
popa
shlb
jge
repz
cmp
cmp
or
stos
js
xchg
mov
inc
pop
sbb
ds
pop
and
insb
add
lret
fcmovnu
shl
insl
lret
adc
sahf
push
fisttps
add
sub
sti
fsubl
mov
dec
pop
or
jb
mov
jmp
push
cmpsb
repnz
mov
mov
rclb
xor
jl
jecxz
sbb
pop
sbbb
cmp
and
filds
andw
call
test
mov
fbld
mov
lods
mov
xorb
jp
out
lock
xorb
xor
mov
ds
sahf
mov
popf
xchg
sbb
fiaddl
clc
xorb
add
or
xor
jno
xchg
mov
popa
pusha
icebp
or
mov
lahf
lcall
xchg
addr16
dec
andl
mov
pmaxub
jge
es
or
mov
and
das
mov
xchg
lea
cmp
jp
pop
mov
cmp
lock
mov
dec
imul
mov
add
iret
add
test
out
lret
mov
es
jle
push
add
test
inc
inc
mov
mov
ss
cmpb
pop
mov
daa
jl
inc
les
pusha
nop
rcrl
inc
insl
or
lcall
in
pop
hlt
leave
cmc
adc
test
add
fs
cmpsl
sub
inc
lret
dec
ljmp
pop
lret
mov
pop
lock
sbb
mov
cmp
jbe
jg
lock
leave
pusha
or
int3
lds
js
bound
pop
adc
cmp
xchg
pop
aad
cli
decb
imul
sbb
add
shl
js
outsl
dec
xlat
mov
out
cmp
rolb
testb
mov
sbb
pop
inc
mov
dec
xchg
or
mov
in
cmc
jbe
add
jmp
inc
jne
pop
add
xor
dec
gs
push
jae
pop
xchg
in
inc
cmp
test
out
fcomp
dec
sbb
mov
fs
dec
inc
xor
das
adc
pop
jecxz
daa
xchg
test
mov
adc
insl
fidivrl
daa
and
rcll
add
aad
mov
jne
arpl
nop
and
int
lahf
into
into
loopne
jge
add
push
inc
pop
aaa
inc
sub
push
jb
cmp
mov
mov
inc
mov
jne
xchg
sub
dec
cmp
in
cmp
in
or
sub
cmp
insb
adc
sti
push
mov
popa
push
ret
jne
cmp
and
repz
or
in
in
stos
dec
out
js
fsubs
push
cmp
lds
xor
sbb
mov
xchg
out
shlb
xchg
jbe
pop
jns
out
or
xchg
faddp
lea
inc
stos
sub
imul
data16
push
inc
push
loop
jno
popa
pop
xchg
out
sbb
cmp
fistl
loop
adc
js
nop
movsl
imul
dec
cmp
lock
fisubrs
adc
ror
mov
outsl
xor
lcall
mov
pop
jnp
stc
bound
push
or
xlat
or
dec
aaa
in
lds
rol
mov
mov
jge
sub
dec
lods
or
cmp
mov
mov
popa
aad
mov
push
dec
arpl
xor
imul
stos
mov
in
fwait
sbb
cmp
jne
xor
or
inc
dec
in
lock
adc
mov
push
dec
pop
je,pn
daa
pushf
lahf
or
inc
cmc
xor
sub
and
xchg
pop
mov
mov
dec
jo
in
sub
dec
sbb
pop
mov
enter
push
xchg
fnstenv
jecxz
subl
push
cwtl
xor
sbb
popa
push
and
mul
push
mov
icebp
mov
cmp
push
push
inc
test
es
sub
and
fs
into
dec
mov
hlt
cld
ror
clc
loopne
cmp
inc
dec
push
arpl
pop
lods
cli
lcall
pop
bound
and
dec
push
addr16
sti
push
inc
mov
stos
cs
mov
and
and
call
mov
jb
and
mov
xchg
sbb
add
std
pop
jl
arpl
inc
ret
or
xor
jns
inc
call
aad
xchg
loop
mov
mov
stc
pop
jmp
hlt
outsl
jecxz
imulb
lahf
fldl
ds
rorl
add
inc
insb
mov
dec
call
enter
jle
fwait
mov
adc
push
cwtl
in
mov
out
or
inc
loopne
aad
sub
lods
mov
mov
mov
lret
nop
dec
inc
movsl
dec
iret
push
mov
push
inc
dec
enter
shlb
sbb
aad
push
jle
xchg
mov
jnp
push
mov
das
aaa
adc
adc
insl
je
xchg
movsl
es
push
jbe
out
mov
jmp
fldl
add
fadd
lds
add
aam
outsl
lods
dec
adcb
sbb
out
mov
fisubrs
addr16
pop
in
test
loop
sbb
int
outsl
jne
sub
cmc
jns
sub
outsb
push
mov
fcompl
inc
fwait
xchg
les
imul
pop
ja
dec
std
sbb
sbb
rclb
add
arpl
jns
icebp
jae
inc
mull
repz
jae
mov
roll
hlt
jae
sbb
ss
inc
int3
jecxz
jle
and
jl
inc
dec
js
adc
inc
inc
jmp
or
lea
lea
inc
cmp
cmp
out
daa
and
test
repz
bound
mov
addr16
in
pop
int3
inc
cmp
lock
mov
jo
sub
dec
pushf
xchg
lods
sub
test
jns
mov
jnp
jo
out
dec
out
scas
and
mov
xchg
aaa
popf
cmc
insb
and
std
shrl
xchg
ljmp
mov
xchg
jo
sub
xchg
ds
ljmp
std
push
insb
mov
sbb
orl
stos
pushf
xchg
jg
adc
fmulp
cmpsl
lret
inc
xchg
lahf
and
sbb
mov
inc
repz
xchg
repz
notl
in
dec
pop
mov
pushf
jns
int
or
fcomps
cwtl
cmp
xorb
frstor
sub
repnz
sbb
popf
mov
mov
or
je
bound
xor
mov
inc
mov
cltd
testl
sub
loop
cmc
cmpl
cltd
imul
cmpsb
push
mov
outsl
mov
cs
cmc
popf
cmp
adcl
loop
clc
jb
insl
std
in
cmp
mov
push
sub
mov
sub
xchg
push
aad
ficoml
push
mov
xor
and
sub
mov
jno
repz
inc
pop
insb
and
inc
jbe
movsl
cmp
sub
inc
fsts
ficompl
shr
dec
mov
fwait
sub
ret
movsl
aas
rcrl
rcll
adc
dec
addl
push
add
adc
in
test
aas
dec
test
jg
xchg
xchg
mov
cmp
out
fs
aaa
psrlq
hlt
mov
mov
cmp
xchg
and
and
sub
add
scas
adc
cmp
ret
pop
sub
xor
jns
cvtps2pi
pop
and
rdtsc
xor
aaa
nop
ret
daa
xor
pop
jns
lcall
xorb
in
iret
shl
faddl
mov
mov
jmp
pushf
jl
loopne
leave
jge
cs
dec
sub
sub
xor
or
mov
in
in
mov
mov
jbe
cmpsl
inc
outsl
cltd
inc
jne
in
jmp
jg
cmp
fchs
lods
xlat
gs
add
inc
jbe
aam
mov
inc
clc
mov
inc
inc
jne
mov
jns
inc
mov
std
dec
jns
mov
repnz
out
sbb
clc
int3
andb
adcb
sti
add
pop
and
insb
cmp
mov
sbb
push
nop
mov
and
push
hlt
add
lret
inc
push
pop
sub
add
push
cld
rorl
xor
push
mov
and
clc
std
nop
outsl
test
stos
mov
outsl
push
daa
mov
xor
es
or
sbb
mov
aas
adc
or
jae
mov
fiadds
add
xchg
lahf
mov
cmc
cmp
adcl
push
dec
mov
cmp
stc
add
mov
and
lcall
ja
mov
sub
je
out
out
mov
lock
les
mov
loope
test
push
and
ret
mov
out
mov
push
or
lcall
lods
ljmp
out
jbe
pop
daa
xor
inc
das
push
repnz
jmp
call
iret
and
push
enter
xchg
ja
mov
pusha
cli
and
lock
add
jecxz
sar
pop
dec
std
je
aad
fcmovb
or
lods
aad
inc
push
rcll
dec
add
inc
cmc
add
mov
push
push
call
xchg
push
ret
cs
addr16
mov
sbb
adc
aaa
add
lret
ret
cmp
mov
cld
cs
pop
sub
mov
sub
loopne
rcrb
jle
cmp
inc
xor
xor
xor
inc
imul
mov
sub
jmp
mov
add
out
test
clc
fwait
sub
lret
fs
test
xorb
sub
push
std
inc
pushf
sar
aas
loope
notb
cmpl
sbbb
xchg
mov
es
lds
cwtl
test
xor
cltd
and
fnstenv
jg
pop
testb
cmpb
mov
div
xchg
cmpsb
mov
mov
loop
cwtl
imul
mov
imul
lods
shlb
aad
in
pop
adc
pop
sub
in
pop
fdivrl
and
xchg
movsl
mov
mov
ret
push
cmpsb
mul
pop
inc
inc
filds
mov
push
xor
and
in
or
dec
cld
inc
or
out
loop
into
inc
aas
hlt
xchg
mov
call
jne
scas
add
cmp
mov
pop
pop
dec
ss
sub
stc
in
stos
add
jge
mov
inc
add
and
mov
ja
push
dec
notl
and
dec
lret
mov
or
out
sti
add
or
xor
sub
push
jbe
fcompl
mov
dec
mov
sbb
pop
shlb
mov
jne
push
jl
pop
inc
fcmovnb
sub
divb
test
stos
mov
arpl
scas
dec
lahf
addr16
nop
or
xor
cmp
cmp
and
adc
jmp
xchg
jmp
sub
or
in
lcall
add
pop
test
rcrl
or
cwtl
jbe
add
xlat
jecxz
jmp
fldcw
xor
lahf
out
push
fdivl
pop
and
sub
imul
jne
push
out
fsubrs
mov
nop
movsb
int
add
xor
jle
stos
movsl
sub
into
and
adc
mov
mov
pop
insb
std
mov
mov
sub
mov
xor
sbb
push
sarb
jg
fldenv
adc
xor
dec
notb
jl
fisttpll
pushf
pop
pop
adc
rorb
data16
mov
in
negl
push
sub
sarl
das
mov
push
push
dec
cld
daa
in
xchg
test
cmp
pop
mov
jo
jg
fildl
jae
lcall
mov
mov
fdivl
adc
call
insl
add
xchg
bound
mov
das
pop
push
ror
mov
into
ficomps
xor
lahf
icebp
movsb
lret
sub
and
cli
lods
inc
call
xchg
mov
aas
push
inc
imul
sub
nop
add
cmp
add
shl
ret
imul
inc
xchg
out
push
mov
dec
aad
sahf
jae
mov
leave
div
add
pop
sahf
shrb
test
pop
adc
or
xor
push
fldpi
incl
loop
adc
or
pop
mov
xor
dec
xchg
pop
lcall
sti
fmul
adc
and
fs
mov
sbb
or
popf
push
lcall
fsubrs
lock
insb
adc
adc
and
lahf
or
xchg
mov
sub
icebp
repnz
push
push
sub
ljmp
dec
mov
ret
mov
sarl
add
xchg
adc
add
dec
sbbb
das
mov
push
ficompl
cmp
into
emms
jnp
add
sbb
xor
lods
jp
imul
xchg
lock
mov
mov
stos
stc
mov
rorl
gs
push
cmp
adc
popf
insb
mov
int
cmp
fisttpll
sub
cld
adc
sbb
into
mov
jge
repz
mov
rcr
out
sbb
or
mov
inc
mov
inc
or
cwtl
pop
mov
out
or
mov
inc
out
test
mov
mov
test
in
cmp
dec
jecxz
mov
ss
dec
add
cmp
sbb
push
and
push
push
push
out
pop
mov
ficompl
and
fistl
sbbb
sbb
cmp
push
and
fidivs
fst
lods
jge
mov
add
jle
sbbl
mov
jmp
inc
lods
inc
scas
in
push
pop
aam
stos
dec
fisttpll
outsl
ffreep
inc
jl
sbb
dec
sbb
or
jno
cwtl
sbb
out
stos
es
push
push
sti
fcmovu
xchg
push
push
xchg
push
fcoms
fldl
adc
cmovbe
mov
mov
cld
movsb
lret
pusha
rcr
push
add
shll
test
jp
and
adc
in
cmp
movsl
lahf
scas
xchg
ja
icebp
cmpsb
mov
idivb
mov
dec
jae
and
filds
subl
pop
in
mov
jne
int3
dec
loope
and
xchg
xchg
movsb
or
lea
repz
leave
pusha
out
xchg
into
in
mov
outsl
lods
pop
cwtl
movsb
pop
pusha
dec
repz
mov
fisubl
or
enter
jge
jne
inc
test
inc
ljmp
ds
rcll
inc
sbb
out
cmpl
stc
mov
dec
scas
into
aad
lret
nop
jbe
fs
adc
lock
jbe
push
pop
outsb
out
xor
push
fimull
ljmp
cltd
push
aaa
push
subb
dec
push
fidivrs
dec
mov
xchg
imul
adc
xchg
aam
and
jno
mov
aad
dec
cmc
or
jge
test
subb
lea
jbe
pop
cli
fldenv
insb
pop
dec
cmpsb
rcr
and
scas
sbb
ja
mov
jmp
lods
and
xor
popa
dec
icebp
pop
mov
pop
cmp
insl
test
andl
das
rol
sub
mov
xor
